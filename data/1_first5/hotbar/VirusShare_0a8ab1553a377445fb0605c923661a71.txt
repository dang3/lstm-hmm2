divb
in
mov
mov
mov
inc
add
add
out
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
movl
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
inc
push
adc
add
inc
sub
fcmovnb
les
mov
push
mov
xor
push
mov
call
pushl
fwait
mov
mov
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
orw
mov
sbb
adc
cwtl
jle
rcrb
repnz
add
jae
in
or
mov
cmp
xor
or
pop
cmpsl
push
jl
in
cmpsb
cmp
lea
data16
push
call
sub
mov
add
pop
pop
pop
push
loopne
jno
sub
jecxz
mov
lea
mov
adc
leave
das
add
mov
leave
mov
sbb
dec
or
jbe
ret
ja
push
and
enter
adc
jo,pt
sbb
push
xchg
mov
inc
cmp
add
cmpb
mov
movsl
mov
xlat
insb
ja
ja
add
and
add
push
mov
sahf
add
sbb
dec
cmp
je
out
pop
ja
xor
adcl
cmc
jne
imul
jmp
push
sub
xlat
add
sub
insl
sbb
pushl
add
push
push
push
iret
bound
fidivrl
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
outsl
push
rolb
js
sti
mov
mov
xor
mov
pop
ret
arpl
xor
stos
pop
roll
pop
imul
rcrl
sar
pop
inc
sub
inc
clc
sub
pop
or
xchg
push
ss
cmpl
adcl
xorl
adc
jg
mov
adc
addr16
dec
or
ret
shrl
out
stos
loop
push
push
lock
pop
outsl
jmp
das
pop
pop
adcl
incl
push
mov
sar
xor
cmp
ja
adc
fisubrs
lock
sub
add
push
movsb
inc
xor
xor
sbb
jo
push
sub
sbb
mov
out
cli
jg
jno
loop
lds
iret
jle
mov
cmpl
sub
push
filds
ret
add
jge
in
mov
testb
add
pop
cltd
sub
shrl
fwait
in
enter
mov
mov
push
loope
cwtl
dec
mov
dec
push
or
cmp
jl
cmp
jne
pop
mov
inc
bound
aas
mov
cli
jmp
mov
push
jbe
mov
add
rorl
mov
mov
or
adc
lea
adc
fildl
mov
pop
hlt
into
mov
adc
cmpsl
out
and
insl
stc
mov
cmpsl
mov
cld
fisubrs
xlat
ja
lods
lea
stos
mov
clc
cmp
lea
or
test
jle
insb
or
cmp
mov
inc
sahf
mov
add
jl
pop
ds
insl
cmp
icebp
in
pop
pop
fwait
push
push
cmp
adc
jg
decl
mov
in
jns
mov
pop
idivl
add
aad
jmp
sub
gs
cli
andl
ret
and
add
es
adcb
mov
sti
jmp
hlt
jg
pusha
cmp
or
inc
sbb
push
dec
cmp
aas
in
adc
hlt
movlhps
hlt
cmp
jle
lds
or
out
lret
clc
pop
pushf
cmpl
je
push
cmp
cmp
jae
push
or
mov
xchg
pop
mov
or
add
xor
icebp
jb
pop
add
xchg
pop
jmp
ret
lea
ljmp
or
mov
ret
push
push
rcrb
jecxz
clc
mov
jmp
xchg
jmp
inc
or
ret
push
cmpsb
imul
cld
pop
xor
lods
lods
jo
and
and
inc
sub
test
aad
aaa
stos
sar
testl
inc
or
pop
or
cmp
sti
call
stos
push
mov
lea
cmp
jne
push
push
bound
xor
push
test
push
push
add
pusha
pop
pop
loopne
ret
adc
mov
jne
cmp
shrl
and
add
nop
ds
adc
xor
lock
lahf
out
and
xchg
add
out
sti
fnsave
fstpt
mov
xchg
aas
addr16
add
or
mov
insl
ficompl
sti
push
or
cwtl
push
fcomip
rcrl
push
data16
or
mov
sbb
shl
dec
out
sbb
outsl
cli
sub
notb
add
adc
or
dec
push
mov
sti
rol
repz
inc
xor
push
ss
sub
lea
dec
push
mov
cmp
xor
add
ss
out
jmp
add
add
sbb
xchg
out
pop
add
cmp
mov
and
dec
inc
out
jnp
push
or
popf
lea
push
push
iret
cmp
ret
push
mov
fwait
xor
push
shlb
ficompl
adc
pop
inc
icebp
in
and
push
scas
dec
out
cmp
push
insl
push
cmp
push
inc
cmp
je
pop
cmp
out
mov
adc
sbb
in
jne
imul
cmp
cwtl
jo
pop
mov
mov
adc
xchg
fs
push
rolb
leave
jb
cmp
repnz
lock
sub
test
or
mov
aam
jp
or
jbe
divb
movsl
mov
mov
stc
mov
add
mov
cmp
adc
jge
cs
fiadds
inc
jno
add
or
jns,pn
jp
test
or
addr16
lcall
mov
sub
xchg
add
or
sub
adc
or
add
shrl
mov
push
mov
dec
ret
shlb
dec
or
clc
clc
dec
lock
icebp
and
pop
adc
ret
mov
push
push
shrl
xlat
push
xchg
sbb
sbb
imul
loopne
dec
inc
adc
xor
inc
mov
icebp
aad
add
jnp
and
mov
sub
call
sub
mov
inc
pop
inc
ficomps
xlat
push
lahf
add
xchg
add
jns
sbb
ret
je
dec
je
push
adc
or
adc
lcall
call
hlt
and
adc
iret
jo
popf
and
push
out
inc
fmuls
rclb
std
clc
push
push
mov
push
out
or
cli
xor
fadds
mov
roll
and
pushf
pop
add
ds
cmc
andl
sbb
inc
andl
test
xor
pushf
or
into
test
mov
sarb
jbe
add
pop
or
and
xchg
add
mov
cmp
adc
out
sbb
or
or
sub
or
fcomp
js
and
adc
popa
add
shl
rcrl
push
in
dec
call
in
loopne
dec
mov
fcomps
sar
inc
pop
xlat
mov
dec
andb
add
pop
sbb
test
push
mov
add
popa
negl
push
pop
ds
sti
sbb
push
xchg
stos
pop
dec
sub
xor
loope
adc
cwtl
push
sbb
jp
adc
lea
cmp
movsb
adc
aaa
sub
sbb
and
loope
mov
mov
hlt
jl
ret
pop
adc
loopne
mov
test
clc
mov
out
add
mov
push
aas
pop
mov
jl
cld
cmp
jl
or
dec
nop
popa
fnstsw
jne
fcoms
push
movsl
cmp
lock
add
or
in
repnz
into
or
shl
dec
mov
sbb
inc
mov
mov
scas
mov
xchg
in
xor
xchg
sbb
repnz
inc
aas
push
inc
fs
xchg
add
jo
mov
push
in
jae
nop
out
cwtl
adc
adc
mov
scas
adc
vdivps
lahf
xlat
lea
push
push
or
pop
out
sbb
sub
mov
lea
inc
subl
or
xchg
xor
add
xchg
pop
sahf
out
pop
sbb
sbb
add
jl
dec
in
or
bound
scas
mov
ljmp
loopne
mov
mov
mov
mov
inc
call
push
mov
push
xor
das
pop
loope
mov
not
xchg
inc
pop
push
jo
or
stos
or
mov
mov
in
push
jnp
add
in
mov
cwtl
pop
in
jne
push
pop
jp
pop
imul
sub
in
rolb
sbbl
and
sbbb
loope
xchg
aaa
xor
xchg
cmp
les
dec
fstl
sbb
pop
pop
add
in
nop
jmp
ret
push
in
cmp
xor
mov
jge
mov
jnp
decl
inc
xchg
test
enter
out
add
loopne
in
loopne
movl
lock
mov
push
aaa
cmp
popf
je
imul
sbb
cmpl
icebp
bound
loopne
adc
in
push
roll
mov
jmp
pushl
add
add
fldt
pop
xor
pop
cmp
in
decl
pop
push
and
test
add
or
push
jo
xor
loope
and
jmp
filds
xchg
sbb
push
push
sbb
in
push
and
neg
sbb
pop
les
mov
je
push
in
and
out
and
ret
dec
sahf
inc
cs
cltd
fs
enter
cwtl
lods
cltd
xchg
out
mov
mov
stc
sub
xor
cmc
imul
lock
xor
add
jb
notl
push
lods
cmp
inc
cmpsb
lods
add
sub
mov
jns
mov
mov
dec
cmp
fiadds
scas
jns
jecxz
mov
sbb
add
dec
hlt
adc
sub
lcall
dec
mov
dec
jnp
stc
push
inc
add
out
cmp
mov
sti
loopne
sahf
dec
imul
or
pop
push
aam
adc
cmp
fidivl
sbb
mov
nop
adc
adc
enter
movsb
fcomps
dec
leave
jae
adc
xchg
les
and
clc
mov
in
pop
mov
xchg
sbb
in
int3
sbb
leave
xchg
cmp
int3
clc
arpl
ret
sbb
enter
inc
adc
rcrb
in
fwait
fs
shrb
mov
jb
mov
cmp
mov
mov
pop
test
push
sub
dec
inc
test
jmp
out
mov
pusha
and
xchg
and
push
shll
pop
mov
mov
sti
lods
rolb
pop
pop
cwtl
arpl
das
out
pusha
inc
inc
sbb
jo
pushf
mov
sarb
sbb
adcl
cmpb
jmp
lret
inc
imul
hlt
push
and
sub
mov
push
xor
sbb
and
rolb
push
add
repnz
stos
adc
loopne
popa
imul
pop
jle
lods
add
inc
push
jl
in
andb
test
inc
pop
mov
and
inc
adc
inc
fwait
adc
adc
sbb
push
sti
dec
punpckhwd
or
je
test
mov
test
cmp
dec
push
jae
lea
jns
or
sbb
and
cwtl
adc
add
xchg
mov
and
push
adc
pop
and
dec
jae
adc
daa
add
cmp
jae
adc
lea
jmp
add
leave
aad
pop
jne
fildl
pop
cmpsb
or
nop
push
nop
xchg
xor
leave
mov
and
pop
or
jle
test
scas
flds
loop
xchg
dec
mov
xchg
xor
adc
enter
or
insl
mov
push
sbb
and
daa
pop
jbe
jl
mov
nop
sbb
mov
sbb
jns
leave
push
jecxz
mov
jne
adcl
mov
nop
aaa
adc
test
pop
movsb
sbb
icebp
aad
adc
leave
subb
jno
ret
pop
sar
cmc
push
loope
add
into
pushf
loop
dec
adc
xchg
outsb
and
mov
inc
adc
in
add
cmc
dec
push
mov
adc
repnz
lret
insl
pop
push
add
iret
loopne
lock
outsl
loop
push
mov
neg
pop
xchg
mov
jno
ret
repnz
jno
test
ficomps
pop
cli
sub
xor
movsb
cmp
cltd
outsl
and
pop
jbe
popf
xor
das
push
loopne
cmp
xor
cwtl
loopne
push
sahf
les
xor
pushf
pop
sub
loopne
ss
and
pop
push
cmp
testl
imul
cmp
je
or
je
xor
push
push
mov
inc
add
subb
or
imul
mov
or
repnz
inc
or
leave
aad
and
jp
push
push
mov
add
ret
or
add
pushf
mov
xor
push
cmp
mov
xor
sbb
lock
and
fstpt
sbb
sti
sub
hlt
je
push
push
pop
xor
pop
sbb
push
rcl
pusha
lock
jp
mov
and
cld
clc
adc
and
roll
add
ljmp
subb
add
sahf
sub
mov
add
dec
sub
push
sbb
and
daa
fbstp
add
adc
push
and
and
sub
pop
sub
push
popf
test
pop
mov
mov
and
jnp
mov
cwtl
and
je
aas
loopne
mov
incb
xchg
inc
pop
or
jmp
es
test
les
jo
push
fsubrs
aam
sbb
sub
pop
sub
cmpb
sub
inc
adcl
cwtl
sub
jno
add
inc
lret
ret
inc
lret
ret
test
mov
nop
stos
lret
or
jne
mov
stos
add
adc
xchg
inc
pop
xor
clc
push
insb
stos
xor
sarb
dec
cmc
cmp
ss
pop
insb
adc
push
lods
mov
mov
sub
push
test
fsubs
jne
jo
stos
add
mov
add
enter
sbb
cmp
inc
push
fcomps
pop
ror
push
pop
dec
adc
push
sub
push
das
add
rclb
adc
aam
dec
or
dec
out
call
mov
sti
lahf
mov
push
fwait
clc
adc
cmp
mov
push
rorb
add
loopne
sahf
xor
cmp
test
jmp
cmp
nop
xchg
sub
sub
sbb
dec
mov
pop
repnz
dec
cs
cmp
adc
sbbl
xor
xchg
sub
cmp
mov
gs
loopne
es
mov
jnp
shrb
xor
sub
cmp
inc
shlb
lods
cmp
popa
nop
add
and
xor
and
inc
sar
pop
xorl
popf
orl
ret
loopne
push
repnz
adc
je
pop
cmp
cmp
push
andl
and
xor
shrb
mov
dec
aaa
outsb
mov
push
call
sub
mov
and
inc
jb
add
pop
std
jns,pt
cmpsb
adc
fisttpl
imul
stos
xchg
les
sti
xchg
or
adc
jmp
mov
mov
mov
fildl
inc
in
xchg
imul
push
je
xor
sbb
nop
out
adc
sub
adc
dec
out
arpl
mov
push
je
push
push
add
into
jp
cmpsb
inc
inc
pop
mov
adc
mov
je
sbb
pusha
lock
sub
sub
bnd
push
sub
call
popa
dec
das
mov
xchg
mov
dec
sub
clc
inc
mov
jmp
cmp
push
out
push
jo
mov
fldenv
inc
inc
sahf
int3
add
mov
jmp
mov
stos
lock
push
popa
stos
mov
loopne
sub
adc
mov
scas
scas
push
out
stos
mov
inc
push
mov
pop
rcrb
push
out
jge
orb
enter
and
push
andl
aam
add
xchg
or
loopne
pop
jge
cmp
rol
rclb
dec
adc
ret
sbb
mov
mov
negl
dec
js
push
ret
jle
xchg
inc
out
pop
nop
dec
cmp
mov
and
into
add
fisttps
cmp
jne
ljmp
or
sub
das
add
in
sti
xor
inc
jg
or
sahf
inc
das
mov
cli
xor
and
xor
cs
xchg
push
pop
pop
test
push
test
shl
cmpsl
sbb
out
out
jne
or
xchg
or
cmc
jo
inc
sti
mov
loop
test
call
and
loop
rolb
sub
sbb
mov
sub
shrb
incl
jl
pop
xchg
inc
in
sbb
fdivrs
mulb
push
out
inc
out
test
and
or
inc
aad
add
scas
sbb
mov
div
inc
shrl
pusha
inc
jne
aad
movsb
jno
push
push
jmp
push
aaa
mov
in
push
fiaddl
jg
mov
or
push
push
outsb
les
or
test
repnz
int3
add
adc
adc
aam
fdivrs
push
fcoml
inc
adc
cld
or
push
je
cmpsb
push
ds
in
rolb
mov
jnp
and
lock
idivl
ss
jmp
jge
imul
push
jmp
cs
jp
ret
jmp
lock
jg
or
push
xor
and
cli
xchg
and
push
push
cmp
in
das
xor
xor
inc
insl
sbb
jecxz
jns
jg
inc
sbb
jge
push
mov
aad
pushf
icebp
xor
inc
mov
sarl
adc
scas
cmpb
adc
push
aaa
fs
jle
sarl
ljmp
ds
insl
pop
mov
add
jecxz
push
mov
lds
sti
and
push
mov
lock
cmp
push
sarb
pop
mov
push
push
in
add
aad
movsb
add
clc
add
mov
xor
sbb
shlb
sub
mov
stos
insl
sbb
cli
daa
loopne
xchg
add
xor
jge
or
pop
lea
ds
les
add
shlb
mov
sbb
out
inc
cmpl
pop
shlb
or
adc
xchg
rcrb
into
in
mov
xchg
in
cld
xor
cltd
mov
xor
jns
loopne
pop
sahf
xchg
test
or
jno
xlat
insl
imul
sbb
jns
cld
fisttps
mov
test
add
mov
xor
dec
add
mulb
or
inc
cmp
mov
popa
xor
add
test
cmp
test
push
repnz
es
adc
add
sbb
and
mov
jp
fdivrl
xchg
dec
jle
add
adc
dec
in
loopne
pop
cld
loopne
cmpb
es
push
add
fmuls
adc
call
cmp
jp
fcmovnbe
push
arpl
aad
push
sub
push
add
fwait
mov
loopne
mov
or
push
test
add
mov
mov
or
daa
pushf
mov
mov
stc
adc
scas
in
sub
push
in
sbb
inc
mov
scas
sbb
pop
lea
inc
mov
and
clc
inc
pop
cmp
mov
jb
popa
jl
ret
push
push
call
and
pop
dec
cmp
addl
outsb
je
fs
add
inc
mov
mov
rcll
icebp
or
pushf
inc
push
loope
loopne
out
mov
mov
or
push
jl
add
test
je
mov
pop
or
mov
dec
push
cmovns
jp
loopne
adc
add
nop
push
and
pushf
cmp
shrl
pop
xor
mov
call
mov
sub
sub
enter
fxch
pop
cmp
adc
aam
out
in
in
adc
pushf
loopne
in
addr16
pop
ret
add
xchg
arpl
jg
xor
inc
mov
pushl
call
mov
std
pop
mov
push
ret
shr
movzbl
push
adc
sbb
fwait
push
ret
push
ret
dec
push
aam
adc
mov
xor
mov
cmpsl
jle
frstor
popf
cmp
data16
xchg
mov
lea
xchg
mov
push
gs
pop
xor
ret
pop
mov
out
jp
lret
push
xor
loopne
pop
or
add
lret
jb
or
ss
arpl
add
sti
jle
push
add
push
push
mov
decl
jg
mov
mov
jmp
outsb
and
mov
lds
fsubrs
xchg
pop
fucom
enter
sbb
mov
push
enter
in
aas
ljmp
insl
sbb
xlat
cmpsb
adc
loope
dec
ds
jecxz
inc
pusha
je
aaa
outsb
sub
mov
subl
sbb
push
pushf
ret
add
sub
cmp
scas
clc
push
ret
push
pop
jmp
mov
push
cmp
mov
test
push
push
push
int
sub
in
add
sub
jne
sub
sbb
jp
sub
adc
pop
sbb
or
fcomip
push
xor
inc
cmp
jae
ds
or
xor
ja
dec
push
xchg
std
and
divb
mov
xchg
je
add
fiaddl
testb
sub
test
cmpsb
pop
imul
add
jl
in
js
mov
add
push
adcl
push
js
mov
roll
mov
sar
push
inc
cld
mov
popa
nop
add
mov
sub
jp
insb
pop
xor
adc
cli
lea
ljmp
pop
inc
cld
or
push
test
xor
imul
leave
pop
in
mov
sbb
enter
jb
inc
orl
fcom
cmpsl
cmp
jb
out
push
out
ss
dec
inc
xchg
je
sub
jle
test
js
inc
dec
hlt
jg
hlt
or
add
loope
push
je
sub
pop
movb
sub
fdiv
loope
xchg
add
inc
mov
push
in
or
push
push
setne
inc
mov
cmp
push
inc
rorl
jl
cld
sahf
test
cmp
jl
repz
push
jmp
mov
loop
or
shll
adc
xchg
popa
pop
push
cmp
int3
jbe
fwait
mov
mov
push
push
xchg
insb
daa
int3
sub
push
mov
adc
or
out
adc
fnstcw
unpcklps
push
inc
sub
push
fisubrl
add
mov
ret
je
mov
fdivrs
mov
jp
mov
add
shrb
mov
aam
movsb
push
dec
sbb
imul
or
cmp
into
js
or
movb
mov
rolb
sub
xor
sub
lea
jae
sti
test
adc
adc
testb
mov
fadd
je
push
and
xor
add
inc
pop
xchg
imul
xlat
dec
or
aam
or
and
adc
sub
jmp
icebp
jb
lds
cmp
jne
cmp
je
imulb
sarb
xor
inc
cmp
jmp
push
push
push
and
inc
and
adc
movb
or
add
sbb
or
icebp
xorl
out
aas
dec
fwait
push
shlb
push
ret
push
push
push
ljmp
fmulp
or
pop
pop
sbbl
or
mov
test
mov
or
jne
das
movsb
pop
cmpsl
ljmp
fiaddl
mov
js,pt
push
aad
jno
clc
jg
jo
psrad
adc
or
sub
pusha
mov
adc
sub
push
adc
fwait
push
test
mov
rorl
js
push
decl
or
lret
or
add
add
jno
jae
and
lock
lock
pushaw
test
xlat
xor
adc
add
adc
mov
pop
test
pop
mov
rorb
pop
dec
push
in
xchg
pop
add
mov
or
adc
arpl
or
movsb
push
jmp
push
rcrb
push
push
addr16
fimull
cmp
adc
mov
pop
push
cmp
push
inc
test
movsb
inc
inc
pop
cmp
hlt
call
hlt
sub
sar
nop
cmpb
adc
lcall
je
pop
push
ret
loope
inc
lds
mov
mov
mov
ret
insb
cld
cmp
lea
popf
shr
js
add
push
test
rcrb
leave
inc
xchg
mov
xchg
mov
xchg
add
shr
movl
add
inc
loope
cmpsb
add
in
add
pop
popf
icebp
ds
add
daa
mov
push
or
and
or
jae
outsl
mov
add
adc
ret
enter
xlat
jecxz
xchg
jo
adc
lahf
test
push
in
sbb
fmull
push
scas
mov
jbe
sbb
je
sbb
push
bndstx
sti
inc
and
shlb
rorb
cmp
jle
repnz
push
or
dec
xchg
mov
lods
test
xchg
add
sar
push
nop
xchg
sub
incl
insb
fdivrs
dec
sub
ds
pop
fldt
enter
adc
jb
sub
imul
nop
adc
movl
dec
mov
push
sbb
or
inc
xchg
call
pop
cmpsb
mov
adcl
addr16
cmpsl
repnz
jno
add
adc
loop
lret
cmpsl
push
and
fldcw
jno
test
inc
push
inc
repnz
jo
sbb
pop
ficoml
jge
xchg
or
xor
inc
aad
mov
push
pop
mov
shl
in
xor
jp
cmp
mov
pop
leave
adc
clc
nop
mov
add
enter
enter
and
sbb
in
dec
sbbb
je
sub
dec
inc
dec
popf
mov
jge
and
pop
enter
lea
inc
mov
cltd
mov
push
pop
cmpsl
int3
xchg
aas
cs
add
cmp
fldl
push
nop
and
cli
out
mov
in
xchg
or
fwait
pusha
push
xchg
in
dec
mov
test
add
mov
in
jmp
imul
test
lods
mov
lcall
pop
sbb
dec
pop
in
push
stos
lock
xor
rolb
sbb
mov
mov
and
push
adc
jae
lock
lret
adc
dec
daa
adc
dec
into
aam
jb
push
inc
fisubrs
mov
int
lea
mov
add
or
or
dec
clc
and
adc
pop
sub
sbb
pop
ret
mov
dec
add
int3
cmp
sbb
pusha
fldt
nop
jns
inc
pop
pop
dec
sti
pop
dec
es
push
push
in
push
pop
adc
lds
dec
adc
push
mov
push
mov
fs
ret
and
and
fwait
in
nop
xchg
outsl
cmp
sbb
and
ret
push
add
inc
movsl
mov
sub
inc
ret
cmp
pop
addr16
push
outsb
imul
fwait
cmp
push
jp
enter
sahf
les
stc
movsbl
sbb
and
stc
adc
cmp
popf
data16
jg
jge
inc
pop
sbb
cmp
push
mov
cmpsb
dec
in
shrl
pop
negl
cmpb
add
cmp
add
mov
cmp
push
jl
das
cs
mov
jbe
mov
shr
ds
arpl
pop
mov
add
add
jbe
xchg
insl
jmp
outsl
icebp
mov
cmp
jmp
negl
outsb
sub
dec
je
into
adc
in
jge
xchg
push
push
sbb
adc
out
dec
mov
dec
inc
jmp
or
andb
leave
jmp
xchg
and
jg
push
shlb
popa
std
scas
jmp
push
add
push
mov
xor
sbb
cli
and
add
mov
movsb
addb
xchg
pushf
fnstsw
sub
push
mov
sahf
jg
mov
loope
cli
mov
mov
add
hlt
and
push
aaa
xchg
jl
mov
xor
push
push
daa
pop
mov
jo
js
xor
lea
dec
and
pop
sub
mov
rcrb
sbb
fucomi
jp
cmp
je
cmp
pop
test
shlb
leave
adc
cli
jge
lahf
mov
cmpsb
sbb
fstpl
imul
jmp
sbb
and
push
cmp
pop
inc
jmp
and
jmp
xchg
loope
dec
icebp
sbb
adc
out
mov
xlat
pop
push
inc
push
dec
push
pusha
jns
jns
out
ror
lcall
mov
cltd
inc
sbb
mov
mov
add
pushw
and
adcb
sbb
insb
fstl
lea
sbb
inc
adc
sub
mov
or
movb
add
cmp
or
xchg
xchg
clc
xchg
repnz
jge
aaa
mov
push
dec
push
mov
pop
push
xchg
icebp
pop
icebp
lea
push
push
push
push
add
push
lea
mov
xchg
pop
inc
pop
leave
mov
dec
mov
and
mov
push
sahf
ficoms
stos
add
sub
lea
movl
adc
imul
xchg
adc
sbb
push
xchg
push
cmp
movsb
push
je
lea
pop
cltd
sbb
push
aam
sbb
pop
push
push
or
jl
inc
xor
add
aad
cmp
push
cmp
leave
pop
or
nop
fstp
daa
mov
xorl
mov
in
push
or
push
push
xchg
dec
je
mov
jno
jle
ss
push
clc
pop
rclb
pop
andb
inc
cmp
jecxz
cmpsb
bound
cmpsl
pop
inc
insl
pop
cmpsl
add
aas
aad
jne
or
dec
repz
add
mov
jno
pslld
lea
push
fildll
inc
and
repz
mov
push
push
enter
push
in
xlat
dec
pop
in
pop
inc
pop
ret
and
in
push
into
xchg
inc
or
add
shrb
je
xor
sub
cmp
je
dec
jge
lea
testb
data16
fcoms
aad
jns
jg
cmp
push
push
push
cmp
mov
shlb
dec
lret
push
pop
sbb
or
push
out
ret
cmpsb
inc
jl
lcall
mov
ret
cmp
xlat
push
xchg
and
sub
lock
rclb
pop
mov
popa
aam
push
aam
das
in
cmp
pop
insb
sbb
lahf
push
jne
int3
push
icebp
gs
jae
add
fcoml
sub
dec
fildl
cmp
bnd
mov
add
inc
daa
imul
fdivr
ret
sub
mov
lods
test
scas
xor
adc
ja
dec
fmul
cmp
jne
push
sub
xor
mov
clc
js
std
pop
rorb
xor
sbb
je
lea
push
mov
rolb
mov
jo
loope
orb
nop
push
sbb
cmp
fcomip
pop
pushl
call
push
or
adc
nop
insb
mov
cmpsb
jns
lcall
les
inc
push
mov
lock
pop
mov
push
adc
dec
lea
dec
push
push
lea
push
fsubs
cmp
fimuls
ret
inc
dec
sub
in
dec
jmp
sub
in
lret
xor
sub
jle
shlb
in
cmp
push
mov
add
mov
imul
inc
xlat
dec
jl
inc
xor
adc
or
push
mov
popf
shr
and
xor
jne
sub
out
es
lock
mov
into
xor
sbb
add
test
dec
inc
and
fistpl
jp
dec
pop
xchg
pop
repnz
lock
xor
jg
in
and
divl
cmp
push
push
pop
push
negb
scas
mov
mov
mov
jg
cmpsb
dec
lods
push
fimull
leave
adcl
scas
lock
push
push
out
cmp
jae
cmp
adc
fists
enter
pusha
fs
mov
adc
mov
aaa
add
adc
xchg
push
push
or
aaa
sbb
jmp
and
test
cld
adc
mov
xchg
jo
pop
pop
and
fwait
and
rcr
mov
in
pop
ljmp
js
push
daa
lock
call
cli
fdivrs
cmpl
jne
pushl
in
push
push
jl
dec
sbb
push
cs
mov
adc
xorl
adc
push
scas
push
push
inc
cmp
fmuls
mov
and
inc
dec
add
mov
flds
push
jg
sti
cmp
je
cmp
mov
mov
sti
sbb
pause
mov
pop
jno
add
push
or
mov
inc
push
add
dec
lret
ja
sub
in
cmp
dec
jg
xor
clc
xor
mov
movb
jmp
cmp
jne
data16
mov
leave
push
mov
movb
test
ficoms
push
hlt
dec
mov
mov
xor
push
sub
sbb
leave
test
sbb
lock
pop
notl
and
test
cltd
jne
or
or
popf
sub
mov
mov
push
dec
or
adcb
bound
pop
fsubl
cmp
inc
mov
push
adc
fcoml
mov
nop
pop
cmp
iret
push
adc
enter
pop
xor
cwtl
mov
mov
mov
mov
aad
shlb
add
movsl
push
in
addl
adc
inc
cmp
inc
or
cmp
mov
cs
daa
sbb
push
fwait
dec
cld
push
push
push
lea
and
mov
stc
mov
inc
add
pop
push
call
push
and
push
push
lret
popf
cmpsl
rcll
nop
out
sbb
mov
dec
mov
and
jge
inc
imul
fwait
jnp
sbb
test
add
mov
lcall
inc
and
scas
fldl
fmull
mov
push
out
push
add
rcll
mov
movsl
and
fdivl
adc
adc
cli
les
sub
fiadds
dec
dec
fsubrp
out
andl
js
and
add
insb
inc
jae
mov
pop
into
popa
in
ljmp
and
pop
popa
sbb
imul
lds
and
push
loope
adc
fmuls
push
jo
mov
dec
dec
xchg
cmp
pop
loopne
mov
inc
test
jmp
in
mov
call
rorl
in
shl
xchg
xlat
push
adc
add
add
cmpb
jecxz
and
xor
je
push
pop
cmp
push
adc
pop
push
xor
call
in
jmp
jne
cs
sub
push
push
mov
add
jmp
adc
sbb
and
insb
repz
mov
addb
push
mov
push
cmp
or
push
mov
sub
icebp
push
and
test
push
fsts
sbb
call
jmp
fs
popa
push
sbb
pop
test
push
jecxz
call
jl
xlat
sbb
mov
add
out
jo
cmp
add
shrb
mov
xor
lea
or
push
xchg
xor
mov
cmp
push
in
add
pop
jl
mov
cltd
mov
pop
inc
and
lea
push
or
dec
adc
sbb
push
dec
daa
mov
add
mov
jge
mov
jecxz
outsb
mov
idiv
push
mov
mov
mov
sbb
into
idiv
cs
fdivrl
and
add
jg
mov
push
insl
mov
mov
jnp
cmpsb
pop
mull
mov
xchg
daa
ret
mov
and
add
and
pop
lock
jne
cmpl
push
cmp
jle
pop
pusha
push
pop
insb
xor
xor
xchg
fdivr
sub
clc
je
dec
cli
fwait
add
sbb
mov
in
push
into
jp
xor
pop
mov
pusha
js
add
out
sbb
dec
fs
or
ret
mov
mov
cmp
mov
lahf
xor
ljmp
dec
sbb
out
xor
jmp
mov
jge
xchg
sub
cmp
or
or
jne
jp
jge
insb
mov
out
ja
hlt
fildl
mov
test
jns
faddl
and
out
fbstp
xor
mov
fdivrp
mov
pop
mov
mov
mov
mov
add
pop
add
les
xor
mov
into
push
call
and
clc
fidivl
sbb
push
ret
jmp
push
xchg
cli
pop
lahf
arpl
mov
sbb
jne
pop
pop
movb
push
xchg
aas
popf
or
mov
aad
sub
aam
adc
rorl
stos
sahf
push
cmpsl
lret
shlb
cld
inc
cmp
test
hlt
adc
lea
ret
push
jmp
cmpsl
je
addr16
push
mov
je
xchg
ret
cs
in
je
or
and
inc
jmp
push
dec
push
pop
out
xchg
pop
mov
push
out
push
pop
pop
into
pop
leave
loope
xchg
xchg
adc
dec
bound
cmp
inc
out
sub
sub
data16
imul
and
cltd
add
jo
mov
test
push
in
int3
and
xor
lret
jo
xchg
fs
loope
pop
iret
ret
adc
ficomps
out
add
mov
cld
xchg
sti
mov
aaa
mov
icebp
jmp
seta
imull
leave
adc
pop
loopne
sbb
push
cmp
push
mov
out
pop
sub
sbb
inc
mov
movsb
mov
adc
push
push
lods
pop
pop
mov
or
nop
mov
lea
push
push
ja
jnp
cmp
cmp
add
inc
repz
inc
imul
mov
sub
inc
adc
adc
andl
popa
scas
jle
jae
add
pop
jne
push
sub
xor
cmp
dec
in
sbb
cmp
cltd
push
sbb
and
inc
and
adc
mov
push
fistps
in
out
pop
nop
jbe
pcmpgtw
jo
mov
push
jl
mov
pop
or
dec
cli
and
clc
dec
adc
das
out
fisubl
cmp
or
and
nop
or
and
das
mov
sbb
cmp
cwtd
adc
mov
pop
incb
inc
dec
push
add
push
mov
loopne
xor
pop
sub
clc
setb
test
rorb
lock
stos
je
xor
dec
adc
jecxz
ljmp
push
lods
adc
sarb
sub
or
add
pop
pop
negl
gs
mov
mov
cmp
je
dec
mov
adc
adc
outsb
xor
jbe
call
cmp
cmp
jne
scas
sbb
shll
push
inc
and
das
or
push
mov
int
or
fwait
pop
add
add
adc
pop
repnz
mov
sbb
mov
mov
out
lret
sub
iret
imul
jne
rorl
sti
adc
not
sbb
mov
in
fs
repnz
mov
xor
adc
jns
icebp
dec
jl
push
dec
push
xchg
add
scas
adc
or
dec
and
or
jmp
push
pop
pop
jb
inc
rclb
cld
jno
add
das
inc
xor
add
and
into
xchg
std
dec
dec
sbb
push
jmp
aaa
cld
js
lds
dec
std
int3
js
fsubrp
xchg
out
add
mov
push
push
and
int
popf
jnp
or
call
and
push
inc
int
rorb
stc
push
push
rolb
cmpb
jns,pn
jns
push
in
enter
push
pop
fmuls
call
dec
xchg
loope
pushl
sub
jb
insb
aam
sub
or
aaa
pushl
dec
fcmove
add
sar
add
jns
les
shlb
loope
out
popf
sbb
jge
sti
push
xor
push
les
push
nop
lret
stos
test
add
xor
cmp
push
mov
mov
in
mov
add
aaa
xchg
addr16
push
sbb
mov
lods
mov
push
sbb
arpl
das
jmp
mov
nop
cmp
sub
and
notb
insl
test
or
and
sub
jo
cmp
imull
push
push
push
outsl
daa
add
xchg
or
jnp
imul
adc
or
push
scas
aam
mov
pop
push
in
dec
cmpsl
out
add
adc
pop
fldt
mov
xchg
mov
mov
add
testl
sbb
sbb
jge
lret
cmp
enter
or
add
push
cmpsb
loopne
cltd
and
xor
push
mov
fistpl
xchg
pop
pushl
push
adc
lret
jmp
fbstp
mov
cmp
mov
sbb
clc
mov
pop
ret
je
jb
mov
pushf
sbb
out
call
dec
mov
jmp
dec
mov
sub
mov
push
mov
jbe
fwait
mov
add
mov
add
inc
xor
shlb
shrl
js
mov
sub
std
pushl
fmulp
js
cmp
jge
mov
mov
mov
cmp
sbbb
clc
out
or
push
pusha
jle
call
jmp
inc
mov
push
sahf
or
or
std
fsubr
sbb
jns
fcomps
pop
je
repz
je
fsubs
pop
test
jne
inc
nop
sbb
popf
stos
mov
xchg
iret
sbb
dec
mov
cmp
in
mov
daa
cld
sub
inc
sete
adc
loope
xchg
add
mov
adcl
inc
mov
popf
leave
and
ret
scas
bound
dec
out
mov
pop
rcrb
sbb
add
insb
enter
or
mov
inc
fwait
mov
rcrb
dec
add
test
aad
adcb
loopne
clc
pop
push
push
js
cmp
rorb
lods
pop
pop
add
sti
push
dec
lock
loope
add
add
ret
pop
inc
sarb
push
push
push
xor
mov
jno
push
bound
mov
call
cld
jnp
insb
mov
fcoms
mov
lods
fnsave
aad
outsb
xchg
hlt
repnz
sbb
jae
daa
push
xchg
push
or
in
bound
mov
pushf
lret
add
jmp
mov
out
add
dec
outsl
in
out
mov
in
jl
enter
pop
pop
loopne
sbb
adc
clc
mov
mov
mov
mov
icebp
lock
repz
in
cwtl
repnz
ja
fdiv
sbb
push
mov
and
push
dec
sub
sbb
popa
cmp
xor
or
stos
and
in
cwtl
rclb
cmpsb
cmp
cs
dec
orb
insb
xchg
jle
jge
push
ret
adc
daa
xor
mov
insb
sti
shlb
pop
or
adc
scas
cs
cmp
je
or
mov
jno
aaa
pop
xchg
rorb
sbb
popa
aaa
scas
dec
pop
inc
cmp
ret
sbb
cmpsl
adc
jle
clc
sub
movsl
adc
add
cs
cmp
rorb
hlt
add
push
jbe
test
clc
pushl
push
ret
dec
or
ret
push
add
and
sarl
mov
cmp
clc
outsb
lods
hlt
das
mov
in
jmp
aaa
hlt
mov
mov
or
jbe
or
push
push
add
push
outsl
or
xchg
rorb
popf
dec
jp
push
hlt
loopne
add
sub
jp
dec
mulb
xchg
mov
lahf
add
inc
in
jb
hlt
fwait
sarl
das
sub
jg
mov
xlat
addr16
out
ret
push
sbb
aaa
out
inc
lret
dec
in
cmp
clc
insl
adc
jp
in
or
mov
add
clc
fistps
or
sub
mov
js
mov
adc
test
add
push
xor
xor
pop
jg
loop
sbb
push
movzwl
sub
push
gs
je
cmp
cmc
rsqrtps
stos
push
lea
push
test
inc
icebp
and
in
push
shll
fcmovb
lret
cmp
insb
jbe
jbe
pop
push
mov
call
jo
call
jo
pop
mov
and
sbb
mov
lcall
adc
cwtl
inc
insl
jo
pop
ss
push
push
fisttps
in
nop
sbb
es
add
inc
cmp
dec
addr16
je
push
inc
dec
dec
dec
mov
adc
rcrb
jbe
mov
push
jge
dec
add
testl
cld
mov
out
adcb
cld
xchg
and
and
inc
faddp
sbb
in
jbe
mov
push
bound
scas
or
push
cmp
sub
in
lea
andl
pusha
mov
xchg
pop
aas
orl
xchg
ss
addr16
cmp
out
add
add
lock
outsb
dec
inc
stc
xchg
pop
jp
xchg
dec
sub
hlt
test
inc
mov
xor
push
mov
mov
cltd
arpl
dec
xor
inc
in
or
push
cmp
cmpsb
out
repnz
lds
inc
and
je
sbbl
jno
pop
loope
lods
jo
pop
jns
cltd
jb
test
mov
cmp
mov
xor
or
pushf
cmp
and
inc
add
mov
push
sahf
inc
movsb
shrb
ljmp
ja
add
cmp
fildl
cmpsl
push
sbb
mov
fnstcw
icebp
mov
ljmp
inc
sbb
shrl
adc
popf
add
aam
add
lea
pop
pusha
cmp
dec
leave
or
sbb
inc
pop
mov
cmp
pusha
or
and
mov
mov
xorb
mov
cmpsl
dec
mov
leave
sub
add
call
sarb
daa
push
adc
push
push
mov
fs
lock
mov
cmp
lret
sub
ja
mov
jl,pn
jmp
lock
cmp
add
add
addb
add
add
cmp
jmp
push
addl
fnstenv
scas
mov
push
mov
or
mov
les
push
xor
sbb
ret
dec
pop
test
cmpsb
inc
cmp
cwtl
movl
xchg
and
jb
mov
cmpsl
cmp
push
inc
adc
dec
out
sbb
sub
mov
add
nop
sub
lods
or
ret
or
add
mov
mov
jle
push
lcall
ds
ja
adcb
or
add
rclb
ret
sbb
pop
imul
mov
sbb
inc
or
lcall
or
imul
sub
add
shrl
push
mov
adc
lds
sbbb
adc
test
pop
insl
test
inc
scas
or
cwtl
adc
mov
xchg
push
iret
lea
adc
mov
and
das
add
sarl
iret
lea
sbb
inc
fdivrs
test
push
mov
xchg
test
pop
insl
pusha
xlat
sub
or
addb
insb
fldl
mov
xor
lahf
bt
cmp
xchg
dec
rolb
push
jecxz
xchg
and
insl
push
xchg
mov
test
lea
enter
mov
orl
enter
addl
movsl
nop
push
rcll
jo
xchg
add
shll
add
sbb
or
xor
inc
orl
inc
mov
push
mov
in
pop
mov
pop
mov
push
push
or
aad
std
xor
xor
push
push
in
jo
sbb
pop
add
gs
mov
test
jo
stos
mov
jg
xchg
inc
push
adc
loope
das
aad
test
repz
into
fistl
or
push
rcrb
fmulp
pop
sahf
call
negl
xor
out
movsl
gs
in
cmp
pusha
pop
inc
xchg
outsl
cmp
jmp
dec
push
outsl
test
sbb
add
mov
pop
or
jmp
push
hlt
push
mov
lea
loope
aad
push
in
lods
lret
adcl
lods
out
sti
ss
pop
popf
xchg
mov
enter
push
cmp
and
push
push
push
adc
add
sbbb
pop
pushl
popf
mov
enter
pushf
out
add
sarl
adc
jne
call
jg
push
or
push
fldl
stos
xor
pop
mov
add
xchg
cmp
ret
jmp
or
cs
xor
mov
sub
nop
dec
or
adcl
jns
cmp
fsubrs
sbb
call
pushf
divl
lds
xchg
inc
out
rclb
mov
movsb
fdivrl
mov
xor
add
dec
int3
mov
cmp
sbb
xchg
imul
xor
aaa
insb
mov
pop
pop
mov
and
mov
iret
mov
jbe,pt
xchg
int3
lods
xor
fistl
xchg
mov
pop
mov
sarl
inc
orb
leave
sahf
xchg
rorl
sahf
lods
rolb
pop
mov
push
and
push
push
repnz
mov
loopne
rdtsc
dec
jae
pop
sbb
test
test
faddp
add
fs
callw
mov
pop
xorl
add
lock
xchg
ret
addb
or
jmp
fucomip
add
dec
mov
sbb
adcb
mov
adc
xchg
mov
loopne
inc
insl
movsl
jbe
and
push
mov
jo
in
jae
adc
adc
xlat
pushfw
mov
push
add
lea
fs
mov
add
rcl
push
ljmp
pop
cmp
push
arpl
mov
add
aaa
pop
mov
mov
lahf
xor
mov
js
mov
inc
mov
faddp
stc
into
xchg
xor
fdivr
insl
sub
imul
xchg
mov
dec
jo
les
ret
mov
les
push
mov
jae
xor
mov
sbb
add
cmpl
in
jne
jnp
stc
sbb
lea
out
mov
clc
jecxz
js
aad
inc
inc
add
inc
out
cli
sbb
dec
sbb
cmpsl
add
cmpb
mov
mov
repnz
test
ret
and
mov
pop
ja
and
add
cmp
or
mov
out
lret
test
mov
loope
lret
xchg
in
push
mov
aad
adc
xchg
scas
outsb
cmp
pop
data16
andl
cld
dec
jno
ret
dec
and
lret
out
loopne
jns
dec
pop
push
lods
bswap
push
fsubrs
push
fildll
xchg
pop
sub
mov
loop
mov
add
sub
arpl
loopne
mov
and
movl
mov
inc
sarb
int3
mov
popf
and
add
dec
rcll
dec
or
int3
dec
daa
lock
hlt
mov
and
movsb
add
adc
add
jae
mov
pop
add
adc
sub
leave
iret
jmp
pop
pop
je
xchg
push
repnz
cmp
popa
mov
pop
in
pop
push
movsl
lds
pushf
arpl
iret
ret
mov
sub
das
fsubs
js
data16
shll
nop
add
push
jmp
orl
lea
aaa
pop
pusha
xor
andl
push
inc
mov
popf
add
add
mov
ret
jne
pop
loope
push
or
adc
call
andb
or
pop
push
fcomps
and
outsb
pop
divl
inc
and
xchg
or
leave
cmp
js
sbb
test
imul
push
sbb
xchg
dec
sub
pop
push
cmp
push
push
pop
sub
stos
je
adc
jmp
push
rolb
cmc
lods
xor
in
xlat
sbb
jnp
xor
cmp
sbb
pusha
leave
push
cmp
or
xor
or
ret
lret
enter
jae
mov
movsb
mov
push
pop
in
mov
je
inc
or
pop
adc
or
or
sbb
clc
xchg
cmp
cmpsl
cwtl
xchg
dec
adc
rorb
jns
cmp
cmp
push
test
lea
pop
pop
addb
test
rcrb
add
and
movb
inc
and
add
cmp
add
cmp
inc
sbb
sbb
sub
sub
test
push
xchg
mov
jecxz
inc
add
push
outsl
sub
fsubrl
mov
sahf
int3
sub
jl
pusha
adc
push
mov
adc
cmpsl
test
enter
sbb
sub
mov
cs
aam
outsb
push
or
test
addr16
xor
xlat
jns,pn
icebp
adc
shll
sub
mov
xchg
mov
dec
sahf
jbe
into
int3
xor
loop
sbb
dec
or
push
jle
xchg
cmpsl
adcl
movsl
sub
add
dec
fiadds
rorb
push
out
jb
lds
xor
sbb
fsubrl
add
pop
ror
pop
xchg
sub
and
mov
mov
add
sahf
lock
push
pop
ret
mov
push
cmp
pop
fldl
mov
fldl
lock
je
sub
and
lods
insl
add
leave
sbb
fstp
sbb
enter
movb
inc
leave
mov
aaa
adc
sbb
xor
inc
ret
pushf
inc
mov
inc
fcompl
cmp
sbb
lock
sbb
cmp
jo
cmpsl
addr16
test
out
cmp
lds
cwtl
lock
mov
pusha
sbb
and
mov
shl
repnz
loopne
inc
movsb
mov
pusha
inc
dec
pop
or
inc
pop
fcoms
addl
jge
or
sbb
jbe
or
xchg
lock
dec
sub
or
les
test
and
jae
cli
fisttpl
cwtl
loope
cmpl
test
mov
lods
push
stos
jg
or
push
sub
ficoml
pop
push
add
bsr
je
xchg
xchg
inc
daa
sub
push
das
sub
mov
add
mov
inc
xor
add
inc
xor
in
dec
dec
jne
sti
xchg
test
je
cltd
pusha
cmpb
push
inc
adc
pop
push
mov
mov
sahf
bound
pushf
mov
mov
sub
aam
mov
xor
and
push
sub
pop
cmp
push
sub
mov
pop
lahf
inc
push
sbb
cs
add
lret
ds
es
iret
rolb
xchg
add
inc
mov
jge
hlt
sub
push
arpl
add
jno
nop
mov
fisttpll
push
mov
mov
cwtl
sub
popa
push
fiadds
rcrb
loope
fcoms
and
and
in
outsb
push
mov
inc
clc
jl
add
or
push
adc
sarl
dec
stos
andl
mov
fdivrs
xchg
clc
out
or
mov
or
cmp
or
cltd
push
push
ret
xchg
dec
outsb
or
push
es
adc
pop
cmc
cmp
or
inc
cmp
sbbb
push
or
push
int3
push
inc
inc
ret
das
adc
cltd
xchg
push
pop
js
push
in
scas
add
enter
sbb
call
test
ret
xorl
inc
popa
and
sbb
cs
push
and
push
sbb
sub
dec
push
ret
or
sbb
das
or
add
inc
add
sub
add
arpl
aam
ja
mov
cmp
sbb
cmp
cmpsb
push
ja
push
arpl
mov
pop
dec
loope
clc
je
mov
sub
ds
push
loopne
and
sub
lea
push
lea
push
inc
push
repz
jne
ret
push
insb
dec
iret
xor
mov
jle
dec
lret
cmp
jl
cmp
dec
hlt
int3
xor
roll
hlt
icebp
sub
push
jle
xor
icebp
jne
je
sbb
pop
cwtl
out
push
imul
sti
push
ss
dec
aad
mov
out
pop
and
out
xor
cmp
je
xor
pushw
push
pushf
out
jo
push
in
fcmovnu
pushl
jbe
movl
adc
push
sar
enter
mov
sub
mov
lods
jmp
scas
repnz
in
pop
adc
popa
fimull
lahf
in
xor
and
lea
mov
push
dec
or
in
out
fs
sbb
pop
dec
xchg
or
sub
adc
add
divb
adc
xchg
or
adc
push
xchg
push
xor
jg
adc
or
pop
shlb
addr16
out
outsl
xlat
push
jmp
loopne
sub
mov
xchg
test
lock
lods
rol
paddusb
push
fnstenv
push
add
jl
cld
adc
sub
divl
add
cmp
loopne
out
sub
or
ret
or
inc
jl
jb
neg
cwtl
xchg
nop
mov
jl
aad
js
adc
rorl
or
inc
mov
ror
popa
in
push
insb
ljmp
sub
in
in
mov
pushf
aaa
add
add
nop
mov
xor
outsl
mov
orl
adc
flds
push
mov
or
das
andl
imul
cltd
clc
mov
into
xor
inc
jo
mov
pop
and
leave
add
dec
jbe
icebp
lock
data16
fisttpll
add
pop
test
fsubr
roll
cmp
cmpb
or
out
mov
lock
pop
xor
or
cmp
jne
ds
add
dec
inc
mov
xor
pop
loop
idivb
pushf
adc
add
movsb
jmp
lods
jle
std
int3
push
faddp
jmp
jl
ret
sbb
shlb
hlt
stos
sub
jmp
mov
jno
cmp
or
or
jae
add
adc
popa
test
cmp
pop
xchg
mov
pop
fcmovnb
cmpl
ja
adc
and
ja
loop
pop
xchg
jo
aaa
cltd
and
or
in
sub
mov
inc
shl
jmp
push
sub
ljmp
add
jns
pop
sub
cmp
lret
leave
ret
sub
xchg
aas
call
push
jae
add
or
jl
inc
aas
dec
leave
inc
adc
inc
cmp
or
xchg
dec
or
mov
mov
inc
sbb
dec
insb
aam
dec
and
loopne
cld
or
add
push
or
out
or
and
or
sub
mov
push
addl
jmp
addr16
or
inc
jbe
mov
mov
mov
lea
jecxz
add
pusha
sahf
xchg
jnp
xor
mov
mov
call
lea
push
mov
clc
push
lock
cmp
je
push
pop
dec
lret
dec
add
adc
push
mov
sti
je
insl
adc
imul
mov
push
sbb
sti
or
add
cmp
dec
rcll
mov
adc
dec
je
dec
adc
je
sbb
inc
push
fisubs
xor
inc
lret
dec
adc
test
cs
movsb
pop
ret
mov
fs
ret
cs
fldenv
rolb
sbb
and
jmp
bound
pop
aam
sub
in
push
addb
push
in
or
test
mov
inc
mov
out
cli
jp
cmp
add
or
out
jne
test
mov
add
push
push
je
lods
adc
inc
jmp
pop
mov
int
jb
in
or
lcall
sbb
add
je
aam
test
std
mov
mov
sub
sub
push
sbb
ret
iret
shlb
das
pop
pop
sub
xchg
sbb
pop
pop
mov
bound
mov
cmpb
jne
sbbl
xchg
aaa
pop
andb
mov
lret
dec
sub
mov
jne
cmpsb
sbb
shll
shlb
xorl
dec
lock
xorl
add
lods
inc
jp
sbb
push
lock
or
cld
xchg
xchg
roll
inc
adc
divb
enter
popf
mov
es
sbb
cmp
sub
push
jnp
shlb
jmp
xor
adc
insb
cmp
push
movsl
sbb
je
and
xor
dec
fldl
mov
in
stos
in
popf
sub
adc
leave
cmpb
ja
xor
xchg
cli
pop
andl
sbb
push
push
push
xor
pop
sbb
pop
cmc
rclb
mov
pop
push
or
or
pop
sub
push
je
jo
in
inc
insb
push
or
push
dec
lahf
cmp
mov
fmull
sub
add
lret
jmp
inc
cmc
mov
leave
ret
aad
xor
jecxz
adc
sub
mov
repz
or
mov
ja
push
fwait
test
pop
add
lret
outsb
inc
js
push
mov
inc
test
sub
push
pmaddwd
xor
adc
ds
dec
add
fimull
push
jmp
je
cmp
std
mov
js
dec
arpl
arpl
fwait
addb
jne
popf
fs
mov
push
rolb
sub
or
mov
popf
dec
xchg
add
mov
add
cmp
mov
mov
jmp
mov
mov
movsl
ljmp
jb
mov
pop
dec
or
mov
out
jns
sub
cmc
adc
rdmsr
dec
cld
lea
fldl
mov
leave
and
push
sbb
push
and
xor
push
and
ret
sub
xor
add
inc
fidivs
or
pop
popf
dec
pop
adc
cmp
mov
pop
push
lock
cmp
ret
pop
repz
ret
pop
popf
jg
or
jae
ds
mov
xlat
ljmp
and
or
sbb
nop
sub
or
repz
adc
push
push
and
xlat
fimull
add
mov
mov
fwait
push
pop
push
mov
rcrl
leave
lea
jg
outsb
aas
fidivrl
jo
ljmp
jp
mov
or
mov
cld
push
dec
xor
js
jo
and
movsb
jo
fadds
push
cmp
aaa
cmp
cmp
jp
loopne
jae
mov
mov
mov
xor
pop
cmp
pop
sub
pop
push
dec
insl
divb
xor
mov
sahf
js
push
inc
push
ja
ds
push
push
int3
mov
adc
add
xchg
sub
lea
mov
cs
push
iret
cltd
cmp
and
sbb
loop
and
mov
loopne
mov
jns
rolb
jecxz
add
dec
and
inc
or
mov
mov
xchg
fnsave
mov
cmpl
add
jl
mov
popa
or
mov
fs
adc
add
repz
pop
lcall
fucomi
and
js
xor
iret
and
mov
dec
enter
sbb
test
xor
addr16
or
stos
dec
faddp
sbb
mov
shlb
pop
fisttpl
sub
inc
inc
inc
add
imul
lcall
dec
pop
adc
mov
nop
sbb
and
adc
or
sub
pop
xor
daa
std
lods
cmpsl
or
test
and
iret
aam
insl
or
dec
adc
jns
cmpsl
mov
stos
mov
stos
mov
sub
sbb
incl
jle
add
jbe
mov
jp
push
lods
and
hlt
add
movsb
out
lods
fwait
inc
push
rclb
test
xorb
dec
loope
jne
and
mov
je
pusha
add
or
psubsb
mov
inc
lods
test
sub
sbb
or
xchg
jl
cmp
dec
repz
sbb
sub
mov
cltd
or
lods
test
or
in
push
and
in
test
jg
sbb
sbb
mov
pop
flds
sub
fdivrl
je
sub
clc
js
adc
dec
fildll
in
mov
cmp
jnp
inc
hlt
lea
push
rolb
ss
xor
xchg
jne
adc
pop
ljmp
dec
hlt
add
push
imul
in
int
fadd
xor
ss
dec
push
out
pop
or
inc
adc
movsl
mov
out
lea
mov
push
loope
pop
push
xlat
enter
fnsave
push
lcall
or
jle
add
ficoms
mov
popa
pusha
jo
inc
insb
jmp
mov
out
or
loope
push
dec
sbb
enter
mov
inc
pop
xchg
jl
inc
xchg
sbb
sub
inc
push
test
mov
sbb
in
pop
mov
nop
mov
add
clc
or
add
loope
shl
mov
test
xor
jns
mov
and
in
xor
and
mov
sahf
jo
notl
mov
push
loope
mov
push
stos
insl
jne
hlt
add
or
pop
lock
sarb
test
jbe
daa
insb
xchg
clc
pop
int3
andl
mov
push
dec
jae
in
test
inc
and
movsl
fstl
jae
jl
lods
lea
dec
cmp
loope
pop
cmp
inc
mov
sbb
rcrb
push
adc
addl
lahf
xchg
mov
mov
out
inc
testl
test
ret
test
call
popf
xchg
push
or
incb
insb
sbb
int
fucom
pushf
les
xchg
and
pop
and
cld
inc
push
sub
xchg
ret
in
mov
adc
pop
nop
iret
mov
mov
fdivs
adc
cmpsb
xchg
xchg
lock
add
add
xchg
mov
dec
stos
dec
rcrl
fstl
adc
lock
dec
mov
mov
dec
repnz
hlt
sub
and
sub
lea
or
dec
cmp
lock
push
mov
or
mov
and
jno
rorb
sbb
adc
or
cmp
xlat
push
adc
inc
sub
add
mov
jmp
movsb
and
add
pop
xchg
enter
mov
rcrl
or
aam
jno
pop
jmp
test
jb
jecxz
mov
xor
sbb
mov
pop
dec
sbb
cmpb
movsb
addr16
lock
cmpsb
mov
dec
and
outsl
fimull
xchg
jnp
orl
push
push
test
and
fcoms
mov
push
mov
cmp
xchg
add
outsb
mov
mov
loopne
dec
mov
das
or
out
and
add
pushf
pop
inc
aas
test
add
jne
cmp
push
add
and
out
mov
icebp
add
pop
push
sahf
mov
andl
jo
jle
push
push
or
or
adc
add
push
jb
js
jno
out
mov
fidivrs
fsubrs
push
cmp
push
adc
jle
cmp
jae
dec
add
jno
fsubr
aam
out
adc
and
shlb
push
xor
orl
std
hlt
inc
pop
adcl
fdivl
out
add
test
ljmp
xchg
aas
xchg
dec
sub
outsl
fcmovb
push
push
mov
insb
push
push
push
mov
cmc
xchg
sbb
shll
mov
movsb
pop
rclb
sbb
std
dec
xchg
in
mov
push
shrl
insl
add
cmpsb
mov
test
shlb
pop
push
pop
mov
adc
cwtl
mov
xchg
ficoml
das
pop
dec
es
add
and
lods
movsb
lods
or
sbb
xor
or
mov
adc
nop
xchg
out
cmpsl
adc
fs
and
pop
adc
mov
or
arpl
nop
and
adc
pop
mov
mov
lret
je
fcoms
mov
test
or
dec
and
and
sub
push
loop
ficompl
inc
dec
cmp
mov
insb
rolb
sahf
ljmp
add
insb
dec
movl
mov
dec
lcall
jmpw
sbb
fsubrl
xchg
xchg
sbb
fcompl
add
mov
push
add
xor
cmp
jecxz
in
cwtl
inc
xor
inc
dec
and
push
jns
dec
pusha
andl
outsl
dec
lea
mov
jge
adcb
mov
jecxz
pop
ficomps
in
dec
add
inc
add
inc
xorb
dec
xchg
insl
adc
faddl
psrld
pop
and
nopl
clc
scas
in
outsl
and
pop
xlat
dec
in
jno
lea
and
inc
out
jns
mov
xor
ret
jno
imul
les
imul
pop
xor
out
or
and
mov
lods
add
sub
inc
inc
lods
in
sbbl
dec
loopne
mov
mov
inc
and
cmp
dec
andl
scas
sarb
mov
xchg
xchg
je
pop
fcmovbe
or
sarl
xchg
loopne
stc
mov
out
jo
jno
lods
subb
adc
xchg
dec
scas
mov
std
add
pop
dec
jae
sub
paddusb
mov
aaa
js
repz
mov
je
lods
call
pop
add
daa
adcb
or
push
mov
adc
or
xor
in
mov
ret
mov
inc
pop
mov
pop
xchg
and
popa
sub
sbb
lods
je
mov
mov
xchg
cmpsl
jmp
and
pop
sbb
ds
rolb
rcrb
rolb
dec
xlat
loope
ja
scas
sub
popf
jb
adc
mov
sbb
push
or
cmp
or
stc
xor
inc
adc
mov
aad
push
sbb
aaa
in
cmp
dec
sbb
cmp
adc
mov
rclb
repnz
subl
add
in
xor
sbb
xor
jnp
fiadds
add
ss
fbstp
rcl
or
inc
xchg
cmp
scas
fisttpl
jno
stos
shl
or
rorb
push
dec
jne
pusha
mov
mov
fcomp
gs
xchg
shr
and
jmp
dec
push
ret
pop
adc
aam
insl
and
and
pop
lock
jp
cmp
je
cwtl
and
aaa
mov
xchg
jbe
jge
sub
mov
xchg
mov
or
jge
sti
andl
inc
fwait
or
pop
movl
xchg
daa
xor
mov
mov
lea
mov
cli
jb
adc
or
or
add
jno
dec
outsb
mov
jmp
lea
bound
cmp
lock
ja
xchg
ss
pop
sub
je
mov
jl
jmp
rorb
and
mov
add
push
test
xor
aam
cmp
repnz
adc
icebp
subl
cmp
dec
arpl
lret
push
push
ss
add
test
push
pop
mov
add
jb
aas
loopne
frstor
cmp
testb
pop
xor
fmul
pop
shlb
clc
xor
ds
je
adc
mov
jp
push
pop
mov
fiaddl
lods
pusha
and
cmpsl
xchg
mov
sub
or
dec
mov
or
cmpl
jmp
aaa
adc
stc
stos
cltd
inc
lea
push
lods
cmp
loop
jo
ret
sbbl
push
repz
add
push
push
lods
adc
mov
aaa
push
imul
addb
jmp
cmp
je
aaa
orb
or
and
data16
loopne
aas
sub
add
cmp
adc
adc
ja
mov
add
loope
dec
js
lcall
mov
push
xor
arpl
outsb
cwtl
popa
add
mov
and
sub
mov
mov
mov
call
outsl
add
imul
ret
jne
cmpl
push
push
mov
rcll
cmp
icebp
adc
data16
or
pop
in
aaa
movsb
popf
inc
les
dec
push
lret
xlat
sub
ds
mov
xchg
mov
outsb
push
imul
ret
or
jnp
mov
pop
jae
mov
and
jge
mov
lahf
add
add
movl
add
sbbb
inc
adc
push
and
sub
and
mov
dec
lret
ja
mov
adc
and
xchg
arpl
fidivs
pop
test
mov
adc
sub
fwait
dec
movsl
add
mov
push
sbb
and
cld
dec
add
ja
jge
mov
divb
inc
cmp
fnstenv
sub
imul
add
add
add
adc
and
mov
pop
or
mov
test
add
test
pop
dec
jo
enter
insb
in
mov
mov
mov
lea
rorb
in
dec
xor
popf
mov
fsubrs
sbb
insl
xchg
mov
push
and
lret
sub
fs
mov
sarl
push
pop
jae
inc
daa
jbe
lods
mov
popf
xor
jae
cmp
cmp
ss
incl
dec
in
mov
mov
inc
cmp
cmpb
je
push
mov
jmp
arpl
jnp
xchg
and
mov
shrl
or
dec
push
xchg
movsb
fdivrl
mov
stos
inc
or
ret
arpl
or
xchg
ret
mov
add
adc
mov
inc
insb
inc
je
and
mov
fildll
mov
or
jle
jnp
pop
and
mov
jae
lret
mov
mov
adc
push
push
daa
inc
call
xchg
mov
add
aas
fisttps
jae
inc
xor
or
sub
fs
inc
dec
aaa
stos
mov
popf
xchg
fmull
mov
dec
push
and
fistpl
mov
push
mov
or
testl
mov
or
or
sarl
imul
test
test
sbb
jnp
ret
je
mov
sbb
push
je
incl
lds
mov
push
jns
mov
test
cmp
mov
mov
dec
xor
aam
pop
movsl
je
dec
and
dec
inc
or
mov
xchg
mov
adc
test
in
and
jnp
cmp
lea
jo
fistpl
sub
ds
adc
aas
cli
aas
fisubrl
sbb
inc
sbb
cld
pop
adc
mov
push
lods
clc
rolb
push
outsl
ja
out
mov
xlat
and
movsb
jb
pop
mov
fwait
push
mov
xor
mov
cmp
push
pop
stos
mov
adc
rorl
pop
pop
sbb
ja
sbb
daa
pop
std
push
fsubs
or
push
mov
cwtl
rolb
mov
movsb
mov
fnstcw
jmp
aas
mov
mov
dec
cwtl
stos
ds
mov
test
sub
jne
js
daa
cmc
push
sbb
mov
mov
jp
fstl
and
and
aas
xor
cmp
frstor
add
inc
rcrb
or
in
lods
or
push
cmpsb
or
push
inc
add
fstps
ljmp
gs
pop
pop
mov
cmp
stc
xchg
and
incb
dec
and
dec
dec
dec
sbb
add
pop
xchg
fdivl
jl
fistpl
sbb
xchg
xor
jl
sbb
test
push
pusha
leave
jl
xchg
xor
mov
push
js
fistl
je
sbb
jb
and
imul
sub
adc
je
adc
aam
add
adcb
add
inc
pop
push
js
outsl
xchg
and
xor
add
fistps
xor
out
mov
insb
cmpsb
adc
push
and
or
in
in
add
sbb
push
adc
xor
or
dec
in
aaa
dec
pop
add
sub
add
xchg
aas
movl
mov
inc
pop
mov
cmp
or
push
sti
push
pushf
pop
cmp
pushf
andl
jo
mov
sbb
pop
notb
fsubl
addb
and
push
sub
and
xchg
and
and
outsb
and
cmp
xor
in
pushl
cmc
nop
negl
xchg
fcmovnbe
jo
int3
js
pop
sub
mov
daa
inc
lea
fimuls
jno
or
aaa
sub
xchg
push
inc
pop
mov
push
fdivrs
xchg
lea
iret
inc
clc
std
jge
and
hlt
mov
subl
mov
out
leave
add
test
adc
leave
sbb
adc
movsb
loopne
imul
jo
imul
fbld
cmp
sbb
xor
xor
xor
and
rcr
les
lock
pop
fs
sub
popf
adc
add
sub
ret
adcb
push
popa
and
ljmp
and
cmp
lret
and
jae
mov
les
int3
jno
push
stos
scas
inc
jno
stos
adc
xchg
je
adc
sub
cwtl
xlat
dec
xchg
pop
iret
adcl
pop
rolb
movsb
outsl
rclb
lar
lea
sub
clc
orb
push
roll
xor
push
in
inc
inc
imul
lret
mov
cmpsb
icebp
adc
sarb
outsl
mov
fldl
sub
andb
push
cmp
aaa
icebp
sub
add
or
repz
dec
sub
dec
adc
movsb
push
rorb
stc
sbb
push
or
iret
popf
arpl
add
jnp
in
push
adc
cmp
or
ljmp
inc
push
and
outsl
pop
lcall
adc
pop
xor
sbb
leave
pop
dec
fstpl
inc
dec
mov
jbe
mov
mov
mov
push
pop
cli
push
sub
lahf
cmp
or
pusha
mov
sbb
lahf
or
add
cmpsl
inc
fldl
inc
pop
mov
icebp
movsl
jbe
test
mov
insl
dec
ret
mov
nop
aaa
sub
loopne
push
push
shlb
lea
movsl
push
or
roll
leave
adc
xlat
test
pop
mov
mov
negb
and
xor
sbb
pop
lahf
or
pop
xlat
divb
lcall
ljmp
inc
fstps
mov
and
or
jg
push
cmc
je
and
jle
out
lea
jb
add
cmp
ret
incb
or
xchg
fcmovb
fs
dec
and
int3
mov
fs
mov
js
cmpsl
cltd
cwtl
jb
mov
sub
js
and
lret
in
cmpsb
push
in
fadds
fs
test
pop
daa
inc
xchg
cwtl
cmp
mov
cmp
sub
mov
jne
inc
or
pop
sbb
mov
lcall
outsl
pop
aam
xchg
roll
push
pop
jge
rcrb
xchg
testl
push
in
pop
aam
push
cmpsb
or
mov
ss
adc
das
inc
and
jle
mov
hlt
cs
mov
scas
test
jno
and
mov
xor
lods
shl
aam
pop
lcall
sarl
pop
mov
pop
mov
adcb
push
sbb
push
call
sbb
sbb
fsubrl
lds
jno
jo
cmpsl
push
xchg
sbbl
inc
out
lea
int3
xor
mov
xchg
adc
pop
add
cmpb
leave
and
add
xchg
inc
pop
loopne
or
pop
jb
and
push
mov
ss
iret
dec
and
and
mov
jne
jge
jb
cmp
cmp
mov
add
pop
dec
popf
pop
leave
adc
push
xchg
daa
push
pop
mov
sub
daa
stc
sbb
and
sub
cs
inc
enter
sub
adc
pop
push
xor
xchg
sub
mov
sbb
pusha
xor
jbe
push
aaa
arpl
notb
push
push
sbb
imul
or
das
add
jae
mov
rorl
mov
dec
jo
lods
mov
and
repz
jle
dec
mov
nop
bound
adc
xchg
xchg
adc
ficoms
pop
int
inc
or
or
sub
pusha
lea
fcompl
fcoms
adc
and
movsb
cltd
add
add
dec
lcall
mov
ret
and
sub
cmpb
push
push
sub
enter
mov
xor
jecxz
or
jo
hlt
in
cmp
mov
out
push
jl
push
mov
lods
lgs
test
inc
and
dec
loop
mov
fisttps
add
in
insb
imul
lret
lret
fildl
loop
mov
adc
push
cmpsl
add
movsb
call
fstl
jge
or
sub
pop
clc
loopne
addr16
fisubrl
add
inc
add
into
fsubl
adc
mov
inc
addl
fsts
pop
adc
arpl
mov
mov
popa
add
jo
push
push
sub
or
movsl
imul
pushf
jae
test
out
or
inc
xor
mov
shrb
stos
movsl
sub
mov
push
pop
push
xor
pop
push
push
mov
sbb
cld
inc
test
adc
xor
mov
sub
xor
aam
jg
lock
stc
les
aaa
test
push
or
or
loope
les
lock
test
mov
jge
or
mov
cmp
je
inc
xlat
adc
inc
push
push
cmpsb
hlt
mov
outsl
insl
push
mov
dec
sub
in
add
arpl
push
inc
icebp
je
mov
xchg
lcall
or
add
dec
xor
mov
nop
daa
pop
sbb
xor
test
xor
out
pusha
cmpsl
dec
lods
push
jl
jnp
cmp
push
dec
inc
fwait
or
cmp
in
push
aam
or
mov
or
arpl
xchg
call
rcl
lods
ror
adc
sub
sbb
les
xlat
adc
rcll
shrb
sbb
add
sbb
sahf
lock
xor
jbe
mov
or
lock
ja
hlt
cmp
inc
pop
nop
push
pushl
and
iret
xor
fdivs
push
ds
push
addb
inc
adc
inc
fs
aaa
jno
cld
pop
aaa
mov
or
repnz
daa
lea
pop
stc
out
es
adc
push
and
and
dec
hlt
jg
sbb
punpckhdq
loopne
shl
ja
push
mov
jge
mov
mov
cld
mov
mov
sub
shlb
lods
and
inc
add
mov
aas
push
push
add
arpl
sub
and
in
pop
je
xor
mov
adc
mov
movsb
pop
in
lods
or
cs
add
les
lods
adc
mov
adc
inc
cmpsb
xchg
dec
aad
mov
mov
push
adc
pop
sbb
adc
test
mov
xor
in
mov
lret
xchg
mov
dec
cmp
jae
jle
xchg
int3
sbb
adc
xchg
icebp
jne
push
cmp
sub
inc
pop
in
mov
or
iret
and
mov
xchg
or
and
in
cli
mov
pop
cmpsb
and
adc
je
shl
stc
and
dec
or
cmpl
inc
pop
fucomi
jo
push
inc
jmp
mov
add
imul
aaa
adc
adc
xor
adc
outsb
sbb
fistl
mov
add
push
pop
psubw
scas
movl
sub
test
mov
jg
sahf
or
xor
add
add
jb
movsb
sbb
stos
mov
lcall
sar
xchg
out
inc
sbb
sbb
mov
mov
jb
sbb
rolb
mov
jb
adc
push
xchg
cmc
nop
pop
mov
bound
mov
call
and
inc
add
pop
push
or
push
test
adc
shlb
lods
lods
pop
mov
jb
push
mov
or
or
outsb
lret
or
rcl
pusha
sbb
push
in
inc
or
sar
test
cmp
jle
cld
jae
inc
add
outsb
mov
pop
je
xlat
ret
and
loopne
ret
cwtl
cmp
add
sbb
cmp
cmp
loope
js
enter
js
xor
and
cwtl
fldcw
add
inc
pop
mov
lret
jp
cltd
xchg
orb
or
pusha
jmp
in
int3
stc
lea
mov
xor
sbb
bnd
dec
inc
push
in
repnz
sub
sub
mov
add
push
les
daa
fistpl
xor
push
pop
stos
xor
sbb
movsl
or
movups
dec
imul
pop
mov
dec
stc
add
pop
enter
ret
inc
rorb
lea
jns
leave
pop
sbb
push
or
test
jbe
adc
out
or
pop
test
add
jbe
push
aaa
mov
dec
jb
cmp
and
pop
or
enter
pop
or
push
fwait
add
or
mov
dec
jo
insb
sti
push
aad
mov
jmp
scas
fcoms
dec
dec
call
sarb
sub
push
int
or
push
add
shlb
dec
add
sar
orb
dec
andl
or
cmp
and
movsl
mov
lock
pusha
outsb
lea
or
dec
out
adc
or
add
cmp
popf
movzbl
fdivr
add
dec
sbb
cs
subl
xor
adc
mov
rorb
addb
inc
or
sub
jb
xor
inc
mov
xor
mov
xor
inc
mov
outsl
inc
dec
popf
in
sti
in
pusha
xor
addl
inc
or
jb
mov
or
sbb
xchg
push
adc
sbb
mov
inc
lea
das
pop
dec
push
popa
dec
loope
inc
inc
ja
sub
inc
lret
call
jo
cwtl
je
inc
imul
push
ficoms
mov
loope
mov
lds
dec
lret
mov
inc
dec
popl
imul
insl
clc
rolb
daa
std
sbb
loop
int
pop
adc
in
popf
cltd
and
or
mov
movsl
and
mov
mov
and
push
rclb
pop
cmp
aaa
sti
sbbl
pop
push
push
sbb
cmc
mov
mov
mov
sbb
sub
ret
jo
ret
je
sahf
incl
rolb
lds
iret
leave
push
jcxz
pop
fdivr
inc
push
cmp
rcr
cmp
dec
inc
push
stc
mov
dec
or
inc
int3
push
sbb
loope
adc
test
or
nop
scas
push
xor
pusha
lea
cwtl
sbb
xor
push
repnz
lret
leave
sub
inc
cmp
add
movsb
cltd
add
and
dec
lods
inc
push
inc
sbb
pop
sbb
mov
dec
jmp
add
cmp
adc
sbb
shrl
xor
data16
into
cmp
pop
mov
sbb
int
xchg
xor
shr
mov
inc
and
cmpsl
mov
fistpll
mov
pop
sub
into
push
cwtl
sub
insb
pop
sti
mov
mov
push
inc
and
pop
xchg
or
inc
mov
icebp
lea
lret
and
cmp
mov
fsubrs
pop
fisttps
loopne
js
fisubrl
add
fidivrl
adc
loope
inc
xor
and
sub
fstps
and
dec
fisubrs
out
push
inc
add
or
push
loope
mov
fwait
adc
mov
add
icebp
dec
mov
or
xchg
lods
add
adc
loopne
ret
cli
pop
pop
or
add
jno
pop
cmp
dec
inc
mov
pushf
xor
push
movsl
xchg
pop
lock
cli
decb
and
hlt
lods
arpl
add
and
xchg
mov
cmp
push
into
dec
cmpsb
std
pop
xchg
insl
inc
inc
push
mov
add
fmulp
xor
inc
icebp
dec
xor
push
add
dec
ret
adc
add
jge
lods
ds
add
and
push
dec
imul
and
insb
jo
push
pop
fstps
mov
jmp
daa
add
lods
ss
add
test
mov
out
int
inc
push
movl
cwtl
or
andb
push
in
psubsw
dec
mov
xchg
test
gs
imul
push
mov
rcrb
movb
and
inc
insb
push
sbb
bound
sbb
mov
addl
sbb
jmp
dec
sbb
xchg
jns
push
ficompl
sbb
push
adc
mov
fisubrl
aad
call
mov
cmp
xlat
nop
cmpsb
mov
jo
push
adcb
mov
sti
push
and
mov
into
add
outsl
int
cld
inc
sub
xor
and
fs
outsb
or
add
dec
and
and
add
inc
test
and
add
inc
sbb
out
inc
cwtl
xchg
adc
dec
sbb
and
stc
mov
fimuls
repnz
mov
in
sbb
loope
push
mov
add
and
adcl
inc
push
rolb
and
sbb
dec
rorb
fisttps
add
jae
lea
jno
int3
cmpb
push
add
mov
mov
pop
roll
push
dec
pusha
leave
test
sbb
or
mov
push
imul
imul
sbbl
loope
jbe
cld
or
add
xchg
cmp
movl
scas
loopne
pop
in
or
mov
fists
sbb
pop
test
jle
push
dec
cmp
xchg
mov
clc
xchg
rclb
ret
push
stc
out
push
push
jnp
lods
iret
push
fsincos
pop
cmpl
sub
jecxz
xor
jmp
sub
xchg
sbb
or
test
jb
lcall
sub
pushf
cmp
lea
jne
xor
lea
add
sub
sbb
cmp
movsb
sbb
rorb
andl
jb
add
roll
adc
mov
adc
ret
sbb
add
mov
dec
enter
sub
or
inc
and
pop
xchg
sbb
mov
push
negb
or
popf
cmp
testb
mov
sub
mov
mov
inc
sbb
rolb
sbb
arpl
js
popa
add
movsbw
xchg
mov
jno
jne
and
aaa
mov
je
or
je
adc
fwait
dec
sti
add
push
inc
insb
arpl
push
dec
mov
out
std
cmp
movsl
mov
hlt
push
inc
inc
js
push
jle
rolb
pop
dec
cmp
or
inc
je
push
cltd
testb
sbb
aad
push
mov
adc
movl
shll
xchg
movsl
sti
jb
pop
push
xor
cltd
mov
nop
test
cli
push
jg
lea
lock
fwait
push
sub
dec
lods
repnz
mov
xor
xor
push
adc
mov
shlb
xor
or
mov
iret
xor
aaa
popa
mov
fwait
and
dec
cmpsl
mov
push
jl
dec
sbb
cwtl
and
lock
inc
add
xchg
pop
inc
or
fadd
and
pop
xchg
inc
add
xlat
fwait
add
bound
dec
push
cs
sub
dec
faddl
out
inc
lods
mov
sub
push
add
pop
call
push
ret
add
pop
roll
mov
xchg
subb
mov
mov
dec
fisubl
hlt
and
inc
scas
insl
fildl
add
mov
shrl
and
pop
call
and
sub
push
sbb
and
std
and
sbb
xchg
mov
and
and
or
mov
ficomps
cmc
inc
push
mov
shlb
cmp
je
cmp
xchg
das
push
push
inc
push
dec
les
inc
test
icebp
daa
inc
arpl
leave
cltd
sub
aam
iret
pop
dec
sbb
inc
inc
clc
mov
hlt
add
inc
push
mov
lods
jno
or
movsl
fnsave
adc
push
or
cmc
mov
sub
leave
inc
or
lret
mov
test
andb
inc
cld
inc
lea
lret
pop
adc
leave
cld
out
or
mov
push
nop
clc
outsl
push
js
adc
dec
arpl
fmull
push
pop
fsts
jae
inc
jne
loope
push
adc
inc
arpl
in
lret
push
or
lret
and
sub
leave
mov
adc
dec
mov
or
mov
mov
add
movl
test
mov
push
hlt
mov
gs
mov
and
aas
sub
sub
movsb
sbb
push
inc
adcb
or
and
push
push
dec
mov
sub
mov
inc
cmp
adc
ja
ret
xor
and
lods
inc
or
rcll
sahf
push
sbb
inc
xor
jg
sbb
adc
mov
movl
add
xor
sarl
push
inc
inc
mov
or
cmp
cmp
push
shl
sbb
fs
add
or
add
pop
cmp
adc
add
adc
adcb
int
mov
cmp
pusha
arpl
push
sub
or
inc
loopne
push
cmp
cld
sub
loopne
shrb
add
rcll
mov
xchg
add
fwait
loope
aas
hlt
js
or
adc
push
and
cwtl
mov
aaa
dec
cmp
sub
dec
loopne
and
push
clc
sub
decl
popl
add
push
push
push
inc
shlb
dec
mov
mov
sub
pop
aam
outsl
shll
cmp
mov
push
push
popa
shlb
not
ret
push
cmp
jne
scas
mov
add
adc
fwait
les
xchg
mov
inc
cmp
jo
push
addb
aad
dec
pusha
and
and
or
aad
gs
push
push
inc
sub
popf
inc
repnz
xchg
nop
mov
das
adc
fcmovb
sbb
and
or
jmp
and
mov
sbb
add
cld
jmp
push
sub
add
aam
xchg
js
cmp
cltd
dec
jnp
movsl
cs
cmp
cwtl
lcall
dec
rcl
adc
mov
into
inc
add
fimuls
push
sbb
fnstsw
mov
mov
pop
xlat
push
pushf
cmp
jle
cmp
js
add
xor
jbe
jp
xchg
xchg
jbe
inc
cwtl
rcll
jge
js
cmpb
inc
inc
in
cmpsb
jle
sbb
jnp
or
add
mov
mov
inc
adc
addr16
and
cmp
dec
adc
mov
stos
xor
mov
jno
xchg
inc
lock
pop
and
mov
fsubrs
shlb
enter
aad
mov
sbb
push
pop
out
sbb
sti
ret
aad
jo
cwtl
xor
loope
cwtl
push
enter
add
in
push
pop
enter
cmp
xchg
fisubrs
mov
test
push
push
mov
adc
xchg
push
aam
stos
adc
rcll
add
dec
mov
testb
and
jb
cmp
add
jne
sbb
or
das
dec
insb
inc
jne
mov
jo
or
jnp
or
call
jno
dec
jae
push
test
push
mov
sbb
ss
mov
sbb
stos
in
lea
adc
cmp
and
push
adc
and
jo
xor
jg
push
xor
sbb
adc
jbe
clc
xor
pop
les
adc
pop
pop
jb
mov
jne
movsl
lret
lds
jge
nop
sub
adc
push
mov
rcrb
xor
cmc
imul
and
mov
mov
xchg
aad
dec
enter
fsubs
cmp
pop
por
and
dec
stos
je
jge
loope
pop
lods
mov
int3
mov
lods
mov
and
push
jge
cmp
jge
popf
and
add
xchg
je
mov
pop
mov
and
jmp
cmp
push
push
dec
rclb
jmp
sbb
lock
pop
int3
je
pop
push
int3
pop
loop
and
push
adc
cld
xchg
fidivrl
jmp
addr16
push
jmp
fs
das
cmp
dec
mov
loop
or
or
out
inc
dec
daa
push
mov
adc
insb
cmp
pop
cmp
push
adc
sbbl
lcall
push
mov
imul
cs
popl
and
subl
icebp
adc
pusha
fs
adc
scas
mov
lret
sbb
in
mov
nop
cmp
cmp
shrb
adc
push
int
dec
in
sbb
xlat
lcall
ret
mov
aam
into
addl
scas
jno
scas
adc
push
sarl
int
add
lods
loopne
fchs
jmp
test
pop
mov
mov
loopne
or
jo
lea
sbb
adc
in
dec
fcmovb
mov
insl
test
dec
add
mov
or
push
andl
ret
out
mov
inc
sbb
mov
adc
fs
in
stc
jle
add
cmpw
sbb
cmpb
jge
jp
push
add
or
mov
sub
mov
add
sar
pop
sub
mov
push
je
jbe
xorb
pusha
adc
push
les
pop
jns
add
pop
pop
xor
push
ja
lret
xorb
xchg
nop
js
aad
pop
fwait
mov
aam
dec
push
dec
push
xor
jl
sub
jmp
fildl
in
lcall
dec
movzwl
cmpl
push
adc
rorl
sub
and
out
inc
and
pop
sbb
sub
in
icebp
cmp
ljmp
fcmovb
inc
ret
mov
insb
les
inc
lret
jae
mov
gs
push
mov
or
nop
pop
push
loopne
cwtl
cmpsl
cs
pop
cli
jl
pusha
xchg
mov
and
in
jg
insb
cmp
dec
cmp
jne
jb
adc
nop
fs
push
pusha
scas
pop
sahf
push
insl
add
pop
dec
pop
push
sbb
nop
xchg
xor
add
stos
mov
add
lock
sbb
jle
scas
shll
or
inc
mov
adc
sbb
mov
add
in
je
int
ss
repnz
imul
icebp
inc
adcb
jo
inc
add
dec
lods
mov
dec
je
adc
cmpsb
jg
add
push
inc
mov
adc
movsl
sbb
inc
rcll
scas
or
jne
jmp
xchg
mov
shlb
adc
pop
cmpsb
mov
pop
sbb
aaa
xor
push
test
js,pn
sub
sub
jmp
xchg
adc
pusha
adc
adc
insb
lods
loopne
mov
and
inc
cmovge
int3
and
and
or
pop
lcall
in
add
imul
les
loope
adc
cld
jmp
sub
orb
dec
mov
scas
or
inc
test
or
inc
rcrl
in
orl
pop
data16
lock
inc
adc
push
add
sti
dec
push
push
in
push
bound
add
push
xorb
xchg
orb
daa
aaa
or
movsl
xchg
push
cmpl
pop
je
cmp
mov
int
push
and
ja
and
mov
loope
aad
adc
or
mov
mov
enter
out
push
lock
cli
fisttpl
stos
popa
sub
adc
inc
hlt
mov
inc
lea
fimull
pop
in
sub
and
jne
imul
xor
inc
adc
sbb
insb
arpl
je
push
and
loopne
jno
push
push
dec
pop
mov
inc
dec
bound
aas
cmc
or
call
imul
push
fldl
xor
mov
ljmp
mov
hlt
sub
in
ficomps
inc
icebp
jmp
dec
scas
and
xchg
xchg
punpcklbw
sbb
aam
inc
lcall
dec
movsb
lods
add
rorl
xchg
pop
mov
push
incl
or
and
stos
and
and
jne
xor
xor
mov
add
adc
pop
cmp
inc
mov
enter
clc
in
sbb
aam
mov
inc
add
out
dec
xchg
or
and
lock
mov
xchg
shlb
sub
jb
daa
jecxz
xchg
enter
xor
push
inc
aaa
imul
lret
lea
jmp
push
push
insb
cmp
add
dec
jmp
and
xor
ret
dec
mov
test
movsb
fucomip
inc
sti
push
and
mov
nop
loopne
push
pop
je
pop
and
add
pusha
adcl
jo
pusha
add
aad
adc
xchg
xor
in
xor
mov
enter
in
add
addr16
insl
cwtl
and
sub
push
sbb
mov
and
adc
inc
mov
bound
cmp
movsl
es
pop
ret
dec
or
les
push
mov
cld
fmuls
icebp
push
or
adc
and
mov
dec
inc
ficompl
push
mov
push
add
mov
or
push
clc
test
test
mov
mov
repz
and
xlat
sbb
push
dec
dec
jne
sub
xor
sbbl
rcr
inc
sub
mov
lods
xchg
push
jo
loop
pop
fwait
jmp
mov
xchg
push
leave
sbb
outsb
pop
dec
push
cli
lea
dec
fcoms
call
pop
pop
dec
js
shll
cmpb
imulb
mov
add
and
rcrb
push
clc
mov
add
rolb
int3
into
rclb
add
scas
push
and
ss
into
iret
push
js
addb
sub
pop
dec
mov
cmp
imul
lock
pop
pop
movsl
inc
mov
or
jecxz
sub
mov
sbb
cmc
outsl
xchg
add
inc
cmp
pop
pop
mov
rorl
or
jmp
mov
aam
mov
mov
adc
movsb
rolb
cmpb
mov
dec
adc
in
jbe
push
sub
movsb
cmp
enter
mov
dec
xchg
popa
xor
add
clc
iret
and
icebp
jmp
add
inc
inc
sbb
adc
les
fwait
popf
js
pushf
cs
loope
pop
mov
icebp
lea
inc
sub
sub
add
jae
push
jp
inc
out
jbe
jno
pop
clc
push
xor
lcall
int
sbb
mov
out
andb
shr
or
mov
xor
adc
mov
jno
mov
aaa
lds
xor
push
pop
repz
mov
pop
rorl
jp
lret
insl
xchg
popf
push
cmp
push
mov
inc
and
cmp
mov
or
mov
adc
cmp
jmp
push
jg
lods
clc
adc
mov
repz
cmp
out
pop
test
pop
and
mov
pop
pop
and
nop
push
out
push
inc
adc
insb
pusha
js
mov
dec
and
push
add
jle
idivl
decl
sbb
xor
and
jmp
cmp
sbb
jo
jne
xor
sbb
fsubrp
scas
jmp
ss
add
xchg
insb
nop
jg
inc
ret
mov
sti
jne
push
sarb
adc
jbe
pop
pushf
cmpsb
fwait
js
cmp
or
mov
ljmp
bnd
ja
jo
jp
loop
nop
shl
or
push
arpl
adc
mov
repz
adc
insl
and
int3
cmp
jl
insb
adc
test
lcall
pushf
inc
sbb
mov
mov
mov
pop
or
or
cmp
je
mov
or
xlat
div
pop
and
push
push
jle
outsb
es
mov
cwtl
inc
inc
jecxz
inc
mov
popa
mov
mov
dec
out
add
out
or
inc
or
mov
jle
pop
sub
cmp
xchg
outsl
test
movsl
iret
out
incb
inc
out
stos
ja
xchg
rcrb
mov
lret
in
leave
inc
jle
sbb
cmp
or
adc
inc
or
gs
jae
adc
inc
rcll
and
push
stc
push
cmp
cmp
enter
aaa
push
es
xchg
orb
in
mov
add
loope
nop
int3
mov
sbbb
movsb
or
repnz
push
inc
fmul
mov
add
andl
es
int
adc
cmp
das
daa
cmp
jne
jl
pop
inc
or
inc
pop
and
lock
push
jo
pop
add
clc
or
dec
movsl
cmc
inc
imul
jecxz
in
jecxz
aaa
outsb
fwait
jmp
fs
fadds
or
xor
shlb
adc
xor
add
jo
ss
pushf
inc
out
lods
mov
sub
imulb
test
inc
inc
sub
and
pop
inc
dec
mov
test
add
clc
arpl
jne
push
mov
xchg
and
lock
sbb
std
push
inc
add
lea
and
sub
xchg
and
xchg
xor
inc
sbb
adc
lock
sbbb
add
xor
rorb
cld
cltd
pop
int3
rcr
test
lea
xchg
orl
xor
or
push
dec
add
in
mov
roll
mov
fidivrl
hlt
movsb
inc
add
stos
or
cmp
sub
add
gs
sub
add
in
shll
push
push
xor
lock
in
pop
sbb
jno
sub
loopne
loopne
mov
lret
dec
int3
xorl
aaa
xor
and
les
cmc
or
jo
dec
add
loope
add
ret
and
imul
jg
and
add
addr16
sbb
sbb
subl
and
mov
jmp
mov
inc
push
jno
mov
callw
cmp
int
mov
xchg
rclb
stos
cs
sarl
inc
or
dec
mov
sbb
scas
imul
sbb
jmp
imul
test
mov
rorb
mulb
mov
mov
or
cmp
mov
xchg
mov
inc
call
push
out
fsts
pop
mov
xlat
push
popa
xor
out
cmp
fs
jns
add
and
mov
and
push
xor
xchg
lahf
add
inc
adc
dec
movups
dec
jl
cwtl
lods
sti
sub
andl
sbb
or
lret
and
insb
sbb
and
adc
loope
dec
mov
and
ss
sbb
test
push
cmp
xor
and
nop
shrb
jb
push
cmpsb
and
and
aad
inc
cmp
sbb
push
aam
jp
popf
cld
icebp
or
mov
mov
add
pushf
in
stos
in
push
inc
aas
in
or
sub
lcall
pop
cmc
lcall
and
imul
jl
js
loopne
xor
aas
ret
mov
sub
jmp
pusha
inc
mov
flds
and
adc
cltd
fmuls
gs
addps
xor
push
stos
sar
aad
mov
push
rorl
adc
dec
mov
cmp
insl
cmp
std
out
sbb
xchg
mov
and
or
xchg
push
push
xchg
call
mov
xlat
push
push
fs
jno
ret
jb
lea
push
adc
pushf
adc
test
xor
sti
pop
push
popa
adc
nop
out
adc
add
mov
popf
or
mov
xorl
or
fwait
sbb
inc
push
sub
repz
shll
dec
test
xchg
je
rorb
lock
jecxz
shr
inc
inc
loope
out
dec
xchg
xor
xor
jg
push
or
xchg
xor
sbb
and
test
sbb
mov
mov
mov
jo
pop
dec
sub
inc
push
mov
mov
movsb
dec
add
inc
and
sbb
push
sti
inc
cmp
aam
movsl
aaa
lds
shrb
lret
and
pop
test
add
pusha
imul
test
fiadds
and
dec
inc
cmpsb
push
or
stos
cmc
or
add
cmp
fs
fwait
imul
ret
repz
push
dec
push
and
and
add
movsl
ja
das
or
xor
ficoms
add
test
mov
cld
xor
adc
cmp
pop
rorl
shll
mov
add
push
orl
pop
imul
dec
orl
outsb
push
movsb
sbb
inc
or
pushl
shlb
mov
pusha
push
jnp
adc
push
sub
daa
ret
or
js
xor
outsb
lea
insb
mov
jnp
or
fiaddl
push
dec
lret
loop
fcmovnu
out
jecxz
or
push
nop
mov
add
push
loope
int3
aaa
dec
xor
push
inc
fcoms
lods
in
shlb
adc
stos
imul
xlat
cltd
pop
or
mov
inc
or
movq
rorl
out
cmpl
push
imul
sub
sahf
push
mov
push
push
mov
in
jo
popa
fsubl
cmp
add
cld
in
mov
push
fs
nop
add
stos
jle
add
xchg
push
daa
pop
iret
pop
mov
adc
movsb
adc
movsb
inc
cmp
cs
xor
adc
or
and
push
adc
hlt
adc
mov
arpl
cmpsb
js
clc
mov
jnp
push
mov
jecxz
jbe
pop
pop
mov
pop
mov
mov
or
mov
xchg
xchg
pop
scas
mov
pop
add
ficomps
js
or
test
adc
mov
pop
jge
cmp
and
sub
jl
leave
aam
dec
mov
lods
push
or
jae
iret
push
cwtl
nop
aaa
test
push
pop
inc
jo
mov
adc
and
jge
add
dec
add
xor
jo
clc
fistl
add
ficompl
push
shrl
xchg
cmp
xlat
adc
or
and
or
sub
adc
xchg
sub
adc
es
dec
xchg
je
xor
adcb
add
clc
sbb
rorl
sbb
or
dec
dec
fwait
sub
mov
in
nop
popf
xchg
xor
xlat
and
jae
push
fistl
dec
sbb
hlt
push
cmc
add
es
push
in
pop
and
in
test
aaa
or
fimuls
and
sub
dec
adc
adc
or
and
jmp
test
sbb
jns
shrb
push
dec
inc
jge
rorb
pop
mov
xchg
sahf
xor
sbb
add
repz
sub
cmp
inc
push
xor
push
xor
add
jb
mov
stos
or
lock
and
adc
dec
inc
jbe
sbb
scas
sub
push
pop
mov
ds
push
or
adcb
and
loopne
sbb
adc
jecxz
mov
inc
sbb
in
mov
test
je
test
inc
test
push
or
cmp
push
lea
dec
mov
mov
das
cs
pop
sub
push
sub
sbbb
jns
loop
cli
add
dec
fbld
add
sbb
sub
nop
insl
fisttps
int
ja
lds
insl
in
and
sbb
sbb
or
enter
je
mov
mov
push
and
mov
popa
mov
aas
jmp
scas
imul
in
cmc
add
lods
and
pop
xchg
pushf
add
orb
jns
mov
cmp
push
xchg
or
loope
das
and
mov
and
ret
and
mov
mov
adc
ret
add
test
mov
ret
sub
mov
out
cltd
ljmp
test
sbb
les
mov
dec
push
cmpsb
dec
adc
push
mov
pop
popf
fbld
mov
sbb
insl
mov
les
loop
xor
pop
or
pop
es
inc
mov
fs
test
iret
fsubr
xchg
lahf
xlat
xor
inc
dec
push
out
setnp
sbb
adc
cmpsb
ret
test
or
adc
sbb
mov
push
push
arpl
add
dec
dec
jecxz
push
inc
add
mov
xor
adc
and
ret
sub
or
sbb
insl
jbe
sub
sbb
pusha
sbb
dec
clc
or
pusha
and
ret
cs
xlat
iret
jnp
adc
cmp
xchg
xorl
and
and
or
fstp
psubsw
movaps
in
rcl
addr16
xchg
andb
lods
es
sub
dec
mov
mov
or
mov
mov
xlat
sub
dec
adc
add
add
and
jg
movsl
push
clc
or
fistpl
push
sub
arpl
mov
cmp
sbb
sub
mov
testb
adcl
or
fldenv
sub
add
pop
add
push
jle
jne
cmp
lds
fcomps
sbb
jo
pop
push
adc
inc
and
sub
jbe
outsl
jg
push
and
fcomps
ljmp
dec
cmp
sub
orl
fcmove
push
rorb
push
je
add
pop
fcoms
xor
bound
inc
push
mov
add
aaa
sbb
movsb
lods
or
out
outsl
ljmp
or
or
xchg
or
add
loope
jnp
cld
push
insb
loopne
stc
push
pop
push
push
lret
sbbl
and
push
nop
sub
jo
and
out
adc
pop
pop
sub
xchg
aam
xchg
xchg
mov
jns
addr16
push
les
sub
in
lret
mov
add
mov
bound
or
pop
push
fwait
jb
testl
hlt
test
sub
or
or
test
setp
aas
dec
je
mov
pop
ret
call
push
and
orb
lods
iret
cmp
sbb
xchg
sbb
cs
inc
cmp
sub
mov
inc
je
pop
sub
push
daa
ret
pop
xor
iret
push
addl
and
jmp
push
adc
jg
adc
mov
jo
sub
ret
and
xchg
leave
cs
loop
in
and
xchg
pushl
insb
loop
ret
push
popa
adc
pop
jl
ss
lock
iret
daa
ret
sub
rclb
xchg
mov
cmpsb
fdivrs
pop
fcoml
fcom
lea
inc
push
lock
adc
subl
mov
cs
fwait
lret
nop
push
lods
push
fisubs
std
push
call
lret
and
fistpll
or
xchg
xchg
mov
imul
push
inc
pop
std
shrl
add
push
imul
pop
push
test
aam
jle
dec
push
xor
test
inc
pop
and
pop
loopne
xor
mov
stos
stos
add
jmp
in
js
jge
xor
inc
adc
imul
adc
add
jl
sub
in
adc
xlat
xchg
mov
sub
jns
bound
lret
push
push
and
pop
adc
mov
leave
pop
mov
and
pusha
push
push
sub
jl
mov
xchg
and
bound
lock
aas
sbb
pop
xchg
pop
sub
push
adc
shll
inc
movl
pop
xor
stos
inc
adc
rcr
and
add
and
cmp
in
fwait
or
sub
cmp
inc
negb
and
push
cmp
sarb
mov
inc
das
mov
ss
pop
pop
push
lret
stos
gs
aam
sub
adc
inc
push
or
push
jmp
and
push
sbb
push
lcall
out
movsb
cmpsb
push
pop
mov
into
mov
iret
ss
in
fisttpll
mov
mov
jbe
rcrb
data16
lea
ss
movsl
loopne
dec
movsl
mov
ficompl
inc
bound
add
call
cmpsb
xchg
pop
fwait
pop
push
and
pop
xor
sbb
cmpsl
stc
rcl
inc
dec
add
dec
jecxz
add
jle
push
mov
mov
and
add
cmp
jl
push
cmp
push
cmp
jle
cmp
negl
push
cmp
cmp
cmp
mov
mov
push
jecxz
add
add
inc
jmp
insb
push
movw
fadds
insl
mov
xor
aad
mov
lahf
jg
or
fwait
inc
or
fs
pop
idiv
pop
xchg
mov
outsl
stos
lret
stos
add
dec
jnp
xchg
mov
scas
sub
stc
mov
sbb
mov
lcall
addb
xchg
fidivl
shlb
into
jno
push
add
lock
fcmovnbe
js
sbb
repz
push
push
jb
popa
imul
sbb
cmp
icebp
ret
push
mov
nop
pop
shlb
dec
movsl
or
adc
and
adc
in
add
adc
ret
nop
mov
inc
pop
int
cmpsb
sub
mov
outsl
fcompl
sahf
ret
inc
outsb
mov
or
aas
lahf
sbb
add
push
es
js
and
dec
or
nop
inc
es
push
mov
loope
mov
movsl
pop
pop
pop
jmp
les
add
insl
or
or
lods
rorb
leave
add
add
ss
push
push
rorb
rolb
push
pop
and
inc
adc
fsubrl
cwtl
jl
outsl
jl
mov
mov
mov
cmp
and
movsl
adc
fistpl
add
push
data16
sub
sub
adc
loopne
mov
xchg
sbb
cmpsl
shrl
lcall
or
and
push
add
xchg
dec
shr
push
add
popa
jo
push
and
mov
add
ret
push
fistpl
add
adc
push
inc
inc
inc
adc
xor
fsubrl
inc
sbb
dec
jo
fnstenv
xchg
xchg
inc
push
sbb
cmp
inc
and
push
lock
xchg
popa
mov
fsubrs
add
test
inc
sub
fwait
in
test
and
add
or
ficompl
adc
pop
mov
lret
outsb
and
leave
adc
jnp
sub
fstl
cs
push
pop
adcl
ljmp
inc
or
lods
cmc
fistl
add
popa
adc
fcomps
in
push
add
std
cmp
mov
add
fucom
shrb
push
and
push
add
and
nop
test
popf
inc
enter
add
imul
adc
xor
push
xchg
jb
adc
mov
insb
or
add
sub
adc
inc
sub
arpl
xchg
adc
mov
xchg
sbb
das
movsl
ret
push
adc
add
sub
adc
push
ds
rol
xor
ss
ret
jo
mov
mov
push
sub
xchg
dec
fwait
adc
cld
jb
jae
mov
cmp
xor
xor
shrl
inc
mov
mov
dec
and
dec
add
int3
push
dec
sub
pop
icebp
or
lds
cmp
add
js
and
jne
lea
sbb
lcall
jmp
jb
lods
je
add
loop
test
rcl
shrb
cmpsb
adc
cmpsl
xchg
inc
mov
cmc
jb
int3
cmpsb
orl
or
cmc
test
add
sub
lock
fwait
adc
fisttpl
or
xchg
sbb
pop
mov
in
or
cmp
hlt
add
push
and
icebp
xchg
jbe
outsb
sbb
mov
xor
fisubl
sbb
mov
add
mov
inc
sbb
mov
sahf
lcall
push
ljmp
cmp
loopne
popa
sbb
jbe
add
and
hlt
xchg
std
movsb
jbe
push
in
nop
dec
insl
outsl
fldz
ss
add
aam
push
ja
lock
aad
pop
push
lock
adc
pusha
or
pop
les
sbb
hlt
sbb
aad
mov
push
popa
stos
out
ret
cmp
jne
stc
push
insl
lea
ret
adc
into
push
popa
xchg
mov
subl
add
adc
pop
xlat
xor
fildl
lea
cltd
xchg
inc
add
loopne
adc
pop
push
icebp
push
mov
jne
pop
ja
fadds
sub
xor
enter
add
repz
ss
clc
or
int
xchg
dec
add
push
adc
dec
cmp
mov
add
adc
inc
shll
adc
arpl
inc
add
rcrb
add
add
cwtl
fisubl
inc
mov
adc
adc
add
mov
ljmp
inc
and
push
lock
xor
jle
jle
push
dec
ffreep
jecxz
add
add
cmp
inc
data16
pop
dec
jl
push
pop
pushl
test
shlb
xchg
clc
cmp
movsl
jle
xchg
mov
hlt
notl
inc
push
ja
fsubrs
push
xor
add
mov
out
push
inc
enter
jecxz
push
fcomps
loop
cwtl
insb
movsb
sbb
sub
xchg
movsl
sub
push
xchg
dec
fldl
fnstsw
test
je
sbb
jns
clc
inc
add
pop
add
push
fldl
push
sbb
jg
lods
addb
fstpl
and
mull
mov
fstpl
pop
mov
adc
mov
or
iret
jo
jnp
xchg
add
and
loope
fsubrp
pop
ds
stc
dec
aaa
ljmp
mov
jns
repnz
sbb
and
in
dec
ss
mov
or
cwtl
jb
pop
cld
pop
mov
movl
aad
sbb
call
subl
pusha
mov
fwait
scas
sub
xlat
xchg
dec
mov
stos
adc
cmpsl
shll
ljmp
lea
cmp
sarb
or
or
pop
js
cwtl
fwait
call
mov
sbb
mov
dec
mov
pop
pop
jle
jnp
ja
sub
mov
mov
adc
fs
xlat
and
lds
push
call
push
inc
push
sub
aas
sub
push
push
mov
scas
outsb
xor
jnp
xchg
fidivrs
adc
mov
jb
mov
and
dec
test
clc
mov
push
loopne
lock
outsb
xor
sbb
leave
shld
add
sbb
addb
lea
push
push
inc
pop
mov
test
popa
push
imul
jle
push
leave
adc
mov
push
adc
push
push
xor
inc
mov
lods
cmp
or
or
cli
or
mov
push
fisubl
pop
pop
xchg
leave
or
dec
xchg
add
dec
sub
mov
push
nop
test
lds
sahf
push
mov
cli
sbb
ja
push
jne
push
and
ja
push
adc
jnp
mov
mov
push
mov
shrb
xchg
mov
out
adc
dec
inc
cmpw
jne
push
adc
inc
inc
cld
cmp
testb
push
jl
mov
insl
lcall
insl
xchg
lea
cmp
or
or
sbb
out
out
shrb
push
push
push
fdivr
and
push
push
roll
nop
xorb
into
inc
sbb
add
jmp
push
insl
sub
or
add
fisttpl
mov
lods
imul
pop
xlat
jle
add
xor
xchg
xlat
inc
cmp
add
les
mov
dec
pop
pop
ja
dec
rcll
in
mov
pop
dec
xlat
in
lea
add
or
xchg
mov
sub
push
loope
es
mov
imul
push
lods
pop
mov
pop
movsl
push
pusha
arpl
jmp
jne
test
fbld
jo
and
pushf
shr
jmp
rorb
jae
movsb
std
mov
test
pop
xchg
cmpsb
lock
xor
movsb
cwtl
jp
jae
mov
add
repnz
ljmp
and
fisubl
nop
cmp
dec
mov
or
ret
lds
je
lret
push
push
inc
or
add
gs
pop
xlat
andl
add
dec
cmp
mov
sbb
push
cwtl
push
xchg
imul
inc
pop
je
mov
mov
cmp
pop
ret
pop
add
xchg
xchg
add
data16
dec
ljmp
inc
or
push
popf
cmpsl
inc
pop
adc
test
jno
xor
inc
loop
fwait
repnz
mov
xchg
and
int
leave
add
mov
les
and
or
push
inc
or
les
popa
and
or
push
adc
and
outsb
pop
lahf
ss
or
add
pop
jl
add
or
pop
cwtl
cmp
add
adc
or
fs
je
cs
push
rep
and
add
mov
jp
adc
dec
roll
xchg
add
adc
sub
xchg
test
int
movb
mov
loopne
cli
dec
pop
les
test
inc
inc
pop
jo
movsb
dec
sbb
dec
push
push
es
rclb
or
push
ja
push
cwtl
mov
xchg
fldenv
push
jmp
cwtl
shlb
mov
bound
inc
jge
ljmp
icebp
and
xor
adc
adc
fs
add
gs
cmpsb
imul
and
je
add
sbb
cmp
cli
push
dec
jne
jmp
push
nop
or
push
xchg
cmp
add
repnz
inc
mov
jg
out
push
std
lods
or
sarl
push
fmull
push
test
or
mov
push
xchg
out
mov
dec
mov
clc
sbb
test
inc
mov
xor
int3
add
hlt
push
in
adc
xchg
push
jbe
aam
mov
jnp
enter
je
fadds
inc
push
or
sbb
push
inc
lcall
enter
push
pusha
adc
faddl
in
push
js
cmp
nop
movsb
mov
popa
rcrl
nop
inc
push
cmp
inc
push
cmp
shl
clc
xchg
enter
insb
nop
push
xor
insb
xorb
mov
cmp
imul
jmp
outsb
push
js
mov
cmp
repz
mov
repz
enter
adc
out
sahf
sbb
cmp
jns
out
push
pusha
push
jle
jns
out
xchg
pushf
cmpsb
mov
out
sahf
mov
in
cmp
repz
add
sub
push
cmp
ljmp
and
mov
push
icebp
mov
pop
cmpsl
mov
aam
ret
popf
nop
adc
mov
andb
adc
cmp
lea
ja
and
sbb
jno
shlb
add
push
dec
je
test
jo
lea
enter
pop
lock
shrb
in
inc
mov
push
decb
sti
pop
mov
sbb
fldz
fcompl
cmp
cmp
scas
jmp
cmp
hlt
fmull
add
mov
faddl
and
add
and
xor
int3
loope
xor
and
pop
test
mov
popa
jecxz
xchg
and
rclb
add
add
pop
sbbl
scas
inc
sbb
dec
mov
xor
lock
jge
ja
push
pop
push
cmp
push
test
lock
add
sub
scas
add
fcompl
xchg
std
jl
xchg
cli
add
inc
cmpsl
jg
xor
repnz
inc
add
rorb
mov
mov
jmp
pop
fs
addl
arpl
ja
mov
xor
mov
inc
adc
gs
sub
mov
out
sub
pop
cwtl
nop
test
xor
les
cltd
shrb
pop
xchg
pop
xor
test
and
mov
sub
xchg
test
push
or
adc
adc
push
pop
mov
add
and
add
aaa
out
inc
movb
or
pop
pop
mov
inc
out
cmpb
mov
popa
jbe
or
das
jae
je
shlb
add
lea
push
inc
adcb
sbb
pop
and
les
mov
and
sbb
push
rolb
inc
jecxz
mov
and
xchg
je
insl
pop
shlb
push
mov
push
mov
lods
pusha
int3
cmc
rclb
add
mov
adc
and
sub
nop
js
xor
mov
jmp
fisttpl
sub
ss
jnp
sub
movsb
xor
fwait
sub
mov
push
nop
divb
sub
cmp
mov
push
or
bnd
mov
adc
or
mov
xor
sub
push
mov
xor
jle
icebp
scas
jecxz
mov
xor
sbb
enter
dec
xor
das
insb
lcall
jl
dec
lcall
dec
lcall
add
in
jae
add
mov
mov
sbb
jbe
mov
hlt
push
int3
jl
mov
test
add
cmp
adcl
aaa
lret
cmp
jns
xlat
movsb
inc
aaa
mov
mov
insl
dec
mov
lcall
pop
pop
inc
or
sbb
ret
mov
jbe
test
sbb
ljmp
shlb
sbb
sbb
sbb
nop
stos
shlb
sbb
push
cltd
fs
sbb
in
mov
push
into
push
rorb
adc
sub
or
sbb
sbb
pop
aam
movsb
sub
sub
sbbl
mov
pop
mov
adc
lret
mov
mov
pop
in
pusha
xchg
push
mov
mov
xor
cmp
pop
push
ficomps
push
inc
push
cmp
into
push
xchg
or
pop
movsb
loop
push
jle
cld
subl
mov
mov
jb
sbb
aaa
rcll
ss
xchg
imul
popa
or
cmp
add
int3
cmp
jmp
rcl
iret
sub
sahf
nop
scas
mov
push
mov
dec
sbb
cmpsl
or
stos
or
and
or
add
mov
cmp
and
or
inc
push
adc
daa
cmp
xchg
push
jmp
in
push
inc
test
scas
ret
and
inc
push
push
xor
xchg
je
arpl
pop
imul
subl
imul
jno
dec
cmp
push
and
daa
arpl
mov
or
sbb
dec
bound
imul
adc
or
adc
outsl
jno
es
sbb
sub
pusha
aaa
nop
cwtl
mov
inc
pop
sbb
stc
sub
push
sub
dec
push
adc
imul
dec
add
dec
arpl
lods
popl
push
and
push
rclb
sbb
std
sub
adc
add
push
mov
sarb
testl
pop
mov
mulb
lret
and
sbb
add
cmc
aad
sar
incl
sub
test
jne
or
shll
xor
cld
push
mov
xor
add
cmpsl
shl
jne
push
sbb
pop
sbb
mov
push
and
add
fisubrl
and
ds
aaa
js
hlt
and
add
xchg
xchg
push
insl
cltd
pop
push
sub
sbb
pop
jnp
jge
in
dec
add
movsb
int
mov
push
dec
cmp
and
pop
add
or
cmp
pop
cmp
addr16
mov
inc
imul
jne
fmulp
lods
add
in
loopne
test
repnz
jbe
sbb
rcrl
push
rcrb
call
sbb
pop
rclb
fsubl
lods
cmc
or
movsl
adc
mov
add
dec
adc
add
push
loope
cltd
adc
addl
mov
mov
jg
rcrl
push
jge
pop
int
mull
lods
fsubrs
sbb
shrd
test
shlb
adc
push
push
adc
push
shrb
mov
mov
dec
xor
and
mov
lock
ret
adc
mov
or
test
and
rolb
add
subb
adc
push
inc
lcall
sub
movsb
mov
push
sub
inc
cmp
jmp
adc
inc
push
in
sbb
xchg
mov
test
rcrb
sub
or
xor
or
pusha
dec
xor
pop
pop
ret
es
pop
fsubr
pop
add
lods
inc
push
jne
inc
or
xor
cltd
jnp
ret
les
mov
inc
scas
add
call
add
popf
inc
imul
test
sbb
popf
in
mov
pop
add
push
in
adc
test
mov
or
shlb
jo
inc
xor
jb
jbe
in
and
xchg
dec
in
roll
jne
dec
mov
adc
add
mov
lock
xchg
mov
lods
add
and
mov
mov
fdivl
add
jbe
sbb
xchg
or
loope
cmp
inc
or
pop
cmp
or
int
and
sub
inc
cmp
pop
or
jbe
das
sub
mov
mov
faddl
add
js
test
icebp
push
push
out
and
jnp
cmp
insb
fbld
adc
mov
pop
lds
dec
adc
xor
sarb
adc
ret
sbb
mov
les
mov
movsb
daa
adc
pop
mov
mov
cltd
nop
xchg
inc
xchg
adc
mov
sub
adc
push
sahf
inc
pop
sub
pop
xchg
push
push
inc
insb
sub
or
pop
or
fmuls
sbb
sbb
jbe
sub
inc
movsb
or
sbb
pushl
inc
ficoms
add
push
dec
jo
adcb
mov
jae
test
cmp
pop
dec
nop
mov
and
shll
int3
mov
push
les
popf
sbb
or
subl
sub
and
or
nop
dec
jl
and
in
sub
push
pop
es
xlat
into
lea
fisubl
sub
sub
mov
andb
out
sub
xor
xchg
sub
sub
insb
sub
dec
cmpsl
dec
dec
shrb
xchg
xchg
loopne,pn
movsb
in
cmp
das
mov
push
push
lock
addb
loopne
insb
loop
adc
mov
add
pushf
mov
sahf
idiv
pop
inc
push
cs
fwait
or
mov
fucom
mov
das
not
cmp
rcl
inc
movsb
lcall
sub
cltd
nop
inc
sub
imul
nop
inc
lcall
movsb
cltd
test
or
and
movsb
cltd
nop
pop
and
lcall
cltd
nop
popw
cwtl
push
nop
orb
es
pop
push
scas
sbbb
js
test
shlb
mov
and
sbb
pop
rcrb
mov
dec
push
sahf
adc
adc
fcoms
cmp
mov
add
xor
xchg
mov
jno
add
jns
mov
les
add
sti
pop
push
sahf
jmp
cs
gs
stos
popa
add
dec
test
and
xor
dec
icebp
fdivrs
or
mov
lds
add
push
loope
enter
or
dec
pusha
ret
push
push
idivb
pop
jecxz
repnz
pop
mov
insl
sub
shrb
and
je
or
adc
inc
adc
push
shrl
lods
push
and
lahf
lds
push
icebp
jle
stos
aad
andb
push
das
test
push
jp
mov
jae
jmp
shll
cmp
scas
ss
or
and
pop
xchg
xchg
mov
movsb
xchg
jbe
iret
inc
or
or
and
scas
add
xchg
add
push
hlt
int3
adc
je
pop
clc
cmp
mov
mov
jae
fistl
adc
add
push
cmp
adc
inc
dec
test
cmp
aam
stos
add
popf
ljmp
sub
or
in
add
test
daa
or
push
mov
movsl
ja
test
cmp
sub
nop
mov
pop
push
dec
test
jmp
popa
fldl
jmp
dec
or
sub
stc
aad
aad
push
jbe
pop
xchg
or
jns
jl
fcompl
mov
jne
mov
inc
xor
loopne
jmp
push
movsb
and
cmp
loope
call
cmp
outsl
lea
cmp
inc
je
push
push
cmpsl
lock
daa
and
stc
loope
dec
and
jb
mov
add
adcb
mov
push
push
adc
push
orl
lret
or
xor
sub
incl
mov
cmp
sbb
sbb
xlat
jbe
mov
movl
jne
inc
test
add
mov
mov
addb
hlt
add
mov
insb
test
push
or
iret
jne
mov
jbe
mov
enter
jae
push
mov
rolb
cmp
or
jge
pusha
or
iret
je
mov
dec
roll
scas
adc
push
dec
int3
cmp
lods
mov
and
lods
xchg
mov
sub
fdivs
gs
clc
orb
or
roll
sbb
ss
fcmovbe
and
or
into
pop
cmp
jmp
mov
xchg
mov
inc
outsl
push
cmpl
mov
add
adc
inc
add
jne
mov
adc
or
sbb
ret
sbb
sbb
mov
ss
jae
inc
js
xor
xchg
pop
push
cs
sbb
cmpsb
sbb
cmp
add
xor
lods
push
lcall
rorb
shl
pop
push
dec
or
add
out
cmp
ds
jl
ljmp
outsb
or
je
cmp
or
and
mov
decl
incl
and
ljmp
push
add
pusha
aaa
insb
jg
dec
add
leave
jne
pop
mov
movsl
xchg
js
movsl
add
jo
pop
or
mov
bound
mov
mov
loop
lock
adc
cmp
ficomps
mov
hlt
ficoms
cmp
xorb
add
inc
sbb
addl
rorb
xor
sub
add
dec
mov
push
xor
add
enter
mov
js
jmp
rol
dec
popf
inc
lock
xchg
testb
jg
je
cmpb
je
dec
and
add
jmp
xchg
fsubr
push
add
cmc
and
into
stc
rclb
mov
daa
or
pop
sub
xchg
xor
and
out
cmp
or
push
gs
push
pop
cmc
mov
push
insl
repz
or
jne
test
cmp
dec
and
add
xchg
pop
sub
orb
pop
add
xchg
inc
cli
jp
jne
sbb
dec
cs
pusha
data16
pminsw
mov
pushl
push
data16
dec
sbb
xlat
test
ficomps
testb
fldcw
mov
push
add
mov
xorb
jno
xchg
sbb
cltd
int3
add
jo
add
dec
in
dec
xchg
xchg
mov
sbb
dec
add
jnp
inc
xchg
xor
cmp
pop
pop
movsl
xchg
sub
out
scas
mov
orl
test
cmp
sub
sbb
and
inc
jae,pt
push
pop
lock
mov
inc
push
jmp
inc
sahf
jmp
scas
and
or
jg
outsl
adcl
pop
lock
mov
rorb
push
push
adc
mov
pop
adc
sub
adc
xchg
mov
mov
sub
out
dec
jb
cmp
xor
or
js
pop
jno
call
fadds
nop
sub
jo
sub
leave
in
int3
add
lcall
inc
cmp
std
adc
mov
or
and
xchg
daa
xchg
adc
test
rol
pop
cmc
pop
add
inc
dec
roll
outsl
jo
cmpsl
push
addr16
sub
dec
sbb
dec
dec
mov
inc
push
adc
in
and
push
sub
cwtl
or
push
fcompl
sbb
push
sbb
push
sbb
lea
addr16
mov
push
push
push
testb
les
bound
mov
push
loopne
ss
sub
jno
add
mov
inc
dec
cmc
mov
add
sbb
mov
xchg
mov
sub
add
aas
push
mov
out
xor
fcomps
pop
and
mov
or
xor
add
or
cmp
lcall
sub
rclb
sub
lock
popa
mov
xchg
aas
add
stc
ret
or
xor
sbb
inc
nop
mov
insb
sbbl
pop
idivb
adc
xadd
es
mov
jmp
cmc
cmp
addb
test
jo
inc
cltd
xchg
pusha
gs
xor
cmp
inc
fcmovb
adc
or
inc
pop
iret
rcrl
xchg
loop
push
inc
sbb
cmpl
test
cltd
inc
loopne
stos
add
xchg
jecxz
or
insb
loope
insl
mov
fiaddl
enter
jno
mov
jg
lods
aam
lea
or
sub
add
add
push
mov
or
xchg
outsb
in
add
adc
mov
xor
sbb
or
xor
mov
stos
adc
adc
cmp
ret
or
cmp
sbb
mov
or
clc
or
and
jmp
jo
mov
sarb
mov
add
jg
clc
cmpsl
je
outsb
movsb
icebp
ret
adc
test
mov
in
mov
push
dec
pop
decl
mov
fcoms
push
sub
push
dec
pop
ja
xor
push
imul
das
jecxz
inc
push
les
test
mov
je
scas
lds
adc
rcr
and
xor
les
es
sahf
int
xor
in
clc
je
sbb
mov
shll
jae
jmp
lahf
nop
sbb
push
and
pop
pop
xchg
and
in
ret
in
ret
sbb
mov
push
dec
adc
pop
dec
adc
mov
or
outsl
push
xor
jne
je
inc
xor
sarb
jecxz
test
sarb
add
mov
add
sub
flds
idivl
sahf
data16
xor
add
cmp
test
sub
rolb
in
push
enter
filds
fildl
xor
jno
movsl
sbb
sti
mov
mov
jo
popf
mov
dec
mov
xchg
call
lret
jo
and
stc
xorb
xor
add
daa
mov
in
mov
xor
or
out
stos
add
dec
xchg
call
jl
mov
divl
pop
sbb
push
rorb
ret
imul
pop
sub
aad
addb
gs
scas
das
je
jge
lea
arpl
push
xchg
jg
mov
cmpsb
jns
jnp
das
and
es
movsb
sahf
fmull
sahf
push
cs
in
cmp
test
jne
cmpsb
loopne
dec
call
adc
movsl
jno
or
sbb
mov
je
mov
sbb
bound
add
dec
mov
dec
shll
sub
or
mov
rorl
mov
push
mov
push
sbbb
push
xor
inc
cmp
arpl
mov
sbb
insl
shl
jmp
mov
mov
inc
inc
lods
ret
mov
adc
or
cli
push
jmp
or
mov
push
cmp
dec
xchg
sbbl
jle
in
nop
mov
add
fwait
mov
adc
jne
inc
add
inc
or
cli
push
add
push
sar
push
sub
pop
add
mov
inc
sbb
inc
add
or
popf
mov
jl
lcall
jnp
ret
ret
test
mov
mov
incb
cmp
enter
movsl
outsb
xchg
fldl
adc
sarl
cmp
cmp
adc
jne
daa
aas
iret
iret
mov
or
jne
or
jne
and
cmp
clc
push
mov
mov
adc
js
pop
mov
lods
sbb
add
and
lea
movl
push
inc
dec
jne
push
and
les
inc
add
fstl
mov
mov
lea
fstpl
lea
push
lea
dec
xor
dec
aaa
mov
nop
sarb
mov
inc
xchg
mov
add
sbb
jb
pop
or
xor
mov
add
leave
ror
dec
xchg
mov
adc
addr16
cmc
int3
jmp
lea
xchg
out
add
jnp
fadd
jne
sbb
cmp
adc
in
cmp
add
adc
sub
fcom
loopne
rcrb
loopne
data16
jb
adc
mov
add
jl
pop
mov
cli
and
shrl
imul
ss
xor
loope
incb
or
sbb
lea
adc
xchg
insl
mov
movsl
cld
js
and
jne
jmp
orl
dec
popa
cmp
pusha
cmp
dec
xor
test
in
sbb
mov
fs
insb
push
fs
push
jne
iret
push
repnz
into
xor
adc
mov
pushl
pop
add
icebp
and
fisubrs
xchg
and
pop
add
or
jg
mov
or
es
inc
push
stos
clc
clc
or
add
rcrb
or
fmuls
rorb
int3
fmull
jmp
subl
dec
xor
ret
js
xor
inc
sbb
std
inc
int3
sarb
inc
sahf
movsb
flds
mov
xor
fs
outsb
jmp
adcl
pop
xor
mov
cmp
int
std
inc
jp
xor
subl
clc
pop
cltd
and
aas
push
xchg
das
lock
sbb
imul
cmp
in
adc
push
add
imul
push
and
negl
bound
xorl
pop
sbb
jne
cld
adc
dec
test
bound
mov
pushf
mov
or
jmp
daa
pop
ret
dec
xorl
out
dec
xor
and
cwtl
test
pop
xchg
dec
das
push
hlt
mov
xchg
push
scas
mov
xor
dec
fnstsw
pop
adc
lods
nop
xor
mov
cmp
sbb
and
nop
mov
adc
mov
sbb
adc
lds
push
cmp
sub
sbb
nop
inc
push
sub
pop
or
push
sbb
sbb
or
xor
sbb
push
dec
sub
or
xchg
jo
sti
sub
and
inc
loop
cs
leave
add
and
xchg
sbb
stos
es
daa
add
sbb
sub
shlb
hlt
cs
cmp
inc
dec
je
push
lea
pop
push
push
in
add
shll
mov
test
mov
inc
push
pop
mov
mov
mov
push
je
mov
add
rorl
add
dec
push
out
adc
ret
ret
mov
in
les
inc
sti
aam
xor
shrb
push
adc
pop
jo
dec
xor
sarb
inc
pop
adc
xor
and
js
decl
jg
je
push
jne
adc
inc
add
jnp
adc
xchg
inc
sbb
fsubr
adc
sbb
xor
adc
dec
iret
xchg
lock
sti
xorl
add
in
test
leave
adc
push
hlt
sub
int
popa
and
fmull
inc
test
test
add
rclb
xor
add
xchg
dec
push
cwtl
add
imul
pop
ret
xchg
scas
mov
add
jne
jno
in
inc
dec
sub
add
xor
out
adc
loopne
mov
mov
xor
aam
adc
mov
lea
jge
jecxz
sbbl
mov
pop
push
xchg
mov
or
dec
and
arpl
std
xor
fldenv
sbb
dec
scas
mov
mov
loopne
cmpl
mov
mov
pop
xchg
test
ficoml
adc
and
pop
mov
lds
stc
pop
emms
xchg
mov
sbbl
cmp
xorl
test
adc
or
mov
mov
xchg
test
inc
pop
add
movsl
testl
je
cs
and
outsb
fcoml
push
cmp
add
jecxz
mov
inc
in
pop
sti
ja
insb
es
jne
mov
rorb
ljmp
das
or
mov
and
or
inc
add
push
xor
bound
xor
fnstcw
or
lret
mov
inc
dec
ret
daa
add
add
fdiv
push
insl
and
movsl
push
popa
sbb
xor
imul
clc
push
add
js
cld
cmp
pop
push
insl
je
adc
stos
cmp
add
jle
rolb
add
xchg
xlat
les
cmp
pop
add
mov
movsl
or
add
add
addb
inc
jecxz
inc
add
mov
arpl
add
sbb
push
scas
lds
xchg
dec
bndstx
jp
popf
mov
pop
jmp
out
je
cmp
push
call
adc
fisubrl
fiadds
inc
and
xchg
loopne
sbb
lret
jecxz
add
jne
bound
xchg
cwtl
outsl
cltd
sbb
test
add
sbb
sti
fsubs
adc
aad
push
push
fisttps
sbb
outsl
cmp
imul
sub
leave
loope
dec
jb
inc
adc
sbb
push
jge
cmpsb
mov
sub
adc
push
xchg
push
push
mov
xor
push
or
push
sbb
addr16
lods
bound
or
rorl
jp
mov
xor
pop
das
mov
lock
adc
cs
adc
movsl
roll
js
push
add
sub
push
mov
repz
sub
in
or
pop
hlt
aas
mul
pop
add
stos
ret
cli
add
and
ret
inc
jo
pop
jp
xchg
sbb
push
lret
addr16
sub
and
mov
xor
push
je
movsl
ja
or
xchg
or
mov
xor
cmp
je
or
jb
ret
in
rolb
sbb
test
mov
lods
pop
movb
push
cmpb
ret
lock
lods
js
hlt
jae
movsbl
outsb
clc
cmp
ja
inc
mov
mov
dec
rcl
or
sbb
fstps
out
ds
jmp
enter
ret
incl
call
add
or
jecxz
or
add
inc
sbb
incl
cmpl
jo
call
cltd
and
add
sar
add
cmpsb
hlt
clc
xor
mov
pop
ss
cmp
jecxz
or
inc
jne
enter
adc
mov
mov
dec
jne
mov
ss
sahf
ror
test
push
ret
push
push
jne
add
ficoml
dec
lods
xchg
daa
add
shlb
jo
shld
ret
or
inc
adc
jne
push
add
sbbl
dec
sub
mov
data16
pop
pop
incl
push
cmp
jl
pop
jle
sub
aas
mov
je
sarb
mov
loopne
mov
mov
add
cmc
add
fildl
pop
arpl
rolb
rorb
xor
add
aaa
lahf
push
ret
or
cmp
adc
push
pusha
insb
das
cs
push
out
pop
xchg
adc
xchg
xlat
or
arpl
or
fsubl
movsb
or
mov
mov
push
xor
push
test
repnz
rcrl
push
jns
push
mov
xchg
adc
xchg
lret
icebp
jo
repnz
sub
gs
call
or
add
pop
xchg
fcmove
nop
je
add
jns
mov
jecxz
aas
test
js
push
jmp
mov
push
sbb
cmp
push
push
enter
push
rorl
cmpsl
iret
pop
jb
jne
mov
add
jb
notl
jmp
push
add
push
push
in
xor
add
and
clc
and
dec
mov
in
enter
xchg
adc
out
call
dec
js
pop
sub
push
clc
cmp
push
cmp
pop
ss
jo
stos
lds
lret
add
push
mov
in
arpl
jle
enter
sub
and
mov
lea
and
or
lret
rorl
mov
inc
iret
push
popf
dec
inc
pusha
xor
push
pop
add
int
mov
inc
and
movsb
movsb
divl
popf
jnp
sbb
loope
and
cmp
xor
test
dec
jmp
mov
adc
sub
mov
push
sub
dec
or
jbe
repnz
push
pop
mov
mov
shl
aam
and
mov
xchg
add
int3
add
inc
pop
mov
inc
scas
add
movsl
push
daa
sub
cltd
or
mov
inc
mov
repz
imul
push
shll
adc
aam
sbb
shrl
lds
outsb
push
out
mov
sbb
imul
push
pop
enter
jne
or
clc
adc
mov
rolb
xchg
add
push
leave
push
mov
inc
cli
cmp
pop
out
repnz
xchg
xchg
jbe
loope
cmp
int3
add
cs
sub
mov
cltd
jmp
dec
sbb
cmp
lcall
adc
mov
or
dec
loopne
fcomp
and
repz
je
ret
stos
dec
fsubrs
lock
rorl
cmpsl
call
out
das
xorb
adcb
dec
lods
ret
pop
inc
cmp
xor
sub
jecxz
cltd
ficoml
push
cld
adc
or
jp
jns
jecxz
pop
mov
xchg
or
or
daa
add
lods
jle
rclb
push
cs
fmuls
movsl
aam
mov
xlat
andl
cmp
jl
cwtl
loopne
fdivrl
pop
cmp
cmpb
add
iret
cs
adc
sbb
movsb
shlb
push
daa
movsbl
add
add
ss
sub
decl
mov
sub
pop
cli
sub
mov
test
sbb
lret
fbld
jbe
movb
sbb
cmp
cmp
or
add
add
loop
iret
les
shlb
cmp
adc
js
cmp
adc
push
and
xchg
sahf
cmovle
add
out
stos
sbb
mov
popf
pextrw
inc
push
arpl
mov
adc
les
outsl
popa
hlt
leave
push
xchg
xor
les
cmp
stos
pusha
sbb
push
jge
mov
adc
inc
xchg
dec
in
loop
aad
in
shrb
adc
ja
push
scas
inc
inc
mov
jcxz
inc
adc
xor
lock
je
bound
sub
xchg
mov
mov
jg
mov
mov
lret
mov
sub
mov
push
sbb
cmpsl
pop
dec
loop
xchg
sub
cmp
add
cmc
hlt
mov
pop
or
mov
inc
aad
add
mov
add
movzbl
mov
inc
mov
je
sbb
mov
cmp
jl
dec
clc
ja
jmp
int
mov
sub
iret
push
idivl
push
incb
mov
add
lods
mov
push
mov
nop
mov
dec
or
cld
lods
sub
xlat
push
leave
push
xor
mov
inc
call
jne
pop
jo
movl
fwait
jb
lea
call
pop
and
adc
mov
and
jne
sub
cmp
push
or
sbb
pop
inc
push
mov
test
leave
movsl
cmp
push
in
dec
sub
push
push
int3
jmp
sub
ds
les
mov
adc
inc
pop
sti
mov
cmp
push
enter
pop
inc
and
ja
and
pop
cmpsl
test
lahf
lret
push
scas
and
in
mov
movsl
adc
xor
inc
pop
mov
test
lock
mov
movsb
xor
dec
jl
pop
mov
jae
sub
inc
pop
and
adc
add
cmp
mov
adc
and
int3
fsubs
adc
out
or
inc
popf
lret
push
out
movsl
adc
je
in
js
hlt
test
mov
push
jns
add
adc
mov
sahf
je
pop
test
jb
in
inc
ret
and
mov
stc
sub
ss
decl
lret
lea
cmp
jbe
cmp
jbe
mov
xchg
rcl
jbe
dec
js
push
enter
jne
in
add
xchg
mov
and
insl
mov
xchg
sbb
mov
dec
cmpsb
lods
add
std
add
fisttpl
adc
test
mov
int
adc
std
es
arpl
mov
sbb
jne
push
fsubrs
lods
mov
call
push
push
push
cmp
add
cmpsb
por
out
sub
push
adc
mov
inc
sbb
test
pop
ret
mov
xor
adc
adc
dec
mov
lods
test
mov
lds
clc
add
popf
lret
call
push
lock
je
loopne
adc
lea
mov
xchg
push
push
xchg
dec
repz
pushf
notl
test
pop
or
sub
or
loopne
ffree
add
in
mov
andb
shl
mov
mov
and
jae
sbb
push
mov
mov
aas
jb
mov
sub
add
xor
adc
push
data16
jne
push
cmp
push
or
push
xor
cmpsb
sbb
adc
mov
push
xchg
aam
cmp
add
mov
jp
add
insb
mov
and
aad
and
mov
outsl
cmc
pop
pop
and
jo
fisttps
out
test
jmp
push
stos
rclb
inc
enter
cmp
add
push
and
vmptrst
jle
xor
xchg
cmpsl
add
test
fidivl
or
dec
or
sub
lods
add
fstl
nop
mov
mov
popf
mov
add
enter
adc
mov
adc
loopne
mov
xchg
outsl
dec
sti
dec
sbb
ret
cmpl
jp
inc
push
jbe
mov
pop
stos
jle
add
push
sbb
scas
add
inc
fdivrs
push
aam
and
push
add
stc
movsb
roll
mov
and
sbb
xor
or
out
fdivl
mov
je
wbinvd
pop
fs
movswl
mov
jb
jge
cmp
imul
mov
and
maxps
int3
xchg
scas
leave
mov
mov
pop
inc
push
mov
inc
mov
lea
push
push
dec
mov
movl
aas
es
rolb
and
add
mov
adc
daa
push
add
jns
pop
fdivl
adc
add
mov
leave
push
insb
or
sub
add
cmpsl
int
sub
lods
inc
cmp
inc
or
push
pop
mov
or
je
movsl
stos
and
pop
test
mov
roll
mov
cmpsl
aam
popf
scas
sub
or
push
cli
fst
push
sahf
mov
or
cmp
push
jae
test
iret
xchg
dec
aaa
mov
dec
pop
movsb
sti
pop
cmp
pop
cmp
ret
push
pop
gs
mov
mov
incl
push
cmp
cmp
sub
jb
mov
or
add
mov
jmp
ret
jo
or
jmp
push
dec
mov
adc
arpl
mov
xchg
inc
add
xor
std
addr16
push
push
push
push
psrld
test
loopne
sub
cmpb
or
pop
or
pushl
jo
scas
rcll
or
jp
loopne
imul
pop
sub
jl
sub
sub
push
pop
push
sbb
xchg
mov
cmp
add
sub
adc
lret
add
int3
adc
nop
cmpsl
or
jae
dec
test
sub
jmp
or
daa
sbb
pop
clc
jne
mov
push
cmp
adc
rol
nop
gs
sbb
add
pop
mov
int3
int3
push
hlt
cmpsb
jecxz
out
push
sarl
or
cld
aam
adc
mov
filds
jmp
push
push
dec
cmp
int
jbe
sbb
adc
push
jb
nop
in
push
call
cmp
sbb
and
dec
push
jp
jmp
add
call
mov
pop
rcrb
js
rcrl
xchg
enter
popf
add
add
jae
push
jp
pop
inc
jmp
add
or
push
dec
or
pop
xchg
pusha
xchg
in
and
mov
inc
or
dec
pop
mov
es
jo
inc
xor
sbb
push
cltd
pop
or
jmp
xor
push
rcl
dec
mov
push
jmp
xchg
fs
mov
xor
dec
clc
add
dec
xchg
jge
and
and
xor
mov
sub
push
inc
push
sbb
add
and
pop
add
xchg
mov
or
add
xchg
dec
ds
adcl
mov
mov
sbb
jno
push
inc
sub
adc
dec
cmp
nop
pop
pop
sub
mov
xchg
rclb
xchg
sahf
fcoms
adc
pop
inc
ret
dec
mov
xchg
inc
push
xor
test
add
test
sbb
jo
inc
lcall
sub
sbb
rcrl
das
sub
repnz
xchg
push
sub
mov
adc
lea
push
or
cmpsl
push
add
or
cmp
inc
rorb
xorb
cmp
lcall
add
push
test
jae
and
outsl
inc
sahf
add
add
orb
adc
push
sbb
leave
or
or
push
popa
xor
and
add
int3
mov
jbe
push
sub
dec
stos
dec
dec
divl
push
pop
cwtl
outsb
mov
mov
cld
pop
fstl
orl
hlt
sbb
push
je
inc
imul
ljmp
sub
inc
mov
add
xor
aam
add
jg
mov
pop
adc
mov
dec
adc
loopne
inc
add
mov
mov
or
mov
pop
ret
call
sbb
dec
loop
cmp
lods
jno
ja
jb
pop
or
daa
mov
xchg
popf
fcompl
push
and
push
mov
psubusb
aas
inc
mov
and
mov
in
ret
loop
cwtl
push
xchg
fmuls
xchg
xor
subl
insl
ja
mov
pop
sub
leave
jp
xlat
jle
jge
and
rorb
lahf
inc
and
lock
imul
pop
test
shll
pusha
xorl
int3
add
mov
ja
jb
loopne
or
or
pop
jp
adc
js
mov
add
xchg
adc
fcoml
and
test
jg
jmp
pop
jecxz
sub
mov
jmp
jo
dec
xor
lcall
std
idivb
mov
cwtl
aam
pop
fucomp
pop
dec
test
push
lea
iret
mov
push
dec
push
dec
mov
sbb
and
sbb
pop
pop
or
push
push
push
or
and
je,pt
test
aaa
pusha
fidivs
js
xchg
out
inc
push
push
xchg
pop
inc
cmp
jb
cmp
adc
cmp
leave
rcrl
inc
aaa
popa
data16
xor
mov
and
pop
push
sbb
push
sbb
lahf
xor
add
fiaddl
inc
adc
pop
imul
bound
inc
sbb
mov
rcrb
sbbl
mov
mov
mov
filds
in
mov
or
mov
cmp
addr16
je
cmp
jne
mov
sbb
dec
clc
or
out
dec
lea
ret
sahf
negl
dec
mov
dec
xor
push
cmpsb
test
in
mov
inc
adc
je
testl
add
cmp
jbe
in
jg
loope
pop
add
pop
sub
inc
jmp
inc
pop
xchg
xchg
mov
popa
or
push
pop
mov
ljmp
or
xor
pop
out
mov
cmp
int
jmp
lcall
adc
adc
add
adc
lods
aam
das
hlt
add
cmp
out
les
inc
pop
cmp
add
sti
cmp
outsb
hlt
cmpb
bound
pop
sub
clc
imul
adc
je
ret
mov
roll
jb
cmpsb
ja
js
sub
xor
out
inc
or
mov
adc
push
movsb
cs
mov
inc
cld
rclb
aaa
test
popa
leave
pop
xchg
push
jmp
loopne
jne
mov
test
in
add
mov
movzwl
data16
add
mov
add
jae
faddl
cmpxchg
add
shrb
inc
sti
lahf
pop
shl
add
jmp
pushf
aas
insb
sti
and
push
xchg
sahf
sub
push
inc
inc
and
fs
jne
xor
and
cmp
adc
insb
je
push
mov
or
push
outsb
pop
jae
mov
jmp
dec
shlb
lods
add
test
jne
rorb
jo
daa
ss
addl
cmp
adc
addl
mov
and
xchg
inc
jg
or
jge
out
mulb
xor
and
es
out
sti
out
jle
sub
and
pop
or
jl
or
adc
or
test
subl
loopne
pop
jbe
and
pop
mov
test
xchg
and
add
je,pn
test
jne
inc
adc
push
adc
sub
jb
clc
add
push
xor
xor
ds
or
jae
movb
inc
mov
sub
xor
xchg
fnstcw
and
sbb
std
adc
push
mov
inc
and
push
push
adc
cmp
jmp
mov
add
adc
cmp
xor
mov
cmp
je
mov
clc
push
or
and
push
push
mov
add
cmpsl
jmp
xchg
sub
jp
mov
aam
mov
test
rorl
repz
inc
and
call
pop
ret
add
jmp
jmp
cmc
call
pushf
xor
lods
sub
inc
sahf
mov
imul
mov
xchg
mov
scas
mov
add
jg
pop
push
push
fnstsw
xlat
cmp
addl
inc
jmp
adc
mov
xchg
in
cmp
cmp
int
jo
add
clc
into
adc
push
mov
cmp
push
and
ret
inc
pusha
ss
popf
out
xor
and
inc
ret
in
and
mov
sbb
jo
bound
cmp
sbb
fs
roll
xchg
cmp
sub
mov
push
andl
adc
nop
and
es
pushf
inc
push
xlat
sub
or
in
push
push
cwtl
and
sub
xor
scas
arpl
push
pop
push
movl
push
adc
dec
or
xor
push
xor
push
pop
lahf
jbe
add
mov
xor
enter
sbb
mov
cmpsb
int3
add
pop
mov
add
push
mov
pop
ret
cwtl
rolb
mov
int
push
add
outsb
enter
sbb
mov
push
pushl
add
push
mov
std
pop
jne
pop
lea
outsb
fsubr
jae
pop
or
lock
sbb
inc
add
cmp
shrl
dec
lea
cmp
mov
pop
mov
fcmove
pop
sti
into
mov
rcrb
fbstp
mov
pusha
mov
lea
push
gs
add
sbb
popa
sti
inc
inc
fwait
cmp
cld
pop
pop
nop
pop
outsb
orb
or
xorl
popf
sbb
pop
or
int3
cmc
push
mov
push
mov
mov
movsl
xchg
stos
pop
inc
jl
pop
adc
xchg
sbb
mov
clc
pop
je
test
dec
push
call
inc
jmp
xor
lea
sub
rcll
dec
adc
nop
add
push
dec
mov
xor
cld
pop
arpl
pop
or
mov
sub
clc
mov
or
push
inc
loopne
jl
add
jecxz
xor
push
sbb
inc
push
in
mov
stc
loop
or
add
sahf
cmpsl
mov
cmp
je
push
aaa
cld
pusha
or
jae
clc
push
add
add
pop
inc
cmpsl
sbb
cmpsl
xchg
push
out
push
push
xor
pop
cwtl
mov
outsb
int3
and
or
push
ret
or
sti
pusha
jb
in
jns
pop
aaa
decl
rcrl
xchg
add
daa
je
lret
je
push
push
rorb
aaa
adc
mov
mov
push
cltd
adc
jge
out
inc
pop
fmuls
or
or
push
ljmp
push
clc
mov
rclb
loope
or
cmp
sbb
and
inc
inc
push
push
popf
xchg
xlat
jbe
test
xchg
addl
addb
xchg
xchg
insb
push
add
popa
dec
add
push
mov
xchg
imul
jg
inc
loope
pop
lods
fcoms
pop
cltd
xchg
pusha
pop
or
fsubs
mov
xchg
pop
xchg
add
lods
inc
xor
test
mov
sahf
stc
or
sbb
adc
cmp
mov
add
fmul
sub
xor
and
pop
push
cltd
ficomps
stos
clc
dec
lds
rolb
add
mov
arpl
mov
mull
ds
cwtl
cmpl
dec
push
add
not
test
rclb
xor
fbld
or
lret
dec
add
rorl
lods
jg
xor
insl
jnp
das
dec
movsl
divb
add
cmp
adc
pop
jl
cmpl
or
cs
imul
cmc
push
add
inc
outsl
stos
in
ret
xor
andb
add
xchg
jmp
push
bound
and
push
cmp
mov
scas
addb
inc
mov
push
or
stos
popf
mov
inc
push
push
cmp
mov
sbb
aaa
adc
out
pop
mov
xor
test
test
dec
cmp
adc
push
adc
mov
and
ficomps
jnp
pop
mov
jbe
pop
dec
cmc
xchg
jne
mov
sbb
cmpsl
lods
fwait
xchg
cvtps2pi
sbb
xchg
fadds
mov
in
cld
out
inc
dec
xlat
push
aas
je
cmp
push
pop
sbb
aam
cmpsl
jne
icebp
imul
push
imul
jne
xchg
dec
and
pop
call
add
ds
movsb
pop
mov
in
xor
stc
xor
in
jne
jmp
sbb
sub
into
shlb
jl
sbb
mov
mov
sbb
cmp
pop
add
sbb
lea
sbb
fsubp
and
in
sub
inc
mov
mov
push
and
dec
push
imul
repz
into
jno
div
jmp
pusha
mov
jae
scas
and
lret
out
sub
ret
pop
xor
loopne
rcl
mov
repz
sub
decb
adc
shl
adc
xchg
xchg
add
and
orl
sbb
pop
jp
jb
fs
push
sbb
dec
inc
decb
sbb
push
mov
ret
push
mov
cld
or
call
les
push
rclb
fmuls
sub
push
mov
add
popa
nop
adc
push
popa
adc
in
movsl
aas
add
inc
arpl
pop
rorb
mov
rorl
add
or
push
jno
gs
sahf
xchg
cs
lret
push
push
pop
pop
pop
lret
in
mov
rcr
test
mov
push
xchg
inc
push
sub
in
lods
lods
xchg
addb
mov
lret
sub
add
test
mov
push
dec
mull
mov
in
psubsb
adc
mov
add
rcll
int
and
push
adc
add
pop
sbb
mov
stos
call
inc
adc
jae
ficoml
push
aaa
stos
sub
outsb
in
inc
jecxz
mov
adcb
push
push
insb
or
or
add
daa
mov
push
test
jo
leave
es
mov
mov
scas
sbb
pop
inc
cmp
pop
es
xor
mov
dec
cld
andl
pop
jmp
stos
icebp
mov
push
adc
aam
je
shlb
add
or
sti
and
add
xchg
and
rolb
imul
test
inc
jp
cmc
lock
hlt
mov
andb
mov
stc
sti
es
sti
test
xor
dec
pop
push
mov
sbb
mov
enter
mov
mov
and
mov
pop
xchg
inc
cmp
cmp
outsb
jbe
or
xor
lret
je
mov
jo
cwtl
in
and
push
cmp
mov
adc
add
xor
add
in
jmp
loopne
jns
add
fs
adc
adc
add
addb
ficompl
cmp
out
fistps
je
push
aas
inc
pop
jmp
sbb
pushf
add
pop
cmp
test
sbb
pop
add
jecxz
sub
sbb
ds
inc
push
or
popf
adc
into
sbb
rcl
in
add
push
adc
ds
cmp
js
jae
lods
lea
dec
imul
call
mov
xor
shl
mov
cmp
jne
or
loopne
or
or
push
into
das
pop
mov
jbe
jo
shlb
mov
or
sbb
mov
ds
ret
add
es
cs
outsb
and
jae
fldl
push
jmp
or
andl
nop
out
or
incl
cmp
mov
push
adc
or
cwtl
and
mov
adc
mov
jne
cmpsl
lock
mov
testb
mov
daa
xchg
hlt
cmpsb
int
cltd
mov
cmp
add
xchg
insl
pop
push
lahf
test
inc
jle
or
push
inc
add
add
in
inc
movsl
into
sbbb
test
sub
rclb
jge
jb
xor
aaa
imull
xchg
rorl
inc
hlt
shlb
cli
hlt
inc
adc
adc
je
mov
mov
mov
loop
inc
inc
mov
aad
sub
cli
add
push
push
hlt
test
push
mov
je
int3
pop
push
pop
jb
les
int3
or
or
xor
mov
add
cmp
add
inc
pusha
cld
outsl
mov
and
rclb
punpckhbw
andb
rolb
fisttpl
lock
popa
lea
mov
mov
xchg
jae
orl
popf
out
cmp
cs
push
pop
inc
pop
fldt
inc
jne
addr16
jbe
xorb
pop
cmc
add
cmp
mov
add
add
je
imul
rolb
inc
aam
or
pusha
bound
flds
cmpb
pop
faddl
jns
cltd
andb
and
cs
push
fsubl
loopne
cwtl
call
stos
jno
addb
xchg
sub
mov
fsub
push
aad
imul
fistl
movsl
filds
push
test
mov
mov
inc
je
xor
add
adc
bound
adc
movsl
les
adc
jecxz
jmp
ljmp
push
push
push
nop
mov
ds
stos
jmp
addl
inc
or
in
sub
rolb
push
cmpsl
imul
incl
push
jmp
mov
sub
ret
sbb
mov
mov
push
pop
sbb
mov
sbb
dec
xchg
jne
jns
inc
ljmp
jo
xchg
mov
addb
jg
jbe
push
aas
in
paddb
shr
mov
add
fs
mov
sbb
andl
int3
dec
faddl
es
scas
repnz
dec
add
mov
and
pop
xor
jnp
test
aaa
sub
sub
push
pop
and
outsb
pop
mov
in
sub
addr16
push
xor
cmp
ficoms
push
mov
jb
test
fwait
ret
or
mov
daa
inc
mov
das
fs
cmp
jl
jmp
dec
mov
mov
add
sbb
test
xchg
jge
movsb
mov
sub
adc
add
cmp
movl
fcoml
out
sbb
sbb
mov
sbb
dec
jb
lds
lea
mov
mov
inc
imul
icebp
sbb
and
or
rep
int
lret
sbb
int3
mov
add
lock
push
inc
inc
push
lods
dec
call
inc
push
xor
ret
xlat
sti
sarb
ds
ds
lret
mov
push
xor
add
jmp
push
int
adcb
add
mov
mov
sub
inc
dec
rcrl
or
sub
js
ret
or
lock
sbb
mov
sbb
push
sbb
lods
dec
cwtl
hlt
sub
push
push
in
add
add
cwtl
mov
test
or
mov
insl
and
push
inc
inc
add
popa
add
decl
lret
movsb
jne
outsl
icebp
mov
mov
or
jae
and
sbb
popa
pop
leave
sub
movsb
mov
stc
cmp
cmpsl
pop
add
push
cs
adc
inc
cmpsl
cmp
ja
rorl
add
insb
stos
mov
push
sarl
loopne
add
mov
inc
dec
cmp
repnz
or
xor
sbb
adc
jge
jne
pop
lock
jle
jne
outsb
inc
ds
mov
dec
nop
push
add
push
push
push
add
rcl
add
xchg
mov
xchg
xlat
faddl
pop
ret
pushl
push
iret
xchg
xchg
adc
sub
test
jo
push
add
in
rolb
cmp
je
jne
or
mov
daa
push
rclb
add
mov
lret
data16
mov
cmp
pop
cmp
pop
iret
mov
mov
stos
mov
xor
sbb
pop
movsl
mov
pop
add
dec
loopne
xchg
out
jnp
in
or
outsl
cmp
or
movsb
xor
call
adc
sub
cltd
or
clc
call
or
push
cmp
es
add
or
imul
data16
xchg
out
jno
dec
push
pop
or
pop
or
inc
cld
sbb
cmpsb
or
push
mov
andl
sahf
or
cmpsb
or
ret
jmp
jo
cmc
ret
add
jb
push
sub
stos
das
jle
push
push
push
jns
lds
xchg
xlat
pop
pop
xor
push
dec
cltd
xchg
bswap
cld
adc
imul
test
and
adcb
in
sahf
outsl
iret
or
pop
dec
inc
pusha
adc
pop
jns
add
xor
add
loope
jns
popa
adc
pop
mov
ficompl
inc
fistps
aaa
jbe
push
and
xlat
lcall
add
push
or
test
inc
pop
inc
sbb
gs
sbb
and
jo
and
pop
inc
cmp
mov
or
or
xor
mov
bound
add
push
adc
cmpsb
push
ret
dec
sbb
xor
cmp
lret
push
pop
sti
popf
jb
sbb
inc
push
cld
add
aam
sub
sub
sbb
mov
sbb
cmp
push
cmp
inc
xor
xchg
add
jo
mov
add
inc
lea
mov
jbe
in
sub
lret
addl
scas
in
fcompl
push
push
ljmp
dec
mov
ret
xorps
mov
push
sub
or
sbb
cwtl
rorb
fwait
add
bound
test
sbb
jno
adc
jne,pt
push
outsl
aaa
xor
add
fdivs
test
inc
lcall
mov
mov
sub
mov
in
pop
sub
cs
clc
addb
jge
in
mov
or
sti
pop
into
xor
cmpsl
pop
leave
mov
clc
or
or
and
lock
loope
movl
xchg
dec
dec
andl
push
and
movsl
test
mov
xor
dec
and
inc
sbb
mov
adc
sbb
push
or
inc
loop
sbb
test
inc
imul
adc
and
sub
and
in
fmull
inc
mov
or
pop
mov
sbb
adc
push
mov
ds
and
sub
adc
dec
fildll
dec
add
and
lcall
xlat
and
push
pop
lock
cmp
es
mov
mov
cli
sub
xchg
rcl
and
jnp
inc
cmp
jecxz
sbb
inc
or
in
or
and
sbb
imul
and
push
enter
push
sub
jge
lret
add
mov
and
push
and
aaa
outsb
dec
pop
mov
inc
jae
jmp
push
push
adc
mov
mov
cmp
push
dec
daa
cmp
push
sbb
mov
lea
pop
iret
xor
mov
sbb
mov
in
jb
movsb
sbbl
lock
pusha
sahf
jmp
jge
adc
mov
add
shrl
xchg
pop
mov
lcall
pop
and
aad
sbb
sbb
loopne
mov
rcrl
fmull
push
adc
cld
in
cmpl
ja
adc
and
and
or
push
cmpb
mov
pushf
inc
push
jnp
add
jmp
mov
cs
xchg
mov
in
mov
and
or
inc
sub
xorb
xchg
fs
fucomip
mov
inc
lods
add
dec
lods
or
sbb
inc
shlb
xchg
dec
push
stos
mov
xor
popa
mov
mov
xchg
cmp
dec
cltd
jmp
fs
xchg
push
sbb
cwtl
xchg
ret
dec
add
das
mov
pop
loopne
leave
andb
sub
cmp
mov
or
pop
jmp
adc
push
xchg
lock
mov
xchg
mov
lods
scas
jge
bound
mov
push
xchg
mov
outsl
les
sub
clc
xchg
adc
pop
rcr
ret
sbb
add
and
inc
jbe
movsb
iret
orl
in
jmp
test
aas
fwait
data16
pop
add
rorl
sahf
inc
loopne
arpl
adc
popf
filds
push
xor
inc
cmp
pop
sahf
pop
jbe,pn
popa
fadds
ret
mov
mov
jae
insb
sbb
xchg
je
xchg
mov
into
add
jo
adc
mov
jno
lds
mov
in
mov
enter
mov
cmp
jne
cmp
xor
fsubr
adc
add
mov
dec
xor
dec
dec
movsb
mov
popa
insl
test
cmpsl
jae
pop
mov
rorb
adc
icebp
inc
mov
fwait
mov
shrb
aaa
ss
adc
fidivrs
jne
mov
push
cmp
and
add
add
fcmovnbe
ret
loopne
mov
cmp
cmp
jmp
mov
mov
push
push
and
mov
es
inc
add
aam
and
lods
mov
imul
jo
in
xor
cltd
mov
or
push
mov
fwait
xor
dec
mov
cmpl
mov
mov
mov
cmp
pushf
mov
xor
jmp
mov
js
mov
mov
push
lret
sub
and
popa
lea
and
pop
adc
pop
jo
test
xchg
jne
inc
jmp
das
or
pop
push
xchg
outsb
scas
add
jle
in
or
sbb
ret
push
jl
or
shrl
sub
cmp
rcrb
jbe
sub
add
icebp
adc
push
pop
das
movsb
push
pop
or
add
fstl
ljmp
and
shlb
adc
cmp
jb
jnp
jge
stos
test
cmp
push
rorl
sbb
jbe
sub
aas
xor
imul
cltd
pop
cmp
push
dec
cwtl
test
jo
jmp
hlt
jmp
push
cmp
sti
xor
insb
jne
je
hlt
sub
movsl
test
xor
add
dec
add
mov
aam
call
xor
aam
inc
cmp
into
sbb
xchg
mov
rcrl
cmp
xchg
adc
or
ljmp
sbb
cmp
mov
mov
filds
rcrb
adc
jns,pn
aad
and
adc
adcl
je
dec
mov
inc
xor
adc
pop
and
adc
adc
dec
xor
push
fs
dec
out
imul
mov
push
pushl
push
mov
mov
xchg
cmc
sbb
sub
inc
fcomi
js
das
dec
clc
mov
pushl
aas
push
fs
sub
cwtl
movsb
xchg
adc
enter
out
adc
movsb
xor
pop
adc
adc
adc
dec
xor
adc
adc
mov
and
xor
pop
mov
push
sbb
sub
lret
inc
push
inc
fsubrs
lret
xor
and
ret
add
lods
in
or
xor
add
inc
xor
mov
in
repnz
leave
pop
stos
jne
or
jo
adc
mov
cmpl
mov
ljmp
fs
dec
fstps
jl
inc
and
das
jmp
cmp
add
pop
sub
cld
cmp
bound
xchg
dec
adc
call
and
andb
jge
cmpsl
js
in
lea
test
mov
inc
xchg
movsb
stc
mov
jmp
push
das
mov
jecxz
cmp
fcoms
stos
adc
push
dec
xchg
xchg
xchg
insl
dec
loope
mov
inc
push
add
xor
add
loopne
mov
sbb
outsb
lock
jne
cmpsl
popf
jnp
loopne
call
pop
into
push
ja
mov
addl
in
jnp
jb
inc
push
cld
jg
adc
and
jmp
mov
imul
push
aam
sahf
mov
push
cwtl
push
xor
jne
push
sub
jmp
mov
push
mov
push
add
jmp
call
mov
test
insb
aam
mov
dec
pop
jg
and
mov
inc
or
xor
cmpsb
push
pushf
int
ja
mov
xor
dec
cmp
mov
js
sbbb
inc
sbb
mov
into
and
adc
adc
aam
inc
aad
and
push
jnp
fcom
push
pop
jne
sbb
sbb
inc
test
rcll
ret
inc
adc
iret
jp
mov
adc
fstps
inc
mov
mov
and
pop
push
xor
cmp
into
imul
outsl
add
cmp
sbb
imul
pop
mov
sarl
fimull
sub
pop
cmp
mov
add
mov
inc
push
unpcklps
inc
and
fidivl
pop
add
dec
imul
rorl
les
add
imul
xor
shlb
sbb
mov
sbb
jle
mov
adc
scas
add
cltd
cli
add
fstps
sbb
inc
imul
add
and
je
push
repz
inc
fcmove
mov
xor
lods
add
push
lret
adcb
idiv
pop
dec
fimull
adc
imul
movsb
lcall
jge
and
neg
nop
lds
or
and
dec
cmp
inc
adcb
pop
lahf
rclb
rorb
jge
enter
push
pop
addb
add
in
stos
jno
je
cmp
mov
mov
pop
xor
mov
lcall
movsl
sub
sbb
test
sbb
xor
inc
iret
inc
aad
mov
dec
inc
sbb
lock
jmp
jo
ret
mov
popa
inc
adc
push
jg
fisttps
pop
inc
jno
mov
inc
je
adc
into
push
xchg
popf
dec
aam
repz
add
mov
dec
lcall
add
or
mov
cmpl
push
loopne
pusha
xlat
mov
sbb
sub
or
sub
sbb
pop
push
xchg
and
movsl
add
popf
dec
mov
lret
fildl
outsl
pop
rorl
test
jp
into
or
int
inc
jmp
sub
std
and
mov
push
cmp
sbb
aas
xchg
xchg
lock
inc
jmp
mov
movsl
js
std
sbb
psubw
mull
dec
adc
pop
or
ret
and
pop
std
jp
mov
shr
gs
std
push
mov
aad
or
dec
outsb
inc
out
mov
sbb
mov
xor
and
cmp
pop
sbb
imul
inc
test
test
adc
jmp
push
mov
mov
push
lret
sub
push
lock
sbb
test
bound
xor
push
sub
outsl
dec
out
jp
inc
push
inc
cmp
addb
push
fs
repnz
ja
pop
sbb
mov
adc
push
stos
add
sub
lret
fdivr
lea
movsl
inc
mov
xchg
adc
cmp
ss
adc
sbb
fstpl
mov
call
mov
ret
push
or
fwait
xor
dec
push
popf
loop
mov
in
xchg
jns
es
mov
push
inc
call
test
mov
out
adc
inc
test
xchg
data16
add
pop
xor
dec
xchg
push
jne
enter
lcall
jl
dec
sub
sub
dec
aas
or
std
adc
insb
stos
sbb
adc
sub
jne
inc
fldl
les
xor
daa
jecxz
push
pop
sar
incl
xorb
sub
loop
cltd
rolb
pop
add
push
jecxz
test
int3
dec
ret
bound
xchg
sbb
repnz
or
inc
add
addr16
sbb
mov
ss
inc
or
sub
mov
adc
dec
nop
mov
iret
cmp
mov
test
push
xor
xor
rorb
mov
or
xorl
loope
adc
fisttpl
sub
jl
jmp
sbbl
negb
mov
sbb
and
xor
insb
xor
insl
rol
sub
cmp
adc
xchg
xor
mov
sbb
xlat
jmp
inc
orl
mov
pop
cmpsb
inc
mov
add
cltd
repz
fildll
repz
js
jae
lea
outsl
call
cld
jmp
cmpl
sub
shll
xchg
nop
push
loop
movsb
out
nop
cmp
iret
fcoms
jmp
loop
stos
in
rorb
inc
lret
pop
sbb
mov
movsb
sbb
sbb
xchg
inc
dec
adc
sub
push
xchg
hlt
mov
inc
lahf
filds
lcall
add
lcall
jo
hlt
xor
rolb
cld
mov
push
int3
push
push
pop
sbb
mov
adc
fidivrl
arpl
xchg
sbb
xchg
add
jb
cmp
and
pop
xor
xor
jne
or
les
push
jae
cmp
push
mov
sti
add
sbb
lods
adc
pop
inc
pop
pop
add
lods
scas
push
repnz
aas
adc
pushf
in
cmp
mov
sbb
and
mov
addl
lods
and
jne
pop
jg
push
jl
into
stc
mov
sbb
mov
mov
lret
imul
jecxz
jb
or
push
and
and
adc
aas
movsl
push
je
cwtl
xchg
adc
cmp
test
sbb
nop
mov
dec
jmp
pop
lods
imul
or
push
stc
xchg
stc
outsb
pop
push
mov
test
xchg
adc
inc
add
insb
push
inc
and
and
pop
mov
adc
dec
mov
xor
pop
dec
jb
insl
dec
icebp
dec
and
add
popa
movsb
outsl
jp
add
ljmp
packuswb
jno
clc
push
sbb
adcb
xchg
shlb
popf
sti
movsl
or
mov
cmp
inc
and
add
cmp
pop
xchg
adc
fs
nop
add
je
xchg
mov
frstor
dec
push
xor
push
or
dec
mov
add
sbb
pushf
adc
jae
push
in
shlb
inc
das
ret
sbb
adc
xchg
add
sub
ret
jmp
aad
or
xor
imul
xlat
jl
in
dec
subb
inc
adc
lahf
cwtl
les
or
mov
mull
pop
or
jnp
les
jb
je
cmp
push
adc
cmpb
data16
mov
mov
cmp
bound
in
cld
je
test
dec
ds
jne
mov
push
test
cmp
dec
or
inc
mov
push
sbb
fdivrp
cmp
stos
test
rolb
and
dec
xor
sbb
xchg
mov
hlt
inc
scas
xchg
inc
hlt
jns
push
add
into
mov
cmp
mov
ds
pop
xor
add
adc
cmp
call
dec
jo
lcall
sbb
xchg
sub
pop
push
js
fistl
cld
or
loopne
loopne
fnstenv
mov
sbb
push
sub
in
cmpsb
stc
repz
cld
fadd
sbb
stos
dec
jecxz
sbb
add
push
cmp
add
lcall
iret
movsl
xchg
ret
lea
dec
jae
pop
inc
pop
cs
mov
pop
pop
pusha
push
fs
xchg
lea
loope
mov
jnp
sar
hlt
neg
sbb
and
bnd
movzwl
xor
mov
pop
add
xchg
push
scas
pop
ret
mov
in
test
lock
mov
stos
test
push
add
xor
in
sarl
adc
jg
test
fsubl
add
mov
ss
mov
in
scas
shl
and
rolb
jne
cmp
jbe
or
jne
push
cmp
roll
hlt
and
popa
add
jb
push
data16
ds
data16
push
xchg
cs
fsubs
cmc
jmp
mov
mov
pop
jl
add
rolb
sbb
dec
iret
or
mov
lea
imulb
cwtl
sbb
inc
or
push
push
pop
jne
mov
jmp
jge
add
push
xchg
mov
xchg
push
xchg
fidivs
pminsw
cmp
js
xchg
js
ret
dec
add
inc
orb
xor
pop
and
add
mov
repz
shlb
gs
add
pushf
mov
add
mov
jnp
lds
push
enter
imul
inc
das
push
repz
lret
pop
nop
daa
xor
inc
in
sub
or
and
adc
daa
inc
xchg
sub
mov
lcall
add
flds
fsubrs
cmp
adc
ss
mov
hlt
das
fidivl
andl
leave
ret
jns
jge
mov
add
or
popa
add
pop
mull
inc
add
add
imul
gs
mov
pop
call
out
dec
call
loopne
popf
mov
fisttpl
cmpl
xor
and
or
les
or
mov
js
out
aad
push
sub
mov
jecxz
mov
arpl
xor
sbb
pushf
test
mov
sub
js
inc
shlb
cld
xor
add
fisttpll
xlat
cmpsb
jmp
mov
fs
xchg
ljmp
xchg
push
arpl
mov
fstpl
cmp
addr16
je
mov
out
cmp
cld
pop
pusha
and
push
ret
xor
adc
mov
cmp
jb
and
mov
or
fdivrs
cmpsb
jp
jb
push
jae
xchg
mov
push
xchg
or
add
add
and
aas
jbe
ljmp
shrb
loopne
inc
cmp
adc
or
cmp
imul
xor
movsb
sahf
jno
and
xor
adc
xor
outsb
and
cmp
popa
mov
aas
cmp
add
popf
inc
add
fadds
inc
mov
dec
xchg
push
les
adc
xlat
cmp
fimuls
or
ds
push
mull
add
mov
jmp
push
repnz
das
dec
mov
fstps
aam
pop
xlat
adc
lea
fisttps
inc
jle
adc
or
fsubl
jecxz
pusha
or
jge
dec
test
cmpsl
pop
inc
mov
pop
cmp
packsswb
mov
je
or
xor
rcrl
xor
leave
xor
and
fadd
add
jnp
movsb
mov
cmc
add
popa
ljmp
sbb
lock
cmp
mov
gs
push
and
pop
xchg
mov
mov
xchg
inc
shrb
and
pop
sub
and
loopne
xor
or
xchg
inc
sub
dec
xor
add
jo
gs
inc
push
and
rcr
mov
sbb
insl
je
lret
add
push
mov
outsl
push
std
clc
jnp
mov
out
fwait
imul
out
push
aam
add
pop
mov
rcl
sbb
fsubs
popf
sbb
fsubl
sub
cld
adc
jle
daa
mov
mov
push
or
fstpl
mov
roll
xor
and
push
fisttps
orb
fdivrs
cmp
ret
fldenv
push
push
add
sbb
jecxz
pushl
dec
pop
pop
in
mov
mov
mov
mov
or
or
sub
cmp
sbb
mov
in
or
xchg
or
sti
cltd
cmpl
jb
mov
xor
sub
lods
mov
add
lea
inc
aaa
cmc
mov
pop
jbe
xor
test
sbb
add
popf
pushf
fsubp
loopne
xor
je
xor
sub
nop
mov
inc
and
mov
js
adc
lock
push
jae
lea
ja
lea
jne
fidivl
fdivrs
mov
cmp
push
xchg
jae
sub
sbb
xchg
sub
lock
std
pop
add
or
mov
lea
out
sbb
sbb
pop
push
sub
pop
or
mov
jno
mov
jae
inc
xchg
sbb
scas
xor
jae
leave
jmp
dec
push
and
push
inc
sub
dec
and
dec
rcl
push
xchg
and
fmuls
in
sbb
cmpsl
cwtl
loopne
pushf
mov
mov
dec
dec
ret
sbb
add
fs
mov
push
sbb
adc
insb
and
mov
imul
je
mov
adc
loopne
sub
jae
adc
mov
adc
sub
testb
xor
dec
and
sub
inc
push
lods
les
pusha
imul
jne
lret
cltd
inc
mov
add
in
lret
lock
movsl
sub
popf
and
pop
xchg
ja
fsub
jb
pop
adc
fisttps
mov
nop
and
cmp
fsub
add
adc
add
add
xor
cwtl
adc
push
push
outsl
ret
or
gs
lahf
mov
popf
into
dec
pusha
push
loopne
pop
mov
xlat
mov
fsubl
pop
std
sbb
mov
push
or
cli
dec
or
arpl
jne
out
cmpl
adc
xrelease
xor
das
in
dec
xor
inc
and
data16
pusha
loopne
mov
sbb
inc
mov
or
sub
inc
jmp
dec
jmp
mov
je
dec
add
ss
bound
or
and
push
lds
xor
scas
jbe
test
add
add
xchg
or
add
xor
mov
imul
cmpb
xchg
add
adc
push
mov
mov
dec
mov
cmp
push
cmpb
loopne
sti
jbe
jb
push
jae
lea
push
sub
ljmp
ret
push
push
push
cmpsb
fidivl
stos
inc
mov
ja
lock
pop
ret
inc
mov
or
or
sub
cmc
mulb
aaa
loopne
jge
fisttps
sti
mov
lcall
fstpl
cmpb
xor
fnstenv
inc
jmp
push
cmp
mov
sti
sub
cmp
sbb
lea
adc
sub
loope
daa
mov
movb
add
xchg
fdivs
sub
fnstenv
clc
xchg
out
push
sti
aaa
lcall
ds
outsl
or
insb
neg
call
pop
inc
negb
add
cmc
dec
in
shl
stos
mov
lea
push
sbbb
mov
push
test
popf
jbe
adc
movsl
cmc
dec
es
sbbb
add
iret
jecxz
push
test
test
icebp
lock
lea
xchg
pop
lret
mov
jmp
mov
push
inc
mov
fcompp
mov
mov
push
aad
xor
loopne
dec
sarl
hlt
push
inc
mov
adc
cltd
push
cli
push
pop
sub
sbb
add
cmc
pop
cmpsb
loope
or
je
xor
jge
cmp
lds
add
addr16
lea
push
and
jb
adc
sbb
inc
mov
dec
mov
pshufw
mov
inc
adc
cmp
sub
add
or
add
es
sub
test
sahf
jl
and
and
pop
imul
sahf
adcb
cld
xchg
jmp
jecxz
stos
arpl
std
cmc
sbb
adc
or
in
mov
pop
jnp
add
cmp
arpl
addr16
xor
mov
push
imul
mov
or
sbb
nop
lock
pop
in
or
enter
add
push
push
jbe
cmp
sbbl
mov
add
cmp
cmpsb
mov
gs
add
add
mov
adc
pop
addr16
and
mov
test
rcrl
cmp
adc
xchg
jmp
or
or
add
inc
outsl
subb
hlt
mov
cmp
pop
pop
sbb
shlb
pop
jl
fisttps
cmp
or
scas
popf
popa
push
add
add
sbb
iret
mov
pop
cld
mov
jmp
mov
adc
xor
jbe
cmp
mov
push
ret
stos
jle
std
add
je
cmpsb
jne
pushl
rorl
inc
jg
mov
pusha
jo
adcl
xchg
movsb
sub
andb
fiaddl
and
movsl
pop
adc
push
loopne
pop
add
orl
andl
dec
push
push
mov
fcomps
xor
loop
aas
scas
ret
add
xchg
jg
mov
xchg
rep
mov
jmp
dec
dec
lahf
inc
cmp
repz
fwait
nop
jns
dec
or
cmp
adc
test
cmpb
and
mov
enter
loope
mov
dec
inc
pushf
imul
mov
cli
aaa
pop
adc
or
inc
lods
jns
mov
dec
sub
cmp
jmp
call
mov
daa
sbb
dec
inc
mov
mov
and
push
pop
xor
xor
pop
sbb
leave
pop
fmull
mov
mov
push
lds
mov
mov
rcl
cltd
add
pop
mov
push
xchg
push
dec
lcall
les
outsl
mov
jne
push
push
jo
enter
jne
inc
add
test
ficompl
push
test
push
xor
iret
ljmp
jle
jne
xor
dec
scas
nop
rorl
cltd
rclb
pop
sbb
rorl
lock
mov
and
lahf
inc
sbb
mov
fmuls
repz
outsb
es
jo
dec
push
ja
shrb
mov
fimuls
cmpl
sbbb
cmp
push
push
shll
repnz
out
mov
push
cld
mov
lcall
or
dec
or
lock
in
xor
decl
inc
dec
xor
mov
ret
push
pop
pop
ss
jecxz
loope
sbb
aam
push
mov
jae
add
xor
lods
pop
add
das
nop
pop
fstps
push
add
cmp
cmp
adc
movsb
adc
fdivl
mov
mov
dec
data16
adc
jo
add
aaa
pushf
inc
adc
pop
fwait
pop
jnp
add
mov
ret
inc
cmp
push
push
out
push
or
hlt
cmp
cmp
cmp
js
jg
xchg
shlb
movzwl
test
je
or
or
push
or
jo
dec
ss
push
mov
scas
mov
xchg
dec
fsts
cmpl
push
or
ds
inc
push
std
mov
jmp
add
add
cmp
inc
xor
das
jae
clc
push
push
push
dec
arpl
ds
push
cmc
push
outsl
sbb
adc
push
adc
add
fidivs
jbe
shll
sub
in
addb
pop
in
in
and
push
jecxz
ret
leave
sbb
sbb
js
fstpt
orb
mov
push
and
call
out
push
mov
add
xchg
mov
add
adc
mov
fstps
popa
and
xchg
rcrb
inc
repz
pop
inc
pop
fmul
cmp
push
sub
push
inc
les
mov
jle
mov
sub
insl
jmp
outsb
jo
and
dec
and
ficompl
sbb
adc
mov
add
push
sub
loope
stos
mov
pop
sub
frstor
pop
or
rcrb
cmp
or
mov
xchg
and
iret
dec
rorl
jbe
daa
xor
mov
jnp,pt
push
cld
pushf
or
and
hlt
inc
sbb
repz
loope
ja
cld
sarb
pushf
in
push
adc
cld
js
int
ds
mov
add
sti
gs
xchg
dec
clc
xor
sbbb
adc
xor
xchg
aaa
inc
mov
sub
add
xchg
dec
outsl
aam
inc
jne
mov
push
push
mov
push
push
lcall
popa
mov
ss
and
inc
mov
jp
or
and
push
test
sbb
das
adc
sbb
pop
cmp
mov
idivl
inc
adc
mov
cmp
add
mov
inc
subl
pop
popf
pop
sbb
sbb
gs
call
lea
push
pop
push
es
std
cmp
dec
and
lods
hlt
push
or
inc
sub
aas
sub
xlat
push
sub
push
sub
push
incb
dec
mov
inc
or
mov
dec
in
mov
roll
rcll
adc
and
sbbb
loop
cmp
icebp
push
repnz
jno
scas
xor
adc
pop
mov
cmp
sub
pop
push
dec
push
cmp
adc
inc
lock
mov
mov
fimull
pop
scas
jbe
adc
sub
dec
cwtl
frstor
jmp
in
mov
in
loope
roll
outsb
add
orl
pusha
push
hlt
jg
pusha
stos
repz
jle
cmp
xor
and
js
sub
je
add
inc
xchg
js
xchg
or
adc
std
inc
jl
mov
leave
bound
out
repnz
jb
inc
jg
aas
lea
test
mov
cmpsb
adc
mov
add
sarl
or
dec
jns
adc
lret
xchg
shrb
inc
add
cmp
es
add
jmp
and
mov
dec
fimull
insb
jmp
or
sbb
inc
test
int
sbbl
in
xor
add
pop
mov
xchg
and
cltd
xchg
mov
andb
in
nop
jo
rcll
loop
icebp
xchg
nop
xchg
adc
push
xchg
ret
js
je
outsl
xorb
sub
jmp
or
mov
lods
insl
das
sbb
xchg
add
xor
scas
sub
sub
sbb
dec
push
sub
cmp
adc
push
mov
in
sbb
imul
add
add
fs
std
js
notl
pop
add
cmpsl
nop
insb
push
push
sbb
xor
loopne
jp
jo
lret
cmc
cvtps2pd
pushl
sub
adc
sbb
xor
lret
push
dec
rclb
cs
add
rol
push
xchg
inc
in
mov
sub
mov
lahf
shll
sarl
jp
adc
cs
push
xchg
push
dec
enter
mov
push
jecxz
add
pop
inc
adc
adc
add
mulb
push
lods
pop
loop
pop
adc
and
or
mov
mov
mov
lret
sbb
pop
add
pop
rcll
jne
andb
aad
cmp
sbb
fwait
pop
push
mov
and
jne
std
sarb
and
jne
sub
pop
xchg
jne
or
jne
jle
sub
fwait
aaa
pushl
orl
repz
ljmp
fs
fists
push
js
pop
lahf
cmp
xchg
add
lret
mov
jb
mov
mov
or
js
into
clc
lret
sbb
xchg
fcoms
imul
push
cld
mulb
popa
inc
add
xor
mov
outsl
lods
outsb
imul
xchg
push
inc
mov
hlt
adc
push
jge
push
outsb
in
adcl
sarb
sub
divb
push
push
insb
jl
adc
repz
mov
dec
or
mov
mov
lods
adc
enter
push
sbb
and
daa
fnstcw
dec
scas
lcall
pop
fbstp
aam
pop
mov
jg
lahf
in
mov
ds
pop
sbb
imul
mov
jnp
cmp
ret
fmuls
jmp
mov
dec
sub
insl
inc
sbb
inc
addr16
out
adc
pop
sub
lret
mov
jb
mov
dec
cmp
mov
rorl
and
push
ror
dec
pop
inc
clc
addl
inc
mov
jbe
pushf
cmpl
cmp
insl
jne
sub
sbb
jae
push
add
push
movsl
jns
push
je
xor
outsl
or
or
sbb
push
pop
dec
inc
cmp
scas
aaa
or
push
or
adc
inc
mov
loopne
fimuls
mov
jo
int3
sti
push
push
jle
cmp
je
in
push
or
loop
add
jne
andb
xchg
mov
cmp
add
xor
dec
dec
rcrb
rclb
sbb
mov
or
jnp
rorl
mov
cli
push
pop
adc
scas
mov
cmp
jl
mov
mov
out
push
repz
fidivs
ficoms
outsb
lock
sbb
push
imul
ljmp
sbb
xor
sbb
mov
jns
outsl
push
sbb
test
icebp
add
push
stc
mov
and
adc
or
pop
pop
clc
or
mov
mov
out
xor
icebp
mov
sahf
jge
mov
pop
ds
dec
and
sbb
cli
add
inc
ss
xchg
lock
dec
or
fwait
push
adc
popa
fldenv
mov
rolb
or
sbb
nop
inc
icebp
mov
lds
mov
loopne
movl
scas
pusha
roll
pop
mov
adc
fisttpll
add
jno
pop
mov
andb
xor
push
xchg
add
sbb
adc
cmp
xor
roll
pusha
fs
dec
jo
js
mov
mov
fsubr
fwait
push
xor
sti
pushf
cwtl
or
rcrl
cli
mov
dec
int3
popf
cmp
or
pop
scas
sub
sbb
xorb
jns
imul
fs
adc
and
in
ja
jle
movb
sbb
xor
movsl
rolb
mov
dec
test
aam
xchg
cmp
enter
fadds
sbb
enter
jo
orb
push
enter
inc
dec
push
jno
out
push
and
inc
mov
xorb
jmp
cmp
xorb
pop
sbb
push
adc
push
mov
push
lods
adc
jo
adc
mov
sbb
push
imul
pop
adc
nop
shlb
xor
add
push
subl
mov
add
mov
test
inc
decl
scas
cli
adc
insb
and
push
xchg
xchg
sbb
jb
mov
cmpsb
mov
and
sbb
sarb
movl
sbb
mov
les
jle
push
scas
and
std
xchg
mov
xor
aam
adc
add
notl
test
in
push
jmp
mov
adc
sub
jl
test
and
test
and
inc
fimull
das
roll
and
pushw
pusha
adc
xor
test
jne
das
xorl
stc
andl
mov
sub
push
jg
mull
inc
dec
adc
imul
or
test
inc
jmp
and
xchg
add
add
das
call
stc
fldl
sar
xchg
pushf
je
lds
add
aas
cmp
sub
sub
sub
mov
inc
gs
fcmovnbe
xchg
les
mov
scas
je
dec
add
xchg
stc
push
jne
js
insl
push
mov
ds
jne
cmp
push
jl
sbb
cmp
imul
adc
sub
xor
fnsave
pusha
outsb
push
dec
mov
loope
add
daa
cmp
into
js
lods
push
sbb
or
or
fidivrl
filds
inc
push
call
stos
gs
push
inc
cmp
and
jne
imul
lahf
mov
in
push
or
cli
out
fidivrs
and
inc
mov
or
mov
imul
jmp
xor
inc
pop
cmc
add
push
adc
push
push
inc
and
push
dec
inc
pop
and
or
or
faddl
xlat
and
insl
adc
inc
ss
cmp
nop
sbb
mov
add
fldcw
dec
je
enter
repnz
push
sub
adcl
outsb
jmp
jb
sbb
lea
notb
sbb
add
and
mov
and
in
and
mov
adc
add
int3
lock
in
arpl
inc
push
inc
inc
lock
mov
and
and
sbb
nop
gs
je
or
jae
fs
pusha
xor
enter
push
push
sbb
je
xor
inc
icebp
or
jnp
test
ds
push
xchg
inc
pop
out
pop
pushf
cmp
cli
je
popf
add
and
push
ret
mov
cmp
cmp
lea
imul
push
sub
inc
dec
add
lds
fwait
jmp
push
jne
sub
mov
xor
or
add
adc
push
lock
mov
xor
lock
fwait
cli
pushf
inc
rorb
and
loope
fsts
pop
adc
movsl
push
into
ja
push
sbb
jmp
into
les
push
faddl
movsl
movswl
in
push
mov
mov
leave
add
add
push
and
rclb
popa
fildll
lret
sub
xor
or
xor
clc
push
lock
or
pop
pop
pusha
in
inc
add
ret
test
or
cs
shlb
and
xchg
inc
cld
xorl
mov
push
loopne
jle
jnp
add
and
jne
mov
adc
cmpsb
leave
enter
push
sbb
mov
inc
pop
jns
in
insb
stc
adc
jne
popf
aam
add
add
mov
sub
cs
add
xor
mov
jne
outsb
fdivl
push
shlb
ds
cmp
or
inc
or
in
les
outsb
inc
jne
sub
sub
mov
andl
das
cmp
test
jae
cmp
rorb
fmulp
cwtl
dec
push
lea
inc
mov
push
out
adc
add
lea
dec
pusha
into
ss
or
sbb
or
pusha
mov
mull
in
xor
fcoms
jecxz
mov
inc
orl
lret
add
sub
cmp
cmp
and
push
push
ret
imul
xor
test
and
and
rorb
out
cmp
test
fld
pop
add
push
cmp
dec
repnz
sti
dec
jne
xchg
insl
fcoms
cmp
fdivs
lods
test
ljmp
dec
mov
int3
mov
jg
sbb
mov
sbb
daa
stos
rcrl
inc
call
jge
dec
ljmp
or
es
orb
or
pop
out
xchg
xchg
and
out
jmp
pop
movsb
xchg
xchg
in
adc
push
in
jne
push
push
cmp
cmp
pushf
push
pushw
pop
push
adc
xor
xor
and
sahf
mov
aaa
jns
lea
xor
lods
pop
and
ret
or
sub
sub
xchg
dec
inc
mov
cltd
mov
push
adc
push
or
ja
adc
ja
fmuls
lock
cmpl
pop
hlt
inc
push
pop
stos
push
fmuls
jge
cli
adc
sbb
pushf
mov
push
jmp
je
sti
inc
test
push
inc
add
movsl
cmpsb
fistl
mull
rcrb
and
lret
loope
fdivp
xor
xor
dec
sarb
pusha
xor
mov
movsl
add
push
js
jl
push
dec
mov
sbb
and
insb
lea
push
adc
add
push
jo
add
cmp
jg
push
adc
repnz
lods
pop
das
mov
orl
insl
ret
xor
pop
sbb
popa
aaa
cmp
shl
jae
and
fisubrs
fdivp
sub
aaa
push
cmp
or
test
fisubrl
and
xchg
pop
lcall
xor
jns
je
or
push
push
and
jne
movsl
pop
adc
sbb
jl
repnz
or
inc
dec
imul
cwtl
push
aam
adc
jbe
and
pop
cli
sub
inc
call
mov
jp
inc
push
or
jae
les
fstpt
adc
fcoml
adc
xchg
and
pop
mov
mov
push
add
popf
inc
jg
adc
mov
add
mov
push
adc
push
cmp
pop
adc
je
imul
sahf
push
sbb
or
mov
and
sbb
xchg
add
mov
cmp
mov
push
cs
leave
int
mov
push
roll
pop
adc
nop
arpl
sub
or
adcb
add
jge
cmp
push
imul
adc
and
test
icebp
aaa
push
xor
call
rolb
push
mov
leave
adc
jo
and
sub
xlat
sbbb
push
fnsave
xchg
push
xor
and
or
or
pop
jo
rclb
pop
frstor
push
mov
pushf
adc
dec
sbbl
addl
insl
xchg
inc
add
sbb
sbb
push
jnp
xor
xor
sbb
ds
inc
xor
dec
push
xchg
or
shlb
sub
cmp
js
or
movq
js
fwait
xchg
cmp
js
sub
mov
dec
adc
js
out
movsl
jo
les
cmp
lcall
cmpsl
inc
popa
mov
mov
std
incl
pminsw
or
sub
inc
push
and
lds
inc
sbb
mov
or
adc
inc
in
jmp
push
leave
sbb
pusha
push
rcrl
and
mov
cmc
js
aas
lods
icebp
dec
ret
jmp
pushl
add
aaa
arpl
call
lea
push
orb
jecxz
mov
mov
inc
or
xchg
rcll
lods
pop
add
sbb
test
fcoms
pop
mov
test
xor
shr
cs
jl
andl
add
adc
xchg
mov
ret
pop
fs
nop
stos
cltd
mov
sahf
les
inc
jae
mov
leave
and
jecxz
cmp
int3
in
mov
push
push
movl
scas
popa
stos
jo
inc
xor
cmpsl
shr
adc
fistpll
frstor
and
add
xchg
jno
sub
mov
push
mov
sub
add
nop
les
dec
adc
rcrb
mov
ret
push
pop
add
inc
and
add
push
jl
xor
je
push
pop
ja
out
sub
sub
xor
addb
pop
jmp
and
sbb
jno
mov
das
pop
bound
or
or
add
pop
or
mov
mov
arpl
jne
jns
pop
pop
sub
xor
xor
mov
pop
lock
mov
sub
mov
pop
in
mov
sub
add
cmp
add
sbb
cmp
add
clc
inc
mov
sbb
mov
fdivl
cmp
dec
or
dec
jl
loope
xor
push
or
jmp
fistl
lock
xchg
mov
add
add
fisttps
add
push
leave
adc
loopne
cmc
imul
ja
xchg
dec
testl
inc
add
jb
push
inc
mov
aas
mov
sub
add
shrl
inc
push
pop
sub
xchg
add
xchg
into
outsb
movsl
sarl
aaa
add
pusha
and
sbb
jle
rcr
movsl
push
push
pop
loopne
add
mov
jl
mov
xchg
push
rorb
sub
cld
push
test
or
add
xchg
mov
or
hlt
push
add
pop
orl
insl
mov
mov
mov
or
sahf
idivb
mov
out
nop
inc
mov
adc
call
fcomip
neg
adc
pop
inc
push
popa
daa
insl
cmpsl
test
stos
or
mov
inc
pushf
jmp
es
mov
adc
addr16
pop
push
lcall
aaa
push
push
inc
pop
cwtl
imul
push
std
or
cltd
idivl
push
or
pop
orb
addb
add
mov
add
ret
pop
daa
xorl
or
cmpsb
sub
mov
test
iret
pop
mov
rcll
jecxz
push
add
push
push
subl
je
adc
xchg
pop
add
xchg
and
push
lcall
add
xchg
js
rolb
fst
test
xchg
fsubrs
adc
xchg
scas
es
or
lea
sub
daa
js
xlat
sbb
pop
fsts
test
push
sbb
fwait
adc
cmp
pop
mov
add
daa
aam
add
call
movsl
or
pop
sbb
aam
mov
mov
jmp
jns
rorb
and
jo
stos
cmp
xchg
hlt
jbe
arpl
inc
xchg
sub
cmpsb
sbb
push
mov
xchg
jb
push
inc
outsl
push
or
jae
sbb
push
add
lock
jmp
jae
orl
xor
push
sbbb
ja
cmp
dec
dec
mov
sbb
je
xor
call
add
push
add
add
stos
lcall
dec
mov
adc
sbb
adc
inc
cmp
push
cmp
adc
sbb
setns
push
xor
ja
cmp
icebp
jle
pop
jmp
cmc
pop
mov
xor
add
cmpsl
lods
pop
pusha
push
cmp
push
jg
add
cltd
pop
mov
outsl
add
imul
adc
xor
jecxz
out
ret
pusha
mov
stos
out
pop
or
cmpl
push
push
outsl
inc
cli
push
cld
dec
movb
test
mov
sbb
pop
adc
out
repz
xor
shr
inc
add
jge
xor
push
loopne
adc
cmp
pusha
and
adc
hlt
aam
add
or
push
cmp
std
pop
decb
outsb
jnp
add
jno
repnz
mov
bound
out
in
sub
out
insl
lods
jae
movsl
mov
loopne
dec
imul
bnd
pop
popa
sbb
push
arpl
pop
lock
gs
adc
inc
lock
push
push
cwtl
movsl
inc
fstpl
and
addl
push
int
les
je
fdivs
call
dec
push
push
icebp
or
pop
int3
xchg
test
mov
pop
arpl
popa
inc
pop
addb
shll
xor
lods
sub
jae
pop
pushf
pop
test
jmp
dec
cmpsb
clc
adcb
out
add
mov
adc
lds
test
mov
push
ljmp
jg
push
adc
dec
add
or
push
jmp
jg
inc
xor
xor
dec
sbb
and
add
pop
jo
inc
xchg
loop
adc
jno
add
mov
or
or
rolb
pop
add
jmp
push
fmull
pop
jae
push
jbe
pop
mov
cmp
push
out
sbb
mov
pop
mov
sub
xchg
pop
adc
xor
addr16
mov
pop
sbb
out
ret
jbe
es
pop
sbb
mov
jo
sahf
repz
in
sub
jo
cmp
fs
dec
xor
in
push
jne
adc
inc
jo
sbb
sub
mov
adc
mov
xor
pop
or
mov
push
or
fdivrp
add
add
jge
push
addl
test
mov
mov
hlt
roll
mov
mov
pop
loope
fwait
push
sahf
mulb
in
adc
mov
xchg
add
adc
push
stc
push
cmpb
and
push
addb
and
sub
gs
rcrl
xlat
adc
push
sub
call
add
dec
dec
movsb
mov
sbb
add
xor
jbe
push
mov
cmp
test
sbb
cmc
pop
xor
push
push
xchg
aaa
test
pop
testl
call
and
rol
adc
out
call
dec
mov
mov
xor
adc
movsb
cmc
subb
xchg
adc
and
insl
inc
adcl
jmp
test
pop
movaps
add
and
dec
sub
test
or
push
push
lret
lock
je
add
dec
nop
push
pushf
pop
negl
jl
sub
out
sti
je
add
lods
add
xchg
lock
clc
testl
inc
jle
mov
divl
mov
push
neg
ret
sub
xor
sbb
mov
cmpsb
inc
adc
adc
xchg
pop
mov
adc
add
push
sub
push
and
out
xchg
xor
cmp
sbb
sbbl
sub
xor
push
dec
or
or
and
dec
ret
jnp
xor
fs
sub
or
add
sbb
fimuls
rcl
mov
pop
or
xchg
or
ljmp
mov
or
xorl
lret
mov
pop
roll
lods
jbe
pop
loope
pusha
and
sub
out
add
sbb
mov
aas
adc
cmp
push
add
add
lret
mov
xchg
mov
and
aad
adc
cmp
adc
pop
push
or
jne
mov
mov
inc
and
mov
add
jno
cmpsl
adc
fwait
mov
addl
das
in
daa
xorb
dec
cld
in
shlb
add
lret
popf
xor
cmp
sbb
push
xor
xchg
add
out
sub
xchg
and
cmp
insb
adc
aaa
addr16
pop
pop
add
int3
adcb
cld
push
dec
es
adc
cmp
adc
testb
loopne
mov
andl
cltd
adc
or
popa
cmpsl
or
push
xchg
lods
mov
sbb
fs
orl
jl
cmpsb
jne
ret
outsl
mov
in
testb
sti
dec
ja
je
or
je
or
sub
or
xchg
rclb
xchg
scas
cmp
jns
pop
fisubl
js
sbb
or
add
or
jne
sahf
sbb
jo
popa
jnp
jnp
das
xorb
jmp
cmp
rclb
adc
adc
xchg
cmpsb
push
cmp
and
int3
mov
inc
add
ja
mov
inc
dec
divb
lcall
test
jmp
add
inc
daa
inc
lea
adc
lret
add
or
add
repz
and
adc
inc
or
push
pop
cmp
sub
adc
push
fsubs
jle
push
dec
test
xchg
and
push
adcb
add
inc
or
aam
adc
call
pop
aaa
mov
ret
dec
dec
je
cmpsl
cmp
ret
std
sub
xchg
sub
inc
add
sbb
xor
shrl
mov
jmp
daa
or
ret
push
adc
inc
push
int3
mov
and
adc
xor
sub
mov
leave
shlb
or
test
std
inc
sbb
mov
int3
int3
and
push
adc
jne
int3
or
lods
loopne
in
adc
or
and
aaa
mov
inc
pop
cmpsl
sbb
xor
push
popa
jne
cmp
mov
dec
or
ret
out
adc
loopne
ds
icebp
clc
or
cmc
add
push
mov
addb
mov
out
or
movb
inc
mov
int
jne
adc
outsl
xchg
jb
jo
push
or
dec
mov
arpl
pop
push
imul
cltd
inc
add
xor
inc
add
enter
adc
xchg
add
xor
inc
movsl
cmpl
fwait
clc
scas
push
and
xchg
add
nop
inc
pop
add
orb
ds
push
fs
jb
fsubr
and
and
pop
mov
pop
in
add
sub
loope
jge
mov
mov
cmp
pop
cmp
js
lods
mov
adc
push
push
mov
fsubrp
push
das
jno
inc
xor
int
fdivrl
pusha
push
ret
pop
cmc
fsubrs
mov
mov
adc
out
push
bound
mov
nop
scas
mov
jbe
fidivrs
xor
aas
xchg
loopne
sbb
roll
xchg
cmp
dec
sbb
data16
mov
in
xchg
push
xor
das
addl
inc
js
inc
sbb
mov
push
andl
jmp
int
lea
das
jne
cmp
sti
das
arpl
stos
std
decl
or
mov
jmp
cmp
rcrb
or
dec
inc
sub
je
jecxz
ljmp
movsl
or
push
out
adcb
jecxz
adc
sbb
or
push
out
test
cwtl
jb
sti
nop
mov
push
daa
inc
loope
dec
rcll
and
adc
add
inc
fcoml
xchg
jmp
inc
sti
inc
mov
or
mov
nop
pushaw
adc
mov
lds
jo
sbb
push
sub
jne,pn
sub
test
outsl
in
popa
lea
mov
ss
lret
mov
cltd
or
sub
incb
movl
in
cld
js
or
test
lcall
lea
hlt
mov
and
int3
sarb
and
sub
sub
cmp
pop
sbb
movsb
sbb
xor
or
mov
or
inc
ja
or
jo
insl
pusha
jne
fidivl
push
popa
xchg
or
adc
and
add
mov
sub
cmp
roll
fisttpll
into
adc
pop
popa
and
jp
adcb
push
mov
push
inc
mov
je
rcl
add
cmp
insb
sahf
mov
daa
in
subb
xchg
push
insl
icebp
add
sub
dec
sahf
imulb
repz
pop
movsl
cltd
inc
xor
xor
aaa
push
xchg
loope
pop
aaa
in
mov
xchg
dec
cmp
inc
movsb
xor
mov
add
dec
push
inc
dec
or
pop
push
loop
clc
orb
push
pop
add
push
ljmp
ja
adc
mov
mov
mov
sbb
and
xchg
js
sub
add
adc
mov
mov
mov
adcl
mov
pusha
and
xchg
ret
cmp
cmp
mov
adc
out
adc
push
push
jp
lods
popa
into
cmc
xchg
out
or
sbb
popa
mov
fmuls
jne
cmpsl
in
push
inc
jp
xchg
push
inc
inc
lock
pcmpeqb
add
lock
pop
pop
mov
and
cmp
or
pop
push
ss
push
jmp
cli
jbe
testl
addl
add
dec
add
add
cmpsb
rorb
mov
aaa
ret
pop
jne
xor
adc
bound
imul
fildl
push
push
jg
je
mov
jne
test
lea
pop
jp
fsubs
pop
test
push
js
je
xor
pusha
sti
jge
sti
and
dec
sti
fiadds
jl
sbb
xchg
xchg
das
movsl
rolb
sbb
jmp
ret
rcr
std
and
adc
dec
dec
pop
test
inc
movl
dec
adc
and
mov
rorl
lea
mov
lods
push
xor
push
rcrb
cmp
cmc
add
add
imul
push
add
inc
jge
inc
inc
and
popa
das
sub
pop
jno
mov
inc
into
jle
into
cmc
test
fcompl
ror
push
sbb
push
lods
in
mov
push
mov
adc
xchg
mov
sbb
test
sbb
in
add
sahf
push
sub
int
adc
add
mov
push
das
mov
inc
push
dec
gs
fildll
lock
mov
sbb
dec
ret
pop
and
mov
test
mov
or
in
loopne
lods
das
mov
int3
sub
mov
repnz
rcl
pop
mov
xchg
cmp
cmpsl
pop
xor
and
in
addr16
cmp
lods
repz
push
dec
mov
popf
mov
test
jecxz
mov
and
xchg
enter
fdiv
jg
hlt
add
push
enterw
lock
je
pop
add
push
inc
cmp
roll
cmc
jge
or
inc
and
rol
arpl
aas
dec
or
out
or
out
mov
push
lret
cmp
je
and
loopne
push
mov
popf
and
sbb
mov
mov
in
sbb
dec
adc
push
or
sti
and
dec
xor
sub
mov
push
les
sub
push
repnz
push
dec
call
pop
je
mov
xchg
and
movsb
dec
and
nop
lahf
scas
mov
sahf
rolb
into
fsubs
or
mov
cmp
jp
addr16
andb
popa
rcll
je
leave
call
add
int3
add
shrb
inc
imull
dec
movsb
push
mov
sti
xor
mov
jnp
cmpb
dec
je
sub
push
add
mov
jno
xor
and
dec
jp
cld
rol
add
and
cmc
aaa
jo
pop
adc
push
cld
jmp
test
popf
std
out
inc
push
nop
and
fdivrl
stos
cltd
push
cs
addl
xor
and
pop
push
xchg
and
jge
imul
xorb
out
arpl
mov
lcall
lahf
jne
pusha
inc
cmp
sbb
jb
rolb
ljmp
rclb
rclb
jmp
mov
xchg
and
lea
mov
dec
add
mov
mov
add
jge
sub
or
xor
jo
xor
xor
mov
xor
xor
cmp
jle
fs
cmp
inc
xor
rclb
cmp
inc
and
jle
and
data16
dec
in
fs
jecxz
ret
lret
inc
aas
add
pusha
dec
fs
push
outsw
push
dec
dec
orb
lock
push
jg
xor
xchg
movsl
test
jno
in
fwait
in
jl
daa
jb
sti
jae
push
jno
neg
push
adc
dec
push
xchg
lahf
testb
add
dec
sub
jne
push
inc
mov
cltd
test
popf
push
add
mov
js
or
sbb
mov
xor
and
add
pop
pop
push
sub
push
test
xchg
lods
or
push
adcb
aas
mov
es
push
sbb
sbb
push
movsl
sbb
xor
inc
imul
sbb
cmp
mov
loope
sub
outsb
add
push
jmp
and
es
sbb
call
cmp
jle
popf
jns
inc
add
mov
mov
add
dec
je
cltd
fdivl
inc
in
cwtl
icebp
test
add
das
inc
in
push
xchg
dec
test
in
stos
lcall
pop
in
push
cmp
dec
mov
mov
sbb
cmp
mov
fisttpll
xor
testb
loopne
add
ret
xor
ds
pop
cmp
sarl
jnp
mov
push
mov
jne
cmc
ret
inc
mov
push
icebp
adc
arpl
ljmp
sbb
push
sbb
popf
add
sub
test
ss
popf
pop
jg
or
push
fs
int3
add
sbb
jne
add
dec
call
push
ret
xlat
aaa
add
push
lret
loopne
adc
mov
and
pop
in
int3
and
shlb
add
add
int
lock
icebp
scas
pop
push
inc
mov
jecxz
add
add
mov
imul
shll
jge
test
mov
loope
xchg
add
fbstp
dec
lahf
add
loopne
out
shl
mov
add
jp
push
dec
dec
in
xchg
add
clc
jno
leave
arpl
push
cmp
jb
lods
jbe
push
data16
and
lahf
adc
hlt
and
jl
lcall
dec
or
incb
sub
add
clc
jne
xor
mov
add
add
or
pop
shlb
mov
ficoml
mov
add
fs
sahf
jmp
adc
push
push
jne
pusha
add
or
inc
push
andl
jge
push
jns
lahf
ja
adc
push
call
mov
sub
push
and
or
jmp
add
fsubr
mov
or
in
xor
sub
or
insl
xchg
inc
add
sbb
imul
shr
pcmpeqb
mov
les
nopl
sbb
add
mov
shrb
mov
jo
jns
inc
fisubl
cmpsl
add
clc
sub
aam
and
adc
repnz
decl
pop
movsl
in
mov
stc
and
adc
fcoml
rdtsc
jnp
and
fiaddl
lahf
call
loop
adc
mov
jmp
inc
verr
lods
push
mov
mov
imul
mov
arpl
or
xchg
push
sbb
cmpsb
adc
enter
sub
sub
mov
test
cmpsl
cmp
pop
dec
lock
lods
or
push
add
das
pop
scas
lods
je
or
mov
push
std
in
adc
mov
cmp
jbe
add
xor
push
leave
push
xor
jns
xor
xchg
and
or
ret
sub
adc
add
xchg
inc
lock
mov
and
dec
dec
in
mov
sbb
cld
inc
sbb
mov
sbb
push
dec
xchg
clc
adc
nop
push
or
dec
add
adcl
jne
test
push
test
dec
sub
jo
jae
sub
add
mov
cmp
push
cmp
sbb
lods
add
adc
add
jo
push
test
aad
mov
jbe
xchg
jno
inc
or
sub
fsubl
pop
mov
stos
mov
cmpsl
xor
das
test
xor
gs
mov
inc
pop
fildl
fs
or
jns
repz
lock
sub
lods
popf
add
adc
in
adc
das
push
mov
inc
enter
push
cvtpi2ps
mov
mov
adc
sub
cmp
das
xlat
mov
jne
andl
enter
sbb
push
or
pop
inc
aad
mov
ljmp
push
sub
jnp
or
jae
cs
aam
mov
sahf
addl
std
xchg
jno
int
sbb
sbb
or
and
xchg
repnz
jle
cld
adc
fsubrl
fwait
sub
es
push
sub
shrb
push
iret
loopne
jo
push
inc
push
cmp
push
push
loopne
inc
and
mov
in
mov
rol
push
repnz
popf
stos
add
add
icebp
mov
je
add
ficoms
icebp
jo
daa
push
lea
adc
leave
mov
rcl
loop
cmp
xchg
and
push
sbb
ret
or
pusha
lods
shll
std
sbb
or
jmp
sbb
push
add
add
or
inc
jecxz
fimull
leave
sbb
dec
mov
inc
xor
sbbb
arpl
stos
xor
imul
push
dec
stos
fcomps
imul
push
ljmp
sbb
inc
testl
outsb
shlb
loope
or
pop
testb
xlat
mov
fs
adc
and
jne
dec
lea
ret
arpl
fsubl
mov
sub
sarl
or
lods
pop
and
push
mov
imul
je
in
xor
add
sub
adc
mov
adc
pusha
push
imul
add
cmp
sub
add
ret
decl
test
mov
lret
push
sub
pop
ret
je
aaa
cmp
ret
mov
outsb
dec
enter
sbb
bound
add
xchg
or
jnp
sarl
ret
and
pushl
and
clc
inc
loopne
shr
xchg
lea
push
xchg
or
push
hlt
jecxz
mov
in
movsb
mov
jecxz
fs
icebp
push
out
jns
jecxz
daa
pop
roll
adc
popa
cmpsb
jno
clc
or
dec
nop
orb
and
dec
pop
and
push
mov
rcll
add
and
add
bound
push
sbb
int3
sub
mov
adc
and
xor
lcall
scas
cmp
stos
jl
push
clc
shll
nop
rolb
cld
jmp
shrb
cld
cld
adc
data16
sub
jle
jo
pop
jbe
insb
cwtl
inc
pop
add
sti
inc
and
lea
cmc
xor
xor
shl
mov
cmp
jb
cmp
outsl
and
lods
in
je
jne
add
sub
sub
mov
repz
sbb
cmp
push
js
jne
mov
pop
inc
insb
add
and
add
sub
pop
add
xchg
fidivrs
inc
push
mov
test
inc
sti
jl
test
sahf
fstps
xchg
jg
cmp
addr16
lods
lret
decb
or
push
cltd
pop
mov
jo
or
jg
inc
xor
xchg
dec
add
jmp
sub
push
lods
mov
das
test
jne
adc
push
es
xor
test
icebp
inc
cwtl
xchg
push
xchg
dec
xchg
jnp
add
pop
aas
sub
jge
jle
aam
sub
in
or
inc
xor
xchg
xchg
das
das
xor
cmp
cmpsb
inc
and
insb
popf
xchg
xchg
cmp
dec
lods
adc
shrl
jbe
addb
incb
add
or
inc
add
cmp
ja
and
pop
mov
icebp
sub
jg
dec
or
insb
and
jno
test
sbb
jno
adcl
and
mov
movsl
icebp
and
push
mov
rep
pop
jg
xorb
jne
add
movl
mov
and
jmp
sub
push
addl
xor
jns
jmp
ss
adc
popf
cmpb
and
insl
or
inc
sbb
pop
clc
js
pushf
sbb
and
pusha
or
add
sub
adc
test
call
inc
shrb
adc
mov
push
shl
jmp
pushf
jmp
out
pop
mov
stos
jl
cmp
mov
push
xor
cli
daa
mov
xchg
das
xor
lods
dec
and
xchg
xor
jle
dec
sub
dec
jmp
xchg
or
inc
cmpsl
in
test
mov
xor
mov
xor
cmp
add
and
and
inc
lods
push
mov
rep
pop
adc
inc
inc
inc
xor
or
outsl
aaa
dec
sub
or
sbb
cmp
jae
fadd
jnp
outsl
shlb
add
or
psrad
fldl
push
sbb
fisttpl
sub
jne
push
push
cltd
cmp
and
cmpsb
xlat
push
and
push
mov
daa
repz
pop
loopne
adc
mov
data16
sbb
sub
and
jmp
or
adc
aas
mov
inc
ret
adc
mov
inc
push
data16
icebp
adc
lods
mov
cmp
and
sub
push
ret
xchg
into
add
dec
pop
cmp
mov
rolb
xchg
icebp
scas
push
iret
test
fildll
sub
mov
mov
jae
cmp
mov
push
push
push
or
push
jne
sbb
jmp
call
out
xchg
sbb
add
add
addl
int3
dec
roll
lock
out
sbb
inc
mov
push
dec
push
push
add
outsl
inc
test
mov
sub
xchg
jle
dec
cmp
xor
adc
std
jl
cmp
insl
and
xchg
dec
jmp
jl
xchg
push
in
xor
adc
sub
xlat
mov
adc
adc
sub
cmp
loopne
add
sbb
out
add
inc
addr16
mov
roll
movsl
add
sarb
dec
jne
lcall
xchg
es
bound
jnp
shrb
push
loope
sbb
sbb
xchg
jge
dec
sub
roll
push
cmp
rclb
loopne
push
ss
cmp
mov
orl
mov
xor
pop
ss
sub
adc
js
fiadds
and
cwtl
js
add
sbb
fisubrs
into
and
mov
fildl
or
cmp
adc
add
lcall
pop
add
xor
pop
xchg
and
push
adc
mov
aam
loopne
je
push
dec
test
push
or
cmp
andl
add
inc
cmp
xorb
lahf
add
dec
pop
add
add
dec
mov
mov
sub
sar
into
rcl
jnp
repnz
add
rcrb
sbb
dec
sbb
dec
mov
mov
and
imul
stos
jecxz
add
jbe
fcmovu
and
movb
cmc
xchg
add
aaa
je
imul
ret
sub
add
sahf
ja
dec
sbb
sub
and
mov
adc
sub
ja
push
xchg
cmpsl
addr16
xchg
int3
shrl
lock
cmp
mov
nop
cli
cs
push
pop
sub
ret
adc
js
and
shr
add
cmp
sbb
jl
lret
sbbb
ret
notb
je
dec
aaa
ljmpw
pop
or
out
or
mov
lcall
push
mov
mov
jle
push
sbb
sub
xchg
jl
int3
fnsave
pushf
sbb
loop
adc
jg
push
outsl
add
in
dec
pop
dec
pop
pop
xchg
dec
in
or
xchg
xchg
xchg
pusha
mov
sbb
adc
fisubrs
orb
push
shll
mov
stc
jne
loopne
ret
fsubrs
incb
inc
mov
pop
cmp
and
sbb
jae
jb
jae
arpl
mov
in
rcrb
jae
mov
add
pop
push
pop
push
cmp
ret
push
push
push
dec
dec
icebp
sbb
push
fnsave
test
inc
inc
test
adcl
or
dec
sub
in
jo
cmp
add
adc
jbe
and
inc
sbb
cltd
mov
rclb
cmc
cltd
out
lods
mov
jnp
mov
add
jae
and
xchg
or
jne
fs
or
lcall
add
push
dec
aam
ret
out
cli
movntq
xchg
jne
fdivs
inc
adc
fimuls
and
jmp
mov
mov
call
xor
mov
test
jbe
aad
ficoml
push
cmpsl
or
imul
pop
sbb
xor
adcb
ds
bnd
subl
ret
jp,pn
adc
inc
mov
cmp
inc
mov
mov
dec
or
sbb
nop
add
lahf
arpl
enter
adc
sub
lahf
rclb
adc
adc
addr16
addr16
arpl
sbb
cmp
inc
mov
pop
adc
and
inc
in
adc
pop
xchg
mov
sar
sub
or
out
pop
or
ja
inc
call
mov
faddl
cmpsl
jne
clc
xor
inc
pushf
test
jnp
je
and
cmp
loope
sbb
add
sub
cmpb
mov
nop
mov
and
les
adc
or
xlat
pop
fwait
and
add
sbb
mov
aas
and
cmpb
and
sbbb
and
sbb
jb
adc
push
xor
jg
sbbb
sub
sbbb
jo
sbb
sbbb
hlt
mov
subb
aas
xor
das
scas
mov
inc
in
cmp
pop
faddl
in
aad
xor
pop
std
insb
leave
xchg
xor
xorb
pop
jne
mov
js
cmp
pop
mov
mov
adc
sbb
lea
leave
fnstsw
or
or
in
pusha
cmp
pop
add
ja
adc
mov
pop
sbb
leave
mov
or
xchg
test
sbb
cwtl
or
out
scas
or
adc
mov
pop
mov
dec
into
inc
and
mov
clc
rcrb
mov
call
cmp
xchg
mov
adc
jge
mov
jnp
mov
xchg
push
pop
fidivrl
sub
rcr
xchg
pop
lock
adcb
lds
mov
movsb
xchg
xlat
inc
mov
lcall
fimuls
es
sub
sarb
out
shr
aam
pop
add
pushf
adc
push
inc
and
push
sbb
jo
pop
mov
popf
je
and
mov
pop
mov
mov
negb
xor
ss
or
out
movb
mov
jo
sbb
aaa
sbbb
hlt
sbb
pop
int
es
rolb
add
add
test
inc
cmc
sub
jne
jp
add
lock
add
or
cmp
rol
adc
lock
pop
jne
xchg
jne
out
outsl
popa
fs
leave
push
loopne
icebp
push
add
and
xor
fs
fs
ret
cli
inc
test
xor
lea
jae
ds
push
xchg
add
lcall
pop
pushf
adc
insl
push
cmpsl
sub
mov
jp
lgs
sbb
out
push
or
sbbl
addr16
cmp
lods
addb
jbe
or
je
adc
orl
ja
pop
je
push
cmp
sti
into
xchg
sbb
test
xor
insb
dec
sub
lds
cmp
adc
iret
or
mov
out
and
outsl
test
inc
mov
test
xchg
fdiv
cwtl
and
repz
pop
mov
in
mov
add
bnd
shrb
fcoms
adc
lahf
jne
push
in
inc
movsl
pop
or
mov
outsl
pop
sti
das
add
add
and
shlb
dec
clc
add
adc
cmp
into
lret
add
xchg
jo
movsl
int
and
dec
inc
andl
lret
pop
lock
adcb
nop
scas
add
sbb
add
xchg
test
add
rorl
cmp
nop
mov
popl
push
aam
or
lcall
xor
jle
pop
mov
add
out
stos
popf
cmp
and
and
mov
lea
adcb
es
jo
lcall
and
call
cwtl
out
cmp
aam
adc
xchg
adc
js
movsl
pop
lret
cmp
sbb
aam
xlat
jmp
xor
jmp
mov
pop
jnp
or
lock
push
and
in
adc
outsb
push
mov
fdivr
aam
add
addl
dec
lar
mov
scas
fistl
mov
popf
scas
inc
mov
lcall
es
adc
dec
clc
jo
sub
adc
cmp
push
ret
xchg
jl
clc
jl
mov
adc
push
pusha
enter
adc
jbe
jmp
lahf
dec
outsl
addb
rclb
outsb
or
add
xchg
adc
pop
fnstsw
sbb
add
mov
test
scas
jp
mov
out
sbb
test
ja
cmpsl
sbbb
push
mov
test
popf
out
loopne
ret
adc
nop
test
std
shlb
pop
xor
add
dec
sub
and
dec
hlt
mov
shl
aas
loopne
pop
sbb
faddl
push
push
pop
rorb
data16
sbbb
repz
jge
inc
js
in
adc
sbb
addr16
add
xchg
pop
push
push
sbb
adc
or
mov
ds
out
mov
mov
mov
dec
add
xchg
shl
je
mov
push
jb
push
sbb
dec
stos
adc
cmp
push
rolb
push
clc
call
fadd
sbb
fs
mov
mov
clc
movsl
mov
xchg
mov
and
stos
fwait
xchg
nop
mov
cmp
loope
es
mov
pusha
test
lcall
adc
pop
dec
aaa
xor
xchg
add
ljmp
rorl
sbb
fwait
adc
jo
fs
movsl
or
fs
insb
movsl
and
xor
add
int
or
push
and
pop
shll
enter
pusha
push
ficompl
imull
inc
lods
sbb
shll
dec
in
dec
movsl
aam
inc
xchg
dec
sub
mov
ret
push
insl
push
push
lea
xchg
adc
test
mov
or
mov
sub
or
test
pop
into
push
outsb
mov
add
pusha
push
mov
or
test
push
aaa
shlb
lock
xchg
ljmp
and
mov
aam
out
and
xor
gs
dec
and
insl
dec
cs
sbb
push
or
pusha
ret
sbb
mov
xor
cmc
out
loope
xchg
lcall
mov
lret
movsb
outsb
mov
jno
lods
into
mov
aas
sti
push
or
mov
lock
mov
mov
cs
loopne
cmp
jbe
pop
jne
xchg
push
sbb
fs
push
outsl
mov
test
std
sti
add
loop
add
ds
loop
test
outsb
adc
outsl
xchg
pop
xor
jne
int3
das
and
xchg
loopne
push
mov
test
sub
add
fcom
xor
add
movsb
sbb
lret
sbbl
sub
push
ja
icebp
popa
and
or
and
in
pop
adc
aaa
nop
push
adc
mov
sub
add
xor
inc
push
test
add
aaa
xchg
dec
ficoms
imul
xchg
movsl
dec
or
push
inc
stos
pop
jle
pop
mov
sbb
mov
loopne
and
add
adc
scas
and
andb
scas
or
cmpsl
stos
adc
xorb
pop
repz
pop
push
adc
sub
add
jmp
add
add
or
add
and
mov
pop
push
mov
pop
jmp
dec
sbb
test
or
loopne
mov
dec
ljmp
xchg
or
das
fs
rclb
push
push
mov
push
adc
push
repz
add
mov
mov
dec
sub
in
pop
dec
mov
add
in
push
clc
stos
push
add
push
je
sar
outsb
loopnew
jecxz
sbb
xlat
mov
or
stos
mov
inc
push
jbe
mov
push
mov
rcrl
xorl
test
xchg
cmp
xchg
xor
mov
sbb
and
sbb
sub
mov
shrb
lods
incb
pop
xor
push
pusha
insb
jge
fwait
ja
or
adc
inc
pop
test
jno
pushf
stos
das
cmp
mov
imul
xchg
add
dec
pop
xchg
xchg
mov
scas
and
mov
rcrb
in
call
sub
push
inc
sbb
xchg
mov
mull
push
adc
repnz
xchg
addl
jae
xor
push
cmpsl
adcl
mov
out
ss
inc
sub
or
add
mov
enter
or
rolb
jo
sbbb
out
pop
mov
adc
imul
xor
and
or
sub
add
mov
mov
adcb
adc
push
jno
inc
lods
jne
rcl
push
mov
test
fldcw
adc
test
xchg
scas
and
xchg
cwtl
xor
inc
pop
pushf
mov
or
pusha
cld
mov
or
push
sub
cmc
outsb
inc
mov
sbb
loope
mov
ret
js
lret
lea
xor
inc
clc
mov
enter
negl
mov
out
push
orb
dec
shlb
fwait
in
pop
sbb
jecxz
mov
dec
ret
mov
mov
push
lods
jmp
inc
pop
jnp
sarb
mov
movsb
sahf
add
inc
cmp
cmp
push
xchg
es
mov
xchg
sub
std
push
jge
mov
push
jmp
or
lea
icebp
push
test
stc
jbe
pop
xchg
sub
mov
test
jmp
outsl
push
iret
sbb
cmp
xor
lods
lods
aam
jge
mov
dec
add
mov
or
xorl
imul
and
mov
inc
push
inc
or
enter
sbb
inc
mov
or
shl
lahf
les
sbb
cmpsl
cmp
and
into
test
jecxz
mov
jno
cmp
pusha
shll
pop
mov
in
cmp
sbb
sub
or
push
imul
addr16
adc
pushf
dec
xorl
add
ficomps
subl
das
push
pop
cmpsb
mov
outsb
test
adc
adc
xlat
push
push
repz
or
mov
test
mov
je
shll
add
js
shlb
fldenv
mov
in
adc
lods
mov
faddl
cmp
scas
icebp
push
xor
mov
sbb
xlat
push
dec
add
pop
ret
mov
lea
inc
clc
stos
mov
fsubl
clc
sbb
test
incb
cmp
push
pop
aad
rolb
xchg
xor
daa
shlb
push
push
mov
mov
test
xor
cmp
pop
adcb
xorb
add
call
pop
sbb
cmp
jge
jnp
sub
xor
inc
inc
adc
push
jl
int3
sub
sahf
dec
cwtl
xchg
xchg
cmp
dec
cmp
out
cmpsl
pop
sub
movsl
mov
mov
andw
lock
sub
jae
idivb
xor
lods
xor
in
repz
jnp
mov
repnz
and
out
add
pop
push
mov
mov
divl
inc
test
dec
addl
sti
mov
insl
into
stos
push
mov
add
push
fstpt
sbb
pop
fsubl
hlt
sbb
pushf
mov
popa
adc
lods
xlat
lock
sbb
inc
xor
mov
mov
cmp
cmpb
mov
xchg
push
adc
or
loope
test
cmpl
and
adc
shrb
dec
inc
lahf
ljmp
gs
add
or
fsubl
add
inc
adc
call
fistpl
inc
cmp
mov
pusha
adc
ljmp
push
cmpsb
scas
bound
pop
pop
sub
mov
call
test
adc
xorb
pop
ret
jnp
inc
inc
jb
pop
daa
dec
add
je
inc
fs
in
push
add
push
push
in
jl
sub
and
jns
nop
cltd
cmp
repnz
mov
fsubrs
clc
addr16
popa
push
and
das
call
add
cmp
cltd
andl
test
fadd
sub
jne
dec
lods
add
fildll
call
or
loopne
add
inc
fcmovnb
add
repz
pusha
add
xchg
adc
not
add
lods
push
add
xchg
popf
loop
mov
adc
mov
jbe
aam
fwait
mov
scas
popf
mov
cmc
push
pop
xlat
cmp
aad
or
inc
push
das
orb
mov
cmpl
adc
mov
xorl
push
jo
fsubr
dec
mov
push
xor
pop
jns
call
push
add
lcall
jae
mov
dec
or
aam
movsb
sbb
std
rcll
or
sarl
or
out
bound
adc
inc
mov
aaa
add
lods
iret
jmp
outsb
lock
or
repz
cmp
ret
cmp
add
nop
aaa
loope
lcall
or
xor
xor
xchg
dec
push
imul
lahf
add
mov
hlt
mov
or
jne
push
jb
inc
sub
aad
cltd
sbbl
mull
pop
std
sbb
sub
jp
je
andb
sub
fwait
ljmp
jle
and
and
cmp
mov
outsb
adc
scas
cmp
or
outsb
outsb
add
push
jge
pushf
repnz
xchg
push
push
fists
or
cmp
jo
outsb
and
pop
bound
fnsave
lods
pop
sbb
cmp
xor
in
inc
fstps
inc
in
lock
sti
sbb
or
jge
cmpsb
leave
popf
cmpsl
xor
cmp
push
sub
sbb
sbb
fidivrs
and
xor
fs
inc
jmp
inc
jo
xlat
inc
sahf
push
add
addr16
and
or
dec
jmp
addl
add
mov
insb
or
movsl
push
or
fsubr
insl
mov
es
add
or
ds
loopne
lret
jmp
pop
cmpsb
xchg
add
lods
or
inc
sbbl
push
stc
mov
fcomps
lret
sub
sbb
and
cmp
mov
rclb
seta
adc
iret
incb
sarb
mov
pop
sbb
cli
fcoml
scas
add
xlat
out
popf
mov
mov
sbb
cmp
dec
pushf
lret
mov
xchg
les
push
add
jl
fnstcw
cmpsl
repnz
mov
mov
or
sbb
push
inc
movsb
imul
add
add
movsl
push
stos
stos
nop
flds
vmwrite
out
jns
lret
jb
lcall
adc
test
clc
in
and
and
or
jl
rorb
dec
inc
sbb
repz
jnp
aam
andl
test
jae
and
es
loop
cmp
popa
enter
ds
push
lods
dec
out
add
sub
rorb
jno
add
divl
dec
pusha
imul
movsb
and
arpl
or
jb
cmp
enter
cmp
out
sbbl
pop
mov
iret
cmp
ret
push
jmp
std
and
in
lods
in
ds
xor
lcall
and
pop
add
xchg
jmp
seto
sub
adc
pop
add
mov
inc
and
push
sub
pusha
and
jo
adc
imul
jns
scas
sbb
loopne
mov
sub
mov
mov
jg
adc
adc
mov
and
or
add
add
jo
fwait
or
mov
jns
rcrb
test
jns
add
push
cmpsl
fcmovnbe
sbb
repz
rcll
and
mov
jns
mov
jae
fld
pop
cwtl
xor
pop
hlt
push
into
dec
cmc
cwtl
or
cmc
in
xor
stos
inc
dec
and
mov
inc
adc
or
test
push
incw
scas
jge
jne
ss
jno
inc
inc
adc
jbe
popf
xor
test
gs
ss
dec
pop
cmp
mov
sub
mov
enter
jmp
fs
sti
gs
inc
push
stos
push
add
push
lods
push
add
sbb
mov
inc
pop
jp
loope
insl
mov
dec
rorb
dec
cmp
sub
mov
jns
push
cmp
inc
out
push
xor
push
push
dec
or
call
in
inc
fildll
loope
push
rcr
stos
mov
fcoms
fimull
dec
xchg
xor
jle
add
lret
inc
stos
nop
push
les
cmp
add
test
cmp
inc
daa
mov
negl
pusha
shr
cmp
insl
lea
lds
add
hlt
outsl
xlat
stos
divb
rolb
shll
lock
xchg
add
fcom
sbb
orl
loope
rorb
pushl
mov
ret
shr
cmp
jbe
add
and
add
pop
shr
loopne
gs
and
dec
loop
xchg
sbb
jl
mov
sub
cmpsl
mov
cltd
aam
sub
sub
rclb
adc
mov
xchg
xor
or
adc
dec
punpckhbw
add
jo,pt
lods
mov
dec
popf
mov
dec
inc
arpl
fucomp
dec
mov
add
xchg
test
and
xchg
imul
push
rcrl
mov
or
adc
mov
cmp
call
std
cltd
mov
add
mov
jl
popf
mov
loopne
ss
addb
xor
add
dec
pop
cmc
pop
sbb
les
push
or
xlat
jo
sub
push
jge
fdiv
xor
sub
pop
mov
testl
call
mov
addr16
push
shlb
and
out
insl
xchg
xchg
loope
jbe
cwtl
arpl
adc
mov
test
push
sbb
mov
jl
je
leave
mov
xchg
pop
jbe
dec
popf
rclb
loop
sbb
call
sub
rcl
add
pop
cmp
add
push
inc
fs
dec
dec
push
addr16
cs
xchg
or
ret
insb
imul
add
out
or
sar
push
inc
adc
test
inc
inc
scas
jmp
call
xor
and
leave
adc
les
repnz
inc
xor
jecxz
mov
pop
push
inc
add
or
xlat
dec
push
call
add
mov
or
push
dec
add
dec
rcrb
mov
dec
loopne
clc
mov
push
add
nop
add
xor
or
add
dec
cmp
rorb
xchg
dec
cltd
pusha
mov
stos
xchg
or
or
imul
cmp
mov
bound
xchg
mov
dec
cs
ss
lods
iret
pusha
je
inc
push
mov
jmp
xchg
inc
shrl
insb
mov
orb
jne
adc
push
or
xchg
popa
pusha
iret
adcb
lds
add
fwait
nop
sub
or
rcrb
mov
aam
mov
lods
repnz
adc
lods
adc
push
mov
adc
pop
and
enter
repz
pop
adc
fcoms
mov
jnp
xor
in
inc
in
loopne
add
xchg
ds
adc
dec
in
push
test
mov
cmp
leave
mov
les
test
fsubrs
mov
jbe
popa
std
fistpll
mov
adc
jns
movsl
mov
and
inc
adc
vcomiss
or
cs
jecxz
mov
aaa
pop
and
jb
roll
xchg
aad
add
add
jmp
adc
mov
add
mov
mov
fists
loope
inc
sub
and
push
pop
inc
cmp
fsubrs
lock
xor
push
pop
lods
fs
and
lods
inc
inc
cmp
insb
sbb
ror
and
es
or
jno
push
jno
sub
in
mov
dec
adc
shrl
mov
inc
stc
jb
je
push
js
fisubs
jecxz
sub
xor
mov
imul
push
jno
push
inc
iret
insb
call
xchg
lcall
sbb
mov
add
mov
nop
push
sub
shlb
add
xor
out
jns
gs
into
idivb
sub
push
or
add
ds
xor
jmp
push
add
xor
fs
imul
test
jne,pn
inc
in
push
and
push
push
movsb
fisttpl
add
lds
es
cltd
push
inc
inc
ds
mov
loope
adc
jp
mov
xchg
xor
cmp
addr16
cli
mov
lock
adc
sub
lret
mov
push
cmp
out
adc
dec
jne
cld
push
mov
test
mov
inc
and
mov
dec
inc
xor
insl
mov
inc
insl
add
out
or
jo
cmp
add
mov
push
adc
cmp
repnz
jp
sbb
test
rorl
loopne
mov
mov
jo
loop
sbb
inc
movsl
pop
mov
xor
pusha
fs
xchg
test
arpl
imul
adc
sbb
stos
and
sbb
push
in
rorl
sahf
mov
inc
jecxz
cmp
out
sub
xchg
cmp
pop
cmp
inc
imul
sbb
jge
lea
mov
adc
push
cmpb
test
mov
mov
or
adc
push
es
bound
sub
xchg
in
test
mov
sbbl
lods
mov
lcall
lea
add
add
add
sub
aaa
add
pop
add
mov
punpckhdq
jo
push
rcrb
ja
cs
pop
repz
jns
pop
pop
or
pop
jo
mov
mov
pop
pop
mov
xchg
sbb
or
mov
and
mov
sahf
sbb
cmpb
inc
pop
ds
test
and
lods
inc
int3
aam
call
dec
or
push
add
pop
lods
push
jl
push
xchg
mov
fmuls
pop
jnp
adc
aaa
loopne
adc
inc
mov
das
call
pop
mov
jno
jle
push
pop
mov
mov
jne
mov
ret
leave
push
cmp
jbe
xchg
clc
push
mov
mov
xor
lods
ljmp
mov
push
divb
stos
pop
xor
insl
lods
ret
sbb
leave
lret
xor
push
push
and
aaa
ds
cmp
pop
pop
jmp
push
sub
pop
mov
jb
sbb
mov
pop
or
orb
mov
inc
cmp
ja
test
xor
xor
out
mov
and
int3
mov
cltd
repnz
push
or
repnz
dec
adc
jbe
xor
dec
loop
int
pop
rcrl
mov
add
inc
or
or
inc
push
sub
or
adc
and
pop
mov
push
stos
clc
aam
and
jb
push
notl
adc
adc
leave
or
add
or
push
fisubrs
mov
repz
push
cwtl
or
test
mov
enter
in
stc
mov
sbb
mov
mov
or
mov
repnz
movsb
movsb
lods
mov
jns
pop
stc
mov
les
dec
inc
aam
jns
fcoml
pop
jmp
rcll
cld
push
aad
jne
rol
xchg
les
mov
mov
xorb
in
xor
mov
mov
dec
jge
add
lcall
test
xchg
sub
enter
add
test
add
push
add
mov
pop
or
jae
and
ficoml
mov
or
push
mov
xchg
jl
dec
es
jl
jb
pop
dec
or
push
and
xor
js
or
push
adc
push
adc
push
adc
xchg
test
fimull
mov
pop
stos
sbb
xor
add
call
xor
inc
fwait
xor
test
test
and
mov
push
or
push
push
xor
ja
dec
sbb
pop
sarb
add
daa
sbb
jge
je
sbb
into
ds
push
jne
push
mov
pushf
sbb
jle
mov
xchg
mov
adc
xor
arpl
cmp
pop
fsubr
sub
xor
xor
and
and
sub
mov
inc
cltd
mov
es
mov
sarl
lds
mov
add
or
lock
sbb
push
push
shll
clc
es
lcall
addl
pop
les
aaa
sbb
lcall
loope
jo
inc
lret
mov
rolb
aaa
add
insl
call
push
sbb
push
jno
or
inc
enter
jl
in
and
ljmp
popa
jecxz
jno
cmp
sub
out
shll
dec
clc
loopne
xchg
jge
xchg
push
loopne
pusha
or
js
lock
xchg
xchg
lock
jp
jle
imul
pop
gs
pop
aaa
xor
push
and
mov
cs
xlat
bound
pop
add
in
inc
cld
test
mov
fmul
aaa
add
rclb
cs
jecxz
icebp
mov
adc
add
scas
in
pop
rcrb
xor
adc
or
in
add
or
mov
pop
and
lods
dec
cltd
cmp
jns
add
push
xchg
mov
mov
dec
push
pop
cmp
mov
sbb
mov
cs
aad
pop
iret
xlat
pop
movsl
adc
adc
stc
xchg
push
cmp
loopne
mov
dec
jb
rcrl
push
jno
push
add
push
mov
loopne
dec
scas
or
pop
or
pop
mov
add
mov
jg
push
sub
add
je
jb
sub
or
cmp
pusha
or
addl
push
mov
dec
sti
in
repz
mov
or
sub
jno
cmp
add
adc
jne
mov
rcrb
pop
sbb
sub
fisttpl
fsubrs
roll
and
mov
adc
inc
and
imull
fistl
xchg
testl
mov
jmp
add
imul
mov
inc
sbb
inc
cli
repz
scas
or
or
jmp
sbb
sbb
imul
cmp
mov
leave
cli
add
clc
mov
fs
and
mov
push
cmp
into
ja
sbb
in
adc
and
push
push
movsl
xor
inc
hlt
add
and
fstl
inc
fcomp
fnstsw
and
jp
fldl
pop
fsubr
pop
faddp
andl
leave
fimull
xor
out
and
adc
stos
or
pop
pushf
jmp
daa
mov
inc
xchg
lods
or
adc
xchg
leave
data16
lcall
add
or
push
mov
test
inc
mov
fdivrs
sub
cmpsb
out
dec
aaa
ja
xor
inc
inc
inc
add
jmp
mov
mov
xor
push
movsl
pop
or
or
mov
or
dec
push
xor
inc
or
mov
adc
ret
stc
mov
xchg
out
sub
sub
cli
sbb
mov
sub
fimull
enter
fadds
jecxz
outsb
push
xchg
jp
sub
fbstp
es
in
sub
mov
add
pop
ret
mov
gs
mov
xor
dec
hlt
jge
and
je
mov
sbbl
push
mov
in
mov
adc
ud0
enter
lcall
xchg
rclb
cmc
pushf
lret
push
std
cmc
jne
fcoms
test
stc
test
jg
enter
cmp
addl
test
mov
sub
imul
inc
add
pusha
enter
push
sbb
loop
push
push
dec
jns
mov
mov
sub
ret
je
dec
inc
inc
js
mov
bound
fnsave
cs
aam
push
mov
bound
lret
cmp
adc
js
push
add
cmp
sbb
push
jmp
pusha
xor
adc
dec
clc
sbbl
pop
jnp
add
inc
decl
xor
pop
jp
adc
imul
arpl
xchg
adc
mov
pop
shlb
sub
jle
imul
ret
pop
loopne
gs
in
push
fstpt
call
pop
sbb
inc
lock
mov
scas
or
std
push
add
pop
jle
scas
adc
or
pop
push
movsb
pop
push
dec
inc
in
mov
pop
add
mov
sub
adc
pop
inc
mov
add
xor
dec
sub
andb
inc
in
push
movsb
and
xor
rcrl
pop
stos
xor
and
inc
pop
fcoms
loop
sbb
push
out
push
sub
shlb
mov
pop
xlat
in
fnstenv
and
inc
insb
add
or
add
xchg
js
adc
adc
daa
test
ret
xor
adc
fdivrl
mov
push
in
hlt
mov
fsubs
add
sub
mov
xor
ret
inc
nop
cs
push
mov
adc
sub
test
andl
arpl
fisttpll
inc
inc
jp
adc
sub
mov
xor
sub
dec
mov
mov
adc
pop
bound
sbb
push
lea
xchg
rol
cmpsb
sbb
clc
jae
repz
or
dec
pop
and
add
mov
out
rcll
mov
repz
test
pop
mov
hlt
dec
dec
add
lahf
pop
lock
adc
push
inc
push
fwait
stos
leave
push
sub
push
mov
inc
mov
lock
mov
jne
mov
jb
insl
mov
pusha
insl
adc
in
in
stos
sub
jns
out
mov
mov
sbb
call
xchg
jo
pop
les
mov
mov
mov
jmp
xchg
mov
dec
jb
xchg
or
shld
push
or
or
inc
push
pop
je
subl
push
lods
jmp
fcoml
popa
fnstsw
mov
add
mov
pop
add
mov
imul
push
dec
rolb
movb
xor
sbb
fwait
add
add
pop
push
push
leave
or
pushl
dec
ja
leave
lods
lret
add
mov
js
mov
inc
mov
and
add
inc
mov
imul
lea
push
mov
xor
mov
and
popa
mov
ja
fsubl
cmp
add
jne
or
adc
mov
push
xchg
mov
mov
icebp
test
xor
loopne
push
dec
push
das
test
fwait
mov
out
shr
xor
imul
ja
dec
jmp
jne
and
dec
add
sbb
cmp
add
jp
sub
push
mov
int3
sub
xchg
enter
fisubl
aam
and
and
ja
add
adc
test
rcr
xlat
jmp
xor
mov
stos
mov
add
outsb
lea
sbb
inc
test
je
dec
or
imul
scas
inc
adc
enter
jmpw
pushf
inc
clc
sbb
adc
insb
or
aaa
call
pop
jne
mov
or
pop
cmp
iret
sub
in
lock
sub
inc
inc
mulb
push
push
inc
xlat
pop
xor
xchg
mov
int3
mov
dec
test
test
popa
mov
mov
xchg
xor
dec
inc
int
pusha
xor
push
in
lock
add
push
inc
push
dec
adcl
movsl
jne
or
lock
lret
clc
nop
arpl
cmp
sub
ret
cmpsl
or
or
andl
test
add
inc
mov
mov
mov
insl
sub
inc
mov
add
js
leave
lock
or
stc
flds
push
rclb
xchg
loop
inc
cmp
push
mov
jle
stos
dec
rcrb
xchg
jb
imul
dec
imul
fistps
out
aam
lcall
les
jae
push
adc
mov
les
and
in
in
inc
movb
push
stos
and
jbe
addl
add
dec
mov
faddl
andb
icebp
iret
test
pop
icebp
jne
lcall
andl
mov
jb
enter
or
daa
adc
and
mov
add
push
add
orb
std
rcll
enter
nop
insl
test
lock
jmp
sbb
lcall
sbbb
or
loopne
clc
jl
or
dec
xchg
cltd
xchg
sbb
sbb
subb
loopne
rolb
ret
leave
loopne
fs
xchg
cmovne
sbb
in
push
les
enter
or
or
testl
sti
sbb
aas
loope
sbb
lcall
inc
adc
aaa
sbb
lahf
sarb
movb
pop
outsl
or
mov
in
sahf
and
cmpsl
push
stc
inc
xor
data16
pop
xchg
push
cmpsl
mov
push
push
sub
stc
cmc
and
jle
ret
ficoms
ficoms
fsubrs
enter
gs
mov
push
jp
xchg
cltd
jne
or
or
dec
xchg
imul
lahf
jp
inc
adc
add
jmp
mov
push
push
add
push
hlt
jge
and
sub
mov
data16
adc
shrl
and
pop
push
jmp
inc
inc
call
jmp
or
xor
jle
cmp
aad
shlb
ret
jl
loop
inc
in
in
or
dec
shl
call
adc
roll
mov
pop
scas
cvtps2pd
jnp
mov
mov
enter
push
add
sti
add
rcll
inc
aad
mov
or
shlb
sbb
in
scas
jecxz
fnstenv
addb
inc
add
shll
int3
sub
pusha
daa
sbb
ss
hlt
mov
adc
inc
xor
mov
jmp
push
or
push
in
push
xchg
es
sbb
mov
xor
andb
or
pop
loopne
and
sbb
je
sub
sarl
orl
push
sbb
adc
mov
pop
cs
push
xor
and
repnz
ds
cmp
loopne
push
loope
into
jne
sub
add
aaa
push
les
sub
mov
pop
add
roll
scas
ret
mov
jnp
mov
pop
imul
push
inc
ret
sbb
mov
jl
adc
push
mov
xchg
sbb
pop
inc
jmp
mov
sub
inc
inc
cmp
cmp
jne
jl
and
ret
ljmp
mov
dec
xor
test
jg
and
or
sbb
xchg
jge
loop
jge
mov
or
and
clc
pop
push
dec
xor
add
mov
lea
xor
and
out
sub
push
xor
add
cmp
add
push
sub
cmp
inc
inc
dec
push
lcall
inc
xor
aas
jle
adc
cmp
xchg
clc
insb
push
and
sbb
inc
andl
xchg
pusha
pop
or
les
int
pop
pop
lea
push
addb
mov
fs
push
lahf
dec
lcall
lds
xor
pushw
pop
or
mov
xor
dec
mov
pop
fadd
xorb
adc
mov
add
aas
add
or
cmp
adc
pop
xor
sub
ret
or
inc
loop
adc
mov
push
dec
loop
aaa
jp
push
jecxz
int
xor
mov
cli
std
sub
sub
xor
push
jns
dec
or
fnstcw
cmp
sbb
cmp
sahf
adc
and
sub
or
cmc
mov
and
xlat
movsb
add
cmp
and
sbb
inc
add
jecxz
sub
add
je
pop
je
and
xor
data16
sbb
mov
fwait
test
pusha
push
es
or
inc
aaa
add
mov
mov
jle
and
test
sar
add
icebp
imul
incl
clc
pop
adc
sbb
or
enter
mov
and
mov
in
and
push
nop
push
push
inc
nop
or
mov
or
inc
insl
sub
adc
xchg
cmpsl
add
sbb
leave
jp
push
mov
pop
pusha
and
insl
ret
pop
pushf
xor
aaa
xor
sub
nop
cmc
inc
sbb
sub
ds
roll
push
pop
mov
sbb
fstsw
mov
pusha
lea
mov
sbb
inc
xchg
out
add
je
sub
in
je
orl
les
cmp
jl
xor
sbb
into
fadds
jge
in
fsub
cmp
add
add
pop
sub
neg
xor
cmpb
es
into
jl
shrl
pop
enterw
xor
jge
push
jle
daa
push
std
dec
mov
push
insl
pop
ficomps
sub
mov
cmp
push
jmp
fidivrs
jl
jmp
or
xor
ds
or
mov
into
outsb
out
dec
inc
and
pop
jne
jns
pop
mov
repnz
push
jmp
push
add
add
sbb
fcomps
je
sub
dec
int
stos
xor
push
pop
mov
outsl
lock
jne
jns
push
mov
push
fwait
rcl
dec
push
jge
lret
push
sbb
pop
xor
dec
lea
xchg
flds
shl
cs
dec
add
sub
stos
xchg
sahf
add
push
sub
sub
dec
xchg
fadd
sbb
pop
inc
aas
subb
xor
or
stc
adc
or
nop
xor
fisubl
je
lods
pop
push
ss
xchg
mov
jno
pop
roll
cmp
pmuludq
add
push
cld
pop
inc
ja
xchg
stos
or
je
sub
lea
push
aad
movsl
pop
mov
dec
sub
pop
js
movsb
xor
or
add
in
lock
jge
pop
or
aad
and
push
push
pop
add
mov
or
or
je
jnp
push
adc
and
fwait
loope,pn
dec
pop
stc
mov
adc
imul
pop
pop
jp
inc
jo
lret
enter
cmpl
movsb
cmp
fcmovnb
mov
push
or
pop
and
xor
insl
popa
mov
push
imul
pushf
cmp
pop
lea
sub
cmp
dec
inc
adc
push
pop
stos
adc
jb
push
inc
and
push
xchg
pop
adc
fmul
mov
cmp
xor
push
cmp
insl
aaa
ret
mov
xchg
test
rolb
adc
jne
mov
mov
jmp
test
sbb
adc
mov
scas
and
mov
sar
mov
or
out
in
adc
jno
and
cmpsl
aaa
or
and
or
notb
dec
lock
fdivl
push
pop
fdiv
je
mov
push
cmp
cmp
in
add
jp
mov
sub
cmp
out
leave
jne
push
jne
mov
jmp
cmp
xchg
push
rol
data16
add
movsl
mov
push
arpl
pop
dec
test
adc
xchg
jne
mov
cld
mov
mov
adc
inc
push
les
lds
addb
sbb
or
add
cmp
xchg
push
or
stos
mov
addl
cmpsb
shl
je
lahf
jl
inc
cltd
and
les
xrelease
nop
mov
je
pop
jge
or
and
scas
insl
cmp
fisttpl
push
pusha
sbbl
shlb
pop
repnz
lcall
in
xor
mov
mov
mov
jae
mov
in
in
add
shlb
inc
test
fcmovbe
jne
mov
test
pop
push
mov
movsl
call
add
es
lea
pop
dec
scas
in
or
pop
or
adc
mov
shll
fwait
fs
mov
jmp
or
inc
mov
pusha
loopne
mov
sbb
jmp
or
test
dec
dec
das
dec
icebp
test
mov
add
fldenv
adc
loope
adc
stos
dec
dec
mov
and
imul
rcrl
rol
and
imul
and
push
mov
dec
add
adc
mov
dec
data16
stos
push
mov
loope
cmp
adc
adc
add
js
dec
xorl
iret
jge
cmp
jnp
adc
jo
in
dec
xlat
cmp
pop
sti
mov
cmp
popf
stos
loopne
sbb
dec
aam
in
adc
ret
xor
mov
rolb
jne
push
cmp
push
pop
fcoms
xor
ja
xchg
inc
or
dec
and
jno
aas
popa
mov
mov
cmp
rorb
or
bound
lret
cmc
repz
test
test
pop
add
imul
mov
std
mov
xchg
out
jmp
xorb
pop
arpl
cmp
add
adc
rclb
clc
lret
sub
push
out
or
pop
mov
add
cmc
sub
fisttpll
xorl
and
adc
bound
cmpsb
dec
or
jg
cmpl
popf
rolb
or
ret
ja
pop
add
ds
movl
mov
fwait
dec
inc
popa
ret
cmpl
lahf
add
push
es
leave
repz
insb
mov
mov
scas
popl
mov
lods
xchg
inc
sti
ljmp
xchg
sub
lahf
mov
jmp
lods
push
and
jl
push
push
call
pop
add
and
push
cmpsl
mov
test
mov
andl
jbe
push
hlt
stos
cli
lea
push
sub
xchg
shll
addr16
enter
ljmp
cmp
shlb
and
inc
mov
or
mov
or
imul
test
sub
sbb
fdivrs
mov
addr16
pop
lret
add
lock
arpl
jo
mov
lods
shl
inc
clc
mov
cmpl
inc
dec
add
loopne
test
adc
inc
mov
sbb
cmp
or
cs
in
jno
insb
in
push
mov
jb
cltd
mov
sub
orb
xchg
cwtl
mov
lds
add
and
fwait
call
js
movsl
mov
bswap
popa
test
inc
testb
push
adc
or
and
inc
xor
jl
stc
loope
movsb
sub
cmp
and
adc
inc
dec
mov
jg
call
mov
test
fldt
mov
and
add
fldt
adc
add
cltd
sub
popa
or
xor
repz
xchg
mov
test
jecxz
leave
xchg
inc
lea
jmp
push
test
mov
jns
pop
and
mov
inc
scas
fs
sub
add
add
push
push
push
xor
xchg
push
rolb
push
repnz
or
push
adc
ds
sbb
fsubs
mov
test
push
or
add
push
xor
dec
ret
ss
rclb
push
push
loopne
iret
add
add
push
push
enter
xor
or
jb
add
or
pop
add
sub
jno
adc
or
rolb
push
enter
inc
lea
pop
push
dec
or
mov
pop
rorl
and
push
dec
push
cli
add
stos
adc
jns
pushf
or
sbb
mov
std
mov
daa
in
clc
and
pop
dec
push
loopne
inc
adc
nop
stos
pop
push
mov
mov
jl,pt
loope
xor
push
add
add
sbb
popf
push
jb
adc
cmc
divb
dec
add
inc
or
inc
pusha
pushf
or
add
adc
js
and
pop
xchg
push
and
inc
mov
adc
or
scas
mov
push
and
add
lret
inc
add
lock
mov
inc
incl
mov
xor
and
and
mov
dec
or
pop
mov
rorl
loopne
in
call
push
mov
shrb
das
cmpb
jmp
adc
lahf
cmp
adc
in
inc
push
scas
loope
dec
in
iret
dec
sbb
cli
add
add
or
cs
sarl
lahf
call
addb
lods
adc
xchg
movsb
cmp
mov
add
dec
in
dec
lock
jo
movsb
sub
add
jmp
cwtl
mov
testb
push
fs
adc
mov
push
in
loopne
imul
or
int
push
cli
test
fs
int3
mov
scas
adc
sub
jne
sbb
sub
push
inc
mov
movsl
xchg
adc
add
dec
xchg
sarb
cmpsl
mov
sub
fldcw
mov
pop
inc
inc
sub
pop
lret
fcoml
adc
fsubrl
push
mov
sbb
push
inc
mov
inc
int
data16
or
xor
push
cmp
imul
add
mov
jl
rclb
mov
ljmp
out
xchg
out
inc
sub
cld
xchg
mov
stos
lea
pushf
data16
roll
lcall
mov
pushf
fwait
shl
or
rclb
and
cs
adc
adc
or
or
fidivrl
add
cmp
jecxz
sbb
or
out
jl
and
out
add
test
mov
sbb
fmuls
sbb
sarl
pop
cmp
lret
jp
and
inc
aad
ja
or
imul
das
push
push
xor
or
gs
aam
mov
xchg
adcb
pop
push
rorl
daa
inc
fldenv
pusha
adc
movsl
stos
xchg
sbb
stc
push
hlt
mov
stc
in
into
dec
shr
mov
push
push
add
or
or
inc
test
pushl
xchg
clc
mov
mov
and
jnp
push
fcomps
shll
pop
jecxz
enter
test
and
push
addb
add
pop
mov
inc
mov
and
ret
stos
adc
lods
cmpsb
mov
test
mov
lret
and
inc
das
fcoml
test
push
or
in
in
dec
mov
xchg
push
sahf
mov
shrb
and
movzwl
xor
mov
iret
data16
pop
push
jmp
std
mov
mov
jle
test
call
adc
mov
imul
add
mov
call
cmp
loop
loop
push
or
push
shl
push
mov
mov
mov
or
mov
movl
jg
push
adc
cmp
enter
mov
insb
jo
cmp
push
mov
and
iret
inc
lret
aam
inc
cmp
pop
adc
adc
in
xor
add
fadd
fstpl
cmp
scas
sbb
clc
push
push
sbb
rcl
into
imul
in
cli
or
out
wbinvd
addr16
clc
push
add
and
xor
clc
rcl
enter
and
inc
cmp
xchg
cmp
mov
aad
and
add
push
mov
sbb
mov
loope
mov
sbb
sbb
or
or
pop
sub
sarb
or
mov
mov
push
pop
sub
cs
jle
jmp
cmpb
xor
nop
jg
push
sbb
inc
fstl
add
sbbl
out
mov
jne
movsbl
ret
and
pop
dec
mov
clc
adc
jbe
push
paddb
ja
push
mov
lods
addb
out
pop
jo
push
add
test
xor
push
hlt
or
dec
sbb
mov
int3
dec
push
clc
subl
add
mov
push
rcrb
insl
fs
hlt
inc
add
jle
imul
fcom
andl
jne
mov
dec
mov
xchg
stos
push
adc
ficoml
jl
and
fwait
and
insb
dec
xchg
dec
inc
pop
insb
sub
sub
jne
mov
ret
jmp
xor
mov
sti
hlt
push
shll
sbb
xor
push
rorb
addl
dec
ja
sbb
arpl
inc
cmp
adc
cmp
pop
jge
add
repnz
dec
stos
xor
add
leave
leave
leave
add
push
pop
out
leave
leave
or
or
jnp
or
jbe
out
out
jmp
or
por
out
out
jmp
adc
pop
adc
push
adc
dec
out
out
adc
dec
adc
aas
pop
jmp
out
out
sbb
xor
jmp
sbb
es
out
sbb
and
pop
pop
jmp
add
out
jmp
and
adc
and
and
test
xchg
mov
cmp
add
cmp
lds
mul
jmp
in
hlt
sahf
out
out
add
or
adc
and
sahf
out
sub
xor
cmp
inc
inc
dec
push
push
sahf
out
sahf
pop
pusha
gs
je
sahf
out
jns
orl
xchg
xchg
pushf
mov
xchg
enter
add
and
or
or
push
movups
xchg
call
adc
sbb
sbb
push
pop
and
and
aas
push
addb
and
addl
daa
rcr
mov
fwait
cwtl
add
sub
sbb
lods
mov
jo
mov
push
xchg
neg
cmp
xor
cmp
rol
sub
test
out
add
pop
mov
pop
add
push
dec
addl
xor
xor
or
cmp
pop
ja
and
inc
sti
adc
xchg
cmc
test
cmp
cltd
and
xor
push
pop
jo
mov
or
fsts
lret
mov
outsl
push
hlt
jge
or
mov
lods
cmp
xchg
jb
xchg
shll
xor
pop
mov
cmp
mov
shl
jmp
xchg
lsl
adc
sbb
iret
jno
lock
add
insb
loop
fmull
mov
add
aad
fcompl
repnz
mov
inc
mov
dec
sarb
call
adc
sbb
lods
movsl
mov
ljmp
and
mov
outsl
xor
test
cwtl
sub
jne
xchg
add
hlt
es
xor
jo
pop
js
add
mov
push
in
xor
adc
mov
scas
push
push
mov
ror
sti
shr
xor
pushf
roll
mov
ret
or
or
icebp
add
add
add
jbe
add
iret
or
ljmp
and
not
and
xor
add
add
arpl
aam
sub
jge
fsubr
add
xor
rorb
mov
fisubl
int3
jge
xor
and
and
mov
push
rclb
insb
inc
test
xor
xor
lret
ljmp
sub
fmull
pop
push
in
add
out
or
xlat
and
cs
testl
add
add
cs
fsubr
rcl
add
and
pusha
mov
pop
roll
dec
xor
test
fisttps
ret
dec
rcrl
xor
add
push
xor
movsb
test
in
shll
in
inc
sub
dec
call
jb
inc
in
push
cmp
popa
inc
in
data16
add
in
add
les
shrb
mov
aaa
fadd
dec
rorl
ss
pop
dec
shll
shl
call
in
loopne
lahf
cmpsb
cltd
and
aaa
pop
cmp
rorl
aam
loope
repnz
aaa
mov
jo
ret
int3
and
cmp
add
jge
hlt
add
inc
jge
and
into
cmpsl
loope
call
or
add
mov
shll
and
xor
add
inc
add
mov
pop
mov
jge
push
ret
push
jo
rcll
or
les
mov
sarb
or
sbb
add
inc
jne
dec
shr
mov
mov
imul
fadds
pop
fs
js
call
adc
ret
lret
push
clc
jl
and
adcb
add
and
lcall
inc
pop
and
xor
aam
sbb
or
ficompl
sub
cli
mov
xchg
xor
push
test
cmp
dec
rorl
inc
in
xchg
in
mov
imul
rolb
dec
cmp
cmp
pop
cli
ss
push
xor
mov
rorb
xor
subb
loopne
daa
push
dec
in
rolb
stos
cmp
rclb
imul
push
inc
or
add
scas
dec
pop
xchg
pop
cmpsb
les
xor
rorb
push
and
dec
inc
enter
adcb
xor
push
cmpb
push
int3
rcrb
push
push
pop
adc
add
and
enter
jae
push
ret
scas
push
add
lret
xadd
or
inc
and
inc
pop
aam
int
enter
sbb
xor
inc
pusha
fsubs
sub
das
pop
mov
push
popa
ret
test
es
mov
adc
jb
dec
dec
dec
icebp
loope
xor
stc
stc
mov
ret
sbb
pop
push
mov
dec
inc
mov
inc
mov
lcall
adc
adc
aaa
inc
cmpsb
loopne
call
and
ficomps
and
shrb
and
push
mov
les
dec
cmp
push
adc
aas
pop
add
sub
mov
add
adc
add
push
jmp
call
cld
lea
lea
cld
imul
add
pop
mov
adcb
push
ss
dec
push
mov
cmc
jnp
int
lret
loop
incl
rol
and
mov
jne
add
test
rcrl
jbe
inc
jae
stos
or
sub
mov
sub
loopne
or
adc
add
lea
or
out
pop
mov
cs
fimull
pop
jne
pop
adc
push
pop
loope
mov
mov
dec
sti
jl
sub
push
enter
clc
aaa
jbe
or
xor
in
adc
cmp
inc
add
jae
shl
or
xchg
sub
sub
stos
fimuls
aaa
mov
sbb
pushl
push
pop
fdivp
ror
mov
xchg
ret
ja
push
shr
xchg
rolb
mov
inc
push
inc
pushf
call
mov
insl
sbb
pop
push
mov
or
dec
js
ret
movl
call
mov
cmp
aam
jo
fdivrl
sbbl
cmp
fiaddl
les
inc
jge
inc
rorb
bsr
fwait
sbb
and
mov
mov
ljmp
stc
ja
lea
imul
cmp
ja
pop
jo
faddl
call
outsb
mov
stos
mov
dec
push
orb
lock
xchg
and
mov
jno
es
inc
xchg
sbb
sbb
jbe
cmp
scas
cld
clc
loope
ret
add
paddsb
and
mov
push
and
test
lods
xor
add
xor
add
push
cmp
shl
inc
push
aaa
cmp
icebp
fidivrl
insb
sbb
insl
sahf
push
ss
outsb
je
adc
pop
shlb
push
out
lock
pop
adc
jo
out
and
lock
adc
lcall
mov
mov
and
add
mov
sbb
sbb
add
sbb
addr16
out
fists
lds
mov
add
mov
jmp
jno
lcall
addl
adc
dec
cltd
call
rcrl
xchg
test
xchg
mov
inc
movsb
pop
ljmp
add
add
and
dec
adc
push
sub
jecxz
inc
andb
mov
fsub
push
inc
jnp
cmpsl
lock
leave
dec
pop
push
adc
push
insb
sbb
xchg
cmp
mov
cmp
jl
add
es
sahf
sub
pop
adc
aam
jle
and
xor
jbe
cli
pop
sub
jmp
jne
lea
cmp
idivb
and
pusha
cmpsl
and
pushf
xor
sbb
or
adc
cmc
inc
iret
ss
push
aad
or
xor
cmpb
fucomp
loopne
subb
cmp
jl
dec
popf
shrb
cmp
push
js
test
jae
ds
push
mov
and
sub
lods
dec
clc
dec
in
cmp
jae
movzbl
xor
gs
adc
mov
and
adc
js
adc
add
push
aam
xor
pop
fcomps
inc
in
add
subb
jl
scas
ror
ret
mov
xchg
sbbb
mov
xor
lods
add
and
adc
je
jne
test
imul
into
loopne
sub
or
push
daa
mov
fwait
and
pop
dec
dec
inc
mov
ret
or
dec
sub
mov
jg
pop
or
and
cmpsb
or
es
lods
inc
jp
and
add
lea
pop
js
jne
fadds
sbb
cmp
push
xorb
sbb
call
adc
sub
mov
xor
rorb
push
call
add
cld
jmp
sbb
pop
lods
cmpsb
add
jo
cmp
inc
loopne
cs
xchg
add
add
icebp
cwtl
push
sti
fmuls
roll
lret
dec
adc
inc
out
or
mov
add
jle
stos
mov
rolb
xchg
and
mov
or
les
and
add
add
imul
xor
push
pop
xor
sbb
call
add
jge
fstpl
es
add
inc
popa
ja
push
jmp
push
ljmp
push
jmp
dec
stos
shrb
test
jecxz
invd
jle
push
ret
dec
pop
pop
insb
scas
inc
add
and
fsubrs
hlt
js
mov
sbb
sub
je
add
xor
lock
pop
neg
add
clc
or
push
cmpsl
negb
addr16
push
mov
push
out
cmpsb
pop
loop
inc
mov
enter
aaa
daa
loop
sbb
dec
shlb
testl
neg
aam
jle
jmp
outsl
sub
clc
xchg
mov
or
inc
push
push
in
pusha
rcll
jg
push
aam
xor
mov
mov
dec
sbb
add
mov
inc
cmp
repz
shl
xor
jo
je
inc
call
into
xchg
pop
enter
js
test
or
push
and
jns
and
cmp
push
cmp
ljmp
xor
or
or
mov
adc
addr16
push
xchg
sub
fsubs
outsb
sub
ret
stos
mov
shll
scas
jp
mov
maxps
pop
add
in
pop
mov
push
scas
pop
and
in
jmp
cltd
int3
add
popf
sub
xchg
clc
mov
movsb
mov
or
jbe
xor
lods
sub
rcrb
mov
inc
jg
clc
cmpsb
cmpl
cld
xchg
mov
sub
mov
mov
loop
cmp
and
cmp
add
ret
inc
mov
repz
rcr
pop
xor
xor
mov
movsb
sub
xor
cmp
or
imul
inc
inc
pushf
scas
popa
rcl
bswap
in
sub
nop
jl
daa
stc
push
or
add
fdivr
sti
lock
ret
adc
clc
adc
add
cmp
fsts
sub
sub
mov
rcll
ret
sub
fstpl
rorl
sub
or
mov
and
cld
cmpl
cmp
insl
mov
adc
mov
cwtl
lds
les
leave
and
push
sbbl
sub
jnp
adc
and
push
dec
ror
icebp
pop
push
xchg
loop
lock
sbb
push
mov
dec
test
je
hlt
push
movb
scas
bound
add
gs
fdivl
or
arpl
push
aaa
fimull
push
hlt
ss
push
mov
sbb
adc
test
sub
add
cmp
clc
pop
enter
ss
addb
mov
mov
cmp
sbb
ja
ss
pushl
jecxz
in
and
xor
add
insl
sub
and
stc
test
and
jnp
sub
adc
shrb
pop
sahf
adc
fstl
mov
daa
xorl
mov
lret
enter
dec
inc
adc
pop
dec
jmp
mov
insb
popa
lcall
stc
xchg
inc
loope
pop
repnz
and
adc
xlat
adc
movsb
ds
lds
popa
dec
lcall
inc
daa
xor
lcall
xchg
rorl
pop
into
icebp
mov
inc
lock
push
xor
lods
pop
cmp
mov
insb
sbbl
ljmp
adc
arpl
dec
enter
push
lea
cmp
dec
pop
xor
push
jl
ss
andl
in
mov
push
lods
add
jbe
pop
push
out
sub
sub
and
aas
xor
mov
xor
sub
popa
fsubrs
sub
stc
xchg
cmp
push
scas
inc
stos
test
outsl
shlb
cltd
xor
das
pop
pop
leave
adc
xchg
nop
sbbl
adc
dec
daa
add
mov
fadd
mov
inc
xor
je
dec
je
hlt
mov
sbb
jmp
push
and
and
andl
jno
cmp
xchg
pop
loopne
in
cld
inc
fidivs
xchg
cmp
fistpl
cmp
xchg
outsb
lcall
ret
adcb
movb
and
jne
push
cltd
or
push
fsubr
or
dec
mov
out
sbb
cld
dec
sub
or
jle
jecxz
lea
cmpsl
xor
icebp
xchg
popf
insl
imul
in
mov
pop
mov
push
xchg
push
pop
dec
or
out
adc
or
jns
adc
fildl
daa
xchg
fstl
inc
sbb
mov
push
mov
and
add
dec
inc
cld
out
ret
and
sbb
and
insb
ja
cmpb
mov
push
arpl
les
jb
es
pop
pop
cmp
je
cmp
out
or
sub
mov
inc
mov
mov
lcall
into
pop
and
xchg
cwtl
fimull
inc
sub
ds
pushf
mov
test
mov
push
cmpb
or
scas
sub
xor
add
sbb
xor
jp
or
aam
inc
fstpl
shll
sbb
bound
inc
push
nop
leave
scas
push
push
mov
and
stos
sbb
sub
inc
lods
adc
or
mov
sub
add
adc
pop
mov
fsubs
xchg
repnz
test
add
or
insl
xchg
and
testb
cmp
movzbl
insl
push
xorb
ret
jle
or
push
lods
rorb
repnz
loopne
pusha
cmp
pop
cmp
aam
outsb
test
negb
mov
pushf
les
in
aad
subl
mov
daa
je,pt
cmp
and
sub
push
cmp
jge
mov
ljmp
lock
lea
dec
cltd
clc
sub
sbb
cmp
test
dec
jno
lock
clc
shlb
and
mov
lock
clc
clc
cld
inc
loope
add
jae
movl
pop
cs
add
add
add
cltd
cmpsb
push
mov
dec
sti
sbb
dec
je
add
adc
mov
decl
cmp
dec
or
mov
shr
sbb
ud0
or
mov
sub
sub
or
movsb
xchg
mov
mov
or
mov
adc
cli
sub
int
or
push
in
dec
je
push
add
loop
inc
leave
mov
xchg
sti
push
xor
repnz
inc
add
jmp
sub
mov
add
push
add
jne
adc
mov
adc
mov
push
push
inc
cmp
dec
roll
xor
or
add
sub
xor
inc
add
or
fs
or
jmp
rol
idiv
inc
inc
imul
add
jb
cmp
mov
xchg
push
mov
xchg
cmc
jo
jo
je
mov
add
or
cmp
mov
loopne
mov
stc
push
or
int
and
adc
push
push
lock
cmp
je
cmpsl
inc
pop
jbe
xor
fstpl
inc
test
jmp
daa
pop
out
js
js
push
cmp
sarb
in
clc
jae
fists
subl
gs
push
or
lods
bound
add
and
inc
sub
arpl
sbb
adc
cmp
je
cmp
push
cmp
jne
inc
jne
sub
push
mov
inc
pop
inc
lods
or
inc
mov
inc
pusha
jb
mov
lock
adcb
cmp
addr16
jne
dec
dec
add
loop
lock
add
cmp
xorb
stos
inc
ret
sbb
add
pop
icebp
add
shrl
push
icebp
subl
mov
mov
mov
jp
jl
or
jg
dec
sti
sub
mov
jmp
and
pop
outsb
scas
out
jmp
inc
push
and
mov
mov
std
push
jp
add
shl
dec
mov
sub
mov
call
mov
fscale
push
xchg
ss
jg
xchg
jg,pn
imul
and
inc
sbb
inc
mov
or
rcll
pop
les
mov
arpl
mov
shl
push
out
mov
xchg
cmpsb
adc
aaa
insl
push
push
xor
pushl
add
push
mov
imul
mov
cmc
add
roll
in
les
xorb
cmpb
sub
cwtl
inc
insl
sbb
cmp
test
mov
fstpl
jge
add
das
loopne
rcrb
cmp
and
cmp
cmpsl
je
adc
mov
sub
jo
mov
xor
cmp
js
sbb
in
inc
inc
push
out
jmp
xor
inc
adc
mov
leave
inc
xchg
sbb
pusha
inc
sub
xor
movsl
mov
pop
cmovns
test
cs
sub
push
cmp
ret
cmpb
inc
movsb
sbb
fistpl
cmp
mov
and
cmpsb
pcmpeqb
adc
and
mov
push
sub
outsb
movsl
add
js
clc
arpl
hlt
add
add
adc
cld
push
gs
imul
faddl
dec
xor
in
imul
je
xor
ret
dec
jne
leave
or
roll
mov
addb
adc
or
push
jne
ret
jg
subl
and
xchg
ljmp
mov
pop
add
mov
xchg
clc
mov
mov
sub
dec
sub
cwtl
push
mov
dec
cmp
popa
lret
inc
enter
pusha
push
push
lock
sub
jge
jne
or
ljmp
add
sbb
sub
push
add
and
mov
movsl
ret
jno
ret
inc
inc
cmp
jbe
cs
clc
add
sub
insb
add
or
mov
shrb
pop
sbb
mov
pop
or
orb
shlb
pop
inc
cmpsb
cli
in
sarb
xor
mov
push
rolb
mov
adc
frstor
and
out
sub
ss
and
nop
push
jmp
mov
dec
adc
push
lock
imul
popa
jl
sub
jmp
cmp
fiaddl
in
add
mov
int
movsb
xor
or
call
push
movb
xor
and
dec
std
dec
xor
arpl
push
cmp
ljmp
add
cmp
sub
shll
or
sub
ficoml
call
push
popa
xor
xor
pop
stc
cmp
and
jb
xchg
cmpsb
add
inc
ds
cmp
jecxz
cmp
mov
push
lds
or
or
pop
je
es
xor
mov
rorb
hlt
lea
pushf
sub
pop
xchg
mov
or
loope
inc
cwtl
jmp
jmp
nop
pop
dec
push
jmp
inc
test
add
jns
jecxz
aas
push
cmpb
jne
mov
dec
fincstp
mov
pushf
ret
xor
data16
ret
insl
or
or
scas
clc
dec
ret
sbb
or
data16
push
aas
add
lods
sub
inc
adc
ret
sbb
fisttpl
dec
test
test
into
push
jb
pop
mov
dec
loopne
mov
es
push
cmp
lcall
push
pop
call
pop
cmp
sahf
adc
ja
int3
pop
add
jp
sbb
les
arpl
fldcw
mov
add
daa
add
inc
cmp
pop
insb
sbb
mov
loopne
aad
xchg
dec
dec
and
dec
pop
lret
jne
sub
push
hlt
shlb
jb
mov
push
push
xchg
test
rclb
in
rcrl
in
inc
insb
je,pt
inc
sbb
scas
and
pop
scas
adc
add
data16
cmp
push
subl
push
test
cmp
es
add
cmp
sub
imul
dec
mov
push
clc
push
push
add
insl
arpl
adc
addb
mov
push
mov
add
pop
cmp
lret
push
jo
outsl
add
jnp
fnstcw
push
sbb
das
aad
in
shl
inc
mov
push
push
cmp
and
cli
xchg
sahf
mov
mov
out
inc
rcll
or
push
sub
dec
loop
mov
mov
sbb
or
xor
mov
mov
or
or
std
jmp
aam
push
adc
leave
sub
mov
lret
sub
fsubrs
loope
adc
xor
lea
lcall
pushl
cmp
jb
cmp
lcall
rorb
pop
sbb
ret
push
xchg
mov
imul
ss
push
or
or
mov
test
xchg
hlt
add
movl
xor
adc
lret
push
mov
popa
sub
push
jne
or
and
lods
push
jge
xor
adc
ret
inc
arpl
xchg
sub
push
dec
cld
minps
mov
cmpb
add
mov
jb
inc
push
scas
push
add
adc
inc
adcl
jg
aaa
push
pop
mov
adc
and
and
js
rcl
es
add
mov
pop
cs
push
andb
mov
daa
sbb
push
jmp
push
or
je
and
sub
jmp
cmp
jne
fimuls
push
add
inc
lds
sub
cmp
inc
and
repnz
aas
add
add
sbb
iret
decb
jno
add
in
dec
push
adc
inc
stc
cmp
sahf
mov
inc
fsts
daa
pop
xchg
push
fisttps
jo
xor
or
and
add
sbb
or
add
push
mov
and
jp
movsl
xor
inc
jno
icebp
and
in
sbb
data16
iret
xlat
leave
push
subl
sbb
add
and
cli
enter
pop
add
mov
push
jmp
sbb
push
test
test
xchg
loop
jecxz
jo,pt
xor
add
xor
stos
push
pop
fsubl
hlt
sbbb
dec
rorl
inc
mov
dec
mov
jne
jnp
ret
or
xchg
js
xchg
mov
jle
dec
sbb
ss
xor
ret
jno
pop
in
sbb
cmc
jno
mov
mov
je
push
add
mov
push
mov
or
mov
adcl
pop
imul
sub
add
and
ret
gs
dec
lea
pusha
std
xor
or
pop
mov
dec
leave
push
sub
ret
pushf
fstpt
dec
ror
push
dec
xor
pop
pop
daa
push
in
push
lea
jns
in
jbe
addl
pop
xor
or
push
loop
or
xor
push
jmp
bound
mov
rcrl
fs
fsubrs
loopne
movsb
mov
mov
xchg
rolb
adc
pop
xor
push
adc
pop
aaa
cltd
loopne
or
cmpsb
or
insb
repz
aaa
aaa
pop
into
xchg
movsb
xchg
movsb
push
out
mov
test
pop
repnz
js
addb
int
cwtl
xor
xor
lock
sub
jmp
pusha
cmp
push
xor
and
cli
inc
out
adc
out
adc
loopne
enter
or
daa
movb
dec
inc
ret
mov
push
or
mov
xor
mov
and
in
es
cli
xor
and
sub
fwait
xchg
inc
inc
xchg
test
mov
scas
pop
jmp
loope
cltd
or
xor
mov
mov
and
fcoml
xchg
subb
aam
loopne
and
mov
stc
push
push
popa
jns
mov
sbb
pop
or
insl
rorb
xor
jbe
mov
inc
sbbb
nop
xchg
cmp
mov
adc
cmpsl
arpl
test
inc
dec
or
add
lods
std
out
and
mov
jmp
cmp
cmpsl
lods
nop
test
fbstp
sub
inc
add
mov
movb
jge
es
cwtl
cmp
add
dec
xor
add
inc
in
jg
sub
es
inc
mov
enter
sub
fists
jmp
pop
nop
mov
xchg
dec
aaa
mov
mov
mov
cmp
insl
shrl
mov
jo
inc
orl
adc
cmpb
andl
ret
outsl
mov
xor
or
sti
cmp
insb
or
les
daa
pushf
and
imul
sbbb
or
and
rcll
lcall
scas
cmp
inc
pop
inc
subb
and
pop
jmp
mov
lcall
ret
or
fistl
sbb
ss
fs
cs
push
xor
adc
popa
je
adc
and
out
decb
daa
jo
dec
cli
mov
movl
std
jo
dec
push
jns
add
or
mov
sub
mov
arpl
sbb
int
add
bound
adc
rorl
xchg
pop
test
cmp
fwait
or
cld
popl
lods
sbb
sub
sub
jge
subl
dec
or
das
fcoms
push
push
mov
js
and
adc
xchg
mov
popf
adc
mov
sbb
lock
cmp
rcll
dec
aas
dec
inc
daa
je
test
ja
sbb
lea
aad
inc
test
jl
sbb
mov
push
and
loope
mov
cmp
sub
or
jo
inc
jne
pop
push
jae
xor
in
lods
mov
dec
loopne
and
nop
push
sub
xchg
push
or
out
sbb
lock
ds
pop
jge
divb
mov
fmuls
jmp
lea
fdivrp
dec
daa
test
adc
cld
in
aam
mov
lea
andb
cmp
pusha
stos
mov
in
dec
rcrb
and
adc
adc
mov
jns
dec
daa
dec
dec
lock
outsl
insb
das
add
jle
cmp
adc
addl
add
loop
add
adc
sub
loopne
mov
lods
fdivr
cmpsb
xor
imul
in
scas
shl
aas
pop
push
dec
sub
aas
xor
jo
or
pop
jmp
sarb
or
or
dec
adc
subl
adc
pop
mov
xchg
jle
stc
out
jae
cmp
aaa
mov
cmp
bnd
xchg
or
pop
daa
mov
rcrb
push
hlt
xchg
ret
arpl
mov
ja
mov
jg
add
shrb
ja
mov
dec
mov
push
cmc
lret
adc
iret
inc
or
je
jp
popf
xchg
push
and
mov
push
inc
mov
out
add
and
dec
movsl
outsb
adc
rcrb
and
ret
add
leave
data16
sub
jnp
and
sbb
in
mov
inc
jb
add
fisttps
or
js
les
mov
in
bound
lahf
pop
mov
dec
jns
or
mov
in
movsl
push
sbb
jge
sub
insb
aam
lods
test
cmp
ja
add
pushf
leave
scas
shlb
ss
lock
xchg
in
push
outsl
cltd
hlt
push
fidivs
bound
shrl
out
inc
pop
cmp
xchg
jnp
clc
inc
loop
jmp
add
or
cli
jmp
inc
ja
push
js
and
add
lds
sub
mov
mov
lods
jp
pop
js
or
push
js
add
adc
jle
and
outsl
sub
push
and
cmp
insl
loopne
fmull
fisttpll
in
fadd
jg
je
sub
aas
sbb
sbb
mov
jno
xchg
scas
mov
xor
xor
or
je
lock
cmpsl
and
dec
xchg
push
inc
imul
sbb
cmp
inc
movsl
mov
das
push
pop
mov
aas
cmp
sbb
int3
inc
ficompl
sbb
repz
push
orl
loopne
fwait
data16
scas
or
xchg
cmpsb
ret
outsb
fiaddl
xor
mov
push
movsb
push
das
sub
push
mov
add
js
data16
sub
arpl
xlat
lds
in
aas
pop
ret
sub
adc
add
out
lcall
in
call
sub
rcll
rcr
mov
dec
scas
mov
jmp
stos
push
stos
pop
push
les
pop
sbb
push
in
push
rcll
imull
mov
aas
lods
xorb
jbe
add
dec
xor
push
xor
xor
inc
push
mov
or
loope
ljmp
sti
jbe
dec
inc
in
jb
and
push
push
or
dec
insl
fdiv
sbb
adc
cwtl
add
les
lods
rorl
jle
out
test
adc
je,pt
sar
mov
mov
sub
cmp
mov
push
push
mov
xchg
jle
and
shlb
push
jg
inc
push
dec
pop
dec
sbb
mov
clc
loope
push
out
push
lret
inc
inc
or
out
mov
sub
ret
push
daa
imul
push
pop
jae
adcb
push
and
xchg
or
popa
dec
push
adc
and
add
in
loopne,pt
inc
mov
daa
jne
int
dec
outsl
dec
dec
and
into
sbb
shr
add
xor
cld
pop
cmp
inc
push
je
cmp
jbe
push
pusha
and
and
push
xor
jmp
das
insb
lea
je
lret
movl
test
inc
je
mov
cmp
cltd
test
inc
imul
mov
fadds
pop
mov
mov
data16
add
insb
xchg
or
clc
wbinvd
orb
or
sbbb
or
dec
jo
mov
lret
push
inc
adc
pop
mov
mov
add
aas
scas
stos
clc
adc
inc
mov
testb
ljmp
add
lock
test
push
fdivrl
lea
sub
jno
arpl
push
mov
rorb
call
xor
pop
prefetch
mov
xor
sub
or
sbb
or
cmp
sub
dec
shll
mov
sbb
push
pop
and
push
mov
dec
inc
mov
mov
jne
mov
jecxz
clc
in
adc
cmp
jmp
in
dec
pusha
jle
push
xor
pop
div
hlt
add
adc
aaa
lea
rorl
ljmp
loopne
xchg
cmp
push
adc
inc
cli
xor
ret
push
adc
int3
xor
add
push
and
aaa
cmp
adc
inc
push
and
hlt
call
in
xchg
push
loope
cmc
xchg
subb
nopl
mov
jo
gs
stc
push
inc
stc
in
faddl
mov
imul
pop
loop
push
add
rorb
jne
or
cmp
sub
nop
fisubrl
inc
and
testl
adc
sub
insl
ss
or
fidivl
bound
adc
rclb
out
pop
jmp
lret
fidivrl
add
mov
clc
int3
add
pusha
out
add
add
imul
inc
or
arpl
push
clc
jb
cmpl
std
test
mov
add
xor
fldenv
filds
pop
mov
jne
sbb
jmp
add
or
jge
in
std
and
stos
mov
dec
ljmp
cmc
or
push
hlt
dec
and
mov
push
xchg
adc
stc
xor
mov
cwtl
mov
push
test
cmp
icebp
icebp
mov
xor
ret
in
mov
imul
int3
add
push
je
scas
pop
adc
and
sbbb
lods
push
mov
mov
jg
sti
mov
cmc
jg
fs
pusha
jmp
movq
fidivrs
movapd
push
clc
jae
xor
repz
or
xor
cli
rcl
lret
and
popl
or
and
lret
cmp
or
jg
ljmp
adc
jnp
mov
xchg
fisubs
aam
ret
or
notb
sbb
and
movsl
fcompl
xchg
dec
sti
in
out
fadd
roll
jbe
and
ficompl
addps
int
add
jge
fsubs
loopne
push
dec
sbb
inc
pop
pop
pop
test
pop
push
mov
mov
cld
in
jne
orb
std
or
outsl
aam
xor
xor
pop
add
add
xorl
xor
jb
test
mov
lret
or
jae
or
jmp
pop
lret
sbb
dec
mov
std
cld
or
inc
hlt
dec
vphaddwq
mov
aad
lods
jnp
mov
and
add
cmpsb
pop
push
inc
dec
pusha
pusha
mov
loope
pushf
adc
aam
popa
inc
movsl
stos
jg
push
and
push
sbb
sti
mov
push
sub
je
mov
out
clc
ja
mov
jbe
call
cmp
push
jne
inc
cmpb
shlb
xor
stos
sub
sbb
add
sub
or
mov
sub
ret
daa
in
jne
cwtl
ljmp
or
dec
pop
mov
jmp
mov
cs
cwtl
loope
xor
insb
xchg
cbtw
imul
dec
xor
mov
decl
push
push
enter
fisttpl
sbb
pop
pusha
xlat
cwtl
sbb
pop
dec
bound
adc
ficompl
inc
push
adc
nop
or
adc
xchg
push
fstpl
xorb
sarl
jns,pn
aad
ret
pop
ja
inc
lock
pushf
sub
adc
or
cwtl
mov
outsb
loop
or
sbb
xchg
js
cmp
inc
mov
sbb
push
push
cmp
pushf
pop
addr16
sbb
dec
dec
adc
rorb
mov
mull
pop
cmp
mov
movl
xchg
inc
jmp
and
push
push
imul
leave
pop
cmp
jmp
cld
inc
bound
mov
aaa
mov
inc
testb
incb
mov
jne
orl
mull
adc
or
push
pop
icebp
jge
mov
hlt
push
test
pop
and
int3
out
xor
cmc
call
inc
into
adc
xor
cmp
jg
pop
or
push
insl
arpl
cmp
inc
xchg
ss
int3
mov
test
mov
add
icebp
push
add
je
push
cli
adc
adc
lock
sub
cs
push
adc
cmp
jb
or
lcall
ret
sub
or
rorb
sbb
lar
ret
sub
shlb
je
mov
push
fs
adc
add
pop
movsl
sti
jle
or
enter
push
xor
pop
xchg
inc
in
cmp
sahf
icebp
divb
nop
adc
rolb
setne
shr
arpl
mov
push
cmp
add
add
pusha
cs
mov
mov
xlat
pop
mov
mov
pop
jecxz
cwtl
paddsb
inc
inc
mov
sbb
roll
jne
insl
stos
push
addl
in
add
hlt
xchg
jne
out
add
cmp
sbb
je
inc
mov
cmp
js
rclb
ja
icebp
shl
or
or
dec
jmp
fcoml
jo
cs
xor
mov
lret
inc
aaa
push
lds
mov
push
rorl
push
sbb
push
mov
jne
push
pop
iret
inc
dec
push
ret
stos
or
or
sub
adc
lods
jge
fdivl
lcall
icebp
cltd
test
pushf
faddl
cmp
and
decb
pop
pop
jne
fldenv
mov
push
sbbl
stc
or
rep
jmp
mov
mov
add
jnp
data16
test
lea
push
aam
and
jns
nop
or
mov
rcrl
mov
hlt
pop
mov
or
lods
cmp
mov
mov
and
movsl
push
dec
add
mov
nop
inc
xor
xchg
iret
jnp
push
mov
or
push
sbb
lahf
out
cmp
add
gs
mov
out
mov
mov
push
call
jns
out
lock
hlt
clc
call
cld
fimuls
fs
add
sbb
jmp
jns
fs
mov
lods
sbb
inc
pop
sti
xchg
xor
and
sbb
vpunpcklwd
je
into
jl
cld
pop
and
stc
or
std
cld
out
fsubl
fsts
inc
jno
lea
fsubrs
nop
lock
push
fiaddl
jl
mov
outsb
dec
gs
add
outsl
sub
push
add
nop
dec
dec
addr16
mov
sbb
mov
out
outsl
nop
or
push
mov
jns
jns
shll
sbb
sahf
out
sahf
sbb
adc
adc
jns
out
or
or
add
xor
add
in
or
push
test
push
add
pop
syscall
sbb
daa
ja
cltd
hlt
dec
rclb
jbe
or
dec
inc
ss
sub
jmp
imul
lcall
or
fisubs
cltd
insl
outsl
adc
fidivs
sub
add
scas
out
fists
add
cmp
mov
hlt
andb
adc
test
or
call
dec
inc
sub
sbbb
cmpb
or
cltd
adc
nop
pusha
xorb
lea
cmp
js
das
xchg
pop
fists
daa
sbb
or
add
int
and
je
cmp
adc
push
cmp
xor
lds
pop
dec
pop
add
mov
aaa
pop
and
sarb
or
inc
fwait
enter
ljmp
lock
sub
js
cmp
orl
jmp
movsl
inc
sub
and
or
test
dec
push
mov
add
cltd
pop
or
cmp
inc
lock
push
lcall
roll
adc
arpl
pop
lock
or
push
jbe
sub
inc
aaa
adc
pop
cmp
pushf
mov
cmp
into
lea
jbe
mov
cmp
dec
jmp
sub
mov
outsb
movsb
cmp
jne
push
adc
or
and
out
out
add
mov
push
pop
dec
fdivs
add
in
loopne
dec
orl
cmp
mov
lods
add
push
pusha
inc
jp
adc
fwait
mov
outsl
xor
push
mov
inc
jnp
adc
popf
pop
pusha
inc
jp
mov
mov
rcr
mov
ljmp
fcomp
inc
loopne
cmpl
mov
call
mov
mov
fcoms
mov
mov
adc
mov
in
outsl
sbb
loopne
xor
ret
pop
pushf
xchg
inc
mov
shlb
adc
dec
inc
cs
in
and
xor
lods
push
adc
ss
cwtl
inc
fdivl
jb
push
mov
add
adc
subb
call
pop
cmp
jne
mulb
jno
pop
pop
or
or
xchg
rolb
dec
loopne
lret
cltd
adcb
add
inc
loopne
xor
push
loop
pop
call
in
hlt
pop
cmpb
rolb
mov
push
add
repz
or
jl
and
xlat
sub
sub
loopne
js
push
ljmp
in
mov
jne
adc
jmp
push
sub
ljmp
jecxz,pn
dec
jecxz
xchg
pop
dec
or
lahf
inc
mov
or
pop
xor
sub
mov
pop
pop
sbb
sbb
roll
ja
add
inc
dec
mov
inc
xlat
push
mov
push
dec
sub
negb
pop
add
ja
pop
jbe
lea
adc
insb
repnz
sbb
jp
rorb
mov
sbb
mov
cld
jb
jp
es
add
pop
cmpsb
pop
scas
and
jno
into
es
and
dec
push
cmp
add
outsb
adc
add
jmp
test
jne
test
scas
adcb
cmp
xorl
orb
lods
cld
jbe
jle
mov
xor
xorb
and
pushf
pop
hlt
pusha
push
cmc
lock
ret
xor
negl
cld
rolb
pop
pop
inc
and
idivb
xor
les
xor
add
arpl
insl
mov
adc
in
fs
pusha
popa
call
ljmp
mov
loopne
movsl
mov
orb
adc
int3
or
scas
pop
and
adc
shlb
or
pop
push
push
outsl
push
sbb
inc
add
xchg
roll
mov
or
out
or
mov
or
leave
inc
dec
push
rolb
jns
xor
push
test
shl
inc
adc
cwtl
rcr
outsb
jl
mov
pop
adcl
dec
test
jmp
cmc
or
adc
jge
xor
cltd
rclb
push
or
xchg
push
cltd
inc
shl
add
rcl
js
xchg
inc
sbb
mov
and
clc
add
pop
and
jbe
daa
dec
jne
jmp
add
cs
push
repnz
cmp
dec
and
dec
jne
ret
jmp
jnp
es
jge
jmp
xchg
push
frstor
mov
dec
pop
mov
sti
mov
loopne
int
popa
adc
add
andb
push
shlb
inc
lea
push
outsb
into
mov
andb
and
pop
sub
cmp
jne
mov
push
mov
std
jne
es
jne
outsb
stos
cltd
cmpsl
call
aam
mov
icebp
cmpsl
add
jb
jmp
push
inc
incl
dec
mov
jns
pop
inc
adc
jmp
std
push
out
jle
xor
cld
cld
jmp
fldt
mov
in
adc
adc
inc
inc
inc
loopne
sar
push
out
pop
scas
add
inc
ljmp
aas
ret
mov
pushf
ret
lret
out
jmp
subb
xor
jb
and
push
pop
mov
sbb
push
pop
mov
mov
sbb
push
add
adc
add
or
pop
std
inc
xor
arpl
or
inc
enter
mov
pop
pop
cmp
mov
imul
ffree
fs
gs
xchg
fldenv
faddp
jge
shl
xchg
pop
add
xlat
push
mov
pop
add
dec
pop
jne
sbb
cli
out
xor
add
add
and
dec
dec
and
cmp
jbe
incl
push
push
dec
call
jp
mov
mov
dec
ja
jae
out
hlt
mov
rolb
aas
faddl
inc
add
lea
aam
jno
push
arpl
jne
pop
and
or
nop
mov
or
or
push
pop
addb
sbb
add
pop
xorl
sub
jno
xchg
mov
push
inc
leave
call
push
inc
xchg
mov
sub
ret
sbb
mov
push
rorb
clc
add
call
push
and
pushf
insb
arpl
in
xor
mov
orl
and
or
xchg
pop
push
push
cwtl
mov
lea
cmp
jbe
or
gs
lea
mov
popf
test
add
fists
es
and
jp
add
not
and
sub
mov
adc
insb
cmp
icebp
mov
je
mov
lock
push
pop
jo
add
lock
call
addr16
push
pop
ds
lods
ja
jne
arpl
push
push
inc
js
jae
inc
or
out
inc
sar
stc
and
mov
inc
je
mov
lea
neg
mov
fistl
sbb
or
add
jmp
or
mov
inc
inc
mov
and
or
pop
mov
sbb
scas
mov
pop
add
mov
inc
cmp
jb
imul
mov
dec
ss
addr16
mov
pop
inc
mov
add
inc
or
ficomps
sbb
ret
mov
add
push
xor
push
in
or
jmp
fcomps
adc
or
lret
jle
inc
or
addl
xor
fscale
or
jo
and
or
add
add
mov
dec
mov
push
cmp
loope
cld
ljmp
out
cmp
je
xor
aas
iret
repz
data16
faddl
aam
xchg
je
dec
pusha
pop
addr16
mov
movsb
mov
sbb
cwtl
add
adc
mov
and
and
imull
xchg
das
cmp
add
in
mov
cmp
insb
inc
or
jl
loopne
or
and
lret
push
mov
ret
add
pop
test
adc
or
arpl
push
loopne
xchg
xor
mov
fistps
pop
inc
jmp
cmp
sbb
jmp
adc
jne
popf
inc
cwtl
jno
and
jp
insb
mov
adc
jg
pop
mov
ss
push
stc
mov
cmp
and
stc
adc
xor
pop
mov
lea
pop
lods
adc
push
or
mov
js
mov
and
je
lret
rcrb
je
lea
jne
mov
sub
or
leave
lea
adc
sbb
outsb
sub
mov
test
jbe
push
add
and
dec
movsb
and
sbb
movsb
fst
push
movsb
push
adc
shl
cld
std
mov
adc
cltd
sbb
pop
scas
movb
shlb
xchg
xor
add
sti
cmovno
cmp
add
mov
jbe
add
mov
mov
pop
push
sub
adc
adc
adc
shll
jne
mov
mov
lock
mov
inc
mov
dec
jne
fs
add
pop
xchg
add
rclb
insb
movsb
sbb
add
aas
insb
mov
inc
mov
xlat
daa
dec
dec
lds
push
in
lret
pusha
push
inc
adc
orl
inc
imul
cmp
sbb
or
adc
sub
jo
jns
push
cmp
ds
add
pop
push
inc
push
xor
push
ljmp
jne
rcl
pushf
je
or
or
lret
js
mov
mov
out
mov
inc
adc
lea
jbe
mov
push
adc
or
and
mov
or
pop
sub
enter
push
test
cmpsl
mov
fs
clc
mov
es
ss
stc
sub
or
cld
push
pushf
leave
mov
or
inc
or
sbb
sub
jno
or
imul
push
mov
mov
dec
inc
lods
in
cltd
fisttpl
mov
subb
cmp
in
xchg
xchg
rol
in
loope
in
dec
int3
daa
div
daa
rclb
ja
or
out
jmp
mov
add
in
sub
outsl
mov
aas
rorb
mov
sub
mov
outsb
imul
push
adc
add
jp
inc
dec
mov
push
inc
hlt
ror
cmpb
jo
rcll
mov
jmp
es
add
test
add
enter
incl
mov
and
xor
fcoms
sti
sub
mov
add
shlb
cmp
adc
adc
shlb
push
or
push
into
and
jmp
int
or
adc
loop
or
pop
add
mov
fstl
sbb
jne
ja
btr
add
inc
mov
call
adc
jo
dec
lea
xor
add
or
add
pop
dec
fsubr
or
rol
sub
in
inc
int
rorl
int
loopne
loop
cmp
in
fwait
sub
sbb
or
mov
push
popw
cmp
add
fadd
pop
addl
decl
cmp
test
out
aad
stos
ja
js
pcmpeqd
in
cltd
pop
idiv
lea
decl
mov
jle
cli
add
pop
stos
scas
lcall
cltd
cmpsb
push
cmc
inc
xor
rol
imul
adc
mov
mov
jb
dec
ficoml
pop
popa
mov
dec
push
mov
in
dec
xchg
push
pop
push
pop
inc
jmp
mov
scas
sbb
add
and
mov
push
add
clc
push
in
sbb
inc
adc
cmp
or
repnz
add
or
clc
sbb
es
testb
rclb
xchg
loopne
mov
pop
inc
pop
push
push
fld
inc
add
inc
push
pop
js
stos
mov
fcoms
xor
mov
inc
inc
jnp
push
in
mov
rolb
lods
add
addl
cli
cmp
out
pushf
mov
inc
adcl
ret
inc
jecxz
rclb
je
mov
push
dec
les
idiv
adc
adc
add
fs
push
add
sbb
adc
ret
cli
xchg
in
add
call
dec
dec
or
aam
jmp
dec
je
out
inc
mov
dec
jne
push
pop
jae
push
or
imul
add
in
or
mov
push
jbe
test
add
push
xor
push
push
ljmp
decb
mov
sub
push
add
push
xchg
roll
add
insb
movsbl
push
jne
mov
addr16
add
dec
jo
add
lret
xchg
dec
jne
jmp
pop
lcall
xchg
push
je
arpl
or
xor
jl
dec
xchg
cmovp
pop
adc
mov
or
inc
pusha
mov
mov
mov
pop
add
push
iret
or
imul
jbe
leave
add
pop
lods
pop
jns
add
jmp
rorb
add
dec
jno
inc
sti
xchg
cmc
jae
push
jmp
sub
and
xor
mov
adc
icebp
and
add
cltd
inc
dec
je
add
sbb
sub
imul
jae
sarl
add
inc
add
add
ljmp
push
mov
loop
jne
test
or
or
loopne
push
add
cli
mov
mul
mov
add
add
sub
pusha
xor
iret
sub
jo
xor
pop
xchg
or
fst
push
fldcw
or
xor
loop
sub
je
or
dec
and
sbb
shl
out
iret
arpl
pop
jle
je
cwtl
ja
aaa
push
pusha
ss
popf
xchg
pop
pop
cli
or
lea
xchg
cs
lret
out
xchg
and
dec
js
sbb
lods
and
imul
sub
add
xchg
imul
pushl
pop
add
or
push
add
push
mov
pop
jbe
lcall
dec
push
pop
sub
popf
adc
add
push
repnz
push
dec
loopne
test
sbb
mov
shll
rsqrtps
into
cmp
lret
push
push
add
cmpsb
mov
jmp
inc
lods
movsl
inc
mov
lcall
insl
or
cmp
lea
ret
sti
sarl
pop
bound
jbe
lahf
jnp
jns
data16
push
inc
cmp
fdivrl
fsts
stc
xchg
clc
push
mov
stc
mov
stos
xor
fs
cmc
mov
notb
imul
add
sbb
jge
movsl
lods
pop
lcall
push
lods
mov
rolb
cmp
shlb
mov
add
pop
or
les
call
mov
jmp
dec
or
mov
cltd
pop
inc
mov
adc
out
hlt
cmpsb
orl
cmp
clc
sbb
shrb
xlat
je
xor
push
stos
daa
or
jns
push
insl
push
pop
jne
adc
dec
pop
cmovno
ficompl
push
inc
fcmovne
inc
int
push
mov
in
aas
in
push
add
push
push
add
aam
sarl
movb
js
rcl
bound
mov
lret
inc
dec
mov
jo
add
fiaddl
stos
out
test
mov
out
cmc
iret
mov
in
fcompl
mov
adc
jmp
and
mov
jno
aaa
jb
inc
cs
inc
mov
mov
add
popa
cmp
or
popf
test
jmp
inc
and
jbe
hlt
mov
adc
xchg
mov
xchg
add
adc
sbb
xchg
xor
adc
movsb
adc
aam
pop
lret
movsb
sbb
sbb
push
mov
test
in
jp
dec
pop
pop
popa
sbb
add
add
adc
bound
std
jge
xchg
lret
call
cmp
and
das
adc
dec
pop
jp
xchg
push
inc
pop
add
rcrl
loope
ja
pop
mov
xor
lcall
int
xchg
xchg
jp
or
fisttpl
jmp
andb
rcll
and
mov
pop
push
and
inc
push
insl
xchg
sbbl
push
push
fsubrl
sub
ja
or
pop
mov
sub
rorl
inc
dec
call
and
inc
pop
pop
push
lock
mov
push
mov
jmp
pop
rorb
sbb
out
mov
or
inc
jae
leave
cmp
xlat
repnz
add
xor
sbb
pop
inc
lock
fsubrl
add
clc
jmp
ljmp
in
adc
je
mov
pop
loop
into
mov
fisttpl
xor
nop
xchg
pop
repnz
xor
push
cmpsl
popa
and
jp
cmp
xchg
stc
jp
sbb
xchg
cmp
xchg
sub
mov
xchg
jl
shrb
aad
mov
popf
and
mov
push
leave
add
and
jl
jnp
pop
enter
sarb
push
pop
icebp
mov
adc
xor
ljmp
jno
mov
incl
mov
movsb
push
pushf
xchg
mov
je
jns
ds
jmp
adc
lcall
inc
enter
pusha
mov
nop
jo
xchg
push
mov
add
pop
inc
inc
fadds
push
push
mov
or
push
and
mov
cmp
xor
inc
push
nop
jnp
sub
incl
or
mov
nop
decl
adc
ret
imul
nop
test
adc
cmp
pusha
dec
pop
xor
pop
cmp
ret
mov
cmpl
fmull
xor
inc
or
jne
pop
stc
lds
inc
mov
sar
movsl
addl
or
mov
mov
movsl
sti
adc
jg
sub
adc
dec
pop
sbb
loopne
sti
xor
and
cmp
or
dec
add
outsb
jne
out
jle
adc
dec
or
pop
mov
push
mov
sbb
adc
push
xor
mov
and
and
push
cltd
or
jmp
idivb
mov
movsl
dec
cmpsl
sbb
pop
fstl
std
pop
jns
es
jo
mov
dec
aam
or
loopne
and
inc
sub
mov
push
rol
out
mov
fs
or
add
test
nop
mov
sti
subl
jmp
lods
push
rorl
pop
out
or
jno
mov
or
push
add
push
mov
mov
xor
rcrl
mov
loope
cli
and
das
loopne
rcrb
mov
cmpb
bound
dec
dec
lock
mov
mov
rcrl
das
inc
flds
imul
cmp
add
movsb
dec
outsb
mov
inc
movsl
dec
insb
dec
mov
pop
cmpsb
popf
push
popa
jmp
insl
xor
sub
add
inc
mov
aaa
fsubrs
push
mov
and
or
clc
subl
xor
pop
fwait
repnz
inc
xacquire
xchg
mov
adc
es
and
sbb
mov
in
cmp
sbbb
pushf
or
cwtl
sbb
mov
repnz
data16
sbb
stc
repz
popl
out
lods
movsb
mov
pop
dec
pop
inc
popa
test
movsb
movl
cmp
es
ret
fs
sarb
daa
xor
add
fbld
and
jge
sub
dec
js
imul
fsubrs
cmc
or
cmp
adc
push
xor
adc
inc
push
push
lahf
dec
xchg
addl
ss
sub
mov
sbb
movsl
xchg
dec
mov
insb
or
push
xor
insb
or
push
arpl
loopne
pop
pop
pop
stc
fcoml
ror
outsl
ret
pop
mov
or
lret
lret
popf
enter
shrb
les
add
hlt
jbe
loope
fbld
cld
or
in
adc
lods
or
and
in
xchg
rorl
push
adcb
scas
jmp
cli
fnstenv
xchg
xor
add
and
inc
test
cmp
pushl
mov
add
cmp
int3
cmp
int3
add
in
mov
adc
sbb
add
cmpb
or
or
dec
or
or
cli
add
mov
jmp
enter
adc
jge
inc
jmp
mov
mov
out
jbe
push
inc
fisubrs
shlb
test
inc
pusha
and
or
inc
mov
sub
sbb
pop
mov
push
adc
xchg
pop
divl
xchg
inc
js
mov
aaa
push
xchg
mov
dec
xchg
jno
xchg
insl
lods
sbb
ret
aaa
loopne
call
sbb
push
adc
add
lock
stc
rcrl
xor
mov
dec
nop
fdivrs
push
push
jge
insl
pop
cwtl
adc
and
mov
push
mov
ret
into
fnstsw
test
outsl
sbb
dec
jmp
push
jl
pop
and
ret
test
mov
dec
in
pop
popf
mov
in
hlt
fdivrs
jo
sub
mov
ror
cmp
adc
xchg
sbb
inc
call
xchg
call
shrb
in
or
into
les
iret
cli
push
mov
into
pop
add
cmpl
call
lea
mov
pop
ja
cmp
mov
ror
mov
mov
outsb
sbb
sar
pop
fsubl
mov
push
inc
loopne
jle
mov
je
or
cwtl
sti
or
jb
clc
fisubl
mov
mov
dec
or
je
dec
or
ds
enter
or
pop
cs
pop
add
addl
rclb
push
sub
mov
inc
sbb
jg
adc
call
push
add
sub
push
adc
ljmp
rcrl
int3
in
mov
mov
mov
jb
hlt
adc
movsl
hlt
inc
and
je
or
push
or
or
xchg
loope
insb
xchg
xlat
mov
dec
pusha
sub
adc
mov
pop
and
js
add
enter
movb
dec
xor
movsl
push
sbb
inc
fs
aaa
sbb
rcll
imul
xchg
out
sbb
adc
lock
repnz
inc
rcrb
sub
aad
dec
call
mov
mov
push
adc
add
mov
sbb
sub
je
pop
push
ret
test
add
cwtl
mov
pop
mov
dec
rorl
imul
test
lea
xor
sbb
mov
nop
jbe
out
call
aaa
cwtl
mov
mov
mul
lock
dec
and
xchg
addb
adc
mov
cs
mov
sbb
mov
add
mov
lea
add
loope
push
popf
push
insl
cmp
pusha
pop
xchg
xorl
cmc
pushf
sub
mov
rolb
sbb
dec
mov
sbb
mov
cmp
add
popf
test
mov
mov
push
cmpsb
nop
sbb
jge
jl
test
fidivrs
les
sub
mov
sete
testl
mov
dec
mov
dec
jl
jo
push
xor
xor
adc
jns
push
sbb
jmp
sub
push
jo
shrb
mov
push
mov
pusha
je
or
sub
test
insl
ret
cmpsb
xlat
and
popa
xor
test
gs
lds
test
mov
dec
xchg
andl
adc
sub
adc
cmp
inc
fisubl
test
sbb
notb
nop
and
ficompl
jne
add
xchg
hlt
jmp
lahf
out
pop
mov
imul
sbb
and
pop
push
out
icebp
and
mov
andl
or
mov
movsl
jo
dec
lock
inc
cld
adc
jle
movsbl
cli
mov
xor
jno
pop
pop
dec
mov
mov
mov
and
mov
adc
push
push
push
in
je
mov
inc
pusha
lds
jb
cmpb
jne
and
nop
ljmp
cmpsb
push
lahf
push
data16
mov
cmp
mov
cli
mov
mov
push
inc
daa
add
jno
sbbb
insb
pop
test
push
psraw
popa
or
inc
scas
push
xor
mov
dec
mov
lock
and
inc
cmp
outsb
dec
mov
cltd
jmp
xchg
sub
cltd
add
dec
sbb
pop
jl
jae
adc
add
xchg
sbb
adc
sub
jnp
or
psrlq
sbb
jge
clc
les
daa
mov
or
sbb
push
imul
lea
es
or
inc
pop
sub
stc
cltd
push
push
push
movzwl
add
ljmp
cmp
sahf
mov
jmp
jno
out
adc
xchg
sub
inc
cmp
shlb
aas
movb
and
or
fsubrp
cmp
in
movsb
aas
mov
es
cld
mov
addb
push
sub
ret
dec
adc
sar
int
test
inc
add
sbbl
add
dec
add
sub
mov
cld
push
sub
push
sub
pop
xlat
lret
int3
mov
fisttpll
shrl
mov
mov
jg
test
jne
jmp
and
test
push
and
ret
mov
jg
add
mov
and
out
arpl
sti
lods
mov
adc
lret
mov
push
lds
mov
mov
xchg
xor
inc
aam
mov
shl
inc
in
or
adc
movsb
inc
fistl
mov
inc
loope
and
xor
cltd
fst
add
pop
sub
jmp
adc
lods
jmp
mov
mov
jge
push
lock
jo
or
xchg
and
xor
je
gs
or
cld
out
out
mov
movsl
daa
pop
mov
sbb
ret
mov
or
or
pop
outsb
mov
adc
cmp
jmp
mov
pop
jmp
xor
cmp
shrl
movsb
pop
ret
nop
xor
out
imul
lcall
and
or
jge
je
ljmp
pusha
cld
inc
popf
xor
or
rcr
mov
inc
pop
stos
xchg
fistpl
cmp
int3
int3
imul
pop
ret
adc
incb
sub
pop
aam
test
mov
aas
add
xlat
or
and
loopne
lret
push
unpckhps
pinsrw
mov
inc
hlt
clc
xchg
cmp
cmp
loope
int
push
data16
rcrl
mov
adc
dec
js
lods
xchg
arpl
or
inc
ret
les
add
fmuls
adcb
negb
push
dec
or
test
into
mov
push
add
rcrl
fwait
sub
in
or
and
pop
sbb
xchg
push
int3
insb
ret
and
mov
in
push
inc
sbb
inc
je
cmc
adc
pop
rclb
jo
popf
and
es
shrb
lock
sub
mov
or
pushl
insl
and
mov
call
lahf
xchg
test
jp
add
loop
fdivs
mov
inc
cmpsl
mov
jmp
add
push
cmpl
xchg
push
jae
cmp
xchg
xchg
fldt
add
out
loopne
push
loopne
pop
lods
gs
loopne
or
es
sub
ljmp
imul
or
repnz
addr16
xchg
push
jae
nop
outsl
sub
sbb
pop
mov
add
sbb
mov
int3
and
movsb
es
push
aaa
push
cmp
or
clc
pop
inc
mov
push
jb
xchg
mov
lret
cmp
add
cld
add
and
add
pop
mov
inc
or
adc
call
and
jne
mov
std
pop
and
mov
nop
xorb
sbb
lahf
add
inc
popa
cmp
clc
pop
push
clc
cmpsb
add
push
lret
mov
sub
mov
inc
shlb
pop
mov
dec
ds
push
outsl
and
lea
ss
das
cli
in
addl
sub
sub
lea
mov
enter
sar
xchg
push
test
fldcw
cld
stos
mov
push
and
adc
movsl
int3
in
mov
push
pusha
sub
add
push
add
push
adc
push
fstps
jl
inc
sub
mov
and
cmp
inc
cmp
jnp
sbb
shl
xchg
out
and
add
test
imul
or
sub
xchg
pop
into
ljmp
pop
dec
add
hlt
add
test
sub
icebp
icebp
pop
cmpsl
inc
mov
or
fnstcw
mov
inc
push
cmp
loopne
ret
jnp
inc
fistps
jl
jmp
pop
adc
sub
insb
int3
push
pop
loopne
pop
imul
stos
sub
xchg
fcomps
adc
loopne
adc
test
mov
jo
mov
cli
and
mov
sub
fwait
xorb
adc
inc
or
jl
and
cmpsl
int3
inc
cs
and
pop
adc
enter
lds
lcall
push
sbb
mov
lods
or
testb
test
data16
sbb
hlt
xchg
add
cld
mov
les
xchg
sti
sbbb
push
mov
fs
dec
xchg
xchg
mov
push
xorl
cmp
into
jg
aaa
fs
fiadds
into
pop
and
dec
adc
addl
fneni(8087
add
cmp
loopne
push
cmp
push
pop
mov
nop
xchg
add
das
or
out
and
dec
sbb
pop
mov
cmp
rcl
sub
add
or
rorb
sub
rorb
subl
loop
mov
lret
test
push
mov
ss
movb
cmp
push
add
xor
add
add
loopne
cmpb
pop
test
inc
inc
mov
fwait
jb
push
or
loopne
adc
aaa
jle
dec
lret
inc
inc
mov
cli
pop
sarb
notrack
cmpl
out
push
push
pop
pop
add
or
jg
pop
into
or
mov
xchg
es
loope
ret
push
int
movsl
pop
dec
sbb
in
dec
movsl
mov
lods
clc
hlt
lods
movsl
pop
mov
mov
popf
fdivrl
mov
push
cmpsl
mov
mov
call
lods
lret
les
or
sub
mov
adc
cmpb
jp
les
iret
js
ret
jno
enter
xchg
or
pop
push
add
test
mov
loop
jge
xchg
pop
addr16
xchg
mov
pop
ja
and
fdivr
sahf
outsl
pop
orl
setns
and
and
mov
or
xor
add
sbb
lea
sub
ret
mov
add
lods
inc
dec
pop
adc
imul
mov
repz
dec
lret
lods
xchg
add
orb
xchg
mov
jns
mov
push
inc
int3
xchg
loop
inc
fistpll
insb
jne
jp
jbe
jecxz
or
pop
and
pop
mov
insb
jg
adc
es
daa
sbb
cmp
insl
jecxz
xor
jg
xchg
xchg
xchg
outsb
jb
cmp
xchg
sub
sbb
aam
cmp
rcrb
jae
jmp
sbb
jns
lret
jg
pop
push
or
push
sub
ret
fdivrl
movsl
push
lds
mov
jb
sbb
mov
mov
call
leave
mov
sub
cmc
mov
adc
in
ja
fildl
adc
pop
mov
push
cmp
mov
push
xchg
leave
mov
and
hlt
js
add
sub
jb
mov
mov
push
jb
mov
push
jo
dec
daa
jns
mov
xchg
pop
rcrb
xchg
jae
movsl
xchg
sub
xchg
outsb
cmp
sbb
je
add
push
pop
mov
mov
lods
jae
cli
push
jae
sbb
mov
jae
push
loopne
aam
cld
push
outsl
cltd
add
mov
mov
pop
cmpsb
rsqrtps
push
sub
or
sarb
cmp
pop
lea
jb
fstpl
clc
add
and
and
inc
mov
or
cld
push
xchg
xchg
dec
cs
popf
jecxz
loop
pop
popf
push
push
loopne
jne
insl
fildl
aas
movups
inc
pop
or
mov
pop
fcomp
cmp
jae
jnp
pushf
push
push
mov
loopne
adc
fs
lods
lea
imul
insb
push
pop
push
or
push
gs
sbb
inc
aas
mov
repnz
push
inc
pop
aaa
lret
sbb
push
xor
fnstsw
pop
and
loopne
pop
push
pop
enter
loop
daa
push
mov
rorb
dec
push
fdivrl
fcmovb
add
mov
dec
nop
pop
mov
fcom
sub
out
jns
cmpsb
adc
enter
aam
enter
cmpsb
jno
jns
jo
add
pop
and
aam
ljmp
aam
xor
add
mov
sbb
pop
in
push
sub
test
sbb
icebp
adc
pop
mov
add
pop
movsl
bound
fnstsw
test
scas
inc
push
cmpsl
stc
cmp
lods
sahf
stc
inc
scas
push
dec
pusha
loopne
xchg
mov
shl
inc
cltd
scas
sub
inc
fiadds
push
std
dec
cmp
mov
test
lea
and
or
loop
lret
cwtl
cmp
mov
clc
xchg
lods
mov
sub
xchg
push
mov
mov
rcll
xor
pop
sub
adc
mov
dec
ret
sbb
loopw
pop
movsb
pusha
das
mov
or
sub
and
cmp
rolb
adc
adc
cltd
xchg
push
pop
adc
dec
and
test
sahf
dec
shr
lds
mov
dec
iret
mov
inc
imul
or
cmp
pop
movsl
outsl
adc
or
jne
sub
adc
stos
leave
mov
and
adc
nop
sbb
roll
ret
imul
test
mov
jp
push
mov
push
mov
mov
jns
lds
test
mov
and
or
je
dec
xor
popf
jbe
push
or
push
or
cmpsb
pusha
dec
adc
testb
sub
xchg
add
pusha
dec
adc
enter
add
rolb
pop
cmp
adc
jle
sub
mov
mov
inc
add
stc
sahf
push
push
sbb
dec
add
adc
or
push
or
or
out
sub
sbb
pop
daa
add
imul
test
dec
rolb
fsubs
cs
popf
out
cli
out
add
or
push
push
sub
cmpsb
xchg
or
fcoml
mov
push
les
or
cld
ficoms
xchg
hlt
xchg
in
mov
loope
cmp
adc
sub
ljmp
push
inc
or
in
inc
inc
cld
sti
xor
fisttps
jne
std
jg
and
orb
mov
lods
jmp
and
and
push
nop
mov
add
outsb
lock
mov
lahf
aam
insb
mov
mov
or
rorb
sbb
mov
lcall
or
push
xchg
outsb
push
movb
das
dec
push
pop
outsl
add
data16
mov
bound
ss
adc
sbb
shlb
mov
das
mov
imull
movsl
or
flds
xor
sarl
add
dec
fidivrs
mov
mov
jns
pop
insb
push
cmpb
jmp
shll
xor
test
jg
cmp
jne
movl
inc
sarl
jbe
inc
std
jne
jmp
pop
dec
or
cmp
pop
mov
jmp
xchg
rorb
sub
push
loopne
leave
hlt
pop
lods
adc
push
cwtl
jmp
push
push
push
imull
mov
scas
inc
mov
mov
cmp
pop
lcall
xor
out
jb
or
out
mov
in
push
jmp
jno
push
fwait
inc
add
push
push
and
scas
into
dec
enter
mov
aas
rorb
push
sub
cmp
or
push
call
cli
dec
sbb
shl
jne
mov
test
xchg
sbb
mov
push
leave
inc
scas
jmp
xchg
sbbb
int
leave
xor
lea
mov
aam
enter
stos
push
scas
mov
mov
cmp
scas
lods
or
sbb
jo
inc
sub
jge
add
jb
mov
lcall
push
lock
xchg
xchg
mov
and
and
orb
jg
cltd
or
dec
jne
mov
dec
mov
orl
or
jle
xor
clc
or
dec
or
inc
dec
jne
lret
clc
jnp
repnz
stos
mov
jmp
mov
arpl
addr16
imul
cmpsl
cmp
pusha
push
loope
add
adc
addl
fwait
sbb
pop
mov
daa
pop
mov
test
lcall
popa
push
and
sti
mov
test
cmp
mov
fwait
jb
inc
jl
or
xlat
lods
addr16
pop
and
xchg
sub
sbb
add
pop
push
pop
push
push
cmp
pop
push
shrb
call
testb
insb
ljmp
add
cmp
jb
sub
and
dec
les
or
stc
or
push
cmp
clc
add
jge
aam
in
fmuls
lcall
fucomip
call
or
mov
scas
add
and
data16
or
mov
pushl
mov
mov
cmc
test
mov
jmp
mov
mov
imul
jmp
xchg
add
xor
cmpl
stos
bound
and
ret
inc
cmp
add
push
push
loopne
cmp
addr16
xchg
or
ja
push
sbb
leave
rorb
lock
scas
cmpl
clc
loop
aaa
cmpl
ret
or
addb
sti
orb
or
add
subl
pop
sub
sub
add
or
mov
add
outsl
iret
rorl
sarb
pop
movsb
xor
mov
mov
lods
pushl
pop
xor
imul
sbb
ficomps
inc
xchg
pop
cmp
sub
push
add
and
rcrb
cwtl
shlb
cmp
sub
daa
sbb
xchg
jbe
jg
aam
jle
jg
push
lcall
test
inc
imul
cld
faddl
sub
add
jg
movsb
or
cmp
mov
fildll
jo
clc
sub
mov
or
and
sbb
lcall
push
mov
sbb
ss
aad
pop
jb
push
nop
lock
or
push
sbb
xchg
loope
insb
adc
mov
add
leave
mov
jp
sub
jmp
pop
les
jb
add
fld
or
or
lods
andb
mov
mov
frstor
lea
and
and
ss
inc
mov
mov
sbb
push
push
push
pusha
jo
sub
push
or
aas
push
sbb
data16
outsl
sub
fidivs
fdivrs
pop
in
mov
push
push
mov
pusha
daa
add
ret
test
mov
pop
inc
or
sub
jg
add
add
les
shl
xor
mov
shlb
push
bound
jb
add
mov
push
imul
dec
fidivl
adc
ret
cwtl
clc
rcl
adc
pop
sbb
iret
test
imul
push
push
ds
adc
js
push
mov
mov
test
fisubrs
mov
lock
cmpsl
je
inc
sub
nop
xchg
sbb
pop
clc
shll
xchg
adc
pop
jb
cmp
pop
jb
pop
inc
dec
pop
inc
test
mov
cmp
jmp
push
pop
dec
test
dec
mov
ds
mov
mov
enter
pop
cmp
lea
mov
ficoml
scas
loop
popa
popf
jge
adcl
sarb
jge
and
lods
adc
mov
mov
add
jmp
fsubl
push
pop
inc
outsl
jo
les
pop
dec
dec
sarl
xor
cmpsl
mov
adc
pop
cmp
mov
mov
mov
push
les
push
out
inc
sbb
ja
mov
imul
popf
add
lret
xchg
xor
jl
xor
test
fistpl
das
cmp
xchg
arpl
cmp
inc
jne
cmp
stos
inc
lahf
xor
cmpl
hlt
xchg
pop
mov
cmp
clc
pusha
lods
adc
fwait
add
fisttps
mov
js
push
add
cmpsb
and
aam
lods
lods
lods
ja
mov
add
or
cmp
add
in
or
sbbb
orb
inc
lsl
sbb
fsubrs
loopne
or
xor
sbb
pop
mov
out
rclb
std
pop
add
and
sahf
loop
shr
je
mov
jg,pt
push
inc
adc
and
inc
push
pusha
or
jo
mov
dec
jne
shlb
sub
jmp
or
fstpl
jg
adc
divb
xor
inc
push
loopne
test
outsl
sub
jne
push
dec
rcr
and
inc
inc
cli
pop
pop
ret
addr16
sub
data16
rcll
mov
bound
sarb
cli
shr
add
fists
jle
xchg
xchg
dec
sbb
test
or
sbb
aam
daa
in
adc
xchg
ljmp
in
adc
add
push
adc
pop
pop
mov
push
dec
loop
adc
shll
enter
push
testb
loope
imul
cmp
xor
movsb
push
bsf
fwait
pop
divl
mov
sub
adc
and
addb
sbb
add
jge
mov
lret
or
inc
inc
pop
pop
test
loopne
mov
xorl
dec
bound
into
add
add
sar
das
fcompl
mov
inc
adc
and
fs
call
lock
shl
and
mov
add
mov
in
jno
xchg
out
mov
popa
lret
or
inc
sbb
cmp
sbb
mov
das
and
pop
jns
mov
je
dec
add
and
sbb
jl
add
mov
sbb
test
push
push
ja
pop
rcrb
pop
xchg
xor
cmc
xor
call
cmp
arpl
clc
andb
xlat
push
jmp
jb
int
add
sbb
imul
mov
jmp
mov
mov
in
in
fcomps
adc
leave
or
pop
js
and
push
or
sbb
adc
lds
jb
and
inc
lock
nop
popf
int3
repz
sub
push
scas
mov
cmp
push
fnstenv
sub
out
inc
mov
cmp
jge
or
insb
xorb
and
es
and
int3
and
push
cmp
pop
or
jne
inc
adc
pop
push
jle
pop
and
imul
push
inc
inc
push
lea
fimull
cltd
jmp
inc
faddl
ljmp
ja
popa
push
jmp
test
shrb
sub
jmp
pusha
inc
jp
xchg
and
ret
and
push
push
fs
mov
loop
lock
xorl
add
or
mov
dec
xlat
dec
std
push
outsl
mov
test
cld
divl
imul
mov
ret
mov
xor
mov
sbb
scas
jl
xchg
and
jle
mov
icebp
sti
ja
shrb
add
les
mov
push
mov
jl
xlat
insb
shll
fucomip
stos
bound
out
xor
loopne
add
sbb
or
inc
cmpl
mov
adc
es
push
add
test
mov
mov
push
jne,pt
or
xchg
xchg
mov
leave
push
ds
mov
into
ret
outsl
mov
mov
sbb
jne
mov
mov
sub
scas
addb
fwait
dec
call
in
xchg
lret
in
test
push
pop
cs
in
repnz
std
mov
lods
std
or
push
jne
imul
adc
and
xchg
xchg
or
and
incb
lret
jmp
in
and
push
stc
test
add
or
fxch
rclb
adc
repz
or
mov
push
mov
mov
dec
sub
popf
push
cmp
push
inc
jns
mov
orb
mov
or
push
add
ljmp
stc
ds
mov
mov
ja
adc
lret
or
leave
in
jne
or
add
jb
test
sbbl
hlt
cmp
enter
paddsw
jae
ret
insb
mov
loopew
mov
jl
cmp
arpl
ret
jb
and
adc
in
ret
call
jae
data16
inc
sbb
sub
orb
sub
mov
sbb
jne
inc
sub
pop
sub
hlt
jg
and
push
cmpb
stc
push
enter
ja
cmp
inc
xor
rcrb
movsl
mov
or
outsl
imul
js,pn
jns
dec
push
pop
push
mov
and
push
inc
arpl
mov
shll
gs
out
pop
int3
rolb
sub
inc
in
test
push
inc
push
xchg
out
popa
xchg
mov
pop
loopne
sub
mov
push
or
stos
nop
orb
rcll
fsubrp
xchg
lock
cmc
iret
and
in
dec
cmp
sub
sub
stc
mov
push
adc
loopne
lds
rcrl
or
les
xchg
mov
int3
enter
ret
outsb
jg
mov
jg
orb
inc
loopne
sahf
cmpsl
aam
cmp
xor
pop
mov
push
fisubrl
mov
aam
jmp
mov
sub
cmp
dec
jno
push
leave
add
cmpsl
push
inc
out
jb
cmp
adc
add
loop
pusha
addr16
leave
sub
adc
fwait
push
fwait
cmp
outsl
sub
add
or
inc
sbbb
mov
fs
sub
js
and
test
std
scas
pusha
addl
jo
loope
inc
bound
mov
loope
add
jecxz
sarb
aaa
and
push
enter
stc
imul
scas
cli
cmp
ret
loopne
mov
fldl
data16
sub
push
mov
jne
and
mov
aad
je
subl
popf
mov
and
mov
popf
out
dec
fbstp
push
inc
test
pusha
subl
int
sub
push
adc
mov
pushf
push
cmpb
lahf
inc
lahf
in
subb
loopne
ljmp
not
pop
call
outsb
stos
sbbb
lahf
pop
or
sbb
dec
push
jns
inc
pop
popl
jecxz
mov
push
pop
xor
sbb
cs
mov
in
call
mov
test
push
add
fcoms
neg
ret
pop
adc
push
shl
cmp
mov
dec
dec
movsl
movsl
lea
enter
clc
xchg
jno
lahf
arpl
sub
call
lahf
mov
lahf
inc
repz
cmpsl
loope
rclb
xchg
fcomp
bound
into
and
out
lcall
movb
inc
jmp
dec
data16
sub
orb
xor
jns
pop
ss
sti
mov
jmp
dec
and
inc
push
cmc
xchg
fidivl
mov
cmc
icebp
popa
push
movsl
mov
fldl
bound
push
or
or
push
subb
sbb
jmp
inc
sub
aam
mov
sub
pop
or
les
ss
pop
mov
dec
fwait
mov
ret
sahf
pushl
or
and
jb
sub
adc
add
mov
push
test
mov
mov
sbb
je
fdivs
adc
cwtl
inc
lea
push
sbb
sbb
nop
sbb
mov
cmp
hlt
lods
loopne
push
push
nop
dec
icebp
or
sbb
cmpsb
jmp
sbbl
cmp
andb
fiaddl
pop
dec
push
add
adc
jl
test
test
insb
je
inc
test
push
adc
pop
mov
test
push
mov
das
cmp
cli
lea
aam
xlat
ret
shrb
push
cmp
imul
xchg
sahf
out
loope
cs
shll
loopne
lods
test
push
nop
andl
arpl
add
rorl
fsubrs
mov
leave
rcll
pop
in
loope
lea
or
sub
outsb
mov
xchg
out
imul
push
mov
in
lock
xor
mov
stos
mov
and
push
outsb
sub
jbe
pop
add
jo
cmp
pop
dec
dec
aas
js
outsb
fsubs
scas
movsl
insl
jne
repz
movl
adc
into
and
lods
xor
jecxz
dec
inc
sbb
mov
xlat
adc
and
inc
inc
inc
inc
mov
cmp
inc
sub
push
dec
sbb
inc
aaa
mov
repnz
push
push
inc
mov
xchg
mov
nop
mov
test
aad
sbb
dec
inc
es
movsb
jb
cmpsl
inc
aad
cmp
jno
in
aad
cmc
push
lods
outsb
cwtl
inc
sub
cmp
hlt
inc
ss
add
js
jecxz
loopne
add
aas
dec
and
cmp
xlat
adc
fucom
decb
cld
push
int3
sbb
aam
push
and
aam
cwtl
inc
sbb
cltd
nop
mov
add
cwtl
push
and
leave
lods
lods
shll
cmp
mov
lea
jb
pop
mov
jb
test
out
stos
movsl
adc
pop
jecxz
mov
xor
aaa
cmp
add
in
add
inc
dec
leave
aaa
push
dec
mov
bnd
enter
xor
inc
pushf
cwtl
pop
jb
push
nop
nop
mov
pushf
inc
push
nop
and
cmpsb
cwtl
mov
inc
mov
test
divb
int3
mov
mov
rolw
cld
hlt
lds
stos
sbb
pop
fistpll
stos
xchg
ljmp
cmpsl
stc
add
dec
jp
addr16
mov
mov
insl
std
and
cmp
rol
xor
test
or
cli
je
testl
aas
out
push
in
test
pusha
xor
int3
inc
or
pop
pop
mov
xor
lods
or
fcompl
xor
gs
lods
push
aas
rol
sbb
xor
xlat
fstl
test
xor
jge
scas
sbb
sbb
or
iret
mov
cli
push
jmp
popa
int
ficoms
outsl
cwtl
add
push
jg
push
js
icebp
mov
and
arpl
add
add
cmpsl
test
push
pop
mov
mov
pop
or
and
mov
or
add
shlb
sub
pop
jne
loop
les
popa
insb
jb
or
cmp
adc
xchg
popf
adc
sbb
inc
andl
inc
into
rolb
mov
add
mov
sahf
fnstcw
xchg
xchg
and
push
dec
pop
gs
adc
loope
shr
das
mov
mov
mov
dec
adc
push
and
fnstsw
sarl
dec
push
pop
outsl
inc
pop
ret
or
jbe
jle
cmpsb
loopw
repz
ja
jo
mov
int3
sbb
ja
jne
jo
in
jg
dec
push
int3
pop
ffreep
lea
lea
adc
in
adc
inc
shrl
mov
mov
xor
dec
movsb
aaa
add
cltd
pop
jp
aas
ret
inc
inc
push
negl
ret
mov
lret
cmp
push
mov
inc
push
mov
shr
cmpps
mov
test
lmsw
lods
add
test
jl
into
sbb
lahf
and
popf
imulb
sub
add
mov
sbb
push
dec
or
roll
xchg
pop
repnz
inc
inc
ds
outsl
xor
push
or
stos
add
jmp
mov
cmp
imul
mov
pusha
movsl
xchg
les
mov
or
cltd
cltd
add
mov
add
inc
adc
and
cmp
and
cmp
pop
xchg
or
jmp
adc
test
cmp
movsb
push
popa
xor
subb
cmp
rol
push
stos
mov
mov
icebp
clc
mov
jae
xor
shlb
adc
shlb
fcompl
jns
cli
call
sub
and
int3
jo
clc
inc
mov
clc
pusha
orl
jle
jle
andl
or
stc
mov
fldl
sub
adc
or
stc
jbe
cmpl
pop
subl
inc
test
xchg
test
push
push
mov
ds
lret
cmp
mov
cmpsl
imul
test
test
pop
fs
shrb
push
push
test
jo
sahf
pop
cwtl
jmp
mov
divl
and
lods
sbb
mov
or
movsb
mov
cmpsb
push
rcr
test
adc
fsubl
or
inc
mov
push
out
push
mov
mov
aam
push
fucom
pop
cmp
in
outsl
adc
inc
xor
stos
into
dec
xchg
out
movsb
inc
push
or
push
out
fsub
sbb
outsl
or
jb
gs
jmp
dec
fmuls
outsl
mov
jbe
add
les
aam
pusha
js
jno
outsb
inc
negb
out
out
dec
call
xor
pop
add
incl
dec
and
and
cmp
lods
mov
pop
xlat
insl
into
int3
fs
out
dec
adc
sbb
das
add
fs
inc
daa
adc
pop
andl
insb
stos
xchg
and
add
xor
adc
push
pop
mov
pop
add
mov
push
notb
inc
cmp
gs
jl
lret
cmp
enter
or
jne
test
stc
dec
decb
outsb
or
cmp
dec
add
xlat
outsb
add
sub
fidivrl
movsl
adc
mov
mov
inc
cs
lock
je
cmp
stos
add
dec
mov
and
xchg
or
push
insb
ljmp
popa
push
pop
jle
in
or
add
push
and
cld
add
test
sbb
sbb
or
jne
push
insl
push
mov
lods
jle
ret
adc
test
mov
inc
sub
ds
movl
icebp
jo
xchg
push
aam
shlb
js
rol
loop
cmp
shl
push
rclb
stos
mov
and
pop
xchg
imul
fimuls
cld
pop
sbbl
pushf
shlb
pop
add
pop
js
into
jae
lea
or
add
add
add
or
mov
lock
lea
push
rcr
pop
fadds
mov
rorb
loop
shlb
rcrl
lret
push
and
push
je
fwait
scas
call
push
sub
lea
push
flds
or
push
push
nop
pop
push
movsl
xchg
mov
hlt
jg
xor
push
push
pop
push
jmp
iret
fadd
mov
nop
ret
jne
push
mov
or
jae
lock
movw
mov
into
hlt
ja
adc
movb
xor
fldl
shrl
inc
loop
movb
jb
push
push
in
out
push
xchg
mov
call
add
push
push
ret
mov
dec
adc
jl
fidivrs
sbb
movsb
jge
shl
inc
aas
or
add
aaa
and
add
out
pop
daa
fiadds
add
xor
aas
cmp
iret
cmpl
or
rorb
and
into
loop
test
sub
shll
xor
jl
test
call
divb
jmp
pop
push
fcoms
jo
sbb
mov
inc
cmp
pop
sarl
cmpl
ret
add
xor
jmp
jns
sbb
inc
insb
mov
dec
add
or
add
hlt
subb
clc
sbb
rorb
decl
divl
mov
addl
push
push
orb
jmp
mov
push
pop
jmp
lea
cwtl
and
cmc
andb
hlt
lahf
inc
cs
aaa
xor
lret
lret
mov
mov
jne
jmp
js
mov
or
je
je
jbe
push
mov
movl
and
add
adc
out
pop
cmp
adcb
cmp
sub
dec
aaa
inc
cmpb
and
cwtl
xorl
mov
out
mov
jge
movsl
pop
test
not
mov
push
push
sub
loope
mov
xchg
add
cld
xor
inc
and
jns
rcrb
lock
fwait
mov
and
imul
mov
mov
test
xor
mov
ss
add
or
mov
es
push
lret
jne
cmp
cmpsb
inc
stos
xor
orb
adc
jae
mov
ljmp
add
pop
dec
pusha
push
sbb
cmp
push
sub
push
lock
jg
inc
jb
mov
or
leave
test
pop
mov
xchg
movsl
out
add
fistl
into
mov
ss
rorb
xor
xchg
imul
test
sbb
mov
das
push
push
jb
pop
sbb
addr16
aaa
es
in
jnp
add
jnp
incb
cmp
fldt
loopne
daa
jg
cmp
adc
jmp
mov
or
xor
out
sub
ds
xor
xchg
es
inc
adc
fidivrl
cmp
mov
inc
jl
pop
inc
dec
jl
cmpsl
repnz
dec
cwtl
push
adc
adc
test
popa
sub
inc
xor
or
dec
fnclex
lods
in
sub
dec
or
mov
mov
je
mov
mov
or
mov
popa
mov
and
sbb
dec
loopne
loope
shlb
xchg
mov
test
add
and
add
sbb
add
dec
popa
mov
outsl
push
lock
shr
jne
add
imul
push
pop
or
lcall
xor
push
clc
stc
dec
and
add
stos
and
daa
dec
data16
cmp
ret
hlt
mov
or
pop
arpl
and
mov
scas
or
and
mov
cmp
jle
lret
sbb
dec
inc
fs
imulb
cs
test
mov
bnd
jecxz
fs
push
sbb
cmp
jne
mov
jbe
xor
add
sub
scas
inc
add
testb
adc
lds
dec
stos
push
int
sti
enter
std
call
mov
enter
jmp
lcall
fdiv
pop
rcrb
shl
adc
es
jno
inc
push
ret
or
xchg
or
sub
mov
test
insb
andb
or
inc
ret
or
dec
ja
test
pop
test
pop
add
test
adc
fcmovbe
ficoms
clc
lock
loop
in
add
and
and
or
push
ret
ss
mov
or
sbb
stos
adcb
pop
outsb
shrl
in
pop
lea
adc
enter
sbb
dec
add
fs
out
sbb
jb
sub
notl
incb
sti
enter
add
jb
mov
pop
xchg
jne
inc
js
and
sub
sarb
cli
pop
push
lret
shlb
mov
jnp
insl
fcoms
or
lock
mull
out
int3
jnp
lsl
jmp
push
pop
push
push
inc
shr
rcr
and
push
cld
shr
rcr
or
mov
repz
dec
fucomip
xchg
gs
mul
pop
jb
cmp
or
pusha
out
out
jb
cmp
or
xor
and
sbbb
neg
inc
fidivrl
lret
iret
pop
ret
or
test
sahf
push
lods
sbb
aas
jbe
adc
push
inc
mov
or
sub
in
inc
in
sbb
cli
jge
sub
mov
cwtl
jbe
or
xchg
or
inc
push
inc
push
adc
jb
shr
ljmp
mov
or
mov
cwtl
stos
mov
and
sub
add
and
outsl
or
dec
adc
inc
inc
add
pop
les
inc
loope
mov
and
clc
into
add
scas
inc
jne
repz
xor
shll
push
dec
push
inc
lock
sbb
inc
out
sbb
iret
and
loop
jmp
dec
and
in
push
fsubl
imul
or
add
adc
in
aas
popa
dec
mov
xchg
mov
sbb
mov
ret
jbe
sbb
fs
jmp
inc
adc
pop
jg
cmp
loope
jne
enter
push
add
pop
dec
xor
jmp
inc
cmp
mov
xor
xchg
xorb
daa
xlat
and
rcrl
es
ds
add
push
mov
aam
cmovns
dec
and
loope
lahf
and
push
rorb
sarb
or
or
mov
leave
or
add
adcb
cmp
add
stos
mov
push
popa
push
sbb
sub
cltd
pushf
or
jns
popf
pop
fidivl
inc
lods
in
mov
mov
out
sub
sbb
sbb
jl
sahf
iret
decl
cwtl
push
xor
sarl
ja
lds
push
mov
jo
xor
sbb
subb
jo
xchg
adcb
mov
popa
pop
mov
mov
shll
pushl
add
popa
push
jb
lds
sbb
and
or
test
repnz
dec
mov
sarb
aas
dec
cmp
fisubrs
sarb
ret
push
je
mov
cwtl
mov
aam
pop
mov
push
fcomi
jo
fld
push
push
push
and
mov
sbb
xchg
ljmp
ss
xchg
js
adc
outsl
and
push
aam
jae
jo
fbld
or
scas
inc
loope
imul
sub
mov
adc
and
push
lret
test
gs
aam
inc
add
sub
fimull
int
mov
shl
adc
movb
sub
aam
inc
out
subb
sbb
xchg
adc
stos
push
xor
cmp
inc
jmp
mov
lds
mov
jne
imul
jno
inc
push
dec
push
jge
aas
sbb
mov
enter
jbe
in
addr16
dec
jne
dec
xor
dec
je
jbe
or
mov
lock
xor
hlt
aam
add
push
and
mov
push
adc
and
add
adcl
mov
stos
sub
push
lcall
es
push
adc
xor
filds
cmp
jge
mov
and
mov
fstpl
push
mov
adc
pop
sbb
jb
dec
pop
scas
add
sub
and
mov
jnp
push
pop
inc
rclb
sti
aas
jmp
cli
and
shl
sbb
xchg
and
lcall
cltd
pushf
jl
js
mov
cld
or
cmpb
mov
mov
lahf
subb
insb
and
ja
pop
outsb
gs
into
sub
rcll
andl
or
insb
and
or
mov
push
pop
shrb
push
pop
int3
cmpl
inc
or
push
gs
and
cmp
loope
andl
cwtl
int3
in
mov
lock
ja
subb
loopne
addr16
lea
mov
pop
imul
add
lds
pop
push
adc
add
pop
xor
adc
sbb
or
add
outsb
add
fmull
mov
std
mov
pop
or
xor
mov
shlb
out
adc
divb
cli
adc
lea
dec
sbb
mov
or
out
test
push
and
std
popa
sbb
jmp
popl
ret
and
mov
mov
scas
xor
or
enter
cmp
shrb
add
push
repnz
inc
mov
in
out
addl
sbb
pop
jno
push
js,pn
sbb
adc
mov
push
xor
call
movsl
ljmp
push
inc
cmp
ds
xor
lahf
xor
push
push
push
xchg
xor
out
popa
push
fldcw
addl
or
rol
jl
xor
add
inc
pusha
inc
cmp
jo
cmp
ja
aad
jns
hlt
cmp
cmp
arpl
mov
pop
stos
mov
cli
add
faddl
pop
push
test
or
aas
je
inc
xchg
push
ds
add
cwtl
js
add
mov
lcall
fmull
push
mov
outsl
andl
adcl
xor
pop
hlt
add
addb
test
insb
je
sub
sub
frstor
push
xchg
push
les
add
push
imul
and
mov
xor
lret
lcall
and
xorb
loope
imul
loopne
mov
xor
shll
inc
adc
add
adc
mov
mov
adc
push
push
push
mov
dec
mov
pop
call
ret
rolb
adc
dec
fcoms
es
push
lea
inc
sub
lcall
or
xchg
lcall
addb
cwtl
hlt
mov
es
inc
loopne
sbb
sti
sub
xor
cltd
inc
mov
jmp
mov
xor
lahf
cli
popf
pushl
leave
lret
sbb
cmp
stos
jo
add
mov
sub
jl
adc
or
pop
mov
inc
mov
push
push
nop
imul
fcomps
shll
mov
cmp
loop
dec
and
cld
jl
jecxz
fmuls
cmp
sti
add
or
push
mov
cs
push
or
xchg
scas
xchg
add
lea
and
push
dec
and
mov
pop
dec
and
mov
cmp
adc
nop
leave
sub
adc
aas
sub
or
das
jl
incb
dec
mov
movsb
andl
jmp
xor
test
stos
popf
add
push
sub
xchg
mov
das
outsl
test
lcall
sub
cmp
xor
sbb
daa
xor
push
jmp
dec
push
in
jbe
cmp
jecxz
divb
out
adc
dec
lock
inc
sbb
sbb
mov
sub
ret
insl
sbb
jge
jge
roll
mov
and
out
jbe
nop
add
jne
out
dec
jae
popa
inc
cs
imul
sbb
xchg
and
outsb
push
icebp
dec
jo
rclb
bound
pop
push
sub
dec
ja
popa
or
and
mov
stos
mov
dec
pop
stc
sub
cmp
mov
ret
lods
sub
mov
loopne
pop
loopne
je
mov
data16
add
nop
mov
or
dec
pop
lahf
ljmp
ss
testl
xor
jecxz
fldl
pop
sbb
test
push
dec
dec
or
cmp
xor
and
fdiv
lea
add
aad
cmpl
jecxz
scas
or
push
push
inc
jmp
cmp
int3
dec
xchg
fcomps
icebp
sub
cmp
icebp
sbb
into
dec
push
hlt
and
ud2
fwait
jne
jp
or
popl
popa
cmp
lods
cs
jge
add
mov
pop
push
sbb
sti
es
mov
mov
sbb
mov
pusha
jp
outsb
sbb
adcb
jge
jle
inc
ret
pop
shr
sub
xor
jne
adc
sbb
fmulp
or
add
cs
lods
sarl
add
pop
mov
je
lock
pushf
imul
mov
mov
push
pop
jge
movsl
add
test
lea
enter
les
lods
mov
out
adc
int3
or
jne
mov
or
and
or
test
ljmp
out
xlat
jae
stc
jne
aas
mov
push
or
mov
rcrb
ja
mov
call
mov
int3
les
js
inc
jne
sub
loope
lock
fistl
into
sbb
jne
inc
or
test
and
pushf
and
cmc
int3
mov
xchg
pop
dec
es
loopne
nop
mov
lock
cwtl
xchg
test
push
pushf
fdecstp
sbb
inc
add
test
or
or
adc
mov
es
sub
push
push
lcall
mov
jl
mov
ja
ret
lods
incw
cmpl
insl
mov
xchg
pushf
cmpsb
jg
jle
inc
mov
sbb
sti
jg
add
inc
or
push
aaa
loop
arpl
or
sub
push
aam
gs
call
lock
fcom
shr
aas
or
push
out
jae
mov
jg
or
add
adc
inc
mov
add
into
negb
pusha
lods
jl
cs
shrl
shl
shr
or
mov
sahf
adc
xor
jne
outsb
mov
adc
inc
and
int
adc
loop
cmp
pop
xchg
dec
push
hlt
sub
loope
lock
rcr
fiaddl
mov
testl
jmp
out
jmp
or
test
fsubrs
push
and
mov
mov
mov
loope
jl
rcrb
jmp
test
mov
shr
or
daa
mov
sbb
jmp
lods
ds
aaa
lcall
lcall
mov
or
and
inc
sbb
pop
xor
jne
push
lret
das
xorl
sub
xchg
inc
test
sbb
mov
movups
fs
imul
mov
inc
mov
inc
mov
adc
push
lar
repz
cmp
daa
incb
adc
inc
mov
out
lcall
mov
sub
inc
sbb
cmp
push
mov
pop
incb
jne
testb
mov
sbb
mov
data16
fisubrs
push
jo
addr16
add
sbb
pop
addr16
mov
mov
pop
cmp
sbb
aaa
dec
js
outsb
inc
int
outsb
pop
and
adc
xor
push
add
sub
adc
push
push
fnsave
dec
sub
mov
or
inc
adc
stos
in
or
bound
shl
ret
add
addb
rcl
repz
pushf
or
divl
push
push
sub
xchg
cld
mov
mov
mov
or
shrb
pop
lea
cmpsb
dec
fwait
mov
ud0
add
jg
push
inc
jl
sub
call
ret
les
ret
in
jnp
xchg
or
xor
shl
xor
jne
jne
lods
adc
dec
push
inc
adc
pop
add
mov
push
adc
mov
rolb
push
sbb
mov
leave
and
leave
lcall
xchg
or
jge
sbb
fdivs
pushl
pop
leave
add
cs
push
lock
and
loope
sbb
or
or
push
or
mov
and
jmp
ret
jmp
mov
mov
movsb
inc
jmp
mov
loop
repz
add
xor
and
jbe
out
or
aam
filds
enter
cmp
ds
push
lea
add
jle
pop
mov
add
sar
mov
aas
or
add
loop
or
dec
adc
sbbl
mov
into
add
and
psadbw
jge
mov
shr
cmc
lods
push
cltd
lods
loop
pop
xor
cmp
sbb
or
dec
push
and
xor
inc
pushl
jo
aam
js
sahf
cmp
mov
pusha
cmp
or
xor
dec
push
ds
xor
fidivrs
push
sub
es
xchg
push
inc
mov
imul
mov
pop
mov
mov
test
mov
add
lds
mov
xor
push
hlt
mov
andl
outsb
pusha
and
shll
fs
out
lret
add
rorb
fsubs
cmpsl
test
or
roll
movsb
pop
xchg
movb
pop
es
lock
mov
inc
xlat
ret
test
dec
and
mov
hlt
lea
fwait
rcrl
jnp
sti
inc
cmp
jnp
pusha
ret
mov
xchg
push
inc
sbb
test
cmp
add
jno
or
push
xorb
shll
orl
mov
xchg
aam
incl
cmpsb
int
imul
dec
push
test
cmp
push
add
daa
inc
mov
push
cmp
inc
xchg
and
and
test
loop
cmp
shll
add
jnp
repz
push
jmp
sub
inc
scas
loop
sub
add
add
sub
arpl
inc
push
mov
fiaddl
add
sbb
fisttps
cmp
dec
xor
mov
mov
inc
mov
sbb
add
xchg
dec
xor
enter
or
out
ret
and
mov
std
xchg
clc
adc
lret
jl
cwtl
mov
imul
jae
mov
pushf
loopne
imul
jmp
sbb
push
addl
pop
movsb
lds
xchg
and
out
sub
jne
cmp
daa
ret
sub
clc
and
les
push
xor
jne
push
sbb
shlb
and
jns
add
or
into
jg
sbb
mov
pop
data16
xor
sub
or
and
or
mov
and
add
mov
or
jne
add
mov
mov
ds
inc
cmp
or
or
test
popf
test
ror
sti
leave
mov
and
jmp
or
into
or
insl
adc
es
pop
adc
and
inc
pusha
adc
bts
test
outsb
add
jg
jmp
ret
rcll
mov
adc
icebp
nop
sub
stos
out
or
loopne
aas
push
jae
adc
imul
add
lcall
jne
adc
sub
jne
in
inc
test
mov
fidivrs
jno
xchg
cwtl
rcrb
icebp
inc
je
xor
jnp
xchg
cltd
or
or
adc
sahf
cmp
sub
outsl
repnz
add
test
ret
clc
fdivr
lds
pop
inc
pusha
inc
stos
test
bound
vcvtss2sd
push
ret
xchg
clc
xor
push
dec
or
mov
xor
fnstcw
and
ret
xchg
pop
mov
adc
and
inc
out
cmp
inc
or
mov
push
xchg
and
xchg
nop
sbb
mov
nop
xor
dec
push
js
jno
in
sbb
and
roll
fsubrl
dec
pop
aam
push
pop
pop
mov
adc
ret
mov
and
cmp
adc
rcll
fs
mov
dec
xor
xchg
and
or
mov
xor
sbb
add
cmp
call
add
push
jmp
test
cmpsl
xchg
push
push
jecxz
enter
jl
cmp
pop
adc
jmp
addl
js
pop
sbb
sbb
adc
les
xchg
push
xchg
roll
mov
testl
icebp
xor
jb
icebp
adc
dec
add
push
lcall
adc
pop
adc
push
inc
adc
inc
mov
or
xchg
test
jbe
add
xor
dec
push
inc
jmp
xor
cmpsb
dec
popa
jge
mov
popf
push
add
add
inc
imul
sub
mov
pop
pop
std
mov
pop
les
cmp
and
pop
add
mov
sbb
xchg
add
test
jbe
and
mov
or
arpl
rclb
mov
shll
mov
add
es
aaa
add
jmp
lock
test
dec
pop
push
aas
add
shl
mov
pop
les
jnp
mov
adc
adc
scas
push
aaa
sbb
or
and
rcrl
xchg
jno
das
push
andl
jle
cmp
and
in
push
mov
add
sub
sbb
cmp
push
jo
test
lods
or
rcrb
mov
outsb
push
jne
push
aas
out
dec
sarb
pushl
pop
movsb
push
or
enter
cmp
in
inc
pushf
xor
cld
add
shlb
ret
sbb
jmp
push
std
daa
push
aad
jne
push
push
pop
cwtl
test
jnp
jne
pop
sub
sbb
push
pcmpeqw
inc
jle
sbb
or
adc
in
js
mov
xchg
xchg
loopne
lea
adc
fstpl
xor
xchg
mov
pop
ss
je
inc
mov
pushf
or
fidivrl
mov
push
xchg
adc
pop
inc
icebp
imul
add
in
aad
movsb
jb
imul
dec
or
mov
or
cmp
adc
sub
shll
add
call
ret
or
cmpb
pop
jecxz
scas
ret
push
or
jne
call
clc
push
mov
jbe
sahf
xor
sarl
push
and
mov
in
mov
or
ss
ljmp
arpl
sbb
je
inc
jae
sbb
and
adc
mov
dec
mov
mov
mov
bound
push
push
jno
mov
jge
add
insl
scas
aas
cmp
cs
inc
in
xchg
sub
cwtl
cs
dec
cwtl
imul
idivb
inc
pusha
jne,pn
sbb
out
fwait
fs
inc
mov
rcll
adc
add
aaa
jge
mov
mov
bound
jmp
or
push
icebp
push
fwait
xchg
add
lock
loopne
jmp
cwtl
les
lcall
mov
sub
bound
push
adc
fs
clc
adc
or
jg
sbbb
dec
sarl
cld
and
add
cmpl
test
sub
adc
ret
fdivs
ja
cmpsb
push
mov
push
add
mov
sbb
sbb
cmp
stc
jb
xchg
adc
or
add
xchg
and
sub
call
add
push
test
cwtl
mov
clc
add
and
test
jle
shl
jo
in
push
cs
andl
movsb
add
mov
and
cmp
insb
jo
out
insb
loop
ret
ss
pusha
fists
adc
cmp
xor
push
jmp
push
ret
divb
orb
idivl
sub
clc
call
or
ret
add
dec
aam
and
ds
push
test
jo
adc
into
movsb
xor
mov
and
rclb
out
std
adc
push
and
sub
or
testb
push
je
inc
call
cmp
inc
cmp
mov
push
push
sub
sbb
push
mov
lock
imulb
insb
xor
mov
orl
or
pop
cmp
js
inc
outsb
mov
mov
mov
fcompl
daa
inc
test
sti
mov
jle
lods
and
xlat
jne
or
sbb
stos
or
push
mov
jne
push
out
rcrl
and
pusha
sti
ret
ret
pop
cli
mov
cld
push
add
push
adc
xchg
ljmp
and
arpl
and
xchg
into
les
in
in
and
addr16
jae
push
jg
data16
loop
cmp
outsl
xorb
popa
mov
inc
dec
jno
push
in
mov
inc
mov
ds
sbb
mov
cwtl
stos
fs
in
and
cmc
rorl
add
pop
adc
mov
int3
rclb
aad
or
pushf
pushf
pushf
mov
or
adc
mov
sbb
jb
jb
sub
xor
jo
jb
cmp
jbe
adc
inc
inc
cmovs
in
in
push
push
pop
cmp
cmp
push
insb
jo
js
or
cmp
leave
and
mov
test
xor
xor
pushf
mov
jns
mov
xchg
enter
xchg
dec
sarb
cltd
fs
in
cltd
fs
call
fs
dec
hlt
clc
cld
cmp
and
add
add
add
or
adc
sbb
xchg
dec
es
and
sub
es
xor
dec
cmpsb
pusha
xchg
cmp
gs
xchg
dec
cmp
push
dec
xor
and
pop
pusha
sbb
pop
jg
pop
push
add
insb
mov
jbe
test
sbb
test
movsb
cltd
or
dec
add
mov
notl
or
adc
nop
imul
sbb
sbb
and
movsb
cltd
nop
mov
orb
mov
movsb
cltd
inc
rolb
lcall
mov
int3
dec
enter
or
push
sbbb
mov
and
loope
lret
and
adc
ret
incl
push
xchg
movsb
icebp
or
sbb
xchg
dec
jb
out
imul
push
or
or
pop
inc
bound
aas
push
or
lock
pop
js
push
fimuls
movsb
jmp
cwtl
add
test
or
je
and
add
or
sbb
repnz
adc
fidivs
push
out
repnz
not
xor
loope
xor
dec
push
jb
and
shr
add
leave
in
inc
shr
and
add
and
and
test
cmp
dec
jge
or
adc
or
les
and
add
cwtl
mov
clc
orl
je
inc
call
and
or
int3
pop
inc
subl
or
call
clc
incb
sbb
std
or
jmp
inc
and
mov
and
fdivr
dec
and
jecxz
sbb
add
or
cmpsb
mov
and
imul
loopne
xor
adc
mov
jge
aaa
jge
je
mov
loope
flds
and
pop
adc
pusha
daa
movsb
mov
loope
pop
sub
xor
sub
xchg
add
adc
fnstsw
pusha
pusha
fldl
cmp
or
insl
es
mov
inc
testb
stos
inc
rclb
or
add
add
test
je
cli
xor
mov
loop
xor
xchg
sub
mov
clc
popf
add
sub
xor
pop
sbb
and
push
mov
testl
out
insb
sbbb
imul
lods
es
push
and
or
outsl
inc
mov
flds
fstps
jmp
fisttpll
scas
pop
fstpl
xchg
adc
mov
loope
orb
push
hlt
adc
jbe
fsubs
pop
sub
mov
push
add
cmp
and
push
xor
andb
test
call
or
sbb
pop
dec
push
dec
cli
sbb
aaa
sbb
out
stos
pop
add
lock
dec
jmp
sub
pop
jbe
pop
sub
jmp
sub
push
outsb
dec
jae
or
psubusw
push
shrb
into
xor
push
rclb
xor
scas
xor
call
mov
jnp
inc
and
adc
test
pop
in
aas
or
stc
pop
call
or
or
mov
xchg
add
xchg
or
or
clc
add
repnz
push
jmp
dec
mov
fwait
clc
mov
in
cs
orl
loopne
ss
jle
push
or
jmp
pop
cs
icebp
daa
movsb
push
addl
lcall
data16
mov
daa
push
push
sbb
mov
sbb
aam
adc
jg
aaa
int3
dec
cmpsl
jns
and
cmp
lret
mov
jmp
adc
repnz
inc
lods
dec
and
fs
or
bound
sarb
mov
cwtl
sub
push
mov
fs
sbb
mov
pop
add
mov
adc
sbb
sbb
pop
hlt
dec
hlt
pop
jmp
and
pop
or
pushf
sub
stos
and
sbb
or
add
out
negb
pop
fstpl
lahf
mov
xor
fsubrp
fwait
jno
iretw
jp
leave
dec
inc
and
ficoms
orl
pop
push
xor
or
adc
or
scas
insb
ret
in
xchg
push
add
cmp
mov
mov
and
and
lock
add
sub
add
add
and
rcrb
lock
push
mov
sbb
pusha
add
adc
mov
outsb
nop
inc
jp
out
int3
mov
sbb
out
and
adc
and
jl
push
jnp
rorl
dec
add
cmp
cltd
cmp
and
jo
mov
loopne
jecxz
into
mov
add
sbb
dec
leave
daa
notl
mov
pop
xor
sbb
add
push
fcmovbe
orl
or
mov
mov
lock
or
sbb
adc
insb
add
decb
mov
add
fsubs
into
pop
out
mov
jmp
popf
mov
in
sbb
test
and
sub
enter
cli
push
dec
out
fld
fucomp
pop
flds
pop
out
mov
cmp
out
xchg
mov
test
pop
and
mov
icebp
das
fstps
loope
mov
or
or
lcall
push
or
push
pop
aas
adc
push
mov
push
cmc
in
add
or
push
xlat
mov
sar
sbb
sub
push
push
push
test
pop
push
inc
push
pop
dec
ljmp
adc
fnstsw
movswl
lret
sbb
loop
inc
loopne
and
mov
int
sub
rorb
data16
into
das
or
insl
or
push
mov
mov
xchg
xchg
or
sub
or
aam
test
fsubs
ret
ja
fwait
sbb
adc
ret
clc
repnz
sbb
movsl
shrl
leave
mov
or
cmp
jmp
push
lret
dec
sbb
xorb
mov
ss
mov
cmc
test
mov
and
jb
xchg
andl
cmp
in
xchg
out
jmp
and
insl
rolb
xor
rclb
xlat
loop
mov
mov
sbb
or
jg
fisttpl
loopne,pn
fs
jne
push
lock
jl
pop
and
ss
push
enter
or
mov
es
lds
test
sub
mov
pushf
add
pop
xor
cmp
push
lods
fsts
adc
outsl
pop
xor
jo
or
js
imul
push
push
nop
lret
je
mov
inc
lea
cltd
xor
scas
add
cmp
imul
jo
rcr
xor
test
adcb
adc
sbb
or
or
out
or
or
add
loope
push
or
shlb
int
add
mov
pop
std
push
and
test
xchg
cmc
push
test
cmpsb
dec
or
leave
dec
imul
dec
push
or
mov
add
aas
inc
xchg
dec
inc
push
mov
cmp
negb
pop
test
jbe
pop
rcr
ret
mov
in
call
stos
stos
jp
pop
pop
lea
bound
in
jge
adc
cmp
xor
pop
add
push
adcl
scas
ret
dec
or
sub
je
push
pop
sub
inc
shll
jecxz
rolb
jmp
test
call
loop
rolb
cmpl
inc
dec
dec
pop
repz
mov
pop
pop
and
mov
out
test
dec
or
inc
adc
iret
ds
cmc
mov
lea
cmp
cli
es
xor
jb
cmp
sbb
sub
adc
adc
aam
loopne
and
jae
stc
push
add
sahf
jns
adc
add
cs
inc
xchg
and
mov
mov
add
or
mov
je
inc
mov
rcl
mov
or
test
inc
daa
xchg
mov
push
or
movsl
cmp
mov
xchg
cmp
cmp
lret
test
sub
mov
mov
and
cwtl
cmp
push
ds
push
or
or
fwait
scas
and
aam
out
or
test
sarb
ret
inc
adc
leave
adc
cmp
mov
fs
incl
or
xor
in
lea
push
rolb
lds
inc
lods
sbb
nop
mov
dec
sub
insb
dec
xor
or
inc
rcrl
dec
xor
ljmp
mov
scas
mov
pop
pop
push
push
jb
rcrb
test
push
incb
pop
sub
xor
xor
cmp
and
push
xlat
push
push
push
cmp
sub
mov
mov
cmp
movsb
pop
inc
and
jecxz
cmp
daa
test
jecxz
arpl
and
mov
arpl
push
sub
jnp
xchg
mov
andl
stos
dec
into
out
mov
jl
stos
iret
and
cmp
and
mov
adc
jge
and
add
xchg
mov
shl
test
xor
pusha
pushf
push
dec
or
fiaddl
xchg
or
mov
cwtl
cmp
sahf
dec
stos
dec
inc
push
lret
or
or
jne
and
addb
cs
push
mov
push
dec
push
sub
mov
mov
jne
inc
cs
cs
and
dec
dec
adc
pop
nop
sub
daa
dec
push
pop
adc
and
out
or
outsb
adc
inc
lods
mov
or
xchg
mov
adc
or
pop
jne
cmp
les
push
jb
rcl
fwait
mov
jbe
inc
mov
mov
test
adc
or
repz
inc
rcl
popa
xchg
out
mov
shlb
mov
xchg
xchg
adc
inc
mov
cs
or
ss
cmp
je
or
dec
loope
xor
mov
dec
add
mov
add
sbb
sbb
add
or
mov
lods
inc
lock
movsb
int
call
pushf
lret
adc
and
aaa
sub
adc
pop
xorl
sub
jmp
xor
rorl
adc
xchg
xor
xchg
or
out
cmp
notl
bound
shlb
cmpb
add
pop
sbb
mov
sbbl
test
push
stos
je
imul
adc
or
add
and
cmp
xchg
or
push
pop
sbb
popa
cmp
rorb
decb
js
add
mov
popf
leave
push
jle
and
aas
sub
push
mov
jae
and
push
cld
mov
adc
or
sbb
cmp
add
add
lods
mov
shll
xor
jmp
sub
add
and
aad
insb
add
je
push
mov
inc
inc
test
das
mov
dec
jns
neg
movb
fs
cltd
push
rolb
fwait
mov
or
add
add
and
rolb
adc
nop
sbb
mov
mov
rorb
push
push
jecxz
in
mov
jo
xchg
xor
dec
or
mov
add
inc
inc
jp
sbb
pusha
inc
iret
xchg
push
movsl
and
icebp
lcall
lock
jge
pop
add
adc
adc
cmp
xchg
movsb
push
push
adc
pop
js
cmp
xor
pop
push
adc
inc
imul
loopne
or
sbb
push
jmp
xorb
insb
dec
out
pop
mov
xchg
and
push
fadd
mov
cmpsl
lds
jl
cmp
icebp
nop
stos
inc
jge
adc
and
xchg
lret
sarl
add
mov
fsubr
adc
push
adc
push
mov
and
adc
dec
jl
mov
or
jne
jmp
pop
popa
lock
inc
popa
sub
pop
ss
xor
incl
or
enter
add
adc
xor
dec
mov
xor
test
add
dec
and
add
mov
mov
inc
in
push
js
sub
ret
scas
dec
and
add
insb
movb
fbld
mov
mull
xchg
cmp
neg
sbb
mov
stos
rolb
jmp
ret
fs
jne
mov
jo
bound
xor
xor
sub
or
cmc
add
pop
and
call
fnstcw
xor
mov
jb
stos
sub
add
pmaxub
add
add
mov
or
sti
push
hlt
nop
push
lcall
dec
sbb
and
sub
sbb
cmp
mov
rol
fadds
or
stos
pusha
inc
xor
ret
fdivr
cmp
pop
icebp
xchg
cli
fs
cld
add
hlt
shrd
sbb
push
daa
xor
xchg
inc
scas
xor
sbb
clc
cwtl
mov
add
data16
cli
ss
inc
and
xor
out
adc
cmp
or
int
cmp
jo
mov
adc
push
ljmp
test
inc
fcmovb
lock
sbb
cmp
in
and
popf
aam
sub
pop
sbb
js
jg
popa
mov
xor
jmp
mov
sub
mov
sbb
das
cmp
sarl
jge
pop
clc
push
shll
xchg
inc
insb
inc
rolb
push
in
lock
mov
push
jg
mov
jnp
cwtl
dec
dec
inc
dec
sbb
jae
pop
or
or
xorl
cmp
shrl
cmp
sahf
sub
lods
ja
push
xor
es
cmp
inc
sub
add
pushf
dec
lods
sbb
movw
lcall
push
jle
sbb
push
sbb
mov
inc
jnp
push
jmp
lock
sahf
fwait
mov
sbb
adc
mov
call
pop
sahf
mov
ret
aaa
push
mov
xor
pop
inc
mov
pop
mov
push
in
add
adc
lock
je
aad
add
or
jbe
inc
sbb
rcrl
xor
add
rep
insb
cmp
inc
nop
xor
sbbb
jne
mov
mov
nop
cmp
mov
xchg
xor
frstor
stc
fwait
sbb
enter
push
lock
push
push
scas
sbb
out
dec
out
sbb
add
loopne
jge
inc
or
pop
inc
mov
mov
push
add
sub
add
popf
mov
sbb
mov
ds
andb
fnstenv
outsb
outsb
mov
pop
or
pop
data16
in
add
imul
lds
aaa
inc
popa
je
inc
je
dec
add
add
aaa
mov
xor
xor
pop
and
ret
sub
pop
mov
sbb
push
mov
clc
inc
hlt
jb
push
popa
imul
das
orl
xorl
mov
js
lock
push
cmp
adc
je
dec
ret
lock
inc
test
imul
loopne
add
add
daa
push
adc
push
push
cmpb
jne
xor
mov
jp
testl
mov
xchg
shl
shll
in
cmp
dec
jmp
or
jbe
or
inc
popa
sub
popf
jle
fldl
cli
jge
mov
add
aaa
mov
je
mov
hlt
ja
cmp
pusha
mov
sub
sub
test
icebp
inc
xlat
aam
jge
or
push
test
jmp
cmc
cmp
add
add
mov
mov
movb
pop
pop
inc
ljmp
xor
push
cld
jmp
mov
sub
and
and
add
nop
pop
dec
jl
push
push
adc
dec
std
and
mov
inc
ljmp
inc
adc
push
rorb
int
je
sub
mov
movsb
push
sub
push
mov
inc
mov
adc
cltd
xor
jmp
insl
fwait
loopne
lds
sub
cmpl
pop
clc
jo
push
fidivs
or
push
sbb
dec
push
mov
adc
or
push
imul
pop
add
movsb
push
out
rclb
jo
cld
add
or
in
fiaddl
jb
pop
inc
cmc
andl
fildll
add
lret
cltd
je
dec
je
dec
push
push
jmp
or
jmp
or
sub
add
test
mov
insl
orl
pop
adc
push
xchg
out
repz
pop
ret
enter
rcl
js
adc
bts
jecxz
data16
int3
or
add
mov
sub
sub
lods
sarb
iret
xor
loopne
sbb
sbb
adc
aas
cmp
ljmp
mov
movsl
cmpsb
sahf
mov
addl
mov
or
push
fldt
lahf
jbe
or
cld
xchg
push
sbb
gs
rclb
jnp
push
nop
mov
fidivl
into
sub
and
inc
imul
and
inc
mov
movsb
add
or
pop
cmpl
adcb
pop
enter
or
pop
dec
ret
rcr
ljmp
xchg
push
call
in
mov
rorl
or
sbb
lret
aam
adc
out
in
clc
shr
add
or
mov
imul
pop
or
mov
push
push
adc
test
sub
xchg
mov
lret
add
mulb
or
add
pop
mov
pop
add
popf
add
pop
cmp
out
mov
adc
inc
jbe
add
jl
or
rorb
aaa
cmp
or
dec
aaa
and
pop
xchg
push
mov
or
sti
and
push
and
cmp
mov
mov
add
add
xor
and
into
clc
cmpb
lea
roll
mov
push
es
sti
sub
lock
daa
and
push
or
adc
mov
cmpsb
and
xchg
or
xor
add
or
rcrb
mov
push
and
loope
pusha
insb
daa
loop
loop
sub
mov
jle
cli
jne
mov
sbb
inc
roll
add
cmpsb
or
xchg
or
mov
jp
mov
shll
data16
and
jbe
les
jb
pop
xchg
dec
pop
mov
js
xor
flds
imul
leave
pop
inc
cmpsb
sub
sbb
push
inc
clc
out
loope
fwait
sub
loop
dec
rorl
xor
test
push
xor
add
ret
cmc
xchg
inc
push
addl
lret
sub
mov
testb
push
jo
mov
push
ret
adc
dec
daa
xor
push
cmpb
inc
add
cmp
or
or
mov
jo
outsb
cmp
ja
lods
sub
lds
popa
jmp
add
loope
mov
popa
mov
sub
xchg
mov
pop
aaa
arpl
daa
dec
mov
pushf
clc
or
push
outsl
inc
add
sub
sbb
push
leave
inc
xor
xorb
sbb
stos
sbb
mov
test
clc
sbb
inc
aas
shrb
mov
or
add
aam
sbb
add
pop
je
add
bound
ret
adc
add
add
bound
push
out
adc
leave
mov
pop
inc
jno
loopne
sub
push
add
sub
std
cmp
and
jmp
push
jbe
fcomps
add
call
ss
rcrl
nop
into
xor
and
xor
mov
inc
rorb
sub
cmp
push
pop
sbb
in
mov
cmp
jle
inc
rolb
jmp
dec
loope
sbb
jp
push
adc
dec
cmpsb
sbb
mov
es
mov
pop
lret
push
jmp
adc
cmp
cmpb
je
insl
pop
addb
xor
inc
aam
push
adc
pusha
push
fstl
and
push
jns
cmp
in
jmp
add
push
lea
push
imul
xchg
fidivl
orb
and
aaa
jne
cmpsb
cmp
hlt
cmp
sub
jmp
jl
popa
or
lret
gs
not
inc
adc
inc
dec
add
iret
add
jbe
rclb
rorb
add
cltd
or
cmc
inc
mov
loop
clc
out
roll
leave
add
or
je
mov
iret
or
or
movsb
sub
pop
fucom
mov
adc
pop
bound
sub
scas
mov
rolb
jmp
sti
pop
add
movsl
movsl
fsub
pushf
inc
add
or
add
loopne
pop
sbb
and
adc
or
loopne
lea
cwtl
add
push
rclb
and
adc
add
push
neg
neg
sbb
sub
addr16
notl
sbb
addl
xorl
orl
sbb
adc
adc
and
shlb
icebp
sbb
stos
divb
xor
sbb
and
mov
clc
push
add
dec
jns
or
cmp
dec
jne
pop
pop
pop
insl
add
xor
adc
icebp
mov
shr
sbb
dec
and
shr
xorb
sub
adc
push
idiv
and
maskmovq
sbb
mov
je
cwtl
arpl
js
rolb
push
and
sub
sbb
mov
adc
dec
or
add
mov
lods
jae
popf
imul
enter
das
add
mov
hlt
or
aad
inc
cmp
jbe
test
adc
aas
xor
xor
movsl
adc
and
inc
pop
shlb
or
push
mov
dec
adc
movsb
xor
add
mov
add
cmp
or
orb
decl
pushf
movl
pop
testl
mov
insl
test
sub
or
xchg
lods
mov
mov
cmp
and
inc
stos
and
dec
add
cmpsb
jnp
cmp
jns
hlt
add
scas
push
out
cld
mov
enter
pop
ljmp
lock
cmp
sub
enter
cmp
mov
ret
push
inc
mov
add
adc
push
dec
mov
mov
sahf
jge
mov
mov
dec
mov
or
mov
je
adc
iret
sti
jg
jl
out
push
cmp
ja
add
cmp
adc
mov
xchg
hlt
cmp
jne
shll
leave
adc
call
sbb
add
jl
pop
pop
xchg
sbb
je
rolb
adc
adc
movsb
mov
jb
dec
add
push
and
push
mov
pop
test
push
push
pop
fdivr
aas
cs
push
push
icebp
incb
movb
jmp
or
lea
test
inc
sbb
test
pop
or
iret
cmp
loopne
and
mov
pop
ret
pusha
movw
in
add
xor
add
mov
xchg
movsb
pop
xchg
xor
pop
mov
rcl
adc
jp
add
ret
push
mov
filds
push
mov
pop
stc
inc
jb
mov
xlat
mov
andb
sbb
pushf
nop
add
mov
add
sbb
pushf
rcrb
cmp
push
aas
js
imul
adc
shr
shr
ljmp
rorb
or
lcall
movswl
ss
dec
xchg
fildl
es
ljmp
mov
cmp
sbb
inc
call
inc
inc
xorl
push
pop
pop
insb
adc
sti
add
dec
jae
and
cwtl
lcall
push
adcl
mov
jb
jl
push
lcall
jle
repnz
lahf
pushf
push
inc
jae
loopne
adc
mov
mov
mov
and
and
lea
inc
jmp
andl
dec
stos
sahf
cmpb
pop
cmp
dec
les
pop
pop
leave
loopne
dec
and
in
inc
call
std
imul
jle
fnstenv
push
mov
jne
lea
pop
in
add
xor
adc
or
inc
mov
sbb
icebp
push
lea
pushf
add
les
xor
dec
or
dec
nop
movsb
dec
subl
lods
shll
inc
insl
pusha
mov
shll
data16
xchg
mov
mov
add
imul
fiaddl
and
rorb
cld
jae
jle
cmp
out
adc
mov
shll
mov
add
shr
or
pop
fstps
in
cmp
rorb
sarl
push
lret
cmp
movsl
jp
inc
mov
loope
outsl
inc
pop
inc
mov
jle
cwtl
shrl
loope
aas
lods
sti
pop
shr
or
mov
dec
mov
int3
imul
lock
dec
and
jnp
repnz
jns
testb
dec
cli
cli
inc
cli
sbb
sub
int
sbb
inc
jp
sub
and
cmp
test
bound
adc
outsb
xchg
lahf
call
mov
dec
jo
mov
push
fidivl
fldenv
enter
fsubs
jecxz
mov
insb
cs
inc
mov
divb
data16
inc
mov
xor
jb
fmuls
add
ja
bts
inc
repnz
pushw
je
dec
pop
sbb
loop
out
jge
mov
out
enter
adc
jb
aad
jne
inc
push
mov
dec
in
aam
sub
fdivs
mov
or
push
loope
shlb
add
mov
sub
inc
mov
lcall
test
mov
or
ret
adc
cmpsb
xor
add
or
mov
movsb
repnz
sbb
fcmovu
mov
mov
insl
test
shll
add
cli
mov
hlt
jg
add
xchg
add
idiv
adc
xchg
adc
call
into
or
adc
pop
push
sbb
jge
or
orb
jge
inc
pop
and
inc
lock
or
popl
movsb
jmp
add
lret
cmpsl
jne
fldt
nop
in
nop
sbb
outsl
mov
mov
pusha
add
cwtl
in
scas
push
sbb
sub
mov
sbb
stos
jg
movb
dec
xchg
cmp
jle
push
pop
outsb
call
xchg
sub
push
or
mov
cmp
in
pop
daa
xchg
cli
pop
inc
imul
enter
cli
fcoms
xor
fiadds
idivl
call
mov
call
sahf
in
push
jecxz
fsubs
pop
add
and
mov
push
cs
mov
and
movsl
pop
dec
sub
out
pop
sti
ror
push
add
ljmp
ds
jge
or
jo
movsb
cmp
mov
cmpsl
or
ljmp
mov
lods
add
enter
sahf
mov
mov
add
xor
sarb
lret
call
and
testb
or
lock
inc
ljmp
jmp
hlt
mov
orb
sub
cmp
jge
pop
lock
incb
bound
movb
dec
cmp
mov
inc
dec
add
add
fadds
adc
mov
call
ret
jp
jne
dec
push
add
cmp
int
jo
shr
popf
in
jg
aad
jbe
mov
lret
or
xor
mov
jp
ret
adc
movsl
mov
add
add
cmp
test
mov
xchg
lret
mov
notl
shrb
push
push
cmc
adcb
or
lods
mov
repz
cli
popf
xchg
add
pop
jne
or
mov
pop
scas
je,pt
aam
cmp
ret
mov
jnp
mov
ret
or
sub
add
add
ss
jae
test
ficomps
mov
mov
iret
xor
pusha
inc
and
pop
lods
or
sub
and
pop
pop
aam
fxch
je
pop
cmpps
cmp
sahf
cwtl
inc
add
inc
ret
or
cmpsl
sub
cmpsb
adc
rolb
fs
push
imul
add
cmpl
lcall
lret
push
or
je
jle
sbb
rol
push
je
lret
pop
popf
jmp
pop
or
pop
sub
add
adc
and
and
mov
jl
push
xadd
pop
pusha
aaa
loope
out
and
push
or
pop
les
test
add
push
les
lahf
sub
mov
addb
je
jnp
or
or
adcl
scas
cmpl
out
or
mov
add
dec
sub
mov
push
es
mov
adc
or
loopne
add
fiaddl
test
cltd
into
or
add
sbb
add
add
mov
xchg
into
mov
mov
sbb
and
sbb
inc
dec
dec
sahf
pop
jg
into
into
into
xorb
push
mov
fisubrs
sarb
push
pop
nop
ss
out
icebp
pop
sahf
pop
mov
aam
lcall
or
sbb
stos
push
sbb
inc
clc
add
push
les
sbb
leave
lahf
jns
cmpsl
inc
pop
xchg
out
adc
test
rcrl
movsl
movsb
fwait
mov
stos
sbb
into
mov
and
cltd
ret
inc
and
shll
sbb
sub
jle
sub
mov
xchg
fwait
pushf
push
lret
jae
aad
ljmp
add
pop
mov
add
jge
scas
add
stc
adc
fstps
jo
mov
mov
mov
mov
add
push
mov
sub
flds
lock
scas
or
rcrl
pop
fcom
fsub
jl
add
int3
push
test
rolb
jns
je
movsl
xorl
cmp
jo
xchg
sbb
loopne
jle
sbb
or
jno
dec
adc
xor
je
mov
icebp
jbe
sub
loope
cmp
sub
out
je
mov
push
rorl
inc
cld
scas
hlt
mov
cmp
jb
cmp
jbe
dec
cmpl
in
mov
pushf
xchg
mov
or
aaa
add
loopne
andl
xor
push
or
aam
sbb
jle
out
addl
push
les
and
gs
test
daa
push
add
push
mov
dec
add
cmp
js
add
and
pushl
push
fistl
fists
xor
mov
pop
fnsave
pop
and
shrb
xor
or
shrl
add
adcb
rclb
inc
popf
inc
popa
adcb
test
rcll
add
and
dec
cmpsb
push
xor
sbb
ret
push
ljmp
mov
jo
cs
push
inc
push
aaa
sbb
dec
scas
addb
mov
xor
or
pop
mov
or
cmp
add
xorb
popf
movsl
and
sar
xchg
adc
push
cmpsl
pop
jmp
mov
xor
leave
pop
push
inc
bound
mov
notl
add
movsl
and
lock
jl
inc
or
and
ss
stos
mov
loope
aaa
ljmp
lods
xchg
push
pop
mov
or
add
call
xor
push
ret
les
mov
dec
push
outsl
mov
xorl
inc
pop
data16
pop
sbb
pusha
xor
mov
mov
test
mov
mov
mov
push
cmp
imul
in
adc
mov
sti
in
lret
xor
test
sbb
in
and
fadd
add
movsl
or
call
shlb
inc
sbb
push
mov
push
fisubrs
enter
adc
sub
ret
js
pop
pop
add
xor
mov
push
outsl
inc
add
mov
mov
cmpsb
loopne
jmp
dec
fs
push
or
push
test
or
cmp
or
js
pushl
xchg
mov
loopne
push
sbb
dec
sbb
xchg
aam
leave
inc
insl
push
add
pop
iret
std
push
xor
push
in
addb
add
inc
jne
loop
ss
rolb
sbb
hlt
ljmp
push
pcmpeqb
or
jg
scas
sbb
insb
push
push
ds
pop
jnp
btc
cmp
jbe
inc
mov
push
les
pop
sub
pop
and
mov
aas
test
add
inc
fs
inc
add
and
pop
mov
nopl
cmpsb
add
push
or
cwtl
inc
jecxz
push
fcomps
das
lods
mov
or
ret
mov
mov
cld
add
adc
pop
test
pop
xor
push
sub
sbb
in
mov
cs
aas
rcll
push
and
pusha
imul
or
movsb
push
jae
ret
mov
add
xchg
movsl
shlb
enter
movsb
adc
xlat
sub
sbb
mov
cs
jl
mov
push
mov
icebp
pop
orb
pop
pop
sbb
dec
add
bound
pop
adc
dec
push
sar
bound
push
sbb
mov
jne
pop
xor
dec
repnz
pop
sub
adc
push
rcll
stos
inc
sbb
add
mov
cmpsl
aas
rcrb
mov
inc
fadd
dec
sahf
xor
in
fsts
push
movsb
jecxz
cmp
mov
lret
xor
out
xchg
movsl
add
mov
mov
stc
gs
jb
push
dec
push
pushf
ret
cltd
pop
nop
outsb
jmp
lea
not
inc
cmp
int3
jmp
push
mov
adc
mov
cmpsl
pop
das
or
insl
cld
mov
loopne
dec
ja
sbb
xchg
loopne
fdivrs
and
sub
in
push
les
adc
dec
cmp
addl
outsb
mov
insb
add
les
cmp
cmp
clc
imul
adc
add
pushf
or
imul
and
dec
or
into
inc
xchg
and
xor
pop
mov
adc
adc
adc
and
test
xor
adc
jae
xabort
push
es
lods
mov
cs
call
xor
push
movsl
add
lods
xchg
rolb
xor
clc
pop
ss
loope
xor
movsl
and
hlt
movsb
incl
add
rol
push
sub
pop
sub
aam
add
mov
mov
shlb
dec
fisttps
xor
std
data16
xor
inc
and
inc
loopne
and
push
lret
mov
lods
fstpl
or
ret
imul
inc
pop
mov
popa
xchg
xchg
xor
out
and
js
xchg
bound
fsubrs
sbb
imul
dec
sub
or
inc
ja
mov
jmp
jb
jp
das
mov
imul
add
jb,pn
cs
jge
cmp
sub
jg
sub
jp
inc
mov
inc
clc
push
sbb
cmp
ja
pusha
or
mov
test
push
aaa
pop
inc
lds
xlat
cwtl
pushf
xchg
pop
inc
lods
add
mov
lret
push
inc
cmp
call
or
repnz
fidivrs
test
jg
adc
lock
insl
or
lcall
roll
inc
imul
adc
xlat
shlb
or
rol
movsl
into
lock
fadds
in
and
sbb
mov
icebp
jno
inc
add
and
cmp
outsb
dec
sub
cmp
and
add
dec
jb
rcll
sahf
orb
inc
clc
adc
push
push
aam
test
sub
push
lods
or
in
add
pop
repnz
add
or
test
or
xlat
xchg
rcrl
aaa
sub
jl
inc
inc
loopne
pop
cmp
cmp
pop
jns
mov
lret
int3
push
and
inc
bound
mov
or
cmpl
and
or
ljmp
cmp
icebp
call
mov
sarl
ja
dec
mov
push
add
jl
or
sti
mov
and
mov
in
sbb
icebp
flds
stc
and
jmp
pop
out
pop
mull
in
sahf
adc
pop
dec
or
mov
ret
inc
cmp
adc
or
test
or
jne
inc
sbb
adc
adc
mov
ret
add
or
inc
xor
dec
sbb
fmul
and
push
cmp
test
adc
aad
sbb
and
cmp
dec
cli
mov
leave
or
sub
mov
adc
outsb
jl
movsl
pop
jo
je
push
or
add
add
test
mov
add
sbb
aas
adc
sbb
cmp
jle
push
xchg
or
add
sub
test
sub
das
clc
or
ficompl
push
push
add
mov
jb
and
lahf
and
dec
dec
imul
or
ljmp
inc
adc
pop
jl
in
mov
dec
subl
push
mov
mov
add
xchg
loopne
js
test
adc
loope
lock
dec
cmpsb
lcall
and
push
mov
scas
adc
adc
pop
add
cmp
pop
outsb
lret
adc
mov
mov
loope
out
jmp
aaa
or
out
dec
push
jge,pt
push
lods
js
push
adc
jl
push
std
fildll
cltd
cld
adc
mov
push
mov
filds
mov
adc
cmp
jae
les
or
test
jle
cmp
jg
dec
rclb
dec
sarb
mov
out
adc
mov
call
add
movsb
or
fadds
cmpsb
jmp
and
inc
outsb
fcomps
pop
mov
jb
out
rcl
mov
ds
cmpl
test
jae
push
pop
cmp
and
lods
lcall
sbb
lods
rorl
andl
add
addr16
scas
inc
xlat
inc
in
or
outsl
inc
mov
idivb
push
or
dec
or
test
pusha
push
in
add
addb
mov
inc
js
in
mov
jb
repnz
or
and
cmp
dec
or
loope
push
sbb
xchg
outsb
imul
cmp
orb
pop
je
cmp
stos
cltd
aam
add
and
dec
rolb
ss
jl
jmp
cmp
add
fisubl
je
xchg
je
mov
rcrl
mov
jmp
outsl
sub
xor
sbb
lods
xchg
add
inc
jp
xchg
imul
roll
notl
ret
and
inc
cmp
repnz
shl
sbb
pop
xor
cmp
xchg
cmp
push
xor
cld
lahf
sbb
pop
dec
jne
push
idivl
mov
jmp
mov
xor
or
sub
je
or
push
subl
mov
push
sub
cmp
mov
push
icebp
dec
ficoms
rclb
cli
inc
loop
add
mov
arpl
mov
add
add
clc
mov
jns
lea
stos
add
sub
sbb
jne
mov
or
inc
movsb
inc
cltd
xchg
in
inc
mov
pop
rolb
dec
push
ss
mov
lock
jb
arpl
cld
push
xchg
add
push
lea
lahf
xorb
nop
inc
mov
xor
hlt
imul
cmpb
sub
add
and
frstor
xchg
pop
out
insb
out
into
mov
ficoml
mov
lret
pop
mov
pop
sbb
pop
push
aaa
jb
fistpll
adc
or
nop
je
jl
enter
mov
mov
ret
xlat
add
mov
inc
mov
xor
gs
adc
or
add
xchg
push
sbb
adc
ror
sbb
jecxz
rorl
stc
sbb
std
js
mov
hlt
jne
adc
fildl
or
push
gs
mov
mov
and
ficoms
fs
mov
sbb
clc
jle
test
les
movsl
xor
inc
add
mov
jne
les
jb
scas
pop
sahf
adc
mov
or
cmp
loop
sub
or
jne
jg
add
cmp
mov
cltd
gs
xchg
rcll
lock
pop
push
inc
lock
mov
adc
push
cld
sub
fldt
lea
add
xor
mov
mov
and
mov
faddl
jbe
mov
cmp
fstl
orl
jg
jmp
adc
mov
and
movsb
fadd
pop
je
inc
and
and
jl
cmp
rcr
adc
cmp
sbb
mov
or
popa
sbb
call
cmp
and
pushf
sub
or
dec
sub
mov
pop
scas
or
adc
and
pop
cmp
bound
and
insb
ret
data16
test
mov
test
jbe
inc
lret
sbb
stos
push
stc
pop
sti
insb
mov
and
test
jne
mov
xchg
and
jo
pusha
mov
mov
adc
xlat
je
cmp
adc
pop
add
xchg
mov
testb
push
sbb
shl
jl
outsb
push
mov
sub
ss
sub
jnp
cwtl
and
jb
je
cmp
std
inc
aad
jle
xor
cmp
jbe
lret
js
jo
push
push
or
lock
xor
xor
jmp
das
jecxz
and
insl
mov
jp
add
mov
or
pop
inc
nop
push
push
test
mov
pop
mov
pop
es
jmp
pop
pop
xchg
pop
es
lods
pop
add
pop
inc
insb
sub
aam
std
orb
roll
ret
xor
imul
inc
add
insl
and
popf
hlt
cmc
or
sub
xlat
sbb
gs
push
add
xchg
jne
adc
xchg
mov
mov
add
mov
add
add
add
mov
jns
test
pop
enter
dec
fldz
mov
xor
push
or
and
and
sbb
sub
sub
sub
and
xor
adc
and
pop
je
pop
and
sbb
fld
fldcw
mov
fildll
jge
cmp
jmp
es
mov
mov
xor
mov
int3
mov
or
sub
das
fcomp
push
les
js
test
in
mov
sbb
pushf
pop
inc
jg
bound
aad
in
cmp
dec
adc
mov
or
cmp
or
std
shufps
mov
and
adc
mov
xchg
or
test
cld
or
or
jmp
mov
ljmp
insb
mov
test
inc
mov
dec
pop
xchg
mov
enter
and
adc
pop
sub
xor
sub
nop
or
or
mov
pop
cmpsl
add
dec
lods
addr16
nop
sub
mov
in
lock
fwait
fs
in
lock
cld
mov
push
ss
nop
arpl
int3
pop
or
fs
cld
push
test
push
in
pop
mov
mov
add
xor
or
mov
jl
sub
movb
xchg
push
cmp
clc
xchg
sbb
dec
dec
roll
jns
fcmovb
dec
shll
nop
les
arpl
add
inc
cmpsl
fcoms
jl
jb
adc
jnp
popa
in
or
enter
in
es
push
cmp
cmpsl
and
mov
into
or
lock
ss
add
jae
adc
or
and
stos
mov
dec
mov
repnz
xchg
outsl
imul
dec
in
dec
insb
pop
mov
and
xchg
pusha
adc
pop
pop
mov
mov
dec
dec
and
xchg
inc
sbb
pop
sbb
mov
sbb
inc
sbb
and
fmull
dec
jle
cmp
mov
je
sbb
enter
pop
jo
cmp
jl
push
js
xlat
and
pushf
fdivl
sarb
movsl
test
int3
and
mov
pop
loopne
out
mov
mov
call
enter
adc
les
xchg
jbe
test
imul
adc
xchg
adc
in
unpcklps
sbb
mov
mov
sbb
std
push
es
in
jno
pusha
fs
insb
jo
pusha
nop
dec
es
add
ds
call
adc
js
outsb
add
outsl
cltd
sub
test
dec
mov
sub
push
pusha
ja
fwait
or
sbb
imul
lea
or
jl
roll
dec
sbb
adc
and
popa
push
dec
and
mov
push
xlat
in
sti
cmpsb
scas
and
dec
jns
lds
shll
stos
cmp
in
aad
jo
lea
mov
cmp
inc
test
mov
into
nop
jno
js
mov
pop
in
push
jbe
scas
xor
jp
push
push
fbstp
stos
fcompl
popa
js
xor
sub
mov
cmp
mov
adc
iret
adc
add
insb
sbb
iret
jl
xor
inc
ret
cs
mov
insb
cwtl
repz
mov
enter
aam
and
xor
nop
adc
xchg
adc
test
lret
mov
testb
ret
push
xchg
popf
lock
xor
lock
test
inc
cmc
hlt
and
adc
fists
lea
add
adc
sub
push
loope
jns
sbb
test
lds
in
sbb
mov
insl
in
jnp
cmpl
sbbl
inc
sbbb
test
pop
cwtl
xchg
loopne
clc
enter
lea
subl
jne
pop
mov
sbb
enter
imul
sbb
mov
in
loopne
sbbl
call
ss
movsl
cmp
sub
call
xchg
or
xor
nop
mov
les
ret
sbb
jecxz
prefetcht2
add
pop
loopne
push
dec
jmp
test
fisttps
pop
lea
adc
sbb
mov
andb
call
adc
adc
push
orl
dec
je
test
sub
push
rcr
mov
insl
rcll
stos
adc
inc
inc
mov
inc
dec
dec
adc
sbbl
add
mov
and
pop
xlat
jb
or
stos
aaa
ja
jno
bound
or
and
jmp
xorl
sub
and
sub
movsb
pop
add
push
inc
movsb
cmp
in
popa
xor
or
and
sub
sub
iret
mov
xchg
and
call
mov
mov
in
and
popa
aad
and
loop
imul
movsb
pusha
mov
fldenv
loope
in
fwait
ljmp
dec
xchg
or
jg
xor
sbb
fldcw
mov
je
cltd
sub
and
in
in
inc
pop
test
call
xchg
ret
or
pop
pop
andl
es
adc
loopne
adc
sbb
outsb
loopne
ljmp
popa
xchg
clc
aad
xchg
nop
xchg
movd
sbb
xor
imul
pushf
cmp
or
lods
loopne
or
sbb
or
sub
xor
xchg
or
loopne
sbb
fadd
pop
outsb
and
or
sti
movsb
sti
and
fs
push
aam
fmuls
cmp
rorb
test
bound
adc
insb
test
es
andb
mov
insb
daa
cmp
faddl
das
xchg
add
or
mov
mov
std
inc
push
test
sub
mov
or
jne
jns
cmp
dec
sub
in
or
cmp
nop
or
or
mov
or
xchg
dec
push
or
inc
call
and
xor
nop
les
dec
jae
mov
adc
mov
sbb
test
out
xchg
loope
add
sbb
sbb
insl
mov
add
adc
sub
inc
shll
xor
and
pushf
sbb
aaa
adc
xchg
push
ss
insl
push
sub
jns
imul
cmp
push
add
add
adcb
xor
popf
or
sub
test
int
mov
jnp
and
sub
mov
xor
and
dec
mov
ret
dec
add
sub
sbb
dec
sbb
arpl
iret
dec
sub
adc
adc
add
and
inc
or
cmp
sbb
repz
add
cmp
cltd
aam
and
push
pop
add
mov
dec
enter
cwtl
sbb
adc
adc
sub
jge
das
rcrb
dec
or
pop
mov
and
xor
psubsb
inc
jno
or
rorb
fsubs
adc
pop
sbb
mov
push
push
insl
sub
mov
mov
fwait
sub
inc
fnstcw
call
or
xlat
fcom
jne
fistps
das
ret
in
pminsw
adc
add
in
loopne
xor
add
mov
in
mov
pop
movsl
sub
movsb
addl
add
xchg
sbb
cltd
in
cltd
lock
or
xor
add
add
or
or
jne
pop
add
adc
fnstcw
push
push
cmp
or
leave
std
xor
sti
hlt
repz
push
clc
xor
push
jge
mov
jmp
cs
mov
pop
cs
aaa
inc
pop
andl
hlt
mov
fadd
push
xor
shlb
inc
adc
xor
push
ret
sub
jb
jo
push
xor
or
adc
arpl
pop
clc
mov
sbb
adc
cmp
stc
cld
jne
js
or
or
adc
cmp
sbb
fs
push
or
or
pusha
xor
add
popa
inc
int
xchg
xor
lock
pop
mov
in
cs
cwtl
and
cld
sbb
push
lea
lea
leave
lock
ss
and
out
adc
insb
jl
lahf
test
pop
adc
mov
cmp
pop
pmulhuw
mov
aaa
hlt
mov
xchg
pinsrw
sub
lahf
sbb
arpl
addl
shlb
pop
aam
enter
pop
pop
fistpll
xor
mov
mov
inc
cmpsl
jg
adc
xchg
js
mov
xor
inc
leave
mov
dec
shrl
dec
repnz
pop
mov
cmp
aad
jmp
mov
xlat
mov
mov
jae
in
aam
push
mov
cmp
sti
fsub
aam
stos
push
and
cmp
psrlq
jns
mov
or
cmp
iret
cmpsb
mov
lea
ja
imul
or
mov
adc
aam
sub
adc
aas
shrb
jecxz
addl
xchg
push
cltd
call
cmc
jns
orl
fwait
mov
leave
and
adc
inc
push
or
xor
pop
dec
inc
inc
adc
fcomps
mov
fisubrl
xchg
sub
sbb
jl
loope
xor
adc
test
imul
sbb
jne
bound
mov
lea
xchg
sbb
push
and
movsb
fdivr
add
dec
movsb
and
ret
adc
fnstcw
mov
and
mov
and
in
nop
arpl
call
or
stos
subl
int3
sub
push
add
adc
sub
lods
sub
mov
xchg
fs
cwtl
jmp
mov
int
dec
xchg
ret
inc
loope
cmp
sub
sbb
push
or
inc
inc
mov
sub
test
add
fwait
xor
inc
fsts
adc
shlb
xor
testl
bound
out
sub
xor
mov
ficoml
push
sub
pop
adc
and
or
sbb
inc
roll
sub
and
xchg
mov
jns
sub
fdivr
notb
cmp
sub
pop
xor
and
jb
or
inc
cwtl
mov
cmp
aam
test
dec
in
dec
cmc
bound
pop
jns
pop
mov
imul
dec
imul
mov
lods
mov
adc
rorl
jne
or
sub
pop
nop
inc
rol
and
push
call
inc
inc
pusha
sub
iret
jge
add
iret
loope
add
dec
enter
div
rorl
sub
and
push
inc
mov
orb
andl
test
cmc
fsubl
pop
adcl
xchg
ja
xchg
inc
lds
jl
cmc
popf
mov
mov
and
call
jb
cwtl
addb
insl
fsts
add
dec
add
inc
out
je
sbb
test
jo
xor
push
and
jno
inc
and
je
lahf
pusha
test
push
in
dec
imul
rclb
mov
stos
mov
enter
ret
test
lret
sub
stos
xchg
loopne
xchg
jnp
pop
je
call
inc
je
loopne
mov
mov
and
cld
dec
repz
les
cwtl
movsb
arpl
and
adc
or
enter
inc
adc
orb
test
lret
rorb
adc
fcom
or
mov
clc
pop
int3
repnz
repnz
not
push
xchg
add
adc
inc
in
cltd
add
xchg
sbb
shrb
aam
rolb
add
orb
cmp
lods
gs
add
or
enter
push
fcomp
in
or
lret
les
rcrb
push
cmp
cmp
divl
in
jne
outsl
add
pop
fcoms
mov
pop
sbb
dec
push
lock
or
xchg
aam
xor
push
push
enter
mov
adc
and
fs
aad
pop
pop
inc
rorl
jne
dec
leave
inc
js
shll
test
xchg
movsl
push
jne
adc
arpl
insb
mov
pop
aas
bound
bound
sbb
push
lods
dec
xchg
inc
stos
pop
jo
lock
cmp
in
xor
gs
or
push
jo
aam
bound
gs
loopne
adc
sbb
mov
in
add
int3
pop
mov
leave
mov
nop
inc
ficoms
clc
mov
sub
ret
or
inc
lea
ret
mov
orps
pushf
cwtl
or
loopne
push
test
popf
dec
push
imul
pushf
mov
push
scas
fwait
mov
lods
dec
and
and
inc
and
sbb
sbb
xchg
movl
push
or
icebp
rclb
ljmp
rolb
or
dec
fldt
pop
lret
xchg
mov
lcall
adc
mov
inc
mov
test
push
leave
test
js
not
inc
pop
fcoms
sbb
enter
sbb
gs
xor
test
or
or
fdivl
dec
aam
enter
pop
and
mov
push
cwtl
aam
nop
add
in
push
mov
lds
mov
and
nop
testb
push
sub
les
jne
jne
push
inc
adc
movsb
and
call
mov
fiadds
dec
int3
in
push
movsb
inc
subl
xor
xchg
stos
test
iret
faddl
adc
xchg
sbb
or
stc
les
fdivr
call
loopne,pn
push
iret
dec
xchg
push
or
ja
sbb
in
cmp
enter
jg
sbb
xorb
push
fs
dec
repnz
dec
cli
jo
cltd
movsb
test
adc
push
adc
aaa
and
xchg
dec
int3
sbb
pop
pop
orb
push
push
adc
fwait
xchg
push
xchg
pop
xor
add
sub
call
in
movsb
gs
mov
pop
push
mov
stos
push
jmp
and
pop
inc
mov
dec
adc
sub
jns
cs
pop
fwait
loopne
push
or
insl
loopne
mov
cmp
orl
enter
jb
mov
dec
arpl
pusha
movsb
lds
mov
insb
adc
fs
push
insl
pop
movsb
mov
sti
push
and
dec
cmp
dec
push
xor
cmp
dec
xor
and
and
and
cmp
pop
enter
xor
pop
add
xchg
jl
imul
out
in
sbb
xchg
shlb
test
pop
adc
xor
inc
enter
pop
hlt
and
movsb
mov
fcompl
and
sub
sti
inc
les
sub
sub
jl
and
or
pop
add
stos
xchg
pop
stos
rolb
sbb
aam
es
fwait
add
pop
mov
in
and
sub
test
ret
xor
std
in
xor
adc
pop
fwait
xchg
in
pusha
les
jge
loope
fwait
imul
lods
sbbl
pop
sub
cmp
xchg
mov
orl
movsb
enter
and
cmp
ret
and
mov
rolb
out
lea
mov
sbb
or
out
mov
and
ret
cmp
cmp
lret
xor
mov
rorb
mov
jl
dec
test
inc
int3
adc
dec
int3
int
pop
mov
in
rcl
popf
xchg
cmp
mov
mov
lock
iret
lahf
xchg
xchg
add
and
inc
pop
adc
xor
fs
xchg
mov
popa
push
int
rorb
dec
or
ror
and
push
inc
mov
mov
dec
inc
mov
xor
push
dec
fisttpl
and
sub
cmp
and
jecxz
test
inc
push
lea
arpl
push
rcrl
pop
loopne
push
xchg
mov
arpl
ss
push
sub
adc
mov
inc
fs
shrb
pusha
pop
push
test
cmpsl
mov
pop
gs
lret
mov
cmpsl
xchg
test
test
dec
sbb
daa
movsb
stos
or
xor
and
mov
gs
imul
push
sbb
shl
in
pushf
sbb
adc
test
sub
push
inc
call
out
das
xor
std
aam
sub
in
sti
sti
subl
int
mov
ret
shrb
cmpsl
pop
lret
and
fadd
cwtl
cwtl
xor
push
and
aaa
sub
xor
sbb
mov
and
push
push
adc
mov
and
fcoms
sub
inc
scas
sub
enter
imul
or
sbb
imul
sub
adcl
xorb
and
xlat
xchg
addr16
push
mov
jns
add
in
cmpsl
jne
imul
mov
outsb
push
and
lock
ret
xor
aad
sbb
rolb
dec
xchg
or
xor
rcl
mov
pop
push
mov
cmp
inc
mov
mov
jmp
fisttpl
leave
xchg
imul
mov
pop
pop
cmc
sbb
ss
arpl
xor
add
movsl
xor
test
mull
sbb
aam
or
mov
jo
aam
pop
mov
mov
pop
mov
out
fucomip
and
das
aam
fstpl
test
pop
in
icebp
nop
lcall
pop
enter
outsl
int3
push
arpl
or
and
jo
test
pop
dec
add
in
fcoml
dec
inc
jge
lods
rol
cmp
pop
in
inc
sbb
imul
and
fmuls
fcompl
fsubs
dec
adc
add
pop
cmp
sub
sbb
sbb
push
xor
mov
mov
into
lahf
pop
rolb
xor
les
pop
adcb
nop
sbb
mov
enter
enter
push
test
orb
lods
orb
insb
pushf
xor
or
dec
movsb
lods
dec
push
or
or
inc
jecxz
cltd
fisubl
fs
dec
lods
push
mov
es
dec
es
jl
je
es
fs
cwtl
es
fs
nop
mov
xchg
fs
dec
aam
sbb
and
mov
decb
repnz
insb
jmp
mov
shl
jns
shll
mov
dec
xor
mov
mov
movups
je
movnti
mov
push
push
je
lods
jno
orb
sbb
sbb
leave
jl
test
mov
movsb
lods
jb
and
arpl
add
in
aam
cwtl
js
push
in
fsubrs
adc
push
mov
mov
adc
xchg
mov
addb
jae
test
and
pushf
dec
cwtl
pop
aam
int3
dec
dec
dec
dec
les
dec
movsb
pushf
xchg
mov
cwtl
fadd
test
je
and
dec
insb
fs
ljmp
sarb
xor
push
xchg
mov
ds
lods
inc
push
pop
enter
sub
xchg
push
adc
aam
push
add
imul
jecxz
inc
lods
mov
or
and
add
cmpsb
inc
aam
xchg
add
rol
test
xor
leave
or
nop
push
add
dec
push
fs
adc
jo
scas
mov
pushf
imul
sbb
mov
jb
pop
pusha
jns
inc
sub
adc
gs
imul
imul
add
insb
or
and
xchg
mov
adc
rclb
mov
jns
sub
xchg
ss
inc
idivl
dec
adc
pop
adc
sbb
dec
es
adc
pusha
imull
or
push
xchg
xchg
add
and
and
leave
ficompl
cmp
leave
sub
dec
rorb
or
shll
bound
and
scas
adcb
pop
inc
leave
fiaddl
xchg
imul
in
jo
or
xor
cmp
add
sbb
pop
shlb
push
out
shll
push
aas
dec
sbb
fisubrl
dec
aam
sub
mov
cwtl
jl
or
jmp
jnp
or
or
inc
mov
xor
daa
int
dec
mov
mov
mov
ss
cmpsb
ljmp
lahf
sbb
enter
xchg
sbb
xor
or
orb
xor
mov
fsts
adc
scas
rorb
sub
orl
cwtl
movsb
and
mov
movsb
test
push
cmp
cwtl
jl
and
dec
sbb
adc
xor
pushf
xchg
ja
dec
rcr
dec
lock
mov
or
aas
xchg
xor
mov
add
int3
pushf
adc
or
pop
inc
stos
or
mov
mov
jle
les
sbb
add
movsb
or
dec
pop
adc
mov
mov
imul
ret
inc
push
sarl
repnz
jno
adc
dec
dec
repnz
mov
insb
insb
mov
das
insb
inc
push
movsb
sbb
jge
and
xchg
sub
and
lods
lods
pop
inc
into
mov
xchg
adc
or
cmpsb
sbb
pop
or
test
mov
pusha
adc
sbb
leave
cwtl
repnz
je
int
addl
xchg
insb
insl
sub
imul
repnz
cld
sub
push
and
push
jnp
sub
add
adc
imul
test
popa
mov
and
fists
nop
dec
cmp
and
nop
mov
push
sub
push
movsb
add
mov
clc
sub
jae
mov
xchg
pop
or
push
xor
sar
xor
repz
addl
enter
and
inc
in
out
push
rorb
mov
xchg
and
bound
adc
push
sub
add
sarb
scas
ret
inc
lea
xor
sub
mov
jg
cmp
mov
mov
sti
pop
mov
insb
add
sbb
or
jmp
mov
dec
push
jo
loope
fld1
push
lock
mov
rorl
sahf
and
jecxz
mulb
sub
mov
jbe
mov
jae
adc
inc
cmp
scas
lods
push
movsb
popf
mov
dec
test
and
mov
scas
dec
jmp
ljmp
test
rolb
aam
sub
add
push
inc
mov
pop
imul
adc
or
jecxz
mov
movsl
lods
call
aam
xchg
in
lods
jo
mov
mov
pop
mov
shrb
mov
mov
in
call
or
lods
notl
cmp
pop
dec
sbbl
add
dec
stos
or
lock
push
or
mov
aam
mov
or
push
cltd
adc
or
mov
sub
mov
dec
popf
adc
pusha
and
xchg
imul
sbb
inc
adc
fistpl
inc
or
icebp
addb
adc
mov
mov
adc
and
test
mov
dec
or
xor
mov
std
xorl
add
and
mov
inc
arpl
sub
xchg
xor
cmp
push
and
add
call
inc
mov
popf
fnstsw
mov
mov
sbb
imul
dec
out
jbe
adc
sbb
inc
cmpsb
adc
rclb
pop
dec
rclb
mov
sahf
daa
cltd
cwtl
inc
sahf
gs
sbb
mov
cmp
sbb
dec
ret
inc
add
dec
lcall
xor
divl
pushf
lahf
sbbb
cmp
xor
or
xor
and
in
clc
mov
xor
and
and
inc
imul
pop
pop
and
sub
fwait
sbb
and
sub
push
and
dec
jo
inc
movb
insl
add
out
pop
pop
sub
int
stc
in
rcrb
pushf
je
in
fiaddl
mov
imul
and
rclb
mov
ds
sbb
jo
pop
nop
test
mov
and
loope
push
fs
push
ret
or
enter
int3
adc
and
add
in
dec
shrb
test
pop
andb
xchg
dec
xor
ficompl
clc
rorb
mov
inc
push
or
and
test
arpl
and
and
add
sysexit
dec
inc
xchg
inc
jl
fwait
pusha
xor
out
xor
jo
test
xor
dec
pop
in
or
cwtl
cmp
push
mov
nop
nop
jbe
mov
pop
pushf
jmp
in
push
inc
mov
lock
ds
loopne
xor
inc
fldcw
pop
iret
xor
dec
push
pop
push
push
cld
cmp
jns
and
xchg
xor
mov
dec
adc
mov
jb
and
mov
dec
jb
or
jge
loopne
cmpl
push
mov
xchg
push
and
add
push
fcomps
movb
scas
sbb
cmp
ficoml
repz
sbb
push
ret
push
pop
dec
fsubrl
jmp
shl
mov
pop
mov
popf
and
loop
mov
dec
jo
xchg
add
add
push
icebp
shl
mov
mov
sub
jo
or
cld
mov
mov
and
sbb
xchg
dec
xor
push
imul
bound
in
inc
jl
pcmpgtb
lock
gs
hlt
push
sete
jmp
iret
adc
push
or
push
push
jge
jo
cmp
and
and
mov
in
int3
add
les
add
push
xchg
sub
ds
mov
add
xor
out
xor
mov
mov
enter
dec
es
inc
cmp
repz
ja
mov
insb
mov
in
add
push
inc
add
rolb
lret
mov
fcomp
dec
add
jmp
aas
jl
push
jmp
inc
data16
pusha
xlat
and
push
rolb
decl
clc
jnp
mov
add
adc
mov
rcll
xchg
adc
or
or
outsl
cmp
adc
mov
test
add
nop
add
into
int
adc
test
dec
push
fildl
clc
xor
int
cmp
dec
pushf
sub
fsubrs
imul
ja
lock
xor
add
push
incl
sub
adcb
mov
popa
aam
push
bound
and
insb
outsl
arpl
imul
cmp
lods
jb
sub
je
arpl
jne
jb
outsb
je
add
das
add
push
insl
ja
add
adc
mov
push
jg
mov
inc
outsl
jb
js
je
jb
gs
add
or
outsl
add
gs
sahf
jg
add
add
jne
les
inc
and
jb
dec
push
add
add
or
add
add
or
pop
es
sahf
inc
xor
inc
push
cmp
ja
andl
mov
shrb
je
push
insl
xchg
je
sti
push
sbb
je
and
jae
dec
fisttpl
jge
orl
push
push
xorb
or
bound
cmp
jne
imul
fidivrl
jbe
aas
imul
dec
insb
jp
outsl
or
mov
dec
fs
lret
jnp
mulb
and
outsl
jmp
jo
jbe
cs
dec
lret
stos
or
jae
push
imul
scas
cmp
jne
inc
mov
loop
push
data16
popa
mov
xchg
ds
ret
imul
dec
sub
jnp
mov
lahf
jno
shlb
push
outsb
inc
scas
mov
inc
or
test
jo
daa
dec
jbe
cs
cmp
xor
je
adc
push
arpl
mov
xor
shlb
xor
sub
fbld
or
push
mov
jb
ret
add
mov
adc
xchg
or
cvtps2pd
push
or
push
sub
mov
outsl
xchg
lahf
aaa
jg
cmpsb
mov
ja
iret
mov
sbb
sbb
imul
xor
jne
jbe
jb
jne
test
shll
jbe
adc
pop
stos
js
ds
js
das
rcrl
push
mov
fisubl
push
jo
loopne
insl
stos
lahf
outsl
aas
or
or
iret
arpl
aaa
sbb
fsubrs
dec
pop
loopne
insl
lret
imul
jb
fs
imul
shll
pop
lock
rdtsc
jne
push
cmpsl
outsl
pop
sub
das
xchg
sbb
fisubrl
pop
mov
pop
insl
push
enter
je
scas
cmp
mov
jg
jno
xor
scas
popw
mov
jecxz
push
push
sub
popa
test
shlb
pop
ret
insb
add
add
add
xor
push
and
mov
pop
or
inc
sbbl
sarl
push
adc
das
sbb
adc
adc
push
sbb
sbb
cmp
rcrl
mov
sbb
sahf
jnp
out
sbb
push
das
push
pop
jl
movsl
stc
sahf
push
sbb
sbb
jns
sarb
jns
jp
cmp
cld
adc
incl
cmp
add
mov
mov
sub
sub
repz
mov
push
mov
ret
cmp
das
adc
cmp
imul
ja
ds
mov
jge
xor
shll
cmpsl
push
fwait
and
fiadds
cmp
push
xor
fdivrl
pop
add
jbe
outsb
and
add
das
das
and
popa
mov
scas
pop
mov
shlb
dec
ljmp
mov
cs
test
je
mov
cli
addr16
idivl
aas
xor
stc
dec
inc
mov
sbb
mov
clc
ds
pop
pop
popa
jnp
outsl
dec
and
inc
das
pop
insl
sbb
pop
imul
iret
insl
arpl
fdivrs
out
out
mov
shr
and
arpl
adc
pop
pop
jp
jae
andl
sub
pop
sti
dec
jne
dec
fbld
insl
pop
mov
sbb
mov
lahf
jg
in
jmp
dec
cmp
cmp
add
dec
xlat
mov
cmp
add
das
das
adc
pushl
inc
arpl
bound
add
outsl
jbe
dec
arpl
inc
jo
pop
cld
mov
sub
addr16
xor
insb
xchg
mov
inc
outsb
xchg
inc
jo
imul
bound
inc
popa
outsb
adc
out
scas
cmpsl
xchg
popl
fdivrl
jg
addr16
popa
je
jb
outsl
in
addr16
xor
and
daa
push
gs
cmp
sbb
dec
outsl
outsb
and
bswap
cmp
insb
xchg
pop
dec
inc
jecxz
popf
jbe
add
out
dec
or
sbb
mov
jae
fildll
je
push
push
inc
push
popa
insb
jne
inc
or
push
fsts
inc
insl
pop
jg
stc
and
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
clc
cmp
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
mov
push
push
xor
pop
pop
pop
call
bound
gs
imul
jo
decl
jbe
js
jp
jl
jle
je
jnp
dec
adc
lcall
loopne
fistpll
mov
add
orb
sar
stc
mull
lret
jno
icebp
pusha
inc
mov
clc
ret
cmc
loop
outsb
movsl
add
xorl
sbb
imul
lahf
adc
cmp
dec
add
jnp
xor
jo
xor
stos
jnp
popf
add
dec
pop
sbb
ja
ret
ret
iret
loopne
imul
int3
adc
out
add
adc
add
add
add
add
xor
cmp
push
add
xor
cmp
and
add
pusha
push
pusha
adc
js
or
cmp
fidivrs
add
addb
add
imul
push
xchg
test
add
sub
dec
mov
pop
daa
push
cmpb
push
and
sub
jb
int3
push
jmp
ja
mov
push
rcll
ja
and
push
nop
clc
movsl
jo
add
pop
adc
mov
loope
addl
cmp
xchg
lea
xchg
dec
cmp
mov
in
xor
mov
mov
sahf
or
fstpl
inc
scas
shr
je
mov
push
stos
das
stos
add
lods
mov
enter
mov
push
sbb
cmp
or
arpl
inc
sub
ja
rdtsc
ss
jmp
dec
inc
adc
cwtl
push
sub
notl
fs
mov
push
jae
mov
bound
je
outsb
data16
push
add
out
je
xor
sub
fisubs
daa
pop
lea
negb
gs
outsl
js
push
xchg
cs
into
mov
and
inc
outsl
insl
jo
jo
and
and
mov
xchg
shlb
aaa
insb
les
dec
imul
jns
inc
mov
insb
jnp
insl
ds
cmp
dec
inc
jb
jns
daa
aaa
xchg
pop
and
cmpl
mov
mov
insb
and
cmpb
and
cmp
push
outsb
jle
jbe
mov
mov
dec
fdivl
or
jb
and
inc
mov
pusha
inc
jbe
push
inc
cmp
mov
imulb
dec
andb
push
jp
pusha
xchg
xor
inc
faddl
aas
jbe
imul
and
push
lds
daa
mov
dec
adc
jnp
insb
inc
popa
push
outsb
mov
cmpsl
pop
popa
push
push
jae
or
xor
insb
call
aam
clc
addr16
orl
gs
mov
mov
and
inc
mov
notl
dec
testl
dec
mov
aam
enter
les
ret
add
ds
add
push
jle
jb
push
xor
jae
call
pop
adc
je
stos
outsl
jae
inc
pop
lods
loopne
in
xchg
das
gs
sub
popaw
sbb
xchg
sub
push
pop
aaa
pusha
push
or
jnp
lods
pop
das
je
outsl
xchg
or
aaa
daa
xchg
mov
popw
jns
pop
cmp
cmp
ds
and
push
das
push
sub
test
sahf
mov
jle
jns
cmp
add
add
cmp
sub
pop
or
sbb
das
sbb
aaa
flds
sbb
and
push
mov
ficomps
xchg
pop
pop
jne
sbb
xlat
scas
stos
addr16
push
jbe
or
sbb
jo
ss
gs
imul
hlt
cmp
addr16
sbb
sahf
inc
cltd
jnp
test
sub
popa
sub
adc
jl
out
sub
jns
out
pop
cs
add
cmp
and
jl
out
adc
cld
sub
in
mov
push
test
push
repz
repz
aam
int3
enter
cmp
pop
lods
push
movsb
out
sahf
cmpsl
outsb
mov
mov
out
jns
xchg
mov
ds
out
lret
js
jo
jns
out
push
out
sahf
out
push
dec
inc
xor
repz
sub
or
sub
enter
cmp
mov
and
sahf
out
or
sub
pushf
and
sahf
out
insb
fs
xor
jns
sub
lock
test
iret
repz
pop
sub
in
sub
cmp
push
pushf
jo
sub
shlb
push
and
adc
sub
addb
inc
mov
and
mov
add
addl
add
ljmp
xchg
dec
leave
stos
push
add
cmp
add
add
xor
push
mov
adc
or
fcomps
inc
in
pop
ret
insl
sbb
das
jle
cmp
inc
add
test
decl
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
ljmp
mov
mov
mov
mov
mov
mov
ret
enter
dec
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
jmp
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
push
movsl
push
loope
or
adc
jmp
push
test
jmp
aam
push
mov
lock
pop
outsb
gs
popa
push
dec
or
inc
pop
shlb
fimuls
jns
push
xor
add
dec
cmp
aam
jbe
cmpsl
cmpsl
sbb
js
jns
outsl
dec
arpl
inc
test
fs
sbb
lods
mov
fdivl
lahf
push
outsl
push
setl
sub
add
mov
adc
push
adc
xlat
dec
and
xor
push
dec
inc
dec
cmovns
xchg
outsl
es
inc
das
push
adc
sub
adc
nop
mov
or
popa
into
mov
mov
jnp
inc
loop
mov
cld
cmpl
inc
pop
clc
lret
sbb
jge
aas
bnd
jge
arpl
cmp
repnz
mov
adc
fisubrs
and
in
pop
xchg
cmp
dec
imul
lret
add
int
incl
mov
mov
sub
fwait
ss
out
paddsb
int
jns
ds
xor
incb
int3
dec
decl
jns
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
call
shrl
pop
and
xchg
lret
sahf
icebp
mov
cld
or
decl
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
pop
mov
pushl
ljmp
orb
popa
push
or
scas
int
das
js
fimuls
adc
in
mov
add
scas
lods
dec
lock
xor
pop
mov
pop
adc
dec
pop
repnz
and
inc
sub
lret
es
sbb
lcall
dec
jne
mov
rcrl
dec
daa
data16
push
fildl
sub
mov
or
xchg
and
adc
dec
jns
inc
fbstp
xchg
pop
and
fwait
imul
outsb
addr16
es
jae
adc
fmul
out
and
mov
push
data16
scas
adc
or
mov
xlat
rolb
jne
outsb
rcll
cmp
xlat
sti
or
lock
daa
fldt
je
test
daa
je
add
jae
insb
stos
test
pop
add
jmp
xchg
mov
xchg
ret
cs
adc
testb
push
or
pop
add
test
jg
inc
sub
push
pop
dec
dec
dec
mov
outsl
jnp
xor
jae,pt
fimuls
mov
push
pop
cmpsl
mov
and
lock
pop
jmp
arpl
repz
out
mov
jbe
out
mov
sub
fidivs
push
mov
push
ret
xchg
insb
daa
jnp
stos
fcoms
or
xchg
ret
jecxz
sub
jl
jg
out
aaa
or
sti
sbb
jns
fnsave
outsb
xlat
jg,pn
call
jmp
ret
inc
and
cmp
xchg
mov
sbb
xchg
js
sub
push
mov
nop
push
sti
mull
insl
cmp
pop
pop
mov
cmp
adc
dec
push
aad
cmp
imul
sub
lahf
es
es
sti
cmp
mov
dec
or
cmp
mov
clc
cmc
jmp
inc
arpl
push
lock
ret
dec
dec
call
push
loopne
mov
mov
dec
jp
xchg
add
aaa
pop
jecxz
xor
jo
jnp
mov
xor
mov
mov
pop
popa
out
inc
addr16
xlat
in
imul
data16
pop
pop
sti
mov
mov
arpl
daa
pop
arpl
mov
pop
gs
jne
mov
out
push
sbb
in
ja
arpl
jge
cmp
fistps
pop
or
ja
inc
mov
add
cmp
sbb
adc
aad
xor
aas
arpl
or
lret
sub
inc
sub
sub
out
daa
xchg
add
pop
fbstp
add
mov
inc
aas
into
ds
jecxz
or
addr16
mov
icebp
and
negb
stc
sbb
arpl
mov
xor
push
arpl
clc
mov
pop
mov
dec
popa
adc
inc
jnp
and
jo
out
or
xor
lock
je
jae
pop
outsb
out
out
nop
mov
adc
aaa
mov
testl
shlb
push
or
and
jecxz
stos
scas
mov
subl
sub
sbb
dec
aas
adc
outsl
popa
push
inc
pop
daa
imul
add
dec
dec
sub
cmp
dec
fwait
push
mov
cmp
push
dec
imul
inc
push
ret
inc
and
test
imull
sbb
and
pop
sub
sub
jp
roll
shll
sub
ret
dec
sub
outsb
mov
fdivrl
xor
add
jl
push
fiaddl
bound
jae
mov
notb
pop
mov
addr16
sti
mov
mov
and
xor
push
bound
or
mov
or
out
arpl
pop
pop
add
testb
les
jbe
outsl
ss
adc
jb,pn
pop
fnsave
ja
es
add
out
jno
mov
inc
scas
imul
fcomip
loop
mov
insb
xchg
lcall
dec
add
cmpsb
jae
push
outsl
imul
fmuls
aaa
adc
push
mov
outsb
xchg
xchg
cmp
lret
inc
test
cli
lock
je
pop
dec
por
insb
aas
pop
adc
pop
scas
inc
bound
outsl
rcl
mov
sti
ja
xor
push
sarb
pop
pop
push
mov
inc
jle
add
mov
sbb
mov
addr16
pop
inc
inc
lods
rorb
in
cmc
les
pop
sbb
pop
jno
xchg
cmp
xor
js
and
addr16
bound
testl
mov
fs
cmp
inc
cmp
jns
jae
mov
jl
push
adc
jl
addr16
imul
popf
and
jmp
es
ja
jbe
mov
add
ja
lods
dec
imull
movsb
testl
xor
add
jno
mov
fwait
insb
sub
movsbl
dec
outsl
lret
jl
jo
inc
bswap
or
jns
loopne
adc
mov
adc
sarl
push
or
sub
jl,pt
mov
imul
push
pop
jecxz
or
mov
insb
xor
ja
cmp
adc
es
mov
add
and
mov
or
stos
add
push
addl
mov
fisttps
imul
daa
inc
and
fists
jns
jae
mov
jecxz
jae
inc
test
dec
stos
cmp
push
adc
jg
out
mov
add
sbb
ss
xlat
sub
icebp
jmp
jb
bound
daa
xor
push
fdivs
push
insb
sub
add
add
shll
popa
popl
je
aaa
es
ret
jnp
outsl
das
in
fwait
mov
and
lcall
fists
dec
push
add
pop
lds
push
sbbb
jle
push
sub
push
sbb
gs
lock
pop
jnp
sbb
xor
inc
add
mov
lret
cmp
pop
cwtl
fsts
add
inc
push
push
and
es
push
mov
stc
pop
sti
pop
push
push
mov
dec
ds
push
jp
out
shrl
push
cmp
out
add
popf
mov
ds
push
pop
push
push
cmpl
fisubl
sahf
repz
mov
rcrl
push
pop
ja
repz
inc
pop
mov
add
in
pusha
js
aas
pop
sub
pop
lock
pop
push
mov
jns
mull
movsb
push
mov
mov
leave
cmp
or
xchg
inc
outsl
jg
jns
out
push
push
cmp
dec
dec
negl
dec
dec
push
outsb
ficoms
inc
pop
dec
iret
pop
cmp
mov
ja
rcrb
outsl
out
ret
pop
jae
outsl
jo
movsb
int
and
daa
insl
movb
jmp
push
push
aaa
push
sti
pop
insb
push
sub
rolb
pop
popa
lock
push
jae
fs
ds
and
loopne
gs
insl
cmp
pusha
push
popa
jne
or
and
or
bound
xor
imul
pop
shrb
enter
pop
je
push
pop
push
pop
out
cmp
mov
repz
ja
mov
ret
std
xor
dec
js
sti
mov
bound
dec
fs
ja
add
fwait
mov
push
bound
cmp
gs
je
cmpsb
adc
ret
push
push
push
push
pusha
mov
jo
jb
into
jb
mov
cmp
ss
sbb
and
das
and
and
arpl
xor
cmp
ret
mov
pop
adc
in
push
add
adc
mov
out
data16
jne
je
ss
cmp
imul
mov
sti
mov
ja
adc
cmp
pusha
mov
jae
sbb
movsl
xchg
aas
push
pop
pusha
cs
inc
popf
pop
jne
sub
inc
daa
imul
cmpsl
xchg
fmull
ja
inc
push
jge
push
ja
push
pmuludq
call
mov
scas
inc
add
inc
add
stos
rol
mov
movsb
je
pop
iret
inc
dec
push
and
or
aaa
mov
add
js
xchg
xor
sub
mov
xor
mov
idivb
ja
outsb
pop
sub
inc
xor
jle
rclb
dec
inc
iret
loope
iret
out
test
push
into
or
mov
or
sub
xchg
arpl
mov
hlt
aam
nop
pop
mov
sbb
fsubl
inc
and
lcall
flds
out
and
and
add
sub
sbb
xchg
jle
sbb
sub
push
sub
add
aas
sbb
dec
stos
xchg
inc
or
inc
lcall
shrl
lcall
sub
sbb
adc
bound
mov
pop
mov
lcall
pop
dec
jg
dec
inc
dec
icebp
push
stos
sti
sub
aaa
inc
stos
push
addr16
gs
adc
lock
fwait
iret
ret
xor
mov
mulb
add
mov
push
sub
pop
test
mov
add
sub
or
lods
cs
stos
rcr
and
shrl
add
adc
sub
dec
sub
xor
imul
sbb
jp
out
jb
inc
jp
arpl
popa
fildl
or
lea
les
xor
mov
lahf
out
and
lock
jb
data16
fsubs
jbe
ret
xor
dec
inc
lahf
into
add
daa
xor
movsl
xchg
sbb
mov
inc
or
sbb
aaa
inc
iret
subb
lsl
or
mov
fidivl
xlat
push
push
jecxz
addl
jg
aas
push
jg
dec
out
push
test
mov
pop
sbb
mov
ret
movsb
and
sti
pop
mov
das
mov
pop
pop
mov
cmp
sub
inc
push
jg
push
fiaddl
sbb
mov
add
test
jnp
insb
ret
xchg
aaa
stos
lgs
mov
pop
addr16
loopne
loop
mov
lahf
add
inc
ficompl
jmp
jns
jnp
inc
cmp
ret
and
arpl
lahf
push
mov
and
dec
cli
push
xchg
xchg
mov
sub
push
mov
or
aad
pushf
mov
dec
xorl
jo
movsl
cmpsl
push
adc
lods
stos
cs
mov
cmpsb
mov
lods
inc
xchg
hlt
imul
arpl
inc
push
mov
insb
mov
nop
sbb
add
push
jno
or
push
repz
push
add
xlat
inc
mov
sub
push
imul
push
add
aas
roll
jno
jo
out
pop
aaa
sbb
xchg
sarb
pop
ret
and
outsb
in
jno
jb
mov
das
pop
adc
adc
das
sbb
and
xor
push
inc
icebp
jo
mov
adc
pop
or
adc
mov
add
mov
ret
test
imulb
inc
fistpl
arpl
scas
mov
mov
xlat
cmpsl
xchg
or
mov
xlat
mov
dec
sbb
pop
sbb
xlat
stos
inc
outsb
cmp
xchg
mov
pop
push
or
adc
dec
xchg
loopne
xchg
hlt
out
insb
mov
jecxz
mov
sbb
lahf
sti
mov
ret
pop
cmp
or
jp
movsl
adc
jns
pop
xchg
push
divl
sub
jnp
jb
xlat
loope
push
outsl
pop
push
ficoms
mov
cmp
inc
test
add
dec
out
mov
ret
sti
xor
pop
shr
je
lahf
aas
xor
push
push
sub
sbb
cmp
pop
inc
outsl
daa
mov
sub
push
mov
cmpsl
sub
pop
mov
test
xlat
pop
test
fildll
xchg
je
cmp
int3
sbb
jge
inc
int
rclb
fsubs
pop
int
out
adc
pusha
pop
add
out
cmp
arpl
stos
cs
xchg
shlb
push
xchg
fs
and
arpl
imul
test
or
pop
add
sbb
sub
inc
mov
jecxz
xor
sub
aaa
xor
das
mov
aas
das
outsl
les
mov
rorb
fnstsw
das
add
dec
sub
sub
or
out
lods
mov
cmp
ret
push
lahf
or
outsl
mov
lcall
test
inc
sahf
xor
sub
dec
dec
das
fwait
adc
adc
insl
lret
icebp
xchg
mov
dec
fcmovnb
pop
popa
xchg
aas
and
jno
add
or
pop
sbb
sbb
sub
push
cs
mov
dec
rclb
push
add
pushl
adc
cmp
inc
arpl
cmp
ja
bound
in
adc
jmp
les
jae
arpl
out
pop
xchg
and
pop
add
dec
pop
adc
sub
xchg
dec
sub
inc
in
loope
mov
orl
sub
fsubrs
mov
mov
rsm
fdivrs
andl
mov
inc
lret
push
mov
dec
push
pop
minps
aas
push
adcl
rcrl
jle
dec
mov
jmp
pop
pop
jecxz
insl
repz
push
mov
mov
iret
or
cli
outsl
push
mull
or
push
adc
dec
and
repz
pop
mov
mov
and
jnp
inc
rcll
dec
loope
pop
scas
roll
xchg
xchg
sbb
scas
sarb
cmp
out
adc
ja
push
subl
push
sbb
push
ss
out
cli
push
push
pop
ret
scas
or
or
jno
dec
adc
cmp
data16
adc
adc
xor
cmpsl
cltd
cmc
push
adc
int
mov
pop
dec
sbb
pop
sbb
xor
jmp
mull
ss
and
out
fstpl
out
and
inc
cs
push
sbb
outsb
bound
xlat
mov
cmp
test
dec
sbb
mov
add
cmpsl
arpl
sbb
cs
xor
inc
fs
divl
adc
adc
push
out
jae
inc
sub
lods
push
pop
popl
xor
cmpsl
cmc
test
mov
aam
inc
cmp
das
dec
sub
xchg
sti
arpl
mov
arpl
cmp
rorb
or
adc
mov
push
out
mov
rol
scas
out
or
mov
adc
sbb
mov
or
das
sbb
out
iret
loopne
sub
adc
mov
dec
jmp
or
stos
inc
das
and
add
fisttps
or
stos
pop
cmp
pop
dec
sub
lods
xlat
and
xchg
das
aaa
stos
or
bound
inc
jbe
mov
push
bound
push
imul
jnp
fiadds
adc
and
add
cmpsb
add
or
jnp
jge
mov
push
cmp
aas
push
and
fs
mov
add
outsb
sbb
aaa
inc
inc
cmp
sbb
add
insl
pop
sub
or
xchg
cmpps
dec
add
pop
mov
mov
push
out
mov
bound
mov
pop
pop
cmpsl
adc
pop
mov
in
pop
sbb
pop
or
xchg
ljmp
push
popf
int3
jecxz
jl
leave
stos
in
fsub
mov
pop
and
stos
sub
scas
hlt
loopne
push
leave
push
jb
add
pop
or
push
repnz
and
stos
in
cltd
jo
pop
and
js
sub
aam
test
loopne
push
jb
dec
mov
scas
xchg
test
inc
xor
cwtl
xchg
push
leave
push
inc
lock
sub
push
leave
stos
in
mov
pusha
jns
pop
and
stos
sub
dec
and
test
rcl
dec
scas
xchg
insb
sbb
ror
push
xor
xchg
push
fcom
mov
mov
rorb
dec
cmp
xlat
and
mov
inc
add
jg
or
inc
scas
xor
sbbb
pop
push
pop
jbe
fnsave
dec
mov
push
sbb
mov
or
mov
push
imull
inc
inc
xlat
sti
ss
or
daa
das
bound
inc
adcl
xor
push
fimull
orb
dec
popa
int
sub
nop
cwtl
je
jae
imul
movsl
sbb
xchg
ss
pop
inc
repz
dec
inc
mov
add
mov
fwait
mov
cmpsl
inc
push
cmpl
sub
cvtps2pi
adc
test
inc
push
inc
xlat
and
out
fisttpll
xchg
es
dec
test
xor
xchg
sbb
add
mov
dec
aaa
sbb
sbb
push
scas
fisubl
int3
aas
xchg
push
mov
fists
fmuls
inc
addl
xlat
fiaddl
pop
pop
inc
sub
aaa
and
pop
adc
add
xor
jp
cmp
sti
mov
sbb
insl
push
ljmp
bound
mov
out
aaa
fucomip
sub
aaa
lods
sbb
mov
orb
ss
mov
outsl
jecxz
mov
cwtl
add
lahf
xorb
or
orl
fstpt
scas
pop
popa
lods
pop
pushl
mov
jg
aaa
add
imul
mov
inc
adc
sbb
adc
ljmp
push
sbb
push
and
adc
cmp
andl
xor
les
adcb
xlat
push
pushl
addl
mov
jo
xlat
pop
out
add
add
popa
or
and
movsl
je
dec
pop
inc
inc
addr16
roll
pop
push
add
and
xor
lock
push
push
xchg
jb
in
sahf
sbbl
adc
lahf
cwtl
pop
ret
xor
negl
mov
cmp
addr16
dec
adc
je
or
dec
je
shrb
cmp
sub
push
adc
arpl
pusha
add
sub
es
jae
or
scas
aas
andb
push
addb
shll
ja
imul
cmp
mov
push
jbe
negl
mov
aaa
sbb
daa
rcr
jo
xor
mov
outsl
in
ja
loopne
loopne
adc
sbb
jae
imul
dec
js
cmp
sti
push
sbb
mov
stos
jmp
inc
sub
sbb
jo
ret
add
bound
mov
shl
mov
testl
scas
jae
and
and
mov
and
jns
inc
push
addr16
popf
out
shr
dec
push
mov
xor
cltd
or
xchg
fwait
int
or
pop
or
insb
add
out
adc
jns
and
sub
xor
inc
mov
mov
cmp
lret
mov
popa
xchg
cltd
fldcw
shrb
ret
sub
lcall
xchg
pop
adc
ss
mov
pop
sbb
int
push
dec
str
mov
shlb
stc
das
incl
xor
jmp
insb
push
pop
inc
inc
pop
push
mov
push
cmp
lea
mov
aaa
push
in
xor
push
popa
iret
repz
stos
push
xlat
xor
push
ss
mull
iret
mov
rorl
push
pop
inc
scas
and
aad
inc
imul
jl
adc
push
and
bound
pop
jb
jae
int3
add
push
inc
mov
incb
shrl
arpl
adc
sti
les
mov
mov
push
iret
movsb
pop
mov
shrd
sub
call
xorb
xchg
into
cld
daa
xor
xor
xchg
mov
adc
fwait
or
cmovno
mov
push
das
or
idivl
push
es
xlat
adc
out
lods
enter
aas
sbb
sub
mov
mov
mov
fiadds
add
add
pop
lahf
or
or
xchg
xchg
je
or
push
fidivrl
adc
movsl
xchg
add
mov
bound
push
loope
pop
dec
jae
inc
insb
mov
sbb
push
mov
scas
mov
cmpsb
push
mov
sub
ja
dec
es
pop
cmp
push
out
ret
push
push
push
cmp
scas
or
aaa
out
es
mov
aad
add
loopne
mov
and
negl
mov
xchg
cmp
inc
jns
neg
pop
ret
fs
dec
sub
orl
je
xor
pop
jecxz
pop
add
pop
inc
pop
dec
shlb
or
sti
push
dec
mov
or
leave
xlat
push
shlb
inc
cmp
push
ret
xchg
jbe
fiadds
js
inc
push
adc
ss
imul
jns
dec
mov
bound
xor
pop
incb
repz
push
mov
mov
cmpsl
xchg
push
cmpsb
cli
jo
push
xchg
ja
retw
pop
mov
inc
data16
xor
out
mov
shlb
sub
arpl
ficoms
inc
mov
and
iret
cmp
add
daa
inc
xor
push
or
push
pop
js
dec
lock
imul
pop
pop
out
mov
push
es
ss
outsb
pop
push
xchg
loope
push
xor
dec
jb
das
inc
pop
lock
dec
das
add
and
negl
inc
pop
push
sysexit
mov
iret
jns
dec
cs
sahf
push
outsl
icebp
push
sahf
lret
cli
push
push
insl
jnp
mov
mov
insl
mov
out
mov
fiadds
cli
xor
push
jp,pt
jp
out
adc
jp
push
jl
mov
dec
das
xor
js
xchg
jp
pop
outsl
pop
xorl
outsl
dec
xor
orb
xchg
xor
outsl
nop
or
and
and
and
inc
jg
pop
sub
jg
loop
mov
sub
aam
add
testl
xchg
lahf
cmpps
mov
mov
out
jnp
adc
dec
cmp
popl
push
lcall
cmp
inc
inc
fstpt
add
je
adc
xchg
addb
xchg
xor
xchg
xor
mov
and
cmp
mov
jnp
sub
sbb
shlb
jg
jbe
sbb
adc
popa
push
or
sarb
inc
inc
add
pop
arpl
clc
outsl
mov
ret
xlat
stos
scas
adc
test
lods
fnstcw
push
cmp
push
or
daa
adc
cmc
sub
lahf
pop
nop
dec
filds
dec
mov
addr16
jecxz
push
xchg
mov
sbb
dec
outsb
mov
jecxz
inc
jmp
xlat
test
insl
and
outsb
addr16
addr16
adc
pop
popa
daa
sub
add
mov
sbb
adc
jle
outsl
popa
fs
outsl
lods
cwtl
inc
xor
movsb
pop
aas
inc
loopne
sbb
pop
adc
shlb
das
xor
les
push
cmpsl
xor
cmpl
push
scas
js
mov
inc
fstpl
add
and
fs
mov
dec
scas
addr16
sbb
arpl
imul
scas
inc
mov
bound
cwtl
jp
ja
pop
sub
push
xor
lcall
xchg
inc
ja
sahf
xlat
xchg
cs
out
sahf
insb
add
pusha
add
cwtl
xor
pop
ja
xchg
mov
ja
pop
cmp
je
aaa
in
jne
jo
arpl
xor
inc
mov
ja
xor
xor
push
sub
or
inc
inc
add
pop
mov
pop
repz
mov
jae
cs
xor
stos
lods
push
xor
add
lahf
popf
inc
mov
mov
das
push
and
shrl
add
pop
js
lock
lahf
jmp
xlat
jmp
fildll
fisttpll
push
scas
movl
xchg
addl
sub
addr16
inc
loop
iret
lods
push
and
cmp
mov
insl
das
push
inc
stos
or
and
and
jnp
cmp
popa
fldt
shlb
repz
mov
and
cmp
xchg
imul
mov
sub
sbb
jnp
dec
aad
rolb
aas
scas
sbbl
dec
inc
daa
jns
or
pusha
mov
or
filds
sub
arpl
ret
outsb
dec
arpl
jae
daa
jbe
sbb
dec
int
lods
inc
outsl
aas
push
insl
push
addr16
das
repz
jne
aaa
insb
aam
or
call
inc
inc
enter
mov
add
sub
sub
push
mov
adc
jle
pop
push
sarb
mov
add
das
mov
ja
mov
inc
aas
lock
xchg
pop
inc
int
addr16
sub
xchg
jge
fimull
push
jmp
inc
clc
mov
clc
add
cmpsb
jmpw
mov
pop
and
insb
call
inc
add
add
mov
aaa
nop
and
mov
std
fists
mov
push
sbb
ljmp
mov
inc
dec
mov
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
jg
pusha
or
mov
sub
sub
and
das
mov
sbb
mov
ds
pop
sbb
jg
jg
lods
sub
and
jle
jo
fsubs
decl
mov
pop
dec
xchg
adc
push
pop
add
jbe,pn
sbbl
adc
jmp
or
imul
push
pop
jmp
aam
push
insl
fs
push
mov
rclb
rolb
and
push
mov
xchg
cmp
ficompl
mov
inc
push
dec
cmp
cmp
pop
adc
es
pushf
add
hlt
fwait
in
iret
mov
push
inc
aam
pop
out
cmp
mov
movsb
scas
dec
rcll
pop
je
loope
jns
fs
outsl
xorb
mov
or
lcall
cs
inc
mov
inc
cld
pop
dec
xchg
aaa
insb
hlt
mov
xchg
fmuls
pop
ret
and
dec
into
pop
fwait
add
je
pop
and
shll
cmp
ss
jge
mov
sub
adc
xchg
or
cmp
adc
loopne
inc
mov
jecxz
cmpsb
jp
mov
dec
cwtl
adc
andl
add
pop
addr16
nop
stos
adc
inc
dec
jp
es
push
mov
add
aas
push
daa
bound
je
bound
imul
add
inc
dec
mov
inc
dec
and
scas
xlat
add
inc
shrb
daa
mov
aas
aaa
push
fists
aas
jae
push
mov
pop
xchg
sarl
inc
sub
sub
push
cmp
dec
nop
pusha
insl
xor
push
scas
mov
fidivl
aaa
test
iret
test
lcall
ficompl
dec
cmpl
inc
inc
dec
das
pop
fisubs
mov
push
xlat
rclb
sarl
xchg
fnsave
xor
add
mov
mov
add
or
movsb
and
shrb
out
xor
pop
jb
pop
insl
mov
decl
mov
mov
xor
push
push
pop
sub
jmp
add
add
jno
jbe
adc
outsl
dec
xor
jge
push
dec
int3
push
aaa
or
inc
arpl
xor
dec
cli
cs
xchg
jle
jns
fsts
lcall
mov
int
push
push
mov
jns
outsb
inc
fxch
ds
ja
xchg
xchg
pop
test
loope
inc
mov
cmpsl
add
xchg
jne
push
cltd
mov
imul
ret
out
idivb
sub
sbb
pop
adc
arpl
or
fs
mov
mov
addb
cs
test
rorl
xor
testb
sets
mov
mov
in
adcl
hlt
scas
add
cmp
insb
test
dec
int
cmp
add
jno
push
cs
dec
insb
mov
cmp
jo
mov
negl
in
mov
pop
aam
scas
push
out
ss
ror
push
inc
sub
fcomip
xor
sbb
pop
adc
test
push
xor
mov
push
cli
insb
push
daa
xor
cmp
out
jge
filds
je
test
mov
stc
push
pop
add
push
xor
jnp
idivb
inc
push
pop
fs
jns
mov
in
test
iret
mov
dec
pop
mov
pop
pop
mov
and
pusha
sbb
fdivp
cs
mov
xchg
mov
push
iret
repz
pop
xlat
or
nop
dec
call
cmc
cs
dec
movsl
pop
call
jnp
jl
and
jbe
adcl
in
ds
lods
dec
jp
jns
es
sbb
ficomps
mov
outsl
mov
ficomps
ss
push
xchg
inc
iret
adc
jns
out
push
imul
dec
scas
pop
dec
push
push
push
jns
ja
dec
out
test
inc
cld
fnstcw
mov
stos
or
test
mov
dec
cmp
jns
iret
fiadds
dec
and
data16
cwtl
ret
dec
jae
int
jns
popf
repnz
cmp
repz
imul
repz
push
push
add
pop
xor
aad
pop
dec
sbb
scas
xor
sub
adc
and
and
rcrb
push
push
mov
xor
adc
bound
test
mov
mov
pop
push
mov
pop
clc
pop
add
idivb
cmpsl
std
pop
mov
and
pop
sbb
enter
repnz
adc
or
adc
mov
mov
or
pop
mov
pop
adc
or
push
add
cmp
ret
or
push
sub
xlat
bound
adc
add
add
iret
clc
js
cld
mov
outsb
jp
xor
push
stc
sahf
out
js
xor
cltd
mov
push
imul
cmp
xor
pusha
ja
addl
cmp
push
mov
fildll
inc
imul
nop
mov
inc
sub
xor
shlb
pop
inc
outsl
xor
push
popa
je
or
fisttpl
push
inc
pusha
scas
push
mov
cmp
out
data16
pop
push
ficoml
mov
mov
lret
fmull
mov
es
push
xchg
adc
imul
push
pop
sub
or
mov
lahf
pop
sub
pusha
adc
xchg
push
hlt
jg
jae
testb
or
outsb
loopne
add
outsl
daa
cmp
jo
mov
pop
pop
push
jo
inc
mov
sbb
jg
outsl
jno,pt
push
pop
inc
jecxz
push
mov
mov
xchg
popf
mov
dec
lods
mov
push
xchg
push
dec
cmpsl
and
popa
pop
add
sub
pop
fsubrs
dec
xor
inc
stos
sub
mov
push
dec
inc
data16
data16
sbb
or
scas
adc
fildl
add
and
subb
inc
in
movsb
and
jae
mov
iret
daa
imul
aaa
add
dec
cmp
lods
xchg
shlb
popf
mov
xorps
dec
std
lahf
icebp
fsubs
dec
fs
jo
xor
sbb
inc
insl
daa
dec
sub
mov
imul
jnp
xchg
andl
dec
add
xorl
lahf
mov
addr16
fiadds
xlat
addr16
vsubsd
add
xor
cmpsl
imul
push
mov
sub
dec
shrl
or
wrmsr
inc
mov
add
dec
aas
aaa
add
dec
adc
mov
gs
aaa
sbb
inc
stos
inc
test
pop
mov
xor
scas
lcall
add
pop
out
inc
fs
mov
cmpsb
pop
cmp
arpl
mov
ds
jmp
jae
fs
add
pop
add
das
ja
js
push
pop
sqrtps
popa
adc
push
add
jo
pop
das
pusha
mov
out
les
aas
sub
cs
mov
sub
into
pop
sbb
lods
mov
dec
mov
roll
cs
cs
aaa
add
imul
das
jg
add
jb
sub
pop
adc
add
sbb
das
mov
bound
add
inc
dec
push
popl
mov
pop
pusha
xor
js
jge
out
inc
into
inc
mov
push
mov
mov
lahf
imul
jnp
lmsw
bound
je
add
aas
inc
pop
subl
pop
and
fisubrl
dec
push
test
iret
sahf
add
xor
lds
dec
fcmovbe
dec
and
sahf
mov
inc
sarl
dec
add
bound
inc
jno
dec
mov
ja
add
fisubl
cmpsb
fcompl
push
inc
daa
sbb
mov
or
imul
cmp
fcmovb
push
shrb
pop
pop
inc
push
rol
push
dec
dec
inc
jle
fcoms
aaa
mov
dec
xlat
sbb
xor
pop
testl
and
lahf
jl
jecxz
inc
dec
shlb
push
sbb
dec
add
add
stos
mov
and
sub
inc
rcrl
filds
testl
into
les
jns
inc
cwtl
inc
pcmpeqb
sub
test
push
mov
pop
das
adc
movsb
sub
inc
and
add
dec
movsb
es
insl
jo
je
pop
pop
fnstsw
aas
jo
jae
daa
pop
jno
outsl
lea
or
xor
push
cvtps2pi
mov
xchg
and
bound
mull
jns
je
jne
or
decl
sub
out
rcrb
dec
out
jl
dec
jae
jge
inc
lods
decb
rcr
sbb
or
adc
inc
mov
add
punpckhwd
arpl
lcall
or
inc
stos
xor
lret
daa
test
mov
xchg
dec
push
push
pop
bound
sub
stos
pop
popa
adcb
mov
sbb
lahf
dec
lods
sbb
cltd
shll
inc
push
mov
push
pop
adc
push
mov
dec
sbb
push
xchg
push
pop
lock
sbb
push
rclb
leave
lods
cmpsl
pop
pop
dec
test
insb
lds
mov
or
inc
fsubl
call
jns
jb
add
scas
iret
mov
jbe
shl
ret
mov
or
xchg
dec
xlat
sti
mov
fsubr
inc
outsl
outsb
or
call
inc
insb
jo
or
push
pop
daa
out
adc
cs
out
ret
ret
out
loop
push
js
push
add
std
fwait
cmc
adc
incl
dec
inc
dec
push
cmp
dec
sahf
xchg
add
add
sti
loopne
dec
fiadds
jg
int
sbb
ret
jbe
add
mov
adcl
lahf
mov
cwtl
das
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
incl
or
je
mov
andb
fwait
rol
fwait
in
inc
mov
lcall
or
outsl
sub
sub
fsubrl
stc
jbe
push
ds
insl
xor
jmp
add
repz
movb
aad
arpl
push
sub
adc
or
cs
ljmp
dec
adc
or
or
cs
ret
sub
xchg
mov
data16
decl
insb
sbb
xchg
shll
cltd
test
push
push
shll
pushl
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
outsl
arpl
pop
js
test
add
mov
mov
insb
push
movsb
idiv
jmp
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
cmp
flds
pop
and
cmpsl
daa
stos
lods
popf
and
pop
mov
out
inc
mov
and
ds
das
sbb
or
or
daa
daa
daa
push
and
mov
pop
inc
inc
inc
push
inc
pop
and
or
xor
jg
aas
js
insb
cwtl
mov
jbe
jbe
pop
push
and
ss
test
or
pop
or
xchg
fmuls
lea
daa
pusha
nop
loopne
iret
ds
push
mov
lods
pop
push
sbb
or
lcall
push
cld
incb
repz
add
adc
mov
scas
sbb
push
lods
mov
cmp
push
inc
outsl
lahf
fwait
out
mov
push
pop
mov
das
xor
lcall
dec
xor
push
adc
and
in
jnp
push
jmp
sub
sbb
mov
ficompl
or
mov
ret
lods
cmpsb
and
add
es
cmp
pop
outsl
icebp
mov
pop
or
lahf
adc
cmp
dec
pop
notl
mov
in
enter
dec
ficomps
arpl
adc
cmp
xchg
jbe
popa
push
dec
mov
jb
ja
out
push
imul
inc
enter
dec
add
push
jnp
clc
sub
bound
cmp
jno
int3
es
insb
jns
loopne
pop
mov
movsb
outsl
je
mov
popa
in
xchg
or
stos
rolb
out
jmp
sbb
sub
sub
push
jle
insl
adc
js
ret
dec
inc
iret
int3
int3
and
jo
adc
jne
push
add
outsl
pop
in
jle
fs
gs
jo
jns
iret
inc
add
insb
adc
pop
inc
mov
dec
outsl
insl
jne
int3
loop
mov
lret
xchg
or
addr16
cmp
and
push
inc
je
bound
dec
insl
gs
inc
insb
dec
clc
xchg
inc
popa
imul
inc
sahf
push
in
mov
aaa
xor
mov
add
xor
adc
sbb
dec
adc
sti
mov
inc
xadd
sbb
inc
cmovo
add
inc
mov
cmp
fisubrs
nop
jo
maxps
loopne
mov
scas
add
aad
xor
add
dec
and
inc
imul
add
add
sbb
idivb
cmp
shll
fnstsw
aaa
iret
shlb
and
daa
mov
xor
inc
push
pop
das
inc
add
mov
iret
js
pop
mov
mov
push
daa
les
enter
mov
cmp
lds
leave
seto
daa
xchg
jnp
sub
push
fs
mov
out
outsb
iret
adc
dec
fsubl
fildll
flds
add
push
sti
mov
leave
mov
pop
jle
mov
mov
fsubrs
xchg
clc
mov
lret
and
adc
outsl
add
lret
mov
add
leave
mov
add
nop
cwtl
fsubrl
xchg
lret
xor
lahf
fsub
push
adc
inc
inc
lahf
or
dec
adc
fidivl
and
xor
xchg
dec
bnd
or
js
and
js
iret
test
lods
add
enter
pop
enter
scas
sbb
or
aas
add
clc
es
add
inc
int3
push
push
loopne
negl
pop
push
movsb
das
inc
daa
xchg
cmp
mov
push
sbbl
daa
inc
sahf
or
addr16
push
aam
in
out
lock
mov
jae
aam
mov
int
in
out
xor
inc
push
nop
enter
mov
push
aas
ja
aam
jo
iret
test
and
dec
mov
xchg
outsl
in
mov
idivb
sub
push
in
mulb
cmp
inc
daa
lock
dec
inc
enter
shl
pop
test
loopne
nop
das
sbb
notl
repnz
mov
subb
add
je
fsub
inc
push
push
pop
pop
mov
sub
push
mov
push
in
pop
mov
sahf
jb
mov
xchg
mov
add
add
mov
pop
repnz
cld
add
aam
or
xor
ficomps
test
push
xchg
cld
imul
subl
sub
jmp
iret
lds
int3
out
pop
in
divl
aad
rclb
or
sbb
dec
in
mov
cmpsl
orb
cld
addr16
ds
rorb
fiaddl
mov
out
lcall
cmp
nop
mov
inc
sahf
or
cld
jb
dec
enter
in
outsl
inc
ds
pusha
cmp
dec
push
pop
imul
bound
bnd
mov
test
mov
pop
and
mov
iret
loopne
rcrl
push
push
shll
fcoml
sar
push
jg
or
xorb
daa
frstor
mov
cmpb
and
clc
scas
cmpsl
jae
pop
enter
fdiv
es
aam
push
dec
push
dec
fisubs
pusha
jg
mov
test
mov
test
jae
shl
hlt
mov
fbstp
in
and
xor
push
enter
push
xor
cmpsl
in
pop
sar
jg
and
js
in
push
repnz
fcoms
enter
js
int3
es
pop
fdiv
jl
dec
lahf
or
les
inc
push
and
cmpsl
stc
push
enter
mov
je
test
pop
enter
add
pop
repnz
aam
jae
pop
enter
adc
es
xlat
and
xor
lahf
clc
repz
pop
and
and
push
repnz
dec
fs
jae
pop
in
dec
lahf
fs
pop
repnz
enter
push
iret
test
js
stos
cli
es
adc
sub
movzbl
jg
hlt
mov
push
fcom
addr16
pop
out
nop
out
lods
mov
nop
fsub
lods
outsl
inc
ss
adc
add
adc
and
int
cmpsb
fldenv
cmpsl
jg
nop
testl
cs
hlt
js
addr16
cmpsl
push
fstl
addr16
sahf
enter
lahf
inc
icebp
mov
adc
or
sbb
movsb
inc
and
loopne
fisubl
loop
pop
jo
aas
cmpsl
nop
out
mov
cmpsl
sbb
mov
mov
fidivrl
push
cmpsl
repnz
enter
hlt
dec
leave
mov
add
ds
pop
jl
in
cmpsl
hlt
nop
dec
fldt
aaa
push
aas
pop
sahf
push
lods
mov
ja
rorb
cs
test
push
lods
sub
lock
test
clc
or
mov
rcll
out
adc
insb
mov
and
fsubrl
mov
jbe
or
lahf
dec
mov
inc
pushf
sbbl
fcoml
push
inc
sahf
or
push
jg
js
adc
lock
js
nop
iret
test
xor
mov
push
push
push
movsb
inc
mov
jg
int3
test
scas
lods
daa
addr16
lahf
int3
inc
jns
lods
sub
mov
clc
fstl
nop
or
rcll
fidivrs
ficomps
add
daa
rcl
xchg
nop
inc
ficomps
pushf
fdivrp
sbb
loop
push
jmp
jo
int3
fcompl
jo
int3
icebp
dec
enter
fildll
inc
fbstp
cwtl
inc
jg
lcall
mov
mov
ja
movsb
pusha
mov
rolb
rol
lea
jl
push
stc
adc
inc
jg
xor
mov
loopne
dec
cltd
pusha
insl
adc
sarl
fs
push
mov
fadds
pop
and
pusha
jg
pop
repnz
nop
mov
and
inc
mov
jl
loope
push
sub
imul
mov
pop
mov
jl
in
pop
daa
insb
lahf
mov
and
pop
sarb
shrl
inc
adc
decl
ds
sbb
sub
popf
adc
lahf
dec
inc
inc
sahf
ja
fs
add
or
in
mov
mov
mov
in
nop
mov
or
adc
mov
lock
jecxz
push
enter
in
sar
ja
adc
nop
mov
mov
lahf
pop
repnz
enter
lock
mov
in
inc
loopne
out
je
in
stos
xchg
pop
in
inc
xchg
inc
sahf
imul
outsl
aas
js
cwtl
add
in
mov
dec
sahf
mov
jns
mov
fdivr
into
adc
das
or
testb
fadds
xchg
cmp
repnz
pusha
mov
jb
enter
adc
aas
mov
sbb
xchg
adc
iret
add
call
lock
fiadds
loopne
out
popl
mov
fiaddl
mulb
movsb
mov
push
push
pop
daa
aas
bound
data16
pop
in
adc
mov
daa
pushf
fcoml
in
call
subl
xlat
out
lods
insl
mov
call
xchg
nop
out
or
push
push
dec
xor
aas
call
subb
ja
inc
lds
mov
outsl
in
jbe
mov
add
dec
aam
sahf
daa
mov
data16
movsl
push
pop
fcmovbe
data16
out
dec
cmp
push
jnp
dec
push
push
daa
aas
pusha
fdivs
fsubs
aas
add
fsubrp
add
ja
daa
sbb
leave
xchg
mov
dec
inc
pop
leave
xchg
pop
inc
cmp
sub
xchg
pop
leave
sub
outsb
pop
je
daa
push
pop
mov
cmp
mov
dec
push
stc
xor
iret
xor
icebp
mov
enter
out
cmpsl
add
es
push
and
lock
out
ds
mov
idivl
repz
out
push
dec
xor
ds
out
in
push
push
imul
push
je
pop
mov
and
scas
fsubrp
jb
stos
and
mov
xchg
iret
and
lock
in
dec
inc
cld
sub
aad
xchg
aas
dec
inc
jns
int
ss
fildl
adc
sarl
jmp
sbb
pop
leave
add
mov
sti
fidivrs
mov
push
clc
push
inc
out
cld
inc
or
inc
and
push
jmp
jbe
aam
mov
push
xor
ja
add
sbb
cltd
in
outsl
xchg
sti
inc
and
faddl
mov
jl
add
rcr
in
dec
outsl
xchg
or
leave
add
inc
loop
leave
pushf
inc
in
mov
das
adc
push
dec
in
fildll
or
leave
add
cmp
mov
cmp
inc
cs
cmp
fmuls
scas
push
xchg
pop
pop
scas
add
jmp
sub
outsl
out
mov
xor
fstp
xor
xchg
testl
out
push
sbb
call
push
movsb
out
mov
popa
dec
scas
add
insb
mov
ljmp
add
xor
sbb
dec
xor
out
xchg
popa
dec
sahf
out
out
outsl
add
sub
mov
sub
loop
pop
adc
into
js
and
js
cwtl
add
iret
jae
mov
jns
loop
add
push
sbb
xchg
or
shl
lahf
mov
scas
dec
jg
lds
ja
out
xchg
or
push
jg
xchg
sub
mov
loopne
test
fimuls
icebp
pop
leave
mov
outsl
add
pusha
in
or
add
and
lock
fdivrp
and
pop
enter
and
cwtl
pop
scas
add
pusha
pop
outsl
out
xchg
add
cmpsl
mov
repnz
add
xlat
xor
in
push
xchg
addr16
shlb
stc
out
add
fisubrs
divl
insb
jnp
call
push
fsubs
push
jbe
aaa
jmp
call
loopne
in
jge
mov
hlt
xchg
push
cwtl
test
jg
push
pusha
repz
loop
and
loopne
xor
nop
push
repz
ret
pop
sbb
jecxz
add
js
xchg
sbb
leave
cmp
pcmpeqd
lock
pop
sti
xchg
mov
outsl
push
push
push
mov
loop
pop
movsb
push
hlt
daa
mull
shlb
push
or
push
xor
scas
push
cmp
fisubl
scas
pop
testb
mov
dec
cmp
xchg
clc
loope
loope
sub
mov
shll
pop
or
addb
sbb
push
xlat
sbb
push
sbb
xchg
dec
mov
in
loop
idivb
add
xlat
imul
push
clc
mov
cmc
dec
pushf
sbb
inc
divl
and
popf
sub
pop
fdiv
pop
in
cmc
push
or
aaa
and
push
xchg
add
testb
imulb
xor
mov
aaa
mov
test
loopne
ja
cmpsb
mov
xor
popf
sbb
outsl
addr16
or
pusha
neg
and
scas
mov
insl
add
pop
xor
in
addb
mov
iret
in
mov
and
jg
addr16
out
cs
push
add
mov
bound
mov
fdivp
adc
push
faddl
mov
and
or
loop
push
lods
pop
in
sub
mov
cmp
ss
push
nop
orl
add
jnp
inc
dec
xchg
pop
enter
and
xlat
add
iret
int3
pop
sbb
pop
cli
daa
or
add
fiadds
in
cwtl
repz
repz
xchg
add
call
mov
in
outsl
mov
or
fldt
aas
add
sub
cli
cmpsl
aaa
or
mov
jge
fdivrs
sti
pop
leave
mov
das
outsl
add
enter
or
sub
movsb
mov
sub
xchg
add
push
xor
add
add
sub
cld
call
insb
jo
cld
pop
scas
add
sbb
push
insb
outsl
xchg
ret
out
popl
or
lcall
addr16
loopne
xor
sbb
or
out
and
daa
or
pop
and
cmp
insl
outsl
and
std
addr16
jl
pusha
stos
sarb
addr16
in
pop
daa
lods
int
movsb
in
push
jl
fs
aam
addr16
xchg
hlt
std
push
dec
notl
lahf
test
mov
push
inc
xchg
inc
inc
and
adc
inc
xchg
nop
out
out
push
nop
mov
aaa
jo
iret
test
rol
loopne
add
mov
adc
and
xor
push
enter
ja
imul
jnp
jl
les
clc
ja
scas
inc
js
call
sar
aas
in
sbb
adc
add
dec
cmpsl
fldcw
jb
jae
xchg
loopne
xor
push
test
in
adc
int
jns
jecxz
mov
pop
imul
out
mov
inc
je
mulb
mov
push
jnp
shl
pop
mov
iret
roll
rcrl
mull
mov
push
fmuls
xor
out
cmp
sti
push
nop
insb
cmp
sarl
xor
jns
iret
repz
xor
sahf
out
jmp
xchg
jae
sti
cmp
cwtl
mov
pop
xchg
out
push
inc
stc
cmp
repz
mov
mull
xchg
repz
cmpsl
pop
jne
rcll
imul
xchg
sub
sti
push
cwtl
inc
xchg
sahf
out
cmp
filds
inc
cmpb
lcall
push
fwait
ss
pop
pushf
stc
cmp
rcrl
mov
lahf
cmpsl
pop
sti
and
sahf
out
lahf
jno
in
mov
inc
mov
cmc
sub
out
lcall
pop
dec
mov
cmp
push
mov
sahf
cmpsl
stc
cmp
sub
dec
repz
push
cmpsb
push
jp
jns
iret
repz
das
cmpsl
mov
push
test
mov
out
test
imul
in
es
pop
jl
imul
push
lods
jno
out
xor
icebp
xor
fistpll
dec
lods
or
add
xor
mov
ds
shrl
mov
jl
out
fcomi
and
iret
ljmp
ja
sti
es
push
add
lcall
push
jns
dec
repz
in
ds
repz
movsb
cmc
sub
fstps
push
imul
loop
shlb
lahf
out
out
shrl
lcall
cmpsb
out
xor
stc
dec
ret
mov
inc
les
ja
shlb
push
out
ds
scas
and
stos
into
in
repz
and
pop
mov
or
out
lret
push
mov
cmp
out
jne
int
into
outsb
mov
sahf
out
ljmp
cmp
repz
dec
jb
fcomp
jge
out
rcll
jnp
jbe
adc
sahf
out
xor
scas
or
inc
xchg
cmp
repz
or
xor
cmpsl
stc
adc
push
sub
push
jns
iret
repz
fdivrs
repz
fnstcw
repz
out
or
push
mov
fnstcw
add
xchg
repz
cmpsl
roll
fists
mov
push
in
aad
out
fldl
xchg
or
fstps
in
or
xor
insb
ds
rep
movsl
cmc
inc
testb
data16
stc
pop
sti
jecxz
or
xchg
imul
add
adc
pusha
out
add
lahf
in
sbb
fcmovne
nop
push
inc
xchg
push
aas
xor
fists
cmp
aas
cs
and
or
adc
sbb
xor
mov
jns
andl
push
int
inc
pop
mov
pop
xor
fwait
insl
das
insl
rcl
pushf
push
xchg
aas
test
test
dec
cmpsb
sub
test
mov
subl
inc
es
mov
pop
mov
inc
cmp
aas
packuswb
out
lds
jbe
sub
jns
imul
incl
push
inc
jno
in
roll
shl
inc
cmp
push
mov
pop
je
pop
inc
das
lcall
cltd
push
inc
or
ss
and
inc
shl
jmp
pop
xor
daa
fimull
dec
jg
dec
fimull
data16
in
out
ss
sbb
xlat
cmc
push
inc
pop
pop
jo
daa
nopl
or
nop
add
add
aam
push
push
jo
or
pop
sub
imul
xor
enter
adc
and
add
mov
lods
push
lahf
xchg
adc
xchg
ja
js
in
cmpsl
xchg
or
mov
aas
sbb
mov
push
pop
mov
popf
inc
jbe
lea
jl
es
inc
jne
or
and
les
sbbl
jno
inc
xchg
notb
cwtl
xlat
pop
inc
leave
addr16
popf
pop
jle
pop
inc
sarb
xchg
xchg
hlt
inc
sbb
dec
add
sub
inc
pop
xor
dec
ja
and
daa
inc
scas
mov
xchg
push
push
dec
sub
ja
insl
and
iret
ja
fildl
fcoms
push
jb
jo
cmp
jp
add
mov
aaa
test
adc
fildll
pushf
dec
fabs
push
ficoml
mov
push
sub
jg
daa
cmp
lea
in
pop
jb
hlt
push
mov
mov
sahf
sub
in
cmp
inc
inc
das
jmp
fistl
adc
push
shlb
jb
loop
in
push
popl
and
cmp
cmovs
mov
out
pop
xchg
scas
dec
daa
insb
mov
out
mov
leave
xchg
mov
sbb
dec
xchg
xchg
push
fistps
shlb
das
inc
testl
inc
adc
call
push
andl
mov
push
mov
mov
sbb
mov
and
pop
and
rolb
dec
push
leave
xchg
bound
sbb
mov
out
add
xchg
mov
push
cmp
leave
and
iret
jmp
mov
add
outsb
sub
pop
jmp
push
dec
hlt
and
adc
and
dec
or
addr16
jbe
sub
push
xlat
push
push
in
insb
add
leave
leave
xchg
sahf
mov
daa
aam
add
or
data16
cmp
cmpsb
fstpl
sbb
pop
add
in
shrl
and
lar
es
push
jo
mov
adc
mov
daa
jbe
jle
pushf
pop
and
add
mov
pushf
mov
mov
pushf
in
mov
in
cmpsl
cmp
in
hlt
cld
add
or
pop
and
sbb
lea
fstl
aas
lea
push
nop
out
mov
mov
lods
pop
ja
add
jb
rcrl
push
jne
jns
add
ffreep
jns
out
or
or
mov
mov
mov
or
sbb
jmp
dec
aaa
inc
push
jg
daa
push
pop
in
in
jbe
punpckhbw
mov
mov
ret
pop
xchg
pushf
adc
repz
mov
ret
jp
cmp
add
push
push
inc
fs
adcb
leave
pop
out
nop
push
scas
xchg
dec
cmpsb
in
and
enter
nop
call
jno
dec
jb
push
daa
inc
mov
rcr
pushf
inc
cmpsl
mov
mov
in
aad
loop
in
rclb
repnz
testl
cmp
push
nop
push
nop
sub
cmp
call
nop
out
pop
das
enter
arpl
pop
dec
sbb
push
daa
pop
xchg
pop
dec
mov
xchg
inc
nop
jb
pusha
adc
jns
ja
ret
add
add
and
jg
testl
movb
inc
xchg
bound
pop
repnz
or
dec
jb
jns
sbb
xchg
pop
je
pusha
stos
inc
push
dec
addr16
pop
int
lcall
daa
jg
mov
daa
in
mov
xchg
rcrb
sbb
cmc
xchg
xchg
fsubl
jb
xchg
je
push
adc
sbb
in
sbb
outsl
aas
inc
cs
fadds
clc
add
mov
pop
fnstsw
mov
mov
add
sub
shl
xchg
fbstp
leave
aam
mov
sbb
adc
push
daa
push
shll
push
push
jg
xchg
pop
sbb
fsubl
xchg
sbb
xchg
pop
arpl
xchg
push
sbb
ja
sbb
enter
sbb
sbb
inc
dec
leave
pop
adc
add
daa
xchg
add
and
into
xchg
and
mov
inc
push
add
sbb
push
icebp
push
aaa
mov
outsl
add
mov
mov
and
adc
and
pushf
or
jnp
push
scas
xor
pop
test
leave
xchg
jl
mov
ret
add
addr16
or
mov
push
movsl
add
push
mov
xchg
in
rcrl
into
dec
push
mov
xchg
sbb
jb
iret
jo
inc
dec
push
mov
push
xchg
call
and
jns
add
add
movsb
pop
pop
dec
pop
cmp
and
pusha
add
and
cwtl
xchg
or
pop
jmp
imul
pop
xchg
add
sahf
out
sahf
add
add
lock
pop
inc
dec
xchg
inc
or
in
inc
repnz
jb
out
shrl
push
add
fsubrl
xchg
jo
mov
mov
cli
ja
iret
and
xchg
fdivs
ja
icebp
inc
xchg
iret
push
pop
jne
xlat
jno
push
in
mov
cmpsb
addr16
pop
loop
enter
mov
cwtl
mov
add
in
in
pop
pop
adc
push
jns
mov
jo
iret
mov
xlat
mov
shrl
rclb
cltd
cld
adc
sub
adc
imul
scas
push
and
dec
das
xchg
imul
lcall
xlat
cltd
or
addr16
pop
lcall
test
jbe
daa
mov
and
in
push
cs
pop
jb
dec
mov
mov
jb
add
ss
push
jae
inc
pop
xchg
pop
ja
cmpsb
xlat
in
iret
jns
pop
enter
pop
inc
sbb
jb
aaa
pushf
das
push
sub
jns
push
iret
jo
call
xchg
es
pop
and
rorl
daa
push
daa
and
cmp
and
test
shll
daa
aas
aam
sub
mov
push
xchg
jnp
aaa
lar
adc
pop
cmp
popf
xchg
sub
nop
daa
popf
stc
cmp
jnp
inc
xor
add
jns
clc
xlat
pop
cmp
add
adcb
jg
aas
fs
popf
popf
popf
fs
popf
popf
popf
pop
pop
jb
paddsw
roll
or
pop
ljmp
push
pop
add
test
addr16
ja,pt
pushf
sbb
pusha
sub
push
out
in
pop
dec
jo
xchg
lcall
lahf
mov
cmpsl
test
mov
subl
cmpsb
lahf
imul
ja
push
jbe
cmp
comiss
cmovnp
mov
cmp
push
push
add
loopne
jnp
sub
xchg
lahf
das
mov
pop
aaa
scas
mov
lret
dec
dec
xlat
sar
mov
sbb
out
xor
sub
pop
inc
lcall
push
cs
dec
addl
mov
mov
paddsw
fmuls
mov
pop
dec
and
inc
sub
mov
mov
push
pop
mov
inc
jae
inc
ja
jbe
jecxz
ror
out
shrl
fsts
add
mov
push
cmp
inc
mov
jbe
ja
sub
dec
js
ja
inc
out
jns
add
sbb
cmpsl
push
pop
popf
xchg
xchg
add
out
out
pop
dec
dec
sahf
out
add
push
mov
loopne
mov
dec
ja
xor
add
pushf
cmp
pop
push
mov
out
pop
jae
jle
das
xchg
testb
stos
das
repz
cmp
mov
or
lret
push
pushf
cmp
leave
loope
in
div
sbb
lock
movsb
adc
cs
faddl
iret
addr16
addr16
sub
fbstp
or
mov
popf
shld
lods
add
mov
in
das
shlb
scas
data16
scas
icebp
push
idiv
pop
add
enter
adc
xchg
andb
inc
movsl
movsb
add
dec
xchg
pushl
pop
adc
lea
in
inc
mov
push
orb
jg
scas
icebp
in
push
cmpsb
decl
cmpsb
mov
xchg
xor
fildl
push
jb
aam
inc
xchg
sbb
lock
ss
pop
sub
scas
je
adc
scas
stos
arpl
xor
and
lea
fsubrs
xlat
shll
in
add
rol
dec
add
xor
enter
xor
loop
cmpsl
xchg
cmpsl
daa
cmpsl
mov
stos
aam
xor
dec
pop
out
fmull
pop
bound
add
outsb
mov
push
fistpll
iret
or
adc
js
inc
fstpt
dec
xor
cmp
sub
adc
mov
push
addr16
sub
add
daa
iret
repz
cmp
test
pop
adc
jb
test
aaa
outsl
test
insl
leave
sub
ja
addr16
xor
xor
xor
rorb
ss
mov
push
pushf
cmp
push
testl
test
inc
test
js
mov
addl
popf
mov
rcrb
pop
les
sahf
pushf
pushf
pushf
fsub
cmc
add
and
das
pop
stos
subl
pushl
popf
daa
lcall
inc
int
aad
fstl
mov
and
or
stos
daa
daa
pop
insb
fs
inc
dec
fisubl
je
int
fcoms
iret
xchg
cmp
xor
scas
or
shlb
popf
pop
pop
pop
ljmp
xchg
stos
cli
stos
add
sahf
adc
sbb
or
out
sub
or
or
inc
push
dec
push
adc
out
pop
bound
push
out
fucom
jb
adc
xor
xchg
orb
into
mov
mov
aaa
lock
xchg
out
inc
sti
das
iret
cmpsb
add
inc
dec
and
push
cmp
lods
push
lods
ss
lods
seto
cltd
mov
movsl
jmp
repnz
sbb
mov
jp
scas
aaa
cmp
add
sahf
pushf
push
pop
scas
mov
js
dec
mov
xchg
dec
xor
fdivrl
add
imul
fstpl
pop
mov
dec
xchg
cmp
mov
leave
or
mov
cmp
psubsw
cmovle
add
outsl
jns
jmp
sub
aas
sti
push
rcll
mov
ret
jp
and
inc
aas
pop
cmc
in
pop
dec
or
pop
push
js
out
or
push
pusha
adc
xchg
dec
adc
sub
pop
push
bnd
add
lock
pop
adc
pop
daa
scas
out
fisttpll
push
add
mov
out
or
add
nop
pop
ja
js
outsl
cmp
mov
jne
jns
outsb
mov
pop
xchg
pop
lcall
cmp
mov
testl
mov
cmp
scas
add
daa
pop
xchg
fmul
ljmp
es
mov
push
add
nop
xchg
xchg
mov
mov
stc
add
xor
cmp
pop
cmpxchg
insl
push
add
jmp
mov
iret
cltd
push
mov
cmp
or
dec
xor
in
mov
cmp
add
push
iret
repz
daa
push
add
add
cmp
repz
add
cmp
repz
jl
mov
or
cmp
fwait
or
sbb
insb
cs
mov
daa
lock
clc
das
add
loopne
sahf
xor
ficoml
aam
ds
fistps
and
cmpsl
in
in
mov
ds
mov
jl,pt
mov
mov
ljmp
dec
cs
lahf
jb
and
iret
in
in
incl
mov
jb
mov
shrd
popf
xchg
mov
xor
repnz
and
mov
call
dec
add
mov
mov
mov
mov
push
pop
xchg
add
mov
mov
add
push
lods
fisubl
fdivs
pop
dec
jecxz
xlat
push
outsl
mulb
incb
int3
js
cmpsl
sub
add
outsl
in
fucomp
outsl
mov
ja
ja
jp
mov
mov
xchg
mov
decb
test
in
add
sub
lock
xor
shll
sub
iret
fbstp
inc
inc
paddq
inc
cmovb
vmwrite
or
scas
sub
dec
rorl
dec
adc
fs
out
mov
add
cmpsb
xchg
pop
mov
ja
pop
cwtl
inc
test
mov
xchg
out
lahf
pop
cmpsl
fucomi
in
add
mov
mov
mov
loop
je
loopne
lahf
add
xchg
xchg
xchg
mov
mov
mov
xor
xchg
push
mov
pop
bound
ja
leave
leave
inc
mov
inc
jb
rcr
fsubrl
call
xchg
repz
add
es
mov
shll
insb
xchg
xchg
push
out
mov
dec
ja
mov
mov
mov
popf
xchg
xchg
cltd
out
das
lret
push
add
pop
jecxz
rorl
mov
test
cmp
and
ss
push
inc
js
in
mov
sahf
out
popf
test
add
mov
fcmovne
leave
inc
std
in
xchg
test
inc
lret
or
mov
fdivl
das
jg
popf
pop
mov
test
dec
aaa
lsl
cs
mov
lahf
fcmovne
in
testl
mov
mov
jbe
mov
leave
in
in
insl
vmread
cmp
cltd
pop
repz
cmp
movsb
or
leave
mov
fldt
in
sahf
outsb
femms
out
icebp
xchg
cmp
lock
mov
xchg
push
js
mov
xchg
cmpsl
fisttpl
das
inc
cmp
xchg
dec
push
pop
pop
addr16
stc
int3
jo
movq
sahf
fldt
ret
xlat
stos
btr
sbb
jns
fcoml
mov
and
sub
add
add
iret
rep
fstpl
pop
pop
or
push
daa
mov
lahf
and
mov
mov
xlat
addr16
pop
pushf
pop
int3
aam
fucomip
icebp
and
xchg
sbb
test
out
fisubs
pcmpgtd
cmp
xchg
jl
add
push
sarb
pop
mov
ret
in
testl
sti
and
wrmsr
sub
inc
mov
pop
push
add
mov
dec
pusha
mov
cmpsb
ret
mov
or
pop
pop
jae
jno
push
aas
push
iret
into
cmpsl
push
outsl
daa
pop
leave
mov
stc
invlpg
daa
or
sbb
fmull
ja
insl
mov
inc
cmovl
dec
xchg
fildl
xlat
jmp
in
mov
daa
stos
pop
cmp
iret
jae
add
js
lret
pop
fcmovbe
or
leave
inc
repnz
cmp
add
adc
xchg
adc
or
xchg
inc
rorb
daa
mov
xchg
pop
xchg
orl
xchg
push
pop
mov
sahf
add
cmp
ficoms
call
jbe
mov
push
add
and
push
out
sub
mov
leave
arpl
rcrl
jmp
outsb
daa
daa
pop
das
xchg
lahf
xchg
ret
shl
fcmove
rcr
xchg
xchg
sub
insl
ja
ret
pop
js
in
xchg
ja
addr16
xlat
es
arpl
addr16
in
inc
pushf
mov
fistps
add
mov
jnp
outsb
push
aas
push
jg
std
mov
loope
psubsw
xchg
out
pop
icebp
or
fidivs
xor
mov
sub
dec
movsb
cmp
insl
lods
ja
or
in
in
addl
xchg
test
leave
leave
ror
cmpsl
push
sahf
pop
and
sub
addr16
add
and
cmp
repz
les
pop
adcb
mov
push
jb
mov
sahf
mov
add
out
add
cs
sbbl
or
inc
add
or
adc
xlat
sbb
js
push
push
cvttps2pi
xchg
daa
and
fimull
dec
lds
push
add
test
pop
xchg
fwait
shld
daa
mov
rol
leave
out
jl
jns
rorl
call
xchg
cld
pop
mov
call
sbb
mov
fldt
rdpmc
out
ds
out
push
jns
ja
aas
pop
imull
or
repnz
orb
add
fnsave
int3
pop
push
pop
bswap
xchg
scas
push
ja
addr16
add
xchg
pop
push
inc
push
sbb
mull
out
jecxz
push
scas
push
add
out
pushf
xor
pop
clts
fcomi
jecxz
inc
pop
das
push
rep
daa
iret
or
insb
mov
leave
test
es
and
leave
mov
jmp
imulb
add
inc
dec
cmp
pop
enter
movsb
jl
adc
lahf
pusha
push
inc
aam
jno
inc
push
pushl
scas
add
push
fidivrs
cwtl
or
push
out
mov
push
fbstp
mov
jp
or
ss
enter
xchg
outsl
sub
jmp
dec
icebp
pop
stc
pop
add
dec
in
xor
or
pop
adc
cmp
leave
mov
addr16
mov
js
sahf
sarb
lahf
call
pop
cwtl
sgdtl
stos
jp
repnz
gs
push
pop
pop
and
push
pop
push
bound
xchg
daa
mov
comiss
aas
lret
dec
adc
bound
cmp
add
out
add
repz
inc
cs
or
iret
repz
or
or
or
bound
fdivrl
cmovo
dec
and
out
push
xchg
pop
arpl
adc
cmpl
mov
push
scas
xchg
lret
mov
xlat
pop
pop
je
or
lret
adc
jns
xchg
push
add
addl
pop
inc
repnz
xor
insb
pop
rolb
sub
pop
int3
out
loope
in
sbb
add
sub
scas
add
sbb
test
fbstp
pop
out
fldt
stos
iret
mov
rcrb
out
sahf
lret
add
add
cmp
in
test
iret
repz
or
cs
repz
cmp
inc
setle
fldcw
dec
int
adc
sahf
out
adc
jnp
out
sahf
out
adc
out
sahf
pop
cmpsl
sbb
in
sbb
prefetcht1
daa
daa
daa
daa
push
adc
daa
daa
adc
adc
adc
daa
daa
push
or
sub
sti
data16
sub
push
dec
test
mov
das
stos
nop
nop
pop
or
add
inc
jb
sti
aam
inc
daa
adc
fnsave
in
into
ds
inc
push
testl
pop
aaa
in
pusha
add
daa
pop
out
imul
daa
or
pop
test
mov
xchg
xchg
push
pop
xchg
mov
pushf
dec
dec
loopne
ror
mov
xchg
inc
iret
and
iret
push
mov
iret
pop
filds
leave
sub
adc
leave
pop
je
push
cmp
jmp
sahf
mov
xchg
iret
sub
mov
iret
movsb
iret
jmp
iret
xchg
xchg
adc
sbb
addr16
repnz
xchg
or
push
add
les
iret
test
outsl
pop
sub
mov
pop
adc
popf
shlb
mov
rcrb
cmp
pop
out
repz
je
and
shl
repnz
ficompl
addr16
rcll
insl
jb
pop
dec
shrl
mov
in
pop
jno
jp
rolb
rol
jmp
subl
cmpsl
mov
xchg
add
rcrl
into
push
push
out
add
fisttps
rclb
shlb
shlb
rcr
xor
mov
sarb
pop
cmp
out
cmp
dec
push
or
push
or
es
repz
imul
int
xor
push
adc
pop
and
pusha
addr16
cmpsb
add
daa
scas
sar
popa
jo
cmp
out
sub
fcomip
std
iret
or
push
orb
mov
add
add
or
pop
repnz
pop
push
cmp
inc
ror
repz
push
add
pop
jge
jns
arpl
add
xor
loope
or
adc
jl
push
leave
loopne
mull
xchg
rcr
sbb
bound
test
sbb
rcrl
psubsw
mov
outsl
pop
mov
xadd
adc
mov
aam
leave
out
cmp
and
insl
ja
daa
daa
jne
jne
pop
lea
add
mov
mov
xchg
pushf
pushf
pop
add
in
loopne
dec
mov
xlat
aad
rcrl
das
sqrtps
jmp
mov
fcmovne
inc
dec
addr16
ja
aam
xchg
rcrl
pop
dec
hlt
push
cld
xchg
cmp
mov
ja
daa
or
loop
sbbl
and
push
add
inc
sbb
cmp
and
sbb
ss
scas
aaa
push
icebp
in
aaa
jl
cmp
sbb
xchg
test
dec
add
pop
cmpsl
scas
repnz
push
push
mov
pop
add
imul
xlat
packsswb
fists
out
mov
push
or
adc
add
push
push
sbb
and
out
call
xchg
inc
dec
xlat
xchg
mov
xchg
mov
xchg
js
fwait
fwait
jo
mov
add
sub
pop
push
and
lahf
out
loope,pt
psubusb
add
adc
sub
aas
setae
dec
push
cmp
jns
pop
or
jno
adc
fdivrs
push
cmp
fsubrs
in
fsubrs
pop
outsb
mov
loope
pop
xrelease
push
push
push
pop
jle
fmull
scas
push
aas
fnstenv
sbb
mov
push
aas
fldcw
mov
packsswb
mul
es
or
aas
unpckhps
dec
lock
aas
sets
stc
mov
mov
xor
daa
daa
pop
sbb
loop
repnz
pusha
imul
addr16
mov
push
and
cmp
sub
push
lock
xchg
pop
test
clc
pop
xchg
ja
xchg
or
or
push
test
push
or
loope
cmpsl
pop
in
loopne
lahf
insl
mov
jo
add
leave
jae
mov
push
les
add
outsl
add
adcl
imul
and
dec
ja
or
leave
in
jae
imul
jb
scas
cmpsl
fidivrl
xchg
jecxz
repz
ljmp
loope
aaa
lahf
push
fdivrl
fcompl
fdivl
push
add
add
pop
jns
fcompl
push
push
in
dec
pop
add
jns
out
add
or
out
outsb
adc
adc
jle
out
adc
out
inc
insb
push
add
out
ja
insl
in
in
test
ja
cmc
pop
pop
pop
sarb
add
xchg
out
or
bnd
and
or
mov
push
pop
addps
jns
mov
push
fucomi
mov
fnstsw
mov
js
xchg
out
jo
jns
ja
seto
cwtl
push
adc
out
adc
pop
jb
call
inc
sahf
add
or
push
adc
jae
mov
and
sub
in
es
cmp
and
mov
dec
push
push
es
pop
out
movaps
repz
dec
sub
js
cmp
repz
sub
fcmovne
repz
cwtl
mov
inc
sahf
pop
lahf
xor
pop
fidivs
ss
sub
pop
mov
ljmp
shll
test
push
int3
push
daa
and
shr
add
popf
dec
scas
add
jo
fistpll
and
pushf
ja
fildll
xor
cmp
jne
out
jb
jg
xchg
xchg
add
cwtl
mov
dec
enter
loopne
inc
jo
leave
in
pop
setle
jmp
das
push
testl
adc
in
in
or
cs
cmp
repz
inc
cmovg
in
daa
ja
adc
sahf
adc
cmp
repz
push
fstl
call
sbb
sbb
loope
out
sahf
out
sbb
sub
xor
inc
pop
dec
jns
out
and
push
out
and
jns
and
mov
jb
enter
loope
loope
loope
inc
mov
loope
loope
loop
dec
sahf
out
push
das
push
xor
ss
into
into
fidivrs
inc
loop
dec
loop
push
loop
into
mov
loop
orl
sahf
out
sahf
mov
cltd
and
out
scas
and
sahf
out
shlb
fistpl
sahf
out
sahf
out
icebp
sbb
and
scas
pop
jecxz
push
sbb
sbb
cmp
pop
xor
repz
repz
dec
dec
push
dec
iret
repz
pop
dec
push
ja
es
fwait
cmp
sqrtps
fdivrl
jle
pop
dec
cmovp
repz
pushf
adc
cmpsl
pop
mov
shrl
dec
xlat
push
push
mov
jns
loop
in
mov
fwait
pop
push
bound
jno
rcrb
xchg
or
inc
gs
push
sahf
out
sahf
add
add
sahf
out
pop
lea
lcall
or
sahf
or
or
repz
paddsb
notb
jns
dec
inc
pop
outsl
or
adc
jns
out
push
adc
jns
xor
cmp
dec
sbb
out
push
sbb
push
jns
out
ja
sbbl
mov
xchg
and
jns
mov
mov
outsb
mov
rorl
jmp
add
pop
out
femms
iret
repz
push
sbb
iret
repz
xor
cmp
repz
repz
adc
push
repz
rorb
ds
or
repz
push
jb
jge
sbb
icebp
cmp
or
out
out
jns
inc
push
push
ds
dec
jp
dec
inc
mov
pushf
ljmp
repz
mov
add
out
vmwrite
outsb
cmpl
add
adc
push
pop
and
outsb
repnz
or
sub
xor
cmp
repz
inc
push
dec
repz
rcpss
pop
adc
fcmovne
arpl
jae
jnp
jb
cmp
mov
daa
iret
sbb
pop
leave
out
nop
jbe
out
xchg
cmp
fwait
popa
lock
or
add
leave
rep
push
push
rdtsc
push
add
fildl
dec
push
das
pop
popa
daa
daa
daa
daa
imul
cmp
mov
xchg
mov
push
adc
leave
leave
leave
enter
cmpsb
leave
leave
leave
call
jnp
data16
adc
sbb
push
xor
iret
jmp
xchg
ja
pop
pop
leave
rep
lods
dec
push
add
sahf
xchg
jg
add
cmp
mov
fucom
jns
or
xchg
out
leave
push
push
rcr
dec
loope
in
in
push
adc
icebp
psubw
loopne
ljmp
jb
and
das
ljmp
lea
outsl
pop
ljmp
jne
iret
jae
jnp
sahf
ja
mov
scas
jns
out
push
mov
dec
sahf
out
adc
sti
clts
jmp
mov
cltd
aas
adc
pop
sbb
daa
pop
xor
out
sbb
out
jns
pop
imul
xchg
in
dec
sahf
and
dec
sahf
out
and
leave
in
in
in
psubb
in
sahf
out
fs
sbb
das
dec
icebp
in
das
cmp
outsl
xor
loop
repnz
in
pop
jns
dec
push
xchg
or
pushf
cmpsl
push
sahf
out
sahf
add
ret
xor
lahf
mov
aam
dec
sahf
ja
fsubrp
push
or
clc
jb
adc
or
daa
iret
jae
sbb
adc
xor
in
outsb
pop
cmp
inc
dec
sahf
xlat
dec
sahf
sbb
sbb
pop
sbb
nopl
xchg
jl
push
mov
jnp
pushf
je
xchg
pop
shrd
pushf
iret
xlat
fucomip
insl
in
sbb
in
out
in
cli
das
sub
jl
xor
out
sub
xor
in
in
ds
add
dec
push
fs
cmpsl
imulb
fistpll
mov
es
repz
mov
fcmovne
jmp
or
sarl
loope
jmp
adc
out
pop
jbe
or
pop
push
push
push
and
palignr
sbb
sbb
cmp
repz
sub
sbb
iret
push
push
mov
pop
outsw
mov
push
lahf
mov
mov
fisttpll
inc
fists
pop
out
fdivl
mov
sub
sub
iret
repz
push
sub
das
stos
cmp
repz
mov
shlb
jns
repz
xor
xor
out
cmp
in
sahf
ss
aaa
add
cmp
cmp
aas
iret
repz
int
fdivrs
ror
cmp
aas
out
stc
scas
cmp
xor
icebp
cmovae
inc
repnz
repz
jns
in
jbe
das
push
dec
bound
adc
scas
cs
out
js
mov
add
dec
xchg
mov
sbb
jg
dec
jge
jg
sbb
test
stos
icebp
xchg
jns
mov
shl
int3
push
add
jns
out
add
inc
dec
sahf
pop
cli
add
or
cmp
sub
dec
pop
push
push
dec
subps
repz
adc
je
sbbl
movsb
leave
repz
dec
scas
mov
xchg
xchg
fcmovnbe
pand
repz
sahf
ja
fstl
pop
or
and
inc
dec
repz
mov
mov
out
push
mov
nop
repz
push
mov
sbbl
iret
shrl
addr16
jmp
jnp
sahf
cmp
add
or
push
fnsave
leave
pop
and
lahf
pop
cmp
jns
out
or
or
jns
pop
pcmpgtd
jl
fucom
jns
adc
jns
out
push
popf
push
test
mov
mov
leave
cs
in
daa
iret
sbb
ljmp
fsts
vmwrite
push
and
sub
and
sub
out
cmpsb
getsec
pop
inc
cs
dec
sub
sub
je
push
sub
setp
jp
insb
pop
fbstp
nop
adc
cwtl
test
cmc
out
xchg
and
testb
add
dec
sahf
push
sbb
aas
sub
jg
negb
pop
xor
dec
sub
jg
or
jae
add
je
movzwl
mov
sahf
out
push
or
or
or
cmp
in
prefetch
or
ljmp
testl
push
adc
sbb
es
pop
sahf
out
filds
push
ds
inc
sbb
stc
jns,pn
sbb
or
pop
cs
out
ficomps
push
ja
orb
jns
lea
lcall
and
out
and
fnsave
fisttpll
pop
scas
inc
mov
cmp
imul
cmp
sbb
adcb
daa
cmp
out
les
jg
scas
push
add
cmpsl
push
add
out
dec
dec
mov
pop
into
sahf
out
sahf
or
or
or
fwait
lret
or
mov
dec
fimuls
cvttps2pi
cmp
repnz
dec
jns
leave
repz
push
adc
cmp
mov
xchg
sbb
sbb
cmpsl
mov
cmpsl
test
push
or
out
cmp
sbb
pop
fs
cli
push
pop
daa
dec
aaa
jns
wbinvd
inc
dec
cmp
in
or
push
or
repz
insl
js
orl
cmp
in
push
adc
sahf
fcmovne
repz
sbb
out
leave
sbb
sbb
cmp
out
loope
jmp
cmp
outsb
add
or
sbb
lock
and
sti
and
push
cmp
pop
iret
fwait
jecxz
pop
packssdw
jbe
add
cmp
mov
xchg
mov
push
or
cmp
xchg
pop
lcall
femms
fpatan
cmp
repz
adc
adc
jecxz
cli
add
sbb
das
xchg
xchg
xchg
aaa
es
adc
push
cmp
repz
cmp
dec
popf
cmp
repz
sbb
xchg
out
pop
jne
cld
jg
cld
jns
xchg
lcall
jns
out
and
push
fdivr
pop
sub
xchg
je
enter
mov
daa
pop
in
or
jg
std
and
ficompl
pop
ss
inc
ds
push
cmp
das
mov
pop
daa
add
xchg
cmpsl
mov
mov
daa
daa
daa
mov
int
sahf
fcmovne
rorl
add
or
jns
or
syscall
daa
iret
repz
or
or
xor
push
pop
pop
adc
cmp
push
sahf
out
sahf
mov
loope
in
sbb
add
out
or
sahf
out
sbb
and
out
pop
pop
and
cmpsl
into
leave
repz
and
sahf
fwait
pop
lret
es
daa
dec
aaa
jns
loope
in
mov
or
leave
pop
mov
jge
pop
inc
das
or
xor
pop
xor
jns,pn
leave
repz
inc
push
ss
iret
ret
jae
pop
push
sahf
xchg
cmp
mov
lgs
cmp
daa
lret
aas
scas
incb
aaa
xchg
jl
mov
out
call
add
xchg
out
dec
call
repnz
add
push
mov
sub
daa
iret
jae
or
dec
das
pop
jns
out
pcmpgtw
adc
jnp
daa
iret
cmp
das
test
lfs
pop
mov
jbe
aad
loop
in
cli
mov
dec
repz
sbb
es
iret
repz
xor
orb
cmp
pop
xchg
bswap
repz
mov
sub
mov
ret
sub
repnz
cltd
pop
cmp
cs
das
push
jns
sahf
ja
push
xor
xor
jns
in
int
xor
fucomi
in
out
psubd
lds
xchg
pop
dec
and
and
pop
add
or
ficomps
sbb
xlat
outsb
pop
push
fbld
dec
dec
out
dec
fistpl
lsl
pcmpeqw
jmp
add
adc
sub
xor
ja
mulb
mov
pop
add
inc
es
insl
and
cmp
dec
cmp
push
pushf
pop
aaa
ret
pop
adc
xor
pop
dec
dec
mov
sbb
test
mov
push
adc
jae
mov
inc
inc
stos
stos
filds
loopne
add
mov
mov
dec
fdivl
mov
add
lock
pushf
mov
cs
inc
push
adc
push
iret
or
or
aad
scas
inc
pushf
adc
outsb
pop
inc
or
or
dec
aaa
xlat
ret
push
aaa
xlat
add
inc
insl
fisttps
out
push
jbe
inc
xchg
out
or
or
push
wbinvd
or
sub
or
push
or
adc
xchg
adc
xchg
xchg
fcmovne
and
push
addr16
das
push
xorps
loopne
insb
das
insl
push
and
pop
jo
jns
push
pop
andb
jo
mov
test
xchg
fcmovne
leave
repz
in
adcb
xlat
xor
data16
add
into
mov
mov
inc
aad
add
les
lods
and
nop
add
and
adc
popa
les
add
ret
pop
inc
push
sbb
mov
addr16
mov
lods
pusha
cmpb
cmpsb
fisttps
mov
and
jle
test
shll
mov
decb
inc
add
mov
iret
mov
in
sbb
in
call
adc
dec
leave
pop
cld
push
ficompl
push
pop
fisubrl
xor
fcomp
andb
fneni(8087
stc
jb
jle
and
xchg
jns
out
nop
mov
sahf
out
insb
pusha
push
dec
sahf
out
sahf
inc
cmp
xor
sub
sahf
out
sub
sbb
sarl
adc
or
and
iret
repz
in
and
push
faddl
aam
sarb
cmp
test
mov
repz
lock
insb
push
fs
pop
cmp
jns
push
dec
mov
cmp
sbb
jns
repz
and
aam
sahf
out
sahf
mov
nop
repz
js
jo
leave
repz
pusha
push
cmp
and
sarl
push
or
and
fadd
out
mov
jbe
push
pushf
push
je
pusha
mov
pop
cmp
icebp
mov
fs
pop
stos
pusha
test
add
pop
jno
cmpb
xor
lret
mov
add
in
addr16
hlt
xor
aas
sbb
es
mov
push
push
add
or
lock
sahf
popf
loopne
xchg
xorb
icebp
call
push
dec
aam
aam
push
inc
jg
mov
mov
iret
sbb
sidtl
push
adc
jg
rcll
mov
andb
pop
lea
sti
add
in
add
pop
insl
jb
fcoms
pop
push
divl
das
outsl
test
add
iret
xorb
pop
sub
js
stc
pop
sub
frstor
add
pop
sbb
repnz
adc
adc
xchg
es
mov
mov
cmp
xor
and
and
sahf
out
ds
pop
out
jns
jnp
sbb
hlt
cmp
adc
push
dec
push
iret
repz
push
aam
rorb
iret
repz
or
adc
cmp
sbb
fcompl
cmp
push
xor
xorl
push
and
jns
sarb
out
sahf
and
and
and
jo
clc
aaa
inc
mov
jo
out
clc
shr
pop
or
orb
inc
pop
mov
scas
rorl
cld
subb
inc
cmp
es
sbb
fistl
cmp
pop
out
sahf
out
xchg
mov
rep
mov
dec
insl
add
push
pop
cmp
repz
xchg
mov
repnz
dec
das
push
dec
insb
dec
fsubs
push
sbbl
stc
mov
cli
or
in
ds
pushf
or
ret
mov
adc
pusha
dec
inc
in
push
pop
pop
stc
and
and
sbb
into
sbb
inc
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
sti
incl
add
inc
stc
mov
adc
mov
decl
js
jg
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
call
repz
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
inc
push
movsl
mov
popa
sar
mov
sbbb
xchg
clc
repz
mov
cltd
cli
fldl
xchg
and
push
add
std
addr16
add
aas
jno
or
mov
pop
fs
fisttps
xchg
outsb
adc
sub
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
pushl
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
xchg
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
jmp
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
xchg
cmp
std
xlat
cmp
mov
sbb
and
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
call
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
jmp
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
cmp
clc
add
cmpsb
fmuls
into
add
and
or
addb
outsb
test
loopne
inc
xlat
ds
jbe
push
inc
inc
je
inc
inc
push
dec
push
and
addr16
pop
and
dec
dec
inc
push
dec
inc
aaa
mov
das
mov
aas
jg
lcall
cmp
pushl
inc
pop
push
inc
dec
inc
jo
inc
popa
push
outsb
jbe
imul
mov
sub
pop
insb
mov
outsl
mov
add
insb
imul
ss
add
icebp
adc
add
pop
dec
push
inc
dec
push
pusha
testb
push
jo
jb
push
and
push
and
inc
inc
test
out
dec
inc
gs
gs
push
adc
add
lea
mov
jge
or
bound
outsl
push
dec
pop
mov
push
xchg
xor
pop
sbb
sub
pop
push
pusha
mov
push
mov
lea
push
mov
cmpsl
add
add
andl
inc
dec
daa
std
sti
jbe
daa
dec
jae
imul
xor
inc
testb
jg
inc
jns
dec
lahf
sbb
sub
les
push
jbe
insl
int
jmp
and
jns
push
inc
data16
inc
mov
jb
jg
rolb
dec
bound
lods
mov
dec
jbe
dec
test
leave
mov
xchg
push
and
xor
mov
int
mov
dec
iret
dec
jg
and
dec
popa
jne
arpl
pop
push
dec
pop
adc
rolb
pop
xchg
sbbb
pop
mov
push
add
inc
inc
ret
inc
xchg
push
imul
mov
jo
sub
push
or
addr16
add
push
idivl
ret
inc
int
notl
imul
mov
ret
popa
outsl
push
jb
addr16
mov
lds
das
push
xlat
mov
add
push
clc
jp
lock
push
dec
adc
gs
adc
jg
push
repnz
and
stos
lods
ficoms
push
inc
arpl
push
adc
aad
cmpsl
pusha
popa
fimuls
mov
pop
sub
sbb
outsl
xchg
inc
mov
pop
pop
mov
andb
jp
js
mov
data16
add
jno
sbb
mov
outsl
outsl
ja
or
fs
shll
lret
sbb
imul
nop
fsubrs
andb
push
stc
lahf
aam
jl
sbb
cmpsl
mov
lret
dec
scas
push
push
add
dec
subb
pop
lahf
inc
push
mov
mov
and
push
dec
mov
sub
adc
pop
push
sub
aas
into
add
call
mov
adc
and
mov
test
fbld
dec
dec
xchg
push
mov
jae
les
push
mov
dec
insl
mov
imul
dec
push
pop
push
jne
les
sub
push
outsl
loopne
push
mov
mov
outsl
addr16
push
and
inc
iret
lock
dec
pop
les
push
sbb
dec
push
addr16
fwait
sub
mov
out
jg
or
test
push
xor
call
xor
mov
mov
les
inc
inc
dec
sahf
out
je
add
cmpb
sahf
out
cwtl
push
and
lahf
lcall
mov
fisubs
add
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
jmp
mov
rclb
mov
sub
mov
sbb
dec
jno
push
fiadds
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
call
jb
addr16
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
fildl
mov
xor
iret
or
fcompl
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
iret
shld
sub
mov
filds
or
adc
stos
sbb
data16
inc
fdivl
jno
add
lcall
mov
mov
movsl
in
lahf
xor
mov
js
stc
decl
insl
pushf
test
xchg
sbb
push
sub
insb
fs
call
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
incl
fnstenv
adc
mov
mov
bound
ficoml
jg
decl
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
xchg
pushl
movsb
sti
hlt
shrl
imul
mov
sarb
add
jmp
sbb
or
cmp
add
daa
adc
or
and
pushl
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
incl
pop
mov
shlb
mov
lcall
mov
cmp
ljmp
rcrb
adcl
jae
or
test
fs
ds
or
or
push
in
lcall
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
jmp
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
jmp
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
decl
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
incl
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
push
nop
aam
push
xchg
ja
int3
add
mov
add
push
mov
or
sub
mov
cmpsl
call
ret
shlb
sbb
lcall
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
lcall
xchg
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
ja
lcall
inc
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
mov
scas
clc
sar
imul
push
js
or
push
addl
mov
cmp
jmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
call
mov
fidivrs
mov
jmp
repnz
lret
mov
cmpsb
mov
incl
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
dec
sar
aaa
mov
or
sbb
pop
out
add
iret
push
jno
insl
pop
xor
and
pusha
cmc
mov
ds
outsl
inc
jne
test
add
cmp
je
push
insb
imul
push
pop
filds
pusha
lcall
pop
inc
jbe
push
jns
arpl
arpl
mov
in
mov
in
push
inc
insl
shl
fdivrs
inc
jne
outsl
insl
addr16
sbb
mov
inc
xlat
test
lods
sti
nop
adc
js
push
dec
pop
cmpsl
into
or
dec
inc
js
dec
mov
bound
popf
push
or
inc
inc
inc
js
lods
popa
adc
push
dec
orl
or
inc
jno
xor
pop
inc
cmp
mov
lcall
xor
aaa
cmp
popa
arpl
cmp
arpl
or
sub
gs
xor
lock
les
inc
jbe
pop
sbb
addb
push
dec
inc
popa
jnp
inc
xchg
add
jne
add
ror
inc
js
mov
test
fbld
inc
mov
mov
dec
xor
cmp
adc
popf
or
inc
aas
mov
popa
ljmp
insb
xor
leave
and
sub
sbb
nop
sbb
lcall
insb
popa
jns
sub
dec
insb
and
adc
cmp
je
addl
jbe
ljmp
jg
and
jae
sbb
int
dec
mov
pop
pop
inc
aas
dec
enter
push
mov
inc
insb
outsl
ss
sbb
inc
pop
popl
mov
sub
jae
pop
popa
jbe
inc
inc
inc
add
ds
inc
scas
add
inc
stos
pop
and
je
dec
push
dec
dec
lea
xchg
sbb
xor
inc
outsb
fistl
adc
in
dec
jge
iretw
mov
xor
or
mov
xor
addr16
or
push
jns
adc
pop
inc
cmp
add
cmpb
movsb
sbbl
imul
dec
ss
xchg
and
pop
sub
add
mov
mov
jo
xchg
inc
push
jmp
sbbl
add
lret
fistps
inc
jb
and
pop
frstor
sub
adc
jo
dec
add
add
outsl
rolb
add
test
sbb
and
adcb
in
pop
pusha
jb
pusha
in
nop
test
pop
cmp
or
add
inc
and
push
push
cmp
and
movsb
lcall
jo
push
inc
adc
outsl
insb
jns
mov
inc
pusha
push
popa
jb
sub
cs
mov
or
nop
adc
inc
pop
or
add
add
push
bound
lods
cmpsb
inc
ret
fisubl
or
ja
test
popa
xor
cmpb
lods
popf
xor
sbbl
push
sub
aaa
pop
rorb
add
sbb
jo
sub
pop
pop
add
dec
scas
addr16
xor
testb
stos
dec
pop
mov
jns
scas
insl
xchg
dec
push
xchg
sahf
aas
mov
mov
jg
mov
pop
pop
aaa
mov
aaa
or
les
adc
push
outsb
cwtl
or
es
mov
mov
daa
aas
pop
inc
add
inc
sub
addb
adc
test
stos
add
outsl
adc
aaa
adc
dec
add
nop
addr16
in
or
mov
std
clc
push
pop
mov
int
mov
ret
or
pusha
adc
jo
popa
insl
add
das
add
and
jne
and
and
in
or
or
dec
shrd
popa
dec
and
mov
pop
lea
ud0
repz
mov
out
ud0
jmp
repnz
in
sub
pusha
ljmp
lret
cli
or
sti
movsl
push
cld
push
imul
mov
push
inc
es
add
dec
loopne
jns
dec
sti
add
or
or
insb
daa
aam
cmp
dec
push
outsb
add
pop
add
and
add
add
imul
sbb
add
xor
push
notb
rolb
adc
sub
mov
rcrb
sbb
or
es
push
add
pop
add
rcrl
and
and
cltd
nop
ja
lods
add
jb,pn
or
xor
add
fs
fildl
fs
dec
or
push
out
ss
sahf
jae
arpl
xlat
push
or
lahf
mov
gs
push
dec
addb
repz
inc
fs
inc
xlat
cmp
adc
mov
push
sbb
mov
cmpsb
jmp
add
mov
or
rorb
mov
push
arpl
clc
loop
mov
mov
lds
jp
mov
enter
bound
mov
dec
fcoms
jne
dec
sbb
inc
xor
pop
xchg
call
call
sbb
ds
ja
jne
jno
dec
out
jmp
mov
mov
movsb
add
into
jl
fisttpl
call
push
aam
inc
inc
xchg
arpl
ljmp
jnp
cmp
add
int
sub
es
jne
or
enter
pushf
jbe
jb
mov
xor
mulb
or
push
es
clc
fwait
mov
add
xor
insb
cmp
jnp
pop
sbb
addr16
mov
out
and
push
sbb
push
movzbl
or
rcll
hlt
test
movsl
mov
or
les
inc
xchg
xchg
test
mov
ss
jbe
mov
add
xchg
movsb
fisubrs
pop
jo
xor
jmp
ljmp
and
sub
fildll
rcll
push
pop
mov
xor
movsl
mov
pop
nop
sti
loopne
call
sbbb
push
add
outsb
dec
adc
mov
push
and
dec
mov
clc
aad
or
into
sti
fisttpl
inc
imul
add
adc
inc
cltd
xorl
sti
subb
mov
in
inc
xchg
cmp
add
push
sbb
lock
xor
dec
sti
or
push
inc
adc
ret
addb
dec
pop
rorb
mov
adc
clc
popa
roll
add
mov
les
leave
fs
daa
add
or
enter
dec
notb
push
xor
out
in
adc
push
leave
push
fs
mov
cmp
pop
add
jp
add
hlt
dec
or
push
push
lods
pop
push
movl
sbb
or
push
sahf
cmp
pop
jp
dec
pop
push
ret
dec
adc
push
and
mov
mov
test
cltd
test
lea
mov
add
dec
pop
loope
test
dec
hlt
add
mov
es
decb
aam
pop
inc
test
movb
or
fidivrs
dec
adc
add
push
mov
idivb
aam
lea
scas
out
or
lds
mov
loope
push
push
hlt
pop
adcl
push
roll
push
mov
adc
adc
shr
add
dec
lock
or
rclb
popf
or
lock
repnz
ljmp
js
pop
cmp
xor
jno
repnz
mulb
dec
std
movsw
mov
sbb
dec
jge
in
push
xor
push
aas
adc
xchg
popf
sbb
fcmovbe
fcoml
and
shl
sub
pusha
inc
ljmp
cwtl
les
pop
je
imul
push
inc
push
push
insb
faddl
enter
sub
sbb
lahf
push
mov
xchg
pop
sbbb
sbb
mov
xchg
add
or
cmp
mov
xor
jmp
sarl
pushf
loop
popa
pop
add
push
sbb
jp
sarb
testl
mov
jbe
xlat
pop
jp
push
or
inc
or
lock
fidivs
pop
xchg
sbb
pop
cwtl
inc
pop
test
ja
mov
mov
add
call
jnp
or
pop
int
sbbl
btc
std
das
scas
insl
lret
imul
jns
ret
cmc
adc
cmp
add
mov
call
add
pop
push
add
repz
insl
sub
xchg
and
movsl
add
scas
add
cmp
nop
cmp
inc
push
xchg
rcll
pop
sub
sub
enter
xchg
sbb
shl
nop
mov
mov
in
jle
ds
pop
cmp
std
or
xchg
sub
sti
push
jne
xchg
xchg
push
sub
lea
mov
mov
test
and
test
nop
imul
hlt
jmp
add
add
push
insb
sarb
test
lock
mov
ja
push
sub
shlb
rorb
lods
mov
shrl
lods
or
ja
inc
sbb
mov
xchg
xchg
jae
xchg
push
xchg
sbb
cltd
sbb
sbb
push
dec
and
dec
or
inc
rcl
adc
xchg
je
or
or
sub
in
push
fs
sbb
jmp
in
sbb
jae
shll
cs
fs
imul
shl
or
cmpsb
xlat
dec
xchg
cmpsb
call
inc
push
xor
clc
test
js
cwtl
jb
xchg
xchg
aad
jo
imul
es
ret
sub
or
icebp
dec
push
in
mov
push
std
push
pop
or
mov
pusha
pop
dec
adc
testl
daa
stos
imul
orl
aas
cmpsl
call
or
shll
pop
lds
and
push
pop
lahf
sbb
stos
push
mov
movsl
gs
push
es
mov
fisubl
ljmp
bound
push
adcl
pusha
pop
aas
sbb
push
notb
or
push
jns
mov
sub
loop
jo
nop
sbb
push
sti
jne
push
pop
popa
mov
lahf
ss
lret
lret
mov
push
and
sub
out
dec
orb
push
faddp
xor
ds
sbb
push
cmp
aaa
sbb
sbb
mov
dec
xchg
xlat
fdivr
lea
mov
xchg
xor
sbb
mov
push
push
dec
fdiv
lcall
fcmovb
sbb
pop
pusha
push
sub
dec
push
int3
call
xor
cmp
popf
imul
mov
mov
cmp
lods
xchg
fcoms
testl
adc
xchg
pusha
es
mov
aam
push
jo
sbb
mov
push
jb
call
sahf
les
aas
lds
xchg
popf
je
cmp
cmp
xchg
test
in
xchg
sbb
push
lea
adc
cmpsl
dec
add
inc
inc
push
cmp
mov
rol
inc
or
xchg
aaa
mov
lock
inc
push
inc
fucomi
or
fisubs
rolb
fildl
or
cmp
xchg
imul
ss
add
insb
hlt
enter
jb
jno
hlt
fdivrp
xor
fdivr
mov
pop
loop
ret
mov
pop
push
xor
rcrl
jecxz
pop
mov
xchg
psubsw
push
cwtl
movsl
in
out
ds
add
jl
xor
call
iret
sbb
mov
int3
or
fldl
fstl
mov
mov
dec
and
or
push
lcall
mov
pop
dec
leave
mov
lds
enter
lea
mov
mov
rep
testl
movsb
push
popa
add
mov
inc
add
fnstsw
rcll
outsl
adc
bound
adc
xchg
or
test
push
add
lea
dec
fildll
jne
dec
pop
insl
add
adc
sub
mov
rep
push
pop
lahf
sbb
adc
aad
shr
hlt
ret
xor
mov
or
dec
mov
rolb
xor
js
rcll
sbb
push
daa
fdiv
jo
dec
je
ljmp
ljmp
sub
popa
pop
xchg
andl
pop
cmpl
pop
mov
je
mov
cmp
scas
sbb
push
mov
sahf
pop
fistpl
popa
add
or
pop
mov
mov
xor
jo
sub
xchg
sbb
jae
data16
lcall
and
into
shrb
fiaddl
mov
or
pushf
cmp
loopne
or
pop
inc
jb
mov
inc
dec
sbb
insl
aas
js
mov
int3
cmp
mov
std
sub
xor
pop
push
enter
push
adc
fs
add
push
add
sub
jo
dec
adc
ds
adc
push
push
cmp
mov
push
or
sbb
and
call
jmp
adc
mov
mov
push
and
test
imul
in
in
jne
dec
repz
add
and
leave
in
loopne
jmp
inc
lea
enter
dec
sub
stc
jmp
and
in
xor
inc
outsl
pop
cmp
cmp
jo
or
nop
dec
in
sub
mov
shrl
add
add
imul
pushf
mov
jbe
insb
ret
mov
adc
leave
sub
pop
ds
dec
sub
loop
or
mov
adc
adc
loopne
pop
mov
cmp
inc
pop
repnz
lock
mov
sub
mov
cmp
mov
sbb
mov
sbb
je
in
in
in
jno
lock
add
mov
pop
add
lcall
mov
push
pushf
inc
add
adc
add
es
cmpsl
in
inc
fildl
test
fistpll
push
fbstp
mov
test
adc
mov
push
inc
sbb
jne
lods
inc
out
inc
xor
std
jo
and
fidivrs
xor
les
mov
pop
sub
pop
fistl
dec
mov
xor
js
int3
adc
cmpsb
adc
jmp
add
push
mov
cmpsb
fcomp
inc
test
mov
enter
xchg
dec
std
js
data16
mov
inc
push
mov
movswl
inc
xchg
cmp
jb
mov
test
aad
mov
adc
lods
lods
dec
xlat
push
push
mov
jecxz
arpl
sub
push
jg
mov
push
call
push
jae
cwtl
add
into
cmpsb
xchg
xchg
in
dec
adc
or
and
rorl
int3
filds
and
in
adcb
lds
push
jne
jl
xor
cmp
mov
lods
adc
jne
cld
jb
add
dec
sub
add
js
adc
cmp
addb
mov
jecxz
or
adc
mov
test
ss
ljmp
push
add
add
inc
cmp
ret
call
addb
cld
mov
test
clc
xorl
sbbb
cmp
mov
mov
mov
ja
cmp
pop
lret
sbb
lahf
loopne
add
add
add
or
je
xor
fldl
leave
ret
sub
cmp
adc
or
loopne
add
or
pop
popa
adc
inc
mov
lret
adc
fimull
sbb
xor
bound
jmp
lods
mov
pop
loopne
mov
lods
xchg
jle
aaa
inc
jge
sbb
pop
push
cld
lret
mov
cwtl
pop
rol
mov
popf
rorl
mov
int
nop
add
pushf
or
mov
mov
add
mov
les
jns
jne
sub
lods
jbe
or
jne
xor
mov
nop
push
add
outsb
orb
adc
add
test
mov
cmp
jne
push
fnstsw
daa
cmp
adc
push
jge
mov
push
xchg
push
jbe
das
insl
inc
rolb
hlt
repnz
push
jnp
rcll
dec
inc
addr16
xor
shll
out
push
std
or
or
shr
pushl
or
mov
inc
push
xor
leave
jo
call
xchg
and
xor
and
lea
cld
cli
sbb
inc
jo
inc
shll
cmp
call
lea
enter
movsb
repnz
loopne
or
push
push
push
push
jns
add
inc
adc
setb
pop
push
jo
cld
sub
repnz
dec
mov
std
stc
hlt
pop
mov
and
push
push
xor
cmpb
ss
cmp
add
rorb
idivl
cmp
jl
jne
iret
add
mov
cmp
mov
jnp
outsb
mov
add
inc
dec
enter
imul
push
sarb
add
inc
fcoms
or
sub
shlb
sbb
jmp
add
or
or
or
mov
jne
in
ret
dec
cmp
push
xor
fistl
fs
or
daa
jae
pop
inc
mov
inc
int3
lods
or
sbb
and
xchg
inc
push
push
add
daa
pop
mov
adc
xchg
adc
cmp
and
hlt
jne
rclb
adc
popf
mov
or
or
xchg
xor
cwtl
inc
jecxz
aaa
imul
push
mov
push
call
lcall
ret
cmc
loope
in
jbe
mov
or
xor
push
xchg
popf
push
dec
sbb
mov
xchg
xchg
sarb
sbb
push
or
mov
and
jne
xor
outsb
in
std
jmp
and
xor
pop
call
inc
jmp
in
ficoml
jle
or
insl
mov
xchg
fmuls
mov
fistpl
mov
or
mov
pop
inc
js
cmp
popa
cmp
loopne,pt
repz
orb
icebp
push
sub
inc
sbb
cmp
mov
rorb
je
arpl
adc
sbb
adc
xchg
daa
jmp
je
sbb
mov
cmp
bnd
leave
push
mov
jl
imul
jg
jne
mov
jmp
or
xor
movsb
cmp
or
pusha
cwtl
mov
push
or
call
dec
cmpl
shr
test
add
add
mov
and
pushf
push
insb
push
adcl
or
inc
sbb
addb
ja
inc
push
add
call
out
push
cmp
or
fisubrl
jne,pn
ljmp
and
test
shll
sub
insb
ljmp
outsb
int
mov
test
cmpsb
jmp
sub
mov
mov
mov
mov
movsl
jne
cltd
je
push
mov
lea
add
push
out
or
pop
in
out
insl
push
fucomip
cmp
je
cmp
jbe
jge
add
xchg
jne
inc
push
add
pop
mov
mov
clc
push
and
std
and
inc
mov
jbe
and
aad
or
sbb
scas
loope
fcoml
xchg
push
push
mov
cli
adc
push
popf
fadd
shlb
xor
pushf
loop
fwait
or
test
inc
jmp
xorl
mov
sbb
imul
sbb
mov
fmuls
rcl
dec
adc
or
fadd
pusha
mov
fimuls
fwait
jmp
push
mov
cmp
aas
fsubrp
jo
push
sbb
adc
adc
gs
adcl
or
sbb
inc
adc
mov
js
inc
adc
add
and
lods
stos
loopne
sti
push
and
je
test
fwait
lea
aad
out
jle
test
shll
add
in
test
stc
xor
lock
loope
sub
icebp
sub
pop
push
lea
mov
mov
mov
push
jno
enter
jne
mov
sub
push
mov
cmpsb
aam
cmpsb
dec
mov
in
es
jg
clc
loop
push
cli
call
push
jo
sbb
fcom
int3
jbe
push
and
add
scas
fnsave
fwait
jae
js
push
push
lret
xchg
add
mov
or
push
jns
add
call
fcmovnbe
adc
iret
push
repnz
mov
pop
or
into
imul
mulb
mov
jmp
lret
and
leave
flds
enter
jo
sbb
xchg
jmp
inc
das
push
push
sub
addps
add
mov
int3
dec
push
hlt
ss
xchg
mov
adc
mov
mov
jne
clc
and
cmp
stos
push
xor
cld
push
add
push
dec
adc
mov
or
mov
cmp
mov
and
sub
push
sub
xor
add
sub
mov
adc
xchg
or
push
cs
push
pop
popa
movsl
sbb
xchg
or
inc
clc
push
call
or
dec
testl
ficoml
mov
sbb
adc
push
stos
mov
or
jne
addr16
sbb
mov
push
int3
sbb
xchg
dec
cld
jne
into
cmp
sbbb
arpl
imul
js
es
pop
push
or
or
sahf
jmp
int3
jecxz
decb
or
jns
outsl
jo
adc
jmp
nop
xor
es
adcl
add
hlt
loop
js
icebp
call
fstl
sbb
cmp
push
jmp
pop
cld
push
aaa
dec
setb
push
mov
cmp
mov
sbb
call
stos
aaa
ds
inc
lcall
dec
jl
js
dec
push
lods
push
negb
nop
out
imul
dec
xor
fxtract
and
xor
insb
pop
xorb
mov
sarl
movsb
inc
or
mov
je
loope
test
xchg
add
popa
mov
or
faddl
or
lret
and
mov
jne
add
push
call
lret
mov
movsb
jmp
js
sbb
into
xchg
xchg
je
and
insb
push
data16
mov
sbbl
cmp
xchg
and
int3
jbe
inc
loopne
adc
mov
push
or
imul
xchg
push
adc
lock
push
stc
sub
sbbb
out
loopne
sbb
or
add
jl
sbb
jo
or
jl
out
cmp
pushf
or
cmp
test
mov
and
loopne
loopne
fs
inc
mov
push
dec
sbb
inc
mov
aad
addl
jmp
add
lock
push
dec
lea
mov
mov
sbb
cmp
sbb
mov
mov
and
int3
cmpsb
and
loop
mov
nop
push
decl
or
inc
fdivrs
jne
movzbl
add
je
adc
scas
sbb
movsb
nop
jno
sub
sbb
call
jge
jmp
xor
sbb
add
xchg
xchg
jno
and
decl
dec
xlat
or
or
je
mov
jo
sbb
cli
sub
sbb
adc
cmp
loopne
sar
mov
lea
inc
xor
inc
pop
rcrb
sbb
and
inc
shlb
insb
cmp
and
add
imul
xor
dec
cmp
stos
loopne
push
lret
insl
or
sahf
js
sub
inc
xchg
lret
xor
push
push
call
mov
dec
mov
sub
pop
test
dec
dec
xchg
in
add
sbb
mov
push
or
push
incb
aas
dec
sbb
and
cmp
xchg
in
mov
inc
add
push
mov
inc
negl
xchg
adc
pop
inc
add
dec
add
sub
xor
call
sub
mov
out
jbe
or
or
add
xor
xorb
add
or
add
out
xor
xor
mov
inc
and
inc
adc
or
lds
jp
adc
xor
mov
pop
mov
xor
add
add
or
mov
mov
xor
in
adc
pop
xchg
push
adc
or
mov
fs
pop
popa
pusha
cmpsb
nop
orb
push
dec
cmpsl
inc
adc
popl
or
or
jp
pmaddwd
jle
mov
callw
mov
call
call
sti
push
jmp
js
dec
aam
inc
adc
iret
cmpsb
jns
cmp
call
and
pop
dec
adc
je
pop
int3
pop
outsl
cmpsl
outsl
sub
sarb
out
out
popa
pop
rcrl
cmp
or
movzbl
mov
or
neg
ljmp
call
clc
aam
shrb
pop
adcb
sbb
xor
pop
xchg
pushl
cmp
jmp
add
pop
xchg
sbb
mov
dec
add
inc
xchg
addr16
jecxz
popf
xor
je
push
into
cmp
adc
fimull
jmp
push
xor
fldcw
lds
shr
cmpb
mov
and
movlps
mov
push
call
repnz
mov
or
adc
or
mov
or
sub
jl
mov
sahf
pusha
lock
pop
mov
push
and
inc
pop
pushf
mov
fiadds
sub
sarl
mov
cmp
es
or
add
movsl
push
ljmp
aad
es
jle
add
into
pop
shll
add
sar
ja
daa
and
sbb
dec
pop
add
add
jmp
outsb
iret
dec
mov
les
test
call
mov
pop
xor
lcall
xchg
int3
xchg
js
push
shrb
xor
arpl
jbe
push
add
and
imull
push
movsb
shlb
ror
dec
sbb
push
push
sbb
jp
sbb
ror
adc
inc
mov
push
ret
enter
pop
aaa
push
sub
bound
cmp
movsl
adc
call
or
sbb
andl
cmpsl
push
push
push
aad
inc
cmpsl
xchg
pop
and
dec
enter
dec
push
mov
push
cmpsl
fnstenv
pop
aaa
and
les
pop
xor
pusha
inc
cmpsl
xor
xor
out
roll
shll
xchg
cmp
cwtl
nop
jb
lods
fistl
loope
jmp
addb
push
inc
mov
or
push
inc
dec
fwait
mov
inc
cs
pusha
out
out
cmp
nop
je
mov
insl
dec
inc
mov
inc
dec
sbb
nop
inc
xchg
repz
push
sub
sbb
movsb
repz
add
lsl
inc
sbb
jmp
push
scas
push
jno
mov
imul
adc
pop
daa
test
lock
daa
pop
nop
add
and
dec
inc
mov
mov
dec
outsb
add
ja
les
mov
repz
repz
add
movsb
inc
out
fisttps
cld
or
push
adc
add
insl
dec
inc
int3
xor
push
bound
xchg
mov
push
or
lahf
dec
dec
push
insb
sbb
lock
sarl
fstl
leave
scas
mov
rcrb
adc
lock
xor
pop
jmp
cmp
je
mov
xor
sub
cs
test
ficoml
test
inc
and
mov
jo
push
pop
add
xchg
cmp
in
add
add
xchg
xchg
cmp
idivl
or
jne
lret
add
jno
je
xchg
outsl
in
sahf
add
mov
xor
test
push
push
cmpl
jns
out
inc
or
or
sub
or
jb
iret
in
add
or
inc
push
shll
or
in
lcall
xchg
or
push
inc
scas
xchg
or
addr16
push
push
push
xchg
or
sbb
rdmsr
adc
xor
pop
adc
or
scas
testb
xchg
adc
imul
add
sbb
adc
adc
push
adc
addr16
inc
pop
pop
out
rcrb
sbb
sbb
and
sbb
sbb
add
sbb
sbb
dec
in
add
je
push
sbb
cmp
sbb
jo
xor
sbb
pop
push
push
incl
jns
inc
negb
pop
jne
add
add
mov
rcl
sub
testb
movw
lcall
dec
das
cmpb
and
lods
pop
sbb
cwtl
xchg
repnz
in
push
in
imul
rcl
in
xchg
cmpsb
ret
in
in
in
cmpsb
mov
sub
jns
out
or
mov
je
call
inc
sbb
cmc
mov
cmp
push
repnz
cmp
enter
add
or
in
in
push
imul
addr16
fsubrp
cmp
mov
cmp
mov
or
and
in
je
lock
sbb
icebp
cmp
stos
mov
repnz
adc
repz
std
test
test
pop
hlt
xchg
push
jnp
scas
std
cmc
cmc
cmp
and
testb
sbb
gs
clc
pop
add
or
mov
stc
and
iret
enter
add
sti
fcoml
fdivrp
cld
cld
je
jnp
orl
std
xor
out
leave
std
sbb
pop
dec
sbb
xor
mov
sub
jb
and
rorl
jb
pop
jmp
stos
or
jecxz
jecxz
dec
fsubp
push
xchg
xor
mov
cmpl
aam
nop
cmpsb
loopne
or
out
xchg
pop
push
lea
cltd
sti
lods
dec
xor
cltd
movsb
mov
jmp
push
and
jmp
daa
in
cltd
and
sti
jmp
orb
jb
inc
out
xchg
mov
inc
cltd
cmp
and
aas
repz
scas
ss
repz
sbb
cmp
stc
pushf
loopne
repnz
imul
mov
mov
clc
cltd
jb
xor
nop
push
stc
sbb
xor
sti
sti
sti
xchg
mov
cld
cmp
jb
stos
in
clc
mov
loopne
test
inc
pushf
stos
dec
mov
lcall
sub
dec
loop
xor
shll
repnz
loope
clc
and
pop
dec
add
or
imul
and
aad
loope
divl
pusha
leave
sahf
testl
ljmp
jmp
mull
or
hlt
notb
imul
mov
loope
notb
sub
nop
nop
testb
repnz
pop
push
and
repz
stos
and
mulb
out
div
mulb
xchg
mov
xor
sbbl
sbb
rclb
xchg
jns
mov
cmp
loope
cmc
and
and
hlt
or
xlat
inc
stos
repz
pop
lock
push
jo
or
adc
jmp
clc
sti
mov
in
iret
movsl
loope
loope
jp
repnz
pop
hlt
cmp
mov
cmp
mov
hlt
orb
push
in
pop
in
xlat
jb
repz
repz
mov
or
xchg
repz
in
insb
repz
repz
or
or
in
mov
in
repnz
or
test
cmp
icebp
icebp
loop
pop
int
xchg
pop
adc
nop
sbb
repnz
repnz
sbb
nop
pushf
mov
sub
lock
in
pusha
leave
cwtl
icebp
or
int
stc
mov
dec
icebp
xor
pcmpeqw
or
scas
pop
mov
test
mov
lea
sub
data16
mov
push
sub
fists
jo
rclb
loope
scas
div
aaa
inc
cmp
cmp
sub
mov
adc
mov
lods
add
mov
jne
stc
xor
mov
movsb
xchg
dec
add
sbb
jg
notl
and
add
int3
dec
push
imul
push
aaa
insb
ds
or
push
add
lahf
out
imul
cli
push
jecxz
sahf
cmpsl
fldcw
mov
lcall
push
aad
in
xchg
out
jns
test
or
mov
and
mov
sbb
push
xor
mov
lods
leave
pop
and
lea
inc
cmp
and
inc
bound
lret
test
push
push
push
pop
sub
dec
fxch
mov
push
div
or
xchg
lods
inc
and
jmp
and
adc
dec
dec
out
daa
test
mov
add
sbb
movb
dec
xor
ret
mov
sub
fidivs
xchg
push
sbb
mov
mov
push
and
call
addb
ret
mov
jle
test
pop
jmp
and
push
dec
aaa
push
push
nop
push
call
push
repnz
adc
mov
bound
pop
insl
adc
xchg
mov
push
jmp
les
insb
lret
cwtl
mov
push
notb
push
xchg
mov
mov
dec
mov
lahf
popf
adc
cwtl
and
js
pop
mov
and
inc
mov
pop
cmp
add
or
ret
xchg
mov
sub
jmp
adc
adcl
mov
ret
cwtl
jns
call
movsl
dec
pop
xor
and
loope
jb
add
add
pop
xchg
pop
or
sbb
jb
adc
push
xorb
or
sbb
push
and
and
xor
adc
xor
inc
and
scas
adc
mov
adc
dec
adc
adc
inc
mov
inc
dec
pop
adc
push
add
and
shlb
or
pop
sbb
push
and
mov
inc
xor
fiadds
inc
hlt
push
add
fnstenv
nop
add
mov
xor
push
xor
sarl
or
movsl
loopne
imul
mov
call
mov
mov
sbb
idivb
adc
mov
loop
aad
dec
out
inc
jp
jb
xlat
adc
sti
iret
pop
push
andb
sub
adc
lcall
dec
add
lcall
and
dec
aam
ds
rorb
mov
sbb
das
xchg
ja
movsb
sti
and
xor
jmp
in
adc
jl
xchg
or
rcll
jmp
xchg
jmp
cmpsb
arpl
sub
ljmp
cs
outsl
pop
and
dec
nop
lcall
cmp
lcall
push
ss
hlt
je
sub
or
out
or
in
adc
push
lds
ljmp
cmp
movsb
repz
pop
and
nop
adc
or
mov
pushf
pushf
pushf
push
cmp
sub
push
test
movsb
push
imul
push
out
mov
jecxz
inc
scas
cmpsb
mov
mov
mov
cs
mov
test
sbb
pusha
adc
or
pop
or
inc
xor
call
or
adc
pop
fists
or
in
mov
dec
pushf
inc
rcll
cmp
push
or
xchg
add
test
jmp
popl
jg
push
jmp
fsubl
mov
xor
aam
xchg
loope
test
push
or
jmp
xor
aad
call
push
push
and
mov
sbb
fs
push
or
mov
xor
cmp
sbb
jp
test
add
jmp
push
pop
cli
adc
sbb
and
push
dec
inc
mov
push
enter
xchg
test
and
xor
mov
popf
push
push
cmp
xchg
push
pop
aad
mov
dec
nop
adc
pusha
xorl
arpl
dec
sbb
in
and
sub
fiaddl
or
inc
enter
xchg
inc
cmp
pop
and
inc
enter
nop
clc
mov
shlb
rcrb
dec
and
push
rcll
fidivrs
aaa
cmc
pop
and
jne
pop
test
inc
pop
and
pop
scas
sub
test
decl
fdivr
hlt
jle
and
movsb
and
or
jmp
inc
dec
pop
sbb
fsts
xor
mov
xchg
add
xor
and
inc
fcomps
mov
or
addr16
cs
sbb
fs
jmp
mov
nop
inc
mov
dec
dec
xchg
mov
cld
add
and
jmp
fildll
popa
fsubs
add
inc
cmp
dec
add
hlt
movsl
and
cs
or
pop
and
or
out
mov
sti
shr
data16
ds
push
inc
mov
fndisi(8087
mov
movsb
mov
inc
nop
cmp
dec
repz
cmp
pusha
push
cmp
in
aaa
popa
aas
ss
movsb
and
fnstenv
je
sub
add
pop
xchg
cltd
or
fs
add
add
adc
sbb
nop
outsb
mov
cmp
dec
vpshaw
int3
inc
mov
fs
add
dec
ljmp
push
xor
push
or
jp
adc
cltd
scas
jb
sbb
inc
cltd
mov
inc
dec
dec
adc
push
mov
and
cmp
movsb
movsb
adc
cs
mov
popf
inc
pop
imul
and
mov
pop
and
inc
adc
adcb
mov
xor
xchg
mov
nop
adc
xor
sbb
push
mov
shl
push
loopne
cmpsb
mov
or
and
adc
je
aad
mov
xor
repz
ss
pop
cmp
test
je
loopne
mov
and
call
nop
pop
mov
test
add
rcl
pop
jno
jb
dec
cmc
dec
je
sbb
mov
sbb
and
lods
scas
cmpsb
mov
inc
xor
mov
xor
mov
lret
adc
aad
mov
xchg
test
call
cmpsb
and
pop
mov
xor
pop
mov
adc
mov
mov
cmp
fs
pop
xor
cmpsl
push
mov
loopne
push
aam
mov
fs
cli
enter
sbb
outsb
mov
mov
sbb
subb
mov
nop
jp
imul
sbb
lcall
nop
mov
xor
sub
adc
shrb
rcll
ret
subps
dec
xorl
cmpsb
and
mov
jo
push
add
sbb
pushf
push
rcll
sbbl
dec
inc
subl
push
fneni(8087
push
addl
mov
dec
or
dec
push
mov
xorl
xor
mov
imul
pop
sbb
dec
xor
xorl
movsl
test
ss
xor
ds
push
jbe
call
pop
aam
daa
rcl
or
sub
and
pusha
pop
aam
in
addl
sbb
adc
je
mov
addl
sbb
nop
add
sbb
push
ljmp
popa
ret
in
dec
into
sbb
addl
pop
cmpsb
inc
inc
sbb
or
aam
fs
sbb
inc
out
dec
jmp
rcl
dec
dec
inc
rclb
mov
pop
je
aam
jp
aam
orl
orb
stos
imul
sbb
push
push
push
xor
scas
imul
cmp
jae
or
xor
xchg
data16
int3
sbb
lock
xor
insb
jo
jb
or
xchg
movsb
fcmovbe
enter
jbe
mov
mov
push
int
in
mov
mov
xor
or
lcall
aad
je
mov
insl
push
or
mov
and
mov
shrb
mov
or
addl
inc
loop
mov
adc
lret
mov
dec
inc
cmpsl
sarb
js
and
repnz
stos
cmp
cmp
mov
in
sbb
xor
lcall
sbbl
arpl
mov
cmp
out
das
jmp
inc
scas
pop
orb
movsb
les
lcall
dec
inc
sbbl
sub
add
js
xor
movsl
push
xorl
xor
shlb
jg
cmp
mov
cmp
sub
andl
fs
xor
cmp
fs
push
jno
fs
dec
dec
pop
cmp
dec
and
xor
test
xor
push
call
push
rcl
lea
subl
cmp
daa
adc
scas
cmpsb
mov
pusha
ret
sbb
jno
ds
jle
icebp
leave
jmp
xor
jecxz
jbe
imul
and
adc
dec
add
daa
icebp
mov
repz
mov
in
pop
xchg
cmp
or
add
push
xor
or
rorb
sub
in
testb
bt
sbb
cmp
mov
cmp
jbe
and
mov
cmpsb
pop
push
jbe
nop
repz
dec
pop
clc
jbe
or
test
jbe
fiadds
std
jbe
rolb
fnsave
addr16
int3
add
inc
mov
pushf
jl
dec
inc
pop
in
nop
popa
and
add
push
sbb
pop
gs
sarb
pop
and
jnp
add
dec
enter
sbb
dec
pop
in
inc
dec
les
rcll
jae
or
mov
xchg
sbb
xchg
test
ret
or
sbb
popf
xchg
pusha
cmp
xchg
pop
mov
add
popf
xchg
push
sub
and
orb
out
push
xchg
into
mov
push
mov
addr16
cltd
imul
cmp
es
test
push
dec
push
test
cmpsl
sbb
push
mov
add
jb
movsl
cwtl
xchg
inc
cmp
inc
pop
dec
mov
push
leave
ret
add
pusha
inc
cmpsl
dec
imul
inc
psubsb
mov
inc
cmp
push
pop
sub
in
cli
stc
inc
dec
cmpsl
rorb
jecxz
jg
dec
nop
dec
scas
mov
xchg
jo
fsubrl
inc
mov
out
stos
dec
nop
mov
cwtl
inc
es
test
add
add
and
jb
push
movl
or
nop
je
cmpsl
enter
cmp
jl
repnz
xor
adc
xor
in
jl
lcall
xor
push
popa
dec
or
add
je
sub
push
sbb
call
or
mov
jge
jbe
fiadds
xchg
scas
mov
cmpsl
popf
iret
negb
inc
cmp
or
add
cwtl
into
out
add
push
shll
xchg
cmpsl
sub
test
and
into
and
test
dec
jp
add
push
add
add
loopne
cmpsl
dec
mov
xchg
outsb
and
rolb
add
ficomps
mov
mov
push
dec
push
add
xor
ja
add
and
dec
cmpsl
or
jmp
add
jmp
push
movsb
xor
mov
andb
shll
addl
jnp
xchg
sub
add
lahf
pop
dec
rcrb
fucom
call
sub
add
dec
leave
mov
and
xchg
xchg
xor
adc
andb
mov
push
or
mov
data16
cltd
test
pop
adc
and
fstl
inc
or
cmp
inc
call
fdivl
adc
and
xchg
nop
jnp
adc
cltd
test
adc
stos
adc
dec
inc
ja
adc
adc
adc
xor
aaa
inc
pop
and
rorb
push
test
data16
adc
xor
fdivs
out
cmp
xchg
orb
jle
push
cmp
adc
add
je
push
cmpsl
outsb
loop
call
xchg
jmp
movsb
add
incl
jl
je
dec
popa
mov
hlt
movsb
les
xchg
push
or
xchg
sbb
cmp
clc
rolb
aam
xor
xlat
rolb
test
jo
add
lret
subl
jnp
jmp
pusha
addl
pop
sub
mov
cmp
xor
inc
sub
repz
out
call
nop
subl
arpl
adc
adc
fcoml
rcll
out
sbb
mov
or
mov
shl
movsb
inc
pop
adc
repnz
cs
mov
nop
mov
mov
cmp
pop
sarb
movsb
jbe
mov
inc
mov
xor
push
sbb
call
inc
pop
mov
add
push
ljmp
inc
rcr
inc
add
sub
xor
sti
scas
or
jne
push
dec
ljmp
fistpl
insb
cmp
add
cmp
xchg
push
inc
jmp
dec
jmp
xor
push
add
xchg
addl
outsb
out
jp
jbe
jmp
inc
inc
inc
pop
je
adc
test
pusha
pop
addb
fiaddl
cmp
js
sbb
mov
sti
sbb
add
loopne
rorl
rclb
inc
or
je
decb
js
movsbl
and
cmp
leave
add
mov
push
mov
mov
pop
inc
add
xor
inc
jmp
inc
je
pop
add
adc
inc
jmp
mov
or
fstps
or
and
enter
in
and
pop
jl
enter
sbb
adc
push
mov
into
and
mov
add
sub
mov
lock
rcll
out
dec
fstps
or
xlat
sbb
push
call
adc
out
arpl
dec
addps
cmp
jle
and
pop
fisubrs
jge
push
push
popf
out
sub
leave
std
dec
mov
or
mov
cltd
cmp
and
jmp
cmp
scas
or
in
xor
adc
push
cs
outsl
add
ret
push
sar
inc
push
adc
xlat
xchg
hlt
nop
xor
xor
or
cmp
mov
sub
fcomip
inc
adc
mov
movsl
out
cmp
pop
scas
push
fwait
and
aaa
shlb
sbb
xchg
add
cmp
cmpsb
sbb
xor
mov
sbb
pop
add
shr
add
filds
cmc
add
je
add
in
jl
inc
inc
popa
xchg
mov
or
inc
cmp
ds
in
test
xchg
push
ja
sub
pop
mov
xchg
out
lea
pop
or
push
sarb
sub
adc
adc
add
dec
lea
sbb
inc
mov
test
testl
notl
xor
sbb
das
sub
push
sub
rorb
ljmp
iret
mov
mov
aad
aas
movsb
push
or
pop
fnstcw
int
or
lret
in
lock
call
jle
enter
cmp
push
xlat
cmc
fists
pusha
add
in
rclb
movsb
xchg
sbbb
mov
mov
mov
add
mov
shlb
imul
je
mov
push
and
cmp
and
push
arpl
xor
daa
ja
add
lret
jae
sub
push
lea
nop
popa
mov
int3
shl
bound
movsb
fstpt
xchg
insb
mov
es
jbe
pop
add
pop
sbb
jl
jmp
jl
inc
xor
movsb
mov
ja
add
inc
fidivl
cmp
outsb
fimull
int3
push
dec
test
int3
shll
jmp
mov
es
or
cmp
loope
pop
push
mov
mov
xor
inc
scas
inc
jne
jae
and
movsb
mov
sbb
pop
jmp
hlt
stc
fmuls
jmp
mov
push
mov
movl
nop
into
sbb
jg
jae
movsb
movl
sbb
punpckhwd
outsl
loop
push
imul
add
pop
inc
xchg
inc
cmp
xchg
jecxz
addl
pop
and
stos
pop
or
scas
or
mov
and
or
or
movsb
jns
add
dec
outsb
movsb
and
mov
push
inc
dec
nop
dec
in
aaa
or
push
sbb
xor
mov
mov
pop
xor
and
ret
add
mov
movsb
fsubp
sub
or
sbb
fsubrl
es
sbb
jns
and
cmp
enter
sbb
rolb
pop
mov
pop
adc
inc
xchg
and
cmp
or
push
and
in
ljmp
fbstp
in
mov
ljmp
xchg
out
add
mov
sbb
or
insl
xor
rolb
pop
adcb
push
ret
xor
push
add
dec
scas
push
add
jbe
sbb
dec
mov
ret
add
sbb
and
pushf
clc
add
bnd
repz
mov
nop
jecxz
jnp
adc
xchg
lea
and
mov
jb
sbb
xor
rorb
or
xor
loope
pop
movsb
mov
xorl
jns
and
nop
sbb
or
mov
pop
loopne
mov
rorb
sub
popa
jns
sbb
sub
inc
rorb
dec
inc
xor
rorl
mov
inc
pop
movsb
mov
push
jecxz
mov
and
pop
xchg
les
dec
xlat
adc
jb
in
in
dec
stos
xchg
rclb
repnz
jne
rolb
nop
and
push
imul
cs
jo
xor
shlb
test
popf
push
inc
jge
test
jo
add
cmp
imull
int3
cmp
or
daa
outsl
and
and
andb
jge
lret
insl
mov
lret
call
jbe
outsl
stos
nop
outsb
add
add
xor
push
popf
rorl
jg
dec
mov
addb
scas
xchg
mov
dec
or
shlb
addr16
and
sub
orl
pop
dec
inc
aas
nop
mov
inc
jb
push
and
call
in
pop
cs
sub
cmp
pop
imul
or
call
pop
sub
or
pop
adc
out
ja
xorb
fcmovnb
lahf
mov
adc
jns
cmpsb
rolb
je
push
mov
outsl
mov
jno
adc
imul
add
cltd
sbb
cmp
xchg
test
ret
test
pop
ds
mov
push
in
es
pop
cmp
pop
sbb
mov
push
ret
test
call
or
insb
inc
popa
and
inc
gs
jo
notl
mov
rorb
push
cmp
outsl
int
je
pop
es
int3
push
je
xor
sub
inc
sub
or
mov
sub
stos
adc
fst
pop
xchg
mov
or
adc
inc
sub
stos
mov
sbb
out
lods
and
push
xchg
sbb
xchg
push
mov
adc
xchg
add
jno
push
mov
icebp
repnz
push
into
outsb
test
push
mov
scas
add
and
test
inc
pop
stos
xor
add
pop
adc
addr16
add
sub
out
cmp
mov
sub
test
stos
and
addl
es
aam
adcb
pop
call
filds
stos
dec
hlt
push
mov
int3
dec
enter
inc
sub
dec
arpl
xor
inc
flds
pop
daa
popa
pop
or
cmpsl
sar
and
fldenv
fxch
adc
xchg
nop
dec
jp
cmp
dec
inc
ja
rolb
ja
cs
fld
ret
aad
jmp
and
fsubs
dec
movsb
and
jb
call
pop
and
add
rcll
and
sbbb
movsb
int
lods
and
xor
scas
movsb
ljmp
inc
fstps
xor
mov
inc
xlat
fnstenv
call
movsl
xor
imul
xlat
inc
mov
mov
xor
int3
mov
and
and
std
xor
daa
mov
fcoms
and
inc
fstps
fldenv
fstps
cmpsl
hlt
flds
test
mov
and
push
loopne
mov
or
nop
or
sbb
fstps
and
cs
rcrb
rolb
jl
mov
lcall
mov
and
and
mov
adc
inc
push
and
les
add
test
adc
inc
or
inc
inc
fldcw
fnstcw
xchg
rorb
pop
or
je
jmp
fnstenv
push
lahf
jg
cmpsl
mov
pop
and
rclb
inc
fldl
adc
sbb
insb
sub
imul
jae
and
pushf
sbb
sbb
int3
vmovaps
stos
pop
xchg
es
stos
in
xchg
rclb
test
inc
inc
popa
nop
outsb
out
fiadds
iret
lds
adc
or
sub
aad
pushf
sbb
or
fsts
or
jno
flds
sub
mov
aad
inc
sbb
sahf
inc
or
int
call
and
fnstenv
nop
inc
or
or
popf
cmp
and
add
nop
mov
insl
pop
mov
mov
call
and
in
xor
pop
mov
out
xchg
mov
pop
mov
jnp
mov
loop
out
pop
and
cmp
sbb
push
adc
push
sbb
fs
ucomiss
mov
mov
xchg
or
push
pop
dec
mov
cwtl
cmp
outsb
cmpb
stos
mov
sahf
xchg
or
loope
fisubs
jge
xchg
btl
pop
pop
xor
push
loop
ret
or
call
mov
jae
push
loope
cwtl
mov
mov
icebp
cs
aas
fidivs
xchg
push
push
push
cmp
push
or
pop
dec
jb
cs
cmp
lahf
sbb
pop
lsl
xor
dec
call
add
push
pop
cmp
add
rcrb
sti
mov
cmc
or
xchg
adc
xchg
shrb
push
je
jle
call
and
shlb
dec
adc
bound
pop
inc
mov
or
rorb
cmp
das
les
fistpl
je
dec
aad
add
or
imul
andl
inc
and
insb
mov
pop
push
add
jnp
or
push
and
sbb
jnp
and
fadds
inc
push
jle
orb
sarl
cwtl
insb
push
shl
mov
pop
enter
lods
aam
push
xchg
or
xchg
jnp
push
sbb
ss
insb
jnp
adc
sub
dec
jnp
jl
sbb
xchg
orb
fnstcw
sbb
xor
nop
rolb
sub
je
or
push
add
sbb
pusha
inc
adc
push
pop
je
add
fcomps
cld
pop
in
mov
push
mov
mov
sbb
jp
shlb
xor
mov
in
inc
test
cmp
popa
mov
enter
mov
xlat
les
dec
mov
push
inc
xchg
mov
ja
rclb
mov
xor
fcoml
test
ljmp
mov
ret
test
xor
xchg
test
inc
mov
mov
mov
jl
bound
call
pushf
in
outsl
nop
nop
lret
popa
inc
mov
mov
dec
sub
fs
xor
rorb
es
popa
jno
pcmpgtb
int3
je
fnstenv
or
xor
repz
xchg
stos
sub
adc
fwait
ret
test
out
xor
mov
pop
popa
stc
jb
dec
aam
or
inc
or
aas
mov
aaa
unpcklps
das
shlb
call
and
call
in
das
pop
sub
add
call
lock
call
cmp
fdivrs
int
inc
call
jg
lret
xchg
mov
lods
andps
movsl
in
xchg
das
pop
call
pusha
call
bnd
insb
call
into
xchg
das
pop
je
gs
pop
jl
push
in
mov
adc
jb
pop
sub
xor
nop
sbb
cwtl
add
xchg
dec
movsl
mov
fists
adc
sub
les
movsl
lods
int3
mov
test
mov
xchg
lret
fdivl
push
sub
push
in
sub
cmp
xor
es
sbb
lret
add
add
lods
cli
leave
or
leave
gs
dec
ja
xor
adc
mov
sbb
cs
dec
in
stos
and
sub
push
mov
xor
dec
jle
jae
push
cmp
inc
push
and
inc
dec
cmp
jmp
cs
adc
lret
pop
or
stos
pop
pusha
divl
dec
push
xchg
pop
xchg
rclb
inc
rorb
ret
lret
dec
xor
xor
inc
pop
pushf
and
mov
mov
xchg
xchg
xchg
ss
adc
js
imul
sbb
xor
push
lcall
and
cmp
dec
cli
cmp
sbb
inc
dec
lcall
mov
dec
or
cli
mov
dec
inc
mov
mov
nop
out
add
mov
add
adc
inc
lock
xchg
shlb
xchg
je
add
cs
xchg
lcall
daa
sub
push
daa
or
add
ror
inc
pop
pop
mov
dec
dec
or
test
loopne
pop
mov
xchg
add
and
sbbb
test
shlb
add
or
ja
inc
call
jmp
dec
adc
mov
clc
push
movsb
jge
and
inc
jge
fsubs
push
aaa
jge
sbb
stos
pop
cmp
cs
popa
push
inc
pop
pop
adc
sbbb
cld
push
inc
aam
insb
pop
and
movsb
ffree
pop
call
sbb
jae
mov
adc
pop
xchg
das
lods
and
jb
pop
and
inc
shlb
dec
dec
sub
addb
pop
adc
adc
mov
push
jmp
sbb
mov
andb
sbb
cs
pusha
enter
pusha
push
mov
sub
add
cmp
inc
scas
sarl
sbb
mov
or
ret
stc
mov
and
outsb
push
mov
pushf
jb
sub
pop
push
or
or
and
xor
sbb
sub
adc
adc
scas
mov
add
loope
repz
outsb
add
fbld
fs
nop
mov
jmp
xchg
push
rclb
dec
push
adc
or
stos
cmpsl
xchg
sbb
test
pop
push
adc
jae
outsb
ficoms
push
jae
sub
lods
push
mov
cmp
sbb
inc
or
push
xchg
cmp
mov
jg
jae
pop
sbb
mov
cli
sub
ljmp
push
cltd
jecxz
scas
in
push
pop
mov
adc
mov
mov
jne
and
je
shll
dec
sub
or
jo
gs
pushf
outsb
loopne
and
cli
gs
jne
cmp
shrb
cld
xor
call
je
jne
sarl
xor
stos
dec
push
pop
cmpsb
hlt
insl
ret
jne
add
inc
xorb
shll
or
cmp
cltd
jne
divl
xor
cmp
ret
gs
andb
pop
jne
xor
rcr
jne
sub
pop
pop
cmpsb
je
jne
jo
dec
jmp
lret
xchg
or
jnp
repnz
sub
je
sub
mov
inc
cmp
jne
js
xchg
mov
cmp
mov
and
xchg
sub
in
pop
jne
hlt
or
test
sbb
fwait
shlb
or
inc
gs
dec
or
out
rorl
xchg
fwait
and
punpcklbw
fwait
adc
data16
sbbb
adc
jno
mov
adc
fwait
lods
inc
inc
ja
fwait
xor
sbb
fwait
rorb
and
fwait
push
femms
xor
fwait
dec
js
jmp
pop
push
fwait
xchg
call
lods
or
mov
sub
inc
je
push
ret
scas
mov
cmp
les
ret
sbb
ja
je
fwait
add
adc
push
pop
push
cmpsl
pop
inc
or
cmpsl
pop
push
mov
cwtl
jmp
adc
fistpll
or
add
push
fbstp
inc
add
or
lods
stos
mov
xchg
mov
sbb
and
pop
test
loopne
loopne
push
dec
mov
xor
pop
scas
mov
je
or
add
repz
jb
mov
sub
dec
sbb
mov
push
push
addr16
adc
xor
mov
call
sbb
negl
call
jbe
dec
push
mov
lea
lcall
pop
xor
or
je
sarb
sbb
mov
add
hlt
xchg
rclb
xchg
bound
mov
je
and
nop
cmpsb
sub
les
xchg
jl
sbb
arpl
mov
inc
inc
xchg
pop
inc
cmp
loop
movsl
fs
and
or
idivb
enter
imul
jmp
inc
pop
pusha
adc
push
insb
xchg
xor
in
mov
mov
or
les
inc
xorl
sbb
arpl
sbb
stc
push
cld
add
sbb
icebp
mov
mov
pop
nop
sbb
shlb
inc
push
out
push
or
push
rorb
adc
mov
and
subl
inc
das
pop
and
mov
es
and
and
out
adc
mov
inc
and
mov
or
add
call
icebp
adc
sbb
fisttpll
shrd
addb
incl
jbe
add
mov
into
inc
and
jle
pop
cmp
loopne
mov
nop
add
sysret
and
adc
push
and
lea
movl
dec
dec
adc
shlb
das
push
or
xor
push
movl
adc
add
je
and
jmp
sub
push
or
test
mov
sarl
pop
aad
inc
ja
cmp
sbb
pop
mov
dec
fsubrs
xor
pop
jmp
or
xchg
adc
push
xchg
dec
jnp
mov
adcb
nop
popa
imul
fidivrs
shll
dec
or
cmpsl
loope
add
mov
mov
pop
inc
sahf
int3
mov
push
pop
cmpsl
adc
pushf
in
inc
xchg
mov
adc
mov
jecxz
mov
or
out
cmp
xchg
outsb
dec
fsts
adc
adc
fadds
mov
inc
ljmp
push
mov
inc
inc
pop
cmp
xchg
push
incb
movsb
xchg
xchg
add
add
pop
imul
push
inc
dec
xor
and
sarb
push
mov
xchg
and
or
mov
cwtl
mov
mov
daa
mov
or
or
push
xchg
addb
sub
or
mov
add
push
inc
inc
xchg
insb
xchg
add
lahf
pop
fdivl
and
mov
push
out
stos
add
mov
sbb
leave
mov
adc
adc
lcall
hlt
ret
mov
xchg
outsb
nop
inc
fistpl
mov
fwait
jg
and
jmp
mov
or
sub
push
popf
int
sub
bsf
adc
es
mov
je
push
call
cmpsb
je
cs
cmp
out
pop
pop
fucom
lcall
leave
xchg
out
or
mov
pop
mov
icebp
push
movsl
hlt
cld
call
jb
mov
mov
or
xorb
mov
or
ljmp
or
adcb
roll
andl
mov
sub
movsb
mov
sti
fwait
repz
adc
cmpsb
orb
adc
stos
xlat
fwait
push
jnp
inc
cltd
imul
mov
or
clc
dec
mov
adc
adc
xchg
fwait
jge
mov
enter
jb
insl
test
jae
fidivl
xchg
fldt
and
mov
rorb
sbb
shl
jge
outsb
adc
mov
sti
lcall
adc
add
addr16
inc
push
sub
in
nop
sbb
or
or
mov
inc
out
adc
xchg
sbb
out
repz
mov
lret
out
nop
inc
mov
cmp
and
ss
sbb
xchg
adc
mov
jb
lret
dec
int
mov
test
sbb
cmpsb
dec
mov
in
cltd
inc
push
and
or
out
into
and
cmp
pop
push
jo
mov
dec
sbb
and
clc
stos
inc
inc
jmp
in
or
enter
mov
adc
fwait
dec
add
add
iret
pop
ds
repz
cmp
add
and
or
sbb
out
fadd
scas
sahf
mov
jns
out
bound
sub
sarl
or
sbb
aam
out
fnstsw
pop
push
lods
push
mov
int3
loop
push
inc
push
push
sub
sti
sahf
out
push
nop
movsb
push
push
xchg
jl
iret
repz
push
inc
ss
cmp
je,pt
push
sahf
out
cmp
push
repnz
fmulp
negl
xchg
mov
ret
cmp
sbb
incb
add
es
loop
cmpsl
stc
cmp
sbb
sahf
out
mov
sbb
cmp
shll
pushf
scas
lret
ds
call
sub
out
sahf
inc
pop
data16
nop
jns
out
sahf
lods
mov
ficomps
decb
ss
inc
push
pop
adc
js
out
jb
jle
popa
idivb
sahf
mov
daa
rol
loop
clc
pop
mov
cmp
cmp
aaa
je
fs
push
cmp
adc
daa
mov
mov
jbe
add
fwait
insl
aad
jae
jbe
push
cwtl
cmpsl
insl
mov
add
out
iret
dec
test
xrelease
push
jbe
and
test
inc
sbb
loope
test
pop
pop
mov
and
jo
push
es
pop
push
inc
sub
insl
xor
inc
push
or
or
jge
dec
push
je
dec
pop
pop
jo
stos
push
or
sbb
push
push
ja
daa
sub
push
mov
or
lahf
es
mov
js
pop
leave
aad
xor
xor
insb
xchg
or
mov
ss
xor
add
fisubs
test
add
adcb
out
insl
adc
push
xor
sahf
ja
jg
sub
dec
cmp
lahf
or
rolb
fldt
cmp
bound
imul
mov
cmp
adc
xchg
outsl
inc
pop
mov
pop
jnp
inc
sub
pop
adc
push
faddl
ret
push
pcmpeqd
mov
imul
cwtl
add
dec
sub
shrl
stos
outsl
out
insl
xor
es
push
pop
clc
fsubp
cmp
mov
jg
mov
sbb
aas
ret
je
push
sbb
das
pop
xchg
jg
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
shr
fimuls
pop
inc
lcall
dec
sbb
test
pop
dec
and
push
dec
imul
push
jae
inc
jne
outsb
je
or
jae
inc
js
les
std
in
lret
inc
inc
xor
sub
sub
sub
filds
sub
xor
xor
jge
xor
sti
mov
inc
xor
xor
ss
xor
cmp
fdivl
cmp
push
xchg
xor
clc
inc
inc
xor
mov
or
pop
add
pop
fs
psllw
jo
mov
data16
or
cs
sbb
cmp
push
xor
fdivrp
aaa
fmuls
inc
inc
push
and
inc
aaa
adc
xor
inc
inc
or
nopl
roll
jl
push
arpl
xor
jle
scas
sahf
inc
push
inc
push
dec
and
cmp
ss
add
fistpl
and
dec
dec
mov
outsl
mov
dec
loopne
and
mov
orl
push
push
fadds
imul
pop
jae
cmp
sub
inc
push
outsl
jle
out
inc
out
adc
push
sub
out
fnstcw
push
mov
fs
mov
lods
sahf
add
movd
fsubr
cmpsb
push
hlt
or
aam
dec
xor
jnp
insb
adc
je
test
and
jo
outsl
push
outsl
ret
xchg
xor
imul
fs
je
push
arpl
jno
jns
push
insl
xor
inc
cmp
add
mov
cmpsl
enter
xchg
inc
pop
mov
pusha
jne
ss
mov
subb
out
mov
std
inc
arpl
loop
roll
data16
ret
cmpsl
sub
lret
jne
mov
and
loopne
mov
xor
or
pop
cmovb
push
add
dec
add
sarl
js
xor
pop
push
jp
int
mov
out
xchg
xchg
jmp
push
and
dec
inc
mov
and
inc
push
imul
imul
ret
xchg
loopne
jns
scas
pop
cmp
dec
fs
imul
push
mov
popa
fs
jo
push
fiaddl
rolb
push
xchg
ret
xor
dec
movsb
jmp
and
fwait
outsl
push
pop
arpl
add
jmp
inc
cs
push
push
push
add
ja
dec
mov
shlb
add
outsb
outsl
push
popa
imul
inc
outsb
popa
pusha
mov
add
sbb
fsubl
mov
mov
pop
add
and
pop
add
inc
inc
daa
inc
xchg
sub
repnz
fsubl
addl
pop
mov
test
adcb
push
xchg
aaa
and
xchg
pushf
add
adc
popa
fcomps
les
jg
mov
xor
add
dec
cmpsl
add
mov
mov
mov
sahf
addr16
add
orb
int
jns
or
add
mov
cmp
adc
iret
repz
xchg
adc
push
sbb
sbb
int
jns
sbb
call
idivl
push
das
push
pop
nop
cld
xchg
out
scas
and
cli
js
mov
cld
stc
jp
push
cld
sbb
jns
fdivr
mov
cmpsl
inc
mov
sbb
dec
or
xor
push
dec
pop
mov
and
sbb
push
push
dec
push
dec
sbb
adc
cmp
dec
sbb
cmp
es
test
stc
int3
sub
adc
push
cld
or
jns
cmpsl
lock
int3
rol
sahf
mov
ds
xor
mov
mov
repz
cmpb
cmp
pusha
pop
mov
sahf
push
push
dec
dec
inc
inc
repz
jns
push
xor
sub
repz
sub
sbb
adc
iret
repz
or
add
jns
cmpsl
stc
cld
or
hlt
call
out
enter
int
jns
jo
xor
lock
int3
cmp
repz
mov
imul
or
push
fsub
jns
out
les
sahf
push
sub
aam
mov
cmp
inc
sbb
add
pushf
out
outsl
call
cwtl
jl
jno
inc
iret
inc
push
es
imul
inc
or
imul
inc
push
mov
add
sbb
dec
dec
adc
sub
adc
add
adc
inc
nop
inc
and
dec
cmp
daa
call
mov
mov
adc
adcb
scas
push
and
gs
inc
xchg
pop
adc
inc
mov
lret
and
pop
and
mov
sbb
and
cmpsb
and
insb
adc
in
push
pop
push
jmp
sbb
pop
lret
and
jo
pushw
lods
shll
adc
jbe
adc
mov
adc
stos
xchg
icebp
or
mov
pushf
andb
mov
shrb
inc
mov
dec
ret
jns
out
inc
push
pushl
roll
add
movl
rolb
mov
inc
cmp
pop
jne
pop
mov
add
shlb
adc
ret
jne
imul
xor
inc
pop
fidivs
arpl
imul
adc
mov
or
adc
sub
mov
xor
jne
cmp
into
fstpt
push
daa
push
push
push
insb
das
lods
and
inc
iret
pop
mov
add
insb
lods
cwtl
lahf
add
das
jae
add
cmp
add
addr16
and
mov
dec
enter
mov
enter
insb
pop
sarb
jg
es
dec
fcoms
aam
fisttpl
cmp
ret
paddsw
aas
int3
data16
out
adcb
jbe
add
popa
pop
and
xlat
jns
lds
fisttps
sub
cltd
ss
lcall
mov
push
inc
lret
les
mov
filds
or
push
popf
jl
jo
push
in
push
aas
sbb
sbb
lahf
jg
cmpsb
jg
dec
and
loop
xor
adc
or
mov
rorl
vmptrst
mov
aas
mov
cs
outsl
pinsrw
xchg
pushf
dec
fcmovnbe
mov
aas
xchg
out
jbe
in
packsswb
data16
push
push
aam
insb
adc
imull
loopne
dec
mov
dec
jecxz
adc
loopne
pop
jnp
xor
lock
enter
fcmovnu
imul
push
leave
xor
mov
pop
pop
pop
test
pop
add
dec
inc
inc
adc
nop
divb
imul
cltd
sub
in
std
dec
stos
push
jb
push
lcall
scas
pop
push
and
and
inc
push
push
push
add
cmc
xchg
lcall
sub
mov
sub
add
fsubrp
daa
xor
ja
and
and
add
jp
test
repnz
outsb
inc
lods
add
sbb
mov
ljmp
mov
sub
adc
bound
dec
push
jb
or
and
imul
testb
jae
arpl
add
outsb
push
mov
xchg
dec
add
fsubr
sbb
mov
mov
push
popa
jae
push
jae
push
sbb
inc
dec
outsl
popa
push
push
sbb
add
mov
dec
in
pop
lret
out
adc
cmp
dec
inc
adcb
inc
sbb
mov
addb
add
sbb
clc
push
and
add
shrb
dec
mov
inc
push
or
dec
pop
das
push
pop
adc
mov
pop
push
js
out
mov
lods
jb
jns
imul
mulb
and
aad
add
lods
cmpsl
xchg
mov
xor
push
sbb
divb
sbb
addr16
adc
jge
pop
jnp
jne
insl
inc
pusha
inc
and
test
and
imul
sub
push
jecxz
xor
add
adc
push
inc
add
fbld
jne
fisubs
lods
gs
flds
jmp
add
dec
stos
fcmovnbe
sub
and
push
push
es
pop
sarb
xchg
adc
ret
and
popf
mov
pop
ds
sub
inc
lahf
clc
int3
pop
je
push
dec
xor
dec
add
pop
lret
cltd
mov
inc
cs
out
jecxz
mov
fidivrl
adc
jecxz
and
push
call
aaa
adc
lahf
outsb
adc
ret
or
and
add
mov
inc
jne
aas
das
pop
dec
rolb
outsl
mov
rcrb
pop
sub
mov
lret
stc
add
push
lcall
orb
test
fadds
add
pop
pop
mov
dec
pop
addr16
insl
mov
bound
arpl
lds
mov
lret
mov
and
push
outsl
jle
dec
sbb
xchg
dec
clc
aad
shlb
add
push
inc
add
add
adcb
sbb
lret
mov
lock
jecxz
add
mov
out
and
push
xchg
jb
mov
mov
adcb
fiaddl
jp
mov
inc
jmp
pop
sbb
ja
js
aaa
push
sbb
pop
or
aas
inc
data16
jb
lods
sbb
jno
inc
sbb
push
dec
ja
xchg
stos
enter
jne
xor
xor
inc
or
mov
jne
stos
add
jnp
add
jo
add
add
outsl
inc
pop
and
fs
inc
xor
add
ds
dec
add
ret
cmpsl
pusha
push
jo
jno
xchg
mov
add
jmp
into
pop
roll
sahf
add
in
in
xchg
cmpsl
xor
sbb
push
fs
imul
add
iret
lret
je
sbbb
lret
xchg
fwait
sbb
into
out
outsl
inc
cmpsl
add
mov
push
push
push
mov
sub
jno
ret
push
and
test
jns
insb
jmp
cmp
cld
inc
jae
adc
add
je
sbb
inc
divb
add
add
jno
push
add
cmp
xor
mov
pop
sbb
jno
sarb
into
insb
sbb
cmp
dec
jle
dec
dec
stos
cmp
sbb
xor
sbb
mov
lret
fbld
pop
mov
mov
push
popa
scas
push
sbb
fwait
xchg
mov
ja
cwtl
aam
push
shrb
jecxz
ja
addb
push
pop
in
aam
and
inc
mov
inc
fisttps
lahf
idivl
push
sbbb
adc
pusha
sbbb
mov
and
add
and
cmp
sub
and
mov
xlat
pop
add
in
inc
add
add
xor
cmp
inc
xor
subl
xchg
push
jns
fs
lods
stos
push
ret
pusha
jmp
pop
pop
hlt
sbb
mov
ss
rorb
shlb
push
inc
xchg
inc
adc
adc
add
test
test
lock
lcall
mov
jns
adc
add
clc
out
cmp
repz
call
cmp
repz
sahf
out
iret
test
pop
mov
sahf
out
nop
mov
in
pusha
push
pop
push
inc
iret
repz
cmp
and
sbb
dec
shrb
in
lock
repz
push
fcom
enter
cmp
mov
cmp
repz
push
cmp
iret
repz
sub
sbb
or
sahf
out
ds
in
hlt
in
in
data16
out
int3
mov
xchg
out
sahf
testl
push
inc
popf
iret
repz
or
jmp
adc
push
orl
add
cmp
repnz
sahf
dec
push
mov
loopne
and
add
hlt
out
lds
lock
or
mov
and
sbb
push
aaa
cmovne
add
adc
jbe
addb
imulb
inc
dec
pop
nop
fildll
add
dec
pop
sbb
mov
adc
in
pop
or
aas
test
xchg
scas
lcall
adc
and
fnsave
orl
lods
mov
adcb
jns
add
sbb
fwait
out
mov
push
pop
jo
add
in
cmp
add
or
inc
movsb
sbb
mov
outsb
sbb
fiaddl
or
jae
insl
xor
dec
sub
xchg
insl
jbe,pn
and
mov
pop
es
xor
xor
ds
je
add
mov
loopne
pop
xor
jae
mov
repz
lods
popf
shlb
jbe
sbb
inc
jnp
cmp
dec
and
add
and
addb
pop
or
adc
pop
cmp
shlb
jae
popaw
insb
rcrl
pusha
sub
insl
stc
das
sti
ss
inc
loopne
push
sbb
push
jnp
lahf
ds
inc
add
inc
pop
pop
adc
inc
insl
pop
fcmovbe
add
jg
xor
xor
sbb
bound
loopne
sbb
das
xor
xorb
xor
xor
xor
xor
xor
pushl
xor
movsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
outsl
xor
test
enter
ljmp
ss
es
dec
jmp
pushl
push
aaa
mov
iret
aaa
call
aaa
adc
dec
cmp
cmp
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jg
sub
ret
add
push
lock
idivl
or
jg
xchg
add
adc
and
dec
xor
xor
outsb
xor
popf
xor
xor
xor
xor
xor
xor
xor
xor
mov
xor
aas
clc
fnsave
xor
xor
xor
out
xor
xor
xor
xor
aas
cmp
mov
mov
mov
les
fnsave
jecxz
call
xor
jno
cltd
ss
fnstenv
loop
in
ss
aaa
sbb
jno
mov
aaa
loopne
add
or
mov
inc
cmp
loopne
jmp
cmp
cmp
cmp
cmp
push
cmp
jl
cmpl
mov
cmp
aas
push
adc
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
cmp
test
jo
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
movsb
pop
xor
xorb
pushl
pushf
xor
xor
xor
xor
jl
mov
mov
xor
xor
xor
xor
pushl
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
jo
xchg
xor
xor
fstpl
xor
xor
xor
xor
xor
xor
push
aaa
call
fisttps
sub
ss
clc
loop
cmp
cmp
cmp
mov
mov
cmp
sar
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
xchg
inc
sbb
aas
inc
aas
pop
aas
ja
pusha
pop
ljmp
jle
push
or
cmp
pop
xor
push
xor
jmp
cltd
xor
xor
xor
xor
xor
xor
ret
cld
pop
cmpsb
push
xor
xor
lcall
clc
xor
xor
xor
xor
nop
xor
out
in
xor
fwait
outsl
jmp
scas
clc
xor
cmp
pop
lods
cmp
pushl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
in
cmp
cmp
std
cmp
cmp
lcall
mov
and
cmpb
ds
imul
xchg
outsb
xor
xor
decl
xor
sbb
xchg
cmp
cmp
mov
ljmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
and
cmp
dec
aas
push
shr
mov
aas
cmpb
aas
sarl
aas
in
out
out
jo
std
mov
xchg
xor
xor
xor
xor
cld
add
scas
xor
xor
xor
loop
xor
xor
xor
cmp
xor
mov
xor
xor
scas
std
xor
cmc
incl
data16
ss
add
or
aaa
and
jg
loopne
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
xchg
mov
xchg
aaa
mov
aaa
int
repz
xor
cmp
xchg
outsl
cmp
xor
icebp
cmp
push
mov
cmp
cmp
sbb
push
cmp
inc
cmp
pop
aas
decb
push
cmp
sbb
cmp
push
stos
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
repnz
cmp
sub
xor
cmp
cmp
incl
dec
cmp
push
cmp
insl
cmp
js
cmpl
mov
cmp
cmp
cmp
cli
fidivrl
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
cmp
push
cmp
jae
mov
cltd
cmp
jp
call
cwtl
ds
ds
jecxz,pt
out
ds
das
aas
cmp
je
jge
mov
out
xchg
movsl
aas
stos
aas
mov
mov
shlb
push
xor
insl
stos
lcall
call
in
or
adc
and
aas
std
xor
xor
xor
mov
xor
xor
xor
xor
add
fcomip
xor
xor
mov
jl
cmpsl
xor
xor
scas
scas
outsl
sarb
xchg
xor
xor
xor
cmpsb
pushl
xor
pushl
cmpsb
xor
xorb
aaa
fwait
sahf
cmpsb
mov
pop
mov
cmp
scas
cmp
xchg
or
fdivrl
aaa
cmp
mov
inc
xchg
jo
data16
dec
push
ret
jg
nop
cmp
cmp
cmp
mov
add
or
xor
cmp
pushl
pop
aaa
bound
data16
push
outsb
aaa
jb
jbe
xchg
ja
js
jge
pop
decl
cmp
cmp
cmp
cmp
cmp
cmp
jle
mov
mov
cmp
ja
lahf
xor
xchg
aas
clc
stos
dec
pop
push
mov
insl
xor
jecxz
icebp
das
mov
xor
xor
xor
jl
loopne
fisubrl
aaa
mov
ret
aaa
jmp
ljmp
aaa
repnz
or
cmp
pop
cmp
jge
mov
jg
out
cmp
cmp
jbe
xchg
cmp
cmp
cmp
mov
pushl
and
cmp
cmp
fdivrs
push
aas
jne
mov
lcall
and
mov
fwait
xor
pop
add
xlat
xor
dec
or
repnz
aas
xor
aaa
mov
pop
xor
fsub
jg
call
es
dec
ss
outsb
notb
ss
in
and
cmp
cmp
cmp
mov
test
cmp
cmp
pop
clc
das
inc
pop
push
imul
cmp
test
mov
ret
jg
cmp
cmp
dec
cmp
cmp
jae
aam
inc
cmp
cmp
cmp
jp
mov
cmp
cmp
pop
sarb
pop
jge
incb
dec
cmp
mov
and
loopne
ljmp
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
addr16
sbb
ret
jg
sbb
xor
xor
pop
xor
xor
cmp
decl
xor
xor
xor
xor
xor
xor
mov
xor
push
pop
ljmp
aaa
xor
ds
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
stos
incl
cld
out
in
aaa
cli
aaa
mov
cmp
mov
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jecxz
scas
ret
adc
jbe
cmpl
cmp
cmp
sub
adc
and
pusha
aas
cmpb
aas
fdivrl
loop
out
out
pop
sar
loop
push
push
sub
jne
adc
xor
jae
cmp
jne
jg
xchg
xor
xor
xor
or
jge
fdivr
xor
xor
ljmp
xlat
pop
loopne
adc
adc
sbb
sbb
sub
sub
adc
cmp
mov
cmp
cmp
cmp
cmp
cmp
ljmp
push
out
xor
mov
cmp
inc
xor
xor
push
andl
decb
pushf
xor
mov
mov
xor
incl
or
xor
xor
xor
cmp
sub
aaa
or
xor
cmp
inc
cmp
cmp
adc
push
rcrb
cmp
adc
decl
fidivs
cmp
cmp
add
mov
push
push
rcr
cmp
mov
ljmp
fdivl
lock
mov
call
add
or
adc
push
lock
stos
sbb
and
and
sub
sub
xor
pop
jg
cmp
inc
cmp
cmp
pop
cmp
aas
sar
cmp
insb
cmp
je
jl
cmpb
test
fcompl
mov
nop
xchg
cwtl
mov
mov
aas
inc
mov
push
aas
push
aas
xchg
aas
cwtl
aas
cmp
pop
clc
lods
aas
mov
shrb
aas
fdivrs
loopne
clc
jbe
lahf
jle
adcb
pop
bound
pushl
clc
xor
xor
inc
xor
xor
cwtl
xor
xor
aas
push
cwtl
lock
xor
cmpsb
cmp
cmp
fadds
add
xor
pusha
inc
fcomps
and
fimuls
jmp
sahf
ss
sahf
int3
shlb
aam
sbb
cmpsl
fdivs
fdivl
loopne
in
call
ss
ss
ss
loopne
dec
jle
or
or
adc
adc
aaa
sbb
mov
aaa
and
sub
sub
xor
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aas
cli
call
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
nop
aaa
xchg
aaa
cwtl
into
mov
jmp
fmull
aaa
mov
mov
aaa
enter
shlb
aam
fdivs
pop
mov
fcompl
in
out
aaa
hlt
dec
pop
mov
xor
aaa
hlt
add
or
sbb
cmp
sbb
cmp
or
cmp
mov
cmp
pop
jg
mov
cwtl
cmp
cmp
sub
cmp
cmpl
push
cmp
lcall
jo
test
mov
mov
cmp
mov
inc
je
mov
cmp
mov
or
xchg
repnz
out
out
xchg
movsb
fs
lret
lods
pop
push
aaa
cmpsb
punpcklbw
icebp
push
fsin
stc
repnz
aaa
mov
aaa
stos
mov
push
lret
aaa
incl
jmp
sti
das
gs
push
aaa
mov
or
out
out
sub
in
add
push
dec
loope
addb
jl
inc
add
repz
add
cmc
test
daa
out
mov
sub
test
lret
lods
mov
out
cmp
and
addb
shrl
mov
sub
add
insb
repnz
and
or
sbb
mov
out
shlb
xor
adc
or
cmpsb
dec
add
cwtl
insb
or
add
daa
add
sub
xor
adc
mov
add
push
sbb
dec
inc
int
xor
test
addb
fsubl
or
fsts
in
pusha
gs
dec
add
gs
mov
mov
popa
sbb
pushf
dec
xor
iret
pop
popa
sbb
sbb
nop
out
lods
shr
mov
xchg
sbb
push
addr16
idivb
push
sub
cmp
imul
pop
and
aaa
jle
push
mov
or
add
inc
inc
jb
mov
adc
cmpsb
xor
and
add
adc
pusha
mov
addr16
and
fcoms
and
das
adc
dec
jbe
call
aas
rolb
jmpw
es
out
sbb
pop
mov
mov
mov
insl
pop
push
std
sub
or
jo
aaa
add
mov
test
loope
mov
subb
or
orb
andl
cmpl
cmp
imul
mov
push
inc
inc
jbe
sbb
ret
dec
inc
ljmp
pop
ds
and
sbb
mov
rcll
sahf
add
lret
cmc
mov
rcrb
jnp
dec
sbb
shr
inc
cmp
sub
inc
testb
pop
mov
negl
pushf
pop
jmp
push
cmp
call
add
cld
cs
out
arpl
xchg
call
cmp
mov
or
and
add
je
cltd
fwait
add
inc
dec
test
add
dec
add
adc
xor
pop
add
or
xchg
fstl
inc
loop
or
jl
jae
cmp
pushf
xor
cmp
jb
push
and
or
adc
push
sahf
inc
or
mov
xchg
je
aas
lea
push
ret
xchg
pop
clc
shl
or
fnsave
shll
dec
test
pop
push
pop
inc
mov
mov
add
push
insl
pop
dec
sub
and
addl
ret
xchg
mov
pusha
or
outsb
dec
mov
push
adc
sbb
add
pop
ret
mov
push
mov
adc
xor
push
lcall
mov
dec
push
fs
jno
pop
aaa
push
jecxz
pushl
pusha
add
flds
sbb
fwait
dec
push
jo
push
add
adc
stos
lret
cli
xchg
or
pop
add
test
mov
cmp
and
dec
cmp
jne
adc
add
push
movsl
fnstenv
loope
add
js
sbb
push
pushf
mov
fstps
flds
cmp
or
jo
pop
int3
jne
js
fldenv
xchg
or
lahf
mov
jo
mov
xor
jmp
dec
rcr
xor
lret
xchg
inc
fnstcw
cmp
cmp
or
mov
inc
pop
and
xchg
xchg
pop
xchg
add
cmp
dec
adc
cmp
xchg
sub
inc
sub
xchg
xor
sub
mov
sub
inc
arpl
pmaxsw
or
cltd
je
jge
ret
ss
push
mov
xchg
jmp
lahf
jno
sahf
mov
addl
inc
cmp
outsl
inc
adc
cmp
jle
cmp
push
mov
and
mov
xchg
fwait
and
sbb
jecxz
outsb
or
mov
popf
xchg
aam
lods
add
pop
and
cmp
or
stos
add
addb
enter
mov
push
xchg
addl
call
jmp
and
and
push
cmp
dec
mov
pop
out
mov
push
pop
pushf
aaa
adc
adc
push
sbb
dec
sub
rcll
adc
insl
insb
in
xlat
sbb
pop
cli
sbb
sbb
and
and
push
ss
pop
xor
ds
dec
mov
call
mov
fucomip
or
fmuls
mov
or
fs
jbe
into
aaa
xchg
aaa
mov
and
rolb
dec
les
cmp
popa
dec
inc
xchg
jne
aaa
cwtl
push
and
push
cs
and
cmp
and
aaa
mov
push
sbb
call
es
add
xchg
xchg
sbb
mov
and
adc
nop
mov
mov
inc
lret
mov
push
add
push
adc
gs
and
add
gs
fwait
ret
cmp
sbb
push
push
add
sbb
insl
add
movsl
sbb
mov
push
xor
das
mov
sub
sbb
cmpl
or
cmp
push
push
push
jbe
adc
sub
je
push
or
repnz
sbb
mov
je
scas
fidivrl
add
inc
jne
mov
fisttpl
mov
sbb
xor
xor
add
pop
fistl
jns
add
insb
subb
fdivl
ret
insb
push
jae
jb
inc
testl
adc
out
pusha
cmp
inc
ja
mov
ret
adc
insb
mov
mov
mov
inc
mov
fdivrs
movsb
sub
fiaddl
add
les
jg
pop
popf
cmp
nop
and
jg
and
cmp
mov
es
dec
pop
testb
sbb
ljmp
pop
sub
jnp
xchg
fs
lret
repz
dec
inc
clc
nop
add
sbb
gs
out
jmp
ljmp
lret
std
add
and
out
outsb
cmpb
inc
pop
nop
inc
push
fs
pop
test
push
mov
dec
lret
adc
gs
push
jns
shrl
lock
int3
repz
cmp
or
and
xchg
mov
xor
jnp
inc
cmp
inc
push
push
push
scas
adc
out
mov
cltd
jle
inc
adc
and
rclb
sub
je
cltd
and
sbb
mov
mov
cmp
cltd
mov
xor
in
cltd
add
stc
adc
inc
push
call
or
pop
pusha
mov
pop
or
xchg
and
call
test
cmpsl
ret
add
pusha
adc
gs
xor
daa
sahf
xchg
lret
add
daa
daa
es
movsb
imul
add
daa
daa
xor
shll
daa
daa
daa
daa
xor
shll
daa
daa
and
cmpsb
daa
daa
daa
daa
mov
sub
sub
test
pop
sub
lcall
sub
inc
lcall
shll
sub
dec
sub
in
cmp
push
xchg
sbb
or
inc
and
or
sbb
mov
sub
cmpsb
sub
adcl
pusha
pop
push
lock
xor
subl
je
out
mov
sbb
jnp
jae
cmp
cmc
push
lock
mov
es
jp
or
clc
fs
dec
sbb
cmp
sbb
dec
mov
nop
add
psubsb
cwtl
andl
jo
add
push
push
loopne
or
and
mov
sti
ss
syscall
fstl
addr16
pop
jb
adc
addr16
add
or
hlt
jle
push
or
movhpd
push
nop
sub
rclb
mov
pop
pop
push
cmp
inc
inc
rorl
pop
test
push
nop
sub
and
ficomps
test
push
adc
adc
test
repz
cmp
cmp
and
mov
dec
sub
adc
ja
ret
call
xchg
out
add
nop
adcl
sub
push
mov
sbb
mov
mov
pop
mov
mov
cld
add
sub
sbb
ds
jo
cltd
inc
mov
aad
cltd
xchg
mov
and
xchg
cltd
cwtl
pop
push
call
adc
lret
jno
jge
rol
inc
mov
mov
dec
subl
and
add
xor
sbb
pop
cltd
pop
sbbb
and
pop
sbb
les
cltd
xchg
sbb
and
pop
test
pop
adc
or
sbb
test
les
sub
mov
sbb
sbbl
in
pop
ljmp
add
and
ret
sub
inc
add
les
jae
mov
push
add
fsubs
pop
mov
adc
aam
sub
test
jl
jae
popf
mov
xchg
jmp
outsb
adc
jne
mov
dec
fs
push
ja
jae
inc
fnstenv
push
jae
mov
out
and
xchg
addb
mov
mov
mov
pop
add
xchg
pop
push
adc
bound
pop
mov
jno
lds
mov
pop
cmp
pop
aam
in
xor
mov
pop
es
sbb
into
stos
sub
sbb
jno
rcrb
jo
andb
dec
inc
insb
jno
fadds
adc
mov
lret
jno
in
fisubs
cmp
inc
aaa
adc
mov
inc
jo
leave
push
jne
nop
inc
pop
or
adc
add
pop
add
inc
call
push
adc
adc
mov
adc
pop
pop
adc
test
pop
cwtl
fs
push
adc
pop
jmp
sbb
mov
or
add
jno
mov
or
pop
ss
or
es
sub
mov
popf
xchg
jno
push
scas
sbb
dec
mov
fimull
es
and
je
xorb
icebp
mov
pop
rol
and
xchg
jb
inc
movsb
fcoms
sbb
fcoms
leave
in
or
dec
cld
fstps
test
cs
movsb
mov
push
das
and
pop
enter
adc
lret
or
mov
or
lods
sbbb
and
and
lea
add
xor
sub
pop
mov
sbbb
mov
add
nop
or
xor
pushf
adc
add
aam
imull
and
mov
pop
loope
sub
not
mov
push
push
fdivrl
mov
shl
pop
xchg
cltd
fs
sbb
xor
fs
inc
pop
fs
dec
dec
inc
nop
dec
addr16
cmp
dec
xchg
pop
pop
mov
mov
push
call
je
jg
adc
adc
nop
into
cmp
adc
fdivs
lds
pop
dec
mull
pushf
stos
loop
insb
les
pop
dec
or
sbb
lods
jecxz
push
flds
xor
pushf
sbb
sbbb
mov
mov
add
movsl
addb
test
or
adcb
jge
sbb
xorl
jno
cmp
ja
mov
addb
cmpl
mov
xor
or
enter
pop
cmp
dec
jg
call
movsb
ja
pop
push
subl
sahf
lahf
xor
imul
adc
inc
popa
lret
or
push
lcall
pop
jns
fwait
jp
fstpl
fnsave
in
sub
loop
and
int3
fmull
in
sub
mov
add
fwait
cli
push
call
xor
or
sbb
sub
fsts
pop
repnz
fdivl
fmull
pop
cmp
call
pop
sub
xor
lret
mov
imul
lock
mov
cmp
cmp
dec
lock
inc
add
jb
inc
mov
push
push
inc
jb
fistpl
call
add
aad
add
ret
pop
and
adc
sbb
add
bound
add
sbb
lahf
daa
lret
sbb
fs
or
inc
sub
and
pushf
jbe
mov
test
sbb
das
adc
seto
sbb
enter
mov
and
sub
adc
inc
daa
in
xor
or
rcrb
or
push
daa
sub
push
rolb
shr
in
or
daa
xchg
shrb
or
jnp
mov
fwait
roll
add
andl
ljmp
loopne
cwtl
cmp
rcrb
adc
lea
mov
repnz
xlat
xor
orl
mov
pop
inc
cltd
aas
ret
mov
xor
add
cltd
call
push
cld
mov
leave
jo
push
inc
jmp
lea
nop
push
inc
ret
mov
push
repnz
fisttpll
cmpsl
in
mov
mov
roll
and
test
ljmp
inc
sahf
mov
cld
loope
and
mov
gs
xchg
lahf
mov
mov
cmc
jle
add
push
xchg
gs
inc
repz
repnz
add
sub
das
je
sbb
or
push
mov
push
xor
or
insb
cmp
sub
inc
mov
outsl
adc
or
adc
call
in
mov
popa
insb
xor
cmp
pop
icebp
jmp
mov
xchg
insb
xchg
stos
fcomi
jmp
add
cmpsl
push
pop
popf
lret
xchg
mov
hlt
je
lock
jge
push
pop
sub
mov
xchg
out
mov
or
adc
ja
mov
or
loopne
and
insb
push
mov
inc
ret
xor
inc
mov
sub
fldenv
sub
xchg
sub
pop
jl
mov
lods
xchg
inc
jno
nop
adc
sub
xor
dec
sbb
imul
add
enter
or
push
pop
repnz
mov
cmp
cwtl
mov
out
sbb
movsb
jne
xchg
pusha
and
call
xorb
pop
adc
aam
push
pandn
or
adc
add
and
mov
leave
add
in
xchg
pop
loop
cmp
fsubrs
push
xor
mov
aam
xchg
lahf
xor
pop
fwait
jae
mov
jns
movsl
adc
insl
loop
mov
xor
cmpsl
cltd
daa
mov
pushf
lods
xchg
mov
push
xchg
adc
or
add
xchg
sub
add
xchg
sahf
icebp
test
mov
cmp
ss
lret
fsts
leave
add
aam
push
repnz
aam
fldcw
dec
insl
roll
stos
sub
mov
xchg
or
jb
hlt
call
fmuls
mov
xchg
es
cwtl
add
push
lods
add
inc
add
add
pop
insl
test
into
dec
xchg
push
inc
xchg
dec
mulps
in
inc
xchg
inc
mov
cmp
xchg
outsb
mov
jecxz
dec
dec
xchg
inc
and
xor
push
lds
xchg
jo
xchg
imul
aam
leave
rcrb
leave
xchg
push
es
jns
fs
xchg
outsb
lcall
adc
push
cwtl
sub
or
inc
pop
loop
jmp
call
rcrb
movsl
xchg
data16
add
and
pop
jo
fs
lret
fs
test
movsb
icebp
jnp
in
cmpsb
push
int
and
mov
jb
cltd
cmpsb
inc
int
xchg
mov
cmpsl
lret
and
adc
int
adc
ss
xorb
in
ds
xor
push
mov
aaa
mov
adc
loope
clc
or
stos
int
repnz
call
fmuls
lret
mov
mov
pop
das
push
in
inc
push
out
pop
mov
inc
push
iret
rclb
rcl
dec
scas
pushf
dec
pop
subl
insl
cmp
insl
sbb
dec
imul
dec
dec
arpl
inc
aas
push
mov
or
lcall
sub
adc
or
out
inc
loopne
push
adc
and
jb
fldt
rcll
mov
ljmp
in
or
inc
enter
sbb
xbegin
and
jp
add
inc
fstl
in
nop
fistl
mov
push
or
and
fildl
pop
and
mov
dec
loop
fistl
mov
and
fistpl
sub
and
fildl
adcl
fildl
fisttpl
push
xchg
mov
repz
fidivrl
jne
and
aam
mov
jmp
ja
fneni(8087
mov
repnz
jno
shrl
fildl
fldt
mov
mov
je
fucomi
dec
push
push
or
add
push
or
and
dec
movsl
rorl
inc
add
push
add
mov
push
and
dec
jo
xchg
lea
and
aaa
filds
adc
loopne
add
cmpsl
mov
call
mov
iret
leave
roll
lock
iret
or
ror
loope
xor
int3
add
adc
mov
sub
dec
pop
mov
lret
lret
lret
sub
adc
or
hlt
mov
in
mov
aam
enter
int3
mov
mov
jns
jns
test
mov
jns
mov
jno
jns
jns
imul
jns
dec
mov
xor
and
push
jb
addl
idivl
enter
mov
in
sarb
jb
mov
and
cmp
mov
nop
sbbl
mov
enter
inc
mov
in
pop
cmp
mov
jb
sbbl
idivl
push
loope
mov
and
mov
mov
pushf
mov
pop
cmp
inc
jnp
jo
gs
pop
mov
push
jb
mov
and
cmp
and
sbbl
mov
adc
push
jb
mov
add
inc
mov
inc
outsb
and
hlt
movsb
sbb
xor
jns
call
mov
fcmove
in
or
inc
adc
adc
imul
data16
sbb
sbb
dec
lcall
and
sbb
imul
data16
cmp
cmp
inc
dec
lcall
sub
cmp
mov
dec
repnz
mov
dec
push
xor
jl
inc
ret
lock
adc
inc
mov
test
pop
push
adc
inc
in
orb
add
ret
das
stos
or
andl
pop
js
adc
cmp
stc
sub
dec
dec
leave
and
dec
repnz
ret
mov
xor
test
ret
fcoms
inc
mov
mov
fs
mov
xchg
or
pop
icebp
mov
sbb
mov
out
sub
mov
addr16
mov
inc
inc
add
adc
test
test
xorl
cwtl
movsl
sub
lods
xchg
outsl
lea
inc
push
lret
dec
outsl
sub
test
dec
ret
outsl
cmp
xchg
outsl
arpl
mov
outsl
movsl
gs
gs
push
mov
mov
outsl
lret
inc
xchg
mov
and
stos
xchg
and
outsl
xchg
movsl
mov
sub
test
jl
movsb
stos
push
outsl
mov
outsl
and
sub
sub
and
lret
mov
movsl
sub
push
outsl
push
sbb
mov
inc
cmp
outsl
xchg
mov
push
adc
outsl
stos
xchg
and
adc
and
xchg
movsl
shll
inc
int3
outsl
xchg
mov
sbb
mov
inc
addr16
sub
pop
mov
dec
lock
inc
movl
in
inc
or
push
and
and
pop
jle
cmp
xchg
imul
pushf
imul
out
xchg
imul
mov
stos
sbb
sbb
cmp
dec
movsb
lcall
imul
fstl
es
imul
lret
cmpsl
imul
je
adc
xor
xor
sarb
gs
and
into
mov
cmp
imul
int
imul
inc
scas
push
adcl
adc
lret
mov
pop
jo
dec
movsl
sti
xchg
imul
imul
imul
js
cld
fsubr
out
sbb
enter
cmpsl
sub
sub
push
fcompp
dec
lds
dec
dec
and
xchg
push
sbb
jno
add
push
imul
dec
imul
imul
imul
notl
jno
rcrb
mul
jo
adc
adc
mov
bound
lret
dec
sbb
sbb
imul
xchg
sbb
imul
imul
and
dec
add
imul
mov
movsl
aad
fstpt
or
or
imul
imul
xor
push
dec
pop
imul
pop
data16
mov
xchg
and
into
jnp
call
popa
nop
imul
sbb
rcrb
jns
std
imul
lahf
mov
and
cmpsl
imul
pop
imul
scas
xor
xchg
movsl
jmp
push
sbb
gs
dec
pop
jp
stos
jg
mov
xchg
rcrb
sbb
xor
cmc
xor
pop
cmp
or
sbb
add
push
push
fs
dec
imul
scas
push
cmp
cmc
or
imul
imul
imul
imul
cmp
enter
and
sub
imul
shrl
and
push
popf
mov
pushf
imul
sub
subl
dec
pop
jb
imul
insl
mov
xor
jo
shrb
jo
sarb
call
into
cmp
mov
cmp
sahf
int3
cmpsl
push
cmpsl
imul
imul
sub
push
xchg
imul
sarb
jne
stos
pop
add
sub
fidivrs
gs
dec
push
imul
js
add
imul
lret
xor
dec
push
xchg
xchg
scas
imul
cmpsb
les
or
lret
imul
imul
imul
mov
adc
lock
loope
les
push
imul
dec
pop
imul
in
cmpsl
sub
jo
dec
imul
push
imul
pop
pop
mov
inc
mov
loope
repnz
je
loope
movsb
pop
leave
and
xchg
int
int
and
push
andb
ja
xchg
xchg
out
lcall
nop
mov
mov
jnp
test
call
push
enter
jno
shrb
or
or
push
shr
imul
pop
in
lods
in
xor
ss
loopne
mov
xor
add
andl
cmp
xchg
push
push
xor
mov
je
in
or
push
mov
out
jl
cli
sahf
arpl
movsl
cmpsb
js
mov
inc
xchg
sarl
loopne
push
testb
push
iret
repz
sub
mov
cmp
add
sbb
ss
out
inc
push
pop
outsb
and
sahf
out
test
enter
ja
lock
or
push
ds
pop
out
sahf
out
orb
int3
out
push
stos
adc
cmp
repz
cmp
jbe
cmp
repz
iret
repz
add
push
sbb
xor
out
cmp
repz
pop
insb
addb
mov
add
push
adc
ret
dec
cmp
ds
and
inc
ret
pushf
es
ds
jnp
sbb
push
push
mov
out
out
cmc
add
push
fs
xor
iret
test
lds
shl
sahf
xor
js
mov
jns
or
add
test
jne
cmp
das
push
adc
xchg
jl
cmpsl
push
sbb
sbb
xchg
int
cmp
js
or
mov
out
sub
pop
sahf
mov
and
out
lcall
jns
sarl
jp
cmp
enter
mov
add
xchg
or
leave
or
outsl
adcb
ret
cmp
pop
dec
xchg
repz
xor
cmp
adc
imul
xchg
in
loopne
out
sahf
fstp
ror
enter
out
sarb
out
mov
out
sahf
nop
mov
sahf
out
js
jo
push
fs
pop
pop
push
sahf
out
sahf
push
dec
dec
inc
inc
cmp
sahf
out
cmp
sub
sarl
adc
add
nop
fmul
repz
enter
dec
sub
call
jns
out
pusha
push
dec
inc
xor
xor
out
or
mov
ror
repz
mov
pusha
cmp
lahf
out
lcall
lea
push
add
lock
mov
mov
das
sub
push
push
pop
adc
test
and
inc
pop
adc
fdivr
adc
push
aaa
xor
push
push
add
call
pop
xor
mov
rorb
push
test
mov
inc
enter
aaa
shlb
jbe
push
add
dec
xchg
iret
mov
daa
loope
cmpsl
or
push
and
aas
xchg
insb
movsb
xchg
ficoml
icebp
add
pop
nop
out
xlat
push
mov
pusha
mov
xchg
outsl
sarb
test
mov
imul
pop
cmpb
inc
lcall
shll
jbe
sub
add
mov
mov
adc
add
aas
or
cltd
nop
and
testb
pop
rcr
and
fmuls
cmp
adc
scas
inc
fisttps
nop
sarb
inc
jae
pop
adc
inc
jg
dec
mov
popa
jle
pop
xor
aas
in
dec
enter
push
push
dec
xorb
fwait
cmp
mov
mov
incb
push
xchg
movsb
fisttps
mov
outsb
fimuls
ret
imul
mov
mov
loopne
repnz
mov
js
dec
lods
aaa
cmp
sub
ret
insb
pop
xor
mov
add
cmp
pop
stos
outsb
cs
outsb
lahf
mov
fldt
inc
outsl
ds
outsl
gs
jns
movsl
add
movsl
neg
dec
xor
cmp
push
mov
xchg
fsubl
dec
cmpsl
mov
cld
adcb
and
scas
inc
adc
and
iret
jl
xor
outsl
jne
notb
imul
mov
and
pop
inc
cmp
jb
pusha
sub
cli
pop
orl
inc
xchg
mov
xlat
jae
xor
sbb
dec
pop
xor
les
inc
adc
push
stos
mov
xor
xor
pop
pushl
mov
add
mov
dec
popa
pop
inc
and
sbb
adc
push
sub
inc
ljmp
addl
xchg
xlat
lcall
mov
add
xchg
outsb
sbb
pop
push
mov
mov
mov
and
adc
xchg
addb
movsb
sti
loop
xor
lahf
arpl
cmpsb
mov
mov
mov
or
and
mov
test
and
sbb
pop
push
aaa
add
ja
lds
arpl
outsl
lcall
sbb
pusha
mov
rorb
xchg
movsb
sahf
out
test
xchg
jns
out
nop
mov
out
pop
push
pop
dec
inc
inc
cmp
repz
cmp
sub
cmp
repz
sbb
lea
adc
xchg
hlt
xchg
in
iret
repz
push
in
enter
iret
repz
test
mov
and
outsl
je
insb
push
xchg
idivl
fs
push
dec
mov
out
jl
repz
and
add
in
xchg
push
enter
cmp
mov
cmp
repz
nop
mov
jns
jo
pop
inc
cmp
iret
repz
and
adc
lock
loopne
sahf
out
int3
mov
fs
out
pop
outsl
fcoms
rorb
adc
jmp
push
cwtl
inc
dec
clc
into
data16
mov
mov
inc
xor
mov
adcb
pop
subb
ja
mov
mov
pop
lods
pop
js
cs
clc
mov
sti
outsb
push
jg
cld
pop
enter
js
xorl
loop
lcall
push
insl
push
inc
aas
mov
pop
mov
or
cmpl
and
add
mov
mov
sbb
fnstenv
sti
inc
xor
rcr
xor
xor
cmpsb
dec
icebp
lcall
push
adc
pop
ss
nop
ss
insl
loop
subb
ss
test
sub
xorl
aaa
adc
sbb
add
jecxz
aas
cmp
fstpt
push
cmp
xchg
test
mov
lret
cmp
mov
cmp
cmp
icebp
jg
inc
jnp
cmpl
adc
xor
cmp
cmp
outsl
test
mov
mov
ds
ds
fdivr
jg
add
ds
ds
ds
ds
aas
pop
aas
and
sub
xor
aaa
fists
adc
push
data16
jbe
jnp
fs
aas
cmpl
movsb
aas
mov
sarl
div
incb
lahf
push
xor
jl
xchg
cmpsb
mov
xor
mov
xor
mov
xor
push
inc
xor
mov
mov
cmp
pushf
xor
xor
mov
cmp
xchg
mov
cmp
xor
inc
add
mov
inc
fdivr
int
mov
xor
outsb
cmp
mov
pushf
xor
adc
pushl
xor
xor
xor
xor
xor
xor
dec
ja
clc
mov
mov
ss
pushl
sbb
xchg
mov
test
add
add
sub
das
cmp
or
add
pop
cmp
add
pusha
mov
pop
or
cmp
xor
xor
cmp
cmp
cmp
push
pop
cmp
pop
mov
push
outsl
cmp
jo
mov
inc
faddp
js
outsb
cli
outsb
cmp
idivb
mov
cmp
cmp
cmp
dec
push
pusha
cld
push
shrl
jle
test
decl
cmp
hlt
cmp
inc
ds
ds
ds
inc
xchg
mov
rclb
xor
xor
pusha
cld
ret
pushl
test
xchg
xor
push
xor
xchg
mov
fwait
xor
xor
xor
xor
xor
inc
jg
xor
xor
xor
outsb
xor
loopne
repnz
dec
ss
bound
orl
push
mov
test
ss
or
pop
add
fnsave
jecxz
clc
ss
ss
aaa
or
mov
xor
aaa
addr16
jno
stos
mov
sbb
push
shlb
cmp
or
sbb
pop
jecxz
sbb
cmpsb
test
mov
cmp
add
fbld
in
jmp
repz
cmp
cmp
cmp
and
es
cmp
cmp
call
cmp
jns
jle
xchg
mov
mov
dec
lahf
cmp
fstp
ret
push
add
incl
insb
cmp
cmp
cmp
cmp
cmp
cmp
push
dec
sbb
fstl
push
cltd
xor
push
jecxz
ds
pop
shrl
and
aaa
shrl
inc
xor
cmpl
aas
ret
aas
iret
dec
faddl
xor
into
xor
shrl
jp
xor
xor
icebp
pushl
ljmp
xor
xor
in
pop
xor
xor
xor
mov
cmp
insb
dec
lds
ret
xor
xor
adc
push
clc
stos
mov
pop
arpl
stos
add
ss
ss
aaa
pop
enter
aaa
jne
jle
ds
sbb
sub
inc
in
cmp
cmp
jecxz
ud0
sarl
fnstcw
jmp
cmp
cmp
cmp
sbb
or
arpl
outsb
xor
ret
cmp
cmp
scas
in
mov
stos
ds
or
cmp
push
jo
pop
lret
mov
mov
xor
xor
ja
jg
cs
xor
xor
xor
xor
dec
fisttpll
shlb
fdivl
out
xor
call
xor
xor
xor
xor
xor
xlat
xor
ja
mov
pushf
ss
mov
inc
xor
shll
mov
aaa
outsl
xchg
push
add
cmp
call
push
cmp
mov
jmp
std
cmp
ljmp
push
imul
sbb
ds
aas
lods
cmp
clc
cmpl
mov
mov
cld
xor
sbb
xor
out
sub
jae
cmp
cmp
dec
cmp
pop
cmp
ds
push
xchg
outsl
cmp
jecxz
clc
mov
xor
xor
xchg
testb
pop
or
or
pop
dec
es
xor
int
jp
add
loop
lock
aaa
arpl
pop
pusha
out
rcll
xor
mov
cmp
test
repnz
adc
mov
pop
cmp
ret
jb
dec
sbb
adc
mov
mov
popa
je
call
call
cld
cmp
push
int3
mov
add
jno
xchg
insb
jb
xor
push
adc
sub
push
orb
ja
push
mov
fsubrp
xor
fbld
jo
or
or
adc
adc
sbb
sbb
rclb
mov
cmp
inc
xor
mov
adc
xor
push
pusha
xor
xor
push
lret
es
lock
lret
mov
mov
nop
xor
sahf
popa
sub
xchg
mov
cmpl
fdivs
fmuls
xor
ss
lock
xchg
xlat
jbe
xor
test
jp
cmp
push
xor
fs
sbb
sahf
outsb
jo
bound
sarb
jo
push
add
dec
add
pusha
jo
fmull
mov
out
shl
ljmp
sub
sbb
pop
rclb
xor
xor
xor
xor
xor
cli
cmpsb
mov
add
sub
jg
push
xor
fs
xor
xor
xchg
sbb
stos
loope
or
sbb
pop
inc
add
in
call
or
xor
xor
inc
add
loop
sbb
push
adc
sub
xor
pop
sub
xor
xor
xor
xor
push
xor
pop
xor
cmp
pop
mov
xor
xor
xor
xor
mov
mov
push
scas
pushf
xor
xor
xor
xor
xor
xor
xor
loopne
cmpl
int3
fisubrl
pop
xor
or
mov
xor
jecxz
add
cmp
mov
or
xor
subb
cmp
inc
adc
sub
adc
incl
inc
ds
dec
xor
pusha
pop
add
sbbl
jg
add
or
pop
pop
push
or
or
or
xchg
mov
or
or
adc
adc
push
adc
jbe
fistps
add
pop
sbb
adc
adc
adc
add
adc
aaa
in
data16
or
stos
sub
add
add
mov
inc
leave
add
jge
add
add
sub
iret
rclb
imul
ds
lcall
and
inc
push
adc
pop
and
xor
std
decl
and
rcll
bound
js
xchg
and
dec
xor
and
aaa
mov
xchg
dec
fwait
add
mov
nop
ret
or
adcb
jns
add
dec
imul
or
push
scas
or
add
pushf
into
add
adc
decb
lods
jnp
ja
adc
push
adc
pop
popa
jno
and
pop
or
adc
mov
or
xor
adc
shrl
icebp
mov
add
and
pusha
add
scas
fiaddl
or
stos
or
push
js
jo
or
mov
sub
pop
add
lds
cld
cli
and
mov
ljmp
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
fistps
jecxz
cli
pop
mov
stc
or
jns
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
add
decl
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
cmp
lahf
xor
lcall
mov
push
pop
mov
pop
pop
mov
popl
inc
sub
mov
ret
scas
adc
mov
xor
lods
scas
xchg
test
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
fistpll
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
adc
dec
sub
lods
leave
mov
jp
push
out
or
outsl
inc
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
cmp
call
jg
xor
hlt
and
xchg
jmp
sbb
das
cli
xchg
add
dec
mov
xor
incl
mov
int
inc
fwait
sbbb
mov
dec
jp
push
gs
call
pop
jg
hlt
push
add
stc
loope
push
mov
sar
andl
aas
icebp
testb
mov
call
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
mov
or
push
inc
sbb
paddb
inc
mov
decl
cld
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
loopne
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
sti
jmp
or
dec
fisttpll
out
aas
std
cli
pushl
push
idivl
cmp
sub
inc
scas
inc
mov
cmpb
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
pushl
fsubl
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
pop
xor
fistpll
push
sub
xchg
pop
clc
pop
hlt
lret
movsb
add
add
lea
jg
gs
std
xorb
jg
call
addr16
adc
ret
das
pop
pop
pop
shlb
ljmp
cmp
lock
or
sarb
std
pop
les
cli
mov
lcall
xchg
mov
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
call
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
jmp
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
inc
or
mov
nop
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
inc
dec
shrl
push
mov
push
movsb
xchg
or
mov
stos
dec
lods
xor
shrl
ds
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
call
dec
adc
pusha
imul
add
mov
cmp
xchg
mov
in
sub
loop
pop
xchg
ftst
jbe
xchg
and
add
jae
shrb
call
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
adc
loopne
idiv
pop
cld
addl
adc
and
xor
mov
lahf
fmull
enter
jecxz
scas
sub
mov
pop
decl
hlt
sub
mov
dec
incb
fisubrl
aas
mov
negb
push
inc
or
pop
jg
add
pop
jg
mov
aad
test
mov
idivb
movsb
mov
iret
push
jbe
push
inc
mov
icebp
pop
incb
jno
adc
push
inc
jecxz
cmp
negb
lock
adc
loopne
and
sbbl
mov
jle
imul
dec
push
in
aas
mov
mov
js
fsubrl
lock
and
incl
sbbb
mov
pushf
cmp
inc
mov
repnz
xchg
std
mov
adc
inc
aas
push
rcrl
jge
jg
pop
pop
inc
jb
fistpl
adc
call
jno
int
jg
pop
nop
mov
inc
sti
arpl
daa
std
or
sbb
inc
decl
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fistps
mov
jno
fidivrl
jg
stos
pop
stc
clc
mov
mov
sub
jge
xor
lahf
les
sbb
lcall
sbb
cld
addl
sbb
mov
lahf
outsl
int3
push
lods
movsl
loopne
sbb
pop
pop
pop
test
bound
pop
outsl
xchg
inc
test
in
lock
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
cs
loopne
fistpll
adc
lahf
mov
or
out
lcall
mov
icebp
push
cld
mov
adc
stos
pop
jg
pop
sar
inc
mov
in
pop
cld
or
xor
pop
rcr
dec
mov
gs
pushf
lcall
idivl
aad
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
mov
mov
imul
or
inc
pop
xor
rorb
and
mov
fwait
or
test
xchg
cmpsl
push
sbb
mov
pop
pushl
enter
mov
into
test
xchg
movsb
insb
or
and
xchg
jnp
movsb
fidivrs
clc
insb
test
loopne
jnp
aas
repz
sbb
lock
in
jmp
out
rcll
aaa
clc
push
std
mov
ja
jl
or
mov
xchg
pmullw
clc
decl
repnz
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rcr
hlt
mov
inc
out
pop
or
or
dec
ss
mov
or
repnz
clc
dec
cmc
mov
jl
call
std
testb
pop
in
cmp
jg
aaa
inc
jmp
mov
pop
lock
jmp
hlt
dec
mov
adc
xlat
inc
aas
mov
jg
mov
cmp
or
addr16
sbb
cld
daa
jp
std
adc
loope
fldt
cltd
or
mov
ret
nop
cmp
das
test
mov
lock
pop
pop
div
cld
idivl
scas
pop
or
and
loope
lock
fidivl
jmp
in
jg
push
jge
fbstp
out
xchg
add
out
ss
cmovno
mov
loope
mov
cmpsl
popf
xor
or
fbstp
push
daa
outsl
das
jge
insb
jp
add
cmpsb
cmp
call
das
js
data16
decb
adc
mov
and
call
adc
add
jb
mov
inc
add
dec
lds
std
fcomip
xchg
dec
dec
inc
sbb
xchg
pusha
dec
das
js
mov
aas
icebp
ret
ror
sbb
sbb
inc
adc
push
pushf
adc
aas
pop
clc
loope
loope
push
or
jp
dec
add
xlat
fimull
je
xchg
fldenv
iret
fildll
fdivrl
xchg
lcall
decb
mov
sti
push
push
jo
sarl
pop
out
jg
jno
ret
dec
inc
sub
cmp
ret
pop
dec
arpl
out
inc
push
decl
addr16
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
dec
outsl
jmp
or
mov
daa
jmp
faddl
mov
adcb
pushl
inc
test
push
imul
pop
stc
push
dec
out
sub
fstpt
mov
enter
jns
add
fsts
dec
pop
inc
leave
push
or
add
xor
pop
inc
add
or
mov
bsf
popf
test
jg
and
add
cli
in
stos
or
adc
jns
insb
dec
int
inc
je
sar
pushl
sti
sarb
movsl
xchg
add
lock
jp
sbb
jmp
lahf
pop
cltd
scas
xchg
nop
arpl
jp
sub
cmp
fnstcw
test
mov
decl
flds
pushf
or
cmpsb
jg
stos
cli
aas
jno
xchg
cmp
js
sbb
pop
xor
stc
jae
aaa
jnp
pop
and
mov
sbb
inc
or
and
repz
mov
aaa
and
jmp
xor
dec
ret
cmpsl
bound
shrl
inc
jo
sarl
jle
insb
cltd
sbb
aas
adc
inc
dec
mov
cmp
shr
mov
std
cmpsl
pop
and
mov
leave
cmp
cwtl
cmc
movsb
out
cli
call
mov
cmp
andl
lock
ljmp
lcall
leave
je
xchg
lcall
imul
es
cmp
cmpb
jmp
pop
dec
cmpsl
stc
fmuls
out
and
out
mov
cwtl
push
inc
fwait
shlb
mov
aam
cmc
push
test
push
lock
outsl
popa
push
dec
shlb
sbb
cmpsl
cli
leave
pop
inc
in
xchg
outsb
push
cmpsb
adc
jne
incl
mov
ds
ffree
sbb
jle
bound
push
inc
rolb
add
mov
mov
js
mov
aaa
cmp
xchg
cmp
incl
cltd
lods
icebp
cmp
mov
mov
push
ss
into
imul
push
sub
ljmp
mov
sbb
mov
les
in
inc
rcl
in
sub
ja
test
rclb
popa
add
cld
jmp
shl
or
add
mov
popa
sbb
inc
xchg
mov
lock
and
or
fildl
dec
daa
test
dec
xor
lods
scas
mov
imul
or
mov
xchg
fcmovbe
loop
test
pushw
or
mov
fiadds
pop
stc
sub
pop
mov
fsubs
sbb
fimuls
int3
je
sar
ljmp
rolb
jo
int3
rolb
xchg
mov
das
pusha
das
arpl
lods
sbb
inc
pop
lahf
lcall
inc
and
cmp
incl
mov
fwait
nop
and
sbb
pop
jecxz
mov
in
cmp
jge
xor
enter
lcall
jns
mov
push
out
push
mov
xor
xor
mov
jg
adc
outsb
stc
cltd
mov
test
std
lret
push
in
cli
cld
cli
lods
icebp
pusha
or
push
ljmp
xchg
and
sub
ret
push
mov
jp
lea
xchg
mov
pop
in
mov
out
in
lods
sbb
xchg
clc
sub
aaa
loop
jp
jle
lahf
orl
ljmp
ret
jp
imul
arpl
add
ficoms
mov
ds
jb
outsb
call
test
sub
lea
xchg
ret
fstl
sarb
lcall
hlt
icebp
xor
mov
or
aam
fistl
adc
cmp
mov
out
lcall
xchg
xchg
cli
test
and
push
adc
push
sub
fucomp
and
xchg
or
adc
incl
pushf
adc
xchg
call
lret
jmp
dec
xchg
mov
ret
cmp
decl
cltd
cld
imul
pop
xor
les
jp
dec
fldcw
loope
jns
outsb
mov
sbbl
dec
add
inc
sub
inc
xor
mov
cmp
sbbl
mov
cwtl
fiadds
push
stos
mov
popa
fucomi
addr16
pop
hlt
inc
or
jbe
adc
ljmp
xor
dec
jmp
push
mov
stc
lcall
stc
inc
ret
shlb
sbb
jo
cld
or
and
jg
lret
jg
decl
pop
inc
ljmp
cmpsb
mov
loop
dec
lods
and
jl
cmp
xor
mov
mov
out
and
dec
cmpl
lret
sub
dec
push
jae
or
jo
loop
pushl
add
lods
sub
xor
or
push
cmpsl
int
lret
dec
adc
jns
ljmp
lcall
pop
jbe
jb
cmpsb
popa
sbb
sub
ficompl
add
ret
lcall
jp
scas
aaa
cmp
das
test
xchg
dec
in
adc
mov
decl
sub
xlat
arpl
es
xchg
fldcw
imul
jg
dec
mov
push
push
mov
fs
ret
adc
fisttpll
cmp
ret
lcall
xchg
addb
out
xchg
pop
in
testl
adc
scas
xor
popf
jae
call
popa
inc
push
pushf
add
push
ret
sub
popa
adc
xchg
adc
fadd
mov
pop
stos
mov
adc
mov
dec
call
repz
mov
push
ss
fisttps
and
inc
dec
nop
std
push
pushl
pusha
xlat
mov
jg
arpl
mov
out
adc
add
cwtl
mov
fldl
mov
aam
subl
cmp
sbb
lods
mov
sub
cmc
ljmp
jo
pop
pop
je
outsb
call
push
inc
sti
sub
pop
decl
cmp
rcll
repz
nop
in
mov
outsl
and
adc
mov
xor
cmp
push
ds
rcrl
ret
cld
sti
dec
outsl
clc
jp
adc
ffreep
and
out
fcmovnu
jp
cmp
cs
js
inc
push
ljmp
inc
pusha
mov
sub
imul
out
xlat
push
cmp
adc
cmp
les
in
dec
mov
fldcw
sub
jne
xor
adc
cwtl
cmc
mov
scas
movsb
shl
std
push
icebp
jns
cmp
push
cmpsb
lds
pop
fnstsw
loope
fbstp
push
loope
bound
mov
or
pushl
in
adcb
jmpw
cmpb
aam
std
fcomip
jmp
adc
ljmp
mov
fisttps
jns
mov
mov
push
shll
aam
xchg
xlat
shlb
pushl
movsb
imul
repz
call
std
jns
pop
outsb
push
sahf
push
push
sbb
mov
jns
mov
dec
inc
data16
ljmp
inc
jne
lahf
fs
jo
dec
or
adc
pop
lods
push
mov
call
cmp
jne
mov
movb
add
mov
lret
inc
nop
mov
push
push
xchg
jno
test
add
das
cmp
push
mul
xchg
lcall
mov
ficomps
mov
add
lods
dec
pop
hlt
xor
inc
push
sbb
mov
inc
dec
cli
out
sub
mov
inc
ss
sbb
push
inc
rcr
adc
stos
add
pop
xor
add
lcall
cltd
xor
jnp
scas
int3
push
out
out
rcrb
mov
dec
ljmp
adcl
cli
pop
or
sbb
adc
inc
xchg
shlb
adc
cld
std
cmp
mov
xchg
jnp
push
je
push
sbb
dec
bound
adc
jae
mov
lcall
sub
aad
cwtl
notb
adc
mov
or
cmp
inc
jb
mov
sub
cltd
and
nop
iret
movsb
fwait
mov
xchg
push
xor
in
push
cltd
adc
mov
xchg
fimuls
aaa
push
jns
aad
or
out
and
out
inc
scas
decl
adc
lahf
xchg
jae
mov
dec
hlt
loop
mov
repz
call
fucom
push
mov
out
jle
xchg
pop
pop
xor
dec
push
pop
pop
dec
inc
js
ljmp
dec
sarl
dec
push
mov
rcrb
notl
lret
in
incl
fdivp
int
fdivrl
orb
cli
mov
cmp
ss
sti
test
call
in
jmp
ret
ss
pop
hlt
lea
jno
imul
cs
test
push
mov
nop
sbb
dec
jg
push
loop
rcl
inc
ficoms
mov
inc
xchg
incl
jg
call
clc
iret
xor
pop
stos
cmpb
stos
add
and
mov
and
ss
add
push
or
add
fildll
mov
xchg
mov
je
out
inc
inc
adc
fwait
mov
jnp
stc
ljmp
decl
pause
mov
push
mov
mov
test
pop
loopne
push
test
pusha
mov
call
jbe
or
sahf
movsb
fstp
es
ljmp
xor
std
inc
xchg
push
shl
mov
ljmp
mov
fwait
ret
fwait
xchg
cmp
jg
decl
sbb
xchg
aam
jg
jb
movsb
adc
xor
rcr
incl
push
xor
enter
mov
or
stos
xchg
cwtl
and
popf
mov
lea
pushl
xor
rcr
xor
adc
mov
lock
jle
dec
adc
inc
xchg
out
xor
out
stos
sar
dec
or
jb
cmc
clc
aaa
movl
sbb
lds
xor
stos
shll
push
dec
int
pop
add
ss
in
lret
stos
mov
mov
sbbl
pushw
cmpsb
fwait
mov
inc
aaa
enter
add
dec
fstpl
xor
movsb
or
decl
lahf
sub
jecxz
stos
jp
pop
sbb
addr16
jb
jmp
popa
in
ret
and
sbb
lcall
sub
xor
popl
in
out
and
add
decl
fcompl
sub
cmc
cmp
lret
pushf
sbb
lret
inc
ljmp
jo
push
mov
mov
sahf
jge
icebp
cmp
data16
and
ljmp
push
jp
add
add
dec
out
mov
out
imul
jmp
arpl
incl
loopne
inc
and
mov
push
fnstsw
scas
cmp
and
rcrl
jl
fadds
jns
push
xchg
shrb
enter
mov
mov
call
xchg
dec
sub
ud0
push
xchg
js
repz
or
das
ljmp
jae
dec
push
stos
add
rorl
cmp
jl
sub
and
sub
sbb
push
pop
mov
daa
out
mov
xchg
cmpsb
emms
and
lcall
out
jae
rcrb
adc
push
ljmp
cli
dec
dec
fsts
lea
in
test
je
incl
jmp
ficoms
inc
or
pop
dec
fisubrl
jae
stos
cmpsb
jae
sar
ja
sar
jmp
inc
or
jmp
mov
cmp
dec
adc
fisttpl
mov
stos
out
sahf
cmp
je
dec
jl
pop
xor
sahf
pop
push
enter
ljmp
clc
jle
jmp
ss
dec
mov
stos
lock
and
adc
pushl
mov
out
sbb
sarl
mov
add
sbb
or
ljmp
mov
push
mov
cmp
das
bound
add
dec
jb
lds
mov
aad
idivb
test
jb
add
lcall
sub
mov
xchg
pop
push
add
ljmp
shrb
popa
adc
jae
inc
mov
push
mov
shl
cmp
dec
lcall
lock
out
cmpl
sub
sbb
pop
add
incl
inc
mov
data16
cmc
dec
jle
cld
mov
push
push
in
out
and
ret
dec
push
fistl
mov
xlat
icebp
insl
xchg
cmc
sub
xor
aad
jb
mov
ljmp
dec
jb
jb
jmp
nop
mov
or
dec
bound
dec
movsl
mov
cmp
shl
mov
decl
mov
inc
loope
sbb
and
orb
mov
pop
jle
sbb
cmpsl
inc
faddp
repnz
repnz
int3
pop
mov
sahf
xchg
xchg
scas
inc
cld
incl
sarb
ret
xchg
dec
cmp
dec
jg
imulb
mov
dec
jmp
fmull
and
call
push
pop
jg
pushl
daa
clc
push
dec
ror
push
push
scas
xchg
xor
xchg
sbb
cltd
lcall
out
inc
enter
dec
cmp
les
mov
sbb
jl
mov
lcall
push
call
pop
in
xor
ja
test
lock
leave
and
mov
aaa
jmp
mov
push
adc
mov
mov
cmp
pushl
lds
sbb
into
shlb
sub
sub
sub
pop
sub
mov
mov
push
inc
xchg
sbb
and
pop
xchg
std
repnz
test
clc
inc
dec
movb
or
fmuls
push
adc
push
fidivs
rcll
incl
push
shlb
fxtract
pop
scas
adc
lds
mov
ljmp
addl
imul
ja
mov
rolb
sub
pop
icebp
js
mov
loope
push
inc
dec
icebp
dec
fs
jmp
incl
lock
cmp
add
inc
add
xchg
xor
mov
test
inc
stos
mov
xchg
incl
sbb
icebp
int
fcomps
cmp
sbb
stos
mov
and
lcall
sbb
scas
xchg
push
pop
dec
sbb
sarl
fidivl
or
clc
sub
sbb
popf
sahf
aam
or
in
mov
shll
push
lret
lcall
or
sbb
cmp
cmp
inc
subb
pop
in
sahf
adc
loope
cmp
out
or
mov
aad
push
sbb
dec
shlb
stos
rorb
aad
fsubp
push
xor
cmp
leave
inc
aas
push
cmc
into
scas
xchg
ret
dec
js
jmp
dec
jb
pushl
cmp
adc
sbb
xor
mov
jmp
das
pop
pushf
mov
int3
jb
loop
dec
push
lock
sub
dec
dec
mov
loopne
shr
test
pop
lock
fiadds
cli
or
xchg
sbb
cmp
jl
jmp
xor
fdiv
or
in
jecxz
or
std
jmp
push
insb
or
lds
orl
cmc
push
movsl
xchg
xor
xor
adc
pushl
xor
testl
lods
rorb
mov
call
bound
imul
sbb
lods
in
in
push
adc
dec
or
lcall
or
negb
fisubl
popf
imul
sub
and
push
xor
jns
jmp
cwtl
ds
xor
cmp
dec
or
dec
mov
movsl
in
pop
adc
in
insl
into
push
cmp
pop
addr16
enter
cmp
push
out
sahf
sub
sub
sbb
pushf
jno
incl
sbb
loopne
fcomps
dec
adc
fcomps
dec
push
xchg
lcall
in
repnz
push
mov
clc
and
mov
cvtps2pi
sub
nop
in
xlat
jmp
and
in
mov
jg
jle
mov
shl
fdivrs
cmpsb
subb
or
call
aam
dec
les
add
jb
pushf
cmp
in
in
out
test
sbb
lcall
sbb
cmpsb
sbb
hlt
cmp
push
pop
mov
ljmp
xchg
push
add
inc
icebp
js
lods
mov
push
pop
in
call
mov
fistpl
stos
fwait
testl
cmp
es
popf
jae
test
lret
mov
cmp
dec
mov
int
mov
jbe
pop
lcall
pusha
xorl
inc
lcall
shll
and
out
jge
mov
mov
mov
test
loopne
adc
repz
push
xchg
jae
imul
hlt
shlb
mov
addr16
leave
out
mov
hlt
or
ljmp
mov
rcll
test
mov
cwtl
sub
out
out
pusha
xchg
arpl
addl
call
add
outsb
int3
out
adc
jno
outsl
mov
xchg
test
sub
dec
or
das
clc
incl
lods
orl
in
inc
fdiv
inc
call
cmp
sbb
pop
andb
mov
arpl
in
das
loopne
decl
pop
push
sub
ficoml
xor
push
adc
ljmp
lock
add
push
push
lcall
pop
add
lret
push
xor
pusha
in
add
iret
fcomip
lods
lcall
mov
fcoml
xor
aad
les
xchg
xchg
testb
sub
fldl
jo
or
outsb
in
ja
stos
addr16
jb
and
in
push
or
pushl
std
incl
test
push
fsubrl
pop
add
dec
xor
stc
jle
test
call
sbb
push
dec
cli
inc
aam
fcmovu
adc
js
ret
push
pop
cmp
ljmp
arpl
pop
movsl
mov
cltd
and
into
mov
sub
pushl
sbb
or
cli
cmp
iret
mov
arpl
scas
jp
test
mov
mov
imul
mov
pop
cmp
jae
lret
xor
add
fs
aad
sub
fdiv
mov
aad
dec
and
incl
sbb
clc
and
cmpsl
jne
jmp
push
cmp
pop
sbb
mov
iret
cmp
inc
loope
mov
mov
pop
bound
arpl
das
cld
fsubp
mov
and
call
sbbb
lock
sbb
mov
dec
mov
mov
data16
enter
mov
adc
inc
mov
data16
jg
dec
aam
jmp
push
fidivrl
xor
rcrb
inc
pop
scas
outsb
ja
mov
xchg
sahf
bound
jnp
shrb
lret
mov
adc
sbb
xchg
sub
mov
lahf
aas
pushf
push
scas
jmp
imul
idiv
lea
lret
popa
dec
and
jo
add
cmp
incl
mov
pop
pop
adc
pop
jecxz
adc
pop
xchg
pop
xor
leave
rcll
push
roll
insb
out
mov
nop
or
loope
xor
imul
mov
clc
nop
rcrl
in
push
int
jecxz
jns
shlb
mov
jecxz
test
call
xchg
cmp
pop
movsl
inc
int3
push
cmc
nop
icebp
lea
call
sub
xlat
jns
dec
ljmp
cmp
lods
aaa
push
or
loope
push
or
ror
sub
xchg
ds
lret
insl
stos
int3
je
sub
dec
sbb
ss
and
ljmp
call
test
add
fcomps
ja,pt
jno
andl
lcall
lcall
push
ja
fsubrl
lods
movd
pop
mov
xor
decl
lcall
out
cmpsb
hlt
xor
or
sti
js
mov
xor
out
cli
call
cmp
in
push
cmpsb
out
scas
vmwrite
sti
and
call
dec
mov
dec
jne
inc
in
mov
cmp
std
sub
lahf
incl
call
stos
pop
inc
add
xchg
and
xchg
or
xor
stos
insl
sbb
jo
xchg
int3
incl
xchg
out
cli
xchg
mov
xchg
adc
pop
sub
cmp
and
jmp
rolb
fists
enter
decl
mov
cwtl
dec
les
out
imul
xchg
push
add
dec
cmp
sbb
push
popf
popf
sbb
sahf
mov
jl
lahf
and
enter
pushl
pushl
sub
popf
les
int3
testb
sbb
mov
cld
js
mov
iret
rorl
inc
mov
adc
fbstp
in
cmp
rorb
mov
in
jae
pop
shlb
enter
stc
cmc
inc
mov
outsb
out
iret
xchg
incl
pop
inc
out
ss
xlat
fisubl
xchg
pop
addr16
loop
loope
jg
insl
ret
mov
in
test
bound
into
lods
fistpll
xchg
mov
sub
int3
cmpb
cmp
str
mov
ror
fprem
jl
pop
ljmp
sbb
leave
hlt
add
shrb
add
or
sbb
cmp
pop
and
cmpsb
outsl
clc
jns
xor
test
rcl
mov
dec
xchg
fs
mov
pop
cs
push
jnp
lret
push
ret
cld
inc
dec
fwait
push
mov
fisttpl
lds
movsl
sbb
arpl
xchg
ljmp
jmp
jmp
xlat
cs
mov
fmuls
cmpsl
call
sub
push
jecxz
fwait
mov
pop
push
inc
or
or
out
mov
call
lcall
dec
call
sub
cltd
xor
and
nop
mov
cmp
hlt
movsl
dec
xchg
insb
lcall
cld
cmpsb
xchg
adc
xchg
mov
aam
dec
jp
push
inc
dec
je
lods
hlt
sbb
jns
mov
jg
aas
aam
mov
aas
iret
sbb
lcall
rsm
cs
in
or
jmp
pop
pop
rcll
addr16
mov
dec
std
mov
leave
mov
mov
hlt
sarb
jns
inc
inc
jg
outsl
clc
add
rclb
or
and
nop
or
nop
repnz
movl
lea
and
xchg
fwait
mov
mov
mov
jae
call
mov
or
fwait
out
lcall
mov
adc
aad
pushl
outsb
push
ss
inc
jae
sbb
lds
sub
jnp
push
jle
cmp
test
adc
orl
and
sahf
insb
stos
mov
jmp
mov
jnp,pt
popf
push
sub
cmp
or
and
leave
mov
call
daa
sub
xor
outsl
pop
repz
inc
loop
mov
aam
aam
mov
pushl
sbb
aas
andb
mov
pop
push
mov
out
std
imul
add
arpl
decl
dec
xchg
flds
sub
imul
movsl
cmp
mov
incl
bound
dec
jbe
dec
inc
je
out
in
out
insb
add
pop
std
ljmp
test
jmp
test
test
adc
jmp
jl
adc
incl
pop
and
cmpsb
cmp
xchg
cmp
or
fwait
cli
data16
aas
push
push
insl
in
mov
sub
xchg
lret
sub
decl
pop
shll
jbe
sar
decl
push
sub
xor
movsl
pusha
sbb
scas
jle
cmpsl
inc
inc
dec
in
xchg
scas
clc
cmp
mov
sbb
inc
adc
int3
mov
fstpl
cmpsl
ljmp
jb
sbb
push
jg
jl
cmc
sbb
jg
mov
mov
imul
dec
lcall
movsl
mov
stos
int
adc
xor
movsb
mov
cmp
cmpsl
imul
es
popa
sti
dec
mov
cwtl
and
xlat
jl
inc
sbb
icebp
decl
adc
sbb
out
xor
mov
enter
sbb
fstpt
dec
jle
call
das
sarb
loope
mov
push
add
xor
decl
cs
cmp
xchg
or
add
add
adcb
pop
adc
sub
adc
lcall
xor
mov
and
dec
push
sbb
cmp
jb
adc
mov
jns
insl
js
out
aaa
outsl
test
mov
ret
call
cmp
fs
stc
inc
outsb
sub
and
mov
pop
push
mov
sbb
mov
fisttps
mov
adc
fimull
lcall
push
mov
adcl
jbe
iret
pop
mov
cmp
in
xor
shlb
pusha
push
arpl
pop
dec
fucomip
pop
xchg
lock
pop
add
and
in
insb
fld1
mov
push
jmp
call
jae
or
sub
push
xlat
hlt
cvtps2pi
jg
push
or
stc
mov
jmp
ljmp
cld
jo
jg
jl
mov
xor
test
add
and
sbb
ds
outsl
cli
ljmp
shlb
lods
pushl
mov
mov
inc
sbb
rcrl
push
lods
nop
js
lcall
or
in
mov
pop
or
out
hlt
pop
loopne
imul
popa
jmp
out
pusha
add
dec
inc
or
xchg
lods
cmp
xor
mov
test
mov
in
jb
cmc
sti
ljmp
inc
bound
addr16
pop
cmp
xchg
jp
push
jbe
rcr
push
mov
mov
std
push
dec
pop
xchg
sub
std
add
jle
push
jns
icebp
pop
xchg
dec
ret
dec
xorl
xchg
jbe
mov
ss
ja
sub
pushl
in
in
data16
pop
mov
and
enter
sub
inc
pop
add
add
js
das
push
dec
icebp
add
or
add
xchg
fcomip
fidivrs
xchg
push
xor
aam
ret
jmp
loope
shll
pop
add
cmp
mov
jmp
sub
and
cmpsl
pop
daa
fldcw
jl
xor
mov
nop
push
lcall
xchg
xchg
push
add
pop
and
pusha
mov
mov
cmpsb
mov
adc
cmc
jg
lcall
mov
fnstsw
sbb
push
xor
dec
or
and
shll
dec
xchg
mov
sbb
cmp
mov
fwait
push
popf
cmpsl
decl
nop
dec
xchg
popf
fbstp
dec
adcb
mov
mov
aam
clc
incl
mov
int3
jmp
mov
push
call
cwtl
arpl
and
mov
inc
cli
insl
xor
sbb
xchg
mov
out
push
mov
data16
mov
push
push
and
daa
std
mov
call
ds
jbe
dec
rcl
xchg
push
pop
cld
ja
adcl
pushf
cwtl
cmpb
push
adc
fdivp
xor
cmc
xor
mov
push
jg
push
xchg
add
push
xor
sbb
lcall
jp
push
mov
outsl
or
xchg
jmp
fldz
jo
test
push
pop
out
ss
jp
mov
stos
fwait
decb
or
fs
into
jmp
ja
xlat
xor
and
decl
adc
cmp
mov
outsb
or
and
push
mov
imul
icebp
xor
push
mov
add
cwtl
dec
das
sub
pop
je
lds
mov
ljmp
outsb
addb
inc
and
push
repz
sbb
imul
or
rorl
js
out
add
fscale
decl
lahf
push
dec
bound
sbb
adc
push
ds
idiv
pushl
test
prefetch
ja
nop
push
jb
ss
or
push
add
iret
addb
pop
or
loopne
sbb
sub
fdivr
sti
outsb
cwtl
ljmp
xor
mov
mov
xor
loop
cmc
call
test
mov
inc
inc
pushf
cld
fwait
xor
shlb
and
adc
mov
mov
pop
sbb
jbe
or
lock
push
stos
add
pushw
dec
push
pop
in
pop
sub
jg
icebp
adc
or
cmp
push
or
cwtl
es
fildll
sub
inc
mov
jno
das
jns,pn
cmpsl
xor
pushf
jl
cmp
decl
aad
data16
and
sub
aam
bound
mov
adc
adc
test
jecxz,pn
bound
sbb
mov
dec
push
sub
fmul
sbb
mov
call
dec
inc
mov
or
rolb
jb
lret
push
xchg
call
lcall
xchg
lods
stos
cli
adc
out
scas
in
aas
mov
rolb
aaa
cmpb
inc
in
jg
mov
lods
mov
pop
mov
cld
xor
mov
add
dec
mov
ljmp
inc
jl
scas
pop
int3
dec
scas
enter
cld
stos
mov
mov
call
pop
pop
xor
mov
pop
cmp
cmc
popa
sqrtps
lahf
arpl
out
inc
or
sbb
and
and
lods
sbb
mov
and
lock
scas
jp
add
jns
mov
adc
jb
dec
adc
xor
lret
fidivs
jmp
stos
mov
xchg
xchg
mov
pop
add
xor
icebp
xchg
cs
jg
push
pushf
leave
dec
dec
in
mov
sub
fsubp
sub
jnp
ljmp
mov
incl
in
dec
data16
scas
dec
dec
flds
or
cld
scas
pop
dec
inc
and
push
cmp
mov
not
sti
imulb
and
sar
in
cmpsl
mov
imul
xor
xlat
pushl
jbe
sub
xchg
push
repz
rcpps
jecxz
sub
addr16
push
pop
insl
inc
add
pushl
fsubl
aam
jbe
sbb
sarb
jg
ret
mov
dec
sbb
fs
in
cmpsb
mov
je
jmp
in
notl
bound
mov
ds
aaa
xchg
je
insl
loopne
sub
out
mov
push
xor
push
cld
call
xor
fdivl
and
or
arpl
pop
cmp
mov
or
dec
aas
and
aam
push
test
ljmp
adc
jbe
or
ja
lcall
les
incl
xchg
rcl
mov
repnz
call
adc
cmp
sbbl
xchg
out
clc
pushl
iret
push
lcall
jmp
cltd
xorb
pop
ja
dec
push
pop
icebp
incl
lahf
xchg
add
movsb
mov
pushf
push
testb
decl
ljmp
fs
leave
popf
pop
in
andl
cmpsl
movsl
insb
lock
sub
pop
lret
jns
dec
leave
add
inc
jge
mov
cmp
fwait
adc
xchg
popa
sbb
mov
xchg
jmp
mov
adc
rclb
cmc
jmp
xor
repz
inc
decl
add
nop
and
xchg
adc
dec
inc
dec
mov
fisubl
mov
inc
jmp
cmpsb
add
out
push
pop
sahf
rcr
inc
sub
cltd
cmp
fnsave
pushl
std
loope
int3
lcall
je
mov
xchg
addr16
and
leave
mov
sbb
loop
icebp
test
adc
xchg
or
mov
incl
out
enter
jbe
inc
fiaddl
cli
add
push
andl
jmp
inc
sti
stos
repnz
into
xchg
out
mov
pop
sbb
add
mov
in
lcall
jo
jge
call
push
cmp
xchg
jne
xchg
out
jb
test
xor
incl
in
daa
push
mov
sbb
jno
and
subl
cmc
fdivrl
scas
test
sbbb
or
leave
fsubl
sbb
aaa
ljmp
cmpsb
mov
fisubrs
in
lock
push
sar
mov
cltd
sbb
push
dec
bound
cli
push
std
pop
xchg
shlb
dec
out
out
adc
mov
pop
hlt
ljmp
cltd
dec
sar
lcall
nop
xchg
fistps
pop
cwtl
notb
test
mov
mov
dec
fstl
fdivrs
push
std
int3
lret
call
push
push
pop
ret
loop
incl
sti
loop
cld
xchg
sub
fnsave
fnstenv
jl
in
jle
lock
jo
dec
mov
mov
push
lds
push
and
leave
xchg
rclb
cmp
js
stos
dec
xor
sbb
stos
xchg
outsl
mov
lods
sbb
mov
jmp
add
ret
sub
ret
movsl
pop
pop
cld
mov
pop
lock
lcall
aas
xor
bound
in
sbb
stos
adc
dec
add
mov
aaa
adc
andb
mov
cmpsb
mov
dec
push
bound
mov
cmpsb
lahf
add
xchg
push
std
imul
dec
jae
inc
mull
stc
test
jmp
mov
pop
std
or
lds
ds
xchg
pusha
insb
add
clc
jmp
iret
sub
repz
adc
ret
js
bound
pushl
popw
cmp
pushf
jmp
cld
sub
clc
pushl
pop
push
cmp
xor
rcrl
mov
scas
fdivrs
decl
or
lock
scas
lcall
out
fcompl
decl
sbb
mov
test
pop
repnz
adc
pop
insb
add
or
xlat
call
dec
insl
pop
or
movsl
cmp
sub
mov
fmull
hlt
xchg
lcall
dec
imul
out
data16
daa
dec
push
rcl
mov
jl
out
pop
call
je
call
cmp
inc
and
in
ret
mov
js
and
pushl
mov
jge
pusha
jecxz
fsubrl
jnp
or
or
sbb
dec
lcall
iret
int3
xchg
jno
mov
add
add
adc
and
and
sarl
sbb
fidivrl
xchg
xchg
clc
lock
lahf
test
fwait
cmpsb
and
pop
cld
incl
lds
aad
xchg
imul
repz
adc
sbb
in
and
mov
inc
xchg
lds
mov
shr
and
inc
add
inc
push
inc
dec
inc
mov
std
push
inc
out
jnp
inc
stos
stos
mov
push
mov
or
jge
mov
lret
ljmp
ljmp
mov
adc
cmc
aaa
outsl
rcl
and
lcall
fimull
movsb
movsb
fnsave
mov
aaa
jae
out
inc
pop
and
jg
mov
and
notl
sub
loope
or
adc
mov
fstl
shr
push
inc
rcl
xor
leave
xor
sbb
orl
jb
jg
jg
out
push
xor
push
mov
popa
rorl
hlt
decl
daa
push
lret
pop
rorb
test
push
adc
and
xor
pop
std
in
gs
cmp
dec
pop
imul
mov
xor
sbb
out
sbb
mov
incl
add
jmp
xlat
cmp
mov
daa
daa
mov
mov
jb
sti
and
mov
sahf
mov
rclb
repz
jg
loopne
pop
movl
cmc
mov
mov
das
jp
xor
js
test
adc
jne
fcompl
inc
adc
inc
fistps
dec
pop
outsl
jbe
nop
sub
xor
stc
jp
xchg
mov
xor
ret
in
mov
xchg
inc
push
mov
mov
call
int
xor
iret
cmpsl
mov
out
rep
jo
jle
mov
ljmp
sub
pushl
xlat
inc
add
push
sti
and
in
mov
mov
mov
in
popa
mov
in
in
scas
fldenv
dec
scas
sub
decl
jno
lcall
xchg
in
dec
mov
mov
sar
decl
or
and
imul
fistpll
sarl
lock
jg
in
sub
inc
or
mov
pop
lea
lret
insb
lcall
jno
jg
test
mov
je
sti
cwtl
mov
decl
aam
std
shr
mov
adc
adc
jnp
loop
pop
daa
or
jae
out
cli
ds
adc
dec
pop
pop
repz
fimuls
cmp
cmp
pop
leave
sbb
dec
mov
jge
in
cmc
xchg
push
xchg
test
loop
push
pushf
out
sub
jp
dec
andb
push
add
add
jno
lods
mov
pop
pop
jmp
les
mov
stc
jmp
cwtl
cmc
sahf
inc
ret
push
in
or
outsb
mov
incl
adc
cmpsb
int3
lret
adc
test
inc
pop
jbe
jg
movsl
dec
mov
xchg
aaa
je
scas
sbb
and
hlt
addr16
xchg
push
int3
inc
shrl
cmc
jecxz
lret
push
fildl
outsl
cmp
sbb
jno
dec
jb
push
xor
in
out
add
dec
or
jg
ds
pop
push
mov
mov
nop
sti
incl
sbbl
mov
adc
pop
adc
decl
sbb
push
cwtl
iret
cltd
into
push
mov
cmp
jp
jle
imul
adc
cmp
int3
lahf
std
mov
mov
add
into
dec
jmp
mov
lds
lahf
sub
movb
adc
inc
push
xorl
call
and
sub
cwtl
cli
insb
les
mov
repnz
adc
lcall
mov
sub
fmul
adc
pop
mov
jle
mov
aaa
call
mov
dec
mov
pushf
dec
bound
fmull
sbb
sar
inc
cmc
mov
ljmp
sub
inc
pushf
push
xor
enter
mov
pop
push
das
shll
push
jns
jl
adc
mov
lock
jmp
pop
dec
mov
ja
fbld
cmp
mov
lcall
ljmp
mov
shr
scas
mov
sbb
sti
loopne
pop
addb
sbb
outsl
mov
ljmp
gs
mov
push
sub
mov
sub
test
push
in
incl
pop
stos
aas
test
xor
xchg
jns
lds
pop
cld
cmpsl
jmp
cwtl
inc
push
sub
xor
cmovo
ja
and
out
xchg
and
js
mov
fnstcw
jbe
push
vcvttss2si
popf
lahf
push
mov
in
fcomip
decl
je
sti
movsb
inc
mov
jg
push
or
daa
inc
jo
insb
xchg
aaa
std
call
or
cwtl
out
mov
mov
xchg
jge
jle
rol
push
pop
fdivrl
jg
popa
mov
repz
lret
xchg
or
clc
mov
lcall
call
pop
sbb
outsl
outsl
sub
sub
xchg
sub
inc
mov
jbe
jmp
xor
shlb
or
sbb
in
pop
sbb
mov
call
xor
or
jl
and
fisubl
cmc
fiadds
sbbb
addr16
mov
or
mov
call
cmp
mov
xor
or
jbe
scas
xchg
test
jmp
cmp
or
jne
or
or
or
cltd
test
test
inc
stc
ljmp
cli
decl
in
cmpsb
pop
lods
ret
inc
inc
xlat
pusha
jns
jo
inc
popf
leave
daa
jae
call
cld
jmp
jmp
or
dec
std
in
ret
aam
push
dec
aam
testl
into
stos
mov
call
adc
adc
repnz
and
mov
push
ds
js
mov
lret
ja
mov
out
outsb
push
cli
pop
jno
std
sbb
inc
daa
out
or
aas
jg
mov
popf
adc
std
pop
cltd
cmp
inc
out
imul
sbb
pushl
adc
in
inc
fdiv
mov
lahf
dec
xchg
cli
xchg
mov
leave
push
pop
jp
cltd
inc
imul
lret
cs
add
pop
ja
mov
push
dec
in
sti
sarl
nop
int3
xor
stos
cmp
jmp
int
add
add
mov
or
arpl
mov
lea
lds
clc
fisttpl
push
fisttps
cmpb
and
jg
mov
mov
cwtl
dec
cli
mov
imul
jp
inc
dec
jg
mov
mov
adc
or
loop
xchg
inc
cli
arpl
aad
jns
jmp
fdivl
notl
movsb
insb
cmpsb
dec
in
pop
test
push
mov
enter
mov
pop
fisubl
mov
sbb
in
inc
push
sbb
xlat
lods
je
or
ficoml
xor
adc
rolb
in
lds
dec
xchg
rcrl
lret
ljmp
or
push
add
jmp
and
mov
push
call
leave
inc
ret
jmp
out
fildll
lahf
jo
add
cwtl
push
aad
insb
or
inc
fs
pop
adc
incl
ss
sbb
cli
ds
xchg
mov
shrb
add
outsl
mov
add
mov
clc
enter
jmp
mov
rcr
sbb
and
addr16
dec
clc
fdiv
jg
mov
xor
xor
mov
dec
cmpsl
xchg
push
xchg
testb
sbb
fisttps
sbb
rcr
dec
lock
or
ljmp
cmp
decl
push
cmpsb
pushf
xchg
scas
sub
and
sub
pop
movsb
mov
loope
repnz
and
jecxz
xor
out
fdivr
decl
sub
jbe
inc
out
daa
ret
dec
repnz
add
mov
jb
xor
or
mov
adc
aaa
int
outsl
cmpsl
test
idivl
in
out
divl
enter
sub
push
aad
lret
sub
xchg
inc
and
int3
imul
push
mov
lcall
popa
ret
dec
cmp
or
lcall
xor
pop
sbb
rorl
mov
add
int
xor
and
pop
inc
nop
fcmovne
lahf
pop
lds
lret
xor
decl
push
mov
lcall
xchg
les
popa
mov
adcb
cmc
jmp
rorl
ficomps
mov
lret
cmpsb
push
movsb
push
call
and
daa
xor
enter
pop
adcl
mov
dec
loopne
repz
in
pop
cmc
adc
or
test
cli
add
out
inc
rorl
lcall
testl
mov
loopne
lea
inc
inc
imul
mov
xchg
cli
xlat
loop
call
das
lods
js
push
decb
push
insl
lret
stos
adc
dec
fdivrp
call
aaa
dec
hlt
ficompl
sub
and
jae
dec
xchg
imul
hlt
mov
ljmp
push
sbb
cld
mov
in
incl
std
fidivs
sub
pop
pushl
fsubrs
sbb
mov
punpckldq
or
arpl
fwait
sub
loop
hlt
inc
jle
bound
movsl
dec
dec
xorb
sar
decl
push
jge
cmc
mov
imul
fisubs
imul
mov
mov
das
ss
dec
ror
jae
in
lahf
fcmovbe
mov
movsl
fs
test
int
mov
push
lret
pop
sub
jbe
in
mov
push
scas
cli
mov
bound
mov
xchg
dec
nop
fs
popa
out
and
pop
out
dec
push
scas
jp
fucomi
inc
popa
gs
push
in
push
loope
sub
xor
int3
call
pop
xor
test
bound
push
xchg
sbb
dec
xadd
fisubrs
pminub
mov
mov
ljmp
jp
mov
jmp
cmp
das
xorb
jb
cwtl
orl
lcall
push
ljmp
mov
push
dec
imul
pushf
sbb
call
mov
xchg
or
xlat
xchg
rorb
fadd
jne
aaa
stc
inc
mov
sbb
dec
jp
push
fsubrl
bound
icebp
rol
in
sub
insl
iret
cld
xchg
push
pop
jl
jg
inc
mov
cmp
xor
mov
outsl
ficoms
adc
xchg
into
out
inc
imul
push
push
les
sub
cmp
out
mov
mov
mov
scas
cmp
mov
sbb
ret
jle
mov
dec
mov
mov
mov
js
ljmp
outsl
in
std
pop
cmp
test
es
fwait
stc
lret
add
jbe
jns
push
push
push
xchg
test
inc
xchg
decl
mov
jecxz
fcompl
mov
loopne
sbb
test
push
push
adc
jo
jle
sbb
sbb
jo
shrl
xchg
inc
pushl
pusha
inc
popf
loope
rcl
adc
not
xchg
insl
in
enter
sub
loope
and
mov
mov
fdivrp
clc
cwtl
pop
orl
out
cmp
lret
and
dec
andl
dec
or
mov
pop
pusha
mov
xor
jnp
xlat
xchg
paddusb
jne
addps
dec
or
sub
xor
pop
adc
out
test
dec
rolb
pop
cmp
int3
adc
jmp
pushl
inc
test
dec
rcrl
bound
je
cwtl
sub
mov
cwtl
repz
jp
lcall
add
add
repnz
pop
call
ljmp
gs
mov
js
or
decl
jl
push
lcall
incl
sub
xor
leave
aaa
or
xchg
xchg
aam
cmpsb
dec
jge
daa
out
call
dec
dec
std
das
jg
std
test
outsb
jno
mov
mov
mov
push
mov
jle
mov
fwait
or
sbb
sub
rcrb
xor
sub
jne
sbb
decl
mov
xchg
inc
sbb
or
xor
shlb
outsb
sub
incl
les
adc
rcrb
popa
je
mov
xor
test
pushl
jo
mov
pop
dec
sbb
mov
mov
loopne
incl
xor
push
jnp
decb
xchg
stos
imul
mov
push
cmpsb
imul
icebp
lock
adc
inc
outsl
push
sar
jle
sub
movl
insb
lcall
dec
bound
sbb
rclb
jp
and
xor
sub
inc
lret
repz
push
jg
cmc
or
jle
sub
and
insb
stc
mov
pop
mov
data16
lret
xor
cmpsl
push
pushf
or
push
pop
jle
jne
pusha
adc
hlt
push
outsl
out
cmp
pushf
aas
fbstp
cld
imul
cmp
mov
cltd
mov
scas
call
hlt
out
incl
incl
sti
jae
popf
addb
push
adc
dec
movsl
addr16
cmc
clc
incl
rclb
jge
hlt
es
adc
rcrl
add
insl
push
push
decl
je
sar
push
adc
js
mov
xor
jl
setp
mov
jg
jmp
rcrl
outsl
test
dec
pop
repz
ja
push
es
lret
add
pop
push
fmull
xor
pop
jo
imul
std
es
and
or
push
lock
aaa
and
es
into
adc
xlat
inc
lret
pop
stos
pop
ljmp
sar
cmc
inc
inc
nop
fimuls
sub
call
fldenv
in
mov
int3
adc
addr16
rolb
jmp
mov
std
lds
pop
and
sub
data16
mov
or
mov
jg
cmp
clc
xchg
andnps
or
mov
lahf
mov
mov
mov
out
stos
cmpsl
add
mov
pop
mov
cmp
jmp
out
dec
cmp
xchg
je
loope
xchg
add
mov
int3
aaa
xadd
pop
in
shlb
notb
lcall
sbb
or
add
arpl
dec
mov
scas
cltd
test
out
lods
cs
dec
int
pop
xchg
add
push
lock
icebp
sbb
ficomps
sar
incl
icebp
jno
push
in
in
xchg
sbb
push
fcoms
jne
fcompl
cld
clc
das
push
jg
sub
cltd
push
pop
xchg
adc
inc
xor
mov
cld
movsb
movsb
push
js
into
aad
sti
sbb
fidivs
es
mov
imul
pop
clc
inc
lods
subl
ljmp
dec
sbb
sbb
mov
das
clc
mov
insb
cmc
xor
jae
sub
cmp
incl
jbe
aad
adc
xor
dec
pop
sbb
sub
or
sarb
push
incl
jnp
mov
ret
aaa
push
arpl
cmpsb
pop
aaa
in
scas
xchg
sbb
movsl
insl
mov
decl
xchg
add
out
xchg
xlat
jnp
xchg
jmp
std
aad
call
cltd
jmp
and
mov
std
or
outsb
dec
xchg
stos
add
cmpsl
cmp
sub
lods
jle
xchg
xor
arpl
mov
cmp
or
les
pop
or
sbb
adc
xchg
push
loopne
mov
pop
xor
int3
outsl
jg
iret
push
mov
jae
daa
inc
adc
mov
adc
decl
icebp
push
ret
or
das
inc
fs
mov
icebp
imul
aaa
std
lcall
fldenv
sti
mov
fsubr
and
call
jbe
fcompl
fdiv
jns
mov
mov
cmp
mov
daa
xor
out
xchg
pop
mov
call
sbb
popa
outsb
cmpl
mov
jo
lods
or
push
add
xor
cmp
and
ret
in
mov
adc
xor
sar
pushl
dec
shll
xchg
mov
pop
sub
push
mov
jmp
icebp
push
xchg
mov
repz
out
clc
addr16
loop
aas
add
mov
addr16
test
pop
shrb
push
mov
ljmp
cli
pushf
outsl
or
cmpsl
xchg
mov
add
je
push
fchs
pop
cmp
push
mov
inc
std
fisttps
inc
test
hlt
cmpb
decl
and
adc
stc
push
loopne
int3
cmpsl
push
add
sahf
pusha
mov
lcall
int
popf
popa
in
cmc
repz
cltd
andb
loopne
test
or
arpl
sbb
mov
jecxz
inc
bnd
xchg
add
pop
jno
push
sbb
push
push
lock
fimuls
push
mov
mov
inc
adc
imul
lahf
jno
inc
add
ss
jle
loopne
mov
scas
mov
xchg
mov
xchg
cmpsl
scas
icebp
push
xchg
imul
jno
lcall
std
ja
test
jns
jne
in
sub
push
sbb
adc
lock
pushl
movsb
test
mov
push
pop
stos
sti
sub
in
sub
fistpll
loop
shlb
pop
add
into
adc
or
das
pop
add
mov
jg
sbbb
push
fs
pop
xor
mov
mov
inc
push
mov
aad
xor
push
pop
cmp
mov
inc
jne
inc
sub
icebp
int3
mov
jmp
call
aad
dec
or
inc
mov
lret
mov
mov
leave
cmc
hlt
jnp
insb
fs
cmp
mov
push
fadds
jecxz
cmp
gs
sahf
dec
jmp
into
and
repz
jmp
or
decl
outsl
mov
pop
aaa
pop
inc
cld
andb
incl
add
xor
pop
mov
cmpsl
andb
mov
aam
xchg
xchg
dec
sbb
cmpsb
ret
shlb
push
movsl
cmpsb
push
mov
repnz
or
ljmp
lret
cmc
mov
iret
adc
loopne
and
xchg
sti
call
sti
push
lods
jmp
xchg
jnp
adc
add
adc
cld
repnz
mov
jge
nop
test
jmp
or
and
xchg
dec
out
rorb
ljmp
loop
das
rorl
sbb
pop
out
add
adc
popa
rcrb
mov
mov
out
sahf
xor
fwait
inc
sbb
push
adc
subb
jae
ret
mov
sahf
or
lcall
aas
add
sub
sbbb
mov
xchg
mov
jp
lret
or
xchg
pop
and
out
cmpb
or
call
test
push
pop
push
pushf
mov
push
or
cmp
mov
xor
ljmp
jmp
mov
and
jne
mov
aam
add
add
ljmp
in
inc
add
jecxz
lods
data16
je
dec
mov
rcll
jg
enter
jmp
aas
fldt
inc
fiaddl
pop
mov
inc
gs
call
mov
jle
jg
sub
movl
and
lods
pushf
aaa
adc
cmc
or
incb
decl
gs
sarb
xchg
jecxz
cmp
inc
cmc
mov
add
mov
out
popa
imul
cmp
jp
sahf
sbb
jne
and
lea
jmp
or
ljmp
stos
repnz
shll
into
clc
lret
xor
pop
loope
outsl
incl
lods
outsl
jno
ja
xor
outsb
pusha
push
outsb
cmp
mov
test
incl
shll
das
mov
mov
repnz
sub
es
add
dec
pop
test
sbb
adc
lcall
out
pop
push
in
negb
hlt
aam
gs
into
sbb
hlt
gs
jecxz
data16
jg
lcall
lret
stos
push
daa
jae
loop
xor
lahf
pop
inc
out
xchg
and
xor
sub
cwtl
adc
icebp
or
ja
sbb
popa
inc
add
out
mov
fcoms
scas
sti
xchg
sbb
jno
inc
test
loop
inc
ljmp
int
sub
sbb
mov
scas
jmp
rcll
data16
jg
call
cmp
mov
test
fisubl
ret
popa
xchg
mov
movsl
test
cld
rorl
xchg
into
pop
xor
xor
and
or
pushl
add
aad
push
out
fdivs
mov
addr16
or
call
or
dec
insl
push
fndisi(8087
pop
jge
xchg
mov
sahf
es
mov
pop
and
popf
cli
cmp
ja
mov
cmpsb
pop
and
and
negb
decl
dec
in
insb
jae
lds
sub
ljmp
sub
hlt
daa
sahf
ljmp
ljmp
xor
pop
ficoms
subl
jmp
cli
xchg
out
sbb
cld
sar
pop
cmp
iret
and
jmp
sbbb
hlt
and
xchg
xchg
mov
sub
dec
and
xchg
xchg
hlt
and
loope
pop
dec
incl
push
jmp
lods
sbb
pop
cmp
inc
and
inc
dec
or
mov
lcall
sti
inc
jno
sbb
ds
aaa
into
xchg
out
insl
ljmp
dec
push
test
pushl
add
in
xor
mov
out
hlt
push
push
add
aas
imulb
outsb
cmp
decl
dec
xor
adc
pop
cmp
dec
jecxz
dec
lds
sub
stos
mov
xchg
ss
lods
fadds
xor
mov
cli
fstpl
mov
mov
or
addr16
mov
jmp
xchg
test
roll
aad
xlat
cs
cmp
xor
pushl
ds
xchg
add
cwtl
gs
mov
mov
aaa
cmp
imul
or
xchg
pushl
or
adc
sub
push
mov
inc
enter
vpaddusb
decl
iret
mov
in
test
ficoml
loope
lcall
inc
je
sub
pop
xor
xor
adc
mov
ret
movsb
outsl
je
xchg
cmc
sti
pop
jecxz
and
push
add
insb
lock
stos
cs
mov
push
sub
std
imul
fsubr
push
shrl
sub
cmp
lods
mov
and
out
clc
decl
mov
dec
test
mov
in
mov
mov
jmp
pop
ss
cmp
insb
lret
cmp
jnp
dec
jb
mov
out
clc
and
out
pop
inc
jecxz
lcall
push
mov
xor
fwait
or
lcall
jmp
leave
cwtl
fisubs
out
dec
jl
lahf
and
mov
or
mov
mov
ljmp
push
out
call
sub
mov
or
fcmove
ja
call
adc
xchg
aad
mov
add
shl
adc
xor
mov
push
push
sbb
mov
lcall
mov
bound
into
imul
dec
xchg
fwait
mov
loopne
jg
cmp
call
push
dec
scas
mov
fxch
adc
cmp
or
inc
jae
sub
sub
adc
xor
lcall
jae
loop
sbb
mov
ss
gs
mov
jo
cmp
pop
push
pop
jmp
stos
xchg
push
mov
pushf
clc
sbb
sbb
mov
mov
inc
fisttpll
out
xor
movsb
rcll
scas
and
xor
lock
hlt
test
inc
push
push
mov
mov
test
cmpl
stos
mov
jns
in
xor
ljmp
pop
test
sub
xchg
adc
ljmp
cmpsb
mov
jmp
cmp
push
loopne
into
push
in
lahf
stos
testl
in
adc
mov
cmp
jno
xchg
fnstcw
xor
add
es
pusha
outsl
inc
js
mov
sti
decl
mov
fs
outsw
mov
xchg
out
imulb
dec
dec
adc
push
pop
mov
mov
jge
repz
ss
xor
mov
inc
out
add
push
orb
cmpsb
mov
repnz
insb
jecxz
clc
mov
add
push
std
xor
sub
jmp
mov
orps
pushl
sub
inc
cmp
jno
jecxz
and
mov
xchg
call
cli
xchg
sub
sub
mov
and
inc
xchg
cwtl
stos
mov
pop
xchg
fbstp
pop
mov
aas
inc
push
cld
decl
clc
mov
out
stos
sti
lock
jl
push
call
ja
mov
inc
push
mov
push
imul
int3
sub
dec
mov
xchg
gs
xchg
cmp
divl
xchg
rolb
mov
cmp
and
jecxz
test
test
jae
aam
aam
outsb
add
mov
inc
aaa
mov
mov
popf
push
cli
pushl
lock
out
sbb
ds
incl
insb
pop
or
ja
fsubrs
outsl
jbe
in
das
sar
scas
fs
push
sbb
nop
aas
mov
sbb
xor
cwtl
clc
or
cmp
adc
dec
fidivl
imul
mov
ljmp
daa
mov
pop
pushf
imul
cmp
add
and
mov
dec
mov
js
mov
clc
test
lock
popa
movsl
xor
dec
out
adc
das
repnz
sub
push
mov
insb
push
das
cs
jg
sti
push
mov
xor
int3
ficompl
pop
fmuls
fcomip
cmpsb
adc
pop
ljmp
or
es
test
push
xlat
add
pop
movsl
mov
sub
mov
xor
in
iret
addr16
inc
scas
clc
cmp
icebp
faddl
aas
das
jno
inc
cmc
xlat
lods
mov
add
xlat
jmp
fcmovnbe
neg
xchg
enter
push
into
push
lea
stc
adc
jns
pushl
or
ss
scas
xor
mov
in
jp
xor
push
cmpsl
stc
fs
jmp
prefetchnta
inc
test
in
jo
add
pop
sub
stos
in
mov
lcall
test
inc
js
cltd
ljmp
pop
lcall
or
dec
test
pop
fidivs
add
insb
stos
aas
test
pop
cli
lcall
std
ljmp
jbe
popf
loope
dec
mov
mov
pushl
push
pop
pop
scas
sub
xchg
outsl
sub
sahf
int
sub
push
jge
dec
cld
cmpsb
repnz
mov
into
mov
add
add
adc
or
ja
mov
lock
test
xor
call
pop
dec
mov
in
sub
push
cmovle
into
int
inc
adc
add
xlat
xchg
mov
push
push
push
incl
mov
mov
jne
cltd
xchg
mov
xchg
in
testb
in
and
or
clc
cmp
hlt
jecxz
mov
je
xor
fists
out
test
xchg
sar
add
mov
xchg
int3
leave
daa
jle
out
test
jnp
call
outsb
orb
call
dec
and
roll
push
push
mov
sub
call
xchg
dec
loopne
insl
movsb
int3
mov
out
jg
xor
rcr
or
dec
test
incl
add
fisttpl
outsb
ljmp
cld
mov
js
ljmp
ljmp
jp
hlt
jmp
ficoml
cli
fisttpl
cmp
sub
jge
xchg
dec
mov
jb
jo
loope
inc
jno
jmp
jg
imul
mov
cli
mov
jns
data16
outsl
shrl
repz
leave
iret
cmc
and
dec
inc
add
ds
push
ret
or
pop
sbb
lcall
jns
cs
popa
bt
fstl
lea
sub
repnz
rorl
sbb
jg
mov
lss
jmp
mov
ljmp
add
jno
notb
push
nop
imul
lods
push
push
lret
out
dec
adc
inc
jmp
setle
jl
sahf
add
mov
decl
stc
sahf
out
or
repnz
iret
pop
fwait
pushf
mov
inc
xor
xchg
xchg
and
fstp
mov
xchg
in
aam
xorl
push
mov
xor
sahf
fisubrl
push
popf
mov
rorl
pop
insl
and
fnstsw
lcall
inc
mov
incl
adcl
hlt
mov
pushl
nop
cmpsb
mov
sub
xchg
aas
nop
cli
inc
pop
ja
jg
in
pop
jge
jp
dec
shll
ljmp
leave
jl
lods
divb
xchg
inc
push
in
movsb
adc
test
call
push
mov
cmc
jae
outsl
addr16
mov
js
xchg
pop
test
dec
rcll
fildl
gs
incl
jae
xchg
hlt
push
mov
xchg
sbb
pop
jb
insb
cli
test
test
mov
scas
iret
jne
or
mov
test
loope
sbb
loopne
cwtl
xchg
dec
or
out
decl
fistps
xor
push
xor
jmp
outsl
or
pop
pushl
nop
add
mov
sbb
cmp
pushf
aad
cwtl
jl
imul
add
dec
push
enter
sbb
out
sbb
aam
gs
jno
add
loopne
xchg
decl
add
inc
mov
xlat
stc
cmp
es
add
xchg
adc
push
lods
les
or
jno
xor
lds
cmp
mov
mov
outsb
outsl
lret
jno
scas
xor
pop
imul
loope
cmp
pop
inc
mov
fs
sbb
xchg
inc
loopne
addl
out
jge
adc
insl
push
sar
inc
dec
jo
les
stos
out
icebp
and
shlb
cmp
ja
xor
loope
sub
out
mov
mov
hlt
fdivr
decl
mov
bound
int
gs
imul
mov
dec
add
inc
lcall
std
test
cmp
cli
cmp
cmp
inc
pop
cmc
inc
cmp
js
pop
int3
xor
sbb
pop
add
outsb
scas
jo
call
mov
lcall
adc
push
loop
adc
lods
push
mov
fists
sbb
cld
arpl
ljmp
jp
daa
icebp
loope
pop
in
add
cli
xchg
bound
mov
outsl
jl
cmp
leave
int3
inc
scas
pushl
loope
imul
fdivr
adc
or
jecxz
add
pushl
dec
xchg
call
sbb
xchg
jmp
sbb
inc
bound
mov
jo
stc
add
and
mov
cwtl
cmp
mov
call
sbb
inc
fadd
cs
push
mov
pushf
loop
jae
dec
ja
movsb
loop
fwait
ljmp
inc
mov
push
mov
arpl
xchg
test
cmp
cs
mov
lret
mov
lcall
or
daa
sub
shll
das
pop
mov
xlat
pop
xor
ss
sar
cmp
pop
rcrb
mov
jecxz
sub
or
sub
push
pop
fbstp
std
les
adc
and
xchg
adc
loopne
outsl
mov
mov
stos
fists
sbb
mov
test
lods
adc
test
xchg
push
movsb
lcall
sti
inc
call
xchg
fisttpll
and
pop
call
lahf
adcl
pushl
mov
in
jle
ret
sarb
je
icebp
pop
stos
push
fstps
sahf
jmp
test
movsb
dec
xchg
xchg
jge
lock
bound
inc
fnstenv
jecxz
in
push
aas
ljmp
dec
or
lods
cs
adcl
mov
decl
out
ret
pop
gs
adc
inc
dec
aam
lret
xchg
jns
xor
lret
and
or
mov
mov
sbb
lock
in
test
pushl
call
add
loop
cmp
inc
pop
mov
jbe
xchg
sub
xor
call
mov
dec
sbb
pop
xchg
repz
lcall
leave
popl
xorb
inc
mov
sbb
cmp
std
ret
fcmovnu
push
jb
imul
imul
cmc
or
adc
call
lahf
dec
std
arpl
or
lods
xchg
cmc
adc
push
imul
push
sub
and
icebp
decl
push
ds
lods
pushf
xor
mov
adc
sar
cmc
lcall
cmp
fisttpll
les
add
push
outsb
cltd
mov
les
iret
sub
stos
push
scas
jg
sbb
stos
adc
xchg
xor
aas
inc
out
in
test
in
movsl
sub
decl
in
je
ret
lock
clc
sbb
jmp
scas
sub
cmp
out
cmp
pushl
adc
orb
ljmp
shll
adc
push
mov
pop
incl
mov
xchg
jle
sbb
dec
and
pop
lock
lret
xchg
or
inc
sti
mov
loop
stc
aas
adc
ja
jge
aad
pop
mov
aam
mov
lahf
push
sti
lods
mov
in
or
insl
adc
lods
cmp
sbb
cwtl
push
sbb
adc
dec
pop
cld
incl
dec
push
pop
jne
sub
mov
in
pop
repnz
pop
lock
mov
les
call
mov
ljmp
xor
stos
xor
test
sahf
cmp
lock
fstpt
jge
pop
inc
sbb
jge
and
fxch
fcoml
std
pop
inc
lcall
sub
jb
fnstcw
xor
addr16
lret
scas
jne
aaa
aad
push
pushf
mov
mov
sub
lcall
loopne
dec
sbb
jecxz
popa
pusha
cmp
fimuls
jbe
push
les
arpl
data16
in
leave
lea
int3
setg
or
ljmp
ja
pop
and
daa
lock
ljmp
xchg
stos
mov
scas
hlt
adc
das
inc
sti
mov
aaa
and
xchg
mov
cmpsl
cli
dec
inc
mov
incl
cld
push
subb
in
mov
xchg
xchg
cli
jg
pop
jg
inc
aad
pushl
xchg
into
mov
mov
cmp
repnz
leave
dec
fiaddl
icebp
fiadds
loop
cld
push
ljmp
cs
ljmp
jae
fiaddl
lcall
fnstsw
lods
mov
jb
sbb
xor
jecxz
adc
fsubl
call
lods
popa
repz
mov
xorl
out
imul
add
mov
sar
call
test
dec
arpl
push
fsts
sbb
mov
call
xor
icebp
das
mov
decb
ds
sub
inc
movsb
ss
not
les
xchg
lea
aaa
je
pop
push
jmp
or
scas
pop
iret
dec
lahf
jge
pop
popf
dec
sbb
cmp
or
repnz
scas
clc
decl
add
fisttpll
inc
lods
insb
sub
aaa
xor
jmp
sub
fnstsw
xchg
push
mov
xchg
imul
out
int3
xchg
call
fwait
inc
jmp
push
scas
pop
mov
sub
movsb
shll
jmp
or
decl
mov
fsubrs
out
inc
test
pop
out
dec
cmc
nop
adc
lods
daa
gs
rdtsc
in
mov
sbb
xchg
outsl
bound
arpl
add
xor
cld
arpl
into
arpl
mov
shrb
negb
aaa
subb
lds
cmp
sahf
dec
test
mov
pop
aam
int3
mov
adc
call
dec
shl
xchg
jnp
aaa
andl
fsubl
pmaxub
pop
scas
test
mov
je
incl
in
add
pop
and
shll
add
repz
cmp
out
arpl
incl
lahf
rorl
push
es
pop
loope
mov
sbb
je
sbb
mov
dec
mov
scas
js
movsl
jnp
and
xor
mov
add
call
fs
cmc
inc
daa
pop
adc
pop
pop
inc
ja
mov
pushl
sarl
adc
int3
and
mov
inc
je
mov
insl
mov
lcall
push
ftst
loope
pusha
out
ret
bound
push
fdivrs
inc
orb
movsb
cld
push
stc
ljmp
mull
xor
jb
insl
jne
xchg
fsts
mov
ret
incl
inc
ja
mov
add
adc
sarb
out
mov
sbb
loop
loopne
pop
nop
jmp
jmp
pop
loope
add
fnstcw
push
shrl
and
repz
sarb
xor
inc
xchg
cmp
fiadds
in
sahf
mov
fiadds
pushl
cld
je
xchg
icebp
sub
mov
dec
pushf
mov
ss
or
push
scas
je
jb
cmp
out
inc
incl
inc
or
lds
cs
aam
mov
insb
mov
pop
jo
nop
cmp
dec
fstl
xor
bound
imulb
push
jnp
rorb
lret
dec
stos
ja
pushl
aas
lcall
xor
repz
mov
adc
in
sti
jmp
rcrl
mov
mov
mov
ret
outsb
addr16
jp
mov
xlat
fs
sub
ljmp
mov
lods
add
jae
pop
in
mov
cltd
imul
mov
ja
incl
xchg
push
int3
outsl
or
enter
and
stc
call
test
xor
pop
icebp
les
nop
lea
in
add
mov
dec
ja
lds
jo
lods
push
push
cmp
xor
incl
jecxz
adc
cmc
mov
in
shrb
mov
cmp
push
mov
pop
scas
lcall
adc
out
add
jns
das
dec
aam
nop
test
pusha
movsb
cmpsl
mov
mov
and
pushw
rolb
outsb
fsubrp
xchg
or
cs
call
xlat
mov
mov
push
inc
cmp
dec
jl
sbb
imul
sbb
cmp
add
add
scas
lock
inc
in
or
pop
stc
push
shlb
sbb
cld
mov
pop
mov
enter
sahf
add
cld
call
inc
push
xchg
enter
scas
addb
dec
sbb
sbb
jg
sub
xchg
lcall
ds
push
lods
orb
pop
cmp
xchg
lcall
repz
fwait
mov
scas
test
jmp
jmp
add
inc
sub
roll
cmc
mov
call
pop
fsts
xor
pop
adc
scas
aad
fstpt
xchg
pop
repz
decl
dec
out
sbb
xchg
into
push
jmp
push
inc
and
mov
jbe
sbb
jg
mov
mov
xor
inc
push
xchg
or
mov
fimuls
or
ud0
decl
push
jno
push
jns
out
scas
or
push
mov
shl
dec
out
push
inc
mov
jmp
cmpsb
sbb
dec
sub
push
fdivrs
mov
sbb
frstor
lcall
fwait
mov
inc
out
cld
div
inc
or
out
cmc
hlt
push
push
out
lahf
rorb
sub
xchg
cmp
cmp
andb
cmc
push
enter
ret
jle
fdivrp
jmp
outsl
leave
sbbl
stos
pop
add
sbb
sahf
xor
jo
ds
or
jl
icebp
pop
inc
enter
icebp
or
mov
and
jg
mov
inc
or
pop
nop
shl
ret
ljmp
jae
adc
cmc
dec
jge
mov
fisttps
inc
iret
lods
jle
stos
outsl
scas
pop
icebp
jg
decl
pop
sarl
mov
lods
pop
or
push
mov
jmp
ret
cmp
dec
sub
popf
cmpsl
call
xchg
mov
or
pushl
je
movsb
jge
adc
dec
add
pushf
cmp
cwtl
int
sti
mov
hlt
das
ret
imul
test
loop
adc
mov
sub
andl
xlat
lcall
imul
mov
mov
icebp
mov
mov
ljmp
push
jmp
jg
or
lea
in
mov
push
fistpll
pop
mull
xor
outsl
cli
push
cmpsl
lock
xor
push
mov
inc
push
rorb
or
ljmp
int
inc
shr
lock
push
rorb
mov
push
js
pushl
pop
fistps
int
insl
adc
fdivr
cmp
push
and
xchg
cmp
call
add
inc
out
or
cltd
sahf
adc
ljmp
sub
aad
mov
pushl
cld
ljmp
je
out
mov
mov
nop
test
ret
mov
popf
mov
shrb
cmpsb
fdiv
ds
call
fcomps
enter
and
stos
and
stc
jb
lret
imul
test
mov
out
mov
popf
mov
testl
enter
jae
notb
mov
xchg
and
cs
ljmp
and
jae
addr16
mov
jecxz
and
mov
movsb
or
jmp
jmp
ret
lahf
push
stc
lods
add
stos
xchg
inc
xor
push
sub
cmp
lcall
mov
shll
clc
and
adc
loope
xchg
xor
push
mov
and
das
xchg
jp,pt
xchg
std
lret
shl
sti
xchg
push
test
mov
xchg
je
sahf
mov
jmp
add
jb
rclb
pop
push
stos
cmp
lods
mov
arpl
push
push
movsb
mov
loop
stos
lock
imull
mov
repz
outsl
add
ret
in
cmp
add
mov
ljmp
lea
jmp
mov
stc
call
push
jnp
je
cld
xor
push
and
pop
neg
insl
std
fdivrl
jbe
xor
movsl
xor
std
in
add
cli
imull
out
cli
mov
test
inc
sbb
popf
out
stos
jo
mov
fsubrs
decl
and
cs
aam
jns
into
mov
push
and
pop
jle
ret
dec
adc
fwait
lcall
adcb
jmp
inc
fs
push
xchg
add
adc
fsub
inc
push
mov
lods
inc
outsl
mov
frstor
ds
addb
inc
push
jnp
lea
loopne
xorb
mov
or
leave
inc
dec
or
jg
in
ss
cmpsb
int3
add
ljmp
and
push
stos
push
lret
lods
imul
repnz
adc
imull
mov
shrl
cli
inc
in
add
cmp
xchg
aaa
push
pop
call
fisubs
adc
cli
jo
cli
icebp
dec
outsl
arpl
xchg
pop
sub
add
movsb
pushl
inc
ds
mov
lcall
xchg
dec
adc
adc
incl
loopne
lock
mov
cld
pushf
adc
jecxz
mov
lods
dec
pop
divl
jp
rcrl
cmp
sbb
test
daa
xchg
and
out
je
jg
lret
shl
add
or
push
add
push
add
mov
aas
lcall
movsl
das
or
jbe
out
out
cmp
fistps
xchg
stos
mov
call
mov
push
sbb
mov
dec
pop
dec
insl
xchg
lahf
aas
rcl
pop
call
jecxz
outsl
orb
push
and
inc
test
orb
inc
pop
scas
and
daa
es
in
inc
call
sahf
sbb
mov
push
movsb
pop
movb
sub
lods
leave
mov
lcall
xchg
outsb
cmp
mov
jmp
adc
push
cmpsl
push
sub
jg
mov
xor
mov
ss
roll
ljmp
xor
push
enter
call
or
push
dec
testl
loop
enter
cmpsl
lret
clc
stc
enter
jnp
mov
loopne
jns
ss
xchg
pop
inc
cwtl
mov
rolb
sub
jns
sub
pop
mov
or
jne
push
xchg
jge
andl
in
xchg
enter
inc
pop
add
jp
jecxz
inc
xchg
lahf
xchg
or
cwtl
test
cmp
decl
add
mov
bnd
in
xlat
sbb
insl
pushf
inc
roll
xchg
adc
stos
decl
sbb
mov
mov
push
lods
jne
orb
nop
xchg
sbb
dec
push
repz
mov
xlat
ss
pop
fs
jle
lock
pop
xor
rcrl
dec
mov
jo
pop
push
add
and
ss
std
adc
roll
call
sarl
cmp
clc
push
or
jo
iret
lret
lret
cli
movsb
fistps
mov
rclb
incl
mov
push
pop
test
aaa
iret
adc
pop
repnz
ret
incl
or
sti
fcompl
push
ds
mov
jp
add
fistpll
mov
add
hlt
test
fnsave
mov
xchg
mov
sbb
aaa
notb
std
xor
rcr
mov
dec
mov
pushf
loopne
mov
sbb
jmp
test
push
cmp
mov
and
mov
scas
or
mov
push
adc
std
or
xor
call
pop
cmc
pop
cs
ljmp
aam
sub
ret
and
int
mov
pop
inc
cmp
int
arpl
mov
pop
push
iret
into
push
mov
outsl
and
lcall
adc
into
jl
sbb
push
mov
pushl
inc
lret
pop
pop
aas
push
push
mov
aad
stc
dec
icebp
mov
mov
popf
popa
mov
pusha
scas
cs
aam
orl
push
stos
in
mov
jmp
daa
xor
xor
push
ds
mov
call
pop
es
cld
add
popa
and
fnstsw
mov
stc
test
pusha
sbb
ret
gs
cmpb
jae
test
js
mov
add
out
es
int3
lret
pop
lds
pop
pushf
stc
aaa
dec
sbb
and
xchg
leave
mov
or
push
call
xor
or
xchg
pop
xchg
sub
pop
lahf
mov
stc
daa
fcomp
out
decb
or
push
sub
incl
loop
jno
into
inc
pop
pop
jp
out
aad
jo
adc
inc
hlt
xchg
loope
jg
sub
call
sbb
push
pop
xor
cmp
mov
push
dec
cmp
mov
lcall
ljmp
xor
ret
dec
xchg
test
lods
xchg
cmp
mov
call
dec
inc
es
push
xor
mov
notb
xchg
jge
popf
mov
adc
out
clc
cs
sbb
pusha
stc
fnstsw
outsl
out
aaa
loopne
out
dec
jmp
dec
ret
incl
dec
adc
ljmp
orl
popf
test
inc
dec
inc
adc
jl
ljmp
mov
cmp
xor
pusha
mov
insl
ret
jns
lcall
pushf
cmp
jp
mov
pop
outsl
idivb
and
add
inc
adc
ljmp
mov
clc
fwait
jb
and
mov
inc
and
lcall
mov
push
imul
jle
mov
xchg
sbb
in
or
inc
mov
and
and
aad
dec
mov
out
cmp
lods
int3
jge
or
inc
add
test
call
popf
leave
jbe
repz
cmp
repz
xchg
loop
jb
aam
addr16
pop
lcall
jmp
fsubrs
out
ret
js
jbe
out
out
pop
or
jmp
push
add
mov
push
xchg
repnz
and
mov
aam
mov
imull
ljmp
lock
movsl
jmp
movsb
pop
fadds
inc
inc
inc
mov
xchg
xlat
pop
ret
pop
std
jg
ljmp
mov
xlat
mov
push
popf
rorl
jo
xchg
mov
lcall
mov
jle
xor
adc
fsubs
hlt
rcrl
idiv
inc
inc
mov
roll
lret
cmpsl
push
mov
jnp
and
xor
movsb
push
xchg
shr
incl
outsl
push
pop
mov
fdivs
mov
shll
mov
cmp
in
push
jno
ret
inc
out
cmpsb
fdivl
stos
xchg
xchg
lock
push
lock
xor
dec
and
dec
mov
movsl
decb
dec
cwtl
daa
push
jp
inc
push
dec
mov
in
mov
xchg
sub
popf
xchg
in
lcall
or
sub
cli
stos
or
add
cld
pushl
sbb
xchg
push
xor
sbb
cmp
ss
xchg
out
std
lods
mov
cltd
push
mov
in
int
movsl
int
inc
pop
pushf
out
pop
adc
lahf
push
adcb
inc
sub
pushl
cmc
push
loope
dec
pushf
xchg
aaa
call
or
mov
imulb
inc
rorl
ss
xchg
je
or
jg
lods
outsl
ret
inc
sub
sub
adc
test
arpl
ljmp
rcrb
sahf
pop
push
and
cmp
push
push
repz
mov
or
jno
lea
cld
call
adc
stc
push
aad
xor
add
and
out
jmp
jmp
mov
xor
inc
dec
xor
xchg
jo
pop
xor
aad
dec
into
int3
mov
push
out
mov
mov
jb
add
or
adc
pop
ss
dec
lcall
pop
pop
shrb
enter
jecxz
mov
std
jle
lret
mov
decl
nop
cmp
pop
sbb
inc
in
cwtl
out
push
cmp
xchg
jns
inc
jp
popa
or
std
push
mov
xchg
xor
aad
push
sbb
outsb
xor
ss
pushl
lcall
xchg
in
sub
sbb
fbld
cmp
mov
xchg
sbb
aam
cmp
lret
stos
rcll
in
sub
popf
decl
cmp
outsl
sarl
dec
or
inc
sbb
aam
in
imul
test
mov
and
in
or
add
vdivss
lcall
xchg
jle
ds
push
jg
fs
into
and
into
loopne
leave
jno
jne
jmp
or
pop
stos
int3
cltd
filds
jae
ret
pop
cld
in
dec
cmp
or
dec
pop
cld
dec
ret
pop
push
dec
test
popf
sub
repnz
in
mov
shll
push
test
mov
jp
pushf
js
data16
sbbb
sar
lock
outsb
bound
cmp
push
dec
cwtl
scas
pop
mov
call
xchg
jne
cs
in
out
repnz
out
dec
inc
xchg
mov
jbe
ljmp
adc
rcll
push
xchg
xor
fsubp
scas
push
pop
jae
dec
sub
xor
jb
cmpsb
xchg
rcll
in
cmpsb
jecxz
call
cmp
lahf
xor
lret
ss
ljmp
fwait
inc
loope
sub
hlt
loopne
in
sbb
shlb
out
mov
clc
cmp
mov
add
cmp
sbb
push
push
movsl
ljmp
mov
dec
lds
stos
pop
sub
fmul
xchg
je
sub
xlat
cmp
mov
aam
push
mov
jns
or
mov
inc
jp
sub
inc
mov
jno
inc
movsb
lock
jmp
jmp
or
mov
jle
shrb
push
ret
push
or
pop
in
mov
popf
rclb
lcall
testb
dec
xchg
aad
adc
ds
sbb
mov
incb
call
pop
es
das
lock
jl
adc
movsl
xchg
or
scas
ret
mov
sar
jmp
jne
mov
dec
mov
lcall
jmp
dec
pop
hlt
in
flds
in
cmp
pop
lcall
push
adc
push
lock
add
fwait
cmpsl
fiaddl
dec
pusha
mov
stos
call
cld
mov
ljmp
rcrb
push
test
pop
push
adc
loopne
cmp
jo
xor
rcrb
out
fnstsw
push
ret
sbb
mov
movsl
push
inc
pushl
adc
mov
push
jae
roll
jp
fcomps
pusha
loopne
inc
jmp
xorl
pop
add
xor
ret
out
ret
adc
aaa
pop
or
decl
push
or
xor
jge
idivl
ljmp
pop
aam
pop
fstpt
jp
stos
data16
mov
adc
push
push
mov
fwait
cmp
ljmp
outsb
and
pop
mov
mov
stos
clc
and
jg
or
xor
inc
shlb
xchg
mov
and
cmp
jecxz
std
jmp
jo
adc
cmp
xchg
sub
stc
adc
pop
cs
jmp
int
mov
jbe
rcrb
or
or
pop
imul
out
mov
mov
lock
jbe
or
jno
pushf
jb
jmp
lret
call
int3
scas
pop
std
call
and
outsb
xlat
and
dec
cmp
pushl
test
lock
mov
fisubrl
push
pop
aas
fisubrs
aam
lss
popf
pushl
mov
sbb
jmp
add
fucomip
push
fsts
jbe
mov
push
mov
lcall
xlat
pop
jge
and
icebp
inc
or
jmp
inc
scas
gs
mov
cmp
insb
bound
mov
adc
popf
mov
pop
inc
mov
cmp
push
lcall
mov
cmpsl
in
in
lds
xchg
fsubl
xor
sbb
xor
test
fwait
mov
adc
cmpsb
aam
jno
out
xor
lds
incl
out
jg
push
xchg
sbb
out
pop
fnstcw
jmp
inc
or
pop
pop
pop
decb
incl
movsb
lods
std
mov
push
mov
or
dec
out
bound
ds
test
out
ljmp
xchg
ficoms
aas
and
jbe
jne
je
fldcw
inc
cld
vmaxsd
repz
push
and
add
dec
mov
addr16
jg
xchg
sub
mov
add
loopne
xor
in
mov
push
sub
pushl
std
mov
loope
sbbb
js
mov
out
jns
aad
fnstcw
jmp
xchg
mov
mov
sub
in
mov
adc
scas
repz
aad
aad
dec
xor
repz
lcall
fsub
cmpsl
divb
cmp
sub
adcb
mov
test
stc
leave
out
jmp
jmp
jmp
add
cmp
insl
addl
xchg
test
fisubl
ret
in
push
cltd
pop
mov
adc
mov
lret
loop
push
push
rclb
sarb
jmp
das
pop
test
mov
add
jmp
and
inc
pusha
loope
mov
jo
arpl
insb
in
adc
sub
jno
push
lahf
mov
push
incl
xchg
xchg
pop
ror
adc
jne
sbbl
jg
imul
pusha
addr16
mov
or
push
add
mov
adc
dec
pop
je
lcall
xchg
cmp
mov
pop
adc
dec
add
adc
dec
pop
fbld
imul
dec
push
cld
mov
sub
mov
pop
pop
sub
jmp
mov
mov
je
idivb
sbb
div
lcall
mov
insb
sar
mov
xorl
fimull
ja
sbb
add
into
scas
std
cmc
popa
cli
add
ljmp
jnp
lahf
pusha
mov
push
pop
cmp
fwait
jne
cli
pop
imul
xchg
lahf
adcb
mov
popf
mov
lcall
xor
fwait
pushl
in
aad
pop
in
xchg
push
add
fcompl
inc
push
cs
fcomip
push
cmp
xorl
push
pop
xchg
clc
into
cltd
mov
cld
cli
push
decl
dec
mov
mov
adc
loope
sbb
popf
pop
dec
jp
test
in
add
pcmpeqd
ficomps
mov
andb
icebp
aam
nop
adc
add
push
call
js
sbb
xor
leave
fcmovnbe
mov
out
pop
push
pop
adc
in
ljmp
rorb
aaa
loopne
sub
daa
add
dec
mov
pmulhuw
inc
or
mov
xor
sbb
leave
cld
sbb
imul
cmp
or
call
lret
cmp
sub
lods
out
adc
push
jle
jb
push
dec
popf
call
mov
in
xor
fmull
int3
mov
pushf
sbb
cltd
movsb
push
movsb
and
sbb
push
popf
movsb
ss
incl
push
push
aaa
pop
pop
add
test
pop
aad
adc
lcall
ljmp
push
add
sahf
mov
dec
cmp
sub
add
adc
jbe
xchg
push
jmp
lock
dec
ror
loop
mov
or
xchg
notb
sbb
arpl
decl
sarb
push
xchg
aam
cltd
imul
test
scas
xor
jecxz
das
fucomi
test
mov
inc
lcall
jg
and
adc
mov
jg
into
fsubrs
daa
pop
adcl
xchg
mov
mov
lock
xchg
jg
imulb
hlt
dec
sbbb
dec
test
pop
sub
inc
int3
je
and
pop
popf
jl
or
scas
fidivrl
mov
adc
divl
or
push
icebp
movsb
cmc
add
jmp
aaa
arpl
mov
mov
or
aad
nop
stos
inc
mov
inc
negl
dec
iret
sub
jnp
mov
addr16
sbbb
outsb
repnz
mov
or
and
inc
dec
mov
lret
rcr
xchg
scas
fldenv
push
jg
push
xchg
or
xlat
test
cmpsb
pop
dec
orb
ljmp
idiv
incl
xchg
fwait
mov
in
jmp
ret
jne
or
test
aaa
fsubrl
insb
mov
cmp
call
mov
xchg
inc
jmp
insl
nop
aam
adc
aam
ja
js
sbb
xchg
push
sar
jg
pushl
or
je
cmpsl
sub
scas
and
jns
repnz
hlt
outsl
out
and
ljmp
sbb
lds
in
sub
mov
int3
in
sbb
call
add
mov
xlat
sub
mov
sbb
pop
mov
fwait
xchg
es
sbb
cmp
ss
jp
mov
mov
in
out
mov
push
idivl
leave
outsb
imul
je
rcll
in
leave
sub
add
push
popf
mov
das
iret
dec
outsb
dec
inc
inc
scas
js
jg
sub
pop
loope
mov
out
xchg
fiaddl
mov
cmpb
clc
icebp
push
std
lcall
lock
pusha
cmp
adc
js
cmpsb
push
fidivrs
es
push
call
rorb
int
push
mov
ret
inc
mov
std
add
call
in
into
push
rcrb
pop
push
loopne
in
pop
cmpb
lcall
mov
dec
and
fsubrp
jae
cltd
adc
std
push
shll
clc
sbb
cli
xchg
insl
cwtl
mov
out
sahf
out
lret
pop
jg
fildl
sub
mov
repz
mov
test
mov
mov
push
lcall
adc
xchg
xchg
cli
xlat
or
or
dec
jmp
mov
fdivr
ljmp
sub
xchg
inc
cvtdq2ps
xlat
add
mov
mov
and
ljmp
icebp
lret
xchg
js
test
lock
dec
movsb
out
xchg
xchg
lods
test
and
cmp
ljmp
pop
sarl
aam
mov
cmpsb
lea
and
out
sbb
int3
fnstcw
jno
data16
sti
inc
pop
sub
pop
scas
sbb
roll
hlt
inc
aas
xchg
push
push
mov
sub
sub
push
mov
hlt
jle
pop
jne
jo
pushl
sahf
mov
fists
xchg
std
mov
das
aam
cmpl
in
xor
jmp
cmp
push
lock
cmpl
dec
jl
mov
dec
push
ja
lea
insb
imul
std
jns
ljmp
adc
hlt
fcomps
lods
jae
sahf
jg
mov
stc
dec
mov
adc
mov
jno
call
pop
mov
pop
mov
cmp
pop
or
insl
lcall
push
jge
cmp
add
std
mov
pop
pop
lods
lret
mov
sarb
pop
cld
pop
cld
arpl
call
mov
into
clc
int3
xchg
or
mov
xchg
sarl
push
imul
dec
or
insb
lods
lods
jb
pop
or
or
mov
xor
dec
fdivrs
mov
add
call
or
xlat
xlat
mov
sti
push
sahf
mov
mov
fiadds
jb
fimull
add
lock
call
or
cld
ffree
jns
xchg
pop
dec
mov
mov
ljmp
xchg
xchg
mov
lcall
cmp
leave
jecxz
pop
adcl
adc
repz
cli
xchg
rcr
cmp
inc
inc
out
push
cmpb
in
inc
jmp
lret
dec
cmpsb
mov
cmp
push
pushl
dec
or
pop
xor
je
lcall
xchg
sub
dec
aas
shlb
push
nop
stc
ficomps
ja
dec
in
xlat
imul
mov
data16
ljmp
pop
cmpsb
ja
fs
lcall
push
jo
sbb
insl
ret
std
scas
ss
call
dec
in
xchg
call
andb
mov
add
mov
mov
les
adc
lret
push
mov
add
ljmp
dec
xchg
dec
daa
test
jnp
cwtl
or
xchg
sbb
and
ret
ljmp
mov
pop
std
loope
and
popa
xchg
bound
sarl
mov
pop
lods
iret
add
jbe
jge
sbb
call
sub
pop
and
insb
xor
loop
test
mov
or
cmp
and
test
mov
sahf
cmp
jae
mov
addr16
dec
shll
xchg
ss
jnp
jns
pushl
mov
repnz
cs
cmp
insl
inc
xlat
in
xchg
divb
mov
sub
test
inc
pop
fadd
jnp
pop
pusha
lock
pop
mov
add
sbb
xchg
add
jne
mov
call
int
sete
add
adc
ret
sub
sbb
cmpl
int
or
jl
xor
inc
sbb
push
cmp
ss
lock
jmp
adc
out
stc
inc
mov
fcmovnbe
clc
lret
aaa
sub
leave
fs
mov
add
in
int3
pshufw
mov
xchg
push
xchg
cmp
in
sahf
jecxz
pop
inc
loopne
pop
add
adc
dec
xlat
pop
pop
jae
pop
or
and
mov
dec
xchg
in
in
shrb
xchg
cmp
jle
or
pop
cmp
jp
pop
test
xchg
clc
sbb
add
push
idiv
dec
xchg
dec
gs
pop
subb
adc
mov
test
pop
pop
mov
incl
sbb
pop
loope
mov
jecxz
pop
mov
ds
mov
call
mov
dec
fnsetpm(287
loopne
sub
enter
popa
pop
jl
in
or
and
adc
jmp
and
jno
push
lods
popf
cld
mov
sbb
cmp
xchg
stos
mov
call
jno
and
in
mov
lcall
jmp
mov
sbb
pop
ds
xor
xor
es
pop
push
in
dec
ret
outsb
popf
mov
mov
and
or
fcoms
hlt
jmp
dec
cmp
push
iret
lahf
int3
ja
sub
fldl
outsl
rcrb
pop
dec
pushl
in
aaa
inc
jo
repz
jno
and
gs
push
aam
hlt
pop
pusha
fidivrs
mov
sub
test
dec
push
dec
movsl
xchg
mov
sub
xlat
out
in
scas
mov
push
jg
incl
or
mov
cmp
or
scas
cmp
lcall
fdivs
call
dec
mov
inc
stos
jne
mov
mov
call
call
jmp
and
xchg
jne
ss
fnstenv
mov
stos
push
cld
aas
iret
fstpl
mov
push
imull
xchg
jg
pushl
inc
dec
insb
pop
hlt
push
sub
mov
jge
les
loope
rcrb
decl
ss
push
insb
add
fs
mov
notb
dec
cli
lcall
mov
into
or
mov
mov
dec
fdivrs
xchg
mov
cli
mov
mov
repz
inc
icebp
mov
icebp
cld
add
jo
in
sbb
pop
stos
jp
push
sbb
pop
cmpl
xor
hlt
jmp
add
push
sub
std
adc
adc
mov
inc
decl
adc
cwtl
jae
xchg
sbb
fildll
push
inc
in
sarl
out
jle
xlat
xchg
mov
mov
ljmp
sti
sbb
adc
aas
repnz
push
ds
rol
xchg
cwtl
in
imul
incl
or
wrmsr
adc
ret
xchg
stos
popf
movsb
loope
pushl
inc
rclb
push
popa
addr16
lods
jb
mov
xchg
in
sub
in
mov
mov
xchg
or
sub
repz
out
inc
pop
ljmp
lahf
call
jl
subb
ficomps
imul
dec
cmp
push
xor
test
jno
jmp
fxam
pop
push
inc
fwait
insb
xor
mov
in
adc
cmpl
lock
gs
and
jno
jmp
push
mov
and
insl
imul
cld
imul
mov
cltd
incl
push
mov
or
out
add
adc
and
or
jmp
shr
jmp
adc
mov
push
mov
ss
pop
mov
sbb
call
push
in
decl
jnp
mov
adc
loop
inc
rclb
sbb
mov
add
movsl
mov
cli
cmp
cmp
cs
cli
inc
dec
mov
pop
add
sbbb
jecxz
rcr
inc
decl
lock
push
push
push
imul
jp
push
jl
in
cs
test
out
daa
cmp
mov
sub
cwtl
mov
sbb
cli
dec
or
inc
pop
cmp
ss
decl
xchg
cli
jmp
dec
inc
pop
subb
mov
pusha
adc
push
cwtl
cmpsb
push
sub
lds
sub
movsb
and
stos
cmpb
int3
fildl
call
push
int
repz
dec
test
cmpsl
add
mov
cmc
lods
mov
jb
xor
call
sbb
les
sarl
and
add
mov
arpl
mov
mov
insb
mov
fisttpl
pop
dec
cld
mov
sti
ja
loope
pop
loope
roll
ja
xchg
mov
into
push
or
arpl
adc
pop
xorl
dec
imul
jg
cmc
mov
lahf
pop
mov
cmp
add
mov
call
cmp
in
fs
add
pop
xchg
mov
sbb
stc
ret
adc
ja
clc
decl
insb
push
mov
out
adc
mov
decl
fwait
mov
push
fistps
dec
inc
adc
fiaddl
test
loop
push
incl
scas
clc
addr16
jecxz
fimuls
jne
push
in
movl
mov
sub
xchg
push
sarb
cmpsb
fistpl
ldmxcsr
mov
gs
mov
pushl
or
mov
stc
out
adc
and
dec
jne
sub
push
pop
std
stc
ljmp
sbb
xor
outsb
hlt
out
fiadds
ds
int3
push
shrl
pop
icebp
decl
movsb
pop
andl
ret
mov
inc
cmp
movsb
xor
xchg
lcall
or
mov
popl
push
pop
fs
xchg
aad
fistpl
fwait
pop
lret
imul
add
push
mov
push
ficomps
sub
and
lock
xor
ljmp
daa
por
mov
notb
push
jns
xchg
add
mov
lcall
std
adc
and
daa
mov
xchg
imull
xchg
test
cmpb
addr16
push
std
jmp
mov
push
enter
and
insb
inc
pop
jmp
cmp
cld
fbld
sub
mov
lods
mov
mov
in
adc
fists
xchg
sahf
and
test
adc
sbb
cli
pushl
mov
shl
xchg
adc
pop
or
cmp
jecxz
stc
int3
cmpsb
aam
ret
pop
lock
scas
push
loopne
and
dec
add
mov
jg
ret
sti
or
test
cwtl
add
jae
lret
in
shr
nop
out
add
mov
cmpsb
decl
testb
add
pop
jg
nop
aad
cmpsl
push
pop
jae
jle
mov
pushl
pop
in
pop
lock
sti
and
inc
mov
push
jns
or
or
fnstcw
pushl
int
mov
mov
or
int
repz
dec
mov
shrl
pop
decl
inc
and
mov
push
insl
cmp
nop
mov
jnp
add
daa
dec
adc
cmp
xor
lahf
push
in
mov
sbb
mov
in
jo
rcrb
mov
nop
adc
cs
mov
pop
cmc
jnp
mov
ljmp
fisttpl
lds
mov
hlt
xchg
adc
mov
cmp
cmc
lcall
mov
movsb
lret
sub
pop
pop
std
pop
jb
add
cmp
cmpb
push
fisubl
sub
jne
jge
sbb
fisubrl
xor
cld
aas
lcall
incl
mov
xor
sar
in
sub
imul
mov
ljmp
and
xchg
xchg
jg
dec
push
or
inc
aaa
mov
mov
decl
ljmp
jne
into
mov
xchg
inc
aam
gs
ret
jb
mov
adc
call
xchg
xor
gs
xor
fsubrs
fdivr
decl
or
pop
adc
jmp
fdivrs
mov
jb
inc
int3
add
ljmp
jecxz
push
mov
fwait
mov
daa
xor
scas
lret
mov
decl
lock
aam
in
dec
fists
dec
sbb
xor
icebp
lcall
xlat
lock
lea
popa
xchg
gs
cmp
out
in
aam
jecxz
lods
mov
dec
stos
push
pop
push
stos
mov
mov
push
out
clc
inc
jl
fsubrs
jp
inc
or
adc
push
mov
ror
decl
inc
dec
sub
cmpsl
jle
sub
adc
decl
out
mov
lcall
sub
mov
cmp
add
adc
out
pop
subb
lcall
inc
popf
pusha
mov
adc
push
bound
mov
sbb
jg
jmp
xchg
sbbb
jbe
ss
cmp
into
out
mov
jmp
pop
insl
pop
int3
and
jg
in
inc
or
fdivr
and
movsl
sub
rcll
jmp
push
loopne
ss
dec
stc
mov
xchg
fnstsw
rcrb
std
pop
mov
xchg
lcall
jne
aad
cmp
push
sbb
jl
outsl
pop
mov
sarb
jl
call
xchg
in
decl
fidivs
mov
orb
jnp
arpl
lcall
outsb
iret
push
dec
mov
inc
call
les
je
sub
cmp
mov
test
test
add
das
je
fcomp
addr16
fcomps
push
adc
xor
cmp
incl
push
clc
pop
imul
dec
xor
mov
lcall
mov
dec
dec
add
pushf
fistl
xor
mov
les
cmpsb
add
cwtl
aad
sbbb
js
or
in
add
mov
mov
mov
adc
pop
or
jmp
rep
fdivrs
inc
dec
hlt
mov
jbe
sub
pop
adc
or
push
mov
dec
sar
stos
fucomi
jp
outsl
push
push
inc
xchg
and
loopne
fcom
sub
push
xchg
xchg
cmp
fsubr
inc
lahf
insb
loop
inc
jg
stos
jg
push
je
sub
mov
scas
cld
incl
enter
cld
test
unpcklps
mov
dec
dec
cmp
dec
mov
add
out
mov
test
mov
xor
repnz
inc
std
out
push
bound
jge
das
loopne
xor
out
fwait
pop
add
lcall
pushl
mov
mov
mov
xchg
sbbl
fcomip
dec
fcmovnbe
or
ds
addb
pop
mov
and
mov
jle
sub
clc
cmp
out
shlb
int3
xchg
pop
lcall
jns
imul
lods
adc
push
pop
test
sbb
mov
push
cld
mov
and
js
popf
shrb
push
xchg
popa
xchg
xor
fldl
fidivrs
pushf
sbb
jae
push
arpl
popa
imul
in
cld
in
cld
outsb
push
nop
lock
xchg
pop
xchg
daa
scas
cmp
outsl
icebp
add
in
xchg
ud0
in
aaa
sbb
push
pop
rcl
jg
sbbb
fdiv
xchg
fs
mov
ljmp
cld
ljmp
inc
or
popl
je
rorl
clc
or
sahf
fists
ljmp
daa
or
xchg
shrl
cltd
sti
push
pushf
jl
call
repz
loope
mov
mov
aad
ret
hlt
cwtl
mov
add
pop
sti
aad
add
outsb
test
decl
bound
int
inc
adc
cwtl
add
pop
out
xchg
idivl
cmc
lahf
rcr
adc
sub
bound
cltd
sub
pop
iret
in
mov
or
push
or
dec
ds
das
pop
jo
bound
xlat
add
stc
movsb
icebp
fbld
gs
pop
lret
hlt
dec
dec
bound
aam
nop
push
jecxz
mov
xor
out
lcall
jp
mov
jecxz
push
loop
out
mov
or
ud0
or
jmp
outsl
jge
test
je
stos
sbb
jmp
es
les
mulb
test
pop
mov
xor
sbb
lret
sti
pushl
jecxz
ds
inc
and
data16
lock
popf
int
add
mov
pushl
stos
mov
lock
xor
addr16
nopl
mov
movsl
shrb
inc
push
das
clc
decl
movsb
mov
outsl
hlt
test
mov
mov
inc
xchg
adc
xchg
push
jmp
jp
inc
cwtl
xor
nop
and
loope
inc
pop
addr16
lret
test
push
pop
movsl
dec
push
cli
imul
inc
inc
adc
jmp
ret
loopne
out
xchg
xor
stos
inc
xchg
pushl
pop
xchg
mov
adc
addr16
imul
fcomip
jge
mov
pop
sub
mov
in
xchg
inc
movsl
ja
jg
imul
mov
cli
pop
sbb
loope
adc
jg,pn
ja
push
push
sub
lods
cmc
xchg
mov
xchg
mov
lods
test
aaa
jo
xor
pusha
xor
mov
rolb
pop
cmc
adc
addr16
adc
or
ror
repz
in
scas
pushl
add
mov
sbb
cmc
mov
xorb
jne
pop
das
cld
pop
mov
lret
push
dec
dec
ja
pop
mov
call
mov
push
mov
dec
mov
mov
jb
dec
jp
je
pop
je
fdivrl
xchg
add
jl
mov
adc
notb
inc
sarb
xchg
mov
in
push
jp
decl
cmp
in
and
xor
xlat
and
std
loop
in
mov
cmp
pop
mov
in
fwait
outsb
jge
mov
or
pop
enter
mov
adcb
adc
fcmove
mov
test
sti
jo
sub
incl
mov
push
sbb
neg
xchg
int3
fiadds
cli
decl
cmpsl
outsb
jb
ds
cmpb
jg
mov
mov
mov
int3
pusha
push
movsb
cld
cltd
mov
xchg
xor
dec
mov
pop
adc
lds
into
dec
jnp
dec
test
testb
mov
pusha
mov
out
mov
inc
or
ljmp
loopne
inc
insl
sbb
lock
mov
lea
test
incl
xor
scas
movlps
sbb
dec
jge
xchg
cmp
mov
pushl
andl
movsl
or
dec
mov
jno
jmp
and
call
out
or
mov
mov
jmp
aad
xchg
add
aaa
cmc
test
mov
gs
stos
icebp
xchg
sub
sub
cli
fidivs
add
add
insl
arpl
and
pop
icebp
jg
lret
xchg
pop
hlt
pop
adc
pushl
les
cld
jl
test
adc
jne
int3
adc
arpl
inc
inc
idiv
jmp
repnz
movsb
and
ficomps
out
xor
fcmovnbe
cmc
or
inc
scas
push
pop
sti
call
lock
lahf
lahf
cmpsb
fsub
mov
sub
lret
mov
mov
cwtl
pusha
mov
aam
or
jne
inc
call
cmp
divl
mov
push
ss
jp
dec
loop
pusha
mov
pop
arpl
outsb
call
lcall
pop
movl
xchg
ds
mov
or
add
jb
xor
pop
xchg
jmp
and
pop
inc
pop
cs
push
mov
clc
dec
and
negl
or
aas
mov
call
sbb
mov
dec
pop
jg
adc
sub
mov
outsl
jb
fbstp
jmp
or
jbe
dec
enter
inc
sbb
adc
jp
lods
icebp
jnp
xor
pushl
faddl
cmpsl
pop
mov
pop
mov
and
and
movd
mov
call
fdivrs
mov
mov
sahf
movsb
jae
mov
in
jae
xchg
jmp
fidivs
cmpxchg
xchg
dec
in
inc
bound
jecxz
push
lock
pop
imul
jno
je
lahf
pop
lock
mov
dec
stc
mov
adc
mov
cmpsb
sbb
push
jno
jmp
ljmp
adc
mov
out
call
pop
lahf
push
jmp
lock
arpl
mov
daa
jae
clc
ljmp
dec
mov
and
sub
add
fwait
repnz
adc
jg
adc
lods
push
sarl
or
inc
jle
push
add
fiaddl
sub
lock
decl
jae
adc
cmp
push
fwait
cmp
nop
repz
scas
es
lcall
and
test
sub
and
push
push
loop
mov
into
sbb
cmp
sbb
dec
dec
cmp
cmp
sbb
movsb
adc
pop
pop
ret
jmp
adc
dec
jl
mov
pop
xor
push
bnd
mov
pushl
fistps
movsl
test
in
mov
push
or
xadd
pushl
lods
dec
stc
aam
xor
jbe
pop
stos
je
mov
stos
inc
mov
jl
cwtl
leave
ljmp
test
add
mov
test
iret
or
lret
scas
cli
in
ret
add
daa
stos
jmp
xchg
sub
sub
mov
push
je
xor
mov
xchg
xor
lret
xor
scas
jp
cmp
decl
pop
daa
xchg
imul
outsl
sbb
out
mov
sub
adc
call
popf
in
lods
inc
les
sbb
insl
push
push
loope
scas
and
jbe
decl
cld
movsb
lods
loop
xor
std
nop
jno
push
sbb
inc
pop
shll
or
lcall
xchg
rcrl
das
fiaddl
divb
stc
or
test
xor
repnz
mov
imul
lret
mov
aaa
ss
cmc
call
sbb
les
imul
adc
jne
outsl
add
addr16
mov
lcall
jmp
mov
or
insb
lcall
mov
mov
cmp
loopne
sbb
jl
mov
xchg
mov
outsl
jle
xor
push
imul
clc
fildll
call
or
cmp
xchg
mov
int3
lcall
lock
lahf
into
mov
lcall
andb
mov
out
cmp
push
mov
ret
jmp
dec
test
jge
mov
xchg
lea
adc
cmpsl
dec
loopne
adc
decl
mov
add
sbb
xlat
and
jns
and
xchg
leave
fstl
popf
ljmp
or
movsb
fsubl
into
and
mov
pop
push
xchg
sub
jmp
incl
xchg
rorb
orl
cmp
mov
pusha
push
jmp
stos
cmp
xchg
pop
ret
ljmp
xchg
loope
pop
and
and
pop
add
sbb
fidivrs
negb
pushl
fs
xor
push
jle
mulb
sub
pop
or
or
mov
in
mov
cmp
mov
mov
int3
push
pop
popa
xor
jle
mov
andb
incl
xchg
push
dec
mov
lcall
jge
clc
xchg
push
scas
xchg
out
mov
cmc
pop
lret
push
shr
pop
addr16
push
loopne
mov
out
jle
mov
fisttpll
les
jnp
out
insb
mov
ljmp
call
inc
lahf
test
mov
push
fisttpll
and
pushl
into
in
mov
sub
mov
mov
sti
lret
aam
jbe
cmp
call
clc
add
or
xchg
dec
sbb
adc
mov
mov
mov
pop
or
lds
incl
push
clc
sbb
popa
in
inc
ss
les
mul
xlat
imul
addr16
call
popa
mov
jns
mov
out
pop
aas
fs
sub
icebp
aam
popf
mov
ljmp
adc
push
out
mov
or
or
push
je
dec
inc
cmp
cmp
jns
outsb
loopne
dec
dec
mov
adc
test
and
lds
das
enter
push
inc
dec
mov
push
mov
les
mov
mov
pop
inc
mov
cmpsl
and
andl
pushl
fstpl
cmp
mov
repz
mov
daa
imul
ljmp
cmpl
scas
arpl
notb
mov
imulb
inc
mov
ficomps
xchg
cli
loop
sub
mov
jmp
xchg
sub
or
call
pop
mov
aam
push
adcb
push
daa
add
xlat
gs
shrl
jg
je
in
cmpsl
stc
add
aam
or
push
daa
out
push
dec
xchg
xchg
fisttps
out
cmpsb
lods
mov
ret
icebp
stc
push
xchg
pop
mov
cmp
ud0
lcall
out
lahf
sbb
arpl
xchg
xchg
push
or
mov
sbb
and
push
scas
enter
mov
movsb
adc
int
and
loopne
ljmp
pusha
addr16
lods
lret
sbb
dec
loopne
mov
cmc
ficomps
clc
dec
sbb
lcall
add
test
out
jg
inc
bound
xchg
icebp
pusha
das
sbb
les
mov
jmp
inc
mov
cltd
mov
pusha
addb
mov
add
mov
aas
dec
cmp
jl
mov
decl
and
stos
cmp
mov
dec
ss
decl
cwtl
cmp
xchg
pushf
or
adc
xchg
cwtl
rol
mov
out
scas
ja
and
sbb
ret
hlt
popa
jb
shlb
filds
hlt
call
sbb
and
cmp
pop
insl
stos
or
ljmp
das
cmpsb
push
mov
cmc
or
cmp
lcall
add
cmp
xchg
stc
cli
fs
xor
xchg
pop
outsl
push
jg
into
mov
cmp
popf
pushf
mov
jmp
jp
mov
dec
add
cmovge
insl
inc
pop
jb
fwait
dec
ds
incl
arpl
mov
lret
cli
movq
negb
push
out
mov
loop
or
pushl
leave
mov
ret
lret
inc
or
mov
out
mov
cltd
pop
mov
lds
loop
test
loope
sbb
decl
and
lea
or
aad
inc
mov
jmp
ret
sub
xor
dec
shll
roll
xchg
fsubr
pop
jecxz
pushl
mov
shll
repnz
repz
dec
xchg
andps
pushf
scas
xor
int
inc
jl
cld
hlt
popf
jmp
push
sub
push
and
decl
pusha
out
stc
jno
hlt
adc
xchg
xchg
ret
das
push
xor
or
mov
enter
into
xchg
cmp
movsb
xor
fadds
mov
jnp
sahf
jmp
cli
iret
dec
jecxz
cmp
pop
dec
jo
test
mov
sti
in
mov
mov
decl
jo
xchg
cltd
dec
cmc
inc
fldenv
ljmp
jle
sbb
jg
xchg
mov
mov
sub
pop
aad
shlb
and
gs
xor
sar
incl
jbe
stos
mov
mov
inc
pop
mov
and
push
lcall
pushl
dec
inc
in
sti
pop
cld
outsb
inc
pop
pop
and
cmp
cmp
xlat
cltd
mov
sbb
cmp
cmp
mov
div
call
repnz
sbb
fisubs
jecxz
or
in
pop
mov
das
popa
stos
xor
xor
xchg
cmc
call
jmp
out
ljmp
stos
mov
movsl
les
and
xchg
lods
jmp
insb
fs
or
sbb
sbb
repnz
jmp
add
fwait
jp
fidivs
mov
das
pop
out
jecxz
cltd
pop
test
insb
mov
call
repz
je
lcall
adc
mov
mov
add
push
pop
jo
sbb
add
icebp
push
fcmovbe
decl
push
pusha
test
rcll
xchg
jne
loopne
pushf
lock
xchg
push
pop
insl
std
arpl
bnd
adc
ret
mov
fisubs
ljmp
jp
sar
jmp
mov
aad
lcall
jg
std
rcr
jno
xchg
mov
loopne
pushl
xlat
in
test
imul
xor
xor
and
or
lcall
mov
inc
sub
mov
pushl
imul
cmp
jno
adc
inc
outsb
ja
or
popa
dec
popf
or
lcall
pop
popf
ss
iret
mov
push
sbb
inc
repz
sub
stos
mov
repz
gs
sbb
add
data16
mov
pop
cld
cltd
int
mov
pop
mov
pop
in
and
pop
dec
push
roll
fstp
in
pushl
dec
test
out
ss
icebp
jecxz
sub
xchg
push
inc
xor
pushl
imul
movsb
in
add
sbb
loope
loope
sbbb
incl
xchg
adc
lahf
pop
jmp
jbe
sahf
jb
lds
mov
push
ljmp
stos
fwait
imul
ds
push
xchg
sahf
leave
pop
pop
mov
xchg
dec
dec
pop
aam
and
mov
or
mov
out
scas
cltd
pop
les
jmp
cmp
adc
iret
mov
fcompl
cmpsb
dec
call
outsb
into
pop
in
ss
repnz
inc
call
imul
mov
dec
or
adc
sub
in
movsl
mov
jmp
fwait
std
sahf
jle
outsb
mov
pop
loopne
push
leave
xor
in
mov
jb
mov
cmpl
incl
push
push
shlb
pop
ja
hlt
xchg
push
clc
mov
xlat
iret
and
sbb
mov
scas
incl
push
pop
cmp
xor
test
or
cs
lods
jb
lcall
insb
jmp
loop
sbb
sub
test
daa
push
pop
jns
subb
add
lcall
rolb
std
push
jnp
adc
dec
push
xchg
jecxz
sub
lcall
jbe
mov
test
mov
testl
push
or
incl
bound
mov
inc
mov
jo
push
xchg
insb
fcomip
pop
icebp
jmp
hlt
fsubl
mov
addl
repnz
out
cmpsl
add
jg
arpl
pop
lcall
sub
movsb
sahf
popa
int3
jle
mov
test
cld
mov
shl
movb
push
adc
lahf
hlt
and
adc
sbb
out
loope
jge
data16
pop
loopne
or
mov
push
push
sbb
ds
call
rolb
arpl
jae
shrl
mov
adc
in
xlat
sbb
repz
popf
mov
lahf
cmpsl
cmpl
arpl
imul
sub
js
data16
or
scas
stos
les
add
call
mov
stos
mov
fnstcw
data16
jbe
scas
aam
jge
fiaddl
xor
jmp
jb
mov
jae
cmp
mov
adc
pinsrw
mov
incl
mov
enter
loope
imul
jecxz
or
jl
jae
add
call
or
sbb
push
jns
and
add
xor
sub
push
xchg
inc
mov
inc
add
flds
push
outsl
pop
test
or
lahf
movsb
sbb
jge
les
scas
mov
ja
push
mov
dec
insb
jb
push
adc
stos
xor
ss
pop
sbb
push
mov
dec
inc
js
decl
xor
rorb
xlat
xchg
lods
lock
push
mov
jl
andl
call
sbb
jns
ljmp
mov
rol
lcall
mov
jb
mov
and
push
push
fs
push
jecxz
adcb
lahf
decl
lock
cltd
sahf
mov
pop
out
jbe
stos
mov
daa
pushf
sub
popa
clc
dec
adc
push
xchg
pop
dec
or
je
push
mov
out
les
loopne
xor
jmp
adcb
cmp
aaa
adc
mov
lcall
mov
fcmovne
ss
ja
xor
xor
dec
mov
sub
sar
jmp
cmp
stos
loop
xor
mov
pop
mov
cmp
push
and
mov
xchg
pop
scas
ljmp
push
fs
aad
aam
xor
lret
sbb
cs
adcb
mov
xadd
sub
or
mov
repz
or
divl
mov
andb
xor
and
jg
adc
xchg
sahf
test
adc
add
mov
dec
fcmovb
in
mov
pop
out
lods
mov
pop
js
lcall
lock
and
or
scas
stos
nop
test
xor
lock
stc
notb
sti
push
incl
mov
or
sbb
xor
cmp
xor
stos
repnz
ret
addr16
pop
jmp
dec
jmp
jne
cmp
enter
mov
imul
popf
fdivrs
movsb
out
mov
addb
adc
sub
jno
jno
push
ljmp
xchg
sbb
sti
sbb
jns
and
fildl
inc
mov
xchg
lods
aaa
insl
and
push
arpl
stos
jle
jmp
clc
cli
inc
xchg
mov
and
dec
xchg
cmc
xchg
cli
jp
sbbl
or
mov
shll
pop
xchg
cli
jno
adc
cltd
or
cwtl
push
adc
repnz
xor
shll
cmp
fisubs
jg
and
or
aam
inc
cwtl
into
dec
arpl
ljmp
mov
inc
lahf
adc
mov
inc
ret
and
lret
jle
cmpsb
push
pop
sub
bswap
push
pop
cmpsl
adc
mov
sub
fnstcw
call
lock
push
and
or
ds
push
push
add
clc
mov
into
mov
nop
push
mov
inc
out
push
cmp
inc
jl
into
or
imul
xchg
sub
popf
add
xor
lods
bound
sbb
arpl
std
pushl
insl
cmpsb
mulb
adc
cmp
inc
fsts
cmp
inc
jno
decl
lcall
xor
sbb
int3
push
sbb
pushf
icebp
incl
xor
sti
pop
daa
or
mov
or
mov
push
int3
lods
xchg
std
fistpll
int
test
sub
in
je
cmp
popf
dec
sub
ljmp
sbb
mov
sahf
jg
xchg
scas
nop
lcall
pop
dec
dec
cmovp
mov
lods
inc
xor
rcr
mov
add
xlat
adc
jne
shll
leave
or
ljmp
pop
das
and
les
adc
mov
mov
sbb
sub
jge
xchg
mov
fsubl
stos
mov
add
xchg
popf
pop
lea
mov
mov
jmp
cmp
popa
dec
lret
test
imull
lret
outsb
decl
les
add
into
clc
cmp
sbb
test
nop
push
out
clc
call
pusha
pop
mov
sahf
mov
insl
adc
popa
pop
push
mov
xor
mov
leave
lcall
jo
popa
shlb
std
pop
pop
cmp
push
push
out
cmp
lcall
jbe
dec
movsb
add
cmp
jns
rorb
dec
sarb
imul
or
adc
sub
jecxz
repz
cwtl
adc
ss
addl
adc
pop
xor
fxch
daa
daa
jns
lcall
out
into
mov
lcall
fisubs
imul
pop
push
repnz
push
xchg
scas
mov
test
dec
cmp
inc
popf
jl
call
xor
jl
outsb
sbb
es
div
adc
sbb
push
dec
mov
push
out
sbb
mov
fstps
sbb
add
inc
or
adc
mov
jnp
inc
xchg
mov
inc
adc
mov
pop
jmp
or
inc
mov
cmp
xchg
test
and
pop
cmp
push
and
or
push
lock
dec
fbld
inc
imul
inc
cmp
out
aas
push
mov
mov
shll
sbb
or
mov
int
shll
decl
jmp
sub
mov
dec
dec
mov
fimull
push
decl
mov
and
lcall
mov
lcall
jmp
ret
mov
pop
push
lret
or
push
arpl
js
lret
jmp
fistl
decb
lods
cmpsb
adc
js
roll
push
and
jge
outsb
mov
enter
mov
sbb
pop
lods
rcrl
adc
dec
subb
lds
jle
jge
adc
test
xchg
ljmp
add
jp
loopne
jmp
popf
and
cmp
mov
mov
clc
aam
icebp
mov
dec
and
filds
std
lcall
addr16
xchg
xor
pop
push
mov
mov
incl
enter
mov
and
scas
bound
or
incl
fnsave
push
js
xor
std
cld
insl
in
adc
mov
push
xlat
fld
daa
and
idiv
cmp
mov
daa
in
stos
push
push
mov
stc
inc
lret
clc
jmp
pushl
push
dec
xchg
mov
fistl
jae
lret
enter
jle
jle
call
adc
mov
mov
dec
insb
jae
fwait
adcb
pop
jle
and
mov
and
ljmp
repnz
add
ss
lds
and
pushl
xlat
faddl
out
push
and
or
out
clc
aad
imul
dec
cwtl
lea
decb
or
adc
gs
xchg
pop
arpl
sbb
out
adc
repz
jl
add
les
call
cld
sub
jns
push
mov
sub
int3
sub
push
mov
outsl
shr
clc
jmp
inc
outsl
fimull
mov
pushf
sub
or
add
test
ljmp
cli
sarb
pop
jp
and
hlt
movsl
cmp
xor
pop
or
sbb
outsb
mov
pushl
mul
dec
mov
loope
iret
fs
pop
stc
arpl
or
mov
out
aam
out
hlt
sbb
not
daa
sbb
pop
xlat
jno
dec
ljmp
cmc
jecxz
and
xchg
fcmovb
push
jae
ret
mov
loope
fwait
jl
sbb
shlb
pop
cmp
lods
movsb
dec
movsb
mov
mov
mov
icebp
decl
ret
movb
dec
cmp
incl
cld
inc
sarb
mov
sahf
test
mov
repz
fwait
dec
fwait
or
lea
lea
mov
es
push
jmp
mov
mov
in
hlt
mov
ja
inc
shrl
push
and
dec
add
fldl
js
jl
and
clc
fsub
in
shlb
pop
in
popa
jle
lret
cmpl
jg
mov
lea
dec
add
in
pop
js
aaa
rorl
xchg
push
jns
fistps
lcall
adc
cli
js
cltd
sub
push
in
mov
mov
ficoms
ss
and
scas
sbb
popf
or
enter
sub
xor
lret
into
insb
aas
pushl
scas
decl
xchg
adc
jmp
ficompl
sub
scas
mov
out
and
ljmp
mov
std
cltd
push
or
and
mov
stos
lret
popf
fcoms
sbb
pushl
nop
shll
lods
in
sti
sub
jne
clc
fwait
cmp
xor
es
xchg
sub
pop
mov
fcomps
dec
dec
mull
jbe
add
cld
decl
xchg
jmp
sub
mov
or
add
jne
adc
sbb
mov
data16
or
ret
push
ficoms
bound
sbb
adc
inc
xchg
dec
inc
jbe
pop
jno
int3
sar
push
xchg
mov
out
ret
test
fstpl
xchg
mov
ljmp
add
ret
mov
clc
not
dec
fnstenv
mov
sbb
incl
cmp
dec
lea
stc
out
mov
xchg
cmp
cmc
and
sub
aaa
jecxz
incl
push
add
icebp
pop
ljmp
pop
xchg
jmp
arpl
jmp
xchg
inc
test
cmc
sti
push
jg
pop
adc
or
out
sbb
cmp
pop
outsl
pusha
cltd
movsb
fs
fisttps
add
test
jbe
mov
in
lock
push
sub
cmp
adc
xor
ds
mov
xchg
dec
jb
pushl
and
jmp
xor
es
inc
in
je
dec
lret
mov
sub
xchg
adc
jl
addr16
inc
mov
mov
sub
sbb
icebp
movsb
inc
add
jmp
inc
ds
outsl
cmc
je
daa
addr16
pop
iret
pop
xchg
jg
je
jg
jl
lods
inc
mov
es
mov
cmp
and
in
je
mov
push
ljmp
mov
mov
aad
call
sbb
xor
fstps
fists
leave
sahf
pop
inc
jbe
adc
and
jge
push
test
sti
movsb
push
push
lcall
jecxz
lcall
ja
popf
out
dec
xorl
cld
hlt
icebp
pop
lods
sub
incl
cwtl
mov
ret
pushw
in
and
pop
movsb
jae
sahf
std
out
enter
int
sbb
fstps
stos
out
arpl
in
pop
inc
stos
and
bound
shlb
clc
jmp
push
imul
cmp
gs
inc
jge
cmp
cs
mov
idiv
out
imul
add
inc
jg
pushl
in
in
mov
out
xchg
xor
int3
out
ret
aaa
shlb
imul
xorb
out
inc
pop
clc
cmp
mov
dec
ds
jg
push
daa
jmp
decl
out
xor
add
icebp
loopne
jae
hlt
push
adc
ljmp
movsb
mov
loope
inc
jb
push
jb
sbb
xchg
movsl
sub
insb
nop
sbb
cltd
inc
clc
dec
xor
decl
push
inc
jl
rorl
jb
imul
push
lds
pop
mov
adc
inc
xor
mov
mov
sar
inc
ficomps
test
or
mov
jmp
jg
xor
out
loop
xchg
cmp
dec
sub
inc
orb
or
nop
pushl
imull
and
mov
or
scas
dec
pop
pop
sbb
sarb
adc
adc
adc
decl
push
fstpl
popf
enter
xor
es
xchg
clc
in
data16
ss
filds
mov
mov
pusha
stc
mov
mov
xor
pushl
mov
aad
sbb
aad
dec
push
sub
in
call
add
daa
xchg
lods
xor
les
test
pop
in
insb
jmp
outsl
pushf
shr
pop
xchg
loopne
inc
push
fmuls
or
push
adc
in
lods
fcomps
ror
loope
and
add
mov
and
lods
fldt
lock
add
loop
jb
xchg
push
mov
jg
jbe
or
ljmp
movsl
bound
sub
rcll
incl
test
mov
les
xor
ja
push
out
jo
jns
ljmp
sbb
mov
in
mov
insb
lds
in
std
jmp
jo
push
xsaveopt
dec
mov
mov
fs
fisubrl
xor
mov
inc
dec
jge
xchg
cld
pushf
jns
dec
adc
push
dec
push
push
mov
ljmp
sar
adc
jp
or
movsl
scas
or
sub
sahf
cwtl
ja
jnp
pushl
adc
adc
daa
and
das
out
xor
mov
leave
sub
xor
jmp
pop
mov
sbb
xchg
mov
jno
mov
push
mov
int3
jbe
jmp
ljmp
mov
nop
test
loope
xor
pop
lret
xlat
mov
repz
call
dec
xlat
mov
mull
xchg
icebp
add
pop
fdivrl
imul
jecxz
adc
pushl
mov
and
mov
xchg
mov
pop
jo
push
lods
outsb
idiv
inc
adc
pop
push
leave
sbb
movsb
in
cmpsb
xor
test
mov
xor
xchg
ljmp
pop
aas
mov
nop
pop
and
stos
hlt
add
dec
mov
pushl
push
cmp
ret
data16
mov
les
dec
mov
push
inc
outsb
and
cmp
sbb
pop
and
cmp
mov
into
xchg
arpl
mov
decl
and
pop
or
or
shlb
cwtl
fisttpll
inc
fistpl
test
inc
aaa
lret
mov
lcall
push
outsl
clc
lcall
shlb
sbb
xor
std
cli
call
mov
lods
lds
jb
sahf
cmp
pushf
adc
jecxz
xchg
dec
mov
mov
and
pop
push
mov
jb
int3
mov
sbb
iret
push
stos
addr16
adc
sub
pusha
dec
loopne
adc
sti
pop
rol
push
mov
or
mov
sub
dec
cmpsb
mov
bound
pop
push
or
mov
push
cmpsl
jmp
outsl
inc
pop
add
add
xor
cli
or
mov
rcrl
pop
jb
incl
int
aam
mov
adc
jl
daa
rolb
cmp
cmp
pop
jmp
and
xlat
mov
and
xor
int
lock
push
je
es
repz
ds
dec
arpl
add
fs
xor
stos
jp
cwtl
cmc
movsb
lcall
scas
mov
sahf
lock
out
hlt
xchg
add
aas
adc
cmp
jp
mov
subb
out
lcall
dec
sub
add
jle
fdivr
cltd
inc
fstl
ror
cmp
cltd
lock
ds
mov
dec
mov
into
push
aam
shl
and
mov
in
push
test
jg
or
xchg
jg
mov
lds
iret
adc
and
mov
jp
cmpsl
cmp
xchg
das
xor
lcall
dec
adc
cmpsl
mov
adc
and
insb
aaa
and
sub
ljmp
movsb
lahf
and
add
jbe
inc
das
pop
mov
andl
push
and
jno
mov
pushl
ss
xchg
push
stc
xchg
inc
iret
out
cmp
mov
into
push
adc
lea
fcompl
lcall
ds
pop
add
negb
clc
fwait
or
sbb
popa
incl
xor
sub
adcb
inc
daa
in
xor
lcall
lcall
bnd
mov
test
or
in
les
orb
clc
cmp
pop
adc
jo
xchg
jne
xor
outsb
mov
in
call
jmp
fidivrs
inc
insb
test
mov
xchg
ds
or
pop
std
pushl
fcompl
push
or
jns
fstp
xor
lea
and
sahf
jo
ljmp
mov
ss
fwait
and
aad
imul
pop
inc
neg
fwait
cmp
mov
lcall
jae
leave
fdivs
sbb
in
mov
addr16
data16
xchg
xlat
dec
sub
loopne
cmp
add
lods
incl
sbb
xchg
adc
fdivrp
or
repz
in
add
ljmp
cmp
lret
imul
and
push
inc
dec
stc
mov
aas
pop
imul
dec
cmpsl
pop
out
or
scas
stos
lods
or
insb
cmp
push
pop
adc
fisubl
imul
rclb
clc
incl
repnz
adc
repnz
lods
mov
sub
ljmp
cwtl
bound
mov
push
sub
xchg
int
sub
fbstp
test
push
adc
mov
push
inc
pop
movsl
inc
aas
ds
dec
inc
sub
inc
daa
sbb
mov
and
cld
test
cmpsb
adc
or
inc
and
mov
push
popa
outsl
ja
pushl
sub
sbb
ret
sub
in
clc
adc
data16
pusha
dec
jb
rcrl
stos
inc
xchg
pop
adc
ljmp
fs
cmp
test
into
in
mov
sub
adc
cmp
mov
push
iret
jbe
mov
push
cmp
mov
jl
cmpsb
push
and
mov
push
ljmp
movsb
int3
scas
mov
adc
jecxz
mov
xor
fists
dec
push
xchg
mov
jmp
notb
dec
divl
in
push
aad
out
mov
sbb
sbbl
inc
xor
sbb
push
bound
mov
popf
and
inc
mov
insb
jno
lcall
inc
stos
inc
add
xchg
daa
mov
jge
or
out
bound
lcall
push
xchg
push
cli
test
lcall
push
mov
lock
call
outsb
stos
xchg
ret
add
incl
jno
dec
insl
push
adc
pop
test
fisttpll
out
inc
fwait
into
incl
cmp
mov
dec
mul
dec
lret
mov
pop
dec
mov
pop
add
loope
cwtl
add
dec
cmp
fisttps
xchg
pop
out
or
pshufw
cld
je
pop
or
inc
xor
xchg
out
xchg
loop
stos
cmp
jmp
or
mov
add
jmp
xor
xlat
inc
out
jb
pop
jp
fldl
cmp
les
adc
les
addr16
fwait
inc
es
repz
jle
mov
stos
lcall
int3
in
in
shlb
pusha
out
pop
mov
lods
aas
pop
daa
fdivs
lea
push
jmp
aas
cmp
enter
stos
push
xchg
push
mov
pop
call
lock
jns
sub
add
ljmp
or
sub
jnp
cmpsb
cmp
nop
push
test
psrld
sub
insb
into
fstl
sti
xchg
xor
cltd
pop
ret
ds
mov
lods
movsb
dec
ds
repz
xchg
cmp
mov
push
test
fcmovnu
call
mov
inc
lret
pusha
je
daa
lods
mov
cmp
mov
fisttps
rorl
repz
inc
pop
jae
jl
int
mov
and
lahf
push
cmp
jnp
call
incl
fnsave
jmp
or
add
repnz
fwait
cmp
mov
lcall
out
imul
mov
xchg
adc
lahf
inc
bound
fnstcw
pop
cmp
ljmp
subl
cli
mov
sahf
or
in
pusha
cmpsl
push
stc
loope
shr
sahf
call
push
call
pop
sbb
in
test
pop
dec
push
push
shl
sub
stos
fsts
sti
mov
cld
mov
jmp
adc
in
jmp
in
jno
ret
fcmove
add
pop
cld
pushl
int3
push
fadds
sbb
mov
loop
inc
jno
xor
ja
pushl
les
mov
ja
sbb
ret
sbb
pusha
adc
jmp
mov
loope
xchg
dec
clc
and
pop
push
stos
cmp
sub
jmp
cmpsl
xchg
pop
in
arpl
add
ret
mov
xchg
icebp
dec
in
std
lock
lcall
ret
das
ss
add
enter
loope
add
fidivs
cmc
xor
int
xchg
pushl
imul
add
jge
and
int
loope
pop
movsb
mov
leave
lcall
mov
xor
addb
data16
test
pop
sub
gs
pushf
dec
inc
imul
bound
cli
jmp
imul
push
bound
cmpsl
int3
pusha
gs
hlt
ljmp
mov
fs
mov
les
adc
xchg
flds
outsl
bound
leave
jge
push
fisttpll
inc
and
add
mov
push
pop
or
sarb
pop
sti
pop
jae
dec
imul
push
adc
jmp
movsl
inc
repz
push
outsb
mov
pop
inc
cmp
cmp
repnz
hlt
hlt
fildll
mov
inc
out
xor
add
rclb
mov
decl
jbe
and
jmp
std
mov
pop
and
xor
cmpl
incl
icebp
loop
inc
jge
adc
shlb
jno
mov
add
jns
outsb
lods
jb
add
and
adc
int3
xor
push
pushl
pop
arpl
cmp
mov
imul
sub
xchg
push
jbe
stc
mov
leave
sub
incl
outsl
addr16
xchg
pop
sub
test
enter
xchg
outsl
test
lods
jg
aaa
mov
or
mov
sub
dec
push
mov
jmp
inc
ja
ljmp
cmp
xchg
adc
sub
mov
sub
sbb
adc
decl
movsb
cs
sbb
jne
leave
dec
sahf
inc
add
adc
jne
mov
filds
or
cmpsb
mov
bound
mov
dec
cmpsb
psubusw
xor
aaa
mov
js
hlt
xor
lods
xor
mov
pushl
pop
jle
push
cmp
jns
pop
je
popa
aas
jb
call
ljmp
cmp
cld
inc
out
addb
mov
scas
mov
imul
adc
into
lock
lods
sub
and
sub
xor
xor
hlt
push
jp
mov
xchg
push
cld
out
cmpsl
fnsetpm(287
inc
shrb
sbb
fdivrp
cltd
jp,pn
bound
popa
fcomip
lcall
pop
in
into
out
pop
cwtl
jnp
jp
cwtl
mov
lds
clc
push
repnz
movsb
ljmp
mov
cld
mov
jbe
fcomi
aam
add
notl
jno
mov
sub
pushl
jbe
fs
pop
arpl
xor
cmp
jge
insl
cltd
xchg
sub
jg
sbb
xchg
push
sub
inc
scas
sbb
arpl
xchg
xchg
push
daa
test
mov
fs
dec
das
decl
dec
xor
sub
xchg
xchg
pop
mov
add
jbe
xor
enter
jno
mov
fisttpl
xor
jb
int3
shlb
cmpsb
jmp
imul
xchg
shrb
call
inc
push
scas
dec
pop
hlt
and
dec
ss
movsb
pop
ljmp
dec
xchg
and
incl
ficoml
xor
repnz
xor
add
stos
cmp
fcomip
call
pop
fildl
shrb
lret
mov
push
andl
incl
pusha
stos
xchg
popa
test
add
shlb
xchg
and
movsl
cli
xchg
jnp
shrl
out
les
inc
dec
jo
jle
ror
add
vphadddq
repnz
jmp
imull
cmp
std
mov
mov
mov
movsb
repnz
aad
lcall
scas
rcll
mov
push
insb
fdivrl
imul
adc
stos
pop
mov
mov
jmp
dec
ret
xor
sub
ret
loop
fdiv
jb
out
movsb
mov
mov
int
pop
aam
decl
xchg
or
xor
loope
aam
adc
pop
sub
inc
je
lcall
mul
fwait
cli
mov
cmp
mov
bound
cmp
jmp
in
and
test
loopne
decl
or
std
lods
dec
dec
add
xchg
and
push
fbld
lcall
cli
jg
mov
or
rcrl
add
push
into
adc
dec
negl
pushf
fwait
mov
or
incl
fwait
in
sbb
jmp
mov
mov
int3
icebp
adc
sahf
call
sub
ljmp
cwtl
push
jno
fidivs
out
inc
adc
jns
cmp
rcr
call
fwait
movsb
sub
je
repnz
lods
fidivs
sbb
adc
jmp
outsb
hlt
callw
adc
test
das
les
mov
stc
add
mov
aaa
pusha
xchg
lock
mov
pop
vmaskmovdqu
xchg
addr16
mov
jne
addr16
enter
loop
jmp
adcb
cli
ret
mov
leave
fisubl
test
out
stc
sbb
ljmp
inc
or
pop
adcb
xchg
push
shll
mov
test
cmp
and
dec
ret
addl
outsb
test
iret
call
push
dec
das
out
adc
icebp
loop
sbb
jmp
cmpsl
shrb
mov
sbb
mov
pop
mov
jl
sbb
dec
mov
fstpl
or
mov
js
sub
clc
mov
xchg
sub
out
sahf
aam
mov
ljmp
cmp
or
sub
dec
mov
sub
ud0
jbe
inc
dec
mov
and
fadd
cwtl
hlt
lret
sbb
cmpsl
dec
mov
js
jns
iret
mov
dec
and
push
xchg
adc
pop
jb
mov
push
jge
sub
test
imul
adc
rcr
xor
mov
sub
dec
inc
lcall
sub
ret
mov
jbe
jge
xchg
sar
aad
fbld
xor
xor
enter
sbb
scas
leave
dec
sub
mov
lcall
scas
cltd
adc
xor
cld
testb
sub
and
push
jg
lahf
imul
test
push
xchg
stos
mov
xor
and
cmpsl
mov
mov
add
jbe
pop
sbb
cmp
fcoms
xlat
sbb
nop
sbb
lea
popa
lods
push
cmp
in
std
in
call
add
sbb
ds
aad
cltd
sbb
rcrb
adc
inc
push
test
loopne
test
cli
jp
push
stos
rorl
int
add
lret
inc
cmp
mov
in
sbb
mov
lahf
cmp
push
icebp
mov
fistpl
pop
xor
pop
lcall
insl
mov
sbb
inc
mov
iret
mov
call
xor
pop
dec
out
ljmp
negb
jae
inc
add
fdiv
push
repz
push
out
mov
lahf
test
xchg
ljmp
mov
sbb
sub
arpl
cwtl
lock
or
call
pop
ret
jmp
mov
inc
mov
loopne
xchg
shl
sbb
inc
sbb
sub
add
ljmp
in
aad
xadd
les
or
sbb
pop
mov
or
inc
push
enter
and
xlat
dec
inc
add
add
xlat
add
inc
dec
loopne,pn
push
movsl
cs
adc
pop
fwait
out
mov
fdivs
jle
daa
movsb
push
xor
push
std
call
les
mov
gs
mov
or
cwtl
lcall
and
aaa
and
iret
fistpll
outsb
jle
nop
add
push
jbe
mov
scas
xchg
incl
icebp
xchg
iret
sub
mov
mov
dec
inc
cs
loop
pop
jae
mov
cwtl
shlb
dec
and
mov
jmp
mov
or
call
movsb
ljmp
xor
arpl
mov
orb
jns
dec
lock
outsl
cli
cmc
sub
arpl
mov
pop
lahf
pshufw
cmp
mov
xchg
ret
cmp
cmp
cmp
shll
int
push
mov
xor
and
jmp
call
cmp
mov
sub
pop
mov
in
mov
sub
cmp
and
lcall
push
jge
pmulhuw
cmp
push
mov
es
jnp
fsts
adc
mov
decl
mov
or
dec
jb
stos
aad
stc
sub
or
call
mov
int3
leave
sub
jge
xor
pop
outsl
add
pop
and
jmp
jp
ss
push
pop
pop
pop
add
fsubr
pop
aad
out
je
cmc
in
inc
sbb
lcall
push
fsubrs
cmp
ret
jb
insb
sbb
rcrb
je
push
pop
or
ljmp
xor
sub
mulb
outsb
scas
outsb
test
mov
inc
and
fisttps
in
psllq
icebp
fwait
mov
xor
cld
movsb
cmc
ljmp
stos
push
xor
push
sbb
loope
inc
jnp
push
mov
fcos
incl
pop
fs
mov
dec
adc
ds
mov
xlat
add
push
cld
std
fstps
call
fcoml
aas
sub
jg
jle
xchg
test
loop
insb
and
xor
popf
pop
fidivrl
dec
xchg
nop
mov
clc
inc
dec
cmp
psrlw
jge
sbb
out
cli
lock
lock
xor
or
sarb
sbb
and
jmp
fbld
mov
jne
icebp
or
jle
addr16
popf
mov
and
pop
hlt
call
sbb
das
fstl
xor
adc
add
push
cmp
gs
and
dec
dec
pop
adc
inc
add
mov
inc
daa
or
movsb
enter
test
xchg
and
mov
xor
push
sbb
lcall
xchg
bound
leave
sbb
js
or
divl
xchg
js
mov
fbstp
jmp
mov
mov
mov
loop
sub
in
pop
dec
jmp
adc
xchg
bound
or
repnz
add
push
pushl
mov
mov
sbb
repz
repz
mov
cmp
jno
cmpsb
ljmp
mov
stc
test
daa
sub
push
sub
hlt
pop
fistps
push
cmp
adc
sub
add
push
popa
aad
fmuls
inc
xchg
incl
push
inc
sti
fs
or
imul
das
add
pop
xchg
ret
adc
jns
es
lcall
inc
xchg
ds
enter
fstps
cmpsb
push
cmp
sbb
insb
js
xor
and
dec
cmp
cli
xor
fwait
pop
ret
jmp
icebp
xor
ficompl
cs
pushf
fstpl
pop
orb
mov
ret
pop
orb
jmp
xor
push
add
push
sarl
out
cmp
mov
sahf
stos
dec
sub
gs
push
das
jo
sar
pushl
popa
add
pop
out
call
inc
or
push
push
xor
sub
shll
push
adc
incl
mov
ret
jb
pop
aad
xchg
addl
pop
ds
mov
dec
mov
xchg
je
imulb
inc
sub
mov
andb
pushf
je
pop
cmc
incl
cmp
insb
xlat
jp
scas
jno
sti
push
dec
lret
and
out
xlat
jg
or
gs
push
lahf
cmpb
leave
pushf
xchg
nop
mov
xor
aam
ror
pop
mov
subl
loop
mov
add
pop
jp
gs
inc
jg
popa
pop
push
and
pop
iret
mov
cmp
jge
enter
enter
push
inc
icebp
cltd
jmp
xchg
aaa
inc
sbb
imul
sti
movsbl
stc
rcrb
adc
mov
nop
stc
ds
movl
leave
push
cmp
xorl
push
cmpsb
dec
je
mov
lock
push
and
jge
mov
das
in
call
loop
inc
sbb
xor
or
fwait
xchg
or
mov
sar
mov
sub
inc
adc
dec
lahf
xchg
mov
xchg
inc
push
adc
imul
jge
inc
mov
add
orl
cmp
sub
mov
in
scas
ficoms
mov
lock
push
enter
cli
pusha
outsl
push
or
cltd
xchg
adc
dec
rcl
call
loopne
xchg
test
cmp
ret
inc
xor
mov
sub
xorb
fisttps
jecxz
out
cli
subl
andl
pop
mov
inc
or
mov
ljmp
xchg
imul
cli
mov
mov
jmp
stos
je
or
test
hlt
sahf
nop
stos
xchg
call
std
mov
incl
mov
or
lcall
mov
adc
jns
cmp
out
loop
jno
shl
loope
inc
mov
enter
loop
jno
lods
push
inc
jns
shlb
mov
push
sbb
int
adc
xor
add
ljmp
rorl
cmp
lds
jb
decl
insb
enter
mov
outsb
jnp
xchg
adc
in
rolb
incl
hlt
js
ficomps
testl
push
mov
jg
fwait
lahf
push
mov
out
sbb
shlb
push
jp
fs
in
add
hlt
mov
incl
insl
jns
cmpsl
cld
popa
cmpsb
pop
rcrb
arpl
cltd
pop
into
mov
repnz
in
and
popf
mov
shll
lock
inc
xchg
pop
adc
sbb
call
lret
test
scas
loope
xchg
insb
jp
repz
loop
popf
decl
int
aad
lds
cld
fs
push
scas
push
or
sbb
jnp
sbb
jae
loope
lcall
insb
xchg
xlat
sbb
jno
and
push
cmc
in
outsl
enter
and
sbbb
mov
or
aas
push
ret
out
xor
pushl
out
pop
sub
fcom
xor
adc
stos
xchg
inc
cli
and
xchg
sahf
les
pop
clc
jno
pushl
cld
js
filds
inc
xchg
int3
rcl
pop
xchg
imulb
out
into
xor
xor
jnp
dec
sbbl
dec
mov
add
sub
mov
xchg
ficoml
addb
das
and
sub
cmp
lds
fbstp
sub
dec
jb
add
out
ljmp
adc
cmpsb
and
stos
xchg
jge
xchg
pushl
rcr
xlat
push
sbb
fcompl
adcb
ja
outsb
cld
pop
inc
push
test
jecxz
ljmp
sub
dec
decb
lods
pop
mov
add
in
pop
sub
leave
das
mov
push
test
jmp
dec
and
insb
jle
int
in
ljmp
lcall
pop
mov
xchg
test
push
decl
in
icebp
pusha
jo
lahf
mov
jp
jecxz
sbb
cmp
inc
aas
idivb
imul
daa
fdivrp
incl
inc
jnp
test
js
pop
xchg
pushf
mov
mov
sti
lahf
movsb
loopne
pop
add
incl
push
mov
jo
jge
insl
and
ret
cmp
call
push
pop
xchg
inc
stos
outsl
notl
fnstcw
pop
cmp
sbb
push
incl
inc
mov
pop
in
push
sbbb
je
jg
mov
into
or
xchg
push
test
jbe
mov
shl
sub
in
pop
adc
pop
dec
add
push
fcmovnu
pop
ljmp
les
mov
xchg
lds
or
iret
push
sahf
sbb
adc
lods
fdivr
dec
test
test
movsl
mov
mov
notl
cmpsb
mov
jg
outsl
jp
inc
push
leave
mov
movsb
ret
lcall
in
lds
imul
xchg
sar
dec
sbb
adc
jbe
adc
sub
cmp
lcall
adc
inc
frstor
mov
mov
decl
dec
aam
push
stc
jo
mov
notb
push
incl
and
dec
int
lcall
popa
cmc
xor
dec
daa
sub
mov
std
cltd
insb
jmp
jp
push
fimuls
mov
lds
mov
inc
mov
lea
adc
lods
aad
push
aaa
xchg
xorb
rorb
adc
and
inc
sbb
push
jg
mov
dec
icebp
cmp
es
lods
add
ss
inc
aam
out
push
loopne
into
mov
jns
jnp
cld
and
mov
xchg
scas
and
pop
hlt
sbb
rolb
and
incl
arpl
adc
negb
and
cmp
xchg
inc
cmp
fnstcw
pushl
cmp
xchg
inc
pop
mov
fistpl
pop
pop
je
jecxz
dec
jecxz,pt
out
adc
add
int3
insb
es
mov
sbb
add
mov
jecxz
lea
imul
mov
push
sub
lea
jmp
mov
leave
mov
jg
add
mov
jge
push
xor
repz
call
cmpsb
cmp
inc
in
push
jnp
dec
std
loope
mov
jp
mov
jb
inc
out
mov
gs
sbb
rorb
dec
out
pop
comiss
mov
loopne
fiaddl
jg
fwait
cwtl
dec
shrl
mov
jg
ljmp
ljmp
loop
fildl
dec
stos
add
cmp
jge
out
test
call
mov
repz
and
stc
test
sub
sub
roll
mov
fcmovb
jo
imul
addr16
ljmp
jb
jno
std
push
out
pop
mov
mov
aad
cmp
iret
addr16
iret
test
pushl
cld
call
inc
mov
or
leave
rcl
sbb
cmp
hlt
test
pop
jbe
cmp
jg
push
sbb
test
shll
ret
icebp
jb
jne
ja
pusha
fstps
lret
aad
shlb
mov
xchg
ret
dec
mov
mov
in
fs
push
sahf
xorl
decl
hlt
pusha
test
and
sahf
into
mov
out
std
mov
mov
scas
adc
hlt
lcall
mov
testb
es
out
aaa
test
scas
fwait
clc
daa
jmp
mov
lock
push
fs
xchg
test
filds
xor
mov
add
add
jbe
cmp
jo
jg
or
fcomip
incb
sbb
cmp
xor
mov
mov
sti
shl
ja
in
mov
ljmp
imul
scas
push
xchg
mov
sbb
push
dec
inc
mov
sar
jmp
sbb
faddl
dec
jbe
insb
push
xchg
int
shlb
daa
lcall
pushl
jg
stos
outsl
mov
dec
gs
loop
xor
mov
xor
push
add
push
jae
loope
decl
push
negb
out
daa
subl
sub
push
cs
ljmp
ljmp
xchg
lds
iret
loop
or
movsb
sahf
insl
push
loope
xor
data16
dec
xlat
dec
pop
aad
shrl
jmp
dec
and
icebp
rcrl
sbb
icebp
pand
jp
mov
xlat
rolb
in
cmp
pushl
mov
pop
jle
stos
stc
lcall
lret
xchg
lcall
xor
mov
inc
ljmp
mov
xor
cmp
sti
call
push
push
push
cmp
xchg
cli
mov
int3
and
ds
cltd
cmpsl
andb
fbstp
xchg
notl
ss
jmp
xor
shlb
jg
add
jno
sub
xchg
dec
inc
mov
cmc
decl
xchg
scas
push
inc
mov
push
jmp
out
xchg
fidivrl
jno
mov
mov
popf
stos
push
push
push
incl
sub
decb
scas
xor
and
adc
jmp
xor
mov
mov
call
xchg
mov
dec
xor
cmp
mov
dec
sti
sub
jb
les
mov
das
mov
std
popa
mov
loopne
fs
clc
in
mov
repz
or
xor
or
mov
aam
popa
outsl
add
or
jp
mov
xor
js
sub
fiadds
ss
or
dec
jo
push
idivl
lahf
mov
fisubl
call
mov
dec
mov
mov
inc
mov
imul
ljmp
fstpt
inc
xchg
jl
jg
loop
mov
shll
cmpsl
mov
repz
scas
mov
insb
sahf
mov
shlb
push
incl
xchg
mov
aas
stos
jl
jno
pushf
aam
inc
mov
pop
add
incl
mov
dec
aad
jl
push
shrb
mov
xlat
je
or
dec
shrl
pop
jnp
add
sbb
mov
movsl
mov
sbb
psubusw
mov
out
push
sub
mov
inc
insb
pop
dec
loop
cmp
fdivl
pop
test
ljmp
add
ret
lret
mov
inc
sbb
cmc
fnstsw
mov
cmp
pusha
movsl
cmp
jns
lock
mov
cmp
jno
popa
xor
shrb
adc
or
scas
mov
dec
adc
add
mov
fmulp
sbb
and
dec
ret
and
xchg
orb
jmp
arpl
mov
test
idivb
movsl
jno
xor
js
aaa
std
and
push
inc
inc
mov
mov
xlat
sbb
jmp
gs
add
adc
mov
cmp
xchg
or
xchg
repz
xchg
mov
jp
out
cmp
filds
movsb
loopne
push
imul
mov
movsl
jo
sbb
les
repz
ret
xlat
dec
repnz
dec
pop
aaa
leave
and
ja
sub
mov
or
pushl
sub
or
mov
pushf
leave
outsb
daa
ret
leave
cwtl
push
sbb
ljmp
cli
cmp
cli
mov
pop
in
int
inc
sbb
push
lcall
mov
enter
mov
out
ljmp
or
test
or
pop
fs
cmp
mov
sti
cmpsb
or
jnp
int
or
incl
fisttpl
out
pop
icebp
lods
icebp
jbe
mov
adc
out
pop
dec
or
ljmp
and
push
sbb
gs
and
xchg
shlb
inc
pop
test
imul
decl
popf
or
in
or
sub
and
inc
nop
dec
xor
lcall
gs
pop
scas
addr16
or
add
andl
scas
pop
stos
inc
xchg
insb
pop
pop
add
mov
into
dec
in
xchg
int
cmpsb
mov
decl
shlb
test
mov
outsl
xlat
jecxz
int
xchg
push
fdivrs
and
dec
lahf
cmp
ljmp
ja
fisubs
jnp
sub
aas
mov
dec
inc
sbb
pop
xlat
pop
pop
jo
popf
call
mov
insl
cmp
push
divl
sahf
adc
push
adc
ljmp
enter
mov
gs
in
dec
movsl
setne
push
rorb
call
scas
nop
bound
daa
jge
mov
std
test
stos
fldenv
jmp
call
shll
iret
push
iret
xchg
sbb
fistpll
inc
repz
jmp
or
cwtl
cld
hlt
cltd
fidivs
sbb
and
xchg
lahf
mov
adc
xor
xor
or
push
in
shlb
ljmp
dec
popf
sahf
sbb
rclb
inc
push
adc
sbb
or
jg
shlb
dec
loopne
fidivs
and
jo
xchg
inc
fwait
xchg
lods
xchg
xor
push
test
lcall
jge
lret
jb
jge
call
cltd
int3
add
xchg
sbb
sti
push
hlt
add
mov
push
jl
sti
sbbl
mov
add
dec
fcompl
in
and
cmp
lcall
push
ljmp
dec
push
jle
jmp
sti
mov
inc
int
out
lahf
imulb
pop
add
lcall
les
cmp
mov
les
dec
pop
cmpsl
ficompl
movsl
std
bnd
mov
lcall
sti
cli
stos
cwtl
mov
mov
and
fldenv
repnz
add
lcall
jmp
sbb
mov
mov
pop
inc
mov
decl
incb
scas
cltd
inc
mov
gs
inc
call
call
adc
enter
ljmp
pusha
in
ds
jge
mov
xor
mov
into
sub
popf
call
dec
subl
or
test
pop
les
std
pop
neg
incl
mov
push
cwtl
jle
mov
dec
fldl
dec
add
bound
neg
cld
shrl
stos
call
cltd
jg
cmc
cltd
pop
mov
sarl
mov
mov
out
aad
ljmp
fldt
movsb
xorl
call
push
lahf
push
mov
or
dec
neg
rcrl
pop
adc
cmp
lcall
cmp
stos
mov
xchg
das
cwtl
scas
repz
cli
roll
shlb
lock
push
mov
faddl
fstpt
mov
add
gs
jge
out
ja
shl
out
xchg
mov
push
pushl
mov
xchg
cltd
xor
into
jl
lcall
cmp
decl
enter
dec
lods
xor
jbe
jns
arpl
adc
mov
pop
lret
daa
jmp
cmp
and
imul
sbb
loopne
mov
and
xchg
leave
aad
call
or
jl
movsl
cmp
cwtl
insl
ror
in
enter
pop
hlt
movsl
dec
arpl
fwait
jg
lcall
mov
mov
loope
or
out
lock
dec
sbb
dec
cmp
out
and
adc
adc
shll
fsubl
loop
adc
ja
dec
xlat
mov
push
aam
inc
gs
pop
ljmp
lods
cmpb
mov
inc
mov
inc
mov
jne
cld
fucomp
lcall
decl
sbb
pusha
fwait
addr16
bound
fiaddl
inc
lcall
push
lcall
icebp
movsb
dec
xchg
cmpsl
pop
xchg
sti
call
daa
les
push
jnp
jno
test
lahf
jg
cld
call
movsb
cwtl
pop
out
fwait
push
push
lret
or
stc
icebp
jo
sbb
push
sbb
mov
imul
add
cmp
mov
sar
jns
or
pop
outsb
shll
pushl
enter
aaa
out
idivb
jno
xchg
and
int
rcrl
dec
xor
pushf
add
jge
jecxz
cli
or
push
mov
ljmp
pushl
out
xchg
ja
lahf
sub
push
jae
mov
jp
xlat
aas
fsubrl
decl
adc
lret
inc
jne
push
dec
aam
add
les
mov
mov
and
inc
call
adc
fimull
test
bound
mov
clc
mov
call
adc
ds
jp
sti
adc
mov
popa
fsts
outsb
pop
pop
incl
inc
jnp
stos
xorl
subb
test
mov
sub
std
mov
push
sbb
outsb
pop
push
mov
lcall
sbb
notb
mov
cmc
cmpsb
dec
shlb
inc
dec
mov
incl
in
test
lods
fcmovnbe
js
jmp
mov
mov
lcall
stos
xchg
dec
cltd
mov
cmp
js
nop
mov
cld
loope
mov
arpl
les
mov
ret
pushl
ss
dec
shlb
nop
inc
mov
movsb
fucomp
pop
aaa
sarl
mov
mov
insl
fcomps
and
mov
incb
roll
mov
clc
orb
xchg
movsl
mov
lods
arpl
or
mov
hlt
fwait
rcrb
push
dec
fs
xor
push
test
fisttps
shlb
push
mov
or
leave
push
ret
push
mov
lret
out
imul
cli
test
xor
std
ljmp
shll
fcmovu
xchg
add
out
adc
mov
out
in
aad
pop
sbb
std
mov
push
fcomip
dec
in
stc
jecxz
call
cmp
xor
sbb
or
inc
loop
test
in
xor
cwtl
int3
sbb
incl
push
pop
adc
jecxz
push
jb
cwtl
sub
sbb
sbb
mov
mov
dec
cmpsl
mov
mov
and
loopne
lret
ss
jp
pop
cmp
test
sarl
sub
hlt
icebp
into
stos
out
imull
pop
movsl
jg
pop
rol
sub
mov
pop
xor
sbb
cwtl
xchg
cld
pop
fs
sbb
push
imul
scas
mov
call
popf
mov
mov
insb
hlt
fsubs
inc
sbb
pop
add
push
mov
ljmp
arpl
lret
scas
push
adc
and
fildl
int3
dec
fcomip
xor
sub
jns
dec
pop
popf
push
leave
jmp
loop
cmp
sub
push
in
aas
jge
adc
pop
pop
lods
cwtl
nop
adc
stos
sub
nop
ljmp
jae
call
xor
loop
jae
lea
add
pushf
xor
stos
pushf
pop
stos
sbb
fsubl
sbb
ljmp
clc
xchg
shl
lock
fimull
xchg
adc
bound
xchg
mov
int3
dec
mov
dec
pop
mov
jecxz
pop
cmp
mov
inc
aam
push
add
jmp
fnstcw
shl
incl
cld
pushl
pop
test
out
sub
fdivs
push
cmp
incl
jp
add
andl
std
out
scas
and
or
push
cli
loopne
sub
jo
out
leave
loop
add
fwait
cmp
push
enter
rol
pop
adc
lcall
sub
and
mov
jno
or
aad
inc
sbb
aaa
add
ljmp
cmp
jae
sub
push
xor
dec
lahf
adc
mov
call
push
pop
addl
stc
ftst
xchg
pop
jae
xchg
call
sub
frstor
ret
inc
ljmp
decb
jns
xor
lods
int3
and
fcmovbe
es
out
push
mov
dec
xchg
int3
jecxz
cmp
lcall
lahf
mov
ficoml
bound
cmp
cmp
popl
sub
push
decl
lret
jp
push
pop
fwait
mov
sub
cmp
pushf
fwait
jmp
lea
xchg
xchg
mov
daa
mov
or
ror
jl
leave
mov
lcall
and
cmp
and
scas
inc
negb
js
mov
aas
push
lods
decl
pop
inc
mov
rorb
ljmp
adc
adc
out
pop
decl
fidivrl
in
test
cmp
mov
repz
add
add
fisttpl
cmp
shrb
sub
clc
inc
insl
jmp
outsl
pop
movsl
cmp
cmp
mov
jo
les
popa
std
filds
clc
jo
sbb
fstpt
sar
call
arpl
dec
or
enter
imul
insb
pop
sarb
sahf
stos
adc
cwtl
xchg
xlat
lock
incl
ficoml
out
mov
add
pop
pop
sbb
shll
push
fsubrs
decl
fs
sbb
pop
adc
test
cmp
xor
mov
inc
mov
sbb
jae
int3
pusha
lods
leave
adc
pop
and
fbstp
in
popa
pop
add
js
inc
es
xchg
sbb
cwtl
out
add
cmc
jnp
add
cmp
mov
cltd
jmp
rolb
mov
ljmp
test
push
jmp
add
cmp
decl
sub
ffreep
mov
adc
cmpsl
dec
fsubl
int3
xor
pushl
cmpsl
pop
push
loope
mov
or
mov
test
mov
and
add
cmp
push
call
pusha
pop
xor
insl
sub
mov
cmp
fiadds
daa
adc
dec
mov
mov
dec
mov
cltd
xlat
fnstsw
sub
leave
push
push
es
cmp
adc
jg
jge
inc
stos
in
push
sbb
lret
divb
test
gs
movsl
or
lods
lock
lcall
pop
imul
rol
pop
or
faddl
insb
shr
cmp
decl
sbb
fldt
jne
jb
mov
popf
xchg
mov
jg
xor
std
std
lea
cs
jb
fcom
sahf
mov
fwait
pop
jb
sbb
inc
clc
pop
ljmp
inc
test
mov
fs
sub
dec
test
mov
lcall
fdiv
jb
pop
push
dec
shlb
sarl
nop
lcall
pushl
stos
iret
in
dec
test
js
lahf
cli
dec
leave
cmp
adc
test
fdivrs
lods
rorl
push
sbb
inc
xchg
fwait
cwtl
out
iret
mov
sbb
lock
lcall
xchg
clc
imul
cmp
lods
fadd
jmp
fmul
pop
pop
xor
push
stc
pop
call
lock
push
xor
movsl
fucomip
jecxz
cltd
loope
push
dec
sbb
pop
and
mov
icebp
mov
add
outsb
leave
lret
xchg
pop
push
cmp
fdivrs
mov
push
std
decl
xchg
mov
jp
jmp
arpl
int
mov
out
imul
lahf
aad
outsl
push
mov
jle
cld
push
mov
jl
shrl
push
dec
cmp
inc
sbb
jo
jmp
add
pop
mov
les
lret
ljmp
mov
cmp
popf
fwait
stos
mov
mov
cli
inc
fmuls
sub
int3
and
jns
cmp
fcomps
out
and
mov
test
mov
or
aam
repnz
incl
xchg
lods
psubw
das
outsl
add
jle
xchg
and
mov
mov
loopne
das
cmp
insb
insb
js
pushf
add
pop
mov
jg
test
pop
popf
jb
or
sub
xorl
push
xchg
lock
jmp
mov
out
mov
xor
divl
hlt
aas
mov
repz
mov
inc
mov
pop
enter
mov
dec
or
mov
push
mov
stos
xchg
inc
ljmp
lods
jns
sbb
xchg
ss
insb
xchg
lcall
push
add
push
in
lahf
das
sbb
add
mov
inc
jae
jle
insb
dec
aaa
sbb
lods
inc
jg
xor
pop
push
fstps
into
and
mov
or
pop
movsl
mov
or
aad
inc
incb
inc
or
icebp
xorb
jmp
aaa
nop
stos
shlb
inc
and
xlat
mov
or
mov
push
adc
js
or
sub
stc
js
jg
mov
dec
pop
mov
cli
cmpsb
popf
loop
jle
mov
xor
xchg
das
out
xchg
movsl
push
lret
fidivl
ja
mov
outsl
cmp
jge
call
mov
lock
inc
xchg
pop
dec
jne
lock
xchg
sbb
mov
xor
int3
mov
push
add
jne
call
out
dec
mov
addr16
xchg
insl
in
stc
dec
sub
test
daa
cmc
lods
scas
aas
call
mov
call
sub
test
push
sahf
and
data16
add
scas
fcomip
ljmp
mov
aaa
cmp
pop
jp
sub
cmpsb
mov
xor
mov
gs
mov
xchg
or
out
xchg
stos
jg
decl
sbb
pop
mov
icebp
out
mov
pusha
inc
push
pop
mov
fisttps
jo
scas
cmp
js
pop
imul
mov
jg
xchg
xchg
cmpsl
stc
lds
loop
pop
icebp
clc
xchg
lods
loope
jp
insl
fnsave
xor
dec
mov
push
xchg
lcall
sbb
xchg
or
or
icebp
mull
adc
cmp
cltd
out
push
cli
call
rcrl
inc
dec
or
and
mov
and
xchg
test
sub
jecxz
hlt
pushl
test
mov
push
inc
cmpsl
xor
push
mov
imul
xchg
sti
inc
add
clc
incl
dec
mov
or
das
add
mov
push
gs
inc
jl
incl
int3
mov
mov
adc
mov
pushl
les
mov
faddl
jmp
xor
daa
leave
insl
in
push
sbb
rcl
mov
nop
repz
jle
fsubl
jae
pop
lcall
popa
scas
int3
scas
adc
dec
test
push
mov
shl
cmpsb
dec
xor
sbb
push
xchg
scas
movsb
addr16
xor
pusha
pop
fwait
jns
in
ss
ljmp
cmc
mulb
or
dec
push
bound
pop
shlb
repnz
in
lock
mov
test
mov
and
shl
lods
push
mov
cld
sbb
ljmp
cmove
arpl
mov
test
mov
mov
cli
fisttpll
movsl
sbb
add
jnp
xchg
sub
pushl
dec
ficompl
aad
mov
mov
xor
xchg
sbb
jns
lcall
lods
adc
add
adc
fs
sbb
jnp
repz
arpl
cmpsl
add
xchg
pop
mov
push
sub
sbb
xchg
lcall
mov
mov
mov
out
sub
ljmp
adc
and
push
cmp
xor
call
pushf
mov
int3
jno
repz
mov
stc
cs
fwait
inc
movsb
jl
jl
addr16
push
jecxz
test
fbstp
stc
mov
test
mov
or
sbb
jecxz
push
add
jmp
call
cmpb
sub
into
cmp
pop
fs
add
mov
nop
pop
in
lcall
ret
shll
inc
push
mov
pop
stos
mov
in
pushf
xchg
movsl
subl
sbb
add
pop
outsl
jnp
lock
pop
imul
jmp
xchg
inc
fwait
dec
mov
cltd
je
sahf
fnsave
ljmp
lahf
into
mov
in
push
cmp
shrl
xor
push
inc
js
mov
rcl
mov
adc
jg
repnz
xor
or
pushf
jnp
test
mov
aaa
cs
inc
adc
fnstcw
ss
add
xchg
mov
xor
and
in
cmp
fwait
sbb
clc
aam
mov
ljmp
popa
call
cmc
mov
xchg
mov
sbb
xchg
ljmp
sbb
xchg
ds
ljmp
lret
call
hlt
popa
inc
icebp
cmp
jl
mov
mov
push
out
fstl
push
jecxz
out
clc
aad
dec
bound
mov
stc
int
stc
dec
sub
jo
in
cmpl
push
inc
jmp
fildl
pusha
fdivr
mov
mov
js
data16
pop
or
mov
dec
jmp
dec
in
jecxz
loope
lods
out
jge
cmpsb
les
imul
lahf
loope
mov
mov
test
nop
loopne
add
imul
mov
les
pop
jle
fisubs
enter
call
in
add
cmpsl
lret
xor
lret
movsb
sbb
outsb
repnz
adc
out
notl
decl
mov
das
lcall
lock
add
pop
pop
movsl
push
fs
pushl
mov
sbb
and
call
xchg
push
inc
add
sbb
call
orl
mov
les
repz
mov
pop
mov
adc
cmpsb
cmpsb
decl
cs
les
movsl
jb
popf
dec
lcall
pop
mov
fistpll
fsubs
jle
notl
cmp
ds
or
jg
sub
adc
loope
push
inc
jno
and
mov
jmp
test
mov
jmp
mov
adc
shlb
fistpl
fcompl
and
fdivr
mov
jbe
fidivrl
push
scas
pop
das
movsb
scas
repnz
jmp
push
push
xchg
jb
jne
shrb
and
or
sar
das
mov
xor
xchg
cld
fildll
push
pop
insl
stos
dec
inc
bound
insb
mov
and
lea
push
xchg
mov
aas
enter
lcall
mov
mov
mov
sub
push
add
cmp
std
sbb
ja
inc
cli
mov
or
mov
push
add
add
inc
xchg
push
sub
ljmp
push
push
lds
jbe
fs
outsb
aaa
mov
mov
stos
pop
idivb
jnp,pn
mov
sbb
stos
rcl
or
push
rcll
cmp
or
pusha
or
or
jbe
pop
mov
aad
testb
out
ljmp
rclb
icebp
scas
scas
mov
sbb
xorl
shlb
dec
call
cmp
pop
rcrl
es
cmp
aam
mov
push
jmp
loop
sahf
cmc
lret
stc
add
in
rol
out
cmp
pop
or
jle
dec
daa
call
ja
jmp
mov
mov
cmpsl
pminub
bound
imull
call
ljmp
lds
shrl
inc
ficoms
mov
inc
xor
dec
cld
sahf
aad
adc
testb
decl
call
xchg
dec
fsubp
movsb
push
outsb
add
push
sub
push
cld
push
pusha
mov
movsb
lcall
xor
imul
sub
call
lods
lahf
dec
imul
mov
sub
xchg
mov
and
nop
pop
test
inc
sahf
mov
xchg
movsb
mov
sub
sub
ss
lcall
add
mov
test
in
cmp
fsubrs
sbb
incl
std
mulb
or
mov
lret
inc
push
stos
nop
or
jnp
into
incl
add
dec
jmp
mov
adc
jmp
test
loop
rcll
int3
push
mov
push
scas
lret
icebp
cmp
xor
mov
call
lods
aas
add
mov
mov
or
data16
ljmp
push
inc
ret
iret
add
xchg
mov
push
mov
xor
out
lods
push
rclb
out
dec
cmp
add
lds
push
mov
jo
jns
jo
cmp
outsb
repz
incl
push
xchg
xor
jl
adc
push
xchg
mov
lock
jge
adc
shrb
clc
lcall
sbbb
out
xchg
mov
and
xor
ljmp
sbb
xlat
push
mov
mov
mov
and
ret
cli
pushl
jmp
outsb
js
fs
inc
dec
pop
inc
clc
xor
inc
ja
mov
mov
or
cmpsb
subl
push
jo
clc
xor
fimuls
into
jp
in
pop
inc
pop
fsubrl
jmp
enter
push
je
dec
das
cli
shll
and
sar
pushl
ss
xor
bound
sbb
xchg
ja
cmp
mov
xchg
cltd
outsb
iret
and
out
dec
shr
roll
sub
dec
scas
shlb
clc
mov
int3
add
pop
cmp
and
sbb
out
rorl
mov
push
xor
cmp
push
push
imul
dec
pop
js
lds
push
cmp
inc
cltd
out
xchg
cmp
call
notl
add
sub
push
add
lea
mov
test
xchg
out
cs
in
mov
data16
jmp
out
push
mov
pop
sbb
pop
cmpl
out
ret
loop
lcall
sub
testb
popa
lea
pop
push
mov
hlt
loopne
lods
subb
add
mov
nop
movsb
pushl
cld
push
mov
repz
pushf
jne
sub
popa
mov
add
pushf
fisttpl
mov
imulb
jne
sbb
clc
sbb
dec
leave
cwtl
pop
dec
incl
push
jb
fcomi
xlat
mov
nop
lret
xor
aad
pop
jbe
in
lds
push
ja
call
xchg
adc
lds
adc
shrl
loope
lds
cs
rclb
mov
incl
dec
shlw
je
je
pushl
jb
mov
in
dec
sub
inc
sub
pushl
push
int3
jg
mulb
fs
outsb
call
pop
or
lods
and
fwait
pop
sub
dec
push
jl
mov
aas
pusha
nop
arpl
clc
pusha
push
icebp
outsb
push
xchg
call
fidivrs
add
aad
loope
pop
push
mov
adc
imul
add
sub
jl
aaa
movsb
inc
into
scas
mov
push
jg
out
ja
pop
hlt
cmp
lods
clc
lret
mov
sbbl
dec
xchg
call
jecxz
xchg
scas
mov
adc
xlat
or
ljmp
stos
int
inc
jmp
fisubs
pop
imul
ljmp
pop
or
or
push
sti
jne
mov
pop
jmp
loop
sub
and
loope
xor
mov
outsl
xchg
ja
rcr
fldl
popf
mov
outsb
imul
insl
push
cmc
adc
lcall
lods
add
xor
mov
inc
mov
push
das
sub
xchg
outsl
les
xchg
or
decl
jne
scas
inc
ljmp
divb
rcrl
inc
mov
decl
ret
cs
jbe
subb
mov
mov
xchg
mov
add
aaa
mov
sbb
xchg
sbb
in
push
xchg
rolb
lock
pop
mull
enter
insb
pusha
ljmp
insl
ret
fwait
sarl
stos
jb
test
pushl
pushf
popa
test
repnz
xor
lcall
and
stos
mov
jnp
or
js
cmp
sbb
in
movsl
call
aam
mov
add
or
mov
mov
xchg
daa
outsl
xor
jl
jb
lahf
cmp
aam
incb
inc
adc
or
call
dec
inc
imul
fs
adc
popf
hlt
jne
mov
jg
pop
and
adc
xchg
in
or
mov
dec
lret
test
int3
ds
dec
xchg
mov
lods
xchg
clc
mov
sqrtps
decl
mov
pop
iret
jbe
add
xor
daa
xor
xchg
sub
pop
jecxz,pt
push
xor
cmp
lcall
push
cmc
lret
pop
xor
cltd
jae
scas
iret
pop
push
dec
xchg
jle
inc
push
les
fcmovne
push
movsb
push
jp
mov
lret
add
arpl
jl
and
ljmp
arpl
cmp
int3
push
fchs
push
cmpsl
mov
cmp
jno
dec
call
inc
out
stos
push
movsb
adc
mov
xchg
fsts
add
cwtl
dec
xchg
jns
scas
mov
sti
in
into
cmp
pop
sbb
pop
adc
add
pushf
pop
test
pop
sahf
sar
call
ja
cs
aas
add
adc
add
xor
mov
inc
sub
subb
sar
js
loope
jp
fldcw
mov
ret
ljmp
xchg
jnp
add
and
jne
lret
mov
xchg
jle
mov
fbld
cwtl
sub
rcrb
repnz
sub
inc
lds
fstpt
sub
orb
push
pop
idivl
pushf
xor
fcomip
mov
fisubrs
or
add
sahf
je
dec
daa
mov
xchg
icebp
jmp
leave
mov
mov
cmp
and
cli
lods
out
andb
fs
cmp
pushf
and
sub
or
ljmp
ds
mov
jbe
xor
int
push
mov
mov
push
jp
cs
mov
loopne
fidivl
dec
testl
lods
cmpsl
rorb
inc
repz
imul
push
fwait
mov
jae
jg
ljmp
pop
mov
call
data16
cmp
decb
stc
mov
add
jbe
mov
in
add
sbb
mov
idivl
in
jns
xchg
xor
in
mov
aad
int
pop
shr
add
cmp
adc
sbb
or
add
lcall
popf
inc
int
pushf
out
xchg
adc
cs
leave
push
and
lahf
or
cmp
test
cwtl
jp
mov
or
dec
scas
adc
ja
incl
out
incl
subl
mov
xor
test
pop
xor
sti
adc
mov
fists
mov
sub
dec
fisubrs
xchg
test
sbb
jns
push
lock
sar
call
repnz
pop
mov
jmp
cmp
inc
int3
pusha
sub
ljmp
imul
mov
xchg
xchg
rcl
mov
fisubl
lcall
out
test
in
ret
adc
jne
imul
xor
call
std
sbb
push
mov
xchg
test
lmsw
mov
lahf
mov
adc
repnz
jnp
push
out
scas
cld
pop
push
incb
in
je
sub
xor
pop
dec
int3
pop
jge
dec
jb
adc
jmp
sti
aas
pop
cli
rcrl
push
mov
lock
jmp
add
mov
cltd
dec
or
popf
out
in
notl
inc
inc
pop
cld
adc
pushf
add
pop
ljmp
add
insb
ficomps
mov
mov
shrl
jmp
push
push
daa
xchg
daa
in
mov
js
clc
adc
sub
dec
iret
xchg
cmc
pop
fstpl
inc
stc
lahf
sub
jmp
loopne
sbb
in
push
inc
outsb
cmp
mov
outsl
dec
scas
bound
jo
adc
sbb
sub
add
sub
sbb
aam
add
sarb
insb
out
scas
mov
decl
xor
leave
fidivs
ret
fcmovb
insb
jp
out
sbbb
sub
dec
ret
jmp
cli
jl
ficomps
dec
sub
popf
pop
or
cmp
xchg
iret
or
test
add
cwtl
ljmp
ljmp
xchg
dec
inc
lcall
jns
and
cmp
ja
pop
or
out
xchg
mov
push
inc
or
inc
cmp
mulb
jmp
mov
jb
cmc
mov
mov
stc
pusha
jo
xchg
or
xor
daa
xor
dec
and
jmp
outsb
dec
sub
clc
lret
xchg
out
jns
or
mov
add
aas
scas
je
push
popf
loop
call
fisubl
rorl
push
pop
jbe
out
xor
dec
or
dec
shr
test
inc
jle
pusha
mov
cmc
outsb
das
addr16
mov
jo
daa
or
into
fisubrl
call
int3
jg
push
mov
out
testb
mov
inc
mov
fsubrl
jp
sub
out
fs
clc
cmp
ljmp
outsl
add
xchg
dec
repz
cmp
push
mov
jp
mov
jg
inc
rorl
fistl
pop
sarl
mov
ljmpw
fld
lcall
inc
arpl
mov
aam
or
xchg
dec
lret
rcl
jp
in
sbb
jg
leave
jno
outsl
rclb
hlt
and
sarl
pop
fldl
ss
mov
les
inc
push
sbb
pushf
aas
xor
cmp
jnp
xor
fimull
in
xchg
push
pop
movl
jae
call
std
push
in
out
sbb
push
mov
mov
js
repnz
lcall
rcrl
pop
push
fisubl
fnstcw
lock
xchg
jg
cmpsl
out
push
lcall
lret
jmp
inc
out
jmp
js
jecxz
loop
or
push
fisttps
mov
xchg
mov
jmp
shlb
mov
es
mov
divb
adc
incl
sbb
sub
pop
adc
call
in
sbb
clc
scas
jnp
pop
popf
push
push
adcb
adc
movsb
or
scas
or
jmp
out
push
pop
xor
add
pop
or
addr16
call
loope
aam
pop
xorl
clc
jle
pushf
mov
dec
mov
sub
mov
cmp
and
hlt
sub
decl
add
pop
cmp
pop
imul
mov
adc
fnstsw
inc
mov
jnp
jl
scas
out
jno
clc
sti
hlt
inc
lock
sti
jmp
inc
mov
lcall
xchg
xchg
fs
adc
aaa
inc
lret
stos
mov
and
xor
decl
lock
out
mov
jnp
cmp
addb
dec
sbb
incl
jecxz
pop
lods
movsl
aam
inc
cmp
into
sub
fcoml
add
or
incl
mov
mov
dec
xchg
mov
mov
add
bnd
mov
pushl
call
movsb
jo
clc
mov
in
pushf
scas
stos
mov
add
stos
inc
ficomps
aaa
in
jns
ficoml
jl
push
cmc
sahf
out
mov
sub
scas
cmc
in
jg
lea
das
inc
in
adc
jns
ret
frstor
add
jo
fsubl
mov
pushf
mov
dec
cmp
push
test
pop
add
push
cmpsb
movsl
or
push
sbb
in
xchg
subb
inc
and
mov
ljmp
sahf
int
cmpsl
mov
shll
push
movsb
and
scas
pusha
and
repnz
mov
cmp
inc
idiv
loope
cmp
mov
decl
nop
or
fisubrl
out
outsb
xchg
cs
popf
ss
ds
stc
test
inc
data16
lcall
adc
lds
stos
and
push
pop
shl
mov
popa
cmpsb
das
cmp
decl
in
sbb
hlt
icebp
cltd
xor
push
jb
test
aas
stos
jle
fbstp
ja
in
adc
in
fiadds
jmp
mov
ljmp
jp
push
arpl
pop
jl
mov
mov
inc
or
jnp
mov
sbb
pop
in
mov
mov
sbb
push
mov
ljmp
insb
movsb
lcall
dec
mov
mov
xlat
scas
orb
dec
rdtsc
mov
cli
nop
imul
pop
pop
xchg
inc
and
in
test
cmp
jne
fisubrl
ljmp
lcall
mov
lcall
sbb
jecxz
or
outsl
xchg
std
ljmp
xchg
inc
dec
mov
dec
dec
cwtl
movsl
xor
cmp
cwtl
sub
sar
jmp
scas
xor
mov
sub
pop
xor
inc
and
addr16
xchg
popa
cmp
mov
fsts
insb
push
push
and
aas
mov
pop
stc
adc
mov
scas
dec
sti
xor
or
in
adc
inc
decl
lock
faddp
subb
pop
outsl
push
xchg
sub
cmpsb
xor
pop
lcall
cmpl
pop
test
xchg
push
and
mov
test
mov
loopne
popf
add
decl
add
mov
pushl
aam
jne
and
add
je
mov
mov
xchg
imul
jmp
inc
jg
push
repnz
sbb
mov
aaa
pusha
addr16
mov
call
adc
mov
push
lahf
pop
in
inc
or
nop
add
cmp
mov
dec
jge
adcb
popf
mov
data16
popf
cmp
hlt
or
jmp
mov
xchg
cmpl
push
je
out
add
xchg
mov
jmp
pop
sbb
testb
fcoms
xchg
jecxz
sbb
fs
mov
ret
lahf
out
push
jl
xchg
mov
pop
stc
lock
sbb
xor
ljmp
xor
lahf
jnp
or
stc
subl
out
jmp
push
das
clc
aas
jae
push
inc
gs
popf
jno
jb
dec
sahf
adc
sub
shrl
mov
daa
and
xchg
or
sarb
mov
dec
adc
mov
cmc
jmp
push
pop
lock
dec
loopne
arpl
stos
jl
mov
in
pop
push
lock
dec
iret
mov
imul
dec
sub
gs
ret
xor
xor
incl
mov
scas
mov
lods
adc
or
sti
rol
jmp
into
orb
ss
inc
ficomps
rorl
pop
sbb
push
call
roll
mov
mov
sub
and
icebp
dec
sahf
mull
pushf
xchg
cmp
lcall
dec
dec
inc
movsb
xchg
inc
xor
jg
mov
call
lcall
ljmp
test
inc
adc
cmp
repz
jb
jns
push
aad
cmp
jns
sub
mov
sub
xchg
mov
cmp
add
jmp
pop
fdiv
pop
add
cmp
xchg
fists
mov
sbb
add
ss
cmc
cli
incl
inc
outsl
mov
cmp
xor
push
mov
jne
cmp
cmp
dec
in
push
loope
in
int3
sbb
ja
or
jmp
js
pop
ds
pop
ljmp
ret
push
push
pop
imul
cwtl
adc
fcoms
decl
mov
enter
add
test
loope
rcr
addl
mov
call
pusha
out
jns
add
xor
push
out
cltd
pop
iret
push
adc
xchg
cmp
iret
shl
mov
mov
mov
or
inc
test
incl
or
int3
jo
and
outsl
jp
into
loopne
jno
decl
pop
sub
andb
cmp
inc
mov
fs
mov
push
je
iret
les
incl
cmp
or
jo
sub
push
and
jecxz
sbb
andl
les
aas
test
lahf
inc
loopne
xor
cs
xor
mov
popf
pushf
dec
shlb
xchg
mov
jmp
stos
cmc
add
mov
out
test
in
mov
push
and
ljmp
in
mov
inc
repnz
mov
mov
push
mov
mov
cmp
push
push
jg
add
fists
loop
sahf
clc
cmp
or
scas
outsl
sbb
call
into
mov
sbb
pop
dec
out
pop
jg
lds
or
incl
pop
and
xor
out
jae
inc
in
insb
and
call
or
data16
cmc
and
lcall
decl
or
mov
fbld
ljmp
pusha
ljmp
mov
push
adc
sbb
cld
jmp
xlat
inc
mov
lcall
mov
js
das
inc
les
jecxz
jo
sub
test
xchg
nop
lcall
fs
shlb
add
pushf
out
std
ret
fs
lock
clc
in
fs
jl
sub
fisttps
mov
xlat
das
or
inc
out
xor
dec
loope
bound
add
lcall
movsb
ret
inc
jo
mov
add
or
push
add
out
fisttps
cmovae
outsl
jnp
pushl
outsl
xchg
mov
mov
js
fucomip
aaa
mov
lds
test
push
lcall
jle
sub
outsl
inc
scas
andb
xchg
mov
icebp
dec
mov
cld
xlat
addb
fdivp
incl
inc
inc
lea
mov
xor
mov
mov
inc
lcall
or
and
add
pusha
lods
push
decl
dec
and
test
scas
fnstenv
dec
and
sub
mov
adc
adc
jb
mov
aad
hlt
jg
jecxz
ret
pusha
or
adc
dec
xchg
hlt
or
pusha
sbb
sub
fstps
adc
sbb
pop
cld
decl
pop
jmp
cmpsl
frstor
sub
jne
outsb
xchg
lret
rorb
inc
movsb
sbb
in
ljmp
mov
mov
xchg
pop
rorb
mov
pop
adc
pop
into
dec
fsts
jg
jae
jbe
subl
inc
hlt
test
mov
es
sbbb
push
or
hlt
mov
iret
jo
mov
mov
stc
loopne
inc
incb
xor
push
lcall
fistpll
popa
push
jbe
or
roll
test
es
dec
ret
dec
sar
push
les
mov
sub
mov
xchg
jb
push
push
sub
int3
clc
add
in
imul
out
pop
out
repnz
cli
aaa
xchg
lcall
mov
aas
jne
adc
cltd
imul
shl
jle
sbb
into
fsubp
sahf
and
notb
adc
shr
inc
push
ret
gs
jbe
mov
incl
xchg
popf
add
sub
rolb
push
and
test
iret
mov
orb
insb
in
jmp
mov
data16
cmpl
out
xchg
rcl
test
negl
sbb
decl
sbb
and
std
jp
into
out
cld
arpl
inc
cmpsb
ljmp
pop
in
nop/reserved
mov
mov
sbb
in
nop
cmc
and
xchg
in
sbb
jmp
inc
ret
in
sahf
scas
adc
in
inc
int3
fmul
packuswb
and
cmpsl
mov
push
push
push
push
stc
iret
pop
sub
test
jae
mov
fimuls
push
sbb
jmp
xchg
in
loopne
or
mov
insl
test
fcmovbe
dec
cmp
cmp
call
in
into
mov
cs
lcall
jnp
rorb
in
int3
pop
push
inc
or
push
call
sub
or
test
mov
repnz
cmp
jg
or
rorl
push
adc
fwait
cmpsb
push
aaa
ret
test
mov
sbb
ljmp
clc
xchg
cwtl
adc
loop
pop
stc
mov
stc
xchg
bound
pop
xor
cmp
cld
fists
scas
ficomps
xorb
out
testb
das
repnz
call
inc
push
aam
fidivrl
popf
sub
stc
inc
mov
pop
mov
adc
inc
or
int
fsubrl
faddl
mov
or
ror
incl
scas
out
sub
pop
sbb
and
sub
stc
jae
out
pop
push
jmp
aad
gs
call
stc
sbb
cmc
xchg
push
jmp
xchg
fs
pand
sub
xor
insb
inc
jg
mull
add
jecxz
scas
mov
aam
push
nop
test
fs
movsb
andb
sbb
ljmp
xchg
add
sub
int3
pop
ja
shrl
inc
inc
pop
mov
cmp
in
pop
jg
adc
in
dec
push
lods
out
sbb
cmpb
pop
add
cmp
incl
movsb
scas
inc
mov
addr16
fxtract
ljmp
mul
pop
hlt
sub
pushl
dec
lret
push
dec
cld
push
fisttps
bound
adc
repz
xchg
outsb
mov
push
fadd
ljmp
xchg
mov
hlt
dec
imul
stos
mov
add
popf
cld
jg
inc
jns
imul
and
testb
int3
scas
push
jl
lret
incl
mov
inc
jbe
mov
shlb
mov
mov
loope
jbe
add
push
xchg
cmp
push
adcl
fstl
call
out
das
mov
xchg
mov
das
cli
cmp
sub
inc
inc
repnz
xchg
sub
inc
mov
sub
mov
ljmp
pushl
jo
icebp
xlat
cltd
push
xor
xor
mov
add
mov
inc
adc
xor
call
or
imul
mov
lds
xor
pop
call
enter
jle
sbb
push
cmpsb
push
insb
sub
inc
mov
lock
mov
cwtl
xchg
addr16
insl
insl
xor
lock
out
or
shrl
jl
insl
pop
xchg
push
mov
jle
sbb
mov
sbb
jbe
in
dec
xchg
outsb
adcl
call
mov
add
test
clc
inc
push
jg
js
pop
push
xor
decl
jmp
jmp
adc
in
cmp
or
inc
mov
outsl
movsb
xchg
test
push
dec
adc
jae
aaa
push
pop
jp
add
repnz
push
mov
xchg
xchg
call
sub
sbb
push
sub
fucom
popf
rclb
inc
sub
push
pop
and
std
jp
sbb
int
xchg
mov
mov
mov
xor
test
add
nop
mov
mov
lcall
jecxz
in
add
aam
lea
sbb
sbb
mov
inc
insb
lock
adc
pushl
hlt
jo
pushf
mov
mov
push
add
xor
lea
mov
inc
or
scas
jo
dec
ss
cs
dec
lahf
xor
rorb
xchg
inc
jl
ljmp
sub
sub
adc
scas
mov
mov
xchg
fucomip
mov
les
jg
or
stos
cmpsl
mov
call
call
mov
aas
pop
pop
fs
hlt
dec
sbbl
xchg
push
icebp
daa
and
lods
ss
xlat
jmp
sub
movsl
imulb
rorl
hlt
mov
sbb
jecxz
roll
das
or
cwtl
lret
jns
lea
repz
push
scas
xchg
xchg
mov
nop
pop
icebp
pushl
out
xchg
add
pop
dec
xchg
adc
mov
lahf
int3
or
pushf
fdivs
jg
add
pop
test
test
dec
je
sti
jmp
cmp
mov
jbe
pusha
arpl
clc
fdiv
mov
mov
jp
pop
cld
ljmp
fsubrl
cmp
push
dec
scas
xor
outsl
imull
outsl
lcall
adc
mov
rclb
push
in
xchg
adc
cmp
add
decl
jno
jno
dec
add
push
sbb
push
lret
xor
jnp
das
clc
jmp
xchg
fistpll
fadds
int
adc
out
mov
jo
adc
pop
jl
in
inc
jno
bound
or
mov
cltd
scas
pushl
fidivrs
mov
push
loope
pop
ret
add
aad
lret
xlat
ljmp
adc
jae
out
movsb
push
cltd
mov
mov
or
cmp
imul
idiv
ret
push
iret
mov
add
mov
in
push
mov
sub
cli
hlt
mov
mov
and
sbb
push
call
call
data16
push
les
outsl
inc
fsubs
adc
dec
or
adc
pushl
cmp
test
incl
sbb
pusha
jl
xor
sahf
adc
and
icebp
cmp
lret
mov
mov
xor
lcall
repz
xchg
popl
adc
cmp
adc
or
call
fsub
mov
dec
iret
jno
daa
imul
sbb
addr16
in
fucomp
adc
lcall
mov
jae
push
int3
rcrl
mov
pop
add
dec
dec
stos
inc
push
popa
lds
add
sub
es
mov
and
ror
sub
pop
sbb
pop
push
les
push
loopne
pop
add
aaa
clc
mov
incl
mov
jg
adc
movsb
roll
inc
mov
jae
nop
decb
jne
sbb
push
sub
cmp
out
in
popf
xor
shl
popa
test
push
xchg
ja
mov
out
add
ret
out
inc
xlat
dec
jg
adc
inc
mov
push
cs
idiv
incl
adc
fs
adc
leave
ret
or
aaa
cmpsl
leave
jmp
lcall
decb
jmp
xor
lcall
fcoms
fucomp
cmp
call
xor
or
adc
ja
lea
or
xor
jle
jmp
test
pop
sbb
jmp
cmpsb
adc
in
jbe
fwait
cmp
xchg
lret
in
cwtl
mov
sub
shll
into
lahf
add
pop
decl
loop
pusha
jg
push
mov
ss
decb
cmp
and
pushl
fistps
ss
mov
push
out
enter
and
adc
out
push
test
shrb
test
dec
mov
decl
and
mov
dec
push
adc
sahf
and
jae
cwtl
mov
call
mov
out
sbb
jl
ja
clc
lahf
sub
push
add
mov
sti
sub
pop
sbb
or
mov
mov
loopne
and
scas
dec
sub
dec
xchg
popf
sbb
cmpsb
sub
fbstp
jl
cwtl
fdivs
incl
addr16
sub
dec
cmp
and
sbb
jae
repz
push
fsubrs
xor
decl
lock
stos
mov
data16
cwtl
xchg
clc
push
mov
lods
test
xchg
clc
cmp
cmp
aas
sbb
mov
dec
xor
cmp
or
mov
xchg
add
js
sbb
mov
call
push
pop
rcrb
sub
test
mov
sbb
mov
pop
push
pop
imul
add
das
insb
repnz
mov
and
cwtl
push
cld
add
call
push
jmp
mov
pop
pop
cltd
lcall
pusha
orb
movb
test
sqrtps
call
jg
sbb
pop
mov
sub
fcoml
xchg
and
movsl
xchg
sub
ja
mov
ret
pop
pop
test
push
inc
mov
decl
pop
sub
pop
fisttpl
add
sar
adc
jecxz
jg
jo
cmpsw
and
sub
call
aaa
fwait
push
mov
mov
mov
fldt
rclb
xor
mov
jge
pop
loopne
jmp
mov
jp
mov
dec
dec
call
daa
mov
adc
or
scas
add
lcall
push
jle
or
sub
adc
in
repz
pushl
rcrb
mov
addb
sub
push
lret
mov
push
pop
out
sbb
add
sarb
push
stos
call
add
add
mov
push
or
jmp
push
mov
or
push
fildl
lds
dec
leave
fsts
int3
scas
ret
sahf
outsb
inc
sbb
jg
stos
imulb
and
jg
roll
das
cwtl
rorb
mov
inc
xchg
jmp
sbb
ljmp
cli
sar
xchg
lcall
jle
jmp
sub
fdivs
pop
inc
lock
lcall
lods
jae
lds
int
pushf
faddp
movb
pop
lds
in
or
std
in
bound
push
dec
or
cmp
orl
push
cmp
lret
jg
call
jp
ljmp
mov
pusha
out
sbb
jg
jmp
adc
lcall
push
mov
dec
pop
jp
incb
ljmp
incb
sub
rcl
push
push
fimuls
repz
jg
clc
push
les
pop
rcrb
xchg
xor
int
fistps
das
pop
out
clc
call
push
mov
fmul
daa
ds
mov
push
or
mov
fistpll
scas
jo,pt
dec
incl
lods
adc
pop
mov
stos
fwait
inc
test
enter
dec
sbbb
lret
xchg
mov
mov
sbb
pop
or
icebp
jg
adc
loope
xchg
mov
jne
in
jnp
test
lcall
repz
jecxz
mov
es
test
jbe
push
rorl
xchg
cmpsl
xor
or
cmp
cli
ficoml
in
hlt
shll
mov
cltd
jmp
mov
push
pop
aad
push
push
std
push
and
pop
loop
xchg
sbb
push
sub
mov
lods
pushl
inc
loop
xchg
jo
cwtl
jg
out
mov
repz
ljmp
decb
push
loope
pop
xchg
sarb
pop
test
mov
mov
cld
sti
push
push
sbb
fcmovb
sbb
arpl
mov
pop
faddl
repnz
movsl
and
pop
pusha
cmpsl
cmpsb
or
cmp
dec
mov
decl
iret
ljmp
icebp
pop
mov
jne
loopne
cltd
stc
sbb
inc
xor
cmp
incl
outsb
jmp
sub
push
loop
fcom
outsb
cmp
add
lret
or
sbb
dec
pop
cmp
int
lret
jge
push
jmp
sub
jg
outsb
call
out
sbb
fisttpll
addb
incl
orb
adc
into
les
dec
test
or
insl
xor
call
add
lea
ror
fwait
adc
jg
lds
jl
shll
xor
adc
jp
xchg
fwait
popa
push
mov
jbe
lret
push
hlt
lods
ss
xchg
std
fisubl
inc
sub
loopne
fst
pop
jmp
enter
cmc
xchg
push
xchg
cmp
push
mov
mov
cs
inc
cmp
shlb
pusha
sub
popa
fcomps
sub
push
fwait
sbb
pop
fst
rcr
lods
incl
mov
es
test
imul
jp
ss
icebp
aas
leave
gs
dec
lret
adc
pop
hlt
stos
jmp
fildll
test
lods
out
clc
cmp
aaa
xor
pushl
rcrb
out
nop
mov
fimuls
in
cmc
jmp
int3
movsl
xchg
enter
push
xlat
mov
cltd
adc
call
or
ss
xlat
jl
xor
mov
cwtl
xchg
mov
enter
add
imul
push
decl
ljmp
out
sbb
decl
fcomp
stos
dec
lret
mov
xor
cltd
sbb
mov
cmpsb
in
ds
jg
jge
push
jb
scas
bound
int
std
lret
add
jnp
inc
pop
pop
ljmp
adc
mov
adc
in
sahf
sbb
ja
mov
sub
sub
test
das
clc
fbstp
cwtl
call
push
fcos
andb
jbe
cld
enter
adc
fldl
aas
std
mov
xor
in
ud0
mov
ljmp
add
fidivs
sbb
add
push
rcrb
jbe
push
ljmp
out
adcb
cltd
pop
jp
cmpl
xchg
or
sub
std
pushl
jno
les
lcall
into
in
pushf
cmp
pushl
int3
jnp
dec
dec
and
in
dec
xorb
pop
cmpsl
test
aaa
cld
decl
nop
iret
push
not
fwait
out
stos
pop
mov
inc
mov
test
ljmp
stos
wbinvd
adc
adc
mov
or
mov
decl
push
aaa
jb
jecxz
aaa
xor
mov
test
fnstenv
cmpsl
sbb
clc
pushl
in
in
pop
mov
pop
popf
aaa
pop
cmpsl
or
ds
idivb
lahf
push
lock
adc
and
jns
sbb
push
scas
cs
testl
ljmp
or
aad
xor
dec
loope
adc
cs
aam
or
xor
decl
mov
arpl
movd
shrl
pop
push
dec
xchg
or
pop
ja
add
xchg
jmp
imul
mov
in
aam
mov
subb
fwait
sub
push
pushf
mov
incl
xchg
rorl
xchg
fildl
int
pop
adc
call
inc
or
xor
pop
aam
andl
xor
xchg
add
icebp
lahf
lcall
jp
jnp
out
push
inc
cs
dec
mov
jbe
mov
push
hlt
ljmp
pop
jnp
pushl
cmp
sub
faddp
adc
and
or
fildl
incl
dec
fisubrs
bound
xor
and
ljmp
ret
out
cmc
arpl
and
and
call
sub
call
in
sbb
sub
mov
cmp
lret
adc
push
stc
sub
aas
aas
call
lcall
aad
loope
push
aaa
push
inc
pusha
xchg
pusha
nop
xchg
jecxz
cwtl
stos
or
ljmp
sbb
or
jp
cmp
shlb
xchg
sbb
or
outsb
push
fcomip
jnp
mov
push
jmp
mov
mov
inc
fnstenv
ljmp
add
and
add
add
push
repnz
cmp
ds
push
test
pop
adc
in
cltd
lods
sar
incl
test
repz
es
sub
rcrl
cld
insb
mov
rcll
mov
jg
pop
and
jae
in
or
jo
sbbb
mov
subl
inc
aam
dec
lcall
shrb
call
mov
fs
dec
pushl
mov
pop
sub
ret
stos
std
stos
in
inc
push
pop
std
xchg
mov
xlat
push
mov
jp
loopne
jmp
leave
pop
subl
jl
shlb
pop
loopne
ret
xchg
js
inc
popf
pop
or
push
adc
cwtl
daa
ds
sti
jmp
dec
and
lahf
sub
jae
inc
jl
pushf
adc
out
imul
insb
aam
cltd
inc
and
ss
call
xchg
daa
or
or
cmp
ret
repnz
or
fnstsw
xchg
aam
test
sbb
or
jg
sbb
repz
repnz
cmpsl
ret
das
sar
shr
xchg
shrl
lods
inc
insb
mov
jle
add
and
ljmp
mov
inc
sbb
and
mov
ja
popf
mov
mov
incl
rclb
std
fs
mov
int3
add
movsb
sahf
lcall
lods
sahf
andps
orb
dec
add
daa
adc
test
cmp
and
fbstp
jae
jb
test
push
ljmp
fwait
loope
in
sub
bound
mov
call
movb
jg
cld
lcall
sarl
xor
jb
pop
fwait
and
mov
repnz
dec
jns
sti
call
mull
and
mov
or
sbb
imul
xchg
dec
outsl
hlt
jl
movsl
dec
call
fcomps
jl
jb
jmp
ljmp
in
pop
jb
int3
mov
in
jbe
and
push
popa
and
inc
and
cld
dec
xorl
shlb
xchg
ret
adc
adc
pop
lock
decl
rcrb
movsb
sub
and
and
fdivrl
dec
sub
fcomip
jge
les
je
dec
in
or
ror
mov
fists
adc
xchg
ljmp
fisubrl
into
arpl
imul
decl
mov
mov
mov
pop
in
aaa
jno
sbb
cmp
add
mov
inc
shrl
pushf
ficompl
std
inc
ss
sar
mov
daa
inc
jae
popf
jmp
sub
cmp
pop
push
leave
mov
jge
push
xchg
pop
xchg
mov
out
xchg
push
es
xchg
sbb
aad
or
push
cwtl
pop
or
es
xchg
jae
or
jp
lcall
out
add
or
cmc
and
mov
push
mov
sti
bnd
sub
fidivl
loopne
aam
push
jnp
arpl
add
loop
fsubrp
adc
lret
sbb
shrb
repnz
shlb
sub
pop
ljmp
pop
jecxz
jo
div
fyl2x
incl
pop
mov
cmc
insl
and
inc
sub
test
sub
mov
dec
negb
inc
rol
pushl
cmp
pop
in
inc
mov
jae
shlb
andb
jns
mov
in
nop
mov
movsb
inc
mov
repnz
mov
cmp
pop
pop
pop
shr
enter
rcrl
sbb
ljmp
js
mov
dec
jo
cmpsl
mov
xor
xchg
mov
test
subb
mov
add
hlt
stos
sbb
loopne
and
jp
test
imul
call
pop
sahf
aam
pcmpeqw
fsubrs
push
hlt
fcompl
fs
fisttpl
inc
inc
imul
adc
nop
rolb
imulb
and
mov
xor
push
mov
sub
mov
add
mov
out
cli
mov
cmp
xchg
les
data16
push
or
in
push
dec
out
incl
loopne
out
lock
add
adc
enter
test
cwtl
cmp
mov
and
cmp
popa
loop
dec
ret
mov
dec
inc
sbb
pushl
in
mov
or
sbb
adc
sbb
add
out
aas
xchg
inc
ficoml
xor
jno,pn
cmp
inc
dec
ljmp
sahf
cltd
xchg
jb
sub
xor
push
mov
imul
jl
sub
enter
aas
push
mov
fistpll
imul
shrb
inc
sub
adc
popf
insl
adc
jns
lds
test
dec
and
test
sbb
and
incl
cmp
push
cmp
jbe
aas
add
int3
lea
cmp
mov
ljmp
shrl
fucomip
cwtl
adc
push
scas
mov
jg
fcmove
fwait
jns
incl
ljmp
in
sub
out
les
sub
sbb
dec
push
popa
int3
add
dec
mov
mov
push
mov
lcall
push
xchg
ljmp
incl
stc
mov
dec
mov
jmp
dec
sbb
dec
sub
jmp
jge
adc
jmp
mov
sbb
mov
insl
push
cltd
out
pop
mov
mov
or
stos
jmp
inc
mov
or
xchg
movsb
out
sub
data16
out
push
lods
int
push
enter
incl
lea
movsb
test
test
cmpsb
push
pop
mov
sbb
adc
mov
incl
lods
loop
subl
js
dec
fwait
divl
xchg
adc
mov
js
iret
aad
sar
mov
dec
xchg
jmp
pushf
mov
das
pop
add
adc
mov
dec
fstpt
add
jecxz
dec
ret
test
jge
test
sub
ljmp
pop
shrl
push
lods
jl
add
xchg
add
arpl
xchg
out
out
insb
gs
jno
clc
ffree
lds
sub
cmpsl
in
sbb
ja
or
inc
mov
incl
add
sub
inc
out
repnz
sbb
push
mov
pushl
iret
into
and
pusha
rcll
ljmp
cmpsb
pushf
jnp
or
popa
inc
ljmp
jecxz
insl
mov
inc
call
bnd
inc
inc
js
imul
popa
popf
xchg
out
call
push
repnz
mov
and
sahf
addr16
jmp
loopne
sbb
aaa
or
jecxz
xchg
jbe
or
je
lods
rcll
push
rol
xor
fdivr
mov
ja
sti
nop
filds
imul
movsl
in
lret
mov
ret
dec
and
pop
cmc
pop
and
push
cmpsb
sbb
inc
std
lahf
cs
or
ljmp
out
add
imul
fnstenv
mov
dec
push
cmp
lods
js
cmp
lea
mov
push
outsb
xor
mov
mov
add
addr16
and
ja
mov
repnz
clc
in
jge
push
call
fs
push
and
fs
call
sub
or
xchg
lcall
cld
lret
adc
sub
decl
inc
cs
arpl
nop
and
rol
in
inc
xchg
shlb
cmpsl
fisttpll
scas
mov
push
mov
in
mov
std
fists
lods
pop
aas
push
lret
push
or
inc
std
dec
push
jge
jp
mov
incb
or
leave
stos
jmp
sbb
lahf
xor
xor
ja
fcoml
shlb
xchg
mov
push
in
fidivrs
mov
mov
jp
cli
sbb
cmc
jge
dec
fwait
enter
popf
jmp
pushf
arpl
aam
int
jl
push
mov
jg
stc
inc
loop
incl
in
xlat
cltd
pusha
pop
cltd
insb
lods
mov
sarb
test
cltd
or
ret
and
imul
lcall
jmp
stos
pop
cmp
adc
pop
or
ret
mov
inc
add
pop
lret
mov
dec
loope
lds
loopne
jb
inc
add
test
adc
lret
dec
leave
pop
pop
loop
pushl
mov
clc
cmp
fbstp
mov
jbe
sub
scas
xor
leave
repz
inc
mov
lcall
cmp
icebp
mov
test
dec
ret
ficoms
inc
test
push
pop
and
xor
daa
imul
test
cld
pushl
addr16
aad
int3
and
add
xor
dec
mov
lods
xor
ljmp
and
push
xchg
pushf
sbb
cmp
loope
mov
pop
xchg
sub
rcll
cld
sti
dec
in
and
mov
aam
stos
xor
xor
enter
add
insb
sub
mov
add
mov
test
lcall
inc
mov
sub
mov
sbb
rorb
lock
add
call
loopne
lea
adc
test
jmp
mov
xchg
cmp
pusha
cld
add
adc
fmuls
in
inc
js
and
sub
adc
xchg
fisubs
mov
dec
or
daa
scas
stos
insl
xchg
push
lcall
inc
mov
xchg
aam
test
lods
aam
fld
xor
dec
mov
dec
mov
xor
dec
xor
and
xor
cmpsb
popf
mov
pop
mov
inc
xchg
js
jmp
pop
xchg
stos
js
das
clc
fwait
add
and
pop
pop
push
lock
pushl
or
and
faddl
pop
aam
inc
inc
push
xchg
leave
std
les
mov
decl
sbb
out
push
xchg
bound
fwait
cmp
cmpsb
push
mov
loop
imul
jne
mov
and
xor
ljmp
dec
xchg
push
sbb
ss
data16
mov
mov
ljmp
adc
push
lds
insb
push
leave
sbb
inc
lods
stc
push
pop
sub
add
cmp
iret
fldl
jl
insl
and
dec
jle
cmp
xchg
sar
mov
insb
test
sahf
mov
ljmp
cli
cld
scas
test
xchg
das
fildl
cwtl
push
pop
stos
or
call
cmp
cmp
mov
inc
dec
out
sbb
std
fdivrs
push
jg
cmc
lock
push
mov
mov
push
mov
leave
ss
ret
pop
push
sub
and
inc
push
outsl
or
fdivrp
cmp
je
sub
mov
lret
mov
push
imul
pop
cmp
jge
lcall
pop
adc
xor
cltd
out
and
mov
icebp
decl
and
push
pop
mov
pushf
pop
pop
pop
je
sub
inc
jmp
pop
outsb
xchg
subb
incb
addr16
xor
jg
inc
mov
or
decl
stc
iret
test
xchg
sbb
enter
outsb
ret
or
xor
daa
and
pop
pushl
and
fs
jb
mov
cltd
ss
xchg
sbb
incl
inc
pop
inc
dec
sbb
add
mov
add
nop
inc
push
inc
test
flds
sbb
cwtl
imul
xlat
shlb
cld
push
xchg
incl
jae
xchg
in
in
lea
mov
rcll
enter
mov
lods
mov
aas
out
sub
incl
test
rclb
inc
adc
add
xlat
pusha
arpl
rolb
mov
ljmp
push
mov
fnstsw
push
jecxz
sub
and
popa
lahf
mov
xor
xchg
in
ljmp
xchg
lcall
lods
pop
ss
fwait
cmp
lret
movl
call
cmp
subb
add
cltd
xchg
xchg
fstps
or
repz
ljmp
sbb
fadds
call
xchg
jmp
mov
or
fnstenv
mov
into
dec
inc
mov
imul
ret
daa
neg
mov
and
scas
push
or
popa
dec
inc
push
xor
je
adc
jae
sub
aad
lret
popf
out
jo
push
push
rcll
cld
fcomip
jnp
fdivp
sbb
insb
sbb
inc
bound
mov
call
mov
add
push
mov
jp
pop
mov
stc
fsubl
test
pushl
fcompl
pop
mov
pop
xchg
mov
int
jns
lods
out
sbb
sbb
push
jmp
and
xchg
shlb
repnz
lret
push
outsl
clc
insl
dec
mov
xchg
hlt
fbstp
ret
call
jae
cli
add
ss
enter
js
push
sub
sbb
jg
in
push
aam
in
dec
fcomi
leave
add
js
add
jns
stos
pop
mov
outsl
jmp
mov
mov
xor
ljmp
xchg
mov
sbb
sbb
lcall
fisttps
xchg
shll
call
inc
out
mov
cltd
ret
mov
je
outsb
xchg
pop
cmp
ljmp
jge
sub
inc
pushf
xor
test
fucomp
fisubs
mov
sub
and
movsl
jg
inc
nop
jle
jecxz
in
push
rolb
mov
mov
sbbl
mov
div
dec
loope
mov
cmp
or
mov
add
xor
out
jg
cmpsl
divb
mov
and
mov
mov
dec
movsl
sub
pop
into
jg
pop
jle
inc
xor
xor
gs
adcb
jmp
pushl
iret
sub
xor
clc
push
and
orl
pop
and
imul
fmul
lock
ljmp
into
std
lcall
push
icebp
and
rolb
out
test
sbb
pop
cld
orb
ja
dec
popf
cwtl
iret
or
shlb
or
jg
cmp
cli
imul
push
pushf
ss
add
inc
fldt
lcall
leave
out
jne
adc
sbb
mov
push
jmp
mov
pushl
faddl
lret
sub
dec
or
les
lds
adc
lcall
xchg
pop
ret
loop
popa
mov
addr16
jge
sub
pushl
dec
shlb
popa
aad
adc
add
in
sub
sar
mov
mov
cs
cmpsb
xchg
or
sub
mov
leave
xor
and
ds
std
dec
push
cltd
aad
mov
adcb
enter
or
cmp
pushf
hlt
pushl
add
jmp
dec
jp
out
xchg
pop
stos
jge
outsl
shl
and
push
cli
xor
fistl
pop
rolb
in
xor
xchg
or
lock
decl
jno
call
push
ds
inc
int
dec
add
arpl
not
pop
and
mov
shlb
leave
rolb
xor
pushl
addr16
lret
sbb
dec
push
mov
inc
cmp
pop
dec
sub
shl
std
sahf
fdivr
mov
clc
sbb
or
xchg
jmp
pop
mov
movb
dec
mov
inc
pop
pop
mov
in
jb
les
cmc
pop
cmpsb
lds
incl
fwait
orl
nop
jbe
pop
mov
outsl
popf
jg
xchg
and
sti
std
int3
dec
bnd
aas
cli
jne
pop
jmp
sbb
mov
add
mov
jbe
insb
xor
mov
adcb
sbb
push
mov
pop
mov
clc
dec
sti
add
nop
pushf
pop
insb
cli
jno
out
cwtl
push
shrl
dec
cmpsb
sub
incl
jp
pop
and
add
sbb
push
push
xor
in
repz
sahf
xor
decl
xor
jle
pop
pop
ss
fcomps
popa
outsl
cmp
or
mov
and
pushl
aad
pop
enter
pop
into
cmp
push
pusha
iret
ds
scas
push
adc
aad
call
mov
mov
mov
push
add
dec
fisttpll
aad
arpl
jecxz
daa
xlat
bound
pause
jae
cmp
xor
or
test
mov
divb
jg
data16
dec
pusha
cmpsb
jle
fidivl
adc
dec
sbb
in
stc
pop
cwtl
pushf
addr16
cwtl
sbb
push
leave
ljmp
sub
scas
ret
fildll
mov
cmp
dec
or
dec
cmc
sbb
pop
cmp
cld
pop
cmc
pushl
jb
xchg
fadd
out
fsubrp
mov
push
mov
pop
adc
int
push
scas
dec
push
push
add
add
js
adc
xchg
push
push
push
push
sbb
pushl
icebp
inc
test
into
add
out
dec
fdivrp
ljmp
mov
xchg
push
lcall
jno
push
or
fwait
loopne
stos
js
push
leave
in
es
out
or
dec
clc
jb
cmp
sti
lcall
xchg
mov
inc
add
add
orb
stos
cmp
pushl
xchg
jo
mov
es
xchg
retw
aad
in
xor
pop
mov
cmovb
mov
incl
push
inc
sbb
addl
mov
xchg
fwait
pop
push
push
aas
inc
push
test
push
movsb
inc
push
push
fstpt
and
imul
das
les
decl
inc
jnp
hlt
les
sbb
and
xchg
test
icebp
call
or
sub
xlat
dec
inc
pushf
mov
adc
rcll
mov
ss
mov
adc
jg
lods
xchg
sub
fmul
imul
xchg
xor
das
or
and
imul
xlat
shll
decl
push
enter
cmp
cmc
mov
adc
incl
cs
in
adc
inc
jns
mov
lcall
out
cli
decl
adc
insl
sbb
jl
adc
lds
jno
rcll
test
mov
fistpll
lds
scas
lret
shll
xchg
jle,pn
loopne
and
call
sbb
and
stos
xlat
xor
dec
ret
sbbl
stos
mov
mov
daa
incl
int3
es
jno
nop
inc
jmp
jge
mov
push
shlb
fistpll
jo
push
or
cld
adc
test
arpl
scas
push
adc
loope
decl
pop
push
mov
pop
and
pop
sub
mov
or
call
cmp
sahf
dec
mov
out
xor
pop
out
pop
jbe
sub
stos
sbb
adc
pop
in
jb
call
mov
mov
mov
aad
and
loopne
mov
adc
inc
jmp
sub
and
adc
jecxz
scas
sbb
inc
aaa
cmp
iret
addr16
incl
int
add
mov
pop
pop
repz
call
mov
popf
inc
out
sbb
lcall
push
lret
in
sar
jmp
xchg
or
arpl
pop
call
add
xchg
cmp
mov
call
sbb
sbb
stc
loope
push
jne
stos
dec
pop
sar
ljmp
push
inc
add
js
aas
sub
mov
bound
dec
cmp
into
cmpsl
and
mov
leave
jne
dec
sbb
inc
sub
jns
jp
xchg
cs
enter
xor
ljmp
dec
out
lods
ds
add
adcb
jle
mov
cs
sahf
out
lea
jmp
xlat
fcmovnb
jo
cmp
and
mov
sbb
aas
movb
fnsave
shll
xchg
pop
push
inc
test
jnp
push
dec
dec
jae
pushl
popf
enter
sub
pop
sbb
in
jno
sub
push
arpl
popa
adc
ljmp
nop
jno
lahf
imul
test
js
jmp
mov
or
dec
mov
mov
pop
add
mov
xlat
mov
pushf
mov
gs
ljmp
int3
ss
loope
daa
jne
insb
inc
pop
push
pushf
dec
push
adc
mov
popf
lods
push
push
lcall
loopne
or
call
or
mov
and
or
hlt
roll
jmp
or
push
dec
fadds
mov
xor
icebp
add
out
mov
inc
es
scas
cli
decl
push
jmp
decb
dec
xchg
cwtl
xchg
adc
add
insb
xchg
scas
jbe
ljmp
cld
int3
pop
pop
rclb
mov
jo
push
sarb
data16
and
pop
adc
jg
push
xor
dec
lods
aas
pop
push
jbe
cli
or
cwtl
daa
cmp
cmova
cmp
ljmp
mov
mov
lret
pop
pop
sub
sbb
es
mov
outsl
clc
pushl
dec
xchg
les
jns
fldt
cmp
adc
push
push
xor
adc
push
imul
cmp
mov
push
bound
jno
arpl
aaa
pusha
aas
push
inc
mov
dec
push
dec
jae
fldenv
jle
fiaddl
hlt
addr16
lcall
mov
ljmp
cmpsb
and
adc
pushf
sbb
sahf
ds
xchg
cwtl
cmpsb
lcall
jecxz
sahf
xor
pop
push
ljmp
loopne
cmove
test
idiv
jmp
std
lods
lea
je
cld
fsubr
adc
xchg
or
enter
mov
nop
scas
clc
dec
and
inc
sahf
lods
js
notl
stos
and
adc
mov
call
push
gs
mov
popa
pop
das
jb
fnsave
xor
pop
xlat
nop
sbb
fdivrl
cmp
insb
cmp
scas
data16
and
mov
pusha
cs
xchg
add
or
lods
mov
call
idivl
adcb
out
mov
stc
stos
icebp
sub
int
out
mov
shl
or
ljmp
mov
dec
xor
cmovnp
decl
in
sbb
pop
mov
push
and
scas
repnz
iret
cmp
inc
sti
push
cld
lcall
mov
mov
adc
lock
pop
rcr
inc
mov
adcb
pushl
scas
jnp
and
lds
fucomip
push
cs
lahf
lahf
into
shl
pop
jbe
aaa
mov
decl
sub
mov
scas
mov
arpl
jl
call
adc
xchg
sub
fs
outsl
sub
scas
inc
inc
fcomps
in
aad
xchg
and
es
mov
xchg
cmp
push
jge
inc
jmp
or
lds
movl
jnp
add
dec
mov
stos
int3
mov
faddp
cmp
shll
sbb
sub
cmp
xchg
inc
dec
test
xrelease
xchg
dec
aas
mov
loop
repz
dec
mov
insb
das
fldt
aam
popf
pcmpgtw
mov
fistpll
movsl
sbb
ret
ljmp
pop
inc
popf
out
movsl
sbb
push
rcrl
lahf
push
decl
pop
mov
mov
dec
mov
into
arpl
inc
jl
mov
ror
rcrl
push
arpl
inc
ficompl
jno
pushf
jp
fstpl
add
in
jo
movsl
cld
popa
loopne
xchg
jb
ljmp
sar
arpl
dec
push
pop
inc
mov
mov
jo
sar
jmp
add
mov
sbb
shrb
inc
pop
adc
fimull
mov
jg
or
xor
stos
imul
dec
imull
push
aad
or
rolb
mov
mov
pushf
mov
ljmp
addr16
es
pop
lret
inc
push
push
inc
fwait
pusha
aam
sbbb
dec
ljmp
cli
sti
push
inc
test
hlt
xor
sbb
mov
mov
int
jmp
fstp
mov
clc
pop
scas
xchg
mov
adc
outsb
inc
in
aam
insb
ljmp
outsl
lahf
ret
mov
cmp
mov
pop
push
jmp
pop
inc
jo
push
jl
cmp
cmp
in
xor
push
cmc
mull
lret
mov
fdivr
add
decl
jo
test
bound
xchg
lret
out
std
mov
and
mov
jmp
divl
lcall
incl
xchg
xchg
cld
push
or
sbb
out
jge
arpl
or
push
add
call
sub
push
movl
inc
mov
add
jno
sub
in
pusha
in
cmpsb
sbb
int3
and
call
lods
pop
in
push
adc
std
push
sub
stos
push
adc
sbbb
jmp
loop
aam
and
cwtl
cli
sub
adc
pop
lahf
mov
es
ss
jmp
mov
xor
pop
inc
push
mov
push
push
fsub
push
insb
lahf
dec
dec
in
push
mov
cmp
dec
adc
shll
push
scas
fisttpll
adc
add
lret
test
add
mov
pop
testl
rorl
fwait
push
int3
loope
mov
js
mov
data16
sub
jp
enter
aaa
pop
adcl
ljmp
hlt
neg
ret
hlt
xor
or
xchg
test
notl
mov
lcall
mov
in
and
addr16
and
mov
jle
lock
dec
and
push
cmp
sbb
ficompl
adc
pop
ss
in
and
lods
mov
sbb
or
jns
adc
movb
adc
mov
pop
dec
popa
pop
mov
cmp
insb
loope
ljmp
mov
dec
mov
sti
sbb
fwait
inc
scas
addr16
or
xchg
or
ficompl
flds
js
mov
xorl
jge
jg
sub
decl
and
leave
inc
and
cmpsb
xor
xor
or
mov
push
jl
int3
dec
fsubs
nop
xorb
xchg
jl
data16
and
sbb
push
lahf
fwait
sub
add
mov
mov
lcall
mov
gs
push
cli
in
lcall
jbe
in
ret
pushl
in
rclb
add
dec
mov
rcrl
jbe
jns
sar
inc
or
xchg
in
lods
loope
incl
mov
ja
mov
lock
xchg
sahf
movsb
aaa
mov
cltd
fs
push
cmp
icebp
pushl
jno
pop
shl
in
imul
fldenv
sahf
jg
and
lods
mov
sbb
das
push
lock
add
ljmp
jmp
cmp
mov
insb
lret
sub
into
adc
mov
mov
push
xlat
lahf
shll
add
adc
lods
outsb
fnstsw
sub
push
xchg
cmp
lcall
clc
lret
mov
inc
ljmp
mov
aaa
cmpsl
mov
cwtl
pop
scas
fcomp
lea
push
mov
call
lahf
mov
dec
xchg
fsubrs
nop
push
mov
jmp
cwtl
jae
pushl
sbb
xchg
out
roll
lds
lods
mov
repz
std
decl
fcom
adc
inc
pop
mov
xchg
in
test
insb
or
mov
jne
pop
mov
sbb
rclb
pusha
sub
decl
jnp
fwait
mov
and
aam
mov
push
xor
into
mov
enter
jg
int
inc
sbb
push
sub
in
ret
pop
mov
push
insl
cmp
dec
popa
xor
lock
mov
in
fs
ret
sub
movsl
mov
jno
fwait
clc
std
out
mov
aad
and
ret
cwtl
addr16
xchg
cli
decl
push
inc
leave
ljmp
dec
sbb
xchg
mov
incl
nop
sbb
and
loop
jge
and
xor
decl
loopne
add
mov
xchg
push
pop
loopne
sahf
shll
in
test
stos
pop
xor
mov
cld
cld
ljmp
push
jns
jb
loopne
lea
repz
cltd
push
xor
dec
pop
mov
sarl
bound
pop
incl
push
pusha
adc
clc
adc
push
ret
sbb
fnstenv
fsubp
repnz
jmp
cmp
js
js
in
push
mov
popf
rclb
cmc
adcl
sub
imulb
jecxz
incl
rorb
push
movb
push
lea
shrb
je
add
inc
push
or
call
mov
sbb
xor
sti
les
jmp
adc
push
xor
cli
push
scas
clc
mov
lfs
cld
pusha
call
int
sub
das
cltd
ljmp
ss
xchg
sbb
cmp
jns
inc
stc
mov
mov
cwtl
mov
jb
and
pushf
mov
push
outsb
or
push
fldcw
xchg
fisubrl
sbb
xchg
or
or
sbb
ret
mov
and
dec
push
icebp
cmp
hlt
syscall
in
cld
pop
mov
fiadds
mov
inc
pop
loopne
cli
pop
jae
call
xor
test
arpl
add
pushl
stos
mov
js
adc
fdivrl
inc
mov
jg
mov
in
addr16
pusha
fld1
mov
sub
pop
pusha
add
shlb
call
push
adc
pop
and
jae
pop
mov
jnp
cmp
in
cmc
dec
jl
pop
rcll
in
push
pop
cmc
aas
ds
movsl
jecxz
cmp
testl
cli
rcrb
stc
push
mov
mov
mov
or
sbb
loop
incl
lea
mov
daa
insb
lods
add
insb
outsl
cmp
add
icebp
clc
jmp
es
dec
fbld
rcr
pop
mov
inc
subl
push
jmp
cli
and
jne
mov
push
bound
nopl
lret
movsb
cld
jo
mov
sub
mov
sbb
jae
jne
and
add
jp
daa
jge
xchg
jmp
decl
cmpsl
cwtl
push
push
adc
and
test
xlat
mov
outsl
mov
sbb
mov
sahf
push
or
mov
xor
out
out
mov
jecxz
inc
mov
jbe
mov
mov
or
adc
or
lcall
stos
cmp
or
adc
fcmovnb
jp
jmp
aas
mov
jno
incl
lods
lcall
cs
orb
mov
jge
loope
popl
jecxz
xchg
sbb
jbe
xchg
mov
test
mov
sub
test
sbb
pop
xlat
push
inc
out
push
sti
gs
jnp
xlat
mov
and
ss
shlb
jmp
jmp
push
jmp
ret
add
mov
cmp
lcall
or
adc
in
xor
hlt
xchg
xchg
lcall
lret
jns
popa
dec
mov
call
insb
mov
xchg
pop
mov
add
lods
sub
xchg
add
mov
call
std
xor
lret
imul
pop
imul
iret
jns
out
movl
lcall
xchg
mov
lret
mov
in
insl
sbb
cmpsb
mov
add
dec
push
sub
shl
data16
call
lret
jb
add
incl
inc
mov
jmp
sarl
ret
dec
push
push
outsl
ss
or
cmp
mov
lods
sub
addb
lods
out
pop
push
cmpl
pushl
aam
fnstcw
ja
ja
lods
push
inc
dec
or
jae
clc
push
ljmp
pop
and
out
por
push
or
inc
cmp
pushl
sbb
cmp
mov
xchg
mov
call
aam
rcr
test
dec
int
ss
sti
pushf
rolb
lcall
adc
fsubrl
jo
cld
inc
sub
cli
mov
mov
dec
xchg
out
pop
add
stc
lea
adc
incl
sub
call
pop
cmp
mov
adcl
data16
stos
add
lods
imul
fisttpll
cmp
fdivs
sub
adc
mov
sub
jle
push
and
sbb
call
add
mov
pop
mov
push
pushf
imul
xchg
and
or
pop
loopne
ljmp
mov
nop
lods
inc
je
sbb
call
incl
sbb
adc
pop
cmp
je
nop
in
push
ds
and
sti
push
add
divl
mov
outsb
mov
lret
bound
dec
push
lods
dec
movsl
cmp
inc
shlb
decl
lods
sahf
out
incl
enter
jge
dec
inc
cmpsl
repz
in
rolb
xor
xor
or
sub
loopne
ljmp
loop
cmp
out
or
fisubl
mov
pop
fstpt
pop
adc
ja
call
push
aam
xor
outsb
clc
imul
je
cmp
cmpsl
cmp
fmull
bswap
pop
jmp
push
fldcw
in
mov
fdivs
jl
cltd
les
repz
mov
gs
adc
bnd
lsl
fcmovb
cmpsl
xor
push
pop
mov
loop
adc
mov
inc
mov
sbb
mov
push
push
fmull
xchg
fildl
incl
mov
mov
jl
mov
add
and
xor
pop
pop
add
fcoms
imul
ljmp
xchg
aaa
and
xchg
sub
xchg
fidivrl
add
out
cmp
mov
jp
or
in
inc
test
je
shll
lods
aad
pushf
rolb
lcall
rcll
jno
fsubrs
loop
xchg
lds
mov
into
js
cmp
sbb
aad
mov
sub
or
dec
test
mov
pop
scas
jecxz
pop
out
inc
jb
jg
decl
lret
shll
lods
xchg
andl
dec
jno
popf
xchg
jg
inc
imul
mov
jg
sbb
lds
cs
xchg
sub
decl
lock
mov
dec
mov
cs
ds
xchg
mov
arpl
js
fcomi
outsl
pop
xor
lcall
xchg
mov
ljmp
sti
in
lret
jno
sub
test
jb
push
jg
mov
test
test
incl
adc
or
or
cmp
jns
mov
int
fnstsw
cli
decl
sbb
pop
jne
out
fistpll
sub
mov
cli
ljmp
mov
or
xor
inc
imul
movsl
xor
roll
aas
fcmovnb
decl
jg
int3
jge
es
xor
push
dec
ds
loop
cmp
adc
xor
movsl
arpl
jg
jbe
call
mov
cld
xor
mov
and
decl
fildll
rcr
sub
popf
xchg
scas
jnp
or
mov
lcall
or
dec
insb
int
xchg
lahf
or
std
addr16
rcll
cli
in
lcall
and
sarl
pusha
xor
jle
inc
mov
pop
and
cmp
cmp
addr16
dec
jbe
mov
lahf
and
mov
mov
sbb
sahf
cmp
fildll
std
into
cltd
loope
push
push
jbe
adc
dec
jns
popa
loopne
mov
xchg
push
mov
jecxz
mov
xchg
out
pop
imul
ret
push
push
jne
test
insb
mov
pop
sbb
jnp
dec
sbb
sbb
rclb
cmp
les
cmp
mov
push
pop
pop
bound
insb
mov
popa
movups
xchg
decl
push
mov
cmpsl
inc
inc
lods
xor
xorl
int
jns
pushf
fs
das
inc
lcall
pushl
pop
jle
test
outsl
ret
and
cmpl
insb
pop
ljmp
in
and
push
loopne
jo
cmp
rcr
iret
leave
ret
jmp
hlt
pop
mov
xchg
xor
es
jns
adc
adc
in
idiv
incl
add
inc
push
test
inc
and
jmp
les
decl
sub
add
and
inc
shl
test
fstpt
and
frndint
jg
subb
xorb
push
fnstenv
dec
jns
push
mov
pushl
fsub
ret
nop
mov
xor
lret
popf
scas
out
add
push
cmp
jnp
aad
inc
mov
hlt
ljmp
pop
mov
mov
xor
lcall
ds
sub
and
test
dec
shl
int
gs
xchg
shr
jge
icebp
hlt
fldt
mov
lods
lods
push
loopne
adc
jge
les
pop
mov
sbb
or
adc
sub
jecxz
xor
loope
cmp
mov
shrb
xor
inc
push
jno
cmp
gs
pop
mov
inc
cltd
mov
repnz
xchg
push
das
jb
sub
test
shl
out
imul
jne
addb
pop
loope
jns
stc
in
cmpsl
scas
mov
nop
andb
rcrl
decl
push
dec
xchg
jae
aaa
inc
inc
add
xchg
popf
mov
lcall
jg
pushl
sbb
and
in
xchg
cld
inc
lret
loopne
or
mov
cli
sbb
pop
sub
lcall
jbe
daa
inc
inc
xor
and
cmp
sbb
fdivrp
inc
pop
mov
sub
mov
shl
push
cwtl
ss
cmp
jmp
mov
repnz
addr16
bound
and
xor
es
and
mov
lcall
sub
push
push
lea
add
aad
flds
mov
mov
cli
movsb
push
xchg
adc
sbbl
inc
mov
ljmp
mov
pop
mov
sbb
test
movsb
adcb
test
dec
jnp
imul
push
xchg
xchg
call
popl
iret
dec
int3
jecxz
fisubl
pop
mov
clc
mov
cmpsb
mov
or
test
addb
inc
lcall
sahf
outsb
decl
sti
mov
mov
mov
xchg
fwait
loopnew
mov
sti
lcall
shll
movb
lods
std
add
jnp
ret
addb
cmp
push
dec
test
lods
insl
stos
add
je
jae
dec
cwtl
mov
incl
cld
add
sbb
outsl
movhps
add
mov
inc
bound
addr16
cmp
ljmp
not
cli
daa
mov
and
outsl
fdiv
mov
xchg
fimull
or
or
xor
lds
fstpt
and
pop
stc
sti
incl
data16
ficomps
mull
xor
adc
push
jo
pop
lods
movntq
out
jmp
mov
out
lock
and
loope
test
ss
jmp
leave
lods
imul
fisttpl
movsb
clc
lods
int3
xor
notb
daa
in
and
call
jmp
aas
xor
pusha
repz
imul
stos
stc
insb
in
jb
test
cs
lds
dec
jg
dec
outsl
xlat
imul
outsl
push
lods
pusha
push
in
or
inc
in
and
and
ljmp
or
insb
out
icebp
loopne
stos
lock
daa
scas
enter
pushl
std
ss
lods
mov
xor
push
jge
and
push
cli
inc
and
aam
aam
call
jnp
test
mov
popf
popf
fs
jg
mov
add
mov
scas
sahf
outsl
mov
ret
fildl
mov
repz
cld
lcall
insl
and
iret
mov
mov
dec
cs
or
xor
inc
inc
xor
mov
fnop
cmp
jg
mov
adc
mov
call
mov
arpl
inc
inc
leave
inc
jg
sbb
push
pop
jge
pop
or
lret
bound
sub
sbbb
mov
lea
push
add
inc
jle
lcall
or
cmp
out
pop
inc
jl
aaa
into
mov
js
filds
imul
sub
jl
repnz
ja
in
lret
mov
ljmp
out
loopne
outsl
sbb
lcall
insl
icebp
jge
mov
sub
mov
incl
sbb
pop
sti
inc
mov
loopne
popf
xchg
lea
pop
pop
arpl
sti
out
es
pushf
push
mov
push
outsl
movsl
into
xchg
mov
mov
arpl
incl
je
shl
imul
mov
add
clc
in
lcall
test
ljmp
mov
adc
ljmp
inc
aas
sti
sub
mov
nop
mov
dec
inc
xor
mov
pop
clc
into
aad
sub
jmp
push
dec
lahf
stos
adc
test
mov
and
mov
mov
rclb
push
jbe
ja
dec
cmp
and
fsubp
shl
pop
xor
dec
push
ss
stos
addb
loope
les
ljmp
lahf
movsl
hlt
fimull
mov
push
push
in
lret
jl
mov
push
jp
out
jg
out
in
imul
andb
out
add
xor
mov
cmp
leave
fs
inc
adc
sub
ret
test
and
push
dec
mov
cmpsb
shrb
ret
sbb
ljmp
push
sub
cmp
xchg
and
loope
lods
cwtl
pop
mov
jg
or
and
ret
outsb
test
out
addr16
xor
xchg
cmp
push
jl
insb
jmp
fldenv
lret
scas
xor
cmp
add
xlat
xchg
idiv
jg
ret
or
jno
xor
sbb
repnz
xor
popa
dec
sar
call
lret
out
mov
arpl
inc
ss
insl
jecxz
lahf
jnp
in
adc
push
mov
bound
stos
jbe
xor
rcr
pop
mov
outsb
std
xchg
mov
lds
mov
jmp
sbb
daa
jmp
push
arpl
imul
fisubs
mov
sar
ja
push
sbb
pushf
stos
ss
sbb
fldl
fiaddl
or
mov
adc
lcall
mov
scas
movb
pushf
sbb
hlt
cmc
fwait
lods
ljmp
xlat
mov
scas
dec
ret
and
movsb
lret
push
lcall
out
rclb
cmc
test
mov
decl
sbb
mov
cmp
dec
in
add
mov
jo
scas
scas
lret
push
in
mov
icebp
inc
out
fwait
iret
ja
call
push
cmpb
xor
popf
fstps
test
cmp
dec
adc
in
jg
ljmp
cmpsb
sub
mov
aam
add
xor
data16
icebp
jns
outsl
xchg
divl
adc
into
jno
test
daa
decl
sub
or
sub
xor
ljmp
ret
xor
das
fdiv
mov
lock
cltd
mov
dec
pop
aaa
inc
ds
loope
clc
mov
adc
cmpsl
mov
ljmp
sbb
xchg
xor
adc
dec
aas
hlt
ret
insl
test
in
mov
push
decl
lods
mov
xor
push
xor
push
pop
cmpsb
les
aas
sub
lret
inc
mov
shr
jp
xor
jne
inc
and
or
push
scas
sbbl
call
push
and
aas
scas
jne
push
inc
push
dec
pop
shrb
xor
mov
pushf
adc
and
xor
decl
mov
jbe
inc
cmpl
int3
push
jns
jne
nop
xor
inc
jns
ss
mov
aas
inc
jnp
js,pn
ret
gs
call
stos
dec
int3
outsb
xchg
inc
test
mov
inc
sbb
insb
lcall
dec
inc
mov
push
fcoml
or
sbb
ret
mov
push
dec
addl
dec
addr16
mov
aas
jo
sbb
inc
mov
jnp
mov
add
rorl
inc
dec
jp
pushl
stos
test
out
jmp
adc
out
push
clc
cs
out
stc
lcall
xchg
xchg
cmovns
in
call
hlt
sub
lea
jne
imul
fbstp
hlt
ljmp
xchg
mov
sbb
cmc
add
stos
test
call
cmp
js
movsl
fmul
ja
lea
sub
daa
add
lcall
lods
addr16
cmc
dec
mov
pop
roll
dec
int3
imul
mov
jno
jae
sub
clc
lcall
in
adc
lods
and
ljmp
sar
push
xchg
mov
out
pop
push
aad
inc
aaa
sub
in
sub
mov
lcall
push
ja
leave
jg
scas
sahf
popf
add
in
pop
fadd
aam
popf
cmp
fstps
inc
mov
jmp
xchg
lret
stos
dec
mov
adc
cmp
add
and
cli
push
or
xchg
mov
jge
repz
jge
push
mov
pushl
dec
dec
repz
pop
lret
fcmovu
fmul
ret
xor
push
mov
pop
sub
mov
pushl
test
mov
jno
add
repnz
cmp
call
pop
lcall
call
mov
cwtl
imul
cmp
adc
xchg
dec
inc
int3
stos
js
test
fsts
pop
pop
in
in
add
fldt
inc
ss
icebp
jno
jge
fnstenv
pop
and
in
mov
test
inc
dec
je
bound
fadds
sub
jecxz
test
jl
incl
mov
add
sub
mov
dec
ss
cmp
dec
mov
fisttps
andb
pop
push
mov
xor
repnz
incb
adc
sbb
ljmp
pop
sti
sub
and
mov
cmpl
lcall
sbb
push
ja
lock
in
mov
sbb
mov
hlt
cmpsb
gs
clc
pushl
std
bswap
and
pop
cmp
sar
mov
cltd
ljmp
add
sbb
dec
iret
in
icebp
push
push
sbb
or
icebp
movsb
dec
push
cmp
stc
decl
out
xchg
lods
out
repnz
dec
inc
aas
mov
mov
mov
mov
mov
clc
aas
lahf
jp
jp
insb
mov
push
inc
mov
mov
pop
add
cwtl
and
sbb
ret
imul
rcrb
movsb
repz
cld
ljmp
mov
dec
fsubrs
cs
xchg
add
enter
call
add
or
arpl
jo
shl
push
and
mov
or
js
repz
mov
nop
mov
push
pop
xorb
out
push
daa
pusha
sarl
lcall
lret
xor
outsl
data16
pop
scas
lods
aas
ja
push
nop
cmpsl
lods
sub
and
cmp
div
mov
aad
fistpl
in
pushl
loope
cmpsb
test
jo
inc
push
shll
mov
es
insb
test
jmp
out
sub
cmp
cli
sub
inc
sub
nop
clc
in
stos
ljmp
inc
adc
in
adc
scas
xchg
or
pop
loop
jmp
push
pop
insb
cmc
mov
fwait
lock
dec
mov
stc
xor
jnp
int
jmp
pop
inc
dec
fcomip
call
xchg
out
stos
mov
into
add
push
std
incl
xchg
xor
dec
push
mov
out
push
cmp
popa
xchg
out
aam
or
ljmp
or
cmp
call
sbb
pop
ret
sbb
jmp
jg
sarl
push
adc
movsb
sub
cmpsl
popf
out
push
daa
arpl
ret
jge
jbe
adcb
mov
mov
out
out
ss
jl
leave
or
ljmp
pop
test
orl
sbb
out
adc
adc
lock
outsb
xlat
lcall
mov
pop
pop
sbb
mov
aad
cmp
sbb
jo
pop
lds
idiv
pushl
ds
repz
repnz
xchg
loopne
seto
loopne
rcr
add
dec
pop
jmp
aad
in
lods
imul
jmp
insl
cmpsl
push
cmp
dec
in
cmpsb
insb
jo
mov
mov
jmp
pop
cmp
cltd
jno
call
xchg
js
outsl
xchg
into
lcall
call
cmp
and
sbb
or
das
test
movsb
rol
sub
and
and
jo
lahf
jns
pushl
xchg
cmp
repnz
ja
and
cmpsl
test
xlat
fldt
cmc
out
incl
jle
adc
gs
cwtl
mov
mov
test
and
decl
jb
loope
sti
int3
cmp
mov
cmp
mov
decl
jo
adc
leave
add
cwtl
notl
lcall
mov
shll
dec
pusha
jae
cwtl
mov
adc
jmp
adc
ds
jmp
push
mov
out
stos
arpl
in
ja
jbe
mov
xor
mov
jl
mov
add
cmp
popa
push
sub
jle
and
pop
push
jo
ljmp
fdivrs
cmpb
mov
and
aas
mov
fwait
popa
incl
hlt
pop
mov
test
cmp
sbb
xchg
lds
pop
cmc
fmulp
sub
dec
call
call
sub
aad
cltd
mov
cmc
xchg
push
push
aad
mov
fistps
mov
add
mov
cmp
dec
inc
push
test
mov
mov
jge
or
sarl
fs
mov
lcall
mov
xor
xchg
mov
popa
bound
cmc
imul
decl
push
popa
mov
push
fsubr
data16
gs
mov
adc
bound
mov
decl
and
mov
push
mov
lcall
stc
lds
stos
fwait
cmp
dec
fsubs
sub
in
mov
mov
xchg
fisubs
push
and
pop
mov
pusha
das
std
jmp
xchg
leave
pushf
xchg
in
stos
and
xor
add
fs
pop
mov
mov
loopne
lret
outsb
cld
aaa
xor
mov
mov
add
jg
jmp
mov
mov
inc
jp
and
nop
push
cli
mov
push
fs
dec
sti
mov
add
call
out
adc
mov
push
cmpsb
in
pop
imulb
add
sub
pusha
out
clc
cmp
ret
mov
mov
loopne
inc
jbe
js
mov
int
andl
ja
imul
ja
movsb
jb
cmpsb
lock
cld
mov
dec
filds
push
outsl
lods
xor
sbb
iret
loopne
ljmp
roll
loope
adc
mov
cs
loopne
add
in
push
inc
fwait
lret
jg
sub
dec
mov
dec
cmp
ficompl
nop
sub
ljmp
jns
push
mov
dec
jl
mov
cmp
jns
lcall
call
cld
sbb
nop
sub
stc
dec
outsl
push
hlt
lds
decl
test
call
jl
and
mov
push
and
repnz
les
icebp
out
cli
in
in
pusha
mov
xor
cld
sbb
jle
arpl
mov
call
decb
dec
aad
pop
push
xchg
or
lahf
sub
mov
ds
sub
dec
in
imul
and
test
pushl
xor
or
lcall
ret
push
stc
adc
filds
in
ss
push
jns
pop
lcall
and
mov
scas
shlb
loopne
jmp
fcoms
mov
mov
ret
xchg
adc
mov
jae
push
cmpl
mov
ss
cmp
fsub
enter
movsb
pop
jb
popa
mov
pop
mov
and
xchg
idivb
jg
incl
adc
int
shrb
out
pop
xchg
stc
cmpsl
inc
mov
lcall
xchg
lock
or
pop
push
test
push
jbe
dec
push
and
mov
imul
mov
out
repnz
mov
xor
es
std
daa
dec
imul
push
stos
push
jmp
cmp
jbe
sbb
add
fisubrs
ds
add
xchg
jmp
jmp
add
call
sbb
cs
mov
pop
insb
sbb
scas
xlat
into
cld
fidivs
mov
imul
es
addb
notb
mov
insl
ret
int
xor
inc
fmul
lock
add
inc
testl
pusha
and
jnp
add
in
cwtl
inc
nop
push
pop
push
js
lcall
mov
add
and
ljmp
sbb
cmpsl
icebp
jecxz
in
mov
test
iret
fld
outsl
cltd
jns
lods
dec
decl
inc
scas
cmpsl
mov
mov
cmpb
push
andb
lea
pop
or
add
ljmp
adc
jno
xchg
aaa
mov
dec
or
iret
test
or
pop
std
pop
cmc
cld
push
lods
popf
fs
or
mov
jbe
xor
jl
dec
insb
scas
xchg
sbb
jp
lret
stc
and
clc
mov
or
adc
mov
jbe
sbb
fs
xor
ja
fucomi
outsl
pop
mov
movsl
dec
fisttpll
jge
outsb
or
sub
fidivrs
subl
inc
pushl
scas
push
adcl
dec
fcmovu
mov
push
push
mov
jmp
rorl
inc
stc
pop
mov
out
cmp
lcall
cmpsl
cld
divl
xchg
add
dec
mov
dec
add
in
push
add
js
repnz
incl
out
sub
cmp
aaa
pop
push
pop
or
ljmp
jge
andb
and
sarl
insb
mov
es
movsb
mov
jmp
dec
lods
sub
adc
inc
jp
pop
mov
jae
scas
aaa
icebp
std
sahf
sub
ret
cmp
call
xor
mov
pop
push
in
pop
mov
and
cli
mov
push
dec
lock
push
jns
stc
and
pop
xor
daa
adc
ja
lods
pop
les
cltd
movsb
inc
cmp
cld
fsts
push
sbb
sub
rolb
mov
and
dec
outsb
jnp
inc
out
cmpsb
jns
decl
in
orl
sub
cmpsl
lcall
outsl
sbb
fsub
jp
xchg
xchg
loop
les
clc
xlat
mov
lret
out
subl
push
sbb
test
lods
pushl
jbe
adc
loop
sbb
mov
cwtl
sbb
lods
cmp
cmp
mov
dec
dec
es
lock
les
add
xchg
nop
push
jmp
adc
adc
xlat
loopne
cmpsl
push
jmp
xchg
pop
jo
hlt
scas
and
or
ljmp
jbe
arpl
fisubrs
loopne
push
int3
test
mov
cltd
incl
and
fistps
dec
inc
adc
xchg
lahf
jle
mov
int3
pop
pop
sub
loope
dec
cmp
cmp
nop
push
int3
adc
ja
dec
stos
mov
mov
ficoms
imul
xchg
addr16
xlat
lea
xchg
ljmp
fcmovne
mov
pop
push
mov
sarb
add
repnz
mov
ljmp
lahf
lahf
push
mov
ljmp
shll
nop
push
into
add
movsb
je
xchg
mov
negb
aad
sub
jne
push
int
push
repz
add
jmp
popw
mov
sbb
lret
adc
imul
pusha
jno
sarl
pushf
add
icebp
xchg
mov
pop
jo
dec
inc
adc
rolb
mov
in
sbb
adc
sarb
sub
out
dec
call
insl
ljmp
rorl
pop
xor
mov
bnd
sub
movsb
int3
lret
scas
je
inc
lcall
mov
dec
mov
ffreep
mov
mov
mov
out
jl
mov
hlt
xchg
inc
jne
pop
insl
test
jmp
mov
mov
jp
lcall
sti
adc
and
add
or
xchg
mov
aas
outsb
pop
inc
or
in
xchg
mov
jbe
sbb
jmp
stos
mov
inc
lods
adc
insb
enter
fists
lret
stos
adc
dec
mov
inc
hlt
pop
and
cmc
mov
add
pop
in
push
ljmp
loope
lock
cmp
push
stos
and
mov
bound
out
ret
mov
jo
pushl
cwtl
and
imul
sbb
lret
and
das
xchg
in
lcall
mov
mov
lds
addr16
in
addr16
inc
sub
das
and
jge
insb
clc
idiv
fstp
push
mov
xor
sub
repnz
call
sub
sbb
pop
nop
jb
add
mov
sbb
lods
inc
xchg
jmp
mov
imul
mov
fbstp
xchg
adc
dec
scas
dec
out
ret
lcall
push
sbbb
std
push
lret
sub
push
in
sbb
incl
psrld
lret
bound
mov
out
mov
dec
adc
add
dec
ljmp
fcmovb
cmp
and
fnstenv
insb
jecxz
push
and
outsl
inc
add
push
movsb
dec
rclb
push
sti
cmp
mov
ret
scas
xchg
add
dec
and
and
rclb
call
stos
xchg
popf
cli
rorl
out
and
xchg
mov
xchg
mov
js
push
sarb
int
or
and
cmp
jecxz
cmp
mov
nop
inc
sub
inc
mov
pop
les
hlt
cmp
cmp
pushl
pop
dec
fsubrp
add
sbb
rol
push
cmp
movsb
xchg
cmp
ljmp
aam
cwtl
pop
dec
mov
cmpl
add
push
lcall
test
dec
mov
je
loopne
int
dec
stc
adc
test
pushl
cwtl
push
sub
addb
inc
lods
xor
lcall
sbb
lret
push
jbe
or
lcall
mov
cmc
cmp
lret
call
nop
ret
cld
lcall
divl
hlt
jb
push
loopne
xor
mov
jmp
dec
jl
in
popa
decl
scas
data16
mov
jo
jnp
adc
stos
push
daa
mov
decl
loop
sbb
rcll
jae
imul
mov
pop
hlt
xlat
or
push
push
mov
aam
jne
and
imul
dec
jge
jecxz
stc
add
ljmp
mov
jae
repnz
and
popl
fsubl
sti
mov
aaa
ret
fcomip
jmp
pop
add
les
fcoms
sub
mov
jmp
scas
pop
repz
mov
or
aas
jnp
mov
dec
push
scas
or
call
xorb
and
sbb
push
nop
into
sbb
call
inc
mov
mov
xchg
push
leave
flds
aad
pop
push
pushl
cltd
movsb
xchg
ja
jl
pop
mov
sbb
jle
lock
test
cmp
test
movsb
scas
loop
ljmp
ret
push
mov
outsb
pop
bound
fnstcw
jp
mov
adc
sub
stos
fs
or
xchg
xor
ret
mov
mov
cld
lret
incl
adc
aaa
or
pushf
adc
mov
push
jno
lret
stc
bound
mov
mov
aad
sti
loope
fbstp
aas
push
jne
lret
sub
loop
ja
mov
mov
dec
shl
js
lods
cwtl
sbb
pop
stc
and
mov
call
xor
dec
lds
mov
adc
iret
push
out
push
adc
xor
or
rcrb
ficompl
lcall
cmp
pop
aas
daa
shr
push
dec
and
leave
in
and
push
sub
jae
lods
sbb
out
clc
jmp
and
pop
or
shrb
push
pop
test
movsl
fxch
test
pushl
xchg
pop
ds
pop
clc
loope
sbb
inc
push
and
xchg
dec
subb
lcall
shrb
lret
cltd
pop
cs
mov
xchg
test
or
xor
cmp
adc
jno
repnz
mov
sbb
dec
movsl
rcll
add
jmp
lea
int
xor
mov
adc
adcl
fwait
ja
lods
filds
out
pop
mov
repnz
inc
sub
shrb
xchg
adc
push
inc
lock
loopne
or
cltd
cmp
jmp
sub
dec
push
insl
xchg
addl
mov
andb
loopne
lock
jg
lcall
cwtl
repnz
mov
popa
dec
movsl
pop
fsubl
xor
xchg
into
es
aad
adc
cmp
subl
mov
or
or
inc
ds
and
mov
adc
pusha
inc
sarb
xchg
xchg
cld
dec
shll
mov
leave
xor
jg
call
push
jno
pop
or
inc
jmp
cmp
lret
sub
enter
adc
rolb
jmp
insb
cmpsl
mov
loop
arpl
pop
jo
xor
addr16
jp
mov
jp
in
adcl
mov
inc
sbb
sbb
gs
ret
loop
mov
jmp
out
cltd
xchg
push
sub
int3
xor
pop
roll
lock
and
inc
push
push
adc
outsl
dec
lahf
or
sub
aas
pushf
xchg
imul
and
bound
inc
gs
pop
outsb
bound
and
or
xor
insl
in
mov
dec
out
cmpsb
cwtl
xor
aaa
std
jmp
mov
mov
cmp
cmp
icebp
in
mov
inc
dec
cli
decl
mov
icebp
stc
sub
les
add
decl
imul
add
shl
mov
lahf
call
inc
push
xor
ljmp
fcomps
mov
clc
mov
adc
adc
insl
dec
and
ljmp
movsb
fcomps
repz
push
cli
jl
jmp
and
or
inc
lret
bnd
and
jmp
testl
mov
ljmp
call
push
push
arpl
pop
inc
lret
and
pop
addr16
int3
aam
dec
stc
arpl
int
push
mov
shll
xor
movsw
out
mov
jle
incl
jnp
dec
adc
or
cltd
aas
aam
loope
mov
icebp
insl
jnp
cli
jg
call
dec
sarb
movsb
mov
pop
stos
ss
incl
jae
neg
mov
repnz
es
fidivrs
fs
decl
fs
shll
jnp
mulb
dec
jno
add
jmp
mov
test
jb
fnstsw
outsl
mov
les
lods
ds
mov
bound
ss
inc
fwait
add
mov
test
sar
decl
lret
jp
clc
popa
test
cmc
icebp
push
sahf
add
pop
out
mov
jns
mov
jl
fcompl
sub
mov
fs
loopne
mov
dec
or
cli
fisttpl
rcrl
aam
mov
pusha
in
out
mov
decl
or
and
out
xorb
jecxz
pushf
notb
mov
mov
pop
lcall
subb
testl
pop
xchg
adc
mov
push
xchg
test
sti
xor
jns
sahf
mov
sbb
test
test
push
addb
rclb
xor
call
idiv
mov
mov
ljmp
pushf
push
push
adc
push
incl
push
pop
sar
xchg
dec
fcmovnu
andb
lcall
shll
sbb
pop
loopne
hlt
xchg
fsubr
push
pop
dec
xor
call
fwait
ljmp
pushf
ja
cmp
xchg
mov
outsl
insl
clc
and
loopne
dec
popa
mov
jge
fildl
sub
stc
repnz
xchg
repz
or
cmp
repz
push
sarl
stc
push
adc
orb
enter
ret
fisttpll
jmp
push
popf
sub
ss
es
inc
lea
das
xlat
ret
pop
fs
mov
movsl
adc
gs
negl
mov
das
movsb
lock
nop
mov
push
pop
daa
cwtl
fcmovbe
roll
add
iret
dec
adc
and
inc
cmc
sti
jl
jmp
cmp
adc
pop
mov
std
jns
rclb
jnp
pop
mov
sub
push
lea
cld
cli
aam
icebp
mov
insl
or
mov
or
sub
aas
and
adc
mov
inc
ret
scas
pop
xchg
repz
outsb
jecxz
dec
jnp
push
je
jp
sub
fisubrs
insl
mov
fmulp
push
cmp
leave
gs
ffreep
pop
repz
dec
leave
sbb
int
mov
jecxz
xchg
out
daa
xchg
adc
or
stc
ljmp
sub
add
loop
push
jb
mov
pop
hlt
call
jl
or
pop
cmp
test
cli
faddp
adcb
dec
fildl
xchg
jns
mov
xchg
test
mov
fstpl
ss
push
jmp
mov
inc
xchg
test
lcall
sub
in
mov
loop
std
dec
jno
movsl
test
aam
push
aad
movsb
cld
cld
jmp
aam
sahf
mov
jmp
insl
pop
enter
xor
cwtl
and
cmp
push
cld
and
push
push
cltd
cmp
inc
aas
or
dec
push
mov
xchg
fs
arpl
mov
punpckhwd
insb
rcr
mov
cmpsl
jp
jmp
jmp
decl
push
inc
inc
scas
and
adc
sub
xor
mov
rcrl
mov
mov
mov
cmc
inc
nop
enter
jge
fbld
add
pushl
test
jle
jmp
js
jp
dec
notl
insl
cmp
incl
adc
fiaddl
stos
icebp
jns
ret
int3
or
jge
popa
call
je
lods
sbb
mov
xor
icebp
mov
pop
mov
push
pusha
sbb
inc
test
das
les
jae
mov
and
jg
xchg
push
push
ja
cmp
loop
add
call
mov
hlt
xchg
scas
sbbb
mov
daa
jo
sub
xlat
mov
mov
xchg
call
ljmp
iret
xchg
clc
je
rorl
movb
jb
inc
clc
incl
xor
lahf
sti
mov
lods
lock
push
fsub
jmp
or
cmp
xchg
shll
ljmp
pop
xlat
xchg
mov
or
xchg
rcl
sti
popf
sbb
sub
pusha
sahf
lcall
push
mov
lcall
inc
cmp
pop
aaa
ror
dec
xorl
add
shr
push
xchg
lcall
out
loop
sub
push
leave
push
dec
fwait
adc
bound
xchg
adcb
incl
xchg
test
cmp
into
outsb
popa
ljmp
xlat
in
cmpsl
cmp
lcall
mov
shlb
stos
mov
ds
sbb
jl
cli
jmp
pushl
dec
sbb
adc
xor
stos
lds
subl
fidivl
xchg
mov
adc
mov
sub
lock
out
mov
jmp
pop
outsl
sbb
les
sub
xchg
in
fistl
xor
jmp
fcompl
jle
popf
mov
inc
fdivl
xchg
mov
decl
pop
jo
pop
jl
adc
push
es
jo
inc
sub
mov
sub
repz
in
pushl
push
inc
sub
std
cmp
xchg
mov
in
inc
inc
gs
and
test
and
mov
jg
dec
cmp
push
jmp
dec
push
dec
adc
stc
mov
cmp
clc
aaa
xchg
mov
mov
jmp
jnp
rorl
mov
xchg
test
cmp
rorl
xor
mov
hlt
lcall
jge
lods
inc
xchg
xchg
lret
cmc
cmp
in
xor
sti
mov
dec
jl
mov
sub
std
jg
insb
mov
mov
fbld
inc
jo
pop
in
popf
mov
push
cmpsb
and
dec
push
and
add
mov
cmp
out
clc
lds
jns
mov
pmulhuw
insb
jmp
and
addl
ljmp
inc
push
scas
jge
add
imul
dec
cmp
push
outsl
push
shll
mov
adc
dec
or
stc
sahf
test
addl
pushl
inc
dec
push
cmp
repnz
fildl
push
jo
jbe
mov
xchg
pop
xor
loop
lcall
scas
adcb
dec
pushf
dec
sub
xchg
inc
movsb
push
icebp
lods
jno
out
rorb
push
mov
call
push
push
iret
out
xor
decl
dec
push
daa
dec
sub
test
or
cltd
cmp
iret
inc
mov
dec
fisubs
pop
fs
outsb
rorb
mov
fsubrl
dec
int
jmp
out
adc
jge
lret
aaa
jp
xchg
jmp
ret
outsb
pop
and
lcall
inc
adc
test
push
orl
cltd
addr16
das
cmp
pop
insl
inc
or
dec
adc
icebp
xor
decl
and
mov
or
stc
lock
leave
push
cwtl
dec
inc
orl
sub
xchg
mov
pop
and
xlat
mov
int
fs
call
in
lods
sbb
in
xchg
dec
mov
stc
inc
pop
test
mov
in
and
movsl
aam
mov
loopne
sti
and
sbb
stc
push
pop
das
jmp
jg
dec
shll
dec
mov
mov
loop
lret
push
mov
adc
xor
pop
je
pop
jmp
jno
decl
mov
cmp
leave
icebp
xor
jns
dec
aam
inc
or
jl
cmpsb
fildll
add
call
sarb
fwait
push
subb
pop
das
fadds
jg
loopne
dec
mov
popf
rep
mov
inc
sub
mov
jle
pop
adc
or
decl
decl
icebp
orb
in
mov
popf
jge
jo
stos
imul
fdivl
mov
cli
jo
mov
cmp
sub
inc
xlat
es
xchg
loopne
sbb
add
pop
inc
mov
fwait
loope
lcall
or
dec
add
test
loopne
xor
lcall
cmp
cwtl
mov
jg
cmp
add
pop
aaa
call
insl
ljmp
push
pop
call
int3
push
idiv
mov
icebp
dec
mov
pushl
adc
hlt
test
add
mov
imul
xlat
test
stos
mov
pushl
mov
arpl
jecxz
xchg
cmp
mov
xchg
in
out
daa
cmpsl
inc
lock
call
xchg
and
xchg
push
cmp
test
fs
sbb
mov
lcall
jns
movsl
mov
or
xor
cwtl
cli
xor
ss
xor
jmp
inc
pop
pop
mov
cld
mov
mov
shlb
dec
push
mov
lcall
incb
push
rcrb
fsubr
int
int
xchg
mov
xchg
cmpsb
adc
push
std
jmp
div
mulps
fcomp
jge
lcall
negb
arpl
lcall
xchg
js
das
fstl
and
or
add
dec
mov
loopne
cld
lcall
es
out
cmc
fcom
adc
xor
pop
mov
pushl
fisubrl
pop
sub
test
gs
push
jnp
decl
movsl
lahf
or
pop
sti
ret
push
and
andb
fldl
mov
mov
loop
jnp
mov
nop
enter
outsl
loop
sbb
sbb
jg
call
ficomps
xbegin
and
rcrb
lock
lock
loopne
inc
xor
rol
add
dec
xor
inc
pop
into
mov
cmp
addr16
mov
xchg
mov
mov
jmp
stc
jg
push
inc
sbb
out
cmp
sub
lahf
aam
or
push
fisttps
and
mov
xor
cli
nop
and
jmp
adcl
cmp
out
stc
fstl
repnz
stos
mov
js
call
or
pop
emms
pop
aaa
mov
shl
ss
outsb
pusha
test
dec
pop
into
ljmp
jo
rorb
fcmovne
mov
or
arpl
cmpsl
subl
in
fists
pop
jecxz
sbb
push
test
dec
push
add
lret
insb
dec
repnz
sbb
call
jge
testl
scas
jl
sub
cmp
add
sbb
fstl
into
mov
cwtl
cmp
adc
push
sub
pop
leave
push
loopne
aam
out
int
jle
nop
jo
or
iret
es
push
mov
call
sub
add
mov
pop
sub
adc
sbb
push
cmpsl
dec
ret
leave
lahf
xchg
dec
lcall
mov
gs
sahf
add
neg
outsl
sub
in
add
decl
call
das
or
sub
push
mov
jmp
testl
aad
dec
dec
mov
cs
incb
sbb
arpl
jecxz
dec
mov
lahf
mov
mov
fistpl
cmp
test
jae
loopne
mov
mov
push
outsb
or
cmpsb
adc
sbb
dec
pop
pop
push
data16
leave
test
inc
in
jp
outsl
cmp
push
decl
jb
out
bound
test
sarb
cmc
fwait
movsl
sbb
clc
mov
pushf
mov
mov
mov
dec
mov
xor
add
or
sahf
stos
mov
les
loop
lock
adc
call
or
mov
jle
ljmp
jb
jmp
dec
shll
adc
dec
in
fwait
cli
cmpsb
mov
iret
lds
sbb
popf
or
jle
loope
pushl
jecxz
inc
lock
ds
mov
jnp
mov
sub
int
pop
mov
xchg
sbb
inc
cmp
sbb
fisttpl
push
fbstp
mov
mov
pop
mov
repnz
decl
cmpsb
mov
push
in
mov
push
pop
xchg
jb
jle
jb
jns
xlat
xchg
mov
xchg
lret
push
fwait
pusha
out
fwait
jne
sbbb
movsl
xchg
subb
rcrl
sar
mov
push
pop
inc
data16
xchg
pop
por
xchg
test
cli
cmpsl
fldenv
add
int3
in
ss
and
cmp
mov
push
stos
jecxz
inc
jl
shll
xor
cmp
jp
pushl
rcll
sbb
int
ret
sahf
pop
stos
lret
mov
mov
sbb
pop
mov
add
hlt
nop
int3
ficomps
mov
and
incl
jmp
sti
cs
xor
cmp
das
jl
fsts
mov
shrb
inc
jp
dec
inc
call
mov
into
add
into
jnp
out
cmp
pop
xchg
shrl
jecxz
add
in
dec
or
jge
pop
fidivs
movl
in
xchg
popf
add
jmp
lods
ljmp
sbb
cs
lcall
ljmp
inc
xor
add
lcall
and
fisubrs
mov
jle
jbe
or
pushl
fimuls
jle
daa
aam
mov
dec
xchg
xchg
inc
inc
sub
mov
fidivl
in
jo
cli
or
mov
outsb
xor
xchg
pop
push
dec
push
xchg
xchg
inc
xchg
and
mov
xor
ljmp
es
cmp
scas
fld
lcall
adc
arpl
bound
dec
mov
cmp
lcall
lcall
dec
xorb
and
ja
cmp
ds
sbb
pushf
pushl
push
aaa
test
outsl
mov
and
mov
xlat
adc
cmp
clc
int3
fisubl
mov
mov
add
mov
mov
xchg
je
adc
mov
inc
repnz
ljmp
pushl
andb
inc
xchg
clc
aam
mov
add
xor
mov
ljmp
xchg
ret
push
and
xor
sub
mov
lahf
inc
fiaddl
pusha
and
adc
or
outsb
push
mov
cmp
adcl
daa
mov
fucomip
pop
imulb
pop
inc
lret
aas
pop
lcall
or
pop
mov
into
push
xor
cmpsl
pusha
daa
mov
hlt
lahf
mov
jae
pop
sbb
incb
fcoml
cmp
cmp
into
mov
repz
push
push
dec
and
push
inc
pop
jl
sar
and
loope
sahf
addr16
inc
lcall
mov
cld
enter
or
push
or
cmp
ljmp
clc
nop
testb
scas
cltd
stos
mov
repnz
lock
mov
mov
sub
insl
les
add
adc
push
call
sub
ja
adc
dec
rcr
into
lret
in
fisttpll
push
push
outsb
push
mov
fldenv
jns
decl
xor
mov
mov
dec
les
js
mov
out
jnp
into
jns
jg
jmp
js
push
jne
add
movsb
icebp
push
jns
jbe
jo
pop
sar
lcall
lret
test
inc
outsl
imul
inc
test
add
ljmp
jl
dec
inc
dec
pop
mov
jle
mov
insb
adc
jne
lock
out
push
decb
imul
sbbb
push
clc
mov
xchg
or
cmpsl
xchg
out
call
or
ljmp
sbb
pop
sbbb
ret
es
cli
ljmp
int3
dec
fldenv
lret
vmaskmovdqu
shl
cli
mov
bound
push
sahf
or
jmp
jge
push
in
push
loope
and
push
fs
and
push
jg
rcr
sahf
sbb
data16
adcb
inc
pop
xlat
cs
gs
xor
mov
or
int
push
inc
call
int3
add
ja
sub
in
xor
in
call
adc
cmc
inc
scas
and
out
mul
xlat
int
test
data16
or
out
fbstp
fs
and
nop
xlat
xchg
bound
loope
std
out
stc
adc
lock
mov
adc
push
pop
xchg
sub
cli
call
sub
inc
pusha
push
es
jl
fistl
jg
dec
xchg
sbbb
std
xchg
and
aas
jae
sub
mov
mov
ljmp
cld
in
pushl
adc
or
rcrl
lea
in
jle
mov
xchg
mov
xor
sub
es
mov
mov
adc
sbb
scas
clc
pushl
xchg
pop
mov
jp
inc
xchg
jle
inc
lcall
jmp
mov
mov
ret
jo
fwait
pop
sbb
or
adc
js
bound
clc
je
daa
push
mov
or
jno
pop
inc
push
lods
mov
push
cmp
pushl
fistps
cwtl
or
add
xor
mov
mov
mov
lret
repz
or
fimull
sti
mov
jns
fcompl
add
ss
mov
aam
outsl
movsl
les
call
repz
jg
nop
xchg
and
mov
jne
or
in
or
idiv
lods
fs
ljmp
and
mov
pushl
xchg
push
mov
bound
stos
pop
sarl
jmp
adc
int
mov
add
scas
inc
repnz
dec
pop
je
cmpsl
cwtl
mov
jl
sub
outsl
add
incl
add
out
orb
fists
cmp
mov
pop
push
stos
bound
mov
adc
sti
test
dec
xchg
aam
push
cld
xchg
test
aaa
pop
mov
fbld
std
mov
jb
jmp
int
divl
push
ficompl
int3
lods
add
mov
das
mov
jg
cwtl
dec
push
nop
je
inc
fildl
xchg
lret
jle
lock
dec
sub
movsb
cmc
jmp
in
in
mov
faddl
ret
push
movsl
call
int
std
cmp
add
lcall
pop
mov
push
push
push
cmc
push
jnp
test
mov
xchg
push
sbb
cmp
mov
pop
and
sarb
aas
jbe
fstps
fs
fdiv
pushf
cmpsb
in
cmp
inc
aas
lcall
or
lds
lods
push
xchg
cmp
jne
jmp
xchg
pop
cmpsl
imul
int
sub
jg
negb
sub
mov
lahf
or
sbb
mov
jmp
call
and
fistl
adc
out
and
int3
pusha
aas
cmp
xor
pop
mov
orb
mov
in
shrb
js
mov
into
ljmp
jnp
enter
push
or
out
gs
les
pop
and
inc
nop
dec
shll
scas
push
insl
sub
test
mov
addr16
sbb
jge
decl
ficomps
pop
popl
and
in
pop
lods
jp
push
movsb
sbb
lcall
and
bnd
push
test
loop
xor
adc
enter
sbb
mov
pop
test
in
mov
aas
add
mov
mov
adcb
inc
aad
iret
jbe
push
mov
pusha
icebp
daa
xchg
jge
cmp
push
xor
int3
scas
push
adc
adc
sti
sub
inc
shl
repnz
cmpsb
sub
out
or
int3
inc
sub
loop
lock
into
mov
mov
lcall
mov
fcoml
xor
mov
jp
xchg
rclb
clc
lods
mov
sub
in
adc
pop
ret
xchg
dec
and
leave
iret
or
iret
xor
sub
adcl
inc
sbb
pushf
int3
jge
adcl
mov
pop
fistpll
or
adc
push
es
cmp
adc
hlt
dec
out
xchg
push
mov
aaa
rclb
cmp
incl
js
add
loope
pop
inc
sarb
ja
out
pop
fldenv
cmp
jg
lcall
sbb
sti
fcoml
fcomps
scas
and
push
dec
sbb
call
daa
ja
mov
insl
loope
cltd
and
mov
loope
pushf
or
aas
mov
xchg
ret
nop
lret
clc
loopne
adc
subl
pop
jmp
inc
imul
cld
fbld
jmp
fldl
mov
push
xor
jmp
imul
jmp
lret
push
mov
inc
pop
push
movsb
fnsave
mov
or
scas
cltd
adc
fstps
dec
xor
in
dec
lods
lret
addr16
repz
sbb
bound
ret
jg
and
dec
sub
fsubrl
in
jg
pop
loopne
int3
sbb
sub
mov
sbb
adc
cmp
mov
decl
adc
fs
popa
xor
mov
xchg
mov
pushl
std
mov
les
xchg
lcall
decl
push
ret
xchg
adc
mov
decl
xor
enter
inc
mov
inc
movsl
sbb
test
call
xchg
icebp
cld
les
push
lods
inc
push
cmp
cmp
out
sub
xlat
addr16
xor
nop
and
lcall
fildll
push
jnp
and
mov
rcr
lods
lret
test
out
mov
xor
push
test
call
cld
cmc
mov
ds
push
mov
js
inc
inc
into
out
scas
jmp
xor
cmc
out
int3
cld
jno
rorl
pop
adc
push
mov
flds
sti
xchg
adc
cmp
hlt
ljmp
clc
cmc
and
push
add
repnz
jecxz
scas
popa
mov
and
repnz
mov
jb
cmpsl
shlb
enter
push
hlt
push
outsl
jp
pop
xchg
push
pop
cld
jmp
dec
imul
jne
ljmp
xchg
ja
xor
xchg
call
int3
fcomps
xchg
addr16
gs
out
sbb
push
int
ljmp
lret
cmp
sub
or
test
cmp
or
loop
out
filds
shr
enter
lcall
out
xchg
loop
fwait
rorl
fcoml
mov
das
popaw
mov
pop
mov
pop
cwtl
jg
es
lret
pop
and
ret
xchg
inc
out
pop
dec
pop
cmp
incl
gs
fcmovbe
add
cld
inc
cmp
and
jg
pop
jmp
and
pushl
cld
adc
js
jbe
adc
fisubrs
subb
sbb
jmp
decl
lods
bnd
xchg
dec
push
out
aas
stos
dec
pop
pop
int
adc
dec
push
or
incl
mov
out
lret
xchg
loopne
push
sbb
into
push
inc
and
sbb
pop
adc
and
sub
fiadds
outsl
das
add
addb
addb
or
add
pop
imul
incl
and
or
scas
insl
add
js
push
jg
add
andl
rcrb
mov
fwait
xchg
js
add
add
in
pop
dec
orb
adc
inc
pop
mov
add
and
jle
dec
sbb
add
cmpsl
inc
jno
nopl
scas
push
inc
xor
inc
in
repnz
or
jnp
xchg
repz
fstpt
mov
xchg
dec
and
cmpsl
push
and
pop
rcr
and
movsb
push
movsb
inc
scas
push
mov
and
stos
push
and
push
mov
mov
test
and
imul
push
inc
pop
pop
add
stc
pop
lds
mov
pop
sbb
add
jg
pop
inc
mov
pusha
sbb
mov
lcall
les
push
adc
fs
mov
insb
or
lret
imul
out
push
leave
imul
imul
out
mov
jbe
fstps
fdivs
mov
stos
pop
stos
mov
enter
ss
add
jo
ss
mov
mov
push
shll
add
outsl
push
shll
fidivrl
fistl
iret
outsb
or
push
ret
je
jle
mov
out
jge
fisttps
add
fwait
inc
lret
rcr
aam
mov
in
movsb
push
add
mov
xor
not
jno
mov
dec
sub
add
jne
imul
push
ret
add
mov
lods
pop
add
push
pop
dec
add
fsubrl
jo
push
data16
inc
lahf
ja
sbb
cs
push
shlb
pop
rep
push
lret
stos
aas
add
ja
outsb
lods
sti
out
push
push
xlat
jne
add
ja
fsub
mov
push
aad
push
xlat
ja
js
push
ds
jns
push
jp
jp
inc
push
fidivrl
sub
or
sarl
ja
fldl
lds
inc
jmp
ljmp
insl
xchg
sub
xchg
in
xchg
sub
xor
ja
xchg
xor
xchg
push
setbe
xor
dec
fisttpl
push
lcall
testl
push
pushf
cmp
popf
inc
mov
pop
xchg
popf
aas
push
sahf
inc
push
lahf
inc
lahf
mov
out
mov
push
jecxz
push
imulb
movl
fdivr
out
out
push
hlt
clc
iret
repz
stc
cli
sti
cld
std
insb
lock
inc
jo
add
mov
jae
add
es
add
popa
push
add
pop
int3
data16
add
pop
add
pop
fadds
add
inc
mov
stos
mov
mov
add
mov
push
mov
add
add
cwtl
outsl
or
or
imul
test
test
or
push
mov
mov
pop
adc
fwait
imul
pop
lods
pop
stos
femms
lods
lods
pop
mov
jne
mov
add
scas
jo
jnp
insl
lods
pop
pop
adc
add
push
inc
and
adc
fstpl
sbb
scas
scas
scas
jae
repnz
sbb
mov
mov
cmpsb
jns
jb
mov
mov
push
add
mov
ret
or
lock
and
mov
mov
lods
xchg
mov
mov
cmp
push
and
mov
insb
repz
sub
mov
lods
xchg
mov
mov
xor
pop
daa
mov
mov
es
int
pop
aas
cmp
shll
dec
pop
cmp
sti
decl
mov
aaa
cmpsb
add
mov
pop
xor
in
int3
insb
pop
pop
or
or
add
pop
insl
pop
pop
xor
mov
pop
das
push
cs
xor
add
sub
xor
push
xor
adc
pushl
pop
push
cs
dec
inc
das
inc
inc
xor
adc
push
xor
push
push
popa
jbe
dec
dec
adc
cmp
jl
jge
jno
add
mov
xor
pushw
cmpb
jo
mov
inc
addr16
incl
movsb
movsl
mov
cwtl
sahf
mov
pushf
fwait
lcall
int
decl
test
xchg
xchg
sub
dec
ja
jns
dec
outsl
fwait
push
jle
bound
js
imul
cmp
je
and
bound
dec
add
add
test
int3
pop
scas
aas
scas
mov
repz
mov
dec
add
push
mov
cmpsb
push
jle
fcmovnu
mov
xor
xor
ja
push
ja
jb
mov
dec
xor
mov
mov
mov
pop
jbe
dec
sbb
cmpsl
fnstcw
pop
xchg
jo
adc
fistpl
inc
mov
cmp
mov
inc
pop
push
xchg
jae
jp
inc
subb
aaa
add
xchg
jno
in
daa
sub
jb
push
bound
mov
mov
mov
lahf
inc
inc
push
sahf
mov
insb
data16
xchg
outsb
add
xchg
xchg
pop
push
test
cmpsb
dec
push
add
push
movsb
jae
add
jb
shll
loopne
incl
push
rorb
add
lcall
mov
mov
dec
push
add
ja
sahf
jbe
cmp
push
add
add
ds
push
add
jnp
jp
add
js
mov
scas
cmp
data16
shrl
insb
pop
outsb
push
outsl
scas
mov
push
ds
jno
add
mov
pop
sarl
jg
fiadds
call
push
out
data16
adc
cld
aad
cmp
in
mov
push
arpl
imul
loopne
iret
sahf
mov
in
add
jb
out
in
push
jle
je
and
orb
push
fnstcw
aad
push
divb
fildl
adc
dec
movsl
jns
push
adcl
insl
push
sbb
sbbl
test
test
sbb
cmp
in
mov
push
xchg
nop
and
mov
mov
out
xchg
in
xchg
lock
sub
sub
dec
sti
rolb
outsb
out
xchg
das
push
xchg
repnz
fstp
cltd
xor
cwtl
push
cmc
sahf
xor
lcall
or
cmp
pop
movsb
add
cmpsl
push
cmpsb
scas
jo
test
adc
ret
sbbb
stos
mov
shll
add
int
mov
mov
sarb
repz
rcl
mov
push
inc
jp
ret
data16
add
addr16
adc
std
dec
out
je
add
xchg
inc
dec
daa
push
test
add
and
femms
or
or
out
in
mov
or
es
push
adc
push
add
sti
pop
adc
adc
ds
add
xor
pop
mov
xor
ds
loop
mov
mov
mov
mov
mov
push
add
and
mov
mov
loopne
ds
mov
xor
aad
aas
and
lock
mov
xor
or
push
enter
aas
cmp
lret
jae
cmp
cmp
add
mov
sbb
inc
jbe
cmpsl
insl
mov
cmp
inc
jle
adc
jbe
cmp
dec
mov
scas
ds
jle
aas
addr16
ds
xor
dec
inc
popf
test
scas
add
jge
addb
xor
pop
mov
xor
outsl
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
jg
jg
test
mov
sahf
ds
xor
sub
sub
sub
sub
or
ss
and
xor
inc
mov
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
jne,pt
fwait
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
jmp
je
xchg
jns
jle
addl
jb
jae
jo
outsb
pushf
sti
lds
loopne
jge
test
add
popa
jo
mov
out
movsl
imul
clc
out
adc
repz
dec
xor
out
out
nop
lods
out
aas
add
xchg
insl
sti
lcall
add
mov
add
mov
push
mov
fnstsw
lahf
add
cmc
repnz
inc
add
gs
pushf
add
mov
popf
add
ret
push
in
lcall
or
mov
fdiv
push
or
jae
js
pop
into
xchg
add
mov
mov
test
push
adc
ljmp
mov
out
loopne
sub
insb
pop
fstpt
sub
xchg
push
sub
nop
sub
fistl
out
xchg
xor
xchg
outsb
lcall
sahf
insl
es
jbe
negl
fcmove
aas
mov
outsl
fst
es
push
lret
loopne
push
std
and
or
fdivrp
divl
pop
and
add
sbb
add
jge
and
inc
push
xchg
push
dec
dec
dec
dec
dec
dec
add
mov
call
dec
or
adc
cmp
adc
dec
or
dec
dec
dec
inc
add
push
adc
add
or
pop
repz
pusha
pop
cmovg
inc
push
dec
sbb
cmpsl
std
pop
inc
and
dec
and
adc
sbb
dec
in
in
add
dec
adc
inc
ds
cmp
cmp
cmp
daa
and
lcall
sbb
sbb
and
add
dec
ss
xor
sub
sub
or
pushw
mov
addb
mov
pop
mov
mov
fucomi
inc
mov
ss
add
outsb
mov
push
add
add
and
mov
pop
xor
outsl
mov
cmpsl
rorl
and
cs
incl
or
jmp
xlat
sub
sbb
incl
and
sbb
pop
mov
es
dec
inc
xchg
xor
mov
jnp
pop
stc
sysret
in
lock
hlt
movups
jg
adc
test
ja
pop
push
rorl
outsl
add
jg
push
mov
pop
lahf
pop
or
mov
sbb
cli
add
push
mov
cli
filds
call
add
or
addr16
mov
adc
xor
xchg
jg
mov
ss
das
sti
sbb
add
mov
jle
inc
loopne
xchg
inc
dec
sti
shlb
jg
xchg
mov
mov
push
mov
adc
xor
idivb
nop
or
cld
jg
mov
add
cmpsb
std
ja
push
adc
std
jg
and
and
jg
push
or
jns
std
dec
adc
push
adc
add
jle
inc
xor
data16
xor
decb
and
or
lods
add
incl
inc
inc
dec
xor
shll
incb
jg
or
fidivrs
jg
sbb
insb
or
adc
sbb
xchg
jbe
insb
and
flds
add
push
mov
test
mov
scas
incl
add
incl
lods
jle
lret
imul
inc
xchg
inc
pop
lods
inc
addr16
adc
adc
sub
dec
jg
call
add
pusha
sbb
jg
pop
xor
inc
data16
lods
lea
add
xor
adc
adc
es
jg
les
adc
pop
mov
lods
cmpb
mov
fdivrp
cmpsb
ljmp
in
popf
notb
add
daa
rcl
mov
aas
aaa
pop
pop
in
push
pop
xor
pop
jle
xor
pop
inc
push
add
test
mov
jle
sbb
decl
push
or
push
dec
xchg
push
fnstsw
je
add
mov
insl
iret
lods
comiss
daa
push
arpl
das
les
aam
insl
xchg
arpl
out
push
xchg
push
and
hlt
dec
and
lcall
jae
lds
ljmp
or
jno
jle
jle
push
and
mov
push
dec
fidivrs
inc
idiv
fnstenv
add
push
jne
dec
out
jl
pop
push
jbe
or
es
push
jnp
push
jp
ja
dec
decb
js
dec
jbe
pop
add
jne
mov
mov
mov
jbe
call
and
or
ljmp
jle
aam
cmp
test
scas
jmp
call
and
mov
jns
fiadds
insl
and
push
mov
outsl
inc
call
inc
out
mov
xchg
cs
aas
popf
inc
push
pushf
cmp
test
cwtd
fstpt
cmpsb
mov
xchg
xor
xchg
xor
sub
sub
jns
insl
push
nop
daa
ss
cs
enter
mov
xor
lcall
cmpsl
sbbl
jg
dec
test
cli
pop
fnsave
xor
inc
int
sbb
push
jbe
data16
ss
rcl
push
cs
add
mov
aam
ja
dec
test
xchg
movb
inc
mov
pop
ja
testb
pusha
add
add
dec
in
adc
inc
bound
inc
outsl
add
push
dec
push
insl
outsl
mov
mov
jns
or
add
push
adc
add
push
orl
lea
jmp
or
xchg
inc
and
cmp
lock
push
jmp
xor
pop
cmp
std
cmovb
icebp
imul
add
sub
lcall
out
pop
sahf
jbe
xor
jmp
mov
pop
call
push
sbb
xor
inc
push
mov
push
xor
std
hlt
mov
and
add
fdivs
adc
or
push
incb
xchg
adc
mov
or
mov
sub
daa
cld
pop
das
pop
push
shlb
cld
jmp
inc
dec
gs
sbb
cmp
in
push
pop
daa
std
out
or
orb
or
lcall
or
push
lds
mov
test
ds
ljmp
or
push
les
jmp
xor
test
lcall
sub
decl
inc
inc
pop
decb
lea
and
lcall
sub
ljmp
mov
add
or
nop
mov
mov
in
inc
xchg
bswap
cltd
mov
adc
inc
pop
adc
mov
out
cmovs
loope
push
incb
adcb
adc
xor
mov
iret
call
mov
mov
adc
xchg
or
add
sar
pop
sti
nop
push
cmp
std
decl
xorl
decl
inc
push
add
and
cld
pop
stc
pmulhuw
and
push
call
jg
sub
ret
movsb
and
loop
roll
sub
nop
call
decl
jmp
pushl
pop
fcmovbe
pop
imul
pop
inc
xorps
and
addr16
mov
icebp
sahf
int
push
shll
roll
mov
push
dec
dec
sahf
ret
decl
jnp
xchg
push
adc
jmp
dec
jnp
fldt
lahf
inc
inc
push
inc
mov
in
fiaddl
inc
pop
mov
out
ss
sahf
movsb
dec
push
stos
push
popf
inc
dec
xor
fldenv
aam
imul
push
add
and
sub
xchg
push
out
push
shrb
jmp
shrl
outsb
shll
xchg
mov
es
push
jb
notb
push
iret
insl
pop
dec
cmpsb
cmp
daa
outsl
pop
imul
push
push
push
sub
call
nop
mov
dec
in
imul
pop
int
repnz
and
push
jmp
pushf
cmp
aas
decb
cwtl
xor
push
inc
push
xchg
jp
in
cltd
push
push
aaa
push
lcall
fwait
dec
xchg
push
xchg
es
xchg
xchg
and
push
sub
aam
xor
scas
adc
inc
jmp
das
xor
and
push
add
or
std
faddl
inc
fstpt
push
jnp
jp
aaa
int
cmp
or
jl
shrb
jge
jg
es
jmp
mov
fidivrl
push
dec
push
dec
repnz
repnz
jae
aaa
fbld
pop
fidivrl
push
mov
jnp
jge
push
leave
xor
add
int3
outsb
nop
negl
mov
mov
stc
sbbb
xchg
push
inc
outsl
enter
lahf
push
adc
adc
fnstsw
imul
jg
or
lahf
dec
es
xchg
mov
addl
orb
mov
inc
and
xchg
out
push
sub
iret
out
mov
cli
sahf
mov
push
jbe
clc
push
idiv
ja
mov
push
jb
sub
jg
mov
mov
cld
lock
ja
daa
jno
sub
jg
mov
icebp
in
or
mov
jg
je
add
filds
jg
mov
ja
stc
cmp
jns
mov
es
mov
xchg
aaa
add
test
and
mov
jbe
jg
dec
in
rorb
or
movsb
addr16
mov
dec
and
jge
inc
stos
nop
sbb
decl
mov
push
fsub
pop
push
push
dec
lahf
inc
inc
push
int3
decl
and
mov
fidivrl
arpl
clc
xor
nop
cmp
mov
push
pop
jbe
nop
fimuls
pop
push
pop
or
test
mov
and
dec
lcall
push
or
xchg
rcl
jns
mov
push
mov
popf
fldcw
in
sbb
in
sbb
xchg
mov
pop
sti
adc
loop
adc
xchg
out
sbb
loope
and
lret
jg
out
mov
test
add
push
inc
cmp
jp
add
inc
or
lahf
xlat
push
cmovno
add
cmp
jbe
add
push
pop
adc
mov
movb
push
inc
add
cmp
adcb
addl
xchg
push
jne
lret
adc
imul
push
jne
cmp
adc
into
pop
in
ja
fistl
add
push
sbb
push
or
xor
and
fcomi
inc
or
push
stos
mov
xchg
incl
dec
and
push
and
add
xor
adc
xchg
insl
lods
and
xchg
push
scas
xchg
mov
add
add
lods
push
ss
inc
push
gs
jo
pop
rolb
mov
mov
add
inc
insl
dec
std
and
add
lret
jo
and
inc
and
push
push
aaa
loop
and
test
dec
test
pusha
nop
inc
add
lock
inc
jmp
lahf
jo
das
cmp
popf
sbb
ds
lret
ret
add
imul
lea
push
and
sbb
dec
pop
add
ficompl
mov
sbb
xor
dec
jns
add
inc
aad
mov
add
mov
inc
lret
sbb
pop
cmp
inc
sbb
lods
add
insl
pop
adc
and
adc
insl
pop
pop
popf
in
mov
sub
push
popa
shlb
xor
and
sub
jb
mov
dec
xlat
jae
add
add
sbb
mov
xchg
test
xor
filds
das
inc
mov
bound
mov
add
jo
movb
pop
add
adc
sub
idiv
sbb
mov
add
inc
stos
push
pusha
fists
push
push
outsb
dec
push
outsl
loop
fidivl
mov
sub
dec
dec
fwait
movzbl
ljmp
insb
pop
dec
insb
out
inc
imul
sbbl
andb
dec
inc
adc
sbb
insb
jne
add
inc
cmp
push
adc
rolb
add
mov
or
add
mov
inc
fidivrl
jmp
fstpt
arpl
push
adc
add
add
fiaddl
fidivl
popf
xchg
push
mov
aad
mov
pop
aas
cmp
adc
icebp
mov
add
xchg
jnp
sbb
cmp
jo
int3
adc
cmp
dec
in
and
sbb
push
orl
stos
mov
mov
adc
xchg
inc
adc
add
ljmp
outsl
mov
jecxz
popa
addl
or
adcl
dec
sub
sbb
inc
push
es
push
jb
dec
movsb
sub
push
cwtl
jmp
add
jg
shll
shl
inc
je
cmc
jbe
bound
iret
add
or
and
xchg
xchg
mov
icebp
popa
and
pop
test
jbe
lds
push
sbb
addr16
and
xor
add
rorb
add
pop
inc
adc
sub
sub
je
fists
push
jae
xor
jno
inc
sub
mov
mov
adc
nopl
dec
das
out
fistl
mov
jne
ja
sbb
mov
inc
loope
add
and
adc
or
ret
xor
je
jne
inc
cmc
mov
loop
sub
outsl
jae
and
loopne
loop
outsl
popa
clc
jp
mov
mov
cmpsl
adc
mov
and
fldenv
pop
fisubs
cmp
inc
arpl
mov
xchg
add
comiss
popf
mov
xchg
aam
sub
xchg
pop
sub
mov
pop
out
mov
dec
sbb
sbb
mov
jnp
push
test
imul
push
sbb
arpl
push
imul
aam
test
xor
xchg
es
lds
push
adc
xlat
and
inc
enter
and
insb
sbb
cmp
jne
inc
xchg
mov
fs
or
pusha
aam
jbe
popa
rcpps
js
ret
mov
inc
xchg
push
sbb
fs
mov
imul
lds
fdivs
adc
insb
sahf
daa
push
and
insl
mov
das
push
cld
sub
fldt
add
mov
js
dec
lea
loop
jecxz
or
fistpl
sbbb
js
hlt
add
adc
push
jo
push
stos
dec
and
push
les
and
addr16
inc
dec
mov
int3
sub
pop
xor
mov
adc
sbb
outsb
inc
sbb
or
roll
and
leave
sbb
insl
dec
outsb
dec
std
lea
adc
push
and
mov
sub
push
push
js
mov
int
add
pop
add
add
sbb
mov
imul
add
or
imul
imul
scas
imul
es
nop
ret
or
pop
add
lods
add
addb
add
and
gs
pop
sbb
fmuls
inc
jo
sbb
or
out
test
imul
popf
stos
es
inc
push
sub
imul
adc
inc
stos
add
inc
insb
scas
test
test
push
int
outsb
inc
xor
xorl
sbb
out
xchg
fs
ret
mov
jo
inc
sbb
add
sarb
inc
adc
cmp
mov
je
jno
mov
dec
pop
push
xchg
lods
dec
jbe
inc
mull
pop
scas
int3
ficomps
fs
push
jge
out
int3
mov
imul
and
lcall
push
dec
mov
inc
insb
sub
mov
mov
mov
mov
sbb
jo
outsb
sub
mov
xchg
mov
pop
xlat
adc
or
test
jbe
mov
call
mov
lods
lea
inc
xor
sub
sbb
out
inc
aaa
outsl
in
loopne
js
adc
mov
jno
inc
ret
lods
outsb
jbe
lods
sbb
test
inc
jle
push
shll
rolb
scas
das
cmp
inc
push
mov
sbb
insl
dec
inc
push
push
xchg
and
sub
mov
orb
mov
adc
inc
lods
sub
jne
pop
xor
inc
cwtl
pop
jmp
arpl
mov
inc
add
sbb
mov
nop
fs
xor
mov
cmp
jns
test
mov
push
and
inc
cmp
and
jg
out
mov
cmp
jmp
pop
sbb
roll
aas
scas
inc
sub
adc
nop
shlb
lods
mov
xchg
jbe
enter
inc
or
test
push
mov
fdivr
push
inc
inc
int3
js
movsl
cmp
xor
push
outsb
movsl
addr16
cmp
arpl
mov
jnp
jo
pop
dec
mov
jmp
pop
mov
outsb
inc
test
pop
inc
ja
imul
and
lcall
sbb
sub
inc
cmpsb
dec
push
ss
push
xchg
test
dec
movsl
dec
sub
inc
sbb
mov
sub
add
and
addr16
insl
add
mov
add
mov
shrb
add
pop
add
add
les
lock
andb
add
inc
dec
dec
mov
addl
or
jl
inc
sbb
pushf
add
jnp
negl
call
or
shlb
push
idivb
xor
out
int3
aam
push
pop
imul
mov
mov
push
xchg
jg
dec
addb
orb
incl
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
