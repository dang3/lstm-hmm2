divl
in
mov
mov
jo
inc
add
add
mov
or
lock
call
test
je
push
push
push
movsb
lcall
test
je
cmp
pcmpeqd
cmp
jae
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
repnz
pop
ret
jecxz
shr
inc
sub
push
push
sarl
add
or
add
pop
pop
fstpt
call
push
push
xor
mov
push
mov
xor
sbb
inc
cld
add
jmp
mov
pushf
or
push
mov
mov
pushf
mov
xchg
mov
xchg
push
js
mov
cmp
test
jne
int
pop
and
pop
leave
ret
mov
jmp
pushl
jbe
mov
decl
push
xadd
dec
test
jg
add
js,pn
mov
pushl
inc
push
mov
add
lock
pusha
mov
add
cld
add
out
or
jmp
insl
test
mov
cld
pop
push
sbb
or
sub
jmp
mov
lea
mov
out
adc
je
cmpl
jl
mov
push
jne
lcall
push
add
mov
jmp
mov
push
mov
push
loopne
jle
add
push
pop
cmp
cmpb
sub
sbb
push
adc
sti
out
jnp
push
pop
pop
out
cmpl
or
inc
add
call
xor
add
decb
fbld
push
jg
mov
push
mov
jns,pt
rorl
sbb
jae
jl
inc
lock
add
sub
pop
adc
jmp
ret
dec
push
enter
push
lock
mov
or
add
push
lock
js
mov
les
sub
mov
push
cmp
pop
nop
arpl
insb
push
sarl
pop
cmp
add
mov
enter
iret
jl
add
push
loope
pushl
mov
cmp
ja
add
jmp
test
add
mov
add
adc
stos
into
cmp
sub
mov
add
add
push
int3
lock
xor
push
cmp
push
add
or
rorl
sbb
push
clc
or
cld
mov
sbb
adc
pop
mov
jbe
dec
or
pop
imul
and
mov
push
fdiv
in
push
xor
inc
sub
inc
clc
sub
enter
shll
into
xor
or
pop
and
jmp
mov
mov
cld
mov
mov
dec
aaa
jl
loopne
push
mov
cmp
ja
lea
cmp
push
pushl
pop
sti
lret
xor
pop
insb
pop
aad
stos
js
pop
shlb
fdivl
pop
leave
ljmp
incb
inc
pop
lods
fadds
pop
add
ljmp
add
jo
cmc
push
js,pt
cmp
pop
jo
stos
or
pop
push
add
aaa
idiv
pop
iret
insb
sbb
jb
mov
jmp
imul
jne
rorb
adc
lcall
push
insl
push
lcall
push
add
pop
cmp
je
push
push
push
sbb
pop
push
sti
je
mov
push
add
inc
add
sbb
icebp
mov
repnz
sar
push
sub
mov
xchg
sbb
loop
cmp
sti
lock
push
inc
inc
js
dec
scas
xor
rcrb
adcl
add
add
repz
int3
aaa
push
mov
dec
fisttpl
cmp
cli
push
nop
push
hlt
shll
dec
ficomps
daa
sub
push
mov
cmp
int3
xor
sbb
enter
pop
cld
jge
mov
inc
push
xchg
sub
mov
out
call
inc
lock
push
pop
jnp
clc
addr16
lock
je
cmpl
jle
jle
pop
jmp
jge
mov
cmp
jge
rolb
or
mov
pop
cltd
sub
sar
add
push
imul
pop
mov
stos
ret
das
push
dec
inc
lea
mov
cli
cmp
lock
inc
xchg
mov
inc
and
jmp
jne
add
sbbb
inc
add
or
adc
jmp
push
cmp
rorb
int3
or
test
jle
push
or
pop
cmp
flds
movsl
push
loopne
push
jno
pop
inc
or
add
ljmp
andb
add
loope
clc
xor
or
aad
push
daa
pushl
lea
into
add
sub
push
aas
pop
xor
pop
das
jmp
push
scas
and
mov
dec
add
add
imulb
adcb
or
mov
test
and
pusha
sti
push
sub
pop
add
xor
shlb
cmpsb
pop
orl
mov
sub
jo
jb
pushl
jecxz
pop
pop
xchg
push
cmp
jbe
testb
sti
cli
dec
inc
cmp
mov
jmp
es
mov
add
push
sbb
or
pop
insb
jb
inc
roll
adc
pop
mov
test
orb
dec
rolb
adc
or
cmp
mov
lahf
push
adc
or
mov
push
cmpsl
mov
push
negl
out
add
loope
mov
inc
cmpsl
or
sbb
sub
clc
outsb
outsb
outsb
add
je
and
je
loop
int3
mov
hlt
or
clc
fucomi
in
das
mov
shll
rolb
leave
or
rclb
adcb
push
inc
and
rcll
test
or
pop
inc
enter
push
mov
or
fldenv
push
fidivrs
cs
mov
std
push
mov
cwtl
in
mov
xor
xchg
mov
lret
ljmp
pusha
shll
sti
dec
cmp
je
orl
add
cmp
jae
push
call
lock
push
fs
adc
mov
sub
sub
dec
add
mov
sbb
lcall
cltd
or
adc
xchg
xor
dec
hlt
jge
scas
bts
in
aas
add
mov
sub
fstps
push
aad
movsb
mov
orl
pop
push
add
push
rcl
js
leave
js
lea
jmp
and
rcll
pop
dec
pop
cwtl
adc
xorl
arpl
mov
pop
push
pop
sbb
jg
into
adc
push
das
cmp
hlt
fsts
dec
hlt
aam
test
mov
sub
leave
or
ret
cmp
mov
inc
ret
addb
and
inc
jnp
sub
push
ljmp
pushf
push
xchg
in
sbbb
lret
ret
lahf
bound
jne
lcall
les
shrb
inc
clc
cld
push
adc
push
or
adc
shll
or
daa
xor
repz
and
add
sbb
mov
xor
push
loopne
std
adc
cmp
jle
dec
sub
cmp
jle
cmp
cmp
jg
das
jne
or
jmp
push
mov
add
mov
das
leave
pop
adc
je
mov
adc
cmp
lea
stos
push
push
adc
mov
add
cmp
cmp
fsts
test
pop
jae
es
scas
or
add
mov
mov
jnp
mov
or
cmp
out
movsb
adc
js
mov
cmova
data16
sbb
mov
pop
loopne
hlt
outsl
adc
jle
jb
lea
aam
fimull
lock
jle
cmp
addb
or
push
inc
add
xchg
push
filds
push
adc
xor
sbb
iret
mov
cmp
jbe
mov
ljmp
cli
push
loope
fwait
xor
into
jmp
sbb
xchg
shr
ret
fisttpl
add
mov
imul
mov
fists
jbe
pusha
mov
add
push
add
rorb
or
mov
mov
mov
mov
pop
pop
add
pop
mov
loop
je
mov
push
push
pop
and
xchg
int3
call
addb
adc
xorb
jbe
dec
insb
sub
adc
jmp
or
mov
out
testl
into
xor
or
addb
adc
call
aas
pop
cmpl
jne
and
add
and
mov
sbb
int3
cmp
je
add
cld
clc
jmp
jne
sub
cmp
test
push
imul
mov
add
push
hlt
add
cmp
jb
sbb
clc
or
pop
sbb
lea
loopne
adc
and
or
push
lea
jo
add
aaa
inc
lock
mov
fidivs
cmpsb
mov
ret
cmp
jg
mov
loopne
add
fildl
xor
and
jg
hlt
mov
jmp
add
out
sub
sub
add
into
movsl
loop
icebp
push
push
add
mov
dec
cld
pop
mov
std
push
dec
jp
cwtl
hlt
adc
orb
add
mov
jle
push
test
jmp
sbb
jbe
cmpb
btsl
gs
add
cltd
jbe
pop
paddq
or
mov
add
cmp
aaa
sbb
add
cmp
test
push
inc
push
dec
fsub
pop
or
movsl
inc
in
les
loopne
adc
test
mov
or
or
inc
ffree
pop
test
pop
fmull
dec
push
push
cmc
out
mov
add
and
mov
aam
pop
rcl
adc
ret
lea
cmp
jle
fwait
dec
addb
and
xchg
setno
in
cmp
mov
into
pop
outsl
pop
xlat
aam
sub
lock
xlat
push
adc
cmp
jle
and
sbb
or
sbb
add
test
vrcpps
cmp
fisubl
cmp
ds
repnz
jg
xchg
popa
sub
pop
es
push
push
and
pop
mov
cmp
fbstp
inc
add
out
jne
push
bnd
out
stc
jns
hlt
jne
or
jne
in
xor
or
add
cmpl
pop
scas
mov
add
add
cmova
mov
scas
int3
pop
dec
je
dec
pop
or
pop
or
and
push
xor
pop
adc
fucomip
fcoms
adc
add
jb,pt
pop
lea
dec
xor
mov
or
or
mov
xlat
xorb
cmp
aaa
cmp
loop
push
push
sarb
lods
shll
rcrb
ja
jmp
mov
call
stos
push
js
loope
ds
out
cmp
jo
inc
sub
cmp
cwtl
in
out
ret
adc
mov
cltd
sub
mov
test
lahf
icebp
jne
mov
lea
cmp
jne
push
push
lret
cli
add
andb
jmp
jecxz
or
jo
or
in
pop
test
pop
pop
sub
xchg
fdivrp
lock
sub
adc
sbb
inc
mov
mov
jbe
cs
mov
dec
fadds
out
mov
les
aam
push
ljmp
out
sahf
shr
int3
lock
sarl
push
lea
div
adc
test
mov
xor
pop
adc
inc
adc
cmp
rcrl
outsl
nopl
mov
push
test
xor
add
push
incb
push
sub
cmpsl
jle
rcr
or
cmp
push
inc
cmpsb
aad
pop
cli
push
nop
rcrl
or
mov
out
ljmp
shrb
inc
std
sarl
mov
rclb
into
mov
ficoml
int3
enter
sub
std
sti
cmpsb
shl
jns
movb
movl
aam
insb
lahf
jbe
or
lock
hlt
mov
std
insb
mov
add
jp
mov
lock
push
pop
ret
je
sbb
jmp
pusha
and
xorb
and
out
pop
cltd
cmpsl
dec
test
add
fstpl
cltd
adc
popa
and
fabs
adc
jle
pushf
and
dec
icebp
xchg
xchg
push
cmp
and
das
cli
cmp
je
nop
xor
inc
cmp
or
jmp
push
xor
and
push
sbb
sbb
jecxz
mov
push
addr16
cmp
shll
adc
clc
jmp
shr
mov
mov
hlt
sub
inc
aas
sbb
incl
sub
lea
push
lea
push
inc
push
jae
push
lea
mov
and
rorl
ficoml
xchg
stos
pop
movsb
ret
push
mov
bound
out
xor
inc
mov
mov
mov
hlt
dec
repz
push
inc
insb
jne
cld
xchg
scas
orl
cmp
jne
mov
cmp
jb
loopne
test
imul
add
in
fcmovnu
out
pop
xor
cwtl
js
inc
jmp
lea
testb
notb
ljmp
push
push
push
lea
cs
cmp
test
add
add
add
mov
add
adc
inc
or
sbb
sub
data16
jmp
je
cmp
jle
sub
inc
sbb
dec
or
mov
jl
movsl
dec
pop
fs
dec
or
and
mov
add
adc
add
push
add
adc
sub
out
jge
movzbl
or
sbb
add
push
ret
cli
mov
orb
scas
lock
mov
stc
int
and
push
sub
mov
cmpb
sub
movl
scas
cmp
inc
push
pop
or
mov
les
jp
xchg
push
pop
in
or
cli
sub
test
adc
pop
mov
hlt
pop
ret
loopne
add
movsl
test
loope
es
cmp
loop
xchg
nop
mov
dec
push
test
cmp
ficomps
mov
ret
mov
cmp
popf
mov
xchg
aaa
js
dec
shl
and
add
loope
or
pop
cmpl
push
std
and
inc
adc
das
ret
or
push
jbe
xchg
sbb
inc
cld
icebp
sbb
js
and
cld
sbb
pop
mov
and
sbb
je
or
mov
jmp
mov
add
arpl
push
adc
adc
pusha
and
adc
pop
xor
mov
lret
mov
xchg
mov
pop
jne
mov
mov
mov
js
xor
mov
movsl
dec
test
cmp
jge
dec
in
sbb
and
jo
adc
pop
hlt
movb
fstpt
jge
add
in
jne
cmpb
in
aaa
add
xor
mov
aaa
incl
add
loope
sub
sbb
leave
pop
je
pusha
sbb
add
fwait
lea
sub
fucom
loope
mov
push
lcall
push
dec
fdivs
add
mov
inc
jle
fsubrl
sarb
shll
sbb
or
test
push
repz
push
lea
add
incb
jnp
sbb
add
xor
and
ss
and
jbe
shrl
clc
or
mov
add
pop
leave
mov
cmpsb
sub
test
hlt
clc
add
sbb
add
xchg
lods
mov
xor
test
jmp
adc
pop
and
mov
push
rcll
jle
aam
push
sub
mov
clc
out
and
add
sbb
jle
jbe
push
loopne
jmp
mov
fbstp
mov
mov
inc
mov
and
push
push
push
imul
stos
jle
sub
xchg
lcall
pop
loopne
mov
pop
jmp
sar
mov
jl
cltd
aam
sub
test
fcoms
sub
dec
and
sbb
xor
hlt
decl
pop
sbb
and
jmp
cmp
lock
or
inc
out
mov
cvtps2pd
inc
mov
clc
mov
mov
fistpl
or
push
cmp
je
xchg
push
pop
fists
loope
xchg
mul
seto
sbb
enter
cmpb
incl
adc
mov
cmp
mov
mov
jbe
gs
iret
shl
push
pop
sbb
xor
cmc
fadds
xchg
push
decl
sub
aas
in
cmp
jne
mov
push
xor
das
je
test
test
jne
push
push
push
pop
mov
mov
inc
in
jmp
imul
das
cmp
jae
or
mov
orb
lcall
adc
pop
shlb
or
or
mov
sbb
pop
pop
lods
stos
or
rorb
ljmp
or
jecxz
or
loope
sub
int3
out
cmpb
test
jne
push
sub
and
ja
out
mov
jmp
mov
roll
rorb
fcmovnu
hlt
jmp
push
sub
push
aam
sub
dec
jns
mov
lds
aam
setne
cld
jo
xchg
mov
push
lea
jge
add
mov
add
incl
fcmovnu
ja
insl
push
or
mov
push
mov
mov
inc
dec
aam
loopne
jbe
sbb
add
push
daa
push
push
mov
adc
ss
mov
or
push
imul
inc
sbb
mov
cli
test
push
mov
and
adc
andl
push
pop
stos
or
sbb
mov
xchg
sbb
mull
lcall
ja
xchg
cmpsl
mov
pop
out
sbb
inc
push
cmp
aaa
popa
push
imull
or
shlb
pop
push
sbb
je
ret
mov
add
hlt
imul
inc
adc
addb
inc
cmp
fidivrs
repnz
test
je
lcall
mov
or
je
in
mov
or
mov
cmp
addr16
je
cmp
jne
mov
sbb
push
incb
cmp
lcall
mov
pop
popa
or
dec
mov
dec
xor
push
shlb
sub
inc
adc
je
testl
jbe
or
in
cmp
jbe
dec
aas
mov
push
inc
cmp
je
sub
inc
jmp
inc
pop
roll
and
add
mov
lret
cmpb
adc
jns
xor
cmp
insl
sub
je
mov
lea
clc
mov
or
push
sbb
hlt
and
in
test
ljmp
sahf
add
pop
sahf
jne
add
outsb
dec
push
sti
sti
cmp
notb
sub
insb
jne
adc
je
inc
sub
fistl
lods
jb
push
sub
inc
aad
nop
popf
in
scas
andl
out
pop
jg
inc
cld
push
push
and
lock
and
cmpsb
inc
sub
arpl
or
mov
jne
nop
pop
xchg
out
lea
lret
fsubs
sar
push
cli
mov
mov
aaa
jno
movl
pop
inc
rol
shl
add
loop
sbb
jmp
pushf
aas
lret
jne
and
inc
xchg
dec
inc
hlt
inc
adc
fs
jne
sub
and
test
xor
mov
or
jo
or
movd
jae
mov
jmp
dec
fidivl
ret
es
repnz
int
xchg
arpl
lea
cld
push
or
call
and
adc
or
lret
cmp
shlb
aaa
aaa
aaa
or
jge
and
jle
es
fnsave
xor
sub
jmp
or
jl
pop
loopne
mov
pusha
je
lea
cmp
dec
lea
sbb
cmp
jbe
mov
popa
test
xchg
and
mov
adc
je
test
jne
je
adcb
pop
insb
and
clc
outsb
lods
mov
xor
pop
inc
sub
xor
in
lock
or
sti
add
into
mov
inc
push
push
mov
inc
and
jb
inc
push
sub
adc
jmp
js
mov
mov
add
mov
inc
and
and
pop
fistps
mov
out
sarl
movsb
push
pop
push
movl
cmc
out
xchg
pusha
mov
or
xor
push
or
mov
sbb
test
in
push
fwait
outsb
ror
daa
push
lock
cmp
sub
cmp
ja
jno
push
xchg
call
outsb
push
pop
lret
ds
xor
movb
sbb
inc
pushl
and
mov
jno
ret
add
subl
test
cld
movb
inc
cmpl
sahf
dec
into
out
xor
mov
or
xchg
add
jno,pn
add
xor
fcmovnu
cwtl
sub
movsb
mov
scas
dec
mov
sub
cld
pushf
frstor
dec
insb
sub
lcall
leave
jnp
push
movsb
loopne
mov
js
aaa
ret
stc
jle
adc
sbb
lahf
and
out
push
rclb
fcoms
andl
ljmp
adc
add
mov
out
cmp
mov
popa
aad
inc
aaa
jb
add
daa
dec
adc
dec
ss
or
push
and
lcall
rorb
inc
cmp
add
and
inc
inc
leave
insb
scas
mov
and
sbb
scas
xchg
ret
mov
lidtl
cmp
and
stc
push
sbb
sub
adc
push
push
movsl
arpl
insb
sahf
imul
push
jne
fcomps
adcl
add
lock
mov
add
cmp
fdivr
adc
pushl
decl
sahf
add
jnp
sub
lock
jb
rclb
rorl
jnp
rcll
mov
imul
jp
mov
sarb
mov
loopne
es
sahf
pushf
xchg
mov
mov
icebp
popa
cmp
aad
push
inc
in
shlb
add
fiaddl
cmc
and
inc
xchg
push
pop
cmp
cltd
test
jb
dec
dec
addl
add
jmp
int3
popa
dec
mov
pop
movsl
fnstsw
jp
jne
fstpl
insb
push
fldenv
cwtl
add
or
and
cmp
dec
and
loope
hlt
dec
stos
mov
test
push
xor
cmp
and
popa
pop
cli
cmp
inc
out
movsl
fstl
push
dec
or
pushf
lret
dec
push
cmp
dec
mov
sub
lea
inc
decl
mov
mov
ret
pop
les
lret
mov
mov
cmp
add
push
jne
test
sub
pop
jne
mov
pop
pusha
daa
cwtl
pop
mov
movl
inc
add
sbb
rolb
andl
adc
inc
cmpl
ret
out
pop
and
aam
add
dec
shll
pusha
test
cmp
lea
cmp
je
js
cmp
dec
js
xor
ljmp
loope
mov
inc
push
add
aad
xchg
cmp
mov
mov
test
mov
faddl
xchg
psrlq
xlat
dec
mov
sbb
hlt
push
ret
push
jns
sub
lds
mov
fisttpl
je
jo
or
pop
rcr
ret
repnz
jge
mov
aas
test
inc
mov
push
adc
or
jne
push
jno
sbb
je
insb
dec
push
pop
pop
mul
clc
daa
jmp
cmp
jne
js
test
es
std
aam
js
mov
mov
fcompl
push
sub
xchg
jg
xor
clc
leave
sbb
dec
fbld
aaa
fidivrl
mov
jae
mov
test
je
repnz
sub
or
inc
mov
loopne
aas
mov
pushf
push
int3
push
fldt
dec
divb
sub
sub
repz
adc
pop
je
imul
xor
outsb
cmp
std
and
sbb
add
dec
je
add
scas
jo
adc
inc
dec
orl
mov
sbb
mov
sub
xor
mov
inc
mov
mov
mov
das
in
orb
sub
add
ret
push
cmp
inc
pop
mov
les
test
push
sbb
cmp
push
mov
cltd
fcoms
cmp
add
dec
cmp
jo
repnz
ds
popf
fildl
or
ret
ret
mov
mov
xchg
mov
lret
push
sub
cs
lret
in
xor
cmp
jb
pop
cmp
jmp
test
or
sbb
pop
or
faddl
das
push
push
jnp
jo
nop
push
push
add
cmp
inc
and
push
xchg
push
push
lock
fistpl
into
notb
mov
or
jmp
push
mov
fwait
push
inc
insb
adc
mov
shrl
add
clc
push
outsl
cmp
add
inc
sbb
inc
adc
inc
int3
inc
lock
les
addb
jo
sbb
test
cmpl
jne
or
add
daa
mov
jmp
pushl
jecxz
jbe
add
das
pushf
je
mov
add
push
psrlq
test
push
adcl
sbb
xor
jp
mov
or
rolb
stc
sub
sti
sti
lods
call
or
or
sti
and
add
push
popf
test
inc
sub
jae
mov
testl
fiadds
sti
push
push
mov
clc
cmpsb
insb
sub
xor
imull
push
mov
enter
mov
lea
sbb
inc
outsl
sub
ss
mov
lock
xor
ds
out
addb
push
les
pop
push
sti
cs
push
mov
mov
dec
cmp
call
fistpl
out
mov
fdivl
jo
mov
sti
add
pusha
mov
and
lcall
pop
sbb
mov
add
jo
jne
mov
jno
test
cmpsb
mov
ret
xchg
icebp
xchg
cli
in
dec
rcrb
pop
sub
sbb
jbe
push
adc
rcl
add
movsl
inc
or
add
notb
xor
rcll
add
clc
in
or
shr
decb
pop
sub
add
jne
cmpsl
into
addb
xor
mov
xor
cmpsb
popf
xchg
ds
pop
imul
add
bnd
or
daa
dec
add
into
sub
inc
lcall
cmp
in
ss
incl
incl
cmp
pop
inc
cmp
je
xchg
loop
inc
in
rorl
in
int3
cmpb
clc
jne
call
push
push
sub
xor
in
clc
mov
ja
jge
cmpsb
xor
sub
and
icebp
mull
add
loopne
and
aad
jbe
push
jle
or
mov
sbb
dec
mulb
ds
and
jmp
ljmp
jo
bound
leave
mov
lea
cmp
jp
add
lock
inc
sahf
hlt
mov
arpl
adc
mov
inc
inc
pop
mov
cmp
dec
xor
mov
add
push
or
jb
push
subb
xor
call
hlt
cmp
push
and
mov
pop
call
insb
cli
fisubrl
and
or
jp
call
push
jg
xchg
xor
loope
pop
lock
popa
and
out
ret
add
aam
hlt
xchg
pop
sub
orl
int
and
cmc
mov
pop
xchg
pop
fdivs
addr16
call
jbe
adc
test
mov
mov
das
je
jo
push
jmp
mov
dec
sbb
dec
stos
and
scas
xchg
xor
outsb
in
jns
popf
adc
pop
xlat
and
and
jge
adc
movsl
movsw
fsubl
push
mov
xchg
and
loopne
dec
test
add
or
andb
jo
sub
fs
fmuls
push
cmp
push
adc
dec
sbb
sbb
inc
push
mov
push
test
pusha
es
loope
in
clc
inc
je
adc
add
and
jo
jp
mov
mov
mov
add
clc
jmp
sub
xor
push
loopne
out
jmp
and
push
stos
sbb
loopne
dec
stos
sub
in
stos
add
mov
inc
push
sbb
je
push
jmp
int
cwtl
gs
cmpsb
test
adc
or
testb
mov
sub
and
das
or
inc
xor
xor
or
rcl
ds
jne
imul
push
js
pop
sbb
mov
call
dec
js
jno
sbbb
adc
int3
push
mov
imul
paddb
add
les
movl
adc
and
and
sahf
lret
hlt
inc
fcoms
xor
cld
jmp
dec
push
pop
scas
loopne
add
mov
cmp
mov
jg
push
sbb
ds
mov
jne
lret
rcrl
test
cmp
push
pop
negl
into
push
sub
mov
test
fs
mov
add
fistps
inc
mov
pop
push
inc
cmp
jl
jmp
pop
in
adc
sub
mov
or
sbb
add
cs
test
jb
aas
in
sub
movsl
xchg
add
std
inc
mov
movl
mov
mov
lods
mov
push
xchg
shrb
lds
and
lret
or
ljmp
ret
adc
and
loopne
push
mov
add
fistl
fadds
sbb
jmp
adc
mov
push
ret
sub
xchg
lock
jno
movsl
inc
inc
mov
push
inc
inc
push
sbb
add
orl
cmp
outsb
jecxz
into
xlat
pop
or
call
or
add
sbb
xchg
or
xchg
mov
stc
cmp
stos
mov
jmp
push
push
loopne
rol
in
ret
push
in
cld
sarb
call
push
shrb
jmp
push
push
inc
add
mov
daa
jg
mov
fcomp
and
mov
clc
pop
or
or
and
das
adc
pushl
scas
ret
add
loopne
push
or
push
mov
xchg
loope
push
mov
sbb
js
pushf
test
ret
pushl
push
dec
lock
ds
lods
xor
testl
add
enter
xchg
scas
mov
cmp
xor
jne
jbe
xchg
xchg
mov
mov
sub
rol
data16
lcall
adc
dec
testb
mov
pop
iret
mov
mov
sub
test
sbb
pop
adc
into
movsl
mov
call
loopne
shl
popl
cmp
cmp
mov
sbb
xor
out
sub
push
aam
adc
clc
or
push
pop
cmp
cmp
repz
in
xor
xchg
jbe
enter
or
bound
push
jo
xor
mov
les
pop
pop
lcall
lahf
xchg
add
cmp
or
xchg
or
pop
push
js
mov
mov
into
hlt
jns
cmp
aam
or
add
add
loopne
push
push
mov
cmp
jne
imul
mov
inc
mov
and
sahf
out
sbb
pop
popa
adc
pop
or
cmp
lock
scas
dec
add
sbb
adc
sub
lret
call
pop
mov
adc
or
sub
or
pop
imul
lea
pop
shl
mov
je
xor
dec
popa
and
pop
mov
js
jmp
or
pop
cld
sub
add
movl
add
lret
loop
in
dec
xor
push
adc
ss
sbb
je
add
cmp
mov
sub
rcll
push
push
pop
add
dec
ret
inc
out
std
push
and
sub
lods
cltd
test
fcomps
sbb
push
outsl
push
xor
pop
add
les
inc
pop
mov
cmp
sub
add
add
test
add
and
fldl
mov
rcl
jns
scas
sub
xchg
jle
push
mov
sub
push
pop
mov
sub
repz
icebp
fimuls
pop
push
faddp
or
into
data16
mov
mov
push
test
or
mov
repz
shlb
into
pop
pusha
xchg
mov
sti
aas
mov
into
mov
cmp
mov
call
dec
std
dec
add
cmp
cmp
jbe
cmp
jbe
mov
mov
mov
notl
mov
cmp
in
sub
mov
sub
push
sbb
add
out
mov
mov
xor
rcr
aas
cmp
pop
repz
mov
repnz
pop
cmp
and
lea
and
jae
addr16
jne
push
ss
adc
int3
add
pop
stos
adc
push
stos
ret
andl
push
shl
loopne
inc
add
inc
dec
test
insl
comiss
dec
pop
cmp
sbb
cmp
pop
xchg
ret
cmp
sub
outsl
cmp
loope
imul
sbb
jbe
mov
mov
add
fs
dec
push
lea
cmpsb
pop
mov
lock
dec
push
pop
dec
inc
push
pop
adc
inc
inc
lods
bt
fscale
cmp
and
xor
js
inc
or
inc
add
cmp
out
ret
mov
shr
sahf
xorl
scas
jmp
fcmovnb
cmp
or
loop
stc
ja
dec
jne
pop
add
jmp
push
popa
jg
or
mov
jle
push
movsl
mov
sub
jbe
ja
xor
or
nop
jge
ret
sarb
jb
fwait
push
jb
add
xchg
push
imul
jl
pop
mov
push
mov
test
in
add
jl
push
xor
jmp
mov
in
pop
add
and
lea
push
dec
and
lods
loope
push
push
add
lea
testl
add
add
push
inc
xor
or
or
mov
sahf
xor
mov
mov
les
loop
adc
mov
lods
sub
std
dec
push
mov
and
jmp
cmp
jne
movl
jno
bound
pop
fimuls
push
push
push
insl
movsb
sbb
movsb
test
inc
rorb
fsubrs
and
push
xor
out
sbb
lock
dec
cmp
stos
adc
test
aas
movsl
mov
ror
sub
mov
nop
add
mov
xorl
add
add
aas
mov
xchg
mov
loopne
cmp
lds
sti
mov
je
dec
mov
loope
aaa
movsb
and
jns
cmp
movb
mov
inc
pusha
mov
test
fadds
mov
fadd
popf
jmp
das
adc
add
push
push
repz
ret
xor
les
addb
cmp
aad
xor
out
stc
dec
adc
or
add
mov
aad
test
cmp
pop
mov
cmp
sub
cmp
test
mov
pop
inc
adc
clc
mov
jmp
loope
sbb
inc
cmpsb
lahf
cmp
xchg
push
lods
subb
mov
mov
or
xor
cmpb
adc
adc
adcb
aaa
in
lock
push
jne
xchg
jmp
xor
mov
rcll
sti
dec
lock
mov
hlt
cmp
iret
xchg
incb
rclb
or
or
test
in
mov
xor
outsl
jge
xor
cmp
cmp
ret
movsb
rcll
mov
cld
mov
pop
pushf
dec
jo
pop
repnz
arpl
or
or
inc
in
xor
xor
ljmp
inc
test
pop
call
sbb
je
cmp
cmp
or
mov
adc
mov
test
ret
pop
lock
clc
adc
fstpt
jp
mov
das
imul
dec
jg
sub
add
pop
or
cwtl
pop
cmp
dec
call
fidivrs
inc
sbb
pop
enter
or
push
or
push
ljmp
pop
enter
jle
aas
jo
or
test
aas
cmp
xor
xor
jmp
mov
jle
arpl
cmp
daa
adc
push
pop
add
stc
jp
sbb
loope
js
jnp
in
pop
xchg
jb
movzwl
push
sub
popa
int3
rcrb
xchg
ret
andb
pop
adc
inc
shrl
push
mov
inc
or
cmp
push
push
push
addb
sub
imul
xchg
pop
pop
pusha
sbb
enter
mov
or
imul
add
cld
repz
or
ds
adc
or
test
les
and
pusha
mov
push
mov
mov
add
aad
push
lock
sti
pop
push
xchg
mov
aas
std
add
push
mov
mov
inc
cmpsl
and
mov
popa
xor
out
mov
sbb
add
arpl
loopne
repz
fs
dec
or
pop
lds
xchg
lcall
mov
faddl
call
aam
rcl
push
call
sbb
fldt
jl
inc
ret
loop
neg
cmpsb
scas
adcl
mov
inc
dec
xchg
mov
push
adc
mov
sbb
push
cmpl
cmp
loopne
daa
pusha
in
mov
aam
cmp
orl
pop
jb
cmp
pop
and
sub
and
inc
or
data16
fwait
in
sahf
adc
pop
jmp
mov
jne
clc
js
cs
mov
pop
ja
lahf
jo
cld
add
adc
push
pop
mov
cmpsb
cmovnp
fisttpll
call
inc
andl
add
cmc
mov
adc
aaa
cmp
mov
mov
test
push
adc
into
inc
fldl
jmp
out
in
xor
and
cmp
lea
xchg
and
and
or
sbb
cld
fisubrl
add
lcall
out
pop
xor
lock
mov
add
cmp
bound
cmp
xor
cmc
xor
clc
out
aam
add
lea
repnz
push
mov
call
ret
arpl
mov
fsts
mov
stc
adc
mov
pop
jle
and
gs
enter
lea
jp
sub
imul
nop
adc
cmp
in
xorl
sub
pop
hlt
xor
lahf
lea
push
mov
jecxz
inc
hlt
fadds
pop
clc
pop
and
jge
or
inc
sbb
dec
cmp
cmp
sbbl
jge
fcomps
sar
lea
mov
testl
adc
mov
or
jecxz
push
inc
adc
test
push
jne
fdivrl
jmp
dec
mov
xor
lock
aas
jne
sub
test
adc
std
cli
dec
inc
test
cmp
mov
xorl
dec
lock
mov
jle
and
add
and
add
inc
pop
add
sbb
mov
mov
xor
fiadds
enter
inc
mov
push
je
cmp
mov
mov
xor
ffree
xchg
and
push
cli
cmp
jne
and
rcll
test
jbe
pop
jo
int3
add
cld
sbb
jmp
xchg
addr16
pop
add
adc
sbb
or
popf
mov
jnp
or
sub
inc
fiadds
fistpll
cwtl
mov
and
xor
outsl
xchg
jle
sub
lahf
hlt
pop
popf
ficompl
int3
pusha
mov
add
dec
xchg
icebp
mov
es
lea
jle
mov
or
inc
inc
repz
mov
lock
pop
bound
push
test
in
decb
jmp
sub
lahf
lea
sub
mov
mov
mov
insb
sbb
adc
add
xchg
dec
fistps
push
inc
sarl
pop
inc
test
xchg
imul
lock
ljmp
push
js
push
repnz
sbb
xor
divps
test
mov
cs
call
inc
insb
test
int3
insb
sub
xchg
je
fisttps
jae
flds
inc
push
or
push
sub
xor
cmp
out
aad
sahf
xorb
arpl
cmp
ret
ret
sbb
sub
scas
pop
int3
call
push
add
push
or
cmpsl
xchg
xchg
repnz
fs
arpl
xor
lea
fmull
lods
out
cmp
adc
notl
mov
data16
cs
aaa
mov
clc
dec
mov
and
insb
jbe
add
mov
mov
or
lahf
xchg
push
sbb
and
or
xchg
sti
and
mov
xchg
idivl
sti
ljmp
in
dec
insb
xchg
jbe
or
hlt
lcall
jae
jmp
fwait
lret
and
pop
pop
testb
push
mov
or
rolb
imul
ja
push
test
repz
sarl
aaa
push
or
rcrb
xor
add
sbb
pop
jae
lcall
inc
adc
cmp
and
sbb
and
adc
enter
rclb
add
lock
stc
je
cmpb
cmpl
xor
push
hlt
js
cmp
cmp
adcb
insl
mov
hlt
pusha
dec
sub
mov
sub
push
cmp
mov
icebp
add
pop
movsb
add
andl
push
mov
push
jg
cmpsb
xor
push
testb
lahf
lret
sbb
insl
mov
mov
ja
lahf
pop
or
or
jnp
pop
add
or
movsb
pop
push
daa
jo
insb
pop
fs
sbb
pop
clc
jbe
or
je
test
dec
dec
outsl
testb
jne
mov
push
test
cmp
js
insl
aaa
sub
lea
push
cld
cmp
mov
pop
stos
es
leave
enter
xchg
dec
sub
xchg
sbb
xchg
mov
hlt
xchg
jb
iret
push
cmpl
int
pop
repnz
add
mov
cmp
call
jmp
mov
pop
inc
fxtract
jne
push
js
jle
mov
loopne
fnstenv
faddp
inc
or
mov
orb
mov
dec
inc
ficompl
sub
add
jge
cli
or
cmp
and
add
xchg
mov
lea
mov
shlb
xchg
lret
movsl
or
xor
inc
movl
cmp
mov
loope
add
hlt
neg
sbb
and
lret
sti
std
je
movzwl
push
adc
pop
mov
stc
jmp
shrl
cmp
int
xchg
fs
mov
mov
mov
out
ds
push
mov
lock
in
ficomps
or
mov
mov
sbb
add
nop
pop
stc
lea
add
stc
add
mov
js
mov
lock
mov
jge
add
stos
fdivs
or
jne
push
mov
mov
jae
icebp
or
cmpsl
rcr
push
pusha
je
mov
popa
push
arpl
dec
das
mov
jmp
cmp
or
movsb
cs
sub
ja
adc
test
push
int3
jmp
addr16
jecxz
xchg
insl
std
movsl
ffree
pop
push
loopne
imul
inc
jge
pop
sub
sbb
jae
sbb
aas
pop
push
mov
lea
cmp
jl
out
mov
sbb
inc
xchg
push
les
movsl
or
push
sbb
adc
lea
pop
and
jae
popa
mov
mov
pop
add
lea
add
add
xor
lds
rorl
or
sbb
mov
int
jns
sub
jns
les
loopne
movsl
lock
data16
sbb
pop
enter
cld
test
hlt
push
cmp
push
jecxz
dec
jmp
cmpsl
sub
adc
rorl
cmpb
push
jg
decl
mov
add
xor
mov
rcr
fld
mov
loope
outsl
jnp
out
std
roll
icebp
push
ret
jmp
push
mov
xchg
add
ffreep
sbb
fwait
sub
push
sbb
sub
lods
xor
adc
lock
inc
inc
imul
into
pop
jmp
cltd
inc
cmpb
jb
cmp
xchg
xorb
jmp
fstpl
cmp
addr16
je
mov
and
xor
cmp
pusha
xorl
push
mov
sbb
and
jle
mov
and
jb
push
jae
dec
lahf
addl
ljmp
rcrb
int3
pop
sub
aad
and
dec
push
add
out
mov
lods
mov
lods
jmp
push
push
mov
dec
jl
orl
gs
shr
or
in
mov
and
or
js
cwtl
adc
adc
mov
push
rorl
push
push
lret
add
pop
pop
xchg
lds
loopne
xchg
and
popf
rolb
or
nop
jne
jecxz
les
pop
xchg
xor
loopne
test
out
out
lds
fs
fs
ds
sbbb
mov
addr16
jo
jmp
push
movsl
add
pop
ja
or
jne
lea
out
xor
push
add
pop
add
add
push
or
lea
mov
jmp
imul
jmp
ucomiss
test
jnp
and
aas
add
faddl
mov
pop
sbb
push
cmpsl
setp
xchg
jge
fiadds
mov
mov
sbbb
gs
cmpsb
and
loopne
out
or
in
or
test
pop
mov
shl
orb
adc
shll
add
xor
andb
or
add
arpl
sbb
add
mov
xor
adc
cmc
mov
ret
cld
push
push
jecxz
enter
int3
or
push
and
adc
unpckhps
cmp
imul
dec
jo
test
clc
jnp
push
ljmp
xor
add
mov
and
mov
xchg
xchg
lods
cmpsl
pop
sub
out
jae
cmp
sub
sbb
fdivrs
cmp
lret
dec
jae
ds
call
xchg
fucomip
jmp
mov
fildll
inc
cmpb
push
mov
lds
xrelease
shrb
or
je
and
decb
mov
enter
shl
mov
lea
inc
cmp
jge
sub
cs
out
sbb
mov
out
push
ds
mov
dec
sub
push
or
add
std
or
je
dec
adc
je
pusha
xchg
aas
jae
inc
inc
loopne
lock
ja
cmpb
jne
push
jne
add
pop
aaa
or
or
ljmp
int3
and
cmp
dec
test
icebp
mov
mov
mov
je
xor
cmp
insb
fildll
hlt
shrl
int
pusha
or
adc
add
fcomip
mov
popa
js
rcr
dec
jmp
jle
lret
lea
fidivrs
jae
sub
rorl
sarb
leave
mov
inc
sub
xor
insb
adc
dec
push
testl
add
je
int3
arpl
push
mov
adc
push
test
add
mov
mov
add
adc
decl
push
icebp
mov
push
add
push
rclb
xor
enter
mov
cmp
cmp
lea
and
arpl
repz
fsubrs
dec
scas
xchg
into
imull
xchg
testb
and
xchg
push
lods
pop
test
and
sbb
xchg
push
lea
cmp
fidivrl
jle
stos
movsl
sub
in
ja
shld
add
mov
push
lcall
add
sti
and
mov
out
inc
outsb
les
js
outsl
add
mov
jo
enter
xor
je
lcall
fcmovnb
mov
jns
sub
lret
mov
dec
inc
scas
or
mov
pop
sub
mov
mov
aaa
stos
push
jnp
or
aaa
pusha
mov
cmpl
bound
jne
adc
pop
xor
sbb
push
das
xor
add
scas
je
inc
and
data16
loopne
xchg
push
mov
mov
fadds
push
hlt
mov
loope
adc
xchg
or
fwait
int3
mov
jbe
add
dec
jg
gs
push
fists
scas
push
pushl
or
orl
cmp
andb
sub
jg
cwtl
je
mov
mov
les
decb
test
je
cmp
push
cmpb
ret
push
bound
jo
push
sub
sbb
push
bound
adc
or
dec
pop
xchg
xor
mov
cltd
cltd
loopne
sarb
fdiv
jae
notb
or
adc
pop
std
add
cmp
cmp
jae
inc
jmp
pop
call
sti
sub
push
mov
rorb
loopne
test
movb
sar
inc
push
ret
pop
je
cmp
jb
pop
test
mov
sti
into
add
xor
jnp
jo
dec
xchg
icebp
push
idiv
inc
sbb
cld
les
xchg
push
add
push
push
push
push
adcb
loopne
mov
xor
imul
daa
sbb
pushf
fcomps
jne
cmp
aam
jne
shrb
mov
or
xchg
bound
and
push
jmp
push
push
xchg
mov
or
jmp
push
inc
leave
aas
cmp
imulb
imul
jl
jg
push
lea
inc
push
lret
jo
jne
lret
inc
call
fstpt
gs
jge
insb
idivl
mov
jne
xor
cli
ja
add
test
xor
movsl
mov
mov
lret
or
paddd
add
jmp
pop
imul
cmp
sub
push
inc
or
mov
and
push
bnd
xor
inc
call
xlat
mov
nop
sbb
daa
lock
mov
in
test
imul
idivb
sub
les
xchg
add
pop
jo
push
out
xchg
in
scas
mov
pop
and
push
and
add
cmpsb
imul
xchg
jo
or
dec
mov
add
jns
mov
or
xor
in
pop
dec
dec
jecxz
fcompl
xchg
jbe
push
pusha
ja
out
xchg
sub
jo
out
or
or
lret
mov
mov
cwtl
push
xchg
movl
xchg
sbb
aad
ljmp
popa
add
int3
mov
add
xchg
ja
push
cmp
xchg
jns
and
pop
movsb
pop
mov
inc
jle
sbb
fmull
mov
cmp
pusha
cmp
pop
sar
mov
push
repnz
jno
stos
imul
out
lahf
cmp
dec
arpl
sub
imul
mov
sbb
shl
push
aad
adc
inc
movl
mov
in
adc
or
mov
dec
sub
loopne
mov
cmp
inc
pusha
mov
push
test
sarb
add
sahf
loope
push
dec
fstps
and
orl
sbb
in
cmpsl
xor
mov
sbb
inc
or
stos
mov
add
sbb
sub
push
aaa
addr16
mov
jg
out
outsb
mov
cmp
mov
jae
in
rcrb
pop
lret
or
and
mov
mov
shrb
test
enter
xor
popf
jge
inc
jne
jne
pop
repnz
push
push
add
sbb
mov
mov
dec
test
pop
clc
jnp
les
test
mov
cmpsb
xor
and
add
inc
sub
ret
ret
mov
fs
sbb
adc
mov
mov
mov
cmp
xchg
add
mov
dec
loop
test
mov
fstp
mov
sbb
mov
adc
jne
mov
push
movsb
adc
or
lock
dec
or
sbb
lea
adc
rcrb
add
sub
imul
jno
add
movb
ja
fsubrl
aam
inc
ret
xchg
add
xchg
cwtl
mov
aas
cmp
jge
mov
mov
pop
lret
mov
jmp
and
xchg
aam
std
hlt
add
adc
cmpsb
inc
cmp
notb
lea
iret
push
rorb
adcl
mov
xlat
shlb
mov
data16
push
push
push
mov
cmp
and
xor
nop
xchg
or
push
xchg
push
lock
adc
push
shrl
lea
push
cs
enter
push
setne
jbe
out
imul
and
cmp
adc
mov
js
cmp
xor
cmp
dec
mov
sarl
mov
cmp
scas
js
jge
push
mov
push
sbb
push
add
int3
je
pop
lock
dec
call
outsb
sub
mov
cmp
or
xchg
adc
jg
push
xor
jle
sbb
or
les
lea
add
out
or
push
push
pop
pop
inc
or
je
dec
sbb
adc
sub
popa
fisubl
in
push
xor
push
mov
cmp
jne
mov
pop
sub
sbb
push
orb
lea
or
js
push
push
sbb
mov
adcw
movzwl
test
je
test
scas
jnp
or
in
xchg
shll
bound
scas
movsb
cmp
jne
push
jmp
xor
xor
jne
cmpl
sbb
lods
call
pusha
sub
sbb
das
jmp
loopne
pushl
push
clc
push
push
or
mov
cwtl
js
pop
ds
sbb
push
fsubrl
adc
adc
lcall
xchg
sbb
nop
pop
int3
push
push
jmp
xor
push
jecxz
and
mov
js
dec
je
mov
cmpsb
adc
jb
andl
add
test
mov
add
mov
fs
mov
mov
or
cmp
fcoms
pop
outsb
add
call
int
test
jno
and
mov
or
pop
sub
add
flds
rcrl
pop
imul
dec
lock
imul
aad
rorb
sbbb
jne
mull
movsb
fmuls
dec
sub
push
call
popl
add
pop
inc
xor
push
leave
ljmp
add
push
test
ja
xor
and
daa
adc
pop
push
add
mov
xchg
xor
mov
or
icebp
mov
cmp
jle
rolb
add
ret
fsts
add
pop
mov
and
lock
dec
xor
orb
inc
and
sbb
mov
out
xlat
add
fcomps
addb
add
jns
adc
push
cltd
mov
shlb
sti
pusha
xor
popa
ds
stos
mov
arpl
in
push
inc
pop
pop
mov
mov
add
sbb
cmp
push
push
daa
jge
clc
mov
or
sarl
or
xor
adc
mov
aas
pop
jecxz
testl
subl
call
outsb
into
sbb
gs
push
jne
add
lea
insb
push
std
cmp
sub
int
adc
dec
jg
add
stos
stc
mov
pop
ret
icebp
cs
inc
sub
push
sub
push
rorb
dec
add
inc
cmpsb
mov
mov
call
adc
jmp
jle
adc
add
mov
insb
adc
cwtl
mov
mov
push
push
xor
cmp
in
aad
add
mov
or
inc
loopne
mov
dec
fisttps
pop
mov
adc
dec
pop
mov
push
mov
add
in
loope
roll
sbb
pusha
add
loop
dec
mov
lahf
add
xchg
fiadds
int3
decb
and
ret
cmp
xchg
push
push
mov
les
and
movb
sti
add
test
or
imul
mov
pop
push
fsubl
mov
mov
cwtl
rorl
sbb
loop
and
xor
loopne
push
xor
fs
add
jl
sbb
add
into
sub
shlb
xchg
ficoms
mov
sbb
jmp
test
inc
insl
daa
leave
test
ret
int
fsubl
rolb
sbb
pop
xor
cmp
xlat
push
ret
adc
es
cld
imul
mov
call
push
icebp
mov
in
push
mov
je
dec
inc
lods
icebp
repnz
cmp
movsl
jge
add
aam
lea
xor
orl
pushf
mov
sbbl
addl
or
pusha
jae
scas
in
adcb
sti
orl
cwtl
fadds
adc
cmc
sub
mov
adc
inc
mov
mov
sbb
jg
xor
rolb
mov
jge
sub
mov
cwtl
pop
adc
mov
mov
cmp
fs
pop
out
mov
mov
fldl
inc
push
out
pop
pop
lea
shlb
sub
add
adcl
loopne
cmpsb
push
xchg
sbb
pusha
or
movsl
or
sete
mov
in
and
rolb
cmp
ja
jb
data16
mov
ret
push
mov
daa
add
loope
xor
outsl
ds
aam
shll
jg
add
and
push
adc
push
imul
jo
or
bnd
aam
mov
mov
stos
dec
jecxz
push
xchg
sub
or
roll
adc
mov
int3
push
inc
es
fcomps
jb
daa
fs
add
inc
leave
and
cwtl
and
daa
nop
je
movsb
ljmp
push
xor
jge
in
stos
rol
and
leave
gs
aam
xchg
out
jge
fdivrs
cmp
adc
aam
pop
dec
scas
xchg
or
fsubrs
enter
push
popf
mov
lret
adc
adc
movsl
jge
push
je
sahf
add
pushl
sub
aaa
adc
lock
js
mov
or
pop
pop
sbb
add
dec
or
rclb
pop
push
adc
mov
push
sub
dec
jns
mov
dec
ret
push
jp
pop
push
cmp
jmp
inc
push
push
das
jne
adc
jmp
push
mov
jle
pop
add
xor
cmp
add
and
jae
clc
mov
mov
je
push
push
lret
push
pop
mul
mov
xchg
sub
shrl
xchg
mov
push
inc
jmp
shrl
fs
fstpl
loop
push
xchg
js
je
mov
inc
inc
daa
xchg
add
test
cmp
cmp
jmp
xchg
add
outsb
add
les
fsubrl
cmp
pop
and
mov
into
mov
fucom
call
lea
sub
jmp
jns
sub
push
shlb
pop
int3
mov
inc
imull
sbb
aam
jnp
or
push
xor
push
rolb
imul
into
add
orb
add
xor
sbbl
fistl
mov
sar
or
lock
add
push
pop
sbb
xchg
inc
in
mov
or
push
mov
push
inc
aam
xchg
sub
push
pop
dec
lret
fcomps
push
xchg
add
push
push
pop
inc
adc
push
mov
push
stc
pop
loopne
sbb
dec
loopne
adc
add
lea
shl
mov
in
or
pop
cmpl
adc
test
pusha
cmp
cltd
xchg
and
nop
xorb
fucomi
dec
loop
clc
mov
ds
movb
add
cmpsl
sbb
pusha
or
shlb
inc
jb
add
add
mov
add
push
popa
movsl
pusha
sbb
pop
pushf
cmp
push
jns
xchg
pop
cmpsb
add
insb
loop
aaa
add
sbb
adc
inc
xor
rcrl
cmp
pusha
shll
jo
pop
dec
js
mov
call
movl
cmpsb
sti
or
mov
out
inc
test
push
inc
lods
imul
pop
scas
sub
sub
fidivl
and
pop
les
in
sahf
scas
jns
aam
add
xchg
int
adc
scas
and
addr16
add
mov
cwtl
inc
push
pop
mov
imul
sbb
nop
add
js
jo
sbb
add
nop
fs
push
imul
sbb
pop
ret
inc
xor
stos
sbb
sbb
dec
sbb
xchg
ror
xchg
lcall
push
cmp
jne
mov
mov
jne
fidivrl
jle
add
sub
xchg
xor
pop
out
mov
lea
out
inc
and
lods
jl
adc
mov
fcoml
fldenv
adcl
mov
jne
mov
mov
out
test
xchg
jo
movsb
lcall
pusha
testl
mulb
sbb
inc
sbb
sub
mov
dec
cmp
shr
daa
push
dec
mov
push
push
es
mov
lock
or
push
loop
mov
jl
sub
xor
add
adc
repz
push
lahf
addl
jno
into
dec
and
es
sub
jbe
call
shr
and
test
and
inc
enter
pusha
and
dec
ret
xchg
cmp
cmpsb
cmp
xor
jne
das
dec
aaa
stc
jl
adc
rolb
pop
std
push
insb
lock
orl
dec
adc
jne
loope
imul
aas
jb
test
xchg
mov
and
add
xchg
add
test
fldt
adc
das
call
movsb
push
fldl
add
and
xchg
lds
mov
std
or
or
repnz
fmulp
sub
clc
mov
or
pop
mov
scas
xchg
out
cmp
adc
pop
in
push
jne
mov
inc
sub
mov
xchg
and
add
xchg
push
cmp
mov
xorb
xorl
inc
xchg
ja
fwait
mov
mov
ret
lahf
jno
cld
dec
push
or
mov
add
push
or
cmp
movsb
push
xchg
div
or
mov
out
daa
xchg
sbb
push
pop
sub
push
push
lods
test
push
push
pop
or
mov
ds
or
cli
pushf
scas
mov
out
fidivrs
addr16
test
or
repnz
mov
dec
push
push
push
inc
pusha
mov
add
call
test
cmpsb
add
dec
jne
and
fdivl
sti
fistpll
xlat
and
pop
xor
push
or
mov
pop
mov
cltd
dec
icebp
std
test
cmc
inc
push
push
sub
enter
fidivl
or
cmpsl
add
rorb
sbb
lea
sbb
jno
adcl
jge
clflush
pushf
and
sbb
jno
orb
jge
int3
lock
arpl
ss
lods
jge
arpl
loopne
in
insl
notl
xchg
and
and
sbb
nop
gs
je
or
jae
fs
pusha
xor
enter
push
push
sbb
je
xor
rolb
lahf
jnp
mov
cmc
pop
push
push
xchg
je
lock
fistpl
cli
je
popf
add
mov
lds
arpl
lock
cmp
je
cmp
lea
lods
lods
push
push
hlt
sti
push
sub
cmpsl
js
fwait
inc
and
les
addb
cs
out
push
adc
dec
lock
jnp
lock
and
cld
lock
sahf
sahf
or
ljmp
push
and
push
sbb
or
aaa
cmp
mov
movswl
in
push
dec
adc
out
mov
lret
add
push
and
clc
repz
rorb
mov
ret
adc
pop
xor
jle
jo
or
inc
and
pop
mov
xor
sbb
jo
sbb
or
lock
add
lea
jbe
das
cmp
jo
hlt
xchg
cwtl
test
je
xchg
mov
insb
add
jle
sbb
and
clc
mov
add
or
lods
adcl
sbb
sbb
dec
adc
lds
jo
popa
shlb
mov
cs
mov
call
add
cmpsl
cmp
aas
jne
push
push
xor
pop
js
arpl
outsb
in
fiaddl
or
xchg
inc
or
in
mov
cwtl
fidivrs
jp
add
jo
push
inc
lock
cmp
je
jle
mov
out
cmp
push
and
sbb
lahf
cwtl
dec
push
iret
push
andb
pop
cwtl
push
out
add
inc
and
jo
dec
push
or
outsb
xchg
mov
push
adc
out
dec
fisubrl
fcoms
movl
mov
pop
cwtl
aaa
cltd
mov
add
cmpsb
push
pop
add
mov
loope
js
pop
arpl
adc
sbb
popa
jmp
add
lock
aaa
inc
data16
cmp
fisttpl
jecxz
adc
cmp
inc
push
push
cmp
loopne
test
xor
pop
adc
or
or
subb
cmp
insl
movsl
scas
jne
sbb
jge
int3
mov
fmull
dec
sbb
add
add
jns
xchg
cmc
jo
and
and
sar
push
xchg
adc
inc
and
adc
or
xchg
bound
xor
pop
xchg
xor
fiaddl
xchg
sbb
inc
cmpsb
adc
dec
test
les
sahf
out
sbb
xor
not
cmp
mov
push
out
ss
lcall
xor
ret
xchg
mov
mov
push
adc
jbe
push
push
dec
and
cmp
adc
montmul
cmpsb
inc
test
push
dec
aam
inc
sbb
out
mov
xor
mov
in
fucomp
stos
add
jne
pushl
lock
push
clc
push
lcall
or
push
fmull
mov
add
movnti
jmp
dec
pmaxub
cmp
bound
mov
mov
mov
pop
les
inc
sub
fwait
icebp
jb
xor
inc
xor
xchg
add
mov
movsl
add
adc
mov
jl
pop
lock
scas
adc
es
adc
or
push
jo
push
jp
movsl
sarl
add
orb
adc
das
sub
cmp
xor
fsubrl
push
pushl
xchg
fwait
xlat
sub
js
orl
outsb
enter
add
jge
jne
sbb
push
add
fcoml
mov
sarb
cmp
fisubs
movzwl
cmp
je
insl
jne
data16
and
sub
add
push
push
imul
int
testl
in
fs
dec
cmp
push
mov
lea
inc
xor
cmp
lret
lock
sub
pop
popa
sub
xor
or
pop
pop
popa
sbb
adc
xor
push
in
aad
adc
sbb
jae
lods
sub
or
mov
sbb
and
sbb
aaa
inc
jnp
outsb
push
movl
pop
loopne
jp
or
or
push
add
xor
inc
mov
lcall
cs
insb
cmp
outsb
inc
push
mov
sub
xchg
ja
test
jg
pusha
rol
lret
sub
sarb
or
inc
mov
adc
sbb
out
xor
push
push
push
xor
movl
xlat
dec
cltd
sbb
pop
movsl
mov
dec
cmp
pop
loopne
je
ret
stos
pop
scas
sub
test
stos
sarl
mov
rolb
cmp
int3
nop
add
lock
and
cli
aaa
mov
dec
xor
call
subb
adc
push
mov
adc
lock
cltd
mov
pop
sbb
xorb
pushf
orl
and
adc
dec
xor
mov
push
xor
xor
or
or
or
lods
sarb
jmp
xchg
sbb
mov
mov
addl
cmp
into
add
outsb
mov
sbb
xchg
cmp
push
out
sub
add
xor
ss
xor
inc
inc
push
inc
xor
dec
leave
push
jb
cmp
nop
add
fcmovnb
xor
add
fwait
bound
nop
lahf
add
add
or
js
movsb
and
xor
test
jp
push
pop
jb
push
push
test
push
inc
fldt
js
pop
dec
or
imul
pop
lods
clc
jbe
cli
aad
jbe
mov
call
dec
dec
xor
cmp
fs
sbb
jb
jl
je
xor
lods
insl
inc
cmc
js
mov
je
aas
cli
push
jmp
jnp
lock
pushl
pop
jmp
scas
shll
add
movsb
fmull
cmp
pop
shll
xor
rolb
or
dec
ret
adc
xor
sbb
and
popf
xor
push
mov
and
mov
jl
mov
push
in
movsb
adc
movb
js
mull
cmc
cmp
clc
sub
cmpsb
sub
adc
or
lds
repnz
cs
cwtl
flds
es
jo
sbb
test
and
je
pop
xor
dec
ret
inc
rclb
xchg
out
inc
inc
in
clc
movsb
push
mov
loope
iret
push
mov
test
add
jg
add
dec
loope
adc
inc
mov
add
loopne
mov
mov
jl
call
sub
outsl
xor
outsl
loope
bound
repnz
pop
push
sbb
or
push
sbb
pop
and
js
in
pop
adc
adc
cmp
outsb
das
pop
bound
xor
popa
dec
or
bound
outsl
jnp
je
push
xchg
xor
inc
jno
lods
or
sub
pop
pop
mov
orl
cmc
push
orl
pop
lock
add
or
sub
sub
je
and
xorb
cmp
cmp
cmp
imul
add
sbb
testb
je
push
mov
lcall
or
mov
or
dec
jl
loope
mov
cmpxchg
or
sar
in
scas
adc
movzbl
neg
sbb
adc
sahf
push
fisttps
xor
mov
leave
sti
fsubs
add
sub
mov
xor
je
sub
add
and
inc
mov
aas
mov
rclb
data16
add
mov
push
xchg
mov
sbb
popa
add
cmp
out
mov
add
jge
xchg
xchg
sbb
xchg
mov
call
orl
sbbl
pop
sahf
mov
iret
sub
cmp
data16
mov
cmp
test
mov
push
lock
scas
add
repz
push
push
fs
les
es
test
leave
mov
nop
test
sbb
mov
adc
jne
pop
repnz
or
adc
or
pop
test
js
mov
iret
mov
push
sahf
aam
mov
sahf
movsb
test
int3
mov
in
neg
adc
jbe
insb
pop
sbb
sub
or
pusha
mov
push
push
mov
mov
cmp
jmp
mov
mov
inc
sbb
incl
stos
mov
es
sti
or
cltd
idivl
jne
sbbb
cmc
lahf
orb
pop
movsl
push
inc
xchg
ret
fsub
add
mov
jmp
cld
sti
add
or
push
loopne
or
in
jl
jno
xor
push
pop
inc
mov
adc
xchg
cwtl
insl
add
mov
add
leave
and
ja
push
xor
clc
mov
pushf
sti
je
push
mov
dec
aaa
iret
sbb
roll
call
bound
daa
add
sub
jne
out
adc
inc
test
push
push
test
or
movsb
jo
mov
stos
or
mov
jmp
leave
rorb
sub
or
test
mov
adc
inc
jbe
xchg
mov
sub
inc
adc
mov
aam
add
push
add
jns
push
lea
sbb
lock
cmp
mov
xor
cmp
jnp
jo
inc
sub
sbb
sbb
mov
and
pop
jae
xor
adc
pop
add
or
inc
jae
xor
push
aas
orl
adc
mov
test
hlt
cmp
data16
idivl
loope
push
xor
cmpsb
insb
inc
add
int3
add
les
mov
mov
lcall
fcompl
test
sahf
rorb
sarb
cmp
adc
sbb
clc
inc
shlb
pop
cmp
cmp
jmp
mov
in
adc
mov
in
lea
mov
rcr
adcb
mov
push
pop
adc
and
add
xchg
add
mov
dec
add
push
arpl
testb
adc
dec
js
loopne
push
out
fdivr
xlat
stos
cmp
pop
mov
cmpl
aam
jmp
out
push
cli
or
sarl
movl
pminub
shr
inc
add
sbb
xchg
add
out
jl
adc
ds
sbb
or
pusha
insb
std
jmp
pop
decb
adc
or
mov
stc
add
mov
fdivrl
mov
jae
movsl
mov
movsl
dec
dec
or
hlt
sbb
gs
mov
aam
sbb
arpl
push
pop
adc
sub
push
add
cmp
jns
stc
mov
xchg
sbb
rorl
idivb
add
shl
popf
js
or
insb
inc
mov
insl
rcll
loopne
pop
xchg
lock
jmp
shlb
sbb
push
jge
js
add
add
jl
or
pop
jmp
cmpsl
xor
mov
out
mov
mov
sub
and
sbb
mov
jmp
adc
and
bound
pushf
cmpb
add
inc
scas
fdivrs
jg
loop
movsl
out
jg
inc
xor
adc
popf
out
mov
je
mov
push
dec
fwait
andb
jp
add
rcrl
dec
rorb
ret
adc
jmp
push
xchg
xchg
push
pop
mov
jbe
push
lea
roll
adc
or
sub
sub
push
movb
addr16
add
es
jnp
dec
ret
jbe
es
xchg
scas
lea
mov
and
mov
dec
test
sub
xor
outsl
xchg
jbe
ds
inc
jo
pushf
into
je
pop
jbe
push
adc
inc
test
pop
sbb
push
xchg
lret
push
loopne
and
or
mov
sbb
and
mov
push
adc
xor
mov
mov
mov
cmp
mov
mov
sti
add
cmp
outsl
cmp
sbbb
mov
jbe
lea
addb
inc
push
xor
mov
mov
push
mov
jns
push
jl
mov
jge
adc
fstpl
and
mov
mov
cltd
test
xchg
dec
lea
sub
cmp
inc
mov
jbe
mov
insb
push
and
fs
cmc
cmc
push
cmp
pop
or
fs
push
lock
pop
testl
sahf
je
out
lock
dec
es
and
fldenv
enter
test
mov
or
sbb
sbbb
dec
mov
push
xchg
adc
test
add
or
sbb
sti
add
loop
mov
add
push
jbe
daa
ret
dec
mov
push
into
add
pushf
nop
push
out
sbb
fmull
mov
add
mov
testl
pusha
jle
out
dec
rorb
push
neg
mov
addr16
lea
cmp
rorl
dec
xchg
cmpsb
add
mov
imul
xchg
mov
mov
inc
jae
push
push
pop
cwtl
jl
pop
fstpt
js
movl
xor
push
push
lods
or
rcrl
fmuls
dec
in
pop
jmp
pop
sub
adc
test
in
dec
mov
mov
adc
pop
or
cmp
enter
lock
cld
ljmp
dec
fstps
js
xor
add
add
lret
or
mov
xchg
in
mov
and
sub
rolb
jne
mov
jno
dec
push
mov
cmp
fistpl
sahf
adc
and
scas
pop
insl
jns
xchg
mov
and
aad
loop
pop
rcll
pop
push
push
push
add
mov
mov
inc
and
sahf
inc
stos
sti
jle
adc
and
rolb
loope
adc
push
lods
fnsave
pop
das
in
daa
and
in
jnp
loope
sbb
aad
inc
dec
in
cmp
out
add
lea
loop
jle
push
insb
or
fbstp
or
pushl
mov
push
dec
je
and
lahf
pop
mov
pop
add
shl
sub
cmpsl
adc
adc
lret
adc
dec
xadd
fcompl
nop
push
imul
push
aam
inc
xor
xchg
out
ret
outsl
cmp
jg
cmp
fadds
je
in
jle
mov
or
sub
xchg
inc
movsl
adc
aad
testb
stos
or
or
add
cmp
sbb
and
or
sahf
xchg
jnp
push
jecxz
and
push
jmp
cmp
xchg
out
push
adc
adc
movsl
test
and
test
xchg
inc
mov
repnz
test
ja
jmp
mov
sub
lahf
jbe
dec
arpl
cmp
jl
push
xor
mov
mov
mov
jecxz
jmp
mov
fisubrl
cmpsb
or
add
je
xor
testb
mov
pop
or
adc
push
popa
add
adc
mov
shrb
sbbl
fstpl
scas
call
sbb
das
mov
movb
and
lods
lcall
dec
and
jge
mov
rclb
movsb
jl
cmp
jo
aam
bound
xchg
divb
mov
and
out
sub
mulb
aam
pushf
out
adc
nop
jge
sub
mov
aaa
aad
es
inc
sbb
mov
add
or
or
std
mov
cmp
jne
repz
movsb
push
mov
bound
adc
imul
or
adc
push
cmp
insl
sbb
push
add
xor
xchg
icebp
and
xor
jl
push
in
mov
or
xor
loopne
movsl
icebp
decb
mov
jne
jb
std
inc
pop
and
jne
mov
add
cmp
or
and
xlat
aam
lods
inc
aam
add
out
sbb
dec
mov
dec
xchg
mov
lahf
mov
rcl
rcrl
pop
hlt
or
mov
hlt
data16
xlat
pop
cld
mov
mov
lret
push
jb
in
mov
inc
enter
outsl
clts
shrl
stos
je
daa
fadd
or
clc
adc
in
pop
jne
xchg
inc
push
repnz
mov
cmp
mov
les
or
push
or
jp
jle
jo
lret
push
add
sub
cmp
mov
jnp
aaa
mov
cmp
ja
push
lds
out
hlt
arpl
lea
das
mov
jmp
xchg
pop
or
pusha
or
lcall
cmpl
and
or
cmc
sbb
inc
and
or
inc
mov
push
xor
jp
mov
and
push
stc
push
push
stos
enter
jo
jnp
mov
je
xorb
and
leave
mov
push
push
mov
ret
es
cmp
lcall
or
movsl
jle
push
call
push
cmp
clc
pop
adc
dec
inc
sub
push
mov
mov
add
cmp
les
push
adcl
int3
mov
pop
jb
loope
mov
jo
sub
hlt
enter
xchg
mov
repnz
pop
push
lea
mov
sbbl
loopne
iret
mov
or
stos
mov
push
dec
or
xchg
or
mov
inc
mov
or
add
mov
xchg
or
out
adc
shll
iret
and
mov
and
push
adc
test
sbb
inc
sbb
sbb
and
ds
pop
mov
test
sbb
or
push
leave
adc
movsw
nop
pop
popa
imul
jne
push
pushf
inc
mov
subb
push
out
clc
mov
out
add
sub
pop
cwtl
fsub
xor
dec
fsubrl
loop
mov
cmp
mov
adc
les
xchg
mov
andl
mov
lock
lea
push
adc
add
or
shrb
sbb
test
pusha
cmc
push
and
repnz
xchg
gs
mov
cmp
aaa
dec
sbb
push
or
scas
sbb
mov
pushf
jb
or
mov
stos
nop
or
or
pusha
or
movsl
mov
fsubl
mov
fcmovu
shlb
aam
clc
mov
mov
hlt
dec
sub
lock
cs
cmp
lods
fwait
lret
xchg
mov
jge
sbb
ret
je
mov
sub
push
mov
bound
cmp
mov
dec
and
mov
dec
mov
mov
js
pop
add
xchg
orb
cmpsl
test
push
aam
shll
or
push
stos
push
sbbb
frstor
pop
mov
jne
jne
sub
clc
rorl
pop
ljmp
popf
xor
cld
adc
or
sub
out
push
and
mov
mov
fldl
adc
pop
mov
fdivl
stos
jbe
sub
lea
pop
popf
add
xor
inc
cmp
jb
outsl
ret
loope
add
and
les
add
cmp
or
xor
add
xor
add
ljmp
lret
bound
in
cmp
inc
add
into
push
neg
sbb
adc
testb
mov
clc
jp
inc
push
add
ret
mov
jae
in
mov
popf
xchg
adc
shlb
addps
push
pop
ja
and
je
xor
xor
cltd
adcb
push
insb
pop
and
jl
test
fwait
cmp
adc
xchg
push
test
inc
push
mov
sub
mov
fcoml
adc
adc
rolb
and
dec
add
inc
add
not
outsb
out
repz
sbb
out
mov
push
shll
add
mov
mov
loop
andl
movl
scas
scas
popa
xorl
sub
das
das
sub
xor
repz
cmp
inc
je
mov
dec
rol
popf
cld
and
cmp
xor
or
movl
jl
jno
inc
add
out
dec
imul
xor
add
xorb
add
mov
dec
add
jno
or
inc
inc
add
or
push
and
push
push
inc
push
dec
push
lret
mov
xor
rcrb
or
push
ret
push
mov
mov
movsl
stos
inc
sub
jb
lret
push
mov
je
imulb
cwtl
insl
jnp
inc
push
cmpl
cmpsb
lcall
inc
rorl
cmpb
bound
movb
push
mov
leave
xchg
jge
outsl
bound
loopne
push
std
nop
pop
or
dec
sub
push
xchg
js
or
dec
loope
gs
push
push
js
das
jge
lcall
jno
xchg
das
loopne
cmp
xor
push
testb
add
decb
mov
mov
js
or
adc
sbb
icebp
inc
mov
xor
cmp
xor
jge
enter
adc
sbb
int3
pop
lea
inc
jl
mov
rep
fiaddl
test
or
call
mov
sbb
cmp
jae
cs
and
sub
outsb
loopne
pop
andl
sub
jne
pop
push
clc
pop
push
push
inc
push
push
ja
int3
mov
jae
enter
push
psrad
repz
loopne
adc
jae
inc
movzbl
inc
data16
jns
add
pop
adc
pusha
xor
jge
jb
fimull
jnp
jae
mov
xor
ret
adc
lock
push
popf
loope
lahf
xor
ja
xor
sub
or
into
shll
cld
es
adc
sarb
dec
dec
inc
scas
pop
push
js
push
outsl
test
mov
aam
push
push
fdivl
sub
inc
std
xchg
jnp
pop
adc
push
push
xchg
xor
sarl
je
outsl
and
cltd
xor
push
repnz
sub
push
jo
hlt
xor
push
push
mov
out
test
mov
xchg
push
mov
pop
mov
clc
and
adc
or
fmull
testl
push
test
mov
inc
xlat
dec
xchg
push
lahf
push
ffreep
cmp
push
test
inc
sbb
push
push
cmp
mov
js
add
hlt
jne
inc
fistl
cwtl
push
ja
imul
inc
sbb
and
sarb
dec
jne
sub
add
enter
inc
lahf
call
add
or
push
push
inc
sbb
push
jmp
jno
lods
outsb
push
stos
lock
push
jae
dec
mov
xadd
addr16
jb
lods
ror
pop
je
lea
push
addr16
js
pop
rorl
ret
clc
adc
movups
add
stos
and
mov
sahf
xchg
xchg
pop
xor
int
fiaddl
stos
aad
and
sbb
or
inc
adc
or
pop
mov
xor
test
and
jmp
or
or
orl
aam
fs
stos
icebp
sbb
push
sarl
mov
cmp
je
dec
xor
and
js
je
pop
cmp
in
dec
adc
lcall
cs
clc
add
clc
jbe
mov
roll
add
jmp
xor
push
out
dec
shll
js
daa
fwait
mov
and
cmp
add
jecxz
mov
es
mov
add
add
test
mov
int
dec
sarl
ret
test
loopne
sub
add
ja
test
adc
pop
mov
mov
mov
xchg
cmp
pop
loope
nop/reserved
loop
sub
xchg
cmp
jmp
cmp
sahf
add
sbb
jo
stos
loope
adc
pop
or
shrl
and
pushf
jmp
cmp
mov
jo
add
stos
inc
ret
repz
lea
cmp
mov
mov
mov
push
push
nop
pop
addr16
dec
mov
popa
pop
sub
jl
andb
jo
lcall
push
adc
call
pop
iret
nop
adc
test
rcrb
mov
test
orl
or
fdivs
mov
pop
pop
test
mov
cmp
adc
or
push
ss
mov
ret
idiv
jne
sub
incb
xchg
push
cwtl
sbb
or
cli
adc
mov
jb
jae
sbb
sbb
push
and
es
shl
dec
hlt
jae
jge
lods
add
xchg
cli
jns
mov
shlb
dec
mov
cmp
cmp
addb
mov
imul
push
dec
xchg
inc
jp
push
bound
adc
cmp
adc
jp
cmp
loopne
stos
hlt
pop
pop
dec
or
cltd
fmuls
test
dec
ds
dec
add
and
mov
enter
mov
adc
sbb
xchg
pop
sbb
sbb
jle
xchg
subl
jb
jnp
sbb
jae
push
push
xchg
jecxz
insl
cmp
cmp
jbe
and
ja
fisubrl
fsubl
add
add
in
mov
fisttpl
arpl
ja
adc
and
jnp
or
sub
jl
or
xchg
fstpl
mov
cmp
into
pop
adc
push
cmp
and
adc
add
ret
jecxz
pop
leave
mov
add
mov
or
out
lahf
xchg
es
push
cld
cmp
mov
fists
icebp
push
and
dec
je
roll
dec
cmp
aad
sub
push
ja
movzbl
and
jo
fstl
mov
cmpb
cmpsl
jge
cmp
push
inc
push
cli
rorl
pop
mov
insb
fiaddl
add
add
add
push
adcl
adc
repnz
nop
push
push
icebp
sub
pop
and
nop
or
push
adc
rolb
pop
mov
cmp
sarb
mov
xor
add
xor
leave
jo
sub
adc
shl
or
ret
leave
rorb
push
push
cmp
or
rcll
roll
and
scas
xor
push
or
fimull
add
xor
push
or
in
shl
inc
mov
xor
and
push
mov
lods
popa
daa
mov
sbb
ret
fists
sbb
stc
or
dec
dec
and
fimuls
js
sub
ljmp
cmp
dec
clc
mov
or
jge
mov
dec
decb
xchg
lret
xchg
pop
xor
lret
xchg
fwait
dec
adc
xorb
test
xlat
adc
mov
push
ss
pop
aam
negb
loope
nop
cld
inc
inc
lahf
xlat
adc
push
mov
adc
sub
ds
repz
enter
sti
fadd
cld
jg
lea
xchg
sub
fldl
fstl
fldl
add
fcomp
fnstsw
test
jnp
or
call
pop
lods
fstl
bound
fsubrp
fdivrl
add
clc
inc
jmp
adcb
pop
cmp
mov
fbstp
notl
shl
mov
push
add
in
in
push
insl
hlt
testl
push
pop
rolb
fcompl
push
jle
jne
inc
add
fadds
pop
add
and
or
adc
or
sahf
jp
shrl
out
jg
std
xor
mov
cltd
and
sub
movsb
cli
rclb
inc
pop
adc
xchg
adc
add
es
jne
clc
ja
add
test
lcall
popf
fsubr
and
cmp
jb
lea
icebp
out
xor
add
lea
es
loop
push
xor
adc
mov
adc
ds
icebp
rol
jmp
mov
ss
inc
jecxz
push
and
std
insb
fstpl
mov
pop
cmp
movl
arpl
lret
dec
adc
addb
imul
cmp
pop
in
fisttpl
nop
jg
pop
hlt
fdivrs
cmp
jmp
in
mov
movl
add
mov
lea
mov
int
test
sbb
enter
in
xchg
mov
je
popf
jo
sbb
or
dec
test
mov
mov
mov
sub
push
push
call
jne
movsl
mov
jecxz
insl
je
pusha
shrb
ret
sbb
inc
push
mov
push
das
sbb
push
lcall
fcomps
fwait
add
mov
inc
subb
pop
ret
ret
scas
push
repz
pop
mov
push
ret
pop
inc
data16
aas
shll
lahf
sbb
cmp
shrl
pop
iret
xor
cmpl
fs
xor
mov
xor
or
cmp
dec
xor
orl
dec
xor
add
adc
stos
movsb
loopne
adc
mov
sbb
xor
cld
sub
or
jge
loopne
popf
adc
xchg
inc
aad
fstpl
cmp
push
push
push
cltd
xchg
mov
jae
jg
mov
movb
dec
lock
adc
and
or
adc
push
mov
mov
and
insl
loope
fwait
jb
push
or
push
mov
stos
fs
pop
xor
xchg
rolb
aad
or
cmpsb
sub
jl
cmp
and
and
mov
xor
mov
lock
leave
pop
mov
lods
or
jp
or
shlb
and
lcall
out
dec
push
mov
and
xor
sub
mov
xor
fisttps
sub
adc
fbld
push
repnz
xor
sub
mov
std
out
mov
lds
addb
mov
negl
jge
lods
int3
scas
mov
push
or
xlat
push
cwtl
push
movsb
push
mov
pusha
and
popfw
sub
aaa
dec
insb
adc
lret
push
pop
fnstsw
jo
je,pn
js
cmpsb
mov
sbb
add
testl
dec
cld
mov
ret
jno
imul
mov
push
push
mov
xchg
dec
fmuls
les
jb
mov
iret
xchg
fsub
mov
inc
cmp
sarb
dec
add
repnz
dec
pop
cmp
sub
sbbb
in
ret
sbb
leave
inc
pop
clc
push
rolb
je
mov
mov
rol
int3
mov
clc
cmp
sub
rclb
lret
stos
jle
pop
and
add
in
lock
rorl
mov
mov
mov
inc
ret
pop
ret
int
incl
sub
inc
lea
push
push
add
push
xchg
sbb
sbb
pop
push
ja
mov
sbb
or
dec
mov
or
add
test
pushf
xchg
out
inc
pop
xor
sub
and
cwtl
sbb
popa
aam
rorl
mov
cmp
mov
push
jns
mov
test
lahf
daa
add
icebp
and
pop
xor
sub
lcall
adc
push
add
jecxz
loope
out
adc
adc
xor
xchg
shll
das
iret
int3
andb
sbb
mov
mov
xchg
sub
push
scas
clc
jl
push
loopne
mov
cmpb
mov
shll
xor
add
add
fs
mov
insb
hlt
cmp
in
andl
or
fcoml
lock
dec
cmpsl
jp
mov
pop
cmpl
movsbl
test
aam
push
add
add
in
sub
ds
adc
rcll
jg
sbb
lea
fadds
fdivr
out
mov
mov
js
add
sub
aad
add
pusha
fildl
sub
or
movsb
and
add
add
adc
iret
clc
mov
push
add
shrb
inc
mov
enter
jb
add
daa
mov
push
and
mov
dec
das
pop
cli
dec
dec
push
nop
clc
js
ds
clc
xor
jns
mov
xor
adc
test
insl
movsb
push
push
dec
decl
inc
adc
jno
ljmp
mov
fnstsw
repnz
pushf
or
loopne
subl
xchg
nop
pop
push
inc
inc
loopne
pop
jle
or
scas
sbb
mov
adc
add
or
xor
sbb
lcall
sti
dec
rorl
and
rclb
dec
add
mov
inc
adc
adc
jle
pop
or
rcll
cld
inc
sub
inc
inc
lock
and
popa
outsb
add
and
in
jnp
sbb
add
fistpl
or
lea
sbb
push
jl
cmpsb
xor
repnz
jbe
sub
or
lods
xchg
test
and
push
stc
test
sub
ret
sub
arpl
and
insl
xchg
call
sbb
ja
sbb
cs
rcrb
sbb
xlat
ss
aas
push
aas
and
int
insl
in
xchg
lea
push
add
and
and
sub
xor
clc
push
mov
or
orl
push
pop
pop
pop
mov
sbb
fcoml
add
sub
push
push
sti
call
pop
daa
mov
push
jo
arpl
dec
mov
out
ja
mov
push
mov
cmpsl
mov
sbb
shll
sub
add
adc
inc
nop
sbbl
or
loopne
add
push
add
pop
or
xor
cld
je
sub
pop
xchg
loopne
sub
sbbb
push
loopne
pusha
and
mov
and
dec
pop
mov
pushl
cmpsl
pusha
hlt
jns
lea
or
adc
sbb
inc
out
ret
fsubrp
neg
sbb
jnp
ret
jne
jle
add
or
or
dec
mov
adc
push
dec
daa
icebp
and
dec
jg
jmp
sub
mov
add
and
adc
in
pop
nop
or
jmp
cmp
add
adc
cmp
icebp
addl
mov
lock
dec
and
push
out
push
outsb
mov
cmp
inc
ret
loopne
sub
in
xchg
orl
subb
cmp
dec
xchg
xchg
rorb
pushf
into
aad
pop
in
dec
adc
pushf
inc
inc
xor
xchg
pop
bound
sti
movsb
lods
mov
adc
dec
jnp
cltd
in
sbb
xor
cmp
jp
sub
inc
repz
adc
xchg
xor
bound
dec
or
inc
fsts
add
test
bound
xchg
jl
sbb
les
lods
je
adc
repz
jl
pop
add
cmp
mov
arpl
fisubs
push
xcrypt-cfb
cmpsl
pusha
cmp
or
pop
push
out
adc
or
xchg
pop
in
call
dec
or
gs
or
or
fcompl
push
test
or
jmp
and
jmp
outsb
jo
inc
xor
jmp
push
push
cmp
jae
pusha
sbb
fwait
movsb
pop
push
mov
mov
or
aaa
adc
cld
push
push
xlat
jmp
dec
jmp
and
xchg
lret
cld
ds
and
les
push
loope
scas
or
inc
shll
lock
dec
adc
jae
adc
mov
mov
inc
lcall
adc
add
sbb
ss
loopne
mov
addb
add
fcoml
in
sbb
out
or
fistps
inc
jnp
push
mov
cmp
les
cmp
jle
cmp
push
jp
or
pop
xor
push
ds
fs
leave
in
decl
enter
hlt
cmp
jge
mov
pop
and
repnz
negl
xor
je
cmp
je
jp
icebp
js
mov
popa
lcall
adc
aaa
orl
mov
add
stc
outsl
jg
pop
js
ret
add
fildl
jne
pop
pop
mov
enter
stos
add
enter
dec
or
test
mov
sbb
dec
inc
or
add
mov
inc
hlt
jge
and
cmp
mov
hlt
jg
fwait
mov
movl
inc
cmpsb
mov
inc
inc
cmpsl
adc
ud2
push
fimull
lea
inc
jne
fwait
ret
insb
add
imul
xchg
enter
mov
push
sub
mov
ljmp
lcall
jg
push
scas
fstpl
and
inc
and
mov
mov
insl
pushf
lods
fildll
adcb
lret
outsb
inc
push
fstpt
and
or
jmp
pop
xor
push
inc
jne
xor
insl
clc
push
xor
mov
in
inc
scas
loopne
or
xor
add
add
sub
push
clc
call
cmp
xor
inc
hlt
jg
xor
cmpb
addb
mov
or
ret
loop
pop
rol
pop
add
adc
leave
mov
mov
jae
pop
addl
add
pop
inc
and
or
mov
popf
sub
loopne
push
mov
or
mov
mov
lcall
inc
cmp
in
push
fmuls
das
sbb
adc
cwtl
shrb
lods
add
sub
out
sbb
pop
push
pusha
fs
insb
movl
testl
mov
stos
mov
cltd
sub
out
push
jge
arpl
sub
mov
cmp
or
push
xchg
pop
xchg
pop
or
xor
mov
mov
mov
mov
adc
jne
xor
cs
cld
outsb
cmp
pop
roll
or
mov
loop
pop
sub
in
fs
mov
pop
mov
mov
mov
add
add
lret
movsb
loopne
lret
inc
push
jle
and
add
sahf
fwait
inc
mov
jge
or
rcr
outsb
xchg
sarb
and
dec
sbb
dec
and
aad
mov
mov
mov
and
pop
jns
mov
and
push
outsb
lds
sub
imul
xchg
dec
pop
fadds
nop
mul
movsb
xor
dec
adc
add
mov
fwait
int3
xchg
cmpsl
jns
sbb
sbb
push
nop
popa
cmp
mov
inc
jg
loopne
or
jo
push
dec
sub
insb
addl
jne
push
je
jo
xchg
lret
mov
sub
imul
mov
push
add
shrl
dec
jns
fnstcw
int3
cli
mov
lea
clc
mov
clc
movsb
rolb
mov
add
aad
push
and
addr16
mov
addb
lea
pop
mov
cmp
jno
mov
push
outsb
nop
out
dec
sbb
pop
sub
xchg
bound
push
mov
sbb
mov
and
sbb
jg
push
js
mov
push
mov
mov
or
ja
mov
mov
icebp
dec
sub
dec
popa
int
xor
xchg
xchg
icebp
mov
dec
imul
test
push
inc
adc
jg
cmp
add
gs
shll
imul
aas
in
lods
sub
and
test
mov
test
jg
lock
cmovge
cmp
adc
mov
mov
stc
and
daa
je
cmp
inc
adc
and
pop
push
or
pop
mov
cmp
les
pop
jp
inc
nop
out
sbb
test
mov
and
xor
or
je
push
jle
dec
add
xor
jge
push
ret
aam
in
fisttpll
push
clc
in
mov
scas
and
into
lret
shlb
testb
push
inc
fsubs
push
jmp
outsb
sbb
sub
in
dec
sub
add
movsb
test
mov
cltd
add
jecxz
lea
test
inc
loope,pn
movsb
out
les
mov
or
dec
xor
sbb
push
sub
in
dec
xchg
dec
and
rorl
bound
shl
mov
dec
ret
int
xchg
dec
xchg
lock
jnp
orb
or
dec
fcmovnu
pop
push
arpl
sub
cld
mov
jg
cmp
jl
lea
cmp
jle
dec
sub
inc
jle
sbb
ja
sub
sub
xor
cmpl
cmp
inc
jle
jno
push
and
mov
add
shlb
jecxz
xor
jle
and
nop
add
in
pop
cmp
hlt
xchg
push
arpl
loope
out
adc
pop
notb
shlb
mov
jge
roll
iret
jecxz
sti
pop
adc
or
stos
push
xabort
push
add
dec
rorl
ficoml
mov
or
outsb
dec
xor
and
push
mov
add
add
or
push
mov
inc
mov
xchg
mov
push
orl
lods
dec
sahf
mov
imul
cli
fsubl
or
ds
add
cmc
lcall
pop
pop
jmp
pop
fstl
cs
shlb
rorb
dec
inc
inc
das
call
pop
sub
cmp
outsb
hlt
rcr
shl
mov
push
cmp
decl
data16
inc
punpckhdq
imul
inc
push
push
aad
or
mov
fisubl
and
jmp
shr
sbb
test
lea
stc
sub
lds
decl
pop
mov
test
jg
mov
pop
push
cs
inc
loop
jno
dec
repz
push
inc
daa
test
lock
bound
dec
ret
ficoml
les
inc
sbb
lret
das
cmpsl
inc
sub
push
clc
xchg
add
in
xchg
dec
sbb
sbb
pop
sub
flds
mov
mov
xor
pop
sahf
pushf
nop
pop
sub
push
inc
adc
xchg
adc
lock
adc
or
dec
lcall
rcll
ret
rol
shlb
test
add
sub
in
xchg
and
cmp
jb
xor
mov
add
pop
mov
push
mov
mov
shl
jne
enter
div
inc
cmp
jae
mov
push
movb
xchg
jno
stos
push
or
jmp
jbe
outsl
sbb
lods
jnp
pop
call
sub
mov
and
clc
mov
ss
jbe
cmp
mov
adcb
shll
mov
sbb
sub
inc
je
js
dec
jge
xchg
lock
ret
add
fadds
pop
ltr
jo
je
mov
ss
xorb
adc
jbe
and
mov
lea
push
inc
ja
mov
aad
dec
push
cmpsb
je
pop
jae
lea
cmp
adc
xchg
and
adc
or
addr16
pusha
mov
adc
sub
ret
add
out
add
inc
mov
test
jne
sbb
outsl
shlb
mov
cmp
je
cmpb
clc
push
add
cmp
je
push
andl
je
mov
jbe
js
pop
leave
push
sbb
jae
jmp
lcall
out
add
jl
insl
adc
push
xchg
push
lods
xor
mov
mov
and
sbb
adc
ja
dec
lods
dec
or
xor
inc
or
nop
xlat
mov
lea
adc
test
jo
jg
push
add
push
cmp
cli
push
inc
mov
repz
dec
testb
fsubr
aas
adc
or
sbb
push
pop
and
dec
inc
push
sbb
das
inc
cmpsb
lret
push
je
cwtl
inc
sbbl
fldl
subl
xlat
aaa
nop
adc
xor
js
enter
add
adc
adc
test
xor
lret
jne
lock
push
in
xchg
jle
xor
add
adc
mov
xor
or
adc
out
xor
repz
stos
movsb
ljmp
cld
hlt
bound
dec
add
sbb
adc
js
pushf
dec
loope
xchg
push
ret
xlat
mov
inc
mov
sbbb
sahf
adcb
jns
add
icebp
or
xor
stos
out
push
push
sbb
inc
mov
out
adc
push
repnz
cmp
pop
stc
ds
sbb
jo
test
repnz
testl
or
push
or
pop
xchg
dec
mov
testl
sbb
or
fmuls
adc
call
inc
mov
xor
lods
addb
nop
int
jns
or
push
cmp
fildl
pop
enter
fisttpl
cmp
movsb
jns
adc
xor
and
sub
hlt
cmp
imul
push
inc
in
adc
dec
xor
mov
push
aam
push
loopne
or
push
addr16
repnz
xchg
inc
jne
fcom
pop
xorl
add
cmpl
pusha
jbe
inc
sbbl
jnp
jo
mov
sub
xor
add
into
cld
repnz
out
inc
push
jb
pushl
adc
in
int
xor
mov
int
cmp
shrl
inc
ljmp
mov
or
or
mov
adc
xchg
push
mov
dec
add
or
or
shrl
mov
mov
push
ret
vcvtsd2ss
mov
mov
dec
cmpsl
mov
dec
inc
dec
mov
or
int3
daa
and
dec
and
in
pop
xchg
xchg
inc
jae
rorl
sub
or
add
mov
and
pusha
rolb
xchg
push
idiv
inc
jno
or
mov
xor
mov
inc
leave
pop
add
sub
mov
push
call
decb
dec
icebp
push
mov
inc
mov
mov
add
mov
add
mov
sbb
test
xor
xor
dec
xchg
push
sarb
popa
das
and
imul
sbb
push
and
mov
inc
rorb
sarl
sub
push
jne
inc
and
aam
test
jp
movsb
cmpb
jmp
push
mov
dec
xor
inc
fldt
push
cmp
add
or
or
cmpsb
inc
jbe
enter
imul
sarb
dec
add
push
sbb
shrl
sahf
xchg
jno
sub
jecxz
push
cmp
push
adc
rol
and
inc
gs
jmp
and
add
pop
adc
ljmp
stc
jae
lcall
xor
aaa
sub
lahf
inc
mov
add
pusha
add
inc
adc
or
push
or
sarl
pop
leave
inc
add
add
sbb
push
les
mov
add
test
in
and
cmc
adc
pop
sarb
dec
sub
xor
dec
or
jo
jg
enter
or
or
jbe
xchg
fcomp
sub
mov
shlb
mov
xchg
jge
gs
test
xchg
negl
mov
mov
lds
cmp
xor
dec
sub
jne
cld
xchg
sbb
out
adc
mov
ret
adc
sbb
cs
test
popf
flds
addr16
mov
je
bound
loop
push
cmp
inc
cmp
rcll
xchg
mov
das
std
je
push
push
push
cmp
mov
mov
rcl
jl
or
push
mov
mov
and
scas
xor
clc
and
jne
in
or
pop
push
jae
mov
cmp
icebp
and
push
jb
push
in
push
push
push
or
mov
ds
lea
or
push
inc
pusha
add
mov
jmp
lea
or
daa
cmp
xor
push
push
push
push
mov
or
ss
adc
sbb
test
push
dec
adc
add
sbbb
cmp
and
popa
mov
mov
inc
push
in
insl
insl
and
cmp
jge
mov
pop
and
sbbb
sub
loopne
and
xor
fcom
jno
pusha
and
int3
cmp
stc
mov
sub
stc
push
rorl
or
pop
jmp
mov
or
inc
xor
pop
in
push
int3
mov
inc
push
arpl
mov
sahf
dec
insb
dec
dec
push
pusha
push
insb
jo
cmc
or
into
or
dec
jo
dec
pop
jbe
sarb
xor
cmp
fidivrl
push
cmc
insb
sub
mov
jo
jne
addl
pop
cs
and
inc
bound
pushf
test
mov
mov
sub
push
pop
clc
adc
cmp
or
pop
mov
mov
out
lret
jne
and
cmc
movl
in
cmp
dec
les
adc
fstpt
sbb
stos
and
fsubrs
mov
outsl
incl
add
pop
cmp
mov
push
push
ja
sbb
cmp
push
ret
jnp
add
dec
cmp
jne
push
adc
out
out
ds
add
add
mov
sub
lahf
and
enter
loopne
add
or
cmp
inc
fs
loopne
jo
insl
push
pop
add
ret
xor
sub
insb
add
jae
cmp
pop
cs
push
aaa
icebp
jmp
call
iret
jecxz
pop
movsl
in
test
jl
in
bound
nop
xchg
addb
jmp
dec
xor
or
es
js
ss
push
popa
cld
push
pop
mov
push
push
mov
imul
lahf
inc
sub
mov
mov
inc
or
inc
jbe
xchg
pop
add
jbe
and
test
jle
js
jbe
cld
push
add
push
cmpsl
add
scas
stos
push
rcr
jne
jmp
xor
sahf
and
call
imul
sbb
add
lock
in
jg
subl
or
testb
je
cmp
sbb
or
inc
pmulhuw
cmpsl
jp
push
cmpb
leave
jmp
lea
int
sar
add
bound
pop
ss
stc
enter
pop
sub
in
lret
sub
lock
push
inc
ret
sub
mov
rcrl
jmp
mov
jl
mov
dec
xor
cltd
jmp
push
leave
stos
jecxz
call
orl
push
movsl
pop
lods
cmpsb
adc
lock
jne
push
stos
jnp
jge
mov
sub
mov
add
adc
cmc
cmp
ja
lods
sti
outsl
push
push
cmpl
xchg
push
or
out
inc
inc
sarb
jns
cmp
ret
cmpsl
push
sar
fisttps
loope
push
pop
cmp
pop
mov
fidivs
jmp
add
lcall
adc
add
aaa
add
test
sub
and
mov
loop
push
loopne
dec
and
add
insl
movsb
and
mov
mov
add
or
ret
or
add
cld
jb
test
imul
in
and
adc
xchg
lea
lret
sub
ret
adc
std
cmp
mov
sub
and
adc
jge
dec
ds
inc
jp
movsl
dec
adc
cmp
aaa
in
in
sub
sahf
adc
in
adc
fists
xor
add
int3
add
cmp
insl
test
or
inc
fsubl
mov
sbb
loope
push
adc
inc
sbb
xor
mov
aad
in
mov
push
dec
xchg
jne
and
add
add
dec
ret
sti
and
int3
pop
lea
rep
cmp
dec
or
rolb
add
orb
mov
dec
mov
xor
dec
jp
dec
movsb
loopne
or
add
mov
add
sub
cmp
jae
sbb
aad
xchg
cs
in
or
ds
cmp
jmp
xchg
push
inc
imul
xlat
aas
pop
xor
jmp
mov
mov
push
and
setge
add
test
dec
dec
sub
inc
sete
jmp
repz
les
add
inc
movsb
push
clc
push
sub
and
cli
push
adc
sbb
cmp
mov
jbe
pop
lahf
repnz
inc
inc
cmp
hlt
add
or
cmp
xor
imul
out
push
sbb
in
or
hlt
or
fidivl
subl
mov
add
jne
loop
xor
pop
cmp
jae
ret
dec
out
adc
add
enter
bound
pop
mov
add
pmulhuw
sub
je
sar
push
lea
fadd
jnp
lock
stc
lock
xor
adc
push
xor
inc
mov
mov
inc
xor
push
popl
lock
jg
pop
hlt
add
mov
jb
mov
push
into
sub
push
les
inc
imul
je
mov
ret
push
xor
sub
pop
dec
pop
popa
push
cwtl
sbb
adc
popa
test
movsb
sub
dec
push
jbe
adc
insb
push
adc
cmp
pop
push
mov
fnsave
adcb
xor
bound
add
inc
lahf
scas
pop
add
in
ret
bound
pushf
sub
das
or
js
sub
fbstp
xchg
mov
cmpb
xchg
pop
les
inc
xchg
pop
mov
pop
adc
pop
hlt
sbbb
sub
js
adc
sbb
mov
dec
pop
scas
add
xchg
mov
mov
mov
loope
lods
jns
jo
pop
dec
cld
sbb
inc
jg
les
push
loopne
ret
cs
add
nop
roll
jmp
insl
xor
xchg
ret
xor
sbb
push
sbb
popa
jne
and
pop
popf
lods
add
sti
leave
rolb
pop
sub
jmp
or
bt
ja
ret
and
pop
icebp
test
test
or
lcall
ret
inc
and
sbb
fcompl
adc
das
sbb
and
sbb
add
stos
jnp
ret
pop
inc
cmp
mov
push
test
push
mov
and
jb
mov
jne
dec
inc
xor
pusha
cmovns
dec
ds
pop
add
and
into
add
or
sub
cmc
sub
loopne
movsl
fimuls
push
jmp
sbb
repnz
mov
mov
inc
push
dec
push
clc
lahf
je
cmp
jbe
push
leave
pop
test
mov
mov
das
sbb
pop
push
mov
add
sub
mov
dec
and
add
sub
push
add
cltd
pop
mov
mov
mov
mov
add
call
push
scas
jbe
lret
loope
leave
mov
jmp
push
sub
movsb
dec
dec
cmp
push
cld
mov
bound
scas
pop
and
add
cmpb
outsl
stos
imul
and
mov
sub
test
jg
jg
fs
test
movd
in
out
sti
movaps
enter
shlb
jle
aaa
das
mov
xor
cli
rcl
lret
fcmovnbe
icebp
sbb
or
jge
repz
or
jg
pop
and
xchg
ret
adc
jnp
mov
in
add
cmp
add
out
cmp
jnp
or
add
adc
adc
mov
int
add
ret
mov
jnp
mov
mov
add
mov
int
add
sbb
mov
inc
pop
pop
add
enter
sbb
cmp
aad
jmp
jge
jno
or
cmp
ja
sub
scas
mov
inc
xor
add
incl
xor
mov
or
lods
push
push
inc
test
or
pop
mov
test
imul
add
or
cmp
add
sub
filds
cli
add
xor
flds
sub
mov
hlt
mov
add
mov
shl
or
adc
and
jmp
js
in
mov
dec
ljmp
inc
mov
mov
js
dec
push
pop
decb
movsl
ret
dec
adc
adc
or
mov
jp
leave
lods
inc
adc
call
adc
push
pop
xchg
push
imul
je
movsb
cmp
je
pop
dec
clc
clc
jb
sbb
xchg
outsb
adcl
and
ss
fisubs
das
cmpsl
das
test
mov
sub
xlat
mov
out
les
push
dec
outsb
or
fidivs
test
push
xor
jg
push
les
lock
adc
and
mov
fs
ficompl
add
add
mov
mov
push
imul
pushf
sbb
xchg
mov
mov
test
jl
insb
lock
insb
fs
push
xchg
out
push
xor
in
call
sahf
out
lock
hlt
clc
inc
lahf
out
cld
cld
lea
clc
iret
imul
sbb
jmp
dec
les
jle
pusha
int
sub
inc
pop
sti
and
or
roll
push
xchg
sub
lea
jl
cld
pop
and
lret
or
cmp
data16
sbb
gs
pop
nop
push
push
je
fcmovne
ror
pushf
fiaddl
jl
mov
mov
mov
add
aaa
adc
mov
dec
addr16
add
mov
add
push
stos
mov
lcall
add
or
sahf
pop
lahf
out
and
push
aaa
sbb
jns
out
sbb
adc
adc
jns
out
or
or
aaa
inc
inc
sahf
add
inc
dec
or
push
fs
aaa
push
add
xor
pop
cvtps2pd
test
add
call
adc
fld
packssdw
insb
xchg
mov
je
xor
push
rcrl
xchg
insb
cld
inc
push
jnp
adc
sub
ret
cmp
aam
xchg
or
sbb
lock
inc
mov
mov
cs
lret
fistpll
je
mov
push
ss
or
inc
divb
addb
dec
sbb
jge
sbb
les
ret
jmp
std
les
add
lea
cmp
push
enter
mov
mov
push
jo
pop
jo
enter
add
mov
mov
and
out
shll
cltd
mov
sbbb
cmp
xchg
add
jmp
or
mov
ret
dec
cmpb
adc
aam
popa
sub
arpl
jbe
jp
jb
mov
lea
push
sub
adc
ret
mov
pop
je
mov
nop
pop
repnz
mov
test
je
xchg
inc
cmp
jne
inc
cmpb
out
sub
mov
adc
sbb
sub
or
sub
jecxz
rcrl
dec
ret
daa
and
push
int3
ljmp
cmp
test
push
or
sahf
lret
push
pop
jae
sbb
outsl
es
adc
cmp
mov
aam
push
shrb
pop
or
cwtl
add
lock
hlt
push
mov
shlb
adc
jl
adc
add
push
push
insl
add
in
test
pop
jmp
lods
adc
lea
add
jmp
orb
inc
out
add
and
test
or
imul
dec
push
rolb
xor
repz
test
shl
ret
and
rolb
sbb
imul
lods
cmp
pop
mov
movsb
jmp
out
out
icebp
in
sub
movl
lock
mov
and
sub
pop
inc
fldcw
push
inc
test
jmp
pop
lret
aaa
loopne
or
inc
testb
les
mov
jne
orl
xor
iret
cmp
sbb
push
or
mov
xor
push
jge
add
xor
adc
je
outsl
and
and
sbb
adc
jecxz
sub
push
rol
out
sbb
arpl
add
adcl
sahf
lahf
xor
mov
orb
jg
ljmp
jb
pop
jl
jg
cmp
aam
ficoml
cmp
inc
mov
mov
imul
and
xchg
lret
in
cmp
cld
data16
mov
sarb
push
jl
mov
incl
pusha
fs
sub
dec
cmc
lds
sbb
jbe
mov
mov
cmc
cmp
out
sub
fistl
fcomps
push
je
jne
lock
arpl
pop
ljmp
shrb
in
push
cmp
je
popf
fcoml
add
int
gs
dec
push
add
mov
sub
sbb
mov
or
sbb
notb
or
pop
mov
iret
push
cmpb
sarb
jnp
sar
aaa
mov
fs
add
add
ss
mov
adc
sub
sbb
sbb
or
or
mov
inc
sbb
sbb
inc
jp
dec
test
jl
jg
sbb
add
mov
pop
cltd
pop
idiv
add
and
stc
fdiv
inc
sbb
adc
jl
out
jae
cltd
stc
lea
dec
push
push
ret
mov
rolb
pop
decl
sahf
or
mov
push
add
int3
mov
inc
aas
dec
popa
call
test
push
jbe
ficoms
lea
stos
mov
xchg
andb
shr
mov
mov
or
pop
clc
adc
adc
or
jno
jecxz
sub
push
cmp
mov
inc
or
testb
clc
ret
jmp
xor
mov
jle
pop
push
push
sub
mov
into
mov
cld
sbb
les
adc
loopne
inc
repz
or
ds
imul
pop
push
loop
pop
inc
test
loopne
loopne
inc
fmull
mov
jg
ret
adc
mov
sub
dec
outsl
lods
call
and
gs
push
push
sub
jmp
add
icebp
pop
lock
addb
cmp
pop
xchg
lret
jbe
push
xor
pop
div
pusha
jae
pop
clc
add
scas
dec
adc
rorb
leave
nop
mov
iret
push
cmp
jae
sub
push
dec
call
popa
push
ljmp
je
inc
sub
mov
adc
fwait
xchg
and
popa
push
mov
sbb
pop
adc
int3
push
mov
fstps
adc
mov
lret
jns
or
mov
mov
mov
push
mov
add
push
and
loopne
push
orb
sub
in
jns
xor
call
sbb
sub
or
and
mov
push
or
jo
mov
int
orl
movsl
inc
mov
bound
mov
insl
or
and
jb
cmpsb
pusha
sbb
xchg
dec
imul
push
add
or
or
cmp
and
pop
sbb
aas
sbb
cmp
xor
clc
adc
mov
rclb
or
add
loopne
subb
xchg
and
aam
fmull
fadds
adc
lds
sahf
out
std
jae
in
sbb
pushl
insl
and
lahf
xchg
ja
mov
test
jp
add
mov
jnp,pt
mov
mov
stos
pop
sub
sub
in
or
adc
jns
outsb
sbb
adc
jmp
inc
loopne
loopne
or
cmp
loopne
pusha
dec
mov
sub
jmp
sbb
imul
xor
popa
repnz
add
sbb
ss
outsl
sub
sbb
pop
test
adc
lea
pop
outsb
mov
outsl
xchg
sbb
fs
std
movsl
das
sbb
jo
hlt
jp
ret
scas
mov
scas
ret
testb
inc
mov
cmp
je
mov
dec
sub
xchg
or
xchg
push
adc
shrl
scas
push
call
data16
inc
bound
jmp
push
lds
xor
ljmp
dec
push
add
xchg
jne
add
jns
xchg
sbb
in
adc
dec
inc
mov
mov
sbb
fcmovb
loopne
push
mov
push
inc
jb
bound
inc
dec
sub
bound
lret
cmp
cmp
stos
loopne
sbbl
fsts
inc
or
sub
mov
lods
adc
sbb
cmpsb
add
test
cmp
jne
or
fildl
cmp
and
adc
cmp
mov
and
add
sub
jne
lods
hlt
nop
sbb
shr
lea
add
xchg
sbb
sahf
dec
js
out
push
jns
mov
mov
pop
sbb
dec
add
mov
or
lret
loopne
mov
jno
lahf
cld
imul
sbb
lea
lods
mov
mov
in
mov
imul
lock
jl
clc
mov
adc
ja
mov
jne
jmp
mov
out
int
arpl
pop
ljmp
jne
and
mov
shll
mov
adc
inc
or
sbb
push
inc
pop
add
mov
adc
pop
aas
fidivl
jns
mov
shlb
cmpl
inc
mov
mov
add
lret
pop
and
adc
xchg
or
pop
push
inc
adc
testb
je
fmull
push
orl
and
jl
xchg
adc
inc
imull
pop
xchg
or
cmpsl
mov
or
mov
mov
pop
push
test
push
fcoms
icebp
and
loop
loope
pop
push
insl
aas
add
loopne
in
enter
cmp
and
pop
and
bound
and
ja
jne
push
pop
cld
add
mov
add
inc
decl
loop
inc
and
fisttpl
incb
xor
ja
mov
or
mov
mov
cld
xchg
test
xor
or
add
add
jl
dec
or
mov
inc
inc
out
mov
or
outsl
filds
mov
mov
mov
cmp
mov
inc
cmp
jb
bound
sbb
js
ljmp
outsl
shrb
or
add
mov
push
in
outsb
sbb
cmp
dec
sub
cld
jo
lock
pop
and
push
cmp
lea
and
jne
lcall
push
cmp
jne
mov
push
cmp
fwait
cmpsl
mov
es
jne
call
fwait
jns
into
or
scas
fdivrp
jb
enter
push
dec
jle
lahf
xlat
jl
adc
jmp
std
std
jmp
rclb
jns
cld
xor
sbb
adc
in
adc
loopne
inc
inc
mov
inc
cs
push
rorl
sub
jmp
mov
cld
push
test
in
mov
shl
adc
decl
jmp
data16
and
sahf
xlat
out
fs
test
adc
add
push
pushf
fs
cmc
les
aad
leave
xchg
pushf
mov
sbb
or
xchg
mov
fldcw
popf
mov
shlb
mov
xchg
add
mov
cli
lds
mov
mov
jge
out
xchg
pop
inc
clc
add
xchg
adc
and
or
inc
enter
lret
clc
push
push
xchg
add
and
add
adc
cmp
ja
xchg
sbb
sar
flds
sub
adc
ret
pushf
stos
push
movsb
push
pop
push
xlat
inc
jne
cs
adc
std
inc
aam
mov
je
or
jg
add
push
and
jne
add
cmp
imul
or
sbb
enter
sbb
or
nop
addr16
mov
popf
es
sub
daa
es
lods
add
cmp
add
clc
js
mov
ficoms
mov
inc
dec
and
adc
cmp
pop
adc
shr
sub
subl
adc
push
insl
mov
sub
les
and
jbe
xchg
mov
sub
insl
in
mov
lea
mov
dec
stos
add
inc
test
mov
and
ret
pop
or
xlat
xchg
decl
ret
and
xchg
pop
push
mov
dec
adc
mov
add
and
icebp
jmp
fdiv
ret
shl
push
adc
xor
mov
divl
lret
ljmp
nop
movsb
iret
xor
fnstcw
in
jbe
loope
jne
and
sub
decl
icebp
and
shlb
je
loop
test
inc
out
cmp
je
repnz
mov
adc
add
aam
xchg
pop
addr16
outsb
or
inc
cwtl
xorb
aad
imul
imul
inc
xchg
cmpsb
and
dec
add
and
and
pop
loop
add
in
jl
fucomip
out
sbb
es
add
jg
and
outsl
xchg
mov
hlt
inc
lcall
inc
movzbl
push
pop
inc
sub
xor
inc
push
mov
lods
lret
sar
inc
jmp
cmp
jne
orl
adc
dec
dec
and
jne
sub
lods
jg
add
adc
sbb
sub
xor
xchg
mov
mov
cmp
ss
mov
stos
jl
or
adc
or
adc
pop
xor
fmuls
lock
fwait
subb
lret
or
icebp
das
xchg
mov
and
movsbl
sub
jmp
mov
add
je
lea
cmp
sub
and
imulb
loopne
adc
sbb
xchg
jb
jne
push
push
push
and
and
insb
test
dec
push
and
idivb
mov
cld
imul
add
loopne
std
mov
test
jne
test
cmp
repnz
mov
divb
adc
outsl
das
mulb
and
sbb
and
xchg
add
sahf
pop
push
sub
stos
movsl
cmp
in
pop
cld
cmp
sbb
add
mov
jne
mov
add
inc
push
je
jmp
push
cmc
andb
fsubs
sub
in
popa
push
sub
xchg
add
jl
in
cmc
jle
clc
dec
xchg
mov
cwtl
mov
pop
dec
sahf
mov
xor
mov
mov
push
hlt
repnz
mov
push
inc
add
rolb
add
scas
es
ss
int
decb
pusha
xchg
cmp
jb
lea
rorl
fisttps
adc
push
pop
dec
ss
adc
push
push
pop
cmp
cwtl
jg
or
loop
pop
es
push
mov
mov
inc
ret
es
lret
sub
adc
cltd
test
out
out
cmp
or
pop
cmpsl
xchg
or
fcoml
xchg
cli
dec
aad
pop
data16
ret
mov
call
aas
and
call
test
and
pop
shr
stos
jbe
mov
shrb
add
fucom
shl
sub
daa
xchg
aam
xchg
data16
sarl
pop
xor
aam
and
pop
dec
mulb
cmp
pop
std
movb
pop
jmp
jne
jo
in
leave
sub
std
add
xor
je
in
add
push
movsb
in
imul
imul
mov
clc
push
ds
ret
stc
xchg
rorl
dec
mov
lock
adc
lahf
sbb
ss
and
xchg
sub
adcb
arpl
sbb
push
fistpll
data16
xchg
mov
imull
mov
repnz
add
clc
decl
test
mov
xchg
adc
bound
inc
adc
inc
dec
jb
cmp
ja
xor
add
rol
or
fdecstp
decl
pop
push
mov
cmp
je
cs
xor
or
or
dec
jle
mov
mov
mov
call
mov
mov
or
pop
sub
sbb
lea
imul
or
and
insb
and
adc
push
push
pop
sahf
xor
in
pop
sub
xor
xor
sub
add
ret
lea
adc
xor
pop
cmpsb
pop
add
pop
leave
add
add
add
leave
bswap
inc
lret
fcomip
mov
jbe
add
push
repnz
scas
mov
jb
pop
and
push
push
gs
enter
inc
or
or
leave
sbb
cmp
cld
add
pop
and
or
or
or
push
pop
and
jb
out
or
or
or
push
or
iret
enter
movq
adc
pop
adc
or
adc
in
add
adc
jns
cmp
adc
adc
push
adc
adc
adc
leave
ror
adc
push
repnz
push
inc
pop
out
cmpl
jns
sbb
xchg
sbb
add
enter
cmp
fcompl
sbb
jb
mov
dec
in
lcall
sbb
or
jns
and
xor
cmp
xchg
cmp
pop
push
push
add
xchg
inc
negb
pop
mov
aam
jne
add
add
sub
lock
mov
nop
outsb
movl
xchg
mov
mov
xorl
imul
sarb
movsl
test
xor
sub
sub
sahf
mov
inc
outsb
fiaddl
jne
adcb
xchg
ss
add
pop
leave
jmp
pop
and
jmp
jmp
adc
call
xchg
push
sbb
in
sahf
xchg
sub
in
mov
out
in
in
xchg
out
or
xorl
je
lock
xor
dec
icebp
icebp
push
repnz
repnz
cmp
repz
std
in
cltd
push
push
hlt
hlt
imul
negb
std
cmc
cmc
cmp
inc
div
mov
das
nop
xchg
sbb
gs
clc
mov
clc
or
sbb
stc
and
sahf
xchg
sub
add
sti
mov
cld
cld
cld
je
idivl
sbb
push
push
nop
shlb
mov
xor
iret
fwait
xchg
std
sbb
mov
xorb
in
jns
jnp
sar
test
rorl
dec
dec
or
inc
mov
jecxz
adc
xchg
xor
ja
cmp
push
pop
sub
idiv
mov
pop
xor
aam
out
out
in
and
scas
call
cltd
sti
jo
out
inc
mov
dec
jmp
pop
insl
nop
jmp
xchg
daa
in
cmp
pop
push
cltd
or
jmp
xchg
or
aad
imul
in
aad
cltd
cmp
cli
or
int
repz
sbb
add
xchg
push
cli
stc
mov
stc
imul
push
and
mov
xchg
clc
cltd
and
stc
push
stc
lcall
sti
sti
aaa
jb
inc
sti
xchg
or
cmp
mov
xchg
cld
jmp
mov
scas
int3
test
pop
test
je
ljmp
sbb
jecxz
xchg
pop
push
loope
clc
and
and
rclb
out
out
leave
or
loope
testl
or
jnp
ljmp
push
mul
andb
or
hlt
imul
out
test
adc
mul
dec
push
and
scas
notb
add
insl
repnz
dec
push
popa
xchg
inc
idivb
mov
or
push
dec
push
sub
sub
jo
mov
loope
cmp
leave
clc
cmp
xor
mov
mov
repnz
loope
cmc
cli
hlt
rcrl
pushw
repz
test
push
push
push
stos
into
jo
adc
push
mov
shlb
loope
loope
jns
xor
pop
hlt
pusha
pop
repnz
mov
hlt
in
subb
pop
repz
inc
repnz
mov
dec
push
cmp
xchg
repz
sbb
mov
cs
jae
and
jb
sbb
mov
cmpsl
bnd
test
icebp
cmp
in
push
arpl
inc
xlat
cmpl
push
cmp
mov
cld
icebp
cmc
jb
sbb
mov
in
mov
icebp
push
or
jne
rcrb
mov
dec
icebp
xor
or
out
lock
in
pop
pop
mov
test
and
sbb
mov
aaa
lret
dec
into
push
push
sub
ffreep
in
adc
rcll
shl
inc
sahf
xchg
stos
jge
push
add
data16
mov
test
mov
inc
addb
jne
stc
mov
cs
dec
icebp
dec
add
movsb
xchg
dec
add
sbb
mov
sub
rorl
mov
repz
push
inc
push
dec
sbb
adc
ret
dec
jle
lea
imul
dec
push
mov
stc
xor
data16
jg
sub
data16
dec
clc
inc
cmpsb
inc
js
ret
repz
or
sbb
push
jmp
jnp
gs
push
clc
add
push
add
mov
xchg
xchg
lods
inc
in
mov
push
das
and
out
es
rcl
int3
mov
nop
lods
pop
test
or
sub
jne
lea
dec
shll
je
add
sti
fisttps
push
fmuls
lock
and
test
repz
sub
adc
cmp
xchg
pop
push
cmp
dec
loopne
ret
cmc
call
mov
push
push
push
or
lods
loopne
add
cmp
adc
and
pop
lcall
divb
jmp
in
sub
push
loope
je
adc
int
loopne
in
inc
movsb
and
or
sub
inc
mov
ja
mov
pop
push
cmp
fbstp
dec
inc
jb
or
or
sub
mov
mov
inc
sub
mov
ror
sub
std
in
cmp
enter
add
popf
lret
bound
xchg
hlt
push
rol
and
mov
outsb
imul
mov
rclb
pop
jmp
imul
lea
push
cs
sub
js
rclb
dec
lcall
inc
mov
mov
bound
mov
inc
mov
sbb
inc
clc
or
repz
push
icebp
popa
ret
dec
xchg
call
aaa
add
jle
jb
inc
add
test
adc
mov
loopne
fwait
out
call
xor
push
add
stos
shrl
mov
adc
sbb
adc
sub
test
inc
aaa
or
mov
lock
push
mov
mov
aaa
mov
and
das
push
sub
add
push
xchg
test
or
sub
inc
lcall
cmpb
mov
cmpb
pop
pushl
decl
jne,pn
ret
sub
lahf
repnz
lcall
dec
mov
add
mov
mov
or
push
pusha
or
scas
jle
cmp
xchg
outsb
mov
mov
mov
xor
or
call
bnd
cmp
jae
dec
lea
loopne
jae
pop
or
mov
jbe
cwtl
adc
dec
add
push
add
sub
and
and
cli
in
pop
add
mov
repnz
sbb
mov
push
rolb
add
add
jbe
neg
xchg
cmpsb
or
je
or
inc
dec
je
push
mov
lret
lcall
add
or
mov
xor
sub
aaa
sub
push
imul
push
in
pop
sbb
movsl
jmp
pop
decl
pop
mov
inc
aad
int3
jmp
imull
add
stc
mov
mov
icebp
xor
or
mov
sub
pop
adcl
pop
sub
or
aad
adc
xchg
mov
jae
pushf
mov
mov
dec
jmp
aaa
xchg
enter
shrb
sbb
cmp
scas
cs
jge
xchg
int
cs
idiv
rorb
inc
les
mov
popa
inc
mov
and
xchg
xor
add
sub
jbe
cmp
mov
jo
pop
mov
mov
lret
fmul
adc
fs
jmp
jb
sbb
pop
call
ret
cs
or
leave
add
movsl
loope
xchg
adc
decb
mov
add
ret
or
add
sbb
lret
pop
addl
pop
aas
lea
pop
sbb
push
cmp
mov
or
dec
shll
cmp
imul
push
cmp
ret
sbb
inc
jg
cmp
push
insb
cld
xor
pop
push
inc
ret
mov
pop
adc
pop
mov
rcrb
pshufw
shrb
dec
jne
rcll
jg
movsl
mov
dec
movsb
loopne
mov
movsb
icebp
inc
or
jmp
in
mov
xor
std
testb
scas
pusha
dec
dec
in
pop
push
sbb
call
fcoml
jle
cmp
pop
jns
sub
adc
xlat
ret
or
push
pushf
stos
ret
rorl
shll
arpl
mov
inc
inc
dec
jmp
adc
insb
sqrtps
push
or
pushf
lods
mov
stos
push
push
movsb
mov
mov
push
xchg
fstpl
icebp
add
mov
sub
mov
repz
testl
adc
adc
or
repnz
add
test
add
xchg
clc
enter
jno
icebp
mov
cli
nop
pushl
cmp
call
jg
repnz
loope
test
call
jo
cwtl
sub
mov
jbe
jo
push
jb
in
sbb
or
mov
mov
xorps
jg
insb
call
inc
mov
push
push
mov
push
inc
inc
or
mov
je
lods
movsbl
rclb
mov
adc
inc
cwtl
movsl
mov
dec
je
popa
test
cmp
loopne
mov
sbb
jbe
sbbb
pop
je
lea
sub
sub
mov
adc
movl
inc
or
scas
mov
dec
outsb
add
divb
mov
in
dec
negl
push
add
out
mov
andl
mov
mov
xchg
jno
add
sub
jg
sub
mov
addr16
test
push
out
xorl
test
xchg
xchg
xor
shll
mov
jns
in
mov
or
mov
lods
rcr
mov
add
push
xchg
or
mov
popa
cmpsl
push
lea
mov
shrl
add
add
mov
in
cs
push
jns
rcrb
dec
movsb
js
jns
lcall
cwtl
mov
mov
dec
sbb
das
or
jp,pn
ret
inc
sbb
xor
push
mov
or
dec
mov
or
xorl
dec
scas
imulb
pop
adc
outsl
dec
lds
fnsave
dec
jmp
cmc
mov
push
popa
or
fcmovne
or
mov
fsubs
pop
pushf
mov
or
les
push
jnp
adc
movsl
xor
inc
or
push
leave
push
and
cli
dec
jle
jns
and
inc
loop
aam
push
stos
push
movb
pop
and
in
call
add
mov
jbe
sbb
shrb
cltd
aad
hlt
aad
fisttps
push
lods
jns
and
sbb
push
mov
cmp
and
adcb
sub
fistpll
xchg
in
addb
inc
push
jmp
jg
jae
cmpsb
xchg
inc
push
cmpb
jne
inc
inc
mov
aam
jb
adc
imul
jbe
inc
inc
pop
cld
ja
add
jbe
pop
sub
sahf
popa
inc
sbb
ror
nop
cld
xor
dec
clc
jne
mov
sbb
jmp
ja
mov
jmp
das
data16
fldl
sub
xor
push
and
mov
sub
mov
or
adc
add
mov
xchg
xchg
fists
sbb
pop
out
iret
lret
and
popl
sar
cmp
mov
xchg
push
mov
cmp
incb
mov
adc
add
sarb
xchg
jle
fcom
push
mov
mov
mov
loopne
jge
lds
sub
push
or
aam
cmp
sbb
inc
push
push
xor
into
inc
adc
repnz
or
mov
cmp
push
lock
xor
adc
adc
add
add
cld
rcll
xchg
imul
sbb
or
iret
mov
adc
or
mov
clc
mov
mov
inc
nop
lea
bound
xchg
add
lcall
mov
dec
addr16
or
in
jmp
test
loopne
mov
and
sbb
jge
lea
lods
test
and
ja
sub
or
or
aas
push
push
stos
mov
rcl
mov
in
out
or
cld
fiadds
or
mov
lods
jecxz
xor
push
cmp
in
and
inc
inc
cld
outsb
xchg
xor
outsl
mov
cmp
push
orb
mov
lods
jmp
and
je
and
sarl
adc
mov
add
test
pusha
mov
pop
mov
cmp
imul
sti
sbb
enter
and
cli
sbb
and
cld
jmp
test
fiaddl
dec
inc
xchg
pushf
dec
imul
dec
add
pop
aas
pop
lahf
mov
mov
imul
jg
add
add
push
xor
add
mov
test
mov
xor
sub
sbb
xor
sub
xor
jns
xorb
jne
mov
push
loopne
int3
cmp
mov
roll
std
xor
jmp
push
inc
in
jne
mov
into
shll
and
sbb
imul
jne
jmp
jo
mov
sub
xor
mov
popf
es
les
rcrb
addl
add
test
popf
popa
adc
push
leave
push
add
push
out
mov
mov
and
add
or
push
jg
xor
into
std
rcl
int3
and
push
jmp
and
jl
xor
push
and
pop
popf
xchg
enter
inc
sbb
aas
push
jge
js
inc
enter
or
push
mov
jbe
repz
fbld
mov
test
lds
mov
dec
push
leave
inc
cltd
lea
cmc
sub
lea
dec
aaa
jmp
sub
or
push
jmp
loopne
inc
adc
filds
cmp
data16
sub
push
stos
fld
jne
jo
inc
sbb
mov
inc
push
push
cld
xorb
movl
rclb
push
xchg
lock
pop
dec
mov
pop
mov
mov
sbb
dec
cmpsb
repz
call
inc
jle
sbb
jge
idivb
sbbl
push
push
mov
inc
dec
jne
adc
stos
mov
add
sbb
push
or
lds
adc
jmp
cmp
and
pop
add
inc
js
loopne
mov
dec
loopne
sbb
mov
adc
push
add
in
loop
push
sbb
inc
jecxz
data16
fistl
xor
and
lods
lahf
lret
fs
jno
adc
in
xchg
inc
lcall
push
xor
cmp
test
cmp
jo
test
ljmp
or
xchg
add
add
or
inc
rorb
mov
dec
negl
leave
out
inc
cmp
jmp
xor
sti
mov
or
mov
jmp
add
ss
push
xor
out
imul
mov
sbb
lahf
stos
xlat
mov
popf
jmp
sub
sti
ficoml
and
inc
mov
push
rolb
and
xchg
add
and
pop
movl
rclb
mov
jmp
push
sbb
mov
lea
mov
push
sarb
sub
mov
mov
cmpl
loopne
inc
or
pop
ret
adc
sahf
xlat
out
adc
movsl
sub
jno
pushf
push
bsr
mov
cmp
lea
jne
push
notb
outsl
je
push
popf
mov
pop
cmp
jne
sbb
lds
lods
pushl
addr16
imul
sarb
rolb
movb
xchg
xchg
int3
mov
adc
fcmovbe
sbb
lcall
sbb
cwtl
daa
and
adc
sbb
int
aam
pop
mov
lea
jg
sarl
cmp
or
imul
cld
loope
push
add
inc
add
add
adc
lock
jns
pop
bound
pop
cmp
fwait
or
inc
shlb
push
mov
mov
mov
fnsave
cmc
cmpsl
pusha
pop
inc
andl
fdivrp
or
lock
cwtl
adc
sub
sbb
jo
or
aad
add
mov
hlt
cmpsl
bound
pop
ljmp
jmp
pop
andb
add
ret
or
mov
sub
fs
sbb
push
push
das
or
insb
and
fisubrl
push
into
mov
push
push
pop
fnsave
inc
add
xor
mov
mov
cs
mov
mov
clc
push
inc
pop
or
insb
cmp
jle
add
pop
in
insb
lods
jnp
or
add
jg
pop
lods
add
mov
into
sbbb
xchg
mov
out
push
bound
sbb
mov
push
imul
dec
clc
cmovle
fdivrl
xor
sub
and
pop
dec
push
mov
dec
mov
mov
movsb
ds
pop
pop
test
inc
add
pop
jb
dec
add
jae
or
inc
mov
not
enter
sbb
cmp
movsb
push
adc
mov
pop
call
clc
or
and
sub
cmp
nop
add
nop
inc
inc
dec
and
and
rorl
sbb
decl
repnz
push
dec
pop
sarl
insb
pop
add
and
pop
cmp
pop
adc
xchg
mov
stos
xor
or
push
adcl
dec
mov
popa
or
or
pop
shrb
stos
outsl
mov
gs
jo
dec
push
xor
pushf
cmp
sub
pushf
cltd
push
es
adc
adc
mov
sbb
cld
insb
inc
fwait
cmpsb
jp
push
dec
ja
mov
adc
int
jge
pushf
or
inc
popf
sub
inc
push
mov
fistps
xor
fs
out
lea
mov
inc
jne
scas
mov
stos
inc
lahf
xor
push
xchg
push
test
ja
mov
push
sbb
pop
test
daa
cmp
or
jo
adc
and
sbb
iret
mulb
inc
test
loopne
lea
xchg
fcomps
xchg
xchg
fistps
clc
or
test
lahf
xchg
xchg
les
popl
xchg
lea
test
fucomip
fisubrl
aaa
dec
cld
xor
adc
movsl
pop
push
fchs
cld
adc
pop
in
loopne
push
inc
test
xor
scas
hlt
insl
push
xchg
test
mov
jmp
stos
testb
pop
ret
push
xor
push
push
es
add
dec
pusha
sub
jmp
inc
dec
lea
pop
and
and
sbb
mov
push
inc
add
fs
jb
push
add
add
or
lcall
jmp
xchg
decl
mov
jae
or
mov
adcb
aas
push
push
and
shlb
xlat
pop
push
pmulhuw
adc
xor
stos
in
pop
aas
shlb
enter
mov
movsb
push
pushf
ds
repz
mov
pop
add
or
lock
jmp
je
pop
adc
in
xchg
inc
enter
jne
nop
jo
pop
sub
xchg
push
mov
add
pop
jbe
jbe
repz
adc
push
and
xor
inc
push
jbe
sbb
sarb
insb
or
shl
test
dec
and
jno
or
lret
xchg
mov
jne
xchg
mov
mov
int3
jge
inc
push
sbb
add
pop
and
or
shlb
jl
and
jo
ljmp
das
add
add
outsl
lret
add
lock
cld
xchg
ds
add
jle
fcomi
arpl
sub
insb
jb
lea
and
ret
cmp
and
adc
hlt
jmp
adc
hlt
je
push
js
push
jo
push
cmp
add
test
loopne
xor
inc
xor
jbe
pusha
dec
jnp
mov
mov
and
lods
add
mov
dec
adc
jle
pop
mov
cmp
ja
jae
xorl
mov
jae
nop
inc
and
jmp
jns
in
imul
clc
lock
jbe
pusha
sub
jne
or
mov
jmp
test
addl
sahf
int
adc
pop
xchg
ret
daa
leave
inc
les
adc
clc
mov
add
lret
mov
add
push
dec
mov
js
add
sbb
lea
inc
cmp
les
mov
pop
pop
pop
pop
or
and
jg
sbbb
cltd
andl
sub
xor
movsl
shrb
ss
add
ss
add
xlat
sub
test
push
in
xchg
cmp
rorl
fldl
fsubrs
or
inc
xchg
lea
adc
inc
cli
or
lcall
cmpsb
mov
and
test
out
or
lahf
xchg
push
mov
add
imul
add
inc
loope
insb
mov
sub
fcmovne
pusha
outsb
adc
pop
inc
faddp
mov
mov
mov
pop
divl
push
mov
adc
inc
add
jl
pop
sbb
mov
push
jne
pop
shrb
lret
ljmp
jns
add
push
pushl
or
add
sar
shl
add
aad
adc
aam
je
add
push
xor
repnz
mov
and
test
and
outsl
adc
push
out
xchg
loope
sbb
mov
imul
ss
test
jno
stos
and
and
push
xchg
shrb
mov
xor
lock
in
inc
je
add
rorb
jg
adc
mov
dec
xor
mov
movzwl
cli
imulb
sbbl
lcall
inc
cmp
jne
push
insl
addl
iret
das
mov
nop
jmp
inc
repnz
jbe
add
pushf
add
adc
xchg
mov
push
lret
lret
popf
mov
jae
pop
fdivrs
shr
cmp
popf
mov
out
mov
push
repz
jb
andb
rol
lock
into
lret
xchg
call
loopne
movsl
xchg
sbb
xchg
sti
or
add
cmpl
data16
clc
sub
add
pop
ja
test
mov
in
movsl
int
loopne
rcrb
ror
push
stos
test
sar
pop
lods
movsb
inc
xchg
xor
cmp
xchg
xchg
out
add
sti
or
cs
aam
xor
mov
nop
dec
or
je
or
dec
inc
jne
sub
ds
pushf
pop
or
inc
lret
in
add
sbb
sbb
cli
testb
movsb
sub
sti
mov
adc
fsubs
rcrb
testl
arpl
pop
subb
lret
or
ja
movsl
mov
es
add
enter
movsl
hlt
hlt
out
sub
stc
sub
push
and
je
ja
aad
test
add
loope
insb
into
pusha
sub
adc
sbb
pop
insl
outsl
aaa
mov
mov
js
add
imul
xor
jecxz
pop
sbb
fs
xor
insb
cmp
outsl
movsl
mov
and
push
imul
movsb
mov
mov
add
jmp
int
adc
ljmp
js
lcall
je
jge
int3
jnp
push
or
add
and
movsb
nop
mov
xor
out
mov
push
test
adc
and
addr16
push
arpl
testl
xchg
test
jne
das
mov
ret
loope
cmp
dec
test
mov
and
in
sti
sti
aam
jmp
xor
add
in
mov
mov
xor
mov
xchg
pop
cwtl
or
mov
loopne
into
sahf
add
push
insl
cmp
shl
jne
xor
pushf
sub
add
movsb
scas
adcl
mov
xchg
outsb
inc
cmp
mov
adc
mov
sti
out
push
mov
pop
mov
enter
rorb
push
filds
inc
idiv
mov
lcall
inc
arpl
inc
cmp
dec
fwait
adc
pop
nop
cmp
push
cltd
mov
mov
add
je
aam
ret
out
pop
jns
push
sbb
mov
pop
sub
outsb
jo
jmp
mov
adc
jmp
sub
outsb
je
arpl
setnp
je
je
mov
aaa
out
adcl
fbstp
test
aad
lock
dec
xchg
xchg
add
lcall
lods
xor
jbe
sbb
or
mov
and
shl
adc
pop
cmp
std
mov
es
movsb
jne
movsb
addr16
mov
arpl
cmc
sti
jmp
cmp
jle
popa
mov
adc
and
pop
push
push
sub
aam
mov
sub
dec
add
sbb
adc
rorb
orl
insb
mov
or
sub
and
adc
bound
ret
push
xchg
add
inc
sbb
hlt
test
clc
les
jecxz
dec
lea
stos
sbb
adc
movsb
scas
data16
enter
call
dec
int
jg
aas
sub
inc
stos
aam
loop
push
pusha
jno
js
inc
test
xchg
mov
mov
or
cmp
mov
inc
daa
add
dec
pop
adc
adc
arpl
jo
dec
mov
pop
mov
das
push
adc
push
push
into
xor
inc
mov
dec
adc
pop
mov
inc
xchg
in
adc
dec
adc
ljmp
jmp
jbe
dec
orb
jmp
mov
add
push
dec
sbb
stos
pop
jl
jae
fmuls
neg
mov
xor
mov
pop
pop
fstpt
lock
mov
and
loope
cmp
mov
mov
or
jne
and
test
sti
subb
or
in
or
inc
jge
sub
cltd
push
and
lock
nop
dec
repnz
sahf
add
clc
bt
sub
sub
inc
scas
xchg
mov
ljmp
inc
add
addb
into
lcall
mov
add
inc
jmp
mov
clc
push
jmp
dec
mov
outsl
push
or
sub
sar
add
cld
mov
das
std
mov
jle
add
sub
fimuls
add
and
adc
data16
pop
push
mov
fcoms
mov
sub
in
jle
cmp
and
dec
xor
pop
sarb
add
fdivl
shlb
push
test
mov
adc
xor
cmpsb
leave
jbe
inc
aam
adc
add
addr16
sub
je
adc
or
jle
out
mov
loopne
cmp
loope
lret
lcall
adc
sub
pop
int
cwtl
xorb
pusha
cmpsl
mov
je
push
nop
outsb
jae
xchg
pop
movsl
and
les
loopne
lods
or
adc
movsl
daa
pop
mov
mov
push
lret
inc
mov
insb
mov
mov
pop
add
adc
jmp
call
jg
add
jl
sub
lahf
out
jecxz
jle
movl
les
lods
mov
or
sarl
or
lock
loop
out
pusha
pop
adcb
out
std
add
hlt
and
sbbb
cld
add
push
call
rcr
cltd
test
push
inc
jmp
insl
inc
add
jecxz
pop
pop
rcl
pop
pop
and
sbb
push
out
mov
mov
ss
add
cmp
push
inc
push
gs
outsl
pop
enter
out
lcall
push
mov
adc
sti
fs
push
fstl
outsl
je
outsl
fwait
xor
cmp
cmp
cmp
sub
lea
loopne
test
hlt
subb
push
lock
int3
or
loop
stos
mov
pop
ss
loop
movsl
clc
sub
sbbl
daa
xchg
push
fildl
push
jbe
pop
push
push
add
loope
mov
lods
push
pusha
dec
and
aaa
xor
negl
inc
mov
sbb
aad
mov
add
dec
jb
push
or
ret
add
aaa
push
mov
daa
and
mov
sub
je
in
pop
int
sbb
jne
push
subb
pop
xlat
nop
and
es
pushl
loope
icebp
push
fldl
cwtl
js
or
pop
inc
js
push
adc
fstpl
rcl
pop
push
insl
jns
shl
mov
pop
mov
add
es
xchg
sub
cwtl
lahf
sub
mov
or
insb
pop
imul
add
pop
mov
dec
adc
xor
testb
insb
xchg
lahf
jmp
lock
dec
lock
or
in
push
sub
push
add
mov
jo
mov
mov
cltd
aam
push
push
mov
mov
jg
add
xor
inc
sbb
sbb
or
pop
loopne
sub
loopne
ja
adc
push
cld
mov
inc
imul
adc
sti
sbbb
xorb
xchg
push
sbb
dec
jge
adc
xlat
add
mov
sub
inc
jg
fs
jne
addb
sti
and
add
push
cmp
adc
pusha
nop
mov
fucomi
leave
adc
sahf
jne
add
mov
and
inc
push
and
ja
push
mov
xchg
and
out
jo
jo
jo
pop
or
cmpsl
into
addr16
sub
mov
add
xchg
sub
sub
add
arpl
adc
aad
fistl
fidivl
cmp
dec
adc
lret
test
mov
bound
jl
or
inc
cld
xor
movsl
dec
test
lods
test
sub
cmp
jno
jbe
aam
pop
mov
ds
or
mov
icebp
cmp
in
or
les
add
pop
out
add
ret
cwtl
popf
pop
cmp
xor
mov
ja
xchg
orb
pop
frstor
mov
adc
into
push
and
es
pop
sarl
inc
mov
pop
pop
ja
cmpsb
in
cwtl
mov
push
jne
inc
daa
xchg
out
dec
or
loopne
mov
adc
mov
push
lret
mov
or
add
imulb
mov
sub
fs
test
sub
ficoms
rorb
push
lret
ss
dec
leave
xchg
scas
mov
hlt
adc
cs
mov
in
aam
push
inc
rclb
ja
fistpll
insb
jne
jbe
fidivl
pop
and
add
cmpw
ret
test
movsb
mov
daa
test
inc
pop
cmp
inc
daa
daa
daa
daa
cmp
es
aam
push
mov
sbb
in
push
xor
dec
rorl
mov
xor
xchg
pop
in
pop
orl
xor
aam
and
push
nop
sub
mov
sub
clc
adc
push
jns
push
mov
in
notl
inc
fcmovnb
push
xchg
add
sbb
aam
pop
push
mov
add
int3
mov
sbb
test
xor
test
call
fdivrs
pop
fsubrs
out
out
add
jb
repnz
in
cmp
nop
lret
leave
and
js
dec
mov
in
in
and
incl
cli
mov
mov
test
mov
push
es
pop
call
push
dec
nop
mov
xchg
fs
xchg
mov
mov
or
inc
popf
out
hlt
popf
lods
pop
push
dec
gs
addr16
mov
xchg
push
enter
pop
test
into
fsub
mov
pop
and
push
and
add
xor
fmuls
fidivl
loopne
push
repz
enter
fs
cwtl
ljmp
pop
decl
xor
repnz
xchg
in
xor
inc
push
test
fdivs
aam
xchg
and
dec
sti
push
aam
and
xchg
inc
test
push
push
test
aam
nop
test
popf
sub
push
add
pop
ljmp
clc
add
fbstp
nop
mov
lea
jmp
sahf
cmpsl
stc
inc
mov
andb
subb
fwait
dec
sub
add
cmp
mov
or
xchg
xor
fnstcw
sub
push
lock
cmp
jp
lret
mov
pop
and
pop
enter
addr16
scas
lret
sub
loopne
cs
fwait
rcll
jmp
mov
sub
popa
loopne
es
and
mov
inc
inc
orl
pop
mul
das
adc
dec
push
das
mov
or
mov
adc
or
mov
add
imul
sahf
enter
and
shr
lds
cmp
push
lock
adc
xchg
adc
lods
sub
js
mov
adc
inc
cmp
cmpsb
mov
mov
not
and
or
mov
jecxz
int3
lods
cmp
sbb
cmpsl
inc
mov
adc
add
or
add
popf
cmc
repnz
adc
cmpsb
cmpsb
pop
dec
inc
jmp
mov
sbb
mov
sub
sub
test
push
dec
or
gs
xchg
jnp
push
les
je
push
or
or
pushf
inc
fadds
daa
sbb
or
stos
mov
adc
fmuls
call
lock
subl
mov
jp
enter
sub
jno
xchg
pop
in
pushf
js
cmpl
mov
pusha
mov
mov
inc
sbb
and
cwtl
sbb
mov
das
cwtl
test
mov
je
dec
add
and
sbb
in
add
nop
mov
mov
pusha
xor
push
push
lahf
jle
loopne
stos
movsb
data16
sbb
push
ss
sbb
es
add
push
cld
cld
stc
or
xchg
nop
imul
jmp
decl
xchg
push
orb
lret
xchg
push
push
jns
dec
ret
cmpsb
dec
sahf
pop
dec
fcoml
subl
adc
mov
adc
lea
xor
sbb
pop
or
pushf
dec
popl
cwtl
out
sahf
out
stos
mov
ret
jns
sbb
into
xlat
loopne
or
adc
add
insb
and
xor
inc
stc
or
inc
cld
jns
pop
fnstsw
cs
mov
mov
or
push
pop
in
mov
jle
push
idivl
inc
mov
movsb
pop
je
push
cltd
jmp
ja
sbb
inc
faddl
pop
and
and
andl
test
rcr
sbb
pop
fucompp
mov
jp
mov
lahf
arpl
and
push
push
test
jmp
sub
and
movsl
dec
js
insl
adc
pop
or
je
lea
rorb
fadds
pop
cs
call
sub
enter
std
lods
pinsrw
std
cltd
mov
jne
add
mov
push
pop
clc
enter
mov
sar
shl
add
mov
jne
dec
sbb
mov
sar
lea
imul
and
pop
jno
cmp
inc
test
pop
xor
repz
or
inc
test
xlat
jb
faddl
es
xchg
arpl
cmp
mov
dec
das
lret
or
shrb
inc
mov
int3
jmp
cs
shl
enter
mov
jne
int3
pop
cmpsl
pop
or
add
xlat
push
pop
orl
add
fcoms
mov
adc
out
test
pop
mov
pop
jl
mov
mov
xor
sbb
xor
call
outsb
cmp
nop
shlb
rcl
or
inc
push
pop
cmpsb
pop
incb
jae
mov
dec
aas
insb
jne
inc
sub
pop
pop
scas
pop
inc
aad
pop
and
aaa
adc
ss
je
in
pop
push
cmp
cmp
xor
addl
xor
cmpsb
rorb
jmp
cmp
test
jne
fwait
push
mov
imul
mov
or
or
loopne
push
cmp
push
push
inc
push
dec
sahf
lahf
sbb
add
lock
test
iret
sar
jle
push
or
rolb
xor
push
ret
test
pushf
adc
movsl
push
mov
push
aas
cmc
cmc
popf
jg
cmp
sub
fisubrl
mov
push
xchg
ds
pop
xor
xchg
stc
mov
jnp
mov
xor
mov
mov
or
cltd
popf
lcall
xchg
pop
cmp
xchg
lcall
out
jo
mov
cwtl
add
xor
xchg
hlt
movzwl
xor
hlt
lret
dec
dec
imul
imul
adc
loopne
dec
nop
dec
jno
or
mov
sub
pusha
dec
or
add
rorb
add
adc
pop
jo
cmp
dec
sahf
xchg
shl
add
mov
in
xor
lock
std
test
std
xor
daa
sub
cmp
std
fdivr
jns
push
jnp
adc
leave
pusha
addl
push
std
lock
mov
rclb
clc
push
add
add
add
popf
out
xchg
push
cmp
jle
fisttpll
jno
cmp
mov
in
insl
jns
jns
cmp
mov
jl
pop
call
dec
mov
mov
mov
movsb
std
xchg
std
int
jne
cmp
jb
test
std
push
adcl
mov
lret
inc
dec
and
std
in
test
rcll
push
push
iret
mov
sub
sub
mov
std
fscale
xlat
mov
inc
add
movb
and
iret
xchg
cmp
sub
ret
in
cmp
push
fistl
ljmp
xchg
push
int
std
call
nop
std
daa
int
sbb
subl
sub
cmp
std
daa
pop
in
pushf
std
mov
fs
loopne
dec
mov
dec
mov
or
movsl
jp
ja
dec
data16
cmpxchg
sub
sub
mov
pop
dec
push
add
jns
cmc
rcl
mov
push
jge
std
xor
push
test
jmp
fcompl
sub
or
xchg
bound
adc
and
int3
jge
negl
jmp
loopne
inc
dec
and
dec
push
lahf
popa
jns
jne
jo
mov
lds
xor
mov
ja
and
mov
pop
aam
jmp
fwait
mov
mov
dec
lahf
fstpt
test
mov
mov
je
push
push
mov
push
or
mov
push
add
negl
test
mov
adc
fimuls
sub
pop
jnp
dec
lahf
mov
jmp
int
adc
lahf
inc
mov
and
mov
inc
pop
add
and
dec
jl
imul
inc
mov
std
mov
cmp
fimull
pop
mov
push
xchg
xor
add
push
push
test
jne
cmp
repz
cmpsl
push
in
dec
mov
inc
out
mov
and
sbb
movsb
mov
enter
sub
add
push
add
loope
popa
nop
dec
sub
xchg
roll
adc
or
jne
insl
sub
faddp
or
aam
ljmp
dec
push
test
movsb
push
enter
mov
mov
xchg
add
shrb
cmp
iret
mov
aaa
lods
push
xlat
push
into
xor
or
sub
sbb
jo
pop
shll
fisttpl
call
pushf
sub
pop
xchg
lock
movsl
in
test
cmp
sahf
dec
cmp
popf
cmp
jno
push
lea
outsb
aad
add
aad
add
enter
test
jns
fyl2xp1
inc
scas
movsl
call
stos
xlat
scas
mov
xchg
sbb
xlat
movsl
in
inc
pop
enter
aaa
xchg
imul
pop
and
iret
mov
push
movsl
in
in
and
and
in
aad
inc
imul
and
jo
mov
leave
and
in
xchg
xchg
lret
repz
jne
out
inc
in
repnz
mov
leave
out
movsl
test
movsb
leave
enter
int3
es
in
enter
lea
nop
mov
dec
rcr
cmp
sub
cmp
fdivrs
dec
dec
scas
xor
sbb
sbb
and
and
enter
mov
mov
and
add
leave
inc
and
mov
rcll
mov
insb
mov
enter
stos
int
mov
mov
push
mov
enter
jle
enter
arpl
mov
jne
repnz
iret
test
test
leave
adc
movsb
test
push
and
sbbb
lods
pmaxub
sarl
adc
std
adc
hlt
or
scas
ljmp
add
jns
daa
lods
push
pop
mov
lods
or
cmp
out
rclb
push
lock
pop
xchg
jg
ret
jg
negl
pop
jg,pt
push
test
adc
and
inc
push
mov
mov
pusha
jo
jecxz
jne
push
and
mov
jmp
lods
mov
sbb
jg
adc
divb
xor
sub
push
js
add
movsl
mov
sub
jne
xor
insl
mov
sbb
cli
pop
pop
pop
fdiv
jg
push
shll
rclb
bound
add
xlat
push
add
out
pop
lret
push
add
dec
push
roll
add
fwait
clc
jl
or
adc
push
and
lahf
dec
in
mov
outsl
cmp
jl
inc
or
jbe
jle
loopne
dec
dec
movsl
push
outsl
ja
mov
mov
mov
or
fiadds
outsl
in
add
ffreep
lea
lea
inc
out
and
out
inc
punpcklbw
shr
push
mov
xor
and
inc
fldl
test
push
negl
loope
push
dec
push
mov
lret
popa
jns
inc
push
mov
mov
cmp
cmpsl
cmp
xlat
sbb
dec
cwtl
adc
pop
ret
fnsave
arpl
cld
loopne
adc
or
xor
cmpl
or
shlb
xchg
xor
mov
add
adc
sub
pusha
add
push
pop
mov
or
outsl
mov
test
je
divl
adc
or
test
dec
cmp
push
loopne
and
sbb
mov
or
inc
xchg
and
jle
sub
and
and
mov
filds
push
mov
shll
fucomip
stos
bound
inc
rorb
or
out
sbb
or
cs
mov
lea
jb
int3
loopne
popf
cmp
mov
cmp
add
fld
add
mull
mov
push
daa
add
daa
test
je
push
mov
jns
adc
xchg
pusha
in
in
xor
xor
clc
add
add
or
mov
jo
movb
test
cmp
ss
std
push
sbb
mov
lret
or
sar
jl
sbb
mov
push
cmp
rolb
sub
lcall
icebp
mov
jnp
xorb
inc
dec
pop
dec
and
push
adc
pop
mov
decl
jge
rep
leave
pop
popa
jg
pop
mov
testb
rorb
cltd
xchg
rolb
xchg
in
loopne
loop
call
ret
jae
sub
push
mov
enter
sub
push
push
xchg
ss
ficomps
adc
dec
movups
mov
stos
and
fdivrs
fwait
jp
jae
sbb
sbb
decl
cmpsl
test
les
ss
gs
les
push
je
scas
xchg
out
jo
push
push
dec
mov
xchg
and
mov
xor
mov
mov
pop
mov
add
push
cmp
sbb
sbb
shrb
aas
imul
sbb
jge
int3
xor
mov
dec
fs
mov
jmp
mov
das
push
scas
imul
test
sbb
jnp
mov
cmp
ret
and
fldenv
sub
je
fdivr
fstpt
push
das
push
jmp
test
sbb
dec
pop
shlb
scas
int
movsl
cmpsl
mov
jmp
adc
outsl
jo
jl
push
sbb
adc
lods
pop
test
or
ds
jge
dec
lahf
push
test
adc
xchg
fcomps
out
in
aam
int
cmpl
jne
fsubs
outsl
loop
push
sub
jno
jb
ds
inc
pop
sti
das
imul
cmp
jg
lea
sbb
jl
cmp
jg
inc
jmp
ret
or
fadd
cmp
jbe
jne
imul
mov
jmp
push
pop
inc
jo
jge
aas
sbb
cmp
or
sar
bound
rcrl
nop
dec
mov
scas
dec
je
test
mov
lock
xchg
das
icebp
xor
sbb
dec
aaa
push
sahf
adc
mov
test
add
and
fiaddl
enter
add
cmpsb
mov
push
rclb
add
mov
hlt
cltd
mov
xchg
cli
mov
into
lods
lcall
mov
iret
sub
lea
mov
inc
sbb
push
gs
ret
cltd
sbb
rorb
add
std
sbb
xlat
imul
add
xor
mov
sub
cmp
cmp
jg
movsb
stc
jmp
push
or
lock
add
add
xchg
sbb
push
inc
andb
stc
sbb
adc
mov
pop
jmp
cmc
xchg
sbb
subl
xor
out
adc
fbld
imul
dec
and
and
leave
mov
aad
adc
sub
pop
mov
mov
or
and
bound
out
jno
jae
push
pusha
xor
jmp
ja
adc
add
sbb
scas
idiv
jl
sub
incl
mov
int3
in
push
out
notb
jne
movsl
sbb
fs
into
lods
and
je
adc
sub
dec
mov
push
cltd
xor
inc
xor
loop
mov
or
pop
cmpsl
push
outsb
out
push
sbb
cvtps2pd
push
jnp
jnp
jne
and
push
push
push
jmp
pop
add
orps
push
addl
jne
or
daa
daa
popf
scas
mov
push
cld
and
rclb
jns
add
pop
xor
mov
sbb
push
imul
pusha
mov
outsb
call
sahf
xchg
jge
or
jns
outsb
mov
es
adc
add
push
pop
jnp
mov
fiaddl
rcll
stos
dec
mov
sti
incl
jge
cmp
jl
cmp
jg
push
jle
mov
sub
jge
loopne
and
or
jle
sub
sbb
movsl
call
jne
jmp
add
scas
sbb
xchg
loop
pop
pushf
rorl
and
loopne
shl
mov
ret
sub
lods
lret
mov
les
rcrb
aad
mov
enter
lods
test
add
daa
dec
mov
mov
scas
in
cmpl
inc
sbb
cmc
inc
cmp
mov
mov
dec
dec
xor
pop
pop
mov
sarl
dec
lock
aad
scas
add
push
jl
inc
int
shll
jmp
xor
jl
jg
iret
clc
or
es
xchg
ja
push
push
jl
loope
cli
cli
pop
pop
push
mov
lea
lea
scas
arpl
mov
mov
xor
xor
xchg
xchg
mov
add
mov
inc
add
push
orl
mov
mov
cld
sub
sbb
mov
push
and
sbb
adc
jecxz
dec
mov
cmp
add
pop
subl
and
cltd
jb
dec
or
inc
sub
mov
idiv
lahf
mov
leave
mov
fldt
xor
jns
or
push
adc
daa
xor
mov
and
adc
cltd
les
imul
out
jne
mov
inc
ljmp
push
sbb
dec
ljmp
adc
add
test
adc
in
jp
xchg
sbb
cmpb
push
clc
ljmp
or
icebp
call
push
dec
imul
inc
inc
fldt
sbb
pop
xchg
aaa
cmp
sbb
adc
mov
arpl
cmpsl
enter
xchg
pop
ror
mov
leave
or
enter
push
adc
push
xor
adc
sarb
push
enter
and
neg
neg
sbb
mov
sbb
testb
sbb
cmp
es
push
inc
icebp
or
push
movsb
push
shr
inc
push
or
cmp
xor
jmp
ljmp
cmp
sbbb
movsb
out
shll
cmp
add
decl
or
cmp
add
and
add
xor
add
xor
push
nopl
ret
inc
xchg
and
out
push
movsb
ss
pop
sbb
outsb
mov
jge
xor
ret
jns
movsb
orb
fdivrs
in
popa
enter
jge
xchg
or
adc
cmp
jbe
sub
adc
push
or
or
jno
pop
outsb
add
push
add
xor
mov
cltd
pop
jmp
incl
fcoml
movb
mov
clc
movb
cmpsb
adc
adc
push
push
mov
imul
xchg
mov
add
xor
or
lock
xor
cli
and
adc
mov
and
push
pop
mov
jecxz
sbb
push
jns
and
sbb
add
fsubrl
jg
cmp
push
and
iret
push
mov
jo
sub
aaa
cmp
lock
dec
xor
xor
das
inc
push
xor
call
and
mov
add
int3
add
test
adc
jne
dec
push
or
pop
iret
lret
in
hlt
jmp
repz
in
nop
adc
or
jg
xchg
xchg
stos
test
fs
mov
cs
pusha
adc
and
test
pop
add
pop
rorb
cmp
ffree
sarb
andl
pop
xchg
cmp
fmuls
sbb
push
sti
js
movsb
push
aam
mov
and
or
pop
das
sbb
push
pop
dec
or
add
int3
add
out
cmp
pushl
jmp
cmp
ftst
fs
mov
mov
roll
xor
jl
push
push
sahf
fsubrp
insl
push
arpl
cvtdq2ps
or
pop
jne
pop
cltd
add
push
pcmpeqw
imul
push
mov
mov
or
lea
ds
mov
arpl
cmp
rcl
js
arpl
lds
dec
add
les
enter
push
int3
cmp
lods
scas
mov
jo
icebp
loopne
push
and
mov
imul
dec
or
shll
add
out
add
jg
xchg
lods
and
stos
add
cmp
jg
add
ja
mov
push
or
jge
lock
jne
pop
clc
push
loopne
ret
and
jp
inc
mov
ja
rorl
stos
jmp
push
add
inc
dec
inc
jb
pcmpeqb
sbb
loopne
or
dec
push
in
je
mov
enter
mov
xchg
or
and
xor
pop
sarl
cmp
rcl
push
in
dec
pusha
inc
call
int
sub
add
mov
dec
aam
inc
pusha
jne,pn
sbb
inc
mov
popf
xchg
mov
sub
cwtl
push
fwait
out
imul
jge
mov
mov
mov
mov
fsubr
fnsave
pop
mov
xchg
jl
inc
pop
add
loopne
jmp
cwtl
and
dec
rolb
and
sbb
movsl
mov
push
adc
dec
mov
and
jmp
mov
lds
dec
movsl
pop
add
shrl
sub
mov
jo
pop
movsl
scas
add
pop
inc
cmp
jb
inc
mov
or
sub
mov
xchg
inc
cmp
roll
dec
test
or
sete
mov
cmp
dec
out
and
inc
bound
and
fidivl
push
push
sbb
rorb
stc
jb
mov
mov
mov
add
jle
inc
mov
cmp
jb
xchg
int3
lahf
shlb
push
mov
inc
or
and
sub
mov
adc
jmp
cs
lock
daa
push
xor
mov
cmp
call
dec
sub
xchg
xor
das
adc
repz
popa
sbb
stos
andb
bound
or
out
add
sbb
xor
in
jbe
call
decl
adc
jne
cmpl
cli
add
adc
and
and
outsl
lods
fmull
cmp
sub
push
xchg
ljmp
iret
inc
lods
xor
sbb
add
xchg
cwtl
rorb
mov
push
pop
cmp
or
jmp
aaa
adc
out
add
xor
scas
xchg
into
notb
shrb
or
or
push
movsb
into
fdivs
pop
loop
add
pusha
jb
test
in
ljmp
mov
andl
or
cmpb
in
xor
cmp
pop
push
push
inc
cmpl
pop
mov
outsb
cmp
xchg
lret
push
test
lea
ds
xchg
mov
lret
push
cmp
cmp
dec
pop
mov
fs
pop
lods
pop
push
rcrb
jmp
push
push
sbb
cmpsl
daa
test
roll
cwtl
mov
and
add
ja
or
xor
cmp
cmp
aam
mov
sub
test
sbb
jae
jmp
and
ret
mov
xorl
push
mov
sbb
mov
add
rol
cmp
fists
scas
jge
push
inc
push
jnp
addr16
loopne
test
dec
subl
xor
cmp
pop
cwtl
xlat
fldenv
push
dec
and
inc
fsts
add
mov
loope
mov
adc
push
mov
pop
push
loope
adc
push
in
rcrb
jo
sahf
push
sub
ljmp
lock
or
add
adc
xor
push
imul
adc
out
add
cmc
jmp
incl
out
or
outsb
mov
jb
ds
push
inc
popf
mov
cmp
or
addr16
mov
rcr
xor
fcompl
inc
add
add
mov
or
xchg
add
inc
cmp
arpl
je
fildll
pop
mov
sub
cmp
xor
dec
jmp
xor
enter
int3
inc
inc
lods
push
cmp
adc
add
test
inc
inc
scas
sub
stc
pop
es
pop
fsts
or
cmp
or
push
mov
lock
xchg
sub
fisubrl
dec
stc
add
movsb
icebp
push
sbb
xor
andl
inc
cmpb
pop
and
add
lock
mov
mov
add
xor
inc
popf
inc
repz
ret
pop
add
adc
mov
add
cwtl
mov
mov
dec
and
repz
mov
inc
pop
mov
sbb
xchg
mov
mov
clc
divb
and
cld
cwtl
push
push
push
push
and
insb
xchg
rorl
enter
pusha
dec
loop
jae
lock
mov
push
inc
inc
shl
add
scas
pinsrw
mov
sub
jge
push
push
adc
mov
sub
xor
dec
xor
incb
xchg
setbe
cmp
je
jb
xchg
and
push
xor
lock
loopne
ljmp
sar
inc
dec
sbb
push
adc
push
pop
inc
mov
lds
mov
mov
cld
sub
pop
cmpsb
in
push
dec
inc
jecxz
jbe
mov
stc
fcoms
pop
push
lret
cmp
pop
mov
fisttpl
adc
aas
push
push
pop
push
jmp
cli
mov
add
mov
inc
ret
pusha
add
orl
movw
dec
add
pop
movb
fldt
dec
das
mov
dec
inc
lea
add
add
int
push
lret
insb
push
xchg
data16
add
add
adcl
push
xlat
sarl
mov
fcomp
jge
mov
sti
arpl
add
arpl
pop
je
pop
sbb
daa
andl
repz
jbe
pop
orb
add
cmp
or
pop
pminub
rorb
and
into
sub
shll
lock
adc
pop
xor
jb
ss
push
rorb
push
push
or
add
clc
push
fcmovnu
jbe
pop
clc
add
xor
fcmovnu
xor
jns
push
mov
inc
add
lock
mov
out
xchg
inc
test
pop
mov
call
decl
jne
xor
push
orb
jmp
jmp
push
push
push
pop
jmp
lea
fs
sub
shl
jb
mov
ds
fnstenv
adc
xor
mov
mov
jne
inc
enter
inc
add
or
js
daa
je
push
mov
movl
push
inc
cmp
jl
pop
cmp
jmp
add
xchg
xor
scas
xor
add
pop
dec
out
mov
mov
das
rolb
add
jmp
push
lcall
je
mov
xor
push
aam
mov
dec
mov
divb
sbb
mov
mov
adc
mov
shl
or
pop
add
sbb
not
push
lret
sbb
sbb
mov
aam
dec
adc
outsb
mov
dec
cmp
inc
cs
mov
pushf
push
push
inc
and
adc
inc
push
jbe
dec
fs
push
lcall
add
sub
mov
clc
mov
sub
or
add
testb
jl
pop
cmpsb
test
cmpl
inc
lods
lock
jle
push
inc
insb
push
je
cmp
popf
pop
int
imul
lock
jmp
pushf
movsl
outsb
xor
je
push
push
dec
or
or
test
mov
daa
adc
and
jne
xchg
inc
inc
lods
inc
les
xor
dec
and
or
push
pusha
inc
mov
adc
xchg
daa
jp
pusha
push
and
pop
stos
sub
jne
lea
sbb
jl
add
dec
ficompl
mov
ret
test
insb
scas
ljmp
jne
sti
add
lea
push
and
pusha
ja
adc
mov
push
and
push
inc
adc
push
fwait
mov
mov
imul
xor
adc
stos
gs
jl
out
dec
rolb
push
test
jb
sub
add
lods
dec
shrl
mov
add
ljmp
add
sahf
enter
es
loopne
add
mov
mov
mov
cmp
mov
xor
adcb
xor
cmp
xchg
add
test
data16
mov
push
jge
push
sbbl
push
xchg
in
test
loop
das
ss
cmp
mov
insl
add
and
push
lods
add
mov
pop
fbld
push
lock
loop
outsl
xchg
pop
cli
inc
lods
mov
mov
or
mov
mov
xchg
out
repnz
pop
xchg
cwtl
xor
jl
cld
adc
sbb
adc
lret
dec
and
cmp
or
adc
inc
push
fistl
arpl
lods
pushf
pushf
pushf
mov
or
adc
mov
sbb
jb
jb
sub
xor
jo
jb
cmp
jbe
es
inc
and
inc
cmovs
in
in
push
push
pop
cmp
cmp
push
insb
jo
js
inc
or
jl
sbb
and
mov
test
xor
xor
pushf
mov
jns
mov
xchg
enter
xchg
dec
sarb
cltd
fs
in
cltd
fs
call
fs
dec
hlt
clc
cld
cmp
and
add
add
add
or
adc
sbb
xchg
dec
es
and
sub
es
xor
dec
cmpsb
pusha
xchg
cmp
gs
xchg
dec
cmp
push
dec
xor
and
pop
pusha
mov
add
push
add
mov
rorb
or
xor
jbe
cmp
adc
icebp
lds
dec
adc
cwtl
or
imul
sbb
inc
lcall
cltd
nop
and
sub
lcall
movsb
popa
cmp
inc
inc
dec
inc
lcall
cltd
nop
push
dec
push
dec
or
aas
push
out
adc
or
xor
inc
pop
or
and
mov
mov
push
and
mov
sbb
cmp
and
and
inc
cmp
std
loop
xor
sub
push
push
add
popa
inc
orl
mov
or
jo
jmp
pop
push
adc
mov
push
push
adc
sbb
aaa
jbe
sbbb
iret
mov
dec
mov
stc
mov
lea
andb
dec
or
push
jo
mov
inc
lret
pushl
loopne
testl
call
pop
sbb
insb
sarl
rorl
js
push
jb
mov
scas
rorl
fwait
rorb
mov
mov
sbbb
xor
je
das
mov
lret
testb
fidivrl
es
shr
in
add
push
loopne
sbb
and
rorl
add
shl
pop
mov
xchg
punpckhwd
adc
in
add
test
fistpll
or
add
dec
enter
cmp
addr16
test
push
lea
jecxz
and
push
mov
add
sar
mov
aas
or
inc
std
or
add
or
sub
sbb
lea
lock
cmpsb
add
andl
roll
cmp
pop
pushf
add
ret
and
fcmovnb
insb
add
pop
adc
int
and
out
push
inc
pushl
icebp
dec
cmp
je
cmp
pop
pusha
mov
adc
xor
inc
in
ds
outsb
popf
and
or
push
sub
dec
jbe
add
sbb
mov
mov
mov
and
mov
mov
add
std
out
and
leave
adc
push
hlt
mov
pop
adc
push
stos
sbb
loop
dec
add
add
test
pop
mov
out
lret
add
mov
xchg
int3
cmp
loopne
divps
aaa
sbb
adc
popf
mov
sbb
dec
inc
outsb
jne
mov
dec
hlt
push
xchg
lea
add
lods
jnp
insl
push
xchg
sub
roll
enterw
inc
mov
mov
add
push
fisubrl
or
inc
lea
inc
add
add
jno
mov
pusha
leave
loopne
mov
add
pusha
in
fiaddl
test
mov
sub
mov
std
jecxz
sbb
scas
cmp
xor
jne
movzwl
adc
lcall
loopne
popf
mov
mov
mov
fwait
push
push
jmp
pop
nop
pop
cmp
jl
loop
pusha
dec
iret
test
inc
orl
jae
lcall
mov
jb
pop
and
push
sysenter
sbb
inc
dec
xor
cmp
cmpb
mov
dec
shll
sar
xchg
imulb
adc
shll
es
add
jne
shufps
insb
adc
push
mov
jo
aad
mov
push
xchg
lock
and
faddl
add
sbb
jne
mov
daa
ret
sub
lods
les
sub
int
sbb
push
je
movsl
pop
jbe
lock
jae
in
pop
jns
in
subb
into
jg
sbb
mov
rol
loopne
ljmpw
testb
test
sub
and
test
mov
imul
popa
add
sahf
stos
fimuls
push
lea
mov
stc
cmp
xchg
fnstenv
cmp
dec
shlb
push
or
cmc
shlb
ss
jmp
lods
sub
insb
andl
jmp
lret
cmp
push
popa
jmp
movb
or
repnz
or
add
jmp
inc
sub
rcll
adc
lret
icebp
nop
outsl
sbb
out
or
push
jae
adc
sbb
sub
xchg
pop
mov
jl
jmp
lods
inc
sub
jne
push
inc
sub
mov
pop
cmp
add
cs
inc
xor
cmp
and
mov
sbb
push
lock
inc
or
cmp
and
insb
add
addr16
inc
mov
ret
imul
push
test
sbb
clc
push
loope
dec
test
pop
movsbl
adc
mov
rclb
pop
in
pop
mov
orl
popf
push
cmp
repnz
js
mov
incl
or
inc
pop
mov
pop
jbe
orl
sbb
mov
xor
add
xchg
and
xchg
add
out
inc
in
jne
int
xchg
mov
mov
cs
adc
xchg
cli
add
je
cld
mov
push
hlt
push
push
pop
and
dec
aad
push
or
mov
mov
add
test
xor
mov
push
and
mov
dec
and
sbb
scas
loope
jo
jmp
mov
push
out
adc
adcb
call
pop
mov
push
mov
stc
mov
ficoml
cli
sbb
sarb
xchg
sbb
mov
jl
js
cmpsl
mov
call
lret
clc
cmpb
testl
icebp
rol
inc
mov
cmp
mov
sub
pop
ret
mov
dec
or
xor
imul
sub
test
call
push
ret
cs
mov
orl
xchg
xor
rep
jmp
cmp
out
int3
outsb
fadd
pop
rclb
mov
cmp
adc
les
dec
pop
cmp
inc
inc
adc
push
adc
jge
sbbb
sub
jbe
mov
push
mov
dec
rol
pop
push
ss
xchg
pop
adc
incl
pop
pop
jl
inc
and
jg
clc
push
mov
movsl
test
add
pop
xchg
xor
inc
sub
stos
xorb
mov
fisttpll
pop
xor
xor
insb
cmp
sbb
imulb
add
push
jmp
cmp
push
add
enter
jl
data16
mov
jp
nop
inc
add
js
pop
sbb
jge
sbb
int3
popa
add
add
mov
xor
loopne
sbb
enter
lock
cmp
adc
mov
bound
sbb
push
pusha
lcall
pop
adc
dec
les
scas
shrb
push
dec
inc
xchg
pop
inc
jmp
or
hlt
dec
jge
mov
and
jb
sbb
adc
push
pop
loope
out
pop
xor
gs
cmp
pop
les
fsubs
add
insl
and
push
push
fbstp
sbb
adc
rclb
les
sbb
jmp
icebp
jo
mov
inc
add
cltd
and
popa
adc
rcrb
inc
cs
inc
mov
in
daa
push
and
jne
push
jle
push
mov
int3
mov
jne
xor
adc
or
jb
add
mov
mov
pop
in
sar
mulb
xchg
sar
mov
addr16
stos
push
mov
mov
pop
inc
cmp
fdivrl
clc
sbb
xor
sub
sub
xchg
jp
cmp
lods
push
sbb
add
add
cmp
lret
loop
or
mov
shll
pop
cmp
and
ror
in
jecxz
mov
testb
jo
cmp
lahf
or
jo
jp
pop
push
out
jne
int3
arpl
imul
and
shlb
nopl
inc
mov
hlt
or
aas
dec
dec
fisttpll
inc
les
jg
ret
jne
stos
out
rorl
adc
mov
imull
ret
xor
push
test
lock
rolb
stos
sbbl
xor
mov
sub
aam
sti
xor
push
mov
repnz
sbb
ret
mov
jae
jmp
imulb
repnz
xor
sub
sub
dec
dec
jne
popa
add
cmp
je
and
sti
or
sub
dec
decb
enter
rolb
cmp
sbb
fildll
cwtl
lock
leave
xor
adc
add
add
addl
mov
movsb
stos
or
cwtl
mov
inc
loopne
cwtl
push
adc
push
jbe
insl
and
push
push
iret
jge
mov
mov
xor
repnz
sub
sbb
je
xchg
cli
adc
lea
lea
or
test
dec
jle
orl
lgs
mov
mov
xor
out
popl
or
jle
add
test
dec
je
fidivs
xor
aaa
in
sbb
adc
fstl
clc
mov
lock
jecxz
inc
mov
mov
and
dec
and
pushl
add
mov
xor
sub
add
inc
loop
ljmp
imulb
hlt
or
mov
repz
cmp
xor
out
add
loopne
and
push
mov
sbb
insb
inc
sub
xchg
adc
js
or
cmp
push
mov
mov
movsl
test
insl
add
push
mov
push
ljmp
and
jle
enter
scas
fcompl
adc
add
push
ret
sar
xchg
add
push
js
fcmovnbe
sub
inc
push
or
or
and
cmp
pop
rol
subl
in
inc
jmp
push
xchg
add
and
ret
cs
fadds
and
cmp
or
nop
mov
pop
ret
shl
jb
fldln2
shll
dec
xor
adc
or
in
inc
dec
push
shr
add
jmp
xor
add
in
mov
ret
jb
push
repnz
or
test
inc
cmc
and
add
adc
test
cwtl
aaa
rorl
xlat
hlt
mov
xchg
and
shlb
mov
jmp
jbe
incb
mov
fucomi
adc
lock
and
mov
mov
jl
and
jecxz
sbb
mov
jae
add
or
lahf
sahf
cmc
adc
and
mov
orl
and
jge
aaa
jge
aas
sbb
test
and
push
sbb
and
pop
adc
fistpll
pusha
mov
pusha
loope
pop
sub
xor
and
add
fstp
jmp
pusha
pusha
sahf
shlb
push
mov
jle
nop
popa
inc
testb
cmpsl
repnz
lock
cmp
add
add
test
adc
xchg
or
and
ret
mov
mov
or
sub
shlb
sti
xor
sub
cmp
and
andb
push
outsb
lods
imul
push
and
inc
add
gs
jnp
inc
js
incb
fstps
jmp
fisttpll
adc
jae
adc
sub
sahf
movb
icebp
hlt
adc
je
adc
arpl
testl
sub
outsb
inc
or
push
xor
mov
mov
inc
sub
push
add
pop
dec
push
aaa
mov
fldz
neg
sbb
loopne
add
clc
cli
xor
sub
pop
aaa
pop
sub
jmp
sub
sub
sbbl
lods
sbb
test
into
orb
and
idivl
pop
clc
dec
push
scas
add
add
mov
test
rcr
and
fstpl
xchg
les
jb
test
adc
jge
jb
lods
mov
test
call
cmp
popl
shll
sbbb
repnz
loope
inc
push
sarb
mov
mov
mov
test
dec
sub
xchg
cli
shrl
sarl
orl
mov
shlb
push
pop
jmp
pop
lock
ljmp
bound
mov
loopne
xor
push
or
mov
out
nop
add
and
push
pop
and
adc
or
push
add
inc
mov
jnp
xchg
and
pop
jle
shl
lret
add
adc
push
push
xor
int3
jb
js
test
mov
add
mov
fs
mov
out
lds
push
test
add
push
je
int3
sbb
rcl
pop
or
mov
orb
enter
add
adc
pop
or
pop
aam
incl
adc
ret
shl
cltd
out
pop
fs
fstpl
add
add
or
fwait
jno
dec
xor
shlb
inc
push
ret
cmp
inc
in
xor
push
or
jp
or
into
jl
mov
inc
or
adc
mov
std
test
fdivl
xor
fcomps
mov
add
enter
cmp
and
jle
cmc
lea
push
jmp
imul
push
das
adc
inc
mov
cmpb
lahf
in
arpl
mov
sbb
mov
sarl
inc
adc
dec
outsl
add
add
adcl
jno
in
mov
in
sbb
sbb
sbb
sub
sub
mov
dec
xor
repnz
or
mov
imul
jne
arpl
mov
push
jne
imul
decb
mov
inc
movsb
and
and
pop
pushf
add
jno
mov
jmp
out
adc
in
sbb
test
cmp
add
enter
cli
push
dec
out
fld
fucomp
pop
fsts
xchg
cmp
in
fbstp
test
jne
orl
in
and
mov
add
push
sbb
or
imul
push
or
pop
fidivs
push
out
mov
push
pop
jmp
mov
ret
inc
sbb
xor
push
scas
sbb
nop
xchg
es
sub
or
sub
push
push
xor
loop
mov
ljmp
fists
fnstsw
movswl
or
loop
inc
fld
add
xor
sub
sbb
xor
fadd
push
in
popf
daa
or
insl
or
push
mov
and
fldt
and
cld
inc
fwait
test
fsubs
test
sbb
sbb
test
cld
lock
sbb
xchg
pop
movsb
fldpi
xor
push
rolb
cmp
and
je
sbb
scas
sarl
fsts
xor
loope
xchg
cld
mov
out
mov
mov
and
loope
mov
pop
stos
jmp
inc
movsl
imul
cmp
adc
pop
add
andl
or
fsubl
push
xchg
test
mov
adc
sahf
lods
or
or
cli
aad
pop
xor
ss
andl
mov
test
xchg
jle
out
inc
mov
lea
mov
inc
and
rolb
adc
sub
and
int3
roll
in
insb
push
jge
loope
js
mov
mov
pushl
push
ficomps
cmp
jae
sti
jbe
jo
shrl
cld
shll
and
or
fadds
xor
arpl
add
ljmp
push
lea
sbb
inc
testb
add
loope
cmp
daa
pop
adc
popf
aam
mov
cmpb
jb
inc
push
jnp
lods
dec
movb
data16
xchg
shll
sbb
hlt
lahf
jge
shlb
or
inc
ret
and
lea
sahf
push
mov
loope
rcl
pop
in
xchg
xchg
arpl
mov
shl
in
pop
and
adc
mov
fnstenv
icebp
pop
inc
cmp
outsl
cli
mov
mov
fnstcw
mov
sbb
or
add
add
scas
pushl
adc
stos
xorb
pop
cmp
push
fmuls
add
pop
test
ret
out
jl
imul
stos
push
stos
pop
fldt
test
pop
ljmp
daa
mov
pusha
ss
jp
and
pusha
in
add
js
adc
idiv
adc
or
inc
lea
pop
inc
add
lret
loopne
test
test
lods
fiadds
call
loop
shlb
in
int
push
jmp
cmpl
es
jle
repz
mov
pop
and
mov
push
and
iret
loopne
adc
iret
pop
outsl
fwait
sbb
dec
mov
add
xchg
jo
and
cmp
out
lahf
imul
sub
adc
and
mov
dec
ret
fmull
mov
and
inc
cmp
jns
bound
mov
push
pop
and
fsubrs
jo
xor
or
stos
daa
test
sbb
cwtl
je
inc
mov
or
mov
or
xchg
fmuls
popl
inc
and
mov
aam
in
xor
cmp
rorl
cmc
mov
fdivs
clc
mov
shl
sub
sub
divl
loopne
pop
popf
jb
aas
js
push
out
push
or
mov
adc
jne
shl
dec
mov
dec
fdivrs
mov
sub
sub
sarl
insl
inc
mov
or
dec
jns
add
lea
mov
and
xor
push
faddl
pop
out
push
adc
loop
adc
dec
and
inc
add
dec
out
sub
lock
inc
rcrl
jl
lea
sbb
cs
mov
push
push
mov
lods
fsubr
pop
pop
test
cs
push
push
jb
aas
mov
push
incb
pop
xor
iret
dec
jns
cmp
and
ret
xor
cmc
hlt
push
aas
mov
mov
rorl
sub
loopne
adc
inc
movsb
imul
stos
loope
fistps
test
jmp
lock
arpl
cmp
aas
sbb
cmp
add
andl
push
dec
into
out
push
orb
sub
nop
fwait
loopne
and
dec
out
and
or
popf
push
sub
bound
jge
sarb
adc
dec
lods
shl
test
addl
add
dec
ret
or
fidivl
roll
mov
cmp
jl
stos
outsb
and
pop
add
jmp
and
jne
mov
sbb
nop
pop
repnz
mov
sub
cmp
sar
or
inc
enter
add
sti
mov
shlb
int3
mov
dec
adc
les
xor
enter
xor
movsl
leave
xor
fimuls
push
push
cs
nop
adc
lcall
mov
fwait
mov
cmp
jne
cli
orl
add
loop
adc
inc
rclb
decl
jmp
mov
cs
or
xchg
jg
ror
das
mov
cmp
ja
sbb
lcall
mov
and
pop
jmp
cmp
sahf
add
add
or
cmpl
je
mov
jmp
andl
jmp
push
push
test
jbe
popf
and
leave
mov
fucomip
shll
inc
jle
imul
fs
xchg
sbbl
dec
push
jmp
cmp
xchg
lret
push
cmp
popa
dec
cmp
mov
pop
add
js
jmp
mov
sbb
add
sub
insl
rclb
or
adc
xorl
vpmacssdd
std
sbb
nop
add
jne
jb
lahf
xor
imul
sbb
or
cmp
jo
xchg
xchg
fists
dec
rclb
bound
jns
js
lahf
and
cmp
dec
or
adc
pop
xchg
and
or
pop
stc
sub
cmp
mov
push
movsl
jbe
sub
add
ds
inc
stos
loopne
je
mov
mov
pusha
add
xor
push
into
cmp
ljmp
jo
adc
add
inc
testl
xlat
pusha
jecxz
fldl
pop
or
mov
or
iret
sbb
and
clc
add
repnz
lcall
lock
cmp
or
jecxz
add
jmp
push
jg
push
xor
cmp
dec
inc
push
test
dec
aam
insb
mov
fs
pushf
xor
xor
cmp
jge
testl
dec
adc
sbb
out
clc
mov
mov
clc
sub
mov
pusha
jp
cmp
mov
inc
add
xor
adc
push
sahf
loop
lods
add
mov
test
mov
lods
sarl
push
dec
dec
addr16
mov
imul
jbe
sbb
pop
cmp
jb
js
or
xchg
jge
testb
ret
add
enter
add
arpl
jmp
and
or
mov
roll
cmp
lea
jne
leave
cmp
jae
shll
mov
or
pop
stc
mov
or
cld
int
xchg
inc
and
jne
inc
testl
clc
jne
cmp
mov
les
test
jmp
inc
inc
jne
inc
or
cmp
add
and
hlt
int3
add
lock
xchg
nop
sbbb
add
add
test
mov
inc
add
les
mov
adc
add
mov
scas
ret
xor
cmp
hlt
lahf
into
push
xor
mov
ja
je
pop
ret
aaa
xchg
sbb
subl
dec
pushf
sub
mov
test
push
sbb
outsb
inc
sbb
jg
add
fwait
sub
sub
jne
aam
gs
mov
push
push
call
add
or
shr
mov
ret
sbb
add
into
or
mov
jns
in
fsubrs
add
cli
add
imul
inc
cmp
and
sti
pop
mov
fcom
insl
fadd
loopne
shr
or
mov
sahf
dec
inc
ret
or
jo
jne
outsb
mov
inc
xchg
inc
sbb
sbbb
adc
nop
mov
test
push
mov
sub
jne
cmpsb
insl
xchg
rclb
add
fcmove
jb
fwait
sbb
add
jg
in
fiadds
push
out
jmp
mov
lods
mov
clc
scas
jb
dec
mov
orl
mov
ret
dec
lock
jl
dec
jmp
jp
jp
dec
or
daa
mov
or
push
dec
into
jmp
lods
xor
divb
andl
dec
and
inc
mov
and
mov
jne
push
lret
push
add
jmp
sub
shl
mov
adc
sub
movups
les
pop
mov
inc
mov
inc
sub
pop
popa
ss
add
std
inc
add
sahf
or
add
push
cmp
insb
mov
std
push
push
pop
out
sahf
inc
mov
pop
mov
pop
lock
into
sbbb
cmpsl
rcrl
gs
inc
lds
lret
stos
outsb
popa
in
pop
jne
cmp
fiadds
jb
xor
jle
push
mov
hlt
pop
xchg
fxch
fcoml
rorl
repz
in
pop
test
or
lock
mov
xchg
xchg
adc
inc
pop
loopne
addr16
or
ss
cmp
sar
fidivl
inc
xor
mov
dec
cmpb
je
mov
aas
push
mov
cmp
pop
jne
dec
mov
inc
inc
mov
ret
dec
popf
add
add
fcompl
pop
jp
or
jecxz
push
subb
repnz
ds
mov
push
imul
jmp
xor
or
pop
jo
aaa
xor
inc
mov
mov
pushf
or
hlt
mov
notl
jbe
out
adc
gs
sbb
cmp
xchg
adc
sbb
fadds
jbe
jne
xchg
push
push
rolb
data16
add
add
dec
cld
add
ret
push
pop
sbb
clc
jmp
setg
cmp
sahf
clc
add
lcall
ja
cmpl
mov
jne
movb
lea
mov
icebp
adc
push
mov
xchg
jecxz
add
inc
cmp
add
push
sub
add
mov
add
or
enter
dec
cmpsl
mov
test
dec
outsl
jp
inc
xlat
pop
or
add
jns
mov
scas
xorb
add
fs
add
mov
mov
mov
inc
push
or
add
add
add
fisubrl
punpckhdq
mov
xor
push
push
andl
pop
add
sbb
xchg
das
adc
add
xor
mov
iret
push
jmp
sbb
filds
add
popl
insl
adc
aad
mov
ds
xchg
jge
xchg
sub
adc
mov
xchg
shl
sub
shlb
enter
xchg
sbb
stos
xchg
sbb
mov
lret
aam
aad
loopne
rol
jmp
imul
add
push
xor
loop
incl
aam
mov
sub
jge
adc
cmp
push
shll
mov
icebp
and
xchg
push
jo
xor
or
lds
mov
mov
and
and
xor
dec
sti
push
add
call
add
xor
imul
add
lea
fcompl
push
dec
xor
push
adcl
sub
loope
dec
sbb
test
enter
js
inc
test
imul
jbe
das
pushf
dec
sub
leave
and
add
insb
movb
fcomps
push
xchg
inc
and
mov
pop
inc
popf
negl
out
fistpl
fstpt
mov
lock
ret
daa
xor
or
jne
bound
xor
xor
js
loope
repnz
add
in
push
xchg
jl
inc
xor
jle
xchg
mov
test
xor
movsb
and
cmpsl
adc
js
cwtl
adc
or
jmp
xchg
add
mov
and
daa
sbb
sub
mov
mov
sbb
xor
je
sub
xchg
ret
test
or
mov
add
hlt
invd
add
dec
and
bound
push
pop
inc
jge
sbb
clc
push
mov
lea
or
dec
sub
mov
jmp
repnz
test
fidivrl
sub
or
incb
and
push
cmp
sbb
add
xlat
push
mov
push
sbb
xor
jo
mov
in
and
popa
loop
push
jb
sbb
js
jg
mov
or
scas
jmp
adc
pop
adc
neg
mov
cmp
sarl
pop
loopne
adc
sbb
push
push
add
mov
mov
push
lock
rcl
int
mov
add
call
dec
dec
inc
xchg
cmp
scas
dec
pop
or
or
sbb
add
xor
pushf
push
cmpl
push
mov
mov
test
push
loope
or
jbe
xor
sub
incb
or
sbb
movw
or
cmpsb
inc
adc
push
jle
pop
pop
pop
fsubr
push
sbb
mov
jo
rclb
push
push
inc
adc
ljmp
xchg
enter
neg
call
pop
push
lods
or
ret
aaa
push
push
mov
sarl
add
mov
or
insb
aam
mov
add
push
movaps
aad
addb
and
jbe
movsl
add
shrl
cwtl
popa
mov
pop
jmp
push
push
sbb
or
dec
mov
iret
sbbl
pop
push
inc
es
divb
push
cmp
shrl
nop
or
and
rcr
dec
sub
push
push
push
testl
push
push
push
pop
lds
xlat
push
sbb
aaa
pop
pusha
mov
jl
loopne
jge
lret
adc
cmpb
data16
mov
push
add
adc
inc
popf
jmp
xor
and
add
sbb
clc
gs
mull
mov
data16
jbe
repnz
xchg
add
pop
inc
popa
je
bound
fwait
push
inc
je
dec
or
jmp
test
loope
pop
adc
adc
popf
sbb
stos
and
jno
lock
push
sahf
or
or
inc
pushf
loopne
imul
push
or
inc
lret
jl
cmp
cmpsb
jae
dec
fsubrl
icebp
loop
pop
loop
ret
insb
mov
sbb
ret
subb
cmpsl
mov
je
dec
dec
scas
lcall
jmp
or
jmp
xor
or
orl
movsb
xchg
jmp
mov
clc
cmp
sbb
push
std
pop
ret
mov
fdivs
add
in
clc
jae
insb
push
loopne
or
mov
in
adc
add
jg
dec
subl
leave
notl
lahf
fidivrs
negl
sbb
jne
mov
dec
js
inc
jge
pop
insb
mov
je
mov
mov
sbb
pusha
pusha
loope
insl
int3
or
lea
adc
ss
or
push
add
pusha
add
mov
mov
mov
sbb
xorb
lret
loop
insb
mov
inc
dec
adcb
pop
sbb
mov
cmp
cmp
je
sbb
add
test
sar
in
insl
dec
add
call
sub
imul
push
add
and
xor
add
out
inc
lea
jb
inc
pop
add
add
or
and
or
or
jne
test
xchg
repnz
dec
adc
cmpsb
sub
pushf
inc
addl
mov
les
sbb
pop
movd
jns
xchg
mov
jmp
loopne
sub
jo
leave
cli
inc
sub
push
mov
in
or
push
pop
jmp
sbb
das
adc
outsb
mov
outsl
jnp
pop
testl
hlt
or
pop
adc
jbe
xchg
inc
push
and
xor
popf
jge
inc
imul
lea
fwait
sqrtps
addb
mov
sbb
inc
mov
push
out
test
das
fdivrs
jmp
add
push
adc
and
sysexit
and
ljmp
mov
adc
fstl
test
out
testb
push
sub
nop
adc
loop
icebp
jo
sub
pop
or
and
loope
or
pop
popf
test
outsl
push
jae
mov
jo
or
sbb
push
pop
addl
and
mov
test
pusha
cltd
xchg
decl
adc
dec
pop
loop
addr16
sbb
imul
sbb
and
mov
jns
insl
aaa
in
inc
push
cs
sbb
sahf
dec
out
lret
push
xor
sbb
addr16
pop
xchg
mov
mov
cld
jg
mov
mov
push
and
jo
loope
or
xlat
aam
ret
push
gs
add
jecxz,pn
cmpsb
addr16
mov
sub
into
cmp
sub
push
cmp
pop
pop
add
mov
or
mov
pop
psubq
pop
inc
mov
adc
add
insl
sti
cmpl
mov
cmpl
dec
dec
push
push
add
sbb
cmp
mov
aaa
or
mov
dec
or
imul
pop
mov
andl
push
xor
dec
xor
inc
jno
icebp
add
pop
jb
es
je
mov
push
xor
mov
xchg
imul
pop
push
daa
ja
add
mov
test
les
fimuls
inc
je
xchg
rorb
mov
loopne
stos
pop
mov
or
test
cmp
mov
out
jle
push
or
aad
mov
dec
push
sbb
jo
mov
xor
repz
cmp
and
sahf
ss
daa
push
movsl
rolb
or
adc
inc
mov
or
dec
and
adcl
or
fdivrs
pop
dec
mov
rcrb
in
mov
mov
mov
push
push
mov
addr16
inc
add
aaa
dec
movsb
lods
mov
and
add
jns
cmp
into
push
std
add
xor
repz
jmp
hlt
push
push
push
stc
and
ret
insl
in
mov
sbb
jne
mov
sub
xlat
add
cltd
dec
mov
adc
test
je
cwtl
inc
scas
inc
out
mov
push
shl
rorb
mov
cmp
mov
fnstcw
mov
pop
add
or
rolb
shr
or
fldt
rorb
push
call
and
add
dec
jecxz
mov
sbb
daa
shlb
add
push
cmp
les
out
jp
xchg
jmp
mov
jg
jbe
inc
jl
add
aaa
cmp
nop
fimuls
mov
add
sbb
push
mov
and
inc
fisttpl
cmp
cmp
adc
mov
xor
xor
mov
xchg
clc
clc
or
nop
mov
cmp
lock
dec
movsb
or
inc
nop
mov
add
push
adc
pop
cmpsb
and
xchg
scas
mov
cmp
mov
xchg
or
lcall
or
adc
js
xor
into
outsb
fdivrl
add
fsts
test
dec
xor
dec
push
mov
add
or
pop
je
dec
push
jmp
shlw
or
inc
jnp
pusha
test
push
inc
pusha
dec
and
push
adc
into
popa
mov
hlt
push
outsb
mov
xchg
icebp
push
add
dec
dec
mov
pop
test
jmp
mov
sbb
add
call
ss
or
dec
into
fisttpl
cmp
add
idivb
and
and
stos
lods
add
daa
icebp
in
mov
imul
add
push
inc
and
test
mov
rorb
mov
test
sarb
insb
sub
gs
loopne
push
adc
cmpb
jl
ss
add
das
xchg
incb
xor
incl
out
addb
push
xor
add
gs
add
inc
push
stos
push
loope
add
push
mov
and
push
je
mov
ds
mov
pushf
and
add
cmp
je
cmp
mov
mov
and
ret
mov
jne
scas
pushf
adc
inc
dec
add
sti
scas
or
or
rorb
push
jp
xlat
sub
mov
clc
inc
sar
popf
inc
mov
sahf
mov
test
je
lret
and
mov
imul
or
sub
or
hlt
or
or
adc
sbb
pop
pop
repnz
adc
movsb
cld
lds
xor
stos
cmp
add
sbb
adc
dec
sub
add
mov
mov
xor
add
xchg
add
mov
mov
and
dec
inc
adcl
in
sub
pushf
xchg
or
sbb
add
add
mov
adc
sbb
add
pop
add
dec
jns
cmp
add
ja
jg
stc
inc
jae
or
jae
lods
rcl
ljmp
and
shr
or
std
jecxz
in
add
xor
jmp
enter
sbb
idivl
cmovg
mov
xor
test
mov
hlt
ficoms
inc
sbb
dec
or
inc
pop
add
aad
inc
cmp
mov
inc
enter
sahf
movsb
ja
jl
mov
pop
aaa
xchg
pop
adc
adcb
clc
stos
fisttpll
jmp
testb
idivb
clc
dec
inc
addr16
adc
xor
jne
sub
inc
jmp
inc
sub
xchg
test
or
leave
fadds
sub
fisubrl
lock
push
fwait
dec
aas
stc
hlt
fdivrl
test
lahf
movsl
lds
push
add
cmp
jle
fldpi
aam
aas
sbb
dec
pop
repnz
inc
adc
je
xchg
jl
pop
test
adc
fiaddl
into
in
shrb
popa
pop
lcall
or
add
add
fs
dec
xor
in
in
xchg
pop
add
add
mov
add
lcall
cmp
lock
mov
mov
dec
or
or
and
clc
or
out
push
cmp
ja
lahf
mov
loop
adc
cmp
sub
in
or
shll
leave
adc
mov
mov
roll
pop
push
imul
movsb
sub
xchg
push
cmp
pusha
adc
hlt
cmp
add
cmpsb
sub
add
lahf
pusha
lea
retw
or
sbb
in
mov
lcall
hlt
rolb
mov
nop
insl
orb
sbb
insb
idivb
roll
or
pop
dec
repz
sbb
sahf
mov
movb
mov
mov
mov
je
dec
sub
loope
mov
out
je
add
vxorps
cld
mov
cmp
add
lret
dec
ja
mov
xor
push
xor
movsl
pushf
xchg
loopne
inc
dec
cltd
or
imul
add
lds
loopne
push
or
push
movsl
inc
mov
pop
sbb
or
and
jle
psllq
sbb
loopne
inc
and
add
xor
test
decb
or
dec
inc
mov
add
gs
adc
inc
imul
mov
inc
mov
ret
jmp
sbb
and
addl
add
and
add
and
adc
mov
dec
outsl
push
sarl
add
dec
and
cs
dec
js
push
push
or
adc
aas
aaa
test
xchg
outsb
cs
scas
inc
jno
mov
add
ss
out
out
inc
mov
push
loopne
mov
dec
sbb
mov
fsts
sub
mov
leave
push
push
pop
test
movsb
push
mov
sub
inc
mov
push
inc
imul
lret
push
cmpsb
push
push
and
sbb
pop
ds
mov
xor
add
je
mov
das
inc
mov
push
pop
xorb
addl
push
ret
or
push
popa
mov
je
sbb
or
stos
cmpsb
inc
loopne
rcll
lahf
clc
mov
mov
or
or
and
sbb
movsb
sbb
dec
in
imul
sub
mov
cmp
in
jecxz
enter
lock
js
insl
cli
bound
sub
xor
push
insl
adc
xor
scas
das
pop
pop
push
leave
popf
and
xor
and
mov
sbb
inc
dec
mov
cmc
dec
divb
fmuls
lds
cmpsb
loopne
jmp
dec
adc
or
mov
adcb
xor
out
cmp
sub
js
add
adc
or
mov
or
push
ret
rcrl
inc
insl
cwtl
addb
test
pushf
iret
stc
inc
popa
lcall
xorb
push
sbb
inc
mov
sbb
and
or
and
dec
adc
pop
xchg
cmpsb
ss
sbb
test
sbb
decl
adc
scas
adc
sbb
xchg
es
bound
or
shll
push
cmpsb
push
and
add
test
stos
mov
lcall
popf
in
ss
aas
cmp
std
movb
jmp
or
shll
unpcklps
aaa
aam
andb
adc
data16
xchg
jle
dec
mov
movw
or
aaa
shll
dec
add
push
mov
mov
es
outsl
mov
push
xor
arpl
push
lea
loop
cmp
rclb
adc
mov
sub
andb
sbb
lahf
int3
lea
push
push
mov
push
add
cmp
ss
incb
scas
scas
mov
imul
call
call
rorb
or
jge
pop
lcall
xchg
mov
push
push
mov
adc
push
ljmp
mov
mov
adc
out
mov
cwtl
movb
adc
push
addb
and
inc
call
dec
mov
push
or
adc
in
jbe
mov
decl
jle
repnz
jo
cmpb
xor
mov
arpl
outsl
or
and
test
mov
xor
loop
cmpsl
into
jae
psubw
ja
inc
nop
jo
imul
in
or
inc
call
xchg
loopne
dec
lods
fs
inc
or
test
cmp
pop
mov
jne
push
and
rolb
lods
xor
add
push
dec
or
xchg
rcrl
cwtl
into
adc
xchg
rcrb
xor
andl
imul
ret
movsb
out
and
sub
data16
jbe
mov
jge
jl
mov
test
rol
les
jno
add
cmpl
add
pop
adc
gs
fstps
jle
shr
or
and
int3
ds
or
push
lret
inc
loop
test
inc
pusha
push
negb
add
les
shrl
loope
shr
or
mov
test
or
dec
mov
test
mull
xchg
mov
dec
and
test
repnz
scas
testb
dec
cli
cli
inc
cli
daa
sbb
repz
jle
adc
adc
test
dec
dec
in
inc
in
call
cltd
test
sbb
insl
insl
sub
adc
xor
or
inc
subb
fimull
lock
mov
fidivl
fnstenv
and
jg
je
jmp
mov
dec
xlat
mov
xor
push
mov
dec
fstps
in
popa
add
sub
jge
shlw
loop
out
out
rcrb
jne
push
dec
and
sbbb
cmp
repnz
dec
xor
loopne
push
repnz
fmuls
and
sbb
inc
add
and
push
and
jge
cmp
mov
inc
and
int3
dec
loopne
add
xor
mov
or
sbb
fdivl
xchg
cmpsl
call
and
fnstcw
pop
cltd
insl
test
shll
movsb
mov
mov
add
add
xchg
add
sahf
idiv
adc
popf
adc
jns
mov
test
push
push
sbb
mov
out
and
jge
adc
enter
jecxz
shll
xchg
movsb
or
cmp
les
stc
add
jne
xchg
xorl
enter
movsl
sbb
pushf
pusha
mov
pop
push
push
push
je
cwtl
sbb
xor
stos
aas
and
lock
sbb
movb
jmp
ss
inc
cmp
jle
push
pop
outsb
call
sub
cmpsl
or
sub
add
xor
in
repnz
cmp
roll
and
dec
cli
mov
adc
neg
and
rcrl
call
inc
pop
pop
imul
mov
es
lea
push
and
mov
push
in
jne
cmp
out
mov
add
jae
cli
add
pop
jmp
or
pop
rcr
aam
into
or
nop
dec
popa
pop
or
jl
push
pop
inc
add
pop
xor
clc
lock
inc
dec
enter
add
sahf
mov
pop
shr
jae
add
mov
or
call
add
jae
testb
mov
inc
or
inc
ret
or
in
pop
or
das
mov
sub
cmp
shrl
jmp
cmpb
or
add
dec
cmp
repnz
inc
dec
add
fiadds
add
fadds
add
add
mov
fucomi
sahf
ficoms
jp
jne
dec
mov
jb
sub
mov
mov
adc
add
lret
or
add
push
mov
mov
jp
ret
adc
imul
popa
push
lcall
rclb
mov
mov
mov
popa
aam
and
rclb
in
push
aaa
push
loop
or
iret
or
jmp
repz
int3
scas
xchg
push
or
add
or
add
add
xchg
push
out
adc
mov
add
mov
and
push
ret
js
sub
or
jae
pop
sbb
mov
mov
mov
inc
and
cmp
xor
into
xor
inc
sub
and
jecxz
xchg
sub
and
pop
pop
sbb
iret
push
xor
ret
loopne
adc
cvtpi2ps
inc
sub
jbe
adc
ss
shll
fadds
adc
test
or
or
rcrl
movsl
push
or
xchg
decb
inc
or
mov
push
je
xchg
out
adc
xlat
push
pop
or
add
adc
jnp
sbb
and
mov
ret
ret
test
pop
fmuls
cwtl
out
and
push
sbb
scas
popa
fadds
das
mov
loopne
loop
clc
mov
sbb
sub
or
adc
out
push
inc
scas
xor
adc
or
mov
and
cwtl
push
xchg
xchg
sub
sub
scas
xchg
sahf
scas
loopne
or
pop
movsl
mov
jne
scas
pop
adc
paddusb
bound
cltd
ss
or
add
data16
sbb
add
lret
add
mov
pusha
cmpsb
lret
je
and
sbb
inc
in
in
jg
into
into
into
push
inc
test
enter
xorl
sarb
push
pop
nop
pop
js
xor
pop
mov
scas
add
not
and
or
sbb
and
jmp
push
and
dec
jp
pop
lcall
add
leave
lahf
pop
xchg
out
mov
or
enter
add
pop
mov
and
je
and
ret
jne
or
sbbb
jmp
leave
dec
in
mov
mov
lret
push
lret
lret
push
pop
jae
hlt
xchg
pop
arpl
add
aad
pop
sbb
mov
jb
adc
addb
push
mov
push
push
xor
movsl
into
clc
addr16
mov
movsl
mov
and
icebp
test
lcall
mov
loopne
add
or
push
lods
hlt
xlat
lret
nop
lahf
add
inc
mov
xor
jecxz
push
push
add
mov
and
add
lock
add
cmpsl
test
lods
pop
adc
data16
dec
xchg
or
mov
mov
push
testb
push
push
int3
movsb
push
dec
ja
pop
sbb
pop
and
sahf
and
sbb
or
adc
scas
lea
mov
shr
andl
mov
mov
and
ficomps
or
mov
adc
sbb
sbb
adc
sahf
and
dec
dec
adc
jae
js
clc
mov
repz
and
inc
lea
sbb
sbb
jp
sub
xor
icebp
std
jo
cmc
sbb
cmp
pop
fldenv
xor
int
ss
push
inc
adc
and
daa
push
cld
je
push
push
scas
dec
mov
add
adcl
addb
mov
ja
add
stc
sbb
sar
test
sbb
xlat
and
rolb
fsubrl
aam
push
push
ds
pop
sbb
fcoml
daa
in
es
adc
add
adc
out
mov
lret
cmc
dec
stc
dec
cmp
popa
stos
mov
shrb
test
or
loopne,pn
in
dec
iret
cmpb
clc
xor
or
jbe
xchg
sbb
loopne
jnp
or
popf
sbb
ss
sub
call
mov
lods
sbb
sbb
or
shrl
rorb
loop
push
or
push
shl
push
push
test
push
loope
or
dec
or
cmp
jno
push
sub
pop
repnz
adc
shl
inc
jbe
rcrb
aaa
cmpsl
cltd
or
lods
mov
lds
cmp
mov
add
push
mov
jne
jo
dec
add
mov
mov
clc
fnstsw
push
push
out
orb
mov
or
add
dec
repz
and
fbstp
sub
add
push
mov
add
pop
fistpl
xor
mov
push
push
jbe
or
push
je
aas
push
push
fs
inc
push
aas
aam
cli
clc
add
xchg
xchg
mov
test
call
adc
mov
in
add
sub
lods
xchg
movsb
adc
leave
jo
xor
add
repz
in
orl
adc
xor
inc
ja
cwtl
xor
mov
jns
and
in
jo
dec
ss
cli
adc
cmp
lock
rcll
dec
xchg
cmp
adc
or
dec
push
add
mov
push
ret
cld
aam
lret
loop
lods
push
idivb
std
dec
add
fs
cmc
or
jmp
cmp
cltd
iret
ja
outsl
mov
cmp
jge
test
xchg
add
and
sbb
lock
add
cmp
and
mov
mov
fs
cmp
jl
out
test
cmp
push
sbbb
imul
in
sbb
push
rolb
cld
popf
and
adc
pushf
jbe
sub
adc
xlat
in
inc
into
enter
lock
fdivr
dec
ja
dec
add
xchg
mov
xor
rolb
add
mov
data16
cmp
push
add
add
push
in
xchg
xchg
xchg
pop
or
or
jnp
or
int
int
jbe
jmp
or
addr16
int
int
bound
jmp
adc
pop
adc
push
adc
int
int
dec
adc
dec
adc
aas
pop
int
int
jmp
sbb
xor
jmp
sbb
int
int
es
and
pop
pop
sbb
int
jmp
and
or
insl
add
adc
fimull
cmp
iret
push
mov
or
xor
sti
add
push
dec
push
pop
popa
iret
repz
imul
iret
repz
cwtl
popf
mov
rep
mov
mov
iret
aam
fidivrs
repz
call
sahf
out
cld
add
sbb
lahf
mov
mov
or
and
or
or
push
movups
adc
adc
jo
std
call
pop
sbb
sbb
sbb
push
pop
and
and
aas
mov
scas
cs
add
cli
cli
movb
stc
mov
shlb
int3
enter
adc
xchg
aaa
outsb
adc
fdivrl
push
es
aaa
popl
out
or
mov
add
dec
sahf
fsubr
ja
movsb
cli
sbb
push
push
int
scas
cmp
and
sub
mov
sbb
adcb
inc
insl
out
dec
rolb
push
push
xchg
shlb
les
pop
add
loopne
and
xor
add
ret
sub
dec
sub
adcl
mov
mov
jno
adc
xchg
add
or
push
mov
sub
mov
orl
rolb
clc
jnp
out
iret
adcb
cmp
push
push
mov
shrb
lret
mov
adc
sub
das
hlt
sbbb
lahf
add
jae
aas
movsb
and
je
mov
cli
jl
mov
subl
decb
mov
and
adc
mov
mov
pop
cmp
mov
or
jle
es
jmp
ja
pushf
push
xchg
adc
dec
cmp
lcall
mov
jge
ja
push
and
jl
adc
loopne
and
cwtl
sub
adc
nop
sbb
jbe
inc
or
pop
mov
leave
std
ss
or
inc
mov
test
lock
loope
adc
mov
adc
mov
lret
je
sarb
lret
xchg
xchg
and
inc
lea
scas
push
pop
cmp
jne
and
popf
lea
add
xchg
add
mov
inc
repz
or
into
addb
lret
pop
or
adc
add
inc
pop
push
inc
jp
pop
js
inc
sbb
mov
test
jne
jp
mov
push
loopne
cmp
mov
inc
hlt
jle
in
adc
or
adc
push
out
cmp
test
fcom
cmp
add
xor
sbb
adc
mov
std
adc
cs
mov
mov
int3
enter
sbb
mov
push
dec
push
adc
inc
dec
lock
fistpl
and
cmpsl
lcall
in
jo
mov
leave
mov
repnz
inc
dec
add
dec
dec
jnp
add
sbb
xchg
inc
mov
add
cld
gs
aam
push
mov
jp
loop
enter
add
add
inc
push
xor
aaa
ror
and
cmp
jne
xchg
or
add
inc
js
bound
jo
xchg
lock
out
int3
or
rcl
out
into
mov
call
xor
in
imul
sbb
and
dec
add
jns
arpl
or
inc
hlt
jl
sbb
sub
and
add
outsb
sub
dec
fimuls
mov
push
cltd
movb
inc
and
mov
sub
xchg
add
add
inc
inc
pop
pop
ds
mov
mov
jp
lods
fwait
mov
call
sub
fistpll
push
push
pop
sub
sbb
cmp
cmp
loop
je
js
arpl
js
jae
dec
dec
cld
dec
xchg
add
mov
fdivl
pop
xor
jmp
jns
je
arpl
cmp
test
push
movsb
pop
and
scas
or
sbb
adc
loopne
cmp
pushf
stos
add
mov
xor
sub
cmp
push
sub
pop
lods
push
inc
xchg
and
jbe
lret
push
adc
push
add
mov
mov
rolb
lret
jmp
lcall
adcl
cmp
mov
leave
pop
ljmp
cmp
jne
mov
adc
int3
adcb
dec
add
or
adc
jns
jns
mov
and
push
jp
aas
push
cli
cmp
or
fistl
fiaddl
and
add
jl
xchg
mov
fcomps
js
ret
shll
aam
rolb
sbb
enter
loop
xor
cmpb
jne
cltd
in
inc
ret
scas
cmpl
fwait
data16
pushl
push
adc
roll
push
call
test
stos
jmp
mov
outsb
les
leave
loopne
popa
jno
add
movups
jno
add
mov
xor
lea
add
ret
int3
cmpb
push
sbb
push
mov
jl
push
jecxz
clc
leave
add
ja
cld
inc
push
dec
xor
cmp
mov
jl
int3
inc
fdivrs
add
fidivrl
testb
pop
sbb
add
popa
nop
pop
fmuls
push
sbb
cli
xorb
jne
cltd
push
add
pop
outsl
scas
pop
jns
sbb
push
sarl
loope
aam
inc
je
push
push
je
jne
lock
xor
icebp
mov
cmp
dec
push
or
pusha
data16
and
xchg
dec
pop
mov
stc
lock
cmpl
add
push
lret
jno
rcrb
add
xor
hlt
cmp
ret
sub
push
ss
aaa
add
cmp
jne
inc
add
outsl
adc
incl
dec
or
push
add
or
or
cs
sbb
jge
repz
add
cmp
ja
loopne
jg
jmp
rcr
mov
add
jmp
outsl
or
mov
cmp
xchg
add
jle
clc
cmp
or
jp
cwtl
sti
inc
xor
dec
pushf
lcall
cmp
test
and
dec
sbb
jo
jns
mov
flds
mov
pushf
das
dec
mov
scas
lea
sbb
xor
addr16
ret
cltd
fildl
out
sub
iret
pop
fldenv
jne
out
sti
testl
push
push
iret
mov
add
ja
adc
and
mov
add
fdivrl
push
adc
pop
loopne
dec
inc
call
dec
notb
ljmp
ret
fcoms
or
add
shr
and
cli
inc
jl
or
sbb
popa
jp
dec
sub
jle
xor
lret
pop
mov
push
add
inc
jmp
test
sub
add
sub
adc
add
and
loopne
flds
pop
add
add
inc
sub
add
pop
out
mov
inc
cmp
add
xor
add
pop
icebp
mov
ret
roll
add
mov
or
lret
mov
pop
mov
and
ljmp
rclb
inc
lods
add
and
les
add
divb
aaa
es
sbb
stc
lcall
fmull
inc
sbb
push
sahf
dec
in
xor
mov
push
in
xchg
out
dec
sub
push
cmp
inc
or
ljmp
rcll
aam
in
push
insb
and
xchg
out
fisubrs
push
dec
sub
sarl
pop
dec
jne
out
repz
lret
outsb
jl
cmpsb
mov
sbb
lods
cmc
sub
mov
push
mov
xor
dec
or
subl
and
push
push
js
out
and
xchg
lea
dec
add
push
mov
add
xchg
cmp
stos
jl
imul
enter
inc
fsubl
repz
sahf
pop
push
push
push
pop
in
or
and
repnz
nop
out
inc
ss
push
and
lret
push
and
jns
enter
test
nop
sbb
stc
and
and
lods
sbb
adc
loope
pop
aas
or
or
mov
sbb
sub
or
in
xor
pusha
pop
ret
add
mov
add
sbb
and
cld
nop
out
push
push
push
pop
repnz
or
es
jnp
repz
push
and
jnp
or
mov
jns
jns
or
sub
shlb
inc
loopne
and
adc
lock
sbb
add
ja
and
repnz
repnz
fs
dec
sahf
pop
or
push
mov
adcb
paddw
pop
cltd
mov
inc
mov
and
fistps
cwtl
mov
in
and
pop
pop
xchg
iret
dec
jle
fmull
xchg
and
cmp
je
sbb
incb
andl
cmp
jno
pop
or
push
add
sahf
out
sahf
and
inc
push
push
jns
fwait
lods
mov
repz
pop
pop
sub
dec
iret
repz
pop
insb
jge
lahf
mov
iret
repz
shl
hlt
add
imul
out
sahf
out
jl
sahf
scas
adc
rclb
dec
or
dec
call
scas
or
bswap
and
push
cmp
sbb
sbb
inc
sub
call
sub
xor
insb
mov
les
mov
and
xchg
daa
test
movsb
xchg
test
popf
icebp
xchg
scas
jae
add
sub
xchg
mulb
sub
mov
lea
sub
mov
push
jbe
and
pop
enter
adc
inc
dec
std
jo
pop
lcall
shlb
sbbl
push
lea
in
pop
xor
fucomi
pop
sbb
dec
dec
mov
sbb
pop
or
or
inc
dec
popf
pop
scas
mov
frstor
mov
test
sti
cmc
jnp
lcall
adc
lock
dec
filds
cmpsl
test
cmp
jne
xor
loop
rcll
mov
adc
sbb
mov
pop
jmp
dec
jle
mov
fs
pop
xchg
adc
call
push
icebp
add
sub
and
ret
scas
loop
dec
stc
fdivrs
adc
mov
dec
sbb
dec
mov
add
jb
test
sub
pop
xor
aam
push
dec
xor
ffree
cmp
add
mov
cld
loope
inc
add
lock
inc
jmp
test
or
lock
adcl
push
push
push
inc
xchg
mov
push
pusha
jmp
mov
aaa
and
sahf
loop
mov
add
sarb
add
jne
mulb
adc
add
pop
in
xchg
and
pop
and
sbb
or
addb
inc
incl
cmp
pop
imul
push
push
mov
dec
lcall
adc
pop
push
mov
mov
js
xor
je
push
lea
adc
cmp
adcb
mov
mull
push
lds
flds
xchg
sbb
aad
cmp
ja
lea
and
push
sti
mov
leave
addb
mul
inc
imul
push
push
inc
lock
std
adc
xor
mov
inc
nop
or
mov
loopne
in
push
mov
and
cmp
call
loope
cmpb
aam
add
stc
sarb
in
shll
or
rol
cmpl
loop
push
popf
test
addb
bound
pop
and
enter
lcall
push
popf
popf
push
fdiv
fs
aad
adc
inc
pop
pusha
xor
adc
mov
push
out
cmp
rcrl
sbb
adc
or
les
pop
push
mov
sbb
add
ror
jo
sub
das
loope
aam
xor
lcall
jl
leave
jle
or
mov
cltd
or
lock
push
cmp
adc
in
add
das
js
imul
pop
mov
pop
scas
mov
xchg
daa
push
push
fsubrs
dec
lock
add
es
jo
call
inc
sbb
rclb
add
call
test
push
and
inc
dec
adc
xchg
cmpsl
mov
movsb
in
push
and
pusha
sbb
push
sub
test
and
inc
or
dec
or
cmp
sbbb
pop
dec
add
cmp
push
push
js
sbb
insb
or
aam
into
dec
sarb
cmp
or
pop
popf
lock
sub
and
or
aas
dec
sub
cltd
adc
push
adc
cmovg
sbb
shlb
div
pusha
lds
cmp
insb
jb
ss
xchg
mov
sub
rcl
xchg
adc
ss
inc
cmpsb
in
adc
leave
pop
mov
test
cltd
adc
sbb
pop
pop
rorb
mov
xor
cmc
inc
fisttps
test
add
and
dec
xor
fs
push
lret
out
cmp
xchg
shrl
into
ljmp
pop
dec
sbb
jl
push
faddl
dec
mov
ret
pusha
lods
and
sbb
add
adc
or
ss
shrl
cmp
adc
pop
cmp
movsl
jmp
sbb
dec
jp
xor
xorl
das
in
loopne
mov
addb
bound
in
pop
sub
cltd
push
pop
adc
or
lcall
mov
dec
sbb
pusha
pop
das
nop
push
xor
in
sbb
push
outsl
or
loop
rorl
test
lods
fistps
pop
mov
stos
fnstenv
test
pop
inc
cld
rcrl
cmpl
dec
mov
cs
in
lods
push
or
add
cmp
out
rolb
inc
cmp
out
stos
test
jmp
push
enter
fmull
enter
andl
lods
sbb
aam
adc
xchg
sbb
mov
lret
mov
or
pushf
inc
push
insl
add
pushf
pop
cmp
fisttpl
cmp
inc
rol
cmovne
add
inc
bound
mov
mov
daa
sub
push
push
jmp
cmp
rolb
test
rcrl
pop
mov
clc
jecxz
add
adc
sarl
cwtl
mov
push
or
out
adc
or
bnd
dec
or
or
or
or
sbb
push
jb
pop
test
xor
push
push
addb
and
xor
xlat
xor
loope
xchg
dec
xor
sarb
and
orl
mov
nop
ljmp
push
sbb
lfs
mov
push
lds
test
push
adc
fs
pusha
or
ret
inc
outsb
scas
andl
ljmp
cmp
adc
icebp
push
imul
mov
mov
or
arpl
xor
add
push
jae
imul
push
daa
int
into
nop
inc
lcall
mov
ljmp
shlb
mov
repnz
lcall
adc
enter
in
jnp
mov
jne
jne
mov
xor
ficomps
inc
cmp
daa
xor
cmc
testb
iret
enter
or
pop
jp
inc
popf
fdivrs
and
xchg
mov
imul
stos
or
jl
and
test
cmp
sub
mov
inc
mov
adcl
jnp
pop
mov
ret
sbb
pop
dec
sarb
jnp
fmul
add
pop
add
stc
push
stos
add
push
pop
test
and
pop
into
add
dec
push
adc
mov
ret
iret
movl
mov
inc
flds
es
lods
sub
iret
inc
cmp
sbb
mov
cmp
cvtpi2ps
lahf
ja
imul
and
sub
cmpsl
ds
fsubrp
int3
xchg
xor
dec
adc
push
adc
and
sub
imulb
xor
and
ds
shrb
mov
push
mov
adc
rolb
cmp
adc
pop
dec
dec
adc
loopne
cmp
dec
adc
in
pop
pop
pop
push
push
push
inc
sbb
arpl
outsl
inc
xor
pop
jne
mov
dec
adc
jl
mov
or
sbb
pushf
mov
sbb
xor
mov
sbb
push
sbb
sbb
icebp
jo
nop
inc
cs
jle
jp
in
lret
cld
adc
sbb
fisttps
jp
mov
sbb
cld
and
push
and
shrl
fistpll
in
pop
movsb
sub
cmp
push
sub
sbb
in
add
cmp
enter
and
add
xchg
mov
fsubl
lret
sbb
stc
es
es
aam
rol
in
enter
sub
nop
movd
sub
cltd
loopne
cs
xchg
mov
mov
les
lock
lret
and
xor
stos
sub
aaa
cs
lret
inc
jne
sbb
sbbl
enter
enter
mov
jb
xor
outsl
in
inc
push
in
aaa
cld
sub
inc
push
in
and
push
in
push
sbb
adc
push
in
in
or
insb
mov
std
dec
sbb
sbb
cmpl
enter
adc
sbbb
andb
mov
mov
lret
pop
rcl
cmp
mov
aad
sbb
ficompl
std
jecxz
jb
das
lea
int
std
or
mov
or
stc
divl
orb
add
and
cs
jbe
test
enter
mov
loope
stc
stos
insb
ret
ss
stos
mov
cmp
loope
enter
sub
ss
cmp
and
sub
mov
xchg
mov
jg
pushl
scas
fcomps
jb
xchg
adc
xchg
inc
xchg
lds
insb
es
xor
icebp
lock
xor
cmp
jbe
xchg
cmp
mov
and
pop
xor
add
in
pop
jb
push
sbb
shlb
cwtl
in
outsb
cmp
dec
lods
test
inc
test
add
fdivrl
adc
or
pusha
push
push
adc
adc
sub
imul
filds
dec
je
mov
push
dec
lock
mov
adc
xchg
arpl
push
add
pop
lret
jo
pop
mov
add
out
add
enter
test
pop
push
xchg
imul
cwtl
xchg
in
jnp
push
and
insb
push
fwait
jo
push
aaa
xchg
mov
shll
xchg
sub
adc
push
dec
push
push
incl
sbb
mov
push
mov
out
lods
popf
or
sbb
push
imul
push
xchg
lods
mov
sbb
mov
pop
pop
jle
ret
push
lods
rcrl
sub
mov
les
ja
jecxz
ret
pop
xor
add
mov
jmp
aam
mov
inc
repz
xchg
push
jo
inc
or
dec
push
call
xor
cmp
xchg
scas
jbe
cmpsl
sbb
addb
pop
test
fxch
les
push
in
jmp
jecxz
rcrb
add
mov
daa
es
movsb
adc
or
jne
cmp
adc
sub
pushf
mov
lahf
jb
dec
mov
rol
lock
add
push
push
xor
ret
enter
push
push
and
loop
jp
movsb
and
ljmp
adc
pusha
clc
call
or
xchg
insl
pop
cmpsb
cli
mov
test
int
and
orl
ret
movsl
dec
lds
push
rcl
dec
dec
int3
pushf
mov
push
add
or
dec
push
push
sub
push
pop
ds
push
jg
sbb
adc
xchg
pusha
mov
inc
sub
mov
inc
ret
test
mov
int
add
lods
add
xor
xor
inc
sub
or
les
inc
in
movsl
jge
xor
enter
push
adc
in
inc
jne
ret
and
inc
sbb
inc
dec
cld
push
jbe
pop
mov
push
or
or
xchg
inc
xor
mov
lock
and
cmp
pushf
add
pop
imul
push
mov
mov
adc
bsr
ja
shlb
push
add
cmpsl
add
lcall
movsl
push
flds
ss
push
push
mov
addr16
dec
jne
jle
xchg
push
das
inc
std
xor
pop
lar
xchg
or
lcall
dec
enter
add
fsubr
mov
int3
rcll
push
movsl
dec
xor
popf
aas
clc
dec
cmp
pop
cmp
inc
nop
out
inc
pushf
jo
pop
xchg
cmp
outsl
inc
repz
sbb
and
pop
mov
pop
rcl
lds
sti
dec
push
push
test
repnz
pop
push
push
add
dec
adc
dec
xor
xor
insl
sarb
pop
add
adc
cmp
push
std
call
dec
rolb
inc
lret
inc
jne
stos
mov
inc
xchg
push
sarb
sbb
jl
cli
js
dec
cmpb
add
xor
add
push
fildl
jno
test
jo
adc
lods
sub
test
sbb
dec
pushf
iret
pusha
mov
sub
mov
mov
sbb
fsubrs
in
sarl
add
imul
mov
add
popf
fwait
push
rol
and
sub
xchg
xchg
push
sub
jo
and
aas
andb
jb
in
push
xor
xor
jo
lea
push
cmp
cs
les
jl
es
in
lock
xor
fsubl
inc
lock
sbb
mov
ss
xlat
mov
cmpsl
or
jno
sbb
daa
pop
leave
inc
and
popf
dec
jg
dec
call
sbb
and
xor
sub
adc
dec
loope
jl
cmp
jnp
bound
dec
or
mov
xor
jmp
jo
pop
fwait
push
adc
shlb
subb
in
inc
shrb
lock
mov
dec
lret
and
inc
cmp
sub
enter
add
in
adc
push
test
fmuls
cmc
orb
or
aaa
or
jne
mov
or
jbe
adc
pusha
add
test
push
loope
mov
cmp
mov
push
push
mov
fsubrs
xchg
movsl
rclb
xor
in
sahf
adcl
out
push
xor
orb
pop
mov
push
je
pusha
and
and
adc
sbb
or
push
cmpsl
out
or
nop
push
pop
fs
loope
bound
fldz
push
mov
adc
cmp
push
cmp
adc
mov
or
inc
dec
sub
fsubrs
andl
xor
mov
inc
cmp
xor
cmp
sbb
push
lahf
dec
nop
and
add
push
bound
lods
test
add
pop
pusha
mov
pop
push
ss
int
stos
sbb
jae
sbb
insl
movsb
add
mov
das
push
sub
add
sub
sub
cld
adc
movsl
push
push
int
pusha
sbb
ja
adc
sub
mov
push
push
lret
cs
pop
and
je
fnstenv
inc
mov
xor
mov
and
test
mov
repnz
out
mov
loopne
arpl
add
xor
mov
inc
insl
arpl
jne
loopne
pop
add
jns
jno
xor
jmp
sub
and
call
and
or
push
mov
jp
mov
adc
push
pushf
adc
mov
aaa
add
mov
pop
or
pop
pop
push
dec
mov
rcrb
push
xlat
mov
punpckhbw
adc
adc
push
sub
jp
pop
push
or
pop
and
cs
pusha
je
je
in
adc
pop
dec
mov
sahf
pop
add
cs
or
push
inc
push
xor
sti
call
cld
mov
or
mov
jo
adc
mov
test
xchg
lea
stc
mov
shrl
insb
adc
xchg
fistpl
in
adc
orl
add
pop
sbb
add
cmp
inc
adc
add
push
mov
adc
jo
inc
stos
into
stos
imul
lock
add
call
lret
prefetch
or
in
lock
stc
adc
add
enter
adc
cmp
daa
mov
xchg
inc
cltd
and
ds
adc
shll
sti
in
adc
jns
idivb
xchg
or
add
stc
add
mov
xchg
out
jmp
or
int3
add
jecxz
push
dec
sbb
js
and
lds
push
insb
add
push
jmp
mov
es
add
stos
and
int3
mov
mov
adc
in
sbb
add
cmp
mov
mov
inc
inc
dec
xlat
adc
or
filds
je
dec
push
push
nop
ds
mov
adcb
pushf
cmpb
jns
scas
pop
adc
stc
jne
cmp
pop
dec
adc
cli
push
and
cmp
add
popa
cltd
sbbl
and
icebp
test
mov
rsqrtps
filds
add
iret
add
lret
dec
popa
adcl
sub
mov
xchg
push
dec
push
add
out
test
jnp
fbstp
icebp
cmpsb
pusha
jns
sbb
sti
add
jbe
fcomps
mov
cli
sbb
jmp
xchg
sbb
dec
imul
jg
or
cmp
lock
pop
adc
mov
aad
rorb
mov
stos
cmp
aad
lds
inc
rolb
aam
mov
add
add
and
add
add
test
fstps
jp
add
icebp
adc
and
fistpl
mov
les
test
xchg
orl
insb
add
les
sbb
push
xor
cs
pop
jo
mov
push
in
movsb
and
jp
aam
nop
dec
adc
pushf
fwait
sbb
mov
pop
enter
add
adc
or
or
and
roll
es
lods
call
pop
cli
jp
lcall
xchg
adc
adc
movsb
add
or
xsave
or
insb
add
add
mov
pop
mov
xor
test
and
mov
mov
pop
and
and
and
leave
adc
xor
pop
inc
cmpsb
add
jnp
xchg
xor
in
inc
cld
add
pop
jno
outsl
or
mov
sub
dec
push
dec
scas
pushf
adc
adc
shlb
jmp
adc
test
das
and
call
mov
dec
sbbl
test
adc
xor
add
and
sub
sub
push
jb
adc
sbb
ror
fdivs
pop
push
mov
jl
and
dec
leave
push
test
pop
test
je
inc
or
dec
xor
inc
test
xchg
or
adc
sbb
add
mov
inc
lahf
sbb
and
inc
lahf
inc
adc
xchg
add
test
xor
and
mov
or
and
aad
je
lea
add
push
push
or
xchg
adc
push
push
sub
push
xor
lret
pusha
sti
ret
fdivl
fldt
mov
cmp
cld
xchg
in
jne
mov
in
outsl
sub
jle
push
call
rorb
lea
xchg
pusha
inc
dec
xlat
sub
adc
bound
and
loop
pop
or
push
int3
xor
xor
mov
stos
lds
movsl
lds
in
jo
out
rolb
cmc
xor
inc
sub
push
dec
lods
xchg
add
cmp
cmp
filds
jmp
shrb
push
or
imul
sti
fimuls
dec
mov
mov
test
mov
adc
mov
inc
jp
in
lret
mov
sahf
mov
jnp
mov
jnp
mov
out
orl
add
push
cmpsl
into
jae
mov
ror
lock
adc
adc
aam
rorl
add
dec
mov
xchg
mov
iret
add
add
jge
andb
into
cmp
sbb
icebp
roll
mov
jle
xchg
adcl
dec
inc
aaa
xor
int3
push
inc
add
sub
mov
adc
loopne
mov
mov
mov
ss
roll
arpl
xchg
addl
test
or
push
loope
jb
in
pshufw
lods
lret
in
and
push
jo
or
push
push
lret
sbb
inc
or
dec
sbb
jecxz
jne
and
dec
add
jns
icebp
dec
and
add
and
and
int
and
nop
push
mov
aad
imul
or
loop
fdivrl
add
leave
push
pusha
add
pop
jb
cmc
adc
and
and
add
orl
lds
iret
inc
mov
adc
into
xchg
in
sbb
mov
dec
test
dec
or
cmc
enter
cwtl
je
andl
test
fiaddl
add
dec
fucomp
sub
imul
sbb
and
fs
inc
push
lret
push
mov
inc
push
push
cmpb
and
xor
je
push
or
and
inc
mov
push
mul
pop
aas
negl
in
ss
cmp
xor
pop
pop
push
orl
xor
das
jbe
fcomps
adc
jne
mov
sbb
and
and
loope
jp
or
mov
push
mov
repnz
cmp
ss
and
sbb
jl
popf
mov
mov
data16
inc
dec
enter
ret
dec
jl
arpl
pushl
jp
pop
repnz
pop
cmp
arpl
sbb
inc
loope
pop
adc
or
cmp
repz
fldt
add
mov
mov
or
aam
and
lcall
cmpsb
push
ret
std
xchg
loope
push
stos
enter
inc
mov
cmp
les
cltd
adc
or
mov
xor
repnz
pop
mov
pop
jle
lret
adc
stos
add
push
push
xor
mov
add
xor
testl
pop
or
imul
jno
add
mov
mov
imul
in
push
cmp
mov
sbb
mov
sub
adc
cmp
cs
inc
imul
and
insb
pop
inc
loop
dec
jecxz
fcoml
mov
pop
push
sub
enter
and
out
lock
incb
js
inc
fstpl
pop
js
cmp
repnz
clc
pop
jne
xchg
rcll
xchg
push
gs
test
cmp
sub
pop
shrl
or
sbbb
jp
jnp
cmpsb
sbb
test
mov
fs
add
cltd
cmc
or
lods
or
mov
add
sbbb
aaa
mov
xchg
fcoml
movl
jl
sbb
push
push
push
jno
sarl
popf
adc
mov
pusha
and
sub
int3
push
adc
fcoml
prefetch
xchg
and
imul
in
loopne
out
pop
aas
and
pop
or
lods
xchg
sbb
cmp
sub
inc
jns
addr16
mov
mov
dec
imul
fsubl
daa
iret
ret
stos
movsl
shl
cmp
sbb
leave
int3
out
cmp
pusha
sbb
inc
scas
cli
fs
jne
sbb
and
faddl
jnp
or
fcmovnb
mov
add
add
and
inc
enter
ss
and
loop
dec
pcmpgtb
mov
je
outsl
xchg
clc
adc
sub
push
inc
adc
push
and
mov
inc
leave
jb
incl
mov
pop
push
fisubs
jo
pop
insb
negl
fnstcw
lods
mov
xor
sub
pop
addb
pop
push
js
add
xor
jae
add
inc
add
mov
mov
or
mov
rep
mov
in
xor
xlat
inc
push
mov
ror
xor
shr
xor
es
sbb
xadd
or
outsl
in
sbb
or
add
add
add
push
push
inc
pop
call
fwait
insl
mov
or
push
and
adc
not
and
mov
testl
inc
jo
cmpsb
xor
add
add
xor
aam
aaa
fistpll
or
xchg
aam
fdivs
fisubl
out
adc
pop
fsubl
repnz
xchg
or
xor
fs
add
jnp
shr
repnz
push
mov
das
push
push
cs
sub
push
in
xor
in
rcll
xor
pop
dec
lock
in
daa
xor
in
push
lock
fs
add
fisubrs
fwait
sub
shr
add
push
xor
xchg
or
push
cs
arpl
and
dec
in
lock
inc
imul
and
mov
bound
push
inc
push
xor
bound
pop
xor
cwtl
dec
sub
fsub
loopne
nop
cmpsb
test
call
in
lock
int
add
cmp
pop
cmp
or
pop
repnz
pop
add
repnz
lods
and
cmp
mov
or
jo
push
mov
inc
add
pop
dec
xchg
decb
or
or
push
ljmp
pop
lock
xlat
inc
push
hlt
add
or
mull
xor
movsb
test
push
ror
inc
add
andb
dec
aam
pop
dec
sbb
movsb
fdivrl
mov
sbb
and
xor
or
cmp
and
jb
adc
push
int
fs
or
or
or
push
and
not
push
shrl
test
and
mov
call
loop
loopne
cwtl
add
rorb
cmp
xor
xor
sub
in
jb
aam
lods
inc
lcall
fmuls
imul
int
movsl
inc
aam
dec
inc
add
xor
scas
sub
orb
xchg
xor
xor
dec
or
pop
cmpsb
inc
lcall
or
adc
add
scas
push
cltd
and
nop
data16
nop
add
sbb
push
push
add
xchg
roll
or
or
les
or
xchg
fs
mov
enter
xchg
and
cs
or
fiadds
dec
scas
mov
outsb
and
js
mov
sub
cmp
cmp
push
adc
scas
orb
inc
mulb
mov
mov
dec
or
push
adc
sbb
add
sbb
dec
lods
pop
stc
sbb
push
and
jl
inc
xchg
add
js
nop
stc
rcrb
or
sub
filds
pop
inc
fiaddl
add
ret
xchg
add
lea
push
mov
or
adc
push
or
incl
rol
mov
or
dec
mov
js
jmp
in
cld
rorb
jnp
test
iret
jl
je
nop
or
and
adc
or
stos
inc
mov
cld
enter
cmp
js
cmp
xor
push
data16
sub
je
add
mov
pop
ss
dec
data16
or
mov
dec
imul
testl
or
es
push
or
mov
jb
xchg
add
addl
inc
sub
mov
loop
or
add
fstps
dec
jb
xchg
push
cld
push
sub
cmp
push
add
mov
aaa
sahf
sbbb
dec
and
dec
push
dec
mov
outsl
jnp
push
hlt
faddp
push
cmp
lods
in
mov
insb
push
cld
push
mov
sub
xchg
jae
xor
mov
mov
pusha
pop
loope
or
mov
inc
out
mov
and
mov
add
mov
add
dec
orb
add
dec
inc
sbb
adc
or
mov
out
xor
push
or
jns
xor
cmp
cmp
mov
and
or
cmp
sti
xorb
aam
bound
incb
mov
dec
test
lds
dec
imul
mov
add
subl
adc
inc
dec
push
cmp
xchg
sbb
sbb
jge
xchg
push
cmp
lds
or
fnstenv
movb
aam
inc
lock
add
and
or
in
mov
cmp
sbbb
jb
out
es
adc
or
pop
mov
addr16
and
lock
and
clc
sbb
ds
sub
adc
or
jae
fcmovnu
lahf
mov
jmp
push
dec
fisttpl
xor
les
sbb
sub
test
rcr
jbe
movsb
adc
fcmovnb
les
xchg
inc
mov
or
cmp
inc
mov
lock
out
add
cmp
or
sub
or
mov
add
mov
push
popa
stos
sub
loope
inc
and
add
gs
push
jmp
mov
cld
mov
rol
fisttpll
mov
adc
nop
inc
add
cmpsl
imul
jns
xchg
xchg
lock
cmpl
xchg
rol
popf
pop
push
loop
lahf
sub
xor
adc
test
loop
dec
add
lcall
fwait
test
mov
rcrl
cmp
xor
cmp
adc
add
dec
inc
ret
pop
pop
xchg
call
mov
sub
fsubs
mov
test
dec
mov
int3
add
dec
dec
push
sbb
into
out
pop
call
nop
arpl
mov
test
bound
lods
add
enter
and
rcll
push
inc
jae
sbbl
jle
outsl
push
adc
loopne
and
cwtl
sbbb
jmp
ljmp
test
mov
mov
pop
sbb
mov
lods
xchg
mov
mov
cmp
repz
mov
lds
int
adc
add
or
dec
ret
add
pusha
pusha
and
stos
xor
pop
dec
dec
jmp
mov
test
push
imul
sub
aaa
repnz
cs
add
push
stc
into
push
add
sub
push
xor
push
cli
xlat
inc
xchg
cs
in
add
adcb
or
add
dec
inc
jbe
push
mov
popa
or
cmp
xchg
rorb
jno
cmp
jne
sbb
call
iret
movsl
xlat
push
xorl
or
or
add
pusha
sbbb
jl
sub
andb
mov
or
stos
sub
sbb
mov
or
push
mov
ja
sbb
inc
sbb
repz
movsb
enter
test
bound
jns
sbb
or
adc
sbb
jmp
inc
cmp
push
psrlw
push
jl
test
lods
push
cmp
dec
dec
or
mov
xor
hlt
cmp
mov
push
sub
xor
cmp
add
push
fisttps
adc
sbbl
push
testb
push
popa
add
push
mov
inc
push
orb
cltd
es
sbb
dec
inc
cmp
rolb
fisubs
jo
push
jbe
in
ja
jbe
sub
test
push
lock
inc
lock
dec
push
push
aas
sbb
mov
test
mov
sbbl
rol
xchg
arpl
out
sarb
xchg
loope
pop
xchg
add
mov
sub
push
xchg
sub
adc
sbb
push
pop
and
das
je
ret
lock
out
add
out
xor
or
jle
shlb
aas
adc
mov
push
push
mov
fwait
adc
loopne
fsubr
push
dec
mov
lret
push
mov
test
push
mov
dec
or
and
iret
cmp
xchg
push
insl
or
mov
cmp
or
inc
test
nop
push
cmp
push
nop
and
sarb
pop
push
std
xor
stos
rolb
push
xchg
inc
movzbl
sar
fcoms
ret
shr
push
sub
add
and
pop
xor
adc
mov
call
movsb
es
inc
lcall
push
push
or
push
adc
loope
xchg
test
push
mov
enter
mov
or
push
xor
mov
ficompl
jns
mov
mov
test
jo
sbb
mov
pushf
xor
es
hlt
cld
and
rcll
jns
daa
adc
cmp
sbb
xor
push
mov
add
mov
daa
add
mov
sbb
dec
je
data16
or
nopl
pop
jnp
out
mov
dec
cwtl
cli
add
hlt
sub
mov
inc
jmp
jo
aad
out
dec
sub
sub
add
fstpt
push
xor
shlb
sub
inc
pusha
int3
insb
or
or
rcl
ljmp
mov
rcr
xor
daa
adcl
mov
inc
mov
jle
pop
xchg
push
xchg
dec
push
rolb
cwtl
xchg
add
out
je
or
imul
xor
pop
mov
jno
ret
inc
cmpb
and
js
mov
fs
je
xor
adc
add
add
sbb
pop
mov
jno
sbb
cld
jle
push
xchg
mov
and
and
getsec
mov
xchg
rolb
or
andb
inc
pop
leave
in
xor
push
enter
ret
pop
adc
sub
mov
mov
xor
lock
orb
mov
push
xchg
cmp
movsb
dec
and
fs
sbb
subb
into
fisubs
stos
add
enter
or
ficoml
fstp
jnp
or
or
mov
mov
vmovd
pop
jne
mov
icebp
rorb
nop
fsub
gs
jge
int3
pop
das
and
or
std
xchg
arpl
push
sbb
clc
mov
adcl
nop
adc
cmp
push
inc
lcall
lock
sbb
adc
and
lods
xchg
outsl
push
mov
mov
jbe
inc
mov
test
push
jp
popa
xchg
or
xchg
mov
cltd
adc
or
xor
add
inc
and
pop
pmuludq
dec
fs
and
or
pop
iretw
lock
xor
mov
orb
xlat
push
cld
repnz
dec
sarl
std
arpl
jae
xchg
pop
adc
adc
mov
addr16
add
push
adc
ret
ret
dec
enter
push
pop
cwtl
cmp
xchg
sub
adc
shlb
mov
test
incl
imul
jge
add
inc
rcl
stos
xor
add
add
or
pmaxsw
add
push
cmp
adc
iret
push
outsl
adc
sub
mov
cmp
mov
cwtl
push
mov
sbb
push
sbb
clc
jae
cmp
jl
lahf
push
mov
jae
dec
dec
dec
jg
sub
sub
shll
hlt
clc
sbb
xor
and
or
jns
add
insl
adc
mov
enter
in
popa
sbb
fld
jge
pop
add
loopne
lret
push
rorb
xor
push
xchg
dec
push
clc
sub
sahf
xchg
jbe
sbb
stos
adc
dec
cmp
xchg
jnp
adc
cmp
xchg
adc
or
sbb
ret
pop
and
sbb
and
adc
test
enter
adc
xchg
cmp
jmp
ret
xchg
jo
push
jge
xchg
ja
cmp
inc
fisttpll
test
add
dec
jbe
sbb
push
xchg
mov
ds
push
loopne
insb
gs
xchg
ja
fisubs
adc
pop
cltd
sub
xchg
cmp
movsl
insb
enter
sub
cmp
sbb
in
lahf
cmp
sub
xchg
xchg
add
sub
mov
pusha
push
adc
xchg
in
push
push
jo
pop
inc
dec
hlt
mov
loop
dec
outsb
cltd
mov
push
mov
in
mov
fimuls
rorl
inc
sub
fldcw
fisubrl
add
jno
pop
dec
pop
push
nop
pop
add
rclb
add
sub
les
and
imul
inc
sub
das
sub
adc
cmp
adc
mov
filds
sub
inc
xor
into
cmp
cltd
std
fsubrp
push
jge
mov
cmp
sbb
rolb
ficompl
xchg
and
sub
loopne
icebp
shll
inc
div
sbb
pop
cmp
xchg
and
sarb
pop
xchg
cmpsb
test
dec
mov
fildll
inc
or
je
cmp
jne
inc
inc
jmp
xor
jmp
enter
dec
jge
imul
gs
ja
pop
fdivr
adc
jmp
cmp
add
mov
rclb
mov
sub
cmpb
jbe
repnz
pop
xchg
and
mov
movsb
add
jb
leave
or
nop
add
ljmp
xchg
jmp
stc
cmp
std
and
lahf
inc
idivb
fstpt
popa
aad
push
jmp
imulb
sub
fadd
sub
or
neg
sarl
adcb
mov
xchg
mov
xor
inc
adc
adc
add
rcrb
negl
adc
lock
pop
push
cs
cs
dec
jge
inc
mov
jo
mov
cmp
push
push
inc
loopne
push
add
sbbb
or
mov
inc
jbe
sarb
or
fs
andb
sti
mov
out
test
inc
fcomi
jmp
aam
xchg
or
outsl
xor
or
inc
sbb
pusha
cltd
inc
adc
sbb
cmpsl
jne
pop
dec
adc
xchg
es
pusha
adc
lret
movb
and
sbb
ss
mov
mov
rcrl
xor
push
addr16
add
inc
or
mov
les
rorb
or
push
pusha
movl
inc
xor
push
mov
movaps
imul
dec
fistpll
nop
sbb
add
ret
pop
ud2
mov
xchg
sub
xchg
icebp
cltd
aas
dec
and
dec
cld
xor
clc
add
cmp
pop
movl
inc
fildl
cmp
test
mov
js
call
sbb
rorl
inc
mov
add
lret
xchg
sub
add
faddl
in
mov
push
cld
and
daa
cmp
pop
pop
cli
push
into
adc
mov
fisttpl
inc
and
adc
mov
or
adc
fists
jp
dec
insl
and
cmc
shrl
cwtl
jecxz
mov
mov
pop
cmp
sub
sub
or
je
push
xchg
pushf
rclb
sbb
and
mov
sub
and
pop
adc
in
mov
std
jmp
pop
or
sbb
sbb
stos
rclb
pop
mov
jge
push
fidivrs
call
push
mov
call
adc
sarl
push
push
mov
rcll
xor
std
or
inc
push
pop
and
and
pop
sub
sub
or
sbb
push
sbb
and
sbb
addr16
dec
fdivrl
out
or
shrb
ror
and
pop
push
aas
xor
decl
or
xor
into
or
mov
xor
push
inc
out
shlb
cmc
cmp
and
icebp
add
inc
sbb
pusha
push
push
add
pop
pop
or
and
sub
sahf
add
adc
popf
stos
test
and
lahf
adc
mov
clc
add
sbb
fmul
mov
mov
add
fsubrl
add
add
psadbw
lock
dec
pop
fstl
push
mov
stos
lea
fsubs
dec
addb
xchg
mov
test
jl
lea
es
aaa
dec
xadd
push
jl
or
test
dec
test
inc
push
inc
ret
push
xlat
cwtl
faddl
movsl
sbb
lret
sub
enter
outsb
push
mov
push
lods
push
push
adc
lock
aaa
fcomps
inc
in
scas
mov
call
dec
inc
adc
addr16
or
das
inc
add
or
fcomps
addl
jbe
add
inc
shlb
ds
pop
das
sub
or
lea
dec
add
or
add
and
and
or
rcrb
or
loopne
adc
jo
mov
mov
pusha
les
mov
adc
push
out
mov
mov
and
jg
push
sub
add
or
pop
test
jno
or
mov
adc
shld
cmpsl
dec
inc
test
lds
in
bndldx
enter
mov
or
push
adc
int3
ret
push
xchg
xchg
jl
ret
jg
mov
push
inc
xchg
add
or
xor
std
and
scas
inc
lea
shrb
fimull
dec
mov
in
mov
inc
jecxz
inc
sub
enter
xchg
dec
push
neg
aam
or
add
ja
test
inc
xchg
mov
adc
mov
loopne
and
pop
or
push
push
dec
negl
or
ret
dec
xchg
jns
dec
daa
push
fsubrp
ss
jmp
push
jecxz
dec
push
bound
or
push
decl
and
outsb
lret
push
roll
stos
pop
pop
cmp
jg
int
add
popf
mov
or
ja
dec
lock
out
and
popa
rolb
add
fisubrs
and
sub
xor
mov
lcall
jb
push
inc
lods
cmp
les
push
fwait
cs
fdivs
push
xchg
dec
enter
push
push
or
ds
mov
adc
pop
into
cwtl
lock
into
cli
jg
sarb
hlt
lret
mov
nop
dec
adc
push
or
int
xor
pop
in
hlt
push
xchg
cli
stos
inc
inc
xor
ljmp
mov
push
or
insl
jo
sbbl
dec
and
cmpl
adc
lock
iret
or
loopne
or
xchg
lods
rorl
pop
push
jecxz
jmp
pop
adc
or
add
ret
inc
adc
sbb
insb
sub
cmpb
jg
and
mov
or
push
pop
xor
cmp
pop
clc
addl
lock
dec
adc
xor
shl
or
or
push
lret
and
enter
xor
cmp
add
int3
lea
inc
dec
sub
pop
lock
rclb
lock
sbb
mov
add
xor
add
and
lcall
add
xchg
jmp
xchg
push
fsubrs
push
in
clc
je
jnp
sarb
sbb
mov
xor
and
jle
and
or
fisttps
mov
movsb
imul
sub
xchg
les
dec
into
adc
sahf
inc
stos
or
add
and
or
xchg
mov
popf
dec
and
mov
or
push
lods
xchg
mov
shlb
cwtl
daa
push
inc
dec
popl
push
xchg
int
or
ss
add
push
and
or
cmp
inc
and
shlb
popf
xor
or
in
into
test
dec
push
push
lea
cmpsl
into
test
add
inc
xor
xlat
cmp
sub
popf
xor
mov
push
lea
out
mov
mov
addl
push
aam
fimull
lods
inc
push
js
lods
xlat
call
rorl
sub
add
cmp
std
and
movzbl
push
add
les
push
inc
pop
sti
mov
mov
es
adc
outsb
arpl
or
inc
cmp
testb
mov
orl
push
jnp
dec
mov
sbb
mov
push
jg
dec
arpl
dec
and
and
lcall
sbb
loopne
arpl
fisubrl
popf
dec
jne
negl
clc
movsb
rolb
in
jnp
rorl
into
xlat
mov
xor
mov
shr
mov
jbe
add
pop
or
aaa
jmp
mov
add
test
or
je
ret
xchg
ja
sub
and
pop
mov
push
adc
xchg
sub
cli
jp
and
fldt
rorb
push
add
inc
cs
cmp
cmpsl
inc
dec
sub
inc
aaa
les
dec
cmpsl
pusha
push
popf
in
lods
aas
cmp
std
jg
cmp
sbb
mov
stos
pop
adc
dec
add
ja
test
push
and
lods
movsb
notb
sbb
sub
sub
scas
leave
cmpsb
xor
mov
lock
shlb
push
mov
mov
lret
cmpsb
pushf
in
or
mov
and
mov
sbb
sahf
adc
add
add
xchg
jo
and
cmp
pop
and
dec
jl
and
enter
jne
call
adc
jmp
adc
mov
jne
in
dec
and
pushf
test
mov
into
sbb
jns
popa
mov
es
sti
sbb
push
pusha
xchg
xchg
cmpsl
add
in
cmp
ja
sub
pop
loopne
push
inc
outsb
jo
ret
loopne
or
or
or
pop
shll
cld
add
fdivrl
shlb
and
stos
js
xchg
popa
fdivrl
pusha
or
lock
pop
or
sub
sbb
dec
jae
xor
sbb
sub
push
xchg
sahf
inc
rorb
add
adcl
jg
orb
mov
dec
cmp
push
fwait
test
int
jnp
pinsrw
jg
lea
mov
cmp
dec
cwtl
push
push
pop
icebp
mov
or
push
andl
and
test
or
pop
pop
sbb
pop
js
cmp
adc
pusha
loop
js
cmp
in
cmpsl
ljmp
push
out
jno
pop
andb
sub
or
nopl
loopne
mov
imul
rcll
add
push
sub
mov
rcr
xchg
push
inc
push
mov
aad
neg
adc
fcom
mov
loope
jbe
nop
add
adc
inc
lea
mov
add
jnp
jbe
xor
sbb
rclb
inc
inc
xchg
test
loope
shll
je
out
dec
mov
inc
movsl
add
adcb
dec
sbb
enter
add
pop
daa
push
fdiv
cmp
sbb
sahf
lahf
js
sbbl
testb
push
dec
loopne
mov
mov
push
or
add
push
and
cmp
mov
jb
pop
dec
push
imul
mov
test
aad
and
cmp
jb
sub
je
icebp
cwtl
mov
or
mov
adc
add
nop
testl
cli
dec
stos
mov
push
xor
out
dec
idivb
cmp
pop
and
pop
or
sub
ss
nop
mov
dec
sub
adc
movsl
std
or
and
xor
aad
in
ss
aaa
jl
pushf
cmpsl
je
movzwl
or
mov
popa
mov
xor
gs
push
les
enter
rorb
jmp
or
pusha
test
jg
enter
les
sbb
add
dec
jle
scas
cmp
cmp
mov
pushf
xchg
les
pop
out
test
push
dec
jmp
mov
sub
hlt
xchg
fs
sub
xor
mov
push
pop
adc
jl
testb
push
std
pop
out
cltd
mov
inc
inc
push
cmp
mov
dec
call
push
call
xchg
clc
mov
sub
xor
add
push
sarb
stc
scas
sbb
insb
imul
fsubs
insl
test
inc
sbb
int3
mov
jns
mov
leave
daa
subl
sub
mov
mov
loope
add
sub
and
adc
shrl
sub
push
mov
xchg
push
mov
xor
aaa
sub
or
nop
inc
lcall
add
push
jne
out
xchg
pop
pop
inc
subl
push
mov
sub
fwait
jecxz
nop
lret
adc
mov
push
leave
orb
push
or
fidivl
int3
push
shrb
sahf
sub
xor
je
or
mov
mov
es
loop
cli
xor
jge
cmp
mov
lods
fsubs
js
mov
xlat
cmp
loope
pop
or
inc
popa
out
dec
dec
adc
inc
pop
pusha
repnz
ljmp
dec
insl
pop
jno
shlb
bound
adc
jl
push
adc
es
cmc
mov
adc
sub
xor
add
xchg
addl
inc
and
or
test
jmp
test
je
inc
test
les
add
stc
push
mov
pop
mov
cli
pop
and
popa
fdivl
gs
adc
xchg
add
clc
add
cld
ffreep
stos
adc
dec
xchg
dec
xor
add
aam
fsubr
adc
lods
sbb
adc
and
or
out
shrb
dec
inc
cmp
mov
jl
jne
mov
lahf
add
xchg
in
pushf
aam
xor
cmp
push
or
call
jno
mov
inc
push
add
bound
pop
push
loope
sub
adc
add
or
je
pop
cmp
pop
pop
das
icebp
inc
sub
mov
dec
xorl
jmp
jnp
add
in
js
mov
adc
lea
nop
jmp
or
roll
js
dec
pop
jb
mov
and
lahf
sub
sub
or
or
push
or
orb
outsb
enter
add
jmp
inc
hlt
adc
dec
pop
adc
or
adc
jg
orb
mov
xor
inc
jg
jne
mov
sub
and
stos
ja
push
mov
add
mov
xor
mov
mov
lods
lea
or
xchg
push
mov
out
cmpl
adc
add
clc
xlat
lods
out
mov
or
add
jno
mov
mov
fstpt
jno
pop
test
push
loope
add
add
inc
and
lea
dec
cmpsl
jo
fists
pushf
ja
inc
scas
test
push
mov
mov
pop
xchg
out
cld
lret
das
sbb
adc
sub
jecxz
xor
mov
push
inc
push
or
cmp
test
rorb
in
nop
fildl
shl
and
push
mov
adc
rol
and
xchg
xor
adc
sub
sbb
dec
xor
dec
jns
adc
popa
add
mov
pusha
or
xor
js
nop
sub
push
and
sahf
dec
push
scas
sbbb
and
hlt
popa
fdivs
pop
add
outsb
rcll
push
popf
adc
call
das
sbb
mov
jno
mov
gs
sub
push
sbb
lock
dec
subb
xchg
xchg
cmpsb
ret
insb
or
notl
jg
out
stos
sti
xchg
jno
hlt
gs
mov
out
cmp
push
mov
adc
xchg
and
add
xchg
cwtl
jnp
push
das
mov
mov
push
inc
adc
xchg
addl
or
sbb
bound
sub
jns
add
loope
sbb
or
mov
push
lock
ret
pop
dec
hlt
push
push
push
mov
cli
inc
pop
mov
gs
add
inc
bound
shlb
or
test
shlb
inc
or
leave
and
cmp
insl
or
mov
inc
es
adc
mov
int
dec
sbb
adcb
mov
mov
test
lock
inc
rolb
lahf
adc
ficompl
pop
je
les
jb
push
cmp
sub
lods
add
push
jno
mov
je
test
push
frstor
adc
adc
sub
mov
xor
push
or
xchg
xor
sub
call
add
or
stos
icebp
add
xchg
adc
mov
int
js
movsb
sub
add
jl
cs
push
add
adc
mov
jns
add
dec
mov
fwait
addb
or
adc
pop
adc
or
or
mov
pop
mov
add
sub
inc
das
xchg
xor
inc
adc
push
sbb
test
repnz
gs
add
mov
popa
and
mov
push
adc
mov
adc
inc
sub
jo
xor
data16
bound
pop
pop
enter
dec
not
inc
test
pop
in
push
int
loope
dec
push
push
push
bound
and
add
pop
int3
rolb
jle
jecxz
enter
inc
pop
lret
rclb
pop
sub
test
call
mov
call
insb
movsl
mov
test
sbb
or
fisubrs
adc
inc
sbb
cmpsb
inc
clc
xorl
push
popa
es
xor
inc
cmp
jg
nop
xchg
js
dec
dec
add
cli
and
out
daa
cmp
or
adc
inc
fdivrs
inc
mov
or
and
push
push
mov
add
pop
push
push
mov
sub
push
add
insb
push
lahf
and
jecxz
arpl
mov
dec
push
fs
add
dec
leave
and
pop
sbb
lret
or
mov
sbb
push
push
push
push
cmp
les
pushf
cmpsb
mov
inc
dec
sahf
add
mull
fwait
lods
xor
popa
add
dec
jnp
dec
cwtl
mov
push
push
add
imul
cmp
push
je
roll
or
and
jns
or
jo
sahf
pop
sub
adc
and
or
scas
jbe
cwtl
mov
jecxz
ljmp
seto
xchg
push
dec
rcrb
push
push
imul
or
outsl
mov
cld
jmp
and
loopne
jbe
cmp
loope
jmp
cmpsl
add
or
xorb
push
sbb
mov
jb
sbb
xor
adc
out
or
jne
sti
jge
arpl
test
dec
and
xor
pop
inc
clc
inc
out
sbb
xchg
xor
xor
mov
insl
cvtps2pd
adc
adc
or
test
shrb
addr16
pop
pop
adcb
xor
fisttpll
add
out
mov
int3
inc
push
inc
sub
push
adc
test
xor
xor
xor
xor
out
cmp
inc
repnz
pushf
xchg
xor
pop
out
add
loope
cmp
rcll
lods
ljmp
adc
mov
mov
stos
sub
jns
aam
and
push
in
sbb
xor
sbb
cmp
push
pop
push
pop
pop
out
push
pop
cmp
xor
xor
adc
adc
or
and
add
mov
mov
and
jmp
lock
cwtl
dec
push
and
js
inc
sbb
sbb
mov
bound
jno
inc
fs
mov
addr16
sbb
jns
pop
pop
or
lret
cmp
push
xchg
das
sbb
sbb
js
inc
and
adc
sbb
sub
push
and
hlt
ret
xor
dec
push
push
pop
mov
sbb
xchg
or
xor
inc
add
xchg
mov
sub
sub
call
push
adc
add
loopne
fildl
inc
adc
and
push
das
gs
add
icebp
jns
dec
xor
repz
and
fildll
inc
inc
add
in
pop
mov
mov
push
cwtl
cld
sub
arpl
pop
pop
cmpsl
push
jne
ffree
stos
pop
adc
add
leave
rorb
mov
push
push
repnz
inc
es
pop
cmpsb
fcomp
mov
inc
xor
xchg
or
loope
push
arpl
scas
sub
and
dec
pop
push
or
in
popf
sti
adc
mov
sub
out
mov
lret
pop
xchg
aas
pop
enter
push
mov
adc
cmp
pusha
stos
sbb
jg
jno
jb
sub
pusha
leave
shl
add
xlat
adc
jge
jmp
lock
push
push
mov
addb
data16
adc
dec
mov
add
push
into
push
mov
inc
xchg
idivb
xor
xor
or
bnd
loopne
sub
jmp
inc
in
dec
clc
push
push
and
xor
stc
push
push
adc
repnz
ret
ret
lods
in
add
mov
xorb
or
inc
cmp
pop
aaa
adc
jmp
cld
nop
xchg
or
inc
push
inc
inc
loope
sub
jl
add
and
repnz
push
xor
add
loopne
pop
mov
add
popa
aas
loop
imul
pop
cs
push
inc
xor
jo
inc
fldcw
xorb
add
xchg
faddl
int3
addr16
data16
jno
testl
inc
aam
pop
adc
js
dec
fistl
fs
mov
push
loope
and
xor
lret
adc
icebp
add
pushf
pop
xchg
pop
adc
or
pop
aad
and
xchg
pop
sbb
and
and
pop
cmp
cmpb
pop
inc
mov
mov
icebp
adc
jno
pop
dec
push
push
mov
dec
mov
addl
and
test
mov
dec
imul
add
lock
lea
fwait
dec
movsb
jle
fimull
inc
push
aas
hlt
in
dec
les
rolb
les
call
test
inc
ret
and
adc
aam
leave
jo
in
and
mov
mov
jb
push
cltd
xlat
shrb
jne
xlat
cwtl
mov
pop
subl
dec
xchg
sbb
inc
repnz
mov
xchg
xchg
inc
push
jmp
dec
jmp
adc
pop
add
push
xchg
or
dec
inc
sbb
pop
sub
andl
call
sub
shlb
ds
xchg
or
popa
pop
mov
inc
test
cs
mov
mov
add
stos
sub
sub
pop
jp
cmp
sbb
addb
ss
jbe
jmp
pop
xor
ret
push
rolb
pop
adc
ret
loope
lcall
xchg
inc
jge
or
mov
dec
ja
dec
movsl
fwait
insb
lea
push
insb
insl
push
mov
mov
ret
or
pusha
pop
sbb
push
pop
adc
fiadds
cmp
lea
addr16
sub
daa
in
pusha
cmp
pop
pop
lods
mov
inc
adc
add
adcl
js
push
mov
daa
hlt
pop
push
pop
nop
sbb
in
pop
nop
loopne
adc
cs
add
aas
popa
loopne
jp
xlat
xchg
or
push
aam
mov
and
test
mov
les
stos
mov
andl
or
ffreep
lds
addb
std
lret
and
pop
inc
adc
or
mov
sbb
push
imul
push
nop
add
mov
aas
push
fcoms
inc
fimuls
rcrb
jb
movsb
add
mov
cmp
mov
push
pushf
add
dec
inc
repnz
xchg
dec
sub
dec
inc
mov
sbb
shlb
lret
mov
mov
fcoml
stc
push
fs
loop
xchg
insb
xchg
xor
xchg
sub
js,pn
jbe
inc
and
sbb
mov
in
push
push
push
cmp
imul
pop
fndisi(8087
adc
jns
xor
iret
adc
sbb
hlt
mov
hlt
out
mov
cli
add
push
call
rclb
fisubrs
cmp
xor
or
jnp
pop
js
push
add
inc
push
dec
pop
add
jns
push
nop
inc
cs
and
inc
popa
add
jne
and
lods
cmp
add
xor
imul
xlat
stc
or
rclb
jne
daa
or
arpl
or
push
sbb
aad
or
call
cmpl
gs
call
pop
fldlg2
xchg
addb
or
inc
in
leave
jecxz
data16
lock
jg
or
push
inc
repz
mov
popf
mov
add
adc
xlat
shl
inc
cmpb
dec
or
dec
mov
jg
fidivrl
push
push
sub
add
ret
test
push
int
decl
add
sub
sti
sti
and
dec
sar
add
cmp
sbb
jge
mov
cmp
fwait
fs
or
pop
pop
inc
imul
orb
sbb
xor
pop
mov
push
insl
movsb
dec
xor
out
or
jo
iret
sub
push
cmp
push
jne
push
lods
mov
add
sbbb
adc
fildl
push
cmp
pop
mov
movsb
pop
loop
push
dec
test
and
lods
repnz
xor
dec
clc
cmp
mov
mov
xchg
out
dec
xchg
push
mov
add
movsl
xor
mov
sahf
mov
rol
sti
xor
leave
in
fmul
repnz
sub
outsb
xchg
cs
lock
aam
add
xor
jge
movsb
insb
cld
sub
imul
cmp
push
ret
push
push
mov
xrelease
pusha
jp
mov
mov
mov
sahf
mov
es
mov
sub
pop
movsl
mov
movsb
fimull
test
sub
mov
jbe
cmc
arpl
cmp
arpl
imul
cmpsl
add
inc
inc
jle
pop
popa
movb
push
sbb
dec
test
jg
lret
dec
xchg
sbb
sbb
daa
mov
jle
aaa
test
push
cmpl
ret
pop
push
add
xchg
mov
dec
mov
mov
pop
cli
dec
shlb
ja
add
dec
sarb
mov
call
push
pop
cmpl
pop
adc
popa
pop
mov
or
xor
mov
mov
mov
movsb
daa
add
mov
movb
push
xor
cmpb
bound
inc
js
pop
sub
pop
roll
sub
xchg
xchg
addr16
out
fildl
cmc
add
add
je
cmc
dec
jl
xor
aam
popf
sub
and
hlt
rol
xchg
dec
test
jecxz
call
lahf
punpcklwd
clc
or
leave
rorl
imulb
push
lods
aad
pop
lea
add
mov
add
lret
mov
push
and
add
orb
xor
add
adc
adc
xor
jle
sti
loop
aad
fiadds
lahf
mov
aaa
and
test
dec
dec
pop
sub
inc
or
push
add
mov
pushf
add
in
push
cmp
scas
inc
push
push
push
dec
lods
jnp
movb
adc
shl
adcl
sbb
push
rclb
jne
and
xchg
movsb
adc
sahf
mov
in
in
daa
mov
lock
push
sbb
add
popf
dec
dec
dec
repnz
sbb
inc
mov
sub
add
in
cltd
sbb
xchg
lahf
out
xchg
adc
mov
sar
xchg
daa
xchg
xchg
pushf
jmp
les
mov
gs
add
mov
sub
js
jl
test
mov
ret
add
pop
mov
lahf
pop
push
add
cltd
fadds
push
push
jae
pop
push
inc
dec
jne
push
and
or
mov
mov
push
fdivs
cmp
sub
scas
push
dec
gs
lds
faddl
or
mov
aam
jno
cmp
push
pop
xor
sub
fldenv
xchg
push
sbb
lcall
push
cld
mov
pop
add
xchg
ret
adc
or
xchg
pop
or
scas
adc
jns
push
arpl
pop
push
ja
cmp
xchg
aas
inc
ret
mov
mov
movb
jle
mov
inc
or
dec
in
sub
or
xor
jne
imul
movsl
mov
jle
cmp
push
fwait
jb
cmpsl
xchg
mov
fiaddl
mov
cs
or
push
paddd
jnp
sti
jp
mov
cmpsl
and
jo
aam
or
jo
or
inc
mov
cmp
cmc
mov
or
cmp
push
mov
mov
inc
stos
lods
jnp
xor
fbstp
adc
dec
sbb
and
add
rcll
roll
pop
ud2
ret
les
in
lea
pop
sbb
mov
dec
sti
jno
push
rorb
and
xor
pop
xor
pop
aad
cmp
test
add
test
cmp
sbb
lods
xor
inc
fs
movsl
xchg
dec
mov
pop
in
mov
mov
jne
int3
adc
jne
stos
pop
dec
dec
nop
push
rcrl
dec
or
pop
fs
loop
mov
movd
inc
mov
xchg
lds
adc
add
cmp
mov
call
roll
mov
adc
pop
mov
mov
negl
jae
test
jae
ds
push
cmp
jge
add
sbb
push
inc
or
clc
divl
push
cmp
or
sbb
loop
mov
out
lods
sbb
pop
pop
jns
ss
push
jmp
push
aam
fcmovnbe
loopne
gs
sub
jbe
int3
shrb
lret
mov
loopne
add
adc
pusha
mov
push
pop
pop
loopne
arpl
push
or
enter
int
add
mov
inc
adc
push
push
inc
add
xor
test
cltd
shrl
adc
pushf
push
movsb
mov
xchg
das
test
ret
test
mov
jbe
xchg
out
subl
and
inc
imul
out
jns
pop
pop
lods
fimuls
cmp
in
mov
push
push
jns
dec
dec
ja
ja
pop
push
xchg
lahf
aad
pop
test
xchg
lea
push
jne
mov
mov
cwtl
cwtl
add
imul
in
or
fcmovb
adc
cmp
imul
ret
and
enter
jecxz
loop
mov
imul
scas
lock
push
call
cmpsl
js
imul
adc
mov
jno
mov
sahf
imul
scas
aam
insl
pop
test
arpl
aam
mov
fs
jae
or
adc
mov
test
xchg
inc
cli
rorb
cmp
and
add
dec
out
arpl
add
and
test
jge
int3
or
roll
and
pop
xchg
inc
movsb
push
jno
inc
xor
jae
fsubs
in
mov
in
xchg
pop
es
rol
pushf
insb
fisubs
ficoms
xchg
cltd
es
fbstp
inc
sbb
xchg
cmpsb
jbe
push
add
or
pop
loopne
bound
jne
xchg
ret
mov
mov
cmpsl
loope
pop
mov
into
mov
jo
adc
dec
cmpb
ja
add
fdivrl
push
or
jo
sub
aam
mov
sbb
lock
jmp
or
daa
shrb
mov
out
adc
push
pop
out
stc
lock
mov
mov
mov
xor
xor
pop
or
inc
mov
jmp
fdivs
or
loope
jo
push
add
jmp
push
add
scas
pop
add
cltd
call
xor
jb
push
mull
sub
pop
enter
add
mov
or
add
lahf
pop
cmp
stos
jge
pop
out
loopne
add
mov
push
push
imul
mov
add
mov
pop
inc
dec
loope
jle
subb
push
xor
jne
xor
mov
xor
cmp
stc
addb
mov
clc
or
mov
sub
sub
shlb
push
mov
cmp
out
push
pusha
jne
lea
in
sub
and
cld
lock
leave
push
nop
push
and
mov
bound
adc
dec
sbb
inc
inc
dec
nop
dec
push
xchg
push
inc
adc
mov
loope
push
xchg
sbb
lcall
pop
mov
test
xorb
jne
mov
aad
push
push
add
or
and
cmpsl
fs
lahf
pop
divps
icebp
add
dec
pushl
inc
mov
mov
outsl
je
jo
cli
aaa
int3
sbb
inc
mov
out
aam
cmp
scas
sbb
loopne
jl
add
gs
inc
imul
inc
xchg
xor
and
and
inc
or
push
iret
push
aas
add
aam
xor
test
mov
mov
xor
add
xchg
nop
sbb
lods
add
push
add
xchg
mov
or
jne
add
sbb
jne
pop
fdivl
lock
mov
in
xor
push
inc
xor
push
aad
psrld
fnstcw
in
iret
nop
jmp
fstpt
fsts
lret
dec
push
adc
popa
sub
cmp
ret
das
es
cmp
lcall
sub
xor
xchg
sbb
inc
mov
sbb
jle
fldt
nop
je
or
je
ret
popa
push
rolb
ja
pop
sub
or
jle
or
xor
mov
dec
xor
inc
mov
popa
lret
mov
adc
nop
add
mov
add
and
jge
mov
or
add
mov
mov
stos
sub
jne
insb
add
insl
je
and
mov
scas
insl
or
int
cmp
fistps
mov
xor
aaa
insl
xchg
add
mov
inc
mov
fidivrl
inc
sub
mov
cmp
movb
cld
lock
add
add
stos
dec
lret
mov
mov
jne
dec
leave
fldl
mov
inc
add
add
movsl
mov
or
pop
insb
ljmp
fstpt
incb
add
add
mov
mov
xor
mov
jae
out
add
das
mov
dec
rorb
jl
ret
push
repnz
daa
push
dec
testb
sbb
cmp
pushf
mov
stos
sub
outsb
add
stos
xchg
or
cmp
mov
or
or
testb
cmp
fadd
lahf
lods
fdivp
pop
jmp
xchg
stos
mov
in
les
idivb
pop
loop
jp
add
out
scas
je
or
pop
movsb
outsl
out
dec
incb
mov
daa
aas
adc
mov
jmp
std
pop
mov
mov
rolb
leave
add
ljmp
mov
shr
sti
insl
jae
inc
shl
loope
xor
mov
adc
add
push
ret
pop
in
pop
in
data16
loopne
inc
adc
add
add
fdivs
shll
jmp
lock
into
mov
jge
mov
mov
cmp
push
pop
les
call
push
dec
nop
mov
jbe
jns
jmp
fwait
mov
add
mov
push
rorl
sarb
fimull
pop
jo
shl
dec
jmp
cmovbe
rorb
pop
push
rorb
cmp
out
idivb
pop
out
mov
add
inc
sub
sti
sub
add
add
or
lret
sub
in
stc
sbb
adc
xor
jg
mov
lea
pop
push
xor
sbb
add
mov
aad
in
jp
fdivrs
stc
xor
add
xchg
stos
add
or
pop
or
add
push
dec
adc
and
imul
cmp
mov
orb
add
jno
mulb
add
js
rcll
xchg
mov
movsb
daa
fnstsw
lds
out
xchg
xor
aas
pop
jle
les
les
icebp
cmp
and
cltd
or
ds
inc
inc
mov
jle
add
pop
jnp
and
add
dec
dec
dec
call
xor
stos
xchg
cltd
inc
add
jae
or
lock
pop
jne
cs
jg
repz
mov
push
add
sub
add
cmc
repz
push
xor
pop
add
insl
mov
pop
loopne
jmp
sbb
push
hlt
dec
enter
incl
mov
push
or
adc
mov
cwtl
outsb
cmp
jg
and
rorl
test
add
jle
icebp
mov
cmc
lods
xor
xchg
pusha
add
out
or
inc
mov
adc
sti
xchg
out
std
or
cmp
in
addb
xor
fdivl
cltd
xchg
mov
mov
add
sbb
inc
push
and
into
lret
jge
inc
stos
loope
push
incb
out
mov
ss
adc
inc
adc
or
test
jl
mov
je
xor
pop
shrb
andb
lcall
add
arpl
lret
loope
xor
sub
ret
dec
adc
mov
xor
inc
icebp
lcall
add
mov
insb
inc
test
movsl
je
movb
cmp
add
or
and
adc
add
inc
mov
lods
xor
jg
iret
mov
lea
sub
or
lcall
jp
inc
loopne
inc
mov
add
mov
shll
pushf
add
xorb
add
pop
in
add
or
in
adc
add
nop
mov
mov
cltd
lcall
leave
test
mov
pop
xlat
cs
sbb
movb
int3
mov
add
inc
dec
or
loope
ss
test
add
imul
pop
push
test
jo
push
test
frstor
adc
fldl
stc
aas
enter
push
push
sbbl
faddl
mov
sbb
aaa
add
and
inc
jae
lret
lds
and
and
and
ds
sub
in
test
lods
shll
add
sarb
ret
fisttps
pusha
jecxz
push
nop
sbb
outsb
adc
das
das
icebp
addl
into
dec
gs
aas
stos
stc
add
cmpb
jne
cmp
or
pop
mov
pop
mov
adc
movb
push
imul
add
and
mov
test
mov
insb
jl
or
sub
or
sbb
cs
dec
mov
int
inc
sub
mov
and
rcrl
sbb
and
push
outsl
repnz
mov
clc
pop
adc
pop
ret
xorb
jne
pusha
pop
lret
inc
nop
aas
push
and
jno
scas
sub
fisubrs
add
js
jo
hlt
cmp
jl
cmp
jle
xor
cwtl
lods
push
xor
mov
call
arpl
xor
jo
lcall
mov
mov
repz
int
test
lahf
inc
sub
or
pop
movsb
xchg
or
clc
add
ja
mov
jmp
mov
and
test
out
or
mov
add
je
pop
lea
es
sbb
insl
popf
jmp
addb
adc
mov
sbb
pop
pop
test
lds
add
dec
cmp
add
jecxz
std
xor
repnz
rorb
mov
bound
jno
dec
jge
je
dec
xchg
xor
inc
add
cld
push
add
inc
ret
and
adcb
inc
sahf
pusha
lods
loop
cld
pop
movb
mov
lcall
sbb
add
jb
sbb
mov
fwait
js
or
out
add
out
mov
mov
pop
push
addl
es
incl
inc
cmp
sub
movsb
repnz
adc
je
add
sbb
pop
stc
or
in
daa
test
pop
sbb
pusha
jl
adc
jae
lds
or
mov
push
loope
adc
imul
movsb
add
cmpsb
jb
sbb
sbb
add
mov
and
loope
or
je
mov
icebp
jp
fmul
lea
pop
pop
mov
xchg
push
shlb
xor
mov
cmp
pop
movsl
mov
pusha
mov
sbb
incl
xor
mov
aam
dec
push
je
push
cmp
mov
js
into
or
add
lret
add
shrb
mov
lds
xor
orl
bound
push
in
ja
mov
mov
cmp
lea
mov
nop
push
std
jle
jg
inc
dec
outsb
jg
or
and
lea
addl
or
jno
roll
push
inc
or
sbb
mov
xor
push
sub
sub
ja
mov
mov
push
push
jmp
sub
cmpsl
dec
cmp
loop
cmp
mov
or
lcall
pop
mov
push
push
sbb
dec
movsl
stos
push
clc
mov
mov
fldcw
push
xor
test
inc
les
push
xlat
loope
in
jne
mov
xor
adc
lea
aas
push
pop
dec
jns
or
sbb
or
ljmp
movsb
fs
pop
push
mov
cli
sbb
add
jl
dec
movsb
out
sti
adc
sub
dec
mov
loope
push
pop
push
pop
ds
cmp
jl
int
cmp
pop
outsb
je
cmp
jge
sbb
and
pop
cmp
sti
in
sbb
fwait
sti
xchg
sti
test
leave
xchg
add
sti
outsl
sti
addr16
cmp
xor
ljmp
or
push
aam
pop
push
data16
adc
dec
das
sub
mov
movsb
sbb
and
sbb
mov
sbb
aaa
dec
ja
in
fldenv
aas
and
pop
cmp
sub
aas
dec
xor
lods
dec
push
cmp
xlat
inc
mov
dec
aas
dec
dec
mov
pop
pop
and
dec
mov
lods
and
and
push
jo
lret
je
js
andb
nop
movsb
nop
stos
xor
jae
adc
inc
cmp
adcl
fdivrs
mov
or
cmp
inc
outsl
mov
dec
push
cmp
mov
or
jo
mov
xlat
push
cmpsb
sbb
pusha
or
rcrl
sbb
push
xlat
jns
mov
pop
mov
into
loopne
jmp
inc
mov
push
fnsave
push
jo
push
adc
aad
or
iret
ud0
lahf
xchg
icebp
xor
and
inc
adcl
push
dec
sbb
outsb
sbbl
pop
shrl
add
stc
push
mov
fcoms
jae
movsl
xor
add
inc
xor
enter
popf
rcr
add
or
sub
fadds
int
lds
mov
sbb
dec
dec
js
adc
jo
or
xor
addr16
nop
adc
push
xor
jo
xor
filds
pop
faddl
aas
add
dec
leave
pop
dec
cs
or
sub
sbbb
adc
pop
xor
pop
push
add
incl
adc
and
sbb
xchg
ss
addb
or
cli
fnstsw
frstor
jns
loop
into
mov
jae
test
shl
jo
cltd
rclb
dec
pop
xor
dec
push
loopne
xor
fwait
xor
adc
lods
icebp
lahf
xchg
lret
xor
cmp
add
lods
hlt
xchg
stc
mov
movb
pop
push
sbb
jnp
jnp
sub
add
aaa
cmp
es
jne
push
jp
scas
push
sbb
popa
adc
hlt
push
and
lods
add
or
mov
push
push
or
stos
pusha
arpl
push
sahf
mov
inc
cmp
test
pop
push
daa
lods
dec
pop
std
sub
data16
je
add
pslld
shl
pop
add
push
adc
pop
or
mov
dec
lods
dec
or
in
jno
push
sbb
in
in
add
dec
enter
les
jp
adc
dec
dec
adc
je
add
add
adc
jns
pop
sbbb
dec
push
jecxz
mov
push
ret
jno
mov
jo
xor
sub
bound
sti
in
dec
add
inc
push
cmp
ja
push
pushf
pop
dec
cld
add
push
push
push
push
fwait
sbb
pop
mov
and
jb,pn
or
xchg
movsl
xchg
daa
call
add
sti
shlb
dec
cs
mov
mov
add
jecxz
mov
or
stc
shrl
fdivl
and
call
enter
adc
push
cwtl
dec
loopne
add
and
mov
or
fsubl
xchg
outsb
decb
dec
xchg
ds
add
inc
cs
clc
or
push
add
mov
xchg
lods
inc
xchg
mov
jne
or
xor
cmp
lock
in
ljmp
xchg
push
dec
sbb
mov
sbb
adc
dec
das
pop
adc
in
sbb
stos
push
mov
sbb
insl
jmp
or
dec
xlat
fs
add
fisttps
inc
shl
push
fmuls
scas
pop
push
or
loopne
pop
push
ds
sub
or
sbb
add
pop
push
shl
xor
fwait
dec
ret
and
enter
or
push
lea
ret
incl
add
pop
sbb
pop
ror
rorb
shlb
sti
fcoms
pop
dec
add
fisubrs
and
mov
xchg
ss
jle
sbb
jo
fbld
sbb
adc
inc
dec
pop
push
mov
loop
inc
pop
dec
pop
push
pop
adc
push
add
sub
sbb
jo
dec
pop
lods
sub
mov
dec
les
dec
push
pop
or
cmp
loopne
ds
lahf
dec
test
bound
rol
pop
or
dec
movsl
cmp
cld
pop
aas
mov
mov
lret
inc
and
or
add
ret
inc
cmp
adc
mov
adcb
stos
mov
jl
cmp
jne
test
mov
push
test
pop
inc
mov
fistl
or
jl
mov
test
pop
or
jne
inc
mov
xor
js
jnp
js
scas
inc
hlt
sahf
pop
outsl
add
inc
or
jne
fcoms
push
jl
and
mov
and
out
cmpsb
push
add
push
push
mov
mov
pop
or
fimuls
fdivrs
dec
sbb
pop
pop
lock
test
dec
in
inc
shll
push
push
adc
push
call
dec
lock
in
ljmp
push
push
mov
cmp
add
rolb
mov
or
fst
xchg
iret
adc
mov
xchg
sysexit
xchg
mov
shlb
sub
js
dec
mov
mov
inc
sub
cmpl
mov
testl
lea
adc
lea
lods
xchg
nop
adc
adc
jl
sub
sub
lods
mov
mov
mulb
push
fs
adc
mov
and
mov
negb
dec
daa
mov
pushf
adc
jl
xor
ljmp
enter
mov
cmc
test
or
jecxz
xchg
sub
jne
pop
pusha
mov
pop
push
popa
bound
cmp
inc
cwtl
xor
lret
fs
or
addb
les
adc
popa
roll
ss
and
into
cmp
in
shrb
mov
push
out
or
or
inc
int3
dec
or
in
shlb
mov
addb
cmpsl
add
pop
nop
sub
xor
ffreep
dec
pop
inc
sbb
jecxz
adc
add
test
jb
in
cld
clc
pop
jno
or
add
inc
jo
xchg
das
lcall
fcmovnu
shll
inc
aas
or
inc
into
in
and
arpl
xchg
int
and
ror
adc
enter
xor
push
cli
jg
mov
fimuls
daa
xchg
push
pop
and
and
sbb
mov
pop
push
sbb
ret
push
push
or
ffreep
imul
repnz
gs
fsubr
add
mov
sbbl
jns
or
jae
hlt
rcrl
mov
cs
mov
xchg
xchg
or
or
push
rolb
add
arpl
jp
dec
and
push
cmp
sbb
jmp
dec
sbbb
add
and
dec
mov
aaa
xor
lahf
and
adc
rcrl
inc
add
xor
adc
mov
shrl
and
cmp
arpl
or
dec
adc
inc
dec
adc
mov
push
movl
aad
movsb
rcrl
xchg
fiadds
test
push
mov
lahf
fiaddl
mov
sbb
mov
shrl
inc
repnz
incl
addb
insl
in
rcr
movb
mov
mov
pushf
mov
push
lea
xor
and
adc
ficompl
lahf
sbb
mov
mov
xchg
mov
mov
xchg
xor
insl
pushf
mov
xor
dec
mov
rorb
out
fsubrs
mov
xchg
icebp
cli
stos
cmp
xorl
push
xor
sti
and
in
jmp
call
pop
ljmp
add
xor
adc
dec
cltd
fistpll
push
cmc
or
jge
in
in
inc
loopne
cmp
jecxz
inc
fmull
add
jo
inc
clc
lcall
add
mov
dec
xor
cmp
or
add
pop
pop
dec
push
jo
lods
cmp
lea
pop
inc
jmp
dec
xorb
jo
xchg
mov
dec
adc
cmp
pop
rolb
cmpb
dec
adc
in
subb
add
aam
psubb
dec
mov
xor
insl
je
rcr
and
out
daa
jne
insl
loop
push
decl
xchg
fiaddl
xor
xor
decb
enter
mov
mov
push
sbb
push
push
clc
push
push
shlb
sbb
pop
adc
gs
lea
aas
add
jp
cs
nop
xchg
xorb
or
mov
push
adc
in
mov
or
adc
add
addb
pop
xor
adc
fildll
cmpsl
iret
add
sub
sub
push
ret
lcall
inc
sub
in
mov
or
cmp
sub
call
icebp
rcll
lea
pusha
sahf
cmp
inc
sub
xor
add
mov
sub
xlat
sub
xchg
xchg
lret
pop
and
sub
or
pusha
pop
fstl
mov
sub
mov
pop
cli
inc
xchg
push
in
sbb
jl
insb
cmpsl
add
sbb
push
jns
sahf
xor
mov
enter
shlb
sub
out
add
adc
sbb
pusha
push
adc
add
loopne
xchg
rcr
inc
sbb
fisubl
lds
rclb
mov
nop
adc
in
push
mov
rclb
or
cmpsb
sbb
out
add
nop
int3
add
adc
and
inc
push
xchg
pushf
push
push
add
inc
repnz
and
sub
adc
push
cmp
push
rclb
es
andl
add
aam
std
add
dec
adc
nop
and
push
xchg
adcl
push
and
popa
ret
lock
add
push
inc
fisubl
scas
rolb
mov
adc
adc
add
jno
adc
adc
add
add
dec
or
mov
mov
ret
dec
pop
cli
adc
xchg
sbb
sbb
std
jl
scas
sub
lods
and
add
lahf
sahf
dec
inc
popa
jp
push
cmp
adc
shlb
hlt
pop
add
add
mov
push
stos
pop
push
testl
mov
sub
loope
nop
add
push
add
cmc
imul
jno
adc
inc
adc
sti
or
pop
add
inc
push
xor
pop
dec
into
sbbb
cld
jb
fldt
push
push
adc
sub
push
lods
jle
cwtl
mov
mov
clc
inc
and
es
push
inc
dec
inc
mov
push
ficoms
loopne
mov
mov
mov
pushf
mov
les
imul
nop
jne
je
sbb
push
or
bound
into
xchg
inc
adc
push
sbb
push
inc
shlb
mov
push
insl
sub
cmpsb
rolb
cmpsb
imul
jae
cwtl
xor
fists
lock
dec
addb
fnstcw
cmp
lret
push
sub
or
pop
cmpsl
imul
lea
jp
adc
xchg
movsb
mov
aam
and
mov
adc
les
arpl
cmpsb
cmp
adc
scas
pusha
dec
push
dec
mov
jnp
test
in
add
jb
inc
inc
call
stos
and
loopne
push
sarl
adc
push
repz
lea
inc
frstor
mov
add
cmp
and
dec
gs
push
rolb
cmp
jb
add
mov
add
lods
mov
xor
roll
jb
mov
jae
sub
bound
cmp
movsb
mov
jne
fldl
jmp
lods
add
in
cmp
add
xor
js
adc
and
repnz
hlt
nop
xorl
adc
mov
sbb
rclb
fcomp
jns
mov
sub
or
sbb
int3
fdivs
push
sahf
out
loopne
loopne
orb
loopne
movsb
repnz
add
fmull
pop
sahf
xchg
test
sbb
enter
or
or
or
dec
insl
add
or
and
pop
jae
nop
pop
push
adc
or
add
int3
je
loope
push
sti
inc
lock
je
dec
adc
call
mov
cmp
std
ret
les
aas
add
shll
jae
aas
xor
test
xor
ret
jmp
or
pop
dec
cmp
stc
into
int
ds
push
lods
pop
mov
int3
adc
cmp
adc
and
adc
rol
dec
je
test
inc
sub
sub
sub
ret
cmp
xor
int3
add
push
push
fsubs
jecxz
clc
mov
and
pop
stos
sub
test
sahf
pop
xor
lret
pusha
lea
ret
or
cmp
cmp
cwtl
loopne
insl
mov
push
test
sbb
mov
pop
je
pop
pop
mov
jl
jnp
les
sbb
call
mov
popa
mov
or
jne
inc
push
ret
adcb
push
inc
adc
mov
mov
xchg
clc
and
mov
dec
movsl
mov
add
xchg
mov
cmp
adc
loope
mov
call
jbe
das
call
mov
call
inc
push
xchg
cmp
insb
pushf
daa
add
rorl
scas
sbb
adcb
sub
outsb
push
hlt
add
push
add
mov
test
shll
pop
loopne
mov
jb
sbb
push
subl
loopne
test
push
mov
sbb
jo
add
pop
sub
pop
cmpsb
div
inc
loop
sbb
dec
dec
loop
gs
inc
aas
dec
dec
adc
xorb
andb
xor
jo
push
xchg
lock
xor
in
int
data16
fstpt
xor
in
sbb
iret
enter
pop
push
cs
lret
or
mov
sbb
movsb
shrl
add
hlt
jp
pop
cmp
sahf
adc
pushl
adcb
rclb
xchg
mov
les
cmp
push
and
push
dec
or
or
and
sub
dec
fbstp
push
inc
js
mov
scas
into
push
push
sbb
mov
mov
pop
popaw
jl
sbb
add
mov
fwait
inc
cmp
and
cld
jo
or
lahf
add
or
cld
insl
jb
cmp
push
or
push
jb
scas
call
dec
add
inc
xor
in
xorb
cmc
or
add
add
add
push
push
adc
sub
test
adc
orb
aaa
inc
pop
clc
xor
pop
cmp
les
and
pop
add
popl
nop
xchg
subb
inc
adc
xchg
pushf
pop
ja
mov
pop
xlat
dec
loope
or
xchg
js
and
fcompl
repz
es
clc
cli
imul
pop
dec
sahf
data16
in
lock
or
stos
popf
test
aad
add
push
adc
aam
loop
loopne
or
add
and
mov
pop
push
fcoml
scas
adc
lds
cmp
cmp
or
push
push
out
and
nop
inc
pusha
scas
adc
push
push
adc
cwtl
nop
rcr
cmp
sbb
jne
dec
mov
adc
je
xchg
nop
imul
aas
mov
sub
js
pop
les
cwtl
or
push
ret
and
jg
push
je
notb
fimuls
mov
jge
repnz
in
dec
or
push
sbb
cld
pop
je
add
push
xchg
dec
mov
xor
and
sbb
jle
ret
xchg
movb
gs
adc
movb
call
add
test
and
push
cmp
inc
mov
and
addl
mov
cmc
cmp
addb
xchg
lock
jge
cwtl
xchg
inc
push
or
sub
adc
pslld
add
mov
mov
ret
mov
les
or
push
and
test
ljmp
add
cmpsl
lock
push
jne
mov
jmp
lret
inc
dec
push
mov
loope
ficompl
cmp
push
lock
test
test
sbb
testb
fbld
mov
push
pop
adc
add
push
dec
adc
das
sti
push
inc
ljmp
or
sub
mov
sub
xchg
cmp
out
inc
loop
sbb
push
add
or
leave
sub
sub
dec
in
cmp
inc
xor
and
in
or
into
push
push
xchg
cmpsl
and
nop
orl
xchg
cmp
jae
cmp
mov
bnd
add
add
and
test
or
and
inc
xchg
dec
jb
stos
sub
cld
roll
es
fwait
dec
inc
and
pop
adc
pop
mov
call
test
push
cmpl
je
xor
jge
js
popa
jp
sbb
and
pop
or
or
sbb
cmp
add
bound
sbb
mov
adc
sbb
inc
lcall
or
into
or
ret
mov
add
sub
fs
shlb
or
stos
xchg
test
mov
movsb
in
movups
and
sbb
or
flds
lds
add
inc
shrb
and
fdiv
mov
xchg
add
gs
or
push
mov
loopne
rcl
cltd
in
and
sub
and
imul
mov
and
or
jo
or
rcr
xor
push
and
inc
pop
adc
pop
nop
and
dec
out
test
dec
inc
add
inc
mov
sbb
push
hlt
mov
int
xor
pop
loopne
or
les
cmp
mov
inc
xorl
add
cmp
lds
xchg
jb
or
shll
je
mov
jns
mov
push
push
mov
inc
jb
push
push
or
lea
xor
jle
loopne
fs
or
dec
subl
or
sbb
jno
xor
cld
mul
push
push
movnti
jg
test
pop
xor
fstps
sbb
jne
repnz
mov
ret
mov
popa
pop
or
pop
or
xchg
or
mov
ficoml
add
addr16
test
jl
push
fsubs
mov
inc
inc
adc
xor
fistps
fdiv
inc
sahf
cvtpi2ps
push
nop
movl
and
out
mov
and
nop
xchg
and
and
nop
inc
push
and
and
jl
nop
inc
push
nop
mov
mov
nop
inc
push
daa
in
and
enter
sub
and
enter
cmp
pop
or
jmp
push
jb
xor
mov
leave
xchg
add
inc
push
int3
jp
std
insb
xor
or
xor
mov
mov
pop
xor
push
xor
xchg
or
and
mov
mov
in
sahf
movl
xor
push
mov
sub
jmp
pusha
jmp
xchg
out
test
lret
pusha
xor
imul
mov
call
pusha
je
push
add
or
andb
and
enter
cmpl
or
or
add
int3
pop
adc
sbb
adc
dec
das
mov
adc
push
sbb
mov
les
enter
jmp
mov
je
add
xor
sub
and
sub
popa
insb
adc
movsl
pop
test
vpcmpeqw
pop
stos
add
inc
fsubs
mov
cwtl
xor
test
xchg
ret
dec
divb
call
and
jmp
mov
sub
push
push
fcmovb
jns
pop
mov
cltd
xor
aam
sbb
or
pop
sbb
and
loopne
push
hlt
aaa
mov
nop
mov
cs
push
sbb
js
dec
xor
gs
and
popa
fcomi
call
insl
pop
sbb
int
xor
inc
jecxz
dec
xchg
movb
pusha
jle
clc
imul
test
push
adc
push
js
sbb
in
inc
movsl
imul
lock
cmp
sbb
jno
add
jl
push
daa
leave
js
sbb
inc
lret
push
inc
xchg
and
jo
xlat
adc
jnp
sub
sub
addr16
inc
fiaddl
repz
pusha
cld
decl
mov
and
add
or
icebp
daa
xchg
adc
xchg
push
push
dec
jmp
or
adc
outsl
push
mov
mov
cmp
xchg
or
or
test
icebp
shrb
andb
in
xor
xor
mov
push
cld
push
movsl
movsl
jae
cli
cltd
addb
mov
test
mov
ret
rcrl
push
pusha
lock
push
jo
test
cmp
je
ds
int3
or
loopne
cmp
ffreep
mov
and
jecxz
push
adc
imul
and
push
out
or
test
adc
outsb
and
add
stos
repz
std
sub
push
or
sti
jge
pop
mov
adc
mov
data16
cltd
cwtl
adc
fdivs
push
mov
jae
jae
adc
push
mov
insb
adcb
xchg
pop
cmp
jnp
add
pop
push
push
push
xchg
dec
adc
mov
sbb
sbb
imul
mov
gs
cmp
add
mov
xor
xchg
and
clc
jmp
in
das
inc
sub
adcb
mov
mov
scas
add
jo
mov
push
imul
mov
lcall
outsl
inc
push
or
push
mov
movl
push
push
int
sub
and
iret
loopne
in
ret
es
add
int3
pop
xor
out
xchg
sbb
inc
les
mov
xor
in
and
fwait
jo
dec
add
js
jo
leave
xor
and
popf
add
push
fcmovb
add
imul
add
lods
push
data16
lock
xchg
jno
clc
add
sbbl
jne
jns
mov
jne
jno
je
aas
mov
mov
sub
mov
sbb
pop
jne
rclb
mov
sbb
jle
int3
hlt
add
sub
xchg
ret
mov
sub
sti
int
lea
add
push
and
aaa
fcmovnb
push
cwtl
mov
je
mov
adc
adc
or
or
enter
out
push
or
fmull
and
cmp
push
cmova
sti
icebp
xchg
ss
dec
and
inc
cmp
cmp
cmp
scas
inc
add
mov
push
sub
sahf
dec
lea
jnp,pt
xor
or
cmpsl
mov
xchg
outsb
leave
cmp
dec
faddl
push
pop
pop
mov
push
sar
push
jbe
sbb
movsb
jle
jl
push
and
jno
lret
jno
jge
sub
sbb
mov
je
xchg
mov
push
jmp
jne
rcll
add
cmp
call
xor
lods
xchg
jne
addb
adc
out
inc
lcall
shlb
imul
mov
or
ljmp
mov
sbb
and
sub
and
test
xchg
push
test
inc
xchg
dec
test
adc
int3
aam
sbb
fsubrs
mov
mov
xchg
or
mov
push
mov
out
cmpsb
push
push
push
or
push
int
pop
dec
movsb
aas
xor
xor
pop
adc
or
add
ret
shlb
gs
pop
push
daa
aad
pop
ror
addb
and
daa
lods
or
jp
sub
xor
mov
lock
xor
cmpsb
adc
cmp
lcall
shll
call
subb
or
push
adc
and
jne
xor
movsl
pop
cwtl
sbb
movsb
test
or
in
ret
sub
jne
adc
cmp
scas
testb
or
mov
pop
or
mov
jo
cmc
push
test
mov
jno
mov
cmp
fnstsw
sbb
gs
rorb
push
push
sub
iret
inc
dec
inc
sbb
int
loopne
or
dec
call
and
inc
pop
push
rolb
je
call
ljmp
push
push
iret
add
xchg
and
xor
ret
inc
popf
sbb
cwtl
test
fildl
inc
xchg
mov
push
push
jecxz
mov
add
jl
jo
aaa
jno
test
push
xor
cmp
adc
push
pop
pushf
mov
fcmovu
push
push
bnd
jmp
rcr
adc
test
pop
aad
lods
add
fwait
aas
xchg
ljmp
and
repnz
sub
or
imul
fwait
mov
fs
lods
fdivl
inc
jb
in
mov
add
and
loopne
xchg
xchg
mov
inc
sahf
and
in
xor
in
dec
mov
push
dec
mov
fwait
mov
fdivr
jnp
mov
adc
loope
and
cmpl
push
mov
pop
dec
sbb
adc
push
pusha
pop
dec
ret
jae
lahf
or
adc
sbb
and
mov
ficoms
adc
jns
pop
insl
and
jmp
inc
dec
lock
dec
es
sub
jo
xor
imul
cmp
and
and
sub
sub
les
daa
ret
movsb
mov
dec
push
adc
cltd
imul
xlat
sbb
mov
lock
pop
xor
inc
push
pop
and
sti
mov
leave
or
mov
lods
das
mov
adcb
mov
notb
stc
jns
imul
lea
add
mov
cmp
push
call
mov
pop
mov
push
pop
or
inc
leave
and
leave
inc
mov
insl
test
xchg
shll
adc
cltd
ret
push
mov
push
cwtl
cmp
cmp
xor
ret
mov
push
dec
cmp
push
push
adc
subl
mov
inc
cs
fwait
inc
mov
inc
xor
pop
and
pop
xor
adc
jns
add
xchg
pop
xor
fnsave
mov
test
clc
mov
xor
insb
cmp
adc
cmp
mov
es
and
mov
push
push
and
dec
cmp
sbb
out
outsb
cmpsl
xchg
shrb
push
sbb
xor
xchg
xor
xchg
int3
mov
pop
push
call
dec
imul
mov
scas
and
cs
sahf
xor
add
in
sbb
loop
call
dec
push
mov
push
ret
inc
std
shlb
cmpb
adc
xorl
jnp
jae
ss
aaa
inc
dec
mov
push
add
dec
or
lock
lock
mov
xor
adc
push
shlb
mov
popl
cmp
aam
sub
inc
loopne
add
pop
imul
sub
fisttps
jl
cmp
sub
lock
mov
and
idiv
push
and
or
mov
ret
sbb
pop
and
adc
cmpsl
or
lds
nop
cmova
enter
mov
cmp
adc
fidivrl
push
jo
fstps
out
jle
cmp
rcl
xorb
aas
lods
mov
inc
pop
fsub
loop
dec
jecxz
fs
leave
rcl
out
enter
adc
mov
popa
and
cmpsl
int3
adc
add
mov
arpl
xor
insb
pop
scas
xor
jo
ljmp
aaa
or
lea
mov
add
push
rcr
jne
inc
add
sub
xor
mov
inc
jnp
pop
scas
add
pop
ret
xchg
add
jno
xor
xor
out
stc
lods
shl
fiadds
in
push
in
pop
mov
movsl
push
cs
jbe
xchg
call
lods
pop
outsl
addr16
mov
inc
mov
mov
jp
pop
push
adc
jmp
and
lea
fidivrs
or
xchg
inc
xchg
adc
subb
xor
int3
outsb
xor
out
add
out
movsb
add
adc
sub
loopne
pop
add
push
inc
or
mov
adc
adc
push
or
add
add
punpckldq
sub
mov
xchg
in
ror
loopne
and
jo
aam
inc
pop
inc
push
xor
data16
add
fwait
ret
mull
aam
pop
repnz
call
fwait
mulb
les
in
dec
or
cmp
mov
adc
or
in
and
add
add
sbb
sub
mov
sub
je
or
push
cmp
cwtl
or
int3
outsl
aaa
nop
out
dec
add
fidivrs
adc
lahf
sbb
cmpsb
ds
adc
cld
sub
loope
test
clc
je
mov
or
loope
sbb
fdivrl
or
sbb
mov
or
push
add
sub
dec
adc
push
or
fnstsw
add
clc
roll
lret
adc
inc
push
add
dec
aaa
sbbb
in
or
movsb
dec
jp
je
rolb
push
adc
and
out
xchg
push
xorb
popf
inc
mov
or
cmp
xor
cltd
stc
add
enter
add
fistl
jmp
cltd
push
enter
add
inc
outsb
fwait
cmpsb
sub
ret
jge
nop
xchg
mov
repnz
and
pushf
fbstp
sbb
scas
mov
fldenv
mov
repnz
je
dec
outsb
inc
and
sbb
or
fdivs
mov
sub
test
lods
enter
mov
mov
mov
push
nop
or
mov
nop
lret
sub
push
jl
add
flds
clc
sbb
push
ja,pt
cmp
adc
hlt
push
enter
xor
stc
jb,pt
push
xor
or
es
cs
cmp
sub
inc
pop
push
jl
add
cmp
adc
or
adc
inc
or
adc
jno,pn
mov
xchg
push
mov
dec
dec
aad
in
adc
mov
jae
icebp
mov
fstp
mov
push
daa
loop
aad
scas
and
repnz
out
nop
mov
and
or
nop
xchg
cmpsl
add
loope
or
daa
cli
xchg
xlat
mov
jl
pop
shlb
dec
or
push
cltd
js
mov
dec
jmp
test
mov
add
dec
pusha
sbb
cmpsl
insl
stos
mov
rolb
fstl
ret
jl
out
daa
rcrl
into
sarl
cwtl
les
pop
inc
adc
pop
fcmovne
sbb
push
adc
sbb
and
fcmovu
sbb
mov
nop
dec
jbe
add
clc
xchg
add
push
mov
push
inc
lret
push
jo
xchg
pop
daa
jo
ljmp
ja
sbb
xchg
or
add
or
sub
in
ds
sub
push
push
popa
ds
push
in
push
inc
xchg
lcall
or
or
mov
fldz
mov
call
sub
and
movsl
dec
cmp
int3
lock
inc
xchg
adc
int
add
or
add
xor
inc
shl
jp,pn
cs
lret
push
inc
popa
add
adc
sub
jne
stos
adc
ss
or
push
sti
mov
ret
movl
add
movsb
pushf
push
mov
movsl
inc
xor
ds
in
push
sub
xchg
pop
inc
fiaddl
mov
outsl
adc
ficomps
mov
xlat
inc
dec
push
arpl
or
mov
jle
es
mov
addb
hlt
aaa
or
mov
push
icebp
mov
sub
mov
push
sarb
push
sahf
or
addr16
add
dec
add
lcall
cmp
sub
xorl
in
mov
aaa
sbb
adc
xchg
xor
sub
js
push
xlat
pop
movsl
mov
push
and
mov
sub
and
xchg
aam
sub
and
cltd
in
xor
sbb
or
cli
mov
jmp
fwait
imul
pop
or
or
pop
ja
xchg
jecxz
test
or
roll
subl
mov
fwait
inc
popf
insl
jbe
sahf
inc
dec
pop
add
mov
xchg
shlb
sbb
and
dec
and
inc
xchg
pusha
jmp
rorb
jp
fists
jb
mov
sbb
clc
add
jmp
fisttpll
jns
test
push
add
mov
pushf
add
mov
inc
push
js
cltd
pop
mov
mov
mov
icebp
pop
push
nop
push
and
push
pop
addr16
cmp
test
push
inc
movb
out
adc
add
imulb
xchg
mov
lods
outsl
dec
lcall
mov
popf
jbe
imul
and
jle
adc
fdivrl
adc
and
cmpsl
pop
test
add
mov
inc
lret
xchg
mov
xchg
leave
sub
mov
xchg
push
add
roll
sarb
adc
sti
cmpb
push
sub
or
add
lret
fldl
test
adc
nop
div
decb
jle
push
sar
aam
aam
shll
add
inc
movsb
fnstenv
and
ficoml
mov
mov
je
dec
mov
or
lea
pushl
sbb
sub
cmpsb
mov
sbb
xchg
sbb
dec
mov
std
mov
cmp
inc
or
and
mov
sbb
rorl
leave
and
add
cmc
push
and
insb
incl
or
inc
lahf
mov
shlb
or
inc
lret
inc
insb
pop
xchg
shll
and
nopl
mov
or
pop
lcall
cmpsl
ds
fnstsw
sahf
or
mov
and
push
pop
xor
xlat
lea
mov
sbb
les
mov
jmp
addr16
lcall
ret
add
adcb
fisubrl
and
sbb
movl
sbbb
shll
add
sub
cs
dec
xor
or
int
add
or
mov
in
mov
add
mov
xchg
sbb
adc
adc
xchg
repnz
ds
sub
sbb
mov
inc
inc
dec
add
push
fnstcw
lea
notl
push
and
jno
add
in
mov
and
pop
repnz
test
insl
adc
sub
mov
add
rclb
or
inc
and
xor
pop
dec
sahf
pop
in
testl
addr16
or
mov
adc
ds
mov
or
push
mov
clc
add
popa
movl
ret
cmp
movsb
aaa
pop
cmpb
pop
dec
adc
sbb
xor
adc
aam
add
hlt
add
mov
fsubr
mov
fsubrp
pop
inc
shlb
and
dec
sahf
mov
cvtpi2ps
sbb
or
cmp
aaa
cld
loopne
enter
cmp
gs
xchg
mov
orl
lea
sbb
adc
jl
jmp
jge
pop
subl
sub
stos
lret
dec
adc
test
or
mov
pop
mov
mov
int
enter
and
cwtl
inc
and
jg
pop
jno
enter
push
push
jge
xor
into
add
xor
xor
inc
xchg
add
and
adc
mov
cmpsl
rclb
test
fmulp
xor
push
inc
mov
sub
clc
jbe
adc
sub
push
addb
cmp
je
ss
mov
jbe
jo
dec
xor
es
jmp
sbb
aas
xchg
xchg
addl
in
nop
in
pop
inc
popf
inc
xor
push
rolb
ljmp
jbe
or
in
out
adc
pushf
xor
inc
sahf
or
xor
inc
pop
shrb
or
test
mov
dec
inc
jg
add
je
add
fsubr
sbb
push
not
push
mov
mov
jbe
jne
ja
adc
cmp
cmp
jne
adc
inc
jne
repz
sub
andl
sub
mov
or
adc
inc
or
mov
mov
icebp
sbb
sub
ficomps
inc
add
or
dec
jmp
mov
lret
push
lret
add
aam
je
push
pop
mov
mov
mov
and
push
clc
cmp
jae
push
jecxz
or
aaa
add
jmp
pop
test
inc
dec
and
push
adc
in
inc
rorb
stos
or
sbb
ret
test
inc
push
hlt
ficomps
push
inc
pop
mov
dec
test
push
cmpb
dec
adc
call
push
inc
add
add
or
lcall
add
inc
cwtl
arpl
fadds
hlt
xchg
sub
sub
adc
and
xchg
cmpb
lock
and
js
xchg
scas
icebp
push
inc
and
dec
jbe
int3
adc
xchg
ret
lods
xor
notb
dec
mov
rcrb
add
outsl
lock
inc
xchg
mov
movsl
mov
push
cwtl
push
mov
xor
adc
mov
push
and
inc
sub
add
cli
jo
xor
es
pop
sarl
aaa
inc
and
push
lcall
jae
inc
lret
movl
xor
or
mov
hlt
adc
dec
mov
inc
insb
cmp
insb
jo
clc
call
push
and
ret
fildl
inc
sbb
adc
jb
mov
mov
adc
or
dec
out
xchg
xchg
pop
adc
add
daa
es
mov
add
and
adc
mov
je
sub
or
sbb
mov
sub
cmp
lods
cli
pop
sub
cmp
xor
push
push
inc
add
pop
push
and
add
xor
stc
xor
lods
sub
jae
das
jl
in
repz
sub
push
in
pop
xor
sbb
pop
and
adcl
add
icebp
pop
mov
pop
jmp
bound
daa
mov
push
lea
jne
cmp
cmp
sbb
jmp
or
test
lret
xchg
scas
ficoms
lcall
pop
inc
pop
pop
mov
sub
iret
xor
pop
orb
push
jne
and
or
jecxz
pusha
and
cmp
cli
orl
inc
dec
imul
cmp
push
mov
add
mov
inc
cmpsl
or
movsb
popf
rolb
outsl
lock
ljmp
xor
ret
in
or
mov
push
inc
adc
mov
add
xchg
sti
insl
add
dec
test
push
push
ret
or
out
push
inc
or
lea
sti
test
cmp
mov
addl
xchg
add
adc
jl
jb
jnp
js
inc
cmpl
or
push
push
cmp
push
dec
jns
fadds
sbb
aam
adc
xchg
mov
cmpsb
aaa
pusha
dec
fiadds
or
xchg
lea
mov
popf
mov
sub
pop
pop
lods
pop
add
xchg
sbb
mov
adcb
jo
lahf
push
jo
mov
or
pop
repnz
dec
or
and
or
jbe
pusha
insb
push
rcr
xor
gs
cmp
add
inc
pusha
ss
mov
stc
lods
scas
or
xor
shlb
jle
fisttpll
inc
jmp
mov
pop
mov
pop
jecxz
mov
mov
push
xor
xor
add
aad
movl
sub
cmp
mov
add
lods
popa
inc
xor
sub
xor
cs
xchg
xchg
sbb
add
jge
pop
inc
pop
jae
ret
mov
dec
movb
push
add
sbb
addl
je
push
add
push
sbb
xchg
jle
add
inc
push
or
out
push
jae
mov
xor
sbb
pop
fstpt
add
add
mov
sub
fisubs
mov
lds
mov
xor
pop
xchg
cmp
cmp
push
mov
push
sahf
inc
ds
lods
sbb
mov
stos
and
add
add
lds
push
adc
xchg
sub
or
lea
inc
and
push
adc
mov
subb
cmp
adc
daa
xorb
inc
cs
xor
dec
sahf
arpl
push
sbb
mov
ret
push
mov
leave
jnp
insb
insb
pop
dec
cmp
jl
call
add
sub
sbb
xor
and
rcrb
push
ret
sti
add
mov
in
mov
out
psrld
sbb
aam
clc
pusha
inc
sahf
out
push
dec
dec
dec
cmp
jmp
mov
mov
mov
pop
push
mov
nop
andb
dec
add
fs
adc
sbb
or
or
adc
pop
and
out
sar
jne
push
cld
dec
sbb
mov
les
shll
pop
ds
push
sti
sub
sbbl
add
dec
push
dec
lods
movsb
inc
adc
inc
jle
and
inc
mov
and
jp
inc
mov
fisubl
movsb
frstor
cmp
jns
push
data16
into
inc
icebp
iret
adc
dec
push
inc
push
add
push
adc
pushf
sbb
add
sub
xor
mov
fxch
fldenv
popa
xchg
xor
jno
enter
and
add
ja
jmp
xor
jbe
enter
lcall
das
mov
insl
imul
pop
push
mov
adc
mov
lea
add
insb
call
push
or
lock
and
leave
or
mov
jg
shlb
leave
aam
jne
loop
add
inc
out
adc
ss
cmp
clc
mov
pop
inc
lea
sbb
mov
xor
fmuls
add
adc
out
in
ret
sarl
dec
mov
movsb
hlt
into
cmpsb
subb
pop
lds
lds
icebp
and
cmp
cmpsl
cmpsl
cmp
add
mov
dec
je
clc
js
mov
sbb
test
adc
push
cs
fadds
clc
and
dec
add
popa
push
push
adc
add
cmc
push
xchg
lods
ss
fmuls
es
sbb
in
inc
pop
jmp
push
add
jge
xchg
adc
outsb
xor
push
add
repnz
fistl
les
mov
xor
add
sarb
test
ret
mov
adc
jo
loopne
pushf
subl
rorb
push
add
dec
in
insl
mov
mov
in
sbb
int
xchg
sbb
mov
sbb
inc
jnp
dec
pop
pop
jo
mov
inc
push
inc
cmp
into
ret
insb
std
in
mov
incl
mov
jne
mov
in
lea
jp
inc
or
mov
or
nop
mov
fwait
inc
sahf
push
je
push
and
das
ficoms
or
sbb
call
cwtl
or
icebp
or
push
cltd
nop
out
sahf
mov
adc
pop
cmp
xor
cs
nop
out
mov
das
cld
pushl
lods
out
inc
cs
adc
push
in
cltd
nop
enter
push
adc
sub
repnz
or
or
pop
or
mov
lock
mov
push
and
sub
add
pop
int3
gs
lock
jle
add
iret
or
add
and
and
aam
push
inc
xchg
xor
jle
sbb
ret
dec
cs
xor
adc
or
or
pop
cmp
movsb
xor
testb
lea
icebp
or
imul
daa
jno
mov
pushl
jl
xor
pop
push
dec
and
jb
test
lock
nop
mov
rcll
or
test
popf
xchg
jle
sbb
push
fwait
mov
fadds
jbe
add
push
or
add
shlb
jl
rcll
inc
cmp
nop
inc
cmpsl
mov
xchg
ds
sub
lods
xor
addr16
sbb
adc
pusha
mov
add
dec
mov
xchg
xchg
and
jmp
add
xor
or
push
popw
fcomi
mov
push
pop
sbb
or
or
xchg
data16
push
es
xor
addb
adc
pop
add
sub
lret
popa
out
test
push
adc
sbb
aam
add
inc
mov
mov
push
div
add
stc
fnsave
mov
push
hlt
hlt
dec
pop
push
or
loop
pop
mov
push
or
sbb
mov
arpl
mov
mov
push
icebp
fidivs
push
sub
rcrb
cmp
pop
xor
in
cmp
pop
push
pop
push
pop
divl
movsb
push
cmp
mov
jecxz
xchg
adc
xor
add
ret
leave
xor
inc
or
rclb
js
add
adc
push
int3
push
and
jp
les
cmpsb
and
aaa
fidivl
jmp
and
mov
mov
add
push
jmp
push
insl
pop
loope
push
test
xchg
push
sbbb
push
lods
mov
push
inc
cwtl
mov
pusha
pop
pop
xchg
mov
adc
xchg
jne
lea
mov
dec
lea
dec
lock
xchg
mov
push
mov
test
and
cwtl
or
stos
add
push
pushf
mov
or
mov
xor
and
sub
mov
or
add
xlat
cmp
jmp
lods
xchg
aaa
xchg
push
jmp
push
inc
mov
add
or
scas
sub
cwtl
push
lea
addl
xor
adc
xor
lods
sub
loop
inc
lea
jmp
mov
or
mov
dec
mov
add
movl
cmp
out
orb
push
int3
pusha
mov
jne
jns
dec
ret
pop
add
adc
inc
cmp
push
aas
xor
and
or
pop
mov
and
and
test
dec
in
or
xchg
fstpt
sub
loopne
pop
adc
or
dec
aam
and
arpl
leave
lods
cli
mov
sahf
test
lahf
inc
stos
mov
and
cmp
inc
repz
loopne
es
fsubl
add
pop
or
push
xor
repz
in
xchg
and
sub
jb
jbe
adc
pop
xor
repz
or
loopne
sbb
and
xchg
jmp
xchg
insl
out
add
push
mov
in
rcl
dec
adc
add
jb
jnp
ss
mov
sbb
nop
mov
lea
std
sub
sub
cltd
cs
test
mov
sub
pop
sub
and
mov
mov
lods
mov
int3
mov
adc
in
jbe
mov
adc
les
add
lea
mov
inc
mov
lods
lea
or
adc
mov
sbb
test
movsl
ret
ret
mov
call
in
fmull
test
jmp
push
add
ljmp
mov
push
mov
adc
call
jne
mov
lods
pop
pop
jb
fildl
jno
or
shrb
dec
or
loopne
add
sub
insl
jmp
xor
test
in
sahf
or
or
add
add
movsl
fsubrl
dec
loopnew
lea
add
sub
xor
sbb
xor
mov
inc
lcall
adc
and
cwtl
cmp
or
adcl
movsb
adc
mov
cmp
mov
mov
dec
push
fiaddl
mov
push
push
shrb
inc
icebp
jmp
in
rorl
jl
and
cmp
add
loope
or
iret
or
adc
mov
cmp
je
rorb
push
cmp
pushf
sbb
inc
cld
and
adcb
sbb
push
mov
adc
xchg
loop
arpl
sbb
andl
xchg
outsl
or
push
sbb
cld
sbb
adc
inc
pop
add
or
aad
cmp
or
mov
inc
dec
popl
je
jno
mov
mov
push
pop
jl
pop
repnz
cmp
cmp
clc
movsb
mov
dec
js
frstor
lea
mov
je
arpl
sahf
out
jmp
pushf
cmp
add
movsl
pop
mov
and
xor
jecxz
jecxz
jne
inc
mov
daa
mov
aad
stc
aad
rcrb
xchg
test
inc
and
sub
sbbb
fdivr
pop
int
xor
jnp
mov
outsl
xor
and
shlb
jnp
sub
cmpsl
mov
add
dec
jp
repnz
dec
insb
call
aad
sub
dec
leave
call
dec
iret
push
in
xchg
inc
sbb
inc
cmpsb
sbb
es
andl
orl
or
and
inc
sub
xor
sub
and
xchg
rclb
lret
pop
dec
jo
mov
mov
inc
fs
push
into
addl
add
jl
and
cmp
add
pop
sbb
and
fisubs
mov
or
push
push
xor
sbb
jae
add
mov
push
imul
xor
pop
pop
hlt
mov
sub
xchg
aad
pusha
or
pop
and
or
je
sbb
add
addl
fdivrs
xor
mov
inc
mov
push
xchg
nop
subl
nop
jecxz
dec
dec
add
mov
stc
movsl
jb
stos
cwtl
sub
cltd
xlat
inc
cmp
loopne
add
clc
pop
add
xor
mov
jl
rcl
mov
scas
pusha
test
test
cmc
or
cmp
scas
push
jne
xchg
fisubrl
jmp
cmp
cs
adc
xlat
fildll
add
sbb
pop
jp
shlb
inc
pusha
mov
mov
cmpsb
cwtl
and
aam
adc
pop
sbb
xor
sbb
adcl
mov
dec
aam
xor
test
js
out
jle
push
ss
imul
pop
leave
sub
dec
pop
sbb
and
mov
fucomp
or
adc
mov
pop
lcall
outsb
adc
push
xchg
add
sbb
cli
popf
mov
sbb
add
or
in
nop
mov
and
and
pop
jae
pushf
popa
ret
lods
popa
add
call
push
pop
dec
repnz
cwtd
dec
imul
int3
es
ret
hlt
inc
inc
push
cmp
dec
push
jmp
jb
xchg
mov
ja
lea
sub
ret
cwtl
pop
inc
cmp
lret
mov
add
ret
jle
sub
out
jae
fistpl
fs
inc
and
ss
and
lods
jb
xchg
out
mov
andb
pushl
mov
push
cmp
lods
xor
jno
aam
sub
jp
add
incl
loop
cmp
shrl
lret
push
mov
cmp
push
pop
pop
movsb
pop
mov
add
call
and
push
insl
add
xor
aaa
pushl
movb
nop
cltd
mov
mov
sub
mov
xor
inc
jle
xor
sbb
scas
sub
sbb
or
cmp
pop
xor
jns
pop
inc
imul
test
loop
lret
xor
jmp
or
lods
sahf
mov
and
test
ja
dec
in
mov
ret
fsubs
adc
jmp
inc
jl
dec
push
cmp
js
jo
and
stos
mov
jg
pop
pop
adc
push
les
rcrl
dec
sub
and
and
adc
xor
ret
dec
inc
push
dec
jl
mov
lea
inc
lret
jo
or
scas
xchg
xor
sub
and
xor
cmp
dec
push
push
push
and
leave
push
pop
sbb
inc
pusha
xchg
dec
insl
or
gs
jo
adc
cmp
nop
je
jl
andl
loope
xchg
mov
push
ret
cmpsb
in
xor
add
or
shrb
and
sbb
movb
imul
pop
jmp
lock
inc
add
fwait
imul
jnp
loopne
aad
and
and
xchg
outsl
pop
out
rorl
enter
add
and
xlat
mov
hlt
mov
and
es
mov
xchg
push
dec
sbb
pusha
in
fisubl
lock
mov
sub
aam
dec
push
jns
jge
js
or
inc
pusha
int3
stc
and
add
and
mov
pusha
lret
push
mov
aas
inc
add
xchg
pusha
push
pop
test
add
shrb
test
xor
and
iret
and
repz
test
out
je
mov
ret
fidivl
push
jmp
dec
es
outsl
inc
cmp
pop
ror
push
pop
adcl
sub
and
jne
pop
stos
mov
test
loop
loop
xchg
int3
je
pop
lea
fmulp
push
inc
shr
adcb
push
fs
push
xchg
mov
pop
int3
popa
add
pop
popf
in
push
mov
or
and
jns
pop
pop
sbb
add
xchg
popa
jmp
jmp
sub
add
lret
jnp
or
xor
mov
adc
in
sbb
ror
lock
add
ret
sbb
adc
jne
fsubl
jo
daa
mov
dec
push
mov
add
sbb
and
push
testl
jnp
adc
js
xor
out
inc
ret
out
push
dec
fcompl
test
scas
std
sub
inc
xor
in
pop
xor
push
lods
pushf
push
into
gs
mov
push
pop
and
in
xchg
mov
adc
inc
inc
sub
mov
xor
inc
jne
inc
jno
add
push
fldl
push
test
or
sbb
adc
std
add
dec
shl
pop
test
dec
push
jae
jae
sbb
inc
sub
xor
push
test
int3
dec
scas
and
sbb
mov
loopne
xchg
sbb
pop
cmp
mov
inc
mov
dec
cltd
add
adc
mov
mulb
roll
mov
sbb
push
push
inc
sub
add
adc
sub
push
add
push
sbb
xor
lods
add
xchg
lea
enter
incl
pop
xchg
or
jmp
je
shll
daa
dec
add
sahf
cmp
jbe
dec
jnp
in
sub
loope
cmp
pusha
xor
orl
in
jl,pn
inc
mov
inc
or
addr16
mov
in
or
jns
shll
out
mov
outsb
pop
adc
cmpsl
add
fistpll
sarl
out
mov
test
pop
jae
rcrl
aaa
test
cmp
js
jno
add
shrb
or
push
sub
mov
cmp
cmp
adcb
xchg
leave
xchg
out
cmp
in
nop
add
insl
ljmp
push
or
xor
sahf
or
adc
and
mov
cmp
test
adc
or
fsubrs
in
add
shll
fpatan
outsb
test
pop
xchg
pop
add
das
aam
inc
icebp
inc
push
in
xor
xor
sahf
and
aad
sbb
xlat
add
sbb
adc
jns
add
pop
lahf
add
or
pop
push
xchg
cmp
sub
pop
dec
cs
sbb
push
xor
out
pop
add
mov
sbb
jnp
xchg
sbb
xor
xchg
clc
rolb
enter
xor
dec
and
and
sbb
xor
add
mov
sub
add
push
cs
push
mov
push
push
dec
add
xor
and
js
inc
dec
sbb
and
lods
fmuls
fidivrs
inc
dec
sahf
and
aas
iret
pop
adc
mov
leave
inc
and
in
loopne
insb
stos
popf
dec
add
push
mov
push
pop
jp
movsb
inc
dec
gs
mov
and
mov
xor
add
in
inc
mov
adc
push
push
cmp
ja
inc
pop
rcrb
dec
and
aaa
in
mov
sbb
cmp
repz
mov
xchg
sbbb
dec
dec
mov
ror
mov
sbb
shl
add
jecxz
insb
xchg
aam
imul
insl
xor
jnp
adc
sahf
xorb
add
jbe
rcrb
add
mov
les
fadds
fwait
mov
pop
pop
rorb
mov
test
cmp
mov
pushf
cmp
pusha
or
dec
sti
fwait
xor
shlb
mov
leave
sub
cltd
xor
cmp
adc
mov
ret
jb
add
lahf
push
pop
mov
push
test
xor
pushl
mov
sbb
sub
pop
fists
adc
adc
adc
fbld
xor
inc
int
xchg
xchg
mov
pop
sub
ret
test
test
ret
mov
and
jno
test
jns,pn
add
dec
adc
add
jo
and
xorb
lods
mov
sub
decl
mov
push
push
stc
daa
jle
fists
sbb
pusha
jb
xchg
loopne
dec
fisubrs
dec
push
cltd
xchg
call
pop
or
sbb
mov
leave
sub
mov
ds
add
fistps
and
bnd
push
add
js
sbb
mov
xor
adc
rcr
clc
rolb
jae
mov
xor
jnp
add
gs
out
cltd
pop
and
ds
xchg
dec
mov
sub
sub
fwait
xchg
push
push
ljmp
das
dec
es
jmp
xchg
fldenv
pop
sub
mov
pop
mov
cmc
sub
sbb
adc
loopne
add
sub
lock
add
imul
fcompl
mov
int
stc
jg
mov
movb
xchg
dec
inc
andl
je
jb
sub
les
xor
lods
xor
xor
imul
xor
cmpsb
sbb
push
jmp
or
mov
rolb
int3
cmp
hlt
ss
ds
aaa
and
movsb
cltd
cmp
pop
xor
fildl
in
mov
and
and
and
cmp
clc
sub
xchg
add
cmp
in
push
ds
ret
sbb
lea
or
jmp
setge
jbe
push
cmp
cmp
les
call
and
in
mov
push
cmp
push
add
mov
addl
pop
adcl
cmp
inc
mov
ret
fisubl
mov
fiaddl
inc
hlt
out
pop
nop
mov
ss
lahf
aas
insl
and
adc
sbb
cs
cmp
mov
icebp
push
and
mov
add
test
jge
cltd
push
sahf
fwait
xchg
cmp
xor
insl
cmp
adc
pop
stos
jl
add
daa
fsts
sbb
into
push
xchg
adc
scas
push
inc
inc
xlat
js
cs
mov
inc
sub
xor
ljmp
xor
or
adc
loope
ret
sar
pop
mov
add
dec
inc
pop
jb
xchg
xor
push
ret
sub
std
xor
movsl
adc
frstor
mov
xor
pop
dec
or
gs
push
in
sub
sub
pop
shl
lea
arpl
pop
loope
or
xor
xor
lret
dec
cmc
inc
sub
fcomps
dec
sub
push
loopne
out
sub
and
inc
xchg
mov
mov
pop
xor
jmp
lea
int3
js
dec
mov
cltd
das
add
test
mov
push
inc
fwait
jne
mov
enter
dec
cmp
add
pop
insb
or
push
fstl
stc
xor
adc
in
inc
shll
stc
dec
sbb
lds
ret
test
cmp
push
and
dec
add
int3
pushf
xor
xchg
int3
mov
and
aam
pushf
dec
and
sub
mov
movsb
sub
mov
stos
or
cs
movsb
test
jl
adc
rcl
cmp
adc
ja
aad
hlt
pop
push
jns
in
andl
push
adcl
mov
sub
rclb
leave
xchg
jbe
jmp
xchg
mov
lea
dec
add
mov
jnp
pop
pushl
test
popa
and
ret
ljmp
mov
jo
in
mov
lahf
sub
mov
sar
mov
add
ret
lcall
popa
mov
or
scas
mov
icebp
std
mov
adc
dec
xor
test
clc
mov
mov
stos
jge
movhps
xor
aam
sbb
and
add
pop
mov
lds
int
ljmp
mov
dec
sbb
repz
mov
push
push
or
movsb
cmp
mov
subb
rclb
inc
mov
enter
pushf
sti
sbb
stos
mov
push
and
push
punpcklbw
lcall
rorb
or
test
push
fbld
sbb
jl
or
dec
test
adc
pushf
xor
inc
pop
or
xchg
mov
xchg
xchg
jl
push
push
or
movb
in
dec
fildl
and
adc
and
inc
je
test
pushf
in
jno
in
loopne
inc
aas
cmp
pop
sbb
cmc
lcall
or
ffreep
xchg
and
or
xchg
inc
movsl
nop
or
or
cmp
test
cwtl
dec
js
in
cmpb
jae
shlb
dec
aam
mov
mov
mov
mov
insl
leave
addr16
xor
arpl
cmp
loopne
add
and
aas
pop
inc
lea
dec
fldcw
ja
pop
mov
sti
sub
pop
outsb
popa
xor
sbb
or
rorl
daa
pushf
pushf
mov
mov
adc
lds
push
pushf
dec
repz
xor
insb
adc
add
rcrl
stos
daa
and
push
push
enter
cmp
mov
enter
or
fstpl
sti
cmc
mov
je
mov
fsts
shufps
inc
stos
nop
push
mov
sub
cwtl
adc
push
jbe
mov
inc
sub
xor
faddl
iret
or
sbb
xchg
outsl
add
add
mov
stc
cmp
inc
fimull
addl
inc
dec
jae
lea
mov
and
push
shll
femms
jl
ss
jbe
push
scas
mov
insl
clc
adcl
inc
and
mov
adc
pop
lds
mov
add
dec
enter
out
jno
bound
push
shlb
pop
nop
mov
xchg
mov
je
ss
shrl
je
pop
push
mov
and
pop
mov
arpl
arpl
mov
jmp
cmp
call
push
sti
or
cmp
push
fwait
lock
dec
push
pusha
xlat
add
push
or
cmp
and
mov
mov
and
adc
leave
cwtl
mov
popl
jbe
movsb
cwtl
insl
movsb
sub
add
jg
and
inc
mov
loop
fists
inc
je
scas
dec
cmp
push
sarl
or
cmc
enter
mov
sub
std
shr
jmp
xor
int3
or
ds
and
or
mov
or
pop
adc
add
push
and
nop
add
shl
int
push
jmp
cmp
xchg
mov
shlb
add
mov
push
jne
lea
fbstp
or
sub
and
adc
ret
xchg
mov
insl
dec
jns
xchg
xor
loop
jle
inc
in
mov
add
or
rorl
out
add
sub
dec
aam
ss
decb
mov
push
fs
mov
mov
les
xchg
xor
lea
adc
insl
daa
js
xorb
inc
push
movsb
adc
push
cmp
nop
inc
cmp
xor
in
inc
xor
in
inc
push
and
adc
inc
push
cmp
or
push
sbb
call
adc
repz
inc
add
xor
movsb
sbb
and
lret
inc
push
mov
loope
or
and
push
movsl
jg
add
dec
cmpsl
mov
xchg
jno
xor
push
fistpll
jne
arpl
add
sub
inc
adc
or
push
loopne
mov
fsubrs
aaa
sbb
jnp
cmp
add
push
je
pop
iret
sbb
jg
or
jmp
inc
push
xchg
rol
add
dec
adc
pop
hlt
or
push
jne
fisttpl
mov
or
xchg
jne
out
xlat
cmp
xor
popf
xchg
sbb
shlb
push
dec
push
sub
jne
inc
add
dec
cwtl
push
push
movsl
mov
push
nop
mov
jnp
lcall
adc
setne
xor
clc
fldl
stc
sbb
push
mov
lret
jno
js
arpl
fs
loope
dec
das
xchg
inc
call
imul
sub
clc
xor
xor
and
int
dec
pop
inc
cmc
rclb
xchg
rclb
add
push
push
pop
leave
inc
faddl
dec
pop
add
sub
adc
pop
lods
or
mov
stos
pusha
adc
gs
sbb
and
sbb
pop
add
sahf
outsb
push
decl
rolb
leave
insl
pusha
mov
mov
sbb
add
fsubs
mov
repz
jmp
test
or
pushf
or
xor
pop
or
jae
or
lock
and
sbb
jae
sub
or
push
or
cmpb
test
mov
dec
or
insb
xor
dec
mov
dec
and
sbb
cmp
lods
xor
pop
mov
push
push
fsubr
pop
add
lods
push
jmp
sbb
xchg
adc
in
fdivrl
lods
adc
js
adc
aas
sbb
xchg
mov
hlt
jbe
jg
jbe
add
call
pop
sbb
aaa
enter
jo
sahf
gs
sub
rorl
inc
or
sbbb
ret
add
scas
mov
js
and
push
sbb
shr
push
rclb
bound
mov
adc
sub
aas
push
add
mov
mov
xor
dec
push
adc
sbb
ds
les
insb
push
cs
adc
clc
adc
sub
jl
rcr
shrb
ret
testb
jp
data16
pop
mov
shrb
push
push
adcl
or
shll
xor
pop
dec
adc
imul
cmp
cld
aaa
push
in
xlat
aam
aad
jle
inc
push
mov
cmp
lea
aam
stos
lods
stos
sbb
in
push
in
mov
add
bound
mov
lret
xchg
mov
sbb
sti
aad
adc
add
imul
pop
arpl
sbb
adc
js
out
adc
inc
incb
pusha
in
ljmp
out
push
push
das
mov
fwait
and
or
lea
mov
adc
adc
adc
adc
loop
ss
sarb
mov
sub
or
xchg
movsb
fcmovnbe
lret
adc
mov
rcr
cmp
dec
rolb
mov
jl
inc
cmpsb
xlat
or
adc
cmp
lret
leave
in
add
add
xchg
push
sub
xor
mov
or
or
jb
cmp
inc
or
lret
leave
in
or
addb
pusha
loopne
adc
jno
cmp
loopne
mov
imul
or
mov
mov
sbb
int3
rclb
loopne
jg
pop
push
mov
mov
cli
sub
icebp
push
add
cmp
xchg
es
push
or
add
jmp
add
inc
push
popf
loopne
mov
popf
add
push
push
inc
or
arpl
push
add
rolb
addr16
mov
pop
inc
inc
or
push
imul
inc
notl
sub
les
and
jb
push
add
rorb
es
in
or
or
pop
movsb
fwait
cli
adc
inc
mov
push
mov
and
lea
subl
mov
inc
xchg
test
lods
mov
in
dec
mov
jne
add
push
and
popa
negb
daa
mov
fcomps
out
push
shrl
and
xor
fwait
aas
stos
push
push
or
adc
add
mov
mov
aaa
xchg
test
jg
push
sbb
loopne
pop
lock
icebp
jo
nop
fsubl
std
sbb
sahf
lret
add
mov
into
mov
inc
pop
and
pop
or
add
push
mov
xor
adc
ja
dec
aam
and
add
sahf
add
fnstenv
and
cwtl
mov
lock
xchg
pop
inc
mov
inc
xchg
or
cmp
dec
xchg
mov
orb
jl
insb
add
sbb
cs
rcrb
roll
pusha
leave
imul
aaa
or
push
dec
add
or
fsubs
fbstp
sbb
add
push
pop
and
add
mov
loope
sbb
push
sub
sbbl
cs
adc
ret
out
lea
or
mov
pop
pushl
sbb
push
add
daa
xchg
fs
sub
mov
dec
insb
adc
mov
mov
or
icebp
push
test
adc
cmpsl
or
sbb
clc
push
inc
js
or
lock
and
pop
mov
or
inc
mov
xor
int
adc
call
out
push
sub
sub
mov
cmp
inc
mov
push
pop
icebp
cli
les
mov
out
dec
mov
ja
sbb
mov
push
lock
inc
push
jae
push
insl
add
jmp
mov
enter
cmp
cmpb
dec
jb
or
cmp
test
roll
enter
mulb
lock
inc
int
pop
push
cld
or
test
mov
pop
push
mov
mov
sarb
xchg
add
xchg
sbbl
pop
bound
rcrb
pop
das
sbb
shlb
and
outsb
jmp
sbb
sbb
mov
mov
adc
pusha
sub
mov
subb
dec
push
push
add
mov
jmp
sbb
rolb
test
outsb
adc
add
js
jno
inc
test
pop
fdivp
cwtl
andb
adc
push
nop
xchg
call
add
sbb
fildl
je
cmp
adc
js
cvttps2pi
sbb
jno
andb
fs
dec
add
add
xor
mov
push
inc
sbb
out
push
and
or
xor
imul
add
push
dec
mov
test
enter
lods
push
or
sub
lcall
rcl
add
stos
lret
xor
sahf
pop
adc
adc
xor
xchg
mov
cmpl
push
test
sub
push
outsl
pop
mov
push
jle
pusha
pop
shlb
pusha
push
and
fistpl
scas
xor
aam
repnz
fsubl
dec
push
mov
inc
inc
xchg
jle
aam
fdivrs
je
or
add
ja
mov
cmp
fwait
mov
push
arpl
test
ror
pcmpeqd
mov
test
push
cmpsl
dec
aad
cmp
add
xchg
adcb
jecxz
adc
mov
hlt
xchg
fsubrl
add
cmp
pop
imul
sub
jns
dec
push
xor
fsubrs
sbb
aaa
repz
sub
nop
cmp
push
cmp
inc
shrb
pop
test
sub
dec
subl
mov
adcl
cwtl
sbb
and
call
stos
dec
into
fldcw
jbe
rorb
add
ret
lea
mov
daa
in
in
out
mov
xchg
orl
jmp
lss
push
pop
pushf
mov
sub
xor
add
cmp
add
mov
add
mov
xor
inc
mov
add
dec
loop
out
sti
xor
inc
xchg
pop
push
xchg
xor
cltd
pop
sub
loopne
call
add
sub
xor
add
pop
and
fcomps
je
and
add
fisubs
jg
pusha
pop
rcrl
adc
mov
scas
xlat
sbb
addb
rcl
and
jb
nop
into
push
pop
mov
dec
fsubrl
data16
insl
sub
push
jo
xor
push
sbb
or
mov
sbb
pop
lea
mov
addr16
enter
mov
shl
pop
jl
push
push
xor
sbb
popf
pop
adc
clc
fstpt
ret
jne
pop
cmp
gs
insl
add
and
movsl
or
jmp
cmc
out
pop
jbe
jne
push
fiadds
add
jle
outsl
ljmp
add
mov
dec
cmp
mov
mov
and
imulb
mov
jne
cld
nop
lret
or
fistpl
or
mov
adc
or
mov
sbb
les
mov
push
or
clc
ds
insb
mov
inc
mov
or
lret
andb
jg
je
call
mov
jnp
push
pop
dec
mov
and
inc
cmp
mov
adc
add
pop
jmp
mov
push
push
sbbl
movsb
push
lods
mov
jl
ds
sub
pop
sub
ds
in
xor
push
xchg
shrl
sub
pop
sti
or
roll
inc
or
sub
cld
inc
pop
push
cmp
filds
inc
clc
and
in
pop
sub
xlat
push
push
inc
jecxz
pop
pop
push
mov
scas
insb
jle
mov
mov
dec
pop
hlt
fsubs
test
push
flds
lods
add
mov
vmwrite
lcall
and
dec
test
sbb
lods
cmp
or
aas
sbb
inc
es
mul
outsb
mov
adc
jnp
jb
or
cmpl
mov
jo
popa
incb
repnz
cmp
inc
push
push
add
and
addb
movsl
add
cmp
stc
and
and
sbb
mov
xor
dec
sbb
mov
rorl
push
ljmp
add
inc
clc
test
xchg
sbb
insb
inc
and
outsl
push
lods
add
xor
cmp
popf
xchg
nop
and
jmp
mov
mov
dec
inc
pop
xor
insb
cmpsb
lret
in
cmp
add
into
das
add
and
pop
aaa
std
pushl
hlt
inc
mov
outsb
cmp
jge
adc
les
sbb
mov
lea
or
ret
popf
pop
mov
out
sahf
daa
add
jle
imul
bound
faddl
sub
cs
idivl
sub
cmp
call
pop
adc
xchg
or
cmpsb
pusha
inc
mov
inc
pusha
dec
into
cvtps2pd
xchg
test
mov
cs
insl
xchg
xorl
test
adc
mov
dec
and
movsb
mov
sub
mov
aam
sbb
mov
fcmovne
sarl
jnp
add
cmpb
jle
lock
shrl
adc
push
or
dec
mov
mov
mov
pop
out
dec
xchg
dec
cmp
xchg
int
rcrl
js
cltd
xchg
push
es
pop
jg
dec
nop
imul
fs
test
mov
pop
fidivrs
pop
lods
test
scas
test
mov
adc
pop
scas
jecxz
xchg
push
movsl
andb
cmp
xor
push
jns
dec
adc
mov
rolb
sub
icebp
and
mov
push
and
lcall
push
xchg
cwtl
adc
cmp
inc
stos
adc
add
addl
or
lods
int3
mov
sbb
sbb
mov
dec
dec
stos
or
add
cmpsl
lea
sub
lods
mov
in
push
ret
movsl
cld
xor
das
lret
inc
sub
mov
fiadds
out
aas
jmp
push
sub
adcb
xor
stc
inc
loope
jmp
mov
notb
arpl
lods
add
push
iret
mov
and
push
sbb
out
or
insb
clc
insb
and
hlt
dec
aam
dec
adcl
aam
and
jo
adc
nop
add
and
lsl
lods
mov
push
popa
cmpsl
or
add
sub
dec
inc
sub
cmpsl
insb
mov
add
sbb
repz
xchg
out
pop
xchg
lret
and
or
and
insb
pusha
xlat
add
fadds
push
je
sub
adc
inc
cltd
xor
dec
movsb
add
aas
or
add
dec
sbb
xchg
imul
mov
pop
test
push
mov
bndldx
push
test
mov
aad
or
gs
repnz
push
xchg
mov
shrb
js
add
sarb
pop
cmp
sti
and
daa
add
add
pop
jo
test
and
jl
inc
inc
aad
push
jns
add
fs
outsl
sbb
es
subl
stos
inc
int
inc
fiaddl
subl
mov
fs
dec
sbb
xchg
insl
outsl
cmp
lcall
pop
xchg
pop
mov
icebp
lcall
inc
test
dec
negl
orb
flds
es
inc
mov
inc
and
fs
xchg
sbb
popa
sbb
es
mov
jle
or
lea
cli
dec
or
je
popa
test
mov
orb
cld
test
imull
ret
or
movsb
or
fmuls
pop
fs
or
les
test
test
cld
sahf
out
notb
pop
aas
mov
adc
adc
xor
lahf
add
mov
pop
inc
lea
jg
sbb
adc
sbb
add
add
sbb
mov
dec
pop
or
or
ret
pop
push
xchg
or
es
or
sbb
and
stos
xchg
lock
xchg
test
lods
in
sbb
mov
pusha
add
fcmovbe
pop
cs
outsl
lea
int3
in
jmp
aas
pop
inc
lods
mov
xor
push
add
in
sahf
sub
adc
out
mov
fsts
push
push
fisubl
mov
int3
mov
mov
jge
add
jno
ss
inc
insl
push
fimull
push
xor
or
sub
mov
ret
jne
push
aam
lock
insb
or
mov
aas
insl
jb
pop
xchg
jecxz
sub
pop
xchg
mov
xchg
je
nop
cmpsl
jne
xor
xchg
or
aaa
add
adc
push
xchg
call
fbld
mov
mov
xor
test
xchg
jecxz
cltd
sbb
cmp
sahf
fs
xor
lcall
push
mov
xor
jl
jle
addl
test
dec
inc
ret
ds
jae
mov
xor
jnp
push
and
and
and
mov
sbb
and
xor
sub
rcrb
add
mov
sbb
xor
jns
fdivrl
mov
out
inc
ret
or
xchg
mov
cltd
xor
rolb
pop
mov
stos
mov
call
outsb
test
popa
mov
pop
push
rcrl
xor
shlb
call
mov
into
sarl
or
lock
pop
orl
pop
mov
mov
inc
sub
cmc
scas
jmp
mov
aam
in
xchg
cpuid
pop
and
jns
mov
es
push
ret
sbb
xchg
sbb
je
jge
gs
add
pop
mov
insb
fidivs
add
int3
jecxz
dec
sbb
or
inc
jbe
xchg
iret
prefetch
add
out
ds
test
inc
jecxz
mov
mov
push
out
rclb
adc
pop
adc
cwtl
pop
sbbl
adc
cmp
add
test
inc
inc
stos
inc
dec
pop
sub
pushf
lret
push
xchg
dec
repnz
pop
xlat
xchg
push
movsb
xchg
jne
push
movsb
mov
in
or
mov
and
and
xlat
push
cmp
xor
push
stos
inc
int3
xor
sarl
jb
add
mov
nop
rorb
or
push
pop
jne
mov
pop
xor
jmp
lods
push
adc
lahf
test
mov
or
or
xlat
fisubs
shr
cld
and
or
imul
mov
cmp
call
std
fcomps
bound
out
push
sub
xchg
pop
cmp
adc
iret
xchg
cmp
pop
xor
adc
mov
ret
mov
repz
xchg
mov
mov
fsubs
roll
js
sbb
pause
mov
out
enter
add
cmp
push
out
sub
push
out
lock
cmpsb
sbb
inc
push
cmpl
add
das
cmp
fs
test
cmp
lock
lods
xor
add
mov
call
ret
push
inc
cwtl
xor
testl
popf
nop
push
rol
ret
in
pop
sysret
jge
sub
addr16
ret
push
fwait
inc
inc
fcom
add
sub
adc
pop
in
push
push
xor
lods
xchg
cmp
cmp
mov
cmp
mov
out
xor
ss
jl
sbb
pop
jge
mov
push
and
push
shrb
and
lods
rolb
clc
ja
mov
mov
or
cltd
popf
in
inc
rclb
and
adc
ljmp
cmp
xor
das
mov
inc
popf
inc
or
sbb
nop
jp
adc
pop
hlt
add
xchg
inc
inc
les
mov
test
mov
in
jge
adc
mov
pop
pop
mov
loopne
adc
lock
mov
fmull
loopne
call
or
call
and
or
mov
outsl
pushl
or
roll
cwtl
test
test
ffreep
addb
sbb
or
or
add
push
and
decl
test
les
mov
xor
jle
rclb
fcoml
int
movsb
mov
mov
cmp
fldt
and
pop
xlat
push
or
daa
mov
or
ljmp
jg
in
test
push
dec
mov
fsubrl
in
add
sbb
push
and
enter
xchg
or
rclb
out
cs
scas
movsl
dec
mov
adc
dec
pop
pop
or
sub
pop
add
js
aam
add
fdivrl
lock
test
push
or
fsub
nop
shlb
xchg
or
imulb
repz
das
sbb
insl
cwtl
inc
repnz
in
xlat
inc
les
or
add
xor
int3
push
inc
f2xm1
xchg
jb
rol
adc
mov
add
and
xchg
fidivs
mov
lahf
loop
pop
add
in
lock
in
push
in
nop
inc
sbb
inc
cmp
pop
or
and
cmp
and
add
adc
add
mov
sbb
mov
aam
rorb
es
psllq
lea
pop
sub
andl
push
fldt
and
stos
and
adc
jb
or
mov
ret
aam
setp
sub
dec
mov
popa
cmp
add
dec
mov
mov
add
test
je
test
xchg
jne
lock
pop
adc
mov
xchg
xchg
addr16
or
adc
adc
enter
adc
xor
mov
push
dec
xor
aam
or
mov
mov
jnp
fimull
xlat
stc
pop
jecxz
cltd
jne
xchg
or
inc
jle
pop
mov
mov
sbb
xchg
cmp
push
adcb
lock
lds
and
imul
test
push
ss
mov
cmp
add
cmp
push
cmp
push
inc
int3
add
inc
xor
lret
xchg
xchg
cmp
sbb
cmp
out
cmpsl
jecxz
jl
ds
push
fcom
sub
cmp
scas
sub
xchg
xor
rolb
jnp
add
lret
mov
rcl
leave
add
inc
cmp
dec
sbb
pop
mov
dec
lcall
push
pop
out
dec
lahf
jns
out
icebp
sub
and
aas
xchg
lock
pop
ret
fwait
cmpsb
pop
push
aas
push
sub
shr
cmp
mov
jl
mov
adc
aaa
les
inc
add
pop
cmp
sbb
addl
out
loopne
jg
dec
jno
and
stc
sbb
mov
or
jmp
jno
nop
or
iret
mov
pusha
int
test
out
push
roll
add
lock
fdivr
jl
or
sub
mov
push
jmp
push
lock
bnd
loope
mov
popf
dec
pop
or
mov
and
test
jae
jmp
test
ret
mov
pop
or
xchg
sub
enter
push
inc
shlb
cmp
pop
xchg
neg
or
dec
out
add
fdivl
test
rcl
pop
outsl
inc
test
xchg
or
sbb
ror
repnz
sub
push
lods
xchg
test
or
jo
pushf
xchg
pusha
call
push
punpckhbw
shr
and
cmpxchg
dec
jnp
xor
jo
daa
add
add
test
fistl
aam
push
imul
mov
pop
jecxz
ljmp
mov
subb
pop
mov
cmp
mov
outsb
adc
xchg
dec
xlat
xor
dec
or
mov
pop
mov
xor
jmp
rclb
in
call
sub
mov
and
sub
push
mov
pop
push
std
push
or
push
adc
and
nop
adc
rclb
jmp
add
cmp
cld
fiaddl
jmp
add
les
mov
scas
xor
add
pop
imul
and
add
addb
fs
xchg
inc
or
xor
pop
enter
xchg
in
dec
popa
cmpsb
push
cmpsl
and
or
sub
cmp
pop
xchg
icebp
pop
mov
aam
dec
daa
add
xor
and
xor
sbb
lret
push
xchg
push
add
push
rolb
jne
ret
sub
pop
and
movsb
subb
or
loopne
mov
movsb
addb
or
orb
jnp
lea
sahf
or
xor
je
lea
adc
dec
push
mov
gs
mov
xchg
adc
in
out
push
pusha
inc
xchg
pop
sbb
lret
ret
out
mov
cmp
call
adc
push
inc
les
rorb
str
xchg
and
and
jae
add
addb
jle
inc
pushf
push
outsb
xor
push
push
stos
lret
xor
inc
pop
jnp
mov
sub
pop
add
add
outsl
iret
push
add
push
cltd
cmp
sbb
push
stos
add
adc
sbb
inc
cmp
sub
xchg
bound
push
les
adc
or
mull
and
inc
xchg
pop
xchg
icebp
test
dec
inc
mov
addr16
push
cltd
in
andb
or
test
pusha
and
xchg
or
jg
xchg
es
daa
or
adc
add
sbbl
pusha
pop
add
and
int
add
outsb
ret
lea
sbb
jmp
push
add
test
pop
jl
and
pop
mov
cmp
mov
push
add
sub
aaa
daa
xchg
dec
lds
xor
mov
sub
and
xlat
addl
je
inc
mov
adc
sbb
mov
sbb
adc
repnz
orl
xor
cmpl
imul
fiaddl
mov
and
fwait
push
add
movsl
dec
cmp
test
addb
push
sbb
push
inc
mov
adc
pop
scas
pop
dec
mov
int
pop
push
loopne
cwtl
pushf
xor
xlat
std
sbb
inc
sub
rcll
pop
fbld
call
xchg
lret
cmpl
sbb
arpl
inc
xor
adc
cmc
mov
inc
sub
xchg
in
mov
sub
popa
sub
call
and
test
jo
aaa
gs
popf
adc
rcll
or
adc
bound
or
or
loope
lret
cwtl
sub
jnp
icebp
xchg
inc
sbb
pop
jle
stc
sti
cmpsb
imul
das
cmp
ja
mov
xor
nop
insb
movsb
xor
xor
xchg
addl
cmp
xchg
pushf
jl
test
sub
lock
lds
cmp
in
lret
cmp
mov
out
test
mov
mov
jae
jnp
pop
jno
mov
jno
lods
clc
loope
push
lods
roll
pop
mov
pushl
xchg
push
cmp
orl
shl
pop
add
and
enter
pusha
dec
scas
into
push
push
and
push
adc
add
mov
dec
fnstsw
subl
xor
enter
repz
pop
pop
inc
xor
add
pop
push
pusha
inc
shr
or
mov
rorl
jl
cmp
push
or
sbb
in
cwtl
and
cltd
mov
arpl
testb
inc
stos
cli
mov
add
push
or
or
cmp
xorl
cmp
inc
aam
fs
in
mov
adc
dec
sub
or
mov
dec
xor
push
adc
push
xchg
mov
cmpb
push
lcall
popf
inc
xor
sbb
jecxz
push
xchg
pop
mov
das
enter
dec
ds
sub
test
andl
inc
dec
xor
and
xchg
ljmp
pop
test
ds
inc
je
xor
mov
adc
xor
dec
ja
adc
sbb
sbb
add
xchg
mov
test
ficoml
add
inc
push
push
adc
in
mov
or
pop
ret
push
mov
push
push
je
add
and
lret
add
sub
mov
inc
or
nop
push
rclb
or
hlt
xlat
sub
push
or
cltd
sbb
add
pop
mov
or
sahf
inc
add
push
dec
rorb
or
push
mov
lret
or
clc
shrb
sbb
cmp
jo
adc
adc
or
sub
mov
divl
cld
sub
aas
push
or
ret
ja
pop
mov
sti
pop
xchg
cmp
rcr
push
xchg
ret
scas
pop
rclb
in
arpl
js
or
cld
andb
jns
and
test
cs
and
movsb
or
js
add
pop
movsb
pop
push
sub
dec
fsubl
arpl
pop
push
pop
or
or
xchg
movsl
ret
mov
pusha
sub
sbb
xchg
popa
sub
mov
xor
adc
ja
addb
add
push
rol
sbbb
mov
cld
xchg
mov
ret
adc
inc
jle
sbb
pop
xor
lock
rcr
push
and
pop
dec
xchg
cmpsb
dec
jns
or
test
xlat
fsubrs
mov
sub
sbb
push
mov
outsl
adc
inc
push
add
repnz
mov
cli
ret
or
inc
sbb
out
andl
or
push
add
push
xor
jg
mov
add
sub
jbe
push
mov
cmpb
mov
cmp
xchg
sti
inc
arpl
xchg
and
cmp
icebp
pop
fwait
ja
aam
push
xchg
xchg
rolb
je
or
js
adc
push
xor
push
leave
imul
in
test
mov
nop
fs
pop
or
adc
in
push
int3
mov
sub
test
in
xor
push
mov
mov
test
or
pop
shrl
sbbl
or
add
sbb
fstpl
and
or
shlb
xor
hlt
pop
dec
adc
loope
icebp
clc
je
cmp
sbb
pop
es
mov
add
clc
mov
fcompl
add
mov
jp
test
daa
or
sbb
sti
fisubs
out
jl
mov
fs
or
xchg
arpl
mov
js
mov
into
repnz
idiv
jbe
lahf
xor
xchg
mov
stc
pushf
sbb
aas
dec
lea
add
cmp
std
negl
sub
cmp
dec
sub
pop
idivl
jmp
mov
or
movsb
xchg
push
or
push
faddl
enter
fcom
sub
fdivrp
mov
mov
and
lea
push
adc
rcrb
mov
cmp
sbb
xchg
push
ret
pop
push
rcrl
jl
jmp
push
std
cmp
mov
pop
cvtdq2ps
into
clc
fidivl
jmp
sbb
lods
add
add
sarl
movsl
mov
loopne
dec
lea
push
pop
movb
insl
shll
and
and
call
sub
out
push
cmp
in
outsl
xor
movb
mov
adcl
xor
and
mov
jle
adc
cli
pop
sub
push
sub
mov
enter
xchg
dec
aaa
je
mov
adc
aaa
arpl
ja
mov
test
adc
jne
lcall
inc
test
jno
pop
nop
fimuls
sbb
in
sub
pop
or
sub
pop
push
jae
xor
bound
clc
dec
lock
rolb
xor
cmp
ds
add
inc
push
inc
cmp
dec
insl
xor
cmp
adc
inc
add
ret
and
cmp
je
add
sub
test
loope
or
cmp
pop
pop
shlb
inc
and
adc
mov
xchg
outsb
and
or
add
cmp
int3
jo
ror
push
push
jo
fmuls
pop
add
add
add
pop
mov
or
notb
sbb
push
pop
stos
mov
icebp
adc
add
pop
cmp
xchg
or
push
and
xchg
adc
sbb
adc
add
push
and
and
add
add
cs
gs
push
push
or
xor
bswap
inc
dec
jnp
mov
mov
test
fs
mov
rcrl
pop
pop
fs
mov
test
icebp
outsb
and
lcall
nop
or
sarb
or
or
add
push
mov
insl
mov
push
or
sahf
pop
bswap
shll
adc
fsubrs
cwtl
pop
cmp
inc
sbb
pop
push
jmp
paddusw
shld
test
sbb
pop
xchg
icebp
adc
fwait
jo
xor
cmpsl
arpl
mov
adc
cmp
test
cmc
shr
sarb
fdivp
and
rcl
lock
xchg
adc
leave
mov
in
adc
adc
nop
inc
fcmovbe
add
adc
cmp
adc
push
and
cld
jb
xor
push
dec
cmp
push
sub
and
adc
pop
adc
xor
sbb
aaa
mov
xchg
in
fistl
loopne
adc
and
jl
cltd
mov
add
shll
push
decl
xor
iret
xchg
dec
adc
sbb
sbb
lds
mov
mov
pop
xchg
mov
xchg
hlt
out
add
mov
ss
data16
add
push
rcr
dec
and
bound
mov
movsl
add
cli
mul
into
pop
inc
mov
add
jecxz
dec
mov
cmp
popa
xchg
in
aad
outsb
aaa
cmp
jge
sahf
call
cmpsl
cld
mov
dec
cmp
andb
xchg
icebp
fmull
add
jmp
push
mov
in
sbb
adc
xchg
lock
mov
pop
add
stc
xor
mov
inc
lahf
rcl
xor
leave
mov
sub
hlt
je
dec
sbb
xor
dec
jbe
mov
jo
cmp
sbb
mov
inc
sub
dec
inc
dec
mov
ss
or
imul
push
sub
add
inc
cmp
pop
nop
lods
pop
cmpsl
or
push
xor
mov
xor
push
cs
push
test
xor
fcoml
and
add
cmpsl
lods
cmp
sub
orb
xor
test
dec
mov
push
adc
xchg
jo,pt
clc
push
push
mov
push
cwtl
add
les
mov
push
pop
fstpt
push
push
pushl
popf
cmpsl
fnstsw
jle
push
jb
or
push
xchg
xor
xlat
divb
add
mov
test
dec
movsb
mov
jno
mov
sbb
in
add
ret
outsl
push
dec
jl
adc
fldl
fsubl
push
dec
inc
sbb
mov
inc
pushl
push
adc
mov
leave
jae
mov
add
mov
add
imul
dec
and
cmp
fdivrl
dec
ds
icebp
push
push
dec
rol
sbb
inc
and
sub
rolb
aaa
push
inc
into
popl
cmpsl
dec
loop
or
testb
add
push
add
add
add
das
and
scas
add
jb
xorl
pop
pop
rorb
jg
dec
dec
add
jns
sbbb
push
mov
add
inc
and
orb
imul
xchg
mov
enter
in
xor
nop
outsl
cwtl
bound
xchg
addb
push
adc
scas
insl
leave
pushf
add
insl
outsb
cmp
push
sahf
lahf
clc
add
aam
xlat
je
inc
pop
test
mov
jmp
inc
lock
pop
xor
mov
jmp
push
push
cmp
cmp
add
cmp
dec
orl
roll
bound
fwait
push
cmpb
sbb
xor
nop
test
pop
out
xor
inc
xchg
aaa
rorb
push
xchg
push
inc
ja
dec
xor
subb
shrl
rcrl
cmp
orb
xor
cmpsl
out
or
mov
mov
inc
xchg
and
movsb
mov
inc
push
mov
add
data16
mov
sub
adc
push
pusha
lea
xor
add
and
lahf
pop
mov
cmp
in
or
xor
xchg
fisubrl
cld
jge
mov
pop
cwtl
push
xlat
sbb
lods
rorl
lahf
push
mov
push
pop
inc
adc
pop
pop
testb
push
xor
mov
add
jb
mov
les
lahf
je
jbe
call
inc
popaw
es
adc
iret
inc
popa
mov
xchg
pop
sbb
sub
jnp
or
push
mov
cwtl
ret
jl
push
test
mov
add
cmc
xor
mov
insl
cmp
jae
jae
sahf
cwtl
xchg
dec
ja
and
pushf
and
mov
mov
insl
dec
cmp
mov
sahf
loop
das
mov
pop
pusha
sarl
or
dec
add
clc
add
push
hlt
insb
rolb
pop
push
cltd
ret
add
push
incl
test
cmp
jne
movb
add
jmp
test
push
mov
fisubrs
imul
iret
inc
mov
pop
sub
hlt
add
add
cs
inc
sbb
aas
push
and
je
add
adc
cmp
nop
cmp
nop
stos
dec
shl
fnsave
js
pusha
rcr
nop
mov
sbb
and
inc
bound
sub
pop
and
stos
and
stos
xor
jno
aam
loopne
push
sarl
push
dec
adc
nop
loope
push
mov
aas
imul
testb
add
mov
int3
data16
mov
addr16
inc
push
pusha
push
mov
push
dec
sub
push
mov
xor
push
push
or
pop
loopne
jg
repnz
das
aad
fisubrs
cs
jg
pusha
adc
or
movsl
adc
xchg
mov
cmp
xlat
add
sbb
jl
pusha
jo
add
push
aad
add
sbb
ficomps
js
out
pop
mov
in
rcr
push
iret
and
jnp
pop
jmp
mov
sarb
jp
cmp
je
sti
fninit
jae
mov
jne
sahf
outsl
cmp
fs
sbb
lods
dec
shrl
leave
adc
adc
aad
cmp
jmp
sbb
stos
xor
and
jmp
and
cs
inc
gs
data16
sbb
in
mov
es
mov
lahf
out
std
cmp
cmp
ja
push
sub
jno
inc
cwtl
dec
lods
pop
xchg
and
call
or
add
add
je
sbb
mov
pop
push
daa
je
je
int3
out
add
je
or
inc
pop
and
xor
adc
sbb
sarb
movsb
inc
pop
xor
adc
pushf
addb
or
mov
shrb
or
in
out
xor
mov
push
je
add
dec
adc
sbb
jg
xchg
mov
jns
push
shlb
pop
mov
icebp
xchg
or
xchg
fsubrp
mov
and
bound
xor
sbb
mov
inc
jecxz
ss
sbb
inc
pop
push
push
cmp
fiaddl
inc
cs
jns
imulb
pusha
or
rcll
lret
sub
leave
or
mov
mov
cmp
outsl
jp
mov
mov
add
sbbl
imul
loop
push
inc
nop
call
pusha
mov
xchg
shrb
movups
sbb
push
cmp
jl
adc
imul
rcll
pop
sbb
movsl
sub
shrl
shlb
inc
faddl
adc
mov
jbe
lea
cmp
jne
mov
scas
imul
int
in
sub
inc
mov
xchg
mov
fdivrs
inc
jmp
jmp
cmp
jmp
shrb
xor
xor
adc
fsincos
je
sub
mov
icebp
rcr
movsb
jns
pop
jmp
mov
pop
push
jmp
adc
jmp
scas
jne
and
xchg
jno
or
mov
lret
and
test
fdivs
push
dec
js
pop
insl
or
sub
insb
stc
mov
and
sbb
xchg
cmp
and
and
ret
sub
sbb
mov
or
and
xchg
add
xchg
xor
mov
clc
imul
pushf
jne
and
cmp
or
sub
xchg
sbbl
cmp
pop
push
add
clc
pop
ret
and
ret
adc
addl
arpl
xorb
int
mov
add
inc
or
or
push
cmp
pop
or
cmp
xchg
mov
mov
cmp
xchg
in
sub
add
popf
fsts
imul
mov
test
xchg
lods
fwait
inc
sarb
sbb
dec
mov
cmp
mov
xchg
or
jb
into
cmp
xchg
push
ret
nop
sub
sub
pop
inc
or
mov
or
dec
adc
rclb
adc
mov
aaa
ss
and
ret
cwtl
dec
rcrl
xchg
or
fdivl
adc
inc
fisttpl
rcll
rcrb
pop
jle
xor
enter
mov
add
adc
add
and
and
aam
loopne
cmp
test
adc
mov
push
inc
sub
call
pop
test
add
xor
xchg
xchg
inc
pop
xchg
aam
add
scas
mov
and
aaa
rolb
jmp
adc
pushf
inc
and
sub
clc
jns
mov
xchg
ret
aas
or
sub
dec
pop
mov
cmp
jne
lea
mov
push
jmp
dec
rcr
popf
xchg
pushf
dec
je
inc
dec
push
mov
cmp
adc
add
shlb
jb
addr16
std
add
push
mov
inc
sbb
in
sar
push
lods
rcl
mov
add
sub
jle
and
iret
mov
xor
push
es
fsub
mov
jecxz
flds
mov
add
inc
adc
sub
pop
rcrb
jp
sbb
add
lods
test
enter
ret
xchg
push
pop
mov
push
and
add
pop
mov
and
push
mov
movsl
roll
or
scas
lods
popl
ljmp
and
fwait
add
nop
or
mov
or
popf
cli
xor
mov
test
lret
nop
arpl
push
sbbb
pop
ficomps
sub
nop
add
ret
daa
add
adc
loope
bound
fcomps
fs
pop
sub
lock
add
inc
rolb
lcall
popa
push
pop
mov
xchg
shlb
mov
cmpsb
sbb
sbb
add
pop
shlb
push
or
mov
mov
stos
lcall
push
jb
cmp
xchg
movsb
fcompl
aam
add
mov
les
push
jp
pop
stos
push
or
outsl
pop
mov
mov
mov
add
shl
inc
sbb
pop
loope
mov
pop
imul
xchg
xchg
xchg
bound
push
inc
loop
jl
add
jo
rorl
and
pop
sbb
or
adc
ret
sbb
loopne
xchg
cwtl
in
jl
call
sarb
adc
add
jo
out
ja
adc
jo
jne
int
or
sub
mov
pop
jp
shlb
es
stos
inc
cld
js
add
cld
mov
push
jbe
mov
cmpsl
push
jle
or
push
fs
inc
sub
shll
xchg
sbb
pushf
aam
add
or
xchg
mov
mov
cmc
push
push
lods
dec
insl
ja
loopne
inc
pop
add
clc
adc
fadds
jg
imul
push
out
cltd
mov
fcom
cmpsb
shlb
xor
or
cmp
or
cmpb
sub
cld
lret
insl
ret
je
aas
or
fwait
pop
inc
xor
scas
cmp
insb
push
inc
out
pop
roll
push
icebp
push
shlb
or
addl
cmpl
test
in
pop
adc
fadds
clc
adc
pop
punpcklbw
jmp
jge
xchg
rcrb
jbe
and
jecxz
cli
faddl
rorb
lock
push
jne
pop
xlat
mov
fmuls
cmp
jae
cmc
mov
push
pop
adc
mov
mov
add
push
xchg
xor
shrb
icebp
pop
push
adc
xlat
rcrl
test
add
js
push
cwtl
je
push
jnp
je
push
cli
cmp
pop
and
int
push
stos
mov
fs
xorb
sub
outsb
in
gs
sbb
or
push
int
jecxz
cmp
and
pop
sub
sub
sbb
orl
pop
xchg
mov
sub
hlt
in
mov
shrb
pop
dec
ret
popa
add
je
mov
jae
adc
xchg
mov
imul
xchg
lret
mov
push
xchg
out
push
std
add
fs
fstl
adc
mov
jg
cmp
in
sbb
sub
push
push
add
xchg
scas
and
fsubl
jecxz
cmc
adc
ljmp
lods
dec
scas
les
bound
loope
bound
xor
sbb
seto
nop
sbb
imul
popa
mov
sub
orl
lock
pop
pop
sbb
mov
aam
sub
and
loopne
out
push
push
mov
adc
mov
pusha
int3
push
inc
adc
movsl
in
and
jmp
emms
fnstenv
mov
mov
ret
and
sub
imul
cmp
movsl
test
aad
or
test
jp
mov
jmp
and
add
push
cmovbe
ss
cmp
popa
cld
mov
add
lret
mov
jecxz
add
test
add
imul
mov
add
pop
add
cmp
clc
xchg
xchg
cltd
xor
push
arpl
in
adc
mov
adc
inc
xchg
insl
xlat
cltd
cwtl
jno
daa
mov
mov
and
mov
pop
and
jne
mov
cltd
and
popa
xchg
movsl
scas
sti
mov
inc
ljmp
push
mov
push
jb
cs
fldt
mov
dec
popf
sbb
mov
or
add
out
test
sbb
incl
jmp
hlt
and
pop
cmp
mov
and
int3
xchg
xor
lock
mov
xchg
adc
cwtl
inc
ss
lret
mov
xchg
adc
push
dec
xor
les
sahf
sarl
out
fdivrs
test
insb
dec
mulb
or
mov
ret
add
cmp
mov
adc
push
and
jae
mov
cmp
jle
out
pop
xchg
mov
add
xchg
ljmp
jmp
push
inc
mov
inc
jp
dec
mov
pop
cmp
push
js
adc
lds
sbb
mov
or
xchg
adc
bound
cmp
pusha
dec
xchg
mov
inc
add
mov
sub
xchg
mov
push
jnp
arpl
and
mov
and
jge
arpl
orl
push
add
cmp
sub
jo
test
or
cld
shl
xchg
je
fcom
dec
add
lods
sbb
push
sbb
xor
jle
loopne
cmp
xlat
fcoml
shrl
fistps
push
add
js
mov
mov
push
add
sub
add
popa
adc
or
in
inc
jg
repz
inc
out
push
ja
jg
jmp
mov
inc
mov
scas
xchg
mov
andl
sub
insl
sub
mov
inc
les
iret
xor
loopne
movsl
insl
fucomip
fnstcw
inc
popa
es
xchg
or
and
arpl
mov
add
mov
sbb
inc
or
push
push
fcmovnb
adc
mov
pushf
xchg
enter
aaa
sub
xor
iret
add
call
xchg
ja
cmc
jmp
int3
inc
adc
or
movsb
sar
xorb
sar
sub
jge
add
out
mov
cmp
jo
and
and
pop
and
add
lods
xchg
call
sbb
pop
stc
push
push
cmc
cmp
add
or
jmp
push
shll
add
cmc
xor
add
push
pop
or
jmp
mov
and
inc
pop
pop
fldl
add
in
je
sbb
cmp
adcb
jl
lcall
sbb
mov
xor
or
aad
add
or
or
mov
jno
mov
push
adc
imul
add
mov
sub
xor
or
push
push
push
shl
push
dec
sbb
mov
xchg
in
fisttps
arpl
pop
inc
mov
mov
or
add
fidivrs
and
sti
rcl
xchg
lret
jae
cmp
push
filds
insl
js
sbb
cmp
and
cmp
enter
mov
cmp
ljmp
sbb
mov
loopne
mov
into
dec
cmp
add
mov
imul
inc
les
testb
pop
jge
sbb
jo
ss
pop
aaa
dec
dec
dec
add
sub
sub
xchg
pop
cltd
nop
push
xchg
xchg
dec
rclb
pop
fs
push
jns
inc
push
and
movsb
lret
adc
stos
and
jb
andl
push
das
or
xor
insl
push
pop
and
shrl
pusha
out
insl
inc
test
test
push
mov
test
sbb
sti
jg
aaa
movsb
popa
enter
or
pop
stc
or
dec
test
or
adc
or
mov
sub
mov
out
shrl
cmpsl
lods
rcll
mov
or
jle
stos
lods
filds
push
push
movsb
or
outsl
push
xchg
in
jno
int
dec
adc
inc
or
arpl
lret
movl
sahf
cmovo
inc
mov
divb
movsb
mov
mov
notl
adc
mov
sub
jg
xor
out
add
push
pushf
or
mov
add
fnstsw
xchg
testl
dec
enter
push
adcl
adc
inc
test
mov
xor
iret
das
adc
paddusb
push
push
jns
adc
adc
mov
popa
flds
mov
add
mov
ja
ret
adc
aam
add
add
jns
jo
pop
xor
push
xchg
jo
insb
shl
push
test
aaa
and
pop
cwtl
pusha
in
loop
divl
dec
sub
std
jmp
adc
mov
nopl
sti
rolb
repnz
sbb
dec
lods
xchg
jb
and
mov
sbb
add
xchg
xchg
add
je
mov
sbbb
mov
out
sbb
mov
add
cmp
jg
test
rorl
call
xchg
sbbl
enter
scas
mov
sbb
mov
mov
xor
mov
or
pop
push
jcxz
aad
pcmpgtw
mov
cmovno
test
mov
dec
pusha
jge
xor
jno
and
sbb
mov
dec
or
test
icebp
fiadds
sbb
sbb
xor
jle
test
es
repz
in
mov
ljmp
push
push
outsl
or
or
roll
sub
popf
js
mov
jbe
das
pusha
sub
mov
inc
enter
or
adc
sub
jne
cwtl
push
sbb
add
push
cmp
sbb
rolb
lret
lcall
sbb
nop
aam
mov
xor
add
sub
test
or
pop
and
inc
aas
out
mov
stos
sbb
cwtl
or
and
inc
data16
add
sarl
xor
and
pop
cmp
push
mov
jo
add
mov
cmpsl
cwtd
xor
add
pop
jnp
cli
and
sbb
xchg
test
rolb
jmp
dec
ja
sbb
pushf
pop
jae,pt
sbb
push
xlat
mov
loopne
jle
rcrb
mov
sarb
mov
add
and
push
lea
adc
sarl
and
test
xor
adc
call
adcl
pop
cmp
add
fisubl
fcmovnb
pop
incb
roll
mov
sbb
in
xchg
inc
push
or
sti
addl
adc
sbb
lcall
inc
sub
clc
into
and
cltd
sbb
js
fs
add
jne
and
or
adc
push
sti
xlat
aam
ret
pop
xchg
sub
jns
fisttpl
sub
sub
xchg
aam
and
popa
sub
dec
fidivl
pop
xlat
or
cmp
sets
das
xor
cmpsb
xchg
shr
push
scas
adc
sbb
sti
add
dec
jmp
jns
pop
enter
enter
dec
pop
xor
movsb
xchg
mov
aam
pusha
xlat
or
push
push
push
push
jbe
movsl
xor
xchg
xchg
push
ss
xchg
add
add
mov
addl
stos
xor
cltd
fs
add
pop
sbb
fs
addr16
or
lods
or
inc
adc
pop
or
js
xor
lret
fcompl
js
add
or
push
lea
cltd
mov
ljmp
add
in
fmul
inc
and
or
and
jb
inc
and
xchg
xor
repnz
and
lea
mov
or
mov
mov
inc
sbb
inc
mov
and
add
cmp
lea
hlt
add
jle
lcall
push
sub
mov
add
orl
add
mov
adc
bound
xchg
push
call
push
cmp
xor
and
add
daa
sub
psubusb
bound
dec
add
mov
adc
xchg
js
push
ret
pop
and
fisttpll
jl
bound
inc
inc
add
push
test
inc
test
push
mov
fcmove
in
adc
jo
jnp
fs
adc
sbb
mov
and
push
xor
adc
adc
inc
jo
and
sbb
adcb
clc
mov
mov
daa
cmpsb
xor
cli
pop
push
cwtl
fidivrl
inc
xor
adc
inc
inc
sub
pop
icebp
xchg
xchg
pushf
aaa
je
push
mov
or
dec
or
or
adc
add
adc
push
sub
pusha
push
sarb
mov
popf
fists
inc
movsl
inc
add
packssdw
orb
rcll
enter
push
addl
push
mov
push
shll
mov
inc
enter
sbb
or
outsb
pop
call
mov
add
stos
cltd
shrb
fwait
sbb
sbb
div
dec
adc
inc
hlt
ffreep
dec
popf
and
cltd
and
pop
and
push
insb
dec
stos
inc
int3
popa
add
cmp
xchg
outsb
sub
daa
iret
aad
fmuls
sbbl
fcoms
push
push
add
cmp
add
lret
enter
outsb
inc
outsb
imul
loopne
sbb
or
or
and
jmp
and
and
or
add
push
notb
adc
loopne
add
aam
sbb
sbb
xchg
mov
leave
jnp
push
arpl
and
hlt
xchg
inc
out
pop
nop
fcoms
cmpsb
and
sub
sub
inc
imul
push
xchg
xchg
pop
daa
and
adc
push
jo
pop
sub
arpl
leave
mov
sbb
add
ret
or
adc
adc
jne
and
push
leave
cmpsl
or
and
adc
and
dec
pushf
xor
inc
sarl
mov
adc
mov
cmpsl
enter
out
das
ret
or
and
lds
adc
xchg
lahf
dec
mov
push
lret
jbe
sub
push
rolb
arpl
popf
push
adc
jo
and
or
pop
mov
shll
scas
xlat
fimuls
pop
add
mov
popa
and
mov
je
and
pusha
sub
hlt
xchg
pop
pop
sar
cmpsb
sub
sbb
cmp
test
lahf
or
loope
add
pop
push
cmpl
rorb
add
mov
outsb
and
pop
enter
test
mov
push
leave
or
sar
cltd
sub
sub
mov
sub
loopne
mov
jo
pop
loope
add
add
xchg
mull
aam
pop
dec
push
xchg
xor
or
shl
cwtl
mov
stc
xor
inc
fwait
push
pushf
mov
xlat
sbb
outsb
jb
ja
and
gs
outsb
cld
test
pop
in
or
push
push
pop
dec
and
in
cmp
sub
imul
sbb
adc
rorl
sbb
add
imul
ret
mov
pusha
mov
leave
push
shlb
lods
xchg
cli
adc
fisttpll
push
sub
sbb
ret
or
movl
xor
mov
cmc
dec
sub
loop
adc
push
in
lcall
adc
sub
xor
in
jo
add
lea
js
ja
icebp
mov
xor
adc
test
addr16
daa
add
pop
test
push
pop
and
lret
xorb
sub
nop
xor
and
daa
xorb
cli
pop
mov
and
dec
or
nop
shlb
mov
movsl
repz
push
mov
ret
jecxz
fs
add
inc
push
push
stos
jnp
lea
push
adc
test
lahf
aam
and
add
jg
notl
clc
push
fmuls
pop
and
cmp
push
cmc
xchg
xchg
int
imul
mov
and
faddl
mov
push
test
pop
xor
xchg
adc
add
fstpl
and
cmp
adc
insl
imul
or
adc
push
fcmovb
cmp
lea
mov
js
inc
add
js
mov
movsl
push
add
enter
out
mov
jge
iret
push
scas
push
jne
cld
or
aam
xchg
divl
lret
cmp
add
ret
stos
dec
sub
cmp
push
imul
adc
fadd
test
mov
pop
and
dec
pop
or
js
cmp
add
je
pusha
pop
sbbb
fimuls
shr
xchg
popa
cmpb
dec
js
insl
or
sbb
pop
jmp
loopne
and
or
adc
adc
mov
mov
cmc
push
mov
inc
aad
iret
orl
and
push
in
sub
add
aaa
xchg
cmp
nop
sub
push
xor
ret
push
push
xor
or
add
pop
inc
ljmp
std
or
daa
pop
pop
out
or
dec
lea
insl
xor
gs
xchg
mov
pop
gs
push
dec
sahf
and
ja
push
je
cmp
ret
or
adc
rorb
adc
loope
inc
lods
sbb
rclb
pop
movsw
iret
add
jecxz
xchg
mov
insb
mov
aaa
add
aad
enter
rcrb
sbb
enter
dec
lods
or
ja
and
or
mov
lahf
in
pusha
push
sbb
mov
fs
movb
fsub
faddl
repnz
paddq
call
in
adc
in
xor
xchg
inc
add
xlat
and
push
adc
adc
dec
dec
xor
mov
lods
test
and
lret
sbb
stc
inc
scas
jle
in
push
pusha
and
cs
shlb
sbb
test
sub
adc
add
add
stos
mulb
ja
lock
and
sbb
add
dec
bound
push
xchg
dec
push
lcall
in
cmp
adc
sbb
adc
push
or
dec
push
lea
sub
and
xchg
rorl
stos
sub
out
push
mov
xchg
orl
ret
icebp
inc
lcall
jge
push
test
or
mov
sti
scas
and
inc
sub
les
movsl
and
xchg
mov
mov
iret
dec
outsb
add
dec
push
test
or
ljmp
loop
jne
sbb
jno
scas
popf
sub
cmc
adc
mov
fcomps
data16
int3
test
cmp
jb
push
data16
inc
pop
dec
jge
mov
mov
and
into
repz
sub
hlt
or
movb
inc
or
jbe
xchg
sub
cmp
das
es
dec
jge
pop
and
jnp
inc
bound
imull
mov
sub
in
inc
sub
lods
movsl
add
pop
cmc
jnp
mov
cmp
movsl
and
loope
or
add
sbb
xchg
rcr
pop
push
adc
adc
lods
xlat
fnstsw
roll
insl
addr16
adc
lahf
or
cmp
lock
pop
adc
inc
gs
dec
dec
pusha
inc
sti
mov
mov
or
adc
aaa
cmpsl
push
aad
in
cmp
dec
lea
and
xor
add
push
xchg
pop
test
or
jb
inc
push
gs
push
test
xchg
lock
dec
mov
add
push
or
mov
sub
add
jl
jo
pusha
repnz
mov
adc
xor
or
pushf
pop
pop
inc
cmp
xchg
xor
lods
jns
add
or
or
push
cmp
jo
pop
enter
ret
mov
pop
or
iret
dec
inc
movsb
or
popa
cmp
imul
xchg
xorl
add
inc
and
popa
or
dec
or
cmpsb
lcall
lods
mov
cwtl
or
inc
pop
xor
or
sbbl
inc
push
mov
cmc
adc
sbb
sbb
xchg
and
aas
mov
xor
mov
mov
sbb
push
xchg
rorb
push
mov
xchg
push
loope
pop
filds
jmp
pop
xchg
fcoms
sbb
and
stos
pop
or
xchg
dec
sti
pop
shl
adc
pusha
stos
xchg
test
mov
mov
movsl
subl
jmp
cmp
in
jp
xchg
or
and
inc
sbb
and
mov
push
sbb
and
flds
xor
sub
nop
sahf
mov
shlb
jmp
insb
sub
xchg
xchg
andl
daa
or
inc
seto
inc
test
inc
js
in
aas
subb
cmp
or
test
pop
xor
sub
sub
sub
lods
in
cmp
xor
dec
lcall
mov
pop
jmp
dec
jmp
mov
jmp
cmp
or
cmpb
dec
insl
and
sub
inc
iret
adc
push
push
push
add
jmp
or
add
test
outsl
dec
or
pop
aaa
shlb
and
fwait
pop
mov
stos
inc
arpl
adc
xchg
iret
mov
pushf
and
mov
push
xchg
int3
xchg
inc
test
dec
pop
sbb
and
sarl
cmpsb
jo
pushf
pop
cmp
ret
add
arpl
lret
mov
push
repz
and
hlt
lods
jmp
hlt
xor
repnz
inc
mov
orl
lea
push
push
mov
jb
movsb
rol
inc
loope
repnz
jl
jg
test
test
adc
nop
adc
sub
and
jo
mov
adc
in
sidtl
add
daa
inc
push
testb
pop
and
mov
mov
loopne
xchg
xor
fadds
shrb
mov
push
mov
das
adc
fmuls
cltd
xor
adc
push
jp
into
jno
dec
mov
in
pusha
dec
subl
lea
jnp
dec
mov
push
mov
ret
mov
cmp
test
dec
sub
enter
mov
add
call
iret
mov
lds
adc
jle
mov
and
add
mov
js
or
jl
mov
push
adc
jnp
mov
fistl
je
lret
add
mov
lea
lods
int3
cli
xchg
inc
repz
std
mov
or
pop
xchg
test
add
call
pusha
xchg
inc
sub
add
popa
jb
add
arpl
push
push
rorb
stos
and
das
andb
push
adc
or
add
test
mov
mov
leave
loope
jne
or
js
outsl
and
adc
inc
or
aas
in
and
cwtl
jge
push
xchg
cmp
mov
out
push
sbb
hlt
or
lret
xchg
pop
ss
jb
push
mov
lea
push
dec
dec
cmpsl
jmp
sti
cwtl
sub
mov
push
jb
fldcw
out
stos
jne
dec
jmp
push
or
int3
push
adc
mov
or
lds
out
test
add
push
sbb
push
jae
mov
aaa
push
or
push
dec
adc
mov
cmp
clc
mov
leave
subps
lcall
ja
loopne
fsubrl
call
movsb
ds
loop
mov
movsb
movb
mov
add
pand
je
mov
nop
rcll
add
lock
in
xor
test
in
out
cli
pop
ret
je
in
sbb
xchg
inc
push
sub
xor
xorl
xchg
les
mov
dec
inc
and
adc
sub
lea
inc
sbb
pop
or
sahf
adc
push
pop
fwait
movsl
or
add
call
clc
popf
mov
sub
add
xor
ss
push
insb
sub
push
dec
pop
leave
cmp
adc
mov
xor
sub
pop
f2xm1
dec
icebp
pop
adc
int3
insl
inc
cmp
xor
gs
lcall
pop
cmp
and
adc
mov
xchg
fucomi
in
push
outsb
dec
lods
and
in
add
ret
repnz
or
cli
mov
mov
push
mov
in
mov
mov
jp
add
or
mov
clc
xor
pop
test
dec
mov
test
imul
das
or
and
nop
inc
push
imul
sub
cwtl
inc
push
arpl
imul
pop
push
mov
xor
clc
lahf
leave
inc
dec
inc
ret
jbe
popa
adcb
lds
sbb
push
out
or
sti
jbe
lcall
fsubrl
dec
rolb
and
or
push
mov
cltd
mov
pushf
loop
enter
test
nop
dec
lds
pop
icebp
adc
divb
inc
lods
loope
adc
add
dec
and
test
cmp
sub
add
or
stc
sub
rorl
pop
lds
jg
xchg
js
popa
adc
aad
xor
pop
bound
pop
mov
cmpsb
orl
cmpsl
movsb
cltd
test
inc
sbb
add
push
inc
cmpsb
ljmp
es
test
cmp
ljmp
sbb
in
ss
and
fnstenv
cmp
mov
sub
push
sbb
sbb
mov
push
testl
adc
std
das
addb
dec
jmp
sbb
mov
xchg
push
fidivl
mov
out
adc
addr16
mov
mov
push
and
cmpsl
sbb
and
sub
loopne
aaa
xchg
adc
mov
add
inc
movsb
sub
or
cmpsl
ss
sarl
daa
lret
popf
addr16
cmpsl
cltd
mov
sahf
add
in
dec
lahf
mov
inc
add
sub
mov
mov
cmpsl
aaa
mov
loop
xlat
add
inc
std
daa
mov
sar
jno
rcll
sub
rolb
cmpsl
pushf
and
cmpsl
mov
sub
jge
mov
jbe
cli
or
out
add
sub
xchg
or
fsub
loopne
sbbl
es
sbb
inc
sub
or
test
lea
mov
aam
sub
xor
int3
sub
mov
or
inc
xchg
jne
outsl
inc
daa
xor
cmpb
jecxz
push
cld
push
test
or
add
push
push
rcr
pop
insl
mov
dec
dec
dec
jne
push
loopne
jnp
cmp
and
sar
inc
fidivs
push
jecxz
push
pop
add
inc
cmpsl
mov
adc
dec
mov
outsb
inc
add
pop
add
aam
cmpsl
rclb
add
or
push
sbb
dec
insl
clc
mov
pop
cmp
inc
pop
cs
jnp
test
and
sahf
ss
xor
adc
mov
clc
in
test
je
addl
add
dec
js
or
mov
lahf
in
add
notb
push
test
cmp
push
jo
test
xchg
xor
call
js
mov
jbe
add
add
sbb
aam
push
mov
or
insl
jmp
dec
and
ret
xchg
mov
fbld
xor
mov
movsl
sub
pusha
mov
sti
push
add
sbb
push
xchg
inc
aam
pop
sarb
sbb
stc
mov
push
jb
arpl
setge
loopne
test
cmpsl
fmull
dec
popa
nop
adc
jno
add
imul
or
out
xchg
mov
loopne
lea
mov
adc
mov
addr16
lock
add
add
sbb
imul
pop
xchg
lret
lds
mov
xsave
jns
add
pop
bound
jmp
inc
add
ret
xorb
push
push
jecxz
sub
inc
jnp
xchg
and
jo
and
movb
pop
push
jne
rolb
or
nop
fs
inc
sbb
or
inc
lods
ret
shlb
pop
and
add
testl
aam
jns
mov
jne
cmp
cs
aaa
adc
fiaddl
push
adc
sub
pop
xchg
xorb
adc
cmp
or
dec
push
cmpb
popf
in
mov
cmp
je
sbbb
mov
pop
bound
ret
push
clc
sbb
leave
cltd
or
cmp
jle
sub
inc
or
popf
adc
adcb
cmp
jae
push
fs
sub
loopne
mov
popf
mov
add
fimuls
adcb
push
incb
push
mov
je
push
into
sub
es
mov
jp
mov
test
and
pop
inc
loop
mov
dec
pop
mov
mov
mov
js
int
jl
push
lock
xor
aaa
sub
push
movsb
sahf
ja
xor
push
or
inc
gs
push
dec
inc
inc
jno
xchg
cmpsl
pusha
psrlq
push
xor
ret
pop
pop
bound
cmp
add
xor
scas
and
pop
aas
cs
cmp
movlps
xchg
pusha
add
or
cmp
jne
fsubrl
add
mov
lock
dec
in
mov
je
add
in
sub
push
pop
add
inc
and
jnp
xor
cmp
mov
jbe
call
daa
mov
mov
add
mov
dec
outsb
or
lret
pop
and
aaa
push
jo
loopne
pop
loopne
push
jo
loopne
xor
mov
lcall
movsb
in
fldl
mov
mov
sti
xchg
les
hlt
push
cltd
loopne
pop
jge
in
push
push
add
cmp
dec
dec
movsb
rcr
sbb
ret
pop
sbb
das
fcoml
push
pop
pop
sbb
dec
jp
push
or
or
mov
movsb
push
pop
push
push
insb
push
data16
rolb
idiv
mov
sbb
fs
adc
and
mov
sub
xchg
xchg
addl
adc
dec
jecxz
out
mov
fisttpll
test
jl
or
pusha
or
mov
divps
int3
inc
mov
sbb
mov
orb
int3
adc
ljmp
xchg
jecxz
push
add
fbstp
je
mov
cmp
mov
xchg
sub
js
insl
dec
pop
adc
leave
and
sbb
cmp
mov
daa
rorl
and
cmpsb
push
test
push
das
push
mov
jge
mov
popf
es
out
aas
push
js,pn
das
lahf
sub
mov
lea
int3
into
les
cmp
loopne
in
xchg
sbb
mov
and
push
mov
mov
xor
push
es
ret
cwtl
inc
leave
mov
adc
std
jo
pop
and
dec
dec
inc
push
inc
inc
dec
adc
mov
inc
or
dec
push
add
dec
push
mov
xchg
dec
jae
add
inc
leave
adc
std
jl
std
mov
or
sbb
inc
sbbl
add
sub
test
inc
add
inc
xor
add
cmp
ja
sbb
pop
addr16
and
or
ffree
aad
add
and
and
jge
inc
and
lret
std
stos
and
adc
add
adc
add
lock
ret
js
cmc
add
xchg
pop
pop
mov
add
iret
jb
or
mov
ss
prefetch
fildll
pop
rcrb
lcall
das
push
mov
in
and
adc
push
pop
push
daa
sbb
imul
pop
cmp
and
cmp
mov
xchg
fstl
fistl
xor
or
or
and
ds
xor
jb
push
pop
mov
xchg
stc
es
faddl
add
jbe
mov
or
jg
jge
fisttpll
mov
mov
mov
fsubrs
inc
mov
les
and
sbb
xor
rolb
fcoms
andl
add
jnp
sub
jns
das
lods
mov
lret
pop
jbe
sub
cmp
adc
arpl
mov
stos
insl
cmpxchg
jmp
repz
repz
or
add
cmpl
push
in
mov
push
adc
sbb
daa
lods
in
or
sbb
int3
imul
sub
int3
push
push
jle
jb
push
push
enter
lods
add
jae
iret
xor
adc
cmpl
in
sarb
sbb
pop
xor
push
sarl
sub
adc
adcb
pop
shll
xor
adc
push
mov
mov
mov
in
imul
xchg
fmull
mov
adc
inc
sub
repnz
out
inc
je
adc
test
rcrl
call
dec
loopne
push
push
orl
and
sbb
call
push
sbb
sub
xchg
loopne
fcoml
and
sub
shlb
in
push
call
lock
ret
js
xor
rolb
fnstcw
and
and
or
sub
dec
xor
sbb
mov
push
jne
dec
and
adcb
fsubl
sbb
hlt
or
add
fcompl
popf
dec
cmp
push
jl
jnp
testb
add
mov
mov
fcoml
in
jns
fwait
or
pop
mov
ljmp
cmpsl
mov
movsl
inc
sbb
cmp
or
mov
push
jns
je
out
in
in
outsb
sub
call
cmp
push
and
daa
and
xor
inc
mov
pop
xchg
mov
add
cmp
in
add
cltd
ret
dec
adc
inc
push
pop
cmp
mov
or
jg
mov
fadd
inc
popf
sub
das
sub
pushf
and
jb
and
mov
xor
and
adc
rolb
adc
push
adc
cmpsb
and
sub
frstor
or
loopne
push
daa
sub
dec
push
mov
mov
xchg
or
add
adc
jnp
or
fistpl
mov
add
and
push
loop
xchg
xchg
out
and
js
and
popf
sbb
jmp
xor
push
imul
push
imul
movsl
push
ret
xor
xor
es
sbb
sbb
sbb
add
cmp
icebp
loope
mov
sub
add
stc
leave
xchg
and
shrb
add
sbbl
push
xor
cwtl
insl
or
out
cmp
mov
adc
xchg
pop
inc
ficomps
add
pop
pushf
out
cmp
sbb
inc
xchg
imul
push
push
mov
pushf
xor
adc
pusha
dec
xchg
inc
dec
add
lcall
imul
inc
jno
or
jo
jmp
shlb
or
sub
fistpl
mov
ret
jo
in
idivb
pop
loope,pn
rorl
sbb
int3
mov
and
mov
mov
daa
add
out
sti
cmc
and
or
jge
cmp
rolb
mov
lock
pusha
adc
adc
mov
inc
shlb
jmp
and
push
add
push
xorb
sbb
scas
cmpl
sub
testb
inc
jmp
popa
sbb
add
mov
inc
leave
scas
lea
inc
mov
pop
mov
jmp
push
push
lea
sti
rclb
adc
cmc
in
lods
lret
imul
call
pop
test
js
pop
inc
lret
fs
lea
mov
pop
sbbb
jns
pop
cmpb
inc
fdivr
mov
pop
sbb
fdivr
stos
inc
aas
add
aas
cmp
test
test
cmpb
daa
adc
fadds
movsl
notl
jb
inc
add
adc
and
xor
fsubrs
shll
lock
mov
add
and
icebp
test
pusha
mov
sbb
inc
mov
mov
dec
pop
inc
shl
mov
mov
add
push
adc
mov
test
es
movsl
xor
fwait
in
adc
test
push
loopne
insb
or
in
stos
add
loopne
dec
or
lea
shl
lods
or
mov
xchg
mov
aad
movsb
nop
lret
call
stos
loope
mov
xor
mov
out
add
call
add
add
jg
mov
leave
xor
dec
aaa
add
push
shlb
mov
inc
leave
push
inc
aas
push
push
jb
mov
jp
inc
jb
daa
push
xchg
pop
jle
cs
pop
and
xchg
sub
mov
sub
sbb
orl
adc
or
push
mov
clc
nop
or
push
sub
sbb
sti
orl
sbb
pusha
inc
and
or
or
ret
pop
or
inc
push
andb
std
mov
xchg
dec
aas
xor
inc
bnd
and
add
or
rcrb
jg
test
and
lcall
stc
adc
sti
popa
pusha
leave
push
mov
xor
shl
adc
les
mov
mov
push
dec
jb
push
sbb
leave
int3
and
adc
inc
jo
add
push
xchg
xchg
or
push
push
sbb
dec
mov
shlb
push
adc
ret
xor
adc
ret
push
add
xor
cld
pop
add
sti
cmpsb
xor
and
sahf
aad
mov
inc
cwtl
packsswb
jmp
xchg
add
add
inc
xlat
fcoml
xchg
outsb
fiadds
dec
push
add
es
not
and
or
bound
inc
push
jb
call
or
test
mov
insl
jecxz
mov
jae
loopne
daa
jns
cmc
sahf
popf
jno
movsb
repnz
dec
push
adc
incl
jp
cwtl
pop
adc
push
mov
add
inc
jb
sbb
insb
push
adc
sbb
pop
decb
pushl
out
push
sbb
lods
or
add
outsl
dec
pop
add
inc
ficoml
push
mov
fsubl
lock
add
mov
jmp
push
cmp
mov
add
adc
bound
rsqrtps
cld
es
pop
insl
sbb
push
pop
pop
xor
xchg
push
psrad
ret
cltd
push
cmc
mov
shlb
add
mov
add
daa
in
push
jns
in
adc
aas
dec
add
mov
dec
fcomps
add
dec
cs
enter
loop
das
pop
push
push
and
sub
mov
adc
inc
push
pop
out
inc
lret
stos
lcall
push
jmp
sbb
rcll
and
adcb
pop
sub
aaa
test
pop
mov
jmp
std
rol
pushf
mov
call
inc
call
cmp
pop
xchg
mov
and
ret
aaa
dec
sub
sbb
xor
pop
mov
je
pop
and
fld
fldln2
and
dec
or
dec
fildll
adc
stos
adc
cwtl
mov
jmp
mov
and
icebp
jp
inc
out
pop
jmp
fildl
sahf
jmp
cmp
fdivs
imul
adc
ret
mov
test
dec
test
pop
pop
push
sub
stc
add
inc
and
inc
push
sbb
inc
lcall
dec
push
in
add
mov
jmp
adc
inc
pop
enter
popa
or
adc
and
xor
loope
add
es
add
insl
cld
mov
jmp
cltd
sbb
test
xchg
jno
push
fimull
fsubl
adc
lds
and
or
add
adc
push
adc
les
cmp
cmp
nop
js
cmp
movsb
cld
adc
test
inc
inc
cld
filds
ret
push
fs
sbb
andl
cld
sbb
pop
adc
or
into
xorl
outsb
jbe
adc
mov
mov
adc
adc
and
adc
add
cltd
adc
daa
cmp
mov
cs
pop
mov
add
addr16
gs
and
xchg
fiaddl
jb
dec
pop
outsb
push
mov
in
add
rorb
fcomps
pop
pusha
or
adc
ror
clc
jle
aad
adcb
rorb
push
inc
aam
ss
adc
sub
push
mov
ret
nop
mov
pusha
lcall
push
pop
out
inc
lcall
lret
les
adc
xorl
imul
or
sbb
js
adc
fisttps
xchg
xchg
movsb
inc
dec
pop
arpl
add
or
jl
jo
arpl
imul
cmp
fwait
dec
js
imul
mov
jmp
inc
add
js
sub
dec
mov
imul
add
and
jge
cmp
lcall
cli
push
jg
loope
jp
inc
mov
sbb
cmp
ja
mov
pop
push
jbe
jge
lcall
xchg
or
sbb
nop
das
inc
add
mov
or
bnd
or
cmp
scas
push
jne
pop
dec
jl
pop
lcall
sbb
xchg
mov
mov
icebp
cmp
push
pop
xor
shlb
loope
push
inc
xor
fwait
mov
fadds
and
sub
dec
sbb
ds
mov
mov
nop
mov
lret
cli
adc
pusha
sub
jb
mov
and
push
jecxz
sbb
call
xor
mov
or
fwait
and
fldl
inc
repnz
outsl
hlt
mov
mov
add
pop
push
shrb
shrb
push
gs
xchg
loope
xchg
jno
sbb
mov
adc
mov
push
mov
ss
push
add
inc
jo
cmp
or
mov
adc
push
push
sarb
add
mov
testb
mov
xor
testb
repnz
mov
lods
test
sbb
in
sub
scas
fildl
xor
push
inc
inc
loopne
pop
cmp
cmp
add
andl
dec
xor
inc
xchg
mov
mov
and
push
cmpl
adc
xor
add
dec
cmpsb
pop
or
mov
cmp
bound
xor
insb
sub
jl
frstor
push
xor
pop
add
add
push
or
je
mov
sbb
je
inc
mov
in
sbb
or
add
xchg
gs
mov
out
inc
or
rcrl
lock
in
ret
and
xor
dec
sbb
in
stc
sub
lcall
inc
sbb
and
or
push
lea
mov
mov
les
sub
nop
sbb
add
sub
cli
ror
test
jno
cs
movsl
mov
dec
adc
cmpsb
cli
ror
and
daa
lea
add
jp
add
sub
test
inc
adc
or
add
add
js
inc
movsb
cwtl
or
jg
add
loop
or
sbb
sbb
jecxz
push
outsb
pushf
sbb
push
mov
insl
add
bound
push
push
push
add
lock
lods
or
or
pop
jg
mov
add
fs
pop
jl
in
xor
push
mov
push
pop
ds
xchg
cmovae
sub
ret
test
sub
push
sbb
test
or
push
dec
add
cld
fidivs
sub
add
add
and
xchg
mov
sbb
addr16
loope
fsubr
dec
imul
leave
adc
or
pop
les
loope
push
adc
xor
adc
pop
fst
adcl
je
cmpl
dec
cmpsb
pop
adc
jle
jmp
inc
or
sbb
mov
pop
mov
jle
cmp
jg
je
mov
es
rcrb
in
sbb
pusha
in
aam
pusha
jl
nop
or
inc
or
arpl
adc
sbb
inc
xchg
add
pop
pop
mov
xchg
mov
stos
ds
icebp
sub
cmpl
and
and
add
or
sbb
dec
sbb
ljmp
push
pop
add
add
stc
dec
mov
in
cmp
adc
or
sub
and
or
push
mov
adc
or
leave
add
stos
inc
cmp
mov
pushl
adc
cmpsl
repnz
sub
pop
and
js
inc
pop
fwait
sbb
or
push
push
adc
mov
or
and
pop
je
addr16
scas
pop
lock
adc
jg
add
push
cmpsb
dec
push
jmp
adc
sub
pushf
cmp
fdivrl
je
xchg
je
mov
cs
mov
adc
sub
sbb
testb
jp
movsb
add
add
sub
or
testl
jo
cld
pop
test
cmp
mov
pop
orb
pop
adc
sbb
xchg
adc
mov
leave
or
jne
je
add
inc
ja
orb
jmp
loopne
inc
mov
cmp
adc
mov
dec
add
out
sbb
jne
push
sub
push
pushl
cmp
inc
mov
fildl
negb
cli
arpl
mov
ds
or
inc
or
jns
mov
push
stos
add
pop
out
loope
inc
sbb
lea
mov
loope
or
arpl
mov
scas
add
es
adc
xchg
xor
adc
or
jl
cmp
pusha
dec
stos
add
jo
outsb
push
jb
add
loope
jg
rclb
sbb
xor
ja
lea
cmp
jl
in
inc
insb
jp
lea
push
mov
sarb
out
xor
outsl
cwtl
sub
add
and
lods
nop
xor
out
push
imul
sbb
mov
popf
inc
les
inc
pop
add
shrl
sbb
push
dec
sbb
xor
cmp
nop
or
repnz
dec
test
enter
pop
cmp
xlat
shlb
add
xchg
mov
leave
stos
mov
jmp
loop
ds
or
mov
insl
dec
adc
sbb
adc
sarb
ror
inc
jecxz
and
jne
xor
add
sub
fisttpl
and
outsb
fwait
mov
push
aad
loope
and
add
adc
pop
fdivs
call
pop
jle
lahf
call
add
filds
pop
xor
inc
xor
jecxz
adc
jne
scas
mov
dec
int3
or
in
mov
push
int3
and
xchg
add
inc
sbb
add
jbe
jmp
fprem
test
inc
add
sbb
sub
mov
and
mov
xor
orl
adc
jle
out
nop
lea
mov
and
mov
and
push
loope
dec
and
sbb
dec
fs
add
dec
jg
adc
orl
call
into
inc
adc
xchg
hlt
mov
mov
mov
rcl
mov
xchg
xor
push
inc
or
call
cmpsl
push
cld
scas
fcmovb
mov
sbb
aaa
pop
pushf
imul
jno
lds
scas
pop
mov
lock
and
xlat
lret
jns
inc
bound
and
sbb
gs
adc
pop
mov
xchg
add
clc
add
inc
lret
dec
adc
xchg
or
push
insb
and
dec
xchg
sahf
xor
sub
das
insb
jns
inc
ret
fchs
dec
pop
mov
dec
xor
call
cmp
je
cmp
jg
adc
cmp
jb
testb
add
testb
xchg
push
and
into
add
andl
dec
dec
sarl
jmp
inc
addr16
sbb
sbbl
je
cmp
cmpl
cmp
jbe
clc
and
sbb
mov
mov
out
sbb
xchg
cmp
call
mov
pavgb
xchg
std
imul
outsl
repz
push
loop
adc
or
popl
mov
rcl
fstpl
and
cmp
sub
pop
pop
fdivrs
mov
leave
sub
mov
clc
or
movsb
das
ret
dec
in
lds
sub
mov
pushf
mov
push
ljmp
nop
mov
inc
cmp
fldt
rcll
jo
leave
out
pop
sub
dec
fsubrl
nop
arpl
cs
jne
adc
fwait
fs
mov
mov
fsubr
dec
or
push
les
les
xchg
mov
test
in
leave
inc
movsb
xchg
in
sbb
and
movsb
popa
mov
cld
inc
inc
xchg
jl
adcb
sbb
stc
insb
sub
cmp
cmp
lret
out
dec
dec
adc
popf
dec
ds
sar
xchg
push
shrb
mov
jl
ja
loope
js
cmp
ret
nop
in
rolb
or
sbb
mov
test
jns
lods
inc
sub
leave
sub
inc
jnp
inc
lds
movsb
dec
loopne
adc
cmp
jne
dec
wrmsr
in
dec
cmpsb
dec
adc
cltd
nop
xchg
xchg
imul
inc
cmp
pop
push
fdivl
inc
push
mov
or
leave
and
adc
leave
and
dec
and
and
dec
xor
xor
xchg
dec
xor
cmp
inc
dec
xor
leave
and
push
addr16
insb
sbb
inc
in
sbb
pop
into
sbb
mov
je
mov
hlt
scas
pusha
or
sbb
sbbl
cwtl
sbb
aam
cmp
inc
cmc
test
in
call
fs
inc
push
inc
mov
in
or
adc
or
cmp
mov
push
add
xor
adc
inc
jns
add
mov
pop
in
mov
jge
dec
loopne
leave
and
call
xor
filds
add
adc
cwtl
mov
iret
mov
aaa
xor
in
fsubrs
or
loopne
lods
add
out
in
in
and
dec
mov
test
push
enter
xlat
pusha
xlat
mov
test
pushf
xor
fsubl
cmpl
inc
mull
add
push
cmp
adc
clc
gs
inc
jo
enter
pop
mov
call
cltd
imul
mov
jbe
sbb
je
scas
call
test
dec
sub
push
jb
or
insb
dec
xchg
or
dec
push
jb
adc
in
in
add
inc
pop
inc
dec
mov
adc
or
and
inc
dec
pop
and
shll
pushf
inc
or
sub
or
mov
fimull
movsb
cmpsb
in
add
stos
xor
lock
push
leave
push
xor
push
add
cmp
imul
jle
pop
das
int
mov
aas
inc
pop
or
or
jb
add
add
mov
sbb
in
or
fmull
in
sub
ljmp
rorl
ret
mov
std
adc
sti
bound
stos
cmp
dec
xlat
test
push
xor
mov
or
or
push
call
inc
cmp
adc
aaa
and
jb
or
or
dec
jb
and
or
mov
push
daa
in
xchg
pop
xor
push
test
inc
rcrl
imul
fsubs
loopne
aas
in
mov
push
jno
cmp
or
push
jmp
push
jl
scas
sbb
mov
add
xchg
xchg
push
les
cwtl
push
add
push
xor
jecxz
add
inc
xor
sub
mov
iret
call
dec
push
push
pop
scas
pusha
jmp
adc
jo
adc
dec
jl
orb
nop
xchg
js
lea
dec
jnp
cli
dec
adc
sbb
lods
push
push
cmp
sets
imul
cmp
jae
in
pop
push
dec
jo
test
out
icebp
inc
sbb
pop
push
test
stos
imul
inc
inc
stos
repz
lds
jb
or
in
test
sbb
jno
inc
cmp
mov
push
cltd
jbe
jecxz
and
inc
adc
arpl
popa
sbb
add
and
push
mov
jbe
test
cli
and
sub
xor
push
inc
rorl
fsubrl
bound
sub
or
ja
aas
xor
int3
out
inc
lcall
popf
les
rolb
mov
mov
arpl
mov
in
mov
inc
movsb
dec
cmp
lock
jnp
push
repnz
jb
dec
fcomp
aam
pop
lea
adc
push
push
and
xchg
fcmovnbe
je
pop
test
lods
xchg
xchg
xchg
xchg
mov
mov
xchg
rol
int3
test
xchg
xchg
rcl
outsl
mov
movsb
mov
sub
push
pop
enter
aad
mov
cmc
sub
dec
mov
push
cwtl
xor
mov
test
pop
icebp
xchg
push
add
je
imul
divl
inc
cmpsb
xchg
push
jne
lea
lea
and
pop
xor
in
or
hlt
addr16
xor
push
inc
xlat
test
xchg
xor
and
pop
adc
fcompl
sub
add
rolb
cmp
cmp
push
sbb
cmp
mov
jmp
es
rcl
or
jmp
mov
mov
xchg
cmp
test
aam
mov
loop
sbb
nop
pop
fldenv
in
mov
and
jl
lods
mov
mov
or
push
push
jmp
pop
iret
clc
pop
jge
mov
push
lcall
pop
or
adc
jg
push
dec
adc
stos
adc
and
xor
aad
pop
xlat
sub
mov
pop
inc
inc
stos
xor
sbb
loopne
jnp
enter
nop
loopne
jne
scas
pop
pushf
pop
mov
pop
cmp
xchg
xor
test
pop
jnp
leave
mov
fwait
lods
fdivs
pushf
push
add
xor
mov
sbb
inc
clc
inc
mov
dec
xor
hlt
shl
or
shrb
mov
dec
dec
inc
inc
loope
call
insb
popf
pop
inc
pop
fldt
sbb
sarb
lock
hlt
popa
sub
mov
int
and
fs
push
push
cmpsl
mov
bound
add
fld1
push
add
js
lds
in
test
movsb
mov
dec
int3
aas
mov
mov
mov
inc
adc
mov
testl
fs
and
or
inc
lods
loopne
and
daa
cmp
add
loope
insb
mov
les
call
sub
pop
or
jne
imul
add
shll
mov
xchg
pop
rcll
imul
push
push
mov
sbb
xor
in
jl
push
cmp
xor
xchg
push
push
call
vpsrlw
inc
adc
ret
xchg
pop
inc
xchg
shlb
lahf
enter
push
mov
sub
imul
les
and
and
mov
jmp
xchg
cwtl
mov
pushf
cltd
loopne
dec
sub
xchg
popa
outsl
movsb
pop
rcrb
push
sub
push
mov
or
lds
stos
or
inc
rol
in
orb
aam
int
not
mov
sub
push
mov
popa
pop
push
in
shll
punpcklwd
movsb
xchg
xchg
or
or
imul
push
dec
insl
cmp
dec
pop
push
scas
test
xor
pop
scas
aam
push
pop
cmpsb
aas
shrb
jae
or
xor
imul
add
or
call
aad
dec
inc
or
jo
popa
clc
fldcw
insb
xchg
inc
hlt
xor
lret
jae
leave
loopne
loopne
dec
xchg
in
mov
cmp
push
pop
xor
lds
cltd
movsb
fldl
add
dec
ret
cmp
ret
mov
mov
imul
in
inc
out
or
dec
inc
mov
lods
mov
mov
in
sbbb
mov
and
xchg
outsb
insb
sbb
pop
push
flds
ljmp
outsb
in
and
in
push
adc
mov
orl
loope
xor
mov
rcll
shrl
jns
test
sti
sbb
dec
rolb
loope
dec
fwait
lods
inc
xor
dec
pop
dec
jp
inc
pop
stos
add
bound
in
inc
jno
movsl
mov
int3
jge
mov
pushf
mov
fists
lods
mov
add
xor
aam
in
or
push
ret
pushf
jno
sub
push
inc
jb
insb
movsb
bound
xor
loop
mov
aaa
mov
pop
mov
cmp
test
and
jl
mov
and
rclb
add
in
or
pop
add
js
jae
and
call
adcl
adc
or
fcomps
cli
mov
sti
cmp
test
imul
xchg
mov
fdivl
les
int3
gs
enter
rcrb
or
in
inc
mov
mov
mov
dec
adc
dec
in
mov
xorb
inc
inc
sub
stos
sbb
mov
les
sub
inc
dec
push
movsb
inc
mov
add
pusha
je
imul
jb
lret
cwtl
jbe
inc
daa
pushf
dec
cmpsb
lock
aad
fwait
dec
lcall
in
fwait
test
sub
mov
aam
hlt
daa
sub
push
nop
mov
bound
mov
bswap
adc
mov
or
not
ret
in
lods
mov
mov
add
pusha
dec
insb
orb
fs
mov
ss
mov
sub
enter
fistps
idivl
enter
dec
cld
dec
cld
cmp
push
push
adc
pop
mov
sub
jo
pop
into
adc
testb
ss
and
adc
xlat
mov
cltd
jl
xchg
sub
and
nop
cld
or
nop
pushf
mov
jp
xchg
fcom
mov
and
push
and
adc
js
dec
or
andl
in
mov
and
je
stc
rorl
in
dec
sarb
sbbl
adc
ja
xor
mov
push
sub
sub
test
gs
pop
xchg
jnp
outsl
aam
xor
push
sarb
test
jge
inc
and
or
inc
mov
test
shrb
arpl
mov
push
inc
sbb
adc
je
out
mov
xor
out
jo
roll
ja
js
mov
rcrl
enter
test
aas
shlb
aam
out
les
bound
bound
inc
loope
movsl
xchg
or
push
sub
in
push
mov
sbb
aas
sti
push
mov
mov
cmp
test
aam
add
or
ret
push
and
cmp
in
add
sbb
cmpb
nop
dec
push
movsb
sbb
arpl
call
mov
les
sbb
repz
mov
mov
add
and
xchg
or
jne
mov
push
cld
inc
mov
pop
or
imul
cmp
cwtl
sub
cmpsb
data16
add
xchg
in
test
dec
and
sbb
and
mov
dec
sbb
xor
in
fiaddl
loopnew
inc
or
sub
xor
lods
fdivrs
int3
or
xor
insb
push
ljmp
das
jnp
fiaddl
sub
movsl
call
add
sub
or
push
xchg
inc
test
icebp
jb
mov
fcoml
fsubs
push
add
push
and
ret
iret
inc
rsqrtps
pop
jnp
les
xchg
loopne
add
cltd
loopne
cmc
popa
pop
add
call
jo
push
mov
adc
clc
pop
rolb
mov
xchg
mov
mov
and
xor
divl
pxor
push
mov
fisttps
lods
shlb
inc
inc
inc
mov
out
mov
xor
enter
nop
xchg
lret
add
pushf
xchg
push
push
in
std
mov
movsb
xor
sti
enter
pop
das
xor
je
iret
or
rclb
sbb
mov
add
mov
mov
push
push
dec
fs
sub
jo
mov
push
loope
add
lret
test
adc
pop
sub
and
or
xor
xor
fucom
fnstsw
adc
push
movsb
mov
jne
xchg
push
push
mov
mov
test
mov
call
dec
and
push
insl
adcb
cwtl
mov
dec
push
cmp
in
lock
mov
sbb
leave
add
mov
or
push
subl
mov
les
inc
leave
push
sbb
fsubrs
lahf
mov
and
push
aaa
push
inc
cmpsb
dec
xor
arpl
or
rcl
adc
xor
pop
mov
mov
adc
pop
inc
subb
addr16
and
nop
hlt
cmp
push
mov
push
sbb
push
add
mov
xchg
outsl
add
and
cltd
fs
xchg
adc
sub
cmp
in
roll
dec
sub
xchg
dec
cmp
sbb
es
fs
and
es
fs
sub
push
in
arpl
fidivl
shlb
leave
xor
or
test
aad
xorb
dec
in
fbld
enter
cltd
rcl
lods
add
movsb
cmpsb
and
sbb
mov
ja
cwtl
or
or
sbb
push
pop
xchg
mov
xchg
or
in
fcomps
xor
fadds
adc
daa
push
xor
imul
and
jge
xchg
push
pop
psubsw
orl
andl
adc
inc
mov
wbinvd
push
pop
or
add
stos
and
pop
fcoms
cmpsl
inc
mov
subb
jg
push
in
mov
xlat
xchg
mov
jbe
xchg
sysret
inc
and
dec
fildl
push
shlb
xchg
sub
sbb
pop
ret
aaa
cmp
cmp
fwait
fs
incl
jno
es
add
test
push
xchg
call
adc
jno
or
dec
add
sub
inc
xchg
aaa
ret
xor
jl
orb
adc
pop
insb
xor
cmp
adc
pop
insb
orb
xor
cmp
mov
adcb
jp
xchg
in
mov
jbe
inc
and
sub
add
sub
xor
or
cmp
movsl
shll
or
sbb
xchg
pop
loope
aas
and
inc
inc
xchg
fadd
push
add
bound
pop
in
inc
mov
pop
cmc
in
sbb
jne
inc
inc
cwtl
enter
aas
test
mov
test
pop
pop
aas
inc
add
xor
fs
adc
ret
orl
call
cs
subb
call
cmpb
lcall
jne
or
xor
movl
inc
fwait
jecxz
test
fs
sub
call
jno
fwait
or
inc
push
and
inc
fwait
sub
clc
test
outsb
push
popf
pop
and
inc
cmp
mov
pop
xchg
test
ja
bound
fistpl
in
pushf
pushf
mov
call
push
addr16
mov
xchg
sub
adc
inc
xchg
add
lds
outsl
mov
out
or
mov
notb
mov
pop
rolb
and
push
les
sbb
nop
adc
leave
fdivrl
faddl
jno
jl
sub
push
adc
addl
popf
mov
lods
in
lock
or
cmp
xor
mov
add
push
pop
imul
nop
stos
leave
or
popf
outsb
dec
mov
sub
adcb
aas
xor
sbb
fadds
xor
roll
jae
jecxz
iret
fs
rol
lods
xchg
pavgb
xor
lds
cmp
imul
lcall
lret
inc
sbb
fistl
and
push
adc
push
loope
mov
enter
xchg
inc
repnz
ss
mov
xor
jns
test
fwait
and
in
add
cmpsb
inc
sbb
test
nop
loope
push
test
push
mov
adc
or
sbb
adc
push
sub
sti
fdivl
or
cmp
xchg
cmp
push
xor
sub
shl
scas
xlat
push
xlat
stos
mov
cltd
or
int3
lock
lods
fucomi
dec
ficoml
ret
mov
adcb
sub
rclb
and
xchg
lods
test
test
sbb
lcall
push
adc
cmp
jge
in
movsb
xchg
outsb
add
int3
adc
push
fprem
dec
cld
nop
mov
xor
cmp
xchg
sub
mov
je
inc
fstp
loopne
add
xor
cld
inc
jbe
sbb
faddl
push
nop
add
shl
fs
inc
mov
imul
imul
or
mov
push
xchg
mov
inc
cld
mov
nop
and
pop
call
xor
jns
stos
mov
pop
push
adc
cltd
push
sbb
in
icebp
add
or
aam
lods
xchg
add
sub
or
filds
mov
or
pushf
cmp
or
lods
push
sti
dec
enter
pop
sti
test
sti
dec
es
ss
jl
pop
scas
or
add
add
fucomp
pushf
inc
cwtl
adc
xchg
xchg
inc
push
leave
and
pusha
xor
insl
lods
jbe
cltd
inc
cld
les
and
pusha
movsb
inc
sbb
and
pop
xchg
add
pop
inc
ret
shld
add
or
out
xor
dec
test
jl
fiaddl
xchg
arpl
mov
jo
sbb
adc
addl
je
das
lods
in
imul
test
sub
jo
xor
psrlq
test
dec
test
arpl
lds
mov
xor
inc
mov
add
inc
insb
or
xchg
add
sbb
icebp
test
add
xchg
xchg
mov
mov
xor
pop
xchg
adc
nop
mov
adc
push
nop
pop
dec
movsl
and
int
mov
out
push
mov
sub
xchg
or
sbb
int3
imul
shrl
dec
sahf
cmp
pusha
mov
out
xor
dec
or
cmpsl
aad
or
sub
mov
mov
or
mov
std
ret
sub
cltd
movsb
adc
aam
sbb
rcrl
pop
enter
rolb
add
in
inc
or
and
jno
mov
add
jg
in
cmp
sbb
mov
ret
inc
das
cmp
lea
xchg
xor
jnp
mov
or
fsubrs
inc
icebp
sub
loopne
xor
mov
pop
mov
ret
mov
pushf
xor
sub
ss
loopne
jne
mov
push
xor
xor
mov
cld
sub
pop
outsl
cmp
mov
orb
aam
movsl
insb
mov
dec
stos
xchg
rclb
notl
lea
mov
xor
fstpl
or
nop
mov
adc
mov
fsubrs
mov
lods
sahf
mov
loopne
mov
or
call
lods
add
add
mov
inc
push
inc
das
or
xor
loope
mov
mov
xor
cmp
in
and
movsb
test
jae
adc
repnz
and
dec
and
add
cld
mov
jnp
rclb
adc
pusha
rolb
jmp
dec
fwait
sub
cwtl
out
fsubl
hlt
sub
movsb
shll
sub
add
lds
pop
dec
insb
mov
mov
nop
lods
inc
imul
cld
out
and
in
add
popa
inc
aad
sub
scas
pop
inc
dec
pop
mov
xchg
and
and
lret
pop
adc
popf
test
push
mov
pop
mov
aas
xor
add
pop
add
push
pop
pop
fadds
xor
xor
mov
pop
inc
nop
mov
repnz
sbb
xor
push
xchg
fimuls
mov
mov
and
sub
mov
adc
sub
push
popf
jp
cmp
push
imul
cltd
fidivrl
jl
repnz
add
xor
push
dec
and
add
jnp
add
insb
pop
adc
add
and
jbe
addr16
divl
dec
jb,pt
cli
and
dec
or
rcr
ret
and
popf
orb
sub
mov
mov
les
push
stc
jbe
ja
and
inc
add
fisubrl
adc
test
push
sbb
xor
js
mov
mov
jl
aas
jmp
xor
adc
xlat
ss
and
pop
xlat
pushf
std
subb
scas
mov
mov
push
and
maxps
add
aam
push
orl
xchg
add
pop
aam
push
push
dec
cmpsl
jge
pushf
pop
and
push
imul
mov
jmp
shlb
pop
iret
inc
aas
in
sub
scas
in
inc
divl
cmp
nop
decl
mov
add
fistpl
or
jnp
mov
add
std
jg
mov
adc
mov
rcll
xchg
adc
aaa
mov
or
outsl
cmp
adc
mov
test
add
scas
loopne
inc
nop
add
into
pop
adc
test
add
push
inc
imul
fistps
and
mov
in
mov
add
lock
rdpmc
add
psubusb
pop
sub
or
push
mov
bound
and
insb
outsl
arpl
insl
mov
repz
js
je
jb
gs
push
insl
add
sbb
jb
jbe
add
add
add
je
push
je
arpl
mov
incl
popa
jb
outsb
je
inc
imul
dec
xor
xor
popa
das
jo
insl
or
jnp
adcl
leave
repz
jae
add
and
dec
repnz
add
das
das
xchg
out
mov
das
and
push
cmovno
inc
mov
push
mov
enter
sahf
jbe
dec
dec
je
outsl
negl
ja
push
jo
dec
cmpsb
jne
addr16
shrb
jae
add
insb
out
pop
addr16
mov
pop
imul
repz
bound
jne
outsl
roll
popa
and
adcb
sbb
pop
pop
outsb
fcmovnu
imul
iret
jns
mov
out
popa
sahf
jne
sbb
inc
pop
pop
push
xorl
pop
inc
jae
push
mov
lods
fnsave
outsl
inc
ds
neg
mov
insl
arpl
mov
jg
lahf
nop
xor
cmp
cmp
add
dec
and
jns
add
scas
imul
dec
push
inc
mov
pop
hlt
inc
gs
bound
dec
outsl
jbe
jle
mov
outsl
adc
jo
sub
addr16
mov
jne
xchg
outsb
xchg
inc
jo
imul
mov
jb
out
mov
mov
cmp
jns
ja
cmp
jg
addr16
into
jne
xor
cmp
nop
and
daa
push
int
in
push
gs
sbb
dec
xor
jae
fdecstp
push
jne
xchg
pop
dec
les
add
pop
mov
test
incl
fucomip
ljmp
push
jl
into
jmp
scas
in
jne
inc
inc
adc
dec
outsb
imul
imul
jb
and
mov
fcmovnu
pop
dec
repnz
es
pop
lea
adc
iret
dec
into
inc
pop
lock
jnp
aas
add
xor
scas
cmp
sub
or
and
and
sti
mov
arpl
scas
insl
push
push
pop
out
loopne
lcall
mov
jne
outsb
mov
cmp
fisubs
or
jbe
aas
mov
xor
insb
jp
pop
lret
sti
ficoms
fwait
mov
xorb
gs
bound
dec
ja
jnp
outsl
jmp
jo
mov
ja
xor
stos
insl
sub
addl
scas
fidivrs
pop
cmp
sub
imul
loopne
pop
ret
push
dec
sub
sbb
xchg
sub
jp
mov
or
pop
or
ret
lahf
popa
push
outsb
pop
inc
jnp
pop
or
loopne
fidivl
daa
inc
imul
out
xor
fadd
cmp
je
adc
movsl
cmp
in
sbb
mov
out
mov
xor
xchg
xor
fbld
inc
sbb
scas
js
push
das
jb
ret
add
js
fidivrl
cs
sub
daa
bound
add
outsl
andl
or
xor
cmp
popa
sub
sbb
or
adc
aaa
jg
inc
rol
ja
iret
fbstp
dec
mov
xor
fidivrs
xchg
scas
pusha
sbb
pop
mov
scas
inc
pop
stos
and
adc
mov
adc
cmpb
push
fstpl
outsl
aas
pop
lods
roll
iret
arpl
and
add
fisttps
jo
mov
aaa
insl
lret
jbe
fbld
fs
imul
shll
mov
xor
scas
jle
mov
jae
mov
add
jno
push
adc
inc
pop
nop
imul
je
scas
cmp
adc
fisubrl
sbb
scas
xor
andl
ret
pop
fidivrl
mov
xor
addr16
iret
rep
mov
add
nop
mov
add
cmp
sahf
out
loopne,pt
or
cmpsb
jnp
das
mov
mov
repz
cmpsl
push
sbb
mov
andb
sbb
out
push
push
das
push
pop
sahf
dec
scas
and
xor
push
lods
push
and
stos
js
iret
repz
jns
jp
cld
mov
shl
cmp
insb
dec
aaa
add
shll
mov
or
sub
sub
sub
jno
les
sbb
ucomiss
add
out
gs
addr16
insl
idivl
xchg
fiadds
outsl
ret
inc
ja
out
cwtl
and
mov
fwait
cmp
push
dec
inc
sub
pop
and
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
cli
ss
ret
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
cmpb
pop
pop
pop
mov
bound
gs
imul
jo
jb
je
inc
cs
jbe
js
jp
jl
jle
mov
popf
int3
pop
loopne
jge
neg
add
orb
sar
lret
jno
sti
jg
push
icebp
pusha
inc
mov
clc
ret
movsl
add
xorl
outsl
push
imul
aaa
fisubrs
insb
outsl
outsl
push
arpl
xor
lahf
xor
dec
add
jo
xor
pop
pop
jle
popa
js
jae
je
pop
inc
adc
push
outsl
push
sub
sti
out
aad
ret
sub
outsb
jne
insb
adc
mov
add
push
add
add
add
xor
cmp
push
add
xor
push
push
pop
lcall
or
pusha
add
js
into
int3
sti
add
pop
sub
add
sbb
outsl
out
fistpll
addl
ret
fwait
mov
add
orb
neg
push
cmpb
push
and
sub
jb
xor
lcall
into
jo
add
mov
mov
mov
cld
push
and
outsb
and
push
jge
sbb
mov
add
insb
add
pop
and
inc
push
pop
push
inc
add
js
xchg
and
dec
orl
pop
push
enter
scas
cmp
and
dec
fmulp
lds
add
dec
dec
sahf
dec
lea
mov
mov
xchg
xchg
dec
repnz
dec
xchg
mov
mov
sbb
or
or
fildl
add
add
and
sub
xchg
sbb
pop
dec
add
test
xchg
sbb
adc
pop
adc
add
add
cltd
xchg
push
push
add
add
xor
loopne
add
add
mov
push
add
aaa
inc
sbb
push
add
pop
mov
add
shr
and
aas
sub
addb
mov
nop
xchg
xchg
call
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
pushl
mov
mov
ret
enter
int3
int
iret
rcl
sar
call
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
test
push
hlt
cmc
div
clc
stc
cli
sti
cld
std
pushl
jno
inc
test
add
incl
inc
adc
mov
incl
gs
push
imul
inc
sbb
push
jae
jb
bound
arpl
fucomip
sti
outsb
outsw
jb
xor
ss
popa
mov
mov
jbe
push
movsb
jne
daa
pop
lea
mov
mov
outsl
js
push
add
testb
outsl
insl
jo
jo
and
fcmovnbe
xchg
shlb
aam
daa
aaa
insb
les
mov
add
dec
imul
mov
outsl
int
jo
add
inc
gs
inc
jb
jns
or
movsb
and
push
jns
mov
insb
and
sahf
rorb
and
sub
je
cmp
outsb
jle
fldt
js
jbe
mov
jns
outsb
pop
jb
jnp
or
xor
cmpsl
ficompl
mov
push
lahf
fs
xorl
push
fisubs
out
mov
inc
inc
pop
mov
imul
pop
or
fisubl
movsb
pop
es
lds
lock
outsb
mov
insb
pop
pop
push
push
jae
or
es
pop
cmp
call
cld
popa
insb
insb
jae
subl
gs
push
mov
mov
or
xchg
inc
push
push
push
push
or
inc
dec
push
jne
repnz
push
jnp
int
aam
enter
outsb
inc
mov
fildll
sbb
jg
pop
or
jb
push
imul
call
test
push
jg
enter
jae
inc
in
inc
mov
xor
insb
je
fistl
or
mov
cmpl
push
or
lods
sbb
pop
das
je
xlat
arpl
outsl
xchg
daa
xchg
mov
fisubl
daa
popw
pop
cmp
out
xor
add
ds
sub
insb
dec
imull
inc
jl
push
jle
sub
dec
fstpt
dec
sub
sub
push
cmp
dec
in
jp
and
cmp
fst
mov
dec
pop
pop
jne
into
xor
in
jb
sbb
push
jb
imul
jo
ss
gs
xorl
mov
and
push
data16
sub
fsubl
jo
sub
sbb
sub
pop
mov
jns
out
mov
xorb
jns
out
dec
inc
xor
lret
fwait
dec
sub
xlat
and
out
sahf
cmpsl
sbb
or
mov
int
clc
hlt
push
dec
mov
adc
sub
push
nop
sti
lock
out
iret
mov
in
pop
push
call
in
loopne
es
push
fadd
sahf
out
cmpsl
aam
int3
scas
push
sarb
jns
mov
jns
out
xchg
mov
sahf
pop
dec
mov
or
out
sahf
out
test
push
cmp
cld
ret
loopne
int3
les
mov
out
xor
pop
ret
mov
sahf
jo
sub
rorl
jnp
jg
push
test
jo
xor
push
push
icebp
pop
lock
mov
test
dec
dec
bound
outsb
push
xor
aad
cli
xor
data16
add
push
js
sbb
pop
push
jae
sub
sbb
je
repz
jae
or
fcomps
and
sub
add
push
and
inc
dec
push
push
sub
push
xor
push
dec
inc
dec
cmovns
lret
aaa
jae
cmove
push
adc
sub
adc
xchg
pushf
ret
xchg
lock
into
mov
mov
jnp
inc
loop
fsubs
in
outsb
mov
ds
pop
adc
clc
lret
jmp
sbb
jb
xchg
jge
arpl
cmp
adc
dec
scas
jp
insl
incl
adc
fisubrs
and
jns
test
push
cmpsb
iret
lret
add
decl
inc
inc
mov
mov
sub
fwait
int
add
ss
sbb
pop
jns
ds
xor
incb
dec
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
incl
int
das
xchg
pop
and
xchg
lret
sahf
icebp
mov
sbb
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
pop
mov
aas
mov
out
leave
ljmp
orb
mov
gs
lcall
scas
lods
dec
lock
xor
aas
pushf
nop
adc
mov
pop
pop
repnz
test
es
mov
fcompp
add
add
jbe
icebp
push
daa
push
dec
push
push
adc
mov
dec
outsb
jbe
and
imul
xchg
sub
mov
sti
lcall
adc
pop
adc
xor
sbb
sub
or
pop
inc
sbb
and
aaa
adc
sti
cmp
cmp
dec
adc
sub
das
sbb
cmp
dec
fldt
xor
jno
jb
jbe
cmp
jnp
out
add
dec
xchg
add
dec
sbb
pop
sbb
pop
mov
add
adc
sub
push
xor
sub
jg
mov
dec
sbb
dec
dec
and
inc
inc
and
lods
dec
dec
or
add
dec
or
dec
and
dec
ficoms
sti
jnp
mov
sub
cmp
das
out
inc
inc
add
fucomi
out
jnp
cmp
push
and
sub
pop
sbb
xor
push
cmp
xor
push
push
sbb
cmp
outsl
insl
pop
adc
pop
dec
push
cmp
sub
pop
aad
mov
sbb
push
or
es
mov
mov
inc
lea
cmp
loopne
xor
add
pop
pop
add
mov
mov
and
adc
cmp
inc
sbb
inc
lret
jnp
adc
cmp
das
sbb
sub
loopne
xor
cmp
shlb
sbb
int3
or
test
sbb
jle
xor
add
outsb
lock
adc
adc
js
sub
lahf
cmp
mov
cmpsl
cmp
add
pop
push
shlb
fcomip
mov
xor
pop
dec
add
or
or
add
mov
push
add
dec
inc
xor
add
pop
sub
push
pop
pop
jo
adc
lock
and
pop
pop
and
pop
outsl
add
push
movsl
pop
sub
inc
pop
adc
xor
adc
dec
cwtl
in
push
cmp
xchg
movsb
repz
cli
mov
cmpsl
mov
xchg
xchg
test
jl
add
in
je
outsl
cmp
repz
pop
pop
dec
cmp
cmp
repz
push
inc
das
mov
sbb
dec
jle
ret
xor
sar
sbb
sub
inc
data16
scas
sub
or
adc
adc
dec
xchg
push
popa
push
and
clc
popa
outsb
arpl
out
gs
mov
jne
mov
sbb
imulb
dec
bound
xor
icebp
cmp
sub
push
or
repz
mov
lds
scas
out
cmp
test
jns
test
idivl
xor
mov
repz
fwait
add
out
mov
jge
dec
repz
push
push
je
xor
cmp
dec
into
test
sub
push
mov
push
cmp
xor
aam
dec
aaa
es
cmp
sub
add
add
sub
add
push
pop
aaa
sbb
inc
imulb
xchg
xor
out
pop
sbb
xor
push
pop
sbb
push
inc
add
pop
and
jnp
out
jmp
pop
cmc
push
push
cmp
iret
cmpsb
sub
fsubrs
clc
push
push
mov
mov
or
in
mov
add
andps
mov
push
es
xor
xchg
inc
push
sbbb
int3
push
sub
sbb
pop
or
push
push
xor
cvtps2pi
sub
mov
or
pop
cmp
hlt
sarl
add
xor
in
sbb
and
or
pop
or
push
dec
push
push
dec
dec
jbe
movsl
and
sub
stc
cmpsl
cmp
xor
pop
pop
cmp
loope
rorl
push
or
adc
cmp
fistpl
out
movsl
ret
adc
mov
cmp
xchg
cmpsl
inc
ja
push
sbb
jo
inc
lods
fdivs
adc
xor
or
cwtl
rorb
out
mov
sbb
movsb
xor
add
insb
imul
adc
cmpsb
out
and
inc
dec
inc
push
das
push
fadds
fdivrs
data16
loopne
and
dec
dec
outsb
sbb
inc
dec
aaa
fmuls
xor
ja
mov
or
push
cmp
cmp
and
mov
pop
pop
adc
mov
cmp
dec
inc
inc
push
jle
mulb
scas
aaa
cld
pop
sbb
cmp
cmp
aaa
adc
flds
lds
pop
or
dec
cmp
and
idiv
in
add
sub
cmp
or
adc
xor
ja
xor
pop
sub
shrb
sbb
mov
xchg
in
xor
movlps
jle
or
push
mov
int
push
pop
scas
pop
xor
in
push
mov
mov
mov
inc
adc
popa
push
lahf
enter
jmp
xor
subl
iret
adc
mov
mulb
xor
xchg
cmp
push
lcall
sub
outsb
xlat
dec
iret
and
push
xor
push
jmp
mov
adc
xor
dec
and
cmp
and
xor
rolb
add
or
jl
or
cmp
dec
divb
lret
inc
sub
push
faddl
addb
mov
xor
jecxz
mov
mov
pop
in
lcall
cmpsb
pop
mov
push
sub
bound
push
imul
and
ds
je
mov
daa
mov
in
insb
add
inc
pop
mov
pop
push
addb
or
push
add
cmp
lcall
or
stc
add
in
scas
xor
into
dec
sbb
push
and
ja
jno
cmpsb
call
sbb
sub
lcall
sbb
xchg
xor
pop
std
lock
lmsw
add
sub
inc
inc
sbb
mov
das
dec
addr16
pop
dec
adc
jecxz
cwtl
pop
lock
inc
mov
xor
push
or
mov
adc
aaa
fildl
push
dec
and
outsl
js
sub
pop
pop
add
inc
ja
lea
push
das
xlat
or
out
je
add
add
or
sub
adc
mov
sub
push
and
inc
jnp
loopne
or
sub
das
roll
inc
add
sub
xlat
imul
inc
or
outsb
jg
ret
icebp
pop
jns
pop
shll
push
add
inc
aaa
push
mov
xor
aaa
add
es
aaa
sbb
ret
push
clc
popf
adc
scas
push
repz
sub
and
mov
in
jae
lcall
cmp
sub
hlt
push
mov
stos
and
cmpsl
out
sbb
pusha
mov
and
push
inc
sti
push
insb
outsl
jb
bound
in
std
ror
pop
push
push
je
add
insl
sbb
daa
jae
popa
mov
je
aas
pop
fisttpl
mov
daa
xchg
inc
fadds
scas
xor
cltd
or
lcall
mov
dec
push
push
add
and
fdivrl
in
push
dec
stc
dec
inc
push
and
mov
sahf
or
test
xor
jo
adc
loop
daa
lret
inc
xor
pop
xor
pop
push
dec
cmp
fsubrs
dec
sbb
push
lock
pop
mov
cmp
sub
pop
add
pop
cmp
mov
dec
jne
adc
pop
mov
push
cmp
shl
sbb
fiadds
sub
mov
ss
xor
sub
in
insl
fnstcw
add
pop
scas
adc
cmp
xor
xor
cmp
mov
scas
xchg
into
pop
add
addr16
out
dec
lea
or
int3
pop
sbb
and
andl
out
sbb
fadd
stos
cwtl
dec
adc
or
cwtl
or
dec
sbb
inc
jb
adc
mov
andl
adc
lcall
ja
jp
push
xchg
aad
push
and
xchg
adc
fwait
adc
fdiv
lcall
xchg
xor
mov
lcall
ds
call
mov
sub
add
inc
pop
pop
add
sahf
and
sub
sarb
std
cmp
inc
and
push
or
inc
mov
dec
push
jl
sbb
sbb
loopne
xor
pusha
test
cmp
lret
cmp
insb
fwait
int
cmp
pop
dec
nop
out
imul
test
loopne
stos
pop
cltd
dec
clc
mov
pop
lods
lret
test
and
adc
je
sub
shlb
cli
rcll
mov
sub
jbe
enter
pop
enter
das
ret
sbb
mov
pop
inc
dec
inc
push
sbb
aas
pop
scas
mov
clc
sbb
adc
xchg
pop
clc
out
fadds
xor
push
js
movsb
pop
jl
movb
sub
test
inc
pop
mov
out
ja
xor
jg
dec
lock
das
pop
or
adc
and
or
adc
inc
sub
push
pop
fistl
cmp
inc
inc
sbb
in
pop
mov
stos
les
pop
es
pop
popf
and
adc
movsl
test
cmp
fwait
dec
xor
add
cmpsl
and
xor
add
imul
cmp
leave
mov
add
pop
add
out
jnp
daa
mov
rcll
adc
mov
daa
mov
sbb
mov
mov
pop
mov
fs
and
mov
fwait
sub
adc
ret
pop
aaa
outsl
dec
daa
pushf
or
push
mov
scas
icebp
or
setp
mov
popf
cmp
adc
and
scas
inc
sub
fidivrl
lods
push
scas
mov
push
cmp
mov
stos
dec
push
push
scas
adc
sub
jnp
mov
dec
dec
pop
and
lock
sub
lahf
pop
and
xor
dec
jle
add
insb
or
adc
mov
jns
pop
insl
push
xchg
mov
les
pop
inc
pop
xor
add
pop
sub
pop
inc
push
or
push
xor
cmp
negl
addb
mov
adc
lock
pop
inc
push
cs
add
push
adc
lods
loopne
sbb
pop
mov
ret
dec
fnstsw
rclb
daa
cs
icebp
or
mul
cmpsb
pop
rolb
cmp
das
out
pop
push
cmpl
ficomps
inc
cmp
and
xor
pusha
xor
and
lods
jnp
and
and
and
dec
das
mov
dec
dec
cmp
dec
push
imul
mov
mov
rclb
xchg
sbb
add
subl
call
in
imul
pop
sub
push
scas
nopl
and
push
ljmp
jnp
dec
outsl
xor
add
push
pop
xor
outsb
subl
sub
pop
adc
fstpl
jmp
sbb
and
ss
sub
jne
inc
jnp
insl
xchg
js
sbb
cmp
mov
daa
and
movsl
jecxz
aad
jecxz
stos
mov
push
or
xor
xchg
daa
cmc
lahf
mov
aad
pop
push
sbb
mov
sbb
xor
push
push
aaa
xorl
mov
ret
adc
ds
push
jno
cmp
or
mov
inc
or
dec
pop
aas
pop
pushf
mov
ljmp
insb
xor
cs
jo
fsubl
in
data16
mov
arpl
jmp
jl
lret
adc
or
dec
sub
and
imul
push
sub
pop
aam
xorb
xchg
rorl
sbb
test
and
outsl
jns,pt
outsb
ss
adc
scas
aam
and
test
pop
pop
pop
xor
add
bound
imul
test
lds
scas
dec
cmp
cmp
ja
add
outsl
mov
aaa
sbb
inc
add
and
in
sti
mov
sub
into
into
test
adc
sbb
adc
movsb
out
mov
pop
and
ss
cmp
sub
or
fildll
xchg
inc
add
mov
push
dec
pop
xor
sub
test
add
insb
xor
icebp
mov
mov
xchg
add
aaa
mov
xor
out
es
clc
sub
rorb
add
aas
ja
fs
xchg
inc
mov
test
or
jae
push
outsl
jb
jp
and
lock
add
loope
loopne
addr16
addl
das
pop
mov
inc
cmp
inc
jb
push
cmp
jnp
add
data16
das
add
inc
add
roll
sbb
push
sahf
imul
sti
in
fisttpl
dec
xor
int
and
fucom
dec
sahf
data16
data16
loopne
frstor
push
jnp
in
jnp
jbe
sarl
adc
jbe
pop
sub
fcom
out
or
ret
add
xor
je
sbb
mov
loopne
arpl
insl
sub
mov
or
push
push
hlt
cmp
jg
push
sbb
loopne
fisubl
shl
sub
insb
out
adc
jns
mov
cs
add
push
inc
lcall
pop
ja
mov
pop
inc
ja
cmp
cmp
out
cmpsb
loop
fs
arpl
xor
and
add
punpckhbw
mov
daa
or
arpl
push
add
dec
or
in
inc
add
insb
adc
or
pop
js
loope
and
les
or
jns
or
addr16
loop
andb
int3
inc
jbe
push
inc
pop
sub
xor
xor
pop
mov
and
inc
inc
cmp
jno
mov
mov
ficomps
pop
movsb
ret
je
mov
cmp
dec
mov
js
arpl
add
sub
sub
or
out
xchg
ret
sbb
push
hlt
xor
adc
sub
add
xlat
std
int3
sub
push
adc
inc
orl
xorb
call
ffree
les
inc
test
popf
sbb
lock
pop
les
sbb
jge
sbb
inc
shrl
inc
dec
add
xor
insb
and
adc
test
xlat
mov
add
pop
pop
sbb
mov
dec
jne
jne
addb
adc
mov
movsb
pop
xlat
outsl
lods
cmp
or
jo
add
aam
sub
fs
cld
dec
shll
push
push
push
das
in
xor
lods
shll
and
jnp
mov
sub
push
rorb
jle
test
inc
addr16
inc
pop
xor
insl
pop
xor
enter
sti
lahf
divb
das
push
inc
push
pop
push
push
push
inc
dec
dec
dec
inc
mov
std
jne
data16
inc
outsb
arpl
pop
scas
sub
fisubrs
outsb
pop
fs
int3
lods
cmp
add
and
cmp
mov
dec
int3
xchg
jns
push
push
mov
ds
loop
push
test
jp
mov
dec
add
jge
push
in
add
nop
mov
dec
dec
ret
popf
lea
getsec
shlb
mov
mov
jmp
incl
ljmp
mov
ja
mov
sti
ljmp
jb
push
push
mov
inc
push
insl
ss
adc
cli
mov
mov
fldt
cmp
mov
or
sti
mov
ds
pop
sbb
xor
pusha
pushl
fsubs
sbb
test
xor
dec
xchg
pop
shl
dec
push
in
pop
mov
push
mov
xor
pushw
inc
push
dec
aaa
insb
cmp
or
out
mov
dec
dec
pop
cmp
clc
subl
push
mov
inc
push
and
outsl
push
and
imul
pop
or
clc
jmp
repnz
cmp
xchg
out
dec
enter
xor
jns
sahf
test
cwtl
inc
mov
mov
push
out
inc
mov
insb
inc
js
pop
add
xor
inc
dec
add
loope
pop
repnz
dec
pop
int3
pop
push
lods
popf
test
pop
xor
outsb
pusha
push
cmp
mov
cmp
cmp
xor
sub
mov
inc
xor
or
lds
push
xor
jmp
push
xchg
adc
adc
aas
popa
jo
add
shufps
das
js
ds
jne
cmc
gs
pop
jbe
push
mov
dec
das
out
bound
ret
fisubrl
xor
sbb
daa
push
and
inc
mov
pop
les
les
dec
ret
filds
sub
jmp
adc
imul
inc
xchg
xlat
das
pop
xchg
sbb
fisubrs
dec
and
dec
outsl
and
int3
js
inc
jns
pop
pop
inc
js
jnp
scas
movsb
fcoml
daa
fidivs
sub
or
pop
dec
jmp
test
lahf
popl
xchg
fbstp
pop
sbb
dec
or
pop
add
xor
adc
cmp
in
loope
andl
aaa
enter
push
jle
inc
adc
in
mov
inc
adc
sub
loope
popl
xchg
adcl
out
mov
test
push
fnstenv
add
xchg
and
add
pop
cmp
mov
dec
mov
cmp
or
cmpsl
mov
out
push
loope
mov
xor
ret
mov
cs
sti
jle
cwtl
lahf
push
mov
loopne
jb
fidivrs
rorb
adc
sub
lcall
sbb
cmp
repz
outsb
dec
add
test
mov
jbe
in
repz
aam
ds
cs
fldcw
lret
push
and
es
and
fwait
out
mov
cs
stc
shll
xor
incl
add
lahf
outsb
in
jns
arpl
pop
push
dec
scas
inc
call
pop
mov
inc
xchg
sub
jp
cmp
dec
jnp
mov
jmp
xchg
rorl
pusha
cmpsb
mov
fwait
in
xor
mov
stc
xchg
push
stos
int
mov
push
insb
push
jg
pushf
fstpl
popf
movsl
aad
adc
push
or
rol
movsb
rcl
idivb
mov
aam
scas
push
pushf
fmull
daa
idivb
dec
es
push
int
mov
mov
popf
fidivs
divb
mov
mov
cmpsl
stc
pop
inc
push
push
mov
fwait
mov
sahf
push
jns
mov
sub
push
bound
addr16
dec
sbb
lcall
xchg
push
fistpll
xlat
int3
push
jle
in
repz
in
ss
mov
pushf
je
adc
cmp
jmp
push
insb
movsb
ss
pop
pop
repz
jnp
bound
imul
xchg
fdivl
out
out
inc
or
mov
mov
iret
repz
jp
mov
ja
out
imulb
movsb
mov
jns
cmp
das
cmpsb
clc
inc
sahf
cmp
imul
out
lcall
js
iret
sarl
out
adc
iret
repz
sar
das
stos
daa
lods
cmp
repz
jnp
cmpsb
jns
iret
repz
adc
subl
or
daa
inc
cld
jg
dec
sbb
scas
sub
adc
jg
xor
rcrb
push
push
mov
xor
fs
testb
add
mov
popa
push
or
scas
int
mov
leave
loop
and
cmc
das
jbe
push
pop
mov
je
jg
dec
xchg
mov
and
jg
jg
pop
sbb
enter
adc
fadds
adc
daa
or
mov
push
imul
outsl
xchg
mov
mov
inc
cmc
jg
mov
je
jmp
cs
daa
inc
sbb
pop
loope
bound
aaa
push
stos
xchg
cmp
jae
xchg
inc
cmp
xlat
jno
test
dec
cmp
mov
ljmp
out
xchg
pop
fcmovb
push
push
dec
push
push
push
stos
mov
mov
insb
pop
dec
cmp
push
dec
testl
aaa
push
fists
and
adc
andl
push
pop
retw
pop
ret
inc
inc
dec
adc
sub
push
aaa
xor
inc
outsb
cld
ss
imul
and
cwtl
outsl
fldenv
in
shlb
cwtl
das
mov
incl
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
andb
fwait
rol
fwait
jmp
xchg
out
popf
rorl
mov
jmp
dec
fsubrl
stc
jbe
push
ds
lcall
enter
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
daa
cmp
sbb
cld
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
jmp
jo
dec
ret
insb
sbb
xchg
shll
cltd
test
push
push
shll
insb
aaa
push
dec
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
pushl
movsl
js
js
test
add
mov
mov
movsb
mull
jno
addr16
cli
ljmp
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
int3
rorb
arpl
ljmp
push
dec
cmp
dec
jnp
xor
dec
or
push
dec
inc
fs
gs
push
sub
incl
pop
daa
and
and
aaa
sub
sub
jp
inc
arpl
jb
mov
cmp
cs
push
jns
cmp
pop
insl
das
cmp
je
jge
inc
sub
data16
pop
or
jmp
pop
push
xor
sub
sbb
sub
add
sbb
xor
xor
daa
pop
data16
out
mov
and
xor
push
cmp
dec
mov
inc
addb
jno
ja
pop
scas
sbb
sbb
int3
xchg
cmp
add
cmp
dec
loope
push
dec
aas
adc
popa
cld
out
sbb
bndldx
xor
sub
xor
getsec
push
xor
and
sub
xor
xor
xor
scas
push
fldcw
xor
jbe
push
mov
add
getsec
inc
push
inc
jl,pt
std
mov
scas
ds
cmovb
pop
ss
pop
add
pushf
adc
jbe
jge
aam
mov
das
pop
adc
fs
jnp
dec
mov
imul
pop
xchg
dec
push
jecxz
sub
imul
xchg
adc
xor
lods
pop
xor
cmp
push
inc
scas
bound
mov
cmp
cmp
push
aaa
mov
or
mov
sub
arpl
loope
int3
scas
rcll
pop
add
popa
push
test
mov
mov
jg
cwtl
mov
or
adc
or
sub
push
je
mov
mov
bswap
inc
add
dec
adcb
loopne
adc
add
adc
adc
shl
bound
sub
nop
xor
mov
popa
pop
cs
xor
rorb
pop
adc
sbb
mov
adc
sbb
sbb
stos
fsubs
and
into
and
sub
sbbb
adc
gs
add
daa
mov
aaa
sbb
sub
mov
dec
sbb
pop
cmp
mov
and
mulb
cmpb
lret
pop
lock
sahf
mov
sub
adc
or
jb
cmp
adc
mov
inc
mov
add
popf
adc
xor
adc
rorb
and
dec
mov
or
aas
cmp
pop
inc
rcr
mov
dec
fs
push
in
jbe
adc
dec
inc
xor
push
cmp
ss
roll
sbb
hlt
cmp
cmp
xor
inc
test
xchg
divb
push
fmuls
aad
fisttpll
mov
xor
pop
add
into
out
or
inc
outsb
outsb
je
xor
fwait
inc
into
pop
js
xor
jae
popa
xorb
insl
gs
cmp
jle
mov
add
sub
adc
into
or
lods
sub
xor
insl
push
mov
push
adc
inc
adc
mov
cli
aaa
push
dec
jp
outsl
pushf
or
inc
jge
push
popa
je
inc
popf
or
and
lahf
add
and
jge
jg
sbb
inc
adc
add
rcrb
push
gs
inc
out
clc
inc
sub
aaa
scas
dec
and
or
daa
ret
aas
sbb
cmpsl
xor
sbb
rcrl
movsb
push
movsl
sbb
mov
testb
inc
dec
das
and
stos
add
mov
subb
and
or
dec
sbb
cmpl
fimull
sbb
arpl
sti
out
icebp
sub
mov
ds
imul
adc
lds
dec
sbb
sub
pop
fsubl
ret
js
push
bound
aas
or
inc
aaa
mov
aas
adc
sbb
addl
cld
fs
dec
popa
dec
add
or
pop
pop
push
dec
ja
jb
pop
lock
shlb
pop
sub
mov
jb
mov
sub
xor
cmp
sbb
aaa
pop
push
jl
add
fstpl
lea
les
sbb
inc
add
and
jns
fcoms
sbb
rorb
lahf
call
imul
sbb
daa
push
decb
jbe
jo
xor
mov
mov
sub
outsl
imul
sub
xchg
push
popa
das
lcall
mov
sbb
adc
mov
inc
cmp
jmp
into
testb
or
das
lea
or
arpl
push
push
ds
sbb
mov
ss
add
sub
ja
push
adc
lods
pusha
xor
xchg
and
pop
out
sub
push
cmpb
xor
push
mov
push
pop
push
pop
push
sahf
sbb
lcall
jno
lea
dec
loope
mov
cmc
inc
or
adc
outsl
and
jno
fistpll
outsb
jns
popa
and
jge
add
xor
adc
push
into
lds
sbb
push
add
xor
imul
out
jmp
xlat
cmp
loop
stos
xor
adc
daa
imul
lods
in
lea
mov
push
lret
dec
insl
data16
pop
jnp
out
pop
pop
pop
pop
pop
add
andl
fcomps
mov
imul
jnp
and
mov
cs
lods
inc
dec
or
and
adc
xor
dec
mov
xor
insl
inc
adcl
outsb
jo
cmp
fistl
push
inc
das
pop
cmp
push
cs
xchg
jno
pop
xchg
sub
sub
js
loopne
inc
dec
adc
into
inc
outsl
dec
and
inc
aam
pop
add
cmp
xor
mov
rolb
inc
xor
pop
cli
aaa
rolb
mov
push
jne
or
gs
movsl
dec
jno
ds
and
sub
push
mov
outsl
add
imul
jae
or
mov
push
outsl
imul
dec
outsb
push
je
or
shrb
cmp
insb
pop
push
push
inc
dec
xchg
movsb
adc
push
inc
pop
push
dec
inc
dec
lods
mov
mov
jb
gs
lock
inc
mov
daa
inc
negb
pop
daa
dec
push
adc
push
add
inc
sub
cmp
pop
or
adc
jp
nop
ret
adc
ret
sbb
xchg
mov
lock
dec
pushf
cwtl
daa
insb
mov
out
subl
fisubl
ret
mov
push
ret
jb
mov
inc
rcrb
adc
or
aaa
mov
inc
aas
jge,pt
mov
inc
and
or
das
ja
sub
cmp
xchg
aas
ret
xchg
addr16
jo
and
jno
outsl
aas
mov
jp
ds
aas
testb
and
inc
inc
ja
push
inc
xchg
or
divl
xor
xor
xor
xor
mov
mov
cmp
and
xor
push
xor
xor
cmp
push
out
cmpb
pop
push
pop
push
or
fwait
adc
adc
sar
push
adc
clc
imul
add
pop
inc
lcall
pop
data16
or
xor
repz
sub
adc
sub
cmp
adc
pop
sub
test
push
mov
adc
mov
cld
es
adc
cmp
stos
stos
add
pop
sbb
repnz
shlb
mov
aas
cmp
out
test
and
sbb
int3
les
adc
xlat
mov
rcrb
inc
sbb
sbb
cmp
cltd
add
test
loop
orb
xor
or
ja
and
and
les
dec
or
int3
inc
jp
out
mov
inc
aad
daa
cmp
and
or
pushf
and
das
and
inc
cmp
pop
outsl
adc
push
push
in
dec
mov
or
inc
jbe
mov
adc
or
add
testb
and
bound
test
inc
call
xor
pop
add
test
xor
test
sub
push
mov
mov
mov
insl
mov
mov
mov
cmp
aaa
xor
pusha
inc
cmp
hlt
inc
sbb
pop
stos
fldl
mov
daa
xor
jo
test
sub
xor
push
pop
adc
dec
jnp
das
lods
daa
mov
mov
and
mov
rclb
adc
out
mov
sub
daa
dec
adc
jge
das
add
mov
mov
insl
aaa
iret
and
dec
mov
inc
test
pop
ret
daa
test
push
push
imul
daa
outsl
shll
xchg
cmpsl
movsb
adc
imul
pop
inc
adc
repnz
rclb
push
cmp
test
das
imul
push
mov
scas
pop
loopne
loopne
cltd
daa
lahf
pop
adcb
xchg
outsb
popl
rcr
fwait
sub
int
arpl
mov
xchg
jg
lret
in
sub
pop
arpl
sub
mov
xor
fcoms
insb
lcall
dec
push
xor
movsb
bsf
pop
and
mov
inc
js
jl
xorl
test
outsb
ss
imul
mov
xlat
fadds
loope
lods
movsl
cmova
cmpsl
xchg
ja
mov
test
or
aad
outsb
add
rcr
sbb
cmpsl
stc
cmp
xor
popa
mov
shlb
out
pop
sbb
xchg
mov
es
es
xor
xlat
cmp
das
add
dec
xchg
lahf
sub
sbb
sub
insb
ret
xor
adc
cmp
sarl
xchg
sbb
push
adc
mov
inc
push
clc
sub
enter
sub
cmp
shrb
dec
pop
int
adc
inc
adc
jnp
dec
add
pop
and
sahf
call
xorl
dec
lds
outsb
push
cmp
data16
ljmp
or
mov
xor
pop
adc
pusha
adc
pop
ret
add
push
scas
push
rolb
jns
sub
inc
pop
stc
pop
mov
into
sub
push
xchg
pop
ds
sub
lock
sbb
addr16
xchg
jno
adc
mov
xor
ret
push
call
jmp
mov
lahf
pop
xor
inc
jb
or
inc
test
rorl
or
loop
scas
xrelease
lods
aas
dec
daa
mov
sbbb
sbb
dec
jae
into
add
or
ljmp
inc
or
push
loop
movsl
xchg
push
mov
dec
arpl
das
js
xor
inc
push
cmp
sbb
dec
adc
cmpsl
test
add
dec
push
pop
cmp
sbb
add
sbb
push
loop
sub
sub
mov
enter
pusha
dec
push
or
sbb
pop
data16
pusha
fcoms
sbb
cmp
pushf
mov
pop
mov
or
dec
push
or
adc
notb
xor
sbb
push
adc
sbb
push
push
pop
notb
pop
cltd
sbb
aas
or
stos
mov
fistps
sbbl
repnz
stc
pop
cmp
or
pop
pop
cmp
movb
sbb
inc
cmp
cmp
adc
adc
das
add
inc
iret
xchg
fst
pusha
inc
lock
or
and
inc
and
pop
push
sahf
ja
xchg
inc
adc
pop
sbb
and
repz
out
andl
ds
dec
cltd
or
xchg
popw
add
add
pop
or
or
adc
mov
sbb
and
sub
xor
inc
neg
mov
mov
mov
mov
mov
add
sbb
fldcw
sub
add
or
fwait
dec
mov
adc
pop
add
mov
insb
adc
push
push
dec
verw
int
mov
and
das
iret
push
adc
add
jg
cmpsb
pcmpeqd
movsb
adcb
or
stos
fs
addb
dec
add
mov
lds
addr16
add
wrmsr
adc
dec
subl
cs
iret
mov
push
cmp
cltd
add
xor
inc
pop
and
pop
xor
incl
dec
das
xor
dec
ds
loopne
dec
pop
pop
push
dec
dec
inc
add
rdpmc
adc
decl
push
sub
push
push
aaa
push
pop
cmp
pop
cmovae
xor
cmp
das
adc
js
pushl
pop
sbb
push
inc
xor
cmp
push
add
cmp
inc
es
cs
shlb
in
addb
and
out
pushl
aas
inc
dec
das
adc
xor
cs
xor
mov
sbb
or
add
aas
xor
pop
or
outsl
mov
xchg
and
and
cmp
adc
decl
cmp
ds
inc
xor
dec
dec
sub
inc
cmp
push
inc
sbb
aaa
je
or
push
pop
addl
sbb
or
loopne
cmp
and
in
lret
dec
fs
sub
add
add
out
xor
cmpsl
test
cmp
xor
mov
imul
push
orl
sbb
inc
insb
pop
jg
sub
test
jg
pop
sbb
xchg
inc
xor
test
pop
pop
sub
mov
and
sbb
outsl
push
insb
and
gs
inc
xor
add
enter
push
xor
cwtl
pop
lret
add
sub
rolb
out
rolb
jb
add
xor
add
push
cmpsl
pop
outsl
sbb
push
inc
push
dec
arpl
pushf
lock
dec
push
dec
jg
sub
add
repnz
icebp
out
je
add
inc
mov
mov
cmp
fimuls
dec
xchg
dec
inc
xadd
inc
sti
xchg
mov
movswl
cmpb
loopne
sti
fdivrs
jg
jo
maxps
sub
test
xor
xchg
sbb
movsb
outsb
add
insl
loopne
pop
inc
aaa
jbe
jnp
mov
add
repnz
in
les
mov
dec
and
fcoml
inc
add
sbb
out
loope
jae
add
jne
cwtl
idivb
and
daa
add
push
cs
inc
pop
lods
pop
lods
add
lods
cmp
imul
lods
add
daa
push
or
mov
enter
inc
inc
mov
outsl
aas
sbb
addr16
lock
cmp
push
enter
js
in
xchg
lock
mov
fdivs
lock
lds
daa
sbb
jo
fcomps
push
mov
push
xor
aas
sahf
mov
sub
data16
fsubs
jmp
jo
mov
mov
add
pop
scas
movsb
add
jae
dec
movsb
xchg
push
jg
xchg
cmp
je
in
jae
outsb
mov
mov
aaa
xor
outsl
xchg
pop
in
xchg
add
pop
pop
enter
data16
pop
leave
ret
xchg
fdivs
iret
test
mov
movsl
sbb
push
call
mov
pop
lods
lods
pushl
and
push
push
or
push
and
pusha
addr16
push
repnz
xor
xlat
negb
dec
jo
inc
push
mov
jo
cwtl
mov
or
and
push
enter
iret
roll
add
js
ja
or
es
and
xor
fiaddl
ja
insb
icebp
bound
or
outsb
xchg
sub
movsb
data16
push
jo
xlat
data16
das
pop
jnp
in
inc
clc
or
mov
lcall
jae
arpl
and
mov
pop
adc
dec
sub
fnstcw
adc
xchg
sub
mov
xor
mov
dec
mov
mov
pop
mov
sub
push
sub
or
lock
repz
sbb
add
in
nop
je
repz
cwtl
sub
sub
fsubp
jns
sub
ds
out
out
daa
daa
es
fs
repz
dec
sub
xor
sbb
lcall
and
or
and
adc
add
inc
inc
adc
cs
addr16
inc
out
jo
jl
or
add
jl
jns
push
rolb
aam
mov
sub
ret
fbld
hlt
push
js
in
jge
mov
inc
mov
push
movsb
jg
and
adc
jg
popa
pop
leave
add
mov
xor
inc
nop
or
nop
adc
fmuls
movsl
dec
outsl
add
inc
dec
scas
fs
lods
inc
dec
ss
in
add
or
xchg
dec
cs
lods
lock
cmp
inc
icebp
dec
fsubrp
add
insb
leave
adc
scas
add
push
xor
lcall
mov
outsl
out
xor
push
fbstp
sahf
ss
ss
add
fiadds
sub
sub
scas
add
insb
mov
ljmp
add
xor
sbb
dec
xor
sub
dec
sahf
sub
outsl
fcomip
int3
pop
leave
and
sub
push
out
test
xor
sahf
out
sub
pop
xor
push
sub
sub
repz
fmull
sbb
xor
dec
xchg
inc
mov
add
jg
add
andl
bound
in
dec
xchg
lock
aaa
and
lods
sub
xor
add
and
xor
adc
outsl
and
nop
dec
mov
xor
jmp
push
nop
push
pop
sub
or
sub
add
test
add
mov
add
add
fcom
sbb
pop
push
aaa
xor
push
repnz
add
pushf
cmp
outsl
inc
sub
push
pop
leave
mov
push
pop
daa
add
push
jbe
aaa
lahf
jmp
mul
adc
lahf
mov
sub
pop
push
pop
xchg
sub
add
and
lcall
popl
pop
leave
xor
lock
mov
xor
jno
je
ja
sub
out
ja
adc
insb
shrb
outsl
add
inc
adc
xchg
daa
testl
push
hlt
push
push
xor
cmpsl
scas
sbb
push
cld
das
loopne
push
lock
or
pshufw
dec
mov
adc
int3
fsubrl
lahf
scas
xchg
dec
xlat
or
cs
jbe
and
cmp
add
or
pop
xlat
or
xchg
shrl
leave
subb
xor
lahf
lds
adcb
pop
pushf
das
pop
add
mov
lods
das
mov
add
and
push
repnz
js
add
repnz
scas
sbb
fisubs
call
mov
cmpsb
xchg
or
aaa
mov
ja
add
or
or
add
dec
enter
xor
leave
xchg
cmp
outsl
xchg
xor
je
clc
daa
scas
lods
pop
movsb
jg
mov
mov
add
jg
enter
faddl
adc
es
and
sub
add
rorb
test
sub
xor
mov
mov
xor
outsl
add
mov
aaa
pop
jno
clc
or
call
pusha
ret
xor
push
or
aaa
nop
xchg
sub
add
pop
repnz
push
push
xchg
cmpsb
pusha
add
mov
pop
leave
mov
add
iret
daa
call
out
sbb
daa
or
pusha
and
out
loope
xchg
sub
movsb
pop
pop
push
push
les
push
test
cmp
ss
inc
js
lods
outsl
les
mov
mov
mov
and
aas
aaa
and
fs
xor
pop
xchg
or
push
xor
test
movsb
pop
or
xchg
out
push
fbld
lcall
aaa
and
mov
push
push
mov
lahf
lock
orl
ss
scas
fadds
xchg
add
xorb
mov
add
sbbb
inc
pop
or
test
je
in
outsb
daa
or
and
mov
aaa
stos
shrb
push
cmp
aas
sbb
data16
sbb
insb
aaa
lahf
fldenv
loopne
jl
mov
scas
inc
lcall
in
mov
enter
insl
mov
mov
xchg
outsl
mov
pusha
hlt
fwait
insl
aad
push
mov
or
adc
lret
and
and
sub
mov
and
cmp
out
mov
push
fwait
iret
rep
repnz
mov
mov
sahf
out
mull
sub
mov
out
and
dec
mov
add
cwtl
mov
int
sub
cs
out
sahf
dec
jae
mov
iret
repz
push
js
mov
loope
xor
ss
imull
lcall
jl
mov
xor
sahf
xchg
mov
rcrb
aaa
movsl
ds
repz
and
inc
mov
out
cmp
dec
cmp
push
cmp
cmpsl
stc
cmp
out
and
loope
cmp
fs
imull
sahf
out
aas
jns
repz
iret
repz
push
jp
shr
sahf
out
lcall
cmp
repz
sbb
aas
bound
shr
inc
pop
cmpsb
repz
out
add
sarl
into
dec
inc
fnstsw
inc
pop
out
ds
xchg
rorl
sub
sti
cmp
inc
dec
mov
lcall
dec
adc
lahf
out
gs
jns
cmpsl
stc
or
pusha
adc
ds
out
fmuls
cs
mov
mov
out
ds
push
je
mov
lahf
ja
push
rcll
xchg
push
repz
cmpsl
shll
push
pop
jge
ds
ds
lret
out
and
push
rcrb
ds
repz
imul
jns
iret
repz
sbb
ret
jns
repz
jne
stc
cmp
out
divps
add
jl
cmpsl
and
xor
ds
mov
or
dec
dec
repz
push
call
lahf
out
cmp
movl
out
sbb
pop
andl
test
iret
repz
lret
push
out
jns
mov
int
imul
out
jl
push
and
inc
outsb
jl
jge
mov
push
lahf
push
jae
ds
shrl
gs
ds
pushf
addr16
sbb
repz
out
sti
js,pn
movsb
out
lcall
lret
iret
repz
push
jp
xchg
xlat
cli
pop
iret
sarl
rorb
jl
xchg
fcompl
sub
mov
into
icebp
sbb
inc
mov
int
jg
mov
int
imul
fwait
int
sti
xchg
mov
dec
mov
mov
sahf
out
call
jle
jns
out
mov
out
ds
xchg
ret
push
xchg
cmp
iret
repz
in
and
sahf
out
cmp
jmp
jl
out
jne
mov
or
roll
sbbl
out
dec
xchg
xorl
jns
cld
stc
cmp
ds
xchg
testb
iret
or
bound
imul
lcall
jmp
fwait
ds
loop
fwait
add
int3
nopl
adc
xchg
sbbl
mov
sbb
lfs
inc
mov
fdivrl
pop
popf
mov
pop
dec
pop
pop
jb
stos
aaa
lods
mov
out
pop
shrl
lahf
mov
enter
js
or
jg
xor
out
aas
fsubs
fcoms
adc
pop
and
nop
xchg
sbb
outsl
loopne
sub
cs
jp
jle
pop
and
rorl
jbe
jns
mov
les
into
aas
fxch
inc
mov
inc
pop
fmul
mov
popf
call
jecxz
sub
inc
shl
mov
cltd
fadds
mov
jbe
enter
pop
mov
and
cs
aas
push
cmpsb
inc
dec
cmp
mov
inc
filds
xor
ja
inc
xchg
push
pop
dec
or
jnp
inc
fnstsw
leave
xorb
pushf
dec
rclb
add
mov
add
jmp
scas
out
push
add
xchg
xchg
xchg
out
loopne
and
leave
and
inc
and
jb
push
and
out
in
in
mov
leave
repz
add
push
xchg
pushf
pushf
pop
and
aad
xchg
pushf
pushf
pushf
in
cmc
call
sbb
das
cmp
pushl
enter
push
es
es
sbb
insb
es
orb
sahf
out
sahf
lea
cwtl
pop
mov
jnp
out
push
pop
xlat
popw
pop
fstp
push
jns
out
add
hlt
cmpsb
mov
jns
fsubr
inc
inc
decl
inc
rorl
push
xchg
cmpsl
dec
add
cmp
or
lea
xchg
daa
popf
daa
cs
ja
movsl
incl
dec
dec
dec
ljmp
ficoms
pop
sub
jmp
sbb
inc
sub
pop
sub
sbb
imul
mov
fmulp
xchg
and
push
or
out
mov
rorl
out
sahf
out
xlat
or
jns
in
psubb
add
adc
repz
adc
adc
repz
repz
adc
cmp
push
pop
pop
sbb
fchs
cmp
scas
mov
xchg
sbb
xlat
addb
repnz
cmp
into
jbe
out
add
sub
sbb
lock
or
and
jb
daa
adc
sub
sub
icebp
ss
subb
mov
nop
roll
mov
push
mov
mov
push
fcomps
dec
repnz
sub
jg
xchg
and
sub
xor
xchg
imul
mov
in
pop
nop
loope
pop
in
xchg
mov
inc
xor
sub
xorb
in
js
and
mov
sub
push
stos
rcrb
jbe
add
sbb
ss
inc
cmpsl
movsb
pop
sub
xor
cmp
sub
and
mov
and
sahf
out
dec
xchg
ja
add
add
pushl
inc
pop
push
in
mov
daa
and
sub
das
xor
mov
cmp
inc
cs
add
xchg
arpl
jns
test
aaa
dec
decl
and
mov
cmpsl
pop
loope
imull
das
pop
das
and
fisubl
iret
sub
leave
and
push
dec
push
pop
leave
and
and
mov
and
add
sub
xchg
mov
xor
adc
adc
xor
push
add
test
repz
add
push
scas
popf
pushf
je
aas
inc
dec
dec
or
repnz
outsl
or
out
fnstsw
das
pop
push
cmovle
shlb
sarl
in
mov
mov
sbb
aaa
push
pop
pop
scas
inc
or
rorl
mov
es
in
movsb
mov
iret
jae
scas
ret
add
js
loopne
xor
divb
dec
inc
and
dec
xor
or
mov
xor
mov
push
mul
xchg
bound
ss
leave
mov
adcb
cmp
test
nop
xor
mov
mov
mov
fnsave
call
jns
mov
xor
das
xor
jns
cmp
inc
xor
pop
xor
jns
data16
jl
mov
and
js
xor
or
add
push
mov
leave
leave
leave
leave
ror
loope
in
leave
in
testl
inc
jbe
sbb
lahf
inc
xor
out
mov
xor
jb
add
loopne
dec
sahf
add
faddl
shll
rclb
mov
push
fsubrs
cmp
or
addr16
xor
xor
xor
jb
enter
xor
xor
xor
and
insl
xor
andb
daa
daa
mov
lea
mov
lahf
ret
xor
mov
jecxz
out
xor
xor
cmpl
adc
xchg
out
and
data16
dec
and
add
mov
in
lods
mov
addr16
xor
in
xor
xor
dec
and
push
add
bound
xchg
mov
jb
scas
ss
pushf
push
lcall
dec
cs
push
ss
push
das
xchg
dec
es
jb
add
adc
sbb
and
xchg
pop
leave
xor
inc
push
and
daa
pop
ja
mov
iret
in
in
lcall
pop
ror
push
jns
sbb
jg
dec
out
or
and
push
daa
and
inc
pushf
je
sbb
xchg
imul
push
cmp
fdivs
inc
das
imul
cmp
xchg
cmp
xchg
pushf
pushf
pushf
dec
into
fsubp
repnz
sahf
out
cmp
idivb
cmp
and
jmp
mov
fadds
add
bswap
lret
lret
lret
mov
mov
cmp
lret
lret
lret
cmp
cmp
cmp
cmp
lret
lret
lret
idivb
cmp
cmp
cmp
lret
lret
lret
push
cmp
cmp
cmp
cmp
mov
lret
cmp
cmp
cmp
cmp
or
cmp
or
or
cmp
cmp
push
add
cmp
add
add
inc
bnd
cmp
andl
pop
ja
push
pop
cmpsl
rcll
mov
inc
repnz
addr16
jge
cmp
and
inc
cmp
cmp
pop
iret
leave
insl
and
add
pop
and
add
imul
out
mov
fcoml
in
cmp
loop
mov
testb
adc
repnz
js
lea
pop
insb
cmp
repnz
mov
test
ja
push
pop
pushf
mov
and
or
repnz
jns
aaa
and
sbb
push
inc
push
jo
mov
push
push
cltd
or
cmp
loope
in
cmp
in
and
into
inc
jnp
pop
lahf
dec
jns
ja
mov
pop
push
add
cmp
fucom
jno
add
jl
sahf
out
xchg
or
iret
cmp
das
cmp
leave
rorl
push
leave
aam
ffreep
fnstcw
sahf
ljmp
aas
outsl
inc
pop
adc
fcoms
outsb
or
aas
ja
add
pop
mov
out
lahf
push
addr16
loop
inc
rcr
aas
lahf
call
xchg
test
inc
jmp
pop
mov
dec
in
es
xchg
pop
jb
pop
xchg
dec
cs
dec
inc
mov
jo
pavgw
pop
leave
push
lcall
inc
xchg
dec
cs
push
sub
adc
dec
cs
sub
and
xchg
leave
and
lods
pop
leave
and
xchg
iret
insl
mov
add
fisubl
aaa
inc
cmp
or
xchg
dec
fs
shll
cmp
test
lea
ja
imul
mov
enter
popa
test
inc
sbb
cmp
inc
push
inc
push
inc
sbb
jb
es
ja
inc
jb
pop
jb
mov
sahf
ja
orb
inc
repnz
popf
dec
and
add
arpl
std
aad
in
add
and
leave
inc
pop
push
inc
pushf
mov
add
pop
out
push
rorl
jbe
jle
add
repz
xchg
push
mov
push
pop
leave
jae
das
or
xchg
mov
and
pop
jl
icebp
iret
das
pop
inc
or
les
inc
iret
sbb
adc
inc
ds
pusha
xlat
pop
and
sbbl
lock
mov
and
inc
test
pop
xchg
mov
dec
outsb
setge
in
repnz
mov
mov
out
iret
clc
notl
inc
jns
pop
bound
push
add
les
out
sub
xor
adc
inc
pop
or
fbld
pop
push
daa
mov
jb
loop
push
inc
call
adc
ja
jg
push
inc
popl
xchg
cmp
add
pop
leave
pop
in
push
cld
das
fisubl
add
xchg
xchg
inc
iret
enter
inc
cmp
enter
pop
inc
addr16
jne
mov
sahf
pop
fcomp
cmp
cltd
push
vmwrite
iret
pop
syscall
xlat
fnstsw
out
filds
out
adc
enter
dec
sub
dec
push
xor
mov
jbe
push
add
sbb
push
cmp
inc
movsb
lods
mov
add
iret
repz
add
repz
pop
in
in
or
push
ret
or
or
mov
push
or
jb
repnz
or
jb
jb
pop
push
add
jb
add
sbb
cmp
repz
sbb
xor
cmp
repz
cmp
leave
dec
mov
pop
jns
out
fs
and
out
jl
lahf
dec
test
dec
add
ret
iret
dec
jbe
iret
add
out
or
psllq
pop
sbb
lock
inc
dec
aas
dec
adc
push
dec
iret
in
in
pop
setb
out
and
jbe
enter
mov
psubusb
enter
lock
clc
add
leave
leave
leave
or
sbb
leave
repz
sub
cmp
leave
inc
dec
adc
bnd
out
adc
adc
ja
push
pop
js
dec
out
pop
and
sbb
add
pop
dec
shl
or
insb
inc
out
dec
fidivrs
pop
rcrb
add
in
dec
out
icebp
cld
clc
add
addl
and
add
xlat
mov
add
cmp
leave
inc
push
and
dec
subb
inc
shrb
mov
inc
inc
dec
dec
mov
outsb
repnz
test
scas
mov
mov
outsb
outsl
sar
fstpt
jecxz
jmp
and
or
adc
jb
and
js
push
dec
iret
push
dec
xor
es
fisttps
fwait
loopne
das
pusha
dec
dec
outsl
insl
push
in
dec
sahf
or
or
sahf
das
mov
or
cmp
fisttps
add
push
outsb
scas
dec
pop
mov
cmpsl
ljmp
cmp
jecxz
data16
nop
pop
push
adc
and
mov
enter
and
sahf
dec
lock
das
test
push
inc
mov
addr16
outsl
leave
pop
xor
pop
dec
sub
inc
push
je
outsl
test
aas
loopne
or
enter
adc
dec
sub
add
out
xor
add
out
push
pop
pop
or
or
orb
sahf
out
mov
or
out
lods
movzwl
mov
jns
ret
mov
dec
cmpsl
popf
dec
dec
js
es
push
movsb
jo
loopne
sbb
dec
push
fists
xchg
and
pop
push
popa
push
imul
push
jns
push
adcl
mov
xor
and
daa
cs
xor
jb
call
push
xchg
push
pop
daa
push
daa
pop
fsubl
iret
scas
xlat
repz
xchg
daa
add
push
adc
mov
push
mov
cmp
xchg
and
push
cmp
inc
or
dec
insb
push
jb
xchg
call
or
out
fistl
adc
jg
xchg
mov
aad
iret
push
xchg
in
pop
cmc
paddw
bnd
inc
out
push
inc
jb
mov
push
bsf
in
and
out
and
das
into
pop
push
pop
push
dec
ss
cmp
fcmovne
inc
push
dec
xorps
bound
mov
js
mov
mov
mov
or
stc
dec
leave
push
mov
pushf
fsubl
push
repnz
or
in
inc
mov
das
push
cmp
xchg
testl
push
pop
aas
dec
mov
mov
push
aad
adc
push
das
lds
pushf
in
push
mov
jae
adc
mov
add
lahf
mov
rorl
iret
lar
cs
fmulp
xlat
fistps
or
or
outsl
mov
out
testl
addl
push
test
lds
scas
repnz
pushf
inc
lea
add
sahf
out
pop
pop
arpl
add
jae
pop
jnp
repz
mov
repnz
or
or
repz
mov
lret
mov
out
pop
push
femms
add
iret
repz
add
push
cmpsl
daa
push
adc
daa
cmp
push
pusha
jbe
mov
push
push
jne
mov
adc
popf
or
mov
leave
jae
ja
add
push
das
xchg
imul
or
adcb
jnp
inc
cmp
mov
cmpsl
rcrb
outsb
daa
push
pop
fistpll
cmovl
jbe
fstp
push
subps
fs
push
xchg
mov
xchg
rorl
mov
cmpxchg
in
leave
ror
je
jb
popf
jmp
repz
push
push
xchg
int
sbb
push
filds
and
inc
jns
scas
dec
in
jbe
rcr
subps
fs
jbe
into
insb
out
das
stos
push
iret
leave
sub
xlat
add
popf
cmp
in
outsl
clc
pop
pmulhuw
pop
xchg
add
add
pop
iret
repz
and
or
or
or
inc
push
push
pop
ja
cmp
xlat
adc
cmc
je
xchg
add
mov
leave
dec
fdivl
add
psubusw
jns
pop
jmp
lea
pop
sbb
sahf
xchg
out
add
add
add
sbb
out
mov
pop
mov
pop
pop
leave
mov
xchg
stos
addr16
outsb
xchg
inc
sub
js
in
and
cwtl
jnp
jnp
mov
in
scas
into
pop
push
pop
push
push
add
jns
dec
out
jmp
push
aas
pop
mov
lahf
bound
pop
lahf
jp
jb
mov
pop
lidtl
add
leave
repz
mov
xchg
or
sysret
mov
stc
mov
jl
inc
or
xor
jl
cmp
jge
xchg
cmp
xor
cmp
pop
xchg
scas
xor
adc
cs
imul
arpl
or
imul
pop
sbbl
pop
lahf
xchg
dec
mov
jns
lods
pop
mov
jns
testl
das
push
push
in
or
sti
aas
add
repz
insl
adc
adc
xor
movsb
fwait
cmp
cmp
inc
clts
mov
sbb
pop
sub
mov
pop
pop
pop
arpl
cmp
iret
adc
adc
outsb
daa
iret
jae
push
mov
test
mov
xchg
pop
in
pop
pxor
in
lock
pop
pop
jg
push
push
xor
jmp
add
inc
pop
pop
or
enter
jg
pop
inc
pop
in
mov
mov
pop
and
add
nop
cwtl
cltd
dec
pop
mov
adc
jo
cs
push
negl
sahf
pop
pop
iret
mov
pop
ret
mov
cmp
int3
or
xchg
xor
pop
in
add
gs
insl
pop
jne
mov
in
jge
test
lea
mov
pop
popf
pop
movsl
pop
lods
pop
xchg
outsb
mov
pop
pushf
pushf
pushf
je
loopne
lock
addl
iret
mov
fildll
enter
sbbl
inc
pop
dec
pop
push
pop
and
mov
dec
dec
lods
mov
iret
repz
add
add
add
fucom
push
pop
in
or
cmp
sahf
cmc
or
add
cmp
xchg
pusha
adc
iret
add
ja
push
adc
daa
fstpl
push
push
addps
insb
subb
sahf
inc
sbbl
jns
pusha
addb
rolb
xchg
pop
repnz
pusha
mov
mov
adc
jg
or
repnz
fidivs
sahf
mov
ucomiss
adc
inc
inc
or
jmp
daa
inc
incb
popa
and
push
xchg
test
movsb
rolb
test
push
cmp
pop
rolb
test
inc
and
sbb
add
push
pop
paddusb
leave
stos
xchg
mov
rcrb
enter
sub
pop
loopne
dec
mov
add
rcll
addr16
in
ss
inc
xchg
add
and
pushf
add
xchg
pop
and
add
and
scas
mov
int3
loopw
push
add
adc
sbb
dec
mov
and
sidtl
sub
cmp
pop
pop
movb
lcall
ja
insl
xchg
xchg
arpl
pop
dec
sahf
fcmovne
xchg
mov
test
cmp
mov
push
daa
daa
daa
iret
add
in
or
adc
xor
arpl
daa
mov
xchg
mov
adc
jnp
xchg
gs
adc
mov
cltd
repnz
test
mov
shll
xchg
xchg
pop
leave
loopne
jmp
gs
dec
ret
insl
pop
paddd
gs
mov
push
xchg
pop
jb
push
push
jl
xchg
pop
jb
test
pop
jb
pop
aam
add
loop
sbb
xor
es
pop
and
in
filds
pop
push
fsubrl
pushf
je
jl
cmp
out
pop
jl
add
xor
pop
jb
add
push
ret
xchg
pop
xor
pop
dec
es
or
mov
mov
das
mov
or
and
dec
and
cmp
pop
mov
ficoml
std
mov
and
or
push
lods
testl
add
add
aas
test
in
push
push
mov
cmpsl
fwait
movsb
pop
mov
orb
ljmp
outsl
or
and
cmp
push
sub
lea
fisubl
iret
pop
repz
dec
dec
data16
jl
add
repz
mov
add
out
cmp
jg
fld
xchg
xchg
xchg
loope
std
or
arpl
add
imul
aaa
fstps
sub
sbb
imul
imul
sbb
dec
imul
jge
push
cmp
repz
pop
lea
xchg
repz
repz
in
iret
lods
or
imul
sbb
rdtsc
insb
jp
daa
and
sti
add
add
fsubl
outsb
insb
pop
adc
xchg
fwait
cmp
push
pop
seta
insb
pop
insb
imul
jns
test
lcall
insb
mov
mov
xchg
xchg
insb
shrl
out
repnz
xchg
lahf
mov
insb
or
sahf
out
xchg
insl
push
push
sbb
sahf
out
pop
aas
and
out
sahf
out
and
imul
and
sahf
out
daa
xchg
sub
out
sub
jns
sub
or
cs
sahf
out
das
out
xor
xchg
out
ucomiss
or
out
in
fimull
outsb
push
adc
cmp
sbb
cmp
int
mov
mov
push
fcompl
mov
addb
pusha
mov
nop
outsb
jns
out
das
mov
mov
in
in
fistpl
sgdtl
inc
repnz
pop
pop
hlt
outsb
adc
ss
mov
sahf
out
pop
push
add
add
xchg
xchg
xchg
out
aaa
push
imul
enter
out
or
adc
repz
sbb
and
sub
cmp
xor
adc
cmovl
in
in
push
cmpsb
scas
fmull
out
sbb
fmull
in
repz
pushf
in
hlt
pop
cld
daa
mov
in
sbb
and
inc
pop
dec
push
iret
jae
cmp
outsb
mov
xchg
jae
cmp
pushf
sub
iret
sub
call
stc
call
push
jb
sahf
pop
sbb
xor
sub
insb
fstpl
popa
push
aaa
jb
pop
cwtl
dec
outsl
jb
add
iret
dec
sbb
push
add
iret
int
pmulhuw
out
add
mov
jae
xchg
xchg
out
jb
jae
add
pushf
fmull
sbbb
inc
repnz
iret
push
add
add
lock
cmp
sti
jae
push
je
nopl
dec
sahf
out
daa
xor
cmp
dec
or
cmp
and
adc
sahf
xchg
lods
mov
sahf
xchg
out
sbb
jl
xchg
out
out
cli
push
add
lea
push
and
sbb
and
enter
cmp
jmp
xchg
outsl
jne
push
sub
and
adc
dec
add
sbb
xchg
cwtl
inc
mov
outsl
mov
ss
bswap
push
add
push
fsubl
scas
mov
jne
out
sahf
cmp
repz
or
pop
jbe
pushf
mov
add
pop
xchg
pop
cmp
nopl
pop
jbe
out
in
push
adc
aas
push
adc
jns
cmpsl
fwait
lar
push
enter
sbb
pop
jbe
sahf
nopl
inc
aas
sbb
xchg
xor
dec
inc
js
cwtl
out
jns
add
xchg
push
add
mov
pop
mov
ljmp
mov
or
adc
inc
pop
and
push
shlb
popf
fmull
inc
dec
xchg
push
add
push
and
ja
daa
daa
mov
mov
ljmp
jns
leave
leave
mov
ror
jae
cmp
pavgw
push
repz
push
cmp
js
js
dec
dec
jb
js
lcall
push
xchg
popa
add
in
jns
test
pushf
mov
mov
xchg
xchg
add
sbb
cmp
jns
fwait
pcmpeqd
dec
push
mov
repz
cmp
cmp
add
cmp
leave
push
pop
push
gs
in
xchg
out
nop
cwtl
dec
mov
rcrb
xor
pushf
pop
out
sbb
incb
jp
jp
das
fidivl
cmp
leave
rep
cmovno
mov
je
jl
pop
inc
cmp
jp
xchg
add
dec
scas
mov
push
das
cmp
iret
sbb
mov
adc
bnd
pop
add
test
iret
jae
cmp
add
jnp
add
repz
pop
push
js
fucomi
jbe
mov
nop
cwtl
pop
mov
mov
pop
mov
mov
inc
dec
ja
outsl
add
daa
div
inc
fwait
mov
fistpll
ss
es
jl
pop
jl,pt
iret
sub
shlb
pop
imul
dec
pop
jb
or
lods
cmp
cmp
mov
int3
cmpsl
pop
leave
jae
aam
pop
div
and
push
add
movsl
je
jge
and
leave
inc
dec
or
pushf
cmp
fs
jbe
addb
fildl
inc
mov
cs
dec
cs
int
xchg
adc
adc
inc
addr16
and
xor
imul
dec
sahf
out
pop
jp
orb
iret
xchg
das
lcall
mov
fcmove
addr16
add
outsl
jle
add
mov
xchg
jg
and
xchg
jg
add
in
je
mov
add
add
lret
lret
stos
jg
jg
jg
push
or
cmp
repz
or
or
lret
data16
or
or
mov
push
sbbb
and
pop
pop
pop
pop
das
cmpb
inc
adcb
pop
pop
pop
pop
andb
cmpb
pop
pop
xchg
test
xchg
out
pop
mov
mov
pushf
pushf
je
sbb
pushf
pushf
pushf
sbb
pop
push
repz
pushf
pushf
adc
daa
daa
iret
sub
ljmp
orl
out
sahf
xor
xor
aaa
jns
out
xor
out
sahf
out
cmp
outsb
sahf
out
sahf
cmp
test
popf
cmp
jnp
ficomps
sahf
xchg
out
inc
mov
jns
aaa
cmove
faddl
imul
std
dec
or
out
dec
push
dec
sub
leave
leave
in
xor
aas
dec
push
cmpsl
fwait
cmp
pusha
push
imul
xchg
xchg
xchg
xchg
jbe
mov
mov
pop
andb
movsl
ljmp
fwait
lea
sbbl
movups
sbb
and
and
or
cmp
repz
pop
add
add
pushf
jae
movsl
in
lea
movsl
rcr
and
fs
das
sub
daa
daa
pop
mov
add
popf
cmp
fstps
clts
loope
daa
daa
daa
jmp
in
outsb
scas
test
push
iret
sub
xor
pop
jmp
pop
cmp
incb
push
test
test
sub
jne
daa
xchg
lahf
cmpsl
leave
jae
cmp
leave
leave
add
lock
sti
pop
cmovle
test
aas
loopne
nopl
test
test
push
pop
pop
cmp
cmp
imul
adc
sahf
out
cs
repz
repz
sbb
sbb
sbb
clc
nopl
enter
xchg
and
mov
out
and
and
cmp
inc
leave
rep
daa
push
outsl
pop
push
daa
data16
xchg
call
sub
pop
in
xchg
add
add
cmp
fiadds
out
push
add
daa
jg
xchg
xchg
inc
mov
xchg
xchg
push
add
in
xor
xchg
jl
je
in
xchg
pop
jns
sbb
sub
mov
mov
scas
leave
into
adc
unpcklps
repz
fists
lea
mov
cmp
jae
mov
sub
aaa
sbb
inc
nopl
and
mov
and
iret
cmp
jns
test
push
sub
jne
out
aaa
push
in
inc
add
adc
sub
nop
xchg
test
dec
fwait
loop
in
mov
pop
add
dec
pfrsqit1
js
mov
mov
das
cmp
cmp
repz
add
push
or
test
mov
push
sbb
leave
stos
adc
sub
xchg
mov
or
outsl
mov
ror
jo
lret
pop
outsb
pop
loope
dec
mov
cmp
negl
sysret
sahf
notl
mov
or
sahf
out
mov
adc
jno
out
adc
mov
leave
repz
add
repz
add
cmpsl
mov
movzwl
xor
ficomps
nop
dec
pop
in
stc
je
out
add
push
mov
push
fimuls
outsb
or
cmp
dec
or
repz
pop
rcll
mov
adc
in
divps
imul
mov
repz
sbb
ds
mov
jns
out
add
add
cmp
xchg
push
pop
push
outsl
push
fsubrl
iret
or
seto
fwait
iret
repz
pushf
cmpsb
mov
mov
cmp
adc
movhlps
repz
ljmp
add
in
outsb
and
movaps
xor
repz
cmp
sbb
leave
repz
cmp
and
popf
cmp
jnp
xchg
jns
cltd
movsb
scas
push
sub
xchg
popl
mov
in
in
outsb
pop
sbb
jns
pop
cmp
inc
dec
cmovle
scas
call
jns
leave
repz
aaa
cmp
jns
jbe
loopne
pop
jg
push
cmp
jp
jns
orl
stos
mov
and
inc
in
sahf
jle
adc
mov
fbld
inc
jmp
mov
push
not
xor
cmp
cmp
mov
mov
mov
push
cmp
mov
jo
and
data16
leave
push
sub
xor
iret
testl
add
mov
pop
shlb
sarl
addb
das
cltd
inc
sahf
and
cmp
sbb
cs
addr16
xor
xchg
pop
bound
das
inc
dec
cs
jb
xchg
xchg
cmp
inc
inc
mov
mov
lods
adc
push
mov
mov
xchg
mov
nop
sahf
fxch
push
lahf
sub
mov
pop
data16
nop
mov
nop
nop
mov
push
cld
mov
xor
push
mov
mov
mov
pop
testb
push
xchg
push
pop
sub
mov
out
jns
push
add
push
add
pop
add
js
adcl
fs
int3
xlat
hlt
and
xchg
rorl
xchg
rcll
aaa
jmp
mov
push
mov
fsubrs
and
enter
dec
mov
and
nop
addb
enter
inc
call
fdivr
mov
xor
xchg
push
leave
out
dec
add
mov
and
int3
xorb
push
daa
nop
or
xchg
cvtps2pd
clc
jl
mov
add
inc
repnz
loop
inc
mov
xor
mov
fsubl
cmp
mov
loopne
aas
cmp
stos
push
adc
mov
scas
sbbl
hlt
xchg
incl
pop
jb
stc
sarb
leave
push
pusha
sub
cmpsl
or
push
mov
int
inc
dec
cs
shlb
mov
or
in
loopne
in
mov
pop
insl
xchg
faddp
and
push
jb
ja
mov
inc
add
mov
pop
xchg
stos
jae
int3
aas
xchg
out
repnz
xchg
mov
mov
lahf
mov
pop
fdivrs
mov
pop
mov
iret
mov
add
arpl
outsb
das
sub
xor
push
adc
loopne
add
xor
sbb
adc
cli
mov
scas
mov
dec
shll
lahf
fdivrs
in
test
mov
xchg
call
fcomip
pop
das
sub
jns
dec
xor
and
nop
mov
cmp
imul
es
adc
cmp
xchg
xchg
lcall
filds
mov
pushf
xchg
add
add
inc
outsb
xchg
enter
xchg
bound
cwtl
rclb
stos
jmp
cwtl
pop
adcb
dec
mov
cwtl
cwtl
jg
jb
xchg
cmp
mov
daa
mov
jae
inc
pavgb
sub
daa
enter
inc
scas
xor
cltd
fucomi
repnz
aas
sub
add
mov
inc
cltd
iret
add
stc
pop
dec
cltd
push
cltd
jg
pop
daa
mov
nop
shll
mov
or
hlt
ja
aaa
mov
test
cmpsl
cmp
push
fsubs
sbb
es
inc
cltd
ret
loopne
push
fucomip
dec
imull
lcall
out
ljmp
pop
mov
jg
outsb
ss
cmp
fistps
setno
add
lahf
into
repz
mov
aad
adc
lcall
pushf
nop
ret
pop
ret
mov
push
adcb
lcall
push
aas
jae
xchg
add
pop
clc
iret
add
movsb
in
fmuls
out
das
cmp
sbb
fstpl
ja
dec
mov
inc
inc
repnz
ja
sbb
mov
aaa
test
add
movsb
out
loope
in
loop
inc
push
push
pop
push
mov
leave
sbb
test
adc
push
pushw
repnz
adc
jg
inc
push
lds
sub
inc
pop
and
nop
stos
mov
push
push
xchg
or
fistpl
fistpl
and
push
lock
add
cmpsb
mov
inc
push
pusha
das
sub
inc
aas
push
sub
pusha
cmpsl
and
inc
aaa
lods
mov
add
aaa
xlat
push
sbb
push
vmwrite
sbb
sahf
out
pop
or
or
aaa
or
mov
imul
daa
adc
adc
xchg
xchg
fisttpl
xor
push
addr16
das
push
xorps
loopne
insb
das
insl
push
and
pop
jo
jns
push
pop
andb
jo
mov
test
xchg
fcmovne
leave
repz
in
adcb
xlat
mov
pop
data16
sub
mov
add
inc
enter
and
push
mov
and
jmp
mov
and
addb
adc
pop
push
add
movsb
add
addr16
mov
andb
fisttps
mov
jb
lahf
loopne
inc
jle
test
shll
mov
mov
add
mov
in
call
nop
pop
jle
adc
push
ficompl
fnstcw
mov
fidivl
rcr
fsubp
stc
jb
jle
pop
mov
addr16
and
sarl
or
add
stos
lock
repz
in
rol
sarb
mov
test
jns
out
movsb
mov
in
sahf
mov
pusha
cmp
repz
dec
inc
cmp
cmp
repz
add
test
pushw
jns
out
push
call
enter
out
mov
nop
jl
out
sahf
push
sub
sahf
out
and
adc
add
cmp
repz
test
in
in
out
int
iret
shlb
push
cmpb
dec
xor
test
lahf
out
and
call
and
sub
inc
pop
rcrl
pop
add
cld
inc
mov
xor
cmp
clc
pop
cmp
add
mov
inc
aas
loopne
mov
jnp
fldl
add
subb
xorb
icebp
daa
push
push
push
dec
jno
movsb
add
jno
sub
subb
dec
aam
pop
aas
in
sub
inc
push
loopne
mov
out
or
adc
inc
lret
and
cwtl
cs
fisttpll
jg
add
call
pop
push
divl
daa
jg
xor
sgdtl
adc
xor
jns,pn
pop
lods
data16
add
sete
adc
rep
scas
movsb
mov
push
sbb
cmp
pop
aas
enter
repz
neg
and
push
ds
or
cmp
mov
sahf
negl
cs
adc
dec
and
iret
repz
or
repz
push
push
sbb
xor
jae
push
sbb
push
dec
xchg
cmpsb
repnz
pop
mov
jns
cmpsl
xor
push
and
pop
out
btc
out
jg
orb
jne
push
adc
xor
arpl
jns
add
xchg
dec
repz
mov
repz
xor
jns
ds
add
push
pop
ja
out
jns
xchg
mov
repnz
dec
das
push
xchg
push
iret
dec
insb
icebp
xchg
in
inc
push
xor
add
mov
or
jnp
lret
imul
jl
dec
push
enter
inc
pushf
or
jl
xchg
mov
adc
xchg
cwtl
push
and
sbb
pop
mov
ret
inc
and
sahf
mov
sub
inc
rcrb
and
lcall
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
jg
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
ja
call
jecxz
cli
inc
jmp
aam
fmull
xchg
dec
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
cmp
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
decl
pop
mov
xchg
clc
repz
mov
subb
fwait
xchg
and
int3
insb
addr16
xchg
add
int3
add
mov
cmp
or
aas
pop
fs
dec
lea
aas
ret
shrl
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
pushl
cmp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
call
les
jne
int
mov
addr16
push
mov
xchg
aas
call
mov
jp
popa
push
pop
sarl
jl
call
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
jmp
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
ljmp
addb
add
xlat
cmp
mov
sbb
filds
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
lcall
cmpsb
xchg
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
decl
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
dec
gs
std
orl
pop
ficomps
frstor
xor
push
xor
inc
scas
inc
push
dec
pop
mov
gs
rorb
add
jns
popf
mov
push
lods
int
mov
mov
jg
add
popa
push
out
mov
les
hlt
push
pushl
movsl
arpl
mov
mov
push
movsb
mov
aad
mov
rclb
das
enter
mov
pop
sub
mov
sbb
dec
jno
repz
loope
incl
in
insl
push
mov
hlt
movl
imul
mov
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
xor
leave
jg
mov
jecxz
fdivs
jne
filds
or
shrl
mov
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
sahf
mov
add
and
or
adc
stos
sbb
data16
call
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
cld
mov
stc
xor
call
mov
cmp
fs
add
hlt
push
imul
insb
sbb
xor
incl
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
decl
fistps
ficoml
gs
aam
pop
popa
mov
into
pop
mov
je
mov
aam
movsl
fisttps
fadd
shll
call
push
imul
mov
sarb
add
in
add
pop
dec
or
fnstsw
add
daa
adc
or
and
test
or
mov
popa
dec
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
shlb
mov
lcall
mov
cmp
ljmp
fildl
push
fdivr
pushl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
imul
ljmp
sbb
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
mov
mov
shll
push
repnz
icebp
addr16
cmpsb
fldl
pushl
dec
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
xor
imul
andl
shrb
xor
ja
int3
add
loopne
incl
mov
das
es
lds
or
add
ljmp
pop
cmpsl
call
ret
shlb
sbb
ret
es
pushf
mov
call
or
addr16
jb
push
add
adc
mov
jnp
lcall
mov
fwait
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
incl
mov
mul
ja
outsl
ja
mov
out
cli
jo
ud0
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
push
js
or
jmp
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
out
cli
ljmp
or
inc
lock
aaa
sarb
jg
mov
jmp
and
mov
add
push
cmpsb
mov
sarb
sub
push
mov
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
cmpsb
pusha
movb
int
insb
imul
lods
sub
cmp
pop
add
adc
aad
push
xlat
sahf
out
sahf
fcomp
fcmovu
dec
sahf
out
fsubp
jecxz
sahf
out
sahf
in
jmp
sahf
out
in
repz
cmc
mul
jns
out
clc
stc
cli
sti
sarl
adc
andb
decl
inc
and
loopne
xchg
or
addr16
dec
outsl
push
dec
mov
dec
inc
xchg
dec
mov
out
sti
mov
add
outsb
imul
jb
push
inc
data16
inc
push
dec
dec
xchg
push
lret
cmp
jne
xor
inc
aaa
push
inc
clc
incl
mov
dec
dec
inc
push
dec
inc
aaa
xor
pop
movsl
mov
popf
imulb
insb
cmp
inc
xorb
adc
mov
lahf
pop
ljmp
addr16
aaa
xor
aas
pusha
jp
jbe
xchg
mov
andb
xor
movsb
lea
ljmp
mov
sub
sbb
sbb
pop
pop
inc
jbe
push
jns
arpl
gs
rolb
or
or
insl
or
cmp
mov
inc
xchg
mov
push
xchg
fistl
cmpsb
xlat
xor
push
inc
adc
lock
aad
sbb
dec
sti
inc
insl
bound
mov
push
push
pusha
mov
in
cmpsl
fadd
dec
rolb
xor
pop
inc
cmp
in
incl
cld
pop
bound
xor
jo
pop
popa
arpl
cmp
arpl
in
mov
sub
xor
xor
xor
insl
xchg
inc
jbe
pop
sbb
cmp
xor
inc
xchg
test
add
ror
add
push
bound
push
test
xor
mov
mov
outsb
imul
push
and
push
push
push
cs
loope,pt
ret
mulb
test
xchg
inc
push
pop
js
inc
mov
push
add
movsl
or
lds
mov
ret
adc
cmp
aaa
stos
mov
insb
aaa
jnp
jp
aas
inc
push
dec
aas
push
in
and
add
dec
in
orb
insb
scas
dec
popa
jne
and
sub
scas
pop
inc
aas
and
dec
jbe
aaa
inc
mov
inc
pop
jnp
jl
je,pt
jo
inc
inc
add
rolb
cmp
fldcw
hlt
mov
push
dec
cmp
push
dec
jo
inc
xchg
and
mov
add
inc
outsb
jne
outsb
mov
or
popa
mov
push
jge
xor
mov
imulb
adc
xor
in
cs
ss
clc
xchg
into
pop
pop
imul
jns
loop
xorb
add
aaa
add
imul
add
mov
or
pop
sbb
adc
mov
xor
cmp
mov
mov
inc
mov
test
inc
inc
push
sub
sahf
fdivs
popa
jo
loopne
dec
adc
lahf
push
outsl
outsl
lods
pop
or
mov
popa
mov
rclb
and
in
rclb
lds
xchg
pusha
jb
in
nop
test
pop
cmp
inc
insb
mov
arpl
cmp
mov
add
push
cmpsl
xchg
and
jns
inc
xor
popf
das
inc
jb
cs
pop
dec
push
popa
jb
or
dec
inc
outsl
arpl
insb
jle
adc
bound
or
inc
jbe
jae
adc
aad
jg
lods
sbb
add
imul
add
das
xor
cmp
mov
push
add
outsb
loopne
jg
xchg
push
or
iret
dec
pop
mov
scas
into
stos
or
lods
inc
pop
add
jp
xchg
push
outsb
push
gs
mov
insb
and
jo
xchg
inc
and
outsb
rclb
jne
inc
xor
mov
icebp
add
daa
add
pop
mov
and
pop
mov
sub
addb
push
inc
adc
enter
push
adc
mov
inc
push
or
lods
inc
add
fdivr
loopne
adc
dec
inc
iret
std
lahf
pusha
add
add
add
mov
add
or
pop
pop
push
or
or
or
or
or
xor
push
adc
push
adc
adc
or
pop
dec
mov
adc
adc
adc
add
data16
or
or
rolb
fwait
std
adc
add
adc
out
pop
add
add
das
jne
inc
mov
push
cmpsb
pusha
shlb
imul
ds
incl
and
inc
push
adc
pop
and
xor
inc
mov
adc
push
shl
and
bound
js
enter
jne
lea
or
xor
es
out
add
add
popa
push
inc
or
or
sub
pusha
dec
and
adc
pushf
into
add
adc
add
fisubrs
inc
lods
push
adc
pop
popa
jno
sar
out
and
adc
xchg
mov
lock
pop
stos
and
loope
icebp
mov
mov
inc
roll
inc
lock
mov
fiaddl
or
mov
aas
add
sub
rcr
push
ret
xchg
jae
xchg
jae
sub
std
cmpsb
xor
aas
imul
fdivrl
add
mov
add
out
pop
les
fsts
dec
pop
cmpb
mov
cmp
out
cmp
xor
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
xor
inc
xchg
jg
xchg
jl
add
sub
incl
adc
sbb
cli
and
mov
fiaddl
jg
fnsave
fnstsw
ficompl
cmpsl
xor
mov
test
mov
sahf
aad
std
movsl
jecxz
pop
mov
push
sub
push
stc
or
xchg
jg
or
insb
sub
addr16
out
or
lcall
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
call
fisubrl
in
mov
orb
int3
lcall
fs
scas
jg
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
call
lods
scas
xchg
test
aam
and
sbb
sarl
and
in
call
inc
push
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
pop
add
push
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
fisttps
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
leave
mov
jp
push
out
or
outsl
jg
cld
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
push
in
pushl
clc
pop
pop
mov
jmp
sbb
dec
mov
mov
mov
out
pop
jb
xchg
pushl
in
push
mov
sub
pop
mov
jl
rorl
adc
imul
stos
hlt
push
add
stc
loope
mov
mov
sar
andl
aas
icebp
testb
mov
aas
stos
pop
xor
jns
mov
in
repnz
jno
pop
sub
pop
jne
jg
scas
cld
or
push
inc
sbb
paddb
inc
mov
lcall
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
cmp
mov
pushf
lock
jae
cmp
test
loopne
cli
adc
aaa
xchg
in
add
es
or
dec
fisttpll
out
aas
std
cli
fists
fnstsw
push
push
idivl
cmp
sub
inc
ljmp
pop
jg
je,pn
sub
jg
imul
mov
mov
inc
es
jmp
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
adcb
mov
cmp
cmpsb
in
fistl
das
jmp
xchg
pop
clc
pop
hlt
sub
movsb
pushl
add
lea
jg
gs
std
xorb
jg
jg
addr16
adc
ret
das
pop
pop
pop
shlb
pop
cmc
decl
out
sarb
sbbl
jno
or
sarb
std
pop
les
cli
insb
cld
pushl
mov
mov
inc
arpl
stos
mov
and
jg
loop
in
sbb
push
scas
loop
jge
push
shrl
mov
push
mov
mov
push
pop
jns
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
inc
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
call
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
clc
add
pop
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
fildll
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
inc
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
add
mov
xor
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
inc
mov
inc
and
pushl
xchg
test
jg
mov
lahf
cld
sub
aas
stc
add
jge
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
jl
mov
cmp
fmull
enter
jecxz
jl
mov
pop
mov
sub
fnstsw
decl
inc
mov
push
sbb
push
inc
mov
mov
pop
jg
add
jg
idivb
cmp
sub
adc
mov
mov
hlt
push
mov
push
jbe
push
sbb
stos
icebp
pop
incb
aas
js
dec
jno
adc
push
inc
jecxz
sbb
sarl
cmp
sar
adc
lahf
stos
jge
pop
xor
imul
dec
lock
std
push
in
aas
mov
fsubrl
add
lock
and
mov
xchg
pushf
mov
repnz
and
bound
mov
xchg
lahf
or
push
rcrl
clc
fildll
aas
fistpl
adc
call
mov
addr16
pop
nop
mov
inc
sti
arpl
loop
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
sub
xor
fsubr
fistps
lds
fidivrl
jg
decl
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
cld
addl
cs
incl
mov
in
stc
mov
lahf
outsl
int3
push
sbb
std
inc
pop
pop
test
bound
pop
outsl
pop
cmp
xchg
inc
test
in
jge
popa
push
test
jbe
outsb
hlt
decl
daa
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
dec
cmp
shl
cld
mov
mov
js
pop
jg
pop
shrb
rcl
jg
adc
xor
std
lcall
mov
gs
pushf
lea
jp
jnp
jecxz
mov
lds
push
pop
adc
imul
or
mov
xor
rorb
and
add
cmpsl
push
sbb
push
fisubl
mov
loope
mov
into
test
xchg
movsb
insb
or
and
xchg
fidivrs
push
jnp
add
insb
test
aas
repz
outsl
lock
in
jmp
stc
out
mov
clc
push
std
mov
jl
icebp
or
mov
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovu
dec
cld
inc
inc
adc
inc
loopne
test
out
rolb
pop
or
cli
loop
cld
or
dec
ss
lods
movsb
ret
call
fimuls
repnz
mov
jl
inc
lock
call
cmpsl
lret
fwait
stos
jle
pop
in
cmp
jmp
mov
mov
mov
jmp
hlt
dec
mov
xlat
fdiv
jg
inc
aas
mov
jg
mov
sub
addr16
incl
mov
sbb
cld
daa
jp
std
adc
cltd
or
mov
cmc
mov
jg
ja
nop
cmp
das
incb
lock
pop
pop
div
add
push
loop
cld
idivl
fs
sbb
stc
lahf
loope
jae
jmp
adc
je
jge
xchg
mov
xchg
add
out
icebp
mov
loope
mov
pop
and
sbb
fbstp
test
daa
outsl
mov
jge
out
or
cmpsb
cmp
call
xor
decb
fdiv
pop
push
adc
mov
and
fisubrl
ret
call
popf
iret
enter
or
mov
cmp
int
add
push
pop
aaa
std
fisubs
adc
fisttps
inc
sbb
mov
mov
aas
icebp
ret
mov
cmp
aaa
inc
push
jno
ja
adc
mov
sub
mov
out
icebp
aas
pop
clc
loope
loope
mov
lahf
jp
jb
mov
jg
jmp
mov
mov
xor
cmp
xchg
ss
push
cmp
repz
adc
cmp
into
nop
mov
sarl
pop
out
jg
jno
ret
add
cmp
incl
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
mov
in
sbb
xchg
imul
loopne
adc
sbb
mov
daa
jmp
fsubl
mov
or
outsl
pop
movsb
ljmp
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
in
xchg
pop
add
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
lcall
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
cli
and
sti
push
sti
pop
inc
xchg
cltd
pop
adc
push
inc
sub
scas
cmp
int3
pop
iret
and
push
add
rcrl
sarb
jno
add
pop
sbb
mov
mov
leave
xor
call
repnz
add
add
rcrl
sahf
arpl
mov
xor
xchg
xchg
pop
loope
dec
push
data16
in
xor
inc
sbb
addb
jne
sub
xlat
sbb
mov
cmp
out
sbb
jo
xchg
enter
xchg
mov
pop
lret
inc
cmp
and
inc
push
cmp
gs
shlb
mov
inc
add
out
shr
pop
lods
inc
addl
sar
incl
push
hlt
mov
or
inc
daa
testl
ret
test
add
ljmp
push
mov
inc
mov
das
scas
pop
mov
inc
divl
add
jb
jns
sbb
inc
and
imul
mov
aam
cmpsl
lret
sub
decl
jae
mov
or
cmpsl
subb
bound
mov
mov
ja
xchg
outsb
and
mov
or
sub
push
ret
sbb
stos
and
call
push
aas
xchg
xchg
xchg
pop
mov
cmp
cmpsb
sub
ds
sub
mov
pushl
cwtl
aaa
adc
cmpsl
dec
push
adc
mov
sti
and
test
push
decl
in
inc
ret
jl
mov
adc
jno
mov
dec
push
xchg
out
jmp
repz
mov
scas
in
push
sbb
mov
sbb
lret
xor
xchg
mov
aam
mov
fs
inc
ds
ret
and
inc
add
in
cli
ret
out
decl
cmp
das
push
or
xchg
dec
xchg
mov
cmp
inc
jns
mov
mov
repz
ljmp
les
lcall
in
imul
js
dec
incl
jge
je
fiaddl
test
sbbb
push
push
pop
sar
fsubrl
leave
fnstenv
sbb
popa
adc
xor
pop
daa
into
arpl
push
loop
pop
jmp
insl
lcall
pop
mov
iret
pop
int3
pusha
sbb
test
dec
lds
adc
jno
fcos
fldt
and
out
inc
xor
jns
or
add
in
pop
mov
pushf
insb
aam
fldz
fcomip
incl
mov
pop
fcoml
mov
push
jae
mov
lcall
int
loope
mov
xchg
inc
shll
push
fcmovb
mov
call
in
sub
xchg
clc
clc
and
call
aad
decl
mov
loop
rol
nop
icebp
orl
scas
add
inc
fildll
insb
adc
decl
mov
xor
gs
push
adc
jmp
mov
jle
sbb
nop
jge
or
jmp
jno
cmp
xor
into
push
sbb
cltd
repz
cmp
jnp
lcall
arpl
sub
out
loope
aaa
add
jmp
call
lcall
fistpll
cmp
clc
icebp
cmc
pushf
out
std
jbe
mov
mov
mov
mov
mov
dec
scas
or
inc
cmp
fs
decl
outsb
out
or
push
jle
xor
jg
movsb
inc
scas
push
lock
dec
dec
out
push
sub
mov
and
loopne
or
stc
ljmp
xchg
dec
xchg
aas
rol
cld
int3
cltd
pop
jmp
mov
leave
jmp
loop
stos
mov
xchg
xlat
adc
inc
int
fs
loope
out
cmp
popa
aaa
cld
ljmp
daa
and
daa
pop
sub
idivl
daa
xorl
sbb
jb
add
leave
lahf
call
cmp
push
loop
mov
push
hlt
sub
mov
jb
mov
sahf
pushf
popf
aaa
adc
xor
ja
negl
jmp
jb
popf
adc
in
js
xchg
gs
cmc
mov
or
sbb
les
pushl
sub
pop
dec
pop
scas
jmp
mov
dec
cmp
sub
and
sti
lcall
incl
push
xchg
push
xorl
je
sbb
cmp
fisttps
mov
dec
mov
decl
test
jns
sub
xorl
cmp
adc
out
push
insb
or
rcll
jge,pn
or
jne
or
das
pop
ljmp
jnp
test
gs
adc
mov
into
flds
dec
repnz
clc
jmp
aas
push
aas
xor
imul
or
mov
in
sub
xchg
push
out
mov
mov
cmpsl
inc
into
inc
inc
ficompl
push
movsb
mov
call
push
mov
xor
lret
mov
sbb
lret
daa
repnz
jb
jmp
mov
mov
pusha
ds
pusha
adc
cld
inc
xor
sbb
push
es
push
push
incl
push
push
subb
and
outsb
xchg
sbb
push
andl
negl
mov
pushl
movsl
mov
jp
xor
jnp
sub
daa
imul
stos
sub
fcomip
jmp
or
push
fcmovne
jnp
adc
jno
mov
fists
clc
fcoml
pop
and
adc
daa
inc
mov
incl
mov
inc
cld
rorb
scas
shlb
mov
decl
sarb
popf
mov
xor
in
pop
push
stc
es
push
fisttps
xor
imul
add
mov
and
jmp
shll
leave
pop
jmp
mov
add
repz
fldenv
adc
hlt
repnz
outsb
or
mov
pushl
jle
pop
std
lcall
mov
xchg
js
xchg
out
xor
push
mov
popf
repz
neg
xchg
pushl
std
in
cmp
sbb
mov
or
add
rol
xor
rclb
decl
fstl
push
enter
enter
push
mov
pop
imull
lods
rolb
loope
ljmp
nop
cmp
arpl
fstpl
xlat
pop
fldl
jae
sub
xchg
sbb
cmp
lcall
jmp
lret
fdivrp
dec
lahf
sub
mov
and
jecxz
xchg
loop
test
cmp
fchs
xchg
xlat
ret
push
fisubrl
insl
icebp
test
lds
lods
or
iretw
cmp
dec
clc
jmp
addl
and
in
jne
jle
pushl
cld
xchg
movsl
sub
roll
sub
shrb
cmp
adc
mov
cltd
jmp
mov
dec
mov
test
test
insl
rep
bts
lret
cmp
aad
cmpsb
stos
lods
ja
pop
jbe
inc
inc
or
mov
or
loop
js
incl
or
push
scas
jg
or
push
aaa
pop
rclb
repnz
loop
ja
je
pop
scas
cmp
test
dec
xchg
int3
inc
or
test
push
sbb
les
cmp
add
xchg
in
sbb
je
sub
dec
fwait
mov
call
imul
pop
and
sahf
mov
mov
jmp
das
adc
fs
jg
rclb
out
dec
inc
cmp
and
mov
idiv
xchg
xchg
jmp
inc
cs
pop
sbb
adc
sbb
mov
pop
lcall
xchg
and
pushf
scas
inc
bound
test
sbb
daa
into
xchg
or
pop
inc
insl
loopne
int
jmp
inc
out
imul
mov
cmp
cld
adc
mov
mov
inc
xchg
out
arpl
mov
cmp
pop
fucomi
and
and
dec
dec
add
sub
test
lds
rcrb
rol
cld
sti
test
jle
pop
cmp
adc
int
into
sub
pop
pushl
out
mov
pop
cld
mull
aaa
mov
lea
and
xor
lcall
sub
xchg
mov
decb
adc
nop
int
int
cld
jge
adc
mov
stos
rorl
mov
icebp
adc
int3
cmp
lcall
mov
mov
cmp
dec
in
mov
jg
mov
cmp
pushl
xchg
iret
inc
imul
test
or
cmpsb
stc
js
fildl
ljmp
mov
outsl
ljmp
jbe
pop
in
test
jp
cmpsb
fildll
fsubrs
incl
out
ljmp
test
movsl
mov
sub
sub
push
loope
stos
cld
sbb
les
fiaddl
ror
sub
mov
sub
mov
cmc
xchg
mov
shl
fisubrl
andl
mov
push
repz
clc
lea
ss
jl
sub
cmc
dec
in
pop
dec
jb
dec
adc
pushl
popf
pop
in
fcomi
add
bnd
inc
mov
pop
and
mov
mov
push
loop
aaa
add
mov
push
cwtl
pop
popf
mov
mov
out
outsl
dec
fwait
loopne
lret
incl
inc
jb
jl
pusha
mov
or
pop
add
mov
mov
jne
aas
cmp
pusha
test
stos
roll
call
pop
int
ret
cmpsb
add
sbbb
or
push
aam
mov
fdivrp
mov
lcall
iret
adc
psrad
popa
imull
fisttpll
out
fidivs
subl
pushl
repz
sub
sbb
lods
pop
jb
mov
inc
mov
cmc
xchg
sysret
call
movsl
push
push
mov
mov
mov
in
imul
arpl
incl
or
xorl
add
cltd
add
xlat
call
sbb
xor
ds
icebp
jnp
mov
add
mov
dec
sar
jns
mov
ss
push
inc
adc
sub
xor
cmp
jp
in
ljmp
call
data16
or
iret
std
stos
call
sub
aas
gs
ja
sar
lcall
popfw
cltd
xorb
and
jmp
xorb
sbb
dec
test
cld
jg
imul
lahf
lahf
mov
or
mov
mov
mov
repz
sar
pushl
cmp
addr16
dec
mov
sarb
pop
xor
jg
and
aam
inc
ljmp
dec
gs
pop
jns
std
mov
pop
xchg
fildll
call
pop
push
mov
lock
mov
add
outsl
mov
call
pop
call
incl
xor
fxtract
cmc
or
cmp
stos
fcmovb
mov
dec
bnd
pushw
sub
sbb
jl
test
adc
jae
rcr
xor
stos
idiv
mov
ja
inc
sar
cmp
xchg
shl
or
in
jge
inc
ja
jmp
jne
cmp
xor
dec
lret
jnp
filds
mov
xchg
out
dec
fisttps
push
mov
push
shrb
xor
or
call
cmp
leave
dec
xchg
stos
mov
jg
nop
shr
loop
shll
xor
subl
lea
cmp
pushl
dec
push
pop
mov
add
in
nop
lcall
push
xor
dec
call
popa
lret
or
stos
sbb
ret
jmp
push
fisubl
icebp
fistps
lahf
fcmovnb
pusha
aam
fidivs
call
sbb
pop
dec
jle
ja
jl
sbb
loopne
fistpll
sbb
add
test
cli
mov
or
imul
push
addl
ret
jno
xchg
jno
mov
sbb
fcomip
adc
pop
sub
adc
xchg
jmp
imul
sbb
xchg
mov
ljmp
add
mov
push
adc
mov
les
test
jecxz
pop
mov
pop
sub
inc
sub
lcall
rol
fnsave
adc
fisubs
in
mov
push
sbb
pushl
push
enter
xor
adc
and
stos
imul
out
and
pusha
call
mov
xchg
stos
popa
outsl
xchg
xor
je
flds
or
mov
or
fs
int
dec
ljmp
inc
je
sahf
in
mov
mov
popa
jno
aam
adcb
fildl
sub
clc
call
push
ljmp
mov
cmpl
cld
test
and
add
lcall
ljmp
sbb
popl
mov
sub
fisttpl
mov
sbbl
mov
or
cmp
sahf
inc
xor
mov
push
push
mov
cmp
push
dec
ljmp
fldenv
adc
mov
lret
pop
call
mov
lahf
mov
xor
push
pop
shl
lock
decl
mov
push
push
sar
rol
lock
sarl
movsb
fldcw
inc
mov
clc
lcall
test
cwtl
pop
inc
xlat
cwtl
dec
or
xor
rolb
cld
push
pop
sub
xchg
aas
sbb
push
cmc
jb
lock
stos
lods
or
push
mov
jbe
fsubl
sub
sbb
aam
xor
xchg
mov
push
xchg
cli
add
incl
cmpsb
push
xorb
rcrb
addr16
dec
fwait
stc
xor
pop
dec
int3
cmp
in
mov
imul
cmc
fiadds
jns
push
inc
les
mov
out
into
mov
loope
lds
or
popf
pop
jg
idivb
call
pop
mov
fstpl
add
jmp
test
stc
leave
sub
sbb
and
xchg
inc
mov
jmp
xor
cmp
je
cmpsl
mov
ljmp
inc
sub
sub
xchg
ret
ret
test
in
inc
pop
std
mov
ljmp
sub
add
clc
ja
sub
xchg
mov
xchg
fwait
clc
jmp
cmp
xchg
insl
xor
test
cmp
xor
push
push
mov
stos
mov
inc
js
adc
inc
test
mov
mov
pop
inc
subb
mov
aaa
fmuls
cltd
adcb
outsb
jno
and
mov
cmp
or
jo
in
push
cli
adc
lret
cs
aaa
push
into
add
or
pushl
cmpsb
lcall
add
cwtl
dec
xchg
jle
xorl
xor
mov
jb
repz
lcall
aam
add
test
dec
mov
scas
incl
bound
ret
xchg
mov
fisubrl
push
stc
dec
pop
mov
jg
imulb
mov
push
out
mov
mov
popa
repnz
xor
fcom
pop
adc
shll
xchg
repnz
fildl
call
sub
xor
fwait
push
mov
inc
cmpsb
mov
xor
push
lea
mov
clc
pop
cmc
in
fdivrs
push
call
ljmp
inc
outsl
pusha
adc
andl
or
scas
pop
pushl
ficompl
xor
fcoml
stos
test
xchg
sub
xchg
test
or
decl
daa
add
fwait
andb
jg
adc
xchg
mov
and
dec
ffreep
jo
mov
movsl
ret
jp
pushf
test
pushl
daa
fistpll
pushf
dec
mov
aam
ljmp
push
mov
mov
sti
cs
call
push
pop
popl
push
push
popa
shrl
cs
fistpl
add
or
and
jg
jmp
sbb
jo
lcall
fcompl
fdivrl
sub
movsl
movsb
repz
decl
cmp
push
mov
add
sub
hlt
ret
sub
jnp
call
loopne
aad
fisubrs
roll
aad
adc
cld
sub
clc
mov
and
xchg
call
jae
das
mov
inc
adc
subl
pop
mov
inc
inc
call
add
mov
xor
jne
icebp
scas
pop
lahf
mov
sahf
sbb
mov
bound
es
jmp
push
scas
bndstx
mov
fwait
cmpsl
sub
stos
mov
out
cmp
movsb
mov
mov
ret
fsubl
inc
fs
ljmp
lds
lods
pop
lret
xchg
pop
cmp
fcompl
stc
fnstcw
sub
decl
or
mov
cmpsb
scas
mov
or
xchg
cmpsb
mov
aam
fcomip
xor
push
das
lods
mov
jmp
adc
shlb
adcb
out
ljmp
jns,pt
fstpt
xchg
mov
pandn
pop
call
in
xchg
mov
ss
lcall
pop
xchg
adc
in
cwtl
xchg
movsl
daa
xor
repnz
ss
jb
lcall
insl
and
dec
lea
adc
sub
lahf
pusha
mov
dec
push
out
hlt
pop
lods
nop
enter
push
ret
pop
dec
mov
pushl
fsubrl
andl
cmp
and
icebp
loop
lods
adc
sbb
jg
xor
and
in
mov
pop
loopne
repz
movsl
pop
pop
inc
inc
out
call
jl
jmp
gs
lea
mov
xor
sarb
cmp
push
cmp
sub
mov
mov
jbe
xchg
int3
mov
insl
cmp
stc
cs
in
inc
xchg
test
pushl
xlat
loopne
daa
adc
daa
xchg
cmpsl
push
mov
dec
xchg
jl
or
imul
mov
xchg
mov
or
xchg
pop
sbb
sub
mov
mov
cli
or
aam
sub
repnz
xchg
pop
lds
shrl
push
mov
fadds
add
call
jp
in
in
fdivs
pop
mov
outsl
lock
mov
mov
mov
pop
lock
shrb
mov
xor
pusha
push
cmpsl
sahf
movl
or
add
ljmp
enter
adc
lods
mov
jbe
imul
add
ljmp
or
or
jns
out
or
add
loop
lret
mov
jg
call
sbbb
sahf
das
mov
shll
aas
imul
or
jne
out
or
or
push
jp
bnd
cwtl
xchg
arpl
dec
or
shl
and
js
lret
or
and
push
iret
mov
je
sbb
call
push
or
mov
add
fucomp
orw
xlat
push
loop
ss
cmp
outsb
decl
in
orb
xchg
push
shlb
bound
mov
movl
incl
cmp
sub
popa
inc
fmulp
or
jne
lret
pushf
daa
sbb
pushl
hlt
add
xor
adc
push
dec
mov
mov
test
push
dec
in
pop
sub
pusha
or
and
dec
inc
stc
ret
test
icebp
xor
inc
call
or
data16
sbb
push
jle
faddl
jmp
scas
pop
addr16
add
js
nop
pop
mov
pushl
out
insl
mov
out
dec
cltd
ret
mov
mov
daa
int3
sbb
push
dec
cld
stc
cmp
push
push
or
in
adc
push
arpl
or
add
js
gs
insl
jle
xor
mov
mov
mov
cmp
iret
add
mov
js
lds
loop
inc
js
int3
ljmp
xchg
add
jle
insb
popa
sbb
jp
cld
cmp
mov
loope
lods
xor
data16
fwait
mov
mov
mov
test
ljmp
push
inc
lds
out
mov
stos
ljmp
xchg
in
dec
jle
andb
jle
insl
ljmp
mov
outsb
pushf
pop
dec
sbb
incl
sbb
jae
das
bound
ds
into
fdivrl
add
cmp
dec
addr16
cli
loope
pusha
xor
add
lock
sbb
or
jp
mov
lcall
out
mov
imul
shrl
or
mov
sbb
xchg
and
out
imul
scas
pusha
jp
ljmp
add
jbe
sbb
call
fstps
xor
lret
mov
xor
dec
pop
or
push
pop
jo
decl
mov
mov
jne
mov
sbb
push
sbb
ljmp
push
into
lods
cmp
or
add
int3
mov
ds
mov
xorl
mov
sub
cmp
and
mov
mov
lods
decl
adc
fiaddl
or
jle
popa
stos
adc
adcb
jmp
dec
mov
mov
sub
rorl
ret
dec
ret
mov
stos
in
scas
sarb
pop
push
cmp
push
inc
xor
push
add
fsubs
pushf
inc
movsb
inc
cmpsl
xor
mov
int3
pushl
dec
mov
lods
and
pusha
lock
mov
mov
pop
mov
dec
jno
call
pop
stc
stos
or
pop
insl
add
out
rorb
repz
push
and
call
lahf
mov
or
cmp
push
or
or
sbb
push
jl
add
mov
jmp
pushf
or
ljmp
lret
outsl
mov
jl
adc
incl
loop
mov
xor
ret
push
mul
mov
or
jnp
cmp
ljmp
test
test
jg
mov
fldenv
fsubr
jb
inc
jmp
or
into
dec
mov
aad
sbb
sub
sub
fsts
pop
add
mov
lcall
jmp
scas
and
or
pusha
jne
push
push
fbstp
mov
icebp
incl
sub
mov
adc
xor
adc
fnstcw
jo
pop
xlat
sub
add
jge
inc
mov
pop
lods
push
lret
fsubs
inc
arpl
jnp
decb
xor
pop
ret
pushl
das
scas
lea
js
inc
cld
push
enter
out
loop
push
mov
aad
iret
sti
adc
ret
xor
mov
xor
ljmp
ret
scas
mov
sbb
rclb
ljmp
jmp
mov
ficomps
jae
cmp
pop
xor
mov
jmp
fcomps
sbb
fsts
or
mov
test
imul
adc
shlb
shrb
cltd
xchg
addb
inc
and
cli
popa
sbb
mov
fsubrs
aaa
lret
dec
cmp
ss
pop
scas
xor
sahf
inc
fldcw
inc
pop
mov
xlat
call
nop
aas
sub
xor
test
ss
into
ljmp
hlt
imul
repz
mov
test
cmpsl
jge
ljmp
call
inc
cmc
mov
jp
sub
rcrb
loopne
pop
nop
repz
cli
dec
fs
mov
mov
out
jns
lods
int3
repnz
jp
xchg
sahf
jo
fwait
stos
push
in
push
push
jb
pushl
pop
dec
enter
adc
ljmp
cmp
push
imul
sbb
ret
pause
call
out
icebp
jns
nop
ret
lock
mov
mov
out
fcoml
jmp
incl
sub
inc
in
sub
outsl
cmc
or
pop
mov
test
sbb
adc
jmp
mov
and
xor
inc
mov
lret
inc
out
mov
insb
push
ret
not
loop
adc
adc
into
fsubs
movsl
xchg
xor
ss
or
cmp
mov
setnp
inc
std
cli
mov
decl
testb
jmp
loop
std
popl
rorl
mov
xor
js
lcall
lods
stc
hlt
mov
mov
dec
aam
xchg
mov
scas
lcall
jecxz
fs
test
pop
xchg
lahf
dec
sbb
xor
mov
or
cmp
inc
stos
pop
fmull
jo
dec
adc
jae
sbb
pushl
or
mov
adcb
movsl
call
and
mov
xchg
sar
lcall
std
scas
push
hlt
out
xlat
iret
movsl
xchg
popf
mov
imull
in
push
test
mov
pusha
mov
ljmp
push
pop
mov
test
cmp
xchg
cmp
lahf
inc
mov
incl
faddl
stos
ret
nop
in
push
add
ss
adc
lahf
and
jne
mov
jns
lret
lods
jmp
popf
out
lahf
dec
std
mov
popf
testl
lcall
into
push
mov
clc
adcb
insb
test
mov
mov
mov
pushf
clc
cltd
cmp
outsb
shl
cmp
xor
fiadds
outsl
clc
cmp
dec
dec
jnp
dec
sarb
inc
push
fstpt
adc
mov
push
cltd
inc
nop
cli
fstpt
or
pop
mov
sbbb
repnz
sbb
cmpsl
out
in
xor
rcl
cmp
daa
out
scas
enter
adc
sbb
test
jg
fldt
imul
sbb
sahf
push
adc
and
add
out
jo
sub
je
movsb
cld
and
rcl
lcall
addl
test
add
inc
sbb
jg
dec
insb
ret
lahf
call
or
cli
push
fs
int3
or
jecxz
outsb
ljmp
daa
xchg
fcompl
mov
pop
mov
fldl
in
sahf
pop
fnsave
adc
call
rolb
push
pop
stos
ficompl
nop
mov
jns
aas
in
orb
daa
pcmpeqd
mov
call
imul
xchg
adc
stos
test
loopne
sarb
jno
jg
fisubs
in
ljmp
stos
addr16
popf
mov
adc
jge
pop
repnz
jmp
mov
out
push
arpl
add
pusha
aaa
in
jg
arpl
addr16
adc
and
push
push
add
jb
loop
call
js
or
and
mov
sbb
fsubr
repz
dec
inc
das
pop
loope
and
jnp
iret
mov
push
test
mov
dec
xchg
jnp
lahf
out
push
cmp
cli
ret
in
std
loope
inc
mov
js
std
push
pop
int
fnstcw
leave
nop
add
hlt
scas
clc
decl
cmpsb
daa
add
test
test
lods
cmp
cmpsb
call
sar
xchg
cmp
adc
in
push
mov
sahf
lods
and
push
sub
ss
hlt
sub
add
inc
cmp
pop
sub
cmp
or
decl
punpckhwd
mov
cmp
sub
rorb
sub
push
es
mov
xor
jg
and
fsubs
sbb
dec
aad
lret
or
cld
mov
hlt
stos
jmp
jns
pop
loop
adc
adc
daa
sub
fisttps
mov
mov
mov
ljmp
push
mov
mov
scas
mov
shlb
jmp
push
xor
and
ss
or
iret
pop
mov
or
lock
ss
sub
call
ja
and
push
inc
inc
daa
sbb
lea
mov
mov
out
cmp
or
mov
lcall
movhps
das
cltd
incl
jecxz
roll
lret
pop
test
lahf
pop
adc
jg
jmp
jp
lock
jmp
sahf
mov
mov
mov
mov
jne
mov
js
mov
out
addl
jae
cwtl
sub
or
sbb
cli
inc
clc
push
mov
packssdw
fs
adc
daa
dec
and
adcb
mul
mov
leave
pop
mov
dec
jge
dec
push
popa
pop
cli
or
das
and
xchg
lret
add
int
jge
push
pop
int
rcl
decl
mov
aam
sti
push
lea
inc
in
gs
pop
push
sub
lcall
sbb
cmc
popf
push
mov
push
lea
xchg
fwait
xlat
cmpsl
lcall
andl
xor
push
push
cmp
sbb
or
mov
aaa
std
sub
pop
roll
stos
repz
scas
mov
out
push
mov
enter
ds
jp
test
stc
xor
jmp
js
loope
mov
pop
and
std
cmp
push
mov
in
sub
out
push
jb
dec
sbb
push
loope
rol
jo
or
test
mov
pop
shll
inc
bound
inc
je
mov
lcall
mov
ljmp
mov
mov
inc
cld
roll
ret
loopne
adc
out
jmp
sbb
xor
addr16
jb
lret
cmp
pop
lahf
loopew
xor
lret
call
fwait
shr
loopne
inc
bound
shlb
rcrb
bound
hlt
incl
cmpsl
or
push
shll
adcb
int
dec
push
mov
push
arpl
lock
lcall
xchg
out
jne
shrl
add
adc
test
pop
sub
cli
decl
pop
pusha
test
aaa
gs
xor
cmp
pop
add
cmp
sub
ljmp
jl
movsb
fisttps
aaa
pop
sub
cs
pop
pop
test
jb
pop
icebp
pop
std
stos
cmc
and
cmc
in
xchg
sbb
sub
jb
incl
test
lods
mov
pop
add
in
jl
xlat
outsb
lcall
pop
mov
decl
aam
das
push
movb
mov
inc
pop
clc
sbb
sbb
mov
xchg
hlt
incl
inc
stos
and
xchg
mov
push
xor
fwait
lahf
outsl
daa
pusha
pop
ret
daa
in
mov
lods
test
pop
jns
into
sub
pop
clc
lcall
in
sub
or
or
inc
push
popf
clc
xor
test
mov
mov
ljmp
pop
mov
out
cli
cmpsb
pop
loop
shll
ljmp
fsubl
pop
push
stos
mov
shr
lcall
imul
lcall
imul
dec
imul
cmp
ret
test
dec
sbb
jmp
shll
mov
jg
xor
inc
pushf
ret
imul
int
push
ficomps
je
mov
scas
sti
jmp
xchg
mov
inc
xor
sub
xchg
test
aam
mov
jbe
add
test
sub
mov
pushl
ret
orb
or
outsl
push
push
jo
aaa
movsb
in
ja
out
dec
cmp
pop
mov
adc
mov
fiadds
nop
adc
shll
mov
mov
fimull
mov
lcall
jmp
ret
fdivrp
test
mov
imul
jg
decl
cmp
scas
negl
sbb
jp
or
ss
inc
pusha
call
inc
dec
test
jge
flds
mov
jl
adc
or
jmp
std
ljmp
mov
jae
cmp
int
fs
xor
push
add
pop
das
or
cli
pop
shlb
xchg
idivl
jmp
fldt
adc
lds
stos
inc
add
mov
sub
stc
xchg
loop
add
jmp
ret
ja
mov
adc
adc
mov
insb
adc
inc
pushf
fcmovnu
mov
mov
mov
in
outsb
iret
sbb
mov
scas
xchg
mov
xlat
mov
aas
or
mov
enter
pushl
stos
out
lods
mov
sbb
jo
inc
adc
cli
int3
out
mov
and
xor
mov
cmp
mov
xlat
xchg
push
sbbb
and
ja
mov
jne
repnz
push
jb
xor
sub
in
movd
sbb
in
inc
push
loopne
lret
icebp
push
adc
pop
pop
mov
shrb
or
add
dec
push
lret
call
ljmp
sub
inc
cmp
cvtdq2ps
dec
or
in
call
cld
pop
pop
inc
dec
mov
sbb
jle
mov
push
les
xlat
test
incl
pushf
ret
out
xchg
xor
popf
out
shlb
cs
pop
xchg
je
sub
mov
ljmp
cli
xchg
ja
fwait
mov
mov
mov
push
bound
dec
aas
sbb
stc
ret
dec
pop
and
shr
mov
jg
mov
aaa
xchg
in
jno
cmpsl
outsb
inc
ljmp
std
pop
pop
fnstenv
mov
cltd
cltd
clc
cwtl
fimuls
mov
cmp
xchg
fisubl
js
mov
push
mov
scas
mov
inc
and
dec
mov
xchg
nop
lahf
xchg
dec
push
mov
popf
xor
cld
lods
lcall
mov
adc
and
lods
stc
push
pushl
fwait
icebp
push
cld
xor
test
or
mov
or
pushl
sbb
imul
lods
shlb
clts
jnp
dec
push
dec
lcall
dec
pop
rorb
daa
sub
lock
cmp
xchg
dec
jg
mov
ds
mov
mov
fcompp
jge
xlat
mov
int
aam
rolb
decl
mov
add
push
cmp
loopne
mov
test
push
xor
loopne
pop
cltd
jge
arpl
in
xor
popf
add
aaa
xchg
mov
mov
jb
push
fldt
pop
pop
dec
jge
dec
in
adc
adc
incl
aam
mov
sub
aaa
ret
icebp
add
inc
and
jle
jl
cmpsl
aad
push
cmp
sarl
outsl
jne
mov
adc
inc
movl
test
arpl
fstpt
ret
mov
int
test
pushf
mov
lcall
jp
rcll
mov
jl
sahf
in
dec
sub
sub
xor
incl
jecxz
and
js
pop
idivl
sub
mov
aas
arpl
or
push
lcall
lods
and
sub
das
cs
nop
scas
inc
sub
add
push
and
mov
pushl
inc
imul
xchg
push
mov
rolb
es
hlt
outsl
xchg
dec
ljmp
pop
jbe
fstps
insb
jecxz
push
out
stc
push
adc
push
mov
jmp
mov
sub
push
outsb
cmp
mov
mov
je
enter
push
das
xchg
xchg
jle
or
dec
dec
subb
enter
adc
mov
das
shrb
lds
shrl
pop
les
sub
sbb
jnp
sbb
loop
mov
fcoml
sbb
call
repz
dec
sahf
push
movsb
lods
popf
push
lods
int
leave
addb
ljmp
ja
test
rolb
ficoms
adc
pop
adc
jmp
or
mov
imul
push
mov
mov
aad
fcos
fbstp
pusha
jno
dec
and
add
ret
leave
mov
lds
lcall
sbb
mov
mov
adc
out
push
call
xchg
mov
xor
loopne
mov
fwait
cli
cmpsb
dec
pop
xchg
mov
mov
jmp
imul
pop
cmp
je
inc
aaa
fdiv
cwtl
enter
mov
std
pop
sub
fiaddl
rcrl
in
ljmp
fmull
in
xor
out
sahf
lock
sbb
jmp
call
mov
lret
pop
dec
pop
sbb
cmp
cld
mov
inc
push
xchg
aad
insl
sub
cmpsb
and
sbb
into
and
pop
sub
sbb
inc
mov
mov
mov
call
add
cmp
push
xchg
leave
inc
jb
jp
divps
arpl
mov
push
ret
icebp
shrb
jne
add
daa
imulb
fiaddl
jae
cmp
sbb
and
push
test
dec
jmp
lock
inc
ss
adc
clc
jmp
stc
fadd
iret
imul
push
js
inc
sbb
pushf
lcall
ljmp
mov
xchg
xor
inc
push
xchg
rcrl
xor
pop
dec
and
and
sbb
lds
mov
out
fildll
ja
in
dec
push
xchg
and
mov
ljmp
mov
movsl
enter
out
pop
fwait
lock
or
pop
mov
adc
xor
stos
std
mov
jecxz
cmpl
jae
jb
cmpsl
mov
adc
or
cmp
cmp
fcoms
fcomip
in
shll
dec
enter
punpcklwd
movsb
in
cmp
decl
test
mov
mov
imul
adc
bound
jmp
sub
repnz
or
adcl
ret
clc
jp
addr16
adc
jge
call
push
lods
and
mov
cmc
std
in
pop
test
dec
pusha
dec
js
sbb
cmc
mov
xchg
mul
inc
jmp
xor
dec
sbbl
scas
inc
mov
jns
add
xor
adc
mov
rcll
mov
dec
fistpll
xchg
dec
out
cld
outsb
or
sub
scas
imul
mulb
mov
es
mov
stos
out
cli
js
ljmp
repz
mov
mov
add
sub
call
cmp
push
imul
lock
scas
adc
cwtl
and
or
cmp
dec
pop
mov
inc
ljmp
jae
std
xor
je
xchg
fisubs
adc
ficompl
daa
cwtl
adc
ss
incb
dec
push
jbe
orb
mov
cmc
pushf
or
cwtl
or
push
lods
adc
fidivrs
ljmp
or
xchg
mov
int3
test
cmp
das
clc
aaa
and
mov
ret
cwtl
mov
xor
outsb
adc
mov
call
test
mov
push
cwtl
int3
or
shl
cmpsb
inc
xchg
xor
jl
or
xchg
dec
mov
in
je
ds
std
inc
jae
in
push
dec
mov
outsb
jp
mov
movsb
add
xchg
andl
sub
into
orl
repnz
orb
xchg
loope
rorl
mov
pop
xchg
xchg
mov
decl
aas
cli
sub
and
fdivrl
jle
push
mov
and
sar
jo
inc
push
jg
incl
sub
imull
pop
or
sub
and
es
iret
adc
lcall
ret
leave
aad
aas
outsl
mov
push
das
xchg
aam
ret
sub
jae
jo
out
fs
mov
fimuls
xchg
aas
jo
cmp
push
pop
aaa
in
popa
hlt
jle
dec
fists
icebp
push
mov
push
xchg
subb
jg
into
fnstenv
or
dec
das
std
or
aas
decl
push
sti
pop
xchg
imul
inc
pop
repnz
mov
add
jge
in
push
outsl
lahf
pop
lods
sub
test
imul
mov
pop
jl
sbb
pop
or
and
pop
mov
mov
dec
in
outsl
aam
xor
jg
and
mov
sbb
stc
cmp
jbe
mov
nop
fstps
rorl
ds
mov
mov
jle
xchg
lcall
dec
fldenv
jnp
das
mov
sbb
in
mov
sub
push
js
lcall
pop
sbb
sbb
xor
jnp
mov
jp
cltd
iret
sbb
insl
jmp
xchg
shlb
and
add
cmp
cmp
test
xchg
xchg
mov
stc
incl
cmpsb
mov
add
shlb
es
mov
popf
mov
xchg
das
cli
xchg
sub
outsl
clc
jmp
dec
adc
addr16
arpl
push
pop
lods
clc
cmc
mov
sbb
mov
and
int
xchg
arpl
jge
and
or
call
xchg
xor
cmp
lds
adc
and
mov
add
fs
push
push
addl
fisubs
dec
imul
stos
fwait
scas
pop
in
sar
call
push
mov
jl
out
mov
or
out
fstpt
jp
ljmp
movsb
lds
adc
mov
push
imul
pop
aas
cmpsb
loopne
xor
jns
call
xchg
in
cmpsl
jl
leave
into
cmpsb
outsb
pop
mov
ret
sub
das
cltd
mov
jmp
push
jnp
aam
dec
std
inc
fmull
adc
insl
sbb
sub
sbb
movsl
pushl
stos
pop
inc
in
loop
icebp
mov
pushf
data16
push
in
pusha
adc
dec
sti
mov
out
cli
lea
xor
cld
push
test
jbe
int3
mov
and
mov
and
push
or
xor
xchg
dec
mov
xor
lds
fadds
rcll
sahf
pop
loop
in
jl
add
sbb
call
mov
mov
in
loope
adc
or
aam
decl
jnp
inc
jmp
les
xchg
mov
adc
incl
lcall
sarl
fmul
out
dec
clc
jmp
xor
push
rclb
sar
into
adcb
push
sub
jnp
repnz
jo
jns
push
push
push
adc
mov
sbb
mov
call
iret
inc
lcall
sub
dec
roll
lret
or
or
xor
jmp
dec
xchg
sub
and
sbb
js
sub
cwtl
jecxz
cmp
jb
cmpsb
and
call
xlat
dec
xchg
jge
int3
ss
sbb
ret
and
outsb
mov
aam
mov
pop
sbb
incl
mov
mov
imul
lret
adc
popa
push
into
and
mov
jmp
mov
pop
std
pop
call
out
scas
out
mov
lret
popf
les
ljmp
mov
sti
xchg
icebp
pop
mov
sbb
jmp
dec
or
pop
xchg
es
jmp
test
cli
test
sub
test
push
daa
sbb
mov
in
in
pushl
jl
ret
lret
mov
jb
lret
mov
mov
push
push
cli
pop
loopne
jp
repnz
and
ds
xor
lret
push
decl
xor
dec
jmp
pop
dec
stc
loopne
leave
outsb
sti
scas
fadd
out
cwtl
xlat
lods
mov
rcrb
cli
xchg
dec
clc
test
pop
pop
jmp
lods
add
mov
push
ret
add
mov
add
fwait
movsl
inc
sub
fucomip
repnz
ja
jg
mov
mov
aad
fmulp
sub
insl
sbb
add
call
lret
movsb
or
and
and
je
imulb
incb
lock
incl
test
add
pop
xlat
mov
xchg
bound
call
ljmp
mov
mov
pusha
xorl
sbbb
lcall
and
mov
push
jp
xchg
ret
rcll
pop
cld
or
fwait
das
out
jg
decl
insb
jbe
outsb
xor
jo
cltd
mov
or
in
stos
lahf
hlt
mov
incl
adc
pop
movsl
add
or
add
inc
mov
or
cmp
out
push
cwtl
dec
decl
mov
js
cmpl
decl
fucomip
xchg
ljmp
jle
ret
sbb
or
dec
ljmp
js
lds
shlb
mov
push
pop
xlat
inc
inc
outsl
push
pop
sti
cmc
pop
adc
and
adc
xorb
jno
lahf
incl
adc
lret
out
xchg
mov
int3
scas
xor
mov
dec
push
xchg
cmp
cmp
addl
push
cmp
dec
arpl
mov
cld
movsb
stos
ret
mov
repz
roll
andl
decl
mov
jmp
mov
mov
adc
cwtl
cltd
mov
outsb
push
mov
adc
jmp
and
cs
jns
mov
fs
stos
orl
lcall
inc
mov
call
pop
lods
pop
lcall
nop
mov
fisubrl
sub
std
and
jl
mov
add
mov
cmpsl
push
lea
aad
rcll
ljmp
lods
push
leave
icebp
test
outsb
test
mov
enter
xlat
xchg
out
sub
cmp
stos
cmp
cld
xchg
fidivs
iret
sbb
loopne
mov
std
fisttps
jno
add
add
mov
mov
jg
ja
jge
sbb
call
aam
xchg
scas
outsl
push
idiv
adc
sub
dec
mov
cmc
sbb
mov
mov
and
outsb
sar
jmp
pop
jmp
mov
cmp
pushf
pop
lock
fsubs
lahf
ja
inc
pushl
outsb
and
jl
dec
xor
mov
ljmp
out
hlt
jle
movsl
cwtl
in
pop
jmp
lcall
mov
mov
rcrl
push
ja,pt
rclb
lods
add
mov
pushl
mov
fadds
xorl
in
cmp
add
jmp
mov
sub
jne
rolb
bound
faddl
out
aam
mov
jmp
push
inc
test
and
jns
xchg
rcrb
sub
cmp
pop
jns
outsl
xchg
ss
add
adc
ret
push
mov
jb
push
xor
cmpsl
mov
or
and
ss
jmp
mov
out
pop
call
lret
test
popf
mov
xchg
loope
ffreep
cli
lcall
adc
push
ret
push
outsl
xor
pop
loope
lret
stos
in
lds
push
inc
fwait
add
and
mov
sub
lcall
cwtl
loop
cltd
test
sub
xor
or
shlb
rorb
repnz
shl
movsl
les
movsb
sar
add
loope
jg
fstpt
negb
sbb
dec
std
imul
sbb
mov
add
push
sbb
std
jmp
outsl
add
xchg
cmp
push
sbb
call
jne
pop
out
jo
jbe
xchg
and
mov
bound
clc
sub
decl
lock
pop
in
cmp
sahf
dec
xor
mov
fisubrl
xchg
add
or
cld
push
int
ret
jo
pushf
fcmovnbe
cmp
mov
inc
lcall
lcall
jb
xor
jnp
jl
cmp
xchg
cmp
pushl
pushl
jno
dec
enter
cmp
ret
cld
leave
mov
mov
pushl
cld
pushl
psadbw
xchg
or
rcl
adc
jne
and
decb
ljmp
pushf
into
lret
mov
inc
stos
mov
clc
and
jg
cmp
mov
jecxz
sbb
pop
mov
iret
popl
inc
push
call
pop
lret
push
icebp
add
sub
and
lcall
push
xor
sub
ljmp
fidivrs
jns
repnz
xchg
std
mov
xchg
pop
lret
push
adc
repnz
mov
mov
stos
ds
cli
xlat
or
faddp
das
andb
pop
pop
js
addr16
pop
mov
filds
mulb
jbe
adc
aaa
mov
jmp
sub
lahf
mov
adc
sub
inc
push
imul
xor
jns
into
mov
pushl
fs
pop
int
jl
or
lret
decl
mov
push
mov
test
xchg
outsl
adc
mov
addr16
adc
scas
jns
fbstp
shl
aas
xchg
push
pushf
push
pop
outsb
popf
call
push
and
pusha
shll
lods
push
cs
inc
int
jg
sbb
ja
test
and
sub
fidivs
lret
call
mov
jg
xchg
adc
scas
dec
adc
packsswb
cltd
jb
add
jg
fnsave
jo
pop
icebp
gs
mov
sbb
sarb
in
repz
sub
lahf
push
push
mov
pop
bound
lcall
lods
ja
jecxz
imul
es
rclb
insb
in
incb
xchg
xor
inc
test
push
xor
mov
imul
enter
sbb
gs
and
jle
or
cmpsl
dec
es
pusha
xor
nop
xchg
push
jg
mov
dec
push
decl
jne
mov
mov
ds
mov
mov
sarb
cs
sub
mov
sub
or
add
ljmp
push
jge
cmp
adc
cld
or
pop
in
fnstsw
adc
loopne
inc
mov
das
rol
jnp,pn
subb
lret
jnp
cld
jmp
xchg
xchg
or
popa
cwtl
sti
out
mov
lcall
sub
inc
push
out
xor
push
push
movsb
push
sbb
es
popf
movsb
cmpsb
mov
fsubs
inc
sub
call
or
ret
push
in
fwait
inc
outsl
lahf
data16
pop
mov
pop
and
xchg
das
mov
popf
lcall
call
and
das
jp
mov
sub
hlt
andb
mov
pop
arpl
incl
pop
mov
shlb
scas
sbb
push
jne
xchg
adc
rcl
xorb
inc
lcall
push
sub
xchg
push
inc
loopne
es
mov
ds
ljmp
rcrl
adc
sti
mov
inc
inc
mov
in
push
add
das
pop
jne
dec
into
test
sti
decl
fcomp
xor
out
out
test
mov
mov
dec
dec
xor
je
push
add
push
in
cmpsb
movsl
repnz
loop
push
mov
test
lods
sub
mov
imul
aad
dec
sbb
add
sti
ss
sbb
test
stos
int3
and
arpl
jmp
xor
in
mov
add
adc
fcomps
sub
je
decl
mov
scas
cld
mov
paddq
mov
jl
dec
and
xchg
decl
inc
and
adc
push
jo
xor
out
inc
stos
push
jp
fisubs
insl
push
call
or
mov
dec
or
pop
adc
push
nop
push
push
pusha
push
sahf
faddl
jne
pushl
cli
push
movsl
popf
idivb
imul
sub
cmp
mov
mov
das
xor
scas
jo
not
int
inc
xchg
scas
ret
jp
ljmp
jnp
mov
mov
lcall
fisubl
iret
sbb
push
push
in
pop
jmp
ret
data16
mov
ljmp
fcompl
push
push
daa
pusha
adc
arpl
cmp
cltd
pop
dec
sub
mov
loop
add
lret
arpl
push
and
mov
pop
enter
push
push
jp
out
es
pop
ficoml
cli
dec
xor
mov
adc
fnsave
pop
xor
scas
insb
sbb
leave
incb
popa
pop
xchg
mov
inc
mov
decl
test
mov
jp
je
test
pop
shl
stos
lcall
pop
fistpl
adc
lcall
cmp
xor
or
scas
mov
mov
int3
fs
xor
subb
or
in
jmp
mov
lock
sbb
std
xor
lcall
lods
pop
test
sub
dec
stc
cmp
sbb
push
inc
les
mov
xor
pushl
inc
xchg
cmp
std
push
in
shl
sbb
adc
inc
fwait
nop
sti
ljmp
lcall
mov
setl
mov
mov
dec
fisttps
out
dec
pushl
incl
mov
xor
cwtl
push
or
jmp
push
adc
ljmp
stos
adc
ficomps
stos
call
and
inc
ds
pop
jg
xor
and
pop
xchg
pushf
bound
out
lea
cmc
fcmovne
pop
aam
and
call
es
add
or
xchg
xchg
call
adc
add
ret
sbb
adc
cmpsb
jle
popf
popa
addr16
inc
jmp
pop
and
jmp
bound
sub
dec
mov
mov
loope
out
sti
mov
lock
call
xorl
adc
or
mov
movsb
jb
in
xchg
fdivrl
push
fisttpl
mov
mov
push
dec
pop
mov
pop
mov
lea
aam
sbbb
lret
fcomip
or
fxtract
adc
fwait
cmpsb
inc
adc
sub
ja
mov
add
dec
cmpb
lea
xor
cmpsl
jge
stc
sub
jb
decl
lods
dec
push
in
lods
push
int3
push
push
push
loope
push
ds
xchg
ret
je
sub
mov
jecxz
jbe
test
pop
xor
add
int
pushf
inc
scas
inc
outsb
inc
jle
jb
pop
jnp
adc
inc
push
jle
aaa
std
ljmp
mov
mov
movsl
orb
jbe
dec
out
into
sbbb
sub
pushl
sub
lods
out
cmpsb
cmp
mov
imul
test
xchg
jl
lcall
inc
adc
outsb
out
std
push
aaa
jmp
sub
fsub
cmp
jb
dec
fnstsw
jmp
sahf
xchg
hlt
add
insl
lods
fsubrs
mov
sub
cmp
xor
lcall
out
pusha
sbb
stos
loopnew
lcall
in
dec
or
aas
mov
mov
js
mov
sbb
and
mov
inc
lcall
rcr
push
pop
mov
enter
lcall
inc
js
xchg
fsubr
insl
mov
sbb
add
sbb
and
push
clc
pop
sahf
ds
mov
lcall
cmp
and
mov
mov
jl
sub
mov
stos
mov
dec
clc
push
or
pop
pop
add
pop
test
or
mov
xor
decl
je
out
adc
repnz
cld
jl
daa
or
lcall
ret
inc
xchg
lock
dec
xor
imul
sbb
jae
add
mov
in
popa
and
pusha
cmc
in
test
loop
pop
sbb
xor
jae
ret
sub
sbb
mov
leave
imul
loop
xchg
and
xor
fildll
clc
jns
push
es
sbb
decl
test
movsb
stos
call
adc
cmpsl
cltd
pop
and
sbb
mov
and
xor
fisttpl
mov
out
dec
mov
sbb
cs
test
push
sub
jns
lahf
and
push
std
or
mov
add
cli
lock
pusha
inc
mov
iret
decl
popf
test
repnz
mov
rorb
jne
jnp
lcall
jae
mov
decl
adc
or
into
fld
outsl
std
jecxz
and
leave
pop
fucomi
jmp
adc
xor
or
jb
push
mov
stos
and
js
test
xchg
mov
or
lcall
int
mov
es
fdivs
sahf
cmpsl
push
push
and
std
lock
mov
shl
lds
push
out
ret
and
pushl
ja
cmp
or
push
sahf
cmc
shlb
push
roll
mov
call
dec
in
sahf
and
sbb
arpl
sub
or
dec
adc
fisubrs
and
lcall
and
bswap
pop
xor
sahf
xchg
mov
sub
mov
dec
mov
aaa
out
test
lods
dec
lea
loope
inc
ret
call
sti
lods
popa
cli
and
and
outsl
jecxz
sbb
lods
movsb
cld
and
cltd
aas
cmp
jmp
sbb
je
mov
test
nop
mov
adc
mov
inc
fwait
dec
fistpll
clc
out
fcmovnb
jae
mov
lcall
sbb
repz
cmp
or
cs
ret
adc
std
jne
jmp
pop
cmp
insb
pop
mov
dec
jo
loopne
cli
dec
mov
push
xor
push
mov
fld
ret
cmc
fwait
inc
bound
jle
adc
mov
pusha
cmp
pop
aad
mov
arpl
call
mov
inc
jbe
mov
xchg
std
or
jb
inc
mov
push
mov
loop
push
std
call
sub
std
xor
xlat
or
pop
pop
cmp
call
gs
mov
dec
and
mov
gs
pop
pusha
pop
mov
adcb
pop
inc
ljmp
andb
and
pusha
xor
fwait
out
mov
cld
fiaddl
outsb
inc
push
jbe
lock
decl
dec
add
adc
and
push
imul
push
mov
pop
push
and
pushl
push
push
mov
ret
test
fildll
cltd
sub
pop
xor
mov
out
incl
jmp
mov
sbb
xchg
ss
mov
dec
mov
imul
mov
into
push
shlb
into
pop
push
xchg
out
xlat
inc
mov
call
and
jg
mov
fbld
stc
cmp
cmp
aas
and
fucomip
std
add
mov
ljmp
xchg
xor
aas
rclb
mov
sub
cli
push
mov
imul
pushl
ret
hlt
push
jmp
add
sub
sbb
jne
dec
scas
and
mov
pop
cmpb
int3
movsl
roll
orl
aas
pop
add
cmpl
jmp
pop
js
sub
fistpll
aaa
lods
clc
leave
lock
movb
jbe
mov
movsb
pusha
xlat
call
cmp
outsl
dec
push
xor
shrl
mov
mov
iret
in
inc
add
sub
push
cmp
push
adc
push
add
insb
xlat
xchg
cwtl
pop
lcall
std
stos
repz
jne
pop
cli
aaa
shrb
ljmp
pop
add
daa
cmp
xor
lds
jmp
and
out
divl
decl
adc
and
addb
xor
xchg
fs
js
popa
shlb
cmp
push
lock
test
jmp
push
mov
cli
push
testl
filds
lret
inc
mov
cmp
cmc
ljmp
push
push
xchg
in
sub
add
lds
fnsave
call
shrb
push
sub
pushl
mov
pushf
mov
push
pushaw
enter
pop
dec
jo
jl
cltd
mov
adc
lcall
and
stc
mov
sub
and
push
xlat
jbe
add
sahf
mov
dec
call
inc
stc
cltd
mov
xchg
data16
inc
out
or
pop
lahf
enter
push
arpl
lods
fnstsw
call
jg
lcall
std
dec
jnp
adc
lahf
in
jo
call
xchg
mov
int
push
inc
push
jns
scas
sub
incl
lea
xchg
jmp
cwtl
lea
ret
data16
incl
jmp
push
ficoms
std
icebp
int3
xchg
jle
scas
push
unpcklps
loope
ds
push
mov
cli
jmp
lods
lods
sbb
cltd
and
dec
test
push
add
xor
jmp
mov
hlt
ss
mov
dec
inc
shl
aam
mov
mov
lcall
jns
push
mov
cmpsl
nop
loope
inc
jle
test
mov
add
js
aad
mov
mov
test
lcall
in
push
inc
jns
int3
jmp
jmp
mov
jo
xlat
leave
scas
mov
bnd
sbb
pop
mov
and
xchg
rep
out
push
or
aam
jne
sarl
dec
jbe
test
sub
add
mov
jne
push
mov
cs
mov
pop
jb
icebp
adc
insb
mov
inc
or
pushf
sbb
mov
sub
mov
mov
ss
std
xchg
xchg
mov
pop
fcompl
dec
imul
mov
adc
adc
int
pop
lods
mov
pop
lret
sti
dec
mov
mov
ror
jo
inc
loope
xor
jb
shll
call
adc
cmp
pop
dec
fstp
int
fnstsw
pop
icebp
mov
pushf
pop
movsb
popf
cmpb
push
jb
sub
fmuls
ja
sub
call
ret
add
jg
or
xor
pushl
out
jo
xchg
and
sbb
mov
push
push
imul
aas
mov
dec
test
mov
mov
adc
shl
mov
mov
das
mov
mov
cmpsb
adc
repnz
fs
es
and
fwait
outsl
out
cs
test
fldenv
and
mov
jmp
je
test
mov
mov
jne
dec
jb
lea
lcall
mov
xchg
lahf
jo
sub
outsb
js
les
cltd
jnp
aad
mov
incl
fidivs
and
push
add
in
push
outsl
adc
int
out
jp
inc
sub
xchg
adc
add
pushf
test
mov
imul
pushf
stc
mov
ljmp
daa
adc
je
dec
lret
push
test
ds
add
jb
xchg
cmp
ljmp
into
pusha
sub
into
sbb
jbe
popf
or
lcall
jmp
es
je
outsl
xchg
gs
jg
mov
psubd
pop
and
mov
aaa
lret
mov
fbstp
fnstenv
push
push
call
mov
scas
sbb
and
js
aam
je
ret
push
decl
add
lods
test
lret
icebp
xchg
cmpsb
cs
mov
ja
mov
push
gs
inc
adc
sbb
mov
notb
or
popf
les
cli
dec
add
jmp
adc
pop
es
lods
stc
sbb
rolb
iret
bound
call
loope
mov
cmp
xlat
loop
mov
lea
jg
push
sbb
call
loopne
incb
xchg
iret
gs
mov
dec
cmp
call
int3
sbb
outsl
push
out
nop
or
scas
rcrl
push
xor
sbb
cmc
cwtl
pop
ficoml
loopne
stos
insb
jno
pop
sbb
and
rcrl
rcll
dec
mov
add
jae
inc
test
xor
pop
fmul
pop
add
js
sub
pop
mov
adc
shrb
sbb
push
mov
fisttps
das
mov
out
mov
cmc
stos
movsl
xchg
jl
roll
enter
push
dec
inc
jmp
ss
mov
das
push
sbb
inc
sub
in
test
shrb
sar
lcall
lcall
mov
mov
push
enter
xlat
mov
mov
test
mov
lcall
push
iret
ds
xchg
inc
fcoms
outsb
aam
leave
fldcw
cltd
ss
insl
lret
into
ljmp
jne
dec
pop
in
pop
and
mov
daa
cmp
xchg
xlat
push
sarl
call
add
les
loope
xor
and
pushf
das
xorb
int3
xor
jg
out
movsl
es
gs
dec
lret
fs
push
xor
les
xchg
arpl
dec
mov
test
fstps
arpl
pop
xchg
lcall
popa
cs
and
pop
xor
fidivs
xchg
push
pop
clc
jl
or
test
cmp
xchg
push
mov
out
inc
jge
pop
pop
jne
in
cmp
inc
jb
jecxz
cmp
lcall
aaa
mov
mov
adc
or
les
outsl
dec
lods
clc
fdivr
pusha
dec
jg
hlt
jmp
popf
and
push
jmp
cmc
and
cmc
xchg
or
mov
pop
imul
xchg
sub
pop
imul
lcall
cltd
xor
and
sahf
xor
mov
push
cld
pushl
push
test
mov
cmp
cwtl
sbb
mov
das
ljmp
cld
mov
inc
adc
imul
mov
int
shlb
faddl
push
xor
scas
or
jo
sbb
mov
adc
pushf
sahf
pop
mov
fs
or
cmpsb
mov
mov
lcall
xchg
sub
loopne
jg
inc
pop
jb
push
out
andl
sahf
cmp
fcmovnb
sbb
mov
push
cmpsb
arpl
aad
cltd
std
call
add
mov
fistpll
mov
add
cmp
xchg
inc
inc
aad
arpl
dec
lock
cmp
cli
lcall
int3
adc
fisttpl
mov
fdiv
pusha
push
loope
sar
pushl
movsl
sahf
cltd
cmp
jge
push
lret
jno
adc
cs
fistpl
cs
fs
pop
rol
jmp
pop
jne
cs
and
jmp
xchg
jge
lcall
test
push
pop
orl
mov
lods
fs
dec
xor
xor
jl
dec
filds
jl
incl
sbb
jb
lcall
popa
sbb
mov
je
pushl
ja
daa
pushf
sub
dec
pop
push
mov
pop
push
push
add
cmp
mov
sbb
and
incl
jmp
xchg
sub
pop
xor
loop
mov
jg
add
lret
mov
das
cli
incl
mov
add
lods
push
jg
imul
mov
repz
adc
or
jecxz
fs
or
mov
xor
scas
pusha
jb
push
lcall
or
fists
and
popf
xchg
fdivl
lcall
xchg
pushf
test
sub
xorb
pop
pop
sti
aam
mov
sbb
sub
ds
inc
xor
call
scas
aas
stos
scas
arpl
or
or
fisttpll
sarl
int
xor
les
sbb
lcall
push
mov
push
add
jae
filds
push
xchg
adc
adc
cli
push
sub
inc
clc
test
mov
mov
jnp
imul
pop
pop
aam
xchg
das
jae
sbb
mov
push
call
or
scas
aas
out
mov
dec
xchg
jo
pop
pusha
int3
ret
xor
mov
in
push
push
mov
push
mov
popa
dec
or
adc
incl
and
insl
mov
mov
mov
mov
xchg
jg
outsl
add
jmp
in
mov
out
arpl
push
jb
repz
test
and
dec
sub
ret
cli
and
ds
pusha
imul
sarb
jg
mov
and
fisubrl
cmp
sbbb
es
in
jge
sub
call
push
enter
mov
mov
push
das
push
adc
sarb
lahf
bound
xor
call
hlt
mov
push
or
pop
out
xchg
add
mov
incl
cli
dec
sahf
int
mov
xor
cld
or
imul
inc
mov
sub
idiv
lcall
aad
insl
push
cmp
push
mov
movsl
loop
add
gs
out
ret
mov
pushl
cld
push
scas
jbe
mov
test
sahf
mov
pusha
mov
orb
pop
rorl
pusha
cmp
push
mov
adc
lret
lock
decl
jge
loop
xchg
pop
outsb
jmp
out
add
out
inc
push
es
shll
loopne
mov
or
out
loop
rcrb
mov
xor
shl
popl
leave
pop
add
daa
js
lods
dec
push
mov
xchg
push
sub
and
pop
je
ljmp
adc
jno
test
push
stc
stos
iret
jp
incl
xor
mov
jb
mov
xor
pushf
pop
int
decl
negb
push
rcll
and
insb
jp
mov
jb
xchg
push
xlat
roll
dec
setb
daa
mov
addr16
or
cld
loopne
xlat
sbb
adc
xchg
dec
dec
jae
push
int
scas
or
shll
cmpsl
adc
pushf
mov
imul
pop
xchg
fisttps
xor
add
mov
mov
js
cmp
lods
sar
das
mov
jne
mov
ja
mov
jl
pop
cld
call
sbb
sbb
popa
push
nop
xchg
stc
sbb
je
pop
inc
mov
push
je
ds
push
sub
xor
lock
mov
hlt
add
jle
sbb
leave
popa
es
inc
jne
orl
aam
jmp
jae
push
push
dec
ja
sarb
cmp
mov
call
clc
call
mov
adc
outsb
leave
inc
test
mov
push
xor
addr16
ljmp
push
add
jl
out
mov
data16
sub
movsb
adc
jne
or
jl
fs
decl
lock
jo
mov
push
clc
ljmp
ljmp
jmp
and
call
pop
adc
lret
adc
nop
lret
lods
cld
rorb
add
push
inc
mov
ds
loopne
xlat
xor
je
dec
sub
cs
int
add
repnz
roll
inc
xchg
fnstcw
jmp
sti
sub
mov
xchg
mov
add
iret
iret
pop
scas
jmp
ljmp
out
sbb
and
lahf
mov
sbb
je
insb
popa
cmpsb
je
mov
aaa
pop
idiv
jmp
lea
sysret
mov
aam
fisubrl
outsl
xchg
push
dec
cs
xchg
add
stos
mov
push
shll
xor
cmpb
fwait
jge
lret
mov
lcall
sub
repnz
xchg
jmp
push
int3
fdivl
mov
std
sahf
pusha
dec
es
out
pop
ret
add
cld
jmp
push
cmpsl
cmp
aad
lcall
jl
cwtl
jp
push
in
lcall
push
mov
dec
mov
push
in
out
xchg
imul
jns
cs
cmp
cmp
or
mov
xor
sbb
fsubr
dec
dec
dec
mov
mov
movl
inc
jae
cmp
push
in
mov
cwtl
pop
lcall
or
adc
jb
test
dec
jnp
gs
out
clc
mov
pop
mov
clc
jge
mulb
fsubs
dec
aam
cs
decl
jo
cld
popa
xchg
mov
decl
inc
lea
push
rcrb
in
mov
pop
pop
paddw
jne
or
scas
xorb
fstl
add
cmpsl
sub
xchg
rclb
push
mov
into
pop
xor
cmp
fstpt
fcompl
repnz
repnz
cmpsl
xchg
int3
sub
cltd
or
lea
pushl
cld
fmuls
pop
or
loopne
clc
cmpsl
mov
out
out
push
test
dec
mov
push
jmp
push
fs
mov
outsb
test
mov
aad
ljmp
mov
mov
adcb
test
cltd
jns,pt
jnp
fbld
orl
mov
cld
ljmp
lock
mov
mov
lds
sub
xchg
out
bound
sarb
enter
fstl
call
ljmp
inc
ret
adcl
pop
sub
jbe
inc
mov
mov
mov
push
sub
lods
notb
xchg
push
sub
inc
inc
orb
xchg
pop
dec
xchg
aas
sub
xor
pop
jmp
jns
ss
stc
push
mov
push
xor
add
lahf
cmpsb
lea
lods
lods
hlt
push
clc
lcall
jp
lret
loopne
lds
cmp
aam
incl
stos
hlt
mov
and
arpl
test
repz
add
lock
xchg
dec
enter
push
add
cmp
in
xchg
xor
test
push
sub
xorl
mov
jl
mov
aas
or
scas
mov
call
arpl
mov
mov
sub
fsubs
mov
sub
xchg
lea
inc
je
test
mov
adc
xchg
call
inc
ficompl
mov
xchg
dec
xchg
jbe
sbb
jecxz
scas
sub
jns
jg
mov
mov
or
mov
dec
sub
fwait
decl
mov
inc
sbb
push
sbb
jecxz
fs
idiv
movsl
cltd
hlt
xchg
stos
jmp
adc
rcrl
jg
ja
data16
add
in
sti
mov
fwait
lcall
adc
xor
sbb
push
pusha
aas
lock
shrb
mov
aam
outsl
out
cld
xchg
lds
mov
mov
adc
fsubr
aad
jne
icebp
mov
ss
pushf
pop
incl
fnsave
xchg
out
inc
jmp
jbe
sub
clc
jns
mov
adcl
idiv
dec
and
ficoml
lods
jle
insl
dec
lock
xchg
je
ljmp
sti
push
rolb
mov
in
push
cmp
insb
push
xor
pusha
dec
mov
sbb
xchg
sub
clc
clc
mov
and
frstor
mov
mov
sub
fcmovnb
pop
xacquire
push
movsb
pop
cmp
pop
loopne
lods
add
inc
push
mov
and
jmp
je
pop
mov
xor
cmpl
fdivrl
lods
jecxz
cmp
add
ljmp
fmuls
push
out
dec
js
ret
inc
dec
inc
pusha
pop
loope
insl
pop
dec
rcrb
test
dec
add
setg
jne
popa
test
cmp
call
inc
fisubrs
popf
and
imul
in
imul
mov
dec
xchg
pop
add
jae
out
pushf
scas
lcall
pop
adc
cmp
ret
mov
fadd
gs
jg
fidivl
in
add
fcomip
lcall
scas
mov
pop
inc
and
add
daa
in
or
jmp
push
pop
cmp
cmpl
lods
xchg
pop
xor
adc
push
mov
fsubl
sub
in
sbb
outsl
xchg
pop
xor
push
in
jl
adc
sbb
pop
aas
das
jmp
test
dec
mov
and
mov
mov
xorl
into
arpl
sub
dec
adc
daa
repz
adc
fildll
jecxz
fucomip
or
icebp
pop
les
gs
popf
or
sbb
sbb
pop
and
inc
lahf
sub
dec
test
sbb
and
shrb
sub
mov
pop
sub
mov
ljmp
test
mov
jb
and
push
mov
mov
mov
jmp
loope
stc
and
cmpsl
fdivp
add
inc
scas
ss
xchg
sti
loope
loope
adc
or
dec
out
stc
jp
js
repz
ja
sub
andb
cmpsb
push
jp
in
into
or
jmp
jmp
mov
loope
mov
jbe
scas
les
add
shl
mov
lcall
lcall
xchg
cltd
jmp
xor
or
push
insb
test
xchg
mov
jmp
repz
dec
or
jnp
xchg
pop
jecxz
push
push
popf
test
dec
sahf
jg
call
aas
fildll
sbb
les
push
call
sti
and
jl
mov
stos
stos
rcr
jg
leave
sti
pusha
iret
clc
jg
mov
add
in
gs
adc
decl
fisubs
test
fnstsw
mov
pop
sub
mov
mov
pop
jge
outsl
popf
jae
push
stc
rcll
xor
pop
pop
cmp
add
in
add
sub
cmp
jmp
xor
cli
or
and
sub
cmp
popa
out
lret
nop
mov
dec
inc
add
gs
lcall
jg
cmc
outsb
push
je
jns
mov
and
ljmp
xchg
mov
incl
mov
rcrl
sbb
sahf
mov
incl
sbb
mov
lret
xchg
cmp
lgs
clc
call
das
out
arpl
imul
pop
pushf
cmp
inc
aam
push
adc
adc
add
insl
pop
add
orb
nop
aad
fisubs
sub
push
push
fldt
rcrb
pop
mov
push
xor
lret
dec
push
push
inc
pop
popa
sub
mov
ja
adc
sub
adc
push
ret
jbe
cs
push
inc
filds
ret
push
mov
add
add
push
adc
nop
add
add
mov
sub
add
stos
mov
lds
add
mov
inc
sbb
outsl
addps
ficoms
push
gs
test
test
imul
sbb
sbb
fiadds
xchg
mov
aas
testb
insb
push
push
xchg
jo
push
outsl
je
dec
and
gs
push
fistl
iret
sbb
mov
sbb
push
shlb
je
add
push
pop
into
adc
imul
mov
std
dec
jne
js
stos
pop
inc
fbstp
imul
pop
cmp
mov
push
es
xchg
inc
outsb
mov
loope
push
jo
inc
lcall
insl
insl
popa
sub
insb
outsl
fidivrs
ret
pop
push
outsb
out
pop
fisttpl
imul
rolb
inc
insb
sub
dec
inc
cli
mov
push
fisubs
mov
ret
jbe
testb
push
sbb
sbb
push
inc
push
pop
sub
jbe
adc
imul
jne
inc
inc
loop
cli
addr16
loope
loopne
jbe
jle
jbe
or
xchg
push
jl
bound
dec
dec
or
push
repnz
jne
shl
dec
jmp
jne
data16
pop
pop
lret
cmp
xlat
mov
cmp
out
push
pop
xsaveopt
je
add
enter
pop
inc
and
fstpt
outsl
push
lcall
jns
inc
inc
sbb
nop
xchg
popf
jns
pusha
pop
xorl
xor
mov
jb
mov
push
jge
mov
adc
pop
push
addb
bnd
adc
pusha
pop
addb
dec
push
and
sub
repnz
sbb
inc
leave
xor
in
mov
je
arpl
adc
inc
sbb
mov
gs
mov
xor
cli
nop
and
sbbl
push
add
fisubl
popw
push
push
mov
adc
fldt
dec
lret
xor
xchg
mov
jae
push
ret
sub
lock
sub
dec
ret
adc
mov
cmpsl
pop
insb
bound
dec
shlb
out
gs
pusha
push
shll
pop
inc
das
lds
test
and
or
insl
pop
push
mov
test
sbb
jns
pop
insl
or
lock
je
pop
popa
es
push
sbb
adc
xor
push
mov
xchg
test
ficoml
or
or
push
arpl
sbb
dec
or
adc
mov
cmp
push
dec
mov
scas
insl
xlat
dec
sbb
adcb
inc
and
pusha
stos
les
popf
lahf
mov
xor
push
pop
mov
es
xor
fs
jns
cmpsb
push
mov
ljmp
mov
fsubl
ret
cmpsl
sbb
add
mov
jge
sti
jae
mov
sub
fwait
aaa
roll
push
scas
je
push
xchg
aad
jo
mov
push
xor
lea
fadds
loopne
push
inc
outsl
push
lds
je
add
inc
xchg
mov
pop
cmc
inc
sbb
push
sahf
push
xor
sub
lods
sbb
inc
sbb
xchg
jne
jecxz
add
stos
or
roll
adc
and
sbb
cltd
adcb
push
and
pusha
mul
or
cmp
lods
push
xor
movl
rcrl
mov
add
out
leave
push
outsl
inc
out
push
inc
sarl
popa
pop
movsl
mov
addr16
push
cmp
inc
or
adc
out
mov
and
sbb
xchg
push
sub
scas
push
sbb
jle
dec
adc
arpl
sahf
sub
mov
mov
jne
inc
push
mov
cmp
test
add
push
fcmovb
test
add
jnp
cmp
xchg
stos
cmp
out
xchg
enter
dec
rcrl
fdivl
adc
dec
inc
jne
xor
pop
sbb
loopne
inc
arpl
sub
adc
lock
das
push
loop
jmp
inc
push
jg
rcll
dec
cmp
outsb
and
inc
sbb
popa
test
dec
aaa
popf
lret
into
call
jge
outsb
in
rcrl
sbb
xor
es
sub
jno
adc
push
or
mov
pop
jo
jne
aad
mov
sbb
dec
rcr
adc
ffreep
jmp
rorb
fs
pop
adc
inc
mov
ret
push
outsl
pusha
inc
jb
and
mov
or
sbb
test
jo
inc
inc
mov
push
arpl
stos
lods
icebp
inc
imul
stos
icebp
aam
loop
fs
insb
mov
js
insb
lock
ss
mov
jle
lar
inc
push
test
mov
dec
jae
dec
movsl
inc
fidivs
nop
loope
add
fs
pop
cmp
hlt
jne
xchg
jo
pushf
mov
jns
pop
push
mov
pop
imul
les
movsl
jecxz
push
fbstp
sub
push
push
pop
push
not
xor
and
inc
or
int
outsb
inc
mov
sbb
pop
pop
and
push
insl
add
adc
lds
insb
fists
dec
mov
sub
pop
push
mov
jo
mov
shlb
fidivrl
lcall
dec
add
sbb
jmp
shll
sub
dec
shll
mov
xor
pop
add
pop
add
mov
add
push
lods
mov
and
push
sub
flds
mov
cmp
dec
ficoml
sbb
and
aad
mov
sub
push
pop
clc
shrb
out
ret
push
subb
or
cmp
inc
jb
jne
sahf
mov
push
and
shr
das
jo
sub
insb
cwtl
loopne
mov
cmp
xlat
repnz
xchg
test
cli
js
fsubrs
mov
cmp
les
addb
lock
mov
inc
sub
loop
jl
cmp
push
pop
scas
dec
push
sbb
insl
lock
scas
and
jg
or
in
ja
push
cltd
fcmovnu
cmp
andb
fcmove
xor
cli
fs
push
mov
adc
data16
adc
fsts
outsb
jne
in
jnp
fldenv
or
rclb
jno
adc
jmp
in
jo
mov
imul
nop
loopne
jae
sbb
test
xchg
push
shl
rcll
rcr
inc
sub
loope
arpl
and
les
inc
ret
xchg
popa
sub
push
ret
std
xchg
and
adc
lock
mov
xchg
inc
insb
addr16
sbb
xor
imul
push
add
xchg
sbb
movsb
dec
add
push
sub
xor
jmp
jecxz
mov
adc
in
mov
dec
sub
stos
sub
shl
imul
call
xchg
addb
dec
sbbb
insl
stc
dec
mov
std
and
lock
push
pop
insb
or
jmp
pop
inc
mov
mov
mov
inc
or
adc
lds
aas
or
pop
sub
or
xchg
stos
loope
icebp
pop
sbbl
outsb
xor
pusha
ret
inc
outsb
fistl
test
sbb
xor
insb
and
inc
loope
imul
pusha
into
ret
sbb
lea
outsl
sub
xlat
add
pop
jmp
or
pop
out
add
add
xchg
add
ret
sub
cli
pop
and
push
inc
mov
cld
push
push
inc
call
ficomps
imul
cmpsb
sbb
add
jo
aaa
or
jbe
outsl
xchg
into
or
inc
mov
push
call
xchg
or
jbe
mov
mulb
adc
sbb
divb
js
imul
xchg
or
loope
push
int3
popa
mov
dec
add
and
pop
pop
aas
loopne
fsubrs
or
mov
add
fisubrs
add
mov
inc
pop
xor
aas
maskmovq
idivl
pop
add
or
adcl
outsl
test
push
add
test
add
repnz
add
sbbb
inc
pop
and
add
sahf
ret
lea
shrl
inc
and
jb,pn
popa
adc
pop
bound
add
inc
push
xchg
mov
inc
cs
jae
dec
dec
sub
lock
sub
pop
ja
xchg
push
rcrb
test
mov
sbb
mov
push
cmp
or
xchg
and
fstl
int3
iret
rclb
inc
and
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
aaa
inc
add
