divl
in
mov
mov
mov
push
push
call
int3
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
dec
adc
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
jge
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
sub
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
cmpsb
push
mov
andl
data16
mov
add
int3
aam
orl
lea
punpckhwd
aaa
mov
push
mov
inc
in
iret
negl
push
in
loopne
movb
inc
xchg
ds
inc
add
add
call
mov
cmpl
jne
mov
jmp
ja
add
push
mov
sbb
out
std
jnp
add
jbe
sbb
pop
dec
push
push
ss
sub
xor
mov
shl
xlat
cs
loop
in
xor
roll
lea
xacquire
mov
mov
loop
push
mov
daa
into
push
cwtl
in
xchg
sbb
xor
fldenv
push
decl
add
mov
push
idivb
mov
push
push
push
lods
sysenter
pop
inc
loopne
outsl
add
fdiv
fistpl
fisttpl
ret
add
jae
or
test
je
pop
add
pop
mov
push
add
loopne
push
loopne
sbb
rolb
add
push
pop
sub
add
pop
inc
mov
push
dec
in
pusha
les
sub
dec
add
sub
imul
call
cmp
sahf
or
cmpsb
stc
call
in
aas
or
loopne
js
in
lahf
outsb
clc
push
push
mov
in
inc
inc
mov
fwait
add
les
push
mov
dec
cmp
jge
mov
jmp
mov
push
push
sub
inc
inc
dec
jb
mov
jno
and
and
jmp
push
in
jnp
cmp
adc
int3
clc
inc
shlb
push
pop
mov
aaa
jb
mov
lds
mov
xchg
add
sub
push
mov
push
inc
cmp
jae
xchg
add
outsb
fistpll
push
pop
stc
push
mov
add
and
sbb
add
mov
hlt
sub
push
insl
test
lock
adc
pop
cwtl
mov
pop
push
jle
xchg
jl
and
push
scas
mov
push
sub
pop
mov
test
mov
dec
iret
cmp
lock
add
call
push
lods
clc
cmpl
jb
xor
popf
sbb
scas
mov
cmp
fdivl
push
push
add
inc
es
or
shrb
mov
jle
xor
test
iret
sub
jo
push
rolb
push
fimuls
sub
stc
fisubrl
push
sbb
inc
adc
push
sbb
pop
subl
push
cmp
sbb
mov
or
and
or
and
repz
mov
fwait
je
bound
add
lods
punpckhdq
mov
push
daa
mov
idiv
jecxz
int3
push
xchg
mov
or
jecxz
cmpsb
push
cmp
and
inc
cmp
aad
popf
xchg
sbb
push
xchg
loop
stc
cli
dec
cs
pop
test
jne
data16
pop
pop
inc
pop
es
outsb
push
movsb
and
mov
sub
xor
cmp
lret
sub
adc
mov
jns
out
inc
xor
inc
pmulhw
rolb
jmp
rcrl
sbb
push
push
lret
jl
push
enter
adc
jbe
sbb
or
sbb
inc
pop
sbb
or
add
push
pop
inc
sbb
sahf
push
push
adc
xor
out
pop
sbb
sarl
nop
popa
mov
sbb
outsb
adc
jg
jmp
push
mov
pusha
sbb
inc
add
leave
repz
pop
push
stos
jae
push
mov
xor
cs
pop
pushf
or
imulb
je
aas
ret
lahf
lds
push
and
sub
mov
out
lea
or
inc
or
push
push
push
adc
loope
je,pt
ret
fiaddl
jl
mov
or
notl
mov
pushf
mov
push
xchg
or
mov
out
and
mov
sub
dec
xor
pop
adc
xorb
roll
cltd
mov
aaa
shrb
push
mov
sbb
mov
test
mov
insl
xchg
rclb
mov
jl
cmpsl
mov
jg
pop
xor
mov
int3
cmp
je
xor
mov
lea
outsl
push
mov
aaa
je
nop
stos
les
icebp
add
mov
js
jno
mov
mov
movsb
and
cmp
add
ret
mov
inc
or
cmp
stos
mov
sbb
dec
je
inc
or
lret
push
insb
fistl
popa
jae
or
mov
lea
sbb
movsb
xchg
and
add
lret
out
into
enter
pop
cmc
adc
stos
pop
push
stc
or
ds
inc
or
ljmp
fistps
bound
xor
or
js
cmp
mov
fcomps
jbe
dec
xchg
dec
incb
icebp
mov
push
test
call
lock
loopne
lock
jne
pop
mov
sub
ret
sbb
je
or
jae
push
std
cmp
je
sub
dec
pushl
pop
in
rclb
inc
mov
sarl
cli
xchg
xchg
test
je
fs
ficompl
mov
push
std
push
push
push
mov
cmp
dec
mov
push
in
repnz
jg
pop
sub
call
mov
test
jne
fs
iret
call
inc
cmp
jl
jmp
pop
pop
push
mov
jne
push
push
pop
push
pop
push
sbb
jmp
sub
jl
mov
mov
ret
add
mov
scas
or
mov
insl
movsb
or
sbb
pop
iret
scas
or
and
mov
mov
ret
jg
mov
sub
jmp
push
incb
sbb
add
add
push
dec
push
andl
loop
sbb
xchg
mov
cmp
jl
push
mov
cmp
pusha
adc
mov
push
push
and
adcb
pop
ret
push
les
cmp
mov
or
push
push
dec
mov
push
jp
and
stos
pop
ja
imul
cs
out
dec
fistpl
cmpsb
inc
aam
push
mov
sub
pop
js
sub
pop
cmp
jl
lahf
clc
mov
jge
jecxz
out
cwtl
cmp
je
sbb
sub
jle
mov
mov
outsl
mov
pop
lea
push
mov
sbb
in
cmp
ja
add
jmp
mov
addr16
add
stos
mov
mov
push
lods
insl
cmp
dec
icebp
cmp
cmp
ret
jle
cmp
je
or
std
or
inc
outsl
dec
mov
jmp
inc
pop
cmpb
nop
int
push
mov
or
stc
jne
pusha
jo
pop
mov
jmp
xchg
in
add
imul
out
push
repnz
inc
mov
cld
cmp
pop
push
ja
lea
decb
pushl
cmp
jmp
xchg
pop
popaw
pop
sbbl
fsubl
pop
pop
arpl
adc
jae
adc
pop
xor
out
pop
adc
xchg
add
nop
test
test
cwtl
xorb
cwtl
rolb
mov
pop
js
sbb
mov
subl
jle
je
ljmp
pusha
pop
push
cmpsl
mov
pusha
lret
mov
push
push
push
popl
adc
cmp
pop
xchg
mov
rcrl
je
test
ret
lea
icebp
inc
ret
mov
imul
mov
add
addl
sarl
adc
adc
cmp
sar
xchg
mov
fs
cmp
je
cmpl
push
mov
cmp
jne
push
push
imul
scas
popf
ret
jl
pop
jmp
fmuls
xor
cmp
jle
dec
cmp
leave
push
inc
sub
pop
mov
sub
or
jge
xlat
inc
aaa
fidivrl
inc
jno
pop
ret
clc
jg
inc
fimuls
movb
pop
stos
outsb
into
or
in
int3
mov
and
add
lods
adc
sub
or
inc
inc
or
shlb
adc
ret
pop
cmp
sbb
call
add
shr
jo
inc
pop
and
lock
xor
adc
xchg
cmpl
dec
cmpsb
mov
adc
test
or
jge
in
dec
push
push
call
outsl
sub
jbe
into
cs
xchg
sbb
dec
cli
pushf
mov
push
fdivrp
fsubs
and
mov
mov
mov
mov
cld
xor
out
lods
mov
push
dec
clc
mov
ret
inc
or
cmpsl
mov
pop
lret
loop
sub
aam
add
clc
cmp
sbb
inc
jmp
ret
sub
cmpl
jle
push
cmp
jmp
mov
cmp
jge
mov
ret
ret
shlb
jbe
push
push
out
cmp
fstl
loopne
cmp
push
sub
test
cmp
jo
outsb
adc
mov
loopne
jl
jbe
inc
add
or
fwait
pop
push
adc
adc
repnz
ljmp
pusha
fimuls
jge
mov
jle
hlt
mov
pop
push
or
mov
lock
push
ss
cltd
cmp
cmp
ret
out
pushf
pop
ficoml
jmp
out
xchg
sarb
cmp
shlb
dec
push
mov
xor
sbb
xchg
data16
lea
add
or
nop
stos
loopne
mov
add
fcomi
xchg
pop
cltd
jmp
loopne
scas
dec
mov
jbe
inc
aaa
fcoms
lea
push
mov
out
inc
mov
pop
pop
jmp
mov
pusha
orb
movl
adc
or
ficoms
sbb
loope
mov
pop
sbb
pop
stc
testb
je
or
xor
mov
std
ljmp
inc
mov
enter
add
mov
or
sub
xor
insb
leave
dec
dec
data16
add
adc
inc
and
cli
add
or
sbb
and
arpl
or
shrl
ret
push
push
rclb
cs
inc
adc
mov
int3
lods
sbb
and
ja
jl
and
aas
sbb
das
sbb
test
jl
sbb
add
push
stc
fmuls
sub
into
adc
pop
cmp
and
dec
ss
jnp
cs
push
adc
dec
dec
lret
or
mov
adc
sub
mull
dec
or
jg
mov
xor
cmp
ja
cmp
test
adc
and
std
repz
je
cmp
popf
cmpl
push
cld
insl
mov
mov
push
cltd
pop
mull
fldt
jne
lock
mov
inc
cmp
push
mov
mov
jb
jmp
push
popa
dec
pop
pop
ds
pop
mov
dec
sbb
adc
clc
in
sub
add
push
push
jbe
call
cmp
enter
and
out
div
lret
and
jmp
sub
dec
je
and
jnp
push
adc
in
jge
adc
mov
ss
out
iret
icebp
adc
fs
or
dec
pushf
movsb
sbb
cltd
ret
rcr
mov
int
jp
jecxz
pop
jne
jp
jecxz
mov
rolb
pop
addb
xor
and
ljmp
push
add
mov
scas
adc
or
inc
movsb
sub
mov
push
mov
xchg
xchg
mov
loope
fidivrs
add
shlb
add
ud2
movsb
push
xor
push
push
sub
push
pop
pushl
js
inc
push
in
in
outsb
cmp
daa
adc
jge
popl
inc
sbb
adc
jmp
in
scas
sarl
jae
mov
shr
fs
sbb
dec
stos
xor
leave
adc
adc
sti
out
andl
or
cmp
jmp
mov
sbb
and
push
jmp
pop
fisubl
and
jge
or
sbb
mov
mov
repnz
and
repz
shrl
inc
pop
push
iret
mov
loop
mov
push
fs
pop
pop
cld
sbb
cld
cmpsb
pop
lock
cld
mov
fstl
lcall
adc
and
xchg
outsl
cmp
in
or
clc
movb
add
or
xchg
xchg
lret
adc
scas
add
cmp
fdivp
push
dec
mov
pop
push
lea
push
addl
cs
pop
inc
xor
xchg
xlat
dec
cmp
mov
cmp
inc
addr16
scas
pop
or
dec
push
inc
add
or
cld
xchg
mov
pop
cmp
sbb
push
call
ja
push
sbb
lea
adc
imul
cmpsb
jo
and
iret
in
jnp
push
call
add
add
clc
push
push
ja
mov
std
movl
lret
js
jbe
test
mov
sbb
pop
pop
push
and
push
dec
pop
ds
inc
jmp
adc
cmpl
aas
xor
adc
nop
sub
sahf
mov
xchg
jge
mov
adc
iret
arpl
jae
and
in
adc
pop
nop
out
inc
mov
js
adc
sbb
dec
je
adc
stos
jmp
jae
loop
adc
dec
dec
rclb
not
and
inc
pop
in
ds
aaa
and
pop
mov
imul
lds
in
pop
push
push
xchg
xchg
imul
jl
cld
push
push
push
push
mov
loope
pushf
cmp
xor
push
push
loop
add
xchg
push
mov
dec
sub
lods
and
sahf
pop
jmp
push
clc
add
push
outsb
mov
pop
pop
daa
lea
sub
pop
mov
jo
mov
mov
in
and
loopne
pop
faddl
sbb
sbb
lds
push
push
cli
hlt
dec
add
adc
outsb
xor
sbb
sub
in
or
lea
push
mov
pushl
cmpsl
mov
les
adc
mov
push
inc
dec
or
imul
mov
std
pop
cmp
je
dec
call
cltd
sub
sar
add
cmp
bound
in
dec
in
int
insl
mov
pop
xor
cmp
inc
cmp
mov
inc
pop
pop
leave
jae
sbb
leave
sbb
xor
jno
and
ret
add
sub
push
mov
cmp
outsl
icebp
pop
add
and
clc
dec
and
push
sub
push
cmp
adc
std
dec
mov
dec
test
sbb
and
and
cs
adc
mov
je
push
pop
andl
xchg
mov
lcall
inc
cmp
dec
xor
in
or
push
insb
mov
adc
or
adc
mov
dec
maskmovq
sbb
and
test
aas
jl
adc
adc
ja
push
orl
push
mov
ss
ljmp
rcrb
cmp
loope
adc
dec
mov
je
push
mov
test
testb
aaa
and
shll
popa
hlt
add
pop
and
sbb
cmp
daa
ds
mov
xchg
mov
cmpl
je
cmpl
xchg
jne
adc
dec
je
mulb
lea
pop
push
add
loopne
jp
into
jg
jmp
mov
outsl
insl
pop
push
cmp
push
pop
ror
rorb
stc
mov
add
mov
sub
jbe
pop
lock
lds
sahf
inc
mov
js
push
push
gs
xor
mov
xchg
mov
push
hlt
movb
add
lock
pop
cltd
mul
fldz
bound
es
sbb
mov
loope
fcoml
aas
mov
loopne
and
cmc
xchg
mov
out
sbb
inc
xchg
pop
fs
incl
sbb
or
test
inc
pop
pop
not
xchg
loopne
mov
and
popf
push
pop
jae
pop
adc
xor
pusha
mov
cmp
flds
xchg
jle
or
in
pushf
cmp
inc
dec
push
jge
clc
cmp
pop
jbe
cmpxchg
sub
adc
cmp
mov
mov
push
shlb
insb
inc
jbe
adc
push
sub
or
nop
cmp
sub
or
movl
sahf
cmp
lret
adc
jl
pop
insb
push
pusha
and
andl
daa
cmp
rol
test
sub
cs
sub
push
adc
fwait
add
push
cmpsb
dec
lock
cmp
and
sbb
sub
push
cli
xlat
call
xor
or
xor
addb
xor
cmpl
pop
push
dec
xor
mov
not
sbb
test
icebp
mov
mov
cmpsl
cltd
out
imul
ds
pop
clc
pusha
fmull
push
push
sbb
enter
es
add
add
ret
imul
jb
faddl
and
jge
movsl
pusha
es
pop
or
and
rcrl
and
inc
popa
rorb
cld
and
rorl
or
iret
icebp
xchg
shll
pushf
and
cltd
sub
mov
or
arpl
dec
push
add
adc
push
addl
sub
add
shll
call
xchg
pop
dec
incb
push
cltd
or
adc
out
rorl
js
ret
cmp
in
push
mov
daa
push
mov
test
orl
sbb
mov
sub
test
sbb
or
adc
pop
mov
sub
je
cmpb
jne
cmc
jns
pop
je
cwtl
pop
shrl
lock
xchg
push
lock
push
stc
push
cs
sub
push
push
or
mov
jmp
adc
pop
pop
sub
repz
dec
jmp
add
xchg
nop
push
add
mov
pop
inc
shlb
or
scas
mov
push
push
sub
jmp
insb
push
inc
push
in
ror
or
push
xor
pop
ficoml
push
mov
sbb
cmp
inc
xchg
out
jo
adc
jo
dec
fsub
fidivl
or
jno
shll
dec
inc
push
pop
jp
cwtl
mov
mov
fiadds
fwait
sbb
cmp
mov
cltd
mov
add
sar
push
cmp
adc
sbb
mov
jl
dec
inc
sbb
fistps
lret
lock
adc
adc
les
sti
push
pop
push
adc
dec
jmp
xor
idiv
jle
mov
mov
aaa
jp
mov
add
jne
and
cmp
push
jbe
adc
xchg
push
fucomp
jp
pop
insb
sub
pop
mov
mov
sti
sti
adcb
ret
pop
stos
mov
cltd
mov
adc
push
add
rorl
out
call
push
ljmp
movsb
sti
sub
or
je
test
pop
lea
cltd
idivl
push
add
cli
xor
sbb
mov
mov
maskmovq
imull
into
mov
or
xchg
idiv
sub
sub
mov
test
or
jbe
lahf
stc
repnz
xor
xchg
in
and
xor
loop
movl
mov
cli
mov
dec
sub
jge
jmp
mov
pop
sub
inc
hlt
pusha
or
add
xor
fdivl
xor
mov
fdivrp
jb
movlps
mov
test
sbb
cmpsb
fbstp
add
pop
add
fiadds
xorl
or
xchg
pop
jl
jmp
rolb
bound
jge
je
mov
outsl
into
clc
fidivl
jmp
outsb
mov
mov
mov
lods
jmp
jnp
mov
add
jl
dec
cmp
addr16
push
mov
aad
bound
fmull
push
sbb
push
or
cmpsl
rcr
lock
push
adc
sbb
mov
aam
jo
adc
movsl
cmp
xchg
push
lahf
je
je
movsl
test
or
pop
sub
cmp
and
repz
jmp
sbb
jle
arpl
ljmp
sti
sbb
and
mov
hlt
aam
mov
push
ret
push
mov
add
arpl
clc
test
call
cmp
pushf
sbbb
xor
pop
mov
or
sbb
xchg
dec
push
or
divps
mov
xchg
loopne
push
rcll
movb
mov
loopne
jmp
or
and
xchg
pop
jmp
inc
pop
push
filds
and
xor
clc
loope
cmp
icebp
lea
push
mov
push
mov
aas
test
repnz
mov
push
cmp
pop
pop
push
mov
negl
push
sub
dec
push
dec
add
push
or
push
or
or
dec
lea
or
aas
lods
cmp
in
pop
adc
add
xor
inc
adc
push
jg
dec
roll
jg
popa
push
add
cmp
add
sbb
or
ljmp
insb
adc
fs
int3
and
push
dec
jae,pt
push
pop
add
mov
maxps
jecxz
mov
mov
push
movsb
sub
adc
or
xor
leave
daa
cmp
mov
xchg
out
fsubs
pop
xchg
and
or
addl
dec
and
mov
xor
xor
inc
ret
pop
ret
mov
push
pop
mov
pop
cmp
or
inc
and
leave
clc
lods
lock
ljmp
cmp
setb
test
jne
mov
sarb
dec
sub
sar
call
dec
dec
adc
pop
add
aaa
add
jl
adc
mov
push
mov
sub
pop
mov
mov
adc
dec
nop
lock
lods
adc
push
hlt
mov
xor
xchg
inc
add
shrb
inc
sbb
dec
cmp
and
cmp
enter
xor
sahf
into
jge
lcall
imull
call
or
push
shlb
mov
lret
mov
es
add
mov
pop
fdivrs
xchg
in
lods
adc
cs
add
add
adc
push
pop
aad
test
int3
xor
clc
or
and
fmull
push
je
and
je
in
sbb
jnp
push
mov
or
pusha
inc
aam
fisttps
pop
rorl
or
inc
jg
rolb
shlb
xor
or
movl
add
adc
movl
cmp
js
mov
inc
mov
loopne
mov
sbb
xor
jl
insl
ja
outsl
xchg
mov
test
and
add
pop
lods
out
add
cmp
pop
pop
enter
mov
pop
push
pop
and
or
in
sbbb
xchg
ret
test
je
push
dec
clc
push
mov
js
fsubrs
ret
jne
push
adc
les
mov
insb
mov
mov
adc
mov
jmp
imull
enter
gs
mov
imul
xor
push
push
ja
iret
pop
jg
inc
xchg
sub
setno
arpl
test
shll
or
flds
mov
call
push
add
and
ja
push
daa
repnz
pop
enter
pop
push
addr16
push
cs
sub
ret
inc
mov
cmpsl
xchg
lock
push
jg
xor
mov
inc
jg
shrl
lcall
xor
jns
jns
decl
call
mov
pusha
enter
add
in
push
push
ret
dec
dec
lea
rorb
xchg
jecxz
pop
push
cmp
pop
push
inc
fmuls
sbb
xor
xor
mov
jbe
or
push
stos
inc
repz
jbe
popa
movsl
sbb
cltd
out
push
cld
insl
lock
je
cmpb
cltd
adc
repz
adc
mov
xchg
xchg
imul
aad
or
leave
xchg
lods
jl
push
or
pop
fnstsw
or
xchg
add
xchg
inc
mov
cwtl
or
add
jle
inc
mov
stos
push
add
divl
pop
mov
mov
mov
inc
mov
icebp
pusha
scas
cmp
push
movsl
xchg
pop
dec
ja
jnp
cmpsb
cs
popf
inc
push
cmc
push
pusha
mov
mov
call
mov
fmuls
js
sbb
stc
sub
push
sub
add
jo
sbb
insb
lea
dec
nop
shrl
call
inc
push
outsb
sbbb
cwtl
inc
jbe
jno
or
jp
mov
leave
std
jl
loope
jge
adc
repz
or
shrb
push
and
shl
daa
add
mov
gs
test
in
fdivrl
sbb
inc
adc
adc
jge
jl
bound
jo
je
fsubrp
adc
cmp
or
aam
in
mov
outsl
icebp
or
push
int3
mov
test
insb
lock
sbb
arpl
jb
cmp
push
push
scas
adc
fcompl
push
mov
adc
mov
sbb
adc
pop
addr16
or
mov
adc
pop
cs
add
cltd
inc
movl
xchg
in
push
push
xor
movl
or
push
and
push
and
fisubrl
into
shrl
xor
loope
push
insb
in
insb
test
sbb
cli
roll
xor
inc
and
popf
fidivs
cmp
push
or
jp
push
insb
sub
push
jbe
cmp
ret
lahf
rolb
mov
pop
mov
es
fucomp
lds
pop
sbbl
clc
pop
outsb
and
mov
in
fcmovne
mov
sbb
mov
pop
or
mov
add
jl
lahf
dec
into
add
sahf
fnstcw
mov
bound
adc
mov
in
push
scas
ja
adc
in
sbb
inc
sbb
fsubr
sbb
cwtl
je
sbb
arpl
sub
mov
js
adc
push
push
push
cwtl
xchg
sub
add
in
jp
or
popa
mov
decl
movsb
inc
adc
cmp
repnz
stos
lcall
negb
nop
adc
or
add
idivl
cmpb
into
push
lcall
push
loope
mov
jno
sahf
lgs
adc
clc
cmp
pop
lret
addr16
lods
and
iret
scas
shrb
push
cmpsl
push
mov
push
push
je
les
sbbb
jecxz
add
lea
push
rcrb
movsb
adc
pop
adc
inc
lods
and
add
mov
push
jecxz
mov
push
xorb
mov
orl
xchg
and
pop
in
pop
andl
and
ret
and
jge
adc
movsb
inc
adc
push
mov
xor
inc
repnz
je
adc
push
push
add
push
nop
xchg
xchg
rcrb
pusha
mov
and
xchg
jo
jns
xor
lods
adc
das
inc
and
imul
sub
push
in
loope
mov
add
fiadds
stc
sldt
stc
sbb
dec
test
jo
add
pop
push
pop
icebp
pop
in
xchg
push
and
sub
sbb
int
shll
inc
jb
movsl
scas
sub
cli
xchg
jl
dec
adc
subl
or
shr
xchg
sysret
push
push
cld
inc
mov
clc
out
xorb
ds
cmp
sbb
inc
sbb
jbe
pop
and
pusha
xchg
sub
imul
or
jo
dec
inc
aad
mov
in
cmp
popf
xchg
pop
lahf
pop
add
cs
addl
clc
je
mov
jmp
xor
popf
dec
xor
lods
int
xor
popf
push
sbb
loop
mov
or
insl
cwtl
xor
dec
mov
jg
movsl
in
imul
sub
push
mov
rorl
dec
dec
mov
push
outsl
sbb
mov
or
js
jo
jp
std
nop
cmp
inc
push
xor
adc
sub
pop
xor
pushf
pop
punpckhwd
pop
jl
outsb
or
pop
cmp
mov
aas
mov
fnstsw
sub
ret
or
jg
or
mov
inc
and
idivb
jo
jle
pop
cmp
sub
pop
mov
cwtl
cmp
je
jg
mov
mov
rorb
add
arpl
jbe
lcall
inc
mov
sbb
adc
into
mov
xor
jne
out
subl
daa
mov
orl
and
push
test
imul
fwait
movsl
mulb
lcall
gs
xor
mov
pop
mov
in
test
and
sbb
or
dec
lea
jns
or
push
lcall
data16
add
lret
testb
testb
rclb
sub
add
fisttpl
out
lock
or
or
enter
or
sti
stos
stc
pop
sub
sub
out
jl
mov
jns
or
divb
pop
rolb
sub
mov
test
call
call
sahf
lret
call
rcr
inc
dec
lcall
cmp
inc
fists
rcrb
orl
adc
js
sub
cmpl
mov
xchg
xor
push
xor
jno
outsb
mov
pop
jo
imul
or
repz
and
add
rcrb
adc
ss
jg
jbe
mov
test
sahf
out
in
inc
adc
push
sbb
adc
test
jl
fsts
decb
push
enter
inc
add
adc
repnz
add
sub
or
leave
leave
cmpl
clc
inc
sbb
pop
push
push
cs
pop
cmp
cmp
xchg
mov
pop
or
andb
in
adc
push
inc
and
and
cmp
lock
push
pop
or
dec
push
call
loop
pop
sarl
jp
gs
and
pop
or
inc
dec
adc
out
and
inc
jbe
add
pop
mov
adc
or
and
sbb
mov
push
data16
shl
cmp
insl
jnp
test
movsb
div
pop
mov
aad
js
pop
push
adcl
mov
bound
sbb
rorl
rcrb
xchg
and
icebp
adc
out
sbb
and
movsb
repnz
fs
lea
xor
jecxz
push
add
jge
pusha
repz
incl
or
sbb
pushf
xchg
sub
inc
sub
inc
pusha
sub
mov
mov
lds
cld
xchg
mov
insb
loop
stc
jge
jbe
fimull
inc
or
sbb
jb
dec
scas
mov
and
dec
or
pop
lahf
js
pop
dec
dec
fisubl
andb
sbb
in
lcall
jne
int3
pop
out
adc
leave
int3
cmp
jbe
clc
mov
insb
inc
lcall
jl
movl
mov
pop
mov
js
adc
push
or
mov
push
orb
pusha
add
cmp
mov
test
xor
mov
movq
push
js
dec
mov
and
xchg
fldl
mov
sub
sbb
js
cmpsb
dec
shll
js
pop
adc
dec
push
dec
mov
movsl
data16
lret
add
cmp
mov
int
sub
inc
dec
xor
jl
sbb
fcmovnbe
adc
cmp
andl
sub
mov
sarb
xchg
cmp
inc
push
repnz
mov
add
push
cmc
mov
scas
push
decl
repz
add
scas
jns
into
mov
test
and
mov
pop
out
add
push
xchg
mov
cmp
mov
fstpl
push
ja
add
cmpsb
xchg
add
add
and
push
pushf
inc
es
mov
aad
movsb
mov
lret
jb
fs
push
push
or
cmpl
sbb
push
and
insl
add
xor
xor
dec
cmpb
jge
mov
xchg
or
add
adcl
push
ret
fisttpl
lock
test
xchg
lea
imull
test
cmc
jl
or
sbb
push
sub
and
pusha
pop
push
mov
pop
js
pushf
test
mov
outsl
mov
in
jns
cltd
mov
add
lods
or
fs
and
sub
xchg
dec
and
xor
sub
dec
pop
pusha
mov
rep
and
insl
daa
arpl
push
orl
lock
xchg
popa
add
mov
dec
cmpsl
mov
inc
fdivrl
cmp
les
push
cmp
mov
cmp
add
pusha
push
daa
pop
gs
in
inc
push
repz
ret
repz
pop
hlt
setne
inc
ljmp
repz
sti
aas
push
push
add
jg
mov
jmp
mov
cmp
jne
push
push
push
push
push
imul
shl
dec
sub
ret
call
pop
outsb
add
push
insb
pop
rolb
in
push
pop
or
popa
pop
pop
repnz
scas
xor
enter
push
and
sub
adc
sub
mov
out
imul
mov
add
aas
popf
outsb
add
sete
jne
push
push
and
clc
rcll
xchg
lock
std
add
push
sbb
add
test
push
push
add
xor
and
jp
cmp
push
add
dec
ret
push
xchg
enter
stos
sbbl
sub
mov
mov
ret
pop
hlt
cwtl
jno
add
bound
add
addb
or
out
or
mov
push
push
je
xor
inc
test
inc
gs
sub
sbb
and
in
add
imul
fwait
adc
inc
movsb
push
mov
xchg
mov
lret
sbb
fwait
popa
add
das
mov
inc
adc
push
cltd
add
pop
mov
pop
inc
or
mov
xchg
xchg
inc
loope
je
adc
insl
sbb
mov
push
es
or
fiaddl
test
and
dec
in
fwait
call
test
in
ja
aad
insb
repnz
scas
daa
xchg
add
jo
imul
push
adc
push
aad
xchg
cmp
or
pop
into
mov
gs
xchg
jge
ljmp
sahf
mov
lods
fdivrl
mov
xor
add
clc
add
or
enter
mov
lahf
mov
mov
loopne
xor
pop
inc
dec
cli
loopne
ffree
stos
dec
test
imul
sbb
adc
cmp
jge
adc
shl
mov
mov
ret
xorb
rol
nop
sub
mov
stc
test
pusha
sbb
enter
sbb
notl
cmp
mov
push
mov
shll
ja
shlb
addb
push
popa
push
push
push
call
repz
xor
mov
test
vcvttsd2si
xor
insb
mov
push
fdivs
ljmp
jbe
sbb
fidivrl
pop
mov
add
lea
aas
push
inc
sub
addr16
rorb
out
test
pop
mov
cmpsl
clc
dec
in
add
ret
sahf
sub
sti
pop
cmp
pop
jmp
fistpl
daa
push
sbb
movl
aam
jmp
xchg
dec
pop
orb
lds
push
test
dec
je
ljmp
in
test
lret
out
mov
sbb
adc
sarl
xor
je
cmp
je
lcall
clc
cmp
add
jb
sub
pop
add
cwtl
shl
adc
mov
and
daa
sub
or
aam
add
add
std
mov
jno
jmp
cmp
dec
hlt
jge
mov
shl
out
inc
lahf
mov
add
mov
outsb
test
push
mov
or
cltd
or
clc
and
xchg
jmp
imul
ljmp
pusha
pop
test
lcall
test
je
test
jl
mov
cmp
jg
aaa
movsb
ss
add
in
pop
xor
push
mov
add
pop
pop
mov
movsl
mov
hlt
mov
cltd
mov
mov
or
lret
sub
mov
sub
mov
pop
aad
push
pop
movsl
addb
cmp
mov
pop
or
lock
ret
sub
push
nop
mov
inc
xlat
mov
xor
cmpb
push
sbb
cmp
scas
xchg
cmp
push
sbb
ret
mov
shrl
cmp
iret
adc
repz
fimull
nop
jne
ret
jecxz
clc
jbe
and
and
push
xchg
mov
lcall
xchg
jge
or
cli
cmp
push
mov
mov
mov
xor
aas
js
xchg
mov
fsubrs
and
mov
insb
sbb
dec
or
data16
orb
sbb
lret
ret
test
aam
in
or
aad
int
mov
pop
cltd
pop
push
ds
xlat
nop
cmp
rcll
push
fdivrs
push
pop
rolb
push
pop
adc
and
push
mov
jp
gs
sbb
jecxz
mov
xor
int3
lods
js
sarb
push
cli
or
lret
fnstcw
lcall
push
pop
mov
add
movsb
jb
lea
call
add
mov
dec
mov
aam
or
or
mov
in
sub
shlb
push
es
push
sbb
xor
pcmpeqw
dec
xor
mov
test
orl
inc
pop
push
inc
mov
stc
adc
or
mov
scas
push
cmp
outsb
push
shr
mov
mov
outsb
or
and
sbbl
mov
pop
adc
xchg
int
test
dec
test
push
pop
xchg
jbe
push
xchg
lock
push
daa
nop
cltd
cli
adc
icebp
mov
scas
test
mov
inc
lahf
ret
mov
cmp
mov
popa
add
or
sbb
pop
je
push
mov
sbb
stos
test
call
mov
or
loop
cmpsb
jb
dec
sub
sub
cmp
mov
add
in
push
push
popf
cmp
cmp
test
imul
add
cld
xchg
stc
sub
adc
jbe
sbb
mov
adc
mov
inc
les
xor
mov
rorb
dec
add
or
sub
loopne
jnp
sbb
xor
lahf
call
xor
outsb
or
mov
jmp
push
jl
adc
xchg
outsb
fadds
lret
push
sti
adc
popa
rorl
test
sbb
orb
std
in
rclb
xchg
and
into
je
cltd
jmp
xchg
dec
pop
lock
dec
fs
out
minps
add
adc
addb
sbb
cmp
add
sbb
hlt
push
inc
push
sub
fisttpl
cmpb
mov
into
add
jbe
inc
je
loop
div
inc
adc
jmp
mov
out
jl
mov
pop
call
out
cltd
aad
ret
dec
add
shlb
pop
mov
mov
adc
inc
dec
lock
jno
lcall
cmp
loop
jmp
pop
movsl
or
sbb
pusha
and
fucomi
fists
add
and
adc
sbb
es
cmp
mov
xchg
or
jle
sub
setle
pop
pop
loopne
sbb
lds
jb
add
test
push
lods
or
pop
arpl
xor
jmp
and
jmp
sub
stc
mov
popf
pusha
sbb
jne
and
movsb
sbb
push
sub
dec
add
sbb
or
sub
jne
mov
in
push
lods
out
je
xorb
pop
in
xchg
mov
push
push
and
jbe
pop
shr
mov
and
scas
or
pop
ja
sub
mov
ss
push
add
int3
pop
adc
repnz
mov
or
push
and
push
mov
sbb
sub
sub
and
adc
test
xor
lods
add
sub
push
scas
add
fidivs
outsl
ds
dec
stc
add
rorb
ret
and
add
test
test
lods
jp
xor
leave
in
and
xor
outsl
jmp
into
fistpll
add
sbb
rorb
scas
or
sub
jo
push
mov
cmc
pop
pop
pushf
cmp
loopne
push
dec
adc
loopne
movsb
xchg
pop
and
pop
add
loopne
add
popa
arpl
into
or
lock
pop
xchg
jl
add
xor
sub
pop
mov
lea
bound
cmp
lahf
aam
pop
pop
leave
sbb
loop
cmp
addr16
stos
push
loopne
jae
mov
daa
ficoms
lock
sarb
in
rolb
in
sub
mov
add
in
loop
ljmp
shrb
rcr
push
addl
or
lea
add
lods
test
fisubrs
or
push
push
add
and
lock
pop
mov
daa
hlt
popa
lret
pushf
mov
fcoml
adc
hlt
or
pusha
subl
lea
pop
jmp
cmp
psubw
add
sbbl
movsb
or
pop
sbb
push
mov
xchg
negb
xor
push
sbb
xor
inc
or
int3
mov
and
sbb
in
insb
push
sub
push
cwtl
push
and
lahf
movl
cmp
shrb
aam
dec
jmp
test
inc
add
push
and
ss
in
mov
jmp
mov
sub
adcl
pop
xor
push
push
cld
int
or
cld
fsubl
push
lock
test
mov
nop
addl
hlt
clc
pushl
add
push
mov
pop
add
xchg
lea
sbb
in
je
add
fiaddl
xor
cld
sub
mov
imul
jo
fimuls
imul
clc
or
outsb
test
call
loop
mov
pop
cmpsb
push
hlt
shr
jl
das
rol
rolb
push
sub
sub
add
iret
push
or
add
push
sarl
jne
or
mov
adc
je
or
push
rcrl
cmp
lods
cmpsb
xchg
inc
jo
ret
xor
jb
rolb
inc
sub
pop
sbb
jmp
push
mov
push
mov
sub
add
lock
sub
mov
subb
das
lcall
dec
ret
rcll
mov
mov
call
xor
pop
dec
add
and
xchg
lcall
mov
push
decl
add
sbb
and
sbb
mov
cmp
je
adc
lock
pusha
movzwl
clc
cmp
pop
jp
push
ror
and
hlt
pop
xchg
test
mov
mov
sbb
sub
push
mov
or
pop
and
dec
in
dec
call
push
in
and
aam
sbb
shrb
mov
in
mov
mov
ds
or
mov
mov
and
cmp
shll
push
cld
push
push
frstor
sub
arpl
cmp
sub
push
sbb
add
lock
mov
xor
sub
rcrb
es
mov
data16
popf
xchg
imul
adc
stos
pop
lods
repnz
xor
and
inc
dec
ret
sahf
shlb
push
clc
add
hlt
push
in
sbb
jbe
lea
sbb
push
mov
neg
push
add
push
fsubs
mov
pop
in
jl
test
je
sbb
mov
cmpsb
mull
test
ja
rcrb
movsl
push
jbe
lahf
push
push
xor
cmp
add
insb
and
je
fcmovbe
push
push
xchg
aad
lods
add
add
fiadds
inc
inc
inc
ss
mov
adc
roll
cmp
je
push
push
aas
and
push
xchg
test
repz
and
fnsave
cs
pop
push
inc
shrl
mov
pop
or
lods
inc
xor
jns
dec
push
enter
loopne
cmp
in
imul
cli
rorb
loop
sete
into
gs
cltd
push
xchg
cmp
dec
sbb
andb
push
and
imul
xor
cmpsb
cmp
int3
je
aam
push
pop
mov
ds
js
aad
cmp
pop
insb
pop
or
and
cmp
sub
inc
adc
xchg
clc
sub
adc
add
jb
pop
movsl
dec
shll
cmp
push
mov
mov
std
mov
aam
pop
lret
push
and
shl
jb,pn
js
lea
ret
out
repnz
cmp
je
cmp
je
cmp
jne
add
jo
cmp
mov
cmc
je
push
in
stos
add
cmpsb
mov
jmp
outsl
outsb
dec
lock
pop
mov
cmp
xor
adc
mov
pop
repz
xchg
push
clc
cld
jo
ljmp
mov
jmp
enter
mov
cmp
jne
xchg
mov
and
sbb
test
add
jae
outsl
shlb
sub
add
sub
loopne
push
imul
adc
cli
jb
fwait
pop
sbb
sub
ret
rorb
adc
push
cmp
cmc
outsl
sub
xor
cmp
ja
dec
sahf
jbe
mov
inc
inc
aaa
add
in
popa
push
ret
xchg
call
add
or
mov
sbb
mov
dec
mov
mov
push
inc
adc
cmp
push
repz
add
ret
sti
daa
ss
cmpl
in
xor
lea
cli
push
add
mov
cmp
gs
cmp
je
cmp
jne
mov
sbb
add
out
cmc
push
dec
inc
lock
mov
pop
dec
xor
or
jne
jmp
testb
lcall
jl
inc
sbb
cli
cmp
jbe
dec
test
pop
add
add
outsl
fs
dec
inc
jmp
inc
and
dec
scas
orb
xor
pop
mov
popa
sbb
cmp
or
clc
lock
xchg
cmp
je
mov
lea
add
add
lock
and
pop
in
cmp
inc
std
or
jge
pop
sahf
jne
cmp
testb
cmp
push
ret
jbe
adc
je
sub
test
or
ja
shrb
enter
aam
pop
cs
cmp
jne
push
ja
sbb
pop
xor
adc
sub
outsl
push
sbb
inc
sub
popa
loop
jne
cmp
xchg
mov
mov
fldcw
insl
int
mov
data16
or
rol
inc
sti
lahf
pop
shl
add
jmp
cwtl
aas
les
lods
push
cmp
inc
orl
or
jns
test
jne
xor
mov
test
mov
aas
push
mov
or
add
pop
jae
mov
jmp
dec
sbb
sub
xor
cld
jbe
test
sub
bound
cld
push
lahf
add
shrb
adc
add
sbb
stc
lret
cmp
jg
or
jge
xor
or
jle
es
sub
sub
movsl
cmc
jmp
jmp
cmp
jl
pop
jle
pusha
fisubs
inc
push
or
jb
loopne
repz
push
adc
aas
mov
je
test
jne
je
outsb
and
jb,pt
xchg
je
je
std
int
push
xor
add
add
inc
add
jmp
adc
rclb
sub
add
shlb
inc
push
push
mov
inc
and
cmp
out
inc
outsl
icebp
mov
dec
mov
push
mov
inc
push
hlt
loop
jp
inc
es
mov
sar
inc
xchg
movsl
scas
adc
std
insb
add
push
movl
sub
mov
mov
xor
push
mov
push
and
mov
int3
lret
addl
or
clc
mov
jae
out
pop
cmp
add
mov
xchg
jmp
lods
push
sbb
mov
pop
sub
pop
mov
inc
mov
movb
cmp
fwait
push
inc
lea
mov
movsb
mov
pop
jb
sbbl
decb
cmpl
fs
loopne
inc
das
mov
sbb
lea
pop
cwtl
xor
xor
aam
lock
bnd
stos
dec
daa
mov
add
jl
sbbl
push
push
outsb
mov
shll
jmp
insl
and
cmp
loope
aas
or
xchg
adc
sbb
fstps
sti
mov
clc
sahf
add
or
pop
mov
pop
daa
dec
add
repnz
mov
arpl
or
add
movsb
ss
int3
push
call
inc
mov
or
aam
xor
pop
fwait
inc
adcl
mov
test
clc
add
inc
inc
and
scas
jl
add
cmp
add
mov
cmpsl
data16
mov
pusha
add
add
sahf
inc
xor
lock
popa
mov
sub
pop
add
inc
xchg
xchg
inc
lods
pop
or
jo
outsl
adcb
ljmp
xor
icebp
sub
pop
and
jb
cs
sbb
mov
lds
ss
daa
add
inc
fisttpl
mov
xchg
xor
inc
mov
pushl
nop
pop
insb
insl
repnz
mov
into
icebp
andb
mov
jne
fcoml
enter
jmp
xchg
lret
mov
lahf
jne
addl
addb
xchg
les
xchg
pop
dec
mov
or
jne
iret
push
es
xor
leave
mov
or
or
xchg
or
xchg
add
nop
inc
movsb
stc
test
and
mov
sub
xchg
negb
sub
stos
rorb
cmpsb
imul
pop
push
cli
push
sbb
cld
loope
mov
push
jecxz
xor
loop
push
in
or
pusha
mov
es
ljmp
sub
lock
out
and
jne
adc
push
push
fdivl
jne
sbb
subb
jnp
das
movl
cld
sbb
das
bound
or
sbb
sti
dec
adc
sarb
push
pop
mov
add
pop
inc
inc
push
dec
in
mov
mov
jb
fcomps
movsb
fbld
sbb
je
lock
push
aas
cmpsb
cmp
inc
mov
inc
inc
inc
mov
mov
loope
jge
pop
and
aaa
sbb
mov
inc
jne
fimuls
cmp
shl
mov
lock
lcall
shr
insb
in
fsubr
cmp
in
test
push
push
sbbl
shrl
call
sbb
xor
jbe
jp
and
aaa
subl
inc
pushl
jmp
pandn
lcall
cmp
je
lea
cmpb
cmp
jne
les
push
jne
push
loopne
pop
cmp
push
icebp
adc
push
inc
incl
fldcw
mov
jmp
mov
push
jmp
test
movsb
push
adc
in
out
jb
sub
lret
loope
cmp
addl
jo
and
jae
inc
xor
aam
add
and
test
add
enter
mov
jbe
loop
ret
jns
ret
or
lahf
push
sbb
cmp
loope
xor
ret
shll
cmp
pop
loopne
orl
push
cmp
or
adc
mov
movsl
jne
rorb
leave
test
mov
mov
rclb
mov
pop
cs
cmpsb
or
xor
dec
ljmp
fmul
dec
xor
mov
add
add
push
push
xor
fsts
push
sbb
lock
pop
sub
push
push
fsts
xor
push
jo
jmp
lret
mov
adc
cmp
xor
in
add
in
jbe
cmp
fdiv
xor
or
push
or
push
fadds
movsl
push
sub
xor
in
mov
cmp
cmp
adc
push
mov
sbb
pop
ret
jmp
outsl
jo
mov
fs
mov
pusha
mov
in
add
in
add
mov
add
out
pop
sbb
adc
ds
nop
push
add
add
aam
or
js
cmpsl
sbb
mov
bound
sub
push
in
cmpsb
sub
shll
movsb
push
push
aaa
nop
aas
cmp
popf
mov
cmp
mov
push
pop
jmp
jle
test
or
call
or
mov
xor
in
dec
jmp
rorb
sbb
or
insb
mov
inc
dec
movl
arpl
push
or
js
or
mov
push
mov
rolb
inc
xor
ret
imul
mov
add
testb
or
or
rcl
or
popa
pop
lcall
aas
js
movsb
or
lods
aas
or
dec
xor
xor
push
imul
in
jne
cld
aam
dec
add
xor
shll
cmpb
mov
add
push
lcall
hlt
cmp
and
aad
dec
rclb
jnp
fs
ficompl
cmpsb
aas
jl
adc
fucomi
cmc
inc
shl
pushl
add
mov
lea
iret
cli
inc
jo
mov
faddl
sbb
cmp
jb
mov
push
arpl
cmp
clc
lock
lea
and
mov
daa
insl
cmp
mov
jl
and
sbb
push
xchg
rclb
sbb
inc
inc
add
fsub
in
in
pop
xchg
jo
mov
jb
jo
out
sbb
out
xchg
mov
push
orb
pop
aaa
js
jle
push
xchg
lret
sub
xor
or
sbb
push
adc
rcl
ret
sbb
idiv
push
adc
lods
adc
push
daa
shrb
or
pop
fcmovb
enter
or
bound
mov
push
out
mov
int3
loopne
out
sbb
fstl
sbb
in
nop
lahf
jg
add
loope
jo
cmp
pusha
adc
push
push
add
cmpsb
sub
pop
les
cmp
gs
sbb
fimull
add
insb
rorb
adc
mov
in
xorl
jns
jl
cld
or
push
in
je
add
inc
mov
popa
adc
imul
push
loopne
mov
sub
jae
jo
addr16
mov
and
sbb
shrl
or
loop
fisubs
js
inc
jmp
push
add
push
pop
mov
mov
mov
add
fimull
addb
dec
xor
push
imul
push
xor
cmp
cmpsb
cmp
mov
mov
popf
add
lock
xorb
cld
clc
pop
xchg
cmp
add
std
test
sbb
psraw
add
cmp
cmp
push
std
jnp
mov
outsb
add
sbb
cmp
and
push
add
mov
adc
push
adc
jmp
or
xor
dec
rorb
xchg
add
fmull
or
or
cli
and
popa
pushf
xor
lret
stos
test
add
inc
hlt
lcall
hlt
movsl
cmp
push
xchg
pop
shrb
inc
rclb
cmp
pop
or
mov
inc
inc
or
out
andl
dec
sbb
jecxz
dec
or
lods
insb
cmp
jecxz
add
mov
push
push
push
sahf
js
into
mov
sub
lea
mov
aaa
cmpsb
mov
out
or
mov
iret
xchg
fcoms
lods
testl
les
jecxz
jne
sti
and
adc
inc
inc
add
push
aaa
hlt
fnstcw
add
bound
adc
aaa
andl
push
xchg
or
pop
push
pop
test
sbb
scas
int3
pop
mov
pop
pop
sub
orl
jnp
xchg
xchg
mov
cmpsl
imul
hlt
out
inc
clc
xchg
adc
lret
pop
jno
push
mov
pop
mov
cmp
roll
pop
or
xchg
rcrl
xor
xchg
inc
testl
cltd
add
pop
or
cmp
add
adc
pop
and
add
mov
outsb
movsl
adc
cmp
add
add
push
and
fstl
repz
pop
dec
inc
push
insl
mov
xchg
inc
pop
inc
push
or
xor
or
push
mov
call
mov
add
inc
xchg
push
xchg
mov
adc
pop
pop
mov
or
inc
arpl
test
stos
xchg
scas
pop
add
and
jge
or
push
inc
jle
fwait
mov
fdivp
es
in
push
pop
pop
cmp
inc
pop
aad
cs
sub
jecxz
rol
clc
insb
call
cmp
or
mov
repnz
jmp
and
or
dec
rcr
addr16
inc
adc
js
push
inc
cwtl
scas
adc
js
xor
les
out
adc
xchg
sub
or
aaa
lods
sti
cmc
dec
test
iret
mov
pop
neg
int
xchg
sbb
insl
sbb
out
push
dec
sub
dec
mov
inc
cmp
loope
std
or
and
mov
xor
push
addl
scas
jo
jne
and
jecxz
dec
popa
pusha
sub
push
mov
and
jmp
xchg
lods
add
repnz
cld
pop
fnstsw
je
das
int
pop
insl
push
inc
cmp
sub
pop
pop
inc
je
ret
jo
das
out
adc
insl
jg
push
lcall
dec
cmpsb
xor
jo
in
inc
scas
jle
pop
pop
sbbl
popf
sub
stos
xchg
push
repnz
insb
shlb
popa
cltd
fcmovu
pop
adc
pop
outsl
adc
adc
and
fdivrs
imul
inc
aam
js
mov
test
fnsave
adc
jmp
loop
fisubl
sti
fidivrl
push
add
nop
push
icebp
inc
rorb
dec
test
popf
and
icebp
pop
leave
sub
cmp
jne
fistl
jge
mov
add
incb
cmc
pop
dec
xchg
xchg
jecxz
or
insl
fstl
jnp
mov
imul
dec
and
mov
pop
sub
xlat
push
and
inc
sbb
add
aaa
inc
or
test
repz
scas
add
mov
ds
outsl
ja
orb
lods
addr16
sbb
jmp
and
rorb
iret
sbb
dec
call
ret
jb
roll
and
adc
cmp
mov
sub
fisttpl
jmp
popa
rcrl
sahf
push
stc
jo
jl
pop
test
sbb
test
out
add
dec
pusha
mov
xchg
xor
mov
test
fwait
sbb
xor
shll
pop
movsb
addb
dec
shll
testb
sub
pop
pop
mov
int
movb
fcomps
xchg
or
push
and
jbe
into
in
xchg
sub
mov
xor
daa
sbb
push
sbb
inc
xchg
leave
dec
mov
push
call
xor
and
pop
push
dec
or
rcll
rorb
xchg
adc
decl
aam
push
roll
mov
adc
dec
and
jo
mov
xchg
pop
iret
xor
sbb
rorb
lcall
xchg
rorb
push
mov
pushf
rolb
sub
and
mov
daa
jne
sarb
pop
mov
cli
xor
popf
xchg
sub
cwtl
or
and
xchg
icebp
into
push
mov
mov
rsqrtps
pop
and
pusha
imul
pop
xlat
add
daa
jne
sub
pop
xor
adc
in
pop
push
add
sbb
push
stc
jl
push
sub
pop
xor
sub
adc
stos
xchg
mov
add
cmpsl
cmp
mov
test
add
adc
jb
stc
sub
pop
xor
or
test
jno
push
and
sub
sbb
inc
xor
adc
add
cmp
add
xor
inc
mov
sub
push
shrb
add
test
insb
jne
out
dec
aas
in
mov
pop
xchg
push
add
js
outsb
test
push
sbb
movsb
and
sub
jne
or
push
js
clc
popa
imul
dec
cmp
mov
cmp
int
and
inc
and
ror
subl
leave
subb
xchg
adc
cltd
loope
mov
pop
xorb
out
xor
xor
sub
cmp
lock
cmp
jne
mov
jmp
loopne
xor
lods
lock
sbb
popf
pusha
mov
pushf
out
adcb
xchg
leave
and
dec
xor
out
add
adcb
cmp
xor
cs
bound
sub
je
jp
mov
pop
dec
aaa
pop
or
or
clc
sbb
and
daa
pop
aas
push
mov
mov
or
or
push
push
movsl
data16
daa
pushf
mov
push
sub
insl
int
fistl
sub
pop
hlt
jne
push
lea
pop
and
scas
jl
or
pop
pop
add
pop
addr16
cli
aaa
movsb
aam
ret
dec
mov
or
lods
dec
xchg
je
inc
sahf
xchg
cmp
adc
push
cmp
popf
nop
xchg
dec
xchg
xor
adc
pop
dec
enter
add
jg
push
mov
sbb
es
and
les
or
mov
cmpsb
in
js
fsubrp
jge
fwait
cld
jbe
outsl
and
inc
inc
push
pop
dec
jecxz
inc
dec
ss
daa
in
sub
push
dec
jbe
mov
pushf
xchg
xchg
in
loope
aam
xor
add
leave
pop
add
nop
pop
inc
test
and
xor
les
test
addr16
in
loopne
adcb
xor
dec
or
repnz
add
mov
mov
aad
jge
mov
fs
out
repnz
sub
inc
lret
ss
xor
inc
mov
bswap
and
lock
xchg
sub
fiaddl
sbb
mov
sub
icebp
popa
fwait
pop
push
push
inc
or
mov
jp
or
or
xchg
inc
insb
or
mov
loopne
mov
or
add
dec
sbb
and
aaa
sub
push
push
or
testl
or
xchg
imul
adc
fcomps
insb
jle
je
push
loopne
dec
push
push
pcmpeqw
push
xchg
str
aas
or
gs
sub
push
and
mov
push
and
inc
int
pop
ja
sbb
push
xchg
popf
push
int3
mov
loopne
cltd
add
xchg
push
gs
mov
test
cmc
sub
popf
add
mov
push
outsb
ds
cs
subb
pop
mov
push
inc
fadds
andb
mov
dec
stos
push
leave
cmpsb
xchg
inc
push
fsubrl
or
xchg
mov
mov
lock
pop
lar
cmp
pop
push
cmpb
ljmp
inc
and
mov
lret
out
daa
cs
addb
call
jno
or
inc
push
xorb
mov
add
ret
mov
int
movsb
mov
sti
mov
lock
rorl
mov
sub
rclb
shll
lods
mov
insb
sbb
cmc
lret
pop
ds
idiv
dec
xor
adc
out
pusha
or
push
jle
mov
push
movsl
cmp
sahf
jo
push
pop
int3
push
mov
jp
lahf
jl
add
sbb
and
inc
popf
push
ror
shlb
mov
cmp
jmp
fidivrl
xor
lea
adc
jg
inc
insb
out
add
ret
mov
push
xor
testb
push
call
add
xlat
and
xchg
insb
push
and
mov
icebp
sbb
jmp
inc
pushf
sbb
adc
and
les
adc
xchg
mov
imul
jnp
lea
push
sub
or
fldcw
pushf
pushf
add
fs
das
add
call
sbb
xlat
sub
push
fstpl
insl
rclb
pushf
rclb
incl
call
jl
dec
inc
jmp
adc
xlat
movb
add
or
mov
int
lcall
jns
cmp
push
sub
ret
push
push
addr16
jne
ret
test
push
pop
jle
adc
xor
mov
mov
mov
je
mov
push
inc
mov
ficomps
dec
cmpb
mov
dec
jp
or
pop
pushf
popf
jp
push
add
mov
adc
add
jmp
movb
pop
dec
sub
mov
movsb
cmc
divps
dec
testb
add
adc
push
inc
push
lret
aam
sub
pop
add
xchg
or
test
mov
rorl
sbb
arpl
pop
ret
xlat
test
push
push
mov
out
or
fadds
out
mov
and
cmp
adc
inc
mov
ljmp
movsb
sub
jmp
movl
xchg
push
push
mov
loopne
inc
dec
dec
mov
adc
in
jle
and
jb
cmp
inc
stos
decl
pop
cmp
jne
push
or
test
xchg
push
push
cmpsl
mov
pop
insb
mov
int
or
adc
jle
mov
adc
cld
mov
lock
aaa
xor
ss
cmp
je
nop
lock
movb
xor
xchg
push
push
push
and
pusha
mov
xchg
mov
push
sahf
push
cmp
xchg
leave
and
xor
inc
jge
adc
dec
out
sbb
mov
mov
repz
add
outsb
or
mov
or
test
sub
add
fs
sbb
jl
adc
in
dec
in
imul
pop
lret
mov
pop
repnz
mov
add
xchg
movl
fwait
mov
xchg
add
enter
xor
std
cmp
jbe
mov
sbb
cwtl
xor
add
push
je
daa
loope
jns
insl
mov
jge
inc
sub
push
sbb
adc
mov
adc
mov
adc
rorb
and
sub
rclb
sbb
loopne
and
mov
aas
stc
xchg
jg
sahf
mov
test
inc
push
scas
cmpl
mov
pushf
call
push
mov
xchg
lret
adc
ret
jle
mov
ret
xchg
test
jb
loopne
cmp
pusha
movsl
cs
fadds
cmpsb
das
sub
push
sbb
adc
ss
bound
sbb
add
je
in
inc
scas
push
xlat
fistps
or
scas
imul
pop
add
insb
mov
sahf
jnp
add
ficompl
daa
inc
icebp
mov
push
loop
ds
aam
mov
icebp
push
sub
and
and
stc
jge
push
jnp
and
filds
add
mov
or
cwtl
sbb
sbb
stos
push
cmp
sbb
pusha
outsb
mov
mov
jl
hlt
adcb
loopne
dec
test
xchg
test
mov
pop
add
mov
nop
jp
cmp
lock
dec
stos
mov
jbe
xchg
loope
mov
jb
pushl
fldl2e
mov
pop
xor
fbld
flds
push
pop
sti
imul
and
sbb
sbb
sbb
push
adc
repnz
cmpsb
mov
mov
sbb
sti
or
dec
or
fwait
insl
out
inc
popa
dec
sbbl
adc
inc
inc
xchg
sbb
mov
jg
sub
xchg
push
sbb
add
ficoms
pop
ret
mov
aas
mov
lock
pop
cs
mov
jecxz
stc
cld
push
pop
dec
adc
icebp
cmpsl
cli
inc
lea
lea
jno
mov
loope
movsb
mov
inc
fsubl
add
or
shrl
mov
or
rolb
and
pop
or
pop
test
flds
pop
push
stc
cmpsb
push
mov
xor
adc
aam
pop
loopne
jecxz
or
jmp
out
test
xchg
aam
cld
cmp
test
fcoms
push
sub
push
popa
jp
mov
xchg
sbbw
outsl
push
push
sbb
mov
and
and
dec
mov
fcomps
movsl
outsl
loope
and
lret
push
dec
inc
shl
repz
push
int3
mov
xchg
pop
mov
pop
cmp
jne
imul
mov
xor
pop
arpl
mov
and
xorl
pop
imul
pop
jo
shlb
xor
aad
pop
js
dec
dec
and
mov
cwtl
pop
and
mov
fadd
or
subl
mov
lods
scas
sub
or
xor
push
nop
mov
lods
xor
or
cmp
jne
and
cmp
loope
inc
das
jo
aam
add
faddl
dec
aas
push
and
adc
inc
mov
popa
or
fsubs
sbb
adc
inc
mov
insb
and
jmp
or
fs
mov
inc
sahf
movsb
popa
mov
xor
xchg
pushf
and
dec
mov
stc
in
fs
fnstsw
push
push
push
mov
or
cli
mov
jno
mov
mov
jg
cmp
cmp
cld
add
jg
jle
add
ja
testb
pop
or
stos
mov
pop
mov
sbb
push
je
or
es
add
inc
popa
or
orb
js
dec
repnz
test
cs
cli
lds
xor
or
gs
mov
mov
dec
jmp
pop
lock
pop
pop
push
in
add
inc
fstps
jl
pop
pop
push
or
fistpll
test
mov
sbb
adc
scas
leave
pop
pop
xor
dec
and
data16
push
xchg
xchg
lret
je
test
std
sbb
mov
jnp
add
adc
sbbl
mov
adc
add
mov
ds
push
sahf
sub
push
or
add
push
fadds
mull
push
lds
aas
sarl
mov
sub
call
pushf
mov
les
jg
out
pop
jo
mov
pop
push
mov
push
xchg
insl
mov
sbb
ljmp
shlb
add
pop
and
push
push
sub
and
or
dec
mov
fsin
inc
pop
pop
mov
bound
fldenv
testb
pop
pop
ds
sub
clc
rolb
les
incl
jmp
adc
je,pt
ret
pop
cld
cmp
jbe
push
xor
je
sti
mov
outsb
cmp
int3
push
push
dec
inc
cmp
fildl
stos
jg
or
mov
data16
push
dec
or
jl
scas
outsl
pop
add
mov
xor
insb
pushl
lock
dec
and
push
fiadds
and
jne
ljmp
mov
jnp
inc
cwtl
push
mov
push
dec
pusha
adc
jle
popa
fwait
jo
add
adc
cmp
jae
adc
mov
hlt
cs
scas
mov
mov
and
adc
mov
cmpsb
cmp
lret
mov
adc
mov
mov
push
mov
and
or
jmp
hlt
push
sbb
push
cmpb
pop
mov
addl
das
mov
push
and
lock
sti
arpl
sub
push
sbb
ds
sub
mov
sbb
jp,pt
scas
in
inc
les
add
adc
aam
adc
loope
mov
mov
movsl
rorb
enter
lock
in
incl
fbstp
fisttps
jno
les
add
push
jl
mov
test
lods
sti
mov
pop
inc
sbb
adc
fwait
scas
sti
mov
and
jmp
test
inc
mov
jmp
aaa
lret
mov
call
cs
scas
mov
pop
out
adc
enter
inc
add
int3
outsb
or
lea
je
cltd
adc
add
mov
stos
inc
mov
push
stos
xchg
hlt
add
adc
hlt
adc
xchg
inc
mov
push
pop
cmp
adc
add
dec
in
xor
sub
pop
cmp
sbb
stos
test
lcall
push
mov
cmp
pop
dec
xchg
jle
call
cmp
cmp
dec
mov
fistpll
dec
stos
push
dec
lea
mov
push
fisttps
in
add
stc
cwtl
cmp
pushf
push
cmc
lock
cmp
and
fsubs
lsl
xchg
js
push
loopne
addl
daa
or
lahf
adc
pushl
mov
sar
xlat
jmp
xor
add
add
rcrl
inc
mov
rorb
sbb
jle
xor
lock
dec
inc
cmp
in
jecxz
mov
jnp
mov
and
cmp
scas
add
movsl
das
ljmp
fmuls
ss
jne
mov
xchg
xor
or
xlat
dec
xor
xchg
cmp
testb
in
mov
das
cmc
sti
fldcw
and
add
inc
pop
out
movsb
rcl
stos
nop
xchg
adc
push
aaa
add
shl
ja
inc
cmp
pop
cmp
je
mov
sub
sub
mov
mov
les
jb
cmp
pop
or
or
or
js
fs
jmp
jl
jmp
ret
cmp
addr16
add
and
and
daa
ror
xchg
add
fadds
cli
fildl
lret
mov
testb
lods
mov
leave
adc
jbe
inc
cmp
out
dec
add
testb
or
push
and
outsl
jl
sub
mov
jle
xor
jne
add
in
hlt
lods
mov
sub
repnz
jmp
cmp
inc
scas
pop
or
xor
xchg
xor
mov
lea
sub
lcall
sub
cmp
icebp
call
jmp
adc
shr
fwait
std
cmp
jae
lea
jmp
cmpl
inc
cmp
jbe
mov
in
mov
je
mov
clc
sub
lock
stos
mov
sub
in
inc
movsb
mov
mov
or
lds
add
mov
ds
push
js
jge
scas
out
hlt
dec
add
inc
mov
xchg
inc
nop
int
call
pop
push
push
push
sub
and
xor
mov
mov
add
push
ret
inc
outsl
or
mov
push
jl
push
push
ret
loope
jae
rcl
cs
add
sub
insl
mov
faddl
xor
lock
in
mov
jb
loopne
sbb
ss
or
fcomps
mov
les
inc
mov
jnp
xor
inc
nop
test
sub
push
and
add
mov
sbb
lock
xchg
les
or
mov
pop
inc
hlt
loope
je
aad
sub
fwait
mov
cmp
push
popf
pop
jmp
mov
push
adc
loope
pop
loopne
aaa
std
add
push
push
je
out
pop
lock
lea
enter
mov
xor
push
adc
mov
pop
loopne
jae
push
jne
or
xchg
pop
jle
test
or
in
mov
mov
push
or
adc
cmp
fwait
pusha
fmuls
scas
hlt
sub
fwait
fwait
or
push
cmp
cli
in
or
rorl
cmp
lods
cld
or
adc
push
and
dec
nop
mov
xchg
pop
xchg
pop
jb
imul
add
inc
lcall
rcrl
mov
movsb
imul
push
push
call
and
jne
or
movsb
inc
daa
dec
jb
mov
xor
scas
icebp
adc
push
push
ret
or
or
and
sbb
adc
or
aam
sub
clc
es
pop
rorb
shlb
xchg
and
and
cmp
es
in
mov
inc
lret
or
testb
jnp
scas
mov
jb
je
mov
push
popl
es
cmp
jbe
sub
jns
fwait
cmp
clc
jne
mov
push
test
cmp
or
sub
lea
out
add
lock
stos
es
push
bound
out
dec
inc
addl
pop
push
imul
jb
add
and
inc
pop
mov
xor
dec
pusha
push
sbb
push
cmp
jae
in
rclb
ret
lret
flds
jne
push
js
fistl
loopne
adc
loopne
fnstenv
mov
subl
push
in
int
sub
add
or
add
in
mov
xlat
cld
clc
pushl
jnp
jmp
lea
mov
cltd
loope
xchg
or
notl
into
orl
data16
or
add
rol
xchg
loopne
neg
pop
add
cmp
push
mov
jecxz
adc
iret
je
jo
mov
xchg
or
inc
enter
push
enter
mov
mov
bound
add
adc
inc
adc
scas
adc
sbb
rolb
sbb
fldenv
aad
cmc
in
fwait
cld
lea
and
cmp
fldt
fdivs
leave
add
sbb
add
mov
mov
jne
cmp
add
push
cmp
adc
ja
sahf
aad
cmpsl
jbe
push
xchg
cmp
inc
dec
mov
cld
mov
lea
lret
or
insl
fstpt
mov
jne
sub
das
push
jmp
pusha
ret
ret
or
add
rorl
fwait
mov
das
push
insb
xor
cmp
sub
mov
cmc
cs
mov
lea
mov
data16
push
loopne
loopne
push
fucomip
lods
push
cmpsl
xchg
sahf
mov
lahf
sub
jmp
and
js
cltd
bound
les
loopne
and
loope
leave
enter
dec
push
inc
adc
xor
push
movzbl
aaa
mov
and
or
push
es
xchg
jge
stos
mov
in
je
xchg
lock
ret
and
jle
mov
push
pop
test
in
push
or
mov
sub
loop
nop
rorl
jp
mov
or
push
scas
pop
push
ja
test
adc
inc
gs
mov
test
mov
mov
enter
das
fisubrs
xor
xor
popa
cmpsb
push
inc
es
fsubrl
insb
jns
lea
mov
mov
pop
xchg
mov
iret
mov
stos
jmp
push
xchg
add
lret
jge
mov
xchg
jo
jle
scas
push
or
in
and
or
sbb
jne
cmp
add
cmpsl
inc
sub
mov
fidivs
pop
js
pop
sbb
adc
call
mov
jae
or
cs
shll
fwait
pop
dec
roll
imul
std
mov
push
xchg
ss
pop
or
pop
sbb
addl
jno
mov
addb
mov
pop
jmp
jge
hlt
movsl
add
insb
adc
push
andb
push
cmp
icebp
fst
inc
cmp
test
sarl
cmpb
cmpsl
aad
je
test
adc
shl
int
cmpl
enter
jmp
mov
add
insl
mov
das
in
cmc
xlat
jo
jmp
enter
popa
scas
loope
inc
mov
out
es
mov
pop
jno
jmp
mov
sbb
test
push
movsl
push
subb
cmp
lock
push
sbbb
cmp
jmp
push
inc
adc
imul
xchg
cld
xchg
xchg
and
push
inc
shrl
mov
fstpl
xchg
or
mov
jb
addr16
je
pop
jnp
xor
xchg
pusha
cmp
mov
push
mov
enter
lea
jle,pn
mov
insl
cmpb
out
jb
push
push
or
add
mov
sarb
cli
push
mov
hlt
inc
cwtl
lock
jne
pop
xchg
js
jo
inc
stos
popf
aam
ljmp
pop
sub
movsl
sti
aam
rol
repz
push
adc
and
cmp
mov
mov
mov
ja
sahf
mov
adcb
or
mov
addr16
add
jb
jns
add
adc
repz
pop
mov
push
mov
mov
jne
dec
mov
push
dec
and
lcall
add
xchg
xor
or
cmpsl
jp
imul
daa
xor
nop
out
pop
add
add
mov
hlt
sbb
sbb
sar
mov
add
movsb
fcoms
mov
jge
and
dec
jbe
inc
cmpsl
cmpsl
push
add
sbb
gs
sub
shl
cmp
adc
jne
in
in
jl
jecxz
sahf
sarl
jmp
clc
mov
sbb
and
je
mov
mov
rcrb
inc
jl
mull
bound
or
mov
clc
pusha
adc
jbe
xor
jno
pusha
rorl
repnz
mov
add
sbb
icebp
or
pop
add
repz
sbb
or
lcall
je
sti
dec
cmp
cmp
push
or
test
xorl
xor
lea
iret
out
mov
movl
sbb
popf
loopne
pop
scas
adc
pcmpeqw
dec
faddl
pushl
cmp
xchg
in
sbb
out
cmp
mov
inc
pusha
and
bound
loope
imul
cmpsb
xor
xchg
and
and
xchg
mov
aaa
cmp
mov
sbb
xchg
jbe
sub
in
test
adc
xor
test
inc
adc
popf
xor
push
testb
test
faddp
push
and
ret
cmpsl
jge
mov
sar
add
lret
jb
sbb
addr16
int3
mov
dec
add
fisubrs
sbb
das
das
mov
sti
dec
loopne
push
inc
jmp
mov
roll
add
movsl
or
clc
xor
mov
xor
sub
rolb
ja
push
pop
ds
pusha
addr16
adc
push
lods
outsb
pop
lea
lods
mov
enter
das
push
cli
jae
jge
jbe
mov
shrb
shrl
push
out
xchg
scas
cs
cmpsb
and
imul
sbb
sbb
xchg
rolb
mov
jecxz
cmpsl
mov
mov
out
movb
cmp
jae
sub
loopne
movsb
xor
push
cs
rcrw
inc
sub
xor
add
in
adc
xchg
shlb
fistpl
cmc
push
inc
in
or
cmp
fstpt
add
dec
dec
movsl
incb
mov
xor
pop
fimull
or
sti
xbegin
jmp
ljmp
cmp
adc
push
add
xchg
jle
sub
orl
jmp
shrl
int3
add
fmull
mov
jg
addb
xchg
cld
jb,pn
mov
mov
scas
inc
hlt
pop
adc
addl
sub
cmp
ljmp
add
xor
out
lea
sbb
or
push
test
cmp
adc
xchg
mov
imul
stos
and
mov
push
test
lahf
adc
and
adc
xchg
add
mov
or
andl
scas
lea
or
or
mov
push
add
adcb
sub
cld
cwtl
and
pushf
xchg
sbb
dec
cmp
sub
mov
stos
fldpi
add
into
out
pop
rorb
ja
int
add
lret
or
loop
add
push
xchg
push
adc
push
cld
mov
test
jp
fcoml
mov
and
mov
mov
mov
adc
push
out
push
push
mov
aas
bnd
mov
mov
jne
cmpb
ret
push
jae
lea
push
sub
add
dec
cmp
mov
dec
mov
stos
xor
pusha
dec
loop
push
movsb
outsl
dec
enter
or
or
mov
jmp
inc
push
mov
imul
test
add
rolb
pop
aad
fnstenv
inc
jmp
push
or
mov
mov
and
ret
push
mov
movb
push
sub
movb
ret
mov
xchg
outsb
push
add
and
sbb
jne
or
inc
sub
dec
clc
and
mov
lret
cmp
or
jne
stos
lock
or
mov
test
aam
mov
jne
lods
xchg
cmp
inc
loopne
adc
es
ja
in
es
add
mov
addb
cmp
sub
pop
mov
imul
pop
pop
lea
clc
leave
pop
push
pop
mov
inc
aaa
and
and
add
mov
mov
push
and
or
test
and
push
test
mov
jbe
dec
lea
jo
add
and
rcr
hlt
jb
adc
ja
cmpb
push
push
or
inc
add
cmpsb
or
xor
sbb
sahf
adcb
xchg
fisubl
lret
inc
incb
rcll
cli
xor
data16
scas
cmp
sub
push
inc
or
add
mov
jbe
sub
aam
sti
testl
mov
jmp
mov
fs
outsb
adc
shlb
lea
cli
ja
cmpb
or
out
ret
push
xor
inc
pop
imul
dec
lcall
ficompl
dec
ds
inc
pop
sub
mov
push
mov
mov
push
xchg
push
cmpsb
adc
into
lret
shrb
push
mov
sbb
popl
pop
in
inc
push
test
jne
cmp
jne
stos
or
sub
xor
add
jns
jns
sub
pop
enter
add
shr
mov
aad
mov
jecxz
xchg
cltd
mov
lods
mov
pop
sub
cmp
push
ja
lea
insl
imul
stos
xchg
ret
pop
call
jmp
rol
loop
dec
cmp
lea
jl
mov
mov
mov
jne
mov
icebp
mov
js
dec
lods
cld
insb
test
pop
jmp
sahf
loopne
inc
mov
dec
mov
and
fmull
out
daa
mov
adc
addl
mov
mov
dec
or
xor
sub
inc
sbb
push
add
shl
in
cmp
cld
or
pop
cmp
push
mov
inc
cmpsl
sub
push
or
or
sub
mov
or
and
insl
or
pushf
pop
mov
pop
mov
inc
fwait
pop
movsl
mov
xor
cmpb
cld
push
mov
pop
imul
mov
dec
enter
les
stos
lea
pop
jns
adc
add
mov
addr16
in
xor
jmp
pop
jo
in
mov
lcall
mov
in
call
lock
movsl
add
or
cmp
clc
add
inc
lock
add
pop
xchg
enter
adc
or
push
add
lahf
aad
sbb
pop
int3
adc
imul
rcrb
fcompl
rcl
ret
push
jmp
loopne
jmp
mov
adc
aas
xor
pop
hlt
mov
push
push
cmpb
jne
inc
lahf
xor
add
or
push
jo
aad
mov
adc
js
jne
and
adc
and
enter
je
and
or
and
push
inc
sbb
pop
push
cld
dec
cmpsb
adcb
hlt
jle
or
mov
arpl
jp
push
inc
pop
and
jns
pusha
orl
add
or
jo
push
mov
fidivs
pop
cmp
add
in
cmp
in
adc
sub
dec
sub
jmp
mov
movsl
fadds
add
test
and
into
push
adcb
arpl
lods
mov
into
and
movsb
add
pop
lcall
push
or
ja
inc
mov
and
lock
push
ror
call
int3
cmp
dec
adc
scas
pop
insb
inc
adc
push
cld
pushf
inc
lock
push
push
xor
fs
js
test
inc
xchg
sub
enter
push
push
pop
nop
and
pushf
push
incb
fnstcw
sub
inc
push
push
cmp
inc
and
fdivrs
xchg
push
pusha
sub
add
and
mov
push
xor
pusha
push
fsubrs
aam
or
adc
mov
mov
je
fcompl
pusha
jl
push
ja
inc
push
je
add
stc
cmp
mov
jecxz
test
mov
sbb
push
xor
push
ret
push
push
mov
cli
add
lahf
adc
mov
inc
cmpsl
mov
jle
mov
mov
movsl
mov
mov
mov
xchg
clc
lods
ljmp
cmp
mov
sbb
test
leave
add
inc
mov
jmp
push
js
inc
out
xchg
in
dec
sbb
mov
rorb
add
cmpsb
cmp
pop
jmp
or
sub
add
xchg
lea
std
jle
mov
jecxz
inc
adc
pop
inc
test
call
ret
push
mov
or
inc
gs
mov
dec
imul
and
add
addl
fstpl
stc
lds
mov
xchg
scas
sbb
bound
mov
mov
xor
lahf
cs
fdivs
push
repz
rolb
js
sti
int
mov
ds
testl
jg
outsb
xchg
dec
push
sbb
mov
les
lock
xchg
xchg
mov
jp
add
fcoml
loopne
mov
lcall
push
or
cmp
push
jmp
xor
nop
sahf
or
jb
or
sub
cmpsl
int3
push
sbb
inc
pop
or
stc
and
sbb
adc
call
js
xchg
add
into
or
std
dec
sub
inc
or
sbb
inc
cmp
dec
mov
out
push
mov
push
and
nop
in
outsb
lret
je
cmpl
or
clc
ss
call
push
sarl
mov
les
push
insb
orb
loopne
and
lods
fs
orl
nop
test
cwtl
test
xor
cmp
push
dec
xor
in
ja
mov
adc
lret
scas
add
mov
add
je
cwtl
call
lods
nop
or
mov
pop
pop
clc
jne
mov
outsb
imul
insl
out
ret
ds
push
push
mov
gs
rclb
cs
adc
jmp
andb
jo
inc
sbb
cmpsl
loopne
adc
lock
jae
mov
ret
lret
adc
sub
sarb
lock
std
adcl
mov
add
rclb
push
stos
fadds
add
cmp
push
add
or
lods
mov
push
mov
pop
xor
sbb
lcall
dec
mov
repz
jns
and
inc
dec
insb
rclb
movsb
add
mov
xchg
movb
in
dec
pop
out
js
sbb
adc
scas
out
dec
sub
ret
pop
loope
sub
rol
movsl
push
jp
adc
cmp
or
and
bound
mov
mov
sub
imul
pop
loope
scas
and
cmp
mov
into
rorb
jae
sub
shrl
push
push
sbb
sbb
push
push
mov
add
sub
or
fstps
aaa
daa
cld
cs
ret
push
cmp
push
movsl
enter
fwait
scas
inc
pop
imul
dec
pop
cwtl
dec
push
das
sbb
or
jae
orl
pusha
mov
xchg
call
inc
jo
push
push
add
mov
or
sbbb
movsb
xchg
cmp
cmpb
loop
shll
adc
je
inc
arpl
xchg
test
xchg
popa
loop
mov
cmp
je
cmc
cs
pop
jb
cmp
jl
insb
test
jl
adc
dec
aaa
flds
shlb
pop
lret
sub
add
mull
filds
ret
xchg
out
sbb
pop
dec
ficoml
pop
inc
dec
jne
xor
dec
in
lods
and
jle
or
imul
or
push
jbe
aas
mov
pop
ficompl
or
ret
inc
push
xchg
pop
mov
aaa
test
mov
je
loopne
insb
xor
es
cmp
insl
jne
sbb
loopne
or
or
push
xchg
in
rorb
out
xchg
pop
ret
cmp
add
or
inc
testb
rorl
cmpsl
rorl
dec
and
hlt
jne
aaa
mov
repz
xor
lock
movsb
pop
add
xchg
ficoms
sbb
or
loopne
pop
mov
fsubl
dec
add
stos
add
push
add
sbb
stos
into
leave
add
pop
fs
push
lods
or
dec
ljmp
sbb
sub
scas
lcall
in
push
hlt
pop
add
mov
xchg
cs
outsl
xor
stos
cmpb
je
nop
sti
mov
imul
push
and
in
cli
mov
push
push
dec
xorb
jp
sbb
test
mov
cmp
fimuls
das
aad
and
sub
dec
mov
jne
jno
sub
jb
mov
xlat
ljmp
mov
push
insl
push
and
jmp
sbb
enter
test
push
cmp
jb
mov
ret
pushf
pop
push
or
mov
push
mov
or
inc
jnp
adc
push
cmp
adc
ja
dec
push
adc
or
push
add
imul
push
clc
mov
hlt
inc
add
dec
or
mov
pop
mov
mov
push
sub
idiv
add
add
je,pn
xor
add
sbb
je
add
add
inc
add
add
jmp
mov
push
add
pop
xchg
push
add
test
add
mov
and
inc
cwtl
push
xchg
or
aam
test
out
cmpsl
sbb
dec
mov
call
ret
inc
repz
subl
push
xor
sbb
data16
xchg
sbb
add
cs
add
cwtl
in
rorl
cwtl
cltd
daa
cmp
or
add
iret
cmp
mov
push
repz
jae
or
lea
arpl
cmp
fwait
adc
push
mov
add
add
jo
push
aaa
or
sub
test
sbbb
push
push
or
adc
popf
outsb
movsl
loopne
or
test
insl
pop
mov
dec
inc
or
movsl
push
adc
jae
js
lahf
sbb
push
push
jbe
adc
xchg
fcmovnbe
add
cmp
and
inc
fdiv
decb
jo
jne
xchg
or
lret
or
or
addl
adc
mov
cld
sti
push
push
mov
cli
mov
jmp
push
and
cmp
loope
movl
push
push
test
xchg
mov
sar
add
and
je
mov
out
mov
xchg
xchg
or
and
push
add
insl
jb
sub
xor
ds
pop
mov
setle
push
xchg
test
pop
push
lret
fsub
addl
movsb
sbb
mov
shl
sbb
pop
es
mov
xchg
jg
pushf
mov
add
fcompl
pop
mov
fstpt
push
sbb
test
loopne
push
rol
cmpsl
test
pop
enter
stos
mov
and
push
sub
push
insb
mov
divb
pusha
and
add
sti
popf
fisttpl
jmp
xor
sub
push
add
fstps
cmp
cld
pop
xchg
es
sbb
mov
and
mov
aam
dec
jecxz
jge
sahf
or
push
ret
push
or
sub
xchg
out
rcrl
adc
adc
test
add
add
and
sub
xchg
lret
xor
xor
dec
sub
xchg
cmp
cmp
inc
cmp
or
push
push
punpckhbw
pop
hlt
dec
adc
push
pop
stc
dec
mov
pop
adc
sub
in
popa
mov
int3
rclb
mov
aam
jnp
dec
mov
or
sahf
fsubrs
dec
aam
sub
inc
pop
loopne
inc
pusha
add
movsb
ret
pop
mov
mov
lret
dec
pop
loope
push
add
cmp
sbbb
inc
push
or
cmp
push
mov
aad
shlb
add
in
sbb
enter
xor
jb
push
pop
sub
sahf
enter
inc
imul
mov
imul
fs
push
cmp
nop
inc
inc
cmp
cmp
nop
inc
xor
sub
nop
inc
push
and
sbb
adc
popa
sbb
or
adc
push
test
add
rorl
push
mov
mov
js
inc
xor
sub
xor
fldl
fstpt
mov
orl
in
cmpl
or
int
push
adc
loop
lea
add
sub
addl
test
adc
jl
pop
nop
add
jmp
cld
pop
push
lock
int3
into
andl
jnp
add
jmp
test
rorb
add
and
loopne
pop
mov
push
push
or
addr16
mov
shl
cmp
xchg
addb
add
movsb
mov
jno
push
xor
dec
scas
pop
sbb
add
or
inc
adc
pushl
cmp
mov
and
mov
inc
js
add
pop
clc
push
push
or
mov
sbb
inc
ljmp
out
call
dec
and
inc
or
jmp
lea
imul
inc
and
jo
jno
loope
lret
mov
add
cmp
add
popf
mov
shll
add
pop
andb
in
xchg
add
add
leave
and
add
or
mov
jns
rcrb
mov
inc
mov
jmp
mov
or
daa
cwtl
push
xchg
jp
xor
movsb
sbb
aaa
repz
mov
shll
adc
mov
push
test
sbb
cwtl
pop
mov
and
insb
cmc
sub
add
mov
leave
lea
push
jecxz
jg
out
in
shlb
cmpsl
or
xchg
push
add
mov
add
jo
or
ret
in
jmp
jne
cmp
inc
add
mov
add
sbb
dec
sbb
mov
je
fwait
mov
mov
jo
in
adc
cmp
shrl
pop
push
add
stos
test
nop
or
cld
stos
loope
dec
pop
fcoml
xchg
add
sbb
pop
cmp
inc
mov
pop
sbb
subl
jbe
jecxz
rcrl
nop
aam
dec
insl
push
dec
movsb
cwtl
pop
je
mov
ficoml
sub
shrb
push
int
nop
les
xlat
add
sti
ret
cld
shlb
xor
pop
xor
xchg
insb
push
test
stos
insb
leave
xor
addr16
leave
or
mov
stc
neg
cmp
mov
nop
mov
dec
cmp
outsb
push
loope
sub
in
inc
movb
ret
xor
sub
push
sub
rclb
call
mov
xorb
ja
fdivr
mov
nop
adc
addr16
outsl
add
or
je
jne
cmp
lock
hlt
or
adc
add
jmp
mov
inc
les
das
pop
stos
cmp
repz
and
pop
in
sbb
std
jae
mov
pop
add
xchg
adc
jmp
lret
sbb
sub
fimull
aad
and
xchg
shlb
add
dec
sub
inc
addl
xor
clc
je
add
loopne
inc
pop
pop
inc
push
pop
push
addb
add
lods
test
pop
jb
or
ss
or
fs
jge
adc
inc
dec
fwait
mov
pop
lea
push
popf
dec
cli
inc
or
adc
or
xchg
xor
jae
push
fiaddl
push
fcmovu
daa
and
jle
push
fs
sub
test
mov
and
push
pop
shrb
cwtl
cmc
pop
add
cld
les
sti
xchg
or
sub
sarl
into
repz
add
xchg
mov
jp
xor
xor
sbb
out
inc
js
movsb
inc
cmp
jmp
int
adc
cmpsl
cmp
imul
or
cmp
loopne
jo
mov
lea
pusha
es
fisubs
xchg
jne
ja
jno
mov
push
and
jp
push
xchg
jp
addl
push
push
mov
mov
stc
add
ret
ret
lods
rol
cmp
and
daa
or
sbb
mov
push
stos
xor
pop
hlt
lods
sub
adc
fcoml
pop
mov
mov
mov
xchg
bound
mov
mov
mov
sub
jp
into
sbb
adc
out
jg
adc
notl
and
movsl
add
inc
std
sarl
xchg
xor
jne
push
add
add
xchg
push
sub
test
mov
stos
mov
inc
add
dec
cmovg
pop
int3
or
pop
rolb
jmp
call
mov
fcom
push
sbb
push
mov
in
adc
das
mov
sub
add
rorb
repz
sub
sbb
adc
dec
push
mov
mov
stc
ret
ret
ret
or
fdivs
sahf
je
dec
pop
fcmovnb
stos
orb
pop
jmp
sahf
mov
xor
sbb
shll
sbb
pop
dec
or
out
jo
and
out
xor
mov
mov
inc
push
test
mov
dec
leave
mov
mov
and
cmp
js
jbe
sti
mov
jp
mov
nop
nop
shll
and
movsb
cmc
sbb
add
sarb
or
mov
sete
cli
in
leave
jg
lret
sbb
mov
cltd
jns
jge
or
jle
pop
outsl
gs
add
mov
ss
xlat
shll
repz
cmpl
in
add
scas
push
lds
sbb
and
clc
les
testl
and
out
fisubrs
jp
add
out
mov
or
mov
popl
fwait
cli
add
fcomip
sub
and
stc
sti
mov
inc
mov
mov
loope
sbb
getsec
mov
cltd
add
or
ret
inc
and
cltd
test
lock
pop
cld
shr
xchg
jno
add
int3
mov
rcl
rcl
or
xlat
or
adc
push
ss
mov
lods
mov
cmp
xlat
adc
mov
mov
inc
lods
mov
sub
add
xor
aad
cmp
lock
pop
hlt
std
orl
xchg
add
mov
data16
out
in
or
ror
xchg
sub
mov
xor
ret
mov
mov
adc
add
adc
mov
lock
sub
lock
rorl
mov
ret
dec
cld
xchg
lods
add
jbe
orb
mov
add
orl
nop
in
adc
and
lahf
pop
cwtl
push
push
imul
addl
sub
movsb
movsb
or
negb
sbb
adc
mov
pop
enter
repnz
inc
push
sbb
sub
add
in
call
daa
movzbl
jmp
and
repz
mov
fs
mov
dec
add
inc
cmp
or
sbb
bnd
cmp
push
movsl
or
push
mov
das
jne
hlt
mov
fadds
add
sub
cld
sub
mov
mov
add
jmp
xor
push
std
xor
push
stos
mov
imul
fwait
dec
test
fistl
dec
ficoms
sub
nop
enter
mov
push
cltd
mov
aam
sahf
enter
mov
sub
pusha
in
fcmovnb
lea
mov
bnd
xchg
fdivrs
add
mov
xchg
clc
xchg
mov
imul
cltd
sti
nop
mov
jmp
xlat
and
popf
sub
pop
or
loope
pop
movsl
push
movsb
loopne
push
in
mov
pop
and
rcr
dec
mov
sar
adc
jo
rolb
mov
inc
cmp
mov
shl
js
add
shlb
cltd
push
es
iret
dec
mov
cld
add
xchg
jl
pop
push
inc
pop
mov
adc
cmp
mov
or
jmp
add
loope
shrb
fiaddl
adc
adc
jns
mov
adc
mov
dec
sbb
add
add
mov
lea
push
aas
mov
mov
mov
inc
adc
ret
push
iret
jmp
mov
ret
jg
lods
or
push
xor
dec
push
adc
js
je
dec
jne
rorl
xor
clc
adc
push
xchg
shlb
push
inc
xchg
addb
icebp
cmc
nop
pushf
lea
fcomi
xchg
push
xor
inc
mull
sti
cmp
push
push
jmp
cmp
pop
push
add
and
push
xor
mov
sbb
sarb
dec
dec
mov
dec
gs
cmp
push
js
subb
adc
mov
add
ficompl
add
mov
sbb
outsb
inc
and
aad
sub
push
add
add
mov
lcall
xor
mov
xor
ja
push
mov
xor
decl
or
inc
or
inc
mov
ds
stos
int3
or
sub
cmp
pop
dec
es
test
inc
aaa
mov
jge
test
and
mov
add
jp
push
mov
pop
jmp
cli
sub
sbb
mov
clts
lret
shlb
pop
into
push
push
add
add
add
or
stos
push
adc
repz
loop
fsubl
inc
sub
sti
je
mov
shr
test
or
or
xor
icebp
push
push
rcrl
and
push
xchg
vmread
fisubrl
adc
cld
int
fwait
shlb
les
jne
daa
lock
push
push
add
and
sti
orb
dec
sub
xor
roll
dec
push
imul
pop
add
pusha
push
gs
inc
fisubrs
pop
push
xor
sub
js
insb
lea
test
in
xchg
test
fs
and
pop
dec
fisubl
sbb
push
sub
inc
imul
sub
jb
xchg
push
inc
pop
dec
cmp
test
mov
imul
imul
push
ja
aas
add
fimull
add
xor
or
sub
addb
mov
pop
or
in
xchg
and
inc
lret
andl
dec
jns
fisttpll
sbb
jle
sub
pop
jb
sti
sbb
push
cmp
ss
lods
sbb
cltd
xor
movsb
std
or
inc
dec
mov
sbb
fdivs
ret
pop
pop
and
adc
push
cmp
adc
out
xchg
and
push
sbb
test
jne
mov
xor
jb
mov
mov
and
sub
mov
sbb
dec
sub
mov
or
movsb
pop
mov
inc
dec
pop
jnp
adc
push
ds
mov
and
inc
mov
adc
mov
sarb
pushf
xor
lea
sbb
shl
aam
push
aam
enter
jge
addb
sub
jb
push
cmpsb
testl
mov
mov
or
mov
dec
mov
jp
test
cmpsl
or
orb
xor
cmp
jmp
adc
shlb
add
and
pop
lcall
xor
pop
popf
xchg
mov
inc
cmp
loopne
je
adc
in
out
pop
push
scas
add
ds
and
js
add
outsb
inc
stc
repz
mov
imul
sarb
pop
jmp
push
cwtl
cmpl
adc
inc
xchg
xorb
mov
xchg
mov
scas
jge
dec
pop
loopne
pop
or
arpl
scas
xchg
sbb
adc
add
jmp
xor
inc
add
add
dec
cs
insb
je
jae
fsts
sbb
push
cwtl
pop
enter
cwtl
outsb
xor
pop
call
xlat
push
jne
dec
pop
jle
jbe
inc
sti
shrb
bound
mov
into
xor
dec
fcomp
inc
mov
or
movsb
out
push
jp
mov
mov
lds
lock
jl
add
push
sub
icebp
dec
rclb
rcl
jne
out
or
adcl
cmpl
bound
movsl
push
pushl
inc
push
gs
mov
add
add
mov
iret
adcl
adc
sbb
jno
es
das
sbb
or
inc
xor
mov
incl
pop
mov
iret
lahf
pop
add
lcall
xchg
xchg
mov
es
movsb
push
push
sbb
test
mov
fisubs
ljmp
call
repnz
pop
shlb
in
cwtl
aam
inc
sub
adc
mov
sbb
adc
sbb
add
test
sbbl
cmp
sti
inc
inc
add
pushf
cmp
movsb
mov
lcall
push
and
lods
icebp
setb
jb
jb
outsl
loopne
lods
push
rolb
pop
popa
loope
cmp
sahf
int
push
adc
cmp
fucomp
or
jne
shlb
mov
add
lods
nop
jb
and
mov
mov
mov
and
inc
push
sbb
popa
adc
sbb
shrb
rcrl
repnz
push
enter
push
iret
dec
push
cltd
mov
sbb
push
cmp
inc
xlat
insb
xor
mov
and
lods
push
or
mov
mov
and
and
and
rcrb
jg
sub
jg
push
or
push
or
jns
inc
push
pop
dec
xchg
pop
inc
test
scas
enter
sbb
ss
in
inc
stc
jnp
mov
andl
add
rorl
push
icebp
jl
dec
jno
pop
sbb
addr16
lods
ljmp
in
lea
test
dec
addl
inc
popa
mov
cmp
sbb
xchg
pop
push
mov
sub
jbe
mov
pop
shlb
sub
sbb
insb
lret
mov
mov
add
jg
out
dec
imul
inc
sub
loopne
jecxz
push
push
addb
lret
push
inc
jae
les
xchg
loop
or
ja
jo
cmpb
rol
fs
ds
xor
movsb
pusha
nop
dec
sub
fiadds
add
or
mov
insl
imul
nop
cmp
or
push
xor
imul
ss
add
leave
mov
or
push
sub
addl
aaa
inc
mov
lcall
pushf
lret
scas
or
mov
daa
and
xor
adc
inc
pop
arpl
pushf
pop
pop
or
and
cli
push
or
inc
ret
xor
inc
xchg
add
jp
repnz
and
lock
test
adc
adc
mov
or
push
and
outsl
pusha
sbb
out
pop
cmp
pop
lret
or
add
xchg
adcb
lret
or
pop
and
dec
pop
push
dec
enter
xchg
sbb
inc
push
or
imul
cmp
xchg
xchg
cwtl
fcoms
push
cmp
mov
sbb
sbb
pop
inc
xor
push
inc
mov
and
arpl
inc
sbb
dec
out
push
out
sub
jne
inc
dec
cmp
and
add
frstor
iret
xchg
pop
rcrb
mov
and
cmp
and
and
pusha
int
mov
hlt
rorb
xchg
and
data16
jne
mov
mov
sub
sbb
loopne
ja
add
xor
sbb
mov
loope
lods
repz
push
shll
ja
out
fsubl
imul
mov
jp
push
inc
add
push
loope
sbb
adc
push
fimull
push
dec
arpl
add
data16
orb
adc
das
jmp
add
test
rol
add
fwait
xchg
jns,pn
adc
enter
int
in
data16
pop
outsl
nop
add
xor
icebp
mov
xor
ret
sbb
inc
dec
push
push
cmp
or
jge
scas
pop
cmp
adc
inc
mov
pusha
xchg
and
xchg
dec
sub
jae
lds
inc
sub
and
xor
movsl
mov
pop
js
lret
mov
adc
stos
push
xlat
and
sbb
add
stos
hlt
ret
pushf
push
loopne
in
adcb
rcrb
dec
push
fmuls
sbb
mov
push
sub
icebp
dec
or
outsb
enter
dec
or
repnz
shlb
add
push
xor
sub
pop
mov
lret
mov
dec
in
jb
pop
mov
or
xchg
outsb
sbb
sub
push
cmp
pop
xor
js
repnz
enter
push
cmpsl
sbb
repnz
xchg
rorb
sub
pushf
adc
in
testb
insl
loopne
inc
push
jns
call
dec
iret
rolb
leave
inc
sahf
xchg
outsb
inc
loope
mov
xchg
cwtl
dec
mov
push
push
jns
xchg
enter
push
mov
pop
jb
sbb
cwtl
iret
jae
inc
aam
sbb
hlt
xor
sbb
mov
ficomps
test
out
mov
arpl
or
subb
and
inc
push
stc
into
cwtl
adc
subb
dec
add
pop
push
popf
xchg
add
pop
ret
fs
orb
mov
and
xchg
dec
je
notb
sbb
test
imul
pop
push
mov
jb
adcb
push
inc
pop
inc
adc
fiaddl
addl
sbb
js
andb
rolb
mov
sbb
jecxz
bound
and
push
bound
movsb
sbb
jmp
pusha
pop
aas
outsl
pop
pusha
mov
or
xor
mov
mov
add
push
inc
nop
imul
mov
sbb
and
roll
ljmp
xorl
mov
push
pop
sbb
test
mov
es
xor
shll
sub
or
repnz
or
pop
cltd
nop
sbb
stos
mov
xchg
les
imul
add
loope
pop
and
xchg
xchg
jecxz
jne
lods
mov
sbb
sub
pop
cmp
sbb
rorl
pop
mov
dec
or
es
and
shll
sub
pop
inc
pop
sub
dec
mov
pusha
sub
inc
out
pushf
popa
pusha
sbb
sub
push
mov
push
aas
data16
sub
aad
call
shlb
loop
mov
jb
aad
pop
sbb
jo
adc
add
inc
lods
mov
inc
ss
arpl
pop
xor
mov
hlt
stc
ljmp
fisttpl
pop
ror
push
pop
sbb
loopne
ja
lea
dec
mov
adc
fchs
fwait
ja
sub
jbe
sub
push
es
test
dec
or
push
cmc
bound
imul
repnz
mov
gs
or
dec
nop
bswap
leave
push
cmp
and
shld
punpckhbw
or
daa
mov
int
icebp
push
sahf
popl
shlb
cmp
add
dec
sbb
xor
sti
popf
inc
shl
or
js
jle
push
mov
sbb
test
shlb
push
loop
mov
and
ret
mov
sbb
daa
sub
cmp
cmp
pop
xor
cmp
jbe
push
in
test
test
and
ds
and
pop
jb
and
ret
enter
fs
sbb
clc
push
mov
jg
ljmp
int3
xor
and
popa
inc
ja
add
cmp
xchg
and
outsb
cmp
pop
sub
mov
xchg
jl
adc
cmc
sub
mov
cld
outsb
int3
cmpsl
xchg
xor
cmp
jecxz
rorl
mov
or
lds
adcl
sar
test
xor
dec
pop
movsl
adc
repz
rclb
shll
sub
mov
cs
or
adc
or
mov
push
cmp
andl
outsb
xor
sub
push
fs
fwait
test
icebp
adc
add
fnsave
xor
leave
inc
inc
sub
in
and
out
mov
jg
push
pop
add
jns
sub
sbb
filds
xchg
xchg
or
push
sbb
or
fs
leave
insl
popa
dec
mov
rorl
loop
xor
inc
nop
add
cmc
ficompl
rolb
loopne
inc
push
mov
pusha
mov
sub
iret
xor
test
mov
icebp
test
xchg
inc
pop
rcl
das
jnp
xlat
pushl
and
lea
js
out
push
test
cwtl
sbb
lods
call
call
and
out
outsl
aam
dec
mov
and
cmp
ret
jne
and
jecxz
stc
sbb
aas
aaa
inc
cs
cmp
add
leave
xchg
push
push
pop
push
add
fs
aaa
pushl
call
or
or
add
hlt
sub
mov
test
int
xchg
mov
adc
add
jne
inc
arpl
inc
scas
mov
adc
lods
xchg
inc
cmp
das
aas
outsl
int
or
inc
repnz
aas
mul
push
inc
xchg
cmp
and
or
cs
or
pop
adc
addr16
inc
or
or
pop
sub
adc
cmp
lock
and
lcall
or
test
loop
and
add
fwait
push
cmc
adc
pop
ud0
sbb
pushl
or
mov
add
jnp
fnstsw
andb
xor
adc
nop
scas
or
movq
add
xor
and
ret
xor
mov
int
jp
or
leave
adc
movsl
adc
rorb
xor
mov
aam
sbb
inc
adc
pop
dec
dec
and
nop
sti
add
push
add
push
mov
add
xchg
and
mov
enter
sbb
loopne
push
popa
push
sbbb
call
sbb
icebp
sbbb
push
and
lret
out
or
add
xor
sub
ret
and
dec
mov
add
sub
in
leave
daa
mov
ror
jmp
mov
xchg
push
fcompl
inc
enter
pop
rorb
int3
shlb
push
and
insb
lea
scas
imul
mov
sub
push
lods
add
or
movsl
jbe
mov
in
cwtl
jbe
xor
pop
andl
cltd
cmp
das
lock
or
sysexit
mov
mov
xor
inc
dec
pop
das
sub
jecxz
sbb
bound
jb
sbb
mov
popa
sub
inc
cwtl
cwtl
xchg
xor
cmpsb
sbb
sub
pop
loopne
cmpsl
jmp
add
repnz
xor
inc
sub
fisttps
shlb
leave
dec
mov
aaa
dec
jno
xor
sub
pop
call
sarl
sub
cmp
es
cmp
cmp
and
lods
ret
cli
add
jae
push
cmp
push
loopne
adc
inc
dec
outsl
cmp
nop
sbbl
cmp
hlt
xlat
or
adc
xor
pop
dec
jb
mov
push
jno
and
rorl
xchg
cwtl
das
inc
dec
push
push
lea
adc
and
loopne
ja
push
ds
jnp
mov
inc
pop
dec
or
out
arpl
pop
sub
subl
fstps
mov
push
dec
cmp
cmp
jg
daa
and
inc
sub
or
push
and
cmp
stc
mov
and
int
inc
adc
sub
mov
lret
jmp
mov
add
and
mov
cmpsl
jnp
pop
adc
pop
lret
scas
setge
stos
lods
xchg
xchg
mov
mov
cmp
movsb
cmpb
test
pop
cs
dec
andl
ds
xor
xor
scas
or
sub
ret
pusha
inc
lret
lret
add
push
or
sbb
inc
cmp
pushl
xor
jne
or
sahf
dec
pop
mov
sbb
mov
dec
or
sahf
je
fwait
insl
addr16
ret
lcall
cmp
sbb
shll
mov
or
fwait
inc
rcrl
jne
inc
es
sub
dec
or
mov
push
lret
mov
adc
jg
sbb
cmpsl
xchg
push
aam
sbb
push
sbb
pop
xchg
lods
movsb
test
outsb
imul
rorb
or
cmpsl
dec
push
stc
mov
mov
insb
int
xor
and
push
adc
pop
push
lods
and
cs
test
mov
pop
loope
rorl
aaa
shll
incl
cmpsb
push
push
and
add
dec
imul
nop
cmp
inc
mov
adc
inc
or
out
icebp
adc
xchg
pop
push
lea
stc
fnstenv
dec
aad
jg
lea
fmull
push
fbstp
xchg
lret
mov
pop
cmp
aam
mov
cltd
fld
ret
inc
xor
loope
fs
outsb
dec
test
sbb
scas
and
enter
sbb
adc
xchg
in
aam
mov
xor
add
jle
dec
jo
push
push
dec
sbb
cmp
stc
push
call
cmpb
or
aaa
cmpsb
das
mov
idivb
jae
mov
sbb
mov
sub
dec
push
cmpsb
enter
dec
push
lods
ret
js
js
and
mov
insb
test
xor
pop
pop
mov
add
jnp
add
aam
add
movsb
mov
mov
add
and
adc
stos
push
lock
sbb
push
aaa
in
jg
jmp
adc
adc
repz
je
test
push
ljmp
push
inc
scas
dec
pusha
test
sub
jle
or
insb
cmp
clc
sub
sub
cli
dec
movsl
fs
mov
lods
or
adc
sbb
xor
dec
sub
add
add
sub
or
pop
push
or
xchg
and
test
imul
or
test
stc
adc
and
push
pusha
mov
mov
add
test
dec
or
pusha
shrb
add
insl
jg
jne
mov
push
or
jae
jle
mov
out
push
mov
stos
dec
aam
xor
and
inc
andb
inc
call
jbe
rolb
es
or
popa
imul
or
adc
inc
cmp
aad
inc
pusha
pop
ret
lds
push
add
push
add
je
lea
ss
popa
ret
mov
addl
cli
addl
xor
xorl
mov
and
lods
add
lea
divb
mov
movl
in
jg
jecxz
je
xchg
mov
add
pop
loopne
xor
jp
cmp
dec
inc
mov
mov
add
dec
jae
sbb
pop
in
aaa
lods
test
pusha
add
jo
pop
enter
in
dec
sbb
fstps
mov
pop
imul
add
and
and
cwtl
add
movl
inc
addr16
nop
nop
mov
push
out
and
mov
mov
gs
test
fs
mov
aam
in
or
sub
mov
gs
insb
inc
cmp
shrb
aam
push
push
jo
mov
adcl
or
fwait
movb
cmpsb
loope
cmpl
push
leave
add
js,pn
push
push
push
lcall
outsb
xor
insb
sub
push
sbb
mov
sahf
fildl
and
fsqrt
popf
jecxz
push
lahf
mov
push
dec
fs
and
lahf
ret
fs
lea
add
adc
push
and
out
add
stc
insb
xor
pop
andl
inc
pop
mov
fs
pop
sbb
and
ret
and
fcoms
push
rolb
shlb
inc
and
cmp
inc
sbb
lock
inc
inc
test
inc
cmp
inc
push
mov
inc
int3
andb
cmpl
inc
test
rclb
xchg
rclb
mov
mov
mov
xor
xchg
je
leave
mov
js
push
mov
adc
and
lret
xor
out
mov
inc
xor
rorb
fcoml
rcr
xchg
out
adc
das
addb
cmp
add
call
mov
fld
and
or
fildl
push
inc
dec
push
loope
insl
loopne
add
sub
add
adc
cmp
sbb
xchg
push
aad
repnz
sbbl
push
sub
cld
pop
sub
sti
push
cmp
or
mov
sbb
or
jne
ja
xlat
push
imul
and
sti
pushl
or
je
push
inc
cmp
jae
nop
or
incl
inc
hlt
jne
push
fidivrs
ljmp
pop
wbinvd
ds
je
and
xlat
push
mov
mov
inc
gs
lock
mov
xchg
mov
sbb
or
or
adc
adc
je
jg
add
sbb
push
int3
adc
add
adc
and
sub
xchg
nop
push
xchg
les
pop
add
mov
mov
mov
pop
inc
or
icebp
pop
insl
jo
jo
mov
movsb
ret
xor
push
mov
push
sub
or
add
sub
and
add
addb
pop
jecxz
sbb
sub
sbb
cld
mov
imul
leave
fwait
shl
adcb
inc
cmp
movsb
rclb
sbb
or
push
daa
iret
sub
cld
rcrb
xor
xchg
sbb
loopne
xor
or
and
comiss
inc
xchg
pause
clc
ja
fs
and
sub
lock
inc
and
jns
adc
test
fcmovne
pop
sub
pop
lret
push
jecxz
enter
lock
into
out
lods
sbb
jmp
aam
push
ljmp
dec
add
and
or
add
and
fadds
outsb
push
jb
xchg
fprem
mov
mov
fwait
pop
xchg
add
cmpsl
shlb
add
inc
or
fiaddl
inc
or
add
mov
cmp
sub
hlt
push
sbb
inc
cmpl
rcrb
mov
mov
adc
rclb
jge
push
sbb
es
xchg
xchg
adc
inc
add
ss
pop
adc
popa
pop
and
push
and
or
or
leave
js
xor
fwait
adcb
hlt
xchg
enter
inc
xchg
cmp
xor
mov
cmp
push
rclb
adc
insl
nop
jp
ss
inc
mov
adc
leave
test
pop
mov
pop
sub
mov
adc
mov
jp
pop
ret
out
enter
pop
pop
xor
loop
push
add
imul
xor
mov
add
xor
add
adc
xor
test
inc
and
adc
bound
add
push
mov
add
push
push
add
mov
das
add
pusha
inc
mov
loop
pop
sbb
aam
add
xor
dec
insb
mov
es
push
mov
xlat
xor
cltd
test
mov
mov
negb
jmp
inc
sub
sub
xor
pushf
push
mov
xchg
dec
mov
ror
sub
jne
or
inc
lods
cmp
cmp
add
xorps
add
in
cmc
and
dec
mov
ret
sahf
in
movsl
sbb
aad
adc
lea
jmp
inc
and
mov
test
push
test
fildl
and
mov
and
adc
pop
dec
loope
dec
loopne
add
pop
aaa
xor
pop
sbb
popf
ret
ret
pusha
xchg
icebp
rclb
test
xchg
ds
int
clc
sbbl
sub
sub
call
and
sbb
sar
xchg
push
std
mov
clc
push
add
jo
push
xor
jns
push
jmp
sbb
adc
mov
or
inc
jge
push
jne
sub
add
cmp
jne
add
inc
dec
data16
dec
push
incb
popf
lret
in
adc
sbb
ffreep
sbb
or
inc
inc
xor
jb
add
xchg
stos
or
pop
mov
or
in
or
out
in
push
call
or
pushl
aam
cwtl
aam
movsl
mov
add
push
adc
imul
test
sub
mov
nop
pop
pushl
mov
push
ss
jmp
or
or
sub
push
sbbl
ljmp
popl
add
add
adc
dec
inc
jno
loop
test
xlat
test
out
aad
adc
jno
and
je
or
mov
adc
mov
mov
xchg
ds
pop
cmp
inc
jb
sti
cmp
inc
jne
pop
add
jb
or
popf
adc
pushf
jecxz
dec
push
dec
fisttps
add
sub
jecxz
ja
jl
subb
jecxz
mov
mov
and
jne
pop
test
int3
adcl
add
jl
imul
xlat
dec
mov
sahf
in
nop
jmp
push
dec
jb
movsb
jmp
cmp
push
or
xlat
or
adc
fldt
push
lea
adc
mov
movl
mov
sbbl
push
mov
xchg
out
jmp
test
mov
call
stos
add
dec
fs
dec
rclb
cmp
repnz
dec
cli
mov
cs
mov
and
pop
mov
ss
and
sbb
push
cld
push
and
mov
lahf
in
hlt
mov
mov
es
xor
push
jmp
push
push
dec
mov
add
cmp
inc
lret
push
pop
leave
push
adc
push
outsb
sbb
inc
add
rorl
cmp
cmp
sbbb
in
mov
dec
lods
sbb
push
sbb
aas
dec
cmpsb
inc
push
or
push
sti
dec
dec
fadds
sub
ret
add
lcall
xchg
in
or
mov
mov
inc
xor
gs
xchg
test
inc
js
and
pop
sbb
dec
add
inc
test
in
into
test
mov
dec
xchg
mov
shlb
pop
add
cwtl
lods
sub
call
xchg
dec
mov
rcrb
in
into
inc
sbb
es
lds
jns
inc
push
fldt
inc
fchs
jmp
loop
aas
mov
and
xchg
pop
or
sub
lock
jg
cltd
push
push
aad
pop
sbb
lea
push
adc
sbb
iret
aas
push
outsl
leave
dec
rclb
xchg
mov
xor
inc
fstpl
sbb
sbb
mov
outsl
inc
out
xor
add
sub
test
inc
adc
mov
cmp
mov
fmull
push
pop
mov
mov
cmp
pushf
and
mov
dec
mov
add
sbb
push
jo
jne
loope
and
mov
jo
ret
mov
adc
lea
repz
insl
mov
lock
sub
inc
push
or
mov
jle
push
loope
inc
pushf
out
mulb
inc
lods
cmp
or
jne
xchg
mov
adc
loop
pop
mov
jns
push
xchg
and
pop
bound
rclb
adc
jnp
in
or
and
fiaddl
jno
imul
jbe
ret
les
inc
adc
mov
add
cmp
loopne
jle
dec
adc
adc
pop
adc
push
dec
mov
xchg
xchg
xor
add
aad
mov
gs
sbb
or
pop
mov
fs
or
lret
push
and
loope
icebp
or
mov
and
lods
adc
lock
inc
lcall
push
xorl
xchg
dec
rorb
and
test
mov
and
cmp
test
push
fwait
icebp
jp
cmp
or
sti
xor
sbbl
cmp
cmp
pushf
xor
ljmp
int
loopne
push
xchg
fsubs
sub
lock
sbb
je
fadd
jbe
pop
loopne
and
es
fst
pop
inc
call
jecxz
testl
sbb
cmp
jne
push
xchg
jno
lods
jmp
pop
jmp
insb
pop
cmp
adc
shll
adc
mov
pop
je
cmpsb
push
dec
jmp
loopne
xlat
or
push
sbb
sub
insl
and
stc
mov
push
mov
add
loopne
sqrtps
mov
sbb
inc
es
lea
stos
push
js
mov
mov
jmp
jne
fsubrs
into
lahf
pop
inc
pop
lcall
ret
sub
sub
xor
push
push
fs
add
mov
xchg
sbb
and
sub
adc
push
adc
in
aaa
mov
xchg
lods
dec
mov
jg
dec
loope
jo
dec
push
ror
inc
push
and
mov
cmp
mov
ret
lcall
movsb
push
pop
lods
push
push
aam
lods
ss
jl
in
and
sub
inc
push
jo,pt
push
push
xchg
add
call
and
clc
pop
sub
mov
out
cld
sub
jno
add
jne
inc
scas
pop
cmp
cld
dec
dec
or
add
jmp
dec
sub
add
stos
idiv
cld
or
fidivs
xor
pusha
es
adc
decl
fwait
dec
sbb
inc
sbb
add
imul
xchg
inc
and
shr
leave
mov
lods
or
sbb
xor
add
push
adc
mov
out
xchg
xchg
mov
mov
sbb
push
inc
push
sub
jge
and
movb
lea
outsl
test
lcall
pop
mov
mov
sarb
lea
push
mov
popf
jno
lcall
arpl
insb
es
sub
and
sub
pop
inc
sub
mov
out
pusha
sub
sub
mov
and
xor
sub
adc
outsl
outsb
loop
push
mov
inc
xor
fs
pop
push
push
fsts
inc
dec
jle
cmp
adc
ret
mov
inc
imul
insl
rcl
inc
bound
inc
add
push
or
add
dec
push
push
testb
mov
push
orl
loopne
aam
mov
arpl
push
in
movb
rol
and
fsubl
test
fwait
cld
and
cmp
add
insb
movsb
movsb
sahf
add
test
in
pop
pop
mov
in
inc
mov
mov
xchg
repz
fadds
enter
icebp
mov
jno
inc
fsubr
cmp
call
push
outsb
and
and
sbbl
sbb
cmp
movsl
cmpb
aaa
jne
stos
jnp
cmp
push
push
pop
movsl
mov
xchg
pop
push
dec
enter
inc
jb
pusha
aam
sub
sub
jmp
es
pop
fisttps
push
inc
lea
cmpb
inc
imul
outsb
xor
inc
xchg
mov
jmp
mov
sub
arpl
sub
cmp
pop
or
xchg
fnstsw
je
inc
push
mov
aam
sub
push
add
aas
dec
dec
inc
fdivl
mov
es
test
ficoml
cmp
outsl
mov
xor
and
push
fwait
jb
aam
cmp
mov
ret
scas
and
dec
jmp
lea
rol
xor
pop
jae
sub
or
jae
push
shrb
les
clc
push
pop
outsl
pop
jns
push
loopne
test
sti
movsl
mov
test
hlt
fisttps
push
fildll
mov
dec
or
adc
jo
cmp
imul
or
or
jmp
dec
adc
pop
xor
loop
sbb
insb
mov
mov
add
mov
dec
pop
ja
pop
mov
push
fwait
add
imul
pop
je
nop
push
lods
xor
and
jmp
cmp
jne
xor
inc
stos
mov
imul
stos
push
mov
jg
or
outsb
cld
push
jne
std
test
roll
imul
test
test
leave
jo
loope
dec
inc
xchg
mov
mov
test
loope
cmp
mov
leave
adc
imul
push
xor
sbb
bound
sbb
xchg
fstpt
fcomps
add
lock
add
mov
inc
in
rorb
stos
fs
xor
cli
adc
cs
icebp
adc
or
daa
add
push
shlb
adc
adcb
push
or
pop
mov
jno
dec
or
dec
not
push
out
add
sbb
inc
mov
jl
je
or
mov
and
movsl
imul
fcmovb
push
mov
add
mov
xor
jecxz
paddusb
mov
fdivrl
cmp
mov
jmp
pusha
call
add
jl
gs
and
arpl
mov
mov
lea
iret
jo
js
mov
and
sbb
jno
xchg
xlat
push
dec
loopne
and
addb
push
wrmsr
and
lcall
mov
rcl
push
push
fld
test
sti
or
sub
xor
out
movsl
xchg
add
xchg
test
mov
push
pushf
xchg
cmpsb
push
bound
jl
mov
or
pop
into
pop
jmp
dec
cmp
wrmsr
and
int3
push
movsl
cmp
loop
aaa
xchg
sbb
xchg
mov
cmp
and
and
pop
xlat
dec
mov
push
mov
je
cmp
dec
adc
dec
jae
mov
jo
inc
arpl
insl
jo
movsb
cmp
ja
js
in
xorl
add
inc
add
sarb
push
popf
or
or
enter
xchg
mov
mov
add
push
call
cmp
mov
insb
sbb
or
pop
xorb
js
call
cmp
push
inc
jecxz
lock
cmp
ss
sbb
cwtl
mov
je
clc
mov
fmull
fsubr
mov
hlt
add
or
pop
lods
mov
xchg
int3
test
jb
xchg
or
sbb
push
add
adcb
jl
repnz
sub
adc
cmp
jl
js
adc
lcall
stos
mov
sbb
and
and
stc
push
mov
sbb
lret
push
or
jp
sbb
lock
mov
or
xor
jb
rcl
fcmovnb
pop
sub
dec
xchg
xor
push
mov
sub
pusha
mov
out
jae
in
pusha
pop
pop
mov
cmp
je
jmp
pop
insb
enter
sub
testb
popa
outsb
lods
add
je
std
test
mov
in
or
sub
aaa
outsb
xor
loopne
mov
sbb
inc
popa
js
insb
push
jp
push
insl
sbb
inc
gs
add
push
xor
int3
jmp
repnz
ret
add
call
in
ja
or
rolb
sbb
shll
mov
in
in
xchg
js
add
add
jg
and
icebp
or
mov
insb
test
mov
mov
daa
stos
push
or
pop
das
add
movsb
cltd
add
pop
hlt
dec
loopne
in
mov
pop
and
out
lock
pop
cmpb
xor
cwtl
addb
mov
sbb
push
cmp
adc
lock
subl
inc
in
nop
xor
packuswb
das
ljmp
add
stos
rcr
push
loopne
push
mov
mov
notl
shlb
inc
or
dec
inc
daa
sbb
mov
pop
sar
jl
subl
je
inc
lcall
pop
sbb
push
push
jle
xor
push
mov
sub
sub
ss
xor
call
xchg
in
sbb
xchg
sbbb
sahf
xor
aam
xchg
push
xchg
sbbl
pop
rorb
jl
nop
loop
inc
leave
or
and
jg
or
outsb
add
or
mov
mov
push
sub
push
in
call
mov
mov
dec
add
inc
or
mov
cwtl
xchg
push
push
into
cmp
mov
mov
mov
add
mov
lea
pop
xchg
neg
mov
push
adc
mov
push
mov
add
inc
rcll
ja
push
adc
sbb
pop
nop
push
pop
pop
ret
rcrl
test
int3
pushf
idivb
xlat
push
rorl
inc
pusha
inc
dec
rclb
dec
cmp
jbe
dec
xchg
imul
jne
jbe
arpl
das
push
aam
jne
dec
nop
mov
lock
mov
div
jl
mov
test
dec
add
dec
or
add
out
gs
sbbb
test
mov
jge
mov
fnstcw
inc
push
cmpsb
sub
jo
imul
inc
push
shlb
inc
adc
jmp
cmp
movsl
jmp
aad
pop
dec
rcll
sbb
test
cmp
ficompl
dec
clc
fcompl
loop
cld
fistps
pop
int3
mov
xchg
sub
or
sub
loopne
aad
pop
int3
test
sbb
adc
scas
stos
insb
bound
add
push
pop
addb
repz
and
adc
xor
sarb
je
mov
sub
push
push
cmp
or
mov
xchg
mov
jbe
scas
fadd
and
pop
test
mov
fstl
add
jl
out
rorb
lods
push
add
shll
adc
inc
push
xor
push
ret
adcb
xchg
and
mov
xor
or
lahf
ret
inc
enter
nop
mov
dec
rorb
pushw
sbb
je
sbb
jnp
adc
je
outsb
mov
add
mov
mov
aaa
and
out
inc
adc
and
push
push
lea
mov
adc
push
aaa
pop
adc
insl
inc
adc
and
add
cmp
push
fimull
push
sub
inc
aad
xchg
repnz
icebp
mov
add
cmp
dec
ljmp
nop
loopne
lock
or
jnp
jne
sbb
mov
shll
icebp
jbe
fmull
mov
mov
fidivl
cmp
jb
push
adc
mov
pop
or
push
in
dec
dec
xor
add
inc
loop
insb
mov
shrb
inc
iret
sub
inc
push
mov
sbb
lock
cmp
std
mov
mov
arpl
xchg
sub
sbb
cmp
orb
into
pusha
cmp
cli
jg
push
cmp
xchg
or
xchg
mov
jmp
js
dec
push
mov
mov
push
shr
in
mov
pop
jo
cvttps2pi
je
add
or
test
jl
sbb
call
xchg
mov
rclb
arpl
cmp
or
rolb
push
in
xor
insb
pushw
push
add
frstor
push
sub
popf
add
jl
cmpsb
fisttpll
lock
push
xlat
pop
fwait
add
adc
dec
mov
lcall
xchg
fisubl
jmp
and
jno
rcl
mov
xchg
add
pusha
push
mov
mov
pop
and
xchg
dec
sbb
and
jns
push
xor
jmp
add
push
add
jno
lock
popf
jmp
cmp
fnstsw
test
in
push
jg
mov
mov
stos
add
or
call
adc
movb
test
xchg
push
mov
je
loopne
clc
dec
inc
or
jae
add
push
jae
arpl
push
jne
push
push
je
inc
or
xchg
out
xor
or
and
jle
in
nop
cmp
push
push
sub
inc
sbb
cmp
adc
clc
call
or
adc
mov
pop
mov
dec
adc
pusha
pop
mov
popa
jge
cmp
je
inc
out
push
or
loopne
pop
push
cwtl
fcomi
or
int
cmp
les
xchg
sub
sbbb
fdivl
movb
push
popf
xchg
jmp
push
lods
or
ds
dec
outsl
xchg
push
mov
call
push
or
jmp
xor
cmp
jl
rcrb
adc
xchg
je
pop
jge
cld
adc
into
jl
imul
sbb
jo
or
sub
xor
jb
roll
push
test
pop
rcll
push
jae
call
movsl
clc
sbb
test
lock
pop
and
jne
jg
fbstp
inc
out
mov
mov
mov
jmp
lds
push
test
in
xchg
and
inc
js
movsb
add
xchg
vphaddwd
lret
add
pop
addr16
mov
and
or
orl
sub
mov
pop
orb
jae
or
inc
and
add
cmp
xor
rcll
push
dec
jo
js
mov
jo
fsubr
mov
and
cmpsb
cwtl
sbb
or
shrb
sub
sub
ss
data16
test
inc
mov
in
sbb
dec
inc
and
pop
or
mov
adcb
int
adc
dec
pop
loopne
add
xor
test
sbb
pushl
int3
loope
sub
push
enter
fadds
sbb
enter
jo
orb
push
enter
and
jbe
push
pop
ret
pusha
xchg
sbb
shll
and
ret
pop
xchg
add
rcrb
adc
cli
xchg
ficoms
clc
adc
and
cmp
jne
pop
push
xor
sbb
shrl
dec
xchg
push
jne
jne
cld
or
push
inc
push
and
xor
add
sub
aaa
xor
mov
imul
int3
fbstp
jmp
cmp
sbb
mov
iret
jo
jne
outsl
push
xor
sbb
ror
add
adc
test
lcall
call
mov
or
lock
clc
jne
mov
jb
mov
add
fcmovnb
jmp
push
cmp
dec
mov
jl
sub
lea
add
adc
adc
adc
shlb
xchg
mov
xor
jo
cmp
in
push
rcrl
xchg
push
insb
sbb
lahf
mov
or
inc
ret
inc
push
jo
xchg
jbe
call
shr
and
test
add
inc
enter
test
lock
aam
jne
lea
add
in
imul
adc
popf
es
imul
adc
push
clc
out
test
addr16
mov
out
andl
pop
add
clc
add
pop
arpl
add
or
outsl
inc
mov
pop
leave
dec
ja
repnz
out
add
cmp
stc
or
push
ljmp
stc
jmp
movsl
jnp
imul
fnstcw
add
insl
pop
jmp
adc
sub
pop
mov
loop
sbb
stc
lock
and
cs
jne
dec
pop
sub
xor
push
xchg
ss
ja
fwait
inc
sbbb
lahf
sub
ss
jne
arpl
mov
sbb
lods
push
add
test
mov
aad
push
pop
cmp
xchg
je
ret
adc
in
mov
nop
sahf
mov
mov
mov
fdivs
lret
clc
mov
in
movsl
cmp
or
jmp
cmp
pushf
scas
or
loopne
testb
jmp
pop
aas
xor
or
jnp
or
sub
or
jmp
sbb
or
fs
adc
push
jp
es
add
adc
or
dec
out
dec
adc
fcoms
ss
and
mov
cwtl
jp
or
mov
push
cmpsl
or
add
dec
xchg
sub
push
push
jnp
mov
sbb
xor
int
jo
addr16
enter
and
mov
adc
or
movsl
push
jecxz
sub
adc
jo
mov
inc
jo
neg
cwtl
notl
xchg
and
adc
sub
sbb
lods
shr
cmp
nop
gs
je
inc
mov
sbb
pusha
insb
insb
push
push
les
arpl
dec
lahf
ja
pop
inc
push
add
xchg
xchg
jo
mov
je
cmp
je
mulb
inc
or
cmp
test
iret
je
xor
mov
push
push
lock
lahf
loop
fcoms
xchg
inc
pop
xchg
jmp
lea
pop
fcoml
dec
leave
add
rolb
sub
push
add
xchg
pop
lock
mov
adc
lock
mov
lock
adc
rorl
jmp
out
lods
in
jle
push
push
adc
mov
into
ret
stc
sbb
rcr
xor
push
mov
ja
dec
ljmp
add
push
mov
jg
pusha
mov
cmpps
mov
mov
dec
cli
push
mov
ljmp
push
mov
cwtl
jl
testb
pop
push
inc
sub
add
or
push
jle
ja
dec
xlat
test
je
test
ljmp
sbb
pop
das
and
jbe
mov
and
sbb
testb
adc
adc
adc
clc
pop
push
jge
jne
lods
movntps
cmp
or
sbb
mov
mov
cs
mov
dec
popa
push
addr16
fisubrl
pop
mov
icebp
push
xor
cld
test
jbe
fsubs
cltd
je
ja
xlat
push
xchg
stos
or
xchg
mov
das
pop
enter
mov
inc
movsb
pop
jl
push
push
test
sub
pop
loopne
je
rcll
fwait
sbb
add
pusha
out
loopne
xchg
push
and
and
push
lea
loope
rclb
add
sub
push
push
lret
push
add
xor
lcall
test
or
fcoms
rorl
jecxz
ds
ss
adcb
xor
loopne
mov
push
jmp
rolb
lea
jns
cmpl
adc
imul
fwait
lea
push
push
adc
ja
jmp
pusha
xchg
fmul
inc
std
mov
mov
sahf
push
dec
loopne
ret
pop
je
push
out
add
or
les
dec
mov
sbb
pop
loopne
or
or
add
adc
mov
sbb
jge
sbb
jg
ljmp
push
cmpb
ss
pusha
mov
adc
adc
cmp
and
pop
into
jo
dec
ja
ljmp
pop
xchg
adc
fcompl
lods
cmp
orl
sbb
and
push
pop
in
fdivs
jecxz
lock
icebp
or
adc
xchg
cltd
icebp
adc
in
cmp
loope,pt
mov
xchg
jl
or
lret
inc
sldt
xchg
movsb
and
lea
lret
fs
mov
xchg
sbb
mov
nop
sarl
and
cmp
push
movb
fsubr
mov
out
scas
add
ss
push
pop
push
test
push
add
popa
mov
cwtl
jno
and
sub
aam
mov
gs
pop
xchg
add
test
pop
mov
in
sarl
xor
fmuls
es
inc
add
mov
mov
mov
sbb
roll
jo
data16
mov
mov
fidivrl
aaa
push
xchg
popa
cwtl
bound
pop
push
scas
lods
sahf
rolb
jecxz
test
cmp
inc
sub
push
mov
js
aaa
rolb
and
cld
dec
fnstcw
mov
xchg
mov
adc
dec
imull
daa
jae
movsb
mov
push
addr16
push
je
or
push
xchg
sbbl
adc
cmp
popa
jmp
lea
push
push
push
pop
add
lds
and
iret
fists
ret
push
push
mov
adc
sub
xchg
adc
or
xor
jp
jp
pop
ret
nop
adc
loope
sbb
inc
sub
fisubrl
sbb
clc
leave
add
test
mov
stos
fisubs
mov
ljmp
adc
pop
jge
jge
orb
add
jno
xchg
jmp
xorl
outsl
or
cwtl
add
cli
sub
cmp
testb
mov
push
js
xor
scas
dec
clc
imul
xor
sahf
test
and
xchg
mov
in
inc
xor
ja
rcll
xor
imul
dec
test
xchg
xor
pop
cmp
rdmsr
sarb
stc
dec
stos
frstor
gs
mov
ret
mov
jb
mov
shr
and
leave
test
or
and
push
mov
test
ficomps
test
mov
test
jl
cmp
push
cld
or
or
jo
push
adc
ds
pop
push
and
dec
xchg
xor
test
fimuls
dec
test
xchg
push
add
pop
add
xchg
outsw
cwtl
fbld
out
sub
jb
and
sub
fildll
sbb
in
neg
sbb
push
cmp
ret
push
xchg
or
dec
push
or
inc
je
jo
les
sbb
nop
add
cmpl
outsl
inc
add
cmp
xor
mov
pop
or
mov
cmp
inc
inc
lcall
insb
xor
pop
xchg
sub
sahf
pop
inc
xchg
dec
xor
add
jl
andl
jne
xor
scas
jno
or
int
mov
jl
sub
mov
and
gs
call
pop
and
aad
cwtl
loop
lea
and
out
ss
push
inc
or
or
rcr
push
jmp
adc
mov
dec
ret
sbb
pop
pop
pop
pop
cmp
jge
jge
inc
idivb
inc
and
jb
lock
push
or
fistpll
gs
xchg
inc
inc
mov
adc
je
xchg
pop
sbb
and
pop
in
cltd
add
loope
les
dec
pop
mov
or
cmp
dec
xor
pop
sahf
push
xchg
jecxz
xor
rcll
push
jo
mov
add
and
dec
scas
sbb
xchg
inc
cmp
xchg
imul
test
inc
mov
pop
mov
add
adc
sub
pushf
push
mov
gs
scas
mov
sbb
push
or
inc
cmp
mov
adc
push
in
js
push
add
jmp
add
lock
insb
dec
dec
adc
adc
push
inc
xor
call
test
xor
jp
jmp
addl
pop
jmp
fbstp
mulb
pop
jb
jecxz
push
pusha
xchg
subl
lds
pusha
call
je
pop
mov
call
or
mov
cmp
cmp
cmp
dec
mov
imul
ret
std
sbbl
pop
or
out
add
xchg
jle
mov
mov
dec
jl
loope
xor
into
jne
loopne
or
inc
ret
inc
ret
inc
pushf
bound
in
dec
add
pop
pop
mov
push
ret
mov
mov
out
jb
lret
mov
stc
push
imul
in
shlb
test
movsb
xor
popf
mov
mov
and
in
xor
push
lea
add
into
xor
aaa
add
fmuls
push
mov
sbb
cmp
mov
mov
test
cmp
je
add
mov
jne
rol
add
push
filds
clc
insl
mov
lods
cmp
jne
scas
mov
adc
outsb
and
icebp
imul
jecxz
xchg
push
push
mov
pop
cmc
and
andb
addl
mov
xor
and
jge
and
jmp
leave
enter
mov
or
ret
neg
xchg
pushw
pushf
xchg
inc
xlat
adc
out
sahf
mov
dec
pop
fsubrl
neg
adc
mov
inc
or
daa
push
and
sub
mov
pop
test
adcl
roll
adc
pop
andb
adc
dec
loope
ja
ret
jmp
repnz
mov
shlb
cmp
rorb
jmp
nop
push
push
lea
movsl
hlt
add
dec
mov
pop
pop
xchg
popa
cltd
negl
cwtl
inc
push
or
clc
loop
neg
data16
jmp
push
add
sub
notl
add
or
pop
inc
and
aas
pushf
jne
testb
dec
xchg
add
into
add
add
cmp
add
out
and
lods
xor
inc
xchg
nop
add
imul
adcb
push
dec
fiaddl
cmp
gs
push
jns
movsb
adc
shlb
incb
daa
add
or
inc
mov
sub
pusha
mov
xchg
out
add
jle
mov
cmpsl
pop
arpl
inc
add
xchg
xor
clc
sti
js
push
xchg
push
sti
cmp
pop
inc
add
or
and
out
fisubrl
popf
gs
inc
into
sub
jg
adc
inc
adc
mov
push
loop
or
mov
adc
inc
xchg
sbb
adc
cmpsb
push
inc
jbe
jg
xor
cmp
push
sub
sbb
frstor
mov
push
jp
xor
movsl
rcll
pop
jae
insb
adc
pop
xchg
pop
xor
or
dec
movsl
popf
clc
push
jg
orl
jbe
mov
push
lods
cmp
dec
mov
pop
mov
mov
sub
fdivrl
cwtl
jl
pop
add
lret
lcall
sbb
scas
jne
cmp
push
adc
sbb
mov
add
sbb
cmp
jne
inc
shlb
lret
sbb
xor
mov
test
sar
js
and
imul
jb
mov
scas
sbb
push
les
sbb
or
jnp
mov
push
pop
and
aas
orb
sub
jbe
out
jnp
add
dec
sbb
and
cmc
pop
pusha
jle
movb
inc
in
jge
inc
aas
jge
movl
shr
inc
add
fs
les
mov
cmp
inc
sbb
jo
dec
js
mov
mov
insb
std
lret
sbb
mov
hlt
lea
dec
mul
mov
js
jb
mov
adc
lock
sbb
cmpsb
mov
push
cmp
sti
mov
inc
sbb
lock
ljmp
mov
inc
hlt
mov
hlt
sarl
and
jno
pop
pop
and
sarl
je
mov
push
mov
lods
lcall
insl
sar
adc
push
rolb
add
push
sbb
int
inc
ret
and
mov
push
jnp
not
adc
xor
mov
xor
icebp
or
pop
cld
jecxz
adc
push
fnsave
out
movsl
addl
loope
test
sbb
jo
mov
daa
inc
es
fmul
inc
inc
dec
insb
xchg
add
add
inc
jne
pop
popa
push
sub
je
pop
shrb
or
dec
add
loop
dec
sub
add
lahf
push
adc
dec
cmpsl
mov
cmp
and
lcall
aam
push
lea
and
jecxz
adc
jle
push
xor
pop
aaa
jbe
jecxz
mov
mov
orb
js
in
xor
jmp
cmp
dec
jg
mov
addps
xor
pop
aas
popa
testl
shrb
mov
adc
sbb
pop
push
call
jno
stos
push
inc
or
xchg
test
subb
push
lahf
mov
mov
push
mov
clc
xor
aam
rclb
mov
ljmp
fwait
pop
push
jmp
les
or
mov
int3
test
sbb
push
push
push
popa
movsl
push
push
ret
push
adc
cli
das
push
push
push
adc
stos
ret
pusha
mov
or
pop
les
dec
xor
test
scas
repz
or
pop
or
pop
nop
add
sub
outsb
pop
cmp
inc
mov
mov
lea
inc
aam
push
mov
out
pop
and
xchg
xchg
push
and
popl
stos
sub
push
pop
testl
fidivs
inc
and
sub
ret
inc
mov
dec
or
dec
or
arpl
dec
or
sbb
or
ret
fdivrl
jmp
subl
or
jbe
ret
dec
sub
pop
adc
lea
jp
into
addb
jne
push
sbb
push
sub
push
scas
add
sub
add
test
lret
add
add
lods
loopne
je
mov
push
gs
or
xorl
cli
and
jnp
sub
fldl
and
shlb
popa
xor
lods
pop
bnd
mov
push
mov
popa
and
push
jae
push
push
sbb
out
dec
hlt
jl
movl
lret
push
add
or
pop
adc
into
add
xor
aam
inc
xchg
fldl
dec
or
mov
in
dec
cmc
lea
xor
push
gs
es
and
scas
dec
es
js
inc
testl
or
pop
push
test
popl
pop
roll
push
rolb
popa
add
sbb
scas
add
xor
pop
mov
ss
pop
lods
push
pop
call
push
mov
lret
mov
sub
loop
pop
inc
mov
adc
and
or
xchg
or
xor
mov
pop
mov
push
cmp
or
xor
add
lods
test
test
sbb
lea
in
cmpsl
sub
aad
cmp
or
push
xor
xchg
mov
mov
inc
push
push
xchg
insb
andl
or
mov
dec
mov
sbb
push
aas
cltd
mov
je
cmp
pop
add
lock
outsl
adc
shl
add
xor
or
divb
cmp
add
pop
sbb
lcall
xchg
sbb
inc
jecxz
stos
aam
je
andl
inc
pop
rol
jmp
fadds
je
or
je
or
sub
movsb
lods
fldl
adc
out
inc
hlt
xchg
jns
or
test
cmpl
mov
test
or
xor
sbb
lcall
cs
sti
movsl
stc
mov
cld
je
push
adc
adc
push
xor
inc
mov
sbb
jne
fistl
sub
dec
jnp
shlb
jbe
call
sbb
adc
mov
mov
mov
mov
ret
and
cmp
mov
or
in
cmp
or
add
je
and
adc
xor
rorl
adc
rclb
pop
loope
adcb
rcrb
dec
push
jmp
or
lret
add
rorl
rorl
sahf
aaa
lock
and
gs
dec
je
sub
add
sub
aad
mov
add
add
ror
xor
push
mov
loope
or
push
adc
imul
aad
sub
add
testl
scas
dec
movsb
into
push
lcall
push
adc
dec
sbb
add
int3
jns
ss
sub
push
icebp
and
sbb
or
mov
insb
in
test
jnp
pop
adc
das
popa
fadd
repnz
push
mov
or
xor
adc
arpl
outsb
fdivrl
notl
pushaw
cmp
cltd
bound
sbb
add
iret
shrb
sub
push
loopne
push
inc
push
push
or
lock
xchg
xor
push
call
dec
dec
add
aaa
stos
aad
xchg
loopne
inc
cmp
fcomp
bnd
lahf
push
xor
notb
sbb
loope
mov
dec
rorb
mov
and
or
xor
cmp
jmp
fs
aam
cmp
jne
pop
outsb
sbb
or
mov
mov
movsb
sahf
sub
scas
nop
sub
add
add
repz
add
jp
out
les
xchg
andl
or
fs
mov
adc
sub
inc
daa
movsb
leave
ret
xor
inc
xor
rorb
mov
sbbb
movsl
cltd
fs
sbb
clc
xor
xor
fistl
push
or
sbb
jmp
repz
and
inc
xor
mov
pop
pop
jge
loopne
push
push
and
cmp
fdivrl
in
add
jne
stc
aam
sub
enter
or
fdivrl
shll
push
test
shrb
call
rorl
fidivrs
int3
xchg
cmp
push
xlat
pop
cmpsb
sarl
mov
shrl
jns
xchg
xchg
and
inc
mov
dec
mov
sti
cmp
inc
rclb
xor
jne
cltd
in
daa
xchg
inc
xor
jl
adc
addr16
pop
call
das
xchg
add
fstpt
sbb
and
sti
xchg
xlat
fisubs
loope
loopne
dec
fisubl
mov
sbb
push
icebp
pop
sbb
fmuls
sbb
push
cwtl
pushf
mov
adc
std
ss
sub
or
jo
sbb
or
adc
sbb
rcrb
or
int
cld
test
push
dec
hlt
in
cmpsl
push
dec
push
and
lcall
push
ret
cmpsb
xor
sbb
cmp
cs
pop
subl
mov
out
mov
imul
xor
inc
enter
sbb
inc
push
mov
rolb
or
out
or
bswap
into
in
sub
and
sub
data16
imul
mov
jo
dec
movsl
mov
sbb
dec
subb
pushf
and
add
cmpsb
xor
adc
add
inc
call
add
movsl
movl
and
insb
inc
add
or
push
repz
std
mov
add
adc
dec
xor
push
cmp
subl
das
or
mov
mov
jne
pushf
loope
inc
mov
push
add
push
lock
insb
jne
adc
add
jg
jae
mov
xor
xor
or
mov
xor
cld
dec
cmpb
in
std
adc
es
pop
incl
push
addl
leave
xlat
int
decl
mov
xor
xchg
gs
push
test
test
cltd
push
push
mov
dec
and
sbb
into
pop
push
and
mov
cmpsb
xchg
or
movsl
pop
loopne
ds
ret
and
push
pusha
dec
clc
aaa
xchg
or
sbb
or
sbb
mov
add
inc
push
and
out
push
add
dec
xor
sbb
cmp
add
dec
cmpb
in
fcmovnbe
push
and
inc
cmp
add
push
xor
lea
fsts
jns
dec
jb
push
push
push
dec
push
cmp
pop
inc
adc
and
cmp
paddq
jnp
xchg
hlt
in
jae
in
mov
mov
rolb
das
lock
add
jne
add
aas
inc
dec
or
mov
dec
add
jg
inc
imul
and
call
daa
out
or
pop
shrb
sti
je
or
and
xchg
or
mov
sub
or
je
push
sbb
mov
shl
dec
xor
push
scas
mov
jbe
lods
movsb
dec
sbb
inc
adc
pop
daa
ljmp
les
sbb
dec
stos
dec
xchg
js
push
push
inc
cld
xor
sub
ret
dec
js
adc
xor
fmuls
sub
data16
ret
lock
push
pop
repz
mov
xchg
add
jl
sbb
xchg
and
push
xor
add
in
xor
in
mov
push
jmp
add
dec
adc
and
push
shlb
mov
or
adc
push
mov
xor
and
xor
cs
jnp
xor
nop
jecxz
arpl
pop
cltd
push
lock
xchg
sbb
imul
sarb
out
inc
jne
mov
dec
call
lret
test
insl
cmovp
gs
movb
pop
sbb
hlt
mov
push
xor
mov
add
leave
ds
or
mov
test
adc
cli
adc
fisttps
pop
arpl
sbb
inc
lock
loopne
sbb
push
add
jns
pop
in
jecxz
fidivs
sbb
rcrl
cltd
or
aaa
stos
mov
sbb
jge
aad
push
or
je
call
hlt
je
je
dec
cmp
aas
cltd
adc
xchg
aad
call
add
pushw
int3
je
push
adcb
jnp
lods
loopne
lea
mov
xor
jge
mov
je
cmp
push
sub
push
mov
fsub
mov
push
or
dec
push
inc
test
dec
mov
cmp
cwtl
add
sar
fildl
add
inc
push
outsb
jg
dec
inc
dec
dec
dec
hlt
add
pop
je
or
push
fimull
aam
cmp
push
sbb
daa
xchg
cmc
cmpsb
shlb
mov
jmp
in
adc
mov
cld
adcl
test
mov
test
xor
decl
movsb
cmp
fs
adc
shrb
push
dec
mov
xchg
jne
call
xor
push
pop
int3
mov
inc
push
add
mov
cld
hlt
adc
and
pusha
icebp
cmp
mov
adc
lea
mov
jl
add
or
in
out
add
xchg
mov
mov
mov
push
sbb
pusha
lcall
lcall
mov
pop
xorl
enter
imul
fsubr
dec
or
mov
inc
pop
je
adc
iret
out
push
lods
mov
add
pusha
dec
xchg
adc
and
fwait
es
and
cmp
enter
push
add
xchg
cmp
and
addr16
and
add
cmp
and
push
jg
pusha
mov
cmovl
xor
lea
jne
ljmp
pushf
out
xor
and
sbb
adc
sub
push
jbe
insb
or
inc
scas
xor
push
xchg
stos
in
cmp
xchg
addr16
push
cmp
sahf
jecxz
cmp
push
add
nop
jl
mov
fnstcw
or
pop
jge
push
mov
xchg
or
in
enter
in
fmuls
roll
inc
xchg
mov
cld
hlt
add
rorb
inc
dec
in
push
leave
out
sub
rcll
pop
jge
jmp
or
mov
sbb
shl
enter
mov
adc
jecxz
lds
in
mov
add
mov
sub
mov
iret
rcrl
das
mov
dec
shrb
jg
add
ret
jmp
sub
adc
push
test
data16
cmpsb
add
jae
int
pop
adc
add
int3
or
push
or
loopne
ds
add
pusha
cld
and
loope
aam
push
mov
inc
adc
ret
lock
out
cmp
ja
dec
mov
push
mov
dec
sbb
mov
movsw
add
mov
and
outsl
imul
fists
sbb
sub
xor
rclb
mov
dec
out
add
xchg
jge,pt
fs
daa
push
inc
pop
sarb
jge
jl
push
testb
and
cs
push
les
add
dec
inc
or
inc
or
add
int3
jbe
push
push
add
sub
and
push
jl
cmp
enter
or
add
testl
or
out
pop
cmp
jne
jg
xchg
pop
mov
mov
xlat
nop
push
jp
mov
xchg
mov
les
pop
xchg
xchg
jg
lret
stos
scas
mov
add
cwtl
dec
and
or
arpl
or
pop
push
int3
or
inc
cmp
flds
cmpsb
jl
sub
sbbl
mov
movsb
or
sub
enter
sahf
or
jge
dec
or
sbb
jge
jp
add
add
pop
jecxz
jnp
addb
punpckhbw
gs
mov
aam
adc
in
popf
popf
icebp
lret
jle
adc
test
aaa
jle
sbb
movsl
iret
fldt
cmp
pushf
outsb
inc
pop
mov
mov
and
or
add
rcl
jecxz
lret
pop
ret
les
dec
jecxz
mov
dec
push
fsubl
negl
adc
adc
fmull
aad
nop
or
and
decl
mov
into
add
mov
iret
mov
ja
cmpsl
jne
call
push
push
pop
aaa
clc
xor
dec
in
jmp
adc
adc
and
das
xchg
jb
sub
push
lods
subb
xchg
std
fdiv
cmp
jns
push
add
or
adc
cmpl
and
mov
adc
test
mov
je
sbb
out
shll
push
sti
adc
leave
push
xor
lret
enter
push
cmp
dec
orb
imul
cmp
xchg
notb
inc
ret
inc
sarb
or
mov
adc
add
dec
mov
cmpsl
push
cmp
xchg
push
dec
nop
pushf
or
and
test
adc
push
or
inc
popa
stc
cli
inc
push
dec
repz
jle
add
test
push
std
dec
push
cmp
push
hlt
out
lea
add
mov
cmp
push
addl
push
and
push
cmc
xchg
mov
leave
inc
jmp
xor
mov
ret
add
mov
add
sub
in
push
or
es
jp
xor
scas
and
inc
dec
pop
enter
scas
sbb
and
xchg
in
or
or
mov
sbb
stos
pop
stc
add
shlb
mov
sub
or
fdivrl
jge
pop
add
and
decl
cmp
aas
ja
push
and
pop
mov
lcall
cwtl
hlt
mov
push
repz
mov
xchg
mov
inc
add
pop
notb
xor
mov
dec
testl
inc
adc
push
pop
andb
add
sbb
imul
xchg
or
sti
cmp
and
inc
fdivs
andl
out
les
sbb
push
jmp
add
or
iret
or
cmp
into
inc
lahf
or
or
xor
iret
push
roll
mov
jnp
lea
dec
lea
scas
xor
shlb
inc
ljmp
aad
roll
out
ret
icebp
lcall
mov
or
add
cwtl
push
or
add
ret
jne
in
xlat
mov
mov
seto
rorb
xor
mov
adc
test
and
pop
ja
call
ret
gs
imul
push
push
add
mov
shlb
adc
sub
xchg
xor
or
or
in
inc
push
pop
push
jmp
xchg
mov
push
push
in
pop
or
outsb
loopne
hlt
fcoml
hlt
mov
out
and
inc
mov
iret
sub
imul
push
jno
jecxz
dec
or
add
add
sub
dec
fcompl
push
adc
inc
inc
or
cmp
and
push
dec
xchg
nop
pop
adc
testb
mov
xchg
lods
sub
sub
or
xchg
addb
mov
mov
add
push
dec
mov
rcr
jns
mov
pop
rclb
adc
inc
fcoms
clc
sub
xchg
fldl
lds
and
push
es
cwtl
push
and
mov
and
loope,pt
pushf
fists
test
loope
pusha
cld
ret
add
jg
cmp
dec
sbb
mov
mov
xchg
sbb
mov
push
push
sbb
lods
and
arpl
add
pop
aam
out
sbb
je
add
sub
adc
add
add
ret
and
push
add
add
jne
xor
sarl
cli
sahf
mov
pop
mov
ljmp
cld
lock
call
movsb
cld
sub
mov
ret
addb
add
jbe
sub
lea
pop
rcll
push
push
fisubrs
inc
inc
orl
ljmp
mov
aaa
mov
mov
and
jmp
adc
lcall
push
and
pusha
inc
test
or
pop
dec
mov
ss
push
fdivs
push
dec
dec
movsl
mov
push
xor
sub
sub
lea
jne
and
filds
mov
in
shrb
popf
xchg
mov
cltd
push
leave
mov
jg
add
xor
repnz
mov
sbb
mov
fisttpl
xor
imul
in
cmp
adc
lcall
sub
mov
push
adc
mov
or
mov
push
push
mov
sub
inc
inc
cld
add
jmp
sub
push
aas
inc
sbb
int3
scas
repz
out
add
push
shll
sub
add
xor
and
cmp
or
push
rolb
pop
jle
add
sub
sub
das
das
sub
js
xor
cmp
inc
fcompl
lock
adc
dec
cmpsb
lret
inc
push
adc
and
xchg
cmpb
cmc
movl
rolb
push
sbb
add
fprem
pop
lods
add
sub
cltd
stos
adc
mov
xchg
add
decl
sbb
pop
ss
stos
or
scas
lea
lods
fiadds
mov
add
ljmp
adc
or
jo
xor
movsb
jae
nop
adc
push
icebp
pop
or
es
scas
insl
inc
push
roll
mov
subb
add
pop
pop
add
adc
add
dec
outsl
and
subb
dec
movb
in
add
mov
mov
inc
lea
loopne
int3
in
test
inc
cltd
push
ljmp
and
lock
pop
inc
popa
cmp
je
ret
or
sahf
int3
je
cwtl
add
pop
cmpsb
ja
cmp
cmp
or
sbb
cmp
pusha
or
mov
dec
cltd
jp
add
adc
adc
shlb
fcomps
sub
push
popf
jne
arpl
mov
sub
xchg
push
js
loope
dec
mov
faddp
data16
sti
rep
bound
fcmovne
rorl
adc
jmp
sub
jae
adc
fimuls
cltd
shlb
add
or
inc
sbb
andl
add
jnp
and
jne
cwtl
dec
mov
inc
push
push
jle
cmpsb
inc
mov
and
push
mov
or
adc
loopne
adc
push
sub
fdivrs
push
data16
inc
sub
jl
pop
int
adc
or
or
xor
cmp
fsts
testb
jbe
btr
mov
xchg
pop
mov
xchg
fwait
mov
fdivs
cmpsb
sub
rolb
cmc
xor
inc
inc
push
test
pop
push
test
das
add
lret
sbb
cmp
mov
add
mov
and
pop
sarb
hlt
into
mov
sub
jmp
and
xor
xchg
or
ret
jl
inc
shl
or
shlb
cld
sub
pop
lea
lods
push
xchg
push
xor
push
mov
inc
or
mov
pop
rolb
jl
or
xor
test
outsl
xor
pop
inc
inc
movl
add
jnp
add
das
mov
push
push
push
cmp
cmp
mov
push
inc
sbb
adc
mov
rcr
push
push
mov
push
or
xor
push
add
rclb
push
mov
fdivs
mov
mov
or
fdivrp
and
mov
gs
ret
pushf
adc
push
cmp
divl
incl
mov
imul
pminsw
push
sbb
ret
mov
adc
arpl
cmp
push
push
and
add
out
ret
cmp
shll
ret
inc
idivl
dec
push
pop
pusha
xor
xor
cmp
or
sti
dec
adc
decb
add
push
lock
roll
or
jo
xchg
or
fs
std
jo
mov
xor
test
stos
push
and
je
mov
dec
xchg
and
testl
test
pop
cltd
mov
inc
das
fimuls
mov
add
cmc
adc
and
or
icebp
jl
ret
and
shlb
sbb
cmp
jnp,pt
jno
dec
adc
or
insb
fcmovnb
pop
add
push
mov
add
in
sub
push
test
jp
cmp
mov
jle
and
mov
sbb
adc
xchg
cmp
or
xlat
add
add
sbb
and
or
push
test
or
jns
shrl
mov
movsl
enter
testb
sbb
adc
insb
mov
push
inc
stos
push
add
or
cmp
mov
adc
popa
insb
idivb
stos
loope
insl
push
adc
inc
lea
rorw
push
clc
inc
mov
ret
cmp
inc
sub
cmp
or
add
or
mov
outsl
out
adc
push
mov
add
clc
jbe
or
add
shlb
js
mov
ret
lds
pusha
sbb
xor
inc
ret
pop
sub
add
mov
inc
mov
push
repz
mov
dec
mov
or
push
inc
xchg
jnp
lea
or
xchg
push
fiadds
mov
fadds
and
ja
lea
mov
sub
cmp
lock
push
sub
inc
subb
rcll
movsl
cmp
xlat
daa
stos
push
ss
pop
in
or
loope
mov
and
mov
stos
lea
sub
push
push
aad
pop
daa
imul
add
cmc
cld
pop
nop
adc
inc
xchg
popa
lea
sbb
aas
imul
sub
and
mov
xchg
mov
xor
mov
mov
test
rcll
dec
leave
gs
or
test
or
pop
or
push
les
stos
dec
sbb
enter
arpl
push
in
sbb
dec
add
jne
sub
push
incb
out
jp
cmp
lds
sub
into
xchg
call
jb
pushl
mov
lock
loopne
or
jmp
push
mov
or
clc
jae
adc
and
es
mov
rolb
adc
jge
jo
dec
add
jge
cmc
and
adc
push
out
outsl
inc
jns
mov
sub
xor
and
lods
add
imul
inc
and
movsl
inc
sub
lahf
pop
adc
test
popf
sub
mov
inc
push
jo
xchg
ret
xor
pop
jb
cmp
mov
test
sub
mov
insb
and
loop
icebp
adc
insb
rclb
daa
or
loop
fstp
in
sub
arpl
jbe
and
adc
mov
outsb
fcmovnb
jb
arpl
arpl
in
insb
and
ja
rcll
pop
insl
adc
fldt
loope
sbb
sbb
cmp
in
pop
xlat
and
add
outsl
xchg
inc
out
and
add
push
inc
xor
jle
addb
or
sbb
mov
adc
js
jne
repnz
xor
add
push
pusha
test
repz
inc
pop
daa
add
imul
loopne
or
roll
lret
or
mov
iret
shll
cwtl
cs
out
imul
add
lret
inc
inc
aas
nop
add
nop
and
nop
add
js
xchg
add
nop
add
nop
add
nop
and
add
in
or
add
add
cmp
add
sub
jb
add
cs
jg
pop
or
jmp
push
pop
cmp
pop
push
cmpb
push
sub
or
xor
mov
mov
mov
dec
aas
imul
shr
cmp
daa
inc
cld
or
jmp
push
shlb
add
in
lock
or
push
adc
xchg
inc
mov
adc
sbb
adc
pop
pop
mov
jle
clc
movsb
lret
testb
repz
adc
inc
adc
sub
and
fists
ror
add
imul
rcrl
adc
lea
add
unpcklps
sub
adc
pop
mov
cmpsl
jge
mov
pop
pop
inc
jecxz
xor
inc
mov
call
es
push
xchg
push
push
pop
sub
loopne
sahf
sub
cs
sbb
imul
dec
loopne
mov
subb
or
dec
jmp
mov
mov
adc
xchg
inc
fstl
aad
cmp
orl
icebp
add
andl
adc
push
mov
fimull
repnz
call
pop
ds
jp
test
lcall
push
and
cld
add
sub
leave
movsb
scas
xor
aad
test
loopne
and
pop
adc
rorl
outsl
add
add
push
add
je
mov
jnp
fadds
gs
dec
xor
mov
div
or
jno
xor
insb
mov
in
lret
test
add
fsubrs
stos
pusha
and
loopne
js
ja
jne
and
pop
add
je
daa
add
add
pop
push
add
mov
test
sbb
add
dec
lret
je
push
add
pushf
sbb
lahf
sub
cmpb
loope
les
or
xor
and
ds
unpckhps
ret
add
inc
sub
repnz
repnz
fistl
or
sbb
add
mov
cmc
addr16
test
sbb
jl
sub
mov
test
inc
pop
lock
ljmp
jecxz
jl
sti
jg
dec
mov
fcmovu
neg
cwtl
push
and
arpl
jno
dec
adc
adc
pop
or
stc
mov
sbb
cmp
imul
push
je,pt
push
test
push
in
dec
sbb
test
inc
test
or
or
dec
sub
out
into
mov
xchg
add
repz
add
and
and
add
sbbl
jl
mov
or
lock
adc
jb
daa
xchg
rorb
or
iret
fnsave
mov
fsubrl
or
sub
in
sbb
mov
add
hlt
and
cmp
outsl
cmpsb
inc
add
push
or
jae
and
inc
mov
or
ss
mov
push
mov
push
jecxz
addr16
pop
adc
lods
sbb
xor
push
and
xor
push
inc
adc
sbb
clc
xor
adc
inc
cmpsb
repnz
fsubp
jp
jge
pop
pop
in
out
or
pop
repz
fmull
pop
std
sub
lahf
cmp
push
xorb
and
lock
inc
popa
add
out
sbbb
cmp
sub
or
and
fsubr
mov
lock
scas
mov
js
fwait
sbb
mov
adcb
adc
or
or
cld
sti
decl
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
and
outsb
and
stos
mov
add
cmp
js
jge
mov
pop
and
cmp
jl
cmc
sub
adc
lods
sbb
outsl
sbb
lcall
iret
and
cmpb
pop
dec
add
ds
pop
fsubrs
testl
in
xorl
add
sbb
cmc
mov
bound
push
test
loopne
xor
sahf
sbb
mov
add
jl
call
add
add
add
or
orb
pop
pushl
rcrl
or
roll
aaa
dec
call
add
mov
dec
and
in
and
mov
mov
pusha
cmc
push
sti
iret
js
inc
shlb
insl
daa
cmp
mov
adc
and
les
jmp
or
cmp
xor
sub
or
insb
stos
mov
into
loopne
mov
fisubs
adc
mov
add
inc
das
lret
push
pop
pop
sbb
and
pop
push
adc
inc
dec
push
aaa
push
add
adc
mov
sub
or
or
mov
pop
ret
cli
push
push
xor
and
jle
push
or
mov
xchg
or
je
push
cli
cmp
adc
adc
and
lcall
inc
pop
ret
pop
clc
mov
sub
xor
mov
out
rcrl
imul
push
fs
pushf
pusha
imul
pop
adc
push
push
pop
pop
int3
dec
loopne
pusha
fs
push
sti
push
js
and
cmp
sbb
hlt
pop
mov
jne
ret
lea
sub
xor
cmp
sub
dec
add
sbb
jo
into
add
sub
test
and
jo
or
push
sub
adc
push
movl
clc
jmp
push
mov
and
jp
js
push
add
outsl
add
inc
shll
fstpl
pop
mov
cmp
and
mov
push
add
or
nop
and
scas
pop
rclb
ret
sbbb
inc
fnsave
int3
jle
and
fs
jno
inc
push
outsl
inc
adc
or
test
ret
sub
mov
mov
push
iret
or
lods
movsb
adc
and
pop
or
xchg
outsl
nop
push
pmulhuw
jmp
inc
and
xchg
or
and
or
movb
and
add
gs
pop
stc
ret
mov
jmp
inc
jl
xchg
icebp
icebp
mov
jmp
gs
mov
mov
adc
xchg
sbb
lds
adc
or
or
nop
jo
daa
out
stos
and
stos
outsb
inc
xchg
sub
sub
ss
in
sbb
inc
dec
mov
mov
shlb
mov
loopne
mov
loopne
or
inc
mov
lea
push
iret
sahf
fsubrl
dec
insb
or
pop
fsubrl
adc
xor
sbb
scas
imul
or
mov
lock
je
or
je
cmp
push
pop
adc
and
movsl
push
add
add
mov
lock
dec
clc
hlt
jo
pop
mov
adc
mov
mov
and
jle
adc
mov
je
push
jle
mov
add
and
and
arpl
ret
sub
dec
insb
mov
loopne
and
bnd
mov
jmp
and
mov
insl
rcrb
mov
js
pusha
and
ss
sub
adcl
fnstenv
fcoms
or
add
bound
pop
outsl
dec
and
push
cli
push
dec
sbb
dec
rorl
push
dec
enter
inc
add
sub
loop
add
adc
das
jnp
sub
std
leave
add
dec
sub
in
fcom
or
fstps
sbbl
cmp
testl
movsl
add
xchg
popa
push
or
add
jle
into
push
add
push
rorb
add
icebp
roll
rcl
sbb
mov
mov
inc
mov
lret
sti
push
mov
inc
mov
pop
lret
or
cli
xor
inc
addr16
push
push
mov
korb
jl
cmp
jg
mov
sub
xchg
push
aam
leave
and
cmpsl
adc
pusha
pop
push
mov
sbb
push
push
mov
push
dec
xchg
or
clc
loope,pn
xor
cli
dec
push
xor
sub
dec
sahf
jg
add
stc
sub
lea
sbb
cs
xchg
mov
mov
jg
add
or
pushl
or
add
xor
sbb
shrl
or
add
adc
mov
inc
adc
repnz
mov
mov
adc
movsb
add
pushf
dec
inc
mov
add
add
or
add
addb
push
inc
push
pop
xchg
aam
jmp
xchg
xchg
dec
sahf
loopne
or
lret
pop
mov
int3
ja
mov
jg
adc
sbb
or
xchg
and
jecxz
sub
xchg
inc
out
push
cwtl
push
or
jmp
bound
jb
popf
arpl
adc
mov
or
pushf
je
add
push
andb
outsb
lret
lock
sub
mov
jmp
mov
test
stos
mov
or
js
sbb
cmc
and
or
mov
leave
push
push
adc
faddl
xchg
sub
shr
jmp
in
mov
xor
sbb
jnp
cmp
decl
nop
mov
jae
jo
sub
jae
dec
sbb
push
inc
or
jae
and
nop
fdivp
divb
cmp
jo
daa
sub
or
sub
push
es
inc
sub
xorb
or
fiadds
dec
nop
pop
mull
cwtl
add
fisubs
cmc
frstor
sub
cmp
push
fcoms
popa
loopne
mov
in
cmp
push
fldl
rcll
sbb
dec
in
jl
cmp
push
cmp
iret
outsl
fldt
adc
jne
push
divb
repz
cmp
clc
jne
or
jne
or
cld
idiv
cmpsl
das
rcr
lret
andl
fisttps
add
xor
sahf
pushf
dec
xchg
mov
mov
mov
push
test
fcomip
das
lods
pop
imul
mov
mov
mov
or
aam
arpl
xor
jo
test
lea
fstl
jecxz
fcoms
insl
mov
decl
push
sbb
popa
xlat
rcll
lea
fmuls
out
lcall
add
dec
jg
add
inc
or
cmc
sub
loopne
and
or
sbb
xor
loopne
fsubl
inc
test
pop
mov
or
mov
out
fldt
sti
movsl
pmaxub
cmp
lcall
sub
je
inc
sbb
sub
addb
cltd
lods
loope
push
inc
aaa
cmc
push
or
faddl
jb
push
mov
test
jmp
movsb
test
hlt
xor
add
add
loopne
push
sub
push
test
les
test
dec
iret
lock
sub
pop
dec
loop
loop
mov
jno
das
sbb
orb
push
add
xchg
rorl
jns
enter
jbe
jns
dec
sub
xchg
scas
mov
xor
add
in
rclb
cmp
das
jno
cmpsl
pop
adc
xchg
iret
add
or
mov
stos
in
mov
xchg
sub
ss
or
push
movsl
test
dec
out
or
lret
fdivrs
adc
xor
adc
shrb
test
in
and
or
test
aaa
mov
lea
out
and
lods
sub
mov
and
leave
imul
push
or
jno
adc
cwtl
mov
add
push
in
stc
and
push
pop
pop
lods
or
enter
testl
es
xchg
fmull
int3
shr
or
or
and
push
dec
packssdw
and
or
fmulp
les
dec
fs
cltd
fdivs
in
call
adc
adc
mov
shlb
pop
je
rclb
mov
stos
mull
lods
ss
pop
sarl
inc
shlb
pop
cmpsb
in
inc
xor
xor
ret
mov
je
xadd
inc
lds
clc
testl
aas
or
cld
mov
add
add
add
and
fcmovnb
pop
mov
cli
or
mov
push
int
cli
inc
les
imul
ss
sbb
add
in
stos
out
lds
cmpsb
jmp
jg
test
add
ss
add
sub
cmp
imul
sbb
dec
xchg
loopne
fadds
mov
imul
push
inc
sbb
stos
inc
xchg
sbb
sub
loopne
mov
or
paddusw
or
mov
mov
add
jne
mov
push
fmuls
push
cli
pop
pop
pusha
lret
and
pop
push
mov
jb
add
adc
mov
xchg
cmpsb
jae
jmp
inc
in
pop
sbb
mov
add
rclb
lods
test
push
push
movsl
mov
das
ret
cmp
xchg
orl
test
add
xchg
mov
fildl
push
and
movsb
sub
smsw
lret
xchg
ljmp
sub
outsb
sub
mov
insb
test
stos
int3
mov
and
xor
xor
push
pop
pminub
pushl
xor
or
add
pop
and
aam
sarl
pop
loope
sbb
dec
jmp
dec
ss
and
in
stc
inc
add
and
push
fwait
sbbl
mov
xchg
xchg
adc
push
add
push
aam
leave
pop
mov
jle
andb
push
push
dec
cmp
clc
push
xlat
push
fldl
adc
xor
test
enter
movsl
sbb
pop
sub
inc
cmpsb
mov
xchg
cltd
lods
cmp
pusha
pop
ret
fs
clc
inc
dec
sub
jge
xchg
and
subl
mov
lods
inc
push
xor
cmc
jecxz
lea
push
insl
fmulp
cmp
dec
loope
sub
and
pop
adc
cmpsb
xchg
add
sbb
int
ja
test
and
mov
mov
mov
pop
pusha
adc
jno
pop
subb
pop
dec
movsb
push
lahf
push
ss
xor
xor
out
pop
mov
dec
lock
jne
add
or
dec
add
and
jnp
aad
jno
test
pop
and
into
inc
dec
loopne
pusha
in
mov
jo
mov
pushf
rol
add
imul
ret
negb
pop
xorb
add
push
sbb
or
ret
and
jle
repnz
push
or
ja
pop
xchg
mov
fs
inc
lods
adc
data16
mov
cmpsb
sbbb
push
in
les
push
cmp
addl
sbb
jae
aad
sti
movsl
inc
fisttpl
push
movsl
xor
aaa
fisubrl
or
shrb
xchg
xchg
inc
insb
jne
adcl
das
adc
test
adc
xchg
movsl
adc
mov
xchg
sub
lahf
popf
mov
xchg
ds
test
or
pop
and
out
aam
sub
movsb
lds
lods
lds
sbb
cltd
cmpsb
push
lods
ss
lds
popf
nop
adc
mov
test
adc
popf
rclb
mov
pusha
or
mov
sbb
cmp
xor
or
push
jl
sub
ja
stos
and
cmp
in
imul
leave
mov
movsb
and
popf
ss
inc
sub
repz
adc
jp
ljmp
sub
adc
mov
sbb
repnz
jns
and
sbb
sbb
add
sbb
in
mov
and
cmp
push
add
repz
cwtl
cli
jle
cmp
jnp
pop
imul
cmp
test
cmp
nop
or
add
nop
xor
xchg
fimull
sub
mov
adc
jo
mov
cmp
fsubl
mov
pop
stos
loopne
pop
shlb
xor
aaa
mov
add
pop
lods
shll
add
add
cmp
add
pushl
cmpsl
and
aas
lods
out
push
mov
out
push
xor
sub
mov
pop
loop
call
adc
popf
cld
sub
mov
lahf
sbb
lea
dec
movsb
jle
add
clc
in
dec
shlb
jg
add
ret
dec
dec
je
enter
subl
adc
mov
sbb
aaa
add
pop
lret
call
sbb
test
rorb
addb
dec
mov
dec
push
fs
out
insl
add
xchg
push
mov
mov
inc
test
leave
push
dec
or
and
cmp
orl
jmp
jecxz
jmp
test
add
xchg
adcl
insl
mov
mov
xchg
cmc
inc
inc
sub
add
xor
dec
aaa
push
mov
imul
js
pop
ja
sub
sub
iret
mov
jne
sub
les
aad
adc
push
lea
stc
push
loopne
sarb
sbb
movsb
cmp
cld
std
push
add
adc
add
adc
ret
stos
sbb
jne
xchg
std
mov
xlat
jle
inc
ret
xor
popa
cmpsl
or
pop
scas
push
xor
fldcw
inc
stos
pop
add
xchg
addr16
aas
mov
sahf
pop
add
nop
out
add
inc
ret
add
pop
enter
aas
rorb
pop
xor
push
and
inc
mov
adc
push
xor
and
jbe
loop
aas
xor
push
and
push
stc
adc
leave
sbb
das
popa
test
ffreep
sub
pop
cmpsb
clc
or
incl
je
sbb
cmp
adc
cltd
jo
jns
adc
lock
xchg
loope
xlat
dec
push
dec
add
adc
and
push
shrl
insl
pop
test
add
sub
sahf
mov
push
push
test
loopne
fwait
test
pusha
inc
push
or
adc
int3
mov
pop
lret
add
push
or
mov
mov
dec
nop
push
sahf
xorl
xchg
out
xchg
inc
pop
xor
pusha
pop
test
lret
es
or
sahf
xchg
pop
enter
nop
or
pop
insl
or
xchg
dec
mov
mov
add
xchg
mov
push
adc
cmp
add
mov
inc
xchg
mov
mov
or
mov
sub
cwtl
clc
lcall
sbbb
je
xchg
lcall
sub
dec
add
adc
inc
sbb
and
test
pop
cmc
sbb
bound
or
push
push
es
enter
mov
mov
cwtl
push
pop
gs
sbb
sub
pop
sub
jp
mov
mov
and
push
loope
push
pusha
xchg
movsl
cmc
insl
and
addl
sub
sbb
negl
pop
cmp
and
inc
xchg
loope
cmpsb
cld
xor
mov
and
loope
jecxz
sub
ror
mov
and
shll
and
inc
stos
ss
xchg
loop
outsl
inc
add
les
scas
movsb
pop
cli
sub
push
jge
xor
and
adcb
sbb
sbb
insb
imul
pop
sbb
sub
insl
fldcw
inc
lods
adc
inc
in
push
or
pop
mov
dec
sbb
adc
test
xor
push
sbb
mov
imull
and
sbb
enter
ret
adc
sbb
into
mov
das
in
push
mov
addb
in
fsubrs
les
fbstp
imulb
inc
mov
xchg
fwait
bound
inc
mov
cld
hlt
aam
stc
jnp
subl
ds
add
shll
mov
cmc
add
jg
adc
mov
loop
inc
jmp
js
mov
pop
outsl
adc
xor
addl
add
and
xchg
push
xchg
mov
lret
adcl
add
pop
add
aam
sub
loopne
jge
int3
and
xchg
xchg
push
lldt
popa
in
cmp
inc
int3
jne
scas
inc
push
pop
stos
pop
xchg
or
push
rorl
inc
and
fnstsw
les
jle
aam
or
inc
dec
mov
flds
adc
inc
and
mov
adc
add
cmp
add
adc
push
add
inc
ds
and
xlat
inc
sub
xor
push
in
add
push
mov
push
mov
jecxz
mov
jnp
mov
xor
or
ja
push
xchg
push
in
sti
std
jle
lahf
mov
cmp
stc
xchg
xor
iret
mov
or
dec
mov
cs
test
xor
push
jle
mov
push
adc
xchg
adc
xchg
scas
shll
pop
rolb
or
dec
mulb
add
jne
aas
and
div
inc
mov
sub
cmp
jae
mov
xor
adc
mov
and
push
xor
cmp
icebp
fisttpl
out
pop
mov
push
cmp
xchg
sarb
sub
jmp
rcrl
stos
inc
notl
lahf
stos
sub
mov
push
push
fimull
mov
pusha
movsl
and
adc
pop
adc
insb
pop
sub
sub
inc
mov
and
dec
inc
xchg
rcr
dec
sub
xor
stc
std
add
es
ja
ror
das
add
or
in
sti
jmp
imul
mov
add
inc
mov
call
icebp
or
add
pop
and
cmp
push
sbb
aam
mov
mov
pop
andb
adc
mov
pop
fnstsw
adc
jmp
and
jne
jmp
adc
add
outsb
fwait
jnp
ret
and
cmpsb
xchg
jmp
mov
mov
pop
adc
in
insb
cltd
cmp
clc
std
xor
lds
push
and
outsl
ds
sub
or
lret
je
pop
iret
add
testl
xchg
push
popa
lret
pop
mov
insb
cmp
rcrb
add
loopne
add
adc
xor
add
dec
mov
lock
call
or
push
and
popa
outsl
mov
sbb
add
loopne
les
je
and
add
jne
or
or
mov
sub
fldl
xlat
dec
jo
push
sub
movzbl
or
loop
jg
sbb
fsubrl
push
or
rolb
fldcw
or
out
out
cmp
add
pop
hlt
mov
fsub
pop
fsubrp
inc
nop
pop
test
add
mov
inc
loopne
inc
jg
add
fldlg2
icebp
and
xor
push
shlb
xchg
insl
and
add
outsl
sub
cmpl
dec
lcall
adc
add
aam
mov
jbe
iret
mov
ss
sbb
ss
push
inc
cmp
sti
adc
ljmp
imul
or
sub
or
and
or
add
cmp
xchg
jg
aaa
pop
stc
push
push
iret
xorb
pop
dec
iret
repz
jne
int3
sub
jmp
fnstsw
sbb
xchg
ss
mov
or
xchg
loopne
push
in
or
fnstcw
sbb
pop
lock
iret
pop
sbb
xor
or
das
mov
xchg
clc
sbb
cwtl
in
dec
push
dec
and
xor
inc
jbe
testb
pushf
inc
push
push
fs
adc
push
push
fs
push
push
fs
adc
hlt
negb
or
sub
dec
repnz
and
aas
or
pusha
aaa
add
and
pop
and
push
push
xchg
and
ret
outsb
or
xor
pushf
and
cmp
repz
sbb
push
jecxz
xor
aaa
add
dec
sbb
ret
les
xchg
or
mov
jl
pusha
gs
mov
add
and
lret
ficoms
cmp
and
dec
fs
lret
xchg
gs
xchg
pop
or
jl
sbb
adc
mov
in
sub
fnsave
dec
aam
popa
adc
call
sbb
adc
jns
out
add
and
xchg
or
add
and
dec
push
push
fs
sbb
inc
leave
adc
lret
fs
and
je
sub
xlat
aam
mov
adc
ror
cmp
mov
cwtl
mov
and
or
dec
lea
ds
jecxz
fstpl
adc
push
call
sbb
out
sahf
out
inc
push
gs
out
sahf
xchg
sbb
iret
repz
and
cmp
repz
cmp
mov
sbb
adc
sahf
out
jns
fwait
lods
into
popa
mov
cs
sub
push
adc
or
cmp
and
imul
xor
inc
lock
adc
add
cmpsl
aas
stos
cmpsl
or
pusha
lods
sbbl
ffreep
lcall
dec
pop
les
bound
push
mov
mov
lods
ret
add
pusha
dec
insl
inc
lods
inc
lret
sti
mov
int
jb
dec
add
mov
push
ret
rclb
in
addr16
push
or
sbb
loope
push
sub
movsl
lds
and
push
jmp
fildl
pop
sub
ret
fs
inc
push
cmp
aaa
shrb
das
adc
jecxz
stos
push
sbb
js
xor
and
jo
fdivl
int
push
sahf
inc
add
or
or
push
xor
xchg
mov
or
sbb
das
add
mov
adc
rclb
mov
enter
xchg
sub
and
dec
call
icebp
push
xor
rorl
leave
bound
and
push
movsb
popf
addr16
inc
and
imul
add
adc
aam
xchg
andl
sub
scas
mov
cmp
cmp
lods
cmp
addr16
and
ds
icebp
cld
mov
xor
test
es
rcll
sub
daa
jnp
push
inc
inc
or
mov
cmp
pop
loopne
call
call
cmp
psubsb
push
xchg
addb
xchg
pop
mov
add
cmp
rolb
unpckhps
push
inc
mov
dec
int
test
andb
cld
les
movsl
lock
mov
orl
mov
push
or
sbb
nop
inc
mov
cltd
add
pusha
test
pushf
xor
ret
or
mov
out
mov
adcl
cmpsb
add
adcl
sub
cmp
push
or
and
push
test
ffree
add
jbe
loopne
and
fs
pop
jns
imul
popa
push
inc
cmp
test
repnz
mov
add
dec
push
mov
xor
add
call
xchg
in
jb
in
ret
rcrl
adc
divb
jmp
push
mov
fcomps
add
pop
sub
mov
movsb
dec
mov
dec
cltd
and
inc
ja
sub
movsb
pop
ds
push
test
mov
test
lret
stos
sbb
adc
leave
and
nop
lock
ret
mov
push
xor
out
in
add
fs
jbe
pop
adc
in
test
mov
xchg
stos
bound
repnz
sub
test
add
clts
nop
int
add
cmp
add
fiaddl
sub
pushf
adc
adc
adc
push
add
adc
in
loop
jne
dec
or
sub
test
fsubl
fimull
insb
add
fidivl
or
std
or
les
addb
add
shll
sbb
inc
or
adc
mov
xchg
adc
mov
adcb
adc
mov
mov
and
inc
jo
mov
jb
jmp
add
mov
and
pop
dec
xchg
add
add
inc
jbe
js
lea
adc
add
test
sbb
fldcw
pop
pop
daa
sbb
cltd
std
adc
inc
mov
mov
push
mov
sbb
xchg
test
or
add
rorb
jg
ret
shrl
scas
or
lods
cmpb
pop
push
xchg
sub
cmp
or
repnz
sbb
push
pop
enter
add
or
or
xchg
jge
add
sbbb
inc
pop
push
leave
pop
and
push
or
or
fistpl
roll
xor
lods
lea
mov
je
bnd
xor
xor
aad
adc
subl
push
mov
adc
movsb
sub
cltd
dec
add
sqrtps
pop
test
xor
inc
sub
test
lods
and
pop
adc
push
push
jg
shrl
adc
or
mov
adc
les
or
adc
mov
inc
adc
mov
popa
jo
leave
push
cmp
dec
sbb
mov
test
adc
adc
push
bound
das
add
push
daa
sub
sbb
dec
add
add
rclb
xor
imul
aaa
lods
inc
push
add
arpl
mov
or
xchg
adc
push
mov
test
push
cmp
xor
sbb
dec
cmpsl
push
lcall
add
push
pause
bound
push
shll
xlat
mov
stc
add
adc
push
lods
sub
mov
cmc
jno
cmpb
je
adcb
jns
and
cmp
in
cmp
out
or
adc
dec
addl
push
adc
pop
aad
mov
ret
ficompl
movsl
sbb
les
dec
and
mov
test
dec
arpl
cmp
sti
jle
mov
je
data16
fsubs
add
or
sub
mov
scas
push
add
popa
imul
stc
mov
std
dec
arpl
xchg
jl
cmp
mov
movsl
dec
xor
mov
lret
mov
jne
fldl
push
fsubrl
mov
adc
and
push
sbb
or
or
push
mov
pop
or
and
jp
add
pop
add
jmp
orl
and
push
dec
mov
push
xchg
push
push
inc
jmp
adc
push
push
push
notb
gs
arpl
jno
sbb
loope
cmp
push
or
or
testb
sbb
xor
cwtl
push
pop
rolb
pusha
lods
call
or
jb
movsl
or
add
out
fwait
std
push
adc
push
lods
inc
sub
add
outsb
xchg
aam
push
mov
loopne
sar
lea
mov
mov
pop
or
sbb
arpl
movsb
xor
popa
test
add
push
loopne
int
jmp
add
push
loopne
fistpl
movsb
dec
mov
daa
test
imul
jns
test
popa
dec
cmpsl
jne
sub
das
sbb
pop
iret
out
mov
fdivl
xor
dec
inc
pop
inc
arpl
push
inc
icebp
icebp
imul
sub
fwait
sbbb
adc
pop
dec
push
mov
sbb
add
test
fs
adc
push
and
mov
push
mov
add
dec
mov
sar
filds
adc
cmp
mov
jl
xor
jmp
cmp
jl
or
int
jbe
jle
adc
jle
xor
jle
mov
je
mov
mov
push
add
inc
jmp
movb
mov
add
push
shrb
pop
cltd
idiv
mov
pop
or
repnz
ljmp
jno
hlt
push
daa
push
mov
outsl
jecxz
jecxz
pop
dec
ret
push
ret
xchg
mov
dec
or
push
pop
lea
outsb
mov
test
or
out
add
push
jmp
inc
addb
xchg
addl
push
in
out
xchg
jl
in
in
hlt
incb
call
stc
mov
pushf
and
cld
sub
in
mov
dec
fdivl
ficomps
and
daa
cmp
nop
fisubrl
push
push
sbb
mov
pop
push
xor
subb
mov
test
in
repz
les
push
pop
dec
adcb
pop
add
push
mov
xor
inc
xchg
pushl
or
mov
lods
andl
push
and
fildl
je
cmp
push
orl
mov
adcl
push
jae
and
cmpsl
shlb
mov
push
and
fcoms
imul
or
inc
arpl
sub
sahf
pop
and
pop
lea
cmp
cmpsl
aad
dec
gs
sub
push
pop
mov
dec
adc
push
inc
mov
jo
cs
dec
js
fs
hlt
sbb
dec
xchg
jge
add
add
mov
jg
aaa
or
pop
sbb
leave
in
imul
insb
shll
mov
iret
rorb
dec
out
jge
sbb
es
fsubr
nop
push
xchg
lret
scas
cmp
inc
ja
add
xchg
out
xchg
fmuls
cs
fidivrs
out
jae
and
pusha
shlb
and
xor
adc
mov
cwtl
inc
cmp
andl
out
sub
sbb
shr
cmp
push
gs
adc
jae
jns
dec
cs
dec
sbb
or
pop
xchg
sub
add
jno
cmp
and
cmp
add
add
fs
nop
pop
mov
add
pop
sbb
and
inc
adc
es
fisubrl
insl
xchg
dec
mov
pop
je
mov
fucomp
xchg
and
aad
call
call
fs
or
push
in
sub
mov
imul
or
getsec
mov
bound
icebp
sbb
mov
cmp
dec
sub
push
and
adc
cmpsb
popa
cmpb
pop
mov
out
cmp
aas
stos
test
pushl
and
bswap
push
movsb
test
jg
movl
fcoml
sahf
xor
movsb
push
add
jne
inc
mov
mov
xchg
sub
mov
or
adc
push
push
pop
int3
lock
jecxz
mov
rcr
xchg
punpcklbw
pop
jecxz
inc
sub
push
mov
or
inc
sub
or
pop
add
shl
int3
mov
dec
sbb
cwtl
cwtl
movsb
repnz
sbb
in
mov
loope
push
das
xlat
popa
in
push
mov
mov
cltd
sbb
dec
adc
dec
sbb
int
add
mov
inc
fxch
or
jg
mov
daa
push
dec
sti
pop
dec
xchg
nop
pop
pop
xor
push
out
jle
xor
sbb
inc
pop
cmpxchg
call
pop
sti
mov
push
aad
adc
push
mov
rorl
movsb
shr
sub
jo
or
and
and
mov
sarb
dec
inc
sub
xor
sbb
into
imul
jbe
in
add
jo
dec
xor
pop
hlt
dec
cmp
cmpb
in
sub
gs
mov
sahf
inc
nop
jp
dec
in
neg
sub
xchg
cmpsb
sahf
out
sub
ss
dec
test
es
xorb
cmp
dec
lods
sbb
insl
les
add
pop
in
xchg
sbb
add
or
cmp
cltd
popa
and
cmp
or
test
sbb
movsl
lods
push
push
mov
pop
jbe
push
jmp
mov
sub
and
outsb
movsl
add
pop
jg
fbld
push
stos
lods
cmp
ficomps
push
xchg
lds
cs
push
es
lods
das
sub
inc
icebp
xchg
mov
jp
scas
fldenv
add
and
movsl
sbb
or
jge
subb
and
aad
fdiv
daa
sub
pop
adc
pop
xchg
cmp
pop
inc
loop
cmp
adc
mov
test
mov
addl
ja
mov
cli
sub
push
inc
adc
add
lahf
rclb
cli
and
in
movsbl
and
shrl
decl
or
jo
std
inc
inc
leave
fisubl
mov
push
push
adc
mov
inc
pop
aam
add
mov
cwtl
or
int3
xor
and
jecxz
add
push
mov
fnstenv
rolb
pop
dec
or
dec
rclb
pushf
cld
and
inc
xchg
inc
stos
mov
mov
pop
cmpl
loop
cli
test
xchg
or
adc
aaa
out
int
cmp
and
cmp
and
push
mov
dec
movsl
jno
fsubl
cmpl
mov
xchg
cmpb
cmp
push
jne
imul
loopne
push
movsl
stc
xor
sbb
jl
cli
cmc
pop
orl
adc
out
es
add
movsl
popl
cmp
jne
mov
xor
push
add
jne
jg
push
pusha
mov
call
jne
push
fdivrl
add
mov
js
into
sti
or
cmpsb
sbb
push
jns
xchg
stos
push
aam
fmull
mov
push
scas
jne
fwait
pop
mov
dec
fmull
sbb
cltd
fsubs
xchg
adc
int3
popa
adc
fdivs
pop
inc
nop
fdivl
push
int3
jmp
push
rolb
scas
shrl
cmc
sbb
jmp
nop
push
cmp
sbb
testl
sbb
jl
push
mov
add
lds
or
jmp
inc
fcomps
push
push
cmp
loop
inc
ds
dec
mov
push
mov
cmp
mov
pusha
lret
add
push
add
xor
mov
push
adc
pop
into
xchg
adc
pop
push
push
sbb
jo
dec
fstps
int
jbe
push
xchg
push
and
rolb
sete
xchg
cmp
in
add
clc
pusha
out
in
adc
cwtl
sbb
sar
sbbb
cmpl
and
mov
aam
push
pop
add
enter
mov
jno
xchg
dec
dec
pop
addr16
dec
pop
sub
or
in
jne
ja
fwait
test
les
jmp
daa
in
out
mov
cmp
cmp
mov
shlb
jae
jb
lret
insb
cmp
pop
cmp
mov
cmp
inc
cmp
sub
cmp
sub
mov
pop
cmp
adc
sub
or
popa
push
dec
inc
adc
nop
xchg
add
push
test
and
sbb
dec
jo
fidivl
add
mov
dec
int
adc
cmpsl
add
push
adc
test
push
lock
in
jo,pn
arpl
sub
jno
into
in
aas
push
push
dec
push
nop
jle
orl
mov
add
movsl
mov
loopne
in
cmp
jne
in
add
xor
dec
ficomps
add
add
jecxz
cmp
sub
lods
lahf
push
movsb
add
mov
sbb
in
pop
push
sub
jo
dec
xchg
pop
adc
xor
insb
adc
sub
aad
repnz
sub
repz
shrb
jecxz
inc
add
xorb
dec
sub
adc
rol
in
loopne
xchg
mov
in
mov
pop
or
enter
or
xchg
shll
add
in
or
push
push
out
call
in
push
shlb
adc
aad
cwtl
fldenv
add
loopne
ret
ret
in
and
xor
leave
inc
mov
xchg
lds
je
xor
in
cmp
or
dec
test
inc
cmpsb
out
sbb
lock
sarb
mov
jle
xor
aam
mov
pusha
js
es
pop
mov
sub
or
dec
or
push
fnstenv
inc
scas
fsubs
rorl
xchg
ja
aaa
jl
hlt
or
sarb
jne
cmp
push
mov
stos
int3
mov
jnp
adcb
fwait
adc
push
test
mov
iret
adc
test
xor
mov
rcll
mov
mov
shll
bound
and
mov
mov
mov
sub
push
sbb
lods
cmpsl
in
and
sub
cwtl
mov
gs
aam
rcrb
popf
hlt
adc
mov
xor
mov
and
push
mov
or
loop
add
je
test
stos
mov
mov
call
shr
or
push
mov
jp
popa
cmp
xchg
lcall
or
dec
push
sbb
jg
sti
xor
push
jo
lock
mov
and
je
add
inc
sahf
gs
clc
adc
push
push
lods
mov
pop
and
adc
aaa
mov
add
sbb
ret
js
jp
sub
divl
call
or
jp
cltd
or
pusha
ljmp
push
test
js
movsl
test
or
add
mov
pop
mov
loope
mov
cmp
shr
push
add
push
cltd
jb
or
fcom
arpl
pop
xchg
test
aam
push
pop
neg
add
and
mov
cmp
sub
adc
ret
add
pop
mov
addl
add
cld
cmc
dec
mov
jmp
adc
mov
or
or
mov
jle
shlb
aaa
inc
testb
jae
mov
orl
mov
lret
mov
jmp
or
stos
std
dec
pop
mov
mov
mov
mov
jne
daa
gs
imull
adc
cli
push
fsubl
and
cmp
mov
mov
or
sbb
adc
add
dec
lea
or
ret
bound
pop
mov
mov
pop
out
add
leave
pop
mov
mov
push
pop
mov
cmc
aam
mov
adc
aad
sbb
jge
fisttpl
les
lock
push
gs
mov
sub
push
push
aad
push
add
pop
pop
add
or
int3
sbb
push
inc
push
cmp
loopne
out
and
or
stos
aad
and
sbb
add
or
imull
add
and
dec
inc
xor
in
jnp
imul
roll
or
cmp
in
sub
pop
or
cmp
sbb
lret
adc
imul
stos
pop
jl
or
push
sahf
jge
xor
test
enter
add
stos
lods
mov
into
mov
pop
xchg
std
mov
pop
or
stos
jb
aas
add
lods
xor
push
orl
ds
and
mov
je
test
loop
test
test
or
push
pop
decl
jno
js
sub
je
pop
or
test
enter
jl
cmp
add
add
or
test
mov
jns
nop
push
std
xor
xchg
mov
cmp
movsb
and
sub
fimull
xor
add
inc
pop
mov
xchg
adc
jg
movl
add
ret
and
cmp
or
add
orl
dec
lods
push
xchg
or
mov
mov
cltd
add
pop
movsl
add
rolb
lods
sbb
mov
movsl
shll
shlb
and
pop
icebp
test
enterw
es
rolb
push
outsb
test
cmpb
int
mov
add
js
mov
shrl
dec
mov
cmp
jns
or
insb
popa
sbb
repnz
imul
es
stos
shll
and
pop
jb
add
sub
add
push
or
sbb
add
push
cmpsb
or
adcl
scas
mov
je
jg
inc
mov
add
arpl
push
cmpsl
sbb
inc
or
mov
mov
jmp
jnp
sbb
pop
xchg
mov
popl
fsubrl
sub
cmovo
icebp
arpl
cmp
dec
icebp
rolb
mov
insb
out
sub
mov
dec
movsb
out
sub
movsl
cmp
pop
test
inc
and
fs
outsl
je
rolb
add
sti
add
xor
shl
xor
loopne
rdpmc
xor
sbb
sbb
pop
scas
bound
jmp
inc
pop
pop
popf
adc
stc
repnz
mov
mov
ja
adc
and
jns
or
adc
dec
dec
daa
popf
ss
sub
std
pop
xor
or
mov
or
inc
inc
sub
xchg
add
cmp
add
rcll
aas
test
cmp
dec
js
xor
or
push
ret
push
in
pop
xchg
fidivs
or
xor
rorb
cli
xchg
fdivs
loop
jmp
leave
shll
pop
adc
popf
mov
ret
dec
packssdw
push
jp
nop
or
mov
ficoms
or
scas
aam
mov
ljmp
mov
jmp
sub
inc
test
xchg
adc
push
imul
cmp
call
lea
vmwrite
fs
dec
push
adc
test
fstl
sar
stos
and
add
sub
test
adc
xor
cmp
fmull
and
jmp
xchg
and
insb
mov
pusha
nop
and
mov
aad
cmp
mov
aaa
and
mov
push
jne
xchg
inc
push
dec
or
xor
les
sbb
push
shll
fldcw
mov
add
rorb
popf
sbb
add
daa
jae
jmp
adc
rorb
aaa
add
push
sbb
daa
adc
push
icebp
mov
xchg
mov
and
cmp
inc
and
jecxz
push
int3
test
shlb
dec
mov
lret
in
sub
andb
aam
rcl
jo
add
es
push
insl
jae
add
fs
fxsave
fwait
inc
ljmp
adc
adc
sbb
push
pop
rclb
dec
out
xor
inc
sub
dec
push
or
push
cmp
popf
adc
sbb
leave
inc
shrb
lods
push
cmp
and
and
mov
pop
sbb
xchg
mov
lret
cmp
push
lods
dec
jne
inc
loopne
inc
sub
inc
add
xor
inc
and
adc
jb
stos
push
xor
loope
push
add
mov
shlb
push
xchg
sbb
jg
in
pop
cmp
xchg
jo
enter
dec
dec
push
add
jno
data16
add
jo
and
mov
inc
clc
xchg
push
jge
mov
xor
sub
repnz
or
cmp
jle
sub
jne
or
or
and
xor
adc
out
int
fwait
mov
mov
addr16
mov
and
lods
and
mov
enter
cmp
push
das
pop
sbb
jnp
add
mov
adc
xchg
push
pop
addl
push
and
insb
push
or
daa
call
jge
xor
mov
xorl
or
adcb
dec
ss
inc
sbb
mov
nop
negb
mov
test
loopne
fbstp
gs
cmp
pop
mov
push
pop
add
andb
push
movsb
rol
push
or
lret
decl
shl
popa
imul
mov
jp
and
testb
pop
insl
sub
push
clc
mov
jp
sbb
sub
loopne
sbb
ja
repnz
sub
mov
xchg
xorb
xor
and
xor
sub
call
shrb
clc
mov
gs
pop
psllw
cmp
mov
cmp
imul
outsb
sub
cmpl
adc
jbe
dec
repz
cltd
push
mov
cmpl
jle
mov
fnsave
and
jle
push
jmp
push
in
inc
cmp
jb
call
xchg
cmp
xor
and
inc
stc
ficoml
push
ret
dec
mov
inc
push
ljmp
test
mov
push
cwtl
ret
fwait
dec
out
enter
adc
sub
sub
movsl
xor
pop
adc
adc
or
dec
jno
lods
out
pop
xchg
iret
sbb
jecxz
hlt
mov
jo
stos
lea
add
xchg
adcb
jne
test
mov
xchg
push
mov
in
das
dec
test
xchg
js
insl
cmpb
pusha
add
dec
dec
xor
pop
ds
loopne
js
aas
mov
jno
and
dec
fmuls
inc
adc
insb
mov
sbb
pop
pushf
adc
ret
lret
shrl
lea
cs
inc
loop
mov
inc
aam
push
daa
inc
adc
js
rcll
jne
and
cwtl
sub
stc
xchg
es
out
inc
inc
test
imul
stos
cmpsb
or
adc
or
xor
xor
cmp
mov
mov
pop
inc
add
fdivrs
daa
pop
sbb
xchg
cmp
jae
cmp
ss
test
lcall
mov
std
or
cmp
sub
rol
aam
std
mov
adc
loope
loopne
ljmp
std
pushf
lret
out
mov
int3
sarb
imul
mov
xchg
jl
sbb
or
loope
mov
mov
jmp
bnd
pop
add
pop
rclb
std
stc
cmp
adc
test
mov
cmp
inc
lea
aad
ret
pop
mov
cmpb
cmpsl
mov
or
xchg
push
push
cmpsl
mov
rclb
jg
jno
sbbb
pop
xchg
pop
addb
cmp
mov
add
pushl
xchg
frstor
sub
sbb
arpl
inc
mov
clc
add
lret
pop
mov
push
push
pop
pop
lea
clc
dec
mov
lds
or
jecxz
andl
sub
lea
lds
mov
push
les
push
add
dec
aam
pminub
lret
add
cmc
incl
adcb
stos
nop
dec
faddl
pop
movsb
and
and
add
faddl
and
xchg
aam
jl
pop
pop
xchg
xor
sub
jo
add
mov
add
adc
scas
mov
sbb
fadds
ret
sahf
inc
pop
or
pop
pop
jp
mov
lret
mov
scas
dec
sub
sub
dec
in
loopne
arpl
imul
inc
sub
aaa
sub
lcall
add
mov
inc
addr16
orb
add
dec
iret
jnp
lods
lods
dec
adc
mov
dec
pop
and
xchg
or
insl
lret
call
test
aas
insl
lret
sarb
xor
adc
mov
popa
xor
in
pop
jge
mov
adc
inc
cmp
adc
pushf
dec
adc
lret
in
adc
dec
rcrl
lret
dec
adc
add
sahf
ja
adc
mov
push
jb
xor
test
add
xchg
mov
push
adc
shrb
xor
sahf
inc
imul
jl
pushl
stc
pushf
mov
cmp
add
adc
dec
adc
ret
nop
into
je
int
adc
mov
add
push
inc
or
shr
or
push
push
out
push
push
inc
sbb
or
pop
jo
popf
shrb
cmp
mov
add
sbb
loopne
popa
movsb
or
dec
add
inc
xchg
sub
and
pushl
xchg
xchg
loope
xchg
cmpsb
cmp
bound
adc
int3
dec
adc
and
lret
xor
push
cmp
or
adc
pop
and
and
pop
or
dec
and
xorb
insl
shlb
std
adc
dec
or
push
sbb
pop
pushl
push
push
sahf
je
add
push
sahf
es
in
in
jmp
fwait
dec
movsl
ljmp
popf
cld
mov
inc
dec
xorl
inc
popa
xchg
inc
fldl
test
mov
sub
ja
mov
xor
push
or
pop
adc
fildll
and
and
add
ror
xor
pop
mov
lods
sbb
mov
cmpsb
mov
es
sbb
nop
mov
inc
les
xor
dec
jg
js
icebp
xor
push
pop
lock
sub
sub
insb
rol
mov
xchg
mov
add
or
insb
mov
enter
push
int
int3
add
adc
shlb
fwait
push
adc
add
jp
pop
push
and
push
jne
add
gs
push
adc
adc
push
and
xor
dec
dec
jne
dec
rolb
and
push
lock
loopne
fcomip
jne
enter
xor
or
or
roll
adc
xchg
and
add
and
in
sbb
inc
cmp
push
push
pop
enter
adc
and
push
or
sbbb
cmp
adc
inc
ret
sbb
stos
push
mov
xor
add
and
adc
lods
inc
push
cs
and
mov
mov
ds
xchg
adc
out
enter
movsl
adcl
cmpsl
or
adc
es
cmpsb
dec
aam
sbb
pushf
push
add
xchg
fiaddl
addl
jbe
jbe
inc
push
sub
lea
loopne
mov
mov
aas
pop
xchg
lret
cmpsb
xor
mov
into
out
les
jbe
loopne
inc
push
int3
push
outsb
imul
xchg
jecxz
mov
mov
mov
or
push
aam
add
push
call
in
push
outsl
aaa
clc
xchg
or
aam
ret
andb
fs
jl
enter
rep
movsb
popf
divb
std
ss
and
mov
jb
fmul
xor
sbb
push
push
sbb
mov
jns
and
movb
push
test
mov
mov
or
mov
mov
xchg
clc
aam
and
test
push
pop
pop
dec
mov
jp
repz
inc
jne
cmp
das
inc
scas
jge
mov
test
rclb
cwtl
or
jbe
or
jmp
cwtl
icebp
jns
and
pop
sub
xchg
jle
fwait
dec
ja
je
popa
jnp
pop
sub
pusha
xchg
in
sub
mov
xchg
xchg
test
cli
pop
inc
test
scas
sti
fadds
mov
test
rcl
and
test
mov
fwait
dec
jno
add
daa
cld
std
inc
and
jmp
dec
add
add
jmp
dec
mov
xor
adc
and
pop
in
rolb
xorb
xchg
jmp
inc
cmp
into
mov
adc
aas
addb
add
cmp
add
add
mov
add
pushf
nop
js
pop
xor
push
aam
push
and
jl
xchg
add
sbb
test
js
inc
and
adc
cmpl
orl
add
mov
lock
mov
leave
mov
add
mov
js
pop
imul
sub
jae
or
xor
shrb
movsb
mov
xor
mov
xor
aas
in
adc
add
mov
pusha
pop
es
mov
sbb
lods
insb
mov
inc
xchg
pushf
loopne
push
shlb
sub
aas
push
xchg
es
or
mov
xchg
vmread
push
jle
inc
insb
sub
lods
daa
sarl
test
clc
outsl
cmpl
xor
js
pop
test
inc
notb
jo
dec
dec
fsubrs
add
in
adc
pop
out
lock
shlb
ljmp
shr
dec
test
mov
cmp
sub
ljmp
and
lret
scas
cld
and
fidivl
inc
adc
pop
neg
add
sub
repz
xchg
xchg
or
pop
or
mov
stos
pop
out
pop
add
sbb
xchg
ret
adc
cmp
push
sti
fisubrs
add
inc
mov
mov
ja
dec
push
pop
or
push
pop
test
notb
call
cmp
inc
push
push
add
dec
xchg
adc
orl
mov
pop
mov
repz
and
inc
mov
aad
ficomps
add
inc
rorb
add
mov
inc
and
outsl
adc
lcall
shrb
stos
push
jo
mov
mov
enter
xor
inc
or
cmpsb
mov
xchg
lret
dec
mov
cmpsl
ljmp
sub
andl
repz
xor
cmp
movsb
push
negb
aaa
xchg
jp
popf
mov
icebp
adc
adcl
incb
mov
ss
movsb
push
sbb
cwtl
cmpsb
mov
outsb
pop
mov
aas
outsb
or
push
mov
loope
fisttpll
repnz
mov
ror
call
call
push
push
and
out
and
add
mov
jmp
pop
mov
push
push
in
or
js
xchg
enter
push
fidivrs
leave
cli
insl
shl
ror
out
popa
cmc
mov
pop
and
jp
pop
fwait
addl
xor
cli
mov
fimuls
cld
mov
inc
mov
inc
loopne
stc
lock
push
cmpsl
mov
mov
fidivrl
or
sub
mov
notb
cmc
jns
cmp
push
xor
mov
call
and
ss
mov
mov
ss
cmp
cmp
mov
lods
adc
adc
in
jmp
loopne
add
dec
dec
pop
ret
push
sub
push
inc
shlb
out
inc
into
movb
or
sbb
adc
cmpb
cmpsb
in
adc
stc
inc
cmp
mov
jmp
std
mov
add
cmp
test
cld
mov
dec
push
add
inc
add
outsl
outsb
lock
enter
adc
movsl
movsw
mov
xchg
push
cld
movsb
mov
push
shlb
shr
ja
hlt
or
or
mov
inc
inc
cmp
jle
movb
add
push
lea
outsb
cmpsb
and
jg
push
xor
push
cld
outsb
cmp
jge
jne
movsbl
xor
test
dec
pop
es
push
movl
jb
and
push
cld
je
dec
or
push
push
add
inc
stos
add
and
pop
inc
in
div
and
mov
xor
sbb
scas
xor
dec
outsl
fisubrl
mov
jge
mov
mov
mov
or
subl
fs
cld
and
inc
xchg
pop
mov
jl
adc
sbb
rclb
iret
mov
mov
cmp
jo
sbb
push
adc
push
mov
fdivr
cmc
sbb
xchg
adc
shrb
mov
test
mov
adc
or
dec
ja
inc
xchg
inc
clc
add
or
inc
jle
fwait
mov
mov
cmp
cmp
add
cmp
or
or
jnp
fmull
or
jbe
jmp
or
addr16
por
jmp
adc
pop
adc
push
adc
dec
adc
dec
adc
aas
pop
jmp
sbb
xor
jmp
sbb
es
and
pop
pop
jmp
and
or
jmp
adcb
and
orps
add
aaa
xchg
push
mov
test
and
dec
jnp
mov
push
vpmullw
cmp
repz
in
cmc
std
out
sahf
out
xchg
or
adc
sahf
out
sahf
push
and
sub
out
cmp
inc
dec
push
out
sahf
out
pop
pop
imul
xchg
fbstp
add
add
push
pop
or
and
or
or
push
pop
idiv
call
adc
adc
sbb
sbb
push
pop
and
and
aas
add
repz
and
pushf
test
movsb
shrd
mov
hlt
mov
cmp
add
idivl
mov
push
mov
or
test
jne
imul
pop
jae
inc
mov
call
xlat
in
xchg
sbb
pop
movsb
xchg
rcrl
or
pop
jge
loope
sbb
adc
mov
inc
sub
inc
cmp
jbe
add
lods
inc
aaa
sub
lods
dec
sub
dec
ljmp
jge
popa
std
cmp
mov
inc
push
push
and
pop
pop
popf
pop
leave
jecxz
jne
mov
sub
jae
sub
fwait
stos
aad
or
and
xor
or
inc
dec
sbb
dec
cmp
dec
nop
hlt
jb
nop
xchg
sub
and
push
jl
das
clc
add
inc
inc
jg
jmp
mov
mov
dec
ja
inc
jbe
adc
adc
push
sarb
xor
pop
rolb
inc
or
enter
xchg
inc
mov
mov
les
scas
popf
sarl
add
mov
push
add
cmp
lea
inc
xchg
jl
in
or
xchg
out
push
dec
xchg
adc
push
dec
inc
mov
ficoms
mov
or
jl
js
test
movsb
adc
jmp
jp
call
xor
pushl
and
mov
sbb
xchg
lcall
fimull
mov
cmp
ss
sbb
lret
test
mov
xlat
andl
jne
fwait
push
jne
and
scas
push
dec
pop
loopne
or
popf
cmpsl
lods
push
add
js
outsb
or
ss
push
stos
sub
fucomip
pop
mov
jne
and
das
jp
mov
aas
xor
add
popa
sbb
movl
in
lcall
mov
adc
loopne
dec
or
inc
inc
std
aas
hlt
orl
xor
lcall
jae
sahf
incl
test
push
clc
lock
insb
inc
dec
je
xchg
clc
sbb
in
push
xor
test
adc
cmp
cmp
pop
sub
add
clc
inc
and
add
movsb
jo
scas
movsb
or
rclb
loop
jo
add
aam
mov
bound
or
repnz
rol
fistl
or
inc
adc
ss
sbb
add
mov
xchg
ret
dec
ds
mov
mov
cwtl
inc
push
xchg
add
xorb
cltd
or
xchg
adc
pop
xorb
or
loope
mov
or
int3
push
mov
mov
imul
push
pop
and
or
in
cmp
xor
and
nop
sub
test
sub
push
or
fsubl
and
in
jp
js
loopne
push
push
cwtl
or
ret
jnp
cmp
push
subb
dec
nop
add
outsb
mov
pusha
incb
lahf
or
pushl
aam
sub
and
jecxz
scas
push
adc
test
adc
in
ja
dec
repz
enter
mov
xchg
add
push
rclb
push
push
xchg
xor
cmc
mov
stos
push
push
adcb
push
lods
rcrl
add
sbb
cmp
fnstsw
fs
xor
mov
xchg
sub
fadd
rol
mov
add
cmp
inc
imul
adc
insl
xchg
lahf
shll
push
shll
orb
xchg
insl
test
ret
inc
jecxz
add
dec
jp
daa
push
jmp
cmpl
pop
dec
mov
shrl
popf
xor
call
push
or
xor
dec
pop
pop
arpl
mov
xchg
or
insl
adc
ljmp
lods
pop
push
cmp
add
push
nop
test
loopne
sub
push
fsubrl
adc
jb
fmuls
sbb
mov
rcr
add
pop
and
xchg
xchg
pop
mov
push
fistl
mov
mov
sub
or
imul
xchg
inc
sbb
xchg
adcb
sbb
add
leave
push
loope
loopne
pusha
inc
loop
sbb
add
jne
mov
add
hlt
sub
iret
xor
mov
sbb
and
inc
jnp
lods
adc
jne
popa
popl
or
sahf
jl
inc
adc
adc
add
scas
jb
cmp
inc
or
ss
sub
adc
pop
inc
mov
cmp
loope
popf
xor
push
push
push
push
repnz
ds
adc
xor
hlt
test
inc
add
je
inc
inc
inc
roll
jl
fldl
jns
addb
pop
mov
nop
frstor
aas
fcoms
nop
xor
dec
xchg
cwtl
pop
pushf
mov
or
movsb
mov
xchg
mov
lods
inc
mov
movsb
cmp
xor
jmp
pusha
rcrb
es
rcrb
gs
lret
fsub
inc
cmp
enter
add
xchg
mov
aaa
test
mov
out
push
mov
mov
movb
sahf
popa
loopne
inc
add
lea
add
or
push
fisttps
lret
mov
and
je
jl
and
sbbl
adc
cmpsb
fbld
cmp
jl
sub
es
sub
lea
add
outsb
dec
push
or
mov
popf
push
rcll
and
negl
and
cmp
jmp
bnd
and
inc
and
push
rol
adc
push
pop
jl
pop
mov
out
push
rcll
fisubs
xchg
sbb
dec
push
clc
push
popf
mov
cmp
je
cltd
mov
dec
loopne
jge
and
fidivl
out
dec
lods
jmp
cmp
cmpb
js
sbb
pusha
sarl
lock
int3
xchg
sbb
and
ret
ret
sub
js
jo
mov
gs
sub
jmp
fwait
xchg
fsts
imul
sbb
or
call
sub
test
cmpsb
cmp
push
jmp
add
mov
lock
xor
inc
push
hlt
cmp
jl
cmp
jle
xchg
aad
movsb
ret
sbb
pop
movsl
add
lock
xchg
movsb
adc
mov
popf
gs
hlt
mov
ss
sbb
cmp
inc
add
mov
push
sub
ds
scas
add
pop
pop
adc
lock
mov
add
pop
sbb
adc
inc
cmpsb
push
inc
shrl
xor
inc
mov
cmp
push
sub
data16
bound
jge
adc
mov
mov
xchg
cmp
mov
xchg
movsl
dec
inc
nop
fdivrs
xorb
lods
jne
or
and
popa
pop
or
sbb
iret
or
mov
sub
ret
and
sub
jo
sub
sbb
addr16
sub
and
inc
sub
adc
adcb
stos
jl
dec
and
jmp
jecxz
add
and
loop
sbb
dec
xor
lret
cli
cmp
mov
insb
les
sahf
push
pop
sbb
in
jge
popa
daa
push
pop
lahf
stos
js
dec
ffree
push
xor
sub
call
pop
adc
ds
sub
test
mov
aas
jne
push
push
addb
ds
adc
pop
inc
or
pusha
inc
xor
gs
dec
movsl
popf
lods
adc
loopne
int
push
inc
popf
rolb
sahf
dec
arpl
aaa
ss
mov
dec
mov
je
push
shr
cs
xorl
aaa
jne
shlb
loope
loop
adc
mov
xor
or
mov
xchg
sbb
sbb
push
shll
jmp
inc
sbb
jmp
leave
test
mov
lds
lea
es
or
add
aas
mov
test
dec
or
add
popa
cwtl
mov
arpl
and
mov
outsb
xor
scas
fwait
sbb
adc
mov
push
movsb
jge
inc
and
xchg
cmpb
push
aad
adc
pop
nop
lea
outsl
xchg
ret
js
mov
shlb
sti
add
sbb
pushl
push
fsubs
lea
lds
inc
pop
out
dec
push
outsl
sub
mov
ss
add
push
movsl
and
outsb
jns
aam
jle
xchg
mov
sti
dec
data16
decl
mov
enter
sub
icebp
fadds
pop
mov
add
add
loope
popa
xor
xchg
push
push
mov
icebp
add
xchg
xchg
and
jbe
arpl
jo
lret
mov
fsubs
into
cmp
addb
jmp
jl
or
add
pop
jne
dec
outsl
inc
outsb
outsb
inc
scas
jle
into
popf
xor
jmp
pop
jbe
cmp
dec
lret
inc
jle
ud2
pop
sar
psubw
mov
adc
lock
mov
mov
popf
je
xchg
inc
or
ss
mov
adc
lods
inc
push
cmp
or
adc
mov
bound
cs
push
jg
xchg
or
hlt
inc
and
sub
inc
adc
jl
loope
jae
stos
xor
mov
sub
test
lahf
rcrb
or
xor
push
outsl
dec
mov
call
lock
in
arpl
xor
mov
mov
pop
lock
push
nop
mov
xor
in
xchg
scas
gs
xchg
cmpsl
jp
mov
inc
pop
mov
loope
cmp
inc
dec
sbb
fstps
mov
pop
stc
cld
addb
call
and
xchg
or
push
cmp
test
push
sub
pop
clc
or
add
dec
mov
mov
pop
sub
lea
or
xchg
push
xor
dec
inc
cmp
out
inc
push
cmp
xor
dec
int3
pop
sbb
adc
lock
push
adc
cs
orl
xor
push
and
fs
sub
imul
pop
sbb
cwtl
es
cmp
add
faddl
fstl
fldz
fcomp
fnstsw
scas
rolb
pop
arpl
pop
and
mov
faddp
cmp
push
ds
adc
inc
or
adc
outsl
dec
addr16
or
push
push
jb
stc
xchg
fadds
mov
pop
hlt
xlat
std
and
adc
pop
hlt
jl
cmp
rcll
and
jne
hlt
sarb
int3
mov
jmp
loop
jne
adc
outsl
adcl
dec
add
inc
fwait
push
icebp
das
mov
add
std
incb
fdivs
movl
or
jne
mov
jnp
sti
lock
jmp
fldl
cmp
push
inc
mov
dec
dec
adc
mov
lea
popa
xor
dec
xor
pusha
je
fcoml
jne
cmp
test
dec
and
mov
rcr
mov
add
mov
push
sub
es
iret
jmp
cmpb
dec
xchg
fimuls
jp
mov
lea
sub
or
mov
jle
cmpsl
fimuls
enter
jmp
push
int3
loopne
shr
dec
mov
imul
mov
rol
fldlg2
out
inc
addr16
push
and
dec
incl
mov
push
test
ret
shlb
arpl
jl
lock
rorl
jl
rolb
and
sbb
test
pop
and
ss
rcll
inc
sbb
adc
ror
dec
dec
push
dec
out
aam
fst
pop
movb
insl
push
adc
cltd
xlat
lods
sbb
jo
sub
jne
xchg
and
sbb
mov
fistl
mov
pop
sbb
mov
cwtl
rolb
add
or
add
or
test
cmpl
xchg
test
add
inc
or
xchg
and
clc
icebp
dec
inc
or
movsb
in
enter
daa
sti
shrl
dec
fs
test
outsb
sub
add
push
loopne
in
outsb
cwtl
add
int
xor
aaa
add
add
jne
push
push
jl
inc
push
or
xchg
push
stc
cmpsl
repnz
jb
push
mov
mov
jb
mov
sbb
xchg
add
jno
ret
or
lock
cmp
xchg
add
sarl
insl
sub
dec
loope
insb
or
jo
or
sub
cmp
sbb
cmpsb
add
mov
jb
or
jecxz
negl
mov
xchg
jne
cs
inc
out
lcall
jne
jne
test
mov
add
push
sub
jae
bndstx
sahf
inc
xlat
and
in
lods
xchg
scas
or
add
add
add
test
inc
inc
jg
sbb
pusha
or
push
pop
xchg
or
add
mov
pop
push
pop
test
mov
pop
xchg
mov
jge,pt
cmp
cwtl
adc
xor
mov
dec
ret
test
rolb
jo
std
xor
movsb
cmp
sub
jae
loope
xchg
push
imul
loope
sbb
push
pop
dec
sti
and
in
cmp
je
xor
mov
fs
jmp
add
push
aas
push
cmp
mov
sub
ret
adc
cmp
imul
lret
mov
xchg
test
jae
lret
or
adc
fmuls
sbb
xchg
ds
xchg
sub
adc
scas
xchg
ret
push
mov
push
enter
push
push
cli
xor
fs
jb
sbb
jae
scas
sub
lea
outsb
popa
pop
jbe
mov
xor
lods
jne
push
push
pusha
test
leave
mov
mov
cmpsb
aad
pop
aam
xchg
jecxz
mov
cmp
push
push
push
jp
popf
jne
mov
add
cld
inc
sub
cmpsl
and
movsb
add
or
int3
xchg
push
mov
adc
mov
inc
jno
mov
xchg
and
and
jle
add
fsubl
push
push
xor
inc
loop
pop
add
and
mov
call
leave
or
lahf
dec
movsl
loope
mov
mov
xor
pop
push
dec
aaa
push
adc
es
sub
imul
lock
movntps
or
jbe
and
aam
inc
leave
push
mov
push
fsubrl
inc
in
ljmp
mov
sub
pop
out
rorb
call
test
add
and
lock
or
push
sti
xchg
sub
pop
ret
xchg
leave
sbb
push
test
or
jo
jb
lods
push
movsb
adc
add
clc
dec
dec
pop
fisttpl
and
popa
rorl
xor
enter
lcall
jb
mov
pop
push
mov
bound
fs
mov
mov
clc
dec
sbb
pop
push
je
fbld
inc
clc
cmp
sub
dec
dec
movsb
fs
mov
xor
test
dec
pop
fadds
rol
inc
push
addl
xor
enter
aam
cmp
subb
add
push
in
add
outsb
adc
mov
or
push
call
fldenv
pop
call
add
mov
mov
inc
mov
cmp
adc
in
inc
cwtl
xor
add
daa
or
in
test
xor
jp
aam
jbe
add
mov
push
sbb
aaa
stos
decb
push
iret
or
loope
inc
lret
psubsw
pusha
mov
shrb
push
dec
int3
inc
and
sub
lock
jge
dec
pop
jo
xor
pop
inc
sub
add
imul
adc
movsb
mov
lods
mov
rorb
outsl
add
push
test
fcmove
sub
push
add
inc
xchg
test
aad
repz
je
push
sub
out
push
adcb
or
push
cmpsl
pop
xor
lods
movsl
rorb
loopne
bound
xchg
or
lock
sbb
dec
or
and
push
rcl
pop
imul
sbb
js
and
mov
fildll
adc
mov
xchg
jnp
fsubr
daa
push
inc
add
push
loopne
push
test
pushf
mov
scas
mov
or
sbb
sub
ja
or
sub
add
mov
lret
sbb
xor
or
xchg
mov
xor
inc
rclb
xchg
mov
mov
js
add
sbb
or
sub
loopne
icebp
push
ds
cli
mov
lea
mov
ret
xor
sbb
mov
add
mov
or
fidivrl
add
mov
push
mov
pop
jg
add
or
aaa
jae
nop
add
sahf
push
inc
test
in
inc
jae
mov
pop
push
in
push
incl
jo
and
in
pop
je
or
in
xor
mov
pop
xor
mov
nop
xchg
add
in
test
js
mov
loope
shr
sub
lahf
mov
test
pop
insl
lahf
imul
push
shr
stos
pop
imul
testl
fsubrs
inc
xchg
es
inc
push
or
xchg
out
push
in
inc
mov
scas
in
sbb
push
mov
inc
or
mov
push
incl
mov
cli
xchg
jo
popf
push
push
js
or
cmp
mov
loopne
dec
sub
repz
or
orb
push
cmp
jnp
stc
mov
es
push
adc
add
lret
add
rorb
popf
add
push
imul
pop
or
das
or
inc
subb
mov
addr16
int3
int
and
cld
xor
jecxz
pusha
xchg
push
ret
xchg
cmp
mov
pop
mov
sbb
sbb
outsb
pusha
cmpsl
push
lret
arpl
or
cmpsb
pop
xor
add
popa
or
mov
cmpsl
sahf
jmp
or
cmp
adc
and
neg
xor
arpl
daa
adc
and
pop
jo
push
add
adc
inc
sahf
out
lods
xor
xor
cwtl
aad
cmp
inc
jecxz
push
dec
into
addb
stos
pop
loop
test
push
pop
inc
out
clc
pop
xor
adcb
push
pusha
dec
jo
sbb
nop
pop
mov
xor
clc
dec
lods
out
add
js
pop
dec
loopne
data16
xor
xchg
add
inc
loop
inc
sub
sbb
pop
sbb
mov
mov
jmp
cmp
sub
add
sbb
jl
stos
xchg
ret
aad
imul
push
addr16
pop
mov
in
push
scas
dec
sub
add
push
adc
frstor
adc
inc
mov
sub
adc
hlt
cmc
xchg
push
mov
inc
and
dec
movsb
dec
and
aas
shll
mov
enter
mov
add
lret
jle
int3
xchg
adc
push
fistl
mov
fdivs
call
or
call
push
xor
jne
push
fucomp
push
dec
adc
mov
mov
test
mov
push
xchg
xchg
or
add
das
rcrl
xchg
cmp
aam
sub
loop
rolb
dec
jo
cmpsb
test
testl
mov
stc
loopne
loopne
cmp
fs
push
push
sbb
push
je
or
xor
addb
xchg
mov
push
pop
dec
push
call
dec
jle
stos
xchg
clc
std
popf
dec
cmp
jg
sub
push
je
rorb
cmc
popf
mov
lcall
cmp
pusha
call
movsb
popf
inc
in
and
and
add
mov
mov
xlat
test
push
xchg
push
add
test
fwait
pop
dec
sub
mov
dec
sahf
hlt
adc
push
or
pop
cmpsl
xchg
and
add
jg
mov
movzbl
test
pop
cltd
fs
and
sbb
or
stos
pop
cmp
jge
push
inc
and
push
jl
mov
lods
pop
test
and
test
sbb
mov
mov
or
push
cs
inc
jnp
pop
jecxz
mov
mov
xor
clc
out
or
push
adc
insb
add
and
adc
mov
pop
dec
adc
adc
inc
dec
inc
fwait
add
loope
stc
inc
add
insb
fisubrs
pusha
dec
jmp
test
enter
adc
and
xor
add
jl
push
dec
xlat
lds
pusha
cwtl
hlt
or
cmpsb
andl
pop
sbb
gs
hlt
dec
std
dec
fists
aaa
incb
test
mov
cmp
je
or
je
fidivrl
mov
sbb
inc
rcll
mov
sub
adc
add
push
nop
pop
mov
cmpsl
pushf
and
pushf
insb
adc
test
cmp
fisubrl
mov
jbe
lods
push
insb
clc
xchg
test
mov
and
pop
lea
or
mov
jl
fbstp
pop
mov
xorl
js
mov
enter
pop
jp
js
adc
mov
inc
dec
sub
inc
int
inc
sbb
mov
inc
pushf
nop
mov
test
push
repz
jl
filds
lods
or
adc
jle
movl
ret
mov
aaa
lea
test
ljmp
js
test
popf
dec
sub
insb
movsb
cmp
shll
popf
adc
cmp
loopne
add
fistpll
mov
test
jnp
inc
jae
cld
pop
cmpb
es
nop
sub
xchg
add
pop
sbb
push
dec
nop
pop
enter
and
sub
insl
int3
loop
ss
popf
adc
out
fistpl
les
mov
dec
or
xor
xor
int
enter
mov
stos
add
ss
adc
push
push
cmp
cmp
enter
adc
notb
adc
cwtl
xchg
add
pop
mov
push
xorb
pop
or
or
sbb
cld
clc
or
call
add
mov
loop
xor
ds
jg
lods
and
rolb
roll
mov
dec
or
push
add
sbb
fsubrs
lea
fsubl
out
insb
pop
jnp
push
inc
outsb
stos
adc
iret
dec
aam
and
popf
cmp
cmc
push
mov
lea
cmp
movzbl
jecxz
jbe
fimuls
std
ffree
and
pushl
pop
inc
pop
cmp
rorb
mov
pop
add
leave
js
sbb
sbb
cmc
mov
jo
push
pop
or
adc
sub
dec
mov
or
imull
ret
pusha
adc
pop
or
pop
xor
insb
inc
xor
aaa
arpl
loope
outsb
add
nop
dec
push
nop
pop
fbld
jl
push
repz
jbe
test
jb
add
mov
jp
cmp
insb
or
movsb
nop
test
jb
mov
jne
cwtl
sbb
xchg
add
pusha
pop
lret
xor
scas
push
jb
jle
loope
ret
shrl
mov
bound
adcb
and
mov
xchg
xor
les
lock
adc
xchg
pop
out
pop
outsl
jns
rorl
jne
inc
fcomps
gs
push
push
stos
inc
in
mov
invd
push
hlt
cmp
sub
and
sub
cmpb
out
inc
movsb
pop
mov
adcl
shlb
cmpsl
pusha
dec
push
and
push
fmuls
xor
jg
fmull
xchg
push
sbb
inc
popa
xchg
mov
rolb
and
inc
test
dec
sbb
test
loop
shrl
fldl
es
fwait
pop
loopne,pn
push
in
pop
jo
add
loopne
lea
ss
mov
push
or
add
xchg
cwtl
sub
test
je
call
loop
fmuls
fsubl
mov
xor
dec
mov
mov
mov
les
pop
xor
inc
jo
pop
out
dec
mov
mov
inc
and
dec
jg
pop
mov
adc
push
add
leave
outsb
insb
or
inc
dec
dec
dec
movsb
pop
addr16
sbbb
pop
and
outsl
or
adcb
push
leave
frstor
adc
push
adcl
xchg
or
ja
inc
push
inc
sub
sub
cmp
xchg
xchg
xor
push
out
dec
mov
or
iret
and
cmpsl
jg
sbb
xor
rsqrtps
clc
pop
mov
or
mov
adc
clc
xchg
mov
push
mov
add
xor
push
inc
insl
daa
mov
sub
and
sub
push
pusha
addr16
pop
nop
xchg
and
and
fiadds
push
rol
sbb
dec
or
dec
mov
les
jae
cmp
sub
adc
js
data16
rcrb
mov
jg
cmp
jg
mov
rolb
inc
push
add
xchg
lea
jbe
cli
pop
cmpsl
mov
push
push
es
mov
jl
aaa
cwtl
std
lea
jge
test
jg
jg
aad
sbb
adc
adc
xchg
pop
mov
ret
cmp
out
fstpl
or
xchg
lret
bound
shll
inc
inc
jmp
inc
fs
sub
je
and
cmp
mov
icebp
add
lds
add
out
inc
push
jmp
test
cmp
jl
repnz
cld
push
sub
fimull
sub
call
xor
jp
add
jno
je
push
push
sbb
push
fdivrl
subl
push
add
or
mov
test
inc
in
es
sub
xchg
push
in
pop
ret
cwtl
cmpsl
aam
pop
in
mov
repnz
sbb
push
shl
jnp
jbe
pop
and
xor
push
imul
insl
fcoms
shll
mov
dec
mov
inc
subl
sub
mov
mov
and
push
nop
push
or
cmpsb
mov
sbb
mov
adc
push
cmp
das
push
loopne
mov
les
les
enter
movsl
sub
stos
jnp
in
movsl
andl
test
or
sub
lds
call
push
sub
dec
sbb
push
dec
clc
or
je
add
mov
fldt
cmp
test
sbbb
and
sbb
sub
and
mov
inc
push
imul
pop
mov
enter
outsl
sarl
pop
pop
push
sbb
and
push
in
inc
stos
test
fs
adc
adc
cltd
mov
add
and
sbb
addl
jge
mov
and
push
inc
cmp
push
sbb
mov
and
leave
xor
loope
xor
clc
hlt
add
lahf
je
xchg
mov
aam
clc
repz
ja
imul
jle
fdivs
dec
pop
cmp
or
xchg
fistl
adc
les
insb
icebp
adc
mov
xlat
xor
dec
arpl
push
test
out
addr16
cld
addr16
dec
sub
inc
add
push
insb
arpl
mov
cmp
jl
repz
imul
push
sub
jle
fsubs
sahf
push
insb
inc
adc
jp
jle
loope
sbb
lea
mov
dec
push
ds
sbb
mov
jg
mov
xchg
loopne
add
cmpsl
cmp
dec
or
loope
paddsw
or
rorb
aam
pusha
out
leave
xor
shr
xor
test
xor
jb
pushf
dec
lock
push
not
loop
push
dec
sbb
pi2fd
test
movl
fmull
cmp
jbe
add
add
mov
or
out
and
or
inc
push
xor
pop
xor
cmc
xor
and
dec
inc
or
aaa
stc
xchg
adc
sbb
nop
and
and
test
sbb
mov
adc
add
les
scas
mov
mov
push
pop
add
cmp
adc
push
inc
push
pushf
xor
fs
cli
pop
mov
add
rorb
icebp
mov
lods
add
mov
sbb
xor
add
jb
or
sub
loopne
pop
insl
adc
outsl
xor
or
mov
inc
or
xchg
pop
pop
push
add
cmp
and
mov
pop
in
addb
sub
addl
push
jmp
idiv
add
add
pop
pop
shrl
or
pop
call
and
xchg
punpckldq
imul
adc
push
ja
lods
and
mov
adc
dec
loope
movsl
pop
push
push
inc
jo
cmc
inc
and
decl
out
cmpsb
loope
cmp
add
loope
dec
jp
push
jo
shll
jbe
xorl
cltd
adc
not
and
adc
or
dec
xchg
mov
addl
push
loopne
push
push
sbb
or
das
subb
aaa
pop
pop
popa
pop
mov
add
pusha
xor
arpl
adc
push
add
push
or
and
add
pop
or
loop
js
jmp
and
mov
cmp
sub
jns
btc
or
xchg
iret
pop
nop
mov
adc
bound
push
jp
cmp
add
push
andb
cmp
mov
scas
or
pop
jo
xchg
add
cmp
ret
xor
in
pop
enter
xor
ficoms
add
insl
mov
jbe
js
add
mov
call
jmp
push
and
aaa
or
push
mov
cvttps2pi
add
mov
mov
push
adc
ljmp
test
xchg
les
mov
mov
and
sub
dec
mov
push
or
xor
and
pop
je
dec
cwtl
push
or
add
or
fiadds
adc
inc
js
adc
pop
sub
jo
and
xor
nop
popa
icebp
cmp
ret
jo
les
sti
xchg
sbb
adcb
clc
and
mov
mov
gs
sbb
mov
sahf
inc
sub
sub
cmpsb
in
pop
test
inc
and
adc
js
sbb
xchg
sub
add
ss
or
pop
imul
sbb
stc
mov
rorb
cmp
cmpsl
xor
add
cmp
mov
add
mov
lret
es
clc
movsb
or
xor
sub
dec
loopne
pop
cmp
rclb
pop
fists
adc
inc
mov
mov
lret
mov
push
daa
xchg
or
push
cwtl
sub
push
pop
sub
scas
cmp
sub
imul
sub
sbb
lods
mov
movsb
add
dec
shlb
add
arpl
frstor
xchg
imul
mov
insb
sub
or
fs
adc
dec
and
cltd
les
mov
mov
xor
int3
lock
add
lret
mov
xor
fcoml
adc
inc
push
shlb
mov
jg
or
mov
nop
test
lahf
lock
push
push
pop
sbb
adc
and
fmuls
xchg
push
pop
or
dec
fldenv
mov
jl
adc
dec
mov
or
mov
push
add
and
sarl
add
push
and
enter
add
dec
leave
test
push
ja
mov
stos
inc
insl
or
into
add
add
sti
push
mov
dec
mov
imul
call
rolb
mov
xor
inc
adc
xor
aaa
lret
mov
and
mov
fwait
sub
mov
cmp
dec
mov
xchg
dec
jmp
cli
fmull
sarl
jle
sahf
jmp
push
cs
test
jle
test
sub
inc
add
jmp
shll
and
cmpsl
push
sbb
pop
pushf
push
mov
lret
imul
test
js
dec
repz
sbb
adc
pushl
push
or
cs
push
mov
mov
movups
inc
push
xlat
lret
mov
movsb
cmpsb
sub
loope
pop
adc
es
scas
movsl
mov
loope
pushf
and
testl
push
xor
dec
mov
add
xchg
adc
cli
sbbl
cmp
je
pusha
or
icebp
or
in
dec
xchg
cmp
je
xchg
xchg
add
js
mov
jne
rcr
push
xor
or
and
dec
test
pop
push
gs
lds
jae
xchg
fsubr
jb
and
add
aad
in
adcb
mov
arpl
xchg
icebp
fnsave
mov
stc
lret
xlat
and
push
xor
add
dec
fisubs
jge
adc
jne
push
roll
mov
sub
fdiv
in
nop
pop
scas
call
nop
inc
xor
mov
inc
call
dec
loope
and
rclb
in
mov
inc
add
or
and
pop
imul
stos
dec
push
je
dec
add
pushf
insl
ficompl
and
or
mov
mov
inc
xchg
xor
or
push
insl
or
and
cli
add
add
mov
dec
and
xchg
jbe
clc
sub
push
mov
inc
push
push
in
lahf
sbb
push
subl
pop
fistps
imul
or
inc
mov
xchg
mov
pop
clc
push
lock
hlt
mov
inc
pop
add
sub
push
daa
jge
sub
int3
sub
inc
and
push
add
push
les
stos
inc
push
mov
xor
xchg
push
sbb
xchg
push
and
push
mov
inc
movsb
push
inc
sbb
xchg
loope
loop
or
xor
dec
jo
or
xchg
es
pop
xchg
ss
push
sti
out
mov
lret
or
sub
cmp
pop
inc
inc
lcall
cwtl
and
mull
std
es
add
jne
mov
mov
add
xchg
addr16
js
cmp
int3
sub
outsl
sbb
decl
inc
adc
iret
jno
ret
lods
jl
insb
addb
nop
lea
fsubl
mov
gs
xor
out
push
or
or
loopne
add
jae
subb
mov
mov
scas
or
jbe
test
push
mov
push
or
or
mov
cmp
cmc
push
fstpl
adc
adc
xor
dec
out
push
push
and
loop
cmp
inc
mov
cwtl
push
xchg
sub
cmpsl
cmc
sub
push
lahf
xor
push
mov
sbb
sub
and
inc
pop
xor
imul
and
mov
pop
fcmovu
sti
xor
cs
jmp
mov
lods
jmp
test
xor
cld
dec
cmp
dec
mov
popl
add
ds
and
pop
jge
cld
pop
adc
add
mov
add
hlt
xor
pop
mov
test
bound
mov
add
popa
push
mov
sbb
push
imul
sub
cmp
and
ja
adc
cmp
aad
repz
add
mov
lea
popf
inc
adc
in
in
xchg
movl
mov
or
push
jecxz
lock
xor
and
push
or
mov
nop
fdivrs
in
sbb
pop
loopne
iret
pop
push
push
or
jecxz
out
int
cmp
mov
loope
push
adcl
out
ja
outsl
push
push
outsb
dec
movsl
test
rcll
aas
dec
aad
xor
sarb
mov
enter
push
and
xchg
sbb
push
cmp
inc
cmpsb
mov
inc
nop
or
push
pushl
stos
mov
xor
ret
pusha
inc
inc
jae
sbb
inc
vhaddpd
out
test
addl
clts
test
xor
xor
or
add
adc
xchg
inc
loop
push
push
sti
je
push
mov
push
adc
push
enter
pop
add
and
jbe
xchg
daa
cltd
jmp
push
mov
sar
fwait
jecxz
jmp
inc
in
daa
push
mov
push
xor
adc
push
inc
adc
adc
popf
inc
out
adc
loope
gs
and
sub
mov
mov
lahf
xlat
cmp
xor
and
push
xor
in
add
adc
or
push
push
push
xor
dec
cmp
pusha
or
or
call
adc
pop
rcrl
jo
popa
enter
les
push
or
push
pop
xchg
adc
add
push
mov
add
xchg
and
cmpsb
and
in
add
push
sub
divl
int3
call
into
dec
dec
inc
push
add
sbb
cmpsb
sbb
loop
xchg
or
test
adc
xchg
push
pop
adc
jno
pop
inc
cmc
xor
adc
mov
hlt
pop
push
lcall
adc
dec
dec
test
adc
int
xlat
mov
adc
addl
pushf
imul
rolb
xchg
sub
cwtl
gs
inc
add
add
dec
lock
insb
popa
cwtl
and
loopne
shlb
or
adc
ds
icebp
pop
enter
push
pushfw
test
int
mov
pop
mov
xorl
imul
lea
stos
add
mov
ss
int
push
rolb
dec
cmc
ret
imul
dec
imul
int
jne
xor
imul
add
aad
push
and
add
enter
std
and
mov
sahf
addr16
adc
dec
pop
add
mov
or
or
or
cmp
es
in
sub
or
mov
and
mov
jle
ret
fucomi
jo
pop
lea
or
test
push
in
xor
dec
dec
pusha
mov
rol
mov
ror
xor
shr
xor
in
lcall
rol
mov
rol
xor
shr
xor
add
add
add
mov
ds
add
shl
fs
or
ja
jns
jae
or
and
xor
add
push
popa
sti
icebp
add
aam
sub
jbe
adc
scas
push
mov
ror
mov
fisubrs
jge
xor
test
fsubs
fiaddl
xor
xor
xchg
data16
repnz
sub
xchg
dec
movsl
mov
or
add
ret
rcl
add
add
stos
addb
add
call
shr
rcl
pop
shll
call
dec
xor
mov
cli
mov
rol
cmpsb
imul
add
push
xor
push
cs
fcomp
loopne
imul
xchg
add
cmp
and
lahf
push
cmp
bound
push
js
xor
bound
pop
mov
pop
imul
aaa
mov
xor
mov
xor
loopne
shlb
fs
xchg
lret
loopne
cmpsb
cltd
and
xor
dec
lcall
in
xor
or
int3
test
ret
inc
into
add
in
sarl
jnp
push
xor
and
and
out
iret
or
push
into
add
and
dec
fadds
inc
adc
add
pop
mov
push
pusha
fildl
jo
ret
push
jo
ficoms
add
mov
inc
daa
lcall
js
adc
adc
push
loop
mov
testb
cltd
push
inc
fadds
pop
jbe
dec
subl
fisubl
pop
fdivrs
jp
push
and
add
gs
dec
xorb
and
inc
call
pop
sbbl
mov
test
or
adc
adcb
aam
aaa
cmp
cmpsb
imul
xchg
inc
mov
add
mov
shr
rolb
inc
aaa
sub
or
jge
xor
mov
dec
inc
shll
loopne
and
in
pusha
or
jo
add
push
movsb
add
and
sahf
dec
adc
dec
xor
and
push
dec
xor
and
add
push
xor
pop
dec
sbb
sub
cmp
dec
push
push
push
pop
or
sub
fs
movsl
cmp
stos
mov
push
add
dec
in
push
xadd
or
or
xor
je
xorb
pop
xor
dec
inc
pusha
js
inc
mov
pop
mov
or
and
sbb
adc
movsb
sahf
fs
subl
shlb
cmpsl
jl
sub
push
dec
dec
dec
icebp
stc
jp
inc
inc
stc
stc
mov
adc
mov
xchg
inc
dec
mov
dec
idivb
shll
loopne
int
mov
loopne
or
and
add
and
ds
jno
pop
add
mov
push
dec
sbb
push
pop
add
sub
mov
int3
add
inc
scas
add
pop
push
lea
pop
les
sub
add
sub
xchg
or
pop
xor
add
adc
enter
add
sarb
and
or
mov
jo
mov
adc
cltd
in
outsb
shr
cmpsb
push
inc
jae
mov
sub
icebp
xor
xorb
aas
lea
jmp
lea
inc
sti
mov
push
sub
pop
add
ffree
mov
or
mov
dec
jne
pop
and
loope
lock
out
std
mov
or
cmp
jbe
or
fs
adc
mov
negb
jae
push
pop
fadds
fildll
and
lods
mov
sti
stos
shrl
push
mov
mov
int
push
xchg
or
xchg
ljmp
mov
cmp
mov
and
xchg
dec
inc
mov
enter
pop
push
and
aam
add
add
test
inc
add
xor
sbb
cld
in
add
jmp
or
jmp
data16
rorb
repz
or
aas
leave
test
sub
xchg
mov
push
xor
lods
popa
or
xor
inc
movsb
adc
hlt
jbe
push
or
js
xchg
loope
sub
adc
add
lea
icebp
mov
or
jle
dec
scas
jae
mov
andl
pushf
and
std
add
sub
mov
or
addr16
add
jo
imul
and
cmpb
sbb
cmp
push
cmp
or
jo
sbb
pop
imul
cmp
rclb
mov
fistl
ret
or
pusha
ljmp
call
sub
and
inc
xor
or
mov
cmpsl
or
add
dec
or
stos
and
test
sub
dec
in
mov
push
mov
shlb
arpl
adc
test
mov
sbb
mov
jl
sbb
pop
orl
pop
cmp
fdivl
sub
cmp
cmpsb
push
mov
adc
test
imul
sub
std
add
dec
add
xchg
movsb
xchg
mov
in
loopne
add
add
cwtl
ret
jle
es
movsb
addb
pop
push
cmp
sub
push
mov
pusha
pop
enter
xchg
or
imul
and
adc
cld
sbb
pop
out
cmpl
hlt
push
mov
loope
test
test
sbb
in
cmp
cltd
rcr
mov
push
loope
adc
and
push
xchg
jl
add
nop
jns
cmp
lods
sub
push
inc
pusha
test
popa
push
jge
adc
sahf
push
shll
dec
lea
inc
mov
loopne
ja
loopne
popf
cmpsl
sahf
shlb
mov
ret
loope
mov
add
mov
mov
movsb
and
test
add
sub
jo
add
cmc
mov
mov
inc
fmull
jmp
inc
lret
xchg
addl
lcall
inc
xchg
push
jg
testb
pop
mov
pop
mov
and
insb
loopne
or
jo
mov
mov
ret
and
inc
cmp
popa
and
aam
xorl
pusha
lock
xchg
pushl
add
packssdw
sbbl
mov
pop
add
sub
mov
jnp
fwait
inc
mov
jle
mov
cmp
lret
sbb
sbb
push
cmp
and
mov
xor
sbb
fsts
cmp
mov
ds
add
mov
ret
mov
rclb
test
sarl
fcoms
inc
iret
sub
scas
add
cmp
xor
xor
jmp
and
pop
xorl
sub
mov
lods
stc
cld
lret
xor
xchg
push
push
cmp
push
cs
push
mov
out
jge
xchg
jbe
add
mov
hlt
out
dec
lret
mov
add
cs
push
pop
adc
or
xchg
filds
shlb
mov
push
push
xchg
je
enter
push
mov
rorl
outsb
xchg
mov
cmp
cmp
mov
pop
jne
dec
loopne
adc
push
or
pop
push
cmp
adc
punpcklbw
cmp
daa
mov
in
cmpb
es
dec
push
add
dec
repnz
add
lods
in
adc
push
add
mov
or
subl
jge
push
push
jmp
rorb
push
and
push
mov
sarl
jb
jmp
into
jbe
push
enter
adc
je
adc
stos
sbb
sub
xor
incb
or
mov
xchg
je
fldcw
xor
dec
pop
mov
mov
sbb
push
jns
mov
jl
iret
cltd
loopne
ret
jns
je
and
mov
int3
sahf
orb
push
shl
xor
inc
out
push
and
push
pop
imul
ret
sub
mov
call
aad
xchg
lock
insb
or
or
pop
mov
xor
adc
add
and
daa
adc
mov
dec
addr16
push
adc
js
mov
mov
mov
push
sub
cmp
hlt
mov
add
roll
lcall
movsb
push
sub
pop
push
pop
cli
push
mov
fld
push
call
adc
cmp
add
push
push
jp
jbe
shlb
stos
push
or
add
lods
das
inc
push
cmc
dec
bound
mov
loope
leave
fisubs
inc
dec
add
inc
push
push
cwtl
jmp
jmp
sub
push
ret
add
push
rorb
pop
and
and
jo
push
popa
jmp
data16
xor
xchg
mov
ret
subb
add
push
xor
and
insb
je
fs
insl
add
fidivl
add
push
adc
bound
cli
mov
push
inc
shll
push
sbbl
dec
test
adc
cmp
push
push
enter
out
mov
xor
dec
pop
cmp
loop
add
xchg
jno
jno
sti
test
mov
shll
cmp
pop
mov
push
dec
sbbb
jp
add
imull
cmp
dec
inc
add
sbb
aaa
inc
sbb
daa
pop
sar
bound
stc
ja
ja
cmp
jl
push
cmp
jb
mov
push
mov
xor
mov
jns
jp
es
sahf
dec
test
jnp
sbbl
sbb
cli
out
or
jmp
xor
pop
pop
call
out
cmp
das
dec
cmp
dec
adc
adc
addl
dec
lahf
mov
jbe
mov
dec
sahf
shrb
mov
scas
test
clc
mov
gs
mov
dec
xor
pop
ret
int3
jmp
pushf
xchg
or
sbb
movsl
mov
mov
sbb
add
mov
jle
add
add
adcb
add
jg
ret
stc
jne
mov
pop
mov
mov
inc
cmp
jnp
xchg
push
inc
cmp
mov
movb
call
adc
in
ficoms
add
nop
in
mov
mov
add
inc
dec
mov
jne
imul
add
dec
inc
das
int3
incb
jl
or
rorl
hlt
fidivrs
adc
xor
jae
mov
pop
pop
dec
add
add
lcall
aaa
mov
fnstcw
jge
je
add
dec
push
or
pop
push
shr
cmp
lea
and
mov
push
inc
cmp
jl
pop
push
pop
add
push
aam
mov
or
addl
xor
popa
xor
and
push
push
aaa
adc
push
push
inc
add
out
or
jle
data16
pusha
stc
pushf
xor
sbb
in
icebp
sbb
faddp
push
das
movsl
or
cwtl
test
push
jl
cltd
or
test
push
jns
adc
xor
jbe
xchg
xor
ret
ja
arpl
pop
or
dec
dec
adc
dec
test
rsqrtps
and
cmp
sbb
mov
cmp
push
lea
stos
xor
mov
sbb
movntps
add
ret
mov
in
inc
push
mov
pop
mov
xor
mov
pop
xor
push
add
or
dec
mov
push
in
jg
jg
and
loope
and
add
mov
enter
sar
gs
push
add
xadd
add
lret
mov
push
mov
dec
icebp
push
adc
movsb
mov
adc
add
jne
push
into
jl
jge
mov
iret
push
fidivrs
mov
lea
add
mov
mov
arpl
pusha
clc
sub
fisubrs
dec
lea
pushf
mov
repnz
inc
sub
fs
mov
arpl
add
sub
adc
cmpsl
adc
lock
mov
inc
add
add
inc
push
test
clc
jecxz
rclb
and
push
mov
rcl
jp
xor
push
std
jl
mov
lods
adc
add
and
or
inc
inc
jmp
lock
or
cmp
xor
jle
push
or
test
stos
add
inc
pop
divb
sub
xor
push
sbb
scas
es
cmp
shlb
inc
dec
ljmp
mov
and
adc
push
cmpsl
push
movl
sub
outsl
push
mov
sbb
push
jns
jae
adc
add
and
xchg
xchg
or
pop
jo
mov
lret
clc
mov
ficoms
adc
loopne
xchg
jo
mov
sub
xchg
cmp
jnp
pop
sarl
or
push
or
movsb
pusha
sub
hlt
outsl
enter
mov
out
xor
cmpsb
add
xor
cwtl
adc
int
mov
dec
sub
add
cmpsb
ret
jle
fld
pop
mov
push
aam
add
pop
jbe
std
jnp
or
jmp
push
js
jbe
mov
jmp
xor
pop
sub
inc
test
cmp
cmp
push
addr16
cmpl
arpl
and
in
adc
or
out
dec
sbb
pop
dec
push
adc
add
cmp
div
pop
push
ret
adc
orb
and
into
add
pusha
cmp
push
call
pop
insl
cmpsl
fimuls
or
fcom
pop
push
sbb
cltd
repnz
add
jae
loope
lahf
pusha
leave
mov
and
lds
and
inc
shlb
jnp
mov
icebp
inc
and
xchg
xor
lock
adc
and
ret
push
sbb
mov
add
imul
add
push
flds
pop
ret
cs
fsubs
or
pop
jmp
sub
or
inc
adc
push
lea
cmp
sub
pop
popa
or
roll
push
sbb
stc
aad
cmpsb
mov
fsubrl
in
jmp
or
and
pop
cwtl
rorl
add
dec
add
cmp
pop
push
and
and
push
pop
or
jbe
repnz
adc
jne
sbb
int
adc
scas
jne
dec
mov
stos
xchg
rorb
xor
mov
std
xchg
inc
add
lret
or
ret
rorl
push
and
hlt
push
sub
mov
aam
adc
mov
gs
adc
xor
ja
roll
dec
and
cmp
and
clc
mov
xor
mov
xlat
pop
xchg
bt
cmp
mov
pop
push
mov
mov
test
xor
xchg
movsb
xor
cmp
and
push
rcrl
clc
je
ret
pushaw
shrl
sbb
cmp
dec
in
push
das
xor
inc
mov
loop
loopne
jle
icebp
cmpl
sub
daa
stos
push
add
pop
push
out
pop
pushf
push
xchg
add
pop
mov
pop
push
imul
push
adc
jp
orb
push
push
cltd
push
shlb
inc
or
xchg
jne
fcompl
jl
add
push
and
lods
test
pop
into
in
pop
lods
adc
add
or
test
cmpl
jne
sbb
je
mov
and
cmpsb
sbb
and
bndstx
out
mov
or
cmpl
repnz
cmp
jle
cmp
call
add
ja
mov
jmp
mov
cmp
in
into
mov
rol
test
mov
jne
push
in
xor
push
xor
cltd
push
or
push
das
test
pop
push
inc
xchg
rcrb
cmp
ret
call
pop
ret
insb
gs
arpl
mov
insb
mov
cmpsl
outsb
push
fimull
push
inc
or
pop
push
js
or
jo
jne
jp
or
pop
cmp
shlb
inc
aas
or
cmpsb
imul
push
sub
inc
jo
jne
addl
nop
pop
mov
test
cmp
lret
shlb
stos
addb
dec
repnz
rcl
out
stos
mov
or
clc
stos
lret
jne
and
in
movl
xor
jge
mov
sub
add
mov
in
jo
std
or
sarl
sbb
mov
sub
aaa
sbb
divb
adc
push
add
stos
mov
cmp
mov
jmp
sub
xor
mov
aam
adc
add
add
mov
pop
sub
shll
dec
popa
sub
inc
pop
cltd
lret
int
or
adc
add
pop
cmp
sbb
push
pop
mov
push
add
jo
es
loopne
jae
add
movsl
addr16
and
push
jmp
loope
cmp
mov
lods
dec
ret
mov
mov
jg
push
bound
push
adc
das
jg
add
push
push
popa
adc
hlt
rol
inc
xor
scas
cmp
insl
xor
jo
and
lcall
xor
je
adc
hlt
or
push
mov
shlb
dec
sbb
or
inc
mov
push
inc
pusha
mov
inc
test
inc
jno
popf
mov
push
stc
pushf
or
mov
xlat
stos
and
pop
xorb
push
adc
mov
and
scas
rcrl
std
add
mov
inc
lock
rorl
sbb
mov
cmp
sbb
or
cld
push
mov
inc
fiaddl
pop
cmpb
aas
nop
sbb
leave
jmp
lea
push
sbb
xchg
dec
adc
cmp
or
inc
loopne
or
lret
into
jne
data16
sbbb
or
adcl
fdivp
mov
sbb
jmp
push
xchg
push
rorl
or
inc
addb
ds
sbb
mov
daa
xor
outsb
pushf
jae
int3
out
std
cwtl
nop
lcall
xor
sbb
mulb
sub
cmp
mov
jno
inc
xchg
cmovnp
pop
pusha
inc
in
fsubrs
jp
repz
jg
jne
cmp
jne
push
xchg
mov
leave
inc
popf
and
in
pop
cmp
dec
subb
push
rclb
adc
jmp
cwtl
repz
les
xchg
mov
das
xor
loopnew
in
adc
test
cs
xor
mov
mov
inc
add
jb
js
mov
ja
sbb
call
pop
sti
sub
or
ljmp
add
sub
sub
mov
xchg
push
addb
mov
sbb
sarl
push
pop
push
ja
and
pop
fwait
cs
or
rolb
inc
or
add
add
lcall
adc
adc
jle
adc
jmp
hlt
jmp
dec
rcll
sub
int3
add
imul
push
test
add
imul
and
loope
and
jle
rolb
pop
and
add
adc
orl
dec
pusha
divb
test
mov
pop
lcall
icebp
je
jmp
or
rcrb
sahf
mov
xchg
mov
push
inc
test
cmp
rol
outsl
cmp
add
gs
outsl
push
push
sub
jo
cmp
fiadds
jbe
fwait
or
or
adc
xor
movsb
push
lock
adc
inc
fiadds
adcb
in
add
roll
loop
std
ror
pop
outsl
rcrl
js
fs
and
adc
ss
in
cmp
add
clc
fcmovnb
clc
push
loopne
cmp
insl
loopne
ljmp
or
mov
adc
lods
mov
call
inc
popa
add
fisttpl
sub
aad
shll
lock
lods
leave
shlb
les
es
sbb
in
dec
and
adc
push
or
bound
adc
inc
scas
pop
inc
dec
pop
pop
ljmp
popf
jmp
shlb
bound
int3
sbb
mov
cmpsb
mov
jo
xchg
push
adcb
enter
sub
xor
or
adc
addb
mov
push
sub
pop
in
adc
xchg
jle
cmp
pop
dec
cmp
push
jno
adc
xor
xchg
es
pop
ja
in
jmp
mov
lock
out
push
push
pop
push
shlb
test
push
pop
xor
icebp
push
fmulp
mov
adc
push
inc
cmp
fs
lods
and
xor
mov
xor
stos
pop
add
lcall
sbbl
rorl
out
add
ja
adc
dec
push
loopne,pt
add
clc
jae
pop
adc
cmp
add
out
jl
and
pop
roll
sub
ss
je
sar
xor
repz
mov
cmp
mov
xchg
mov
divl
sbb
sbb
adc
xor
inc
scas
in
add
ficoms
and
pop
int
pop
pop
ret
dec
push
cltd
xor
or
or
xchg
sbb
aam
jns
adc
sbb
stos
cmpsb
push
cmc
or
arpl
mov
sub
gs
xor
inc
push
out
jb
loop
or
dec
jmp
jmp
xor
mov
pop
sub
inc
fs
sub
je
lock
testb
jbe
adc
mov
and
push
dec
push
out
sub
sarb
cmc
sbbb
movsb
jbe
add
pop
sbb
les
inc
inc
xchg
cmp
lock
pop
jb
cmp
push
js
jmp
xchg
lahf
pop
daa
shll
jp
push
inc
shll
loop
or
xchg
add
adc
push
je
mov
jge
mov
shlb
push
add
or
push
ds
fsubrs
cmp
push
out
push
inc
call
add
and
push
shlb
sub
adcb
or
add
sub
movsb
cmpsb
xor
lock
dec
adc
xchg
insl
adc
dec
and
mov
or
icebp
std
jns
pop
je
jmp
or
push
dec
xorl
push
dec
out
push
or
sbb
or
add
movsb
inc
sbb
push
aaa
jae
xchg
sub
loopne
sbb
push
insb
sbb
or
and
jecxz
push
xor
icebp
jo
xchg
js
imul
inc
cmp
mov
push
and
and
pushf
es
push
mov
aaa
sbb
pop
pop
and
pop
scas
sbb
rorb
xor
sub
push
inc
jl
and
inc
loope
add
clc
ds
and
mov
xchg
add
in
and
and
dec
shrb
jno
pop
cmp
rorl
jnp
mov
sbb
xor
and
jl
ss
jb
stos
dec
xchg
rclb
in
clc
lret
lahf
pushf
push
mov
adc
push
push
ret
or
or
adc
xor
jmp
cmpsl
and
cltd
adc
xor
cmpsb
jne
pop
mov
dec
pop
test
adc
dec
out
inc
xor
push
push
add
test
dec
cltd
sub
xchg
sub
mov
shll
stos
dec
ja
push
pop
ja
sbb
mov
dec
je
stos
jmp
adc
mov
push
imul
jo
rorl
jbe
cmp
push
lods
shll
or
lds
shlb
add
add
mov
lods
adc
xor
rorl
adcb
or
sarl
inc
js,pt
xor
add
shrb
cltd
out
add
and
mov
lret
enter
add
aaa
pusha
nop
jo
xrstor
ds
mov
and
cmp
mov
and
clc
jg
fs
test
movd
out
or
sub
push
clc
jae
xor
jns
insl
or
xor
cli
rcl
lret
adc
mov
jl
xchg
insb
fbld
repz
or
jg
or
xchg
ret
adc
jnp
mov
out
jge
test
into
mov
add
adc
push
add
mov
and
mov
pop
add
imul
ret
mov
imul
mov
pusha
addsd
int
out
std
out
fldl
sbb
sbb
inc
pop
fistpl
adc
int
and
xchg
xchg
inc
imul
bound
daa
inc
or
les
pop
and
adc
incl
xchg
adc
pop
dec
dec
and
pop
xor
addr16
push
push
ret
jge
mov
test
ret
jge
xchg
pop
enter
adc
or
inc
mov
adcb
or
jb
pop
add
lock
mov
mov
cmp
jb
neg
insb
je
sub
mov
xor
add
xchg
sub
jne
cmp
or
rorl
lret
adc
stos
mov
rol
push
dec
ljmp
jg
leave
pusha
icebp
movb
push
int
inc
mov
roll
movb
clc
jb
push
cmp
ss
and
cmovs
pop
scas
push
mov
jg
call
cmp
jb
rep
jmp
xlat
aad
nop
sub
cmp
jb
cltd
fildl
mov
enter
das
out
push
sahf
mov
in
push
dec
cmpsb
push
and
push
and
dec
pop
lcall
add
add
jl
psubw
dec
add
movl
lcall
cmp
or
push
mov
mov
iret
jno
mov
inc
in
sahf
out
sahf
call
hlt
jno
out
hlt
clc
clc
cld
sti
test
adc
clc
f2xm1
ds
subl
or
and
int
call
pop
or
shll
outsb
sbb
lea
jl
cld
or
push
jo
and
std
cld
out
jo
push
sbb
adc
and
enter
xor
test
test
rcr
add
dec
gs
out
add
sub
ret
out
push
add
nop
dec
dec
addr16
sbb
add
push
mov
repz
mov
or
push
xor
inc
repz
cmp
push
xor
sbb
repz
sbb
sbb
adc
repz
or
or
dec
enter
inc
andb
lahf
testl
xor
sub
xchg
cmpsb
push
add
pop
jns
ja
andl
and
xchg
add
jbe
mov
movsb
mov
pushf
add
icebp
and
daa
mov
in
or
jne
scas
nop
fbld
pushf
add
lcall
lock
and
mov
test
je
sbb
add
push
mov
adc
mov
push
push
inc
inc
add
fldt
and
mov
jmp
jp
je
mov
sub
rorl
sahf
mov
pop
dec
xor
xlat
fnstcw
cltd
bound
mov
jne
imul
add
and
mov
cmp
mov
xchg
les
jb
and
adc
or
cmpl
sbb
call
add
or
popf
rol
push
dec
mov
add
lock
subb
mov
or
pop
fisubs
mov
in
iret
adc
divb
xchg
jmp
push
push
xorl
mov
scas
mov
push
loope
sbb
push
xchg
aas
mov
push
sbb
insb
pop
push
cmp
mov
inc
mov
cmp
jne
inc
cmp
inc
scas
test
xorb
ljmp
adc
clc
inc
inc
cs
adc
cmp
adc
mov
out
and
pusha
jmp
and
flds
inc
aas
mov
aam
inc
inc
cmp
mov
jl
add
sahf
lret
adc
outsl
es
adc
cmp
ret
dec
mov
aam
xchg
shrb
pop
or
scas
add
lock
das
sub
xchg
mov
mov
jecxz
inc
add
cmpb
imul
cmp
mov
mov
dec
daa
mov
stos
je
add
enter
adc
sarl
sub
add
ret
fdivp
out
xchg
shl
shlb
dec
leave
sbb
cmp
or
or
inc
pop
cmp
mov
mov
push
movsb
push
rol
mov
inc
cmp
aam
lret
jne
sbb
pop
rolb
jg
inc
ret
xchg
lock
jnp
jo
and
test
mov
lods
jmp
lods
or
sbb
adc
sub
sbb
cmp
ffree
nop
cltd
xchg
xor
inc
or
cltd
sbb
out
testb
push
add
orl
or
push
and
adc
sbb
push
shl
push
hlt
aad
fmull
and
xor
adc
fadds
cmp
xorl
and
lea
xor
ja
outsb
mov
dec
inc
cmp
cli
sbb
jmp
incb
loop
ljmp
push
sub
fwait
popa
cltd
neg
mov
fdivs
cli
or
add
jmp
or
mov
inc
ds
jbe
mov
push
cld
jb
insl
ret
push
and
jb
into
jmp
hlt
outsl
lcall
pop
mov
dec
dec
mov
inc
cmp
jb
lret
ret
pop
out
push
das
adc
mov
and
push
lea
sbb
pop
or
mov
sbb
cmp
adcb
outsl
jmp
sbb
dec
dec
fistps
icebp
ljmp
insl
push
cmp
jb
lea
push
outsb
mov
xor
int
sti
jg
shlb
push
cld
jne
mov
push
cmp
jne
dec
rcr
cmp
jne
call
orb
in
subl
jecxz
jmp
adc
push
dec
jmp
adc
jmp
jns
sahf
cmp
std
jmp
cld
cld
es
cltd
ret
pmaxub
xchg
ret
adc
push
jb
push
inc
hlt
in
cmc
push
movb
shr
stc
mov
or
mov
jae
adc
popf
rcll
clc
jb
or
testb
mov
pop
adc
sbb
pop
cmp
loope,pn
cmpsb
or
sub
add
sub
and
test
stc
dec
add
lea
cmp
sbb
add
and
adc
adc
ss
adc
sub
dec
xchg
jmp
lea
mov
adc
push
enter
add
adc
or
dec
mov
decl
dec
or
jg
add
mov
js
mov
outsl
jno
add
push
jo
ret
adc
and
mov
push
mov
ljmp
mov
dec
orb
aad
sub
push
push
pop
div
jb
adc
adc
outsl
xor
les
nop
dec
movb
clc
xchg
loopne
mov
pop
pop
mov
loopne
clc
pop
adc
push
mov
adc
or
shrb
push
sub
sbb
rcrl
or
imul
fsts
and
sub
pop
add
int
cs
and
cmp
mov
outsl
adc
cmpb
aam
divl
cmc
mov
add
or
add
movsl
pusha
popf
popf
leave
dec
dec
mov
adc
or
or
data16
and
lods
push
mov
adc
aaa
es
lea
cmpl
dec
mov
mov
roll
xchg
xor
loopne
mov
inc
jmp
cmp
jne
orl
jmp
adc
outsb
adc
jne
sub
decb
loopne
cmp
jg
or
dec
or
xor
pop
or
and
or
adc
or
adc
fwait
out
jne
dec
add
add
lds
and
lret
cld
test
mov
add
mov
jmp
mov
fidivs
lret
sub
cmp
ja,pn
sbbl
xor
jae
push
or
jb
movsb
xor
xchg
lock
lock
inc
or
dec
jg
dec
test
push
je
ss
pop
inc
push
lods
fs
cld
inc
mov
add
inc
loop
mov
test
jne
test
jne
clc
cmc
sub
push
xorl
js
inc
arpl
jbe
inc
testb
mov
inc
ret
popf
mov
add
add
push
push
stos
into
mov
or
jg
in
rolb
sbb
and
mov
pop
pop
mov
jecxz
or
loop
add
das
or
add
sub
popa
push
sub
cwtl
rorb
push
mov
enter
xchg
jg
call
stos
mov
shr
hlt
and
sarb
or
pop
xchg
sub
test
jo
mov
mov
push
push
xor
outsl
pop
push
jno
mov
shrb
idivb
mov
jmp
rolb
inc
inc
push
sbb
xchg
adc
sbb
sbb
shlb
nop
mov
inc
inc
data16
lea
sar
dec
jo
xor
and
call
je
hlt
xor
cmp
int3
jl
inc
or
xor
sub
dec
jle
inc
mov
mov
cmp
mov
mov
lret
shrb
subb
xor
xor
dec
push
aas
push
or
movl
push
push
popf
scas
roll
jno
lock
leave
jl
sbb
mov
push
xor
xor
add
stos
xchg
hlt
and
adc
in
decb
scas
adc
punpckldq
add
pusha
orl
dec
ret
pop
push
adc
cmp
outsl
push
dec
test
shlb
sub
mov
and
pop
jae
fwait
or
enter
add
sub
loop
mov
addr16
sti
sbb
dec
adc
fidivs
sub
push
add
push
loope
pusha
test
mov
add
add
loopne
fdivr
das
hlt
je
inc
cmp
jb
lea
push
adc
aam
cmp
push
dec
ss
add
add
das
test
and
js
out
jle
test
dec
add
sbb
or
aas
sbbl
mov
test
pavgw
ret
jne
push
out
cmp
mov
sbb
cmp
data16
rcrl
mov
inc
pop
jmp
pop
mov
inc
push
xchg
inc
jo
push
rcrb
sbb
push
dec
mov
inc
and
push
lret
or
pop
lret
pop
jae
fnstenv
cmp
call
push
outsb
das
xchg
sbbl
and
icebp
add
or
leave
mov
nop
scas
out
ret
daa
ss
orb
sarl
mov
and
xchg
adc
mov
loop
mov
std
pop
std
movb
sub
jge
fnsave
inc
mov
sbb
push
push
jge
orl
fisttpl
test
lret
mov
or
rorl
jle
sti
pop
adc
xor
ja
loopne
push
jns
or
dec
popa
aad
jg
mov
sub
mov
mov
ficomps
testl
test
xor
lcall
les
xchg
cltd
lods
fwait
jle
into
and
aad
jl
mov
push
popf
aaa
pop
pop
decl
int3
push
inc
mov
js
add
insb
ljmp
mov
shl
pop
add
paddsb
inc
rorl
in
dec
ret
ds
xor
repnz
lock
pop
or
and
pop
daa
ljmp
or
push
cli
inc
push
mov
fdivrl
int3
mov
mov
cmp
pop
je
push
adc
adc
mov
push
or
or
cwtl
int
out
adc
inc
ljmp
mov
loopne
jno
push
push
mov
mov
xor
mov
pop
fmuls
and
inc
faddl
loopne
out
add
lds
xor
loop
lods
jp
jle
dec
pushl
push
jp
and
xlat
test
lcall
jno
mov
cmp
je
cmpsb
pmaxub
loop
lahf
push
sbb
cmp
call
nop
loope
mov
movsl
in
mov
add
xlat
push
or
sub
pop
cmp
cmp
sub
xchg
cs
fstps
pop
sbb
aam
fldt
outsb
mull
jl
and
mov
add
cmpsl
mov
nop
shrl
out
and
fisttpl
aam
add
aas
popf
test
cmp
jne
or
and
lods
dec
mov
adc
cmpsl
push
lea
sub
sub
sub
mov
lock
sbb
shrl
imul
add
and
add
add
scas
movsb
mov
mov
mov
add
mov
dec
or
add
nop
popl
pop
push
pop
addl
test
adc
dec
pop
push
dec
pop
std
fdivr
push
test
cmp
pop
pop
call
push
daa
mov
fnstcw
je
push
jbe
adc
mov
adc
loopne
add
cs
in
bound
movsl
add
xor
hlt
aam
jp
ret
jbe
adc
mov
mov
shll
jge
pop
xor
pop
mov
mov
in
dec
loop
or
loopne
or
adc
inc
out
hlt
ss
push
addb
movl
or
ss
loopne
push
call
sub
jp
fucomp
scas
cmp
orl
or
je
inc
shll
adc
xchg
add
cmp
jno
stos
ret
xchg
fistl
loope
adc
test
jmp
cmpsb
push
pop
xor
mov
cli
jmp
in
std
pop
lcall
and
lods
sub
int
dec
mov
adc
push
push
pop
jle
aaa
mov
cmp
je
fs
idivb
xor
sub
je
fimull
mov
ret
lea
repz
imul
jo
pop
add
and
enter
daa
add
push
repnz
adc
jmp
add
aaa
sarb
jno
je
lcall
flds
add
add
mov
push
xchg
xchg
inc
enter
pop
jb
or
in
xor
or
cmp
xchg
dec
or
sub
or
test
or
add
inc
fisubs
mov
mov
push
xor
cmp
ja
lcall
adc
xchg
add
push
pop
adc
fwait
sub
jb
sahf
adc
inc
or
iret
in
repnz
add
adc
push
push
and
add
lea
out
adc
adc
adc
inc
adc
inc
push
nop
push
push
pop
pop
cs
or
sbb
sbb
enter
sbb
sbb
in
cmp
call
adcl
rep
sub
je
pop
sbb
inc
sbb
sbb
jge
sbb
sbb
sbb
and
pop
pop
sub
incl
add
sub
cmp
testb
sub
mov
movl
or
scas
test
mov
push
repz
cmp
je
lcall
push
in
repnz
lea
aad
add
cmp
out
add
fwait
out
push
or
dec
push
jbe
jns
aaa
add
jge
nop
adc
dec
dec
cwtl
jmp
enter
ljmp
sbb
ss
push
jns
in
in
in
cltd
cmpb
in
pop
enter
out
out
jge
and
and
sbb
pop
add
movsb
mov
nop
addr16
icebp
icebp
pslld
jns
repnz
std
sub
leave
std
hlt
cmpb
pusha
hlt
fwait
sbb
addr16
cmc
cmc
inc
jg
add
mov
negb
inc
enter
idivl
std
clc
cmp
xor
clc
cltd
adc
inc
stc
lock
cli
xor
cmp
iret
sti
dec
in
jb
sti
stos
cld
cld
cld
add
enter
push
sete
std
xor
push
repnz
sbb
adc
ljmp
push
cmpsl
mov
lahf
shrl
sbb
in
or
or
push
andl
xor
jecxz
std
in
jns
sti
in
in
mov
icebp
inc
mov
stc
daa
xchg
sti
out
rolb
sbb
out
outsb
and
xor
sbb
pop
repnz
sbb
jae
jmp
cltd
leave
and
add
pop
popf
cli
sbb
js
out
out
out
cltd
mov
add
cli
add
pop
and
cli
sbb
jmp
jb
cmp
cltd
sar
push
and
stc
lcall
div
in
jns
negl
fwait
xor
mov
add
stc
cmp
mov
out
clc
cmp
dec
push
sti
sti
sti
cltd
jb
mov
cld
addl
pusha
cmc
sbb
cmp
and
inc
or
sub
push
sub
loop
icebp
mull
jns
jne
pop
shl
sbb
pop
repnz
idivl
test
sbb
out
jns
xor
inc
mull
pop
repnz
negl
sti
imul
ljmp
negb
in
repnz
xchg
notb
insb
out
out
scas
in
pop
jno
negb
pop
leave
and
testb
dec
in
rcrl
and
sub
mov
das
xchg
inc
pop
pop
xchg
cmc
jae
lret
and
jns
lcall
pop
pop
out
pop
add
clc
jmp
add
jecxz
stc
cmpsb
repnz
popa
cmp
adc
xchg
cli
jno
hlt
pop
leave
and
iret
adc
xchg
hlt
sbb
xor
pusha
cmpsl
push
pop
add
add
sti
lahf
xchg
mov
adc
ds
sbb
loope
loope
push
mov
xor
loop
scas
repz
test
imul
jb
repz
repz
in
repz
xchg
cmpsb
jb
sbb
mov
adc
cmc
mov
mov
inc
xlat
xchg
repnz
out
inc
sbb
in
aaa
cmc
and
mov
inc
xlat
add
and
rclb
inc
sbb
icebp
repnz
divb
icebp
repnz
test
test
sub
cmc
cmp
lea
pop
pop
jb
jecxz
fstl
add
dec
ret
popf
mov
stc
stc
cmc
mov
lock
lock
and
and
pop
xlat
push
lock
test
ss
mov
out
push
sub
out
or
in
ret
enter
cmovno
push
add
mov
iret
add
stos
add
jno
fmuls
jp
push
jnp
adc
mov
adc
mov
or
dec
xchg
mov
add
sahf
and
pop
adc
dec
add
push
fisubs
dec
or
paddq
and
sub
add
push
sub
popa
lods
push
push
lea
pop
sahf
out
insb
mov
or
int
sarl
outsb
jp
fwait
pop
jmp
imul
jmp
or
pop
mov
sahf
push
pop
jge
push
loope
rol
repz
jns
pop
push
xor
pop
adc
mov
and
cltd
or
hlt
mov
push
shlb
pop
pop
clc
std
clc
loope
mov
pop
aam
lock
cld
test
pop
inc
cld
jge
push
sbb
push
add
pop
pop
jle
pop
push
enter
nop
cmp
adc
sbbb
rorl
hlt
inc
and
add
push
imul
lds
fldt
and
add
insb
sub
mov
jnp
add
gs
lock
add
sub
inc
jl
shll
lea
and
movsl
jae
sbb
les
loope
sahf
jge
mov
into
out
ror
jle
adcb
movl
push
inc
adc
adc
in
mov
pop
test
or
fdivrp
add
sub
jne
insl
or
xchg
jne
subb
mov
test
mov
shlb
sub
pop
xchg
ret
inc
inc
inc
pop
fs
test
xor
jmp
sub
adc
inc
out
inc
push
inc
and
gs
iret
js
in
shrb
and
cmpsl
mov
xor
jo
test
and
repnz
je
pop
mov
mov
roll
sub
inc
inc
push
in
lods
insb
pop
cmp
enter
add
xor
in
push
lds
push
cmp
adc
hlt
and
jle
push
cmp
pop
inc
ja
or
insl
sub
nop
jno
insb
xor
sbb
add
sbb
fimull
ljmp
jne
jo
adc
xchg
fs
rorl
adc
or
xchg
or
push
int
adc
stc
aad
mov
fwait
lret
lods
mov
adc
jne
mov
mov
inc
inc
cmp
mov
add
sbb
mov
ret
out
jns
mov
dec
mov
pop
xor
bound
push
mov
pop
or
cmp
ja
roll
inc
cmp
sub
enter
icebp
cmp
add
mov
repnz
xchg
clc
lods
add
or
pop
je
sahf
inc
loope
dec
fwait
add
jmp
stos
add
testb
movb
sbb
lret
nop
aaa
adc
mov
sbb
inc
aaa
cmp
mov
hlt
mov
test
push
leave
adc
mov
inc
loop
jns
jo
fists
mov
or
dec
mov
xchg
xor
das
adc
repnz
jg
mov
mov
adc
mov
mov
incl
inc
decl
jne,pn
adc
mov
loop
repnz
mov
cmp
cmpl
mov
mov
sbb
cltd
pop
idiv
rclb
pusha
or
pop
xchg
add
pusha
ja
test
dec
mov
mov
xor
ja
mov
jo
jmp
cmp
jae
dec
lods
pop
outsb
cwtl
mov
xor
mov
jbe
mov
dec
test
mov
jmp
adc
addl
dec
dec
push
mov
push
jg
mov
dec
sbb
add
call
or
sbb
sbb
dec
dec
je
push
push
jne
lcall
cltd
movb
sti
mov
cmp
pop
decb
out
loopw
push
test
mov
inc
pop
rcrb
leave
sbb
push
das
or
mov
jl
ret
aaa
test
shrl
add
inc
add
idiv
mov
xor
rol
pop
add
popa
xor
or
and
xor
adc
fiaddl
ja
sub
mov
stos
cmp
add
mov
push
push
daa
sbb
fsubr
pop
cmp
mov
sub
sub
insl
or
jle
xchg
icebp
aas
jge
push
push
cltd
pop
idiv
inc
mov
add
mov
inc
xor
mull
push
xchg
inc
out
cmp
pop
push
xchg
dec
push
jmp
or
mov
fsubs
je
xor
fs
bound
outsl
sub
adc
fs
jbe
insl
mov
add
call
movsl
bound
pop
insb
sub
lea
jecxz
repnz
sbb
dec
jae
mov
add
sbb
or
add
adc
jg
jmp
incl
pop
push
sti
inc
pop
mov
sub
loopne
dec
and
xor
loopne
in
mov
hlt
cmp
xchg
mov
push
mov
fisubrs
xor
mov
jge
pop
je
sbb
add
movl
pop
das
mov
ud2
lcall
adc
outsl
fnsave
test
mov
jo
sbb
je
dec
inc
jle
mov
mov
push
mov
andb
lret
js
sub
test
adc
insb
lahf
call
popl
popf
sbb
cmp
pop
push
sbb
sti
pop
push
jbe
mov
inc
inc
ds
stc
pop
push
ficoml
clc
adc
lcall
push
push
pushf
adcb
addb
imul
push
test
ret
sub
mov
push
movsb
xchg
fcomp
nop
inc
iret
cmpl
cli
and
cmpsl
lods
les
or
push
hlt
inc
clc
xor
add
repz
shrb
push
loopne
adc
adc
mov
jns
or
out
call
sbb
push
jae
jecxz
insb
and
xorl
ljmp
test
xchg
rorb
cmp
imul
ds
ret
sbb
and
push
cmp
sbb
loope
push
inc
and
sbb
jle
inc
mov
aam
add
jge
jle
push
inc
jg
cmp
je
gs
sbb
ret
xor
or
jne
das
shrb
clc
mov
inc
inc
cmp
je
xchg
mov
enter
cli
orb
adc
add
fidivrl
dec
mov
dec
popa
aas
test
pop
jno
push
dec
sbb
rolb
cmp
cmc
mov
incl
ljmp
inc
adc
mov
push
inc
sbb
inc
sub
sbb
mov
pop
cli
ret
pop
sbb
ret
js
mov
mov
popa
adc
ja
arpl
or
xchg
add
ret
das
dec
push
pop
ds
test
bound
pop
add
aaa
dec
pushw
lock
mov
addr16
negb
js
mov
lret
test
loopne
cmp
cmp
je
and
les
test
add
shll
mov
or
lcall
pop
inc
mov
add
popa
rcll
lcall
out
push
add
fdivr
frstor
rorl
dec
movsb
jb
add
pop
inc
jns
pushf
cmp
dec
in
inc
sbb
mov
adc
adc
clc
test
fiaddl
fcomps
jns
ror
add
sub
into
xlat
shrl
lea
js
and
jmp
dec
mulb
pop
lcall
jmp
das
cmpsl
add
add
push
dec
sbb
movl
pop
icebp
test
add
mov
and
dec
loope
cmpsb
push
stos
mov
lret
cmp
dec
mov
repnz
adc
inc
fimull
cmpsb
dec
out
adc
inc
xor
lock
aam
hlt
sbb
ret
push
xchg
cmp
push
jns
and
push
adc
sarb
pop
mov
mov
mov
sub
mov
mov
or
scas
add
and
out
imul
cmp
mov
inc
or
inc
inc
pop
das
jecxz
sar
mov
outsl
inc
or
orl
jbe
subl
movsb
cltd
jne
or
pop
add
push
imull
mov
xor
clc
and
idivl
ja
inc
andb
js
aas
pop
xchg
dec
and
jno
adc
adc
repnz
enter
mov
jmp
jne
add
adc
add
add
and
das
jns
mov
out
inc
sub
add
push
adc
jns
jo
inc
scas
dec
cmp
push
mov
arpl
rep
in
pop
subb
lret
divb
pusha
hlt
add
loopne
push
mov
loopne,pt
movsb
lock
pop
aas
xchg
jno
punpckhdq
outsb
mov
add
arpl
arpl
ljmp
xor
fucom
pop
arpl
xchg
push
jno
inc
imul
and
loope
inc
iret
or
imul
add
push
push
rcl
mov
rol
inc
add
inc
mov
mov
add
movsb
cld
adc
fadds
adc
test
pusha
loopne
jecxz
in
cld
add
sbb
popa
jl
stos
cmp
xor
jbe
aam
mov
pop
cmp
and
mov
pusha
inc
jo
shlb
inc
lcall
js,pn
aad
cli
mov
sarl
cmpsb
imul
lock
arpl
fs
jp
cmpl
lods
dec
lods
fcomps
es
or
sarb
add
adcb
movsb
ror
inc
push
aam
inc
icebp
and
pushf
enter
outsb
scas
xchg
sbb
mov
jmp
mov
dec
ret
sbb
inc
dec
maskmovq
mull
xor
je
aam
and
or
sub
jle
ret
bnd
sbbl
or
adc
push
xchg
test
fs
lret
sub
push
add
sub
outsl
sbb
cld
arpl
push
jo
mov
fidivrl
mov
ja
icebp
push
xor
sub
aaa
inc
mov
inc
push
fsubrl
adc
jae
jo
push
jge
cmp
and
dec
rorb
ret
sbb
jge
fiaddl
add
lds
pop
or
push
popa
mov
or
js
mov
fcomi
push
add
xchg
pop
sbb
cwtl
sub
dec
loope
mov
dec
mov
repnz
inc
mov
dec
push
jg
adc
in
fcoml
lcall
xchg
cmp
test
xor
icebp
cmp
popl
xor
ror
shll
addb
cmp
shl
hlt
fadds
fdivs
pop
sbb
inc
jne
loope
sbb
cmpsb
push
push
sub
sbb
adc
adc
aaa
sbb
sub
push
incl
sti
or
and
fs
push
pop
dec
test
call
adc
push
push
imul
es
in
fisttpll
sub
inc
les
test
cmpsb
test
and
xor
dec
popf
insb
push
lea
loopne
js
fucomip
out
into
mov
push
rclb
call
and
lock
add
cltd
pushl
push
in
push
xor
inc
sub
mov
adc
pop
aaa
pop
adc
je
add
iret
xor
stos
xor
or
pop
jo
pop
sbbb
mov
sbb
mov
ret
repz
sti
sbbb
xor
dec
xchg
xchg
pop
mov
ret
pop
es
aas
popa
loop
cwtl
xlat
mov
sub
loopne
jg
pop
fcomp
into
and
xor
xchg
and
add
push
cmp
or
sbb
divl
leave
sub
jne
push
add
repz
push
cmpsb
pusha
fidivrl
movd
rcr
mov
call
clc
movsb
push
sbb
pop
or
rorl
enter
sub
add
dec
or
lds
push
cwtl
lock
jbe
add
adc
lret
test
sub
outsb
mov
lods
lods
lods
in
or
sub
data16
sbb
mov
adc
popl
dec
push
lods
cmp
add
inc
sar
push
pop
test
push
movl
cmp
xor
sarb
cltd
dec
and
shl
mov
adc
subb
mov
in
rcll
push
add
mov
jo
repnz
push
xor
mov
stos
cld
sub
js
nop
mov
or
ror
xadd
adc
or
xchg
adc
js
sbb
xchg
les
xchg
test
add
shll
clc
lods
or
shl
or
imulb
add
sub
mov
inc
add
testl
daa
or
mov
xchg
and
jb
call
or
mov
adc
sar
mov
inc
xchg
repnz
mov
and
inc
cld
sub
sahf
lea
in
outsb
frstor
or
xchg
ja
sub
or
test
and
or
add
pop
inc
push
fdivs
xor
cmp
cld
ficoml
push
or
aam
push
dec
fdivs
pop
repz
std
push
cmp
outsb
jae
pop
inc
inc
cld
mov
dec
and
adc
xchg
addr16
jbe
lcall
sbb
jmp
and
je
lahf
mov
test
push
in
call
test
add
mov
dec
out
fs
mov
std
pop
mov
cmp
and
sbb
or
push
roll
cmp
push
and
sub
ljmp
pop
xchg
or
xchg
xchg
pop
cmp
je
or
or
mov
or
or
ja
arpl
jo
aam
mov
jp
subb
sbb
lea
out
dec
adc
loopne
sbb
lock
dec
mov
clc
jno
insb
mov
mov
insb
push
hlt
ret
orb
cld
outsl
pop
jmp
sbb
jmp
push
lods
mov
cmp
fwait
or
cmp
mov
outsl
call
std
jne
xor
xor
fsubr
fldt
inc
cmpsl
test
jmp
sbbb
iret
rclb
ret
push
dec
loopne
inc
sub
fwait
push
fiaddl
inc
push
insl
insb
lea
jno
mov
mov
sub
xchg
repz
shlb
lock
push
push
lock
or
push
jmp
fs
sub
loope
add
fcoml
jo
dec
xor
loope
dec
inc
push
inc
rolb
ljmp
or
push
call
pop
dec
filds
lea
mov
test
push
push
dec
lea
inc
pop
leave
inc
jle
imul
scas
subb
js
jmp
and
sahf
adc
into
sub
cld
loope
sti
inc
jmp
loopne
andb
cmp
sub
or
inc
inc
add
shrl
inc
aaa
mov
loopne
xorb
rol
add
inc
inc
out
aas
and
inc
pop
push
cld
inc
adc
cmp
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
icebp
outsl
ja
adc
jl
sbb
mov
xchg
mov
cmpl
inc
push
mov
inc
dec
jne
add
sahf
add
movsb
mov
addb
fdivp
sbb
scas
dec
push
jnp
test
xor
jge
shrb
sub
and
dec
lahf
dec
loopne
adc
mov
pop
push
jp
mov
cs
mov
xor
inc
sub
addb
ds
outsl
movsb
or
add
loopne
cld
aas
and
inc
enter
push
aam
mov
int3
cmp
ljmp
ljmp
je
and
cmp
andl
mov
pop
fwait
les
rcll
jle
sbb
enter
or
pop
sub
jmp
jmp
cmp
dec
sbb
mov
xor
jns
inc
sbb
bound
ret
inc
jo
mov
pusha
push
out
arpl
rcrl
xchg
jno
es
jb
jmp
xchg
mov
fs
inc
and
add
jae
push
xorb
cmp
mov
push
cmpsl
push
and
pop
movl
nop
mov
add
outsl
cmp
es
test
fisubs
pop
call
xchg
loopne
pop
adc
cltd
pop
cmp
insl
inc
mov
pushf
cltd
sub
sbb
in
mov
hlt
mov
call
int3
mov
sub
and
xlat
xor
filds
and
int3
push
cwtl
mov
jne
lret
rcr
cld
xchg
pushl
out
jle
in
stc
mov
or
push
cmpl
add
ffree
inc
jno
cmp
rolb
dec
pusha
mov
sub
jne
add
xor
in
fldl
xchg
sub
mov
mov
mov
mov
lea
jnp
mov
aaa
xorl
push
movsb
jnp
or
add
adc
movsl
sub
or
imul
int
sbb
clc
and
dec
xor
je
push
mov
mov
nop
ret
adc
popa
lahf
cmp
add
push
jbe
adc
jbe
inc
push
inc
mov
lock
rolb
insb
loope
mov
xor
call
sahf
jmp
or
push
stos
inc
push
loopne
sbb
or
mov
sub
out
add
sbb
push
pop
sbb
call
xlat
andb
fsubr
daa
mov
jns
xchg
jle
ja
add
dec
ljmp
adc
xchg
fisubrs
rclb
jnp
cmc
cld
pop
xlat
add
je
enter
mov
adc
push
sbb
cwtl
sub
inc
inc
jo
cmp
push
stos
xchg
xchg
xor
mov
push
aas
push
incb
inc
cs
cmpb
pop
pop
sbbb
test
inc
pop
cmp
inc
cli
enter
aam
and
pop
sbb
mov
outsl
lods
add
insb
push
cld
push
lods
or
mov
ficoml
rolb
push
or
js
imul
cmpsb
insb
in
jae
xchg
test
push
bound
stos
sub
sbb
fnstcw
outsl
add
or
dec
dec
push
xchg
cmp
pop
or
xorl
ret
dec
push
mov
scas
in
and
adc
cmp
movsb
pushf
aad
gs
pop
jns
inc
shr
leave
orl
loopne
pop
mov
not
movsb
cmpsb
mov
push
iret
ss
jne
adc
mov
push
xchg
push
or
lret
clc
lds
pop
rcrb
sub
cmp
jb
pop
inc
inc
dec
sbb
xchg
and
mov
push
in
cmpsb
ud0
push
dec
mov
popa
sti
jbe
ljmp
pop
cmp
je
jle
sbb
das
test
or
insl
insl
jg
mov
cmpsl
add
adcl
and
inc
sbb
je
fldcw
movsb
ljmp
lret
enter
cwtl
test
cmp
xorl
pushf
cmp
lahf
cmpsb
and
daa
test
dec
jno,pt
xchg
dec
adc
mov
dec
pop
adc
mov
xchg
movsb
jb
jbe
inc
mov
or
mov
call
mov
push
mov
sub
or
pop
add
das
nop
cld
movsb
ja
test
mov
rorb
inc
sub
andl
fimuls
xor
insb
daa
ret
sbb
mov
push
mov
xchg
xchg
xchg
jbe
loopne
fcoml
xchg
xchg
aam
sarb
clc
or
xchg
in
popf
enter
shrb
pushf
popl
fiadds
xchg
add
sarl
mov
hlt
aaa
dec
cld
adc
sub
test
rcll
xchg
push
add
push
mov
mov
sbb
roll
jno
mov
xchg
test
mov
fs
das
pop
xchg
enter
add
notb
jge
mov
mov
add
xchg
mov
add
adc
add
jmp
mov
lahf
adc
es
mov
inc
inc
js
cmp
add
jb
cmp
mov
mov
push
cwtl
mov
and
and
ds
fstl
sbb
push
add
mov
lahf
out
lock
mov
push
lahf
fsts
or
mov
dec
pop
sbb
push
jno
rclb
test
pop
nop
aam
mov
add
and
add
nop
sahf
out
test
pushf
movsb
mov
jnp
sub
lahf
inc
rorb
fadds
add
cld
nop
lahf
jne
test
dec
mov
pop
cs
xlat
outsb
cmp
cs
push
sub
xchg
mov
pop
ret
cmp
sbb
cwtl
sbb
ss
mov
jle
adc
dec
jo
popa
adc
or
negb
inc
xorb
scas
jns
push
dec
cmp
jge
inc
mov
imul
lods
mov
cmp
cmp
andl
add
xchg
mov
jb
cmp
add
add
inc
or
and
pop
jle
jno
mov
stos
xor
dec
mov
lret
or
hlt
fdiv
shlb
push
hlt
call
aaa
and
nop
or
mov
daa
and
mov
ret
cmp
or
je
fnstcw
leave
ret
dec
adc
shlb
enter
lea
push
push
mov
push
pop
push
push
jge
jmp
fisubrs
inc
subl
adc
movl
add
jmp
rol
orl
mov
push
or
sbb
add
pop
into
sbbb
adc
movsb
test
cmp
or
mov
push
int3
inc
sub
dec
xchg
call
icebp
outsb
cmp
daa
add
ja
mov
outsl
push
fidivrs
cmp
mov
mov
popa
jo
repnz
cmpl
enter
subl
je
movl
enter
arpl
sbb
sbb
hlt
jecxz
xor
adc
test
in
add
push
xchg
push
ljmp
xchg
adc
jno,pt
jno
pusha
xor
mov
mov
imul
faddl
dec
clc
adcl
mov
por
lea
inc
inc
mov
jg
nop
sbb
lea
inc
cmp
stos
mov
pop
push
push
add
push
das
ss
push
jecxz
jmp
add
push
push
inc
inc
or
inc
cmp
xor
cwtl
lea
rorl
add
xchg
incl
and
mov
in
add
jecxz
imul
dec
ret
inc
inc
inc
call
push
and
add
outsb
es
test
adc
or
push
dec
or
addl
movsb
dec
push
movsb
lea
mov
push
adc
and
mov
push
mov
adc
jbe
push
xchg
inc
xor
enter
clc
jp
sub
or
pop
outsb
sub
sbb
or
pop
cmp
pop
divl
in
and
sub
enter
ds
mov
adc
dec
xchg
enter
in
sbb
repnz
shrb
dec
ljmp
jns
xchg
mov
adc
loopne
or
outsl
adc
cli
add
add
add
es
or
add
and
cmpsb
movsb
int3
xchg
add
ret
pop
jecxz
add
rolb
xchg
push
push
lock
add
mov
dec
jmp
and
jno
je
xchg
jo
inc
aam
push
adc
sub
or
in
mov
les
mov
cmp
int3
jno
and
sti
test
loop
mov
mov
cmpsl
xchg
shll
addr16
mov
test
in
or
loop
cmp
push
les
cmpb
pop
adc
notl
pop
rolb
cs
in
push
loop
inc
loopne
pop
ja
mov
jp
in
gs
ret
adc
movzbl
test
sbb
pop
sar
pop
mov
cmp
jmp
cmp
mov
rorb
aam
clc
fcoms
xor
sub
dec
or
mov
add
ds
je
sbb
mov
push
scas
pushf
pop
or
add
sub
dec
add
lock
cli
sub
or
sub
or
in
roll
dec
aam
aas
mov
add
sub
push
imul
or
inc
or
ja
movsl
cltd
nop
imul
cmp
or
movsl
hlt
insl
push
and
push
or
sbb
int
inc
insb
je
lock
ficomps
inc
subb
js
test
pusha
sub
in
fidivl
mov
div
ss
or
xor
mov
pushf
xchg
xchg
aaa
dec
xor
movsl
cmp
add
dec
fs
or
int
adc
pop
outsl
cmc
dec
xor
mov
js
push
imul
movsb
mov
jo
cli
and
jmp
mov
fisubl
rorb
push
neg
icebp
xor
cmp
adc
ficoml
cltd
or
mov
ret
add
adc
cld
inc
jmp
lock
scas
dec
nop
and
jae
cmp
test
les
inc
fisubrl
mov
cwtl
das
xchg
stos
out
mov
adcl
pop
sbb
outsb
sbb
sub
xchg
or
xor
mov
mov
mov
test
add
and
pop
push
mov
sub
add
push
insl
cmp
shl
nop
out
xor
negl
lea
ljmp
xor
js
mov
mov
cmp
pushf
je
clc
fstpt
sti
add
push
mov
push
mov
scas
aas
push
xchg
js
sub
adc
cmp
hlt
mov
inc
jge
pushf
and
mov
xchg
test
shrb
aam
jecxz
mov
lea
lahf
xor
jns
push
sbb
imul
jo
add
add
inc
mov
pushf
into
add
addr16
fmul
pop
xor
push
outsb
je
test
xor
test
mov
add
lds
and
fwait
test
add
sbb
or
movsb
fimuls
adc
insb
rorl
pusha
sbb
or
test
jecxz
rep
add
xor
into
ret
mov
adc
addr16
mov
jmp
cmp
jle
sbb
out
pop
insl
cmpl
lock
lds
int
or
mov
adc
call
cld
adc
and
jne
inc
hlt
dec
sub
cmp
adc
test
js
jecxz
lea
stc
mov
fstpl
push
pop
xchg
cmp
inc
call
push
cld
sbbl
and
xor
std
push
inc
sbb
add
push
push
push
cwtl
jae
addr16
decb
mov
std
inc
dec
pushf
mov
add
adc
push
pop
data16
push
pop
sub
sub
lret
stos
into
ja
lea
inc
fbstp
sbb
inc
push
ss
imul
or
add
pop
int3
je
cltd
cmp
inc
ret
je
inc
pop
jl
push
sub
movsb
jae
jno
inc
movl
dec
jge
fimull
jge
add
ds
notl
decb
or
jne
and
jo
into
mov
das
sbb
imul
inc
ds
cli
shr
cltd
push
fwait
shrl
xor
xchg
incb
clc
clc
sahf
add
mov
dec
jmp
pop
cmp
push
fcoml
ljmp
je
into
adc
mov
rorb
mov
sbb
inc
jmp
mov
dec
adc
loope
or
xorb
cwtl
repz
sar
roll
adc
sub
mov
aaa
xor
mov
jmp
orb
jmp
in
test
test
cli
and
pop
rcll
cltd
sub
sub
inc
adc
push
xchg
jnp
enter
xchg
out
xor
lea
or
xor
pusha
adc
push
jbe
lcall
fdivs
rcrb
push
sub
cld
cmp
fistpll
push
rcll
mov
pushf
test
addps
mov
jg
push
xor
mov
sbbb
push
and
inc
dec
jo
and
add
push
and
jmp
mov
push
aas
icebp
sti
ret
movsl
daa
pop
mov
or
test
mov
sub
movsb
cmp
mov
outsl
add
jnp
lock
mov
adc
inc
add
roll
les
cltd
outsb
jp
jno
push
out
shll
sub
xchg
mov
mov
in
mul
roll
and
shrb
xchg
idivb
insb
or
push
decb
into
push
lea
mov
sbb
adc
push
fisttps
popf
ja
call
sarb
ret
andl
push
add
sbb
push
push
mov
mov
push
add
and
push
add
shlb
mov
inc
jl
push
pop
ret
xlat
stc
or
add
out
test
lds
ret
and
mov
in
or
lock
or
ljmp
cmp
pop
jmp
push
adc
dec
jge
mov
daa
lock
mov
pushf
subb
inc
repz
test
lds
test
jb
adc
or
lea
add
sbb
pop
adc
cmp
ja
or
mov
imul
add
jmp
push
sub
or
test
fdivl
pusha
xor
ret
test
xor
fcmove
iret
cld
or
sub
call
shr
mov
imul
sbb
xor
lods
dec
or
lret
insb
pushf
movsb
xor
rclb
cld
push
decl
test
adc
or
jne
sar
dec
cmp
add
jbe
push
pop
xor
dec
or
push
or
sbb
dec
add
shll
pop
mov
inc
decb
jne
and
adc
ret
pushf
mov
call
push
or
rcr
mov
rcrb
push
or
sbb
and
sub
jmp
and
pop
pop
clc
and
push
push
or
jle
shlb
and
sti
add
lods
sbb
ficomps
lcall
imul
cmpsb
loopne
push
pop
jno
jno
insb
cwtl
lret
cmp
or
shr
not
and
push
mov
sub
jmp
lea
das
mov
pop
lock
stc
xor
dec
add
dec
lret
push
push
mov
or
push
inc
sub
inc
insb
faddp
mov
lea
mov
inc
push
add
or
adc
mov
mov
push
xchg
dec
paddd
mov
mov
or
lods
push
loopne
sti
call
inc
dec
or
jmp
repnz
in
lock
adc
jo
clc
ljmp
imul
cmc
cltd
test
into
repz
and
and
stos
and
adc
paddsb
dec
shl
add
scas
jp
push
call
aas
or
jge
gs
push
or
je
andl
inc
mov
mov
dec
adc
add
pop
add
pushl
inc
inc
jecxz
dec
jp
and
or
add
mov
adc
ficomps
jbe
adc
jge
jl
sub
cmp
jnp
not
or
mov
and
mov
dec
jo
loope
push
imul
lock
data16
xor
outsl
push
adc
out
push
js
add
jl
mov
les
and
push
test
inc
adc
ret
subb
xor
add
push
jl
adc
mov
jmp
orl
incl
lds
mov
gs
push
mov
fimuls
je
add
rolb
sub
stc
mov
imul
inc
clc
pop
xchg
add
repz
sub
or
hlt
or
add
or
testb
int
cltd
fisttpll
xchg
adc
sub
shr
or
sub
clc
call
in
adc
or
adc
xlat
fnsave
es
cld
lock
call
mov
jne
je
clc
add
mov
dec
les
adc
mov
sahf
arpl
mov
icebp
aas
inc
mov
test
cmpsb
dec
inc
jne
or
adc
jle
lds
not
and
les
pop
scas
inc
adc
adc
aaa
inc
shl
sbb
sub
sub
stc
mov
jb
mov
les
icebp
lock
xor
adc
ret
or
call
mov
cmp
cli
stc
add
rcl
gs
mov
int3
push
pop
xchg
cmpsb
add
pop
mov
popf
lcall
mov
xchg
lret
pop
add
cmp
nop
dec
or
mov
jns
sub
push
roll
add
inc
sub
adc
pushf
sar
dec
mov
ljmp
sbb
clc
mov
inc
mov
sti
jbe
cmpsb
stos
cltd
mov
dec
mov
cmpsb
imul
rcll
sbb
iret
insl
add
js
and
and
movsb
jmp
js
test
add
adc
inc
add
out
insb
xor
call
mov
icebp
into
hlt
mov
mov
lea
lods
mov
mov
inc
dec
insb
pop
rcrb
xor
push
sar
dec
jp
sbb
ret
pop
push
cmpsb
mov
dec
add
xor
sbb
adc
cmp
sbb
xchg
into
je
fisttps
mov
dec
push
add
fnstenv
dec
in
add
ficoms
add
loope
xchg
sbb
or
mov
or
ret
lods
bnd
mov
mov
push
cmp
lods
push
sub
out
cmp
push
mov
add
cmp
dec
ficoml
add
je
add
insb
push
push
js
xlat
add
loope
inc
add
push
dec
push
push
push
jge
add
mov
push
xor
lret
mov
or
add
outsl
or
decb
xlat
rclb
pop
pop
ret
adc
cmpb
jne
mov
hlt
out
fnstenv
jmp
jnp
add
cmpsl
pop
cmp
or
arpl
add
daa
add
cwtl
sub
push
bound
ficompl
and
and
mov
cmp
je
mov
in
cli
roll
mov
jl
and
cwtl
rcrl
jne
divl
subl
pop
push
les
fidivrl
pop
push
repz
mov
and
jne
mov
outsl
shrb
and
leave
inc
test
inc
cmp
jno
push
pushf
mov
sub
icebp
sbb
fdivrl
test
add
shrl
ror
push
data16
mov
lret
clc
sti
and
mov
decb
jne
jle
int3
dec
das
repnz
jmp
jp
mov
pop
pusha
dec
bound
dec
push
scas
fwait
or
into
xor
movsl
imul
aas
xor
push
dec
je
cmp
or
pop
xor
and
jge
call
or
push
or
fimuls
subb
push
push
push
mov
pop
inc
mov
cmpsl
ljmp
adc
pop
lods
mov
shrl
jbe
lods
test
lea
ds
jne
cmp
into
push
sbb
mov
inc
add
sbb
mov
jmp
jecxz
xor
notb
sbb
jge
xor
nop
in
jb
mov
jae
adc
adc
jp
sbb
jbe
inc
sbb
or
add
clc
dec
mov
sti
sbb
pusha
jecxz
pop
push
addl
add
add
xor
mov
sbb
data16
and
shlb
cmp
push
lcall
pop
mov
inc
cmp
cmp
mov
out
cmp
push
mov
or
lods
je
add
insl
popa
push
fs
out
test
or
push
and
jmp
xchg
shlb
or
xor
inc
add
loop
push
pop
aas
jmp
push
dec
xchg
sti
mov
fcomps
xor
negb
std
lahf
pushl
adcl
mov
push
divl
clc
in
out
pop
jne
push
or
mov
std
pop
rcrl
sub
sbb
add
xchg
mov
sub
xor
movsl
inc
and
push
or
pop
in
inc
fbld
cmpsl
pop
out
jmp
sarb
xchg
bound
nop
lock
and
fwait
cltd
clc
mov
int3
push
mov
test
inc
or
je
mov
sbb
movups
cmp
inc
or
iret
and
nop
mov
pop
cmpsl
adc
sbb
dec
ret
sbb
lcall
in
jg
sbb
cs
stos
inc
push
push
mov
pop
sbb
imul
add
xor
xor
shr
xor
jne
mov
cmpl
inc
aas
xor
sbb
ror
sbb
les
push
mov
pop
lret
and
sbb
arpl
lret
lods
aam
aam
xor
mov
push
test
and
in
test
and
mov
scas
outsl
mov
push
cmp
jge
jmp
jns
lcall
mov
into
je
cmp
mov
dec
dec
inc
rorl
cmc
cmp
mov
cwtl
mov
mov
mov
mov
push
xor
ja
add
test
sarb
xor
movb
mov
sarb
in
xlat
in
lods
or
andl
add
xchg
arpl
push
jl
gs
xchg
pushf
xchg
mov
rorb
ss
sub
mov
sub
add
fisubrs
jo
fbld
in
push
push
inc
pushf
add
insb
jne
jp
mov
adc
and
pop
pop
sbb
jg
pop
xchg
stos
pop
adc
insl
aam
xor
push
cmp
inc
adc
or
cmc
jmp
add
pop
sub
les
sbb
pop
std
dec
xor
pop
dec
mov
test
adc
xchg
out
movsb
in
dec
pop
enter
leave
orl
and
add
add
mov
cmpsb
sub
cmp
add
dec
sub
jb
call
test
xor
sbb
adc
cmp
neg
lret
sbb
call
addb
shlb
test
inc
mov
add
adc
and
add
mov
mov
and
insb
stos
push
stc
push
lods
or
test
pop
es
mov
roll
and
call
in
mov
mov
push
hlt
xchg
inc
push
lods
and
lods
add
test
nop
call
cmp
lods
push
enter
ret
enter
les
loop
pop
or
xchg
in
in
mov
xchg
add
test
mov
nop
test
popa
mov
nop
pop
cmp
cmpsl
mov
mov
insb
js
mov
sysret
push
xor
insb
stos
push
aaa
cli
push
mov
sarl
jle
and
mov
ja
ss
mov
mov
jne
cmp
ss
adc
xchg
xorl
sub
mov
iret
lret
mov
adc
push
pop
clc
outsl
and
xchg
ret
xchg
xorb
shrb
rcl
push
rcll
xor
mov
add
adc
or
fsts
or
and
andb
negb
jne
push
fbstp
sub
lods
inc
pop
das
adc
loopne
mov
or
sarb
xor
jnp
dec
bound
adcb
cwtl
and
mov
mov
xor
test
xchg
add
jge
push
or
fsubs
push
jl
lcall
jae
pop
les
jne
jecxz
es
mov
stc
add
aaa
inc
cld
push
cs
mov
aaa
nop
add
cmp
jmpw
inc
adc
adc
and
rorl
ljmp
shll
enter
pop
ds
jae
outsl
cmp
sub
shlb
xchg
dec
fisubrs
and
cli
sti
jmp
std
mov
les
xorb
popa
ja
and
pop
mov
mov
je
mov
pop
mov
add
push
in
aas
push
pop
sub
sbb
dec
mov
add
add
jno
je
or
add
or
sbbl
imul
lock
push
mov
inc
push
xor
add
mov
fbstp
cltd
jo
push
fldt
dec
and
mov
pop
lret
lret
das
sub
in
mov
xchg
dec
je
add
and
sbb
xchg
pop
and
sti
fldenv
lcall
xchg
push
jbe
loopne
xchg
jge
ret
scas
popa
pop
or
sub
sbb
ret
mov
fwait
add
les
inc
test
cmp
adc
xchg
adc
lock
xchg
mov
in
lock
push
in
in
in
inc
adc
faddl
push
fdiv
aas
movsb
popa
push
fsubrl
fstl
push
shl
push
mov
aaa
jne
xchg
pusha
xchg
das
and
inc
lock
idivl
iret
repz
aad
out
repz
pushf
out
cmp
decl
les
out
pop
push
add
push
add
jae
adc
stos
enter
daa
sahf
push
insb
dec
inc
sbb
dec
push
or
insb
leave
fs
sbb
hlt
sub
jne
ds
and
pop
xchg
inc
jle
lahf
sarb
fisubl
pop
push
inc
clc
add
aas
rol
les
push
push
xchg
add
fucomp
fs
faddl
into
sub
adc
and
or
aas
push
sbb
add
clc
push
fmull
in
cmp
inc
jp
cmp
test
jne
push
push
orl
jge
outsb
cmp
inc
sbb
loopne
idivb
mov
adc
stos
lods
add
inc
sub
pushf
push
mov
adc
mov
xor
lret
stos
das
mov
sub
out
mov
or
mov
xchg
pop
xlat
adc
mov
cs
mov
mov
jb
cmp
mov
lods
std
shrl
add
pop
mov
mov
orb
xchg
rol
add
jp
or
pop
add
jnp
mov
pop
and
jne
dec
sbb
clc
fldt
jecxz
sar
lea
testb
cmpsl
test
aad
imul
mov
mov
out
sbb
or
mov
inc
test
test
inc
pop
inc
inc
pop
iret
ljmp
or
ret
ja
fmuls
mov
popa
xchg
shlb
das
xchg
std
lods
inc
rorl
int
rorb
aaa
or
int3
popa
mov
and
in
jo
out
movsbl
push
and
or
add
test
xor
add
cld
adc
mov
cmp
hlt
cmp
stc
or
xor
popa
inc
lret
mov
push
xor
in
and
mov
fstpt
dec
je
imul
je
cli
cmp
sub
dec
cmp
inc
or
hlt
sub
pop
aad
jb
adc
and
sbb
or
jne
or
jne
inc
in
and
jne
cmp
inc
xor
cld
inc
sub
lcall
int
lcall
js
push
xchg
push
pop
lods
cmp
and
mov
push
leave
mov
push
repz
pop
lea
mov
xchg
xor
ds
in
sbb
lret
lea
pop
call
or
repnz
addr16
mov
jecxz
mov
adc
sti
push
inc
cmp
ret
jp
aad
jmp
out
popf
in
mov
xlat
aaa
gs
cwtl
add
mov
cmp
xor
add
xchg
mov
push
adc
sbb
mov
pop
cmp
xlat
insl
sub
sub
fcmovu
xchg
jno
jns
daa
mov
pop
in
sbb
sahf
add
cmp
rcr
inc
cld
cmp
in
sub
sgdtl
enter
mov
fwait
mov
pop
mov
loopne
rcrb
push
pop
pop
sti
fldcw
cmp
into
je
mull
add
and
pop
insb
scas
mov
or
mov
daa
xor
adc
xchg
dec
in
fs
jecxz
lock
or
xor
mov
dec
insl
sbb
std
aaa
sub
add
std
push
jnp
daa
fdivr
adc
jno
ret
roll
sbb
rcr
push
mov
add
jno
enter
adc
cmc
jle
pop
cmp
fsubr
std
call
inc
aas
mov
fadd
push
cmp
mov
mov
std
sub
fcomp
mov
fdivrs
mulb
fmull
xor
mov
ja
outsl
fldenv
nop
std
lds
sub
lea
fnstsw
cmpsb
lret
imul
mov
sbb
mov
pop
ljmp
loopne
dec
icebp
push
push
mov
in
sbb
test
sbb
lods
push
out
imul
push
xor
jne
test
ds
iret
dec
xor
roll
sbb
xor
mov
frstor
dec
xchg
jl
sbb
cmp
cmp
sbb
push
or
inc
dec
call
std
in
xor
xor
push
imul
test
sahf
dec
repnz
mov
daa
push
mov
mull
lods
popa
mov
push
jecxz
lods
mov
mov
movsb
hlt
sub
test
inc
push
pusha
jmp
popa
dec
jmp
dec
das
rcrb
repnz
movsl
mov
mov
std
pop
lock
les
dec
xor
push
sub
lods
pop
fistps
sub
or
adc
and
in
push
sub
int3
cmp
loopne
pop
or
xchg
jne
mov
dec
jnp
orl
rcrl
and
sub
mov
enter
roll
push
xor
bound
mov
adc
fdivr
pop
rcrb
fsubp
inc
push
inc
shl
push
lret
jne
cmp
xchg
addr16
cmpsl
mov
hlt
or
pop
stos
jne
fdivr
dec
mov
jae
push
dec
pop
jno
xchg
nop
lret
je
jb
dec
xchg
std
std
std
xor
jo
loope
ret
jae
push
sub
ds
fsubrl
mov
xchg
push
lods
add
jnp
out
call
dec
movl
xor
or
cmp
cmpsb
ss
and
movsl
jb
sub
mov
dec
mov
mov
rcll
adc
enter
mov
aad
pop
leave
and
push
mov
test
mov
or
sarb
leave
adcl
sbb
lahf
stos
icebp
push
lods
push
xlat
adc
orb
cmp
ja
and
add
and
sub
lock
dec
adc
jo
pushf
pop
ds
dec
in
imul
jmp
adc
jns
dec
push
lock
xor
pop
add
stos
mov
pop
xor
scas
adc
test
jns
adc
jmp
jecxz
inc
push
es
push
cmc
les
in
pop
leave
int3
jmp
ss
xlat
adc
and
push
arpl
int3
jmp
int3
jmp
test
xor
repz
xor
stos
mov
bound
add
cltd
mov
dec
push
int3
jmp
dec
es
push
ret
sti
in
push
cmpsb
pushf
inc
enter
leave
add
sub
xchg
dec
sub
nop
adcl
and
sub
fs
xchg
cmp
sti
lret
pop
pop
test
jbe
pop
std
lret
pop
pushf
pushf
push
sub
loope
xor
repnz
fwait
mov
cmc
sbb
int3
int
and
int
add
mov
mov
lret
dec
and
pop
inc
lods
pop
xor
pushf
inc
xor
divl
xchg
pushf
xchg
imul
clc
mov
sbb
push
orb
mov
xchg
stos
icebp
mov
test
sub
jb
cmp
aad
dec
in
es
add
movsl
pushf
movsb
xchg
inc
push
inc
bound
ret
or
adc
inc
push
xor
leave
xor
test
adc
pop
jb
nop
nop
push
orb
lods
pop
enter
lods
or
out
loopne
adc
push
dec
pop
je
aam
outsb
xor
dec
daa
add
rorb
add
cmp
out
push
jns
and
sub
mull
lea
je
push
xchg
mov
lock
mov
stc
nop
sbb
jg
adc
and
inc
push
aam
rorb
lea
adc
jl
adc
cltd
enter
xor
sub
or
push
loop
cmp
lret
lret
jp
mov
sub
faddl
nop
inc
add
xor
push
push
adc
xchg
fnsave
lods
dec
rep
ss
neg
pop
mov
sub
xor
lock
push
lods
push
push
push
add
dec
pop
adc
sbb
inc
and
push
or
cmp
adc
lahf
out
pop
pusha
int
outsl
push
push
dec
adc
push
and
aas
xchg
lret
dec
push
pop
outsl
inc
repnz
jl
outsb
push
jbe
jle
sbb
lcall
mov
mov
push
adc
hlt
xchg
dec
adc
and
cmp
push
sbb
dec
pusha
jae
xor
into
and
call
mov
sub
push
into
mov
fadds
ja
aaa
sub
fcmovu
push
sub
mov
add
pop
rcr
aam
fsts
clc
in
lock
rep
les
push
jge
jne
sbb
adc
cmp
push
or
push
inc
cmp
enter
out
gs
jmp
pop
jae
mov
pop
add
in
cld
vcvtps2pd
leave
or
dec
pop
loopne
fcmovnu
imul
or
mov
cltd
inc
jne
mov
push
jnp
in
loop
loop
add
icebp
div
jne
sbb
sbb
xchg
pop
mov
ja
in
dec
xor
cmp
jnp
lds
mov
rol
mov
inc
mov
cmpl
jnp
add
loope
cltd
push
xor
and
test
stos
adc
cmp
and
test
push
rcr
or
imul
test
cld
push
mov
inc
or
push
js
sar
cmp
outsl
mov
test
je
divl
adc
mov
jnp
loop
ret
aaa
mov
sbb
sbbb
xlat
iret
add
and
jle
popa
add
sub
mov
sbb
dec
mov
je
jmp
bound
add
out
dec
mov
pop
mov
jmp
sub
adc
sub
aas
or
stc
movl
push
jo
mov
mov
mov
inc
adc
inc
xchg
mov
test
das
push
js
add
cmp
enter
iret
adc
and
mov
stos
filds
cmp
mull
push
add
je
hlt
daa
clc
inc
push
popa
lcall
inc
testl
es
ss
repz
or
sbb
inc
sbb
dec
ljmp
mov
jmp
xor
mov
rorb
jo
pop
and
mov
mov
dec
or
jbe
mull
mov
push
pop
push
push
imul
pushl
shr
rcr
shr
rcr
or
jne
div
pop
dec
adc
jg
outsb
fwait
inc
mul
pop
jb
cmp
or
cmp
or
cmp
sub
cwtl
adc
addl
lret
pop
and
iret
inc
stos
lret
inc
ficoml
add
xorps
pop
aas
addb
jne
clc
mov
stc
test
or
movb
pushf
and
adc
push
cmp
into
adc
mov
pop
iret
adc
adc
push
and
jp
sub
lea
fadds
std
popf
xor
add
sbb
or
clc
out
sub
inc
add
pop
cmpsl
and
inc
sbb
xor
rol
adc
mov
xor
ja
mov
leave
je
mulb
std
jne
mov
dec
sbb
adc
sbb
adc
adc
mov
dec
xchg
stos
ss
and
sbb
inc
pop
dec
push
and
imul
sbb
dec
ljmp
rcll
sarb
jne
lea
adc
push
gs
xchg
das
fdivr
aas
pop
and
push
lret
push
cmp
or
ret
cmc
jne
push
movb
enter
cmp
adc
adc
mov
sbb
adc
mov
add
loop
les
and
lods
push
daa
clc
inc
movb
mov
aam
push
into
adc
test
dec
mov
dec
mov
cld
sbb
mov
test
push
pop
mov
lret
lcall
and
or
push
fs
stc
cs
test
adcb
add
jo
dec
dec
sarb
xor
xor
bound
sbb
repnz
add
add
add
lret
movsl
pop
sbb
adc
in
or
stos
add
push
sbb
pop
shll
push
and
cmp
cwtl
lock
push
jge
in
mov
and
cmp
or
or
lods
or
push
push
lock
adc
imul
sbb
pusha
cmp
hlt
mov
inc
cmp
push
lret
loopne
popa
loope
cltd
cmp
lods
imul
pop
add
push
dec
je
repz
lea
and
aas
inc
insl
outsl
mov
les
lea
pop
mov
push
gs
and
ret
adc
sbb
jl
pcmpeqb
iret
jmp
push
jle
sub
or
push
shl
push
adc
and
fisttpl
faddp
stc
xor
in
xor
jo
cmpl
je
mov
addl
sbb
pop
inc
adc
and
or
push
out
cmp
je
ss
repz
shlb
xchg
pop
xor
out
add
inc
outsb
or
cld
arpl
xor
pop
test
scas
and
inc
push
sbb
xchg
popa
icebp
adc
rcrb
add
cld
dec
push
mov
pushf
sbb
insb
clc
or
pushf
xchg
lods
test
icebp
repnz
pop
pop
pop
or
and
mov
or
mov
data16
xor
aaa
add
inc
fildll
xchg
mov
pop
sub
aam
pop
inc
cmp
roll
and
xor
daa
dec
sbb
jbe
dec
loopne
ret
jg
sbb
or
xor
or
and
push
dec
sbb
mov
dec
or
out
xchg
fisubrs
mov
sar
or
sub
sub
cmp
or
pushf
lahf
push
sbb
jecxz
push
orl
push
jo
clc
cmp
test
inc
xchg
lock
adc
gs
jecxz
sub
mov
loopne
cs
sub
inc
and
pop
adc
rclb
mov
push
adc
adc
cmp
adcl
inc
sbb
arpl
add
andl
mov
mov
popa
add
push
push
push
lcall
or
je
adc
cmp
push
add
xchg
cwtl
or
or
or
pop
scas
pop
ret
jge
aam
sti
add
fwait
adc
inc
pop
dec
cmpsl
jecxz
pusha
add
add
adc
sbb
nop
test
cmp
pushf
rorl
sub
test
fisubs
leave
and
xor
or
cmp
and
push
sub
fs
or
ljmp
pop
cmp
cmp
and
cmp
lea
sbbl
cmp
lea
xchg
xchg
pop
mov
sbb
inc
lock
leave
inc
daa
push
mov
sbb
int3
pusha
xor
mov
bound
dec
or
xor
push
mov
gs
push
cmp
ret
inc
and
icebp
imul
mov
ret
or
add
pop
cld
fs
aam
add
into
ja
or
and
mov
xor
sub
xor
or
lock
shll
fs
xchg
bound
fstps
xlat
loopne
fs
mov
arpl
pusha
jle
rorl
daa
xorb
push
insb
jmp
xchg
sub
loopne
mov
sub
sbb
out
dec
mull
jmp
mov
mov
lret
or
pop
adc
push
mov
mov
cmp
in
push
in
test
add
mov
scas
or
out
push
or
je
add
in
sti
mov
aam
inc
pusha
jne,pn
sbb
inc
pop
lret
rcr
mov
adc
adc
and
mov
mov
add
mov
adc
push
and
mov
sbb
push
push
dec
jmp
cmpsl
or
dec
cli
insb
sarb
aaa
rolb
inc
roll
outsl
sbb
pop
add
push
sub
daa
in
add
xchg
insb
in
push
push
jmp
fldenv
pop
mov
jge
addb
dec
ljmp
push
data16
jecxz
dec
scas
inc
mov
jne
cmpl
sbb
lret
sbb
and
cmp
jbe
loopne
dec
or
repnz
out
inc
dec
add
mov
cmp
cld
or
aaa
dec
jae
sub
out
push
in
jecxz
and
sub
push
inc
test
and
jae
daa
adc
aam
adc
pop
cmc
insl
or
sbb
mov
dec
pop
inc
in
and
mov
push
sti
loopne
cmp
jbe
fists
sbbb
push
daa
js
mov
scas
in
mov
dec
adcl
popa
inc
es
sub
sbb
ljmp
mov
addr16
repz
jp
or
mov
adc
mov
mov
pop
or
dec
add
lret
and
sub
mov
and
cmp
out
mov
mov
out
mov
add
gs
popa
xor
adc
fdivs
lcall
and
jmp
incl
dec
or
mov
push
adc
xchg
adc
sbb
pop
xor
movb
push
xchg
popa
or
les
cmc
xchg
mov
xor
test
adc
adc
ds
jne
xchg
add
inc
jge
lds
sub
stc
pop
mov
dec
jmp
xor
inc
push
pop
ret
inc
adc
xor
mov
mov
test
inc
inc
inc
pop
je
pop
es
repz
xor
je
movsl
and
js
or
mov
andl
jmp
outsb
adc
add
rolb
sbb
jne
inc
or
pusha
inc
js
or
and
inc
sub
cmp
mov
ror
inc
add
xor
inc
mov
loope
pop
add
xlat
cmp
adc
mov
inc
loope
pop
insl
cwtl
add
and
push
push
fists
sbb
inc
dec
mov
jmp
inc
push
xchg
xor
mov
aaa
add
mov
mov
mov
movsb
icebp
jo
stos
push
aas
jae
sub
lea
mov
add
dec
shl
punpcklwd
push
stos
mov
xchg
jge
push
dec
pop
testl
push
js
pop
sbb
daa
mov
xor
jle
pop
loope
js
dec
enter
inc
rorb
sahf
jb
push
and
jo
xorl
aaa
out
ret
cli
cmpsl
inc
mov
jge
cmp
dec
inc
inc
test
mov
repnz
sub
push
sar
nop
adcb
dec
inc
hlt
arpl
pop
cli
dec
arpl
and
mov
dec
jb
mov
gs
cld
shlb
ret
jmp
imul
addb
push
lock
xor
sti
shlw
inc
out
sbb
int
pop
or
push
data16
fistl
insb
sub
mov
push
push
test
push
outsl
in
cli
inc
push
pop
push
dec
add
inc
add
add
call
xchg
loopne
in
jmp
add
or
sahf
mov
mov
js
and
push
and
mov
xchg
inc
mov
lret
sub
jge
xchg
jae
add
xchg
push
jmp
cmp
mov
or
and
or
pop
pop
sbb
jle
pop
add
add
and
lea
rorl
andb
and
mov
add
adc
inc
sar
sarb
fnstsw
cmp
adc
ret
adc
mov
push
jo
push
mov
test
inc
xchg
dec
bound
dec
push
and
xor
ljmp
push
mov
add
out
add
fstpt
push
out
inc
add
fisubl
pop
and
fildll
incl
hlt
inc
andl
sbb
je
xorl
jae
or
addb
push
or
xchg
andl
testb
add
shl
pop
inc
inc
mov
lea
aaa
xor
gs
rorl
pop
movsl
mov
or
push
cmp
pushf
je
and
inc
bound
mov
pop
jl
jmp
scas
pop
notb
ret
push
pop
adc
sub
popf
add
push
aaa
lock
jp
arpl
out
mov
test
shlb
xlat
and
dec
push
xor
jle
adc
lock
xchg
movsb
loope
movsb
cmp
dec
lock
mov
adc
mov
test
insb
daa
cli
test
loopne
or
xor
not
push
xor
add
sbb
enter
add
das
outsb
js
enter
pop
xchg
dec
add
ret
sub
int
jmp
pusha
sarl
inc
outsb
mov
dec
dec
mov
add
in
mov
xor
popa
nop
bound
mov
popa
push
mov
into
bound
jae
cmp
mov
dec
clc
or
fdivrl
clc
das
add
add
jmp
pushl
fs
movsl
add
dec
lcall
push
pop
xchg
lea
add
mov
mov
push
or
or
inc
mov
addb
dec
in
mov
mov
stc
adc
xchg
hlt
inc
repz
lock
bnd
adc
js
icebp
mov
pop
je
push
cmp
fnclex
test
jb
ljmp
jne
add
xor
shlb
pop
jno
int
xor
sti
or
mov
mov
lods
jmp
leave
lds
xchg
push
andl
fildl
and
pop
mov
mov
repz
cmp
inc
or
lods
xor
call
sbb
or
sti
int3
mov
sbb
iret
decl
cwtl
push
test
imul
les
enter
push
and
cmp
popa
out
add
or
pushf
aam
pop
mov
cmp
ret
cmp
jg
pop
shr
add
jmp
or
mov
imul
jle
xchg
dec
dec
loopne
jnp
mov
imul
lods
shrb
and
sbb
aam
jle
fisubrs
sarb
ret
xor
mov
cmp
add
sub
push
and
push
adc
out
inc
sbb
int3
mov
clc
fldenv
pop
pushf
imul
mov
jmp
adc
outsl
mov
add
fdivs
adc
mov
jb
sbb
mov
xchg
fsubs
lret
jmp
in
jno
aam
push
push
push
mov
outsb
adc
aam
leave
enter
xor
add
mov
push
int3
push
icebp
xor
and
xor
adc
inc
jmp
scas
hlt
pop
and
mov
jbe
cmp
imul
add
add
mov
fnstsw
aas
sbb
push
or
in
pop
xchg
inc
jbe
pop
fsubs
popa
push
pusha
push
mov
pop
adc
xchg
jle
inc
push
mov
sets
xchg
imul
mov
cmp
mov
push
ja
cld
and
jbe
fdivr
add
mov
xchg
inc
and
mov
xor
ret
dec
fstps
ja
ljmp
ret
or
movl
and
or
push
sbb
fnstcw
inc
mov
nop
inc
divb
add
inc
mov
mov
adc
cmp
decl
rolb
add
repnz
or
jnp
sbb
rcl
outsl
in
sub
decb
cmp
dec
dec
inc
loopne
jne
pop
jle
sub
mov
testl
and
sbb
cmp
jbe
xorl
mov
fs
push
add
not
xchg
insl
mov
mov
sub
jle
cmp
jl
xchg
jbe
dec
mov
push
enter
loopne
push
nop
xor
mov
mov
mov
pushl
xorl
xchg
add
fwait
js
out
fsubrp
and
or
adc
mov
jmp
sahf
sub
or
cmpsb
or
ret
sub
test
mov
sub
and
inc
ds
pop
test
cmp
or
push
inc
and
dec
sbb
mov
sub
jl
or
mov
push
push
add
and
jg
out
or
xchg
stos
and
pop
test
mov
inc
or
xor
sub
lret
mov
xor
lock
cld
add
rclb
hlt
push
jo
xor
lcall
lret
mov
sub
sti
jg
xor
add
cwtl
sbbb
mov
lea
fstpt
test
xor
test
add
bound
push
icebp
and
inc
out
jg
inc
rcrl
pop
inc
sbb
jg
imul
fs
pop
jl
mov
sub
rorb
test
inc
mov
jno
lret
cld
adc
fildl
test
and
test
xchg
mov
fsts
push
gs
add
mov
mov
jbe
lock
xchg
jo
sahf
addr16
fdivs
cmpsb
cmpsb
lea
lret
aaa
mov
xor
inc
push
clc
push
inc
bound
test
into
xor
lods
je
pop
mov
por
inc
lock
gs
pop
cmp
dec
pop
dec
or
aas
xchg
ja
inc
or
sbb
push
lret
push
fidivrl
ljmp
fs
rolb
in
pushf
xchg
mov
xchg
mov
pop
data16
addr16
and
addl
ljmp
lods
pop
mov
rcrl
cmpl
cmp
inc
addr16
xchg
inc
push
lret
hlt
push
repz
jge
push
mov
push
aam
xchg
or
iret
cmp
lock
rcr
pop
or
sbb
inc
leave
add
cmp
ficoml
adc
or
add
cmp
sbb
xor
or
loop
mov
pop
and
nop
inc
mov
and
xor
cmc
repnz
out
and
outsl
sbb
fcoms
repz
jbe
mov
test
into
nop
cltd
aam
push
inc
dec
mov
adc
aaa
es
sbbb
std
push
jmp
cmp
or
je
xchg
je
add
dec
xchg
sbb
addb
imul
cmp
sbb
mov
rdtsc
shl
add
orb
mov
jmp
rcrb
popa
es
stc
pop
add
xor
mov
xchg
or
mov
pop
adc
adc
and
push
push
imul
sub
dec
mov
mov
add
fcoms
and
ds
sbb
cmp
inc
xor
popf
push
xchg
subl
pushf
sbb
add
loope
pop
and
xchg
enter
pop
sar
inc
andb
or
icebp
adc
add
jns
popa
inc
cld
sub
test
mov
lret
ja
imul
xor
add
and
pop
cmc
and
test
mov
rorb
sub
inc
inc
lcall
movl
aad
in
fistl
xor
push
cmp
jl
cmp
mov
jg
es
adc
add
push
xchg
add
aaa
imull
cs
jns
jle
pop
lock
jne
clc
inc
and
dec
push
mov
cmp
cmp
or
cmc
cmp
ljmp
push
jb
mov
repnz
and
movl
cli
jo
in
dec
dec
xor
and
movsb
adc
sub
stos
insl
leave
mov
icebp
cmp
scas
mov
lret
repz
add
cmp
rcll
or
add
adc
adc
in
lods
mov
shll
rclb
jle
sbb
jns
jne
jmp
fcomp
vpand
or
push
mov
jl
sbb
dec
out
mov
lock
scas
add
and
dec
xchg
pop
jle
mov
mov
jmp
inc
mov
pushf
adc
jecxz
adc
and
lret
xchg
adc
adc
das
push
xchg
push
jle
add
and
jp
mov
andb
dec
push
aam
xor
cli
mov
xchg
pop
pop
pusha
add
jg
and
pop
sbbl
mov
mov
sub
dec
repnz
in
pusha
jbe
adc
and
sbb
sub
xor
dec
jg
adc
cmp
fsubrp
push
mov
and
pop
hlt
int
aad
pop
or
mov
or
rolb
sub
sti
or
push
pop
scas
testl
sbbb
leave
xchg
or
pop
test
popa
shll
cmp
pop
daa
lds
notl
repnz
and
push
add
inc
jp
and
lock
icebp
enter
sbb
inc
lret
mov
clc
push
mov
ljmp
xor
fcmovbe
imul
mov
inc
cmpl
nop
adc
xlat
je
cmp
add
adc
shll
testb
sbb
xchg
sub
dec
and
sbb
cmpl
add
push
jmp
inc
in
inc
jnp
movb
out
mov
cmpsb
xor
cmp
call
push
push
or
roll
mov
mov
rcll
jmp
das
xor
loope
sti
xchg
negb
outsl
jecxz
push
mov
mov
inc
js
cltd
mov
cld
jle
add
mov
jne
rcrb
fstpl
pop
jmp
and
push
inc
jno
mov
pop
pop
cltd
pusha
adcl
or
push
mov
pop
mov
test
mov
xor
dec
pop
sub
sbb
pusha
mov
cmp
mov
decb
jb
jbe
lea
lea
or
test
and
add
int3
cmp
fistpl
mov
loopne
sub
mov
popl
nop
cmpsl
shll
and
dec
je
into
inc
xlat
xchg
sti
jbe
icebp
mov
push
dec
sbb
sbbb
push
cmpb
mov
int
testl
mov
push
mov
pop
add
mov
rolb
lcall
pop
vaddss
icebp
cld
sbb
leave
xor
out
loope
enter
jae
inc
jnp
push
pop
sarb
in
add
or
xor
sbb
dec
test
cmpsb
int3
mov
in
movsb
push
or
adc
fldt
sbb
sbb
xchg
xchg
xchg
sub
xor
test
and
mov
ss
and
inc
cmovs
daa
daa
push
push
pop
add
pop
pusha
fs
insb
jo
js
and
jl
sbb
cltd
movsb
adc
mov
xchg
cwtl
pushf
cltd
fs
dec
mov
mov
sub
test
cs
test
add
lock
and
and
imul
mov
or
clc
insb
movsb
dec
adc
cld
adc
or
sbb
inc
push
dec
dec
or
sbb
and
or
test
inc
insb
pop
inc
or
adc
adc
xchg
sbb
xor
push
cmpsb
xchg
ret
cmp
shrb
add
dec
jne
out
inc
adc
jbe
pusha
pop
push
in
lret
sbb
sub
shrb
test
dec
fcoml
xor
stc
or
push
fnstenv
rolb
movsl
xchg
dec
sbb
fildl
es
addb
add
inc
dec
pop
prefetcht0
pop
aam
adc
pop
pop
repnz
add
out
and
add
sbb
outsb
ret
add
cltd
jne
imulb
or
and
inc
movsb
and
call
xor
pop
xor
dec
mov
incb
mov
or
jno
and
je
and
rcrb
pop
ret
add
orb
arpl
test
jp
cmp
fmuls
in
pusha
pop
push
dec
push
popf
adc
pop
int3
sbb
rcrl
inc
lcall
pusha
bound
lret
negb
cmp
in
add
je
push
pushf
scas
xchg
mov
inc
push
mov
and
adc
cmp
xlat
test
jge
xchg
add
or
add
add
js
push
pop
in
lahf
add
cmp
xor
fcoms
jns
lret
adc
int3
add
xchg
sbb
mov
rcrl
pop
fwait
mov
and
int
mov
mov
lock
push
adc
cmc
adc
scas
ret
xor
adc
xor
jbe
testl
push
and
and
adc
adcl
jae
or
iret
int
addb
sahf
loope
push
lret
and
loopne
push
popf
push
ja
pusha
inc
dec
into
lcall
xor
test
add
mov
mov
lock
and
arpl
mov
jb
push
mov
push
push
add
push
jmp
enter
lea
std
xor
adc
or
clc
add
loope
mov
sub
es
add
inc
push
sbb
notb
sti
mov
dec
test
subl
fwait
mov
fs
mov
fwait
pop
xchg
mov
call
mov
inc
dec
cs
hlt
add
jge
cmp
cmp
xor
std
or
lret
push
xor
jp
test
rolb
out
out
ficomps
fisttps
and
fcmovnbe
sti
mov
or
xor
cmpsb
test
insb
jne
je
ss
iret
test
adc
rclb
sbb
leave
stc
popf
add
mov
inc
sbb
push
inc
insb
push
dec
ljmp
add
push
inc
pushl
mov
je
add
jns
dec
inc
dec
sbb
push
jp
xor
or
ret
jnp
addl
dec
outsb
xchg
sbb
mov
sub
mov
fldln2
loopne
adc
mov
pop
cmp
in
ss
frstor
sub
push
clc
filds
mov
mov
cmp
jb
clc
add
cmp
add
pop
fisttpl
cmp
fsubs
aam
dec
inc
push
xchg
adc
mov
add
pushf
lcall
and
fsts
inc
lea
ds
hlt
push
es
fmuls
loopne
loop
lods
jnp
adc
cmp
pusha
sbb
xchg
cmp
inc
test
lea
jl
cmp
sub
cmpsl
xor
sarl
cmp
test
mov
incl
cmpsb
in
fisubl
int
push
test
cmp
pusha
mov
add
add
jmp
inc
mov
fnstcw
inc
jg
ss
jne
movzwl
push
addl
mov
cmpsl
jecxz
out
inc
int
push
inc
and
mov
clc
pop
lds
iret
test
das
dec
je
fcoms
pop
cmp
jle
pop
or
into
fisttps
and
push
adc
daa
adc
iret
sbb
adc
push
sysenter
sbb
adc
xorb
pop
mov
fbstp
ret
dec
fucom
jecxz
and
jmp
xchg
mov
orl
pop
mov
aaa
xlat
mov
cmp
mov
inc
cmp
cmp
pop
mov
or
adc
test
adc
inc
fmuls
push
and
mov
inc
pop
inc
imull
and
daa
add
push
mov
push
cltd
sbb
pushl
in
loopne
and
movsl
dec
add
xchg
add
out
adc
cmp
sti
mov
orl
pop
mov
inc
inc
sbb
cmpsb
insl
dec
cmp
and
mov
cmp
mov
add
xchg
pop
add
jo
andb
stos
dec
dec
stc
pop
xchg
cmp
sbb
mov
mov
add
xchg
push
xchg
cmp
add
sub
addb
push
adc
sbb
push
mov
mov
pop
lock
and
sub
out
add
cltd
int
cmp
std
jno
dec
push
mov
fisttpll
xor
push
xorl
lret
jmp
adcb
pop
sti
and
mov
pop
or
or
lea
mov
in
loope
pushl
lods
adc
cmpsb
les
ja
fdivrs
jne
add
sub
pusha
cmp
adc
xor
jnp
xor
fistpll
mov
cmova
jg
jo
pop
es
or
mov
push
mov
pop
inc
in
shll
cs
dec
out
sbb
or
leave
je
ret
mov
scas
mov
add
sub
cmpsl
or
and
or
pop
xchg
sbb
ret
cld
clc
mov
scas
inc
clc
or
scas
rcll
les
xor
mov
or
shlb
dec
dec
cwtl
mov
out
jmp
push
jo
cmp
adc
jp
and
sub
xor
add
aam
adc
sub
mov
sub
loopne
push
push
pop
mov
add
jge
or
push
dec
in
fstpl
dec
push
and
mov
inc
dec
inc
sbb
scas
repnz
loopne
shlw
ret
cmovle
mov
pop
inc
inc
push
mov
out
adc
les
sub
mov
add
mov
xor
mov
add
rol
inc
roll
incl
inc
stos
pushl
mov
mov
insb
and
sbb
sub
mov
leave
cmp
daa
mov
out
or
xchg
add
lea
adc
push
xchg
pop
mov
pop
mov
out
xorl
pop
sbb
cmp
lods
jg
leave
in
fiadds
rclb
fsubrl
jo
call
addr16
pop
inc
fstl
mov
add
jae
rclb
andl
mov
and
pop
cli
js
pop
adcb
push
pop
lods
pop
mov
pop
pop
mov
sahf
inc
loop
cmp
mov
jae
add
clc
je
xor
add
lods
dec
into
lcall
sub
dec
data16
push
and
aad
mov
mov
adc
les
cld
add
mov
push
jmp
push
and
outsb
lahf
bound
pop
jl
mov
xor
test
add
js
pop
sbb
or
push
push
add
adc
inc
faddl
jns
add
add
fistps
adc
and
push
jmp
pusha
cltd
add
test
lret
jae
dec
inc
sarb
lret
dec
int
subl
push
dec
cmp
mov
mov
test
loop
jle
mov
xchg
xchg
cmpsb
xchg
ret
and
mov
pop
movsl
cmp
and
mov
add
sbbb
push
and
fs
sbb
pop
adc
jnp
repz
rclb
xchg
mov
cmp
mov
pop
shrl
inc
std
jo
enter
inc
mov
sub
ss
mov
lret
xchg
nop
sub
ss
jno
mov
das
mov
xchg
lret
test
dec
jne
mov
pop
mov
mov
das
push
aam
mov
inc
dec
cmp
or
sbb
js
pop
clc
mov
sbb
add
add
fdivrl
adc
push
adcb
testb
dec
and
jbe
mov
dec
mov
insb
cld
ss
idivb
dec
cmp
jo
mov
fdivrs
repnz
das
adc
inc
sub
movsb
das
ja
dec
into
jl
push
jle
add
sub
in
mov
adc
sub
or
add
or
test
stc
inc
xchg
mov
es
pop
mov
popa
add
jne
or
and
push
inc
les
inc
pop
in
or
dec
mov
push
add
push
hlt
push
ret
icebp
jne
and
les
stc
mov
dec
or
ror
je
adc
ja
add
dec
mov
or
into
jmp
sub
xor
in
sbb
or
ret
adc
push
push
mov
nop
jp
hlt
push
pushf
pop
mov
xor
jg
popf
pushf
pop
sub
je
push
popf
ds
cmp
xchg
scas
mov
push
data16
pop
testl
and
in
addb
add
icebp
and
push
push
cmpsl
mov
add
mov
or
or
roll
out
push
or
repnz
js
cmp
mov
dec
add
and
test
and
enter
add
or
xor
nop
nop
and
shl
not
xor
loope
xor
and
jb
nop
or
jmp
mov
add
or
mov
jns
lea
test
adc
test
pusha
jp
adc
test
xor
lds
inc
lret
or
xor
or
or
or
jmp
mov
cmp
pop
clc
incb
jmp
sbb
testl
and
mov
and
xor
cmp
aaa
jecxz
jge
inc
cltd
out
add
or
mov
jns
nop
or
pusha
xor
jge
or
sbb
loope
flds
sti
push
xorb
aas
pusha
mov
or
mov
pop
sub
xchg
addr16
rorl
jecxz
pop
fstp
mov
pusha
pusha
pop
je
pusha
insl
dec
sbb
cli
xorl
or
cmp
mov
push
es
adc
sti
add
ja
test
pop
xor
mov
incb
push
cmp
or
sub
lock
orl
mov
xchg
inc
or
mull
imulb
push
subb
xorb
sbb
jmp
push
and
jnp
and
inc
add
adc
mov
inc
push
fnstcw
sbb
push
xor
xor
mov
or
and
pop
jecxz
ret
inc
cwtl
xchg
pop
sbb
cmp
out
in
inc
fisttpl
test
neg
sbb
xchg
adc
xor
mov
add
pop
bound
cs
xchg
push
aaa
dec
and
sbb
clc
in
dec
xchg
mov
fcompl
mov
jl
in
lods
sbb
add
sub
sub
jmp
sub
inc
dec
push
jp
push
or
psubusw
xchg
out
add
adc
mov
mov
repz
popa
and
mov
pop
cs
je
je
push
loope
andb
pop
in
xor
lock
into
jbe
or
xadd
fmull
fcompl
andb
mov
add
cmp
div
jecxz
mov
jb
enter
add
leave
stos
mov
test
cld
mov
insl
in
fiaddl
orl
testl
sub
push
push
sahf
jmp
pop
movsb
push
cmp
inc
lods
in
aam
adc
and
rclb
mov
and
add
lcall
mov
inc
mov
and
jle
add
addr16
sbb
pop
test
add
add
mov
clc
xchg
out
cmp
jae
cmp
xchg
enter
insb
push
lea
or
xchg
mov
push
dec
cmp
je
je
jl
cmp
sub
push
es
sbb
js
das
adc
pop
add
hlt
or
adc
and
add
cmp
je
jmp
pop
sbb
loope
pop
and
rcrl
ret
pop
sti
pop
adc
adc
add
mov
in
jmp
jno
mov
or
cmp
jbe
add
or
push
sbb
xchg
or
sbb
insb
dec
sbb
sub
incl
out
mov
mov
add
imul
push
lcall
enter
enter
inc
sbb
or
adc
imul
out
dec
cmpl
adcb
fwait
xor
sbb
or
adc
mov
mov
lock
in
sarb
mov
dec
xor
or
int3
pop
cld
popa
mov
jge
and
push
data16
cs
push
jl
loope
or
rcrl
add
lock
or
in
ret
movsl
pop
gs
mov
xchg
mov
inc
xchg
sub
sbb
out
cmp
xchg
push
pop
fadds
into
fsubrs
dec
adc
mov
lods
sub
das
pop
cwtl
sbb
or
xor
test
cvtpi2ps
or
mov
mov
icebp
sbb
shll
inc
push
das
mov
inc
add
dec
jb
adc
mov
out
jne
mov
sbb
add
push
add
xlat
sahf
jl
sbb
sub
shr
xchg
inc
das
jae
incl
sub
dec
aad
subb
push
ret
xchg
mov
loop
fidivl
dec
pop
inc
fldenv
dec
lock
and
xor
push
or
insl
or
push
mov
push
xchg
inc
adc
fldt
shrl
enter
fwait
int3
and
sub
cs
fwait
sbb
aam
pushf
loopne
xchg
jle
call
jb
fsubrl
mov
or
inc
cmp
bound
inc
iret
not
je
mov
loopne
inc
xchg
inc
and
mov
fsubl
pop
call
jmp
and
cmp
repz
cmp
jbe
out
add
mov
add
and
sbb
sbb
or
inc
sbb
adc
xlat
pusha
fidivrs
adc
shlb
dec
inc
mov
pop
arpl
test
mov
or
cmp
push
jnp
test
add
jae
cwtl
xchg
dec
mov
mov
rcrl
adc
mov
sbb
dec
or
gs
outsl
inc
es
roll
test
inc
cmp
sahf
mov
jbe
sub
fsubl
cmp
jecxz
add
adc
enter
les
loope
push
sub
add
insl
xlat
sub
add
adc
adc
mov
dec
push
and
dec
sbb
cmpl
xor
pop
adc
mov
add
ret
pop
push
push
inc
cmpsl
int
rclb
mov
push
mov
loopne
add
push
or
or
add
jmp
aas
sub
lock
sbb
sti
add
ret
add
pop
test
jne
enter
or
jl
mov
jp
push
push
stos
stos
test
add
imul
pop
lods
aam
xor
pop
sub
rcrl
imul
pop
dec
jns
dec
xchg
loopne
lea
dec
loop
movsb
pop
subb
inc
shl
mov
xchg
push
ret
scas
inc
aam
xor
sti
loop
rolb
adcl
outsb
inc
aas
or
jmp
push
cltd
insb
pop
and
mov
out
pop
hlt
int
mov
inc
insb
sub
dec
mov
lea
xor
repnz
scas
test
test
jb
cmp
sbb
lahf
imul
sub
adc
fisttpl
bnd
incb
jae
or
dec
mov
adc
jns
shlb
inc
xor
test
and
mov
test
aam
mov
mov
push
aad
or
dec
stos
fwait
add
push
inc
sub
or
xchg
dec
xor
cmp
mov
movb
test
pushf
xchg
iret
inc
out
and
push
cld
not
in
flds
cs
dec
sbb
test
out
push
or
loop
jbe
jne
shl
and
inc
mov
jl
inc
rol
test
out
mov
jl
dec
int
lock
fs
aam
mov
movsb
jge
popa
pop
xor
mov
loop
add
hlt
test
or
in
push
mov
test
lcall
pop
push
aaa
dec
add
cli
cmovg
bound
pop
dec
popa
sub
xor
pop
add
xor
inc
lock
addb
inc
mov
jecxz
inc
add
jo
sbb
xor
lods
out
addl
mov
dec
add
or
mov
mov
lods
xchg
test
into
out
mov
and
add
fdivrl
and
loop
xorb
lods
cld
add
or
sbb
jge
cmovbe
and
pop
scas
push
and
rcl
jecxz
sub
rorb
and
or
out
adc
fildl
add
mov
jne
adc
mov
pop
xchg
repnz
pop
sub
mov
adc
adc
or
nop
sub
adc
jns
and
adc
stc
cld
test
or
adc
stc
and
sbb
mov
sbb
enter
adc
mov
and
adc
sahf
stos
mulb
test
push
adc
loopne
pop
mov
mov
test
push
shll
mov
sarl
or
mov
imul
sub
lods
mov
lcall
cmp
in
jne
inc
jmp
mov
sub
inc
clc
addb
ja
cs
das
xchg
int3
mov
sub
cmp
ja
push
or
loopne
jmp
fs
mov
push
cmp
rolb
dec
shlb
call
rolb
sbb
jae
into
jmp
ljmp
jmp
andl
inc
sti
or
jmp
cmpsl
mov
add
xchg
adc
push
dec
or
mov
scas
mov
or
inc
jle
cmp
push
xor
pop
adc
push
jmp
dec
push
mov
mov
mov
xchg
lods
fldcw
add
mov
pushf
cmp
cmp
fs
sub
inc
and
xchg
je
lea
mov
ret
loope
sbb
push
pop
jge
cmp
pop
cmp
test
mov
jbe
nop
add
jne
in
ds
dec
dec
jae
imul
sbb
adc
cmp
and
fisubrl
xchg
lea
mov
out
push
out
repnz
sub
mull
orl
orl
pop
or
scas
mov
shl
stc
sub
cmp
mov
stos
mov
pop
mov
jmp
and
call
sti
je
mov
test
nop
mov
fnstcw
outsl
xchg
testl
testl
fisubrs
or
push
cmpl
push
adc
inc
aaa
jne
push
sbb
and
sub
lock
rolb
out
daa
test
or
jecxz
add
pushf
jmp
push
mov
test
pop
mov
sub
mov
dec
test
sbb
hlt
mov
mov
mov
dec
pushf
xor
es
aas
or
jge
neg
add
mov
outsl
lcall
xlat
test
cmp
adc
cmp
adc
mov
or
jmp
mov
mov
and
jge
jle
add
sub
xor
iret
adc
jne
mov
scas
inc
inc
out
dec
test
lods
sarl
push
insb
popf
into
lcall
decb
add
mov
test
add
mov
dec
mov
cmp
sbb
or
mov
inc
adc
mov
push
xor
and
and
and
adc
imul
out
jle
jbe
adc
sbb
ja
aas
mov
or
stos
mov
movb
testl
jne
enter
jmp
fmull
les
test
into
jne
outsl
push
lock
or
cmp
cmp
jne
lock
add
jne
push
fimull
add
xchg
pop
cmpsl
adc
ja
push
lea
xor
mov
or
pusha
ret
xchg
scas
sbb
cld
cmp
mov
mov
or
jl
ja
cmp
add
sahf
sub
sub
dec
xor
stc
jg
add
sub
or
js
push
add
gs
test
lods
add
or
shr
add
cmp
fidivs
mov
jg
mull
into
or
adc
inc
mov
les
int
push
add
notb
fnstcw
push
mov
mov
std
mov
insl
fadd
loopne
shr
or
mov
sahf
dec
push
ret
popf
and
mov
xor
mov
enter
sub
and
mov
dec
adc
cmp
add
fiaddl
sar
pop
add
xor
shr
fiadds
push
call
or
scas
fidivl
clc
fidivrl
jb
cld
pop
and
push
fmull
cs
dec
ja
xorb
popa
dec
add
cmp
test
mov
imul
push
push
into
jmp
scas
push
scas
sti
dec
arpl
add
push
les
arpl
add
lcall
sbb
das
out
sarl
sub
add
negb
repnz
sub
movups
jo
int3
and
ret
or
sub
test
call
xchg
xchg
add
push
push
add
ljmp
cmp
mov
repz
pop
dec
leave
mov
movsl
lods
mov
testb
add
jmp
inc
add
jne
inc
or
pop
jne
cmp
shr
push
add
jo
mov
fs
mov
and
insb
adc
mov
dec
sub
dec
movsb
or
or
stos
and
xchg
xchg
adc
inc
jge,pn
pop
jnp
cmc
or
ss
cmp
je
adc
aas
lods
or
out
mov
dec
cmpb
je
mov
sti
decl
jne
dec
mov
inc
inc
mov
out
lea
faddl
cmp
jnp
sub
xor
pop
add
jae
outsb
fistps
xor
pop
les
movsl
cmp
adc
or
mov
pusha
dec
add
xor
popl
std
cmc
xor
inc
xchg
xchg
push
out
mov
jnp
add
push
mov
pop
jno
xor
jmp
add
movsl
adc
xor
pop
xor
cmp
jp
xchg
sub
pop
xchg
mov
aam
add
mov
mov
or
add
push
and
mov
mov
ret
adc
lahf
push
cmpl
dec
push
iret
out
clc
add
mov
mov
cmp
aas
sub
movb
lea
sarb
xchg
push
fimull
xorb
mov
es
pop
dec
pushf
sbb
loop
lock
hlt
lcall
jmp
sub
add
dec
push
or
jge
pop
xor
lds
dec
add
dec
inc
dec
inc
out
adc
jns
les
sub
out
jl
ficomps
cld
cmp
push
or
add
xchg
movsb
cs
add
add
or
push
xor
jle
lea
push
push
pop
dec
cld
les
mov
sub
mov
or
insl
aam
mov
mov
and
add
cwtl
loopne
add
add
push
ret
jbe
jle
sbb
enter
aam
sub
scas
add
adc
mov
cmp
xor
enter
dec
push
lods
add
xchg
push
sbb
dec
pusha
and
lcall
enter
in
mov
mov
outsb
fldl
fidivl
mov
jp
and
lcall
xor
jl
mov
xchg
movsl
adc
imul
pop
cld
pop
loopne
xchg
fldl2t
call
in
cmp
jge
dec
pop
scas
gs
or
andl
add
push
inc
adc
lret
lret
or
cmpl
test
test
stos
xchg
xor
fadd
pop
fld
inc
jmp
faddp
adc
dec
or
adc
push
addl
negb
cmp
xor
push
je
and
mov
dec
push
clc
push
mov
pushf
imul
leave
into
loopne
incb
jo
xchg
and
pusha
and
popf
inc
movsb
or
fwait
jle
fwait
pusha
inc
neg
sbb
jecxz
mov
jg
fdivr
das
lcall
jne
pop
cmp
mov
inc
inc
sahf
add
popa
jmp
out
scas
test
adc
cmp
add
add
shlb
add
xlat
or
test
inc
sub
ja
sub
xor
in
sub
adc
inc
or
xchg
mov
loop
and
lea
pop
dec
pushf
data16
clc
xchg
add
ret
inc
icebp
ss
mov
add
dec
shrd
push
cmp
cmp
or
enter
jl
cmpsl
clc
insb
fdivl
xor
incl
ficoml
xor
out
xchg
nop
or
or
cmp
or
loopne
leave
and
call
adc
push
xor
pop
cmp
push
scas
imul
mov
jo
inc
out
je
mov
pop
and
sub
pop
sbb
js
jg
jb
push
loope
gs
sub
or
fidivrl
rorl
lock
fwait
inc
shll
pop
sub
add
push
or
jbe
not
jne
inc
sbb
or
push
jg
imul
lods
jb
xor
scas
pop
jnp
inc
dec
pop
or
or
sbb
add
daa
jne
subl
jae
inc
add
dec
xorb
add
sub
xor
test
cmp
jbe
push
sub
jne
loop
scas
pop
mov
call
adc
pop
mov
mov
sub
mov
inc
cwtl
or
andb
subl
mov
adc
add
shll
jl
xor
add
or
add
mov
rolb
stos
rorb
ficompl
add
xchg
adcb
sbb
iret
cmp
je
push
and
push
je
xor
or
shl
jne
js
and
inc
int
xchg
inc
lret
jbe
adc
lods
xor
xchg
lea
add
or
lock
inc
icebp
adc
push
insl
pop
push
dec
negl
jmp
insl
cmp
test
js
cld
jl
jle
fisubrs
mov
inc
or
mov
push
shr
loop
xorl
roll
jge
aaa
mov
jle
gs
or
pop
data16
xchg
xlat
or
imul
inc
popa
je
inc
je
dec
cmp
xor
ss
pop
pop
add
cmp
inc
dec
xchg
and
call
mov
fpatan
inc
mov
add
das
dec
dec
mov
or
fldl
fdivl
fmull
shr
add
push
pop
clc
fstps
or
fldenv
xor
leave
and
sub
inc
dec
push
pusha
dec
rol
ret
idivb
push
add
adc
add
or
and
pop
xor
cmp
daa
fs
dec
das
xchg
inc
aam
call
cmp
js
push
xchg
clc
jmp
das
xchg
movsl
je
sbb
cmp
js
pop
dec
adc
pop
outsl
xchg
shrl
xchg
lcall
push
movsl
xchg
test
das
cmp
adc
jo
rorb
dec
jmp
jecxz
ss
cld
lahf
dec
push
cltd
add
push
and
jo
pop
pop
mov
and
push
and
xor
xchg
ds
mov
shll
dec
fwait
pop
sub
push
cmp
sub
imul
int
jl
cs
inc
mov
addl
mov
mov
mov
xor
xchg
rcr
mov
cmpl
outsl
mov
push
or
push
mov
push
mov
loop
insb
adc
fwait
arpl
jp
mov
call
sbb
pusha
mov
popa
movsb
lret
or
ja
jmp
je
mov
mov
jbe
jge
push
cmpsl
mov
mov
int3
testb
dec
cmp
fdivl
sarb
int
lock
imul
jl
cmp
mov
mov
icebp
out
jo
mov
and
xor
xor
cli
and
loope
sub
aaa
leave
shlb
jo
dec
out
hlt
jmp
xor
mov
or
jmp
testb
roll
ljmp
or
shll
dec
add
sbb
in
int
jae
sbb
sbb
shll
cmp
add
mov
shlb
xorb
mov
roll
add
mov
adc
gs
push
or
sbbb
jne
dec
or
push
push
jb
inc
mov
xor
pop
mov
jp
test
enter
inc
orl
xchg
xchg
or
jbe
fdivrl
push
cld
cwtl
adc
pusha
push
cmp
dec
fs
or
outsl
xor
mov
jecxz
jecxz
push
push
jbe
mov
addr16
jns
jne
test
mov
and
cwtl
push
hlt
mov
push
xor
add
mov
mov
adc
push
sbb
lock
faddl
movl
lock
insb
pusha
xor
xlat
shrb
cmp
jge
notl
jecxz
enter
cmp
push
insb
mov
or
fisttpll
aas
fldt
das
add
call
stc
insl
xor
sub
push
arpl
and
xor
cmp
loop
daa
sbb
inc
jmp
das
add
pop
jb
inc
inc
add
pushf
and
cmp
inc
test
data16
sub
sub
sub
push
cmp
dec
bound
outsl
sub
ret
fmuls
pop
test
icebp
rol
mov
jo
mov
pusha
mov
mov
or
das
adc
mov
in
mov
add
adc
inc
push
movsb
out
iret
push
insb
pop
repz
add
and
push
and
mov
jo
sbb
xor
xchg
and
mov
mov
or
jl
lret
mov
dec
cmp
movsb
cmp
sub
jmp
xchg
push
cwtl
sbb
sahf
mov
xor
sysexit
popa
sbb
ljmp
inc
jmp
test
inc
imul
add
inc
lret
ret
sub
fcoml
sub
movsl
sbb
or
lcall
pop
and
xor
movsb
lea
adc
pop
or
xchg
inc
push
sub
leave
les
lret
push
insb
push
sub
xchg
mov
jo
push
loope
inc
xor
leave
pop
lock
out
sub
adc
jmp
pushf
or
cmp
les
adc
mov
xchg
push
cs
and
loop
cmp
adc
nop
cmp
push
insl
loopne
loop
testb
std
dec
loopne
cmp
cmp
or
ljmp
inc
jnp
lret
adc
jmp
or
es
add
or
mov
and
notl
ficompl
out
fcmovb
jmp
shr
or
mov
add
add
or
bound
rcrl
repz
push
sti
push
sbb
cmp
xchg
sbb
inc
sub
jmp
sub
frstor
sub
lret
jne
add
fnstcw
inc
les
ds
jg
pop
dec
add
lea
mov
shr
subb
cmp
mov
adc
dec
insb
mov
or
push
sbb
mov
mov
mov
mov
repnz
dec
jo
dec
or
sbb
es
stc
jo
add
out
decb
loopne
cmp
sub
sbbb
imul
push
cli
push
notb
or
shl
andl
adc
aad
fs
push
add
sbb
decl
pop
fsubs
stos
imulb
or
test
sub
push
xchg
lret
je
test
add
push
or
rorl
sub
andl
fcmovu
add
sub
mov
lods
cmp
jo
negb
add
adc
fisttpll
cmp
cmpsl
enter
push
cld
sub
jne
dec
mov
call
ss
inc
inc
and
adc
mov
mov
sub
int
xchg
mov
adc
cmc
add
adc
insb
call
push
fldl
mov
jle
cld
insb
stos
sbb
ja
cs
popf
les
or
and
pop
cmp
add
out
cmp
leave
inc
xor
mov
jg
lock
jl
cmpb
jl
xor
rorb
cmpb
idiv
test
inc
stos
insb
xor
inc
inc
xor
bound
inc
shrl
and
dec
inc
push
push
mov
push
push
jo
imul
rorl
cs
inc
adc
fldl2e
imul
cld
aam
mov
or
sub
mov
jne
and
cmp
mov
adc
mov
call
out
aad
cmp
and
adc
or
test
push
sub
adc
push
fcmovu
add
push
shll
cmpsb
mov
je
mov
dec
scas
or
ret
dec
sbb
add
in
or
sub
push
pop
rol
adc
jne
movsw
es
push
jl
push
dec
outsb
rorb
mov
aam
mov
or
enter
jmp
rorl
pop
push
insl
pop
adc
in
aas
call
adc
fdiv
ds
sahf
loopne
sbb
sub
inc
test
dec
repnz
and
xchg
pop
gs
adc
sbb
push
push
inc
or
fsts
fcomi
sbb
adc
fs
and
sbb
and
daa
test
test
mov
and
pop
pop
push
enter
int3
push
jae
add
and
lods
rcl
ljmp
sub
loope
shr
test
stc
sbb
push
idiv
and
adc
je
testb
jmp
ljmp
outsl
mov
adc
inc
fisubl
pop
add
mov
sbb
rolb
es
xchg
push
jge
dec
adc
jnp
je
push
or
into
jbe
jns
aas
push
pusha
adc
dec
sub
bound
popf
adc
mov
add
push
xchg
add
cmp
iret
call
bound
pusha
adc
adc
jno
setle
fcoms
add
mov
cwtl
sbbl
stos
mov
shrl
popa
mov
ss
push
or
cs
int3
push
fcmovne
aam
cld
and
dec
pushl
dec
sbb
ret
ss
jg
rolb
mov
adc
and
sbb
leave
jne
sub
testb
pop
clc
lds
push
sub
leave
je
xlat
adc
daa
push
mov
mov
mov
out
es
and
or
mov
je
les
mov
add
out
push
cmp
ja
add
cmp
adc
cmp
jne
mov
shll
leave
adc
mov
xor
idivl
pop
add
add
push
je
mov
scas
ret
ja
sbb
mov
pop
lahf
mov
mov
pop
pop
ljmp
sbb
pop
push
sbb
div
mov
in
fdivs
push
push
fdivrs
test
or
adc
mov
pop
sarl
and
push
mov
push
cmp
sub
testl
test
adc
ja
push
and
aad
cmpl
mov
add
jg
cmp
movsl
pop
xlat
pop
inc
sbb
push
lcall
xor
sbb
hlt
inc
test
xor
sub
addl
adc
adc
iret
or
mov
sti
cltd
fld
add
inc
inc
je
jo
inc
sbb
xor
sbb
lea
jle
mov
pop
jle
dec
repz
sti
mov
push
rcl
rcl
iret
repz
aad
xlat
fcomp
fiaddl
fstpt
mov
sti
nop
data16
movb
jmp
cmp
and
xchg
or
cmp
test
mov
mov
fucomi
outsl
orb
mov
add
push
or
or
add
cmp
test
mov
divb
push
xchg
shl
in
pusha
icebp
push
ja
call
cmp
in
stc
mov
pop
xor
push
loopne
movsl
adcl
inc
add
sub
push
sbb
test
sbb
mov
imul
jmp
sbb
sbb
lea
or
mov
inc
js
mov
or
pop
pop
dec
or
out
cmp
inc
pusha
loop
mov
pushf
sub
adc
shlb
push
adc
mov
imul
addr16
roll
ret
js
add
jb
outsb
dec
inc
clc
inc
xor
decl
or
rolb
test
hlt
fnsave
fdiv
neg
fbld
add
and
lea
pop
incb
xor
sbb
mov
jae
xchg
ja
add
add
mov
pop
arpl
mov
fmulp
repz
loopne
dec
lods
pop
and
fwait
loopne
inc
or
rcrb
dec
xchg
dec
mov
jne
notb
sbb
imul
test
js
mov
push
lea
fisubl
dec
or
mov
or
or
inc
sub
or
or
ret
movsb
out
test
mov
push
addl
ror
fwait
cwtl
mov
jge
jl
test
test
rol
add
stc
jle
jle
aam
mov
shr
or
sar
mov
cmp
rorb
add
ds
push
push
push
lret
mov
inc
xchg
int3
or
lods
outsl
loope
popf
ss
shrl
in
lea
mov
or
dec
mov
pop
sbb
inc
lods
cs
movsb
lock
cli
and
push
pop
cli
inc
cli
div
push
adc
sbb
and
mov
imul
in
sub
sbb
adc
mov
or
ret
and
clc
adc
xchg
in
dec
leave
js
scas
outsb
inc
fnstenv
xchg
je
xor
mov
iret
inc
sahf
out
dec
rolb
lock
xchg
sbb
xor
add
pop
pop
shll
mov
loop
cltd
orl
test
xchg
xchg
testb
sbb
inc
jo
inc
hlt
adc
repnz
adc
into
or
pop
pop
inc
shlb
fsubs
call
inc
test
dec
test
sbb
jge
mov
lods
dec
rolb
dec
mov
inc
lds
mov
mov
sbb
fcmovu
mov
mov
mov
add
lods
mov
mov
inc
inc
and
into
repz
clc
sbb
xchg
add
sbb
test
rcll
sbb
sbb
test
lret
lock
fs
add
out
or
jge
loop
sbb
inc
lock
sbb
sbb
and
jne
xchg
movsb
repnz
in
or
pop
inc
or
mov
pusha
mov
jge
add
sub
mov
sbb
add
mov
or
inc
add
add
push
nop
inc
mov
adc
mov
pop
jle
out
adc
add
stos
lock
loop
ret
add
or
adc
shll
test
jne
sbb
neg
and
pop
jle
inc
imul
jmp
pop
dec
je
loopne
loopnew
pop
or
xchg
fadds
lea
push
and
sbb
mov
push
jo
mov
adc
sub
out
lds
xor
and
xchg
mov
repnz
mov
add
sub
into
out
lret
or
or
push
cmp
push
nop
sbb
xchg
movsb
xabort
gs
mov
enter
negb
mov
jae
add
test
sahf
jne
aas
add
cmp
shll
into
or
mov
aam
or
inc
in
mov
or
dec
nop
dec
mov
dec
cmp
push
std
jmp
jmp
cmpb
or
add
dec
cmp
jae
mov
add
cli
dec
cld
incb
sub
sub
lret
mov
pop
and
xor
mov
jp
jne
loopne
roll
or
pushfw
xchg
data16
lret
or
push
sahf
inc
iret
xchg
adc
adc
dec
movsl
test
or
adc
jp
mov
and
ret
lcall
call
lret
ret
and
adc
sub
imul
or
push
or
jmp
mov
xchg
push
or
add
or
pop
pop
scas
xchg
sbb
cltd
add
adc
push
add
sbbl
ret
dec
lret
push
mov
xchg
adc
cmp
add
testl
lret
and
xchg
out
pop
cmp
xor
into
pusha
inc
jmp
and
rcrl
test
xor
mov
ret
mov
prefetchw
testl
xor
cmp
or
inc
push
pop
jae
or
or
dec
push
imul
inc
or
push
or
cmpsl
inc
jl
or
mov
shl
mov
pop
or
inc
mov
add
add
and
and
cmp
popf
and
and
jecxz
inc
jge
mov
ret
or
into
add
pop
cmpl
pop
jno
fldcw
mov
pusha
inc
mov
out
sbb
inc
stos
adc
and
add
xchg
and
adc
cwtl
add
jmp
nop
test
mov
loop
scas
pop
mov
xchg
test
bound
cltd
ss
or
add
imul
add
sbb
xchg
jle
jnp
call
je
and
sbb
inc
pushf
pushf
cmp
jg
into
into
into
sbb
test
pop
and
outsl
lock
fstpl
sarb
push
pop
nop
pop
sub
push
cwtl
pop
mov
dec
mov
or
pop
lcall
add
or
dec
add
mov
hlt
add
leave
lahf
pop
test
test
adc
add
and
sbb
adc
out
push
insb
or
je
or
sub
or
sub
jmp
mov
lret
push
pushf
lret
xor
subl
and
scas
sbb
push
add
or
inc
enter
cmpsb
cs
lods
pop
fmul
cmp
push
xchg
push
xor
cmp
sub
rol
lods
cmp
mov
dec
pop
sarb
ret
ficomps
mov
push
sbb
push
sbbb
or
and
mov
jge
bound
in
sub
jl
or
aaa
xor
and
icebp
incl
push
mov
inc
push
cmp
sbb
cmp
mov
push
adc
cwtl
addr16
sbb
orb
movsb
loopne
sub
sbb
fcompl
mov
pusha
mov
shlb
mov
mov
je
cmc
and
push
call
dec
les
jbe
inc
inc
int3
call
jmp
pop
sbb
jo
adc
out
sub
or
xchg
jns
jmp
rcll
or
push
or
sub
xchg
aam
fbld
mov
mov
aam
inc
jns
movsb
push
rorb
sbb
add
pop
xchg
vmovaps
lods
test
pusha
lods
pop
push
inc
push
pop
xchg
cmp
add
mov
sbb
jnp
inc
pushl
leave
outsl
adc
test
je
mov
dec
push
test
push
xor
mov
out
je
and
xchg
push
push
mov
pop
mov
mov
xchg
inc
pop
xchg
sbb
xor
inc
add
pusha
jnp
sub
push
mov
sub
push
hlt
add
stos
jns
ja
pusha
xchg
dec
inc
sbb
mov
lcall
or
add
popa
pop
jge
lea
jae
lret
and
fwait
xor
imul
push
push
pushf
out
jl
and
push
popf
push
xchg
xor
adc
stos
fildll
repnz
rclb
leave
arpl
dec
add
rorb
mov
xchg
js
push
mov
das
aas
mov
cs
push
mov
push
and
jae
sti
sbb
daa
jmp
push
push
xlat
inc
or
pop
inc
adc
pop
mov
dec
add
flds
or
xchg
sub
mov
pop
jmp
xor
pop
dec
xor
mov
inc
hlt
or
inc
push
jne
loopne
or
push
inc
das
lods
push
imul
movsb
nop
insb
insl
jo
dec
jmp
xchg
push
cmp
lock
fiaddl
and
inc
push
pop
add
mov
and
and
push
and
sbb
cmp
sub
inc
jle
ss
mov
pop
add
loopne
add
or
mov
jo
lret
enter
cmp
dec
sbb
dec
shrl
push
clc
add
mov
mov
mov
mov
jg
enter
xor
add
sub
mov
jl
lea
and
pop
jl
out
and
loopne
lea
pop
rol
loop
int3
and
adc
gs
lret
lods
in
sbb
pop
nop
or
xchg
jge
jae
fsubs
lock
or
loopne
jmp
dec
loop
or
lea
xchg
sub
ss
int3
pop
sub
js
hlt
arpl
cmpsb
mov
and
mov
or
leave
add
or
pusha
jo
jae
or
clc
addb
fcompl
movsb
shrl
shll
sub
add
dec
pushf
mov
xchg
fnsave
loope
cwtl
es
cld
lcall
add
bound
ds
cmpsb
inc
hlt
xor
xor
sub
adc
sbb
adc
sub
push
mov
mov
pop
testb
push
testb
ds
push
mov
xor
sbb
add
sub
sub
cmp
dec
dec
mov
les
push
pop
add
push
xlat
pop
nop
pop
and
enter
test
daa
outsw
inc
inc
sub
mov
nop
into
sbb
xor
adc
or
dec
shlb
or
pop
lea
sbb
pop
pop
inc
psllw
sbb
pop
lock
xchg
mov
icebp
jmp
loop
loope
cwtl
shlb
insl
clc
mov
in
adc
push
cvttsd2si
mov
push
add
pop
pop
inc
sbb
je
pop
inc
adc
push
cs
stos
xchg
fildll
sbb
fsubrp
test
jns
fstps
icebp
fcomps
mov
mov
les
jmp
cmp
lcall
adc
ret
jbe
adc
pop
sbb
sub
xchg
ja
and
push
dec
jge
int
popa
mov
add
stos
or
push
into
dec
mov
in
iret
mov
push
jo
gs
sub
or
fs
arpl
add
fcompl
xchg
push
mov
insl
inc
push
rolb
in
xabort
inc
loopne
mov
data16
jb
aad
inc
es
inc
jecxz
jnp
push
mov
xor
sub
mov
fcoms
fs
outsb
dec
add
out
jmp
fwait
pushf
sbb
inc
and
and
fs
adc
or
adc
nop
fs
popa
arpl
call
and
cwtl
xor
inc
les
outsb
adc
dec
ret
jb
arpl
repz
adc
sub
loopne
cld
arpl
mov
adc
mov
jl
jge
pop
push
xchg
jge
adc
sbb
jne
cmp
ss
in
ss
inc
inc
adc
imul
jno
dec
push
push
and
stos
sti
std
add
and
jle
adc
cmpsb
mov
xor
fcomp
aam
pop
xchg
pop
dec
rcll
cmpsb
sarb
out
adc
and
sub
jg
in
and
imul
sub
mov
push
push
or
shl
push
pop
pop
pushf
call
inc
xchg
lods
addr16
lret
dec
repz
mov
aam
sbb
or
in
jge
subb
xchg
or
in
cmovge
leave
adc
fstps
shll
movsb
imul
xorb
sub
fmull
and
lock
lcall
pop
inc
je
fistps
add
cmpl
pop
xor
fildll
ja
mov
cmpb
shll
sbb
or
inc
fstps
ljmp
movsb
sbbb
mov
or
xchg
dec
or
aaa
cld
pushf
or
xchg
call
in
xor
loopne
arpl
pop
shll
cltd
aam
enter
mov
call
xchg
in
cmpl
test
shrb
js
or
loopne
test
and
adc
dec
stos
imul
sub
cltd
fs
xor
cmp
fs
dec
inc
inc
dec
fwait
xchg
dec
es
or
add
xchg
push
add
fisttps
cld
add
jns
pop
jb
rcr
add
push
scas
add
ljmp
imul
fwait
dec
and
mov
xchg
adc
sbb
ja
sub
sbb
inc
lods
in
lock
adc
and
xchg
xor
inc
xchg
loopne
and
sub
add
lahf
imul
add
xchg
sbb
leave
xor
fs
adc
cmp
ds
dec
nop
mov
push
cmp
fisubs
int3
aad
or
mov
rcrb
out
adcb
xor
cltd
rolb
sbb
or
imul
in
mov
call
xchg
insb
or
lock
or
sbb
jno
inc
inc
jo
push
inc
insl
adc
pushf
mov
jo
out
lock
mov
daa
enter
orl
daa
mov
loopne
sub
push
in
cmp
jne
push
insb
rcrb
adc
sub
test
jnp
cli
inc
movsb
adc
mov
dec
in
cmpb
and
or
jns
mov
out
sahf
mov
sbb
push
sbb
jno
or
ja
shlb
mov
or
andb
dec
clc
out
add
cmp
dec
mov
sbb
adc
repz
sbb
mov
aam
push
push
cwtl
popa
call
push
lock
test
jb
jb
lods
mov
mov
mov
je
jb
rcl
lds
push
xchg
cmpsb
in
rcrl
movsb
mov
dec
adc
cmp
notl
nop
jmp
sub
fstps
shlb
insb
push
out
push
mov
pop
cmc
xchg
popa
pop
dec
scas
fmul
cwtl
mov
add
shrl
mov
mov
movsb
mov
or
das
mov
or
dec
mov
sub
dec
aam
pop
mov
test
das
unpcklps
mov
jp
inc
adc
in
xor
fadds
mov
push
or
xchg
rorl
iret
in
mov
fiadds
xchg
call
add
add
or
mov
pop
inc
mov
jge,pn
pop
xchg
cmp
add
jo
mov
fimull
ret
xor
adc
mov
mov
add
sbb
and
pop
xor
stc
xchg
out
xor
xchg
pop
outsb
rcrl
outsl
je
and
imul
sbb
shr
les
xchg
adc
push
in
and
or
inc
inc
cwtl
xchg
adc
pop
adc
xchg
pop
lods
stos
pop
ss
xor
xchg
std
nop
cmpsb
nop
or
adcl
call
push
xchg
aam
loope
xor
xchg
and
pop
pop
dec
mov
jp
xchg
xchg
in
dec
hlt
add
xchg
xchg
sub
stos
adc
arpl
push
shr
xchg
inc
imul
stos
inc
adc
mov
mov
mov
in
sbb
pop
jns
shrb
hlt
xchg
cmp
jne
fisubl
fs
add
sbb
cwtl
and
shll
lea
xchg
enter
or
enter
or
and
or
sbb
daa
in
aaa
push
jb
or
push
or
cltd
pop
mov
inc
shrl
mov
arpl
or
in
test
jns
insb
mov
inc
andl
test
inc
xlat
out
imul
movsl
sbb
sbb
mov
sub
in
lcall
sbb
cmpsl
inc
fmull
enter
jl
dec
fwait
and
popf
in
add
imul
mov
adc
push
nop
fdivrs
mov
add
push
cwtl
movsb
adc
xor
jo
or
pushf
std
xchg
sub
sarb
mov
cltd
push
jo
aam
mov
adc
fcompl
lret
add
movsl
dec
negb
mov
cltd
or
push
mov
jne
adc
bound
adcb
mov
shlb
test
sahf
bound
sahf
inc
cmp
addr16
in
jp
mov
ret
test
push
dec
sbb
cmpl
ror
add
and
in
sarb
mov
cwtl
fwait
mov
in
pushf
iret
nop
dec
mov
movsb
pop
shr
push
sub
add
rorb
test
adc
clc
or
adc
inc
xor
outsb
xchg
xor
mov
ret
cmpsl
std
shlb
fst
push
mov
adcb
xchg
movsb
xchg
nop
sub
dec
push
pop
mov
fmull
mov
lods
repnz
xor
enter
or
xor
rorl
faddl
in
in
push
popf
pusha
add
in
sbb
sti
in
lock
cltd
scas
mov
inc
mov
mov
jbe
mov
cmp
add
xor
mov
adc
add
es
xchg
sti
adc
dec
and
mov
gs
pop
lock
xor
scas
je
inc
popa
xchg
les
jb
push
aaa
lods
les
rorb
push
popa
mov
aas
lsl
adc
pop
push
rorb
mov
lods
push
jmp
sub
movsl
sub
inc
rcr
sti
pop
inc
mov
xchg
pusha
adc
xchg
dec
lcall
cmpsb
mov
mov
and
lret
inc
dec
sbb
sbb
movsb
sub
enter
add
std
mov
adc
mov
adc
cmp
pop
mov
inc
push
mov
xor
int3
fcmovnbe
cltd
in
jmp
push
pop
movsb
fsubl
test
sbb
jne
dec
ffreep
push
adc
fdivs
aas
push
or
dec
or
lahf
andl
adc
lock
push
out
test
rcl
jo
push
push
cwtl
adc
mov
je
xchg
stos
lea
xchg
mov
xchg
loopne
xor
mov
fbld
sub
and
jno
mov
inc
loope
pop
stos
jne
xchg
or
sbb
and
pop
ret
xlat
test
adc
test
mov
shll
loope
lds
movsb
shrl
jecxz
loope
add
repnz
into
dec
aaa
mov
mov
in
dec
mov
dec
pop
push
sub
mov
fmull
mov
and
inc
adc
sub
add
or
xchg
push
inc
jbe
pop
push
or
test
adcb
sbb
xchg
test
or
rorb
pop
push
add
push
xchg
inc
inc
mov
push
add
xorl
ret
adc
std
and
cmp
js
add
enter
xchg
leave
and
es
cwtl
mov
xor
std
loope
push
outsl
mov
adc
je
popf
dec
inc
mov
in
cmpsl
mov
cwtl
mov
and
fcoml
rcll
in
sbb
mov
push
and
mov
inc
add
and
mov
stos
les
xchg
dec
mov
int
test
mov
push
aas
mov
mov
mov
push
pop
shlb
sub
movl
mov
shrl
push
lret
ret
or
lahf
loopne
dec
fisubs
mov
inc
mov
enter
xchg
or
ss
xor
add
push
dec
shlb
mov
bound
pop
fmuls
push
mov
adc
leave
mov
or
stos
adc
dec
mov
ja
andl
repz
fs
sbb
xchg
pushf
or
inc
in
pusha
out
mov
pop
loopne
int3
inc
out
cwtl
or
lods
push
mov
push
dec
outsl
mov
fcomps
pandn
mov
or
js
xor
adc
mov
mov
rclb
dec
enter
bound
add
arpl
cmp
loopne
or
vmptrld
fsubrl
mov
test
int
mov
lods
insl
repnz
rdpmc
les
mov
js
jne
mov
sub
xchg
dec
adc
pushf
mov
test
in
outsl
inc
fs
out
mov
or
or
mov
mov
mov
ja
mov
pop
leave
in
add
mov
jb
popa
rcr
insb
sbbb
sbb
aad
outsb
pop
or
ffree
adc
fwait
inc
xor
stos
jmp
pop
jb
rol
and
mov
repnz
enter
or
movsb
adc
dec
jge
and
loop
pop
icebp
inc
sahf
dec
dec
or
in
push
mov
or
add
cmp
mov
xor
imul
imull
mov
adc
add
int
nopl
filds
enter
jae
mov
sbb
gs
test
xor
push
xchg
xchg
pushf
movsb
cmp
add
adc
or
and
gs
cs
cmp
rcl
lods
popf
loopne
and
or
cmp
cmp
xor
xchg
xchg
xchg
fs
sub
sbb
nop
xchg
and
mov
cmp
inc
subb
xor
fnstsw
lds
movsb
sbbl
mov
js
rol
mov
mov
fistpll
push
and
sbb
adc
mov
push
stos
ja
add
and
sub
call
and
pop
push
pop
adcl
lea
test
add
scas
pop
je
or
xchg
xor
jae
pushf
lods
fwait
je
dec
mov
cwtl
fidivrl
push
addb
ss
in
mov
nop
and
cltd
cwtl
pusha
mov
dec
test
mov
lods
and
dec
mull
pop
enter
in
enter
inc
shrb
shrl
xor
lret
nop
movsl
sbb
fwait
xor
and
int3
dec
les
or
mov
xor
cmp
mov
xchg
mov
push
or
lds
inc
inc
movsb
dec
pextrw
inc
shll
in
and
lds
pop
pop
adc
daa
pop
sub
rcrb
push
sbb
mov
roll
mov
roll
xor
addb
mov
mov
sub
call
stos
sbb
insl
std
nop
inc
mov
std
fs
push
cltd
add
or
nop
or
notl
out
fcoms
adc
enter
inc
mov
ret
in
jge
in
and
aam
xchg
jo
mov
pop
in
cmp
std
inc
xor
inc
add
or
xor
divl
aam
adc
xchg
lret
shlb
cmp
xchg
or
xchg
inc
orl
cmp
xlat
push
or
jo
std
mov
xchg
bound
data16
add
and
add
sar
in
or
lods
and
xchg
inc
popf
repz
dec
das
or
insb
add
ror
mov
inc
test
test
xchg
cmc
inc
leave
aam
jb
mov
les
sub
sub
sub
push
lret
arpl
lret
add
push
test
pushf
inc
repnz
mov
test
bound
or
adc
jmp
mov
xor
lds
fcom
mov
test
jne
addr16
adcb
int
roll
andb
adc
stos
inc
fwait
or
imul
or
loopne
nop
dec
insl
mov
jmp
daa
je
pusha
subl
ss
push
mov
rcl
push
gs
bound
test
in
rorb
arpl
fadds
movsb
inc
cmpsb
sbb
scas
in
in
dec
jb
dec
adc
or
ss
and
or
enter
es
sbb
aam
mov
cld
fistl
push
insl
push
cltd
jbe
jp
addr16
scas
add
and
es
fsub
adc
call
dec
xor
adc
xor
insb
aad
or
cmpsl
or
hlt
in
xor
mov
loope
cltd
mov
push
cmp
xor
push
push
call
sbbl
xlat
mov
aad
mov
adc
lret
xor
lods
bound
add
push
cltd
fisubl
adc
dec
es
fs
dec
es
jo
mov
add
insl
je
nop
push
sbbb
push
xor
dec
roll
shlb
inc
je
loopne
mov
inc
jne
and
shr
cld
stc
aas
adc
aad
pop
jo
mov
movsb
lea
add
pop
in
pop
lds
orb
lds
pusha
pop
in
insb
adc
mov
pop
pop
mov
push
mov
das
test
aas
or
xor
pusha
mov
lret
mov
xchg
in
adc
and
fcmovnu
add
test
bound
xchg
sub
xlat
sub
add
divl
xchg
adc
fadd
dec
stos
cs
popf
push
stos
mov
ret
je
test
rclb
dec
sahf
int3
jmp
xor
clc
mov
xor
mov
lods
cltd
rclb
rorb
shll
test
add
adc
push
stos
scas
test
push
mov
push
mov
in
roll
push
stos
pop
adc
pop
fidivrl
push
sbb
lods
lea
inc
test
xor
push
or
and
xchg
cmpsl
mov
in
roll
lahf
fcompl
xchg
pop
imul
lock
lcall
test
push
cmp
pop
and
nop
lock
in
adc
jae
shlb
or
sub
lds
sub
inc
xor
cmpb
mov
push
jo
ja
imul
loopne
stos
call
sbb
enter
fstl
pop
or
inc
push
inc
xor
insb
dec
push
aaa
fwait
enter
jne
sahf
dec
jne
xor
and
mov
and
xchg
mov
cwtl
mov
ret
movsb
xchg
cwtl
stc
push
fistl
das
inc
xchg
xor
or
test
movsl
sbb
fmull
xor
scas
sub
fwait
fs
imul
mov
pop
cmpsb
pusha
stos
ss
and
inc
dec
pop
pusha
shrb
scas
ss
push
jbe
cltd
mov
add
inc
and
insl
pusha
sbb
pop
sbb
roll
in
addb
add
stc
or
faddl
pop
and
fsub
push
inc
sub
or
cmp
or
dec
mov
popa
pop
outsb
ss
sbb
sarb
adcl
in
add
push
cmp
add
outsl
add
pop
test
inc
outsb
out
mov
aam
imul
push
add
jl
pop
push
out
imull
and
add
out
idivl
mov
pusha
or
ds
push
loop
mov
aaa
push
dec
mov
ljmp
test
push
rcrb
and
in
cmp
ret
jmp
jb
adc
sub
test
and
pop
outsb
dec
ss
pop
into
push
sarb
and
adc
sub
aam
jmp
jns
into
adc
and
fs
das
push
insb
dec
ja
or
loopne
add
rep
out
adc
bound
mov
push
push
push
loopne
adc
in
sahf
cmpsl
fld
fmul
ljmp
or
push
pop
fcmovnbe
imul
xchg
mov
lods
aam
push
xchg
aaa
sbb
out
inc
xor
push
pop
jbe
in
incl
jo
or
cmp
dec
mov
fistpl
or
jnp
mov
repnz
mov
or
and
shlb
xchg
sub
rcll
mov
mov
jns
mov
pop
pop
and
jle
test
inc
jns
out
cmp
sub
sbb
pop
or
dec
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
add
adcb
cmp
bound
gs
imul
jo
jb
je
jbe
decl
jp
xor
xor
sub
daa
adc
mov
rcll
xchg
mov
lcall
or
outsl
cmp
adc
push
lahf
out
or
scas
lds
fdivp
xor
loopne
push
push
pop
imulb
gs
outsl
arpl
fs
out
sbb
push
dec
imul
int3
aaa
jne
push
decl
outsb
gs
xor
cs
adc
popa
and
popa
je
lds
push
mov
shrl
lock
scas
divb
adc
add
pop
insl
repz
sahf
fdivs
test
fldt
outsl
jb
js
je
jb
gs
cmp
or
outsl
add
cmpb
add
gs
push
or
popa
mov
popa
jb
mov
imul
add
arpl
jns
inc
stos
cmp
cmp
dec
mov
adc
add
das
das
adc
cmpsl
cmc
dec
push
inc
inc
gs
insl
and
dec
outsl
jbe
dec
arpl
push
ficomps
sub
addr16
dec
jne
xchg
xchg
push
mov
inc
jo
imul
rcll
inc
insb
into
cmp
out
adc
xchg
cmp
fdivl
outsb
jns
jg
addr16
ja
inc
push
jne
xor
pop
xor
and
daa
push
scas
clc
sbb
jne
dec
js
push
jne
out
jae
xchg
pop
dec
inc
ds
inc
imul
das
jo
or
in
xchg
fcomip
mov
push
adc
ud0
add
sbb
xchg
adc
les
mov
or
and
jg
sub
sub
cmp
stos
ret
pop
pop
adc
mov
jg
cmp
jge
jg
cmp
inc
bound
jo
test
cs
and
push
mov
dec
movl
fcoms
insb
jae
cs
dec
mov
mov
inc
int
add
jo
in
pop
fwait
in
insl
and
jb
jbe
dec
push
push
sbb
or
dec
dec
inc
sbb
and
or
xor
xor
sbb
cltd
push
scas
push
jo
imul
insl
pop
mov
je,pn
jo
xchg
pop
fdiv
lret
je
sub
and
add
cmp
ds
scas
mov
je
or
xorb
inc
popa
cltd
insl
xlat
sahf
and
daa
mov
jne
pop
fidivs
insl
and
insl
push
xchg
inc
cs
xor
lock
or
dec
rolb
jnp
lcall
mov
add
xchg
and
movsl
mov
mov
sbb
jp
imul
or
fs
add
mov
je
cs
or
fldenv
dec
in
ds
xchg
xor
popf
jb
loopne
sbb
and
mov
adc
cmpb
sub
arpl
cmp
arpl
dec
popa
sub
mov
popf
mov
inc
xchg
insb
imul
out
xor
sbb
or
push
lcall
mov
sbb
pop
xor
loopne
dec
jno
jns
push
fistps
nop
andb
pop
mov
cmp
xor
lret
aas
xor
jne
sbb
jae
pop
add
add
inc
xor
ja
outsl
jl
dec
pop
outsl
ss
fs
jb
xor
imul
inc
inc
xchg
push
inc
cmp
mov
data16
jmp
das
mov
mov
adc
cmp
inc
jle
lcall
out
push
cmp
jo
bound
pop
enter
inc
aaa
insl
jmp
add
in
ljmp
sbb
imul
pop
or
cmp
inc
jno
rclb
mov
pusha
mov
nop
inc
insl
imul
cmp
pop
add
push
xorl
cmp
xor
and
mov
lret
cmp
addr16
jae
xor
push
pusha
jo
rorb
test
dec
cmp
mov
pop
pop
data16
lret
inc
sub
pop
dec
mov
or
jo
and
jbe
insl
mov
inc
imul
test
and
dec
cmp
fwait
int3
outsb
inc
jg
lcall
loopne
jbe
jae
add
stc
mull
rol
das
lret
jno
icebp
pusha
inc
mov
decl
pop
outsb
movsl
add
xorl
jae
jae
push
loop
imul
sbbb
gs
popa
mov
add
xor
jg
mov
outsb
popa
js
jae
je
pop
push
pop
add
add
xchg
cmp
sub
xchg
adc
add
add
adc
add
add
add
clc
jg
rolb
add
and
push
pop
pop
or
aaa
clflush
push
push
pop
hlt
and
or
pusha
add
int3
sti
lcall
sub
add
out
fucomip
add
addb
add
xchg
mov
mov
test
add
orb
daa
push
cmpb
push
and
sub
fistpl
int3
push
jo
add
mov
mov
mov
xlat
push
sbb
js
jo
dec
sahf
pop
sbb
sahf
dec
lea
mov
mov
xchg
xchg
pop
lock
dec
xchg
mov
es
loope
and
push
adc
xchg
push
inc
or
ds
cmp
mov
test
dec
adc
test
dec
cmp
pop
adc
loope
je
sub
nop
out
push
push
mov
lods
mov
ficomps
xlat
push
push
pop
jo
and
and
jb
sub
and
add
test
and
add
add
or
xorb
inc
xchg
sbb
push
imul
cltd
jbe
add
ja
adcb
incl
pop
cmp
adc
aaa
add
pop
rcll
fimull
sub
add
lcall
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
push
test
std
cli
sti
cld
std
inc
add
mov
push
add
dec
mov
xor
sbb
push
pop
outsl
ja
iret
or
inc
cs
jae
jb
bound
inc
lea
dec
dec
stos
inc
pop
and
clc
ss
popa
mov
repnz
mov
mov
lea
dec
mov
outsl
fisubrl
push
inc
push
mov
into
movsb
inc
sahf
insb
gs
mov
dec
push
ljmp
aaa
insb
in
in
in
out
pop
jns
inc
mov
imul
ds
and
inc
jb
jns
mov
pop
enter
mov
mov
mov
frstor
arpl
push
cmp
outsb
pushw
push
rorb
mov
or
test
imul
pusha
inc
jbe
push
push
sbb
jns
and
arpl
xchg
es
fprem
popl
cmp
push
push
adc
mov
dec
lahf
mov
inc
mov
cwtl
xchg
pop
pop
push
push
jae
cmp
cmp
out
push
adc
movsl
jae
addr16
adc
fdivrl
adc
and
mov
notl
dec
testl
dec
cmp
mov
jnp
filds
dec
jge
pop
jno
aas
jg
mov
shl
imul
bound
fistpll
ret
push
inc
outsl
jae
inc
imul
and
push
shlb
jbe
bound
jg
sub
push
or
scas
mov
mov
pop
loope
aaa
daa
xchg
mov
popw
out
dec
jnp
cmp
cmp
add
ds
push
das
push
sub
divl
in
es
jle
sub
sub
addr16
out
imul
sub
seta
cmp
jmp
cmp
and
add
cmp
pop
cwtl
jb
cltd
push
scas
sbb
push
jb
imul
outsb
fnsave
xor
lret
sbb
sbb
and
arpl
pop
es
jo
sub
mov
jl
lahf
fs
sub
mov
hlt
push
call
cmp
les
in
repz
dec
add
sti
push
aam
negl
mov
pushf
inc
push
test
sarl
jl
je
jnp
iret
repz
adc
pop
pop
push
out
mov
outsb
data16
push
notl
pushw
in
iret
jnp
xor
push
dec
dec
push
inc
data16
out
int3
inc
les
iret
jnp
cmp
out
sub
cmp
repz
adc
cmp
imul
push
in
shl
iret
rep
mov
inc
cmp
cmp
test
pusha
repz
repz
xor
sub
out
sahf
out
std
in
loopne
mov
out
sahf
xchg
insb
inc
sbb
cld
aam
iret
repz
mov
sbb
pop
aam
sub
cmp
jns
mov
mov
data16
push
cbtw
cmpsl
pop
push
lock
cmpsb
bound
fs
sbb
jae
jb
xor
push
mov
sub
add
sarb
sub
cmp
inc
inc
dec
jae
insb
inc
gs
mov
mov
sbb
dec
std
or
xor
inc
dec
dec
dec
push
push
loop
and
inc
dec
add
mov
dec
inc
add
adc
sub
jg
lock
lods
nop
outsb
fdivr
incl
popa
into
mov
mov
xor
jnp
inc
loop
mov
ds
pop
push
iret
sahf
jg
pop
clc
lret
sbb
jb
xchg
jge
incb
adc
pop
dec
scas
jp
adc
cld
or
fcmovnu
scas
mov
mov
and
cmp
dec
imul
aas
repnz
iret
lret
add
inc
mov
mov
sub
notb
ss
sbb
pop
jns
lcall
fdivrp
inc
dec
int3
dec
dec
xor
dec
popf
pxor
xor
loopne
ljmp
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
jmp
insl
xor
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
cld
pop
push
cld
popa
push
or
scas
int
mov
pop
leave
loop
mov
sbb
dec
mov
lods
repnz
jmp
cld
xor
out
mov
pop
adc
insb
jg
inc
sub
lret
es
sbb
sbb
add
jle
and
push
dec
push
push
adc
inc
pop
mov
aam
and
addl
sbb
ficoms
insl
cmpsb
imul
sbb
push
cmp
dec
push
sub
mov
push
sbb
push
pop
sar
incl
sub
sub
add
xor
or
push
sbb
lock
jnp
push
sub
sbb
or
push
daa
sbb
add
inc
sub
in
fistpl
dec
sbb
dec
jno
jb
jbe
inc
pop
fcmovu
dec
ret
push
xor
in
fiadds
push
sub
sbb
pop
cmp
inc
inc
sbb
insl
out
in
cmp
daa
or
dec
or
push
xor
push
add
fucomi
fucomip
and
lods
xor
ret
push
cs
adc
ljmp
pop
and
cld
xor
fsubrs
push
adc
pop
sub
pop
xor
jg
fists
pop
cmp
push
out
xor
push
add
jbe
clc
xor
dec
xor
cli
inc
dec
dec
dec
push
pop
cmp
add
cmp
xchg
incl
and
add
push
inc
inc
add
push
add
dec
push
inc
push
daa
dec
jl
fisttps
mov
pop
aad
push
push
inc
sub
xchg
cs
xor
push
es
test
or
and
je
lea
push
es
and
sub
pop
push
or
mov
push
push
test
out
testb
ds
sbb
sbb
sbb
repnz
jge
dec
sbb
das
sbb
xor
dec
sub
push
add
and
je
push
dec
sub
or
pop
sub
outsl
sub
dec
pop
popa
jle
xor
sub
push
test
pushf
sbb
add
addl
xor
inc
xchg
ret
into
push
push
push
mov
jb
pop
ja
lcall
pop
push
sti
out
js
gs
out
xor
aas
dec
sbb
inc
bnd
cmp
mov
adc
inc
add
xor
loopne
mov
add
and
push
pop
xorl
and
cmp
jecxz
mov
add
sub
movsl
add
jnp
ljmp
inc
pop
adc
dec
nop
dec
cwtl
in
push
cmp
repz
xor
push
jne
jg
out
sahf
out
lea
push
lahf
daa
fsubp
jns
mov
loope
stc
cmp
sti
jg
push
fsubr
cli
or
imul
daa
lock
sbb
and
add
push
hlt
daa
adc
push
pop
cwtl
or
hlt
inc
daa
pop
cmp
popa
push
xor
lahf
inc
popa
outsb
and
mov
or
pop
gs
enter
out
es
bound
xor
and
in
or
sarl
movaps
inc
dec
ja
sahf
imul
idivl
aas
aas
out
jns
out
push
jno
lods
ficomps
inc
notb
loopne
ss
mulb
adc
cmp
or
sub
pop
push
pusha
inc
inc
adc
jmp
add
cmp
push
sbb
xor
daa
adc
js
inc
out
jo
jbe
mov
xor
or
xor
adc
pop
adc
sub
pop
jmp
jecxz
cmp
sub
pop
cmp
jns
push
cmp
sub
push
scas
push
jmp
sub
add
and
nopl
lods
push
pushf
jbe
push
inc
inc
and
sub
fildll
sub
pusha
sub
dec
push
sbb
addb
daa
jp
cmp
push
pop
dec
pop
cmp
out
sbb
xor
and
imul
push
add
dec
ja
aam
mull
ret
mov
xor
out
pop
push
add
pop
pop
push
ss
sbb
mov
scas
sbb
sbb
fs
subb
cmp
outsb
scas
xor
inc
pop
jo
sub
mov
push
xor
test
push
adc
in
xchg
push
pop
pusha
sub
push
fwait
sub
and
out
jnp
aam
sub
push
cmp
cmp
ds
pop
insb
jae
sub
push
xor
jbe
inc
pop
test
cltd
jne
ret
popf
jbe
push
xor
add
dec
mov
push
or
xlat
jle
in
orl
sub
push
lods
pop
cmp
fwait
pop
sbb
add
xchg
imul
sbb
xchg
testl
aaa
mov
fistps
aaa
or
daa
xchg
push
sub
sub
dec
push
xor
xor
daa
imull
pushf
push
ret
stos
clc
cmp
insl
aaa
sub
shlb
sbb
es
repz
xor
inc
sbb
subb
and
scas
inc
pop
push
aaa
daa
push
pop
xor
inc
addl
mov
sub
into
sub
sbb
inc
test
dec
pop
es
outsb
mov
push
mov
shlb
mov
and
mov
inc
jbe
scas
test
xor
xor
loop
add
sbb
or
dec
nop
lcall
bound
mov
pop
add
xchg
ret
in
dec
pop
cmpl
out
je
jo
xchg
inc
ss
inc
push
out
jmp
push
gs
push
scas
scas
add
sahf
cmp
divl
int
cs
cmpsb
add
xlat
mov
pop
aas
adc
ds
inc
cmp
push
push
xchg
jbe
idiv
bound
rorb
stos
sub
sub
mov
sub
inc
cmpsb
mov
push
inc
or
insl
imul
add
ss
test
dec
dec
sub
repz
sub
add
ss
xchg
xor
adc
mov
xchg
imul
cmp
pop
aas
mov
xor
inc
nopl
sub
dec
push
xor
fstp
push
mov
add
adc
sub
lcall
shlb
lock
pushf
imul
sub
out
add
push
orb
js
sub
into
lds
add
mov
jae
insl
popa
imul
push
push
fiadds
outsl
jo
sahf
data16
and
iret
push
ja
pop
xchg
out
pop
in
adc
push
pop
push
inc
lahf
out
sahf
push
add
dec
add
shll
das
call
cmp
icebp
jns
mov
and
add
out
ja
xchg
xor
add
ja
testl
mov
dec
or
push
cmc
mov
aas
or
or
and
popa
mov
loopne
imul
and
shrb
push
pop
add
pop
std
popf
test
rcll
add
pop
push
and
in
push
adc
fsubr
lds
fs
xor
ds
mov
dec
sub
mov
mov
ds
rcrb
hlt
mov
pop
inc
xchg
push
insb
daa
cli
pop
mov
in
sar
loope
pop
xor
jbe
xor
push
popa
ret
push
push
fisubs
xor
daa
add
pop
fnstsw
sbb
lcall
add
sub
aaa
add
inc
and
stos
add
or
pop
dec
mov
sub
aaa
push
pop
mov
cli
push
daa
pop
pop
xchg
jmp
pop
sub
inc
xor
mov
jp
add
push
dec
jae
cmp
fwait
into
gs
jo
jecxz
test
sub
out
ret
push
sbb
cmp
xor
mov
roll
add
or
mov
xor
mov
repz
pop
test
or
or
fwait
add
adc
sbb
and
sub
xor
fldcw
inc
mov
mov
mov
mov
add
sbb
sub
das
or
insb
adc
pop
add
sub
adc
push
push
dec
fwait
int
mov
add
add
inc
sar
imul
das
incl
and
push
push
das
xor
xor
shr
push
les
cmp
and
adc
pop
sbb
sub
das
cld
shr
loopne
nop
sub
adc
and
dec
jns
aaa
icebp
mov
xor
jae
push
ret
and
mov
es
jb,pt
ret
aad
insb
call
imul
negl
pop
jae
xchg
inc
jge
out
lods
pop
es
push
push
lods
int
scas
xchg
xchg
mov
sbb
pop
out
lods
lock
lahf
xor
es
inc
push
fcos
push
xor
sbb
adc
rol
mov
cmp
adc
sub
jae
fwait
mov
pop
sub
push
and
sub
cmp
jg
adc
data16
subb
add
cmp
sub
cmpl
xor
xor
sbb
es
mov
mov
xchg
pop
loopne
xor
adc
fstps
loop
mov
push
lret
or
dec
or
xchg
push
fiaddl
cmp
cwtl
or
push
inc
cmp
insb
and
push
dec
push
push
sbb
dec
push
or
stos
push
cwtl
jecxz
fistl
ljmp
ret
sbb
mov
lret
push
jo
test
cli
sbb
pop
cmp
aas
xor
cmp
mov
push
stos
or
xchg
inc
or
sbb
daa
push
in
add
push
inc
lock
cld
push
pop
aas
shrl
pop
adc
aaa
test
into
cmp
xchg
cmp
pop
pop
pop
sub
pusha
lds
adc
add
dec
test
push
les
or
push
into
push
pop
xor
das
xchg
cmp
pop
push
pop
fildll
xor
and
push
mov
pop
ljmp
sbbb
aaa
fidivrs
xchg
ss
push
popf
add
repz
stos
loope
mov
pushf
jge
in
mov
loopne
out
dec
daa
sbb
mov
lods
shl
xor
pop
push
jo
fcoms
pushf
push
xor
stos
dec
inc
les
or
aaa
add
fcomps
sub
and
insl
jo
and
mov
inc
rorb
push
add
xor
cmp
sbb
pop
in
sub
daa
dec
mov
adc
popa
lods
ja
cmp
inc
push
pop
inc
dec
jne
loop
aad
inc
and
mov
jno
or
mov
dec
sarl
mov
jecxz
add
cmp
cmp
inc
das
aaa
int3
pop
and
cmp
call
ds
mov
cmpsl
test
out
out
test
sbb
cmp
sbb
dec
mov
xor
ds
fimull
repz
daa
mov
or
mov
and
sbb
sub
ds
inc
pop
sbb
cltd
adc
sub
pop
mov
dec
and
rclb
xorb
pop
push
add
or
aaa
adc
insl
into
mov
and
xchg
mov
xor
clc
cmp
push
push
mov
and
dec
jmp
ja
addb
out
push
adc
mov
add
add
data16
and
add
push
data16
fisubl
or
push
cmp
mov
push
sbb
xor
aaa
xchg
lock
mov
dec
pop
and
xor
and
add
pop
xor
push
lock
or
add
pop
int3
or
mov
cmp
sub
adc
cmc
add
push
xlat
adc
clc
or
or
push
arpl
sti
les
rcll
adc
sbb
enter
and
push
dec
adc
push
jg
jns
dec
adc
push
jae
addb
hlt
cmpsb
pop
es
or
mov
sbb
or
cmpl
and
shr
and
pop
stos
das
adc
add
inc
fcmovbe
and
add
adc
loopne
cmpsb
mov
in
sahf
int
ds
pop
or
inc
cmp
adc
adc
jg,pt
sub
cmp
sbb
sbb
cmp
xor
dec
cltd
cmp
sub
push
jnp
mov
adcb
and
out
inc
pop
sub
les
push
xchg
data16
nop
and
xchg
ficomps
push
push
hlt
lss
sub
ljmp
scas
add
pop
sbb
inc
adc
or
dec
cmp
pop
icebp
push
in
inc
cmp
and
sti
mov
aad
adc
pop
and
mov
adc
in
add
into
mov
adc
out
xor
fbstp
add
push
ret
insl
mov
aaa
sub
fnsave
mov
sbb
xchg
add
and
add
sbb
jp
sbb
mov
sub
pop
aad
xchg
xchg
movsl
daa
rcrl
aaa
adc
insl
sbb
push
int3
and
ss
sub
add
insl
xchg
insb
cmp
dec
arpl
addr16
mov
dec
sub
lcall
cmp
insl
mov
xchg
ret
push
pop
addl
pop
out
mov
adc
adc
sbb
inc
sbb
in
xor
fs
in
aas
dec
xor
inc
aas
dec
or
pop
dec
jge
jo
xor
push
inc
sti
pop
out
or
aas
and
sub
sbb
movsb
xorl
aam
ret
or
daa
dec
daa
xor
inc
jg
or
xor
cs
mov
push
movhps
daa
sbb
outsl
pop
add
pop
sbb
cmp
add
pop
add
orb
adc
jp
mov
or
dec
inc
sbb
adc
hlt
xchg
add
pop
or
add
xor
dec
xor
adc
sub
push
nop
fldt
lcall
sbb
add
aaa
ja
adc
inc
push
fisubrs
stc
dec
std
mov
add
je
ja
fs
and
sar
imul
add
rclb
das
add
and
mov
or
movsb
inc
cmp
mov
mov
lcall
sub
mov
int
mov
sbb
aas
pop
push
sbbl
lahf
cmpsl
mov
fsubr
dec
pop
popa
fnstcw
jns
xchg
cmpsb
jnp
add
popf
data16
arpl
popa
jge
fmuls
jl
inc
xchg
pop
loop
xchg
push
add
dec
push
dec
dec
pop
int3
lods
das
movsl
mov
pushl
mov
mov
aaa
sbb
ljmp
mov
mov
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
fsin
filds
cli
mov
sub
sub
int3
add
mov
sbb
mov
ds
pop
sbb
insb
incl
lods
sub
and
jle
jo
fsubs
fsubrs
xchg
pop
sbb
mov
lds
in
pop
dec
xchg
pop
shl
dec
push
adc
cld
or
and
xor
aaa
xor
push
lret
and
fwait
loope
inc
test
pop
mov
hlt
rclb
mov
add
jb
outsl
movsb
std
mov
push
dec
imul
repnz
mov
test
jb
leave
jae
sub
push
pushf
cmp
pop
mov
xor
leave
jae
xor
cmp
dec
sahf
cmp
add
hlt
and
js
sahf
in
aam
mov
je
inc
js
cmp
push
pop
add
loope
rorb
dec
pop
aam
cmp
lea
xchg
mov
dec
lds
cmp
stos
jg
pushl
sub
sub
sub
xor
inc
xor
mov
jo
lock
add
cmc
jnp
inc
jne
cmp
insb
push
outsb
add
adc
ja
das
js
cli
lcall
jb
xchg
and
adc
mov
test
jo
inc
bound
je
bound
jo
cld
gs
xor
dec
pop
mov
and
adc
pop
adc
and
test
addr16
and
das
aas
adc
sub
sub
add
js
pop
pop
sub
scas
out
sub
fs
inc
aaa
rclb
xchg
out
mov
aaa
rorb
iret
stos
push
andl
and
pop
aaa
add
jo
outsb
and
in
and
mov
movsb
jbe
sub
pushf
and
es
lcall
test
or
or
inc
sbb
xor
jns
stos
add
pop
push
push
ficoml
and
cmc
xor
bound
jae
nop
mov
test
push
in
das
cmc
rclb
inc
daa
dec
adc
shrl
mov
je
mov
dec
shlb
xlat
mov
pop
aaa
fstpt
stos
lods
es
xor
pop
hlt
ds
int
xchg
add
adc
int
or
mov
push
das
xchg
sahf
cmp
push
jle
test
push
xor
xchg
mov
repnz
lcall
lcall
push
jl
lret
fsubl
xlat
sbb
fcmovnb
mov
stc
mov
mov
sbb
imul
in
pop
cmpxchg
daa
imul
xor
pusha
pop
mov
scas
mov
es
lds
jnp
and
faddl
cmpsb
rorl
jno
divl
shlb
test
mov
inc
ss
lret
nop
push
sbb
cs
push
in
push
cmc
push
test
repz
test
pop
jl
pop
dec
rolb
xchg
mov
push
mov
dec
mov
data16
imull
add
xchg
aaa
das
push
xor
imul
xchg
mov
fs
mov
cwtl
pop
fstps
iret
repz
push
sbb
jne
lcall
mov
fsubp
jns
fsubrl
or
sti
data16
sbb
fbstp
fwait
xlat
test
xlat
dec
xor
jnp
shlb
cs
add
push
clc
mov
push
neg
negl
push
not
out
fsubs
sahf
dec
pop
push
push
or
dec
fwait
jnp
xor
dec
fwait
sysenter
inc
xchg
inc
jbe
ja
iret
in
jecxz
mulb
mov
mov
jns
jmp
mov
pop
sarl
push
lods
mov
int
aam
sahf
out
mov
enter
fnstcw
ret
cmpsl
negb
jns
cmpsl
sub
mov
lahf
loope
nop
and
cltd
sahf
out
cmp
icebp
and
out
jl
mov
out
out
testl
bound
jns
add
or
ljmp
inc
pop
and
jg
dec
sbb
scas
sub
mov
test
stc
add
adc
jg
push
push
mov
xor
adc
mov
lds
mov
sub
pop
stos
test
ljmp
stc
sar
mov
push
and
pop
sbb
enter
adc
iret
decl
xchg
inc
repnz
iret
pusha
or
cs
jb
pop
add
es
xor
push
repnz
outsl
pop
scas
or
inc
jbe
stos
outsb
push
sub
jae
popa
femms
sbb
idivl
inc
push
fidivrl
daa
inc
sbb
cmp
ja
aaa
push
pop
gs
and
insl
aas
jae
fisubl
cmp
jb
push
xor
dec
cmp
dec
fisubrl
mov
je
push
ljmp
cmpsb
dec
add
push
jb
jbe
inc
cmpsb
push
insb
pop
push
xlat
pop
push
out
dec
pop
je
jns
push
jno
ja
fisttps
jp
das
push
loope
in
ret
outsb
push
fstpl
fcoms
cmpsb
adc
push
pop
shlw
dec
or
push
dec
mov
ja
mov
push
mov
mov
mov
and
push
scas
add
outsl
push
push
ds
loopne
dec
jmp
insl
jo
daa
out
jbe
cs
insb
je
push
addr16
notl
out
jo
jae
es
outsl
and
sub
fstpt
adc
and
cmpsb
incl
mov
mov
xor
xor
ret
pop
add
fidivl
xor
push
fldcw
cmp
push
xor
cmp
fistl
add
or
or
sti
fstp
xor
and
inc
add
bound
xor
cmpb
xor
pop
shrb
pop
shrb
sub
ficomps
repz
inc
push
inc
stos
test
sub
mov
scas
push
aaa
or
aaa
and
fistl
les
aas
inc
aas
stos
test
mov
push
jne
mov
cmp
sbb
inc
sbb
inc
rorb
aas
leave
sbb
mov
add
inc
shlb
js
int
inc
repnz
mov
imul
fadds
jno
daa
sub
arpl
iret
inc
notb
and
mov
jnp
les
jbe
adc
pop
push
jle
xor
testb
jbe
push
cld
xchg
inc
sarb
cs
jne
sarb
push
mov
push
dec
cmp
pop
pop
pop
inc
fwait
das
sbb
les
mov
cli
fdivrs
sub
pop
xor
fadd
xchg
ret
push
pop
pop
daa
push
jnp
shr
daa
mov
testb
or
test
dec
push
cmpsb
pop
adc
aaa
sbb
push
mov
xor
sbb
sbb
das
pop
or
mov
aaa
and
jnp
test
addr16
arpl
rol
adc
jbe
lods
daa
push
daa
mov
mov
and
aaa
daa
lods
daa
xchg
pusha
push
fidivrs
das
or
and
mov
aaa
iret
int
xor
ret
adc
push
mov
push
mov
daa
lea
imul
popa
daa
pop
icebp
push
sub
xchg
es
pop
dec
xchg
icebp
mov
push
out
pop
push
sbb
sbb
add
and
rclb
xor
inc
and
icebp
or
jmp
mov
xorb
outsl
pop
cltd
daa
lahf
pop
lods
pusha
dec
sbb
adc
pop
stos
adc
sbbb
pop
jg
test
jno
or
or
lea
mov
and
adc
mov
shll
aaa
sub
xchg
lret
jl
out
xor
aaa
add
dec
pop
xor
pusha
inc
inc
and
je
inc
jmp
adc
or
sub
jg
subb
mov
imul
push
xor
pop
dec
js
gs
cmp
sub
ja
cmpsl
imul
adc
shlb
cmpl
rol
sbb
sbb
and
aaa
sub
mov
push
test
je
or
and
and
das
cmp
das
push
cmp
fidivs
xor
add
add
adc
loope
loopne
mov
mov
fcompl
cwtl
xor
push
pop
pop
adc
and
xor
sbb
fisubs
and
inc
pop
adc
mov
pop
sar
pop
and
loopne
test
divb
push
inc
fsubr
pop
das
pop
or
adc
mov
or
add
push
adc
adcl
mov
push
das
xor
popa
lcall
sub
and
test
mov
add
pop
pop
test
adc
loop
xor
insl
adc
push
bound
push
pop
scas
dec
nop
pushf
push
cmpsb
cmp
aaa
or
jno
push
call
inc
out
pop
fmuls
adc
jae
adc
shrl
aas
dec
lock
gs
or
lea
xor
sub
clc
mov
inc
sbb
test
push
not
stos
out
or
push
push
ljmp
xchg
fldcw
push
movsb
lods
pushf
push
ds
imul
or
int3
sbb
push
add
fs
xor
cwtl
cmp
repnz
sbb
sbb
sbb
ret
or
fsubl
adc
jb
int3
push
and
sbbb
jno
sbb
loop
push
mov
mov
xor
mov
ret
add
sbb
dec
rcrb
adcb
loopne
jl
push
or
mov
push
sbb
xor
sub
lret
sub
dec
fsubrs
xor
push
mov
rorb
cmp
sub
sbbb
gs
sbbb
out
mov
fidivrl
aam
cmp
inc
jl
int
adc
out
mov
es
das
jb
mov
jno
pop
call
ja
cmp
out
cmp
dec
inc
add
inc
aas
xlat
fimull
jo
filds
pop
inc
test
pop
xchg
pusha
enter
mov
stos
xchg
pop
and
xor
push
popa
mov
or
add
shrl
sub
pop
subl
imul
cs
dec
dec
cmp
out
sahf
inc
or
lock
pusha
sarb
lret
xchg
shrb
lods
push
mov
jb
jo
shlb
cld
pop
dec
pop
inc
jl
imul
push
mov
mul
xor
or
push
fcmovnu
xor
pop
adc
push
push
aas
pop
xor
cli
push
pop
aaa
cld
fwait
xorb
xor
inc
inc
dec
or
jo
or
decl
divps
pop
inc
pop
and
xor
and
or
add
and
xor
decl
cmp
sub
sbb
inc
dec
pop
sub
sbb
dec
sub
xor
js
and
adc
push
or
cmp
xor
pop
cmp
inc
cmp
cmc
out
mov
sub
cmp
push
xchg
mov
es
cmove
filds
inc
pop
add
cmp
and
dec
inc
add
or
and
pop
pop
xor
jmp
ljmp
or
push
inc
pop
push
adc
push
push
and
xchg
loope
mov
ret
pop
push
ret
jnp
stos
add
out
ret
sbbb
cmpsl
pop
add
sub
sub
xor
xor
rcrb
gs
mov
cmc
push
pop
cmp
cli
lahf
add
outsb
sub
mov
test
daa
xchg
dec
or
pop
ds
pop
or
jns
sub
xor
lock
dec
inc
hlt
stos
sbb
rolb
pop
mov
les
mov
inc
mov
or
push
pop
bound
push
lret
shlb
cwtl
add
xor
ret
addb
cmp
add
push
push
xor
fimuls
pushf
push
push
inc
push
dec
inc
dec
push
mov
add
xor
outsl
xor
fcomip
mov
xorb
shlb
ret
push
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
jmp
ljmp
test
stc
jbe
push
ds
insl
xor
jg
mov
decl
cmpsl
aad
arpl
push
sub
adc
or
cld
insl
sub
adc
call
jae
gs
leave
ret
sub
xchg
mov
data16
mov
inc
sbb
xchg
shll
cltd
test
push
push
shll
ja
daa
mov
mov
fcomip
xor
or
jo
fmuls
lret
rep
cs
jmp
js
js
test
add
mov
mov
movsb
mull
jno
addr16
push
ljmp
outsb
cmp
cmc
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
inc
and
inc
decl
cmp
je
ss
pop
ss
pop
or
aas
jae
dec
jl
out
clc
jmp
jbe,pt
pop
xor
imul
push
cmp
and
inc
push
push
push
call
arpl
push
inc
cmp
sub
das
push
imul
adc
xor
or
jb
jo
jnp
pop
fs
pop
pop
bound
dec
jl
xor
aas
inc
roll
sbb
sub
xlat
push
inc
jg
sbb
sbb
adc
mov
jnp
aas
cmp
xchg
jne
push
inc
addr16
pop
sub
addr16
daa
pop
daa
push
pop
clts
jmp
popf
je
and
push
push
mov
mov
sbb
cs
mov
push
xor
mov
xor
xor
dec
std
mov
inc
add
inc
xor
and
into
fldt
aaa
inc
push
inc
cs
mov
pop
cmovb
pop
ss
cmpsl
mov
mov
and
test
adc
jo
stos
clc
dec
cwtl
subl
dec
pop
call
sbbb
push
inc
sub
test
scas
int3
cmc
fxch
bound
or
inc
push
pop
scas
add
jp
cmpsl
xor
pop
dec
test
imul
arpl
xchg
rcrl
cltd
xchg
js
mov
inc
add
push
xchg
pop
xchg
fnstcw
adc
dec
xchg
clc
dec
add
and
pop
fsubl
and
mov
insb
lds
inc
les
or
xor
sbb
aad
jo
push
adc
or
daa
inc
push
aaa
jp
ja
cmpsl
xor
push
pop
mov
ss
cmp
adc
pusha
dec
pop
xor
inc
mov
popf
or
sbb
stos
into
sbb
adc
fmul
inc
addb
xchg
sub
dec
mov
xor
push
sbb
mov
pop
or
popa
sbb
test
cmp
sub
push
push
inc
cmpb
lret
sti
jnp
mov
sbb
jge
sbb
cmpb
and
mov
mov
pop
xchg
mov
fildl
cmp
xchg
call
pop
es
cmp
sub
inc
sbb
cmp
cmp
std
jmp
pop
adc
inc
push
aad
xor
icebp
sbb
adc
dec
outsl
hlt
movb
adc
adc
test
adc
or
adc
pop
stos
into
or
pop
fisttpll
and
stos
xchg
negl
in
in
outsb
outsb
je
xor
js
xor
addr16
mov
popa
insl
gs
cmp
ret
xchg
pop
lretw
decb
push
inc
aad
inc
xchg
or
pushl
pop
sbb
pop
dec
push
inc
out
mov
dec
sbb
insb
add
loop
dec
push
popa
je
push
popf
sbb
xor
insl
aaa
sysexit
dec
sti
ds
pop
push
adc
sub
frstor
cmpb
pop
pop
adc
lea
pop
push
pop
adc
dec
in
sub
andb
pop
cmp
mov
lret
movsb
pop
adc
push
fldl
push
arpl
mov
jbe
call
fs
mov
cmpb
dec
pop
insb
cmp
push
lcall
rcl
push
ds
imul
sbb
xchg
sahf
arpl
push
lds
sbb
mov
xor
sub
add
add
sub
js
or
sbb
outsb
sbb
fadds
into
dec
popa
dec
sub
cmpl
pop
push
add
inc
mov
pop
inc
jne
push
insl
mov
push
inc
xor
sub
mov
cs
testl
push
dec
roll
sarl
add
sub
testb
dec
pop
adc
add
ret
daa
fs
call
cmp
sbb
adc
ret
pop
ljmp
fs
jo
pop
or
test
xor
push
stos
push
outsl
imul
push
or
fbld
pop
xor
test
dec
mov
hlt
xor
push
aas
pushf
ds
scas
hlt
fisttps
adc
loopne
shrl
sub
sub
adc
pop
mov
pop
loop
aas
adc
push
dec
add
fs
push
sub
sub
or
and
flds
push
iret
push
inc
aas
jl
dec
data16
sbb
jmp
inc
ss
inc
outsl
sbb
ja
cmpsl
xchg
ror
add
xchg
jbe
or
xchg
xlat
dec
dec
add
sbb
out
xor
insb
inc
decl
xchg
imul
pop
scas
mov
dec
or
inc
lods
mov
sbb
xor
fwait
pop
cmp
mov
jle
pop
jae
mov
dec
pop
movsl
repz
outsl
popa
insl
outsl
pop
repz
cs
adc
push
aad
add
xchg
iret
gs
and
xor
add
lds
pop
inc
adc
xchg
dec
push
jge
addl
sub
and
pop
or
sub
sub
inc
dec
and
pop
inc
and
inc
cs
mov
sbb
pop
add
cmp
rclb
add
sub
push
jne
loopne
mov
or
filds
push
stos
lods
add
jb
mov
dec
and
addr16
popa
imul
and
outsl
dec
add
jae
cmovns
add
mov
inc
push
punpckhwd
mov
pop
push
dec
outsb
push
je
scas
pop
add
pop
hlt
cmp
jecxz
push
inc
dec
push
inc
pop
jb
dec
inc
push
pop
dec
sahf
adc
jb
rolb
adc
lock
lock
es
pop
daa
pop
daa
cmp
push
dec
jb
push
or
sbb
inc
aas
dec
xlat
mov
adc
or
adc
xchg
and
pop
cmp
or
xor
sahf
and
loopne
addb
cmp
flds
mov
mov
orl
push
jb
pop
mov
popf
push
adc
push
movsl
icebp
inc
add
mov
push
or
or
or
call
cmp
jg
out
sub
jmp
push
jl
cmp
enter
aad
add
xor
inc
push
or
or
cwtl
push
mov
and
xchg
scas
jnp
in
rorb
cmp
sbb
push
lea
add
push
mov
push
bound
aaa
in
or
or
jnp
adc
push
push
push
or
push
es
fwait
xor
and
stos
mov
mov
add
pop
push
mov
adc
sub
dec
stos
nop
pop
adc
insb
dec
sub
inc
andb
add
bound
mov
ja
fwait
lock
jo
mov
sarl
or
sarb
mov
lock
outsl
or
in
xchg
add
inc
add
mov
mov
dec
bound
mov
dec
push
jnp
xlat
or
push
sarb
inc
mov
das
mov
les
add
dec
inc
dec
fs
fisttpll
shll
cmc
inc
mov
inc
xchg
jns
fdivp
sbb
adc
cmpb
aas
mov
sub
outsl
maxps
dec
add
fadds
xchg
sbb
das
xchg
mov
pushf
test
les
push
xor
insl
das
push
fsubl
aas
add
out
mov
dec
movsb
in
mov
daa
add
sub
inc
das
sarl
outsl
ror
pop
mov
pusha
cmpsl
ja
lahf
add
push
daa
mov
out
mov
inc
out
mov
daa
outsl
mov
sub
cld
add
inc
aas
jl
mov
jg
dec
outsl
nop
sbb
int
dec
daa
inc
xchg
sub
mov
sub
sub
mulb
push
out
cmpsl
jge
push
mov
loopne
push
les
jl
gs
mov
aam
jl
out
mov
pop
iret
mov
cld
pop
xchg
mov
mov
sahf
pop
pop
ds
pop
ds
repz
add
pop
cmp
repz
cwtl
xchg
xor
clc
jl
push
jo
and
int3
push
add
icebp
mov
out
dec
push
add
xchg
inc
lahf
outsb
fsubs
mov
nop
mov
in
shrb
add
repnz
dec
xor
mov
add
cmp
mov
out
push
mov
sub
pop
jg
in
pop
ja
mov
pushf
ja
add
dec
xchg
dec
mov
dec
outsl
or
inc
loopne
mov
dec
shll
das
dec
push
push
pop
dec
outsl
leave
mov
or
filds
inc
inc
pop
adc
inc
test
sub
outsl
fbstp
xchg
pop
test
xor
in
das
in
jo
ss
add
dec
adc
xor
dec
inc
push
mov
sbb
add
or
out
inc
mov
add
jb
xor
pop
mov
in
dec
xor
or
dec
shl
push
push
sbb
pop
scas
add
outsl
inc
mov
popa
out
pushl
inc
jb
and
leave
jae
pop
pop
shrb
fildll
and
inc
outsw
sub
lock
pop
adc
scas
in
scas
mov
add
pop
je
dec
pop
jl
xchg
xchg
fs
mov
dec
mov
cmp
jg
sbb
ja
add
adc
ja
pop
test
pop
xchg
popa
imul
fildll
mov
sbb
and
stos
jo
sub
cwtl
sbb
mov
pop
push
dec
and
adc
scas
add
pusha
cmp
out
or
xor
shlb
cmpsl
add
nop
xlat
scas
sbb
and
aad
push
aaa
mov
mov
cld
sbb
idiv
jb
cmp
pusha
daa
add
sub
nop
ss
mov
dec
pop
cmpsb
lahf
mov
add
push
test
push
adc
outsl
xchg
hlt
push
fcoms
push
sti
pop
mov
push
mov
xchg
clc
pop
enter
sbb
lock
sub
ja
popa
testl
sbb
insb
inc
js
push
push
lods
sbb
stos
outsl
jg
and
daa
dec
imul
jle
popa
bound
or
fisubrl
push
push
push
mov
cmp
jns
xchg
jo
jp
bound
dec
xor
bound
add
jbe
bound
in
dec
enter
lock
scas
add
xlat
or
lock
xchg
cmp
fs
jo
cmp
arpl
jbe
cmp
arpl
testl
and
add
and
in
sbb
mov
fs
aaa
mov
adc
insb
pusha
pop
leave
add
xchg
outsl
mov
add
and
dec
jo
fsubs
das
nop
cs
cwtl
sbb
or
or
lahf
gs
in
sahf
pusha
add
in
pop
insb
ja
add
jg
addr16
add
pop
jb
int3
fsub
or
dec
mov
push
enter
idivb
push
push
sbb
outsl
xchg
mov
ss
adc
mov
mov
mov
ss
les
nop
orl
add
das
andb
dec
addr16
dec
scas
dec
cmpsl
add
xchg
popa
imul
xlat
add
andb
iret
out
aam
or
mov
add
loope
push
setbe
pop
pop
lahf
cmpsl
jge
adc
or
imul
jmp
andb
cmp
or
sub
adc
push
mov
das
or
pushf
nop
pop
pushf
push
rorb
and
inc
outsb
pop
or
dec
jp
pop
lcall
sub
dec
and
sub
sub
add
ficoms
pop
add
inc
cmp
mov
mov
out
and
add
cmp
addr16
add
or
mov
and
jb
push
sbb
daa
add
adc
out
test
inc
sahf
adc
push
sub
outsb
clc
pop
and
adc
xlat
and
test
xlat
mov
movsb
stc
lods
daa
xor
jo
lcall
insb
push
xchg
imul
insb
sbb
nop
push
inc
or
mov
das
add
imul
loope
fstp
in
ja
cld
outsl
lods
test
pop
add
and
cs
fidivs
cmp
xlat
data16
push
pandn
pop
das
jns
negb
cwtl
mov
aas
addr16
xor
pop
insb
or
sub
push
sarb
mov
fmul
or
sbb
push
xchg
jns
repnz
out
ds
mov
loope
jnp
subb
repz
mov
push
jl
sarl
inc
pop
jp
jge
cmpsl
stc
cmp
dec
jne
or
iret
sarl
repz
jg
xchg
mov
loope
sbb
push
insb
ja
out
xchg
mov
push
cmpsl
fnstcw
mov
sbbb
cmp
push
aaa
push
lcall
and
jns
mov
imul
int3
or
sahf
out
mov
out
ds
jnp
push
mov
iretw
repz
sbb
aaa
dec
repz
mov
or
ds
lea
inc
mov
test
iret
sarl
push
and
jns
mov
push
out
ds
xchg
out
sbb
sahf
xchg
fistpl
out
ds
xchg
sub
pusha
mov
add
out
fs
cltd
pop
lcall
or
lahf
cmpsl
stc
push
pushf
mov
setge
lods
bound
push
data16
pop
mov
mov
jns
xchg
ret
mov
xor
out
jmp
mov
out
cmpsl
sbbb
scas
push
mov
cmpsb
lcall
cmpsl
in
lcall
mov
lahf
out
pop
lahf
stos
addr16
iret
repz
sti
stos
subl
lods
repz
cmpsl
icebp
sbb
push
mov
sarl
xor
jo
imul
mov
negl
mov
mov
push
sbb
pusha
mov
dec
mov
mov
sahf
cmpsl
push
js
shll
mov
iret
mov
jns
rcrb
sub
lcall
xlat
and
pop
cmp
repz
add
jbe
cld
jge
cmpsl
stc
das
lds
fdivs
data16
push
cltd
mov
dec
repz
loop
js
shll
shrl
iret
out
shrb
xor
movb
push
aad
xchg
fdivs
cmpl
out
xor
mov
rorl
pusha
jno
repnz
add
xchg
in
fildl
mov
out
mov
daa
sbb
leave
xor
hlt
dec
push
jne
in
jp
xor
mov
sub
pop
sbb
inc
aas
pop
enter
rorb
inc
int3
shll
ds
jb
incl
and
loope
enter
int
andps
or
test
mov
fwait
xor
jg
pop
enter
shlb
loop
pop
enter
pop
xchg
dec
mov
add
jmp
pop
sub
outsl
xchg
out
jg
popf
dec
jbe
jg
sbbb
sbb
mov
pop
scas
fcomp
dec
repnz
mov
fucomip
aad
xchg
jmp
insb
dec
mov
aas
aaa
mov
mov
adc
rorl
sarb
loopne
and
out
jmp
jmp
rcr
or
out
cs
ss
out
aas
or
das
cltd
mov
test
aas
push
enter
jo
and
xchg
iret
push
std
jmp
lods
or
mov
xchg
jmp
or
push
popf
push
sarl
mov
aaa
out
mov
test
push
daa
sub
je
je
mov
mov
inc
and
sub
dec
xchg
scas
sbb
push
rdpmc
add
ds
add
ja
xchg
pushf
in
ja
or
or
jnp
pop
imul
out
xor
sbb
inc
and
lcall
sub
rorl
incl
cmp
inc
into
push
pop
lcall
pusha
inc
popa
aas
and
and
shlb
adc
xorl
cltd
fcomp
mov
pushf
sbb
jecxz
inc
je
ja
enter
in
pop
mov
jbe
dec
jb
and
or
cld
js
jns
cmp
push
scas
and
sbbl
jns
loope
xor
aas
inc
imul
inc
int
js
inc
inc
pop
iret
add
outsb
pusha
push
xchg
jns
incl
inc
addr16
inc
push
inc
adc
xchg
outsb
adc
sbb
push
add
in
pop
mov
adc
outsl
loopne
jp
cmpsl
mov
aam
daa
cmp
jnp
jnp
mov
roll
xchg
dec
mov
push
repnz
shll
jnp
add
es
jnp
push
inc
mov
push
jb
add
or
repnz
sbb
nop
pop
mov
out
enter
mov
inc
repnz
leave
inc
rolb
dec
jb
pop
xorb
adc
inc
sub
sbbl
xchg
jl
mov
iret
repz
add
add
xlat
push
loop
in
and
clc
out
mov
xchg
xor
sbbl
jle
jle
mov
cmp
jle
iret
insl
mov
mov
nop
mov
jge
xchg
cmp
scas
xchg
aam
ja
jb
in
push
add
stc
fcompl
jg
cmp
and
jle
and
cmp
jle
xchg
mov
js
xchg
xchg
xchg
orb
in
mov
mov
in
lret
pop
rorl
dec
pop
fdivl
push
jg
mov
ds
outsl
or
dec
jg
push
jg
dec
fisubrs
xchg
add
add
das
clc
sub
inc
jmp
andl
mov
mov
sub
inc
pop
xchg
mov
add
mov
adc
faddl
inc
and
xorb
outsb
fnstsw
push
daa
dec
ja
xchg
xor
pushf
xchg
adc
rolb
xchg
jo
nop
mov
xor
mov
mov
and
cmp
mov
inc
cmp
and
daa
dec
xchg
adc
orl
cmp
xchg
sbbl
in
jbe
adcl
pop
cmpl
fwait
out
cmp
daa
dec
push
xor
xor
aam
test
lret
subl
sbb
subl
orl
cmpb
sub
or
or
cmp
repz
or
bound
insl
vmread
cmp
repz
adc
iret
repz
repz
ret
pop
ficomps
in
loopne
ds
cwtl
cmp
push
sub
orl
xor
into
pop
pop
add
daa
pop
leave
in
adcl
sti
ja
xchg
pushf
dec
pop
xor
push
xchg
test
xchg
mov
addb
sahf
aad
xchg
xchg
inc
orb
dec
pop
jo
jne
xchg
jmp
enter
das
mov
pop
leave
jae
enter
jmp
ficoml
add
inc
int
pop
add
sbb
fstl
add
jl
addr16
mov
jns
cmp
mov
and
mov
push
pop
jns
adc
mov
aas
add
xor
push
mov
inc
fwait
dec
pop
jb
sub
mov
pop
jb
pop
pop
flds
mov
dec
es
xchg
jle
mov
adc
xchg
mov
test
cmp
xchg
mov
xor
mov
xchg
pop
shlb
leave
xor
xchg
in
push
xchg
jo
sub
xchg
iret
fwait
addr16
push
iret
leave
nop
mov
adc
daa
nop
and
mov
mov
mov
dec
mov
mov
jo
add
dec
mov
xchg
dec
outsb
mov
psrld
or
std
xchg
and
addb
out
adc
add
lea
lret
push
mov
lea
fildl
xchg
mov
pop
mov
mov
pop
rorl
mov
pop
pop
loope
jmp
mov
mov
mov
pop
bswap
leave
leave
dec
femms
or
leave
or
or
leave
leave
leave
leave
pop
push
add
leave
add
add
pop
and
xchg
in
jbe
addr16
xchg
mov
cmpsl
fmull
leave
inc
repnz
roll
jmp
ja
das
xchg
out
adcb
scas
into
inc
fwait
in
mov
add
addr16
pop
cmp
fistl
xlat
test
mov
popf
aas
movsl
shrd
rcll
push
mov
mov
lds
ds
iret
or
or
nop
jo
cmp
popf
mov
ja
mov
sub
xor
cmp
xlat
dec
dec
mov
dec
or
jns
jns
jae
pop
or
outsb
fnstsw
jae
dec
cmp
loop
imul
je
inc
xlat
adc
jg
leave
push
roll
ds
xchg
mul
dec
or
push
mov
es
adc
daa
test
cmp
je
cmpsb
mov
mov
mov
fildl
xchg
jmp
fisubrs
or
add
stc
sahf
xchg
out
sub
pop
cmp
or
pop
push
adc
lea
mov
cmp
daa
xchg
sahf
add
mov
mov
fcoms
fmull
out
maskmovq
imull
add
xchg
sbb
and
mov
mov
push
add
sahf
out
dec
add
jns
out
outsl
or
sahf
out
sahf
test
nop
or
jns
or
or
jo
push
mov
adc
and
cmp
inc
cmovl
push
push
pop
or
je
jl
aaa
outsl
pop
and
ja
pusha
testb
add
xchg
inc
cmpsb
add
xchg
mov
je
in
call
and
xchg
xchg
in
mov
ljmp
pushf
xchg
pop
pop
and
jl
lods
sbb
push
nop
add
dec
mov
push
ret
add
incb
xchg
pop
in
and
and
mov
pop
enter
xchg
scas
test
nop
lea
cmp
xchg
nop
mov
mov
insl
fistl
cmp
aas
add
xchg
leave
out
mov
xchg
jg
or
push
fists
sahf
fucomi
popa
xchg
out
imul
mov
test
mov
xchg
aam
pop
jo
fucomip
add
cwtl
cmp
sbb
vmread
addr16
pop
xchg
das
lret
lret
lret
lret
fs
outsl
xchg
jp
test
nop
xchg
fwait
xchg
cmpsb
xchg
mov
push
mov
mov
testl
xchg
xchg
fnclex
in
clc
add
das
push
xchg
sbb
pop
pop
pop
pop
cmp
pop
xchg
dec
and
or
and
xchg
xchg
xchg
lahf
xchg
xchg
xchg
xchg
stos
mov
lret
mov
loope
aaa
cltd
daa
cmp
pop
or
pop
mov
cmp
mov
mov
mov
xchg
xchg
mov
nop
mov
imul
xchg
xchg
pop
add
out
cltd
xchg
dec
add
mov
mov
mov
movb
stc
test
mov
ja
pushf
fwait
mov
mov
xor
ja
xlat
cld
fwait
jns
enter
ja
xchg
push
push
add
mov
dec
arpl
imul
cmpl
fwait
ud2
mov
xchg
int
cmp
cmp
add
xchg
sbb
ret
jmp
add
mov
iret
and
enter
xchg
push
xchg
pop
mov
mov
ja
sbb
jb
xchg
cmp
cmpsb
scas
in
pop
jb
fdivs
pushf
cmp
in
xacquire
std
add
and
adc
and
push
push
cwtl
call
cwtl
addr16
sahf
ja
mov
test
add
divps
rolb
cwtl
mov
jb
jmp
repz
cwtl
outsl
lret
lret
lret
lret
add
sbb
and
cmp
inc
cltd
dec
cltd
push
cltd
pop
pop
jb
jb
ud2
pop
or
or
jb
pop
push
add
jb
add
arpl
cmp
repz
sbb
jnp
cmp
repz
cmp
leave
xchg
mov
mov
stos
and
and
jecxz
jbe
movaps
lahf
dec
mov
daa
fists
leave
mov
sub
xchg
sub
psadbw
add
arpl
rcl
xchg
add
jns
mov
xchg
scas
xsha256
cmpsb
adc
out
sahf
cmpsl
push
sub
ror
leave
add
loope
mov
push
stc
lcall
andb
fwait
outsl
fwait
aaa
filds
dec
andl
fwait
outsl
fwait
push
leave
jae
outsb
iret
or
xchg
mov
lods
iret
mov
mov
mov
jb
mov
jne
daa
out
sti
invd
fstpl
inc
negl
daa
mov
add
fs
mov
ja
pop
xor
cmp
daa
jns
add
dec
pushf
adc
jae
cmp
push
outsb
pushf
jbe
cmpl
mov
pusha
addr16
out
or
add
push
jb
cltd
mov
out
into
fildl
pop
ja
loopne
xchg
fsts
add
in
inc
dec
sub
popf
and
cmp
popf
pop
popf
punpckhdq
outsb
mov
pusha
mov
invlpg
rorb
fimull
loop
iret
enter
psubd
sahf
or
fcmovne
repz
or
and
sahf
out
sahf
sub
or
cmp
inc
adc
xor
scas
adc
movsb
jmp
pushf
dec
jge
xchg
sahf
hlt
je
mov
das
scas
add
sahf
mov
adc
inc
inc
mov
lock
inc
insl
and
mov
out
cmpsb
scas
out
cmp
negb
incb
scas
lahf
pop
call
scas
push
lahf
cmp
pushl
lahf
push
pop
leave
and
add
cmpsl
jg
outsl
sbb
mov
add
mov
in
enter
push
out
aaa
pop
jmp
daa
in
xchg
cmpb
add
or
sbb
js
cmp
push
daa
mov
xchg
out
lock
mov
inc
inc
push
pushf
je
add
cs
mov
repz
pop
js
push
orb
xchg
mov
mov
stos
push
add
rol
lret
push
add
rorl
pop
fninit
pop
jmp
xchg
xor
mov
rcr
mov
sbb
int
sbb
inc
test
mov
xchg
outsl
mov
ja
iret
repz
jg
xchg
popl
cld
mov
popf
cmp
mov
sub
test
cmc
mov
sahf
mov
mov
and
test
rclb
clc
fbstp
and
inc
inc
push
mov
cmpsl
add
stos
ja
in
jns
mov
mov
sbb
stos
inc
pushf
stos
lcall
mov
sahf
rolb
aam
adc
cli
je
enter
sub
daa
dec
cmp
call
mov
sbb
add
repz
cmp
cmp
repz
or
jno
or
repz
xchg
xchg
mov
movd
mov
subb
out
mov
inc
pop
movsb
ljmp
movsb
xchg
and
das
dec
movsb
push
movsb
pop
movsb
sub
enter
movsb
jb
pop
and
inc
push
jp
inc
dec
out
cltd
jecxz
or
cmp
lods
popf
movsb
cmp
cmp
xlat
das
outsb
cmp
pop
push
pop
out
jbe
enter
movsb
jmp
cmpsl
prefetch
rorl
lods
cmp
inc
mov
movsl
push
movsl
pop
movsl
repnz
push
push
iret
lods
mov
fstpl
outsl
pop
xor
mov
nop
and
cs
push
movsl
aas
add
test
xchg
xchg
iret
or
mov
jg
movsl
fistpl
dec
mov
pop
jecxz
dec
stos
push
leave
fsubrs
mov
push
aas
bswap
inc
pop
jle
push
cmpsb
cmpsb
sub
dec
dec
outsb
pop
dec
mov
pop
popa
leave
inc
repnz
mov
lsl
mov
push
int3
fadds
loopne
call
sub
out
out
push
push
pop
add
cmpsl
xchg
push
jae
mov
xchg
jns
sub
xchg
cmpsl
stos
cmpsl
mov
adc
jns
cmpsl
lret
cmpsl
cmpsl
in
repnz
pop
or
leave
addr16
test
add
aas
in
pushf
cmp
inc
pop
movq
mov
push
pop
push
mov
cmp
daa
mov
fmull
cmpsl
xchg
lcall
inc
mov
mov
aad
fstpl
in
in
cmp
es
push
cmc
lar
mulb
xchg
iret
leave
std
or
mov
test
sub
test
test
xchg
mov
seta
out
fsubrl
xchg
in
mov
mov
mov
ja
mov
in
add
push
add
ficoml
stos
dec
fs
inc
inc
repnz
fsubl
add
orb
jae
xchg
mov
repnz
push
lret
pminub
jns
pop
ja
push
repz
jae
dec
add
or
mov
es
mov
fwait
cmp
xlat
es
addr16
add
iret
leave
lods
add
add
ds
es
repz
or
pop
adc
pop
xor
push
stos
pop
stos
repnz
cwtl
mov
cld
or
inc
inc
mov
inc
mov
sbb
cld
ja
mov
movsb
cltd
xchg
add
iret
or
lods
or
in
add
mov
inc
iret
xlat
rep
daa
out
out
push
add
mov
pop
lods
fisttps
lods
pop
inc
ret
mov
xor
adc
lods
mov
push
fsubrs
into
outsl
lods
movd
xchg
mov
mov
jns
mov
add
pop
ja
aad
loopne
push
jmp
push
leave
jae
call
mov
lods
dec
push
add
jns
xchg
out
inc
inc
push
data16
jns
out
outsb
or
xlat
push
lods
lahf
lret
lret
lret
lret
push
lods
pop
lods
jle
xchg
mov
xchg
adc
iret
adc
mov
mov
bswap
lods
pop
sbb
test
sahf
and
inc
fbstp
cmp
mov
mov
shl
scas
adc
push
mov
or
dec
xchg
aas
daa
inc
scas
sub
sbb
fdivrs
jb
jp
scas
jg
jp,pn
lcall
mov
out
dec
and
inc
pop
cmp
imul
mov
or
pushf
ja
mov
add
aas
push
daa
int
test
daa
daa
fucom
leave
testl
inc
mov
or
daa
xor
jb
scas
pop
push
scas
pop
pcmpgtb
leave
repz
jge
test
mov
popf
in
inc
cmp
scas
iret
or
fcmovne
add
pop
dec
repnz
jo
fsubrs
inc
sbb
inc
sysexit
mov
leave
dec
into
cmpsl
cmp
test
ja
ja
pop
push
call
mov
mov
in
rcr
loope
jmp
outsb
push
dec
icebp
mov
pop
leave
out
or
mov
sbb
jle
mov
inc
mov
dec
add
mov
push
dec
dec
add
push
fs
in
jns
xchg
add
in
in
scas
mov
xrstors
or
or
xlat
or
or
mov
out
mov
inc
repnz
pop
invd
mov
leave
insl
sbb
and
mov
xor
movsb
xchg
push
pop
cmp
out
add
setge
jbe
aas
xchg
push
push
sahf
cmpsb
cld
jo
out
or
or
mov
xchg
xchg
loope
icebp
stc
lsl
or
xchg
xchg
xchg
xchg
xor
data16
xchg
xchg
xchg
cwtl
mov
shrb
daa
push
mov
dec
push
popf
cmp
repz
sahf
out
mov
scas
sbb
cmp
mov
out
or
mov
js
and
fcoml
push
add
adc
enter
stc
lods
mov
mov
push
xchg
xchg
out
hlt
mov
cwtl
cmpsb
mov
mov
jae
cmp
mov
mov
or
xchg
mov
cmp
sti
add
or
xor
mov
mov
pushf
in
fs
mov
xchg
xchg
lahf
cmpsl
push
push
scas
repz
repz
mov
mov
iret
or
or
stc
adc
pop
out
dec
out
mov
jl
jp
mov
adc
rcrb
dec
cmp
mov
xchg
push
pop
sub
add
cmp
push
popa
mov
mov
ja
jg
xchg
mov
mov
mov
mov
mov
mov
mov
mov
fnsave
mov
mov
push
mov
mov
mov
cmp
repz
cmp
inc
and
cmp
repz
and
iret
repz
and
and
iret
repz
mov
xchg
or
es
repz
sub
out
scas
mov
dec
mov
iret
xor
out
or
stc
jmp
mov
dec
mov
sbb
mov
mov
lahf
mov
jns
pusha
add
add
mov
add
jo
xchg
pop
push
ret
xchg
mov
xchg
mov
xchg
cmp
push
add
iret
dec
cmpsb
pop
hlt
adc
leave
jae
mov
enter
pop
jns
fistps
cld
ja
enter
pushf
xchg
xchg
rcr
jmp
cmp
or
out
and
or
ud2
jb
jns
ss
dec
pop
push
cmp
iret
jae
adc
adc
iret
jae
test
jae
cmp
mov
sbb
iret
repz
sbb
sbb
jae
cmp
call
mov
mov
pop
sub
dec
hlt
sub
sbb
jb
mov
jne
pushf
pushf
faddl
setbe
pushf
loope
adc
dec
xor
pop
bound
out
punpckhdq
jb
xchg
fcmovne
repz
adc
xchg
xchg
xchg
mov
in
or
cmp
add
and
xchg
xchg
xchg
xchg
sub
push
outsb
cmp
xchg
jbe
and
and
lret
jns
cmpsl
cmp
push
add
cmp
cmp
push
es
mov
mov
add
popf
outsl
mov
pop
jo
xchg
pop
jns
sub
cs
jns
out
mov
mov
out
int3
or
or
call
push
or
femms
jbe
adc
dec
cld
mov
popf
cmp
or
adc
push
adc
repz
and
add
xor
mov
push
cmp
push
mov
inc
sbb
enter
leave
sbb
leave
fsub
jns
pop
into
add
in
jns
mov
ss
iret
in
xchg
popl
jle
shl
fstps
leave
mov
bnd
shlb
and
cmpsl
push
aam
shll
ss
xchg
and
adcl
sub
rcrl
pusha
push
xchg
je
xchg
jb
insl
cmp
roll
stos
daa
iret
jae
mov
push
ret
or
xchg
cmp
out
adc
out
divb
and
sbb
cmp
movaps
xchg
ret
leave
xor
push
pop
add
fs
xchg
xchg
lahf
cmpsl
sahf
pop
ja
pop
scas
mov
mov
jns
iret
or
enter
repnz
add
jmp
ret
adc
sbb
in
xchg
test
push
int3
mov
cmp
fisttpl
push
xchg
out
jbe
js
xchg
mov
add
out
mov
leave
repz
pop
jecxz
jmp
xchg
pushf
ljmp
int
into
cmpsb
cmp
cs
pop
lock
les
inc
iret
jae
cmp
dec
push
pop
pop
int3
mov
daa
out
les
leave
insl
and
jl
mov
mov
xchg
add
xor
pop
jb
in
hlt
jo
and
pop
lds
lds
pop
insl
mov
pop
in
in
dec
bound
push
cmpsl
popf
pop
and
push
clc
xchg
popf
xor
xchg
jecxz
iret
jae
add
or
leave
insl
stos
das
repz
add
pop
repz
loop
pop
pop
sbb
and
incl
daa
mov
dec
addr16
add
fnstsw
cltd
dec
jns
xchg
add
outsb
pop
mov
add
loop
in
sahf
out
outsl
lsl
pop
syscall
push
push
in
gs
ds
and
das
in
in
cmp
inc
push
pop
jle
frstpm(287
data16
jno
jl
aas
xchg
pop
pop
pop
pop
xchg
popf
test
mov
pop
pop
pop
pop
mov
ffreep
pop
pop
pop
pop
ljmp
enter
pop
push
enter
pop
bswap
leave
leave
dec
sbb
leave
leave
leave
sbb
pop
push
cmp
leave
leave
adc
ja
jb
inc
dec
pop
arpl
sahf
out
sahf
xor
jns
test
out
xor
jns
out
ss
mov
cmp
cmp
cmp
dec
sahf
out
cmp
cmp
std
jns
in
push
ds
adc
inc
push
push
in
pop
aaa
cmovb
sub
repz
in
aas
cmovp
inc
leave
repz
pusha
dec
imul
xchg
xchg
fildl
dec
aaa
jns
lods
dec
mov
daa
daa
daa
into
ftst
out
xchg
iret
push
outsl
leave
fistps
shrb
aas
sbb
lret
repnz
and
into
pop
lret
sbb
fs
jp
test
in
xchg
and
lret
cmp
lret
iret
lret
cmp
ror
iret
call
xchg
and
lret
adc
push
out
sahf
out
pop
pop
sub
xor
sbb
dec
sbb
sahf
out
sbb
sbb
sahf
out
pop
andb
iret
repz
cwtl
push
and
popf
pushf
cmp
iret
das
fidivrl
xchg
out
in
sub
sahf
fsts
int3
movups
jns
out
sbb
daa
xor
cmp
xchg
out
cmp
iret
in
jbe
pop
imul
iret
repz
cmp
mov
xchg
cmp
repz
cmp
mov
mov
bswap
xlat
leave
repz
das
in
push
inc
clc
jae,pt
call
int
dec
mov
dec
dec
popf
dec
inc
int
int
mov
push
maxps
ja
mov
iret
in
outsl
emms
push
mov
push
repnz
sbb
stos
fisttps
ja
mov
push
add
ret
out
add
add
and
iret
or
push
jb
ds
ljmp
inc
add
or
inc
jg
into
cmp
in
and
sub
xor
add
jmp
pop
clts
in
in
dec
push
pop
pusha
sbb
adc
push
dec
xchg
and
pop
pusha
gs
fwait
dec
pop
stos
xchg
out
pushf
mov
fiadds
ret
lret
into
lahf
fcom
out
mov
mov
inc
push
iret
push
iret
pop
movsb
and
iret
push
iret
mov
mov
ss
inc
iret
push
in
in
mov
bound
insl
js
addl
out
sahf
out
cltd
or
scas
mov
repnz
daa
out
adc
iret
xor
sysret
rclb
adc
cmp
push
sbb
repz
repz
push
sbb
mov
push
push
xchg
out
jne
orb
repnz
mov
js
jns
ret
int
das
jecxz
test
sub
mov
push
add
add
dec
push
push
add
pop
gs
pushf
pushf
dec
mov
iret
cwtl
mov
mov
out
push
push
out
icebp
mov
je
add
shrl
das
das
das
pop
rclb
rcrb
sbb
setle
sarb
sarb
mov
push
adc
jbe
push
pop
sbbb
and
xchg
movhps
aaa
jns
mov
jg
ja
mov
push
and
out
push
dec
jecxz
and
ret
add
lahf
femms
sub
jbe
repnz
sbb
outsl
and
and
leave
push
inc
add
sub
nop
xchg
int
fldt
in
addps
pop
arpl
outsb
pop
xchg
out
fidivrs
add
mov
shld
mov
mov
add
xor
inc
mov
rcrl
aam
aam
repz
enter
xor
cmp
or
push
pslld
jbe
pop
pop
popa
aam
insb
aam
out
repnz
adc
push
adc
adc
sbb
xchg
aam
aam
jbe
rol
mov
or
aad
push
movlhps
ss
and
aad
inc
pop
mov
aad
psllq
dec
add
popa
iret
imul
leave
jno
add
jns
out
cmp
iret
jae
jns
cmpsl
pop
scas
adc
mov
out
fsubrp
xlat
lahf
fildll
pop
out
pop
jle
xchg
out
not
scas
call
pop
push
leave
out
lahf
sbb
push
inc
and
mov
dec
outsl
in
cmp
outsl
push
push
cmp
repz
pop
test
nop
add
repz
fwait
or
pop
psrld
in
in
call
into
cmc
or
call
pop
xlat
sub
lahf
xlat
xlat
fsubrp
jbe
das
push
dec
popa
push
push
sahf
out
jns
ja
andb
dec
aaa
jns
mov
mov
push
and
dec
sahf
out
iret
sub
in
out
jns
lock
sub
sahf
push
fcoms
push
es
popf
cmp
in
cmp
iret
jae
mov
imul
daa
jg
mov
cmp
adc
stos
movsb
mov
inc
inc
inc
add
pop
ds
cmpsl
cmp
aam
mov
cmp
pop
out
aas
inc
push
xchg
push
and
xor
sbb
mov
dec
stos
inc
mov
aaa
fadds
sub
outsb
daa
iret
cmp
push
push
add
jns
out
sbb
dec
sahf
out
or
or
jbe
xchg
fdivl
or
rorb
in
adc
adc
adc
and
in
jbe
pop
inc
inc
push
fistl
push
xorps
out
mov
jo
jb
pop
fmull
pop
andb
cmpb
fdivrl
addl
repnz
mov
jb
loopne
aas
into
aas
xlat
sbb
pop
dec
sub
data16
jecxz
inc
add
cmp
sahf
out
push
es
xor
and
sahf
out
and
adc
cld
call
lock
repz
ror
enter
jns
out
mov
movsb
repz
sahf
out
nop
mov
cmp
jo
pop
push
inc
inc
cmp
repz
xor
or
push
js
aas
push
push
inc
jp
sbb
cmp
out
add
xchg
inc
enter
push
dec
add
mov
sbb
std
add
jno
addr16
test
sbb
adc
sbbb
cmp
ss
movsb
add
cmpb
cmpsb
fisttps
mov
stos
mov
jle
test
shll
fldenv
cmp
jg
pop
inc
mov
iret
mov
in
call
popf
inc
jle
adc
push
ficompl
mov
pop
fisubrl
xor
fcomp
loopne
jb
jle
cld
mov
and
inc
inc
mov
adc
filds
pop
add
shrb
in
or
and
scas
pop
push
mov
inc
aaa
push
out
pop
pmovmskb
add
mov
das
push
cmp
or
pop
or
mov
cltd
sbb
jle
out
mov
or
or
out
adc
jns
out
adc
sahf
out
sbb
in
iret
repz
sbb
iret
repz
sub
enter
lcall
jmp
clc
ljmp
jns
jp
dec
mov
scas
call
xor
jns
mov
mov
loope
out
dec
icebp
xchg
push
add
fcoms
mov
inc
pop
pop
loop
or
js
add
push
add
adc
cmp
push
jae
testb
jo
icebp
addr16
push
push
mov
dec
pop
mov
lods
jmp
xchg
stos
xor
aas
pop
daa
idivl
and
fucomip
stos
insl
stos
jge
cmp
pop
jg
out
sbb
loopne,pn
inc
lmsw
imull
sbb
daa
leave
fidivl
add
sbb
xor
cmp
sbb
shlb
lock
repz
out
aas
lock
and
push
and
outsb
sbb
lock
jae
jnp
add
adc
fsub
jns
jnp
das
push
or
or
repz
in
adc
in
iret
repz
rcrb
push
cmp
repz
pop
test
movsb
repz
repz
ljmp
cltd
jo
pop
clc
mov
xchg
movups
xor
cs
pushl
inc
mov
incl
adcl
cmp
repz
push
cmp
pop
js
mov
lcall
xor
iret
fwait
imulb
cmp
xchg
jnp
iret
repz
bnd
das
push
push
xchg
cmp
dec
insb
cmpsl
push
push
xlat
add
dec
inc
pop
enter
xchg
add
or
and
repnz
ret
mov
adc
dec
pop
and
sbb
dec
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
call
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
js
fistpll
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
stc
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
jmp
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
lock
xchg
and
and
add
pushl
sti
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
jmp
pop
pop
mov
icebp
aas
rorb
and
aas
incl
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
dec
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
in
call
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
jl
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
call
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
ljmp
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lcall
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
pop
push
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
jo
sbb
frstor
test
je
pop
inc
add
xchg
pop
inc
push
dec
jnp
mov
dec
andl
pop
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
jmp
aad
mov
rclb
mov
sub
mov
sbb
repnz
repz
test
ficompl
jmp
mov
hlt
movl
inc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
lcall
imul
addr16
add
aam
dec
std
test
movsl
cli
test
xor
insb
cwtl
mov
leave
mov
insb
fdivs
jne
filds
or
shrl
jmp
fldenv
push
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
decl
movsl
mov
sub
mov
and
or
adc
stos
sbb
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
aaa
adc
pushl
aam
call
xor
adc
lcall
cwtl
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
decl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
jl
mov
bound
ficoml
gs
aam
pop
popa
mov
into
pop
jg
cli
cmp
mov
inc
movsl
fisttps
fadd
shll
ljmp
imul
mov
sarb
add
in
add
pop
dec
or
cmp
add
daa
adc
or
and
test
or
mov
popa
into
decl
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
jmp
cmpl
or
mov
lcall
ljmp
fildl
push
fdivl
call
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
incl
lock
add
inc
push
imul
xorb
sbb
push
imul
pushl
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
pushl
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
sar
pushl
jns
imul
andl
shrb
rclb
or
add
sar
or
das
es
lds
or
add
ljmp
sar
pop
cmpsl
call
ret
shlb
scas
ficomps
ret
es
jmp
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
call
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
call
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
ljmp
fldenv
filds
scas
bound
test
jg
insl
inc
fs
adc
cmp
mov
mov
push
cmpsb
mov
sarb
sub
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
xchg
out
add
popf
cmp
ss
pop
push
sbb
push
and
out
cmp
push
xlat
fcomp
jns
out
fsubp
jns
dec
sahf
jecxz
in
jmp
ljmp
jns
hlt
cmc
div
clc
stc
rorl
cld
pop
adc
push
inc
pop
dec
adc
movsl
add
xchg
movl
mov
jae
inc
push
dec
bound
jbe
inc
insb
mov
inc
insl
bound
int
lcall
push
inc
mov
in
fistpll
and
cmp
push
and
dec
pop
inc
jno
jg
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
outsl
insl
xor
xor
bound
imul
popa
push
inc
jbe
pop
insb
imul
es
gs
sti
add
push
dec
inc
adc
negb
inc
adc
ss
xchg
pop
fidivrl
or
ss
xchg
fs
lods
test
ss
jbe
addb
jp
xlat
xor
mov
insb
daa
sbb
jle
gs
dec
js
insb
inc
push
add
adcb
inc
pop
aaa
add
sbb
sbb
push
push
lods
xor
popa
xchg
inc
inc
orb
adc
lock
aas
inc
push
fadds
jbe
aas
add
and
adc
add
daa
int
mov
inc
aas
cmp
xor
inc
mov
sbb
inc
jg
movsb
mov
pop
je
jo
inc
inc
shlb
push
ds
mov
scas
add
mov
iret
int
push
dec
cmp
inc
xor
xor
andl
fs
ja
outsb
jne
lods
mov
xor
mov
lret
pop
xor
jne
xor
or
add
ss
clc
xchg
rorl
out
pop
jo
popf
pushaw
inc
mov
pop
inc
cmp
inc
adc
add
lret
aam
cld
push
or
jo
gs
outsl
orb
and
mov
push
xor
lahf
and
fwait
mov
mov
imul
adc
lahf
xchg
add
js
out
jb
rcll
popa
dec
popa
jo
or
lahf
dec
push
sbb
outsl
outsl
test
mov
stos
sbb
mov
mov
in
cmp
push
loop
xor
inc
cmp
arpl
add
mov
cmp
mov
mov
xchg
push
loopne
push
outsl
insb
jns
cmpsb
or
and
inc
jb
push
mov
gs
inc
outsl
arpl
adc
mov
push
push
bound
ja
inc
push
shll
addr16
pop
dec
pop
jg
push
dec
add
mov
fistpl
lock
lcall
inc
add
add
repz
or
push
pop
jg
jl
adc
jle
xor
cmpsb
inc
or
mov
dec
sahf
dec
sar
addl
sbb
adcb
sbb
push
sub
push
inc
dec
pop
bound
cmp
push
cmp
pop
jnp
cltd
xor
insb
insl
in
add
push
aaa
inc
jne
push
dec
adc
push
xorb
mov
pusha
adc
sub
and
inc
push
add
add
dec
dec
push
jo
add
stos
and
jmp
add
dec
inc
dec
mov
add
pusha
add
fstpt
xchg
add
add
or
mov
or
pop
pop
push
or
or
or
or
or
adc
adc
cmpsb
push
lock
adc
push
add
pop
sbb
adc
adc
adc
add
data16
or
pop
adc
inc
add
pusha
mov
pushf
nop
add
add
add
adc
loopne
add
add
mov
repnz
sbb
cmp
decl
call
xor
adc
pop
and
xor
inc
mov
adc
cmp
and
bound
js
add
mov
pusha
xchg
xorb
jbe
fsubs
subl
add
addl
add
inc
or
pop
xor
pusha
add
aas
xor
adc
or
pushf
into
add
cmp
scas
adc
mov
or
adc
push
adc
int
mov
adc
or
xchg
mov
lock
add
and
adc
inc
mov
mov
dec
rorl
scas
fiaddl
or
ja
adc
dec
xor
sub
inc
fists
xchg
and
sub
std
cmpsb
xor
aas
imul
pushl
fdivrl
add
mov
mov
loopne
mov
fsts
rcrb
orb
mov
cmp
and
ret
sub
xchg
sti
push
call
in
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
mov
inc
xchg
pusha
add
std
or
incl
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
inc
mov
test
pop
lahf
mov
movsl
jecxz
pop
mov
push
cmp
push
stc
or
xchg
jg
or
push
push
addr16
out
or
push
push
xchg
add
repnz
inc
lock
call
xor
fdivrp
cmp
fisubrl
in
mov
orb
int3
lcall
std
aaa
cmp
mov
scas
mov
pop
pop
mov
popl
movb
call
adc
adc
mov
xor
lods
scas
xchg
test
aam
and
ljmp
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
stos
lahf
fdivs
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
jmp
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
mov
jp
push
out
or
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
mov
xchg
outsl
cwtl
lcall
jle
mov
jb
mov
mov
mov
sub
pop
add
arpl
dec
jp
push
gs
jg
jg
aas
stos
hlt
push
add
stc
loope
mov
sar
andl
aas
icebp
idivb
aad
or
mov
scas
fadds
jmp
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
ljmp
sbb
jb
adc
push
lock
lods
jp
testb
jmp
sbb
into
fcomps
sbb
sbbl
into
andl
aas
loopne
mov
adc
aaa
xchg
in
add
inc
adc
loope
fnstsw
out
aas
std
cli
push
push
push
idivl
mov
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
ljmp
mov
scas
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
pushl
inc
cmp
sti
punpckhbw
cmpsb
orb
mov
clc
xor
jmp
xchg
pop
clc
outsl
pop
dec
fistl
hlt
sub
movsb
add
lea
pushl
jg
gs
std
xorb
jg
aad
adc
ret
call
loopne
das
pop
pop
pop
shlb
out
sarb
sbbl
jno
or
mov
cmp
pop
les
cli
mov
mov
inc
arpl
stos
mov
lcall
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
jg
call
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
call
ss
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
lock
decl
pop
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
mov
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
lcall
into
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
add
incl
das
adc
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
inc
nop
cli
jb
and
jae
shrb
jmp
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
clc
mov
pop
cld
addl
adc
and
int3
mov
push
enter
jecxz
scas
sub
loop
sar
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
pop
jg
add
pop
iret
mov
jg
mov
aad
test
in
pop
mov
lock
mov
iret
push
jbe
lock
std
stos
icebp
pop
incb
jno
adc
push
inc
mov
jecxz
sbb
sarl
adc
loopne
sar
adc
jbe
mov
clc
sti
push
sti
imul
dec
push
in
aas
mov
shlb
loope
fsubrl
lock
and
pop
fadds
clc
xchg
pushf
mov
incl
in
or
and
mov
adc
inc
aas
inc
push
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
sub
pop
pop
nop
mov
inc
pushl
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
mov
decl
dec
xor
fsubr
fistps
lds
fidivrl
jg
jmp
stos
pop
add
dec
mov
sub
jge
xor
push
les
sbb
sbb
cld
addl
mov
jg
sbb
mov
lahf
outsl
int3
push
sbb
jg
xchg
pop
test
bound
pop
outsl
pop
loopne
push
in
jge
popa
push
test
jbe
aam
ret
ljmp
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
shlb
or
out
lcall
in
pop
shl
cld
mov
adc
stos
pop
jg
pop
shrb
sar
ljmp
sarb
adc
xor
pop
rcr
dec
mov
gs
pushf
lea
ds
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
dec
imul
or
inc
pop
xor
rorb
and
add
cmpsl
push
lcall
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
cwtl
xor
and
xchg
fidivrs
clc
fldt
lcall
fistps
outsl
lock
in
jmp
cs
out
stc
out
mov
clc
push
std
mov
lock
dec
or
mov
fists
dec
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
rcr
push
loop
lcall
jne
pop
cld
or
dec
and
mov
lods
movsb
incl
pslld
pushf
imul
cli
daa
pop
and
imul
cmpsl
lret
pop
in
cmp
or
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
adc
aas
mov
cmpb
lods
jg
mov
sub
addr16
sbb
cld
daa
adc
std
jp
std
adc
cltd
or
mov
ret
nop
dec
cld
stos
jle
icebp
das
incb
lock
pop
pop
div
cld
idivl
addl
scas
stc
lahf
loope
andb
shrl
je
push
xor
mov
add
fs
call
out
icebp
mov
loope
mov
cmpsl
popf
sbb
mov
mov
fbstp
push
daa
outsl
das
int
pop
mov
add
cmpsb
cmp
call
popf
js
data16
decb
adc
mov
add
mov
or
or
add
fs
inc
add
loop
out
or
aaa
std
fistpll
cmp
inc
sbb
xchg
mov
pop
cmp
mov
aas
icebp
ret
ror
sbb
mov
adc
sub
adc
aas
pop
clc
loope
loope
mov
or
jp
dec
add
xlat
jbe
scas
and
fbstp
xchg
push
shll
iret
fdivrl
xchg
lcall
adc
decb
add
pop
gs
push
icebp
fbld
out
jg
jno
ret
pusha
mov
inc
arpl
call
mov
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
loop
ds
inc
mov
in
sbb
xchg
imul
jmp
outsl
mov
sbb
mov
daa
jmp
faddl
lds
adc
mov
dec
push
popa
pop
add
pop
stc
push
mov
fstpt
mov
enter
and
add
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
incb
mov
mov
fildll
fsubrl
dec
add
add
inc
or
add
push
sti
pop
inc
dec
push
ficoml
adc
bsf
popf
ljmp
int3
pop
iret
and
add
dec
ds
and
scas
in
and
ljmp
sbb
insl
adc
or
mov
mov
jns
inc
push
arpl
sub
incl
imul
stos
cmp
in
scas
jbe
cmp
mov
mov
adc
out
jnp
and
pop
mov
decl
adc
sub
adc
adc
or
mov
testb
push
aas
or
mov
clc
sbb
pop
mov
mov
inc
dec
jl
cmp
and
sbb
sbb
xlat
aas
lds
movsb
jge
lods
movsl
stos
mov
push
dec
sub
call
lds
jbe
and
lds
addr16
cli
loope
mov
sti
mov
loop
jg
out
test
pop
xchg
fsub
outsb
in
or
stos
je
jns
js
jl
insb
xchg
jnp
mov
xchg
inc
sbb
in
dec
sub
rorl
pop
lcall
decl
jp
mov
js
xchg
clc
and
add
xchg
nop
pushl
sub
ljmp
gs
mov
sbb
push
mov
xchg
lods
sub
push
je
incl
push
jmp
and
xor
out
xchg
mov
imul
adc
cli
gs
dec
outsb
jb
sti
jmp
mov
or
insb
push
cmp
pushf
xor
movsl
icebp
mov
xchg
test
lods
dec
pushl
or
inc
add
dec
jge
cs
stc
cltd
fistpll
cmp
jnp
hlt
push
add
inc
pushf
call
stc
enter
data16
adc
faddp
pop
andb
loop
mov
adc
roll
stos
push
jge
cmp
out
jg
cmc
sbb
add
andb
xchg
xchg
push
mov
jmp
sub
call
cmc
xchg
add
les
out
fiadds
push
in
cmp
icebp
int3
inc
jmp
test
clc
xor
jno
scas
fcomps
mov
imul
jae
out
aas
in
arpl
stos
popa
xchg
and
add
gs
mov
scas
lods
jecxz
push
sub
inc
pop
aaa
dec
push
xchg
xchg
jb
cmp
sub
pop
mov
jl
pop
xchg
rcr
push
shrl
sub
lcall
sbb
dec
inc
repz
xchg
iret
add
bound
sbb
add
sub
jg
lcall
dec
arpl
or
xchg
mov
out
xchg
cmp
cmc
ljmp
xchg
add
hlt
addb
insb
sub
out
xor
decl
sub
push
aad
sub
mov
dec
cmp
inc
jae
sbb
mov
out
mov
add
idivb
fwait
and
ret
mov
mov
cli
daa
inc
add
sbb
mov
inc
stc
xlat
cmc
cld
dec
incl
pop
dec
push
mov
ret
mov
cmpb
mov
jmp
sbb
ret
les
mov
inc
shrb
aam
out
cld
add
xchg
shrl
sub
add
xor
dec
pop
into
xchg
rcrb
xchg
test
and
out
mov
jge
lahf
or
jns
cmpsb
inc
push
repz
sbb
outsb
lret
jne
mov
sub
mov
pusha
jbe
in
and
lret
in
push
cmc
ljmp
mov
negb
or
inc
dec
mov
push
cmpsb
leave
xorl
and
lcall
sbb
add
jno
aad
and
pop
fs
sbb
and
lods
mov
clc
dec
loopne
pushl
ret
sub
adc
clc
add
insb
mov
mov
stos
xchg
xchg
mov
in
popa
jp
psrld
adc
pop
pop
lcall
outsl
pcmpeqw
and
xchg
or
inc
dec
cld
sub
loop
in
mov
dec
mov
jmp
xchg
mov
outsb
xchg
aad
cmp
push
mov
ret
jecxz
sbbb
dec
dec
test
push
cmpsl
lods
sbb
ss
xor
cltd
adc
mov
xlat
mov
jge
xlat
les
call
stc
cwtl
push
ret
sub
daa
cwtl
pop
or
aas
test
call
push
xlat
cmpsb
jle
incl
inc
jb
push
cmp
adc
repnz
imul
jmp
rcll
lret
xchg
pop
ficoms
incl
xor
pop
mov
jns
dec
adc
out
test
sub
insl
jbe
andb
scas
cmpsb
outsb
pop
push
scas
popa
cmp
adc
in
repz
decl
sub
rcrl
lcall
dec
pop
push
xor
int3
decl
mov
sbb
add
mov
call
xchg
enter
addr16
fs
je
ljmp
popa
shrl
flds
out
lods
scas
nop
pop
loop
mov
mov
xchg
add
ja
iret
mov
lods
jb
clc
stos
push
sbb
cwtl
jp
jg
dec
xor
scas
mov
jns
push
mov
or
push
int
cmp
arpl
call
shrb
std
pop
jno
sarl
dec
jno
shlb
mov
jecxz
mov
fildll
lret
decb
add
out
int
icebp
in
jg
dec
rcll
sti
stc
xchg
pop
adc
jnp
jnp
inc
adc
jno
mov
xchg
call
repnz
leave
incl
test
fmulp
sbb
call
into
xor
jmp
imul
jmp
add
bound
pmaxsw
lret
call
shl
in
nop
loope
scas
popf
jge
repz
sbb
pop
inc
test
sbb
sti
mov
neg
fsubs
jae
sub
lds
or
and
pop
pop
adc
movsl
ret
sti
dec
into
inc
push
popf
push
pop
int3
cmp
loop
stos
movsl
push
es
aam
mov
pop
jb
lock
jmp
loop
and
out
mov
enter
std
leave
sub
out
in
insb
lcall
cld
test
std
out
inc
lea
xchg
push
lcall
sub
js
inc
sarl
addr16
loopne
ljmp
rcrl
int
sar
ljmp
or
incl
sub
push
dec
cmpsb
xchg
rcrl
mov
jl
mov
inc
lods
or
push
decl
hlt
sub
insb
loopne
xlat
or
add
scas
sahf
leave
dec
lock
push
cs
jbe
decl
int3
test
inc
popf
es
xor
call
std
les
ljmp
cmc
loop
arpl
cld
fmull
sbb
das
clc
cli
mov
lea
fbstp
push
movsb
aaa
test
inc
stos
jo
sub
fcomip
inc
or
fcomps
imul
add
pushf
sti
mov
loopne
call
jo
test
int3
pop
push
repnz
pop
lcall
aam
push
lcall
jb
imul
leave
jg
pop
mov
push
lods
sub
sti
jns
sahf
pop
addr16
pop
std
loopne
pop
icebp
inc
frstor
cltd
sub
jmp
fcomi
imul
shrb
jnp
jne
xor
and
lret
and
mov
add
cmp
mov
test
mov
imul
dec
cmp
mov
fadds
xchg
mov
xor
inc
fdivrl
out
js
ja
or
sbb
es
cld
in
inc
shlb
std
add
mov
les
into
leave
ss
int
ret
jg
out
mov
enter
lcall
repz
movsb
sub
push
stc
dec
inc
jbe
xchg
fiadds
jmp
push
fidivrl
mov
call
in
outsb
mov
xchg
loopne
ljmp
push
mov
insb
jecxz
lret
add
inc
ljmp
ja
rcl
and
sbb
sbb
lea
in
jnp,pt
bound
rcrb
leave
and
and
mov
ljmp
push
ss
lret
or
push
jo
fcompl
mov
dec
xor
lcall
mov
cs
rorb
mov
movntq
mov
pop
and
into
mov
mov
int
dec
nop
inc
repz
bound
hlt
jp
out
loope
pop
cmp
insb
pusha
and
and
jmp
xchg
imul
mov
ljmp
lahf
xlat
pop
adc
fnstsw
xchg
or
mov
fnsetpm(287
cwtl
imul
incl
lea
jbe
test
enter
je,pn
sbb
xor
call
pop
iret
xchg
cmp
push
sbb
jnp
xor
push
pop
inc
dec
xor
decl
push
loope
adc
mov
ja
cmp
fs
mov
pusha
int3
jno
mov
sbb
jmp
inc
inc
cmp
hlt
mov
fdivr
or
push
jbe
cmpb
fcoml
decl
sbb
ja
fwait
lods
fdivrl
sahf
aad
out
loope
outsb
dec
jnp
push
cs
adc
aaa
scas
cmp
jmp
aaa
sub
cwtl
dec
in
mov
push
ja
sub
sahf
push
fs
xor
sbb
fdivs
lcall
out
outsb
shlb
lret
scas
mov
mov
loopnew
jns
pop
andl
push
cmpsb
xchg
push
lcall
sub
mov
lret
fsubl
jo
mov
fstl
mov
inc
inc
sbb
sbb
push
jbe
jae
fisttpll
loop
test
xlat
push
jno
mov
fwait
aaa
vpsrlw
push
orb
pop
sub
test
lock
inc
or
ret
stos
jae
out
inc
ja
xor
push
mov
das
sar
mov
cmp
or
jp
adc
xor
lcall
jmp
cmpsl
or
cmovle
or
loope
cwtl
jecxz
push
sti
and
sbb
aas
mov
dec
cmp
xor
push
cltd
hlt
pop
add
cmp
in
pop
test
pop
call
sti
sbb
lret
out
jmp
adc
push
inc
inc
pop
call
int
fldcw
sub
xor
xor
sbb
imul
mov
pop
jle
mov
mov
in
test
cwtl
add
scas
jle
ja
dec
and
lods
xlat
aaa
xchg
xchg
adc
cs
jnp
decl
fistl
lods
mov
in
mov
movsl
lock
in
mov
ret
pop
cwtl
sub
inc
cs
mov
icebp
add
pop
gs
rorl
popf
daa
xchg
shlb
fcoms
mov
lcall
cmpsl
aad
xor
push
in
sbb
iret
jg
imul
adc
mov
ds
ljmp
mov
or
out
pop
jbe
jno
out
cmp
fmuls
ret
sub
pushl
cld
sub
mov
icebp
popf
mov
cld
int3
push
jp
and
out
add
decl
inc
mov
add
inc
ja
ljmp
clc
mov
cld
aam
xchg
fimull
pop
shrl
outsb
sar
mov
pop
pop
xor
cltd
repnz
sti
push
inc
sahf
jns
insl
adc
or
popa
push
shrb
decl
pop
pop
mov
sbb
lods
xchg
mov
in
dec
lahf
lods
xchg
sbb
adc
gs
loopne
enter
clc
ljmp
out
dec
repnz
pushf
popa
lea
aas
jno
dec
cmc
sbb
adc
call
inc
mov
or
dec
or
mov
stc
les
xchg
aaa
in
push
je
ds
int3
enter
inc
sub
mov
lcall
cmpsl
inc
push
xor
hlt
je
call
push
in
test
push
loop
rcr
add
mov
dec
clc
push
inc
test
fisttpll
inc
cmc
ja
mov
lcall
and
push
pop
jecxz
inc
jmp
mov
mov
pusha
jno
sti
ljmp
clc
call
aam
loop
mov
insl
push
xchg
sbb
jl
loopne
ljmp
mov
mov
mov
iret
sub
cs
xchg
xor
out
dec
inc
outsl
icebp
cmpsl
jbe
leave
jg
sub
add
inc
int3
dec
cmp
out
sbb
out
jg
test
xchg
xor
pop
push
cmpsl
fcomi
mov
sbbb
idiv
incl
inc
sbb
and
sbb
xchg
lods
and
dec
cmpsl
and
jae
pushl
adc
ret
mov
mov
or
int3
add
sub
pop
push
ljmp
push
or
icebp
icebp
std
sub
push
sahf
in
lahf
loopne
jbe
fsubs
enter
xlat
decl
pop
lods
jae
dec
fwait
xchg
xchg
xchg
push
fcompl
pop
mov
shlb
cld
lock
shrl
pop
into
imul
pop
mov
push
cld
or
sub
xlat
and
xor
pop
jmp
shrb
mov
pushl
stos
or
xchg
xor
and
pop
aad
sbb
enter
cmpsl
dec
jno
inc
cmp
adc
lea
fwait
and
into
push
fistps
popa
sbb
pop
add
sub
into
popf
outsb
ja
jge
xchg
aaa
sahf
out
jne
fcomip
ljmp
data16
out
repnz
sar
arpl
jo
sub
fidivl
xchg
imul
cmp
dec
xorl
inc
inc
sub
pop
xor
cmp
xor
lcall
mov
push
enter
imul
into
jg
sbb
leave
inc
repnz
ss
jmp
and
aad
dec
repnz
jne
jp
jno
and
jmp
repz
xor
and
in
jmp
ds
mov
addr16
nop
sub
adc
popf
test
lods
stos
mov
mov
cmp
ljmp
mov
add
ljmp
push
jle
pop
xor
jo
enter
out
ret
popa
add
mov
jmp
push
fisttpll
add
repnz
ret
test
out
out
leave
push
fnstenv
lret
jno
mov
ljmp
repz
lods
shlb
aaa
rorl
and
dec
enter
test
lahf
xchg
pop
std
js
adc
fwait
cwtl
mov
dec
aad
daa
lret
pop
sub
lret
cmp
idivl
push
pop
les
xchg
out
addr16
aad
incb
les
scas
xor
popa
loopne
sbb
xchg
in
cmc
xchg
loopne
pop
xorb
jnp
enter
push
pop
decl
cs
js
insl
xlat
nop
mov
clc
xchg
jbe
aad
ss
jl
mov
call
dec
mov
add
cltd
scas
rcrb
aaa
xchg
loop
pop
iret
shrl
ds
ljmp
test
push
xor
outsb
insl
stc
fildll
xor
movsb
shlb
fcomp
fs
data16
jmp
cmp
mov
inc
push
push
pop
arpl
add
inc
dec
jg
call
ret
and
xlat
ficoml
jmp
fildl
flds
ljmp
inc
stc
ljmp
lods
adc
lods
xor
push
mov
cli
push
std
fsubrs
dec
pop
mov
fiaddl
push
aad
neg
mov
faddp
ljmp
inc
repnz
pop
ja
adc
xchg
jle
adc
repnz
jmp
insb
out
pop
imul
lret
cmp
testl
xlat
shl
movsl
jge
leave
decl
lock
test
sub
out
lret
aad
lods
sub
add
pushl
jo
xchg
loope
sbb
dec
notl
pushf
ljmp
cwtl
movsl
pusha
mov
int
andb
jmp
mov
int
andl
das
dec
int3
jno
in
mov
lahf
ljmp
pushl
loopne
jp
cmp
out
jecxz
mov
pop
hlt
lock
or
pushf
or
bound
lahf
mov
jle
in
sbb
pop
lret
test
mov
and
leave
das
dec
repz
call
jb
xchg
cmpsb
and
push
test
mov
cmp
sub
pop
bound
jle
fdivrs
ja
mov
add
pop
and
mov
jg
sti
push
push
adc
sub
lret
leave
mov
dec
vpmadcswd
fbstp
jno
xor
dec
or
imul
pop
add
cmp
jmp
jp
sub
inc
shlb
mov
inc
push
mov
out
mov
mov
out
mov
lahf
and
or
fimull
sub
call
mov
test
fists
pop
push
mov
dec
shl
lcall
dec
out
addb
gs
aam
out
pop
popl
xor
lcall
jns
pop
pop
std
bswap
push
repnz
lock
dec
jp
jb
xchg
or
imul
lret
out
cs
leave
pop
ljmp
clc
mov
adc
insb
mov
popl
popa
es
xchg
jno
jl
fucomp
add
mov
push
adcl
xchg
aad
mov
lcall
in
sub
add
mov
out
push
push
cmp
dec
inc
and
mov
xchg
call
shlb
lcall
js
pop
icebp
rorb
scas
and
mov
sub
in
sbb
jae
incl
sub
mov
mov
pop
xor
fsubrl
xchg
inc
lock
in
xchg
inc
stc
pushf
pushf
cwtl
mov
shrl
sahf
leave
mov
mov
push
dec
cmovb
push
popa
mov
bound
xchg
ret
orb
js
adc
ljmp
add
mov
mov
xor
fnstsw
int3
jnp
jo,pt
lds
lods
sahf
cli
lods
in
jbe
lcall
out
scas
inc
mov
sarl
in
sbb
push
push
sbb
loop
xor
fwait
jnp
jb
call
push
popa
push
adc
adcb
mov
adc
pop
addb
std
jmp
cli
out
push
iret
leave
dec
sbb
push
ljmp
fistps
fwait
cmp
lcall
push
sti
lahf
fldt
xchg
adc
enter
pop
xor
filds
enter
clc
mov
push
push
or
xor
xchg
pop
cmp
or
mov
ljmp
faddp
dec
fs
mov
incl
lods
mov
jno
mov
fucomip
pop
pop
sarb
dec
jbe
mov
jg
inc
testl
mov
into
and
mov
sbb
pop
outsb
or
ret
dec
pop
inc
std
ret
mov
jl
lret
enter
les
stc
sbb
incl
leave
mov
lock
rclb
pop
mov
or
fadd
rcrb
dec
inc
cmp
mov
jno
inc
shrl
mov
imul
cmp
jno
jne
push
add
mov
das
jb
xchg
or
adc
jmp
imul
cwtl
shll
push
mov
negl
rcl
push
or
jnp
xchg
cmpb
int3
fs
out
test
decb
cli
mov
sub
lods
mov
call
lahf
push
mov
aad
inc
ret
addr16
stc
mov
arpl
and
popa
out
fsubp
inc
dec
addr16
push
push
shll
push
mov
jge
out
push
clc
sti
push
out
nop
shlb
adc
lret
scas
jmp
icebp
xchg
pushl
cmpsb
lcall
idivl
sahf
or
xchg
shll
cmpsb
lret
leave
rclb
jmp
pop
call
pop
jne
dec
xor
xor
pop
add
jmp
lods
imul
stos
pop
sbb
cmp
lods
rol
pop
lret
lods
or
movsl
pop
cmp
lcall
ljmp
dec
mul
push
js
std
lods
jecxz
sbb
fwait
lahf
stos
mov
popa
les
jg
pushl
arpl
scas
pop
and
xor
enter
jle
icebp
hlt
aaa
lcall
add
sbbb
push
insb
fs
jecxz
fucomi
pop
rcrl
fisttps
aad
out
mov
notb
cltd
jb
or
ljmp
dec
stc
dec
jns
mov
js
test
mov
loopne
inc
mov
pop
and
xchg
repnz
out
dec
cld
adc
jmp
inc
sbb
cmpsb
inc
or
push
mov
outsl
xchg
cmpsl
fnstenv
mov
add
cmpsl
cmp
add
int3
mov
std
cwtl
repnz
dec
inc
mov
std
mov
mov
add
inc
pop
lcall
inc
xchg
add
xchg
mov
sbb
jbe
adc
ljmp
add
decl
iret
mov
dec
loope
aaa
xchg
mov
ficoms
jmp
dec
pop
aaa
ficomps
sub
jmp
inc
jle
cmc
xchg
inc
arpl
or
jb
xor
lcall
jns
mov
int
add
test
sub
cli
jmp
push
jg
jle
inc
or
xor
push
cld
sbb
decl
int3
pop
cmp
test
xchg
jg
aas
inc
arpl
push
jecxz
in
mov
jp
fisttpll
movsb
or
or
jg
jge
sub
cmpsb
cmp
lea
idivb
cmp
rol
fcomip
dec
jns
inc
pop
dec
sarb
inc
pop
xchg
in
or
test
test
push
scas
lds
popa
insl
lahf
loopne
cmp
sbb
adc
fdiv
pop
mov
xor
mov
jge
pop
and
aam
push
mov
sbb
pop
loope
mov
fs
lods
mov
mov
out
mov
push
mov
or
ret
cmp
decl
enter
outsb
int
sahf
sub
fcomps
push
jle
jp
jmp
inc
xor
das
sub
cwtl
pushf
xchg
bound
or
or
popa
pop
xlat
push
mov
pop
mov
gs
movb
fisttpl
xchg
mov
lcall
xor
aas
addl
mov
sbb
mov
lret
lods
dec
ljmp
fisubl
lret
push
jns
add
enterw
jmp
fwait
cld
and
adc
fs
sub
inc
aad
dec
out
push
loop
add
mov
and
mov
cwtl
sub
rcrb
ljmp
packuswb
mov
pop
adc
push
mov
stc
repnz
mov
cld
data16
cwtl
flds
mov
jns
fnstsw
incl
push
andb
es
sbb
mov
sub
cwtl
adc
pop
pusha
rdtsc
jg
and
mov
imul
ljmp
push
dec
xchg
cmp
outsb
jl
inc
mov
cmp
push
pop
lret
cmp
lods
xor
dec
push
outsb
mov
push
jnp
push
lcall
incl
lds
push
jnp
clc
lcall
sbbl
cld
ljmp
jl
addr16
ret
mov
rorl
outsb
imul
ljmp
stc
ljmp
cli
js
jecxz
mov
pop
inc
out
mov
mov
adc
call
lods
cmp
sub
iret
xchg
das
adc
sub
pop
stos
enter
lcall
push
add
mov
dec
or
cmpsl
mov
pop
pushf
adc
nop
and
mov
lds
xchg
sbb
test
sub
push
sbbb
push
sub
int
jge
incl
aad
xchg
movsb
mov
pop
repz
xor
movsb
pusha
mov
pop
fnsave
inc
repnz
jle
jb
jo
dec
xor
pop
push
jns
jbe
push
repnz
imul
lret
and
out
inc
outsl
clc
lcall
mov
stos
and
rclb
jb
cmpsb
dec
xchg
xor
mov
xchg
inc
mov
cmp
pushf
cmp
inc
sub
divps
and
ljmp
cmp
lret
aas
addl
jnp
rcrb
in
push
mov
lcall
lods
ja
dec
push
and
fwait
cmp
xor
xor
and
data16
imul
xor
xchg
cmp
cmp
es
daa
fmuls
dec
push
add
push
xor
loop
jmp
sbb
in
pusha
ffree
or
lds
ljmp
adc
cmp
pushl
or
repnz
fidivrl
je
jnp
mov
push
jae
idiv
ja
pop
aas
add
iret
push
das
lahf
and
mov
fdivrp
jmp
cltd
fimuls
repnz
mov
jmp
ljmp
rcl
sbb
ljmp
lahf
sbb
stc
sub
jmp
popa
jp
ss
pop
in
push
jge
ljmp
shlb
add
sbb
mov
mov
into
test
call
mov
pop
sbb
sbb
xchg
push
int
fsubrl
addl
pushl
imul
cmpb
add
sub
jns
into
xor
xchg
add
lret
jg
scas
inc
push
jnp
jmp
mov
ret
out
pop
fs
ret
mov
lcall
cmpsl
insl
xor
into
std
sbb
out
mov
mov
add
dec
fidivs
xchg
fs
fimuls
cld
call
cltd
jb
mov
sbb
lock
lock
filds
push
sahf
in
xlat
insl
sub
cwtl
xor
push
fistl
call
pushf
mov
cmpsb
pusha
cmp
xor
push
cmc
and
add
movsb
adc
jmp
mov
push
lahf
push
inc
xchg
pop
cmp
dec
add
mov
lock
lcall
push
fnstenv
test
scas
xchg
insb
xchg
sbb
jo
cltd
xchg
or
fistpll
js
push
or
fnstenv
rcr
test
sbb
loopne
xchg
aad
push
aam
js
dec
in
jb
jnp
int
ljmp
mov
cmpsl
push
xchg
lods
outsb
jl
and
sbb
ljmp
or
mov
into
lock
mov
outsl
and
and
stos
or
call
out
test
rcll
aas
cmp
pop
sub
je
xorb
int3
dec
dec
jp
in
add
mov
sub
xlat
and
in
cli
jg
ljmp
lcall
xor
lds
xor
lret
mov
cmp
cmp
or
loope
cwtl
out
in
cmc
out
sbb
jbe
sarb
imul
ljmp
mov
xor
sti
adc
jnp
xorb
loopne
cmpsl
jg
or
sbb
sub
lret
lcall
clc
cmpsl
add
push
mov
dec
or
cmpsl
push
cmpsb
mov
or
xor
mov
xor
mov
movq
adc
cwtl
pop
sbb
aas
jb
pop
test
sub
mov
xchg
repnz
stos
mov
inc
test
cld
dec
decl
stc
pop
imul
daa
dec
xor
test
add
imul
pushl
incl
and
pop
push
fwait
aad
outsb
out
cld
mov
mov
or
jmp
fldt
and
insb
stos
and
fisubrs
int3
or
xchg
sub
adc
and
mov
jg
out
lcall
push
ficompl
lcall
lods
adc
push
jb
les
test
pop
cmc
aam
fcomps
push
fdivl
mov
test
and
sbb
xlat
mov
loop
and
cmp
out
jl
jns
inc
mov
sub
mov
xchg
andb
pop
pusha
mov
xchg
hlt
adc
mov
mov
xchg
call
shl
lods
loope
mov
lcall
add
xchg
test
push
aam
mov
sub
inc
insl
mov
adc
lock
sbb
push
std
jmp
bnd
shr
cmpsb
adc
pop
xlat
or
out
mov
lds
mov
rol
mov
icebp
imul
add
scas
push
sbb
push
movsb
mov
mov
out
pop
pop
sbbb
push
dec
testl
dec
lods
mov
xchg
mov
and
mov
mov
movsb
mov
xor
jo
push
pushl
sti
shlb
cmp
push
daa
xor
loope
imul
std
jg
adc
clc
mov
mov
jb
imul
cmc
sub
sahf
int
lods
addb
mov
js
cmp
push
adc
ljmp
scas
into
lds
ror
fdecstp
les
sbb
lcall
mov
mov
test
fdivs
js
mov
stos
sbb
imul
std
scas
adc
gs
pop
jne
adc
out
cltd
jns
popfw
gs
fistpll
push
inc
les
push
dec
mov
or
xor
mov
adc
aad
or
pop
pop
adc
mov
mov
iret
punpckhwd
jnp
pusha
xchg
dec
push
xor
push
je
iret
sbb
push
lcall
or
fildl
inc
push
pop
sbb
lods
pop
cmp
mov
pop
mov
push
ret
sub
sti
jae
sbb
cli
dec
dec
lahf
and
daa
xchg
jo
mov
ja
adc
add
mov
pop
adc
jle
adc
adc
enter
jg
in
push
push
pop
aas
shll
jbe
jb
cmp
jae,pn
sbb
mov
repz
xchg
arpl
lret
mov
fxch
loopne
bound
pusha
fbstp
dec
or
inc
inc
jp
pop
xchg
and
push
btc
jecxz
add
test
or
mov
cmc
pop
cmp
cmp
lock
mov
out
push
jle
jnp
mov
fucomi
clc
lock
fists
outsb
push
mov
ja
pop
movsb
pushf
mov
dec
lock
adc
mov
inc
dec
insb
inc
cmp
jp
push
in
push
bound
jo
stos
outsl
xchg
add
push
jg,pt
cwtl
fstpt
mov
nop
ljmp
cmp
fsubl
push
or
mov
adc
icebp
stc
mov
cmp
push
loope
mov
push
out
mov
cmpsl
shll
rcll
lret
cmp
ljmp
std
xor
mov
mov
push
rolb
les
call
dec
pop
jb
loopne
in
aam
mov
xchg
cmc
add
call
test
inc
addr16
ret
add
xchg
mov
lahf
popf
out
stc
clc
xchg
dec
or
daa
or
dec
or
fmul
orl
xchg
out
jg
pusha
fdivrp
decl
div
xchg
jp
sub
fbstp
sahf
adc
out
cmp
adc
and
mov
mov
fcomps
mov
mov
add
add
out
sbb
outsl
pop
cmc
call
icebp
mov
bound
push
xor
test
gs
push
subb
popa
scas
out
jbe
push
and
xlat
pop
cld
aad
sbb
or
pusha
leave
icebp
ljmp
cli
mov
out
sbb
lcall
adcl
xchg
filds
cwtl
test
push
pop
hlt
movb
scas
test
lds
xor
inc
xor
inc
pop
icebp
ljmp
inc
dec
mov
scas
shll
dec
test
cmc
sub
xchg
mov
lock
cmp
dec
dec
in
mov
jo
cmp
cmp
hlt
and
push
jbe
push
out
xor
decl
jne
int3
loope
out
popa
int
stos
jg
or
push
jno
xor
push
or
push
fdivr
pop
adc
je
loopne
push
jle
jae
loopne
je
mov
into
je
je
in
sub
loope
or
ljmp
incb
and
icebp
mov
xchg
clc
xor
or
aad
fldcw
mov
call
pusha
dec
hlt
mov
dec
add
jg
out
or
fbstp
pop
mov
xchg
pop
jo
mov
pop
sahf
insb
pop
pushf
pop
or
mov
pop
cmp
sub
pop
pop
cmp
push
outsl
imul
icebp
in
ljmp
std
les
test
pop
cmp
fdivrs
push
bnd
add
adc
icebp
mov
pushl
pop
jns
sbb
adc
sbb
pop
loope
enter
cmpsb
mov
jmp
xchg
jne
jo
arpl
add
daa
test
test
js
pop
inc
mov
incl
or
pop
in
dec
cmp
adc
jg
mov
pop
xchg
arpl
ss
out
mov
adc
aas
ljmp
xchg
nop
cmc
jle
add
lcall
sbb
cmpsb
lcall
mov
or
inc
into
bnd
push
in
in
pushl
out
xchg
ja
pop
pop
sub
cmp
and
ss
dec
jno
jbe
jne
mov
scas
sbb
decl
cmp
inc
inc
ds
cli
fmuls
fdivl
cwtl
shrl
xlat
sar
pushl
mov
mov
rcr
lret
cmpsl
or
jmp
add
outsl
clc
adc
sahf
mov
pop
mov
pop
add
push
inc
ret
call
loope
std
or
mov
add
fidivs
xlat
rcrl
imul
sbb
lea
ljmp
sub
addr16
sub
ljmp
aaa
test
fs
push
sbb
xor
lods
bound
aad
or
data16
xchg
and
std
enter
das
hlt
cmp
dec
and
sbb
clc
lods
add
ficompl
fisubl
shlb
xchg
addr16
jl
decl
mov
and
repz
mov
sbb
and
inc
adc
inc
dec
pop
call
jbe
mov
adc
outsl
lock
xchg
loop
int3
and
push
icebp
pop
idiv
push
int
or
push
inc
mov
sub
mov
sub
sti
xor
and
inc
ljmp
push
xchg
adc
aas
push
xchg
add
js
lcall
test
jmp
xor
mov
pop
push
xchg
adc
mov
daa
inc
jae
or
sub
mov
adc
lods
xor
andl
incl
xor
fsub
sub
int3
xor
cmpsl
movsl
out
push
inc
aaa
mov
mov
adc
adc
loop
andl
out
cmp
stc
xor
cmp
call
ret
lods
push
pop
and
sub
mov
lds
push
inc
sbb
idiv
jmp
xor
xorl
jno
idivl
shr
js
test
fldt
pushl
pop
and
add
mov
btc
jp
inc
jo
out
int
mov
ljmp
jmp
push
or
or
lcall
sbb
mov
fwait
jmp
push
icebp
mov
lods
rclb
mov
fmull
inc
push
out
lock
popf
mov
mov
fdivr
fwait
add
xchg
inc
js
push
jmp
aaa
stos
dec
popa
mul
add
outsl
xor
mov
mov
addr16
mov
das
decl
sbb
sub
xchg
dec
push
dec
in
arpl
fldenv
jne
int3
lahf
mov
hlt
dec
xor
pop
add
mov
push
fiadds
outsb
scas
in
sahf
jno
dec
cmp
lret
aad
in
rclb
js
decl
mov
xchg
push
adc
adc
shlb
sub
movsl
sbb
mov
cld
lcall
aam
ficoml
jmp
out
rcrl
lods
es
dec
inc
lcall
mov
push
pop
dec
push
rorl
hlt
mov
out
bts
inc
movsb
frstors
rol
daa
dec
enter
in
mov
roll
inc
addr16
imul
sub
ljmp
mov
mov
ret
xlat
mov
dec
mov
insb
jle
or
pop
pop
popa
decl
pusha
lock
leave
cld
sarl
adc
fstp
jbe
add
jo
push
sbb
mov
lcall
or
mov
lods
add
lahf
fimull
pop
iret
addb
xor
lds
lods
pop
filds
xor
pop
cltd
bound
das
shrb
inc
push
mov
mov
mov
jae
push
adc
stos
in
cmp
bound
sti
mov
mov
int
cmpsb
cmp
sbb
cli
lcall
in
cmp
adc
inc
inc
stos
int3
je
loope
enter
xchg
jg
pushl
out
popf
xchg
sbb
es
mov
out
fsubrs
aam
xor
jmp
add
loop
push
aaa
dec
cmp
or
adcb
int3
int3
scas
inc
sub
jnp
incl
or
ret
mov
lea
jns
push
xchg
inc
cmpsl
iret
stos
movsb
out
aaa
push
dec
inc
mov
jns
in
cmp
xchg
ds
mov
call
push
loop
aam
or
call
dec
mov
pop
data16
sub
add
mov
lret
fsubp
pop
mov
and
or
test
and
incl
repnz
cwtl
sub
cmp
out
sti
iret
and
call
cld
dec
pop
sbb
jb
in
inc
lea
aad
stos
sub
cmc
cli
out
fadd
jbe
cld
lcall
cld
hlt
ja
fiaddl
notl
xchg
lds
jg
dec
dec
scas
movsl
pop
ds
and
addr16
xchg
pop
mov
lret
pushl
lock
int
ljmp
popf
cmp
xchg
xchg
push
insb
sbb
fadds
int
enter
imul
mov
pop
and
out
pop
sub
xor
inc
sub
jnp
popl
sbb
decl
pusha
in
fsubp
and
icebp
into
jb
mov
mov
push
pop
lahf
mov
arpl
dec
js
push
decl
and
jp
lods
jecxz
sti
inc
mov
int3
fs
push
pop
lret
pop
or
sbb
pushf
loopne
adc
test
leave
lock
sti
push
bound
xchg
push
leave
add
mov
adc
mov
push
cmp
pop
add
addr16
in
nop
sbb
out
insb
dec
cmpsb
ret
mov
xlat
test
cmp
sbb
push
mov
lcall
lcall
pop
sub
cltd
and
je
inc
cmp
mov
sub
adc
cwtl
cmp
addr16
xchg
ds
lret
mov
lcall
aam
pop
cmp
mov
inc
popf
and
fistpll
xor
clc
sbb
pushl
mov
shl
lea
addr16
iret
xchg
mov
xchg
dec
add
inc
pop
dec
call
mov
push
ret
out
jp
fbld
mov
dec
test
addr16
negb
lret
xchg
incl
push
dec
popf
imul
daa
lea
or
jg
cmp
dec
inc
and
lcall
dec
decl
dec
mov
sahf
lea
lods
imull
fneni(8087
xchg
test
call
shll
xor
leave
pop
jecxz
ret
cltd
sti
scas
cmp
adcb
or
insb
rcrb
andb
mov
fisttps
sub
das
mov
jns
loop
push
inc
insl
cmp
xlat
nop
adc
mov
pushl
pop
adc
add
sub
inc
cld
pop
pop
add
xor
mov
fldcw
fcoml
dec
loopne
insb
and
xor
movsl
pop
xor
mov
pop
test
out
and
lcall
adc
cmp
loop
imull
sub
scas
xchg
outsb
lea
pop
push
mov
cmp
ljmp
psubw
lcall
imul
adc
adc
mov
mov
adc
jns
xchg
mov
xchg
cwtl
xor
or
cmp
pop
jno
icebp
pushl
cmp
cltd
addr16
ja
inc
xor
mov
pop
inc
inc
sub
push
hlt
push
push
or
xor
lcall
pop
inc
xchg
inc
mov
cltd
xchg
lea
xlat
cwtl
rorl
mov
jb
sub
cmp
pushl
dec
inc
mov
push
xchg
stos
fildl
mov
or
or
js
inc
imul
xchg
mov
in
xor
sbb
ljmp
rcrb
adc
je
and
pop
mov
sbb
sar
mov
mov
loopne
add
xchg
adc
aas
jnp
xchg
xchg
pop
daa
mov
sub
sbb
xchg
ss
gs
jo
mov
dec
sar
ljmp
inc
mov
inc
pop
in
aas
inc
xchg
cmc
mov
arpl
addl
inc
dec
or
add
mov
lcall
pop
jge
fadd
sahf
sub
outsl
incl
xchg
jle
dec
ds
add
arpl
mov
xchg
adc
ljmp
or
push
mov
push
and
pop
sbb
lret
adc
mov
ljmp
sub
in
push
jmp
and
out
ljmp
add
hlt
movsl
mov
lret
ror
mull
pushl
pop
fnsave
mov
enter
shll
inc
or
or
jmp
imull
repz
push
lods
mov
mov
pushf
jg
std
fimull
xchg
push
sbb
mov
push
or
dec
xchg
gs
adc
jecxz
mov
push
inc
mov
into
cwtl
shll
fimuls
mov
pop
jge
or
mov
jmp
gs
jg
push
cmc
imul
scas
cmpb
and
push
mov
push
dec
mov
pusha
push
mov
and
push
add
call
xor
test
xorl
movsl
iret
mov
decl
loope
popf
cld
movsb
mov
push
xchg
sub
xchg
fcoml
movsl
ds
jp
add
les
repnz
jmp
xor
add
cmp
pop
adc
insb
lcall
add
lods
ljmp
sub
ret
add
cmp
mov
leave
mov
pop
sub
inc
iret
out
jl
ljmp
jne
add
fwait
push
pushf
jae
cs
movsl
or
pop
xchg
call
cmpsl
mov
js
in
inc
sub
jno
push
lcall
test
loope
repz
lock
mov
pushl
mov
push
sub
cli
pop
and
popf
popf
ret
sub
mov
ljmp
push
cmpsb
jne
xorl
cltd
mov
cmp
fsts
imul
decl
sub
adc
mov
aaa
dec
pop
xchg
sbb
mov
mov
in
ret
inc
jecxz
subl
ret
shrb
xor
push
push
and
rolb
in
rcr
push
shlb
mov
push
add
aas
jmp
movsl
lcall
push
imul
aad
fwait
sbb
arpl
hlt
imul
mov
pcmpeqd
cld
pushl
or
movsb
jl
cli
add
fs
sbb
and
lret
fisubrl
or
incl
lret
mov
and
mov
gs
xor
jns
push
lods
or
repz
jl
xchg
sahf
fs
lcall
out
sub
add
cmp
mov
int3
shll
dec
in
dec
push
inc
mov
sub
cmp
rcrl
rcl
jmp
aam
pop
out
adc
arpl
shll
in
jge
lcall
decl
sbb
ret
or
lds
dec
jbe
repnz
in
push
sub
mov
add
mov
aaa
pop
in
inc
ficompl
adc
decl
outsb
cmpb
jo
xchg
aaa
aad
cmp
dec
cli
pop
and
and
push
mov
adc
in
inc
pop
cmpsl
jno
ljmp
repnz
or
ss
pushl
loopne
loopne
gs
pop
cmpsb
jp
pop
pop
cwtl
stos
xor
or
stc
inc
mov
ret
cmp
sub
lcall
mov
aas
cmpsl
aas
xchg
addb
insb
movsb
mov
mov
and
mov
jb
pusha
cli
mov
or
jl
pushf
mov
mov
jnp
sub
andl
mov
lods
gs
ljmp
icebp
ficomps
pop
popf
data16
lock
sub
push
rcrl
orl
dec
xlat
mov
push
in
jmp
or
addr16
add
js
inc
xchg
mov
sbb
lret
sub
pop
into
mov
pop
sahf
daa
lret
pop
addl
shl
push
fwait
xor
rcrl
daa
jns
xchg
push
cld
jg
fs
call
mov
sbb
mov
sub
dec
fidivs
mov
sbb
fs
test
inc
lds
jg
popa
xchg
push
outsb
mov
lret
push
mov
sub
imul
mov
in
fcoml
sbb
movsl
pop
pop
mov
dec
rol
insb
outsl
mov
jns
aas
hlt
in
test
int3
add
nop
sahf
in
xor
mov
sbb
ja
pushl
pop
mov
sub
shrb
enter
inc
mov
sbb
pop
pop
jns
pop
std
lcall
jb
inc
mov
imul
or
das
in
fsubs
call
into
sbb
and
ss
inc
lods
cmp
jmp
mov
pop
xor
pop
sarl
mov
xor
add
fists
push
sbb
aas
call
add
stos
xchg
sub
jle
dec
jmp
mov
lcall
pop
push
out
mov
cmp
imul
sarl
adc
sbbl
mov
mov
cmp
dec
pminub
pushl
push
mov
add
jl
and
js
test
cmp
sahf
and
loop,pn
add
and
jne
sbb
push
insl
fisttpll
sub
ret
fs
dec
scas
aad
mov
inc
jbe
lea
adcb
cltd
in
jae
inc
mov
adc
lcall
shrl
lahf
and
dec
pop
and
pcmpgtw
adc
push
jb
clc
dec
sbb
lds
lds
enter
outsl
out
push
jle
mov
jle
push
sub
aas
iret
subb
pushl
inc
outsb
cli
cmc
orl
nop
iret
sbb
movsl
aas
mov
adc
fildll
mov
scas
or
pop
ss
in
movsl
iret
xchg
insl
mov
mov
ljmp
pop
pop
jecxz
lret
arpl
jne
iret
add
lahf
jnp
adc
std
jg
scas
mov
pop
in
mov
add
xchg
jge
xor
push
repnz
sbb
jmp
out
cli
pop
or
push
fadds
add
sbb
repz
mov
sbb
xor
inc
lods
test
icebp
push
or
jo
sub
mov
jge
popa
in
ljmp
mov
popf
ljmp
xlat
pop
loopne
jecxz
scas
mov
or
lahf
es
fmull
cs
rcl
enter
push
fsubp
jp
jp
popa
cmp
stos
sbb
mov
in
adc
fists
sbb
insb
mov
xor
jo
nop
sbb
sub
scas
lods
clc
mov
mov
and
sahf
imul
add
cmp
mov
lcall
ficoms
ficomps
fistpl
sbb
call
and
xor
out
notb
icebp
sub
sub
add
fisttps
stos
stos
dec
jno
or
cmp
fcoml
jge
fstps
decl
or
insl
repnz
xchg
clc
out
push
arpl
xor
insl
adc
decl
jno
fnstenv
sti
sbb
mov
jno
xlat
and
pop
negb
push
mov
lret
rcll
bound
movsb
popa
dec
insb
cwtl
push
jg
jl
aas
loopne
adc
aaa
push
subl
neg
shlb
insl
mov
pushl
sbb
lcall
dec
popa
jl
dec
loop
mov
pop
or
decl
sbb
mov
push
mov
sbb
pop
pop
sbb
adc
xor
test
addr16
lcall
cmpsl
jle
jbe
mov
or
cmp
popf
mov
shlb
aam
xchg
mov
cmp
adc
in
mov
shlb
push
mov
pop
mov
push
add
ljmp
stos
mov
scas
mov
push
fsubs
mov
sbb
imul
lods
call
jns
adc
es
scas
mov
or
mov
cmpsb
imul
ret
lahf
push
incl
mov
lcall
stc
jmp
adc
sbb
jp
hlt
dec
mov
shr
sub
or
incl
or
lods
cli
popa
sahf
cmp
pop
decl
pop
shlb
fldenv
andl
adc
adc
decl
jg
cli
call
arpl
cltd
stos
int
mov
cmp
sbb
sbb
or
lcall
push
loope
or
decl
and
aam
jne
aaa
in
scas
mov
mov
mov
pop
pop
push
cmpsl
in
and
cmp
dec
adc
aaa
clc
mov
or
ud0
loopne
adcl
or
push
lods
xchg
and
loop
jnp
fnstenv
sbb
idiv
hlt
out
js
incl
or
adc
call
sahf
mov
xor
cmpsl
adc
stc
int3
or
mov
ret
adc
xor
leave
or
fwait
add
push
mov
ljmp
insl
movl
scas
rolb
cmpsb
cmp
test
add
decl
rorl
push
add
mov
rol
dec
arpl
nop
ljmp
or
add
pop
les
lret
mov
roll
jg
daa
add
pop
push
cwtl
mov
xchg
in
sub
mov
mov
or
fstl
movsl
push
lret
cmc
jg
jbe
arpl
cmp
movsl
imul
repnz
jmp
lcall
ds
xor
jle
jp,pt
push
xchg
fucomi
sbb
and
push
xor
add
jmp
ret
mov
rcll
lahf
mov
xchg
mov
mov
rcrb
xchg
cwtl
pop
shl
js
mov
aam
mov
cmc
adc
mov
cmp
pop
xchg
dec
cmp
dec
jae
cld
aad
adc
adc
push
mov
decl
mov
cmp
jns
and
sub
inc
inc
adc
lcall
push
mov
aad
sub
cs
push
add
xchg
test
jbe
mov
pop
out
clc
incl
mov
lret
mov
xor
mov
lahf
fs
jnp
adc
jge
cwtl
clc
decl
fists
fs
push
cmpsl
into
cli
ljmp
scas
push
jbe
pusha
xlat
cmp
inc
push
jne
sbb
out
fisubrl
icebp
ljmp
cmp
fucomi
mov
rol
xchg
dec
ds
loope
fwait
sbbb
inc
incl
push
xchg
sbb
cmp
xor
fcmovne
and
add
cs
inc
adc
sahf
in
and
or
sub
adc
mov
push
or
out
mov
cld
mov
decl
lret
imull
mov
inc
add
outsl
in
xor
xor
adc
flds
cs
push
fxch
out
jmp
cmp
jbe
push
xchg
push
stos
jle
enter
or
ss
es
xor
lcall
push
repnz
xor
mov
xchg
mov
icebp
insb
adc
or
incl
push
test
inc
cld
and
mov
adc
mov
nop
mov
inc
or
pop
xchg
pop
xchg
mov
jmp
leave
mov
adc
push
clc
repnz
xchg
mov
sbb
push
add
mov
aaa
push
pop
add
pusha
mov
jmp
fs
adc
decl
and
push
adc
or
push
lahf
sbb
dec
ror
sub
aas
iret
sub
insb
lahf
jmp
pop
and
lcall
lret
jg
loop
pop
dec
add
ljmp
ficomps
cmpsb
mov
lods
rcll
imul
lret
fildll
xor
mov
pop
jo
pop
and
or
mov
and
std
mov
jmp
add
stos
mov
and
outsl
arpl
inc
dec
push
shll
push
rcrl
std
fists
cmp
xor
add
bsf
in
xchg
pop
xor
scas
fisubl
sbb
cmp
rcll
cmp
addr16
cld
inc
sub
push
mov
mov
into
sbb
pop
out
outsb
pop
imul
jmp
out
clc
ja
in
lods
hlt
add
movsb
insl
sub
or
ffree
fmuls
mov
push
rcrb
xor
ja
xor
add
or
stc
mov
test
push
imul
decl
fisubs
pop
lds
clc
fmul
ds
or
lret
iret
mov
cld
cmp
cmp
cmpl
and
mov
jmp
leave
stos
or
scas
pop
pusha
dec
daa
fldl
std
lock
fstpl
and
jnp
faddl
shlb
inc
xchg
lods
addr16
repz
mov
incl
outsl
pushf
orb
dec
fisttps
fcoms
pushl
cmpsl
inc
xchg
pushf
xchg
fs
fildl
aaa
hlt
setno
xchg
and
jo
out
clc
adc
jg
popf
shll
std
inc
push
mov
lock
loopne
or
iret
sub
nop
lcall
add
lret
test
insb
fnstcw
mov
ja
xchg
ja
mov
cmpsb
cmp
inc
sbb
sar
sbb
orl
xor
jmp
addr16
mov
dec
sub
pop
add
fcoml
jmp
push
jg
jns
data16
lret
add
mov
sub
sti
in
shlb
cli
decl
les
sub
xor
xor
fisubl
sbb
iret
cmp
or
sub
into
push
les
cli
inc
pop
inc
cmp
pop
mov
jns
push
mov
call
jg
mov
andb
jmp
lcall
mov
mov
imul
leave
and
hlt
ljmp
mov
mov
repnz
jle
mov
call
xchg
or
inc
call
jmp
daa
mov
jae
in
xchg
push
mov
das
stos
xor
lret
lcall
ss
and
js
aas
out
add
push
pop
jle
ret
popf
inc
ljmp
call
ljmp
fstps
sbbl
mov
sbb
xor
xchg
decl
fisubrl
int
xor
aaa
xor
jmp
cmp
push
std
jmp
and
fs
push
mov
or
sbb
lret
push
fdivl
adc
ljmp
adcl
stos
repz
mov
inc
mov
ret
out
sti
imul
mov
les
jmp
das
pop
lcall
dec
xor
jmp
call
push
xchg
movsl
mov
and
xor
fwait
movsl
into
xlat
andl
and
hlt
cmp
dec
mov
pop
ljmp
ret
mov
and
aas
add
adc
incl
jg
in
cmp
lea
fucomip
lock
or
xchg
sarl
jns
cmp
lods
adc
inc
sbb
in
cmpsb
notb
addr16
sub
loopne
inc
test
mov
mov
or
pop
cld
fbld
sub
in
pop
cld
repz
jmp
dec
sti
cmp
fisubl
pop
cmp
push
enter
iret
loope
stos
pop
mov
push
add
fcomip
filds
sbb
test
pop
cmp
pop
xor
add
cmp
jle
imul
dec
or
in
jbe
aad
loop
push
dec
adc
lcall
incl
pop
jle
push
jl
scas
jnp
out
mov
int3
addr16
xor
shll
ljmp
xlat
rolb
add
imul
test
imul
pop
push
test
sar
mov
insb
mov
loope
cmp
lahf
std
inc
push
ret
ljmp
adc
add
call
adc
inc
notl
push
or
fisubrs
push
push
push
incl
scas
mov
fs
sbb
es
mov
pop
push
sub
push
cld
lcall
inc
mov
jae
test
cmp
loope
mov
mov
push
or
and
mov
stos
stos
push
adc
ret
loop
sub
div
adcl
sti
mov
mov
mov
or
ficoml
jns
stc
into
cld
pop
jmp
jno
xchg
and
fmul
mov
push
fdivrl
ret
xor
mov
ja
clc
fwait
shrl
or
std
xchg
ljmp
pop
lcall
mov
fstpl
outsb
test
mov
test
lock
aas
lahf
fstpl
inc
arpl
imul
icebp
dec
cmp
dec
sbb
out
adc
or
stos
mov
dec
xchg
adc
popf
fdivrl
hlt
adc
pop
cmpb
sbb
push
push
pop
sbb
fnstsw
lds
lods
mov
lret
paddsb
and
cli
mov
jmp
cmp
push
jg
ljmp
adc
pop
xor
fstl
pop
lret
popf
sub
gs
jg
imul
dec
cmp
mov
fidivl
in
pusha
fstl
decl
lods
popf
insb
xchg
push
sbb
jecxz
imul
mov
rorl
mov
test
in
mov
loopne
sub
in
jl
xchg
fwait
lcall
bound
ret
and
push
jne
dec
inc
add
std
jmp
std
sub
sub
mov
pop
cmp
sar
iret
idiv
fistpll
xor
jmp
jnp
fs
jl
jb
sub
pop
test
push
addr16
push
xor
mov
out
ret
mov
lret
fsubl
cltd
jmp
in
push
lea
dec
pusha
sbb
aad
lock
daa
push
mov
inc
in
xchg
daa
decl
cmp
mov
sbb
gs
lret
adc
cli
adc
call
cmp
fdivl
push
dec
pop
sar
addl
cltd
sbb
out
clc
lcall
clc
icebp
std
or
lods
inc
test
jno
dec
or
aas
jl
push
repnz
lahf
cwtl
pop
xchg
mov
sbb
dec
pop
sbb
sub
scas
jg
lcall
or
jb
inc
fisttps
xor
in
std
nop
mul
sbb
pushl
cld
sbb
js
xlat
orb
add
outsl
cmpb
pushl
xor
mov
shrl
sub
fnsave
scas
dec
lds
sbb
inc
or
sbb
cmp
leave
stc
stos
arpl
ss
enter
lock
mov
jp
call
dec
push
sbb
in
cli
jb
xchg
loope
xlat
mov
mov
cmp
in
or
jg
pushl
orb
js
outsl
mov
emms
xchg
mov
inc
gs
pushl
mov
repz
fsubl
push
gs
fcompp
test
test
stos
mov
dec
xchg
lret
das
mov
jno
paddd
stc
arpl
outsb
or
jg
sti
cmp
mov
mov
mov
rorb
adc
cs
icebp
fcmovne
adc
cli
lcall
lock
mov
cmp
push
cltd
shlb
add
pop
push
jge
sahf
push
clc
mov
xor
sub
adc
int3
jl
xor
push
imul
in
ds
test
push
or
cmp
lea
imul
xchg
or
xor
push
loope
hlt
lods
fstl
ds
fldt
cmp
sub
sbb
mov
cmpsb
bound
jbe
xor
pushl
sbb
imul
sbb
loopne
and
pop
std
div
data16
cmc
call
testb
outsb
pop
adc
jne
mov
or
jg
push
or
dec
pop
adc
fsubl
jb
add
inc
jnp
pusha
mov
dec
inc
push
sbb
sti
test
cmp
repnz
ljmp
subb
sbbb
sub
sbb
sbb
mov
sub
mov
call
pushf
sbb
push
cli
lret
in
xchg
jl
cwtl
jg
hlt
shlb
push
lret
cli
movsb
lret
mov
sub
test
loopne
lret
loop
dec
mov
and
lret
jg
and
into
int
mov
add
inc
mov
mov
mov
dec
ds
or
mull
adc
adc
xor
or
mov
pusha
dec
mov
push
mov
data16
cli
fsubrs
inc
int3
jmp
and
lea
into
fs
hlt
daa
add
ljmp
or
mov
pop
pop
stos
nop
jno
push
mov
xor
add
stc
push
stc
sahf
xor
jg
xorl
js
ffree
ljmp
push
repnz
int
imul
cmp
mov
loopne
es
das
or
les
or
mov
ds
mov
adc
cmpsb
fs
into
mov
add
push
or
lcall
jl
push
push
sbb
jg
cs
sub
out
rclb
sti
jnp
jmp
movsl
test
cs
and
adc
cmpsb
gs
call
bound
scas
loopne
mov
ja
pop
cmp
insb
and
jb
and
add
or
pushl
sub
insb
call
lods
int
mov
add
or
cli
js
arpl
fnsave
aaa
mov
dec
mov
into
out
pop
dec
lock
ljmp
push
js,pn
adc
call
dec
scas
jns
xchg
dec
das
das
jg
inc
xor
lods
ret
or
cli
icebp
xor
push
mov
leave
stos
or
add
bound
jmp
filds
jle
jl
mov
lcall
pop
xchg
aad
and
decl
jno
popf
inc
imul
push
pop
es
xchg
cmpsl
sarb
push
cmp
xchg
xchg
sub
ljmp
xchg
test
subb
sbb
incl
jae
int
mov
cmp
mov
rcll
push
mov
lods
loop
decl
xchg
sub
int3
sbb
mov
push
adc
mov
hlt
xchg
mov
ljmp
inc
pusha
cli
lea
cmp
stos
sub
pop
ret
pop
clc
push
jecxz
push
lcall
test
movsl
cmp
fwait
xchg
and
xor
push
popa
cmpsw
out
rorl
mov
lcall
scas
inc
pop
mov
stc
sub
jbe
pushf
jle
push
pop
ret
or
mov
jb
sbb
inc
rcll
std
cmp
test
pop
xchg
call
sub
jbe
xchg
add
mov
or
pop
arpl
add
fs
add
mov
add
mov
add
aad
insb
pop
jb
sti
cmp
in
fs
sbb
ret
push
stc
mov
pop
pop
xchg
clc
stc
lret
outsl
mov
icebp
push
mov
mov
or
inc
incl
add
sbb
inc
cltd
rorl
inc
mov
and
sbb
pop
and
mov
incl
sub
std
pusha
adc
or
xchg
mov
add
call
shll
jnp
mov
sub
fcmovne
or
mov
pop
test
int3
mov
fcos
jmp
ss
fildll
leave
jne
xor
xchg
jl
iret
xchg
leave
fwait
or
xor
mov
lcall
mov
mov
dec
sbb
push
mov
push
sbb
jbe
ret
cld
cld
outsb
ja
dec
sbb
push
gs
xchg
lret
lcall
lcall
mov
inc
adc
orl
imul
repz
sub
fs
addr16
jae
pop
cmc
flds
jmp
enter
fsubrl
xor
lods
out
jg
cmp
mov
stos
push
sahf
arpl
push
cmp
push
xchg
iret
cmp
cmp
rcl
fisttpl
idiv
out
out
push
or
pop
mov
imul
dec
mov
fbstp
dec
jmp
scas
hlt
movsl
push
cmc
cwtl
sub
inc
outsl
xchg
daa
hlt
ljmp
mov
hlt
into
lds
mov
ret
sti
dec
lret
rcrb
andl
shrl
mov
outsb
mov
add
pop
xor
cmc
add
shl
inc
cmp
lcall
mov
movsl
mov
pop
jecxz
mov
hlt
push
mov
add
dec
sub
or
sbb
push
cli
lret
inc
insb
xchg
popa
sti
and
mov
push
gs
test
loope
lcall
mov
ds
loope
xchg
call
jmp
pop
mov
lahf
sbb
mov
mov
cmpsb
sub
mov
decb
mov
aam
stos
ret
cmp
push
pop
pop
cmp
dec
scas
stc
lods
mov
and
jg
xchg
cmpl
daa
stos
pop
cmp
mov
filds
pushl
xchg
enter
clc
loop
xor
push
test
stos
stc
fsubrs
jecxz
fs
mov
mov
ljmp
fistpl
and
iret
scas
jl
call
loopne
outsb
scas
std
aam
sub
adc
jmp
les
adc
inc
arpl
stc
mov
mov
decl
leave
mov
dec
gs
fdivrp
add
jg
push
stos
push
and
fs
ljmp
cli
dec
xchg
ljmp
dec
lods
dec
jg
sti
xor
movsb
ss
jmp
push
pushl
mov
mov
dec
cmp
leave
in
cmpsb
loop
fdivs
xor
jmp
fdivs
jne
sub
jl
jno
add
jae
cwtl
inc
dec
pop
cwtl
call
pop
hlt
inc
pop
sub
lcall
rol
push
or
dec
sub
loop
jl
test
iret
jle
xchg
push
dec
dec
xor
mov
push
inc
scas
cli
push
sarl
insl
xor
test
fmull
cmp
cmp
and
cmp
jg
mov
adc
lea
pushf
sbb
adc
ja
std
incl
je
das
push
cmpsl
xor
rcr
adc
lods
in
xchg
daa
xor
pop
test
aaa
std
mov
adcl
and
cmpsl
xchg
adc
inc
or
sbb
in
inc
cmpsl
movups
in
push
push
push
and
cmp
stc
pop
sbb
pop
popf
inc
adc
rorb
push
nop
cmp
repnz
fmull
lret
dec
mov
jb
icebp
jecxz
fwait
mov
push
jle
aaa
xor
and
push
cmp
enter
incl
je
arpl
cmpsl
adc
xchg
and
adc
and
mov
test
jmp
mov
sahf
leave
cmp
xchg
cld
lock
ja
ja
rcrl
jmp
sbb
xchg
pop
pop
mov
pop
stos
enter
xlat
scas
in
test
jbe
js
in
cmp
out
icebp
hlt
inc
popa
pop
aam
pop
nop
jo
ljmp
in
cmp
mov
jmp
xchg
addr16
mov
bts
mov
mov
inc
mov
mov
pushl
sub
cmpsb
mov
lcall
idivb
pop
mov
mov
mov
stos
dec
cmp
or
in
push
sbb
xchg
push
ljmp
mov
mov
sbb
dec
push
and
cmc
cltd
xchg
inc
or
xor
ljmp
repz
push
fildll
in
mov
mov
add
std
sub
cs
incl
cmp
or
je
ljmp
adc
push
fsubrs
les
pushl
mov
push
and
cmpsl
in
mov
dec
pop
insb
adc
cmp
filds
xor
roll
inc
jle
ds
mov
fsubr
out
dec
in
jmp
mov
popa
cwtl
enter
jp
jnp
sub
or
mov
cltd
fdivrs
push
inc
inc
add
test
jp
cmp
cmpb
sub
fcomip
jmp
push
int3
fbstp
movsl
int3
decb
scas
in
ret
out
leave
or
adc
out
lock
fisubrl
sbbb
sahf
pop
iret
loope
jns
outsb
testl
sbb
dec
sub
adc
dec
pop
cmovl
sti
pop
rcr
adcl
js
inc
dec
sahf
push
cmpsb
cmc
jae
mov
sub
mov
xlat
in
test
jbe
fisttpll
xchg
aad
bound
div
xchg
jbe
sub
fwait
popf
pop
stos
shlb
sahf
aaa
fcoms
scas
jg
cmp
daa
fiaddl
push
mov
mov
pop
fstpt
ja
ljmp
movsl
icebp
mov
inc
je
mov
movsb
sub
jo
xchg
les
insl
outsb
loopne
cld
ljmp
or
lret
orl
lods
sub
pop
int3
cli
ljmp
outsl
and
adc
push
hlt
dec
or
mov
out
scas
cmpsl
movsb
inc
stos
jb
repnz
xchg
mov
adc
jno
outsl
mov
incl
mov
add
xor
scas
inc
mov
decl
daa
je
dec
mov
out
addr16
scas
jb
push
mov
sub
jmp
loop
ljmp
add
and
xlat
jns
xchg
mov
stc
dec
int3
add
mov
decl
lock
ret
in
pop
or
xchg
stos
mov
addb
cld
cltd
call
xchg
xor
dec
xchg
add
jae
dec
out
dec
sbb
cmp
sbb
popf
cmp
addr16
cmp
xor
inc
in
jbe
fs
das
or
lcall
fimull
dec
xor
testb
adc
std
sbb
incl
jl
scas
dec
xor
mov
out
in
push
pop
bound
insb
es
pushl
cmc
add
or
lret
call
rclb
scas
pusha
xchg
hlt
testb
gs
std
inc
mov
fs
stos
xor
and
mov
movsb
and
rcrl
aas
sbbb
adc
jl
push
cld
xor
daa
loop
jg
arpl
ret
jae
ljmp
jbe
push
out
or
sbb
call
ficoms
jecxz
pushf
movsl
test
cmp
adc
mov
pusha
jne
xchg
pushl
out
loopne
je
adc
lods
xlat
addr16
cmpsl
cs
test
cmpsl
das
dec
dec
in
pop
cs
ljmp
leave
jae
hlt
cmp
out
sbb
into
lods
pop
out
fstpt
inc
out
push
push
in
call
mov
imul
push
and
mulb
lret
scas
push
lods
pushl
jg
cmp
repnz
fsub
push
sti
cmp
mov
cld
ja
loope
std
iret
test
add
lods
int3
or
fistl
mov
mov
pop
test
dec
pop
addr16
push
jnp
ret
in
lock
cmp
dec
rcr
cmp
loopne
adcl
in
les
orb
nop
loopne
mov
dec
lods
jmp
push
movsb
aas
xlat
inc
xchg
repnz
xor
dec
inc
leave
cvtdq2ps
adc
fstpl
jmp
dec
sbb
enter
push
pop
mov
or
out
loop
pusha
ds
jg
in
adc
sub
xchg
or
xor
repz
mov
mov
loope
xchg
cmc
push
adc
xchg
mov
push
enter
shlb
pop
jg
jmp
nop
sarl
std
ret
daa
imul
scas
call
pusha
jo
pop
jecxz
ljmp
add
out
push
ret
sti
adc
mov
add
mov
les
cld
addb
cmp
pop
imul
dec
repz
aad
pop
bound
fsubp
sar
incl
shll
adc
jns
pusha
out
xor
jmp
mov
data16
push
lcall
add
das
sbb
push
pusha
popa
xchg
mov
das
out
jno
add
ljmp
mov
jns
mov
dec
int3
pop
leave
insb
and
lcall
bound
fcmovu
lds
mov
push
into
dec
pop
inc
lock
adc
dec
fnstsw
push
mov
push
arpl
add
mov
jo
push
ret
clc
jno
inc
lcall
std
mov
xor
lahf
fwait
out
adc
dec
jnp
pop
mov
sti
fiadds
stos
add
jle
mov
or
test
das
inc
ja
decl
shrl
xchg
rclb
iret
mov
push
sbb
add
js
push
inc
outsb
push
dec
mov
imul
pop
dec
adc
icebp
fsub
jmp
call
or
push
into
shll
outsl
sub
vmovhps
cmp
gs
popf
xchg
sub
sbb
mov
ror
ret
out
enter
addr16
add
cmpsb
cmovge
fldt
or
pop
movsb
xchg
xor
dec
pop
cld
cli
iret
insl
lds
inc
mov
add
adc
aad
push
scas
idivl
call
sub
movsb
add
fildll
scas
shl
outsb
cmp
mov
jns
js
sbb
jecxz
outsb
or
dec
jle
fldt
mov
lods
fbld
popa
leave
sbb
jne
sbb
xchg
pop
push
xor
jle
sbb
movsl
outsl
jmp
or
add
call
jno
xchg
push
inc
push
dec
jne
pop
inc
insl
xor
cld
call
push
fnstenv
movsb
fmull
ljmp
scas
push
sarb
lock
incl
pushl
lods
add
xor
cmpsb
sbb
push
cwtl
or
push
movsl
add
cmc
fdiv
out
sbb
jmp
aas
ja
ja
jbe
pusha
adc
cmp
loopne
cs
std
int3
jo
sub
pushl
cmpsl
out
cmpsb
xchg
ja
cmp
sbbl
sub
mov
jg
cmpsl
pop
and
fbld
xor
xchg
xchg
loopne
es
inc
mov
out
dec
and
adc
sbb
stos
or
xchg
mov
enter
xor
push
pushl
dec
push
lds
dec
pop
imul
int3
push
sti
mov
inc
enter
decb
cwtl
sar
js
xchg
hlt
inc
loope
push
lock
mov
jecxz
cmp
and
sbb
sub
ds
jp
mov
sbb
pusha
or
aaa
fisubs
mov
daa
aas
mov
mov
push
rclb
fwait
dec
adc
jmp
xchg
pop
gs
out
sbb
mov
leave
test
jns
sub
add
incl
cld
lcall
les
daa
pop
or
inc
stos
xor
inc
jp
dec
push
mov
add
cmp
jae
mov
in
xor
mov
mov
mov
mov
push
stos
out
clc
push
cmp
pop
repnz
mov
jmp
addr16
push
jle
or
lods
xchg
fcomps
mov
lea
pop
lcall
pushl
push
or
lcallw
mov
movsb
add
cmp
call
jne
xchg
cmp
jbe
sbb
sub
adc
out
out
fisubrl
jno
adc
inc
mov
movsw
sub
xchg
pop
cmp
clc
int
and
je
lods
in
stos
jle
mov
incl
rcll
jp
loope
and
mov
cmc
call
arpl
pushl
mov
add
mov
int3
mov
mov
insl
pop
jne
sbb
jmp
ja
std
pop
sbb
dec
stos
pop
sub
clc
stos
mov
dec
sti
mov
jmp
push
sub
mov
jl
xchg
mov
addr16
imul
ljmp
jle
inc
in
mov
xlat
push
push
gs
xlat
imul
xchg
sti
in
add
cmp
sbb
outsl
stc
jmp
pop
cmc
jb
in
shr
lcall
rcr
mov
sub
rcrl
pop
fbld
mov
sub
lcall
clc
imul
iret
imul
dec
dec
inc
mov
call
mov
push
out
jnp
xor
mov
cs
adc
popf
fcomi
mov
test
pushl
clc
rcr
xlat
inc
or
mov
shr
inc
sbb
fld
inc
sbb
xlat
nop
scas
pusha
cld
sub
jnp
shll
iret
xchg
jg
nop
int3
dec
insb
pop
repz
rcr
incl
inc
jp
repnz
ss
fwait
nop
dec
orl
jp
in
loopne
test
sbb
jle
inc
pop
popa
mov
mov
sub
mov
fs
orb
lcall
push
mov
mov
cld
add
cwtl
jge
notb
addr16
or
insl
js
decl
test
sahf
or
addl
mov
jge
dec
or
lahf
stos
in
sub
or
into
mov
lret
add
data16
sahf
mov
jo
sub
inc
sbb
pop
ss
sub
pop
or
cmp
or
adc
iret
inc
cmpsl
mov
cvtps2pi
adc
fnstsw
pop
push
pusha
xchg
fnstsw
jno
daa
loope
jge
enter
hlt
jge
in
dec
lds
lock
ds
adc
mov
dec
mov
push
inc
dec
in
pop
push
cli
jg
cmpsl
aad
hlt
in
gs
adc
jg
push
lret
push
mov
mov
cld
movsl
mov
xchg
cmpsl
aas
aaa
jmp
cli
lret
rorl
rcrb
and
xchg
xchg
push
out
fisubrs
fs
xchg
inc
adc
ljmp
ds
sub
add
test
inc
das
pop
inc
sbb
subb
mov
lods
in
xchg
inc
pop
loop
into
pop
jl
push
cmp
push
jp
jmp
aas
sub
adc
sub
dec
push
add
and
mov
pop
data16
jecxz
jbe
jmp
lcall
push
nop
inc
inc
xchg
sub
pop
mov
fimull
sar
push
test
lcall
dec
add
push
in
adc
pop
jno
mov
mov
ljmp
clc
inc
mov
mov
sbb
aam
sub
outsl
mov
neg
icebp
scas
jg
loope
push
rolb
and
in
pushl
mov
mov
roll
adc
xchg
mov
mov
insl
mov
das
cli
lcall
push
imulb
aaa
dec
sbb
in
daa
add
fcmovb
or
decl
call
scas
outsb
lcall
pop
jno
fcmovnu
pushl
or
mov
das
mov
ss
sub
xor
int
mov
sbb
mov
sbb
push
inc
inc
mov
loop
insl
push
push
ffreep
mov
cwtl
shlb
cmpl
push
aas
fsubrp
jp
mov
cmp
bound
and
or
and
or
sub
cmp
loop
cs
ja
lds
cmc
cld
jmp
pop
mov
incl
sar
sub
jl
mov
xchg
xchg
cmp
mov
cmp
fcoml
test
ljmp
mov
jmp
fldt
cld
dec
loopne
xorl
out
shlb
repz
fsubl
mov
aad
aaa
aad
ret
xchg
inc
stos
out
mov
call
or
dec
pop
cwtl
addr16
jle
mov
inc
mov
ljmp
ljmp
mov
lret
jno
sbb
mov
or
loopne
leave
xorb
cmp
faddp
dec
or
add
push
pop
test
test
fcomip
add
cmp
lret
adcl
dec
sub
ss
lcall
xlat
pop
or
jno
sbb
xor
enter
inc
push
xor
jg
jp
xor
xchg
cld
or
mov
test
cld
dec
and
jmp
in
xchg
or
mov
repz
ss
lcall
faddl
insl
daa
dec
js
cmp
mov
sub
mov
fstpt
loopne
decl
dec
cmp
lods
stos
dec
push
and
jnp
pop
push
cmc
and
js
fisttps
shlb
jmp
lahf
jbe
mov
into
leave
je
fistpl
jp
mov
sub
mov
repz
mov
fcomip
lcall
hlt
mov
sbb
cmp
xchg
sub
or
popa
sub
pushl
lock
pop
addl
mov
sbb
lock
jmp
xor
inc
out
js
pop
xchg
push
push
lock
lcall
mov
adc
aas
fdivs
nop
cltd
mov
rcll
push
and
js
or
mulb
imul
in
mov
mov
test
adc
or
out
push
push
pop
push
lcall
inc
das
mov
sbb
jb
sub
fisttpl
push
shl
jmp
ljmp
sub
les
dec
jns
aad
xor
mov
test
pop
jo
fs
outsl
aaa
sbb
or
mov
rclb
movsl
inc
adc
pop
mov
xchg
sub
pushf
fcom
lahf
pushf
mov
je
repnz
pop
adc
lods
add
xchg
call
cs
jg
sub
mov
mov
and
iret
lock
ret
mov
clc
xchg
adc
shll
sahf
andl
cmp
sbb
push
adc
mov
push
push
ja
test
xchg
mov
inc
insb
xor
std
jns
imul
flds
std
ljmp
add
lods
jge
mov
push
cmp
aam
jle
loope
mov
repz
pushl
pop
jnp
fstpt
das
gs
pop
pushf
mov
xor
jbe
jno
cwtl
mov
dec
mov
xor
test
iret
clc
ljmp
add
cmp
xor
cmp
lcall
xchg
repnz
push
out
imul
sbb
jae
dec
adc
les
jae
ljmp
incl
stos
cmp
mov
mov
push
pop
out
cmp
imul
pushl
or
outsb
cmp
movsb
adcb
push
ret
sbb
std
mov
mov
dec
jo
mov
cli
jp
xchg
icebp
in
stos
in
dec
ret
bound
xchg
les
stc
out
push
hlt
adc
es
loop
adc
push
mov
fsts
and
mov
dec
fs
inc
decl
jno
test
mov
push
clc
rol
lds
jb
or
cmp
cli
inc
lcall
mov
pop
popf
outsb
es
data16
or
inc
and
pop
mov
xor
mov
push
sbb
rcll
cltd
or
fldt
imul
push
cmp
jg
pushl
push
xor
adc
in
jmp
les
je,pt
jns
aaa
rolb
decl
outsb
std
sub
inc
ja
aas
push
mov
inc
js
inc
insl
jmp
je
xchg
mov
jg
push
lcall
inc
sub
add
pop
xor
leave
das
push
dec
xor
adcl
sub
test
lods
jb
cmpsl
adc
mov
fs
sub
fnstcw
mov
mov
dec
and
imul
test
add
add
inc
jno
or
sbb
daa
loopne
pushl
xor
movsl
jmp
pop
jo
cmp
jmp
cmp
pop
xchg
xorl
ljmp
pop
lcall
jo
xlat
adc
pop
mov
mov
sub
test
cli
test
add
mov
xor
adc
stos
and
lcall
dec
or
or
loope
sbb
and
dec
mov
push
push
xlat
insb
push
inc
or
sub
je
dec
add
lret
xchg
cmpl
jae
mov
stos
jae
bound
imul
pop
mov
add
imul
fisubrs
insb
or
ds
add
adc
shrl
lds
icebp
or
shrb
or
nop
loope
jb
into
or
add
sbb
sub
mov
jle
sbb
inc
imul
push
dec
jo
daa
sbb
sub
dec
gs
pop
rol
gs
outsl
outsl
insb
push
push
jo
push
outsb
popa
jo
push
mov
leave
mov
push
jnp
sub
or
insb
xchg
push
js
or
pop
inc
scas
ret
and
or
aaa
push
popa
shrb
in
lds
or
jns
push
inc
test
sub
inc
push
lods
pop
adc
sub
dec
ljmp
dec
add
jp
popa
mov
insl
insl
xchg
adc
xchg
cmpsl
and
add
jo
or
sub
adc
cltd
cltd
jl
loopne
sub
clc
or
imul
int
imul
inc
sub
inc
or
mov
sub
pop
out
push
outsb
flds
sub
sub
or
mov
arpl
mov
inc
or
insb
or
cs
bound
jo
outsl
mov
dec
adcl
pop
lds
addl
xchg
fistl
inc
testb
lods
loop
lock
dec
xorb
jbe
test
push
fildl
push
pop
add
pop
push
mov
sarl
jo
and
push
jne
subl
and
in
pop
jb
sbb
mov
xchg
cmp
xchg
adc
sbb
push
push
hlt
inc
sub
inc
jecxz
mov
dec
cmp
lods
push
or
and
shlb
pop
subb
and
inc
or
jo
packuswb
xchg
imul
mov
or
inc
dec
sbb
pusha
pop
insl
adc
ret
dec
push
outsl
leave
push
std
push
arpl
mov
inc
stos
imul
xchg
test
xchg
outsb
orl
popa
shlb
or
mov
push
test
ds
pop
and
popw
push
mov
mov
push
mov
inc
xchg
popa
orl
and
das
ljmp
jae
pushf
inc
or
mov
stos
pop
dec
inc
dec
or
inc
jb
mov
jae
rorb
rsm
or
test
fs
arpl
lods
xor
push
push
cmpsl
push
je
ja
mov
push
inc
jg
pop
mov
ja
sub
cmp
into
mov
inc
popa
es
jp
lods
inc
adc
push
arpl
xor
push
jg
sbb
xchg
nop
cmp
cmpl
mov
cmp
orb
adc
lds
ret
pop
test
mov
and
out
dec
push
pusha
js
jmp
sbb
xor
and
jne
stos
aad
adc
fisubrs
push
inc
nop
pusha
pop
outsl
inc
out
sti
and
push
inc
sbb
into
mov
mov
and
cmp
insl
adc
xchg
sbb
stc
mov
add
fldt
xor
xchg
adc
jns
mov
mov
icebp
stos
nop
andl
cmpsl
adc
add
cmp
jbe
add
out
ret
pop
aaa
inc
test
sarl
xlat
test
inc
ljmp
dec
adcl
push
add
ret
inc
fmuls
adc
fbld
mov
jae
xor
mov
test
mov
orl
test
sbb
jnp
lret
pusha
push
jg
xor
mov
lock
test
imul
enter
scas
pop
outsb
push
outsl
sbb
lea
add
add
or
inc
sub
popa
loopne
jne
adc
cmp
rcl
cmp
dec
out
pop
adc
gs
jne
stos
aaa
xor
cltd
xchg
or
arpl
fildl
sub
mov
test
fs
pop
adc
shl
dec
and
cs
xor
sbb
cmp
or
and
add
mov
jge
fildl
sbb
ja
outsb
adc
or
jmp
jno
test
mov
cmp
sbb
pop
mov
in
cli
pop
push
lock
jmp
sahf
and
push
outsl
mov
inc
jb
and
adc
dec
inc
in
lods
jo
out
push
inc
inc
and
arpl
sbb
pop
inc
imul
push
sahf
fs
fstpt
mov
js
mov
jecxz
insb
notl
jle
mov
bts
inc
call
stos
mov
cmp
jmp
nop
push
adc
jne
or
inc
fnstsw
push
lds
inc
xchg
pushf
or
inc
nop
pusha
adc
mov
bound
jns
les
movsl
push
movsb
push
filds
xor
push
pop
push
not
xor
and
adc
daa
or
shl
outsb
inc
or
out
push
push
adc
adc
jnp
jg
and
cmp
je
insl
dec
outsb
dec
js
loopne
adc
inc
cli
ss
sar
pop
lods
imul
mov
xchg
imul
add
or
imul
push
xchg
mov
inc
push
addb
pop
adc
repz
mov
inc
jb
rolb
shlb
out
dec
xor
adc
bound
ret
push
dec
movsb
bound
sbb
int3
push
inc
add
inc
test
add
jb
inc
jae
arpl
or
inc
shll
inc
push
imul
sbb
inc
jo
fs
test
jo
insb
repnz
shlb
rclb
push
icebp
inc
je
cli
push
mov
xor
imul
in
or
dec
mov
sbb
mov
or
nop
pop
loopne
sbb
and
and
mov
mov
dec
push
cmp
popa
inc
aad
sbb
fsts
or
mov
push
xchg
or
pop
movsl
or
cmovno
inc
sub
add
data16
and
xor
adc
push
inc
xor
cwtl
faddl
rcrl
adc
insb
jl
shrb
push
pop
inc
mov
push
rcl
push
mov
mov
jnp
or
dec
mov
adc
or
int3
adc
popa
sub
adc
fstl
dec
sub
cwtl
or
push
ret
dec
push
adc
cmp
push
outsb
shlb
push
push
fcompl
xor
sub
les
in
fisttpl
fsts
mov
inc
cltd
lret
stos
lods
pop
cwtl
loopne
push
and
cmp
add
test
lret
inc
test
inc
and
xchg
sbb
push
aas
mov
rcl
push
inc
xchg
rcr
mul
call
push
bound
xor
jno
outsb
out
mov
mov
mov
jno
icebp
dec
sbb
sbb
jo
outsb
call
addb
mov
int3
add
push
mov
iret
xor
push
cmpsl
pop
nop
or
inc
outsb
adc
pop
outsl
rol
insl
cmp
jnp
pop
lds
mov
or
pop
aad
lahf
push
adc
xchg
test
cld
add
pop
sbbb
stos
ljmp
or
js
push
jmp
push
inc
out
adc
lret
sub
flds
ljmp
inc
pop
inc
add
push
mov
daa
dec
dec
jae
or
inc
inc
int3
ror
sub
pushf
data16
xchg
add
jmp
mov
sbb
xchg
and
push
or
pop
popf
test
or
gs
mov
add
mov
mov
or
sti
add
add
xor
cmp
add
and
add
pop
push
adcb
stc
lea
loope
inc
xor
pop
pusha
pop
test
mov
add
adc
cs
jmp
add
es
and
add
and
jb,pn
or
sbb
adc
push
rolb
jge
push
out
inc
cs
adc
fstpt
cmp
out
add
loopne
sahf
jae
arpl
xlat
pusha
dec
xchg
sbb
loope
imulb
add
es
jg
add
add
add
inc
incl
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
add
