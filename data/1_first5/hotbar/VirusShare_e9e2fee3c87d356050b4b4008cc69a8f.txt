divb
in
mov
mov
cmp
inc
add
add
int
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
clc
jge
fwait
loopne
clc
test
je
ds
and
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
roll
cmp
jge
add
pop
push
push
push
push
xor
mov
push
mov
scas
stos
mov
std
push
cwtl
movl
cmp
pushf
or
jnp
or
push
mov
push
xor
cwtl
pop
jnp
mov
xchg
push
sbb
add
divb
inc
sub
ret
mov
jmp
pushl
sar
insb
jbe
jecxz
lea
or
lock
dec
test
jg
sbb
xor
adc
push
add
outsb
mov
push
scas
adc
mov
add
inc
jne
sub
sar
mov
je
daa
ret
push
repz
outsl
or
fadd
adc
pushl
mov
or
xor
push
mov
call
pushl
mov
or
insl
adcb
data16
pop
cld
add
movsb
or
andl
mov
dec
lock
adc
push
mov
sbb
jge
pusha
outsl
adc
sbbb
sub
dec
pop
sti
in
rolb
or
les
mov
xlat
hlt
or
pop
cmpsl
push
addb
dec
inc
jae
insb
push
call
sbb
fldl
add
pop
pop
pop
js
call
mov
inc
mov
lea
mov
adc
sub
in
mov
push
dec
or
jbe
ret
ja
enter
mov
xchg
adc
cmp
jmp
pop
lcall
popa
and
add
cmp
add
stos
test
or
sbb
push
test
sahf
add
mov
aas
fadd
jae
push
pop
lods
mov
jno
pop
add
mov
or
push
push
sbb
pop
or
sub
add
shl
jg
add
push
push
push
mov
imul
aaa
xorl
inc
lock
push
mov
cmp
or
sbb
push
clc
jge
insl
cmp
xor
mov
push
xor
mov
pop
ret
push
inc
add
pop
movsb
rol
push
pop
jae
cmp
mov
pop
inc
sub
inc
clc
sub
push
enter
push
cmp
jbe
sarl
push
sbb
or
fadds
fs
pop
adc
inc
test
and
adc
jg
mov
adc
rcrb
in
sbb
or
push
mov
adc
sbb
pop
cmpsb
pushl
adc
xor
clc
push
mov
jg
mov
sar
dec
lea
push
cmp
ja
adc
loope
add
dec
clc
add
push
rclb
jmp
pop
popa
dec
ret
fcmovnb
and
adc
add
cmpsb
push
sarb
pusha
or
ret
movsl
xor
sar
icebp
adc
cmp
cli
jg
cmp
jle
mov
cmpl
or
mov
btc
jge
pop
cmp
sub
or
jmp
cltd
xchg
add
push
aaa
iret
mov
ljmp
stos
ret
push
adcb
add
push
cmc
sbb
jne
pushf
mov
inc
scas
add
xor
jle
fistl
adc
inc
add
incl
mov
or
adc
lea
mov
test
mov
xor
into
mov
aam
pop
sub
sbb
cmpsl
fs
cmp
out
jnp
mov
cld
fsubrs
inc
mov
pop
leave
lods
push
xchg
or
test
jle
cmp
jbe
mov
mov
inc
sahf
mov
dec
and
icebp
roll
mov
push
push
mov
adc
cmp
cltd
pop
jns
pop
jmp
push
rcll
loop
lea
inc
xchg
sbb
sub
or
fucom
fcomps
ret
and
jle
xor
jbe
push
and
hlt
jg
pusha
cmp
sub
cmpsl
std
xor
xor
push
push
shl
imul
cmp
jle
mov
js
push
int3
out
pushf
cmpl
je
sbb
cmp
or
pop
or
and
cmp
mov
xchg
pop
lret
sub
aam
addr16
add
jb,pt
pop
push
mov
add
xchg
pop
leave
scas
cli
in
das
ret
lea
ljmp
adc
cmp
mov
push
push
push
push
rcrb
pop
sbb
jmp
xchg
call
insb
or
or
rolb
imul
mov
mov
jo
inc
sub
ljmp
aaa
test
jl
int
pop
pop
or
cmp
ds
sub
jno
cmp
jne
push
push
lock
push
adc
or
add
mov
pop
pop
pop
jne
push
jecxz
popl
jl
xor
scas
sti
pop
popa
cmp
sub
into
rcll
jo
clc
cmp
lret
pop
sub
cmpsl
add
in
add
cli
add
xchg
aas
addr16
sti
push
mov
movsb
sbb
cs
mov
xchg
mov
je
bnd
in
mov
push
mov
test
mov
dec
dec
pop
add
icebp
loop
mov
and
je
push
and
add
dec
ss
js
movl
or
lret
sub
sbb
rcr
jge
xchg
push
fcompl
sahf
out
push
sbb
pop
add
clc
imul
dec
add
mov
dec
inc
lods
lret
testl
lea
push
add
in
dec
lock
mov
xor
jo
mov
scas
fnstsw
mov
push
mov
adc
loopne
scas
cmp
add
sbb
test
cs
je
bound
sti
icebp
sub
aaa
out
or
jne
dec
fimull
sbb
bound
pop
mov
jg
pop
push
xchg
pop
xor
jb
cmp
mulb
cmp
emms
mov
aaa
das
arpl
imul
mov
mov
mov
sbb
call
arpl
cs
jmp
imulb
jb
push
add
or
ja
repz
and
cmp
sub
popa
sub
and
jp
mov
push
adc
or
push
in
xchg
ss
dec
or
cmp
lock
add
sti
stos
mov
sbb
shrl
lahf
adc
bound
mov
out
sbb
cmpsl
sbb
mov
out
cmp
push
push
mov
mov
mov
sub
call
sub
mov
inc
add
lods
and
add
pop
mov
popa
or
xor
fidivl
pop
inc
mov
ror
inc
in
mov
ljmp
mov
mov
dec
jbe
mov
mov
les
mov
scas
jecxz
aad
and
push
js
mov
andl
sbb
mov
pop
push
mov
xchg
pop
pop
push
pop
pop
arpl
pop
adc
orb
push
pushf
nop
and
jg
clc
loope
add
rorl
insb
mov
adc
pop
push
mov
xchg
and
push
js
and
adc
popa
lcall
je
sahf
xchg
ds
je
and
sbb
inc
push
mov
sbb
mov
ret
pop
or
cmpb
lea
scas
mov
mov
inc
daa
xor
add
pop
insl
jp
adc
hlt
repnz
icebp
lcall
cmp
dec
and
inc
clc
call
adc
cmp
lcall
push
sbb
cld
add
adc
repz
lods
push
aaa
out
push
jns
xchg
pop
or
cmp
scas
js
jl
daa
adcb
ret
pop
adc
fldt
add
fmuls
aas
stos
jl
filds
mov
sub
inc
mov
fsubl
orl
loopne
ret
movsl
xor
fs
js
fs
xor
loopne
push
or
or
mov
je
cld
mov
icebp
into
scas
mov
xchg
add
or
shl
xchg
mov
inc
and
push
or
inc
and
adcb
add
in
jae
cwtl
dec
adc
out
cmp
je
pop
or
xor
lahf
sub
out
xlat
lea
push
or
mov
xor
inc
insl
mov
sub
mov
lea
mov
or
push
add
dec
sbb
sbb
push
js
dec
cmp
movsl
push
xchg
pop
repnz
push
push
into
mov
lea
mov
or
punpckhbw
shrb
insb
jecxz
loope
mov
call
xchg
push
andb
adc
test
popa
jbe
dec
add
mov
rorb
repz
push
mov
in
ljmp
sub
loopne
adc
call
ss
jno
pop
out
push
mov
inc
jl
out
and
pop
loopne
cmp
inc
sbb
mov
in
leave
xchg
and
daa
push
jle
loop
call
dec
aam
jge
mov
cld
das
cmp
mov
out
add
sbb
inc
loopne
pop
mov
movl
out
xor
fidivl
fildl
or
cmp
sbb
test
mov
jle
test
add
pop
adc
rolb
daa
jecxz
push
clc
jg
loopne
iret
add
add
add
fldt
pop
sbb
stos
cmp
je
in
sub
int
push
movb
fdivrs
adcl
cmp
sbb
pop
stos
push
test
stc
or
push
dec
enter
test
mov
push
sbb
sub
fcmovne
idivl
mov
ret
je
push
inc
addr16
stos
and
out
fcmovnb
shlb
nop
nop
les
or
mov
xor
dec
xchg
adc
fimull
push
xor
push
sbb
lock
push
jb
xchg
or
in
add
nop
sub
push
cmc
pop
push
into
cmp
xor
jl
jge
xor
xchg
in
das
and
pop
cmp
sub
lock
daa
mov
xor
sub
out
popa
mov
hlt
fcoml
fwait
mov
out
mov
and
leave
xchg
cmp
adc
cld
mov
dec
inc
mov
and
adc
test
mov
cwtl
enter
cwtl
jo
xchg
dec
leave
jae
int3
int3
pop
xchg
xchg
inc
les
les
test
adc
mov
leave
enter
sbb
push
jns
sub
xchg
mov
movsb
movsb
jmp
and
fs
and
xor
je
mov
ja
dec
mov
roll
aas
or
jne
out
adc
hlt
jmp
push
sbb
pusha
adc
cmp
sub
mov
sahf
iret
adc
out
lcall
iret
test
in
add
add
or
dec
xor
lock
or
and
cs
push
xor
sbb
test
mov
inc
adc
add
in
mov
hlt
lock
inc
fwait
or
sbb
aam
dec
or
in
js
push
add
and
and
and
lret
add
adc
jns
lock
pusha
andl
dec
xchg
filds
orl
or
mov
test
mov
lea
mov
push
add
insl
inc
push
test
lods
lea
mov
cs
jl
in
dec
xchg
and
pop
sbb
add
adc
sbb
sub
daa
xor
and
mov
push
xor
das
mov
mov
or
dec
xor
jne
mov
fcmovne
push
push
xlat
pop
enter
nop
loopne
inc
sbb
mov
or
mov
jno
pop
cmp
or
add
adc
pushfw
sbb
das
cmc
outsl
sbb
push
arpl
das
pop
mov
or
and
dec
ret
mov
mov
mov
cmp
scas
sbb
jl
jb
pushf
je
inc
or
inc
mov
pop
jecxz
repnz
xchg
btc
lret
or
ret
mov
mov
test
ss
sbb
adc
and
mov
shrl
jno
mov
push
pop
insl
mov
out
into
adc
cmc
and
inc
adc
ret
shrb
jecxz
shlb
in
add
push
or
push
imulb
dec
imul
sub
add
insl
sbb
movsb
and
iret
sbb
nop
nop
push
fdiv
fistpl
jne
cmp
shlb
test
mov
lret
enter
mov
sbbl
clc
popf
mov
sbb
cmpb
add
push
sahf
les
rolb
and
nop
mov
stc
popa
pop
iret
sbb
aam
maskmovq
lods
imul
ds
je
push
xlat
outsl
or
je
xor
push
push
or
stos
pop
call
inc
ds
add
push
js
xor
mov
and
movsl
push
adc
jecxz
add
add
dec
ret
or
nop
add
fcompl
clc
mov
fs
leave
xor
cmp
fldcw
xor
pop
hlt
je
addr16
mov
dec
jo
int3
imul
push
add
mov
dec
add
dec
xor
xchg
stos
enter
movl
dec
add
popa
push
pop
mov
rcr
mov
pop
add
sahf
cmpsb
sbb
sahf
sub
mov
mov
scas
xchg
push
xor
into
push
daa
fildll
add
push
bound
cmp
rorl
addl
pop
jo
int
dec
mov
cmpsl
es
pop
rcll
lods
out
inc
cmp
push
aas
fs
or
je
sub
sub
orl
inc
cmp
icebp
pop
cmp
fldt
in
pop
sub
push
ljmp
sub
pop
and
push
ret
and
shll
cwtl
in
xor
ret
inc
lret
movsb
jmp
enter
fstpt
mov
stos
add
mov
add
add
lds
aas
insb
push
daa
jnp
sahf
aaa
insb
xor
adc
push
movsb
mov
mov
jns
cmp
push
test
ret
jne
jo
stos
add
mov
add
adc
sbb
sbb
cmp
sub
in
pop
pop
ror
push
mov
sub
add
test
xchg
and
cld
push
enter
test
adc
sbb
xor
mov
or
dec
out
call
mov
mov
ljmp
cmc
cmp
orb
shll
jmp
add
les
popf
cmp
and
sbb
mov
cmpsb
inc
sbb
mov
dec
fidivrs
sub
push
enter
sti
inc
das
push
sub
lock
push
pop
xchg
iret
call
sub
pushl
jnp
repnz
sti
xchg
dec
xlat
inc
or
inc
push
orb
gs
mov
and
xor
mov
bound
xchg
popf
sbb
sbb
mulb
add
and
push
sbb
pop
sub
jns
jb
xor
push
pop
or
mov
pop
pop
ss
push
pop
das
ret
push
add
call
ds
jns
and
sub
sbb
and
sub
lock
adc
inc
xor
xor
or
and
clc
lret
inc
je
and
cmp
stos
inc
mov
adc
sbb
xor
fistpll
cwtl
dec
mov
popf
cmpsl
mov
lock
rep
xchg
in
push
push
add
pushf
es
cmpsb
cmpl
into
adc
jmp
jns
mov
add
mov
and
les
js
out
test
out
xor
adc
mov
push
jo
push
inc
or
pop
mov
pop
addb
or
push
je
pop
mov
fcomp
push
jno
sbb
clc
mov
sbb
mov
pushf
mov
xchg
insb
aam
sub
ljmp
fdivrl
or
daa
mov
shlb
ficoms
adc
mov
cmp
or
shll
dec
enter
jbe
dec
push
push
inc
jge
jmp
mov
repz
dec
mov
adc
shlb
mov
add
add
add
stc
add
inc
lock
scas
ret
fcoms
mov
push
inc
cwtl
pop
popf
xchg
jbe
push
shrd
shl
add
push
xchg
fisubl
lock
jnp
jns
cmp
or
roll
cs
into
adc
pop
xor
inc
in
mov
test
xchg
mov
push
xchg
inc
out
pushf
pop
pop
mov
adc
sbb
jge
xor
inc
outsb
jb
aad
decl
inc
cmp
jne
or
je
sub
rorb
cmp
loope
iret
adc
push
es
and
push
ficoml
int3
sbbb
inc
inc
dec
jno
cld
mov
pop
xchg
cmpb
ror
call
out
jo
cmpsl
mov
jne
or
xchg
cmp
cmp
inc
sti
lea
add
adc
pop
xorb
call
mov
add
repz
je
add
sub
jns
add
lock
loop
aas
inc
jnp
out
inc
out
jno
inc
push
add
or
adc
shrl
mov
aad
jnp
arpl
sub
dec
jl
xor
fisttps
mov
dec
dec
and
testb
imul
shlb
add
or
or
pop
enter
inc
int3
add
mov
dec
mov
aad
fcomp
cwtl
push
fcoml
add
or
inc
sub
and
push
ror
insl
adc
mov
adc
lock
pop
jmp
int
dec
je
sub
jmp
adc
cmpw
je
inc
push
jnp
fnsave
jmp
subb
xchg
cli
mov
push
cmp
pop
push
sbb
lahf
mov
pop
xor
mov
aas
inc
sbb
mov
jno
movsl
jge
fadd
pop
mov
or
ja
icebp
out
sbb
mov
xor
inc
mov
ror
mov
push
cmp
cmp
pushf
ljmp
jl
sbb
je
cmp
jle
int3
inc
pop
je
mov
pop
add
push
or
filds
sbb
inc
movsl
stos
add
lock
dec
jle
inc
mov
push
mov
ja
jae
add
stos
push
and
or
push
cmpsb
add
fwait
cwtl
mov
fcompl
scas
leave
sti
adc
enter
lods
lahf
push
and
push
or
add
int3
jae
xchg
sbb
hlt
cmpl
inc
push
jne
xor
popa
inc
rclb
mov
inc
add
push
add
icebp
or
dec
inc
push
mov
setns
or
mov
int3
mov
mov
or
aad
dec
xor
push
aad
sub
jns
ljmp
jg
jbe
or
dec
push
xlat
or
sub
push
add
push
or
repnz
xor
aaa
lock
push
pop
inc
add
insb
les
aas
pop
test
sub
inc
push
es
sbb
fldl
push
pop
xchg
sub
inc
loopne
in
gs
vcvtss2sd
or
loop
pop
sar
jmp
cli
subb
pop
lret
push
and
cmp
jle
ret
and
sbb
mov
inc
push
data16
push
xor
or
adc
in
pop
mov
jl
cmp
loopne
sbb
inc
in
test
jmp
xchg
lock
push
fdivrs
inc
mov
scas
in
push
movsl
jnp
das
and
mov
sbb
mov
add
cmp
mov
clc
sbb
xchg
aaa
insl
mov
adc
push
push
add
in
push
pop
push
push
call
and
mov
cmpsb
insl
sbb
je
mov
aad
xor
inc
ror
adc
pop
call
push
inc
mov
out
or
add
test
adc
pop
or
push
movsb
xchg
mov
cmp
mov
and
add
or
imul
and
dec
loopne
or
cmpxchg8b
mov
repnz
jnp
cmp
adc
lock
dec
inc
cmc
jnp
push
pop
mov
pop
add
mov
mov
add
es
or
jbe
rclb
cs
movsb
fcoms
lock
dec
lret
fadd
jo
in
mov
fs
jo
mov
sub
pushl
call
or
mov
movzbl
push
fisttps
adc
push
ret
push
push
inc
push
loopne
iret
mov
xchg
xchg
push
pop
pop
mov
mov
sarl
pop
add
sub
sbb
add
cmp
pop
arpl
mov
gs
pop
xor
mov
testl
pop
or
add
mov
xor
pop
js
jmp
push
sti
jle
adc
inc
push
push
mov
cmp
jg
mov
mov
sbb
jmp
adc
sbb
into
dec
arpl
leave
jae
shrl
push
leave
jns
imul
adc
or
sbb
in
sub
ss
mov
sti
add
sbb
jne
ds
mov
xor
rclb
cmp
mov
push
inc
pop
adc
and
dec
shl
mov
cmpsb
mov
faddl
mov
inc
mov
aam
cmc
mov
mov
lea
cmp
jae
mov
incl
std
adc
dec
jecxz
sbb
jnp
xor
jmp
lea
pop
jb
cmpl
fdivrl
je
mov
push
add
loope
outsl
sahf
imul
add
int3
js
inc
lock
sarb
fistpll
and
push
xor
bound
js
mov
fs
sahf
cltd
cld
ret
jle
lcall
fisttpl
push
pop
mov
rorl
cli
lea
and
push
aaa
mov
lea
or
push
adc
and
cmp
mov
xchg
add
mov
mov
adc
and
mov
ss
cmpsl
mov
dec
popl
jle
mov
pushf
ljmp
mov
adc
pop
dec
sti
lahf
pop
je
test
js
push
hlt
jg
in
pop
cld
xchg
sub
dec
jmp
sbbl
push
inc
jo
sti
lock
fwait
jae
xor
add
inc
inc
jecxz
fadds
push
push
mov
stc
sbb
push
push
scas
dec
jecxz
mov
test
mov
jns
mulb
push
mov
jl
repz
push
add
outsl
jp
push
push
push
cmp
add
cmp
jno
loop
pop
mov
cld
int3
ds
jbe
adc
mov
mov
push
pop
mov
push
and
mov
pop
or
mov
pop
hlt
lea
rcrl
movsl
lods
stos
cmpsl
in
push
js
pop
mov
test
ss
inc
scas
jle
out
shlb
in
mov
add
rep
push
mov
loopne
lret
cmp
cmp
mov
movsb
jmp
mov
sub
jmp
movl
mov
orb
pusha
jae
not
jns
ficoms
add
push
cmpsl
mov
outsb
ljmp
ljmp
movb
adc
jb
test
mov
inc
out
int
or
jnp
std
xchg
loope
int
add
adc
aaa
pusha
fwait
jmp
or
je
jne
cmp
clc
jne
cmp
je
pushl
movb
test
jmp
push
push
add
and
sbb
mov
jecxz
push
aad
sub
xchg
pop
clc
sub
xchg
fistl
adc
out
repnz
rcl
lret
fcmovb
hlt
add
clc
pop
sbb
je
mov
cmpsl
inc
sbb
jle
stos
xor
shlb
push
jp
or
jne
push
in
inc
inc
je
fiaddl
js,pt
jo
jg
mov
mov
lods
ss
or
notb
mov
inc
jmp
dec
lock
add
adc
cmc
or
scas
ret
jmp
xor
adc
call
xor
adc
ss
sbb
subb
jne
adc
add
scas
out
aam
pusha
fsubrp
add
xchg
and
cli
push
push
xor
push
orb
push
push
clc
gs
orb
nop
or
insl
rolb
add
bnd
push
push
and
sbbb
fnstenv
adc
sub
sub
cmp
std
add
mov
sub
sar
out
std
aas
sbb
out
lahf
sar
or
sbb
pop
pop
mov
cmpsb
sub
mov
ret
inc
mov
cmp
lea
jbe
mov
sbb
sub
push
test
push
jecxz
inc
add
int3
mov
roll
sbb
movl
jnp
mov
add
and
xor
jecxz
insl
dec
add
or
daa
push
jmp
adc
sarb
push
shr
pop
loop
es
ds
es
outsb
int
sti
adc
dec
mov
jecxz
repnz
inc
mov
dec
or
lret
shl
mov
scas
mov
sbb
mov
push
das
inc
movsl
fld
push
lods
add
pop
inc
nop
cmpsb
jl
adc
aas
lods
and
je
lret
inc
or
imul
shlb
add
in
incl
or
push
pop
shl
daa
xchg
fildl
cmp
or
loope
mov
jb
jb
mov
mov
cmp
repnz
jb
and
mov
sbb
or
inc
xchg
call
pop
cmpsb
mov
adcl
adc
repnz
cmp
add
adc
loop
lret
cmpsl
nop
push
xor
es
clc
cmp
push
add
push
and
xor
push
fiaddl
addb
sarb
repz
xchg
mov
push
push
adc
or
push
push
cmp
or
add
mov
adc
cmp
movsb
and
test
aas
jmp
pusha
inc
repnz
aas
enter
inc
xor
xor
in
and
nop
pop
adc
outsl
and
mov
cmpsl
jge
outsb
cmp
push
lock
cmp
pop
shlb
outsl
dec
push
push
dec
cltd
pop
adcb
push
or
pop
fsubl
mov
adc
movsl
hlt
inc
or
sbb
mov
sub
pop
stos
cmpl
jp
lock
push
adc
push
push
inc
orl
add
mov
loope
lret
es
js
xor
cli
bound
lods
stos
lock
cmc
outsl
jl
xor
mov
sub
and
clc
mov
jae
xchg
dec
pop
adc
sbb
inc
pop
jb
push
xor
xor
mov
fld
mov
adc
mov
mov
dec
dec
xchg
push
xlat
jo
std
adc
pop
or
sbb
mov
enter
loop
inc
and
xchg
or
cmp
and
jns
jns
daa
sub
sbbl
gs
dec
adc
push
mov
push
and
jbe
in
and
sbb
cmp
and
or
add
sub
sub
jbe
sbb
rcrb
mov
push
push
dec
icebp
inc
push
mov
cmp
xchg
enter
mov
xchg
movsbl
sbb
and
stc
adc
cmp
popf
sar
mov
inc
pop
sbb
push
cmp
mov
test
in
shrl
pop
negl
push
lock
mov
cmp
add
push
lds
lods
jmp
push
pushf
pop
xchg
loope
mov
outsb
dec
mov
frstor
pop
jmp
jbe
fisttps
addb
jmp
cmp
pop
jge
das
cmp
in
xchg
sub
dec
je
mov
je
sub
loope
sbb
test
incb
icebp
dec
in
jmp
mov
stc
decb
mov
lock
pop
jns
leave
jmp
mov
jecxz
jne
clc
jg
sahf
loope
sbb
jmp
push
add
push
mov
incb
pusha
push
jmp
add
sbb
hlt
mov
and
fcomps
xchg
or
shlb
pop
push
mov
mov
pop
sahf
dec
mov
mov
mov
and
push
or
stc
inc
lock
push
push
daa
pop
pushl
js
push
push
or
imul
or
fsubl
mov
fadds
rorb
jmp
cmp
je
cmp
xchg
shrl
jmp
inc
sbb
repz
lcall
fldz
andl
neg
sahf
lock
jmp
sbb
je
xchg
push
and
jmp
and
pop
fisubl
mov
or
sbb
fmull
incl
or
je
out
sahf
adcl
sub
into
push
flds
in
in
mov
fisttpl
or
adc
and
mov
enter
sbb
inc
sbb
dec
sbbl
push
pusha
lea
pop
adc
sub
fistps
aaa
sub
or
orl
fcmovne
rcrl
lahf
push
push
or
xchg
dec
stc
icebp
cs
pop
jge
lcall
push
dec
push
mov
fdiv
lea
push
lea
push
push
push
push
add
push
lea
sbb
dec
cmp
add
dec
mov
inc
test
add
xchg
cltd
lahf
xchg
mov
lret
lea
add
orb
push
mov
or
pop
cmp
inc
adc
mov
sbb
nop
jbe
xchg
adcl
push
cmp
mov
pop
push
jle
sbb
movl
movsl
jo
scas
xor
int3
cmp
in
mov
sub
push
xchg
or
fadds
stc
dec
adc
jo
das
dec
adc
jle
aam
push
in
movl
add
in
cmpl
ret
mov
jl
jmp
jp
and
mulb
sahf
std
mov
lods
mov
shll
lods
mov
jns
cmpsb
cmpb
rolb
insb
inc
sub
mov
pop
inc
xchg
scas
addr16
mov
sub
pop
lock
cmp
daa
nop
pusha
call
pop
in
sbb
leave
or
in
fadd
stos
movsl
popf
jo
pop
jo
insl
ljmp
xor
shrl
out
xor
aas
rorl
push
sub
mov
push
or
cmp
push
push
cmp
inc
mov
imul
arpl
pop
dec
pop
rolb
repz
pusha
sub
je
repnz
pusha
push
jg
mov
cmpsb
js
js
fisubs
push
xchg
pop
scas
loop
adc
popa
aam
push
aam
das
or
and
in
call
sbb
ror
push
movsl
cmp
sub
add
fdiv
add
or
add
jle
mov
fldt
cmp
sti
subl
ret
cmp
aaa
sub
or
push
mov
scas
xor
jg
insb
test
jp
cmp
jne
push
sub
jo
inc
lcall
add
jo
xor
xchg
test
pop
lea
push
loopne
add
mov
fmulp
mov
mov
enter
imul
lock
cmp
jne
call
push
or
insb
xor
js
mov
add
pop
outsb
les
shrb
mov
mov
fisubrs
push
dec
lock
mul
push
dec
add
xorl
push
cmp
je
mov
inc
dec
sub
in
ret
pusha
cmp
in
dec
insl
mov
cmp
push
mov
add
mov
xor
mov
add
inc
inc
dec
cmp
imul
mov
in
or
sub
or
rcr
sbb
cmp
rep
push
in
inc
mov
movsl
adc
xchg
enter
popa
inc
pop
cmc
fsubr
subb
xchg
js
neg
sbb
fcomps
cmp
dec
sbb
cltd
ret
insb
adc
add
leave
cmpsl
adc
mov
outsl
movsb
in
sbb
cmpsb
imul
cmp
push
pop
imul
divb
push
insb
mov
mov
call
jp
ret
je
mov
into
neg
sbb
and
push
push
jno
sti
or
cmp
cmp
adc
mov
push
or
cmpsb
out
mov
lea
lea
dec
mov
jmp
imull
inc
fdivl
jmp
pushl
and
jp
out
testb
insl
jo
pop
clc
inc
in
mov
std
scas
jbe
inc
jae
jo
shl
idivl
push
dec
inc
ljmp
jle
cmpl
jne
pushl
mov
cmp
sub
subl
cmp
fadds
inc
int3
into
rclb
test
scas
mov
sbb
movsb
push
outsb
dec
add
dec
iret
cmp
stos
test
andl
xor
shll
jo
cmp
je
cmp
mov
mov
lcall
cmp
or
pop
mov
fstl
mov
ja
popa
loop
pushf
xchg
in
push
lods
mov
xor
clc
xor
icebp
incl
jne
movb
add
cmp
jne
jae
popa
cmpsl
movsl
fldz
xor
ds
cwtl
sbb
sub
jo
movb
aas
jno
ret
dec
aas
mov
xor
mov
or
lea
movl
sbb
or
pusha
fnstenv
push
test
and
loopne
pop
notl
sub
mov
mov
into
xlat
mov
push
dec
or
adcb
dec
lods
push
stos
shlb
int3
mov
push
leave
push
pop
aam
mov
xchg
pop
cmp
iret
push
adc
enter
ret
outsb
cltd
add
inc
sbb
add
add
xlat
cmpsl
jp
in
mov
xor
sti
adcb
mov
cld
mov
xor
fnstenv
je
xor
adc
daa
inc
sarl
push
sbb
dec
or
adc
cmpsb
adc
js
cmp
sbb
ds
imulb
lock
push
push
lret
out
ja
jl
xchg
andb
mov
sbb
mov
outsw
inc
or
and
inc
jge
mov
push
sbb
sbb
sbb
out
test
pop
inc
fisubs
sub
shrb
cmp
fldl
fcompl
enter
inc
jl
out
cmp
mov
push
push
out
and
movsl
mov
mov
roll
push
push
xchg
mov
jle
dec
pop
pop
fiadds
mov
xlat
jle
inc
add
push
xchg
sbb
xchg
insb
inc
negl
popa
and
dec
ds
inc
add
lcall
and
dec
adc
fmuls
or
mov
call
iret
adc
dec
or
xchg
or
dec
jmp
mov
adc
add
cmp
push
adc
push
mov
lods
repnz
cld
clc
dec
loopne
cmpb
xor
je
push
pop
lods
add
jp
push
add
mov
push
jne
sahf
std
aad
cs
sub
push
push
mov
adc
addr16
sbb
and
repz
xchg
shrl
bound
dec
stos
add
fidivrl
push
cli
mov
xor
push
loope
mov
push
xor
call
mov
xor
push
popa
push
push
sub
sub
mov
jecxz
and
in
loope
sub
sbb
daa
out
into
inc
xorb
out
xchg
push
shlb
jecxz
xorb
push
pop
insb
dec
repz
lahf
inc
mov
add
sub
xor
jg
aas
mov
cltd
mov
lea
ret
sti
clc
pop
mov
dec
adc
sbb
cltd
popf
sbb
mov
mov
cmp
jge
call
jecxz
mov
idiv
push
mov
push
push
les
ret
xor
idiv
ja
pop
jbe
mov
xorl
xchg
std
test
jg
mov
cmpb
sbb
movsl
xor
pushf
loope
sarb
xchg
scas
test
insl
ret
call
or
mov
stc
fcomps
add
in
or
out
fstpl
push
pop
add
xor
sti
sub
rcrb
jge
je
sbb
lea
cltd
imull
and
jp
xor
dec
test
sbb
jnp
pusha
js
sti
ds
jg
scas
jnp
dec
fs
or
xchg
arpl
mov
leave
jle
cmp
xor
sub
int
pushf
movb
pop
inc
lahf
mov
inc
cmp
mov
adc
sub
cmp
xlat
je
or
or
out
insb
mov
fucomp
mov
fildl
mov
test
jns
faddl
pop
add
xor
xor
mov
fdivrp
mov
jmp
lea
mov
gs
sbb
pop
add
les
shlb
out
cmp
add
push
xorl
push
sbb
into
clc
fidivl
jmp
push
xchg
jge
add
pop
push
pop
mov
ja
cltd
pop
jne
pop
pop
movb
push
cs
xor
in
mov
mov
sbb
orb
or
stos
ror
movsb
cld
inc
sbb
aam
enter
xchg
and
popa
cmc
add
pop
inc
fstps
push
gs
bound
ja
jbe
imul
xchg
xchg
xchg
and
sbb
mov
cmp
pop
jo
mov
into
pop
leave
lock
xor
cmp
mov
mov
sbb
imul
and
cltd
add
inc
mov
push
mov
sbbl
int
sub
mov
or
iret
or
mov
addr16
mov
cmp
jle
jne
sti
mov
aaa
subb
jmp
adc
xchg
cli
mov
sub
xor
xor
shrb
sbb
mov
out
pop
sub
inc
or
sbb
inc
mov
mov
iret
inc
and
lods
cmc
or
rcrl
ds
decb
add
jmp
orb
xlat
inc
adc
xor
xor
jbe
pop
adc
sub
pusha
lock
jle
dec
roll
xor
add
or
cld
aas
xchg
push
dec
bound
xchg
sbb
sti
leave
sub
sbb
jb
xor
sbb
inc
ljmp
adc
inc
pop
push
shlb
mov
pusha
push
pop
shr
rorl
xchg
and
push
add
repnz
stc
lock
or
mov
mov
addr16
inc
cli
and
push
xor
jge
orl
and
fs
scas
mov
push
jbe
push
and
shll
sub
inc
outsl
add
and
push
add
inc
jae
inc
sub
clc
insb
sub
clc
setb
test
or
jg
rorb
dec
xor
clc
clc
je
xor
dec
adc
data16
push
lea
push
mov
out
es
orb
push
loope
ret
addb
pop
pop
sbb
loopne
and
mov
imul
mov
adc
adc
push
mov
popf
push
mov
mov
in
rcr
jecxz
push
inc
test
das
add
push
es
int
stos
mov
insb
rolb
cmp
test
aaa
sbb
or
jp
fdivrl
xor
mov
test
jnp
inc
xchg
add
stc
jbe
test
jg
and
ljmp
rorl
mov
mov
inc
test
les
sub
enter
add
shl
jo
pop
jo
mov
pop
or
pop
mov
out
aaa
sti
ffreep
std
sub
pusha
sbb
add
push
jmp
push
xor
sub
loop
test
xchg
in
aas
jmp
pop
inc
xchg
dec
mov
jmp
and
cmp
push
movl
testl
fcomps
insl
sub
push
or
sbb
mov
xor
mov
scas
adc
into
xchg
movl
lock
fcmovnu
and
scas
push
dec
sbb
aam
sub
xor
or
in
jae
sub
push
call
push
jl
les
cvtpi2ps
mov
push
into
stc
in
in
push
clc
pop
add
push
mov
cwtl
dec
cmp
repnz
insl
adc
xor
add
xor
xchg
orb
aaa
pushl
loope
das
out
xchg
fisubrs
push
xor
add
pop
loope
out
add
sub
push
xor
rcrl
push
int3
sbb
insb
shll
push
xchg
add
sarl
jle
imul
pop
loopne
inc
sub
sub
dec
mov
xor
pop
dec
and
push
xchg
pop
push
mov
jne
mov
pusha
xor
or
push
xor
loope
test
adc
pop
outsb
fidivrs
popa
in
mov
push
or
rorl
cld
cli
push
inc
movsb
pop
and
xchg
inc
scas
int
rcpps
and
add
mov
cmp
xor
pop
cmp
mov
pop
lea
pop
inc
ja
push
inc
out
mov
cmp
enter
enter
push
rorb
inc
andl
test
outsl
ljmp
sbb
pop
ret
movb
jae
mov
or
sbb
stc
adc
jmp
incl
dec
mov
jmp
dec
mov
sub
and
test
sbb
jge
insl
xchg
inc
pusha
inc
xor
pop
mov
xchg
sub
cs
sub
leave
js
cmp
jge
mov
sub
push
cmp
mov
movb
or
cmp
jle
jmp
pushl
inc
mov
push
subl
call
adc
adc
jmp
out
js
xchg
fcompl
jne
sub
add
fdivrl
sarb
enter
dec
stc
sub
add
cmp
in
mov
ret
jo
sub
inc
sete
pusha
and
inc
or
mov
push
dec
stos
notb
push
sub
cmp
cwtl
cmpl
andb
mov
jno
dec
out
les
sbb
mov
xchg
enter
dec
rolb
mov
int3
push
jmp
mov
rcrl
icebp
loop
fsubs
rcrb
dec
in
add
push
mov
rcl
mov
lea
push
sahf
js
or
jg
add
xchg
pop
sti
pop
mov
push
es
add
mov
insl
mov
xlat
fsubl
push
dec
testb
and
mov
mov
push
and
add
and
pusha
mov
or
mov
test
fsts
ss
icebp
pusha
les
push
call
sub
daa
push
pop
nop
pop
jg
xor
jg
add
andb
std
mov
repnz
sub
jne
jb
fcomps
adc
je
fists
pop
pop
adc
dec
xor
mov
jno
xchg
in
adc
add
mulb
push
xor
fdivp
in
jb
fwait
repz
in
call
cwtl
sbb
lock
and
push
xchg
adc
icebp
xchg
or
mov
or
and
in
sub
movsb
inc
add
jle
outsl
mov
scas
mov
popf
add
or
loopne
xchg
jle
jge
inc
sbb
or
lea
jo
push
inc
xchg
or
mov
test
outsl
add
fisubs
jl
call
xor
xor
cmp
je
jle
cmpl
ljmp
arpl
mov
ja
mov
paddb
add
xchg
nop
sbb
push
orl
ret
orb
pop
mov
sub
std
push
or
sbb
push
mov
pop
pop
test
push
dec
or
imul
cmp
cli
adc
movb
mov
add
xor
stc
sarl
inc
popf
add
add
xor
test
inc
add
push
push
int3
pop
addr16
or
lret
mov
sbb
and
loop
push
jo
lahf
ficoms
jae
or
mov
push
mov
icebp
int3
cmp
mov
int3
mov
jbe
mov
sbb
rclb
xor
dec
aad
pop
adc
jno
push
mov
sub
nop
inc
adc
popa
adc
mov
leave
ret
cwtl
push
fs
push
cmp
repnz
shr
aaa
adc
lea
andl
add
mov
xchg
pop
push
inc
fsts
push
data16
mov
jno
movl
lock
push
dec
stc
xchg
dec
xchg
inc
jecxz,pt
xor
and
outsb
sub
inc
lods
mov
push
xor
aaa
scas
shr
movb
xchg
mov
je
mov
and
mov
orb
mov
dec
mov
insb
jb
and
jb
and
mov
xor
testl
lods
arpl
xchg
jecxz
sbb
popl
cmp
addb
inc
inc
mov
mov
inc
and
sbb
jb
push
lock
mov
adc
ret
sbb
lods
js
cmpsb
mov
inc
add
xchg
ds
sbb
add
adc
sbb
call
shlb
clc
nop
dec
xor
pop
add
je
xor
or
les
adc
xor
pop
xchg
sbb
ljmp
xor
xchg
out
data16
or
push
adc
push
sbb
sub
imulb
cmpb
jne
mov
push
nop
inc
test
enter
sbb
mov
jns
dec
push
xchg
dec
or
adc
add
mov
jnp
test
add
mov
jle
jae
cmp
js
add
loopne
sbb
fxch
lods
mov
pusha
ljmp
leave
adc
sbb
filds
push
pop
stc
stos
outsl
ret
int
add
dec
sbb
flds
or
lods
mov
es
sbb
adc
adc
mov
gs
sub
outsb
and
mov
adc
jl
movsb
jnp
shrb
jl
jns
sbb
aad
inc
cmc
xchg
sti
adc
dec
inc
loopne
cmp
dec
stos
xor
repnz
mov
jp
popf
aam
icebp
push
adc
pushf
out
cmp
icebp
push
fsubrl
cmp
rcll
int
js
in
cmpsl
imul
jge
stos
push
dec
repnz
push
lock
sub
inc
jns
outsb
and
lock
enter
xchg
and
push
add
or
mov
or
movsl
mov
call
push
adcl
ljmp
or
and
ja
jne
xchg
pushf
lea
test
add
mov
jmp
lea
adc
jnp
out
xor
xor
pushf
and
adc
push
mov
rorb
loopne
daa
inc
mov
push
mov
imul
call
in
cwtl
push
or
hlt
mov
in
pushl
lahf
dec
test
imul
cmc
sub
aam
rolb
or
sub
or
lock
xchg
dec
sbb
and
sti
inc
gs
mov
push
jns
fucom
jmp
add
or
push
jb
test
and
push
mov
sub
sbb
fs
es
sbb
add
test
outsb
call
enter
fildl
push
mov
mov
sti
mov
push
mov
imul
jle
data16
add
arpl
lds
hlt
out
xor
movzwl
pop
mov
pop
pop
sbb
aam
ja
sbb
and
adc
xor
cmp
cli
mov
test
lret
jnp
xor
adc
xchg
rorl
cmp
jne
push
mov
xchg
push
lea
fstl
cwtl
repnz
mov
scas
shrb
xor
add
test
idiv
hlt
cmpsl
mov
push
pop
data16
push
adc
dec
fldenv
jae
clc
xchg
mov
ret
ja
xchg
test
addb
jmp
fdivrs
fucomip
sbb
in
add
push
sbb
cmp
push
clc
loopne
xchg
adc
xchg
lea
jns
jno
mov
mov
and
push
stos
sbb
add
adc
pop
aas
test
ret
add
mov
test
mov
ret
into
dec
push
es
in
incb
add
lea
xlat
outsb
imul
cmp
mov
mov
inc
mov
cmp
fistpll
xor
fdivr
insl
sub
or
scas
test
fcom
sti
ret
std
pop
imul
shrl
lods
add
mov
mov
rolb
xor
adc
dec
jb
mov
cmp
push
xchg
jg
mov
add
inc
out
into
jbe
inc
mov
ss
jg
push
mov
push
fwait
pushf
popf
push
pop
dec
push
fucomp
add
pop
enter
push
repnz
mov
add
movsb
and
lods
outsb
loop
test
or
mov
aas
into
std
pop
dec
mov
leave
mov
mov
out
lret
test
mov
mov
add
sbbb
or
add
pop
je
rolb
rorb
out
jo
inc
lret
bound
xchg
out
xor
mov
fldenv
push
fbstp
cmp
jne
pop
fiadds
sbb
aam
mov
sbb
jno
adc
aaa
fidivrs
xorl
sldt
xchg
pushf
push
mov
sbb
pushf
adc
dec
push
pop
cmp
or
jecxz
jo
xor
sbb
sbb
mov
jle
adc
addb
rolb
test
jae
int
xchg
pop
das
add
jne
loop
nop
dec
sub
xchg
and
loopne
enter
and
mov
fs
pop
adc
lret
sub
push
and
mov
add
mov
push
andb
stos
add
sbb
push
dec
adcl
cmp
or
mov
les
push
mov
xor
add
loopne
and
movl
maxps
test
adc
jmp
push
mov
or
jo
add
xchg
fsubrs
cli
pop
popa
popa
or
or
int
orps
dec
insl
adc
xchg
and
repnz
xchg
rclb
shl
pop
cli
test
xchg
push
inc
pop
push
and
je
pop
jb
pop
and
jbe
pusha
test
cmc
lods
jb
add
popa
push
leave
inc
fistpl
xlat
push
lods
or
movb
dec
xor
cmc
sbb
sbb
stc
dec
xor
enter
or
rcrb
xlat
pop
ret
bound
cmpl
mov
push
pop
cmp
add
in
scas
adc
or
andb
ss
and
dec
loopne
and
mov
mov
movsl
not
std
sub
cmp
and
adc
aam
insb
test
xchg
lea
pop
rorl
add
add
mov
and
mov
push
imul
jp
pop
and
bound
sub
xchg
cmpsb
sub
jne
push
or
mov
mov
push
lods
in
jge
sub
mov
jo
jbe
push
fldl
xchg
sub
aas
aam
sub
daa
das
nop
popa
call
xor
lcall
push
and
push
sub
sbb
and
jae
ljmp
xor
jno
mov
dec
or
sqrtps
sub
jge
das
out
dec
push
sub
adc
and
and
rcl
sbb
imul
pop
sub
adc
pop
sub
lea
pop
cmp
push
jns
call
js
repnz
js
into
sub
mov
pop
mov
sbb
call
or
jl
pop
jg
xchg
mov
add
push
push
cmc
test
dec
sar
or
sub
aad
mov
pop
jno
loope
cmp
sbb
mov
nop
push
jo
and
cltd
leave
or
enter
push
notl
lock
imul
mov
push
or
lea
in
mov
push
add
pop
and
fcomps
loopne
and
in
push
mov
data16
dec
clc
or
sub
or
lock
sbb
loope
daa
in
xor
sbb
or
outsl
or
fimull
lods
and
mov
pop
nop
mov
mov
movsb
xchg
pop
or
mov
fs
fmull
sub
add
cltd
ljmp
xor
cli
ja
addb
dec
xorl
sbb
and
cli
inc
or
addr16
jmp
cmpl
jne
enter
int3
push
push
xor
test
mov
nop
dec
ror
fbld
int3
int
push
imul
mov
lods
add
mov
mov
adc
enter
je
mov
lea
mov
sbb
or
stc
sub
push
add
lret
fdivrs
push
dec
lods
pusha
cmpb
mov
or
xchg
xor
imul
mov
sub
es
xchg
push
mov
rclb
test
pop
pop
add
aad
push
sub
mov
pop
jo
icebp
fnstsw
mov
shlb
iret
sbb
int3
ret
lea
sbb
pcmpeqd
push
sub
add
inc
popa
adc
hlt
sub
push
xorl
mov
lods
insl
or
pmulhuw
push
push
outsl
test
lea
add
pop
cld
or
cmp
xlat
rcrl
in
lret
mov
sub
push
imul
lods
imul
fcoms
iret
je
lea
adc
xchg
add
or
adc
xchg
jno
pop
jl
xchg
scas
adc
clc
fs
mov
les
shlb
ret
sub
mov
nop
pushf
addb
jmp
in
mov
loopne
add
mov
adc
pushl
or
insl
adc
jns
stos
js
popa
dec
loopne
pop
pop
clc
mov
pop
in
add
cltd
stos
mov
sub
shl
jo
enter
das
xor
mov
dec
mov
shlb
push
push
ds
bound
and
in
push
js
stos
jnp
sbb
inc
cmp
push
push
dec
jae
xlat
inc
rorl
pop
inc
out
fucomp
or
add
enter
xchg
mov
clc
or
sub
bound
mov
rcrb
pop
push
hlt
mov
adc
cmpsb
xor
test
or
sahf
sbbl
pop
xchg
pop
ret
cmpb
rolb
add
decb
lods
aaa
adc
adc
fidivs
cmpsb
fdivs
je
cmpb
scas
sbb
jmp
jns
jne
and
or
jl
loope
clc
je
mov
xchg
ret
add
outsl
es
lea
push
lea
push
inc
clc
and
xlat
sub
bound
psrad
aad
xchg
jae
enter
mov
cmp
and
ror
cmp
jl
cmp
cmp
jle
pop
pop
std
sarl
repz
jle
cli
sbb
icebp
jne
jnp
cmp
jae
sbb
push
add
data16
sti
push
pop
adc
mov
movsl
adc
lea
inc
imul
and
mov
pop
lods
xchg
add
lea
loopne
js
les
pop
mov
insb
or
jo
xor
mov
adc
jmp
cmp
je
ficoms
push
data16
mov
fstpt
xor
ss
cwtl
ret
aam
push
adc
push
sar
add
jae
pop
cmp
or
mov
stos
adc
in
movsb
mov
fwait
xor
push
fldcw
fisttps
js
dec
or
xor
test
dec
and
leave
insl
lea
push
roll
dec
addr16
adcl
addb
imulb
ret
outsb
bound
add
dec
lahf
lea
xrelease
add
push
movsl
jo
ss
sbb
xchg
call
sbb
and
xor
fwait
mov
or
loope
jp
lea
push
push
outsl
in
cltd
out
inc
outsb
push
sti
and
push
arpl
sub
sub
push
add
jb
lcall
enter
fst
add
jbe
push
clc
pop
push
add
cmp
cltd
or
or
push
or
testl
faddp
adc
sbb
sbb
dec
or
mov
xor
inc
andl
cwtl
pop
jle
repz
mov
imul
adc
aaa
nop
mov
arpl
fwait
outsb
push
rolb
fisubrl
adc
add
iret
addr16
add
sub
fildl
rorl
xor
push
fadds
jo
and
inc
mov
in
xor
adc
jbe
inc
cmp
mov
sbb
nop
rcl
adcb
xchg
in
pusha
in
test
push
hlt
or
add
inc
cmp
test
or
add
loop
push
mov
shl
dec
jo
jmp
imul
adc
add
faddl
or
je
sub
sbb
or
pop
cmp
pop
add
outsb
inc
adc
push
ds
ljmp
movsb
xor
push
cmp
je
leave
rclb
stos
xor
add
sub
ret
dec
push
push
movb
sbb
dec
aad
mov
inc
adc
inc
roll
adc
adc
lds
sbb
jmp
clc
faddp
jmp
jnp
push
call
call
inc
or
fidivs
in
jno
cmp
push
inc
cmp
jae
add
push
and
outsb
cmp
sub
ret
xchg
mov
sbb
cli
sbb
test
insb
dec
or
mov
pop
mov
mov
jmp
mov
push
ret
ret
mov
jbe
clc
cmpsl
jns
pop
cld
flds
fsubs
popf
adc
sbb
mov
add
data16
leave
ret
movl
push
jb
test
xchg
lods
jmp
push
mov
bound
arpl
ret
fucomp
lea
push
xchg
push
mov
cmp
je
ret
dec
jno
mov
add
mov
push
shrb
je
cwtl
mov
pop
push
cmp
and
pushw
ret
or
add
outsb
push
fisubl
inc
push
jl
push
sub
test
arpl
loopne
icebp
sub
push
adc
in
js
push
push
adc
adc
sub
jecxz
xor
inc
nop
push
test
ret
lock
fisttpl
jecxz
jmp
add
dec
dec
inc
jp
and
roll
sbb
out
jb
je
loop
repnz
add
sub
add
or
neg
push
cwtl
add
add
or
rorb
or
out
jne
inc
xorb
push
push
je
inc
mov
jno
add
mov
int
enter
adc
xchg
push
shrl
add
dec
fcoml
xchg
add
push
ret
imul
and
adc
jb
pop
add
int3
xchg
enter
mov
cmp
outsb
xchg
lahf
xchg
xchg
push
pop
sarl
xorl
pop
lods
sbb
andl
outsl
mov
dec
jnp
jno
sahf
add
dec
hlt
jne
test
add
inc
fcomps
fwait
or
push
add
push
ja,pn
dec
sbb
clc
movsb
lock
add
movl
xchg
push
inc
add
mov
pusha
inc
insl
mov
cmpsl
push
push
pop
lea
xor
push
mov
xor
js
scas
stos
cmp
lcall
pusha
mov
sub
mov
mov
insb
inc
push
fmull
je
out
jne
mov
dec
js
jl
xor
cmp
xor
inc
push
sbb
xchg
out
push
add
push
bound
lods
push
xchg
add
mov
dec
push
clc
push
lods
or
add
mov
dec
pop
mov
push
or
xchg
xor
out
push
je
jo
jb
and
pop
fs
lahf
cmp
sub
add
sbb
jg
inc
jno
daa
add
add
ret
push
leave
push
xchg
adc
adc
mov
xchg
sbb
bound
mov
mov
add
imul
js
xor
js
insb
lods
mov
push
clc
dec
std
sub
or
dec
adc
loopne
cmp
add
pop
or
push
jmp
je
callw
mov
dec
cmp
aam
jg
ret
rolb
mov
or
int
inc
outsb
in
es
bound
dec
jg
lret
data16
popf
dec
add
add
add
cltd
sub
cmp
es
fildl
nop
xor
shlb
and
mov
push
jmp
fsubrs
arpl
cld
lea
loopne
mov
stos
and
push
loopne
in
or
pop
js
sub
shl
xor
cwtl
nop
add
mov
or
xchg
and
lds
repnz
push
xor
push
adc
call
inc
movsb
loope
outsl
push
cmp
jno
sub
lock
lods
xor
add
repz
popf
jg
or
or
or
iret
push
pop
add
lea
cmp
fmull
dec
jge
pop
xchg
add
ja
arpl
out
cmc
xor
int
out
xor
and
adc
repnz
or
push
movsb
cmp
pop
insb
xor
negb
or
sub
xor
rcrl
leave
lea
jg
pop
fidivrl
mov
ljmp
push
loope
jl
clc
adc
pop
xchg
hlt
insl
pushf
mov
pop
pop
dec
xor
js
test
sub
add
cmp
add
movsl
aaa
cmp
jp
sbb
push
sub
pushl
mov
or
clc
and
mov
popa
dec
bound
push
jno
xor
sbb
jmp
aam
xor
jge
inc
lcall
aas
mov
mov
xchg
jb
xchg
push
or
popf
add
cmp
push
cs
and
iret
cltd
sbb
insl
sub
ror
jno
xchg
and
mov
lock
rolb
jg
outsl
lcall
inc
mov
stos
push
xchg
and
sub
testl
and
inc
cmp
sbb
js
or
xchg
ret
xchg
mov
or
push
pop
inc
or
test
pop
pop
push
mov
push
sub
cli
mov
xor
dec
pushf
sbb
sbb
in
sbb
sbb
xchg
push
stc
nop
add
push
icebp
cmpsl
xor
fdivr
faddp
je
add
cmp
pop
or
push
ret
nop
sbb
pop
push
or
cmc
jb
xchg
xor
mov
faddl
and
test
cwtl
pushf
jl
sub
out
and
lods
andb
and
or
shl
and
iret
or
dec
adc
inc
and
inc
test
inc
mov
lods
lcall
clc
add
aad
sub
dec
sub
mov
inc
and
pushl
mov
xor
jmp
adc
out
pop
inc
mov
ret
notb
and
cmp
loope
inc
jae
ret
cld
sbb
lahf
push
jmp
jcxz
out
les
js
cmp
or
sbb
inc
add
mov
addr16
sub
push
dec
add
or
cmc
add
loopne
push
test
ljmp
mov
or
outsb
in
xchg
test
outsb
insb
mov
out
ljmp
daa
push
pop
outsb
mov
sub
clc
js
adc
out
push
dec
imul
je
mov
mov
sahf
cmpsl
inc
hlt
lea
push
cmpsb
push
xchg
imul
pop
sahf
ret
cmp
mov
pushl
insb
notl
popl
int3
js
jo
inc
push
xor
pushw
or
cltd
or
stos
sub
enter
daa
icebp
je
xor
push
icebp
sbb
sbb
lea
sub
or
mov
cmp
dec
pusha
jo
inc
insb
pop
inc
jp
add
jne
stos
jnp
or
xchg
add
ss
mov
sub
inc
pop
test
and
hlt
mov
inc
push
aas
idivb
add
mov
std
pop
mov
sar
dec
mov
leave
add
pusha
push
jmp
xor
stos
hlt
mov
mov
xchg
dec
xchg
jo
in
or
or
or
divl
pop
mov
or
imul
push
movsb
clc
rorb
ds
call
adc
cmp
mov
pop
int3
insl
jle
push
subl
ret
outsl
ss
jbe
xchg
jae
jl
pop
sbbl
lea
ja
cmp
ficomps
xchg
aam
leave
jo
push
int3
repz
add
push
push
adc
cmp
fmull
popf
mov
out
rorl
in
loope
xchg
xchg
jne
xor
adc
cltd
inc
ds
mov
cmp
dec
xchg
adc
mov
jl
xor
scas
es
inc
mov
sbb
mov
xchg
cmp
bound
sub
xchg
negb
xchg
popa
pop
popf
nop
iret
adc
dec
xlat
inc
mov
test
icebp
xchg
pusha
jnp
add
xchg
push
hlt
icebp
inc
loope
cmpsl
adc
shrb
and
sbb
pushf
sub
mov
mov
add
loope
cmp
mov
push
fimuls
lea
jbe
pop
mov
or
push
mov
pushf
popa
pop
or
cmp
fs
into
or
and
fimull
cltd
mov
xlat
push
adc
jmp
inc
jle
aad
mov
sbbb
xchg
mov
jl
call
add
movsb
mov
dec
arpl
or
ret
adc
dec
jno
push
or
lcall
mov
and
pop
rorl
loopne
and
js
in
cmpb
cli
inc
js
test
test
scas
mov
aaa
in
cmp
xchg
jnp
orl
push
push
pusha
xchg
bound
je
mov
sbb
rorl
push
inc
pop
cmp
dec
pusha
cmp
jne
repnz
icebp
add
add
cmp
loope
sub
xor
jp
or
out
xor
daa
mov
test
aas
and
js
jne
push
sbb
add
xor
lock
stos
lahf
cmp
in
mov
push
xchg
adc
push
inc
fucom
shrl
push
pop
push
pop
test
test
or
mov
cmp
loope
les
fcompl
push
fsubrs
arpl
mov
call
aam
dec
in
adc
push
dec
rorl
aam
out
pop
push
or
lods
jne
xchg
and
pop
ss
push
into
mov
jmp
push
jb
dec
test
jmp
sbb
add
test
hlt
dec
test
mov
inc
sahf
pop
push
mov
fadds
cmpsl
fistpll
mov
push
push
mov
fwait
cmpsb
ja
fldenv
sub
or
lea
adc
mov
cmp
mov
push
jns
les
ds
lea
imul
pop
cmp
mov
mov
das
push
mov
leave
inc
push
add
loope
adcb
int3
in
sbb
and
sub
jns
or
add
ljmp
sub
sub
cmp
mov
bound
or
inc
adc
shll
lcall
mov
jecxz
add
and
and
dec
into
dec
mov
mov
sahf
dec
pop
cld
mov
mov
jae
shl
sbb
xorb
int3
mov
mov
testl
lods
aam
dec
pusha
xlat
orb
pushf
pop
leave
mov
add
jecxz
test
sbb
paddsb
xchg
sbb
jle,pt
sbb
das
sub
pop
fcmovnu
dec
pop
push
dec
add
add
jno
cmp
push
and
xor
dec
mov
fmuls
push
nop
adc
mov
pop
xchg
imul
in
mov
adc
xchg
pop
in
or
xchg
pop
and
lea
sbb
out
ret
mov
cmp
add
mov
decb
xchg
xlat
int3
push
aaa
fstps
xchg
mov
inc
loopne
push
mov
xchg
imulb
and
cmp
jo
jp
and
xor
push
jl
divb
adc
jmp
sbbb
xlat
jno
adc
mov
adc
ss
std
ret
and
add
dec
mov
fsubl
jae
test
aaa
pusha
sti
jle
jno
mov
or
dec
add
dec
or
add
movb
stc
cmpsl
or
int
add
xor
add
xor
jb
mov
xor
push
out
or
dec
push
popa
dec
enter
jl
roll
mov
xor
shlb
dec
mov
pop
sbb
loopnew
insl
insb
sahf
jmp
aaa
pushf
mov
mov
pop
dec
xlat
scas
sub
popf
jb
mov
mov
icebp
jb
push
adc
xchg
sbb
add
movl
ret
inc
adc
cmpsl
roll
mov
inc
jge
lahf
test
xor
and
jmp
mov
popf
fwait
scas
or
aaa
outsb
mov
scas
jge
and
cmp
cwtl
add
pusha
push
cwtl
adc
sbb
addr16
add
ss
cmp
idivb
mov
mov
inc
adc
xchg
cmp
cmc
and
shrl
xor
xor
dec
push
je
dec
jne
cmpsb
sti
dec
mov
clc
adc
push
xchg
shr
and
xor
xchg
pop
cmc
or
bndldx
sarl
aam
inc
insl
and
mov
int3
pop
xor
sbb
repz
mov
add
scas
stos
sbb
dec
xchg
dec
sub
mov
and
and
andl
or
movl
xchg
daa
xor
mov
enter
push
lea
xchg
sar
cmp
jb
lea
or
insl
and
test
clc
pop
sub
jmp
lea
out
cmp
scas
insb
xor
xchg
ss
es
push
mov
pshufw
push
push
mov
mov
cmp
xor
adc
cmp
jge
into
push
mov
dec
jg
aam
clc
scas
mov
adcl
push
adc
imul
cmp
testb
push
test
adc
sub
or
inc
ror
je
clc
add
mov
dec
push
mov
mov
or
adc
dec
icebp
aad
mov
and
ss
push
nop
and
sub
mov
mov
dec
inc
fmuls
and
xor
sub
movsb
dec
lea
push
test
push
pop
xorb
or
add
call
adc
jecxz
mov
das
iret
adc
adc
movsl
fistpll
pop
or
iret
aam
cmc
mov
rcrb
mov
mov
cmp
pop
test
sub
fcoms
xor
jae
subb
scas
mov
and
dec
aam
mov
cmp
jne
adc
xlat
jbe
les
cmp
xor
sbb
xchg
iret
dec
sarb
or
pop
fsubrs
cwtl
rcr
testb
adc
push
and
sub
xor
jb
nop
cmp
inc
dec
adc
imul
fs
add
push
xchg
cmp
loope
pop
icebp
mov
dec
mov
int
fstps
dec
add
mov
xchg
inc
pop
dec
mov
ret
and
or
adc
fs
mov
jp
mov
inc
cmp
jbe
cmc
test
inc
pop
xchg
mov
movsl
out
jmp
or
xor
ret
sbb
sbb
inc
pop
andb
addr16
xchg
ret
ja
pop
mov
mov
mov
sti
aas
lods
jnp
lods
jo
enter
insb
mov
mov
adc
adc
ficomps
mov
insb
dec
or
sbb
mov
testb
sub
ss
mov
mov
xor
mov
lods
mov
jae
inc
loopne
in
in
add
pusha
push
push
ds
mov
sbb
push
mov
mov
xchg
cmpb
je
pop
push
daa
ss
sarb
push
loopne
lcall
push
xor
push
sub
lods
or
fdivrl
mov
int3
lock
or
or
jle
xor
mov
push
xchg
add
shlb
fadds
and
mov
pop
xor
sub
sbb
push
and
mov
jae
aaa
imul
mov
sbb
push
push
pop
lock
push
add
pop
push
pop
or
and
adcl
xor
inc
dec
fadd
dec
ja
movsl
inc
test
pusha
and
jp
adc
inc
fiaddl
cmp
pushf
jmp
mov
sar
test
cmpsb
mov
pop
roll
lods
aaa
pop
adcb
jbe
ds
iret
sbb
insb
bound
jnp
dec
je
mov
bound
sbb
cwtl
sub
je
incl
inc
dec
jns
push
mov
cmp
mov
dec
xor
aam
lods
push
cmp
dec
and
dec
inc
or
cmp
xor
pop
addl
push
test
adc
mov
add
and
push
cmp
dec
gs
or
jo
clc
int
sbb
test
xor
movsb
fildll
dec
xchg
rolb
jns
xor
push
xchg
mov
xchg
push
je
aad
sub
or
dec
cmp
cmp
mov
mov
mov
pop
jnp
xor
adc
push
xchg
adc
pop
push
or
loop
std
iret
in
rolb
les
or
push
movsb
popa
loope
adc
push
popf
pop
lock
dec
cwtl
mov
jo,pt
push
scas
subl
inc
add
adc
mov
fstl
mov
mov
xor
hlt
aas
cli
insb
and
sahf
xchg
and
enter
or
add
add
push
sub
jb
stos
push
mov
out
cmp
sti
inc
add
fstps
movsb
cmp
dec
inc
jo
cmp
fidivrl
xor
sbb
mov
dec
out
or
pop
imul
and
aaa
leave
sbb
test
mov
leave
sbb
lds
xchg
sbb
xor
test
pusha
add
xchg
mov
or
jae
pop
push
mov
add
jmp
ljmp
mov
adc
imul
add
mov
jns
add
aaa
dec
in
addl
loopne
pop
add
lea
mov
fistps
xor
inc
mov
mov
push
ss
mov
fwait
movsl
loopne
pop
adc
xor
or
xor
and
cmpl
xor
push
test
add
sti
dec
in
dec
pop
add
shll
aas
movl
repnz
pop
mov
xchg
add
mov
inc
push
dec
popf
push
dec
push
push
adcb
sub
and
out
bound
leave
negl
stc
nop
mov
adcb
sub
enter
aad
and
xchg
sbb
sub
sbb
lahf
jmp
jns
add
adc
mov
pop
ret
dec
js
pop
sub
xor
push
dec
daa
daa
imul
sub
jp
sbb
adc
popa
repz
cltd
adcl
dec
and
loopne
and
mov
and
call
jmp
mov
nop
out
nop
out
xchg
dec
sub
das
push
clc
nop
sbbb
xor
xor
xor
xchg
dec
mov
jb
xor
xor
xor
and
shll
xchg
or
popf
pop
nop
add
push
in
stos
sbb
or
dec
pushf
inc
aaa
ss
test
mov
cmp
je
mov
mov
xchg
adc
cmp
stos
adc
test
mov
mov
cwtl
xlat
dec
inc
cmp
dec
pop
dec
mov
cwtl
xchg
mov
xchg
jne
lea
orb
psubw
mov
push
or
inc
mull
xlat
jne
and
push
adc
out
divl
cltd
mov
and
mov
jmp
js
adc
sub
dec
ja
cmp
mov
push
push
xor
es
sub
scas
push
mov
mov
push
clc
jo
movsb
mov
pushf
mov
loopne
push
adc
movsb
pop
in
add
fprem
mov
pusha
sub
sbb
add
fs
pop
pop
mov
mov
into
stos
lahf
push
push
mov
fs
aam
mov
cmp
decl
aas
mov
sub
lret
mov
push
inc
jp
nop
pop
fbstp
loopne
mov
bnd
mov
lahf
sbb
sahf
into
xor
jmp
or
jns
sahf
jo
mov
pop
sbb
push
xchg
movb
es
and
addr16
dec
int3
test
cmp
sbb
pop
or
dec
andnps
loopne
pop
loopne
push
jg
mov
add
cmpsb
sahf
mov
sbb
incl
pop
add
mov
xlat
hlt
xchg
sbb
push
dec
push
add
cmp
in
or
cmp
mov
sub
mov
cld
xor
sub
pop
dec
std
push
mov
test
out
mov
cmp
cs
mov
lret
clc
clc
divb
mov
daa
negb
data16
mov
sbb
mov
pop
or
pop
jge
xor
mov
adc
fstl
push
adc
aas
cmpsl
fcmovnbe
nop
xchg
popa
adc
cmp
push
mov
aad
lods
cmpsb
mov
sub
push
xor
mov
mov
sub
pop
test
xor
mov
cmp
sbb
aad
pop
mov
mov
popf
adc
push
fimull
push
pop
or
jb
iret
sbb
or
stos
adc
mov
dec
push
test
out
lea
mov
dec
dec
or
lcall
test
pop
sub
dec
sbb
sbb
test
daa
sbb
jb
inc
jb
insb
sbb
xor
inc
sbb
jecxz
push
add
js
xor
adc
ss
push
jne
inc
dec
stos
mov
and
dec
mov
dec
lds
scas
inc
sub
adc
xchg
sub
mov
arpl
sub
jb
clc
pop
pop
add
dec
cmpsb
and
sbb
xchg
sub
sub
sbb
fisubl
and
mov
shr
in
cmp
sub
and
and
je
sub
mov
lret
push
jne
iret
jne
repz
xor
shrb
xchg
lea
or
movl
lea
lcall
bt
movsb
sbb
les
inc
lods
adc
or
scas
cwtl
xorl
dec
ret
and
add
wbinvd
push
inc
fisttps
inc
ljmp
add
adc
cmp
cmp
or
repz
xlat
or
push
hlt
and
in
sbb
ja
push
loopne
std
jno
cmp
or
sarb
call
push
movsb
jnp
iret
pop
es
shr
ja
and
js
and
push
popa
add
rorb
clc
add
insb
repz
adc
pop
test
sub
sub
add
popl
and
pusha
inc
cmpsl
fdivrs
ja
sbb
fists
pusha
jle
insl
sub
js
lea
jmp
add
xchg
shl
repnz
xor
inc
movsb
jl
fiaddl
cld
and
adc
lods
or
aad
push
xchg
sarb
insb
adc
imul
mov
add
mov
adc
jnp
stos
dec
xchg
jne
clc
test
xchg
lods
orb
sbb
add
xchg
movsb
or
xchg
mov
sub
enter
pop
jmp
in
cmp
jge
mov
xchg
sbb
pop
pop
push
call
ret
mov
push
aam
add
mov
xchg
inc
jp
loopne
add
aad
loopne
mov
mov
lret
inc
faddl
movsb
inc
les
cmp
lock
sub
inc
jo
mov
cmc
fldl
mov
lds
stc
rcl
jne
mov
xchg
pusha
fisttpll
sbb
outsb
data16
mov
into
push
jnp
or
mov
xor
test
xchg
xchg
push
ret
mov
lret
pop
mov
inc
inc
add
add
mov
sub
lret
sub
dec
in
add
sub
inc
cwtl
inc
data16
and
scas
or
add
hlt
xor
lret
or
outsb
and
pop
or
add
cmp
or
sub
sbb
test
cwtl
sbb
mov
js
lock
inc
mov
add
inc
push
cmp
mov
or
mov
scas
and
popa
or
sbb
push
cmp
adc
shll
popa
mov
jo
mov
lret
lcall
sbb
and
dec
iret
inc
lea
test
loope
js
dec
cmp
fadds
loopne
stc
adc
or
push
popf
sub
ret
xor
shlb
lods
mov
ret
push
fisubl
jns
sbb
ds
push
ret
out
outsb
rolb
cmp
inc
jne
cmc
mov
cmp
inc
in
cmpsb
test
or
es
push
dec
lea
xor
mov
mov
mov
pusha
call
adc
bound
fcomps
das
mov
pop
bound
sti
cmp
xor
adc
mov
mov
fucom
repz
mov
or
popa
rcrb
lock
mov
mov
arpl
sbb
add
ret
stos
fisttpl
mov
pop
enterw
xor
dec
mov
gs
pop
hlt
shll
inc
pop
rcl
int
mov
ret
mov
pop
xchg
inc
sub
push
in
push
clc
lret
add
xor
jge
sbb
pop
and
sarb
pop
lea
pop
push
push
xor
sbb
push
cmp
inc
push
push
stc
mov
test
js
sub
je
stos
add
inc
push
in
xor
mov
js
add
adc
test
push
dec
dec
fsts
inc
cmp
je
cmp
inc
rcrb
push
adc
cmc
xchg
adc
in
cmp
mov
popa
sti
mov
dec
add
jne
mov
or
repz
add
jge
xor
dec
or
shll
inc
popa
add
xor
repnz
cld
adc
gs
and
daa
and
fsubrs
inc
dec
aad
and
dec
xor
ljmp
add
jmp
test
add
push
stc
movsb
push
push
fwait
mov
jb
stos
push
sbb
mov
insl
xchg
daa
jge
xchg
pop
push
daa
mov
out
dec
sbb
data16
cmp
sub
sub
lret
add
mov
adcl
out
in
test
pop
xor
cmp
and
pop
inc
xor
cmp
mov
push
inc
xor
xor
fcoms
xor
adc
push
push
xor
xor
xchg
xchg
or
stos
sbb
cmp
rorb
dec
push
les
or
push
add
cwtl
mov
mov
aas
and
shr
and
test
ret
mov
insl
js
xlat
mov
shrb
adc
sub
xorl
lods
lds
mov
pop
jbe
je
pop
ss
outsb
adc
cmpsb
cmp
mov
js
inc
imul
xor
mov
adc
mov
add
dec
dec
test
imul
sbb
repz
jmp
test
pop
add
adc
dec
inc
jo
out
dec
mov
pushf
or
shrl
icebp
push
jns
add
movl
ss
insl
loop
dec
xor
repz
push
add
push
mov
add
cmp
and
inc
jnp
fimuls
push
dec
add
movb
xchg
lcall
aaa
sub
std
add
push
add
or
mov
fstps
test
in
lea
je
mov
test
jl
cwtl
pushf
sbb
movl
adc
sub
or
add
lods
cld
aaa
xchg
inc
subl
mov
adc
inc
loope
ret
push
adc
sbb
and
lods
cmp
push
dec
xlat
pusha
mov
addb
mov
add
andb
jno
push
cli
push
jno
dec
sbb
sub
mov
cmp
aaa
je
cltd
cmp
xlat
mov
inc
lcall
push
loopne
mov
sahf
in
loope
sbb
mov
sahf
sbb
pop
sub
xchg
push
inc
sub
fcoml
and
add
add
test
add
inc
cmp
push
or
sti
insl
mov
les
adc
inc
dec
fucomp
jo
dec
sbb
hlt
inc
mov
push
std
dec
xlat
icebp
mov
out
insb
mov
out
inc
or
bound
mov
xor
mov
das
mov
divl
xor
add
fidivrs
dec
pop
cmp
pop
or
cmp
pop
mov
ljmp
mov
or
roll
or
das
push
adc
mov
dec
sbb
pop
repnz
sbb
adc
mov
push
js
xor
pop
add
mov
stc
xor
push
aam
or
int
push
dec
jmp
jne
jnp
mov
mov
add
add
or
cltd
hlt
in
sahf
movsl
lahf
movsl
out
lahf
mov
adcb
lock
jmp
adc
mov
pop
cmp
scas
push
ret
aaa
push
les
push
mov
iret
xor
push
adc
movsl
bound
xchg
mov
addr16
or
or
leave
leave
dec
insb
js
push
jmp
insl
test
loopne
and
xchg
and
push
jmp
loope
scas
test
add
sub
or
mov
and
sbb
cmp
cmp
mov
lock
add
cmp
lahf
fldl
rorl
cmp
jl
or
mov
mov
incl
or
adcb
out
ja
cmp
in
mov
movsbw
add
cmp
jne
outsb
pop
or
je
adc
test
dec
inc
push
insl
dec
adc
std
xor
or
cmp
scas
insl
mov
inc
or
rolb
loopne
js
out
dec
ds
je
mov
or
cltd
lea
insl
mov
popf
ljmp
adc
cmp
push
mov
inc
aam
mov
xor
or
and
call
sub
ss
ss
sti
hlt
aam
dec
sbb
mov
pop
imul
mov
imul
mov
pop
push
sub
sbb
inc
push
lea
add
and
sbb
add
dec
aaa
lock
loopne
out
jmp
adc
icebp
xchg
xchg
adc
cmc
add
sbbl
pushl
in
test
pop
in
add
insl
mov
lret
pop
rorb
sbb
sbb
rorb
lcall
push
fcoms
push
sbb
cmp
lea
je
jno
and
lahf
stos
pop
lcall
jns
std
or
add
arpl
pop
ret
dec
jmp
sbb
or
add
jecxz
cmp
lods
or
addr16
pusha
popa
cld
push
bound
jbe
push
in
cmc
in
jle
shlb
and
sub
and
add
mov
inc
or
xchg
pop
hlt
loope
shl
imul
js
fucom
ja
and
mov
xor
mov
push
add
rolb
push
mov
jecxz
mov
sub
jmp
ret
dec
call
sbb
adc
dec
mov
cmp
xor
jge
add
pop
arpl
cmp
or
xor
xchg
push
pop
xchg
in
stc
inc
pushf
sub
or
fadds
movsl
dec
int3
lahf
ret
mov
dec
std
jnp
pop
movl
testb
xchg
pop
xor
or
add
cmp
pop
loope
test
sub
push
cltd
inc
loope
das
add
shlb
sti
ret
mov
bound
mov
fldt
les
cltd
cs
lods
xor
cmp
jno
lock
xchg
mov
inc
xor
jne
or
inc
sub
and
mov
inc
sub
xchg
dec
sbb
inc
pop
aam
jecxz
sarb
jmp
add
sub
iret
add
pop
cmp
cmc
adc
pop
inc
jl
pusha
jne
roll
test
sbb
test
push
cmp
mov
jno
and
outsb
add
pop
mov
add
bound
movsl
inc
xlat
dec
ret
movsl
rorl
pop
repnz
or
insb
cmpsl
icebp
xor
inc
aas
js
arpl
adc
push
cwtl
mov
test
inc
mov
sub
sub
mov
ss
aam
pop
aam
cwtl
sub
xchg
stc
cmpsb
mov
imul
add
push
push
push
push
pusha
fmul
add
mov
fwait
or
adc
je
notb
fsubs
mov
adcb
icebp
dec
jne
sub
aas
jl
cmp
jne
in
adc
hlt
and
cmpl
mov
lods
xchg
aam
cmp
jl
mov
and
imul
push
add
or
repnz
ficompl
dec
xchg
nop
and
fld1
push
adc
pushl
ss
cmp
outsl
add
lahf
dec
xchg
sub
add
sub
mov
xchg
jp
cmp
shr
inc
jo
movsl
cs
mov
imul
jbe
inc
cwtl
lcall
call
pushf
ljmp
push
out
add
mov
pop
or
cmp
fnstsw
mov
jmp
test
ret
cmp
jle
cmp
js
jge
idivb
test
xorl
pop
xchg
test
sbb
ret
xchg
cmpb
hlt
or
dec
inc
dec
sbb
jnp
js
dec
add
add
inc
adc
xorl
lods
adc
jno
pushl
sbb
push
pushf
and
push
and
xor
sbb
sub
fs
pop
add
test
mov
imul
enter
mov
imul
shrl
push
mov
loop
or
repnz
jbe
jb
cmc
fs
xchg
push
rcrl
or
push
rcl
ds
fbstp
push
pop
push
fadds
add
mov
inc
inc
shll
jb
push
aad
jbe
cmp
lcall
mov
loopne
jne
int3
clc
in
xchg
ret
jb
or
add
sarb
push
push
roll
lea
adc
mov
sahf
rorl
push
arpl
mov
add
shll
lahf
jne
mov
push
sub
sub
testb
stos
add
and
std
pop
sets
dec
in
push
add
fmull
inc
sbb
shll
sbb
or
gs
sub
in
orl
xchg
shrb
subb
je
inc
jmp
lods
lds
push
enter
fcmovu
inc
loop
jb
add
les
add
inc
push
mov
jo
loopne
int3
fiadds
bound
out
mov
cmp
push
xor
mov
sub
add
add
out
orb
pop
dec
pop
ret
out
loop
and
icebp
lahf
mov
enter
add
cmp
je
and
jle
jo
int3
pop
push
scas
inc
jl
xchg
adc
pop
sahf
sbb
and
push
inc
adc
cmp
icebp
and
dec
test
popa
inc
or
cltd
mov
daa
dec
mov
push
jbe
cmp
je
adc
sti
test
sbb
lcall
mov
adc
inc
popa
inc
xchg
or
cmpsb
cs
popl
and
jnp
mov
adc
sub
adcl
leave
ror
mov
mov
add
cmp
icebp
insl
arpl
rcll
push
lods
movsl
je
or
dec
arpl
dec
mov
icebp
mov
xchg
mov
into
and
mov
push
inc
fcomps
and
insb
cltd
fs
orb
dec
sub
test
shll
xchg
or
inc
loopne
aam
ret
mov
xchg
inc
sub
stc
mov
push
pusha
mov
insb
lea
adc
or
sbb
cwtl
add
dec
push
rolb
push
push
sbb
adc
cmpw
fidivrs
jne
xchg
jne
push
push
sbb
mov
ss
push
pop
mov
add
sar
es
jae
push
jle
je
pop
cmp
inc
jbe
xor
pusha
mov
jns
adc
adc
add
inc
mov
pusha
lds
lret
xor
pop
xchg
pop
xor
pusha
jne
sbbb
sub
cmpb
shr
popf
xchg
in
mov
dec
movzwl
jnp
add
pop
or
movzbl
push
add
cs
sti
rclb
add
sbb
cmp
mov
pop
insb
jl
icebp
mov
aas
inc
mov
fdivl
add
add
mov
mov
aas
pop
push
icebp
aad
std
daa
lock
pop
mov
xor
jb
clc
pop
and
pop
and
enter
leave
bound
hlt
jne
jb
xchg
mov
xlat
cmovg
pop
dec
pop
push
pop
push
rorl
jo
cmp
lods
cmp
fdivl
and
cmp
adc
push
mov
in
and
icebp
push
pop
adc
sbb
xchg
je
addl
pushf
adc
sbb
push
xor
sarl
roll
add
ss
fucomi
stos
dec
push
or
push
mov
pop
mov
cmp
mov
adc
add
arpl
mov
sar
out
push
mov
out
pushf
adc
lds
bound
lock
test
xor
adc
nop
or
enter
pushf
inc
imul
ret
jnp
fsubl
movsl
dec
inc
iret
mov
stos
cmpsb
mov
inc
or
pushl
sbbb
fwait
in
add
jge
mov
mov
sbb
pop
push
js
mov
inc
scas
or
cwtl
mov
shll
pop
ret
orl
mov
ret
push
andl
dec
and
ret
sub
sbb
and
inc
movsb
dec
inc
arpl
mov
adc
pop
sub
sbb
daa
test
hlt
jmp
jns
cmp
jne
movsl
std
or
loop
jmp
and
or
adc
mov
in
fdivrl
mov
and
hlt
clc
fidivrl
inc
jl
enter
push
neg
jl
aad
fiaddl
jle
lea
sahf
and
popa
test
jb
cwtl
popf
and
mov
cs
xchg
lock
pop
jne
outsl
push
and
add
push
sub
xor
push
adc
ja
inc
push
divb
and
test
scas
push
mov
icebp
pop
dec
loopne
scas
je
jp
push
dec
imul
in
push
fnstsw
subb
stc
leave
xchg
cmp
mov
loopne
in
sbb
jmp
dec
sbb
insb
inc
loopne
pop
jp
sbb
inc
nop
jo
pop
adc
mov
pop
inc
pop
lock
sbb
xor
dec
and
mov
stc
mov
and
mov
pop
dec
cmp
inc
jle
cli
dec
sahf
test
push
push
mov
pop
inc
sub
inc
push
addl
add
cli
and
pop
adc
inc
mov
xchg
loopne
sub
sbb
je
rcl
push
adc
pop
or
dec
dec
mov
add
gs
add
clc
ret
shlb
sub
daa
aad
sub
shlb
rclb
aaa
scas
test
and
cmp
std
xor
jmp
push
push
das
sub
mov
pop
pop
div
sbb
sbb
jmp
adc
pop
popf
sub
xor
mov
mov
filds
xor
or
inc
sbb
push
pop
inc
bound
inc
lea
bound
mov
ds
fwait
mov
out
cltd
test
cmc
xchg
add
dec
call
and
mov
inc
in
sub
mov
and
jnp
sahf
sbb
stos
pop
aaa
es
pushf
and
adc
inc
xor
xor
mov
xchg
inc
xor
push
mov
dec
jne
test
lret
sub
jbe
inc
add
xchg
repnz
mov
sbb
mov
xor
inc
jmp
push
pop
ja
dec
xor
add
cmp
sti
dec
jmp
push
inc
dec
sbb
add
leave
xchg
adc
sbb
push
xor
icebp
lret
sbb
xor
inc
push
inc
jno
mov
sub
pushf
cmc
pusha
jp
int3
popf
std
add
mov
mov
mul
scas
sti
xorb
movb
sahf
jne
and
ss
shlb
int3
push
xchg
xchg
jp
rclb
adcl
dec
and
cmp
orb
push
dec
and
pusha
push
inc
inc
loopne
int
push
push
or
lea
push
rorb
xor
or
xor
jo
jo
sub
dec
push
xchg
add
call
popa
addr16
sbb
loope
or
lret
hlt
mov
adc
dec
in
mov
shr
dec
lret
mov
int
lds
shrb
fwait
les
sbbl
rolb
dec
iret
test
xor
add
push
outsl
enter
jmp
jns
sub
mov
push
mov
jle
adc
xchg
jo
add
mov
lock
fiadds
lds
fidivl
or
dec
adc
and
aam
jl
gs
jmp
add
sbb
push
and
push
das
cmp
adc
cmp
cmp
push
sar
pop
ret
mov
add
mov
aad
sahf
xor
mov
mov
loopne
lock
jmp
enter
push
add
cmp
xor
cmpsb
push
lods
rcr
push
push
push
repnz
and
add
inc
mov
pop
aaa
outsb
lock
inc
add
std
incl
sbb
xchg
ss
je
cmp
jbe
adc
lods
mov
lods
cmp
jmp
push
jg
lods
nop
repz
cmp
xorl
push
mov
pop
and
add
inc
dec
or
jno
push
xchg
dec
and
xor
push
rorl
push
jmp
fnstcw
sti
jne
push
nop
test
faddl
cmp
in
sbb
xor
or
outsb
mov
mov
loop
loop
nop
shl
or
push
mov
stc
mov
cmc
stc
adc
pop
mov
xadd
cmp
or
adc
insl
push
add
aas
jbe
in
lcall
testb
enter
or
lock
add
or
cmp
je
mov
add
es
push
and
mov
es
lcall
cmp
inc
adc
sbb
cmp
push
or
pop
jo
pop
dec
test
stc
decl
or
movsb
fmuls
loop
xor
jne
enter
js
adc
pop
lcall
add
add
lea
mov
push
jnp
lds
jns
mov
jo
mov
insb
in
push
mov
cmpb
lcall
mov
or
adc
inc
mov
xchg
movb
or
mov
fcmovnbe
out
mov
inc
sbb
dec
and
inc
add
test
test
outsl
sbb
fiaddl
cmpsb
sbb
pop
and
aam
and
es
lcall
aaa
mov
lea
pop
pop
jo
insb
push
ficoml
outsl
push
or
sbb
adc
repnz
push
and
ss
jg
adc
andl
or
pop
flds
lahf
aas
add
jb
mov
jo
stc
addr16
or
mov
in
mov
insl
fldl
outsb
sbb
sbb
add
inc
mov
test
or
dec
cmpsl
gs
or
shl
nop
and
je
inc
adc
sbb
dec
aaa
sub
lar
lahf
test
lea
jo
repnz
adc
add
or
fimull
addl
repz
mov
or
pop
sub
ficomps
jne
push
and
push
push
add
andl
inc
cmp
jmp
adcb
in
popa
or
dec
ja
pop
sbb
test
mov
xchg
dec
push
cmc
or
movntps
test
test
je
xchg
push
adc
insb
mov
pop
cld
xor
push
cmp
or
dec
cmp
push
or
mov
jl
pusha
xchg
sti
mov
filds
mov
orl
pop
pop
inc
and
xor
daa
add
add
xchg
les
push
in
push
xor
xor
sub
sbb
xchg
fwait
loope
rolb
pop
cmp
add
adc
adc
push
sbb
sbb
movsb
movsb
loope
pop
push
loop
sbb
pop
adc
ss
xchg
repz
push
sub
or
mov
mov
sbb
jae
movsl
and
push
dec
pop
xlat
movsl
sub
cmpsl
dec
xor
popf
nop
mov
jne
ret
mov
or
inc
inc
xchg
mov
fildl
jg
pop
pop
orl
pop
xor
xchg
imul
lea
sbb
cld
push
push
add
and
ret
add
sub
mov
negl
test
movsb
sbb
cmp
sub
mov
dec
inc
cwtl
push
aaa
fstpl
dec
dec
push
inc
push
sub
bound
lock
int
and
popa
xor
sahf
cmp
movsl
mov
adcl
ficompl
xchg
inc
mov
ret
push
lahf
inc
ss
and
or
push
std
sti
and
loopne
push
mov
movsl
adc
andl
mov
and
fwait
mov
scas
loopne
push
cli
in
in
repnz
ss
es
ret
in
push
add
pop
xor
mov
shrl
in
scas
clc
fimuls
adcb
xchg
out
mov
pop
sbb
push
sub
add
icebp
pop
jo
loopne
jg
add
stos
lock
sub
sub
sub
fs
mov
or
jae
fstl
mov
fnstsw
xchg
and
outsl
mov
xor
jg
aas
cwtl
bound
xlat
lods
pop
repz
jmp
adc
jecxz
add
flds
sub
insb
outsb
or
pusha
movsl
adcb
cmp
jbe
lock
and
mov
xchg
xchg
nop
dec
bound
mulb
xor
jecxz
pop
insl
out
or
cmpsb
repz
sbb
fisubrs
mov
ficoms
and
push
xchg
outsl
xor
je
or
or
xor
shl
xor
mov
sbb
je
cmp
or
adc
add
repnz
fldl
xchg
or
mov
and
sub
dec
sub
or
decl
daa
and
ret
adc
nop
fs
or
xlat
subl
lock
adc
jle
dec
js
mov
faddl
and
push
lds
nop
mulb
in
lods
and
mov
pop
decb
push
orb
or
mov
mov
bound
sub
inc
xor
sbb
sbb
or
push
loopne
mov
ss
pop
jno
lds
or
std
jle
push
cmp
dec
inc
mov
mov
xor
push
lods
outsl
test
mov
and
push
fs
xchg
test
inc
add
push
sbb
lods
add
push
sub
push
addr16
pop
das
mov
sbb
adc
adc
adc
and
xlat
mov
adc
adc
shll
ret
decl
loope
add
movzwl
add
push
lock
pop
cmp
pusha
add
add
pop
inc
sbb
test
or
pushl
rolb
push
sub
mov
insl
jns
sub
daa
jne
aaa
mov
faddl
setle
jbe
or
fwait
call
xchg
push
cmpsb
cmp
adc
add
je
lock
cmp
xor
and
in
sbb
inc
dec
mov
or
or
mov
push
hlt
daa
mov
es
xor
aaa
inc
cmp
xor
pusha
sub
mov
hlt
nop
movsl
imul
fisttps
out
push
lret
and
dec
gs
xor
ficomps
or
adc
cmp
mov
popf
sbb
and
and
sbb
rolb
xchg
into
in
andb
mov
or
inc
lds
add
lock
leave
inc
clc
and
push
push
dec
pop
pop
shll
test
or
insl
or
push
inc
rorl
mov
arpl
pop
lcall
or
nop
dec
cmpsl
js
jno
push
mov
ds
mov
adc
cld
ret
sbb
mov
and
push
push
scas
movsb
pop
adc
pop
add
ficomps
mov
xlat
or
adc
lock
movb
int
sub
add
cmp
cwtl
aad
dec
mov
jae
aaa
lods
dec
add
cs
xchg
nop
cmp
xor
icebp
bound
mov
adc
add
in
outsl
inc
out
test
add
xor
and
popa
jnp
add
movsl
ds
or
leave
adc
roll
lods
add
and
rclb
dec
push
mov
sub
lea
push
es
adc
mov
push
adc
xor
and
jne
cmp
xchg
or
loop
mov
sbb
and
mov
sbb
jl
pop
mov
xchg
xchg
daa
xchg
xor
cmp
push
add
inc
push
cmp
xor
pop
dec
gs
inc
es
pop
cmp
push
fcoml
mov
aaa
or
rcrl
and
add
adc
arpl
ljmp
roll
mov
jns
xchg
dec
dec
inc
jge
mov
push
push
into
sbb
rcr
les
sbb
int
cmp
pop
dec
ss
push
ja
loop
mov
and
outsb
mov
stos
cwtl
xchg
nop
pop
jo
adc
or
lods
push
rcrb
xorb
cmp
or
icebp
or
adcb
and
addb
xor
jmp
fisubs
jno
pop
mov
and
testb
arpl
sbb
mov
lock
cs
cmpsl
and
rcll
mov
inc
or
jge
cmc
jns
std
add
push
push
mov
mov
test
inc
add
mov
and
mov
jo
es
jmp
push
lds
test
in
and
sbb
sbb
scas
jp
fistpll
ljmp
adc
mov
jecxz
test
sub
pop
push
stc
xchg
pushf
cmpb
aad
adc
add
dec
and
das
and
orl
mov
push
insb
push
cli
std
je
inc
sub
add
mov
sub
xor
out
cltd
ljmp
test
sbb
les
add
test
shlb
cmp
test
hlt
push
sbb
lea
lcall
jb
stos
sub
js
daa
je
jb
fsubl
and
out
pop
mov
push
jne
sbb
adc
pop
xchg
jg
ficoml
adc
xor
int
mov
in
add
mov
dec
or
dec
dec
bound
xor
adc
lea
test
push
mov
jmp
push
sub
pop
and
sbb
imul
xor
lcall
or
lea
cmp
mov
push
fimuls
mov
pop
sbb
fisttpl
mov
nop/reserved
mov
pop
inc
test
xchg
push
xor
pusha
mov
into
dec
or
in
inc
push
adc
shll
rolb
pop
pop
sahf
jl
mov
add
scas
loope
or
or
stos
lock
push
stos
in
sbb
or
xor
insb
ss
xchg
xorl
xchg
mov
dec
and
ljmp
subb
jns
add
or
and
mov
lea
push
jle
jne
pusha
xor
das
fmuls
lea
adc
push
sub
rorl
or
adc
fildl
mov
pop
pop
test
daa
xor
add
mov
cmp
clc
in
fcmove
push
rol
enter
cmp
je
adc
ret
push
pop
in
inc
pop
or
xor
and
xchg
add
cmp
mov
adc
inc
faddl
lcall
lods
stc
out
imul
je
xchg
or
jle
mov
push
jmp
add
push
pop
push
push
test
sub
mov
loop
push
push
fld
jmp
fldl
es
sub
in
loope
movsb
mov
jmp
imul
aas
or
and
rolb
push
lahf
in
sub
sahf
push
xor
daa
push
add
jb
add
inc
xchg
xchg
rclb
outsb
in
sub
and
pop
jnp
mov
rcrl
sar
ret
into
cli
dec
and
dec
xor
lock
mov
push
roll
mov
int3
cmp
roll
push
js
sbb
repz
mov
pushf
aam
mov
pop
or
sub
incl
testl
iret
push
sub
lea
insl
andb
push
or
pop
inc
sub
dec
les
inc
sbb
push
leave
test
ss
hlt
sahf
add
push
loope
mov
add
push
mov
push
xchg
inc
jl
xor
mov
ds
push
sub
sub
clc
insl
sbb
and
fcoml
fcom
insl
push
inc
push
lock
subl
mov
into
add
fwait
lret
test
lods
push
fisubs
gs
aam
xor
lret
and
in
lcall
adc
into
push
adc
push
inc
pop
std
lret
inc
ss
push
imul
cmp
add
test
fdivl
fisttpll
aas
xchg
mov
pusha
imul
iret
pop
xchg
adc
push
mov
xor
imull
flds
mov
adc
push
inc
call
cwtl
clc
inc
call
test
roll
in
adc
inc
or
and
mov
or
test
cmpsl
imul
enter
push
sbb
or
lods
imul
mov
mov
inc
pusha
add
cs
adc
es
mov
adc
mov
or
or
in
inc
insl
pop
and
add
testb
and
cmp
and
sub
jnp
add
cmp
push
cmp
dec
and
pop
imul
push
sbb
or
push
out
add
lods
mov
push
dec
pusha
adc
lcall
and
call
lcall
ret
scas
iret
lcall
js
or
mov
movsb
push
adc
movsb
mov
fsubs
mov
jmp
add
sbb
mov
adc
data16
and
movsl
scas
dec
cld
xor
jp
xchg
sbbb
mov
jg
jle
repnz
test
sarb
mov
cmp
jl
push
cmp
push
cmp
jle
cmp
out
iret
aas
jp
push
cmp
cmp
cmp
mov
mov
inc
ret
push
add
inc
jmp
pushf
push
movw
ret
push
inc
adc
and
icebp
jno
xor
dec
fwait
inc
or
fs
pop
idiv
adc
lds
call
dec
jecxz
mov
movsb
or
adc
inc
stc
mov
mov
push
sub
sub
popa
roll
mov
xor
add
inc
cmp
add
mov
add
outsb
push
loope
cmp
icebp
add
sub
out
in
enter
outsl
add
pop
pusha
sub
push
ss
sbb
leave
and
movsl
or
adc
and
adc
dec
sub
roll
pop
pop
jecxz
sbb
pop
int
cmp
push
mov
cmp
push
adc
sarb
add
lahf
xchg
add
add
mov
and
insl
jb
cmp
pop
add
leave
and
mov
sbb
and
cmp
mov
push
push
dec
mov
pusha
mov
pop
and
pop
push
les
std
cltd
inc
cs
insl
or
adc
dec
es
or
nop
iret
enter
cmp
add
test
ss
ficoms
mov
push
push
dec
addl
cld
daa
xchg
popf
faddp
cltd
in
je
inc
cmp
stos
outsl
aaa
pop
clc
add
xor
pop
adc
adc
fistpl
add
mov
stos
mov
sbb
push
and
inc
nop
sub
xchg
or
or
mov
leave
test
cmp
cmp
inc
sbb
sub
and
dec
xor
test
adc
cmpsl
or
jmp
sbb
push
and
and
mov
stos
adc
popa
hlt
push
ret
xchg
fcmovne
insb
gs
xor
jg
push
add
lods
shll
sbb
pop
push
sub
aaa
sbb
leave
enter
sbb
xor
or
lds
imul
mov
stc
add
adc
pop
inc
adc
adc
pop
jnp
jecxz
or
push
js
push
pop
adcl
ljmp
fisttpl
adc
sbb
add
in
arpl
lods
cmpsl
std
sub
mov
or
sbb
clc
xchg
hlt
add
mov
xor
cmp
add
adc
jmp
adcl
mov
and
sbb
mov
imul
aas
pop
add
pusha
add
push
shll
adc
add
xchg
sbb
ret
js
adc
test
sub
mov
dec
or
and
pop
jge
inc
cmp
or
js
adc
loope
push
nop
pop
push
jns
sbb
ds
add
fs
aas
inc
and
cwtl
sbb
les
mov
cli
fstps
add
imul
xor
in
xor
stc
sbb
xchg
add
popa
xchg
ja
mov
or
gs
addl
xchg
out
push
mov
mov
or
or
jl
jl
pop
adc
add
mov
insb
xor
sysret
lcall
or
shrb
add
mov
or
cmc
or
xchg
sbb
or
testb
and
cmp
mov
mov
cmp
prefetchnta
lret
test
and
add
sbb
imul
pop
or
xor
push
push
dec
adc
mov
pop
es
std
sbb
mov
test
insl
xchg
xchg
mov
test
push
push
inc
xor
rorl
sbb
pop
dec
rolb
sti
mov
in
inc
outsb
add
lods
jbe
popa
cmp
jbe
xchg
push
arpl
dec
divl
lock
add
push
pop
mov
push
or
pop
fildl
loopne
dec
lock
add
mov
jp
loopne
ret
filds
rcrb
mov
add
push
shll
mov
lods
add
inc
or
les
lock
inc
xor
lock
cmp
add
mov
jg
adc
or
popa
sbb
in
ret
xorb
push
imul
aas
lods
sti
dec
insl
and
adc
xchg
add
notl
adc
movsl
nop
sub
call
mov
aam
xchg
clc
add
lea
ret
sub
je,pt
das
add
xor
jle
jle
push
loopne
shl
add
cmp
add
inc
pushf
jl
filds
outsb
push
pop
pushl
stc
cmp
fstpt
push
adc
jle
xchg
xchg
loop
sub
movsl
addr16
inc
push
in
push
and
add
add
cmp
aaa
je
mov
fs
rol
push
movl
cmp
push
fsub
sub
cmp
pop
add
call
decl
inc
lock
loopne
les
nopl
arpl
syscall
jp
movl
sbb
fldl
push
sbb
ss
mov
sti
in
ds
and
loopne
jg
mov
fstpl
nop
cmp
mov
push
push
jg
pop
pop
or
lahf
jo
jnp
xchg
add
pop
and
loope
fsubrp
leave
push
or
out
mov
leave
or
ret
adc
inc
aaa
and
int3
ds
and
jbe
sbb
test
xor
mov
daa
in
call
rol
add
ret
orb
shll
xchg
inc
mov
aaa
std
jns
stc
jge
xchg
xor
xor
lahf
rcr
add
fidivs
xlat
cmp
rcrl
mov
push
pop
dec
jbe
daa
movsb
sbb
ss
insl
adc
iret
dec
jle
jnp
dec
es
ja
mov
mov
xor
push
pop
inc
and
incl
push
hlt
push
inc
mov
ret
sbb
pop
incl
daa
add
push
and
sbb
insb
mov
out
or
add
or
or
jmp
ret
xor
nop
sub
clc
cs
lea
cmp
jb
stos
xor
shld
add
ja
jb
ja
push
mov
push
push
sbb
push
push
inc
and
or
lods
xorl
push
mov
fisubs
add
pop
repnz
pusha
push
ret
or
or
push
ja
cli
rcll
mov
ret
add
pop
pop
sahf
and
push
leave
aad
cmp
mov
inc
inc
enter
rclb
sub
pop
adc
and
shlb
or
jne
test
xchg
jno
add
adc
sub
insl
or
test
push
sbb
adc
mov
inc
data16
cmp
or
sub
and
testb
push
mov
dec
push
push
jl
gs
sahf
insb
mov
inc
lea
add
sti
jg
stc
std
mov
or
scas
adc
dec
out
data16
push
push
sbb
pop
add
push
push
push
dec
cs
daa
inc
xchg
or
rcl
xor
xchg
bound
mov
push
inc
add
lods
add
push
aam
mov
pop
add
aam
mov
push
sbb
xor
inc
rcrb
cmc
add
clc
sbb
pop
add
dec
xchg
shll
lret
mov
ret
orl
popa
in
jge
xchg
mov
pop
jo
sub
mov
mov
inc
fwait
push
and
inc
test
mov
adc
movsb
std
xchg
pop
xlat
sub
jo
xchg
imul
push
mov
fwait
sub
mov
mov
scas
mov
loopne
and
mov
or
add
cltd
addr16
test
xor
or
mov
dec
inc
loop
into
or
sbb
adcl
mov
xchg
jecxz
cs
lods
adc
inc
add
pop
subl
mov
add
sbbl
or
xor
cmp
xchg
dec
and
pop
xor
mov
and
imul
pop
xchg
dec
mov
ret
and
jge
jl
jno
xor
cld
pop
aaa
leave
sub
out
push
adc
mov
mov
mov
dec
xlat
ret
dec
push
cmp
rorl
mov
xor
aam
sub
cmc
or
inc
add
adc
sbb
xor
pop
je
in
push
mov
outsb
pop
jg
cmpl
popa
dec
sub
sub
mov
xchg
cmp
add
xor
add
dec
dec
jge
fldlg2
jmp
pop
push
cmpsl
push
addl
dec
push
popl
or
or
jne
adc
push
or
popa
push
cmp
xchg
movsl
fnstsw
mov
jo
dec
loopne
jbe
les
add
insl
sbb
adc
xor
ljmp
les
sub
or
ja
dec
jge
xor
fldt
add
outsl
jno
movb
ret
ret
outsl
mov
cwtl
adc
sbb
mov
and
ja
add
push
mov
jne
aad
ja
push
sub
je
sub
dec
incb
shll
sub
dec
jne
das
jbe
inc
sub
iret
scas
jl
mov
and
or
inc
adc
mov
jmp
push
les
push
jg
mov
fistpl
aas
push
jmp
push
js
jmp
in
rcr
cmp
dec
and
push
pop
pusha
inc
ja
mov
xor
add
mov
adc
mov
fnsave
por
aas
mov
test
push
scas
push
scas
adc
xchg
push
mov
sbb
aam
fildll
test
inc
mov
jbe
xlat
push
mov
adc
neg
lahf
pusha
lret
add
jmp
push
adc
sbb
dec
xchg
inc
cmpb
enter
inc
icebp
sub
sbb
jmp
enter
sar
adc
pop
cmp
sub
call
push
sbb
mov
inc
push
dec
mov
les
mov
push
enter
and
jnp
dec
or
negb
cmpsl
mov
les
jo
jle
call
dec
add
dec
movsb
sbb
jp
dec
aas
pop
sub
movsb
cmp
insl
jl
aam
mov
aas
sbb
push
sbb
dec
sar
jg
dec
out
jp
sbb
inc
fistl
lods
adc
lock
mov
push
out
sahf
xlat
xorb
orb
lahf
test
cmp
out
adc
es
repz
inc
push
pop
iret
repz
outsb
js
mov
mov
stc
cmp
repz
loop
testb
jns,pn
cmpsl
or
and
sbb
stos
jo
push
imul
add
and
sub
sub
jmp
jg
loopne
and
pop
mov
and
mov
insb
adc
jne
orl
fidivrs
push
int
shr
cmpb
add
mov
std
setnp
test
or
fwait
jmp
jl
and
and
mov
js
cmpsl
pop
pop
lock
or
mov
ljmp
add
out
fcompl
setge
mov
push
nop
or
test
pop
ret
xlat
es
fstpl
mov
faddl
and
add
mov
dec
roll
nop
push
sbb
enter
fwait
es
xor
push
bound
sub
pushf
or
movsb
jecxz
clc
adc
inc
push
aam
cs
movsb
sarl
push
cwtl
cmp
vmread
int3
pop
push
xchg
push
lea
clc
adc
dec
loope
ss
push
add
add
cmp
pop
add
cmpsl
jns
sub
jg
pop
jbe
inc
inc
lcall
add
or
fcomps
inc
jne
mov
dec
and
call
rorb
test
adc
cmpsl
sbb
mov
or
mov
or
les
cwtl
nop
les
cltd
shrb
movsb
rol
mov
pop
and
sar
or
sub
inc
cmc
inc
and
add
pop
test
or
lods
sbb
pop
sbb
push
add
test
pop
es
faddl
add
hlt
mov
mov
jl
scas
and
mov
sbb
cs
push
add
cmp
xchg
jne
dec
push
inc
jge
sub
adc
sarb
or
fldl
mov
xchg
mov
js
int
popa
add
add
jne
clc
dec
mov
sub
int
cmp
cmp
mov
or
mov
sub
lods
enter
xchg
sub
xor
mov
call
push
mov
mov
xor
roll
enter
pop
popa
sub
mov
arpl
xor
adc
jp
and
xchg
fbld
push
cs
jl
das
mov
mov
push
pop
push
fs
adc
and
das
mov
cs
sbb
and
rorb
and
xor
mov
pop
and
sub
xchg
lea
test
xchg
sbb
xchg
pop
shlb
push
sarb
adc
xor
xchg
xor
inc
sub
inc
sbb
xlat
sahf
jbe
call
sbb
outsb
insb
test
dec
cmpsb
mov
rolb
inc
cmp
push
inc
test
jo
mov
jl
add
mov
cmp
mov
push
cmp
test
jge
add
sbb
and
or
leave
pop
sub
sbb
sbb
and
xor
movsb
and
stos
movsb
jo
aas
rorb
adc
or
pusha
sub
sbb
mov
sbb
and
fwait
lods
sub
adc
test
in
xor
dec
xor
jl
or
pusha
rol
push
incl
push
aaa
pop
dec
fnstenv
jne
sbb
pop
cmc
test
add
mov
ss
aaa
mov
scas
int3
cltd
push
mov
or
pop
js
dec
movsb
ljmp
popf
xor
dec
inc
mov
js
adc
rorl
xchg
mov
fmul
sub
enter
sub
push
mov
push
loop
sti
sahf
nop
test
push
pop
adc
sbb
adc
aaa
pop
and
add
cmp
addl
cmpsl
or
enter
movsb
jp
xor
push
or
sbb
adc
rcrb
lret
aas
stos
or
movsl
xor
ret
das
adc
sahf
jo
push
xorb
aad
cmp
jecxz
jg
movsl
imul
mov
movsb
test
dec
test
add
cmp
movsb
enter
inc
imul
mov
inc
dec
mov
or
sbb
sub
inc
sahf
cmpsl
out
aas
ss
js
inc
inc
imul
fsubrs
dec
repz
xchg
mov
xchg
push
dec
add
dec
dec
add
fwait
xchg
ljmp
cmp
adc
lret
repnz
popf
testb
mov
push
push
je
lock
daa
rcr
xor
pop
scas
aam
arpl
ss
pushf
sbb
jecxz
pop
insb
adc
imul
and
loopne
pushf
movsl
or
adc
pop
fsubs
pop
ja
pop
ret
aam
push
cmp
loopne
gs
in
in
je
sub
pop
scas
ficompl
arpl
leave
pop
dec
fcoms
push
mov
jo,pn
mov
sarb
sbb
push
xor
sti
push
inc
jp
push
test
andb
les
bound
arpl
xlat
rorl
mov
pop
mov
aam
push
cwtl
sub
jb
daa
pop
movq
loopne
and
arpl
push
fwait
push
mov
int3
dec
adc
mov
sbb
rcl
clc
out
das
dec
fst
adc
push
insl
inc
adc
int3
push
imul
pop
xchg
push
mov
mov
sbb
mov
push
inc
pop
mov
push
dec
sbb
jl
or
and
push
lods
push
int
xor
pop
pop
mov
andb
dec
and
adc
dec
lods
xchg
sub
test
out
nop
inc
mov
fxch
mov
adc
push
and
sbb
sbb
sbb
cmp
sbb
pop
rclb
xchg
movb
xor
cmp
dec
bound
dec
mov
sbb
dec
push
cwtl
cmp
mov
dec
jb
cltd
out
xorb
adc
cmpsl
and
jo
and
test
push
dec
pusha
mov
in
cmpl
xchg
push
test
sub
adc
add
inc
fldl
aas
mov
je
push
dec
add
ret
jno
dec
pusha
inc
xor
lea
mov
lock
lea
data16
rclb
inc
mov
scas
stos
mov
in
push
insb
fmull
add
in
xchg
pop
leave
js
movsb
dec
dec
xor
lea
repz
xchg
call
add
pop
test
sbb
push
sti
in
pop
or
or
fsubrs
dec
rclb
dec
mov
test
adc
in
jmp
sub
jnp
jo
orb
ret
and
pop
pushf
btc
push
push
jg
idivl
sbb
cli
adc
sbb
pop
adc
jo
adc
fs
cmp
cmp
lret
adc
js
sti
adc
mov
push
adc
jno
adcl
pop
arpl
dec
pushl
loope
mov
das
clc
aas
adc
jmp
fistpl
sbbb
push
loopne
add
xchg
test
or
jns
sbb
sbb
mov
rolb
push
dec
loopne
test
ror
push
xor
inc
dec
and
push
dec
and
sahf
and
mov
lcall
sbb
cltd
iret
xor
daa
adc
sbb
test
pop
sbb
mov
ds
push
pop
sub
sbb
fs
lret
aaa
test
sub
add
shrb
adc
sub
xor
add
push
sbb
bound
add
xchg
aam
les
mov
cli
mov
and
sub
and
cmp
pop
pop
loope
insb
jo
pop
pop
loope
and
inc
cmp
mov
sbb
sbb
in
push
push
mov
push
push
in
push
sbb
in
sbb
sbb
gs
and
jb
push
adc
adc
adc
inc
xor
adc
loopne
push
addr16
sub
xchg
btc
bound
subl
loope
adc
mov
stc
push
fldcw
clc
pop
sbb
pushf
or
cs
adcb
ficompl
sbb
dec
imul
or
add
sbb
push
adc
push
outsb
inc
add
xchg
clc
cmp
cltd
add
rcrl
xchg
fisubrl
loope
pop
ret
inc
pusha
lock
cmp
js
add
std
test
imul
and
psubw
xor
int3
loopne
or
and
jo
notl
lea
mov
mov
loop
push
push
cmp
jbe
sar
pushf
add
jmp
sub
jl
iret
nop
jp
dec
in
aad
or
lods
into
rorl
xchg
fwait
jl
les
ror
add
xchg
push
mov
fnstcw
inc
adcb
cmp
push
add
mov
je
push
dec
ljmp
clc
pop
pusha
push
movsb
and
jl
or
jb,pt
mov
paddsw
jg
lahf
push
pusha
addr16
lock
addl
test
adc
js
sub
rcrb
adc
push
adc
xlat
jbe
fcmovnbe
jg
cmp
cmp
jne
inc
fdivl
jl,pt
add
mov
inc
clc
pop
outsl
sbb
insb
test
push
or
iret
jne
pop
divb
loopne
mov
repz
jae
movsb
jno
mov
nop
cmp
push
ljmp
je
mov
dec
shl
jg
xchg
incb
scas
or
dec
push
sbb
ret
sub
add
xchg
push
in
in
sbb
jge
mov
inc
insl
aas
popa
inc
mov
call
dec
out
imul
inc
test
xchg
stos
aad
or
dec
or
ds
ret
daa
imul
or
fcoms
shl
or
push
fbld
fcoms
pusha
rclb
xchg
xchg
adc
roll
mov
xchg
pop
aam
jbe
pushl
sbb
xchg
xchg
pop
pop
push
ret
push
js
dec
or
add
bound
pop
push
js
imul
adc
push
test
inc
decl
sbb
rolb
push
icebp
ss
jmp
jg
jae
cmp
jl
or
je
cmp
or
push
or
jmp
mov
movb
movsbl
shr
mov
add
loope
mov
nop
inc
mov
leave
jne
pop
xorl
mov
fbld
pop
mov
add
add
add
add
dec
or
xorl
mov
jle
into
cmp
cmp
inc
sbbl
addr16
inc
imul
aaa
shr
adcb
or
xor
daa
xor
cmp
add
or
mov
lahf
inc
lock
cwtl
ljmp
mov
cmpb
je
dec
and
or
enter
inc
push
std
or
pop
sub
cmc
jge
loopne
jmp
xor
or
mov
cmp
sahf
incb
arpl
xchg
push
push
pop
arpl
data16
sub
sahf
jno
adc
and
push
push
pusha
iret
add
scas
and
imul
mov
inc
idivl
test
sbb
jg
or
jmp
cmp
jne
cmp
cltd
add
enter
inc
mov
ss
shlb
push
add
dec
dec
addl
adc
rclb
mov
jb
xchg
push
movsl
aam
cmpsb
cmp
int
test
loope
push
ret
sub
sub
pop
scas
sbb
stos
pushw
and
pushf
loopne
pusha
add
ja
andl
sub
addr16
sub
sbb
sub
and
adc
sbb
mov
add
xchg
mov
adc
sbb
and
adc
mov
add
mov
sub
insl
test
inc
and
inc
pop
mov
push
sub
jne
mov
sub
adc
fadds
lock
addb
in
pop
sbb
cmc
or
add
sub
inc
pusha
push
xchg
mov
add
ficomps
inc
mov
or
pop
cmp
xor
cltd
add
pop
adc
add
scas
mov
mov
sbb
outsb
or
mov
test
xchg
fnstenv
jo
roll
fistl
fistps
add
lahf
push
mov
jle
xrelease
movsl
mov
cmpsl
shlb
shll
or
ja
addb
pop
xor
test
and
aam
mov
rcll
ret
in
inc
dec
push
incl
hlt
push
inc
sbb
test
insl
push
fmul
dec
xor
add
pop
pop
lret
movsl
jnp
mov
mov
enter
inc
inc
xor
in
shl
aam
lea
or
xchg
mov
adc
scas
mov
or
adc
addr16
subb
sbb
add
inc
sub
aas
inc
add
mov
int
jle
adc
cmp
fisttpl
jge
add
xor
xor
or
jl
aaa
and
jmp
cmp
push
sbb
adcl
aaa
mov
das
popa
cmp
jg
pop
adcl
js
adc
mov
test
mov
sub
cmp
xchg
aad
sub
roll
xchg
xor
push
xor
je
sub
inc
push
cld
iret
ret
shll
daa
and
jmp
stos
in
xlat
and
and
enter
in
sbb
push
add
jne
jae
imul
js
mov
push
test
dec
dec
mov
xlat
out
je
push
test
fdivrl
mov
icebp
dec
call
fwait
ljmp
jmp
jne
je
inc
push
cmp
jl
add
lea
push
das
sub
hlt
add
add
xchg
test
add
and
roll
adc
mov
insb
shll
push
mov
push
mov
cmpsb
lods
pushf
adcl
in
cmpsb
notb
xor
or
lret
xor
xor
sbb
add
jo
outsb
idivb
add
lea
mov
dec
mov
mov
jne
idivb
pop
outsl
add
aas
push
cmp
mov
or
pop
shll
mov
imul
rolb
mov
rdtsc
xor
pop
or
or
mov
loope
or
pop
sbb
push
xor
inc
xlat
es
das
je
jge
pushf
mov
push
sub
popa
and
cmp
gs
hlt
fucomp
imul
sub
cmp
mov
loopne
lret
and
push
jne
xchg
xchg
loope
pop
call
jl
inc
sbb
mov
dec
enter
add
and
fcmovne
imul
jmp
pop
sub
pop
jmp
in
jle
jbe
push
jecxz
addr16
into
sbb
mov
dec
fmuls
out
xor
xbegin
adc
or
cli
pop
repnz
pop
xchg
mov
add
stos
add
ja
mov
add
jle
test
push
push
add
pop
mov
lock
mov
add
inc
or
mov
shll
aam
mov
sub
mov
clc
pop
add
pop
mov
inc
rolb
xchg
sub
mov
add
pop
xchg
push
pop
test
mov
int
push
mov
push
push
or
adc
or
lret
es
frstor
test
inc
data16
cld
mov
cmp
adc
jne
daa
cld
cmp
out
bnd
adc
hlt
jne
or
jne
or
dec
sahf
push
xor
xor
ret
add
adc
js
pop
popa
imul
rcl
pop
inc
lahf
inc
add
push
lea
imul
sub
aad
stos
sbb
ljmp
icebp
fwait
in
inc
insb
push
fstl
mov
shll
mov
pop
dec
xor
push
jne
cli
and
psrld
movsb
sub
rep
faddl
mov
push
iret
stc
xchg
test
jo
loop
clc
sbb
int
dec
cmp
movsl
mov
or
xor
call
pop
lea
jmp
jno
sbb
jne
inc
sbb
adc
divl
or
jne
fstl
fcomps
loopne
rorb
adc
sbb
in
adc
mov
cmc
xchg
push
jl
outsb
loop
pop
ss
and
loope
add
xor
outsl
mov
icebp
pop
aam
xchg
icebp
inc
loopne
or
xor
pushf
jbe
sub
xchg
insl
and
outsb
jg
lods
sti
push
sar
call
orl
dec
xor
pusha
pusha
lcall
pop
int
inc
dec
pop
mov
xor
and
fs
push
nop
push
add
jne
scas
into
xor
xor
fs
sbb
fiaddl
pushl
mov
sbb
icebp
mov
fsubrl
dec
push
sub
jne
inc
xchg
int3
add
or
push
lock
call
aam
mov
mov
jbe
call
or
push
mov
int3
or
into
mov
cli
adc
push
cmp
pop
or
test
fcoml
or
add
fildl
cmp
add
std
dec
pop
lea
xchg
inc
push
repnz
adc
ret
loopne
psubusw
pop
clc
or
or
shr
jb
int
xchg
jo
jo
lds
loopne
stos
les
push
lret
pop
mov
dec
insb
push
pushl
nop
enter
dec
push
or
sbb
lea
cmp
test
gs
mov
cmp
mov
insl
sub
mov
jnp
fimull
add
push
les
cmp
cmp
push
push
negl
adc
mov
jmp
xorl
xchg
popa
pop
lods
dec
adc
sub
mov
mov
dec
pushf
fldenv
or
xchg
jnp
xor
movsb
pop
inc
jge
orb
xchg
mov
jo
push
xor
cmp
pop
faddp
pop
mov
loope
test
push
das
jae
sbb
dec
xor
xor
sub
cmp
aad
hlt
sub
test
pop
sbb
pop
adc
enter
mov
or
adc
xor
in
push
adc
jb
enter
inc
adc
mov
sbb
sub
enter
pop
xor
push
sbb
sbb
enter
adc
pop
repnz
dec
and
push
or
mov
test
or
cltd
inc
and
or
xlat
add
xchg
sbb
jecxz
pusha
or
xor
add
sbb
popa
sub
xor
hlt
sub
add
nop
xchg
inc
dec
pushf
push
enter
movsb
nop
jg
jae
pop
inc
jb
cs
sbb
xorb
pop
pop
shrl
xlat
addr16
cltd
pusha
popf
or
je
test
cmp
push
pop
sbbl
add
dec
jg
lds
rclb
je
jno
cmpsb
adc
movsb
stc
nop
mov
xor
add
dec
loopne
hlt
pop
xchg
inc
or
add
pop
adc
aaa
and
pop
xor
and
js
adc
movsl
test
or
or
add
in
or
inc
sbb
fsubl
jp
pop
jb
xchg
lret
fmull
rol
sub
js
pop
lock
out
pop
push
push
popf
cmp
inc
jbe
jp
test
add
fwait
leave
mov
repz
lods
inc
shr
xor
add
push
push
xbegin
or
jns
jno
xchg
add
xchg
push
lods
adc
add
jmp
sbb
xchg
call
push
cmp
cmp
jne
jae
in
call
mov
xor
xor
in
nop
adc
int
dec
add
inc
imul
add
vcvtpd2dqx
dec
fld1
jecxz
mov
push
fcompl
or
sbb
xor
jbe
jno
mov
mov
push
inc
je
jno
xchg
xorb
sub
mov
les
pushf
add
push
call
movsb
adc
pop
mov
pop
emms
xchg
mov
adc
mov
or
add
sbb
jno
lods
pop
leave
push
add
aad
push
gs
push
loopne
push
and
dec
mov
and
mov
sbbb
adcl
fcoml
add
and
cmp
ds
aam
int3
dec
pusha
faddl
cwtl
es
jne
mov
imul
push
ljmp
sbb
adc
inc
adc
mov
adc
or
inc
push
xor
divl
xor
lock
call
aaa
adc
in
dec
and
add
fdivrl
add
repz
pop
sbbl
arpl
wbinvd
scas
dec
jnp
sbb
psllw
daa
add
call
clc
cld
xchg
fbstp
sub
adc
adc
je
mov
shlb
add
lods
adc
les
iret
leave
rolb
test
push
add
es
inc
xchg
mov
xchg
je
fs
jecxz
cwtl
movsb
mov
adc
jo
call
adc
dec
xor
lds
lock
sbb
call
aam
jmp
jmp
popa
movsb
ljmp
imul
push
loopne
cmpb
fdivrl
test
shlb
push
fwait
hlt
jns
pusha
in
or
test
mov
xor
repz
out
mov
lea
add
cmp
mov
je
sub
out
movsl
and
dec
inc
push
stc
out
add
cmpsb
mov
or
mov
jnp
push
jmp
or
pop
pusha
loopne
jmp
add
or
sbb
stos
push
pusha
mov
jmp
rcrb
imul
iret
mov
cmpb
mov
dec
loopne
roll
push
sub
push
pushf
cwtl
js
push
out
adc
stos
adc
add
in
or
lds
mov
add
cli
mov
rcl
pop
lock
inc
jo
into
xor
dec
fildl
and
jl
out
mov
xor
push
je
movsl
ja
or
xor
mov
leave
cmp
je
or
clc
fwait
nop
std
xor
add
sbb
xchg
ret
pop
nop
push
clc
pusha
iret
adc
push
les
ds
ret
jg
mov
js
hlt
jae
movsbl
loope
mov
sbb
inc
mov
hlt
sub
mov
add
sbb
scas
sarb
pop
jmp
enter
incl
inc
incl
sahf
add
or
jecxz
js
jmp
or
add
inc
cmp
jl
cli
jne
sbb
aas
dec
mov
and
add
sar
add
imul
pushf
clc
xor
xor
ss
cmp
jecxz
adc
pop
mov
inc
jne
enter
adc
ficoms
sub
jne
fs
xor
mov
fnstcw
mov
inc
test
lea
inc
cli
cmp
cs
xor
jp
jbe
jg
imul
add
lret
mov
add
addl
adc
mov
imul
pop
dec
std
push
cmp
jl
cmp
jle
insb
aas
mov
mov
mov
fwait
js
fistpll
pop
cli
js
inc
mov
add
dec
jne
sub
lret
shlb
add
rolb
int
push
shl
sbb
add
cmp
push
ret
or
loopne
dec
clc
adcl
jmp
lcall
call
cwtl
inc
adc
dec
in
insl
scas
je
mov
pop
push
sub
dec
sbb
mov
add
in
push
xor
sbb
aam
mov
in
mov
repnz
ljmp
lods
sub
sbb
hlt
loope
stos
sub
mov
mov
or
add
nop
je
pop
add
mov
push
xorb
pop
push
jmp
mov
push
test
enter
repnz
or
out
mov
out
fcomps
daa
xchg
adc
add
xchg
jmp
push
add
and
in
sub
pop
add
push
icebp
imul
push
inc
stos
add
in
inc
add
fadds
xchg
stc
movsb
xor
dec
decb
sbb
cmp
into
ficomps
inc
lcall
dec
jns
lret
add
addr16
jnp
mov
jnp
add
xchg
outsl
jp
mov
bound
adc
stc
clc
xchg
nop
lea
xchg
mov
fadds
scas
sub
and
push
sbb
xor
mov
sahf
cmp
inc
iret
push
test
fdivl
sub
cmpl
xor
mov
xor
sarb
mov
push
int
pop
insl
mov
push
cmp
mov
adc
aas
test
aaa
push
xchg
dec
adc
or
push
test
push
test
or
rorb
and
outsl
ja,pn
push
test
aad
cmp
sahf
lcall
mov
dec
adc
int3
add
aam
icebp
cwtl
subb
daa
psrad
add
mov
orb
pop
mov
or
push
roll
insb
adc
mov
xor
jo
sbb
jl
mov
mov
nop
mov
sbb
xchg
out
inc
mov
pop
scas
xorb
aam
jne
loop
cltd
or
push
jmp
mov
daa
adc
cmp
push
inc
pop
xor
sti
push
cmp
xchg
adc
pop
mov
fcoml
in
sarb
int3
int3
add
les
lds
jmp
push
fidivrs
sti
pushf
sti
push
pop
cmp
lock
mov
mov
pop
out
dec
shl
je
decb
lods
cmpsl
call
out
adc
mov
or
test
cmp
xchg
or
fldl
xchg
and
inc
mov
jle
mov
data16
or
sub
xchg
insb
sub
push
xchg
jp
jle
rclb
push
rcrb
and
gs
xor
xlat
and
mov
jl
cwtl
loopne
fdivrl
pop
jge
xchg
or
sbb
xor
sbb
sbb
daa
movsbl
shl
call
or
decl
ret
jmp
mov
out
test
pop
cli
cmovnp
leave
sbb
ds
push
lret
pop
movsb
pop
and
or
shlb
addl
pop
add
pop
shlb
rcrb
mov
mov
cmp
add
xor
lcall
je
bound
dec
push
iret
sub
jmp
lcall
pop
add
outsl
sbb
popa
mov
out
mov
adc
les
hlt
pop
outsl
cli
mov
mov
iret
popf
dec
pop
stc
dec
sbb
push
jg
mov
es
inc
xchg
inc
in
icebp
lcall
or
xchg
stos
xor
inc
inc
mov
mov
pop
pop
lahf
mov
lock
pop
sbb
add
pushl
or
xchg
mov
xlat
std
lock
mov
loopne
loopne
pop
mov
movsl
sub
pop
dec
and
lock
cmp
movsb
jl
hlt
mov
adcb
pop
lods
xor
fmull
xor
jg
add
movzbl
mov
inc
mov
mov
cmp
jl
mov
addl
int
push
not
clc
or
sub
push
icebp
or
orb
fdivl
or
add
or
lods
add
push
mov
nop
and
push
nop
add
or
cld
push
leave
inc
ljmp
mov
inc
call
jne
pop
das
sbb
jno
mov
push
push
jb
pushl
fiaddl
mov
adc
mov
insb
into
push
dec
aas
enter
add
sbb
mov
xor
push
movsb
stc
add
cmp
sbb
leave
movsl
mov
pushf
nop
dec
in
popf
push
or
popf
shrb
or
dec
mov
adc
stc
inc
mov
adc
inc
push
enter
mov
xor
xor
adc
dec
fsubrl
add
loope
mov
jno
inc
lods
popa
imul
push
popl
xor
mov
inc
xor
ds
in
lods
inc
xor
and
adc
push
inc
mov
add
pop
jno
lret
mov
and
nop
add
popf
fdivrs
jo
int3
sbb
push
pop
ret
sbb
pop
dec
je
in
sub
and
imul
sbb
xchg
mov
subl
jp
test
test
lahf
rclb
lret
lea
cmp
jbe
cmp
jbe
cmp
mov
sbb
mov
pop
in
enter
cwtl
cmp
xchg
int3
and
insl
mov
dec
push
movd
sbb
mov
aas
xchg
or
mov
push
stos
mov
test
test
add
fistl
ret
pusha
icebp
cmp
pop
dec
jp
push
iret
jne
push
fcoms
adc
push
call
push
push
popl
push
cmp
out
jmp
cmpsb
pop
shlb
pop
jl
pop
hlt
mov
sbb
test
dec
pop
pop
ret
and
enter
popa
xchg
xchg
sbb
mov
or
in
gs
ret
hlt
push
sbb
roll
call
push
pop
pop
inc
je
pushf
mov
movsb
mov
loop
push
push
xchg
aas
xor
sub
mov
push
add
mov
mov
cmpsl
std
cmpsb
mov
or
add
andl
in
adc
add
adc
dec
in
test
mov
mov
sbb
sahf
inc
cmp
loopne
pop
dec
popf
aas
jb
movsl
sbb
sub
add
repnz
adc
and
mov
adc
mov
es
addr16
and
rorb
add
push
and
and
pop
mov
dec
cmpl
xchg
cmpl
int3
cmc
sbb
pop
shrl
push
mov
jmp
push
push
or
inc
enter
lahf
add
lds
call
pop
lcall
lods
add
in
pusha
cmp
and
mov
in
xor
fstl
nop
fisttpll
shl
mov
mov
sbb
sbb
mov
ds
xor
scas
push
loopne
mov
jg
call
sarl
dec
cmpl
add
pop
jae
push
pop
rorb
clc
stos
jle
add
imul
scas
add
push
aam
cmp
and
add
rcrb
mov
rol
dec
and
xchg
je
out
out
ret
outsl
fdivl
mov
je
aad
jl
les
fwait
cmp
iret
les
xchg
xor
syscall
out
clc
pop
xchg
mov
cmp
das
inc
push
or
and
mov
shlb
dec
fwait
movl
inc
jb
idivl
push
sarb
jmp
push
adc
ss
xchg
outsl
pop
fdivl
pusha
xchg
adc
inc
add
leave
push
adc
push
insb
or
sub
add
and
inc
pop
sub
mov
je
cs
and
call
inc
pop
add
or
ret
xchg
push
ds
pop
sub
and
movsb
pop
mov
xor
xorb
addr16
movsl
pop
lea
in
out
nop
out
xchg
pop
push
or
push
in
pop
and
and
or
dec
add
lds
incl
cmp
mov
inc
test
add
aad
sbb
cld
jns
jmp
ret
add
jnp
icebp
jmp
push
sbb
adc
loopne
aas
lret
dec
or
pop
push
push
push
xchg
pop
pop
dec
mov
push
push
inc
add
xchg
xchg
mov
inc
adc
mov
xchg
rclb
ja
xor
std
lahf
sarb
pop
sub
or
lcall
mov
push
pop
push
sbb
adc
mov
mov
adc
loop
inc
nop
fadds
lret
ds
cmpsl
out
mov
nop
cmp
sub
xlat
mov
loopne
sbb
pop
clc
jne
mov
xchg
cmp
adc
call
iret
in
xchg
push
sbb
pop
mov
leave
mov
jns
cmp
sub
out
pop
cld
jbe
sbb
shlb
loop
fstpt
fs
cmp
and
jmp
fidivrl
cmp
sbb
adc
push
push
call
cmp
sbb
shr
xchg
sbbl
in
add
adc
in
xor
ljmp
mov
gs
mov
and
daa
divl
idivl
shll
pop
adc
or
outsb
jle
mov
dec
cmp
push
jbe
jmp
inc
or
jp
pop
pop
mov
pop
aam
jl
xor
out
push
adc
xchg
ret
imul
shll
sub
shrl
pusha
cwtl
mov
xor
or
scas
gs
cmp
xor
gs
lcall
sub
sbb
or
pop
add
cmp
out
pop
xor
cwtl
shlb
or
mov
gs
iret
shlb
sbb
in
pop
jmp
ds
ficoml
adc
add
gs
pop
sub
insl
jns
fidivl
or
mov
pop
inc
nop
fs
dec
cmp
enter
push
lret
lcall
sarb
in
dec
adc
stc
shrb
sub
push
or
fxch
dec
sbb
lea
push
or
jbe
xchg
push
mov
pop
sbb
mov
inc
mov
xor
sub
sub
lock
jle
cmpsb
dec
xor
xchg
push
movsl
mov
andl
xchg
and
push
or
jge
dec
and
add
and
sub
gs
mov
sub
pushf
sub
or
add
cmp
daa
scas
push
mov
mov
mov
aas
xchg
subl
outsb
test
shlb
push
cld
movsb
mov
inc
sub
push
test
testl
jecxz
adc
mov
mov
push
mov
daa
loopne
and
sbbb
pop
or
and
clc
add
or
and
adc
push
loopne
inc
jae
mov
push
fldl
and
and
mov
and
arpl
add
or
popa
mov
cmp
lods
icebp
inc
cmp
imul
jmp
andb
inc
jnp
push
xor
mov
movaps
pop
icebp
mov
mov
in
ret
sbb
pop
test
cmp
add
or
add
aam
mov
sub
sbb
shll
in
or
in
ret
jge
test
add
sbb
pop
cs
inc
mov
lods
or
sub
mov
push
sbb
ret
arpl
pusha
inc
fdivs
int3
add
mov
ja
test
pushl
xchg
movsl
adc
dec
add
sbb
push
push
mov
and
or
sub
ret
xchg
fadd
ss
jle
loopne
mov
jmp
add
mov
addr16
dec
gs
mov
bound
inc
cltd
repnz
mov
cwtl
jbe
and
adc
and
int3
iret
je
xor
mov
pop
push
mov
mov
lea
push
adc
and
or
mov
movsl
mov
push
shll
cmp
leave
mov
push
or
movb
jmp
xchg
int
cmp
jb
cmp
inc
mov
jae
mov
inc
inc
aaa
popa
data16
push
insl
dec
sub
add
push
sbb
ss
sahf
sub
mov
or
push
pop
push
inc
adc
add
hlt
fnstcw
add
sbbl
je
cs
jnp
inc
jmp
aaa
in
xor
in
push
dec
filds
or
mov
cmp
addr16
je
cmp
mov
mov
sbb
add
pop
dec
lea
out
es
mov
pop
dec
xor
or
out
mov
cmpsb
mov
sub
inc
adc
je
testl
lods
pop
sbb
cld
cmp
jbe
lahf
inc
mov
add
inc
cmp
je
and
incl
sub
inc
jmp
inc
and
test
xor
pop
mov
and
pop
xchg
in
mov
mov
cld
test
add
scas
pop
cmpsb
repnz
je
outsb
outsb
pop
pop
aam
mov
adc
adc
into
les
in
push
xor
loop
jge
shrb
dec
cld
inc
loopne
mov
xchg
cmp
add
insb
pop
xchg
mov
cmp
bound
pop
cli
mov
dec
push
lcall
push
push
cmp
jb
add
xchg
bound
in
sub
js
xor
adc
nop
lods
call
cld
rolb
mov
adc
push
scas
push
pushf
dec
mov
mov
es
loopne
jne
mov
inc
jnp
pop
in
popl
movsb
icebp
loope
sub
ljmpw
mov
add
jae
outsb
addl
movl
lock
shl
add
jmp
pushf
aas
insb
sti
and
dec
iret
sub
negb
jns
test
jne
xor
dec
push
cmp
adc
es
push
mov
or
push
outsb
pop
jae
mov
jmp
dec
shlb
fisubs
test
jne
mov
push
and
roll
or
add
inc
mov
fistl
or
int3
inc
jg
or
jge
jae
cmp
clc
xor
and
es
jae
jge
sub
sub
and
pop
or
jl
or
adc
test
pusha
cwtl
inc
test
lock
aad
jbe
lea
cmp
jbe
push
hlt
pop
arpl
outsb
xchg
and
add
je,pn
test
jne
adc
sbb
sub
push
pop
adc
jb
dec
mov
or
push
add
adc
or
icebp
movb
inc
pop
push
sub
rcll
ss
adcb
rorb
dec
data16
mov
inc
and
push
push
adc
clc
out
fsubrs
adc
jae
dec
inc
fs
add
sbb
enter
lcall
and
clc
push
enter
mov
push
or
inc
jo
sbb
mov
push
shll
add
test
jns
pop
sub
insb
mov
js
inc
or
jp
ds
andb
clc
sbb
enter
movsl
int
push
push
pop
test
aam
add
mov
test
xchg
mov
jg,pn
out
cmp
cmpl
ss
incb
jbe
push
xchg
cmp
jle
cmp
push
xor
out
sahf
orl
clc
into
inc
jo
push
adc
push
mov
push
push
cmp
out
out
inc
roll
and
aam
or
popf
pop
xchg
mov
xchg
incl
inc
and
mov
loop
out
lea
add
jne
inc
sub
add
lret
cmp
es
push
andl
loopne
rolb
movsb
cmp
aaa
jp
leave
jo
fiaddl
or
xor
jecxz
iret
cmc
xor
add
add
push
pop
push
movl
push
adc
dec
or
xor
jb
and
jbe
xchg
xchg
xor
and
xor
bound
sub
push
mov
test
fadds
or
je
add
add
lock
xchg
cmp
es
or
pushf
int
cmpl
sbb
outsb
je
pushl
je
push
mov
push
testl
jae
cmpsl
or
cmp
cmp
cmp
int
jbe
pop
psubd
lea
inc
pop
data16
pop
imul
or
sbb
out
inc
push
pop
push
inc
adc
pop
ja
pop
mov
jbe
mov
jge
push
gs
add
inc
inc
fwait
cmp
add
xchg
cld
pop
pop
loope
mov
cmp
out
xorl
mov
in
movsl
pop
mov
mov
stos
pop
adc
lret
inc
jl
xchg
sbb
cmp
pop
je
test
dec
push
inc
sub
sbb
push
fs
pusha
add
dec
adc
and
fsts
push
xlat
mov
pop
xor
pop
xchg
sub
or
mov
scas
insb
sub
nop
imulb
add
lea
sbb
jecxz
xor
and
xchg
addb
stc
loop
mov
loop
inc
and
lahf
mov
push
aaa
les
sub
or
pusha
cmp
add
add
pop
fadds
cmp
mov
outsl
or
scas
push
add
aam
or
or
add
shll
ficoms
mov
dec
sbb
pop
pop
push
rcrb
jbe
push
adcl
mov
mov
jge
dec
mov
test
jecxz
das
push
and
gs
enter
or
cmp
js
add
adc
cmovns
cmp
cmp
sub
and
inc
mov
outsl
in
inc
push
push
popf
test
xchg
in
xchg
mov
and
cwtl
roll
inc
inc
push
inc
movsl
pop
push
mov
push
or
fildl
push
fldl
frstor
and
xchg
lods
inc
push
fcomps
fs
add
xor
push
jo
das
jo
or
and
jns
and
cmp
cmp
fimull
or
int3
fstpl
mov
into
test
push
xchg
push
lods
cmpsb
fbstp
jg
add
testl
jo
mov
shrl
fcomps
ret
je
xlat
jge
cmpl
push
xor
xor
int3
or
fbld
push
push
inc
or
imul
test
jnp
das
movl
and
js
fmul
orl
cmpl
in
andl
push
add
inc
faddl
fcmovu
cmpsb
cmp
push
or
cld
gs
jmp
bound
and
jnp
fstps
cmp
mov
push
sbb
inc
fs
mov
fld
jne
mov
or
adcl
mov
or
stos
divl
pop
mov
push
bswap
xor
xchg
adcb
adc
sub
push
mov
or
ficoms
sbb
adc
mov
ret
jbe
cmc
xchg
jne
mov
icebp
cmp
insb
cmpsl
lods
fwait
mov
loopne
or
cmpsl
mov
inc
mov
fmuls
push
aas
dec
ret
in
cld
je
cmp
push
pop
jne
aam
sbb
jne
push
and
icebp
imul
pop
jne
pop
call
sbb
movsb
pop
add
in
in
in
cmp
and
jne
jmp
into
shlb
sbb
sub
push
jl
mov
mov
push
sub
addb
jmp
sbb
sbb
sbb
add
add
je
pop
in
mov
subl
mov
shll
push
imul
fwait
and
and
div
jmp
pusha
lret
into
mov
jae
scas
jg
inc
out
and
add
leave
test
inc
test
xlat
xchg
leave
jecxz
sti
mov
sub
decb
adc
cmpl
andb
pop
pop
dec
or
xchg
orl
sbb
jb
pop
pop
pop
fs
add
or
inc
bound
or
or
clc
adc
rorb
push
add
sbb
pop
ret
lahf
adcl
pop
loopne
mov
lcall
dec
adc
fildl
aas
add
inc
sbbb
push
mov
xchg
dec
in
out
adc
or
add
jno
xchg
xlat
push
push
push
push
pop
in
mov
pusha
or
xchg
lret
pusha
or
sub
adc
or
add
sub
pop
outsb
dec
xchg
push
add
sub
pop
xor
ljmp
or
mov
sub
mov
push
insl
jg
adc
mov
sbb
les
push
aas
jmp
push
loop
dec
add
rcll
lret
mov
shrl
sbb
adc
ret
mov
bound
sbb
push
or
pause
icebp
movl
test
cs
test
inc
jecxz
bound
fdivs
ljmp
add
daa
mov
inc
dec
pop
test
mov
mov
push
xor
sbb
ljmp
dec
xor
shr
sbb
inc
cmp
push
cli
jp
push
pop
jmp
shl
mov
lea
aam
je
into
or
xchg
mov
jmp
mov
sub
test
addl
fwait
sbb
fstpt
mov
mov
mov
push
mov
inc
nop
dec
fnstenv
stc
sti
es
sti
jnp
sahf
leave
or
pop
push
mov
inc
jae
sub
mov
mov
gs
mov
push
and
scas
ret
test
sbb
and
test
loope
jge
je
hlt
in
and
jg
pusha
cmp
mov
je
mov
cmp
jne
loop
push
jo
adc
in
inc
push
xlat
push
loopne
aad
enter
or
je
jg
mov
mov
lret
mov
adc
je
sbb
lds
and
pop
sbb
pop
imul
cs
mov
sub
mov
sbb
pop
add
or
sbb
clc
std
fisubl
test
sbb
into
sbb
jbe
push
adc
or
pop
je
aam
jae
and
loop
lcall
add
in
sbbb
hlt
in
jno
push
sbb
cmp
jne
or
or
push
mov
sbbb
imul
mov
sbb
int
test
test
cmpb
orb
daa
cs
lcall
xor
aas
cmp
js
bound
sbbl
iret
xlat
or
incl
cmp
or
test
jo
push
adc
add
push
dec
sub
in
dec
pop
lods
inc
pop
cmp
data16
subb
or
insl
loope
test
imul
cmp
cld
sti
pusha
je
divb
push
imul
jle
or
push
inc
add
data16
mov
jmp
jmp
add
push
mov
imull
rorl
fistpll
hlt
sbb
cli
hlt
add
sub
je
mov
mov
lock
loopne
out
loop
inc
inc
mov
sti
cmpsl
mov
cmp
ljmp
sub
enter
pop
xor
cmp
jb
les
mov
loop
and
sbb
mov
int3
clc
add
jecxz
mov
pop
adc
fnsave
add
add
push
sub
mov
shl
push
leave
add
lea
test
lds
inc
movsl
orl
int
pop
je
out
enter
xchg
mov
mov
insb
ficoml
hlt
test
aam
rorb
das
je
or
sbb
and
mov
mov
inc
push
push
pop
fmuls
scas
xchg
rorb
gs
jns
xor
add
add
lods
and
mov
add
mov
fsubl
loopne
and
loopne
addb
adc
hlt
sub
mov
fsub
push
adc
jbe
pusha
push
pop
sbb
push
out
testb
test
pusha
cmp
inc
je
adc
and
add
and
mov
movsl
push
inc
or
push
icebp
clc
jmp
sub
movsl
ds
push
push
test
mov
inc
andl
pusha
adc
push
out
sub
push
lcall
test
xchg
cwtl
cmp
add
loope
jmp
mov
push
add
in
sbb
mov
orb
add
mov
icebp
je
mov
or
dec
jne
jns
jo
add
xor
mov
lahf
or
jg
jbe
push
sbb
ja
jmp
mov
xchg
in
xchg
cmp
cmpl
test
lahf
pushw
mov
adc
jo
lret
sahf
inc
shlb
enter
dec
out
mov
xor
ss
dec
es
jb
push
int3
loopne
cwtl
lods
adc
in
adc
mov
lock
cmp
push
sbb
sbb
or
rcrl
adc
pop
or
push
fdivs
jp
fsubrp
push
mov
cltd
aam
xchg
push
mov
daa
xchg
test
aaa
inc
mov
ljmp
jmp
pop
in
and
mov
fwait
cmpsb
shll
lcall
sbb
ret
add
movsb
jo
movsb
mov
stos
xchg
jmp
rclb
dec
sarb
push
movl
xor
stos
xchg
je
push
out
mov
rcrb
mov
xor
lea
add
xor
sbb
and
xchg
inc
sbbb
dec
repz
test
and
mov
jg
fadds
cmp
mov
jmp
aaa
push
loop
clc
inc
push
xor
iret
sarb
ds
ds
or
pop
jo
test
push
push
xor
pop
lods
or
jmp
push
sub
jnp
inc
add
pop
mov
aam
mov
je
dec
daa
nop
jbe
jmp
je
int3
or
aas
pusha
dec
cmpsb
enter
je
sbb
mov
addb
sbb
dec
add
hlt
sub
clc
jno
or
test
in
and
nop
test
sbb
add
pop
xor
mov
lea
push
out
inc
inc
ror
imul
jb
add
mov
les
add
xchg
push
mov
mov
push
mov
or
jae
sbb
add
leave
sub
fisttps
imul
cmp
fstps
or
or
js
fs
inc
and
inc
fdivs
adc
mov
sub
faddl
push
fadds
repnz
cmp
repnz
shr
xchg
mov
rcl
push
test
add
sbb
and
jbe
adc
inc
dec
nop
push
add
push
pusha
cmp
push
push
mov
ror
or
mov
xchg
rolb
imul
mov
adc
iret
scas
pop
xor
push
ja
cmpsl
jo
inc
out
add
iret
add
insb
xchg
jo
in
inc
and
je
cmp
loop
rol
add
daa
push
sbb
xchg
mov
inc
inc
call
loope
pop
sub
mov
mov
mov
subb
dec
xor
popa
je
cmc
mov
jp
data16
js
mov
mov
out
mov
xor
pusha
or
push
pop
adc
sub
mov
inc
jle
rclb
rcl
cmp
es
fdivl
outsb
imul
data16
cmp
int3
out
sbb
xchg
jo
lcall
mov
cld
dec
mov
or
push
cmpsl
push
pop
add
sahf
push
loopne
sub
inc
adc
jp
loop
stos
add
pop
pop
jbe
jb
mov
pop
mov
stos
lea
push
enter
xchg
xlat
lock
data16
adc
push
mov
aam
dec
mov
sub
push
cmpsb
inc
scas
loopne
iret
or
adc
xchg
xor
iret
pop
stos
xor
jo
cmp
or
popa
adc
ds
cmpsl
or
dec
or
mov
incl
adc
cmp
pop
cmpsl
jbe
in
lcall
add
push
or
test
inc
pop
inc
sbb
rcl
pop
addb
xchg
sbb
cmc
sbb
jmp
jo
lods
sub
jmp
and
sub
mov
adc
or
or
add
pop
xor
dec
xor
push
adc
es
sbb
scas
xor
cmp
test
lret
push
mov
xchg
sub
scas
xor
cltd
jbe
cmp
sbb
mov
pop
cs
inc
add
nop
inc
add
outsl
outsl
adc
scas
push
fidivl
flds
mov
lea
mov
and
lret
mov
xchg
orb
popa
das
das
add
and
sbb
sub
xchg
jecxz
lods
pop
sbb
mov
lds
or
jecxz
inc
xor
in
and
xchg
test
mov
aam
iret
push
rclb
js
movsl
push
gs
inc
ss
jge,pn
test
outsl
sub
sub
scas
jmp
enter
inc
rcr
cmc
arpl
xor
add
mov
leave
insl
js
sbb
dec
add
mov
jg
sbb
add
andl
fsubr
movl
rcrb
pop
mov
push
cld
mov
inc
push
daa
lods
xchg
loopne
inc
dec
test
dec
mov
inc
dec
mov
cmc
es
add
shlb
inc
rclb
lock
cwtl
pop
mov
out
shrl
xor
cs
sub
and
push
adc
push
inc
mov
add
dec
lret
mov
dec
push
or
mov
sbb
sub
add
dec
arpl
push
or
ss
push
xchg
mov
add
dec
adc
js
xchg
lea
dec
sub
xchg
fbld
sbb
cmp
add
dec
int
sub
jge
pop
adc
lods
cmpsb
xor
lcall
jbe
mov
push
enter
mov
push
sub
dec
aam
mov
push
dec
mov
and
push
stos
adc
mov
inc
fistpll
push
adc
mov
xor
movsb
and
mov
add
ss
push
dec
cmpsb
sbb
pop
ror
mov
push
lds
xor
mov
inc
nop
into
jnp
sbb
push
or
push
jge
and
sti
jmp
push
push
pop
mov
xor
cwtl
pop
mov
or
pop
imul
je
sbb
mov
pop
lea
mov
jle
xor
pop
cld
lea
mov
jo
aaa
push
adc
or
mull
jo
push
insb
scas
sbbb
or
faddp
cmpl
fdiv
adc
jne
add
mov
adc
test
movsb
sarb
movsb
mov
sub
mov
or
cmc
lds
testb
ljmp
mov
xor
fcompl
mov
adc
sbb
mov
cmp
dec
bswap
pop
iret
cltd
jmp
push
mov
pop
sbb
push
pusha
cs
jmp
mov
push
sub
mov
sbbb
shl
or
cmp
mov
insb
fsub
das
or
stc
enter
mov
mov
adc
popa
outsl
popf
adc
inc
incb
ja
mov
je
push
sub
and
adc
cmp
xor
icebp
call
fdivs
pop
data16
sbb
mov
pop
xchg
hlt
jns
push
or
int3
jmp
or
jle
pop
add
shl
clc
dec
cmp
enter
dec
jo
mov
addb
fbstp
fadd
sub
stos
insb
sarb
dec
fdivl
ret
mov
mov
add
sbb
push
cmp
jbe
mov
mov
shll
adc
cmp
in
mov
enter
mov
cmp
jne
cmp
xor
fsubr
adc
xchg
inc
jo
adc
lods
loopne
sbb
sahf
int3
pop
mov
mov
test
rorl
inc
push
outsb
imul
dec
and
mov
or
insb
mov
verr
rcl
arpl
js
cmp
or
mov
and
jae
pushf
add
outsl
cmp
jmp
mov
or
push
push
fwait
mov
mov
add
ss
or
lock
je
popa
mov
jo
pop
sub
ss
dec
movsb
cltd
cltd
or
stos
push
or
push
add
insb
test
inc
push
mov
xor
call
mulb
add
jecxz
dec
hlt
test
mov
int3
pushf
mov
ret
push
push
mov
bound
add
mov
xor
pusha
popa
lock
loopne
or
icebp
xchg
sbb
inc
xchg
inc
sub
cmp
pop
mov
xchg
jne
jmp
cmp
or
push
jl
push
push
add
imul
and
or
push
lock
mov
mov
or
loopne
inc
pop
shrl
sub
cmp
rcrb
inc
pop
add
jbe
sub
add
xor
pop
or
add
fstl
ljmp
jae
inc
push
rclb
cld
jb
jb
jnp
mov
cmp
sbb
adc
inc
push
rorl
mov
jle
xor
xchg
xchg
jb
aam
mov
pushf
push
test
inc
test
pop
cmp
pop
add
push
add
es
xchg
cmp
cmp
and
xchg
hlt
jne
je
hlt
push
or
out
xor
inc
pop
dec
add
inc
lds
push
mov
lcall
arpl
adc
push
and
inc
sbb
mov
xor
pop
mov
je
out
jp
push
rorb
mov
ret
add
add
enter
sub
shlb
or
adc
adc
push
adc
adc
shlb
xchg
adc
push
dec
mov
ret
nop
and
sub
adc
and
movsb
fcmovnu
xchg
adc
xor
mov
mov
loope
bswap
push
fisttps
shlb
jl
nop
mov
jp
les
pop
add
lret
and
sti
out
lods
cld
aad
push
pushl
push
add
jp
push
shll
push
add
sbb
inc
push
pop
aaa
cmc
leave
clc
jp
cmp
fsubr
fadd
mov
mov
sbb
add
aas
mov
add
outsb
add
sbb
xor
nop
inc
push
dec
addl
nop
jge
lea
push
adc
add
call
arpl
into
and
add
stos
cmp
popf
xchg
pop
adc
jae
dec
xchg
adc
orb
dec
sub
jb
adc
es
adc
enter
adc
adc
clc
and
adc
mov
rorl
cmpw
je
sbb
lret
push
movsl
repz
and
pop
data16
ret
or
shl
enter
addl
mov
mov
adc
xor
jb
das
mov
sub
jo
jmp
mov
lret
inc
xorl
mov
es
mov
mov
or
in
mov
cmova
xor
jmp
cmp
jo,pt
add
sub
cmp
add
xchg
inc
adc
imul
push
es
sub
lea
in
mov
cmp
add
mov
xor
insl
cmpsl
push
aas
xor
xchg
fcomps
aam
imul
xchg
or
mov
out
lods
push
add
xor
add
xchg
imul
sbb
outsb
nop
xor
into
or
push
rcrl
sbb
test
inc
xchg
xchg
mov
popf
gs
and
push
cltd
loop
dec
pushf
sarb
add
dec
mov
cwtl
mov
ja
pusha
pusha
mov
sbb
push
jl
call
mov
hlt
ficompl
or
xchg
cmpl
sbb
push
call
testl
les
ja
fs
fstpt
mov
cmpl
jno
mov
fsubrl
push
xor
add
je
stos
fcoms
xchg
cmc
in
ljmp
cmp
lods
and
cs
push
push
push
aaa
pop
outsb
ret
mov
fnsave
testb
mov
icebp
dec
xorb
mov
int
xchg
adc
mov
sti
or
orl
mov
in
inc
test
mov
adc
add
mov
cli
inc
sub
inc
fwait
push
enter
cli
aad
or
inc
xlat
sub
pop
call
cmp
cmp
into
mov
jle
add
ja
lea
mov
jmp
mov
or
inc
or
or
inc
push
xchg
inc
int3
push
aas
sub
fsubr
add
gs
mov
pop
repnz
out
neg
adc
shrl
dec
les
fldcw
out
adc
add
inc
ds
rolb
jmp
pop
lock
and
mov
in
cmpsb
nop
imul
push
sbb
es
int3
push
jle
add
dec
fstp
mov
or
mov
xchg
adc
sub
in
xor
pop
jbe
mov
shrb
fcomip
sti
mov
cs
inc
fdivp
push
add
jp
push
add
ds
adc
push
mov
loope
movl
leave
or
xor
clc
add
fstps
rcrb
fs
and
out
cmp
shlb
jle
lods
push
and
das
or
cmp
jne
addl
jne
jns
or
jle
mov
push
pop
lock
xor
lea
push
mov
add
jecxz
repz
cmp
movsb
sbb
mov
mov
dec
aas
es
dec
jmp
out
cmp
or
sub
loopne
cmp
push
jno
push
add
add
or
ret
out
xchg
lock
mov
push
popa
lea
jmp
iret
imul
add
addb
ja
jg
ds
repz
add
cmp
inc
dec
adc
aad
shl
add
or
in
jmp
cmpl
sbb
in
pop
push
mov
sbb
push
push
or
sub
sub
sbb
in
mov
and
rorl
jp
inc
push
into
or
icebp
in
jmp
out
mov
xor
fiadds
and
sbb
inc
aam
push
xchg
bound
std
sete
rcr
psubw
popa
sbb
or
stc
sub
cmp
ud0
bound
adc
and
sarl
rclb
add
push
inc
push
or
mov
push
outsb
popf
jne
push
imul
pop
push
shl
dec
mov
ljmp
xor
loope
mov
repnz
mov
add
es
bound
fs
adc
bound
xor
leave
dec
fnstcw
lea
push
cmpsl
cmp
add
mov
nop
scas
repnz
ja
mov
mov
rcrb
adc
push
lods
add
pop
mov
int3
andl
lea
or
pop
xchg
adc
cmp
cmpsb
push
out
daa
loope
add
push
dec
xchg
loope
leave
mov
pop
outsl
mov
push
adc
and
lea
add
push
push
cmpsb
dec
into
mov
jns
sub
fs
dec
inc
into
insb
shrl
test
mov
mov
adc
inc
and
movsb
lock
add
sbb
mov
xchg
pop
add
push
dec
mov
jle
or
mov
or
add
fs
xchg
adc
and
ljmp
push
faddl
cmp
mov
jne
dec
jg
cmp
cmp
cmpsb
dec
rolb
pop
add
rcrl
test
or
or
cwtl
xchg
sbb
sbb
add
push
xor
push
jmp
cmp
movsl
and
je
inc
mov
mov
adc
repnz
xorl
jne
dec
mov
insl
rolb
xor
cltd
lcall
push
adc
adc
imul
addb
fs
inc
es
es
mov
add
adc
or
dec
outsb
test
push
or
insb
aad
sub
mov
mov
dec
aaa
or
fdivp
or
loopne
lea
rclb
inc
orl
mov
pop
mov
cltd
xlat
pop
lods
or
jns
repz
pop
imul
pop
jae
lea
jmp
cmpl
sub
clc
inc
cmp
jbe
jle
jecxz
dec
lea
jmp
push
or
xor
in
rcl
mov
jmp
sub
sbb
rorb
dec
nop
mov
insb
add
adc
or
xor
inc
xchg
mulb
fs
xchg
fidivrs
movsl
cmp
out
push
lods
pop
inc
add
out
and
rclb
add
addr16
inc
sahf
popf
pop
sub
xlat
or
pop
popa
pop
dec
jne
lock
test
inc
jo
xchg
loopne
int3
sub
iret
jbe
dec
repz
xchg
jb
push
add
pop
xor
popf
sbb
and
or
or
xchg
pop
jle
add
sbb
mov
and
lods
or
repnz
orb
int
xorl
dec
push
hlt
xchg
pushf
push
mov
xor
test
mov
xchg
mov
sbb
sub
iret
mov
mov
sbb
sub
shl
nop
popa
push
fisttps
sbb
mov
shl
cmp
cmpsl
push
push
cmp
or
fs
and
adc
aas
push
jbe
and
push
je
mov
xchg
sub
inc
xor
jmp
cmp
js
dec
sbbb
arpl
jbe
stc
xchg
stc
outsb
pop
or
outsb
or
pusha
test
add
dec
test
ljmp
cmp
push
push
out
add
fsubl
shrb
subl
in
dec
push
clc
sbb
pop
mulb
jae
push
nop
rcl
mov
mov
out
mov
xor
and
imul
pop
or
enter
xchg
or
nop
add
sub
and
inc
push
addb
xchg
addl
popf
hlt
js
sub
lret
push
clc
mov
jbe
push
adc
mov
adcb
adc
lea
sub
leave
dec
cmp
jmp
divl
sbb
not
inc
cmp
ljmp
push
pop
xor
testb
adc
cmp
push
cmp
cmpl
fstp
jnp
cmp
fldl
jbe
push
cmp
data16
push
add
dec
sbb
cmp
int
fisttpll
cld
je
test
dec
aaa
jnp
pop
xchg
clc
jne
mov
push
test
cmp
mov
add
aaa
sub
insb
orl
sub
cmp
stos
xor
sbb
movsb
lods
jle
xchg
sbb
data16
xchg
xor
hlt
hlt
jns
and
and
test
and
sub
xor
push
cmp
call
or
dec
inc
sbb
je
push
adc
hlt
jne
push
js
pop
scas
pusha
pop
fistl
cld
loopne
fnstenv
xor
lods
push
mov
adc
cs
repz
xchg
mov
sbb
scas
out
fcmovbe
or
ja
adc
xchg
out
push
cmp
in
andb
push
lcall
jmp
dec
subl
testb
lods
or
pop
pusha
push
loope
mov
dec
mov
neg
sbb
and
repnz
stos
mov
movzwl
push
adc
xchg
les
clc
inc
xlat
pop
ret
sub
inc
sbb
pushf
test
nop
xlat
dec
int3
mov
cs
cld
pop
movsl
mov
mov
fisttpl
xchg
mov
aas
mov
and
sbb
adc
std
call
jge
add
cmp
jbe
or
jne
push
and
mov
cmp
mov
cmpsb
pop
push
das
shll
sub
orb
test
out
jbe
jmp
cmp
jl
add
xchg
jp
dec
xor
hlt
sahf
out
setb
jbe
sbb
testl
rcrb
and
xor
popf
stos
loopne
popf
mov
sbb
mov
sub
jl
cmp
orl
pop
sub
add
nop
inc
addb
inc
or
jl
push
stos
test
adc
hlt
and
mov
iret
js
jbe
mov
and
pop
out
inc
jecxz
lcall
mov
push
mov
stc
lods
or
mov
sub
push
pop
xchg
and
aad
push
mov
mov
add
mov
stos
int
mov
mov
jmp
test
inc
in
stos
cli
or
nop
cltd
push
cwtl
movsl
mov
stos
lcall
rolb
rol
or
movsl
clc
dec
jo
cmpb
add
push
xor
fsubl
cli
mov
and
aas
pop
cmpsb
test
subb
sahf
pop
cmpsl
dec
dec
add
mov
inc
jg
xor
or
cmpl
push
loopne
jmp
cli
adc
or
adc
in
pushf
out
sbb
add
add
mov
jno
add
adcl
adcb
inc
rolb
ljmp
cld
subb
cmp
es
inc
push
insl
xchg
jmp
dec
scas
lock
xchg
ljmp
fwait
xor
sbb
fldz
inc
cmp
jae
cmp
and
fistps
or
add
cmp
pusha
pushf
or
or
xor
stc
aam
roll
cli
scas
adc
insl
jmp
cmpb
enter
jb
push
jae
adc
add
js
je
push
mov
mov
add
mov
nop
lock
jle
je
cmp
push
push
or
negb
push
sbb
sbb
pop
xor
xor
dec
mov
xor
cmpsb
adc
jbe
pop
jg
outsb
mov
std
xor
add
push
cmpsl
lock
ss
test
or
inc
dec
negl
mov
jmp
ret
adc
popf
xor
sub
cmpsl
cmp
cmc
out
ds
mov
jbe
cmp
xchg
pop
sbb
sbb
or
dec
add
hlt
mov
mov
dec
add
fchs
add
adc
lock
std
sub
in
xchg
std
add
jmp
in
movsl
fdivrl
fcoms
out
xchg
and
shr
add
jge
dec
mov
call
pop
iret
loop
arpl
test
jnp
inc
scas
int3
mov
and
out
sub
add
imul
add
rcrb
push
je
mov
pop
jl
lds
adc
testl
rol
xorb
lea
inc
xor
adc
and
pop
mov
mov
test
movsb
sbb
shlb
cmp
xchg
push
and
adc
mov
xchg
pusha
sbb
mov
xchg
push
js
stc
and
test
clc
lds
xchg
popa
in
push
in
test
dec
mov
mov
out
add
push
aam
add
pmuludq
sbb
fsubs
popf
sbb
fsubl
push
and
popf
loope
loopne
xor
pop
mov
fisubs
xchg
jecxz
add
enter
lret
inc
mov
or
roll
xor
mov
jbe
mov
movsl
mov
fdivrs
cmp
inc
jle
push
push
add
stos
ja
push
pushl
cmp
gs
and
out
mov
and
adc
add
or
xor
cmp
xor
mov
mov
or
xchg
push
out
outsl
push
cmp
jb
mov
jbe
mov
mov
sub
bound
mov
lea
fistps
add
xor
mov
pushf
xor
je
test
jnp
imulb
cmp
mov
mov
pushf
sbb
je
dec
adc
or
daa
push
jae
lea
ss
dec
ja
cmpb
jne
fidivl
mov
out
jge
lea
loope
lock
push
jae
stc
push
xor
add
dec
sub
mov
lea
stc
insl
sbb
pop
push
jae
sub
or
ret
mov
jno
cmp
jae
aam
fdivrl
inc
xchg
xor
jae
leave
jmp
push
inc
sub
dec
push
and
dec
and
enter
dec
ja
push
xchg
sub
les
adc
add
add
mov
dec
ljmp
add
jb
cmpsb
pop
push
sbb
lds
xor
add
sub
sub
xor
mov
jae
and
adc
mov
addb
adc
pop
scas
dec
testb
jp
dec
and
xor
adc
push
lods
mov
push
in
push
xor
ret
xorl
push
lea
cmp
jle
movsl
add
push
pop
and
push
adc
xchg
aaa
popf
ss
adc
fisttps
jnp
nop
and
or
cmp
add
mov
and
add
xor
push
mov
adc
test
gs
outsb
pop
es
cmp
inc
sbb
pop
add
and
mov
ljmp
fsubr
mov
lahf
dec
jo
or
jge
cmpl
test
jne
adc
lcall
xor
or
push
je
inc
and
xchg
loopne
xchg
push
adc
out
add
fst
sub
pop
pop
and
sub
jmp
add
dec
add
xorb
sub
xor
add
out
or
rcrb
mov
rorb
std
es
mov
pushl
cmc
and
insl
add
arpl
and
xor
pop
call
dec
mov
bnd
mov
mov
pop
pusha
mov
cmp
push
cmpb
js
outsb
dec
ret
push
jae
lea
push
sub
and
add
cmp
add
mov
clc
adc
mov
orb
dec
pop
ret
mov
dec
mov
addb
stc
inc
fdiv
loopne
jge
xchg
push
xchg
addl
cmpb
xor
rcrb
std
fnstenv
inc
jmp
push
cmp
cmp
sub
movsb
push
dec
fiadds
sub
out
or
pop
movb
add
mov
lcall
fdivs
sub
sub
jmp
adcb
sti
sub
xchg
jo
dec
inc
out
test
mov
insb
mulb
call
xor
mulb
add
mov
dec
in
rorl
bound
xchg
pop
and
sahf
fiaddl
int
push
mov
mov
aam
scas
lea
adc
cld
mov
push
or
outsl
test
loopne
jecxz
sahf
pop
push
lea
sub
call
jns
cltd
push
mov
das
mov
xchg
popa
data16
jae
cmp
push
out
popf
cmp
push
out
jmp
push
inc
add
sub
sub
dec
fcmovnu
and
pop
and
aas
int
cli
dec
push
and
fwait
sub
sbb
loopne
cmp
movsl
loope
loope
cmp
cmp
inc
jl
arpl
inc
pop
push
outsl
cld
mov
jb
inc
cmp
ret
cmpb
les
or
push
cmp
pop
mov
hlt
mov
sub
push
inc
or
add
mov
inc
inc
es
jo
sahf
and
sub
or
and
testb
test
test
adc
std
jno
nop
sbb
cmp
mov
mov
mov
pop
cld
mov
pop
add
cmp
arpl
addr16
out
pop
rorb
imul
push
sbb
ds
scas
sbb
sub
les
mov
sub
cmpsl
dec
and
push
stos
and
scas
jbe
lret
das
or
push
enter
add
inc
js
inc
inc
mov
add
cmp
mov
rclb
jnp
pop
add
push
cmp
cmp
jmp
pop
mov
sbb
test
pop
mov
sub
inc
mov
add
adcl
sub
jne
mov
out
jno
xor
xchg
and
pop
sub
fildl
mov
xor
rol
pop
in
dec
or
and
data16
fstpl
or
rolb
adc
ret
and
sbb
clc
int3
nop
mov
push
adc
lods
test
mov
std
rep
mov
rcrl
push
bound
into
add
pop
cld
push
add
ret
pop
das
imul
imul
jmp
jl
into
push
shlb
cmp
lcall
jg
sub
push
dec
cmpl
pop
lret
pushl
adc
cmpsl
insb
stos
enter
inc
addl
pop
sub
adc
sub
ficoml
sbb
mov
mov
insl
out
popl
adc
mov
adc
cmp
adcb
jo
out
call
push
mov
add
xchg
inc
mull
mov
nop
or
jecxz
ss
inc
mov
inc
inc
out
mov
inc
js
mov
or
inc
fcmovu
test
pop
adc
rsqrtps
or
mov
dec
sub
cmp
fwait
in
sbb
push
pop
test
xor
and
aad
push
dec
add
xor
mov
fs
aam
pop
loope
mov
or
sub
pop
mov
mov
mov
pusha
scas
pop
mov
lods
lret
push
dec
repz
ja
test
push
push
les
xlat
and
js
stos
jge
loopne
shll
dec
mov
pop
dec
pop
mov
mov
les
js
scas
jle
jne
mov
inc
bound
mov
cmpsb
inc
lea
popa
rorb
call
inc
lret
or
pop
lock
js
adc
in
push
inc
add
push
or
mov
add
hlt
mov
dec
push
inc
jp
std
xchg
sbb
or
gs
sub
adc
sbb
sub
or
pop
adc
mov
cmp
push
mov
push
mov
push
or
inc
jecxz
and
jne
mov
adc
or
xor
push
jl
inc
es
imul
xor
add
sub
aas
popa
mov
sub
or
imul
das
add
or
push
pop
and
pop
inc
pop
sbb
jmp
mov
xor
or
shlb
cs
mov
mov
jo
mov
pop
pop
fmul
or
pushf
xor
nop
sbb
pop
fwait
ret
push
cmp
jnp
popf
mov
rorb
daa
ret
push
push
out
mov
int3
sbb
push
push
loopne
pusha
inc
lea
sub
pop
leave
sbb
test
je
test
or
push
or
jo
movsb
or
fs
push
pop
push
mov
xor
dec
mov
pop
sbb
push
or
or
inc
dec
std
add
lods
cs
jmp
cmp
popl
clc
push
push
sahf
or
adc
mov
fdivrl
sub
push
test
sub
push
add
mov
fidivs
add
sbb
rorl
xchg
add
jb
inc
jb
and
mov
jecxz
sbb
jg
nop
lock
je
mov
call
outsb
and
add
hlt
inc
test
sbb
aam
lock
mov
inc
mov
push
out
xchg
rorb
in
pusha
pop
add
lahf
sub
mov
jp
inc
and
xor
call
cld
mov
dec
sbb
cmp
pop
js
jo
in
pop
int
and
mov
xor
in
rcr
imul
mull
xor
xor
test
push
pop
dec
fbstp
movl
or
cmc
inc
rdpmc
lds
or
mov
movsb
nop
ret
movsl
roll
loop
clc
add
lods
and
lds
adc
ret
push
xor
scas
and
or
xor
sbb
repz
loope
lahf
arpl
cld
cmp
outsb
loope
or
mov
add
nop
pop
mov
sti
dec
clc
mov
and
add
fbstp
cli
add
dec
movsb
jne
pop
add
lock
jmp
jne
mov
sub
pop
fs
fisttpll
and
clc
popa
in
mov
mov
adcl
push
nopl
mov
mov
loop
sub
xor
jge
xor
mov
cmp
clc
mov
sarl
test
inc
adc
mov
negl
add
jl
dec
loop
inc
subl
into
enter
sbb
gs
and
xchg
outsl
push
cmp
cmp
jp
or
and
std
push
jne
or
or
and
mov
push
in
daa
dec
fbstp
lock
sub
push
insb
movsl
add
inc
dec
add
inc
or
mov
into
mov
or
inc
sub
ret
ja
pop
call
clc
add
xor
mov
mov
push
popf
popf
cs
push
push
dec
push
cmp
in
out
inc
pop
hlt
pop
fwait
test
push
clc
mov
adc
cmp
inc
insb
dec
pop
repnz
out
push
and
mov
int3
into
jmp
into
out
push
loope
lock
mov
ss
les
xor
xor
cld
xchg
stc
sahf
sub
xor
add
test
push
xor
push
lret
dec
inc
dec
loop
or
mov
jl
mov
leave
mov
js
sahf
in
nop
mov
xor
or
mov
cmpsb
hlt
sub
testl
lret
iret
lea
sub
xchg
shl
xchg
dec
adc
shlb
inc
add
push
fsubrs
iret
add
movsl
js
in
push
xchg
push
movsb
je
mov
movsl
rcrl
fsubl
popf
dec
xor
orb
je
addb
mov
and
add
mov
inc
setb
movsl
pop
adc
repz
push
jl
push
sahf
adc
push
mov
push
fdivrs
je
ds
rolb
xchg
jmp
inc
popa
pusha
testb
inc
xchg
sub
and
jl
test
or
mov
inc
push
ss
rclb
imul
sub
inc
js
nop
and
or
mov
inc
pop
lret
cwtl
inc
push
xor
or
mov
ss
test
pushl
sahf
xchg
mov
pop
mov
lods
add
xchg
pop
dec
js
inc
push
dec
repnz
push
cmp
pusha
push
jnp
xchg
inc
in
mov
jnp
mov
adc
popa
cltd
push
loope
shl
cmp
imul
push
push
dec
enter
inc
aaa
dec
xchg
push
xchg
push
mov
insl
inc
adc
popa
cmp
mov
pop
dec
sbb
jl
pop
lods
pop
loop
or
push
cmp
and
stc
or
or
mov
add
jg
xlat
jp
rcll
or
or
and
hlt
or
jmp
or
mov
mov
add
adc
or
das
int
data16
pop
mov
push
or
jne
mov
cmp
les
xchg
cmp
and
pop
scas
fists
lahf
cmp
or
mov
sbb
sbb
and
push
outsl
loopne
pusha
lret
shlb
mov
cwtl
xchg
fcoms
gs
insl
repnz
cld
loopne
pop
inc
notb
popa
inc
add
cmp
in
dec
add
mov
rorb
push
pop
pop
pop
clc
mov
jae
movsb
inc
ror
add
mov
jge
push
inc
push
in
xchg
into
xor
sarb
sub
ljmp
adc
pop
push
das
fcompl
adc
repz
mov
dec
inc
inc
sbb
outsl
jp
lcall
push
mov
sbb
cmp
mov
popf
pop
addr16
scas
lcall
gs
mov
inc
xorb
pop
mov
jg
jecxz
push
rorb
jl
mov
push
dec
inc
push
pop
mov
in
rcll
dec
cmp
sarb
push
jmp
xchg
call
sub
insl
push
lret
lods
call
flds
sub
mov
jbe
or
xchg
sbb
rol
add
sarb
or
mov
orb
andl
adc
call
rorl
rol
xor
stos
xchg
pop
dec
cli
or
pop
sub
xchg
out
rcrb
push
jae
push
add
push
jne
push
push
je
xor
outsl
loope
out
sbb
dec
insb
jne
pushw
mov
adc
inc
jbe
cmp
lock
inc
mov
add
inc
andl
mov
mov
or
cmp
je
sbb
push
or
and
icebp
jbe
fadds
shrb
and
add
adc
adc
fsubs
sub
data16
xchg
lea
loopne
jmp
or
xchg
aad
jnp
push
cmp
push
imul
idivb
jl
mov
mov
loope
cmp
lret
jae
mov
cmp
sub
sbb
push
cmc
push
gs
mov
push
fcompl
lret
sbb
jns
mov
fdiv
pop
dec
cmp
push
jecxz
outsb
stc
mov
loopne
adc
ja
in
or
lea
popf
ret
pop
mov
pop
pop
mov
inc
frstor
push
mov
add
and
xor
mov
data16
push
or
or
mov
pop
dec
and
add
shll
rorl
lods
xor
add
add
inc
dec
outsb
push
jb
fsts
add
sub
js
or
xchg
push
enter
push
push
dec
pop
jge
popa
mov
pop
cmp
pop
pop
mov
add
adc
rcll
shll
cmp
push
pusha
dec
shll
je
int
add
jl
cmpsl
or
mov
jno
call
out
andl
cmpsl
mov
sub
insl
jbe
or
inc
mov
sub
sub
adc
daa
sbb
out
cmpb
int
adc
and
nop
in
jle
movb
sbb
icebp
pushl
sbb
xchg
jae
fmuls
imul
js
sbb
add
nop
insb
push
sbb
cmp
sub
jbe,pn
idivb
jp
adc
aas
xor
inc
dec
xchg
push
cli
push
inc
lods
shll
loopne
cmp
out
xchg
inc
rolb
pop
sbb
dec
jbe
pop
inc
adc
mov
cmp
test
cs
pop
adc
mov
sbb
adc
scas
add
jne
mov
mov
test
sbb
xchg
add
cli
add
or
pop
adcb
mov
add
jb
mov
cmp
sbb
icebp
and
push
ret
pushf
pusha
sub
sti
mov
je
push
jl
mov
dec
mov
subl
or
push
xchg
ss
and
inc
or
in
mov
cmp
dec
and
and
test
and
inc
mov
add
int
cmp
adc
add
je
sbb
fucomi
mov
pop
cmc
addl
roll
pop
jne
orl
dec
adc
sbb
fidivs
imul
sbb
pop
pop
dec
test
cmp
frstor
or
test
sub
xlat
sub
adc
das
call
stos
push
fldl
sar
lds
cmp
das
add
data16
in
xor
enter
movsl
jnp
clc
adc
int
xchg
les
mov
add
mov
stc
push
jne
mov
lock
fisubl
pop
mov
clc
jo
push
cmp
push
dec
jo
mov
jne
ds
rcll
xorl
imul
dec
fwait
push
lahf
popa
movsb
xchg
pop
jo
cld
mov
mov
dec
mov
sbb
enter
or
adc
jbe
or
invd
cmp
xchg
xchg
push
xorb
leave
mov
sbb
into
cmp
fucomip
adc
push
inc
cmp
dec
pusha
mov
push
imul
adc
sbb
jo
cli
out
fidivrs
sahf
dec
adc
or
lods
pop
mov
sbb
or
xor
adc
xor
cmc
add
inc
or
inc
pop
sahf
and
aam
inc
es
xchg
dec
mov
pop
sti
or
xlat
and
pop
xor
mov
data16
sbb
fildll
mov
ror
or
mov
repnz
mov
pop
add
mov
mov
add
jb
sbb
lea
outsb
push
mov
subl
mov
and
jmp
mov
adc
xor
cmpsb
inc
insb
push
mov
or
inc
cmp
notl
fdivl
mov
inc
test
sbb
je
sub
jnp
mov
je
fs
pop
pop
fs
pusha
inc
push
sbb
insb
insb
push
pop
scas
out
movsb
xor
push
mov
sub
jnp
icebp
mov
or
js
iret
mov
pushf
cmp
cli
je
popf
add
arpl
or
lds
xchg
in
mov
ja
xchg
sbb
adc
lock
hlt
sti
push
sub
inc
pushf
or
and
or
jo
cmovs
imul
adc
rclb
dec
adc
jnp
mov
lock
fs
lock
xor
cltd
test
dec
jmp
into
stos
ret
push
push
pop
in
jo
rcr
adc
xor
sub
jne
imul
mov
andl
decl
lods
mov
ret
inc
fisubs
sti
lods
popf
sbbb
sub
sub
xor
cmp
xor
jne
lahf
aas
cmc
jecxz
mov
test
pop
adcl
push
push
test
or
sbbb
dec
scas
loop
mov
cltd
adc
fmuls
sbb
and
or
subb
sbb
adc
push
ret
jbe
lods
jne
mov
cmpsl
adcb
and
push
sbb
jo
jns
in
insb
push
xchg
cmpsb
outsb
jno
test
popa
adc
cmp
pushf
les
mov
inc
lcall
add
xor
fcmovbe
cld
aas
jne
mov
xor
xchg
js
xlat
cmp
mov
fldt
loope
cwtl
cwtl
fidivrs
test
jne
pop
jl
lock
mov
cmp
test
jle
cmp
loopne
push
and
dec
push
lea
push
pop
cwtl
push
out
push
or
sbb
loop
sub
lret
push
or
or
daa
xor
jbe
inc
push
lock
fs
loopne
xchg
xchg
or
and
loop
loopne
mov
rolb
push
dec
and
or
lahf
xchg
push
lahf
pop
mov
jmp
js
adc
pop
arpl
xor
imul
shrb
sahf
add
fdiv
or
or
inc
cmp
mov
pop
movsb
or
sbb
inc
adc
pop
add
inc
pop
pop
inc
aaa
hlt
cltd
adc
xor
scas
dec
ljmp
scas
fdivs
scas
or
jnp
js
ljmp
xor
dec
ret
jge
int3
mov
jg
and
stos
push
pop
xor
movsb
add
lods
xor
test
jbe
and
movsb
xor
insl
push
xorb
nop
xorl
out
insb
cmp
and
pusha
std
sub
adc
push
push
inc
dec
rcll
pushf
sarb
and
out
push
adc
xor
push
xor
cld
adc
xchg
test
jne
lea
sbb
and
pusha
lea
jecxz
xchg
xchg
dec
inc
mov
sub
mov
dec
push
push
or
ja
adc
ficomps
js
xchg
mov
mov
cmpl
adc
inc
jno
out
daa
push
fmuls
ficoms
push
test
xchg
xchg
jp
je
push
mov
add
lret
sub
xor
sti
sub
add
pop
jae
add
mov
xchg
inc
lcall
xor
xor
mov
pusha
xor
mov
movsl
jbe
sub
add
jl
mov
dec
mov
sbb
clc
ret
loopne
and
push
adc
fdivrs
jmp
daa
addb
add
loopne
test
fmul
or
insb
cmc
and
or
jmp
xor
pop
inc
add
sbb
rol
punpckhdq
cmp
loop
push
lahf
and
dec
sbb
ficoms
push
shl
fdivp
sub
mov
or
test
fimull
int
sub
jae
xor
push
imul
divl
jne
mov
dec
and
test
sub
adc
ja
jl
mov
cmp
dec
clc
test
das
outsl
jmp
cwtl
push
aam
in
fcoml
push
add
sub
mov
push
xor
call
and
or
hlt
xchg
test
aas
adc
fsubl
out
test
sub
adc
imul
ret
or
pop
mov
popf
inc
jg
adc
inc
int
rcrl
cld
mov
lret
push
into
push
mov
cmp
lods
sbb
cmp
call
or
mov
xchg
add
jp
push
add
push
cs
int3
popf
fsubrl
push
and
lods
std
adc
mov
nop
add
xor
nop
add
cmp
jge
cmp
push
imul
and
cmpsb
and
addl
add
xor
adc
sub
jbe
jo
or
mov
push
sub
jge
and
cmp
nop
xchg
push
xor
sbb
xor
push
sub
push
jbe
pop
inc
push
mov
adc
cvttps2pi
pushf
adc
add
dec
and
cltd
push
sbb
cs
lods
add
push
and
ss
xchg
jnp
xor
push
nop
add
push
jnp
int3
sub
ss
push
inc
xchg
sbb
int
or
add
cmp
loop
sbb
movq
add
fwait
xchg
cmp
push
cmpl
sbb
in
xor
dec
loope
inc
xor
cwtl
lcall
inc
and
sub
pop
jbe
aad
jo
pop
or
nop
adc
xchg
or
ljmp
xorl
add
dec
pop
and
adc
rol
repz
or
jmp
in
and
push
add
or
popa
lea
sar
pusha
and
popa
xor
cmpb
pop
popa
add
js
pushl
scas
mov
pop
mov
pop
add
push
andb
mov
fmull
iret
mov
inc
sub
and
ret
dec
lahf
or
push
pop
pop
or
mov
mov
sub
mov
in
adc
jl
andl
adc
jp
push
mov
js
pop
cmp
xchg
or
outsb
inc
jae
ficompl
or
pop
cmp
cmp
repnz
jo
mov
dec
jo
sbb
adc
in
js
fsubrl
pop
cmp
fcoml
fbld
jne
les
or
mov
int
cmp
out
mov
notl
add
rclb
shl
mov
inc
and
gs
mov
mov
pop
lock
rcrl
pop
push
sbb
pop
jo
pop
jmp
and
mov
loope
adc
adc
clc
mov
bound
lods
and
push
cwtl
inc
mov
mov
rolb
sbb
or
movsl
add
cmp
sub
push
xor
pop
lock
insb
push
adcb
push
mov
push
or
jle
cmp
cmp
cmp
dec
ja
imul
ret
inc
sbb
mov
fdivl
cmp
dec
or
dec
jl
loope
xor
push
and
scas
mov
adc
ret
les
in
adc
mov
lods
push
push
leave
ds
test
pop
adc
xchg
cmc
lods
mov
mov
dec
fstl
sub
add
enter
mov
aas
mov
mov
inc
repnz
add
add
push
pop
lods
in
push
popa
add
sarl
aaa
add
adcl
loopne
push
ret
sub
mov
lock
arpl
inc
ds
or
and
and
pop
cld
lock
push
xchg
lahf
add
scas
pop
test
jecxz
mov
or
leave
cli
imul
rolb
mov
pop
orl
test
mov
xchg
xor
jnp
or
mov
mov
arpl
pop
nop
inc
mov
jns
sbb
adc
int3
int3
sub
and
daa
lock
push
adc
mov
add
scas
je
xlat
dec
fwait
ja
in
cs
push
inc
aad
popl
cmp
add
or
push
orb
jbe
sbb
lea
sub
add
sbbb
cli
push
push
ret
push
xchg
mov
inc
mov
ds
scas
inc
or
mov
movsb
mov
inc
imul
out
rcll
stos
mov
or
movsl
add
xchg
and
xor
mov
loop
or
sbb
add
testb
xrelease
je
adc
imul
or
add
pop
movsl
lods
filds
adc
pop
arpl
mov
jae
cmp
push
jp
dec
andl
out
sub
push
xchg
movsl
or
aam
out
popl
adc
mov
lcall
or
cmp
lar
faddl
cli
or
sub
push
xor
cmpsb
sbb
push
mov
int
sub
inc
outsl
push
or
jae
mov
dec
divl
loopne
xchg
or
fdivr
add
adc
cwtl
sarb
addr16
cmp
dec
cmp
daa
xor
mov
aas
fs
push
fisubs
lds
addb
mov
fisubs
test
xor
adc
sbb
push
dec
mov
cmp
movb
adc
sbb
mov
sub
cmp
repz
jmp
icebp
imul
sub
ficomps
fmuls
es
mov
push
fs
loope
ss
push
mov
jne
or
add
inc
sub
mov
js
in
xor
push
xchg
jae
mov
aam
xchg
push
cld
popf
movb
add
out
repz
cli
jge
movl
shr
inc
add
fnstenv
fcoms
adc
loope
sbb
adc
xor
add
cmp
mov
insb
std
popl
mov
push
jns
sub
jmp
pop
insl
jge
sbb
jae
in
xor
movsl
dec
mov
or
pop
jnp
push
sbb
push
arpl
jecxz
jne
pop
adc
inc
lock
shl
inc
xchg
jb
or
jns
repz
inc
mov
icebp
push
ja
idivb
add
xor
mov
dec
push
push
les
jno
add
push
sbb
mov
sbb
push
mov
jae
rclb
loope
or
sub
mov
jae
jle
pop
cltd
mov
adc
or
xchg
dec
out
pop
mov
mov
push
xchg
dec
insb
insb
push
cmpsl
pop
mov
dec
test
mov
jg
push
add
pushl
xor
aam
sbb
xor
iret
enter
mov
sbb
pop
xchg
pop
sbb
mov
ss
lods
mov
and
inc
inc
sub
push
push
sti
add
add
adc
pop
mov
aam
push
lea
loope
sub
aas
inc
or
add
inc
xor
es
addr16
lods
sub
sti
sbbl
mov
ret
xchg
imul
es
mov
repz
or
or
sub
nop
test
xor
gs
inc
sub
hlt
sti
dec
sbb
dec
inc
and
push
xchg
cld
sub
scas
and
push
shl
inc
adc
jbe
pop
push
push
fimuls
cmp
sbb
sbb
or
je
xor
cmp
ds
out
cmp
adc
dec
test
dec
inc
mov
imulb
icebp
push
popa
loopne
shr
dec
int3
testb
inc
add
xchg
in
pushf
adc
push
push
addl
jns
and
roll
add
xchg
rcrb
adc
push
roll
rorb
pusha
sbb
popa
add
cmp
and
ja
leave
cmp
test
sarl
fcmovb
jb
pop
ds
test
fs
push
scas
sub
repnz
pop
testl
cmp
dec
cmp
ja
call
dec
mov
pop
or
dec
or
push
cmpsb
test
pop
xchg
mov
jo
adc
outsb
or
fisubrs
or
inc
test
add
and
jno
push
bound
jbe
add
add
adc
sarl
into
mov
sbb
nop
push
pushf
fdivrl
mov
rorl
add
je
add
xchg
lock
pop
sbb
push
loop
add
testb
ret
sti
flds
dec
or
push
lock
ret
rcrl
rcrl
shlb
insl
jne
popa
inc
and
imul
jno
out
adc
scas
xchg
pop
jne
jae
addl
sbb
jb
pop
es
mov
mov
pop
lods
jmp
pop
pop
adc
nop
pop
push
push
hlt
or
fwait
dec
lock
bound
add
in
sbb
xchg
nop
pop
outsl
movsl
mov
push
dec
mov
fisttps
call
push
pinsrw
shrb
andl
js
xorl
lret
or
loopne
mov
scas
mov
mov
addb
xchg
lods
cmpps
lcall
les
inc
sarb
adc
cmp
push
imul
push
lret
mov
mov
add
rcl
adc
xor
mov
xchg
push
inc
mov
je
imul
lock
or
popa
rcll
cmp
in
daa
inc
das
rol
in
push
xor
add
stos
into
sbb
xchg
pop
cmp
ja
lea
sub
mov
mov
xchg
jae
push
inc
fnstcw
push
push
push
test
jg
push
jecxz
jnp
pop
jo
add
cld
push
jg
adc
pop
je
jo
pop
add
shl
mov
xor
ret
sbb
adc
adc
cmp
push
xchg
addr16
sbb
and
xorb
andl
out
ret
outsl
mov
rcr
outsb
incl
je
or
je
or
sub
xchg
stos
xchg
scas
add
jno
or
test
movsl
jge
cmp
or
add
push
js
jne
sahf
enter
insl
jnp
mov
clc
add
push
jmp
cmp
adc
dec
movsl
stc
jbe
adc
inc
push
imul
rorb
sbb
call
shll
lds
or
adc
dec
add
dec
cmp
andl
jmp
dec
push
in
cwtl
js
add
and
test
loopne
cmpsb
or
add
push
adc
or
pop
push
push
aaa
or
fs
imul
or
jo
shrb
scas
and
lcall
rol
mov
mov
aaa
fstl
adc
dec
je
sub
add
out
or
add
scas
rcll
out
inc
push
fistl
jne
mov
lods
mov
mov
or
adc
sub
shrl
ds
xchg
ret
xchg
in
fistpl
into
cmp
or
mov
adc
xor
movl
push
arpl
or
sahf
loopne
pusha
je
in
jne
push
icebp
dec
and
mov
rcl
inc
mov
ss
es
popf
loopne
cld
lds
fsubl
sbb
or
push
int
je
push
adc
xor
hlt
pop
inc
and
or
or
mov
pusha
mov
call
xchg
push
pop
test
xchg
jne
push
push
mov
pop
mov
sbb
bound
push
packsswb
jmp
dec
mov
pop
push
xchg
cmp
shl
fsubr
rol
adc
stos
or
inc
sub
stos
pop
add
andl
gs
mov
inc
inc
add
add
add
push
inc
in
ds
xchg
or
dec
pop
ds
fcoms
nop
sub
test
inc
in
mov
lahf
add
les
and
in
sbb
cmp
js
lods
invd
inc
push
mov
shll
out
push
sub
cmp
and
push
xor
out
sbb
push
ret
pop
xor
xor
cmc
fcomp
mov
xchg
test
jb
les
push
adc
dec
or
mov
test
xor
xor
and
mov
sub
mov
aam
lock
jl
adc
leave
in
inc
mov
push
xchg
dec
adc
loope
shr
inc
sbb
mov
dec
add
or
sbb
orl
push
jmp
div
cmp
sbb
or
adc
push
dec
rclb
sbb
adc
loope
or
fidivl
xor
inc
int
and
cmp
sub
push
mov
fisubrs
or
cmp
mov
or
and
mov
push
addl
jne
cltd
adc
push
daa
lea
dec
enter
loope
ja,pn
mov
inc
fcoml
or
pop
sub
fsub
hlt
or
xor
js
xchg
clc
aam
dec
stos
sub
js
das
push
dec
or
mov
leave
xorl
shrb
nop
orl
outsl
loop
or
push
and
push
daa
rorl
ret
mov
xor
or
mov
filds
or
data16
adc
mov
sbbl
rorb
and
sbb
xor
dec
pushw
and
sub
icebp
xchg
test
add
popa
fcoml
test
xchg
inc
cmp
lret
enter
inc
inc
inc
fcomp
sub
lret
or
pushf
jo
and
mov
add
test
pop
xor
sub
mov
fsts
jno
and
inc
cmp
int3
cmpsl
ljmp
mov
push
je
push
gs
pop
icebp
xchg
push
inc
leave
stc
mov
xchg
je
rcl
add
sub
mov
or
push
loope
add
push
sub
mov
add
call
inc
pop
jae
data16
xor
aaa
bndldx
xchg
in
mov
sbb
dec
cmp
xchg
pop
add
adc
jge
lea
sbb
es
ljmp
pop
sarl
aaa
mov
sbb
add
mov
out
std
inc
imul
fcoml
mov
sub
mov
push
enter
xor
mov
mov
addl
and
push
and
add
adc
add
adc
mov
add
push
mov
adc
call
cmp
pop
xchg
sbbl
push
add
and
add
movsl
mov
je
add
rorb
inc
pop
or
cmp
mov
pusha
loopne
cs
or
mov
fmuls
adcb
push
ret
sbb
jnp
test
or
pop
adc
xor
lahf
pop
pusha
sub
pop
or
enter
jne
adc
sub
push
push
mov
and
xor
or
dec
adcl
mov
inc
xchg
movsb
in
out
ret
nop
in
sbb
push
js
push
xchg
jge
jns
adc
lock
out
cmp
sti
or
jl
call
sbb
pop
bound
push
sbb
or
pop
or
pushf
std
and
mov
dec
cmp
pop
mov
aad
ffree
sbb
push
pop
push
mov
sub
adc
jecxz
call
xor
add
shrl
cmc
add
sbb
dec
in
xor
sbb
inc
adc
inc
and
dec
in
pusha
popa
and
jnp
loope
divb
jno
sub
jl
or
into
jle
ss
dec
or
mov
pop
orb
add
sbb
sub
std
mov
ss
add
stos
adc
xchg
mov
mov
test
and
scas
in
inc
xchg
leave
call
cmp
clc
sbb
push
sbb
das
jge
and
sub
add
xlat
push
cld
lahf
adc
add
mov
adc
pop
mov
mov
dec
into
add
or
psubusw
cmp
setg
jmp
mov
jno
pop
es
out
dec
int
in
addr16
cmp
insb
sbb
repz
lock
jmp
test
jecxz
mov
ret
jmp
fsubr
inc
pop
inc
jnp
or
or
in
loope
dec
xchg
push
cwtl
fdivr
rcrb
adc
faddl
and
jl
addb
lods
add
popf
xchg
outsl
stc
mov
sbb
lret
cmp
je
rclb
lods
nop
jo
push
mov
popf
mov
jo
dec
mov
and
dec
jmp
imul
fmuls
fdivrp
and
jbe
imul
push
movsb
lahf
call
dec
xchg
sub
je
inc
or
mov
mov
add
push
cmp
pop
gs
jge
add
fistpl
fisubs
push
dec
mov
mov
push
nop
insb
pop
dec
pop
xchg
adc
mov
leave
mov
out
adc
sbb
sub
cmp
and
pop
outsb
cmc
xor
mov
movsb
cmpb
ret
and
inc
push
add
inc
add
sub
fsubl
loop
jp
cld
arpl
inc
roll
pop
push
jbe
pop
sub
cmp
dec
pop
add
or
xchg
icebp
in
sbb
in
sub
jmp
push
das
pop
cmp
and
mov
dec
push
cmp
imul
daa
dec
or
je
data16
mov
adc
scas
sbb
cwtd
mov
cwtl
jne
in
andl
pusha
jl
and
and
enter
push
and
fcom
sub
shrb
and
lea
xlat
sbb
or
ss
cmc
pop
in
call
or
sub
and
ja
imul
xor
cmp
je
add
sbb
cltd
or
push
sub
push
cltd
jne
dec
loope
repnz
add
mov
inc
call
dec
jmp
push
fwait
cmovns
push
add
pusha
imul
ss
test
inc
arpl
xor
sarl
jae
add
push
pop
push
neg
fwait
in
pop
mov
lds
add
cmp
sahf
jne
addl
inc
or
decl
call
xor
cwtl
aad
rclb
add
pop
adc
pop
mov
push
into
js
rcrb
pop
adc
and
mov
push
jg
adc
jno
pop
inc
sub
cmpsb
lret
outsl
sbb
add
lods
nop
cmpsl
pushf
imul
cltd
cmp
push
sbb
bound
movsl
bound
sbb
outsl
call
imul
test
pop
fwait
ds
jg
movsb
push
loope
fucomi
lock
jnp
cld
inc
or
mov
daa
inc
dec
fcompl
dec
push
pop
sub
add
pop
ss
and
mov
cltd
xor
addr16
into
das
xor
mov
xchg
xor
mov
in
pop
lcall
in
mov
frstor
dec
pop
mov
push
push
add
mov
fimuls
or
shrb
imul
rcrl
jmp
jge
sbb
loopne
js
push
push
add
mov
and
leave
pop
sar
jb
xchg
pand
incl
jne
cmc
add
or
js
pop
pop
mov
sarl
std
ljmp
rcrb
sahf
mov
jne
movsb
roll
jne
adc
bnd
jne
inc
sbb
int3
rclb
or
jne
movsb
ret
hlt
aas
fs
inc
xlat
sbb
lds
add
xorb
adc
lahf
dec
in
push
imul
lds
cld
add
es
mov
sub
imul
add
loopne
cmpsb
mov
add
xchg
push
cmpsl
lret
and
insl
add
pusha
sbb
mov
xchg
push
fcmovnb
fimull
xchg
lcall
in
loop
ret
subb
mov
addl
mov
add
daa
sbb
test
inc
pusha
jbe
sub
mov
adc
aaa
add
test
mov
dec
or
adc
jae
test
add
clc
jne
sbb
xor
dec
adc
jl
bndldx
sbb
push
push
xor
fidivrl
add
mov
mov
dec
add
adc
xchg
adc
xor
push
jmp
aas
lds
add
push
insl
mov
mov
arpl
fidivrl
in
mov
jbe
dec
and
push
and
xchg
or
xor
xchg
xchg
fstps
enter
in
or
sbb
sub
jnp
mov
push
imul
sub
insl
packuswb
mov
adc
enter
push
jp
sbbb
xor
pop
add
or
push
enter
xchg
or
inc
mov
add
clc
sub
ret
mov
sbb
jge
adc
jb
sub
decl
and
dec
push
mov
sahf
sbb
adc
call
sbb
and
cwtl
dec
loopne
pop
movsl
mov
inc
loop
out
jb
ja
lds
xchg
cmp
dec
gs
mov
add
mov
mov
cmp
pop
dec
sbb
adc
imul
xor
lock
pop
in
jge
sbb
mov
insl
rcll
in
scas
repz
adcb
mov
mov
cmp
jbe
shll
sbb
mov
push
add
and
sub
cmp
test
cmp
test
insl
pop
jno
mov
inc
mov
add
xorb
es
inc
lock
and
add
add
mov
sahf
cmpsl
inc
and
sbb
xchg
adc
push
cmpsl
push
inc
dec
lahf
add
mov
sbbl
and
add
test
push
hlt
cmpsb
ds
test
cmp
jbe
mov
cmp
push
cmp
push
pop
pop
cmpsb
test
inc
jbe
pop
or
jmp
shlb
cld
shlb
test
jecxz
fisubl
pop
data16
xor
push
iret
das
test
dec
cmpsl
cmp
and
push
inc
enter
pop
fistl
fs
pusha
add
push
or
and
add
cltd
sbb
mov
aaa
dec
push
in
aas
ja
push
pop
dec
rcrb
inc
lret
or
icebp
push
xlat
push
adcl
inc
xchg
cmp
test
fwait
or
es
push
pcmpgtw
into
add
dec
rorb
inc
cltd
aam
aad
mov
jb
insl
or
cmp
and
jne
andl
in
inc
and
movsl
mov
popw
je
adc
cmc
jnp
mov
push
dec
scas
mov
subl
movhlps
xchg
jnp
cld
je
adc
xor
jbe
sbb
and
jb
pop
std
mov
notb
jns
int
fmull
and
test
nop
repnz
insb
xchg
add
shll
jle
jbe
ffreep
or
sub
ljmp
push
cmp
push
or
lea
iret
mov
mov
mov
push
push
pop
push
in
jle
mov
nop
nop
add
jb
pusha
cmpsb
enter
and
sbb
add
stos
inc
rcrb
les
jo
cmc
mov
lea
mov
push
movsl
mov
rorb
sbb
adc
add
cmp
in
es
mov
pop
sbb
mov
push
lret
push
or
mov
jmp
lock
sbbb
cmpsb
sub
jge
mov
jge
pushf
mov
xchg
rcll
mov
dec
jns
pushf
mov
arpl
lods
pop
inc
lret
stos
xchg
dec
stos
adcl
cmpsb
sbb
mov
push
inc
or
or
pop
jbe
or
adc
add
sub
aas
ficoms
sbb
cmc
jb
add
loope
cmp
add
sbb
test
add
fdivp
mov
adc
adc
xor
adc
pop
push
repnz
orl
inc
cwtl
dec
and
adc
les
lret
and
rcll
subb
mov
sbb
adc
pop
int
mov
push
pop
ret
inc
aaa
xor
ret
repnz
sbb
fwait
bound
nop
sbb
or
mov
pop
xor
mov
ret
add
clc
sarb
pop
pushl
inc
pusha
sub
repz
push
xchg
clc
in
fs
mov
push
hlt
pop
xor
fwait
rcrl
push
daa
pop
test
je
andb
and
dec
cli
imul
pusha
adcb
push
push
mov
adc
or
add
push
inc
fildl
pop
xor
or
dec
jo
orl
sub
or
pop
adc
clc
xchg
cmp
push
and
dec
cmp
push
clc
rorl
add
sahf
std
ljmp
cld
pop
cld
imul
call
clc
pop
aam
or
aam
pop
add
pop
out
sbb
and
lea
cmpsb
pop
or
push
pop
pop
fdivrs
pop
inc
inc
cmp
jb
xor
popa
push
lds
xlat
and
xchg
cmp
pop
ret
jno
shll
int
nop
sbb
mov
sbb
cmp
scas
mov
jo
test
or
pop
adc
sub
xor
inc
xor
nop
xor
popf
inc
arpl
lock
add
push
inc
lods
popa
mov
xor
xchg
dec
fcmovbe
pushf
jg
pushf
cmp
add
test
or
push
mov
push
test
test
out
push
xchg
clc
mov
mov
shr
not
fdivs
sbb
mov
push
imul
lret
aaa
sbb
out
call
push
es
xor
push
stos
dec
std
pusha
lds
gs
mov
xchg
je
add
push
sbb
cli
imul
pop
stc
repnz
sub
xor
xor
jl
jns
cmp
dec
add
push
push
lods
dec
push
xor
or
inc
add
push
addl
jmp
sbb
add
cmc
pop
or
jg
or
inc
add
adc
shlb
imul
mov
inc
mov
and
decl
shll
js
add
or
inc
sbb
push
sub
or
and
pushf
push
mov
mov
popf
push
push
push
mov
mov
cmp
inc
sub
mov
leave
or
cwtl
cmpsl
jmp
mov
pop
fs
mov
or
jmp
add
and
cmpb
adc
xchg
adc
roll
inc
xchg
pop
lds
imul
dec
lods
add
xlat
lea
pop
in
gs
sbb
jns
lcall
arpl
mov
es
rol
and
pop
scas
add
sub
push
out
cmpsb
lret
push
jl
cmp
push
jecxz
loop
mov
mov
mov
nop
out
int
sbb
dec
and
jp
idivb
dec
sub
or
rolb
add
mov
adc
fstl
shlb
xor
je
pop
cmp
xchg
clc
ds
sub
xor
fisubs
cmp
mov
jl
icebp
adc
sti
rep
pop
inc
xor
cmp
inc
cs
sbb
jmp
out
cmp
pushl
or
scas
push
lea
sbb
cmp
add
mov
adc
pop
push
push
or
jae
push
push
mov
add
xlat
push
and
push
mov
xchg
pop
loopne
jge
dec
adc
xchg
data16
loop
test
sub
std
and
outsl
xor
and
adc
push
push
and
aas
mov
adc
imulb
push
mov
data16
add
arpl
movb
loop,pn
fcmovne
push
add
movsb
push
or
adc
mov
jnp
out
or
mov
pop
pop
push
iret
test
xchg
das
mov
push
inc
mov
xchg
aam
mov
push
push
push
and
in
adc
adc
orb
mov
arpl
add
xor
outsb
push
push
push
add
xor
dec
hlt
lock
popf
ret
pusha
cld
or
push
push
cwtl
push
and
sub
inc
cmc
ret
daa
xor
mov
pushl
xchg
push
push
lea
pop
mov
dec
xchg
push
scas
lods
xor
fidivrl
cwtl
push
in
mov
adc
pop
dec
pusha
adc
loopne
pop
add
lock
push
roll
and
add
xor
cmp
xchg
push
dec
jne
outsb
loopne
mov
add
add
fwait
js
cmc
adc
push
loope
sbb
add
adc
stos
fs
or
inc
add
or
enter
sbb
mov
and
dec
rclb
cmpsl
jns
sbb
xchg
sub
adc
or
dec
cmp
adc
leave
adc
jbe
sbb
cmp
xchg
add
and
and
jp
inc
loop
add
rcrb
push
and
or
add
add
pop
lcall
push
mov
or
movsb
pop
das
push
sbb
nop
mov
cmp
fcmovbe
or
jle
sbb
xor
dec
adc
out
dec
loopne
in
inc
cmp
xorb
loopne
add
add
ss
add
je
add
sbb
mov
mov
pop
lods
sub
sar
call
aam
jb
ret
cmp
test
dec
shll
mov
mov
hlt
and
dec
mov
add
jecxz
xchg
sbb
or
es
ffreep
inc
adc
sbb
or
push
lcall
outsl
xchg
gs
sub
add
sahf
ja
xchg
push
ret
lods
mov
mov
mov
lods
or
push
imul
xchg
sahf
shrl
inc
andl
dec
sar
inc
popf
lea
clc
pusha
jmp
push
test
ret
and
rolb
add
mov
out
test
or
cmp
xchg
jl
lret
in
sbbb
xchg
jnp
push
mov
push
dec
aaa
push
push
imul
pusha
add
add
and
lcall
push
mov
mov
jle
push
sbb
sub
push
mov
mov
jl
aam
jne
pushf
sbb
mov
mov
add
jl
pop
pushf
push
rcrl
inc
or
insl
lock
sub
mov
adc
ds
insl
nop
inc
jmp
dec
ss
sbb
dec
add
jne
sub
inc
loopne
fsubrs
incb
pusha
addb
jp
cmp
fnstcw
jae
jb
jae
ror
xlat
pop
inc
addl
jmp
dec
push
add
sahf
hlt
jae
jge
popa
and
xchg
jne
mov
ret
xorb
adc
loopne
cmp
mov
jne
rcll
sahf
or
xor
inc
inc
mov
add
cs
mov
inc
sub
jb
adc
push
cmp
and
pop
pop
jp
cs
pop
mov
sbbb
sub
in
sbb
es
and
add
pop
dec
in
add
cmp
dec
daa
popl
cmp
sub
xchg
cmp
mov
setb
fs
cmp
xchg
or
and
jg
pushf
xchg
add
mov
add
add
push
cli
pmaddwd
lret
mov
inc
lock
ret
push
ss
mov
pop
pop
or
lea
add
orb
shr
adc
lret
sub
jae
sbb
rorl
mov
add
clc
inc
fbstp
push
aaa
jbe
and
imul
shll
push
pop
inc
mov
sarb
lock
cmp
subl
sbb
sbb
mov
mov
cmp
dec
ja
ja
bound
dec
or
fldt
add
or
adc
ss
or
outsb
xchg
fisttpl
mov
mov
arpl
lahf
xchg
fstl
outsb
scas
flds
int
adc
and
inc
in
adc
mov
test
js
or
mov
jno
or
ja
ljmp
sti
rorb
push
xor
outsl
dec
mov
and
or
addr16
out
rolb
sub
inc
rclb
xchg
out
add
shll
sub
push
adc
adc
push
dec
js
sbb
aad
push
cmp
push
jbe
sbb
and
cmp
add
cwtl
and
add
in
and
in
je
sub
sbbb
sbb
cmp
sub
inc
leave
add
sub
cs
aas
or
xchg
add
stos
pop
cmp
pop
sub
adc
cmp
inc
push
scas
mulb
loop
xor
dec
sti
fstps
cmp
xor
or
xor
imul
int3
inc
sbb
lea
xchg
and
fnstsw
cld
or
mov
adc
jbe
mov
pop
add
or
pop
les
or
inc
int3
dec
push
popf
or
adc
sbb
xor
pushf
sbb
inc
and
mov
and
mov
adc
negl
shlb
jne
xlat
rolb
inc
inc
mov
add
cmp
mov
test
jge
lods
xchg
xorl
xchg
cmpsl
sub
jne
mov
fstl
jge
mov
mov
pop
mov
lds
add
inc
mov
dec
sti
xor
shl
fimuls
enter
push
shrb
loopne
mov
stos
inc
test
pop
dec
mov
loopne
mov
popa
xchg
test
jo
pop
sbb
mov
and
mov
mov
jle
hlt
push
xchg
dec
ljmp
pshufw
inc
out
mov
nop
rclb
aas
mov
test
dec
sbb
sub
in
push
mov
pop
mov
add
fcoms
inc
or
test
sub
jne
pop
lock
or
pusha
test
fadds
sub
mov
or
hlt
sub
push
test
jne
testl
test
loopne
js
add
sbb
into
pop
andl
push
push
pop
sbb
dec
shl
xchg
jmp
mov
fs
xor
jl
call
push
mov
or
fs
ss
adc
faddl
ret
xor
xchg
insl
addb
xor
adc
ret
cld
push
add
adc
add
mov
jbe
or
jbe
xor
bnd
cmp
xor
lret
sbb
and
mov
jb
push
cs
xchg
out
dec
xor
jb
adc
pop
jns
add
mov
add
cmp
inc
popa
sti
push
xor
movsl
rorl
inc
mov
add
jo
jne
dec
inc
imul
dec
mov
or
adc
push
adc
insb
dec
imul
jb
out
add
arpl
popa
lods
bound
rclb
push
mov
add
ret
mov
daa
inc
sbb
jecxz
sbb
pushf
mov
movsb
popf
push
pop
add
add
sbb
and
add
sub
and
and
xchg
popa
int
fldt
insl
or
das
inc
pop
jb
mov
mov
sbb
or
mov
push
sbb
add
imul
push
repz
adc
or
pop
cmpsl
and
mov
or
stc
call
scas
js
pop
pop
adc
add
stos
pop
sbb
cwtl
pop
or
push
pop
dec
je
mov
test
jno
imul
nop
ret
xor
nop
pop
shlb
push
jmp
aam
sbb
test
jmp
call
pop
jge
rcl
xor
inc
adc
or
push
das
adc
stos
dec
jmp
cli
aam
add
fsubs
movsl
stos
sbb
and
dec
add
xchg
mov
jge
js
push
jnp
push
pusha
and
add
loop
or
adc
js
jle
mov
addr16
push
cmp
jl
mov
adc
nop
inc
test
dec
jle
pop
lods
dec
adc
stos
mov
mov
dec
test
fiadds
add
inc
mov
imul
ja
jp
sbb
adc
cmc
mov
push
mov
jo
add
sub
or
dec
mov
loop
mov
and
int
add
add
pusha
lea
pop
xorl
rorb
xchg
outsl
adc
xor
lret
loope
addl
in
jnp
pop
xchg
and
and
ret
add
xchg
mov
push
cli
push
call
pop
push
mov
jnp
sbb
dec
mov
iret
sub
jecxz
or
push
popa
add
clc
divl
add
sbb
mov
mov
rorl
dec
aas
push
add
add
pop
push
and
rclb
inc
outsb
outsb
xorl
xchg
xchg
jns
xchg
adc
mov
fwait
mov
dec
and
add
loope
mov
jge
mov
insb
imul
add
lret
cmp
mov
dec
jnp
jp
xlat
pusha
lods
or
adc
mov
loope
cmp
or
lock
push
test
pop
sbb
xor
or
xor
js
ror
daa
loopne
sub
and
and
pop
mov
inc
mov
cmp
repnz
or
repnz
movsl
fcoms
inc
cwtl
dec
rcrb
add
mov
lods
mov
inc
test
lea
dec
stos
ret
adcl
or
and
pop
rcll
into
fsubl
xchg
add
add
and
inc
dec
ljmp
mov
fcmove
and
xor
gs
pop
sbb
xor
fmuls
arpl
or
outsl
orl
sub
negl
xchg
dec
or
mov
push
push
mov
jl
xor
enter
in
pusha
mov
sub
add
mov
cmp
aas
icebp
push
loopne
push
xchg
sub
xchg
add
cltd
cmp
mov
movsl
jmp
sbb
inc
mov
in
aas
xor
jl
xchg
bound
push
scas
jo
call
and
sub
mov
stc
push
and
ds
xor
inc
gs
add
je
and
xchg
rcrb
mov
dec
add
jmp
add
int3
or
arpl
and
lods
mov
sbb
cmpsl
and
cmp
push
out
push
adc
or
cs
xchg
sbb
xchg
pop
or
sub
push
push
push
jmp
adc
cmp
and
adc
rolb
xor
lods
xchg
mov
inc
inc
orl
cmp
dec
popa
leave
pushf
push
js
cmp
jns
pop
mov
adc
pushf
nop
inc
sbb
mov
xor
push
adc
fwait
pop
pusha
cmp
push
adc
xor
xlat
push
push
jge
mov
dec
scas
push
adc
fwait
push
adc
push
adc
adcb
pushf
rclb
push
push
mov
pop
mov
daa
add
ja
adc
and
clc
int3
and
pop
dec
sbb
xchg
or
xor
ja
ljmp
xchg
or
jp
fwait
int
push
cmp
jne
jo
push
mov
fwait
mov
inc
xchg
sbb
sbb
jno
pop
dec
mov
add
test
push
mov
jmp
jle
dec
pushf
and
pop
in
cs
xlat
enter
stos
pop
push
mov
push
mov
jge
pop
out
pop
adc
jbe
pop
hlt
jne
mov
mov
ret
xor
js
and
adc
mov
adc
aam
test
add
xor
cmc
jle
xor
xchg
test
sub
fsts
sub
push
push
or
jno
inc
jbe
ret
ljmp
add
orl
mov
je
push
pop
mov
dec
in
pop
or
call
lock
js
jecxz
movsb
leave
les
jecxz
lock
mov
mov
and
std
mov
stos
xor
ss
lret
pop
mov
flds
iret
push
sub
enter
or
fadd
enter
fcoms
ret
sbb
xor
push
fsubrl
and
enter
or
rolb
jo
inc
push
pop
and
dec
pop
fnstsw
mov
inc
jb
imul
pop
or
push
mov
xchg
lods
das
stc
pop
xor
pusha
mov
ja
pop
push
shr
sti
je
sub
loop
lea
call
xchg
pop
and
or
mov
sub
ja
pop
cs
dec
jno
or
cmpb
sti
aam
ss
cld
mov
adc
or
inc
jmp
xchg
es
jecxz
mov
popf
xchg
lock
inc
xchg
cmpsl
data16
clc
lods
and
inc
mov
or
dec
mov
dec
inc
into
xchg
ja
movsb
rolb
pop
adc
std
push
lea
test
or
jge
cmp
or
in
inc
in
movsb
sub
mov
out
lea
xchg
and
add
sbb
inc
push
cmp
adc
orb
xchg
lea
push
js
adc
and
add
or
lea
fcoms
dec
mov
mov
popf
cmpsb
add
sub
xor
push
jnp
clc
hlt
or
into
mov
mov
notb
movsb
adc
sub
xlat
add
mov
or
push
rolb
mov
xchg
push
mov
push
cmpsl
outsl
test
jb
sti
push
dec
sbb
ja
lea
adc
repnz
sub
rorl
add
adc
cmp
mov
sub
ljmp
pop
cmp
add
mov
shrl
push
rclb
adcl
rol
cli
fistpll
lods
repz
fwait
lods
or
push
test
jo
cmpsl
push
push
cmp
scas
je
push
rorb
dec
loope
inc
js
in
mov
sub
mov
rorl
push
push
mov
outsl
xlat
mov
push
std
adc
loopne
cli
cwtl
ljmp
addr16
push
je
roll
pop
ror
movsl
lock
add
pop
jmp
xor
das
jecxz
hlt
and
sbb
jg
cwtl
sub
pop
in
dec
lock
adc
push
pusha
sbb
loop
dec
fs
scas
inc
sbb
sub
int3
gs
push
cmp
cmc
mov
push
xlat
jmp
stos
es
sqrtps
push
inc
push
sti
popa
xchg
push
in
xlat
outsb
sub
daa
cmp
ljmp
pop
mov
add
add
mov
cmp
mov
mov
and
and
xchg
cmp
call
mov
incl
push
sub
sub
push
jl
pusha
push
xor
mov
das
xchg
jno
scas
pop
cmp
loopne
or
mov
adc
insb
sub
rcrb
add
insl
dec
inc
scas
orb
add
add
inc
cmpb
push
add
out
out
xchg
test
mov
dec
fstpl
push
mov
ret
push
ja
in
test
xor
cli
adc
lea
les
fiaddl
xlat
adc
jg
dec
mov
mov
test
std
dec
imul
cmp
out
movsl
movsl
mov
je
add
inc
jl
lock
push
pop
push
add
add
inc
sub
cmp
aad
pop
add
push
push
fsub
ja
sti
mov
push
add
je
in
add
std
pop
or
inc
test
inc
out
incb
sahf
sub
clc
push
in
popf
mov
sub
outsb
lock
dec
es
loopne
xor
or
pop
adc
xchg
cmpsb
inc
or
insl
inc
pusha
mov
xlat
mov
gs
xchg
loop
fdiv
cmp
dec
inc
sub
push
js
mov
jo
mov
cmpsl
mov
es
push
jns
sahf
adc
and
push
jns
in
std
incb
clc
cmp
je
add
ja
fsubrp
adc
je
data16
or
xlat
jmp
xor
mov
in
stos
inc
pushf
stos
nop
addb
cmp
jg
outsb
adc
insl
adc
cli
jbe
or
imull
add
push
jge
push
jle
pushf
repnz
or
ja
cmp
xor
mov
jne
jge
add
pusha
sbb
or
shlb
dec
mov
inc
push
dec
cmp
fdivrl
xor
loopne
fcomps
jp
sbb
xor
in
and
mov
out
je
in
addr16
and
jne
adc
inc
push
lock
adc
clc
or
adc
sbb
xchg
or
add
or
stos
pop
cmp
shll
nop
or
movb
ds
jmp
pop
cmpsb
adc
adcl
dec
xor
pop
push
lods
ljmp
fadds
fldl
mov
cmp
pop
call
add
sbb
pop
daa
jmp
xchg
daa
pusha
add
jmp
add
roll
adc
dec
dec
jge
push
mov
jecxz
mov
xor
mov
add
fistpl
leave
xor
lret
mov
hlt
xchg
pushf
loop
fcoms
aam
sub
cmp
mov
in
push
sbb
decl
pop
pop
shlb
push
mov
push
imul
shrb
sub
inc
dec
jns
push
cli
or
adc
fmuls
iret
shlb
sbb
or
stos
mov
hlt
pop
rcrb
les
aam
andl
fcoml
rolb
or
jae
popa
mov
or
dec
pop
xchg
ds
popf
negb
inc
mov
xor
pop
fidivs
xor
sti
add
dec
dec
sub
xchg
pusha
in
or
hlt
jle
shrb
jl
xchg
adc
js
jp
add
mulps
nop
sarl
xchg
sbb
sbb
test
xor
test
insl
pushf
sti
dec
jge
test
jge
mov
inc
inc
lcall
and
shlb
pop
outsl
push
adc
in
fwait
cli
adc
mov
adc
insb
mov
ret
iret
ret
inc
push
aas
repnz
push
jne
js
mov
adc
inc
cld
xor
insb
mov
movsb
and
fldl
inc
test
push
inc
jns
cmp
pop
inc
in
cmp
dec
add
mov
add
dec
and
and
jne
nop
daa
or
dec
cmpsl
fistl
aas
mov
test
nop
rorb
jne
shll
push
sub
push
xchg
cmpb
jo
test
push
jno
rcrl
into
and
or
popa
add
xchg
sub
push
add
insl
jecxz
push
out
bound
je
rorb
mov
and
jmp
addr16
mov
cmp
inc
sbb
je
xchg
lea
cltd
test
in
pop
cmp
adc
cli
insb
shrb
pusha
xchg
xor
arpl
sub
mov
add
cmp
outsl
cmp
mov
mov
mov
jno
cmpsb
sbb
movb
or
jp
push
es
add
sbb
ret
and
imul
xchg
mov
stos
fmuls
mov
pop
cmp
lds
mov
cmp
adc
cmp
in
bound
pushl
add
inc
cmp
clc
add
xor
mov
push
ret
lcall
insb
divb
rolb
ja
lock
shr
xchg
test
push
or
jb
and
mov
mov
sub
stos
adc
call
inc
movd
mov
shr
cmp
jbe
dec
mov
add
aaa
jmp
add
jle
jmp
cwtl
and
ret
and
dec
scas
movb
jbe
jl
popa
inc
imul
cmp
push
mov
mov
push
mov
mov
add
add
jg
mov
ffreep
ret
inc
sbb
adc
add
inc
fcoml
add
iret
and
popf
mov
sti
imul
hlt
sti
pushf
add
and
in
add
push
loopne
aam
add
dec
xchg
mull
lcall
sahf
rcrb
and
nop
sbb
aam
enter
dec
or
add
cmpsb
pusha
fadds
sbb
sbb
movsb
push
fsts
fadds
addr16
add
mov
jo
outsl
rcll
nop
cmc
sub
adc
cs
cmpl
cs
mov
and
inc
arpl
sub
rorl
inc
rorb
fs
mov
sub
cmc
dec
jg
and
stos
or
lea
in
ret
jnp
pop
mov
add
sbb
inc
lock
or
stos
push
in
fidivl
jno
mov
js
push
lea
inc
mov
and
lods
cmpb
xchg
xor
mov
sbb
jl
pop
mov
or
pop
sarb
je
push
movsl
pop
sti
adc
bound
inc
les
add
and
int3
jecxz
and
ret
rcr
sbb
clc
lcall
pop
dec
loope
call
leave
and
push
jns
nop
adcb
pop
pop
add
jmp
sahf
jns
dec
loopne
test
dec
push
in
push
add
add
nop
fnsave
push
mov
insl
movsb
inc
mov
add
mov
and
jb
ds
or
xorl
inc
fwait
inc
sarl
and
sbb
xlat
repz
sub
fsubr
xlat
arpl
out
inc
pop
pop
cs
and
lods
outsl
ljmp
jo
mov
int3
xor
popa
cmp
andl
femms
dec
pop
enter
or
out
mov
pop
sbb
lahf
or
or
jp
jmp
in
and
aam
fistl
mov
sbb
cld
inc
adc
cmp
mov
frstor
fxch
or
fcompl
fcomip
push
pop
out
aam
xchg
cmc
adc
adc
mov
inc
roll
push
sub
xlat
mov
mov
or
push
cmpb
rol
jg
xor
mov
les
addr16
sbb
sbb
lret
xor
cmp
dec
aam
mov
adc
or
fdivrs
sub
das
movsb
add
cmp
jp
sbb
or
rolb
pop
adc
push
adc
xor
mov
sub
mov
push
lret
lock
pop
mov
fbstp
fcomps
mov
dec
push
push
xor
dec
pop
ret
subl
mov
pop
pop
dec
rep
jno
pause
ret
inc
cmp
xor
cwtl
arpl
inc
dec
mov
push
jg
push
les
jno
rorb
mov
push
js
lock
cmpsl
pop
mov
push
mov
or
scas
fiadds
pop
push
jae
popa
push
imul
xchg
test
test
push
mov
mov
hlt
push
xchg
add
and
add
aaa
lods
test
mov
loope
loope
ret
sub
sbb
push
dec
nop
fcoms
lret
jbe
or
jo
mov
lret
mov
mov
add
in
int3
sbb
xor
pop
cmpsl
adc
daa
push
insl
cmp
xor
outsl
dec
add
add
jp
add
push
adc
push
lock
inc
loope
xor
mov
sahf
dec
inc
xchg
jge
add
jmp
mov
les
cmc
add
bound
sub
adc
cli
test
lret
lods
stos
mov
mov
jne
push
negb
pop
and
rorb
mov
xchg
jl
jo
push
xor
enter
or
jge
add
leave
test
adc
jb
pop
sub
mov
les
add
push
adc
inc
pop
or
call
notl
inc
fwait
xor
test
add
inc
in
add
adc
fwait
ljmp
je
sbb
jg
jmp
and
push
mov
cmpsl
lods
xchg
push
push
and
ljmp
and
xchg
test
push
and
and
xchg
loop
or
loopne
add
add
add
gs
push
rorl
xor
push
stos
iret
pop
push
or
pop
cmp
or
xor
cmp
stos
push
gs
cs
inc
adc
mov
inc
ljmp
adc
mov
xorl
push
jo
imul
adc
push
icebp
out
lahf
pop
movsl
xor
xchg
sub
cmp
je
cmp
mov
jl
pusha
cmp
in
mov
mov
cmp
add
in
push
sbb
mov
mov
sti
out
mov
popa
push
hlt
pop
add
pop
inc
cmp
addr16
inc
insl
push
js
push
mov
lock
cmp
pop
imul
mov
mov
lock
push
push
cs
int
pop
jmp
andl
cmp
rolb
pusha
test
into
xor
pop
mov
ror
les
dec
inc
sbb
data16
or
addr16
pop
das
xor
rcl
lret
pop
xchg
sbb
call
lret
ret
jge
cmp
pusha
adc
dec
test
adcl
pusha
in
xlat
inc
or
ds
ds
xor
lock
cmp
inc
or
pop
mov
push
cmp
adc
jbe
andb
in
sbb
mov
add
xchg
sbbb
aam
mov
sbb
out
add
or
dec
popa
loop
jne
or
mov
jne
mov
add
pop
mov
or
add
loopne
leave
rorl
add
sub
inc
dec
or
scas
xchg
xor
sbb
cwtl
and
xor
faddl
fldl
incb
push
clc
movsl
fcomp
fnstsw
std
mov
dec
fldl
pop
fsubr
pop
faddp
andl
xorb
or
xchg
adc
fmul
je
cs
mov
push
mov
in
movsl
xchg
xchg
mov
nop
and
sub
shll
sbb
mov
mov
add
test
xchg
inc
adc
ficoms
movsb
sbb
pop
inc
add
push
mov
test
lret
daa
lea
call
or
mov
xor
mov
cmp
mov
sbb
fldenv
in
jge
cmpsb
movl
daa
dec
mov
jbe
cmp
dec
mov
int3
dec
add
notb
mov
push
mov
inc
mov
jne
pop
mov
sub
or
push
sub
push
lea
mov
into
enter
xchg
jmp
mov
cmp
jge
adc
or
shlb
dec
outsl
add
shlb
rorl
inc
bound
push
sti
sbb
push
mov
jmp
rorb
xor
bound
pop
stos
lea
movsl
adc
mov
ja
sub
test
mov
adc
pop
add
cmp
xor
dec
pop
fs
or
mov
dec
cmp
add
mov
mov
imul
inc
add
mov
push
add
push
or
push
sbb
in
jns
mov
mov
std
add
cwtl
insb
dec
test
mov
data16
or
mov
mov
or
test
add
lods
mov
sub
push
mov
test
shrl
sub
addl
push
or
ret
jg
movsb
daa
loopne
push
and
inc
outsl
lahf
push
inc
adc
push
test
mov
xor
jno
xchg
pushl
addl
out
xor
cwtl
out
xchg
sbb
pop
add
dec
repnz
cmp
or
adc
xor
dec
xor
mov
lods
insb
das
shld
push
add
adc
ss
cmpsl
ficoml
dec
sbb
xchg
test
xchg
dec
nop
or
fmuls
cmp
cmp
xor
fcoms
sbb
outsl
mov
in
xor
aaa
pop
ret
jne
mov
ret
ret
xlat
lods
or
add
mov
add
jle
je
mov
push
shll
mov
add
ret
jne
pusha
psrad
mov
mov
stos
fadd
adc
xor
cmpsb
jle
xchg
cmp
lock
dec
call
dec
xor
rorb
xchg
and
nop
test
and
push
add
cmpb
std
xor
aaa
or
inc
mov
cmp
js
mov
push
imul
push
push
lods
lret
push
dec
adc
push
push
hlt
ret
add
in
mov
mov
mov
mov
mov
insl
ror
hlt
sbb
idivl
popa
cmpsl
add
adc
lock
aas
lock
aas
jns
test
ret
mov
add
and
add
cmp
sub
pusha
dec
loop
cmp
decl
mov
shr
ss
lret
mov
movsl
in
and
das
bound
push
mov
dec
xor
or
cmpb
sub
mov
pop
mov
fs
daa
adc
dec
push
sub
in
out
and
pop
inc
rolb
movsb
jb
fs
mov
or
mov
push
pushf
jmp
fistpll
ret
mov
add
adc
add
popa
mov
xchg
jo
test
lds
loopne
fldl
scas
imul
test
insb
iret
add
or
loope
leave
pushf
jne
mov
push
scas
and
inc
and
pop
out
mov
fcompl
loopne
adc
les
test
xchg
add
sahf
pusha
daa
js
push
test
loope
xor
cld
movsb
movsl
push
insl
push
ja
sbbl
inc
or
xor
push
push
loopne
jns
sahf
sub
mov
xlat
es
mov
lock
add
or
adc
pop
xchg
pop
or
jns
ss
clc
ss
xchg
push
push
insl
loopne
or
addl
xchg
mov
or
je
rclb
out
ja
popf
sbb
ja
add
and
inc
mov
jmp
cmpl
or
fmuls
fiadds
sub
subb
mov
pushf
call
mov
clc
mov
leave
pop
sbb
and
gs
fcoml
inc
pop
and
add
es
fidivrs
jb
bound
dec
inc
arpl
push
data16
out
add
sub
dec
pop
je
hlt
adc
mov
adc
add
add
in
push
add
pop
je
lret
ret
or
popf
or
xor
cmp
pop
cs
push
jne
sbb
mov
or
xchg
or
adc
mov
inc
and
test
push
ds
mov
sahf
mov
jne
xlat
imul
xor
stos
dec
push
mov
int3
shll
mov
mov
push
in
lock
or
push
xchg
es
arpl
clc
test
or
lock
ss
mov
ret
loopne
add
repz
dec
loopne
adc
inc
mov
mov
test
xchg
inc
cmp
repnz
xchg
add
add
rorb
clc
es
inc
stos
adc
lock
shrb
mov
pop
rolb
xchg
adc
xchg
push
adc
push
mov
xchg
ljmp
xchg
sub
mov
push
lcall
vmwrite
sti
pop
fadds
aam
xor
add
les
out
aam
rcll
cld
or
pop
push
mov
mov
jne
or
pop
fildll
mov
scas
test
fmuls
xchg
dec
call
popa
jo
faddl
insb
push
test
clc
cmp
jne
lcall
rolb
enter
hlt
pop
add
sub
push
pop
repnz
test
repz
xchg
out
incb
sar
leave
fldl
or
jbe
test
push
pop
adc
cmp
jmp
sbb
xchg
push
dec
popa
inc
cmp
mov
loopne
clc
jl
xorb
shlb
sbb
rcrb
int
repnz
loopne
dec
rcll
nop
lock
aam
pushf
jl
nop
loopne
inc
dec
fwait
iret
xor
xchg
sbb
add
and
push
les
push
sbb
inc
add
jb
testl
sbbb
or
decl
lcall
jae
call
sarb
outsl
add
aam
or
fsubs
or
jb
inc
xor
mov
data16
pop
push
sbb
in
imul
adc
stos
push
stc
cmc
bound
mov
dec
imul
jmp
sub
push
inc
pop
add
icebp
lret
jo
jne
or
push
cmp
arpl
adc
lahf
jp
lds
and
test
outsl
rolb
add
push
hlt
jge
inc
add
or
add
lock
mov
int
rcrb
push
push
or
jb
mov
or
xor
out
stc
ss
sub
enter
das
fmull
fcompl
inc
sbb
jecxz
sub
mov
pop
inc
or
sarl
ret
dec
loope
xchg
push
pop
nop
and
lods
pop
mov
and
xorb
xor
push
or
ja
mov
and
sub
test
in
in
jmp
je
rcrl
ret
imul
fcmovbe
test
ss
push
into
sub
adc
inc
xchg
cmp
cli
aad
ret
push
adc
inc
and
pop
inc
cmp
sahf
jmp
push
mov
mov
daa
in
jp
imul
cs
dec
inc
push
mov
or
jbe
loopne
dec
je
push
add
inc
sub
aaa
loopne
cmp
add
or
iret
xor
sub
hlt
adc
fcoms
push
and
sub
dec
cli
push
inc
and
cmpl
lcall
sti
push
adc
push
sbb
add
ret
insl
lods
push
jnp
mov
jnp
test
inc
jne
lret
mov
xchg
add
sbb
or
or
mov
jl
add
subb
fcom
sarb
pop
lcall
adc
mov
mov
and
jl
je
dec
adc
cmp
xchg
mov
and
push
mov
xor
pop
dec
sbb
inc
add
sbb
jge
loop
data16
xchg
out
jnp
jmp
lock
and
push
push
dec
insl
std
dec
lea
mov
cmp
add
sti
inc
push
lret
sub
push
xor
add
push
dec
int
xor
mov
mov
jl
push
inc
jmp
dec
push
mov
out
inc
push
or
push
aas
lahf
sarl
mov
xchg
jl
arpl
xchg
sbb
inc
andl
add
cmpsb
filds
mov
xor
pop
add
repnz
pusha
jns
out
xor
sub
push
adc
pop
pop
or
inc
add
add
mov
dec
add
xchg
xorb
sbb
and
add
aas
xorb
pop
insb
into
jmp
push
jb
lock
cmp
scas
xchg
stc
loop
push
sbb
push
push
and
lods
push
push
cmp
push
in
mov
std
sub
movsb
xor
xor
and
cmp
cwtl
sahf
popf
xchg
push
sbb
and
xor
inc
push
jb
or
xchg
add
inc
or
outsb
lds
push
push
inc
sahf
add
dec
loope
in
and
sbb
or
pushf
mov
aam
in
push
jbe
pop
ror
js
mov
in
loop
je
decb
mov
sbb
inc
test
sbb
pop
inc
xor
and
aas
cltd
mov
cltd
repnz
add
clc
dec
dec
xchg
cmp
ja
inc
pop
adc
cmp
dec
sub
and
push
iret
outsl
movsb
das
adc
sbb
les
push
inc
push
insl
push
mov
or
imul
dec
in
mov
mov
cld
or
mov
lods
adc
lods
loop
int3
xchg
jo
adc
or
cmp
jb,pt
dec
add
sbb
rolb
pop
ret
in
gs
jbe
dec
bound
pusha
inc
imul
inc
sub
rcll
nop
orl
or
push
incl
cmp
jl
xor
lret
into
push
push
dec
ficomps
dec
fsubs
cmp
pop
sbb
sti
outsb
subb
dec
push
cmpb
es
sbb
into
jl
shrl
pop
data16
jecxz
inc
enter
and
sub
es
jg,pn
mov
pop
je
push
mov
cmp
mov
movsb
mov
cmp
or
push
xor
push
rorb
and
mov
inc
and
pop
jne
jnp
push
addr16
pop
sbb
mov
push
jmp
push
sbb
out
sbb
jmp
int
xchg
pop
stos
xor
les
push
jne
jl
pusha
inc
mov
dec
push
jge
les
mov
xor
xchg
in
sub
pop
andl
pop
sub
movsl
xchg
sahf
negb
inc
sub
pop
push
xor
mov
ss
push
mov
bound
inc
or
aas
sbb
rcll
sar
pop
pop
push
in
xchg
rorb
sub
nop
xor
insl
sarl
insl
js
add
movb
dec
add
push
add
lahf
test
in
cld
pop
lock
jp
add
lods
mov
mov
or
push
clc
mov
movsl
mov
adc
sub
aaa
push
push
lods
add
mov
dec
add
bound
test
and
push
pop
lea
sub
mov
and
addr16
mov
pop
mov
mov
mov
mov
mov
jle
add
lock
adcb
mov
dec
ss
inc
cmpsb
mov
in
jmp
adc
jmp
mov
mov
outsb
mull
xchg
mov
cmpl
fldl
int
mov
push
std
out
pop
fadd
mov
insl
sbb
pop
arpl
icebp
aam
rorl
push
jecxz
out
cmp
lods
dec
inc
xor
add
sbb
data16
xor
fcmovb
cmpsb
cmpsb
cmpsb
or
inc
xor
push
pop
ret
cmp
sbb
std
push
adc
adc
jne
cmp
sub
mov
jbe
pop
sbb
or
jbe
adc
movsl
cmp
and
sub
call
inc
adc
rolb
xorl
inc
mov
sbb
int
xor
adc
xor
testb
adc
sub
lret
lods
popf
xchg
push
add
sbb
mov
jmp
xchg
fiadds
cmp
jne
push
jmp
cmp
xchg
movsl
es
mov
inc
bound
mov
pop
or
adc
imul
stc
movsl
cmp
sarb
xchg
dec
jle
xor
adc
and
movsb
and
and
mov
or
lods
add
stos
mov
movsb
jl
mov
mov
lods
dec
test
imul
shrb
mov
out
out
mov
sahf
addr16
sbb
add
mov
mov
push
dec
cmp
shlb
fiaddl
mov
mov
and
adc
mov
add
add
das
push
push
shlb
jne
mov
push
dec
inc
leave
dec
orl
testl
inc
adc
jp
scas
inc
test
or
outsb
rcl
inc
int
xor
sub
out
or
dec
push
cltd
rorl
scas
popw
mov
mov
adc
sarb
adc
sahf
test
lds
aad
inc
stos
adc
add
or
add
fisubrl
jge
add
loope
and
jp
add
add
or
inc
movsb
mov
popf
xchg
push
enter
aaa
fidivrl
pushf
or
pop
push
ret
and
fldl
dec
sti
mov
push
inc
and
mov
adc
jo
adc
inc
imul
add
addr16
aam
dec
sarl
xor
add
pop
adc
pop
int
cmp
loopne
test
js
pop
in
adc
dec
and
mov
inc
add
xchg
jo
or
and
xor
insb
mov
xchg
jmp
outsl
mov
cmp
push
ja
dec
pop
das
popf
shll
roll
nop
lods
loope
jns
xlat
or
or
pop
or
mov
ret
or
add
add
sub
sbb
mov
xchg
xchg
call
jmp
dec
pop
dec
inc
cwtl
sbb
cmp
add
push
or
sub
jno
popa
adc
push
mov
add
fbstp
or
sti
fisttps
and
xchg
out
pushf
dec
pop
xor
jmp
bound
dec
or
sbb
fisubs
xor
popf
shrb
adc
add
jno
pop
stos
ja
pop
add
jl
add
ds
negl
and
in
popa
push
es
ret
cmpl
lahf
sub
test
sub
xlat
and
cmp
pop
or
xor
adc
shr
jge
fwait
icebp
jecxz
int
mov
jmp
inc
movsl
push
loop
mov
jno
incl
inc
js
cmp
jl
push
push
push
fcmovnb
push
pusha
out
add
test
std
inc
adc
popa
push
jne
jp
inc
cmp
push
hlt
push
or
imulb
xor
scas
jmp
outsl
add
or
pop
push
sub
in
add
es
jae
mov
add
subl
and
mov
test
shr
push
sub
add
mov
cmp
cwtl
or
jb
stos
call
xchg
aam
call
sub
inc
test
inc
sub
jno
jne
xchg
outsl
test
xor
in
iret
jl
cmp
movsb
xor
inc
dec
push
pop
lea
push
cltd
pop
fs
mov
sbb
popa
adc
mov
push
popa
push
add
dec
sub
cmp
lods
dec
int
xor
cld
cld
push
add
xchg
adc
adc
sar
add
mov
pusha
jp
ret
push
inc
push
inc
and
mov
add
add
add
xlat
pop
lea
jle
das
nop
fdivs
mov
clc
jmp
mov
lock
jno
or
inc
lock
movb
cmp
rcl
mov
lods
mov
lods
in
aas
fs
sbb
sub
add
je
cld
into
push
push
add
push
std
cs
jne
adc
add
xor
cmp
xchg
xchg
push
add
add
mov
cmp
nop
jo
inc
add
add
jb
rolb
mov
push
adc
or
imulb
jo
lcall
sbb
add
lock
nop
inc
and
or
sbbl
cwtl
mov
aaa
icebp
lcall
xchg
mov
xor
pop
add
mov
icebp
adc
xor
decl
mov
push
lret
imul
xor
or
sub
mov
mov
lea
cmp
pushf
add
les
ss
lea
jmp
test
shr
add
mov
jecxz
sbb
and
cmp
xchg
add
or
add
push
push
xchg
dec
jb
push
cwtl
xchg
cmp
ret
pop
dec
push
adc
dec
fsubs
mov
ds
stc
push
jmp
or
dec
pop
sbb
dec
cmpsb
fcoml
add
pop
jo
push
aas
pusha
push
push
in
lret
aam
push
and
jb
addb
adc
test
sbb
jno
adc
or
pop
push
push
enter
and
add
fidivs
les
sub
and
push
dec
push
cli
and
stos
adc
cmp
mov
in
std
enter
daa
in
es
xchg
outsb
push
cmp
addl
mov
test
ret
pop
push
push
pop
inc
leave
push
add
push
mov
dec
std
adc
push
xor
fcom
aad
pushf
out
mov
ds
or
push
dec
rcrb
inc
adc
sub
push
call
inc
push
inc
scas
xchg
adc
fs
rclb
jecxz
in
jmp
push
out
lock
rcr
ja
cmovg
test
add
leave
cmpb
rolb
pop
mov
int3
mov
mov
sbb
adc
push
pop
mov
and
adc
inc
add
xorb
adc
pop
push
ljmp
movsl
mov
add
in
inc
dec
outsl
adc
call
add
or
sub
imul
and
outsb
addb
call
push
imul
cmp
cmp
call
push
sbb
add
push
and
popa
popf
hlt
push
jmp
in
push
lea
outsb
adc
adc
lcall
jno
and
mov
test
pop
je
push
das
push
test
mov
or
jne
adc
mov
cmp
jl
fsubrs
test
mov
loope
xchg
loopne
and
push
loope
jnp
ret
test
adc
adc
inc
fs
sub
mov
fsubrl
int
mov
rcrb
int
data16
pop
mov
loopne
lds
fstpt
ret
rorb
push
out
xchg
out
adc
stos
enter
mov
inc
in
inc
in
inc
loop
add
hlt
push
pop
shll
jbe
fsts
movsb
and
adc
or
sbb
jb
or
or
or
testb
adc
push
icebp
test
or
sbb
and
out
inc
test
sbb
out
add
mov
inc
test
lds
enter
pop
pop
jo
adcb
mov
xchg
mov
sub
ja
or
mov
push
push
xor
or
pushf
mov
mov
pop
push
inc
add
enter
fisubrl
jnp
pop
sbb
mov
stc
lods
lods
pop
mov
pushf
negl
sub
aam
je
dec
adc
adc
je
lea
gs
xchg
lea
sbb
in
xchg
xchg
push
movsl
mov
mov
sbb
stos
add
rolb
mov
push
aad
cmp
movsb
cmp
stos
sub
add
adc
fists
inc
pop
jo
jns
aam
cli
add
cmpsl
stc
fwait
xchg
push
insl
or
lea
call
mov
movsb
adc
mov
in
cli
xchg
mov
stos
mov
rol
cmp
mov
fldt
push
push
mov
push
enter
pop
cmp
out
push
push
and
cmpl
mov
mov
push
adc
imul
inc
add
sub
in
movzwl
mov
cwtl
cmp
rcr
pop
jmp
in
sub
xchg
add
mov
sahf
sbb
jmp
sub
fwait
pusha
pop
mov
sbb
and
fildll
push
or
xchg
jnp
push
cmp
enter
iret
leave
rcpps
iret
mov
jnp
and
sub
cmp
pop
adc
adc
pop
mull
nop
adc
adc
adc
add
mov
xchg
add
sbb
orb
movb
push
popf
hlt
or
ds
push
clc
dec
inc
push
fs
enter
xchg
int3
inc
cmp
adc
mov
xor
bnd
and
add
inc
pop
dec
pop
sbb
pop
test
push
dec
or
sbb
sbb
adc
je
std
or
sar
movsb
test
ljmp
neg
adc
push
mov
loopne
jle
jmp
cmpb
inc
aam
adc
adc
push
cmpb
std
sub
sarb
xor
shlb
dec
movsbl
mov
fstps
and
adc
jbe
push
paddb
jno
dec
xchg
push
mov
mov
and
cmpsl
jmp
lods
push
ret
dec
inc
aas
xchg
rolb
mov
fwait
lahf
push
dec
xchg
push
pop
pop
mov
push
adcl
push
les
sub
adc
adc
loopne
jnp
into
pop
daa
xor
cmp
fimull
jge
fdivrl
or
cmp
mov
or
pop
xorb
sub
xchg
dec
xor
xchg
xor
mov
adc
sbb
enter
jmp
stos
pop
cli
adc
cmp
jbe
sub
add
pop
inc
push
xor
mov
ss
push
xchg
push
fs
ja
ja
cmpb
inc
or
lock
mov
xchg
push
dec
and
add
in
jge
loopne
push
add
add
in
in
push
pop
or
sti
in
or
jnp
or
jbe
jmp
jae
jae
or
por
jmp
jae
jae
adc
pop
adc
push
adc
dec
adc
dec
jae
jae
adc
aas
pop
jmp
sbb
xor
sbb
xor
jmp
sbb
es
and
jae
sbb
pop
pop
jmp
and
or
and
outsb
and
and
cmp
inc
pextrw
jo
rcr
sbb
mov
aam
and
push
jl
jle
mov
push
iret
repz
mov
jecxz
iret
repz
repz
add
push
iret
repz
or
adc
push
and
repz
sub
cmp
repz
inc
dec
push
push
iret
repz
pop
pop
imul
js
fadds
add
in
or
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
rolb
and
aas
push
sub
aam
add
pop
or
mov
jne
adc
sub
test
dec
xor
enter
ds
sub
jge
xlat
sarb
inc
pushf
les
repnz
sub
add
or
out
adc
int
add
push
or
mov
loopne
adc
fwait
xor
fwait
xorb
stos
test
test
dec
jb
inc
lea
outsl
gs
pop
sbb
movsb
sub
inc
xchg
mov
movsl
or
xor
push
xchg
add
add
xchg
js
adc
push
lahf
lods
cmp
xchg
inc
xchg
shll
mov
or
push
mov
push
sub
inc
sbb
lcall
sbb
loope
data16
add
sub
repnz
mov
mov
push
pop
xor
add
sub
shlb
mov
jmp
decl
mov
inc
jge
cmp
lret
or
inc
outsb
add
fidivrl
cmp
push
or
adcb
sub
shrb
call
jnp
mov
andb
mov
sbb
pop
loopne
dec
pop
mov
ret
movl
pop
insb
sub
cmp
jbe
pop
add
add
ja
int
in
out
dec
ret
jge
or
es
addl
xchg
push
lret
inc
or
gs
ja
lea
imul
cmp
ja
sbb
sahf
cmp
stos
jb
inc
pusha
aaa
out
adc
stos
lcall
orb
lock
add
mov
adc
or
pop
xor
and
icebp
mov
int
and
add
mov
xchg
pusha
popf
or
inc
outsl
cltd
pop
add
pop
mov
push
js
pusha
push
and
test
nop
or
push
scas
sbb
mov
xchg
xchg
adc
fs
sbb
stos
xchg
jns
push
orb
dec
pop
push
adc
shlb
arpl
movl
orl
lock
adc
jnp,pn
je
cmp
aad
and
mov
pop
dec
les
push
loopne
sbb
add
sbb
and
out
scas
lret
out
push
push
dec
and
mov
pop
inc
sbb
scas
enter
sbb
ret
subl
in
mov
mov
sbb
dec
xchg
add
cs
inc
xor
movl
pop
bound
push
sub
add
mov
or
inc
nopl
aas
leave
out
jnp
add
adc
ss
daa
push
sbb
adc
push
fildl
jl,pn
adcl
sub
call
mov
cmp
xchg
cmp
cld
jo
cli
es
lea
cmp
insb
fbld
mov
or
jne
or
js
imul
clc
xor
loopne
or
sbb
fdivs
add
mov
inc
mov
or
sbb
dec
cmp
jl
dec
or
fidivl
js
je
jae
ds
imul
and
mov
pushf
cwtl
push
mov
sub
mov
inc
insl
mov
lods
mov
bound
js
or
or
shll
pop
push
inc
cmp
mov
mov
add
inc
mov
pop
inc
and
dec
xchg
cmpsl
add
and
mov
outsl
xor
and
lahf
xchg
fidivl
jmp
mov
cwtl
test
sbb
icebp
xchg
and
cmpsb
mov
cmp
inc
in
xor
dec
mov
rorb
add
jnp
enter
mov
xor
sbb
flds
adc
sub
in
mov
mov
push
push
sbb
pop
push
cld
pop
clc
add
movsl
daa
or
mov
add
testl
push
dec
lods
xchg
test
int3
mov
lea
or
mov
and
add
pusha
mov
xchg
sub
inc
adc
int3
add
add
mov
out
xor
clc
sub
fsts
gs
add
roll
mov
scas
rolb
inc
out
mov
add
icebp
push
add
fistps
or
sbb
rol
adc
cmp
jmp
cmp
popa
cs
cmp
jno
dec
dec
mov
ja
inc
mov
add
xchg
addl
aad
push
ljmp
push
jmp
dec
adc
and
push
or
sbb
jecxz
xor
push
jle
test
and
je
jmp
add
in
and
xor
mov
mov
mov
loope
loop
ret
push
add
add
push
mov
dec
test
inc
enter
out
pop
lods
sbb
dec
fsubrs
adc
inc
push
mov
aad
sbb
sbb
sub
mov
push
add
pop
inc
push
push
into
adc
loopne
fwait
pop
ret
jge
xor
mov
add
daa
cmp
push
lret
ret
cmpsb
inc
loopne
jo
je
ss
sbb
out
scas
sub
mov
mov
and
dec
lcall
sbb
add
adc
adc
nop
mov
addl
out
rorb
rcrl
ficoms
ret
test
rclb
mov
jbe
pop
dec
add
jnp
cmpsb
xchg
test
imul
into
inc
in
pop
dec
push
nop
pop
and
enter
imul
adc
fs
or
punpcklwd
mov
je
or
in
add
add
and
mov
test
inc
adcl
mov
push
cld
daa
test
mov
add
ds
cmpsb
and
cmp
and
lods
mov
and
shll
jge
roll
push
popa
push
add
icebp
mov
xchg
and
or
lea
insl
pop
mov
cmp
dec
imul
inc
pop
inc
inc
je
xchg
push
aad
iret
in
xchg
and
sub
push
or
loopne
adc
lss
scas
insl
pop
popf
rolb
test
jb
cmpsl
jno
adc
ret
adc
ss
sub
fldl
inc
test
shlb
fnstenv
inc
addr16
sti
or
in
imul
cmpl
loopne
xchg
xor
adc
mov
jb
lods
sbb
pusha
add
or
push
out
scas
enter
bound
push
pop
push
imul
or
sbb
cmp
bound
add
pop
in
adc
sbb
mov
xchg
mov
lds
xlat
push
fdivs
inc
push
or
daa
jg
cwtl
push
push
adc
mov
pop
in
mov
in
ljmp
movsl
in
movsb
add
ret
subb
test
adc
xlat
cmp
sbb
pop
ficoml
pop
imul
pop
xor
add
test
inc
enter
push
push
mov
scas
faddl
pop
sahf
pop
sahf
adc
arpl
mov
pop
lcall
lea
adcb
inc
xchg
xchg
mov
ret
lret
dec
inc
jl
and
mov
ds
sub
das
pop
and
jnp
stc
xchg
inc
pusha
les
xchg
xchg
jnp
cmp
ds
imul
mov
xor
popa
lods
and
and
mov
cmp
pop
pop
lret
arpl
ret
enter
xor
rorl
xor
mov
xor
loope
pcmpeqd
sub
in
dec
imul
mov
das
and
push
ss
in
and
mov
xor
add
add
mov
inc
and
and
ss
inc
and
shl
mov
out
push
addb
or
cmp
add
out
sub
sub
and
mov
xor
jg
mov
xor
xchg
sub
and
imul
cmp
push
popa
insb
stos
test
outsl
shlb
jnp
test
repz
lea
nop
mov
lods
nop
hlt
daa
add
les
and
or
rorb
test
and
in
push
dec
sbb
je
mov
loopne
and
and
andl
cmp
sbb
jns
xor
adc
cmp
rcrl
cmpsb
fistpl
cmp
leave
sbb
add
fstps
cltd
gs
rclb
loopne
adc
jne
push
push
test
mov
ds
dec
mov
mov
dec
fs
insb
xchg
adc
imul
lea
movsb
jnp
aas
adc
fisttps
mov
and
pop
mov
push
arpl
inc
loope
add
xor
repnz
cld
cmpl
jne
popa
adc
mov
aas
outsb
cld
mov
add
std
std
mov
cmp
jne
and
xor
jmp
pop
adc
hlt
dec
dec
cmp
cwtl
or
je
cmp
or
push
push
in
loopne
aaa
inc
mov
fsubl
xchg
imul
cmp
inc
sub
sub
mov
and
notl
add
dec
int3
orl
adc
popa
sub
or
div
jmp
fstpl
push
arpl
push
lahf
and
inc
mov
cltd
ljmp
and
dec
fisubs
mov
xchg
or
fildll
xchg
dec
cmp
lods
pop
inc
mov
mov
andl
pop
xchg
test
push
in
repnz
xchg
add
ret
pushf
add
ret
aaa
and
mov
dec
popa
mov
mov
je
or
and
mov
test
ds
pusha
cmp
andb
mov
js
mov
ds
inc
mov
sti
mov
sub
mov
lea
daa
sar
push
cli
je
cmp
mov
icebp
push
cmp
jge
mov
or
inc
push
adc
stos
ja
pop
lea
xor
and
cmpsl
cmp
test
mov
xor
jns
lock
clc
clc
cld
jne
fwait
mov
or
add
cs
cmpsl
xor
push
add
xchg
xchg
add
and
mov
pop
mov
je
add
adc
cmp
fiaddl
lret
orb
mov
mov
or
mov
lock
ljmp
xor
addl
adc
lds
or
lock
cli
mov
sub
mov
adc
je
dec
je
sub
add
xchg
test
mov
lret
add
jmp
sub
icebp
ljmp
xchg
movsb
add
push
add
jne
push
rcrl
sbb
adc
mov
push
push
or
test
inc
inc
mov
xor
inc
cmpb
test
pushf
sbb
or
gs
cltd
idiv
inc
inc
imul
imul
in
clc
jb
lock
mov
loop
pop
or
int
loopne
loopne
popa
mov
add
or
cmp
outsl
push
rcll
mov
cmp
or
loopne
xor
push
push
lock
jge
cmp
je
dec
jle
jbe
mov
mov
jmp
daa
pop
bound
dec
ret
aaa
push
cmp
jle
aad
xor
repnz
cld
insl
addr16
jae
fisubl
ficompl
xor
add
pop
repnz
mov
dec
decb
xor
mov
cmp
je
cmp
pop
cmp
je
cmp
call
add
into
mov
sub
or
mov
push
lods
xlat
fcoml
iret
test
pusha
xor
cmp
dec
loopne
insb
fnstcw
jne
inc
dec
add
sub
lods
and
pop
or
mov
cmp
lret
cli
mov
push
push
fmuls
add
scas
xor
mov
push
jl
or
jg
mov
jmp
and
pop
outsb
outsb
ds
jmp
inc
jl
inc
jg
aaa
mov
std
push
push
add
shl
dec
mov
sub
mov
call
mov
fscale
push
nop
es
jg
xchg
jg
imul
and
pop
inc
sbb
test
gs
or
lea
aad
mov
sbb
adc
xor
xchg
cmpsb
lret
aaa
cmp
out
jnp
cmp
pusha
mov
jg
sub
out
imul
mov
mov
inc
cmc
add
roll
in
les
orb
sbbb
loope
sub
sbb
cmp
inc
and
cmp
push
xchg
rcrb
push
xor
fsubs
inc
hlt
and
loopne
cmp
or
mov
sub
jo
ljmp
loop
loopne
fsubr
inc
inc
inc
out
jmp
xor
mov
jnp
and
adc
adc
or
rolb
dec
push
outsl
fdivs
pop
ret
cmp
cmp
dec
addb
dec
add
std
call
xchg
subl
pop
add
fsubs
popa
movb
mov
mov
push
clc
ljmp
mov
fs
jne
mov
mov
ds
cld
cmp
jmp
mov
mov
fnclex
dec
sub
jmp
adc
cmpsl
addb
es
or
cs
or
pop
mov
adc
lods
jp
ret
js
push
xor
cwtl
loope
jg
sbb
pop
inc
pop
out
rorl
cmp
push
lcall
clc
andl
mov
mov
or
test
int3
xchg
mov
popa
fcoms
fstpt
xchg
push
lock
sub
jge
jne
aad
push
mov
push
repnz
cmpsl
cmpsb
jbe
sbb
pop
push
add
jp
repz
sbb
js
insb
mov
xchg
loope
xor
add
jmp
xchg
push
mov
cmp
add
sub
or
or
jp
push
ljmp
mov
cmpb
icebp
jmp
inc
rolb
mov
push
inc
xlat
lods
add
andb
shlb
inc
adc
fsubs
inc
inc
or
mov
jle
jecxz
in
std
sar
je
sbb
add
or
adc
inc
cmp
or
dec
mov
sub
aas
mov
movb
pop
mov
mov
xor
orl
fiaddl
push
cmp
mov
jno
lods
adc
mov
cmp
subb
or
sbb
test
sbb
pop
xchg
pop
mov
cmp
inc
xchg
leave
js
xor
sbb
mov
add
js
push
addr16
or
pop
xor
jo
das
sub
lods
call
je
xchg
push
push
sub
repnz
ss
and
movsb
sub
js
cli
movb
jbe
or
jbe
loope
add
jmp
jb
cmc
movups
cmpb
jne
popa
mov
adc
or
negl
adc
mull
xchg
add
sbb
sbb
fldenv
subb
mov
push
cmpb
mov
inc
popf
idivb
aas
add
lods
lret
inc
pop
mov
mov
lcall
mov
sbb
test
imulb
add
sub
cltd
clts
sti
sub
fmul
inc
add
adc
and
sahf
and
js
ret
mov
add
cmp
or
arpl
jp
mov
xchg
push
addb
shrl
or
or
push
in
stos
mov
mov
mov
xchg
and
orl
inc
ret
mov
jne
scas
cmpsb
push
sbb
push
inc
inc
push
and
ss
adc
adc
pop
js
cwtl
add
adc
or
add
pop
pusha
clc
insb
je,pt
inc
add
mov
pop
xchg
lea
mov
data16
pop
pop
out
pop
inc
les
mov
addl
xor
call
push
hlt
mov
fildll
add
cwtl
in
imul
xlat
push
mov
arpl
inc
stos
push
sbb
adc
sbbb
sbb
inc
outsl
cmp
roll
jl
or
ffreep
pop
pop
jno
fistpll
shl
jmp
xchg
pop
mov
push
push
mov
and
sbb
notl
call
inc
fsts
movsl
test
sub
push
out
repnz
fiaddl
and
xor
or
adc
add
je
fwait
pop
das
imull
pop
xor
and
cltd
push
push
push
adc
insl
test
leave
push
lods
addb
sub
push
xor
bound
cli
jae
out
and
sbb
loope
sbb
pop
decl
cmp
jb
lret
lcall
dec
pushl
dec
fcoms
je
ret
mov
sbb
test
shl
imul
or
add
daa
mov
and
add
mov
lods
sub
mov
ljmp
mov
mov
cmpsb
and
sbb
pop
dec
jne
shll
ret
and
inc
je
cmp
lods
mov
push
push
cmp
pcmpeqw
or
cmp
mov
inc
push
xor
jle
push
inc
pop
push
xchg
test
jge
mov
or
adc
les
cmpl
and
mov
add
mov
add
dec
and
and
inc
rcrb
ret
add
fnstenv
push
add
xchg
add
add
cmp
mov
and
mov
pop
add
loope
adc
xor
insl
xlat
add
cmp
cmp
sti
mov
cmpsb
inc
cmpsl
arpl
mov
cmp
mov
jo
inc
adc
daa
jne
xor
jmp
cmp
jne
sbb
mov
lea
iret
scas
sub
loope
add
jmp
xor
aaa
hlt
in
adc
adc
push
aam
arpl
ds
mov
pop
mov
push
sub
inc
jne
enter
movsl
cli
into
sub
sbb
push
jmp
sbb
jne
push
xchg
cmp
pop
dec
aaa
pop
or
or
ret
mov
sbb
es
stos
push
dec
or
and
cli
jne
adc
mov
jmp
mov
mov
dec
mov
cs
mov
mov
mov
nop
or
sub
mov
test
or
into
jae
outsb
mov
push
shlb
mov
lods
and
loop
mov
je
xchg
push
mov
push
inc
sbb
lahf
add
sub
xchg
inc
inc
dec
loopne
xor
pop
loop
rcll
pop
push
sub
sahf
je
and
gs
lock
pop
in
movl
add
cs
lods
push
cmc
or
xor
pusha
imul
out
mov
add
xor
loope
or
dec
enter
add
pop
fucomip
loopne
arpl
or
mov
mov
add
andl
mov
cmpb
adcb
dec
inc
inc
mov
cwtl
or
push
add
shr
sbb
jl
sahf
xchg
xor
popf
add
out
les
pop
test
fsubr
xchg
out
or
or
pop
pop
adc
movl
add
or
xor
fsubs
or
pop
insl
dec
sub
add
sub
add
je
add
imul
adc
leave
adc
push
rorb
popl
shrl
mov
push
or
rcl
loopne
in
inc
xorb
ss
add
add
rol
add
btsl
jmp
inc
mov
dec
testb
mov
cli
adc
adc
jp
cltd
inc
mov
addr16
mov
xchg
adc
push
inc
ret
lcall
inc
les
imul
dec
jge
pop
arpl
sub
push
xor
add
dec
inc
fsubs
push
push
cmp
es
dec
add
lea
dec
inc
jl
icebp
dec
xor
sarl
adc
js
mov
nop
mov
mov
inc
and
cmp
xor
jmp
mov
dec
xlat
mov
call
inc
call
adc
cmp
push
fdivrs
push
cmp
outsl
addr16
sbb
adc
inc
or
pop
imul
pusha
loopne
pop
inc
sbb
push
ret
fs
insl
loope
sbb
out
inc
enter
in
add
xchg
sarl
test
dec
cmp
cli
mov
jb
add
mov
sbb
fildl
imul
mov
jl
loope
push
rol
xor
xchg
dec
add
clc
cltd
es
pop
jmp
rorb
movsb
mov
adc
or
add
dec
aad
fs
inc
pusha
mov
or
pop
mov
clc
cwtl
push
arpl
mov
ss
mov
adc
inc
fsubr
adc
nop
rorb
mov
movl
popa
jo
push
sti
pop
push
jns
or
or
jbe
cmp
negb
sbb
int
jecxz
nop
and
mov
ja
jecxz
pop
rcrl
adc
int
mov
or
adc
out
push
inc
or
js
or
mov
push
nop
into
ds
cli
add
fnsave
mov
push
push
and
adc
lret
hlt
xchg
xchg
lock
out
jecxz
inc
mov
sbb
push
out
jle
mov
sbb
push
out
cld
add
push
je
xchg
dec
ror
mov
je
fdivrl
test
jl
inc
and
dec
or
jne
outsb
mov
cmpl
je
sub
mov
sbb
push
jae
cmp
jmp
xchg
je
pop
pop
aam
lcall
pushf
mov
call
adc
xchg
or
mov
dec
in
jmp
lea
dec
daa
xor
or
dec
arpl
xchg
or
adc
sbb
mov
adc
sbb
imul
push
sub
xchg
cmpsb
out
dec
les
mov
cmp
adc
jo
mov
js
loope
add
test
inc
sub
mov
xor
or
pusha
inc
cmp
mov
movsl
adc
push
dec
sub
repnz
adc
or
pop
lock
pop
jmp
leave
push
pop
jne,pt
repz
adc
sti
cmpsb
in
test
lea
std
cmp
push
pop
daa
push
mov
mov
je
scas
jae
cmp
scas
add
jmp
aaa
or
cmp
sti
adc
in
into
rclb
adc
add
sbb
outsl
or
jg
add
pop
mov
cwtl
xchg
or
mov
pop
inc
dec
je
jp
inc
js
add
mov
sub
push
adc
ss
xlat
andb
daa
or
ja
rorb
orl
or
add
leave
data16
jno
dec
ljmp
or
cmc
dec
sbb
in
mov
add
fisttps
les
adc
pop
mov
push
scas
stos
pop
aaa
rcrl
mov
lods
movsl
adc
push
sbb
rol
mov
addb
into
fs
dec
inc
cmp
ja
scas
shlb
aas
add
push
or
push
xor
add
in
pop
and
roll
xchg
es
pop
cmp
fldenv
test
mov
jmp
pop
cmpb
add
sub
mov
fwait
lods
jb
add
mov
or
push
int
int3
dec
sub
mov
push
daa
xchg
push
sahf
adc
in
pop
or
push
data16
dec
js
add
cmpl
xchg
lcall
add
fstp
ret
jg
push
dec
jl
and
insl
adc
shlb
in
xor
scas
mov
fisttpl
and
or
je
push
fsubrs
mov
ficoms
loope
cmp
mov
jne
xor
shll
pop
cmp
pop
lahf
push
ret
sbb
mov
or
cmp
rcrb
dec
out
lcall
or
xchg
and
daa
jmp
aas
xor
sbb
push
icebp
insb
ret
xor
sub
sbb
in
or
cmp
add
cmp
mov
call
mov
pop
cmp
test
in
mov
cmpsb
sub
mov
adc
push
push
ja
inc
jmp
dec
js
rcl
out
jle
push
les
dec
add
inc
or
pop
shlb
mov
clc
imull
and
pop
mov
add
cmp
jb
mov
xor
jo
movsb
rcll
add
fadds
xchg
sub
push
rcr
aaa
fadds
jne
push
add
xchg
test
or
or
and
add
mov
out
adc
nop
xchg
inc
adc
test
jle
je
sar
xor
icebp
sahf
mov
stc
mov
sbb
ret
pop
js
push
mov
loopne
sub
jecxz
push
insl
push
push
jg
or
cltd
sbb
add
stos
push
mov
cmpb
mov
lahf
outsb
lock
sarb
xor
imul
dec
pop
and
lds
push
jl
pop
dec
push
adc
rclb
es
loopne
enter
mov
sub
mov
fmulp
daa
or
cli
jle
dec
push
jmp
add
push
add
push
stos
add
inc
je
cmp
jbe
push
addr16
or
or
jmp
pop
dec
mov
das
cwtl
lret
xor
andb
pop
xchg
inc
dec
sbb
and
scas
rolb
inc
or
mov
inc
imul
xorb
aam
xchg
push
js
loope
xchg
icebp
cmp
aaa
movsb
fsubl
add
dec
cli
dec
insb
pop
or
ss
dec
sbb
cmp
or
pop
clc
insb
dec
jo
jp
js
rclb
mov
cmp
sbb
sub
inc
jo
test
sub
enter
movb
sbb
lods
add
sub
add
adc
inc
inc
aas
push
xchg
sbb
mov
adc
cmp
aad
and
cmp
or
shlb
xchg
pop
inc
pop
or
inc
pusha
rcrl
dec
shll
add
and
in
xchg
aas
stos
push
mov
xor
addps
mov
outsb
mov
push
sub
addr16
fiadds
jmp
sub
xchg
pusha
in
loopne
rcrb
icebp
push
add
pushf
or
sbb
cmp
or
jne
sbb
or
add
lods
push
dec
test
je
pop
inc
dec
push
adc
add
mov
out
or
icebp
inc
add
pusha
jle
in
xchg
cmc
push
or
xchg
xchg
pop
cmp
sbb
push
andl
and
jecxz
cmp
xchg
dec
add
or
sahf
add
or
or
sub
imul
adc
inc
or
std
push
or
ret
jo
fwait
scas
sbb
movntps
sub
jne
sub
mov
and
push
rorl
cmpsl
lret
fiaddl
data16
mov
inc
popl
ljmp
sbb
cmp
jnp
push
sub
add
pop
push
adc
cmpl
pop
and
add
cmpb
and
cmp
fnstcw
cmpsb
add
sti
mov
jae
loopne
clc
jg
fs
test
pusha
jmp
movq
ficomps
movapd
push
clc
jae
xor
repz
or
xor
cli
rcl
lret
dec
inc
das
cld
je
orb
jge
mov
mov
xor
jg
dec
mov
xchg
ret
mov
cs
jnp
mov
push
and
cmpsb
jnp
mov
add
adc
push
insb
adc
outsb
sarl
add
jbe
repnz
roll
jbe
and
dec
xorl
enter
sarb
ret
adc
dec
sbb
test
stos
cmpb
jmp
mov
rorb
clc
ja
xor
cwtl
aad
es
or
xor
out
mov
out
xor
scas
js
xchg
pop
xor
xor
add
xchg
test
xor
enter
sahf
mov
adc
pop
loopne
ficoml
insl
and
push
push
sbb
xor
adc
mov
pop
sbb
push
jne
inc
adc
dec
or
cmp
sbb
movb
dec
js
sbb
pushf
pop
addr16
sbb
sbb
sbb
xor
mov
idivb
shll
xlat
enter
inc
sub
mov
and
test
dec
push
cmp
adcb
inc
js
dec
test
sti
sub
adcb
aad
sub
out
testb
or
jnp
sub
or
fisubs
pop
in
test
push
jmp
fs
lock
scas
hlt
push
add
add
or
xor
cmpsb
adc
push
xor
add
xchg
push
push
jo
dec
arpl
add
push
cmp
int3
call
sbb
pop
fists
push
loope
je
dec
lods
rolb
mov
fiadds
fbld
cmp
inc
jb
or
jb
dec
inc
rorl
mov
xor
push
jmp
fimull
call
inc
data16
data16
fsts
add
xor
xor
test
lock
pop
sarb
addr16
ret
add
je
jae
cmp
add
xor
pop
mov
pop
cmp
jns
adc
xlat
pop
sarl
loopne
add
arpl
sub
mov
push
rcl
in
cmp
mov
das
mov
adc
and
cwtl
sbb
xor
hlt
sahf
lock
cvtps2pi
pop
stos
jl
mov
xchg
cmpsb
cmp
add
jg
es
fiaddl
push
jnp
into
add
push
add
mov
jb
sub
or
out
sbb
fcoms
pop
add
push
js
cmp
mov
pop
insb
lcall
cmp
jne
inc
cmpb
out
xorb
les
dec
adc
add
fcmovb
and
into
or
or
mov
add
daa
push
ljmp
sbbl
pop
adc
flds
inc
inc
or
nop
pop
ret
xor
push
mov
test
or
mov
jo
hlt
out
and
mov
jne
in
jmp
test
add
xor
adc
rorl
leave
es
loope
or
cmp
or
lret
pop
ja
cltd
and
push
lret
jne
inc
aaa
push
lds
push
dec
in
adc
mov
xchg
sbb
and
adc
inc
scas
out
stos
push
inc
lret
push
sbb
mov
sub
rclb
sbb
out
imul
inc
add
add
imul
mov
or
pop
or
test
call
adc
fidivs
sub
push
add
push
adc
rcll
orb
or
sub
sbb
sbb
int3
iret
sub
iret
add
inc
adc
adc
jp
fdivrl
add
arpl
sub
imul
or
inc
adc
cmp
xor
add
add
pop
loopne
and
pop
jne
rol
enter
imul
or
adc
nop
add
shlb
ds
xchg
xchg
cwtl
mov
cmp
push
lea
inc
outsb
sbb
jb
and
pop
dec
in
mov
inc
sub
push
jmp
cs
pop
stos
int3
ss
cs
loop
mov
xchg
fildl
lods
xor
dec
push
jbe
sub
jle
sub
adc
outsb
es
add
lea
cmp
and
jmp
negb
ret
cmp
jne
push
adc
in
fnstsw
or
add
mov
sub
add
sbb
cltd
sub
pop
je
jne
add
ds
or
or
pop
push
cmpsb
int3
xchg
sbb
lret
pop
xor
daa
add
jg
loope
add
outsb
ljmp
and
push
mov
fwait
mov
lds
pop
ljmp
jle
popf
sbb
cmpl
jb
mov
adc
gs
stc
mov
sti
and
adc
orl
outsl
sbb
push
enter
aas
shrl
shlb
repnz
mov
lods
repnz
popa
add
loope
pop
pop
pop
or
fildl
testb
scas
dec
sbb
xor
push
xchg
cmpsb
pop
ret
mov
push
pop
jle
stos
jmp
ss
enter
ds
push
add
xor
xchg
add
pop
push
pop
cmp
pop
xchg
mov
xchg
mov
mov
in
sahf
xchg
jo
jb
mov
cmpsb
xlat
inc
rol
mov
mov
aam
or
arpl
cld
or
jl
and
xlat
mov
xchg
adc
aaa
push
ljmp
in
mov
adc
push
push
sub
rorb
xor
iret
xorl
outsl
js
or
pop
pop
sub
mov
insb
mov
jnp
loopne
cs
xor
push
cld
shl
fcomps
add
add
adc
dec
jbe
push
leave
fldt
mov
or
sbb
movsb
xchg
mov
xor
xor
inc
add
leave
push
sbb
or
push
jmp
and
and
push
out
ljmp
add
orb
jmp
sub
addb
xchg
inc
adc
jmp
push
add
sbb
add
xorl
mov
jbe
divb
pop
fbstp
and
andl
je
fwait
lret
imul
xor
pop
icebp
fistpl
adc
sub
loop
pusha
add
or
or
adc
rclb
sbb
cld
jae
adc
sub
test
push
jmp
push
add
out
push
push
addb
sbb
insl
adc
add
inc
sub
roll
inc
push
inc
or
sbb
push
sbb
or
repz
rolb
push
test
rol
xor
loopne
ret
test
or
sbb
lods
cmp
cld
push
jne
pop
pop
mov
cmpsl
push
or
out
jno
out
movsl
es
ds
adc
push
mov
rclb
push
test
inc
add
mov
rclb
aam
ret
imul
inc
cld
shld
daa
dec
jne
jmp
xchg
pop
pop
adcl
loopne
js
mov
dec
jne
mov
inc
xor
xorl
sahf
xchg
push
push
cmpb
dec
dec
pop
xor
jno
push
sbb
sub
daa
mov
jns
pop
xchg
iret
icebp
pusha
mov
insb
xor
push
shl
jo
inc
lea
outsb
into
js
mov
adc
cmp
push
cld
jne
mov
push
cmp
jne
jns
fwait
cmpsl
es
jne
call
jl
or
and
xor
push
inc
incl
dec
or
push
pushf
out
adc
jmp
std
push
xor
in
out
cld
cld
jmp
fldt
sar
aas
nop
adc
adc
inc
inc
inc
adc
mov
push
or
sub
mov
xorl
test
into
sub
xor
xchg
test
in
rclb
pop
add
repz
mov
test
sub
mov
mov
or
add
adc
add
adc
add
shrl
add
pop
std
xor
xchg
and
dec
push
inc
or
add
xchg
sub
pop
pop
scas
shlb
cmp
dec
test
push
shll
rolb
sub
in
mov
cmc
mov
scas
jg
movsb
fwait
ret
popf
lcall
inc
cltd
add
rclb
jge,pt
stc
movb
jmp
xchg
push
mov
sub
iret
je
mov
or
ja
mov
add
and
ret
test
mov
mov
add
sbb
jo
sbb
mov
jo
in
ja
jae
out
sbbb
leave
xor
es
or
add
lea
push
inc
sbb
cltd
jbe
nop
outsb
and
mov
push
loopne
add
daa
flds
mov
lods
clc
pop
push
push
or
pop
es
mov
sub
cmp
jb
shlb
test
mov
xor
jnp
pop
dec
dec
xor
xchg
push
dec
test
add
xor
ret
mov
pop
mov
mov
test
lds
hlt
mov
test
addr16
pop
inc
mov
push
add
push
sbb
add
pop
mov
mov
push
ljmp
int3
or
push
adc
fdivs
fcomip
mov
fmuls
lock
and
push
add
ret
or
or
and
xchg
rcrb
shl
popl
mov
pop
lcall
sub
mov
xor
ret
jne
push
mov
push
lcall
xchg
jmp
inc
sar
stc
and
mov
js
icebp
testb
mov
movsb
neg
mov
clc
neg
xchg
sbb
or
add
jmp
or
mov
inc
inc
sarl
xor
loope
sbb
scas
mov
pop
add
mov
inc
popa
cld
pop
inc
cmp
jb
adc
add
cld
xor
sub
pop
lock
movsb
and
scas
rorl
subb
sub
in
mov
test
add
ret
test
inc
iret
bound
jne
or
shl
push
adc
jle
dec
jl
pop
divl
lret
add
push
push
and
xor
xor
xor
jo
and
or
fstpl
out
dec
js
out
jne
lock
jle
jle
cld
movsb
jmp
and
enter
je
test
je
iret
repz
loop
adc
mov
pop
addr16
outsb
or
xor
inc
lret
sbb
mov
loopne
add
add
loop
add
mov
bound
lock
iret
dec
lea
sub
add
mov
push
sarb
sub
loopne
out
pop
add
inc
sub
stos
lods
out
into
add
inc
notl
xor
inc
jno
pop
inc
jmp
fistpl
movl
jne
sub
adc
mov
inc
adc
cmp
and
rclb
repnz
push
mov
cmp
je
cmp
and
sub
push
clc
adc
pop
rol
sbb
repz
add
mov
jo
sbb
mov
xor
inc
cli
sbb
or
mov
and
je
or
dec
hlt
mov
dec
sahf
dec
ljmp
mov
or
or
movb
and
stos
and
add
and
mov
and
mov
sub
adc
rorl
push
push
lods
jecxz
xchg
adc
sub
test
imulb
inc
xor
jno
sbb
cmp
daa
cmp
dec
mov
add
outsb
movsb
or
aaa
stos
push
sub
adc
or
les
jle
xor
jne
mov
dec
jg
push
lock
mov
inc
mov
dec
jne
adc
push
loope,pn
add
popf
in
add
cmpsl
sbb
fs
js
adcb
and
xlat
fwait
shlb
xchg
lds
push
xor
add
sub
addl
rcrl
mov
cmp
dec
or
scas
sbb
cli
shr
xor
mov
insb
sbb
and
fs
jne
dec
or
or
xor
add
hlt
mov
sbb
addb
stos
test
adc
imul
adc
or
jg
push
fcoms
mov
push
pop
cmp
xchg
or
sub
call
mov
es
inc
and
pop
jmp
mov
lock
adc
jne
or
or
out
out
rcrl
subb
sbb
fldt
ss
dec
andl
call
or
cmp
pop
in
mov
in
xchg
stos
push
repnz
add
clc
or
call
shlb
pop
jg
cmp
push
sbb
mov
pop
scas
mov
add
lock
sub
mov
rol
lods
or
loope
push
mov
jp
mov
int3
clc
pop
nop
lahf
or
hlt
sub
inc
jecxz
inc
imul
fs
add
mov
ret
mull
add
sub
mov
mov
inc
sar
rclb
and
push
or
adc
shlb
add
pop
push
ja
loope
or
sti
pop
frstor
pop
sbb
sbb
rcll
ds
lock
sub
push
push
into
and
jmp
xor
mov
push
test
dec
lcall
loopne
pop
sbb
jne
ja
testb
mov
inc
cmp
lods
pop
subb
clc
inc
dec
mov
cld
icebp
adcb
dec
outsb
outsl
inc
popa
dec
rorb
cvtpi2ps
inc
pop
lea
cmpps
in
cltd
test
mov
sbb
insb
push
cmpsw
lahf
sub
cmpsb
cmp
pop
addl
decl
sub
out
xor
js
pcmpeqd
scas
cltd
pop
idiv
xchg
sbb
decl
mov
test
scas
sbb
jl
add
pop
les
popa
cmpsb
push
cmc
stos
push
mov
pusha
adc
jmp
xchg
xor
push
cmpsb
add
mov
or
push
and
loopne
dec
sub
pop
sub
pop
push
cmp
push
dec
pop
icebp
inc
out
sbb
mov
mov
dec
fdivrl
mov
add
push
pop
push
in
sbb
inc
adc
idivb
jnp
push
repnz
add
out
leave
es
adc
clc
pop
push
idivb
push
and
xchg
loopne
mov
xchg
push
xchg
add
les
inc
movsl
and
sbb
sahf
rcr
push
push
mov
sub
in
mov
sub
push
jbe
and
lods
add
addl
scas
movsl
add
out
mov
mov
in
adc
push
inc
adc
jecxz
outsb
add
mov
bound
cmp
inc
jp
clc
add
das
adcb
clc
fs
add
adc
test
push
sub
rorl
ficompl
popa
push
call
test
jbe
push
fwait
testb
or
pop
inc
jl
bound
outsb
sbb
push
clc
repnz
inc
add
sub
push
push
xchg
data16
fistpll
or
push
push
test
jg
test
jo
lea
test
ficoml
inc
or
fsts
add
pop
pop
loopne
roll
push
shrb
lock
jne
mov
add
add
pop
add
dec
and
pop
inc
hlt
xchg
inc
jne
inc
test
stc
inc
test
int
clc
shlb
jbe
and
cmp
divb
cmovp
mov
jns
pushf
push
mov
push
mov
shr
mov
sbbl
insl
stc
push
iret
or
imul
jbe
leave
add
pop
lods
pop
jns
add
jmp
rorb
add
dec
inc
ret
inc
sti
xchg
mov
dec
push
jmp
sub
dec
mov
jnp
dec
pop
lods
inc
sbb
and
test
call
mov
and
rolb
xlat
or
mov
mov
jmp
cmp
jae
out
push
sbb
mov
push
mov
or
add
add
call
test
cs
loop
pop
lea
add
sub
insb
push
ss
push
sbb
cmpsb
call
push
adc
lcall
dec
fst
dec
gs
adc
out
das
sbb
sbb
dec
and
or
aas
shl
or
mov
pop
jle
sarb
push
pusha
ss
ja
jb
cli
or
lea
xchg
xchg
and
dec
inc
arpl
jo
cmpsb
xchg
addr16
mov
and
push
decl
ds
cmpsb
jne
outsb
pushl
xorb
push
add
xchg
cmp
jle
dec
jmp
sar
fldcw
pop
sub
sbb
push
cmp
mov
xchg
lods
push
pop
sti
add
mov
imul
movl
out
add
scas
push
push
add
sbb
push
adc
xchg
imul
imul
lcall
mov
xlat
es
nop
loopne
adc
jl
inc
inc
cmovbe
xchg
loope
data16
jge
sub
cmp
inc
imul
clc
push
xchg
mov
mov
mov
fs
cmc
mov
fs
dec
push
mov
lods
jmp
loopne
inc
dec
mov
pop
adc
push
mov
jle
dec
or
je
ret
xorb
add
cmp
xchg
mov
pop
js
out
add
and
testb
pop
inc
mov
or
and
sbb
rcr
add
clc
sbb
shrb
sbb
push
add
adc
push
xor
pop
sets
xchg
mov
int
sbb
mov
push
mov
jg
ds
enter
add
aam
cltd
cmp
jno
mov
inc
fdivrs
mov
leave
cmpsb
mov
ja
jo
add
lret
shrb
jl
test
shl
sbb
mov
das
mov
push
arpl
jl
xor
lea
push
pop
loop
aaa
jb
push
cs
xchg
add
adc
cwtl
cmp
sbb
push
popa
je
pusha
adc
pop
dec
cmp
cltd
mov
fs
mov
and
mov
mov
pop
add
jl
jge
cli
mov
ljmp
pop
movsb
adc
aam
pop
lret
movsb
sbb
stos
xor
cmpb
insl
popa
fmul
movsl
shlb
add
xor
and
hlt
aam
inc
sub
push
cmp
in
call
adc
and
dec
rorb
test
xchg
test
imulb
mov
xchg
xchg
cltd
or
push
lcall
pop
imul
add
add
test
fisttpl
jmp
adcb
adc
cmp
push
and
adc
push
in
push
fisubrl
or
dec
mov
cmp
sub
pusha
ja
or
mov
cmpb
jmp
sub
dec
call
imul
mov
push
aas
xor
jmp
pop
mov
dec
inc
jne
xchg
stos
adc
or
arpl
mov
cmp
xlat
repnz
jle
cs
sbb
pop
lock
fsubrl
clc
sar
addb
sub
cltd
push
adc
jbe
loopne
rcll
pop
or
adc
je
insl
out
add
pop
jne
mov
inc
popa
pushf
imul
popa
jp
inc
and
das
dec
hlt
add
or
imul
jns
dec
xchg
dec
or
jmp
es
xchg
dec
lret
mov
xor
ds
xlat
cmpsl
add
push
aad
mov
dec
and
push
push
inc
push
and
add
dec
push
pop
jb
pop
push
std
push
ret
pop
push
mov
cmp
jb
sbb
mov
enter
pop
rcl
in
lcall
add
pop
pop
jne
out
pop
test
jge
rcrl
sub
movsl
add
std
jmp
mov
adc
enter
outsb
test
push
adc
clc
mov
push
hlt
and
scas
pop
dec
push
cli
pop
jbe
inc
add
add
mov
mov
mov
rclb
add
cmpsb
xor
fldenv
nop
inc
xor
xchg
out
mov
or
push
pop
push
push
aas
iret
repz
inc
cmp
mov
sahf
out
in
inc
in
call
sahf
out
lock
hlt
clc
and
cld
repnz
call
jp
sbb
jns
cmp
cwtl
push
movsb
mov
test
nop
inc
pop
pusha
sbb
and
loop
mov
sbb
lea
jl
cld
jl
daa
mov
cld
out
sbb
push
sub
lods
neg
fimuls
mov
and
pop
nop
xor
ror
jnp
push
push
jl
add
movsb
mov
mov
add
popa
inc
push
out
push
add
nop
dec
dec
addr16
cmp
out
mov
cmp
pusha
bound
loopne
pop
jl
repz
add
pop
aaa
sbb
sahf
out
sbb
sbb
out
sahf
out
adc
or
jns
or
inc
movsb
loop
fisubrs
xor
inc
pop
pop
aaa
lds
push
push
add
pop
mov
adc
ja
in
inc
xlat
cmp
lock
mov
into
mov
inc
shlb
inc
iret
and
add
sti
idivl
push
sbbl
and
je
mov
ret
or
hlt
std
outsl
shl
inc
or
jne
pop
out
ja
push
mov
sar
mov
lods
add
add
pusha
mov
add
inc
and
jne
enter
push
sbb
sar
int3
pusha
lcall
xorb
in
inc
and
cmp
xor
xor
out
outsb
or
loopne
dec
adc
pop
pop
sub
pop
nop
mov
push
or
adc
or
push
xchg
ret
jl
mov
adc
fnstcw
jmp
negb
movsl
rolb
or
or
adcb
adc
sbb
or
pop
cmp
inc
or
add
dec
mov
ret
add
out
xchg
cmpsb
fs
adc
or
inc
add
jns
icebp
lods
cmpb
pushf
push
xchg
pop
sar
push
push
aam
push
shll
fsubrs
and
lods
mov
loopne
add
adc
adc
and
call
inc
sub
mov
mov
push
pop
sbb
jbe
jge
cmp
ret
daa
adcl
fstps
sarl
scas
pop
or
jmp
ret
pop
and
jbe
jp
pop
sbb
pop
jmp
test
leave
xchg
std
add
mov
lret
inc
fwait
or
sub
mov
stos
test
mov
cld
mov
pushaw
jmp
or
dec
stc
testb
inc
sub
js
inc
popa
adc
adc
test
and
pop
push
jb
imul
jl
add
mov
inc
js
xchg
cmp
cmc
or
sarb
pushf
cmp
inc
add
xor
cld
add
add
pop
cld
jmp
add
or
mov
data16
xchg
fsincos
je
rep
mov
dec
ljmp
push
jns
in
frstor
lods
scas
repnz
or
js
je
jo
insb
data16
cwtl
or
add
lahf
xchg
pusha
sub
nop
mov
out
lods
test
add
mov
faddl
popa
test
xchg
movl
cmp
es
shrb
dec
js
cmp
jecxz
shlb
and
mov
out
inc
fdivl
dec
enter
clc
pop
mov
push
or
adc
js
mov
inc
push
inc
xor
leave
xlat
mov
or
subb
push
andl
sarb
sub
pop
push
xor
shrl
lahf
sub
std
fcoml
sub
int3
jns
stc
insl
jle
clc
or
test
outsb
ret
jns
movsl
shrb
mov
fs
hlt
fbstp
scas
cmp
cld
xor
test
adc
and
xor
xchg
clc
jno
insl
push
jne
pusha
in
jb
mov
dec
ret
rcrl
ret
bound
insb
mov
pusha
cmp
mov
or
and
add
and
or
addr16
repnz
add
cltd
add
xchg
mov
test
pop
test
lock
call
mov
aas
xchg
push
aaa
scas
rclb
fmuls
clc
push
fsubrl
outsl
adc
add
pop
imul
mov
adc
jbe
push
inc
outsl
jmp
ljmp
sub
or
inc
add
enter
mov
mov
jbe
mov
arpl
test
mov
ds
mov
callw
dec
ss
out
adc
sbb
add
ljmp
jns
mov
js
pop
mov
les
xchg
add
push
inc
ret
adc
roll
and
inc
fsubs
or
test
loope
cmpsl
into
fnstsw
fadds
jmp
pop
xchg
push
mov
push
sub
test
call
or
jmp
sub
rorl
and
sub
or
outsb
mov
movsl
incl
cmpl
jne
push
cmp
fldl
iret
das
nop
aad
adc
and
je
gs
push
fbld
lock
cmp
cmpsl
orb
in
mov
mov
shrb
pushf
aam
cmp
mov
mov
mov
xchg
leave
movb
inc
mov
cmp
leave
lahf
xchg
out
rclb
xchg
loopne
cmp
push
mov
shll
repz
mov
sti
dec
shr
lahf
lea
pop
pop
ja
jo
mov
movsbl
adc
cld
ja
adc
sbb
pop
sar
pop
fildl
test
pop
mov
inc
sub
lahf
call
shlb
pop
cs
lds
cmpl
je
or
je
test
push
jmp
aam
pop
into
inc
pushf
pop
or
in
fsts
add
and
sbb
xchg
dec
and
push
or
sbb
mov
adc
mov
jo
add
adc
insb
std
loopne
push
imul
call
outsl
pop
xor
mov
adc
lods
add
in
sub
jae
adc
stc
int3
je
or
inc
insb
js
inc
insb
add
test
xor
ficoms
mov
ds
jo
sub
or
pop
and
push
ss
js
add
xchg
ss
fcmovnb
add
addb
inc
popf
xchg
xor
or
cmp
mov
sub
inc
imul
adc
dec
lahf
inc
aad
add
jb
inc
mov
test
jmp
psubsw
dec
imulb
add
push
push
sbb
adc
out
mov
pop
push
or
mov
ret
ret
mov
adc
inc
adcl
push
loope
sub
pop
jmp
xchg
and
sbb
je
sub
pusha
mov
lock
xchg
xlat
aad
jne
das
mov
add
mov
and
and
inc
adc
mov
es
add
mov
mov
fmull
jmp
mov
adc
ljmp
inc
inc
push
insl
cmp
or
mov
popa
pop
xor
rcr
cmp
sub
rorl
mov
lods
adc
sub
mov
adc
jo
or
adc
leave
or
mov
popf
push
mov
lahf
psraw
sti
inc
shr
pop
mov
inc
lods
hlt
xor
pop
dec
lods
movl
push
stos
mov
je
push
xchg
xlat
lock
push
sbb
cmpsb
jecxz
inc
imull
add
mov
xchg
add
addr16
xchg
je
or
sub
cmpsb
ss
sbb
je
sbb
xor
rorl
xor
pusha
mov
loope
mov
dec
xchg
sub
adc
adc
into
sbb
mov
test
push
jl
lea
push
pop
or
adc
addr16
mov
jmp
cmp
jle
icebp
sub
pop
popa
mov
cmp
adc
add
sahf
mov
sub
rcll
adc
mov
roll
push
push
insb
push
addr16
test
or
mov
inc
cld
or
jmp
lods
loop
enter
ret
push
xchg
sub
inc
sbb
xor
cmpb
and
subb
push
push
pusha
pusha
inc
xchg
inc
scas
data16
xchg
push
call
andb
aas
sub
inc
stos
es
xor
inc
dec
or
and
jae
pusha
cmp
or
mov
jo
inc
daa
add
or
mov
test
arpl
push
insb
loopne
imul
lret
je
in
bound
mov
sbb
inc
aam
ret
mov
or
rorb
add
cli
dec
sbb
stos
sbb
pop
jl
jae
stos
or
push
sbb
fidivrl
and
sbb
push
jnp
or
pop
clc
xor
and
mov
inc
dec
sbb
mov
or
xor
test
int
mov
jbe
test
adc
add
sbbl
adc
mov
mov
dec
repnz
sahf
add
out
adc
mov
mov
inc
cmp
ljmp
insl
insb
daa
into
cmpb
shlb
xor
aaa
push
mov
or
or
dec
ljmp
push
repnz
sar
ret
js
ret
sub
stos
pop
std
jle
add
inc
sub
push
sub
data16
add
mov
and
cmp
or
arpl
push
decl
jl
fcoms
mov
in
jle
cmp
std
les
mov
rolb
fisubs
jnp
leave
and
push
cmp
lods
add
test
mov
xchg
sub
pusha
jnp
jo,pn
sub
aam
push
pusha
lock
sub
dec
push
sbb
jae
das
adc
mov
out
sahf
mov
lret
lcall
daa
sub
bound
push
pop
int
sub
scas
fldenv
into
sub
mov
arpl
mov
add
movsl
pushf
les
in
daa
pop
mov
sbb
iret
mov
pop
ret
pop
idiv
movsb
adc
out
rorb
cmp
pop
jbe
mov
mov
aaa
cmp
divl
sahf
data16
sub
add
push
stos
add
out
mov
push
imul
mov
inc
popa
add
pushf
mov
loopne
fbld
filds
push
fs
pop
add
fistpll
fisttps
out
out
xchg
xchg
or
push
int3
les
lock
mov
fistps
jl
add
jmp
repz
adc
jne
xchg
cmp
nop
jne
sub
mov
jne
add
fistps
adc
pusha
or
iret
repz
inc
or
push
push
pop
pusha
es
cmp
jo
jbe
out
int
add
or
ds
pop
mov
push
inc
mov
or
cli
clc
mov
movsl
icebp
dec
mov
sub
inc
mov
inc
arpl
push
popa
jne
pop
add
pop
adc
lods
mov
movsl
fisttps
ret
adc
and
rcr
mov
lock
lret
imul
push
cmp
mov
insl
cmp
aam
xor
jmp
or
mov
dec
add
sarl
dec
in
arpl
mov
call
mov
sub
or
and
pop
xor
shl
xchg
mov
or
push
insb
adcl
ret
loop
pop
test
cmpl
sbb
inc
sub
push
movsb
movsb
push
and
mov
fnstenv
into
js
dec
dec
dec
andb
rcl
mov
outsb
add
fwait
sub
and
jo
ss
pop
or
pop
add
and
pop
fisubl
outsb
adc
dec
pop
pop
xlat
es
aad
sub
dec
add
cmpb
and
add
mov
push
or
mov
add
ss
jle
add
mov
pushl
ret
fdivrp
out
and
lahf
xchg
test
dec
loop
outsl
jp
add
push
mov
stos
mov
stos
and
push
push
arpl
sti
cmpl
pop
adc
mov
adc
jmp
inc
loopne
loopne
loopne
add
imul
sub
jmp
out
and
es
sarb
jge
dec
jae
mov
push
sub
sbb
jp
mov
addr16
movsb
orl
jecxz,pn
xchg
int3
and
or
enter
testb
out
test
jb
cmp
mov
push
out
sbb
call
mov
add
add
leave
pop
and
mov
mov
jl
je
jo
dec
sbb
adc
push
cld
lock
adc
mov
add
pusha
iret
push
popa
test
shrb
popf
mov
sti
push
mov
push
dec
add
dec
ss
je
addr16
fdivl
mov
jbe
sbb
mov
sub
inc
sar
xchg
aaa
pushf
xor
stos
mov
in
mov
push
and
sbb
jne
pushl
adc
cmp
sub
sub
jmp
jp
jb
lret
data16
mov
or
sbb
or
cmp
mov
call
loop
scas
aaa
addb
and
mov
inc
sub
cmc
xchg
imul
jo
pop
leave
inc
fs
jecxz
call
pop
jo
and
sbb
fmull
pop
xchg
loopne
in
inc
jmp
rorb
xchg
mov
inc
push
add
push
ret
fstl
sbb
lret
pop
jl
enter
jmp
hlt
or
mov
lahf
insb
int3
push
mov
push
aad
inc
mov
fnstsw
xor
cmpsl
popf
lcall
lea
mov
adc
xchg
test
test
sub
mov
push
add
fs
pop
dec
lock
and
and
inc
jae
xor
push
aam
push
and
orb
mov
add
xor
push
sbb
test
xor
xor
push
mov
lea
cld
mov
add
inc
imul
sbbb
cld
dec
inc
call
xchg
sub
inc
ja
xor
inc
jo
and
push
call
pop
push
jg
mov
sub
mov
add
push
cmp
pop
clc
mov
and
jmp
cmp
add
cmp
mov
xchg
and
incl
mov
xlat
push
cltd
push
pop
jb
pop
das
and
rorl
push
add
inc
or
cltd
sub
shrb
sbb
jb
add
xor
scas
or
xor
mov
dec
jle,pn
fistl
lods
lret
test
cmp
or
pop
adc
sub
cmp
mov
mov
rolb
push
pop
insl
rorb
push
xchg
hlt
lds
dec
insl
les
push
inc
lea
push
shlb
fdivl
insl
mov
sub
cwtl
cmpb
mov
mov
pop
or
lret
adc
les
addb
add
or
adc
cmp
test
push
loopne
pop
ja
shlb
fs
jp
push
popa
notl
jne
xchg
xchg
imul
fs
daa
loopne
adc
jbe
pop
shll
pop
ja
jns,pn
and
or
out
test
out
dec
xor
ret
adc
adc
push
add
clc
push
xor
adc
dec
rorb
sbb
mov
mov
pusha
call
pop
push
mov
mov
jecxz
add
hlt
and
lcall
add
hlt
icebp
mov
or
in
rcr
cmp
xor
mov
jbe
or
mov
and
in
jl
insb
jnp
adc
jno
cmp
insb
arpl
xchg
xor
jb
rolb
dec
inc
cmp
sbb
push
aad
adc
sub
nop
andb
data16
xchg
dec
xor
pop
nop
dec
inc
lcall
nop
sub
sub
and
add
pop
push
nop
imul
subl
sub
clc
adc
push
jns
push
mov
dec
testl
add
mov
sub
push
sbb
call
test
add
sbb
cltd
jno
inc
mov
inc
mov
jno
loopne
jb
inc
sub
xchg
xchg
xchg
addr16
add
mov
sahf
insl
and
orb
fildll
jb
cmpb
xchg
xchg
in
cld
cmpsl
add
mov
mov
ja
stc
sub
hlt
mov
or
out
roll
call
adc
nop
mov
cmp
xchg
mov
mov
es
je
adc
lcall
imul
mov
repnz
fcoml
add
jne
call
and
pop
sbbb
lods
pop
add
and
dec
or
leave
fmuls
loopne
xchg
movsb
data16
pop
xor
leave
sbb
adc
in
cwtl
subb
jmp
dec
and
in
xor
and
xor
add
nop
and
aam
leave
xor
das
sti
addr16
nop
dec
xor
in
add
jbe
or
daa
pop
lods
rorb
clc
add
call
shlb
outsl
mov
xor
or
or
cmc
dec
shrb
fisttps
jns
jg
nop
sbb
push
dec
movsl
shlb
cmpl
fwait
or
adc
or
xchg
ss
jbe
jae
xchg
sub
mov
ret
cmp
leave
mov
or
stos
clc
xchg
ret
mov
sub
pop
mov
add
fwait
rcll
es
or
je
adc
mov
je
or
mov
xchg
mov
mov
in
adc
or
and
add
or
adc
movsb
test
jp
lods
ss
lds
xchg
std
push
cwtl
cmpl
mov
outsl
xor
cmp
jne
or
cmp
and
adc
pop
ljmp
add
fmuls
fwait
push
xchg
sbb
sbb
shl
add
ret
xchg
sbb
mov
out
add
add
fnsave
mov
or
mull
jmp
sub
and
je
dec
pop
inc
rolb
repnz
adc
or
lock
cmp
inc
and
sbb
pop
mov
adc
enter
shlb
adc
shr
and
push
add
mov
mov
mov
arpl
adc
je
test
add
or
rclb
fdivrp
sbb
jnp
push
out
cli
loop
test
outsl
or
xorb
mov
sti
pushf
hlt
mov
mov
lret
std
push
loopne
dec
popf
out
and
mov
add
lea
adc
ja
sub
in
inc
add
or
mov
inc
add
cmp
xor
movsb
jbe
loopne
mov
push
push
mov
out
lret
rcr
ds
cmp
adc
fildl
mov
dec
and
int
incl
sub
push
sbb
lods
jmp
jae
mov
and
and
ds
mov
adc
loop
push
xlat
mov
push
pop
outsl
jp
lahf
pusha
leave
sub
mov
or
rorb
sbb
mov
stos
mov
adc
cli
sbb
and
cld
jmp
in
sahf
push
and
dec
fdivs
clc
mov
mov
jo
jg
xchg
imul
lods
xchg
jmp
mov
std
push
sbb
lods
stos
inc
sarb
xor
inc
sbb
push
js
dec
mov
jno
push
add
cwtl
mov
mov
insb
push
push
sarl
loopne
in
jmp
mov
shll
xor
leave
std
push
jb
jne
movl
testb
mov
xor
adc
fldt
or
pop
adc
jmp
mov
fwait
and
inc
mov
fwait
add
insb
push
push
fadds
jp
mov
icebp
shlb
xor
call
lcall
cmp
into
jb
or
xor
out
int3
dec
xor
push
xchg
ss
add
push
and
and
inc
shr
xchg
js
push
aas
rolb
jnp
or
mov
push
call
ret
rcl
jne
test
stos
inc
inc
dec
sub
inc
fwait
icebp
nop
xor
imul
cmp
dec
aaa
jmp
outsb
enter
pop
sbb
loopne
subb
inc
lods
push
push
fistpll
sbb
ljmp
add
jg
sbb
loopne
xorb
movl
jl
loope
hlt
aam
push
sbb
fstpt
nop
jb
xorl
jg
out
dec
jne
mov
lea
or
orb
sbb
or
idivb
jbe
shrb
mov
inc
dec
jne
adc
fists
mov
stos
mov
jmp
addb
dec
xor
scas
jmp
cmp
push
mov
add
clc
add
lcall
jnp
push
leave
cld
leave
mov
pop
das
pop
in
in
dec
test
push
and
scas
and
cmc
xchg
fcmovne
leave
mov
push
and
ficomps
xchg
lock
pop
pop
xchg
lahf
xchg
pop
mov
pop
push
sbb
push
sbb
aam
xor
xlat
testb
imul
stos
insb
ljmp
lods
and
add
and
sub
or
xor
xchg
lock
add
sti
in
mov
out
inc
sbb
inc
jmp
xor
jge
mov
mov
out
add
pusha
sbb
ss
jne
ljmp
adc
ja
pop
fwait
jno
es
adc
xor
mov
imul
push
mov
xor
shll
push
and
mov
add
xchg
in
xor
shlb
push
movsb
sti
dec
push
sbb
rorb
clc
mov
and
or
jl
lods
add
cmpl
ret
test
pop
ret
adc
addb
jge
add
mov
fisttpll
sbb
dec
xchg
xor
rorl
dec
test
xor
outsl
cmp
adc
aam
aas
and
rcrb
sbb
lds
lods
pushl
xor
imul
sbb
ficomps
inc
xchg
pop
cmp
sub
fbld
xorb
sarb
cmp
sub
daa
sbb
das
ljmp
jle
jg
cmp
dec
faddl
or
imul
mov
add
add
and
pop
aad
jns
outsl
dec
popl
test
xor
pop
adc
mov
cmp
mov
xor
test
pop
je
js
or
pop
mov
add
iret
and
in
push
cmp
sub
stos
and
or
push
add
repz
fimuls
push
sti
xchg
jmp
pop
push
ss
pusha
or
jge
or
mov
test
dec
add
xchg
sbb
sub
and
imul
nop
push
mov
sti
adcb
push
inc
or
xor
mov
andl
clc
ficomps
xchg
lock
imull
hlt
call
push
and
pop
data16
or
or
push
imul
or
add
cmp
lock
sahf
inc
sbb
xchg
mov
inc
xor
aas
fxam
mov
shlb
push
bound
add
pop
xchg
mov
push
imul
dec
and
roll
sbbb
dec
icebp
mov
adc
jp
xchg
pop
mov
cmp
adc
push
inc
push
or
je
push
lods
and
ret
fnstenv
not
aam
cmp
iret
push
adc
enter
mov
xor
and
or
sbb
cmp
cmp
add
inc
dec
pop
cmp
dec
and
jle
add
mov
sbb
decl
repnz
dec
mov
hlt
imul
and
push
push
incb
adc
mov
or
mov
ss
cmp
push
fsubrl
mov
sbb
push
fldln2
or
and
loopne
sub
hlt
gs
lret
enter
sbb
xchg
cmp
cmp
in
sub
push
adc
pop
lcall
jbe
pushf
mov
mov
xchg
inc
lcall
and
jae
or
push
mov
xor
in
xor
aad
sbb
pop
fistpl
cs
jl
iret
xchg
arpl
or
mov
inc
push
hlt
jne
cmp
roll
xchg
add
loop
mov
pop
pop
cmpsl
mov
adc
push
mov
sub
xlat
add
xchg
rorb
js
andb
lods
ja
mov
jmp
lds
lods
popf
fnstsw
out
arpl
test
or
in
xchg
fxch
xchg
fsubrs
loopne
push
lsl
sbb
or
ss
add
jle
dec
mov
bound
test
add
inc
test
cwtl
adc
or
xchg
adc
sbb
mov
or
call
not
and
or
mov
test
icebp
add
dec
mov
in
andb
sti
inc
mov
mov
clc
mov
jae
and
bound
cltd
ret
in
ds
lods
and
pop
sub
fcmovne
and
pushf
xorl
cvtps2pi
xchg
jecxz
adc
incb
add
test
adc
test
cmpsb
adc
call
lock
xchg
xlat
push
into
pop
and
sbb
cmc
enter
insl
lret
mov
jno
xchg
pop
js
cmpl
cli
lods
repnz
inc
sbb
and
into
das
add
mov
pop
sbb
pop
shll
add
and
sbb
stc
ss
adc
adc
sbb
push
lahf
out
xor
pusha
pop
es
js
sbb
jp
or
stc
sub
adc
cmpsl
xor
daa
lahf
nop
and
adc
xchg
jmp
out
enter
adc
orb
imul
adc
dec
in
pop
mov
fstl
nop
js
sbb
pushf
push
outsb
fcoms
dec
mov
and
repz
loopne
sbbl
cmpsl
iret
repz
mov
mov
loopne
cmp
lcall
pop
sub
dec
mov
mov
repz
push
mov
mov
and
lret
loopne
push
inc
repnz
add
and
sbb
push
js
pop
and
inc
mov
inc
out
dec
sti
or
je
push
cltd
jmp
inc
faddl
or
ljmp
and
or
inc
test
ficompl
jmp
fiaddl
xchg
and
ret
and
push
mov
test
jmp
es
test
push
or
mov
inc
sub
iret
fwait
lods
in
sub
mov
add
sub
add
adc
push
call
mov
popf
fadds
lret
in
call
leave
xchg
add
std
xor
dec
jp
sub
sbb
ljmp
mov
sar
icebp
movsb
mov
mov
jmp
shlb
stos
cmp
lea
in
jno
rol
or
cmp
inc
mov
xor
jae
pop
xchg
add
loopne
cmp
xrelease
fldl
cmp
repnz
das
daa
xchg
mov
inc
mov
test
push
xchg
out
rcr
xchg
mov
sarb
pop
jge
fwait
in
push
inc
dec
mov
xchg
dec
scas
or
add
adcl
adc
inc
mov
add
mov
add
adc
and
mov
mov
mov
xor
jns
adc
inc
push
ret
dec
ss
scas
sub
mov
cwtl
push
xor
inc
and
test
shrl
and
cmp
dec
aas
insb
jne
inc
sub
jo
test
aad
pop
cli
lds
xchg
and
ss
cmpb
in
adc
cmp
inc
call
movsl
lahf
adc
test
dec
movsl
lods
add
imul
lcall
pop
leave
add
push
jno
mov
cmp
popl
clc
addb
test
jae
dec
loopne
or
or
adc
adc
scas
incb
push
fs
cmp
sub
inc
cmp
mov
mov
xor
xchg
or
sbb
std
or
cmc
push
inc
lea
push
ret
jmp
lods
pushf
adc
je
mov
xlat
ja
xchg
stos
imull
mov
cwtl
add
scas
cmp
sbb
dec
push
push
stc
mov
mov
cld
test
adc
push
xchg
adc
loopne
dec
popa
mov
ret
enter
shr
adc
xor
jns
daa
mov
scas
jbe
out
add
xor
mov
cld
inc
add
adc
jne
xchg
adc
pop
imul
xchg
ss
enter
mov
push
push
jp
inc
jno
jmp
inc
mov
or
push
aaa
inc
call
jne
sbb
inc
add
shr
or
sub
push
add
shlb
add
mov
sbb
std
ret
test
and
popa
rcrl
adc
cltd
cmp
pusha
out
push
lock
or
out
fidivl
leave
roll
adc
ja
cmp
or
add
sbb
shlb
ja
push
jne
xorb
inc
out
xchg
bt
or
jle
mov
loopne
sbb
test
xor
jl
mov
call
or
jl
out
repnz
mov
ret
adc
or
sti
out
adc
xchg
lea
or
pop
and
imul
ss
adcl
mov
adc
inc
pop
cmpsl
dec
loop
adc
push
test
rcll
dec
popa
add
mov
bound
inc
daa
add
inc
mov
pop
jo
inc
mov
clc
add
in
xor
pop
rcrb
repnz
icebp
push
ret
sbb
pop
inc
inc
inc
shrl
dec
pop
mov
or
cmp
ja
adc
or
inc
jmp
pop
imul
mov
push
std
sub
jmp
dec
mov
push
inc
repz
sbb
aad
sub
sub
add
dec
in
mov
outsb
sub
cs
push
inc
or
mov
sub
cmp
dec
call
push
movb
fmuls
imul
sbb
push
jge
jmp
test
sbb
jg
in
jle
add
or
rclb
add
test
jne
sti
and
clc
cmp
cld
sbb
xchg
inc
incl
mov
mov
or
loope
rol
nop
aas
lods
pusha
sub
add
pop
fisttpl
fwait
cli
xor
fcomi
inc
and
jg
sbb
mov
je
nop
or
push
push
mov
xorb
push
sub
jmp
jle
push
lock
dec
or
shr
int
mov
inc
xchg
filds
lret
inc
inc
inc
add
pop
dec
addb
mov
pop
adc
xlat
add
loope
popf
adc
outsb
test
popa
xor
push
jae
mov
xor
mov
lret
push
or
movsb
pop
jge
std
and
inc
movsb
inc
add
repz
mov
mov
testb
pop
sbb
enter
adc
iret
inc
aaa
add
xchg
push
iret
jae
inc
popa
jl
add
push
push
mov
mov
mov
movsb
mov
add
push
mov
and
pop
xor
push
or
insl
adc
stc
popa
adc
pop
dec
mov
sahf
out
jo
pop
mov
icebp
sbb
enter
mov
inc
sahf
mov
loope
fbld
cmp
xchg
mov
jno
mov
iret
dec
push
in
pop
add
mov
arpl
xor
sbb
add
adc
pusha
in
inc
out
inc
scas
movsl
cmp
pop
fldt
lahf
sub
pop
aad
mov
in
out
jge
imul
out
xlat
adc
mov
xor
push
jecxz
aad
inc
out
in
mov
int
xchg
mov
inc
aaa
add
push
enter
test
or
dec
xchg
inc
push
xchg
xchg
lret
ljmp
and
xchg
and
inc
pop
repz
mov
in
test
push
fcomi
movsl
dec
sbb
mov
movsb
push
dec
dec
andl
repz
mov
cmpsb
xor
sub
in
fdivs
and
dec
scas
xor
xchg
aad
shrb
and
rep
es
lds
clc
mov
sub
lods
dec
push
add
mov
inc
popf
add
xchg
stos
icebp
ret
in
sbb
xchg
xchg
xchg
mov
and
test
jnp
nop
add
adc
inc
dec
repz
jne
test
shrb
and
jb
sbb
test
and
add
pop
pand
or
pop
or
add
inc
xor
aad
jo
inc
add
push
push
mov
xchg
sarl
push
xorb
lahf
shlb
movl
icebp
sub
leave
mov
inc
add
call
pop
lahf
pop
cmp
sub
sub
adc
flds
inc
add
pop
xchg
mov
xor
dec
inc
or
pop
pop
movl
mov
movb
pop
jp
push
mov
sbb
mov
jne
xor
cmp
out
repz
jmp
dec
pop
dec
lret
pop
cwtl
add
das
mov
icebp
mov
lea
arpl
xor
cmpsb
je
dec
invd
pop
mov
sbb
xor
dec
test
pop
div
add
sarb
loope
nop
inc
cltd
imul
int
pushf
dec
jl
push
sbb
add
ds
test
out
mov
mov
in
sahf
and
add
or
or
rcr
ret
test
push
test
std
sub
jb
test
mov
add
cltd
imul
add
int
push
cmp
adc
std
cld
outsb
cmp
dec
sbb
lret
mov
dec
or
fdivrl
outsl
mov
push
dec
mov
xor
mov
cmp
je
or
mov
nop
pop
hlt
xor
movsb
and
jle
popa
add
sub
mov
sbb
mov
shll
fucomip
stos
bound
sbb
jo
bnd
movsl
test
or
xchg
push
test
jne
push
dec
push
inc
push
add
and
add
or
mov
mov
shrl
push
fld
stos
add
add
sub
mov
in
mov
pusha
pop
fcomps
lret
push
enter
sbb
sti
or
cmp
add
sub
cmp
gs
dec
or
ror
mov
or
es
addb
ds
fwait
mov
xchg
stos
add
jmp
scas
xor
or
xor
mov
add
incl
test
cmpl
filds
add
stos
cmp
je
cmp
mov
push
cmp
test
and
push
or
inc
mov
aas
adc
pushf
rcll
lock
add
imul
add
adc
jae
xor
mov
xchg
inc
shlb
xor
cli
add
xchg
mov
pusha
mov
push
fbld
test
andl
out
orl
or
stc
mov
fs
fs
inc
cmpl
gs
sub
pop
subl
or
pop
cmp
lea
ds
xchg
xchg
xchg
push
push
mov
cmp
jmp
pop
pop
mov
je
push
lret
addl
sbb
mov
pop
inc
jp
cwtl
rolb
lahf
ret
add
ja
xor
xchg
mov
add
sbb
mov
lret
roll
mov
inc
or
jbe
jo
dec
xor
push
addr16
jge
scas
cmpsl
push
clc
cmp
xchg
pop
jo
sub
mov
xchg
inc
push
call
fadds
sbb
pop
or
sahf
jae
xchg
test
pusha
fldpi
xor
js
dec
pop
divb
add
pusha
mov
and
sahf
inc
sbb
ja
push
jne
lea
pop
hlt
lds
fsubl
mov
adc
fiaddl
sarl
pop
pop
test
dec
scas
pop
ljmp
int3
pop
xchg
inc
por
or
adcl
xchg
add
dec
imul
stos
add
xor
adc
mov
and
enter
add
loope
test
ficompl
gs
cmp
enter
fistl
jne
dec
push
push
fst
mov
arpl
jbe
out
dec
add
sub
fidivrl
movsl
int
cmp
adc
jmp
pop
pop
mov
pop
je
cmp
jp
and
or
pop
js
and
cmp
sbbl
push
dec
popa
inc
shll
push
pop
jle
in
addl
jmp
sbb
sbb
sbb
in
jne
push
insl
push
mov
lods
jle
ret
adc
inc
cli
cwtl
pusha
cmp
jbe
ds
and
movsl
push
pop
push
das
push
sub
mov
cli
shlb
pop
mov
sbb
cmp
clc
adc
push
add
scas
adc
pop
clc
int3
dec
jo
fidivrl
inc
adc
lret
dec
jmp
data16
aas
lea
add
add
movsl
or
imull
orl
andl
pop
mov
mov
adc
xor
add
inc
insl
sbb
xor
dec
enter
jo
push
push
je
cltd
mov
clc
push
sub
lea
push
fsts
or
sbbl
cmp
dec
dec
sarl
roll
inc
push
pop
push
int
xchg
add
sarl
or
mov
or
mov
lock
movw
mov
adc
rcr
int
movb
xor
ja
and
movb
add
int
push
ljmp
inc
call
push
add
mov
pop
add
ret
mov
outsb
xor
fnstsw
mov
add
push
addl
and
xor
addl
faddl
add
xor
aas
cmp
cmp
iret
and
das
rorb
and
into
sub
shll
pushf
cltd
mov
mov
jp
xchg
jle
movsl
cmpsl
mov
push
pusha
ffreep
mov
or
rcr
or
cmp
pop
jp
decl
shl
add
sbb
mov
cld
mov
enter
cmp
and
dec
incl
clc
push
fnstenv
inc
mov
jmp
sub
test
mov
adcb
sub
or
push
pop
jmp
lea
push
mov
xchg
cmc
push
xor
jmp
sub
push
insl
imul
aaa
xor
js
ret
inc
jmp
call
insb
lock
je
push
mov
movl
sbb
add
add
or
jmp
lods
add
and
aam
idivb
mov
add
aad
push
sti
dec
and
outsb
aam
and
or
or
push
imul
push
ljmp
icebp
sti
or
shlb
push
and
and
inc
movsl
rclb
push
lock
sahf
mov
xadd
xor
data16
sbb
cmp
adc
mov
test
lea
in
or
or
or
flds
mov
push
lret
push
xchg
or
jp
test
jb
jae
pop
addb
pop
ret
mov
adc
mov
in
cltd
std
jb
push
sbb
ret
fdivp
pop
pop
push
sub
push
lock
daa
mov
or
sub
lea
daa
pop
dec
xor
and
add
out
add
or
or
xor
test
das
inc
xchg
xchg
das
fisubs
push
push
jb
pop
sbb
addr16
xchg
lahf
inc
add
add
jnp
nop
xchg
iret
icebp
incb
cmp
fmul
loopne
daa
jg
xor
xor
add
stos
les
or
or
mov
addb
jle
and
adc
adc
mov
xor
adc
cmp
cmp
in
cmp
inc
adc
xchg
cmp
mov
push
nop
test
add
fnclex
add
add
push
cltd
dec
inc
andl
adcb
js
lret
jmp
arpl
or
adc
cs
bound
xor
and
mov
push
clc
stc
dec
jge
add
data16
adc
cmp
lea
push
jmp
in
hlt
clc
sbb
xchg
lock
and
test
adc
dec
lods
lret
orb
js
add
or
jno
add
or
adc
push
mov
ret
ja
push
je
push
jns
xor
push
jo
inc
out
shlb
xchg
pop
push
sahf
negb
xchg
test
jmp
mov
cmp
jle
fwait
jp
ror
cmp
mov
push
mov
ret
jl
dec
hlt
jge
inc
push
sbb
rol
push
push
cmp
jne
jns
push
jp
js
mov
insb
test
inc
cmp
and
cmpsb
add
insb
stos
sub
cld
aad
into
mov
std
mov
enter
ljmp
add
add
hlt
in
out
fcmovnbe
rol
loopne
xor
pusha
cmp
jnp
vfmaddpd
or
or
or
sub
inc
mov
sbb
rorl
js
add
xchg
jb
jns
dec
ja
ret
inc
mov
pop
mov
rolb
pop
inc
adc
cmp
aas
clc
lock
fsubrs
adc
pusha
lods
and
or
push
cmp
bound
xor
add
and
adcb
xchg
adc
or
push
js
lea
popf
or
inc
lock
push
mov
cmpsl
xchg
mov
or
fcomp
enter
fistpll
add
jb
mov
pop
xchg
out
and
outsl
fadds
ret
sub
fsubrs
mov
rcl
mov
or
jg
mov
push
lock
mull
popf
jns
pop
lsl
jmp
push
pop
push
push
inc
rol
flds
shr
rcr
or
mov
repz
dec
mov
adc
out
jb
cmp
in
std
std
ja
jb
cmp
or
xor
and
lock
push
adc
or
fcmovbe
je
push
inc
lret
iret
pop
shlb
test
mov
sar
dec
sbb
mov
je
push
rcrl
sbb
sbb
inc
adc
pop
negl
jne
xchg
fwait
inc
push
fldcw
or
inc
in
cmp
movb
cwtl
sti
mov
hlt
jbe
xchg
or
dec
xor
inc
cmpsb
jmp
jb
mov
cmp
jb
or
adc
and
aad
inc
dec
or
dec
gs
and
push
mov
add
lret
negb
adc
fildl
inc
jp
mov
mov
mov
push
movsb
push
repnz
loopne
dec
leave
mov
push
addl
push
and
jmp
insl
and
inc
pusha
or
jmp
push
push
sbb
and
insl
adc
push
clc
sbb
daa
lret
jmp
dec
and
test
lret
dec
or
and
and
add
rolb
sbb
xor
loope
and
jo
add
fcompl
sub
inc
add
xchg
mov
inc
jne
jl
popf
sub
mov
je
xchg
arpl
pop
inc
cmp
mov
dec
push
and
mov
inc
mov
cmp
lcall
in
roll
push
repnz
inc
decb
dec
inc
cmp
ret
adc
daa
loopne
push
into
add
hlt
pop
push
pusha
inc
or
clc
mov
mov
movsl
or
lock
or
std
push
add
daa
movsl
add
lret
ret
mov
outsb
sub
cmc
in
ret
scas
mov
cmp
lods
fadds
loope
or
sbb
or
iret
decl
dec
sbb
or
dec
push
fmul
or
and
dec
sub
adc
push
push
scas
push
les
mov
push
jmp
xor
imul
sub
sub
mov
mov
in
into
sbb
mov
dec
sti
stos
or
or
push
addb
pop
inc
push
fimuls
add
or
mov
out
daa
or
cmp
mov
sub
cmp
ret
sbb
test
mov
sub
sbb
fsubr
push
fcomi
add
aas
or
ds
or
add
int3
jae
test
xchg
scas
mov
add
or
pop
adc
sbb
push
outsb
mov
jae
adc
pop
adc
pop
imul
nop
nop
out
dec
dec
mov
cmp
fsubl
movb
sbb
xchg
or
xor
adc
in
dec
movb
aaa
std
inc
add
mov
movb
add
je
sub
sar
push
out
dec
insl
pop
imul
push
adc
sub
incl
cmp
jl
cmp
jg
inc
jmp
cli
outsb
psubsb
lds
lret
push
ret
add
push
dec
mov
push
aas
sbb
or
cltd
gs
in
mov
cmpl
cmpl
dec
je
mov
rorl
pusha
lock
xor
icebp
xor
or
and
dec
adc
jne
push
adc
shl
out
outsb
and
add
mov
stos
push
das
cmp
and
loope
shr
je
mov
or
das
mov
sahf
sarb
push
and
lods
push
dec
iret
div
stc
and
push
jg
outsl
inc
or
jbe
out
lahf
pusha
jle
xor
jg
jg
jg
sbb
jg
lea
jne
xchg
add
faddp
mov
ffreep
lea
lea
inc
out
xor
sub
shll
mov
xor
add
add
test
rolb
cli
inc
inc
push
negl
aas
or
inc
ret
mov
lret
ret
rcrl
mov
shr
dec
inc
insb
mov
xchg
inc
outsb
movsl
jmp
rol
hlt
mov
daa
adc
inc
adc
icebp
dec
or
repz
lods
mov
jecxz
shlb
ja
dec
push
and
mov
rorl
sbb
enter
sub
cltd
ret
mov
ljmp
pop
inc
mov
ret
dec
in
jmp
out
shl
sbb
sbb
loopne
or
fst
addr16
jl
js
jnp
pop
xor
lock
cmp
unpckhps
mov
inc
add
test
divb
popf
or
rol
clc
adc
orl
in
scas
dec
add
js
subb
adc
push
dec
push
pop
and
adc
dec
pop
inc
sbb
and
arpl
sub
fisttps
pop
pop
cmp
or
cltd
lea
xchg
push
pop
ja
out
inc
xchg
dec
adc
adc
mov
dec
pop
xchg
nop
loopne
adc
push
movsb
mov
xchg
or
adcb
push
popa
add
pop
jne
inc
jg
mov
or
sub
sbb
cmp
notb
roll
je
lea
lea
lods
movsl
stos
in
or
adc
push
mov
bound
jl
push
popa
mov
or
sub
fs
sub
dec
inc
pop
aam
lock
add
mov
mov
enter
jo
les
aad
add
adc
jo
sbb
lock
mov
mov
inc
mov
jno
add
jno
push
mov
loop
mov
test
movl
pusha
mov
lcall
orl
cmp
ds
sbb
das
sbb
push
push
push
pusha
push
sar
ds
dec
insb
enter
and
adc
add
dec
xchg
or
jl
subl
dec
xchg
jnp
rol
fs
push
sbb
ljmp
sbb
lock
mov
push
rorl
sahf
jnp
adc
sarl
add
xorb
dec
mov
push
fcomps
add
cltd
inc
pop
adc
and
outsb
mov
fcmovbe
scas
je
push
mov
lret
andl
adcl
mov
pop
mov
inc
sub
in
je
sub
sbb
ds
sbb
cmp
mov
jmp
test
loopne
mov
jmp
push
ret
aad
lcall
sub
adc
pop
pop
daa
lret
or
out
cld
xchg
jnp
jle
dec
sbbl
inc
adc
add
cmp
add
and
pop
or
enter
mov
rol
es
int
add
cmovns
lea
sbb
mov
sbb
gs
mov
dec
rolb
ljmp
orb
push
sbb
mov
sarl
and
inc
adc
cmpsb
add
sbb
and
adcb
xor
loope
fsubr
xor
inc
jmp
sub
popf
pushl
loop
mov
cmp
mov
cmp
and
adc
push
sub
and
mov
dec
or
xlat
inc
mov
push
push
nop
imul
fcomps
movsb
adc
cmpsb
mov
dec
and
or
into
insb
lcall
mov
cmp
pop
or
add
das
push
jmp
mov
cs
sbb
ja
fimuls
sbb
and
movsb
pusha
add
add
cmpsb
mov
pop
add
mov
sub
nop
leave
add
mov
or
push
jl
into
incb
rorb
adc
jmp
xor
test
stos
popf
add
test
and
push
nop
push
mov
mov
inc
jle
sub
cmp
xor
shl
or
jmp
dec
push
in
bound
cmp
xchg
or
incl
jae
jnp
jo
out
lret
jmp
loope
push
adc
sbb
sbb
mov
sub
mov
pop
insb
ss
adc
sbb
adc
push
es
in
fdivp
mov
nop
add
jne
in
ds
dec
jae
imul
sbb
adc
cmp
and
push
pusha
call
xchg
imul
adc
push
sub
and
cmp
dec
cwtl
imulb
push
and
andb
cmp
mov
push
movsl
jbe
sub
mov
aas
inc
stos
loopne
je
mov
loop
pusha
and
jge
inc
nop
mov
test
push
popa
sub
cmp
sbb
add
or
loope
testl
fnsave
clc
inc
jmp
xchg
dec
dec
or
adc
iret
mov
adc
cwtl
inc
repnz
test
lea
mov
xor
cmp
or
jecxz
clc
call
inc
jmp
cmp
dec
pop
xor
pop
adc
sahf
hlt
lahf
adc
out
xchg
stos
push
rolb
pushf
push
fsubrs
jge
add
xor
aam
mov
sub
cmp
xlat
test
cmp
or
mov
jp
ljmp
pop
shr
into
outsb
jle
xor
adc
push
test
push
lods
cld
aaa
push
xchg
jp
add
sarl
add
rcll
and
test
sbb
mov
jb
das
mov
dec
in
jge
movsl
add
dec
sbb
divb
add
inc
das
push
mov
mov
rcrl
fldl
lea
nop
aam
push
popa
inc
mov
jae
and
pop
mov
je
jle
push
or
mov
or
mov
pop
xchg
pop
and
push
cli
inc
jle
inc
testl
xchg
and
enter
xor
push
imul
inc
dec
clc
gs
jne
inc
or
cmp
or
sub
cld
and
jno
js
xor
xchg
mov
xchg
test
mov
pop
loopne
xchg
test
push
pushf
mov
negb
push
lea
lcall
add
rorb
in
push
adc
mov
bnd
mov
add
pop
pop
in
add
cld
shlb
pop
cmpl
shrl
negb
jg
in
sbb
mov
jg
add
inc
cmp
jle
or
pop
xorb
shll
shr
mov
mov
dec
std
add
or
shr
aas
or
push
ds
rcll
mov
shrb
jmp
dec
sub
inc
mov
addb
mov
les
cmpsb
imul
incl
push
shrl
shl
shr
or
mov
call
fmuls
xor
jne
outsb
mov
sub
mov
std
and
push
cmp
aaa
or
fldl
fiaddl
mov
testl
jmp
out
jmp
or
lods
add
push
mov
adc
outsl
and
pop
icebp
add
jl
cmpl
int3
jmp
out
or
mov
mov
mov
lret
into
jmp
lods
out
mov
pop
shr
add
jae
jno
mov
andb
add
pushf
subb
jp
inc
xchg
push
lret
pop
mul
or
negb
jns
sbb
movups
ret
adc
les
mov
inc
mov
js
xchg
pop
inc
in
xchg
add
or
jnp
es
push
add
xor
mov
sbb
out
test
in
test
aaa
push
mov
or
push
mov
imul
orb
adc
sbb
mov
add
push
mov
imul
jg
rsqrtps
das
inc
mov
cmp
orl
shll
inc
dec
test
pop
and
mov
push
cmp
pop
in
es
dec
sahf
mov
push
xor
jne
out
ret
cwtl
jmp
push
aas
iret
mov
loopne
lock
sbb
add
sbb
inc
ret
add
xlat
repz
mov
pusha
subl
lea
testl
adc
and
mov
mov
adc
or
lea
adc
fwait
mov
idiv
jbe
inc
daa
lea
div
sub
dec
dec
test
jle
pxor
and
cmp
mov
inc
jne
loop,pt
pusha
pop
je
dec
cmp
push
inc
mov
xor
inc
and
cld
jns
inc
jo
mov
rcl
mov
mov
mov
push
inc
jg
adc
divb
fwait
push
xor
xchg
add
sub
pop
lret
push
xchg
xchg
loopne
mov
inc
pop
and
inc
cli
pop
pop
ret
xchg
sub
dec
push
mov
bound
add
dec
push
jmp
add
mov
dec
andl
sub
dec
mov
fdivrs
lods
xchg
push
cmpxchg
inc
rcrb
popl
pop
dec
pop
repnz
jmp
int3
andl
cld
push
or
and
sbb
out
jb
adc
mov
lret
fildl
std
adc
fxch
jb
or
shl
push
dec
mov
mov
sub
mov
mov
mov
pop
rorb
test
cwtl
mov
daa
cmovl
loope
xor
add
push
pushf
stos
push
shll
xchg
fmuls
mov
sbb
jmp
inc
mov
sahf
mov
ret
mov
add
iret
cld
add
push
outsl
pop
popa
in
cmp
loopne
or
test
cli
cmp
cmp
ret
loope
push
lea
add
dec
cmp
leave
sar
push
cmpsb
push
insb
sub
push
je
or
rolb
sbb
mov
mov
xchg
ljmp
pop
mov
ror
and
dec
pop
ret
add
adc
stc
insb
mov
loopne
mov
js
cmpsl
jo
mov
mov
js
je
test
mov
pusha
cmp
cmpb
push
xchg
and
push
push
or
and
retw
test
add
inc
mov
fidivrs
add
or
or
mov
iret
fsubl
out
pusha
or
mov
mov
mov
andl
inc
pusha
sbb
fs
ret
inc
push
jo
or
out
lret
add
adcl
enter
test
and
inc
push
push
fnsave
sub
inc
inc
call
jmp
mov
or
inc
pop
je
pushf
outsb
pop
push
dec
hlt
insb
rcrl
lea
mov
sbb
lods
jnp
fwait
mov
pusha
and
das
mov
mov
add
mov
dec
dec
or
inc
fs
add
fidivl
mov
shrl
mov
fisubl
incl
cmpsb
int
push
test
push
or
add
jmp
cmpsl
mov
sbb
add
aad
clc
add
sub
cmp
rorl
add
imul
daa
push
adc
mov
jae
cmovns
iret
test
mov
mov
pop
sbb
pop
fists
push
adc
mov
pop
rolb
push
mov
inc
and
jnp
mov
sbb
dec
xor
cmp
int
xchg
sub
inc
iret
mov
std
xchg
lret
xlat
lock
adc
mov
insl
fwait
cmp
mov
cmp
ss
cmp
jne
shufps
mov
xor
aad
addl
xchg
push
mov
sub
lea
fisttpll
jne
mov
cmp
ret
sub
dec
xor
enter
jne
das
movsl
test
int
andl
jbe
fs
ret
in
pop
jns
adc
fiadds
into
jg
sbb
mov
push
add
mov
or
and
adc
mov
imul
popa
add
daa
sub
jne
lea
pusha
lods
stc
cmp
mov
shlb
test
jle
add
push
xchg
xchg
mov
jmp
clc
inc
xchg
ret
push
es
test
push
cmp
inc
fisubs
orl
sbb
mov
mov
lret
jmp
inc
mov
pop
mov
or
rcll
outsl
sbb
stos
xchg
aas
push
jae
cmp
lods
cmp
cmpsl
sub
mov
push
lcall
je
pop
adc
add
shrl
mov
fidivrs
lds
or
cmpb
dec
inc
imul
or
ljmp
sub
nop
popf
dec
shlb
inc
enter
or
cmp
outsl
cmp
test
cmp
cmp
pop
xorb
movups
aam
sbb
inc
rorb
sbb
popf
xchg
movb
and
and
ret
nop
adc
vunpcklps
jb
mov
sub
adc
or
mov
js
pop
push
pop
je
sbb
xchg
lcall
mov
mov
and
enter
or
xorb
pop
inc
pop
jnp
icebp
mov
and
jg
add
jns
int
insl
xchg
add
mov
pop
adc
mov
cmpl
adc
idiv
jmp
xor
push
push
push
pop
clc
int
mov
or
push
jmp
jge
movsb
jbe
and
je
inc
cmp
jl
stos
jmp
addl
js
pop
sbb
jmp
js
insl
cwtl
mov
dec
inc
cmp
sbbl
std
mov
gs
sub
movl
dec
add
nop
test
add
fidivs
es
xchg
cli
adc
push
lods
loope
test
push
mov
test
lds
into
push
dec
pop
mov
fistl
ret
pop
inc
jmp
xor
mov
mov
sub
jle
add
dec
rolb
mov
ret
push
inc
pushf
lods
push
movsl
pop
pop
nop
jg
cwtl
adc
gs
cmp
loope
jno
outsb
sbbb
xchg
data16
lods
inc
push
mov
or
sbb
push
mov
add
shll
mov
add
nop
stos
dec
jl
jmp
mov
rcrl
mov
pop
xor
add
dec
inc
enter
mov
addl
cwtl
fdivs
sbb
lds
and
rcrl
push
andl
ret
imul
mov
mov
jle
jo
adc
push
or
sbbl
cwtl
push
jne
push
sub
inc
int
mov
idiv
xor
pop
aas
add
subb
push
xor
addr16
mov
sub
loopne
mov
xor
fdiv
or
adc
insl
push
std
inc
add
mov
push
push
sbb
sub
push
pcmpeqw
cmp
or
ds
fists
add
inc
and
mov
add
pop
cwtl
fildl
adc
mov
mov
jl
subb
in
push
test
mov
push
add
dec
push
cs
imul
add
bound
dec
cmp
popf
push
cmp
iret
xchg
sti
inc
mov
xor
sub
jo,pt
fistps
cmp
jg
sbb
add
int3
push
or
jne
pusha
loop
sbb
push
ja
sahf
push
mov
push
incl
pop
mov
or
dec
or
enter
jle
loop
je
adc
dec
je
jae
ja
pop
jmp
mov
push
mov
ret
sub
mov
adc
jno
in
add
jo
loopne
fnstsw
sbb
push
push
push
in
pop
shl
xchg
sahf
cld
cwtl
scas
sbbl
push
outsb
ss
or
fstps
pusha
jne,pn
sbb
inc
or
and
mov
jl
push
mov
mov
sbb
push
inc
ljmp
adc
pop
test
mov
sub
je
icebp
loope
xchg
add
loopne
add
lods
ret
jmp
cwtl
cmp
jb
shll
add
or
pop
andb
jbe
xorl
or
pop
jnp
outsb
and
xchg
inc
cmp
xor
icebp
add
cmpl
jno
sbb
mov
ljmp
shrl
or
mov
jno
cmp
rcrb
inc
sbb
mov
stc
jb
push
fldenv
insb
test
sub
push
shr
call
mov
movsb
and
xlat
aad
push
or
sbb
clc
fwait
ret
pop
inc
sbb
pusha
add
nop
loope
out
ja
push
cs
inc
add
mov
outsb
or
sub
mov
or
imul
sbbl
mov
ljmp
cmp
into
lock
ret
add
daa
pop
mov
lcall
push
movsl
mov
inc
iret
xchg
test
xor
jo
sarb
add
loop
mov
popf
cmp
pop
xchg
inc
cwtl
mov
mov
sub
daa
pushf
das
or
in
fadd
in
scas
cmp
or
lcall
fisubrl
jo
dec
pop
push
ljmp
es
add
cmpsb
imulb
cmp
dec
or
xor
adc
mov
outsb
in
ja
cwtl
mov
inc
outsb
xor
xorb
cmpl
dec
mov
push
fildl
mov
mov
sbb
jo
addl
stos
out
roll
sub
pusha
iret
or
ret
cmpb
inc
pop
add
js
mov
je
stos
or
and
outsl
cmp
stos
sbb
test
pop
rol
arpl
and
test
cltd
clc
outsl
cmp
dec
jg
cmp
pushl
jg
xor
orl
mov
push
sbb
psrld
fidivs
mov
aad
outsb
bound
mov
out
cltd
in
and
ret
cmp
in
cmp
add
lds
imul
dec
or
adc
cmp
and
and
cmp
cmp
sub
xor
xor
cmp
cmp
inc
jb
cmp
inc
inc
cmovs
jb
push
push
pop
add
pushf
pusha
fs
pushf
jo
js
fidivl
adc
cltd
fs
dec
mov
xchg
cwtl
pushf
xchg
dec
es
mov
xchg
cmp
rol
cwtl
dec
xor
int3
shlb
leave
mov
mov
and
dec
loopne
call
in
aam
xchg
dec
xor
hlt
clc
cld
add
pushf
in
add
add
dec
fwait
ss
adc
leave
and
and
leave
and
sub
leave
and
dec
xor
cmp
and
xor
inc
dec
xchg
dec
cmpsb
sbb
dec
es
fs
pop
pusha
mov
pushl
add
pop
aam
jl
dec
fwait
inc
pop
add
je
xorl
bound
xor
cmpsb
sbb
or
dec
fwait
nop
jl
and
rolb
int
mov
nop
xor
rorb
cmp
cmp
lods
inc
test
shlb
and
dec
mov
or
enter
pop
push
add
sub
adc
inc
rclb
roll
mov
movsb
andl
push
call
cmp
dec
les
js
cmp
or
add
xchg
dec
iret
inc
push
or
ljmp
lock
mov
ret
cs
fadds
and
cmp
or
mov
fsubs
push
not
xor
loope
xor
xchg
sbb
and
shr
dec
jb
nop
add
jmp
clc
sbb
mov
leave
test
btc
jle
notb
test
adc
pop
mov
mov
jmp
xor
push
pop
mov
xor
pop
je
or
or
and
mov
mov
aas
clc
incb
sbb
std
or
jmp
inc
and
mov
and
mov
jecxz
sbb
add
or
subb
jmp
push
or
mov
and
xor
cvtps2pi
cmp
aaa
jge
je
out
mov
call
add
fstps
aas
add
mov
pusha
loope
pop
sub
xor
xor
adc
out
inc
ficoml
fldl
cmp
push
aam
inc
repz
movl
push
mov
adc
sub
test
out
test
mov
add
pop
sub
push
int3
das
add
or
sub
push
jo
push
mov
je
dec
mov
call
and
or
imul
and
sbb
jmp
outsb
lcall
or
fwait
adc
inc
flds
fstps
jmp
fisttpll
mov
inc
outsl
loopne
repz
add
mov
test
pop
orl
push
xchg
popa
ja
mov
sti
fidivs
and
test
cltd
and
push
inc
xor
sbb
cli
pop
dec
push
aaa
or
fldz
and
add
fstp
pop
cmpsb
dec
jmp
sub
sub
jmp
pop
jb
pusha
sub
push
or
psubusw
xor
test
into
adc
mov
scas
scas
add
mov
jnp
les
push
cmp
push
sub
mov
mov
cli
push
push
ss
out
cmp
das
rorb
or
xchg
mov
in
mov
rcrl
repnz
rol
lock
adc
mov
test
lahf
xchg
xor
ficoml
orl
imul
nop
loopne
or
push
push
pop
jmp
pop
push
fdiv
adc
adc
scas
lock
inc
lcall
cmpsb
mov
nop
sbb
mov
stos
pop
inc
lea
movsl
mov
xor
clc
push
add
adc
and
pop
mov
shlb
pop
adc
loop
mov
aam
sbb
mov
and
mov
enter
xchg
test
je
aam
inc
jo
sbb
lcall
adc
sbb
xchg
jo
cld
sbb
hlt
add
or
ds
and
rcrl
bound
xor
lcall
mov
pop
fstpl
mov
fdiv
add
in
fsubrp
fwait
jno
fildl
and
push
int
aaa
loopne
add
popa
adcb
cs
sub
outsl
or
call
mov
or
mov
pop
ret
ss
push
lret
cmp
lock
mov
add
loope
rclb
int3
inc
pushl
repnz
or
inc
sub
adc
cmp
inc
out
push
xorb
jmp
sbb
addr16
insb
mov
jns
mov
faddp
mov
jnp
and
xor
rcrl
jne
je
rorb
and
adcb
into
sbb
test
adc
popf
mov
sub
xor
js
lcall
or
mov
cltd
clc
push
jge
lock
or
imul
decb
mov
jno
lock
pop
mov
out
mov
adc
sub
cld
pusha
sub
enter
mov
rcr
pop
js
iret
and
out
mov
fstpt
test
cmovge
sub
icebp
das
divb
aam
rcrl
adc
or
jge
add
or
cmpb
push
or
push
out
mov
cli
fisubs
jne
outsb
je
pop
or
sbb
push
and
jae
dec
mov
fsubrs
sub
push
push
pop
push
ret
movsb
xor
pop
cmp
stc
shl
mov
movswl
mov
test
sbb
loop
inc
fnstenv
and
rorb
or
dec
xor
fdivl
movsl
fs
testb
or
push
mov
or
sub
fwait
mov
adc
sbb
enter
cs
or
rorl
call
movsb
fstps
xor
or
jle
movups
push
js
mov
lret
dec
sbb
xorb
scas
or
movsb
mov
push
and
mov
push
pop
inc
mov
mov
mov
dec
cmc
jmp
and
jg
stos
insl
adc
adcb
or
xor
mov
sbb
dec
jo
sbb
lcall
sarb
mov
mov
jnp
jbe
mov
inc
movsl
mov
movsl
add
dec
rorl
es
jne
mov
test
rclb
add
shlb
sarl
or
adc
cmp
add
xor
sub
pop
aaa
addr16
sahf
jo
mov
cmp
mov
push
sti
jbe
sub
stos
sbb
ds
jbe
inc
arpl
xchg
or
lods
sbb
std
or
loope
push
or
sbb
xchg
loopne
sti
loope
rcrl
popa
cmp
adc
jge
es
or
flds
stos
sub
ss
push
or
dec
add
jecxz
sub
mov
cmp
sub
daa
lock
jo
test
jo
jl
xchg
mov
xchg
stos
lock
stos
je
pop
sub
js
movaps
lret
adc
pop
rorb
fcmovnu
add
xchg
xor
test
mov
pop
adc
add
inc
lea
pop
mov
sub
inc
shrl
inc
sbb
lcall
mov
rolb
cmpl
clc
andl
pop
pop
and
mov
out
mov
inc
adc
iret
mov
mov
jno
xchg
xchg
test
or
or
cmp
push
add
dec
cmp
adc
aas
roll
jae
push
bound
pop
out
dec
decb
stos
jns
fsubl
les
sarb
out
xor
push
and
fldt
mov
enter
cwtl
je
sbb
inc
mov
idivl
mov
or
mov
cmp
or
aam
sbb
movsl
cmp
roll
das
loopne,pt
rclb
cmp
pop
mov
shl
das
mov
sub
test
adc
mov
and
pop
dec
dec
sbb
ds
push
or
and
mov
shl
xchg
mov
push
jl
mov
out
pop
pop
sub
sbb
sbb
mov
mov
add
mov
xor
jb
lea
push
shlb
and
faddl
mov
dec
fistps
out
test
xchg
dec
or
push
sub
cwtl
rorl
rcrl
dec
xor
mov
pop
lock
add
jmp
mov
jb
push
repnz
push
aam
mov
dec
jns
stos
xor
adc
shl
cmp
or
or
push
rorb
popa
or
frstor
clc
fs
and
ret
jno
mov
adc
xchg
loopne
push
decb
stos
rolb
sbb
pop
xchg
add
je
mov
gs
into
mov
out
js
pop
icebp
mov
iret
and
mov
and
inc
mov
jge
mov
mov
adc
xchg
dec
lods
shl
xor
rolb
mov
xor
pop
lock
cwtl
cmp
in
and
cmpsb
inc
test
xor
jne
and
adc
add
push
mov
inc
cmp
nop
inc
xor
xchg
inc
push
aad
or
les
and
mov
movsb
cmp
mov
inc
dec
stos
insb
pushf
and
push
pop
mov
mov
mov
pushf
jmp
inc
sbb
inc
pop
jne
cmp
mov
add
jp
fs
mov
add
ficoml
push
inc
mov
mov
rorl
fimull
pop
add
dec
push
sub
sbb
xchg
xchg
xchg
mov
mov
cmp
insb
inc
cs
or
ss
clc
jg
sti
cmp
je
or
out
mov
dec
cmpb
je
mov
add
sbb
sbb
add
or
mov
pop
mov
inc
mov
add
dec
fwait
sbb
fcompl
fnstcw
xchg
inc
jecxz
pop
cld
ret
outsb
daa
or
rcl
unpcklps
and
adc
mov
or
repnz
inc
cmp
mov
lea
mov
add
adc
es
sub
add
and
pop
test
mov
sub
jne
pop
int3
adcb
fldt
jge
mov
jbe
or
or
pushf
sbb
ret
push
testl
dec
jbe
push
pop
rcrb
sub
test
add
mov
popf
mov
mov
rep
iret
and
jae
push
jle
mov
and
push
xchg
cld
mov
adc
or
sbb
cmp
add
add
lods
mov
shll
sub
add
test
imul
mov
sub
inc
call
aaa
dec
dec
dec
jns
neg
movb
and
ja
fs
cltd
push
test
movsl
rcrb
pop
xchg
int3
add
add
add
sbb
jne
push
mov
push
push
and
scas
adc
mov
xchg
popa
sbb
or
mov
xor
enter
add
sbb
adc
mov
loope
cmc
daa
leave
ret
jmp
add
push
test
xchg
sub
adc
mov
xchg
push
addb
xor
adc
jno
pop
sbb
inc
pop
inc
sbb
and
jbe
add
push
jmp
and
mov
sub
lds
mov
and
push
fadd
push
xor
xor
cli
xor
mov
fcoml
in
clc
in
and
movb
fmuls
or
xchg
je
adc
jg
push
or
mov
aam
mov
movsl
jae
push
rcll
sbb
test
xchg
aas
lea
stc
mov
xchg
faddl
xchg
ret
add
inc
or
scas
xchg
push
sahf
cmpb
jbe
sub
add
push
dec
and
add
mov
sub
mov
popa
xlat
inc
dec
sub
leave
and
add
insb
movb
mov
and
mov
mov
mov
fstpt
mov
icebp
add
lock
ret
es
shll
add
xor
xor
inc
aam
shrb
add
cmp
loop
pop
inc
xor
mov
insb
push
adc
and
add
jb
cmpsl
or
shlb
sbb
insb
ja
imul
hlt
nop
dec
xchg
mov
sub
adc
es
push
clc
lods
pushf
pop
xchg
mov
push
fcomps
cld
and
sub
outsl
icebp
cmp
lds
dec
pop
insl
cld
add
hlt
shrd
sbb
push
sub
dec
sarb
loop
inc
jge
sbb
and
cwtl
xor
ffreep
xor
add
xchg
cmc
xor
out
xchg
cld
sub
ret
cmp
scas
adc
inc
mov
adc
dec
cmp
add
fimull
push
iret
sub
sbb
pop
xchg
sbb
in
mov
imul
sbb
js
jg
xlat
dec
or
jb
xor
cmp
xchg
sbb
or
shl
fisubl
cmp
mov
cmp
sarl
outsb
and
aas
push
shll
xchg
sub
sbb
sbb
xor
inc
mov
or
add
outsl
insl
inc
mov
dec
inc
dec
imul
pop
or
or
into
sub
cmp
ror
and
or
in
js
inc
inc
ja
cmp
add
push
icebp
or
jbe
or
mov
pop
adc
push
cmp
sub
sbb
pop
gs
ficoml
sbb
jo
sbb
push
sbb
sbb
push
jmp
lock
movsb
adcl
mov
testl
or
pop
sahf
popf
jl
add
aaa
push
mov
xor
pop
cmp
in
mov
push
in
adc
adc
lock
je
aad
add
or
jbe
inc
sbb
rcrl
jo
out
inc
roll
push
sbb
xor
or
nop
xor
sbbb
jne
mov
mov
nop
or
pop
sbb
xchg
sub
les
pop
rcll
or
leave
xor
enter
loopne
mov
push
xor
pop
mov
out
loop
or
cld
jl
loopne
jge
add
or
or
out
mov
push
add
popf
jmp
xor
sub
testb
or
sahf
clc
gs
or
sub
pop
data16
xchg
or
std
bound
fwait
push
inc
je
dec
or
xor
cld
xorb
sub
mov
xchg
out
inc
or
loope
pop
cmpsb
rorb
add
inc
adc
push
add
rorb
mov
pusha
and
xor
push
xor
arpl
push
add
pop
cmp
aas
sbb
inc
scas
pop
aad
mov
mov
pop
pop
mov
xor
nop
adc
cmpb
jne
pop
testl
fiadds
xchg
sarl
nop
inc
jmp
adc
sbb
mov
movsb
push
test
sbb
jge
mov
xchg
cmp
mov
inc
cmp
cld
inc
notl
fwait
add
dec
push
out
aam
ljmp
sbb
loopne
sbb
fbld
jmp
sub
add
inc
add
push
sahf
shll
shll
pop
mov
jg
test
dec
cld
jg
mov
movb
push
push
and
leave
mov
nop
xor
and
loop
jne
movsb
push
push
adc
xchg
mov
xchg
aam
roll
mov
mov
or
cmp
or
cmp
dec
dec
add
mov
sub
das
xchg
aam
mov
pop
inc
mov
addl
mov
push
lods
movsb
sahf
fwait
adc
mov
or
pop
cmpl
inc
nop
ficoms
cmp
insl
rolb
mov
pop
dec
mov
dec
mov
jl
or
mov
pop
xchg
imul
je
fsubl
pop
cmp
and
je
in
add
inc
ss
bound
inc
hlt
aad
sub
je
dec
enter
je
dec
push
push
jmp
or
jmp
mov
or
sbb
inc
add
push
lcall
sbb
jmp
jno
ret
inc
data16
rcll
sbb
sbb
or
lock
add
mov
add
sbb
xchg
leave
sbb
lock
push
push
sbb
je
adc
jne
adc
aas
adc
int3
push
les
push
dec
outsl
addl
or
fmuls
or
inc
mov
mov
or
and
inc
push
xchg
adc
adc
add
add
mov
fiaddl
into
sub
xor
mov
inc
pusha
adc
nop
mov
pop
mov
sahf
pop
sbb
adcl
shlb
mov
pop
adc
orb
or
add
and
add
or
sub
sub
add
xchg
repnz
or
call
push
call
lret
push
addr16
movsl
repz
or
clc
shr
add
or
scas
add
shr
imulb
mov
push
push
adc
test
and
add
push
lock
gs
mov
lock
subb
mov
add
fcmovu
push
leave
inc
jbe
add
jl
in
les
sbbl
fimuls
xor
leave
pop
mov
sbbb
dec
sti
and
mov
fidivrs
loop
aam
inc
adc
bound
add
mov
in
xor
repnz
adc
push
rcr
dec
dec
clc
adc
sub
stc
rolb
in
sarb
out
pop
or
inc
mov
decl
xchg
xor
fstl
pusha
cmpsb
and
xchg
andb
mov
xchg
shlb
or
test
cli
ficomps
adc
adc
loop
adc
inc
adcl
mov
mov
and
test
cli
jne
mov
sbb
xchg
test
add
adc
or
xchg
or
mov
pop
call
data16
sub
cltd
pop
and
nop
sti
lret
adc
sbb
mov
je
aas
pop
add
xor
inc
mov
or
adc
je
dec
adc
lds
rcrl
enter
push
adc
lds
push
mov
loope
pop
lret
rdmsr
rorb
repnz
pop
or
lret
mov
push
addl
lret
cltd
xchg
or
dec
bound
popa
int
or
adc
cltd
mov
sub
xchg
sbb
add
daa
lret
and
and
or
mov
pop
rolb
adc
mov
andl
pusha
adcb
push
inc
inc
mov
fistl
and
mov
add
daa
lock
movsl
adc
int3
pop
aad
cmp
pusha
sub
cmpb
inc
test
push
add
sub
and
int
fbld
push
jb
clc
and
push
in
and
js
or
clc
sbb
fistps
or
ss
xor
js
add
add
pop
je
or
pop
add
outsb
mov
sub
sub
adc
pop
sbb
sbb
and
pop
fdivrs
loopne
rolb
shll
fcomip
xchg
outsb
sbb
add
mov
push
cmp
mov
add
cmp
das
ss
and
fidivrl
jmp
pusha
push
ljmp
xor
cmp
inc
pop
add
loope
push
push
mov
lock
loopne
push
aaa
enter
imul
in
mov
cmp
jle
inc
and
mov
mov
xchg
ret
pop
sbb
hlt
mov
test
mov
leave
inc
xor
and
outsl
mov
xchg
adc
cmpb
jl
ss
xchg
xor
divb
sbb
mov
push
incl
adc
sub
push
rsm
adcb
push
pop
push
inc
xchg
or
jmp
das
fwait
add
test
push
dec
orb
ds
mov
cld
shll
mov
cmpsb
sahf
mov
cmp
sub
mov
mov
adc
lret
xorb
dec
jnp
jmp
dec
add
mov
and
ds
rorb
push
rcrl
adc
fprem
mov
roll
leave
add
je
cmpsb
add
iret
adc
xchg
or
leave
shl
inc
xchg
outsb
shl
mov
pop
mov
cmp
mov
movsl
sti
lods
adc
pop
add
cli
inc
mov
sbb
add
outsb
add
sbb
pop
and
adc
sub
lea
rclb
and
sbb
sub
cld
imul
adc
fdiv
fiaddl
fsubp
fisttpll
inc
ss
dec
add
orl
sbb
fisubrl
push
inc
and
dec
rcl
xchg
fcomi
lret
enter
sbb
fwait
add
ficompl
sbb
mov
in
shlb
dec
jns
fwait
dec
jne
push
aam
cmp
pop
pop
aam
lds
adc
lods
rcl
ljmp
dec
and
shr
sub
lcall
or
adc
push
idiv
and
inc
clc
mov
neg
cld
lock
je
loopne
add
rolb
es
inc
mov
popa
dec
mov
dec
or
fst
enter
mov
sub
jae
adc
adc
les
xor
push
sarb
aad
push
or
and
into
jbe
aas
movsb
xchg
mov
dec
or
ret
and
or
push
imul
cmpxchg
roll
outsb
cmp
add
paddusb
xchg
add
push
popf
mov
inc
pop
mov
pop
add
gs
icebp
decl
add
jo
lods
jle
push
ljmp
cld
inc
ss
mov
aaa
dec
sub
daa
leave
test
cmpsb
stc
xor
in
or
adc
cmpsb
je
cld
mov
xchg
je
aam
jne
pop
cmc
pop
inc
add
add
adc
dec
enter
icebp
pop
mov
loope
or
xchg
or
mov
xchg
mov
xlat
fistl
mov
mov
cmpsb
sar
femms
es
mov
je
adc
out
mov
jb
cmp
ja
add
cmp
adc
popa
pop
sar
cmp
jne
shll
leave
adc
hlt
adc
jb
idivl
pop
dec
or
and
je
pusha
and
adc
mov
jo
pop
jb
lret
add
or
rclb
mov
lods
test
sub
aas
scas
pop
dec
mov
push
movb
jmp
or
popf
or
add
jbe
pusha
pop
stos
or
test
xchg
sub
cmp
lcall
inc
add
xor
add
dec
rcrb
adc
jno
mov
lock
jne
push
adc
jp
shlb
or
orl
inc
jb
lods
sub
out
jne
push
andb
sbb
dec
bound
into
push
add
sarb
push
add
cmp
mov
mov
adc
jg
sub
shr
shr
inc
imul
lea
or
mov
lret
mov
fadds
neg
testb
ljmp
or
mov
in
sbb
mov
cwtl
inc
sbb
jnp
ss
rcrl
mov
rcll
lea
pop
lods
xor
add
jl
jbe
test
pop
or
dec
jle
lock
sbb
les
pushf
loopne
adc
scas
adc
loop
or
mov
and
and
lea
inc
xor
nop
push
cmpsl
add
into
sahf
loope
mov
ja
and
cli
rcr
loopne
and
or
inc
call
in
ljmp
fs
inc
or
cmp
sbb
test
mov
jne
lea
lock
cwtl
rolb
inc
fs
mov
push
lea
mov
or
inc
push
pop
rolb
or
xorb
lret
shll
ret
movsb
int3
popa
insb
insl
sub
pop
lods
sub
mov
jge
adc
sbb
mov
lcall
lea
cmp
sub
lock
mov
cld
fbstp
rolb
rol
pop
or
and
lahf
movsl
ret
rorb
sbb
push
lret
mov
or
inc
xchg
push
jo
clc
rorb
push
ret
mov
fldt
loope
shr
or
mov
cli
jmp
xor
and
sti
lock
div
ja
dec
and
xor
repnz
add
push
push
cli
inc
cli
div
dec
or
inc
add
dec
xor
test
sbb
call
sub
fistl
and
cmp
scas
mov
dec
inc
andb
std
outsl
xor
xor
and
and
add
dec
testb
cmp
mov
lock
mov
add
and
inc
repnz
pushw
sbb
loop
movsl
mov
jge
mov
enter
and
adc
into
jnp
in
aam
daa
mov
in
push
push
lret
jae
rorl
and
xchg
inc
shlb
fdivs
aam
int3
jbe
xchg
and
jge
add
shlb
dec
ljmp
xor
fmull
orb
sbb
test
fnstcw
mov
insl
test
ret
adc
mov
das
add
sbb
rolb
mov
idivb
or
cmp
adc
lock
mov
out
or
add
orl
inc
lock
or
cmp
jne
movsb
repnz
jne
or
fs
loopne
sbb
lret
fwait
dec
push
add
sbb
es
sbb
mulb
addb
sbb
movb
std
cmp
outsb
cmp
jle
push
pop
outsb
call
xchg
sub
and
and
or
shl
leave
and
rcrb
stos
mov
sahf
mov
push
cli
fcoms
xor
fiadds
cmp
imul
pop
mov
push
jmp
loopne
call
daa
mov
pusha
lea
push
and
cmp
test
dec
loop
in
ficoms
out
add
je
fidivrl
add
cmp
cld
or
inc
into
or
xchg
dec
dec
into
test
mov
xabort
stos
jp
shl
add
enter
sahf
mov
mov
jae
add
sub
adc
adc
test
call
shl
xor
add
add
into
or
mov
inc
and
push
and
inc
inc
daa
addb
sbb
cli
fistl
ret
jmp
cmp
jge
sub
cmpb
sub
movb
dec
cmp
or
jle
add
dec
add
add
fadds
mov
hlt
ret
ficoms
xchg
in
jp
jne
dec
mov
loopne
adc
jb
int
adc
cmp
in
mov
ret
and
add
lds
inc
mov
jo
ret
adc
add
xchg
cmpsb
rorb
add
add
add
popf
ret
test
mov
mov
repz
icebp
and
push
or
push
push
mov
sarl
sub
or
push
rolb
pop
mov
dec
or
jne
or
xor
ficoms
pop
scas
je,pt
push
ret
cmp
ret
mov
lods
or
mov
or
fsubrs
xchg
xchg
xchg
adc
or
jae
pop
sbb
pop
mov
mov
inc
and
cmp
xor
into
push
inc
inc
sub
and
movlhps
sub
and
pop
pop
or
in
pop
mov
ret
xor
push
prefetchw
inc
adc
subl
ficoml
pop
shlb
or
loopne
pop
jne
dec
movsl
test
add
add
xchg
rcrl
lret
testb
mov
push
je
lds
or
or
push
pop
cmp
ja
insl
add
adc
xchg
neg
jne
and
mov
jo
ds
dec
jge
add
mov
out
and
push
or
inc
cmpsl
outsl
push
scas
popa
fcoms
movsl
inc
scas
nop
and
cmp
inc
es
test
sbb
push
mov
orl
inc
mov
sub
shlb
jecxz
xchg
mov
and
mov
add
movsb
jge
pop
repnz
test
adc
lcall
add
push
into
mov
mov
inc
and
sub
and
sbb
inc
in
in
jg
into
into
into
out
fnstsw
movl
push
lock
outsl
lock
nop
pop
sahf
pop
add
outsl
arpl
mov
or
sbb
adc
xchg
mov
sub
pop
xor
adc
lock
hlt
pushf
sbb
lahf
pop
xchg
out
addr16
cltd
adc
add
pop
pop
adc
movsb
and
adc
test
mov
pop
cmp
cltd
and
mov
js
pusha
inc
sub
jmp
test
cmp
push
adcl
xor
xchg
pop
mov
or
jge
adc
mov
stos
xchg
adc
xchg
mov
rorl
jbe
lahf
mov
enter
in
sub
xchg
sbb
test
lock
mov
fs
shrl
or
mov
jge
flds
jne
mov
mov
nop
je
ret
cs
andl
repz
sbb
pop
inc
dec
dec
imul
loop
out
sbb
je
xchg
and
push
dec
sub
loope
inc
xchg
test
cmp
je
mov
jb
inc
mov
aad
mov
cmp
jb
cmp
jbe
dec
nop
out
loopne
sub
jmp
push
xchg
fs
xchg
loopne
les
imul
loopne
or
push
hlt
pop
inc
aam
sbb
in
pusha
inc
jle
fwait
repz
sbb
sbb
roll
adc
popa
test
jbe
cmpb
scas
mov
rcr
inc
sub
pop
or
pushl
mov
and
push
push
call
test
or
cmp
loope
or
in
add
int3
fmul
push
inc
roll
inc
popa
test
aad
popf
sub
cmp
shrl
add
lea
pusha
dec
dec
mov
ljmp
push
test
jo
adc
aas
ljmp
push
inc
push
loopne
fidivl
sbb
sub
fsubrs
mov
or
ret
add
cmp
add
ret
daa
flds
add
popf
jbe
xchg
pop
jmp
mov
push
add
lea
sub
and
inc
test
push
bound
ret
inc
stos
sub
les
or
sub
lahf
xor
push
loope
ret
add
imul
pop
stos
addb
ret
call
push
outsb
ss
mov
mov
push
push
push
sbb
fwait
push
es
xor
test
inc
insb
cmp
push
and
pop
jbe
adc
xchg
inc
mov
idiv
mov
sub
pusha
gs
mov
cmp
je
in
insl
test
lret
and
arpl
fimuls
xchg
xor
inc
add
faddl
xor
jns
jg
or
lret
ljmp
mov
sub
enter
or
add
das
gs
jbe
add
pop
nop
roll
jmp
clc
fimuls
mov
loopne
jmp
add
jnp
dec
fs
inc
filds
fnstsw
cmp
or
js
xchg
lods
shlb
xor
or
mov
out
sbb
sbb
inc
insl
xor
push
dec
bound
pushf
iret
rcr
mov
push
clc
andl
sub
add
inc
inc
mov
inc
ss
cmp
and
out
and
and
sbb
push
or
in
push
unpckhps
jg
scas
sbb
addl
cs
mov
les
aas
pop
cmp
push
clc
xorl
stos
sub
adc
aad
xchg
inc
pop
imul
sub
shlb
pop
int3
or
pop
fs
shll
and
inc
sbb
adc
sbb
repnz
aas
dec
and
loope
xor
push
or
sub
lea
in
loopne
add
out
fadd
rcr
sbb
arpl
and
loope
loop
jbe
cmp
cli
sarb
mov
test
and
xor
hlt
sub
dec
or
daa
add
add
pop
dec
cmpsl
add
push
push
push
outsb
cmp
in
sub
or
adc
push
mov
clc
outsb
add
enter
sub
dec
in
mov
pushl
in
pop
mov
jb
jmp
adc
adc
bound
loopne
add
sub
in
lds
mov
clc
xor
sbb
pop
pop
mov
and
shr
mov
xchg
or
xchg
sub
sub
push
shl
and
loope
stos
adc
and
aas
mov
add
dec
fs
xor
test
xor
jecxz
movsb
mov
xor
loopne
es
adc
mov
sti
gs
shrb
les
ret
nop
adc
test
add
rcrb
dec
or
int3
jmp
adc
mov
or
mov
mov
or
insl
cld
mov
mov
aad
loopne
pop
pop
xchg
mov
inc
sub
pusha
inc
sbb
mov
je
xchg
es
mov
or
ret
add
add
cmp
rcl
dec
aaa
sbb
daa
pusha
adc
pop
dec
cmp
mov
call
pop
lret
or
push
mov
or
into
inc
and
sub
mov
adc
adc
mov
push
cli
and
fs
sbb
add
jl
scas
xor
rcll
fwait
mov
sbb
xchg
xchg
repnz
cmpsb
sub
rcrb
sbb
mov
call
add
push
outsb
insl
clc
pop
xor
lock
popf
iret
push
xchg
push
nop
mov
rolb
jp
incl
mov
aam
or
fmuls
pop
sub
dec
inc
insl
imul
movsl
push
nop
xor
xor
lea
popf
pusha
jge
repz
data16
lock
xchg
roll
push
jmp
push
pop
mov
or
and
inc
das
rcrl
aam
and
or
mov
pop
dec
mov
int3
xor
xor
arpl
imul
add
cmp
test
ja
mov
jmp
jb
rorb
ja
inc
dec
loope
pop
imul
add
xchg
jge
test
add
aas
or
movsl
jge
adc
mov
sbb
cmp
ja
fcmovnbe
dec
in
test
sub
mov
roll
xlat
repnz
in
add
mov
addr16
test
sahf
inc
mov
loopne
pop
add
jne
push
repnz
pusha
lret
dec
test
jg
adc
lock
jbe
xchg
dec
lcall
xchg
icebp
xchg
mov
sbb
cmp
ret
out
push
pop
shlb
popa
leave
call
aam
into
lock
push
scas
mov
fadds
in
rcrl
dec
icebp
popa
rcrb
adc
xor
faddl
sub
ljmp
add
push
insl
jne
jb
lea
or
lock
jp
test
js
or
xor
and
push
add
pop
fs
lods
or
or
test
rcrl
or
sub
push
inc
inc
loopne
pop
cmp
cmp
sti
jns
mov
fwait
xchg
mov
jle
sbb
mov
dec
fdivrs
dec
cmpl
xor
fdivl
ljmp
xor
xor
inc
cmp
bound
mov
dec
mov
shrl
jmp
cmp
adc
sahf
add
int
imull
mov
in
sbb
sbb
and
push
pop
icebp
out
cltd
idivl
xchg
in
rcrl
sahf
or
mov
ret
and
push
or
push
xor
cmpsl
test
push
and
and
inc
mov
jne
inc
sbb
add
mov
std
pushw
icebp
pop
inc
in
rclb
cmpsb
jmp
mov
push
add
sbb
test
pusha
inc
stos
dec
ficompl
mov
adc
or
popf
xchg
add
js
sub
sub
addb
push
add
add
push
pop
cmp
stc
or
push
aas
cmp
loop
es
sbb
lret
add
sbb
lods
arpl
loopne
mov
xor
cltd
xor
push
add
lahf
dec
les
or
pop
jg
lahf
in
or
aas
add
fs
pop
dec
adc
jl
testb
inc
js
xchg
inc
cmp
rorb
loopne
dec
push
jmp
shlb
ljmp
push
xor
in
hlt
and
add
pushf
and
add
jmp
xlat
in
dec
scas
mov
mov
repz
outsb
outsb
aaa
loope
fdivs
sbb
pop
popw
pushf
je
xchg
aaa
and
jno
aaa
inc
callw
vfrczps
lods
sbb
mov
mov
cmpl
and
inc
or
cld
push
fldl
sbb
dec
sbb
jg
sbb
dec
rcl
add
cmp
lock
daa
mov
dec
adc
or
add
pop
ret
inc
xchg
jmp
and
fsub
loopne
inc
outsb
fcomps
pop
mov
adc
push
pusha
rcl
stos
ds
add
jle
cld
iret
inc
js
xor
pop
cmp
inc
push
movsb
push
mov
sbb
or
out
or
cmp
mov
push
aaa
in
xchg
push
pop
sub
in
cmp
adc
or
or
and
fs
add
add
rorl
cmc
repnz
inc
lock
lock
fldl
stc
repnz
mov
loopne
and
or
inc
xchg
ret
cmp
ds
fwait
jo
mov
pop
je
jbe
cltd
aam
sub
pop
mov
call
mov
cwtl
jmp
push
ss
jmp
cmp
or
enter
je
xchg
je
mov
enter
sbb
jmp
outsl
sub
lea
or
iret
add
pop
sbb
add
fiadds
gs
sbb
push
imul
shll
mov
dec
push
rol
and
mov
or
adc
iret
push
xchg
iret
dec
rorb
dec
jne
push
pop
ja
add
inc
jno
push
or
sbb
orb
lahf
mov
adc
push
mov
dec
fcoml
bound
add
xor
mov
aaa
lds
enter
inc
add
inc
cs
ss
cli
arpl
mov
xor
push
and
mov
dec
dec
ja
jmp
aas
mov
adcb
sbb
lahf
xor
test
and
insb
and
and
lahf
in
and
push
xchg
lods
add
xchg
jnp
hlt
push
cli
push
jb
ss
and
or
lods
mov
jae
cmpsl
cli
imul
aaa
jl
call
jecxz
lock
xor
cwtl
sub
add
and
add
xchg
and
fisttpll
loopne
add
dec
cmp
fcmovb
mov
lret
push
scas
or
pop
cs
pop
sbb
adc
or
or
jl
enter
mov
mov
ret
xlat
add
and
or
push
mov
scas
das
or
add
adc
rcll
push
ror
sub
xchg
mov
add
stc
push
insl
sbb
add
cmpxchg
jne
adc
fisttpl
or
mov
gs
nop
sbb
shlb
push
pop
enter
mov
outsl
lods
pop
sbb
sahf
dec
add
xchg
ret
sbb
xor
inc
jp
inc
inc
pop
cmp
jne
rcll
dec
rcrl
add
push
test
push
xchg
test
int3
jg
enter
jg
add
xchg
dec
xchg
pop
or
lock
or
add
imul
or
hlt
adc
pop
cld
adcb
cltd
jle
out
nop
lea
adc
in
mov
and
cmp
dec
fdivrl
ljmp
adc
lock
fimull
fstl
jp
shll
mov
je
adc
decb
and
and
and
pop
jo
adc
cmp
sub
cmp
jb
or
jo
ret
push
pop
scas
call
and
pushf
and
pop
xchg
push
jg
mov
pop
scas
or
pop
and
jns
mov
or
inc
bound
pusha
sbbb
fadds
mov
fwait
or
stos
add
es
or
js
cmp
inc
movsl
pop
sti
aas
insb
and
dec
test
inc
js
dec
xor
xchg
fidivrl
sbb
aas
cs
mov
mov
xlat
je
cmp
add
and
cmp
jb
testb
add
xor
xchg
testb
cmp
lock
js
ret
pusha
daa
movsb
mov
push
mov
in
or
sub
pop
adc
cmp
clc
jns
jb
cmp
mov
cmc
pop
adc
daa
clc
push
push
or
inc
test
sub
in
push
mov
push
inc
shr
sti
xchg
mov
jmp
das
xor
inc
push
cmp
mov
addl
add
push
mov
and
dec
jmp
adc
mov
loop
push
es
jmp
jmp
inc
gs
aas
push
inc
pop
pop
nop
or
and
fists
xchg
mov
mov
dec
or
pop
mov
push
lret
ret
gs
or
int3
or
inc
inc
stos
dec
in
fstp
dec
sbb
leave
hlt
add
add
mov
out
sub
add
nop
inc
adc
and
enter
mov
popl
dec
jae
jne
add
adc
add
add
and
jo
cmp
pop
enter
daa
fldz
xlat
adc
push
out
pop
fiaddl
adc
sbb
shrl
out
or
add
push
pop
push
jo
mov
add
dec
push
dec
lcall
aad
pop
aas
je
pop
and
fld
fxch
fistps
push
push
ss
insb
or
inc
jp
cmp
jmp
dec
sbb
fistps
icebp
aaa
dec
cmp
lea
add
sbb
sub
das
fcomp
cmp
adc
ret
sbb
cmpsb
pop
sbb
cmp
cmp
lcall
mov
jb
jb
or
ss
jb
or
std
nopl
lea
mov
sarl
xor
xor
xor
rcrb
mov
shl
dec
ret
xor
sub
push
adc
enter
sbb
adc
imul
test
pop
int
cs
ss
pop
jmp
xchg
imul
or
adc
xchg
sbb
jmp
add
sahf
arpl
fsubrp
inc
push
in
lock
xchg
inc
es
inc
orb
lock
add
or
xor
pop
cld
fsubr
xchg
faddl
and
inc
dec
enter
push
fidivrl
mov
dec
jl
ror
sbb
fs
inc
hlt
xchg
jo
and
sbb
dec
fcmovb
add
shll
xchg
iret
sarl
leave
adc
push
cmpsl
sbb
fcoms
add
inc
pop
fsub
or
add
popa
sbb
inc
fcomps
xor
ficoml
inc
or
lock
xchg
stos
loopne
xor
jae,pn
sbb
rcrl
or
and
xor
xchg
dec
mov
imul
in
inc
repnz
inc
adc
dec
pop
mov
add
rclb
pop
pop
in
pusha
pop
shlb
dec
cld
enter
inc
test
test
ficompl
lret
inc
xchg
arpl
inc
sbb
test
mov
or
daa
ret
sbb
cmp
cmc
mov
ret
icebp
xor
ficompl
cmpb
repnz
rcrl
inc
cs
daa
enter
adcl
mov
call
adc
call
dec
fisttpl
test
xchg
aaa
loopne
insl
rcrb
and
sbb
pop
pop
scas
xchg
adc
sahf
cmc
cwtl
jecxz
pop
ret
movsl
mov
xchg
jl
repnz
push
jno
pusha
fs
xor
and
insb
jo
leave
and
je
jl
or
sbb
inc
xchg
call
xor
jae
and
xchg
jecxz
push
inc
jp
int
out
nop
jno
cltd
movsb
adc
shlb
mov
mov
cwtl
push
pop
sbb
push
fsubr
sti
gs
in
adc
dec
add
popa
pop
fisubrs
andl
lcall
cmp
repnz
shrl
jne
dec
cmpsb
mov
mull
push
inc
adc
icebp
sbb
push
mov
xor
jb
sub
adcl
sub
lahf
shlb
push
mov
fisubrs
mov
cmp
mov
adc
shll
add
jnp
push
and
clc
fildll
loopne
or
and
mov
insb
xchg
lods
adc
mov
enter
aam
and
xor
adcb
loopne
add
cmp
push
cmp
ret
push
sbb
popf
lock
adc
shlb
outsl
push
test
pop
jmp
shlb
inc
mov
mov
adc
push
loopne
pop
mov
mov
pop
aam
adc
in
or
inc
push
xchg
dec
fwait
or
dec
or
pop
xor
lock
mov
hlt
sbb
and
mov
jecxz
rcrb
jge
fdivrl
jne
ret
in
test
and
mov
imul
jecxz
cmp
or
es
sub
and
pop
cwtl
ds
pop
adc
add
and
in
in
xchg
lods
or
push
in
pop
loope
inc
test
loopne
add
mov
or
cwtl
stos
in
xor
inc
jecxz
mov
clc
jb
lahf
sbb
and
jns
or
mov
in
mov
xchg
fsub
add
cmp
inc
add
out
dec
or
add
call
repz
mov
cmpsb
out
jmp
daa
sbb
rolb
insl
roll
inc
cmp
es
in
mov
or
lds
pop
mov
test
pop
sub
cwtl
sti
inc
or
loop
jb
or
mov
dec
mov
cmp
rolb
lret
cwtl
movsl
out
loopne
call
inc
stos
inc
and
scas
jmp
adc
pop
xchg
inc
inc
mov
add
fwait
add
mov
iret
adc
enter
jmp
adc
fildll
adc
inc
jns
scas
sbb
call
je
and
and
loopne,pn
cwtl
in
cmp
pop
sub
lahf
inc
movsl
push
mov
cmpsb
jmp
lret
inc
fadds
ds
jg
movsl
sbb
test
mov
enter
jmp
cmp
xor
mov
in
in
or
fdivrl
addl
decl
in
jmp
xchg
xchg
sub
and
es
sarl
or
xlat
cmp
movd
xlat
pop
nop
popa
xchg
clc
test
xchg
movd
sbb
xor
xchg
insl
pop
sahf
and
push
in
in
push
xor
jecxz
or
mov
add
roll
or
cmpl
xchg
movsb
sti
repnz
ds
mov
add
adc
les
in
fistl
xlat
sub
clc
xor
dec
cmpsl
cmp
out
xchg
jl
inc
inc
fsubl
mov
dec
loop
sbb
loopne
std
inc
outsb
test
and
mov
lods
clc
stc
in
mov
test
aam
mov
aaa
xchg
inc
cs
dec
push
cmp
or
or
cmp
xchg
or
or
and
lock
enter
and
aad
sub
sbb
gs
and
movsl
out
test
nop
pop
mov
pushf
lock
inc
xchg
or
or
add
loopne
test
nop
mov
loopne
inc
jg
icebp
inc
cmpsb
ss
addr16
arpl
adc
hlt
rcll
sbb
mov
lahf
push
and
adc
add
mov
adcl
in
jl
sub
sbb
ret
sbb
or
scas
pusha
roll
xor
js
nop
mov
inc
fsubl
shl
imul
fdivs
bound
dec
cld
inc
jno
fsubrs
ret
ja
repz
nop
or
mov
subl
nop
push
int3
repz
addr16
mov
aas
mov
sub
test
cmp
add
cld
xor
jae
add
in
inc
bound
call
repnz
adc
hlt
cwtl
fcoms
call
fiaddl
jmp
adc
andl
hlt
nop
xchg
push
xlat
test
cmc
cltd
cltd
ss
cmpsb
dec
call
test
in
cwtl
cmc
pop
insb
xchg
mov
fs
sub
sub
cmp
lds
and
mov
add
pusha
idivb
test
cmpsl
cs
xlat
aas
enter
sub
in
add
loopne
shlb
add
cmp
shrl
movsb
orb
sbb
xor
pop
and
and
imul
jno
cltd
inc
mov
jno
push
jo
xchg
adc
xchg
jl
pop
pusha
fldt
xchg
pop
push
push
mov
cmp
pusha
push
cmp
mov
stc
pop
nop
stc
fcoms
movl
aam
lock
sbb
cs
xor
xor
xchg
loopne
cmp
arpl
inc
adc
icebp
pop
dec
sbb
cmp
nop
cli
sub
sti
mov
pop
and
sub
xor
push
dec
fwait
bound
sub
add
jle
adc
mov
dec
or
orb
or
adcb
lret
or
inc
cmp
mov
xchg
inc
imul
dec
rcrl
aad
and
div
sbb
dec
add
sbb
adc
jb
bound
ret
cmp
add
sub
jno
roll
cmp
stc
sub
andb
mov
arpl
jne
loop
arpl
std
jne
les
xchg
gs
sub
mov
jno
loope
das
test
int
std
mov
pop
jo
inc
std
jno
mov
or
dec
pinsrw
adc
fiaddl
dec
or
inc
int3
cmpsb
ficompl
pop
aam
mov
fmul
enter
push
push
cs
mov
add
nop
mov
xchg
orb
pusha
push
pop
or
push
rolb
movsl
mov
xchg
cmp
pop
dec
cs
mov
sbb
insb
jae
jns
push
sbb
xlat
bound
add
outsb
jge
pop
xlat
les
paddusb
test
aad
fs
or
fcomp
loopne
mov
add
push
in
mov
aam
in
mov
insb
sub
ret
mov
sbb
lods
sub
add
or
lock
and
gs
cmpl
lret
lea
ss
insl
gs
adc
dec
lcall
sbb
cwtl
mov
aas
add
xor
insb
add
push
xorb
dec
xchg
mov
insb
sub
call
cmc
mov
shl
movsb
fwait
xor
mov
out
ret
cwtl
adc
dec
nop
pushf
mov
test
and
test
and
aaa
adc
shlb
pop
sub
push
nop
jl
outsl
test
sub
test
sub
cmp
cmp
imul
push
mov
mov
ficompl
mov
mov
sbb
test
and
fisubs
aaa
test
sti
enter
cmpsl
fildll
add
add
add
sub
loope
mov
cld
jno
enter
mov
push
imul
call
or
aam
imul
pop
inc
shrb
les
orb
aas
fcoml
and
mov
mov
stos
dec
popa
cmp
int
cmp
prefetcht2
mov
aad
cmpsl
and
push
and
fcoms
xchg
mov
cmpsl
adcb
sbb
clc
lret
xchg
insl
stc
adc
cmp
lea
mov
rorb
pop
dec
outsl
push
xchg
adc
adc
mov
cmp
rclb
pop
adc
ss
std
or
cmp
or
xchg
fdivr
notb
cmp
testb
test
aas
pusha
adc
das
daa
xchg
dec
mov
orb
push
and
xor
jl
je
mov
add
jbe
aad
or
mov
sub
push
insb
or
xor
test
scas
mov
xchg
test
mov
mov
or
sub
call
enter
jecxz
sbb
xor
dec
pop
add
outsl
cmp
xorl
or
not
sub
mov
push
add
inc
mov
popa
inc
in
sbb
popa
xor
shlb
adc
inc
ja
rcr
xor
or
cmpsb
mov
fcoml
push
call
inc
push
pop
in
add
xor
push
aas
andb
jae
je
or
adc
pop
insb
pop
adc
icebp
call
push
test
addr16
pop
mov
xchg
jmp
int3
adc
sub
inc
fdivs
and
and
push
aam
sbb
xchg
out
shlb
pop
or
jne
mov
and
or
cmpsl
jb
cmpsb
fs
ret
call
inc
imul
cmpl
pop
hlt
sbb
adc
dec
dec
call
mov
in
push
adc
fsub
adc
xchg
lret
mov
test
mov
fs
adc
enter
mov
mov
pop
int3
gs
test
cmpb
orl
cltd
in
in
mov
outsl
mov
aam
mov
dec
xor
add
and
insb
and
fcom
gs
xor
xchg
adc
adc
in
and
xor
int
mov
adc
call
sbb
or
pushf
mov
stos
xor
xchg
sbb
adc
fmuls
or
lock
adc
jne
rorl
add
xor
sbb
xchg
cmpsl
and
sub
inc
push
adc
pop
sub
push
inc
or
cmp
shll
movsb
push
jne
paddq
test
scas
pushf
test
mov
jne
xchg
sbb
add
aas
sbb
pop
mov
sbb
dec
les
jge
into
xor
or
gs
pop
shlb
mov
popa
inc
int3
popl
es
int3
imul
mov
sbb
cmp
mov
and
inc
pop
or
cs
or
in
test
lods
mov
and
mov
scas
jge
cwtl
shll
and
adc
popf
movsb
mov
les
xchg
sub
sbb
pop
test
mov
movsb
mov
iret
or
mov
jbe
lea
mov
inc
lea
sti
pop
cmp
les
xorl
insl
and
call
fbstp
loopne
lea
adc
push
les
sbb
aaa
into
sbbl
sbb
lret
rclb
ss
gs
or
or
add
xor
cmp
sbb
movsl
sub
enter
fsqrt
push
dec
ds
inc
sahf
sub
lods
insb
imul
fs
dec
push
orl
or
dec
mov
sbb
add
push
xchg
rorb
adc
addl
aam
push
mov
nop
mulb
dec
test
in
sub
fmul
mov
fcompl
xor
or
inc
cwtl
pushf
aam
es
jo
out
rcr
sbb
je
pop
jl
stos
test
adc
pushf
les
fcomps
adc
push
xchg
in
flds
adc
or
push
mov
inc
imul
xchg
in
std
jns
mov
pop
mov
dec
adc
int3
shll
cwtl
clc
mov
cwtl
aas
addb
call
inc
repnz
jp
testl
in
add
push
fcoms
insb
adc
xchg
push
push
insl
sbb
adc
fs
dec
cmpsb
adc
dec
es
and
sbb
es
sbb
inc
es
fs
cmp
sub
add
xor
dec
loopne
fdivr
rcll
aas
xor
and
push
pop
daa
cmp
or
xor
inc
add
or
mov
inc
enter
aaa
jmp
out
movsb
mov
in
or
test
xchg
testl
sbb
fistpl
dec
dec
push
adc
enter
mov
inc
dec
and
and
ss
jge
push
jge
inc
jb
daa
ret
fwait
push
mov
lods
test
push
xchg
movsb
pop
or
insb
dec
cs
sbb
sti
movsb
xor
adc
inc
sub
jo
or
xchg
or
adc
int3
jecxz
pop
mov
enter
rorb
loop
cwtl
fcomps
adc
dec
sub
adc
es
insb
es
mov
xchg
pop
pop
adc
and
fs
inc
push
dec
xlat
mov
mov
cmp
imul
test
sbb
jno
mov
mov
cwtl
mov
inc
push
add
xor
xor
fmull
sub
mov
jns
sub
dec
cmp
test
xor
loop
add
adc
stos
stos
pop
loopne
sbb
sub
ja
or
or
sub
sub
and
sbbb
ja
adc
shrb
sub
shll
or
mov
cmpl
movsb
fwait
or
enter
or
out
push
mov
cmp
out
das
aam
xor
std
lods
cmp
xchg
aam
sti
mov
mov
stos
js
adc
fsubs
inc
cwtl
xor
cmp
sub
adc
sub
mov
daa
pop
movsl
xchg
sbb
sub
mov
test
sub
ret
idivl
inc
scas
movsl
adc
sbb
adc
jae
inc
or
enter
sub
jge
in
adc
or
es
movsl
mov
sub
pop
rcrl
int
cwtl
mov
jns
test
inc
fadds
sarb
push
adcb
das
sub
aad
jns
in
add
and
test
xchg
sbb
xorl
inc
xchg
cmp
xchg
imull
popf
lcall
lods
dec
lods
mov
or
push
in
jg
dec
scas
add
sbb
movb
mov
xchg
loope
loopne
sbb
inc
lret
push
test
or
lods
push
mov
inc
aam
fisubrs
mov
or
cs
or
leave
mov
aam
loopne
fdivs
inc
shll
sub
mov
rolb
push
pmulhuw
leave
popa
cmp
pushf
cmc
shlb
lea
or
mov
xchg
and
jo
movb
outsl
shl
or
mov
dec
and
or
aas
loopne
add
xchg
pop
arpl
int3
mov
nop
xor
mov
or
in
lock
and
and
arpl
xchg
lods
xor
pop
inc
inc
rclb
movl
push
sub
sub
sub
dec
cwtl
mov
and
in
movups
sub
es
jnp
mov
mov
int
ss
sbb
inc
adcb
mov
inc
mov
and
mov
in
mov
shlb
adc
sbb
push
movsb
insb
push
cmp
and
insl
dec
movsl
ss
push
repz
pop
in
test
pushf
pushf
rcrb
outsb
bswap
enter
dec
dec
dec
mov
mov
pushf
pushf
mov
cs
icebp
pusha
aam
fsub
pusha
and
fsub
sub
sbbl
xor
pushf
pushf
xchg
xchg
mov
mov
loop
movsl
and
sbb
push
inc
xchg
jo
inc
nop
push
xchg
or
add
rorb
push
insl
icebp
jl
inc
inc
shll
pop
test
jno
popa
out
in
adcl
mov
je
add
push
roll
adc
test
addr16
inc
push
mov
lock
adcl
test
ret
out
shlb
bound
push
or
pop
jo
push
lods
inc
aam
ret
lock
sbb
mov
nop
mov
pushf
mov
xchg
sbb
and
leave
in
dec
mov
mov
or
dec
aaa
or
cmp
sub
repnz
mov
mov
fnsave
ret
mov
push
pusha
test
inc
fldt
rclb
sub
lcall
xlat
sbb
outsl
lods
pop
xchg
or
xchg
or
ficompl
jne
pop
dec
pop
dec
lcall
data16
insl
fwait
sbbl
imul
ficoml
repz
test
add
inc
cltd
push
sub
addr16
imul
push
push
and
aas
inc
or
fs
mov
aas
xlat
bound
inc
and
push
mov
lods
int3
fisttpll
add
rol
dec
push
sub
mov
adc
mov
sub
rolb
mov
shlb
add
nop
les
mov
adc
add
mov
jns
lahf
add
cmpsl
insl
xchg
andb
ffree
mov
xchg
adc
add
movsb
adc
pusha
mov
pop
popf
or
pop
cmc
cwtl
rorb
mov
enter
movsb
add
xchg
fs
enter
add
pop
sub
push
mov
pop
adc
pusha
pop
leave
jbe
in
push
sub
inc
dec
fwait
test
orb
mov
scas
fs
inc
lods
adc
jns
repnz
xchg
repz
sub
mov
repnz
insb
mov
mov
sbb
orb
jge
inc
bound
movsb
pop
push
imul
lods
aas
add
push
or
test
outsl
sub
sarl
je
jo
sbb
pop
andb
cmp
sub
xor
mov
jmp
jno
cmp
imul
aam
sub
pop
or
call
inc
leave
mov
inc
and
imul
sub
xor
sbb
adc
test
lock
repz
cmc
xor
mov
adc
jbe
movsl
sub
xor
addb
push
and
clc
repnz
in
repnz
ret
add
mov
clc
xor
leave
loope
mov
nop
add
mov
adc
es
int3
out
rol
mov
xchg
enter
or
in
sub
mov
or
adc
or
push
xchg
jecxz
add
enter
pop
or
jb
out
jbe
mov
call
jbe
les
push
inc
push
sbb
ds
jp
push
je
aas
in
das
cs
sub
dec
popf
inc
mov
gs
outsl
popf
fidivrl
xchg
ret
sti
push
gs
int
loopne
mov
lea
pop
test
push
xor
pop
add
mov
adcb
fsubr
mov
dec
rcl
out
xchg
sub
movsb
and
push
pop
frstor
hlt
mov
mov
dec
inc
cmpsb
or
test
popf
sbb
inc
jecxz
cwtl
subl
cmp
sbb
sbb
ja
adc
mov
push
movsl
adc
mov
test
push
andl
cmp
mov
adc
add
adc
ret
inc
les
cmp
mov
sbb
les
fsubs
les
lods
fdivs
aam
push
add
sbb
arpl
pop
leave
adc
repz
mov
iret
jo
sbb
push
sub
aam
test
xor
sbb
sub
push
repz
pusha
dec
ljmp
push
inc
rolb
push
cwtl
mov
mov
add
pop
sub
movsl
sbb
add
mov
cltd
mov
movsb
pusha
js
icebp
cmc
xchg
sbb
xor
dec
inc
inc
fadds
andb
scas
repnz
ret
xor
cmp
mov
std
xorl
sbb
scas
adc
jno
imul
shlb
jne
sub
fdivs
insl
sbb
call
rolb
or
incb
dec
dec
cli
inc
insl
push
jp
adc
mov
xor
push
xchg
jmp
mov
enter
cwtl
cmp
jecxz
sarl
fstpt
inc
push
test
and
cmp
std
inc
xchg
mov
inc
add
cmp
ficoms
mull
rcrl
xor
xorb
dec
repnz
jo
jbe
push
xchg
nop
cmp
es
mov
stos
xor
pushf
mov
or
out
mov
cwtl
aad
dec
shll
dec
add
xchg
mov
popf
sub
clc
loopne
mov
cmp
xchg
push
mov
xchg
mov
bound
shrb
or
addb
sbbb
adc
add
nop
popa
inc
add
push
fsubs
jns
popa
fbstp
add
aaa
cwtl
or
mov
dec
xor
push
xor
and
adc
inc
cmpsb
dec
movsb
icebp
lods
mov
jge
xchg
push
call
mov
mov
les
inc
or
mov
mov
push
sbb
push
fstpt
jle
notb
ret
push
cmpsb
push
cmp
sub
orl
push
insl
lock
xor
mov
adc
sub
mov
aam
xchg
and
sbb
mov
and
imul
sarb
xor
lret
inc
sahf
fistl
fcomp
jecxz
fcompl
xchg
inc
in
loopne
mov
pop
repnz
sarl
cmc
push
xor
movl
fdivr
adc
add
cmp
fisubrl
scas
xchg
add
adc
push
sub
dec
pop
sbbb
mov
mov
insb
jmp
ss
mov
pop
mov
and
hlt
cmpsl
adc
out
mov
addl
and
scas
std
popa
mov
mov
sub
fs
sbb
enter
fs
push
adc
mov
sub
or
xor
loopne
cmp
stc
mov
cmpb
loop
jo
andl
or
das
push
stos
xchg
jge
int
cmp
pop
adc
pop
mov
jbe
inc
fbld
out
or
filds
pop
rorb
jns
adc
inc
nop
rcrb
mov
and
into
repz
cmp
jb
scas
pop
adc
adc
sti
imul
mov
jbe
push
push
in
mov
jg
rolb
clc
jnp
mov
add
adc
mov
fucomi
mov
xchg
adc
push
or
cmp
adc
mov
mov
test
add
nop
add
into
pop
adc
test
pop
out
push
mov
iret
repz
and
rorb
ret
sub
ja
add
js
cmp
xor
sub
aas
rdpmc
add
mov
add
pop
sub
add
push
xor
and
insb
outsl
arpl
insl
ss
cmp
ljmp
sub
popa
arpl
jne
jb
outsb
je
add
das
add
push
insl
jnp
cmp
insl
push
movsb
rolb
mov
outsl
jb
js
je
jb
gs
add
or
outsl
in
jnp
lods
add
add
add
jne
les
scas
fldl
imul
dec
push
add
mov
jl
add
add
aaa
or
fsubs
dec
add
inc
xor
in
std
fiaddl
inc
push
add
aas
push
pop
ja
lds
ss
dec
add
sub
scas
push
je
push
insl
xchg
je
je
and
jae
dec
fisttpl
ja
jge
fs
cmpsw
insl
push
push
ja
mov
bound
jns
out
cmp
imul
dec
jnp
ficoml
insb
jp
in
lock
dec
outsl
or
mov
in
repnz
lret
aas
jmp
out
outsl
jmp
jo
mov
cs
stos
insl
sub
or
scas
ja
out
fnstsw
cmp
jne
inc
push
data16
xchg
fisubs
sub
fs
insb
lcall
mov
out
jo
push
outsb
inc
arpl
scas
mov
inc
daa
dec
in
push
fbstp
ds
cmp
je
adc
out
lods
js
sbb
jo
arpl
fisttpl
insl
mov
scas
xor
filds
push
mov
jb
ret
fiaddl
cs
popl
daa
outsl
sub
or
pop
mov
popa
sub
sbb
outsl
or
push
mov
lahf
aaa
jg
mov
fildll
or
ss
fildll
sbb
xor
lock
divl
jb
jne
adc
test
pop
jbe
mov
adc
bnd
js
ds
das
rcrl
jae
push
ljmp
outsl
ja
filds
pop
insb
push
lahf
outsl
aas
or
inc
loop
mov
scas
sbb
cmp
rcll
aaa
jge
add
insl
lret
imul
cmc
stos
fs
imul
shll
xor
andb
xor
outsl
pop
sub
addl
add
pop
out
lds
insl
lret
scas
inc
cmpsb
mov
popa
push
xor
lock
jg
mov
subb
std
inc
jecxz
push
push
sub
ret
or
cmp
xor
sbb
dec
addr16
pop
push
add
dec
add
or
iret
sti
jle
adc
mov
push
adc
jnp
sarl
push
adc
iret
sarl
sbb
sahf
out
ds
sub
cmp
jnp
das
ljmp
sarb
mov
enter
jns
jns
jns
jp
push
cld
cmpsl
out
pop
aam
push
push
dec
aaa
ret
mov
addr16
jbe
fdivs
add
jo
les
iret
outsb
js
fcmovne
add
shlb
cmp
imul
mov
ds
mov
addl
push
fwait
cmp
mov
add
sbb
xor
faddl
sub
add
and
jbe
outsb
add
das
das
das
and
pop
mov
mull
dec
ljmp
jo
and
decb
cs
test
ret
dec
stc
lock
idivl
aas
dec
inc
ja
sbb
daa
mov
push
daa
outsl
cmp
popa
dec
and
addb
insl
sbb
imul
iret
jns
jmp
out
popl
mov
shlb
arpl
imul
imul
inc
jae
sti
andl
jne
mov
fbld
ds
mov
insl
pop
neg
iret
mov
sbb
lahf
jg
in
lea
cmp
cmp
add
dec
xlat
mov
cmp
add
das
das
adc
pushl
inc
arpl
bound
add
outsl
jbe
dec
arpl
inc
jo
pop
cld
mov
sub
addr16
xor
insb
xchg
mov
inc
outsb
xchg
inc
jo
imul
bound
inc
popa
outsb
adc
out
scas
cmpsl
xchg
popl
fdivrl
jg
addr16
popa
je
jb
outsl
in
addr16
xor
and
daa
push
gs
cmp
sbb
dec
outsl
outsb
and
bswap
cmp
insb
xchg
pop
dec
inc
jecxz
popf
jbe
add
out
dec
or
sbb
mov
jae
fildll
je
push
push
inc
push
popa
insb
jne
inc
or
push
pop
adc
sub
jg
in
and
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
clc
cmp
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
mov
push
push
repnz
pop
pop
pop
pop
dec
xor
pusha
popa
bound
gs
imul
jo
decl
jbe
js
jp
jl
jle
je
jnp
dec
adc
lcall
loopne
fistpll
mov
add
orb
sar
stc
mull
lret
jno
icebp
pusha
inc
mov
clc
ret
cmc
loop
outsb
movsl
add
xorl
sbb
imul
lahf
adc
cmp
dec
add
jnp
xor
jo
xor
stos
jnp
popf
add
dec
pop
sbb
ja
ret
ret
iret
loopne
imul
int3
adc
out
add
adc
add
add
add
add
xor
cmp
push
add
xor
cmp
es
hlt
and
add
pusha
push
pusha
adc
js
or
cmp
fidivrs
add
addb
add
imul
push
xchg
test
add
sub
dec
mov
pop
daa
push
cmpb
push
and
sub
jb
int3
push
icebp
pusha
mov
jo
add
inc
nop
lret
and
outsb
imul
adc
add
dec
sbb
xchg
pop
adc
xor
addl
daa
iret
sbb
jb
and
leave
and
xchg
mov
add
sbb
inc
scas
je
popf
dec
mov
ljmp
mov
enter
scas
xlat
jmp
add
sbb
cmp
dec
inc
sub
push
inc
mov
cmp
rdtsc
ss
js
dec
dec
inc
dec
inc
cmp
aam
adc
notl
fs
inc
sbb
jae
call
bound
je
outsb
data16
add
mov
out
je
xor
mov
test
jo
pop
lea
mov
outsl
js
push
xchg
cs
pop
leave
push
and
insl
jo
jo
and
and
shlb
aaa
insb
les
dec
imul
or
inc
mov
ficomps
cmp
dec
inc
jb
jns
daa
int
rcll
pop
and
pop
in
jns
mov
insb
and
pusha
dec
fucom
arpl
je
and
fs
pusha
fsubrl
push
jbe
clc
insl
outsl
rorl
outsb
pop
jb
and
shr
insl
xor
push
rorb
shrb
fs
insl
adc
lods
jp
pusha
xchg
or
fstps
fadd
pop
rolb
mov
cmp
push
cs
lds
cmp
or
les
fimull
pusha
push
push
fwait
push
lock
push
outsb
mov
fcomps
push
push
jae
or
dec
loopne
mov
pusha
insb
call
mov
clc
addr16
and
out
push
das
outsb
gs
mov
data16
inc
insb
and
dec
testl
cs
xor
dec
push
lods
jno
xchg
fisttps
addl
insl
jle
jb
inc
or
imul
adc
jg
sbb
fs
inc
sub
fs
xchg
das
sub
or
gs
sbb
popa
lds
inc
jg
sub
lds
push
or
pop
jne
pop
das
je
outsl
xchg
ret
daa
xchg
mov
popw
mov
sahf
negb
push
jl
cmp
or
ds
jmp
push
das
push
sub
loope
out
es
addr16
jle
sahf
jbe
xor
sub
add
add
jae
jl
sub
pop
or
sbb
push
sub
das
push
jb
aaa
jbe
mov
cmp
inc
and
xchg
pop
pop
jne
ret
mov
outsb
stos
addr16
push
jbe
xorb
adc
xor
gs
loope
xor
imul
push
add
cltd
hlt
dec
sbb
sahf
inc
out
imul
fs
jo
sub
inc
push
jl
out
sub
jns
add
and
sbb
repz
add
std
call
add
mov
push
mov
dec
lods
test
movsb
iret
repz
mov
test
iret
repz
jl
je
loope
out
jo
push
push
sub
pusha
pop
push
pop
xchg
out
out
push
das
push
dec
inc
repz
repz
cmp
xor
sub
repz
sub
sbb
add
out
ds
cld
lock
mov
cwtl
js
cmp
inc
sahf
out
out
sti
push
mov
insb
push
jns
out
inc
cmp
and
repz
repz
cli
in
fadd
mov
js
sub
stc
loopne
out
sahf
mov
stc
jg
out
aaa
adc
hlt
clc
inc
push
shlb
add
and
mov
test
dec
insb
inc
addl
sub
push
mov
ja
add
adc
add
add
add
add
cmpsb
add
movl
add
inc
mov
sbb
add
or
fistps
outsb
ret
or
jle
decl
add
addb
xchg
lea
call
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
pushl
mov
mov
mov
mov
ret
enter
int3
int
iret
call
rcl
rcl
aad
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
stos
push
push
icebp
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
inc
lea
push
inc
add
call
push
and
and
aas
push
add
js
popa
data16
add
pusha
pop
shlb
std
jns
xor
add
fiaddl
data16
mov
mov
aaa
push
arpl
fstpt
lock
insb
fs
sbb
sahf
ljmp
ficomps
les
setl
sub
add
inc
adc
scas
add
push
dec
and
xor
push
dec
inc
dec
psubw
test
adc
inc
das
push
adcb
adc
sub
adc
mov
popa
into
mov
mov
jg
inc
jnp
inc
loop
mov
ds
pop
adc
jmp
iret
aas
clc
lret
sbb
jb
jge
arpl
fstpt
pop
pop
dec
scas
jp
jno
in
fstl
jg
jg
mov
and
cmp
dec
imul
incl
lret
add
inc
mov
mov
sub
sarb
sahf
fwait
ss
sbb
pop
jns
ds
xor
jg
incb
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
idivl
cld
push
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
and
xchg
dec
xchg
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
dec
xchg
pop
mov
out
leave
ljmp
cmp
xchg
dec
test
xor
jle
dec
add
scas
lods
dec
lock
xor
dec
in
mov
or
icebp
pop
pop
repnz
sti
adc
hlt
and
es
mov
fcompp
faddp
pop
clc
add
add
dec
or
lret
mov
pop
cmc
dec
neg
incl
xlat
lods
xor
out
dec
jo
cmp
out
rclb
sub
cmp
sub
mov
or
mov
mov
das
outsl
jns
shlb
pop
pop
dec
xchg
pop
and
das
and
jg
imul
mov
jbe
xchg
ja
push
jae
jmp
mov
jae
adc
in
data16
scas
mov
dec
mov
cmp
out
mov
lock
xor
pop
inc
mov
pcmpeqw
jl
push
fdivrp
or
shlb
daa
sti
xor
daa
je
xchg
jo
sub
insb
and
je
xor
xor
jmp
xchg
lret
test
cmp
loop
addr16
testb
add
aad
xchg
testl
or
jl
adc
outsl
mov
faddp
and
jae
jae
insl
xchg
arpl
fs
pop
fadd
xorb
imul
or
arpl
adc
fbstp
sub
aaa
lock
adcl
jg
mov
mov
push
push
daa
jnp
cmpsl
mov
jbe
cmp
ret
xchg
inc
jecxz
inc
mov
ret
push
sbb
sbb
jns
inc
dec
aaa
sbb
xlat
jg,pn
dec
sub
js
jmp
cmpsl
lock
dec
mull
mov
stos
xor
push
call
fidivs
xlat
cmpsl
call
adc
iret
in
ret
xchg
sub
popl
dec
mov
divl
aad
and
cmp
rolb
jecxz
loop
mov
inc
xchg
insl
and
dec
dec
outsl
or
xlat
fisttpl
aas
ret
gs
xchg
lock
jp
jp
add
outsb
ja
ja
pop
mov
adc
es
insb
jecxz
jg
insb
push
ds
or
addr16
jno
std
mov
daa
je
rcl
mov
aas
arpl
outsb
fbstp
daa
pop
arpl
das
push
jae
cltd
adc
mov
pop
mov
repnz
cmpsl
lea
es
mov
dec
sbb
mov
fldt
mov
add
pop
adcl
sub
fadds
sub
daa
xor
out
inc
ss
scas
rcr
push
or
add
popa
mov
lahf
inc
aas
jle
mov
xchg
push
push
xchg
je
mov
loope
jb
push
loop
imul
mov
push
pop
jno
mov
call
mov
jae
push
fs
ret
adcb
or
cld
dec
jnp
pop
mov
xchg
lds
mov
dec
aaa
inc
subl
adc
pop
cmp
or
ret
push
push
punpcklwd
sbb
sub
les
jge
push
mov
pop
lock
iret
ret
cmp
inc
xor
jne
add
dec
clc
scas
cmpsb
cltd
fisttps
inc
out
shl
cltd
js
daa
notb
test
js
mov
pop
js
jg
push
jne
sbb
daa
mov
sbbb
add
fwait
subl
sub
outsb
ja
fdivrl
xor
add
jl
push
lret
pop
pop
xorps
divl
iret
sbb
push
and
inc
loope
jg
or
mov
xchg
test
outsl
xor
jbe
negb
pop
or
lahf
cs
cmp
incl
ja
outsl
mov
dec
stos
cmpsl
btsl
inc
push
inc
mov
out
jnp
or
jo
arpl
dec
imul
out
inc
inc
into
add
add
imul
add
ss
and
sbb
inc
mov
ds
je
pop
inc
xor
jge
pop
insb
inc
pop
mov
or
inc
push
adc
jbe
cmpsl
xchg
andb
lock
mov
lahf
inc
imul
popa
inc
cmpb
aas
xor
fiadds
sti
cs
or
inc
jl
sbbl
jl
psubq
mov
jl
imul
stos
and
and
addr16
bound
sbb
ja
push
mov
adc
push
jnp
jns
jae
sub
fisttpll
out
rcrl
pop
mov
sbb
pop
shll
iret
out
mov
jp
jns
insl
inc
mov
mov
add
outsb
jo
iret
jnp
aaa
popa
pop
arpl
jp
jl
mov
push
ja
imul
jl
outsl
lret
jl
mov
pop
bound
jns
inc
or
or
mov
sti
sarl
ds
inc
mov
das
pop
ds
fs
mov
imul
icebp
movb
xchg
jl
inc
or
pushf
into
xor
sbb
jl
mov
daa
inc
xor
shl
outsl
pop
and
or
dec
mov
push
sbb
lods
xchg
push
test
push
jg
out
add
fistpll
lret
or
jecxz
cmp
ret
daa
mov
jge
xlat
pop
jns
sbb
loopne
das
jae
push
xor
out
aas
mov
stos
sbb
mov
inc
pop
das
lds
inc
stos
pop
mov
fwait
or
imul
lret
clc
jne
xor
bound
lcallw
aaa
push
ss
add
sub
xor
popa
inc
xchg
mov
je
aaa
cld
ret
pop
popa
inc
aas
das
xlat
les
push
dec
js
scas
lds
push
add
testb
pop
mov
mov
inc
add
pop
xor
inc
sbb
mov
mov
inc
add
xchg
ss
imul
dec
ss
data16
inc
in
jl
int
mov
push
in
push
mov
inc
push
ss
out
lods
push
sbb
outsb
push
adc
shll
sbb
push
push
mov
mov
push
es
movsb
cs
push
inc
sahf
cmpsl
stc
mov
push
xchg
es
jge
mov
fadd
out
add
xchg
aas
pop
pop
repz
mov
push
xor
add
jmp
cmp
fnstcw
or
push
cmp
sti
popf
subl
insb
jge
iret
repz
sbbl
out
inc
addl
pop
test
mov
dec
and
mov
je
nopl
jae
inc
mov
frstor
jo
jns
mov
arpl
ret
mov
test
inc
mov
arpl
insb
pop
aaa
xor
outsb
push
das
jae
aas
add
add
push
and
pop
out
pop
fistps
insl
pusha
push
popa
jne
or
ss
push
and
dec
bound
xor
pop
sub
and
adc
mov
out
sahf
out
jl
scas
mov
repz
fisttpl
jae
arpl
cmp
jecxz
and
jns
out
pop
scas
jno
cmp
push
mov
bound
jne
stos
outsb
loop
inc
mov
gs
cmpsl
lock
ds
mov
cmpsb
push
jo
jb
outsb
jb
jae
mov
and
inc
sbb
push
mov
xor
and
and
arpl
fistpl
cmp
fs
adc
add
or
xorb
sahf
and
pusha
add
ss
cmp
imul
dec
outsw
sub
ja
add
sbb
imul
or
or
inc
pusha
adc
decl
inc
scas
imul
andb
mov
push
pop
push
inc
out
sbb
cmp
inc
out
sbb
stos
or
mov
mov
out
test
shlb
adc
fildl
imul
bound
xchg
push
xor
mov
dec
loop
aaa
pop
pop
xor
int
call
jbe
out
iret
jbe
jl
xor
mov
sub
push
pop
movsl
icebp
jnp
add
or
push
cmpsl
pop
bound
pop
mov
push
or
js
adc
add
outsb
out
pop
imul
xor
mov
add
subl
xchg
ret
ja
or
jno
sbbb
dec
into
jecxz
add
hlt
test
jnp
xor
dec
movsb
cmp
loopne
or
push
push
lock
cmp
dec
dec
mov
sti
jg
push
inc
jmp
adc
and
orl
cmp
daa
dec
test
aad
and
inc
mov
lods
pop
pop
shrl
ret
xchg
push
addr16
push
mov
dec
and
adc
test
test
mov
and
mov
out
gs
add
add
int
jp
ljmp
mov
fildl
out
in
rcr
dec
addr16
pop
bound
add
inc
sub
xor
jmpw
inc
rol
jb
fs
xchg
adc
mov
repz
pop
sbb
xchg
stos
outsb
xor
jnp
into
repz
ret
js
iret
cltd
or
xchg
test
cwtl
or
pop
icebp
je
xor
add
sbbb
das
adc
mov
or
and
sub
xor
inc
neg
mov
mov
mov
mov
mov
add
add
shrb
ret
insb
ss
cltd
sub
shrb
xchg
pop
adc
fsts
and
add
fldcw
xchg
rclb
lret
verr
loopne
lea
shlb
insb
fstpt
stc
das
incl
adc
ds
test
mov
xlat
lods
push
xchg
mov
icebp
mov
movsl
inc
daa
pop
ss
rol
pop
shrb
mov
jmp
shrb
add
inc
and
push
iret
mov
push
rolb
lahf
adc
mov
dec
adc
mov
dec
movsl
test
addb
inc
das
dec
outsl
aad
stos
add
cmp
inc
das
push
cmp
push
inc
push
arpl
stos
mov
aas
sbb
add
rorl
cmovne
incl
pop
aaa
lods
ret
stos
shll
inc
adc
outsb
jns
sub
insl
xor
jo
fwait
push
or
out
mov
imul
lahf
pop
add
lods
arpl
out
dec
cmp
rolb
push
mov
ss
imul
xchg
mov
and
jg
and
or
mov
push
cmpsb
sub
sub
cs
aam
inc
mov
push
or
push
cmpsl
push
cs
and
mov
adc
cmpsb
xchg
pop
rorl
faddl
fisttps
pop
in
adc
lahf
mov
out
rcrb
mov
pusha
and
imul
xchg
cmpsb
pop
pop
xor
dec
pop
add
push
negb
sub
loopne
push
aaa
inc
mov
mov
dec
sub
pop
nop
pop
jnp
decb
xor
mov
arpl
inc
mov
ss
xchg
mov
test
pop
pop
push
adc
jns
mov
imul
dec
xchg
out
addb
popa
xchg
jo
dec
mov
pop
sbb
inc
je
inc
ja
jo
les
ret
and
or
iret
push
dec
imul
shrl
fs
bound
ret
ficomps
test
inc
xor
dec
aaa
cmp
and
out
insb
fwait
sub
inc
lods
jecxz
pop
xorl
jae
shrb
push
lods
cmp
xrstors
clc
aaa
inc
scas
xchg
ret
dec
jecxz
and
pop
adc
loopne
inc
iret
xchg
andb
push
cmpl
push
movsb
cmp
xchg
push
xor
incl
iret
js
notl
inc
or
rorb
mov
aaa
aaa
mov
push
arpl
imul
fs
pop
jno
fiadds
push
movsb
mov
lds
call
inc
cmpsl
rorb
or
fildl
inc
imul
sbb
arpl
fs
add
ss
rclb
imul
scas
pop
aaa
dec
scas
nop
or
xor
out
das
adc
bound
and
fs
shl
xchg
jp
jp
jle
movsw
add
mov
cmpsb
sbb
push
dec
repz
push
cmp
adc
dec
xlat
popa
rclb
push
mov
mov
insb
add
cmp
push
mov
stos
inc
sbb
pop
dec
movsl
adc
push
repz
push
or
imull
or
dec
aaa
rcrb
fisttpl
lods
insl
inc
mov
adc
and
out
lds
dec
ret
pop
aam
cmp
inc
cmp
das
ja
inc
lods
sbb
xchg
hlt
pusha
in
jecxz
ja
sub
dec
inc
sbb
mov
xchg
add
stos
mov
inc
pmuludq
sub
pop
push
pxor
push
mov
jl
mov
pop
minps
or
push
fisttps
jmp
jnp
sbbb
dec
push
add
push
mov
adc
xlat
dec
push
mov
in
emms
add
jbe
push
fs
adc
stos
fisubs
movb
xchg
inc
call
mov
and
fldl
jbe
dec
cmp
out
xor
push
outsl
xchg
inc
pop
pop
mov
aas
filds
shl
jg
inc
add
testb
sbb
test
clc
xlat
pop
add
cli
lahf
pop
in
int
insl
fldt
incl
or
push
sti
xchg
add
sti
push
add
syscall
inc
data16
cmp
mov
or
add
sbb
inc
lret
incl
lods
lcall
bound
outsl
bound
xchg
ret
pop
cmpsl
stos
mov
daa
sub
in
insl
rol
cmpl
arpl
sbb
sub
mov
lea
fisttps
ret
mov
pop
jo
push
jge
jecxz
jae
jae
adc
or
daa
je
lods
inc
mov
cmp
scas
add
das
imul
jno
mov
iret
jo
out
xchg
mov
sbb
arpl
mov
adc
adc
sub
xlat
jae
push
mov
ret
xor
andb
fwait
scas
push
das
mov
aaa
es
dec
sbb
iret
push
push
add
and
pop
cmpsl
out
stos
mov
or
jmp
adcb
dec
and
shll
push
lahf
lods
dec
sub
xchg
mov
sbb
mov
add
sbbb
ret
sub
sbb
mov
mov
stos
out
xor
out
sub
and
jnp
jge
cwtl
mov
mov
push
sub
cs
and
fs
xor
stos
lods
fistpl
outsb
sbb
sub
lret
fidivrs
cmc
adc
insl
lahf
aaa
fmuls
mov
xor
and
cmp
outsl
push
mov
insl
arpl
bound
psrlq
pop
pop
xadd
clc
push
int3
stos
inc
scas
data16
mov
inc
incl
xchg
xor
scas
lcall
sub
xchg
mov
in
sbb
in
test
jns
clc
test
dec
scas
xchg
stos
push
add
xchg
mov
xchg
push
leave
or
cmpsb
push
adc
movsl
and
and
cltd
dec
pop
int3
movsb
jl
leave
stos
in
fsubs
and
stos
sub
scas
call
push
jb
lock
pushf
dec
hlt
lahf
leave
push
xor
and
stos
in
cltd
pusha
adc
leave
mov
sub
rcrb
les
jo
scas
xchg
test
sub
xchg
mov
xchg
push
leave
push
cmp
cwtl
xchg
add
inc
sbb
mov
mov
cmp
jg
insb
vandnps
inc
ss
xor
pop
and
arpl
mov
jmp
inc
inc
push
push
jmp
lahf
xorl
pop
out
dec
fsubs
push
iret
mov
arpl
dec
ljmp
and
mov
lods
xor
sub
lds
pop
imul
int
and
mov
mov
push
mov
sbb
pop
sbb
fldt
addr16
imull
adcb
addl
inc
aaa
mov
aas
mov
addl
packuswb
push
or
aas
inc
fldt
or
adc
push
cmpsl
retw
or
cmpsl
das
inc
nop
orb
es
lds
scas
ja
insb
mov
rcrl
push
scas
push
xor
xor
xchg
arpl
mov
add
jg
adc
adc
js
sub
mov
push
jmp
sub
loopne
mov
addb
sbb
push
imul
das
out
aaa
loope
xchg
filds
mov
outsl
add
mov
scas
adc
sub
add
push
test
xchg
add
pop
cmp
imul
and
sarb
jo
xchg
aas
pop
das
mov
pushl
mov
mov
xlat
or
lea
and
lcall
inc
into
rcrb
lret
add
sub
sarb
xchg
sbb
pop
out
outsl
jbe
mov
outsl
push
inc
shlb
xlat
bound
xchg
aaa
xchg
fs
jmp
es
mov
add
push
adc
pop
jbe
mov
adc
sbb
push
jp
push
pop
or
frstor
sub
out
push
lret
adc
mov
rcrb
inc
jl
and
inc
loope
mov
jnp
div
xchg
jne
addr16
je
fs
gs
jne
pop
insl
je
push
bound
push
outsb
popa
inc
gs
out
pop
push
jo
cmp
aas
addr16
shl
xchg
imul
mov
fnstenv
fidivrl
es
les
sti
outsl
pusha
add
ss
jnp
bound
jae
mov
data16
js
outsl
dec
js
lcall
and
loope
jmp
loope
fcmove
outsl
inc
add
and
movb
xchg
push
add
sub
test
stos
pop
xchg
inc
outsl
jae
mov
ljmp
adc
sbb
out
push
inc
cmp
and
jns
xlat
jne
cmpsb
mov
sbb
lock
outsb
jge
lahf
out
cmp
stos
mov
cmp
scas
dec
dec
dec
das
dec
inc
xlat
inc
movsb
sub
popa
out
push
push
pop
pop
jg
pop
adcb
jnp
jb
or
inc
movl
lcall
fwait
or
pop
call
sub
mov
pop
pop
mov
ret
mov
and
xor
pop
sub
inc
dec
add
lahf
scas
xor
xor
sahf
lea
mov
adc
dec
cmovno
mov
dec
and
or
idivl
iret
adc
mov
lods
jg
mov
decl
jns
ja
sbb
ljmp
pop
stos
pusha
mov
xlat
popf
inc
stos
xorl
push
xchg
and
movsl
sub
negl
rolb
dec
lcall
jo
shr
daa
ret
outsl
aad
mov
stos
inc
ljmp
pop
inc
das
xor
mov
lods
inc
es
xchg
inc
mov
sub
clc
icebp
fwait
or
push
movsl
cmpsb
loop
sub
push
bound
push
push
push
cs
cmp
sub
xor
fisubrs
aaa
out
es
push
out
pop
repnz
es
xchg
mov
and
inc
xchg
cmp
mov
out
mov
push
xor
jae
fs
fdivp
rcrb
dec
stos
push
je
xor
mov
pop
jg
shlb
lods
xchg
negl
inc
mov
scas
xor
push
xor
jne
imul
add
jbe
call
or
inc
push
mov
mov
jbe
push
dec
mov
bound
mov
shll
aam
mov
jp
inc
cs
lret
mov
cmp
push
xor
ret
shrl
ja
retw
pop
jmp
inc
data16
xor
mov
lcall
sarl
out
out
inc
mov
adc
jo
cmp
cs
daa
jbe
push
push
mov
mov
pop
js
inc
out
loopne
fldl
packssdw
inc
pop
pop
mov
push
test
ss
outsb
pop
push
push
xor
mov
jb
das
inc
pop
dec
es
js
lods
loope
add
and
scas
mov
pop
push
sysexit
mov
adc
dec
cs
sahf
push
outsl
push
in
jecxz
cmp
cli
push
push
insl
sub
jnp
push
scas
push
insl
mov
inc
ja,pn
fisubrs
cli
xor
push
jp,pt
jp
pop
or
jnp
ds
mov
loop
xlat
jg
dec
das
xor
xchg
xchg
jp
pop
outsl
pop
outsl
cmp
push
dec
xor
xor
mov
outsl
or
or
dec
cmp
add
arpl
pop
xor
jne
sbbb
inc
mov
push
sub
jecxz
jo
adc
pop
inc
xchg
sbb
jnp
adc
add
mov
xor
inc
das
add
fistpl
pop
pop
ja
imul
fildl
ja
pop
in
scas
mov
pop
pop
ret
or
rclb
inc
sub
sbb
inc
sbb
inc
mov
ret
divw
out
lcall
adcl
imul
testb
inc
inc
add
adc
add
xor
sbb
lcall
sub
int
jae
fs
inc
sbb
lahf
inc
cmp
pop
repnz
cli
imul
sub
mov
xorb
adcl
xor
mov
outsb
mov
stos
bound
imul
sbb
addr16
adc
add
cwtl
or
mov
jmp
push
adc
outsb
insb
outsl
popa
fs
outsl
test
fwait
js
dec
jg
mov
sbb
das
pusha
adc
jge
sub
xchg
pop
xchg
inc
lds
mov
mov
add
add
js
mov
push
xor
pusha
shrl
xlat
add
inc
inc
add
xchg
mov
je
sbb
push
xor
orb
add
stos
test
mov
xchg
jae
push
mov
icebp
pop
jmp
xor
into
xchg
or
push
cmp
out
iret
repz
adc
and
out
sahf
add
adc
mov
in
es
pop
pop
in
pop
ja
jle
pop
pop
pop
pop
cmp
jne
jo
arpl
xor
je
ja
xor
push
mov
push
es
mov
popl
das
test
pop
les
fcoms
imul
icebp
outsl
jle
mov
jg
lahf
ss
xchg
fcoms
sbb
incl
sbb
orb
push
pop
add
sub
or
pcmpgtb
fildl
aas
call
add
out
sub
mov
sub
iret
mov
daa
xchg
roll
mov
cs
fsub
push
addr16
test
inc
movsl
sbb
and
push
mov
and
push
inc
fwait
iret
dec
cmp
adc
jo
loope
pop
popa
fldt
inc
inc
sbb
repz
lds
xor
xor
pop
mov
ja
inc
push
and
jmp
mov
push
out
inc
les
cs
pop
dec
adc
sub
push
jl
jns
mov
aaa
iret
je
add
or
pop
mov
outsb
dec
push
pop
rclb
or
lea
mov
lcall
scas
cmp
add
mov
outsl
outsb
shrl
fbstp
sub
cltd
lea
call
and
mov
insl
pop
adc
push
cmp
dec
xlat
das
jo,pn
inc
sub
mov
lock
inc
jmp
std
pop
test
mov
dec
dec
test
pop
pop
loop
xchg
addr16
aas
sub
subb
xlat
aam
xchg
movsl
lret
jbe
fidivrl
ss
lret
push
push
mov
pop
or
sbb
dec
inc
push
add
inc
dec
or
cld
mov
pop
shlb
mov
mov
mov
and
mov
add
adc
idiv
call
cltd
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
adc
mov
pusha
or
mov
sub
sub
pop
repnz
mov
sbb
mov
ds
pop
sbb
lods
sub
and
jle
jo
fsubs
push
pop
test
xor
dec
xchg
pop
rorl
pop
adc
rolb
push
and
push
xor
mov
or
repnz
ja
push
pop
cld
rcrw
add
xchg
js
mov
fsubs
push
repz
addb
jle
sub
push
jae
xchg
xchg
dec
in
fcoml
int3
and
mov
jb
pushf
cld
mov
daa
iret
leave
jae
xor
cmp
pushf
cmp
dec
dec
cmp
fdiv
pop
sub
outsl
sbb
outsl
lods
addb
out
pop
rolb
lcall
out
pop
inc
mov
js
decl
aaa
call
inc
dec
test
xchg
shll
push
repz
pop
jnp
inc
jmp
sbb
bound
lret
fiadds
mov
xchg
cmp
sub
aaa
sarb
mov
cmp
addr16
fwait
inc
adc
out
jno
cmpsb
jp
mov
cwtl
scas
bound
jnp
rolb
jmp
push
jne
daa
dec
push
pop
popa
bound
ret
imul
cmp
popa
outsb
imul
cs
pop
inc
adc
adc
lahf
test
push
inc
add
xlat
and
sub
mov
scas
pop
sbb
loopne
xchg
dec
xlat
pop
dec
inc
xorb
push
rcr
jp
je
add
jecxz
rclb
das
dec
stos
adc
jg
test
jb
pop
inc
sub
arpl
out
mov
pop
mov
aas
faddl
popa
jg
xlat
and
fiadds
mov
mov
cs
inc
add
mov
xchg
nop
and
xlat
push
mov
out
pop
pop
mov
sub
jnp
cmp
dec
gs
pause
mov
push
cmp
jge
imul
push
out
jae
pop
jp
aaa
push
pop
je
or
jbe
insl
lea
movq
jle
or
and
outsl
sbb
pusha
aaa
dec
inc
arpl
push
dec
cmpsb
or
out
aad
clc
shrl
cmpl
mov
das
pop
idivl
scas
cmp
push
sub
jl
and
adc
cmp
outsb
nop
push
mov
test
jnp
xchg
test
push
dec
aaa
sti
mov
mov
cmpsl
pop
sarb
je
push
mov
dec
jne
adc
fdivrs
inc
scas
stc
sahf
and
outsw
and
cmp
inc
lds
cltd
pop
rcrb
rcr
daa
lds
pop
in
mov
fs
fsubs
iret
cmpsl
fldl
fst
or
iret
xor
push
mov
fs
out
mov
mov
sub
jb
jns
cmp
or
xor
push
pop
jns
repz
add
lret
icebp
jns
sbb
mov
xchg
jns
fwait
iret
dec
inc
sub
out
outsl
testb
in
lds
adc
jnp
ficoms
aaa
mov
push
movsb
push
mov
mov
std
or
push
into
iret
jnp
testb
inc
pop
pop
push
insl
push
orb
dec
stos
cmp
inc
pop
inc
pop
inc
movntq
xchg
jle
shr
mov
sub
fiadds
xchg
movsb
push
lret
fst
mov
fldcw
dec
repz
jmp
mov
ss
jbe
insl
push
add
popw
push
jnp
andb
out
jns
daa
inc
hlt
inc
pop
jl
repz
inc
popf
push
push
std
jg
xor
lea
lret
adc
dec
gs
cmp
jle
shl
xor
int
lahf
stos
pop
xor
push
sbb
cmp
jg
sbb
outsb
sub
stc
cmp
scas
and
cmp
iret
repz
mov
cld
pop
cmp
out
inc
push
mov
repz
outsl
cmp
int
out
push
cmp
inc
addr16
repz
subl
cld
mov
and
jg
dec
sbb
scas
sub
pop
ss
adc
stc
add
fwait
icebp
out
adc
adc
push
mov
xor
adc
sti
pop
mov
pop
mov
scas
int
lds
mulb
ds
loop
and
push
pop
rol
fmuls
mov
fsubs
int3
push
and
pop
sbb
enter
aas
cmp
adc
or
adc
pusha
or
add
xchg
push
jb
add
stos
xor
mov
dec
mov
es
in
les
shlb
fadd
xlat
out
push
in
xor
iret
mov
loop
lock
outsb
jp
xor
in
out
js
xor
fstl
insl
gs
cmp
xchg
clc
cmpsb
push
pop
pop
pop
add
xchg
je
xchg
test
stos
test
fstpl
dec
imul
mov
fisttpl
pusha
popf
push
bound
inc
xchg
push
dec
or
adc
add
in
push
popa
je
popa
mov
dec
add
mov
mov
fidivrs
push
ficoml
cs
sub
xor
daa
jb
push
test
imul
sbb
inc
ljmp
lahf
mov
sub
push
mov
push
mov
sbb
adc
cs
rcrb
mov
jo
push
jo
fs
test
lahf
jno
loop
dec
inc
jecxz
stos
mov
pusha
outsb
insl
xchg
lret
sub
sbb
in
out
xchg
mov
cmpsl
ret
sbb
popa
push
jb
xchg
dec
mov
xor
push
add
add
sub
dec
inc
pop
or
fs
add
push
arpl
add
mov
xor
add
cmp
sysexit
xchg
adc
ret
mov
push
insb
adc
jno
mov
adc
inc
std
jbe
jo
xor
idivl
sub
push
outsl
imul
jnp
dec
and
addl
mov
pop
mov
aaa
push
jnp
and
adc
mov
ret
addr16
jo
and
scas
sbb
xor
rorb
mov
popa
mov
and
add
lea
aas
sbb
dec
adc
add
outsl
mov
sbb
or
lds
jmp
je
mov
sub
adc
iret
das
scas
inc
or
arpl
das
rcrb
push
pop
les
notb
inc
mov
addr16
fwait
inc
xchg
testb
iret
and
and
fs
mov
add
das
and
cmp
stos
dec
sti
ja
push
jne
mov
mov
push
daa
jg
push
adc
xchg
push
sub
ja
push
push
push
aas
data16
jl
lods
fcmovne
jbe
insw
mov
aaa
imul
push
mov
mov
ret
out
xchg
das
imull
cs
das
mov
fbld
jb
mov
pop
test
add
mov
mov
pusha
push
dec
test
add
jmp
test
inc
ret
pop
mov
ret
imul
mov
js
jmp
scas
out
jbe
stos
xor
fadds
pop
adc
add
mov
negb
dec
repnz
xchg
add
push
push
xor
mov
lahf
add
lods
sbb
pop
in
push
in
cmp
inc
pop
sbb
stos
lret
pop
dec
jae
or
push
pop
add
cmp
mov
sbbl
imul
inc
sbbl
jle
lcall
fwait
mov
cmp
inc
push
pop
cmovae
pop
inc
pop
aaa
xor
mov
inc
dec
cli
xor
pop
ret
dec
add
lods
call
out
ret
push
scas
test
add
in
sti
add
inc
ja
adcb
push
add
sbb
inc
pop
cmc
ja
xlat
and
addb
lret
push
in
das
adc
and
stos
or
in
jle
out
popa
insl
jo
je
add
ja
outsl
movsb
addr16
jo
jae
daa
pop
jno
outsl
bound
jne
and
push
or
bound
dec
test
pop
sub
jge
mov
xchg
je
jne
or
or
test
scas
sbb
pop
dec
jl
pop
shr
daa
mov
inc
or
out
ds
call
dec
cmova
mov
cmpsl
addb
imul
outsb
and
push
clc
popl
jo
dec
cmp
sub
cli
sub
dec
mov
xor
pop
aas
testl
pop
stos
add
and
xor
push
cmp
dec
or
mov
lods
jg
pop
adc
mov
sub
pop
into
dec
jle
lock
sbb
jmp
rolb
adc
lods
and
or
mov
rcrl
adc
inc
insb
paddusb
push
fidivrl
jb
jo
sub
iret
jbe
ret
mov
ret
or
xchg
ss
xlat
mov
add
out
push
call
outsb
or
aaa
inc
insb
mov
das
push
dec
sysret
daa
and
insb
jbe
add
loope
lcall
jb
out
dec
lock
push
adc
scas
pop
and
mov
inc
dec
push
xchg
add
mov
inc
sub
push
jg
ret
adc
fsubr
jle
add
xchg
jae
add
addb
inc
dec
add
fstl
ja
incl
and
and
push
push
sbb
mov
and
ds
das
sbb
imul
add
pop
daa
popf
fldcw
and
sti
mov
inc
inc
inc
push
inc
pop
and
or
aas
js
insb
cwtl
mov
xor
add
mov
outsb
add
pop
push
lods
push
adcb
insb
pop
gs
sbb
ds
jo
sbb
pop
out
pusha
sbb
push
add
jp
push
add
adc
push
dec
adc
dec
loopne
mov
iret
std
mov
es
push
pop
mov
imulb
cwtl
jno
mov
push
pop
mov
sub
push
xor
mov
int
add
push
dec
sub
rcrl
lds
jnp
sti
sahf
xchg
addb
pop
push
jo
scas
test
sbb
dec
loopne
sbb
pop
jae
psubq
jmp
pop
jb
add
xchg
push
stc
mov
popf
outsl
jecxz
fdivs
outsl
cmpsl
push
pop
mov
daa
incl
in
push
or
sbb
pop
push
push
inc
mov
sbbb
add
insb
bndstx
push
rolb
mov
push
pop
gs
and
push
js
push
imul
push
cwtl
inc
popa
jg
outsl
and
and
fmul
shlb
push
es
pop
pusha
je
insb
jns
test
xchg
fidivl
movsb
outsl
je
mov
popa
stos
imul
and
enter
sub
push
lock
and
inc
dec
inc
jge
data16
and
push
or
andl
in
test
je
mov
sub
popa
adc
pop
add
xor
outsl
insl
jne
pusha
push
xchg
jbe
pop
fiadds
les
lods
bound
addr16
cmp
and
push
inc
je
bound
mov
inc
insb
pushl
push
push
inc
mov
dec
imul
inc
xchg
mov
outsl
out
pop
sbb
sahf
dec
push
sub
adc
jno
ret
orb
inc
or
sti
mov
inc
xadd
sbb
inc
cmovo
add
inc
mov
cmp
fisubrs
nop
jo
maxps
loopne
sub
pop
and
test
inc
inc
mov
mov
pop
jecxz
mov
xchg
call
das
sbb
iret
mov
mov
iret
push
movsb
lock
daa
ds
sahf
negb
testl
daa
in
negl
lock
or
inc
inc
or
lods
jbe
xchg
outsl
pop
iret
mov
adc
sub
add
pop
lods
mov
test
jo
outsl
inc
js
test
sub
outsl
inc
mov
mov
enter
data16
ds
fcomps
adc
push
adc
in
jns
hlt
dec
int3
scas
fists
sti
data16
add
mov
dec
jnp
xchg
out
push
cmp
mov
push
jle
insb
xchg
out
fnstsw
cs
sub
outsl
add
mov
lahf
add
loopne
push
jb
scas
lock
add
add
xchg
int
xchg
dec
xchg
int3
pusha
repz
xchg
sbb
mov
xchg
push
rclb
nop
stos
xchg
js
les
jns
aam
cmp
lahf
or
or
and
sub
xchg
push
outsl
xchg
xchg
pop
insb
pop
and
mov
test
mov
aas
add
test
or
hlt
lock
js
lods
push
push
push
inc
daa
nop
int
mov
xchg
push
sbbl
inc
lock
test
xchg
mov
cli
pop
enter
xchg
mov
jl
loopne
lock
inc
xchg
js
lahf
or
les
xchg
cwtl
fdivs
and
push
lods
xchg
lahf
lods
push
push
xchg
and
xchg
fiaddl
inc
xchg
outsl
add
movsb
ja
iret
mov
dec
dec
loopne
pop
and
out
in
div
loopne
es
xor
and
xor
scas
mov
push
nop
push
inc
das
or
enter
data16
mov
fmull
lahf
lds
pop
rol
and
iret
rcr
pop
shlb
lahf
mov
push
mov
pusha
mov
daa
jl
addr16
repnz
push
mov
insb
xchg
pop
pop
adc
outsl
cmp
repnz
les
pushf
les
mov
hlt
xor
es
adc
int3
xchg
in
sbb
ljmp
stos
jne
scas
add
in
pop
in
mov
jl
aas
mull
out
dec
push
lahf
mov
push
cld
mov
mov
inc
dec
add
lods
sar
dec
enter
sbb
rolb
jb
hlt
dec
cltd
add
hlt
inc
lcall
pushf
pusha
mov
out
mov
or
pushf
push
in
orl
inc
ds
jb
jl
lcall
pop
lahf
jl
bnd
ja
test
pushf
pop
enter
test
jo
jae
rcr
add
leave
inc
xchg
fwait
out
push
lahf
or
cld
xor
inc
push
push
cmpsb
mov
push
enter
sub
test
dec
mov
push
cmpsl
test
jae
iret
push
fsubr
cld
clc
enter
push
fmuls
clc
pop
js
pushf
lcall
or
push
push
pushf
cmpsb
cmpsl
js
bnd
jg
movsb
adcb
inc
cmpsl
movsb
nop
out
cs
mov
clc
in
ss
in
aam
mov
popf
lods
jge
inc
cmp
dec
push
mov
mov
cmpsl
jg
cmp
jns
in
mov
and
cmp
iret
jae
iret
push
enter
push
pop
nop
and
das
xor
inc
mov
mov
sahf
lahf
dec
das
ja
nop
addr16
mov
cs
mov
or
aam
add
outsl
inc
ss
adc
adc
and
xor
aad
mov
lahf
dec
lahf
ja
or
daa
sahf
fs
nop
or
inc
inc
filds
push
push
fcomps
xorps
cmpsl
mov
nop
iret
test
pop
mov
jmp
cmpsl
jg
nop
out
cmpsl
rcrb
fcom
hlt
andb
dec
repz
add
push
aam
addr16
cmpsl
test
mov
add
orb
adc
sub
cmp
pop
pop
daa
mov
xlat
addr16
out
adc
cmpsb
mov
test
iret
lds
or
cmpsl
sar
xchg
lods
js
or
and
cmpsl
cld
or
stos
clc
dec
enter
je
aas
mov
aad
push
cmpsl
jg
dec
cmp
test
mov
shlb
pop
enter
fldt
jae
clc
or
mov
dec
add
cs
mov
jb
mov
fwait
nop
iret
and
cwtl
mov
adc
mov
movsb
stc
pusha
insl
jg
adc
cs
lahf
dec
incl
cmp
inc
sbb
pusha
movsb
pop
push
dec
in
push
addl
pop
repnz
addr16
cmp
pop
adc
inc
nop
and
pop
repnz
add
mov
pop
add
nop
inc
loopne
es
mov
mov
ja
adc
insb
jmp
nop
movsl
push
test
and
jb
clc
loopne
or
pop
inc
or
fcomps
outsb
mov
lahf
dec
inc
ja
int
pop
pushl
xchg
cmpsb
shlb
call
es
inc
jle
pusha
jl
scas
sub
inc
jns
lods
sub
mov
lock
xchg
push
imul
mov
aam
movsb
fcos
mov
xorl
inc
ficomps
cmpsl
sbbb
push
in
add
pop
dec
repz
aam
or
lahf
dec
decl
lahf
mov
and
aaa
cmp
push
cmp
cltd
fsubrs
and
lahf
addb
mov
ja
lods
mov
enter
lods
out
or
fadd
aam
enter
test
mov
xchg
inc
clc
adc
test
insb
inc
mov
push
jmp
xor
mov
lahf
mov
aaa
and
push
and
cltd
push
ja
jl
iret
test
pusha
jo
enter
push
test
cmp
repnz
pop
enter
negb
lock
sub
and
test
stos
push
pusha
push
dec
lahf
ja
nop
out
sahf
xor
mov
mov
sub
xchg
outsl
insl
push
lret
inc
outsl
aas
xor
decl
sbb
inc
dec
sahf
jo
lods
pusha
adc
lahf
or
test
lcall
fdivrs
push
les
inc
lods
inc
inc
in
pop
subb
hlt
and
adc
js
call
outsl
lods
decl
dec
adc
lcall
mov
hlt
test
lods
mov
out
rcrb
rol
popl
adc
dec
xchg
loopne
daa
sub
js
scas
push
push
aas
daa
fnstcw
cmp
repnz
or
xchg
pop
add
lods
dec
in
add
scas
incl
scas
xlat
mov
stc
push
imul
sbb
and
push
xor
scas
mov
scas
ss
and
inc
mov
cs
ja
pop
scas
outsl
leave
jae
xchg
add
dec
test
pushfw
xlat
or
data16
push
fwait
call
scas
call
xor
ss
aas
pop
shlb
pop
out
lahf
fwait
mov
xorb
call
jb
and
inc
and
xor
and
sub
and
outsb
push
sbb
push
out
push
sbb
cld
mov
repz
cmp
es
push
aam
mov
repz
xor
les
repz
out
mov
ds
mov
cmp
cmp
push
push
cmp
jl
iret
add
or
mov
inc
cmp
enter
iret
mov
sbb
cmp
movsl
addr16
jo
shll
fbld
ss
sahf
out
xor
les
out
test
out
add
in
pop
jl
push
les
add
dec
xchg
jg
add
ja
popa
and
dec
pop
in
in
adc
inc
ret
pop
mov
pushf
inc
out
inc
dec
enter
sbbb
sub
xchg
xorb
popa
filds
inc
in
nop
or
lock
mov
loopne
lds
nop
xlat
ret
lods
pushf
cmp
mov
mov
leave
mov
pop
scas
add
push
or
out
dec
xchg
xor
and
out
inc
test
mov
mov
ret
push
lock
mov
scas
add
bound
fs
add
xor
popf
fbstp
pop
repnz
enter
outsl
dec
cs
adc
negb
outsl
sub
mov
push
xchg
sub
jns
call
mov
xchg
movsb
mov
mov
dec
pop
or
out
xchg
int3
push
or
mov
lods
fs
clc
mov
sub
addb
adc
adc
cmp
sub
add
jns
daa
push
mov
pushf
mov
lods
fidivrs
mov
add
and
sbb
xor
lods
jmp
dec
shl
push
addb
mov
xchg
or
je
leave
mov
outsl
out
sbb
cmpsl
mov
jbe
orb
cmpsl
movsb
inc
repnz
call
push
add
shrl
xor
outsl
xor
mov
sbb
dec
daa
addr16
pop
leave
add
ss
mov
lahf
cmpsb
sahf
add
mov
test
dec
test
inc
dec
dec
mov
pop
mov
xchg
mov
nop
pop
sbb
pop
dec
add
sahf
lahf
xchg
rolb
mov
imull
jbe
ret
fstl
push
lds
lods
push
outsl
jg
mov
jbe
mov
idiv
mov
push
in
inc
push
shlb
mov
in
mov
rclb
sbb
lods
mov
daa
cwtl
pop
push
inc
nop
and
int3
mov
xor
push
mov
ljmp
daa
add
or
lcall
test
dec
jo
hlt
mov
and
push
hlt
mov
pop
mov
xor
add
inc
mov
and
add
pop
add
mov
push
fs
aaa
mov
pusha
mov
imul
push
mov
pushl
int3
sub
add
add
in
dec
mov
mov
scas
mov
in
push
xchg
fs
sbb
xchg
jg
movsb
ja
xchg
cmp
jl
shlb
loopne
pushf
mov
add
adc
sbb
addr16
pusha
and
cs
dec
and
inc
fsubr
pop
inc
push
mov
pop
lods
in
aaa
push
jl
stos
pop
mov
sbb
cmp
shlb
sbb
cld
ror
jb
aaa
add
subb
xchg
roll
add
sub
mov
jl
xlat
add
or
push
sahf
iret
fs
sbb
mov
or
daa
or
div
pushf
sbb
or
push
xchg
pop
dec
push
sahf
out
lahf
inc
mov
push
cwtl
jl
or
mov
pushf
outsl
test
mov
or
xchg
sub
mov
addr16
cmc
and
push
lock
ret
shrb
outsl
add
or
movsb
aaa
mov
push
push
pusha
not
adc
xchg
xchg
add
sub
add
jecxz
rol
inc
push
xchg
pop
push
les
scas
add
sbb
xchg
pop
add
add
and
inc
pop
and
rcrb
or
ret
leave
in
mov
fs
or
push
enter
cmpsl
fistpl
addr16
sub
xor
sub
addr16
arpl
jno
fists
sahf
test
dec
push
movsb
lds
dec
divl
inc
bound
jp
outsl
xchg
lock
adc
das
mov
je
inc
cltd
or
aaa
je
add
nop
jo
and
test
enter
ror
cmp
shl
lods
mov
push
ja
enter
or
push
sub
je
jl
or
in
mov
clc
pop
decl
in
xor
mov
mov
push
insl
push
jo
jp
inc
push
fldl
pop
out
cmp
jnp
mov
out
sahf
pop
mov
iret
repz
jbe
jmp
or
cmp
popf
lret
int
in
or
push
jp
iret
mov
mov
pop
mov
add
sub
iret
mov
push
or
push
push
xchg
mov
aam
andl
hlt
repz
out
arpl
mov
repz
xor
stos
out
adc
cmpsl
in
cmp
sarl
jo
stos
jns
out
loope
addr16
andb
or
dec
outsl
idivl
iret
cli
imul
sahf
out
push
jnp
shl
sbb
cmp
roll
lea
repz
ss
push
lea
int
imul
lcall
imul
rcrl
jno
repz
out
icebp
es
test
imul
jae
imul
sahf
lahf
fstl
je
push
mov
insb
ds
repz
jne
lret
add
ds
shrl
mov
repz
out
test
repz
jns
stc
cmp
dec
test
pop
jp
iret
sarl
aad
jnp
lret
repz
jge
jae
out
cmp
shrl
cmpsl
stc
cmp
or
ds
sarl
xor
ljmp
sub
add
and
jns
cmpsl
stc
adc
loop
cmp
repz
mov
jl
cmpsl
push
mov
out
ds
lods
lock
cmp
sbb
or
mov
mov
repz
jne
xor
repz
nop
xchg
stc
pop
xchg
addr16
cmpsl
stc
cmp
adc
iret
sarl
aaa
jb
clc
jl
cmpsl
stc
push
xchg
jle
hlt
daa
xchg
cmp
into
rcrl
jo
aas
mov
out
idivb
mov
cwtl
lds
cmpsl
stc
adc
xchg
jl
cmpsl
stc
or
pushf
imul
popf
xor
int
outsl
int
adc
cmp
out
test
fidivrs
cmpsl
inc
xorl
lcall
xlat
adc
lahf
movsl
push
push
cmpsl
iret
repz
loop
cmpsb
pop
xchg
xchg
iret
sarl
les
test
lds
int
jns
test
stos
push
sahf
out
cmp
into
or
sarl
pop
fldcw
out
xor
mov
out
ss
mov
jmp
fldcw
mov
ret
ds
or
sbb
mov
les
ds
mov
push
adc
cmp
mov
fwait
pop
rcl
fnsave
add
nopl
cmp
es
mov
aas
aam
jns
mov
sub
xor
int
mull
jmp
sub
or
xor
pop
aaa
jl
inc
pop
mov
cmp
cmp
mov
leave
or
das
fs
dec
imul
jns
pop
xor
fmuls
ss
jl
dec
mov
adc
mov
and
cmp
aas
xchg
jg
inc
jo
jns
xchg
jmp
das
and
cwtl
inc
pop
and
cltd
loop
cmp
aas
rcrb
shll
ret
xlat
pop
dec
mov
adc
push
loopne
imul
outsl
cmp
das
inc
dec
and
xchg
out
inc
icebp
mov
insb
into
repnz
nop
cmp
jo
aas
inc
sbb
jnp
and
and
in
pop
jnp
enter
popf
push
inc
pop
dec
insb
mov
daa
nopl
sarl
ficomps
inc
pop
fucompp
daa
insb
push
add
fildl
mov
or
shl
inc
push
adc
pop
push
enter
lahf
cmp
inc
dec
xchg
pushf
dec
dec
pop
dec
sbb
sub
adc
xchg
sarb
fisttps
dec
inc
ffreep
rolb
pop
mov
fiaddl
ds
cs
push
pop
xorb
hlt
inc
paddsb
cmp
clc
shlb
pop
fwait
pop
loopne
add
rcr
pop
mov
mov
jb
cltd
or
inc
dec
cmp
ret
fnstsw
adc
push
dec
xchg
pop
inc
addr16
adc
cmp
mov
dec
test
mov
fcomps
push
dec
jmp
loope
icebp
addr16
ja
xchg
enter
push
fistpll
cmp
cmp
pop
jo
cmp
pop
pusha
mov
adcb
aad
pushf
xchg
xchg
mov
cmc
std
out
sbb
add
inc
pop
lds
leave
inc
jb
dec
test
stos
rclb
je
je
scas
inc
pop
push
fwait
sbb
mov
mov
dec
pop
leave
and
xchg
or
mov
popf
daa
add
addr16
leave
rcll
xchg
jl
jl
adc
add
cmp
jno
daa
and
jb
and
mov
pop
test
cmp
ljmp
or
push
ret
sbb
jge
test
cmpl
aam
inc
mov
pop
leave
xchg
iret
in
sbb
mov
fadds
rclb
in
inc
je
pushf
cmp
add
dec
pop
jb
mov
cmp
test
leave
ds
adc
inc
jb
test
pop
inc
xchg
pop
mov
pop
stos
push
loop
iret
cmpsl
push
add
pop
into
cmpsl
dec
cs
out
insb
hlt
push
mov
shlb
addr16
dec
hlt
dec
pop
cmpsl
push
pop
mov
in
and
jns
addl
stos
jp
fisubl
iret
popfw
lcall
int3
fisubrl
iret
sbb
hlt
cld
push
fistpl
add
xchg
dec
fcmovnu
insl
cwtl
dec
pop
cmpsl
push
daa
pop
dec
sahf
pop
ja
arpl
cmp
push
shrl
scas
cmpsl
push
xchg
pop
leave
mov
dec
dec
dec
dec
jmp
adc
or
sbb
inc
insl
divb
inc
pop
xor
cmp
cmpsl
inc
pop
pop
and
in
dec
pusha
mov
pusha
add
pop
ja
mov
andb
ja
cmp
push
add
jns
mov
sahf
out
sahf
iret
or
or
or
pusha
lret
inc
mov
femms
rcr
cmp
mov
popa
daa
dec
popa
push
popa
push
and
inc
incl
push
push
test
xchg
adc
out
dec
fcoml
in
jg
fnstsw
and
xor
and
inc
fmulp
xchg
cmp
test
inc
mov
mov
jl
das
cmp
enter
bound
bound
sbb
bound
push
bound
loope
xchg
bound
jne
decl
xchg
fildl
ficomps
mov
mov
pop
rcll
loope
aad
das
getsec
int
aaa
leave
test
cwtl
push
pop
mov
lahf
packsswb
pop
mov
push
sbb
imul
mov
add
daa
insl
push
mov
cmp
fisttps
add
push
push
mulb
adc
lods
popl
das
call
inc
das
pop
pop
fistps
and
dec
loopne
loopne
xchg
xchg
dec
shl
loopne
xchg
iret
dec
ja
incl
or
fs
and
and
inc
push
fs
mov
jno
mov
cmpb
fs
out
nop
push
in
loope
push
daa
cld
rclb
and
in
jns
loop
loop
ret
add
push
loop
das
mov
mov
push
gs
sub
rorb
loop
and
xchg
cmp
jecxz
push
daa
inc
out
pushf
or
daa
jg
daa
je
scas
mov
push
jg
gs
daa
mov
in
jecxz
xchg
aam
ljmp
jecxz
push
movsb
loopne
cmpsl
inc
inc
je
leave
sub
in
push
daa
sub
and
data16
push
in
jbe
daa
aas
pop
dec
rsqrtps
pusha
stos
lock
addr16
xchg
pushf
cwtl
or
add
push
shl
aad
out
jae
jg
mov
cmp
inc
repnz
in
dec
insb
scas
jg
xchg
and
insl
fmull
in
cld
cmovge
jmp
out
xchg
es
push
add
addr16
fcmove
inc
jae
ja
jae
imul
mov
nop
enter
aaa
add
dec
cld
out
out
data16
inc
jg
jmp
push
cmp
jb
adc
pop
nop
and
out
out
dec
leave
mov
mov
add
fidivrs
scas
shl
subl
repnz
fs
xchg
into
repz
pop
stos
push
add
outsl
push
add
add
push
jecxz
xlat
or
icebp
and
sbb
inc
jne
mov
push
imul
mov
lods
cmp
ja
push
jmp
ret
ja
pop
jb
imul
pop
jmp
pop
insl
lods
push
bound
addr16
cs
ja
mov
fimull
push
lret
and
adc
xchg
dec
pop
adc
xor
cmpsl
imul
mov
lock
and
test
test
adc
dec
addr16
mov
xchg
pop
and
test
aam
imul
in
pop
leave
mov
push
sub
in
jecxz
insb
ljmp
in
pop
leave
mov
insl
mov
dec
ja
pcmpeqb
test
lcall
jbe
xchg
dec
cld
icebp
add
lret
xlat
xchg
and
scas
daa
inc
in
sub
daa
push
out
inc
push
mov
inc
outsb
cmp
daa
inc
and
mov
in
bswap
mov
outsl
aam
adc
das
fwait
add
in
in
jp
dec
jb
scas
sub
sbb
xlat
cmp
adc
cmp
mov
push
push
aas
add
in
loopne
lock
rcrb
push
outsl
femms
daa
iret
repz
push
push
push
sub
inc
ds
scas
xor
or
xchg
pop
outsl
iret
cmp
enter
pop
lcall
pop
add
nop
adc
push
adc
xor
out
ja
outsl
mov
fwait
outsl
test
mov
outsl
out
mov
pop
mov
sti
mov
jae
jo
lock
mov
cmpsl
imull
not
hlt
pop
outsl
mov
ds
movsb
mov
push
push
out
mov
shrb
push
pop
insl
mov
xadd
dec
outsl
daa
add
out
movups
stos
insl
and
add
xor
fistpll
pop
push
pop
ja
jnp
add
sahf
ja
push
add
mov
fdivs
into
leave
add
add
jb
or
sbb
repnz
in
push
inc
push
xlat
push
add
cmp
jne
jge
push
mov
dec
cs
dec
enter
call
jae
xchg
shl
das
jae
and
push
stos
adcb
push
lahf
repz
jo
scas
and
mov
pop
shlb
mov
mov
inc
clc
lock
dec
pop
ds
sub
pushl
je
je
sub
ja
shr
call
lea
mov
pop
hlt
lret
push
pop
movsb
push
cmp
into
inc
lock
addr16
dec
jne
cltd
lea
cmp
and
add
dec
jne
push
jne
outsb
pop
leave
cmc
andl
stos
add
adcl
in
andb
mov
adc
add
sbb
sahf
fcmovne
repz
xor
sti
sarb
pop
das
imul
or
jg
mov
sahf
out
adc
mov
jbe
shl
inc
fsubr
push
pop
add
leave
test
push
ja
es
mov
loope
negb
ja
mov
add
jb
jp
jae
cmp
add
add
pop
mov
lcall
mov
mov
adc
addl
pop
testl
xchg
pushf
cwtl
imull
push
les
js
push
js
fidivrl
add
aad
testl
cmp
outsl
xchg
push
clc
filds
lret
out
xor
insb
clc
out
xor
shl
pop
mov
add
les
inc
dec
and
cld
clc
push
jns
sbbb
in
push
mov
mov
cmpsl
jge
inc
pop
in
xchg
sbb
stc
stc
pop
jl
cmpsl
cmp
or
iret
insl
jns
jne
lcall
stc
mov
outsb
pop
and
test
mov
jns
in
xchg
adc
pcmpeqd
or
call
xor
and
inc
leave
inc
mov
push
pop
add
xlat
pop
push
addr16
add
sahf
cmp
repz
add
pop
mov
mov
push
add
sti
xchg
cmp
push
pop
jno
pop
and
jnp
out
add
add
dec
cs
mov
jnp
xchg
lock
filds
jnp
cmp
repnz
or
leave
inc
repnz
in
mov
pushf
dec
pop
xor
sbb
jb
add
jl,pn
cmp
dec
jl
mov
pop
jl
jl
jl
pushf
pop
mov
sahf
test
mov
mov
out
jb
out
aas
idiv
incl
xchg
adc
or
and
jge
add
dec
ja
jbe
leave
leave
pop
arpl
out
push
jge
iret
fisubrs
mov
rorl
jge
xor
in
adc
daa
pop
pop
hlt
cld
pop
add
lahf
iret
dec
xlat
fisttpll
xchg
adc
scas
push
push
inc
stos
mov
and
jle
xchg
out
pop
cmp
inc
dec
or
sahf
out
push
or
xchg
out
insb
adc
jne
out
test
mov
adc
push
xchg
push
pushf
movsb
jle
out
es
iret
sbb
inc
push
pop
xor
jb
jle
or
jg
jmp
xlat
hlt
cmpsl
iret
jmp
push
js
xchg
iret
mov
jg
mov
movsb
test
std
add
pop
mov
xor
mov
in
add
push
outsb
rorb
inc
fists
push
jmp
inc
test
add
pushl
push
outsb
pop
leave
adc
in
addr16
pop
or
pop
ja
add
or
pop
add
jg
out
setp
daa
fstpl
cpuid
stos
mov
xchg
cmp
mov
ret
mov
cmp
psrad
rorb
cmovle
add
arpl
andb
outsl
fsubr
push
andl
pusha
aas
mov
pop
sbb
aas
ret
movsb
lret
rolb
or
mov
pop
andl
into
push
add
adc
dec
adc
es
aaa
je
adc
lahf
fldcw
fs
xlat
add
cmp
out
in
test
push
nop
adc
cmpsb
cmp
shlb
or
add
fildll
cmp
dec
push
outsl
pop
sahf
add
jnp
cmp
pop
or
add
iret
leave
leave
add
xchg
or
shrl
mov
ret
jae
js
hlt
daa
neg
add
incl
enter
mov
es
scas
add
mov
outsl
add
push
mov
lcall
and
push
add
mov
andl
jmp
nop
mov
subl
mov
or
int3
sbb
or
testb
push
mov
sub
push
add
push
add
repz
gs
add
repz
pop
mov
iret
repz
or
jb
rcr
iret
test
push
add
push
inc
or
dec
adc
sbb
xchg
lret
aas
popf
add
inc
filds
fsubl
adc
inc
pop
enter
push
cld
lcall
push
test
mov
jg
xchg
lds
lahf
xchg
mov
add
hlt
incl
fildl
in
add
loop
daa
daa
daa
mov
psrld
ret
lds
sbb
add
out
addr16
leave
leave
add
xchg
mov
iret
insb
je
jl
in
daa
test
add
clc
scas
push
jb
push
sarb
icebp
in
pop
jo
std
or
iret
adc
outsl
sbb
and
loope
xchg
movsb
cmpsl
dec
xchg
addr16
mov
mov
pop
pushf
movsb
fsubl
ltr
iret
sbb
ljmp
or
and
sbb
or
or
cmp
mov
mov
mov
pop
mov
rorb
mov
fsubs
ja
or
movsb
mov
test
pop
pushf
and
jbe
lahf
pop
lods
lfs
dec
inc
xlat
lahf
xchg
push
sub
addr16
add
xor
out
mov
mov
mov
push
ja
push
ja
jb
jb
popf
movsl
nop
jae
jb
enter
or
ja
call
mov
or
or
adc
and
ss
inc
mov
in
mov
cmp
mov
shlb
jae
loope
mov
mov
in
cmp
or
hlt
and
pushf
cmp
xchg
mov
mov
cmp
mov
xchg
add
cmpsl
jp
mov
cmpsl
fistpl
lsl
mov
je
mov
jb
lea
cs
push
xor
cmp
outsl
mov
outsl
decb
or
mov
pop
str
repz
pop
cs
in
in
daa
push
push
or
das
xchg
out
mov
subb
jl
lea
or
pop
hlt
or
jae
fmull
rolb
add
in
jbe
leave
loopne
psubb
bound
xadd
cmovbe
dec
push
or
push
cmp
inc
lahf
fcmovne
repz
add
dec
and
xchg
xchg
mov
add
mov
jns
lods
cmp
pop
jmp
or
sahf
std
enter
pop
adc
fwait
in
fsubl
mov
outsl
push
outsl
jnp
insl
and
inc
ja
adc
test
ret
fucomi
in
maskmovq
add
dec
sahf
out
add
sahf
leave
cmp
testl
dec
xchg
mov
out
push
mov
add
shr
loope
pop
jo
leave
jmp
or
and
sub
adc
xchg
xchg
lahf
lock
dec
xchg
mul
fisubrs
push
aas
push
iret
pop
cmpsl
dec
cs
out
rolb
setb
add
xor
and
outsb
cmp
mov
xchg
push
add
mov
adc
dec
pop
add
addr16
iret
leave
repz
add
add
jle
xchg
mov
leave
out
or
xlat
mov
ror
xchg
iret
daa
daa
pop
lods
je
hlt
cld
add
push
shlb
push
popa
dec
sub
jb
addr16
pop
xchg
fbld
es
iret
in
push
add
adc
dec
xchg
setge
insl
leave
lods
xchg
xchg
rcr
xlat
dec
dec
outsb
pavgb
lock
rcr
test
xchg
sbb
in
repnz
xor
cmp
decl
aas
adc
leave
adc
outsb
ja
xchg
pop
pop
mov
jmp
das
mov
test
leave
in
in
aam
pmulhuw
in
in
xchg
add
xchg
nopl
ss
ja
cmovp
push
ja
loope
pop
mov
push
cmp
mov
lea
add
jns
mov
pop
movsl
xchg
mov
cmp
test
and
mov
pandn
sbb
in
jnp
xchg
inc
sub
push
pop
xchg
xchg
xchg
xchg
xchg
pop
punpckhdq
xchg
cmp
xchg
dec
sahf
ja
mov
mov
dec
dec
rcr
pop
jle
ret
call
repz
xor
ds
outsb
pop
xchg
push
xchg
xor
dec
sbb
xchg
add
cmpsb
ja
lods
ja
fcmovne
leave
add
aam
fcoml
lahf
aas
in
in
xor
jbe
hlt
aas
decb
push
cwtl
push
fucom
jns
or
sbb
and
push
pushf
pushf
cmp
or
repz
pushf
inc
push
adc
cmp
bound
push
jp
ret
repz
sbbb
mov
sbb
lods
push
cpuid
in
mov
mov
ja
fcompl
ja
xchg
je
cwtl
jmp
cwtl
sbb
fsts
cltd
fisttps
test
dec
sarl
aas
dec
mov
add
cltd
lcall
es
or
notl
emms
fwait
push
add
shrb
lar
mov
lret
lret
mov
mov
shr
leave
rep
pand
or
iret
dec
pop
fists
sbb
jg
cmpsl
cmp
jns
ja
push
pop
jl
dec
cmp
lcall
aaa
movsb
aas
mov
loopne
ja
push
daa
enter
in
fs
mov
mov
cs
vmwrite
pusha
sahf
repnz
mov
jmp
and
add
add
ja
add
leave
repz
add
jns
lock
pop
mov
mov
daa
pop
pop
mov
xlat
pop
sahf
pushf
fsubrl
out
maskmovq
pop
pushf
jmp
xor
sub
push
mov
xchg
in
dec
jp
pushf
pmulhrw
jne
jge
test
push
lahf
sbb
xchg
xlat
or
sbb
sahf
xchg
dec
fisttps
add
inc
js
cmpsl
sub
jmp
adc
cmp
je
cmp
popf
xchg
fiaddl
fistl
das
les
inc
mov
and
mov
push
mov
fistpll
and
xor
outsl
push
xchg
outsl
movsb
popf
dec
sahf
out
fisttpll
mov
add
fildl
out
push
or
iret
repz
or
sahf
or
repz
sub
or
iret
push
cmovns
push
cmp
repz
pop
adc
repz
repz
adcb
push
xchg
pop
mov
repz
mov
ret
cmp
prefetcht1
push
adc
adc
adc
cmp
cmp
adc
push
or
sub
rolb
cmc
sahf
inc
sahf
mov
add
inc
ret
or
ds
pop
or
fsubl
inc
daa
sbb
jns
fdiv
xor
sbb
aaa
push
testl
pop
push
xchg
adc
or
daa
adc
sub
mov
loopne
sub
jb
jb
pop
pushf
movsb
lods
mov
mov
xlat
int3
lahf
mov
fs
or
and
mull
pop
insl
addr16
sbb
outsb
and
cvtpi2ps
pop
cmp
mov
push
push
push
pop
sahf
xchg
out
add
pop
fs
xor
insb
pcmpeqb
sahf
adc
addr16
mov
and
add
mov
mov
pusha
push
in
mov
pop
mov
popw
ja
mov
loopne
xor
cmp
dec
dec
cs
arpl
add
jnp
jmp
inc
sahf
cmpsb
mov
in
mov
xchg
sub
in
outsl
xchg
mov
add
or
add
sbb
and
push
or
dec
sahf
out
or
shll
aas
adc
mov
push
xor
js
pop
jl
jmp
daa
mov
or
xchg
mov
mov
mov
sbb
mov
loopne
xchg
add
orl
sahf
out
dec
sbb
add
add
out
es
cmp
push
add
cs
inc
cmovns
scas
push
mov
or
daa
divl
sbb
jo
push
iret
lods
cmpsb
mov
out
pop
iret
mov
xchg
lahf
cmpsl
scas
movzwl
fildl
bswap
mov
decl
jecxz
std
or
in
cmp
mov
pop
xchg
add
mov
daa
pop
sub
add
mov
sbb
iret
imulb
pop
movsl
nopl
mov
movsl
ljmp
pop
sub
lahf
adc
lahf
dec
add
les
ret
fildl
jg
movsl
dec
imul
xchg
pop
xchg
cmpl
xor
inc
pop
shl
xor
inc
aaa
pop
frstor
cmpsl
inc
or
add
add
fildl
pop
sub
pushl
dec
pop
sub
addr16
dec
dec
jbe,pn
sub
mov
mov
xor
add
sub
das
push
lahf
vmwrite
in
xcrypt-ctr
cmpsl
push
add
daa
daa
dec
aaa
clts
cmp
cmp
daa
daa
push
pop
gs
jb
repnz
ja
mov
call
mov
lret
lods
cmpsl
mov
mov
ss
fbstp
out
pop
push
leave
xchg
stc
xchg
mov
cmp
test
sbb
test
pop
push
jmp
test
pop
invd
fwait
cmp
in
imul
rcr
aas
jp
and
rclb
mov
cmp
sub
sbb
pop
cwtl
sub
dec
iret
inc
xor
lahf
mov
and
push
push
cs
test
add
outsb
scas
xor
pop
fistpl
mov
inc
add
loopne
popf
push
xchg
loopne
push
xor
jmp
pop
pop
test
pop
lahf
jae
test
and
mov
push
cld
aaa
pop
jo
fcomps
icebp
outsl
or
pop
push
das
jg
xlat
outsb
xchg
stos
cmovle
sub
ljmp
cmp
cld
iret
cmp
add
mov
pushl
push
adc
stos
inc
jle
cmpsb
daa
stos
pop
xor
push
daa
pushf
out
add
je
out
iret
push
push
pop
pushf
pushf
pushf
pushf
add
add
das
repnz
jecxz
fwait
adc
xchg
pop
adc
xor
mov
cmpsl
stos
out
fwait
dec
pop
fnsave
mov
sub
jbe
repz
pop
push
jae
es
aas
lods
mov
pushf
cmp
leave
adc
or
sub
gs
lock
xor
xchg
xor
pop
jne
mov
andl
mov
pop
loope
jmp
dec
icebp
pop
dec
pop
add
pop
or
pop
fstpl
ss
push
pop
mov
sahf
out
adc
adc
adc
movups
adc
mov
xchg
lods
sbb
pop
sub
mov
cmp
sbb
repz
dec
pop
push
mov
iret
cmp
popa
push
and
mov
jns
orl
repz
mov
xchg
sub
sub
daa
iret
repz
mov
repz
shrl
mov
lods
dec
push
add
jecxz
ds
push
scas
push
push
aas
cmp
repz
add
add
iret
repz
or
lods
test
push
or
leave
leave
leave
bound
jp
iret
leave
leave
orb
mov
adc
jne
pop
scas
mov
out
nop
sbb
fs
call
and
mov
stc
or
sbb
inc
ja
cmp
sub
cmpsl
add
scas
mov
scas
jmp
mov
xchg
xchg
scas
sub
dec
push
arpl
scas
pop
mov
pop
lcall
xchg
lahf
pop
mov
xchg
sub
pop
popa
push
ss
js
xchg
cmp
scas
push
jb
sahf
pop
stc
shrl
mov
add
fs
dec
sbb
pop
pop
sysret
das
or
mov
das
dec
dec
push
cvtdq2ps
jns
out
push
out
sahf
cltd
adc
sahf
out
mov
mov
sahf
out
push
jecxz
bnd
negl
pushl
or
sbb
daa
push
xor
cmp
repz
and
dec
and
iret
repz
data16
and
jp
test
xchg
iret
repz
sub
in
jbe
cmp
mov
fcmovnbe
jg
lahf
in
out
fcomip
fiadds
mov
mov
adc
and
out
sbb
and
sub
jns
out
xor
sbb
sbb
push
pop
add
bound
mov
adc
cld
push
mov
cmpsb
or
pop
inc
inc
ss
lret
jb
mov
in
out
in
mov
mov
hlt
mov
mov
mov
repz
push
mov
or
hlt
cmp
xor
cmp
pop
fs
mov
or
jns
push
adc
out
xchg
nop
adc
adc
adc
jns
mov
sbb
out
fcompl
out
repz
sahf
out
std
sbb
dec
sahf
out
push
pop
and
sub
das
cmp
push
mov
pop
mov
fwait
popf
popf
scas
arpl
push
sbb
iret
repz
mov
xchg
adc
mov
jns
out
mov
mov
sahf
out
int3
push
aam
sahf
out
sahf
fmull
or
or
sahf
out
hlt
or
or
or
adc
jns
leave
repz
cmp
and
js
inc
das
dec
mov
push
mov
push
push
outsl
outsl
push
jo
fildl
dec
sahf
mul
push
xchg
push
add
mov
or
mov
cmp
sub
mov
mov
or
mov
into
add
outsl
push
in
daa
iret
add
fcmovne
in
dec
andnps
gs
xchg
xchg
xchg
insl
jne
test
sets
mov
scas
movzbl
daa
daa
fsubp
out
push
cmp
sbb
or
scas
mov
pop
xchg
jl
pop
scas
daa
mov
sarb
cmp
or
dec
pop
push
add
cmp
jne
cmp
xchg
jge
pop
xchg
psrlq
ja
push
or
fmulp
scas
mov
push
mov
sahf
ja
push
adc
fisttps
out
pop
pushf
push
lahf
push
pushf
or
add
cmp
leave
das
cmp
mov
push
jae
jle
mov
in
sahf
or
cmp
mov
xadd
pop
in
sahf
out
adc
adc
repz
into
cmc
add
sbb
pushf
cmp
leave
and
sbb
inc
cmp
leave
repz
pop
push
gs
leave
repz
jo
jnp
and
mov
mov
cmp
cmp
push
cmp
jmp
shlb
jge
daa
mov
jb
jb
push
pop
arpl
icebp
cmpsb
js
mov
push
cmpl
das
xchg
mov
mov
ss
mov
daa
out
pop
ja
push
add
fucomip
clc
iret
jnp
daa
add
push
sbb
cmp
or
or
scas
fwait
prefetch
push
pop
pop
addr16
mov
jge
movntq
ja
push
adc
adc
sahf
push
mov
bswap
ja
fdiv
mov
sbb
cmp
push
sbb
pcmpeqd
vmaxps
jg
lahf
mov
insl
div
mov
psllw
jns
cmp
scas
pop
sub
sub
sub
out
xor
xor
cmp
cmp
popa
xor
xor
xor
mov
cmp
push
cmp
out
inc
cmp
push
cmp
insl
mulb
mov
xor
iret
repz
lea
inc
jns
fcmovne
cmpsl
mov
mov
add
lods
out
add
loopne
dec
adc
dec
inc
lock
xchg
dec
inc
inc
pop
dec
aas
add
out
mov
mov
lahf
pop
push
or
sub
add
xor
aas
mov
push
push
push
pop
insl
push
or
test
out
xchg
pop
popf
or
sahf
out
pinsrw
out
jns
adc
adc
notb
sahf
add
sbb
sahf
and
pop
sub
pop
dec
sahf
out
push
pop
sbb
out
jo
pop
outsb
stos
daa
daa
lods
mov
fbld
addr16
mov
vmwrite
leave
daa
clc
mov
mov
sarb
pop
push
scas
fsubrp
in
push
add
push
or
aaa
jns
push
mov
or
stos
push
push
mov
push
iret
repz
scas
int3
sarb
fldt
rcrb
shl
out
sbb
pop
push
adc
leave
repz
sbb
sbb
xchg
out
fidivrs
sbb
sbb
mov
jae
in
out
sahf
out
and
pop
sahf
and
mov
iret
repz
sub
sub
sub
out
outsb
daa
loope
negl
cs
fnstcw
mov
adc
sub
pop
push
xchg
dec
cmp
add
outsb
ret
out
push
add
add
in
in
xchg
aas
lahf
jg
lahf
scas
stos
pusha
or
in
in
fs
out
jg
adc
iret
pop
ret
pop
push
fsubl
lahf
mov
ret
hlt
or
ret
ret
jbe
mov
jns
pop
fidivrs
push
adc
lcall
mov
mov
adc
in
sahf
out
sbb
sbb
mov
les
les
iret
repz
xor
sub
cmp
les
les
jb
enter
insb
les
scas
add
sahf
testb
xchg
hlt
inc
and
out
jb
scas
and
push
inc
inc
mov
pop
mov
mov
mov
add
add
faddp
ret
outsb
pmuludq
pop
or
sahf
out
pushf
jg
or
or
jns
out
or
or
out
push
pop
adc
push
out
sahf
aaa
push
adc
dec
sahf
adc
movsl
push
push
mov
jns
fstpt
cs
mov
dec
sahf
sbb
hlt
ud0
dec
and
and
xor
xchg
xchg
out
push
add
enter
pop
das
pop
imul
fistl
jae
das
pop
wbinvd
ja
mov
or
jns
or
aas
ja
mov
push
adc
in
in
sahf
adc
adc
xchg
inc
iret
lcall
das
femms
sbb
pop
push
sbb
cmp
jb
push
push
cmp
cmp
orl
outsb
pop
aaa
imul
add
daa
pop
out
push
outsb
setl
add
add
mov
jg
leave
repz
rcrl
or
or
xchg
decl
dec
jns
push
jecxz
enter
and
xchg
out
sub
adc
fnsave
dec
das
push
pop
pfadd
out
daa
sbb
bound
insl
sbb
out
jp
test
cmp
push
and
add
dec
and
and
sahf
out
frstor
or
decb
or
dec
sub
or
add
cltd
jmp
pushf
push
aas
lods
dec
aaa
add
cmp
pushf
dec
mov
mov
pop
leave
addr16
outsl
leave
mov
mov
das
mov
jb
mov
mov
call
call
ja
jnp
dec
lret
pop
push
fucom
jns
or
or
cmp
or
or
fistl
popa
jae
dec
sahf
out
adc
stc
mov
push
sbb
sub
leave
repz
xor
ds
cs
xchg
out
push
sbb
xchg
out
mov
scas
rcrb
and
iret
jae
and
cld
cmp
es
int3
daa
adc
outsb
daa
fucom
push
sbb
sub
xchg
out
sub
jmp
xor
popf
cmp
cmp
cs
xor
jne
mov
out
orb
repz
lds
rcr
jae
mov
cld
aas
scas
push
leave
addr16
lret
inc
push
dec
loopne
int
mov
dec
jmp
scas
testb
int
jnp
gs
nop
das
and
mov
das
cmp
inc
rsqrtps
xchg
out
pop
push
jbe
subb
setbe
or
sub
mov
aas
rep
mov
bswap
das
fimull
in
pop
int3
sahf
cmp
lock
push
into
out
mov
ss
in
mov
inc
dec
xorps
and
popf
cmp
mov
mov
xchg
out
pop
psrld
repnz
repz
call
out
push
iret
pop
iret
pop
insl
das
cs
cmp
js
orl
xchg
cltd
movsb
xor
sahf
fsubrl
fbstp
push
or
adc
sahf
pushf
pushf
pushf
ss
dec
mov
sub
lds
ror
pop
orb
aaa
xchg
pop
add
jns
pop
outsl
rorb
add
push
jae
ja
movlhps
in
sbb
lods
push
sub
xor
bswap
jnp
inc
jg
adc
pop
pop
les
testl
lcall
bound
das
sbb
subb
xchg
push
cmpsl
push
push
mov
clc
mov
mov
lea
sahf
pop
adc
orb
pop
or
push
seto
aas
push
push
inc
inc
add
add
sbb
xchg
mov
sbbb
aas
inc
push
insb
pop
adc
lahf
xchg
mov
adc
into
pop
in
pushf
push
push
inc
mov
push
push
add
pop
aaa
xchg
outsl
fadd
add
push
movsl
cmp
in
push
pop
sbb
or
mov
or
jns
dec
outsb
aaa
or
imul
daa
in
jb
aaa
adc
and
sub
inc
packuswb
push
jo
push
mov
insl
popf
cmp
jae
and
jb
mov
andb
cmpb
in
cmp
leave
in
in
movsb
fbld
in
into
aas
xlat
sbb
data16
setae
mov
mov
jns
add
inc
cs
add
dec
add
or
test
subb
pop
push
enter
popa
fmull
jb
add
sbb
cmpb
aas
mov
pop
movsl
sbbl
ja
pop
shll
pmulhuw
jbe
inc
mov
inc
push
enter
mov
sbb
in
call
or
mov
ficompl
push
pop
fisubrl
xor
xchg
in
cmpsl
rcr
fsubp
stc
jb
jle
sub
insl
movsl
scas
out
pop
and
pop
sahf
out
sahf
pop
push
dec
inc
cmp
jns
out
and
adc
repz
out
add
repz
hlt
iret
repz
lock
call
in
repz
les
sahf
out
push
movsb
cwtl
nop
test
jns
out
jo
push
inc
sahf
ja
aam
add
cmp
xor
push
sahf
out
and
adc
repnz
out
fdivrp
push
fmul
mov
nop
jns
out
mov
repz
pusha
pop
pop
push
dec
inc
cmp
iret
repz
and
hlt
icebp
jns
testl
mov
out
or
ret
xchg
push
insb
push
inc
push
xor
and
test
push
adc
hlt
pop
add
jg
sarb
lods
push
dec
add
notb
incl
dec
les
push
mov
testb
push
jecxz
lahf
orb
push
cwtl
sub
lahf
cwtl
incb
xorb
mov
push
push
push
mov
mov
mov
scas
outsb
add
pop
pop
inc
xchg
pop
shll
add
loopne
inc
movl
add
sbb
arpl
mov
add
in
mov
mov
push
sbb
das
mov
int3
insb
outsl
iret
insl
inc
sbb
xchg
pop
mov
add
frstor
mov
rolb
negb
mov
sbb
add
out
mov
arpl
sbb
lahf
mov
push
sbb
cmc
cmp
fdivp
cmp
xchg
push
xor
sub
ds
or
cmc
cmp
add
test
out
sahf
out
movsb
and
jnp
or
lods
iret
repz
out
or
push
add
clc
jns
jns
pop
push
lock
decl
and
jns
out
and
and
add
jns
and
jo
dec
das
clc
roll
pop
imul
daa
xor
dec
testb
lods
test
incl
andl
fistpl
cmp
pop
js
mov
mov
adc
xor
dec
repz
fisubrl
cmp
xchg
out
sbb
mov
bnd
das
push
dec
cmpsb
adcb
fsubs
pop
pop
mov
inc
ds
cli
or
or
inc
ds
ret
mov
adc
cld
xchg
mov
mov
sbb
into
lcall
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
std
call
sub
mov
popl
cmp
cmpsb
iret
decl
js
mov
loopne
jmp
xchg
test
mov
cmp
inc
mov
lcall
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
jmp
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
jg
popa
loopne
push
movsl
mov
popa
sar
mov
fsubs
stc
xchg
clc
repz
mov
subb
fwait
xchg
and
jg
mov
ret
int3
add
aas
jno
or
frstor
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
call
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
push
icebp
cmp
int
mov
addr16
lcall
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
ljmp
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
sar
fstl
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
inc
xchg
mov
fmull
call
ljmp
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
in
xchg
jge
pop
ficomps
frstor
xor
or
xorb
inc
inc
mov
rcl
add
inc
je
inc
push
add
xchg
dec
inc
push
pop
cmc
movsl
idiv
and
dec
dec
inc
push
dec
inc
aaa
xor
jg
sub
insl
sbb
cmp
call
push
inc
dec
inc
jo
inc
popa
push
gs
jbe
imul
lea
pop
stos
insl
outsl
mov
aas
dec
insb
imul
dec
push
insb
mov
cmp
cmp
popf
movsb
add
inc
je
adc
cld
pusha
dec
push
inc
dec
push
loop
fsts
xor
addr16
push
adcb
nop
inc
inc
inc
test
lea
dec
inc
gs
gs
cmp
pop
inc
push
inc
arpl
xor
bound
mov
dec
and
bound
outsl
push
dec
pop
mov
push
push
xchg
call
sbb
stos
aaa
cmpsl
push
add
das
or
insb
fs
das
push
fmuls
shrb
mov
dec
push
lea
or
dec
inc
dec
daa
call
dec
jae
imul
xor
inc
mov
clc
cmpb
jns
dec
lahf
loopne
dec
push
push
les
push
cmp
data16
jns
xor
lods
dec
mov
pop
add
dec
in
inc
inc
je
or
sbb
out
std
rolb
ds
push
dec
dec
add
sbb
jbe
dec
test
push
mov
inc
mov
add
inc
cli
adc
outsb
arpl
cmp
add
dec
dec
pop
sbb
push
push
xlat
push
les
pop
mov
mov
or
inc
in
lcall
scas
inc
mov
dec
sub
mov
mov
addr16
pop
inc
ficoml
dec
push
loope
mov
jg
mov
push
push
push
push
imul
mov
mov
push
push
jb
lds
enter
push
adc
subb
xlat
mov
clc
jp
lock
push
inc
adc
lods
mov
repnz
jl
push
insl
cmc
mov
inc
arpl
push
pushf
nop
push
push
cmpsl
pusha
or
inc
push
out
jg
mov
sub
fisttpl
mov
pop
daa
movsl
add
std
add
and
mov
data16
add
fisttpl
xchg
outsl
outsl
ja
pusha
pop
es
or
pusha
pop
pop
stos
mov
arpl
aam
les
pop
add
sbb
push
stc
lahf
mov
ja
inc
shll
std
cmpsl
mov
push
mov
dec
scas
push
dec
je
xlat
dec
add
lahf
inc
test
sub
dec
lahf
popl
dec
adc
adc
adc
subl
aas
jo
nop
cmp
or
push
adc
or
cmp
out
dec
rsqrtps
xchg
dec
cli
push
dec
and
dec
dec
aaa
or
js
sbbl
sub
in
cmp
sbbb
dec
outsl
mov
adcb
push
jne
les
outsl
inc
roll
adc
add
movl
outsl
addr16
iret
mov
popa
or
addb
insl
pop
les
jecxz
cmp
addr16
xlat
fiaddl
out
jg
cmp
mov
xor
adc
fdivrs
cmp
pusha
inc
sub
mov
inc
out
faddl
mov
cmp
add
jns
sahf
cmp
ds
add
jns
outsl
push
push
daa
jmp
ja
popa
push
out
mov
les
hlt
push
xor
xchg
jmp
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
or
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
decl
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
filds
or
call
stos
lods
xor
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
pop
clc
mov
sub
mov
fdivr
decl
mov
jl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
pop
call
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
lcall
out
test
xchg
sbb
push
sub
insb
fs
add
jmp
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
decl
cmc
fnstenv
adc
mov
mov
bound
ficoml
gs
push
sbb
aam
pop
popa
mov
into
pop
cmp
in
jmp
xor
dec
xlat
xchg
fadd
shll
jmp
outsb
xor
mov
jmp
sarb
add
in
add
pop
dec
or
cmp
add
daa
adc
decl
mov
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
shlb
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
pushl
je
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
hlt
ljmp
test
push
or
push
in
decl
xchg
daa
scas
add
mov
lcall
shlb
add
inc
push
imul
xorb
ljmp
cli
insb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
out
mov
pop
aad
mov
call
xchg
shll
push
repnz
addr16
call
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
fbld
out
mov
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
incl
mov
das
es
lds
or
sub
mov
cmpsl
call
ret
dec
shlb
sbb
ret
es
pushf
mov
insl
add
jg
mov
ss
jmp
addr16
jb
push
push
dec
mov
loop
ljmp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
cli
mov
push
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
ljmp
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
ljmp
dec
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
pushl
mov
xor
mov
add
push
xlat
int
push
ficoms
hlt
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
aam
aad
cmpsb
out
add
pop
into
push
pop
pop
jp
mov
push
jg
add
jbe
cmpsl
outsl
inc
jne
insl
jg
shll
imul
insb
imul
sbb
je
jns
arpl
insl
lds
fsubs
pop
ja
or
insl
jns
sub
mov
inc
jne
outsl
insl
addr16
pop
mov
push
xchg
fildl
push
arpl
jle
ljmp
push
test
mov
rcl
cmovns
clc
inc
insl
bound
adc
or
sbb
inc
js
sbbb
push
dec
orl
jno
jg
dec
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
outsl
insl
sti
pop
xor
xor
or
xor
bound
pusha
xor
popa
push
inc
and
jl
insl
pop
sbb
xchg
xor
inc
shlb
push
add
ror
push
dec
popf
inc
inc
sbb
pop
adc
movsb
subl
int
sub
mov
push
jbe
arpl
outsl
push
or
inc
aas
mov
or
mov
push
adc
js
push
add
aaa
cmp
aam
stos
xor
insb
popa
xchg
push
dec
insb
sbb
push
xor
cmp
lods
addb
inc
loopne
aas
inc
push
ljmp
jg
aad
add
and
jae
popf
sbb
pop
int
pop
cmc
adc
in
inc
aas
dec
push
mov
inc
popa
add
fwait
sbb
inc
pop
mov
jo
inc
inc
add
rclb
push
ds
and
add
mov
iret
int
push
dec
dec
lea
xchg
andl
movsl
pinsrw
insl
lods
mov
movsl
gs
mov
dec
jge
xor
jne
xor
or
add
ss
push
mov
or
mov
aas
jle
stos
pusha
aaa
cltd
dec
or
popf
mov
imul
mov
inc
mov
pop
push
xchg
inc
mov
lahf
inc
dec
mov
or
mov
push
pop
adc
rclb
lds
jb
dec
add
frstor
push
js
adc
jo
sahf
add
lahf
aas
push
outsl
outsl
mov
mov
push
push
push
jno
inc
stos
and
in
sub
pop
shl
shr
test
pop
cmp
arpl
push
cmp
inc
and
mov
call
lea
lock
jns
jne
jo
das
inc
and
test
data16
mov
cs
insb
bswap
daa
add
or
bound
pop
dec
popl
test
push
divl
or
ret
xchg
jno
pop
popf
xor
shrb
push
sub
adc
jns
or
negl
dec
cld
nop
adc
loopne
xlat
dec
jo
imul
pop
and
mov
outsl
xchg
fisubl
xchg
in
aas
mov
mov
push
outsl
rcll
gs
xor
pop
insb
mov
push
loop
aaa
pushf
and
cwtl
jb
adc
dec
test
daa
push
inc
lds
aas
pop
inc
addl
and
popa
mov
lock
pop
add
fdivr
loopne
adc
dec
out
in
mov
add
fstpt
add
add
mov
add
pop
pop
push
or
or
or
or
or
inc
js
push
adc
adc
push
adc
adc
mov
movhps
push
adc
adc
adc
add
data16
mov
or
rolb
shlb
or
xchg
add
add
adc
xor
add
add
inc
js
mov
jb
pop
fdivl
xor
jge
call
jmp
xor
adc
pop
and
xor
inc
mov
adc
xor
cmpb
xor
cltd
and
test
jae
add
or
rol
mov
mov
or
add
adc
xlat
adc
or
mov
scas
xor
sbb
scas
pushf
into
add
adc
xorl
adc
push
adc
pop
popa
jno
add
int
and
adc
mov
or
xor
adc
shrl
icebp
mov
inc
roll
xorb
scas
fiaddl
or
or
inc
stos
js
push
call
les
or
add
lds
cld
cli
and
mov
decl
test
jge
ficompl
cmpsl
xor
mov
test
cld
mov
aad
std
movsl
jecxz
cli
pop
mov
adc
mov
xchg
jg
or
insb
sub
jmp
out
or
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
fbstp
mov
pop
mov
pop
pop
mov
popl
movb
xchg
lcall
scas
adc
mov
xor
lods
scas
xchg
test
aam
and
dec
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
mov
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
incl
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
add
out
or
cld
push
in
ljmp
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
cmp
mov
jmp
sbb
add
mov
dec
out
pop
jb
mov
or
push
mov
ficoml
fwait
sbbb
dec
jp
call
xor
gs
jg
hlt
push
add
mov
loope
mov
sar
andl
aas
icebp
testb
mov
push
push
pop
xor
jns
mov
in
repnz
jno
jecxz
decl
jg
scas
cld
or
push
inc
sbb
paddb
mov
sbb
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
std
decl
sbb
sbbl
into
andl
aas
loopne
cli
adc
aaa
xchg
sti
idivb
in
add
inc
adc
loope
fisttpll
out
mov
out
aas
std
cli
push
push
push
idivl
cmp
sub
jle
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
pushl
cmpsb
orb
mov
insl
fistpll
das
jmp
xchg
pop
clc
pop
hlt
lret
mov
add
lea
jg
gs
std
xorb
cmc
sub
imul
outsl
adc
ret
das
pop
pop
pop
shlb
lcall
in
sarb
sbbl
jno
or
sarb
ret
std
pop
les
cli
mov
mov
inc
arpl
mov
pop
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
ljmp
or
adc
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
ljmp
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
jle
call
xchg
or
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
pushl
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
clc
jg
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
outsl
incl
mov
mov
cmp
xchg
mov
cwtl
pop
xchg
ftst
pop
dec
push
pushl
xchg
and
jae
shrb
mov
and
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
pop
mov
push
iret
adc
pop
cld
addl
adc
and
fnstenv
push
enter
jecxz
scas
sub
cld
aas
clc
aas
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
pop
std
fildll
idivb
add
jg
mov
aad
test
bound
xchg
movsb
mov
iret
push
push
std
mov
sbb
stos
icebp
pop
incb
jno
adc
fdivr
mov
push
inc
jecxz
sbb
sarl
adc
loopne
sbb
sar
xorl
imull
push
cmp
dec
push
insl
ret
in
aas
mov
fsubrl
lock
decb
mov
and
clc
xchg
cmp
mov
jne
push
and
mov
adc
lahf
or
push
rcrl
rolb
pop
inc
jb
fistpl
pop
in
xor
adc
call
jno
pop
nop
ljmp
jmp
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
lcall
decb
imul
xor
dec
xor
fsubr
fistps
lds
fidivrl
jg
vmovshdup
stos
pop
add
dec
mov
sub
fidivrl
xor
lahf
les
sbb
sbb
cld
addl
call
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
pusha
sub
arpl
sar
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
xchg
das
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
pop
mov
pushl
add
mov
pop
shl
in
in
push
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
ljmp
push
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
out
push
add
ds
pop
adc
imul
jmp
outsb
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
std
mov
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
and
fimull
lcall
cwtl
inc
mov
insb
test
fldt
jo
aas
repz
sbb
lock
in
jmp
pop
clc
lods
out
sbb
aaa
clc
push
std
mov
loopne
sahf
or
mov
ljmp
out
dec
push
mov
fsubrp
dec
sahf
enter
incl
pop
fcmovb
inc
adc
inc
loopne
test
out
rolb
pop
inc
in
cmpsb
mov
pop
cld
or
dec
ss
pop
in
in
inc
lods
movsb
or
repnz
mov
pop
add
cmp
imul
mov
or
pop
in
cmp
jmp
mov
lcall
popf
jmp
hlt
dec
mov
incl
sti
sbb
xlat
inc
aas
mov
jg
mov
sub
das
sar
mov
sbb
cld
daa
jp
std
adc
cltd
push
mov
mov
ret
nop
cmp
das
incb
lock
and
pop
pop
div
cld
idivl
shlb
inc
and
loope
jae
jmp
shrl
je
jge
jg
ljmp
jg
stc
add
out
icebp
mov
loope
inc
mov
fisttps
sti
mov
fistps
es
or
das
jge
lock
out
cmp
call
xor
sbbb
decb
adc
mov
and
xor
adc
call
popf
inc
xchg
dec
or
cs
pop
nop
mov
inc
add
push
pop
aaa
inc
es
fisttps
mov
mov
cld
jg
xchg
fimull
jp
aas
icebp
ret
ror
sbb
aaa
loop
out
sbb
adc
mov
mov
inc
mov
pop
clc
loope
loope
mov
lahf
add
jo
add
xlat
rcrl
je
xchg
fldenv
iret
fdivrl
xchg
push
rolb
lcall
xor
decb
add
pop
gs
push
icebp
fbld
out
jg
jno
ret
pusha
mov
inc
arpl
pop
sbb
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
call
mov
ds
inc
mov
in
sbb
xchg
imul
call
outsl
jmp
std
mov
daa
jmp
add
sbb
mov
lods
fadds
mov
div
pop
stc
push
dec
out
fstpt
mov
enter
xchg
popf
pop
add
fsts
dec
or
add
push
dec
sti
push
sti
pop
inc
add
test
int3
or
nop
mov
aaa
sarl
test
and
loop
cwtl
in
decl
js,pn
mov
dec
jecxz
pop
rorb
test
js
xchg
aam
lods
arpl
jge
push
into
inc
jle
enter
ja
xor
dec
test
push
arpl
push
nop
push
test
pop
imul
repz
cwtl
jmp
leave
mov
jge
fs
mov
test
shrl
push
incl
jge
mov
ret
jg
pop
jp
lret
gs
mov
and
dec
movsb
cmp
sahf
inc
sbb
dec
call
mov
cltd
int3
mov
inc
out
pop
insb
lods
icebp
push
iret
lea
add
ss
push
push
dec
loope
call
xor
xchg
mov
lcall
push
jmp
call
dec
pop
sub
xchg
aad
dec
jb
dec
pushf
xchg
movsl
out
fbstp
mov
sub
call
mov
fcompl
cmpb
mov
dec
je
aam
cwtl
cmp
mov
in
sbb
sbb
sbb
mov
fcmovbe
adc
mov
sahf
cld
sahf
idiv
jg
xchg
inc
mov
xchg
adc
xchg
fnstsw
loopne
test
jl
add
cli
dec
addr16
rolb
cmp
cld
jmp
push
inc
add
fsubrp
adc
das
xchg
push
xchg
popf
cli
jnp
mov
test
mov
or
dec
loope
jbe
nop
dec
mov
stos
insl
lock
push
pop
push
xchg
in
sub
int
ret
in
pop
mov
bound
and
enter
add
in
sti
adc
stos
in
mov
or
test
shll
ja
add
adc
ljmp
pop
push
subl
dec
cmpsl
mov
out
xchg
sub
ret
lods
push
sub
inc
or
kmovw
mov
loop
fisubs
xchg
sbb
call
pop
insb
xor
or
rcr
and
inc
cli
lock
mov
ljmp
out
out
xlat
push
jmp
shll
xchg
test
cmc
in
sub
dec
sbb
push
mov
inc
inc
push
orb
es
xchg
cmpsb
push
decl
xchg
jno
xlat
push
add
jae
pop
ret
pushf
add
idivb
mov
int3
daa
jmp
sub
fwait
test
and
dec
mov
or
ret
inc
stc
nop
cmp
adc
jnp
sub
call
pop
leave
push
fcomp
clc
movsl
xor
out
sbb
mov
out
or
lock
xchg
test
in
push
add
xor
add
mov
es
idivb
lret
and
inc
ja
scas
arpl
in
and
cmp
and
incl
jecxz
ficompl
lock
adc
idiv
aam
sbbb
mov
push
ss
icebp
in
dec
leave
fs
ljmp
cli
lods
out
bound
mov
xchg
into
and
test
xchg
cmp
push
push
jge
out
cmc
lea
fldt
sbb
cltd
mov
mov
mov
scas
in
mov
adc
sbb
fmuls
jl
roll
ljmp
and
lret
movsl
adc
mov
pop
cmpsb
fisubrl
aad
lret
pushl
shll
push
stos
lar
inc
das
sub
push
jg
pop
cmc
cwtl
ret
lds
ja
dec
pop
dec
arpl
cltd
sub
xor
inc
cli
lret
out
lods
cmp
mov
incl
lahf
xchg
push
maxps
cmpsb
shr
and
les
add
mov
xlat
jo
outsb
dec
dec
dec
scas
cmp
jge
ljmp
push
mov
and
mov
jb
sbb
popa
incl
pushaw
xor
inc
repnz
jle
cld
pop
mov
imul
sbb
xchg
pushl
or
movsb
inc
lods
aad
pop
mov
pop
cmpsl
roll
jmp
mov
cmp
xchg
and
fucom
leave
fcoms
inc
jno
mov
arpl
xlat
iret
fcmove
ret
add
mov
sub
scas
dec
andb
adc
xchg
cltd
fldt
sbb
jo
cld
push
cltd
call
mov
aam
push
hlt
inc
repz
mov
mov
fcmovnbe
adc
jmp
loopne
mov
ss
repz
lods
mov
xchg
mov
out
clc
test
lock
jae
sbb
mov
push
jmp
rcrb
ljmp
mov
cmc
mov
and
and
inc
pop
test
je
xchg
clc
mov
sub
negb
add
js
add
mov
or
imul
lcall
dec
leave
sub
aam
fwait
ljmp
inc
pushl
mov
mov
jnp
or
hlt
mov
in
sub
mov
jecxz
mov
sub
fwait
popf
int3
lock
sbb
decl
sbb
aam
jg
or
sub
shrb
ja
es
ljmp
fldt
sbb
mov
out
daa
sub
in
cmc
pop
xchg
pushl
aaa
pop
cmp
clc
les
push
adc
mov
pop
insb
movsl
pop
mov
add
sub
sbb
aaa
push
mov
mov
pop
cld
decl
inc
ljmp
dec
adc
aas
pop
int3
jg
aaa
inc
sar
add
push
pop
in
pushf
fmull
nop
incl
sarl
flds
jmp
out
lret
xchg
inc
sahf
ljmp
pop
insb
lea
inc
aaa
es
xchg
push
mov
test
jl
lods
lret
out
push
imul
fcoms
imul
sbb
xchg
jle
incl
cmp
mov
add
int3
js
ret
pop
leave
add
ljmp
mov
adc
jl
out
pop
cmpsb
mov
dec
push
cmpsb
and
jb
xlat
add
cmp
pop
xchg
ljmp
adc
in
mov
lret
fadds
inc
xor
fiadds
push
push
out
decl
hlt
push
and
fnsave
adc
in
xchg
lahf
popa
pop
fs
iret
mov
push
mov
add
pushl
dec
fisubl
jnp
adc
inc
mov
jmp
nop
lret
daa
outsb
outsb
and
or
aad
xchg
adc
out
aad
out
iret
rorb
iret
cmp
loopne
pop
sar
inc
mov
or
mov
decl
jge
cmp
fs
xor
cli
in
sbb
mov
jo
pusha
imul
call
jae
in
dec
rcrl
mov
xchg
fcom
test
call
sub
out
dec
push
jbe
dec
sar
jmp
lahf
xor
insl
mov
jl
mov
in
mov
rcrl
push
xchg
and
ljmp
dec
icebp
and
push
lods
movsl
out
sub
dec
test
pop
call
dec
mov
sti
mov
sub
std
int3
xchg
dec
xor
xchg
push
sub
call
adc
ljmp
xor
pop
jnp
int
jecxz
mov
xlat
cwtl
pop
sarl
push
jg
xchg
and
inc
testb
pushl
add
popf
and
xor
scas
out
push
mov
ja
cwtl
adc
ds
mov
mov
adc
repz
mov
push
shr
lahf
orl
mov
aas
add
mov
pop
jmp
adc
dec
sbb
cmc
pop
fmuls
and
add
das
jo
adc
jge
hlt
xor
jecxz
stos
lods
frstor
mov
mov
dec
adc
ret
mov
and
std
aas
lret
and
jg
pop
movsb
imull
out
sbb
repz
push
mov
jns
aam
cli
pop
loope
inc
and
clc
inc
rcll
add
mov
adc
mov
jle
xchg
cli
incl
dec
jp
sti
pop
flds
mov
gs
movl
clc
ljmp
adc
jo
aaa
sbb
inc
rol
lods
fimull
cmp
decl
xchg
pop
out
icebp
daa
icebp
ret
cli
fsts
inc
push
adc
and
js
testl
cld
cmpb
inc
outsb
push
aas
cld
push
mov
in
outsb
hlt
jae
incl
lock
jmp
shll
xlat
mov
movsl
pop
dec
movsb
dec
add
mov
dec
push
lret
cmp
dec
nop
mov
mov
xchg
mov
frstor
pop
cmp
lea
mov
xor
jmp
add
mov
mov
dec
sub
mov
jbe
subb
das
mulb
es
jmp
xor
or
fnstcw
cmp
mov
lret
adc
inc
cmpsb
pop
inc
and
xchg
mov
sar
jmp
jle
out
mov
aam
test
or
stos
outsl
mov
cmp
test
xor
sub
xor
sbb
dec
ret
cmp
outsb
sar
mov
or
iret
pop
jo
ret
mov
mov
test
jg
mov
aaa
jecxz
jle
xor
fs
ja
pslld
jg
out
jle
dec
push
sbb
lahf
jl
test
pusha
pusha
jns
fwait
jg
lcall
stos
shll
popa
ljmp
cmp
test
std
pushl
icebp
inc
adc
sbb
fs
loope
pop
stc
cmc
cld
xor
in
daa
fimull
dec
out
test
mov
push
lds
sub
adc
lods
gs
jle
pop
in
fistl
ljmp
fldcw
stc
rclb
popf
xchg
cmp
gs
sbb
pop
or
jne
faddl
imul
stos
adc
fbstp
icebp
jns
test
js
les
les
xchg
xorb
jmp
enter
lods
sahf
cwtl
mov
movsb
bound
jo
lcall
aaa
push
sbb
fsubr
data16
dec
ss
sbb
rorb
mov
adcb
call
push
mov
out
imul
sbb
add
ljmp
in
mov
movsl
xchg
mov
and
jns
jnp
xchg
xor
sub
loope
es
call
inc
int
dec
dec
or
mov
xorb
dec
adc
ja
scas
dec
jo
call
ljmp
jge
stc
bound
sti
and
test
icebp
sbb
hlt
adc
mov
push
pushf
push
adc
call
cwtl
imul
jp
sbb
insl
mov
and
pusha
ficomps
pop
test
call
dec
xchg
xchg
aaa
sbb
cmpsb
enter
mov
outsl
mov
mov
incl
out
cli
cld
fnsave
or
push
call
outsl
cli
jle
dec
jns
jb
rcrl
ja
call
push
out
inc
pop
loopne
loope
sbb
mov
int3
out
hlt
xlat
jnp
xor
call
cmc
dec
aam
lock
pop
aaa
ds
sahf
inc
inc
or
xchg
pop
and
add
call
incl
std
push
filds
add
pop
mov
xor
lcall
fwait
ljmp
push
mov
dec
mov
andb
mov
stos
inc
pushl
mov
rcrl
xor
mov
xchg
xchg
add
popf
inc
jge
pusha
or
xchg
push
or
cmp
ss
jecxz
xchg
bound
cmpsb
pushf
pop
insl
orl
add
pop
mov
or
add
daa
fisttpl
or
loop
adc
incl
pushf
adc
mov
fdivrs
fcmovne
and
mov
addr16
jecxz
fldl
and
lods
fisubrs
mov
in
push
inc
mov
in
daa
cmp
mov
lcall
mov
and
fdivrs
inc
xchg
pop
jge
xor
popf
ficoml
sbb
iret
adc
pushf
ljmp
jmp
inc
lea
pop
jg
or
popf
dec
mov
sbb
cmpsl
add
fcomip
loope
dec
loopne
out
sbbl
jns
sub
in
fstpl
test
repz
lea
sahf
imul
jle
push
data16
js
mov
pop
stos
mov
and
fcom
clc
cmp
mov
dec
mov
pop
into
adc
jne
ret
mov
lcall
mov
mov
cmp
mov
adc
jne
pushl
outsl
jl
rolb
test
and
mov
aaa
sbb
scas
ljmp
idiv
outsb
add
pop
iret
scas
mov
in
cmc
mov
mov
and
jae
add
call
push
aam
add
mov
gs
jo
xor
cmp
xor
movsl
in
cli
fdivrs
mov
jmp
cmpl
pop
fidivl
cld
mov
in
mov
out
popf
in
jmp
cmp
stc
mov
sarl
push
and
mov
ljmp
sahf
aaa
sub
sbb
int3
into
lods
fdivl
clc
and
mov
dec
mov
sub
mov
mov
xor
jb
cli
ljmp
adc
mov
stos
cmc
or
std
and
fstl
sarb
fs
popf
cli
mov
push
les
clc
jmp
out
dec
outsl
inc
lret
jnp
in
fcoml
test
push
cmp
or
jg
add
mov
pop
pop
add
cs
mov
adc
and
pusha
ljmp
dec
sub
adc
xchg
push
sahf
inc
cltd
mov
jnp
js
fistpl
lods
incl
cmp
add
cmp
icebp
mov
out
mov
sbb
or
lcall
and
fistl
aad
mov
ljmp
xor
mov
js
fsubrl
in
sub
lahf
mov
rcr
xlat
sub
int
inc
add
sub
adc
mov
lcall
scas
add
fldcw
mov
adc
mov
fsubrl
adc
dec
inc
movsl
lahf
mov
data16
testl
shrb
lods
push
outsb
into
js
rcl
arpl
push
sbb
sub
pushf
xor
xchg
mov
mov
mov
scas
sbb
out
mov
int
inc
pop
enter
push
mov
loop
shlb
ljmp
jl
xchg
es
imul
popf
mov
push
daa
pop
push
pop
push
rcrl
call
lods
movsl
and
jl
mov
mov
pop
out
fcoms
mov
xor
sar
sbb
loop
jno
sbb
into
lea
fstpt
add
loop
iret
test
imul
mov
daa
mov
mov
mov
into
insl
xor
iret
mov
ljmp
jne
mov
imul
adc
into
fimull
pop
pop
outsl
push
outsb
leave
add
cmp
lea
call
cwtl
bound
rcll
lock
mov
pop
add
ljmp
mov
pop
call
and
sbb
jmp
bound
mov
inc
in
mov
cmc
lret
push
hlt
ss
or
test
xor
cwtl
loopne
sub
pop
pop
sub
xchg
add
test
inc
mov
ljmp
pop
lods
lret
jecxz
ljmp
adcb
movsb
test
daa
lret
cmp
add
test
pushl
addr16
mov
adc
aad
mov
adc
out
test
and
incl
imul
jp
pop
cmp
shrb
sahf
sub
pop
int
mov
insl
mov
mov
pushl
ds
pop
xchg
push
pop
movsl
enter
roll
jmp
jmp
fistps
gs
cmpsl
decl
bswap
mov
cmp
iret
shrl
test
xchg
cmp
je
cwtl
jle
mov
incl
dec
pusha
popa
cmp
sahf
fwait
inc
mov
push
sbb
ret
or
fwait
mov
test
cmp
jecxz
mov
sbb
lcall
push
pop
nop
xchg
fwait
jg
fidivl
jbe
arpl
das
and
sub
lock
lock
incl
mov
jbe
pop
xlat
xchg
mov
and
mov
cmp
lcall
xchg
mov
outsl
clc
stc
xlat
leave
cmp
push
push
cmpsl
lret
jbe
mov
cs
pushl
cmp
push
test
in
adc
adc
popf
popw
adc
jbe
adc
lahf
ret
in
adc
je
pusha
sarl
push
lock
sbb
pop
nop
or
dec
movsb
leave
pop
add
imul
add
outsl
dec
clc
insb
xor
jp
fwait
dec
repnz
or
add
xchg
das
out
lcall
push
test
mov
mov
mov
data16
lea
call
cld
sub
pop
out
sar
jb
jmp
mov
sbb
out
mov
cmp
mov
sub
jmp
mov
mov
xorb
mov
jmp
xchg
pop
movl
pusha
cmp
xor
sbb
out
das
ficoms
push
mov
mov
cwtl
sar
aam
and
mov
sahf
in
cli
xor
decl
mov
cmc
shrb
mov
jecxz
jmp
xlat
xchg
or
inc
shlb
jns
mov
mov
loopne
aad
mov
and
mov
js
cs
jne
pop
cltd
icebp
adc
stos
incl
cmp
add
out
into
mov
xchg
push
dec
insb
rorl
jne
js
decl
xlat
ds
imul
ss
mov
rorb
add
xor
push
scas
cmp
or
dec
incl
adc
adc
xchg
fs
add
loope
movsb
lds
ljmp
lcall
in
notl
int3
iret
sub
daa
cmp
push
adc
jo
add
mov
lret
push
outsl
cli
call
enter
mov
inc
or
fisttps
je
ljmp
pop
xchg
ss
or
inc
test
pushf
xchg
fwait
cmp
cmp
test
iret
lea
pushl
lcall
mov
sti
or
and
adc
or
mov
mov
cli
lcall
out
xor
cmp
xchg
xchg
jo
loope
lahf
cwtl
mov
mov
push
xchg
lahf
adc
out
jl
ljmp
ss
dec
pop
adc
lahf
shr
pop
mov
sub
mov
inc
fisubl
and
mov
ds
jae
mov
adc
add
mov
fincstp
adc
sbb
test
scas
outsl
into
dec
flds
leave
repnz
lcall
fs
mov
cmpsb
jbe
push
and
adc
daa
insl
loopne
jg
hlt
js
inc
lds
addr16
push
mov
in
sbb
and
dec
stc
and
call
push
xchg
fs
or
lds
cmp
sbb
jae
xor
push
and
idivb
pushl
hlt
imul
inc
insl
mov
and
sub
push
mov
repnz
sub
cld
jg
ljmp
push
clc
dec
jne
mov
aad
jg
pushl
pop
outsb
insl
insb
das
movsl
mov
xchg
adc
gs
call
iret
aad
mov
lea
imul
adc
lret
in
cld
dec
into
mov
add
sbb
leave
and
stc
fidivrl
shll
incl
cld
popa
push
xchg
lock
or
or
mov
movsb
mov
sub
decl
mov
icebp
push
repz
or
outsb
pusha
ja,pt
ljmp
test
jg
or
cmpsl
jge
sub
mov
rolb
ja
ds
scas
hlt
sub
stos
cmpsb
jb
add
xor
out
pop
ljmp
jp
jmp
mov
and
addl
out
adc
mov
jns
and
out
clc
jmp
ret
inc
loopne
or
inc
cli
xchg
add
pop
sarb
mov
jmp
or
je
scas
test
cmc
cli
aad
lods
je
inc
divl
ds
adc
repz
push
hlt
dec
dec
or
push
inc
das
mov
or
repz
cld
test
ja
les
push
pop
sarl
lcall
stc
pop
mov
rorl
sub
fiaddl
mov
dec
lock
call
adc
lods
outsl
ja
nop
xchg
bound
popf
push
aaa
test
push
xchg
aaa
in
sub
jle
testb
decb
cmpsb
test
enter
dec
ja
fldcw
lock
call
jnp
repnz
and
mov
mov
movsl
cmpl
jae
out
dec
ljmp
mov
push
xor
adc
out
sahf
adc
decl
je
aas
out
std
lcall
dec
das
or
iret
sbb
bound
jp
ljmp
rcrl
xchg
and
jae
cmp
lcall
jg
pop
call
xchg
fisubrs
scas
jnp
mov
scas
nop
xor
pop
js
in
or
jmp
jge
jb
pop
rcr
notl
repz
mov
movsb
je
jg
fiadds
fcmovne
popf
push
and
lahf
cli
imul
int
pop
mov
mov
jnp
call
or
xor
cmp
dec
lcall
adc
js
cmp
bound
popf
jl
loopne
pushl
loop
xor
xchg
std
add
jbe
out
add
lcall
mov
dec
imul
movsb
cli
fisubrl
outsl
push
mov
decl
jge
cli
test
insb
inc
xor
or
ljmp
je
or
pop
adc
into
and
imul
xor
js
fcomps
shlb
mov
rorl
jb
shrl
push
sahf
lret
push
pushf
xchg
loope
decl
jp
jg
pop
shll
mov
in
mov
testb
lods
test
filds
call
stos
js
pop
add
mov
mov
ljmp
shr
sbb
add
cmp
jmp
pop
mov
jo
xchg
lcall
lock
inc
xor
fwait
sub
xchg
mov
out
jns
in
pop
inc
add
js
ret
and
inc
xchg
mov
xor
stos
add
call
mov
shlb
push
mov
outsl
jl
aam
call
cmc
or
lock
and
xchg
jl
adcl
mov
xchg
pop
data16
mov
add
cmc
lcall
decl
pop
stos
fxch
arpl
mov
xor
mov
lret
pushl
aaa
ret
je
sub
icebp
sbb
mov
fnsave
pop
sti
out
shll
sti
test
lcall
rorb
mov
sbb
sbb
mov
popa
ret
add
pushf
test
lret
negb
scas
sbb
arpl
jg
mov
mov
lds
xchg
aad
bound
rorb
add
sar
xchg
mov
mov
sub
mov
push
mov
pushl
ja
push
sbb
jp
mov
sbb
lea
rclb
mov
mov
lcall
xchg
inc
loop
ljmp
sahf
adc
pop
adc
outsl
and
push
push
cli
mov
popf
clc
xor
frstor
lods
add
pop
dec
mov
pop
push
sub
adc
dec
fnstcw
inc
or
jmp
xor
push
in
pop
and
incl
dec
fcmovne
hlt
imul
mov
push
pop
or
aad
xchg
add
ljmp
cmp
sub
test
xchg
dec
push
inc
jl
xor
adc
cltd
insb
addr16
fwait
cmp
lock
in
inc
ss
cwtl
or
loopne
ss
imul
jmp
adc
mov
cld
mov
outsb
sbb
jbe
sub
testl
xor
sahf
call
cmp
and
push
sub
fcmovnbe
inc
aas
ljmp
or
addr16
adc
push
sti
jo
push
and
lcall
jg
mov
daa
sub
mov
and
pop
in
and
jge
and
cli
mov
jmp
int3
mov
test
adc
jne
pop
icebp
insl
pop
pushf
push
sahf
leave
test
outsl
pushl
ja
mov
mov
add
arpl
and
jne
clc
incl
popa
ficomps
mov
test
aas
int3
mov
inc
xchg
push
cs
or
cwtl
ret
xchg
es
xor
adc
jno
in
pop
mov
push
inc
cmp
fcmovu
inc
and
mov
mov
push
adc
pop
pop
jg
push
je
scas
xchg
jmp
sbb
shll
and
dec
mov
mov
test
mov
xor
pop
add
add
out
inc
xchg
or
push
iret
int3
lretw
add
sub
sbb
loop
in
sbb
jg
jmp
repnz
cmp
cmp
insl
push
ljmp
mov
fs
lcall
mov
jae
mov
std
push
dec
pop
dec
ficompl
cmpsl
and
sbb
incl
fistl
mov
and
xchg
bound
rcr
fmuls
pop
jge
adc
mov
or
sbb
loop
fmul
mov
das
repnz
jp
cmp
dec
jecxz
dec
add
cmp
jne
icebp
test
pop
dec
pop
mov
jp
jae
pusha
popa
cmc
iret
jle
jbe
hlt
aas
pop
and
sbb
adc
fsub
and
decl
inc
and
dec
mov
cmp
sbb
jecxz
sub
mov
incl
and
rolb
or
data16
adc
movsl
xor
mov
cmp
lret
aas
ljmp
mov
cmp
pop
mov
sub
mov
jge
es
mov
data16
decl
mov
xor
leave
cmp
jno
jnp
jns
adc
test
sbb
and
ss
push
cld
xchg
pop
inc
push
nop
add
jae
popa
sub
lds
sbb
pop
fwait
mov
pop
cmp
mov
cmp
pop
push
sti
movsl
and
pop
cmpb
int3
decl
dec
in
mov
cmp
lds
rdpmc
mov
out
sub
dec
sahf
xchg
pushf
lock
cltd
dec
dec
xchg
xor
pop
pop
jl
enter
jae
mov
push
push
or
cmpsb
es
jg
jmp
jo
cmp
int
sarb
inc
mov
jno
sub
jmp
daa
push
iret
inc
pop
adc
mov
push
fs
mulb
dec
and
ds
jg
fpatan
lret
daa
push
mov
pop
pop
sbb
jns
cmp
and
and
mov
aam
leave
cmp
scas
sbb
inc
xor
lds
dec
pop
add
int
incl
cmpb
sbb
jno
xchg
adc
fdivp
dec
inc
dec
pusha
xchg
jecxz
sbb
xchg
mov
jp
roll
push
or
xchg
push
das
sub
call
xor
js
jge
and
or
push
stc
jnp
jb
mov
outsl
lcall
ret
nop
jp
repz
insl
ss
in
aad
test
ss
daa
sbb
incl
push
out
rcrl
fsubl
out
mov
aam
jg
jl
pop
pop
inc
lahf
ljmp
dec
ret
xchg
xor
adc
test
pop
mov
mov
push
call
push
stos
outsl
pop
gs
ss
pop
or
popa
ret
rclb
xor
xor
lcall
mov
test
lret
push
xor
lock
cmp
shlb
pusha
rol
xchg
or
incl
clc
mov
mov
xchg
pushf
cmp
in
lods
inc
js
jmp
inc
jae
cmpsb
dec
pop
xchg
je
dec
pop
ja
mov
sbb
dec
push
pop
lock
mov
movsb
jg
jno
call
pop
mov
pop
jno,pn
jmp
add
inc
andl
pop
inc
icebp
fcoms
popf
dec
je
int
dec
outsb
push
or
lcall
int
or
pop
or
add
sbb
jns
outsl
scas
arpl
and
mov
call
std
pushl
aas
iret
inc
in
rcl
hlt
scas
push
cwtl
add
rorl
lea
ljmp
test
mov
jnp
mov
fadds
stos
sub
cld
pop
xchg
adc
and
incl
jl
mov
lods
push
outsb
push
adc
sarb
pop
xchg
dec
cmp
test
ljmp
pop
or
inc
in
pop
popa
out
and
mov
mov
pushl
dec
daa
lods
mov
xchg
adc
jl
movsb
stc
pop
ja
pushl
pusha
rclb
lods
mov
mov
repnz
mov
incl
mov
in
xchg
js
popf
cs
adc
movsb
fwait
push
ss
call
push
stos
icebp
lods
imul
or
xchg
xor
mov
mov
stos
mov
or
lret
push
xlat
cmpsl
lock
add
push
jl
aaa
cld
decl
inc
test
xchg
dec
pop
xchg
add
sbb
fbstp
rcrb
sub
ss
in
jns
lcall
mov
inc
dec
aaa
movsb
mov
jp
add
pusha
stos
js
jo
sti
sti
rcrl
sub
repz
lock
cmc
aaa
cld
test
adc
dec
aam
filds
xchg
inc
jge
mov
pop
adc
adc
or
fsubs
call
add
mov
xchg
push
push
mov
dec
xchg
and
arpl
push
jmp
and
mov
cmpsl
jg
lock
movsl
out
pop
mov
clc
xor
idiv
je
jg
jmp
enter
dec
mov
push
pop
je
lahf
xchg
cmp
nop
rclb
pop
cltd
lods
pushl
xchg
and
sub
cmpsb
adc
ljmp
arpl
loop
pop
movsl
mov
lea
push
lret
inc
fsubrl
inc
imul
pushl
cwtl
xchg
stos
push
mov
cmp
nop
xorb
or
cmp
out
insb
arpl
pop
dec
cmc
or
lds
jmp
xchg
push
sub
decl
mov
pop
scas
in
pop
jns
imul
pop
je
sarl
mov
mov
call
cli
mov
scas
push
imul
test
xor
jmp
jecxz
in
xchg
test
cmp
addr16
roll
das
pop
lods
sub
in
cmp
dec
fs
lcall
stc
clc
jle
test
add
dec
mov
bound
loopne
into
push
lock
decl
jb
ljmp
dec
mov
sbb
xor
pushl
push
jmp
mov
cwtl
pop
jp
scas
aam
pop
loopne
int
mull
xorb
out
jns
scas
ljmp
inc
mov
xchg
aam
popa
or
sbb
add
adc
jmp
data16
gs
push
cs
mov
int3
clc
cli
push
pusha
push
cld
pop
mov
jl
sahf
and
aad
sar
cmp
cmp
dec
dec
outsl
lods
pop
cmp
ss
push
mov
jmp
nop
fwait
daa
rcr
test
xor
xchg
sbb
mov
pop
sub
dec
add
outsb
movsl
xchg
dec
xor
dec
jle
loope
cmpsb
ja
push
inc
and
jb
lcall
in
dec
pop
mov
out
cwtl
loope
inc
insb
lods
out
clc
fisttps
setnp
shrb
sbb
lods
rclb
sub
add
loop
pop
jb
mov
push
add
shl
cmp
ja
adc
sarl
jmp
lock
in
jle
inc
dec
pusha
mov
jno
lret
outsl
dec
imul
ljmp
push
jae
inc
cld
fisttpl
scas
test
xor
outsl
loopne
data16
jns
decl
lea
in
add
leave
xlat
dec
add
jo
rcr
and
xor
out
call
ljmp
adc
dec
popf
inc
jb
lret
aaa
xchg
jmp
pop
dec
mov
and
lret
cmp
or
push
dec
mov
popf
push
lds
cld
ljmp
sar
pushf
sbbl
xor
pusha
inc
xchg
push
push
enter
pop
adc
inc
pop
cmpsb
hlt
sub
cmp
dec
push
sti
bound
adc
pop
fldl
and
add
out
push
push
daa
xor
dec
pop
and
aaa
insb
cmp
add
or
mov
xchg
fs
mov
pop
sbb
sbb
call
xchg
jl
push
dec
mov
or
ljmp
mov
inc
mov
enter
outsb
push
or
decl
sbb
out
mov
hlt
popa
add
mov
sahf
test
enter
stc
xlat
adc
in
pushf
in
out
out
push
push
push
jecxz
sub
sahf
fidivs
fdivp
jbe
hlt
movsl
cmp
stos
call
inc
sar
mov
pop
push
cmp
out
lret
jmp
lahf
out
outsl
add
add
pop
lcall
fstpt
push
jmp
adc
jmp
mov
sbb
xor
dec
xchg
lahf
pop
mov
stc
repnz
hlt
mov
pop
comiss
mov
jecxz
mov
mov
nop
mov
inc
or
leave
lds
ja
decl
mov
sbb
adc
or
pop
pop
dec
add
nop
dec
pop
out
mov
nop
sub
call
cld
loope
mov
inc
notl
outsl
cmp
mov
fcoml
dec
outsl
mov
or
ljmp
outsl
add
or
xchg
add
rclb
hlt
sub
ljmp
mov
pushf
cltd
mov
xchg
das
fnsave
stos
add
lea
push
ror
fbld
push
cmp
add
in
push
cmpsb
popa
pop
or
fucomip
pop
dec
imul
xchg
sti
pop
aaa
jmp
outsl
jecxz
inc
cmpl
pusha
fidivrl
mov
cmc
cltd
pop
ljmp
std
cmpb
lahf
add
clc
cmp
dec
movsb
jne
mov
aaa
std
ljmp
inc
sub
pop
das
in
pop
xchg
daa
push
xchg
inc
or
mov
lcall
dec
jns
sar
les
scas
inc
lods
mov
push
mov
lret
in
jae
inc
jno
adc
mov
pop
pop
mov
gs
repz
and
xor
xchg
push
push
popa
bnd
xchg
int
dec
mov
clc
mov
cs
sbb
or
xchg
in
mov
aad
gs
cmp
sub
jle
repz
lea
je
scas
test
daa
js
mov
xchg
into
les
ljmp
rclb
test
movsb
sub
in
push
mov
pop
push
cld
js
mov
jp
push
dec
sbbb
pop
xchg
sbb
stos
cmp
push
mov
mov
cmp
add
decl
addr16
adc
xchg
jo
fdivrl
mov
stos
pop
stc
cli
sbb
incl
cli
rcl
mov
and
mov
insb
jg
push
inc
idivl
mov
xor
lcall
sub
stos
xor
jo
fsincos
movsl
lods
jns
rclb
repz
decl
lea
decl
mov
sahf
inc
cmpsl
imul
xchg
icebp
dec
fldt
aas
sti
cs
lcall
cmp
push
push
fwait
xchg
aam
xor
sub
fidivrl
mov
xor
lcall
arpl
in
jbe
mov
xor
jecxz
sbb
rcll
mov
das
movsb
mov
and
mov
arpl
cmp
movsl
std
sbb
fnstenv
xchg
jge
insl
fs
fisttps
out
pop
mov
ret
repz
aas
leave
sbb
mov
xchg
xchg
sub
in
jns
and
xchg
arpl
test
adc
pushl
lahf
jle
jecxz
cmp
xor
cmp
push
push
imul
xlat
push
sbb
ljmp
clc
or
aad
dec
sub
mov
inc
mov
xchg
test
mov
pop
dec
cmp
inc
or
dec
xor
test
inc
jmp
jmp
out
mov
jbe
addr16
pushl
sarb
jns
sbb
push
idiv
lcall
adc
test
xchg
cmp
pushf
fists
lods
xlat
js
addr16
sbb
inc
adc
leave
sahf
inc
lcall
xchg
clc
mov
dec
xchg
loopne
xchg
repz
jae
call
jl
mull
cltd
mov
mov
and
lods
xor
adc
jne
push
clc
incl
fidivl
lret
lock
mov
push
mov
out
lcall
setp
xchg
push
mov
xchg
outsl
xchg
ja
adc
lcall
arpl
xchg
ds
jo
cmp
cmp
bnd
pop
cmp
cli
pop
add
xchg
mov
imul
aas
out
mov
ret
cmpsb
jecxz
aaa
cmp
xor
and
fsubrs
notl
jg
pushl
dec
fisubl
iret
popa
push
push
rolb
and
mov
pop
icebp
aaa
xchg
sub
or
hlt
xchg
adc
data16
aas
daa
les
sbb
ret
push
dec
jg
push
mov
aam
mov
jmp
mov
mov
jbe
pushf
jno
out
imul
push
ret
mov
jne
jae,pn
pushf
cmpl
pushl
mov
aad
pop
sub
loopne
setno
mov
cmp
jo
test
ljmp
pop
mov
xchg
test
popa
mov
in
pop
mov
push
sbbl
nop
test
ljmp
jb
out
aaa
cs
jle
fidivl
lret
mov
cli
pop
inc
jbe
cmp
iret
dec
out
popf
ja
ret
mov
jmp
mov
call
lods
push
lock
cmp
int3
leave
xchg
jno
scas
lret
std
mov
fcomip
decl
sub
add
mov
sbb
mov
sub
fdivp
rorl
out
gs
cmpsb
adc
mov
call
xchg
in
dec
cmpsb
stos
and
mov
xchg
or
decl
aam
popa
mov
adc
mov
insb
fisubrl
cmp
rolb
decl
scas
mov
lret
xor
pushf
add
sahf
cs
fnstsw
fdivrl
sub
fimull
push
inc
jo
cmp
cli
xchg
out
and
or
outsb
in
loope
mov
cmp
enter
movsb
dec
pop
jle
popf
ss
mov
scas
jp
fsub
cs
jno
cmp
lods
ljmp
outsl
clc
jno
inc
scas
loope
pop
jle
lods
daa
out
push
jnp,pt
scas
xchg
mov
jnp
cwtl
mov
scas
pop
sub
outsb
inc
push
and
or
inc
clc
decl
mov
dec
divl
dec
fnstsw
fdivrs
lcall
push
pop
or
pusha
mov
add
and
pop
xor
loopne
push
sub
xor
mov
jg
push
fidivrl
popf
adc
int
gs
movsl
cltd
stos
xorb
inc
in
incl
push
leave
jno
jmp
cli
push
inc
test
pushl
cld
into
adc
insb
daa
fistpll
fstps
dec
mov
js,pt
in
pop
mov
in
pop
fsubrs
in
test
and
enter
mov
dec
ss
lds
xor
pushl
sub
pusha
jb
aaa
test
xor
out
pusha
xor
mov
sub
and
js
sahf
mov
and
mov
call
mov
ds
add
inc
scas
leave
sub
and
jg
repz
cld
mov
jl
mov
decl
pop
xchg
clc
and
int
dec
in
jne
dec
cmc
pop
fidivl
dec
stos
xor
lcall
pushl
inc
icebp
xor
mov
add
pop
xor
imul
push
mov
xor
aam
sbb
mov
je
push
pop
lret
jo
xchg
incl
fdivrl
jg
sbb
sub
adc
mov
mov
pop
adcb
dec
and
push
or
incl
xchg
call
mov
pop
and
insl
xchg
imul
arpl
sar
inc
jge
add
hlt
sti
and
or
shll
fcoml
sub
xor
sbb
call
xor
adc
mov
cmp
leave
std
pop
xchg
lea
cmp
jmp
or
push
inc
call
mov
xchg
in
xchg
int
shlb
cmpsb
cwtl
dec
mov
idiv
cmpsl
insl
movsb
mov
dec
orb
jmp
rcll
shr
xchg
or
loopne
cld
out
mov
jl
or
pop
out
lcall
sbb
call
mov
cmp
adc
cmp
aad
int
enter
movsb
jo
push
xchg
lcall
and
stos
in
call
sbb
lahf
mov
mov
fcomp
sub
rcll
lea
xlat
test
movsl
fs
ljmp
add
cld
lock
mov
cmp
jg
sahf
cmpsl
notb
imul
outsl
or
jo
negb
testb
decl
jle
mov
orb
setne
jge
mov
ljmp
cli
push
data16
dec
icebp
ror
iret
rcl
ds
push
lock
lds
mov
xchg
adc
ljmp
xor
shlb
dec
pop
insb
cmp
or
jbe
call
ror
fnsave
imul
adc
xor
push
outsl
lcall
je
xor
push
lods
push
mov
stc
sub
cmp
xchg
nop
mov
decl
arpl
xchg
inc
or
jae
cmp
jb
xor
and
mov
lcall
clc
out
dec
jne
lods
and
xchg
pop
sti
das
mov
jb
dec
xchg
dec
loop
mov
or
iret
cmp
movsl
add
push
outsl
or
lock
clc
test
inc
and
fcmovbe
sub
insl
imul
sbb
dec
jns
jnp
sbb
add
push
cld
xor
jns
push
cltd
movsb
in
lcall
sbb
mov
adc
push
and
imull
cmp
xor
lcall
pushl
icebp
in
insl
jmp
notb
adc
clc
or
jl
jecxz
mov
scas
into
ss
test
xchg
fidivrl
sub
decl
sub
in
cmc
cmp
sbb
xchg
pushf
fxch
fistps
imul
fbstp
ret
fadds
xor
ss
and
add
call
std
rclb
jp
frstor
push
jecxz
int3
inc
push
pusha
fadds
aas
inc
fidivl
pop
lock
sub
inc
out
loop
jg
add
cmp
sbb
mov
inc
sub
fmull
inc
stos
filds
jl
int3
mov
inc
fldcw
cld
mov
dec
outsl
lods
out
fadd
sub
inc
jnp,pn
cmp
lcall
das
fnstenv
lods
stos
push
sub
jne
sarb
pushf
mov
jae
insb
inc
insl
sbb
incl
add
xchg
out
mov
pop
inc
inc
xchg
clc
gs
les
ljmp
cs
lahf
adc
cmc
daa
push
fldcw
push
pop
jo
scas
clc
dec
xor
cmpl
xor
data16
andl
cs
incl
cmp
addr16
idivl
sti
outsl
jnp
mov
jmp
lahf
bound
sub
aaa
push
enter
test
data16
fnstcw
mov
fistpl
incl
mov
pop
dec
dec
xor
add
mov
pop
sbb
lea
sub
in
ja
sarl
gs
push
pop
mov
inc
ds
repnz
xor
dec
inc
test
lock
js
sbb
jmp
lret
cmp
vandps
insl
pop
cmpsl
xor
jns
scas
out
inc
ds
jno
ljmp
mov
pop
jecxz
outsl
leave
popa
outsb
add
xchg
cmc
cltd
mov
adc
sar
decl
mov
cmp
repz
mov
lods
shlb
incl
cmp
and
sub
stos
out
mov
sbb
cmpl
nop
add
push
hlt
xchg
xchg
incl
subb
mov
dec
adc
mov
andb
cs
jmp
push
mov
jp
cmp
and
mov
test
dec
imul
pushl
js
dec
jle
and
push
mov
sti
je
ds
leave
cld
int
inc
mov
jmp
push
lods
je
mov
cs
test
imul
out
dec
stos
leave
mov
cmp
sub
dec
cmp
sbb
dec
or
sahf
xchg
mov
sbb
or
add
test
and
scas
add
mov
aaa
cwtl
and
jne
decl
mov
test
shlb
jle
arpl
mov
mov
ljmp
push
cmp
out
js
and
add
xor
sbb
xchg
add
cli
pushf
pop
addl
ljmp
imul
cmp
andb
push
out
insb
les
stc
pop
jns
mov
decl
test
fildll
push
es
push
push
fwait
pop
std
cltd
int3
leave
sbb
and
lcall
dec
jnp
fsubrp
in
movsb
aam
mov
sahf
pushf
call
xor
incl
out
push
fcoml
inc
jmp
lock
mov
mov
adc
imul
repnz
outsb
jg
ljmp
push
and
mov
ds
mov
es
or
ljmp
ret
fidivrl
mov
nop
nop
or
xchg
push
adc
or
push
pop
jnp
rolw
pushl
mov
loop
aas
insl
adc
clc
cmp
cwtl
mov
lds
pop
xor
andb
xchg
sub
into
xchg
adc
jmp
nop
lahf
sahf
push
les
mov
cmp
xchg
xor
cmp
mov
fld
inc
jmp
lea
push
lds
jbe
or
cld
or
push
nop
mov
mov
cmp
mov
shl
xor
add
jmp
add
add
sub
xchg
mov
movsb
cld
jmp
js
add
pop
sbb
incl
add
outsb
push
pop
stc
cld
lds
jle
fsubrl
or
lahf
iret
cmp
pop
xor
sub
incl
lret
xchg
mov
mov
bound
adc
fstpt
aaa
xor
push
popf
pop
sbb
mov
dec
xorl
mov
cli
xor
jle
push
push
and
dec
dec
mov
addr16
fistpll
in
aam
pushf
imul
jb
andb
incl
lcall
jp
inc
shll
lcall
mov
leave
dec
imul
dec
je
sbb
xor
jmp
shrl
push
and
and
insl
mov
arpl
shll
sub
pop
loopne
sti
aam
cmp
dec
arpl
xor
mov
clc
outsb
pop
xor
push
mov
cmp
data16
imul
jge
xlat
movsl
mov
imul
mov
cld
inc
out
repnz
xchg
daa
jns
jecxz
dec
jecxz
iret
iret
xchg
fcoms
xchg
in
out
ret
cld
int3
int3
nop
mov
jne
iret
xchg
stos
cmpsb
push
cwtl
sarl
inc
out
lcall
icebp
inc
stc
or
add
rcrb
fs
cld
les
mov
add
jl
test
sub
pop
and
xchg
sbb
ds
sub
xor
inc
lahf
ja
sub
push
or
dec
xor
dec
inc
jp
fisttps
cmc
jns
jmp
mov
dec
push
xchg
arpl
iret
push
stos
in
popl
pop
mov
clc
in
and
lcall
add
fs
dec
mov
lods
xchg
loop
cmpsb
outsl
repnz
xchg
es
nop
adc
sti
lcall
sbb
insb
imul
fmull
inc
into
ret
adc
push
jge
mov
enter
scas
test
pop
test
decl
adc
add
xor
stos
jb
inc
sub
inc
outsl
pop
adc
inc
sbb
decl
mov
ss
jb
mov
xchg
ds
pop
mov
test
sti
jnp
imull
mov
mov
call
loop
mov
jnp
mov
fldt
test
std
repz
push
lcall
lods
dec
outsb
mov
mov
pushl
and
xchg
mov
push
lret
add
outsb
addr16
sub
stos
pop
in
dec
aas
into
dec
xor
test
shrb
lahf
outsb
xchg
popf
mov
mov
enter
fcomi
mov
pop
popf
repnz
lret
mov
dec
pop
push
insb
lock
insb
add
call
je
inc
pop
jmp
dec
test
or
cmpsb
lret
inc
stos
ja
push
or
dec
lret
imul
dec
push
add
sbb
push
inc
daa
sbb
xlat
repnz
xchg
xor
idiv
lcall
jae
subl
cmp
xor
leave
inc
lret
paddb
pushl
xor
and
iret
pop
fldcw
mov
leave
cltd
adc
sbb
xor
call
es
test
cmpsb
test
cltd
clc
je
and
or
or
adc
fiadds
pop
cmp
or
test
xor
or
pushl
cmpsl
test
lea
mov
rcrb
roll
sbb
test
das
mov
jmp
sbb
pop
in
or
ss
ja
xchg
popa
cltd
mov
in
cmp
or
int
movsl
ljmp
incb
sarb
jnp
pushf
pop
and
jne
roll
xchg
xchg
inc
call
adc
xchg
mov
xor
push
jmp
sub
rorl
out
ljmp
push
adcb
or
flds
push
mov
push
shll
mov
inc
js
sbb
sbb
fildll
pusha
addr16
xor
mov
jno
sub
decl
or
fs
mov
jbe
test
inc
ljmp
push
dec
xchg
loop
movsb
stc
inc
jb
les
push
mov
push
psubd
decl
xchg
pop
xchg
data16
test
mov
adc
leave
sbb
fstl
dec
and
sar
ljmp
insb
lods
xchg
rcrl
inc
movl
adcl
std
pushl
cmpsb
add
pusha
icebp
pop
ljmp
call
loopne
or
bound
or
ljmp
movsl
mov
mov
iret
add
out
dec
negb
loope
cwtl
popf
xchg
xchg
cwtl
aaa
sbb
sbb
mov
add
pushl
sbb
dec
mov
lds
mov
out
mov
push
addl
decl
mov
sbb
jge
out
sbb
incl
aad
xorl
push
xor
mov
sub
push
sbb
fucomip
incl
inc
addl
repz
aam
sub
sbb
dec
sbb
mov
mov
mov
outsl
fnstenv
adc
test
cmp
push
data16
and
das
add
ljmp
imul
or
mov
cld
pushw
outsl
loop
sbb
jp
cli
add
xchg
dec
adc
cli
enter
pop
xchg
inc
push
cmp
call
sarl
xor
or
ficompl
adc
or
in
sub
or
jo
ret
pushl
punpckhdq
push
inc
out
shlb
mov
loop
or
sub
cltd
mov
dec
std
es
cmpsl
out
popa
fdivrp
ljmp
push
xorb
inc
into
jnp
mov
jle
sbb
pusha
xchg
pop
nop
jg
call
fs
out
dec
xchg
ret
out
sub
out
fcmovnbe
test
dec
jo
mov
or
jle
mov
mov
ret
inc
or
adcl
push
scas
mov
popf
inc
loop
loop
into
sbb
pop
or
pop
ljmp
mov
mov
push
mov
mov
call
adc
xchg
adc
mov
push
xor
mov
pop
sti
mov
scas
and
hlt
sbb
orb
pop
and
aas
sub
or
jmp
fistps
bound
sub
cmp
das
aam
dec
or
stos
adc
decl
outsb
ret
mov
ret
mov
repz
xchg
rolb
and
pop
stos
pushl
fisttpll
lods
repnz
rol
mov
mov
mov
test
xor
lcall
mov
cmp
sahf
pop
ud1
mov
bnd
push
out
mov
ja
pushl
jno
push
stos
add
mov
pop
push
pushf
lcall
add
pop
shll
cmp
jmp
fsubr
hlt
ret
sahf
dec
cmp
inc
jge
out
cs
int
cli
incl
inc
jbe
mov
in
or
push
dec
call
sbb
and
inc
lcall
mov
adc
pop
repz
movsl
fwait
lods
iret
sub
mov
mov
jmp
mov
in
mov
inc
mull
cs
mov
jg
inc
addr16
adc
les
aam
cmpsb
sub
sub
jecxz
xchg
mov
pop
xchg
cmc
ljmp
pop
push
jno
nop
repnz
jg
jbe
sub
lods
data16
stos
adc
cmp
in
jle
jno
lods
xor
mov
icebp
out
cmpsl
adc
ljmp
test
mov
xor
je
ljmp
lods
pop
outsl
jnp
movsb
or
add
sub
pushf
push
ss
aaa
enter
push
mov
dec
shlb
inc
mov
mov
ljmp
jg
lahf
testb
bound
jae
sub
xchg
jg
outsl
inc
rcr
jne
out
in
sarb
and
out
jo
pop
mov
push
cld
inc
leave
lods
fistpl
xchg
pop
mov
decl
test
je
mov
add
lret
sbb
cmc
test
inc
dec
imul
push
rcr
jle
in
xor
add
jp
jl
aad
ljmp
jmp
push
cmpsb
call
addb
ljmp
repnz
mov
mov
call
push
cmp
ss
push
dec
repnz
fcompl
sub
leave
clc
jmp
outsl
mov
mov
jecxz
in
ljmp
lcall
scas
mov
in
cmpsl
std
out
sub
cmp
jecxz
stos
decb
cmpsl
sbb
dec
outsb
int3
dec
push
dec
xchg
jle
jecxz
mov
sub
adc
mov
and
scas
cli
lcall
out
sub
je
xchg
dec
popa
xor
mov
in
xlat
sub
or
jmp
jmp
rolb
lods
movsb
push
adc
loope
iret
pushf
lods
lods
in
or
lock
mov
ljmp
xorb
insl
cmp
subl
cmc
push
loope
movsb
sub
mov
dec
add
fcomip
jg
movsl
push
mov
sub
mov
cmpsb
shlb
mov
inc
pusha
cli
pushl
mov
mov
sub
cs
icebp
push
aam
xchg
mov
jbe
sbb
enter
sbbl
decl
mov
inc
hlt
lret
scas
gs
sahf
xchg
fcomip
jl
and
dec
pop
jl
xchg
and
clc
movsl
shll
cmpsb
jbe
das
sbb
jns
cmp
js
lea
fcomps
xchg
push
sbb
test
jmp
pusha
pop
repz
mov
mov
mov
dec
xor
sahf
pop
lods
lea
js
js
ljmp
inc
xchg
imul
cwtl
int
ficompl
and
dec
imul
in
pop
ja
ljmp
test
inc
insb
jg
rorb
sbb
fcmovnu
lcall
idiv
cmp
lods
cwtl
cmp
inc
jmp
repz
jb
pop
pop
inc
std
dec
dec
xlat
push
addr16
lods
sub
or
xor
xor
xorb
adc
adc
fcmovnb
xor
in
xchg
xchg
mov
aam
mov
clc
fstpl
decl
sbb
mov
int
jbe
stc
jne
mov
push
gs
mov
and
out
pusha
aas
pop
lcall
clc
outsl
int
aam
inc
fwait
pop
pop
mov
mov
jmp
add
cmpsl
mov
lcall
lea
ficomps
das
cwtl
mov
or
mov
push
or
fiaddl
stos
in
lcall
mov
sbb
in
in
xor
xor
les
cmp
adc
jg
xorl
cmc
addr16
pop
xor
mov
scas
adc
mov
jg
stos
jge
push
test
mov
jbe
mov
lcall
adc
mov
inc
cwtl
xor
int3
push
sub
rolb
mov
call
adc
and
neg
push
jae
dec
inc
mov
lods
fidivrl
decl
mov
jo
mov
data16
pop
cltd
divl
xchg
es
or
mov
outsb
dec
jb
into
call
jmp
ljmp
sub
les
arpl
pop
mov
push
push
dec
test
sub
gs
dec
mov
pop
inc
push
pushf
xchg
push
sub
adcl
out
inc
add
outsl
cli
ljmp
ds
xchg
outsl
or
or
imul
test
lcall
mov
loopne
and
fsts
push
bound
add
cmc
movb
jbe
fdivl
jmp
movsl
fdecstp
mov
mov
test
lret
adc
sub
dec
dec
push
cltd
iret
sti
inc
push
sahf
call
ljmp
ja
scas
adc
aas
lea
pushf
daa
shll
sub
adcb
popf
std
loopne
call
cli
ss
jns
pop
cmp
test
pop
aam
sub
daa
sub
jge
mov
adc
decl
xor
mov
mov
add
xor
mov
ljmp
pop
in
out
and
and
sbb
dec
mov
push
addr16
cmc
jecxz
mov
decl
and
jg
xchg
scas
shll
loop
aaa
es
leave
inc
inc
and
mov
inc
xchg
decl
and
cli
idivb
xor
cltd
adc
into
xor
negb
pop
cli
movsb
std
mov
jae
pop
lds
mov
push
dec
mov
nop
push
inc
dec
cmp
lods
mov
mov
jno
in
cmp
dec
adcb
pusha
imul
cmp
xchg
rcl
xor
mov
popa
lcall
sub
xor
push
notb
iret
outsb
or
lcall
mov
into
iret
lret
mov
jg
xchg
repz
arpl
or
fwait
std
test
out
clc
call
lret
lcall
repz
std
in
popf
pop
add
push
cli
decl
shrl
xchg
fwait
lds
jae
and
jmp
cmpsb
jae
stos
xchg
cli
jp
arpl
and
pop
dec
pop
scas
ret
lcall
fsubrp
imul
push
cmp
aad
insb
adc
sub
call
push
sbb
adc
or
pop
aas
cli
enter
lcall
add
das
call
inc
fldl
xor
ds
push
mul
outsl
mov
mov
repz
cmp
xor
cmpsl
push
sbb
decl
out
dec
lea
data16
add
xchg
int3
add
jns
ljmp
ljmp
ljmp
or
daa
jbe
testb
int3
int3
insl
mov
mov
jne
cmp
or
inc
fidivrl
outsl
incl
jp
push
sti
adc
ss
js
es
movsb
stos
repz
clc
or
inc
dec
xchg
adc
into
mov
ljmp
cld
test
xor
and
fidivrl
cmp
add
xchg
lret
push
imul
jecxz
cmc
ljmp
popf
aam
xchg
inc
cmp
push
in
shr
adc
jmp
std
jno
shr
push
leave
arpl
ja
mov
enter
ljmp
xor
push
arpl
imulb
xor
cmpsl
adc
adc
nop
mov
fisubrs
push
cmp
call
loop
cld
into
fldl
test
hlt
or
data16
or
sub
fdivp
rorb
aam
inc
lcall
push
ljmp
lcall
adc
xor
cmp
inc
pusha
jecxz
mov
jb
sahf
jno
jl
inc
mov
and
and
out
push
insl
cmpsb
inc
lcall
jmp
insl
sbb
stc
and
pop
aad
mov
or
jnp
cs
test
aam
out
xchg
shlb
xchg
mov
loopne
mov
and
adc
clc
sbb
aam
cmp
fwait
dec
and
mov
inc
push
or
cmp
sbb
sti
fsubrl
mov
addb
xor
jns
xor
lcall
push
cmp
and
repz
outsl
pop
test
pop
jo
inc
mov
or
cmp
mov
cli
fdivs
mov
daa
pextrw
mov
add
jle
testl
fdivrs
cmp
call
test
pusha
insb
xchg
xor
aaa
flds
adc
loopne
call
mov
xor
aad
enter
loop
repnz
jle
pop
outsb
adc
out
mov
adc
xchg
data16
inc
mov
outsl
dec
push
inc
add
jg
cmp
ja
fldenv
ljmpw
cli
arpl
jno
andb
push
movsb
ljmp
mov
in
enter
inc
negl
and
in
or
ret
mov
pop
cmp
pushl
sub
jae
jg
xchg
xchg
dec
arpl
sbb
loop
mov
pop
sbb
lcall
push
cmp
popf
jmp
jbe
cwtl
pop
mov
sub
arpl
inc
cwtl
insb
adc
push
adc
arpl
mov
mov
movsb
xor
sbb
mov
rolb
or
mov
das
sub
jns
sarl
mov
fmull
cmp
sahf
mov
jle
lods
sub
fisttpll
inc
and
popf
popa
fisttpl
inc
mov
dec
pop
pop
jae
repz
sbb
pop
xor
pop
fnstcw
ret
dec
das
int
pop
or
mov
sbb
andl
add
movl
push
dec
or
loop
mov
lods
loope
jb
or
bound
or
in
add
mov
hlt
cmpsb
cmp
inc
sti
js
pusha
jl
jg
jg
jmp
and
jbe
push
les
call
lcall
inc
out
aam
xor
add
cmpsl
sub
mov
rolb
adc
das
sub
pushl
in
inc
mov
icebp
or
shl
outsl
or
add
aam
mov
call
popf
mov
jb
lahf
sub
inc
or
nop
inc
sbb
mov
jg
scas
mov
das
xor
jo
add
pusha
fildll
insl
movsl
orb
cmp
enter
jbe
jnp
in
dec
ds
nop
iret
test
mov
adcb
jg
fisubrs
fucomi
adc
fcomps
jae
inc
clc
xlat
into
cmc
nop
cmp
call
jge
jno
scas
scas
jecxz
sub
rcrl
mov
sub
pop
fwait
sub
decl
outsb
mov
xor
cmc
daa
rorl
fsub
sbb
mov
xchg
pop
test
scas
rcl
int3
mov
ret
cmp
or
aam
mov
mov
stos
pop
fiadds
dec
outsb
adc
sub
scas
sub
test
call
jl
gs
xlat
outsl
mov
cs
pminsw
inc
cmp
sbb
jmp
and
inc
fcmovnu
cmp
out
inc
mov
pop
adc
pop
int3
adc
scas
push
xlat
xlat
xchg
fcomip
mov
scas
mov
bound
xchg
ret
xor
cld
pop
call
or
outsb
add
pop
andb
inc
aas
sti
add
inc
xchg
les
mov
sarb
pushf
dec
loope
adc
cmp
or
add
dec
add
and
in
loopne
icebp
call
sub
movsl
in
test
dec
sahf
fwait
mov
pop
xchg
out
push
pop
pusha
inc
mov
mov
and
aas
decl
ljmp
out
js
cs
cwtl
rorl
mov
movsl
adc
pop
arpl
inc
mov
push
inc
bound
scas
pop
inc
mov
loop
cltd
scas
imul
cmpsl
pushf
mov
cs
out
adc
jmp
dec
add
inc
adc
lds
sbb
push
xor
mul
daa
pop
in
gs
lcall
push
mov
jge
mov
xchg
pop
cmpsl
dec
jne
inc
mov
pop
imul
add
cmp
inc
bound
or
mov
stc
push
aam
pop
outsb
iret
xor
insl
call
out
movsl
jno
int3
add
fs
and
cmpsl
mov
test
es
mov
mov
fiaddl
addl
adc
loop
jmp
hlt
icebp
imul
test
cld
clc
cmp
shrb
or
xor
cltd
in
mov
in
mov
push
loope
xor
adc
mov
call
sarl
dec
in
out
pop
fcomps
or
js
movsb
or
fsub
insb
jecxz
bound
adc
sub
sbb
jbe
mov
mov
push
iret
jmp
call
sub
sbb
ljmp
inc
xor
jg
cmpsl
enter
adc
decl
sbb
dec
andb
and
cmp
cwtl
test
pop
mov
movsb
mov
adc
cmp
cmp
pop
or
jge
mov
shll
jmp
fildll
aaa
inc
iret
mov
pop
cmp
lcall
in
pop
clc
call
cmp
jns
stos
or
arpl
incl
mov
repz
sbb
fcoml
jo
push
enter
leave
jbe
stos
cld
jmp
or
mov
pushf
or
xor
lock
xchg
push
inc
push
xchg
ret
sbb
pushl
loopne
inc
push
lods
int3
aam
inc
adc
test
xchg
pop
inc
push
mov
loop
ljmp
pop
jmp
dec
shrl
out
insb
mov
repz
in
filds
sub
or
in
jg
pushl
sub
dec
addr16
or
xchg
aas
cmc
js,pn
inc
insb
cmc
into
test
inc
jge
dec
push
pop
jle
mov
stos
aas
dec
pop
sbb
lret
cmp
mov
sbb
inc
in
call
loopne
push
dec
inc
stc
lahf
inc
pop
jg
arpl
or
rorl
call
jl
and
xchg
out
std
sbb
fbld
cs
jae
lret
pushf
sub
aam
lds
movaps
call
inc
mov
ja
and
ss
mov
cltd
inc
xlat
mov
add
xchg
outsl
push
pop
roll
sub
test
mov
pop
fdivrp
outsw
call
cmpsb
mov
pop
in
dec
out
jb
sbbb
xchg
int
stos
or
mov
mov
out
pushf
frstor
pop
sub
pushf
push
scas
insb
pop
cs
sub
jle
call
ja
cmp
in
cs
incb
gs
lahf
pop
ds
bts
push
or
negl
bound
add
out
and
pop
iret
jp
mov
imul
lret
xor
mov
stc
sahf
test
mov
call
pop
mov
sbb
int3
icebp
sbb
rclb
and
loope
add
pushl
popf
push
test
mov
xchg
into
dec
dec
mov
test
mov
sarl
mov
outsb
jnp
test
mov
fisubl
sbb
sbb
test
rorb
jle
test
aam
or
mov
add
hlt
cmp
pusha
jbe
daa
es
rcr
loope
test
jno
packuswb
mov
test
aam
out
sub
sub
insl
dec
push
sti
jmp
xchg
mov
and
lcall
stos
sub
icebp
mulb
jnp
in
stos
incl
test
les
pop
xor
cld
cmp
mov
cmp
cmpsl
mov
and
jmp
mov
idiv
das
xchg
cmp
outsb
mov
incb
mov
xchg
ret
cmp
sbb
and
subb
push
loopne
dec
mov
call
pop
inc
outsl
jp
fcos
pushl
call
push
add
repz
push
mov
xorb
lcall
adc
and
sub
and
jbe
in
bound
cli
adc
xchg
dec
mov
xchg
cltd
dec
ret
enter
pop
aad
and
or
xchg
ret
ficoms
stc
fmul
xchg
ret
jge
mov
ss
adcb
pop
jno
mov
pop
out
pop
jmp
adc
sbb
mov
cs
rcr
aas
mov
rol
rcr
andb
pop
mov
xchg
xchg
out
sahf
jle
jge
or
push
mov
stos
mov
loop
loopne
add
ljmp
lcall
out
cli
ror
xchg
push
insb
movsb
jmp
arpl
in
jo
mov
scas
sbb
jg
jg
xchg
jno
or
xor
jno
sti
or
inc
pop
insb
ss
sub
mov
lret
outsb
pop
repz
mov
orl
stc
mov
movsb
iret
std
push
cltd
imul
leave
pop
into
addr16
lock
das
inc
ljmp
in
mov
mov
push
dec
jmp
dec
sbb
xlat
rcl
adc
add
std
popa
and
sahf
pushf
ljmp
jge
scas
test
shlb
aaa
xchg
andl
lcall
nop
movsl
pop
fnstcw
push
jg
mov
add
cmp
icebp
and
inc
xchg
lcall
arpl
cmpsl
adc
mov
sub
cmp
pop
jo
js
shr
stos
aam
call
push
flds
mov
arpl
add
sarb
je
mov
lcall
dec
mov
add
or
push
loopne
sub
in
stos
dec
mov
decl
sub
or
xchg
jle
sbb
out
call
lret
dec
fstpt
push
scas
sbb
pop
cli
decl
inc
push
dec
cld
xor
mov
arpl
decl
jp
fistpl
rorb
pop
xor
loopne
xchg
adc
inc
clc
cmp
fidivrl
jbe
adc
lret
sub
loop
test
add
test
inc
ljmp
jl
xchg
xor
sti
hlt
or
pop
xor
dec
mov
cwtl
jnp
filds
addb
icebp
mov
leave
xchg
and
jnp
out
and
and
xor
mov
dec
jg
push
mov
mov
pop
push
leave
stos
jg
push
test
inc
push
mov
std
xor
lcall
into
mov
push
mov
mov
rorb
lcall
inc
push
ret
mov
mov
pop
dec
sahf
aaa
jmp
mov
mov
jb
push
xchg
push
call
clc
cli
cmc
sahf
imul
push
mov
js
cmpsl
sbb
in
movsl
lret
cli
push
int
mov
xor
push
js
scas
iret
sub
mov
add
fwait
loope
lods
xor
aaa
inc
ljmp
in
fdivs
or
or
jmp
mov
std
fwait
into
or
fdivp
filds
insb
lds
incl
aas
sub
into
fldenv
dec
cmp
mov
mov
sbb
mov
lods
mov
jb
xlat
mov
mov
pushl
stos
call
out
cwtl
outsl
rorb
xchg
enter
neg
sahf
cmp
inc
sbb
fcompl
mov
jo
inc
and
cmp
inc
ljmp
sub
rolb
pop
aaa
or
lcall
loopne
jmp
hlt
jmp
mov
stos
push
add
loope
cmp
call
scas
rcll
int3
scas
enter
out
jbe
jno
sbb
add
out
fisubrs
pop
adc
push
mov
push
mov
pop
mov
adc
pop
xchg
mov
xor
incl
xorb
das
call
mov
sbb
lds
jne
sub
cmp
test
call
push
xchg
jmp
cmpsb
in
popf
lods
mov
loope
aad
or
std
push
sub
sbb
jbe
incl
lods
lods
mov
jmp
pop
xor
lods
jmp
pop
test
cmc
call
jp
pop
mov
ror
lock
push
jo
ja
sub
lods
adc
cmp
mov
out
ljmp
dec
jp
sti
adc
int
mov
ja
jmp
xchg
mov
jmp
push
fdivr
pop
cwtl
dec
enter
iret
enter
pop
inc
outsb
push
cmp
call
and
dec
xchg
clc
pop
jge
lea
push
xchg
sbb
add
js
cmpsb
or
sub
in
lds
pusha
mov
fsubrp
aas
cld
int
push
decl
lock
cwtl
cld
loope
sbb
fdivs
sbb
or
in
lahf
das
ja
push
pop
leave
ss
in
call
cld
scas
cmp
push
pop
pop
nop
lds
jg
jmp
shl
shll
inc
pop
jecxz
mov
xchg
shl
push
dec
sahf
pushl
add
cmpsb
sbb
sbb
add
pop
mov
mov
mov
lcall
dec
pop
mov
insl
xchg
test
aas
in
rcl
ds
ss
push
scas
stos
or
int3
mov
outsb
mov
jmp
dec
xchg
movb
test
mov
aaa
adc
jecxz
rorl
fdivrs
inc
mov
lods
add
sti
out
sbb
out
and
xchg
test
jb
iret
incl
mov
pop
testl
call
pop
test
mov
test
call
jmp
jnp
les
aas
add
cltd
xchg
ljmp
cmp
stc
pop
or
das
movsb
nop
dec
daa
sub
sbb
ljmp
cltd
xor
clc
mov
dec
pop
insb
pop
cmp
outsl
orl
call
sub
and
xchg
mov
inc
movsl
mov
test
cmp
pop
fwait
cmp
lods
sub
ljmp
and
mov
std
test
mov
daa
fiaddl
shlb
dec
call
mov
ss
xchg
ljmp
add
aam
or
and
decl
ja
mov
mov
sar
pop
sub
data16
pop
or
xchg
test
lcall
and
clc
cmp
mov
cltd
scas
pop
test
mov
add
xor
mov
jg
addr16
addr16
mov
ss
xchg
fstl
fnstsw
cmp
cmp
or
popa
and
out
dec
sbb
imul
pop
dec
lock
insb
cmpsb
mov
fcoms
push
pushf
pusha
inc
jmp
cmp
shrl
and
add
aas
adc
lret
imul
pop
cmp
pushl
idivl
push
in
adc
sub
adc
cmp
push
ret
push
mov
lds
sbb
mov
mov
sbb
fldl
mov
mov
shrb
ss
lods
movups
push
and
or
jmp
push
push
jge
decb
or
jg
insb
pop
lret
pop
xchg
inc
pop
mov
call
mov
dec
cwtl
popf
inc
arpl
mov
lret
or
pusha
stos
mov
cwtl
je
fiaddl
loop
dec
add
fnsave
pop
xor
clc
in
xlat
cmp
sub
fdivr
mov
jb
add
out
je
loopne
shl
push
inc
add
mov
sbb
dec
push
lcall
adc
iret
subl
push
sbb
and
push
jo
or
mov
push
cmp
lds
mov
or
mov
decb
push
adc
pop
mov
dec
insl
sub
sar
call
xor
adc
xchg
fsubrl
pop
fs
out
mov
sub
stc
jae
mov
cmpsl
sub
inc
fists
out
mov
shll
jecxz
cltd
ret
sbb
enter
cli
jge
bound
popf
mov
mov
and
and
mov
pop
imul
ljmp
lock
sbb
lods
lock
jl
std
xchg
mov
and
popa
adcl
push
outsb
mov
and
repnz
add
stc
mov
jg
loopne
mov
mov
mov
jo
add
enter
ret
jmp
lock
dec
scas
call
sub
dec
ret
pop
mov
mov
xlat
xchg
call
je
cmpsb
add
scas
jl
xchg
insb
jo
jge
xchg
pushf
loopne
pop
mov
incb
pushl
ja
ljmp
in
outsl
jb
lods
mov
mov
inc
sub
fcmovnbe
int3
jno
sbbl
inc
adcb
add
sbb
and
and
mov
enter
repz
mov
out
mov
mov
lea
push
xchg
xor
movsl
dec
cwtl
out
fsubrp
xorb
mov
jmp
xor
xchg
add
popa
inc
adc
mov
nop
mov
data16
mov
imul
and
jae
inc
dec
imul
ret
lcall
scas
out
pop
mov
popa
inc
mov
int3
ja
jmp
adc
mov
hlt
mov
inc
and
test
aam
jg
mov
mov
movsl
pop
and
inc
hlt
lahf
out
jns
lahf
clc
notb
mov
dec
mov
jnp
inc
push
sub
pushl
or
stos
dec
sbb
or
stos
mov
mov
or
push
movsl
push
inc
hlt
push
jmp
and
push
jl
and
jge
fidivrl
cmpb
cmp
mov
mov
out
and
or
push
sub
push
es
insb
repz
mov
dec
dec
adc
xabort
ljmp
pop
push
std
imulb
cmp
cmp
add
pop
jg
incl
jg
lret
iret
xchg
jb
outsl
dec
lods
pop
or
dec
pop
mov
mov
out
adc
sbb
cltd
mov
mov
cs
adc
stos
lea
aas
loopne
std
pop
xchg
xor
or
lock
dec
jmp
sub
lret
cmpsl
lock
pop
test
ljmp
jmp
inc
lcall
js
jns,pt
fsubr
negb
xor
pop
insl
les
es
dec
addr16
out
popa
mov
or
icebp
inc
xchg
insb
and
scas
enter
xchg
aas
hlt
lret
mov
add
lcall
mov
sbb
ja
aaa
jae
notb
xor
lret
sbb
into
add
pop
mov
jo
stos
pop
fisubrl
add
repnz
push
xchg
les
push
in
cmp
lret
call
scas
pop
int3
jae
fptan
stc
test
lcall
cmp
ja
out
sbb
sub
inc
jnp
xchg
dec
ds
int
idiv
sbbb
incl
movsb
ret
or
push
aas
inc
lds
outsb
mov
popf
les
hlt
in
mov
pushl
mov
fildll
sbb
lock
xlat
lret
mov
sbb
push
push
xchg
sbb
adc
push
lods
adc
mov
or
sbb
jmp
push
add
call
pop
jbe
test
xchg
pusha
sub
adc
out
cwtl
fisubrs
inc
aad
movsl
jmp
push
inc
mov
mov
push
push
enter
xchg
ficoml
lret
and
decl
or
pusha
or
jbe
xchg
and
inc
rcrl
subb
sub
scas
clc
push
pop
out
adc
xchg
mov
lods
cmpsb
dec
or
out
outsb
xor
xchg
xor
repz
sahf
xchg
mov
xor
xchg
mov
dec
dec
je
add
addr16
ljmp
cmpsb
and
push
aaa
cwtl
sbb
mov
jo
or
sbb
outsl
clc
decl
outsl
adc
jecxz
test
xchg
push
sbb
jl
cli
mov
dec
hlt
repz
xorb
jbe
rcr
jne
push
mov
jecxz
out
cmpb
call
rclb
ret
pushf
cmpsb
pop
adc
pcmpgtd
fisttpl
push
mov
cmpsl
jbe
sbb
xor
call
subl
jge
inc
lret
movsl
jl
sub
in
xchg
mov
or
pop
add
fiadds
outsl
outsl
cli
jmp
data16
int
fmul
mov
out
xor
sbbl
mov
inc
mov
adc
sahf
adc
xor
aaa
xchg
movsl
xchg
cltd
jne
dec
subb
roll
fmuls
jle
xor
inc
jp
shl
rclb
pop
repz
pop
and
in
cmp
pop
cmp
and
and
cwtl
sbb
ja
lcall
ret
repnz
sub
ficoms
sar
and
aaa
mov
stos
outsl
dec
out
fnstenv
mov
pushl
lcall
ss
inc
rorl
inc
sbbl
or
add
test
sar
jg
inc
jno
sub
test
das
xor
cmpsb
or
dec
lahf
inc
roll
cmp
fld1
popa
scas
in
adc
jge
pop
push
push
loop
lcall
xor
hlt
add
lahf
ljmp
aaa
pusha
add
ljmp
mov
lcall
jnp
push
xor
mov
incl
in
jb
jb
xchg
into
adc
cmp
mov
movsb
out
or
nopl
inc
loope
ds
mov
inc
sbb
adc
cmp
pop
or
push
jp
in
shlb
jmp
mov
cmp
es
mov
repnz
hlt
aas
push
mov
cmp
jmp
in
sahf
push
in
sti
push
dec
hlt
bound
adc
push
jne
xchg
mov
scas
loop
jg
lcall
enter
imul
mov
mov
daa
adc
inc
mov
ljmp
push
mov
and
out
mov
mov
neg
lds
pop
lock
mov
pusha
xchg
xor
mov
inc
jae
pop
loopne
test
cmpsb
hlt
lcall
aad
jle
fisubrs
clc
xchg
ret
cmc
ja
test
and
fdivl
or
sub
std
lcall
jg
fdivl
sub
add
xor
dec
in
into
mov
lcall
pop
dec
inc
in
lods
insl
mov
aad
cmc
and
insb
pushf
mov
xchg
shlb
cltd
pop
filds
pop
call
das
and
mov
jg
pusha
add
fiadds
sahf
gs
xchg
fsubs
pop
dec
xor
and
add
popa
test
addr16
pop
and
xchg
testl
jl
push
mov
jg
stc
xchg
push
cmp
pop
cmp
pop
loopne
push
loope
in
data16
xchg
sbb
sub
pushl
in
mov
add
ret
push
pop
in
xor
fistps
fistl
pushl
sbb
add
fdivr
push
xor
sub
jne
je
loop
rorb
fs
decl
inc
cmc
in
jne
mov
xor
push
clc
xchg
out
xchg
mov
loop,pn
and
push
inc
jmp
inc
mov
scas
addr16
xor
icebp
sbb
es
pop
bound
jmp
inc
in
lahf
inc
mov
push
add
ret
out
outsb
enter
push
out
and
shrl
sbb
inc
push
decl
and
mov
push
mov
scas
std
outsb
push
test
cli
dec
lods
or
jnp
dec
add
rcll
jo
sahf
mov
adc
inc
dec
pop
outsb
aaa
lods
push
mov
sbb
lahf
mov
pop
aaa
and
into
mov
xor
cmp
sbb
mov
lcall
pushf
inc
mov
rorb
mov
aad
xor
adc
cmpsl
xchg
sub
stc
cmp
lcall
xchg
add
test
in
cmc
and
leave
mov
push
mov
xlat
jb
enter
icebp
mov
test
jecxz
mov
xchg
incl
and
xlat
and
mov
inc
push
jmp
push
pop
in
jnp
mov
shl
add
jg
jge
add
sbb
lahf
lret
inc
cltd
inc
and
hlt
test
fildll
mov
cltd
adc
jno
sbb
mov
stos
jbe
in
outsl
adc
cli
lret
aas
sbb
repz
jge
pop
call
sbb
and
mov
jmp
jmp
out
or
jg
sbb
pop
sbb
xchg
movsl
iret
sub
fsub
mov
mov
fildll
sub
aaa
aam
jno
jl
inc
and
mov
lea
pop
mov
cmp
xchg
xor
push
repz
cltd
jae
mov
lret
pop
iret
in
xchg
pop
inc
repz
stos
pop
inc
cmp
inc
nop
fwait
sbb
pop
ja
ret
push
iret
lods
pushf
mov
fbstp
jge
inc
scas
mov
push
push
sub
cld
sbb
in
inc
enter
and
inc
popf
jmp
mov
xchg
dec
add
cs
outsb
jecxz
pop
sub
and
stos
scas
lcall
mov
fwait
lret
gs
xchg
inc
sub
dec
pop
das
inc
add
mov
cmc
lcall
push
mov
adc
or
mov
mov
push
push
or
in
int
mov
sbb
dec
inc
mov
stos
cmp
push
test
xchg
or
mov
push
nop
pushl
iret
cmp
rcrl
testb
cmc
xchg
jno
push
mov
jno
push
sbb
add
ljmp
mov
mov
scas
mov
jl
dec
fstpl
ja
stos
in
scas
jl
fldcw
and
xchg
cltd
pop
adc
sub
in
pusha
decl
dec
pop
or
push
and
xchg
addr16
push
outsl
xchg
and
push
ljmp
sar
xchg
sbb
mov
enter
sbb
in
roll
stos
or
das
add
adc
dec
aaa
xorb
repnz
pushf
xchg
inc
std
mov
mov
jno
idivl
dec
inc
dec
pushf
movsl
sbb
cmpsl
sub
data16
jg
imul
or
inc
mov
mov
ret
pop
insb
push
xchg
jg
dec
insb
mov
decl
addl
fmull
shl
and
mov
xchg
mov
movsb
arpl
rol
out
popa
std
incl
js
imul
jae
push
inc
inc
and
xchg
push
mov
mov
std
adc
and
fxam
xor
mov
cmp
decl
jecxz
and
push
mov
push
pushf
push
inc
and
xlat
inc
sbb
add
mov
pop
test
ljmp
in
push
fisttpll
mov
popa
xor
jmp
mov
add
in
fcompl
dec
mov
pushf
fbld
fisttpll
das
popf
or
std
mov
dec
cmp
clc
cmp
pop
mov
ljmp
pop
cmpl
dec
lods
sbb
push
pushf
mov
pushl
xlat
iret
mov
pop
xchg
or
sub
in
out
sbb
shl
dec
fimull
cld
call
pop
push
or
icebp
imul
ja
or
inc
sub
nop
pop
mov
xchg
shr
lds
xor
mov
ljmp
mov
cmp
inc
mov
jb
movsb
and
testb
fimuls
decl
rolb
sub
dec
sbb
popf
mov
mov
fwait
test
mov
insb
dec
jecxz
jns
jno
aaa
mov
and
push
aas
inc
fisttps
fcomps
push
lahf
push
xor
mov
adc
cwtl
and
dec
push
dec
dec
mov
jmp
xchg
inc
xor
cld
ja
mov
fcmovnbe
cltd
iret
popa
pop
lea
dec
mov
lock
xor
cld
into
nop
popf
sub
mov
call
ljmp
sbb
push
pop
prefetch
sub
mov
rorl
sub
decl
fisubl
insb
repnz
outsb
rcr
cld
repz
lock
sbb
test
lret
cmp
mov
dec
dec
add
cmpsl
pop
mov
sbbl
add
lock
call
sbb
in
pop
dec
scas
lods
push
test
cmp
and
sbb
adc
mov
fucomp
insl
jae
je
arpl
sbb
jbe
out
outsl
jne
or
insl
ljmp
mov
sub
out
shll
addr16
xchg
push
incl
sub
cmpsb
stc
jns
mov
insb
stc
lea
rolb
test
imul
mov
sbb
push
stos
pop
mov
jge
or
test
push
insb
or
sub
incl
dec
loop
imul
mov
or
pushl
or
xor
sar
xlat
je
mov
shll
int3
sbbl
call
jmp
mov
add
into
fstl
cmp
mov
mov
push
adc
mov
stc
aad
mov
fucom
addr16
test
in
movsb
adc
mov
jl
or
hlt
cmp
data16
frstor
mov
mov
leave
lock
jae
cmp
incl
mov
mov
cmc
cwtl
icebp
push
in
aas
ret
lret
test
orb
cmpsl
mov
out
inc
mov
jmp
cwtl
pop
mov
mov
testb
and
mov
pushl
shlb
dec
or
and
sub
cmp
addr16
push
jo
loop
jge
test
rclb
les
cmp
pushf
popa
sub
add
int
movsb
mov
shld
jmp
sub
xor
xchg
cmpsb
scas
popf
inc
cmp
jns
mov
mov
mov
mov
mov
pushf
loopne
xchg
test
test
insb
push
pop
xchg
ret
xchg
mov
push
add
iret
shrb
bound
test
rorb
jmp
loopne
push
ljmp
gs
mov
adc
gs
cltd
jle
sub
loopne
ljmp
mov
lock
add
xchg
add
mov
xor
adc
mov
jl
movsl
jnp
push
fdivrs
lods
jae
enter
mov
sbb
hlt
add
jmp
xchg
scas
pushl
dec
and
aas
push
mov
pop
addr16
test
addr16
out
pop
clc
mov
mov
mov
insb
aam
jp
sbb
adc
out
lcall
sti
add
decl
outsb
sub
stc
sub
notl
les
std
aam
popf
mov
jmp
sub
pushl
in
jns
cmp
inc
sub
test
pop
push
pop
xchg
inc
dec
aaa
and
loop
jmp
mov
and
xchg
xchg
enter
xor
les
ljmp
mov
scas
cli
jmp
aaa
xchg
das
daa
mov
pop
jnp
enter
imul
cmpsb
stos
sub
std
jnp
bnd
xchg
or
and
pop
ss
sbb
sub
lcall
fisttpll
cmc
out
jae
xchg
lods
dec
mov
jne
pop
call
add
sub
inc
sar
push
hlt
dec
mov
insl
fldl
dec
push
mov
or
cwtl
mov
cmp
pop
out
decl
cld
add
mov
dec
sub
lahf
aas
xlat
add
loop
pop
xor
stc
push
call
jne
lods
mov
xchg
popf
jnp
aam
je
insl
mov
and
or
pop
mov
push
xor
rcll
fsubrl
sbb
xlat
dec
or
or
add
in
adc
adc
mov
xchg
pop
imul
imul
mov
mov
aam
mov
fisubl
pop
mul
xchg
iret
fistps
fs
ds
sub
in
push
ret
push
int3
add
sti
jp
enter
sar
incl
inc
in
out
repz
inc
clc
sub
jg
in
ljmp
adc
lcall
dec
pop
dec
les
idiv
push
inc
pop
into
fdivl
pushl
pop
or
cli
jne
sbb
stc
repnz
jmp
xchg
inc
fidivs
lcall
pop
fdiv
test
mov
and
jne
pop
or
mov
lcall
push
daa
imul
test
in
mov
inc
test
rcrl
inc
jns
mov
jmp
fldenv
decl
dec
mov
and
inc
cmp
insb
mov
ds
out
inc
mov
lods
jnp
push
sub
and
dec
mov
outsl
xor
mov
xchg
adc
fsub
cmp
cmp
cmp
insl
pop
cmc
lcall
sahf
add
jle
xchg
ret
rcl
imul
fistpl
in
fcomip
ds
xor
pop
lret
lcall
leave
cld
jg
cli
call
sub
int3
and
jmp
test
lods
hlt
mov
and
or
and
dec
into
cmp
mov
scas
call
pop
leave
std
inc
outsl
pop
xchg
cmp
call
inc
and
inc
test
int3
push
fidivrl
inc
mov
mov
repnz
ljmp
jg
stos
popf
pop
leave
adc
in
jmp
xchg
adc
adc
push
divl
loopne
daa
loopne
jne
xchg
mov
scas
cmp
fistpll
push
scas
lods
aad
mov
out
mov
xchg
and
push
push
xchg
hlt
aaa
mov
stos
adc
mov
adc
push
dec
stos
or
pop
jns
stos
push
aam
push
lret
decl
jl
out
mov
movsb
iret
aaa
lds
mov
addb
mov
mull
sbb
ljmp
jo
testb
ds
clc
aam
sbb
in
sub
cmp
mov
lock
decl
xor
repnz
mov
cltd
mov
pushf
xchg
movsl
fldt
or
filds
push
mov
mov
mov
test
inc
push
stos
dec
pop
jmp
mov
adc
out
adc
leave
mov
outsb
inc
xchg
xor
dec
cmp
lcall
hlt
call
fisttps
outsb
xlat
inc
jbe
pop
popl
dec
leave
add
xor
std
adcl
mov
push
jge
pop
sbb
fcomi
xor
push
sub
pushf
jbe
std
imulb
or
insb
and
stos
mov
jg
push
subb
pop
sbb
cmp
pop
add
sbb
or
mov
dec
es
outsl
pushf
arpl
mov
inc
lret
adc
push
push
mov
psubb
repz
pop
pop
add
pop
push
sub
pop
push
cmp
scas
repnz
dec
lea
int3
or
and
xchg
mov
call
jmp
xorl
cltd
inc
pop
add
fisubs
push
inc
xor
lcall
mov
push
es
dec
adc
jp
test
mov
enter
shll
test
dec
rolb
push
cmc
stos
fdivs
mov
movsb
insb
pushf
add
inc
sub
pop
dec
ret
lret
or
jmp
or
and
movsb
push
aam
mov
mov
or
and
gs
fmulp
xor
das
in
fdivrp
call
out
shll
add
repnz
adc
push
in
lret
icebp
mov
jl
cmp
pop
mov
setns
stos
scas
dec
neg
dec
jo
scas
sub
sbb
loop
mov
jmp
call
fwait
jno
pop
dec
fld
das
xor
inc
loop
out
cmpsl
push
shlb
hlt
decl
mov
cli
stos
sub
pop
jnp
aam
mov
add
pop
add
adc
hlt
push
cmp
in
call
or
aaa
xchg
stos
enter
mov
adc
push
aaa
popa
pushl
mov
mov
push
popf
cld
mov
stos
rorb
in
jecxz
enter
popf
cmc
add
lcall
outsb
mov
pop
test
int
push
clc
cli
call
push
js
jne
mov
call
mov
ja
adc
cwtl
cmp
jmp
dec
lcall
incl
rcrl
idivl
insb
jl
or
stos
xchg
repnz
cmp
in
insl
stc
xor
lds
enter
stos
xchg
mov
xchg
fcomip
inc
or
cmp
adc
test
xchg
or
fdivrs
std
nop
fdivl
out
ss
mov
xor
jmp
insb
inc
jbe
fsts
jmp
das
dec
and
mov
dec
pop
aad
ja
pop
mov
adc
adc
xlat
ja
sar
pushl
jle
test
cmp
cmp
sbb
push
mov
fcmovnb
sub
pushl
outsl
dec
repnz
and
ja
pop
mov
push
cwtl
mov
jmp
adc
sbb
iret
cmp
enter
dec
icebp
subl
loope
int3
out
fcoms
ret
fadds
repz
call
sbb
xchg
mov
xchg
mov
call
ja
cmp
mov
incl
adc
lret
push
add
std
roll
mov
bnd
jg
add
xorb
xor
mov
inc
fwait
inc
jge
stos
shlb
decl
mov
xchg
push
das
sub
jnp
dec
aam
jmp
test
sbb
out
cmp
mov
xor
iret
dec
es
fsubr
sub
mov
insb
mov
push
lret
jmp
insl
int3
out
push
ljmp
inc
stos
adc
movsl
fwait
adc
push
in
jmp
fistl
data16
adc
jnp
mov
jle
aam
into
push
pop
fcom
in
xchg
and
sub
xor
out
mov
inc
sbb
sbb
ljmp
xchg
jne
ficomps
rcr
xor
in
jge
or
ja
jp
call
in
pop
int3
lret
movsb
repnz
push
add
adc
ljmp
ret
ja
inc
loope
das
dec
lods
loope
and
pop
data16
icebp
insl
jmp
incl
jae
ret
lods
sti
xlat
popf
mov
push
pop
pop
loopne
pusha
add
dec
decl
xchg
jne
imul
mov
and
mov
and
xlat
cmp
test
sub
jne
sti
call
data16
or
cs
stos
dec
stc
sbb
loopne
shlb
xor
leave
pop
inc
testl
stos
push
loopne
daa
pop
mov
fcompl
cmpsb
jge
iret
sbb
rcrb
ljmp
jecxz
cld
into
mov
mov
in
rcll
dec
lds
int3
mov
pushl
scas
cwtl
lock
fmuls
add
pop
rolb
pop
rclb
aas
das
cli
incl
xor
shlb
dec
movsl
icebp
push
fstl
mov
lds
pusha
xchg
std
inc
jg
call
je
fwait
or
addr16
cmp
dec
loopne
push
mov
insl
outsl
clc
dec
jmp
mov
fcoml
cmpsl
pop
iret
sarb
lock
push
icebp
decl
cs
and
inc
fbstp
push
pop
ds
incl
pop
aas
shll
sub
pusha
mov
add
pop
scas
cmp
jae
xchg
test
lods
ret
int3
cmpsl
aam
mov
jle
and
jg
inc
add
test
mov
xor
mov
dec
sqrtps
fsts
or
fcoml
or
mov
nop
bnd
int3
enter
iret
lock
push
out
ret
sub
ljmp
cli
jmp
jnp
lea
insl
pop
fildll
cmp
das
xlat
hlt
repz
rclb
jg
fidivrs
das
sub
mov
repz
xchg
mov
sti
mov
xchg
xor
push
inc
sbbb
add
ret
sub
enter
mov
cmp
ja
call
lcall
orb
ljmp
cmc
lret
pushf
lods
in
imul
mov
push
fadds
mov
fwait
dec
and
sbb
ljmp
clc
pop
cmc
shlb
xchg
dec
movntps
mov
mov
std
lea
push
in
xor
push
adc
add
lcall
mov
sbb
sbb
lcall
aad
and
xor
das
in
andl
rcr
mov
xor
xor
jecxz
cmp
out
fwait
pop
mov
mov
imul
or
jne
es
aam
dec
mov
jb
and
pushw
notl
jle
in
cmp
push
and
daa
fs
dec
mov
push
mov
jg
dec
xchg
ret
and
jae
mov
sahf
adc
into
push
gs
shlb
les
ljmp
fnstenv
mov
xchg
jecxz
enter
aad
sti
xor
jmp
cmc
xor
push
mov
cmp
jmp
movsl
nop
addl
lcall
add
push
and
incl
xlat
xor
inc
loop
out
icebp
mov
in
and
push
shl
mov
jno
add
jmp
mov
push
std
add
in
xor
out
mov
push
movsl
mov
ja
jmp
mov
sub
orb
add
jmp
mov
inc
enter
xchg
adc
sbb
inc
sahf
jns
flds
dec
fwait
jnp
nop
cmc
jmp
je
rorl
jne
mov
jmp
mov
notb
aaa
sbb
out
popf
xchg
xor
scas
push
mov
cmp
xor
fbld
lcall
sub
mov
je
dec
arpl
jne
or
inc
cmc
insb
sub
jge
je
popf
mov
fisubrl
mov
out
jnp
shr
jbe
scas
and
call
call
xchg
jns
rdtsc
mov
mov
and
cmp
div
add
lcall
idivl
pop
or
lcall
inc
jg
inc
out
ljmp
add
fcmovnu
push
mov
loop
inc
lcall
ret
sarb
movsb
aad
aaa
jae
in
mov
push
jbe
inc
andb
mov
push
in
adc
fs
mov
inc
fsts
mov
add
mov
inc
out
ret
popa
clc
sub
pop
push
or
scas
add
aad
lods
push
and
call
sti
int
mov
push
sbb
push
xor
jecxz
loope
sar
sub
hlt
pushl
out
xor
dec
add
jge
js
xor
add
pop
or
add
popa
push
cltd
xor
int
lret
or
outsl
xchg
pushl
sbb
rep
rcr
mov
push
es
lea
jg
cmp
lcall
fdivr
outsl
jmp
stc
cmp
shlb
fnsave
push
jmp
fimuls
jae
mov
jmp
push
dec
es
fs
mov
jbe
ja
cmp
mov
xchg
rorl
adc
xchg
xchg
cmp
push
in
jmp
shlb
sub
idiv
pop
push
sub
fcompl
shrl
adc
in
jmp
or
sub
inc
pop
mov
scas
std
std
mov
aad
lcall
mov
cwtl
sub
jno
stc
add
sbb
mov
mul
pop
ds
fldcw
ja
cli
mov
movsb
cmpsb
bound
dec
sahf
into
movsb
dec
hlt
dec
adc
adc
das
jmp
add
lods
test
notb
mov
push
add
cmp
scas
std
orl
xlat
std
hlt
push
jmp
cmp
inc
dec
mov
jae
rcrb
sub
inc
stos
roll
repnz
pop
cmc
call
push
add
xor
loope
insb
rcrl
gs
cmp
ljmp
and
add
inc
inc
xorb
jae
lret
cmc
add
dec
jns
push
mov
ljmp
call
fwait
sbb
test
xchg
scas
call
test
icebp
outsb
fisubrs
push
test
dec
ljmp
scas
xor
incl
mov
jno
je
xor
arpl
or
sbb
jae
cmp
push
add
and
jo
push
inc
insb
cmp
les
push
pcmpeqb
and
sahf
aas
repnz
mov
sub
ficomps
add
mov
sbb
mov
sbb
jecxz
cmp
push
sbb
sbb
icebp
mov
enter
ljmp
xorb
std
in
js
es
je
sbb
pop
or
inc
out
jmp
out
out
out
cmpsb
add
dec
sub
xor
push
xor
jmp
and
loopne
imul
movsl
roll
into
sub
push
and
es
xlat
inc
shrl
xchg
mov
fwait
out
test
push
bndldx
push
dec
arpl
sbb
mov
push
mov
int3
int
cmp
jl
scas
sbb
ljmp
dec
cmp
lcall
in
xchg
mov
jecxz
arpl
lock
sbb
mov
sarl
push
xchg
mov
test
sub
jecxz
pushl
and
outsb
sub
in
lahf
dec
es
sbb
out
dec
mov
insl
sub
mov
cmpsl
mov
test
and
mov
les
xchg
push
sbbb
ret
lcall
nop
pop
dec
xor
mov
mov
xor
adc
mov
bound
jle
xchg
jb
xchg
add
dec
test
push
push
insb
aad
pop
js
pop
nop
cmp
jl
or
hlt
test
scas
mov
fwait
pop
pop
cmp
cs
dec
mov
jle
std
lcall
or
jne
imul
fs
xchg
mov
pop
ljmp
adc
cmc
adc
icebp
dec
in
fwait
insl
insl
add
ja
movsl
iret
push
rclb
lcall
pop
dec
clc
popf
loopne
xchg
popf
sub
insb
inc
jp
push
in
mov
push
xchg
or
decl
or
pop
mov
sbb
sbb
fadds
add
repnz
push
ret
cld
mov
xlat
fisttpl
pop
scas
loopne
push
pushf
and
test
add
incl
inc
jns
cli
pop
stc
jmp
rorb
fisttps
rcrb
addl
push
xchg
test
sub
shlb
int
lret
sbb
clc
mov
aad
push
les
lods
jge
enter
aad
rcrb
sub
std
jae
and
inc
popa
incl
jbe
inc
lock
pop
xchg
sub
push
xchg
imulb
jmp
loopne
pushf
enter
imul
lret
enter
cmp
mov
shl
or
lcall
sub
sub
negl
push
jge
or
xchg
leave
stc
cmp
mov
ljmp
cli
int
xor
and
addr16
insb
sub
lcall
mov
mov
mov
out
fsubs
dec
jb
mov
in
sbb
shl
xchg
sub
mov
add
jecxz
push
insb
cmc
decl
cli
dec
and
xor
xlat
add
scas
cltd
mov
lcall
jmp
sahf
fidivrl
fucomip
mov
mov
stos
fldenv
arpl
xchg
push
inc
inc
inc
inc
ds
es
bound
ljmp
in
sub
std
jns
fimuls
repz
and
push
xchg
das
shlb
inc
and
push
std
call
cmp
push
mov
pushf
pop
into
pop
dec
lock
test
shlb
xchg
testb
insl
mov
je
inc
adc
out
push
out
dec
inc
std
call
cmp
sbb
jo
bound
lret
lods
jg
mov
jg
cwtl
xchg
or
mov
mov
mov
push
addr16
push
jle
push
outsl
pop
in
ja
fadd
jmp
xchg
bound
xor
mov
mov
cmp
clc
xlat
xor
and
pushf
cmpsl
lock
ds
pushf
test
jmp
nop
adc
mov
xor
push
cmp
pop
xchg
stc
push
outsl
cli
ljmp
and
aam
nop
mov
insl
call
outsl
xor
and
dec
es
sbb
mov
mov
adcl
push
jg
lcall
pop
fistpll
jb
imul
daa
repnz
jle
iret
cwtl
inc
xor
xlat
push
divl
inc
add
or
ljmp
aaa
out
and
int3
push
ja
add
call
pop
out
out
imul
pop
jl
pushl
lea
ret
ds
dec
scas
in
dec
lods
or
lods
sbb
jbe
push
pop
lahf
outsl
incl
pop
in
inc
fistpl
sbb
mov
mov
mov
dec
sub
push
pop
mov
xchg
sub
dec
pop
dec
xor
push
clc
and
out
pushf
push
inc
call
jae
sub
pop
or
pop
adc
mov
lcall
fnstenv
mov
jbe
cmc
pop
push
pop
dec
rorl
jmpw
mov
dec
and
or
stc
rcr
stos
bsr
cwtl
and
incl
add
fbstp
pop
rorb
add
into
xchg
xchg
jmp
or
imul
dec
dec
stc
sbb
xchg
jp
push
inc
push
leave
sub
cmp
xchg
imul
stos
mov
jne
pop
mov
or
fcomip
push
and
adc
enter
ret
mov
fstl
mov
mov
cltd
xchg
mov
addl
fcoms
int
xchg
cmp
cmc
aam
dec
iret
fdivl
cmc
adc
adc
ror
fprem
ljmp
mov
dec
int
or
je
jns
mov
dec
shlb
loop
jno
lcall
mov
cli
mov
xor
ret
xchg
enter
out
pop
hlt
fistpll
vdivps
icebp
insb
jnp
mov
lahf
xchg
mov
clc
call
push
or
mov
in
cwtl
jo
xchg
xchg
lods
xchg
dec
and
dec
mov
lods
ljmp
xchg
mov
sbb
lcall
shl
mov
xchg
mov
cmp
and
push
mov
enter
lcall
pushf
stos
ss
jbe
ljmp
sbb
or
push
cmpl
std
pushl
xor
nop
mov
push
je
mov
cld
add
ljmp
daa
icebp
sub
jno
es
or
sbb
push
scas
loopne
fbstp
push
jo
mov
add
push
sbb
repnz
stc
incl
push
iret
loop
out
mov
inc
iret
sbb
mov
rcl
lcall
adc
cld
std
pop
lods
xchg
loop,pn
jmp
pop
int3
sub
adc
incl
je
inc
xor
mov
ljmp
jne
jp
lcall
add
mov
mov
clc
and
add
lahf
in
sbb
sahf
jg
sarl
mov
adc
mov
jg
add
loop
dec
jb
inc
int
cmp
xlat
dec
mov
sub
pop
and
dec
test
mov
pop
ret
push
mov
fists
popf
mov
mov
ljmp
filds
sbb
call
or
cmp
data16
gs
push
mov
inc
sub
mov
cmpsb
outsl
movsl
mov
push
ljmp
pop
jge
xchg
mov
gs
mov
fildl
cmp
or
ljmp
rolb
and
dec
pop
in
jge
pop
jle
mov
ror
mulb
xor
xchg
lret
add
lcall
jecxz
lahf
jae
inc
int3
sub
lods
daa
ret
movsl
test
or
mov
ljmp
adc
ffreep
das
cmp
inc
jmp
pop
decl
pop
push
mov
repnz
cmc
add
shrb
test
xchg
pop
popf
stc
ljmp
fstpl
mov
ds
cli
shrb
jmp
xor
shl
and
lcall
lds
in
or
movsl
adc
mov
pop
cld
insl
popl
mov
insb
push
jecxz
pushl
mov
test
adc
lock
and
adc
cmp
mov
mov
mov
xchg
packsswb
arpl
sub
xchg
stc
cmp
dec
jg
das
bound
fldl
inc
scas
insl
sbb
pusha
aad
cmc
stc
or
push
aam
je
into
mov
adc
sbb
lods
fdiv
inc
ds
shll
lcall
mov
std
cmpsb
push
test
xchg
xor
fistpll
pop
pop
mov
add
mov
lock
lcall
push
nop
cld
repz
aad
cmpsb
test
out
rclb
adc
jne
sbb
mov
ljmp
sub
cwtl
mov
out
jp
sub
add
repnz
dec
repz
pop
pop
pop
dec
dec
mov
sbb
mov
aam
add
jge
arpl
cld
call
sbb
mov
ficompl
cmpl
add
add
jecxz
call
js
leave
loopne
pushf
lret
movsl
hlt
pop
push
mov
mov
subb
push
cmpsb
cmp
ljmp
cmpb
cmpsb
repz
sahf
popl
faddl
lcall
nop
cwtl
dec
sbb
stos
inc
and
call
mov
fldenv
mov
jecxz
xor
cmc
push
sti
hlt
adcb
push
scas
out
inc
fs
sar
ljmp
test
ljmp
mov
sahf
into
aaa
fstps
cmp
idivb
pushl
mov
mov
adc
js
sbb
jmp
insl
dec
clc
pop
popl
nop
ss
add
dec
mov
aaa
add
mov
pop
outsb
stos
rolb
cli
jno
insb
jo
sbb
mov
jge
popf
pop
dec
add
fildll
xlat
sbb
scas
sbb
hlt
lcall
jno
sbb
cmp
dec
arpl
popa
xchg
clc
outsb
pushf
je
or
mov
fmull
mov
fldl
jge
rcrl
push
fcmovnbe
cmp
test
push
lock
daa
repz
clc
fcomip
rcl
xchg
dec
xchg
repnz
lods
sahf
fsubl
push
insb
inc
pop
fsubs
rol
adc
out
sahf
fcmovnb
dec
lds
push
fmull
ficoms
mov
ret
and
ds
cmp
inc
ljmp
mov
lds
sarb
sbb
lds
mov
and
enter
jg
mulb
out
adc
inc
xchg
mov
cmp
xchg
test
scas
push
ljmp
decl
cli
fists
mov
ss
xor
mov
subb
movsl
and
nop
push
loop
jmp
sub
arpl
sbb
leave
pop
repz
jmp
or
addr16
std
incl
sub
or
daa
aam
adc
sbb
mov
dec
push
cmpsl
adc
aaa
jp
lret
pop
aas
xor
icebp
inc
push
adc
in
add
fistps
js
in
xlat
cmp
jo
adc
fcompl
adc
and
jp
adc
jge
decl
cs
push
xor
and
cmp
and
xchg
movsb
shll
bound
mov
decl
call
mov
icebp
fnsave
sbb
sarl
pop
clc
dec
sbb
inc
xchg
sbb
jb
cmp
adc
out
pop
sub
xchg
or
pop
add
jmp
dec
sbb
je
and
pop
aas
jns
test
loope
mov
icebp
jg
cmp
sub
adc
jno
outsb
adc
jbe
addb
cmp
in
sub
out
inc
cmp
lcall
xchg
adc
pop
adc
push
movsb
sub
dec
inc
shr
sbb
movsb
inc
add
out
idiv
push
je
mov
imul
hlt
sbb
insl
loope
scas
div
xchg
ret
sahf
in
jl
movsb
dec
xchg
inc
loope
fwait
adc
out
pushf
adcb
push
ds
mov
mov
lret
loop
data16
gs
popf
daa
lret
lret
lcall
das
loope
push
iret
ds
out
es
scas
adc
and
iret
mov
test
sbb
dec
and
mov
jno
lea
rcl
pushf
cwtl
pop
sarl
sbb
xor
and
call
std
decl
imul
dec
xorb
addr16
mov
stos
cmp
stc
xor
in
cmp
jmp
xchg
rcrb
clc
scas
sbb
inc
imulb
dec
test
jb
pop
js
mov
ja
test
call
cmpsb
push
mov
pop
pop
jo
pop
or
sbb
dec
iret
sub
xor
push
mov
jne
pop
push
sbb
lds
mov
jle
xor
pushl
xlat
xor
rcrb
aad
movsl
rcll
xor
icebp
jmp
rclb
sbb
fcmovbe
push
cmp
xchg
insl
push
adc
mov
cmpl
std
sbb
mov
clc
cmp
fcompl
jmp
jae
cltd
popf
add
outsb
sub
adc
aaa
xchg
aad
addr16
nop
sub
ljmp
push
ror
mov
jecxz
pop
fidivs
push
mov
pusha
bound
fwait
sbb
decl
iret
xchg
lahf
sbbl
in
jbe
add
mov
jno
sub
xchg
sbb
xchg
je
cmp
cld
xchg
aam
hlt
sub
sar
mov
pop
fnstenv
push
popf
mov
mov
mov
mov
mov
je
inc
daa
mov
outsb
jns
push
cmp
insb
mov
nop
mov
scas
mov
xor
daa
mov
call
enter
stos
inc
in
dec
xor
push
push
mov
jg
pop
sahf
pop
out
jbe
inc
int3
inc
cmpsb
jecxz
dec
xchg
scas
rcrb
gs
insb
ljmp
push
cmpsl
ds
and
daa
push
roll
xchg
cwtl
push
data16
add
cmp
fcoms
inc
mov
sub
cmp
lret
mov
jae
iret
loopne
decl
push
push
inc
stc
in
add
and
fdivl
mov
mov
incl
out
mov
imul
push
jl
add
popf
push
gs
test
mov
loopne
cmp
push
test
imull
shlb
fsubr
cmpsb
addr16
filds
sub
pop
adc
into
movsb
clc
fdiv
lcall
sarb
fstp
outsl
imul
or
mov
out
lcall
sahf
and
data16
arpl
orl
shl
test
mov
pop
jb
lcall
or
leave
insl
popa
fsubs
sub
out
mov
insb
mov
push
adc
aaa
std
incl
or
test
xorl
scas
in
sbb
jmp
loop
jg
gs
xor
jmp
pop
mov
jp
ret
mov
mov
cmpsb
mov
in
andl
ror
out
loop
xchg
gs
push
mov
shrl
in
jecxz
loopne
jle
mov
sbb
pop
add
lcall
decl
jb
cmp
popf
adc
mov
cmpsl
add
mov
sbb
jno
decl
push
xchg
ds
xor
adc
jae
pop
jmp
pop
fs
dec
add
lcall
sub
jo
push
cld
iret
sub
adc
pop
icebp
clc
add
mov
push
xchg
sar
adc
and
mov
shrb
maxps
lcall
jp
js
repnz
xor
lods
mov
and
sahf
out
sbb
sbb
pop
inc
jge
jmp
mov
jl
mov
loop
mov
jmp
mov
push
je
iret
mov
lods
mov
call
mov
inc
dec
sub
mov
fcmovbe
enter
loope
leave
mov
scas
int3
push
xor
incl
xchg
push
subl
pop
imul
stc
repnz
sbb
repnz
je
ret
mov
cmpsl
push
repnz
call
xchg
and
jns
or
sti
out
push
psubd
push
psrld
pop
mov
aam
xor
clc
decl
sar
sbb
xchg
add
cli
test
and
adc
pop
lea
jns
test
ljmp
and
icebp
cwtl
xchg
mov
pop
sub
push
adc
pushl
lods
pusha
icebp
loop
movsb
call
or
mov
sbb
pop
aad
jo
ret
dec
insb
pop
lcall
scas
jg
push
aas
inc
xchg
nop
ss
xor
adc
push
mov
sbb
decl
popa
shlb
dec
xor
jecxz
and
sub
jnp
mov
lcall
mov
adc
loop
repnz
cld
jge
push
mov
lret
jae
call
rorb
mov
inc
fiadds
les
jge
or
in
dec
dec
adc
in
jl
je
decl
mov
mov
subb
jnp
into
and
mov
mov
mov
jmp
push
mov
adc
adcl
cli
ret
push
pop
aam
cmp
lcall
sbb
imul
add
xor
rorb
mov
decl
adc
sbb
aad
and
pushf
cmp
mov
xlat
fistl
mov
ljmp
pushl
xor
cmp
outsb
mov
fmulp
or
jge
pop
call
lcall
ljmp
fwait
pop
clc
or
xchg
test
pushf
lret
mov
aaa
add
mov
ljmp
jne
add
enter
add
rorl
out
enter
std
jmp
stos
mov
neg
and
cmpsb
das
popl
nop
lret
pop
aad
pop
ret
add
das
inc
popa
push
popl
call
fs
jg
xor
out
leave
test
std
outsl
mov
jnp
out
mov
out
cmp
pushl
std
rcr
not
std
lahf
js
sbbb
daa
inc
mov
adc
mov
nop
outsl
jg
ds
jg
out
or
lcall
dec
es
or
addr16
push
rol
popa
popa
sub
insl
jnp
test
testb
fcomip
adc
sahf
scas
and
adc
nop
sub
push
loope
ljmp
iret
insl
stc
and
add
insb
pop
movsb
sbb
mov
or
pop
sbb
mov
sub
push
sbb
clc
jmp
dec
bound
rorl
stos
hlt
out
std
jnp
mov
dec
into
ljmp
rcr
xchg
scas
jo
xchg
lahf
int
lock
decl
fwait
movsl
adc
daa
es
addr16
or
icebp
inc
or
out
js
decl
jmp
pop
mov
fadd
ljmp
mov
lcall
lcall
aaa
xchg
imul
cwtl
mov
jmp
call
adc
sti
clc
push
mov
or
cmc
mov
ljmp
insl
in
and
pop
iret
cwtl
lret
pop
jg
into
pop
fcomps
pop
out
mov
lret
cmpsb
scas
pop
clc
mov
outsb
ficompl
pushl
add
pop
aas
pop
loopne
jecxz
popf
adc
mov
cmp
adc
push
ljmp
pop
fisttps
inc
and
leave
sbb
or
lret
dec
inc
jno
lea
ror
sub
call
in
shll
fcmove
aaa
out
xor
fisttpl
mov
inc
fcmovnbe
sbb
movsl
dec
aas
shll
jnp
stos
pop
lods
mov
ret
sub
ficompl
pop
xchg
ljmp
ljmp
clc
clc
cmpsl
popf
dec
addb
rcrb
mov
or
push
into
out
test
pop
xchg
aad
dec
mov
mov
lret
loope
push
inc
in
push
subl
push
incl
jo
push
mov
or
cwtl
insl
inc
call
out
outsl
lock
lahf
and
xchg
xchg
sar
loopne
nop
sbb
jmp
push
xchg
inc
jge
outsb
pushf
mov
add
ja
jmp
jecxz
rorl
or
outsl
xchg
jg
mov
inc
push
sahf
ja
pop
xor
jp
repnz
xor
sbb
jle
out
push
ljmp
sub
scas
into
jg
jl
sub
mov
cmp
rcll
testl
jbe
jle
pop
mov
sarl
or
sub
fistl
cmp
pop
popf
jae
mov
mov
pop
shrl
dec
mov
testb
mov
dec
imul
sub
push
dec
je
jle
lods
xchg
add
pop
push
mov
ficompl
loop
push
decl
inc
push
loopne
fisttpll
cmpsb
push
sbb
int
aaa
incl
stos
ljmp
rolb
xchg
jb
dec
sbb
pop
hlt
cmpsl
rorb
outsl
dec
daa
retw
leave
pushl
sub
fimuls
out
cmp
sbb
cld
pushl
mov
cwtl
out
push
cs
addl
loop
shl
jnp
dec
call
lods
push
and
cmp
cs
in
mov
imul
sub
inc
call
mov
adc
mov
lahf
lret
cmp
adc
xor
mov
mov
cmpl
lds
daa
jecxz
dec
dec
loope
test
outsl
jg
mov
decl
jmp
aaa
lahf
mov
mov
fs
out
sar
pop
in
xchg
pop
and
inc
leave
sub
jl
mov
push
xlat
inc
sub
imul
and
lds
mov
scas
add
fiadds
ljmp
pop
rep
dec
pop
mov
std
incl
add
sub
mov
pop
xchg
add
pop
into
push
call
cs
mov
xchg
add
cmp
rclb
lods
add
test
hlt
mov
pop
and
add
pop
jmp
pop
lret
xor
stc
movsb
and
add
mov
cmp
outsb
test
incl
ljmp
das
subl
fsubl
out
pop
pop
rcll
lcall
jae
xor
test
mov
sub
mov
cli
fcomip
lcall
push
cmp
push
shl
fsubs
nop
pop
mov
fidivs
scas
sub
dec
nop
clc
or
xorb
stc
pop
xor
sub
jo
sar
jmp
mov
fmul
das
bound
xor
cli
mov
dec
mov
pop
imul
incl
in
sbb
adc
enter
outsl
inc
xor
add
lret
ljmp
pop
pop
dec
cmc
dec
sub
cmpsb
movsb
add
adc
out
inc
adc
fbstp
bnd
push
push
push
lods
dec
mov
loopne
cli
and
in
mov
push
xor
cmp
xchg
xlat
jecxz
inc
sub
sti
jae
xor
push
pop
popa
ret
inc
rolb
pop
aaa
cmpsb
fneni(8087
andl
cs
xor
lret
out
lahf
jge
cmp
stos
xlat
adc
jmp
imul
test
mov
jne
dec
inc
inc
das
aas
test
sbb
stos
ljmp
add
push
shlb
aas
sub
mov
mov
mov
lock
push
shlb
test
fisubrs
ljmp
push
xor
imul
fdiv
inc
pop
dec
inc
fs
or
adc
dec
hlt
mov
jmp
leave
into
push
loop
inc
inc
mov
xor
inc
jmp
and
outsb
push
clc
mov
decl
divl
bound
push
push
and
adc
adc
inc
jg
mov
mov
ljmp
cmc
push
call
std
pop
mov
mov
push
insl
stos
cwtl
inc
outsl
shrb
filds
lcall
fstpl
in
jne
mov
call
push
jg
scas
mov
and
lret
adc
inc
mov
je
ljmp
decl
mov
or
sbb
sbb
pushf
aam
cmpb
cmpsl
pop
dec
js
xor
and
pop
loop
or
inc
push
push
jb
jne
clc
out
push
test
jmp
or
or
cmc
jne
out
cwtl
jnp
aam
push
ror
xchg
inc
or
out
std
pop
or
sti
jns
jne
dec
jge
js
dec
and
xor
fcmovne
xor
jp
repnz
push
mov
in
in
jmp
mov
adc
and
jge
bound
lahf
pop
aam
or
inc
fldt
jg
push
pop
mov
jae
mov
pop
push
sbb
pop
ret
decl
mov
lretw
fdivs
ljmp
repnz
jns
bound
movsb
cmp
xchg
clc
and
pop
dec
fbstp
jle
mov
jmp
sub
mov
nop
iret
enter
or
push
pop
sub
mov
incl
cld
cs
jmp
sbb
jns
dec
cmp
jae
testl
call
add
cwtl
shll
pushf
lods
jo
mov
ds
mov
push
je
cld
outsb
add
mov
jb
pop
or
mov
mov
mov
sbb
out
inc
hlt
into
sbb
add
mov
in
aad
bnd
test
out
jmp
xchg
jecxz
mov
fs
sub
jns
dec
and
mov
frstor
sub
sub
cli
decl
jne
iret
data16
std
mov
aad
cmpl
inc
pop
xor
and
xchg
fmuls
sbb
adc
ds
xchg
inc
fwait
pop
jbe
jp
out
popa
dec
fisubrl
out
iret
scas
ljmp
push
sub
fdivrs
std
mov
mov
fsubrl
mov
push
adc
decl
loope
mov
ret
inc
bound
rcl
fnstcw
jae
sbb
js
jg
jae
call
mov
js
arpl
ret
push
ljmp
call
cmp
in
cmp
cmp
xchg
cvtps2pd
fs
loopne
or
movb
fcomip
push
mulb
cld
inc
cmp
rcrb
scas
xlat
add
jge
ret
mov
or
push
aad
inc
stc
test
cmp
enter
mov
push
out
pop
scas
mov
or
in
rol
repnz
movsl
test
and
decl
sub
mov
jo
xor
call
fwait
jnp
fsubrl
mov
decl
xchg
jnp
or
sbb
mov
mov
pusha
push
sub
addl
imul
cli
outsb
inc
clc
in
ret
push
dec
fcmovbe
xlat
aam
push
pop
lea
cld
fnstcw
sahf
or
jno
cmpsl
push
out
fcomps
fmull
data16
add
cmpsb
lcall
jne
sbb
rcrl
pop
loopne
fstpl
in
xor
aaa
mov
stc
xchg
decl
and
pushf
leave
cmp
out
imul
add
mov
decl
jno
mov
sbb
sbb
or
popa
lahf
out
lret
dec
fiaddl
gs
decl
sbb
mov
scas
or
cltd
in
mov
adc
jecxz
adc
xchg
pop
icebp
cltd
insb
outsl
stc
repz
fs
push
adcl
and
xor
push
popa
cmpl
sarb
or
mov
adc
aaa
xchg
jp
inc
clc
jmp
adc
mov
hlt
dec
mov
mov
adc
sti
cmp
cmpsb
or
cld
fisubs
out
jle
inc
pop
mov
sbbb
and
xchg
rclb
std
sahf
mov
mov
sbb
push
or
movsl
mov
lock
pushf
pop
dec
jecxz
mov
pmulhw
fimull
sub
pop
mov
std
sbb
mov
mov
lock
ljmp
incl
and
pop
js
push
int
adcl
mov
in
pop
sbb
fdivr
hlt
aam
xchg
sub
lret
jle
clc
or
sbb
stc
mov
sbb
cmp
mov
xorl
mov
decl
fsubr
in
sub
xor
addl
int3
icebp
sbb
imul
mov
sub
js
ss
mov
jae
fs
xor
sti
mov
pop
xchg
into
lret
xchg
pushl
mov
icebp
and
in
xchg
push
insl
movsb
mov
call
pop
lods
out
mov
xchg
inc
pop
jb
stos
add
loopne
out
rorl
js
or
sub
adc
incl
dec
jae
stc
pop
rcl
cmp
adc
cmp
inc
push
shlb
pop
add
sub
add
shll
fisubrl
sub
std
pushl
imul
push
mov
call
mov
sbbb
jg
inc
clc
adc
cltd
mov
insb
cli
insl
int3
sbb
push
call
gs
push
cmpsl
ficomps
sti
dec
insb
mov
ljmp
and
outsl
push
dec
mov
out
xchg
pop
out
xlat
nop
das
in
add
xchg
cmp
or
push
rcll
pop
das
clc
mov
rolb
push
push
ljmp
pop
mov
pop
or
inc
fldt
mov
loopne
cmp
dec
in
mov
lcall
sbb
imul
add
das
xchg
mov
pop
jae
ljmp
movsb
insb
cltd
out
repz
test
xorl
popa
sahf
test
fs
xchg
addr16
pop
in
xchg
cmc
or
pushl
mov
adc
lret
adc
in
insl
mov
shlb
add
call
jnp
lahf
add
iret
ja
adc
and
push
ss
iret
sti
adcl
fcomip
push
mov
adc
xchg
push
adcb
lahf
inc
jnp
shrb
or
ja
jns
adc
mov
inc
xor
and
push
push
clc
dec
and
ljmp
in
or
pop
inc
push
mov
mov
ljmp
xchg
fldt
add
mov
shlb
push
push
loope
sbb
pop
in
mov
incl
mov
sub
jg
clc
cs
test
push
sbb
push
inc
push
mov
jmp
test
stos
lret
and
mov
insb
adc
mov
jmp
adc
decl
stos
ds
sarb
cmpb
nop
pop
mov
mov
test
lcall
sahf
cmp
imul
mov
and
test
sub
cs
jne
mov
jg
in
outsl
xchg
push
jle
dec
jnp
or
mov
cmp
fdivrs
arpl
decl
mull
ds
lahf
mov
ljmp
sbb
scas
scas
mov
cld
jmp
orl
cmp
aad
call
sbb
fucomip
faddl
aam
xorb
jae
inc
into
xchg
pop
or
pushl
dec
pop
cwtl
sub
push
in
jmp
cmp
jl
lock
decl
mov
addr16
xchg
in
fimull
rol
clc
push
loope
cmp
decl
mov
jnp
ret
sub
jb
xor
in
inc
inc
mov
lcall
cli
push
les
cmp
les
ja
lods
sub
lock
cltd
sub
pop
sub
lcall
dec
add
repz
in
sbb
sub
and
pop
sub
inc
mov
ret
dec
sti
xchg
cmp
inc
sub
arpl
inc
jge
jmp
leave
lock
jp,pt
cmp
daa
aam
jmp
lahf
jge
mov
xor
in
addr16
pop
cmp
call
mov
sub
sarb
push
dec
push
or
xor
fcomip
sub
das
shlb
inc
shrl
mov
push
adc
mov
sub
mov
bound
addl
int
enter
cli
push
jae
inc
xor
xor
repz
nop
call
add
jg
aad
xchg
aam
fdivrs
ss
pop
push
out
imul
ljmp
leave
xchg
js
insl
jmp
lahf
aam
aas
mov
fsubs
ret
movsb
cmp
pop
std
jne
pushl
cmp
pop
icebp
leave
stos
mov
test
xor
inc
cld
sub
orb
lcall
lods
ret
xor
mov
out
sbbb
stos
sarl
mov
ljmp
cmp
push
xchg
cmc
in
popf
dec
in
ja
fdivs
dec
sbb
nop
pop
lock
out
jns
cli
rcr
push
stc
adc
popa
or
adc
vfmaddsubps
xchg
jle
sub
dec
sbb
xchg
mov
xchg
adc
lcall
xchg
xchg
or
hlt
xor
out
inc
xchg
add
xchg
fdivrl
rorb
lcall
pop
lock
in
dec
mov
mov
add
dec
adc
aam
mov
xlat
movl
sbb
cld
push
fildll
mov
push
gs
mov
cmp
mov
xor
push
iret
idivb
adcl
xlat
lcall
nop
cmpsl
in
int3
jecxz
rclb
mov
pop
out
or
add
jg
loope
fwait
sub
push
fs
lds
cli
ljmp
push
into
adc
std
jnp
aad
incl
add
xor
pusha
inc
mov
fsubrs
push
scas
mov
xchg
cmpsb
adc
jno
cmp
mov
xchg
jb
mov
fmuls
mov
ret
mov
and
pusha
lock
xor
sbb
cld
les
jnp
ljmp
fisttpll
sbb
incb
push
sub
jae
rorl
inc
fisubrs
mov
adc
cmp
imul
mov
pop
fadds
jbe
jg
out
cltd
push
dec
cli
ret
mov
das
sub
cwtl
pushl
inc
xchg
xor
pusha
in
and
popa
mov
fmul
push
xchg
xor
jg
and
into
push
cwtl
jmp
imul
repz
pusha
cmpsb
out
icebp
int3
aad
mov
incl
pop
int
inc
faddl
mov
sub
or
arpl
imul
cld
incl
mov
jp
jo
loop
pushf
and
adc
push
cld
dec
pop
stos
xor
push
and
aaa
adc
jbe
adc
les
mov
aad
push
mov
cld
jo
pop
mov
loope
lea
decl
mov
fldenv
or
fwait
push
jo
mov
ljmp
cli
jmp
fsubl
sub
into
scas
xchg
and
stos
sbb
incl
dec
jecxz
sti
scas
sub
inc
fnstcw
lcall
or
mov
jns
incl
hlt
lock
mov
sbb
loopne
sarl
in
call
call
movsl
cmovp
jmp
es
cmp
dec
mov
pushf
inc
inc
fistpl
ljmp
negb
pusha
stc
js
mov
out
cmc
xor
shr
jnp
sti
movsl
aam
add
dec
add
lcall
movsl
outsl
js
xor
dec
dec
jbe
fwait
jp
or
mov
stos
mov
xchg
and
push
xlat
or
cmp
xchg
dec
inc
outsl
inc
outsb
popa
mov
sbb
subb
outsl
or
ds
mov
sbb
sbb
js
aam
push
in
out
int3
xor
repnz
repz
cmp
cmp
loop
andl
pop
adc
jne
xchg
fsubrs
or
adc
add
fcmovnbe
sahf
dec
loop
sahf
sbb
roll
stos
mov
icebp
lahf
and
pushl
lods
cli
out
cltd
jnp
or
lahf
push
mov
fs
mov
mov
pushl
pop
sbb
xchg
xchg
push
sub
negl
imul
mov
stc
popl
mov
sti
iret
sub
insb
push
repz
pop
sti
fisttps
andl
dec
roll
lret
shlb
loop
xchg
xchg
nop
mov
test
test
xor
incl
addr16
repz
cmpsb
shlb
lods
shll
sub
lahf
mov
push
fwait
incl
push
sahf
sarl
es
adc
jne
xchg
jb
les
pop
aas
lcall
popa
loopne
cmp
ljmp
fistpl
daa
xchg
int
call
enter
push
jno
mov
pop
mov
pop
insb
fdivrl
mov
and
or
cmp
call
push
sub
in
mov
sbb
repnz
push
jg
pop
loope
add
enter
push
fiadds
and
xchg
jbe
xor
jmp
jmp
xchg
pop
lods
dec
sbb
mov
out
push
pop
ret
jg
mov
push
cmp
jp
ret
arpl
sub
scas
jl
sub
ja
inc
xor
cli
flds
mov
mov
xchg
lcall
loope
cmp
mov
adc
insl
leave
push
dec
dec
das
mov
ljmp
cld
sub
inc
mov
dec
scas
stos
out
sub
cmp
in
loopne
xchg
addr16
adc
pushf
popf
cwtl
inc
in
sbb
adcb
outsb
loopne
inc
sub
enter
and
dec
mov
ljmp
stos
and
jecxz
cmc
test
jge
rol
and
je
lods
lcall
pop
or
or
jmp
repnz
int3
cmp
or
sub
ds
out
pop
mov
call
dec
xor
daa
push
push
or
or
adc
sbb
testb
ljmp
add
adc
or
adc
inc
popf
sar
stc
sarl
add
mov
jmp
fsubrs
mov
pop
outsb
jns
int
sbb
push
ss
faddp
mov
data16
inc
hlt
orl
push
int
push
or
add
or
cmp
jmp
int3
lret
adc
ret
mov
jne
cs
std
lods
mov
cmp
lcall
ret
sub
or
inc
lea
adc
int
icebp
out
lods
inc
cmpsl
or
arpl
cmp
or
mov
pop
adc
push
gs
out
ljmp
xchg
outsb
lret
in
cltd
lcall
push
adc
pop
adc
das
das
jp
inc
fnsave
dec
ljmp
xchg
jmp
ljmp
fisttpl
test
lahf
dec
iret
mov
in
cs
clc
aad
sahf
sti
sub
add
push
mov
cmp
fdivl
cld
cmp
ljmp
inc
jle
les
add
push
cmpsb
fldl
outsl
dec
js
daa
xchg
dec
adc
dec
push
pop
lock
decl
jae
mov
fnstcw
mov
xor
ds
xchg
inc
mov
call
fcomps
int
sub
xchg
rolb
add
popa
fbld
xor
scas
adc
aad
cltd
insb
jne
mov
inc
pop
cmc
in
lcall
cmp
aas
rolb
or
dec
sub
pushl
sub
in
inc
aad
and
inc
pusha
xlat
gs
sahf
inc
int
or
sub
pop
sbb
or
or
roll
mov
les
mov
nop
adc
cwtl
es
fstpt
adc
push
or
fwait
test
aaa
push
push
jecxz
out
jbe
mov
fcomip
call
fimuls
sub
pop
xor
into
movsb
cmpl
lcall
jnp
mov
mov
sahf
rcrb
mov
jecxz
in
xor
push
jmp
mov
push
cmp
icebp
mov
nop
decl
dec
push
xchg
jle
das
insl
dec
xchg
in
insb
dec
push
pop
int3
cmpsl
and
std
jg
leave
idivl
lret
adc
sbb
cmp
mov
pushl
xchg
mov
xor
or
sbb
inc
inc
out
pop
icebp
lret
fisubl
mov
call
in
lahf
fdivrs
pop
loopne
retw
jg
insb
xor
sbb
push
stc
movsb
orb
cmp
mov
mov
xchg
shr
sub
in
testb
test
cmp
mov
mov
mov
mov
stc
outsb
das
inc
add
inc
push
push
and
enter
aas
pop
inc
xchg
out
mov
adc
xor
sarl
gs
mov
enter
and
xchg
hlt
mov
jl
mov
mov
cmc
test
add
jne
cli
sbb
push
fisubrs
lret
pop
in
incl
sbb
repz
add
xlat
xor
mov
lods
inc
mov
or
and
orl
xchg
mov
mov
lahf
mov
push
and
test
outsb
jne
das
xor
outsb
in
mov
mov
mov
sub
push
je
imul
jge
lahf
fnstsw
sub
xor
data16
inc
adc
push
mov
mov
outsl
lcall
or
imul
pop
mov
js
jle
pop
rolb
jmp
cmp
andb
js
pop
dec
call
xchg
pop
daa
bound
cwtl
call
dec
insb
nop
mulb
pop
aad
dec
inc
lcall
data16
dec
pop
xchg
jmp
movsl
movsl
dec
sub
sti
lret
jmp
out
mov
add
loopne
cmpsl
jp
sti
jo
decl
mov
jmp
jb
push
push
mov
bound
mov
repz
dec
imul
cmp
xchg
sbb
std
push
ljmp
sbb
push
std
add
push
imul
mov
dec
add
mov
es
lock
jne
cmc
mov
and
das
mov
pusha
jmp
jp
push
dec
mov
popa
jns
cmp
into
mov
xor
bound
adc
push
dec
pop
push
mov
cmp
stc
subb
rclb
cmp
and
hlt
add
incb
loopne
repnz
xchg
mov
mov
mov
movsl
lods
and
sar
in
jg
aaa
jnp
xchg
pop
or
bound
scas
sub
inc
cmpsb
jmp
sub
lcall
pop
aaa
inc
lods
into
aam
rorb
pop
out
pushf
int
iret
xor
jmp
decl
mov
adc
pop
leave
mov
push
imul
xchg
pop
sbb
xor
bound
movsb
xchg
mov
arpl
test
mov
sbb
and
or
hlt
incl
adc
inc
and
xor
imulb
push
scas
fcomip
les
notl
sub
add
call
mov
fs
cmc
lock
add
fmuls
daa
push
mov
and
sar
incl
dec
inc
pop
scas
ficoml
push
jle
push
popf
addr16
gs
sub
stos
dec
negb
and
push
xor
push
out
repnz
loope
mull
mov
out
shll
hlt
sub
jbe
mov
incl
push
test
jne
jne
pop
sarl
adc
movsl
daa
int3
mov
dec
mov
xor
push
jp
push
xchg
rcll
dec
mov
mov
xchg
mov
mov
pushl
fdivrs
mov
add
sbb
lods
xor
add
sbbb
arpl
loopne
mov
lret
mov
jns
xor
add
or
adc
cmp
in
call
mov
mov
mov
rcll
in
call
inc
adc
call
adc
pop
imul
xor
lock
inc
push
jge
jecxz
fisubrs
loop
icebp
jmp
sti
or
push
push
inc
out
cmc
scas
sub
arpl
dec
icebp
adc
mov
andb
mov
cwtl
mov
and
mov
in
cmp
imul
add
add
mov
sub
mov
add
mov
cmp
js
push
jg
add
rcll
test
js
add
pop
dec
orb
mov
push
inc
test
xchg
cmpsl
adc
roll
scas
jle
dec
lds
jno
jg
mov
lock
mov
dec
adc
sub
pusha
or
add
xchg
pop
movsl
push
daa
out
stc
fwait
in
add
xchg
dec
and
cmpsl
push
and
cs
jp
imul
inc
scas
stc
mov
push
and
stos
push
and
push
test
and
fistl
imul
push
inc
pop
pop
add
scas
dec
lods
push
mov
pop
sbb
add
shr
mov
add
push
ds
les
push
adc
fs
mov
repz
or
lret
imul
imul
imul
into
mov
jbe
fnstenv
fdivs
cmpsl
fldcw
stos
pop
stos
mov
sbb
mov
push
add
jo
mov
push
shll
add
outsl
push
shll
push
fidivrl
iret
outsb
or
push
cs
adc
jns
out
jge
fisttps
fists
xorb
ljmp
movsb
push
add
mov
or
jae
shlb
mov
pop
rorl
out
push
push
push
add
jne
push
aam
jle
push
add
mov
sub
ss
pop
dec
add
pop
neg
sbb
data16
inc
xchg
fnsave
add
push
push
shlb
lret
fcmovnbe
cmp
stos
aas
add
ja
push
mov
xlat
jne
add
ja
push
pop
mov
sub
xlat
ja
js
push
or
fidivrl
push
jp
jp
inc
push
fidivrl
lds
ja
fldl
cs
mov
ret
jmp
ljmp
fcmovnbe
fisttpll
in
xchg
sub
xchg
xor
or
push
setbe
xor
fstpt
cwtl
aaa
push
lcall
xchg
sahf
in
push
cmp
pushf
cmp
popf
xchg
fst
insb
fistpl
push
lahf
inc
lahf
mov
mov
push
push
jecxz
push
imulb
movl
repz
add
lock
hlt
clc
stc
iret
repz
cli
sti
cld
std
incb
pop
and
jo
add
mov
jae
add
imul
popa
push
add
pop
add
mov
insb
add
pop
add
push
add
movsl
mov
push
mov
mov
add
fistpll
mov
add
add
or
or
pop
sti
inc
repnz
test
or
push
mov
aam
sbb
adc
adc
lods
add
shrb
pop
stos
femms
lods
lods
pop
mov
lods
dec
mov
add
scas
insl
sbb
stos
lods
pop
pop
adc
and
mov
add
xchg
in
pop
scas
sbb
scas
scas
scas
scas
sbb
mov
mov
and
mov
pop
push
mov
inc
push
xorl
shll
push
and
and
mov
mov
pop
and
push
dec
shll
adc
mov
or
sub
mov
sbb
pop
pop
sub
sub
daa
mov
adc
push
push
adc
pop
adc
inc
pop
aas
cmp
mov
mov
pop
cmp
mov
cmpsb
add
mov
pop
xor
xor
push
pop
pop
or
or
add
ja
pop
insl
pop
pop
xor
arpl
sti
outsl
lcall
das
push
cs
xor
add
xor
das
pop
push
push
xor
adc
mov
push
cs
dec
inc
das
inc
inc
xor
adc
mov
xor
jbe
cmp
jl
jge
jno
outsl
add
pusha
pop
jmp
jae
dec
dec
cmpb
jo
mov
inc
xorl
mov
xchg
xchg
incl
xchg
popf
pushf
fwait
lcall
mov
mov
inc
xchg
push
jle
int
mov
je
push
bound
js
jg
fwait
adc
xor
jne
je
add
mov
jg
insb
add
add
inc
pop
cwtl
movntps
test
gs
scas
aas
mov
push
outsl
dec
aas
out
sti
jle
xchg
pop
push
dec
add
push
mov
mov
push
mov
xor
xor
ja
push
ja
inc
mov
in
jb
cs
xor
mov
push
mov
add
mov
and
push
mov
mov
dec
pop
jo
push
inc
mov
cmp
mov
or
pop
lock
add
jae
xchg
jp
inc
push
popf
inc
divb
pushl
mov
aaa
add
xchg
jno
lret
push
bound
mov
fnstenv
push
lahf
inc
inc
push
sahf
scas
add
mov
insb
ss
ds
xchg
in
insl
fcomi
outsb
add
xchg
xchg
pop
push
test
cmpsb
dec
push
dec
push
movsb
roll
add
jb
shll
outsl
pop
lcall
push
pop
add
fwait
imul
lcall
rcrb
pop
into
dec
mov
add
sar
fidivl
sahf
jbe
fistpl
imul
mov
outsb
ds
push
add
and
es
js
ja
pop
mov
data16
shrl
insb
fidivrs
xlat
pop
outsb
push
outsl
ror
push
ds
mov
loopne
jno
add
jge
push
jg
fiadds
adc
xchg
out
data16
cld
aad
cmp
in
adc
mov
add
test
fildl
loopne
iret
sahf
mov
jnp
add
jb
out
in
push
jle
insb
push
std
orl
jecxz
or
push
aad
fidivrl
divb
fildl
adc
push
xorl
sbb
sbbl
mov
faddl
in
mov
push
sub
into
data16
nop
and
out
xchg
in
xchg
xor
in
xchg
sub
sub
imulb
outsb
out
xchg
das
push
xchg
repnz
xor
cwtl
push
cmc
sahf
xor
push
lcall
cmpsb
pop
cmp
cmp
pushf
cmp
aam
adc
or
jle
push
cmpsb
scas
jo
test
sahf
out
mov
fstpl
jbe
stos
into
shll
insl
roll
int
mov
mov
sarb
jl
sarl
xchg
pop
push
jle
data16
add
lods
add
hlt
cs
dec
out
je
add
xchg
dec
daa
push
and
sub
mov
mov
femms
or
or
jnp
das
sbb
es
push
adc
push
add
incb
adc
adc
ds
add
dec
sti
test
sbb
mov
sbb
mov
testb
mov
add
and
pop
sbb
mov
mov
loopne
ds
xor
cmpl
and
pop
lods
add
cmp
aas
cmp
pop
and
cmp
roll
cmp
ds
jbe
sbb
inc
jle
loopne
test
xor
dec
fidivrl
cmpb
aas
ja
neg
adc
ds
xor
dec
inc
out
mov
test
mov
ds
bound
pusha
add
mov
mov
lcall
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
pop
dec
test
mov
mov
ds
xor
sub
sub
sub
sub
into
ss
add
add
dec
and
xor
inc
inc
inc
mov
push
push
push
push
push
imul
push
pop
push
push
push
imul
lock
fs
das
pop
imul
nop
cltd
mov
call
mov
xchg
pop
cmp
insl
popf
mov
jge
jns
mov
jl
js
jg
test
jb
jae
jo
outsb
pushf
sti
or
stos
lds
push
xlat
imul
push
adcb
or
mov
incl
adc
loopne
out
or
repz
jl
push
add
cmc
repz
dec
xor
add
add
xchg
pop
cmp
test
jg
incl
xlat
mov
add
mov
push
mov
fnstsw
repnz
or
jle
add
scas
xchg
addr16
pop
fwait
pop
add
jecxz
pushf
add
mov
mov
lcall
or
mov
push
pop
mov
jo
dec
lret
js
into
xchg
add
jp
add
mov
mov
test
scas
xchg
js
in
and
out
insl
jmp
andl
sub
xchg
insl
cmp
push
nop
sub
xchg
xor
xchg
xor
xchg
outsb
lcall
leave
jbe
int
jnp
negl
fcmove
fst
es
and
int3
out
lret
loopne
push
std
into
mov
push
test
fdivrp
divl
xchg
add
test
jg
jle
orb
add
dec
xchg
pop
add
decb
jns
dec
dec
dec
dec
dec
add
pop
add
fcmovnu
and
push
dec
or
adc
cmp
adc
dec
or
add
dec
push
adc
add
or
pop
pop
arpl
pop
in
dec
push
inc
push
dec
sbb
mov
lahf
testb
and
adc
sbb
dec
add
dec
jecxz
mov
adc
inc
ds
cmp
cmp
cmp
daa
and
sbb
ljmp
add
and
add
dec
ss
xor
sub
sub
divb
xor
add
mov
fnstenv
fwait
test
mov
ss
shrl
push
outsb
mov
push
orl
outsl
cmpsl
adc
add
pop
push
sub
sbb
add
mov
cmpsl
and
into
incl
pop
sub
jmp
adc
push
fnstsw
incl
outsb
prefetchnta
adc
push
and
jg
ds
cwtl
dec
push
stc
setb
lock
pusha
mov
sub
xorps
jg
js
lea
ja
aaa
add
sub
push
inc
pusha
push
sahf
jg
push
aam
pop
lahf
xchg
push
or
push
or
cli
mov
sbb
fists
sbb
or
addl
xchg
roll
add
mov
loopne
push
pop
das
sti
mov
xchg
orl
or
dec
sti
jg
mov
cmp
xchg
add
popa
jg
jg
or
adc
je
cmpsl
test
bound
push
cld
jg
push
add
xor
pop
adc
and
std
ja
jg
test
add
jg
je
dec
ret
dec
pop
push
dec
bound
jle
lret
inc
decb
jg
andb
adc
fs
incl
addr16
inc
lods
decl
rcll
incb
sbb
pusha
data16
xchg
sbb
fidivrs
pushl
insl
adc
xor
pusha
jg,pt
add
jbe
xchg
fsubs
add
inc
mov
jmp
sbb
scas
incl
add
inc
mov
lods
jle
lret
imul
mov
addl
jle
adc
inc
add
push
add
addr16
add
add
jbe
rorb
push
subl
add
inc
shlb
inc
shlb
dec
push
jg
mov
mov
pop
mov
inc
orl
add
mov
aam
jmp
stos
pop
stos
fdivrs
in
sub
pop
daa
mov
aaa
pop
pop
fisubrl
jle
fs
pcmpgtb
stos
pop
inc
push
add
mov
mov
sahf
shrb
push
bound
add
mov
fcmovnu
sahf
pop
das
pop
daa
push
arpl
pop
mov
pop
push
mov
xlat
out
call
decl
dec
dec
call
pop
out
mov
dec
loop
dec
call
jle
inc
test
pop
jle
lcall
scas
test
mov
fnstenv
mov
push
push
jne
pop
push
jbe
dec
or
push
push
jp
fwait
adc
dec
jbe
mov
add
mov
mov
popf
jmp
jbe
es
adc
test
push
outsb
notrack
jp
test
jle
inc
jbe
test
incl
ss
push
or
call
dec
ja
xchg
test
testb
fiadds
mov
mov
fldt
dec
mov
and
sahf
inc
out
mov
xchg
sbb
scas
cs
aas
popf
inc
push
pushf
push
inc
outsb
fwait
cmp
data16
cltd
mov
mov
jle
sub
fidivl
nop
daa
ss
cs
in
ss
or
outsb
test
push
call
lcall
mov
jg
test
ja
xor
lcall
sahf
pusha
enterw
es
or
insl
xchg
cs
add
pop
ja
dec
push
int3
rclb
xchg
movb
movsb
call
imulb
mov
add
add
les
mov
testl
xorb
sub
add
movb
outsl
pop
add
xchg
inc
pop
or
dec
pop
adc
aas
push
adc
iret
repz
mov
lea
jg
push
popf
push
imul
mov
sbb
test
push
mov
dec
repz
cmp
cmp
jmp
in
icebp
imul
add
sub
ljmp
mov
dec
out
imul
mov
pop
mov
mov
fisttpl
sbb
xor
dec
cli
or
sti
xchg
fidivs
xchg
std
into
jmp
syscall
mov
sub
xchg
fcmovb
add
pop
xchg
sbb
inc
pop
lcall
or
mov
sub
or
addr16
daa
cld
pop
das
or
mov
cld
call
pushl
xchg
std
out
mov
popl
lcall
or
mov
mov
push
fdivr
ds
lods
xor
xchg
incl
fadds
incl
fmuls
out
ljmp
sub
decb
push
xor
adc
incl
sbb
sub
xor
cmpsb
scas
ljmp
xchg
cmp
decb
mov
jno
add
fmull
xor
incl
mov
punpckhwd
pop
lcall
incb
mov
xor
addb
sysret
out
push
add
ljmp
sub
xor
incl
xor
push
sub
pop
shlb
outsl
sti
push
std
jmp
mov
out
adc
push
rorl
inc
call
cmpsl
bound
add
pop
stc
xchg
faddl
push
call
jg
inc
inc
cwtl
out
cli
mov
fwait
test
jmp
sub
add
sbb
incl
test
push
jmp
ss
sbb
pop
in
insl
fnstenv
pop
movsb
or
insb
aaa
mov
fidivs
mov
push
mov
shll
or
push
dec
sahf
ret
decl
scas
nop
xchg
push
adc
jns
mov
test
lahf
inc
inc
push
inc
fidivl
pop
cmp
es
mov
fcoms
sahf
movsb
dec
push
stos
push
leave
mov
cmpsb
dec
dec
inc
scas
imul
out
add
cmpsb
add
push
and
out
push
sbb
jl
shrb
rcl
outsb
shrb
shlb
jb
push
in
dec
imulb
push
iret
insl
cltd
out
int3
push
pop
daa
outsl
pop
imul
notb
push
movsb
sub
push
ljmp
ljmp
lcall
inc
dec
dec
pop
add
repnz
aam
push
jmp
and
fildl
pushf
cmp
aas
decb
cwtl
xor
lahf
push
inc
push
xchg
insl
mov
xchg
push
push
aaa
push
lcall
jmp
es
xchg
xchg
xchg
notb
sub
xchg
aam
pushl
dec
scas
incl
shrb
data16
ds
ljmp
mov
push
add
fidivl
aad
or
faddl
xchg
fstpt
push
jnp
jp
or
dec
rep
push
jl
or
jl
push
jge
xor
push
movq
es
jbe
adc
fcmovu
mov
push
dec
push
dec
repnz
repnz
jae
pop
int
fnstcw
push
mov
jnp
jge
hlt
in
add
int3
adc
jb
outsb
nop
negl
add
pop
mov
or
pop
add
xchg
fs
lahf
add
adc
adc
jns
outsb
pop
or
imul
cmp
jnp
lahf
dec
es
cs
inc
and
pop
orb
nop
push
mov
jl
xchg
fisttps
sub
iret
out
mov
cli
jmp
iret
fisttpl
idiv
sarb
inc
sub
jg
mov
icebp
test
insl
dec
pop
cld
inc
js
mov
fstpt
mov
icebp
out
jbe
adc
daa
jg
repnz
mov
ja
loope
xchg
mov
jp
es
xchg
pusha
or
inc
aaa
xor
stc
sti
cmpb
jmp
mov
cmp
jg
dec
in
sarb
push
movsl
pop
ja
shlb
jl
dec
and
jge
idiv
dec
and
push
lcall
push
fsubl
pop
pusha
and
pop
push
nop
sub
mov
sbb
decl
mov
ljmp
jne
mov
push
pop
push
pop
dec
mov
pop
or
xchg
aam
jne
mov
inc
push
dec
lcall
push
jns
shl
sub
add
in
sbb
in
sbb
xchg
mov
pop
test
loop
adc
xchg
out
sbb
loope
and
lret
push
leave
add
jg
out
mov
or
mov
pop
push
mov
ja
inc
jmp
dec
ljmp
andnps
into
inc
and
les
adc
sub
imul
add
loopne
lret
xchg
sbb
mov
push
sub
add
push
or
outsl
imul
inc
lahf
orb
push
lret
adc
shlb
rclb
and
sbb
xchg
push
stos
cmp
into
pop
push
sbb
in
ja
add
push
sbb
push
or
imulb
xor
or
inc
or
and
outsb
or
push
stos
mov
addb
dec
sub
add
movsl
clc
cwtl
test
insb
outsl
pusha
dec
and
imul
sbbb
push
xchg
and
and
jb
dec
outsb
dec
lods
xor
push
das
adc
inc
or
or
aas
xor
popa
jo
or
and
cmpsb
rcrb
mov
mov
sbb
ss
or
jo
das
pop
mov
addl
mov
push
inc
xor
rolb
inc
sbb
or
mov
pop
xchg
icebp
inc
add
push
push
push
jp
imul
inc
hlt
jb
fisttpll
inc
xor
or
jbe
cmp
push
push
and
push
pusha
jbe
sbb
shlb
mov
dec
mov
insl
adc
jo
push
test
aas
outsl
addb
mov
mov
aaa
roll
jmp
dec
xchg
stos
cmp
inc
lock
dec
movsb
push
in
mov
insb
cld
outsl
popw
loop
add
orl
xchg
push
jl
xor
add
das
aad
inc
lock
push
insl
loopne
xor
mov
lods
mov
inc
js
jo
adc
pop
and
add
jne
push
xchg
lods
jae
cmp
or
push
cwtl
pop
daa
and
fiadds
push
ja
outsl
std
adc
je
ja
mov
mov
pop
pop
gs
sti
dec
daa
push
das
push
jns
pop
insl
cmp
fdivrl
mov
push
push
push
outsb
shlb
pop
inc
leave
pop
jecxz
cmp
cmp
lods
das
pop
int
imull
xor
sbb
std
jo
xlat
inc
dec
xchg
push
loopne
adc
pop
xchg
mov
mov
rcr
sbb
lret
outsl
and
sub
xor
push
jl
push
mov
shlb
int3
jmp
xchg
rcrb
jb
and
mov
mov
mov
mov
mov
jg
inc
imul
push
rol
mov
cmp
int
push
mov
push
movsb
dec
xchg
or
sbb
mov
jae
mov
mov
dec
inc
dec
cmc
adc
or
adc
jl
shll
leave
lods
fucom
lea
jne
xorb
dec
das
or
add
scas
push
fadd
popa
mov
ret
call
push
lret
icebp
or
pop
push
adc
icebp
xchg
xlat
aas
cmp
jle
sbb
popa
es
pop
shll
inc
push
xor
jae
push
cmpsb
sbb
dec
or
cltd
stos
mov
cmp
mov
fabs
mov
pop
xor
lods
sbb
mov
mov
lret
jne
sub
lahf
xor
stos
mov
dec
sub
mov
push
jno
adc
nop
pusha
rol
jns
ljmp
jg
inc
rcll
mov
adc
ss
add
push
xor
insl
dec
dec
inc
enter
sbbb
xor
inc
or
inc
adc
jp
sbb
and
cmp
je
mov
and
iret
pop
js
fwait
mov
ja
popf
xchg
jno
jge
inc
push
pop
pop
gs
imul
adc
lods
lods
pop
push
and
cmpsb
dec
and
mov
sub
sub
adc
adc
mov
mov
leave
ds
jne
jo
and
and
inc
and
jnp
lds
adc
mov
dec
cwtl
add
mov
cmp
pop
mov
mov
mov
arpl
fstpt
inc
imul
jb
adc
divb
lahf
sbb
rorb
imul
inc
xchg
inc
xchg
movsb
push
xchg
dec
mov
lock
push
push
clc
lock
cmp
pop
shl
mov
mov
sub
les
out
jbe
imul
cmp
aaa
push
fistps
and
jns
inc
arpl
add
jne
test
or
cltd
and
pop
sub
pop
cwtl
xchg
pop
sub
in
imul
mov
nop
adc
stos
popa
cmpsl
jmp
cmpsb
or
jno
jo
sub
jne
push
inc
data16
push
lock
add
loop
inc
jne
mov
jge
sete
add
fnstsw
sti
push
inc
in
pushf
ror
and
sbb
call
pusha
sub
fxtract
movsl
cmp
or
adcb
xlat
in
cmp
mov
or
mov
sbb
mov
cmove
jle
push
shr
fs
inc
imul
fldenv
insl
push
leave
xor
cmp
sbb
enter
mov
daa
push
shll
sbb
or
das
push
outsl
sub
cmp
andl
dec
sbb
rorl
stos
outsl
mov
pop
xchg
mov
insb
jns
push
adc
js
inc
int3
push
and
push
sbb
xor
and
addr16
mov
inc
ja
pusha
xor
mov
inc
dec
push
push
pop
cmp
lods
xor
mov
adc
sub
adc
jne
outsb
inc
sbb
movsl
pop
mov
push
sub
pop
and
xor
pop
add
dec
dec
outsb
dec
inc
lea
scas
add
das
fldcw
or
sub
ret
adc
fidivrl
les
outsl
fwait
sar
pop
add
add
sbb
mov
shll
add
or
lcall
push
adc
or
mov
lcall
pop
xor
and
cmp
repnz
add
or
jne
ss
and
imul
dec
lods
jb
push
xchg
sub
daa
les
sub
pusha
mov
dec
es
xor
push
imul
inc
out
pop
data16
lods
addl
inc
insb
scas
cmpsb
add
movsb
lret
jmp
nop
mov
out
sbb
lds
imul
arpl
jecxz
out
jo
inc
mov
sbb
add
loopne
dec
xor
adc
loop
jno
scas
push
xor
mov
mov
push
scas
int3
fidivs
push
leave
sbb
sbb
pop
sub
mov
js
outsb
imul
loope
push
jl
push
sahf
imul
push
imul
pop
xchg
cmp
mov
ret
mov
dec
inc
inc
adc
or
outsb
ja
pop
lret
inc
int3
outsb
sub
arpl
ret
fs
xchg
mov
ficomps
xlat
adc
out
mov
cmc
xor
xchg
jbe
pop
mov
mov
xor
enter
and
sbb
popa
int3
aaa
outsl
bound
inc
insb
cltd
push
cmpsl
and
pop
ret
out
arpl
ret
add
int
popl
push
iret
xchg
nop
arpl
insb
insb
mov
push
filds
outsb
sub
dec
adc
fs
xor
push
lods
jge
test
enter
dec
and
aaa
lods
sub
arpl
test
cwtl
inc
push
pop
push
pop
push
sub
addl
adc
inc
xor
inc
push
insl
popl
mov
sbb
cld
jns
stos
sbb
sbb
dec
and
hlt
cwtl
add
push
out
xlat
mov
mov
daa
outsb
pop
adc
sbb
push
jo
rcr
nop
mov
lea
scas
inc
xchg
std
imul
push
stos
loope
mov
addb
jbe
aam
js
inc
sub
outsl
imul
and
push
icebp
cmp
rclb
mov
out
mov
push
inc
test
add
outsb
mov
scas
sbb
leave
push
or
jnp
xchg
cmp
lcall
mov
out
inc
pop
inc
jmp
test
dec
dec
ja
imul
shll
add
aaa
js
in
and
out
push
dec
or
inc
rolb
test
cmp
or
dec
in
cmp
lcall
mov
popa
loopne
neg
lcall
push
outsb
add
push
cltd
and
adc
or
insl
or
adc
movd
cmp
nop
shll
sti
cmp
adcl
ret
clc
push
push
add
jmp
ret
jns
mov
inc
xor
fistps
push
insb
pusha
add
mov
fadds
add
and
loopne
je
jb,pn
popa
adc
lea
testl
inc
cs
add
or
cmp
push
push
dec
rcrb
jb
push
xlat
out
cs
push
lods
lock
mov
pop
cmpsl
pushf
mov
dec
push
xchg
and
and
mov
and
incl
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
lock
add
add
