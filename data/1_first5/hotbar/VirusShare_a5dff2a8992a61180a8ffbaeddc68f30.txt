divl
in
mov
mov
test
inc
add
add
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
dec
adc
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
jge
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
sub
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
cmpsb
push
mov
andl
mov
or
push
add
add
punpckhwd
aaa
mov
imulb
mov
in
iret
negl
push
in
loopne
movb
inc
xchg
outsb
ds
inc
add
add
call
mov
cmpl
jne
mov
in
mov
jl
das
add
push
mov
sbb
out
std
jnp
add
jbe
sbb
pop
dec
push
push
test
xchg
in
in
lret
add
loop
inc
adcb
adc
or
imul
push
or
movsb
into
push
cwtl
in
and
fs
push
lock
pop
lcall
mov
push
push
mov
xor
sbb
push
push
lods
cmovbe
clc
addl
add
fdiv
fistpl
fisttpl
ret
add
iret
icebp
sub
test
je
pop
add
pop
mov
push
push
sub
cmpsb
xchg
rcrb
push
and
or
add
xlat
shrl
push
dec
in
pusha
les
mov
push
xchg
dec
add
sub
lcall
lock
jnp
pop
pop
sub
sahf
or
imul
sbb
adc
loopne
js
cmpsl
mov
push
push
mov
in
inc
inc
out
sub
out
xor
xor
pop
sbb
mov
jg
cmp
jge
mov
jmp
mov
push
mov
dec
jb
mov
jno
and
and
jmp
inc
sti
ficomps
pop
inc
mov
mov
push
pop
mov
aaa
jb
mov
lds
mov
xchg
add
xlat
push
and
inc
cmp
jae
sarb
adc
mov
add
mov
sbb
add
outsl
mov
sub
push
cmp
xor
lock
rcll
out
adc
add
sbb
jle
pop
aas
enter
push
out
lcall
mov
test
mov
cmp
scas
jnp
lock
add
call
mov
clc
add
cld
jb
and
popf
cmp
xchg
gs
jno
push
push
pop
push
sub
lahf
sub
je
xor
sub
or
and
push
iret
sub
jo
push
rolb
push
push
or
push
push
shrb
hlt
lods
and
sbb
sbb
or
daa
pop
subl
and
or
push
or
inc
push
into
mov
fildl
std
repz
sbb
je
bound
add
lods
punpckhdq
js
mov
push
push
daa
mov
jg
sub
int3
push
xchg
mov
or
inc
jmp
push
cmp
fs
sbb
mov
push
sbb
scas
sbb
push
xchg
loop
std
leave
and
test
jne
data16
loopne
enter
fsts
icebp
outsb
push
shrb
xchg
movsl
push
sbb
sub
dec
add
jns
sbb
pmulhw
nop
outsb
push
fcmove
repz
jmp
clc
mov
and
sbb
cmpb
push
or
adc
adc
nop
sbbl
jbe
mov
xchg
iret
daa
punpckhbw
sub
pop
push
push
push
inc
int
sbb
rcll
mov
mov
push
inc
in
jnp
push
js
sbb
mov
adc
xchg
cmp
fbstp
push
mov
inc
mov
ret
pushf
xchg
push
decl
pop
loope
xchg
sbb
out
lahf
lds
mov
test
hlt
cmpsl
test
aad
popa
pop
cld
mov
mov
out
sarl
push
push
pop
push
push
fcmovu
cmpsb
call
cmp
fcmovu
pop
js
add
mov
add
inc
pusha
xchg
mov
les
in
int3
pop
push
and
cmp
xor
pop
jecxz
xchg
mov
int3
jge
test
inc
adc
mov
movsl
cltd
lea
mov
mov
or
mov
popa
scas
sbb
rclb
pop
out
inc
mov
mov
lea
mov
dec
cmp
je
or
sbb
push
mov
aaa
je
jae
push
nop
sub
cmp
cli
mov
adc
insl
lea
xchg
jno,pt
bound
insb
mov
xchg
insb
adc
call
loop
sbb
or
hlt
cmp
mov
or
test
xor
lret
ss
mov
xchg
and
and
or
lret
out
stos
jp
cmp
clc
clc
dec
or
mov
mov
add
iret
mov
sbb
gs
dec
in
xor
or
ret
push
mov
cmpsb
loop
cmp
ficoml
adc
insl
icebp
mov
push
add
lcall
cmp
lock
jne
pop
mov
inc
out
icebp
sub
fs
fildll
lods
cmp
je
sub
dec
pushl
pop
in
or
rclb
adc
and
cli
xchg
popf
pop
in
pop
sti
xlat
mov
mov
lds
mov
push
push
mov
cmp
lods
push
sub
sub
or
clc
fsubr
outsl
add
call
mov
test
jne
stc
sti
mov
inc
cmp
jl
jmp
pop
pop
push
mov
push
pop
push
push
pop
push
pop
sub
in
sahf
jmp
sub
outsl
mov
pushf
jl
pop
mov
ret
add
into
test
lock
xor
lea
jns
adc
loop
loopne
jne
sbb
bound
and
mov
dec
jl
out
mov
adc
stos
push
jmp
add
jns
add
add
push
dec
push
adcl
ret
and
scas
push
mov
xor
adc
or
lret
cmp
and
pusha
adc
adc
pop
ret
push
adc
pushf
in
sub
shr
jbe
xlat
jmp
and
push
dec
mov
pop
jmp
test
jne
pop
ja
jl
scas
and
pop
push
cs
out
dec
outsl
jg
fwait
inc
aam
push
mov
sub
pop
js
sub
pop
cmp
mov
inc
jg
cld
jge
jecxz
out
cwtl
cmp
je
outsb
shlb
add
sub
cmpl
pop
lea
push
mov
imul
divl
add
jmp
mov
addr16
push
push
in
lods
loop
or
mov
push
inc
mov
loope
leave
ret
icebp
cmp
cmp
push
std
or
in
add
or
std
or
adc
adc
adcb
mov
or
stc
jne
mov
rorl
in
add
subl
mov
inc
das
pop
lock
repz
push
ja
lea
decb
pushl
cmp
or
fwait
xchg
pop
popaw
push
or
pusha
fsubl
pop
pop
arpl
adc
into
or
pop
xor
out
jo
pusha
xchg
add
nop
test
je
inc
pusha
or
pop
cwtl
rorb
mov
pop
push
sbb
movsb
mov
insl
aam
jle
je
ljmp
imul
push
and
sbb
push
popl
adc
pop
and
pop
xchg
mov
push
call
je
test
ret
mov
add
icebp
inc
js
aas
or
add
push
popa
popl
fwait
sbb
adc
adc
cmp
clc
mov
aaa
fs
cmp
je
cmpl
std
das
bnd
mov
cmp
jne
push
push
imul
xchg
popf
ret
jl
pop
jmp
fcoms
jg
mov
cmp
rorl
leave
push
inc
sub
hlt
bound
inc
or
sbb
enter
fldenv
or
adc
jo
clc
push
inc
clc
jg
inc
fimuls
movb
dec
aad
cmp
shr
mov
and
add
lods
adc
out
je
or
inc
inc
or
shlb
adc
ret
inc
pop
push
inc
outsl
or
pop
pop
out
lcall
push
mov
das
inc
pop
and
mov
adc
xchg
cmpl
or
push
test
or
dec
push
push
call
outsl
sub
inc
ror
adc
add
adc
sbb
push
cli
pushf
mov
push
jnp
inc
mov
mov
mov
mov
cld
xor
out
lods
shll
jge
inc
or
push
or
jae
push
pushf
cli
loop
add
clc
cmp
sbb
add
cmp
jmp
xor
cmpl
jle
push
cmp
jmp
mov
cmp
jge
mov
jle
ret
jbe
xor
shlb
push
out
cmp
push
hlt
loopne
inc
cmp
push
sub
mov
adc
test
cmp
mov
loopne
jl
add
xor
add
add
fwait
pop
fsubrl
or
adc
adc
mov
push
ljmp
pusha
les
or
bound
hlt
mov
mov
mov
lock
ss
cltd
add
fs
cmp
out
pushf
pop
push
ret
push
mov
xchg
sarb
sahf
lahf
rcl
cmp
xlat
sahf
and
push
les
xor
xchg
data16
cmp
add
or
mov
pop
ret
push
call
cmp
pop
cltd
jmp
scas
cmc
pushf
dec
mov
clc
js
aaa
push
and
adc
lea
push
clc
out
inc
jbe
adc
mov
pop
pop
jmp
mov
mov
mov
jecxz
daa
xor
fs
movl
inc
lock
dec
dec
adc
sbb
setae
pop
sbb
pop
in
cli
jmp
stc
test
je
or
std
push
mov
pop
jno
andb
shlb
movsl
push
xor
inc
jns
divb
enter
add
mov
or
test
push
xchg
cmp
cmp
add
scas
mov
inc
and
add
or
sbb
das
or
shrl
ret
push
push
in
js
sarb
cmp
sbb
and
cs
mov
sbb
das
sbb
or
negl
sbb
add
push
stc
mov
add
push
sub
into
adc
pop
pcmpgtd
fimuls
push
adc
shl
adc
mov
adc
lret
adc
pop
mull
jmp
test
dec
or
xchg
add
xor
cmp
ja
cmp
test
adc
jne
jl
and
stc
adc
cmp
popf
cmpl
jg
test
push
cmp
mov
push
cltd
pop
neg
hlt
mov
push
jne
lock
mov
inc
cmp
adc
jle
push
jb
jmp
push
pop
roll
mov
dec
sbb
adc
jle
ja
and
add
push
push
jbe
call
push
cmp
pusha
push
sahf
lods
cli
mov
push
and
jmp
sub
dec
je
or
fisubrs
adc
in
jge
adc
imul
adc
sti
jae
inc
xorb
jmp
or
test
cltd
ret
imulb
int
jp
jecxz
pop
jne
aam
or
lock
rolb
pop
mov
or
mov
call
add
mov
scas
adc
or
mov
sub
mov
push
mov
sarl
xchg
xchg
mov
loope
sbbl
std
mov
and
loopne
cld
out
add
add
sub
pushl
js
inc
push
in
sahf
fwait
xor
adc
pop
sti
arpl
jmp
mov
adc
jmp
sti
imul
cmp
je
cmp
and
jmp
inc
dec
shrl
dec
sbb
leave
adc
adc
out
ja
mov
add
fstpl
imul
jmp
sbb
and
jmp
and
jmp
data16
sbb
mov
push
sub
sahf
cmpsl
stc
push
and
das
inc
pop
push
movsl
mov
loop
jns
jge
mov
push
mov
lock
loopne
stos
aad
cld
mov
sub
push
pusha
aaa
outsl
dec
adc
fbstp
and
in
or
clc
xor
jnp
movb
sub
xchg
ja
or
adc
jno
mov
das
pop
mov
mov
and
and
push
pop
hlt
pop
cs
push
lea
push
sbbl
lea
or
xchg
push
repz
cmp
inc
jp
and
les
scas
pop
lods
addb
or
scas
dec
xchg
popf
push
stc
sub
adc
movl
fbld
ja
push
sbb
lea
fiaddl
xor
mov
adc
in
jnp
push
call
add
add
clc
push
ja
ja
mov
std
movl
lret
js
jbe
test
mov
sbb
pop
pop
push
and
push
dec
pop
ds
inc
jmp
adc
cmpl
aas
xor
adc
nop
sub
sahf
mov
xchg
jge
mov
adc
iret
arpl
jae
and
in
adc
pop
nop
out
rorb
rcrb
dec
je
adc
stos
jmp
jae
loop
adc
dec
dec
rclb
not
and
mov
mov
mov
and
xor
jecxz
lds
in
pop
push
push
cmp
xchg
xchg
in
jnp
push
push
push
xor
mov
aas
iret
cmp
stc
push
push
push
xchg
push
loop
add
lods
push
sub
sahf
dec
pop
jmp
clc
add
push
jmp
outsb
mov
lea
je
in
mov
test
mov
lea
jle
gs
and
cmpl
add
mov
sbb
clc
pop
sbb
lds
cli
hlt
dec
pusha
imul
xchg
push
ljmp
adc
clc
push
in
decl
popf
xor
mov
pushl
mov
adc
in
in
mov
dec
adc
mov
dec
lea
or
jmp
pop
cmp
je
dec
call
pop
sub
cltd
sub
sar
add
bound
in
in
aaa
daa
dec
dec
in
cmp
push
mov
add
fwait
cmpsb
fnstenv
adc
dec
cmp
daa
jns
rcrb
sub
xor
add
inc
leave
mov
pushf
or
adc
mov
repz
mov
stos
add
sbb
pop
lahf
jmp
or
push
push
mov
xor
cmp
fdivrl
outsl
dec
test
mov
decl
sbb
and
and
mov
add
fistpl
fs
inc
imul
fsubrl
cmpsb
inc
cmp
dec
or
dec
ret
jno
push
insb
mov
xchg
jns
adc
push
decb
lea
sbb
and
mov
inc
cmpb
sbb
enter
adcb
mov
adc
pusha
pushf
jmp
nop
in
test
or
add
mov
inc
push
sbb
fbld
je
push
mov
inc
lock
pushl
adc
js
and
bnd
sbb
add
incl
and
jbe
daa
inc
push
cmpsb
ds
cmp
cmpsl
stc
jmp
cmpl
je
cmpl
sbb
adc
xchg
sbb
cwtl
pop
push
add
hlt
inc
pmaxub
jg
jmp
mov
add
xchg
andl
aas
aad
leave
rorb
or
lock
push
jbe
rcll
js
rcrl
add
sbb
mov
cltd
jl
dec
lret
inc
pop
lock
in
cmp
hlt
movb
addr16
lock
push
std
lods
in
out
enter
adc
cwtl
jo
movb
loope
adc
outsl
aas
mov
adc
mov
lea
mov
dec
inc
xchg
pop
fs
xchg
push
and
jecxz
popf
or
test
inc
pop
loopne
jmp
mov
mov
pop
imul
mov
test
cmp
or
scas
popf
mov
pop
lea
inc
dec
push
test
pop
jbe
adc
ret
add
push
sub
cmp
out
fldcw
push
mov
cmp
push
sub
mov
fldln2
fisubl
push
sub
or
nop
repz
loopne
jp
push
enter
js
call
jl
pop
insb
dec
addl
push
adc
sub
mov
pusha
stos
jo
push
adc
adc
or
dec
lock
into
lock
lods
sub
push
cli
xlat
call
xor
andb
iret
enter
aam
inc
pop
cwtl
cmpl
pop
push
xor
sbb
cmpb
dec
adc
faddl
xor
push
jb
xor
lcallw
dec
fldl
fdivr
mov
loope
pop
push
ljmp
push
jo
enter
es
push
and
push
cmp
xchg
out
adc
lock
push
jo
mov
inc
add
movsl
pusha
es
pop
or
xchg
sbb
add
rcrl
adcl
push
xor
or
cmp
pop
shll
pushf
and
sub
adc
loop
arpl
cltd
mov
push
add
push
or
mov
sub
lret
cmp
xlat
sbb
stos
fcoms
jle
xchg
or
arpl
mov
roll
inc
adc
cmpl
cmp
in
push
dec
leave
push
mov
das
adc
adc
orl
sbb
stc
xchg
addb
lret
pop
mov
and
sub
cmpb
test
je
cwtl
pop
shrl
xlat
inc
or
xchg
xchg
push
cmp
repnz
dec
cs
sub
push
push
cmp
nop
flds
adc
pop
cmp
in
insb
repz
imul
adc
bound
xchg
pop
mov
or
shlb
jo
jmp
mov
push
loopne
push
and
int3
add
in
adc
jl
xor
add
movsl
sbb
jno
outsl
and
movsb
test
imul
rolb
shlb
xor
loope
int
fsub
lods
pop
aaa
mov
arpl
jns
inc
adc
push
inc
adc
leave
xchg
jl
inc
aas
inc
or
push
bnd
scas
fwait
sbb
cld
pop
pushf
cmc
cmp
mov
cltd
mov
icebp
fbld
xlat
add
sar
push
mov
insb
cmp
adc
jl
dec
inc
sbb
add
lock
mov
mov
mov
fcomip
daa
rclb
adc
data16
xor
idiv
jle
mov
fwait
aaa
jp
mov
incl
sbb
pushl
loopne
jbe
rcr
and
pop
jmp
fstl
mov
cmpsl
int
jp
dec
sub
mov
sti
in
pop
and
sbbl
mov
push
insl
rorl
out
dec
and
push
call
push
ljmp
push
loopne
mov
clc
je
test
pop
ljmp
idivl
mov
xor
sub
mov
sti
rcr
mov
jg
sub
scas
fs
or
xchg
arpl
mov
std
jle
cmp
lahf
xor
in
repnz
and
lods
lea
clc
add
pop
mov
pop
xchg
imul
cmp
or
jmp
cld
pop
idivl
jge
jmp
mov
pop
hlt
fildl
out
stos
mov
sarb
faddl
and
sub
adc
xor
mov
fdivrp
mov
mov
mov
sbb
mov
ja
or
cmp
pushf
movsl
push
addl
mov
bound
or
clc
fidivl
jmp
outsb
lret
and
movsl
mov
push
mov
addr16
testb
jl
dec
jmp
loop
or
fmull
test
lea
push
or
lock
aam
push
adc
and
jo
cs
adc
je
mov
pop
push
lahf
mulw
lret
je
or
sbb
push
inc
pop
and
sbb
push
jmp
sbb
cmp
shrl
jle
add
arpl
pop
sti
adc
cmp
adc
ret
push
mov
or
push
add
in
cmp
out
and
push
std
pushf
xorb
ficomps
cwtl
sub
cld
gs
mov
or
mov
xor
push
jne
mov
xchg
loopne
xchg
scas
pop
jne
shl
mov
mov
cs
loopne
inc
add
and
xchg
push
rorb
pop
and
cmp
out
pop
push
cmp
xor
push
lea
push
mov
push
loope
jae
mov
pop
rorb
jns
pop
sbb
mov
sub
dec
or
pop
push
dec
add
push
sub
push
or
or
cmp
aas
loope
mov
lods
pop
adc
add
ret
push
push
lahf
xor
jp
add
pop
out
mov
and
adc
sbb
sbb
push
sbb
jle
add
mov
loope
jl
insb
adc
fs
lock
push
push
pop
add
pushf
cmovnp
mov
jecxz
push
mov
ret
mov
lock
mov
mov
repz
inc
adc
push
mov
and
stos
out
fsubs
cmp
or
and
add
dec
and
jno
and
push
xor
xchg
push
push
loopne
ret
pop
pop
mov
dec
ret
mov
pop
cmp
push
lock
sub
clc
setb
test
jne
mov
int
lock
cmp
sbb
mov
dec
dec
adc
jl
call
lea
push
pop
adc
aaa
add
mov
je
sub
aas
mov
pop
jmp
mov
lods
clc
dec
inc
mov
nop
lock
hlt
mov
in
adc
lods
je
shrb
inc
sbb
enter
shrl
inc
cmp
push
sahf
into
dec
or
lcall
testl
call
cmp
push
shlb
dec
dec
add
into
dec
rcpps
in
mov
adc
cs
add
ret
push
add
xchg
lock
pop
pop
ror
fstpt
or
and
push
je
and
je
ja
test
lahf
push
mov
in
test
pop
or
and
dec
fisttps
loope
leave
rolb
shlb
in
cmp
test
gs
push
push
adc
add
dec
mov
mov
mov
mov
mov
movsl
and
ja
test
popa
or
pop
xchg
mov
fildll
add
mov
lods
or
push
pop
or
mov
aad
and
subb
xchg
ret
test
je
fwait
mov
mov
decl
lret
push
ret
jne
push
push
cmpsl
or
xchg
or
mov
jmp
ffreep
sub
jbe
mov
mulb
inc
or
pushf
mov
lret
sbb
push
gs
and
mov
fiadds
setp
cmp
into
and
and
lahf
loopne
popa
sub
and
jb
or
or
push
add
out
xor
jecxz
push
daa
mov
xchg
vorps
stos
add
imul
xchg
inc
mov
fdivs
and
jg
lds
mov
rcll
inc
insl
lcall
mov
jl
fs
jge
mov
and
les
movl
push
push
ret
pusha
dec
dec
lea
ret
ljmp
shl
push
push
or
mov
fcomps
inc
fdivs
sbb
jp
or
xor
xor
pop
dec
test
mov
push
stos
inc
repz
ret
sbb
xor
add
cltd
adc
je
cmpb
repz
adc
imul
mov
dec
ss
dec
sbb
add
add
cld
bound
and
movsb
xor
push
pop
or
ffree
jg
or
popl
adc
movsb
or
test
cmp
stos
and
cwtl
push
xchg
add
add
inc
add
lea
push
test
pop
inc
orl
icebp
mov
icebp
pusha
scas
add
inc
pop
shrl
cwtl
aas
lcall
cmpsb
cs
popf
inc
ljmp
mov
decb
mov
add
bound
adc
cmp
sub
inc
sahf
aaa
call
push
inc
insb
adc
nop
shrl
ret
aam
call
dec
dec
outsb
sbbb
mov
push
mov
mov
ret
fcmovne
mov
add
push
mov
xor
fmuls
and
shl
daa
add
add
mov
cli
test
fdivl
mov
loopne
sbb
inc
adc
mov
ds
adc
jge
jl
bound
shlb
fsubrp
adc
or
adc
push
in
mov
or
dec
and
mov
and
mov
jmp
mov
enter
adc
scas
adc
fwait
sub
fdivl
adc
lock
mov
sti
xchg
adcl
xchg
scas
sbb
stos
mov
fadds
je
in
adc
imul
in
push
push
fcmovb
mov
lods
cmpsb
das
int
rcll
add
add
sbb
push
into
inc
push
decb
shrl
push
inc
cmp
pop
insb
in
push
pop
pop
xor
neg
sbb
bnd
xor
inc
and
push
mov
cmp
inc
ficomps
and
movsl
push
adc
arpl
fs
rolb
das
in
mov
and
aam
xorl
adc
loopne
data16
mov
mov
sbb
mov
les
add
xchg
dec
into
rcrb
rcrl
jne
pop
in
jo
mov
pop
ja
js
cli
mov
cld
sbb
xchg
jecxz,pn
fsubr
push
sbb
and
je
cmp
js
xlat
add
nop
clc
push
push
or
inc
outsb
subl
adc
jp
lcall
loope
ret
loopne
mov
das
movsb
dec
xchg
push
cmp
repnz
jne
pushf
subl
cwtl
xchg
add
xor
rcrb
jl
add
push
lcall
js
rorb
adc
or
mov
sarl
inc
int3
push
iret
popf
stos
cltd
shrb
or
shlb
push
sti
add
test
lea
push
rolb
lret
sub
adc
pop
mov
sbb
movsb
pusha
and
mov
fnstsw
jns
insl
mov
push
pxor
cwtl
push
stos
sub
push
push
nop
mov
shlb
lods
mov
jg
pusha
add
or
inc
int
pop
push
and
call
test
push
push
add
rcrl
adc
and
push
rcrb
push
lods
and
mov
push
rcrl
sbb
mov
or
and
add
inc
and
sti
xlat
aaa
rorl
jle
pop
test
dec
ficoms
stc
loope
mov
add
jo
fiadds
lcall
daa
sahf
dec
test
sldt
pop
push
push
ds
push
push
inc
xor
mov
and
add
sub
and
inc
inc
sub
les
negb
adc
mov
push
adc
adc
rcrb
cs
push
push
cld
inc
mov
inc
add
js
test
add
jns
iret
sti
ret
sbb
adc
orl
sub
orl
or
arpl
dec
pop
out
or
mov
clc
cld
shrb
or
push
incb
push
clc
je
mov
jmp
xor
shrl
popf
int
xor
popf
outsl
addr16
fstpl
adc
or
insl
mov
and
les
push
sub
push
mov
sub
dec
outsl
xor
in
dec
mov
clc
and
push
inc
js
jo
testl
fiaddl
xor
test
jmp
pop
pop
icebp
jae
pop
punpckhwd
pop
jl
outsb
or
enter
push
adc
pcmpeqw
push
add
mov
push
fnstsw
cmp
mov
dec
mov
xor
cmp
jle
mov
add
sub
inc
inc
jmp
je
ja
decb
add
inc
in
scas
inc
lcall
inc
mov
daa
loopne
pop
rolb
inc
sbb
inc
cmp
jae
jne
adc
test
jb
and
cli
xchg
js
dec
push
adc
xchg
ficoml
inc
push
je
out
outsl
lcall
movl
lcall
fcoms
lods
adc
test
adc
cld
or
or
fs
out
dec
or
or
movsl
cmp
mov
pop
dec
imul
xor
test
cmp
inc
xor
testb
cmp
add
fisttpl
push
fwait
lock
or
or
enter
loope
lock
stos
pop
clc
jl
dec
enter
out
jl
in
pop
pop
mov
push
ja
pop
dec
loope
int3
push
rorl
divl
and
je
lret
or
mov
dec
xor
call
js
pop
adc
out
dec
pushf
dec
enter
shlb
pushf
or
sahf
lret
fists
shll
shrb
nop
mov
shrb
adc
js
fwait
bound
add
and
push
push
inc
sbb
inc
pop
rolb
int
sbb
mov
int3
add
adc
in
and
stos
test
xorb
jg
dec
enter
adcb
int3
adc
repz
inc
adc
push
addr16
in
push
mov
jne
fildl
xchg
dec
adc
decb
push
iret
and
add
add
test
add
dec
enter
push
cmp
hlt
pushf
pushf
cmp
mov
lds
aad
jnp
dec
in
sti
imul
pop
pop
or
adc
add
cmp
push
adc
inc
push
fsubl
ret
mov
jp
push
add
mov
and
and
pop
loop
jp
jns
out
pop
gs
and
pop
adc
out
mov
aam
adc
test
jns
or
xlat
sahf
in
push
or
cmp
cmp
loopne
push
jecxz
jo
data16
call
inc
insl
jnp
imul
adc
mov
pop
push
andl
push
mov
xor
out
inc
xor
mov
mov
icebp
inc
js
gs
xor
jge
push
loope
and
pushf
fs
xchg
outsb
or
add
aas
add
fidivrl
pusha
and
mov
in
fisubs
or
jmp
sub
sub
cmp
or
mov
xchg
stc
jge
jbe
jne
push
fs
push
add
sub
sbb
sbb
sbb
and
lahf
js
pop
leave
and
and
sbb
pusha
cmpl
jne
jo
fisubs
int3
hlt
adc
fisttpl
mov
and
dec
enter
or
add
mov
xchg
pusha
adc
imul
adc
push
pusha
sub
mov
test
sbbb
xor
inc
add
sbb
psllq
js
dec
mov
lock
icebp
mov
lcall
idivb
adc
insb
insb
js
push
cmpsb
imul
and
adc
push
xor
mov
hlt
lret
dec
ljmp
outsl
out
xchg
sbb
mov
inc
dec
mov
jl
sbb
fcmovnbe
adc
cmp
aam
sbb
jns
sub
add
inc
sti
xor
addb
lock
inc
push
mov
inc
fwait
mov
pop
sbb
jb
sbb
mov
scas
push
fs
add
xor
aam
std
mov
test
pop
out
add
sbb
cmp
mov
dec
pushf
xor
dec
jle
push
jo
movsl
add
add
mov
loop
inc
icebp
sbbb
aad
add
add
mov
push
fisubl
sbb
stc
mov
pop
jmp
in
dec
fldl
add
sbb
xor
nop
in
cwtl
or
mov
xchg
inc
sub
and
add
push
mov
loopne
cltd
movsl
outsl
xor
push
lahf
mov
lock
mov
lods
sub
adc
mov
push
mov
pop
or
add
orb
push
cli
sub
push
popf
mull
mov
ja
dec
pop
sub
or
cmpl
or
in
and
sub
xchg
dec
and
xor
sub
dec
pop
pusha
mov
fildl
arpl
push
orl
lock
xchg
lods
xchg
cmp
in
push
add
call
int
fdivrl
cmp
les
pushf
jmp
push
pop
push
fnsave
xor
add
pusha
fs
popf
je
fldlg2
inc
push
repz
jb
loop
pop
hlt
setne
inc
sbb
pop
repz
sti
aas
push
push
add
aas
mov
mov
cmp
jne
push
push
push
push
add
rclb
jmp
cmp
push
dec
sub
ret
call
cmp
xor
pop
shlb
paddusb
icebp
xchg
xchg
mov
and
scas
xor
mov
push
and
shll
sub
dec
imul
inc
sbb
ja
cld
dec
mov
add
sete
and
push
push
pop
out
mov
add
push
sbb
jmp
mov
mov
cld
push
push
sbb
add
sub
movsl
shr
add
dec
xchg
push
or
push
sbb
orl
je
mov
jno
add
mov
sbb
mov
add
adc
jo
cmc
add
cmpsl
push
or
je
xor
or
lock
dec
shll
adc
and
mov
or
xor
push
fwait
clc
lret
inc
arpl
sub
and
sub
lret
sbb
or
lret
dec
add
push
out
add
pop
test
xor
lods
pop
inc
ret
sbb
xchg
xchg
push
mov
adc
xchg
jne
sbb
mov
or
outsb
mov
fs
bound
jbe
popa
cltd
fdivs
call
test
in
out
lods
stos
cmp
lret
push
jne
xchg
xor
add
push
loope
mov
xchg
shll
stos
adc
pop
xor
adc
pushf
iret
mov
inc
mov
loopne
inc
scas
pop
gs
ljmp
sahf
mov
mov
pop
inc
jle
xor
add
or
fs
mov
enter
sti
adc
mov
lahf
mov
mov
pop
jo
js
inc
dec
cli
stos
aaa
cmp
dec
test
adc
push
pop
fdivs
sbb
adc
cmp
pop
dec
filds
shl
push
mov
jb
lock
push
mov
ret
sub
fstpt
test
push
sbb
jecxz
sbb
rol
cli
movsl
mov
ret
std
test
cwtl
add
sbb
mov
push
pop
and
ja
shlb
or
mov
push
popa
push
push
jo
mov
enter
sbb
or
ljmp
sbb
pushf
jl
xchg
mov
push
xor
add
dec
test
adcb
adc
cld
loope
xchg
mov
add
lea
aas
push
inc
add
or
mov
movsb
add
les
mov
in
add
aam
adc
movsl
xor
clc
fistpl
daa
outsl
movsl
add
shrl
mov
mov
outsl
push
add
jl
ret
sbb
lds
rorl
mov
daa
cmpsl
push
popa
ret
inc
test
lret
out
and
addr16
adc
shll
sbb
aaa
dec
shll
or
clc
cmp
jae
push
push
pusha
mov
add
cwtl
shl
and
jbe
pusha
es
sub
add
cmpsl
push
pop
push
add
cmp
mov
cmp
dec
hlt
jge
mov
lahf
cmp
testl
mov
cltd
or
pop
sbbb
jmp
xor
ljmp
inc
cwtl
push
iret
pusha
pop
test
jecxz
or
test
jl
mov
cmp
jg
loope
shl
jge
push
outsb
xor
push
jmp
fdivs
pop
mov
hlt
mov
adc
and
int3
xchg
cmp
push
pop
push
lods
in
orb
pop
push
lea
andl
js
dec
cwtl
xor
add
lock
nop
or
sub
push
cmp
push
aas
nop
mov
inc
push
lock
pop
xor
loope
add
mov
and
xorb
mov
out
sbb
mov
scas
js
add
iret
xor
mov
mov
adc
clc
pop
and
jo
sub
outsb
es
cmp
push
inc
or
mov
or
cli
cmp
inc
addl
icebp
pop
inc
mov
js
add
dec
fdivr
shrl
cmp
dec
js
pusha
jmp
pcmpgtd
sahf
push
sti
sbb
adc
ret
mov
aam
aad
in
sub
cltd
pop
xchg
and
ds
shll
mov
mov
xchg
pop
testb
push
pop
pusha
and
mov
pop
loop
cwtl
jge
lea
jg
and
sbbl
cmp
cli
or
insb
lds
es
or
int
lock
cmp
das
test
cltd
call
ret
lea
push
pop
jo
fimuls
mov
jmp
cwtl
ret
sub
loopne
ja
sub
xlat
cmp
xor
add
cli
jbe
cmpl
or
test
pop
xchg
and
and
push
in
fidivrs
jne
test
pop
jo
pop
mov
jmp
sbb
cli
roll
clc
add
add
mov
scas
shrl
ret
ror
xchg
cmpsb
sbb
xchg
sbb
mov
mov
add
pop
cmpl
adc
mov
pop
pop
in
cmp
lds
add
ret
add
or
or
cmp
mov
repnz
daa
lret
and
cmp
outsb
push
mov
int3
mov
dec
and
mov
push
cmpsb
rolb
lods
xchg
mov
push
push
jecxz
jne
jbe
push
xchg
pop
lret
subb
mov
scas
adc
ret
test
shrl
je
pop
cmp
cmpsb
inc
cli
in
rolb
jbe
or
fcomps
aam
shrb
ja
ret
push
shrb
enter
jne
jle
push
add
movsb
push
rclb
inc
les
outsb
jmp
sub
cmp
sbb
sbbl
push
int
cltd
movsl
mov
in
pop
xchg
sub
mov
push
pusha
test
pop
in
lea
push
popa
test
pushf
xorb
arpl
dec
punpckldq
mov
sbb
adc
mov
pop
mov
scas
adc
sbb
jnp
kaddw
testb
rorb
xorps
add
lcall
push
lcall
inc
and
push
sti
adc
std
fwait
shrl
add
js
push
mov
adc
push
cmpsl
cmc
xchg
lock
je
mov
jmp
add
mov
pop
daa
dec
mov
les
add
jl
mov
cmp
mov
sub
sub
sbb
mov
sbb
adc
cmpsb
mov
adc
adc
inc
mov
fldenv
and
test
adc
pop
and
adc
xchg
dec
pop
call
into
push
int
call
cmp
dec
insb
dec
add
or
add
xchg
inc
je
mov
in
addr16
sbb
jne
sbb
gs
mov
mov
or
fs
sbb
out
jmp
out
adc
adc
into
inc
xor
out
mov
inc
jl
mov
rcrl
mov
sahf
hlt
sbb
pop
rolb
test
outsl
lret
or
inc
add
mov
loope
mov
fimuls
mov
xor
jmp
jle
clc
mov
inc
or
push
sbb
enter
movsb
push
push
smsw
or
dec
or
xor
pop
movsb
sub
clts
sbb
pop
enter
mov
mov
push
push
in
cmp
mov
jmp
push
push
fiaddl
test
pop
ja
sub
loop,pn
push
je
push
push
push
jp
dec
add
pop
xor
or
add
and
or
or
test
xor
rcrb
add
test
add
mov
lcall
add
jle
xchg
jmp
call
xchg
add
and
add
lock
jp
fwait
or
and
cmp
add
push
shlb
fadds
pop
jmp
xor
stc
sahf
test
jno
push
mov
and
pushf
cmp
popa
in
mov
daa
push
dec
adcb
pop
and
and
mul
mov
lods
pusha
mov
cmp
pop
adc
mov
div
gs
pop
pop
imul
jb
inc
sub
daa
mov
pushf
scas
or
dec
fwait
cmc
sub
ds
leave
sbb
aas
insb
test
jae
mov
js
jo
test
cmp
push
add
and
or
pop
or
aad
nop
push
bound
in
pop
push
arpl
mov
pop
xchg
add
sbb
loopne
or
loopne
mov
aaa
mov
add
mov
pusha
pop
inc
fiadds
pop
push
ror
mov
lock
lret
imul
push
push
add
and
push
pop
sub
in
xchg
xchg
lods
fmull
adc
adc
mov
adc
pop
mov
enter
leave
pop
jmp
lea
pop
or
dec
jno
or
outsb
lods
pop
xor
mov
loopne
loopne
xchg
push
fisubl
lods
push
push
xor
dec
sbb
mov
add
cmp
push
inc
and
adc
dec
movsb
mov
or
lods
add
enter
dec
out
pushf
inc
jmp
test
psubsb
nop
or
push
pop
push
cmpsl
inc
cmp
je
push
movsl
jge
mov
jne
sub
jne
xor
push
imul
xor
cld
cld
sub
lea
mov
pop
inc
fidivs
add
mov
es
push
add
fildl
nop
or
mov
lea
push
lock
lret
aas
cmp
sub
mov
imul
jo
fimuls
inc
jg
xor
es
fiaddl
lock
call
loop
imul
jmp
push
or
je
imull
icebp
add
mov
push
push
add
sbb
jne
jne
or
dec
jp
shr
popf
cmp
add
sub
fcomps
cmp
stos
xchg
test
jo
xor
cmpsb
cmp
jb
ja
cmp
pop
pop
pop
jmp
imul
pop
adcb
or
mov
pop
sub
lock
push
ss
or
or
call
push
insb
into
rclb
andl
orb
rolb
add
push
mov
push
call
ret
jge
inc
divb
cwtl
inc
pop
push
mov
cmp
je
loopne
inc
sbb
push
fstp
sub
icebp
pusha
movzwl
repz
cmp
push
cltd
cmc
pop
mov
in
jmp
and
xlat
clc
dec
ja
jb
fnstcw
mov
push
fnstcw
push
sub
inc
mov
sub
dec
add
outsl
mov
mov
in
jl
push
push
out
sbb
and
add
test
push
add
or
push
or
das
bound
loopne
scas
or
mov
mov
cmp
je
push
lea
push
fnstcw
enter
sbb
inc
push
dec
mov
clc
push
sbb
cmp
pop
das
pop
or
or
sub
sarb
outsb
movlps
call
push
aas
push
adc
inc
xchg
into
pop
shrb
push
sbb
fadds
call
bound
in
insl
push
clc
add
hlt
push
in
inc
mov
mov
jbe
in
mov
neg
push
cmp
cld
cli
fldl
test
or
push
loope
in
orl
push
je
sub
dec
lods
push
test
and
test
ja
in
test
movsl
push
push
xor
push
push
cmp
je
ficompl
sbb
aam
push
xchg
je
mov
rcr
inc
ss
mov
mov
push
aas
dec
mov
int3
sub
and
mov
std
push
icebp
inc
stos
mov
fs
insl
push
push
sarb
jl
data16
into
push
test
loopne
in
adc
out
cli
ret
add
pushf
rorb
mov
imul
decb
ss
dec
sbb
pushl
and
imul
adc
dec
int
push
lock
es
dec
out
test
test
je
ret
pop
or
and
adc
data16
sub
adc
ret
add
jb
pop
cmpsl
dec
rcll
mov
sbb
xor
mov
aam
xchg
pop
out
push
and
loopne
std
cmpb
mov
jb
ret
out
mov
repnz
cmp
je
cmp
je
cmp
jne
inc
cmp
add
cmpsb
mov
in
ljmp
call
outsb
or
cmc
fsubr
mov
adc
cmpsb
outsb
pop
mov
cmp
xor
adc
xchg
push
dec
pop
mov
pop
clc
and
adc
test
mov
enter
add
jno
cmp
jne
xchg
pop
test
push
push
push
sti
mov
mov
mov
or
push
pop
cltd
sub
mov
inc
push
imul
mov
cli
loopne
jb
lods
pop
cmp
lahf
sub
ret
cmp
adc
jle
fildll
mov
adc
icebp
cmpb
or
cmp
loopne
call
lock
dec
aaa
popa
push
ret
xor
adc
je
cmp
pop
push
sbb
std
insb
data16
mov
push
inc
shrb
adc
sbb
inc
pop
and
add
rcr
cltd
ret
jmp
jge
cmpsb
in
xor
mov
or
add
mov
cmp
jns
outsl
adc
cmp
je
cmp
jne
mov
sbb
add
mov
ja
push
dec
inc
lock
mov
pop
dec
xor
pop
lds
lock
testb
lcall
mov
cli
cmp
or
shlb
cmpsb
lea
mov
fdivrs
inc
cmp
fs
dec
inc
jmp
inc
and
add
or
jmp
pop
sub
ret
popa
dec
add
or
push
jg
cmp
push
nop
cmp
cmp
je
mov
lea
add
clc
cmp
sub
daa
mov
inc
xor
pusha
jnp
insb
inc
cmpl
cmp
push
push
cmpb
insb
outsb
adc
clc
je
sub
les
cmp
or
ja
shrb
enter
testb
lds
js
add
push
cmp
push
ds
and
out
loopne
jo
cmpsb
inc
sub
popa
loop
jne
shll
add
filds
outsb
pop
movzwl
data16
jb
int
mov
cmp
pushl
shl
add
jmp
cwtl
aas
les
loop
mov
inc
orl
lods
or
dec
je,pn
fs
jne
xor
cmp
push
test
incl
or
add
pop
jae
mov
jmp
jo
push
popa
dec
shlb
cld
jbe
test
adc
lea
cld
mov
jo
popa
call
mov
push
push
add
jle
cmp
jg
or
jge
pop
aaa
or
jle
es
sub
sub
and
pop
mov
pop
jl
pop
jle
pusha
add
aas
or
inc
jbe
jp
jb
jbe
loopne
pop
cwtl
mov
test
fwait
and
mov
adc
je
test
jne
je
outsb
and
cmp
jb
xchg
je
je
call
and
add
add
inc
adc
dec
mov
sub
push
sbb
movsl
add
adc
cmp
mov
inc
push
push
mov
inc
and
in
mov
cmp
inc
outsl
fisttpll
jmp
mov
add
mov
inc
es
dec
mov
mov
xchg
adc
push
movl
sub
mov
mov
xor
push
cmpsb
insb
xor
outsb
pusha
and
mov
lock
addl
fimull
mov
je
out
pop
cmp
add
mov
xchg
jmp
lods
push
sbb
mov
pop
sub
imul
mov
movb
cmp
fwait
push
inc
lea
mov
movsb
mov
pop
jb
sbbl
decb
cmpl
in
or
xor
mov
or
lea
pop
cwtl
xor
xor
aam
lock
bnd
stos
dec
daa
mov
add
jl
sbbl
push
push
outsb
mov
shll
call
insl
and
jl
or
xchg
adc
sub
fldcw
sti
mov
clc
sahf
add
or
pop
mov
pop
daa
dec
add
repnz
mov
arpl
or
add
movsb
ss
int3
push
push
inc
mov
cld
jmp
xor
pop
mov
push
and
clc
add
inc
inc
inc
movsb
fnsave
jl
add
cmp
add
mov
cmpsl
data16
mov
pusha
add
add
sahf
inc
xor
lock
popa
mov
sub
inc
xchg
xchg
inc
lods
pop
adc
adc
adcb
ljmp
push
xor
lds
nop
jb
sti
pusha
jb
cs
sbb
mov
lds
ss
daa
add
inc
fisttpl
mov
xchg
xor
push
sbb
mov
xchg
pusha
add
lods
dec
jle
add
mov
into
push
mov
pop
push
and
dec
pusha
or
pop
shrb
sbb
xchg
xchg
pushf
lods
sbb
jne
lahf
jne
addl
xchg
xchg
pop
mov
pop
movsl
fldl
ds
push
leave
pusha
jb
add
cltd
rorl
or
nop
and
or
enter
lahf
mov
test
pop
daa
jmp
mov
pop
rorb
xchg
sbb
mov
mov
mov
add
test
in
mov
mov
loope
mov
xor
imul
xor
loopne
or
es
push
stos
scas
add
rorb
pop
out
add
jmp
cmp
jne
adc
push
negl
cmpsb
jne
sbb
dec
shrd
jnp
das
movl
and
lds
pop
das
bound
into
cmpl
dec
adc
add
push
arpl
cmpl
gs
or
mov
movsb
imul
test
lret
cmp
je
add
outsb
icebp
lret
lds
lds
add
inc
xchg
or
in
mov
jge
pop
and
aaa
sbb
das
mov
inc
jne
cwtl
jmp
add
repnz
mov
outsb
or
push
aam
fsubr
cmp
int
jle
test
jo
push
push
or
push
and
sub
in
push
mov
outsb
insb
jne
jl
sub
push
adc
mov
sbb
fwait
inc
xchg
incb
jae
jmp
xchg
jg
inc
cmp
je
lea
cmpb
cmp
jne
out
add
jne
push
loopne
pop
cmp
test
or
sbb
inc
filds
dec
mov
push
jmp
test
movsb
push
adc
jbe
mov
jb
jge
adc
lods
cmp
add
jle
or
jo
and
jae
mov
jns
push
and
and
mov
or
sbb
push
lahf
jbe
jno
loope
das
ret
or
dec
push
sbb
cmp
lock
fadd
pop
push
push
xor
in
das
lock
enter
adc
add
sbb
inc
or
or
pop
add
jns
in
test
mov
fimull
push
xor
test
or
xor
xor
mov
or
in
sbb
mov
or
inc
sub
and
sbb
lock
lods
pop
add
push
std
push
das
sbb
sub
or
push
cmp
and
inc
cmp
add
cmp
outsb
jns
inc
and
mov
sub
mov
lret
in
push
sub
xor
jb
pop
cs
cmp
or
in
cmp
aas
adc
cltd
push
sbb
pop
ret
add
push
test
mov
movsb
inc
in
add
in
add
push
popa
adc
and
loopne
push
adc
ds
xchg
add
adcb
stos
mov
jge
js
lcall
outsb
enter
jno
pop
sbb
test
push
adc
insl
xchg
push
push
sbb
ret
or
mov
mov
dec
or
push
or
sbb
or
sub
in
dec
bound
add
add
cmpl
or
add
pop
inc
dec
movl
movsl
rcrb
es
cmpb
mov
mov
xchg
sbb
inc
push
inc
cmp
cs
test
mov
arpl
mov
sbb
or
insb
fldl
add
lcall
arpl
sar
mov
movsb
or
dec
xor
xchg
stc
lock
push
push
loopne
in
jne
cld
and
rclb
sub
or
fadds
std
je
mov
jmp
lcall
hlt
cmp
addl
mov
rclb
jnp
fs
inc
adc
and
and
jmp
pushl
add
mov
jle
mov
lea
mov
fcompl
xor
shll
xorl
scas
jne
movsb
bound
lea
jnp
orb
inc
insl
cmp
mov
dec
add
sbbl
push
xchg
rclb
pushf
imul
inc
inc
fsub
in
in
xchg
add
loop
cli
mov
test
in
out
sbb
out
push
push
sub
push
orb
pop
jp
aam
mov
and
dec
stos
lret
push
cmp
or
adc
sub
data16
idiv
sub
adc
push
adc
pop
cmp
loopne
daa
shlb
sbb
lcall
mov
or
in
sub
or
inc
out
shrb
or
add
loope
cmp
int3
inc
add
cmp
adc
jp
pusha
and
adc
sub
pop
imul
rcr
pushf
je
xor
loopne
xorl
push
hlt
mov
leave
int3
xorl
imul
push
inc
mov
xchg
sbb
inc
xchg
es
cltd
inc
mov
sub
pop
popa
adc
pop
or
or
dec
cld
mov
cmpsl
notb
aaa
sub
mov
sub
pop
pop
sbb
adc
or
mov
sbb
cmpl
and
dec
inc
jmp
push
pop
data16
add
mov
mov
or
adc
add
dec
xor
int
cltd
or
adc
dec
sbb
push
bound
cmp
fisubrl
pop
popf
and
and
ja
mov
std
and
pop
sub
add
push
pop
pop
sbb
js
daa
xchg
add
inc
push
sarb
mov
dec
pop
leave
sub
push
add
aas
push
push
mov
adc
jb
push
clc
adc
rorl
or
cltd
ljmp
fcomps
push
int3
in
rorb
mov
or
or
scas
adc
add
pushf
xor
js
test
add
es
imul
pop
stos
inc
add
pop
shrb
inc
rclb
or
pop
or
lahf
add
inc
or
lods
andl
dec
sbb
jecxz
ror
ja
cmp
jecxz
add
add
push
cmpsl
ret
into
mov
lea
mov
ja
sbb
pop
in
mov
dec
inc
out
or
daa
inc
jecxz
push
rep
fdivrs
jo
clc
push
mov
mov
jno
pop
and
add
xor
pop
add
dec
scas
lea
nop
insl
mov
insb
ss
es
ret
js
std
andl
adc
in
pop
inc
aas
or
bound
jl
jge
test
sbb
orl
notb
sarl
mov
jmp
lret
psrad
inc
arpl
shl
pop
and
adc
daa
xor
add
and
sub
inc
inc
out
aam
sub
fxch
jecxz
test
cmp
dec
pusha
adc
cmp
inc
jb
into
in
ror
jo
add
mov
xorl
add
push
and
hlt
fcompl
inc
cmp
leave
mov
insl
inc
pop
inc
push
or
repz
and
rorb
xchg
shll
xor
jecxz
pop
cmp
aam
scas
mov
leave
push
xchg
push
inc
iret
fisttpl
pop
pop
mov
or
sbb
xchg
mov
iret
adc
push
cli
test
out
jns
cmpsl
add
std
or
pop
cmp
mov
dec
mov
arpl
jmp
mov
adc
icebp
mov
int3
rorb
or
adc
cmp
push
imul
pop
pop
push
inc
cltd
inc
sub
adc
es
mov
loop
lea
push
add
fs
adc
xchg
or
push
and
jmp
loop
fcomps
fistpl
push
add
add
push
mov
insb
inc
pushf
call
and
jl
mov
or
js
and
sub
dec
ret
insl
xor
inc
scas
xchg
jne
cmp
xchg
xor
add
sbb
sahf
push
sub
or
inc
mov
inc
bound
cld
data16
aad
pop
das
jecxz
pop
negb
inc
loope
mov
pop
inc
xor
mov
jns
dec
sub
js
shlb
sub
xor
repnz
sub
scas
jle
sbbl
pop
lea
femms
repnz
jb
push
shlb
fcmovu
adc
pop
adc
pop
outsl
adc
mov
outsl
lods
push
push
inc
aam
adc
dec
imull
jecxz
adc
out
cmc
push
mov
movsl
adc
add
jl
push
add
nop
push
icebp
mov
sar
mov
and
icebp
cmp
jne
xchg
sub
add
div
cwtl
sar
sub
pop
dec
or
lods
pusha
adc
mov
adc
sub
xor
fs
jge
pop
inc
xchg
inc
xor
sub
loope
push
loopne
or
sbb
popa
push
sub
mov
jp
or
push
iret
decl
jne
sbb
mov
jge
orb
iret
add
nop
lret
sub
sub
repz
mov
fcomps
pushf
je
loopne
fld1
in
sbb
daa
or
sub
push
push
or
adc
sbb
ss
jge
or
add
ret
adc
cmc
pop
jns
pop
add
mov
dec
test
xchg
mov
sbb
sub
fwait
add
sbb
and
ret
inc
or
pop
in
test
xor
inc
push
pop
sub
loopne
pop
mov
add
or
pop
test
pop
push
rclb
lds
das
xchg
aam
xor
push
xchg
and
dec
cmp
sbb
xor
jl
mov
enter
enter
shlb
push
dec
jbe
andl
lea
or
or
pop
push
mov
inc
and
dec
mov
dec
and
jo
mov
xor
sbb
or
cmpsl
lcall
or
loop
and
dec
nopl
rolb
insl
lock
scas
push
xchg
cmp
add
xlat
and
xor
popf
xchg
sub
es
and
fs
push
mov
lods
jmp
inc
sub
sub
adc
push
scas
add
sub
cs
fsubr
add
sbb
push
sub
pop
xor
sub
pop
leave
xor
jmp
jb
sbb
mov
dec
or
pop
sti
daa
xor
mov
sub
dec
xor
adc
pop
test
mov
scas
inc
nop
sub
sbb
inc
xor
adc
add
lods
jnp
mov
xor
inc
imul
xacquire
add
sub
shrl
jg
je
imul
push
fmull
in
mov
pop
xchg
jns
fimull
add
js
fmull
aas
aam
sbb
movsb
and
sub
in
js
dec
icebp
ret
test
xor
dec
inc
cs
sbb
popa
mov
outsl
add
sbb
xchg
movsb
pop
xor
sub
pop
push
mov
mov
xor
and
push
clc
ja
lock
cmp
jne
mov
jmp
loopne
or
ds
daa
add
xorb
pusha
mov
pushf
adc
stos
pusha
or
xor
sbb
cmp
push
xlat
enter
adc
gs
pop
dec
test
and
push
or
push
jp
push
scas
dec
hlt
lret
aaa
cmp
ret
sbb
enter
push
mov
xor
or
das
jle
sub
push
push
je
mov
insb
push
sub
fmuls
daa
push
cs
xchg
or
or
movsb
add
hlt
jne
push
ret
sbb
mov
inc
mov
sarl
scas
jl
or
xor
ret
lock
xor
lods
fnstsw
mov
pop
inc
inc
dec
dec
ds
stos
cmp
out
and
push
in
adc
xor
and
test
jb
movlps
movl
mov
mov
fldcw
fdivs
and
sbbl
jge
pushf
mov
push
pop
mov
and
add
cmp
sbb
or
bnd
sub
push
aam
insl
in
or
push
sbb
test
nop
or
aam
push
sbb
test
sub
testl
repz
rcr
sahf
call
sub
dec
mov
repz
nop
jmp
jge
mov
popa
dec
pop
jmp
or
dec
push
push
int3
es
push
push
fadds
mov
bswap
jge
inc
fbstp
stos
add
into
ret
sarb
xor
inc
mov
xchg
icebp
rolb
jmp
ljmp
test
mov
xchg
pusha
adc
ljmp
wrmsr
and
rep
loope
inc
jmp
sub
push
push
or
testl
mov
jecxz
add
jp
mov
rolb
shl
sbb
mov
outsb
push
jne
inc
adc
push
xchg
mov
inc
or
mov
repnz
pusha
sbb
or
push
or
rcr
or
rorl
ja
mull
nop
out
push
xchg
mov
shlb
xor
mov
sbb
jl
imul
sbb
jb
or
out
inc
jo
ds
add
mov
xor
push
loope
push
push
aam
scas
fadds
cmp
shl
or
push
cmp
and
std
mov
adc
adc
adc
xchg
lock
and
rol
xchg
roll
mov
pop
pop
dec
out
pop
xchg
adc
jno
fildl
lods
loopne
sub
pusha
out
je
out
pop
sbb
jb
mov
call
nop
or
inc
rolb
and
leave
add
lea
call
sbb
hlt
push
sub
int
sub
sti
mov
jnp
push
int
int3
hlt
push
mov
pop
sub
and
imul
scas
dec
mov
ds
std
adc
xor
fsubr
out
mov
jle
or
push
jle
fildll
cmp
pop
push
inc
loopne
lock
rorb
ret
jl
xchg
mov
pop
popf
push
xor
shlb
rcrb
rclb
jmp
test
sub
sbb
add
ret
mov
xchg
inc
adc
lea
push
addb
and
sub
or
xchg
sbb
xor
and
adc
add
pusha
mov
sbb
out
mov
add
cmpsb
dec
cld
or
pop
add
or
add
fsubrl
scas
xlat
fsubrs
or
push
aam
or
aam
inc
jbe
out
inc
push
xchg
pushf
lahf
xor
add
dec
sbb
push
insl
sbb
push
mov
into
or
jl
scas
adc
hlt
dec
icebp
xlat
shl
daa
mov
add
mov
sbb
pop
inc
ret
or
mov
fcmovne
xchg
fwait
adc
jns
dec
and
inc
sbb
cltd
xchg
jmp
jb
popa
xor
nop
push
and
jne
ret
test
rclb
mov
das
xor
sub
sti
aas
cltd
cs
aaa
mov
je
xor
mov
rolb
inc
fcompl
lcall
cltd
stos
dec
fnstenv
je
sub
sbb
popf
das
jp
push
jmp
outsb
add
jmp
push
sub
mov
fwait
lea
test
cmp
lea
push
lea
push
inc
push
lret
mov
pop
mov
movsl
mov
sbb
jo
sbb
cmc
xor
cmp
sbb
ret
cmp
fstl
mov
or
sbb
fadds
push
pushf
lret
or
pop
cmp
mov
sub
movsb
sub
jmp
movl
notl
mov
dec
mov
addr16
mov
adc
push
cmp
mov
out
mov
in
jge
cmp
nop
mov
xorb
nop
inc
int
insl
fcom
fcmove
push
push
loope
insb
and
fucomp
sub
sbb
or
in
cmp
lahf
aas
fildl
cmp
or
sub
push
lea
mov
jle
lock
out
and
mov
je
xor
inc
cmp
cs
xchg
push
push
push
and
pusha
mov
into
aad
xor
pusha
movzwl
cmp
sbb
and
mov
xor
cli
jnp,pn
add
repz
sbb
mov
repz
add
mov
and
or
test
sub
pusha
lcall
push
and
je
cs
dec
in
addl
imul
bound
add
mov
add
or
movsb
mov
je
inc
cmc
xchg
add
jecxz
cmp
jbe
cmp
jbe
mov
sbb
mov
je
daa
popa
mov
mov
fs
jge
inc
sub
push
sbb
adc
mov
adc
mov
adc
pop
add
repnz
sahf
sub
enter
pavgb
and
mov
sbb
xchg
jg
lahf
xor
lea
pop
push
inc
andl
jge
mov
lock
call
mov
out
adc
mov
xchg
es
adcb
fadds
sarb
sub
ss
xchg
push
dec
js
pop
pop
cmp
mov
sbb
pop
push
xlat
sub
adc
mov
mov
push
xor
stc
fdivrs
cmp
jnp
add
arpl
daa
mov
push
pop
lds
jl
movl
jmp
push
and
dec
sub
jb
pop
out
and
leave
jb
sub
cwtl
sbb
and
push
cmp
cmpb
mov
or
dec
mov
jl
flds
test
mov
cmp
sub
inc
add
test
mov
lock
in
je
adc
lcall
cmp
jb
call
sbb
xchg
fnstenv
mov
lea
cmc
dec
rcr
cmp
call
ja
jae
pop
or
cmp
dec
imul
dec
sbb
sbb
cmp
rcll
repnz
push
adc
and
sub
insb
pop
add
fwait
cmp
popf
jg
fwait
call
movsb
xchg
lea
inc
imul
cmp
jg
sub
xchg
jb
add
rorl
adc
mov
mov
mov
setl
mov
mov
les
mov
xchg
cld
push
pop
dec
adc
lea
loop
lret
test
rcrb
lea
fsubs
mov
iret
jge
push
lea
sbb
xor
sbb
test
roll
add
inc
call
pusha
insb
xor
arpl
test
outsb
test
fldl2t
lods
das
xchg
les
lods
xorl
adc
aam
jl
inc
xor
push
out
aam
insb
pop
inc
imul
push
je
cmp
shrb
out
mov
xor
add
inc
jecxz
outsl
push
pop
ds
push
sbb
and
push
dec
dec
mov
test
fstpl
insl
cmpsb
add
dec
arpl
jns
nop
push
dec
jo
push
jmp
loopne
data16
xchg
pop
cmp
jne
mov
sub
xor
movsb
fnstenv
mov
push
pop
cmp
xorl
js
jb
pop
ficomps
cltd
in
xorl
pop
js
pop
mov
mov
xor
mov
pop
cmp
outsb
rcl
ljmp
or
loope
loopne
mov
scas
inc
xor
push
dec
and
sbb
mov
xor
or
cmp
push
pop
pusha
mov
pop
mov
loope
and
das
and
jns
and
push
jp
xchg
faddl
loopne
loope
and
or
mov
and
rclb
mov
mov
mov
out
insb
and
jmp
or
divb
js
sbb
repz
aam
sub
cld
repnz
dec
int
jp
cs
jo
rol
jp
or
aas
or
and
cmc
sti
cmpsl
and
cmp
cmp
cmp
pop
jl
cmp
add
or
clc
add
testb
pushf
lods
sbb
mov
xchg
pop
mov
or
es
add
inc
popa
or
xorb
pop
mov
popa
js
jb
out
test
cs
cli
lds
xor
or
lock
sub
dec
push
mov
dec
jmp
pop
lock
aam
dec
jmp
push
jecxz
enter
fstpt
outsb
mov
jge
adc
icebp
mov
dec
pop
loop
or
pop
in
or
cwtl
jae
aas
mov
lcall
push
cwtl
jns
sbb
je
test
addr16
or
adc
adc
movsb
adc
inc
cmp
fcomps
ljmp
push
xchg
rcrb
or
cmpsb
clc
dec
push
add
mov
sti
rol
jle
jmp
pop
popa
inc
mov
sub
inc
popf
dec
add
bound
push
fcoml
xor
mov
pop
push
mov
push
xchg
mov
fisubrl
mov
movl
cmpsb
cs
ja
inc
add
pop
and
push
push
dec
jne
jmp
xchg
fimuls
pop
pop
or
inc
das
and
testb
add
push
jbe
pop
and
cmp
inc
add
mov
push
incl
clc
add
je,pt
ret
or
push
inc
pop
aam
xor
je
sti
mov
lods
sbb
out
pop
bound
dec
inc
cmp
jb
pop
cmp
and
jle
pop
or
data16
push
scas
scas
add
pop
push
pop
fiadds
push
dec
push
sub
dec
and
push
in
int
mov
scas
ljmp
mov
jnp
mov
mov
adc
jo
inc
ret
add
adc
cmp
jae
subl
or
scas
pusha
pop
push
and
adc
mov
cmpsb
cmp
lret
mov
and
test
and
stos
push
dec
dec
lods
cmpl
push
sbb
push
jmp
mov
or
js
push
mov
jo
push
mov
popf
mov
adc
test
push
mov
inc
push
sbb
ds
sub
mov
loopne
shl
in
ja
adc
push
loope
adc
add
in
and
xchg
dec
rorb
cmp
push
enter
inc
xchg
xchg
stos
lock
imul
fbstp
movd
jno
fimull
adc
notl
add
lods
sti
inc
sub
jl
repz
sti
mov
pop
fwait
and
inc
mov
jmp
aaa
std
cmp
mov
cs
scas
dec
mov
xor
pop
add
push
push
add
gs
cli
push
int3
outsb
or
inc
data16
pop
add
mov
stos
sarb
mov
or
es
ja
pop
push
es
mov
and
xor
xor
sub
pop
push
cmpsl
test
cmp
outsb
xor
jno
and
ret
push
outsl
dec
or
lahf
xor
rolb
jp
and
and
xchg
mov
mov
mov
ja
arpl
mov
jmp
add
shl
xchg
cwtl
sbb
cmp
aad
ret
add
dec
and
mov
adcl
push
mov
add
add
pushl
je
sbb
add
inc
hlt
add
push
xor
addb
out
rorl
jl
push
orb
mov
add
cld
out
sarl
mov
imulb
js
inc
cmp
mov
inc
or
sbb
push
cmp
imul
mov
add
lock
push
mov
outsl
inc
ss
jne
mov
cmp
xchg
loope
xor
lret
add
lock
adcb
test
ss
add
inc
add
out
stos
nop
push
lret
adc
xchg
aaa
add
xor
xor
mov
je
mov
and
mov
mov
mov
jb
cmp
inc
cwtl
in
pop
or
adc
add
fstpt
divl
jmp
ret
out
or
dec
data16
xchg
mov
in
aas
push
push
mov
fildl
fadds
andl
add
shrb
lods
fdivs
mov
adc
jbe
inc
cmp
cmp
ja
mov
stos
movsb
clc
adc
dec
dec
test
pop
push
adc
lcall
clc
add
in
hlt
call
mov
xor
out
je
dec
inc
scas
cmp
inc
ficomps
loop
xorl
xor
ljmp
add
cmp
mov
jmp
mov
sarb
jae
lea
ljmp
cmp
xchg
repz
in
mov
popf
and
pop
gs
subb
es
jmp
stos
in
test
xchg
jmp
sub
in
adc
xchg
shrb
cmpl
pextrw
mov
inc
rorl
jo
push
fs
pop
fucomip
xchg
scas
jns
hlt
dec
add
xchg
mov
dec
mov
xchg
adc
call
addl
push
dec
push
lds
in
sub
sbbl
add
and
mov
add
addb
jo
or
lret
inc
adc
sub
insl
mov
filds
or
cmp
add
leave
enter
cwtl
pop
or
cmp
movsl
or
cs
repz
les
fcomps
mov
les
push
sub
mov
add
lea
nop
test
dec
test
fcompl
xor
shr
add
test
scas
push
cs
es
jae
push
and
mov
pop
inc
hlt
add
shrl
dec
mov
or
das
pop
ret
xor
mov
sbb
adc
pop
loopne
rorl
push
dec
sub
enter
add
jo
je
add
push
loope
push
jmp
xor
dec
loope
dec
lods
pop
loopne
jae
lret
or
xchg
in
push
pop
cmp
xchg
sub
fmuls
movsl
stos
adc
popa
pop
push
cmp
fwait
xchg
push
sub
cmp
or
push
in
add
test
dec
ret
mov
lods
cld
and
arpl
sub
cltd
and
xorl
sarl
mov
lock
mov
cmp
cmpb
xor
loop
or
add
test
and
jne
rorb
imul
pusha
sub
pop
jecxz
mov
mov
loopne
dec
adc
xor
sbb
adc
lea
push
jmp
aam
shl
lods
es
pop
rorb
add
xchg
cmp
lcall
das
inc
enter
es
ja
adc
lret
adc
sarl
in
jnp
cmp
xor
outsl
cmpsb
push
push
inc
pop
es
cmp
lock
clc
jbe
sub
jnp
mov
dec
clc
jne
mov
push
test
mov
aaa
and
add
aaa
sub
lea
sbb
sub
cmp
stos
es
aam
dec
out
dec
jl
add
xchg
mov
hlt
sbb
jb
dec
fdivs
inc
pop
fmull
cmp
fcomps
mov
ss
adc
jae
subl
sbb
inc
pop
jl
fxtract
jne
push
js
clc
shl
fistl
cld
loopne
fnstenv
jns
add
mov
mov
inc
push
loope
jbe
in
add
or
adc
lock
cld
clc
divb
ror
pushl
cmp
sbb
xchg
ds
lods
or
notl
into
orl
data16
jbe
in
or
xor
rol
xchg
lahf
out
pop
fiadds
add
cmp
push
mov
jmp
hlt
jle
iret
je
push
mov
push
mov
xchg
or
ds
mov
mov
jb
pusha
lea
add
cmp
leave
push
fadds
nop
adc
rolb
lahf
add
mov
fldenv
int
sbb
daa
pushf
mov
add
lods
mov
add
fdivs
leave
xor
mov
rorl
pushf
mov
jne
cld
mov
sarb
lea
jbe
push
cmp
adc
mov
sub
jge
jbe
push
sub
dec
hlt
xchg
adc
jg
cmp
mov
mov
add
lret
add
sbb
aas
out
imul
inc
jne
sub
das
push
inc
fidivl
inc
jmp
add
rol
adc
lods
repnz
push
insb
xor
dec
push
and
mov
mov
adc
adc
scas
sbb
push
loopne
js
inc
add
lods
push
cmpsl
movsl
lods
add
or
or
mov
mov
or
loope
jp
xchg
cmp
mov
lods
ja
pop
push
movzbl
aaa
ret
push
call
or
movl
stos
inc
in
dec
jne,pn
je
xchg
ljmp
cmp
mov
movsl
xchg
push
pop
push
or
or
add
mul
seto
or
or
jbe
sub
push
mov
lret
out
adc
lret
shlb
shlb
inc
enter
ds
push
pusha
and
je
fdivrp
loop
mov
aad
xor
movsb
xchg
cmp
or
mov
iret
lret
pop
mov
stos
jmp
xor
lret
jge
mov
mov
jo
hlt
mov
stos
and
push
ja
push
inc
test
dec
lds
push
inc
test
sahf
hlt
cmc
mov
shl
dec
cmp
lods
mov
inc
and
test
sarl
cmpb
mov
fsubrs
mov
push
addb
xchg
inc
outsl
es
jmp
insb
and
add
ja
jmp
jg
mov
cmpsl
push
push
or
and
pop
cmp
push
mov
jp
mov
or
ret
push
dec
sub
and
xchg
xor
lock
adc
imul
ficomps
dec
cmp
xchg
fiadds
mov
xchg
mov
lea
inc
cmp
ljmp
je
xor
xchg
xchg
cmp
inc
cmp
pusha
push
jo
push
daa
sti
enter
and
cs
pop
in
jle
mov
or
jb
les
imul
dec
lgdtl
add
mov
and
sub
je
cld
scas
inc
fistpll
add
adc
pop
inc
jo
dec
jl
addl
lds
inc
in
or
aaa
push
hlt
iret
and
push
test
enter
dec
lret
ja
sahf
mov
fistpl
inc
xor
and
mov
rcrb
and
daa
in
add
adc
add
mov
jg
ss
lods
loopne
add
sbb
ljmp
lcall
sub
pop
pop
les
mov
gs
jp
push
cld
jmp
pop
repnz
popa
pop
add
jo
cmpsb
loopne
inc
push
xorl
cli
inc
scas
xor
cli
mov
pop
sar
mov
data16
add
sbb
fcoms
ret
jbe
or
imul
js
cmpsl
cmpsl
push
call
hlt
int3
gs
or
cmp
sahf
mov
rcll
call
in
jl
cmp
jmp
clc
mov
nop
movsb
or
jl
dec
adc
enter
inc
jl
insl
call
mov
cmpsb
xor
out
out
sti
or
mov
clc
add
clc
scas
pusha
adc
pop
mov
pusha
rorl
add
icebp
daa
pop
jo
or
repz
jno
add
sbb
or
pushf
ja
lret
sbbl
sti
das
mov
bound
and
add
in
in
cmp
out
xchg
lea
or
sub
iret
popf
rol
test
jmp
mov
loopne
or
mov
scas
adc
pcmpeqw
fsub
mov
pushl
movsl
add
or
cltd
xor
cltd
imul
loope
or
test
pop
push
and
shl
and
jmp
shrb
jbe
aaa
cmp
cmp
int3
fbld
iret
test
adc
xor
xlat
dec
neg
test
popf
xor
push
cld
mov
sub
fwait
test
faddp
sahf
rorb
jge
or
or
mov
cmp
jb
sbb
fimull
xchg
mov
roll
int
mov
push
dec
add
rorb
in
das
mov
jbe
in
daa
and
jmp
cmp
insb
loope
js
fadds
dec
andl
jecxz
fdivs
imulb
mov
fistps
or
je
dec
adc
push
roll
lea
jns
jle
mov
std
jbe
into
test
add
icebp
shlb
or
push
adc
jb
pop
fisubs
push
sub
lcall
lock
xchg
rclb
addr16
pop
sahf
jmp
mov
dec
push
lahf
int3
cmp
jae
sub
loopne
jg
mov
adc
int3
adc
ljmp
dec
mov
cmc
adc
xchg
push
xchg
shlb
fstpt
cmc
push
inc
ja
add
pusha
xor
cmp
sub
test
mov
dec
dec
stos
incb
mov
push
dec
loope
xor
add
ss
or
sti
sti
jmp
pop
or
jae
dec
jo
xor
fsubp
xchg
cmp
lea
sub
adc
int
cltd
xor
std
xchg
push
insb
int3
add
in
mov
add
add
testb
leave
cld
jb,pn
push
mov
xor
insl
enter
push
mov
add
and
fildl
cmp
add
fnstsw
incb
add
xor
and
sbb
scas
add
popa
sbb
lea
pop
test
roll
insb
mov
je
aaa
pop
mov
insl
push
sbb
push
addr16
popa
fidivl
jle
cmpl
adc
pop
mov
xor
jp
dec
or
add
loop
push
or
or
add
xchg
jle
or
xor
push
jmp
les
daa
push
pushf
dec
cmp
fimuls
inc
cmp
fsubr
add
aam
push
lods
mov
pop
pushl
jmp
pop
mov
pop
lods
or
inc
out
cld
inc
push
leave
push
inc
adc
hlt
fisubl
mov
ret
outsb
testb
push
out
push
push
mov
aas
bnd
mov
test
cmp
jbe
cld
or
add
jb
push
jae
lea
push
add
les
cmp
add
xchg
hlt
sahf
test
lahf
stos
push
and
divl
push
stos
aaa
daa
fs
or
or
adc
nop
pushf
adc
daa
inc
cwtl
lods
mov
sbb
or
inc
popf
jbe
leave
push
shlb
cmp
stos
out
das
push
cmp
jae
inc
jmp
push
or
mov
add
jge
mov
faddp
imul
test
and
inc
xchg
add
dec
pop
dec
fcom
sub
mov
or
push
jmp
lods
push
mov
loope
adc
ror
int
orb
and
clc
test
or
fimull
movntps
mov
pop
add
mov
test
push
pop
pusha
in
cmp
or
es
or
sbb
jbe
or
add
rcrb
push
std
cmpb
leave
mov
push
push
push
mov
xchg
mov
mov
in
pop
pop
aaa
adc
dec
adc
pop
mov
mov
or
or
xchg
test
std
arpl
mov
cmpsb
lcall
pop
nop
xlat
or
or
ret
xchg
cmp
imul
fstps
std
pushl
push
and
adc
cld
je
cmp
clc
mov
jb
adc
and
add
cmpb
push
push
or
or
xor
sbb
sub
mov
pop
jecxz
lret
inc
loopne
jo,pt
push
add
sub
and
data16
cmp
jmp
pop
and
push
pop
push
inc
or
add
mov
jbe
adc
aam
imul
or
adc
jmp
mov
leave
mov
shlb
lea
cli
ja
cmpb
adc
ret
push
xor
cmp
jl
inc
pop
dec
pusha
sub
aaa
into
cwtl
mov
jno
sbb
mov
xorl
ja
ret
je
xchg
push
addr16
rcrb
lea
shlb
pusha
inc
pop
push
xlat
popl
pop
in
push
push
test
xor
mov
int3
sub
adc
sbb
add
jns
jns
gs
mov
dec
add
cmp
mov
aad
adc
jbe
dec
cmp
jge
cmp
and
pop
sub
cmp
ja
stos
xchg
cmp
std
push
ret
pop
call
xor
shl
dec
cmp
lea
jl
mov
mov
mov
inc
sub
dec
jns
mov
lods
jl
push
pop
repz
jne
jmp
loopne
rorl
es
sahf
pop
dec
mov
adc
lea
xchg
adc
sbb
orl
mov
psubusb
adc
xor
add
cmp
jbe
pop
and
leave
or
pop
or
add
dec
push
sub
nop
pusha
jae
lock
cld
xor
sbb
jge
cwtl
or
mov
mov
sbb
adc
flds
or
cmovbe
roll
xchg
cmp
fidivrl
or
les
adc
mov
dec
pusha
fstl
push
insl
adc
in
adc
jmp
jo
in
dec
pop
add
inc
in
pop
loopne
mov
mov
cmp
lock
test
jge
inc
sbb
inc
lret
inc
lock
sarb
test
mov
dec
pop
loope
or
or
add
or
mov
mov
add
dec
mov
pop
xchg
repnz
movsb
sbbb
leave
ret
rcrb
mov
loope
dec
mov
jge
xor
push
jg
popa
add
sub
mov
add
lock
adc
fbld
js
jne
and
fs
adc
adc
je
or
add
sub
push
sub
adc
push
pop
in
and
xchg
push
js
jle
arpl
adc
add
jp
loop
loopne
pop
cmp
and
fsubs
jnp
adc
roll
jl
das
fiadds
add
mov
lock
cld
iret
cmp
in
adc
fdivrl
jmp
mov
adc
loopne
cmpsb
mov
fst
push
xchg
std
into
push
xchg
scas
test
add
push
movsb
add
mov
rorl
jnp
jae
dec
mov
rorl
xchg
push
push
arpl
cmpsb
adc
xor
call
mov
ss
ss
sub
jns
mov
xor
in
xrelease
push
divl
mov
roll
jns
cs
sub
add
jns
test
push
mov
push
addl
aas
inc
push
push
inc
or
cmp
enter
cmp
jbe
xor
mov
push
cmpsl
fcmovb
mov
or
bound
mov
test
or
pop
lcall
clc
push
ja
add
push
or
enter
jge
cli
test
pushf
sbb
push
pop
ss
add
pop
ret
push
push
cmp
pop
sub
push
pop
or
rcll
add
pop
or
fdivrs
je
clc
subl
xchg
xlat
mov
xchg
clc
subb
bound
popl
daa
pop
adc
loopne
leave
add
dec
mov
jnp
fsubr
pop
push
js
cs
call
push
in
rorb
arpl
adc
or
dec
mov
testl
mov
adc
cmc
mov
adc
pop
pop
ret
push
mov
rorl
std
pop
mov
add
mov
pop
sub
pushf
jg
test
call
rol
mov
sbb
mov
add
lods
mov
pop
dec
lahf
cs
fdivs
pop
cli
adc
xor
int
mov
cmpsl
xor
dec
pop
aam
inc
push
push
dec
popa
add
fsubrs
ljmp
scas
les
lock
xchg
lds
mov
mov
add
jge
jp
add
and
mov
or
shlb
clc
sub
jmp
xor
and
or
into
or
nop
mov
mov
clc
inc
or
int3
push
arpl
mov
and
dec
pop
xchg
and
xchg
add
cld
out
push
iret
andl
lret
push
movsb
mov
xorl
cmp
orl
mov
mov
cld
nop
xchg
je
cmpl
adc
clc
xchg
and
ss
add
mov
rorb
sub
cmp
adc
xchg
orl
nop
xchg
clc
add
cmp
js
sbb
rcrl
mov
sbb
shl
out
std
or
adc
adc
inc
inc
lcall
shrl
call
mov
paddsw
jne
arpl
lock
lret
pop
push
pop
imul
cld
ficompl
outsl
sub
iret
or
adc
orb
pop
or
and
cmc
jmp
xchg
movsb
mov
test
or
call
loopne
adc
pusha
and
jae
movsb
add
xchg
jge
mov
std
mov
inc
or
inc
movsb
sub
mov
push
stos
cmpsl
andl
mov
mov
mov
push
mov
xchg
adc
pop
pop
fmuls
sbb
fstl
jns
push
jns
inc
sub
loopne
push
xchg
mov
add
jno
mov
test
sbb
shll
out
js
cmp
hlt
xor
fstpl
enter
aas
ret
lea
rorb
pop
test
push
inc
jle
and
test
mov
jno
sbb
adc
imul
lar
ds
test
mov
into
sbbl
push
jae
add
inc
mov
aad
scas
xor
sbb
push
push
mov
add
push
pop
xchg
or
fnstenv
outsb
dec
clc
cs
ret
push
cmp
test
or
sbb
pop
cwtl
mov
lock
fdivr
push
mov
jle
es
imul
sbb
add
sbb
loope
cmp
cmp
clc
or
lds
sub
pusha
push
scas
pusha
fsts
adc
push
sub
jp
addr16
sbb
es
sub
call
hlt
adc
jl
jb
sarb
loope
aaa
flds
pop
xor
pop
or
add
pop
test
and
and
cmp
cwtl
or
adc
dec
ficoml
xor
jne
xor
out
and
dec
push
push
jle
outsb
fs
js
pop
inc
lods
jbe
not
jle
inc
pop
rorb
inc
inc
scas
and
xchg
pop
pop
addl
test
sub
dec
dec
scas
movsb
dec
adc
cmpsb
imul
push
sbb
loopne
xor
xchg
adc
push
or
sahf
mov
out
xchg
push
inc
loop
lret
push
add
inc
add
or
cmp
into
testb
xorl
dec
sbb
jne
sbb
add
jnp
ljmp
mov
cli
cs
push
push
xchg
mov
je
ficoms
fsubrs
pop
shlb
jnp
add
xor
pop
iret
and
ret
dec
cld
lret
mov
cmp
jbe
into
leave
add
sub
or
mov
jp
aam
sbb
shll
cmp
sub
fcoml
sarb
mov
inc
mov
loopne
je
nop
dec
sti
out
sti
mov
call
push
and
cltd
loopne
and
jne
push
push
insl
add
pushf
loop
dec
sbb
test
idivb
dec
sahf
mov
das
aad
aad
insl
rcll
push
and
nop
mov
in
mov
jne
inc
ljmp
mov
jae
adc
dec
add
das
add
mov
enter
fidivl
mov
xor
inc
movsb
add
pop
inc
dec
loopne
cltd
mov
dec
add
cld
lods
cmp
xchg
mov
fcoml
ljmp
push
pop
js
push
push
cmc
je
aad
test
imul
push
clc
pop
or
add
ret
lea
cmpsl
pop
mov
mov
mov
daa
inc
pop
inc
adc
je
fldl
rcrb
outsb
add
sbb
dec
add
pop
clc
lea
ret
and
jl
in
and
fistl
cs
mov
dec
fiaddl
pop
addr16
ja
lock
mov
aaa
jmp
loope
and
add
mov
or
aam
xchg
decl
adc
rcrl
call
inc
mov
sub
inc
dec
loop
sbb
mov
mov
sbb
loope
cltd
or
mov
out
sti
and
or
ss
xor
sbb
jge
insb
and
repz
inc
sbb
xor
dec
daa
in
call
pop
daa
fnsave
push
cwtl
scas
mov
push
inc
lret
pop
test
andb
add
or
mov
and
or
pop
add
or
mov
add
lahf
rolb
jae
dec
xor
add
lock
or
sti
mov
mov
push
jb
aad
mov
stos
add
hlt
loope
mov
push
mov
cmp
or
pop
push
nop
int
lret
sbb
sbb
icebp
add
mov
mov
inc
in
sub
mov
add
and
mov
arpl
fiadds
push
push
jnp
cld
daa
adc
sbb
je
sbb
mov
xorl
push
xchg
loope
jb
or
pushf
push
subl
out
jb
mov
xor
out
test
pusha
ds
sub
push
xchg
lret
fsub
int3
aas
icebp
movsb
loopne
in
fcompl
testb
in
pop
es
adc
jg
pushf
repnz
pusha
mov
mov
mov
push
sbb
loopne
test
enter
sti
es
xor
jb
jge
stos
mov
sub
popf
insb
mov
fcompl
in
std
into
insl
daa
jo
and
fisubrs
add
enter
clc
cld
mov
xchg
dec
test
xor
adc
mov
in
cmpsb
mov
scas
popf
addb
mov
xchg
lret
sbb
add
push
dec
sub
sbb
add
and
sub
dec
in
jb
or
daa
xchg
xchg
lret
cmp
inc
pushf
push
dec
sub
or
test
sbb
jp
adc
push
pop
stc
dec
pop
dec
mov
mov
pop
push
or
int3
pop
repnz
xor
int3
rorb
mov
mov
pop
push
or
sahf
fsubrs
dec
aam
xchg
ficoms
push
movl
add
push
popa
jecxz
pop
mov
pop
push
pushf
es
roll
jo
push
add
cmp
imul
ret
lods
mov
jmp
sti
and
ror
orb
int3
enter
or
push
pop
push
rorl
add
nop
dec
ficoml
xorb
nop
inc
mov
jg
fs
inc
push
cmp
inc
inc
cmp
cmp
nop
cmp
sub
in
inc
and
sbb
nop
inc
push
adc
or
fadds
cmp
or
aad
inc
jbe
push
rorl
add
sub
xor
sub
mov
add
cmp
orl
or
push
pop
in
adc
cmp
adc
xor
rol
dec
add
in
add
and
inc
jbe
sub
sbb
adc
or
sub
out
data16
pop
addb
jmp
and
nop
push
dec
and
std
shrb
addl
jp
lods
cmp
jecxz
cmp
adc
imul
imul
push
xor
sbb
fbld
adc
pushl
bound
pushl
loop
pop
sbb
out
push
pop
jle
pop
push
push
cmp
pop
scas
inc
mov
mov
mov
cmp
add
dec
and
inc
or
jmp
lea
push
enter
adc
movsb
add
jo
loope
xchg
add
add
push
popf
mov
inc
stos
dec
ljmp
mov
mov
xor
pop
or
in
add
add
push
or
add
xor
push
inc
mov
push
fbstp
sub
or
sub
outsl
add
cmp
pause
push
gs
sub
mov
shll
jo
sub
subb
push
sbb
adcl
add
loopne
jbe
fwait
and
mov
push
or
shlb
push
and
dec
out
in
shlb
add
and
ss
mov
lods
ret
or
push
fcmovbe
inc
ret
ss
scas
mov
inc
add
test
add
pop
fstpl
mov
fwait
mov
lock
push
pop
inc
lock
icebp
adc
xor
push
dec
out
mov
pushf
and
push
cmp
jmp
movsl
sbb
shlb
rcrb
mov
cmp
das
jbe
jecxz
or
jns
cld
and
sub
cwtl
pop
push
adc
dec
js
xor
cmp
sbb
das
movsb
xchg
sub
inc
adc
cld
ret
jb
lret
fnsave
xor
test
test
stos
push
ss
push
insb
leave
xchg
mov
inc
adc
stc
add
sar
cmp
sbbb
sbb
lcall
mov
or
in
inc
xchg
push
loope
pop
add
adc
sub
or
ss
or
jbe
kmovw
adcb
std
inc
adc
add
jne
into
addr16
je
call
push
cmp
jae
push
imul
jmp
mov
cld
test
adc
xchg
stos
jmp
sub
inc
adc
pop
je
mov
mov
push
test
jecxz
push
out
sub
lea
test
push
sub
jl
sub
add
ja
mov
rolb
cs
dec
mull
sub
mov
pop
pop
in
dec
inc
and
adc
sub
and
or
pusha
cmpl
fisttpll
fs
cmp
adc
inc
dec
fwait
mov
pop
cli
inc
or
fisttpl
stc
adc
xor
mov
xchg
push
pusha
std
fiaddl
add
fisttpl
and
inc
mov
dec
lea
cmp
test
mov
add
or
add
sti
xchg
or
xor
clc
and
into
repz
add
push
js
sub
out
adc
gs
ret
adcb
xor
out
outsl
mov
dec
cmp
jmp
shll
adc
aaa
lods
sub
mov
test
seto
fisttpl
push
add
out
es
xor
fidivl
ja
jae
and
lahf
mov
jp
addl
inc
outsl
xchg
push
mov
xchg
lods
stc
push
pop
cmp
add
stos
popa
dec
js
and
sbb
mov
push
mov
xor
mov
mov
pop
mov
cmp
orb
aas
les
rcr
pop
mov
or
lods
not
scas
rorb
or
sbb
mov
aas
xchg
cmpb
repnz
pop
push
sub
xor
xor
jb
dec
sbbl
pop
xchg
xor
jle
push
jecxz
aad
setl
int3
das
pusha
andl
pushl
pop
jmp
lcall
in
rclb
repz
inc
pop
push
loop
sub
adc
das
mov
loopne
int3
and
push
pop
lret
sysenter
rolb
sti
xor
push
loopne
add
mov
sbb
mov
pop
pop
mov
or
or
pusha
push
or
test
or
pop
scas
frstor
pop
inc
and
add
dec
outsl
sahf
aad
push
xchg
add
mov
sbb
xor
or
xchg
fstps
out
jae
cwtl
mov
add
cld
push
ret
inc
push
jmp
movb
and
sbb
or
stc
inc
js
push
jp
mov
mov
inc
and
pop
or
cmc
mov
aad
shll
and
mov
mov
aas
fsub
test
jg
lret
jmp
inc
cmp
dec
andl
int3
pop
lods
out
fistps
or
jp
orl
scas
cmpl
and
insb
sub
or
cmp
dec
adc
testl
addr16
nop
loopne
test
out
fisubrs
out
es
daa
mov
mov
push
mov
popl
mov
add
mov
cld
stc
lcall
or
mov
ret
and
lock
lahf
aaa
mov
and
sub
cmp
inc
ret
sub
into
push
hlt
movsl
adc
inc
adc
dec
pop
fldcw
inc
xchg
or
inc
xor
daa
adc
xchg
or
push
push
or
shll
adc
pop
cmp
xlat
lods
push
push
xchg
lock
ds
loope
and
mov
cmpsl
repnz
orl
mov
dec
mov
inc
and
or
or
cmp
sbb
cmp
insb
xor
dec
and
and
mov
cmp
sbb
enter
sbb
mov
sub
jp
or
pop
shl
movsl
lock
rclb
mov
jno
lods
add
jbe
xorb
xchg
sbb
mov
mov
arpl
rclb
icebp
or
lds
insl
xchg
or
lock
xchg
inc
inc
int3
test
insl
adc
adc
pushf
push
or
rclb
sbb
enter
xchg
cmp
push
pop
jl
push
add
lock
in
repz
adc
movzbl
jmp
out
cmp
repz
repnz
push
nop
mov
push
icebp
fs
mov
enter
stc
cld
mov
push
mov
movb
or
add
cld
and
or
jne
fadds
hlt
mov
pop
nop
mov
nop
sbb
aaa
cmp
mov
add
aas
mov
mov
imulb
add
cmp
push
push
mov
sbb
imul
jne
inc
int
adc
rclb
mov
adc
nop
enter
mov
sbb
push
cltd
mov
cmp
mov
xor
jns
in
fcmovnb
lea
xlat
fisubs
pop
in
iret
and
pop
mov
aad
add
mov
and
popa
dec
mov
jbe
jle
mov
jmp
jne
dec
aam
pushf
popf
sub
pop
or
pusha
push
jmp
movsb
loopne
push
cmp
dec
pop
and
rcrb
cli
adc
jo
pop
jno
jnp
popa
inc
cmp
mov
xor
pop
loopne
sarl
andb
or
inc
push
mov
cld
add
sbbl
lret
xor
jge
loopne
or
mov
push
adc
jmp
inc
popf
in
in
loope
adc
add
addr16
adc
push
sub
addr16
dec
sbb
push
mov
add
adc
mov
mov
in
mov
outsl
popf
mov
repz
adc
shrl
mov
jmp
mov
add
test
inc
mov
lock
push
xor
dec
push
je
dec
jne
rorl
sbb
clc
adc
dec
xchg
mov
mov
cmp
sub
adc
lock
mull
ja
and
push
push
jmp
cmp
mov
shlb
sub
daa
int
outsl
xor
xor
icebp
inc
daa
or
dec
mov
pusha
or
cmp
ja
aad
push
pop
or
aaa
cmp
xchg
imul
insb
sub
fstl
cs
jge
and
inc
sub
push
rolb
shlb
pop
dec
movsl
sub
sub
add
jnp
mov
addr16
ja
push
fisttpll
sub
xor
push
push
or
inc
or
inc
mov
movb
int3
or
sti
xchg
adc
lcall
adc
mov
inc
xchg
ret
and
mov
add
nop
xor
mov
and
sub
mov
xchg
js
sub
or
xor
clts
in
jb
jb
pop
into
or
sub
stc
add
add
or
ja
test
test
icebp
movd
inc
sub
sti
je
mov
pusha
xor
insl
inc
testl
iret
imull
imul
and
test
fdivl
or
cld
int
fwait
push
popa
adc
shrb
pop
add
and
inc
push
xchg
sti
dec
sub
lcall
cmp
test
push
pop
pop
add
pusha
push
gs
and
mov
pop
push
xor
sub
js
mov
leave
jl
cmp
test
inc
cs
xchg
jbe
aam
fs
and
sub
sbb
push
sub
inc
xor
sub
movb
mov
mov
push
inc
push
and
cmpsl
shl
pop
cltd
imul
imul
addb
add
lea
mov
jmp
cmp
jae
inc
mov
je
push
out
inc
in
xchg
and
inc
lret
andl
dec
jns
fisttpll
or
jle
sub
xor
jbe
sbb
xchg
je
fs
or
sbb
cltd
xor
jle
xchg
inc
dec
mov
sbb
in
cwtl
popa
pop
pop
and
adc
insb
sbbl
adc
loop
scas
xchg
and
push
nop
ret
push
push
xor
xchg
xor
aas
mov
inc
dec
xchg
or
adc
mov
push
mov
pop
mov
cmpsl
xchg
rorl
mov
xchg
shld
dec
dec
in
lcall
lcall
insb
mov
push
movb
inc
mov
in
insb
adc
jge
lcall
and
aam
shl
lock
fcmovb
jne
pop
sbb
jge
dec
jo
xor
dec
push
push
push
lea
fdiv
jle
add
loopne
xchg
xor
dec
xlat
testl
xchg
rorl
xor
inc
xor
ss
loopne
xor
xor
add
inc
stos
xchg
pop
lcall
adc
pop
rcl
dec
mov
or
jne
lods
add
insb
in
jge
sub
scas
add
inc
mov
pop
dec
jo
and
outsb
inc
stc
inc
inc
xchg
icebp
repz
fdivrl
sbb
aad
jo
loopne
pop
jmp
push
cwtl
xorl
sbb
fsub
ret
mov
xchg
cmpb
xchg
mov
scas
jge
jmp
or
push
xchg
sbb
inc
push
jp
sbb
add
jo
popl
mov
dec
mov
insb
je
jae
lret
inc
loope
push
cwtl
pop
and
cwtl
outsb
xor
or
mov
das
pusha
decl
xchg
xchg
enter
jp
lods
jp
mov
into
xor
sub
mov
jno
out
push
jp
mov
xchg
push
mov
jl
add
mov
je
loopne
fsubrs
rcrb
or
xor
push
lock
adc
jne
cmpl
bound
cs
mov
inc
outsb
add
push
lods
test
nop
push
mov
mov
daa
inc
add
int3
sub
add
lahf
adc
ja
push
loopne
pop
ss
sbb
mov
mov
adc
mov
jns
and
stos
pop
inc
add
and
subb
in
mov
push
sbb
je
mov
fisubs
add
pusha
pop
icebp
sti
jmp
dec
in
mov
ret
adc
cmp
adc
pusha
push
repz
push
cwtl
and
and
push
sbb
movsb
cmp
mov
test
inc
inc
add
pushf
cmp
addr16
mov
sub
add
and
inc
je
fmuls
addb
sbb
mov
push
movsl
cmp
jne
cmp
cmp
xor
sbb
mov
xchg
jne
add
out
jb
xchg
mov
pop
mov
outsl
xor
adc
popa
adc
xor
arpl
loop
cmp
or
fdivrs
sbb
in
ret
clc
push
push
lret
test
in
sbb
je
lea
cmp
mov
mov
mov
nop
pop
push
mov
jo
js
daa
lea
pop
rolb
cmp
call
test
or
jns
pop
and
and
add
lea
mov
int3
ftst
je
inc
stc
jnp
rclb
iret
and
insl
rorl
push
icebp
test
or
sbb
add
lods
ljmp
adc
xchg
xchg
pop
stc
mov
test
dec
fstl
dec
andb
subl
nop
jmp
or
ret
inc
push
inc
sbb
mov
cmpl
jbe
mov
pop
jnp
mov
sbb
pop
pusha
pop
mov
mov
cmp
add
dec
jo
pop
iret
inc
mov
push
push
or
js
inc
daa
test
jae
dec
in
push
pusha
loop
or
js
stc
jo
cmpb
sbb
fs
sbb
sub
fiadds
add
or
mov
outsl
addr16
or
ja
or
or
imul
testb
add
leave
ss
aad
outsl
xor
test
add
call
or
jp
xor
and
xchg
push
cltd
push
xor
scas
loope
mov
cmpsb
mov
lods
test
or
dec
sbb
inc
ret
mov
cmp
dec
mov
cld
in
and
and
sub
int
push
test
add
lods
inc
call
cmp
sub
and
adc
xor
fildll
and
lret
lret
inc
cmp
lret
or
or
sbb
sbb
add
lret
or
xchg
cmp
add
push
outsl
jb
sub
xchg
sbb
push
mov
mov
or
es
testl
popf
mov
fcoms
push
pop
sbb
add
mov
jns
in
adc
pop
pop
mov
fnstcw
push
push
das
and
in
push
push
sub
mov
dec
cmp
aad
arpl
or
push
sbb
mov
cmp
xlat
jbe
adc
fcompl
mov
xor
ret
dec
mov
xchg
and
xchg
int
xor
lds
add
mov
popf
mov
sub
and
add
ja
int
mov
sbb
test
repz
mov
jo
call
adc
jle
aas
push
add
inc
mov
add
push
or
or
mov
add
fimull
push
roll
xor
test
jmp
add
jne
and
fstpl
je
lds
add
fwait
xchg
sbbb
mov
in
popw
repnz
test
hlt
add
sbb
xchg
cmp
and
testb
xor
popa
cmpsb
xor
jbe
mov
ds
push
sub
cmp
dec
push
outsl
or
test
add
cmp
inc
testl
push
xchg
out
mov
adc
xor
cmpsl
dec
out
movsl
mov
pop
js
lret
push
jg
fsubrl
js
aam
and
mov
add
lahf
push
loopne
ss
xor
dec
fisttpl
or
sbb
sti
jne
adc
push
inc
and
sbb
out
dec
and
jb
mov
es
add
sbb
jno
mov
or
dec
dec
repz
pop
pop
or
dec
mov
push
and
sahf
rorb
mov
pop
xor
cmp
jns
enter
push
rcrl
xchg
rolb
mov
adc
fcomps
sub
cltd
insl
loopne
and
shlb
addr16
inc
lock
and
dec
aaa
inc
loope
mov
enter
rclb
cmp
inc
cwtl
insl
enter
xchg
push
and
mov
cmp
out
cmp
sbb
jle
addb
iret
mov
mov
sub
or
sbb
lahf
push
jbe
xor
jnp
push
popf
and
lods
and
pop
and
movsb
mov
cmpb
push
sub
pop
push
fdivrs
shr
pop
ret
fs
sub
fdivrs
fwait
push
loop
dec
je
lods
imul
mov
cltd
nop
test
mov
jo
dec
enter
adcb
or
sbb
cmp
push
les
xor
sbb
mov
sub
jle
pop
xor
xchg
lods
inc
cmc
or
pop
inc
daa
test
lds
jecxz
bound
adc
bound
dec
pusha
mov
or
aas
outsl
pop
add
dec
sub
sbb
stos
jbe
movsb
nop
and
mov
cmp
push
inc
orb
and
mov
adc
and
pusha
imul
out
add
inc
mov
push
pop
sbb
or
loopne
jae
or
es
xor
add
xchg
jno
pop
mov
repnz
or
add
or
pushf
push
stos
les
lock
adc
lea
rcll
ret
clc
and
or
fsub
mov
jne
sti
sbb
aad
ret
cmp
mov
sbb
addps
es
sub
xor
fadds
pop
pop
sub
push
sbb
pusha
sub
add
rcrb
mov
xor
jno
aas
hlt
test
sub
jno
push
pop
dec
mov
inc
test
ret
xor
cmp
mov
and
or
lods
inc
mov
sbb
xor
fwait
push
faddl
sub
call
das
pop
sbb
pop
sub
sub
mov
xchg
and
sbb
jns
gs
adc
inc
sub
jbe
jne
pop
mov
adc
clc
dec
mov
bound
add
jne
out
xor
inc
dec
xor
cmpl
adc
loope
es
sbb
xor
movsl
sbb
loop
sahf
sub
mov
pusha
xor
mov
and
push
sub
repz
inc
pop
shlb
adc
jmp
dec
sbb
cmp
ss
popf
sbb
out
enter
sbb
call
xor
fcoms
or
push
enter
dec
mov
mov
pop
icebp
xor
nop
test
cmp
mov
ret
dec
in
test
push
sub
xor
cmc
mov
inc
push
cmp
xor
xor
push
mov
sub
shlb
fs
shl
lds
push
daa
inc
shlb
ds
xor
jge
sub
lock
xchg
mov
leave
out
repz
cmp
jb
cmc
pushf
mov
nop
mov
scas
adc
mov
lahf
inc
jmp
sbb
jne
inc
in
add
mov
test
sub
xchg
xchg
push
stc
sub
shll
and
stc
sub
inc
orl
lea
push
jge
adc
call
imul
sub
jmp
in
inc
sbb
test
jo
or
loopne
inc
inc
insb
pop
in
or
aad
sbb
mov
jae
mov
test
inc
sub
and
push
inc
popa
cmpl
mov
inc
in
sbb
movsb
fcmovb
xor
mov
ja
cwtl
xchg
add
dec
arpl
jns
jno
push
inc
dec
enter
add
xchg
mov
push
add
pop
loopne
std
mov
sahf
and
inc
push
push
add
or
add
dec
popa
xchg
les
adc
dec
cmp
mov
mov
mov
pushl
xchg
cmpsb
inc
inc
push
fnsave
inc
jge
push
mov
lods
cmc
test
mov
cli
outsb
and
push
mov
and
cmp
mov
test
jne
and
roll
fbstp
aaa
add
cmp
adcl
push
add
push
pushl
aaa
pushl
push
orl
call
lds
jge
mov
inc
xor
add
fmull
sahf
movsl
sbb
xchg
pop
inc
sbb
pop
outsb
xchg
mov
in
add
cmp
orl
adc
adc
dec
cmpsl
je
inc
xor
dec
xchg
adc
pop
ljmp
xchg
pop
out
es
or
sbb
repz
enter
jb
dec
daa
or
pop
sub
or
sbb
xchg
or
or
or
and
loopne
shl
dec
or
xor
scas
icebp
lods
push
data16
and
adc
ud0
jbe
movsb
sbb
pushl
mov
ljmp
adc
mov
outsl
mov
add
add
cmp
inc
lods
jp
adc
xor
enter
cld
adc
adc
popf
jmp
or
and
movsb
lea
inc
adc
sbb
movsl
xor
adc
mov
loop
mov
addr16
push
popf
rcrb
mov
mov
in
adcl
fsubs
cmpl
outsl
adc
leave
and
enter
pop
repnz
lods
std
sbbb
and
lcall
mov
mov
test
inc
dec
pop
mov
jns
sub
add
xor
sub
xchg
pushf
mov
dec
imul
sub
lods
add
test
arpl
imul
insb
jne
xchg
sarl
ss
add
cli
or
xchg
dec
mov
lret
lret
adcb
xchg
jbe
pop
test
jecxz
or
mov
movsl
ja
mov
adc
push
shll
das
lock
add
pop
aad
dec
inc
sti
mov
lods
dec
mov
mov
pop
pop
cmp
xorb
rorb
jmp
cmpsb
and
or
sub
inc
and
orl
sub
mull
enter
add
iret
xor
mov
movsb
or
ss
pop
sub
sbbl
rcll
add
cmp
dec
sbb
sarl
mov
cmp
cmpb
fdivrs
pushf
mov
lods
sub
mov
mov
jae
push
loopne
sbb
cmp
les
jmp
sbb
in
push
sarb
xor
or
push
xor
leave
push
je
and
xchg
push
inc
pusha
enter
push
mov
lahf
sahf
das
inc
dec
xchg
test
outsb
sub
fwait
test
push
inc
xchg
dec
sub
xor
orl
arpl
mov
scas
lock
push
subl
aaa
xchg
movsl
pop
cmp
cmp
mov
jb
in
xor
inc
xchg
mov
jo
rcll
imul
daa
or
and
sub
inc
jmp
lret
je
xor
mov
xlat
jmp
mov
push
popf
mov
imul
incl
jnp
bound
xor
icebp
and
dec
pop
pop
imul
sbb
mov
mov
cmp
or
enter
repnz
dec
andl
sub
cmp
mov
add
mov
inc
sub
mov
dec
lret
pop
inc
int3
sub
dec
arpl
push
cmp
jp
jbe
xor
mov
fcmovu
xor
lea
jno
mov
mov
dec
or
cmp
cmp
fsubs
xor
sbb
jmp
xchg
cmpsb
push
sub
fs
es
nop
dec
sub
push
rol
or
pop
push
mov
mov
and
mov
mov
pop
push
push
mov
xchg
xchg
mov
pop
movsl
iret
sub
je
jns
test
das
or
mov
jns
push
adc
int3
pop
jne
sbb
lcall
or
mov
test
mov
rorl
dec
adc
arpl
push
sub
cld
rorl
out
dec
outsl
pop
nop
or
jmp
sbb
xor
std
lds
icebp
push
lea
stc
ss
adc
sub
lea
mull
in
test
clc
jo
jb
lods
gs
inc
jne
xor
mov
movsb
cmp
add
cld
mov
dec
xchg
sbb
enter
pop
jb
or
lods
nop
sbb
lcall
lcall
jle
dec
adcb
push
sbb
sbb
call
cmpb
rol
cmpsb
das
mov
idivb
pop
push
and
pop
add
jne
fldl
out
dec
jl
xor
out
cmpsb
dec
push
lods
mov
ss
or
or
scas
push
or
and
lahf
call
popa
addr16
fdivrp
ret
rcrb
jae
ret
roll
add
movsb
inc
call
fiaddl
in
sbb
outsl
xor
and
test
sub
jmp
push
into
sub
or
inc
jg
jmp
adc
pop
roll
fdivr
or
lods
sbb
dec
pusha
mov
pop
cmp
movsl
jle
mov
and
adc
push
arpl
into
dec
add
xchg
jo
add
lea
pop
dec
mov
or
xor
sub
test
xchg
es
add
add
decl
je
and
dec
add
int
add
inc
mov
insb
fimuls
adc
and
xor
test
decl
sbb
cmp
xchg
xor
add
mov
add
loope
sbb
fstpl
jae
daa
sub
sbb
cmc
lods
pop
mov
cmp
and
in
ljmp
cwtl
cmp
mov
inc
xor
dec
arpl
fs
pop
or
cs
or
mov
insb
pop
clc
add
bound
sarb
cld
add
add
dec
dec
jne
inc
pusha
xor
mov
mov
je
xchg
or
lret
push
iret
push
fiaddl
or
fdivl
fs
cmc
movsb
mov
test
push
fwait
js
cmpsl
inc
es
das
lods
add
fmull
xchg
and
movl
fwait
mov
add
dec
cmp
sbb
push
pushf
data16
cmp
dec
inc
in
mov
fimull
enter
jae
sbb
or
fdivl
pusha
add
jo
pop
and
mov
fstps
mov
imul
and
pusha
ficoms
mov
inc
insl
or
dec
lock
and
mov
scas
sub
ret
test
jo
inc
or
jnp
add
popf
xor
in
ljmp
outsl
and
das
fs
pop
jnp
cmp
sbb
jo
aam
test
movb
adcl
xor
jb
out
movsb
loope
movl
push
jg
jne
push
cld
xlat
mov
inc
lcall
push
sbb
scas
mov
fildl
and
add
mov
dec
pop
addr16
shlb
dec
dec
pop
rcrb
pop
pop
add
and
add
inc
rcrl
insl
push
imul
ficoml
sbb
xchg
and
xchg
out
movsb
and
push
cs
xor
mov
add
ljmp
jmp
xchg
inc
xor
and
inc
inc
pop
test
inc
push
mov
cmp
add
mov
repnz
rorb
sti
adc
arpl
push
cwtl
pop
fsubs
mov
mov
mov
xor
xchg
je
leave
mov
js
push
mov
or
and
les
xor
out
mov
inc
xor
rorb
loop
rcr
orl
xchg
out
and
das
addb
dec
add
lcall
sahf
loopne
sbb
fmuls
xor
pushf
sbb
or
push
int
dec
sub
test
mov
push
ljmp
add
sub
movsl
jge
dec
push
sub
cmpl
cmp
mov
mov
or
sbb
or
jne
adc
ljmp
imul
and
or
jecxz
cmp
je
cmp
je
push
inc
cmp
xor
push
xchg
imul
hlt
jne
push
fidivrs
jp
jge
movsl
leave
pop
pop
wrmsr
roll
in
cmp
push
push
or
push
mov
lock
push
jno
jbe
jle
mov
xchg
mov
dec
add
or
cmpsb
fdivr
adc
xor
fisttps
test
lods
pop
ficompl
pop
in
loopne
in
and
push
int3
adc
adc
or
cs
in
xchg
les
clc
or
je
mov
sub
push
push
icebp
adcl
pop
sub
cmp
imul
inc
mov
inc
push
in
int3
rorb
add
inc
pop
test
loopne
add
fs
fcmovne
add
add
push
mov
sbb
sub
in
sbb
mov
pop
hlt
incb
or
sar
or
dec
push
sub
or
inc
mov
inc
lcall
pop
mov
pop
inc
dec
mov
imul
mov
nop
and
dec
xchg
lock
inc
inc
xchg
repz
inc
push
stc
nop
clc
and
sub
adc
and
jns
add
or
leave
imul
es
lds
sub
and
jnp
and
arpl
cld
adc
daa
stos
xchg
add
test
or
shlb
xor
pop
xchg
pop
xchg
add
sub
nop
test
rcrb
iret
int3
test
loopne
pusha
mov
pop
xchg
dec
sbb
add
dec
lcall
inc
xor
and
loopne
push
or
mov
inc
cmp
mov
lods
orl
mov
add
sbb
fnstsw
dec
mov
mov
lods
sub
or
mov
insl
sarb
jne
rclb
inc
shlb
out
out
int3
dec
mov
add
mov
adc
inc
xchg
test
or
pop
aas
mov
adc
pushf
dec
aaa
or
push
push
testl
andb
pop
jne
dec
jnp
inc
pop
sub
mov
jmp
lods
cwtl
enter
jmp
and
pop
xor
cld
daa
ljmp
je
push
xchg
pop
inc
fsubl
sbb
xchg
inc
adc
mov
test
loop
mov
inc
adc
and
mov
or
and
add
iret
jmp
loopne
insb
bound
jo
dec
inc
adc
jbe
lcall
inc
xor
bound
inc
mov
mov
icebp
mov
mov
mov
mov
dec
mov
pop
inc
loopne
lock
addl
dec
jne
or
push
inc
loop
and
cmp
call
push
sbb
add
in
inc
jg
sub
pop
iret
mov
or
adc
jne
mov
lock
das
arpl
push
add
imul
jmp
pusha
loopne
sub
xchg
and
sub
jg
mov
lea
movsl
add
movsl
sub
call
push
es
mov
xchg
out
adc
inc
pusha
xchg
mov
push
mov
in
incl
icebp
icebp
movsb
clc
mov
sub
sub
add
fsubl
fisttpll
sar
sub
icebp
xchg
xchg
ljmp
test
jbe
push
jmp
sbb
pop
outsb
and
in
inc
pop
aad
inc
jmp
dec
inc
cmc
imul
jne
cmp
jne
cmp
add
xor
lahf
dec
cmp
inc
dec
cmp
mov
dec
leave
jmp
or
ret
inc
inc
inc
xchg
str
ret
or
mov
stc
or
in
mov
jle
cmp
pop
clc
or
pushl
aam
movsl
sub
xor
mov
shl
sbb
or
sbb
pop
or
mov
orl
jmp
or
sub
lcall
lds
loope
inc
movb
rol
jecxz
insl
mov
mov
sub
or
sbb
xor
jno
nop
xlat
aad
adc
jns
loope
jno
and
jnp
dec
repnz
mov
and
cmp
mov
jb
adc
lret
jne
pop
lcall
mov
push
pushf
jecxz
inc
addr16
push
lret
cmp
shl
inc
test
movsb
jecxz
subb
sub
js
test
and
mov
enter
xchg
mov
loopne
pop
push
mov
rcrb
sub
push
pop
inc
int3
push
shrl
cmp
sbb
movsb
or
xchg
pop
adc
xchg
add
in
or
adc
dec
notb
inc
out
push
lea
adc
add
inc
sbb
push
mov
ret
loop
add
push
mov
inc
addr16
push
jmp
inc
or
mov
push
xor
mov
loop
dec
rclb
jnp
sti
scas
mov
dec
cli
adc
dec
pop
cmp
movsb
js
clc
xchg
jno
cmpb
test
dec
sbb
push
push
pop
fwait
cwtl
sbb
and
jmp
mov
incl
sahf
testl
add
or
xchg
push
jbe
jmp
push
add
cmp
imul
mov
push
mov
adc
ret
jp
in
test
jo
mov
dec
cmp
mov
push
inc
fsts
mov
dec
mov
adc
dec
fimull
inc
mov
dec
dec
fadds
sub
ret
add
xor
lea
in
mov
ja
push
inc
xor
or
leave
sbb
and
add
sbb
orl
add
mov
test
lock
xchg
add
mov
xor
fs
add
add
pop
rorl
dec
bsr
dec
mov
pop
mov
add
popf
mov
add
addr16
inc
test
fmuls
rclb
enter
sbbb
jmp
out
push
movzbw
mov
xchg
pop
adcb
or
add
cmpsb
stos
xor
and
or
jp
or
xorb
sbb
xchg
fwait
cmp
lock
inc
sub
pusha
add
rcll
xchg
cmp
sub
dec
pop
imul
mov
mov
push
cmp
push
push
dec
fmull
push
push
inc
mov
cmp
pushf
inc
or
and
rcrb
sbb
push
pop
sbb
les
pop
jo
dec
or
push
adc
ret
adc
daa
call
jle
sub
inc
lock
mov
fstl
inc
or
mov
mov
lret
jne
cmpsl
clc
adc
loop
pop
mov
jns
push
popf
xor
lds
dec
jbe
mov
data16
xchg
mov
mov
loopne
in
pusha
inc
pushf
adc
mov
or
xchg
iret
and
add
sub
add
xor
movsl
adc
cmp
adc
jbe
adc
nop
scas
int
scas
xor
cmpl
xchg
xlat
lods
iret
sbb
push
dec
adc
push
ljmp
and
mov
pop
jo
xor
aas
loopne
roll
sbb
push
es
xchg
or
and
dec
rcll
adc
mov
dec
inc
lcall
add
add
iret
cmp
inc
adc
ljmp
inc
mov
bound
jmp
push
test
loop
and
add
xor
dec
push
sbb
imul
jl
adc
test
xor
mov
pop
mov
cmp
enter
inc
jae
inc
fdivs
jecxz
in
xorb
ss
sbbb
add
push
xchg
jno
lods
jmp
pop
jmp
insb
pop
cmp
adc
shll
adc
mov
pop
je
cmpsb
push
pop
jmp
loopne
xlat
or
push
sbb
sub
mov
cmpsl
loopne
je
pop
mov
push
mov
sbb
test
sqrtps
add
bound
add
pop
rorb
enter
mov
sub
enter
pop
mov
pop
or
jp
sbb
push
sub
sub
xor
push
push
adc
and
jns
out
add
or
repnz
popf
push
cmp
push
add
in
inc
mov
mov
mov
adc
or
popf
dec
in
mov
mov
pop
and
lods
jmp
dec
ljmp
mov
mov
and
xchg
ss
repz
push
enter
call
and
imul
cld
sub
jne
sar
mov
dec
dec
or
mov
add
push
nop
inc
fsubrp
and
push
dec
stos
shrl
inc
and
mov
add
fwait
dec
imul
add
test
shl
mov
pusha
leave
mov
rcrl
pop
xor
aam
add
pop
inc
dec
jno
insb
fnstsw
movsb
pop
add
dec
mov
loope
and
add
push
pop
or
and
xor
gs
xor
fsubrp
pop
pop
cmp
adc
cmp
inc
outsl
test
inc
cmp
mov
cwtl
dec
add
xlat
push
in
shl
fimuls
pushf
mov
lcall
push
sbb
and
sub
and
sub
pop
out
xor
inc
sub
iret
jae
jg
sub
sub
xor
rorb
nop
xchg
cltd
test
sbb
fisubl
xor
fldenv
push
lea
push
push
dec
jle
pop
push
cmp
adc
adc
add
ja
add
jmp
adc
aad
ret
test
fisttpll
inc
add
adc
add
jnp
test
or
loopne
mov
in
inc
mov
push
in
movb
jae
fwait
pop
inc
fcoml
or
fwait
scas
fsubl
add
dec
lods
movsb
add
add
jge
push
xchg
jl
pop
mov
pop
pop
pusha
xchg
or
sub
nop
imul
inc
mov
loop
inc
fsubr
cmp
js
add
xchg
hlt
sub
pop
nop
movsb
mov
mov
add
sbb
add
pop
jo
jg
je
jne
and
clc
inc
mov
add
jl
lret
rorl
dec
jmp
lods
push
or
mov
repnz
add
les
cwtl
incb
push
inc
lea
cmpb
inc
jno
insl
or
testl
clc
ds
aas
test
movb
push
arpl
sub
cmp
pop
jl
pop
lcall
clc
fbld
mov
push
push
fcmovb
les
adc
icebp
or
outsl
mov
nop
cmpsb
jns
call
test
dec
push
outsb
cmp
mov
ret
lock
movsb
ret
lea
lock
pop
sbb
jne
cmp
cmp
aaa
mov
jae
push
mov
clc
subl
sti
or
adc
pop
paddusb
sbb
test
aas
movsl
mov
test
hlt
sti
imul
mov
fisubs
sbb
dec
or
cmp
lods
fisttpll
rol
or
jmp
dec
adc
xor
mov
add
push
xlat
sbb
xchg
dec
loopne
icebp
push
test
or
jno
push
andb
rolb
je
jne
jg
nop
xor
and
jmp
cmp
jne
xor
inc
xorl
lret
out
stos
push
mov
sahf
or
rorl
daa
or
outsb
imul
cmp
je
popf
clc
inc
adc
dec
or
shll
aaa
movsb
push
mov
insl
dec
shl
push
repz
push
adc
adc
sarb
data16
push
push
sbb
aam
mov
sbb
fsubrl
mov
cmp
fbld
ret
cmpsl
push
rcl
push
add
inc
test
xor
or
dec
loop
cmp
je
notl
pop
mov
nop
lret
mov
stc
adc
mov
int3
sbb
push
pop
dec
cmp
xchg
test
cmpl
jne
std
adc
xchg
adc
out
cmp
imul
or
testb
leave
test
leave
pop
inc
popa
mov
jbe
bnd
stos
addr16
adc
mov
adc
test
and
mov
mov
adc
gs
enter
mov
mov
adc
andl
sub
sbb
adc
adc
inc
xchg
adcb
scas
fcom
test
ret
roll
mov
or
adc
push
adcb
push
or
jne
sbb
fdivs
push
mov
dec
clc
jg
jl
cmp
sbb
inc
sub
mov
add
cmp
inc
jecxz
or
insb
dec
icebp
fdivl
fdivr
paddsb
nop
push
add
sub
mov
jno
cli
mov
jmp
jg
xchg
push
adc
mov
lea
iret
repnz
add
lret
inc
sub
and
insb
inc
lock
or
dec
push
fiadds
mov
push
adc
cmpsb
gs
pusha
and
ss
gs
and
int3
lcall
jb
pop
push
xor
push
mov
mov
jbe
jecxz
sahf
xor
mov
jmp
xchg
hlt
sub
xor
and
push
mov
cmc
adc
xchg
fidivrl
jl
or
xor
sbb
into
ljmp
cmp
push
ja
pop
int3
push
adc
in
adc
hlt
loop
aaa
xchg
sbb
xor
adc
or
je
scas
mov
shlb
mov
push
xchg
fimuls
fimull
push
mov
jo
inc
arpl
insl
xor
movsb
cmp
push
pop
js
xorw
add
inc
add
sarb
push
popf
or
or
enter
mov
leave
ret
out
pop
push
mov
dec
cmp
xchg
push
testb
sbb
xchg
hlt
xlat
bound
cmpl
xor
jecxz
and
jbe
lock
ss
incl
add
mov
adc
mov
rorl
pop
into
mov
or
jns
inc
stos
in
int3
test
mov
lods
loopne
ret
push
inc
xchg
shlb
jl
aam
rcll
and
sbb
jle
adc
jno
arpl
sub
push
testb
jmp
pop
and
xchg
pop
mov
sbb
fcmovnb
jb
xor
outsb
call
js
mov
add
inc
sub
hlt
ss
pop
lods
jo
mov
aam
hlt
xchg
and
mov
orb
leave
pusha
mov
mov
stc
in
in
pusha
pop
pop
cmp
cmp
je
jmp
push
sbb
mov
lods
add
jle
sbb
mov
and
ds
es
inc
pop
sbb
jo
and
inc
add
add
popa
push
adc
outsb
dec
mov
push
fsts
xor
push
shrb
int3
insb
je
mov
add
pushf
pop
repnz
adc
call
adc
jl
pop
push
lods
movsb
je
scas
subl
js
add
pop
cmp
call
adc
icebp
in
loopne
sbb
add
mov
fcmove
test
or
cmpsb
cmp
add
cmp
inc
push
pop
in
call
pop
in
xchg
dec
out
lock
xchg
xor
xchg
add
xor
add
mov
mov
ficoms
lock
jmp
scas
int3
sub
or
push
adc
movsb
pop
ljmp
adc
stos
push
loopne
push
mov
mov
mov
sbb
or
jbe
inc
mov
daa
push
mov
jl
subl
je
inc
pop
or
ljmp
lcall
dec
push
je
mov
ss
xor
jbe
es
add
sbb
add
das
pop
pop
popf
adc
hlt
popf
or
adc
and
and
loop
inc
pop
mov
mov
cmpl
fmull
xchg
mov
and
adc
and
or
mov
dec
add
inc
or
mov
or
adc
cwtl
add
sahf
sarb
xor
hlt
cmpsl
testl
ss
pop
sbb
adc
add
mov
ss
push
repz
loopne
push
les
push
adc
and
sti
or
pop
ret
rcrl
int
adc
sub
int3
fstl
cmpsl
jge
rorl
push
rorl
or
pusha
inc
dec
shr
pop
sbbb
pop
cmp
jne
je
push
push
fdivs
lods
pusha
jg
mov
je
aam
jne
out
pop
and
fsub
xor
mov
hlt
jl
mov
adc
call
add
mov
or
add
pop
mov
cltd
mov
xchg
out
push
idivb
rolb
scas
add
mov
jo
or
inc
push
mov
mov
sti
jnp
es
dec
add
push
ret
test
je
fadds
andl
or
sub
loopne
cmp
mov
clc
fcompl
loop
cld
and
mov
xchg
xchg
or
push
roll
imul
test
rolb
lahf
test
jb
mov
je
pop
inc
push
add
dec
add
and
or
cmc
sub
loop
lods
jo
test
fsubrl
dec
or
pusha
mov
fldenv
adc
add
mov
or
add
movsb
pop
inc
pop
imul
push
add
adc
add
xor
push
mov
xchg
fisubs
jnp
xor
ret
inc
mov
mov
inc
push
xor
xchg
sbb
push
subl
pop
outsb
mov
adc
mov
andl
adc
orl
push
push
push
push
dec
testb
fidivrl
call
pop
inc
adc
sbbb
loop
jmp
outsb
dec
mov
int
push
push
xchg
xchg
adc
repnz
mov
jno
sub
mov
ds
loopne
data16
jnp
jne
or
xor
lods
popw
fcompl
mov
mov
mov
jbe
test
cmp
push
jl
adc
jae
dec
mov
dec
xor
push
mov
imul
xcrypt-ctr
cmpsl
sbb
pop
loop
adc
clc
inc
push
mov
sarl
sbbb
sub
cmp
jg
mov
mov
sub
sbb
pop
les
sti
adc
and
pusha
cmp
cmp
mov
mov
xchg
add
jmp
mov
ret
xor
out
cmp
xchg
repz
cmc
shlb
dec
adcb
cli
mov
sbb
xor
and
in
notb
add
push
xor
push
add
dec
adc
popf
mov
imul
add
insb
lock
push
mov
sub
pop
push
sbb
or
mov
push
mov
jmp
or
lods
and
aam
push
push
add
pop
push
pusha
push
and
pop
mov
jp
repz
imul
movsb
adc
sbb
and
push
xor
jmp
mov
sbb
pop
lock
popf
loop
and
add
fldl
jbe
popf
cmc
in
push
or
in
jg
fcmovbe
inc
inc
sarb
jg
fsubrs
or
pop
imul
movb
not
xchg
push
cld
add
fidivs
cmp
inc
or
jae
xchg
push
and
jne
add
jns
cmp
push
cmp
je
inc
or
push
or
fistpll
jle
cmp
pusha
hlt
sub
stc
daa
ret
xor
inc
sbb
xor
outsl
cmp
faddl
mov
inc
lret
mov
fstpt
jmp
jb
imulb
cmp
push
pop
fistps
movsb
push
or
or
xchg
in
addr16
out
push
or
js
push
mov
cmp
pop
dec
xchg
sub
je
inc
orl
or
movb
cmpsb
paddusb
xchg
popf
xchg
jmp
push
iret
dec
or
push
mov
lret
call
jb
pop
xor
xchg
mov
add
xchg
je
cld
repnz
into
push
outsb
jo
jnp
pop
and
sbb
mov
adc
add
dec
xor
xor
xchg
out
mov
dec
sbb
jnp
sbb
or
call
movsl
clc
sbb
pusha
add
icebp
sbb
cwtl
or
dec
loopne
adc
or
lea
mov
loopne
pop
sarb
shrb
mov
or
enter
or
fwait
mov
shll
vphaddwd
in
dec
lret
pop
inc
pop
cmp
es
pop
mov
dec
fstpl
pop
jp
mov
sub
incl
xor
jno
pop
orb
push
clc
or
inc
and
add
shll
fs
insb
jo
js
mov
jo
fsubr
mov
aas
andl
cmpsl
cmp
sub
pop
fwait
popf
dec
test
inc
mov
add
pop
scas
sub
and
lods
sahf
jbe
test
adc
add
loopne
add
fidivs
aam
pushf
pushl
pop
loope
sub
add
and
sbb
add
and
and
xor
add
and
pusha
push
cmp
dec
jae
and
ret
inc
out
add
xor
xor
sbb
andl
ficoms
clc
adc
jl
fists
cmp
jne
pop
outsl
fadds
push
xor
shll
dec
dec
pcmpeqw
or
add
sbb
lret
je
or
mov
add
fmul
mov
add
outsb
dec
adc
fbstp
jmp
cmp
xchg
xchg
int3
scas
sbb
push
inc
roll
mov
sbb
sar
xor
lret
or
in
adc
ja
xor
lsl
jne
mov
add
and
fs
outsl
shr
mov
push
inc
dec
into
jo
add
inc
or
rorb
arpl
jne
adc
fadds
add
jne
fnstcw
enter
sub
in
push
scas
das
or
sbb
and
popa
inc
clc
jo
dec
mov
ljmp
add
or
add
jae
test
cld
out
int
xchg
jne
lea
add
pop
pop
cmp
adc
pop
test
add
mov
adc
ret
mov
andl
fisttpl
fnstcw
adc
mov
add
or
out
mov
xchg
out
nop
out
add
jo
out
addr16
cmp
int3
decb
pop
in
clc
insl
insb
mov
inc
outsb
dec
testl
jge
xchg
rolb
mov
stc
push
adc
ret
pop
scas
mov
stc
xchg
clc
push
stc
mov
sysret
je
icebp
jne
in
ds
xor
ja
arpl
ficompl
fldcw
sub
jge
inc
sub
add
and
movsl
mov
jo
cmp
xchg
push
mov
or
ret
adc
rclb
nop
iret
push
xchg
and
inc
test
orl
clc
mov
dec
mov
jg
loop
jmp
cmp
jle
or
jmp
cwtl
inc
jo
int
or
dec
adc
arpl
or
imul
cmc
or
fs
cmp
es
add
or
add
pop
or
inc
or
adc
add
sub
jp
mov
mov
pop
nop
jp
test
test
out
xchg
enter
xchg
add
mov
cmpsb
ljmp
xchg
je
pusha
push
xor
cmp
jne
mov
fwait
int
gs
scas
jo
jg
out
mov
and
sbb
rorb
dec
sub
movsl
arpl
inc
neg
adc
inc
cwtl
notl
fisubrs
jo
xchg
and
sbb
sarl
adc
mov
je
pop
fs
xchg
inc
pusha
pusha
insb
adc
sbb
push
loope
add
xchg
arpl
icebp
pop
testl
je
cmp
je
testb
jne
push
roll
enter
mov
and
iret
je
ss
sbb
dec
lods
fdivs
bound
lock
push
sub
movsb
add
jmp
lea
jo
cmp
inc
xor
lock
andps
jne
lock
pop
and
cld
rorl
cmpsl
sub
sbb
add
push
push
adc
stc
out
lods
in
adc
sbb
sbb
push
dec
ss
push
ljmp
mov
clc
ja
push
test
into
add
push
mov
mov
lea
mov
pop
cs
popa
aam
or
push
leave
inc
andl
sbb
and
mov
pop
dec
popf
mov
pop
cmp
mov
or
add
ljmp
cs
orl
push
ss
or
inc
mov
sbb
push
add
ret
cmpsb
notb
aam
xchg
ret
push
bound
sbb
adc
push
test
inc
add
jo
popa
cmp
push
add
mov
sahf
and
int
mov
cwtl
call
pop
mov
aas
jne
testl
es
cld
cltd
jne
xchg
stos
or
pop
enter
mov
cwtl
fidivrs
das
inc
lods
sub
push
test
sub
pop
loopne
adc
pop
or
mov
push
push
cwtl
dec
push
lea
rclb
pop
dec
loope
lea
lcall
push
or
sbb
mov
add
lods
add
adc
pushf
mull
in
rorl
popa
ret
mov
je
out
adc
pop
iret
in
cmp
xor
push
sub
ret
adc
fs
roll
movsb
mov
shlb
pop
arpl
rclb
mov
sbb
mov
push
push
jnp
xchg
fimuls
fmul
inc
std
mov
icebp
dec
jmp
mov
add
cmp
adc
rcl
outsb
popa
add
push
xchg
aam
sbb
lcall
xor
sbb
pop
loopne
or
nop
ja
adc
or
adc
lea
jg
fucom
pop
adc
sbb
test
rclb
mov
ret
ret
adc
sbb
pusha
pop
pusha
pop
sbb
ljmp
loopne
xchg
adc
or
pop
inc
or
cmp
cmp
andl
fistl
pop
or
push
into
jecxz
lock
addl
cmp
ds
aam
push
fnstsw
push
xchg
jnp
aad
punpcklbw
push
test
movsb
and
lea
or
rcrl
jmp
or
pop
mov
mov
movsb
pop
jp
cmp
sarl
adc
fsubr
jo
jmp
and
add
mov
push
sbb
aas
test
add
pop
fisttpll
scas
shlb
sub
mov
push
pavgb
jo
lret
sbbl
sbb
mov
iret
add
cs
xchg
arpl
es
sub
fmuls
xlat
cmp
hlt
aam
sbb
pop
sbb
push
out
jo
push
cli
loop
es
aaa
push
sub
int
xchg
popa
cwtl
bound
shrb
movsb
mov
push
fsubrs
mov
jo
xor
cs
mov
mov
push
stos
aaa
rolb
and
scas
fistpll
mov
cmc
movzwl
adc
movsb
jmp
popf
daa
jae
mov
addr16
push
out
push
je
or
das
mov
adc
adc
push
fwait
sub
mulps
push
cmpsl
les
add
pop
jl
shll
ret
push
push
mov
das
bound
leave
xchg
mov
xor
mov
jp
jp
cmp
adc
and
repz
sub
pusha
pop
mov
imul
pop
stos
add
rcll
icebp
aad
imul
push
inc
inc
xor
inc
nop
stos
or
divps
jmp
xor
adcl
cwtl
add
cli
sbb
xor
das
mov
xorb
pop
data16
adc
in
push
pop
sub
pop
les
adc
or
xor
call
xchg
dec
add
enter
push
add
xor
mov
int
mov
frstor
sub
inc
mov
mov
cmpl
adcl
movsl
loopne
or
adc
push
in
mov
aam
test
repz
icebp
xor
sub
push
mov
lods
push
or
loopne
insb
jecxz
or
push
and
push
sub
dec
xchg
fimuls
inc
mov
out
sbb
add
lret
fildll
mov
int
push
and
xor
cwtl
fbld
out
nop
mov
sub
push
fstpt
neg
sbb
push
inc
xor
or
js
enter
je
xor
push
jb
sbb
jb
or
jo
outsl
inc
or
push
sub
mov
pop
call
lea
insb
daa
cmp
inc
inc
lcall
insb
xor
push
fs
call
aam
daa
inc
jne
xor
imul
or
int
test
mov
sub
lods
add
or
add
imul
mov
cwtl
loop
lea
and
out
ss
push
mov
das
rcr
aam
test
ret
rorb
movsl
sbb
pop
pop
mov
ret
jge
inc
idivb
rorb
pop
jb
cld
mov
add
mov
jl
andl
push
adc
movsb
pop
sbb
and
add
add
mov
pop
dec
pop
sub
dec
mov
cmp
dec
xor
pop
sahf
push
js
int3
in
xchg
dec
outsb
mov
rcll
adc
xor
adc
dec
sub
jg
fs
lds
jnp
loop
xchg
xor
mov
mov
stos
test
fdivrl
sub
xor
imul
inc
dec
jo
add
xor
jo
repz
jl
or
mov
shrb
mov
push
in
pop
jo
shr
pop
add
arpl
in
clc
mov
inc
push
inc
test
call
dec
sub
mov
test
iret
shll
add
pop
pop
dec
scas
es
xor
add
xchg
push
push
xchg
mov
cmp
sub
cmpsl
or
inc
daa
push
sbb
mov
add
add
jne
mov
add
jp
xor
add
sbb
add
testb
or
mov
es
jg
mov
pop
mov
dec
mov
dec
jl
loope
xor
xchg
addl
push
sbb
inc
sbb
sbb
adc
sbb
pop
mov
push
ss
fidivs
dec
jae
mov
mov
lahf
lret
sbb
in
or
xor
add
out
and
mov
and
cmp
push
add
inc
add
xor
or
add
xchg
add
frstor
push
push
test
aas
pop
xor
xchg
or
mov
jne
in
ds
ret
filds
sbb
cmc
adc
jne
fists
mov
outsb
and
jns
fildll
lea
je
push
mov
cmp
and
add
mov
test
mov
push
les
and
jmp
lea
sbb
sbb
push
into
lods
ret
shlb
mov
pushf
xchg
inc
xlat
adc
or
cmp
aad
test
ljmp
neg
adc
mov
inc
add
js
es
push
push
stos
test
loopne
call
push
bound
roll
out
push
pop
andb
pushl
xchg
add
jmp
repnz
and
inc
ficompl
out
mov
push
push
lea
insb
xchg
pop
xor
orb
pop
mov
fcmove
mov
popa
sub
clc
loop
aad
fildl
push
icebp
jbe
add
sub
jno
xor
in
cmp
jno
jmp
or
pushf
stos
out
sarl
xor
addr16
xor
mov
jecxz
pop
dec
push
xchg
jp
gs
stos
jb
cmp
add
out
and
lods
nop
mov
inc
inc
int3
test
imul
je
push
std
jno
push
shlb
push
jns
movsb
adc
subb
cmpsb
daa
add
or
inc
je
imul
dec
or
out
add
add
ss
mov
sbb
inc
add
xchg
xor
add
repnz
aam
clc
sti
sbb
fldl
xor
arpl
lahf
sbb
dec
cvtps2pd
mov
sub
mov
add
push
mov
add
push
nop
push
mov
dec
inc
xchg
push
xchg
sbb
inc
jbe
mov
clc
xor
cmp
fwait
sub
in
cmp
je
mov
xchg
jb
movsl
rcll
shll
into
in
push
or
jae
je
in
inc
sub
or
pop
imul
dec
movsl
repz
jne
inc
dec
jbe
mov
adc
insb
idivl
jmp
jb
loope
mov
dec
insb
add
cwtl
mov
xor
add
imul
adc
sbb
dec
xlat
jp
adc
loopne
adc
and
xor
add
divl
sub
cmp
inc
shrl
loope
loop
inc
sbb
aam
lea
inc
lcall
test
mov
daa
mov
add
or
mov
mov
pop
and
aas
sub
loopne
adc
jbe
add
jae
neg
fldt
xlat
movb
add
in
jge
jno
jg
pop
adc
inc
insb
shr
inc
add
mov
push
clc
dec
adc
or
inc
sbb
push
cwtl
add
add
pop
rcll
mov
pusha
div
outsl
shrl
sbb
mov
hlt
or
arpl
mov
out
scas
leave
pusha
xchg
js
jb
hlt
inc
lods
mov
lock
push
movb
add
mov
hlt
sbb
inc
sbb
jle
sbb
lock
push
icebp
cmpl
pop
adc
inc
hlt
push
mov
sub
out
xor
sbb
add
push
lahf
jne
lock
mov
mov
lods
adc
sub
jb
jno
adc
and
xchg
and
sbb
pop
xor
and
and
not
adc
pop
dec
scas
in
xor
icebp
or
pop
cld
jecxz
adc
push
sbb
out
movsl
addl
insb
pop
cmp
sbb
cmpl
shr
jg
call
in
nop
or
inc
inc
add
mov
movb
dec
popa
and
mov
push
sub
inc
dec
dec
add
dec
mov
vcvtpd2psy
daa
ss
sub
add
or
mov
cmp
sbb
push
pop
push
insl
test
mov
mov
das
jecxz
test
sub
xor
cvtpi2ps
sbb
add
out
sub
or
fsubrs
mov
pop
or
xchg
jns
mov
adc
xor
fisubl
xor
mov
add
sbbb
jo
ja
ret
je
add
xor
pop
push
movsb
pop
scas
loop
iret
stos
push
mov
leave
adc
ret
add
push
orl
in
aad
js
cmp
mov
mov
mov
lock
dec
mov
and
sub
popf
scas
rolb
ja
inc
mov
xor
lea
inc
test
push
cmp
or
fsubrl
push
push
push
adc
mov
and
pusha
jae
ret
and
loopne
inc
fs
mov
mov
mov
xchg
or
mov
test
pop
cmp
inc
jo
or
jb,pt
idivl
pusha
sbb
mov
aam
out
pop
and
leave
dec
loop
dec
xchg
scas
sub
in
loopne
pop
testl
shlb
sbb
cmp
call
sub
mov
sub
aaa
ds
dec
or
inc
lcall
inc
mov
repz
cs
sbb
or
jmp
or
es
jge
dec
sub
xchg
ficompl
into
adcb
inc
add
add
push
out
cmc
jp
add
cld
jno,pt
sub
jge
sbb
sbb
testl
push
je
mov
push
inc
jbe
aad
mov
push
sbb
mov
xor
fdivl
dec
lret
jge
and
and
adc
adc
ret
fisubl
or
push
in
push
inc
mov
push
jae
push
push
inc
cwtl
inc
pop
jbe
xchg
xor
hlt
jl
movl
pop
pop
push
push
add
or
add
sub
xor
les
inc
insl
mov
rclb
aam
sbb
dec
test
mov
bound
ret
gs
inc
scas
dec
and
outsl
testl
or
in
js
popl
inc
sub
mov
push
rolb
es
sbb
dec
jo
xor
mov
imul
imul
jmp
push
sub
mov
movsl
mov
shrb
sbb
bound
jnp
lahf
inc
or
add
sub
xor
inc
rorb
mov
or
push
push
addb
jo
filds
sub
in
mov
ds
popf
out
cwtl
push
xor
xchg
mov
mov
push
push
xchg
insl
rolb
or
and
sbbl
dec
push
push
daa
adc
push
xorl
loop
add
pop
shl
add
pop
xchg
adc
out
and
cmp
push
push
pop
loop
push
add
mov
mov
push
pop
andl
adc
fadds
sti
dec
ja
je
or
je
or
sub
xchg
pop
adc
adc
adc
inc
hlt
xchg
cld
push
or
mull
stos
add
bound
lcall
cs
sti
sub
cmpsl
std
cld
je
push
adc
adc
imul
gs
sbb
add
jne
pop
mov
fildll
push
pushf
jbe
call
ret
and
dec
clc
push
in
mov
or
flds
hlt
imul
test
cmp
push
fisubrl
or
add
je
sbb
mov
push
and
or
adc
add
test
addl
test
cltd
and
add
or
lret
add
bound
adc
or
cmp
or
filds
dec
je
sub
popf
scas
sub
add
imul
cltd
add
nop
adc
in
sub
pop
or
das
ds
or
push
adc
inc
xchg
arpl
push
insb
add
add
aas
popf
out
ret
mov
mov
add
cmp
aas
and
add
int3
sub
push
and
sahf
insb
icebp
and
mov
or
xchg
push
push
sbb
mov
pop
pop
adc
jne
push
adc
ret
mov
repz
sbb
adc
fdivrl
test
add
lods
int
jnp
add
das
sbb
push
mov
clc
lahf
sub
push
push
push
int
popf
movsb
in
in
push
loope,pn
sub
arpl
and
pushf
lcall
stos
and
dec
sbb
fcomp
repnz
adc
xor
push
push
addr16
ret
mov
xchg
sbbb
test
jmp
lock
cmp
jne
or
loopne
fdivrl
mov
insb
xchg
pop
imul
and
push
sbb
push
nop
add
add
inc
add
add
out
les
ret
enter
leave
jecxz
push
enter
mov
xchg
xchg
mov
ret
ret
add
xchg
mov
push
lret
leave
cltd
cltd
pop
fdivrs
repz
sahf
dec
xor
sbb
clc
fildl
push
imul
mov
xor
loopne
mov
pop
inc
mov
xchg
stos
insb
loopne
push
cmpsb
ja
shlb
ljmp
stc
xchg
xchg
add
aam
jb
push
cmp
sbb
cmp
push
test
or
in
clc
mov
fidivrs
and
push
xlat
jnp
mov
cwtl
or
repnz
cmp
test
push
cmp
pusha
sti
sar
inc
or
add
or
ret
test
xor
jl
fwait
imul
sbb
xchg
push
leave
mov
sbb
xchg
pop
or
pop
mov
sub
mov
sbb
sbb
pop
push
push
sbb
xchg
rcrb
popa
push
je
inc
movsb
std
mov
adc
cmpsl
add
and
mov
ret
popf
das
xchg
xor
sbb
jmp
push
xchg
mov
jle
sbb
push
push
ret
int
aam
sbb
cld
inc
push
ds
dec
test
enter
adc
sub
out
add
mov
sbb
pusha
pop
xor
scas
cmpsb
xor
cmp
push
roll
hlt
cs
lea
les
call
mov
or
enter
mov
in
lahf
mov
add
and
in
rorb
faddl
jbe
addr16
lahf
dec
in
sub
sbb
sub
add
mov
xor
and
cwtl
mov
pop
imul
push
jo
loopne
mov
sub
daa
adcb
in
outsl
test
je
and
ss
sub
stos
and
adc
push
sub
in
xor
xor
or
cmpsb
lcall
adc
mov
sbb
and
and
call
clc
cmp
scas
xor
mov
jl
xor
mov
push
mov
loope
or
test
test
stos
jo
repnz
push
arpl
call
xchg
pop
cld
dec
sbb
daa
test
fistpll
inc
fisttpl
call
pop
incl
push
fdivr
and
popf
adc
or
pushf
sub
inc
inc
inc
mov
push
test
inc
mov
int
push
jecxz
movsl
and
sbb
into
pop
enter
mov
aaa
lods
push
dec
pop
ret
push
popa
stos
notb
or
sbb
mov
ja
neg
sbb
mov
or
or
and
out
add
dec
sbbb
push
ss
sbb
add
cmpb
test
push
pop
jl
iret
fcoml
shr
daa
icebp
push
mov
push
push
mov
push
push
push
pop
pop
jb
sub
or
dec
rcrb
aam
in
fnsave
in
mov
pop
mov
xor
repnz
pop
xchg
cmp
add
cld
or
or
dec
mov
and
or
iret
testl
xchg
mov
mov
out
or
pop
jg
adc
pop
sar
je
inc
or
push
outsl
dec
daa
and
movsl
dec
insl
cmpl
dec
insl
add
inc
push
sbb
and
lock
dec
insl
adc
sub
dec
sbb
inc
adc
mov
cmp
les
fstpt
fisubrl
in
push
mov
xchg
xor
sub
lds
inc
push
js
adc
inc
sbb
mov
pop
js
je
xor
mov
cs
cmp
rol
enter
and
or
jl
sbb
xchg
loope
in
mov
or
or
mov
xchg
dec
cmp
pop
and
sbb
mov
test
dec
mov
dec
inc
inc
and
js
mov
mov
imul
enter
sub
cmpsl
mov
lret
mov
jge
xor
ret
lret
mov
hlt
jle
push
shl
xor
outsb
mov
les
sub
inc
jmp
scas
pusha
cmp
call
xor
sbb
dec
adc
push
orl
mov
pop
jl
pop
xchg
loopne
test
add
mov
and
cli
adc
or
stc
mov
les
loopne
stos
sbb
gs
jns
sahf
jns
pop
fidivs
xor
sbb
rorl
jnp
mov
mov
aaa
stos
sbb
sbb
pop
or
stos
jns
es
into
hlt
js
xchg
je
je
push
inc
push
xchg
cltd
mov
add
add
jmp
push
adc
jnp
add
jnp
fs
rcrl
adc
outsb
je
push
adc
push
adc
xor
dec
dec
mov
pushf
adc
fwait
add
aam
jbe
sar
and
add
push
mov
dec
dec
hlt
add
out
imul
pop
je
or
push
cmp
rorl
sti
sbb
adc
shrb
mov
stos
je
int
mov
lret
xor
mov
test
jp
sbb
test
lods
sbb
ss
leave
incl
pop
ror
mov
dec
adc
movl
fidivrs
dec
pop
push
xchg
aad
sbb
lret
cmp
and
dec
sbb
or
jl
inc
push
add
cld
or
subl
jmp
push
adc
lea
push
add
jmp
add
out
pop
inc
push
nop
popa
rcr
cs
or
mov
push
fs
mov
cmp
cmpsb
inc
fisubl
pop
sbb
dec
enter
add
add
bound
add
in
test
fsubr
dec
or
je
fidivrs
push
cwtl
adc
add
dec
push
xor
sbb
sub
sub
add
push
mov
or
or
xchg
out
lahf
and
add
push
nop
and
mov
xchg
sub
or
xchg
add
and
push
ljmp
sbb
cmp
adc
fs
mov
xor
jl
sub
pop
push
and
cmp
push
sahf
adc
and
cmp
cmp
jns
rol
inc
ret
jns
lds
cmp
or
sbb
add
inc
and
out
inc
xchg
or
adcb
pop
jo
adc
dec
add
inc
pop
jns
jb
inc
mov
mov
nop
and
adc
iret
out
ljmp
pop
jge
in
jmp
push
sbb
sbb
xor
loopne
mov
lods
repz
daa
gs
nop
addr16
mov
stc
inc
mov
rcrl
aad
mov
imul
mov
ret
or
loopne
stc
dec
sub
jne
push
add
inc
sub
sbb
adc
dec
adc
aam
or
enter
mov
int3
orb
pop
pop
lcall
mov
ljmp
add
pop
arpl
and
js
jg
sub
movsl
mov
fwait
sub
push
shlb
add
mov
xor
xchg
cmp
fbstp
and
xor
daa
andb
int3
jle
push
lock
arpl
add
sub
lock
cmpsb
adcl
mov
stos
popa
test
and
pop
mov
add
push
inc
or
inc
or
add
aam
dec
push
push
add
add
lds
das
adc
cmp
enter
or
or
testl
or
out
pop
cmp
jne
jg
xchg
pop
mov
test
pop
test
test
add
push
jmp
inc
jmp
push
jl
rcr
cmp
jo
jno
sbb
adc
mov
mov
sub
mov
mov
add
call
lods
pusha
and
sahf
or
jge
sbb
mov
loopne
rorl
push
and
pcmpgtb
les
jecxz
adc
hlt
pop
addr16
xchg
test
xor
pushf
or
jecxz
rolb
push
leave
sub
cmpsl
dec
pop
mov
mov
pusha
clc
add
pop
sub
cmp
sbb
sub
cmp
jecxz
lret
add
icebp
mov
lods
adc
in
test
leave
mov
fdivrl
inc
push
ss
add
push
push
faddl
and
repnz
decl
pop
add
pop
popf
mov
dec
ja
andl
loop
push
push
pop
xor
dec
ret
repz
shrl
push
dec
push
adc
push
and
test
xchg
jb
mov
push
or
jo
sub
push
xchg
add
ret
mov
adc
or
mov
push
mov
cmpb
test
mov
repz
out
shll
push
leave
push
xor
fs
pop
xor
push
xor
pusha
insl
add
fstpt
notl
or
push
xchg
xor
push
lock
mov
mov
cmp
fs
inc
movsb
inc
push
dec
mov
in
das
and
roll
ljmp
xchg
inc
or
cmpsl
or
fwait
add
inc
push
dec
stc
add
test
lds
push
sub
jo
add
fwait
mov
inc
cmp
push
inc
lock
push
repnz
or
inc
pop
subl
movsb
ja
cmp
mov
shr
add
xchg
sbb
push
lea
dec
jns
jbe
push
orb
inc
ret
cmpb
dec
pop
mov
pusha
jmp
or
nop
pop
add
shlb
mov
or
mov
xor
inc
pop
pop
mov
sub
jge
aaa
cmp
push
fcomps
cltd
hlt
pop
mov
add
je
mov
pop
movb
in
mov
add
movsb
sbb
hlt
mov
dec
add
cmp
dec
shl
push
testl
inc
adc
adc
lret
push
jmp
sbb
lock
addb
sub
or
pop
ljmp
gs
sub
jne
andl
int3
push
jge
or
push
mov
addb
or
and
sub
xchg
mov
adc
mov
or
or
add
add
push
enter
lea
sbb
nop
cmp
lea
mov
scas
xor
rclb
inc
jae
inc
adc
push
adc
mov
test
icebp
lcall
outsb
mov
add
cmp
cwtl
sub
fwait
sub
add
or
mov
xchg
fisttps
jb
push
xchg
or
xchg
jae
fs
pop
sub
ja
call
gs
imul
rcrb
sub
sbb
adc
sub
and
in
xchg
xor
dec
add
pop
or
push
pop
push
loope
push
fucomip
dec
push
dec
or
pop
or
fdivrl
mov
leave
lret
out
and
iret
sub
inc
sub
addl
int
pop
dec
or
inc
add
lea
cmp
add
lods
push
das
inc
cmp
inc
or
rclb
aaa
gs
cwtl
pop
adc
mov
bound
add
pop
sbb
sub
fsts
inc
xor
pop
mov
pop
xchg
xorb
pop
xchg
or
sbbl
test
cltd
sbb
dec
pop
cmpl
mov
ret
pop
rolb
pusha
dec
adc
leave
inc
addr16
xchg
or
or
push
cwtl
jo
call
es
jo
fstpt
inc
sbb
and
sbb
in
js
push
xor
adc
xchg
hlt
sub
add
or
shll
lret
or
mov
lahf
sbb
mov
sbb
inc
pusha
xor
mov
faddp
xchg
aam
sbb
sub
xchg
fs
stos
and
fiaddl
cli
retw
push
divl
add
outsb
pop
loopne
cmpsl
push
clc
sarl
pop
sub
dec
cli
sahf
mov
cs
lock
call
pop
shrb
das
mov
popf
loop
mov
rolb
out
or
sbb
mov
mov
push
xor
inc
cmp
jb
cld
or
mov
cmpsl
nop
mov
aaa
mov
mov
movsb
dec
arpl
orl
jmp
shlb
cwtl
sbb
mov
pop
pusha
pop
jp
movsl
andb
pusha
inc
push
dec
mov
pop
mov
notb
sub
xchg
mov
push
mov
fisubl
jne
out
cmp
mov
jp
mov
stos
xchg
mov
rolb
leave
lea
fsubrs
xchg
and
xor
sahf
lods
mov
out
sub
test
push
insb
aaa
nop
sti
jl
test
pop
add
cmp
jb
adc
mov
sub
mov
stos
or
or
push
loop
mov
adc
jle
dec
add
jmp
push
sbb
xchg
xor
or
sbb
out
add
lret
popa
jbe
push
shll
push
mov
pop
xor
cmpb
sbb
fldl
mov
mov
mov
repnz
xor
jns
jns
xor
cmp
inc
faddl
jmp
jl
adc
dec
fs
test
movl
mov
add
add
jge
sbb
add
js
push
aaa
loope
add
push
sub
xchg
int3
push
test
mov
add
jno
lods
inc
movl
cmpb
push
lods
fimuls
cmp
push
mov
or
sub
or
cwtl
popf
arpl
mov
push
mov
out
movsl
popa
and
cmp
pop
jnp
pop
or
arpl
frstor
adc
add
pop
xchg
add
push
scas
inc
imul
test
negl
cmp
bnd
nop
pusha
jp
subb
xor
andb
enter
test
add
sub
cmp
push
lahf
int3
mov
arpl
or
push
iret
lahf
jge
inc
call
add
icebp
lea
ljmp
mov
int3
je
nop
ja
cmp
rclb
cmp
rcrb
xor
addr16
pop
adc
cmp
and
jno
dec
adc
rcl
rorl
adc
sub
test
push
xor
fildl
jne
pop
cmp
lock
jmp
cmp
sti
pop
pop
and
pop
lea
sti
rep
bound
inc
xor
or
adc
adc
outsb
or
sbb
cmp
jae
cmpl
pusha
lock
add
sbb
call
arpl
mov
jnp
and
jne
in
and
jae
push
push
mov
xor
push
mov
negb
stos
pop
push
loopne
adc
push
pop
data16
roll
sub
sub
sbb
adc
lock
cmp
xor
or
pop
inc
inc
mov
xchg
testb
mov
mov
inc
xchg
pop
mov
daa
inc
or
cmp
jne
ss
inc
scas
sub
rolb
fbstp
andl
push
rcrb
push
jge
mov
mov
mov
sub
push
or
or
ret
mov
addb
mov
push
hlt
mov
cmpsb
push
mov
jbe
and
xchg
sarl
cwtl
adc
call
movl
cld
sub
or
xor
aad
cmp
inc
xlat
ret
testb
push
fadds
inc
mov
pop
test
cmp
xchg
into
add
lret
jg
xor
loop
mov
mov
push
push
dec
pop
sar
cmp
call
xchg
dec
add
or
add
push
or
push
cmp
jg
push
add
cmp
pusha
ljmp
mov
add
ret
cwtl
mov
loope
lock
movsb
adc
jno
incl
daa
xchg
mov
ja
jae
rclb
and
sbb
xor
sbb
push
and
pop
pop
out
add
fs
sbb
cmp
inc
lods
data16
orl
sbb
imul
sarb
dec
jne
adc
decb
lods
movsb
add
ret
add
clc
push
sub
lock
inc
sbb
or
int3
fs
mov
sub
mov
jmp
jge
je
int
xor
pop
notl
outsb
call
pop
cltd
out
mov
push
shrb
cmp
and
push
icebp
cmp
fisubl
sbb
and
or
imul
pop
clc
stos
sub
xor
aad
mov
sub
gs
leave
adc
shlb
pop
mov
jle
mov
add
inc
sbb
cmpsl
and
adc
mov
xlat
add
mov
mov
call
mov
jo
insb
add
inc
cmc
or
icebp
jp
testb
sub
pop
je
mov
ds
aad
nop
push
cmp
ds
xchg
pushf
fstl
insb
loope
cmpb
outsb
arpl
or
cmp
dec
push
adc
dec
adc
lods
adcb
or
push
icebp
dec
dec
add
outsb
cmp
je
and
lret
push
shrb
lock
inc
sub
sar
cmp
jbe
or
add
mov
adc
lret
dec
xor
mov
lret
call
add
jecxz
pop
push
shl
inc
xchg
push
push
das
call
in
mov
push
cli
mov
adc
pop
lea
inc
xchg
push
orl
inc
or
and
ja
in
adc
orb
ret
and
adc
jb
push
push
inc
dec
inc
cmp
cmc
leave
jl,pt
pop
in
ljmp
pusha
lea
add
pop
lret
aas
push
insl
xor
dec
or
std
add
sbb
inc
fwait
and
pop
arpl
aas
cmp
mov
mov
and
dec
add
stos
int
add
add
mov
push
push
push
push
loop
jp
pop
add
push
push
jge
in
and
xor
dec
sbb
pop
adc
sbb
testb
rcrb
jmp
dec
imull
mov
orl
jne
aam
jle
sub
negb
pop
cmp
add
sub
aad
jae
jb
pushl
adc
ja
mov
pop
or
jmp
xor
jae
inc
xchg
stos
jbe
in
jmp
and
or
adc
bound
sbb
test
loope
and
and
cmp
in
cmp
pop
xor
push
outsl
inc
mul
inc
jns
push
xor
and
jns
lods
add
push
dec
adc
sbb
inc
and
inc
sub
imul
xor
xchg
scas
push
ljmp
and
enter
out
pop
repnz
das
xlat
sbb
clc
xchg
pop
sbb
insb
and
dec
mov
js
sbb
daa
or
leave
imul
dec
ja
cmp
and
adc
enter
adc
ss
insb
arpl
dec
or
or
cmp
addr16
fcoml
pop
fldt
je
outsb
fldt
mov
cmp
xchg
xlat
and
popa
and
incl
add
nop
cmp
rclb
pop
cmove
addb
or
lea
jecxz
mov
cmpsb
js
das
in
shlb
cmp
and
into
nop
jl
test
pop
fiaddl
cmp
add
enter
lcall
add
xor
mov
lea
push
push
mov
sti
jae
mov
mov
out
lods
add
fsubs
add
inc
add
fs
add
in
js
cmp
add
xchg
and
add
in
and
in
in
sbb
cmpb
daa
cmp
sbb
subb
jb
sbb
sub
sbb
or
jmp
and
fsubrs
cmp
pop
push
sbb
inc
push
addr16
scas
and
and
xor
or
xor
xor
sub
mov
mov
pop
cmp
inc
dec
xchg
out
lret
leave
sarb
cmp
or
mov
mov
jmp
push
mov
push
add
cmpsb
or
movsb
shrl
adc
adc
icebp
pop
xchg
outsb
sbb
adc
sbb
sbb
mov
decb
add
or
adc
xor
xchg
ret
cmpsb
sub
xchg
add
pop
inc
inc
data16
push
or
jb
push
push
lea
add
sub
or
adc
icebp
or
insb
mov
push
lock
mov
pop
pop
pop
inc
adc
sarb
and
sahf
push
addl
add
push
or
popa
adc
pop
sbb
push
mov
mov
cmpb
loop
scas
out
leave
jge
jb
dec
pop
popa
xchg
mov
or
adc
movsl
xchg
ficomps
aad
or
add
cwtl
adc
orb
jo
and
pushw
mov
fimull
in
ss
ds
pop
jo
xchg
pop
sbb
fsubrl
dec
out
and
imul
clc
pop
leave
rorl
pop
push
lds
dec
clc
push
pop
and
test
xor
xor
pop
or
lock
push
xchg
outsl
sub
add
es
lret
js
add
inc
and
ftst
sbb
punpckhwd
hlt
lods
pop
xor
xchg
roll
push
xor
fidivrs
stos
cmpsl
rcll
pop
js
ja
jne
and
xor
pop
add
je
push
inc
mov
or
outsl
add
orb
add
cs
aaa
xor
dec
xor
or
sbb
add
cmpsl
js
mov
rol
adc
add
divl
sbb
jge
jg
imul
imul
inc
jno
push
mov
fwait
xor
mov
inc
jmp
jecxz
xor
cmp
mov
cmc
aaa
jmp
mov
sbb
add
in
jmp
pop
lock
jno
push
rorb
clc
push
and
call
cmp
jg
mov
pop
dec
neg
pop
jb
loop
jmp
and
jo
push
inc
dec
fmuls
sbb
jecxz
xchg
imul
jmp
inc
xchg
sbb
push
or
sub
sub
or
fs
in
dec
mov
rcrl
or
daa
or
or
fimuls
testb
add
pushf
ret
fstpt
jp
out
and
arpl
int3
je
popa
mov
in
outsl
das
or
lock
andb
fists
xchg
fsubrl
ret
pop
mov
ss
fidivs
sbb
enter
jmp
rorb
push
movl
dec
mov
add
les
mov
and
test
xor
or
imul
mov
push
ret
sub
lock
sbb
xor
adc
or
arpl
outsl
leave
sub
clc
xor
cmp
dec
lods
inc
cmpsb
repnz
fsubp
xor
sarl
fisttpll
pop
repz
push
mov
and
jae
imul
xor
in
lahf
xchg
pop
out
mov
xor
adc
ficoml
ds
and
xlat
imul
ret
mov
addb
loopne
add
and
outsl
or
add
cmp
jl
cmp
jle
cmp
push
jp
or
pop
add
cmp
mov
bound
call
xchg
fdivr
cmp
jge
mov
pop
and
cmp
jl
test
je
cmp
je
jne
pusha
int
pop
pop
sbb
lcall
iret
and
mov
jg
enter
push
mov
xor
fsubrs
testl
into
fisttpll
and
dec
adc
mov
test
aaa
jb
mov
dec
filds
enter
out
mov
mov
pop
rorb
jl
call
xor
add
inc
mov
xor
rcrb
adc
inc
mov
pop
ss
dec
lock
cmp
mov
push
mov
add
inc
add
push
cli
or
loop
sbb
rclb
lods
dec
inc
out
mov
mov
lea
aam
scas
sbb
fcoml
sarb
xor
sub
mov
into
loopne
add
lods
je
test
scas
mov
in
clc
pop
pop
mov
cmp
call
sti
push
add
and
ret
or
cmp
aaa
push
test
les
movsl
pop
mov
shlb
pop
xor
ret
movq
or
mov
je
add
lea
push
lea
sbb
cmp
and
xchg
pop
push
pop
adc
push
cmp
pusha
jo
adc
adc
cmp
push
arpl
pop
xor
mov
not
mov
mov
sbb
or
das
jns
xchg
push
testb
adc
or
repz
pop
pop
pusha
sarb
push
push
and
cmp
sahf
jle
insl
mov
pop
dec
ljmp
lret
jge
sbb
cwtl
sub
push
cmp
add
add
sbb
push
pop
movsl
or
inc
inc
inc
insb
adc
inc
and
jo
inc
gs
and
add
aas
pop
rcll
mov
dec
sahf
push
imul
repz
sbb
test
pop
pop
xlat
jno
push
inc
mov
mov
pop
mov
cmp
and
or
or
pop
push
testl
pop
or
nop
icebp
dec
sti
imul
xchg
ret
sbbb
inc
aaa
popf
outsb
xchg
int3
jle
and
fs
or
sbb
outsl
lea
push
xchg
xlat
loope
les
dec
inc
add
icebp
sub
fisttps
push
sbb
jmp
stc
lock
add
outsl
femms
movsb
ret
add
cmp
and
and
add
and
add
fwait
arpl
push
sbb
in
lock
inc
jl
fucomi
sbb
jl
xor
test
into
pop
push
xchg
movsb
scas
test
pushf
adc
adc
inc
inc
cmp
stos
sarb
and
ret
fwait
inc
adc
inc
pop
mov
adc
sbb
xchg
adc
fwait
cwtl
or
lods
fidivl
jmp
mov
lahf
add
adcl
add
and
fs
popf
mov
fwait
ret
mov
ljmp
out
add
mov
mov
clc
and
daa
je
rcl
add
cmp
and
test
push
xor
mov
sub
hlt
xor
pop
mov
jmp
dec
clc
adc
pslld
xor
adc
je
adc
push
jle
dec
add
and
arpl
jo
inc
inc
and
in
and
mov
in
mov
repnz
jmp
and
data16
jne
repz
and
js
sub
xor
push
insb
addr16
pop
cmpsb
adcl
add
clc
xchg
clc
sub
xchg
outsl
enter
rclb
and
push
sbb
cmp
push
rorl
mov
adc
loop
aaa
dec
fsubl
nop
jnp
addb
pop
mov
dec
jge
enter
mov
pushf
test
cmpsl
add
adc
xor
jge
xchg
xchg
or
mov
inc
add
js
outsl
push
sbb
or
add
sbb
fidivrl
into
push
mov
mov
pop
lods
inc
sub
rcrl
mov
addl
sub
push
movsl
xchg
lds
cmp
or
pop
push
inc
inc
mov
cs
sarb
push
hlt
jg
mov
sub
mov
sub
inc
and
pusha
pop
sub
mov
cli
adc
cmc
orps
ret
loop
loope
subb
lret
cld
repz
sub
in
or
sub
lea
inc
pop
repnz
mov
adc
jne
push
push
ret
stos
lock
pop
out
popl
mov
imul
std
mov
cmp
push
adc
call
mov
mov
mov
adc
movsb
mov
addb
cmc
add
xchg
aam
ret
push
icebp
lods
xchg
push
pop
bound
add
call
shrb
or
push
adc
mov
ret
cmp
sub
xorb
adc
add
int3
jecxz
jmp
cwtl
pop
adc
inc
out
or
jmp
in
jp
pop
push
pop
dec
pushf
shll
add
pop
push
mov
and
outsb
lret
add
loopne
insl
jmp
mov
popa
adc
mov
adc
addb
dec
and
or
cmp
cmpl
jns
adc
fst
or
sub
in
sub
and
orb
icebp
cmp
jne
push
pushl
jae
cs
test
sbb
add
dec
in
inc
sbb
push
sarb
je
addr16
test
daa
sub
lahf
and
loopne
inc
adc
les
pop
or
loop
movl
testl
push
inc
inc
and
push
and
push
sub
or
mov
mov
push
push
pop
je
fldl
mov
in
fstpl
dec
in
iretw
outsl
fistl
push
cmp
adc
jne
push
repz
cmp
divb
or
jne
or
add
repz
jne
or
lock
or
fstpl
andl
rolb
out
cmp
cmp
movsl
and
push
ret
mov
jnp
mov
js
mov
sti
add
lret
lea
fstl
jecxz
ret
xor
mov
jp
mov
mov
xor
and
xlat
mov
pop
rol
rorb
and
sbb
inc
enter
jg
dec
push
and
add
adc
loop
add
push
cmpsl
loope
cmc
sbb
movsb
push
aad
add
and
je
insb
inc
mov
jne
push
rcrb
or
pop
mov
loop
std
push
push
les
pmaxub
out
fmull
fcmovbe
lcall
dec
cs
xor
add
movb
jge
jecxz
aam
sbb
add
push
jb
push
idivb
mov
test
dec
aas
adc
aam
mov
jbe
jo
xor
ds
dec
and
add
add
xor
jbe
pop
daa
in
push
setbe
sub
and
push
cmp
orl
jne
das
add
add
hlt
mov
or
enter
pusha
inc
sahf
pop
leave
shlb
add
xor
cld
adc
sbb
push
iret
mov
adc
xor
cmpb
sub
mov
repnz
or
or
dec
fst
xchg
cwtl
rclb
lods
addl
out
lds
push
pusha
dec
push
inc
ficomps
es
sub
sub
sub
sbbl
fldt
es
add
repnz
les
out
mov
xchg
add
mov
nop
xor
cltd
jno
add
xor
add
repz
imul
push
pop
adc
enter
xchg
out
add
enter
push
fmull
int3
adc
xchg
imul
fs
fmuls
xchg
mov
or
leave
enter
mov
adc
imul
xor
call
inc
mov
add
rolb
imul
dec
mov
adc
xchg
mov
sub
insb
fadds
and
push
push
addl
xor
xor
inc
sub
imul
mov
loope
push
dec
sar
push
mov
pop
mov
pop
cmp
inc
mov
add
cld
cld
and
ret
cli
or
and
shlb
pop
mov
in
rolb
sub
sub
or
add
mov
push
cmp
in
mov
xor
adc
int
repnz
push
add
xor
je
add
mov
loopne
fwait
lock
fucomi
jae
int
lea
cmp
jl
enter
dec
adc
cmp
shrb
pop
sahf
xchg
ret
and
js
call
pop
lods
cmp
add
str
pandn
xchg
aad
adcb
or
jo
pusha
lret
add
int3
pop
pop
movsl
dec
xor
rcll
mov
mov
xchg
cmpsb
in
in
add
add
adc
rclb
dec
sbb
ret
cmp
test
or
add
push
mov
test
xor
nop
mov
fstl
inc
and
add
mov
xchg
mov
call
xor
shrb
das
mov
aam
pop
cmovo
pusha
cmp
xor
mulb
jmp
popa
add
lods
inc
cmp
fdivl
outsl
lock
sbb
arpl
sub
mov
dec
xchg
lea
ret
jae
inc
add
xor
push
test
rclb
into
mov
movsl
cli
loopne
shr
cltd
shlb
cwtl
cmc
push
xor
mov
jle
and
sub
push
push
push
dec
push
test
or
inc
and
adc
dec
xchg
sarl
in
mov
sub
dec
dec
add
add
andl
clc
inc
mov
inc
shrb
subl
mov
or
push
xchg
ljmp
push
insl
fisubrs
scas
fmulp
loope
sub
mov
je,pn
fistl
lcall
push
push
fwait
stos
daa
je
test
mov
jae
rolb
decb
in
inc
sub
idiv
cmp
pop
mov
inc
mov
push
pop
insb
sub
or
dec
cmc
dec
test
mov
xor
ret
push
pop
dec
pop
test
mov
lret
dec
lock
pop
xor
or
xor
or
movl
cmpsb
aad
fwait
dec
mov
pop
loop
loop
inc
dec
lret
out
or
xor
sub
cmc
mov
mov
into
imul
in
dec
div
in
pop
xor
jo
sub
enter
pop
les
cmp
and
shlb
lods
mov
pop
adc
das
push
clc
mov
mov
inc
bound
test
pop
push
call
dec
xor
push
in
and
or
adc
cmp
roll
lods
or
mov
mov
movsb
pop
sub
sbb
push
imul
xchg
xchg
or
push
xchg
inc
jnp
andb
fmuls
movsl
sub
stos
push
xor
shll
popf
negl
jnp
cltd
pop
push
inc
sbb
sub
push
xchg
mov
movsl
mov
shll
jo
and
pop
cmp
xor
or
pop
or
dec
adcl
cmp
popf
xchg
add
adc
iret
loop
les
cmp
inc
test
test
or
fildl
cmp
push
cmc
mov
ljmp
xor
les
add
test
pop
cmpsl
movsl
gs
cli
sub
addl
push
mov
push
repnz
pushf
xchg
xor
dec
cmpsb
popa
mov
add
ds
shrl
cmc
ret
iret
push
add
xor
sub
aaa
mov
jle
adcl
popa
mov
ret
aad
gs
int
cmp
bound
fdivs
dec
add
add
popa
or
add
insb
and
and
pop
dec
cmpsb
mov
sub
rorl
ret
jecxz
mov
adc
xor
adc
dec
test
or
rorl
dec
push
mov
repz
popf
xchg
test
sti
pushl
enter
cmpsl
out
push
test
push
out
push
lea
shl
add
jmp
jle
mov
cmp
cmpl
lock
jge
push
jae
push
sbb
pop
int3
and
shrl
clc
scas
jl
pop
mov
add
test
dec
adcb
dec
add
jg
ret
dec
dec
jp
dec
enter
jne
push
lods
jp
adc
mov
add
arpl
add
sbb
sbb
fldenv
jp
jl
rcr
lods
adc
fwait
inc
or
pop
xor
mov
mov
sub
movsl
add
add
das
popa
xchg
jo
and
push
mov
inc
lcall
inc
scas
call
out
mov
inc
adc
jne
cmp
mov
mov
pop
sub
and
adcb
inc
mov
dec
mov
das
sub
mov
sub
jecxz
push
nop
or
xor
hlt
dec
push
sub
movsb
add
jg
es
cld
adc
lret
pop
and
jne
ret
mov
jecxz
in
add
rol
add
das
pusha
mov
sbb
inc
pusha
les
scas
pop
mov
add
and
frstor
xchg
jl
sbb
negl
add
mov
jle
scas
add
or
and
sbbl
aas
inc
cwtl
jg
jle
jns
xor
sbb
stc
push
xchg
pop
xchg
and
test
mov
sub
adc
jg
jle
or
pushl
inc
xor
cmp
and
xchg
cltd
jo
dec
pop
sbb
addb
out
roll
shl
stos
add
test
dec
jnp
mov
inc
and
xchg
jne
push
inc
xor
mov
add
add
dec
sub
push
test
push
push
jns
js
dec
call
push
or
push
add
lret
add
add
adc
jns
sub
dec
test
xor
jns
push
pushf
pop
pop
add
mov
or
pusha
jne
inc
or
xchg
push
pop
enter
mov
add
inc
insl
or
mov
or
jns
ljmp
or
xor
xchg
daa
repnz
and
adc
inc
je
andb
inc
iret
shrl
mov
loop
xchg
data16
punpckhdq
sbb
subl
push
inc
lods
mov
cmpsl
or
adc
inc
sbb
jo
lret
leave
and
pop
cmc
sbb
mov
pop
cmp
dec
sbb
mov
add
pusha
mulb
pop
gs
std
adc
and
add
mov
cmp
imul
and
and
popa
push
adc
and
inc
or
je
cmc
fldl
sub
xor
sub
notl
sbb
adc
js
cld
addb
cmpl
or
cltd
insl
imul
ror
popa
jns
fwait
insb
test
movsb
ror
and
and
sub
loop
inc
outsl
inc
cmp
pop
scas
movsb
pop
and
or
inc
cmp
je
mov
in
stc
xor
push
push
pop
lret
sbb
shlb
sub
lcall
and
leave
pop
add
pusha
movsl
and
dec
pushf
ja
jb
adc
inc
cmc
xchg
or
pop
mov
ja
sub
dec
xchg
pusha
ja
jne
das
dec
mov
and
inc
or
mov
popf
mov
imulb
or
ret
add
imul
movsb
je
jnp
jnp
push
push
out
faddl
pop
jmp
add
mov
add
inc
ret
or
pop
test
or
adc
shrb
dec
and
mov
outsl
sbb
mov
incl
cs
mov
push
and
add
out
in
sbb
dec
cwtl
fsubrl
inc
ret
hlt
add
adc
add
pop
sti
or
cs
or
jmp
mov
and
lcall
xlat
popa
in
loop
xor
jne
scas
pop
test
jmp
inc
sbb
ret
daa
or
and
add
test
push
aaa
and
inc
dec
out
push
xor
and
push
lret
inc
xor
out
pop
add
push
adc
or
and
adc
inc
bound
cmp
xchg
xchg
inc
push
out
in
sub
push
hlt
ss
xchg
arpl
add
or
jbe
mov
mov
lea
inc
in
out
sub
mov
js
xor
pop
daa
in
mov
ja
push
mov
inc
dec
xchg
std
jle
jl
mov
rcrb
dec
or
es
mov
mov
mov
xor
push
cli
fmull
adc
imul
mov
jb
popf
jno
pop
outsb
add
or
push
mov
test
xor
repz
decl
or
repz
cmp
jae
sub
xchg
pop
inc
add
mov
jp
sub
inc
jbe
xor
adc
inc
adc
xor
shrl
lcall
mov
cmp
xor
inc
xor
jmp
rcrl
test
inc
negl
inc
jl
push
mov
xor
mov
dec
pop
test
ret
mov
and
adc
sti
jmp
imul
mov
add
inc
mov
pop
lahf
lods
es
adc
add
movsl
or
push
cmp
je
cmp
push
pop
and
or
and
sbb
andb
add
movsl
mov
mov
loopne
mov
jmp
into
cli
xchg
inc
sbb
jmp
fwait
mov
pusha
inc
cmp
add
cmp
flds
fsubs
add
add
adc
sbb
movsb
jae
and
add
sbb
fstl
icebp
in
shrl
sahf
fstpl
fldl
std
dec
loopne
les
adc
clc
push
add
push
dec
mov
sar
enter
or
fldl
or
adc
dec
bound
add
aas
mov
sbb
clc
and
insl
clc
orl
sbb
and
out
out
cmp
sbb
xchg
sbb
and
pop
fsub
pop
fsubrp
test
mov
loopne
mov
shl
scas
sar
imul
jno
mov
xrelease
and
sub
shrb
scas
add
sbb
int3
sbb
cmp
je
add
es
mov
aam
xor
mov
inc
sbb
je
sahf
pop
jns
sub
pusha
sub
push
xchg
out
sbb
push
xchg
insb
xorb
xor
push
add
pop
push
js
or
iret
jg
push
push
dec
sub
push
cmp
repnz
test
outsb
movsl
xlat
das
sbb
fisubl
mov
mov
push
and
in
and
push
inc
sahf
pop
jae
and
push
cld
in
sbb
sub
lea
lret
nopl
push
inc
nop
adc
mov
sbb
je
cld
pop
xlat
idivb
inc
mov
push
push
in
sbb
or
mov
cmp
adc
add
repnz
push
and
out
and
dec
dec
and
and
repnz
sbb
add
push
sub
jo
pop
xor
pushf
xor
fstps
push
jecxz
dec
popf
in
sbbl
mov
fildll
mov
inc
je
fcompl
daa
jns
cmp
mov
and
xor
or
or
push
push
pop
repnz
push
xchg
xchg
jl
dec
xor
or
notl
jl
ss
mov
pop
repnz
adc
adc
dec
repnz
insb
adc
sub
out
and
fcmovbe
xor
repnz
xchg
sbb
sbb
add
mov
sahf
punpckhbw
inc
xchg
movsb
sub
push
leave
notl
inc
push
xor
fs
in
dec
adc
cltd
add
sbb
and
sbb
scas
push
or
mov
pushf
fdivl
mov
shlb
adc
dec
add
sbb
pop
sbb
sbb
cmp
repz
dec
pop
insl
iret
repz
jle
mov
out
or
sub
out
pusha
jno
xchg
movsb
out
sahf
out
xlat
call
int
sbb
pop
cmp
repz
adcl
addb
sbb
push
mov
repnz
jmp
and
xchg
cmp
lods
add
lds
cmp
mov
mov
insl
jmp
lds
les
adc
mov
xor
jno
sub
dec
push
sub
adcl
cwtl
js
push
mov
jne
or
mull
jne
sub
cmp
int
in
mov
adc
inc
mov
ficompl
loopew
jp
add
aaa
inc
lret
pop
add
and
mov
popa
xor
jno
mov
add
fcmovnbe
fs
loopne
and
shr
ss
iret
xor
mov
cmp
sbb
and
xor
adcl
adc
int
push
test
mov
xor
mov
add
add
mov
inc
jb
rclb
mov
push
sub
or
add
insl
fwait
pop
sbb
call
mov
push
cmc
dec
xchg
and
daa
cmp
adc
cmpsb
adc
aad
nop
and
cmp
xor
aaa
in
push
mov
filds
loope
in
or
mov
out
add
dec
lock
out
or
mov
or
xchg
mov
sbb
enter
mov
pop
add
xchg
mov
aam
add
sub
jle
jnp
hlt
add
add
aaa
sub
mov
arpl
in
pop
add
call
iret
pop
cs
call
rolb
mov
arpl
push
push
mov
adc
xchg
add
push
mov
inc
mov
loope
adc
push
push
int
and
jb
add
enter
mov
lock
or
pusha
mov
adc
sbb
rcrb
xchg
push
rcl
adc
mov
in
shr
cltd
add
add
pushf
xchg
push
and
sub
adc
mov
leave
out
pop
enter
push
or
and
dec
and
push
inc
ds
or
roll
add
jmp
add
xchg
shl
or
or
dec
stos
loope
mov
adc
leave
inc
adc
and
in
sub
in
fisubl
dec
sub
test
call
and
add
leave
add
adc
rcll
cmp
ret
add
sbb
push
jl
movsb
test
add
xchg
or
mov
mov
les
int
lds
add
cmpsl
mov
pop
xchg
cmpsb
sahf
adc
add
enter
leave
lock
xchg
sub
fisttpll
scas
or
inc
bound
mov
repz
mov
push
mov
cmp
test
aam
jb
ret
adc
movsb
pusha
sub
leave
jo
icebp
add
bound
nop
cmp
and
inc
add
inc
pusha
lods
pushf
xor
orb
add
or
ja
adc
adc
inc
rcrb
inc
or
push
pop
xchg
inc
push
lcall
fldcw
lock
pop
or
std
or
nop
inc
or
mov
add
sub
lea
xchg
mov
adc
push
lods
into
xchg
sbb
cmpsl
xchg
sbb
mov
jo
adc
jno
pop
adc
mov
lock
seto
add
sbb
lcall
stc
pop
push
xor
add
daa
mov
or
add
lcall
mov
cmp
push
jae
pop
daa
addb
std
adc
scas
shrl
mov
or
popa
mov
rcl
or
push
inc
and
xor
nop
imul
ret
sbb
lods
scas
or
repnz
inc
stos
lods
scas
sbb
lret
inc
add
adc
mov
push
in
add
and
add
xor
pop
jb
adcl
or
or
push
je
lea
lea
mov
sbbb
repnz
mov
adc
add
dec
ret
sbb
stos
dec
ret
movsb
sub
cltd
dec
dec
add
add
mov
xchg
in
mov
test
inc
addb
inc
aad
mov
scas
adc
int3
or
adc
test
jge
cmpsl
add
test
xor
push
push
bound
add
seta
add
popa
subb
and
test
push
pusha
push
xor
in
sub
cwtl
and
les
sub
add
mov
ljmp
or
rorb
xchg
imul
aaa
lods
call
dec
loopne
scas
push
adc
rcll
shll
xchg
fstpl
mov
sub
cmp
test
call
in
cmp
and
cmpsl
fcmovb
insl
push
lds
xor
cmp
push
repz
mov
inc
pop
inc
or
add
cmp
aaa
pop
adc
add
jecxz
cmpb
je
add
dec
inc
lock
in
cmp
shll
out
or
xchg
add
cltd
or
orb
test
mov
add
sub
mov
test
or
pop
adc
sbb
sbb
cmp
and
add
sbb
cmp
xor
bound
sub
imul
pop
cmp
pop
push
or
add
ss
add
scas
mov
scas
add
mov
shll
jl
cmp
sbb
mov
shrl
test
add
pop
insl
jmp
push
inc
xor
fcmovu
or
or
dec
fildl
sbb
dec
and
add
mov
mov
clc
push
or
and
jp
add
test
sbb
or
cs
and
and
push
stos
xorl
cmp
push
sti
sbb
push
push
mov
adc
push
mov
gs
xor
push
adc
jecxz
pusha
push
sub
and
sub
mov
pusha
mov
sub
andl
call
cmp
jne
stc
int3
xchg
mov
adc
shll
nop
rcrb
push
fsubs
pop
jno
add
pop
mov
add
fisttps
lea
arpl
insb
sbb
movl
cmpsb
lea
loopne
hlt
sub
push
loopne
out
lods
inc
add
jmp
loopne
add
pop
sbb
test
and
and
jmp
or
sbb
ret
pop
iret
xchg
lods
push
ss
fcompl
je
orb
dec
insb
inc
pop
shlb
pusha
test
jecxz
add
pushl
sti
adc
xchg
inc
add
dec
imul
mov
mov
add
adc
cli
loopne
fisubl
faddl
jle
lcall
roll
cmp
mov
jl
pop
imul
jl
or
sbb
popa
jp
adc
sti
mov
push
cmp
je
mov
mov
push
add
inc
jmp
movb
jmp
loope
mov
push
pop
cltd
idiv
pusha
fistpll
pop
fisttpll
xlat
lds
mov
xchg
hlt
inc
movsb
fdivrs
sub
paddd
push
and
mov
or
or
jo
movb
movsb
test
or
mov
jae
mov
add
call
inc
stc
push
add
in
in
in
jns
frstor
hlt
incb
cmp
lret
inc
repnz
mov
mov
pop
sahf
into
fsubl
mov
adc
push
push
sub
add
pop
jle
mov
or
lock
sarl
and
mov
divl
xor
in
cmc
push
daa
xchg
les
mov
push
std
push
lret
cwtl
jmp
mov
and
or
lcall
pop
add
enter
xor
mov
inc
enter
cmp
mov
mov
popf
xor
and
jl
fsubrl
dec
jb
imul
and
mov
icebp
and
xchg
xchg
xor
jle
stc
lock
pushf
adc
or
dec
das
loopne
and
in
dec
int
push
and
je
cmp
iret
pop
movsb
shlb
sbb
and
adc
mov
cmpl
push
sub
mov
sarb
jge
js
enter
jns
push
pop
push
push
sbb
cltd
les
stc
sbb
push
shl
fwait
nop
sbb
add
movsl
sbb
out
adc
dec
pusha
xor
and
in
fsubr
nop
push
fmuls
jns
inc
pop
fmuls
imul
in
in
faddp
add
cmp
aam
movsb
mov
and
enter
stc
and
and
leave
enter
loop
fildl
fsubr
sbb
jbe
or
enter
push
cmp
and
arpl
xchg
es
sbb
daa
inc
popa
leave
and
das
mov
dec
sbb
sub
add
and
xorl
pusha
cwtl
dec
jb
xchg
dec
nop
pop
addb
orl
sbb
push
fs
dec
mov
adc
xchg
pushf
xchg
mov
inc
cmpsb
dec
test
jl
adc
mov
loope
pop
dec
xor
fsubr
call
fsubl
sub
bndstx
jge
mov
movsl
sub
shlb
cmp
jecxz
dec
int3
mov
aaa
clc
stos
xor
cmpb
add
movsb
add
das
xor
dec
push
inc
ret
loopne
enter
push
daa
jne
add
in
inc
push
mov
or
push
jno
cmpsb
movsb
fcompl
movl
fmull
add
inc
nop
pop
ret
into
adcl
add
jl
test
push
mov
jge
push
push
cmp
repnz
push
shlb
or
adc
js
add
hlt
add
or
pop
push
in
cs
int3
scas
arpl
mov
push
mov
bound
or
aam
sub
nop
mov
pop
shlb
dec
rorb
add
loopne
pop
aam
mov
dec
add
mov
jno
cltd
gs
sbb
loope
or
push
xor
call
xchg
ss
mov
inc
mov
push
pop
pop
mov
jp
imul
dec
or
addl
xchg
sbb
and
out
mov
rorb
xor
dec
cmp
imul
lock
inc
push
jbe
jo
mov
add
scas
mov
in
push
sbb
stos
push
daa
test
mov
loopne
or
sahf
inc
cmpsl
mov
neg
sub
ds
xor
xor
les
jg
ret
fs
and
xchg
xchg
dec
mov
les
add
movsl
pop
mov
pop
adc
adcb
xchg
push
adc
lds
inc
dec
xchg
or
mov
ss
ret
jmpw
lods
push
push
sti
pop
popa
loopne
test
jmp
push
push
test
gs
scas
pop
imul
or
cmp
ss
push
ja
movsb
mov
sbb
mov
lret
adc
pop
xchg
stos
mov
sub
push
icebp
mov
cmp
fsubl
in
and
outsl
dec
jo
mov
subb
and
add
addr16
adc
pop
daa
add
pop
pop
inc
pop
push
or
lea
pusha
ficompl
mov
jge
adc
xchg
fsubrs
or
sub
adc
pop
mov
fcoml
mov
inc
sub
cli
and
rclb
in
movsbl
and
cs
or
add
push
mov
hlt
jg
inc
mov
sub
adc
out
add
cmp
or
pop
int3
lar
shrb
fsts
or
xchg
call
xchg
and
inc
xchg
inc
in
aad
shl
scas
imul
stc
mov
daa
insb
and
xchg
xor
xchg
rcrb
out
inc
sbb
push
push
sbb
shrb
imul
mov
cmp
sub
xchg
jge
add
movswl
sbb
or
cmp
xchg
push
imul
sbb
and
jl
cli
or
ljmp
or
ss
pop
imul
add
cmp
push
sbb
jne
mov
push
jne
jmp
mov
mov
testb
cmpsb
aam
aaa
int3
cmp
test
xchg
test
sahf
push
dec
or
imul
aam
or
jne
imul
xchg
push
jo
and
cmovs
adc
mov
mov
imul
add
cmc
fdivs
fdivl
int3
add
sbb
loopne
loopne
cmp
je
inc
jmp
and
lock
test
cmp
cmpl
fadd
cltd
cmpsl
or
icebp
and
xor
adc
adc
int3
ss
add
aaa
lds
add
inc
imul
shrb
adc
enter
push
mov
push
sbb
fnsave
push
xchg
sbb
jmp
add
mov
pop
inc
xor
push
rcrb
mov
push
imul
out
sbb
movsb
in
adc
mov
push
stos
dec
and
rcrb
aaa
mov
inc
pop
xorl
in
add
pop
dec
cmc
in
adc
adc
es
mov
bnd
inc
cmp
or
mov
aam
insb
pop
inc
add
xchg
add
xor
mov
je
mov
and
dec
push
sub
jne
ja
test
xchg
cmpsb
dec
jmp
pop
mov
cmp
in
stc
ds
sbbl
cmp
shrb
xchg
sub
gs
push
cmp
in
cmp
inc
cmp
sub
pop
xor
ljmp
pop
cmp
negl
cmp
adc
cmp
xchg
sahf
data16
inc
adc
mov
je
andb
push
and
adc
nop
ss
sbb
push
adc
and
pop
add
lds
jns
add
xchg
cmovl
sub
mov
inc
push
add
pop
lods
xor
xor
into
sub
cmc
sub
test
xchg
inc
mov
clc
int
add
add
scas
es
cmp
jne
mov
rcl
imul
add
inc
add
mov
push
iret
pop
add
add
mov
jns
ss
jb
xor
rorl
pop
mov
stc
aad
and
sbb
popa
adc
ret
xchg
adc
stc
adc
xchg
xor
and
and
outsb
inc
add
pop
lret
jo
ret
imul
leave
jecxz
in
mov
push
sub
lcall
aaa
lret
dec
pop
or
enter
sbb
loopne
sub
nop
pop
and
add
jno
or
pop
push
add
add
sbb
cmp
and
dec
movb
push
inc
in
or
inc
sti
xor
xchg
lds
xchg
jns
fs
mov
xor
popa
cmp
dec
out
lods
lock
enter
adc
in
inc
xor
inc
push
cmp
aam
and
jnp
pop
insb
mov
adc
rcll
orb
sbb
fsubs
ljmp
bts
mov
std
orb
icebp
imul
xor
ror
mov
aam
push
fwait
adc
jo
pushf
push
test
subl
enter
mov
mov
stos
dec
dec
mov
out
mov
loope
push
xchg
loope
or
bnd
and
ljmp
jl
sub
repz
pop
mov
lods
lret
in
dec
enter
mov
add
add
push
test
aam
movsb
cmp
xchg
stos
sbb
or
push
inc
es
rcl
pop
push
xchg
enter
push
inc
sub
or
loop
add
mov
mov
xor
es
rolb
filds
movsl
stc
mov
mov
fs
push
shrb
es
or
cmp
ljmp
jo
add
imulb
inc
je
push
stc
hlt
popl
and
inc
pop
repnz
and
in
push
mov
fdivrs
shlb
adc
inc
movsl
test
lock
divl
adc
sbb
dec
pop
rcl
dec
xor
test
fdivrs
push
js
jo
sub
pop
in
pusha
insb
push
icebp
loop
pushf
jecxz
push
jne
mov
mov
push
addl
adc
adc
xchg
nop
mov
cmp
pop
fwait
mov
fs
cmp
add
or
addl
fcoms
xchg
and
mov
pop
push
add
or
pushf
sub
xor
jne
testb
jae
mov
andl
fimuls
push
dec
mov
jmp
xchg
jmp
sbb
and
xchg
mov
sbb
jne
inc
gs
jnp
or
push
fmull
loope
pop
xchg
popf
mov
inc
cmp
inc
or
push
inc
or
and
cmp
add
in
and
jbe
ret
bound
pop
mov
mov
pop
out
add
leave
pop
mov
mov
push
adc
mov
daa
aam
mov
mov
pop
and
loopne
fisttpl
les
addl
sub
outsb
cmp
push
push
sti
and
sub
pop
pop
add
mov
jle
popl
popa
push
lock
jbe
out
ret
mov
int
jecxz
shlb
add
add
xor
adc
pop
adc
insb
xor
adc
mov
dec
xor
pusha
and
cmp
or
cmp
add
push
call
sbb
or
push
xchg
mov
gs
jl
or
iret
ds
cmp
xor
aaa
add
lds
lods
sub
push
imulb
outsl
inc
ret
push
fnstsw
pop
or
add
incb
pop
or
mov
repz
adc
and
and
push
and
test
push
inc
roll
rcrb
adc
sbb
das
jno
sub
je
sub
into
pop
or
add
daa
adc
dec
push
outsb
jl
mov
and
or
ss
mov
jo
das
fs
pop
shl
rolb
fs
push
cmp
in
mov
push
fimull
add
mov
xchg
orb
inc
dec
jmp
pushf
lods
scas
inc
xor
push
add
pop
sahf
add
dec
rol
in
adc
mov
leave
pusha
pop
cmp
rolb
orl
shrb
rolb
xor
xchg
aaa
inc
int
add
push
rolb
fbstp
lcall
sub
cli
cmp
push
loopne
sub
add
push
popf
pavgb
and
add
pop
outsb
push
cmp
or
push
sbb
push
jae
es
xchg
fmull
mov
pop
sbb
sbb
cmp
add
xchg
mov
xchg
and
mov
push
dec
pop
mov
insl
iret
in
and
into
adc
sub
or
add
enter
andb
add
xchg
inc
push
jo
dec
or
dec
add
mov
xchg
sbb
xchg
or
stc
xchg
mov
add
sub
pop
cwtl
add
lods
sub
imul
xchg
and
and
sub
jle
sbb
sarb
adc
pop
pop
cmp
out
fwait
mov
mov
lds
dec
shld
aas
shrb
cmp
push
sbb
test
fs
loopne
adc
out
mov
sub
inc
sti
mov
cltd
add
push
test
xor
mov
xor
dec
pop
jo
sbb
sbb
test
dec
pop
cmp
xor
imul
adc
mov
sub
xchg
or
adc
std
popf
ss
ja
sub
or
add
mov
fsubs
sbb
jno
es
cmp
push
inc
sbb
cmp
pop
test
je
push
in
push
sub
push
push
ret
xchg
in
sti
adc
mov
or
movb
adc
loop
shll
cwtl
shlb
leave
and
ret
je
xchg
js
jo
imul
incl
push
ljmp
mov
pop
or
stos
mov
xor
cmp
popf
mov
inc
in
sub
aaa
jmp
sub
inc
jmp
cld
pop
push
daa
push
callw
xor
add
ret
and
fs
push
or
jne
cli
pop
sbb
or
shr
jge
or
jle
imul
fildll
incb
cmp
mov
add
enter
adc
sub
and
dec
or
scas
pop
shll
and
stos
sbb
jns
jnp
fmull
mov
and
bound
test
or
cwtl
add
fcom
incl
mov
mov
mov
push
dec
movsb
jns
xchg
add
sub
cmc
enter
xor
sbb
stos
add
sub
int
dec
fmuls
add
jne
xchg
pop
bnd
pop
or
nop
xchg
sbb
scas
push
shl
sbb
sbb
in
sub
andb
lock
roll
push
outsl
clc
and
jns
daa
pop
lods
add
lcall
pop
or
adc
or
lock
aas
mov
mov
fldt
push
pop
add
and
leave
and
xchg
xor
add
push
mov
or
mov
fcoms
xchg
nop
lock
mov
popaw
adcl
loop
rcr
je,pt
add
mov
add
addl
stc
cmp
pop
adc
lods
sbb
mov
out
adc
shlb
in
and
mov
dec
inc
bound
adc
xchg
sbb
adcb
or
mov
orb
add
sub
cltd
call
and
bound
pop
ret
ret
xchg
jb
sbb
mov
jne
inc
loope
mov
cmp
xchg
pushw
icebp
inc
xchg
jne
cmp
rclb
into
mov
mov
ret
lods
cld
add
dec
leave
mov
dec
jmp
das
dec
sbb
mov
dec
test
mov
add
mov
push
and
insb
push
mov
leave
jb
subb
xor
dec
sarl
xchg
sbb
incl
es
ret
pop
xor
dec
popa
jecxz
mov
and
ret
and
sbb
adc
inc
cmp
pop
jmp
pop
ljmp
mov
xor
rol
or
out
or
shlb
mov
inc
push
mov
scas
xor
push
je
sub
or
or
sub
xor
mov
or
xchg
movsl
pop
or
jmp
mov
pmaxub
inc
push
ja
or
sbb
mov
mov
pop
jbe
add
sbb
and
int3
into
pop
and
push
mov
movsl
leave
xchg
or
lock
dec
pop
psubw
std
adc
shl
pop
cmp
out
andl
jmp
clc
sbb
and
push
ja
in
stos
lea
cmp
cwtl
js
push
mov
cmpl
cld
test
jle
movsb
enter
xchg
into
clc
inc
in
inc
cmp
jb
ljmp
push
outsb
clc
cmpsl
xchg
cmp
pop
repz
add
fdivs
scas
adc
ret
dec
mov
inc
push
ljmp
test
int
mov
push
ret
or
xchg
sti
adc
mulps
inc
xlat
xor
pop
mov
in
sub
adc
dec
xchg
push
pop
iret
pop
mov
aad
or
inc
fs
jle
mov
lea
add
inc
sub
test
mov
rcrb
int3
jle
pop
das
dec
test
xchg
js
mov
bnd
pusha
add
cmp
or
ja
adc
or
sub
mov
lds
push
orl
fsub
or
insb
mov
jbe
rolb
pop
pushf
adc
or
mov
and
cmp
lea
cs
pushf
xchg
pop
inc
push
dec
inc
sub
adc
or
fsts
cmp
cld
xor
jo
xchg
test
les
adc
jecxz
dec
sti
ficoms
xor
pop
mov
xchg
je
mov
cmp
subl
push
and
sub
xchg
inc
stos
xor
cmp
mov
movsb
and
dec
orb
or
in
rcr
std
or
xchg
fstl
xchg
sub
jne
xlat
std
lret
sub
loope
ja
mov
sbb
dec
push
aad
int3
sarb
adc
cmpl
cwtl
aam
xchg
outsl
sbb
mov
push
mov
ret
pop
add
pop
rclb
std
stc
cmp
dec
lret
test
mov
cmp
inc
lea
aad
ret
pop
jb
xor
mov
inc
cmpsl
mov
or
xchg
imul
mov
shlb
jg
jno
sahf
sahf
cmp
aaa
xchg
clc
daa
push
scas
cmpl
pushl
sbb
jmp
popa
fwait
xchg
sub
mov
jno
popf
inc
push
enter
pop
xor
cmp
addr16
lea
lret
cmp
mov
jns
mov
and
lea
insb
sbb
jp
push
les
aam
es
decb
fdiv
rcr
movb
test
insl
and
push
loopne
or
out
fsub
cmpsl
mov
inc
aam
jl
pop
stos
insb
les
pusha
cmp
jo
cmp
enter
scas
and
or
mov
pop
jb
inc
pop
jo
into
sahf
inc
pop
jp
mov
mov
ret
or
mov
sub
aam
arpl
lods
lds
mov
pop
pop
mov
mov
fwait
inc
es
lcall
sub
fidivs
and
loope
and
orl
dec
adc
int
call
or
push
mov
push
fwait
sub
gs
js
xor
or
mov
fidivs
dec
xchg
mov
pushf
inc
xor
and
inc
dec
dec
adc
in
leave
or
dec
imul
adc
and
rorb
dec
mov
ffree
push
enter
pop
mov
cwtl
adc
test
mov
fiadds
push
jmp
mov
mov
inc
pushl
jl
ficoml
and
mov
daa
arpl
and
and
dec
cmp
inc
movsl
push
fadds
or
loopne
fwait
test
push
push
out
push
push
inc
mov
or
setge
sub
pop
sahf
cmp
sbb
lock
rorb
sbb
ja
and
int3
and
lcall
daa
adc
test
cmpsb
pusha
adc
sar
insb
push
bound
cmp
pop
int3
dec
adc
not
lret
xor
lods
jo
sbb
aam
inc
dec
mov
add
das
mov
inc
or
jne
dec
pusha
jl
fmull
orb
cli
adc
mov
outsl
mov
mov
imul
xor
jae
rolb
pop
or
lret
in
jmp
mov
push
test
out
push
mov
pop
mov
faddl
dec
enter
and
jecxz
shll
adc
push
xchg
inc
add
sub
push
ds
loope
cmp
ds
test
add
add
in
dec
add
mov
fcmovb
mov
add
add
cmp
xchg
pop
icebp
fadds
inc
lcall
xchg
add
pop
setbe
loop
fcompl
or
add
call
lock
hlt
and
lea
add
mov
mov
pushf
mov
add
or
mov
sahf
and
cmp
cmp
jns
negl
int3
add
mov
dec
test
mov
mov
or
sbb
add
rorb
scas
or
push
and
sbb
push
bound
adc
clc
inc
push
lock
divb
fs
inc
mov
jecxz
add
cmpsb
imul
adc
adc
add
lods
sub
and
adc
push
sub
adc
adc
xor
or
inc
or
sbb
pop
adc
mov
push
shlb
rcll
sbb
repnz
mov
adc
add
lock
jge
mov
lahf
daa
les
int3
out
enter
lret
rolb
test
adc
cmpsl
cltd
pop
cld
cmpsb
dec
aam
ja
inc
insb
sbb
jns
push
lret
add
insl
stos
mov
jbe
add
mov
mov
scas
out
aas
pop
push
sub
cmpsb
xor
loope
bound
fldcw
addr16
push
int3
push
mov
inc
lea
sbb
dec
jmp
inc
hlt
push
lahf
idivb
pop
or
push
aam
incl
pop
xchg
xor
dec
mov
cltd
aaa
loope
jb
adc
fidivl
pop
sti
insb
dec
push
pop
fs
icebp
pop
and
xchg
jbe
lret
popa
std
ss
and
fsubs
enter
xor
jo
push
icebp
ret
imul
in
xchg
sub
ss
aad
adc
cmpsl
pop
rcll
test
mov
sub
add
das
pusha
rorl
fistpl
dec
loop
and
mov
push
jmp
insl
mov
imul
jne
cmp
orl
and
add
push
outsb
in
ja
pop
sub
test
or
jns
mov
pusha
mov
jge
dec
ja
je
popa
jnp
jp
loopne
xchg
js
jmp
or
sbb
ja
mov
cli
dec
adc
adc
pushf
add
mov
mov
test
sub
aaa
mov
adcb
push
int
lds
add
adc
subl
cld
dec
sti
jnp
mov
mov
sub
push
mov
mov
inc
daa
cmp
push
rcrb
or
xchg
lods
and
test
pop
fwait
push
mov
out
inc
push
sbb
push
pop
test
pusha
push
jne
jnp
and
mov
pop
push
lea
adc
pushf
pop
sbb
sbb
sub
add
add
scas
neg
pop
sbb
inc
ljmp
adc
inc
inc
or
push
and
cltd
popa
cmp
cmp
repz
sbb
popa
jmp
add
shlb
push
out
popa
adc
call
and
and
jnp
sub
sarb
sub
in
jmp
cmp
jg
add
mov
out
xorb
mov
xor
xor
adc
dec
or
shll
push
adc
stos
sub
sbb
inc
sahf
test
xchg
and
adc
jo
lods
lahf
and
sub
clc
outsl
add
pop
in
jle
add
js
xor
jmp
and
push
sbb
dec
or
xchg
iret
xor
jbe
mov
mov
inc
es
jmp
ljmp
in
dec
push
adc
subl
fiadds
sub
adc
and
std
lret
add
scas
cld
and
mov
mov
jo
testb
add
or
or
test
xor
fisubrl
add
out
dec
add
sbb
xchg
ret
adc
cmp
or
or
repz
cmp
inc
mov
dec
push
das
xor
cld
mov
pop
and
push
push
push
push
push
call
cmp
inc
leave
push
add
mov
adc
and
xchg
xor
gs
and
ret
xor
sub
out
in
loop
jl
mov
into
std
cmp
jae
imul
or
inc
push
icebp
fldcw
or
inc
sub
cmp
xor
pop
rolb
aam
push
sub
mov
push
push
arpl
xchg
test
mov
lcall
cmpsl
loopne
fdivrs
in
xchg
xchg
data16
adc
ret
ljmp
sbb
inc
cs
cmp
xor
and
jmp
mov
jne
sti
or
repnz
sub
sbb
cwtl
pop
mov
insl
push
push
push
nop
addb
repnz
inc
mov
fwait
push
addb
inc
mov
shr
push
push
and
fidivrl
mov
in
mov
push
test
js
xchg
subl
mov
push
leave
cli
insl
sarb
push
aad
fmul
pop
ror
jnp
dec
lods
sub
push
xor
cli
mov
mov
inc
mov
inc
loopne
stc
lock
fnstcw
mov
mov
adc
mov
cld
sub
mov
mov
outsl
jns
cmp
mov
adc
push
in
inc
repz
lret
sub
or
push
mov
outsl
mov
mov
sbb
cmp
adc
adc
in
push
adc
loopne
add
test
jmp
push
scas
inc
cmp
or
loope
fmull
movb
or
xor
cmpb
dec
fldt
mov
mov
adc
outsl
jl
mov
jno
pop
push
push
add
cmp
or
cld
mov
jge
add
add
fidivrs
faddl
pop
mov
cld
sti
rep
movsw
sbb
add
sbb
movsb
arpl
je
mov
sar
or
mov
shr
mov
inc
mov
adc
jns
jle
movb
cmpb
mov
xor
jg
push
sub
fstps
adc
cmpb
add
movsbl
xor
cmp
ss
push
icebp
leave
ja
aaa
add
jb
and
push
cld
and
cmp
push
mov
lods
xchg
mov
or
mulb
mov
pop
inc
mov
mov
enter
imul
inc
add
mov
or
xchg
adc
jmp
or
fs
add
inc
outsb
shl
cmp
jl
adc
sbb
fisubl
add
inc
lahf
xor
mov
sbb
xor
loop
mov
jnp
cmc
sbb
mov
push
xchg
adc
ja
xor
lock
test
mov
ret
or
loop
mov
pop
xchg
inc
pop
inc
testb
lret
sbb
jle
adc
sbbb
daa
add
daa
pop
or
or
jnp
or
jbe
jmp
or
fwait
fwait
fwait
fwait
por
jmp
adc
pop
adc
fwait
fwait
fwait
fwait
push
adc
dec
adc
dec
adc
fwait
fwait
fwait
fwait
aas
pop
jmp
sbb
xor
jmp
fwait
fwait
fwait
sub
jmp
sbb
and
fwait
fwait
fwait
fwait
pop
pop
jmp
and
or
jmp
stos
xchg
fimull
push
inc
loopne
push
push
mov
adc
adc
je
imul
fsts
sarl
stc
add
iret
repz
sub
xor
cmp
inc
dec
dec
iret
repz
push
pop
pop
bound
cmp
repz
jbe
addb
xchg
cltd
sahf
jg
mov
add
and
or
or
push
pop
idiv
call
adc
adc
sbb
sbb
push
pop
and
and
aas
add
repz
and
pushf
test
shrd
cmpsl
mov
fwait
hlt
add
xor
cmp
jle
mov
push
mov
xchg
or
test
jne
push
push
pop
jae
inc
mov
call
xlat
in
xchg
sbb
pop
movsb
xchg
rcrl
or
mov
imul
sbb
sub
sub
lret
fadds
inc
mov
inc
cmp
jbe
adc
rorb
push
nop
adc
stc
xor
inc
rclb
jge
fwait
movsb
cli
outsb
pop
call
or
push
adc
pop
pop
js
mov
popf
jne
mov
push
fucomip
dec
popf
rclb
scas
or
push
push
or
enter
bnd
lods
push
add
fcoml
adc
pop
sub
jbe
inc
nop
and
scas
or
adc
xor
and
lods
mov
inc
sbb
iret
add
and
push
push
push
add
je
lret
and
adc
jge
test
add
mov
xor
jb
out
out
mov
add
mov
mov
test
or
adc
xor
jo
and
bound
adc
jns
fwait
push
xchg
inc
or
bound
adc
adcb
jl
cmp
adc
lock
mov
in
mov
lock
cwtl
adc
fldl
xchg
out
je
call
imul
sbb
pushl
push
or
cmp
insb
fisttpll
rolb
ss
mov
leave
or
xlat
andl
jne
pop
add
test
repnz
test
cmovns
or
xchg
lds
push
adc
and
in
jmp
mov
inc
call
and
push
jne
test
outsb
aas
push
dec
jp
adc
jo
inc
push
pop
xchg
inc
into
sub
mov
iret
fsubl
push
pop
roll
jecxz
loopne
addr16
add
cmp
or
rorb
and
mov
je
loope
and
sahf
stc
sbb
clc
lock
mov
dec
je
xchg
clc
je
mov
push
in
push
xor
adc
adc
cmp
cmp
pop
sub
or
xchg
cwtl
rcl
xchg
push
mov
adc
cmp
push
add
enter
pop
sbb
push
outsl
sub
insl
lret
lcall
jbe
lea
mov
lahf
mov
and
testl
push
popl
imul
ret
and
out
xor
xchg
add
pusha
pop
clc
lods
cltd
test
sub
je
pop
mov
andl
dec
mov
add
xor
pop
or
loop
sbb
adc
pop
add
test
inc
sub
mov
sub
add
cmp
lret
insb
test
das
cmp
sub
add
inc
add
xchg
push
push
in
jp
push
sub
push
push
xchg
or
jne
ds
jne
push
fcmove
test
nop
add
xor
dec
inc
or
xlat
and
jmp
cli
and
mov
adc
push
add
in
pop
cmp
sbb
fildll
and
mov
mov
dec
add
scas
rclb
addl
scas
mov
push
stos
push
push
pusha
adc
rcrl
andb
mov
push
addr16
cmp
ja
or
adc
das
mov
push
insb
test
mov
sbb
dec
pop
nop
jae
pop
or
jle
add
pop
mov
lock
je
cmp
xor
popa
mov
push
sahf
jo
xchg
ds
daa
push
jecxz
cwtl
movsb
push
and
mov
addr16
pop
add
or
fld1
xchg
and
leave
or
lock
mov
pop
mov
ret
fmulp
pushf
sub
add
add
jns
add
mov
lods
xchg
pop
mov
fs
and
ret
repz
mov
cmp
adc
sbb
jbe
sbb
sub
jo
add
adc
mov
push
fldt
add
sub
or
bound
in
xchg
sbb
add
xchg
jmp
xorl
push
inc
adc
add
adc
fildl
or
push
jo
xchg
xor
mov
sbb
sbb
inc
mov
rolb
pop
inc
rolb
add
jl
inc
xor
add
mov
xchg
bound
sub
cmpb
push
inc
pop
in
in
movsb
add
adc
push
adc
dec
out
mov
xchg
lcall
xor
shl
inc
add
subl
jl
mov
inc
test
cmpb
mov
mov
enter
xchg
aas
rclb
fwait
movsb
fwait
movsb
pushf
mov
ud1
or
lods
add
push
sbb
mov
fs
dec
ja
lahf
mov
rorb
cmp
push
enter
dec
rorb
pop
aam
fsubrl
push
lock
pop
call
inc
add
dec
loopne
xchg
or
stos
jne
cmc
rolb
xchg
add
add
add
lea
add
inc
add
repz
mov
add
xchg
je
jl
and
sbb
repnz
and
cmp
jl
sub
jle
jns
lea
add
add
or
push
or
push
or
sbbl
mov
xchg
jo
and
jmp
xchg
call
and
inc
and
outsl
lock
push
push
push
pop
jl
jmp
jo
ret
push
loope
call
mov
sahf
sahf
adc
push
out
les
cmp
je
cmpsb
in
in
push
call
inc
pop
mov
sbb
dec
mov
aaa
and
jmp
rcrl
mov
in
nop
ss
shll
int3
xchg
xor
pop
das
pop
fcomi
lock
nopl
push
fmull
les
outsb
sbb
push
fwait
fs
sub
imul
or
call
mov
test
cmpsb
xchg
inc
mov
add
into
cmp
jge
cld
pop
sbb
inc
push
hlt
cmp
jl
cmp
jle
gs
lods
ret
xchg
lea
into
add
fnsave
out
mov
sbb
mov
lea
push
rol
pop
add
push
sub
ds
dec
inc
popf
sbb
pop
jbe
add
cld
adc
adc
pop
inc
js
and
adc
inc
cmpsb
push
shll
dec
jo
jo
or
pop
sub
cmp
push
loopne
fsubs
in
jge
mov
sub
cli
mov
mov
sahf
jo
push
inc
add
movsl
inc
push
push
nop
or
push
jne
imul
leave
or
mov
or
or
push
lock
sbb
inc
je
addr16
nop
and
and
add
xchg
adc
arpl
mov
and
cmp
inc
inc
jns
xchg
dec
out
cmp
push
mov
mov
in
sub
loopne
jge
lahf
adc
xchg
jo
adc
repnz
lret
or
add
pop
orb
sub
cmp
je
xor
jecxz
push
jae
sar
pop
clc
adc
add
scas
lea
or
pop
jb
dec
add
cmpsb
nop
lcall
pushf
xchg
loopne
mov
arpl
jno
or
push
aaa
insb
adc
clc
mov
adc
popa
and
std
call
dec
jno
jne
xchg
cmp
shlb
adc
femms
popa
sbb
push
mov
push
or
sub
push
jmp
sbb
push
mov
sbb
or
jmp
inc
shrb
xor
test
shll
fists
aad
ss
sub
or
adc
inc
push
into
sub
mov
or
test
mov
ffree
add
jns
inc
mov
adcl
xchg
repz
loope
in
mov
xchg
scas
cltd
or
test
cmpsl
andl
cmp
adc
push
push
xorl
lea
outsl
xchg
xchg
les
loope
movl
jno
lret
loope
add
push
ret
inc
pop
pushl
lods
inc
movb
jno
je
shr
jb
ret
outsl
popa
inc
test
iret
adc
jb
inc
and
mov
sbb
mov
mov
xor
push
icebp
out
cmpsb
cmc
cmp
decl
mov
mov
std
es
inc
xchg
das
lods
adc
add
or
or
mov
jb
cmpsb
mov
xadd
xchg
shll
sti
xchg
and
or
jle
loopne
inc
or
xchg
jo
into
cmp
sbb
push
fwait
jmp
jo
sub
cmp
or
outsl
push
sbb
lcall
xchg
into
popf
dec
aam
jl
jbe
adcl
inc
pop
call
push
jbe
stos
ds
jl
sub
lock
dec
pop
add
pop
popf
or
ss
push
test
pop
jmp
bound
lock
loope
adc
lea
mov
cs
push
jg
sub
inc
add
mov
sub
cmp
or
hlt
jecxz
or
inc
jo
stos
adc
or
adc
mov
ficomps
jle
sarl
out
push
in
arpl
dec
push
pop
loope
popf
loopne
push
mov
dec
jmp
inc
ret
and
repz
push
aaa
enter
jp
pusha
xchg
test
mov
ljmp
je
rcrb
and
in
dec
aaa
or
unpcklps
jl
rolb
push
add
in
imul
and
mov
inc
inc
faddp
aam
push
push
pop
addb
dec
add
lods
sbb
test
lods
mov
sahf
xchg
test
dec
and
ficompl
in
in
pop
imul
push
push
inc
sbb
mov
int3
pop
gs
popa
and
aad
lock
jl,pt
mov
in
adc
and
sub
cs
daa
push
push
repnz
aas
push
dec
add
dec
aaa
jns
or
push
loope
loope
push
inc
fwait
add
lret
int
ret
es
or
cld
decl
adc
adc
fldz
fcomp
fnstsw
add
arpl
jle
fsubr
pop
faddp
cmp
push
ds
test
pop
or
adc
add
dec
xor
add
aam
loopne
push
lret
lret
jg
fadds
mov
pop
hlt
vmwrite
hlt
jl
stc
inc
jmp
push
ret
sub
repnz
push
lea
hlt
mov
jmp
loop
add
les
ret
sbb
dec
cmpsb
xchg
pop
add
mov
push
icebp
das
mov
mov
inc
fbstp
inc
gs
xchg
sub
cmp
ds
inc
adc
jnp
rcr
xor
cmp
out
inc
sahf
and
lcall
xchg
cmp
pop
xor
mov
mov
shrb
pusha
inc
arpl
mov
popa
outsl
aas
sub
fadds
pop
adc
jo
pop
ja
push
and
sti
jmp
inc
pop
inc
push
daa
fmull
dec
out
test
inc
shrb
sahf
sub
out
in
loop
aas
in
rol
fimuls
enter
hlt
imul
or
in
dec
fsqrt
jne
lahf
fcomps
push
jecxz
mov
divps
decl
cld
or
push
dec
stos
or
push
add
jns
bound
arpl
jl
lock
lds
jl
rolb
and
sbb
test
pop
dec
xor
ss
rcll
inc
sbb
adc
out
enter
addr16
or
aam
fst
jl
add
insl
push
adc
sub
mov
mov
pop
sbb
jne
xchg
das
rcrb
cli
fistpl
add
xor
dec
mov
cwtl
push
test
shl
and
or
jnp
cmp
cmpl
arpl
test
xor
sub
lock
mov
popf
mov
pop
lret
mov
ss
fldl
sub
pusha
sub
and
sti
enter
push
loopne
or
aaa
add
popa
push
push
xor
push
test
push
pop
inc
mov
jl
xchg
jg
cmp
jb
push
or
jbe
inc
daa
dec
pop
jb
adc
sbb
sahf
or
repnz
xchg
lock
lods
adc
imul
push
fisubrl
dec
loope
pop
or
sbb
les
inc
dec
test
aaa
inc
and
adc
ret
das
xchg
rorl
in
push
iret
xor
jne
imul
xchg
xchg
add
jmp
sub
mov
and
and
mov
mov
xlat
xchg
and
or
shll
add
mov
inc
sub
dec
lods
dec
sbb
pusha
or
dec
cmp
or
out
and
enter
pop
rolb
pop
push
pop
xchg
inc
popf
mov
pop
andps
cmp
jo
je
cwtl
out
xor
int3
adc
xorb
roll
pop
sbbb
mov
pop
loope
movsb
push
sub
pushf
push
loope
xchg
inc
cvtps2pd
pop
mov
cmp
aam
adc
pop
ficompl
or
cmp
je
xor
dec
push
movsb
lock
jmp
or
inc
add
xor
mov
les
and
dec
or
add
rcll
rol
lds
pop
pop
mov
cmp
pusha
sub
add
fadds
ss
mov
lods
movsl
stos
sub
adc
mov
mov
insb
jbe
leave
mov
inc
sub
cmp
jb
mov
jg
and
movsb
push
lea
outsb
popa
shrl
rcrl
or
xor
mov
push
push
inc
mov
movsb
leave
pop
ret
in
cmpsb
jmp
sub
mov
pop
aaa
jnp
mov
push
lods
push
push
push
dec
mov
or
sbb
les
push
jmp
or
ljmp
inc
add
faddl
movsl
jge
shrl
and
mov
inc
cmpsl
mov
lods
and
adc
mov
ret
adc
push
jle
loop
pop
cmp
add
xchg
iret
call
sub
inc
clc
xchg
push
sbb
fwait
push
dec
cmp
pop
push
mov
imul
test
xchg
arpl
enter
push
dec
pand
shlb
jl
pop
inc
pop
cmp
push
arpl
movsb
sahf
mov
imul
test
in
mov
mov
call
shlb
add
jno
int
lock
mov
adc
outsb
cld
push
sub
pusha
stos
adc
in
mov
insb
jecxz
or
enter
inc
sub
and
jmp
jmp
fmull
dec
orb
cmpsb
xor
push
js
mov
pop
push
mov
bound
sbb
mov
mov
mov
ja
test
xchg
xchg
mov
loope
mov
int3
lea
xchg
fst
gs
xchg
sbb
leave
mov
or
ret
popa
pop
sbbl
add
je
sbb
leave
test
cmp
andb
add
add
add
bound
iret
test
aam
xchg
or
dec
ficoms
dec
or
lods
push
push
sub
call
add
mov
fnstsw
inc
aaa
pushf
loopne
arpl
cmp
xor
repnz
push
adc
fldenv
je
xchg
or
push
stos
mov
aam
data16
mov
jbe
fstl
sarb
inc
mov
out
mov
paddusb
shld
adc
sbb
dec
sti
dec
cltd
nop
dec
lock
jge
dec
mov
daa
push
inc
sub
pusha
xor
xchg
js
xchg
jo
sahf
xchg
mov
rorb
outsl
add
pop
test
fcmovu
sbb
pop
jmp
mov
lret
sub
pop
push
adc
push
push
ret
repz
in
clc
orb
movsl
inc
ret
test
xor
push
mov
sub
cmpsl
push
push
mov
es
push
data16
aam
insl
push
cmpsl
test
and
dec
shrb
mov
nop
repnz
pop
add
or
out
test
mov
cmp
adc
or
notb
push
jo
push
test
pushf
mov
push
rol
cmp
test
movhps
mov
or
jb
ljmp
lret
xchg
clc
inc
lock
xchg
leave
push
push
xchg
add
mov
js
xchg
rorl
jl
sbb
or
loopne
sub
mov
or
mov
mov
inc
sbb
shrl
or
mov
punpcklbw
cmp
mov
mov
mov
jb
jae
sbb
inc
inc
xor
test
lret
test
subb
jb
push
incl
in
faddl
push
xor
je
das
test
stos
and
fstpl
repnz
sahf
xchg
add
sbb
or
add
mov
cmp
mov
mov
lods
jge
xor
imul
pop
imul
insb
movl
fsubrs
fs
sahf
inc
ds
popf
lret
inc
push
or
in
aad
ret
or
je
inc
or
xchg
lods
insl
jge
sub
sbb
add
xchg
jo
mov
jno
cmp
popf
push
push
js
das
into
loopne
xchg
or
cltd
movsl
sbb
pop
mov
addb
stc
mov
and
or
es
push
adc
sarb
add
lret
dec
add
pop
inc
or
into
out
popf
push
imul
addb
sub
add
push
or
int
xor
push
pusha
ret
xor
int
sbb
lea
cmp
or
mov
pusha
sbb
cmpsl
push
lret
sbb
cmpsb
pop
arpl
add
xor
popa
add
cmc
or
frstor
inc
or
inc
xor
jne
pop
out
arpl
xor
fsubl
and
xor
and
and
iret
imul
push
sub
push
lock
xor
cmp
scas
pop
jb
inc
ret
inc
call
xchg
inc
push
push
and
dec
jmp
sbb
imul
jo
mov
cwtl
out
add
dec
fistpll
loopne
lods
add
adc
ret
pop
xor
mov
mov
inc
cmp
mov
pop
ret
icebp
jmp
cmp
sub
push
test
push
fsubrs
mov
pop
jl
xchg
ret
popa
aad
adc
push
push
dec
pop
jle
push
scas
movl
add
out
or
add
aad
push
adc
mov
xor
adc
xchg
push
sub
mov
inc
pusha
push
hlt
lods
movsb
aas
xor
fmuls
mov
pop
jmp
bound
jle
xchg
dec
and
fcoml
jb
push
jp
add
jge
sahf
insl
mov
or
mov
movsl
insl
inc
imul
push
call
dec
inc
adc
mov
rclb
mov
ficoms
adc
mov
je
in
push
daa
xor
xchg
imul
test
cld
movhps
push
push
lahf
mov
add
mov
inc
pop
jo
out
out
inc
or
adc
aam
add
push
je
push
sub
subb
dec
loopne
cmp
lods
in
and
push
or
ret
inc
aam
mov
mov
dec
adc
filds
mov
popf
mov
or
cmp
dec
mov
mov
rolb
or
sub
fwait
dec
xchg
jo
jl
test
adc
xchg
test
lock
movsl
nop
xor
jge
loope
rclb
jno
mov
sbb
mov
movzbl
or
and
jmp
jge
incb
jge
dec
inc
and
add
ret
lods
pop
test
sub
and
das
test
mov
fwait
clc
add
sbb
jae
push
jo
addr16
add
ds
shll
mov
or
addb
push
push
test
and
or
push
dec
inc
xchg
xor
lea
pop
sub
enter
sub
hlt
cmp
sbb
sbb
adc
add
add
adc
xor
and
shrl
inc
shl
or
sub
add
cmpsb
cli
or
cmpsb
pop
pop
pop
hlt
add
lret
dec
divl
fstl
mov
inc
cmp
das
push
je
mov
or
and
jne
insb
loope
insb
mov
inc
add
sahf
sbb
mov
sbb
lea
and
xorl
cld
cmpsl
out
sub
and
jno
or
jle
std
mov
aam
inc
mov
cld
xorl
insb
mov
sbb
and
sbb
xor
std
mov
lea
sarl
mov
fxam
sbb
das
enter
add
js
inc
test
jp
push
push
and
int
inc
ret
or
sbb
add
cmpsl
filds
daa
mov
pusha
add
lods
movl
les
pop
mov
lea
movsb
mov
xor
cwtl
scas
cmp
xchg
movsb
cmp
in
rcll
lret
pusha
or
mov
adc
add
mov
xchg
leave
loopne
lea
incl
fistpll
lea
cmp
mov
cld
pop
nop
cmpl
jle
imul
fs
jp
adc
jo
ret
cmp
addr16
loop
das
enter
jle
push
cwtl
push
dec
cmpsl
test
fstpt
cmp
xor
loop
add
shlb
cmp
dec
jae
mov
adc
push
push
mov
xchg
push
cmp
std
and
jne
mov
jle
movsl
enter
push
pop
or
pop
push
inc
mov
mov
xchg
movsb
stc
mov
push
push
cld
cld
pop
jmp
sbbb
inc
cs
bswap
add
mov
imul
sbb
inc
movzbl
and
aas
cld
jns
dec
or
push
add
mov
push
lea
shlb
out
jg
jnp
adc
jb
imul
jnp
mov
int3
or
cmpb
imulb
dec
mov
jbe
fimuls
pop
push
push
and
out
loop
out
pushl
pop
inc
pop
cmp
rorb
xchg
pop
add
pop
sbb
lods
mov
mov
jmp
push
xor
test
or
dec
mov
xchg
dec
testl
sbb
out
pop
fsubs
sbb
push
fisttpll
mov
and
test
dec
and
shlb
inc
adc
add
test
mov
and
push
lret
rclb
xor
outsl
dec
cwtl
xchg
sbb
sub
jno
mov
sahf
add
iret
push
add
js
imul
rorl
pop
or
add
sub
rcll
arpl
fsubrl
adc
push
ret
or
cltd
sqrtps
js
and
arpl
sahf
out
popa
das
add
sbb
mov
push
push
and
orb
add
mov
aaa
daa
enter
nop
addl
adc
sbb
adc
rolb
sbb
push
fdiv
push
andb
add
push
push
and
or
das
push
jns
in
dec
ror
adc
dec
mov
pop
add
jne
cli
shl
xchg
rcll
inc
push
and
jbe
sbb
loopne
push
xchg
insb
sub
call
xchg
out
add
xor
mov
mov
fcoms
cwtl
je
adc
add
push
dec
or
mov
mov
xchg
mov
sub
sub
and
and
xchg
or
inc
js
dec
pop
mov
les
xor
and
add
call
cmc
cmp
insl
and
pusha
dec
lock
adcl
insl
and
sbb
dec
movsb
mov
jg
add
sub
aaa
sti
jmp
sub
js
push
leave
mov
push
push
jl
sub
xchg
or
ja
inc
sub
or
inc
cltd
cmp
pop
push
out
sub
cld
or
outsb
xor
fmul
or
orb
sbb
xor
pop
test
inc
or
out
add
push
xchg
mov
push
mov
add
xor
js
test
xor
jg
mov
sub
and
sub
push
pusha
arpl
xchg
and
iret
xor
cmpb
add
les
jnp
dec
or
dec
mov
les
gs
sub
adc
jb
data16
rcrb
shl
insl
adc
ret
jg
mov
ljmp
push
add
nop
lea
jo
cli
pop
cmpsl
mov
push
push
es
mov
jl
aaa
mov
lea
jge
test
jns
jg
aad
sbb
adc
jp
imul
cmp
out
fstpl
or
xchg
lret
bound
shll
inc
inc
jmp
inc
fs
sub
je
and
cmp
mov
icebp
add
lds
add
out
inc
push
jmp
test
cmp
jl
repnz
cld
push
sub
fimull
sbb
arpl
popa
scas
rorl
sbb
cmpsl
pop
ret
sbb
jno
je
fs
aam
jge
push
lret
or
lods
mov
daa
push
push
add
or
andl
mov
xchg
scas
movsb
in
fists
popf
out
cmpsl
aam
pop
jae
sub
mov
jne
dec
sbb
in
dec
xchg
or
cmp
xor
roll
mov
insl
fcoms
add
inc
pop
mov
sub
inc
outsb
fdivrl
movsb
push
call
lods
push
movsl
adc
jmp
xor
adc
loopne
sub
fadd
mov
and
xchg
mov
test
sbb
enter
add
stos
jnp
add
outsb
and
adc
loope
push
add
and
push
push
sbb
and
les
je
shl
add
push
mov
xchg
lods
xor
dec
clc
or
dec
add
imul
mov
or
or
cmpb
mov
sbbb
jbe
jo
and
xchg
xchg
push
inc
inc
aad
andb
dec
jp
outsb
cltd
push
mov
cmpsb
jnp
mov
aaa
xor
sub
push
push
push
fs
push
adc
mov
dec
sarb
bound
lcall
inc
push
orl
inc
adc
out
in
xor
dec
insl
add
xchg
add
xlat
mov
sub
lret
cs
lahf
je
push
roll
je
mov
sub
popf
add
inc
in
jne
in
xlat
movsb
inc
inc
xor
test
sti
arpl
xchg
add
pop
inc
dec
push
bnd
les
subb
pop
jae
xchg
pop
adc
and
data16
push
mov
xlat
xor
dec
mov
cmp
out
clc
loopne
add
cmp
data16
dec
sub
nop
js
add
sbb
test
jl
mov
ffree
in
sub
push
xchg
stos
std
pop
addr16
jne
jbe
inc
xor
int
cwtl
push
insb
inc
jle
loope
xchg
cmp
les
lea
fcoml
mov
jb
repnz
test
das
lock
rorb
mov
jge
loope
cmp
lret
jl
mov
add
jmp
fildl
das
clc
push
cmp
dec
add
enter
leave
xor
shr
lea
and
xor
adc
or
adc
pushf
loop
sub
in
test
mov
jg
movl
fmull
cmp
jbe
add
add
mov
jo
or
pop
jmp
and
or
inc
push
data16
add
jno
cmc
or
test
or
jb
jb
sub
xor
ds
bound
or
push
mov
pop
sbb
into
sahf
aaa
push
add
inc
pop
push
mov
js
jl
mov
data16
adc
push
les
movsb
cmp
loope
inc
push
jl
lret
jp
jo
pop
pop
js
call
icebp
mov
sbb
iret
jne
sbb
rcr
push
or
jb
cwtl
ret
sbb
test
add
das
xor
sub
or
pop
push
mov
mov
in
and
aam
nop
mov
addb
xor
lahf
and
enter
or
movsl
ret
dec
mov
popa
sub
lret
pop
pusha
and
adc
test
add
das
imul
loope
inc
popa
call
sahf
fldl
test
sahf
jo
pushf
inc
pop
mov
js
mov
sbb
and
or
outsl
push
cmp
or
test
das
ss
dec
cmp
sahf
add
popa
mov
arpl
std
pusha
add
add
shlb
xchg
orb
aas
adc
dec
inc
xor
cmp
call
movsb
sub
add
pop
pop
add
pusha
rcll
and
cmp
add
mov
or
and
xor
xchg
pushf
and
and
cmp
inc
fisubs
sub
sub
and
test
sbb
fildl
inc
loope
adc
pop
cmp
pusha
stc
push
or
inc
xor
push
scas
or
inc
push
and
iret
subb
or
es
out
or
or
fidivl
pop
push
fmull
add
cmp
mov
inc
cmp
lea
jns
adc
mov
or
mov
ss
inc
push
or
gs
xor
push
push
xchg
or
loopne
mov
push
adc
add
rcl
jno
outsl
lcall
fiadds
out
mov
es
insb
in
dec
sub
dec
mov
push
out
xor
js
xor
or
mov
out
xchg
push
ret
or
add
cmp
lods
mov
add
dec
push
jp
lods
enter
mov
icebp
cmp
adc
inc
ret
clc
add
sbb
dec
clc
and
sub
cltd
mov
aaa
cmp
fisttps
jno
mov
sbbb
xchg
sub
mov
push
lds
and
adc
js
sbb
mov
arpl
cmpsb
fdivr
stc
sbb
stc
or
cmp
insb
mov
adc
mov
leave
shll
and
nop
push
or
sbb
jmp
cmp
mov
pusha
mov
sub
pop
jmp
mov
add
mov
daa
inc
push
jb
jbe
imul
mov
jne
insl
or
sub
pop
sahf
xor
daa
ljmp
xchg
push
cwtl
sub
push
loope
pushf
dec
dec
cmp
pop
sub
bound
mov
mov
fisubrl
movsb
push
ret
test
pop
fisubs
pusha
sub
test
dec
arpl
fcmovbe
jb
es
lcall
les
outsl
pop
sarb
fs
and
xchg
dec
and
les
mov
call
int3
call
jge
add
shlb
pop
hlt
movl
mov
inc
xchg
push
mov
push
mov
aad
scas
xor
repnz
test
lahf
xor
lock
push
push
xchg
js
nop
dec
adc
adc
add
sbb
push
dec
add
and
dec
fcomps
mov
and
fstps
aam
in
mov
dec
sub
fisttpll
xorb
lcall
push
jbe
adc
leave
enter
pusha
add
dec
leave
test
loopne
mov
xchg
sbb
in
add
icebp
jmp
lahf
mov
inc
scas
sti
push
int
daa
cs
sbb
call
pop
ret
rorb
repz
adcb
mov
push
xor
dec
add
ret
xor
out
push
mov
lret
scas
and
push
jo
mov
fwait
aaa
and
pop
mov
cmp
dec
mov
jmp
cli
and
xchg
jle
dec
sahf
jmp
push
dec
push
lods
xor
cmp
and
stos
inc
add
jmp
int
cmpsl
push
lock
sbb
push
push
mov
and
xchg
je
pushf
arpl
test
dec
jp
in
add
sub
int3
inc
clc
pushl
push
xor
cs
mov
mov
mov
adc
inc
gs
xlat
fnstsw
or
daa
inc
loop
add
mov
adc
rsm
fstps
movsl
mov
adc
in
lods
movsb
push
scas
xchg
icebp
mov
in
push
adc
mov
mov
movsb
and
in
pusha
xchg
xchg
and
adc
or
pop
bnd
jp
sub
adc
inc
dec
adcb
xchg
cmp
je
jbe
inc
mov
push
lea
cld
adc
testl
and
xor
scas
movsl
push
popa
mov
jb
pop
out
adcl
cmp
adc
and
xor
and
push
dec
jecxz
lahf
jmp
repz
aam
lods
lds
mov
push
ret
testl
dec
pop
pop
jne
push
rcr
xchg
mov
fisubl
fstpl
in
clc
inc
test
call
and
sub
inc
lock
rorb
and
getsec
in
and
pop
popa
xchg
int
mov
dec
push
dec
loopne
add
add
stos
addl
jnp
cs
push
xchg
dec
cmp
mov
pop
and
pop
inc
adc
push
insl
in
dec
and
cli
mov
adc
inc
dec
pop
jne
mov
inc
push
js
push
push
in
xorl
pop
mov
imul
mul
pop
adc
jge
inc
rolb
push
cwtl
int3
xchg
es
mov
in
jne
lock
adc
clc
xor
hlt
cmpb
add
push
faddl
daa
sub
inc
inc
jge
sub
push
push
add
push
pop
les
cmp
mov
xor
out
push
sbb
push
adc
push
and
mov
in
aas
or
push
xchg
fisttpl
inc
or
add
dec
jo
cmp
faddl
lea
push
pop
xchg
dec
orl
push
loope
out
jae
mov
xchg
lcall
std
in
pop
inc
inc
fsubl
in
std
test
lea
and
mov
rorb
add
test
inc
sbb
mov
add
inc
adc
mov
ret
add
adc
or
loop
mov
insl
dec
out
mov
movsl
clc
adc
push
xchg
dec
xor
or
cmp
push
push
jae
loope
mov
jp
push
or
jbe
ficomps
and
mov
add
icebp
mov
or
aaa
test
and
xchg
mov
xor
push
pusha
jbe
and
or
dec
pop
fdiv
mov
inc
mov
push
xchg
sub
andb
xor
push
push
add
out
xor
push
les
inc
pop
imul
adc
mov
pop
pop
ficompl
inc
out
cs
jmp
and
mov
mov
sub
in
test
cld
sub
dec
dec
or
push
movntq
fadd
add
push
iretw
push
add
repnz
pushf
dec
shlb
cmp
test
add
mov
sub
adc
test
add
popa
dec
in
adc
or
push
or
lret
cmp
adc
sub
addr16
mov
push
xor
imull
pop
cmp
add
sub
sub
mov
jl
mov
filds
mov
inc
add
lock
mov
or
jmp
std
pop
int3
or
cmp
push
pop
cld
push
add
sbb
or
fs
or
mov
dec
lret
loope
fnsave
dec
in
add
ja
ds
xchg
pop
push
outsl
push
je
push
lahf
push
outsb
dec
adc
and
enter
out
sarb
imul
adc
cmp
adc
in
push
test
idivb
or
push
pushl
stos
jmp
inc
nop
test
inc
sbb
mov
inc
dec
lds
test
test
jl
dec
add
out
push
in
xorl
xchg
daa
adc
xor
shlb
add
inc
loop
inc
push
inc
push
adc
pop
mov
add
and
pop
and
sub
cltd
jmp
incb
xchg
jmp
inc
mov
mov
fcoml
daa
jo
adc
sbb
xor
push
jg
outsb
inc
adc
add
rol
or
jne
or
and
cmp
mov
mov
xor
jo
xlat
in
add
lock
mov
push
push
inc
sahf
jbe
pusha
or
or
shrl
pop
cmc
pop
adc
inc
xorb
loopne
ret
cmp
les
push
or
push
jne
add
cmp
call
push
sub
ret
sub
sub
cmp
adc
push
push
jo
xor
popa
xchg
mov
outsl
int3
call
push
out
inc
push
cmpsb
dec
add
shlb
fs
sub
adc
xchg
arpl
addl
sbb
inc
arpl
out
mov
add
or
rol
cmp
pop
les
add
adc
sbb
fbld
xchg
stc
mov
aaa
and
add
or
add
xor
pusha
cmp
dec
mov
pusha
call
mov
ds
or
ret
sbb
or
push
clc
add
inc
loopne
je
adc
xor
push
jecxz
mov
and
int
in
pop
mov
and
adc
mov
pop
out
lds
mov
mov
repnz
rolb
dec
cmc
ret
mov
notb
jne
pop
push
inc
pop
das
add
mov
add
push
lret
enter
pusha
je
xchg
and
nop
xchg
xchg
or
nop
outsl
fdiv
cmp
cmpb
fimull
or
test
adc
sbb
sahf
ja
push
add
enter
popa
adc
xor
jo
inc
pop
xor
in
jo
pop
lea
rclb
push
in
xor
das
xor
mov
rol
mov
ror
ljmp
xor
shr
xor
sub
jnp
xor
shr
xor
add
add
dec
add
mov
shrb
fs
or
jae
or
and
not
and
xor
add
add
aam
sub
add
add
push
mov
ror
cli
fisubrs
dec
iret
add
xor
and
and
xchg
push
aam
or
cmp
mov
rorb
repnz
test
mov
mov
and
not
ret
rcl
add
jo
testl
hlt
add
inc
lcall
clc
or
push
aam
call
subl
sub
ljmp
rol
rol
out
add
push
lret
xor
fcomp
rcrl
loopne
inc
xor
jb
xor
in
call
movsb
shl
in
push
cmp
sub
bound
pusha
inc
push
push
push
bound
pop
int3
add
mov
pop
aaa
mov
js
jo
xor
cltd
call
xor
loopne
loopne
in
push
cmp
in
loopne
adc
pop
dec
shll
rcl
mov
pop
xor
jae
sub
or
int3
enter
outsl
pop
xor
jne
and
and
out
pop
in
jl
iret
or
xor
cmp
imul
xor
push
test
inc
loopne
or
cmpl
jo
je
or
ficoms
call
lcall
dec
adc
push
loop
jle
inc
pop
mov
add
add
pop
sub
jbe
call
fcomi
mov
or
clc
jp
push
and
nop
cmpsb
bnd
add
gs
fdivrs
inc
movsb
imul
and
push
lret
inc
mov
aam
mov
xchg
jmp
jo
cli
stos
pusha
nop
or
adcb
dec
shll
cmp
sub
shlb
call
xor
out
rolb
add
push
pusha
inc
aaa
cli
xor
xor
xor
shlb
shlb
inc
sub
in
imul
pop
lahf
jo
add
add
mov
dec
pop
dec
add
and
push
imul
dec
and
push
adc
push
xor
and
push
pop
cmp
and
pop
pop
pop
adc
test
push
xadd
or
movsb
or
out
fs
insb
pop
pop
inc
lcall
xchg
pop
xchg
and
scas
mov
movsl
mov
arpl
rorb
adc
pusha
dec
sahf
roll
cmp
adcl
lcall
dec
iret
enter
stc
stc
stc
mov
adcl
mov
les
jb
imul
rcll
cmpsb
loopne
loopne
or
and
test
sbb
sub
sbb
push
dec
fld
jg
sbb
shrl
mov
andb
mov
out
incl
inc
aaa
sub
add
sub
add
push
mov
out
push
pop
xor
pop
adc
enter
cmp
jmp
push
adc
mov
rol
or
or
or
mov
adc
fcmovu
aam
xchg
in
sbb
cmpsb
mov
and
insl
sub
lret
loopne
lea
jmp
ljmp
sub
sub
pop
add
ret
dec
or
mov
dec
jne
pop
cld
adc
lock
aas
mov
mov
mov
and
adc
or
fs
aam
nop
inc
adc
ljmp
push
pop
movsl
and
xchg
sub
sub
stos
or
outsb
pop
cmc
cmp
scas
or
mov
push
sti
mov
outsl
pop
loopne
ror
mov
notl
ljmp
xorb
fimuls
xchg
sub
pusha
sbb
dec
or
sbb
out
push
movsl
aam
sbb
xchg
data16
mov
daa
inc
add
dec
lea
cld
testl
ja
repz
lods
in
fstpt
mov
aas
or
insb
mov
inc
mov
xlat
or
add
xchg
jge
mov
fsubrs
subl
xlat
inc
push
xlat
xchg
loope
adc
mov
stos
sbb
mov
adc
push
lods
or
sbb
lea
jge
or
cltd
xchg
pop
mov
inc
mov
or
and
jge
adc
ret
add
xchg
xchg
negb
and
dec
mov
pop
sbb
jo
dec
in
cmp
or
and
ss
test
or
adc
cmp
jle
or
push
mov
test
pusha
ljmp
push
sub
and
inc
cltd
add
and
ret
sub
push
dec
js
adc
and
sub
or
cmp
rcll
negl
fildll
mov
inc
and
add
adc
subl
push
cmp
cmp
mov
sti
adc
lock
sbb
cltd
jp
pop
pop
cmp
inc
cmp
add
or
cmp
movzbl
fwait
dec
mov
push
sub
std
add
insl
push
and
xchg
aaa
pop
inc
cmpsb
xchg
loopne
cmp
add
jle
nop
bound
lahf
es
sub
push
jno
or
mov
enter
pop
cmpb
jae
inc
ss
imul
or
cld
cmpl
or
hlt
mov
mov
test
inc
sub
inc
ljmp
js
ret
cmpsl
loop
into
jns
dec
jmp
gs
adc
mov
and
push
add
or
mov
fs
outsb
add
add
repz
push
adc
icebp
outsb
imul
lea
push
ds
fcomps
or
jge
ret
push
inc
out
or
pop
add
ja
pop
cmpsl
dec
loope
add
push
adcb
fldt
cmp
jge
call
push
cmpb
mov
xor
jb
or
or
and
testb
pop
js
test
or
insb
loopne
or
loopne
inc
and
pop
inc
mov
test
cmp
or
std
ss
mov
dec
xchg
dec
ficomps
pushl
mov
ret
pop
imul
mov
repz
sub
lret
mov
mov
pop
pop
mov
rcr
inc
or
dec
js
xor
cli
out
xchg
adc
xor
adc
inc
and
push
inc
mov
xchg
add
sar
ds
and
cltd
cmp
fnstenv
adc
sub
mov
or
inc
add
mov
scas
jno
pop
cmp
push
pop
insl
pusha
jmp
jmp
and
pop
or
xorl
inc
ss
ret
imul
mov
xchg
push
push
add
xchg
push
mov
push
sub
dec
mov
dec
out
jge
xchg
jbe
or
imul
out
dec
repnz
enter
cs
pop
out
inc
pusha
sbbb
movsl
out
sub
xchg
filds
stc
leave
inc
xchg
dec
jo
lahf
push
mov
or
in
or
xchg
adc
cmp
pop
fadds
mov
in
and
xor
fmuls
add
mov
cmp
gs
or
adc
pcmpgtd
mov
sub
inc
xchg
and
and
icebp
inc
add
mov
mov
jg
andb
enter
cli
mov
test
jbe
push
push
cld
mov
adcl
push
jae
push
and
jb
jmp
xchg
ret
out
and
and
je
push
stos
xor
mov
fwait
sbb
arpl
lahf
in
mov
mov
sbb
mov
shl
push
mov
mov
lahf
push
add
push
sbb
imul
fbld
jns
je
addb
jne
ljmp
and
or
ds
jne
inc
pop
sbb
push
and
mov
test
movsl
mov
ret
les
imul
mov
or
imulb
or
push
mov
and
jle
adc
or
movsb
xorb
adc
pop
adc
pop
inc
mov
or
incl
mov
push
shrl
cmp
inc
cli
aad
lret
jbe
sub
add
mov
int
add
movsb
push
pop
bound
mov
cli
push
push
jl
ret
ljmp
or
sub
adc
cmp
mov
jge
dec
mov
mov
das
test
sahf
lock
push
cmc
dec
bound
xchg
dec
push
out
mov
add
inc
push
push
scas
popa
int3
hlt
sub
push
add
mov
movsb
inc
ret
inc
sahf
lret
or
movsb
or
clc
sub
pusha
insb
xor
pusha
inc
and
sub
nop
out
xchg
push
xor
and
or
lods
insl
add
add
addl
mov
mov
sub
cld
push
sub
inc
add
xchg
adc
rol
sub
in
push
push
enter
in
mov
pop
cmp
xchg
mov
mov
jae
jno
sti
lea
sub
pop
pop
or
push
mov
push
dec
scas
adc
dec
fdivrl
or
lds
bound
std
adc
icebp
mov
inc
jae
add
cmp
aaa
inc
popa
cmc
jae
xor
ja
dec
lock
push
ja
ss
cmp
jb
pusha
jno
clc
mov
push
mov
mov
jns
jp
inc
or
sbb
mov
jb
fldl
or
jno
cmc
push
jmp
dec
add
sub
mov
int3
inc
jne
adc
sub
popf
mov
nop
xor
mov
lods
sub
ret
dec
lahf
mov
in
cli
dec
xor
cmp
jmp
xchg
or
mov
mov
or
xor
pop
ret
jmp
lret
movsl
or
sarb
cmp
push
or
and
jns
dec
sbb
add
loopne
popa
popa
add
out
add
sub
push
adc
decl
push
inc
cmp
daa
fucomp
fldl
lea
out
bound
sub
mov
mov
xlat
hlt
nop
sub
movzbl
fs
xchg
cwtl
xor
mov
jne
add
or
jmp
lret
add
repz
mov
xchg
sarb
or
repnz
imul
adc
add
add
imul
push
aaa
shrb
lcall
cmp
je
testl
push
or
pop
push
lret
lea
add
pop
jg
lcall
jmp
mov
or
push
inc
sub
jle
shlb
push
xor
and
jns
ret
cmp
adc
xor
cmp
push
out
push
fistpl
or
jle
add
or
add
mov
fcomps
push
das
or
push
push
jl
adc
xor
or
jns
and
lds
andb
jge
sti
and
adcl
sbb
fsubs
sbb
ficomps
mov
popa
jnp
cmp
cmp
sub
stos
pop
mov
sub
movntps
das
and
dec
ret
inc
jmp
ss
xchg
int3
outsb
pop
mov
xor
mov
pusha
sbb
add
or
insl
nop
ficoms
and
loope
and
pop
clc
add
mov
enter
shl
add
icebp
jmp
loope
shl
xor
mov
mov
or
fisttps
movsb
mov
aam
adc
jne
cli
mov
adc
adc
cmp
rcll
incl
pop
mov
pop
push
pop
add
sub
cmp
sbb
pop
dec
adc
pop
inc
loopne
or
sbb
push
mov
sub
mov
mov
add
xchg
or
fs
sar
or
xchg
mov
inc
or
les
pop
or
cmp
mov
testb
inc
push
icebp
sbb
push
mov
xor
sti
jl
inc
daa
test
test
sub
pop
pop
pop
xor
jo
lock
push
inc
and
or
mov
push
pusha
popa
clc
enter
stos
add
sub
mov
imul
sub
and
xchg
inc
mov
js
and
sbb
sbb
and
jp
mov
lds
jge
dec
mov
lods
or
bound
and
rclb
insl
push
xor
out
xchg
adc
and
and
push
add
jne
add
nop
mov
pushf
dec
mov
ficoms
clc
xor
pop
add
jo
and
and
push
icebp
mov
adcb
dec
pop
cmpsl
pusha
sbb
xchg
lock
or
pop
or
loopne
adc
sbb
mov
and
lea
int
mov
cmpsb
je
dec
cltd
lock
inc
sub
add
insl
xor
ss
jns
bound
enter
pop
push
das
add
test
ficoms
push
js
jbe
mov
jmp
das
shr
sbb
sub
cmp
loopne
popa
ss
cmp
aas
cmp
adc
adc
or
out
loope
mov
outsb
xor
dec
jo
add
cmp
dec
lock
push
ret
mov
xchg
jno
jae
xchg
sub
lcall
mov
cmp
mov
push
fildl
dec
sbb
sarb
jmp
repnz
lcall
pop
lds
fadds
lock
inc
mov
lret
cmp
or
xchg
xor
and
lahf
testb
sbb
and
and
gs
ss
lret
ret
das
orb
cmp
sbb
pop
jmp
mov
lret
lea
inc
je
lret
and
ja
sbb
add
push
loopne
sbb
jo
dec
daa
push
mov
mov
sub
fsubrl
in
call
xchg
clc
push
push
adc
dec
add
mov
mov
addb
pop
xor
jae
or
or
fisttpll
sub
gs
push
cmp
inc
mov
or
shll
push
sbb
iret
mov
into
repz
or
lock
or
xchg
sub
nop
jmp
test
aam
inc
loopne
sbb
push
sarl
ret
adc
dec
inc
mov
inc
mov
out
cwtl
dec
andb
sub
into
xor
mov
sbb
movsb
add
insl
imull
mov
or
sbb
mov
daa
test
push
mov
sbb
inc
xor
push
sub
gs
out
sbb
or
rcrl
xor
je
scas
xor
sub
mov
xchg
je
cltd
dec
in
push
das
packsswb
sbb
sbb
cmpl
cmp
mov
pop
push
sub
out
add
cmp
push
cltd
sbb
push
mov
push
push
adc
mov
cwtl
push
fisubs
pop
xor
xor
adc
pop
dec
jmp
incb
sbb
push
lods
test
add
push
push
pop
sub
or
sbb
sub
hlt
sbb
loopne
bound
pop
ss
add
add
dec
cmp
jp
ret
mov
cmpl
xor
out
cmp
jle
mov
and
loop
jo
jmp
inc
cmp
in
in
icebp
insl
jmp
xchg
cmpsb
adc
sbb
jne
push
in
xor
sub
or
das
test
pop
push
inc
cwtl
stos
xor
and
rcrb
cmp
test
add
ret
push
aas
xor
cmp
push
push
mov
insl
or
repnz
insb
inc
or
sub
sahf
dec
jo
jbe
testl
add
loopne
dec
add
aas
or
shll
testb
jne
addl
nop
scas
fcmovnb
push
or
add
test
enter
pop
pusha
sbb
mov
cmpsl
lock
pop
ror
mov
add
clc
stos
lret
jne
and
hlt
cmc
movl
xor
jge
mov
sub
add
mov
in
jo
std
or
sarl
sbb
mov
sub
aaa
sbb
divb
adc
push
add
stos
mov
cmp
xchg
jmp
sub
xor
mov
aam
adc
add
add
mov
pop
sub
shll
dec
popa
es
inc
pop
cltd
lret
or
adc
inc
add
sub
loopne
sbbl
push
pop
mov
push
add
cmp
ss
loopne
jae
test
mov
dec
and
or
xlat
lock
sub
dec
ret
pop
and
faddl
xor
jne
jg
add
pop
xorl
rorb
call
inc
inc
mov
cmp
insl
inc
shll
inc
call
int
cmpb
je
xor
xchg
or
push
push
mov
sbb
or
inc
mov
or
pusha
mov
and
jno
into
xchg
ficomps
add
push
push
sbb
mov
and
pop
adcb
xchg
enter
xlat
fistpl
adc
add
pushl
xlat
mov
mov
rorl
lock
inc
sbb
sbb
pop
push
pop
add
repnz
roll
add
enter
cmpb
leave
jmp
lea
mov
sub
sahf
addb
adc
inc
lock
xchg
bswap
lret
into
jne
lds
sbbb
shrb
and
clc
jle
xor
dec
xor
lret
jmp
test
dec
pop
pop
xor
addb
fs
sbb
and
daa
into
cmp
call
std
cwtl
dec
ss
aaa
nop
inc
ficompl
int
xor
dec
fstpt
jbe
insl
add
xchg
inc
xchg
minps
pop
add
jb
ja
cmpl
push
je
jne
push
xchg
adc
rclb
pop
pop
adc
mov
and
pop
push
sbb
pop
sbb
es
imul
aaa
les
jae
cmp
pop
lahf
orl
test
mov
negl
mov
mov
rcrl
or
or
loopne
and
and
push
mov
popf
sub
movsb
xchg
arpl
cwtl
test
jmp
push
hlt
or
daa
sub
sub
ret
push
mov
mov
int
mov
cltd
mov
add
inc
cmp
stc
push
pop
mov
fwait
pusha
shl
pushl
inc
movsb
loopne
or
loopne
or
cs
cmp
and
cld
sbb
iret
and
lods
int
or
mov
xor
or
dec
xchg
dec
mull
lea
xor
shll
and
add
and
add
cld
jle
rolb
add
or
or
inc
cld
jb
test
mov
xor
scas
or
adc
je
jmp
rorb
mov
adc
xchg
call
call
cmp
in
push
popa
xchg
movsl
and
icebp
imul
jnp
fcoms
push
mov
or
jae
sub
push
shrb
xor
xchg
fiaddl
sub
xor
add
pusha
stc
movsb
outsb
shl
mov
adc
and
pop
xor
or
out
inc
add
in
xor
ss
push
loopne
cmp
insl
loopne
mov
in
mov
ret
pop
sub
sub
fcoms
fcoms
rcr
cmp
fisttpl
sub
jbe
dec
int
lock
sbb
adc
adc
fldt
psubsb
loop
popa
rol
pushf
adc
pop
mov
and
repz
pop
pop
pop
pop
mov
jbe
cltd
jmp
pop
mov
enter
sbb
sub
push
jbe
enter
lcall
jmp
ret
cmpsb
xor
sbb
pushf
sub
lods
shrb
dec
add
pop
in
popa
and
cmpsb
jle
sbb
dec
dec
pop
insl
add
and
fidivrl
xchg
shr
add
or
clc
adc
adc
in
nop
push
adc
dec
add
dec
clc
in
or
mov
mov
nop
mov
adc
cmp
add
inc
cmp
xor
push
jo
and
mov
lock
aaa
movsl
or
out
add
ja
push
mov
fsts
pop
dec
push
ds
jae
sub
xor
xchg
add
or
pandn
icebp
cmc
scas
inc
pop
int
push
inc
je
sar
loopne
fistpl
xor
repz
mov
cmp
xchg
movsl
push
inc
xor
test
js
and
aas
dec
push
scas
icebp
sahf
or
pop
mov
mov
out
pop
pop
ret
sti
push
adc
enter
inc
mov
or
mov
xlat
adc
pop
cmpl
pushf
mov
push
je
mov
jno
jle
sub
inc
mov
adc
add
pushf
push
inc
jmp
in
cmp
das
push
mov
adcb
lods
scas
pop
popa
insb
add
je
and
repz
cld
add
outsb
jbe
rolb
or
push
shll
and
sub
push
jmp
stos
dec
loope
jb
jl
jl
mov
mov
push
cmp
out
stos
and
pop
inc
inc
inc
mov
pop
jb
cmp
test
test
dec
mov
insl
daa
shll
call
push
fnstenv
sahf
xchg
shlb
loopne
jnp
adc
mov
jge
dec
jo
mov
mov
cld
cmp
push
movsl
outsb
or
mov
cmc
push
inc
incl
and
jne
fisubrs
adc
loopne
mov
fcompp
in
push
mov
lock
sub
xor
and
dec
adc
popa
insb
sbb
mov
movsl
or
xchg
sub
sbb
je
adc
or
push
dec
sub
push
movsb
ret
push
dec
out
jle
and
aaa
pusha
or
add
pop
sbb
sbb
add
cmp
cli
jg
jmp
add
push
pushw
xlat
nop
jmp
xor
addl
icebp
jnp
mov
cmp
mov
or
and
and
pushf
es
push
mov
je
cmp
dec
inc
pop
pop
and
or
mov
sbb
pop
and
push
inc
sub
ret
adc
or
mov
mov
movsb
ret
mov
jl
in
adc
add
sub
jbe
dec
mov
dec
push
dec
lcall
jnp
jmp
add
xchg
dec
stos
lcall
jb
mov
pop
int3
push
pop
in
pushf
push
orb
test
mov
push
loope
loop
mov
push
jmp
nop
cltd
mov
ror
push
adc
and
out
jne
pop
outsl
lods
les
push
arpl
xchg
add
sbb
sbbl
jp
sub
test
xchg
mov
mov
push
xchg
sub
mov
mov
insb
cmpsl
in
je
xor
pop
ja
dec
rol
cmp
jmp
adc
fcomps
addr16
ljmp
int
scas
lds
shll
sbb
mov
roll
je
movl
adc
out
sub
sbb
mov
or
testb
adc
fsubrl
jle
rcrb
js
xor
ret
and
call
push
xchg
jnp
mov
mov
fmuls
jle
add
lods
xor
mov
add
or
cmp
adc
cmp
cmp
mov
and
mov
jg
fs
test
movd
pcmpeqd
fsubp
sub
push
clc
jae
xor
test
xor
cli
rcl
lret
xor
mov
jl
and
popa
sbb
test
xor
jg
outsl
out
hlt
xchg
ret
adc
jnp
mov
mov
ficoms
sbb
aam
ret
or
add
adc
outsb
sarl
add
rcrl
ret
mov
mov
pop
pusha
addsd
int
add
out
sub
ret
adc
dec
sbb
dec
dec
fistpl
and
adc
dec
and
cmp
aas
imul
pop
mov
add
dec
or
push
and
test
mov
orl
js
adc
pop
call
aam
pop
xor
push
ret
jge
mov
pushf
dec
mov
pop
pop
xor
sbbl
mov
fldl
xchg
dec
sub
or
dec
rcll
jl
jb
pop
add
or
add
fmul
loope
cmp
dec
jg
icebp
jb
neg
data16
sub
mov
adcl
jmp
loopne
add
or
cld
lret
or
stos
mov
dec
sbb
cmp
ljmp
xchg
and
adc
push
outsl
inc
push
int
pop
test
adcb
roll
cmp
lock
pusha
clc
jb
push
pop
mov
insb
adcl
and
cmovs
push
cli
and
scas
push
mov
inc
in
incl
adcl
jb
rep
jmp
mov
jo
sub
cmp
jb
fwait
mov
enter
das
ds
hlt
repz
in
push
js
or
pop
aaa
test
loope
rorl
data16
xor
jbe
inc
add
add
mov
int3
lea
dec
add
movl
movsb
rclb
iret
repz
rorb
mov
mov
cwtl
mov
mov
call
jns
in
lock
les
out
clc
clc
cld
mov
pop
stos
adc
clc
fldcw
aam
mov
or
sbb
push
adc
xor
nop
inc
or
add
inc
jnp
popa
xor
sbb
lea
adcb
or
push
mov
scas
adc
xor
xchg
xchg
daa
stc
sub
pop
nop
xchg
push
mov
sub
mov
add
sahf
inc
push
out
lods
pop
push
jns
add
sbb
dec
addr16
add
mull
imul
ljmp
push
lahf
out
sahf
inc
dec
push
pop
fs
out
sahf
pop
aaa
sbb
sbb
sahf
out
sahf
adc
adc
or
inc
sahf
out
or
add
clc
mov
or
xchg
xor
test
and
daa
cmp
dec
lods
ja
inc
movsb
pop
push
jbe
dec
mov
pushf
scas
and
and
xchg
daa
mov
cld
mov
in
or
fbld
lods
jl
scas
add
negl
push
mov
test
sbb
add
cmpb
sbb
cmp
rcrb
lea
add
mov
push
push
inc
inc
sbb
push
mov
jmp
jp
je
mov
push
jmp
rorl
sahf
xchg
inc
jmp
mov
pop
xlat
adc
inc
lcall
add
leave
pop
and
inc
es
inc
ja
dec
cmp
cmp
and
insl
aas
mov
cmp
je
cmpsl
fimull
sbb
mov
pop
mov
push
sbb
arpl
sbb
sub
popf
mov
xchg
push
hlt
inc
mov
and
add
sub
sbb
mov
pusha
das
loopne
dec
sub
mov
xchg
popa
and
pushf
test
mov
pop
add
test
pusha
adc
inc
push
hlt
fld
dec
xchg
aas
mov
push
push
push
ljmp
adc
inc
cmp
jne
inc
cmp
ds
lcall
pop
or
dec
adc
adc
push
push
pop
mov
push
adc
pop
test
inc
pusha
and
dec
dec
jb
sub
mov
or
mov
hlt
cmp
pop
cmp
rorl
imul
arpl
dec
adc
inc
jae
ficoms
cmp
lret
mov
xchg
push
aam
adc
or
dec
loopne
subl
jns
mov
mov
add
pop
cs
daa
nop
and
inc
movsl
jg
popl
cmp
add
jmp
pop
daa
cltd
stos
add
enter
fisttpll
mov
cmp
jns
shl
shlb
dec
leave
sbb
or
or
inc
pop
cmp
mov
mov
push
xor
xor
ret
cmp
aam
orb
sbb
daa
sbb
jmp
jnp
or
xchg
adcb
jecxz
inc
inc
mov
shlb
testl
adc
sub
sub
and
xchg
seta
inc
mov
push
or
inc
cmc
cmp
cs
in
dec
add
decb
jne
orl
loope
mov
push
xor
xor
or
jae
subb
hlt
aad
in
and
xchg
mov
inc
xchg
inc
sub
sarb
mov
mov
and
and
inc
mov
sbb
inc
je
lret
mov
mov
inc
inc
cmp
std
mov
xor
jmp
mov
cmp
ja
icebp
das
cmc
inc
push
into
and
movb
lea
clc
lds
xchg
neg
mov
in
fstpt
fmull
or
add
jmp
or
mov
inc
fisttps
xor
push
cld
jb
mov
sub
pop
sub
add
daa
cli
mov
jmp
mov
dec
mov
mov
dec
dec
mov
inc
cmp
jb
lret
ret
mov
sub
mov
nop
jo
inc
jle
or
add
lar
sahf
ret
or
rorb
mov
pop
dec
fildll
push
cmp
jb
lea
or
adc
les
mov
push
cmp
jne
mov
push
cmp
jne
out
outsb
sahf
es
jne
call
shll
cmpsb
jge
iret
jnp
jno
jmp
adc
push
dec
jmp
adc
icebp
cmp
iret
jmp
std
std
jmp
cld
cld
xchg
lock
int3
ret
pmaxub
lret
popa
adc
push
jb
push
and
idivb
movb
shr
stc
rolb
jb
xchg
xorb
movsl
mov
add
popa
or
testb
push
sbb
call
cmp
xchg
lock
xchg
jae
ljmp
inc
jb
std
or
sub
leave
inc
or
adc
dec
arpl
xor
addb
and
add
pop
jb
or
aas
lea
mov
mov
or
jge,pn
andb
add
les
test
and
iret
decl
popa
or
jg
add
mov
push
scas
add
jno
add
push
jg
push
push
cmp
mov
pop
push
add
dec
cmc
push
and
gs
mov
xchg
and
mov
pop
jle
push
push
pop
div
jb
or
lcall
jecxz
stos
pop
clc
xorb
lock
xchg
or
lods
pop
sub
clc
pop
adc
push
mov
psubb
or
cmpsl
cs
loopne
push
push
sub
xchg
gs
pop
adc
insb
sub
adc
sub
loop
loope
xchg
arpl
and
xchg
or
fsubrl
dec
sarl
lea
nop
clc
cmc
inc
dec
loope
loope
add
add
or
mov
mov
mov
popf
cltd
leave
xor
enter
fwait
jge
or
jl
or
lods
push
mov
ficomps
jle
cmpl
and
ljmp
inc
fstl
repz
pop
inc
jmp
cmp
jne
inc
test
sbb
jmp
adc
jne
sub
clc
dec
fcomip
testb
cmp
push
xor
outsb
adc
xor
pop
pop
push
jns
out
or
and
adc
insb
call
jne
pop
jne
dec
add
add
lds
sbb
pop
mov
cmpsb
xor
or
test
push
mov
xchg
lock
fidivs
lret
sub
cmp
jle
add
ja,pn
xor
cmp
jae
ss
aaa
push
push
movsb
loop
ret
and
cmp
xor
inc
ret
or
je
dec
push
and
lcall
add
jmp
mov
sbb
rorb
or
lea
loope
or
cld
jbe
add
test
add
scas
and
add
pop
lods
push
movb
into
mov
lods
mov
test
xor
inc
mov
das
mov
mov
pop
aaa
js
push
xchg
mov
loop
add
popf
adc
das
sbb
mov
test
inc
and
xchg
pushf
inc
or
push
and
imulb
inc
addb
lea
stos
mov
shr
fs
sbb
rolb
rorb
pop
sub
test
jo
xchg
jno
jbe
push
sarb
pop
push
andl
mov
jne
idivb
mov
jmp
rclb
pop
add
jbe
sbb
adc
sbb
stc
adc
mov
cli
mov
inc
inc
xchg
testb
sbbb
sbb
ret
je
inc
jl
sbb
cmp
add
fdivrl
test
sub
testb
inc
mov
mov
subb
mov
lret
jo
mov
dec
jmp
jle
shl
cmp
sub
out
sbb
push
aas
push
push
bound
xlat
es
push
jmp
xor
or
test
jne
stos
lock
push
fstps
push
dec
push
movsb
ret
bound
stos
and
adc
sbb
or
stos
adc
and
fs
add
and
pusha
inc
dec
ret
inc
nop
mov
inc
and
nop
add
fsts
jae
fwait
or
jecxz
roll
sbb
xor
cltd
mov
mov
xlat
adc
fidivs
sub
add
push
add
fists
and
sbb
incl
pop
cmp
int
hlt
je
inc
cmp
jb
lea
push
adc
jp
dec
ss
cmp
adc
mov
cmp
movsb
mov
adc
cli
mov
dec
add
enter
es
mov
mov
test
ret
mov
mov
xlat
jne
push
out
cmp
and
xchg
or
push
xor
adc
pop
pop
jmp
pop
ret
add
inc
jno
xchg
push
and
xor
push
add
movsl
jl
pop
dec
inc
mov
inc
in
in
mov
push
jae
test
mov
sub
xchg
andl
pop
mov
jnp
add
mov
fnstcw
ja
test
call
xor
or
dec
xor
adc
decb
std
movb
sub
outsb
fiaddl
leave
sub
std
add
mov
ds
push
jle
push
rolb
popa
icebp
jno
imul
push
movsl
push
sbb
or
adc
mov
rorl
fdivl
adc
ja
cmpl
loopne
xor
push
das
mov
add
negb
ja
ficomps
xor
addr16
repz
add
test
insl
test
lods
fwait
jle
push
adc
xchg
aad
push
xor
imull
outsb
pop
decl
pop
mov
ds
shlb
xor
or
les
jb
pop
add
pmaxub
inc
shll
es
or
in
xor
repnz
fsubrs
mov
int3
pop
int3
add
mov
daa
pop
shl
xchg
or
mov
jmp
xor
mov
mov
inc
and
sub
je
push
and
shlb
and
mov
sub
adc
ljmp
sbb
mov
push
mov
mov
xchg
rolb
mov
pop
pop
fcomps
js
xor
mov
or
push
sub
xor
cmp
in
sbb
ss
jp
mov
xlat
test
out
pop
or
je
cmpsb
fdivrl
fsubr
lahf
push
push
cld
mov
call
xchg
xor
inc
jno
sub
rcll
sbbl
adc
adc
sub
mov
mov
cwtl
mov
push
pop
sbb
test
lret
mov
jl
mov
mov
fsubr
push
mov
outsl
lods
push
in
inc
mov
pop
ret
int3
add
add
test
push
cmp
add
add
or
mov
adc
rcrb
add
cmp
test
push
sub
add
xchg
shrb
xor
mov
ljmp
add
xchg
inc
loop
data16
out
jmp
fsubrl
add
mov
in
lds
mov
sub
sub
dec
add
push
push
and
inc
loope
addl
dec
dec
pop
sahf
add
test
cmp
push
bound
daa
mov
sbb
test
test
mov
adc
mov
adc
rolb
and
pop
sub
push
in
ljmp
test
xchg
or
stc
and
fxch
pop
in
xor
les
dec
jge
pop
inc
pop
aaa
clc
inc
jg
mov
mov
jl
lret
loop
or
loopne
or
inc
pusha
pop
out
add
pop
push
inc
add
or
test
and
push
jb
enter
sbbl
call
pop
jne
cmp
or
outsb
xor
pop
xor
pop
mov
push
jle
mov
adc
out
ret
mov
lret
lock
mov
jmp
sub
mov
inc
jmp
out
cmp
imul
in
dec
mov
cwtl
dec
mov
gs
push
push
pop
jle
inc
mov
cmp
je
lldt
add
sub
je
fisubl
cld
or
pop
sbb
adc
imul
jo
pop
add
mov
iret
add
daa
add
enter
or
cmpsl
jnp
dec
add
in
fcomip
cmp
je
lcall
flds
add
pop
enter
xchg
pop
push
push
and
push
pop
jb
or
nop
out
or
or
add
or
sub
nop
or
pop
or
loop
or
add
or
lcall
out
or
ror
repnz
ja
push
imul
adc
inc
push
fcomps
adc
fwait
sub
ret
enter
inc
or
ds
pop
enter
adc
dec
push
jns
ret
adc
jb
mov
adc
nop
adc
in
cmp
pop
pop
mov
sbb
sbb
sbb
sbb
nop
out
add
add
sbb
inc
push
sbb
sbb
mov
sbb
je
pop
sbb
mov
jge
sbb
sbb
jae
addb
pop
mov
and
ret
sub
cmp
fldt
xchg
mov
add
cmp
xchg
daa
loopne
push
loopne
mov
repz
cmp
je
lcall
push
in
repnz
lea
iret
add
sahf
aad
cmp
mov
cmp
fwait
out
add
fdivrs
call
adc
dec
dec
cwtl
jmp
in
sub
inc
push
or
sbb
sbb
in
in
cltd
inc
fsubp
add
add
sbb
sahf
out
out
mov
sbb
pop
orb
lock
enter
icebp
icebp
vmwrite
out
std
xchg
inc
enter
leave
std
hlt
rcrb
pusha
hlt
fwait
push
fdivs
jb
cmc
cmc
inc
jg
add
div
pop
lret
popa
idivl
cmp
sbb
inc
lcall
add
stc
inc
stc
lock
sbb
inc
sahf
cli
cli
iret
sti
cmpsb
repnz
sbb
stos
cld
cld
andl
dec
fisubrs
divb
mov
xor
add
addr16
adc
dec
jne
xor
or
adc
add
orl
push
das
mov
or
push
xchg
add
jecxz
jb
mov
inc
in
inc
scas
mov
icebp
inc
mov
stc
daa
xchg
sti
out
pusha
adcl
out
outsb
xchg
cmp
sbb
add
or
sub
sub
sbb
mov
in
xlat
in
cli
in
add
mov
cmpsb
jb
cli
out
out
out
cltd
inc
pop
and
push
lock
andb
sbb
jmp
pop
push
mov
cltd
sar
push
xchg
mov
dec
in
xlat
fstpl
div
jb
mov
xor
jns
xor
sbb
pop
repnz
clc
cmp
movsb
test
cmp
enter
cld
andl
inc
pusha
cli
mov
mov
dec
xor
sar
inc
and
cmc
cld
sub
adcl
loop
icebp
notl
pop
shl
push
xor
scas
idivl
mull
adc
out
out
cltd
cmp
sbb
out
inc
notl
sub
xchg
and
sbb
sti
imul
ljmp
negb
repnz
notb
and
jb
or
negb
mov
adc
testb
cmpsb
jb
pusha
sbb
adc
xchg
bnd
cmc
pop
leave
and
in
xlat
xchg
cmc
pop
dec
cmc
sarb
fwait
mov
scas
jae
pop
add
clc
jne
cmpb
hlt
stc
push
jns
loopne
cmp
mov
dec
cli
jno
hlt
mov
adc
pop
jne
mov
push
hlt
sbb
andb
data16
hlt
testl
sti
das
xchg
pop
loopne
pusha
adc
jp,pt
dec
ret
dec
sub
les
mov
pop
repnz
repz
movsl
test
repz
imul
test
inc
repz
repnz
push
cmp
jmp
jmp
mov
xorl
sbb
pop
sbb
sbb
cmc
and
repnz
and
test
and
mov
arpl
js
divb
jne
jns
icebp
jb
test
xor
push
icebp
cmp
rclb
cmc
sub
xchg
sbb
icebp
jecxz
andb
sbb
popf
lock
stc
daa
xchg
inc
fdiv
jne
push
lock
sbb
push
lock
test
ss
aam
rorb
loop
or
sub
out
ret
sbb
inc
ds
add
nop
addr16
add
stos
mov
dec
add
push
or
test
adc
or
cmp
add
dec
add
jmp
popl
out
enter
ljmp
dec
or
and
cmp
add
push
cmp
popa
mov
insb
push
popf
pop
test
or
sbb
sahf
push
jle
mov
stos
pop
pxor
pop
idivb
dec
sbb
push
pusha
insb
lea
mov
push
rol
outsb
push
inc
out
into
repz
outsb
or
inc
out
or
mov
push
shlb
das
inc
in
loope
lret
mov
jle
mov
cs
cld
jge
push
push
mov
push
mov
arpl
pop
fistpl
pop
shl
cli
dec
mov
cmp
add
addb
movsb
push
shlb
mov
je
add
js
fmuls
jnp
cwtl
fmuls
and
add
stos
and
stos
add
andb
xorl
add
add
xchg
adc
icebp
lea
jecxz
add
jl
test
fimuls
movsl
dec
adc
out
imul
cmp
and
inc
stc
push
push
pop
inc
cmpsl
mov
test
push
sub
mov
in
lcall
cld
add
jne
sbb
je
xor
jne
mov
aam
mov
mov
jecxz
shrb
pop
inc
inc
inc
inc
pop
or
jle
pusha
cmp
mov
mov
jb
adc
mov
pop
inc
push
inc
and
mov
add
or
mov
in
popa
faddp
add
dec
adc
cmpsb
or
or
and
sub
movsl
sbb
roll
sub
inc
inc
pop
cmp
enter
test
xor
orps
push
or
or
es
cmp
pop
dec
xchg
hlt
and
ja
jno
lods
or
insb
xor
fists
sbbb
jmp
mov
add
xchg
fs
add
dec
jne
jo
sub
sub
add
cmc
clc
or
adc
mov
adc
adc
stc
jecxz
jo
aad
lret
mov
adc
lods
scas
pushl
jne
mov
mov
inc
inc
cmp
es
sbb
outsb
out
xor
sbb
sbb
bound
push
mov
pop
pop
push
xchg
cwtl
ja
xor
pop
subb
popa
mov
clc
pusha
inc
sub
enter
icebp
sbb
add
mov
repnz
xchg
clc
lods
add
push
test
je
sahf
cmovae
mov
jmp
stos
add
testb
movb
sbb
lret
nop
aaa
adc
mov
sub
inc
aaa
cmp
mov
hlt
mov
test
push
leave
adc
mov
inc
loop
jns
jo
fists
mov
or
dec
mov
xchg
xor
das
adc
repnz
jg
mov
mov
adc
mov
mov
incl
inc
decl
jne,pn
adc
mov
loop
repnz
mov
cmp
cmpl
mov
mov
sbb
cltd
pop
idiv
rclb
pusha
or
pop
mov
pusha
ja
xchg
aaa
dec
inc
pop
mov
enter
mov
jo
jmp
cmp
jae
dec
mov
pop
jae
pop
jbe
inc
jl
js
adc
dec
out
stos
push
and
mov
pop
sub
adc
dec
bound
pop
mov
push
jg
fsts
test
cmp
xorb
add
movsl
test
or
mov
mov
dec
je
push
push
jne
sub
add
roll
pop
dec
mov
xor
adc
or
sarb
push
mov
inc
pop
fstps
cmp
nop
out
das
sbb
and
and
sbb
int
jo
fs
mov
or
mov
xor
add
sbbb
popa
fisubrs
test
inc
loop
dec
push
fisubrl
pop
xchg
push
mov
stos
movsl
pop
rol
imul
pop
cmp
inc
enter
ja
insl
scas
mov
or
aas
jge
dec
and
or
push
cltd
pop
idiv
inc
mov
mov
lcall
out
mov
es
addr16
jmp
mov
xor
mov
xchg
sahf
xor
js
cmpsl
enter
mov
imul
and
jl
xchg
dec
inc
insl
mov
sbb
sub
mov
mov
pop
movsb
loope
adc
repnz
pop
subb
cmp
and
dec
push
fcomps
or
add
pop
out
ljmp
incl
pop
loop
jno
push
sti
sub
loop
loopne
xchg
ret
ss
inc
xor
pop
jmp
pushf
loop
lock
push
mov
popf
push
pop
xchg
push
cmp
loope
push
jmp
jge
pop
je
sbb
push
enter
jl
fs
jle
adc
das
lcall
gs
jno
mov
mov
movsl
call
mov
je
loopne
mov
dec
inc
nop
jne
mov
or
pushf
mov
bound
lret
or
popa
test
adc
cmp
sub
insb
lahf
pop
popl
outsb
sub
or
and
icebp
jle
pop
push
cltd
push
or
adc
dec
inc
xlat
sub
dec
cmp
pop
stc
aad
mov
or
inc
lds
push
pushf
outsl
adc
jp
and
mov
es
push
jle
ret
push
je
mov
and
mov
push
movsb
xchg
leave
cmpl
cli
sub
sub
add
push
jle
jecxz
push
hlt
mov
adc
mov
adc
push
loopne
adc
sahf
idivl
out
call
add
cmpsl
push
adc
scas
jae
pop
pushl
jbe
dec
ljmp
push
ret
xchg
rorb
inc
jp
std
jg
sar
icebp
push
pop
push
fadds
sbb
rolb
sbb
inc
push
js
sub
jl
lods
mov
push
inc
jg
mov
inc
gs
mov
mov
pop
push
subb
lcall
inc
mov
clc
mov
inc
inc
cmp
je
xor
cmp
movsbl
cmp
cli
orb
sbb
adc
add
xchg
push
or
dec
popa
movl
dec
sbb
mov
pushf
mov
jmp
scas
cmp
mov
incl
fdivr
hlt
push
adc
rcr
or
inc
sbb
icebp
or
pop
cmp
mov
pop
fidivrs
lcall
and
leave
xor
insl
sbb
lret
mov
add
dec
push
push
cmp
sti
and
add
sub
cld
mov
mov
addr16
test
ror
lret
test
incb
jg
sarl
pop
cmp
je
mov
and
and
and
mov
outsl
adcl
mov
rolb
clc
sub
mov
add
push
pop
inc
pusha
in
es
shll
pop
add
or
cli
frstor
fistpl
dec
movsb
jb
add
in
fldenv
inc
sbb
mov
adc
adc
xchg
ror
adc
and
add
shll
jo
cmp
inc
bound
jne
jmp
dec
or
sub
push
jmp
das
cmp
push
dec
sbb
int3
into
xchg
cmpsl
test
cmp
jae
fiaddl
pop
mov
and
dec
loope
cmpsb
push
stos
mov
lret
pop
clc
ret
dec
mov
repnz
adc
inc
gs
dec
out
adc
inc
xor
lock
sbb
ret
push
xchg
cmp
push
jns
and
push
adc
test
call
inc
sbb
mov
mov
mov
or
scas
mov
cmp
sahf
and
out
imul
cmp
mov
inc
or
inc
inc
pop
das
jecxz
sar
mov
outsl
inc
or
orl
jbe
subl
movsb
cltd
jne
or
pop
add
push
imull
mov
xor
clc
and
idivl
ja
inc
andb
js
aas
pop
xchg
dec
and
jno
adc
adc
repnz
enter
mov
jmp
jne
add
adc
add
add
and
das
jns
mov
out
inc
sub
add
push
adc
jns
jo
inc
scas
dec
pop
and
dec
bound
rep
jmp
or
pop
fdiv
mov
sub
pusha
hlt
add
loopne
push
scas
sbb
loopne
movsb
lock
pop
aas
xchg
jno
punpckhdq
outsb
mov
add
jne
push
arpl
ljmp
xor
fucom
pop
arpl
xchg
push
jno
inc
imul
and
icebp
je
iret
or
imul
add
jp
push
rcl
mov
rol
inc
add
inc
mov
mov
add
movsb
cld
adc
fadds
xor
test
dec
loopne
jecxz
in
cld
add
lods
lret
or
into
popa
jl
stos
cmp
xor
jbe
aam
mov
pop
cmp
and
mov
pusha
inc
jo
shlb
push
mov
bound
js
aad
cli
scas
xor
mov
cwtl
cmpsb
imul
lock
arpl
add
cmpl
lods
dec
fcomps
and
pop
inc
int3
or
sarb
add
pop
movsb
ror
cmp
and
icebp
and
pushf
enter
outsb
scas
xchg
sbb
mov
jmp
mov
dec
ret
sbb
inc
dec
maskmovq
mull
xor
pop
or
data16
loopne
and
or
sub
jp
ret
bnd
jnp
or
adc
push
xchg
test
fs
sub
push
add
push
sbb
jo
arpl
imul
test
fidivrl
push
cwtl
ja
aaa
icebp
push
daa
mov
push
adc
mov
rclb
arpl
push
shlb
jge
cmp
lods
aaa
and
dec
rorb
jge
fiaddl
xor
sbb
pop
or
or
or
iret
js
popa
ret
inc
out
mov
fistl
pop
sbb
mov
sub
dec
loope
dec
mov
pushf
xchg
cli
repnz
inc
mov
dec
push
jg
adc
in
fcoml
xchg
orb
push
xchg
cmp
test
out
mov
cmp
push
pop
test
ror
rcll
mov
ficoml
sbb
hlt
fadds
in
push
jne
sub
xor
mov
call
sbb
push
push
sub
cld
adc
int
push
aaa
sbb
rorl
incl
or
sub
mov
mov
cmpsb
pop
dec
test
mov
gs
push
push
inc
sub
ffree
dec
push
mov
ret
test
mov
les
loope
add
mov
pop
inc
dec
fwait
mov
test
js
fistpll
loopne
out
into
vxorps
rolb
and
mov
lock
adc
push
in
pop
pop
jae
xor
sub
andb
or
je
add
xor
xor
push
dec
or
pop
pop
sbbb
mov
jmp
aad
ret
jmp
pop
repz
sti
sbbb
insl
adc
dec
xchg
mov
ret
arpl
loop
sbb
cwtl
xlat
mov
cmp
loopne
lea
inc
pop
fcoms
xor
jno
into
mov
jo
cltd
and
sbb
xor
jo
leave
mov
cmp
lea
push
repz
push
add
cmp
rcr
inc
outsb
mov
call
push
das
ficompl
push
pop
or
or
ret
les
rorl
add
sub
or
push
cwtl
andb
mov
push
mov
push
mov
out
jbe
lods
lret
test
sub
pop
jecxz
in
outsb
mov
in
mov
xor
cld
lods
cmp
push
or
mov
and
popl
jo
lods
cmp
add
inc
clc
push
dec
pop
test
push
movl
cmp
xor
sarb
dec
and
imull
adc
loope
lea
xchg
mov
clc
scas
jo
sub
loopne
call
add
in
inc
xor
sbb
jl
cld
sub
leave
js
nop
lods
pop
or
ror
or
or
xchg
adc
pop
sbb
or
xchg
xchg
les
xchg
test
add
shll
clc
lods
or
shl
or
repnz
jle
pusha
mov
mov
sub
mov
cmp
dec
jne
lea
adc
cmc
mov
xchg
and
jb
call
or
mov
adc
sar
mov
inc
xchg
or
mov
and
inc
jl
sbb
add
in
outsb
frstor
or
lods
ja
sub
add
test
and
or
add
push
inc
push
shlb
xor
cmp
cld
ficoml
push
or
aam
push
dec
fadds
fldt
std
push
cmp
outsb
jae
pop
inc
inc
cld
mov
dec
and
adc
xchg
dec
int
jbe
pushl
sbb
jmp
and
je
lahf
mov
test
push
in
call
test
add
mov
dec
out
fs
mov
std
pop
mov
cmp
and
sbb
or
push
roll
cmp
push
and
sub
ljmp
pop
xchg
or
in
sbbl
movb
ja
mov
jecxz
in
or
insb
or
ja
loopne
xor
pushf
mov
sbb
imul
jno
loop
cmp
add
test
sbb
lock
and
mov
call
insb
aas
loopne
push
hlt
ret
outsl
das
jmp
lcall
add
mov
cmp
jl
fisubrl
mov
dec
lret
cmpsb
push
cmpsb
push
sub
aam
in
in
jb
cmp
std
jne
mov
jmp
sub
stos
fst
imul
iret
adc
xchg
pusha
rclb
jecxz
cmp
adc
push
mov
jbe
insb
popf
cmp
push
imul
xchg
cld
fimuls
repz
xor
orl
fidivl
push
jmp
fs
xchg
jbe
pop
es
push
add
faddl
dec
push
pop
inc
js
push
inc
rolb
jnp
xchg
cli
push
inc
jae
cmp
jbe
call
mov
test
push
lods
rcll
inc
pop
leave
inc
xor
pop
sub
jne
stos
push
mov
aaa
jmp
loopne
dec
mov
into
sub
cld
jmp
clc
fs
andb
cmp
rorb
ljmp
ss
jne
outsb
incl
call
add
jb
ja
mov
xor
inc
xor
sti
dec
dec
in
adc
mov
inc
mov
mov
inc
dec
jne
mov
inc
insl
push
outsl
out
push
es
sbb
jle
or
inc
jo
cld
push
jg
inc
push
mov
inc
dec
jne
add
cmp
mov
add
pusha
sbb
xor
cltd
push
jnp
test
xor
cli
test
pop
fcoml
je
adc
adc
bound
add
mov
fimuls
mov
loop
push
arpl
clc
shll
mov
add
mov
pusha
insl
lcall
outsl
mov
loopne
sbb
add
inc
sbb
jbe
inc
shrb
sbb
fsubrs
sub
xlat
cli
jo
jmp
ljmp
or
xchg
std
and
fs
push
or
ret
ss
adc
dec
icebp
std
outsb
xor
lret
pop
sub
jmp
xor
add
mov
mov
add
cmp
pusha
push
scas
mov
push
jmp
adc
jno
es
jb
jmp
xchg
inc
data16
push
inc
and
loope
add
aad
jp
mov
leave
cmpl
push
and
pop
movl
andl
fisubrs
and
in
or
push
xor
or
pop
sbb
rcll
xor
ds
jge
mov
lret
xor
lahf
jno
rcl
rcrl
sbb
sub
cltd
xchg
int3
mov
imul
shr
scas
popa
mov
aam
pop
cmp
dec
int3
push
cwtl
mov
jne
cld
mov
mov
out
jle
or
push
and
clc
pusha
or
fs
bound
pop
cld
rolb
sub
fdivr
dec
or
sbb
dec
xor
test
mov
push
sbb
mov
lea
dec
outsl
sbb
or
out
pusha
fsubrs
ret
jo
cmp
or
loopne
xor
sub
sbb
clc
and
mov
sbb
and
icebp
je
push
mov
lcall
lahf
cmp
add
gs
leave
push
jbe
inc
loope,pt
xor
mov
jle
sbb
add
pushf
sub
loopne
push
les
dec
inc
aaa
es
mov
jmp
push
faddp
push
and
push
pop
mov
pop
dec
inc
int3
inc
xchg
mov
jne
sbb
push
cmp
shl
xlat
ljmp
mov
add
jns,pn
hlt
aaa
adc
dec
ljmp
fisubl
cmc
dec
mov
leave
mov
xchg
fisttpl
add
call
sub
mov
dec
inc
inc
mov
movsb
cmp
push
push
push
mov
or
aas
push
loope
mov
sbbl
cs
mov
inc
adc
icebp
pop
cmp
inc
mul
enter
cwtl
and
sbb
inc
xchg
lret
popa
cmp
insb
push
cld
push
jo
pop
gs
rcl
addl
test
jecxz
mov
movsb
xchg
js
js
add
imul
in
in
jae
in
xchg
test
insb
jg
mov
sbb
outsl
mov
dec
cmp
push
xchg
ja
or
ret
dec
push
add
scas
cmc
cmp
push
push
movsb
pushf
xchg
mov
dec
sub
add
add
repnz
out
xor
not
movsb
pop
fwait
xor
pop
sub
adc
or
mov
mov
dec
dec
and
sbb
sbbl
enter
push
popa
int3
loop
cmp
data16
cmp
pop
sbb
pushl
xchg
inc
jmp
ds
lret
jbe
and
in
stos
mov
je
jle
or
outsl
imul
pushf
cs
insl
jg
push
push
adc
rolb
adc
mov
cwtl
bt
pop
and
cmpsl
dec
mov
push
jge
shlb
or
xor
hlt
pop
daa
test
jge
mov
xchg
dec
ja
dec
insb
lcall
aad
and
dec
imul
mov
jbe
gs
lret
pop
pushf
cwtl
mov
pushf
loopne
jb
pop
pop
ds
mov
push
xchg
push
shll
mov
and
and
mov
adc
mov
and
leave
sub
andl
fmuls
inc
popf
in
mov
sub
nop
rcrl
mov
mov
or
fcoml
sti
mov
mov
mov
clc
or
repnz
enter
shrb
pushf
popl
aam
xchg
add
sarl
rcl
aaa
dec
cld
adc
sub
or
cmp
aam
xchg
mov
test
inc
inc
sbb
inc
cmp
push
mov
xchg
test
mov
test
xchg
add
mov
jge
jl
adcb
or
mov
add
ret
pop
bts
jmp
mov
dec
repz
es
mov
cs
js
and
mov
xor
sahf
iret
push
dec
dec
mov
enter
inc
shl
test
test
lahf
in
mov
sahf
imull
xchg
or
push
adc
orb
add
mov
call
xchg
pop
add
dec
push
pop
insb
push
repnz
cmp
popa
cmpsl
sbb
aam
pop
nop
in
xchg
nop
lahf
adc
add
rclb
fisubrs
test
push
xchg
pushf
movsb
and
repz
mov
nop
mov
inc
loopne
call
push
clc
or
lahf
test
popa
and
cmpsb
pop
adc
sub
sbb
push
and
mov
mov
or
shll
out
data16
inc
jmp
cmp
jne
and
data16
dec
push
dec
or
test
in
inc
inc
xor
rorl
jge
or
mov
xchg
mov
mov
pop
pop
out
int3
inc
and
test
add
aam
pop
or
andl
loopne
jge
icebp
add
add
pop
adc
and
stos
and
pop
jno
mov
nop
mov
dec
sbb
mov
hlt
mov
insb
push
hlt
call
popa
and
mov
push
inc
es
and
ljmp
lret
or
mov
or
je
pop
add
and
dec
adc
pusha
mov
lcall
jl
or
dec
push
dec
push
push
add
dec
sbb
jmp
adcl
movsl
xchg
je
xor
add
xchg
cs
data16
or
push
adc
dec
add
mov
aaa
mov
sbb
adc
or
js
mov
mov
lock
xchg
cmpsb
outsb
push
push
int3
test
mov
and
mov
mov
adc
outsl
push
out
arpl
inc
and
xchg
mov
pop
jns
inc
testl
loopne
cmp
sub
in
sub
je
movl
test
fcomps
xor
adc
push
mov
ret
push
xchg
cltd
pop
or
inc
and
jge
shl
lock
and
adc
jl
ljmp
lahf
cmp
ret
daa
xchg
adc
jno
jne
or
cmp
mov
movsb
loopne
adc
or
add
cmpl
shlb
andl
orb
xchg
fs
aaa
mov
inc
fldcw
or
inc
stos
jle
dec
ficompl
pop
cmp
add
test
jecxz
jmp
or
sbb
inc
inc
or
inc
cmp
xor
popa
ss
jl
push
dec
rolb
add
mov
pop
test
rcl
push
in
add
rorb
dec
mov
xor
or
jg
idivl
inc
or
adc
adc
push
adc
and
dec
or
addl
mov
add
ficoms
nop
mov
test
and
sbb
or
out
pop
imul
mov
adc
jbe
push
inc
jmp
adc
enter
ficompl
cmp
inc
lea
or
pop
or
idivl
adc
pop
divl
in
js
lock
add
and
clc
dec
mov
inc
xor
jne
cmpsl
sbb
hlt
dec
ljmp
jns
inc
rcrb
push
lock
rol
cli
add
add
add
and
sub
mov
and
xchg
lcall
ja
ret
and
addb
ljmp
xchg
push
push
faddl
push
xor
frstor
aaa
mov
xchg
or
or
mov
inc
sbb
insl
jle
add
and
decl
inc
loop
add
push
push
pop
rorl
adc
dec
xchg
lcall
mov
jg
sbb
pop
inc
out
lcall
lret
lret
push
sti
rorb
popf
in
mov
clc
aam
fadd
jae
ret
cmp
mov
fadd
iret
push
or
push
jmp
mov
mov
loope
popf
ret
addr16
xchg
cmp
movzwl
lods
pop
leave
test
in
or
shr
adc
addr16
or
pop
mov
mov
out
mov
lea
ficompl
jl
fwait
lock
loopne
bound
jecxz
cld
ja
rcrl
pop
sar
pop
mov
and
xchg
pop
dec
dec
mov
sub
mov
mov
je
aam
clc
push
jl
into
fsubs
loop
sub
dec
sarb
je
or
sub
je
sbb
jmp
pop
cld
scas
pushf
pop
or
inc
lret
in
add
orl
or
adc
ret
in
fmull
mov
rcll
aam
aas
mov
add
sub
push
imul
subb
or
ja
es
andl
in
sub
or
movsl
hlt
fistl
cs
stc
cwtl
je
or
jae
push
sbb
mov
adc
loope
sub
adc
insb
cmp
sub
mov
pop
and
jge
ss
or
xor
mov
gs
dec
xor
movsl
int3
mov
jns
jg
jmp
or
int
repz
pop
outsl
cmc
jne
rorb
ds
sbb
je
mov
mov
sbb
pop
loope
cmpsb
pop
mov
or
repz
cmp
cmp
adc
or
mov
and
mov
hlt
push
mov
jo
sub
test
iret
rcr
and
jae
sahf
testl
cmc
fisttpll
mov
mov
and
jo
push
add
dec
and
shrb
push
mov
pop
loopne
mov
es
setbe
sub
cmpsl
cmp
mov
adc
inc
push
sbb
jl
insl
cmp
push
xor
sbb
negl
dec
repnz
or
push
dec
cs
push
push
es
dec
jae
jo
cmp
pushf
jg
xchg
je
mov
push
mov
add
push
inc
pushl
aaa
movsl
push
sti
add
shrl
jnp
jge
lcall
xchg
adc
mov
cmpsb
add
cmp
xor
add
lea
jae
cs
sbb
loope
test
mov
jmp
cli
add
add
push
mov
adc
jmp
pop
push
outsb
je
test
xchg
pop
xor
jne
popa
aas
add
xor
fildll
sub
je
pushw
mov
add
movsb
mov
adc
sub
xchg
sbb
or
addb
adc
add
ret
imul
mov
jne
mov
jmp
cmp
std
pop
jle
insl
cmpl
incl
xor
mov
xor
int
lods
or
adc
mov
pop
mov
cmp
xor
adc
sti
shl
xlat
mov
adc
dec
sub
dec
rclb
or
popa
test
lea
xchg
jbe
insl
stc
lcall
pop
rcrl
sbb
pop
jb
sub
nop
cmpb
jne
cmp
aad
and
push
lea
jge
ss
push
mov
add
addr16
mov
mov
mov
adc
lock
push
pop
data16
test
dec
lahf
push
sub
lret
mov
jne
push
cmp
je
adc
int
mov
jmp
out
or
jmp
aaa
int3
je
cltd
and
sub
je
and
pop
jl
jae
mov
rolb
jecxz
cmpsb
mov
fimull
je
outsl
mov
or
sbb
dec
inc
jno
test
ret
jne
and
fisttpll
testl
cmp
es
inc
dec
std
and
lock
push
das
das
rcll
xor
pop
push
push
nop
xchg
clc
sahf
add
mov
dec
jmp
jo
out
adc
xchg
sub
inc
cmp
push
stos
aas
je
pop
adc
into
addb
jmp
mov
movb
inc
jmp
mov
loope
or
fdivs
mov
xchg
mov
sub
push
lcall
sti
sub
call
daa
add
sub
loop
sub
sub
push
test
cmpsb
and
mov
cltd
movsl
call
sub
pop
sarb
push
jp
xchg
dec
fdivrl
lea
mov
mov
pop
stos
lcall
dec
orl
dec
push
fdivs
jno
push
pusha
nop
aaa
cmp
inc
jae
push
fistps
rcll
sbb
mov
jge
mov
xor
add
sbb
sti
push
and
imul
pop
or
add
push
mov
lods
adc
adc
daa
sahf
js
les
insl
mov
mov
xor
in
sub
movsb
cmp
dec
xchg
lock
mov
add
sub
js
mov
cmp
hlt
cwtl
push
sub
xchg
loopne
lcall
shrl
pop
dec
outsl
or
das
or
loopne
js
adc
inc
mov
inc
mov
loopne
jp
idivb
insb
or
lea
mov
dec
mov
sbb
cwtl
sarl
in
andl
adc
cmp
sub
mov
xchg
and
add
adc
jb
push
test
mov
jmp
loopne
inc
jl
push
pop
movsl
or
popa
lcall
add
dec
xor
pop
xchg
psraw
lret
add
shrl
aas
ds
cmpsb
test
mov
jmp
push
pop
or
mov
jne
dec
jo
sbb
jmp
push
cmp
outsl
inc
jo
push
adc
shlb
imul
xchg
or
xchg
push
push
or
lea
call
cmpsb
add
ss
mul
xor
or
or
cs
imul
add
jmp
add
push
or
sbb
inc
or
jb
rclb
push
popa
push
jmp
dec
pusha
outsl
push
adc
sub
mov
shr
mov
imul
mov
movsb
icebp
and
dec
or
jno
dec
inc
jbe
xor
int
jp
mov
add
push
inc
mov
add
ret
mov
sar
dec
cmp
jbe
push
pop
xor
or
or
cs
fildl
mov
shr
lea
not
and
decb
jne
pop
cmc
xchg
in
sbb
lea
xor
pusha
cmp
pop
add
add
dec
adcb
cld
add
clc
dec
imul
and
push
or
movsb
add
clc
and
mov
push
shlb
js
add
and
sti
add
dec
dec
pop
cmp
xchg
mov
fsubs
jl
mov
cmp
and
push
pop
cs
andb
data16
mov
popa
mov
and
xor
pop
jne
sub
cmp
jle
jmp
lea
das
mov
xor
xor
pop
dec
add
mov
push
or
add
dec
sahf
ss
loopne
mov
lea
mov
jnp
popf
int3
inc
adc
dec
or
out
aas
insb
or
dec
pusha
mov
mov
inc
mov
adc
pop
sbb
xor
mov
or
pop
ret
testl
dec
adc
push
mov
imul
jnp
ffree
xchg
shlb
cld
mov
repz
and
stos
and
adc
or
adc
loope
add
outsl
das
sti
subl
or
andl
xor
popa
frstor
dec
inc
adc
ja
xchg
or
pusha
add
and
dec
pop
adc
jne
push
push
mov
inc
inc
inc
imul
mov
adc
cmp
js
sbb
adc
lea
sbb
jl
push
cmp
mov
adc
mov
jbe
enter
inc
into
sub
dec
lea
mov
lock
data16
popf
adc
cwtl
outsl
push
sbb
cmp
mov
fldl
stc
mulb
insl
cld
pop
push
aad
cmp
inc
adc
outsb
push
stos
cmpsl
mov
sahf
push
emms
sub
dec
push
fucomi
fwait
orl
lods
fildl
incl
and
sub
mov
jbe
hlt
jno
in
stc
ljmp
ljmp
test
jae
clc
dec
incb
pop
test
mov
or
hlt
or
cmpsl
mov
mov
int
movsl
xor
lcall
dec
sbb
enter
inc
xchg
js
iret
shr
je
les
dec
clc
xchg
in
jge
inc
movhlps
or
adc
mov
push
add
sub
stos
mov
iret
dec
jne
je
clc
xor
movsb
insb
daa
jp
rorb
sub
adc
add
bsf
pop
mov
mov
lock
icebp
stos
call
inc
jne
or
lds
not
and
xchg
ror
mov
stc
adc
fwait
and
pop
mov
mov
push
adc
pusha
jb
cld
jo
or
mov
and
pushf
aaa
jno
out
jle
int3
inc
xchg
sarb
cmp
scas
add
mov
stc
int3
add
pop
dec
pop
mov
xor
stc
sbb
clc
push
cs
pop
add
push
xorb
or
mov
add
push
jns
nop
std
add
in
repnz
lret
lods
or
incl
or
add
fnstsw
adc
aam
sbb
jbe
jg
mov
jle
mov
in
lcall
movsb
shlb
iret
fisubs
jo
js
and
and
out
loopne
mov
sub
pop
pusha
test
adc
inc
insb
inc
inc
pusha
scas
xor
test
and
and
clc
adc
dec
aas
jl
and
and
lea
sti
or
inc
dec
insb
pop
xor
or
sbbl
jp
movsb
incb
popa
dec
cmp
ret
orl
dec
movl
orl
fistps
cmp
dec
faddp
ds
adc
fwait
jo
mov
or
mov
mov
fcompl
imul
dec
in
jb
into
mov
cmp
jns
rclb
add
sbb
jg
inc
ja
jp
insb
mov
dec
test
ret
lods
pop
and
inc
addb
hlt
cmp
push
push
push
jge
popa
mov
out
adc
add
or
stos
mov
or
or
cmp
and
decb
xlat
and
add
adcl
insb
call
sbb
fimull
fnstenv
jmp
jnp
add
jo
mov
xor
aaa
arpl
ss
and
cwtl
nop
mov
and
mov
ficompl
jo
add
adc
in
sbb
insb
clc
loope
in
cli
and
mov
dec
sbb
sub
xchg
cmp
cli
daa
inc
cmp
xchg
outsl
add
out
fsts
dec
mov
and
jne
push
cld
mov
mov
push
pop
outsb
leave
inc
test
mov
push
pushf
mov
sub
icebp
mov
jno
sbb
mov
lock
pushf
stos
push
popf
xchg
sbb
iret
push
push
icebp
push
add
pop
mov
decb
jne
and
in
hlt
xor
or
sub
dec
mov
cltd
sub
pop
pusha
dec
bound
dec
mov
and
lcall
jp
adc
mov
xor
inc
pop
mov
das
pop
xor
sbb
jge
jle
call
push
or
mov
cld
or
sbb
inc
or
push
mov
inc
inc
mov
add
jle
or
lods
sahf
aad
cmp
shrl
js
aaa
test
lea
ds
jne
cmp
sbb
push
call
and
inc
add
shll
leave
xchg
repnz
sti
cmp
jecxz
or
or
addl
add
adc
adc
xchg
xor
jbe
or
inc
cmp
sti
nop
add
jle
push
xor
inc
xchg
push
mov
push
loope
repnz
jl
xchg
and
movb
xor
shlb
cmp
push
je
push
orl
xchg
shrl
inc
inc
cmp
cmp
cwtl
mov
jle
out
cmp
push
mov
test
dec
jb
gs
je
nop
fcoms
test
orl
push
and
xchg
push
or
push
adc
xchg
inc
add
repnz
cmc
jmp
push
dec
push
cmp
cmp
or
std
lahf
shrb
mov
adcl
sbb
push
divl
xchg
out
pop
jne
push
rcll
pop
mov
mov
add
std
pop
insl
sbb
lods
mov
daa
hlt
popa
imul
jo
xchg
inc
or
fwait
xlat
push
or
pop
lods
fcompl
hlt
or
pop
jl
test
xchg
mov
sub
lahf
dec
dec
jl
insb
int3
push
mov
imul
xor
adc
sbbb
out
xor
mov
insb
jo
jge
jle
inc
inc
dec
jne
daa
pop
mov
inc
aas
xor
pop
ss
lods
fs
adc
jns
adc
imul
mov
dec
sub
popf
call
and
mov
mov
jns
xor
inc
jne
ret
adc
adc
insb
mov
adc
jge
jmp
jb
mov
jl
or
int3
repnz
test
in
je
mov
push
mov
nop
pop
in
rorl
sbbb
aam
shr
xor
test
pop
bound
pop
pop
enter
ffree
xchg
mov
test
shll
std
cmp
dec
xor
adc
pop
pop
mov
lods
or
fwait
add
imul
sbb
xchg
arpl
push
adc
stc
fsubrl
mov
pop
rol
lea
in
dec
jb
cmp
scas
cmp
ss
and
push
sbb
test
icebp
sub
push
inc
pushf
or
aas
insb
jne
jp
loopne
in
sbb
adc
and
addr16
or
adc
dec
inc
cmp
xor
mov
add
jns
adc
or
test
jmp
int3
add
push
pop
std
and
xor
ret
jne
inc
and
in
jb
jns,pn
ljmp
adc
add
sbb
sub
lods
mov
pusha
shl
dec
sbb
mov
call
push
mov
mov
push
xor
fs
mov
sbb
push
lods
lcall
push
fmulp
call
lret
dec
outsl
dec
push
cwtl
add
mov
inc
push
jb
scas
adc
in
cld
daa
add
mov
mov
stos
data16
pop
adc
dec
rorb
icebp
test
mov
jb
mov
leave
add
out
cmp
test
push
hlt
xchg
xchg
push
push
jb
inc
lods
in
inc
sahf
inc
sub
and
and
call
in
jns
leave
lods
add
sub
xchg
dec
scas
nop
rcrb
lock
mov
jb
xor
leave
add
lret
and
pop
test
test
jo
adc
fwait
mov
int3
test
lock
mov
adc
pop
movsb
cmc
or
or
bound
mov
fs
mov
xor
cmpsl
push
mov
xor
and
faddl
ret
repz
jne
sub
ja
cmp
push
pop
imul
sub
adc
lret
pop
xchg
ret
mov
cmpsb
pusha
out
pop
clc
xchg
ret
lds
fiadds
mov
inc
or
fwait
cmp
and
aaa
or
mov
mov
or
adc
sub
fldenv
test
and
scas
mov
inc
push
lods
paddd
mov
sar
jno
mov
adc
cmp
jb
add
xchg
push
adc
adc
rcrb
cmp
shr
lds
or
testb
xchg
add
or
scas
fnsave
or
fsubs
push
adc
cmpsl
test
xchg
jo
jne
add
fucomp
ss
hlt
stc
mov
aaa
inc
mov
push
cs
push
push
cmp
cmp
adc
ret
pop
ret
add
enter
add
fisttps
push
or
shll
enter
push
xor
and
cmp
jmp
xor
dec
pop
adc
xor
imul
dec
pushf
mov
adc
stos
push
xor
push
fcoml
cmpsb
movsl
mov
sub
lret
je
pop
incb
sub
sbb
add
push
pop
sub
mov
rcrl
int
mov
push
sti
xchg
xchg
movsl
xchg
je
push
or
rcrb
aam
inc
fmul
mov
xchg
lret
pop
xchg
aas
lock
loopne
fldl
or
fldl
or
sbb
ffree
imul
mul
mov
push
fbstp
pop
jmp
jo
fldt
push
dec
xor
mov
sti
sbb
xchg
pop
sub
das
sub
mov
lret
sub
je
dec
je
add
and
xchg
pop
and
sbb
sti
fldenv
lcall
xchg
jns
insb
int
test
cmp
add
imul
fnsave
test
add
add
cmpb
add
inc
test
jno
mov
lock
stos
cmp
test
in
lock
in
jns
and
faddl
imul
lock
fstl
push
jb
rorb
lock
fsub
mov
aaa
jne
das
and
inc
lock
dec
lret
roll
fdiv
jns
mul
push
out
testl
prefetchnta
and
push
add
push
add
push
jb
cwtl
adc
xchg
enter
dec
push
sti
dec
dec
inc
sbb
mov
xor
xor
loopne
leave
push
out
pop
hlt
sub
sbb
xchg
jnp
and
jle
and
inc
xchg
mov
ret
xor
jb
push
xchg
jmp
inc
faddl
mov
pop
adc
and
adc
or
aas
push
sbb
cli
clc
push
fmull
testb
push
cmp
inc
jnp
and
ret
and
push
push
adcl
push
data16
cmp
inc
repz
and
js
mov
jne
lods
add
or
add
sbb
mov
popa
add
cmp
xchg
enter
pop
mov
or
inc
arpl
scas
sub
call
test
lock
call
in
cmp
mov
lods
std
sarl
or
jne
scas
pop
mov
mov
add
rol
add
xchg
add
dec
testl
adc
pop
lock
mov
push
lea
testb
dec
or
cli
adc
mov
iret
movsl
cmp
xchg
out
test
or
inc
pop
sahf
aad
lret
push
fdivr
push
or
add
xchg
pop
ja
mov
push
inc
adc
rorb
leave
xchg
std
pop
mov
lods
push
rorl
pop
lcall
int3
movntq
shl
enter
sbb
inc
cli
lds
scas
push
inc
push
pop
or
add
sub
push
jp
xchg
imul
sub
cmp
hlt
out
lods
in
mov
add
popa
das
sbb
mov
dec
mov
and
mov
mov
or
inc
cli
cmp
lods
add
arpl
call
push
inc
sub
pop
in
adc
push
ss
or
jne
testl
pop
inc
jne
cmp
inc
mov
xchg
lret
xor
xor
cmp
push
int
cmpsb
rclb
jne
js
cmpsl
test
cmp
iret
nop
cmp
push
cmp
ret
mov
sbb
repz
push
push
push
push
fisttpll
xchg
jl
jae
in
sbb
lret
push
cmpsb
adc
repnz
addr16
cmp
push
mov
sbb
sti
push
gs
lds
popf
lea
gs
in
mov
pop
fildll
popf
mulb
dec
mov
shrl
movsb
xor
cltd
cmp
adc
adc
sbb
testl
mov
loopne
mov
or
ds
movb
daa
jo
imul
sahf
add
pop
pop
imul
inc
cld
cmp
xchg
xchg
repnz
cmp
inc
pop
enter
pop
sti
jmp
mov
sub
jno
mov
jp
pop
pop
out
stos
inc
adc
into
je
notl
rorb
add
mov
mov
jo
or
sub
jecxz
xchg
xor
xor
mov
shrl
std
dec
mov
or
xlat
das
in
dec
sahf
lods
lock
fdivr
adc
sbb
ret
jecxz
lds
jmp
lods
mov
test
push
mov
mov
shlb
popa
and
sti
and
popf
mov
sbb
std
call
cmp
push
mov
shl
ret
jo
push
mov
popa
cmpsl
pop
fcomp
jge
mulb
push
shrl
fmull
mov
nop
std
lds
fistpll
arpl
cltd
sub
out
imul
push
push
fmuls
fnstcw
daa
rdpmc
sbb
push
mov
fwait
xchg
jno
fsubl
je
cld
mov
mov
xor
lods
mov
add
cmp
aad
test
sahf
aad
test
jns
aaa
mov
iret
dec
xchg
mov
roll
adc
cmpsb
jb
inc
mov
popa
insb
mov
mov
and
flds
cmp
mov
sbb
std
nop
xchg
std
lock
xor
inc
imul
test
inc
loopne
mov
xor
inc
repz
mov
mov
push
fdivrp
or
ds
data16
sub
test
sub
jmp
jmp
dec
bound
push
cmc
shll
sar
lock
xor
jge
jmp
push
sub
sub
or
sbb
jge
mov
cmp
jmp
test
xchg
push
ds
cmp
aam
insl
jns
out
jl
lock
dec
or
adcl
fbstp
into
dec
pop
push
pop
insl
mov
movsb
adc
inc
dec
rcr
sbb
imul
push
inc
lret
addb
sti
jne
cmp
xchg
sbb
pushf
dec
hlt
or
xchg
iret
jne
fdivr
das
push
inc
xor
jl
je
inc
inc
sub
cmp
or
and
std
std
pop
shrl
add
mov
enter
das
dec
mov
xchg
std
inc
mov
and
pop
leave
inc
add
repz
cmpsl
push
jmp
enter
inc
and
mov
pop
xor
popl
mov
inc
ret
rcll
adc
fisubrs
sbb
aas
xor
sbbb
push
aad
pop
leave
mov
nop
dec
push
mov
jb
mov
add
and
pop
and
loopne
push
sbb
aad
add
jg
xlat
adc
sub
cmp
ja
add
adc
in
jo
dec
icebp
or
add
sub
and
outsb
mov
cmc
ds
cs
or
lock
int3
stc
ljmp
mov
push
rep
sbb
mov
add
or
pop
mov
xlat
out
test
int3
stc
xchg
or
stos
jno
and
mov
faddp
pop
push
cmc
int3
stc
adc
inc
scas
int3
stc
mov
sbb
dec
and
stos
cmc
int3
stc
int3
stc
sbb
sbb
int3
les
out
mov
in
xor
xor
or
movsb
xor
push
dec
sub
ljmp
xchg
pop
xchg
push
xor
pushf
inc
repnz
sub
aad
out
in
fisubrl
xchg
pop
lret
cmp
es
inc
leave
lcall
je
cmp
dec
inc
lea
xchg
add
js
std
lret
outsb
cmc
inc
dec
dec
sub
mov
insl
jno
push
jns
fwait
mov
cmc
sbb
int3
frstor
clc
fs
lret
out
push
cld
lret
pop
mov
nop
and
dec
scas
sbb
mov
divl
and
addr16
mov
push
jecxz
xchg
aad
sub
lcall
leave
enter
movsb
cmp
enter
and
dec
cmp
mov
xchg
dec
sbbb
push
aas
dec
sbb
adc
pop
and
leave
or
inc
mov
inc
scas
in
pushf
nop
nop
nop
cltd
add
lods
cmp
cmp
aad
ret
rclb
dec
pop
je
movsb
data16
jmp
push
outsb
aaa
pop
pop
aad
add
repz
cmpsl
push
mov
xor
cmp
fdivl
xchg
xor
pop
inc
inc
xor
out
cs
fisubrl
stc
nop
sbb
jg
adc
and
inc
push
pusha
push
dec
add
jo
stos
dec
cltd
add
pop
adc
rep
adc
cltd
and
mov
xor
sub
or
lods
cmp
roll
ret
pop
rolb
int
js
xor
add
jno
nop
inc
add
ret
or
jge
je
cmc
mov
rep
ss
neg
pop
mov
sub
shl
lock
push
lods
sbb
add
inc
jne
dec
rcll
mov
pusha
or
xor
int
mov
push
push
dec
adc
push
and
std
push
sub
icebp
dec
push
pop
outsl
inc
lret
repz
jbe
jle
sbb
imul
mov
push
jo
and
sbb
inc
or
call
idivl
enter
inc
ss
les
mov
addl
sbbb
fmull
jo
fidivl
ja
aam
sub
cs
sub
mov
add
sub
push
pop
rcr
adc
in
lock
rep
jge
les
inc
jne
mov
rcll
in
in
cmp
cmp
or
sbb
push
push
ret
imul
sbb
xchg
gs
jae
mov
pop
add
test
vcvtps2pd
imul
mov
loopne
dec
movb
adc
pop
sbb
cltd
inc
mov
push
shl
pop
aam
loop,pn
add
divl
xchg
nop/reserved
sbb
sarb
dec
push
xor
add
mov
dec
jl
rcl
mov
adc
push
inc
mov
mov
push
cltd
add
jnp
fsubrs
dec
push
xor
xor
and
test
movb
ds
jl
orl
add
xchg
cld
push
mov
icebp
pop
inc
js
outsl
mov
test
je
lahf
xlat
divl
adc
loop
ret
jo
xor
sbb
or
adc
sbb
lea
popa
add
pop
cli
std
mov
les
mov
push
mov
cmp
jae
and
stos
bound
or
pop
or
loop
sbb
insl
cmp
popf
lret
pop
inc
cs
add
or
jmp
das
add
imul
inc
aaa
mov
mov
or
sub
in
inc
loope
fcmovu
mov
xor
jmp
pop
pusha
mov
cmp
adc
inc
pusha
popa
mov
orl
cmpsl
ffreep
fwait
pop
inc
cld
cmp
add
gs
dec
fidivs
daa
clc
inc
push
inc
aas
test
sbb
jae
testl
ja
jo
mov
into
fwait
xlat
test
enter
inc
jp
pusha
pop
daa
outsb
and
jmp
scas
mov
jae
mov
and
sahf
and
jmp
or
mov
mull
cmp
movsb
orb
cltd
negl
push
push
inc
shr
rcr
shrl
mov
ljmp
div
pop
dec
adc
inc
mul
in
std
std
mov
dec
ja
jb
cmp
or
xor
and
repz
fiaddl
fcmovu
lret
adc
push
jo
scas
verw
add
add
sub
jb
pop
jmp
lcall
pop
stc
movb
sbb
pop
and
movb
sbb
jae
fwait
push
imul
lahf
or
adc
lcall
ljmp
xor
add
nop
arpl
hlt
sbb
or
clc
out
sub
or
adc
cmpsl
sbb
xchg
sar
jge
ret
adc
add
and
dec
lahf
pusha
fsubl
leave
std
jne
roll
pop
pop
cmpsb
sub
cmp
lock
add
adc
inc
lods
sub
and
push
adc
lea
cmova
dec
sbb
sbb
mov
inc
cmp
cs
pop
inc
jle
jne
lea
jb
jo
mov
sbb
aas
pop
xor
nop
lret
push
sub
test
in
dec
and
pop
repnz
and
lea
xchg
in
xor
xor
adc
inc
rol
fcompl
xchg
jo
loop
addb
adc
sbb
icebp
rol
inc
hlt
mov
inc
add
add
add
dec
mov
sub
or
and
lds
add
daa
lret
sub
enter
add
inc
fs
mov
icebp
push
stc
xorb
aaa
orb
jo
xor
add
inc
xor
jge
xchg
pop
mov
mov
add
add
add
imul
cmp
add
push
mov
cmp
push
data16
aam
push
out
es
aam
imul
dec
xchg
push
in
rcr
fstpt
adc
cmp
or
imul
cwtl
addl
js
add
dec
sbb
sbb
loope
sbb
xor
hlt
les
mov
push
iret
imul
xor
or
faddl
fwait
addl
stc
mov
and
gs
pop
out
outsl
movl
sbb
gs
lahf
xor
fs
add
push
xchg
pcmpeqb
les
push
sub
jmp
fdivs
adc
daa
sbb
loopne
xor
adc
xor
in
inc
jecxz
iret
xor
jo
and
scas
xor
xorb
les
add
int3
pop
inc
call
ss
out
cmp
je
ss
dec
sbb
push
mov
jmp
pop
addr16
outsb
or
orb
loope
adc
xor
out
add
std
pop
lods
add
sbb
fs
cld
dec
out
add
push
mov
insb
add
stos
cmp
cmp
hlt
jmp
dec
add
dec
in
dec
popf
or
dec
shlb
jbe
mov
cmp
jb
inc
inc
in
xchg
nop
fistps
mov
scas
inc
cmp
and
and
roll
sub
dec
daa
dec
sbb
mov
adc
mov
jne
xor
sub
sbb
xor
inc
fistl
jno
push
dec
sbb
sbb
adc
mov
adc
or
jp
jb
inc
sub
or
sbbb
ficompl
in
pop
pusha
jmp
xchg
sbb
lcall
and
rclb
jne
xchg
jo,pn
push
cs
orl
mov
mov
and
pop
lret
stos
xor
sbb
add
cmp
mov
mov
push
or
nop
add
add
mov
mov
pop
or
lret
and
pop
shrb
fwait
nop
mov
add
and
xor
nop
ret
lods
or
orl
sbb
cmpsb
pop
or
rcr
in
sti
add
adc
add
daa
sub
dec
pusha
add
adc
or
mov
jmp
lock
lds
leave
and
out
push
sbb
xor
lods
roll
and
loop
lock
jle
cmp
aas
sbbl
pop
orl
xchg
test
cmp
and
cmp
jmp
pop
sbb
mov
or
fs
inc
xor
pop
leave
push
sbb
mov
push
cmp
pusha
sbb
fucom
cwtl
mov
dec
mov
xor
gs
add
push
dec
icebp
imul
or
sbb
pop
fnstsw
pop
add
add
push
mov
mov
mov
jne
call
sti
or
std
dec
mov
shll
fwait
out
or
fxch
and
adc
sbb
jmp
add
mov
lods
pop
pusha
cmp
mov
jbe
pop
xchg
orb
pop
push
add
sub
sbb
jmp
mov
push
xchg
push
push
in
dec
les
jb
mov
iret
mov
addr16
pop
fidivrl
std
mov
push
les
push
in
or
pop
add
pusha
loope
push
or
adc
add
aam
inc
pusha
jne,pn
sbb
inc
mov
cs
sub
adc
fstpl
jge
mov
mov
pop
mov
inc
loop
adc
mov
fidivrs
inc
mov
fs
push
dec
jmp
dec
adc
xchg
js
pop
cmp
aaa
xor
sub
arpl
fs
pop
fidivrs
mov
pop
add
dec
pop
jp
in
mov
xchg
adc
jmp
repz
inc
insb
inc
jns
addb
pop
movsb
les
xchg
fcom
xchg
orl
std
jne
cmpl
sbb
jecxz
xchg
sbb
and
cmp
jbe
sub
pop
dec
jp
in
jge
inc
pusha
or
mov
cmp
addr16
aaa
dec
jae
or
ret
hlt
testl
and
lret
call
add
xor
stc
out
pop
rorb
jmp
push
pop
or
xchg
test
cmc
sbb
add
jmp
push
inc
and
mov
cmp
mov
inc
fldt
jge
push
jmp
fimuls
push
cmc
sub
or
iret
adcl
popa
mov
fsts
je
sbb
mov
ret
dec
mov
mov
mov
sub
mov
adc
adc
mov
sti
sbb
xor
ret
dec
add
sub
lods
mov
dec
push
out
mov
movl
ficoml
push
add
adc
or
adc
data16
xor
incl
dec
or
mov
push
push
inc
mov
fs
mov
movb
mov
insl
inc
popf
and
test
adc
or
xor
add
inc
jge
test
icebp
fs
ja
cmp
mov
repz
jmp
xor
loop
adcl
add
ret
inc
mov
add
dec
push
mov
pop
es
jb
cmp
in
int
or
and
or
and
mov
shr
outsb
sub
fisubrl
dec
stc
add
push
xor
daa
lcall
clc
or
push
inc
cmp
sub
rclb
mov
or
into
inc
add
xor
int
shrl
pop
add
adc
jne
adc
sahf
ljmp
cwtl
fcmovb
ret
daa
cmp
mov
mov
insb
xor
shl
mov
mov
jecxz
add
adc
jecxz
add
jge
loope
jecxz
sbb
push
aas
jae
mov
mov
dec
rol
out
cmovl
out
shlb
stos
mov
pop
movsl
lods
xchg
jge
push
andl
clc
or
addl
add
mov
mov
loope
lea
pop
jne
pushf
dec
and
and
sub
add
jo
andl
out
push
jne
scas
jg
mov
lea
dec
inc
inc
or
jne
call
fidivrl
xor
rcl
jle
inc
cmp
das
mov
jo
fbstp
and
rcrb
xchg
dec
jb
subb
cld
gs
call
pusha
cwtl
ret
jmp
xchg
jbe
xor
addb
dec
or
sbb
or
enter
sti
or
push
or
cmpsb
inc
pop
stos
lock
or
push
data16
xor
mov
push
xchg
dec
or
pop
and
scas
push
dec
add
fwait
sub
push
or
dec
lea
in
jmp
add
or
or
or
imul
and
push
and
test
frstor
or
in
mov
int3
js
dec
inc
cmp
push
xchg
pop
mov
push
push
insb
sbb
loop
out
mov
fwait
orb
add
push
loopne
cmpsb
and
addl
and
clc
push
cld
dec
andb
and
insl
sub
cs
sarb
shlb
fdivrs
popf
ficoms
subl
jmp
push
push
mov
sbbb
xor
dec
bound
xchg
hlt
dec
push
adc
or
mov
add
out
add
mov
push
out
inc
add
lods
pop
mov
or
jno
std
lret
incl
hlt
inc
adcl
test
xchg
xlat
ret
outsb
repz
push
ss
cmpb
xchg
sub
sahf
idivb
pop
shl
or
jge
sub
mov
aas
push
aaa
xor
ds
ss
rorl
test
add
or
in
mov
je
and
push
and
shlb
mov
hlt
je
scas
pop
notb
lods
push
mov
adc
and
fisttps
sbb
or
inc
mov
push
loopne
or
ffreep
not
mov
xlat
push
mov
push
xor
in
addr16
movsb
loope
dec
lret
lock
mov
filds
inc
pop
mov
test
adc
jbe
pop
push
loopne
or
xor
not
push
sarl
sbb
mov
mov
and
insl
cld
loop
jb
rcrl
add
ret
sub
leave
sbb
cmpl
pusha
and
mov
inc
push
cmp
in
mov
pusha
or
dec
rcl
scas
sbb
sub
mov
popa
push
mov
push
bound
jae
xchg
andb
jecxz
rcrl
cmp
pop
add
add
jmp
pushl
leave
mov
popf
xor
sti
jp
push
jae
and
and
sub
imul
mov
jns
scas
add
je
mov
push
jns
lret
jae
nop
cmp
pop
test
lret
inc
xor
mov
repnz
xchg
add
js
sbb
pop
sbb
clc
fildl
push
cmp
fnclex
test
test
jne
inc
fdivr
push
jne
add
sbb
pop
jno
out
sbb
add
cs
or
nop
mov
lods
jmp
in
sub
xchg
jbe
push
shlb
aam
in
adcb
pop
mov
test
jnp
pushf
jmp
test
jmp
inc
pop
lods
xor
call
inc
fsubrs
test
decl
int3
mov
out
decl
cwtl
push
push
jb
insl
das
push
sbb
jl
js
in
push
loope
and
cmp
xor
add
or
inc
dec
push
pop
mov
cmp
pop
xchg
pop
cmp
jg
and
aas
add
jmp
test
or
sarl
dec
ds
dec
rorb
repnz
pushf
sbb
je
xor
add
sub
lahf
xor
mov
sub
adc
fsubr
push
and
mov
fldcw
aaa
push
test
xlat
jge
std
xor
cmp
jne
sub
adc
sbb
add
fcomps
repnz
jae
adc
mov
outsb
popf
mov
sarb
xchg
scas
mov
push
ss
cmpsb
mov
push
sub
orl
push
mov
aaa
or
mov
enter
sub
ret
cld
or
out
inc
push
fwait
imul
test
push
dec
cmpsb
sub
jl
cmp
jg
inc
jmp
sub
hlt
pop
jbe
jp
mov
imul
or
jge
aas
sbb
or
push
ret
push
cmp
rcr
fsubs
popa
add
adc
xor
jle
inc
push
mov
xchg
mov
adc
dec
jge
push
mov
lds
cmp
push
loopne
outsb
outsl
ja
cld
and
add
shll
popa
mov
mov
test
pop
test
or
cld
bndldx
push
or
adc
mov
pop
xor
jns
repz
rolb
inc
or
je
inc
and
js
inc
add
cmc
sub
push
cmp
add
ja
and
push
add
pop
or
fistpl
popa
outsl
sbb
or
test
or
xchg
push
fisttpl
push
jo
dec
dec
inc
loopne
jne
stos
xchg
stc
sub
mov
lods
and
and
jle
sbb
in
movsl
cmp
jbe
jecxz
test
jg
test
add
test
mov
sub
mov
pop
test
cmp
jl
and
sbb
mov
fs
sub
subb
jle
lahf
push
pushl
cli
cld
xchg
les
pushf
or
add
fldln2
and
dec
call
out
std
jmp
inc
lock
in
inc
or
imul
and
mov
push
or
jne
inc
sbb
icebp
add
or
or
pop
les
dec
push
clc
mov
dec
xor
pusha
add
push
arpl
mov
and
mov
and
jg
add
sub
sbb
sbb
nop
lret
loope
icebp
popa
or
orb
addl
jl
mov
les
add
add
aad
sub
orl
jg
aas
add
mov
inc
sub
adc
sbb
pushf
sbb
pop
push
fstpt
test
add
insl
addb
push
adc
out
punpckhwd
dec
sahf
ret
or
pop
jg
cmp
xor
jae
push
pop
or
pop
sarl
mov
sub
or
leave
xchg
xor
adcl
outsb
sbb
adc
fneni(8087
jecxz
and
test
sbb
mov
loop
inc
xchg
int3
add
lcall
stos
sahf
addr16
repnz
mov
aaa
mov
loope
fdivs
aaa
inc
xchg
push
or
inc
push
clc
flds
push
push
cmpb
mov
sbb
loop
cs
xor
jle
dec
cld
dec
adc
mov
ja
inc
or
sbb
mov
push
add
push
pop
fidivrl
pushf
jg
push
pop
stos
xlat
fs
shlb
or
pop
cwtl
popa
cmp
adc
pop
pop
repnz
sbb
cs
adc
test
pop
mov
lods
and
rcl
cmpl
flds
jle
mov
pop
int
popf
lret
cmpl
push
scas
out
sarb
or
ret
sbb
lock
sbb
aaa
sbb
jle
imul
cmp
adc
or
test
and
mov
mov
cld
or
cld
sbb
push
xchg
outsl
mov
sbb
hlt
cmc
jmp
shll
loope
inc
insl
and
sbb
ret
lock
hlt
or
xor
test
inc
jb
pop
je
std
and
pop
push
out
jg
add
add
and
out
int3
cmc
fwait
mov
pushf
cmp
or
fs
pop
jnp
popa
xchg
je
mov
fisubl
sbb
jmp
outsl
sub
les
push
sbb
shl
add
adc
pop
inc
mov
arpl
xor
add
inc
add
xor
imul
xchg
mov
in
mov
test
jnp
adc
imul
cmp
jne
mov
ja
adc
add
fcoms
jmp
xor
rolb
inc
xor
dec
dec
push
gs
test
pushf
mov
jne
push
sbb
xchg
ret
inc
je
enter
and
cli
inc
cs
add
mov
lahf
mov
xor
jns
mov
test
in
add
filds
aas
sbb
and
je
pop
cmc
and
test
mov
rorb
sub
inc
inc
lcall
movl
aad
cmc
clc
fistl
xor
push
cmp
jl
jl
mov
jg
inc
dec
adc
les
xchg
add
push
imull
cs
jns
jle
pop
lock
jne
clc
inc
and
dec
push
mov
cmp
cmp
or
cmc
dec
push
ljmp
push
jb
mov
repnz
and
movl
cli
nop
in
dec
dec
xor
and
movsb
adc
sub
stos
insl
leave
mov
icebp
cmp
scas
mov
lret
repz
add
pop
or
push
mov
or
add
adc
adc
in
lods
mov
shll
lret
push
xchg
jle
sbb
jns
jne
jmp
fcomp
vpand
or
push
mov
jl
sbb
dec
out
mov
lock
dec
xchg
pop
jle
mov
sbb
jmp
inc
mov
pushf
adc
jecxz
adc
and
lret
xchg
adc
adc
aas
push
xchg
push
jle
add
and
jp
mov
andb
dec
push
aam
xor
mov
adcl
sbb
stos
jo
jl
cmp
sbbl
mov
lods
jle
aam
sub
dec
repnz
in
pusha
jbe
adc
or
sbb
sub
xor
dec
jg
adc
cmp
fsubrp
push
mov
and
pop
hlt
shl
out
cmp
sbb
xlat
or
rolb
sub
jmp
or
push
push
pop
scas
testl
sbbb
lds
sub
test
popa
shll
cmp
pop
daa
lds
notl
repnz
and
push
add
inc
lcall
lock
push
add
pusha
jbe
inc
lret
lock
mov
cmc
ljmp
xor
and
out
int3
push
sub
mov
lock
cmp
mov
xlat
je
cmp
pop
repnz
shll
testb
sarb
add
push
or
sbb
sub
jge
push
jmp
inc
addr16
fidivrl
sbbl
je
cmpsb
xor
cmp
pusha
inc
aaa
dec
sahf
push
push
or
lret
adc
jle
inc
push
movsb
gs
mov
call
and
outsl
fdivl
adc
jle
jbe
jecxz
push
les
push
pop
xor
insl
cld
jle
clc
inc
inc
mov
fstpl
pop
jmp
push
add
mov
cmp
fidivl
cltd
pusha
sub
jl
add
push
push
pop
sub
mov
sbb
xchg
dec
pop
sub
sbb
mov
outsb
or
cmp
pop
push
jbe
lea
lea
or
in
add
int3
fsubr
mov
cmp
repz
pop
jo
cmp
mov
popl
enter
and
nop
cld
push
dec
je
addr16
adc
xchg
movb
push
movsl
and
sub
js
mov
data16
sti
mov
or
sbb
or
xchg
push
push
loop
mov
aas
sub
dec
nop
cmp
call
pop
vandps
js
push
dec
jbe
cmp
xor
out
lock
stos
shrb
inc
jnp
jp
sub
push
mov
rorl
add
test
out
addl
adc
in
ss
ss
leave
leave
leave
sub
xor
ret
sbb
cmp
fisttpl
and
inc
inc
cmovs
push
push
pop
add
pop
pusha
fs
insb
jo
js
xchg
xor
jl
sbb
dec
rclb
mov
xchg
cwtl
pushf
dec
xor
and
movsb
test
insb
rcrb
je
inc
mov
xor
add
or
lock
xor
mov
inc
mov
or
clc
ss
adc
cld
adc
or
sbb
and
movsb
or
sbb
and
or
sti
enter
pop
sub
mov
push
jo
add
mov
ret
cmp
add
add
and
xlat
rorb
out
jbe
dec
and
mov
add
xchg
mov
cmp
sbb
adc
loop
out
sbb
cmp
fnstenv
mov
sbb
push
dec
add
lods
xchg
jo
or
int3
dec
mov
repnz
xchg
add
add
or
aam
pop
fiaddl
jne
cmp
and
sub
fists
sbb
pop
pop
and
and
jle
cmp
add
or
das
cmp
xchg
in
sub
ja
loope
push
scas
rol
mov
or
add
nop
int
sahf
add
add
fmuls
add
dec
push
popf
sub
popf
aad
ret
int3
sbb
mov
mov
ret
add
negb
xor
dec
rolb
jle
je
push
pushf
insl
mov
xlat
enter
push
dec
and
loopne
test
or
pop
int3
ss
dec
add
sub
orb
in
popf
and
mov
repz
or
repnz
cmp
int3
add
cmpsb
add
mov
imul
sub
jb
fwait
mov
and
mov
aam
adc
push
adc
ret
or
jp
xor
cltd
add
jbe
or
jbe
xor
es
adc
lcall
inc
fadds
loopne
int
add
test
les
iret
jo
andb
fcoms
mov
inc
ja
incl
loopne
add
popl
loopne
mov
mov
mov
adc
neg
inc
clc
and
jb
push
mov
push
add
mov
outsl
jmp
ret
jp
pop
lea
xor
mov
psubb
lods
ljmp
add
inc
push
add
adc
mov
notb
sti
jmp
ret
mov
mov
push
fsubrp
sbb
rclb
dec
sbb
xchg
ja
pop
mov
jle
gs
inc
into
and
add
in
add
bound
xor
or
out
adc
cmp
xor
mov
std
or
xchg
jecxz
mov
cmp
test
ret
xor
adc
and
out
divb
inc
cwtl
mov
add
sar
mov
pop
or
add
dec
or
add
testl
and
cwtl
jp
call
and
insb
or
or
inc
ret
push
cmp
popf
add
mov
inc
imul
inc
insb
and
cmp
push
dec
ljmp
stos
cs
inc
pushl
lea
sbb
cmp
pusha
dec
sub
add
popf
pop
adcl
mov
inc
ss
mov
cmp
mov
popf
fisttpll
jmp
cmp
in
lods
mov
popf
insb
jecxz
jge
mov
mov
mov
adc
jmp
and
orb
mov
int
cmp
add
cmp
adc
mov
fsubs
push
test
adc
mov
scas
xchg
or
adc
sbb
inc
inc
pop
adc
lea
push
add
inc
jo
out
inc
jno
int
loop
lods
jnp
movsl
sbb
xor
pusha
fcoms
push
inc
bnd
cmp
or
rorl
jns
xor
sarl
add
dec
cmp
test
mov
jae
add
scas
or
or
jo
jae
push
add
aaa
sbb
ljmp
ss
jne
in
xor
and
mov
push
cmp
sarl
or
push
sbb
out
inc
sarl
jno
push
push
jmp
inc
cmp
add
or
pusha
push
je
out
and
pusha
jns
cmp
sbb
fisttps
sbb
sbb
jnp
lods
adcb
mov
sbb
dec
xchg
mov
sbbb
inc
pop
test
push
repz
mov
push
mov
sbb
andl
nop
cmc
aaa
rclb
jae
shr
fisttpll
mov
inc
cmp
cmpsb
aas
mov
or
adc
inc
fcoms
mov
fdivrs
sub
dec
push
mov
pop
inc
add
push
cmp
jmp
jecxz
mov
dec
ljmp
imul
lock
movsl
dec
add
push
nop
cmp
cmp
rclb
inc
lods
push
xorl
std
pop
push
or
inc
inc
sbb
or
and
mov
dec
dec
andl
movsb
inc
aas
mov
jl
xchg
dec
dec
stc
out
inc
movsb
inc
pop
xchg
cmp
add
roll
xchg
push
xchg
sub
mov
or
mov
test
dec
cmp
stos
pop
lock
scas
sub
int3
out
sbb
mov
std
add
stos
jno
inc
lock
fisttpll
mov
inc
test
aaa
divl
mov
jo
lret
jmp
or
pop
sti
mov
pop
or
lea
ja
push
xorb
bound
inc
ja
dec
rorl
fdivrs
jne
ljmp
dec
cmp
adc
gs
adc
xor
jnp
rorb
jecxz
sbb
cmpb
or
jg
jae
mov
mov
cld
les
pop
popa
and
ja
sbb
fs
mov
and
je
aaa
push
loopne
loope
xor
mov
push
sub
cs
shll
or
xchg
sbb
incl
dec
popa
clc
mov
jg
clc
or
dec
outsl
push
sbb
into
int
ja
and
adc
and
cvtps2pd
sub
shll
sbb
or
sbb
mov
mov
inc
add
inc
xor
mov
adc
aaa
add
sarl
mov
lea
aas
sbb
push
and
mov
popa
stos
inc
sbb
lock
fstl
shlw
ret
dec
push
lret
ljmp
bound
jle
mov
out
pushf
cli
adc
mov
lea
jl
js
or
into
jo
aam
jecxz
cmp
adcb
incl
add
mov
mov
cmp
loope
ja
into
sub
push
ja
inc
and
orl
fisubrs
add
add
xchg
pop
pop
notl
lret
lods
pop
mov
pop
xchg
pop
inc
out
push
arpl
push
pop
cmp
add
mov
xchg
xchg
cmp
jl
fmull
push
mov
call
addr16
pop
push
mov
xchg
subb
adc
outsl
xor
pop
xchg
faddp
push
jne
cltd
ror
and
and
adcb
push
js
jge
pop
lods
pop
lods
pop
pop
and
pop
rorl
cmp
mov
jns
add
clc
je
addb
pop
xor
add
lcall
add
push
test
adc
mov
mov
fimull
cld
xor
push
dec
xor
lea
das
sbb
cmp
shlb
test
add
js
int
mov
pop
sbb
push
add
ja
add
push
popa
add
in
pop
adc
add
mov
clc
add
repnz
adc
adc
adc
push
sbb
hlt
push
push
mov
push
clc
subb
ds
dec
push
lock
and
dec
test
push
movsb
data16
xor
jecxz
ret
sbb
add
add
pop
push
dec
pop
and
xchg
ret
push
loopne
lea
lock
shld
gs
cmp
out
xor
fcoms
sbb
nop
adc
sub
movsb
jnp
push
cmp
sub
rclb
dec
int3
loope
push
cmp
mov
sub
push
stos
inc
fs
insb
cmp
sub
test
daa
adc
sub
inc
lods
jne
cmpb
loop
das
mov
lea
sub
jge
gs
dec
pop
mov
pop
lcall
das
fmull
cmp
inc
add
sbb
pop
clc
jne
lea
sub
mov
sbb
inc
dec
outsb
pushf
xor
and
dec
cld
mov
ljmp
jbe
mov
int
xor
and
insb
cld
cmp
dec
cmp
ficompl
dec
sarb
repnz
jp
cmp
adc
inc
xchg
mov
dec
into
adc
or
jle
jle
add
jmp
or
add
sbb
or
or
stc
inc
adc
add
pop
mov
mov
xor
data16
popa
les
jmp
sub
lret
popa
pop
xlat
xchg
std
or
inc
lcall
adc
jp
add
inc
stc
xchg
dec
or
ror
dec
movsb
add
xorb
out
mov
and
xor
mov
add
mov
or
adc
dec
mov
repz
ljmp
push
enter
popf
pushf
pop
sub
je
push
orl
mov
ds
cmp
cmp
sbb
stos
mov
and
testl
xor
adc
pop
add
xchg
push
push
imul
lahf
adc
inc
or
test
push
or
add
lock
push
mov
xchg
fsubs
and
add
iret
and
adc
nop
and
shll
dec
inc
outsb
aas
mov
or
mov
jmp
and
es
aaa
loop
rorb
lock
test
inc
push
in
adc
test
cwtl
les
xor
adcb
lret
mov
mov
sbb
or
sub
sub
sub
out
pop
clc
incb
jmp
sbb
lock
and
movsb
pop
mov
jl
and
fcmovne
int3
mov
pushf
jge
add
or
jmp
jns
vcomiss
stos
or
fisttpll
and
jge
jge
je
sub
loope
flds
and
out
push
or
pusha
loope
pop
sub
mov
and
xchg
push
sahf
sub
pop
fstp
sub
sarb
pusha
pusha
insl
es
shrb
add
shufps
push
cmpsl
repnz
fisubs
adc
sti
add
or
fists
xor
mov
xchg
cli
adc
repz
ret
outsl
dec
inc
mov
dec
jne
orl
mov
sti
xor
pop
mov
pop
testl
fsubs
push
subb
xorb
mov
jb
sbb
jmp
push
and
inc
add
xchg
fsubr
or
pusha
sub
fnstcw
or
pop
insb
popa
xor
push
addb
adc
std
lea
call
inc
cwtl
cmp
insl
dec
bound
or
icebp
mov
ficomps
mov
push
xor
push
mov
push
xor
lret
push
or
mov
inc
aam
fs
sbb
cs
lods
in
mov
pop
lods
add
les
sub
mov
outsb
pop
sub
jmp
sub
push
lcall
lcall
inc
test
int3
cmpsb
xor
jg
hlt
add
repz
cmc
addb
test
stc
xchg
ljmp
fstpl
xor
aas
rclb
imul
fmull
push
loop
mov
inc
xchg
inc
loopne
xor
pop
mov
test
mov
or
repnz
mov
cld
mov
mov
not
insl
in
cmp
sub
in
testl
mov
sub
push
jp
push
sahf
jmp
pop
cmp
inc
mov
push
aam
adc
push
pop
xor
and
mov
and
lcall
adc
add
cmp
jg
addr16
fwait
and
sbb
pop
lock
das
adc
add
mov
and
lret
cmp
inc
dec
push
xchg
jo
push
mov
add
or
mov
lds
push
lea
add
adc
je
jl
push
sbb
js
or
adc
cmp
sbb
adc
adc
or
or
pop
sub
sub
push
pop
sbb
je
pop
xor
pop
adc
pop
rcrl
rcrl
inc
das
in
sti
incb
jno
mov
dec
inc
and
xorl
or
or
mov
ret
mov
or
xchg
or
dec
sbb
insl
jo
imulb
out
gs
mov
mov
loop
add
lcall
ret
or
pop
loopne
enter
pop
lea
push
or
mov
icebp
les
lds
jbe
sub
sbb
out
push
mov
lret
into
popa
and
mov
mov
mov
adc
inc
lock
mov
mov
sarb
jo
std
xchg
mov
cs
imul
pop
cld
or
mov
cmpl
mov
cs
jbe
loopne
loope
ret
sahf
push
scas
push
and
shl
jne
mov
xchg
pop
pop
gs
and
xchg
mov
inc
cmpsl
pushf
mov
mov
adc
insb
imul
xor
fadds
into
das
mov
in
xchg
popa
es
pop
cwtl
sbb
xor
xor
test
pushf
push
xor
or
mov
test
sbb
push
or
stos
js
mov
inc
add
or
push
out
mov
cmpb
mov
inc
sbb
xor
push
add
push
jl
sbb
sub
inc
das
jae
shr
loop
pop
sub
dec
subb
aad
push
ffree
loopne
movsb
xchg
pop
sti
sbb
loop
inc
dec
lock
and
fcomps
pusha
xor
or
loopne
xchg
sbb
or
sub
sbb
fcmovne
fwait
sahf
adc
xor
dec
fwait
sbb
aam
or
or
call
sub
xor
or
or
pusha
iret
not
inc
and
inc
je
sbb
adc
push
inc
xchg
scas
push
mov
inc
and
pop
adc
test
push
test
mov
ret
mov
hlt
cmpsb
repz
out
add
pop
mov
cmp
ljmp
xor
andl
xor
pop
fsubrl
call
and
insb
adc
ud2
inc
inc
mov
or
out
push
push
ret
push
mov
adc
data16
lock
push
mov
push
jnp
stc
int3
xchg
add
xor
xchg
test
xchg
or
adc
rolb
imul
nop
cwtl
jp
adc
movsl
filds
mov
repnz
cmpsl
xor
psubq
xchg
sbb
sbb
jmp
pop
iret
sub
idivl
add
adc
enter
js
or
add
loope
lret
movb
insl
cltd
lret
add
adc
add
xor
rcll
pop
push
aam
call
inc
jmp
dec
cmpw
adcb
adc
mov
adc
ret
pop
adc
push
xchg
int
add
or
fchs
imul
dec
push
or
cld
ljmp
out
sub
imul
adc
enter
mov
push
daa
mov
jno
lcall
add
and
xchg
stos
stos
test
adc
addr16
push
aam
xor
inc
orb
rcrl
or
mov
dec
lret
pop
dec
jns
fbld
loopne
lea
pop
subb
inc
shl
pushf
adc
mov
pop
add
aam
loop
rolb
adcl
orl
push
cltd
insb
mov
and
mov
out
mov
inc
insl
xor
dec
jbe
dec
mov
add
test
pop
xor
je
and
cli
sbb
dec
fcompl
cmp
or
jb
incb
jae
jnp
dec
out
dec
mov
adc
jns
add
and
sbb
jge
push
xchg
test
cmpsb
push
out
and
hlt
ljmp
sti
cmp
dec
dec
stos
or
jne
inc
fmuls
bswap
sbb
test
aam
xor
dec
addl
loop
sbb
xchg
xor
sub
xchg
iret
and
push
cld
not
in
popf
test
fadds
pop
dec
dec
sbb
ds
push
or
jne
inc
and
lock
and
mov
adc
test
out
lock
or
cmp
jl
mov
dec
int
mov
movsb
xor
popa
pop
xor
pop
hlt
test
mov
inc
add
push
rolb
mov
push
pop
test
add
cli
xchg
pop
push
cmovg
bound
pop
xor
decl
sub
lcall
nop
xchg
mov
inc
lock
cmp
inc
mov
sbb
inc
mov
add
sbb
mov
sbb
addl
mov
xchg
shll
push
mov
andl
test
fdiv
mov
loopne
jl
mov
add
mov
sub
cld
sbb
and
rorb
add
pop
scas
shll
and
push
sbb
and
sbb
ljmp
in
test
and
push
les
pop
xchg
in
cmp
lds
lds
adc
scas
mov
leave
addl
sub
adc
inc
pop
adc
adc
les
sbb
inc
jle
repz
sbb
les
mov
cmp
add
xchg
mov
and
xor
push
adc
cmpsb
xor
mov
test
shrb
movsb
mov
movsb
lea
jne
imul
rolb
and
stos
lods
mov
lcall
cmp
in
jne
inc
jmp
mov
sub
imul
pop
or
xchg
add
pop
pusha
lock
cmp
ja
push
dec
jmp
test
fsubs
dec
fldt
push
cmp
rolb
inc
insl
jle
sub
adc
sahf
dec
pop
add
dec
or
ljmp
jmp
lahf
mov
adc
jmp
cmpsl
push
or
sub
mov
push
dec
push
sub
hlt
lds
mov
jle
cmp
jle
cmp
push
xor
vprotw
dec
push
mov
lds
xchg
mov
sub
loopne
add
push
jmp
mov
movsb
add
mov
jae
push
rcrb
dec
mov
inc
mov
pop
jge
fdivp
sbb
pop
cmp
test
lods
xchg
in
nop
add
jne
dec
dec
jae
nop
lret
sti
je
jmp
mov
or
pushf
xor
and
imul
outsb
mov
sbb
scas
lea
mov
out
push
sub
jae
adc
gs
andl
rorb
pop
push
and
scas
mov
xor
shlb
inc
mov
stos
sub
mov
and
call
mov
pusha
aaa
fimull
nop
mov
mov
fsts
ret
mov
add
testl
mov
jmp
faddp
mov
push
outsb
inc
add
xorb
mov
cmpsb
push
sbb
and
sub
pop
pop
rolb
or
jecxz
add
pushf
jmp
push
shlb
test
pop
mov
clc
mov
xlat
push
mov
dec
mov
mov
jne
xor
push
dec
pushf
xor
or
inc
int
push
cwtl
jge
neg
add
mov
push
inc
sbb
xlat
test
cmp
jnp
mov
sbb
push
rcr
ret
ja
jnp
jge
jle
add
sub
xor
jne
push
adc
inc
xadd
or
dec
test
loop
jge
cli
push
inc
pushf
lods
rcrl
and
pop
insb
push
push
pop
and
repz
mov
pop
add
add
enter
mov
mov
into
mov
mov
ret
and
push
in
and
rorb
out
adc
iret
sbb
std
mov
or
or
inc
enter
pop
es
xor
mov
inc
testl
fildl
enter
les
test
mov
jne
inc
or
cmp
in
int
cmp
jne
hlt
int3
add
jne
mov
mov
test
pop
inc
rcrl
pop
inc
add
mov
divb
pop
ljmp
adc
or
add
xor
scas
sbb
cld
clc
dec
out
shl
dec
lock
inc
push
add
imul
insl
mov
pushf
sub
lcall
add
stos
add
fidivl
movsl
add
push
sbb
js
or
shll
hlt
mov
rcr
add
or
shr
add
rcll
rcrl
mov
jg
nop
loop
jmp
dec
sub
stos
lret
mov
notb
aaa
pop
outsl
ret
ss
fcom
movsb
mov
loopne
shr
or
mov
sahf
dec
add
adc
mov
pop
data16
push
inc
loopne
xor
and
mov
dec
mov
jge
cmp
add
ficoml
negb
pop
adc
inc
dec
loop
fiadds
push
call
push
jmp
fidivl
push
jb
push
jo
mov
push
add
mov
sbb
lea
stos
or
add
lret
lods
lret
into
jmp
scas
push
xchg
mov
inc
dec
and
add
test
les
add
add
jp
lret
das
mov
xchg
add
negb
lret
sub
movups
jnp
add
or
call
inc
sbb
out
das
inc
add
cli
push
push
dec
repz
cmp
enter
outsl
cmp
repz
fxch
jge
shrb
pop
cmp
add
jmp
inc
add
fildl
inc
mov
cmp
add
mov
sub
scas
inc
mov
mov
push
mov
rorl
dec
pop
cmp
test
push
push
adc
push
or
xchg
scas
cmp
mov
cmp
insb
inc
cs
or
ss
mov
gs
or
out
mov
dec
std
decl
incb
mov
cmp
pop
jne
dec
mov
inc
inc
mov
or
aad
mul
pop
add
rol
cmpsl
fcompl
add
mov
arpl
sbb
fisttps
les
mov
or
outsl
mov
xor
dec
out
lock
add
adc
dec
dec
out
mov
jnp
add
push
adc
mov
inc
and
add
jae
cmp
xor
xor
popf
add
sub
es
jnp
xchg
mov
and
xlat
add
fdivs
sub
jle
stos
xchg
xchg
leave
add
shll
push
pop
loopew
dec
je
setg
sub
clc
clc
add
mov
mov
loop
aas
sub
pop
pushl
movb
lea
sarb
addl
fisubl
xorb
mov
es
sahf
scas
pushf
sbb
loop
lock
incl
lret
jmp
sub
add
sub
mov
fcmovu
pop
xchg
ret
mov
dec
inc
dec
inc
out
adc
push
xor
les
sub
cmp
ficomps
cld
loopne
repnz
mov
testb
mov
shll
push
push
pop
dec
repnz
test
and
mov
push
pop
aam
jmp
or
outsl
and
rolb
and
cwtl
mov
ja
hlt
add
loope
shlb
jle
dec
adc
jge
mov
sub
adc
lahf
adc
test
mov
enter
jo
add
xchg
push
sbb
xchg
cmp
mov
sub
xor
inc
fldl
jno
and
jle
ljmp
sbb
push
jno
ret
jge
dec
xchg
or
adc
imul
arpl
fpatan
iret
in
jmp
cmpb
adc
xchg
or
add
je
fcoml
add
add
inc
xor
mov
sub
push
out
xor
mov
or
sar
add
add
lea
or
pop
nop
icebp
testb
xchg
push
sub
cmp
push
pop
push
xor
xorb
push
mov
add
clc
push
jo
movsl
icebp
mov
dec
inc
adc
mov
loope
add
mov
xchg
jo
gs
je
xchg
ss
cmp
dec
fwait
sbbl
jecxz
jo
mov
lcall
jne
pop
cmp
adc
cmp
mov
or
xor
add
movb
adc
adcl
and
adc
xlat
or
jbe
mov
xor
sub
insb
or
decb
sub
xor
dec
or
cmp
and
sbb
les
jo
pop
dec
lods
data16
sbb
jbe
add
jl
dec
shrd
push
fs
add
jle
cmp
jle
loop
ss
jl
cmpsl
jno
aad
clc
mov
or
cmp
cmp
mov
stc
inc
add
dec
jmp
and
xchg
clc
sub
sbb
cmp
or
insb
incb
push
inc
loopne
subb
mov
add
sbb
jne
popa
fadd
jne
add
icebp
mov
inc
out
sub
dec
and
mov
clc
sbb
js
jg
jb
push
sub
or
cld
mov
shl
fidivrl
rorl
movsl
iret
inc
push
addl
mov
and
push
push
jns
add
mov
lock
mov
outsb
push
mov
push
jg
lods
jb
outsl
in
dec
dec
push
dec
dec
inc
and
xchg
imul
jb
or
sbb
imul
jo
mov
pop
inc
test
stc
mov
add
xor
es
stos
lds
xor
je
int
shll
movsb
sbb
jne
loop
ret
add
jb
lock
sbb
pop
sub
push
pop
xchg
add
inc
cwtl
or
or
xchg
sub
xchg
daa
jp
adc
sarb
mov
and
addl
push
mov
xchg
add
mov
inc
sbb
pop
xor
or
cltd
out
into
mov
and
adc
xor
or
into
cmp
les
je
fs
push
shl
jne
adc
cmp
dec
test
jg
lret
jbe
adc
mov
rorb
add
mov
or
inc
icebp
adc
push
insl
push
jmp
push
lret
sub
cmp
lahf
xor
cld
cld
jl
jle
sarb
pop
inc
or
mov
push
insl
or
inc
shr
loop
mov
mov
sbb
jns
or
jo
jge
pminsw
idiv
gs
or
pop
data16
fwait
repnz
inc
popa
je
bound
fwait
push
inc
je
dec
cmp
jmp
test
adc
pop
repnz
cmp
popf
push
sub
fcoms
loopne
dec
lret
enter
sub
push
enter
movsl
or
inc
call
dec
add
icebp
sub
clc
fstps
or
and
push
fs
add
cli
or
dec
shrb
add
adc
add
or
and
pop
xor
cmp
daa
fs
dec
aas
xchg
inc
aam
call
cmp
js
push
clc
jmp
das
xchg
movsl
je
sbb
cmp
js
pop
dec
and
pop
imul
xchg
sub
add
hlt
nop
pop
bound
adc
xchg
cmp
nop
pusha
dec
jmp
jo
or
rcl
sub
pushf
rorb
lahf
dec
push
sub
and
push
jo
insl
pop
xchg
jno
cmp
add
sub
pop
push
mov
aaa
xor
into
int3
shlb
sub
and
enter
imul
jbe
sub
or
mov
jmp
inc
mov
push
pusha
lock
cmp
mov
jnp
sub
shll
pusha
mov
ss
clc
cmpl
loope
and
cmp
mov
and
mov
cmp
pushf
test
fidivl
insb
sub
push
jp
pop
jecxz
xchg
pop
call
gs
adc
adc
mov
add
sub
in
and
and
jno
add
jge
pusha
ret
jecxz
xchg
mov
xchg
rcll
fdiv
inc
xor
xor
fdivl
sub
sbb
int
lock
pusha
dec
repz
pop
cmp
mov
mov
sbb
mov
sbb
nop
add
xchg
mov
xor
jmp
dec
lcall
jmp
or
jmp
testb
je
push
ljmp
test
inc
addb
sbb
jb
xor
and
adc
push
cmp
jne
pushf
aam
test
adc
add
mov
divl
sbb
mov
mov
sbb
jne
in
sub
push
add
inc
lds
push
cltd
xor
cmpsl
mov
fs
jp
arpl
rol
into
push
dec
dec
add
add
mov
pop
cld
cwtl
adc
fs
divl
cmp
dec
jecxz
jecxz
push
push
xor
clc
add
dec
sub
cmpb
addr16
test
shl
iret
mov
push
add
fsts
xor
ficomps
or
add
push
push
prefetcht1
xchg
inc
add
lea
sbb
movl
loopne
ret
xor
xlat
cmc
test
cmp
pop
in
sub
cltd
sbb
sbb
movsl
xchg
lcall
fstl
das
add
sbb
lahf
adc
adc
sub
push
pop
call
and
xor
cmp
icebp
das
mov
jmp
sub
in
addl
add
or
in
fidivs
inc
test
data16
sub
aam
sbb
push
push
cmp
mov
push
outsl
mov
dec
inc
outsb
mov
popa
insb
inc
sbbb
pop
push
lret
cld
jo
outsl
cltd
clc
dec
mov
add
mov
or
das
adc
sbb
cmc
jnp
testl
shl
jl
rcrb
fs
push
orl
lods
xor
sub
xor
popa
dec
xchg
adc
or
mov
adc
adcb
out
cld
leave
clc
push
xchg
sub
mov
dec
jbe
and
adc
inc
shll
sbb
adc
sysexit
ror
mov
ljmp
inc
jmp
test
adc
leave
ret
add
push
sub
les
or
adc
adc
or
xchg
mov
inc
xlat
sbb
xchg
and
sbb
xchg
or
lea
fs
mov
jno
nop
addl
insb
mov
lret
push
mov
jo
push
push
cmp
xchg
mov
push
lock
inc
xor
dec
jo
xor
jmp
pushf
and
hlt
into
popa
mov
and
inc
ret
or
and
and
test
mov
mov
adc
adc
and
push
cmp
cmp
sbb
sbb
testb
or
cmp
pop
adc
sbbb
xchg
popl
dec
cmp
lea
or
dec
sar
es
add
or
mov
mull
fcmovb
jmp
mov
out
pop
or
mov
add
add
or
bound
scas
push
lock
int3
sti
in
or
cmp
xchg
sbb
pop
push
ret
inc
or
or
bound
or
xlat
push
adc
dec
fucomp
clc
fnstcw
inc
testb
lret
add
flds
dec
testl
scas
and
cli
mov
adc
sub
adc
cs
lods
add
mov
add
hlt
or
dec
or
sub
mov
stc
out
sub
inc
jbe
gs
cmp
imul
rcll
mov
mov
push
cli
and
adc
iret
shl
andl
adc
aad
sub
das
mov
pop
add
or
ds
clc
add
jbe
imulb
or
test
inc
aaa
mov
test
je
or
push
mov
or
and
inc
je
cmpsl
cmp
dec
sbb
lock
data16
sub
sub
mov
cmp
adcb
push
add
test
inc
cmp
cmpsl
pop
jb
inc
push
cld
sub
jne
add
shrb
push
ljmp
mov
dec
and
sub
cmp
mov
push
cmc
sub
cs
jbe
sbb
push
frstor
push
push
addl
inc
xor
popf
adc
or
pop
cmp
sub
leave
inc
xor
dec
cmp
jmp
adc
xor
sub
roll
insb
xor
mov
adc
scas
push
xlat
push
rorl
scas
cwtl
or
pop
add
inc
push
push
mov
push
push
and
pop
nop
iret
lea
addb
ds
and
lret
jne
aam
subl
mov
jmp
inc
adc
dec
dec
sub
mov
call
clc
jnp
add
and
enter
inc
addr16
dec
out
or
test
lret
aad
pushf
adc
push
fcmovu
add
xor
and
shll
and
je
mov
xor
rorb
pop
add
xor
dec
mov
or
rolb
dec
jnp
pop
imul
jo
or
cltd
movsw
xor
pop
outsb
rorb
mov
hlt
jo
hlt
aam
xchg
or
dec
leave
les
and
xor
repnz
inc
cmp
mov
inc
or
in
sub
inc
inc
mov
neg
neg
sbb
sub
mov
sbb
and
sbbl
adc
sbb
out
push
fcoms
inc
and
fsts
fcomi
sbb
fxch
enter
sbb
and
and
or
dec
jns
fwait
dec
jne
mov
pusha
cmp
pop
pop
adc
lds
adc
lods
rcl
ljmp
dec
and
shr
test
pop
dec
push
mov
outsb
push
testl
mov
cld
je
push
cli
dec
divb
or
add
rcrb
jmp
sbb
mov
add
jno
scas
mov
pop
in
aaa
hlt
inc
dec
jle
jne
xchg
dec
and
gs
int
or
into
jbe
jns
pop
les
jmp
popa
aam
adc
out
mov
add
push
adc
dec
pop
adc
pop
pop
in
das
bound
dec
sbb
pusha
adc
lret
adc
dec
aaa
pop
les
lods
and
js
cmp
lds
or
loopne
sub
sahf
mov
cs
int3
xor
sbb
and
mov
pushl
dec
fidivs
push
push
arpl
jg
xor
jge
movsl
cwtl
rcrb
movsb
popf
ret
in
leave
jne
aam
dec
sub
testb
das
cmpsb
leave
fists
or
je
xchg
jg
icebp
mov
mov
mov
push
or
or
mov
je
les
jg
pushl
mov
push
cmp
ja
add
cmp
adc
cmp
jne
notb
xor
adc
mov
xor
idivl
pop
jo
test
add
aam
add
push
add
mov
or
ja
pop
pop
add
jmp
pusha
dec
aaa
push
jbe
and
pop
mov
scas
incb
or
jmp
imulb
je
iret
push
push
addr16
mov
movsb
into
sarb
xchg
ja
leave
add
mov
and
mov
in
nop
clc
jne
nop
push
cmp
xor
std
add
adc
mov
in
jmp
add
mov
pop
mov
jo
mov
dec
cmpsb
inc
sub
ljmp
sbb
in
cmp
push
pop
call
movsb
daa
sub
mov
inc
sbb
or
xorb
sbb
in
or
es
enter
push
mov
inc
sbb
xchg
or
push
jle
mov
pop
jle
out
ficompl
dec
mov
push
rcl
rcrl
aad
xlat
fcomp
test
fstpt
mov
or
imul
sub
push
into
les
lods
adc
jne
cmp
test
mov
mov
data16
orb
mov
add
push
clc
mov
inc
push
add
sub
mov
or
add
mov
divb
in
pusha
ja
mov
icebp
adc
in
stc
mov
das
or
push
loopne
movsl
adcl
inc
add
sub
shlb
pusha
push
lcall
mov
imul
pop
or
sbb
idiv
rorb
or
adc
mov
mov
or
fstpt
inc
push
loop
pop
sub
mov
adc
pushf
sub
adc
push
mov
test
adc
pop
and
push
mov
adc
sti
add
mov
adc
sub
mov
adc
ret
les
or
xchg
es
dec
test
xor
inc
movb
test
popf
fucomp
fdiv
decb
or
loope
into
and
lea
loop
mov
pop
sbb
movsl
jns
or
jae
xchg
ja
add
adc
mov
sbb
jno
inc
mull
inc
sahf
pop
pmulhuw
ljmp
loopne
inc
or
fiadds
in
dec
mov
jne
mov
add
sub
mov
test
rolb
push
mov
ds
fistps
dec
xchg
mov
or
or
push
ss
mov
sub
cmp
pop
shr
insb
lret
movsb
sub
inc
xchg
mov
xor
mov
jge
jl
fdivl
and
rorb
sub
jle
inc
test
enter
mov
sar
or
and
hlt
rorb
adc
pop
dec
push
push
push
lret
cmpsl
mov
movl
lods
or
fs
shrl
mov
out
xchg
mov
or
dec
add
dec
add
iret
and
lods
lock
div
jns
lret
cli
inc
cli
div
nop
mov
xor
mov
add
loopne
pusha
outsl
mov
mov
cwtl
fcmovne
pop
adc
dec
dec
js
ret
sbb
shll
das
and
jne
cmp
mov
rolb
mov
clc
mov
xor
cmpsb
mov
mov
lock
mov
pop
inc
cmpsl
add
pop
push
sub
or
pushw
sub
loop
pop
cmp
cmpsl
xchg
mulb
les
adc
sbb
xchg
nop
add
push
and
adc
xor
jns
das
cli
into
or
jne
fdivrs
aam
inc
inc
test
dec
dec
nop
and
jge
mov
lods
dec
xor
scas
fimuls
xor
sub
adc
jns
fisubs
cmp
cld
lea
fcmovu
dec
inc
xor
mov
pop
les
inc
add
les
shrl
add
sbb
clc
sbb
xchg
add
sbb
inc
mov
sbb
notb
jns
lock
orl
out
or
jge
pop
enter
lock
xor
sbb
jmp
add
jne
je
xchg
dec
sbb
in
mov
cmc
xor
movsl
jp
push
into
mov
adc
je
cwtl
sub
sub
adc
cmp
add
inc
mov
push
add
push
ret
popa
nop
cmp
call
or
adc
in
dec
andb
push
push
push
pop
shr
dec
dec
pop
dec
pop
add
or
mov
shll
cmp
jne
sbb
neg
and
js
sub
call
jl
mov
and
js
or
add
mov
mov
jecxz
adc
push
into
je
sub
out
cmpsb
clc
loope
push
sti
and
xchg
push
cmc
lahf
push
lock
mov
add
sti
push
movsl
insb
sub
into
out
enter
add
or
or
push
pop
ret
jbe
lret
movsb
xabort
mov
adc
dec
enter
cmp
mov
and
dec
int3
mull
sahf
jne
clc
daa
shr
sbb
testb
lock
inc
mov
inc
in
lahf
mov
in
dec
nop
dec
mov
dec
cmp
jge
push
cld
stos
aas
sub
cmpb
or
add
dec
cmp
out
mov
add
add
fadds
dec
jb
pop
add
mov
add
mov
dec
outsl
jp
jne
dec
mov
jb
int
push
lcall
inc
ret
movsb
mov
or
add
lds
ret
adc
sarb
mov
add
add
add
popf
ret
add
test
mov
outsl
jmp
lret
ret
inc
jl
mov
movsl
dec
add
ljmp
dec
popf
fisttps
jmp
sahf
mov
nop
push
or
add
xchg
fs
or
mov
adc
push
add
sbbb
and
sub
ret
les
push
sub
add
fimuls
idivb
test
lret
push
sahf
orl
pop
cmp
xor
into
pusha
scas
add
rolb
xor
clc
pop
and
pop
pop
inc
mov
in
add
ret
jne
or
or
jns
mov
mov
cld
rcl
push
pop
jae
or
or
dec
movsl
test
add
add
mov
add
lahf
add
mov
shlb
pop
or
pop
out
mov
or
dec
pop
lahf
pop
adc
push
add
and
ja
jne
and
and
or
mov
test
cmp
or
pop
and
pop
xorl
cld
cld
xorb
subb
sbb
inc
jo
push
xor
pusha
dec
inc
xchg
xchg
add
dec
pop
inc
cmpsb
dec
aam
out
mov
or
pop
mov
inc
fiaddl
mull
test
adc
data16
sbb
add
add
jae
xchg
jle
out
stc
mov
je
and
sbb
inc
jb
repnz
lret
into
into
into
imul
inc
pop
mov
sarb
push
pop
nop
pop
lods
movsb
sarl
mov
and
and
or
pop
cltd
cmp
fiadds
or
dec
addr16
pop
lcall
add
leave
lahf
pop
test
test
adc
add
and
sbb
adc
out
push
insb
or
je
or
sub
or
sub
jmp
mov
lret
push
pushf
lret
xor
subl
and
scas
sbb
nop
xchg
cltd
aad
pop
jo
or
daa
enter
shrb
and
lods
pop
fmul
cmp
push
xchg
push
mov
xor
push
dec
and
lods
and
cmp
mov
loop
jle
xor
push
ss
ficomps
adc
sbb
jne
lcall
ret
sbbb
jge
gs
mov
stos
jl
aaa
in
ljmp
pusha
pushf
stc
cld
icebp
mov
sbb
dec
jecxz
sbbb
stos
jnp
nop
dec
sbb
xor
sub
cmp
mov
pop
mov
rcrl
sbb
andb
jmp
loopne
mov
mov
xchg
mov
loopne
or
mov
out
je
cmp
rorb
lret
xchg
fisttpl
inc
inc
int3
call
jle
or
inc
xchg
lds
fimuls
mov
or
mov
sub
ljmp
jmp
or
mov
or
jecxz
popa
cld
call
mov
movsl
rolb
dec
loope
jns
push
sbb
popa
movsb
push
mov
add
or
or
fsubrl
push
xchg
cmp
jmp
pop
test
pop
sbb
jnp
inc
pushl
dec
push
leave
outsl
inc
test
je
test
mov
xor
mov
aam
mov
and
in
xchg
push
loopne
xor
mov
xchg
ret
shl
dec
jge
inc
add
sub
or
test
and
shlb
pop
push
mov
hlt
and
add
dec
push
es
inc
sbb
clc
pushl
mov
jno
jge
sbb
jae
fwait
xor
push
pop
push
imul
sub
enter
push
xchg
jl
popf
push
inc
pushf
and
push
push
adc
push
repnz
or
push
shll
leave
mov
rorb
rclb
mov
sub
adc
cmp
mov
aas
aas
cmpsb
loopne
mov
mov
push
scas
sbb
les
push
lds
mov
and
xlat
xchg
inc
add
pop
cmp
nop
pop
mov
pop
inc
lods
fsts
clc
dec
sbb
or
sub
jmp
sahf
pop
mov
xor
mov
inc
or
adc
or
stos
movsl
inc
push
jne
push
inc
or
loopne
das
lods
movsb
jo
push
imul
insb
insl
xchg
push
mov
fisubrl
push
and
inc
int3
faddl
outsb
jb
mov
call
and
sbb
dec
or
and
inc
xchg
mov
cmp
pop
add
or
adc
mov
insl
loopne
jo
fisubl
mov
pusha
jns
cmp
xchg
je
sarl
push
clc
push
fistpll
test
inc
mov
mov
jg
xor
enter
lock
and
cld
add
ficomps
push
xor
lea
push
fsubl
or
pop
fdivrs
js
mov
mov
gs
sbb
mov
insl
cltd
pop
nop
push
dec
addl
cld
loopne
jmp
dec
loop
and
lea
fldpi
jo
ss
push
js
xor
mov
adc
xchg
and
mov
ret
shll
addb
pusha
scas
mov
fcompl
lea
xor
shrl
sub
add
sbb
mov
shlb
loope
xor
subb
fwait
push
and
push
adc
mov
hlt
xor
subl
int
add
sub
jbe
pop
popf
xchg
pop
testb
inc
mov
sbb
inc
inc
ds
adc
or
lock
push
xchg
cwtl
lock
pusha
mov
add
push
dec
mov
dec
adc
xor
mov
add
or
push
xor
fadds
add
mov
jo
test
adc
ficomps
or
test
xchg
add
fwait
jg
data16
dec
shlb
or
pop
push
mov
lea
pmaxub
and
push
or
scas
cmp
adc
pop
jp
or
xchg
xchg
loop
loope
and
mov
mov
loopne
clc
out
cvttps2pi
mov
aaa
xchg
sbb
xor
rorl
push
pop
inc
pop
cs
fldenv
inc
adc
fists
adc
xor
adc
les
sarb
fstps
icebp
lahf
les
pop
or
add
jmp
cmp
fdivs
in
lcall
mov
xchg
and
pop
sbb
push
dec
pop
sub
jge
mov
outsb
imul
rsm
or
data16
xor
or
dec
in
iret
ret
jo
pusha
jo
gs
xor
adc
sub
sbb
pop
fdivr
add
fcompl
orl
test
rolb
xor
in
loopne
cltd
in
mov
data16
in
jb
stos
sub
fsubrs
xor
sbb
cwtl
sub
add
nop
in
inc
push
in
aam
pushf
pushf
lock
cmp
in
jp
lock
call
adc
adc
mov
call
fdivrs
jnp
and
aam
push
inc
pop
std
pusha
mov
add
adc
inc
mov
les
adc
sub
add
in
cmpsb
fdivrs
in
pusha
js
sbb
jge
jge
mov
mov
sbb
jne
pop
outsb
ss
cmp
xor
jb
pop
outsb
adc
imul
mov
std
adc
out
jo
xor
mov
cmp
push
jle
cmpsb
mov
pop
test
vcvttps2dq
fisubl
mov
filds
inc
icebp
andb
hlt
jle
dec
or
in
mov
or
in
leave
or
and
dec
dec
jg
adcl
push
pop
loopne
call
aam
pushf
addr16
mov
dec
aam
movsb
sub
shrb
jg
sub
in
movups
sbbl
movsl
fadds
divb
pop
push
cmp
js
fmull
insl
and
call
dec
adc
jmp
push
xor
add
mov
lock
cmpl
cmpl
rorl
sub
or
fwait
enter
mov
imul
dec
cmpsb
dec
insl
mov
or
aaa
in
call
testl
repnz
mov
loopne
xchg
fcoml
shll
movsb
gs
imul
call
and
cmp
out
inc
shrb
jo
ds
pusha
test
adc
cltd
fs
sub
leave
and
adc
and
dec
cmp
and
dec
xor
ds
int
push
mov
mov
sbb
add
pusha
cmpsb
add
nop
outsl
sbb
int3
push
cmp
rcr
add
pop
test
xchg
test
pusha
push
in
pop
xchg
pop
lea
jmp
enter
in
aam
pop
inc
cmpsb
adc
sbb
and
pop
xchg
push
lea
sbb
dec
adc
jbe
lock
pop
inc
je
sbb
inc
inc
xor
xorb
xchg
inc
mov
push
movsl
sldt
mov
lcall
mov
arpl
cmp
mov
aam
add
sbb
clc
jo
and
mov
pop
dec
and
or
mov
enter
mov
cwtl
jbe
jo
inc
test
call
jmp
in
adcb
mov
aam
pop
mov
das
nop
fmuls
mov
test
in
inc
insl
inc
add
jns
add
inc
add
mov
sub
push
cmp
jg
gs
es
loopne
in
test
push
cmc
sub
dec
sbb
pop
dec
or
movsb
cmp
and
nop
mov
ficoml
call
adc
repz
mov
out
lahf
xor
out
rcl
pop
fisubrl
enter
fsubr
movsb
cmp
sarb
mov
push
push
mov
add
jb
out
mov
cmp
cmp
fcomp
cmpsb
test
jns
popa
fsubs
mov
lea
lock
test
lods
mov
in
in
mov
in
in
int3
rcl
lods
sub
sbb
push
rorl
cmp
mov
out
and
in
sbb
rorl
xchg
push
fimuls
mov
test
out
rorl
in
push
or
cmc
ret
cs
inc
scas
fmul
mov
sbb
push
imul
sub
lock
fcoml
or
das
adc
in
push
mov
nop
in
dec
out
movsb
pop
lods
sub
dec
out
pop
mov
mov
leave
mov
adc
push
call
mov
adc
outsl
fadds
inc
and
leave
mov
xchg
cmpsb
push
sbb
in
and
inc
or
call
lock
aas
mov
xchg
js
orb
inc
movsb
sbb
sbb
pop
xor
inc
mov
dec
call
ret
push
add
xlat
cmp
popf
mov
sub
add
roll
pop
xor
pop
mov
push
pop
jb
dec
fwait
pusha
cltd
fs
add
cmpsb
dec
js
jl
adcb
jge
js
inc
fdiv
les
mov
xchg
mov
in
call
xchg
adc
lock
push
mov
xchg
lret
shll
test
mov
xor
call
arpl
leave
xchg
imul
mov
push
aam
jne
xchg
dec
mov
and
xchg
jg
nop
mov
ret
dec
hlt
add
xchg
stos
or
add
inc
xchg
test
insb
inc
and
cmpsb
stos
add
rol
inc
xor
mov
cmpl
sub
in
cmp
xor
jmp
imul
mov
nop
loopne
addr16
and
inc
popa
jno
push
cmp
or
or
cmp
nop
or
or
xor
inc
or
or
daa
in
aaa
sub
enter
cltd
inc
cmp
ja
cltd
pop
pusha
insl
add
mov
mov
movsl
aad
inc
or
push
or
inc
mov
add
fwait
shlb
daa
cwtl
lcall
test
cmpb
push
and
xlat
fcompl
sbb
cmc
and
cmpsl
inc
fmull
mov
fnstsw
or
cmp
push
lds
add
inc
inc
es
jne
ds
fs
movsb
stc
jl
repz
incb
dec
es
pushf
std
mov
in
add
cltd
push
mov
addr16
cmp
int3
pushf
adc
add
cs
inc
fiaddl
inc
cltd
js
sub
inc
jo
jne
aad
add
add
rcrb
mov
loopne
adc
and
inc
push
mov
mov
mov
test
xchg
adc
imul
push
mov
xchg
fcmovnb
movsb
lods
rorl
xchg
enter
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
cwtl
mov
pop
insb
nop
dec
outsl
movsb
dec
test
das
dec
xor
mov
dec
push
sub
pop
mov
mov
mov
mov
xor
or
xchg
jne
fistps
mov
or
insl
sbb
popa
nop
mov
mov
pop
adc
jmp
mov
mov
lods
lods
test
add
imul
add
add
and
in
lea
pop
call
and
sub
mov
lcall
push
mov
in
pcmpeqb
or
lods
and
sub
sbb
xlat
pop
stc
xor
adc
sbb
mov
add
sbb
cmp
call
or
sub
fwait
movsb
scas
je
push
rcr
mov
rorb
mov
setb
rorb
mov
cwtl
int3
jmp
xchg
enter
dec
mov
fmull
dec
and
mov
dec
push
in
popa
add
inc
in
adc
sub
or
test
adc
pusha
jle
dec
arpl
lret
mov
sahf
aam
shrl
mov
lock
cmpsb
repnz
pop
fdivr
rclb
xlat
enter
fcoml
pop
mov
jl
add
in
mov
pusha
sbb
mov
mov
xchg
pop
jo
or
test
dec
push
xchg
fdivs
add
dec
in
mov
dec
and
test
mov
or
sub
sub
and
jno
test
shll
ss
mov
adc
inc
nop
cld
shll
add
adc
inc
stos
inc
and
adc
fbld
and
fs
mov
xchg
adc
pusha
inc
fwait
or
and
or
xor
ret
xlat
stos
scas
inc
leave
inc
push
test
mov
rol
in
movsb
mov
movsb
shrl
xorb
shll
jne
movsb
into
push
aaa
mov
movsb
adc
fsub
sbb
inc
imul
leave
inc
addr16
rolb
lock
lods
scas
xchg
dec
adc
push
sub
cmp
scas
jmp
fwait
mov
loopne
mov
or
inc
dec
mov
or
add
test
pop
push
scas
add
mov
movsl
adc
dec
xchg
cwtl
scas
or
in
scas
mov
add
test
inc
xor
add
adc
es
leave
lret
insb
std
pushf
std
dec
fidivrl
fists
adc
adc
inc
nop
mov
popa
popa
insb
xchg
xchg
dec
cmpsb
dec
test
cwtl
mov
push
movsb
test
loope
cld
cmp
jp
add
cmp
dec
adc
inc
mov
fcoml
fsubs
aam
sbb
push
or
mov
or
mov
or
mov
stos
mov
mov
lea
hlt
mov
mov
xor
mov
mov
popf
and
jl
mov
pop
mov
scas
fstl
lcall
in
test
mov
sbbl
int
mov
mov
loopne
aam
mov
mov
inc
mov
nop
shrb
push
or
xor
xor
or
stos
dec
shlb
fdivs
rolb
or
movl
mov
inc
insb
mov
sbb
push
adc
xchg
push
xchg
ja
push
lret
and
repz
fs
ss
add
cmp
call
bound
leave
sbb
test
xor
xchg
sarb
pop
pop
aad
mov
test
mov
push
mov
pandn
xor
adc
adc
push
lcall
bound
pop
cmp
insl
xor
and
pushf
mov
or
jne
mov
fs
xchg
cld
unpcklps
xchg
xchg
cmp
and
int
lea
lods
xor
xor
sarb
adc
adc
das
cmpl
mov
in
outsl
and
mov
inc
mov
adc
in
push
adc
adc
or
ja
mov
pop
leave
or
loope
int
mov
cmp
popa
rolb
sbb
fdivrl
lea
lea
stos
mov
ficoml
jmp
in
mov
inc
shl
mov
dec
adc
mov
and
test
pop
icebp
inc
xchg
pushf
adc
sub
push
cmp
add
pop
imul
sbb
dec
jae
lock
adc
out
lcall
filds
out
dec
inc
shll
adc
out
sbb
push
cmpsl
sbb
dec
lret
jae
or
add
sbb
std
lret
push
add
sti
mov
popf
loopne
sub
repnz
stos
xor
xor
and
aaa
jge
pusha
sub
dec
and
and
js
sub
addb
inc
sbb
fstpl
das
es
cmp
call
inc
out
shlb
add
mov
test
push
jno
dec
rol
or
loope
ja
andb
call
cs
pop
cmp
xchg
push
push
loope
sbb
ret
lea
adc
adc
xchg
dec
jl
arpl
xor
lods
xchg
movsb
pop
or
cmpsb
dec
pop
aaa
js
push
xchg
fsubrl
mov
nop
xchg
xchg
dec
outsb
and
cltd
in
mov
and
mov
addr16
test
test
data16
in
inc
adc
sbb
shrb
aas
lret
adc
sub
jle
pop
inc
cmpsb
lods
loopne
inc
inc
mov
sbb
popa
sub
repnz
repnz
push
lret
cmp
adc
nop
push
pop
les
lock
sbb
in
dec
adc
pextrw
imul
adc
inc
push
sbb
dec
jnp
pushf
in
push
sbb
cs
roll
dec
sbb
adc
les
or
cmp
xchg
xchg
popa
xor
lcall
stos
pop
std
fdivs
add
fs
push
std
add
es
or
notl
push
cltd
nop
inc
out
and
xchg
adc
mov
ret
in
mov
mov
cmpps
je
lret
push
inc
in
aam
add
add
orb
or
mov
mov
or
add
or
pop
xor
xchg
and
roll
pop
mov
adcb
cmpsl
add
pop
mov
jo
std
xchg
rdtsc
and
cmpsb
or
add
jns
push
lcall
cmp
in
lods
jne
xchg
push
adc
rep
pusha
pop
sbb
arpl
or
sbb
int3
mov
mov
scas
xchg
cmc
leave
insl
or
leave
mov
les
sub
leave
lret
pop
ret
arpl
leave
ret
test
fiaddl
mov
jbe
lret
push
xor
inc
test
cmp
sbb
lret
pop
jo
fwait
mov
and
mov
adcb
add
cmp
int3
lds
pop
or
je
jne
mov
sub
cs
test
sub
or
knotb
add
call
adc
stos
imul
cmpsl
cmp
test
or
jne
adc
test
loopne
dec
sbb
test
and
push
mov
adc
xlat
jno
es
xor
in
and
mov
xchg
lcall
lret
test
arpl
xchg
inc
aam
and
cltd
jbe
adc
dec
xor
or
or
lcall
and
push
add
cld
fcmovnb
push
mov
adc
outsb
addr16
fs
scas
add
fcomps
call
push
jo
sub
xor
dec
xor
shrb
les
xor
icebp
xor
hlt
mov
xchg
dec
les
lds
rorl
adc
in
inc
shll
ficoml
cltd
cmp
or
xlat
mov
adc
lret
xor
inc
insb
mov
adc
mov
dec
fwait
in
stos
in
pushf
adc
xchg
xchg
js
leave
and
dec
fs
inc
cmpsb
dec
xor
cmp
pop
mov
int3
mov
lods
cmp
sbb
mov
mov
nop
sub
loopne
sbb
or
mov
and
test
cld
add
xlat
push
in
inc
pop
jo
push
movsb
stos
dec
xor
cmp
sbbb
je
lds
addb
push
sbb
adc
xlat
push
lds
pop
dec
in
pop
pop
pop
loopne
push
add
pop
dec
test
or
push
mov
adc
call
nop
dec
je
mov
mov
test
fldt
mov
adc
sub
and
xor
orb
fcom
add
xor
movsl
adc
fadds
int3
adc
mov
aam
int3
es
xor
clc
mov
add
sbb
lods
cltd
aam
sbb
rorb
and
pusha
mov
fcomps
scas
test
jb
fsts
mov
subb
stos
pop
ret
xor
pop
or
push
cmpl
fisttps
cltd
mov
in
mov
add
push
sub
lods
cmpsl
mov
sbb
icebp
nop
in
faddl
push
xchg
sub
xlat
test
lock
xchg
cmp
lock
scas
notb
mov
in
jb
inc
lock
decb
loop
mov
mov
xchg
mov
sub
lcall
inc
adc
pop
nop
mov
fcompl
dec
or
cld
and
in
test
shrl
call
lock
pop
enter
aam
pop
or
push
inc
pop
int3
xor
dec
push
aaa
adc
mov
insb
mov
jne
xor
jne
ds
push
xchg
stc
jmp
mov
mov
inc
test
roll
enter
fistl
xchg
xor
rorl
sbb
enter
dec
xor
scas
movsl
adc
push
fs
imul
jo
mov
pop
pusha
stos
ss
adc
cmpsb
mov
dec
pop
scas
lods
and
pusha
dec
cltd
addb
shrb
in
add
inc
inc
and
inc
insl
pusha
sbb
rorl
sbb
cmpl
fiaddl
js
stc
or
fsubl
jo
add
loopne
aaa
push
xor
pop
leave
ret
xchg
xchg
lahf
mov
pop
jb
nop
adc
jno
nop
cld
movsl
pop
outsb
lret
sbb
sarb
dec
repnz
xchg
push
add
push
orb
push
dec
jo
call
mov
pop
xchg
aam
mov
and
add
add
sti
mov
call
add
jnp
mov
pusha
or
sti
lods
jb
test
hlt
push
enter
or
shll
add
sub
das
sbb
or
sahf
insl
loope
or
loopne
cmp
mov
add
push
and
iret
shlb
into
push
sarb
pop
xchg
xor
and
gs
add
pop
adc
xor
fs
push
insb
or
scas
stc
xor
lods
out
adc
pop
sbb
mov
mov
testb
or
sarl
and
fcomp
cli
adc
add
pop
cmp
jmp
push
and
mov
push
xchg
les
ds
outsb
mov
push
clc
cs
decl
mov
mov
ljmp
add
fistpl
or
jnp
mov
add
add
pop
and
xadd
inc
xchg
sub
rcll
mov
mov
jns
mov
pop
movsb
mov
or
enter
jns
out
sub
sbb
or
ja
aam
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
add
dec
push
cmp
bound
gs
imul
jo
jb
je
jbe
decl
jp
xor
xor
sub
daa
adc
mov
rcll
xchg
mov
lcall
or
outsl
cmp
adc
push
lahf
out
or
rcl
pop
cmp
repz
repnz
imul
je
jb
outsl
arpl
fs
out
sbb
push
dec
imul
int3
aaa
jne
push
xchg
jb
gs
xor
cs
adc
popa
and
popa
xchg
divb
outsb
push
test
shrl
pop
lock
push
jnp
popa
rdpmc
add
pushl
sub
aaa
mov
mov
inc
outsl
jb
js
je
jb
gs
cmp
or
outsl
add
cld
in
add
add
add
add
je
push
add
popa
mov
popa
jb
mov
popf
jbe
push
outsb
dec
xor
xor
mov
insl
insl
cmp
in
jne
and
adc
add
das
das
pop
lock
push
inc
inc
gs
insl
bound
jbe
and
dec
outsl
jbe
dec
arpl
ja
push
jo
sub
addr16
dec
jne
xchg
mov
inc
jo
imul
jb
push
inc
insb
jae
mov
scas
cmpsl
xchg
into
cmp
pushf
xchg
xchg
addr16
fcompl
inc
push
jne
xor
or
and
daa
push
scas
clc
in
cmpsl
cwtl
mov
dec
js
push
jne
cmp
pushf
mov
ja
pop
dec
inc
push
rcrl
das
jo
or
cmp
mov
mov
test
mulb
add
sbb
data16
jno
fimull
add
ret
and
jmp
sub
sub
sub
cs
movsl
cmp
cmp
ds
inc
push
jo
das
pop
pop
hlt
pusha
insb
rcrl
jge
jg
cmp
inc
fmuls
pushf
lcall
add
out
mov
inc
adc
xchg
negb
inc
insb
jae
cs
scas
jmp
mov
inc
jae
shr
mov
xor
lds
jnp
insl
and
jb
jbe
dec
push
push
sbb
xchg
jl
or
dec
dec
inc
fimuls
inc
insl
xchg
lcall
add
inc
outsb
dec
jg
push
push
jo
imul
insl
pop
inc
inc
mov
je
jo
xchg
sub
jnp
idivb
and
orl
mov
je
or
xorb
inc
popa
int3
mov
iret
and
daa
mov
jne
pop
out
fcmovb
in
xor
and
insl
push
xchg
inc
cs
xor
js
or
dec
rolb
andb
les
out
mov
add
xchg
and
push
rcr
push
or
imul
xor
pop
es
add
mov
je
add
dec
in
ds
leave
sbb
push
loopne
outsl
mov
push
push
or
andl
dec
sbbb
inc
and
das
arpl
cmp
arpl
dec
popa
sub
mov
sti
into
pop
xor
add
inc
xchg
insb
sbb
addl
or
or
push
lcall
mov
or
pop
xor
jo
cmpsl
cmp
push
push
fistps
dec
rcl
push
popf
and
xor
in
fs
xor
hlt
pop
cltd
and
or
add
ror
dec
aaa
ja
adc
insl
push
outsl
outsl
ss
bnd
fs
sub
inc
inc
xchg
in
or
sahf
push
mov
shl
add
das
mov
mov
cwtl
mov
imul
push
or
arpl
cmpsl
mov
cmp
fildll
aaa
xchg
in
jno
in
ljmp
imul
push
pop
scas
loopne
outsb
popa
pop
or
inc
sbb
rclb
add
push
leave
nop
inc
insl
imul
call
push
cmp
in
adc
pusha
xchg
cmp
jmp
push
and
pop
push
cmp
sub
jne
jae
scas
into
push
cmp
pushw
pusha
jo
aaa
addb
sub
call
rolb
data16
lret
inc
sub
pop
jns
add
dec
jmp
mov
lods
jo
and
cmp
cwtl
imul
out
inc
inc
and
dec
in
jbe
cmp
and
jg
lcall
cmp
mov
loopne
add
imul
ljmp
lret
jno
lahf
jg
icebp
pusha
inc
mov
clc
ret
movsl
add
xorl
jae
jae
push
loop
sahf
and
mov
cmpsb
gs
cmp
dec
add
xor
lret
out
sub
js
jae
fdiv
sahf
imul
pop
add
add
jecxz
mov
jne
sub
pop
movsl
cmp
add
add
adc
xlat
sub
fwait
add
add
add
add
repnz
jmp
cmp
pop
or
aaa
ds
push
pop
hlt
and
mov
pusha
push
js
or
sub
in
out
int3
add
sbb
addb
jnp
test
push
xchg
test
add
mov
mov
daa
push
cmpb
push
fnstcw
mov
and
sub
jb
int3
push
lods
lods
pop
into
jo
add
jo
mov
xlat
push
stos
fwait
push
inc
inc
int3
js
jo
jmp
in
jge
rorb
sbb
in
lea
mov
nop
xchg
xchg
fiadds
clc
es
loope
pop
push
inc
or
or
test
sahf
pop
pop
pop
add
dec
cmp
adc
cs
cmp
test
pop
data16
test
je
nop
mov
pop
mov
repnz
xlat
dec
push
pop
rolb
xchg
sub
xchg
sbb
pop
dec
add
test
xchg
sbb
adc
pop
adc
add
add
add
adc
fildl
fiaddl
add
ja
or
mov
je
adc
aaa
add
test
mov
pop
rcrl
sub
out
and
add
jg
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
rol
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
dec
mov
inc
add
rorb
push
adc
cs
sarl
add
nop
pushl
fists
outsl
ja
aas
das
cwtl
movsb
inc
cs
jae
jb
bound
sbb
stos
inc
data16
lea
arpl
mov
jne
daa
pop
lea
dec
mov
outsl
js
push
fisubs
push
inc
push
mov
inc
cmp
xchg
sahf
insb
gs
mov
dec
push
test
daa
add
insb
in
dec
imul
mov
imul
ds
and
inc
jb
jns
daa
addl
jb
lds
push
jns
mov
jne
push
sbb
lcall
stos
or
cmp
outsb
pushw
push
inc
sub
mov
xor
mov
push
pusha
testb
fiadds
push
push
lahf
imul
fisubl
lea
clc
pop
lcall
lock
adc
pusha
gs
mov
es
sub
aad
dec
lahf
faddl
sub
cwtl
xchg
pop
pop
push
push
jae
loopne
mov
cmp
cmp
sbb
jae
addr16
orl
imull
outsb
gs
mov
bound
rolb
fstpl
push
push
push
dec
testl
dec
loope
push
mov
push
in
cmp
mov
adc
mov
mov
sub
ret
imul
mov
cwtl
push
inc
adc
nop
lods
sbb
jg
xchg
push
fadd
mov
jg
sub
push
or
mov
je
outsl
xchg
daa
xchg
mov
popw
lcall
jl
cmp
cmp
cmpsl
jnp
notl
das
push
sub
insb
mov
push
jle
sub
sub
xchg
dec
sub
sub
push
cmp
pop
push
inc
jmp
cmp
and
add
in
out
inc
dec
pop
pop
cwtl
jb
sbb
sbb
jb
imul
loope
mov
push
jbe
out
cltd
lods
sbb
and
jae
cltd
adc
sub
and
jl
lahf
sub
or
daa
cld
push
hlt
push
call
repz
mov
mov
cwtl
cmp
sti
push
aam
lret
mov
nop
dec
mov
test
cmpsl
stc
addb
js
jo
xor
out
pusha
clc
or
scas
sarb
int
dec
nop
or
out
adc
mov
das
push
lock
dec
dec
push
xchg
jl
inc
inc
aam
int3
je
sahf
out
push
cmp
sub
test
cmp
and
sbb
adc
sahf
inc
test
add
push
push
in
sahf
out
int3
shrb
dec
sub
or
incb
test
sahf
out
mov
xor
repz
out
sbb
std
in
loopne
repz
shlb
out
ds
aam
mov
push
out
xor
cmpsl
pop
test
test
lcall
bound
outsb
push
xor
test
ljmp
inc
mov
push
jae
xchg
jb
insb
fs
sbb
je
cmp
cmp
or
movsl
std
sub
shrd
sub
add
sub
push
clc
sarb
insb
cmp
inc
inc
dec
jae
cltd
lods
insb
push
insb
inc
mov
sbb
xchg
jnp
push
inc
dec
xor
inc
dec
dec
dec
push
push
gs
outsl
loop
and
inc
dec
add
dec
dec
inc
add
fists
adc
sub
adc
out
incl
popa
into
mov
mov
adc
outsb
mov
ds
cld
cmpl
pop
push
pop
clc
lret
sbb
in
jg
jb
xchg
jge
arpl
cmp
adc
dec
scas
jp
fcomip
das
jno
in
fstl
mov
and
xchg
out
xchg
cmp
dec
imul
lret
add
inc
xor
mov
mov
sub
fwait
ss
sbb
mov
jns
ds
xor
incb
int3
dec
dec
xor
jns
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
lcall
pop
and
xchg
lret
sahf
icebp
mov
cld
or
loopne
loopne
cmp
jle
inc
mov
xchg
push
pop
popa
push
or
scas
int
mov
jne
out
pop
leave
loop
mov
xchg
dec
mov
lods
psraw
and
push
xor
out
addr16
adc
mov
pop
and
es
subl
std
flds
sbb
push
mov
outsb
jbe
rolb
inc
xchg
add
mov
clc
cmp
jbe
inc
testb
iret
repz
push
je
dec
push
dec
push
cs
push
into
mov
xor
inc
push
sbb
and
inc
cmp
pop
adc
incl
pop
push
and
cmp
es
cmp
or
or
inc
sbb
push
ss
dec
and
out
pop
sti
sub
inc
xor
dec
dec
inc
or
jno
int
outsl
mov
sbb
inc
and
add
and
mov
pop
and
or
sbb
dec
xor
out
push
adc
ds
adc
in
insl
aaa
ret
xor
add
sbb
fucomi
fbstp
sbb
inc
xor
push
adc
sbb
dec
push
cmp
sbb
mov
adc
das
dec
xor
sbb
sub
pop
ds
push
out
out
sti
pop
adc
or
push
sub
sub
xor
pushl
ds
and
ds
sub
xor
add
push
jge
adc
xchg
jge
insl
dec
pop
daa
push
adc
pop
aad
dec
repnz
inc
cmp
xor
sbb
cmp
mov
je
loopne
xor
pop
inc
pop
push
inc
aaa
dec
test
cmp
xor
add
daa
data16
xor
sbb
sbb
add
aaa
fisubrl
add
pop
xor
fucom
pusha
imul
push
aaa
sub
subl
and
jle
jo
jg
xor
inc
xor
and
mov
inc
xor
push
cmp
or
sub
push
sub
jb
sbb
jae
add
jb
mov
ljmp
inc
adc
sub
das
pop
adc
das
add
and
stos
sub
inc
das
adc
clc
push
adc
adc
pusha
daa
dec
adc
out
xor
outsl
idiv
xchg
xchg
and
popf
adc
or
adc
dec
nop
dec
cwtl
in
jmp
std
in
cmp
imul
rolb
jne
jg
dec
repz
sub
lea
repz
repz
lahf
daa
mov
out
out
scas
loope
jg
push
fsubr
cli
lahf
out
jl
sub
loop
lock
subb
xor
and
addl
adc
mov
mov
adc
xor
jge
outsl
pushw
ss
popa
push
and
pop
popl
outsb
repnz
xor
pop
or
push
popa
xchg
fildl
cwtl
imul
bound
push
mov
cvttps2pi
out
fcmovnbe
cmp
movaps
jns
ja
sahf
mov
fdiv
cmp
aas
push
lahf
idivl
push
jno
lods
fisubs
fwait
iret
repz
xchg
les
sub
stc
xor
pop
sub
or
cmp
jl
loopne
or
les
cmp
mov
daa
sbb
lods
fisubs
cmp
push
cmp
pop
adc
adc
js
xor
fistpll
sub
inc
adc
sbb
stos
mov
sbb
and
add
sahf
add
jmp
pop
int
xor
sbb
mov
cmpsb
lcall
push
int
jmp
dec
ss
outsb
cmp
imul
adc
pop
adc
lods
push
pushf
into
jo
inc
inc
and
dec
daa
and
xlat
lods
out
frstor
sub
and
daa
adc
push
and
addb
adc
in
pop
dec
lar
sub
shl
out
pusha
adc
pop
movsl
and
imul
ja
ja
fsts
sub
mov
or
xor
adc
sbb
out
push
inc
adc
adc
mov
adc
mull
hlt
xchg
push
outsb
scas
pop
dec
pop
push
add
adc
cmp
cmp
or
frstor
adc
cwtl
and
push
sahf
push
sub
dec
jns
fldcw
inc
or
dec
sub
ret
inc
add
xor
push
cmp
mov
daa
or
cmp
out
cld
adc
cmp
fcomps
jbe
fsubrl
adc
and
cmp
or
aaa
and
outsb
mov
mov
sub
cmp
add
fwait
imull
cmp
imul
pop
data16
or
mov
cmp
adc
pop
add
and
popa
mov
pop
and
sbb
add
mov
mull
or
imul
and
pusha
pop
mov
jnp
or
aaa
adc
je
mov
daa
adc
in
into
aaa
daa
push
push
and
lock
jle
cmp
mov
or
sub
into
inc
inc
rorb
sbb
and
mov
sbb
cli
cmp
mov
jmp
sbb
push
pop
pop
divl
sbb
loop
adc
push
js
and
adc
add
and
jle
movsb
jo
mov
dec
push
cmpl
sbb
fwait
adc
sarl
mov
inc
and
sub
push
es
or
in
jbe
jge
adcb
lcall
dec
rcll
mov
mov
xor
adc
push
push
xorl
sbb
in
mov
mulb
inc
daa
sbbl
pop
push
shlb
push
xor
mov
push
daa
or
insl
xlat
subb
fisttps
das
push
cmp
into
das
mov
mov
fsts
ja
sub
xchg
xor
dec
lods
xor
pop
int
shrl
pop
adc
push
ds
inc
jg
pop
and
and
inc
and
push
push
sbb
adc
addr16
shll
loopne
cmp
mov
insb
inc
sub
add
xchg
insb
js
sub
sahf
push
ja,pt
and
scas
push
xor
jae
insl
popa
imul
xor
push
push
mov
mov
jo
outsb
data16
push
ja
mov
cmp
dec
adc
jns
push
adc
cmp
out
sahf
add
xor
mov
divb
ja
mov
jo
sbb
cmp
subl
and
add
add
mov
pop
je
xchg
mov
or
frstor
pop
sub
adc
mov
test
popa
push
aaa
adc
and
cmp
xor
adc
rcll
outsb
jno
sbb
in
cs
aas
cmp
pop
loope
comiss
fs
sub
push
pop
pop
lock
and
mov
cmc
jb
pop
ds
push
jge
cmp
out
out
push
xor
xchg
cli
pop
pop
push
xor
mov
loope
or
push
mov
ret
push
xor
out
dec
add
push
lea
cs
imull
and
outsb
test
es
aaa
xor
add
push
sub
mov
aaa
sbb
and
daa
mov
sbb
aaa
pop
pop
mov
insb
pusha
aaa
cmp
out
mov
daa
push
mov
fcmovnb
and
sti
add
push
dec
les
loop
mov
sahf
gs
push
jo
push
cld
idivl
imul
mov
dec
push
push
push
das
xor
xor
dec
cmp
jae
cs
loop
stc
pop
sbb
or
mov
inc
das
fstl
xlat
in
js
inc
addr16
sub
and
dec
data16
and
cmp
xor
je
jbe
fs
fdivl
push
rol
arpl
dec
mov
ret
fldl2t
inc
add
gs
notl
xchg
lods
jge
subb
ss
mov
pop
pop
cmp
wrmsr
push
pop
inc
js
addb
mov
mov
sub
pop
adc
sub
adc
xor
add
sub
cmpsl
ja
shll
xchg
aas
push
adc
and
or
adc
sbb
add
jp
cmp
add
pop
or
adc
or
bound
daa
jle
pop
add
dec
sbb
js
xor
insl
test
mov
sbb
push
sbb
ret
mov
push
sbb
inc
movl
sbb
and
mov
ror
cmp
cwtl
and
inc
inc
inc
push
xor
push
dec
push
dec
pop
pop
or
rcrl
push
add
ljmp
jmp
mov
mov
add
xor
push
inc
push
sub
mov
cmpb
incb
ret
or
add
and
pop
and
adc
cli
sbb
loope
jbe
out
es
dec
and
push
stos
adc
fimuls
loope
and
dec
xlat
xor
pop
adc
test
mov
inc
or
and
loopne
das
add
push
das
aam
dec
test
xchg
gs
mov
daa
xor
xor
aam
mov
pop
pop
or
add
pop
push
pop
sbb
aam
roll
or
mov
ficoms
or
out
jl
arpl
jecxz
xor
repz
daa
mov
jo
notl
xor
xchg
pusha
loop
inc
push
xor
sarl
inc
cmp
aaa
or
call
sub
or
adc
and
roll
movsb
pop
mov
repz
dec
outsb
mov
add
subb
dec
adc
aaa
cltd
cmp
sub
daa
and
into
sub
mov
loop
xchg
sbb
lock
adc
popa
or
cmpsb
rolb
loopne
inc
cmp
jbe
jl
adc
cmp
cmp
xchg
push
and
xchg
jmpw
push
xor
out
popf
loope
cmpsl
mov
dec
mov
ljmp
push
mov
in
and
mov
add
push
and
lea
push
fwait
dec
sub
push
mov
mov
mov
mov
sub
push
int3
mov
xor
pop
scas
mov
loopne
cmp
pop
cmp
shlb
mov
adc
pop
inc
cs
out
sbbl
test
or
or
lods
andl
sub
ret
gs
cmp
xorb
shrb
and
xor
andb
cmpsb
adc
insb
enter
cmp
ret
dec
mov
add
or
movsl
incb
and
push
mov
inc
mov
lcall
pushl
sub
push
xor
push
inc
sub
add
sub
inc
add
mov
push
xor
add
push
add
xor
pop
xlat
or
inc
cmp
or
inc
inc
cmp
sub
or
loop
loope
and
fs
jae
xor
dec
lea
sbb
cmp
sahf
adc
dec
add
or
in
mov
or
add
push
push
pop
decl
adc
pop
push
mov
scas
jae
aaa
push
cmpsl
hlt
cmpsb
fs
ret
cwtl
xchg
xor
xlat
mov
sbb
and
movb
sbb
loopne
xor
loopne
add
daa
cmp
inc
jle
or
sub
push
addr16
cmpsb
fsave
push
pop
or
xor
or
or
adc
pop
out
xor
adc
mov
arpl
imul
pop
adc
rcll
fwait
jbe
and
subl
out
cwtl
hlt
or
xor
inc
or
or
les
push
hlt
mov
adc
mov
mov
scas
sub
or
cmp
sbbl
std
and
fidivrs
xor
and
xor
adc
in
adc
nop
inc
icebp
dec
pusha
dec
cltd
adc
dec
dec
cmp
sbb
cs
imul
pop
in
jo
fnsave
in
loope
sbb
fdivp
scas
lea
adc
mov
das
sbb
insl
xor
stos
mov
popa
mov
xchg
movsl
adc
aaa
adc
insl
sbb
push
sbb
dec
int3
and
andl
hlt
inc
imul
xor
and
scas
jmp
dec
insl
rorl
imul
adc
cmp
mov
xor
mov
dec
xchg
les
pop
push
fisttps
cmp
cmp
adc
sub
xor
test
push
pop
xor
adc
inc
adc
aas
sub
and
pop
mov
jnp
mov
arpl
adc
dec
cmp
daa
loopne
adc
inc
imul
inc
cmp
xchg
es
sbb
adc
mov
add
cltd
loope
popf
dec
sbb
mov
arpl
inc
pop
adc
push
aaa
and
mov
dec
inc
push
gs
ret
pop
push
sbb
clc
dec
adc
and
push
das
sub
push
aam
jg
dec
sub
dec
push
and
dec
aas
nop
push
flds
aaa
into
adc
push
jbe
sub
loope
ja
ljmp
cmp
sub
insb
lock
aas
ljmp
fs
imul
pop
lcall
shrl
mov
movl
in
movsb
daa
or
and
imul
add
push
sarb
stc
xchg
fwait
dec
mov
push
ret
sub
add
out
outsl
mov
pop
mov
out
sti
lahf
out
int
pop
jae
push
mov
fldcw
pusha
outsl
arpl
popa
and
fs
shlb
imul
pop
add
mov
dec
dec
test
getsec
lcall
ret
and
mov
mov
pop
sbb
ljmp
jmp
adc
mov
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
sti
je
adc
cli
mov
sub
sub
jg
sbb
mov
sbb
mov
ds
pop
sbb
mov
or
xor
mov
dec
fsubs
mov
pop
sbb
mov
pop
dec
sarl
pop
shl
dec
push
add
pop
and
mov
pop
push
inc
cltd
jg
xor
aaa
aaa
xor
sub
les
hlt
rclb
push
or
inc
jb
out
mov
mov
push
dec
imul
leave
leave
dec
xchg
test
je
xchg
out
sub
jns
mov
xor
xor
cmp
add
hlt
and
in
and
mov
mov
je
inc
js
cmp
xchg
push
aaa
int
push
dec
push
dec
pop
aam
fimull
rorb
pop
repz
fstpl
les
inc
cmp
jg
jg
xor
inc
sub
sub
xor
inc
xor
inc
pop
add
xchg
jo
inc
xor
push
cmp
xchg
adc
add
mov
in
les
js
js
xchg
adc
jne
sbb
lcall
jbe
push
jb
test
adc
jo
inc
bound
jne
cmp
popa
outsb
mov
sub
xorl
pop
adc
sub
jg
rclb
pop
pop
xlat
mov
or
push
das
push
push
das
and
lock
sub
out
inc
and
add
mov
sbb
jnp
outsl
sbb
repnz
add
sbb
iret
lret
sbb
or
xchg
push
or
mov
nop
xor
sub
adc
or
inc
or
int3
add
adc
shll
jb
testb
adc
and
dec
xor
iret
cmp
adc
push
sbb
movsl
sbb
daa
cmpb
jb
xlat
ret
push
loope
nop
adc
dec
repz
xor
push
push
jmp
xor
ret
inc
mov
je
sub
mov
cs
fdivr
lcall
clc
lods
movsb
xlat
xlat
stc
mov
mov
fadds
jnp
notl
fxch
mov
xchg
xlat
pop
adc
push
icebp
fcmovnu
cmpsl
adc
jns
add
out
sbb
mov
aam
pop
jl
fsubrp
jns
inc
mov
and
sub
int
test
and
test
add
cmpsl
inc
adc
mov
les
jl
cmp
pop
cs
ds
fimuls
iret
mov
sysenter
jp
imul
es
imul
fldcw
int3
cmpsl
xlat
insb
das
nop
repz
pusha
dec
push
push
xor
arpl
xor
cmpsb
imul
mov
adc
mov
int3
mov
insb
push
jl
test
jl
adc
fmull
xchg
pop
icebp
cmp
pop
or
ds
xlat
insb
cmpsl
cmpsl
out
xchg
incl
cmp
negb
cmp
xchg
xchg
aaa
out
cmp
mov
mov
cmc
ss
jge
jnp
ds
cltd
outsl
pop
imul
out
ficomps
push
sahf
int
loope
ss
clc
leave
fwait
xor
jnp
mov
mulb
push
mov
push
jle
pushf
push
fbstp
sahf
out
push
mov
aam
fdivl
sahf
idivl
jg
daa
pushf
fidivrs
sti
pop
fcmovb
push
ja
ss
pop
jge
insl
repz
sti
push
pop
mov
xchg
fbstp
loop
into
pushf
pop
rcrl
cmp
divl
movsb
out
mov
cmp
outsb
int
ds
lods
fisubrs
lea
push
mov
push
aas
sbb
int
fwait
push
adc
jge,pn
nop
fidivrs
cmpsl
xchg
stos
roll
xchg
movb
jnp
out
test
repz
sbb
push
je
xchg
lret
repz
cmpsl
stc
cmp
sbb
sahf
out
mov
mov
jg
aas
jecxz
adc
jg
aad
pop
dec
sbb
scas
adc
mov
sub
adc
and
and
rcrb
push
push
mov
xor
adc
inc
pop
xlat
add
mov
and
push
mov
mov
mov
adc
inc
and
pop
sbb
enter
pop
enter
inc
repnz
iret
pusha
or
and
push
test
cmp
push
fimull
dec
or
loop
outsl
pop
inc
in
lcall
push
push
jae
or
aas
inc
out
pop
jno
add
fbld
mov
or
inc
imul
cmp
sbb
dec
fisubl
xorl
push
repnz
roll
add
dec
push
jbe
cmp
push
ljmp
cmpsb
dec
add
push
pop
lods
fstl
cmpsb
push
insb
pop
push
mov
aam
dec
pop
je
jns
sbb
ffree
push
fisttps
jp
das
push
mov
jns
ret
outsb
cmp
jnp
pop
jbe
iret
push
pop
sbb
sub
dec
adc
pop
aaa
or
dec
mov
ja
dec
clc
push
lods
push
push
cwtl
push
xor
inc
jae
add
adc
xchg
push
ds
xchg
jo
push
das
pop
popa
insl
jo
leave
mov
insb
je
push
addr16
stc
sti
popa
jo
jae
es
outsl
inc
ja
fnstcw
adc
and
pop
fnsave
lods
push
or
pop
repz
cmp
xor
xor
xor
cmp
cmp
push
xor
xor
push
add
pop
push
xor
cmp
sub
lea
not
push
das
aas
xor
add
cltd
mov
add
loopne
rolb
adc
jl
scas
and
sub
enter
jbe
jns
adc
push
daa
inc
sbb
dec
or
mov
iret
inc
cmp
pop
lock
mov
fnsave
push
adc
adc
fucomp
data16
inc
testb
cwtl
aaa
or
jge
or
cmpsl
or
lods
pop
rolb
fcmovb
add
imul
adc
xor
int
adc
popf
repnz
mov
imul
daa
adc
daa
inc
sbb
and
sbb
aaa
cmp
fiadds
jnp
push
adc
inc
push
add
xorl
xor
push
cld
xchg
sbb
cs
jns
mov
pop
pop
sub
and
mov
cmpb
mov
and
dec
or
xchg
sbb
das
sub
mov
xor
xor
daa
adc
fidivs
daa
or
xchg
and
test
inc
push
cmp
mov
ds
hlt
pop
adc
mov
les
sub
in
sbbl
das
fnsave
adc
dec
test
das
arpl
lahf
adc
inc
jbe
lods
in
movsl
in
daa
sub
mov
bound
stos
inc
dec
pop
in
dec
jge
daa
sub
xchg
loopne
pop
jge
das
push
push
jnp
das
inc
mov
insl
shll
jbe
xchg
les
aam
push
loope
ret
daa
lods
sbb
pop
push
lea
pop
push
mov
das
dec
mov
clc
and
mov
or
mov
dec
dec
repnz
pop
dec
or
mov
imul
and
das
mov
js
inc
pop
sub
cltd
daa
fsubrl
js
lahf
pop
xchg
outsb
andl
jnp
pop
loopnew
lods
inc
addr16
jg
cmp
push
xor
test
mov
fmuls
mov
mov
pop
mov
pop
imul
aaa
outsl
lret
inc
sbb
cmp
mov
sbb
dec
outsb
or
and
xchg
test
js
jl
push
sub
jl
and
ja
cmc
sbb
mov
xor
push
fbld
sbb
sbb
ja
out
dec
js
push
sub
adc
call
clc
jno
xchg
sbb
dec
add
cmp
stc
daa
dec
aam
orb
shrl
sub
mov
es
jae
and
dec
mov
jns
cmp
sub
xchg
dec
add
inc
xor
xadd
sbb
loopne
js
adc
push
sbb
adc
adc
adc
or
adc
repz
push
fadds
cmp
iret
adc
ja
push
and
pop
shlb
mov
or
sbb
aam
sbb
mov
je
pop
cwtl
das
inc
adc
adc
shrb
cld
call
outsl
adc
cmp
and
jge
clc
sbb
pop
push
sbb
dec
sbb
inc
es
ljmp
sbbb
xor
xor
or
cmp
adc
inc
xor
mov
out
sbb
dec
sub
inc
cld
adc
fwait
or
cltd
loopne
insb
aas
mov
movsl
mov
lods
fidivrl
mov
insl
pop
push
cmp
repnz
or
push
fldl
and
push
pop
push
cmpsb
cmpsb
out
sahf
push
or
push
movsb
sbb
enter
push
ds
push
int3
or
mov
add
cmp
out
or
outsb
or
imul
sbb
adc
jb
sbbb
xchg
fs
cltd
mov
push
mov
popa
shlb
adc
clc
lods
pop
dec
or
fstpt
dec
rorb
or
and
fcmovnb
cmp
scas
mov
adc
sbb
add
pop
jmp
adc
mov
or
mov
and
cmp
mov
add
pushf
inc
or
lret
popa
xor
sbb
test
pop
fimull
or
sbb
loope
ds
or
aas
jno
les
jb
adc
jno
push
pop
ja
ja
hlt
add
call
sahf
dec
mov
sbb
insl
cmpsl
pushl
dec
pop
ljmp
in
mov
add
fisubrl
imul
xor
adc
fsubl
ja
sub
adc
pop
out
sahf
out
and
out
sahf
push
andl
lahf
out
xor
cltd
or
xchg
ss
add
add
or
mov
add
mov
adc
jns
and
sub
xor
mov
mov
cmp
lret
mov
popa
xchg
mov
insb
ss
sub
add
int
das
or
adc
int
mov
pop
add
add
insb
ss
push
dec
str
int
mov
add
inc
stc
das
incl
inc
cld
inc
mov
cmpsl
arpl
push
shl
jg
pop
pop
cs
and
fimuls
sbb
enter
pop
loopne
sub
sub
scas
inc
xor
daa
sbb
jge
push
test
ret
jmp
insb
jbe
fs
insb
lock
loopne
xor
xor
pop
pop
pop
inc
sbb
or
imull
push
or
test
aaa
add
pop
ljmp
sub
das
push
sub
adc
and
pusha
sbb
decl
pop
xor
sbb
movups
xor
dec
or
adc
adc
dec
pop
cmp
sbb
loopne
call
and
dec
sbb
inc
push
and
sub
sub
ss
xor
xor
pop
hlt
inc
dec
or
sub
std
incl
pop
or
sbb
or
or
pop
jg
std
mov
push
and
add
sbb
daa
pop
xor
dec
inc
inc
cmp
inc
or
pop
sbb
and
and
adc
pop
sidtl
jmp
jmp
dec
cmp
ss
dec
sbb
adc
sub
loope,pn
adc
ror
xorb
xchg
cmp
xor
add
test
push
mov
rorl
pop
push
movsl
pop
pop
mov
inc
mov
or
sub
dec
pop
imul
mov
gs
mov
cmc
push
push
jge
inc
cld
mov
push
add
bound
pop
pop
iret
push
mov
clc
out
dec
inc
dec
pop
inc
rorb
xor
pop
and
stos
pop
pop
inc
loop
inc
leave
xchg
push
push
dec
int
xchg
xchg
clc
push
outsl
inc
inc
int
adc
aas
mov
adc
das
orl
fadds
mov
lret
push
dec
adc
shlb
sbbb
jne
in
push
push
fs
push
push
cmp
inc
push
dec
inc
dec
push
dec
or
mov
mov
xchg
inc
sub
out
pop
cwtl
das
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
call
pop
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
andb
pushl
rol
fwait
in
inc
mov
bswap
mov
jmp
dec
fsubrl
fimull
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
jmp
sub
and
cs
insl
sub
adc
or
or
cs
ret
incl
call
sbb
mov
call
cltd
test
pushl
push
push
shll
ja
daa
mov
mov
movsb
sbb
mov
fmuls
lret
rep
cs
arpl
test
add
decl
insb
push
movsb
mull
jno
addr16
push
scas
addr16
cmp
dec
xor
jmp
mov
fwait
stos
flds
pop
ljmp
cmp
cmp
sub
inc
arpl
pop
dec
and
jae
pop
insl
daa
imul
or
decl
je
sub
push
jns
imul
incl
push
das
fs
dec
addr16
and
cs
and
and
outsl
aas
jge
inc
ds
push
gs
pop
hlt
call
and
pop
js
jnp
sub
loop
jbe
out
movb
pop
mov
pop
das
and
sub
adc
sub
ret
orl
inc
jmp
add
and
jae
add
aaa
pop
nop
dec
int
push
xchg
outsb
in
xchg
aaa
pop
and
daa
push
arpl
xor
push
das
dec
cs
hlt
fnstcw
sbb
or
and
wrmsr
inc
sub
out
mov
ds
aaa
push
xor
inc
add
mov
push
xor
push
inc
add
inc
add
inc
andb
fs
das
aaa
inc
push
inc
jbe,pn
mov
pop
ucomiss
ss
cmpsl
imul
and
outsb
adc
call
orb
add
or
fs
push
and
test
dec
sbbb
cmp
popl
divb
scas
bound
or
inc
and
testl
fmull
arpl
xchg
push
shr
lcall
inc
es
jbe
cmp
mov
fs
sbb
sbbb
mov
popa
or
adc
push
push
aam
cmp
pop
and
das
orb
rorl
loopne
aad
sbb
or
xor
xchg
jne
add
or
cld
jbe
or
push
mov
daa
adc
sbb
mov
sahf
sbb
addr16
sbb
stos
fadds
fucom
sub
push
es
sub
cmp
adc
mov
cmp
das
sub
push
adc
cmp
sbb
push
gs
jge
inc
push
andb
lahf
cmp
rorl
rorb
dec
orb
adc
push
xchg
add
popf
xchg
call
or
adc
sbb
jp
pop
imul
cmp
cmp
inc
jbe
jmp
push
adc
shll
icebp
sub
pop
add
ret
pusha
add
sahf
sub
mov
cmp
test
lds
push
adc
test
push
or
or
fstps
je
xor
mov
js
xor
jae
popa
insl
lods
jo
into
cmp
je
cmp
or
push
and
sub
into
inc
aad
mov
sub
loop
add
sbb
aad
sbb
jmp
fimull
outsl
insb
push
popa
fiadds
inc
inc
dec
and
pop
adc
sti
lock
wrmsr
ss
and
dec
cmp
xchg
pop
push
gs
pop
xchg
scas
mov
cmp
xchg
xchg
jbe
or
and
pusha
fadds
pop
push
add
lret
xchg
push
adc
push
int
pop
inc
cmp
add
scas
test
pop
pop
fs
fs
push
jae
incl
cmp
es
dec
inc
stos
cmp
sub
and
cmp
pushf
arpl
xchg
push
pop
adc
ds
xor
inc
xchg
dec
mov
ret
movsl
sbb
insb
das
data16
sub
fadd
and
dec
sub
inc
xor
push
add
test
sbb
dec
popa
dec
sbb
add
add
ja
jb
pop
repz
adcl
pop
inc
jne
jp
int
push
pop
xor
rolb
movsl
xor
adc
lods
push
pop
jmp
mov
test
jg
and
sahf
rcl
test
and
pop
and
push
ss
sbb
push
call
push
call
mov
pop
test
aaa
daa
lahf
pop
xor
hlt
fs
jo
or
test
jo
or
imul
push
and
adc
jg
movsl
pop
inc
push
lgs
or
cmp
push
aas
mov
sbb
sub
add
pop
popa
mov
mov
loop
pop
js,pt
sbb
cs
lods
sbb
sub
and
xchg
push
and
fiaddl
lcall
cmpsl
push
stos
mov
das
lods
xor
loop
std
inc
dec
in
aam
inc
sbb
rcrb
and
dec
mov
ja
movsb
push
lcall
pop
std
push
testl
cmp
test
in
insb
imul
dec
and
pop
mov
add
sbb
jg
pop
jnp
xchg
pop
pop
add
push
mov
mov
addl
pop
dec
pop
mov
rorl
or
cs
push
mov
push
mov
jp
xchg
xchg
scas
xlat
ljmp
dec
mov
pop
inc
inc
lock
jge
cmp
inc
sub
ret
lea
movb
and
and
push
or
inc
and
inc
and
pop
xor
leave
mov
dec
and
insl
mov
aaa
mov
mov
jmp
sub
add
jb
dec
dec
cltd
mov
das
and
addr16
popa
mov
outsl
dec
outsl
and
int
insb
stos
movzbl
push
ror
push
punpckhwd
dec
outsb
push
je
lds
insb
and
daa
ja
rcll
cli
das
rclb
inc
pop
push
dec
inc
dec
inc
push
pop
cwtl
pop
repnz
test
xlat
jb
gs
fmuls
inc
fwait
roll
push
loopne
cmp
dec
jb
bound
xor
aas
dec
xchg
js
mov
or
sub
adc
aam
xor
outsl
testl
sbbb
test
mov
cmp
cmpsl
orb
inc
jno
add
xorl
and
jb
push
xor
mov
adc
cs
mov
or
adc
adc
add
call
sbb
sbb
jle
pushf
mov
push
aas
push
mov
rorb
xchg
jp
add
test
mov
add
adc
cli
add
xor
add
mov
and
add
xlat
and
adc
push
loopne
in
jnp
adc
xor
and
adc
inc
add
xchg
out
sub
stos
inc
pop
enter
xchg
push
fistps
or
stos
arpl
es
sub
movsb
adc
adc
sub
add
and
sbb
pop
xlat
sbb
mov
inc
loopne
xchg
mov
dec
mov
xchg
or
lods
push
fcmovbe
outsl
or
xchg
inc
add
sub
sub
imulb
xchg
push
insb
add
fnstenv
mov
orb
pop
outsb
pop
dec
xchg
dec
inc
xadd
ss
lahf
mov
dec
loopne
inc
jg
cmpb
insl
pop
jnp
aas
mov
jo
maxps
dec
add
and
jae
setbe
add
test
mov
fistpl
cmp
aas
add
test
addr16
imull
push
daa
sbb
mov
mov
and
cmp
inc
add
pop
ror
cmpsl
ja
lahf
rcr
pop
add
daa
repnz
dec
repz
push
sbbl
rcr
mov
cld
mov
loopne
aas
jg
and
outsl
nop
sbb
jb
push
jb
inc
cmp
and
and
and
dec
push
jb
add
or
stos
xor
push
fcomps
mov
mov
jns
iret
mov
int3
pop
mov
repz
out
and
pop
sub
jns
repz
hlt
pop
xchg
test
pop
sahf
pop
cmp
cmp
pop
ds
pop
push
test
sahf
out
adc
pop
fadd
in
sub
iret
ror
lods
nop
je
push
sbb
int
sbb
push
sub
and
fcoms
adc
out
dec
enter
mov
push
and
pop
int3
imul
pop
sahf
sub
or
add
popf
sub
add
add
push
adc
cmp
dec
mov
add
roll
jg
sub
ja
pop
leave
adc
xchg
pop
cmp
outsl
add
scas
fs
imul
and
pop
das
inc
and
dec
pop
dec
outsl
add
inc
adc
sahf
or
mov
outsl
fbld
cmp
cmp
sub
push
sub
dec
xchg
sbb
adc
test
pop
andl
push
xor
outsl
out
dec
scas
or
dec
repz
xor
clc
fiadds
dec
push
adc
mov
popa
sub
scas
add
insb
mov
ljmp
add
xor
cs
dec
xor
inc
es
rcrb
in
xchg
dec
sub
and
push
cmp
jl
lock
call
pop
adc
test
mov
xchg
cmp
fs
insb
lcall
mov
pusha
fs
leave
mov
lahf
mov
loopne
mov
sub
add
clc
ja
or
add
leave
push
ja
pop
sbb
jge
repnz
pop
pop
insb
push
js
fmuls
movsl
fildll
filds
js
and
xor
out
pop
cwtl
sbb
and
loopne
popa
and
or
dec
xchg
fsubs
xor
out
fsubrl
sbb
add
or
mov
cs
xor
pop
push
add
addr16
insl
add
dec
mov
fildl
sbb
in
pop
mov
or
daa
add
push
repnz
nop
ss
mov
pop
dec
pop
cmpsb
lahf
xor
add
fimuls
xlat
mov
or
in
push
shlb
dec
lret
push
mov
inc
mov
pusha
pop
fs
or
pop
and
add
fs
sbb
popa
xor
divl
enter
sbb
mov
mov
push
outsl
jbe
adc
rclb
testl
fisubl
clc
gs
pusha
bound
jbe
enter
nop
xchg
rcrl
dec
jo
mov
mov
push
dec
mov
and
sbbb
bound
xlat
or
popa
aad
int
shlb
scas
add
sub
cmp
xlat
or
xchg
xor
pushf
xchg
xchg
mov
in
lahf
push
pushf
and
pushf
and
dec
arpl
adc
inc
cmp
testl
and
jae
outsl
loopne
add
and
jb
jle
and
adc
jnp
cwtl
push
and
aaa
mov
cwtl
push
xor
aaa
push
ja
or
add
sub
xor
mov
daa
cmp
add
and
cmp
loopne
out
mov
cwtl
adc
xchg
and
scas
in
pusha
jg
add
jbe
mov
add
insb
jb
nop
jg
addr16
or
mov
cs
aam
add
sub
mov
pushw
dec
pop
leave
mov
push
adc
outsl
add
xor
ss
fs
adc
cmpsb
cwtl
popw
test
ss
clc
inc
fcoms
mov
or
test
hlt
xchg
mov
add
inc
cmpsl
add
sbb
cmp
xlat
sbb
xchg
or
sahf
iret
jne
or
daa
push
xchg
pop
in
jbe
int3
lahf
or
add
xor
leave
add
or
sarl
in
repz
push
or
add
imul
iret
cmp
push
mov
or
or
lds
aas
popf
nop
pop
jb
xchg
push
nop
es
push
lods
pop
or
test
xchg
or
imul
push
add
add
dec
ficoms
cmp
sbb
and
push
rcrl
outsl
out
nop
and
and
xchg
jbe
push
addr16
and
out
addr16
sbb
daa
add
adc
and
aam
pmulhuw
and
outsb
lock
imul
in
ss
test
stc
lods
lea
xor
call
cmpsl
js
push
insb
in
fstl
push
enter
or
mov
or
ja
jbe
xor
inc
in
mov
outsb
mov
pop
add
aaa
and
push
xor
aam
or
data16
cmp
das
pop
or
sahf
mov
nop
cwtl
aas
or
push
pop
addr16
loopne
insb
sbb
out
push
jne
or
sbb
push
loopne
fmull
lret
push
mov
xor
add
insl
xchg
xor
out
mov
icebp
sub
dec
repz
repz
stos
into
sti
out
sahf
out
jl
push
outsl
mov
repz
push
jge
pop
test
sbb
jns
jle
mov
jg
jbe
iret
repz
into
icebp
or
push
iret
repz
popa
jl
enter
ds
mov
rorb
sub
jns
out
js
lock
out
cmp
inc
bound
out
sahf
xor
into
icebp
and
xor
sahf
rcr
xchg
imul
imul
repnz
cmp
out
sub
iret
repz
or
sbb
ficoms
jne
jle
aad
xchg
mov
sti
add
xor
push
or
dec
repz
xchg
dec
jo
out
cmp
jmp
xchg
fs
ds
repz
and
xchg
jl
out
cmp
cwtl
insb
ds
rorl
loopne
cltd
pop
lcall
sbb
dec
repz
sti
xor
cmpsl
xchg
mov
lahf
sahf
lahf
out
mov
mov
iret
repz
shl
sub
cmp
loopne
in
pop
movsb
cmp
ds
aaa
xchg
das
movsl
scas
push
sar
lahf
cmpsl
stc
cmpsb
jns
or
repz
xor
outsl
mov
test
dec
imul
lahf
cmpsl
ja
or
lcall
push
lods
out
lcall
ret
cmp
push
scas
inc
mov
repz
andb
fidivrs
push
into
out
push
mov
push
jo
int
jns
pop
mov
movzwl
mov
roll
mov
jl
int
mov
mov
ror
iret
shrl
push
fisttpl
int
jns
ret
out
ret
insl
lahf
cmpsl
stc
cmp
adc
xchg
or
ds
repz
mov
stc
cmp
push
test
int
imul
into
mov
imul
sarb
inc
rcl
ret
icebp
mov
movsl
fcomp
add
jns
add
sbb
fwait
push
test
loopne,pt
out
push
jno
jns
daa
frstor
mov
leave
in
and
mov
testl
daa
sub
cltd
ja
in
mov
jp
and
fcmovbe
xchg
out
pop
paddq
sub
inc
aas
das
in
push
test
popf
and
pop
xor
int3
shll
cli
jb,pt
cmp
call
xor
jo
in
in
fnsave
cmove
test
ret
push
insb
jae
inc
mov
pop
and
aad
inc
loop
pop
enter
jns
dec
mov
adc
cmp
outsl
sbb
or
push
fs
jg
fimull
jg
xchg
jbe
mov
mov
inc
pop
mov
and
jb
jle
pop
insl
jb
movsl
dec
mov
push
mov
mov
mov
pushf
bound
ficoml
mov
loop
outsl
jmp
sarb
ds
ss
out
aas
mov
shl
shl
xlat
idivb
mov
or
cmp
outsl
in
mov
std
sti
mov
add
into
push
lods
jb
dec
loope
ret
mov
push
rcrb
mov
aaa
rcr
jno
ja
inc
push
push
daa
fs
subl
xor
cmp
dec
stos
in
adc
mov
cs
push
cmovae
aad
add
ja
ja
sahf
xchg
xchg
mov
pop
das
bound
jnp
aas
rorb
outsl
push
and
and
pop
jae
push
cmp
aas
sub
rorl
les
push
push
jg
cmpsl
mov
inc
cmp
popa
aas
test
jo
loop
push
dec
fdivs
cs
adc
sbb
cmc
pop
inc
mov
ljmp
inc
adc
push
jbe
dec
inc
mov
or
mov
pop
push
fadds
out
xchg
inc
repnz
lret
addr16
je
xor
jns
iret
or
mov
test
cmp
push
repnz
out
fdivrl
jnp
cmp
mov
adc
addr16
cmpsl
jnp
add
jp
in
jns
push
add
lds
mov
pop
leave
cld
mov
movsb
push
mov
les
daa
xchg
cmp
jnp
sbb
push
repnz
mov
jnp
add
xorb
repz
inc
mov
mov
add
mov
mov
jnp
jnp
dec
enter
jl
outsb
out
in
popf
add
call
dec
les
mov
jl
xchg
dec
mov
add
inc
mov
dec
leave
mov
jge
enter
sbb
dec
cmpsb
in
mov
push
jge
stos
pop
enter
aas
mov
cmp
sbb
mov
roll
cmp
repz
push
cmp
pop
std
or
mov
test
dec
jne
and
jns
sub
sbb
cmp
and
nop
jle
jge
pop
fsubl
xchg
iret
add
push
add
inc
repnz
mov
sbb
jge
xchg
cmp
mov
fsts
filds
movd
push
sbb
jle
jle
enter
jle
jle
leave
inc
jb
pop
insb
or
leave
leave
mov
jb
test
lret
fucomi
jbe
psrlq
jmp
and
outsb
mov
pop
sti
mov
mov
pop
mov
dec
push
jg
push
dec
jb
mov
add
pop
jg
data16
and
outsb
xchg
add
andb
inc
je
leave
and
adc
daa
xor
or
push
mov
cmp
inc
movl
mov
adc
int3
andl
into
inc
jb
inc
add
rolb
mov
xorb
rclb
push
lock
dec
pusha
addb
leave
xchg
mov
bound
in
inc
jecxz
leave
and
adc
inc
sub
adc
daa
cmp
or
cmpsl
and
cmp
xchg
subl
leave
leave
insl
push
xchg
pop
gs
xchg
add
mov
mov
frstor
adc
leave
add
test
adc
popf
pop
mov
in
jecxz
out
cmp
in
in
sbbb
and
out
fidivrs
push
or
push
or
out
pop
or
or
out
jge
mov
sahf
out
sahf
xchg
adc
sahf
out
mov
les
out
loopne
out
sbb
jo
jl
sub
cmpsl
out
mov
in
mov
and
pop
and
dec
inc
test
cmp
imul
addr16
mov
xchg
fwait
xchg
and
pop
loopne
aaa
add
xchg
xchg
mov
adc
test
decl
xlat
inc
xchg
xchg
xchg
dec
leave
mov
xchg
and
test
xchg
dec
hlt
ss
test
das
enter
test
faddl
mov
mov
add
inc
int
inc
and
jae
out
orb
jbe
daa
sbb
add
jno
es
test
adc
push
add
lock
icebp
mov
call
sbb
aam
push
leave
add
inc
xchg
jb
and
mov
push
dec
inc
jb
inc
jmp
in
xchg
mov
xchg
xchg
mov
subb
mov
inc
dec
repnz
mov
pop
add
mov
cmp
out
inc
push
cmovge
add
pop
leave
fdivrl
aas
addb
mov
in
and
and
mov
daa
cmp
mov
and
daa
mov
pop
pop
mov
pop
mov
jne
mov
mov
cmp
xchg
xchg
sarl
add
or
inc
xor
pushl
leave
xchg
jl
push
inc
lea
mov
loop
and
mov
das
das
pop
jmp
mov
das
rorl
mov
das
das
das
loope
jmp
mov
das
das
das
add
sbb
and
femms
in
in
or
in
in
or
push
in
in
add
ret
in
add
xchg
xchg
mov
xchg
shl
jbe
ja
int3
mov
stc
fsubl
lcall
mov
in
cmp
mov
jo
fcmovne
mov
mov
add
mov
stos
imul
pop
xlat
xchg
and
xchg
mov
leave
rep
mov
aas
mov
mov
cmp
aad
or
xchg
adc
out
sbb
cmp
or
out
movsb
jae
xchg
ja
jmp
jg
push
rcpps
pop
cmp
pop
arpl
push
and
in
or
mov
mov
jae
cmovle
lock
add
push
jbe
pusha
scas
push
mov
imul
aaa
jmp
mov
es
ja
push
daa
adc
daa
cwtl
xchg
and
cwtl
das
mov
mov
enter
mov
mov
xchg
sbb
fwait
dec
stc
xchg
adc
mov
cs
add
cmp
dec
lea
jae
dec
xor
adcb
pushf
nop
lea
cwtl
dec
sahf
out
mov
inc
repnz
mov
enter
leave
idiv
sysret
mov
in
mov
xor
cmp
push
add
out
sahf
pop
add
jns
out
jg
mov
xchg
out
sahf
out
mov
dec
push
sahf
mov
pusha
in
loopne
lock
cld
jb
enter
cmp
inc
sahf
fucomi
ss
pop
push
subps
fs
xchg
out
jns
je
jl
jns
mov
jl
xchg
test
jbe
scas
ja
out
imul
add
dec
ja
sbb
xchg
lods
push
daa
fcoml
rcr
inc
or
xor
xchg
xchg
push
jg
inc
dec
push
repnz
push
leave
jb
in
mov
stos
in
sub
jnp
push
nop
cmovp
in
les
xchg
iret
pop
aam
xchg
jg
outsb
push
jb
mov
scas
add
js
mov
sbb
jb
popf
nop
test
mov
ret
es
xchg
lods
xchg
jmp
repz
sahf
pushf
sti
add
xchg
cmp
push
das
sbb
xlat
insb
pop
leave
xor
clc
dec
push
in
rcrl
fists
addr16
pop
and
add
fcmovne
or
add
cmp
mov
cmp
or
xchg
sbb
xchg
inc
addr16
in
pop
cmp
xchg
das
je
jg
in
in
mov
stos
xchg
mov
in
mov
rcll
sub
js
repnz
std
das
das
pop
loopne
xchg
das
adc
das
das
das
das
xor
aas
xchg
dec
xchg
push
xchg
iret
add
das
arpl
clc
and
and
movsb
daa
daa
daa
daa
scas
mov
daa
daa
icebp
out
or
and
pop
sbbb
fisubl
addr16
push
add
lcall
mov
xchg
setnp
cs
out
or
inc
add
dec
add
jns
jp
xchg
xchg
out
fwait
sahf
xchg
pop
add
mov
mov
pop
out
das
test
inc
or
movsb
cmpsb
pop
mov
cmp
push
iret
mov
add
jb
inc
pop
setbe
xchg
fildl
pop
arpl
add
outsb
repnz
dec
fisubrs
enter
xchg
subl
push
or
aaa
jns
ud2
fwait
or
jp
mov
sub
add
in
or
adc
lock
xor
sbb
xchg
pop
xchg
pusha
xchg
push
pop
ja
xchg
fbld
pop
leave
jae
xchg
mov
fisubl
out
loopne
dec
dec
testl
setb
add
add
sahf
xor
push
fs
mov
insb
cwtl
addr16
jns
iret
cmp
push
add
jg
in
push
dec
cwtl
shlb
fcom
or
test
mov
filds
cltd
outsl
or
adc
sub
xor
dec
cltd
pop
pop
pop
pop
push
cltd
pop
cltd
arpl
mov
ud2
pop
or
xchg
xchg
xchg
xchg
or
push
add
add
add
jae
sahf
out
sbb
sbbl
sahf
out
sbb
rorl
pop
mov
cmp
leave
mov
and
and
lret
es
cltd
movaps
inc
repnz
mov
mov
and
dec
push
add
mov
nopl
add
jae
mov
xchg
xchg
jbe
cmp
add
xchg
iret
in
in
scas
cmpsl
push
sbb
xchg
or
loope
jg
mov
stc
add
ds
fwait
jo
pop
cmpsb
shrb
inc
fwait
cmp
inc
into
fists
pop
fwait
push
bnd
iret
or
mov
das
mov
in
jbe
iret
int
frstor
stos
or
add
dec
leave
mov
int
nop
mov
mov
pushf
addr16
mov
pushf
push
pop
inc
add
loop
jns
push
add
pop
pushf
jns
xchg
dec
add
push
jle
fldenv
xchg
add
cltd
pushf
add
xlat
addr16
les
mov
out
pop
mov
enter
into
out
mov
andl
shlb
add
in
mov
cmp
xchg
das
cmc
push
popf
divps
in
nop
xchg
popf
mov
and
add
dec
cs
pslld
dec
dec
dec
add
dec
sahf
out
or
or
xor
repz
cmp
or
repz
push
push
adc
jmp
push
scas
adc
in
repnz
cmp
pop
out
mov
mov
add
mov
xchg
pop
loopne
inc
movl
jnp
mov
scas
filds
lahf
pop
push
push
add
dec
mov
scas
push
lahf
xchg
pop
add
inc
lahf
xchg
dec
cs
push
fs
xchg
dec
cs
fdivl
jg
incl
mov
int
pavgw
les
fimuls
add
lea
int3
scas
pushf
jge
xchg
rcrl
or
or
push
out
mov
mov
mov
loopne
fwait
cmp
lar
dec
sahf
aaa
repnz
mov
mov
mov
or
nop
mov
aaa
jb
mov
mov
or
lret
rcrl
fistpl
add
jecxz
pop
jmp
je
mov
pop
sti
pop
add
addr16
into
scas
adc
mov
je
dec
scas
xor
jbe
dec
xor
repz
jg
add
leave
repz
add
pushf
pop
and
lret
bnd
push
incl
dec
test
in
mov
push
sbbl
mov
out
mov
inc
dec
xchg
int
mov
mov
call
test
push
mov
popa
mov
add
add
jo
jl
inc
fs
inc
mov
stos
mov
in
cs
rolb
fadds
lods
xchg
out
les
in
xchg
cli
sub
sbb
daa
cmp
cmp
enter
mov
repz
sbb
push
add
add
iret
push
pusha
pop
imul
cmp
repz
orl
iret
repz
or
or
iret
push
mov
into
mov
fldenv
leave
and
jmp
stos
mov
popa
daa
push
movsb
das
pop
movsb
bound
movsb
jb
jp
add
mov
movsb
inc
mov
mov
push
out
fsubrs
or
add
das
ret
leave
leave
leave
leave
rcr
out
mov
negl
push
pop
jmp
inc
shld
nopl
scas
daa
movsl
shrd
xchg
adc
pop
movsl
add
push
iret
in
in
mov
pusha
ja
icebp
add
inc
outsl
nop
mov
pop
jo
pusha
cwtl
pop
mov
in
inc
mov
aaa
stos
inc
cltd
loopne
xchg
nop
inc
jp
sub
movsl
scas
jnp
pop
jmp
push
aas
push
pop
push
pushf
in
movsl
enter
in
push
cmpsb
cmpsb
es
push
aas
enter
pop
add
add
es
iret
pop
sbb
pop
popa
repnz
imul
leave
inc
xchg
lods
mov
cmp
lsl
add
mov
unpcklps
xchg
clc
add
jnp
sub
cmpsl
ja
cmpsl
pop
and
out
xchg
mov
pushf
andl
xchg
rorb
add
movsb
cmpsl
lret
lret
lret
lret
mov
cmpsl
out
pop
or
das
and
sub
add
mov
cmp
outsb
fwait
out
outsl
pop
test
addr16
push
leave
inc
sbb
jb
into
xchg
daa
lcall
xchg
out
lods
int
mov
in
in
pop
cmc
mov
sahf
out
std
push
add
add
testb
jns
xor
xchg
aad
ja
je
arpl
push
xchg
mov
in
and
lret
pop
jmp
aam
aam
sbb
or
push
xor
pusha
jb
push
outsl
mov
in
mov
ja
pop
and
add
lret
cld
jno
pop
push
fisubrl
mov
sub
add
or
stos
outsb
mov
ss
addr16
inc
iret
leave
lods
fistpl
lidtl
add
dec
es
repz
push
or
pop
xor
sysret
cs
outsb
stos
andb
js
repnz
xor
inc
inc
mov
cmpb
mov
xchg
add
pop
mov
sahf
mov
pushf
add
lods
daa
daa
inc
or
xlat
sub
daa
out
testl
jl
pop
lods
sysret
movhps
pop
lods
call
leave
addl
push
mov
addr16
outsl
lods
jle
xchg
nop
mov
leave
shll
mov
iret
sahf
ja
into
ficoml
push
sti
repnz
or
lods
iret
pop
hlt
ss
lods
dec
push
add
jae
cmp
push
push
push
jbe
iret
repz
jle
xchg
push
out
das
das
das
pop
lahf
lods
outsb
lods
mov
fsubrl
sahf
pop
cmpsb
adc
mov
mov
fcmovne
into
pmaxub
and
mov
or
out
nop
mov
daa
push
jb
add
negl
and
bound
adc
push
mov
fnstsw
sbb
ja
dec
daa
push
in
int3
test
mov
orb
cmp
jg
scas
mov
ja
stos
pop
or
mov
scas
sahf
cmpl
pop
push
add
fists
xor
xchg
or
in
or
xor
xchg
filds
dec
adc
mov
xor
scas
daa
and
dec
pop
scas
pop
fs
insb
bswap
repz
je
lea
jmp
movsl
out
icebp
in
mov
iret
or
pop
and
mov
inc
ret
paddd
scas
mov
daa
cmp
inc
mov
dec
mov
mov
jo
js
push
xchg
pop
leave
adc
mov
cs
push
mov
xchg
mov
jmp
mov
dec
add
sbb
push
mov
or
inc
cmpsb
xchg
mov
xchg
mov
insl
xchg
loop,pn
mov
rorb
add
or
je
push
leave
jae
jo
lahf
iret
jae
cmp
cmpsl
scas
add
mov
pushf
cmp
repz
or
or
out
iret
leave
repz
testl
clc
mov
mov
cmp
jbe
mov
mov
jns
insl
add
jge
rep
mov
setle
cmpsb
push
push
scas
getsec
jns
mov
or
cmp
mov
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
test
leave
loop
pushf
mov
mov
cmp
jns
out
das
bound
jae
cmp
cwtl
mov
mov
sbb
into
dec
sbb
dec
fidivs
in
and
add
cmp
leave
and
xchg
iret
mov
mov
xchg
in
jns
cwtl
mov
test
mov
les
xchg
and
mov
or
rolb
dec
or
in
xchg
and
mov
mov
mov
xchg
addr16
mov
pop
mov
dec
dec
dec
xchg
lahf
cmpsl
iret
repz
dec
scas
mov
push
mov
cmp
or
or
jmp
fisttps
out
das
icebp
pop
out
iret
divl
push
leave
cmpsb
mov
adc
rclb
xor
mov
jns
pop
pop
cmp
add
dec
nopl
repnz
xchg
repnz
mov
mov
mov
mov
repnz
fnsave
in
in
mov
mov
mov
or
mov
sub
push
inc
repz
repz
dec
and
iret
repz
pop
and
jb
cmp
repz
and
cmp
repz
cwtl
sub
iret
scas
sub
sahf
xchg
mov
mov
je
rorl
paddb
add
push
mov
outsb
jae
pop
pop
push
das
sbb
cmp
xchg
mov
iret
into
insb
push
loop
mov
fnsave
nop
ja
js
invlpg
es
add
cmpb
jmp
pop
stos
mov
repnz
push
add
pop
or
iret
daa
mov
fs
addr16
in
jns
mov
mov
int
cmp
fmuls
add
out
stc
insl
mov
dec
mov
sahf
xchg
fistpl
pop
and
cmp
aaa
ud2
inc
or
sahf
out
jbe
pop
addr16
jg
in
dec
mov
xchg
mov
adc
mov
sarl
out
sbb
xlat
sbb
sahf
out
sbb
clc
sbb
add
and
call
cmp
repnz
insl
mov
sbb
jge
test
cmp
mov
pushf
pushf
pushf
mov
sub
repz
pushf
push
adc
mov
xchg
daa
daa
daa
mov
cpuid
rcr
out
lcall
daa
daa
mov
sub
pop
cmp
cmp
daa
daa
jle
mov
daa
iret
jae
lods
lret
fimull
repnz
clc
push
mov
jb
cmp
es
sub
mov
cmp
mov
dec
mull
lods
push
add
cmp
les
int3
pop
sahf
out
jns
fmull
in
es
cmp
hlt
push
or
inc
mov
rorb
popf
cmp
repz
add
and
repz
out
adc
lar
and
iret
pop
inc
sbb
dec
push
mov
pop
inc
sbb
out
rcrb
leave
sbb
enter
enter
add
jns
fmull
mov
iret
in
in
xchg
aas
lahf
pop
and
pop
ss
rorb
leave
fldt
rol
xchg
loop
and
mov
pslld
ss
sub
xorl
pop
add
and
rorl
jo
dec
scas
popf
js
fs
lret
insl
cmp
mov
iret
jae
jb
ret
lret
push
shll
cmp
or
jb
push
ret
ja
fcmovne
mov
ret
cmp
pop
leave
jae
xchg
push
xlat
dec
outsb
daa
insb
pcmpeqb
daa
daa
pop
add
pop
ja
daa
mov
mov
cmp
iret
push
xlat
fisttps
in
mov
fadds
ret
or
mov
jb
ret
sbb
and
sub
xchg
mov
incl
dec
cmp
xchg
xchg
push
pop
xchg
in
jb
mov
sahf
out
add
in
lret
roll
fcomi
fmull
jecxz
pop
repz
sti
add
lahf
or
sub
cmpsb
cmp
les
lock
ds
les
cmp
pop
push
add
jns
in
outsb
pop
jbe
or
pushf
je
in
mull
popf
mov
mov
daa
daa
adc
adc
in
hlt
fs
daa
daa
cld
add
pusha
mov
enter
das
getsec
ja
jbe
xchg
cmp
pop
bound
dec
sahf
out
push
add
leave
inc
repnz
in
shrl
jns
xchg
rcr
add
jo
xchg
mov
sbb
or
jae
cmp
adc
sbb
and
push
andb
add
pushf
fsubrl
or
addr16
fs
adc
mov
xchg
in
pop
and
push
add
pslld
fbstp
jb
or
push
add
push
push
ds
xor
repnz
dec
push
pusha
jmp
jbe
sbbl
aas
aas
xchg
mov
das
das
das
das
ret
into
fld
in
das
das
das
das
out
cli
movl
enter
enter
movsb
fistpl
nopl
in
in
sbb
sbb
out
in
push
adc
jns
inc
sub
pop
push
jae
jle
mov
jns
out
xchg
xor
sahf
stos
xor
jns
out
lret
cmp
cmp
loopne
sahf
out
in
cmp
cmp
jnp
inc
jbe
fisttps
scas
fwait
cmp
and
cmovb
cmp
jbe
cmp
inc
dec
cvtps2pd
gs
jo
jnp
in
in
dec
xchg
leave
leave
cmpsl
mov
dec
enter
fwait
sqrtps
fisubrs
hlt
fisttps
lret
push
leave
addr16
mov
xchg
xchg
lahf
lahf
dec
lret
pop
mov
aam
add
imul
enter
mov
xchg
lret
sbb
jb
stos
lret
ror
lret
in
iret
xlat
lret
iret
in
lret
inc
mov
lret
push
lret
cmp
repz
push
das
pop
repz
repz
inc
sbb
repz
sbb
data16
cmp
repz
jl
xchg
jns
iret
repz
and
jns
out
and
leave
in
aam
fucomip
sub
aaa
repnz
cvtpi2ps
add
or
out
dec
sahf
and
and
sub
out
sahf
das
aaa
xor
dec
leave
repz
pop
arpl
repnz
fstpt
test
cmp
lcall
iret
jae
cmp
in
jbe
paddusb
repnz
std
push
inc
or
adc
inc
xchg
jl
jle
push
int
mov
cmp
lahf
int
pand
ja
jg
daa
iret
repz
pop
xchg
or
cltd
dec
ds
mov
cmp
push
add
rolb
daa
iret
repz
pop
nop
sub
dec
js
cld
ljmp
fcoml
daa
inc
push
adc
into
repz
inc
push
add
jmp
clts
pop
icebp
in
in
push
push
repnz
or
xlat
lahf
gs
or
pushf
pop
pusha
dec
pop
mov
xchg
out
add
enter
fwait
dec
mov
iret
jns
jns
aas
push
iret
push
iret
push
iret
es
push
and
jns
iret
sub
push
iret
mov
enter
iret
addr16
pop
jb
fmull
mov
mov
xchg
pop
iret
repz
sahf
or
pushf
pushf
cmp
lret
imul
in
out
or
and
adc
sub
sbb
out
dec
sbb
fs
je
out
outsl
nopl
daa
iret
jae
jp
and
jns
and
repnz
push
daa
fucomp
das
leave
out
lock
sub
push
rol
push
add
repz
dec
add
pop
and
fisubs
add
cltd
push
fcmove
test
out
cmp
mov
repz
push
imul
in
mov
add
jns
sahf
or
pop
shlb
rclb
fdivl
sub
sahf
fsubp
in
inc
rorb
pop
shlb
mov
out
outsl
push
jp
pop
nop
es
repz
fwait
sbb
movhps
out
mov
shlb
repnz
repz
and
es
adc
sub
pop
iret
pop
sub
sub
add
clc
inc
push
mov
das
sub
jb
fs
sub
sub
jo
fldt
pop
cmp
ss
sarl
mov
add
lahf
stos
lgs
mov
or
add
lahf
push
outsl
or
fdivr
ror
xchg
and
aam
aam
aam
out
fisubs
add
add
sahf
inc
pop
push
or
mov
sysret
pop
jno
jns
stc
adc
jl
xchg
xchg
aam
and
js
aam
test
mov
repnz
loopne
lahf
test
out
addb
cmp
repnz
aad
aad
push
aad
push
xchg
test
aad
pop
sbb
aad
aad
cmpsl
pop
imul
iret
jns
pop
orl
daa
or
iret
repz
sahf
xchg
out
pop
mov
out
jbe
jns
fisttps
out
out
cs
loopne
repz
sbb
pop
repz
aas
scas
pop
lahf
sbb
loopne
in
outsl
test
sahf
aaa
jb
jg
push
mov
jns
sahf
out
or
and
jb
mov
in
clc
iret
cmp
jns
xlat
push
sbb
adc
es
repz
das
push
cmp
jecxz,pt
lahf
xlat
xlat
cmp
jbe
das
dec
jno
jl
push
xchg
repz
xchg
xchg
and
mov
mov
and
mov
cmp
sub
cmc
sub
jns
inc
mov
or
sub
mov
push
xor
jbe
mov
aaa
cmovb
popf
cmp
leave
outsb
jns
test
setp
cmp
fidivs
stos
sbb
add
push
cmp
adc
push
pop
test
cmpsl
or
or
cmp
cmp
add
mov
push
push
pop
push
add
sarl
inc
inc
aas
sub
inc
into
pop
inc
mov
sub
jbe
aaa
outsl
in
pop
pop
aaa
cmp
push
add
cmp
in
add
add
add
iret
push
or
or
fstl
aaa
or
outsb
imul
daa
adc
adc
xor
jbe
popf
push
addr16
das
push
xorps
pop
imull
push
and
fcmovne
repz
push
pop
andb
fucomi
orl
xchg
or
in
push
sub
fucomi
fbld
xor
mov
data16
fmuls
and
sahf
sarl
cmp
inc
push
xor
out
sub
and
sbb
xor
out
or
call
cmp
aam
int3
enter
cmp
sarb
out
lods
movsb
cwtl
nop
iret
repz
js
fs
cmp
repz
inc
inc
cmp
cmp
or
dec
or
stc
push
sbb
pop
mov
adc
and
and
adc
or
inc
dec
sub
and
and
std
mov
pop
or
sbb
adc
cmp
ss
movsb
add
in
leave
pop
lods
pusha
cmpb
cmpsb
fisttps
mov
jl
lahf
loopne
inc
jle
test
shll
push
mov
mov
cmp
mov
sbb
in
out
adc
mov
mov
ficompl
dec
leave
mov
mov
xor
fcomp
loopne
jb
jle
xchg
test
and
addr16
adc
add
into
push
add
movsl
rcrl
or
and
push
pop
cvttps2pi
jle
inc
aaa
push
ficomps
xlat
incl
xchg
insb
xor
das
push
push
mov
aas
pop
push
add
xor
daa
add
pop
adc
or
sarl
or
out
adc
adc
repz
adc
inc
imul
sbb
in
sbb
jns
out
sbb
mov
js
push
sub
fmulp
in
out
jl
push
and
ljmp
jns
jp
push
jnp
or
push
xchg
xorb
mov
lods
popf
or
push
add
rcrb
inc
pop
push
push
inc
js
nop
add
or
add
cwtl
push
jae
xorb
mov
push
push
push
mov
adc
push
jecxz
je
xchg
aas
pop
pop
aad
jo
idivl
and
call
aad
aad
jg
out
addr16
mov
loopne,pn
inc
sub
imul
mov
xchg
inc
sub
and
scas
sbb
addb
sbb
out
iret
jmp
lock
and
push
and
das
mov
cld
lock
out
idivl
add
adc
fmul
repz
and
push
or
or
repz
rcrb
in
sahf
out
iret
enter
sbb
jns
pop
test
movsb
out
sahf
out
mov
aam
sahf
xchg
mov
clc
mov
push
fwait
orb
inc
out
xor
mov
xorb
inc
cmp
xorl
jg
cmp
out
push
pop
js
mov
sti
cmp
out
adc
xor
add
or
dec
cmp
xchg
cmpsb
xchg
mov
jae
das
stos
dec
popf
out
dec
insb
cmpsl
arpl
stos
jmp
das
dec
inc
pop
nop
leave
enter
inc
pushf
or
nop
psubw
mov
adc
jg
andl
mov
sbb
ja
clc
int3
into
sbb
roll
sahf
mov
sub
inc
call
pop
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
addl
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
ljmp
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
es
sub
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
inc
cld
ljmp
inc
or
addl
cmpsl
jg
xorb
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
inc
push
movsl
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
pop
ret
xchg
and
and
addr16
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
jmp
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
testb
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
ds
jnp
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
decl
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
clc
incl
gs
std
orl
pop
ficomps
frstor
push
sbbl
pop
cmp
inc
incb
je
inc
inc
push
dec
pushl
cmpsl
add
xor
popa
push
out
mov
les
hlt
push
xor
xchg
fs
lcall
movsb
mov
aad
mov
rclb
mov
sub
mov
nop
adc
push
jno
repz
test
ficompl
jmp
mov
hlt
movl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
or
decl
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
mov
test
xor
leave
mov
insb
fdivs
jne
filds
or
pop
lcall
shrl
push
ficoms
push
xlat
enter
mov
and
mov
call
xchg
mov
mov
or
or
and
or
adc
lcall
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
and
incl
movsl
in
lahf
xor
mov
js
stc
les
or
mov
cmp
fs
add
hlt
push
imul
insb
sbb
xor
jmp
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
fistpll
je
mov
aam
movsl
fisttps
fadd
shll
call
shrl
imul
mov
sarb
add
in
add
pop
dec
or
decl
push
stos
inc
add
adc
or
and
jbe
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
call
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
pushl
ljmp
fildl
push
fdivl
or
test
fs
ds
or
ljmp
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
incl
imul
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
lcall
icebp
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
idiv
decl
ss
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
fcomip
shrb
rclb
or
add
mov
das
es
or
sub
mov
add
mov
cmpsl
call
ret
shlb
scas
fldcw
ret
es
pushf
mov
insl
add
aas
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
decl
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
lcall
mov
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
ljmp
cli
call
lcall
clc
sar
imul
push
js
or
push
addl
incl
ret
cmp
cmpsl
notl
pusha
rorb
imul
ljmp
fldenv
filds
sarb
mov
fidivrs
decl
xor
xchg
sbb
mov
lret
pushl
xchg
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
popa
ljmp
mov
outsl
sub
mov
or
popa
movmskps
sbb
add
sub
mov
js
jo
pop
push
add
push
pop
add
sahf
out
pop
cmp
push
xlat
fcomp
fidivrl
out
fcmovnu
fstp
loop
out
out
in
call
jns
jmp
in
repz
sahf
out
cmc
div
clc
je
jns
stc
cli
sti
cld
pop
pop
push
aas
pop
adc
test
inc
lahf
movsl
cmpb
push
movl
bound
dec
rol
into
mov
dec
ss
repz
insl
bound
inc
stos
std
push
dec
popa
je
push
in
mov
and
cmp
adc
adc
jno
xor
pop
inc
mov
mov
xor
aaa
cmp
popa
arpl
cmp
arpl
or
xor
bound
std
mov
je
push
inc
jbe
pop
insb
imul
ss
gs
fdivrs
dec
inc
aam
mov
add
push
inc
jp
mov
inc
xor
dec
ret
lret
sub
mov
or
rorl
fs
gs
je
inc
inc
imul
push
jbe
push
inc
add
inc
lea
mov
mov
sbb
gs
inc
movsl
es
push
add
inc
inc
mov
pop
pop
aaa
push
add
mov
popa
jns
push
push
lcall
cmp
je
aaa
cmp
push
push
aas
push
in
and
add
or
insb
or
insb
ret
sub
daa
int
pop
add
pop
inc
aas
nop
sbb
xlat
inc
inc
fcmovu
insb
sbb
inc
pop
mov
je
jo
inc
inc
add
adc
ds
mov
mov
mov
iret
int
push
dec
cmp
lods
mov
enter
fistpll
pop
loop
inc
outsb
jne
in
fistl
mov
pop
xor
xor
iretw
add
or
add
repz
out
mov
into
pop
sti
call
popf
pop
inc
cmp
and
aas
ljmp
cmp
add
add
push
sbb
sub
sbb
rcll
dec
aam
mov
xchg
lret
mov
rcr
lahf
xchg
out
addb
inc
jb
addr16
dec
popa
dec
popa
jo
sahf
xchg
lahf
push
outsl
outsl
mov
outsl
pop
in
pop
shl
push
jno
push
mov
mov
in
pop
cwtl
sbb
sbb
nop
test
pop
cmp
rcll
arpl
cmp
pop
pop
inc
mov
jo
test
xchg
xchg
lea
lock
outsl
insb
jns
das
push
add
push
mov
fcoml
gs
inc
outsl
arpl
mov
bswap
aam
mov
inc
push
bound
ja
inc
jbe
stos
jmp
les
movsl
jg
push
dec
xor
sbbb
fistpl
das
or
dec
xor
mov
inc
add
fs
inc
sbb
jle
or
xor
add
and
inc
dec
ret
sub
test
mov
sbb
sbb
pop
shrl
sub
cli
adc
pop
bound
outsb
arpl
adc
stos
mov
insb
insl
inc
jbe
add
inc
jne
push
push
inc
xchg
or
fcmovne
xlat
cmp
daa
inc
mov
test
dec
mov
add
stos
pop
adc
or
adc
pop
push
dec
add
dec
mov
add
pusha
mov
push
adc
xchg
cmp
mov
outsl
mov
pop
add
ret
shld
ljmp
test
divl
imul
test
mov
sbb
inc
and
gs
incl
mov
cmpb
stos
jl
sbb
sub
dec
dec
jnp
les
daa
movsb
pop
incl
adcb
jo
jmp
mov
mov
in
rclb
xchg
ss
pushl
xchg
push
sbb
sbb
or
push
lods
out
xchg
add
inc
xlat
push
fdiv
int
enter
inc
xor
movl
xchg
xlat
cli
xchg
xor
decl
in
sub
cmc
in
mov
cmpsl
mov
and
push
je
lea
fimuls
lock
inc
mov
jl
je
int
cmp
add
jb
cmp
or
pushl
jl
test
xchg
lock
inc
jno
lds
sbb
pushl
xor
or
mov
popf
jb
fs
bound
or
sub
xchg
inc
xchg
pmovmskb
ljmp
push
mov
pop
js
fwait
adc
lods
xor
cmc
pop
leave
and
enter
decl
add
sub
jle
scas
out
cwtl
add
sbb
sahf
das
pop
rcl
jmp
mov
aas
jno
mov
jb
xchg
push
sub
aas
mov
mov
xchg
mov
cmp
loopne
jmp
scas
cmp
jae
pop
mov
int3
sbb
scas
mov
pop
push
inc
pop
fcomps
lcall
mov
dec
dec
loope
lret
adc
xor
enter
aaa
push
ja
mov
fbstp
push
outsb
pop
mov
popf
cmpsb
jg
pop
popa
stos
mov
push
jns
in
lret
push
xchg
xor
es
push
cmpsl
inc
jl
testb
mov
pop
movsb
mov
sbb
fcoms
lcall
sti
jmp
inc
inc
in
shll
hlt
aaa
in
jg
andb
fcompl
push
ljmp
pop
xchg
sti
stos
fisttpll
rcrl
or
in
mov
and
xchg
mov
adc
movsb
inc
inc
ret
js
stc
mov
jmp
mov
rsqrtps
xorl
arpl
in
cmp
cmp
pop
fisttpll
lds
ds
rclb
fists
sbb
lods
lock
jmp
pop
mov
clc
push
pop
pop
popf
sti
leave
fsubr
push
mov
adc
sbb
jmp
mov
cmpb
aaa
jge
add
scas
sbb
add
shlb
xor
gs
lret
movsb
adc
dec
mov
dec
in
cmp
lret
xor
lcall
ret
pop
bound
aaa
fwait
cmp
cltd
popf
push
mov
push
jg
push
mov
hlt
adc
adc
and
out
jne
pop
fdivp
je
cmpsb
iret
into
and
push
loope
pushl
add
sbb
ss
push
and
cmp
stos
xchg
repz
jg
mov
shll
xor
jbe
loope
das
xchg
add
stos
cwtl
repnz
inc
push
ljmp
movsb
mov
xchg
push
dec
out
cmpsb
lods
add
js
cwtl
push
mov
dec
add
idivl
xchg
cmp
dec
addl
lcall
lcall
mov
test
adc
mov
icebp
popa
in
aad
call
enter
lahf
bound
imul
arpl
mov
mov
inc
pushl
imul
dec
add
jnp
arpl
aas
xor
mov
fsubrp
fwait
ss
out
fwait
jbe
pop
mov
mov
jecxz
lock
mov
xchg
mov
push
mov
int
and
addb
hlt
pop
add
push
lcall
nop
enter
xor
adc
and
mov
lds
in
inc
push
outsb
adc
jmp
sbb
sbb
repnz
cld
out
xchg
repz
ja
insl
xor
decl
xchg
add
mov
data16
shr
mov
sub
popa
push
cs
fistps
sbb
inc
jbe
sub
dec
test
outsl
push
and
fwait
xor
push
ds
ljmp
push
cmpsb
sub
xor
cld
xchg
adc
jg
push
stos
and
and
jge
mov
mov
seta
cwtl
clc
fisttpll
incl
adc
ds
iret
iret
mov
ss
ret
pop
pop
inc
ljmp
mov
flds
icebp
and
sbb
int3
mov
mov
cmp
das
popa
mov
push
in
fmull
incb
and
pop
push
add
adcb
inc
pop
sbb
pushl
sub
mov
mov
cmp
fstpt
sub
call
jbe
js
jne
add
cmpsb
mov
cmp
daa
stos
js
cmc
incl
fimuls
add
ds
lcall
add
bnd
mov
fbld
das
jae
or
adc
pop
cld
cmp
sub
inc
add
dec
adc
incl
filds
add
ljmp
imul
jbe
fdivrs
inc
test
loope
push
cmpsl
push
movsb
sbb
and
lahf
add
inc
imul
cmp
ret
push
push
rcrb
movsb
mov
xchg
jno
mov
jg
mov
bound
or
pop
insb
cltd
mov
mov
fisubrs
lock
cld
cli
ljmp
add
addr16
xchg
in
lcall
dec
jge
xchg
jl
push
mov
lea
test
stos
mov
jns
imul
call
stc
arpl
movsl
and
ss
in
mov
pop
imulb
clc
xor
test
call
mov
mov
xchg
inc
mov
mov
imul
dec
fisttps
ret
lahf
fstpl
je
xor
test
sarb
dec
fisttps
imul
xor
add
notb
sar
jmp
mov
push
faddp
push
ret
call
mov
sub
cmc
cmpb
call
mov
inc
mov
xchg
sbb
test
ljmp
ret
mov
xchg
sbb
mov
addl
mov
imul
add
mov
jmp
xchg
stc
lret
andb
inc
fwait
sbb
rcll
xchg
ljmp
sub
mov
repz
pop
dec
push
or
sub
push
stos
pop
in
sar
incl
repnz
in
out
cmpl
sub
out
dec
sbb
jecxz
sahf
repnz
decl
jb
movsb
mov
in
subb
dec
popa
mov
lods
jl
mov
cmpsl
push
inc
dec
sti
and
out
sub
cli
inc
xchg
jne
pusha
push
xchg
pop
inc
sti
sbb
xchg
jecxz
mov
sbb
lcall
pushl
loope
addl
mov
add
fidivl
aad
push
imul
incl
sbb
inc
mov
dec
mov
xchg
into
mov
mov
decl
ljmp
pop
sbb
add
pop
dec
sbb
pop
icebp
xchg
insb
pop
lcall
call
mov
cmp
xchg
sahf
adc
or
jle
inc
movswl
pop
mov
sub
es
int3
gs
inc
adc
and
add
xor
add
mov
and
sbb
cmp
add
jl
mov
decl
lahf
stc
xlat
mov
mov
dec
mov
fsubr
ss
out
pop
cmp
xchg
and
jle
out
clc
jbe
jb
iret
dec
inc
dec
in
mov
cld
loopne
adc
in
adc
adc
ret
inc
mov
cwtl
mov
insb
je
dec
das
call
dec
test
out
cld
adc
ljmp
push
pop
les
cmp
call
fs
jbe
int
lcall
insl
insb
aaa
inc
jl
jg
rorl
movsb
hlt
in
pop
or
fwait
cwtl
hlt
xor
cmp
mov
xchg
decl
bound
push
lret
push
fmull
je
insb
xlat
stos
loope
mov
mov
in
andb
cli
jg
enter
rorl
push
mov
roll
loop
add
pcmpeqd
ljmp
js
dec
fadd
ficoms
push
xor
jecxz
scas
cli
incl
push
fs
cmp
mov
cmpsb
scas
mov
jge
je
sar
lcall
cs
push
adc
jns
inc
push
rcr
or
dec
mov
mov
pop
jecxz
pushl
lret
cmpsb
or
lock
test
add
stos
sbb
xchg
dec
pop
ja
sbb
push
cmp
call
adc
dec
mov
pop
xor
sub
in
xor
xchg
outsl
js
inc
jecxz
in
filds
jp
mov
pushl
mov
movsl
mov
testb
inc
sub
out
mov
mov
pop
add
xchg
insb
dec
mov
add
fstl
decl
jnp
jnp
inc
xor
lods
in
popa
pop
test
add
xorb
in
mov
pop
xor
xchg
movsl
and
addr16
cmc
addr16
jo
mov
decl
call
ret
xorb
fs
dec
loopne
aad
mov
out
xor
outsb
insl
in
in
adc
mov
out
pop
fdivrs
in
cmp
cmc
incl
sarb
out
addb
movsl
inc
push
sbb
xor
lcall
cmp
scas
lock
sub
ret
stos
pop
pcmpgtw
out
das
rcll
cltd
mov
decl
push
rolb
sub
jmp
push
stos
pop
movsl
jb
jle
xchg
in
sub
mov
add
and
add
push
sub
mov
sbb
fcomip
lds
mov
xchg
push
sti
daa
push
inc
std
sti
ljmp
xchg
xchg
in
cs
popf
lret
jge
xchg
pop
add
fxch
or
add
insb
gs
mov
pushl
je
repz
xor
lret
pushf
inc
pop
jp
cli
and
push
movsb
fldt
inc
inc
insl
cmc
incl
es
adc
shlb
lahf
mov
inc
pop
or
pop
cltd
xor
ja
push
aad
jne
mov
xor
jo
lcall
mov
mov
pop
pop
imul
in
inc
inc
and
call
les
aas
add
out
push
inc
mov
mov
mov
lcall
inc
ss
outsb
sub
sub
jg
add
stos
xchg
jae
cmp
push
cld
lret
repnz
es
fldt
mov
pushl
or
cwtl
push
or
cld
scas
cmpsb
mov
xor
fiadds
pusha
pop
push
xchg
and
mov
xchg
in
sbb
adcl
adcb
je
add
lods
and
or
pop
jne
adc
jp
mov
sahf
icebp
or
hlt
ret
lock
scas
pop
roll
or
cmp
in
ffree
daa
ds
pop
nop
cmp
jle
xchg
adc
mov
push
clc
pushl
xchg
jb
jae
sub
cmp
jge
inc
setns
pop
push
imul
das
sbb
sahf
push
sbb
aad
pop
jge
push
mov
insl
and
add
add
inc
mov
arpl
push
push
mov
xchg
xor
aas
xorl
sub
or
enterw
fisubrs
nop
movsb
data16
arpl
aaa
xor
ljmp
leave
push
cmpsb
add
pushl
dec
testb
loopne
ljmp
je
push
in
xchg
arpl
xor
lock
jno
and
dec
xor
jbe
in
insl
xor
gs
lahf
in
iret
xchg
inc
gs
dec
loopne
pop
jecxz
jge
mov
jnp
add
lahf
add
cmp
lea
decb
dec
call
xlat
aas
arpl
cmp
ljmp
jbe
add
add
pop
divb
and
cs
inc
mov
mov
addr16
xlat
sub
leave
push
mov
test
ret
dec
aas
sub
jnp
pushf
scas
jle
scas
in
cwtl
int
inc
mov
aas
mov
loopne
jmp
and
std
in
mov
push
cmc
inc
lods
adc
xchg
mov
mov
inc
inc
mov
addr16
or
mov
push
jp
xchg
lret
incl
jno
cwtl
inc
mov
ficompl
mov
shlb
jg
lahf
cld
add
jge
mov
lahf
fldenv
fsubl
les
cmp
jg
push
sbb
in
add
dec
popf
cwtl
mov
mul
and
aaa
pushl
data16
push
sub
push
dec
cmp
xchg
pop
popf
sub
ljmp
ljmp
or
int
lret
dec
mov
test
call
decl
inc
jno
push
fnstenv
into
fdivl
lock
fbld
mov
lods
call
cmp
or
dec
or
decl
xchg
fistpl
or
lahf
adc
pop
movsl
xor
arpl
cmp
std
clc
fildll
loopne
mov
adc
stos
outsb
popa
out
jnp
test
dec
std
push
or
adc
into
scas
add
xor
ljmp
stos
dec
sbb
icebp
dec
dec
bound
imul
fidivs
lcall
mov
xchg
adc
mov
cmp
out
clc
jg
jl
jge
popa
movsl
icebp
les
push
pop
inc
push
xchg
sub
cs
call
repz
fstl
mov
mov
xchg
pop
mov
jmp
or
jne
cmp
sub
xchg
xlat
xor
loope
decl
into
mov
repz
jp
int3
ret
movl
cmpsb
bound
and
dec
std
lret
sbb
jp
shl
pop
outsb
icebp
mov
das
jbe
imulb
outsb
pushf
call
movsl
ror
rolb
adc
xor
rorb
cmp
sbb
ficoms
jg
inc
in
push
mov
ss
xor
inc
xlat
pop
iret
mov
incl
push
jns
lcall
les
cmp
shlb
pop
scas
push
leave
in
lcall
or
fwait
stos
jbe
aas
jo
cmp
sbb
stos
jae
fsubrp
xchg
movsl
cmpsl
ret
pushl
add
ljmp
dec
jns
adc
xor
or
call
icebp
jg
push
xor
in
add
gs
push
push
test
cmp
push
jg
scas
incl
inc
arpl
mov
xlat
imul
push
mov
dec
dec
xchg
mov
ds
movsl
lcall
les
insb
cmp
mov
xchg
cmp
dec
clc
or
ds
call
adc
mov
ja
mov
dec
inc
or
movsb
cli
lcall
xlat
pop
out
ljmp
fidivrl
cmp
jne
outsl
mov
in
or
data16
aas
jl
test
je
notl
mov
addl
cld
mov
cmp
sub
adc
and
push
push
rcrb
imul
jmp
cwtl
nop
iret
xor
jb
fldl
mov
ljmp
sub
imul
sahf
shlb
cld
les
adc
inc
xchg
or
leave
dec
cli
lahf
xor
scas
jg
or
movsb
int3
cmp
xchg
call
push
loope
mov
movsl
xlat
fsubrl
test
sti
xor
or
mov
cmpsl
aaa
scas
mov
cld
scas
cli
mov
mov
sbb
mov
jmp
int3
jmp
cmpb
cwtl
leave
insb
cmp
movsb
jle
jmp
mov
shlb
push
adc
in
xor
arpl
xchg
mov
ds
hlt
lcall
xor
mov
divb
inc
imul
fildll
xor
add
pop
jnp
test
js
inc
sub
xor
addl
das
incl
scas
xlat
adc
aaa
cltd
iret
push
aas
pop
dec
sub
jle
push
cmp
std
ljmp
leave
dec
scas
loopne
mov
mov
pop
mov
aam
add
stos
jecxz
call
pop
shl
je,pt
fwait
jg
rcrl
push
mov
pop
bound
adc
pop
xor
ja
in
bnd
xlat
sbb
push
inc
jmp
inc
gs
mov
call
dec
mov
je
xor
movsl
or
lds
ret
lods
clc
push
call
hlt
hlt
ret
push
outsl
xchg
push
daa
icebp
sbb
je
mov
dec
fsubr
sub
or
jp
insb
sub
mov
scas
cltd
jae
daa
jg
xchg
addr16
test
jb
incl
lods
ficomps
push
push
inc
lds
push
cli
xchg
pop
jnp
in
pushf
and
mov
in
mull
push
cmp
icebp
mov
push
imul
inc
dec
out
mov
jne
cmpsb
data16
xor
call
add
out
jecxz
cmpsb
push
mov
cmpsl
subl
mov
pop
cmp
ds
add
and
lods
in
xchg
test
aaa
cmpb
adc
call
mov
addr16
pop
cmpsl
mov
cmp
cmp
loopne
aad
ljmp
fbld
fcomps
cli
jno
stos
or
in
mov
movsb
call
adc
jg
mov
jnp
stos
adc
mov
xlat
aam
sbbb
cmp
leave
mov
cmp
and
and
lock
lret
rcll
xchg
add
sti
repz
ja
cmpsl
mov
fdivrp
cmp
in
jb
test
jg
lods
mov
push
inc
fwait
sub
and
jb
xor
pushl
mov
test
sub
cs
ja
xchg
je
scas
loop
lods
inc
leave
pop
aam
aad
push
or
mov
js
aad
subl
aad
ljmp
xlat
insb
jns
rcll
mov
in
sbb
mov
cli
pop
das
hlt
popf
in
movsb
pushf
mov
jmp
adc
and
scas
loope
ret
pop
fistpll
icebp
jo
ret
jns
je
decl
lock
hlt
push
xchg
xor
cli
aas
das
push
popf
stc
add
cmp
or
mov
jnp
adc
add
shlb
pop
mov
incl
testb
int
jecxz
dec
mov
imull
les
mov
in
mov
pop
pop
ljmp
das
fmul
lock
jl
push
mov
jae
ret
and
cmpb
and
movsl
mov
call
subl
and
cmp
addl
cld
cs
call
stos
adc
ljmp
and
jne
loope
add
iret
mov
mov
pop
jae
xlat
fs
or
pop
das
ret
fcomip
popf
fs
cld
cs
or
or
push
cli
jg
push
cli
stos
push
fwait
sbb
iret
in
xchg
addr16
roll
mov
lea
addr16
ljmp
inc
divb
sbb
cmpsb
mov
cwtl
jl
fidivs
inc
add
lcall
dec
xchg
lcall
jmp
imul
rorl
and
sub
mov
xchg
imul
inc
popa
inc
rcrl
dec
or
ljmp
scas
call
sub
das
mov
rorl
mov
and
mov
outsl
xor
inc
cmp
faddl
push
mov
mov
pop
add
in
push
lea
pop
pop
rorb
adc
sub
ljmp
test
std
sub
jnp
loop
das
mov
sti
leave
jg
out
jae
lods
cs
push
pop
jmp
xchg
pop
mov
sub
pop
xchg
mov
call
pop
cmp
mov
pop
push
push
filds
xchg
stc
cmpl
or
jg
cmp
jno
mov
sbb
push
stos
das
cmp
nop
jae
fs
cmp
daa
imul
inc
cld
mov
sub
inc
mov
in
cmp
loopne
mov
jg
adc
lret
push
in
push
sbb
jp
test
mov
les
mov
push
into
sub
pushf
test
pop
outsb
arpl
xchg
ss
xlat
sub
add
jmp
testb
nop
sbb
jnp
pop
or
mov
leave
jns
fsubl
call
or
cmc
cld
in
inc
xchg
movsl
inc
add
in
out
adc
xorb
in
scas
incl
and
lea
xchg
cs
div
fsubl
sbb
jmp
or
lcall
mov
jb
outsl
popa
jnp
je
fnsave
adc
fdivs
incl
or
inc
mov
push
sarb
mull
and
outsb
popa
scas
jle
or
inc
or
push
dec
or
lcall
sbb
sbb
decl
sbb
add
cs
pop
enter
mov
pop
xchg
mov
mov
mov
fnstsw
pop
mov
pop
into
or
fdivrl
mov
decl
mov
cmpsb
xchg
addb
cmp
cmpsl
adc
sbb
xchg
decl
jbe
fidivrl
call
loop
pop
mov
loope
out
out
pop
mov
cmpsb
rcrb
lcall
mov
and
pop
pop
fldt
xor
adc
pop
les
mov
call
lcall
and
sti
push
pusha
hlt
test
je
xor
pop
adc
sub
mov
test
jae
cltd
mov
push
test
test
lcall
mov
out
rolb
daa
push
cli
cmp
dec
into
dec
iret
mov
fstpl
cli
nop
pushl
mov
mov
icebp
mov
pop
push
sti
lock
lret
sub
cmc
insb
shll
sub
lret
cli
fmull
xchg
cmp
addr16
sbb
push
push
or
mov
cmp
cmp
stc
movsb
and
std
cs
mov
adc
incl
push
push
loop
sarb
or
mov
mov
push
adc
shlb
push
ljmp
mov
xchg
adc
add
sti
jne
mov
stc
and
std
ljmp
sub
aas
popf
cli
push
arpl
idivb
outsb
lds
scas
dec
filds
aaa
out
cmc
fistpll
movsl
sub
xor
mov
mov
pop
scas
jno
jmp
xor
mov
pop
lret
or
push
sub
inc
jbe
aaa
mov
cmp
incl
xchg
jae
cmp
xor
cmpsb
lcall
mov
aaa
cmp
nop
sub
outsb
push
decl
add
fldenv
mov
cmp
sbb
cmpsb
out
movsb
leave
xchg
pushf
or
lahf
cld
into
xor
fisubs
mov
das
dec
add
in
mov
push
mov
pop
pop
and
push
xchg
cwtl
mov
test
aas
adc
incl
add
int
sbb
stos
ljmp
cmp
mov
xor
lahf
cmp
sbb
cmpsb
call
lcall
out
es
imul
js
cmp
icebp
iretw
sbb
xchg
jmp
dec
int3
lret
stos
pop
fidivl
es
cmpsl
movl
push
and
fistl
and
jmp
and
call
das
in
orl
xchg
ljmp
arpl
dec
push
and
dec
into
fsubrl
push
jo
mov
data16
scas
test
pop
jae
ljmp
mul
push
or
dec
add
sub
repnz
into
cmp
out
rcr
add
lcall
push
scas
xchg
shr
and
cmp
sbbl
xchg
sti
inc
inc
aaa
js
pop
div
pushl
xor
aam
mov
or
js
pusha
repnz
imul
test
pop
dec
xor
cltd
lret
es
mov
jp
ret
int
xor
pop
data16
mov
cmp
dec
and
call
mov
pop
add
mov
into
cmc
or
das
fs
jle
rep
pushf
pop
fbld
mov
movsl
pop
adc
dec
pop
stos
mov
mov
mov
stos
lcall
push
cmp
inc
add
mov
add
xor
xchg
stos
mov
hlt
mov
cwtl
lret
mov
cli
loopne
push
mov
test
fistps
adc
sbb
cwtl
push
icebp
rcrl
mov
lcall
sub
mov
and
pop
push
xchg
ror
scas
or
adc
sbb
jl
inc
jg
lret
fmull
les
test
inc
fnstenv
ja
imul
xchg
fdivs
and
sbbb
test
jns
sbb
ljmp
jbe
adc
in
int3
mov
pop
test
lock
inc
jne
cmc
mov
cmp
xchg
imul
mov
je
push
mov
rol
call
std
fimull
and
mov
dec
stos
add
lods
xor
fdivp
jg
xor
hlt
mov
inc
lds
scas
pop
sub
mov
pop
pop
pushl
inc
out
iret
dec
insl
lods
decl
mov
add
sub
icebp
mov
fwait
call
stos
dec
pop
mov
mov
imul
pop
lcall
lds
incl
inc
inc
xchg
adc
sub
sbb
cmp
aaa
add
lcall
cmp
pop
ds
and
out
fstps
sti
add
mov
mov
dec
push
push
or
call
mov
pop
repz
loopne,pt
or
adc
mov
pop
iret
sub
push
mov
je
fidivs
jg
add
add
outsb
dec
movl
shrb
jmp
sbb
jp
fmull
gs
push
leave
inc
inc
push
clc
lahf
push
ror
movsl
push
ficompl
call
in
scas
push
pusha
inc
jecxz
dec
scas
mov
mov
jae
cmp
cmp
xor
mov
inc
push
hlt
jmp
sbb
dec
popa
popa
dec
repz
fwait
rorb
ss
lcall
mov
stos
in
mov
std
imul
mov
mov
jnp
aad
pop
xchg
xchg
lock
bnd
insb
cmpsl
add
decl
cs
mov
imull
int
into
fimuls
jnp
jmp
mov
push
decl
int3
mov
inc
cmpsb
lret
movsl
add
fists
push
sbb
or
outsb
xor
push
ret
push
jle
and
mov
cltd
add
pop
jns
cmp
xchg
out
mov
ljmp
sub
bound
xorl
mov
jmp
lock
fiadds
fs
xchg
adc
jg
xchg
cmc
loope
rcll
subl
jbe
lea
cmp
cwtl
out
decl
cmc
push
testl
sbb
sub
cmpb
mov
test
dec
jbe
xchg
movsl
fs
stc
and
pop
sub
iret
and
cmp
inc
stos
lahf
lahf
aam
push
daa
data16
decl
mov
movsl
sub
call
sub
gs
mov
loope
jo
lcall
std
xchg
insb
and
jle
cli
repnz
lods
shlb
jg
xchg
inc
push
mov
xchg
sar
adc
cs
pop
addr16
call
push
dec
cmpsb
nopl
mov
sti
ljmp
inc
dec
sbb
scas
aam
mov
jmp
cmpsb
into
dec
loopne
dec
fwait
xchg
andb
jo
mov
pushl
ret
push
mov
or
xchg
out
clc
adc
pop
sub
dec
xlat
hlt
std
dec
repz
shll
mov
fdivr
inc
arpl
sub
popl
fcompl
bound
in
push
out
iret
data16
decl
add
add
mov
cmpsb
mov
sbb
mov
js
jmp
lcall
mov
jnp
jg
push
xor
ror
push
popf
pop
shlb
add
jmp
or
mov
mov
pop
or
add
jg
sbb
rcl
in
out
push
jnp
push
lret
sbb
decl
mov
mov
sbb
negl
pushaw
jb
mov
int3
ljmp
aas
iret
mov
testl
push
pop
mov
dec
push
sub
incl
push
into
scas
pop
mov
test
push
xchg
stos
clc
int3
and
lcall
sbb
xchg
lea
jne
imul
stc
in
and
inc
leave
repnz
arpl
movsb
shrl
orl
xchg
aas
stos
and
in
jmp
cwtl
cld
ret
ss
insb
mov
add
inc
ljmp
xchg
jge
push
es
inc
dec
into
or
cmp
jp
scas
inc
mov
sbb
pushf
mov
sub
int
lcall
dec
adc
push
negb
sahf
in
inc
or
mov
les
xchg
push
arpl
shr
mov
mov
cmp
incl
fcmovnu
cmp
fimuls
subps
inc
and
mov
dec
out
mov
pushl
aad
movsb
mov
sub
and
mov
pop
cmp
push
ret
cwtl
repnz
ljmp
lret
mulb
jae
cwtl
xchg
add
aam
cmp
movsb
sbb
jmp
stos
cmpsl
fildl
adc
mov
shrb
inc
leave
push
push
rclb
call
dec
push
pop
pop
mov
out
insl
sub
leave
lahf
cmp
fisttps
mov
dec
dec
sbb
adcl
dec
and
pop
into
data16
aad
lods
jl
dec
ljmp
dec
hlt
es
pop
aas
pop
clc
xchg
fldcw
add
loopne
lock
inc
lods
clc
sbb
xchg
push
test
fcomps
stos
ret
or
frstor
push
xlat
std
xchg
insl
cld
stos
in
xor
mov
icebp
mov
call
xchg
mov
inc
add
in
int
inc
int
imul
incl
lds
lock
out
sbb
out
xchg
stos
scas
add
scas
pushf
cmp
ret
push
pop
out
stc
and
fs
jle
jb
mov
aad
or
ljmp
test
cmp
and
in
dec
inc
jp
pop
adc
mulb
mov
push
incl
les
mov
lret
cmpsb
jae
mov
pusha
addr16
cmc
lret
jmp
call
lods
add
imul
inc
testb
push
mov
lahf
out
mov
call
dec
je
cltd
cmp
lcall
popa
jmp
add
repnz
push
incl
and
out
adc
ret
out
sub
ljmp
push
lcall
pop
fnstsw
xchg
xchg
pop
cmpsl
xchg
xchg
inc
stos
rdpmc
jg
out
xchg
jmp
sarb
jg
pop
push
clc
inc
push
dec
and
jo
outsb
arpl
add
jae
movsb
pop
push
movsb
popa
or
lcall
push
mov
aaa
dec
mov
push
subl
mov
nop
repnz
mov
incl
je
xchg
cmpsl
inc
dec
cmp
clc
mov
repz
adc
lods
sbb
lret
push
sub
inc
or
xchg
sbb
push
sub
fimuls
push
ret
cld
fnsave
daa
aam
or
test
test
loopne
jnp
icebp
inc
lock
ljmp
loope
loopne
data16
insb
adc
jg
aad
adc
xorl
adc
fildll
mov
xchg
addr16
call
cwtl
out
cs
and
inc
pushf
mov
jae
mov
jnp
and
shrb
xchg
loop
xor
jbe
jb
inc
test
xlat
cmp
int
cmp
popa
rep
test
inc
adc
add
jl
cmp
jbe
sahf
mov
stos
nop
and
and
fisttpl
push
imulb
xlat
jg
lret
xchg
adc
fdivl
ficoml
fpatan
lret
cwtl
sbb
jg
decl
in
inc
lds
repz
bound
add
push
adc
jg
clc
fildll
adc
adc
mov
mov
sbb
push
es
sub
dec
pop
clc
decl
mov
adc
lret
mov
jb
mov
sbb
divb
xor
fstpt
cli
mov
jne
mov
mov
pop
cmp
push
in
xchg
pop
mov
mov
or
gs
jg
pop
movsb
mov
lods
jmp
jb
ret
mov
sbb
andb
decl
fcompl
mov
push
addl
sbb
lods
ds
lcall
push
lock
scas
inc
call
iret
bound
scas
add
or
mov
outsb
pop
bound
ljmp
jb
pop
vmaxps
xor
mov
lods
sub
pushl
lret
sub
and
fidivs
xor
cs
cltd
gs
cmp
xor
movsl
les
popa
bound
push
inc
pop
mov
mov
jmp
xchg
push
xor
add
xchg
add
xchg
pop
sub
mov
lock
lcall
nop
outsl
addr16
lock
push
add
lcall
shrl
les
cmp
pop
test
lahf
inc
and
cld
jb
ljmp
add
xor
pushf
ljmp
divl
push
aad
sarl
movsb
fs
mov
jmp
jge
cmp
call
mov
dec
xor
push
or
into
push
sar
mov
jnp
sub
push
clc
std
xor
insb
into
lods
pusha
cmp
orl
pop
pop
inc
lea
mov
sub
jg
imul
cs
jbe
sbbb
imul
push
dec
subb
stos
lods
out
mov
lret
test
loope
dec
subl
mov
js
in
out
add
dec
fwait
pop
jecxz
outsb
inc
test
jns
pop
xor
sub
inc
popa
cmp
sub
pop
push
xor
cmpsl
or
insl
call
gs
pop
scas
outsl
mov
pushl
pop
loopne
rolb
cmp
sub
test
mov
icebp
inc
mov
cmpsb
iret
xchg
adc
enter
inc
and
pop
sahf
sbb
jmp
in
dec
int
iret
push
cmpsl
mov
adc
dec
inc
cmp
lcall
sahf
pop
rsqrtps
movl
mov
add
jl
add
sub
ljmp
add
in
or
insl
aas
outsb
mov
mov
repnz
int
call
jl
dec
shll
pop
adc
mov
sbb
in
lret
mov
loopne
sbb
ljmp
popf
sti
ljmp
sti
pusha
arpl
push
cmpsb
dec
fnop
clc
pop
test
incl
scas
dec
cmpsl
pop
sub
out
outsb
std
push
test
shr
sub
ss
jg
decl
insl
cmp
sbb
jae
fcompl
or
xor
push
mov
call
jg
cmp
addr16
jnp
or
mov
mov
scas
lcall
or
mov
insb
out
pop
mov
out
mov
xchg
jmp
sarl
lcall
lcall
shll
xchg
je
imul
fsubl
inc
test
cmp
out
fmull
call
in
in
jle
inc
and
cmp
clc
xor
pusha
jae
sub
sbbb
cmp
decl
in
rorl
and
adc
cmpb
icebp
test
sahf
fwait
add
and
stos
mov
and
jg
hlt
inc
inc
loope
xor
mov
add
repnz
cltd
dec
sub
in
clc
decl
loopne
iret
cmpsl
lret
pop
ret
icebp
pop
add
pop
mov
out
das
dec
and
lret
ficomps
cmp
push
incl
cmp
add
add
pop
pop
movl
mov
push
jbe
out
mov
roll
mov
decl
mov
sub
sarb
lahf
pop
out
dec
mov
xchg
sbb
push
pop
enter
popa
loope
mov
lcall
cmp
jmp
push
cwtl
mov
push
xor
mulb
adc
add
sub
cmp
jge
xchg
outsl
pop
pop
push
jo
shrb
mov
add
add
pop
jge
xchg
outsb
jmp
in
leave
into
rorl
cltd
inc
movsb
lret
pop
add
or
pusha
test
stos
cmp
mov
jle
fimull
add
pop
pop
pop
mov
pushl
jmp
mov
mov
std
scas
inc
pop
add
xchg
push
in
clc
xor
pop
mov
nop
scas
adc
repnz
pushl
std
pushl
pop
dec
mov
xchg
push
idivl
xor
jp
mov
decl
mov
pop
adc
icebp
js
iret
lret
nop
enter
dec
jecxz
lea
cmp
mov
jmp
pushf
sbb
pusha
and
daa
lods
push
jns
pusha
jno
or
imul
sti
insl
cmpsl
push
shl
xchg
xor
push
jmp
shrl
leave
bound
into
jno
decl
popa
cmpb
xchg
push
popf
push
hlt
daa
aaa
std
ret
fsubs
xor
call
lcall
pop
shl
mov
adc
je
cmp
pop
addb
test
pushl
xchg
mov
cmp
dec
and
push
mov
je
stos
loopne
sbb
ljmp
sbb
mov
push
and
and
popf
lcall
and
mov
jp
mov
pushl
add
mov
aam
test
bound
aaa
js
cmp
idivb
pushl
in
jo
loope
sbb
cli
stc
into
push
mov
test
dec
fbld
or
inc
jns
ret
aad
ret
push
decl
pushl
adc
ss
sbb
les
loopne
int
pushl
stc
leave
push
sbb
or
addr16
mov
or
cmp
cmp
push
or
mov
lcall
pop
inc
mov
outsl
pop
sub
jbe
sti
adc
fdivs
iret
cmc
jmp
aad
imul
and
mov
int3
stos
xchg
cld
call
xchg
lock
idiv
pop
cmp
in
pushl
mov
mov
addr16
orb
push
scas
add
pop
and
mov
or
lcall
jg
sbb
fmull
test
in
pop
aaa
cltd
push
fnstcw
sub
aaa
repnz
fs
push
mov
in
shr
clc
dec
outsl
out
ja
lds
push
cmp
mov
dec
xchg
jno
aaa
and
jp
jmp
sbb
loop
scas
sti
pop
repnz
dec
fidivs
mov
xchg
imul
cmp
xor
mov
xor
sahf
dec
aad
hlt
movsl
fstps
lcall
jp
sti
xor
nop
push
push
sub
or
jecxz
js
sub
mov
movsb
je
jg
test
push
sbb
adc
pop
mov
pusha
pushl
cmp
sub
inc
xchg
data16
pop
add
jbe
inc
out
mov
and
test
jecxz
push
sbb
push
mov
test
fbld
xorb
gs
mov
std
incl
adc
or
mov
or
insl
dec
cmpsb
inc
xchg
sub
mov
xor
adc
push
cwtl
cmpsl
cmpsl
mov
add
and
dec
loop
mov
pushl
pop
xchg
aas
pusha
xor
jecxz
shufps
pop
pushl
repz
shlb
aaa
mov
scas
clc
dec
hlt
sub
mov
loope
xchg
mov
jp
shlb
jg
mov
rcll
jg
cmp
or
sbb
ljmp
sbb
cmp
sub
ljmp
xlat
iret
jbe
fldl
js
or
es
pop
shr
mov
ja
xor
jno
pop
in
jge
orl
jg
inc
mov
enter
pop
cmp
aas
and
lcall
fistl
cs
mov
pop
shlb
push
adc
decl
lods
inc
push
pop
mov
inc
cvtpi2ps
push
clc
leave
icebp
mov
adc
scas
ret
inc
lcall
repnz
xchg
fists
pop
push
in
out
inc
cwtl
lea
adc
ss
mov
jg
add
lcall
cmp
in
cmc
into
add
out
daa
out
push
fildll
movsb
fcmovu
sub
dec
subb
push
lahf
sbb
mov
adc
pop
out
mov
and
in
jne
push
int
sbb
hlt
in
cmpsl
jo
mov
xchg
es
call
ljmp
jbe
jnp
cltd
decl
adc
fstps
cld
popf
push
jno
inc
loop
adc
lods
sbb
add
jne
icebp
imul
cmp
push
push
jmp
cmp
fcomip
ljmp
dec
rclb
iret
stos
sbb
or
das
test
push
xchg
mov
cmp
sub
jmp
inc
negl
mul
mov
int
xorl
out
jmp
lahf
mov
dec
mov
jo
arpl
jne
add
mov
movsl
pop
sub
add
incb
ja
ret
fldcw
jecxz
popa
sbb
jmp
sub
xlat
pop
int3
cmpsb
data16
mov
mov
jl
lret
and
xor
scas
push
lods
pop
pushl
dec
mov
in
jp
dec
mov
movsl
hlt
pop
mov
cs
jno
fcmovnbe
imul
ret
jmp
jno
fldl
leave
adc
xor
push
xchg
ret
pop
or
mov
sub
cmp
ljmp
pop
stc
icebp
rcll
xor
push
shlb
mov
sarb
or
ret
mov
jmp
xlat
fldt
pop
sbb
test
lcall
push
mov
inc
aaa
mov
mov
test
std
add
inc
rcr
lock
inc
inc
dec
push
dec
iret
cmp
arpl
pusha
xchg
cmp
loope
pushl
mov
inc
mov
dec
enter
out
je
ja
lcall
push
adc
mov
mov
or
xchg
cmp
fists
jmp
mov
jg
add
inc
loope
popf
ljmp
ret
jmp
and
repz
roll
lcall
jbe
mov
mov
pop
test
call
roll
jne
or
xor
ret
lock
push
fwait
clc
push
or
sub
icebp
lret
fbstp
push
inc
jmp
mov
cmpsb
push
add
das
inc
xchg
and
aad
xor
pop
mov
push
std
fnstenv
bound
inc
in
insl
std
push
sahf
add
pop
icebp
sbbb
incl
popf
cmp
inc
xor
repz
imul
es
cs
sbb
nop
inc
jle
dec
push
incl
cs
pop
ret
push
jo
decb
pop
test
pop
aam
pop
arpl
lcall
mov
xchg
mov
jne
xchg
repz
cmovg
xchg
leave
push
lcall
fcomip
ja
add
ljmp
sub
xor
lret
add
fs
les
adc
decl
and
mov
cmp
mov
inc
cmpsb
ret
xor
shll
ljmp
ret
test
in
addr16
cmp
and
loope
paddusw
lcall
in
sbb
imul
cmp
std
mov
and
pushf
jno
xlat
xchg
mov
dec
and
mov
mov
pop
inc
push
out
pusha
xchg
pop
test
mov
call
ljmp
cli
and
adc
mov
cwtl
xor
dec
shll
out
nop
sub
in
or
int
call
mov
std
test
ret
mov
and
aam
mov
incl
adc
rolb
adc
mov
into
lds
sahf
cmovo
inc
push
fsubrp
mov
pushl
movb
sahf
lock
fsub
inc
mov
idiv
xchg
pop
imul
jb
outsb
add
add
inc
adc
adc
outsb
iret
cmp
std
pop
push
mov
xchg
inc
test
pushl
xchg
fs
jmp
adcl
add
bound
mov
loopne
and
in
ljmp
xchg
lret
loopne
or
push
clc
lcall
loopne
and
pop
add
mov
inc
cmp
sub
or
sbb
in
call
shr
xorb
mov
sti
addr16
cld
or
int3
or
incl
cmp
dec
and
ret
xchg
repz
push
out
divb
push
and
roll
call
dec
cmp
mov
add
aaa
mov
add
cmp
in
pop
call
aad
fidivs
scas
mov
loopne
ljmp
out
mov
shrl
push
pop
push
push
ffreep
aaa
fadds
mov
cmp
mov
jg
pop
xchg
jmp
sub
ss
adc
fsubrs
cmp
lret
lahf
xchg
fidivl
pushl
xchg
insb
fldenv
sub
rcll
movsb
inc
jae
shll
lcall
cs
leave
jl
xchg
lock
jne
adc
mov
jp
fdivr
jmp
int3
push
pushl
rorl
arpl
es
jle
sbb
out
or
jbe
or
cmc
jae
adc
pop
scas
daa
lret
in
jmp
pop
mov
outsb
pop
sbb
mov
sub
lret
decb
jle
imul
jmp
out
pop
push
das
jecxz
enter
pop
cs
ffreep
cmp
pmuludq
cmp
pop
cmp
outsl
mov
into
pop
es
fxch
pushf
mov
jl
pop
scas
adc
lcall
popf
push
inc
inc
ret
pop
lods
xchg
xor
inc
imul
arpl
call
sahf
adc
sbb
lock
sub
cmp
dec
mov
jmp
push
cli
sbb
lcall
inc
add
pop
mov
test
out
scas
mov
pop
test
xor
jg
add
mov
push
jle
adc
outsl
mov
movsb
rorl
in
or
jbe
push
rcl
shrl
arpl
mov
ljmp
test
push
sbb
push
js
les
push
push
jns
mov
mov
xchg
mov
push
jmp
sbb
out
rcrl
ja
inc
jecxz
add
sub
jno
sub
push
inc
jo
inc
stc
and
dec
test
ljmp
ljmp
fsts
dec
repz
iret
mov
cwtl
mov
mov
fwait
nop
and
mov
scas
push
jns,pt
mov
xor
enter
mov
push
jg
sbb
pop
or
and
inc
pop
ret
sti
nop
adc
adc
rcrl
dec
out
jo
addr16
insl
sbb
test
dec
jl
cmp
jmp
rclb
pop
jle
ret
mov
adc
addb
cwtl
insl
or
ret
mov
ds
pop
cld
lcall
pop
ja
add
rclb
mov
aas
push
aas
mov
push
dec
pop
sub
nop
ret
pop
imul
push
mov
psubb
inc
inc
pop
xor
mov
xchg
push
sahf
movsl
lea
mov
faddl
out
xor
decl
and
mov
pop
mov
inc
pop
sub
push
jg
addr16
test
mov
jo
jp
push
pop
arpl
mov
popa
cmp
jl
jmp
je
sahf
cltd
imul
jle
lret
ljmp
push
ret
fadds
in
mov
pop
jmp
popf
inc
stos
sub
popf
cwtl
dec
jg
xor
adc
or
pop
sub
outsl
sub
scas
outsl
hlt
adc
insb
mov
jmp
enter
mov
in
adc
ret
lea
test
repnz
push
int
gs
sub
call
sbb
or
xchg
ljmp
ret
ud0
jmp
xor
std
hlt
arpl
dec
jbe
sahf
aaa
pushf
pmulhuw
inc
lahf
cmpsb
xchg
xor
pushf
cld
adc
ja
cmpsb
xchg
xchg
cwtl
cmc
push
xchg
sti
jbe
into
push
popf
jns
femms
leave
stos
imul
jmp
mov
mov
mov
scas
int3
and
or
cmp
inc
adc
aam
cmp
jmp
add
inc
jp
lock
mov
or
inc
decl
incb
js
xchg
mov
lods
sbb
or
push
fcmovb
xor
scas
jno
xor
or
in
popa
sbb
sbbb
inc
incl
and
mov
mov
inc
out
cli
xchg
cmp
mov
jmp
push
fwait
dec
jbe
jecxz
roll
add
xorl
mov
sbb
out
cli
sti
jp
cmp
int
push
jb
sbbl
ud0
test
decl
pop
leave
cmp
aad
lea
or
iret
sbb
push
das
cmp
push
push
maxps
decl
xchg
mov
imul
test
push
jl
dec
jle
repnz
popa
mov
nop
sar
inc
xor
xor
sahf
fisttps
pop
dec
pop
cs
xchg
add
out
outsl
icebp
ljmp
or
scas
clc
test
push
jg
xor
addr16
xor
lcall
in
push
mov
std
mov
push
xchg
mov
and
bnd
sbb
or
lcall
hlt
cli
and
mov
jl
mov
fnop
iret
popf
sbb
ret
je
pusha
mov
mov
dec
cmp
sbb
xor
mov
mov
scas
mov
das
clc
push
cmpsl
xor
cltd
xorb
sbb
popf
adcl
clc
push
push
pop
mov
lcall
pop
sbb
sahf
out
push
pop
mov
fisubrl
call
mov
imul
and
sbb
add
xchg
xor
pop
call
std
in
jle
outsl
test
or
and
out
fcmovnb
test
movsl
mov
cmp
decl
add
add
pop
imulb
cmp
sahf
xchg
adc
push
inc
out
and
dec
adc
jae
cmpsb
sti
sub
cmp
xchg
lret
push
jl
aas
fstp
dec
leave
cmp
ret
adc
mov
mov
jl
call
sub
loop
and
outsb
pusha
decl
fs
dec
adc
repz
out
pop
xchg
ljmp
lcall
sbb
pop
add
bound
inc
sbbb
aaa
jge
incl
cmp
xchg
sbb
and
cld
push
xor
lcall
in
lcall
jle
sbb
jmp
dec
add
es
test
cld
ss
mov
incl
xchg
je
jecxz
rcl
int
lahf
fs
jmp
mov
push
inc
mov
cmpsl
call
iret
push
test
pusha
adc
bnd
bound
addb
mov
inc
sti
jl
inc
cmc
cmpl
pop
mov
xchg
mov
lods
mov
jecxz
jmp
mov
mov
jae
sub
pop
dec
loope
inc
mov
jmp
xchg
sub
decl
push
inc
jg
add
cmp
adc
push
lcall
insl
hlt
stos
jmp
sub
mov
hlt
lret
xchg
inc
test
mov
cmpsb
pushl
inc
popa
sub
cmpsl
xor
sub
pushf
push
push
cld
call
stos
icebp
mov
sub
cmpsl
sub
and
jae
adc
inc
jg
mov
pushl
jns
push
cmp
loopne
cmp
dec
out
mov
call
jb
mov
cmp
notb
hlt
sbbb
push
push
inc
cmp
push
xor
add
pop
std
pop
icebp
sub
ss
into
loopne
sbb
rolb
cmp
mov
inc
and
ds
pop
jle
inc
jb
sub
jb
mov
sub
xchg
jnp
ljmp
je
push
pop
or
xchg
mov
and
mov
mov
popa
adcb
out
mov
inc
clc
or
pop
stos
sbb
jmp
jle
jmp
lods
add
push
jae
sahf
mov
cwtl
xor
aam
xchg
jl
negb
decl
push
in
or
clc
popf
sbb
cmp
fidivrs
or
or
mov
inc
xchg
je
pop
adc
xchg
out
pop
xor
scas
mov
pop
rcr
and
fcomip
lret
loope
cld
aas
orl
insb
nop
sar
xor
mov
add
lahf
ja
sahf
jge
cmp
test
sti
fstpt
test
jb
sub
xchg
lea
mov
aaa
xor
jmp
xchg
aas
cmc
rcrb
dec
mov
fldl
leave
aas
jmp
mov
mov
cmpsl
in
push
sbb
and
outsb
or
sbb
fcomi
lret
cltd
stos
jg
call
pop
mov
lods
mov
sbb
jle
les
dec
repz
lcall
into
out
sub
push
in
pop
loope
sbb
add
xor
aas
jns
mov
dec
pushl
sub
popa
int3
mov
cmp
and
push
js
insl
dec
or
repz
dec
rolb
mov
jnp
sub
pop
addr16
mov
jmp
stc
stos
push
test
int
mov
push
and
shr
lock
incl
and
mov
adcb
into
xlat
dec
repnz
arpl
push
int
loopne
icebp
decl
xchg
outsb
cli
pop
adc
fwait
mov
sbb
aaa
cmp
clc
call
cld
in
xchg
ret
rorb
rcll
mov
pop
sub
ret
or
add
cmp
idivl
or
dec
push
cmp
jmp
addr16
loopne
lret
sbb
lahf
sub
xor
inc
or
ds
ljmp
das
shlb
fwait
mov
adc
mov
int
push
and
stc
cmpsl
mov
lcall
fmuls
cmc
mov
cmp
shrl
add
jle
push
cmp
incl
push
in
xor
xchg
inc
adc
sub
xchg
add
enter
paddd
call
or
cmpsb
fwait
adc
loop
jns
jnp
push
add
out
and
test
inc
xchg
nop
pushf
icebp
jg
mov
mov
divb
jne
inc
insl
das
cmp
std
lcall
sar
movsb
mov
adc
mov
xlat
fldln2
pop
and
dec
popa
xor
push
dec
sub
jno
push
lea
repnz
lods
cmp
test
cli
mov
in
in
loop
in
std
mov
jns
mov
dec
cltd
jb
scas
jg
dec
out
adc
call
push
sbb
lock
or
push
cmp
add
mov
es
add
scas
dec
pop
je
js
lods
ret
ljmp
icebp
lcall
mulb
sub
add
fildll
xchg
xchg
push
pop
out
mov
pop
lods
pop
pop
adc
mov
scas
sbb
stc
or
sbb
sarb
stos
lods
add
loopne
pop
inc
loopne
fwait
js
ror
or
movsl
jge
shlb
add
cld
jmp
mov
dec
mov
fcomip
or
xchg
into
in
cld
adc
xchg
cltd
mov
rcrb
inc
lret
fbstp
jmp
outsb
test
adc
fidivs
pushf
fsubrl
incb
pop
fucomip
jle
mov
adc
fwait
std
dec
into
mov
sub
call
in
xchg
addr16
mov
or
sti
imul
notb
fsubs
xor
push
fists
cmp
inc
xchg
cmp
and
and
popf
fdivs
hlt
mov
in
jmp
in
push
mov
fidivrs
dec
cmp
adc
mov
fildl
cli
jb
sub
mov
cli
leave
pop
jle
pop
ja
out
gs
add
jae
cmp
rclb
dec
test
jge
fs
outsb
fsubrs
mov
push
sbb
rclb
fists
push
aam
xor
xor
lcall
xlat
ss
shl
and
fs
aas
arpl
push
fsubr
adc
in
loope
jmp
and
cmc
pop
in
add
ds
cld
shlb
add
jo
cmp
rclb
incl
adc
cmp
ret
xchg
inc
enter
pop
out
push
or
lock
call
cmpb
rcll
ror
and
scas
hlt
cmp
dec
mov
mov
jmp
in
jl
cmp
sub
mov
pop
int
filds
gs
xchg
repnz
mov
jle
mov
incl
cld
lcall
jecxz
jne
inc
ret
cmp
iret
xlat
in
dec
mov
out
mov
xchg
loope
dec
in
push
pop
cmc
xchg
cmpsb
xlat
rorl
sbb
ljmp
cmpsb
call
loop
sub
call
xchg
pop
jne
incl
jne
out
xlat
call
fisubl
xchg
pusha
sub
jl
xor
pop
xchg
incl
clc
sub
sbb
cmp
dec
movsl
scas
cmc
fwait
dec
jecxz
mov
xchg
xchg
nop
mov
adc
dec
test
addr16
sub
fcmovu
lock
fadd
sbb
mov
mov
lcall
mov
js
inc
pop
xchg
push
and
pinsrw
mov
pop
decl
sub
push
pop
push
and
sbb
or
xchg
repz
lret
add
xor
fmull
mov
cmp
sbb
pushf
cmp
mov
in
mov
mov
xor
mov
ljmp
and
fidivl
mov
sti
stos
int
jae
add
aad
or
pop
xor
sbb
pop
int3
mov
mov
incl
push
push
pop
sub
lock
lods
int3
xchg
inc
jg
stc
sub
push
xchg
test
daa
mov
daa
pop
sahf
cwtl
sbb
cmp
shll
insl
mov
push
fistpl
mov
es
in
test
adc
insl
daa
int
jp
sub
decl
lcall
popf
pop
add
pusha
push
es
xchg
andb
and
push
mov
sbb
mov
test
push
out
loop
sbb
push
inc
ds
lcall
jbe
jnp
ljmp
xor
or
stos
es
mov
lret
xchg
and
aad
jecxz
int
pop
cld
lcall
jae
sub
test
pop
leave
adc
enter
in
cli
decl
cmpsl
js
fcomps
test
pop
stc
jmp
clc
push
popa
jl
mov
icebp
adc
dec
jmp
xor
push
inc
popf
repz
and
rcl
ret
movsb
stos
out
shll
cli
pop
jns
repz
or
enter
cmc
bound
iret
insb
adc
cld
test
pop
cmp
jbe
imul
aad
stos
jp
xchg
jbe
and
pop
stos
in
lods
mov
ret
pop
xchg
jnp
sti
pop
mov
sub
mov
xor
rolb
mov
ds
sarl
lock
cmp
sub
xchg
rcl
decl
frstor
dec
in
fwait
push
sahf
aaa
ret
aas
insb
xor
ds
lahf
push
jbe
mov
dec
daa
icebp
lret
rcrl
sbbl
ljmp
enter
and
pushf
mov
inc
mov
xchg
lds
add
lods
ljmp
movsl
insb
paddq
cmc
or
dec
jmp
imul
test
xchg
and
push
and
push
jle
sbb
cmp
push
pop
jns
pop
xchg
ret
call
mov
daa
mov
loop
inc
fnstcw
lret
inc
mov
pop
mov
cltd
pop
sub
mov
stos
inc
clc
push
cli
add
mov
pop
std
ljmp
push
xor
push
int3
sub
aam
sub
test
mov
pop
cmc
call
icebp
and
ljmp
loope
out
sbb
mov
jl
aas
ds
jg
jmp
repz
and
ret
xor
fstp
mov
in
insl
xchg
mov
push
xor
jecxz
xchg
adc
push
lret
in
mov
lock
mov
inc
fistl
sbb
rol
cli
or
sarb
mov
std
push
cld
aaa
xchg
pop
xor
jle
jne
js
push
mov
out
adc
push
int3
mov
dec
xchg
xchg
xchg
call
and
or
push
pminub
sub
out
and
lcall
or
jp
inc
add
and
pop
sarb
and
mov
ret
adc
out
sbb
inc
sarb
inc
int3
addb
dec
ljmp
cmp
fcomip
incl
sub
push
push
and
xor
xorb
call
call
ds
push
cli
mov
jnp
and
jp
fs
inc
push
shlb
shll
push
clc
mov
sbb
cmp
pop
lods
jnp
js
add
mov
add
jno
sub
jmp
das
cmp
jbe
and
decl
jne
pop
sbbl
push
ljmp
jmp
add
cli
adc
xor
mov
iret
data16
sbb
adcb
inc
pop
sub
and
popa
sbb
fsubr
mov
frstor
pop
mov
ljmp
add
je
pop
hlt
pop
push
mov
mov
pop
movsb
and
mov
imul
push
rol
cmp
repnz
shrl
shl
cmp
cmpsl
lcall
mov
pushf
gs
cltd
hlt
inc
dec
lahf
cmp
or
imul
lea
pop
movsl
sbb
call
gs
inc
cwtl
jb
cmpsb
mov
incl
mov
add
inc
sbb
pop
ljmp
xlat
andb
or
ret
popa
lret
ljmp
stos
mov
movb
push
je
push
aad
adc
sarb
loopne
lock
sbbl
pop
xor
in
jg
or
sar
cmpsl
push
mov
shrl
and
lds
inc
lods
leave
lahf
sbb
call
push
jns
aaa
push
and
fbld
hlt
pop
xor
std
fcomip
lcall
ja
cs
arpl
xchg
lock
stc
es
jle
jge
or
ljmp
cmp
ret
adc
iret
jle
scas
hlt
leave
or
sbb
lret
sbb
or
ljmp
outsb
sub
mov
sbb
in
inc
mov
sub
xchg
lret
sbb
icebp
cli
test
out
out
fs
mov
dec
xor
incl
jae
mov
incl
add
imul
fistl
lds
add
lcall
outsl
pop
jo
or
les
aam
xor
inc
das
dec
pushf
push
sarl
repz
push
cli
shlb
mov
mov
push
mov
stos
mov
inc
mov
pop
add
cmp
jecxz
lea
in
int3
or
pushl
fwait
or
xlat
xchg
lds
push
ror
out
cmc
adc
insb
pusha
les
xchg
cmpl
lock
pop
or
adc
lcall
decl
aas
or
cld
vpsrad
pop
xor
into
add
lods
cmp
aas
arpl
sar
decl
add
outsb
mov
out
jecxz
and
das
idivb
movsb
sbbb
mov
les
fldl
test
leave
js
sbb
push
sub
out
incl
sbb
fsubrs
xor
pop
cmc
sub
sbb
lcall
jecxz
repz
dec
mov
cltd
add
xor
push
or
icebp
pop
fstps
loop
call
movsl
mov
fistps
or
daa
xchg
mov
test
push
push
and
call
lea
dec
paddd
stos
pop
jbe
xchg
inc
arpl
pop
jp
adc
jge
lea
incl
push
shr
inc
cltd
mov
cmp
xchg
fimuls
mov
mov
pop
push
xlat
cmp
loop
loope
xor
sahf
or
jnp
push
cmpsb
int
addr16
inc
mov
arpl
shlb
call
pop
in
in
cs
pop
cld
pop
xchg
insb
filds
inc
stos
data16
sti
leave
jae
scas
out
adc
call
loop
and
nop
jp
sarl
adc
ret
jbe
aas
repnz
mov
mov
in
rsm
insb
xchg
push
icebp
fstpt
jge
sub
pushf
pushf
mov
lahf
cli
inc
jp
cmc
cmp
sbb
fstpl
push
loopne
iret
pop
fbstp
adc
insb
and
decl
push
insl
jle
mov
sbb
jb
in
gs
sub
mov
add
call
pop
xchg
inc
mov
nop
mov
fcomip
mov
pop
stos
add
loope
lods
std
div
data16
adc
ljmp
xchg
fsubl
lcall
or
int3
jno
movsb
mov
cmpxchg
out
cmp
dec
pushl
fistps
js
aas
mov
ljmp
lods
inc
mov
sbb
and
fstpl
xchg
mov
cltd
fimuls
lahf
rcrl
push
lret
inc
divl
mov
mov
pop
mov
xlat
pop
and
adc
lcall
adc
mov
dec
xchg
xor
lea
fcomip
mov
arpl
ljmp
pop
mov
int3
test
test
lcall
call
fimull
cmpsb
aaa
fistpl
faddl
data16
frstor
int3
das
add
mov
out
push
std
scas
cli
xor
stos
or
lods
mov
xor
loop
divb
xchg
inc
push
mov
pushl
mov
pop
hlt
stc
aam
in
mulb
test
jne
stc
mov
imul
inc
call
fstpt
pop
mov
mov
lcall
push
es
lods
cmpsl
dec
dec
xchg
punpcklbw
das
rolb
xchg
mov
push
jle
sbb
sbb
in
and
fisttpll
inc
inc
ljmp
cs
jne
int
and
xor
icebp
inc
sub
pop
dec
rcll
pop
dec
dec
jbe
data16
adc
lret
adc
clc
cmpl
dec
jecxz
cmp
sbb
cmc
neg
loope
jg
jno
iret
fs
xor
rcrb
sar
jmp
lcall
lds
xlat
jp
push
call
in
in
jle
arpl
movsb
int
aad
loope
leave
mov
pop
jo
add
icebp
push
lret
test
push
or
mov
mov
jmp
or
aad
in
cli
int
xor
call
cwtl
ljmp
fxch
xchg
ljmp
cli
xchg
jecxz
mov
pop
lods
inc
mov
mov
push
lds
cmpl
pushl
fwait
orb
xor
or
xchg
and
call
aaa
mov
fnstenv
addr16
add
repnz
pop
sbb
ljmp
xchg
std
jbe
in
cs
jp
in
mov
enter
mov
jg
loopne
or
pop
gs
sub
fucompp
jg
pop
mov
jmp
in
mov
or
mov
mov
mov
ljmp
imul
xchg
rorb
gs
dec
call
pusha
adc
decl
cmp
push
divl
aaa
and
push
push
jl
push
lret
out
imull
out
clc
xchg
in
in
xor
gs
icebp
push
xchg
cltd
addr16
aas
xchg
test
pushl
repz
mov
mov
fdivl
movsb
aas
enter
mov
sub
pop
repz
es
icebp
adc
xor
or
sahf
das
inc
mov
cmp
pop
jbe
dec
push
xor
mov
xchg
add
call
negl
int
testb
in
mov
testl
movsb
pop
test
loop
dec
push
test
cmp
ja
scas
cmp
fcomip
sub
fcmove
sbb
ret
xor
push
pop
dec
sar
jmp
jecxz
bound
sbb
ficoml
mov
test
imull
aaa
xor
incl
mov
gs
call
in
push
or
pop
cmp
push
mov
mov
fisubrs
mov
outsb
fwait
lcall
js
stc
dec
stc
cmp
enter
sar
incl
cmpsl
std
fbstp
push
or
mov
cmp
cwtl
xor
pushl
cmp
scas
jno
aas
push
clc
sbb
or
dec
sbb
js
out
xchg
mov
push
jo
cmc
dec
mov
jle
dec
xor
ljmp
mov
test
stos
cmpsl
pop
stos
lcall
dec
das
gs
dec
test
inc
sub
lods
ljmp
mov
push
mov
call
sti
scas
xchg
lcall
stc
jge
int
enter
mov
inc
dec
pop
insb
incl
movsb
and
add
lret
call
test
xlat
inc
xor
int
ds
ljmp
mov
arpl
pop
jns
test
sub
movsl
adc
shrl
pop
adc
ljmp
xorb
repnz
mov
mov
scas
pop
repnz
mov
je
push
sub
lcall
insl
jae
call
mov
sbb
lcall
fxch
sub
pusha
adc
decb
subl
inc
cmpsb
mov
mov
xchg
je
pop
cmp
test
xor
pop
jne
inc
ror
push
movsb
push
and
mov
jne
adc
dec
add
pushl
scas
fistl
cld
icebp
leave
jge
push
scas
push
push
dec
sbb
roll
fs
call
dec
lock
add
pop
or
std
clc
mov
stc
or
pop
add
or
dec
adc
mov
decl
fsubs
mov
cmp
mov
rolb
mov
cltd
pop
add
ljmp
jle
ficompl
inc
test
jb
cmp
je
outsb
sub
out
mov
xlat
push
decl
fistpl
pop
in
mov
js
mov
mov
add
and
pushl
pop
adc
bswap
std
mov
jbe
xchg
mov
add
pop
fwait
ljmp
call
es
xchg
push
cltd
jmp
dec
ret
fldenv
sub
sbbl
or
mov
xchg
jl
push
push
or
cmpsl
mov
mov
pusha
inc
aam
push
outsl
out
and
fs
ret
incl
jl
ss
jne
sarb
sbb
mov
icebp
ja
push
inc
lcall
fcomip
cli
jns
mov
and
xor
gs
mov
jl
xchg
daa
push
popf
mov
incl
pop
mov
pushf
jp
js
jae
std
push
sbb
stos
sar
jmp
outsb
or
int3
dec
int
testb
push
sbb
mov
or
call
mov
dec
xchg
hlt
jne
adc
dec
out
rorl
decl
cli
pop
mov
push
mov
lret
das
sar
fcoml
fsub
mov
fcmovnbe
int3
lods
clc
adc
pop
mov
inc
jmp
cmp
sbb
test
pushl
insb
push
mov
fstp
mov
std
mov
mov
imul
jmp
mov
jo
cltd
mov
mov
mov
lret
and
das
sarb
adc
scas
push
or
fstl
lret
decl
cli
mov
bound
rcrl
xchg
pause
sub
jb
cld
add
jp
out
fxch
imul
inc
sti
hlt
mov
adc
fsubr
inc
pop
jp
cmp
mov
or
mov
outsl
out
adc
jmp
shl
ret
cmp
xor
push
mov
cltd
insl
mov
push
jmp
pushl
sahf
or
mov
rolb
sub
movsb
pop
or
cmp
sbb
xor
pop
mov
add
ja
cmc
add
jb
and
ffreep
into
inc
loopne
insl
rorl
or
popa
lret
imul
sub
jg
pop
shll
lcallw
add
and
jne
pop
lds
rorl
ljmp
adc
icebp
mov
xchg
dec
add
scas
push
orl
jg
jmp
push
std
jns
mov
hlt
pop
ja
ss
lret
xchg
mov
ds
mov
aad
jnp
cmp
pop
test
and
daa
jle
addr16
mov
call
sbb
pminsw
fcoms
jmp
xor
push
pop
out
bound
clc
call
jb
outsl
in
cmp
test
pop
xchg
xor
xchg
lcall
ljmp
imulb
daa
mov
lock
ret
xchg
cmc
add
ljmp
sub
fidivrl
mov
add
outsb
jg
and
gs
outsl
clc
jl
sub
xchg
mov
fs
mov
jl
jg
push
pop
mov
cmp
ret
sbbl
dec
push
push
jnp
mov
mov
mov
sub
movsb
mov
mov
jns
int
sbb
push
jo
or
dec
xor
xchg
in
aaa
jae
mul
sti
jp
push
fidivrs
adc
fdivl
mov
mov
stos
inc
aaa
and
jnp
cmp
das
pop
fwait
mov
adc
repz
lcall
add
sar
mov
lret
adc
cmpsl
sub
aas
or
mov
mov
fldl
xor
mov
daa
incl
adc
movsb
popf
ret
shrl
stos
clc
fwait
and
data16
mov
test
call
sbb
fcoml
stos
push
enter
insl
bound
pusha
lret
sbb
mov
std
out
scas
and
hlt
clc
adc
outsb
int3
adc
mov
or
dec
ljmp
adc
mov
aad
push
add
fwait
sar
jne
pop
push
out
addb
xchg
ret
subb
jg
incl
and
adc
lahf
add
adcl
decl
xchg
les
mov
xor
cmp
push
loop
ret
jl
mov
imulb
mov
cld
inc
fildll
jp
ljmp
out
lcall
test
sub
push
adc
add
pop
jb
jb
es
in
pop
mov
cld
in
or
lods
repz
idivb
sti
and
inc
mov
and
lcall
scas
or
mov
xor
test
sub
xor
pop
out
and
fcomip
xchg
jle
mov
mov
push
incl
jbe
jge
mov
aam
in
inc
cmp
incb
or
inc
lock
jne
mov
pushl
pop
xchg
push
pop
sbb
stos
add
jge
add
popf
test
jmp
jo
inc
add
cwtl
pop
nop
mov
jno
cmp
outsb
add
add
jmp
repz
sbb
push
mov
and
xchg
add
jo
lcall
test
rcrl
inc
lret
cmp
pop
xchg
mov
faddp
xchg
or
test
adc
pop
xchg
pop
test
jmp
aas
inc
xchg
cltd
loopne
push
in
jae
imul
push
js
jge
sub
and
stos
sar
call
mov
xor
loopne
pop
mov
enter
xlat
shll
jg
xchg
cmc
dec
lcall
xchg
test
jp
mov
sub
push
clc
push
cltd
push
rorl
cltd
jae
xchg
pusha
xchg
mov
loop
jge
daa
push
or
cmp
cli
int3
inc
push
mov
mov
in
outsb
int
lods
sbb
sbb
jl
mov
mov
fs
clc
loopne
sub
mov
or
push
addr16
addb
test
mov
faddl
pop
sub
mov
sarl
xor
sbb
aaa
cli
mov
incl
xchg
stos
dec
fdivrs
xor
mov
test
popfw
push
pop
ja
lcall
outsl
fadd
lcall
in
mov
imul
mov
ljmp
cmpsb
out
int
xchg
in
std
xchg
mov
jbe
imul
or
cltd
lods
dec
outsl
xchg
pusha
ds
popf
pop
add
ss
or
jge
nop
orb
negb
cmpsb
cltd
pusha
shl
jmp
movsl
sub
push
cli
shlb
lods
xchg
xlat
insb
fidivrs
in
add
imulb
pop
fcmovu
insb
icebp
sub
xor
pop
add
and
push
jp
dec
cltd
jmp
inc
ret
incl
sbb
and
inc
outsl
add
aad
fstpt
jnp
or
cmp
sar
ljmp
imul
js,pn
mov
lret
dec
sub
mov
ljmp
dec
add
repz
add
and
sarl
ret
nop
xor
es
and
loopne
jmp
dec
movsl
push
test
adc
adc
cmp
mov
test
inc
sub
jmp
rcll
xchg
aas
mov
sbb
arpl
in
mov
pushl
ret
test
decb
ret
cmp
push
fs
or
dec
push
push
lcall
pop
loope
mov
add
fadds
mov
jmp
jp
in
addr16
mov
xchg
pop
iret
mov
das
dec
push
aad
mov
lcall
cmp
mov
dec
mov
out
fwait
xor
incl
mov
sub
stos
mov
cmp
clc
and
mov
or
adc
push
gs
push
imul
es
inc
mov
sbb
sub
inc
jle
lahf
cmp
mov
jg
jo
shlb
dec
out
push
pusha
add
rcll
jbe
pop
push
call
jecxz
xor
outsl
pop
ficoms
push
mov
decb
in
xchg
fisttpll
or
shrl
and
xchg
sbb
decl
gs
add
adc
iret
and
addr16
dec
call
sub
call
add
cmp
pushf
cli
jle
fwait
imul
gs
pop
incl
jecxz
in
push
push
xchg
setle
cld
mov
movsb
jae
les
dec
pop
mov
movsl
xor
jl
rclb
mov
mov
mov
adc
es
ljmp
lcall
xorl
fcomps
cwtl
repnz
dec
xchg
xlat
fwait
jnp
or
mov
arpl
xchg
je
mov
and
test
xlat
jl
pop
mov
stc
addl
mov
int
jmp
scas
fisubs
dec
test
mov
bnd
pop
mov
lcall
ret
mov
adc
mov
adc
arpl
cmovle
mov
pop
pop
xchg
mov
lcall
shl
insb
lcall
push
cmp
mov
cmc
jb
out
and
jbe
lea
jg
pushl
pop
or
xchg
xor
xlat
push
lret
lods
popa
mov
inc
in
adc
fcomip
lcall
sbb
test
imul
test
and
push
out
pop
out
clc
jg
sbbb
pop
pop
fistpll
aas
mov
lock
add
sbb
cltd
in
ljmp
int
push
cmp
sbb
xor
pop
xchg
push
mov
daa
pop
sub
mov
test
ljmp
jb
inc
jb
lock
mov
inc
frstor
fsts
sbb
insl
ljmp
mov
mov
insb
fcmovbe
and
cltd
mov
test
incl
inc
leave
das
imul
or
repnz
add
fcmovu
pop
push
rcrl
mov
cmp
ljmp
mov
lds
pusha
dec
test
test
mov
call
xchg
sahf
xchg
or
mov
inc
mov
jno
xchg
jge
jbe
inc
or
mov
push
mov
mov
lret
mov
out
cmp
sbb
mov
stos
push
push
stos
jp
shld
imul
lcall
xor
dec
in
cltd
lods
pop
add
inc
cli
pop
mov
or
decl
arpl
frstor
sub
and
call
popf
out
outsl
ret
popl
push
sub
push
sub
rorb
enter
add
inc
xchg
std
aam
jmp
push
jbe
aaa
sub
adc
push
push
call
insb
into
out
mov
cli
add
push
mov
jmp
xor
pusha
ret
add
cli
mov
inc
push
mov
add
push
rcll
jnp
sbb
jnp
xchg
mov
mov
jl
or
fucom
mov
sbb
mov
pushl
mov
cli
mov
sub
jge
xchg
jbe
fisubrs
imul
std
fbstp
popf
push
pop
not
mov
pop
xchg
push
and
xor
pushl
stos
leave
scas
or
mov
lds
into
fstpt
pop
cmp
pop
fcoms
jle
mov
sti
adc
jnp
cmpsb
adc
in
sbb
xor
scas
mov
imul
lods
jno
jmp
fbstp
repz
inc
repz
mov
cmc
sub
mov
xchg
fistpl
jge
faddl
xchg
ret
lret
xor
jnp
arpl
and
test
std
pop
add
push
and
push
cltd
jmp
hlt
cmp
imul
ret
pop
loopne
pop
adc
xchg
aam
call
and
mov
loope
test
aaa
xchg
les
pop
aad
les
push
movswl
pushl
ret
daa
xor
xchg
dec
cs
pop
sbb
out
inc
jns
popa
jecxz
into
lods
pushl
or
sbb
inc
mov
and
divl
jae
lods
sub
outsb
ss
mov
fildll
scas
fistps
add
mov
out
insb
xor
pop
or
pushf
cld
sar
cmp
add
mov
or
int
iret
adc
pop
and
mov
dec
cmpsl
in
xchg
aaa
ja
stos
fcmove
sarl
jge
inc
insl
inc
pop
mov
fistpll
data16
inc
aaa
and
mov
clc
dec
pop
cmpsb
fcoml
loopne
pop
mov
pop
bswap
pop
add
fcomip
lds
or
add
jle
das
or
add
jl
int3
dec
aas
insb
sar
incl
xchg
add
mov
push
imul
xchg
and
push
pusha
je
enter
push
cmp
pop
or
insb
movl
int
adc
cltd
mov
incl
fnsave
or
clc
mov
sub
out
push
test
incb
push
dec
or
and
lcall
dec
cwtl
or
ja
pop
mov
insl
mov
cld
adc
dec
jl
iret
add
xchg
mov
mov
pushl
adc
cli
pushf
andl
fwait
sub
jmp
jno
xchg
test
incl
mov
enter
enter
mov
cmp
leave
or
je
mov
cmp
xchg
sub
fstpt
cli
outsb
test
ds
shrb
insb
jg
dec
lods
clc
aam
test
or
push
jg
pushl
xor
loope
fsubr
pop
ret
push
adc
dec
sti
das
lock
ljmp
xor
mov
cmp
xchg
dec
mov
inc
cltd
mov
jnp
pop
cmp
inc
sbb
repz
sti
lea
loope
je
or
jmp
es
sbb
mov
sbb
movsb
sub
loope
scas
aaa
fmuls
jecxz
ljmp
fimull
lcall
into
mov
enter
mov
mov
call
pushl
outsb
jl
and
xchg
cld
mov
adc
mov
js
push
adc
lcall
dec
aam
pop
inc
dec
xchg
mov
fnstcw
mov
dec
out
and
insl
pop
cmp
nop
pop
or
lcall
icebp
jb
pop
cmp
cmc
pop
jmp
scas
rcrb
pop
jnp
popf
sub
push
incl
lods
repnz
repnz
hlt
push
loope
push
into
fwait
imul
and
dec
xchg
clc
inc
mov
lea
ret
rcrb
mov
sbb
jp
nop
inc
mov
ljmp
in
cld
inc
pop
xor
dec
lds
mov
inc
pop
jbe
jae
rcr
repnz
inc
mov
stc
inc
icebp
mulb
xchg
or
inc
mov
repnz
adc
ljmp
mov
sbb
lahf
jae
pop
mov
gs
in
cmpsl
dec
push
loopne
mov
jmp
cmp
xor
cld
mov
adc
cmpsb
jns
mov
les
jmp
stos
loope
sbb
pop
push
or
fstpt
data16
push
inc
inc
lock
pushl
fxch
out
and
loop
std
dec
and
ja
pusha
out
or
jg
insl
lock
in
outsl
in
imul
mov
lcall
adc
jae
mov
ss
pop
call
data16
mov
shlb
xor
jmp
adc
leave
push
dec
and
popf
xchg
icebp
pop
pushf
cli
push
or
or
and
ljmp
in
jne
dec
cmpsb
leave
imul
test
adc
ljmp
dec
pop
cltd
jecxz
mov
inc
and
jb
sub
cmp
das
xor
jp
daa
push
insb
adc
call
out
mov
sbb
call
mov
xor
pop
push
decl
fstpl
roll
inc
enter
mov
aam
inc
push
in
nop
mov
call
lcall
xchg
inc
push
sub
xor
fsubrs
hlt
mov
cmc
jmp
mov
mov
mov
mov
inc
mov
mov
dec
scas
mov
jno
shr
and
lret
loop
adc
imul
inc
mov
jg
out
pop
ja
push
pop
sub
jmp
cmp
insb
loop
lret
cmp
pop
pop
repnz
decl
aam
negl
mov
dec
test
cmp
inc
lcall
adc
mov
jnp
inc
out
add
mull
sub
fadd
pop
decl
lea
pop
push
jge
decl
or
ret
cltd
xlat
sub
mov
mov
lcall
xor
inc
cmp
mov
mov
das
loope
fmull
sub
cmc
sar
ss
insl
fildll
push
cli
mov
in
int
ljmp
and
sub
sbb
xchg
lock
mov
push
push
ljmp
inc
nop
inc
pop
pop
scas
lahf
in
call
dec
cmpsl
enter
cld
mov
shr
decl
jl
scas
les
mov
ja
jmp
outsl
mov
nop
xor
and
fldenv
push
dec
lahf
scas
mov
or
call
adc
fimuls
pop
adc
std
add
fildll
loopne
adc
dec
movsb
add
pusha
lcall
fildl
test
add
add
or
mov
pop
push
or
or
or
add
adc
jae
js
push
adc
adc
push
adc
lock
pop
sbb
adc
adc
adc
add
data16
clc
push
lods
fisttpll
adc
pop
adc
inc
add
fldcw
sbb
add
add
add
adc
add
les
push
pop
push
adc
or
rol
jb
imul
cli
idivl
jge
add
add
adc
pop
and
xor
jmp
rcll
bound
js
sysenter
or
push
mov
inc
push
sbb
xchg
aaa
fadd
inc
sbb
test
push
push
xor
sbb
test
or
stc
inc
sbb
mov
xor
fisttps
add
arpl
scas
pushf
into
loopne
adc
push
lods
stos
add
pop
scas
cmp
adc
pop
lods
push
adc
pop
popa
jno
and
adc
xchg
mov
clc
and
lock
loope
icebp
mov
and
mov
xorb
scas
fiaddl
add
stos
js
jg
sar
sub
rcr
push
ret
xchg
and
sub
hlt
jnp
cmpsb
xor
aas
imul
fdivrl
add
mov
out
pop
les
shll
dec
mov
jg
mov
cmp
push
inc
out
cmp
xor
and
fistpl
inc
mov
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
sub
stos
pusha
xchg
pusha
add
std
or
incl
adc
sbb
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
fadd
dec
lcall
std
movsl
jecxz
pop
mov
xor
or
xchg
jg
or
insb
sub
addr16
out
jmp
sbb
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
decl
fisubrl
in
mov
orb
int3
lcall
fs
scas
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
lcall
sbb
lods
scas
xchg
test
aam
and
sbb
lcall
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
stos
lahf
fdivs
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
jmp
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
mov
jp
push
out
or
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
cmpsl
dec
sub
push
lcall
jle
mov
jb
mov
mov
mov
sub
pop
add
arpl
dec
jp
push
gs
jg
jg
aas
stos
hlt
push
add
stc
loope
mov
sar
andl
aas
icebp
idivb
aad
or
mov
scas
fadds
jmp
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
ljmp
sbb
jb
adc
push
lock
lods
jp
testb
jmp
sbb
into
fcomps
sbb
sbbl
into
andl
aas
loopne
mov
adc
aaa
xchg
in
add
inc
adc
loope
fnstsw
out
aas
std
cli
push
push
push
idivl
mov
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
ljmp
mov
scas
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
pushl
inc
cmp
sti
punpckhbw
cmpsb
orb
mov
clc
xor
jmp
xchg
pop
clc
outsl
pop
dec
fistl
hlt
sub
movsb
add
lea
pushl
jg
gs
std
xorb
jg
aad
adc
ret
call
loopne
das
pop
pop
pop
shlb
out
sarb
sbbl
jno
or
mov
cmp
pop
les
cli
mov
mov
inc
arpl
stos
mov
lcall
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
jg
call
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
call
ss
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
lock
decl
pop
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
mov
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
lcall
into
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
add
incl
das
adc
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
cs
and
jae
shrb
jmp
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
clc
mov
pop
cld
addl
adc
and
int3
mov
push
enter
jecxz
scas
sub
loop
sar
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
pop
jg
add
pop
iret
mov
jg
mov
aad
test
in
pop
mov
lock
mov
iret
push
jbe
lock
std
stos
icebp
pop
incb
jno
adc
push
inc
mov
jecxz
sbb
sarl
adc
loopne
sar
adc
jbe
mov
clc
sti
push
sti
imul
dec
push
in
aas
mov
shlb
loope
fsubrl
lock
and
pop
fadds
clc
xchg
pushf
mov
incl
in
or
and
mov
adc
inc
aas
inc
push
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
sub
pop
pop
nop
mov
inc
pushl
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
mov
decl
dec
xor
fsubr
fistps
lds
fidivrl
jg
jmp
stos
pop
add
dec
mov
sub
jge
xor
push
les
sbb
sbb
cld
addl
mov
jg
sbb
mov
lahf
outsl
int3
push
sbb
jg
xchg
pop
test
bound
pop
outsl
pop
loopne
push
in
jge
popa
push
test
jbe
jg
ljmp
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
sub
shl
cld
mov
in
mov
pop
jg
pop
shrb
rcl
jg
adc
xor
mov
loop
dec
mov
gs
pushf
lea
jp
cmp
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
ljmp
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
and
sbb
cwtl
inc
mov
insb
stc
push
mov
fistps
outsl
lock
in
jmp
stc
out
rcll
clc
push
std
mov
ja
jl
or
mov
xchg
pmullw
clc
decl
repnz
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rcr
hlt
mov
inc
out
pop
or
or
dec
ss
mov
or
repnz
clc
dec
cmc
mov
jl
call
std
testb
pop
in
cmp
jg
aaa
inc
jmp
mov
pop
lock
jmp
hlt
dec
mov
adc
xlat
inc
aas
mov
jg
mov
cmp
or
addr16
sbb
cld
daa
jp
std
adc
loope
fldt
cltd
or
mov
ret
nop
cmp
das
test
mov
lock
pop
pop
div
cld
idivl
scas
pop
or
and
loope
lock
fidivl
jmp
in
jg
push
jge
fbstp
out
xchg
add
out
ss
cmovno
mov
loope
mov
cmpsl
popf
xor
or
fbstp
push
daa
outsl
das
jge
insb
jp
add
cmpsb
cmp
call
das
js
data16
decb
adc
mov
and
call
mov
cltd
add
pop
nop
inc
mov
inc
add
sub
or
aaa
std
fisttps
aaa
mov
mov
push
jnp
rorl
ror
sbb
sbb
sbb
aaa
inc
adc
jecxz
loop
shrb
mov
pop
clc
loope
loope
mov
sti
stos
mov
dec
add
xlat
insl
in
jmp
xor
lock
adc
jne
push
cmp
repz
pop
and
sub
jo
sarl
pop
out
jg
jno
ret
movsb
and
in
or
out
iret
push
dec
jge
jmp
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
in
bswap
jmp
outsl
jmp
std
mov
daa
jmp
faddl
push
sub
mov
adc
dec
filds
pop
stc
push
dec
out
fstpt
mov
enter
fcoms
sub
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
call
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
or
inc
inc
leave
add
sti
push
sti
pop
inc
and
push
mov
push
mov
pop
cmp
int3
pop
iret
and
dec
push
push
adc
add
fwait
pop
ss
orb
nop
ret
movq
add
daa
loope
sbb
and
dec
mov
push
push
ljmp
or
call
push
xor
ja
xlat
bnd
lret
addb
inc
repnz
jae
bound
imul
out
aaa
and
jne
jo
imul
outsb
imul
add
add
cmp
push
inc
add
pop
adcl
mov
imul
sbb
into
outsl
add
lds
add
dec
fs
jle
sbb
and
inc
imul
push
dec
jo
daa
sub
push
adc
rol
dec
gs
jne
outsl
or
lods
loopne
insb
push
outsb
popa
jo
push
jge
inc
fwait
dec
sbb
sub
insb
xchg
aaa
dec
dec
jne
js
addr16
ret
adc
or
add
aaa
push
popa
insl
and
and
lds
inc
inc
jns
push
test
sub
incb
popa
jb
pop
adc
or
dec
or
jbe
dec
jp
popa
add
mov
insl
insl
xor
push
or
xchg
cmpsl
and
dec
xchg
jo
or
sub
add
sbbl
loopne
sub
adc
leave
dec
outsb
imul
es
pop
add
sub
or
int
sub
pop
out
in
mov
push
outsb
flds
sub
dec
inc
or
jae
cli
arpl
mov
insb
or
push
or
fisubs
mov
rcrb
push
pop
js
lds
inc
insb
jne
addl
data16
and
loop
lock
inc
sbb
test
lods
xorb
push
fildl
jbe
inc
push
pop
in
add
jo
and
jnp
push
jne
mulb
or
push
pop
jb
test
das
push
jns
mov
sbb
xchg
adc
sahf
mov
andl
fs
inc
jecxz
add
inc
hlt
std
dec
cmp
cmp
jae
pop
mov
sub
xor
rcll
or
pop
or
dec
packuswb
mov
mov
pop
pop
mov
test
sbbl
dec
push
mov
insl
adc
leave
stos
jle
jo
xor
arpl
mov
arpl
shrl
xchg
test
inc
inc
xor
inc
or
call
adc
add
imulb
test
imul
pop
and
popw
push
gs
test
mov
out
imul
mov
inc
xchg
shll
das
ljmp
jae
pushf
inc
or
inc
aas
js
pop
dec
inc
dec
or
inc
cmovno
cmp
or
pop
mov
dec
jb
push
push
cmp
in
jecxz
scas
fs
xchg
lods
xor
push
push
je
ja
mov
pop
inc
jg
pop
inc
dec
xchg
jo
cmp
xchg
pusha
inc
mov
cmp
out
jo
and
inc
popa
es
jp
and
loope
mov
sbb
push
jg
sbb
dec
enter
pop
addl
sbb
push
aam
or
in
loop
popa
pop
test
mov
mov
push
xor
sbb
jmp
mov
sbb
xor
lods
jne
aad
jns
adc
ficoms
inc
inc
mov
xlat
adc
inc
sbb
xchg
xchg
outsl
ret
mov
jno
sbb
fs
adc
or
push
es
mov
xchg
or
push
adc
push
mov
add
jo
lret
stos
loope
nop
andl
cmpsl
adc
add
cmp
add
out
ret
pop
aaa
cmp
inc
inc
test
xlat
test
and
dec
and
add
stc
pushf
push
jne
inc
fadds
adc
stos
inc
or
pusha
andb
xchg
mov
cs
add
mov
adc
cmp
arpl
xchg
jnp
addr16
pusha
push
mov
xor
mov
or
inc
test
inc
scas
cmp
addps
outsb
push
outsl
add
sbb
fadds
cmp
or
add
insl
sbb
sub
ficoms
xor
sarb
and
jns
jne
out
pop
adc
stos
add
xor
nop
or
arpl
sti
mov
mov
pop
adc
and
jg
mov
cs
mov
or
mov
sbb
inc
fisubl
mov
jge
or
fildl
sti
pop
lock
outsb
adc
lods
and
mov
test
cmp
in
sbb
jmp
sbb
cli
pop
push
je
lock
sahf
and
push
outsl
xor
jb
mov
fstpt
mov
inc
in
lods
jo
xor
and
arpl
insl
sbb
imul
or
mov
fistpl
mov
inc
insb
stos
ja
sbb
push
inc
insb
jle
cmovnp
pmullw
stos
fs
popa
mov
movsb
jae
cmp
adc
nop
fstl
inc
iret
mov
push
sub
js
inc
mov
and
sbb
adc
mov
inc
xchg
push
les
arpl
push
xor
adcl
dec
push
push
pop
xor
push
not
and
adc
mov
outsb
inc
push
push
adc
pop
or
mov
jnp
cmp
jg
and
je
insl
dec
outsb
dec
inc
js
loopne
scas
jnp
mov
jnp
sar
pop
add
add
mov
imul
imul
or
cmp
lcall
inc
push
addb
pop
adc
loope
repz
out
mov
shlb
mov
dec
and
jl
outsl
int3
ds
dec
movsb
bound
add
sbb
add
inc
jb
test
add
inc
jae
inc
push
imul
shll
sbb
inc
imul
mov
inc
inc
jo
sbb
push
ljmp
dec
rclb
dec
add
icebp
push
loop
je
mov
add
mov
mov
pop
push
loopne
mov
scas
rcrl
and
push
js
mov
push
adc
mov
aad
cmp
popa
fstpl
or
outsl
or
or
add
cmovno
fldenv
sub
mov
sub
jmp
xor
sbb
cwtl
scas
push
inc
jb
lods
fsubl
xor
cmp
ss
jl
shlb
mov
js
push
xlat
push
mov
pusha
dec
mov
jnp
dec
mov
popa
add
rcll
notb
fs
ret
pusha
mov
inc
cwtl
dec
push
cmp
push
push
adc
xor
int3
outsb
push
push
xor
gs
cltd
lret
inc
pop
dec
inc
insb
xor
cwtl
mov
in
and
inc
push
cltd
lret
lods
pop
and
dec
insl
jecxz
test
arpl
jo
popa
push
lret
inc
lds
ret
inc
and
and
xchg
mov
rcll
rolb
inc
fcomi
xor
call
jno
inc
mov
outsb
pusha
adc
out
mov
jno
or
pusha
push
mov
icebp
add
das
sbb
or
jo
cmp
mov
andb
ja
int3
add
pop
push
sbb
inc
iret
xlat
xor
jns
sbb
int
nop
inc
insl
inc
outsb
push
fs
cmp
outsl
rol
outsl
and
push
pop
lds
fisttpll
pop
aad
lahf
jp
add
push
adc
xchg
and
test
add
vmwrite
sbb
enter
push
addr16
or
flds
js
push
push
inc
out
adc
add
sub
lret
sub
jno
xchg
daa
inc
add
push
imul
mov
dec
jae
int3
lock
inc
ror
jne
subl
xchg
outsb
lods
movsl
xchg
add
jmp
jg
mov
sbb
adc
jp
push
cld
push
pop
faddl
push
inc
mov
add
inc
pusha
in
add
popa
adc
add
shl
loop
dec
add
adc
sub
jge
add
lret
cmpsb
mov
cmp
jns
pop
outsl
sub
pop
adcb
or
int
loopne
pushaw
push
add
cwtl
push
imul
pusha
push
mov
dec
mov
add
sti
lret
mov
pop
and
add
and
shr
jb,pn
popa
adc
push
call
push
out
inc
cs
adc
fwait
gs
out
add
insl
rcrb
pusha
dec
lcall
lahf
add
es
jg
add
add
and
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
add
