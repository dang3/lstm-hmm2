fcomp
decl
xor
add
mov
or
sbb
cmp
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
std
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
push
push
xor
push
mov
adc
cmc
inc
mov
fisubrs
les
adc
incl
sbb
clc
imul
add
push
mov
push
push
push
xor
je
push
push
push
push
idiv
data16
in
sbb
clc
add
pop
sbb
inc
pop
shlb
nop
jne
pop
pop
pop
lcall
repnz
add
or
inc
or
jle
dec
push
xadd
dec
test
jg
mov
mov
push
mov
mov
call
ret
pop
add
fdivr
inc
push
push
mov
pop
mov
mov
les
insb
and
lcall
xor
push
add
add
xor
das
dec
sbbl
jo
mov
fsubrl
push
xor
mov
adc
push
lea
push
ficoms
push
add
fcompl
sub
bound
rclb
ffree
add
xchg
dec
add
paddd
nop
mov
cmpl
jne
push
add
push
jl
jmp
addr16
sbb
add
xor
lcall
sbb
mov
push
and
outsb
pop
lret
test
sbb
sub
push
push
mov
adc
data16
mov
push
inc
lock
lret
xor
and
lds
bound
add
loopne
ret
filds
and
or
scas
and
fldt
mov
xor
sub
ds
lock
pop
add
mov
sbb
pop
mov
orl
jb
push
push
call
adc
in
mov
sete
into
xchg
push
push
into
nop
push
mov
test
mov
mov
aam
adc
cmp
out
fidivrs
les
add
push
push
test
sub
mov
in
add
jnp
push
xor
xchg
sbb
add
pop
das
add
mov
fwait
push
loopne
push
lock
lcall
and
daa
ja
out
sbb
inc
aam
xor
push
push
daa
inc
and
lea
or
jecxz
sub
mov
dec
jl
inc
or
out
add
sbb
lret
add
cmp
outsb
cmpsl
and
xor
imulb
sub
sub
mov
mov
and
mov
mov
mov
cmp
ss
adc
pop
cmpsb
mov
pop
ret
xor
test
out
adc
dec
push
sub
push
insb
insl
push
add
mov
mov
and
jl
call
sub
pushf
inc
les
leave
incl
cld
pop
sbb
sbbl
mov
clc
mov
sub
push
mov
dec
lea
mov
pop
subl
and
add
pop
pop
scas
push
and
ror
sub
push
in
push
int
pop
xchg
scas
roll
push
cmp
mov
xor
lret
cmp
iret
je
les
out
push
dec
sahf
add
lock
jle
es
in
dec
inc
bswap
push
add
call
inc
shll
movsl
incl
xor
lea
or
add
push
push
mov
insb
or
subl
movsb
sbb
inc
hlt
nop
test
adc
mov
mov
or
out
pop
push
push
inc
cmp
push
pop
inc
sub
and
test
jbe
jmp
and
dec
or
add
iret
xorb
cs
xchg
ret
push
lea
push
and
push
popa
cltd
fistpll
cmp
inc
xor
push
aad
sarb
insb
fstps
jg
dec
or
test
push
out
adc
push
sbb
add
or
pop
mov
popf
mov
pop
mov
jb
sub
push
pop
pop
pop
sub
xlat
sbb
and
dec
js
cmp
sub
sbb
add
add
rorb
mov
pusha
push
push
xchg
push
es
or
add
push
xchg
jbe
push
push
dec
sbb
fprem1
jbe
pop
push
pusha
sbb
sete
test
test
push
mov
or
and
or
andl
push
iret
xor
loope
xorb
xor
jne
int3
xor
and
test
cmp
pop
or
stos
pusha
dec
jp
stos
lds
add
jb
push
or
clc
inc
mov
inc
jne
add
jle
je
adcb
leave
adc
jne
mov
add
push
and
push
adc
rolb
push
and
adc
cmp
xchg
punpckhbw
add
and
xor
xor
mov
pop
push
push
adc
add
xchg
subb
or
xor
cmpsb
jo
push
push
and
stos
ret
pop
mov
dec
mov
loop
fisttps
cmp
mov
adc
or
pop
bnd
jb
pushf
sbb
std
ret
add
push
inc
pop
cmp
fdivrs
or
jo
push
adc
xchg
cmp
ret
jg
mov
mov
aad
sti
mov
jecxz
mov
and
icebp
sbb
adc
push
cmp
mov
add
test
push
and
out
call
leave
push
movsb
mov
test
mov
pop
cmpsl
in
and
and
or
and
std
adcl
or
mov
inc
or
jmp
sub
push
sub
dec
fisubs
jecxz
mov
sarb
lcall
push
mov
adc
jno
mov
mov
xor
xchg
push
inc
imul
fs
or
loopne
ret
sbb
mov
lea
data16
es
mov
shlb
or
rolb
test
xchg
cwtl
dec
std
or
mov
std
mov
xor
loop
adc
xchg
scas
std
inc
lcall
cld
mov
lea
and
shrb
call
push
inc
mov
sub
icebp
push
xchg
mull
sbb
scas
clc
adc
adc
fnstcw
test
or
cltd
out
xor
js
insb
or
mov
insl
pop
jg
mov
jmp
and
mov
mov
add
mov
push
mov
sub
sbb
mov
aaa
push
cmpl
lea
pop
pop
idivl
dec
xchg
or
jl
aad
mov
fisubrl
lcall
xchg
jne
push
icebp
pop
leave
int
mov
andl
dec
test
jg
adc
nop
cli
jmp
cmc
lea
add
insb
mov
shl
xlat
pop
pop
and
jmp
cli
jmp
les
xlat
xor
adc
jne
sub
stos
and
cmp
outsb
xlat
out
inc
movsb
stc
cmp
push
mov
in
in
test
bound
mov
leave
jae
les
sub
and
push
insl
lock
jle
jne
mov
or
xor
lock
inc
lods
sbb
push
icebp
fsubrl
je
sub
cmp
je
push
aad
ljmp
inc
xchg
fisttpll
shlb
mov
mov
cmp
test
mov
add
les
ret
add
mov
add
add
aaa
loopne
lcall
sub
cmp
ss
push
xchg
in
or
jg
jne
push
call
inc
cmp
jl
xlat
ret
incl
mov
ret
push
pop
xor
nop
push
js
jne
sub
in
xchg
push
adc
xor
jle
ret
mov
mov
cmp
add
pop
inc
push
dec
mov
inc
fdivrs
aaa
sbbl
ret
sbb
push
rorb
mov
mov
test
into
pushl
movzwl
and
add
je
push
cli
into
sbb
jmp
ss
mov
lea
add
inc
test
jne
sub
push
push
inc
push
adc
adcb
lock
xchg
lahf
xchg
push
push
or
jg
fists
mov
lds
add
in
push
ds
mov
insb
jne
adc
jecxz
rorl
pop
dec
es
lea
pop
jb
mov
add
iret
cmp
cmp
in
idivb
xor
mov
cmp
jl
push
xchg
xor
mov
pop
push
loopne
pop
insb
pop
pop
ret
mov
push
fwait
leave
or
orb
adc
jl
rcrl
or
loope
cwtl
mov
sbb
lcall
jno
mov
dec
or
pushf
je
or
shlb
rclb
push
loopne
fs
adc
lock
lods
pop
cmp
out
or
test
mov
std
mov
call
jge
push
call
test
scas
mov
or
clc
jle
mov
mov
jg
cmp
pop
mov
pusha
popa
fstpt
cli
sub
lea
push
or
cmp
mov
push
cld
adc
cmp
ja
add
jmp
pop
cld
ret
fcoml
add
push
aam
data16
adc
jl
inc
jo
jg
mov
fcmovb
inc
jno
cmpsb
add
pop
pop
dec
pop
ret
add
icebp
mov
test
inc
lock
fcoms
push
insb
jge
sub
add
mov
movl
or
and
pop
ret
adc
fldenv
adc
mov
dec
push
clc
rol
rclb
les
jl
lods
pop
pop
repz
ds
jne
enter
inc
xlat
add
jp
testl
mov
or
lret
repz
lock
pop
cld
cmp
ja
push
clc
lea
push
push
push
ss
arpl
or
rol
push
or
cmpsl
jns
mov
mov
loopne
pop
mov
sub
loopne
mov
jle
jg
shr
imul
scas
adc
push
js
loop
push
in
inc
push
push
push
or
mov
fcoms
push
push
lea
add
add
int
cmpl
xlat
or
or
push
rorb
or
sbb
pop
xorl
mov
mov
pop
test
ja
mov
cmpsl
jge
inc
add
pop
mov
pop
daa
out
or
decl
sub
cmp
je
cmpl
sbb
or
mov
push
jne
push
jno
sbb
imull
enter
test
push
lods
pop
mov
ret
lds
loopne
aaa
mov
lahf
lahf
push
hlt
push
push
cmp
shll
add
sarl
or
inc
or
mov
jbe
jo
mov
loop
jne
pop
adcb
pop
pop
ret
ret
arpl
incl
pop
xlat
stos
xchg
mov
fcom
or
pop
sbb
adc
rolb
lds
pop
data16
dec
inc
and
and
and
adc
loope
mov
or
push
mov
aaa
cltd
fcoms
mov
push
sbb
loope
stc
add
sub
pop
push
push
in
and
xchg
arpl
clc
inc
push
sbb
dec
push
pop
mov
mov
je
jno
jb
lret
adc
sarl
lea
push
sarl
jge
jp,pn
adc
lea
inc
dec
adc
adc
push
cld
popa
lods
mov
lea
lds
jmp
test
loopne
add
scas
add
mov
mov
mov
rol
jmp
ret
add
jle
add
shlb
ret
mov
sbb
int3
movsl
aas
mov
sub
cmp
outsb
out
xor
cltd
xchg
cmp
mov
enter
cld
std
sub
push
rorl
or
add
inc
adc
ret
push
jae
mov
test
ss
lock
xor
push
or
cwtl
orl
mov
cli
inc
jb
push
push
ds
mov
cmp
scas
popa
push
push
sbb
sbb
and
fidivs
repnz
mov
cmp
jl
add
rorl
inc
ret
inc
mov
ffreep
xchg
sarb
lock
fnstsw
mov
je
mov
xchg
mov
sbb
mov
add
pusha
mov
and
or
aas
fiaddl
jge
pop
je
pop
pop
std
adc
out
xor
sub
jmp
mov
cli
andps
inc
cmp
jb
mov
push
add
jb
mov
add
pop
mov
lret
ficoms
pop
ret
pop
xor
xor
les
add
in
xor
cs
cmp
pop
xchg
jl
pop
lea
pop
ror
shrl
in
loopne
pop
xor
mov
pop
pop
aas
sti
fldl
or
clc
shll
xchg
or
mov
les
adc
adc
adc
cwtl
push
jbe
cmp
or
cmp
sbbl
popf
or
push
test
das
aam
sbb
negb
je
adc
fidivl
jecxz
loopne
int3
mov
pop
mov
xor
sti
aad
clc
movsb
push
push
and
adc
pop
sbb
sarl
or
stos
mov
lock
repnz
daa
dec
std
sarb
jne
xor
push
push
fwait
sbb
jge
pop
outsb
or
sbb
rcl
push
mov
data16
inc
cmp
ds
inc
cmp
mov
test
xor
decl
inc
add
dec
jb
or
pushf
icebp
add
jmp
dec
lahf
inc
push
push
addr16
movsb
jp
iret
movsb
adcb
jnp
or
jg
sub
sbb
and
and
mov
pop
bnd
sbb
aas
popa
add
add
push
roll
decl
sub
test
pop
and
outsb
jae
stos
test
inc
or
fstp
push
je
cmp
loop
mov
mov
clc
and
je
or
out
iret
jp
scas
or
jne
push
fstpl
push
in
in
shr
add
adc
ret
pop
xchg
stos
push
adc
out
dec
mov
cmp
in
cmpl
inc
pop
sbb
and
jle
lock
lock
add
jmp
ret
pop
add
jne
inc
mov
adc
sarb
rcr
jle
repz
cmp
pop
mov
and
rcll
cmpb
aas
cld
das
cmp
mov
je
push
sub
sbb
jne
cmp
addr16
addr16
jecxz
xchg
jne
jle
jbe
cmp
mov
bound
faddp
xchg
cmp
sbb
inc
or
nop
idivb
inc
dec
adc
mov
add
repnz
cmpsb
negb
sub
sbb
and
pushf
cmp
dec
cs
add
mov
rorb
popa
imull
clc
clc
pop
push
mov
mov
cmp
or
pushf
push
fstps
leave
and
mov
mov
mov
push
sub
iret
pusha
rorb
jp
cld
cltd
popf
sahf
cwtl
push
lea
adc
popw
in
mov
push
in
mov
lret
sbb
shll
mov
popf
jns
cmp
jnp
orb
adc
jl
mov
push
mov
std
fldz
movl
xchg
lret
push
push
xor
sbb
and
in
xor
daa
je
pop
sbb
push
jle
mov
popa
aaa
in
sub
cmp
repz
xchg
lahf
mov
loop
jns
out
cmp
xchg
add
cmp
jns,pt
inc
cmpl
and
cmpb
rol
das
sbb
idivl
add
and
sahf
in
sahf
in
dec
sarl
adc
add
push
out
sbb
dec
ljmp
adc
dec
push
push
push
xchg
sahf
ret
aas
jl
scas
push
dec
mov
pop
sahf
cli
scas
clc
push
lea
push
ficoml
add
push
lea
std
mov
dec
cmp
push
and
out
aam
xchg
inc
adcb
pop
push
adc
jg
jle
xor
or
sbb
push
push
inc
adc
sbb
orb
stos
xor
in
add
jle
add
fiaddl
popf
lret
stos
inc
cld
xchg
fimull
xchg
call
test
mov
addl
fwait
inc
add
push
jle
ficompl
add
mov
nop
jp
mov
fwait
mov
or
or
into
push
mov
les
inc
cmp
ret
jle
sbb
aas
push
mov
push
cmpb
push
outsb
rorb
scas
xchg
sbb
mov
lock
sub
in
jno
xchg
out
sbb
xchg
movsb
lods
adc
pushl
mov
js
mov
pusha
push
lcall
push
enter
sub
add
lock
sub
setne
push
add
insl
dec
and
xor
push
mov
lcall
inc
ljmp
rcpps
add
test
pop
jo
lea
ret
je
lea
add
push
inc
inc
add
repnz
popa
inc
xchg
pushf
loope
pushf
push
mov
in
pop
jno
mov
sahf
test
mov
call
jmp
repz
add
cmpl
xor
psubd
mov
add
sub
scas
call
pop
jae
ret
jne
xor
jecxz
push
push
adcl
lea
fisttpll
adc
lods
ss
adc
mov
mov
insb
push
dec
dec
mov
push
push
xor
or
repz
je
dec
addb
enter
inc
inc
or
rcrl
shrl
and
mov
xor
sub
and
jmp
mov
add
sahf
inc
add
mov
add
into
cmp
aas
lcall
and
mov
clc
mov
push
push
inc
scas
adc
fadd
push
jns
mov
adc
cmp
xor
cmp
inc
movl
pop
cld
pop
fldl
sub
push
push
lret
pop
sbb
fisttpl
or
or
fistps
jmp
and
sti
cld
call
push
mov
sub
push
jg
push
mov
add
mov
cmp
xor
pop
jnp
cwtl
ret
adcb
lds
cwtl
sub
test
xlat
mov
addb
popl
movzbl
lahf
xlat
pop
mov
repz
xor
lock
lret
sbb
xchg
sbb
les
cmpsl
clc
push
cwtl
push
jl
sub
in
mov
inc
nop
push
loopne
mov
push
lea
sub
cld
incl
sbb
mov
sub
je
push
push
mov
mov
pop
push
push
push
and
push
add
mov
mov
in
aas
cs
jo
lret
push
cmp
jle
ss
icebp
pop
ljmp
cmp
subl
pop
test
in
arpl
sub
je
cmp
pusha
jne
andl
add
lahf
sbb
ret
das
ss
lea
jmp
pop
add
ret
xor
movl
push
pop
cmpsl
add
rcrb
pop
and
or
mov
addb
out
fisubrs
rorb
dec
xchg
xchg
push
xor
sub
dec
adc
adc
pop
flds
mov
clc
bt
push
mov
nop
mov
mov
clc
mov
push
xchg
stos
sbb
mov
push
dec
shrl
push
jne
push
mov
xor
jecxz
inc
and
addl
sub
ss
orl
xchg
lods
pop
push
pop
movb
lods
push
fstpl
movl
pop
mov
cmp
pushf
ret
roll
imull
sbb
movsb
cmp
jns
lods
and
dec
and
sbb
push
xchg
jp
mov
mov
sarl
test
mov
insb
xchg
mov
push
dec
sbb
in
popf
cli
push
dec
ljmp
outsb
in
cmpsl
sub
push
addb
inc
inc
sbb
mov
push
xor
pop
sbb
pusha
xchg
test
push
test
jge
push
nop
fcoms
clc
push
cmp
sub
push
push
lea
mov
subb
adc
js
aas
push
ds
test
push
cmp
or
js
jmp
bswap
ror
dec
addl
or
push
je
cwtl
adc
cmp
push
je
cmp
rcl
mov
inc
xor
mov
dec
add
ss
int
add
or
mov
mov
adc
adc
and
push
push
in
ja
push
and
jo
push
je
xchg
sbb
add
push
push
je
push
mov
bound
adc
xor
call
faddl
stos
jno
enter
shrb
xor
pop
cmp
fldl
fmull
std
add
divb
das
scas
inc
sub
cltd
inc
cs
test
push
add
sbb
movsb
lock
imul
inc
add
scas
addl
clc
and
inc
popa
mov
push
xor
dec
and
or
push
lds
pop
push
sbb
loop
jp
sub
add
mov
push
or
dec
inc
push
add
push
pop
push
jl
mov
scas
add
add
xchg
scas
jle
mov
cmp
sub
xchg
sbb
dec
or
or
adc
popa
adc
loope
cmc
and
mov
cmp
or
adc
or
adc
sbb
inc
orl
or
ja
push
push
insb
pop
jp
xor
push
xchg
push
fdiv
sbb
push
lds
pop
pop
xor
aam
cs
cld
add
cmp
jb
jge
add
je
mov
hlt
shll
jge
xchg
lock
clc
das
enter
push
cs
sub
push
adc
push
xor
adc
cmp
dec
or
jmp
push
pop
jnp
ja
dec
lea
out
xchg
add
add
outsb
loope
scas
iret
add
fdivl
or
add
add
push
mov
fmull
sbb
mov
int3
dec
push
push
push
scas
dec
ret
test
push
shll
ss
icebp
leave
add
fnstenv
ret
sub
sbb
add
xor
fsubs
call
mov
pop
dec
add
or
mov
add
enter
or
xchg
dec
enter
loopne
jo
insl
mov
les
pop
mov
sahf
rclb
loope
cmp
push
insb
add
cltd
and
ljmp
rol
push
sar
push
subl
daa
jl
dec
adc
xchg
add
cmpsl
mov
add
mov
mov
imul
sar
mov
shr
add
mov
imul
push
add
xor
shrb
xchg
jle
popa
fistps
add
jmp
mov
cmc
sub
mov
stc
add
pop
xchg
add
push
push
enter
lret
sub
sub
jo
test
pop
sbb
divl
jg
pop
arpl
cmp
jne
push
push
adc
sarb
jnp
cmpsb
mov
ficomps
pop
fsubrl
sti
lea
push
into
sbb
jp
adc
and
in
sbb
xor
out
testl
dec
push
dec
or
lea
adc
pop
jns
cmpsl
sbb
sub
jnp
push
adc
out
fisttpll
cmpsl
inc
out
pop
pusha
push
ljmp
cmc
sub
sub
sbb
jp
icebp
pop
push
adc
fstpt
cltd
idivl
je
add
aaa
ds
lea
pusha
jl,pt
sub
mov
mov
sbb
loope
add
mov
or
add
adc
jle
cmp
add
in
xchg
xchg
lret
jmp
jbe
rorb
popf
imul
imul
jno
jae
dec
sub
jge
jmp
mov
lea
mov
rclb
and
push
faddl
outsb
fcmovu
xor
sub
xor
mov
fdivrp
jno
ds
shll
mov
test
sbb
inc
mov
mov
mov
jns
inc
push
push
fsubrp
xor
xchg
cmp
add
or
mov
std
stos
mov
mov
je
add
loop
xor
pop
fiaddl
jo
pop
repnz
in
add
movb
addr16
sbb
stos
add
cli
mov
and
adc
jbe
inc
xlat
pop
shll
push
add
call
cmc
cmp
roll
mov
sbb
adc
xchg
mov
outsl
lahf
arpl
je
xchg
mov
xchg
xchg
and
inc
andb
xor
mov
fwait
push
dec
or
push
add
mov
movsl
jno
or
mov
mov
xor
sub
lcall
out
movsb
dec
sbb
add
nop
bound
fsubp
and
xchg
mov
scas
add
lea
or
inc
xor
mov
pop
lods
mov
sub
xchg
outsl
loopne
insb
pop
cmpl
or
into
aam
add
pop
ss
or
and
inc
mov
out
add
sbb
inc
or
add
sbb
sbb
or
sub
dec
cmp
add
or
add
das
jbe
push
push
pop
subb
push
pop
daa
ret
push
push
and
xchg
fisttps
fisttps
add
lock
jae
aaa
dec
push
lcall
fisttpll
adc
cltd
dec
bound
jae
add
subl
adc
or
adc
adc
inc
mov
add
movsb
inc
fsubrs
fidivrl
or
sbb
pop
sub
mov
pop
adc
mov
cld
jmp
pushf
and
sbb
push
loopne
add
sbbl
sbb
lcall
mov
shlb
or
mov
jle
adc
push
pop
push
repnz
xor
and
push
xchg
sbb
movsl
enter
mov
pop
ret
lahf
or
ret
sbb
adc
pusha
add
and
hlt
or
add
mov
adc
sub
clc
setb
jmp
clc
mov
sub
cmp
setae
lcall
enter
adc
pop
rorb
outsb
or
mov
mov
inc
mov
fimuls
aas
out
aam
push
inc
push
mov
lea
push
sbb
push
aad
push
or
es
pop
pop
loope
and
rol
loopne
adc
jecxz
sbb
outsl
mov
push
pop
cmp
and
jnp
inc
push
pop
in
inc
shl
adc
nop
sbb
sbb
popf
add
add
adc
ss
cmp
imul
dec
push
dec
push
cmpsl
sub
xor
aas
inc
dec
jns
adc
add
fidivrl
mov
iret
cmpsl
sbbb
mov
ret
push
pop
sub
dec
add
mov
jg
clc
push
ja
movzbl
or
cmpsw
rcrb
jno
or
jecxz
mov
divb
add
icebp
sti
add
jbe
cmpsb
add
adc
sub
add
or
or
xlat
dec
jo
adc
hlt
popa
aaa
daa
lahf
int3
hlt
xchg
cmpxchg
mov
and
ds
nop
pop
and
les
mov
push
and
inc
xor
jnp
add
add
cltd
nop
dec
pop
jmp
lret
dec
pusha
bound
sbb
and
sub
int3
je
inc
xor
aas
inc
xor
mov
xchg
sbb
cmpsl
and
jo
add
push
add
push
mov
xchg
adc
sbbb
jb
ss
adc
push
mov
cmp
xchg
and
xor
imul
icebp
push
or
lret
jecxz
mov
xchg
push
inc
push
std
lcall
pop
call
xchg
xchg
jne
xchg
push
push
mov
lea
dec
add
mov
add
sub
lds
mov
enterw
and
push
jge
movsl
push
bnd
mov
jo
and
popf
shll
inc
bnd
frstor
pop
imul
pop
or
push
sbb
dec
and
sbb
xchg
adc
push
in
cwtl
push
pusha
mov
pop
ret
aaa
repnz
loop
dec
clc
or
aas
push
sub
leave
es
rorl
push
stos
add
clc
pop
xlat
add
in
or
and
xor
xchg
cld
lods
adc
and
sub
jno
mov
movsb
mov
adc
popa
mov
sbb
outsb
pop
pusha
cmpsb
std
arpl
cltd
mov
adc
inc
or
or
xor
cmc
nop
push
and
dec
add
ret
hlt
push
dec
cld
shll
xchg
pushf
add
ljmp
fnstsw
sub
arpl
imul
outsl
add
and
sbb
dec
ljmp
add
loope
cmp
lea
inc
xchg
push
push
cs
dec
push
dec
add
loopne
fcmove
push
push
mov
out
inc
or
int3
cld
sub
push
inc
pop
sbb
adc
jbe
in
cmp
enter
dec
push
add
popa
jg
ss
add
add
fcmovnu
int
in
add
pop
sbb
mov
push
test
pop
push
mov
cltd
or
leave
mov
fisttpl
adc
add
add
cmpb
cmp
and
inc
push
add
jne
adc
nop
mull
mov
loopne
cltd
repz
rcrl
lods
cwtl
pop
call
mov
fwait
test
test
mov
sub
inc
fidivrl
inc
adc
or
add
iret
xchg
xchg
adcb
inc
pushf
cld
or
sbb
pop
clc
cmpsb
ret
mov
jo
leave
mov
cmpxchg
loop
sbb
inc
mov
mov
aas
cmpsl
aaa
pop
inc
es
pop
movl
in
ret
jmp
sub
sub
add
add
jl
push
data16
mov
pop
sub
xchg
int3
pop
insl
add
insb
xor
pushf
sbb
cmc
or
push
and
shlb
test
and
movsb
pop
push
mov
daa
and
add
test
out
or
sbb
push
jl
sub
mov
jnp
adc
cmp
dec
adc
add
addb
inc
fisubs
ficoms
ja
adc
jae
imul
lahf
sub
dec
popf
in
cmp
js
fcmovnbe
mov
lock
insb
mov
inc
insb
dec
sbb
insl
mov
inc
popa
fdivl
clc
adc
sbb
popa
dec
or
insb
push
jp
sub
sub
test
leave
inc
xor
mov
adc
enter
add
hlt
pop
xor
stos
push
dec
pop
or
mov
adc
icebp
inc
xor
mov
push
push
cs
xor
mov
jle
bound
fwait
iret
clc
adc
add
mov
int3
add
push
daa
add
maskmovq
divl
pinsrw
into
jo
xchg
ljmp
adc
jl
push
or
or
add
cld
sub
sbb
jb
adc
sbb
push
test
into
movl
jl
pop
in
jge
jne
cmp
push
popf
push
lret
sub
lods
das
xor
push
sbb
jne
into
jo
add
daa
pop
pop
mov
adc
add
ja
inc
shll
test
push
pop
js
es
or
push
xchg
inc
je
movsl
in
addr16
or
add
push
in
addb
push
and
pop
add
or
mov
pop
jne
inc
mov
or
ret
pop
mov
cmp
add
mov
leave
mov
push
test
add
add
sub
stc
cmp
sbb
push
out
add
lcall
roll
cmp
inc
aam
push
cwtl
xor
mov
fmull
mov
jge
sarb
sahf
inc
or
dec
rorl
sbb
push
icebp
adc
sub
adc
adc
cld
jnp
xchg
push
pop
push
mov
jno
xor
popa
mov
repz
mov
cmp
xor
loopne
sbb
sbb
xchg
roll
add
adc
jns
push
xor
push
add
and
mov
sbb
add
dec
push
add
and
adc
pop
mov
cmp
pop
addl
pop
cmp
add
sub
and
pop
jne
xlat
test
cmp
jmp
sbb
clc
adc
xchg
mov
push
mov
mov
pop
cmc
dec
adc
and
scas
rcll
stc
bound
or
cs
xor
and
and
xor
xor
jo
add
push
and
dec
and
xchg
mov
mov
jmp
clc
jns
or
orl
and
es
xor
push
cmp
repnz
dec
stos
and
xor
mov
push
adc
inc
std
fbstp
cmp
adc
add
popf
jno
push
cmp
xchg
add
test
call
call
xchg
xor
push
jle
push
push
push
orl
adc
enter
add
sti
mov
add
mov
inc
mov
jo
mov
scas
lea
fidivl
stc
mov
pop
rolb
faddl
mov
or
in
cmpb
push
or
push
outsl
mov
cs
inc
adcb
cltd
adcb
loopne
das
jnp
mov
sbb
push
loope
push
jbe
jno
jb
mov
sub
int
dec
fwait
add
xor
add
dec
into
jo
fnsave
std
add
iret
pop
add
and
lahf
dec
and
push
pop
inc
and
ds
cs
pusha
or
inc
add
pop
dec
leave
sbb
es
pop
add
push
adc
adc
mov
cmp
add
xor
xchg
js
ljmp
dec
mov
xor
sbb
mov
cmp
fs
addl
aaa
push
mov
and
xchg
or
jb
pop
pop
pusha
cmp
push
sub
test
pushf
ucomiss
cld
fiaddl
add
xor
jmp
jnp
and
and
imulb
adc
aam
es
xor
das
lds
mov
ret
mov
jb
push
mov
inc
cmp
stos
out
push
cmp
xchg
iret
add
rcrb
pop
fldl
and
hlt
fdiv
add
mov
sub
pop
xor
into
in
cltd
loope
and
xor
xor
in
or
jle
sbb
insl
dec
jge
push
or
or
movl
or
and
leave
and
xor
xchg
cmp
dec
sub
xchg
rolb
inc
rcrl
jo
or
imul
mov
mov
in
pop
add
and
inc
pusha
pop
add
inc
mov
cmp
jo
pop
sub
pop
push
mov
mov
testl
inc
movb
cmp
and
loopne
lods
inc
fistpll
inc
outsl
add
sti
out
adc
xchg
jl
aad
push
pushf
enter
movsb
and
js
inc
push
aad
hlt
ret
jnp
adc
test
push
rorb
mov
adc
call
and
add
or
add
sub
addr16
call
mov
sbb
sub
add
pop
aad
and
xchg
ret
cwtl
outsl
add
cmp
enter
sub
cmpsb
xor
aam
clc
movsb
movsl
lock
movsb
push
adc
or
jmp
hlt
push
popf
mov
in
mov
test
adc
ficoms
add
nop
sarb
push
sbb
xorl
jmp
jno
fs
das
sbb
into
cmpsb
push
clc
mov
mov
and
cltd
push
into
je
mov
cmp
push
jp
add
dec
jno
inc
cmp
sbb
popf
popa
mov
mov
fwait
int
xor
cld
adc
lds
inc
dec
mov
add
adc
scas
insl
and
xchg
test
add
roll
stc
roll
cwtl
pop
push
inc
mov
iret
shll
inc
out
mov
test
sub
pop
xor
jno
mov
iret
test
or
adc
or
loope
push
jno
rcll
int3
popa
mov
jge
shlb
mov
outsl
movsb
adc
pop
mov
testb
push
loopne
and
pop
enter
lods
push
mov
or
test
adc
dec
push
xchg
or
inc
jb
add
push
nop
out
adc
ret
testb
lds
xlat
cmp
push
inc
outsl
xor
push
mov
jp
ficoms
enter
jp
xchg
and
or
ret
in
or
pop
pop
pop
mov
add
je
mov
sbb
sub
clc
or
imul
or
mov
pop
sti
or
adc
jle
mov
enter
sub
nop
push
adc
adc
nop
pop
jmp
or
xchg
fadd
xchg
lret
or
nop
mov
orl
jb
adc
jb
adc
adc
lret
adc
dec
out
and
daa
cmp
or
and
sbbb
adc
push
lods
nop
cmpsb
and
and
stc
xor
sub
jge
push
or
cltd
jo
adc
xchg
xor
insb
inc
imul
add
adc
inc
and
or
inc
loope
mov
pop
es
dec
shll
js
js
adc
pusha
fstps
adc
mov
xchg
cmp
pushl
push
cltd
nop
or
add
push
and
add
testl
xor
mov
push
jb
nop
add
or
pop
and
sub
adc
sub
cs
push
sbb
rclb
sbbb
mov
cmp
sbb
adc
push
push
addr16
pop
pop
inc
fbld
sbb
dec
sbb
das
test
xor
and
mov
insb
popa
and
adc
jno
cmp
lcall
jae
les
nop
sbb
sahf
divl
int3
mov
dec
loopne
cmp
sbb
inc
jns
sbb
sahf
sbb
in
mov
mov
mov
leave
jmp
push
dec
and
ja
js
test
cwtl
shrb
mov
jno
adc
jbe
sbb
out
cmp
mov
add
nop
push
push
gs
sub
or
mov
sub
push
pop
repnz
mov
or
and
imul
mov
inc
push
sbb
out
mov
je
das
js
loopne
and
pop
push
xor
cmp
inc
fistpll
into
mov
int3
aam
push
mov
aaa
pop
mov
outsl
lret
fsubrl
pop
movsb
jmp
je
mov
or
xor
bound
mov
loope
ja
mov
adc
mov
and
or
inc
and
jg
xchg
test
popa
pop
mov
bound
stos
cmp
and
scas
dec
mov
mov
jmp
mov
jne
out
xlat
popa
and
pop
pop
je
sbbb
repz
xor
enter
cmpsb
xor
lea
shrl
push
inc
rcrl
sub
push
or
pop
add
and
fsts
dec
xor
push
or
mov
add
jl
js
xor
jb
xor
pop
mov
iret
leave
je
je
shlb
frstor
stos
lret
dec
in
add
and
call
out
adc
in
jb
mov
shr
lea
pop
stos
clc
call
push
jb
hlt
dec
clc
and
or
jge
dec
jl
sub
lret
cld
lcall
sti
dec
call
mov
jle
clc
jg
stos
mov
or
into
add
sub
push
addr16
lds
bound
add
xchg
pop
xor
shlb
in
rolb
jns
movsb
out
or
xor
pop
jmp
rolb
lock
dec
jns
lock
cmp
cld
movsl
mov
sub
mov
sub
and
xchg
pushf
test
push
inc
ret
fstl
test
mov
jno
mov
dec
or
jle
jb
inc
add
cmp
mov
lea
outsl
test
jb
push
push
cmp
sub
or
test
in
nop
inc
andps
or
sub
cmp
adc
jne
xor
test
mov
lea
aas
in
in
sti
imul
shlb
cmp
jecxz,pt
scas
xchg
addr16
add
test
subb
mov
inc
dec
pop
shlb
cltd
fildl
mov
and
lods
add
jg
scas
pop
movsb
xorl
test
fistpl
ss
cmp
adc
push
cmp
add
mov
outsl
pusha
add
je
add
dec
and
jnp
dec
sbb
scas
mov
cmc
stc
fmuls
jmp
xor
scas
test
jae
sub
pusha
or
mov
in
jo
add
add
xchg
jle
mov
mov
js
push
cmp
sbb
lret
call
push
movsl
addl
jo
subb
hlt
aam
push
xchg
test
jbe
xlat
jecxz,pn
orb
pop
imul
cmp
jle
add
rcrb
mov
ss
push
add
cmpb
mov
add
adc
mov
jecxz,pn
hlt
add
hlt
xor
sbb
sbb
jae
add
mov
cmp
push
mov
cmp
sub
xchg
add
push
loopne
les
mov
inc
add
inc
pusha
pop
setae
stos
push
pop
je
sbb
lds
push
aas
js
mov
jae
mov
orl
ja
sub
icebp
pop
lcall
sbb
aam
cmpsl
jp
mov
cli
add
adc
xor
add
sub
rcrb
jno
mov
mov
lds
add
dec
xor
into
sbb
test
sbb
dec
rolb
sbbb
adcl
shlb
or
and
add
loope
js
jno
or
cld
test
push
das
mov
jmp
or
or
repnz
mov
cmpsb
sub
sub
xchg
femms
aad
pop
xor
cltd
aam
dec
subl
push
imul
push
jb
add
imul
xchg
mov
dec
out
xchg
sub
enter
lcall
sub
add
or
dec
xor
add
push
sbb
push
jae
mov
hlt
push
dec
xchg
jmp
or
xor
dec
add
lret
cmp
push
fisttpll
xorb
cmp
inc
lahf
sub
lods
addl
and
push
push
jbe
fisubrs
jge
cld
dec
jmp
push
cmp
enter
test
push
or
or
shlb
inc
mov
push
cmp
cmp
mull
jbe
adc
push
push
mov
sub
jb
xor
sub
and
xchg
out
and
leave
mov
stos
xor
or
adcb
mov
je
and
mov
xchg
inc
add
mov
cmp
sete
aam
push
push
and
xchg
sbb
or
ficompl
test
insb
lea
movsb
adc
pushf
add
mov
cmp
mov
or
jle
test
ret
adc
push
sbb
inc
and
bound
aad
adc
ret
pushl
rclb
sub
push
add
push
rolb
clc
subl
es
popa
push
push
enter
xor
sub
add
orb
imul
ret
enter
filds
xchg
inc
es
cld
adc
inc
sti
mov
inc
jbe
sbb
ret
add
iret
scas
push
out
ficomps
and
out
sarb
push
sbb
mov
add
clc
shl
mov
cmp
pop
mov
or
adc
enter
repnz
rorl
movzwl
roll
xchg
adcl
setge
mov
dec
cvttps2pi
mov
sahf
dec
xor
cmp
add
sarb
lock
sarb
lock
jle
jl
sub
or
adc
fmuls
xchg
dec
enter
or
adc
sbb
xchg
add
inc
xor
faddl
fcoml
mov
mov
mov
sub
lahf
or
ret
pusha
sbb
jg
and
test
ss
jo
sbb
push
jno
test
sub
adc
mov
inc
pop
and
sarb
xchg
subb
push
jle,pt
push
and
sbb
push
push
push
jo
in
xchg
push
jno
rcrb
add
aaa
push
mov
push
mov
outsb
adc
mov
adc
jo
mov
xchg
sbb
cs
or
cwtl
inc
iret
push
sbb
pop
or
leave
and
scas
inc
fs
mov
cmp
push
mov
stc
fiaddl
push
icebp
sbb
add
fsubrl
and
sbb
pop
je
pop
je
cmp
xchg
sbb
mov
xchg
xor
loop
inc
jle
or
loope
adc
jno
jo
mov
sbb
ds
cmp
pop
inc
outsl
inc
mov
inc
or
sbb
add
inc
testl
or
mov
dec
out
sub
adc
ret
mov
outsb
pop
test
lcall
mov
or
xchg
cmp
shlb
adc
dec
rcrl
test
mov
pop
sbb
sbb
mov
dec
stc
xchg
out
push
mov
add
ret
xor
ss
aam
pop
xor
lahf
aam
ljmp
jmpw
push
movsb
dec
loope
sub
inc
std
xchg
mov
test
mov
pop
jle
mov
leave
xor
mov
ret
repnz
sub
pop
adc
push
push
dec
pop
or
or
lods
je
dec
push
jg
jg
popf
idivb
inc
inc
hlt
cmpl
loopne
clc
add
test
test
out
or
into
ja
repnz
out
subl
push
push
loop
sub
aaa
pop
jnp
mov
loope
aaa
testl
mov
mov
daa
cli
dec
sar
adc
xchg
sub
lds
adc
cs
mov
adc
ljmp
add
sub
or
lea
jge
push
push
adc
imul
jmp
dec
inc
push
add
jbe
adc
data16
inc
sub
cmp
sub
lcall
pushl
mov
cmp
stos
jl
or
sub
and
ss
sbb
test
psrlq
lock
mov
fsubrs
insl
mov
inc
add
xor
cmp
cs
or
sbb
inc
test
sbb
outsl
xchg
int
jb
lods
lea
in
lds
mov
pop
sub
cmpb
dec
lea
sub
je
bts
pusha
cmpb
pop
lahf
add
lea
add
cmp
push
rclb
sub
xchg
add
sub
add
adc
mov
fstpl
xorb
lret
lret
add
cmp
push
cmp
js
mov
insb
or
add
cmp
mov
dec
hlt
jge
jecxz
rcrb
fildl
adc
jo
inc
inc
cli
xchg
int
cltd
in
mov
add
push
es
lcall
enter
loopne
loop
push
es
sbbb
js
pop
inc
push
adc
sahf
jl
mov
ds
sarb
jg
push
add
push
repz
push
ret
pop
mov
and
gs
shll
cld
sub
add
pop
lea
mov
fucomp
adc
inc
push
inc
or
loop
xchg
cld
out
jo
mov
hlt
sub
xchg
mov
scas
push
adc
mov
inc
push
xor
pop
fisttpl
adc
lods
add
ret
jo,pn
loope
xlat
push
fdiv
mov
hlt
pusha
xchg
push
ja
jns
push
adc
stos
and
or
xchg
xchg
cmp
ret
jg
cmp
in
cmp
mov
cmp
mov
imul
gs
leave
add
mov
cmp
adc
push
addl
out
cmc
out
outsb
mov
push
addr16
lds
lea
jle
cmp
lods
mov
ret
aas
cmp
add
jle
and
push
cmpb
lods
xor
mov
jns
push
jo
push
xchg
jp
lahf
outsl
push
add
jl
loopne
ret
pop
clc
xchg
mov
shl
subb
xchg
or
add
popa
bound
repnz
cmpsb
test
push
push
es
adc
and
stos
inc
cmp
adc
cld
and
cli
in
aam
sbb
lret
lcall
ficoms
dec
adc
lds
add
jl
mov
and
adc
cmp
jle
lock
adc
inc
testb
jge
cmp
jne
loop
add
int3
adc
js
mov
or
sbb
push
inc
add
add
sbb
ret
or
ffree
jp
lea
cli
andl
dec
inc
loopne
xor
or
push
pop
or
imul
into
sbb
and
shrb
and
jno
test
rcll
je
repnz
shrl
push
add
xchg
inc
add
add
sbb
mov
or
cmp
mov
dec
dec
hlt
add
rol
loopne
int3
test
push
push
ss
inc
aas
mov
xchg
mov
lea
cltd
and
in
add
sub
jmp
add
adc
inc
jae
add
sub
fs
test
push
or
and
rolb
push
in
add
loop
or
in
call
add
aaa
movsb
pop
pop
sbb
push
add
or
mov
pop
pop
mov
stos
jb
add
sub
and
xor
insb
push
andl
sbb
test
or
cmp
push
jns
pop
mov
shll
lock
arpl
hlt
or
mov
xchg
mov
cmc
xor
test
arpl
xor
xor
and
ret
mov
inc
clc
add
xchg
shll
push
push
sub
movsl
cmpsl
lret
andl
push
iret
xor
test
dec
xorl
imul
jl
popf
lds
sub
popl
negl
roll
push
mov
daa
out
stos
xor
shll
sbb
add
lret
pop
daa
mov
fldt
lahf
test
jmp
sub
jb
lock
push
add
add
inc
mov
add
sub
aaa
ss
jns,pt
sub
sub
bound
or
push
fiaddl
xchg
sbb
push
imul
push
push
xchg
test
xor
decb
sub
inc
add
inc
cmp
scas
push
dec
push
add
sub
and
imul
cwtl
dec
xor
loopne
mov
cmc
adc
or
and
and
add
and
lock
xor
sbb
add
or
mov
cmp
inc
mov
adc
push
shrl
jmp
aad
pop
fmulp
mov
test
adc
push
xor
push
sbb
fdivr
test
loope
addr16
push
ds
daa
add
mov
loopne
andnps
dec
push
push
enter
nop
mov
push
xor
pusha
pop
lods
idiv
je
jge
mov
dec
popa
es
scas
jmp
out
push
mov
xchg
into
add
inc
sbb
fwait
sbb
pop
jo
adc
adc
fisubrs
cmp
add
xor
inc
adcb
add
push
xlat
jmp
mov
sub
and
sub
add
pusha
sub
add
adc
insb
xor
fistpl
xor
dec
xchg
shl
add
out
in
push
lock
add
xchg
cmp
add
cld
cmp
jmp
test
or
cmc
xor
mov
or
jb
and
sbb
lods
call
pop
scas
add
push
dec
adc
mov
and
push
aad
xor
xchg
jecxz
mov
xor
data16
sti
fwait
pop
imul
cli
and
push
cmp
stos
shlb
dec
cmp
sub
push
cltd
int
sarl
add
dec
jo
sbb
xchg
lock
repnz
and
cld
mov
scas
nop
jp
jecxz
arpl
fildl
in
mov
jle
pop
jne
ret
nop
lret
or
cltd
out
adc
or
leave
xchg
ss
push
add
ficoml
add
or
sbb
js
in
or
xor
push
scas
xor
sbb
fs
sahf
enter
into
add
out
test
add
mov
sbb
popa
stc
push
adc
lods
mov
add
cmpb
push
jb
sbb
inc
cmp
and
push
jns
rorl
mov
adcl
adc
mov
jl
mov
xorb
adcl
imul
jg
push
test
jb
and
xor
xor
les
ss
adc
push
and
enter
loop
ss
in
push
bound
nop
and
cmp
inc
imul
hlt
sub
sub
push
sub
jl,pt
popf
je
mov
push
cltd
dec
rorb
add
loope
inc
popf
and
add
shll
insl
and
jecxz
push
test
in
pop
xchg
ret
and
xor
sub
push
insl
lret
sbb
cltd
and
das
daa
add
inc
loopne
or
popa
pushl
test
faddp
orl
fsts
push
pop
push
mov
pop
arpl
mov
sub
inc
add
aad
or
sub
inc
scas
sbb
push
inc
inc
mov
add
xchg
mov
in
faddl
inc
add
xor
loop
jae
xchg
lock
std
xchg
lea
lcall
lcall
adc
sub
hlt
movsb
insl
lods
push
mov
add
inc
push
fimuls
push
fwait
pop
les
sbb
test
ja
fcomps
add
sti
fisubs
fldenv
inc
sti
and
scas
add
mov
mov
add
mov
mov
js
xor
push
andb
or
pop
and
mov
dec
and
ret
mov
rorl
lret
or
clc
scas
or
and
ljmp
pop
inc
dec
sbbb
push
mov
push
add
adc
add
addr16
jns
out
test
sar
sbb
std
xor
stos
rol
jno
inc
xchg
pop
adc
xchg
cmp
dec
add
sarb
je
and
cmp
ret
mov
add
dec
mov
or
sbb
hlt
lahf
or
sub
adc
lock
andb
adc
or
push
add
push
or
dec
sbb
test
je
lea
repz
sub
add
rcr
pop
jo
out
fisttpl
mov
pop
cmp
jb
pop
pop
lock
aaa
mov
jg
je
push
divb
and
sub
inc
sub
insl
pushf
jne
decb
sti
mov
sbbb
jl
mov
jg
test
xchg
mov
sub
imul
add
in
or
xchg
mov
cmpb
jno
mov
sub
or
jge
lret
insl
mov
or
push
ret
add
inc
fucomip
scas
cmp
jo
push
sahf
fists
and
js
mov
push
out
rcrb
cmp
xor
sub
mov
push
push
push
push
sbb
jg
sahf
push
push
push
push
test
add
mov
jg
xchg
push
add
add
push
movb
mov
rol
xor
mov
add
lds
and
arpl
loop
mov
outsl
push
xor
iret
js,pn
jg
pusha
or
js
sbb
es
sub
lcall
test
xchg
push
sbbl
add
cli
ljmp
push
stc
push
fldl
and
inc
sbb
in
jne
jo
mov
rcl
test
inc
push
push
push
movsb
sbb
lds
adc
pop
push
push
add
or
push
add
dec
sub
fwait
out
enter
push
rorl
ret
sub
pusha
cmp
adc
or
sbb
mov
movb
cmp
xchg
push
push
je
mov
pop
sub
xor
fldcw
out
dec
js
push
mov
sbb
xor
or
add
adc
fmuls
das
inc
add
mov
add
and
dec
add
adc
jg
ret
or
clc
add
cmp
push
call
and
rcrl
icebp
out
sbb
inc
lock
sbb
adc
xor
icebp
push
push
and
in
push
push
ds
sbb
push
es
ret
test
and
mov
inc
movsl
add
inc
or
cmp
in
sbb
shl
jne
sbb
adc
inc
push
or
dec
pop
das
pop
or
pop
xor
cmp
adc
cwtl
add
or
clc
cmp
mov
mov
cmp
je
push
jle
dec
mov
testb
xchg
movsb
inc
sbb
inc
push
xor
sbb
mov
mov
pop
pop
sbb
push
negb
xor
xlat
pop
push
sbb
sub
push
rorl
push
or
mov
push
sbb
pop
enter
push
pop
sub
add
inc
cld
xor
idivb
iret
repz
cmp
add
loopne
leave
enter
test
aad
sub
and
fiadds
jmp
xor
ljmp
int3
or
sub
xor
xchg
outsl
out
push
inc
mov
add
rclb
ret
jl
mov
shlb
pop
leave
call
mov
lods
sub
lcall
adc
lock
push
or
clc
or
sub
pop
lock
push
mov
xor
aam
push
dec
dec
in
and
in
push
jl
and
pop
pop
ss
mov
mov
and
adc
pop
ret
pushf
xchg
push
daa
jg
and
pop
stos
or
or
adc
pop
mov
push
je
in
loopne
inc
or
push
adc
xor
xor
push
bound
add
std
mov
movl
xor
enter
fidivs
mov
cs
push
push
mov
add
nop
dec
lock
cmpsl
shll
adc
pop
test
inc
or
sbb
fisttpl
jp
aam
stos
push
out
je
jnp
cmp
jae
mov
cmp
out
into
add
movl
cmc
fcompl
inc
je
les
pop
mov
dec
lock
imul
mov
pop
and
inc
and
or
arpl
addr16
mov
sub
or
sbb
xor
cmp
and
xchg
ljmp
inc
inc
add
inc
sti
mov
lods
ret
jge
movb
mov
inc
aas
adc
jns
or
cld
sub
and
or
xor
adc
cmp
lea
jne
push
push
push
inc
sub
jl
cmpsb
or
js
add
mov
stos
xchg
paddq
and
pusha
fcoms
sbb
insl
mov
movsb
cli
incl
jl
push
pop
jle
rorl
lock
pop
movl
xchg
and
pop
push
add
jb
ja
mov
jmp
sub
cmp
jb
add
imul
movlps
mov
mov
sub
xorl
ret
rclb
pusha
xchg
out
out
mov
xchg
loopne
negl
push
adc
movsb
roll
or
or
cmp
jb
or
add
ja
fimuls
add
add
mov
mov
mov
or
ja
and
ret
or
inc
or
add
add
out
jne
dec
mov
sub
or
pop
repnz
jmp
lea
sbb
jg
push
negb
insl
enter
jl
and
adc
loop
push
aad
in
dec
inc
das
je
or
cmpl
outsl
or
jne
mov
mov
ret
je
mov
lea
dec
fwait
test
mov
mov
sahf
inc
sbb
out
dec
dec
cmp
or
jmp
inc
mov
cmp
aad
or
stos
and
add
or
add
addl
inc
jmp
inc
and
psllw
inc
mov
fimull
mov
pop
ret
roll
and
fiaddl
test
repnz
mov
dec
lcall
test
out
push
dec
adc
icebp
mov
mov
mov
adc
and
popa
push
pop
inc
pop
dec
and
mov
repnz
sub
cmp
aaa
pop
adc
cmp
sbb
mov
jl
jb
negl
test
dec
adc
mov
sub
movsb
cmp
jl
ret
dec
push
sub
inc
push
aaa
std
and
cmp
ljmp
inc
cld
push
shrb
jge
adc
shlb
sub
inc
push
pusha
push
mov
inc
cli
and
jg
test
adc
mov
inc
cmp
jb
cmp
ja
repz
jmp
sub
jmp
cmp
jb
cmp
ja
and
int3
sarw
movzwl
jmp
cmp
xor
add
fstps
push
cmp
lock
mov
mov
mov
add
mov
fwait
mov
outsl
cmp
pusha
pop
pop
mov
jae
add
jmp
cwtl
aas
xor
pusha
icebp
mov
lcall
clc
jno
mov
je
add
stos
jne
ret
pushw
push
test
ljmp
repz
scas
incl
jae
mov
jmp
push
adc
push
pusha
aas
xor
jo
jne
add
adc
dec
test
out
push
test
dec
call
push
rcrb
mov
or
pop
xchg
add
xchg
xchg
lret
cmp
pop
ljmp
test
icebp
cld
out
sbb
and
test
adc
je
test
jne
sub
cmpsl
inc
into
sub
jb
or
dec
lock
dec
cmp
and
repnz
adc
movb
inc
push
push
mov
push
or
push
push
lret
lret
inc
fs
add
scas
jnp
test
dec
push
pop
mov
inc
and
and
dec
hlt
arpl
mov
lods
daa
lcall
jae
add
sbb
push
pop
and
divb
ret
jg
cmpsl
xlat
fnsaves
sbb
int3
movsb
into
inc
repnz
push
cmc
dec
dec
sbb
cmp
jecxz
jl
cld
inc
jns
or
mov
ret
pop
dec
adc
jbe
jmp
pop
sbb
pop
jl
aas
sub
sahf
add
cmpb
mov
jo
sbb
xchg
int
mov
shrl
ljmp
pop
add
jge
stc
cmp
jae
cmpl
std
jge
jbe
aam
push
das
mov
or
mov
ficompl
or
push
xor
std
mov
mov
inc
and
xchg
adc
pop
inc
mov
jbe
fs
dec
out
add
jg
test
in
add
dec
and
push
ret
sub
insl
push
sub
mov
or
cmp
aam
test
dec
les
sbb
testl
movb
jecxz
xchg
add
movsl
icebp
and
lret
and
in
fstpt
cmp
je
cmp
je
xchg
jae
jecxz
add
js
or
es
lret
out
mov
or
and
cmp
pop
in
add
jmp
xor
xor
aas
mov
dec
mov
out
aas
fimuls
sub
add
sub
mov
add
je
add
js
ret
xchg
cmp
and
test
in
dec
add
mov
ja
hlt
fisttpl
addr16
mov
push
mov
mov
push
adc
dec
rorl
add
cmp
je
push
xor
adc
hlt
xor
lock
add
repz
mov
push
jo
mov
jae
test
fistpll
inc
push
xor
xor
sahf
and
adc
jp
rolb
adc
inc
cmp
jb
mov
and
jb
js
mov
xor
pop
stos
sti
pushl
pushf
cmp
je
lea
mov
mov
mov
or
xchg
add
xchg
into
repnz
out
cmp
cltd
clc
push
push
lahf
mov
and
push
stos
mov
add
jge
insb
xor
out
or
stc
inc
mov
mov
inc
int
or
sbb
lea
add
les
lods
pop
adc
dec
jg
sbb
or
and
cmpsl
mov
lea
inc
xchg
mov
popf
pop
lahf
addl
aad
xchg
inc
movsl
adc
xchg
xchg
test
add
inc
inc
es
mov
xchg
jne
fstl
xchg
mov
repnz
pop
or
in
mov
cmp
jb
lods
lahf
and
leave
inc
jle
js
sbb
dec
test
add
popfw
movsl
add
mov
test
sti
cli
cld
sbb
adc
mov
loope
leave
movsb
into
repz
cwtl
cli
add
aam
pop
jbe
mov
lahf
xchg
cwtl
in
inc
inc
dec
cld
sub
in
xchg
adc
cwtl
dec
cld
out
push
mov
mov
xor
mov
mov
nop
movsl
jno
pop
jg
jge
pop
cmp
cwtl
cmp
jne
adc
gs
movb
ret
cli
jne
lcall
test
xor
stos
mov
cmp
jne
or
iretw
cmpsb
iret
cmpl
dec
stos
mov
xlat
inc
mov
ret
cmp
add
mov
add
sbbb
test
jmp
push
add
adc
shlb
cmp
je
ficoml
cmp
fdivs
add
inc
inc
jne
pop
dec
fst
pop
movb
cmp
outsl
insb
mov
das
xchg
orb
sub
rorl
pop
cmpsb
loope
inc
xor
fstps
out
ljmp
xchg
pop
leave
and
dec
movsl
lods
mov
and
jns
fiadds
jle
push
mov
and
das
clc
call
pop
mov
push
push
xchg
push
mov
xor
add
loopne
mov
jmp
lock
cmp
je
cmpb
add
lea
pop
jne
sbbb
jne
gs
cmp
sbbl
add
mov
adc
mov
jns
push
icebp
mov
push
test
pop
fsubs
ret
xchg
ret
add
scas
call
dec
and
jbe
jge
xor
dec
test
clc
jae
cmp
or
mov
bound
inc
mov
int
je
loop
aam
sarl
pop
loope
mov
inc
jnp
sbb
push
xchg
and
in
cmp
mov
jne
or
dec
cli
and
dec
mov
inc
mov
and
or
sub
call
xchg
jl
mov
add
or
je
push
pop
jne
inc
xchg
shr
sbb
rorb
pop
not
adc
sub
xchg
and
adc
mov
pop
mov
mov
xorb
insl
imul
or
xor
lahf
lret
in
cmp
or
add
dec
repz
and
daa
or
sbb
xchg
dec
sbb
sub
lea
push
testb
testb
xor
cmp
pop
xchg
mov
sarl
push
lea
ret
mov
dec
dec
cmp
pushf
xchg
and
push
loop
inc
loop
add
mov
ja
loope
pusha
mov
popf
testb
cs
lret
movsl
inc
xor
cmp
mov
cmp
jb
inc
xchg
inc
inc
cmp
inc
mov
jmp
push
jl
notb
test
sub
test
jns
popf
lock
push
pushf
addl
mov
mov
push
mov
push
out
and
xchg
dec
or
sbb
fsubrs
add
and
loop
push
push
push
push
ds
push
je
push
fs
repnz
fisubrs
popl
inc
and
insb
ret
sub
lahf
mov
pop
add
fldenv
push
nop
or
dec
ret
into
push
aaa
nop
es
push
fdivrs
mov
dec
mov
mov
cmp
push
mov
or
lret
cmpsb
fldl
mov
sbb
in
fwait
lock
nop
je
push
add
sahf
addb
lock
mov
mov
je
push
push
or
xorb
in
sub
or
xor
fildl
arpl
or
pop
push
idiv
stos
lea
int3
mov
jle
or
inc
inc
or
dec
xor
xor
push
ds
fmull
ss
or
dec
pop
nop
adc
ljmp
mov
jnp
add
nop
or
mov
leave
add
mov
iret
sub
loop
xor
pushf
mov
data16
or
pop
push
fs
or
and
in
push
mov
loope
push
adc
mov
gs
mov
pop
push
fbld
jl
aas
sub
jle
or
loope
inc
push
into
pushf
push
mov
push
scas
lret
test
and
call
cmp
femms
jne
dec
cld
les
scas
rclb
sbb
sub
add
pop
dec
adc
dec
jno
sub
mov
outsl
test
mov
lret
das
sub
mov
out
cmp
rcrb
dec
shrl
push
into
fcmovbe
cli
addl
sarl
add
cmp
sub
mov
jecxz
and
loopne
push
cmpsl
inc
imul
jo
andl
mov
loopne
in
inc
xor
cmp
addr16
cmp
cltd
insb
mov
adc
xor
hlt
adc
push
ficomps
jle
in
stos
sbb
aam
push
fidivl
xchg
and
and
add
pop
mov
xor
add
jne
mov
cwtl
push
sbb
scas
jno
pop
test
and
cs
pop
add
scas
fs
sub
mov
push
add
push
add
jo
adc
jno
cmp
jl
push
add
adc
pusha
dec
or
add
bound
push
cmp
dec
mov
push
in
adc
pusha
or
dec
or
mov
or
rcl
push
inc
push
push
adc
cmpsl
imul
push
or
jnp
mov
inc
add
and
hlt
sub
cmp
ret
push
xchg
pop
sub
js
mov
and
leave
mov
bound
push
sub
scas
movl
jb
mov
or
lods
dec
xor
adc
mov
sbb
jbe
cmp
and
call
pop
and
ficoms
and
repz
fwait
std
inc
fcompl
adc
pushl
negl
push
add
lcall
mov
cmpl
inc
mov
cmp
in
push
cld
loopne
jge
lahf
addl
lods
pop
push
pusha
movsl
xchg
and
cmpsb
xchg
mov
mov
sbb
adc
hlt
cli
mov
in
int
jecxz
mov
and
xor
ret
pop
mov
xchg
jns
inc
int
pop
dec
xorb
icebp
xor
xor
ja
popa
adcl
inc
or
notl
sub
sbb
aam
pop
add
inc
cmp
jnp
lods
mov
dec
push
dec
mov
movb
aam
and
das
mov
add
in
and
hlt
pop
jle
mull
dec
lods
pop
lods
jg
inc
les
push
or
jl
adc
sub
outsl
sub
in
test
push
xor
orl
test
notl
test
push
add
clc
sub
jb
pop
and
xor
pop
int3
and
loope
mov
push
orl
mov
clc
sbb
movsb
mov
or
pop
and
sub
or
push
sub
xor
mov
or
adc
sbb
xlat
push
mov
inc
cmpsb
cwtl
sbb
test
enter
push
pop
push
aam
or
add
lock
push
ja
rcr
jecxz
movsl
lea
mov
xor
test
test
sti
pop
mov
loopne
pop
clc
ja
lods
mov
mov
add
xchg
mov
cwtl
mov
xchg
add
inc
outsb
adc
push
xor
pop
fisubs
xor
push
aam
jecxz
jno
loopne
jl
cmp
movl
pop
xor
add
je
mov
mov
adc
les
or
sub
or
lcall
divb
movsb
ret
inc
add
sbb
aas
imul
dec
push
xchg
pop
add
mov
es
arpl
sbb
orl
push
int3
dec
rcr
lea
push
pop
xchg
sbb
sti
jle
inc
rolb
lock
add
loop
jno
cmp
xchg
cmp
adc
push
leave
jae
inc
add
xor
adc
lock
add
mov
push
daa
xchg
loopne
pushl
xchg
popa
cmp
sub
mov
adc
and
shlb
sub
mov
xor
notb
sbb
pushf
mov
jns
mov
fnstcw
inc
mov
sahf
sbb
aaa
mov
lock
ja
out
int3
push
iret
int3
add
popa
in
pop
cmp
sbb
adc
cmpsb
xchg
dec
and
or
out
xchg
mov
aam
push
ret
in
pushf
dec
or
sbb
and
fistl
push
test
pop
sete
repnz
andb
mov
and
push
je
mov
add
or
pop
ficoms
dec
xor
imul
lret
mov
mov
repnz
incl
sbb
mov
nop
or
or
pop
sub
mov
outsl
bound
mov
arpl
xlat
and
mov
xchg
push
ret
cwtl
mov
xor
testl
rolb
jnp
push
in
ret
aaa
push
adc
in
add
or
pop
int3
lea
sub
mov
push
cmp
test
and
xchg
dec
adc
or
jnp
inc
and
adc
xor
stos
push
in
and
les
call
push
enter
push
xor
push
sub
push
dec
adc
clc
xchg
xor
xchg
outsl
mov
ret
mov
dec
sbb
add
cld
andb
push
jg
test
popf
lahf
xor
rcrb
adc
test
and
enter
adc
and
jns
sbb
loopne
cld
inc
push
pop
xchg
add
out
out
clc
add
movsb
adc
les
out
xor
sbb
sbb
push
mov
adc
push
jb
negb
and
roll
push
and
cmp
sahf
out
lret
sbb
and
sbb
adcb
pop
adc
or
sbb
and
cmp
lods
pusha
adc
mov
outsl
sub
lcall
mov
cmp
sub
adc
jb
iret
fs
scas
in
enter
pop
setb
sbb
xor
pusha
push
xchg
xchg
dec
outsb
xchg
and
jns
adc
cld
pop
aas
or
add
cmp
and
adc
mov
push
jmp
shll
and
shr
mov
into
addl
and
in
test
push
add
cmp
test
pop
push
inc
xor
icebp
jl
xor
mov
ja
sbb
rclb
push
js
nop
fists
setns
ret
mov
xor
test
cs
mov
add
push
lds
and
cmp
pop
mov
dec
jo
fs
std
xor
pop
dec
jp
out
inc
repz
in
cld
xor
cmp
pop
sete
addl
out
rcrb
push
push
xor
push
test
andb
adc
cmp
adcl
ficomps
xchg
sbb
cmp
gs
rcr
imul
and
mov
xor
leave
push
mov
movsl
mov
ret
cmc
and
inc
mov
pop
out
sub
pop
jb
and
sub
sub
add
subl
leave
insb
push
mov
jnp
icebp
stc
out
sub
push
jle
sub
jno
mov
jmp
out
sbb
jo
mov
popa
sub
jno
adc
arpl
and
xchg
mov
pop
xchg
aad
dec
jne
mov
dec
mov
lock
bound
test
lock
add
jl
sub
push
add
in
test
xor
fwait
add
es
add
ja
fstl
mov
inc
push
in
mov
and
bound
bndstx
sub
sub
lret
sub
fnstcw
in
add
sbb
sbb
and
cmc
xor
outsl
adc
pusha
scas
dec
data16
test
add
sub
mov
pavgw
lods
sub
inc
xor
lcall
pop
push
and
sbb
dec
xchg
sub
xor
out
cwtl
cmp
pusha
inc
dec
faddl
mov
mul
add
pushf
dec
jecxz
pusha
nop
xor
cmp
sarb
ret
gs
mov
and
popa
lcall
push
xor
add
mov
shl
fnstenv
mov
jg
sub
adc
add
enter
popf
cmp
and
daa
inc
adc
cmp
adc
add
jne
pop
test
mov
lock
lea
adc
dec
adc
xor
jl
xor
testb
lcall
and
add
outsb
sbb
pop
cmp
xor
mov
jecxz
in
inc
adc
and
sbb
add
dec
xor
and
push
pop
or
mov
fstpl
dec
test
push
test
mov
pop
xor
daa
cmp
cwtl
lcall
aam
xchg
pushf
sub
popf
mov
and
fldenv
shlb
add
sahf
test
ret
sub
adc
inc
in
es
cmpb
lret
in
inc
pop
aas
sub
and
rolb
mov
or
xor
dec
lret
xchg
cmp
xor
addb
pop
cmp
clc
mov
dec
iret
mov
shll
cltd
clc
je
js
mov
cmp
in
push
adc
mov
inc
push
add
add
add
pop
cmpsb
sbb
mov
xchg
imul
pusha
shll
loop
lret
in
mov
mov
int3
cmp
sbb
adc
push
outsl
popf
adc
or
dec
add
push
pop
cmp
lods
pop
mov
das
mov
aad
and
mov
and
adcl
dec
mov
adc
sub
popa
push
pop
movsl
sarb
push
push
clc
mov
inc
stc
lret
and
sbb
pop
inc
or
mov
push
push
sbb
rorb
nop
sbb
mov
and
sub
and
dec
orl
icebp
push
or
push
or
cs
cmp
clc
jge
add
or
push
xchg
js,pn
bound
cmp
inc
decb
lock
xchg
add
add
sub
test
push
jmp
sub
loopne
jo
push
push
stc
stos
xchg
insb
xchg
shlb
mov
xchg
pop
call
or
sub
gs
je
or
mov
int3
and
sub
add
jge
fwait
mov
lret
ficoml
leave
data16
in
rcll
dec
or
out
xchg
jo
inc
inc
pusha
add
dec
scas
add
push
int3
aam
add
bound
punpcklwd
das
adc
and
js
pusha
cmp
dec
jl
xor
add
add
and
dec
add
or
sbb
xor
repnz
add
orl
iret
add
xor
jo
cmp
pop
shlb
dec
pop
mov
sahf
lods
push
cltd
insb
push
pushf
xor
dec
jae
sub
sbb
fimull
push
movsl
lock
lahf
les
or
outsb
xchg
notl
loopne
or
and
fcompl
mov
mov
inc
sahf
xor
and
mov
pop
and
cltd
pop
xor
mov
add
or
imul
adc
and
lods
aaa
movzbl
or
stc
je
inc
outsl
pop
je
daa
je
dec
test
cmp
dec
xor
inc
pushf
mov
mov
clc
or
inc
or
sub
adc
sub
addb
nop
sub
dec
mov
or
nop
aad
push
mov
inc
sub
jecxz
hlt
aaa
cmpsb
cs
lock
inc
xchg
or
aaa
je
js
arpl
add
mov
sarb
popf
clc
lret
lds
sbb
pop
loop
mov
mov
loopne
out
sbb
mov
inc
dec
jnp
gs
dec
addl
and
and
add
or
scas
fwait
loopne
mov
adc
rcl
nop
pusha
dec
adc
pop
pop
cld
cmpl
inc
out
int3
das
lcall
push
mov
testl
das
lea
mov
sarb
dec
call
xchg
push
xlat
ret
pop
mov
mul
cmpb
or
rorl
je
decb
pusha
and
call
pop
inc
and
sbb
pop
es
xchg
rclb
jge
xor
mov
orl
push
adc
andl
inc
fisubrs
or
xor
or
adcl
dec
daa
icebp
mov
sub
inc
movsl
xchg
add
pop
jecxz
mov
and
sbb
popa
mov
or
je
movb
push
aam
inc
xchg
pusha
sub
sub
mov
mov
add
sbbl
aaa
mov
or
xchg
push
or
inc
mov
mov
xchg
aam
mov
adc
call
add
add
arpl
inc
or
push
sub
ljmp
pop
and
outsl
and
and
add
and
or
imul
xor
xchg
cmp
jg
adcl
imul
adc
loopne
enter
mov
inc
add
jno
adc
aas
xchg
mov
sbb
fs
hlt
orb
inc
sub
pop
es
mov
add
das
lret
aam
jnp
cmp
inc
mov
cmp
aas
cmp
pop
inc
adc
enter
jo
or
jp
inc
rolb
push
gs
lahf
sub
sbb
lea
stos
adc
mov
lods
repnz
mov
mov
mov
mov
mov
or
mov
out
lods
add
push
mov
pop
add
shll
inc
aam
movsb
in
pusha
xor
xor
or
outsl
sbb
cmp
sbb
pop
repnz
add
movb
jno
dec
jmp
mov
dec
mov
push
sahf
cmpl
stos
or
test
push
push
add
insl
addr16
ret
lahf
push
dec
pop
sbb
cmp
jmp
xchg
push
push
pop
push
add
pop
pop
ret
add
in
daa
iret
jg
add
scas
bsf
shufps
ret
mov
or
jg
notb
addr16
inc
jg
xchg
inc
lcall
inc
mov
add
test
or
or
adc
sub
loopne
inc
xchg
iret
mov
add
dec
mov
push
jnp
ret
add
pop
test
push
jge
cmp
push
push
xor
cmp
mov
add
jmp
daa
inc
movsl
sbb
test
clc
popf
sbb
fisttpl
sub
je
incb
lea
je
cmpl
mov
movl
inc
sub
pop
test
push
xchg
jg
scas
mov
mov
cmpb
adc
xor
call
ret
loopne
dec
mov
sbb
lret
aam
mov
je
mov
inc
cmp
sbb
add
rcll
push
sub
jecxz
je
mov
test
push
mov
push
aas
or
xor
push
xchg
or
stos
mov
pop
movsl
sbb
or
add
sarb
xchg
adc
push
adc
xchg
adc
sub
das
xor
inc
mov
insl
in
ret
enter
pop
mov
rorl
push
and
fistl
and
pop
ret
fwait
jo
sbb
clc
mov
adc
imul
cmp
jbe
and
sbb
ret
jo
jp
mov
sub
fiaddl
xchg
outsl
jge
in
mov
push
pushf
push
add
push
push
sbb
push
popa
in
xor
lret
or
pop
les
adc
and
nop
mov
push
or
sbb
enter
cmpsl
and
enter
or
punpckldq
scas
out
xchg
mov
out
xchg
cli
cld
lea
push
adc
push
push
les
adc
push
ret
or
xor
and
inc
mov
pop
sbbl
pop
and
imull
xor
add
es
xchg
shrl
movsbl
inc
sbb
call
lcall
inc
call
aad
and
je
sub
pop
in
hlt
or
push
mov
sub
inc
jl
mov
jns
add
fidivl
xor
pop
cmp
in
pop
xchg
sub
push
push
push
jmp
sbb
call
les
lock
js
addb
loopne
loopne
lock
imul
rep
add
adc
push
inc
push
mov
popa
cmpsl
xchg
rolb
popa
cltd
push
inc
stos
add
mov
mov
cwtl
in
mov
jl
pop
mov
push
pmullw
out
jbe
sbb
push
pop
sbb
fadds
js
inc
fs
mov
imul
cli
cmp
xchg
mov
or
pop
enter
push
dec
mov
jae
xchg
ja
call
add
mov
cli
cmpsl
adc
cmp
add
jae
cmp
pop
stos
jbe
fbld
adc
push
push
xchg
push
fwait
push
sub
add
xchg
inc
add
lock
push
insb
mov
xchg
pop
cmp
cmp
nop
icebp
xor
ret
cld
flds
sahf
imul
fstps
and
adc
int3
cmpsl
lea
mov
pushf
popa
imull
push
pop
add
inc
or
sub
and
and
sub
add
mov
jecxz
jo
jbe
push
lret
mov
cmpsl
mov
jne
lahf
jg
mov
insl
in
xor
jno
movsb
add
test
push
mov
lds
and
adc
add
das
and
xchg
dec
test
or
imul
js
or
xchg
je
cmpsb
inc
adc
test
mov
stos
pop
mov
adc
or
push
push
outsb
cmp
adc
insl
jl
push
leave
push
shll
xchg
repnz
in
mov
dec
loope
roll
lea
push
fcompl
pop
pop
inc
dec
adc
jecxz
add
and
mov
leave
outsb
call
sbb
bound
push
clc
adc
lea
dec
mov
nop
mov
and
push
push
and
jb
mov
cmpl
test
movsl
cmp
notb
jne
mov
adc
rclb
cmp
jl
mov
mov
sub
or
or
push
dec
cld
cmp
lret
call
mov
movsb
add
inc
push
test
cmc
lods
inc
insb
xchg
dec
shlb
je
xchg
dec
and
add
sbb
xor
lods
in
mov
and
and
aam
in
call
leave
add
sub
push
jp
sbb
in
mov
add
cltd
pop
nop
mov
or
inc
shl
sbb
mov
cli
cmpsb
cmp
xchg
fcoms
stc
outsb
in
cmpsl
sahf
dec
lret
test
dec
aaa
sbb
add
cmp
or
test
jnp
or
aad
or
and
pop
fcompl
mov
xor
pusha
add
shr
jl
stc
jns
adc
or
adc
inc
mov
add
insb
jne
mov
add
jle
push
push
ret
aas
push
inc
je
clc
test
xor
scas
mov
or
cmp
jge
push
pusha
jle
mov
adc
add
shr
filds
pop
clc
jg
mov
xor
fcom
add
and
push
add
mov
mov
ljmp
cmp
ret
test
mov
ja
popf
xor
adc
mov
mulb
adc
add
stos
xchg
add
mov
aam
sbb
sbb
and
ds
and
mov
or
and
je
sub
add
insl
inc
xor
std
sub
cltd
aas
dec
pop
addb
and
fsubrs
subl
push
cli
or
and
dec
sub
add
adc
add
xchg
adc
data16
aaa
jo
mov
adc
out
jmp
cmp
cwtl
sub
inc
push
loop
mov
testb
jbe
inc
idiv
or
scas
sbb
add
out
jnp
ja
push
fiadds
out
decb
mov
add
loope
push
add
lods
inc
add
lahf
and
cwtl
or
mov
cld
into
mov
sub
aam
pushl
cli
sub
je
cmp
mov
mov
inc
aaa
sbb
leave
sahf
dec
lods
fistpl
and
test
jg
popf
out
movlps
dec
arpl
pop
pop
aad
iret
ret
lahf
or
scas
sub
cmp
stos
fidivrs
cmpl
jae
inc
cltd
jp
adc
push
adc
sti
or
lods
or
xlat
pop
into
add
enter
fsts
pop
aad
mov
push
ret
pop
movzwl
dec
push
leave
addl
add
loop
jo
pushf
stc
add
add
add
sahf
push
adc
xor
dec
mov
dec
movsl
sbbb
mov
mov
cmpsb
mov
adc
or
push
shrb
stc
jl
push
in
adc
fs
rcrb
ret
pop
out
cli
push
inc
fnstenv
out
mov
pop
test
dec
push
or
dec
lock
insl
addr16
xchg
mov
push
ds
inc
push
add
and
and
push
mov
lea
push
mov
cmpsb
add
cli
pop
pop
data16
cmc
sub
sar
inc
lea
xor
xor
push
push
mov
inc
iret
movsl
inc
add
adc
adc
mov
icebp
push
adc
lahf
incl
fbld
enter
push
push
cmp
jbe
bound
punpcklbw
hlt
adc
fidivrl
jp
adc
or
pushf
mov
jb
pop
push
sbb
or
and
xchg
xchg
ljmp
cld
sub
bswap
sub
sub
shrl
lret
in
inc
pcmpgtw
out
mov
add
insb
and
sbb
sbb
sbb
add
shlb
add
xor
mov
cmp
je
aas
movsb
dec
mov
add
rolb
movl
push
jge
adc
mov
mov
cmpsb
push
faddl
in
int3
or
mov
dec
test
pusha
mov
mov
push
inc
cld
mov
jle
jb
lea
mov
jle
push
sub
adc
jb
jmp
inc
cld
jne
ja
mov
cmpsl
out
push
sub
push
gs
pop
inc
dec
push
mov
int
aaa
fcoml
sub
mov
data16
push
or
lret
cmpsb
adc
aaa
fdivrp
mov
nop
or
sbb
xor
add
jl
in
fsub
pop
adc
add
cmp
mov
jle
sbb
xor
enter
test
je
inc
lahf
and
jmp
push
xor
mov
cltd
inc
pop
jg
pop
jmp
test
cmp
int3
jmp
sub
sbb
ljmp
and
pop
push
call
repz
lods
push
lock
xor
add
or
cld
xchg
xchg
sbb
mov
adc
mov
sbb
scas
push
sub
push
popa
sahf
push
add
imul
pop
mov
or
mov
add
sti
lock
push
sub
mov
dec
notl
cmp
push
push
ljmp
dec
mov
mov
xchg
cltd
mov
jnp
sub
push
loopne
xor
pusha
movb
out
adc
rolw
mov
loop
add
sub
adc
sarb
in
or
or
enter
mov
or
fdivp
jno,pn
jbe
adc
lea
mov
lret
sbb
enter
in
or
mov
pop
xor
add
mov
push
push
mov
test
in
and
lds
sub
addl
movsl
cwtl
sub
jmp
pop
mov
xchg
xor
mov
cmp
in
or
inc
repz
test
aam
in
push
add
fbstp
push
hlt
mov
pop
movzwl
and
jge
dec
in
sbb
out
or
push
in
mov
idivb
loope
stos
add
add
lea
xor
add
adc
ficoms
test
lods
dec
lods
mov
lcall
cmp
push
pop
dec
jp
pop
push
insl
notl
add
sete
or
cmpb
ret
std
aam
add
test
inc
fidivl
push
and
inc
mov
in
mov
ljmp
andl
push
ljmp
fs
inc
or
cmp
cmp
fsts
adc
repz
push
mov
jo
outsb
out
xor
rclb
mov
rclb
adc
inc
add
sub
push
sarb
pop
push
adc
pop
sub
arpl
lcall
and
mov
adc
mov
shl
add
mov
add
mov
dec
dec
add
ret
lahf
mov
cmp
cs
or
xlat
cwtl
push
mov
mov
sub
cs
dec
mov
add
nop
shl
or
push
das
nop
jns
adc
inc
and
sahf
ficoms
mov
jbe
and
add
or
or
arpl
cmp
or
inc
add
pop
in
test
mov
dec
or
dec
sahf
clc
sub
mov
jae
mov
add
lcall
xchg
sbb
lahf
pop
ret
popa
and
inc
popf
icebp
inc
lds
or
stos
shl
jbe
mov
cld
pop
mov
rcll
mov
xchg
rcrb
pusha
xchg
cmp
addl
push
push
push
push
push
fsubs
fimuls
push
fcomp
pop
xchg
popf
sbb
mov
test
inc
fs
sub
test
fadds
inc
xor
jno
fnstcw
movzwl
add
or
jbe
popf
inc
fldcw
nop
pop
fwait
ret
and
jp
add
sub
mov
fcoms
or
pop
mov
testb
mov
or
rorl
pop
push
add
popa
and
es
sbb
lret
cmp
mov
cmp
pop
mov
mov
mov
and
or
cmp
dec
push
adc
xor
fistps
cmp
pop
mov
push
push
cli
fnstcw
in
js
dec
fisubl
dec
insb
cld
jp
mov
sahf
sub
call
out
les
sti
jmp
inc
dec
movl
sub
xor
xchg
das
jo
mov
and
push
stos
jne
push
sbb
loopne
mov
fiadds
fiaddl
or
adc
mov
push
out
outsl
imul
mov
fidivrl
subl
jp
mov
or
fildll
je
daa
aad
push
and
sub
xor
cld
dec
inc
xchg
push
repz
cmpb
push
rolb
nopl
int3
out
sub
test
and
push
jnp
sub
add
dec
test
adcb
movsl
add
pusha
iret
pop
push
xor
fxch
add
nop
or
pop
xor
xor
push
sbb
inc
add
aas
cmp
jns
test
test
test
add
sbb
jg
fisubl
mov
xchg
and
ret
inc
sub
mov
ret
xchg
sub
adc
and
lea
and
addl
mov
jno
fldenv
stos
adc
int
lahf
in
jge
jl
xchg
lea
data16
je
ljmp
push
push
std
inc
out
jmp
lea
in
sti
fwait
into
pop
in
inc
hlt
push
push
rcrl
cmpsb
push
jbe
adc
sub
dec
pushf
add
dec
cwtl
hlt
lds
rolb
ficoml
inc
dec
jl
outsl
sbbl
jns
sub
or
popa
idivb
in
pushf
mov
xor
dec
cmp
or
jb
push
sub
ret
sti
inc
lock
sub
repnz
adc
xchg
je
adc
lcall
std
sbb
sub
cmp
or
add
and
and
mov
bound
cmp
rcr
xchg
or
pop
mov
dec
push
dec
in
cltd
pusha
outsb
push
jne
push
lea
mov
adc
addl
pop
pop
push
lcall
add
fisubrs
xor
mov
and
ficompl
mov
cmp
ror
js
xchg
rolb
cmpsb
pop
les
dec
and
jmp
pusha
push
push
das
shrb
imul
scas
push
dec
imul
sahf
testb
adc
jnp
push
dec
imul
push
div
add
and
push
mov
lock
iret
mov
fs
dec
mov
mov
pop
mov
jne
sub
ss
mov
xchg
inc
je
mov
out
mov
pop
or
pushf
push
cli
inc
push
cmc
push
pop
adcl
inc
shl
call
pop
push
loope
cs
add
jne
mov
loope
jo
mov
popa
cmp
adc
in
sbb
sbb
push
and
fldenv
insb
popf
pop
sbb
push
xchg
sbb
sbb
and
add
add
xchg
lds
pop
add
fucomp
or
or
xor
js
mov
mov
dec
sbb
dec
sbb
pop
add
stc
sbb
aaa
dec
cld
mov
les
adc
call
inc
xchg
ud2
adc
ljmp
pop
das
rcr
sub
or
push
ds
mov
xchg
mov
mov
and
xchg
jp
inc
aam
jae
and
push
cmp
sbb
or
sbb
dec
ret
xchg
mov
jmp
add
pop
pop
push
adc
adc
or
mov
mov
je
data16
and
in
ret
mov
fmull
push
std
ret
pop
and
xor
lea
inc
out
mov
xor
repnz
inc
sub
into
cmp
stc
push
mov
inc
pop
outsl
je
pusha
add
sbb
mov
stos
cs
lea
aad
inc
adc
inc
lea
push
aas
mov
and
adc
nop
dec
mov
adc
adc
and
emms
add
inc
out
jge
push
or
lea
mov
rolb
mov
mov
ret
sub
lea
and
mov
inc
sub
int
cs
add
arpl
pop
mov
movsl
jge
cld
int
and
xor
jbe
adc
mov
arpl
add
or
andl
xchg
in
pusha
and
pop
loope
scas
js
out
mov
jne
add
es
mov
loopne
pop
xchg
test
ss
jle
ret
xchg
lea
add
or
addl
and
ret
and
int3
push
push
arpl
jl
enter
sub
mov
push
pop
push
and
in
stos
test
xchg
fs
adc
cmp
jg
or
clc
xor
ret
cmp
mov
inc
mov
add
dec
pop
call
adc
jae
add
inc
aam
mov
lock
pushf
push
add
jbe
or
and
ret
jmp
setne
push
mov
outsb
addl
jecxz
sbb
jecxz
add
js
lea
or
push
add
sub
push
insb
divl
lock
jae
into
sub
sub
loop
movsl
mov
and
ljmp
jne
pop
sub
mov
sbb
push
outsb
lea
push
pop
adc
rolb
xor
xorl
jbe
push
test
or
bound
shl
rolb
or
shlb
lea
bound
jb
dec
jg
add
mov
mov
mov
inc
and
jg
mov
fcompl
jge
test
inc
fwait
lret
clc
mov
lret
sbb
sbb
xor
and
mov
fisttpll
in
xor
and
sbb
xor
into
je
jge
add
into
int3
jle
loop
or
add
or
mov
outsb
pop
and
mov
call
sbb
pop
mov
push
jo
xchg
aam
fadds
cmc
sbb
dec
and
and
outsb
inc
adc
adc
adc
sti
add
mov
xor
push
lea
sub
jl
jmp
test
enter
cmp
sahf
and
mov
and
ror
loope
in
ret
orl
mov
xchg
add
or
mov
jae
push
xor
cmp
ja
aas
pop
adc
or
je
inc
es
mov
pop
mov
mov
xorb
ffree
and
pop
xchg
inc
push
xor
push
cmp
sbb
or
andb
addb
push
aaa
add
xor
cwtl
data16
mov
ljmp
or
mov
sbb
sub
mov
add
icebp
addb
add
cmp
cmpsb
shlb
enter
and
sbb
push
mov
arpl
push
push
and
pop
add
mov
jno
sbb
iret
mov
push
mov
sahf
movzbl
jg
add
popf
in
decb
inc
cmp
jae
inc
push
push
dec
loope
dec
je
mov
push
rolb
dec
sarb
inc
les
lss
mov
mov
mov
aas
vmptrld
cmpb
add
sbb
xor
and
adc
addb
cmp
xchg
jmp
dec
adc
or
add
aas
push
in
test
dec
inc
inc
popa
xor
pop
mov
movsw
pop
add
movsb
and
je
push
in
imul
mov
ret
pop
add
sbb
ja
sub
into
or
mov
popf
aam
outsb
adc
or
fdivs
inc
mov
fdivrs
sbb
xchg
leave
sub
iret
and
and
dec
fdivr
incl
sahf
xchg
xchg
lea
jne
scas
sub
pop
sbb
shrb
lods
andb
push
inc
mov
pusha
in
testl
lcall
xchg
test
popa
inc
sbb
push
mov
adcl
xchg
cmpb
lea
adc
push
sbb
sub
sbb
cmp
jne
xor
mov
repz
jge
mov
int3
inc
fimuls
adc
sbb
cmp
and
xorb
pop
lock
pop
pusha
cmp
mov
sub
jae
dec
cmp
adc
pop
pop
push
push
push
call
loopne
xor
test
pop
int
or
sarb
cmp
sub
adc
popf
adc
aaa
loopne
jmp
js
pop
loope
pusha
addl
loope
adc
clc
push
cld
cmp
jge
mov
xchg
pushf
cmpsl
mov
pop
xor
fadds
mov
adc
sbb
sub
cmp
fistpll
or
vmaxss
jb
and
and
or
pop
pop
mov
xorb
or
sbb
enter
ds
pop
aam
jmp
iret
mov
sub
sub
scas
enter
sub
repnz
adcl
or
mov
rorb
clc
jg
inc
cmpsb
xchg
xchg
and
push
test
adc
mov
fwait
xchg
adcb
in
xor
js
test
xor
xor
xor
cmp
popa
lret
je
mov
inc
frstor
adc
dec
shlb
mov
test
xor
das
pop
inc
push
sahf
dec
inc
pusha
insb
adc
cld
add
push
cltd
dec
mov
movsb
lea
mov
sub
xchg
sbb
push
add
mov
jmp
dec
or
loope
sub
xor
rclb
jne
fimull
scas
mov
add
adc
mov
mov
flds
andb
and
pop
scas
mov
or
clc
ja
adc
jmp
jmp
roll
dec
mov
sbb
or
inc
inc
sbb
push
push
mov
push
fsubrs
jge
arpl
add
fs
add
pop
or
push
jne
sub
sarb
ret
mov
adc
xor
fildll
and
fiaddl
out
jb
fcmovnb
pop
ret
push
testb
loope
jo
sub
push
mov
dec
cmp
fdivs
push
fsts
je
add
roll
movsl
ss
and
stos
or
adc
ja
sbb
and
insb
cmp
dec
addb
pop
fldpi
pop
pop
and
push
stc
jno
or
and
xor
or
call
xor
fdivrp
push
or
push
add
and
push
cld
insb
in
outsl
std
jmp
loop
stos
pusha
or
add
lea
cmp
cltd
test
inc
and
sub
sub
sbb
xor
add
pusha
adc
xchg
cmp
or
xor
loop
into
cmp
aam
pop
int3
rol
cmc
lods
icebp
mov
call
cmp
or
mov
xor
cmp
sub
call
mov
filds
divl
mov
adc
addl
inc
sub
add
inc
add
lahf
ljmp
frstor
inc
jmp
jmp
cld
popa
repnz
jae
lea
push
cmpb
jne
subb
rol
add
sarb
lock
ljmp
neg
sbb
and
adc
in
incb
out
pushf
dec
repz
sbb
or
cmp
push
push
or
je
insb
outsb
xor
cmp
mov
pop
inc
movsb
add
and
jecxz
js
push
test
mov
imul
inc
pusha
mov
and
lock
das
pop
and
inc
test
rcll
sub
cli
inc
pop
rorb
jno
push
push
push
cmpsb
movsl
orl
pushf
mov
pop
mov
xchg
mov
mov
divl
adc
ret
das
cmp
xor
maskmovq
idivl
sarb
jo
mov
cld
jg
ss
fcoms
and
arpl
fistpl
clc
lods
pop
push
mov
jno
sti
sub
dec
repnz
cmpl
mov
add
xor
andl
adcl
pop
xchg
cs
pop
mov
in
jnp
pop
movsl
inc
lea
push
dec
push
mov
mov
jne
rorl
mov
pop
inc
mov
jg
jo
rorb
or
mov
jg
xor
sahf
xchg
xchg
jmp
or
je
call
mov
lahf
inc
jb
push
jae
jo
sub
adc
loopne
je
rorb
cmpsb
inc
inc
addr16
push
loope
divl
mov
insb
ds
inc
sbb
ret
xchg
iret
imul
hlt
testb
ja
pop
nop
xchg
or
adc
pop
jno
pop
mov
sbb
sarb
push
fcmovne
out
test
das
cwtl
lock
je
dec
add
hlt
arpl
je
and
pop
add
enter
mov
push
mov
test
push
lock
add
cmc
add
jb
sub
mov
xchg
xchg
pushf
jl
pop
push
lea
jno
add
mov
in
lea
push
push
mov
mov
and
lods
jnp
inc
lea
xor
js
jge
push
loop
sub
add
rcll
push
inc
push
mov
ja
scas
xchg
jge
mov
push
orb
and
push
test
fwait
adc
imul
push
sbb
adc
repnz
lea
jmp
loope
addb
xchg
pop
test
mov
testb
pop
push
inc
jge
mov
push
or
sub
mov
xchg
push
pop
or
jne
jne
add
or
jl
in
cmp
test
clc
sub
sarl
jno
lret
inc
sbb
movsl
mov
push
outsl
loop
xchg
sbb
jmp
dec
and
inc
add
lods
push
pop
pop
jno
and
adc
xchg
aam
adc
inc
loopne
lcall
je
sub
or
fdivr
inc
je
adc
dec
jb
sbb
lds
jge
xor
movsl
aaa
mov
xchg
rolb
dec
loope
add
mov
sub
jl
loop
and
jl
pop
push
pop
xor
add
cmp
jl
sbb
or
or
out
lock
ljmp
aas
adc
shlb
fs
mov
in
outsb
shlb
adc
cld
xchg
test
enter
mov
adc
cmp
push
es
dec
lret
mov
adc
es
mov
or
inc
imul
inc
mov
xor
pop
push
push
xor
xchg
sub
leave
xchg
dec
movsl
ds
in
push
push
mov
loop
imul
idivl
daa
dec
popa
cmpsl
xor
sbb
fiadds
lcall
je
xorl
cmp
mov
mov
leave
icebp
mov
cli
lahf
outsb
arpl
push
scas
push
outsb
enter
cmp
call
inc
orl
push
sti
sub
adc
es
mov
add
outsb
test
mov
mov
xchg
and
and
add
jno
inc
cmp
mov
rclb
pusha
sub
cmp
movl
xor
mov
sbb
push
ljmp
shll
inc
ds
jl
fldcw
pop
fcomps
out
imul
outsb
jecxz
ss
xlat
arpl
ret
loop
cwtl
adc
add
or
xor
jbe
ljmp
or
je
mov
pop
psrad
insb
or
or
mov
push
pop
es
in
mov
push
or
mov
and
xchg
in
lahf
cmpl
inc
or
mul
xchg
cs
adc
gs
mov
cli
add
push
xchg
xchg
sub
dec
sub
inc
sub
jle,pn
adc
rol
loop
mov
hlt
js
pop
sarb
ficoms
mov
sub
jmp
add
mov
adc
push
aaa
test
aaa
aaa
sub
jmp
ficoml
loopne
dec
sub
pop
js
inc
es
mov
orb
xchg
js
cmp
jbe
pop
cmpsb
add
or
pusha
mov
outsb
or
inc
or
push
leave
mov
add
jae
stos
inc
or
loop,pn
push
dec
or
xor
test
mov
xor
or
lds
mov
mov
or
ret
push
es
pop
sarb
cmp
insb
adc
push
out
fstpl
mov
mov
inc
mov
sub
jge
adc
lret
mov
pop
add
adc
add
inc
or
js
aas
add
loop
cld
ja
add
cmp
add
add
inc
mov
mov
mov
pop
pop
or
inc
push
add
pusha
call
lret
sub
add
mov
sbb
pusha
je
punpckhbw
xor
push
or
push
mov
pop
leave
das
adc
pushf
subb
or
test
mov
mov
aaa
cld
mov
ret
jl
push
jg
cmpb
jne
inc
inc
xor
stos
or
pop
scas
xchg
out
or
push
jo
paddsb
ret
addr16
xchg
push
fdivrl
outsl
sub
or
movsl
adcb
jno
and
bound
adc
push
sbb
es
jae
jmp
cmp
xor
movsl
push
inc
pop
xor
push
pushf
pop
push
xchg
out
adc
clc
adc
sbb
pop
push
adc
imul
outsl
mov
lret
inc
push
fcmovbe
jae
movb
lods
xchg
or
test
sbb
bound
and
or
shll
ret
fistpll
aas
int3
jmp
sub
fimuls
push
lea
and
loope
loope
mov
pop
jmp
add
cmp
rorb
and
lods
and
add
mov
xor
xor
and
add
push
push
xchg
xchg
add
sub
jne
sbb
imul
sub
sbb
es
std
mov
and
enter
pop
or
fdivrl
push
sbb
add
mov
adc
cmp
sub
mov
push
sub
popf
lock
push
add
and
or
push
xor
lods
gs
adc
adc
js
outsl
imul
daa
add
mov
nop
dec
push
jmp
xchg
sahf
add
sub
pop
rorb
sub
adc
rorb
inc
sbb
sub
fs
adc
xlat
dec
adc
mov
push
xchg
bound
inc
xor
inc
dec
lahf
mov
rcrb
test
xor
push
lahf
xchg
dec
push
sub
jle
test
and
test
decl
fsubrs
xchg
outsb
xchg
inc
iret
push
pop
jmp
or
xchg
pop
popf
mov
adc
push
std
cmpsb
add
adc
or
rcll
loopne
or
jecxz
xor
xchg
pop
mov
push
fisttpl
je
std
push
les
loope
dec
popw
push
jl
movsb
inc
popa
imul
pop
add
jl
loopne
mov
pop
loopne
mov
mov
je
mov
in
loope
inc
adc
or
dec
sbb
lods
inc
loope
jno
dec
add
xor
xchg
movhps
and
jns
movsb
sbb
adc
es
ja
arpl
mov
cmp
loopne
mov
xchg
ja
mov
mov
rcpps
add
pusha
pop
es
push
inc
fwait
xchg
add
adc
push
xor
out
xlat
inc
sbb
dec
or
cmpl
in
add
push
lods
sub
es
jne
pop
leave
pop
inc
jle
daa
jp
or
adc
xchg
ficoms
push
push
dec
push
in
leave
sub
shrb
lcall
fwait
add
or
push
shlb
sbb
sbb
xacquire
adc
push
lret
mov
insl
add
push
pop
push
and
jl
inc
mov
rolb
sub
mov
mov
jp
adc
les
aaa
push
add
in
sub
add
sbb
sbb
inc
movsl
imul
int
dec
sahf
mov
pop
adc
adc
sub
test
mov
shlb
es
add
dec
rclb
mov
and
popa
pusha
add
jl
fs
dec
xchg
loope
in
and
dec
sbb
es
sbb
sbb
jmp
ljmp
cmc
dec
shlb
xchg
dec
sahf
test
jbe
pop
inc
pop
iret
cld
filds
dec
cmp
sbb
test
aam
aam
mov
xchg
push
mov
or
cmp
sbb
inc
xchg
dec
push
je
and
dec
loope
jp
call
mov
bound
ss
mov
dec
insb
xor
adc
movsl
in
pop
sbb
cli
and
push
in
sub
and
dec
movsb
sbb
or
add
call
and
adc
aas
js
jne
adc
push
or
mov
cmp
pop
adc
dec
outsl
adc
push
push
add
pop
lea
adc
and
sub
and
and
ret
jb
adc
lods
in
ss
inc
insb
rcll
fwait
inc
cs
daa
push
mov
or
iret
inc
sbb
int3
stos
movsb
and
inc
movsb
nop
add
mov
mov
dec
adcl
scas
or
pop
adc
mov
daa
pop
outsl
add
push
push
add
mov
dec
sub
adc
sbb
push
sbb
adc
mov
cmp
mov
test
and
lods
sub
test
fwait
test
sbb
xor
js
sub
and
sub
out
ds
dec
or
push
push
push
add
adc
sub
mov
shrb
and
js
and
lahf
jge
aaa
lock
adc
pop
icebp
inc
adc
cmpb
movsb
mov
scas
add
lahf
fdivrs
and
mov
adc
mov
inc
rorb
mov
aam
lea
ss
jmp
push
and
jge
xchg
mov
int
lea
jne
lret
jbe
into
and
call
ret
xchg
fbstp
orb
or
shlb
mov
jne
ret
sub
add
notl
dec
aam
int
xchg
rorl
pop
test
lret
push
js
lcall
mov
repnz
jge
inc
loopne
xor
add
hlt
mov
cltd
and
fsubl
cmp
fcom
popf
fldl
push
enter
and
xor
push
dec
push
pop
xchg
jne
adc
mov
or
and
fsub
adc
or
mov
adc
jp
fldenv
inc
fisubrs
int3
pop
dec
shlb
incl
xor
sbb
in
mov
rol
push
adc
test
mov
add
loope
mov
movsb
or
push
pop
imul
scas
cmpsl
xor
cmp
lahf
jo
add
int
xor
int3
or
or
adc
pusha
decb
adc
and
movsl
or
hlt
gs
jo
int3
mov
out
and
sbb
adcb
xchg
jle
je
sbbb
adc
sbb
add
in
pop
adc
ret
adc
orl
inc
fs
js
jecxz
adc
lods
test
addl
push
add
nop
pop
jp
mov
out
jl
xchg
add
or
jb
jne
cltd
test
xchg
cmp
aaa
pop
push
or
int3
fists
cmp
xor
mov
add
pop
and
add
mov
mov
push
push
pusha
xchg
sbb
adc
xlat
test
ds
mov
jecxz
addr16
xchg
lock
cmp
js
xchg
test
xor
jne
mov
lret
mov
mull
and
add
xchg
pushf
jmp
and
lods
add
and
hlt
xor
or
jb
cmp
pop
and
jns
push
jecxz
mov
adc
jnp
sbb
sbbl
sbb
add
sbb
scas
and
push
add
adc
lea
orb
mov
lods
rcl
or
sahf
out
cltd
mov
mov
addr16
add
imul
cs
push
addr16
pop
punpcklwd
dec
je
jns
fnstcw
enter
lcall
icebp
push
inc
fucom
inc
insb
add
cmp
mov
xor
jne
xchg
mov
xchg
or
mov
pop
mov
add
orl
test
xor
movntq
add
push
leave
fwait
test
gs
push
call
or
mov
add
in
dec
pop
sub
push
xor
jae
int
xchg
push
in
push
in
jo
mov
test
test
or
mov
pusha
lret
nop
dec
and
insb
xchg
popa
shr
enter
or
adc
add
or
add
and
and
sub
mov
movsb
or
mov
and
mov
mov
daa
mov
xchg
les
pusha
push
inc
out
pop
dec
push
add
rol
cmp
mov
mov
push
cmp
ja
or
lret
add
mov
xor
test
xor
or
xor
test
sub
jmp
xchg
pop
lcall
xchg
sub
iret
in
mov
data16
aas
push
sbb
jl
jmp
sarl
movsb
popa
xchg
adc
cli
or
das
xchg
or
jns
cs
mov
adc
mov
inc
pop
inc
mov
scas
xchg
jmp
sub
enter
xor
adc
loopne
push
cs
mov
ret
cmp
cmp
xor
lods
adc
xor
sub
sbb
cmpsb
mov
and
in
pusha
jns
movsb
decb
pop
mov
in
adc
fwait
fistl
sub
mov
or
add
xchg
movsb
lcall
add
inc
rcr
test
stc
jb
sbb
add
cmp
jae
rcrb
rcrl
jnp
orb
cmp
add
ja
push
push
push
dec
je
loopne
mov
add
mov
adc
add
mov
je,pn
push
outsb
add
mov
sub
pop
adc
aas
shr
inc
add
cmp
jl
pop
mov
fdivrp
cs
mov
mov
lcall
std
jmp
jle
in
jae
mov
sub
loope
add
cmpsl
mov
nop
sub
and
or
mov
leave
enter
xorb
adc
add
pop
push
xchg
lods
xchg
aaa
cld
mov
mov
mov
pop
push
test
mov
and
jle
mov
xchg
mov
add
bound
jb
sbb
sub
and
lea
fdivl
fwait
sub
cmp
adc
inc
add
subl
js
pushf
cmp
inc
cmc
sub
fldl
push
enter
jle
add
fstpt
sub
xchg
inc
cltd
add
sub
or
inc
and
push
aam
mov
sbb
cmp
mov
inc
pop
insl
dec
test
lret
fldenv
pop
je
mov
shrl
pop
vorps
mov
xor
pop
adc
into
cmp
mov
adc
jp
shlb
or
push
adc
faddl
or
dec
or
add
inc
mov
push
data16
inc
ja
jge
stos
sbb
sahf
or
push
adc
jns
inc
or
ret
aas
jecxz
adc
or
add
dec
adc
xor
sbb
test
or
sub
shll
jbe
dec
xor
lds
mov
push
hlt
out
push
push
jmp
ja
jb
loope
jmp
jmp
mov
fiaddl
andb
cmpsl
test
lock
dec
mulb
mov
fcomps
add
adc
mov
shrb
mov
mov
and
outsb
popf
jbe
add
inc
inc
arpl
inc
sbb
mov
jo
es
push
add
popa
mov
int3
push
xor
mov
and
push
jo
push
addl
inc
imul
nop
or
loopne
clc
fs
push
mov
cltd
xchg
repnz
enter
add
jns
mov
add
and
daa
ss
jge
mov
loop
in
imul
push
inc
pop
test
push
mov
pop
je
mov
mov
xchg
dec
sub
push
in
push
rolb
xor
dec
sahf
stos
adc
imul
adc
sahf
nop
and
add
sbb
lcall
mov
mov
or
dec
cmpsl
ret
xor
adc
adc
jle
xchg
xchg
aaa
add
add
dec
cmp
sub
add
shrb
movsl
inc
rolb
add
xor
mov
adc
mov
mov
and
fbld
dec
sahf
rolb
add
push
push
and
pop
stc
cli
mov
add
or
test
xor
add
or
xchg
adc
sbb
and
and
sbb
pop
sub
push
nop
lret
or
xor
or
xchg
add
inc
dec
add
inc
sub
dec
pcmpgtb
test
pop
mov
sbb
add
sub
mov
and
mov
jbe
mov
inc
in
add
les
enter
or
shl
sbb
aam
cwtl
pop
add
mov
mov
or
and
movsl
mov
adc
sub
pop
pop
and
jnp
inc
pusha
add
pop
mov
add
nop
in
fidivs
sub
inc
and
or
pusha
dec
add
jg
ss
insb
cltd
lods
je
push
popa
nop
inc
lea
mov
test
jae
sbb
sbb
pop
shl
sub
push
int3
adc
enter
rclb
shr
insl
cwtl
mov
push
ja
dec
and
jmp
data16
cmovbe
imul
or
or
xchg
data16
cmp
xchg
data16
or
data16
pop
sub
sub
xchg
and
and
xchg
data16
add
xchg
data16
adc
xchg
data16
add
jl
add
adc
insb
or
sbb
mov
inc
repnz
xchg
cld
add
add
sub
xchg
add
aaa
in
adc
shlb
and
mov
cli
or
sub
enter
pop
lret
and
pop
and
and
dec
mov
sbb
add
sbb
xchg
incb
dec
push
cmpb
adc
and
shr
js
ret
pop
int
cmp
lods
lea
filds
fs
pushf
sbb
cmp
or
cmp
add
add
aas
dec
test
adc
data16
hlt
arpl
fwait
dec
xor
pop
pusha
out
cmp
jne
push
sub
add
adc
cmc
cmp
enter
add
jmp
add
enter
sbb
dec
adc
mov
movl
in
in
sbb
mov
add
sbb
push
sbb
cmpl
add
cmp
dec
pop
mov
rclb
shlb
jp
dec
sub
jge
push
push
xchg
xchg
xchg
dec
imulb
insb
cmp
or
and
add
mov
loopne
loopne
inc
or
daa
jmp
or
iret
sbb
pop
jnp
mov
push
inc
aam
sub
or
cld
sbb
sub
popf
cmpsl
jns
inc
fimuls
push
hlt
pop
lock
mov
and
stc
outsl
adc
icebp
sahf
in
scas
and
out
sub
sbb
jne
and
add
sbb
adc
sbb
push
ret
dec
xor
cmp
sub
or
xchg
xchg
and
or
push
orl
sbb
push
sbb
pushf
adc
mov
or
sub
cwtl
movsl
dec
mov
add
jbe
or
fsubl
ret
jp
xor
add
sbb
add
adc
sub
gs
dec
add
and
adc
push
adc
clc
add
jl
in
or
pusha
popf
push
mov
dec
or
push
nop
pop
call
add
les
inc
movl
add
je
mov
cmp
add
mov
sub
and
sbb
xor
prefetch
adc
xchg
xchg
pushf
pusha
inc
and
jg
xchg
xchg
icebp
xor
cmp
jge
or
xchg
ror
shrl
push
mov
hlt
push
pop
inc
insb
test
dec
rclb
int
dec
les
mov
test
push
int
xor
cmp
lret
repz
call
hlt
mov
loopne
ja
pop
cmp
mov
adc
iret
dec
in
push
std
xor
adc
inc
in
js
ds
popa
xchg
xchg
sarb
cmp
jge
lea
add
mov
lods
sub
and
or
adc
ja
shlb
and
sbb
adc
enter
lret
jae
jecxz
mov
sub
xor
jle
mov
add
sub
push
cmp
inc
iret
or
inc
adcb
or
mov
adc
sub
xchg
dec
call
mov
or
sti
jp
movb
shlb
std
jge
and
jne
lea
add
mov
clc
mov
cmp
sbb
push
add
pop
int
and
add
je
cmp
mov
fdivr
testb
xchg
shlb
clc
daa
sar
sbb
jge
jae
push
lsl
jmp
mov
xor
in
or
cmp
dec
push
ljmp
dec
scas
js
pusha
rorb
pop
push
and
lea
pop
push
dec
dec
push
xor
jl
mov
add
fs
xor
dec
rolb
xor
pop
jmp
pop
pop
inc
add
fs
inc
push
imul
and
pop
rorl
or
out
and
cmpl
dec
and
roll
mov
adc
fidivs
add
loopne
sbb
or
dec
or
sub
pop
jne
xchg
lret
adcl
ljmp
and
xlat
jmp
or
push
dec
syscall
imul
push
test
lds
mov
dec
inc
pop
mov
pop
and
decl
dec
inc
push
pmulhw
sub
dec
adc
adc
dec
adc
dec
mov
adc
sub
insb
and
insl
jns
dec
fs
cmp
test
adc
scas
and
xchg
lret
cli
dec
loope
les
movsl
and
aaa
ja
leave
pop
sbb
inc
fidivs
xor
adc
cmp
and
jae
js
add
mov
gs
mov
and
movsb
xor
sbb
leave
iret
add
leave
jo
fs
and
nop
pop
or
or
xchg
ficompl
xor
or
and
movsb
imul
popa
loope
dec
sbb
dec
pop
push
mov
push
sub
push
jno
inc
shrl
add
jb
test
dec
adc
sbb
cld
int
pushf
dec
and
pop
pop
sbb
push
xor
shl
cmp
sub
xchg
mov
cmpl
mov
and
inc
and
inc
or
push
pop
xchg
xchg
push
sub
push
fildl
sbb
lock
repnz
inc
imul
sbb
sahf
fiaddl
int3
jne
rol
sti
pop
sbb
sbb
cmpl
mov
mov
jle
filds
fs
lret
sbb
xchg
lret
je
jge
out
add
fs
andl
add
add
fs
pusha
sti
add
xor
pusha
push
aas
push
jns
test
cmp
data16
sub
aad
nop
call
lret
jp
aaa
jmpw
adc
xor
or
dec
mov
jo
jle
mov
push
dec
insb
push
clc
mov
and
dec
mov
outsl
rclb
decw
lahf
or
adc
les
mov
pop
xchg
outsl
inc
sbb
mov
mov
push
and
dec
or
scas
jge
outsb
or
xchg
cmp
mov
cs
lret
shrl
push
and
dec
cmp
lret
or
xor
push
xchg
adc
mov
mov
and
jno
lods
mov
dec
cmp
int
ret
addr16
clc
jl
mov
add
or
mov
lock
nop
fisubl
push
dec
jne
dec
xchg
mov
mov
adc
sahf
inc
or
sbb
or
inc
scas
add
mov
jg
push
add
push
push
stos
mov
dec
adc
push
adc
adc
cmp
cs
fcomip
leave
add
lea
cmp
jmp
pop
or
or
or
dec
mov
add
xor
add
pop
ret
xlat
addb
adc
dec
dec
adc
test
mov
nop
mov
xchg
or
js
je
or
cmpb
mov
movsb
jns
jmp
ret
dec
sahf
add
adc
xor
sub
and
enter
push
mov
les
inc
and
testb
and
mov
mov
cmpsb
cmp
mov
loope
les
jp
fisttpl
xchg
data16
xchg
lds
xchg
push
jne
ds
xor
mov
dec
add
sub
pusha
lods
adc
xchg
rorl
jo
fwait
adc
push
aas
dec
add
js
loope
cmp
scas
or
test
add
nop
out
nop
add
inc
loop
inc
aam
les
aam
dec
push
push
and
mov
mov
and
ss
add
push
mov
cmpsl
ret
pop
xor
imull
and
xor
dec
adc
int3
arpl
andl
push
cmp
add
dec
push
inc
aam
sbb
sub
movsb
out
pusha
and
mov
and
xor
sbb
cmp
cmpsl
setae
ret
push
sub
mov
push
orl
test
popf
rcl
xor
sbb
jmp
call
and
shrb
jno
loopne
dec
lods
mov
cmp
aad
push
sbb
xchg
mov
jecxz
sub
and
sub
or
out
push
adc
imul
orl
add
sub
jne
pusha
add
dec
push
mov
or
pop
nop
sbb
sbb
pop
cwtl
add
imul
imul
and
jo
mov
incl
xchg
scas
iret
cmp
and
movsb
stos
add
mov
xchg
sub
andl
loop
xor
add
sarl
push
dec
push
imul
pusha
shlb
xchg
push
into
loop
cmp
adc
dec
out
push
pop
push
or
jp
mov
mov
nop
sbbb
fcoml
adc
je
push
stos
inc
or
testl
add
cmp
xchg
xchg
add
mov
or
pop
jb
addr16
and
lret
pushf
cmp
push
scas
int3
mov
and
push
addr16
mov
and
cmpsl
mov
xorb
jb
push
mov
mov
enter
push
or
stos
jne
pop
push
adc
and
dec
mov
sub
push
js
rolb
push
movsb
jns
mov
fistps
dec
ret
in
add
push
inc
pop
dec
in
push
push
adc
loopne
sgdtl
push
adcl
movsb
cmp
nop
pop
nop
sbb
jnp
ss
gs
mov
inc
add
mov
jb
daa
inc
insb
sbb
mov
sub
jecxz
and
jg
movsb
rcll
pop
dec
popf
je
xchg
pop
push
sbb
fnsetpm(287
adc
cmp
add
xor
dec
rcrl
inc
test
xchg
sbb
cmp
aas
dec
jp
pusha
outsb
xchg
imul
xchg
int3
aaa
xchg
adc
leave
adc
or
inc
cmpsb
outsb
cmp
push
xor
cmp
and
add
push
or
jg
enter
je
jl
sub
push
or
sbb
jl
sub
jne
sub
je
jns
loopne
mov
enter
dec
lahf
test
mov
mov
mov
adc
test
movsl
xchg
out
xor
pop
nop
add
xchg
dec
dec
hlt
xlat
xlat
sub
mov
stos
push
push
adc
inc
repnz
je
mov
mulps
mov
psubusw
jg
and
add
test
rclb
xor
inc
xchg
sbb
push
out
mov
lea
add
sbb
outsb
adc
push
pop
pop
sbb
add
or
sub
bound
xor
inc
jb
mov
addb
notb
movsb
push
pop
push
add
mov
dec
cmpsl
inc
and
dec
mov
xchg
mov
aam
cmpsb
fisttps
push
or
mov
ret
pop
insb
insl
adc
mov
in
pop
jge
add
or
ljmp
mov
cltd
inc
cmp
popf
inc
add
cmp
fsubr
sbb
repz
xor
aaa
insb
and
or
add
jno
ret
sbb
test
mov
add
xchg
or
jo
lock
shrl
hlt
mov
adc
and
jo
xor
push
dec
mov
dec
test
shrl
add
aad
sbb
inc
pop
add
loope
dec
add
aaa
sbb
pushf
ret
sbb
mov
fs
push
ds
and
xchg
dec
ja
pop
or
and
add
inc
xchg
push
sub
or
mov
lcall
sub
mov
inc
dec
xor
repz
out
mov
test
inc
mov
or
fisttpl
push
mov
repz
adc
pop
push
inc
pushf
and
pop
or
or
jg
test
xor
jne
enter
int3
fldcw
mov
xor
mov
mov
mov
out
inc
pop
and
out
fidivl
fcompl
and
push
mov
dec
jg
loop
aas
jnp
cmpsb
add
push
fidivs
push
je
push
mov
fldt
sub
jne
pop
andl
jo
cmp
loopne
pop
enter
inc
push
aam
mov
popf
and
lods
fwait
cmp
xchg
adc
add
fimull
add
stc
repnz
cs
pushf
add
test
jecxz
popa
orl
lahf
stc
push
clc
inc
xor
inc
push
cmpb
sbb
cmc
or
mov
adc
movzbl
mov
test
xchg
and
or
movl
dec
sub
adc
mov
pusha
pusha
and
pop
sahf
cmpl
adc
cmp
jbe
or
push
inc
nop
out
test
mov
hlt
daa
xor
add
shll
push
loope
in
and
push
xorb
repnz
sbb
jbe
je
fcomp
push
inc
loopne
pop
test
jecxz
mov
insl
mov
inc
andl
xchg
add
push
add
es
cmp
pop
jno
and
push
cmpb
pop
mov
pop
xor
push
lods
outsb
sbb
jno
mov
scas
push
adc
pop
pushf
push
jns
sub
sbb
push
popl
adc
or
pop
data16
loop
imul
cmp
dec
shrl
loope
pop
push
lahf
push
fucom
cmp
jmp
inc
lods
and
add
outsl
add
pmaxub
xor
sub
mov
fisubl
test
and
cmp
xor
jb
adc
movsl
push
dec
and
pop
mov
mov
mov
and
ret
cmp
jae
out
ljmp
fstpl
fstpt
lock
and
xor
xchg
jg
sub
jne
rol
movsb
inc
or
mov
dec
mov
dec
dec
dec
dec
pop
mov
test
add
std
testl
mov
add
push
mov
and
dec
sbb
add
add
leave
inc
add
stos
xchg
sbb
cmpsl
inc
add
xchg
xchg
xorb
push
fucomi
adc
jmp
push
push
fwait
sbb
movsl
push
mov
xchg
lods
movsb
hlt
cmp
mov
xchg
sub
xor
dec
lock
adc
pop
gs
xor
enter
incl
je
adc
jne
roll
les
cmc
adc
enter
inc
push
push
sbb
or
xchg
cmp
or
outsl
mov
adc
mov
repnz
test
or
test
incl
push
jo
outsb
jle
add
mov
inc
mov
or
aas
data16
cmp
mov
mov
shrb
pop
adc
adc
inc
adc
bnd
cmp
jnp
sub
mov
cmp
es
push
push
pop
out
adc
enter
jmp
push
pop
and
ret
es
inc
sbb
cltd
dec
adc
add
enter
jno
add
push
xchg
aam
dec
mov
adc
mov
aad
or
ljmp
mov
push
fmuls
adc
call
loopne
jno
sarl
mov
fcoml
sbb
mov
push
sub
xor
jo
aaa
or
inc
sbb
jl
pop
rolb
lock
push
pop
sbb
xor
cmp
or
or
out
mov
sbb
add
jecxz
icebp
or
mov
mov
mov
push
xchg
adc
les
and
movb
push
jle
mov
push
mov
les
sbb
add
lahf
sbb
xor
je
outsb
popa
push
jmp
popl
pop
in
add
adc
cmp
sbb
fstpl
aaa
sub
sbb
dec
dec
add
popa
mov
adc
pushf
push
dec
outsl
sub
sub
or
stos
inc
sub
clc
mov
jns
mov
test
mov
jne
jo
flds
pop
push
or
in
add
jns
cmp
movsl
std
dec
jmp
jo
push
mov
cmc
and
ret
fildll
ret
add
and
aas
sub
cltd
jp
or
jecxz,pn
adcb
inc
int3
adc
add
dec
fdivs
jnp
and
and
or
lret
test
add
jb
add
out
fiaddl
add
pop
js
filds
push
inc
inc
push
addr16
pop
adc
lea
pop
add
sbb
add
pop
adc
imul
lods
enter
cmp
add
jle
add
inc
popf
cmp
insb
nop
push
push
bound
push
push
jo
xchg
mov
loopne
sbb
jo
push
sub
mov
jb
mov
ret
inc
push
inc
inc
insl
pop
pop
addr16
cmp
ljmp
loope
mov
push
gs
jb
xor
xchg
xchg
add
push
cmp
jbe
jae
pop
or
and
adc
push
add
mov
popa
pushf
and
sbbb
ljmp
and
lods
shr
lea
mov
add
adc
jbe
add
int
test
push
xchg
outsb
mov
inc
iret
add
add
xchg
mov
dec
push
testb
subb
add
mov
push
movsl
inc
cmpsb
and
and
adc
insb
xchg
in
inc
cmp
jle
push
xchg
mov
notl
xchg
and
repnz
shr
lret
stc
mov
mov
mov
test
dec
push
imul
andl
adc
ret
or
add
pop
ja
sub
js
mov
sbb
adc
mov
sbb
sahf
sti
fldl
int
xor
add
push
push
pop
movsb
adc
mov
loopne
mov
xchg
push
js
loopne
test
imul
add
and
inc
jle
xchg
test
and
pop
addb
or
sbb
inc
test
lea
jno
add
jecxz
sub
xor
and
cmp
out
add
mov
imul
pop
xor
pop
shlb
hlt
sbb
add
sub
push
js
jl
xor
lahf
orb
xchg
imull
mov
xor
lcall
and
inc
insl
pop
and
in
movsl
or
test
insl
inc
add
dec
and
dec
sbb
pop
push
pop
inc
dec
mov
or
cmp
adc
mov
and
mov
inc
lods
pop
and
subl
imul
popw
insb
cmp
movsb
or
push
inc
pop
xor
pop
dec
or
or
imul
add
rorb
push
and
add
or
or
adc
pop
push
lods
push
sbb
aam
or
push
and
add
adc
xchg
insl
imul
loope
and
pop
scas
push
test
xchg
nop
sub
cltd
mov
mov
enter
divl
cmp
adc
cmp
or
or
aas
fs
rorb
xor
and
neg
cmovle
inc
test
pop
cmp
push
dec
pop
mov
pusha
inc
add
and
or
add
fcmovnb
pop
xor
or
lods
lcall
add
and
mov
iret
int3
sbb
fwait
sub
xor
push
jno
inc
inc
mov
xchg
sbb
and
jp
loope
xchg
cmp
dec
mov
in
pushf
add
and
es
adc
lea
or
push
and
aad
jb
int3
ss
mov
xchg
adc
lds
cmp
sbb
in
sub
lret
pop
or
dec
add
in
pop
cmp
sbb
pop
in
nop
xchg
adc
adc
cli
sub
dec
decl
xor
xchg
scas
mov
lea
xchg
push
scas
rcl
and
cmp
mov
cmp
mov
push
add
pop
xchg
mov
test
loopne
orb
sbb
mov
pusha
cmp
push
je
pushf
or
add
push
jno
andb
jmp
imul
cmp
xor
add
in
mov
test
lds
push
mov
mov
dec
sub
decl
dec
mov
xor
and
push
inc
pop
stos
adc
aaa
lahf
cmp
pop
fimuls
lcall
add
cmp
test
cmovl
or
cmpsl
rolb
ret
adc
dec
dec
push
filds
ret
adc
frstor
jb
xchg
cmp
fdivl
insl
xchg
pop
popf
bound
sub
ret
inc
push
xchg
push
incl
add
mov
ja
dec
sub
test
movsb
lods
popa
jl
add
pop
adc
test
ret
add
jl
adc
xchg
push
mov
orb
cmpsb
push
popa
inc
fcoms
cmp
cmp
test
mov
lods
add
addl
je
loopne
or
cmp
mov
mov
dec
or
push
cmp
shrb
mov
je
push
jne
lea
xor
rcll
xlat
push
add
mov
insb
jmp
inc
fs
cmc
or
xor
cmpl
sbb
insb
cmpsb
je
pop
push
jbe
and
push
push
dec
sbb
pop
mov
insb
cmpl
sbb
js
mov
daa
sbb
pop
and
xlat
subl
pop
pop
push
ljmp
pushf
jnp
push
and
dec
js
mov
pop
mov
shlb
mov
or
mov
jns
or
sbb
test
jae
adc
adc
xchg
inc
aaa
sbb
dec
les
and
add
cmp
and
xlat
adc
push
mov
sub
addl
jmp
xchg
dec
sbb
add
addl
inc
mov
cmp
pop
gs
xlat
mov
mov
inc
xor
mov
or
pop
dec
cwtl
dec
push
add
dec
push
hlt
add
push
mov
pop
sub
jle
test
inc
cmp
inc
and
inc
cmpsb
add
fs
mov
cmp
push
mov
imul
mov
add
adc
sti
ss
mov
xor
pop
bound
jno
test
mov
mov
in
pushf
adc
add
cs
hlt
insl
mov
lret
mov
int3
mov
das
scas
adcl
sbb
jl
dec
mov
inc
add
push
and
dec
cmpsb
cmpsb
pushl
or
jo
sarb
jl
popa
mov
or
inc
add
shrl
das
test
fs
sub
jo
push
imul
push
sbb
add
add
dec
sahf
mov
in
das
ret
fucomip
popf
test
mov
jl
inc
out
xchg
add
lock
shlb
xchg
fstpt
fwait
push
or
adc
push
inc
xor
xchg
pop
jp
fisubs
mov
outsb
fdivl
into
scas
inc
xor
pop
je
xorb
pop
pop
mov
dec
and
inc
lret
add
movsb
push
fmulp
inc
sub
punpckhbw
mov
jl
sbb
xchg
adc
push
jp
pop
enter
test
ret
sbb
arpl
jge
inc
jb
mov
fs
ret
jnp
pop
in
and
pusha
dec
pusha
lcall
xor
mov
add
and
popa
sbb
mov
xchg
dec
adc
jmp
or
pop
push
and
adcl
sbb
and
bound
or
inc
popa
testl
add
dec
lock
inc
mov
add
rcr
cmp
mov
mov
pop
pop
jo
push
cmp
push
cmpsb
sub
cs
mov
sbb
es
push
inc
push
xor
inc
daa
insl
sub
push
adc
and
leave
pop
cmpl
add
sub
cmovno
inc
push
or
dec
adc
andb
xor
push
or
dec
adc
xchg
add
or
repnz
aas
test
and
push
sbb
jmp
je
adc
mov
dec
push
xchg
sbb
sub
outsb
into
inc
add
int3
icebp
dec
dec
and
sbb
add
add
adc
pop
pop
je
adc
pop
es
push
push
enter
push
push
dec
int
xchg
and
daa
sub
or
inc
fwait
sub
and
and
dec
push
adc
xor
insb
cmp
call
test
dec
sub
xor
cmp
mov
push
nop
add
mov
inc
test
aas
fs
test
adc
lahf
xor
mov
pop
test
mov
es
stos
jbe
in
aaa
sbb
cmp
mov
aas
nop
movsl
adc
test
sbb
add
cmp
inc
xchg
fisttpl
adc
jno
stos
inc
pop
sti
or
and
jns
nop
mov
dec
and
sub
adc
lods
xor
adc
jp
dec
cmp
push
xor
repnz
pop
leave
and
sub
push
stos
bound
pop
mov
add
lods
loope
insl
add
or
mov
or
rcrl
loopne
pop
sub
clc
mov
hlt
sbb
out
sub
dec
test
xor
xor
lahf
push
push
adc
mov
sub
push
test
les
push
xchg
fisttps
sub
sub
cmp
mov
xchg
cmp
adc
je
lock
or
push
mov
sub
inc
xchg
xlat
enter
lods
jne
jl
or
sub
xor
xor
mov
faddl
xchg
add
sbb
or
and
sub
out
dec
data16
xor
adc
iret
cmpsb
fwait
rolb
inc
push
pop
and
dec
sbb
or
hlt
push
jbe
and
add
dec
stos
adc
push
adc
aad
call
mov
sub
sub
mov
nop
and
push
jo
sbb
xchg
adc
sysret
and
sbb
call
add
sub
in
pop
inc
cwtl
das
sub
dec
inc
insb
test
mov
mov
add
pop
dec
arpl
lock
sbb
jb
int
dec
mov
sub
pushf
out
push
call
adc
mov
add
jno
push
mov
test
mov
and
jl
mov
rclb
leave
add
pop
stos
xchg
sbb
or
leave
sarl
adc
adc
and
mov
stc
add
nop
inc
es
push
or
inc
repnz
addb
jne
mov
mov
sbb
dec
out
lea
sub
imul
cmp
cmpsl
and
lods
movsl
xor
jbe
out
or
add
imul
ja
in
insl
sbb
mov
int
sub
push
sbb
adc
sbb
lds
and
mov
stc
mov
adc
loopne
sbb
xchg
add
mov
dec
cmp
and
push
add
and
cmc
pop
push
enter
cmp
or
pusha
adc
js
outsl
push
inc
and
push
and
dec
and
mov
in
cld
lea
and
clc
dec
or
push
pop
fs
jg
inc
insb
or
in
mov
or
ja
cli
or
fisttpl
sub
push
xchg
out
test
test
es
rclb
scas
and
dec
and
loop
inc
popa
subl
jo
ret
pusha
dec
sbb
pop
mov
addb
pop
test
push
xchg
lods
adc
sbb
int
pop
jo
or
push
or
enter
xchg
nop
sbb
mov
call
pop
adc
or
mov
mov
push
mov
sahf
xor
sahf
inc
push
add
push
insb
pop
sub
dec
xchg
es
adc
push
fnstenv
out
int
call
das
add
push
inc
push
sbb
push
pop
add
push
adc
push
mov
inc
xchg
pop
push
add
sub
jge
popf
leave
push
dec
sub
adc
pop
push
dec
jl
ss
fimull
push
sbb
je
xchg
or
int3
fmull
adc
hlt
adc
subl
dec
mov
jecxz
adc
je
aam
je
dec
xor
aam
imul
xchg
add
incl
or
add
add
in
or
lea
dec
loopne
pop
aad
xchg
xchg
or
inc
call
in
push
sub
jne
adc
ret
sub
mov
je
enter
addr16
xor
adc
xor
inc
jo
push
mov
xor
and
inc
dec
xor
inc
dec
push
add
or
imul
das
test
push
test
dec
adc
or
rclb
mov
loopne
pop
cmpps
xchg
and
push
or
jnp
or
repz
mov
push
hlt
push
or
sub
js
clc
bound
cmpsb
nop
cmpsb
xchg
push
mov
and
xchg
cld
xchg
add
test
pushf
rcrb
and
fidivl
ljmp
pop
and
sub
and
or
push
push
add
push
pop
mov
mov
or
adc
mov
xor
add
adc
rcll
pop
inc
stos
mov
push
jne
adc
movsb
cmp
dec
mov
push
pop
rclb
and
push
repz
xchg
mov
in
test
xchg
mov
shll
ficomps
enter
int3
call
sbb
jns
arpl
sbb
xchg
rcrb
in
inc
or
sbb
in
push
shrb
add
sbb
add
push
add
adc
push
pusha
leave
adcb
mov
and
iret
add
mov
cmp
and
and
les
aam
and
add
fsubrl
repnz
cmpb
test
enter
in
pop
and
sub
testl
mov
in
mov
xor
cmp
xchg
hlt
test
and
mov
pusha
es
pop
mov
jbe
shll
pusha
push
fsubrs
and
dec
das
aam
sarb
and
sbb
and
sbb
or
mov
mov
and
jge
cs
cmpsb
lods
ret
lock
outsl
dec
pop
dec
pop
or
jl
add
dec
add
push
lds
loop
and
test
push
add
xor
adc
lods
adc
mov
sub
sub
mov
orb
sbb
dec
sbb
int
pop
and
xor
xor
imul
mov
xchg
jne
cltd
adc
add
sbb
xor
push
inc
imul
shll
in
aas
push
cmp
inc
sahf
outsb
arpl
inc
in
inc
sahf
cld
inc
fcomps
xchg
inc
pop
add
push
hlt
or
inc
fstl
pop
sbb
mov
inc
imul
inc
xor
les
jmp
push
es
out
adc
sbb
ret
pop
push
nop
sbb
fs
stos
mov
and
or
loopne
dec
cmpb
enter
mov
inc
movsb
aas
lods
insl
dec
dec
cmpb
dec
jae
cmp
cmp
push
leave
and
repnz
mov
nop
test
dec
rclb
inc
iret
inc
adc
xchg
jge
inc
lea
lcall
adc
iret
xchg
push
repnz
push
lea
pop
stos
into
loop
ror
in
mov
pop
imul
loopne
mov
sub
ret
jo
push
push
repnz
push
push
pop
sbb
mov
and
andl
add
add
lea
xchg
xchg
jl
jo
lock
aam
shlb
jb
flds
pop
jb
enter
mov
jl
clc
jb
xor
xor
test
push
cmp
or
xor
mov
and
mov
cwtl
sbb
icebp
add
sub
test
adc
sbb
in
outsb
ljmp
or
jecxz
pop
jo
cmp
pop
add
sbb
rcll
push
adc
sbb
push
push
mov
dec
sahf
ss
hlt
mov
adc
aaa
pop
and
sub
loopne
sbb
push
xchg
and
inc
lea
inc
and
mov
inc
scas
ljmp
pusha
xchg
pop
sub
sub
and
add
add
mov
in
fdivl
movsb
dec
lret
dec
andb
xchg
cmpb
pusha
add
mov
sbb
mov
inc
fs
or
mov
out
xor
pop
dec
adc
mov
xor
and
cmp
dec
and
and
orb
dec
jns
jne
dec
pop
push
call
dec
loope
fists
rorb
dec
dec
inc
repz
mov
xor
or
push
dec
or
mov
inc
lcall
lods
push
dec
adc
shlb
loop
push
add
xchg
mov
adc
adc
adc
push
bound
pop
xchg
xchg
sub
push
dec
sub
add
xchg
sub
adcb
dec
cmp
mov
xchg
and
cmp
add
push
sbb
mov
add
xchg
xor
test
sahf
movaps
shlb
cmp
mov
push
or
ss
test
enter
loopne
adc
mov
aaa
lea
mov
add
adc
fsub
and
subl
sbb
sbb
lret
pop
pop
add
rcll
mov
or
cmp
xor
nop
or
test
dec
lods
sbb
and
mov
cmp
shlb
push
xor
or
inc
clc
popl
sub
or
movl
push
and
xchg
int3
xor
hlt
rorb
and
mov
arpl
jae
cmp
sub
das
add
cmp
lods
imul
or
and
cld
and
xorl
add
mov
add
lret
xor
pop
pop
movsl
daa
lods
popa
in
push
and
xor
sbb
push
out
cltd
inc
inc
pop
xchg
test
mov
mov
and
sbb
cmp
js
mov
test
ret
dec
and
add
cmp
push
dec
pop
or
adc
sahf
adc
adc
dec
xchg
pop
xor
pop
jl
dec
jne
mov
xor
and
push
adc
cmpb
jno
int3
push
in
push
push
leave
jae
cmp
add
push
add
dec
inc
enter
xchg
jl
je
je
mov
shlb
mov
sub
push
aad
add
jge
pop
push
or
push
ffreep
pusha
mov
mov
sub
jo
int
dec
enter
cld
notl
or
dec
or
daa
jle
sub
push
lods
or
jmp
leave
adc
xor
int
push
cmp
jae
call
out
pop
adc
sbb
mov
repz
push
pop
cmp
sub
push
push
out
fucomp
pop
inc
jne
mov
adc
xor
aas
insl
add
push
repnz
subl
ss
inc
out
adc
dec
mov
inc
sub
mov
jge
push
bound
or
push
repnz
sahf
xlat
jns
add
addb
jecxz
xor
dec
mov
and
push
jno
push
jmp
push
adc
add
adc
imul
push
mov
and
or
iret
xor
xchg
mov
and
xor
or
mov
pop
adc
push
inc
mov
add
and
and
lock
dec
add
jmp
out
add
sub
sub
and
push
or
inc
mov
imul
add
xor
ljmp
push
fisttpll
mov
lods
mov
and
cmp
sbb
and
lock
int3
jns
dec
xchg
cltd
jae
xchg
inc
xchg
and
test
ss
arpl
sbb
adc
cmp
and
lret
dec
sbb
bound
mov
loope
fs
jne
and
mov
push
sbb
aam
loop
push
mov
or
movsb
cmp
add
popf
add
add
mov
push
divl
pop
inc
mov
jmp
or
xor
sub
cld
dec
jge
xor
cmpsb
and
test
xor
sub
xor
push
cmp
negl
call
sbb
lret
dec
jns
ret
in
or
das
add
shll
or
push
push
xchg
sub
sbb
mov
mov
xor
jne
and
jae
pop
or
or
cli
cltd
addr16
or
leave
and
jne
dec
lahf
xor
adc
orb
or
add
add
and
daa
add
and
mov
adc
sub
and
adc
dec
add
and
lahf
pop
xchg
push
add
adc
sub
ja
mov
push
inc
adc
and
push
mov
aas
lods
mov
lea
nop
pop
mov
xchg
nop
or
mov
cmc
and
mov
push
adc
aas
ret
inc
cmp
jae
mov
cmpsb
pusha
loopne
add
inc
mov
rolb
xlat
aad
pop
sbb
ret
inc
sti
std
pushl
aam
lock
notb
and
std
add
jle
and
sbb
inc
push
add
inc
leave
or
add
dec
add
or
add
push
sarb
dec
loopne
filds
jo
stos
push
in
sti
call
repz
mov
out
fprem
add
insl
call
mov
sub
add
addb
test
lea
inc
popa
add
dec
cmp
add
mov
sbb
test
add
add
inc
add
shll
adc
pop
push
imul
in
jo
sub
insb
jnp
ss
pop
inc
pop
add
xor
adc
pop
pusha
cmpsb
insl
sub
or
loopne
push
in
loope
out
adc
sbb
pop
dec
sub
int3
cmp
sbb
aam
lods
push
push
fsts
xor
sub
pop
insb
in
push
mov
daa
daa
leave
dec
aaa
and
xchg
and
xor
pop
pop
pop
cmpb
cmp
ds
mov
push
cs
arpl
cmp
push
insb
sub
loopne
insb
mov
push
or
lea
fbstp
ljmp
adc
mov
cmp
add
or
push
insb
adc
inc
fs
xchg
cld
fcomip
iret
addb
dec
xchg
or
ljmp
adc
fscale
mov
xchg
mov
test
ficompl
or
mov
incb
pop
adc
test
jle
insb
xchg
dec
dec
in
and
sub
jbe
dec
add
test
jo
or
test
push
add
adc
repz
fcompl
adc
jge
dec
clc
movsl
xchg
adc
test
sbb
aas
mov
pop
in
imul
fcomp
test
mov
das
aaa
mov
mov
popf
xchg
nop
cmp
jne
rcr
js
popf
orb
inc
cmp
xchg
mov
push
cwtl
mov
into
push
xor
out
fsts
or
andb
jno
cmc
add
es
int
adcl
and
add
sbb
sub
cwtl
dec
or
popf
scas
setg
daa
sbb
mov
add
or
test
adc
stos
in
jae
lock
hlt
inc
mov
jbe
push
pop
repz
jecxz
push
mov
jl
dec
int3
push
and
cli
es
sbb
imul
lock
sbb
lea
popf
push
push
pop
mov
lea
mov
push
lock
mov
jmp
fdivp
mov
out
push
mov
and
or
or
je
push
xchg
jne
jge
push
push
mov
jnp
push
fwait
mov
jle
mov
mov
mov
lock
js
add
push
jbe
out
ret
jnp
inc
and
dec
inc
hlt
xor
sub
push
sub
rorl
mov
and
jle
cmpb
adc
data16
pop
test
ret
add
icebp
sbbb
je
lds
cmp
adc
mov
lcall
pusha
pop
pop
jbe
pushf
mov
xor
xlat
add
adc
push
nop
xchg
add
sub
adc
test
adc
and
push
push
movsb
pop
add
sub
add
inc
dec
movsb
push
mov
and
inc
push
int3
xor
cmp
mov
pop
das
pop
rorb
push
sbb
aaa
inc
mov
or
or
or
or
adc
rcll
cmpb
test
or
and
test
mov
inc
jne
and
je
xchg
jno
xor
adc
in
push
pushf
add
push
and
dec
sbb
mulb
andb
adc
cmpsb
mov
fbld
jns
and
jmp
ja
sub
leave
sbb
and
or
sbb
sbb
dec
ficoml
dec
les
js
xchg
adc
mov
jecxz
lds
jl
imul
inc
cmp
pop
adc
push
sbb
js
xchg
test
and
data16
inc
inc
movsb
xlat
ret
xor
inc
adc
and
and
adc
enter
cwtl
lods
and
pop
pop
orb
sub
push
pop
shlb
js
js
loopne
in
mov
in
add
icebp
pop
jne
test
mov
dec
adc
push
add
scas
outsb
nop
dec
or
lock
cmpl
sub
add
xchg
add
shrb
xchg
add
mov
adc
jns
mov
cwtl
mov
or
fdivrl
push
adc
or
es
xchg
bound
mov
cmpsl
nop
loopne
inc
shrl
pop
mov
and
pop
fsts
cmp
and
sbb
mov
pop
dec
adc
int
sar
adc
adc
adc
inc
mov
and
fisubrl
call
sbb
mov
xchg
mov
in
cmp
loopne
mov
xchg
xor
cmp
movsl
lock
es
rclb
sub
inc
sub
add
and
dec
sub
inc
jae
jecxz
mov
sahf
js
add
add
mov
and
js
inc
pop
add
jns
dec
out
cli
mov
jge
mov
std
mov
mov
lods
sbb
lret
jae
sub
je
inc
add
mov
ljmp
sbb
rorb
in
in
in
call
mov
outsl
aad
or
mov
jg
shll
add
jo
add
sarl
push
es
xchg
lea
sbb
sbb
adc
scas
xchg
sbb
jnp
cvttps2pi
pop
mov
mov
xor
cmpsb
mov
mov
mov
sbb
addr16
push
subl
scas
push
mov
pushf
and
lahf
mov
sahf
outsb
pusha
js
cmpsb
cmp
cmp
je
enter
xchg
movsb
or
ret
rolb
push
adc
leave
cmp
mov
xchg
scas
sbb
xor
jns
pop
cmp
inc
lret
adc
lods
cmc
push
ja
mov
push
push
mov
ljmp
dec
pusha
push
push
leave
push
mov
scas
xchg
cmp
push
cmp
mov
xor
aad
insl
insl
stos
xor
and
mov
push
in
sub
ret
inc
imul
sub
pop
dec
dec
mov
push
or
lahf
xor
mov
bound
push
cmpsb
adc
add
movl
ljmp
test
mov
and
cmp
adc
jnp
xor
and
imul
xchg
jno
xchg
pop
inc
add
xchg
lods
xchg
test
add
jl
nop
data16
pop
mov
es
mov
je
jl
xchg
outsl
jno
pusha
daa
push
sub
cmp
adc
pop
and
adc
push
mov
sub
jo
adcb
add
or
xor
movsb
lahf
adc
xchg
lods
fldl
sbb
mov
add
sub
sub
std
dec
add
into
sub
ret
cld
or
sbb
sar
icebp
fcoms
stc
push
xchg
xchg
dec
cmp
test
popa
push
push
imul
sub
push
pusha
div
mov
xchg
mov
popl
inc
in
xor
cmp
jne
sar
add
push
sbb
pop
and
add
push
pop
mov
push
movsb
insb
mov
pop
mov
out
sub
cmpsb
mov
add
add
roll
fwait
cmpsb
aam
push
nop
mov
dec
sbb
hlt
imul
lret
mov
dec
add
jmp
cmp
or
lods
jecxz
jmp
push
fs
loopne
mov
push
and
cs
cmpsb
ja
roll
inc
test
push
pop
shl
mov
or
inc
stos
mov
and
add
test
or
mov
pop
push
shrb
push
add
push
mov
cmp
adc
mov
inc
sbb
mov
pushf
fwait
addb
pop
adc
push
sbb
or
les
pusha
adc
pop
sub
sbb
ss
inc
mov
and
bound
out
mov
stos
cli
or
mov
and
sub
add
push
into
insl
je
pop
add
pop
cmpl
mov
ss
cwtl
cld
fwait
mov
icebp
push
push
push
mov
in
sub
push
push
inc
add
mov
inc
adc
mov
and
shrb
xor
rolb
xchg
enter
push
test
shr
xchg
sbb
and
sbb
arpl
add
mov
inc
cmp
inc
add
inc
shl
mov
sbb
jl
push
fbstp
rcrl
xor
inc
dec
add
adc
fldl
mov
repz
sub
xor
dec
cmp
sub
sbb
enter
xchg
or
inc
adc
cmp
push
pop
addr16
adcb
inc
paddq
sbb
cmp
test
pop
cmp
pop
addb
dec
cmp
cld
dec
testl
aam
test
jnp
sbb
mov
ret
mov
add
insb
jecxz
add
xchg
cmp
gs
inc
test
inc
pop
aas
shrb
popf
clc
pop
and
cmp
jne
stos
loop
push
sub
mov
cmp
push
mov
add
and
xchg
mov
lcall
push
or
aad
sub
jae
je,pt
push
jg
inc
test
pop
or
sub
pop
sub
das
adc
test
pop
mov
stos
test
into
dec
in
or
aas
shlb
das
xchg
mov
push
push
out
pop
out
inc
rorl
xchg
fiadds
push
hlt
lea
sbb
cld
push
jle
es
loopne
gs
mov
mov
or
sub
sbb
hlt
or
insb
cmp
jecxz
cmp
push
cwtl
sub
gs
push
das
adc
push
loopne
rclb
push
in
and
fmuls
shll
addr16
jo
shlb
into
testl
add
or
push
xchg
push
sarb
cmp
jle
mov
inc
or
lock
mov
mov
dec
inc
andl
xchg
cmpsl
call
in
xchg
gs
lds
cmp
inc
cmp
cmpsl
push
add
push
lcall
shlb
pushf
daa
push
dec
sub
or
xor
mov
dec
xchg
dec
xor
insl
js
or
or
rol
cld
pop
sub
xor
inc
inc
xchg
mov
pop
adc
test
jmp
push
repnz
jle
sbb
add
out
orb
xor
dec
push
cmp
sbb
xor
ret
dec
jo
and
dec
hlt
jle
jle
xchg
daa
cmp
jge
ret
and
add
push
sbb
push
mov
arpl
jne
add
and
push
loop
add
xor
scas
lcall
insl
or
insb
or
loopne
loopne
inc
lret
rorl
push
or
outsl
dec
dec
int
pop
sbb
sub
mov
add
add
or
sbb
inc
and
bound
or
inc
sbb
inc
adc
dec
push
in
or
xor
inc
pop
test
test
es
ret
add
fnstcw
lea
ja
and
sbb
fisubl
mov
pushf
inc
cmp
pushf
shll
adc
xchg
scas
clc
aas
dec
add
inc
add
add
or
and
mov
out
lods
push
inc
ret
add
sub
push
pop
pop
dec
loopne
je
scas
mov
lods
inc
pushf
inc
jne
add
outsb
xor
sbb
add
jb
nop
sub
out
pushf
sbb
push
idiv
pop
and
jne
cmp
jb
sub
jmp
push
pop
mov
stc
dec
movzwl
dec
dec
jle
jle
setl
fcmovbe
aam
lret
scas
test
sub
out
test
push
push
or
lcall
inc
cwtl
imul
push
inc
pop
xor
and
jp
pop
sbb
jne
jl
add
xor
or
jo
in
add
dec
push
sbb
push
rorl
mov
lahf
jmp
push
push
sarl
mov
lahf
mov
sarb
jle
push
jne
or
les
sub
lret
daa
scas
enter
push
shlb
rclb
sub
sub
xchg
sbb
mov
pusha
adc
dec
adc
dec
push
je
cmp
dec
push
pop
insb
bound
aad
std
sbb
and
mov
xchg
pop
aas
loope
stos
mov
out
push
adcl
sub
add
push
pushf
or
add
mov
mov
or
movsb
or
jb
and
cmp
push
js
orl
orb
pop
dec
addr16
xor
inc
sub
lds
and
frstor
mov
xchg
push
sbb
cmp
push
xor
cmc
xor
add
xor
sbb
cmp
mov
mov
sbb
mov
pop
mov
rorb
repnz
loop
inc
xor
out
push
jae
and
cmp
inc
mov
dec
adc
das
push
lea
xor
mov
add
pushf
in
arpl
ss
insl
mov
inc
push
mov
mov
add
push
push
jb
lret
sub
jl
pushf
sub
test
inc
push
sbb
cmp
outsb
shl
xor
dec
test
into
jne
or
push
mov
scas
movsb
or
xchg
pop
call
pop
cmp
or
cmp
mov
pop
aas
inc
dec
and
ret
in
sbb
inc
and
out
pop
pushf
ds
or
bnd
sbb
mov
lds
lock
or
sahf
push
mov
xor
add
jno
jge
in
daa
inc
cwtl
jo
mov
and
xor
shrb
add
push
cmp
mov
sbb
push
pop
or
pop
add
jne
add
cld
add
push
mov
and
fsubp
loope
lcall
or
pop
mov
enter
mov
inc
jecxz
cltd
mov
out
mov
add
and
adc
popf
inc
add
jb
add
xchg
cmp
push
dec
mov
jge
or
add
mov
adc
and
dec
hlt
push
pop
lea
sbb
fs
sbb
repz
cmpb
jne
xor
xor
ja
push
add
aaa
cmpsb
or
mov
sahf
int3
add
or
mov
push
mov
add
hlt
test
push
sbb
pushf
and
xor
test
fidivs
cld
or
mov
mov
lret
add
and
add
inc
aam
imul
sub
xor
xchg
cmpsb
push
test
adc
jmp
lret
dec
sbb
or
jb
jne
inc
mov
dec
sub
inc
sbb
je
sub
movsl
push
jb
in
in
imul
cmpsb
adc
jns
stos
xchg
mov
shlb
xor
and
cmp
in
add
xchg
popf
push
push
fimuls
movsl
add
and
adc
add
push
push
or
idivl
shlb
ret
pusha
lock
sbb
jne
cmp
icebp
stc
cld
andl
xchg
adc
inc
add
nop
or
adcb
fcoms
mov
jmp
lahf
add
pop
ret
push
cmpsb
pop
push
adc
push
inc
lahf
dec
sub
jne
add
push
iret
es
add
fisttps
adc
repz
jg
negl
mov
pop
xor
and
fmuls
and
jecxz
add
and
sub
xchg
shlb
sbb
push
es
rcrb
and
js
ret
mov
xchg
or
bnd
aaa
push
add
pop
add
inc
mov
nop
push
dec
inc
ret
xchg
push
dec
push
jne
nop
add
daa
fwait
push
jl
js
or
js
ficompl
push
inc
in
push
add
xor
jecxz
sahf
push
sub
cmpsb
pop
add
fstps
mov
and
xchg
pusha
sti
and
push
jb
jae
push
fadd
xchg
lret
pop
mov
std
in
push
sbb
negl
js
xchg
inc
xor
popa
adc
enter
mov
xchg
js
subl
leave
push
dec
adc
mov
mov
fcompl
inc
and
jl
cmpsl
js
jns
sub
pop
or
dec
add
dec
xor
push
cmpsl
test
cmp
push
lods
pop
inc
xor
int
and
add
cmp
jb
cmp
cmp
adc
lcall
out
jmp
rcr
push
mov
arpl
sbb
dec
adcl
je
pop
pop
paddw
in
sahf
inc
mov
xchg
cmp
movsb
jb
inc
cmp
pop
add
dec
scas
add
nop
dec
push
dec
push
bswap
push
shrb
sub
mov
test
cwtl
ss
inc
mov
inc
jmp
fwait
es
or
dec
add
adc
or
nop
adc
daa
and
mov
push
pop
jp
push
lds
sbb
sbb
push
push
and
sub
out
aaa
pushf
mov
dec
pop
repnz
shrb
push
pop
iret
dec
enter
pop
or
lods
fucomp
pusha
xor
and
sbb
push
dec
add
inc
sahf
out
cmpsl
pusha
sub
sbb
sbb
lods
adc
adc
sub
mov
aas
out
pop
outsb
inc
cmp
mov
dec
js
incl
push
mov
ret
jo
ret
cmpsl
pop
ficoml
or
lahf
and
inc
outsl
dec
and
nop
je
push
sub
sub
cli
adc
inc
inc
sub
addb
xor
or
adcb
push
jmp
movsb
xor
aaa
in
cli
shrl
add
sbb
sub
sub
lds
popa
enter
add
outsb
lret
insl
mov
nop
or
or
lods
sub
les
inc
pop
rorl
pop
test
sbb
push
adc
into
dec
mov
add
or
push
sub
test
fldl
jmp
loopne
cmp
xor
inc
mov
cmp
and
push
push
cmp
leave
cmpl
push
in
loopne
mov
je
scas
mov
adc
sub
fs
and
push
or
and
andb
sub
arpl
push
pop
in
or
adc
sbb
in
and
add
test
pushf
mov
mulb
mov
cmp
fimuls
fs
lret
aas
sbb
jmp
aad
lret
sub
jge
sarl
out
cmc
aaa
xchg
add
aaa
sub
test
cmc
jl
lea
add
dec
lock
push
aam
adc
sbb
lock
mov
mov
xorb
or
mov
mov
push
js
cmp
or
push
push
stos
inc
xor
repz
push
xchg
push
pop
fcomps
shlb
push
xchg
sar
repz
pop
mov
and
mov
dec
or
fiaddl
add
or
enter
push
push
test
mov
cwtl
dec
jl
add
ret
roll
pushf
cltd
out
push
xchg
mov
xchg
sbb
xchg
in
cwtl
jo
ret
div
mov
dec
xchg
sbb
or
adc
pop
mov
dec
sub
and
dec
xchg
lcall
add
mov
or
into
data16
pop
leave
dec
pop
stos
xchg
sahf
xor
mov
test
pop
in
nop
pop
jo
add
pop
push
in
enter
imul
push
rcrb
pop
inc
push
mov
gs
ljmp
std
cld
mov
push
xchg
movsl
fisttpll
mov
in
or
mov
cmp
dec
or
std
in
clc
int3
push
fcomps
cmp
and
pop
in
outsl
mov
add
sbb
and
adc
pop
aas
xor
pop
outsb
add
fstpt
sbb
flds
flds
cmp
mov
shlb
or
jmp
inc
or
incl
push
sbb
sub
fmuls
push
lods
mov
inc
cmp
sbb
push
jbe
sub
adc
dec
add
pop
stos
divb
add
lock
push
sbb
pushf
mov
add
movl
sbb
mov
inc
or
ret
push
jae
push
insb
xor
sbb
loopne
add
push
stos
aam
dec
or
cmp
xchg
or
cwtl
inc
clc
into
and
mov
pop
cmp
cmp
mov
sub
fwait
jp
popa
stos
jecxz
pop
push
add
add
sub
sahf
divl
or
adc
mov
jecxz
and
hlt
ret
lret
je
jmp
in
les
adc
xor
std
jno
mov
xor
insl
push
adc
sarb
pop
jae
push
lea
fbld
into
pop
xor
mov
cs
add
xchg
ret
push
mov
aam
mov
push
imul
scas
cmp
adc
adcb
xor
gs
int
pusha
mov
push
call
ss
and
ds
cmp
in
xor
fdivrs
add
jecxz
push
jmp
xchg
ljmp
punpckhbw
inc
nop
clc
loopne
lea
cmp
mov
lea
ret
arpl
jle
dec
cld
xor
into
pop
leave
ficoml
lock
rorl
push
punpckhdq
pop
int3
mov
push
cld
loop
or
xchg
and
sbb
pop
sarl
mov
push
dec
mov
push
push
pop
pop
or
jl
inc
mov
fdiv
jne
adc
call
add
int3
je
outsb
ljmp
mov
mov
hlt
mov
cmp
jg
adc
cmc
xchg
xor
adc
add
add
pop
pop
jmp
xor
mov
cmp
jg
push
inc
call
dec
jmp
icebp
mov
mov
shlb
cmpsb
mov
in
scas
dec
pop
or
inc
sub
sbb
popf
add
mov
mov
xor
dec
clc
jbe
mov
pop
jecxz
ret
inc
xchg
push
push
mov
xchg
cld
mov
in
clc
jl
cmpl
cmp
pop
aaa
jne
cli
xchg
sbb
jo
testb
jp
popa
lock
je
test
addl
mov
leave
ret
adc
mov
add
push
push
call
and
mov
xlat
xor
subps
cmpl
or
shrb
inc
movsl
inc
push
lock
fcoms
jbe
loopne
mov
add
inc
clc
mov
mov
clc
sbb
rorb
or
popa
das
xchg
nop
fmulp
test
mov
mov
gs
add
loopne
lea
sti
xchg
clc
clc
push
push
adc
test
xor
sub
push
in
or
adc
out
xor
adc
sub
in
shlb
sbb
mov
stos
jmp
fs
push
jecxz
adc
push
jb
or
push
test
js
xchg
adc
pop
jmp
cld
scas
ret
adc
dec
jno
mov
add
pop
mov
mov
and
push
jbe
roll
in
pusha
negb
jnp
add
fs
dec
adcl
xlat
sub
popa
add
push
outsb
push
push
add
jle
pop
fstpl
mov
pop
sub
dec
daa
dec
stos
pop
mov
xor
and
inc
and
or
imul
push
and
cmpb
mov
lock
aam
push
mov
inc
or
xor
and
adc
imul
in
ja
aam
dec
hlt
or
jmp
aaa
int3
test
and
fisubs
push
pop
rcrb
and
jo
adc
insb
cld
sub
cmpsl
xchg
pusha
sbb
and
pop
mov
mov
jp
xor
sti
add
sub
dec
add
pop
icebp
add
out
outsb
pop
in
iret
xorb
lock
leave
adcl
mov
test
mov
push
call
lock
int3
push
mov
movsl
lods
adc
adc
mov
cltd
push
out
mov
add
push
push
icebp
cli
fsubs
mov
dec
aam
mov
sarb
mov
fbld
or
inc
mov
mov
inc
mov
jl
subl
je
add
insl
movsb
lock
jb
cmp
es
mov
adc
call
mov
xlat
call
aaa
in
sbb
std
push
inc
test
jo
incl
mov
repnz
cwtl
push
or
out
test
add
jl
inc
and
loop
inc
loope
sbb
jae
adc
pushf
mov
and
das
mov
sub
cmpsb
mov
or
dec
add
inc
or
mov
cmp
mov
cwtl
pushf
cmpsb
movsb
sub
adc
add
shlb
cmp
xor
mov
and
fsubrs
ss
pop
push
push
rclb
push
cmp
test
inc
and
cmp
mov
scas
or
je
rcll
ja
push
jge
add
adc
out
pop
ret
test
adc
mov
in
int3
fst
or
push
xchg
imul
push
xchg
jmp
sti
hlt
inc
xor
cmp
push
dec
mov
cmp
das
push
sbb
scas
dec
lret
inc
bound
mov
cld
sub
mull
imul
sub
orb
mov
dec
or
add
pop
fdivr
adc
test
or
and
out
push
idivb
inc
pop
mov
mov
cmpsl
js
cmp
in
adc
dec
adc
jmp
cmp
fwait
pop
add
jo
aad
mov
pop
sbbb
inc
sub
ss
sub
mov
je
fsts
testb
loop
cld
add
fsts
jno
testb
shlb
xor
push
bound
or
std
jp
inc
adc
xchg
jo
je
jb
test
pop
scas
xchg
out
jbe
and
or
data16
or
push
cmp
sub
dec
and
je
shll
int3
mov
push
pop
jbe
inc
sub
push
xor
sub
adc
cmp
test
mov
sbb
lea
cmp
inc
push
xor
xchg
jl
xchg
jmp
and
mov
pushl
outsl
sahf
mov
pop
mov
test
ljmp
sbb
push
xor
xchg
sbb
pop
cmp
push
jbe
and
cmp
push
jns
in
orl
or
ret
push
mov
bndstx
call
js
aaa
dec
popl
sbb
push
push
pop
jge
inc
adc
xchg
adc
add
pop
in
inc
xchg
cmp
pop
bound
sub
push
stos
imul
add
add
and
insb
pop
mov
xchg
fiaddl
xchg
jnp
adc
pop
inc
sbbl
inc
mov
lods
pop
call
shr
cs
mov
loopne
adc
inc
add
cmp
popa
lock
pop
adc
loop
or
pop
notb
dec
xor
push
pusha
pushf
test
mov
dec
pop
fwait
mov
inc
lahf
in
xchg
arpl
or
loop
ret
jl
pop
lock
mov
sbb
adc
leave
add
sbbl
mov
into
dec
cmp
push
imul
shr
cmp
loopne
inc
loopne
mov
push
stos
hlt
clc
aam
mov
add
mov
jae
pop
xor
sbb
inc
jl
and
sti
xor
in
xchg
or
in
hlt
sub
jne
adc
in
rorl
xchg
fisubrl
adcl
and
jle
cli
mov
in
movsb
dec
mov
sbb
in
in
rcrb
imul
je
pop
fadds
mov
mov
mov
cmp
divl
pop
jp
jecxz
hlt
adc
ret
push
push
sub
jb
sub
push
sub
rclb
jg
test
sbb
int
pop
leave
mov
or
sub
dec
jmp
jo
aam
push
jp
push
enter
std
in
cmp
mov
insl
jne
cs
add
push
jae
mov
add
push
in
je
inc
or
push
or
mov
and
jle
cmp
push
and
iret
outsl
push
adc
cld
sub
sbb
cmp
rcll
push
fcoml
push
mov
fstpl
cmp
stc
lods
and
je
mov
or
cmp
pop
mov
push
orl
push
dec
test
jp
jne
enter
rorl
movsl
cmp
and
clc
xchg
je
outsb
jg
scas
sub
sub
push
xor
add
roll
pop
mov
push
movsl
and
xor
or
cmp
xor
jge
sarl
push
inc
sahf
xchg
mov
addr16
clc
pushf
mov
push
outsl
and
pop
vpavgb
push
add
loop
sub
xor
fstpl
and
push
rcll
push
jae
sbb
or
shl
adc
adc
stc
fldenv
std
scas
cli
dec
jbe
dec
loopne
adc
les
add
mov
inc
loopne
pop
je
jns
repnz
or
sbb
xchg
jnp
add
xchg
xor
sahf
pop
nop
adc
add
add
out
add
mov
ds
shr
test
mov
fldt
inc
jae
mov
mov
dec
mov
mov
sub
and
xchg
xor
mov
cmpsb
imul
sbb
lcall
push
mov
fcomps
fsubr
mov
mov
popf
cwtl
outsb
sti
or
push
mov
cltd
pop
fiaddl
xchg
imul
fwait
inc
mov
scas
sub
lcall
pop
les
jnp
out
aam
adc
adc
cwtl
sbb
cmp
mov
roll
in
fadds
add
mov
sbb
xor
add
jo
push
fs
push
xor
xor
cmp
jbe
stos
adc
sub
dec
out
xor
cmp
pop
jg
roll
jne
xor
mov
cmp
jne
mov
xor
nop
inc
nop
mov
icebp
or
dec
pcmpeqw
notl
movsl
lcall
imul
mov
sub
popa
add
fucomip
pop
sti
and
cmp
sbb
jns
iret
fs
jne
cs
adc
sbb
ror
test
das
test
inc
lcall
sub
push
rorb
xchg
add
add
xorl
jb
mov
ss
mov
xchg
add
dec
js
or
add
push
pop
clc
inc
add
rclb
xor
mov
mov
test
mov
push
pusha
pop
sbb
sahf
lcall
add
or
inc
shll
jo
rol
ljmp
xchg
jbe
pop
add
pop
fsubl
inc
push
test
xchg
repnz
lea
add
or
jne
mov
adc
jo
daa
sahf
loope
notb
push
jns
and
inc
sbb
clc
fstps
cmp
mov
adc
cmpsl
jmp
or
add
fstpt
incb
je
mov
das
add
aaa
je
xchg
iret
cmp
aaa
rol
in
stc
mov
mov
inc
xchg
out
fincstp
popf
push
push
rolb
jbe
ret
dec
mov
in
sub
mov
dec
jne
stc
jo
pushf
and
xor
loopne
sar
cs
jne
jl
cmpsl
lods
xor
ja
insb
cmovp
adc
cld
sub
rcr
push
xlat
mov
dec
sub
and
adcb
cli
adc
fldcw
je
ret
adc
shrb
mov
inc
ret
mov
jne
lret
clc
imul
cmp
mov
or
jmp
cmp
shrb
cwtl
dec
aas
xor
or
daa
inc
push
pusha
pop
dec
mov
adc
lods
js
mov
sbb
push
push
inc
sbbl
push
add
add
arpl
inc
fistpll
imull
cmp
adc
pop
push
push
or
mov
add
outsl
icebp
dec
lock
test
enter
rsqrtps
xchg
call
push
or
xchg
xchg
test
cmp
xor
xchg
je
pusha
push
mov
add
int
lea
pushl
push
and
sbb
fimull
dec
xor
ss
jnp
or
push
sbb
and
sbb
mul
dec
subb
and
pop
xor
enter
insb
insb
inc
mov
test
jp
loop
mov
clc
insb
in
xchg
ret
push
push
and
mov
mov
je
cmp
jg
divb
mov
in
mov
mov
and
rorb
pop
cmp
je
xor
stos
aad
push
into
push
push
lock
push
sub
cmpsl
js
xchg
inc
pop
xchg
jmp
lea
pop
fcoml
dec
leave
add
rolb
sub
push
add
xchg
pop
lock
mov
adc
lock
mov
lock
dec
mov
and
in
ds
push
adc
ret
stc
rcll
push
sbb
sub
sbb
ss
mov
out
sarb
mov
add
push
mov
out
mov
into
lea
mov
movsb
sub
cs
push
sbb
push
push
leave
inc
pop
inc
leave
aam
je
je
mov
jl
testb
or
add
aam
insb
add
and
sub
mov
lock
aam
or
inc
mov
add
adc
jbe
push
mov
add
leave
mov
push
sbb
and
pop
insb
jns
insb
push
jno
int
push
push
jge
jne
enter
sbb
mov
add
xchg
cs
adc
mov
ret
pop
inc
imul
aas
jne
outsb
or
insb
icebp
pop
out
fcoms
stc
mov
sbb
sbb
repnz
cwtl
fidivrs
test
sub
xor
ja
mov
fwait
sbb
lret
sbb
add
push
fimuls
push
and
dec
push
lea
push
pop
cwtl
push
adc
xchg
add
lea
fsub
add
lret
push
or
or
psllw
lods
add
xchg
jbe
data16
test
xchg
or
or
xchg
imul
xchg
pop
xor
pop
add
mov
mov
push
daa
out
scas
add
push
adc
imulb
mov
out
pop
icebp
inc
pop
arpl
and
sbb
or
ret
jo
or
and
pop
inc
jge
ret
mov
lahf
mov
nop
cmp
or
pop
data16
aad
adc
sbb
pusha
test
dec
dec
and
pop
loopne
or
xchg
ja
mov
jo
add
sub
idivl
jge
sbb
jg
adc
test
push
sbbb
mov
ret
pop
add
cli
add
or
call
addl
push
mov
xchg
adc
ds
fcompl
in
inc
push
add
xchg
xor
pop
into
jecxz
js
adc
mov
int3
cmp
xor
push
leave
ds
lret
xchg
jo
lret
lock
in
insl
call
out
pop
add
jno
cmpsb
mov
cmp
adc
sbb
or
aam
mov
add
nopl
imul
fidivrl
push
or
push
sbb
mov
popa
mov
and
mov
adc
pop
mov
sbb
add
pop
in
mov
mov
xchg
jge
mov
pop
mov
movsl
add
idivb
je
lret
cld
mov
xchg
push
pop
sbb
push
sbb
adc
loop
pop
out
jo
push
cli
or
cmpsb
mov
add
cmp
arpl
dec
pop
fstps
xor
dec
push
lock
test
in
cltd
js
jb
mov
and
fs
or
push
sahf
mov
xchg
ljmp
pop
and
and
cmpsl
mov
pop
or
test
frstor
daa
jae
xchg
out
mov
push
sahf
push
push
je
or
cs
or
in
ret
adc
cmp
sar
xchg
arpl
push
sbb
xchg
xor
out
imul
xor
jp
xchg
cmp
xchg
xchg
sub
sub
sub
jo
das
mov
mov
inc
dec
or
rorb
test
fcompl
hlt
inc
insl
aas
add
push
in
sbbl
andl
push
insb
mov
pop
jl
or
sbb
js
ljmp
or
sbbb
cmp
or
sahf
mov
xchg
xchg
aam
shll
pop
cmpsl
mov
xor
bsf
jmp
cmp
mov
dec
push
or
loopne
rclb
sub
jmp
sbb
and
jb
inc
or
mov
leave
in
mov
std
decl
adc
cs
roll
xor
pop
lret
mov
mov
inc
xchg
out
ss
dec
push
addl
add
mov
inc
jnp
pop
pushw
push
jo
bound
push
mov
pop
cmp
test
xor
push
xor
popa
xor
push
or
push
call
push
and
xchg
in
or
mov
or
add
add
pop
add
push
std
outsw
repz
and
fbld
mov
xchg
in
sub
sub
push
jb
cld
mov
insb
push
cmp
leave
inc
repnz
or
test
cltd
adc
notb
sbb
js
add
cmpl
rolb
xor
and
push
les
mov
and
mov
cwtl
ss
adcl
addr16
inc
xchg
pusha
push
cld
sub
or
sub
shlb
outsb
jl
aas
sbb
outsb
inc
jmp
pushl
ljmp
call
inc
lea
in
out
ret
xorb
scas
push
or
push
push
pop
mov
or
xor
adc
pop
push
dec
sbb
jns
test
in
mov
add
mov
jl
andl
movsb
push
in
adc
pop
and
push
popa
jmp
pop
add
sbb
loopne
jecxz
push
cmpsb
jns
fistpll
jl
dec
xor
sub
push
dec
outsb
mov
mov
ret
adc
xor
cmp
xchg
lahf
add
cmpsl
shrl
fcoml
aad
addl
orl
loope
adc
in
xchg
or
adc
inc
mov
fdivrl
adc
test
push
mov
cli
push
shl
mov
cmp
das
icebp
xor
jl
mov
pop
or
pop
sub
adc
je
pop
sbb
adc
cmp
sbbb
jmp
add
sbb
adc
mov
push
inc
adc
ret
adc
inc
push
and
sbb
je
push
add
or
xor
pop
fldl
mul
insb
cwtl
aam
enter
mov
repz
cmp
movb
inc
test
sbb
or
test
add
jne
aaa
pusha
fstl
stos
xchg
xor
add
and
sbbl
or
jbe
or
add
xchg
jno
mov
add
pop
and
xor
and
xor
into
jne
loopne
or
shrl
lods
xor
dec
mov
sbb
xchg
and
mov
ss
push
adc
inc
lret
xchg
mov
lahf
es
lret
pushf
mov
mov
xor
xchg
mov
mov
ds
out
movswl
add
and
cmp
add
insb
and
or
add
push
xchg
or
jb
push
ja
ret
mov
test
ret
dec
xor
or
insb
scas
xchg
mov
stos
cs
cmp
fbstp
add
shll
ret
test
add
xor
pop
mov
call
movhps
scas
jb
add
mov
loopne
inc
movl
xor
push
cmpsb
push
loope
data16
jne
daa
sbb
inc
mov
push
outsb
cld
nop
jmp
jg
add
dec
fcompl
insb
inc
cld
pushw
pushf
pushfw
inc
xlat
adc
mov
or
aad
test
fst
lods
dec
rcl
mov
mov
sarb
add
add
pop
ret
insb
mov
mov
mov
cmp
pop
pop
jl
repnz
push
pop
cmp
push
jne
addb
mov
das
add
insb
loope
pop
cmpl
mov
mov
adc
fdivl
ret
lea
jp
cs
andl
add
or
stos
mov
leave
pushf
jmp
add
xor
ljmp
bound
sbb
xchg
cmp
mov
or
dec
mov
lahf
push
cmp
adc
add
xchg
sbb
in
je
lock
or
mov
mov
mov
andl
jo
dec
adc
pushl
mov
xor
and
aad
xor
and
or
cmp
movsb
mov
addl
ljmp
mov
sub
movsl
cmp
scas
sub
fimuls
push
mov
xchg
shrb
or
add
ljmp
test
adc
jbe
and
sub
sbb
ret
mov
jle
xor
cmp
pop
xchg
xor
jae
xor
push
fmull
ret
add
or
sub
and
lods
jbe
inc
in
push
call
insb
negl
dec
push
push
mov
inc
test
dec
insb
add
add
shlb
xor
cmp
xchg
adc
sbb
sahf
xor
or
cs
xchg
jge,pt
adc
sbb
and
ret
inc
adc
cmp
jne
fistps
andb
mov
pop
mov
xor
cs
in
sub
cwtl
and
pop
jnp
lea
rclb
test
mov
add
push
sbb
and
mov
test
addb
mov
jnp
and
aas
xchg
pop
dec
inc
mov
popf
enter
movlps
loope
js
addl
cld
mov
bound
iret
pop
call
movl
shr
inc
inc
jecxz
mov
sbb
mov
cld
ret
xor
adc
dec
jl
pushf
inc
sbb
iret
jo
stos
pusha
insb
std
mov
ficompl
dec
dec
ss
int
cmp
movntq
subb
xor
adc
sbb
outsb
jge
test
shlb
lock
mov
or
insl
bound
clc
push
mov
sbb
push
pop
js
mov
outsb
sub
shl
scas
cltd
hlt
sub
jns
mov
dec
mov
push
jecxz
cmc
sbb
jle
push
push
pushf
add
sbb
and
inc
xchg
int
sub
push
inc
sbb
sbb
xorl
jmp
mov
orb
shlb
push
shrl
cmp
or
out
inc
adc
adc
ds
pop
jmp
push
out
cmp
mov
addl
insb
sbb
adc
jge
xor
mov
xor
ud0
mov
rcll
lods
mulb
inc
mov
andb
mov
je
adc
mov
sub
enter
ss
sbb
add
adc
enter
adc
das
push
lret
push
outsb
aaa
mov
push
pop
mov
lea
mov
add
mov
inc
test
pop
aaa
jbe
sbb
mov
ja
pop
sub
or
add
jle
sub
add
push
sub
rol
testb
jo
dec
in
pop
rorb
or
scas
rcrl
or
jo
or
pop
jno
dec
push
cmc
push
cld
jp
mov
je
add
adc
lret
gs
ret
in
jno
fsubs
jae
lahf
mov
and
jg
push
popa
xor
mov
scas
lods
mov
test
xchg
or
pushf
xchg
cmp
stos
test
test
inc
mov
cmp
dec
test
lea
into
push
inc
pop
je
jl
add
push
push
loope
mov
test
jne
loopne
push
adc
cmpsb
sahf
orb
push
or
pop
fs
jl
and
push
dec
or
orl
or
incb
mov
cs
adc
push
jnp
insb
lods
pop
jecxz
mov
out
pop
mov
dec
push
pushf
mov
outsb
in
test
jl
negl
mov
nop
loopnew
rorl
push
sbb
adc
mov
inc
mov
loope
iret
dec
or
push
cmpb
loope
and
push
xchg
push
shlb
jmp
sti
lods
add
fdivrl
jmp
or
addb
and
sub
insl
maskmovq
mull
into
sbb
sbb
nop
mov
adc
rorb
jl
je
add
jg
test
mov
testl
shl
pop
movsb
jle
xor
or
or
lahf
ret
rorl
out
cmp
jg
and
dec
xchg
insl
jne
setnp
or
popa
in
xchg
mov
push
mov
mov
jae
push
push
xor
int3
xor
mov
sbbl
sub
pop
cltd
or
fmull
aas
add
dec
inc
xor
in
cwtl
jge
xchg
pop
cmp
pusha
cs
add
mov
rcll
aaa
dec
mov
rorb
xorl
cmp
es
cmpsl
add
les
fimuls
aam
mov
jae
cmpl
mov
push
rorb
xorl
and
mov
xchg
int
and
dec
pop
lods
push
inc
ret
mov
push
mov
lods
xlat
add
getsec
mov
or
xor
sub
pop
aaa
adc
dec
jnp
orl
int3
sti
sub
loope
add
xor
aad
xchg
bound
or
and
add
xchg
push
push
or
or
testl
or
adc
xor
xor
ret
out
xchg
mov
pop
andl
mov
or
lock
mov
gs
jbe
push
push
and
fisubs
sbb
push
test
cmc
dec
pop
mov
testb
loopne
xor
ret
testb
push
xorb
rolb
sub
pop
jp
push
push
out
sbb
jnp
mov
data16
adc
outsl
popa
gs
and
idivb
ja
je
or
je
or
sub
xchg
scas
or
cmp
stos
std
adc
xchg
testb
add
daa
loope
inc
js
jne
lcall
in
xor
outsb
cmp
adc
imul
xor
cmp
addb
lahf
bound
movnti
mov
or
xor
push
adc
xor
outsb
lods
push
push
jl
mov
es
rclb
or
mov
fldenv
gs
mov
sub
add
je
scas
inc
ret
or
sbb
sbb
or
adc
xchg
pop
fbld
rorb
shrb
add
dec
leave
mov
xorl
pop
pop
lcall
mov
testl
je
sub
mov
push
adc
add
jo
xor
mov
push
mov
repz
xor
pop
daa
or
push
adc
sub
pop
sub
jno
push
cwtl
insb
ds
in
xchg
mov
pop
ja
jnp
mov
ja
push
dec
stos
xchg
mov
test
inc
cmp
mov
xchg
push
andl
mov
xchg
push
shrd
cmp
je
in
shrl
and
and
adc
xchg
fsubl
sbb
xchg
push
add
xor
add
sti
je
lret
and
add
add
inc
push
inc
mov
es
add
push
movb
je
or
dec
sub
or
sbb
in
push
push
add
pop
fstl
xchg
xor
push
xor
mov
stos
xor
cmc
xchg
xchg
xchg
test
setb
push
push
mov
or
mov
dec
sti
xchg
pop
inc
notl
les
and
pop
and
test
notb
pushf
dec
mov
rcrb
or
int
pop
movsb
aam
push
lock
repz
push
xor
das
push
push
call
push
adc
xchg
outsl
inc
cmp
pop
jge
dec
jle
push
inc
sbb
sub
jns
mov
ret
in
cmp
mov
xchg
fcoml
in
and
and
in
mov
mov
movsl
aam
mov
int
int3
aam
inc
xor
dec
aas
mov
rorb
sarb
and
fwait
cmp
dec
ljmp
mov
test
jo
les
cmp
insl
test
add
test
neg
push
call
cld
sbb
push
inc
sub
rorb
ljmp
or
mov
adc
or
push
cltd
mov
add
lret
and
or
jmp
nop
movsb
sub
or
xchg
or
push
rclb
shrl
xchg
movsb
push
nop
hlt
jg
push
xor
inc
mov
daa
xor
shrb
and
rcrb
xor
mov
mov
push
mov
fistps
les
shrl
inc
mov
xor
cwtl
fidivrl
inc
enter
xchg
xchg
inc
push
jne
xor
adcb
adcl
in
cmpsb
shll
lock
nop
jno
pop
inc
cld
data16
out
mov
fadd
cmp
mov
sub
loopne
mov
sub
leave
and
popf
inc
andl
add
cmp
mov
push
pop
pusha
movl
imul
or
js
pop
adc
push
mov
sbb
sbb
cmp
mov
imul
clc
dec
f2xm1
or
push
or
push
pop
push
or
push
xchg
mov
add
jo
xchg
adc
push
mov
inc
xchg
add
add
or
add
jg
jp
jne
aas
xor
jo
sub
addb
push
in
add
sbb
fmuls
shl
call
test
add
shl
adc
mov
push
decl
gs
inc
inc
pop
xor
dec
pop
std
push
rclb
dec
and
std
out
pop
movsl
xchg
dec
cli
jp
xorl
xchg
mov
xor
clc
mov
sbb
mov
dec
shlb
mov
inc
xor
dec
lret
or
cmpb
push
test
loopne
and
sub
push
add
testl
daa
xchg
add
mov
test
aaa
out
push
push
or
xchg
push
xchg
cmp
pushf
xor
or
jmp
push
xchg
loopne
subl
pop
jl
mov
in
pusha
movsb
cmp
inc
mov
mov
cmp
mov
mov
or
jg
mov
add
pop
add
inc
rorl
jne
sub
jb
mov
mov
shl
or
fldl
fisttpl
mov
mov
cs
lret
sbb
xchg
push
ja
push
movsb
cmpl
or
add
inc
adc
xchg
cmp
inc
adc
and
push
inc
lcall
mov
jl
sbb
dec
into
and
push
inc
add
xchg
xchg
add
and
pop
out
pop
xor
jecxz
rcl
dec
dec
adc
and
mov
inc
or
adc
mov
push
das
sbb
xor
sbb
xchg
popa
ficoml
sbb
push
add
rolb
stos
sbb
aad
sbb
ds
add
js
ret
sahf
sub
push
cli
jle
lods
push
mov
les
push
mov
js
ds
lahf
sbb
aam
push
adc
pop
sbb
fmuls
popa
cli
push
push
sub
shll
push
mov
loopne
inc
add
dec
or
mov
fildll
mov
adc
and
mov
sub
adcl
stc
icebp
cmp
push
test
sub
in
aaa
stos
lds
clc
add
pop
sbb
xchg
mov
sub
stos
es
cs
dec
shll
shrb
push
add
aas
sub
cli
call
jb
add
cmpsb
sarl
fsts
adc
jo
inc
data16
add
push
adc
or
mov
aaa
mov
xchg
cmpsl
cli
into
out
sbb
outsb
cmpsl
push
fcoms
sbb
and
or
add
cmpsl
insb
jg
or
dec
cli
add
pop
je
adc
or
push
cmp
nop
addl
setle
xchg
mov
pop
add
push
sub
insb
std
sbb
sahf
or
mov
dec
cmp
or
aaa
and
in
jmp
mov
fs
sbb
pop
je
sub
adc
fiadds
or
mov
cmp
dec
addl
mov
mov
jg
movsb
pop
dec
and
pushf
push
adc
and
repnz
les
cld
pop
sbb
out
les
inc
clc
push
cld
push
sbb
and
sub
call
fildl
jmp
xchg
dec
enter
int3
clc
and
test
arpl
push
mov
test
push
cs
lret
rcrb
sbb
dec
lds
lds
or
jl
push
pop
je
dec
out
add
push
daa
add
sbb
jns
xchg
sbb
adc
and
add
repz
push
push
es
and
xchg
or
add
add
out
xchg
add
push
or
or
and
outsl
cmpb
clc
or
xchg
add
cmp
sbb
in
js
push
mov
inc
jo
push
push
sub
in
sub
push
test
stos
xor
push
sub
xchg
in
cmp
mov
jl
push
mov
sahf
pop
and
sbb
add
xchg
push
jb
ret
movsb
bnd
cmp
or
xor
mov
xchg
and
mov
lods
or
dec
add
xor
xchg
xchg
out
mov
mov
sbb
sbb
adc
sub
arpl
in
aad
dec
jmp
push
mov
inc
xchg
push
push
mov
rol
leave
and
push
cmpsl
and
iret
imul
xor
jne
mov
test
add
in
nop
pop
or
ret
dec
mov
adc
call
daa
inc
dec
movsl
mov
mov
add
lret
dec
outsb
dec
adc
movsb
or
sbb
and
dec
xchg
and
jmp
pushl
sub
push
scas
lods
and
frstor
jecxz
insb
pop
lret
dec
loopne
mov
xchg
ret
es
aas
stos
adc
or
sbb
loope
inc
add
movsl
sub
addl
adc
or
sub
enter
jo
pop
out
push
xlat
dec
ja
and
aaa
push
scas
fmuls
add
push
pop
xchg
jae
cltd
mov
sub
stc
sbb
push
cld
push
add
out
xor
pusha
gs
xor
mov
icebp
mov
out
loopne
or
repz
dec
scas
sub
push
mov
call
pop
and
cmp
jle
and
add
orl
cs
or
lock
xor
xchg
fisubrs
cmp
adc
fnstcw
outsb
sub
lods
add
cwtl
mov
xor
cmp
inc
call
lock
add
jo
sub
jne
pop
add
push
test
sbb
daa
or
adc
int3
inc
sahf
sbb
add
xor
js
xchg
mov
xor
test
mov
lcall
int3
or
jne
ljmp
cmpsl
inc
dec
or
mov
add
mov
add
aam
mov
mov
enter
sbb
xor
xor
inc
repz
push
jo
add
cli
push
mov
push
insl
xor
add
mov
push
and
pop
pushf
pop
dec
loopne
jns
jne
out
adc
push
adc
add
out
cltd
or
movsb
mov
jo
or
lret
insb
add
push
int3
mov
ss
cmp
or
in
inc
adc
stos
inc
xchg
stc
and
or
add
sarb
xchg
mov
dec
jge
sub
cmp
mov
xchg
cmp
cld
mov
push
pop
sbb
aas
jl
cmp
jae
popa
inc
mov
jle
mov
and
or
jne
pop
adc
inc
xor
insb
je
mov
pop
adc
or
mov
mov
or
jmp
sbb
test
sub
movsl
insb
push
loop
dec
push
or
adc
fisubl
hlt
loopne
jl
repnz
or
test
mov
outsl
inc
sub
enter
xchg
or
outsb
mov
sbb
pop
hlt
aam
adc
cmpsb
decb
add
aad
pop
mov
data16
mov
push
dec
or
sub
insl
lret
sub
nop
subl
int
add
gs
sub
push
sbb
inc
outsb
fs
scas
cmp
mov
aad
ret
pushf
lahf
out
or
cli
or
add
inc
mov
enter
add
mov
inc
inc
inc
cmp
dec
mov
pop
in
or
or
xor
test
imul
dec
sbb
adc
sub
pop
or
mov
test
or
lock
mov
test
jge
je
andl
cld
inc
ficoml
mov
push
nop
fisubrl
mov
test
mov
cmp
jbe
loopne
lcall
push
xor
or
mov
dec
cmc
fwait
add
nop
pop
cmp
imul
sbb
mov
inc
jp
stos
inc
jno
leave
adc
aaa
test
leave
push
dec
dec
in
xchg
sbb
test
sbb
push
sub
add
mov
sbb
push
inc
dec
dec
jle
shrl
jne
test
dec
lret
pop
push
cmp
mov
jge
jo
add
mov
cmp
push
jo
fcomps
lock
pop
adc
sahf
aaa
arpl
push
leave
outsl
pusha
test
inc
ljmp
push
add
jge
jae
dec
add
or
pop
jae
inc
dec
inc
xor
mov
pop
inc
push
mov
fdivl
pop
and
pusha
rcrb
cmpb
jo
or
cmp
xor
icebp
push
adc
xchg
mov
mov
push
sbb
movsb
push
inc
push
cmp
jb
cmp
cmp
ficoml
cwtl
dec
add
xor
inc
jmp
xor
ljmp
incl
aas
ja
push
push
push
nop
xchg
cmpsl
cwtl
dec
pop
mov
jg
iret
call
or
loopne
lods
ret
push
add
pop
push
mov
xchg
je
or
xor
dec
adc
push
push
jg
mov
add
pop
testl
sbb
popf
cltd
jne
fmul
adc
and
jo
mov
jmp
add
adc
adc
addb
pop
add
xchg
cmp
fsubrs
icebp
or
and
stc
jo
inc
xor
sbb
sbb
pop
cs
add
or
inc
xchg
mov
ret
inc
mov
add
add
enter
push
repz
xchg
dec
lea
mov
cmp
in
rcrb
loope
push
adc
inc
arpl
movsl
es
rcll
jae
xorl
sbb
pusha
sbb
std
sub
fadds
inc
neg
fisttpl
push
add
dec
jecxz
lods
xchg
fs
and
mov
dec
lcall
sbb
dec
inc
imul
push
lods
call
sbb
out
and
xor
lods
shlb
andl
sbb
push
pop
and
scas
loopne
pop
sbbl
js
jno
and
lods
lds
fcoml
mov
push
pop
pop
icebp
add
push
mov
sbb
pop
pop
rolb
add
add
dec
sbb
inc
dec
fdivr
pop
cs
add
add
dec
bound
or
mov
ljmp
clc
jo
lea
push
pop
mov
rep
mov
dec
rcrl
inc
mov
pusha
popa
xorb
mov
inc
pop
xchg
push
cld
lock
rol
pop
pop
sub
int3
push
sbb
push
or
cmp
jge
mov
bound
cmp
ss
enter
pop
ret
push
mov
and
or
sub
push
adc
sub
jne
inc
mov
jb
xor
in
ret
and
in
and
add
popa
adc
rcrb
add
mov
jg
loope
out
movl
push
outsl
andps
sbb
and
pop
in
add
in
loop
pop
or
xchg
or
adc
cmp
nop
mov
pop
push
clc
les
cmp
xor
shll
or
jl
push
clc
roll
das
lock
push
std
ljmp
cld
clc
loop
icebp
dec
jge
call
clc
lods
lods
mov
pop
out
insb
cld
inc
xchg
fildl
push
repz
inc
and
loopne
and
sub
push
jb
enter
js
iret
test
outsb
aaa
repnz
rclb
lahf
lea
out
push
or
lods
xlat
jecxz
pop
sub
and
hlt
dec
movsb
fadds
lret
cmp
or
sbb
rolb
cli
push
push
cld
push
xor
pop
imul
ficomps
testb
jge
filds
mov
inc
mov
cmp
or
sbb
sbb
jo
loope
shl
cmpsb
pop
cmp
xor
je
push
push
idivl
inc
push
pop
int3
push
mov
fs
jl
test
mov
cmp
aam
cmp
mov
sub
mov
fidivl
enter
jge
fchs
mov
out
cmp
jle
mov
shr
not
push
or
push
aas
xlat
jns
xor
and
shll
push
xor
inc
mov
aad
xlat
add
addr16
ja
cwtl
sub
inc
or
pop
rcr
jl
sub
aam
push
sub
cmp
inc
mov
enter
cmp
cmpsl
and
pushf
aam
movl
sub
pop
lock
jge
sbb
add
sbb
pop
aaa
mov
add
addr16
sub
popl
dec
aad
mov
insb
test
dec
push
add
push
inc
je
scas
or
push
mov
push
lods
fisubrs
jno
and
mov
mov
shrb
add
adc
outsb
movd
push
mov
xchg
fs
mov
icebp
pop
or
adc
fsubrl
push
mov
or
jmp
inc
sbb
xchg
ss
js
or
in
inc
sbb
or
add
jmp
push
jne
sbb
arpl
mov
pop
and
stc
adc
inc
and
cwtl
popa
inc
icebp
ret
pop
lock
mov
jmp
je
cmp
jae
cmp
xchg
push
sbbb
into
fisubs
cmp
shlb
dec
sub
insl
dec
data16
adc
test
or
sub
inc
es
sbb
add
pop
cmp
sub
lret
pop
jo
lahf
popa
add
pop
sarb
cmp
sti
rep
bound
mov
cmpsl
or
adc
jmp
sub
jae
push
loopne
shlb
add
mov
jno
sbb
andl
xor
pop
push
push
pop
test
push
push
add
xorb
mov
push
xor
sahf
mov
stos
loopne
adc
in
sub
data16
inc
and
or
sub
push
xchg
add
adc
adc
lock
xor
add
rorb
xor
aas
int3
pop
shlb
inc
xchg
pop
mov
adc
jl
xchg
or
cmpb
jle
pop
jne
lock
push
call
xor
xor
inc
imul
gs
lock
add
push
push
lret
hlt
imul
mov
inc
insb
pop
jmp
popa
sub
hlt
cmp
scas
incl
fsubs
mov
mov
test
push
out
mov
repz
add
mov
sub
adc
xor
es
push
inc
imul
jge
pop
mov
push
cld
cwtl
rcl
inc
clc
pop
repz
push
lret
add
loop
scas
bnd
pop
adc
push
jmp
cmp
dec
imul
adc
mov
insb
xchg
and
xchg
imul
push
outsb
loop
sub
push
dec
or
ficoms
dec
push
xor
push
fistpl
xchg
ret
jno
incl
jno
xchg
sbb
scas
dec
mov
push
aam
push
push
cmp
xchg
and
mov
adc
arpl
jne
push
push
and
add
add
add
mov
xchg
mov
js
aad
push
sbb
and
sarb
sub
daa
sub
loopne
mov
lods
sbb
and
xchg
pusha
addb
jmp
shll
imul
rol
add
add
mov
push
xchg
mov
popa
xor
and
je
mov
dec
sbb
dec
rol
sarb
testl
inc
sub
cmp
jl
push
add
loopne
sub
lcall
cwtl
push
movnti
subb
inc
lods
xchg
les
test
push
test
inc
lods
sbb
arpl
or
mov
into
mov
aad
in
add
les
lds
sub
negb
les
dec
xor
cs
sub
and
int3
adc
cmpb
dec
jge
rorb
xchg
add
jbe
inc
push
enter
xchg
or
imul
mov
add
add
dec
dec
xchg
stos
mov
add
jle
add
xchg
scas
add
popa
insb
mov
insl
insl
push
add
pop
ror
or
adc
push
pop
cmp
xorl
mov
xor
pushf
or
lock
pop
jmp
cmp
je
push
shll
shrb
call
add
rol
add
clc
jbe
or
add
shlb
push
push
sbb
inc
pop
pusha
in
adc
ficompl
jle
or
inc
pop
add
cmp
daa
hlt
mov
inc
outsl
call
jmp
es
lea
push
and
xchg
sbb
lock
pusha
or
testb
lock
adc
sti
or
inc
rcll
movsl
mov
sbb
cmp
jnp
cmp
in
mov
loope
jne
and
lea
pop
rorb
orb
sbb
call
ficompl
xchg
and
inc
xlat
lea
lcall
or
iret
sub
sub
shlb
mov
add
imul
mov
es
nop
imul
ret
loopne
dec
call
nop
add
or
in
and
xor
adc
pop
out
push
mov
jb
jmp
dec
ss
stos
imull
arpl
dec
add
jne
sub
outsb
sar
lea
jp
cmp
popa
or
into
xchg
call
jb
pushl
mov
or
ret
loopne
or
pop
jmp
xor
add
icebp
clc
jae
and
jne
in
and
xchg
or
push
cmp
adc
inc
jg
nop
daa
dec
das
add
push
inc
std
jo
sub
push
xchg
cmpsb
popf
adc
movsl
ret
imul
sub
xchg
dec
mov
mov
mulb
or
inc
and
mov
xchg
test
outsl
cmp
fisttps
xchg
aam
add
cmp
cmp
pop
ror
sbb
push
scas
in
sbbl
mov
adc
daa
sbb
in
nop
or
cmp
sbb
sbb
test
insl
xchg
or
mov
ss
arpl
mov
dec
or
adc
andb
sbb
and
add
fstp
adc
lahf
jmp
and
and
pop
sbb
adc
daa
mov
movl
pushf
xchg
filds
or
cmpsb
or
xor
lock
jne
jb
xor
pusha
dec
mov
test
pop
adc
enter
test
sub
jbe
subl
lcall
xchg
loop
inc
dec
mov
mov
and
mov
xchg
sbb
xchg
push
and
and
and
sbb
xchg
mov
xchg
daa
adc
inc
push
nop
das
sub
nop
inc
push
sub
jae
nop
inc
mov
das
in
add
jmp
push
push
add
inc
push
xchg
sub
cld
xor
or
mov
lock
xor
mov
mov
xchg
mov
rclb
stos
leave
out
jb
xor
jmp
add
jecxz
jmp
push
in
mov
add
cmpsl
or
adc
sbb
pop
adc
in
adcb
outsl
pusha
mov
cbtw
cmpsb
and
add
outsb
mov
adc
xor
pushf
or
mov
sub
and
push
or
add
adc
out
sub
rorl
adc
ljmp
pushf
sbb
mov
addl
ja
or
dec
ja
sub
add
lahf
and
xor
andb
sub
xor
ja
add
cmp
mov
adc
mov
xchg
popa
sarl
mov
out
push
pop
shlb
pop
pop
or
jbe
jb
cmc
rcll
or
data16
movsb
icebp
inc
adc
add
add
push
or
or
push
lods
scas
loope
pop
adc
loopne
mov
ret
mov
sbb
sub
dec
shl
push
cmp
cmp
adcl
fwait
jbe
adc
loopne
xor
jne
push
inc
xor
je
mov
cmpsb
jne
and
pop
push
xor
lock
pop
fcoml
cmp
dec
mulb
out
je
push
xchg
in
push
movsl
stos
lock
stos
mov
fcoml
cmp
pop
cs
das
or
rcll
movsl
pop
sub
push
push
movsb
sbb
dec
sbb
or
sbb
out
add
in
mov
jo
sbb
inc
call
pusha
cmp
je
les
lret
mov
insb
or
iret
mov
sub
or
push
scas
loope
mov
push
cmpb
jae,pn
xor
popa
outsb
hlt
int3
lods
push
lock
or
jmp
xchg
and
adc
mov
or
movsb
arpl
cld
cmc
inc
je
lock
fsub
sbb
les
add
jecxz
sbb
cmp
mov
test
push
inc
xchg
dec
cmp
jg
aas
pusha
pop
iret
fmul
ds
loop
clc
and
push
sahf
pop
or
mov
push
cmp
push
push
outsb
cwtl
adc
push
inc
scas
ss
call
pmulhuw
jo
push
loop
rorl
mov
push
sub
loope
mov
jmp
cmp
outsl
xchg
xchg
shlb
dec
or
add
fadds
test
mov
mov
sbb
sub
cmp
xor
pop
add
pop
or
flds
into
test
lret
dec
gs
push
sub
or
pop
or
pop
inc
ljmp
dec
aam
or
repnz
adc
adc
or
pop
fcmovu
mov
movsl
arpl
or
pop
dec
add
add
jmp
sbb
les
mov
dec
loopne
popa
lret
mov
push
in
cmp
enter
cld
pusha
or
add
jmp
jne
mov
push
jg
xor
xchg
inc
fiadds
or
hlt
loope
lock
in
out
frstor
pop
fsubs
pop
popa
enter
add
cld
stc
pop
sub
leave
push
add
sub
sbbl
js
push
mov
and
or
imul
sub
pusha
dec
fsubrs
mov
lret
add
packssdw
ret
repz
lahf
xchg
jo
lea
mov
sti
decl
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
inc
cmp
jmp
and
inc
pop
mov
fcmovnb
cmp
mov
pop
and
jg
daa
sbb
xor
je
cmp
je
mov
pop
js
pop
or
add
mov
mov
adcb
sbb
jae
mov
mov
cs
pop
movsl
sbb
xor
inc
cmp
testl
out
add
add
inc
nop
mov
jecxz
sub
jp
push
mov
mov
lock
xor
mov
jl
lret
dec
sbb
jl
adc
lcall
rol
mov
jge
decl
js
aaa
and
movsb
lods
imul
loop
mov
sbb
push
and
or
fidivs
and
add
cld
lock
imul
mov
clc
jne
in
into
mov
pop
pop
mov
xchg
pop
jne
inc
sahf
pop
lods
pop
js
dec
filds
or
mov
lods
sarl
pop
gs
cmpsb
push
aam
mov
adc
inc
stos
fst
aam
or
roll
mov
sub
inc
push
push
sub
stc
fsubl
sub
inc
rcr
fistl
ret
pop
mov
mov
pop
mov
iret
add
lahf
push
mov
loopne
jl
call
dec
mov
or
loopne
loope
inc
adc
scas
nop
pusha
clc
aad
leave
fcoms
or
xchg
or
mov
gs
and
inc
mov
cld
jnp
je
or
xchg
cmpsb
jo
hlt
je
mov
arpl
pop
dec
or
mov
or
iret
inc
xor
inc
adc
or
sbb
or
xorb
mov
icebp
mov
iret
repz
pusha
fs
enter
or
and
cmp
je
dec
mov
mov
xor
cmp
lea
sub
loop
test
mov
xchg
xchg
pop
pop
clc
enter
mov
gs
dec
fwait
jno
adc
dec
je
adc
sbb
push
jne
push
daa
out
push
xchg
int3
out
xor
dec
das
or
sub
xlat
push
call
shlb
or
adc
out
scas
loope
int
sarb
aaa
xor
inc
imul
sub
xchg
sub
call
sub
pop
or
loop
rclb
jecxz
notb
inc
cmp
inc
xor
add
fnstsw
and
pusha
push
push
imul
adc
push
sarb
sub
push
std
cmp
pusha
jno
cmp
out
or
fwait
adc
dec
inc
add
push
cli
jne
xchg
jbe
pop
repnz
jmp
push
por
sub
test
and
add
and
and
sti
in
pop
xchg
push
push
lahf
push
add
loope
mov
sub
dec
pop
loope
loop
fucomi
jae
cmp
sbb
jne
dec
insl
push
mov
or
mov
adcb
iret
xor
mov
out
ljmp
mov
mov
and
and
daa
js
adc
sub
out
xchg
orb
fldt
adc
sbb
scas
jo
add
xchg
sbb
pop
sbb
or
mov
shll
movb
fsubrl
ja
rclb
cld
in
xor
mov
add
lea
pop
pop
lahf
mov
loopne
cmp
in
and
daa
je
push
jne
push
adc
and
push
pop
push
add
sbb
call
shl
pop
std
add
xchg
pushf
inc
mov
add
xor
and
add
cwtl
fs
push
jle
dec
dec
push
loope
add
and
jne
and
cmp
dec
into
andb
sbb
or
push
inc
fwait
xchg
fisttpl
and
mov
pop
insb
enter
pop
je
fwait
adc
loopne
xchg
xchg
or
fs
addl
dec
test
popa
jno
push
lods
add
cwtl
dec
cmp
xchg
pushl
or
mov
sub
mov
test
pop
push
loop
sbb
jbe
dec
add
leave
or
jle
pop
outsb
pusha
insl
pop
cltd
subl
xor
adc
mov
rorb
jbe
std
pop
leave
sbb
insb
jmp
or
andl
add
mov
jmp
mov
inc
push
add
pop
dec
call
mov
adc
std
or
movl
jle
enter
loopne
mov
push
repz
ds
insb
push
add
push
lea
push
test
inc
in
scas
sub
push
pop
jno
push
das
loop
hlt
pop
push
push
cli
xorb
xor
push
sub
jl
or
push
pop
and
hlt
jg
mov
sub
add
das
movsl
jo
imul
jns
cmpsb
push
ret
orps
add
xor
sub
mov
xor
or
ret
jbe
or
stc
sub
lea
or
sub
xorb
pop
ret
lods
jg
cmp
or
pop
movsb
cmp
pop
jne
push
mov
or
pop
in
aaa
pop
btsl
adc
shrl
ds
add
mov
lret
sub
or
jns
jb
mov
adc
pop
push
adc
dec
loop
pop
add
mov
inc
push
add
or
mov
data16
aam
sub
je
lock
push
shll
xchg
dec
popa
popf
push
dec
sahf
sbb
push
jg
lods
jbe
pop
mov
jle
ja
mov
add
dec
and
mov
push
insb
ret
and
cs
pop
cmp
cmp
and
mov
ret
jmp
test
divb
fisubrs
daa
or
es
js
push
sub
mov
imul
pop
mov
pop
pop
mov
filds
lea
jle
push
or
bound
lock
or
xchg
push
ja
in
push
adc
fwait
rclb
test
add
stos
sub
movsb
xchg
add
ds
pushf
mov
test
sub
sahf
out
dec
sbb
push
inc
sbb
mov
inc
ljmp
xorl
sbb
sub
out
adc
pop
ret
incl
or
imul
sbbb
push
dec
rclb
pop
inc
pushf
pop
jle
mov
pusha
imul
sub
mov
call
mov
fsubrs
xchg
push
pop
je
fldl
rcll
fstpl
dec
sbb
inc
pop
data16
fbstp
inc
add
bnd
push
divb
out
stc
jns
clc
jne
or
jne
add
scas
leave
lcall
out
into
fstpl
andl
adc
adc
nop
loope
enter
dec
out
push
fbld
mov
mov
push
pop
and
std
add
aam
arpl
test
lea
fstl
jecxz
mov
mov
movsl
movsl
lea
movsl
insb
jl
or
cld
les
and
aad
pop
ss
pop
push
inc
cmp
mov
add
dec
jae
dec
pop
pop
xchg
xchg
mov
fsubr
ficomps
and
mov
aam
lods
pusha
pop
mov
test
fnstsw
jne
cmp
ret
jae
inc
inc
in
cmp
push
or
out
fstl
or
pminub
hlt
ja
lcall
xor
and
and
and
mov
ss
add
repz
mov
add
push
jmp
out
mov
outsl
aam
pushf
jl
dec
fsubl
jbe
dec
sub
loopne
pop
fcmovbe
sbb
and
dec
push
enter
and
cli
imul
jge
adc
repz
push
pop
push
push
add
je
add
push
enter
xchg
mov
adc
mov
jl
sub
xor
inc
sahf
pop
add
and
or
push
jns
adc
pop
sarb
nop
testl
or
or
pop
call
dec
mov
add
jecxz
mov
push
inc
ds
xor
pusha
and
pop
push
add
or
mov
test
outsb
dec
add
or
and
or
mov
xor
mov
adc
stc
push
add
outsl
cmpb
int3
mov
mov
faddl
mov
lods
fcom
subl
enter
cld
or
mov
adc
or
enter
rorb
or
sbb
sub
or
push
outsb
subl
add
icebp
adc
xchg
pop
inc
inc
inc
es
fsub
push
xor
inc
dec
lahf
add
or
mov
adc
in
imul
push
xchg
xchg
xchg
xchg
ror
enter
xchg
xchg
sarb
mov
test
inc
push
mov
pop
jge
pop
mov
mov
xor
imul
sbb
push
push
repnz
test
push
push
jmp
imul
imul
xor
pop
adc
ret
cs
sub
addr16
pusha
or
sarb
jle
xchg
add
pop
call
add
pop
fimull
scas
aad
bound
and
push
adc
jle
xor
mov
adc
nopl
add
add
cs
mov
bndldx
in
jbe
leave
add
add
cld
cmp
jl
shrb
pop
and
xor
adc
jmp
or
pxor
push
call
push
xchg
popf
push
cmp
pushf
pusha
push
add
add
mov
lcall
push
imul
push
loope
inc
xchg
pop
call
imul
adc
push
call
nop
push
fs
dec
add
mov
xchg
cmc
push
les
test
sub
mov
cmp
jmp
into
orl
add
xor
mov
popf
fsubl
and
hlt
mov
adc
add
andl
jl
pop
call
js
xchg
xor
mov
adc
dec
dec
push
out
mov
cmp
push
cmp
push
add
fcompl
mulb
jmp
lock
dec
mov
xchg
call
add
add
inc
add
pop
add
inc
stc
push
sti
lock
add
xor
rolb
cmp
mov
add
pop
jle
sbb
jge
lret
or
push
pop
push
adc
push
dec
jns
fnstsw
mov
inc
imul
sub
and
cmpsb
jne
cmp
mov
rolb
lock
sbb
inc
shl
add
lods
or
pop
xor
test
lods
sti
daa
xlat
movsb
cmp
fsubs
sub
xchg
lea
push
and
shrl
cmp
push
movsl
in
or
nop
aad
loopne
fwait
push
dec
push
sub
mov
jnp
push
lret
lods
cmovno
aam
xor
mov
stos
or
ret
lea
sub
mov
xor
hlt
dec
fisubrs
push
int
fstl
cld
outsb
add
in
inc
repnz
iret
pop
pop
cmp
or
xor
test
sar
push
outsb
nop
cmp
enter
sbbb
inc
addb
nop
xchg
or
pushf
pushf
mov
andb
push
push
das
popa
das
loop
test
fcomps
sbb
adc
enter
xchg
xchg
in
or
or
pop
push
pop
mov
and
cmpsl
push
sub
push
cmpsl
xchg
push
add
jle
cmc
add
xchg
xchg
xor
mov
in
mov
int3
push
or
inc
lods
dec
fistpl
add
addb
popa
lea
push
mov
inc
aam
cmp
in
add
mov
sub
lahf
xchg
mov
aaa
nop
fsubrp
daa
xchg
pop
aad
xor
add
mov
arpl
pusha
imul
cmc
lahf
adc
pusha
stos
pop
lahf
orb
mov
ficomps
pop
lahf
or
mov
sub
push
and
in
lahf
add
fisubl
lahf
jo
imul
cmpsl
scas
push
into
fcmovnb
leave
mov
outsb
fwait
in
lock
push
js,pt
dec
jne
jo
inc
cmp
inc
cld
add
adc
jge
xor
add
inc
orb
xor
or
sub
xor
mov
stos
cmp
mov
lret
aam
mov
and
test
lock
and
out
sbb
es
sub
addr16
add
xchg
mov
xor
pop
mov
movsl
int
cs
sub
inc
stos
ljmp
mov
jo
and
mov
sbb
test
arpl
aad
pop
mov
xor
es
adc
pop
jno
and
mov
xlat
xchg
xor
add
xor
mov
jno
push
mov
fisubrl
cmp
jl
jmp
aaa
nop
out
stos
pop
mov
les
lods
mov
ret
adc
into
dec
inc
push
fistps
adc
ds
cli
jecxz
xor
arpl
in
add
lods
aam
movb
mov
sbbb
test
mov
lock
divb
dec
cli
daa
and
ret
dec
mov
add
cmpsb
adc
pop
mov
adc
arpl
mov
iret
push
inc
test
jo
cmp
aam
sbb
sbb
xchg
xchg
add
xchg
jb
or
fmull
or
sub
nop
sbb
cmp
push
stos
hlt
mov
cmpsl
movsl
cmp
mov
push
or
aam
cmovo
out
mov
mov
addr16
adc
sub
lahf
lods
push
push
mov
lret
subl
movsb
adc
cwtl
push
add
loope
leave
sub
cli
mov
in
fwait
xchg
and
imull
ljmp
das
cwtl
dec
cmp
add
subl
or
test
iret
xchg
sahf
fisttpl
xor
pop
xchg
mov
fcompl
pcmpeqw
mov
add
clc
jno
fisubs
cmp
and
inc
xchg
ds
and
mov
jne
inc
inc
neg
push
mov
stos
push
shll
cld
lcall
push
test
lar
dec
jp
fldenv
mov
push
inc
or
nop
cmc
in
dec
add
decb
test
add
pushf
add
xor
add
jne
loope
add
adc
repz
or
and
push
sahf
or
jmp
push
sbb
jbe
daa
push
pop
lahf
adc
ja
xchg
mov
pop
cs
dec
push
pushl
cli
int3
xchg
push
or
test
jo
addb
xchg
mov
push
jne
lods
mull
and
dec
jmp
popf
lea
aam
mov
push
mov
xchg
andl
push
xchg
clc
cltd
cmpl
push
movsb
add
outsl
add
mov
or
test
mov
out
add
adc
arpl
add
and
sub
push
pushf
pop
movsb
jb
pop
xor
lods
out
or
push
mov
push
pop
sub
xor
or
jb
xchg
outsl
or
pop
sub
movsb
or
cmpsl
lods
push
lahf
xorb
push
adc
lret
adc
in
iret
mov
dec
xchg
in
dec
push
pop
sub
fpatan
hlt
mov
and
mov
push
mov
add
movsb
rclb
mov
adc
sub
les
sbb
movsl
pop
or
ret
or
cmp
test
xor
lea
xor
pop
cmp
mov
fs
and
push
xor
ret
pusha
loop
dec
sub
sub
in
push
repz
subl
push
cmp
ja
stos
roll
addr16
test
ja
sub
sbb
and
setno
leave
adc
push
cld
bnd
and
in
mov
and
in
dec
jecxz
sub
cmp
sbb
sbb
and
push
or
movsl
jg
cmp
sbb
out
jg
push
in
add
push
lock
out
and
pop
mov
rcpps
adc
aam
xor
dec
cmp
pusha
fs
push
ret
fldt
sub
or
cltd
add
sub
fisubs
aad
add
pop
jnp
adc
int3
inc
sbb
mov
ret
sti
add
je
add
or
cmp
adc
cmovl
in
mov
xor
out
inc
loope
push
addl
add
mov
mov
ss
or
and
jl
mov
outsl
pop
clc
lods
push
dec
xchg
inc
inc
les
inc
pop
rol
cmpsl
loopne
mov
pushf
ret
sbb
fcoms
pop
mov
loopne
cmp
sub
pop
push
xor
cs
add
sarb
adc
inc
jo
iret
fdivr
inc
in
and
push
es
add
or
pop
push
push
mov
int3
add
arpl
cmc
inc
push
ror
xlat
push
sbb
or
xchg
and
imul
dec
push
xchg
jnp
xchg
mov
add
out
adc
pop
pushf
subb
jp
add
cs
push
sub
mov
pusha
add
sbb
orl
fstps
cwtl
mov
fmuls
sbb
and
insl
or
and
sub
out
mov
mov
pop
push
hlt
ss
nop
enter
inc
ss
and
enter
int
mov
in
fidivs
out
cmpl
pop
jne
fdivl
inc
cmp
daa
inc
or
in
arpl
call
out
mov
or
xchg
sbb
push
or
mov
enter
loopne
sub
sub
aas
inc
aam
or
push
mov
sbb
push
dec
sti
mov
dec
mov
arpl
xor
dec
inc
mov
pop
loope
pop
pushl
or
add
insb
loop
cmpl
jmp
jle,pt
movsl
xor
dec
bound
sbbl
push
xor
mov
mov
lock
cmp
sahf
xchg
shll
mov
or
mov
sub
in
mov
add
push
decl
repz
cmp
jae
and
sbb
mov
jmp
add
push
pop
push
flds
pop
ret
or
jge
popa
xor
or
ret
ret
and
sbb
popl
outsb
sbbb
cmp
dec
add
jmp
shrl
bound
inc
xor
imulb
nop
dec
and
repnz
in
imul
incb
cmp
je
mov
xchg
mov
fistpll
pop
and
jle
mov
sbb
or
dec
clc
mov
fs
dec
fadds
and
add
mov
fdivs
pop
adc
cmp
jb
or
inc
or
in
sbb
push
lcall
leave
mov
es
lret
push
inc
cli
adc
add
data16
mov
push
sbb
call
repnz
pop
mov
es
mov
jmp
imul
movsbl
add
inc
mov
das
ds
aad
icebp
push
add
or
inc
mov
cmp
add
inc
cmp
push
imul
add
adcb
adc
rclb
xchg
inc
fstpl
jmp
and
cld
mov
test
popa
xor
dec
lea
or
xchg
stos
ret
xor
or
jno
jmp
pop
stc
dec
imul
xchg
aas
push
xchg
imul
int3
mov
loopne
enter
lcall
mov
cld
or
cmp
je
out
jp
loop
xor
or
ljmp
lret
xchg
add
xchg
test
jecxz
pop
test
dec
mov
dec
cmpsl
fisttpl
imul
xor
sub
mov
mov
sub
xchg
les
mov
adc
push
sub
sbb
jns
ja
lret
xchg
pop
jmp
adc
dec
in
inc
clc
inc
dec
cmp
sahf
add
in
pop
das
or
mov
incl
dec
gs
paddd
insb
in
mov
pop
cmpsl
xor
ds
sbb
jg
xchg
sub
sub
push
fildl
xor
inc
adc
out
add
dec
or
ret
fiadds
sub
inc
jl
popa
push
fstpl
fldl
das
imul
je
and
add
insb
test
std
shll
or
sbb
add
test
aas
out
fbstp
fstpl
and
insl
clc
push
and
or
enter
out
out
cmp
mov
or
fsub
pop
fsubrp
sub
jecxz
inc
jge
pop
andb
shlb
sub
mov
repz
or
icebp
and
sub
shrb
scas
add
arpl
adc
push
int3
cmp
je
add
es
data16
daa
cs
xlat
lods
and
xor
and
bnd
ss
xor
push
push
push
and
push
push
xchg
punpcklbw
xor
imul
push
add
cmp
stc
js
aaa
push
add
sub
sub
outsl
test
mov
xor
movsl
mov
jns
xchg
sbb
sbb
mov
fisubs
std
add
mov
xor
in
jp
add
lahf
pop
repnz
xor
pop
incb
es
jb
ja
jne
repnz
sub
push
adc
sbb
cld
nop
out
xor
push
enter
pop
and
and
adc
les
out
mov
adc
repnz
mov
sbb
add
enter
push
push
and
xor
and
mov
sbb
push
jecxz
fstpt
leave
addl
inc
and
mov
sahf
insl
enter
sub
push
push
push
enter
add
stc
and
xchg
jl
ss
xchg
ss
and
ds
sub
add
leave
sti
or
dec
and
pop
into
push
inc
push
adc
sub
push
add
ja
cmp
fs
adc
sbb
mov
push
js
repz
sbbb
loopne
and
punpckhbw
shrl
repnz
repnz
inc
add
adc
or
xchg
mov
bswap
inc
aaa
nop
out
mov
adc
sbb
sahf
pop
repnz
sbb
das
js
push
aad
inc
push
cwtl
ja
pushf
mov
lret
adc
push
or
out
pop
pushf
push
lods
mov
iret
sarl
adc
repz
push
stc
cmp
shl
cmc
push
adc
sahf
out
sahf
sub
dec
pop
insb
jge
sahf
out
mov
xor
out
hlt
add
repnz
cmp
jl
push
ret
inc
add
and
sub
xchg
sbb
jne
add
mov
dec
push
add
push
les
orl
push
jg
pop
mov
cmp
adc
call
pop
lock
sub
xor
in
lods
add
arpl
cmp
mov
and
and
mov
rclb
rcl
call
adc
xchg
mov
add
inc
sub
pop
push
data16
pop
popa
add
mov
das
pop
ret
andb
ret
daa
mov
fsubrs
push
mov
push
inc
icebp
and
sub
and
and
mov
aaa
adc
jae
lock
push
dec
js
push
insl
xchg
scas
mov
sbb
adc
inc
and
dec
sahf
dec
and
or
cmpsb
push
pop
js
stos
push
daa
push
mov
sub
add
xor
enter
shl
nop
out
enter
imul
add
call
lds
lock
ljmp
mov
add
push
adc
inc
addl
aam
pop
leave
adc
filds
pop
add
ret
jmp
jo
push
in
inc
xchg
in
mov
js
popa
sbb
dec
mov
mov
jno
jle
xor
icebp
add
xor
and
pop
sub
sub
out
add
pop
jo
add
sub
push
sbb
loopne
push
popa
push
mov
call
in
add
enter
add
push
or
aaa
or
xchg
outsl
in
in
mov
push
mov
loope
push
cltd
in
cld
or
push
repnz
and
out
rcll
loopne
aad
and
adc
faddl
push
jo
out
add
out
repnz
inc
pop
jmp
orl
orb
jg
mov
dec
sub
xor
ret
add
stc
or
sub
cmp
iret
das
inc
push
cmp
or
adc
nop
xchg
dec
and
push
nop
inc
sbb
test
popa
mov
inc
pop
or
mov
adc
pop
or
lods
dec
pop
xor
ss
cwtl
pushf
sub
push
push
es
outsl
js
roll
adc
leave
test
call
shlb
cmpsb
xor
jb
mov
push
jo
adcl
sbb
inc
cmpsb
xchg
add
hlt
nop
sbb
ja
cwtl
cmp
sbb
inc
and
dec
adc
adcb
xor
adc
and
sub
adc
adc
andb
lock
mov
mov
cmp
fs
mov
in
add
adc
xchg
push
sub
adc
jns
nop
arpl
jbe
dec
pop
mov
rolb
jecxz
dec
cmpsb
sbb
and
mov
adc
rcll
repnz
add
cmc
add
nop
out
push
adc
rclb
xchg
pop
leave
lds
adc
adcb
mov
outsb
adc
push
inc
adc
rorb
and
or
or
es
add
or
sbb
pop
or
add
mov
arpl
adc
sbb
adc
jg
jg
addb
add
or
sbb
scas
push
push
shll
mov
adcb
add
inc
add
add
pop
setb
mov
dec
and
xchg
push
sbb
cs
push
std
inc
ljmp
stos
jae
aad
cs
or
inc
push
push
rol
jae
and
inc
and
iret
lods
add
sti
rolb
add
xchg
or
adcb
push
push
jg
lods
mov
call
fisttpl
scas
insb
and
adc
test
dec
mov
mov
sub
cltd
inc
sbb
mov
adc
or
xor
xor
mov
stos
and
andl
push
test
push
xor
pop
rolb
mov
stos
inc
sahf
and
adc
pusha
sbb
inc
or
or
and
add
dec
pusha
and
icebp
add
mov
push
lds
inc
and
sbb
incl
or
or
cmp
pop
mov
aaa
or
jecxz
sbb
sbb
cmpl
push
xchg
and
mov
aas
inc
dec
xor
mov
push
and
push
lds
push
or
add
add
or
lret
add
or
cmp
jl
dec
lock
adc
add
mov
push
dec
lods
outsb
or
fsubs
xchg
ror
sub
and
mov
sarl
adc
or
add
movsb
fcomp
sarl
mov
push
test
mov
add
adc
cmp
in
dec
jge
push
cmpb
je
or
lods
mov
sub
or
add
into
mov
jne
xchg
pusha
push
adc
addr16
pop
add
cmc
add
cmp
fildll
xchg
dec
dec
fstpl
ss
jp
aam
adc
sub
dec
inc
mov
test
xchg
inc
push
add
mov
pop
bound
push
arpl
sbbb
sbb
mov
xor
inc
arpl
inc
imul
roll
lea
xchg
ljmp
or
js
cmp
stc
mov
cmpl
fldl
insl
jmp
push
sbbb
jecxz
or
mov
sbb
repnz
outsl
dec
lret
pop
add
or
xchg
scas
push
sbb
daa
dec
aaa
adc
push
jl
push
adc
mov
push
push
enter
dec
xchg
test
shrb
inc
or
aam
adc
adc
call
lret
xlat
push
fsubrs
mov
dec
out
and
dec
pusha
test
lds
pop
adc
insl
call
call
xor
pop
push
sbb
or
pop
and
and
dec
adc
lock
add
jnp
int3
push
mov
inc
sbb
jl
sbb
mov
aam
inc
add
or
mov
add
cmp
jbe
pusha
add
jns
gs
dec
or
enter
push
add
mov
push
orb
jecxz
pushf
push
fcompl
xchg
add
or
dec
lock
hlt
add
ret
rorl
sbbb
loop
dec
cmp
cmp
call
push
mov
adc
rorl
cmp
and
push
xor
ret
inc
sub
and
mov
inc
dec
inc
xchg
jle
outsb
mov
xor
sub
adc
decb
adc
jl
xor
jmp
cmp
jl
or
sbb
popa
idivl
mov
cmp
cmp
je
mov
mov
push
lcall
ret
inc
inc
jmp
movb
mov
push
cltd
pop
idiv
jbe
push
pusha
repnz
in
pop
cmp
out
xor
es
jns
inc
decb
dec
cld
dec
ret
stos
ja
sbb
dec
js
stos
mov
mov
cmpsl
loope
stos
or
hlt
xchg
pusha
jne
mov
cltd
mov
sub
sub
shr
add
or
dec
or
dec
jl
xchg
addl
cmp
out
xchg
hlt
incb
pushf
int
or
cmp
iret
cmp
mov
pop
push
sub
into
faddl
cmp
fidivrs
push
lock
push
mov
push
cmp
sbb
jns
dec
scas
cmp
adc
and
imull
enter
pop
iret
xor
push
and
lret
jge
out
rolb
fidivrs
push
sbb
adc
mov
or
mov
ljmp
push
enter
dec
ds
ja
pop
aaa
test
out
movsb
fstl
push
sub
imul
in
test
push
out
pop
and
mov
jl
pminsw
push
xchg
adc
pushf
mov
inc
enter
add
movsb
adc
pusha
stos
rcrb
push
push
lods
adc
insl
pop
int
adc
pop
inc
sub
in
add
pop
cmp
jne
cs
inc
push
push
pop
cwtl
and
pop
movsb
adc
inc
pop
push
cmp
daa
popf
xchg
xlat
mov
jo
sub
push
insl
in
inc
pop
jns
cs
and
mov
enter
and
enter
jl
sbb
or
and
lahf
int3
ja
call
xor
lods
and
daa
call
lea
leave
into
sti
sbb
sub
pop
jge
enter
push
push
fs
and
dec
imul
and
stos
sbb
sbb
sbb
aam
jae
shrb
shr
mov
and
or
adc
imul
inc
loopne
test
or
nop
and
notb
cmp
push
push
mov
es
xlat
inc
fidivrs
dec
in
sahf
mov
fs
insl
sub
sub
inc
aaa
sbb
scas
inc
adc
fisubs
and
inc
mov
pusha
cwtl
dec
nop
leave
leave
and
pop
mov
xor
lcall
mov
in
lods
shld
test
xchg
je
dec
in
sub
iret
les
lods
jno
sub
es
sahf
xchg
mov
push
jbe
lock
adc
push
sbb
push
inc
dec
push
pop
cmpsl
mov
in
lret
enter
xor
pusha
je,pn
lea
cmpsl
iret
adc
push
inc
sti
fs
sbb
fadds
push
xor
add
in
xor
push
mov
cwtl
pop
fucomi
mov
xchg
mov
movsb
cwtl
icebp
pop
int3
sbb
fmull
pop
inc
scas
fildl
cmp
mov
sbb
xor
mov
out
pop
sar
test
inc
mov
imul
ds
pop
add
xchg
test
sbb
gs
sbb
subb
mov
test
in
push
add
pop
call
cmp
sti
roll
in
xor
je
xchg
add
in
cmp
insb
in
push
fcoms
adc
in
or
insl
or
movsb
cltd
insl
sbb
loopne
stc
or
and
and
lds
andb
repz
hlt
xor
jle
sbb
or
mov
adc
jle
cs
into
adc
cmc
jl
adc
lahf
jp
xchg
push
xchg
inc
sub
dec
push
and
stos
hlt
cmpsl
scas
xchg
sbb
push
and
cmp
fwait
jl
adc
push
or
dec
xchg
shlb
add
dec
mov
scas
mov
sbb
loope
add
pop
pop
bound
fdivs
xchg
inc
inc
xchg
push
in
inc
popa
adc
pushf
fstl
outsl
or
pop
cmc
ss
jmp
neg
sub
lock
add
push
dec
sub
popa
cmp
dec
push
and
dec
dec
incl
js
sbb
sub
xchg
sbb
das
test
nop
cld
inc
popf
xchg
pop
add
lea
push
xor
dec
je
dec
movsl
roll
or
xor
je
stos
inc
sub
mov
dec
rcl
xor
in
aad
mov
push
sbb
pop
inc
sub
or
pushf
cmc
xchg
mov
subb
jno
inc
fwait
sub
scas
outsb
xchg
and
and
test
mov
or
in
adc
daa
in
add
xor
push
loop
jb
ret
in
lods
fisubl
push
adc
out
and
pop
xchg
mov
out
push
mov
push
aas
or
call
rorl
inc
rolb
jge
loopne
iret
lods
mov
pop
ja
mov
pop
xchg
pushf
push
xor
or
and
inc
push
push
and
stos
iret
rcrl
push
lds
popa
imul
mov
lret
mov
les
dec
rcrl
lock
and
xor
mov
mov
cmp
insl
add
cli
cmc
mov
shrb
xor
jmp
or
or
add
inc
jns
pop
aas
fcoml
incl
jl
mov
jbe
test
sbb
or
or
mov
mov
pop
sysenter
or
jecxz
andb
daa
or
mov
or
or
not
or
mov
inc
pusha
rclb
cmp
inc
inc
cmpb
cli
imul
or
loopne
xor
push
and
sbb
jl
jae
dec
movsl
cli
or
push
in
sub
pop
out
es
add
sbb
ds
movsb
repnz
mov
mov
addr16
mov
jno
sub
jne
sbb
fmul
push
repnz
loopne
pop
mov
xchg
pop
push
stos
pop
jmpw
cli
lcall
js
int3
inc
dec
pop
sub
adc
fsubrs
push
add
inc
mov
or
pop
shll
adc
adc
js
ljmp
adc
xor
push
icebp
notb
shll
cwtl
adc
and
push
push
pushl
mov
rorb
ss
sub
xor
sbb
sbb
nop
popf
fwait
push
pop
add
sbb
fcoms
pop
ljmp
fcmovne
js
add
sub
adc
adc
mov
repz
adc
sahf
cmpsl
je
or
mov
dec
das
xorb
ret
fcmovb
in
adc
push
pop
cltd
clc
sub
mov
popa
filds
xchg
lods
dec
and
inc
cmp
adc
aas
lret
std
nop
add
jmp
ds
adc
je
and
lahf
fstpl
push
cmp
xchg
dec
sub
mov
add
add
cmp
int
xchg
dec
pop
lock
inc
xor
mov
jbe
push
in
shlb
daa
popa
jne
ja
add
mov
dec
out
xorb
mov
test
iret
adcl
jp
rorl
cmp
sub
aam
cmp
scas
pop
mov
dec
cmp
cmp
push
xor
ljmp
cld
mov
negl
cmp
adc
cmp
movsb
jl
or
mov
inc
cmp
jns
xchg
inc
cmp
inc
dec
xchg
add
xchg
cmp
stos
cmc
adc
mov
rclb
push
jmp
add
nop
dec
cmp
xchg
xchg
pop
push
call
nop
push
add
cmp
jl
and
adc
add
lret
add
ds
ret
inc
ret
sti
ret
cld
aas
je
dec
jg
sbb
cmp
mov
test
mov
push
mov
inc
push
jle
xchg
cmp
mul
lcall
xchg
adc
push
sbb
adc
pop
lods
add
mov
pusha
popa
not
movsl
outsb
jnp
add
lods
push
sbb
xchg
adc
pop
sarl
add
or
inc
js
sbb
push
data16
outsb
cmp
push
xchg
pop
adc
outsb
out
and
iret
shrb
hlt
add
jmp
pushf
add
orl
push
out
pop
adc
cmp
jne
and
dec
sbb
mov
lret
inc
xor
add
and
push
cld
enter
or
jno
rcll
add
ret
sub
lea
pop
cltd
or
andb
cmp
cld
ljmp
mov
adc
sbb
mov
aaa
inc
dec
xchg
push
mov
mov
scas
mov
or
xchg
sub
adc
mov
sub
mov
xor
mov
pop
or
scas
push
mov
stc
test
cwtl
lods
adc
aam
push
jno
fadds
xor
and
jno
sbb
in
sub
jo
addr16
in
mov
jle
cli
ret
push
pop
fstps
push
add
rcl
push
and
mov
xchg
popf
lock
or
inc
in
pop
popf
mov
xor
lock
ja
xor
pop
pop
loop
push
pop
movsl
inc
cmpsl
adc
adc
adc
loopne
jo
mov
and
push
in
xor
or
push
or
loop
insb
nop
mov
adc
add
or
add
out
xor
js
lahf
dec
pusha
adc
jge
jbe
mov
mov
mov
mov
in
dec
cmp
es
jo
jns
push
mov
xchg
daa
push
movsb
mov
cmp
or
adc
add
or
mov
test
push
mov
in
sbb
add
add
and
pusha
je
jp
mov
xchg
sbb
xor
mov
ljmp
mov
mov
sub
cmp
daa
inc
cmp
add
loope
fsubl
mov
mov
push
addl
adc
xor
and
mov
sbbb
insl
mov
notb
dec
clc
outsl
xor
cmp
add
cmp
das
lcall
lock
push
dec
jp
sub
test
mov
dec
jp
pop
xor
xchg
pop
inc
cmp
jae
mov
cwtl
test
daa
test
pop
mov
add
jmp
mov
inc
mov
or
mov
sub
inc
adc
outsb
add
push
fmull
mov
inc
addr16
popf
lods
xchg
push
pop
push
push
push
ds
pop
xchg
test
adc
inc
mov
or
mov
je
fnstcw
dec
mov
mov
pop
dec
jecxz
je
test
loope
lcall
sub
mov
sahf
test
lahf
push
sbb
mov
pop
lods
sbb
or
sahf
push
jecxz
adc
test
clc
pop
pop
push
fisttps
jno,pn
loope
pop
add
push
outsb
mov
sbb
jp
push
lds
lea
lds
enter
imul
inc
stos
add
lret
xchg
xlat
sub
leave
or
fsts
cmp
sbb
shrb
es
xlat
push
xchg
or
cmpsw
rcl
insl
pop
push
inc
or
cmp
xlat
dec
shlb
out
adcb
stc
dec
out
xchg
clc
adc
cmp
out
xchg
movsb
lods
cmpb
or
jne
sub
fldl
nop
or
add
js
shl
inc
cmp
ret
je
add
jno
call
sarl
inc
and
pop
sub
xor
ss
push
cmpsl
adc
mov
jno
jne
or
test
xchg
cmp
sub
shrl
ljmp
movsl
movsb
call
pop
cmp
aad
movsb
push
sbbl
movsb
dec
adc
in
int
adc
xchg
pop
pop
add
pop
add
and
dec
frstor
mov
popa
imul
dec
pop
data16
dec
or
loopne
mov
cltd
inc
cmp
add
xor
and
popf
pop
and
and
xlat
inc
sub
fldt
pop
jo
mov
xor
mov
sub
hlt
jge
or
jp
out
push
pop
cmp
mov
outsl
addb
mov
enter
icebp
and
add
imul
scas
fs
sbb
adc
movsbl
and
pop
insb
imul
loop
dec
mov
cmp
xchg
xor
cmp
fisttpl
pop
pop
insl
and
orl
rol
xor
je
mov
testb
pop
icebp
hlt
xor
and
jae
mov
and
inc
inc
lea
or
sbb
mov
imul
add
sbb
fndisi(8087
scas
sub
or
and
in
xor
dec
fdivs
or
pop
mov
inc
push
repnz
or
aad
adc
mov
sub
and
push
in
adc
jb
adc
and
das
lea
mov
sbb
or
stos
mov
movd
nop
popa
cwtl
mov
cmp
les
out
or
xchg
add
rcrb
sub
jo
stos
enter
loop
push
push
sbb
dec
xor
pop
shr
xor
loope
adcl
mov
xor
or
sbb
jb
testl
scas
inc
scas
push
inc
sbb
shll
xor
adc
cmp
push
lahf
arpl
add
add
ret
inc
xchg
push
pop
nop
mov
test
push
adc
add
call
mov
rcll
lods
mov
or
insb
test
and
cmp
inc
std
and
lret
popf
stos
or
leave
mov
mov
mov
adc
sub
shlb
ja
arpl
sub
repnz
cmp
cmp
fadds
fnstenv
leave
adc
push
or
push
add
mov
sbb
je
cmpsl
sbb
and
std
ret
andb
xchg
inc
pusha
scas
push
xchg
xor
cmp
outsb
xchg
or
cmpsl
and
mov
movsl
and
insb
loopne
inc
shrl
notl
add
mov
and
and
mov
push
mov
cmc
cli
mov
add
shl
addl
dec
es
push
ja
inc
test
jmp
lds
sub
dec
notl
leave
jecxz
test
push
mov
cmp
pusha
xor
fwait
daa
xchg
sbb
push
mov
sti
sbb
push
lcall
push
stos
in
lods
das
jle
add
push
mov
add
or
repz
mov
aaa
add
xchg
je
push
sbb
xchg
stc
iret
push
jo
sbb
cmc
sub
aam
mov
lods
pop
imul
or
mov
loopne
push
and
lahf
xchg
pop
adc
or
and
arpl
or
dec
mov
mov
add
xchg
xlat
pop
les
adc
in
add
sub
cmpb
mov
push
inc
aas
push
fstps
add
ljmp
adc
subl
push
les
out
and
jl
rol
stc
dec
sbb
stos
add
adc
push
mov
push
jo
insl
push
xchg
test
aaa
xor
pop
inc
stos
test
sbb
or
mov
xchg
xchg
outsb
cs
sbb
orb
insb
sub
pop
dec
mov
bound
ds
add
lock
xor
loop
mov
xchg
inc
ficompl
push
jne
fs
scas
hlt
mov
add
push
adc
cmp
xor
stc
cwtl
add
into
lods
cld
loopne
mov
mov
adc
lods
leave
testl
cld
incl
addb
add
sbb
sti
movsb
hlt
mov
add
push
add
push
insb
push
add
scas
and
scas
pushl
fwait
adc
mov
insb
mov
xlat
mov
mov
add
xor
sbb
subb
cmpsb
out
fstp
notb
jbe
test
inc
cmp
or
fstpl
icebp
sbb
mov
scas
andb
push
cmc
push
sub
je
or
push
or
addb
rorl
js
mov
nop
inc
push
xchg
decb
and
jmp
cmp
xchg
push
push
push
sbb
add
ret
out
pop
push
mov
clc
push
insl
cmp
xchg
xchg
ja
or
sbb
dec
pop
add
leave
mov
jle
leave
arpl
sbb
cmpsl
adc
out
shrl
add
int
fwait
ret
pop
psubw
jecxz
dec
ja
pop
faddl
sub
js
in
inc
mov
cld
fnstenv
pushw
mov
js
js
inc
dec
add
push
pop
cmpl
xor
push
sub
cwtl
push
add
rclb
sub
inc
cmp
inc
mov
jmp
add
sarb
pop
inc
adc
ret
dec
jl
jne
mov
mov
jo
pop
cwtl
stos
sbb
add
or
push
or
jne
mov
subb
pop
mov
dec
add
mov
pusha
lods
push
add
jmp
inc
pop
sbb
cmp
cmp
push
sbb
pop
mov
add
cmpsl
mov
ret
sub
pop
fucomp
test
jle
dec
test
xchg
insb
jae
mov
add
jbe
sub
andl
mov
and
fnclex
mov
or
pop
sbbl
fmuls
pusha
fsub
pusha
mov
xchg
je
dec
mov
adc
push
or
scas
push
int3
decb
cmp
pop
inc
add
mov
test
loopne
push
call
faddl
jl
in
mov
inc
add
add
bound
orb
les
stos
jns
jne
pop
xchg
idivb
pop
xor
mov
out
pop
in
repz
addr16
mov
pop
scas
add
push
gs
mov
loopne
sahf
mov
push
dec
add
mov
push
inc
lcall
dec
std
or
push
add
or
sbb
imul
cmp
ss
push
push
mov
loopne
jns
ret
mov
enter
test
jbe
adc
cmpl
pop
cmpsb
loopne
stos
mov
test
outsl
je
push
or
fcmovbe
and
adc
add
mov
mov
pop
mov
lret
inc
cmp
js
and
add
fidivrs
push
adc
mov
fmull
out
mov
mov
nop
xchg
mov
les
mov
std
inc
outsb
sub
pop
pop
sub
aas
test
pushl
insl
fdivr
add
fwait
or
or
ds
push
js
fs
inc
adc
lods
sub
cmp
imul
xchg
dec
mov
add
in
sub
test
sbb
xchg
add
shll
cmp
movsb
or
jae
inc
jmp
pushl
xchg
adcb
add
sbb
add
and
add
cmp
inc
subl
mov
aam
imul
imul
or
aam
test
dec
aam
fadd
mov
lea
das
adc
push
clc
cmpb
mov
push
es
mov
pusha
popa
xchg
or
push
mov
cmp
adc
adc
or
test
xchg
loopne
in
pop
add
mov
out
jge
mov
adc
cmp
push
xor
push
iret
mov
and
and
push
mov
add
outsl
addl
adc
call
mov
jnp
xor
dec
cmp
sub
adc
mov
xchg
ss
icebp
and
pop
or
adc
cwtl
or
test
cmc
jmp
pop
xor
bound
lds
mov
adc
orb
sbb
mov
rolb
sbb
push
adc
and
and
mov
jmp
push
std
sarb
mov
aam
sub
ljmp
pop
mov
mov
mov
cmpsb
sarb
sbb
insb
mov
jnp
sub
repnz
sub
push
push
out
push
push
inc
and
ret
add
jbe
pop
jge
popf
pop
xor
loope
cmp
push
filds
xor
addr16
sbb
or
dec
sarb
and
or
jns
or
mov
mov
xchg
frstor
mov
sbbl
adc
xor
sub
or
push
add
or
and
jnp
dec
dec
imul
inc
push
ljmp
lods
jmp
mov
xchg
shl
loopne
outsl
movsl
inc
sub
xor
and
push
test
dec
out
push
or
in
in
aaa
xchg
dec
movsl
jmp
jmp
rorl
add
cwtl
loopne
fsubl
jbe
popf
cmp
pop
add
lret
fbstp
add
insl
and
pop
stos
movsb
cmp
jo
arpl
push
shrb
ss
adc
pop
adc
shlb
mov
xor
ret
xor
xchg
fadds
adc
idivb
orb
adc
adc
es
jbe
addr16
mov
mov
adc
pop
mov
movsb
pop
sbb
mov
js
shrl
ret
adc
mov
mov
push
leave
adc
gs
adc
sub
xchg
add
inc
dec
push
fwait
xor
dec
jmp
and
push
dec
dec
jb
in
movsl
and
adc
xor
xor
mov
inc
mov
movsl
sti
loopne
lea
jbe
cli
insl
sbb
add
pop
lret
or
and
ss
and
xorb
insb
inc
sbb
and
push
lock
or
jns
xchg
dec
mov
push
and
jl
mov
adc
andl
sbb
shll
loop
adc
jb
xor
pop
mov
push
pop
ret
push
inc
int
loope
rcrl
adc
pusha
dec
leave
sbb
inc
xor
cmp
lret
add
daa
jbe
push
pop
out
fstpt
jmp
insl
cmp
sbb
cmpb
push
inc
mov
adc
add
out
lods
insb
lods
adc
or
out
jle
rcr
std
mov
adc
mov
sbbb
mov
inc
das
jecxz
xor
push
pop
pushl
sub
hlt
jne
mov
or
add
fmul
js
xchg
in
lods
arpl
lea
loopne
mov
or
xor
mov
nop
or
outsb
int3
into
ret
inc
mov
xchg
insb
jmp
or
clc
orl
in
lcall
add
and
loope
sub
fwait
ret
les
push
and
adc
xchg
fiaddl
sub
inc
sub
movsl
xor
dec
add
inc
les
mov
rorl
adc
mov
in
and
rep
out
xor
and
in
dec
enter
mov
sub
shll
or
inc
ret
pop
and
sub
ror
dec
cmpsl
jns
cmp
xchg
clc
test
mull
mov
push
inc
push
pop
into
push
cmc
and
fdivs
js
adc
call
movsl
mov
ret
lock
xor
bound
cmpsl
andl
cmp
xchg
je
test
and
jmp
ja
xor
jne
push
shr
je
pop
push
jmp
pop
shrb
add
sbb
dec
xor
movsb
or
pushf
les
mov
inc
test
dec
cli
add
lock
sub
push
jb
aaa
or
clc
add
pop
jmp
mov
and
mov
xor
es
inc
repnz
ss
sbb
mov
or
in
inc
mov
xchg
pop
push
aaa
popa
pop
cmpsb
push
cld
lcall
loopne
mov
nop
or
push
pop
xchg
pop
xor
mov
mov
test
repnz
pop
gs
add
inc
lahf
neg
pop
sbb
pop
inc
inc
mov
mov
loopne
mov
test
push
push
fwait
cmp
mov
mov
inc
pop
pushl
mov
xor
loopne
lds
adc
inc
add
scas
rcl
push
xchg
pop
jno
or
js
test
jo
nop
enter
xchg
adc
push
or
ja
repz
push
adc
add
jb
mov
fadds
add
push
das
jns
adc
add
data16
jmp
adc
js
cmp
xlat
mov
push
nop
clc
stos
jo
ds
push
jle
sub
hlt
xor
jmp
pop
jno
and
push
sbb
clc
adc
out
inc
mov
adc
and
push
testl
push
adc
pop
clc
jne
loopne
clc
repz
add
fs
cmpl
add
sub
push
dec
test
mov
ljmp
clc
cmp
dec
pusha
inc
pusha
inc
add
lret
pop
jmp
push
mov
jnp
mov
or
bndstx
and
pushf
rcrb
push
push
adcl
hlt
push
jecxz
cld
cmp
dec
push
sbb
inc
xchg
pop
inc
pop
insb
mov
scas
sarb
stc
push
push
mov
xlat
add
inc
jo
imul
leave
rol
out
mov
mov
jmp
call
mov
int3
add
or
push
bound
jae
sbb
add
add
mov
cmp
leave
orl
sbb
add
fisttpll
add
mov
aad
popf
inc
call
les
hlt
mov
sub
clc
loopne
mov
mov
push
push
mov
les
sbb
xchg
stos
cs
xor
xor
sarb
data16
add
cmovo
sbb
cmc
repz
sub
xlat
sbb
sub
inc
push
lock
sub
fsts
leave
aad
scas
cmp
fs
xchg
ss
push
shl
ficompl
pop
push
jge
enter
mov
fwait
push
cmp
cvtpi2ps
mov
shr
push
push
and
stos
test
mov
in
mov
dec
imul
cmp
push
mov
dec
fsub
testb
and
out
popa
inc
loope
push
aad
fmul
pop
pop
push
jp
dec
push
sbb
popa
and
dec
loopne
fdivrs
adc
adc
in
dec
fdecstp
cmp
out
cmp
insl
sbb
mov
adc
leave
dec
cmp
xchg
test
mov
xchg
adc
cmp
lret
repz
mov
lret
sub
or
add
mov
mov
inc
jle
stos
jns
push
ds
inc
mov
fcoml
daa
loop
stc
push
in
add
add
mov
xor
inc
cmp
sbb
inc
mov
bnd
mov
push
loop
hlt
or
cmp
pop
push
in
stos
imul
stc
inc
scas
loope
dec
pop
jl
mov
mov
add
pop
scas
repnz
das
inc
into
adc
and
mov
pop
mov
mov
hlt
fwait
sti
rep
movsw
push
cld
or
xchg
movsb
mov
jg
dec
or
mov
shr
mov
inc
out
outsl
out
inc
mov
adc
movb
decb
hlt
push
add
in
push
flds
mov
insl
sbb
mov
pop
paddsb
fdivrs
add
ss
mov
lods
add
jb
and
dec
mov
paddb
punpcklwd
push
push
sbb
add
sbb
stos
dec
mov
and
mov
les
add
mov
outsl
pop
arpl
test
inc
add
addb
test
or
int
subl
insb
fistl
test
cmp
jl
stc
push
mov
aad
pop
add
pop
lcall
imul
mov
mov
fdiv
ss
mov
adc
cmp
push
add
or
mov
lock
sub
cmp
jno
sbb
jno
adc
inc
push
or
movb
rcrb
jbe
daa
push
add
jb
jb
add
push
pop
mov
or
jmp
or
jmp
mov
jmp
or
por
mov
pop
adc
pop
adc
push
adc
dec
mov
jmp
adc
aas
pop
jmp
mov
jmp
sbb
xor
jmp
sbb
es
jmp
sbb
pop
pop
jmp
mov
jmp
and
or
jmp
and
fildll
movsb
jp
orps
push
add
mov
mov
int3
inc
imul
mov
jg
imul
jns
out
mov
jns
stos
mov
mov
out
leave
into
rcr
fucom
jns
out
out
icebp
idivb
xor
or
repz
repz
push
and
negb
into
sub
push
pop
or
and
idiv
jg
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
adc
mov
mov
inc
or
addb
push
imul
jmp
xchg
inc
cmp
mov
rol
xor
pop
mov
mov
push
in
sbb
hlt
lock
push
jmp
add
hlt
xor
mov
inc
mov
cmp
in
xor
dec
sbb
and
lcall
mov
mov
jo
dec
cmp
lcall
dec
inc
in
into
adc
add
xchg
and
adc
ss
test
sti
add
cld
jns
add
push
inc
fmulp
test
test
out
imul
xchg
and
enter
jne
xor
inc
movsb
or
stc
inc
cmp
push
mov
loope
pop
mov
mov
xor
mov
add
xchg
sub
adc
add
bt
add
subb
sub
adc
daa
ja
shlb
inc
mov
mov
pop
pop
cmp
test
ja
pop
sub
fs
jbe
dec
fidivs
loop
or
fdivr
lock
stos
nop
cltd
xchg
mov
mov
sbb
call
and
or
jg
add
jg
fiaddl
pop
pop
dec
push
xor
ds
pusha
insl
movsb
push
xor
mov
rcl
sbbl
outsl
cmpsl
in
add
movsb
push
jne
outsl
add
push
push
push
pop
loopne
and
xchg
nop
fwait
jne
mov
mov
mov
pop
scas
add
sbb
out
rcr
adc
or
jmp
inc
adc
mov
movsl
fcoms
inc
lods
test
js
es
loopne
sbb
ffree
sbb
scas
pop
mov
aaa
sub
shrd
inc
insb
xor
nop
inc
xor
rcrb
jmp
shlb
clc
mov
and
cld
je
or
enter
xchg
lock
sbb
push
push
push
sub
adcb
dec
inc
rorl
clc
adc
cmp
sub
or
add
xchg
adc
sbb
cmp
push
or
test
sbb
dec
add
popa
imul
pusha
imul
pusha
test
pop
jp
addr16
subb
enter
mov
push
scas
push
popl
orl
mov
pop
cmp
in
nop
push
repz
sub
push
clc
jge
and
or
int
xchg
incb
fadd
xor
loop
add
mov
cmp
sub
mov
add
rcll
shrb
sub
pop
pop
xor
mov
in
test
cli
xor
mov
fwait
jle
gs
andl
or
sub
es
cli
and
inc
add
enter
cltd
push
and
push
enter
xor
sarl
sbb
in
loopne
xor
ror
enter
add
cmp
das
pop
daa
lea
cmp
jb
sbb
andl
inc
xor
jbe
pop
in
add
loopne
inc
in
push
movsl
ds
aas
rol
cmp
jne
test
ljmp
fisubl
add
and
or
movsl
gs
jmp
add
xlat
pop
popf
inc
les
inc
testb
inc
mov
imul
inc
xchg
xor
mov
loop
je
nop
push
adc
jmp
loopne
cmp
and
jo
rclb
dec
push
and
inc
xor
iret
enter
loopne
leave
xchg
or
shl
and
testl
enter
add
or
imul
xor
and
add
sti
ret
and
sbb
mov
ret
inc
mov
xlat
mov
les
jp
cmpxchg
fwait
xchg
pop
push
push
push
or
pop
push
push
or
sub
mov
popa
sbbl
and
mov
stos
pushl
mov
push
xor
sub
dec
sbb
adc
pop
popa
insb
and
frstor
pushf
mov
and
insl
lahf
pop
ret
dec
xor
inc
adc
roll
add
or
add
in
sbb
sbb
pop
add
cld
aam
pop
in
jo,pn
mov
jle
cmp
and
xchg
add
mov
xorl
push
add
faddl
pop
stos
inc
mov
rclb
add
or
mov
add
dec
cwtl
fdivrl
rcrl
pop
add
push
xor
pusha
stc
loopne
sbb
iret
aad
in
mov
fsubs
fcmovnu
add
add
fisttpll
sub
in
add
pusha
dec
cmp
fldenv
cmp
adcl
inc
add
dec
in
leave
and
add
jp
jg
outsb
lock
inc
int3
or
or
jle
scas
je
cmpsl
pop
cwtl
jb
dec
mov
fs
bound
outsl
je
sarb
in
jmp
lret
adc
cmp
sahf
addl
xor
xchg
add
xor
popa
push
fadds
mov
adc
movsl
push
jb
add
mov
in
dec
push
sbb
inc
ljmp
lret
sbb
inc
loope
lock
jle
sub
cmp
sub
pop
jne
cmp
or
je
fadds
sti
or
mov
rcl
inc
scas
push
lcall
shlb
adcl
sbb
push
in
or
je
mov
mov
push
push
or
jle
inc
lock
cmp
mov
sub
inc
cmp
arpl
mov
test
dec
inc
lock
push
fstpt
or
add
arpl
rcll
push
shr
mov
adc
sbb
add
in
sub
sbb
sbb
pop
sub
add
loop
mov
push
rorb
push
and
xorl
test
sbb
in
jno
pushf
and
fwait
popa
or
sub
inc
bound
inc
ljmp
jp
push
sub
loop
inc
popf
add
jmp
dec
or
rolb
sbb
xchg
inc
jo
test
cmp
sbb
sub
or
enter
and
push
call
add
xchg
and
push
in
sub
pop
adc
movb
loope
or
adc
xchg
mov
cmp
adc
add
pop
movb
add
add
inc
dec
fdivrs
std
fwait
or
add
idivl
mov
insb
or
sub
jmp
sub
pop
mov
js
xor
jp
jle
sub
push
js
jle
in
xchg
sbb
pop
movsb
xchg
rcrl
or
mov
inc
loopne
push
jns
sub
movsbl
mov
inc
loopne
push
pop
icebp
jbe
xor
lahf
xchg
mov
enter
enter
inc
push
xchg
lea
dec
push
push
or
mov
movsb
jle
lahf
add
or
ds
inc
add
aaa
mov
cmpsb
in
sbb
insb
inc
jo
je
jbe
je
push
aas
pusha
adc
and
inc
test
enter
call
push
mov
add
out
inc
push
mov
fidivl
outsb
lods
fbld
pop
xchg
outsb
xchg
outsb
mov
mov
xchg
imul
je
and
aam
loopne
jo
pop
add
xchg
sbb
mov
es
icebp
add
setge
jge
add
stc
lea
push
rcrb
mov
test
test
and
xchg
je
pop
mov
and
jne
and
incb
incl
cmp
jl
sub
lea
cmp
mov
dec
jno
orl
sbb
cmp
or
sbbl
fstpt
test
mull
das
xchg
jl
cld
jmp
lods
and
and
cmp
add
pop
pop
mov
sti
cmc
xchg
pushf
push
pop
add
int3
jmp
out
push
jbe
lahf
loope
cmp
sahf
xchg
mov
mov
mov
sar
cmp
je
xor
xchg
sbb
inc
imul
daa
adc
jmp
rcrl
sbbl
sbb
xor
push
sbb
sbbl
pop
das
sub
sbb
js
roll
mov
sbb
sub
jmp
fwait
mov
imul
sub
insl
leave
mov
push
pop
ret
cmpsb
call
add
addl
cli
addb
lret
adc
movsb
into
es
lea
push
fistpl
paddw
fisttpl
daa
call
cli
xor
inc
add
cmp
sub
inc
xchg
ljmp
test
js
pop
adc
add
inc
add
je
cmp
jne
push
inc
pop
inc
push
inc
or
mov
push
jo
scas
inc
dec
jp
push
push
push
sub
xor
hlt
daa
add
add
clc
mov
loop
add
nop
mov
test
mov
push
addb
or
aam
adc
cli
pop
ja
adc
xchg
xor
or
adc
call
sbb
pusha
sbb
aam
jmp
xchg
lret
and
lea
or
pop
hlt
sub
and
scas
loope
xor
mov
cmp
lods
adc
xor
ds
jge
outsl
adc
sarl
lret
arpl
call
clc
xor
enter
add
mov
je
pop
es
das
add
dec
aas
jne
push
xchg
jge
test
insb
dec
jmp
add
sbb
test
mov
sbb
mov
and
dec
xchg
inc
movb
push
in
popa
ret
xchg
mov
repz
sbb
cmp
stos
push
push
imul
mov
mov
jne
into
push
into
push
pop
xor
mov
pop
sbb
jmp
sbb
add
pusha
or
pop
js
xchg
or
or
jne
lds
rcrb
fldl
or
js
rorl
popa
test
lock
jmp
loop
xchg
cmp
ret
ret
push
xor
push
or
add
sbb
and
lea
mov
xor
jge
add
mov
xchg
int
xlat
subl
jge
pop
outsl
testl
bound
nop
rcrb
repz
xlat
inc
and
loope
pop
sbb
mov
or
pop
sbb
shll
fisubrs
pop
xor
sub
or
add
pop
das
and
ret
mov
dec
notl
test
xor
jmp
cli
rolb
sbb
mov
movzbl
nop
cmp
dec
add
sbb
ret
mov
jge
imul
xchg
jmp
lods
cmp
cmp
clc
enter
cwtl
and
xor
cmp
loopne
or
lret
jmp
orl
mov
xor
test
add
push
cmp
push
dec
mov
test
xor
jbe
shll
aam
jae
insl
dec
cltd
stos
jne
mov
in
cmp
out
movsl
push
fs
insb
cmp
lock
das
pusha
xor
ljmp
shrb
add
lcall
mov
ret
push
inc
sub
mov
or
push
mov
outsb
push
fisttpl
jne
add
fists
jne
adc
jmp
jp
pop
jle
lret
lock
and
inc
loopne
or
icebp
pop
inc
or
dec
inc
add
pop
pop
aaa
jle
aaa
stc
adc
mov
add
in
ljmp
jmp
inc
add
test
daa
xor
fwait
lds
adc
sbb
mov
pop
pop
pusha
imul
adc
cmp
xor
xchg
xor
push
mov
xor
inc
xor
inc
dec
fdivp
mov
push
sbb
and
cmp
mov
dec
mov
pop
sbb
and
xchg
jbe
mov
in
push
test
inc
push
fidivl
or
xchg
pop
faddp
inc
sbb
add
push
adc
fadds
sbb
xlat
pop
sub
lock
push
inc
cmpsl
xchg
imull
shrb
jl
push
xchg
sbb
call
mov
test
repz
out
xchg
imul
lods
aad
or
mov
out
mov
mov
mov
adc
adc
fldz
fcomp
fnstsw
add
fcoml
ret
push
sbb
inc
cmc
add
pop
faddp
je
push
insb
push
mov
add
imul
movsb
test
xor
cli
and
xor
jo
lock
push
test
lock
adc
cmp
mov
hlt
and
push
xor
test
mov
fstpl
dec
and
mov
in
cli
mov
push
subl
sub
xchg
jb
fldl
ret
cmp
fistpl
outsb
mov
inc
daa
rorb
in
clc
test
and
sbb
call
popf
sub
xchg
xchg
jns
adc
nop
sbbb
sbb
mov
sti
xor
imul
cmp
add
lret
rcrb
pop
ret
xor
adc
mov
cmpsl
jns
in
loop
fimuls
enter
jle
sub
loopne
cmp
lahf
add
sbb
pop
mov
or
and
push
hlt
mov
cmp
loope
stc
scas
mov
xchg
dec
outsb
dec
stos
push
aaa
add
int
add
ror
shlb
loop
shll
lds
rclb
pushf
or
mov
lods
clc
mov
rolb
mov
dec
add
ss
mov
push
mov
test
adc
lods
jne
sbb
or
icebp
pop
rclb
jo
sub
push
or
mov
mov
pop
push
cmp
or
adc
ret
push
mov
mov
inc
mov
push
rcr
sub
and
sti
push
cmpsb
fcoml
ss
add
or
aaa
fcmovb
bound
jb
adc
je
cmp
jo
mov
pop
inc
cli
mov
cmp
jb
push
or
and
pop
jb
adc
adc
repz
test
mov
dec
js
mov
push
dec
pop
sbb
xchg
add
adc
mov
fmuls
dec
or
and
pop
sub
mov
decl
xchg
and
mov
testb
les
inc
int
push
das
sbb
iret
popa
clc
and
icebp
sbb
add
jns
sbb
je
in
or
inc
add
les
inc
aad
pop
inc
jle
test
outsb
cltd
dec
in
orb
and
or
dec
pop
cmpsl
push
jnp
xor
shrb
loopne
sbb
add
dec
enter
sub
xchg
dec
or
and
add
sbb
xor
sub
cli
jmp
adc
push
dec
dec
cmp
pop
push
movsb
jl
js
jge
cmp
jne
js
jo
je
mov
mov
add
movsl
cmpsb
lods
adc
or
cmp
sahf
outsb
sbb
sub
jns
test
jne
insb
int3
add
popa
call
cmp
shl
mov
mov
push
fdivr
cs
test
je
xor
push
jmp
add
inc
fwait
xor
push
js
dec
cmp
fmuls
bound
rolb
out
scas
in
mov
xor
rcrb
out
sarb
je
rcl
aam
test
aam
and
rolb
inc
sbb
test
arpl
mov
sti
repz
or
xchg
fdivrl
jb
stos
jbe
test
jg
and
add
push
and
push
dec
jmp
insl
sarb
push
push
pop
dec
sub
mov
add
cwtl
sbb
gs
mov
cmp
push
push
push
jp
sub
sub
mov
and
inc
and
rcrb
and
je
jbe
daa
jp
adc
add
enter
cmpsl
inc
in
loopne
test
fmull
adc
mov
shlb
push
push
pop
dec
loop
push
stos
out
add
mov
sbb
jb
fs
call
or
push
imul
hlt
inc
or
add
jb
push
arpl
rorl
mov
sti
subl
mov
lret
pop
fidivs
shrl
and
mov
jecxz
mov
xchg
jp
mov
push
jno
mov
inc
push
mov
mov
inc
mov
cli
push
call
lcall
inc
inc
or
xchg
xchg
lock
sbb
xchg
stos
daa
shlb
dec
imul
fcomps
adcl
add
mov
xor
gs
in
adc
push
in
add
mov
out
push
por
xchg
pusha
shl
jae
movsb
push
lahf
stos
pop
jb
and
int
jbe
and
sbbb
add
dec
lea
sbb
inc
lock
add
xchg
pop
and
dec
inc
cmpsl
add
dec
fidivl
jle
push
add
sbb
inc
mov
mov
mov
test
movsl
call
enter
sub
aam
aam
push
or
inc
nop
xchg
faddl
test
nop
movsb
out
xlat
xchg
dec
pop
cmc
sub
stos
or
xor
call
pop
in
loop
and
adc
call
jno
xchg
sarb
or
xchg
ss
xor
cmp
sbb
lock
and
adcl
mov
adc
or
fdivl
sub
pop
dec
push
sti
subb
mov
fmuls
movsb
imul
outsb
stos
pop
add
dec
hlt
cltd
daa
nop
xor
dec
mov
xchg
jge
dec
mov
add
sub
nop
and
out
jne
iret
std
jmp
push
in
shrl
insb
mov
in
movsl
in
sub
add
xor
push
iret
add
inc
sub
pop
inc
into
ret
push
into
enter
push
jl
mov
or
inc
insb
shrb
add
xchg
xchg
sbb
or
shll
jle
xor
std
shll
aam
shlb
mov
pop
adc
pop
add
lds
int3
xor
pop
xchg
mov
fcomps
sbb
scas
pop
push
or
lcall
pop
mov
add
add
testb
loop
xor
andl
push
mov
push
push
addr16
pop
jo
pop
push
adc
or
jae
or
ja
mov
mov
rclb
inc
mulb
jno
push
dec
adc
add
jae
call
fisubrs
test
pop
notl
test
mov
xchg
icebp
roll
dec
add
sbbb
push
int
hlt
inc
cmpsl
add
pop
shlb
cmp
mov
lcall
jbe
rolb
pushl
add
push
pop
int3
fsub
mov
inc
sahf
mov
in
add
push
add
in
xchg
addb
je
xor
sub
call
xor
jle
out
adc
jmp
or
push
lahf
xchg
add
nop
ds
cmp
xor
or
lods
dec
mov
imul
push
or
fcoms
mov
popf
aam
push
push
jp
in
or
stos
loopne
faddl
or
xor
dec
adc
sbb
incw
out
push
sbb
mov
es
iret
mov
shrb
jl
int3
dec
push
sbb
lret
adc
stc
xor
mov
push
rcrb
push
mov
add
das
insl
shll
mov
shr
or
xlat
add
lret
add
pusha
pop
hlt
or
test
or
adc
sbb
mov
icebp
mov
hlt
mov
aam
sub
mov
jbe
or
dec
adc
jno
or
insl
adc
pusha
lods
push
or
in
fstl
test
adc
sarb
and
xchg
push
cmp
push
jmp
pop
jae
add
sub
test
aam
or
inc
outsl
insb
mov
and
and
mov
outsl
sbb
and
movsb
pop
inc
mov
add
mov
add
mov
aas
test
iret
sub
fmuls
les
inc
dec
int3
xchg
xor
pop
or
push
xchg
loopne
push
das
gs
jmp
idivb
test
xchg
inc
fists
adc
xchg
sub
fsubl
rep
std
dec
aam
leave
icebp
jmp
cmp
sub
lock
push
xor
movsl
xlat
pop
fdivp
xchg
xor
sbb
inc
inc
xor
push
outsb
push
pop
pop
add
cld
pop
push
xor
es
add
inc
or
in
adc
arpl
sub
push
enter
sbb
mov
push
mov
pop
scas
push
and
mov
or
cmp
and
test
and
andb
dec
mov
in
push
rol
cwtl
xchg
jne
or
out
pushl
hlt
inc
test
sbb
jne
adc
cmpsl
pusha
mov
dec
dec
sub
add
xchg
imul
mov
lea
sti
and
cmp
test
sub
pop
add
inc
pop
xchg
jb
inc
inc
xchg
mov
dec
or
adc
sub
daa
push
je
mov
mov
dec
and
sbb
es
jnp
notl
arpl
push
dec
dec
neg
ss
dec
jp
int3
mov
clc
notl
xor
mov
test
mov
daa
lock
lcall
sbb
cmpsl
cmp
je
mov
hlt
xchg
lea
or
add
sub
push
pop
aam
call
sub
mov
and
inc
push
fistpl
or
dec
and
hlt
xchg
jo
rclb
loop
cmp
push
mov
movzbl
fbstp
push
dec
mov
ss
lds
lods
cmp
xor
and
bound
push
jl
xchg
sub
cmp
test
mov
lods
adc
daa
add
jns
addr16
test
movsb
jne
stos
jne
cmc
fbstp
and
mov
aas
or
icebp
mov
outsb
lods
add
push
je
and
mov
push
cmp
mov
add
adc
fcmovnb
xor
addr16
xchg
pop
mov
cltd
mov
sahf
pop
sub
push
ljmp
shlb
adcl
fisubl
jecxz
xchg
sbbb
test
xabort
jl
push
mov
cs
int3
lret
add
gs
jge
out
hlt
rorb
push
aaa
sbb
push
test
and
fucomp
sub
or
je
ds
lahf
enter
nop
sub
jne
mov
pop
mov
sti
add
mov
andb
daa
add
push
xor
mov
push
mov
adc
loope
repnz
jo
das
stos
repnz
cmpb
lea
push
cmp
test
mov
cli
push
addb
jl
and
add
xchg
jno
push
xchg
fxam
bound
jmp
sti
fwait
icebp
or
nop
sub
pop
inc
jbe
xor
mov
cs
pushf
inc
push
nop
popa
aas
xchg
insb
subb
mov
stc
or
and
arpl
mov
test
jmp
mov
lea
pushf
mov
cmc
mov
mov
jae
and
push
xchg
xchg
push
mov
fwait
sti
cmp
decl
and
loop
divl
mov
incl
sub
pushl
test
or
lods
xchg
or
pop
test
fsts
sbb
push
xor
sbb
add
and
loop
rorb
fsubs
jl
adc
cmp
dec
xchg
enter
mov
or
push
lods
mov
sbb
insb
aas
mov
cmp
or
cmpsl
in
sub
dec
js
aam
ja
dec
imul
jno
add
pop
or
mov
fs
rcrb
pop
mov
fldl
pop
cld
cld
or
rep
mov
sti
or
lcall
adc
pop
inc
inc
insb
inc
bound
adc
loope
mov
or
lret
inc
mov
inc
fdivs
or
jl
push
stos
xchg
outsb
stos
ret
fsubp
add
xchg
pop
jns
adc
xor
inc
cmp
xor
inc
out
cmp
adc
push
mov
mov
mov
xor
mov
push
adc
cmpsl
insl
push
and
je
fcomps
std
inc
pop
cmp
jg
pop
clc
sbb
adc
loop
sbb
mov
push
sbb
mov
or
adc
movb
sub
imul
dec
mov
inc
mov
lods
dec
test
or
sbb
pop
cwtl
mov
stos
movsl
pop
pop
in
pop
mov
mov
and
jl
push
pop
dec
mov
cmc
xor
mov
push
outsl
lods
insl
or
sub
jb
pop
xchg
jb
xor
leave
sub
jno
mov
xor
scas
mov
pop
dec
sar
mov
repnz
cmp
les
mov
mov
aam
and
adc
out
push
or
inc
or
clc
movsl
pop
fs
lds
pop
or
xchg
jg
xor
and
push
inc
sub
cs
push
jo
mov
sbb
push
mov
mov
sbb
xchg
adc
cmpsb
loopne
in
and
sub
and
rorl
jno
xor
or
mov
jns
or
or
mov
xor
es
push
popa
add
test
in
in
mov
dec
iret
cli
or
mov
loop
mov
jo
xchg
add
add
sarb
outsl
cmpsl
push
cmp
cmp
in
jbe
sti
call
xchg
call
test
add
int3
adc
ror
dec
push
or
aad
test
sub
add
xchg
or
test
jo
xor
inc
mov
mov
stc
sub
adc
push
jnp
or
aaa
sbb
dec
pop
xor
sbb
mov
mov
cmp
les
lret
push
nop
jne
ljmp
dec
dec
mov
addl
ret
lahf
adc
insl
and
push
dec
movsb
pop
sti
mov
sub
jmp
sub
or
xor
sbb
leave
fs
cmp
push
add
or
lock
or
je
push
mov
dec
sete
rorb
or
enter
push
add
jmp
les
inc
enter
or
test
jno
adc
pop
out
imul
xor
movsl
sbb
and
inc
cmp
xlat
push
or
xchg
shlb
pop
mov
hlt
ds
negb
mov
insl
or
xchg
mov
push
mov
out
es
mov
or
inc
aam
xor
iret
inc
cmp
mov
rorl
imul
cmp
or
push
add
rorl
scas
pop
adc
nop
mov
mov
dec
ret
pop
adc
xor
mov
test
ljmp
fisttpll
and
outsb
rep
or
push
mov
sarb
sarb
dec
pop
ret
push
or
leave
std
decb
pop
movsl
push
cmp
jne
inc
inc
jmp
inc
pop
in
repnz
sub
pop
aas
push
push
add
inc
cli
xchg
gs
push
mov
add
dec
jmp
test
inc
dec
repnz
iret
or
sub
or
mov
aam
xor
scas
arpl
in
push
js
push
test
es
in
dec
add
add
je
pop
or
dec
popa
sbb
pop
and
xor
bound
jae
lock
sbb
pop
pop
in
mov
and
sbb
in
xchg
fwait
xchg
cs
sub
movsb
jbe
dec
cmp
fcoms
xor
mov
test
xchg
inc
insb
orb
cli
push
pop
push
inc
mov
pusha
dec
xlat
inc
jne
push
lods
dec
mov
dec
pop
dec
fdivl
call
push
incb
and
add
aad
sub
push
mov
sub
cli
and
dec
sub
sbb
enter
add
fdivs
and
sbb
adc
jo
ror
add
mov
nop
sarl
cmp
test
push
mov
clc
or
test
push
ret
cli
int
pop
jle
outsl
outsl
mov
ljmp
cs
pop
inc
das
pop
jb
mov
jae
and
sar
idivl
jecxz
xor
push
mov
push
push
pop
imull
prefetch
xor
and
ds
push
push
sub
enter
mov
into
xchg
mov
dec
sbb
ret
outsl
and
sub
or
and
lods
cmpb
mov
shlb
loopne
mov
add
inc
cmp
xchg
cmpsb
enter
rolb
add
xchg
mov
das
add
jo
imul
xchg
jne
jo
and
cmp
test
mov
dec
pop
xor
pop
inc
cmp
fnstcw
ss
xorl
mov
pop
or
pop
cltd
aad
or
mov
xor
xchg
popa
mov
sub
cmc
jae
iret
movsb
mov
xchg
sbb
sub
mov
popa
adc
or
cmpsb
push
jne
ja
imul
jle
fdivs
dec
pop
cmp
rcr
enter
jns
daa
add
mov
push
sbb
mov
int3
loope
hlt
testb
mov
or
fiaddl
and
fsubs
push
adc
adc
push
dec
les
push
and
test
fcmovnbe
mov
push
mov
or
push
insb
xlat
and
rcl
jle
fdiv
jns
int3
sbb
adc
fisttpll
aad
and
cli
std
sub
pop
movzbl
outsb
add
fildl
je
rolb
inc
add
inc
cmp
xchg
movsl
cmp
mov
sub
test
push
add
ret
ljmp
xor
shr
xor
imul
jb
mov
inc
or
sar
lea
test
loope
mov
ret
pop
incl
pop
shr
cmp
jbe
add
jmp
add
mov
je
sub
pop
and
mov
enter
out
adc
test
push
add
mov
xchg
lock
adc
pop
pop
dec
pop
dec
xchg
and
dec
and
fadds
cld
mov
mov
ret
fimull
aad
cli
push
fsubrl
in
pop
xor
aaa
mov
sub
int
inc
test
out
inc
imul
jb
add
cmpsb
push
pop
scas
pop
adc
jne
arpl
fiadds
or
jb
sbbb
mov
sub
das
xor
in
push
dec
repz
add
xchg
inc
nop
or
xchg
sbb
insl
bound
adc
sbb
push
pop
les
daa
jecxz
inc
push
lcall
cmp
call
pop
mov
jg
sub
pop
mov
adc
xor
xchg
xchg
add
lods
out
pop
test
push
push
pop
movsb
inc
dec
fwait
repnz
or
push
mov
bound
cmp
rcl
lock
pop
arpl
or
orl
ret
and
push
add
imul
fildl
mov
es
sbb
sbb
add
enter
sub
popf
jecxz
add
popf
lret
and
xchg
push
push
add
jns
and
push
js
jmp
inc
and
or
cmp
mov
sub
add
ret
test
mov
dec
sub
add
loop
mov
or
mov
inc
mov
rcll
pop
dec
add
test
push
push
push
outsl
add
mov
inc
push
push
test
aaa
mov
push
or
or
dec
test
mov
mov
test
mov
jno
or
lret
sbb
out
ret
outsb
push
call
mov
stos
push
adc
and
testb
pop
cmp
sub
repz
sub
push
xor
insl
mov
out
jns
or
push
push
xchg
xorl
movups
ret
mov
xchg
fadds
or
cmp
adc
inc
and
int
adc
xchg
imul
in
popf
push
inc
pop
or
mov
outsb
mov
jmp
and
movsb
adc
dec
aad
sub
mov
sub
sub
push
fsubs
fiaddl
adc
pop
jne
dec
enter
adc
sbb
cmp
cmp
xor
cmp
or
add
add
shll
sbb
dec
sahf
cmp
fs
and
push
push
dec
enter
add
add
jns
jo
dec
mov
bound
in
daa
push
cmp
inc
sub
dec
push
add
and
or
adc
and
mov
pop
mov
fistpl
pop
das
rclb
push
cmp
push
sarb
dec
mov
cmp
pop
movsb
mov
aaa
sarb
in
or
mov
mov
jnp
xor
xor
test
sub
jne
jns
xchg
mov
cld
or
daa
popa
in
repnz
sub
cwtl
sub
std
push
mov
lret
sti
pop
push
push
mov
mov
sbb
popa
xchg
test
stos
insl
add
leave
in
dec
xor
mov
lret
fcmovnb
jmp
sarb
rorb
jbe
clc
push
mov
dec
xchg
or
push
mov
xor
imul
int3
hlt
jge
add
dec
and
add
js
pop
sub
pop
add
mov
mov
les
jo
lods
push
add
std
or
cmp
jns
je
dec
pop
inc
or
adc
dec
adc
test
leave
cltd
and
adc
stos
dec
arpl
add
test
jg
dec
inc
fisubrs
add
sub
sub
out
stos
push
pop
in
pop
mov
in
adcb
and
stos
lods
xor
inc
repnz
push
dec
adc
dec
add
xchg
cs
sbb
dec
lods
rclb
into
mov
adc
call
ss
and
add
sbb
push
into
fisubl
and
roll
xchg
cld
pop
mov
aaa
ret
sub
outsl
adc
mov
mov
and
ret
mov
fmull
sub
xchg
ror
xchg
scas
and
jno
mov
inc
and
and
lock
add
rclb
test
dec
inc
iret
movsb
outsl
inc
mov
mov
cmp
pop
insl
add
stos
shl
or
pop
inc
xor
data16
clc
jns
ljmp
sub
xchg
or
xchg
push
adc
lahf
cmp
lds
ret
adc
loop
adc
xor
mov
in
mov
test
js
or
dec
sbb
pop
add
xchg
jb
roll
in
rolb
seta
mov
cmp
add
imul
mov
scas
inc
mov
inc
fwait
pop
stos
cli
sub
js
mov
pop
lods
mov
sbb
push
or
and
sbb
cli
in
sub
out
sub
jmp
inc
shlb
cmp
nop
rorb
add
js
sbb
sub
call
mov
lea
add
arpl
adc
fcoms
aas
sbb
xor
cmp
out
nop
pop
insl
or
push
inc
and
push
lret
fstpl
pop
iret
inc
jmp
call
nop
call
jo
and
sub
dec
fcoms
fwait
in
pop
add
xchg
pop
hlt
loope
xor
or
jp
xor
inc
xchg
movsl
ja
ret
adc
sbbb
movsl
xchg
mov
inc
fistl
scas
push
addr16
in
xchg
adc
xor
daa
add
loopne
int3
in
std
or
add
mov
or
mov
js
push
insb
inc
rclb
and
aad
xlat
sbb
inc
cmp
adc
xchg
hlt
adc
push
push
ljmp
orl
sbb
mov
and
jbe
mov
jle
push
add
push
in
mov
and
into
sub
inc
lea
push
sub
mov
or
push
add
and
and
addr16
and
out
aad
std
dec
jmp
hlt
das
insb
loope
add
and
add
scas
xor
dec
mov
shl
rolb
cli
sub
mov
imull
cmpl
sub
dec
enter
xor
in
movsb
repnz
xor
movsb
xor
pop
stc
nop
push
les
pop
and
int3
shrb
and
sbb
xorl
or
mov
jl
inc
xchg
xchg
adc
lcall
jl
gs
nop
loop
pop
fs
fs
mov
sti
clc
and
push
bound
and
icebp
add
arpl
mov
nop
push
inc
imul
or
pop
jl
inc
adc
adc
mov
in
add
movb
cld
push
and
mov
test
pop
dec
scas
add
xor
into
or
sub
and
icebp
sub
push
insb
push
and
mov
push
nop
pusha
insl
fsubrl
add
or
das
or
mov
test
add
test
pop
shl
mov
roll
add
mov
adc
jp
push
push
sbb
loopne
xor
jns
xorb
cld
xchg
push
or
pop
jae
add
scas
adc
push
and
sbb
aad
jo
sahf
add
sbb
cmc
rol
test
pop
add
insb
xor
pop
inc
mov
inc
pop
push
pushf
cmc
cmp
and
push
insl
test
push
cltd
jmp
inc
xlat
pop
cmp
cli
jcxz
mov
sub
inc
cwtl
lock
gs
push
rcll
mov
dec
movl
and
or
inc
adc
stos
jo
dec
adc
adc
aam
add
gs
fistpll
cltd
lret
sbb
adc
and
pop
inc
push
bound
fidivrs
mov
rcl
push
aad
mov
arpl
xchg
pop
push
outsl
push
push
insb
aam
cmpsb
jo
loop
aas
mov
lods
add
xor
inc
push
cld
adc
jbe
push
in
push
std
push
inc
nop
mov
mov
adc
subb
out
adc
pop
push
mov
lret
push
cmpb
ja
test
in
inc
and
and
mov
adc
and
xor
mov
icebp
je
push
outsl
mov
rclb
push
or
sbb
adc
std
add
mov
xchg
aam
jmp
bound
in
daa
js
mov
lcall
daa
adc
leave
mov
push
add
pop
pop
push
mov
sbb
mov
clc
mov
mov
push
xor
in
add
adc
rorl
pop
pop
int3
push
stc
pusha
or
and
pusha
or
testl
mov
punpckhdq
out
dec
insb
push
int
jle
je
mov
push
add
xor
xor
pop
enter
add
mov
inc
imul
inc
add
adc
data16
idivl
mov
xor
pop
int3
call
dec
insb
dec
mov
jg
pop
sahf
test
call
add
mov
adc
mov
lods
mov
lods
push
push
push
lock
and
push
inc
mov
xchg
popa
test
sarb
lods
sub
lods
xor
inc
int3
sub
push
into
jp
rclb
out
cmp
xchg
push
lea
push
pop
or
and
lea
sub
inc
xchg
mov
sub
jno
add
lock
shl
push
loopne
and
repnz
sbb
sbb
push
loopne
sbb
pop
aad
push
fistpl
fwait
jno
inc
int
in
pop
adc
sarb
jl
in
mov
lds
movsb
lock
icebp
ret
fwait
lods
sbb
rolb
dec
cmc
ret
mov
imul
push
xchg
mov
jge
mov
and
cli
xchg
into
cmpsb
cltd
add
enter
je
cwtl
test
mov
inc
fadds
cld
mov
cmp
add
mov
or
inc
es
cmp
add
in
test
popa
add
xor
and
daa
loope
icebp
inc
insl
dec
fldt
jo
pop
adc
add
pushl
or
xor
mov
rol
mov
ror
call
shr
xor
sub
jnp
xor
shr
xor
add
dec
adc
incb
js
add
mov
mov
popf
out
cmp
ret
jae
or
and
not
and
xor
add
add
aam
sub
jge
and
cmp
jl
sub
ljmp
add
mov
jge
xor
and
and
xchg
push
aam
dec
fiadds
sbb
xor
dec
gs
repnz
and
fmull
pop
push
fisttps
fidivl
and
not
ret
rcl
add
add
pop
ss
add
call
fsubr
rcl
or
and
call
sbb
mov
ljmp
fcompl
rol
out
add
push
test
fcomp
loopne
int
movsb
in
loopne
in
sub
dec
rcl
call
inc
inc
in
lahf
push
cmp
popa
orl
data16
bound
pop
mov
sub
lock
mov
adcb
xlat
xor
cltd
call
lcall
and
xchg
add
in
loopne
add
leave
loopne
xor
dec
cmp
aam
bswap
rorl
xor
hlt
add
inc
aam
push
in
push
xor
and
and
aad
cmpsl
jge
iret
or
xor
add
add
inc
add
inc
mov
or
mov
push
or
jo
ret
push
inc
inc
scas
shlb
adc
dec
pusha
or
lcall
inc
adc
push
pop
jg
icebp
loop
mov
add
add
fs
fadds
pop
jbe
call
aas
lcall
push
clc
jp
push
push
stc
inc
push
and
mov
xor
add
inc
fs
call
in
shl
fsub
xchg
lret
inc
mov
pop
mov
jo
cli
dec
test
je
adcb
xor
aaa
cmp
or
data16
pop
jae
in
hlt
inc
shr
rolb
loopne
xor
inc
aaa
cli
stos
lret
xor
xor
shlb
add
push
sbb
dec
inc
test
loopne
repnz
jb
clc
lahf
jo
add
shlb
inc
push
mov
xor
sahf
dec
cld
rcrb
dec
push
dec
adc
add
adcb
in
inc
push
xor
es
lcall
adc
add
push
or
daa
xchg
cmp
or
pop
adc
test
add
or
push
or
inc
enter
inc
pop
xor
and
pop
fs
pusha
xchg
push
push
adcl
mov
xchg
movsl
mov
inc
in
rorb
sbbl
test
pushf
loop
in
addl
inc
fs
dec
movsb
shlb
test
addr16
mov
adc
lock
dec
negb
aad
sub
or
or
gs
mov
dec
pop
loopne
or
and
add
and
adc
sub
lret
dec
adc
mov
or
fstpl
sub
mov
int3
add
mov
jb
icebp
js
aaa
sub
pop
push
mov
inc
push
sahf
lods
jg
adc
sub
rol
out
in
sub
add
rorb
or
or
mov
dec
clc
adc
mov
popf
les
lds
or
sub
push
xor
push
lock
lea
jmp
lea
push
sub
dec
repz
jecxz
mov
sub
fimull
pop
mov
cld
adc
mov
aam
mov
or
cmp
jbe
or
mov
push
call
sti
dec
aam
lea
sub
jae
push
pop
movsb
and
xchg
sub
sub
out
cmc
cmp
sbb
in
testb
test
dec
pusha
outsl
pop
loopne
cmpsb
mov
mov
xchg
or
xchg
ljmp
adc
mov
sbb
pop
cwtl
inc
xchg
push
push
enter
test
mov
jno
dec
dec
sbb
ja
adc
lret
inc
inc
add
pushf
shll
push
add
in
jl
mov
mov
imul
mov
pop
sbb
or
pop
dec
lcall
inc
rclb
pop
inc
andb
add
shrl
or
or
fwait
inc
shrl
jo
mov
pusha
mov
xchg
sub
outsb
or
pushf
adc
outsb
shl
pop
xchg
mov
rcr
mul
cli
cmpl
pusha
and
inc
dec
fisubl
add
dec
add
dec
add
dec
insb
fs
ffree
add
or
sti
lods
dec
aaa
or
in
lret
clc
adc
sub
inc
push
outsl
or
inc
sub
sub
or
ljmp
lods
cs
sub
and
dec
adc
dec
dec
fxch
sbb
shll
mov
addb
adc
mov
cli
push
and
addl
negl
pop
mov
cmpsb
inc
jno
int
xchg
pop
lods
mov
incb
inc
gs
nop
lcall
adc
adc
adc
or
lahf
dec
sub
inc
cmp
add
cmp
outsl
addr16
outsb
adc
test
sub
pop
push
fldenv
incl
and
adc
mov
jbe
cmp
dec
fsubs
clc
int3
shl
dec
jle
es
pop
add
shrb
in
pop
push
fiadds
fwait
mov
arpl
push
add
inc
fs
push
std
sub
in
emms
mov
mov
or
and
mov
jp
sub
sub
das
lds
loope
ljmp
cmp
xchg
push
jmp
add
jmp
xor
push
repnz
and
test
and
push
or
lcall
ror
repz
add
and
inc
lea
inc
lcall
repz
jg
aas
and
movsb
mov
leave
sbb
jnp
add
pop
sbb
sbb
movsb
fisttps
sub
jle
push
ret
mov
loopne
xchg
pop
jmp
inc
xor
enter
subb
or
jbe
inc
mov
mov
xchg
dec
mov
and
jne
pop
sbb
loopne
cli
inc
rclb
pop
push
idiv
jae
stos
or
xor
test
addl
xchg
mov
add
and
pushl
push
jns
push
arpl
mov
mov
push
add
mov
xor
push
cmp
lock
je
cmpsb
iret
cs
sub
push
push
pushf
dec
pop
in
push
push
leave
inc
movsl
insb
loop
add
mov
repz
rclb
sub
mov
imull
lock
and
cli
push
jnp
lds
hlt
je
cmp
jbe
jns
xchg
sub
fs
xor
add
mov
xchg
mov
xor
xchg
inc
ret
add
in
or
cmp
xchg
iret
mov
and
push
lret
test
cmpl
jbe
cmpl
pop
clc
repz
flds
dec
or
enter
fisttps
movsb
cmpb
orl
add
sbb
movsb
fcmovnb
dec
push
jne
dec
mov
bound
cmp
scas
jne
sbb
cmp
lcall
mov
add
mov
fsubrl
in
adc
cmp
sbb
cmp
sbb
or
lods
sbb
mov
adcl
pop
ret
out
push
es
mov
add
and
loopne
shlb
push
push
ret
add
push
push
fwait
mov
pop
cmpsl
in
mov
pop
rorb
push
xchg
test
scas
cmp
jmp
or
mov
pop
fwait
shrb
jge
ret
push
pop
addb
xor
inc
and
add
sbb
xor
imul
mov
push
add
push
adc
popa
xchg
pop
dec
or
sbb
cmpsl
orl
imulb
pusha
cmpsb
lock
sbb
pop
testl
sahf
mov
cld
cmpsl
testb
jne
jmp
and
ja
or
add
mov
mov
push
xchg
adc
add
push
scas
inc
and
or
scas
and
andb
or
les
adc
cmpsb
subl
mov
data16
mov
mov
decb
fiadds
sub
shrb
add
roll
imul
nop
add
loop
or
and
add
mov
push
mov
fdiv
insl
add
cmp
jbe
or
rcl
in
out
or
ret
adc
ret
push
lahf
add
sub
enter
shlb
add
dec
push
add
push
ret
adcb
push
cmp
pop
mov
dec
lea
dec
pop
fdivrs
inc
cmp
xchg
mov
je
sub
jns
inc
inc
clc
add
insb
sub
or
fimuls
push
dec
ja
or
add
adc
mov
inc
add
xor
ss
adc
dec
xor
push
loope
cmp
cmp
scas
inc
loopne
out
push
inc
add
fsubrs
mov
mov
inc
inc
lea
mov
sub
jl
mov
cmp
jbe
inc
sbb
add
ret
push
addl
daa
mov
pop
loop
cld
inc
push
mov
enter
in
ret
enter
imul
cmp
inc
rsqrtps
cmp
cmp
ja
or
dec
jae
ss
jb
rclb
rcrl
test
loope
fnstcw
jne
mov
sub
into
mov
inc
mov
dec
push
hlt
pop
or
or
jmp
mov
test
cmp
enter
rolb
adc
pop
inc
jmp
pop
dec
ret
adc
sbb
sarw
dec
lret
fdivs
hlt
dec
xor
jne
xchg
outsb
xchg
xor
cmp
jl
xchg
or
xor
dec
adc
dec
xor
and
and
pop
push
or
xchg
fidivs
shl
xor
mov
sub
add
push
sub
bnd
stos
cmp
adc
pushf
mov
dec
sub
sub
adc
pop
mov
mov
lods
or
sbb
pop
sub
cmpsl
jl
lea
sub
sub
add
mov
mov
mov
xchg
mov
dec
mov
add
add
pop
and
or
sub
add
xor
addl
mov
mov
or
popa
and
jo
out
dec
add
add
imul
jmp
and
nop
mov
cmp
je
nop
call
lea
cmpl
lret
add
or
and
xor
inc
cmp
jl
pop
pop
dec
call
aam
adc
jle
shlb
push
xor
cmp
push
adc
cs
mov
xchg
push
cs
out
sbb
jle
push
sub
add
sbb
xor
mov
push
das
add
lods
push
push
push
gs
mov
nop
out
repnz
add
push
or
add
or
nop
dec
xchg
mov
dec
cmp
mov
xchg
fdivl
add
add
and
mov
notl
adc
fcomp
cmp
sbb
cmp
cmp
push
lea
les
enter
sbb
sub
comiss
push
xchg
rorb
in
inc
cwtl
jbe
sbb
rcrl
xor
cltd
jmp
mov
mov
inc
stos
mov
mov
inc
in
mov
push
in
pushl
loope
and
add
mov
enter
shl
add
inc
cld
out
and
shl
xor
mov
mov
faddl
lock
mov
mov
scas
sub
movsl
out
cmpsl
idivl
jge
cmp
cmpsb
mov
mov
cmp
aas
add
and
add
push
imul
pop
add
dec
mov
adc
icebp
sub
or
arpl
andl
sub
insb
push
jge
js
lds
jno
add
push
xor
add
dec
clc
ljmp
mov
lcall
push
add
and
add
shrl
push
pop
sub
jo
jecxz
jmp
mov
jmp
lock
dec
sbb
adc
ljmp
cwtl
mov
push
mov
shlb
mov
xor
jle
push
xor
cmp
stos
xlat
out
aad
loope
and
sub
xor
loopne
sub
and
js
mov
sbb
adc
and
jmp
add
hlt
test
or
add
sarl
dec
in
xor
inc
loopne
inc
add
out
sbb
pop
adc
xor
jns
in
jns
adc
adc
ds
sub
in
jno
mov
ficoms
repnz
roll
cmc
popa
mov
sub
ret
es
orb
pop
test
enter
in
es
sub
out
or
add
add
lock
xchg
dec
push
ret
scas
out
rolb
cltd
or
xor
int
popa
imul
dec
or
mov
sub
hlt
mov
add
jle
sbb
add
cmp
jg
jl
push
pop
jns
add
in
jmp
push
or
call
jmp
das
xchg
jle
pusha
sbb
int
cmc
adc
or
cmp
sti
pop
test
add
adc
out
sbb
add
scas
mov
enter
movsl
sub
cmp
in
mov
movsl
xor
sub
adc
insb
pop
or
jno
jecxz
pushf
jbe
repz
hlt
loopne
adcl
ljmp
jmp
sbb
xor
insb
popf
sbb
xor
sbb
fcmovnb
pop
sub
sub
vpsadbw
lock
cltd
inc
mov
lret
lea
or
add
xchg
xor
mov
ss
mulb
sbb
mov
popa
jb
insl
pop
and
gs
pop
icebp
addb
pop
ret
mov
pop
pop
pusha
fmuls
sbb
pop
jmp
rorb
rclb
push
or
sarl
xor
cmp
add
sub
or
loopne
push
add
nop
lods
and
lea
stc
lods
xchg
shrl
pop
aad
push
in
sub
insb
and
push
adc
or
mov
dec
fimull
and
adc
jo
mov
or
enter
adc
test
lods
ja
sub
cmp
push
int
sbb
pop
leave
aas
dec
mov
stos
xchg
sub
test
sub
popa
daa
shll
cmp
repz
or
mov
inc
or
mov
jmp
and
push
pop
inc
mov
sbb
or
push
push
pop
ja
out
gs
mov
and
mov
mov
addr16
xchg
push
outsl
adc
inc
clc
sbb
test
enter
sub
mov
outsb
and
adc
mov
or
scas
mov
cmp
mov
mov
mov
mov
cmp
sbb
mov
loopne
je
or
ret
and
mov
rorb
push
pop
jp
xchg
mov
loopne
mov
loop
xor
cmpl
fisttpll
daa
pop
test
sti
pop
push
sbb
outsb
add
outsl
jl
cmp
mov
pop
push
rcrl
mov
sbb
outsb
pop
ud2
lock
push
shrb
jae
pop
mov
add
fcompl
xor
push
mov
incb
xor
test
pavgb
xor
cmp
jno
cmpl
jne
mov
dec
je
sbb
cmpsl
leave
aad
mov
fisubl
add
add
sub
ss
bndstx
arpl
jp
inc
jae
xor
add
aaa
repnz
cmp
jle
adc
setbe
cmpsb
inc
repnz
fisubs
inc
cmp
in
pop
pop
pushf
dec
js
dec
pop
shrb
rcrl
xor
push
push
add
lea
fsub
test
xor
push
das
scas
in
adcb
cmp
jo
jo
xor
and
or
xchg
jne
repz
add
push
ret
push
arpl
cmpl
clc
push
mov
push
push
insb
xor
inc
push
or
and
add
je
lahf
imul
aas
or
scas
stc
lahf
add
testb
jne
addl
addb
add
stc
cmp
stos
loopne
cli
cli
stos
mov
stos
adc
xor
insl
jl
ds
mov
jne
and
call
movl
lret
call
stos
sub
in
jo
sub
inc
jmp
xor
je
cmp
je
push
mov
add
adc
testb
je
cmp
mov
lods
dec
inc
mov
push
jbe
ss
cmp
rol
add
imul
add
fstp
cmpsl
xor
mov
sub
int3
pop
cltd
imul
sbb
lret
sbb
imul
repz
adc
push
cmp
sti
setle
sbb
xor
jg
inc
dec
or
sub
loopne
and
jbe
jae
dec
and
icebp
mov
xlat
mov
mov
cld
dec
ret
adcl
push
xchg
jne
jg
add
dec
or
and
adc
negb
ds
in
cmp
insl
jo
arpl
in
jo
cmc
mov
push
pop
jne
das
or
ss
sub
mov
aam
ret
or
leave
or
inc
mov
push
mov
xchg
or
xorl
dec
or
xor
dec
push
push
sbb
insb
addr16
and
xchg
adc
sbb
push
popf
jmp
pop
mov
lcall
add
mov
or
rorl
sbb
sbb
push
es
add
repnz
fsub
cmpsl
loop
inc
fiaddl
pop
cmpb
leave
jmp
mov
dec
call
sbb
cmp
clc
dec
adc
loopne
or
inc
bswap
sbb
sbb
fdivs
pop
jl
xor
cmp
pop
std
ja
or
and
xchg
xchg
or
dec
xor
lret
jmp
push
pushf
mov
dec
pop
pop
xor
ret
xor
rcrb
fcoms
jne
icebp
or
inc
cmp
aaa
into
cmp
int3
out
std
cwtl
nop
pop
adc
push
inc
fcoml
xor
out
cmp
out
popf
repz
idiv
add
push
pop
jl
ja
cmpl
popa
je
jne
push
test
push
adc
xorl
leave
test
dec
add
enter
push
jle
imul
les
sbbl
add
loopne
jmp
test
jge
pop
mov
xor
mov
or
jl
jp
cmp
sbb
sar
add
shlb
sub
rclb
cmp
ja
sbb
sub
std
adc
arpl
or
mov
leave
mov
movsb
mov
cmp
and
test
addb
cld
fwait
orb
insb
je
inc
in
and
xlat
sbbb
nop
add
lcall
add
dec
xchg
stos
xchg
sub
jmp
imul
add
dec
rorl
stc
lds
cltd
dec
adc
jae
je
xchg
inc
fildll
ja
xor
dec
push
cltd
cmp
adcb
dec
sub
cld
sub
rolb
mov
add
mov
bound
pop
inc
leave
xor
insl
sub
test
inc
ja
pusha
dec
sbb
loopne
js
cmp
je
adc
or
adc
in
xor
aam
mov
addl
push
ljmp
fadd
call
xchg
pop
dec
mov
xor
imul
push
andb
dec
sbb
sub
aad
sbb
cmp
dec
adc
fstpt
sbb
inc
push
xchg
xor
scas
jl
jb
mov
bound
repz
add
aad
jo
cmp
cmc
stos
scas
mov
push
ds
test
add
push
subl
pop
xor
or
in
or
lea
sbb
jmp
aaa
add
test
pop
jbe
aam
test
pop
cmp
loop
outsb
pop
in
and
add
pop
dec
dec
and
ret
dec
in
add
push
xchg
adc
jmp
cmp
in
jmp
icebp
lock
push
inc
push
push
jge
addb
dec
lods
add
in
clc
dec
or
mov
mov
roll
xchg
cwtl
fimull
inc
cmp
jbe
shll
icebp
adc
popa
and
outsl
xor
stos
pop
ds
fucom
int
testl
sub
into
jbe
cltd
scas
out
add
ja
add
dec
push
pushf
aaa
pusha
fdivrl
clc
jae
mov
inc
pusha
movsl
or
add
in
jecxz
dec
test
cwtl
sbbl
test
je
jns
enter
scas
xor
repz
mov
roll
cmpsb
jne
add
xlat
mov
test
add
and
cmc
dec
mov
cmc
sahf
loopne
pop
mov
ret
andb
out
or
addb
or
add
out
aaa
mov
push
lds
adc
or
mov
andb
mov
push
adc
or
push
out
jb
mov
pusha
mov
jmp
in
dec
aaa
add
push
mov
mov
adc
scas
pop
inc
push
mov
pusha
loope
ret
jecxz
sub
stos
xchg
add
xorb
cmpsl
cmpsb
pop
rolb
or
mov
lcall
lock
mov
add
inc
sbb
jbe
or
pop
cld
mov
mov
adc
pop
inc
inc
inc
ret
sub
pop
clc
lods
xor
das
pusha
lahf
jg
inc
shll
xchg
loope
jmp
ljmp
ret
adc
jge
jp
adc
loopne
ja
insb
xchg
orb
dec
jo
daa
imul
add
cld
cmp
push
cli
das
cmp
mov
add
and
test
or
jne
fisubrs
xchg
into
mov
xchg
jb
in
push
inc
movsb
or
dec
pusha
add
lret
push
mov
jmp
adc
dec
adc
popa
insb
sbb
mov
movsl
or
daa
push
movsb
sbb
je
jecxz
sbb
jmp
or
push
dec
sub
dec
xchg
out
nop
jns
fwait
push
int3
or
inc
xchg
dec
sbb
xchg
add
add
sub
push
adc
pop
sub
sub
test
push
and
icebp
xor
icebp
jnp
pop
fnstsw
mov
inc
cmp
mov
sub
push
mov
and
pushf
es
push
mov
dec
inc
pop
pop
and
pop
mov
gs
sub
pop
test
test
jl,pt
rolb
mov
testl
lahf
sub
add
or
jo
inc
mov
dec
les
sbb
cmp
pop
dec
out
mov
fdivrl
inc
sub
ds
sub
add
dec
push
aaa
jne
jb
inc
push
pop
in
pop
loop
lahf
pushf
push
jge
cmp
push
push
push
jge
loope
mov
jmp
nop
cltd
xchg
xchg
insl
pop
cltd
adc
and
rorb
cmp
cmp
les
push
inc
daa
push
xchg
and
sbb
popa
inc
sub
xlat
bound
jno
sarb
xor
dec
ja
push
pop
ja
dec
je
sbb
mov
jmp
adc
lea
sub
xor
lods
dec
mov
int
jecxz
faddl
shll
sub
adc
test
add
mov
lods
roll
iret
stos
or
mov
pop
testl
jle
rcrb
js
lret
test
dec
inc
xor
bound
jne
pushf
pop
daa
add
mov
int3
or
out
cltd
xchg
sbbl
scas
pop
xor
sbbb
cmp
fistpl
mov
and
clc
jg
mov
test
movd
pcmpeqd
fsubp
sub
push
clc
jae
xor
test
xor
cli
rcl
lret
inc
test
mov
in
and
adc
cmp
or
into
frstor
cld
in
xchg
ret
adc
jnp
mov
testl
or
xorb
sahf
adc
cld
mov
in
out
xchg
repnz
roll
add
mov
mov
jo
addps
int
mov
mov
fcmovb
sbb
sbb
inc
pop
xlat
sub
sbb
jmp
sbb
ja
les
and
cmpsl
add
add
stos
call
loop
mov
jg
push
lock
test
jle
ljmp
inc
ret
ret
jge
mov
xchg
js
adc
jns
repnz
pop
pop
or
adc
or
shrb
int3
and
inc
jbe
lret
cs
in
nop
lock
mov
adc
fisttps
sarl
push
add
jnp
sub
inc
mov
jb
rcrl
or
push
inc
cmpsl
out
inc
adc
mov
inc
inc
inc
push
mov
mov
cmp
in
jg
rcll
rorl
and
jne
push
test
nop
std
pushl
adc
aam
daa
add
negb
vphaddbq
mov
dec
fstps
cmp
je
cmpsl
xor
sahf
loopne
pop
call
cmpsb
fwait
sbb
call
push
les
jne
popf
or
xor
cmp
push
hlt
xchg
push
imul
lods
orb
mov
fcomi
arpl
in
cmpsl
fidivl
jmp
es
or
add
push
or
clc
push
pop
add
push
lock
adc
aas
mov
or
mov
or
mov
or
adc
jne
inc
cmp
inc
xor
add
orb
stos
inc
repnz
inc
fadds
push
adc
or
xchg
pop
and
mov
das
rsqrtps
dec
adc
or
rcl
and
hlt
cmp
pop
push
or
adc
jo
cmpb
jae
orb
out
and
push
add
push
push
lret
add
pop
aam
adc
fiadds
cmp
xor
add
add
pusha
add
pop
jecxz
stos
subb
push
dec
into
repz
mov
imul
cmp
sub
jecxz
adc
cmp
sarl
sub
add
ret
out
jnp
outsl
jg
shl
shlb
dec
leave
sbb
sbb
insl
imul
rolb
cmp
mov
mov
shl
shrb
outsb
cmpsb
mov
cmp
aam
lret
jne
sbb
icebp
jg
daa
xchg
adc
add
loope
xadd
push
mov
imull
add
jmp
xchg
pop
mov
stos
andb
xchg
adcb
or
sbb
je
add
daa
or
cmp
orl
push
mov
pop
or
andl
jae
or
or
bnd
sub
imul
mov
mov
dec
jp
xchg
fcmovu
lods
sub
inc
inc
pop
and
mov
pop
adc
inc
mov
mov
mov
xor
scas
push
fiadds
dec
pop
imul
jmp
xchg
incb
pop
les
hlt
push
into
inc
shufps
lret
cmpb
fstpt
dec
dec
cli
or
add
jmp
or
mov
inc
ds
popa
cmp
into
jbe
pop
mov
add
fidivrl
sub
add
jmp
mov
dec
mov
pop
mov
dec
dec
mov
inc
lods
mov
lret
ret
adc
movsb
sub
or
xchg
lock
add
pop
sub
enter
push
arpl
adc
test
das
xor
fs
push
mov
push
cmp
jb
lea
cmp
mov
adc
pop
adc
faddl
out
mov
push
cld
jne
mov
push
cmp
jne
dec
jae
xor
es
jne
call
or
xor
or
jnp
icebp
sub
ret
adc
push
dec
jmp
adc
iret
iret
jmp
std
std
jmp
cld
lock
int3
icebp
cld
ret
pmaxub
xor
adc
xor
in
test
jp
push
push
movb
and
hlt
or
rolb
pop
xorb
jle
repz
stc
push
ret
or
dec
sub
testb
orb
adc
lods
cmp
test
and
popf
cmpsl
push
fcompl
scas
fidivl
add
push
scas
std
or
or
dec
or
test
and
push
xchg
adc
push
loopne
and
push
lock
pop
or
dec
lea
sbb
cltd
cmp
enter
add
sub
aad
adc
adc
shrl
cld
push
adc
sbb
pop
jg
add
mov
mov
js
mov
jno
andb
sahf
push
repnz
jb
and
sbb
and
jae
xor
xchg
dec
pop
cmc
mulb
pop
pop
jle
push
push
pop
div
lret
add
cmp
mov
xor
popa
sbb
sahf
stos
xor
or
push
pop
sub
pop
adc
push
or
and
pop
rol
xor
jb
jge
cmp
add
cmp
adc
sub
adc
adc
add
xor
loope
jb
jns
mov
fsubr
lcall
outsl
in
loopne
and
clc
mov
xchg
fdivs
sub
jb
adc
sbb
pop
test
sub
ret
cli
and
and
push
push
call
add
and
lods
push
mov
cmp
mov
inc
cmpl
jo
lock
roll
xchg
xor
mov
push
mov
inc
jmp
cmp
jne
orl
out
negb
add
add
sub
mov
add
repz
je
cmp
push
xor
dec
or
out
add
insb
or
and
adc
insb
adc
pop
jne
dec
add
xor
outsb
jne
inc
lds
cmpsb
loopne
sub
lret
or
test
idivl
lret
sub
jmp
test
mov
sub
cmpb
outsl
sbb
ja
xor
add
cmp
jae
push
fucom
jb
movsb
outsb
and
scas
push
inc
or
and
mov
cltd
push
je
mov
negb
imul
dec
insb
and
add
inc
cmc
mov
ljmp
add
push
xorl
or
or
sub
push
jnp
sub
inc
mulb
inc
xlat
push
add
sub
mov
into
mov
fcoml
test
cmpl
das
mov
mov
pop
aaa
push
sub
mov
cmp
lcall
mov
aas
test
popa
xchg
inc
sbb
add
cmp
loopne
stc
incb
imul
data16
jge
stos
mov
sbb
je
aas
ror
dec
or
adc
jmp
jno
jbe
fwait
jbe
dec
or
add
mov
scas
jp
and
or
cmp
test
jmp
shrb
add
jbe
sbb
adc
sbb
stc
adc
vmovmskpd
adc
iret
popf
jl
sbb
in
xor
push
lcall
jmp
scas
les
dec
sbb
adc
sti
rcrb
lret
add
jmp
push
inc
xchg
xchg
add
in
mov
jb
push
aas
mov
pop
push
jmp
xchg
sbb
add
push
test
cmpsl
jb
jno
lock
mov
push
xor
jge
jbe
ret
ja
inc
pop
adc
lret
sysexit
and
adc
pop
adc
aam
add
add
add
pop
push
adc
das
movsl
push
outsl
ret
test
or
orl
inc
mov
jae
fwait
or
daa
jno
addb
dec
adc
or
add
leave
cmp
mov
and
xor
adc
repz
add
sub
sub
and
mov
int
shlb
stc
sub
in
push
push
cmp
jle
ja
push
pop
dec
ss
add
aam
cmp
and
and
push
dec
rolb
scas
popf
mov
es
fxch
iret
mov
dec
push
mov
decl
jbe
leave
jne
push
out
inc
nop
inc
loop
cli
or
or
add
push
jmp
pop
sub
push
xchg
push
adc
inc
push
mov
mov
in
inc
pop
add
in
xchg
xor
call
pop
sti
xchg
lret
cmpsb
cltd
ljmp
push
push
pushf
mov
pop
insb
mov
fiaddl
and
mov
push
mov
xchg
add
mov
je
daa
icebp
add
xor
mov
jbe
add
sbb
ljmp
pop
std
movb
sub
cmpsb
or
cld
std
add
pop
imul
push
push
in
sub
and
sbb
push
imul
adc
sbb
je
adc
xlat
rorl
icebp
push
pop
loope
xchg
lods
dec
xchg
ja
xor
mov
ficoms
or
adc
dec
adc
sub
insb
lahf
add
ficomps
test
jno
lds
mov
nop
or
int3
movsb
shrl
aam
fwait
jle
push
sub
out
mov
aad
push
popf
and
call
roll
jno
popa
cmp
dec
std
lock
xchg
lock
and
cmovp
xor
repnz
outsb
inc
rorl
in
clc
faddl
sti
xor
repnz
mov
or
add
mov
or
and
mov
or
sub
xor
inc
cmpl
inc
into
inc
fidivrl
je
push
sbb
xchg
dec
push
rclb
je
test
and
mov
lret
fisubs
cmp
add
sbb
push
mov
mov
add
pop
add
sub
dec
fmuls
call
neg
fistpll
loopne
out
add
cmp
jb
xor
in
sbb
stos
addr16
dec
pushl
push
jp
and
xlat
test
sub
jmp
je
cmpsb
ret
lock
xchg
ret
push
andl
push
or
stos
lods
sub
mov
xor
xor
adc
xchg
pushf
or
add
dec
sub
add
or
fistpl
pushf
or
dec
mov
in
push
insb
adc
mov
sub
cs
push
push
cmp
std
les
fistpl
sub
push
xchg
loope
add
and
enter
fcomps
xor
push
and
aas
and
es
pop
in
dec
pop
test
add
add
sti
jne
mov
push
inc
scas
stos
mov
jne
mov
sbb
hlt
je
push
and
sub
mov
adc
xchg
mov
mov
ja
push
filds
push
mov
and
pop
loope
enter
rcl
mov
push
pop
outsl
lock
add
mov
jb
and
imul
out
pop
push
sub
or
adc
ss
push
sbb
or
xor
cmp
cmp
xchg
cmp
push
adc
fsubr
xor
add
loope
push
push
jle
lret
add
add
fcmovnb
gs
sti
mov
pushf
adc
mov
adc
mov
add
andl
imul
in
dec
or
lret
sbb
fistps
insl
push
push
pop
jle
mov
je
movzbl
add
sub
aaa
or
ds
ret
lea
repz
imul
add
dec
add
jb
cmp
daa
add
pusha
and
add
and
add
add
jle
add
flds
xchg
add
pop
add
cmp
push
push
xchg
pop
cmpsb
repnz
push
pop
jb
or
cmp
or
or
pop
enter
sub
xor
cmp
pop
or
add
xchg
pop
enter
or
add
inc
or
push
nop
push
ja
push
cmovp
inc
push
adc
xor
ficomps
pusha
adc
push
fcoms
inc
or
ds
mov
adc
pop
lcall
adc
xchg
add
lcall
xor
js
push
push
and
enter
pop
fisubs
sbb
lcall
sbb
cmpb
call
jb
jb
sbb
sbb
dec
in
add
je
pop
sbb
out
add
dec
jge
sbb
sbb
sahf
addl
push
pop
pop
test
ret
sub
cmp
jae
fidivrl
movl
xchg
test
imul
add
in
push
in
jno
repnz
in
repnz
lea
iret
add
sahf
aad
cmp
mov
cmp
fwait
out
and
adc
add
call
cmpsl
sub
dec
cwtl
jmp
enter
ljmp
sbb
and
adc
in
in
repnz
in
cltd
mov
and
enter
out
test
sbb
out
sbb
fs
out
pop
lock
sahf
xchg
add
icebp
icebp
add
sbb
pslld
cmp
sahf
lret
out
std
repz
std
test
test
pusha
hlt
fwait
rcrb
inc
pop
enter
div
pop
push
and
and
cmp
cmp
orb
cltd
push
and
adc
inc
stc
lock
enter
cli
cli
iret
xchg
inc
enter
sti
stos
cld
cld
sub
and
cld
je
cld
push
pmulhuw
std
xor
nop
out
cmpsb
sbb
adc
xchg
xor
ret
xor
and
roll
cmpsl
fidivrl
mov
xchg
or
cmp
lret
add
sti
sub
mov
pop
inc
scas
mov
inc
mov
xor
xchg
sti
out
out
cmp
out
outsb
call
add
sub
mov
pop
jmp
add
movsb
jmp
cltd
mov
adc
in
add
leave
popf
cli
sbb
nop
cmpsb
out
out
out
cltd
push
xchg
inc
pop
and
add
cli
and
sbb
jmp
cltd
add
push
xlat
xchg
mov
cs
in
pop
stc
div
divl
fwait
xor
repnz
add
stc
out
clc
test
lret
enter
sti
sti
cltd
mov
cld
inc
cld
cmpl
cli
mov
sbb
inc
scas
xchg
or
mov
sub
mov
in
sbb
mul
pop
leave
mov
adc
imull
popa
jg
mul
enter
sbb
out
bound
pop
inc
divl
pusha
leave
and
sbb
xchg
cmpsb
ljmp
shl
pop
mov
adc
xchg
pop
xchg
negb
insb
out
out
jno
mov
pop
and
add
pop
and
negb
repnz
xchg
xchg
mov
jae
imul
cmc
div
popf
add
jne
jns
and
pop
add
clc
clc
push
scas
lret
add
hlt
stc
popa
cmp
mov
xchg
inc
pop
jno
hlt
pop
dec
pop
and
jne
push
hlt
push
cmp
add
das
pushw
data16
pop
ja
and
hlt
idivl
jo
pop
int3
jbe
sti
lahf
sbb
aam
adc
xor
imul
and
scas
repz
xchg
pop
mov
test
imul
pop
lret
and
andl
and
repnz
jmp
fdiv
mov
xchg
repnz
sbb
dec
in
in
daa
xchg
inc
fdiv
and
add
rcll
sbb
mov
leave
add
leave
mov
push
icebp
cmpsb
jb
popa
cmp
adc
xchg
cmc
cmc
add
jne
leave
mov
lock
sub
ret
popf
lock
rclb
cmc
call
lock
lock
sbb
imul
fldl
ss
out
cmpsb
xchg
push
les
out
dec
arpl
and
in
jmp
inc
ds
add
add
jb
cmp
stos
add
les
fwait
push
jnp
inc
and
xchg
adc
cmp
or
push
xchg
daa
add
jmp
and
mov
cmp
in
or
and
lea
imul
mov
int
xor
adc
mov
inc
shrl
scas
dec
adc
inc
incb
fnstcw
cmpl
cmp
sahf
data16
inc
loopne
add
repz
out
jb
loop
mov
lock
xor
loop
add
test
cmpsl
sbb
adc
xlat
xor
jne
add
ljmp
mov
mov
add
cmp
ret
mov
push
test
inc
adc
test
mov
out
or
je
int
shrb
pushf
loop
es
adc
std
cmpsb
and
xchg
push
addb
in
push
ficomps
mov
push
shlb
pop
movsb
addl
clc
cs
es
js
mov
add
ss
mov
je
push
sbb
or
loopne
dec
inc
dec
lock
or
sbb
enter
lea
lea
jp
jo
mov
pop
cmp
js
mov
push
insl
jnp
ja
and
add
js
adc
sub
push
inc
cmp
jae
mov
in
sub
repnz
or
adc
pushf
jmp
loopne
inc
sub
or
adcb
and
dec
gs
adc
sbb
cmpsl
jb
sarb
xchg
jle
dec
ljmp
add
push
add
mov
mov
add
pop
testb
ljmp
loop
jnp
adc
push
rep
mov
dec
ljmp
or
add
fcomps
lcall
mov
xchg
add
inc
adc
push
sub
in
addl
inc
fstpt
rcl
cmpsl
jno
adc
mov
or
sahf
movsl
pop
push
fdivrp
add
shlb
inc
clc
push
popf
movsl
mov
push
adc
aas
add
jne
push
inc
jb
pop
dec
sub
and
shlb
sub
in
jle
inc
inc
inc
inc
adc
or
cmpsl
and
xchg
enter
xor
xor
xchg
ficomps
inc
push
inc
and
add
adc
mov
or
outsl
sub
add
repnz
loopne
je
pop
roll
sub
addl
into
enter
mov
sarl
dec
or
insb
inc
adc
inc
pop
inc
orl
cmp
pop
and
jmp
rorb
jl
dec
xor
test
fildll
inc
add
sbb
fimull
in
inc
in
dec
jne
jo
sub
loopne
daa
shll
and
add
xchg
in
inc
sbb
stos
fstps
stc
aad
adc
sbb
lret
rcll
push
push
ss
mov
or
cmp
pop
push
jmp
sbb
sbb
out
jns
mov
dec
mov
lret
es
es
pop
cmp
pop
pop
inc
adc
ja
in
adc
inc
xchg
addb
lods
shll
cmp
and
shll
test
loopne
inc
add
bound
cld
adc
clc
aad
or
dec
roll
lock
jl
jmp
stos
add
testb
sub
andb
and
repz
inc
enter
pop
or
add
dec
jne
icebp
adc
mov
adc
push
pusha
xchg
stos
add
std
or
xor
mov
add
xor
das
mov
and
notb
cwtl
mov
roll
cmp
loopne
sub
rolb
inc
fisttpl
adc
push
pop
and
popa
mov
rorb
dec
pop
pop
mov
push
clc
fsubs
call
hlt
push
or
xor
cmp
jb
les
enter
push
pop
in
fwait
lea
and
aad
push
clc
and
inc
add
add
stc
rcrb
repnz
dec
add
addl
add
xchg
mov
cmp
mov
pusha
push
pop
push
dec
out
aas
iret
inc
cmp
inc
in
sahf
out
sahf
call
hlt
je
out
hlt
clc
clc
cld
insb
aas
inc
xchg
lea
add
fnstcw
jmp
and
sbb
test
fcoms
sti
and
vpunpcklwd
xor
jl
cld
or
or
and
std
cld
out
and
pop
cs
neg
fimuls
xchg
xchg
xchg
stc
sub
pop
nop
xor
inc
cmp
push
pop
push
sbb
jl
mov
out
add
push
ficoms
push
out
push
add
nop
dec
dec
addr16
cmp
pop
add
ljmp
mov
push
faddl
in
das
mov
add
pop
pop
aaa
sbb
iret
repz
sbb
adc
repz
repz
or
or
add
inc
push
icebp
jns
xor
cmp
dec
pop
pop
aaa
loop
imul
pop
inc
pusha
mov
daa
ja
clc
hlt
mov
cmp
mov
icebp
idivl
cmp
decl
jne,pn
pop
pop
daa
and
enter
jne
cld
cmp
xor
jbe
push
cltd
pop
mull
pushf
push
pusha
or
sbb
add
sti
sbb
mov
mov
xor
jg
in
jmp
cmp
jae
dec
ja
or
mov
jbe
mov
mov
adc
dec
clc
inc
ret
jmp
popa
jecxz
loope
adc
hlt
adcb
pop
pusha
push
ret
push
mov
lret
dec
sbb
add
test
add
mov
sbb
dec
dec
je
test
mov
push
push
mov
pop
xchg
and
mov
jle
add
movsl
jns
push
dec
push
mov
xor
pop
decb
repz
gs
push
je
mov
inc
dec
in
lcall
xchg
add
mov
filds
xor
out
sti
dec
ret
pop
push
push
pop
add
test
dec
jae
push
pop
push
test
xor
adc
ficoml
pop
mov
add
je
leave
mov
mov
mov
push
ss
test
sbb
lea
lahf
ja
insl
or
aas
jge
lock
cltd
pop
idiv
mov
lcall
push
xchg
inc
insl
mov
pxor
es
jb
jmp
adc
cmp
es
and
pop
imul
fs
pop
or
and
adc
fs
jmp
jl
rclb
adc
pop
adc
xor
loopne
or
je
xchg
xchg
sbb
sbb
jo
lea
pop
lret
mov
ljmp
jns
xchg
mov
dec
adc
cmp
movsbl
pop
cmp
cmp
xchg
or
loopne
adc
inc
and
movsb
pop
xor
dec
icebp
xor
insb
pushf
push
ror
sub
push
cmp
test
push
jmp
jge
cltd
jecxz
jl
je
sbb
or
jl
fs
sti
int3
mov
ud0
adc
outsl
mov
test
int3
dec
jo
mov
mov
mov
inc
jl
test
mov
or
inc
mov
cs
lods
nop
lret
sub
push
inc
adc
jo
js
jl
pop
mov
or
sti
popf
sbb
pop
push
movsb
push
or
inc
mov
adc
inc
pop
cmp
pop
cmp
lcall
lcall
xchg
inc
jmp
push
pushf
lret
pop
jno
jno
outsb
inc
mov
inc
jl
test
sbb
sub
push
je
enter
mov
push
movsb
xchg
add
mov
xchg
xchg
and
jge
loop
clc
xor
push
push
cld
mov
jb
add
je
loopne
jns
add
inc
adc
or
out
fdiv
cmp
call
sbb
add
es
pushl
dec
aas
dec
ljmp
xchg
rolb
jg
pusha
loop
clc
push
pop
jbe
push
push
pusha
rcll
mov
dec
inc
pop
xorb
and
add
push
inc
adc
fildll
stos
jecxz
add
push
inc
jg
mov
adc
xor
jmp
push
fmuls
mov
lock
inc
pushf
fisubl
mov
inc
inc
cmp
je
cmpsb
mov
push
stc
fs
sub
xchg
orb
adc
add
lods
popa
imul
hlt
sub
xchg
push
xchg
test
orl
add
mov
mov
push
mov
incl
fdivr
push
xchg
xchg
sbb
ret
add
sbb
or
dec
daa
lret
pop
sbb
mov
or
bound
add
lds
xchg
dec
push
or
or
aad
je
add
sbb
push
or
mov
xchg
fcmovnu
lock
ret
lods
dec
jecxz
pop
test
loopne
cmp
and
cmp
je
mov
mov
mov
test
lock
mov
sbb
pop
add
inc
int
mov
popa
fs
push
pop
lcall
out
push
add
frstor
sub
lods
sbb
dec
movsb
jb
jns
mov
pop
hlt
lods
add
inc
sbb
mov
adc
clc
test
rcl
pop
add
add
roll
js
sbb
mov
pop
call
popa
dec
or
mulb
pop
sub
push
jmp
das
pop
cmpsl
add
dec
jmp
dec
sbb
inc
into
adc
dec
xchg
pop
cmp
inc
and
fcoms
and
rcrb
cmp
rolb
mov
ret
in
imul
dec
es
add
mov
cmc
imul
lock
shl
sbb
or
aam
dec
xor
lods
hlt
movsb
mov
xchg
cmp
je
scas
cltd
cmp
push
push
mov
cmp
inc
inc
pop
mov
sbb
mov
xchg
mov
mov
cwtl
mov
scas
mov
add
mov
inc
push
jmp
cmp
call
ja
or
inc
inc
dec
or
pop
pop
mov
pop
mov
or
or
imul
movsb
cltd
pop
cmpsb
jne
imul
lock
lret
les
pop
sub
pop
sarl
inc
jmp
aas
inc
and
or
adc
mov
push
int3
and
jb
test
jmp
pop
enter
mov
jmp
jne
add
adc
add
add
and
das
jns
lahf
pusha
jmp
sub
add
push
or
jns
sub
lahf
dec
cmp
jo
pop
fcomi
movsl
mulb
or
lds
or
cld
add
add
orb
xchg
cmp
iret
fadd
gs
xchg
stc
push
cltd
push
mov
add
subl
arpl
jmp
pop
arpl
xchg
push
jno
movsl
or
movsb
pop
mov
push
cld
icebp
fs
mov
mov
add
mov
sub
mov
add
outsb
add
loopne
enter
or
adc
mov
push
ljmp
into
sub
in
add
in
roll
add
dec
into
dec
mov
outsb
jbe
js
adc
jg
aaa
cmp
jge
and
add
sbbl
aas
add
addr16
add
push
push
push
andl
les
mov
fcompl
bound
rcrl
xor
call
inc
or
loopne
mov
dec
mov
xor
push
imul
int3
or
xlat
gs
sar
cmp
int
int3
jmp
xor
push
pushf
enter
idivb
mov
add
mov
xor
inc
out
xchg
adc
jo
add
dec
lcall
std
data16
push
inc
and
sbb
push
xor
inc
sub
or
adc
in
push
lret
mov
push
mov
xchg
pop
push
jg
mov
cld
arpl
imul
sub
add
cmp
mov
jmp
sub
icebp
rcrb
pop
into
addb
sbb
imul
cmpl
jge
cmp
loopne
or
test
push
lret
mov
sbb
ja
jp
xchg
lret
xor
js
mov
faddl
dec
fcomp
adcb
sbb
cld
sbb
push
cmp
or
fs
inc
inc
cmpsl
std
push
aam
dec
aam
jne
lods
popf
jmp
pop
dec
sbb
add
pop
push
xchg
cmp
xchg
rcrl
cmp
push
lock
fistpl
rorb
mov
fsubr
rol
movsl
inc
shl
hlt
fadds
ret
dec
add
push
gs
hlt
or
sti
mov
sbb
sub
cmpsl
sti
jmp
sub
jo
rorl
incl
sub
fisubrs
fs
sub
movsl
mov
adc
inc
and
adc
sub
gs
sub
add
inc
in
fisttpll
les
or
push
mov
aaa
push
ret
xor
rcrb
inc
sbb
mov
pop
dec
mov
push
lea
loopne
loopne
dec
mov
xchg
cmpb
dec
push
imul
add
daa
add
notl
cmpsl
call
push
push
sbb
jnp
je
mov
add
xor
push
dec
or
outsb
pop
push
lods
pop
jo
inc
mov
push
mov
mov
sbbb
les
dec
xchg
adc
movb
add
ljmp
pushf
jg
pop
fdivrs
into
fldenv
leave
addb
nop
or
jo
leave
call
rolb
cmpl
inc
bound
push
lock
cmp
das
and
and
dec
aas
pop
in
sbb
pop
or
mov
rorl
add
and
pop
test
or
mov
or
lock
xor
sub
cmp
push
adc
icebp
test
sub
xchg
or
lret
adc
sub
lret
out
mov
sbb
out
lret
and
popl
repz
lods
cmp
add
inc
mov
jbe
test
push
movl
cmp
xor
pop
pop
movsl
xor
cmp
shlb
in
jp
mov
jge
fmul
adc
dec
xchg
mov
add
rclb
add
adc
xchg
scas
nop
adc
mov
push
xchg
fsubs
je
je
pop
or
push
push
pop
ret
mov
mov
adc
or
push
xchg
rcr
inc
sbb
and
lret
decb
dec
loop
rcll
or
sbb
scas
stos
add
lahf
adc
pop
sub
mov
incl
mov
inc
dec
jne
lea
or
pop
out
filds
add
ljmp
mov
test
sbb
out
loopne
mov
mov
jne
mov
scas
rcll
inc
jbe
out
push
xabort
ss
lea
lcall
inc
ja
sub
xchg
mov
aas
push
push
xchg
cwtl
mov
mov
cld
ficoml
push
push
adc
shll
sub
push
cmp
mov
inc
cld
xchg
and
inc
jo
cmp
scas
jb
cmp
push
orb
mov
je
js
movsl
and
sbb
repnz
aad
jmp
movsl
mov
mov
lods
leave
sub
mov
cmp
add
sub
ja
push
imul
and
jae
mov
test
ljmp
jle
push
dec
ret
inc
pop
add
js
in
sub
and
mov
les
idivb
or
ja
mov
pushf
mov
inc
push
pop
add
inc
aaa
inc
call
mov
inc
ss
jecxz
add
pop
pop
subb
mov
and
mov
push
loopne
and
cld
mov
pop
aaa
hlt
and
or
dec
cwtl
cmp
orb
out
fsts
cmpsb
push
cmp
fdivrl
inc
cmp
std
jne
xchg
imul
cmp
enter
add
adc
rolb
or
cmp
mov
push
xor
sbb
push
mov
inc
push
das
xchg
or
or
cmp
or
sbb
sub
mov
sbb
into
dec
mov
and
xor
lea
sbb
sbb
ljmp
jbe
dec
xchg
in
lea
mov
dec
mov
push
inc
pop
leave
std
jl
push
inc
xor
imul
adcb
push
lea
push
stos
cmp
push
testl
inc
cmp
push
mov
inc
inc
add
pop
inc
jne
outsb
incl
out
inc
cwtl
jge
add
jb
mov
xor
ljmp
ficoms
scas
inc
or
adc
mov
inc
mov
inc
inc
inc
dec
jne
push
add
repz
inc
pop
cmp
jl
sbb
add
shll
jle
loop
loope
clc
pop
push
inc
push
mov
inc
dec
jne
xchg
or
test
inc
add
or
jnp
test
xor
mov
imul
cwtl
orl
add
jp
mov
push
movsl
ret
loop
push
and
out
cmpsl
sub
mov
inc
sub
inc
sbb
push
push
lock
push
add
cmp
and
and
mov
push
inc
adc
inc
push
xchg
inc
sbbb
xlat
cli
lret
push
dec
test
roll
repnz
pop
outsb
addl
or
js
pop
cmp
sti
frstor
enter
or
pop
sub
jmp
xor
mov
jge
mov
adc
inc
sbb
bound
ret
inc
jo
mov
push
push
out
arpl
rcrl
xchg
jno
es
xor
mov
stos
add
cltd
imul
xchg
test
cld
fistpl
popa
pop
push
and
pop
movl
shr
xchg
cmp
flds
fisubrs
mov
pop
adc
lods
xchg
pop
sbb
nop
pop
mov
sub
xor
das
rcrl
rolb
lcall
and
lods
or
sub
and
adc
sbb
movsb
jnp
pop
cmp
inc
lods
test
sub
inc
in
inc
add
aam
lea
cmp
push
cmpl
add
push
or
lds
cmp
xchg
inc
add
xor
dec
or
or
inc
or
or
push
xor
rorl
mov
mov
ficomps
cmp
mov
aaa
cmpl
push
xchg
cmpsb
or
unpcklps
movsl
sub
or
cmpsl
xorl
adc
sbb
dec
mov
push
xor
fs
and
pop
in
sbb
arpl
jbe
xchg
mov
lock
xor
sbb
jo
loope
push
xchg
add
mov
insb
ds
jmp
add
push
rcll
adc
ficomps
jno
pop
sbb
aam
sbb
and
push
push
pop
loopne
cmp
rol
sbb
mov
ret
mov
arpl
and
pop
js
push
pop
ljmp
out
stos
xchg
or
ds
cmc
cld
mov
jb
cs
sbb
outsl
fidivrs
pop
fidivrl
sbb
cwtl
cmp
addb
popl
loope
sub
push
push
push
mov
pop
or
aas
push
decb
lock
cmc
aam
and
andb
out
adc
inc
pop
dec
scas
int3
xchg
pusha
adc
andb
mov
cmpsb
xchg
lret
nop
mov
mov
push
cld
push
jo
push
inc
or
inc
mov
pop
pop
push
test
movsb
adc
mov
xchg
jecxz
adc
cmpsb
insb
mov
mov
jg
nop
jecxz
arpl
mov
sbb
add
dec
pop
inc
inc
imul
insl
addr16
rol
sub
push
fs
pop
pop
xor
push
push
movsb
pushf
cmp
jns
pop
add
push
push
adc
into
jnp
mov
or
xor
shlb
pop
push
aaa
imul
movsb
xchg
rolb
leave
and
clc
inc
and
sbbl
enter
cmp
inc
int3
loop
sbb
pop
cmp
push
popa
daa
jle
pop
sbb
inc
cwtl
ud0
push
imul
scas
dec
fisttpl
jbe
and
pop
cmp
les
sti
shll
test
fnsave
mov
outsb
adc
jge
pusha
inc
xor
addl
jmp
cs
inc
mov
test
mov
pop
jle
pushf
cwtl
xchg
pushf
push
cmpsl
jae
cmpl
imul
cli
lods
imul
ficompl
addr16
ss
cmc
ds
ja
mov
or
sbbl
mov
sub
data16
jbe
mov
and
mov
iret
loopne
aaa
inc
mov
push
mov
mov
nop
stos
mov
add
mov
adc
das
mov
add
sub
pushf
dec
lea
into
push
inc
jnp
das
mov
and
imul
std
pop
pop
pop
popf
aam
sarb
clc
jns
jns
or
test
movsl
sarb
popl
sub
sarl
dec
call
adc
jp
or
sub
aam
xchg
add
xor
lahf
lea
mov
dec
test
mov
inc
pop
sbb
stos
lods
pop
daa
in
add
popa
js
jmp
jge
cwtl
push
shrb
aaa
icebp
mov
lods
and
xchg
add
insb
or
xchg
mov
lcall
mov
je
js
adc
mov
pop
xor
dec
negl
jg
jle
or
test
pop
xor
fstl
stos
xor
xchg
out
cmp
or
push
adc
add
jle
adc
lahf
lock
push
mov
push
pop
jns
test
insb
jg
rolb
addb
out
nop
in
adc
sbbb
nop
adc
adc
iret
jnp
inc
mov
or
push
xchg
pushf
mov
repz
lods
mov
xorb
add
pop
inc
loopne
adcb
or
pop
xchg
int3
insb
and
adc
sub
test
mov
push
push
cs
push
and
adc
pop
sub
adc
imul
add
sub
lahf
adc
and
cli
pop
dec
cwtl
test
insb
lret
jne
xchg
and
pop
repz
cmp
jge
inc
mov
xlat
lret
mov
dec
add
test
pusha
dec
jge
stc
and
push
add
aam
or
mov
and
adc
daa
sbb
sbb
adc
shlb
or
cmc
and
pop
idivl
adc
cmpb
pop
test
sbb
jnp
cmp
xchg
hlt
mov
xor
adc
je
fwait
xor
pop
pop
and
and
testl
test
jnp
xorl
add
dec
sbb
int
jl
or
movsl
or
inc
adc
push
jge
add
jmp
xorl
inc
ret
insb
inc
xchg
data16
or
push
xor
loopne
adc
and
ret
testl
mov
and
loope
mov
cmp
or
push
or
lock
pop
mov
pop
outsb
cmp
out
cwtl
popa
and
mov
push
sahf
add
fcom
mov
test
push
sub
fistl
test
ja
enter
push
sbb
je
movl
adc
jecxz
xor
mov
cmpsl
fwait
mov
hlt
jecxz
jmp
fiadds
daa
add
mov
push
inc
and
lret
pop
or
adc
ret
sbb
and
add
sub
leave
ret
inc
or
daa
or
les
sbb
add
or
inc
sbb
pop
loopne
and
insl
adc
movsl
ret
test
add
jno
test
sub
insl
cmp
inc
repnz
jno
mov
lea
inc
cmp
jecxz
mov
push
mov
pop
cmp
jbe
int
sbb
insb
imul
inc
mov
sbb
pop
inc
es
cmp
add
rorb
incl
roll
dec
shlb
pop
dec
in
or
shrb
fadds
mov
subl
push
and
fwait
fwait
xor
mov
test
adc
or
or
dec
or
popa
inc
or
ja
sub
jecxz
or
lret
fisubrl
pop
xchg
out
xchg
andl
mov
jbe
push
inc
loopne
sbb
pop
mov
in
in
cmpl
out
xchg
jp
std
inc
pop
divl
loope
adc
or
mov
dec
rcl
adc
cmpb
inc
sub
out
xchg
fidivs
loopne
dec
ljmp
mov
and
push
sub
pop
adc
cli
add
add
inc
pusha
jp
dec
sub
in
mov
and
popa
dec
scas
mov
ret
mov
ljmp
xchg
push
push
lock
inc
add
add
sbb
or
sub
adc
cmpsb
jno
test
xor
iret
js
sti
jl
or
jb
pop
clc
aam
fdivl
popf
lret
fcoms
cmp
jecxz
cmp
test
mov
mov
ja
adc
mov
leave
movzwl
ja
add
in
or
call
or
add
or
fimuls
push
xchg
aaa
adc
loopne
pop
ja
mov
movsbl
dec
icebp
adc
vmread
test
sbb
pop
sar
pop
mov
cmp
mov
stc
xchg
inc
pop
push
pop
mov
lea
pop
mov
fdivr
sub
mov
sub
dec
jmp
add
ds
je
sbb
jne
or
pushf
pop
or
in
leave
add
andl
nop
cli
sub
andb
cld
cmp
aam
aas
clc
loopne
mov
mov
shrb
inc
fmul
lea
ja
adc
lods
shll
jb
xchg
daa
out
sbb
pop
hlt
stc
in
je
push
cmpl
insb
je
lock
orl
test
or
ds
nop
pusha
sub
pop
mov
and
mov
or
xor
mov
xor
repnz
dec
xor
movsl
mov
dec
fs
mov
or
adc
pop
outsl
imul
js
sub
je
mov
sub
and
sbb
xchg
push
xor
fs
or
push
sbb
jle
inc
je
pop
sti
mov
dec
add
xor
mov
inc
mov
hlt
fdivr
sub
lock
push
dec
nop
and
jae
dec
testl
stc
add
cmp
cwtl
jo
cmc
mov
adcl
pop
shrb
and
in
pop
and
xchg
or
sbb
xchg
push
mov
sub
in
sub
xor
mov
add
imul
les
add
push
insl
cmp
xchg
xor
xor
negl
pop
mov
mulb
sbb
add
mov
cmp
movsl
lcall
test
sti
add
add
or
pushl
push
aas
push
cmp
add
jge
lcall
mov
inc
mov
dec
mov
pop
xchg
hlt
cmp
xor
ret
add
mov
cmp
dec
imul
push
sbb
cmp
dec
sub
inc
subl
mov
adc
jmp
push
je
cmp
je
test
dec
sbb
enter
inc
adc
fbstp
fistps
xor
mov
mov
push
or
fimuls
pusha
pop
or
jo
jo
mov
lds
jecxz
pusha
pop
adc
push
stos
add
push
add
dec
sti
jmp
ret
jg
jne
mov
jne
mov
rcrl
cmp
jle
insl
cmpl
incl
add
xchg
push
scas
cwtl
int
or
fcmovu
gs
out
call
cld
cwtl
imul
cmc
mov
sub
lea
mov
sbb
popf
test
lea
lcall
mov
aas
nop
imul
ds
mov
and
test
push
icebp
push
jge
push
outsb
mov
add
test
cmp
mov
or
inc
daa
add
adc
dec
mov
xor
loope
movsl
sbb
push
sub
lret
mov
jne
push
push
jne
je
adc
imul
jmp
test
mov
out
or
je
cltd
ret
rcrb
nop
rorb
je
pop
inc
add
jae
or
push
fadds
in
insb
inc
mov
xchg
cmpsb
sbb
call
lret
pop
popf
lock
mov
or
jne
and
lea
ja
das
sbb
fs
lcall
mov
cltd
push
mov
loopne
stos
sarl
cmp
push
nop
xchg
clc
sahf
fsubrl
incb
lret
mov
dec
jmp
pop
xchg
sub
inc
push
cmp
push
cmp
xchg
mov
mov
into
cmp
addr16
dec
shlb
xor
ss
outsl
nop
push
cmovl
mov
jmp
dec
data16
inc
inc
in
mov
je
sub
mov
test
aas
add
sub
xchg
clc
es
jmp
orb
jmp
test
cli
and
lcall
aam
cli
sub
xchg
cltd
sub
sub
pop
push
fnstenv
shl
push
jp
popf
data16
xchg
xchg
mov
fdivrl
lea
stos
aas
mov
stos
adc
push
jbe
dec
adcl
jne
cmpb
cmp
faddl
push
rcll
sbb
xchg
nop
popa
jle
sbb
popa
xchg
dec
pushf
test
inc
push
dec
clc
dec
lods
add
cmpsb
adc
cmp
or
push
and
and
aam
inc
enter
xchg
jle
into
push
and
adc
movsl
mov
dec
cld
daa
pop
mov
add
jbe
mov
sub
movsb
cmp
lock
js
xor
sbb
cmpb
sub
adc
test
out
ds
add
mov
inc
pusha
loope
shl
ss
xchg
mov
sarb
divb
sbb
and
or
inc
mov
lock
mov
push
cmp
pop
sbb
popl
add
pop
movsb
cmp
setne
and
inc
sbb
int
or
out
dec
or
add
out
fwait
xor
lcall
mov
inc
xor
daa
sub
pusha
ljmp
test
rcll
outsl
fildl
js
inc
jl
push
mov
jae
jne
push
pop
dec
popa
lcall
ret
lds
jo
movsb
adc
ret
clc
jge
mov
les
clc
mov
fidivs
cmp
test
outsb
push
or
cmpsl
jecxz,pt
jne
call
jmp
push
lea
das
inc
push
rolb
adc
ljmp
shrb
test
jecxz
dec
dec
jo
add
sbb
into
inc
inc
add
adc
sbb
jmp
dec
pushf
lcall
mov
adc
enter
adc
dec
andb
adc
fdivl
rclb
adc
jmp
or
lret
jg
lock
xor
sub
cld
shr
mov
imul
iret
mov
inc
and
mov
dec
or
lret
jae
mov
xor
mov
cmp
or
adc
dec
jne
sar
dec
cmp
jbe
push
pop
testb
cmp
dec
or
addb
and
mov
shr
lea
not
and
decb
jne
arpl
call
dec
loopne
pushf
mov
mov
push
pop
add
mov
push
add
add
pop
and
or
push
sub
cmc
xlat
inc
mov
jecxz
push
mov
dec
adc
shlb
and
sti
add
add
dec
pop
cmp
mov
fimuls
and
cmp
je
xchg
dec
shll
jno
jno
mov
aaa
pop
mov
shr
not
and
add
test
jp
loopne
iret
xchg
out
loopne
pop
xor
dec
movsl
add
mov
dec
lret
add
inc
fidivs
movsb
ret
mov
int3
inc
sub
out
mov
or
dec
jne
pushl
dec
paddd
mov
mov
fmuls
ds
call
inc
push
fisttps
dec
or
jmp
dec
adc
push
mov
or
inc
ja
add
push
sbb
into
repz
repnz
push
loope
or
pop
testb
add
scas
jp
icebp
mov
aas
gs
push
or
push
cmp
mov
mov
sub
dec
inc
adc
inc
scas
sbb
pop
pusha
add
and
pushl
push
xor
lods
movsl
push
mov
shll
int
ss
add
mov
adc
dec
adc
insl
fisttps
add
cmp
mov
insl
or
mov
testl
inc
int3
ret
xchg
mov
ds
loopne
lods
lock
data16
sub
xor
cwtl
outsl
push
add
stos
nop
out
cmp
stc
xor
ffree
js
add
divb
xchg
sahf
pop
ret
adc
jo
inc
adc
rclb
mov
or
push
movl
fstpt
fwait
orl
pushl
lds
and
xchg
mov
mov
je
jge
mov
ljmp
test
dec
or
sub
inc
clc
pop
mov
add
or
hlt
or
push
mov
xlat
add
inc
sbb
xor
cmpb
in
lea
mov
inc
sub
shr
call
inc
orl
orl
and
mov
push
out
xchg
out
mov
lock
call
dec
jne
jo
jle
je
clc
add
xor
and
xor
adc
out
mov
jo
sahf
inc
arpl
mov
dec
shlb
nop
dec
inc
jne
or
add
pop
jge
and
not
and
les
sub
jg
mov
out
mov
sub
push
sarb
shr
jb
fsubl
dec
cmp
clc
scas
inc
jnp
mov
and
pushf
jle
add
inc
call
fcmovnu
cmp
stc
add
jmp
stc
int3
push
pop
dec
push
subb
pop
mov
dec
int
sbb
clc
rolb
sti
dec
in
es
add
cmp
jnp
add
lcall
add
push
jns
sub
add
inc
sub
rcr
mov
sar
dec
mov
call
pop
hlt
lea
add
pop
int
jg
or
mov
repnz
rcrl
push
pop
adc
lcall
outsl
adc
jmp
aaa
ja
and
dec
test
sub
and
and
push
cmp
insb
xor
out
in
adc
popf
push
mov
and
clc
orb
jge
mov
inc
dec
int3
sbbl
push
sar
dec
jp
mov
pop
or
mov
inc
cmp
ret
orl
dec
mov
cmp
je
fisttps
or
dec
push
fnop
cmp
fnstenv
dec
shrl
mov
loope
jo
mov
or
mov
mov
fdiv
jbe
mov
shrd
push
lods
decb
mov
bswap
mov
cmp
jns
rclb
add
sbb
mov
jp
insb
push
add
ret
lods
pop
and
inc
pop
add
cmp
push
push
push
jge
mov
shr
adc
add
or
stos
mov
or
xor
cmp
and
decb
xlat
jne
add
lods
cs
jnp
cmp
jb
push
jne
mov
fimull
fnstenv
jmp
jnp
add
jo
mov
xor
aaa
arpl
xorb
or
cmp
out
mov
sub
pop
lcall
cmp
imul
pushl
sbb
in
cli
and
inc
dec
sbb
test
insb
mov
dec
pop
iret
jne
negl
addb
dec
push
imul
scas
stos
xlat
jbe,pn
out
repz
loopne
mov
into
jne
mov
push
pop
mov
leave
inc
test
inc
push
pushf
mov
sub
icebp
sbb
cli
ss
cmc
call
pop
xchg
sbb
xchg
loopne
ror
push
repnz
rolb
mov
inc
std
push
test
xor
adc
pop
repnz
jmp
jp
mov
pop
pusha
dec
bound
dec
push
xlat
int
and
test
xor
jp
dec
jp
movsl
call
mov
mov
or
pop
xor
adc
push
and
hlt
popa
arpl
ret
out
or
jnp
lock
push
push
rorl
mov
mov
out
or
sub
out
push
std
or
mov
call
stos
test
shrl
lock
outsb
test
lea
ds
jne
cmp
cmp
push
sbbb
ds
push
jmp
sbb
imul
cmp
call
pop
jb
or
xorl
pop
add
push
lock
pop
shll
push
or
adc
aas
mov
outsl
cmp
sbb
fs
add
pop
mov
add
push
adc
fs
cmpsb
fwait
insb
and
or
and
movb
aas
adc
es
cld
mov
add
loopne
test
add
jbe
sbb
push
mov
xchg
xchg
push
fstpl
negl
adc
or
cwtl
push
nop
adc
fs
loope
icebp
sub
or
push
repz
add
or
ficoml
inc
adcb
loop
ffree
mov
std
lahf
lcall
sti
lods
adcl
loop
push
divl
push
cmp
jne
push
mov
mov
test
sbb
mov
and
mov
inc
dec
cld
testb
inc
js
push
cwtl
or
push
jmp
sbb
shlb
inc
mov
in
jp
jae
xchg
rcll
push
hlt
and
loope
es
mov
gs
or
je
push
sbb
outsb
mov
mov
adc
add
pop
adc
mov
ret
gs
sub
mov
jg
xchg
stos
inc
lock
imul
cmpl
pop
sbb
jmp
dec
xor
je
not
out
inc
inc
jns
adc
cmpl
sbb
adc
mov
or
push
sbb
les
pop
sub
mov
call
pusha
aam
hlt
mov
and
andb
xor
in
sarb
mov
adc
jge
jmp
pop
lcall
or
int3
mov
push
in
je
test
add
push
mov
rorl
inc
rorl
subb
xchg
imul
test
enter
adc
sub
lcall
mov
ss
sub
xchg
dec
gs
mov
mov
sbb
jb
mov
sub
rclb
xchg
xchg
imul
sbb
xchg
arpl
push
fsubrl
gs
jb
ficomps
insl
rorb
ss
cmp
in
dec
leave
sahf
cmp
and
jl
imul
sbb
push
inc
sub
sub
insb
jne
jp
sbb
imul
pop
pop
imul
and
jg
dec
scas
push
pop
adc
add
enter
pop
mov
adc
or
enter
cmc
jmp
jae
or
int3
les
and
dec
jae
xchg
xor
dec
lcall
in
jns
inc
lea
jb
xchg
orl
sbb
sub
cli
pusha
sub
imul
dec
push
dec
call
xchg
mov
leave
enter
xchg
inc
dec
test
xchg
add
jns
dec
call
loopne
sbb
inc
xor
call
stos
addl
sahf
adc
add
mov
mov
xchg
cmp
cld
fwait
data16
pop
mov
rorb
leave
dec
in
mov
shr
pop
enter
pop
in
inc
enter
push
hlt
xchg
xor
inc
push
test
ret
jns
test
xchg
orb
cltd
call
call
inc
lods
add
inc
xchg
mov
es
rol
cmp
aam
in
inc
and
enter
xchg
ret
sub
mov
mov
ret
adc
pop
cld
enter
cmp
push
mov
pop
mov
popa
or
aaa
add
push
cli
cmpsb
sarl
movsb
push
mov
xor
jno
xchg
arpl
add
outsl
aad
daa
cmp
push
cltd
add
sub
push
movsb
add
pop
sub
ret
mov
sbbb
dec
js
cltd
ret
xchg
and
sub
je
or
xor
pop
inc
mov
xchg
mov
add
and
cmp
movsb
aaa
nop
adc
pop
hlt
push
lods
inc
les
mov
or
jecxz
insl
push
dec
xor
dec
inc
out
add
cltd
pop
dec
jnp
adc
popl
cmp
xchg
sarb
shr
lds
test
ret
icebp
ja
cmp
add
add
push
cmp
aam
push
clc
and
stos
cmp
int
sbb
sub
add
test
ret
jne
nop
xor
or
nop
sbb
rorl
or
xchg
add
xchg
fdivrs
cltd
lea
mov
out
add
cs
dec
or
call
jmp
mov
add
pusha
addb
add
and
add
or
mov
jg
and
adc
adc
mov
std
lods
add
jne
add
hlt
ja
add
or
push
pop
inc
stos
push
ds
sub
dec
pop
cli
add
cmp
pop
inc
aaa
adc
adc
test
add
test
xchg
rorb
int3
icebp
mov
lret
js
push
or
shll
enter
sub
lds
cltd
cmp
sub
js
mov
imul
cld
jno
lcall
mov
xor
aad
push
in
pop
pushl
jbe
mov
je
mov
jp
pop
sbb
add
imul
int
mov
ljmp
enter
dec
je
push
or
jle
add
enter
loop
dec
fstpl
fucom
test
sti
pop
loopne
fldl
or
fldl
or
xlat
push
xchg
pop
pusha
pushf
mov
inc
fisubs
ja
jle
mov
leave
pop
jmp
jo
fldt
push
dec
mov
xchg
int3
sub
mov
das
cmp
sar
sub
dec
dec
je
add
and
sbb
mov
or
sti
fnstenv
lcall
xchg
insl
ljmp
jbe
mov
adc
scas
popa
pusha
or
rcrl
fnstcw
add
fwait
add
adc
jmp
lret
scas
repnz
ficoms
test
lock
jno
pop
lock
inc
in
in
in
pop
push
call
xor
cmp
push
push
shl
push
lds
or
aaa
jne
das
adc
jo
repz
lock
adcl
push
fs
jbe
lahf
out
cmp
mov
mov
xchg
mov
jmp
xor
test
pop
out
pop
add
xor
lods
loope
mov
add
or
leave
ss
push
dec
lock
sub
pop
ss
call
ds
xchg
jle
testl
sbb
xchg
or
jb
push
xchg
jmp
inc
faddl
push
and
push
jmp
test
fmull
jae
add
inc
jp
cmp
xchg
and
ret
and
push
push
adcl
sbb
js
rcrl
adc
pop
push
add
sub
test
jb
call
adc
out
std
inc
jecxz
leave
lods
std
mov
testb
jne
or
pop
mov
mov
mov
sar
gs
fs
add
gs
jg
xchg
dec
sub
dec
movsl
sbb
pop
sar
nop
push
fisttpl
and
inc
addr16
pop
add
cmp
inc
mov
aas
xchg
mulb
jecxz
loopne
mov
ds
inc
pop
movsb
inc
mov
mov
jl
orb
ret
ja
psrlq
mov
cmp
push
rcll
lods
add
lea
xor
nop
leave
rorb
shlb
into
in
enter
xchg
xchg
adc
in
fldpi
pop
or
add
in
inc
lret
cmpl
or
iret
sti
test
jle
jg
cmp
inc
test
or
pusha
and
iret
jns
mov
sbb
lods
es
ret
jb
call
mov
call
fwait
outsb
or
inc
pop
cmp
pushl
jmp
lahf
pop
dec
cmp
inc
add
test
cli
jg
jbe
pop
and
sbb
nop
popa
or
subb
xor
pop
inc
aad
xor
mov
cmp
push
int
lds
sub
mov
jo
inc
ret
cmp
or
mov
call
mov
in
push
xchg
lea
pushf
sub
test
movsb
sbb
imul
push
mov
cmp
repnz
andb
pop
call
or
cmp
adc
lret
inc
mov
popf
lea
cmpsl
cmp
aas
ret
popf
in
mov
mov
or
inc
ret
cmp
inc
icebp
cwtl
add
or
pop
es
cwtl
xchg
stc
mov
jnp
mov
shrl
jo
adc
mov
adc
lret
sub
or
ja
sbb
fcmovbe
jns
daa
mov
push
mov
lds
mov
xchg
xchg
push
hlt
std
sub
jne
dec
fiaddl
mov
enter
enter
mov
sub
jno
cmpsb
sbb
or
mov
and
je
testl
pop
insb
imul
mov
mov
or
movsb
push
jns
mov
sub
xor
mov
adc
lock
lret
shll
xor
leave
lock
fdivr
adc
mov
ret
adc
iret
xor
and
sarl
les
popa
gs
jb
add
rcl
scas
jno
pop
jb
sbb
popf
mov
mov
std
call
sarl
mov
ss
push
dec
mov
jbe
gs
push
mov
fdivrs
pop
sbb
mulb
cmp
push
xor
std
neg
ret
pop
lds
sub
push
cmp
lea
mov
cwtl
cmp
lods
lea
cmpl
push
mov
xchg
movb
jnp
mov
mov
lret
inc
jnp
std
out
imul
aaa
imul
test
aad
adc
test
xor
push
xchg
push
sbb
adc
sbb
inc
inc
adc
sub
leave
addr16
cmp
mov
sbb
std
sbb
std
lock
xor
push
imul
test
dec
loopne
mov
leave
std
inc
repz
int3
jp
test
into
jp
jbe
fdivrp
or
xor
xor
ds
data16
push
sbb
or
test
pop
dec
mov
push
cmc
rcll
sar
push
push
sub
xor
cmc
int
cmpsl
push
sub
sub
or
adc
and
cmc
loope
out
int3
cmp
pop
cmpsl
pop
sahf
sbb
stc
sbb
mov
add
jmp
cmc
jns
dec
repnz
lock
dec
and
dec
inc
js
fbstp
sbb
pop
insl
mov
movsb
jmp
push
in
popl
dec
inc
jno
push
inc
lret
jne
sub
xor
cwtl
fld
dec
hlt
or
lret
sbb
stc
fdivr
das
push
dec
xor
loop
jno
push
je
fs
and
pushf
mov
loope
adc
cmp
test
enter
das
adcb
cmpsl
xor
sub
nop
mov
ss
mov
jmp
in
testb
inc
cmp
pop
inc
add
add
adc
push
mov
dec
jo
adc
sub
and
fs
mov
insl
out
mov
sub
push
iret
outsl
data16
mov
inc
cwtl
fdivs
jns
aad
and
push
scas
mov
movsb
pushf
sbb
or
mov
cmpb
adcl
push
loopne
sbb
lahf
mov
mov
lret
test
jmp
ja
mov
jns
cmp
mov
or
add
or
pop
movsl
test
sbb
pop
add
xchg
cmp
xchg
lock
andl
add
aaa
ret
push
movsl
pop
arpl
xor
movsl
xor
add
jecxz
movsl
mov
pop
scas
movsl
call
pushf
dec
call
push
sub
les
test
sub
xchg
adc
and
mov
inc
inc
inc
inc
int3
les
imulb
or
xchg
inc
cmpsb
outsb
mov
inc
push
cltd
mov
daa
xchg
ljmp
xchg
pop
xchg
xchg
test
pushf
inc
jb
jns
mov
fs
lods
test
fs
lret
aad
lcall
cld
movsl
dec
dec
fdivrs
lods
mov
lret
scas
mov
and
daa
mov
insl
and
cmp
test
xchg
rep
es
cmpsl
add
mov
mov
adc
leave
gs
pop
push
enter
aaa
and
or
nop
lret
rorb
xchg
pushf
and
and
stos
mov
loopne
mov
and
aaa
lock
mov
dec
sub
dec
xchg
hlt
inc
pop
inc
aaa
mov
dec
es
movsb
inc
xchg
nop
bound
dec
or
adc
test
scas
nop
incl
dec
adc
pop
add
xor
nop
nop
pushf
enter
lods
lods
jmp
or
mov
dec
sbb
call
je
add
je
stc
aam
outsl
dec
mov
add
push
sub
jmp
ffreep
push
out
jns
adc
insl
mov
imul
mov
cmp
insb
loopne
data16
pushf
stos
enter
mov
pop
inc
arpl
xor
or
es
and
mov
push
mov
stos
or
add
arpl
add
fidivs
cmp
xor
add
add
aaa
adc
sbb
and
jecxz
adc
mov
ffree
and
cmp
sbb
jne
push
sbb
roll
mov
sub
add
aam
xchg
js
test
dec
into
in
or
or
jl
dec
jb
cwtl
cltd
movb
pop
mov
xchg
jg
xchg
movsb
push
mov
push
sarb
and
outsl
mov
test
clc
mov
xor
bound
ret
sbb
int
cmpsl
mov
sbb
xchg
add
sub
mov
lea
popa
add
jle
scas
pop
sub
mov
sbb
add
and
stos
bound
sub
sbb
jno
dec
add
lahf
adc
out
les
cld
inc
cmp
shrl
lret
pop
dec
lea
ljmp
sub
pushf
xor
test
adc
mov
inc
push
ss
arpl
xor
add
mov
push
inc
push
shlb
dec
jecxz
dec
popf
mov
lahf
or
or
mov
dec
fs
cmp
addl
push
je
hlt
daa
in
lret
clc
inc
push
inc
sbb
jae
loopne
or
testl
xor
adcl
call
jno
push
push
nop
cmc
les
movsb
mov
mov
xchg
test
mov
jae
add
add
dec
xor
rorb
mov
lds
push
lock
or
fs
add
jmp
fistps
push
inc
shr
rcr
shr
rcr
or
jne
idivl
pop
dec
adc
inc
mul
pop
jb
cmp
in
std
std
ja
jb
cmp
or
xor
and
lock
adc
or
fimull
jo
add
fmul
fxch
bound
inc
push
bnd
lahf
insl
lods
loop
add
inc
push
add
scas
inc
adc
xchg
pop
jmp
and
pop
stc
movb
nop
sbb
xchg
adc
cmp
xor
push
xchg
daa
push
or
arpl
aad
add
in
push
lds
inc
andb
mov
je
xchg
lsl
sbb
or
push
loope
adc
mov
sar
lds
jno
add
pusha
fsubrl
pop
leave
pop
jne
icebp
test
push
mov
les
dec
push
lock
cs
xchg
dec
out
cmp
adc
lods
fnstenv
dec
sbb
xchg
dec
add
es
mov
jle
jne
lea
jb
jo
mov
sbb
aas
inc
aam
aam
jbe
add
push
sub
test
in
dec
pop
xchg
ret
cmc
jne
repnz
add
lea
xchg
in
xor
xor
adc
inc
rclb
sbb
add
sub
pop
ljmp
imul
je
xchg
or
or
add
sub
adc
cld
sbb
daa
adc
mov
test
push
and
sbb
les
andl
mov
aaa
xchg
fidivrl
rcrb
js
and
inc
inc
xor
pop
mov
sub
xchg
data16
movl
sbb
iret
and
adc
stos
add
push
push
mov
cmp
outsl
pop
fldt
imul
add
or
imul
out
mov
push
push
mov
xor
add
xchg
sbb
mov
pop
dec
data16
inc
cmp
pop
or
sbbb
cmpsl
cmc
imul
lret
test
rol
mov
call
cld
sarb
gs
pop
sub
pop
mov
and
jg
cmpsl
and
inc
pusha
das
or
lds
mov
aaa
movsb
mov
add
pcmpeqb
dec
or
cld
iret
mov
jecxz
mov
jmp
fcoms
shl
push
and
fcoml
mov
mov
add
divl
lret
inc
stc
xor
test
andb
dec
xor
sub
mov
in
and
pop
jne
ss
clc
adc
inc
insb
adc
cs
out
cmp
je
ss
cmp
sbb
and
faddl
aam
xchg
mov
outsb
or
cld
jbe
mov
mov
and
out
loopne
std
sbb
aad
sub
sub
je
and
push
js
add
push
mov
jae
inc
or
unpcklps
adcb
sbb
repnz
aam
mov
lea
fcompl
pop
cmp
or
out
sub
inc
jmp
push
fildl
add
cmpl
loop
xor
mov
adc
jne
adc
lods
push
addl
or
push
movsb
and
mov
adc
or
jp
inc
sti
jb
inc
sub
or
popf
lahf
sub
jne
ret
rcrb
mov
loopne
lock
sub
pop
dec
les
rclb
cwtl
pop
jno
test
inc
fcmovnu
xchg
sbb
dec
add
es
test
or
adc
arpl
mov
pop
push
pop
mov
mov
dec
inc
pop
rcrb
fisttpl
pop
in
dec
test
imul
ret
add
mov
xor
frstor
pop
ret
je
dec
and
cwtl
test
and
push
mov
add
or
shlb
aas
add
ljmp
cmp
mov
or
ljmp
out
push
or
or
cmp
std
roll
and
sarl
call
cmp
lock
inc
sbbl
xor
xchg
popa
pop
orl
push
mov
cs
lret
cmp
xchg
lea
test
shl
sbb
leave
rorb
int3
into
pusha
dec
mov
jmp
mov
inc
adc
nop
xlat
out
push
cmp
or
pop
push
div
imul
mov
ret
sub
add
pop
dec
and
fsts
push
sbb
xchg
sbb
jle
mov
or
repnz
mov
or
sub
sub
leave
jne
or
ss
pusha
incl
xor
lock
mov
lret
dec
lea
pop
xchg
bnd
inc
loopne
cmp
push
je
dec
je
stos
xchg
out
dec
imul
scas
mov
mov
push
shlb
mov
arpl
pop
fadd
ds
mov
push
dec
mov
test
pop
push
in
add
ds
andb
das
scas
mov
out
je
cmp
in
sti
aam
inc
pusha
jne,pn
sbb
inc
mov
cs
sub
adc
out
sbb
jge
mov
mov
or
push
and
jno
inc
jno
cmp
mov
ja
push
push
adc
sbb
das
adc
insb
test
or
js
xor
push
adc
cmp
pop
add
sbb
cmp
pop
xor
imul
int
mov
sbb
movsb
push
cmpsb
pop
addl
data16
sar
push
je
lcall
cmpl
test
sub
cmp
inc
pop
mov
or
cmp
clc
adc
mov
xchg
cwtl
rclb
imul
mov
repnz
xchg
xchg
push
sbb
cwtl
and
ret
xchg
jo
or
adc
mov
mov
push
pop
inc
add
push
or
sbb
mov
outsb
and
test
sbb
sub
pop
push
ret
pop
mov
cli
ljmp
mov
outsb
dec
adcl
popa
mov
orb
je
and
xor
movsb
add
ret
shlb
cs
jnp
testl
adc
lcall
dec
sarb
ret
dec
add
push
add
imul
dec
push
out
mov
push
sbb
add
add
orl
in
fdivs
or
fistpll
and
cmp
push
shrb
sub
or
mov
push
in
sbb
adc
inc
mov
jbe
movb
ret
and
and
pop
xchg
add
dec
dec
push
push
test
or
or
xchg
add
inc
decl
fcomps
mov
cmp
ss
jmp
sbb
test
xor
nop
inc
inc
sbb
adc
add
in
or
inc
inc
inc
pop
je
pop
es
imul
jb
je
jne
adc
and
or
xchg
mov
icebp
xchg
dec
shr
inc
dec
or
aad
stc
add
xchg
pop
cmovl
sbb
add
rorb
cli
cmp
movsb
pop
and
add
jo
mov
mov
add
xor
inc
popf
inc
repz
rclb
pop
add
adc
xchg
sbbb
fildll
or
add
rorl
inc
frstor
stc
push
pop
addr16
insb
inc
aaa
mov
jmp
inc
xchg
push
mov
or
sbb
movsl
inc
or
and
jge
iret
nop
sbb
sarb
mov
jae
shlb
adc
mov
push
shl
jbe
ss
sub
sti
les
mov
jge
push
push
orl
or
and
mov
movsb
cmp
shlb
inc
mov
and
sbb
inc
adc
and
out
dec
cmp
sub
push
and
inc
jne
shlb
cmp
dec
inc
inc
or
cmp
sbb
repnz
cmp
pop
out
hlt
push
sar
mov
inc
push
rcrl
pop
outsl
fmull
clc
rorb
xor
lea
push
dec
add
push
lcall
movsl
outsb
andb
shll
sbb
mov
or
sub
out
int
dec
adc
pop
dec
rolb
in
jo
sar
pusha
pop
and
lcall
push
movsl
roll
mov
filds
pop
push
dec
push
adc
mov
add
jmp
add
out
dec
orb
or
or
push
and
imul
mov
outsl
add
jge
mov
cwtl
add
and
cwtl
xor
pop
and
sub
cmp
mov
test
jmp
pop
je
push
dec
loopne
sbbl
rcl
add
nop
and
dec
andb
and
push
cmp
daa
adc
or
inc
cmp
sbb
dec
adc
clc
insl
std
sbb
jo
repnz
push
mov
push
pop
mov
push
push
test
cmp
lock
pop
mov
add
out
add
mov
push
pusha
inc
add
mov
lret
or
lahf
mov
leave
lcall
pop
mov
push
add
xchg
push
clc
mov
xor
icebp
out
or
orb
loope
inc
push
and
mov
rol
dec
mov
shl
push
adcb
push
aaa
xor
ds
fwait
cmpsl
aad
add
clc
push
lock
repnz
loopne
aaa
and
or
pop
add
mov
dec
dec
cmpsl
pop
loope
pusha
notb
imul
or
lock
dec
out
mov
arpl
or
lods
push
icebp
shlb
xlat
cs
cmpsb
and
push
xor
fcmove
inc
lock
shrb
lock
mov
mov
dec
mov
or
inc
mov
lock
not
push
shrl
imul
incl
enter
movd
mov
and
jb
rcrl
add
cli
add
ret
sub
movsb
sub
add
dec
jmp
imul
dec
movsl
sar
and
adc
and
inc
dec
add
xchg
push
pusha
jo
test
popf
or
xor
or
aad
pop
orl
bound
or
mov
loop
adc
lret
sub
ss
mov
adc
or
add
lock
jge
hlt
rep
ss
imull
mov
sub
adc
add
xchg
dec
or
cmp
mov
jae
orb
cmp
movsl
push
in
mov
jecxz
push
ljmp
ljmp
and
push
mov
dec
loope
lea
adc
add
jmp
mov
adc
jmp
pushl
insb
outsl
or
push
add
repz
jae
adc
and
push
rolb
outsb
jmp
bound
sahf
idiv
dec
mov
add
inc
adc
fsubp
repnz
insb
inc
jo
xor
xchg
scas
repnz
js
in
jl
lds
adcb
mov
xor
pop
js
popa
push
pushf
sub
hlt
adc
js
je
pop
mov
loop
or
sahf
cmpsb
xor
inc
xor
pop
adc
clc
jl
adc
push
push
dec
adc
push
and
sti
test
push
pop
outsl
inc
or
push
jbe
jle
pushf
outsl
xchg
push
sub
mov
or
out
sbb
hlt
cmp
cmp
mov
add
xor
lret
and
cmpsl
loopne
loope
fwait
cmp
into
and
call
ljmp
test
ja
adc
cli
test
add
sub
xor
mov
fld
lock
in
lock
rep
test
test
or
adc
sub
and
or
je
jl
push
ret
cmpsb
jmp
pop
dec
xor
xor
pop
xor
cmp
pop
add
push
hlt
push
sub
push
inc
xchg
cwtl
sub
jge
push
inc
or
push
lods
mov
jno
mov
mov
test
nop
dec
stos
lods
ljmp
mov
sub
dec
in
fidivl
dec
enter
add
mov
pop
lea
loope
insl
inc
movsl
in
js
add
rclb
sbbl
ret
adcb
int3
or
flds
xchg
adc
push
inc
push
mov
les
and
js
xor
push
push
clc
mov
pop
dec
push
xor
cmpsb
push
pop
lods
popa
hlt
rolb
pop
mov
enter
cmp
xor
shr
add
jmp
or
mov
lret
push
std
addb
add
imul
testb
sbb
adc
add
sub
sbb
mov
sub
ret
outsl
fcomp
and
sub
or
push
push
ljmp
or
int3
outsb
pop
pop
jge
call
mov
les
in
pop
aas
jmp
adc
xor
ficompl
outsl
jo
ljmp
adc
inc
add
or
sbb
out
fisubrl
fmull
push
imul
inc
adc
mov
jae
jno
inc
mov
inc
jno
popf
enter
and
icebp
or
sbb
pop
imul
int3
and
outsl
sbb
xor
cmp
inc
jmp
xorb
dec
jbe
jne
scas
dec
punpcklwd
add
mov
fisubrs
cmc
aas
sbb
daa
push
mov
movsb
inc
jb
push
rolb
addl
and
xor
adc
mov
xchg
inc
mov
adc
lods
test
dec
xorb
xor
out
outsb
outsl
push
push
ja
cld
and
add
sbb
or
or
pop
test
or
push
and
lcall
sbb
pop
fdivl
movl
std
mov
mov
cmpsl
and
add
leave
xchg
sbb
adc
push
out
add
cmp
and
push
add
pop
or
sbb
mov
ljmp
in
sub
ljmp
dec
dec
inc
loopne
pop
lret
lret
sub
or
cld
inc
mov
mov
sbb
or
mov
jle
adc
es
sarb
add
in
movsl
in
mov
jno
jne
je
addb
and
movsb
push
xor
fisubrs
rcrb
add
mov
fs
and
xorb
adc
mov
je
add
add
mov
icebp
add
fistps
and
xchg
mov
jae
adc
cmpsl
jmp
sahf
sub
adc
mov
sbb
xor
pop
add
push
and
and
inc
or
jne
inc
sbb
pop
dec
enter
insb
sbb
dec
xorl
inc
xor
mov
push
fwait
shlb
jl
lods
push
cmp
jg
filds
adc
push
push
mov
arpl
imul
punpcklwd
push
js
mov
les
das
push
or
add
add
ret
jg
pop
push
fmul
aas
add
popfw
sub
jbe
sbb
pushf
pop
pop
or
sbb
jp
add
bound
fdivrs
fidivl
push
adc
push
fistpll
pop
dec
sub
xchg
adc
sahf
rcrb
cmp
int3
dec
aas
fs
pop
jl
pop
enter
inc
sub
jb
movsb
sbb
xchg
or
fstl
cmpsb
jo
push
sbb
add
fmuls
pop
test
sub
pop
clc
and
clc
ljmp
add
out
lock
repnz
push
loope
lret
pop
sbb
mov
outsb
loope
fdivs
aaa
inc
inc
pop
xor
add
dec
inc
jl
in
cmpsb
fsubs
inc
mov
inc
loopne
gs
hlt
rclb
pop
cmp
ret
xchg
or
lret
cmp
jae
js
xor
je
xor
filds
push
lock
mov
mov
enter
or
xchg
sub
insb
inc
add
loopne
jcxz
push
fs
adc
loopne
xor
sbb
pop
cmpl
mov
stos
inc
cmpl
inc
push
mov
cmp
push
in
movsb
push
mov
andl
mov
loope
jo
xor
mov
dec
jl
ljmp
cmp
adc
or
pusha
xor
test
aas
push
mov
inc
cmp
mov
jb
mov
inc
test
and
les
xor
pushf
and
push
push
imul
stos
adc
nop
cmp
mov
scas
mov
test
je
mov
cltd
aam
push
or
push
adc
cmpl
mov
out
jl
int3
cmc
stos
jp
jmp
cmp
or
je
xchg
pop
fs
pop
je
mov
sbb
fisubl
jmp
outsl
sub
les
iret
shl
add
lods
orb
shlb
jg
push
enter
jo
enter
repnz
adc
jae
nop
pop
adc
adc
and
push
fisubs
jecxz
dec
or
add
and
shll
fcoms
adc
add
jmp
xor
and
inc
cmp
sbb
sbb
and
in
fsubrl
and
jne
push
test
xchg
ret
and
lahf
xchg
enter
lahf
sub
inc
cs
mov
insl
add
or
loop
sub
xchg
jns
aas
mov
fcomps
ficompl
jp
jb
cmpb
pop
repnz
sub
and
gs
xchg
lcall
outsl
inc
mov
ss
cld
ret
mov
jb
push
cmc
jne
loope
pop
inc
cmp
jae
push
cmp
jl
mov
inc
sbb
sbb
sbb
adc
add
mov
cwtl
xchg
jle
testb
xchg
mov
clc
push
mov
popa
test
ljmp
jb
pop
and
movsb
sub
and
rorl
push
imul
pusha
in
dec
dec
add
adc
or
enter
ss
mov
icebp
cmp
scas
mov
gs
mov
inc
dec
push
data16
xor
frstor
lret
cmc
lods
mov
out
sub
repnz
or
inc
xchg
xlat
jns
fisubrs
jmp
frstpm(287
addl
push
arpl
divl
dec
xor
jne
mov
loope
test
pop
rorb
jle
xchg
or
filds
jmp
inc
into
nop
push
inc
pop
sub
inc
dec
dec
mov
subl
enter
jmp
inc
in
mov
mov
push
mov
jle
add
xchg
or
jne
dec
inc
push
ret
f2xm1
cmp
push
mov
fs
cmp
jg
pop
hlt
pusha
pop
dec
ret
jle
aam
dec
add
or
and
test
ds
pop
negb
sbb
dec
in
js
insl
jmp
cmp
fstl
orl
out
push
mov
hlt
sub
loopne
loopne
mov
lock
jmp
popa
ret
mov
cmp
mov
rclb
jb
push
cmp
push
pop
ret
inc
test
xor
out
cmp
notl
ljmp
and
push
dec
or
js
ss
add
pusha
sarl
es
lret
push
mov
push
mov
and
cmc
add
fstpl
movsb
imul
mov
sbb
and
nop
adc
xlat
je
lcall
lock
mov
and
cmp
jb
testb
cmp
rclb
push
add
loopne
jge
push
jmp
popf
push
sbbl
je
js
cmpl
or
pop
adc
daa
mov
push
or
push
in
push
cwtl
inc
mov
push
popf
rcr
xchg
xchg
cmp
xor
out
inc
sub
jno
adc
mov
subb
inc
aas
jne
or
pop
and
shrb
fucomp
inc
inc
mov
add
push
add
xor
inc
adc
imul
inc
popa
inc
push
push
pop
push
mov
jecxz
movsl
adc
icebp
mov
and
iret
sub
pop
sub
hlt
jo
in
ja
hlt
je
xchg
cli
adc
fidivrl
lea
lea
or
sub
cmpsl
es
add
test
ret
sbb
jmp
popl
into
xchg
negb
mov
rcll
or
adc
cwtl
push
push
daa
adc
sarl
in
jmp
inc
mov
inc
lahf
dec
dec
and
xor
add
sub
pop
jo
cwtl
loop
mov
inc
aas
or
xor
pusha
call
pop
pusha
ljmp
andb
repz
cmp
xor
out
jmp
xchg
int3
push
pop
sub
dec
dec
push
or
and
ret
je
pusha
iret
xorl
push
or
adc
outsb
and
sbb
sbb
pushf
pushf
pushf
sub
xor
pushf
pushf
pushf
sbb
cmp
popf
mov
addl
cmp
cmp
dec
push
push
pop
dec
dec
dec
cs
dec
dec
dec
dec
insb
jo
js
add
jl
xor
and
sbb
mov
xchg
cwtl
and
dec
xor
leave
test
sub
sub
adc
cmp
add
push
imul
fldt
popa
and
pop
in
mov
or
call
adc
in
adc
rorb
sbb
sbb
xor
add
or
sbb
mov
pop
inc
adc
push
push
jo
add
xchg
int
cmp
ror
mov
xchg
add
dec
jne
out
sbb
popa
mov
sbb
inc
lret
xorb
or
daa
pop
outsl
xchg
cli
pop
movsl
dec
cmp
iret
jb
popa
mov
xor
jb
sbb
push
push
push
mov
dec
pop
mov
int3
insl
adc
les
dec
repnz
adc
push
gs
fs
incl
fcoml
dec
clc
lcall
add
cltd
jne
imulb
or
and
inc
mov
and
hlt
out
add
xor
pop
inc
and
dec
pop
sub
jecxz
lea
pushf
test
je
sub
or
mov
ret
aad
inc
sbb
mov
outsl
pop
push
add
fmuls
in
shrl
dec
push
popf
pop
mov
xor
sbb
popa
mov
cltd
xorb
pusha
outsb
into
movsb
out
or
sbb
sub
shufps
cmp
pushf
negb
sbb
dec
sub
inc
push
dec
mov
xchg
and
movsl
inc
test
jge
rclb
add
adc
gs
aaa
push
test
sbb
repz
push
mov
and
mov
push
ss
and
arpl
xchg
dec
jecxz
pop
sbb
pusha
mov
mov
pslld
push
aam
jbe
push
bound
or
addr16
xor
inc
jl,pt
lock
and
mov
dec
insb
sub
mov
dec
and
adc
xor
mov
mov
push
loopne
stos
mov
cs
push
cmpb
add
and
dec
divb
inc
or
adc
outsb
sbbl
adc
pop
scas
adc
and
jl
cmp
jo
imul
pop
insb
xchg
or
jmp
enter
xchg
inc
fs
xor
stos
cli
pop
sbbb
loope
orl
js
push
xor
mulb
inc
call
xchg
mov
push
pusha
out
mov
sbb
shlb
dec
cmp
gs
daa
mov
loopne
loope
jnp
xor
ret
jp
cmp
add
cld
pop
and
xchg
or
cmp
sbb
sar
push
into
daa
jecxz
mov
shlb
in
push
push
adc
jp
mov
push
lea
addb
cmp
jle
in
outsl
lods
mov
add
sar
mov
or
mov
cli
pusha
ret
mov
sahf
sahf
jne
fsubs
aad
inc
xchg
xor
shlb
adc
add
xchg
sbb
mov
inc
or
ljmp
jmp
xor
mov
jns
sub
sub
dec
leave
add
dec
inc
rorb
loope
pop
addl
pop
mov
or
inc
mov
and
push
addr16
mov
cmp
pop
cmp
in
lods
mov
loope
add
adc
push
hlt
mov
loopne
add
sbb
dec
dec
and
ja
cmp
add
icebp
or
insl
cmp
fsubs
push
dec
jge
in
cmp
clc
insb
orb
mov
call
jmp
push
dec
cli
cltd
cmp
push
jo
adcb
fimull
sbb
cmp
jo
mov
cmp
orl
test
cwtl
aam
adc
jp
push
lock
xor
sarl
cmp
test
xchg
movsb
jo
cmpl
add
cmp
pusha
in
push
or
push
add
jmp
xlat
mov
sbb
scas
sub
push
icebp
clc
cltd
cmp
cmp
xchg
or
pop
cmp
movl
sbb
out
jp
sub
int
push
jmp
pop
and
inc
movsl
stos
dec
pop
lock
test
inc
add
iret
aad
cmp
sbb
ffreep
and
fisttps
cmp
lcall
adc
js
lahf
inc
mov
sbb
dec
xchg
push
je
add
or
mov
popa
mov
push
xchg
jbe,pt
ret
mov
andl
repz
mov
push
cmp
mov
scas
pushl
adc
cli
or
jnp
jbe
inc
mov
adc
cmpl
fmuls
dec
pop
movsl
sub
and
inc
ja
inc
pop
inc
add
repnz
jmp
cmp
or
jmp
dec
lods
xor
in
cs
shll
sahf
sbb
cmp
rclb
inc
lods
push
sbb
divb
or
inc
inc
sbb
or
dec
adc
sub
add
push
add
nop
inc
aas
mov
loopne
xchg
dec
dec
stc
pop
mov
cmp
add
jbe
pop
xchg
push
xchg
sub
loopne
repnz
mov
je
push
xchg
sub
lock
scas
int3
out
in
mov
std
add
stos
jno
xchg
inc
lock
fldl
lea
int
je
add
jmp
or
and
jae
movsb
sysret
or
lret
xorb
bnd
cltd
sub
rorl
bound
ljmp
js
gs
adc
xor
rorb
mov
pop
inc
mov
inc
cli
inc
cmpb
or
jg
jae
mov
mov
cld
les
pop
and
pop
and
add
ja
sbb
loope
mov
dec
push
leave
je
aaa
add
xor
xor
add
sub
ret
pop
and
mov
sbb
pop
mov
ret
sarb
or
fistl
negb
xor
xor
popf
sub
and
adc
and
int3
jmp
ret
cmp
adc
push
inc
and
push
lahf
or
sbb
and
cmpsb
push
mov
pusha
adc
sub
ss
jo
sbb
push
pop
inc
mov
ficoms
jno
jge
arpl
into
mov
cmc
or
sbb
push
and
mov
inc
dec
sbbb
mull
dec
inc
scas
shrb
add
add
mov
imul
push
pop
inc
xor
ret
mov
sbb
push
ja
or
mov
jl
dec
jp
inc
js
sbb
hlt
pop
aam
xchg
cmpb
aaa
xor
xor
xor
sub
sbb
ja
sub
cmp
pop
orl
or
scas
jns
notl
or
pop
mov
mov
mov
gs
lods
es
repz
pop
cmp
pusha
sbb
lods
jg
rclb
int3
jl
in
mov
in
stos
hlt
adc
jge
addr16
pop
push
test
sbb
and
adc
mov
lock
dec
data16
sahf
sbb
fsubs
sub
pop
sbbb
loop
lea
xlat
xor
cld
pop
pop
mov
inc
and
jg
mov
mov
mov
add
out
lahf
add
cmc
clc
je
xor
fcompl
mov
cmpsb
cltd
xchg
add
sub
lcall
lock
push
push
ret
inc
js
pusha
loop
mov
mov
inc
mov
jmp
push
and
imulb
lods
je
inc
cmp
shlb
testb
test
add
js
pop
sbb
dec
mov
jmp
mov
dec
sub
dec
and
enter
test
ds
mov
mov
push
call
leave
xchg
insb
mov
test
stos
rcrl
dec
inc
imull
loop
dec
xor
inc
jmp
icebp
xor
jmp
jge
mov
out
cmp
loop
jle
mov
fadd
scas
xchg
insb
loop
ret
push
jp
sub
pop
movsl
cmp
jmp
and
pop
add
sbbb
push
gs
xor
sbb
inc
nop
es
push
jnp
out
js
push
cmp
sub
daa
sbb
mov
sub
out
jno
icebp
adc
pop
test
push
loope
mov
xchg
jbe
add
pushf
sti
in
mov
pop
cmp
sti
adc
mov
jbe
subb
and
sub
mov
pop
mov
lods
dec
out
cmp
out
inc
loopne
inc
dec
cmp
dec
rolb
jno
scas
fs
shrb
add
aaa
push
movb
push
andb
sub
lds
adc
enter
jmp
mov
mov
cmp
cld
dec
mov
cltd
cmp
in
sbb
in
aas
repnz
das
adc
pop
fwait
and
inc
addr16
es
push
out
jle
inc
cmpb
add
mov
sub
jl
sub
or
pop
icebp
in
push
je
gs
and
jne
or
add
jle
data16
or
dec
xchg
push
nop
jno
cmp
test
icebp
push
inc
clc
xchg
sub
add
test
std
jne
and
and
fcmovnb
test
dec
or
ror
test
js
arpl
inc
adc
inc
test
pop
daa
or
or
jo
pop
icebp
xor
pop
and
inc
push
loop
movsb
push
dec
hlt
xor
outsb
sti
fisttps
popf
pushf
pop
sub
je
push
popf
ds
cmp
add
adc
stos
ljmp
push
data16
pop
imull
and
pop
je
mov
cmp
adc
inc
mov
dec
data16
jp
lret
or
mov
push
or
sbb
es
xchg
push
or
adc
into
pushf
in
repz
dec
add
and
test
and
xchg
add
or
or
nop
in
divb
pushf
and
shll
dec
xor
adc
or
pop
mov
and
shr
add
in
and
jmp
sbb
cmpl
and
or
mov
icebp
lock
test
adc
hlt
and
add
adc
test
xor
inc
mov
mov
je
sbb
or
je
js
xchg
sub
inc
jmp
push
fstp
mov
adc
lock
and
movsb
pop
mov
jl
and
fcmovne
int3
mov
pushf
jge
add
or
jmp
jnp
int
movaps
and
sar
orl
and
jge
add
es
sub
loope
flds
and
pop
adc
push
mov
pusha
loope
pop
sub
sub
inc
jecxz
pop
fisttpll
rclb
pusha
fldl
add
push
or
push
mov
insb
loop
lea
adc
es
adc
sub
test
out
test
mov
add
sub
xor
mov
dec
je
add
dec
jmp
call
push
scas
jmp
push
mov
xchg
inc
or
mull
imulb
push
subb
xorb
sbb
jmp
push
and
ret
or
mov
inc
push
fldenv
or
mov
or
or
add
pop
arpl
sbb
and
inc
fistl
neg
or
xor
cmp
xor
sub
cmp
shll
inc
aam
cmp
push
aaa
sbb
jbe
fcoms
mov
and
les
sub
sbbl
push
fwait
rcrb
push
or
mov
lods
sbb
test
int3
jge
test
adc
repz
mov
xchg
sbbb
add
add
xchg
pop
test
clc
mov
fstpl
mov
push
add
cli
mov
aas
rclb
jge
ffree
repz
imul
mov
inc
loopne
jne
fisttps
add
enter
pop
xchg
repnz
push
inc
es
test
testb
mov
shrl
sbb
jp
dec
in
jo
sbb
loopne
mov
stos
cmp
jp
push
sahf
jmp
pop
lock
and
sbb
std
repnz
inc
jno
loopne
adc
and
test
add
rcrb
pop
inc
rorb
add
adc
in
mov
push
add
mov
pop
outsb
mov
sbb
pop
xchg
sub
loop
ret
pop
or
dec
jl
ret
push
movsb
dec
and
mov
mov
jg
xor
or
test
cmp
dec
faddl
popa
je
aam
jl
jecxz
add
mov
or
push
jmp
inc
jnp
xor
sbb
hlt
adc
pusha
and
add
sub
mov
dec
jp
push
rcrb
add
inc
or
out
outsl
inc
pusha
push
ss
push
or
lds
mov
dec
inc
and
pop
fcmove
push
pop
add
or
pusha
sub
or
adc
and
jns
or
dec
or
loope
roll
or
mov
sbb
loopne
fisubrl
imul
jg
scas
and
lea
sub
mov
or
mov
mov
pop
and
sub
sbb
adc
mov
add
mov
out
test
sahf
fldl
inc
adc
adc
add
sbbl
or
mov
mov
jne
mov
popa
xor
cld
adc
test
sub
loopne
loop
cs
loope
pop
xchg
jbe
ret
sahf
push
rolb
mov
or
ds
sbb
fists
enter
mov
sbb
inc
repnz
loope
mov
pop
fadds
into
inc
xchg
cmp
ljmp
push
sub
imul
movsb
jb
aad
or
mov
push
sub
sbb
push
lock
stos
inc
add
or
dec
rorl
dec
jle
out
mov
incb
jne
pop
or
negb
or
push
add
in
sbb
fsubrs
sub
ljmp
incl
sub
dec
or
data16
mov
or
es
mov
pop
nop
cmp
dec
jae
orb
and
xor
ficoms
push
mov
or
add
inc
hlt
or
sub
loopne
fcmovne
fwait
sahf
adc
xchg
and
sbb
les
add
cmp
or
jle
call
call
fldpi
xor
sub
sub
popa
fistpl
push
mulb
shlb
jo
pop
cmp
push
inc
aaa
jno
xchg
xchg
and
adc
or
and
inc
dec
mov
jle
fwait
pop
mov
jbe
out
add
push
mov
test
ret
jbe
fwait
add
mov
mov
jo
push
jmp
mov
mov
movsb
shlb
mov
sub
sbb
push
or
insl
push
mov
les
or
mov
jnp
in
xchg
xchg
cltd
push
inc
push
push
dec
enter
adc
add
add
sbb
rclb
pop
gs
push
hlt
jo
mov
mov
aaa
xor
or
mov
xchg
ror
lods
push
dec
mov
cmpl
loop
jnp
aaa
adc
enter
or
add
loope
xchg
lods
or
or
xchg
sbb
imul
stos
mov
sub
jle
inc
inc
ss
rorb
or
adc
loop
inc
push
xor
clc
ret
inc
sub
dec
pop
xchg
pop
lea
sub
scas
cwtl
dec
or
popf
add
push
or
or
add
jmp
aas
sub
and
mov
inc
add
push
daa
mov
test
clc
pop
test
jne
or
jl
mov
roll
jbe
stos
test
xchg
inc
xor
jp
jmp
ret
xor
cmp
cltd
and
add
lret
mov
cltd
roll
mov
adc
add
pop
ficompl
mov
pop
pusha
sub
inc
shl
cltd
and
pop
pcmpeqb
shl
not
test
add
add
outsb
push
cltd
insb
inc
out
pop
and
mov
out
mov
inc
push
cmpsb
xor
insb
sub
test
pushf
les
add
nop
loop
enterw
and
cli
sbb
cmc
mov
cmp
dec
outsb
cli
repnz
mov
jbe
push
push
mov
sarb
loopne
inc
movsb
pop
ds
push
sbb
add
xchg
hlt
les
xor
inc
mov
sbb
sti
cmp
dec
dec
stos
inc
pop
mov
in
lar
mov
dec
adc
movsl
cmp
rorl
nop
mov
xor
jae
dec
popa
cld
out
and
js
std
sub
not
les
xor
dec
mov
push
or
mov
andb
push
push
jl
inc
jo
mov
mov
jl
xor
cld
adc
xchg
aam
and
fildl
cmp
mov
test
push
inc
and
aam
and
lcall
xchg
add
cli
comiss
push
or
push
sbb
pop
add
jg
xor
inc
lock
in
ret
xor
jecxz
push
mov
sbb
shrb
mov
or
inc
mov
sbb
pop
out
push
scas
jecxz
mov
lods
gs
popa
cmpb
out
xor
lea
iret
and
mov
inc
jno
cmp
scas
cld
sbb
add
ret
jge
jmp
pop
scas
shl
loopne
adc
loop
call
xor
and
stc
sub
mov
in
push
dec
or
loop
jg
outsl
and
inc
sbb
jns
scas
mov
pop
inc
leave
or
and
add
and
adc
add
lods
cld
push
sbbb
cmp
lret
clc
or
add
mov
nop
pop
add
or
dec
mov
jl
dec
ljmp
cmpsb
hlt
stos
jge
xor
push
adc
imul
add
movsb
mov
pushf
jmp
fimull
pop
mov
filds
nop
and
mov
mov
pop
sub
or
in
jne
inc
jmp
lock
sub
or
xchg
add
fildll
mov
sub
cmp
ja
mov
pop
push
dec
jmp
fs
movsb
in
push
and
add
add
loopne
ss
sbb
bound
mov
mov
ds
and
sbb
xor
xchg
out
adc
jmp
cmpsl
mov
mov
mov
inc
xchg
pusha
sub
and
call
cmp
jle
std
cmp
jle
cmp
push
xor
sahf
cmpsl
push
jmp
dec
push
mov
jne
sub
xchg
jno
xchg
xor
sub
sarl
fs
inc
push
jmp
jno
add
sbb
xchg
outsb
cmpsb
or
insb
ss
mov
pop
jge
mov
cmp
test
aam
and
divl
nop
add
jne
stos
dec
sbbb
je
jmp
mov
or
jge
jmp
and
dec
mov
call
lock
and
out
push
sub
mov
or
pop
mull
orl
pop
aas
push
lock
or
sub
cmp
sbb
jo
test
mov
je,pn
scas
call
fmuls
jge
mov
mov
fldenv
div
incl
cmpb
jl
incb
dec
mov
cmp
rcr
hlt
pop
mov
and
ret
rolb
cld
push
mov
cmp
sbb
and
sub
aad
rolb
or
sub
jbe
jecxz
add
pushf
jmp
push
cwtl
pop
xor
xor
mov
ds
loope
dec
xor
loopne
fiaddl
jne
xor
inc
mov
push
push
cwtl
jge
push
imul
orb
jae
lcall
xlat
test
cmp
adc
cmp
adc
nop
sbb
jmp
mov
jge
jle
lock
xor
inc
adc
jne
jno
lods
inc
add
dec
test
lods
sarl
push
add
sbbl
mov
inc
aad
test
add
mov
dec
mov
pop
cmpb
fsubs
push
add
fs
icebp
and
daa
mov
push
xor
xor
ret
and
adc
nop
jbe
push
andl
adc
out
jle
iret
sbb
ja
pop
or
or
mov
movb
testl
jne
enter
jmp
fmull
les
test
into
jne
scas
push
lock
or
cmp
cmp
jne
lock
add
jne
push
pop
and
xor
loop
cwtl
or
inc
rcll
dec
add
adc
lea
xchg
push
push
scas
sbb
mov
cld
lock
dec
sub
lock
ja
es
test
js
subl
call
dec
cmp
mov
fs
xchg
add
push
push
xchg
aaa
dec
test
js
mov
xorb
aam
gs
lds
lods
add
or
shr
loop
cmp
fidivs
mov
jg
mull
into
or
adc
inc
mov
les
pop
xorb
adc
push
mov
mov
decl
fcom
insl
fadd
loopne
shr
or
mov
sbb
test
jne
insb
mov
cltd
push
add
push
icebp
mov
mov
and
dec
mov
insl
add
jge
cmp
cmp
adc
sbb
sar
jg
adc
jmp
push
adc
call
mov
clc
bound
shlb
and
or
fmull
mov
mov
dec
add
cmp
or
sub
jmp
inc
lret
into
jmp
scas
imul
mov
jae
dec
and
les
test
rcl
inc
int3
xchg
ficomps
adc
jmp
sub
add
notb
mov
lsl
adc
testb
call
push
pop
shll
xchg
add
xor
pop
push
sub
add
js
imul
or
jle
lods
stc
mov
movsb
mov
cs
inc
jbe
mov
xchg
jne
cmp
cmp
add
scas
push
cmpb
mov
mov
pusha
add
es
rorl
sahf
pop
cmp
stos
adc
in
push
or
pop
push
xchg
xchg
adc
adc
lret
cs
or
ss
fimull
je
or
out
decl
decb
xor
add
sbb
sbb
add
or
test
inc
mul
pop
add
cmp
call
sub
xor
imull
rol
pop
jae
sbb
clc
iret
xor
or
xor
call
add
lahf
xor
cmc
and
add
add
push
dec
rclb
push
xchg
mull
shrb
adc
and
imul
insb
subl
hlt
and
test
sub
and
xchg
mov
pop
pop
mov
shlb
fdivs
or
add
daa
push
pop
adc
push
xchg
cmp
test
mov
setg
mov
cmpl
out
clc
add
mov
and
sbb
lcall
movb
push
add
sub
mov
cmp
jecxz
iret
sbb
xorb
mov
insb
dec
xlat
xchg
es
pop
add
add
les
cmp
jmp
sub
add
jbe
out
add
ljmp
roll
test
push
fstl
mov
push
hlt
dec
jns
les
sub
inc
fs
sub
idiv
xor
push
or
movsb
cmp
sub
add
or
add
push
sbb
add
push
popa
xor
addr16
cmp
sub
jo
mov
mov
mov
push
adc
and
call
xor
cwtl
jmp
ja
or
ret
jbe
enter
mov
ds
mov
aam
sub
adc
loopne
add
lahf
adc
iret
xor
shlb
enter
insb
xchg
add
pop
xlat
and
adc
jbe
dec
inc
push
mov
bound
sbb
push
repz
and
push
add
mov
inc
jge
xor
sbb
push
mov
jge
adc
mov
add
imul
pop
pop
jle
lock
fldl2t
call
mov
jge
push
xor
movsb
xchg
adc
pop
js
add
mov
lret
lret
xor
or
nop
sbb
outsb
adc
loopne
orb
sar
fmull
out
mov
sub
mov
xchg
cli
cld
push
mov
sub
inc
add
and
pop
push
xor
push
mov
loopne
js
inc
dec
frstor
xor
dec
and
add
cmp
scas
jo
movb
and
gs
je
dec
mov
dec
fwait
rolb
sbb
jecxz
mov
jg
ret
daa
xor
sbb
shll
cmp
sahf
ja
and
mov
or
mov
scas
test
cmp
xor
aam
add
addl
xlat
or
or
adc
adc
mov
ja
sub
lret
jl
sub
adc
or
test
dec
jo
cmp
push
movswl
les
xor
pop
cmp
loopne
dec
mov
add
mov
insl
cld
add
dec
shrd
push
jle
outsb
add
cmp
xor
enter
jl
cmpsl
clc
mov
rcl
mov
or
cmp
xchg
in
imul
add
dec
jmp
xchg
adc
pop
into
clc
sub
test
cmp
or
rorl
incb
push
dec
push
pusha
and
mov
add
push
or
xchg
lock
cmp
and
mov
pop
sbb
js
jg
clc
add
jb
push
sub
or
inc
adc
neg
cmp
mov
lock
and
inc
shll
mov
lods
nop
cmp
add
jbe
mov
mov
mov
outsb
add
push
jg
lods
jb
outsl
in
ret
dec
dec
inc
dec
pusha
and
xchg
pop
or
or
lods
jo
lcall
push
popa
imul
cmpsb
stc
test
inc
test
dec
push
es
mov
add
sahf
mov
icebp
sbb
shll
push
jne
loop
inc
ret
call
lock
push
and
adc
pushf
jp
inc
or
add
or
inc
and
inc
adc
inc
daa
jp
loop
jge
mov
jne
add
mov
vpcmpgtd
mov
pop
xor
add
add
out
into
mov
es
xchg
adc
loopne
test
pop
dec
shrl
xor
pop
push
rolb
jne
cmp
dec
loop
push
sub
inc
lret
jbe
rol
or
shlb
xor
lea
mov
mov
enter
fldl
rcll
push
jmp
insl
cmp
add
cld
jl
lock
call
or
popl
mov
pop
incb
or
insl
or
loop
mov
jbe
sbb
jns
testb
cmp
clc
gs
or
je
data16
fwait
fwait
fwait
repnz
popa
je
inc
je
jnp
and
out
xor
xchg
or
stc
es
dec
push
in
add
sub
and
aad
push
or
inc
inc
das
mov
dec
jnp
nop
adc
push
adc
add
mov
call
jne
fmull
insl
push
pop
clc
fstps
add
pop
xor
out
dec
imulb
mov
cmp
repnz
add
rol
add
push
pop
ret
xor
dec
pushf
add
push
or
clc
inc
mov
or
je
ds
mov
dec
inc
push
inc
mov
mov
ja
jmp
sahf
std
das
xchg
je
sbb
cmp
js
pop
ds
xor
xchg
sarl
xchg
shlb
hlt
xchg
hlt
push
xchg
sbb
jo
cmp
push
addb
cmp
add
ret
dec
lahf
xor
cmpsl
hlt
mov
lahf
dec
push
sub
aas
sub
push
mov
shrb
popf
ret
inc
outsl
pop
push
sub
enter
xchg
aaa
je
xchg
imul
and
mov
push
int
out
mov
jbe
sub
or
rorb
hlt
sub
mov
pop
inc
mov
loopne
iret
xor
in
jmp
insl
loop
dec
inc
mov
bound
mull
mov
cmpl
mov
cmp
dec
test
push
mov
push
mov
or
or
pop
push
push
inc
sarl
lods
adcb
popa
push
ret
test
lret
pop
adc
dec
imul
fsubl
pop
or
push
fdivs
jge
pusha
cmp
adc
mov
fidivrl
aas
adc
mov
add
sbb
and
je
adc
sub
mov
xchg
xchg
cmp
or
mov
mov
icebp
dec
and
pop
mov
sahf
inc
fsubl
add
xor
loopne
and
sub
adc
int
ffreep
dec
jne
push
push
jmp
or
jmp
testb
je
push
ljmp
inc
mov
adc
shl
sbb
ficompl
int
jae
or
xchg
cmp
jne
dec
arpl
xchg
sbb
add
movsb
hlt
dec
popf
mov
sbb
les
push
jnp
shll
loopne
pop
push
sbb
jne
in
inc
subl
push
adc
cmpsl
mov
and
jns
es
push
into
push
jns
pop
sub
aad
add
cmp
jae
in
cld
mov
dec
dec
and
or
add
mov
jecxz
push
push
jbe
mov
addr16
jns
jne
arpl
mov
cwtl
push
jp
cmpsl
gs
cmp
add
mov
mov
adc
push
sbb
mov
out
jae
faddl
movl
push
pop
and
xchg
roll
xlat
cmpsb
mov
cmp
xchg
add
sbb
imul
xor
ds
je
push
inc
mov
add
fisubrs
jl
dec
fiadds
call
les
pushl
icebp
das
mov
push
inc
jmp
lds
adc
or
fwait
push
popa
ret
outsb
bound
inc
inc
test
data16
sub
push
daa
dec
jb
push
push
cmp
and
iret
and
scas
rorb
outsb
test
jns
mov
inc
jmp
in
cld
jo
adc
mov
add
jnp
adc
jmp
adc
outsl
fildl
cmp
inc
in
adc
test
inc
sub
das
add
xchg
repnz
push
push
inc
pop
fsubl
jo
xchg
mov
mov
push
pop
mov
or
jl
lret
mov
dec
cmp
movsb
cmp
sub
jmp
nop
cs
repnz
sahf
mov
outsb
adc
sysexit
popa
cmp
ljmp
inc
jmp
cwtl
loopne
imul
or
sbb
cmpsl
add
sub
fcoml
sub
movb
xlat
sbb
or
or
push
pop
and
xor
add
movb
add
mov
ret
inc
push
sbb
lret
xor
sub
mov
js
sbb
adc
xor
leave
adc
arpl
adc
push
inc
xor
jmp
pushf
xor
ja
sti
and
push
and
insl
push
xchg
and
inc
testb
cmpl
sbb
adc
inc
out
and
js
pop
movsb
orl
test
mov
sub
mov
mov
stc
mov
aas
lods
decl
dec
cmp
lea
or
xor
shll
std
out
pop
add
or
push
sub
ja
or
fcmovb
jmp
shr
or
cwtl
jns
das
mov
add
add
or
bound
scas
push
bound
imul
sub
or
mov
fildl
cwtl
push
inc
int3
cld
push
aam
push
xor
adc
fnstcw
inc
pop
sub
lret
popf
pop
adc
testl
sbb
cli
mov
adc
mov
or
cs
push
xor
mov
inc
rorb
cltd
repnz
orb
xchg
jb
enter
adc
out
ret
mov
inc
jbe
movb
mov
ss
fucomp
es
shr
adc
loope
xor
shl
andl
adc
xor
test
add
ds
clc
cmp
stos
imulb
or
test
mov
cmp
test
je
mov
call
adc
and
or
dec
inc
push
pop
cmp
fisubl
or
call
fdivs
out
xor
mov
mov
and
rcrb
jne
popa
cmp
add
sbb
push
cld
imul
fsubrl
add
add
call
add
xorb
cmp
fiadds
mov
push
xchg
std
or
cmp
rcr
jmp
push
jle
inc
push
loopne
cld
inc
mov
xchg
sbb
or
loopne
mov
out
mov
cmp
lret
mov
leave
inc
xor
fistpl
jg
lock
jl
fdivl
cmpb
jl
xor
cmpb
idiv
sub
inc
add
mov
xchg
adc
add
xlat
push
rcll
inc
subb
push
adc
inc
push
push
mov
enter
and
xchg
nop
iret
ds
inc
adc
fnstenv
push
imul
and
test
sahf
aam
pop
or
loopne
inc
cmp
sub
and
or
adc
jo
rclb
call
jbe
dec
add
rcrl
pop
and
enter
out
aaa
push
test
jne
mov
xchg
jmp
add
shll
in
fisttps
test
je
mov
add
or
cmpsb
mov
or
popa
mov
or
push
pushf
sub
pop
mov
jne
mov
or
xor
or
popa
je
rolb
push
jp
push
hlt
aam
xchg
or
movsb
fs
add
and
mov
decb
mov
dec
dec
or
inc
decl
jge
inc
inc
div
fdiv
fiaddl
jns
sub
inc
sbb
xor
addl
sub
sbb
push
push
inc
imul
fnstenv
icebp
sbb
movsb
push
sbb
adc
test
and
lcall
pop
jnp
mov
daa
pop
pop
pop
lds
stc
inc
jae
or
jae
lods
rcl
ljmp
dec
and
shr
test
pop
sub
stc
test
inc
jge
jmp
mov
cld
je
push
jp
not
je
ljmp
pop
cwtl
push
cmpsl
lds
ljmp
or
jo
inc
insb
adc
pop
xor
adc
rolb
sub
jne
xchg
push
jge
ljmp
pop
gs
int
or
into
jbe
jns
dec
adc
push
dec
push
dec
adc
pop
push
ds
adc
push
mov
add
push
or
xchg
adc
add
icebp
das
push
cld
jno
leave
insb
es
adc
setle
adc
inc
cwtl
pop
and
and
stos
and
lret
loope
popa
mov
jp
add
cs
mov
push
cld
and
fcmovne
aam
dec
pushl
dec
fisubs
jg
in
sub
clc
inc
jge
rclb
sbb
leave
in
sbb
testb
inc
jp
lock
incb
pop
clc
or
je
das
mov
mov
mov
and
pop
adc
es
mov
je
sti
jmp
movsb
and
push
cmp
ja
add
cmp
adc
xchg
hlt
iret
ret
cmp
jne
push
shll
leave
fistl
les
lea
rcrl
and
dec
add
sub
push
or
mov
push
sbb
mov
cmp
add
mov
xchg
dec
aaa
pop
fistl
mov
daa
incb
inc
neg
je
inc
lea
push
pop
cwtl
mov
mov
scas
mov
adc
dec
adc
xor
adc
mov
dec
pop
cmp
jne
sub
mov
std
push
pusha
decb
sbb
ds
jmp
mov
cmpl
mov
pop
add
data16
scas
lods
fwait
or
test
mov
dec
jae
femms
push
outsb
pop
mov
xchg
sahf
test
xor
xor
addl
adc
push
pop
add
in
or
cltd
add
nop
add
nop
inc
pop
add
add
adc
sbb
or
lea
cmp
sar
dec
mov
push
rcl
rcl
repz
repz
xlat
fcomp
and
out
sti
fstpt
mov
jns
data16
inc
add
adc
sub
adc
data16
cmp
mov
jl
pop
rorb
sub
orb
mov
mov
dec
push
add
push
inc
push
add
fisttpl
aas
and
sahf
or
sub
push
bound
push
inc
out
divb
in
cmp
frstor
icebp
adc
idiv
pop
idivl
push
xor
push
test
shrb
testb
add
adc
push
push
sbb
add
xor
mov
imul
movsb
mov
jmp
pop
sbb
dec
lea
or
mov
inc
js
mov
and
or
fstpt
mov
jmp
adc
mov
fisttps
sub
insl
outsl
loopne
sub
mov
xor
aaa
mov
pop
sar
fisubs
addr16
out
or
pushf
push
jp
mov
add
jb
inc
push
or
dec
rcll
in
xor
inc
add
xchg
adc
mov
test
icebp
testl
in
out
loope
into
and
lea
pop
sbb
les
andl
decb
xchg
gs
add
mov
add
mov
inc
lods
pmulhuw
xchg
int
outsl
ljmp
or
mov
adc
jne
inc
mov
outsl
mov
test
rolb
nop
pop
pop
js
mov
mov
or
mov
or
or
lea
sub
cmp
fcoms
movsb
sub
pop
repz
addl
mov
jge
fimull
adc
jl
and
and
adc
xchg
data16
cld
pop
stc
jle
jle
orb
iret
jne
enter
and
push
rolb
sar
sbb
or
and
hlt
rorb
and
mov
push
push
push
lret
dec
jae
add
inc
xchg
lods
rclb
xchg
or
push
scas
ror
ss
shrl
js
add
in
out
xchg
mov
or
dec
or
add
inc
sahf
dec
sub
lock
sub
repnz
repnz
xchg
cli
cli
inc
cli
div
and
les
loop
or
push
or
call
mov
xor
mov
xchg
nop
lock
ret
xor
inc
push
clc
cli
push
dec
mov
cmpsb
leave
mov
xor
adc
rolb
cs
inc
adc
idivb
data16
inc
mov
xchg
jb
loopne
cmpsl
add
push
imul
dec
sbb
repnz
pushw
je
dec
pop
sub
loop
out
jge
xchg
cmp
mov
sbb
sbb
movsb
pop
mov
repnz
xor
xor
sbb
jae
jne
fdivrs
aam
inc
xchg
sub
dec
ss
adc
push
sub
jl
mov
xor
call
push
adc
push
cmp
cld
lea
xchg
lret
fcmovu
mov
data16
insl
mov
inc
add
lods
rolb
repz
mov
idiv
hlt
dec
add
hlt
inc
sbb
sbb
negb
test
xor
test
inc
mov
out
or
xchg
sbb
inc
xchg
movsb
leave
pop
cmp
jne
test
ljmp
add
mov
and
mov
adc
push
adc
pop
scas
mov
mov
adc
inc
mov
and
add
inc
mov
push
add
push
nop
ss
clc
mov
adc
test
sub
in
dec
cmpsl
sub
sbbb
dec
inc
loop
dec
fisttpl
jb
orl
cmpsb
mov
cli
loop
fcomps
xor
fisubs
data16
inc
imul
jmp
pop
dec
je
loopne
loopnew
cvttps2pi
xchg
fmul
pop
add
je
xor
mov
mov
push
pushf
jmp
sub
out
icebp
ret
sbb
sti
and
ljmp
lock
mov
test
or
into
les
or
imul
enter
pop
push
test
in
stos
jbe
sub
clc
js
and
dec
enter
jge
mov
cmp
push
shlb
add
div
add
sbb
dec
mov
add
in
into
or
outsl
inc
lock
inc
ljmp
jmp
dec
adc
call
cmp
jge
xorb
bound
movb
dec
cmp
cmp
mov
add
add
fadds
dec
mov
test
repnz
mov
add
or
mov
lods
pushf
adc
lret
or
add
push
add
sub
add
dec
movsl
jge
mov
add
add
add
and
mov
mov
vorps
les
je
in
or
pop
fiaddl
or
mov
shr
add
jmp
or
add
or
pop
pop
scas
add
push
je
cmp
addb
pop
sub
imul
add
xor
sub
adc
or
xor
ret
fimuls
inc
pop
mov
mov
mov
iret
xor
into
pusha
inc
clc
scas
add
pop
and
pop
pop
fdivs
cmp
push
mov
ret
lock
prefetchw
push
dec
fisttpll
lock
test
push
pop
jae
or
or
add
add
roll
push
lahf
add
mov
xor
pop
out
add
or
dec
pop
lahf
jnp
pop
ljmp
mov
and
and
or
mov
test
cmp
or
pop
loopne
aam
push
dec
xor
sub
xorb
subb
sbb
inc
jo
push
xor
pusha
dec
inc
xchg
xchg
add
dec
pop
inc
cmpsb
dec
aam
out
mov
or
pop
mov
inc
fiaddl
mull
test
adc
data16
sbb
add
add
jae
xchg
jle
out
stc
mov
je
and
sbb
inc
jb
repnz
lret
into
into
into
imul
mov
inc
pop
mov
sarb
push
pop
nop
pop
lods
movsb
sarl
mov
and
and
or
pop
mov
push
add
dec
dec
popf
pop
lcall
add
jns
outsb
or
test
xchg
addr16
add
add
inc
mov
addb
test
and
lcall
inc
dec
xchg
sub
sub
loopne
sbb
sbb
loope
jb
lret
ret
xor
out
decb
scas
sbb
mov
and
inc
push
xchg
loop
cmp
mov
pop
fcoml
add
lret
mov
dec
idivb
or
push
cmp
and
sub
and
outsl
xchg
fimuls
adc
sbb
xlat
jle
add
push
daa
or
and
inc
aas
xchg
adc
jge
addr16
ljmp
ljmp
xor
setb
lea
sbbb
jnp
jecxz
push
pushf
dec
sbb
xor
push
test
cltd
cmp
loopne
mov
orb
out
inc
jmp
adc
dec
xor
sub
add
or
loopne
push
out
je
push
sbb
sbb
cmp
adc
mov
inc
int3
call
jle
in
cmp
lds
dec
and
out
push
mov
mov
jbe
iret
jns
jmp
jmp
mov
jnp
insl
push
or
xchg
cmp
adc
mov
test
inc
fpatan
out
cltd
inc
inc
sbb
add
and
lds
xor
push
mov
pop
lods
test
testb
inc
push
pusha
lea
rorb
sub
ficompl
pushl
jns
mov
je
test
push
fstpt
push
xor
mov
into
cmp
and
xchg
xchg
inc
xorb
call
inc
orb
out
add
sbb
mov
sbb
and
shlb
sar
cmpsb
jo
adc
push
hlt
add
mov
mov
stos
fisttpl
inc
sbb
incl
cmp
and
jge
lea
or
xchg
sbb
push
imul
jne
jae
add
orl
xchg
xor
fildll
push
rcll
mov
adc
sbb
add
bound
das
sahf
out
aas
ds
shrb
add
lds
bound
daa
jmp
push
push
test
or
xlat
xchg
jb
mov
and
mov
add
fsts
clc
or
lea
sub
or
push
push
sbb
std
xchg
dec
inc
add
fiaddl
inc
push
js
add
jne
push
inc
das
lods
aam
ret
outsb
pop
sbb
pop
leave
out
aaa
add
pop
fisubl
sub
adc
test
inc
fs
cmp
outsb
cld
mov
mov
loope
scas
clc
sub
xorb
rolb
ret
jle
pop
add
aaa
fdiv
clc
mov
cmp
sub
mov
and
xchg
dec
les
sbb
roll
dec
pop
aad
mov
sbb
cwtl
sbb
add
sbb
mov
sahf
xor
push
nop
call
mov
pop
dec
push
cmp
dec
sbb
lea
ss
ss
or
int3
test
lock
push
adc
push
sbbb
daa
repnz
pop
nop
jmp
in
addr16
jae
fsubs
loope
out
adc
lahf
loopne
jmp
dec
loop
adc
sub
inc
add
xlat
pop
push
dec
ss
cwtl
mov
ja
call
add
mov
sbb
sbb
cld
sbb
or
cmpsb
cmp
push
sbb
mov
push
adc
push
das
add
rcrl
inc
mov
movb
sbb
sbb
push
dec
aam
or
and
orl
fwait
add
and
pop
adc
stos
les
xor
sub
add
push
pop
shlb
adc
push
mov
xchg
pop
testb
fisttpl
inc
ds
push
or
mov
add
cld
sbb
xchg
mov
or
xor
add
mov
orb
or
adc
les
add
push
enter
mov
shlb
daa
push
das
test
push
enter
pop
mov
daa
and
test
aam
es
andl
inc
ret
push
inc
loope
cmc
and
addr16
pop
inc
or
adc
gs
and
push
xchg
mov
or
and
mov
hlt
loope
and
call
stos
outsl
cmpsb
ss
clc
out
cvttps2pi
mov
aaa
xchg
sbb
aas
je
test
lods
and
cs
and
mov
jbe
xorl
dec
negb
test
jns
fstps
push
xor
rclb
sbb
sub
das
fcomp
addr16
scas
adc
test
cmpsb
pop
add
dec
add
inc
xchg
movsb
lds
pusha
cmpsl
push
shl
mov
int3
add
pusha
dec
popa
lea
arpl
jne,pt
adc
fs
pop
or
dec
in
jmp
cmp
outsb
push
push
sub
popa
loope
dec
or
mov
aad
sbb
ret
fcoml
cmp
mov
or
in
dec
mov
fs
cmpsb
gs
loopne
mov
and
jg
in
xchg
aad
mov
jecxz
ja
test
imul
xchg
sub
dec
and
aam
mov
rcr
movsl
dec
mov
mov
les
loopne
dec
dec
pushf
push
xchg
mov
push
or
shlb
dec
and
jnp
call
pop
test
dec
jne
stos
and
jge
inc
push
cltd
nop
or
movsb
loopne
inc
add
adc
orl
rorb
call
nop
jl
in
orl
enter
ret
repz
or
fmuls
xor
inc
jge
add
insb
mov
jl
orl
cld
int3
int3
add
and
push
aas
xor
add
jl
aam
and
adc
int3
es
adc
cmp
add
add
xchg
lret
dec
pop
sahf
dec
lea
clc
add
in
cltd
xor
and
mov
push
sub
mov
ret
push
cmp
mov
jne
test
stc
mov
xchg
mov
sar
and
es
sub
mov
leave
dec
pop
mov
or
fmuls
in
and
andl
call
lahf
aam
pushf
dec
adc
les
stos
dec
pop
dec
lcall
in
dec
sarb
or
mov
adc
fadds
fmuls
jbe
js
cmp
fwait
xchg
in
inc
add
stc
lods
scas
imul
add
inc
es
fnstsw
loopne
rclb
test
mov
push
mov
sbb
cmp
pop
cmp
shll
das
mov
test
in
testb
push
jmp
mov
dec
or
aaa
sub
call
jo
test
shlb
push
add
mov
push
jno
and
enter
aam
mov
mov
xchg
dec
shlb
inc
lock
cmpsl
popf
or
xchg
xor
sbbl
or
xchg
dec
adc
xchg
dec
es
and
dec
es
xor
es
fs
cmp
inc
dec
fs
dec
fs
int
insb
add
loopne
sti
in
mov
mov
fsubl
rol
add
push
xchg
sbb
int3
cmp
add
rcl
loopne
pop
imul
xchg
imul
sbb
popf
jmp
icebp
mov
imul
pop
mov
cmpl
cmpsb
adc
mov
es
and
inc
loopne
scas
in
inc
mov
aam
cmpsb
sbb
push
jge
sbb
movsb
add
adc
or
mov
lret
imul
mov
pop
and
test
fucomip
adc
sub
mov
xor
xor
mov
arpl
adc
outsb
sub
push
mov
and
add
shrl
jns
push
call
sub
mov
cmp
std
clc
jg
jns
sbb
push
cwtl
sbb
sub
rcrl
leave
or
loopne
sbb
pop
or
rorl
sahf
test
inc
cmp
pusha
enter
test
xor
dec
and
lods
orl
in
sahf
pop
add
inc
inc
das
sub
dec
adc
add
js
jp
mov
cwtl
push
pop
mov
adc
xor
in
mov
enter
call
fs
sub
sub
jb
sbb
push
adc
out
lock
mov
dec
sub
rorl
mov
mov
xchg
loopne
in
and
in
xchg
inc
popa
adc
dec
add
adc
iret
xchg
cli
pushf
pop
fcoms
mov
fmuls
pop
ds
out
testb
sub
inc
dec
enter
pop
lea
sahf
cmc
mov
jmp
out
or
inc
sbb
mov
or
jge
adc
cmp
mov
cmpsl
sbb
jmp
push
stos
iret
jecxz
nop
icebp
sbbl
js
nop
xlat
test
lods
leave
leave
leave
leave
mov
mov
leave
rol
int3
stos
push
aad
rcl
add
push
popa
stc
lds
call
mov
ret
sbb
add
xor
shrb
xchg
or
mov
jp
sbb
xchg
xchg
fadds
fmul
mov
mov
aad
insl
cld
sarl
pop
in
bound
or
push
and
lods
stos
or
push
js
sbb
jno
lock
xchg
or
xor
loopne
or
sub
or
push
enter
cmp
imul
xor
adc
inc
adc
pop
movsl
pop
div
outsl
fmuls
addb
sbb
push
xchg
loopne
inc
gs
int
mov
pushf
adc
lock
pop
cmp
fldl
enter
sti
jae
aam
nop
daa
enter
test
sub
inc
inc
mov
xchg
push
in
inc
xor
in
addb
jecxz
out
popf
dec
jb
fsubr
sbb
or
lahf
lods
pop
add
fmuls
dec
orb
cmp
mov
jo
jp
mov
out
mov
sbb
xchg
movsl
sti
shlb
dec
cltd
pusha
inc
add
xchg
jo
adc
lcall
sbb
jg
xchg
fisttps
or
addr16
inc
xor
cmp
push
sub
ds
and
jg
lods
push
jo
dec
adc
cwtl
and
mov
in
fimull
pop
lock
loopne
inc
mov
loopne
vfmadd132ps
add
pop
add
cltd
aas
adc
or
fcmovnu
fmuls
popa
movb
fcoml
sub
push
adc
inc
imul
enter
in
lcall
fwait
in
sahf
scas
cs
hlt
jl
dec
hlt
pop
lods
clc
add
mov
ret
mov
cmp
es
nop
fwait
lock
push
aas
mov
stos
push
lock
in
mov
std
sub
xchg
dec
shrb
push
pop
aas
call
mov
mov
incb
dec
and
pop
push
lea
int3
lea
imul
pop
enter
sbb
or
jecxz
push
sbb
cmp
or
or
in
inc
or
or
nop
inc
push
or
or
dec
push
cmp
or
mov
or
call
pusha
inc
sub
andb
shll
sub
xor
lahf
mov
xchg
mov
andb
enter
xchg
test
jmp
sbb
mov
inc
ret
sbb
and
les
mov
sub
lds
in
lods
push
pushf
jp
mov
or
jg
mov
add
repnz
repnz
mov
xor
mov
in
cmc
and
push
loopne
inc
arpl
mov
movsb
adc
and
or
popf
movsb
or
mov
cmp
orb
pop
lock
mov
mov
shll
or
and
mov
inc
pusha
jbe
je
xchg
or
pushf
gs
arpl
pop
or
fnop
mov
pop
pop
dec
or
jno
popa
push
adc
push
subl
test
test
xor
mov
mov
xor
std
int3
inc
mov
sti
lods
and
jl
or
bound
shlb
xchg
sbb
jns
sub
push
icebp
fwait
mov
push
mov
jb
jb
int3
enter
jb
jb
mov
jb
xchg
cwtl
mov
fistl
nop
nop
movsb
lds
dec
xor
adcl
rolb
add
movsl
mov
xchg
daa
das
mov
adc
and
test
push
and
jne
rorb
mov
cs
movsb
xchg
nop
out
nop
inc
aam
pushf
ret
fiaddl
xchg
aad
lock
pop
mov
cwtl
mov
add
xchg
xchg
sbb
repnz
cmpsl
jne
dec
mov
repz
movsl
mov
jne
and
adc
pop
push
rol
test
xor
mov
pop
dec
or
dec
pop
pop
mov
std
addb
or
in
in
sarb
xor
test
enter
shl
inc
imul
adc
push
fdiv
pusha
inc
arpl
inc
push
mov
ds
addps
push
sub
inc
adc
and
stos
add
add
scas
mov
lahf
arpl
or
add
es
mov
sbb
and
call
loope
stos
pop
iret
push
mov
xchg
sub
outsl
scas
in
add
inc
daa
jmp
je
lods
pop
dec
mov
in
or
aaa
adc
nop
lods
xchg
or
mov
ja
xor
call
mov
jnp
ss
xor
les
rorb
push
imul
pop
rcrb
dec
int3
in
add
mov
sbb
imul
jecxz
loopne
xor
jns
fsubs
add
and
fcom
xchg
jo
mov
js
pushf
std
xchg
push
negb
push
test
jg
cmp
inc
ja
test
xchg
dec
fwait
mov
or
leave
lods
mov
adcl
cmp
push
leave
push
inc
in
add
jnp
push
arpl
scas
and
mov
sbb
xchg
in
xchg
xchg
or
xchg
movsb
jge
test
add
inc
aam
mov
push
mov
movsb
sti
enter
shl
int3
jb
xor
mov
mov
aad
sarl
arpl
push
in
and
fadds
jno
mov
loope
mov
daa
lock
or
aam
lods
mov
cmpl
dec
mov
adcb
mov
dec
in
mov
pop
adc
xchg
push
and
mov
adc
mov
mov
fadd
scas
or
xchg
dec
add
push
ffreep
adc
sbb
push
and
lahf
push
mov
xchg
and
mov
sbb
and
sti
add
stc
or
mov
adc
cmp
dec
push
cmp
push
cmp
lahf
push
mov
jmp
adcl
aaa
jb
movsb
movsl
into
enter
inc
inc
push
add
and
cld
sbb
pushf
rorb
mov
cmp
adc
fsubr
dec
scas
mov
int3
sub
inc
les
and
in
push
cmp
mov
imul
and
lcall
lods
mov
das
aas
shll
aas
loopne
mov
sbb
jg
inc
ret
insb
out
adc
into
jbe
es
lea
mov
imul
push
pop
push
pusha
out
out
mov
fnstsw
ffree
fs
pop
or
mov
test
stos
pop
mov
mov
scas
rorb
inc
mov
mov
scas
gs
les
int3
iret
dec
ret
mov
mov
add
adc
adc
mov
sbb
mov
arpl
ja
loop
mov
aas
adc
cwtl
nop
fdiv
pop
enter
imul
and
mov
les
mov
sbb
xchg
insb
xchg
push
pop
jl
fwait
dec
jecxz
inc
mov
or
or
in
xchg
adc
mov
adcl
fists
sarl
or
inc
or
popa
push
rcll
mov
mov
inc
nop
scas
pop
or
mov
pop
shrb
lods
mov
or
les
enter
addl
push
pop
mov
push
test
fists
enter
add
filds
adc
cwtl
pop
xor
sub
iret
mov
mov
aam
xlat
mov
faddl
dec
sbbl
xor
pop
sbb
add
sarb
push
xchg
mov
and
adc
push
and
mov
aad
cmp
lahf
fadds
cmp
call
sbb
pop
mov
cmpsl
mov
test
lcall
iret
mov
xor
push
lock
adc
push
lahf
mov
rorb
lds
pop
pop
outsb
in
cmpsb
mov
add
jg
das
dec
cmpsb
push
cs
dec
rcll
test
xchg
das
popa
dec
mov
aas
pop
push
push
inc
cmp
les
mov
aad
adc
aam
aam
push
adc
add
sbb
and
les
je
pop
int3
scas
jo
andl
cmp
add
xor
out
pop
mov
cs
or
call
add
pop
add
aas
jbe
ljmp
je
insl
daa
sub
inc
imul
sub
jo
dec
or
add
push
lds
rol
dec
push
jnp
adcb
jg
test
shlb
scas
jmp
and
jg
bound
mov
in
inc
mov
jbe
inc
cmc
mov
fsubrs
lods
adc
fisubl
shrb
les
inc
mov
mov
push
fadd
cmpb
insb
xor
adc
rorb
adc
sub
add
rcrl
pop
nop
js
mov
or
lret
cltd
add
mov
or
mov
add
pushf
dec
xor
adc
not
and
orb
xor
xor
fisttps
push
inc
lods
inc
mov
pop
mov
out
xor
add
test
aam
push
mov
add
test
sti
sub
mov
sbb
xor
and
inc
adc
or
jl
iret
jo
xchg
fsubl
test
insb
mov
pop
repnz
test
push
dec
sub
adc
inc
leave
aas
lock
insb
leave
aas
les
cwtl
leave
sbb
inc
neg
out
mov
nop
sbbl
fsubr
out
mov
fcoms
sbb
stc
add
or
or
or
dec
lret
lds
lods
dec
sbb
movsb
lret
jo
sbb
rorl
add
or
lock
mov
sub
inc
or
dec
daa
in
scas
cmp
lods
imul
adc
pushf
mov
lods
in
cmp
fisubl
xlat
push
andb
mov
and
dec
cwtl
pusha
fs
xchg
in
push
dec
push
fcoms
lock
cmp
xchg
pushf
fdivr
clc
int3
ljmp
push
addr16
int
loopne
inc
cmpsb
sbb
mov
repnz
jno
dec
ror
dec
push
sbb
out
aam
xchg
or
add
add
fs
push
std
add
es
or
notl
push
cltd
nop
inc
out
and
jl
and
cltd
lock
sarl
popa
adc
sub
sub
mov
test
test
add
gs
cmpsb
pop
add
in
gs
mov
add
ja
das
adc
add
sbb
fsubrs
adc
repnz
roll
andl
fcompl
sub
nop
inc
mov
fs
jg
add
in
mov
xchg
fdivrl
insl
push
jbe
xchg
invd
pop
and
add
test
xor
or
test
dec
loope
iret
lds
or
cmp
sbb
leave
cmp
lret
fdivrl
adc
orb
inc
mov
sbb
mov
push
mov
sub
sub
lahf
scas
mov
pop
insl
rcrb
test
xlat
sub
ss
cmpsl
jg
add
sarl
cmp
lea
cld
adc
in
and
fs
ss
add
imul
adc
in
add
cltd
mov
inc
inc
or
pusha
test
sbb
clc
xchg
mov
sub
xchg
adc
xor
mov
add
std
mov
sar
mov
rol
push
xor
dec
clc
xor
shr
rclb
dec
fstpl
or
loopne
and
fsubs
push
mov
scas
xorl
in
aam
push
pop
xchg
inc
das
por
lds
mov
mov
mov
lods
adc
fcoml
stos
pavgw
aad
and
roll
rcll
and
sbbb
insb
sub
pushf
jmp
or
pop
cmp
xlat
fcom
mov
lds
xchg
test
mov
adc
test
shrb
fadd
les
aad
pop
adc
push
aad
fsub
xor
mov
flds
or
jne
nop
dec
insl
lods
jmp
addb
addl
les
shlb
adc
mov
lock
mov
and
fcmovnu
nop
xchg
jecxz
jns
call
in
xchg
and
mov
lahf
int
xchg
dec
mov
test
cmpb
jns
roll
pushf
adc
dec
es
insl
pop
and
dec
xor
xchg
dec
xor
push
js
dec
pusha
pop
enter
scas
movsb
test
cwtl
inc
pusha
push
jns
cwtl
fdivs
lds
inc
add
mov
adc
in
inc
fdivrl
push
test
addb
dec
cmpsb
sbb
dec
es
fs
je
aam
mov
xor
mov
mov
mov
jecxz
mov
je
xchg
push
mov
sbb
mov
adc
inc
lods
push
push
push
hlt
add
rcr
dec
popa
mov
test
fsubl
nop
mov
adcb
sub
mov
adc
mov
arpl
sbb
jl
call
sbbb
push
pop
push
or
pop
aam
pop
loopne
ljmp
sub
mov
sbb
mov
pop
or
sub
adc
bnd
pusha
loope
mov
add
push
and
pop
outsl
inc
fcoms
stos
or
mov
rcl
and
mov
enter
inc
movsl
add
push
sbb
enter
add
xchg
adc
pusha
rcr
cltd
int3
xor
pop
sub
fcmovnb
add
push
sub
push
rolb
lock
sub
mov
rcrb
lods
test
jno
in
mov
test
jns
lds
dec
add
add
add
xchg
jne
rcrl
mov
sbb
cmpsb
cmc
ret
pop
test
bound
add
push
and
jne
sub
push
mov
loopne
and
xor
sbb
stc
lock
inc
or
jge
inc
sbb
enter
pop
insb
test
lock
add
adc
mov
ja
dec
pusha
add
sub
int3
in
dec
adc
pop
ffree
inc
and
jno
test
adc
repnz
stos
mov
div
enter
jo
bound
aad
push
mov
repz
mov
jno
fistps
mov
incl
in
aam
pop
xchg
test
mov
mov
imul
test
mov
scas
add
sar
fimull
aam
sti
mov
es
or
sbb
nop
inc
jne
cli
mov
scas
xchg
dec
cmp
in
cltd
fs
dec
cmp
pusha
daa
cltd
hlt
add
adc
sbb
sub
je
xchg
cmp
test
cltd
ss
fisubl
inc
cmp
xor
xor
and
adc
inc
mov
xchg
rcll
daa
sbb
push
dec
push
repnz
jmp
adc
rcll
mov
adc
je
insb
scas
sbb
inc
pop
pusha
or
bound
subb
mov
jo
sbbb
jo
mov
cltd
sub
sbb
icebp
push
pop
adc
pop
sub
sub
cwtl
push
xchg
push
adc
addl
pusha
jmp
dec
loopne
push
pop
arpl
ds
out
aam
push
movsl
and
dec
add
nop
out
pop
add
or
pusha
and
pusha
fnstenv
sbb
subb
in
mov
inc
fidivl
icebp
imul
cmpb
mov
idiv
imul
xor
idivb
mov
mov
or
sub
mov
push
pop
inc
in
jle
pop
outsb
fdivr
adc
add
aaa
int
pop
push
jge
notb
imul
push
and
icebp
jmp
add
stos
and
jne
sbb
xor
enter
andl
pop
test
mov
xor
push
inc
and
push
adc
enter
mov
rcrb
xor
jg
sbb
inc
pop
imul
mov
ja
or
push
cltd
dec
sbb
iret
jmp
aad
fs
out
loope
jo
push
scas
pop
stos
cmp
inc
xlat
jl
loopne
out
adc
mov
add
jns
sbb
inc
push
push
into
repz
fwait
adc
and
out
mov
pop
rcl
out
dec
sti
cmp
push
fdivrs
fistl
add
jae
pop
or
insb
fwait
mov
or
inc
cmp
dec
push
test
inc
mov
ljmp
dec
mov
fistpl
or
jnp
mov
add
jmp
pop
and
pop
and
jnp
or
adc
insb
dec
mov
out
leave
ljmp
cmpb
or
iret
jmp
data16
jo
push
pop
push
dec
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
mov
dec
dec
dec
ss
push
jg
dec
pop
pop
pop
popa
bound
gs
imul
jo
jb
je
sar
jne
ja
jns
xor
xor
xor
ss
cmp
sub
mov
das
mov
gs
incl
es
push
or
cmp
rclb
cmpl
mov
add
jns
iret
jnp
push
jns
pop
out
xchg
lcall
push
dec
outsb
je
jb
outsl
arpl
fs
pop
cmp
out
sbb
push
dec
imul
pushl
fdivs
cmp
jb
gs
xor
cs
adc
iret
jg
bound
and
popa
je
outsl
outsb
xchg
push
jbe
mov
pop
lock
rdpmc
add
pop
in
aad
incl
sub
mov
stc
rolb
inc
outsl
jb
js
je
jb
gs
out
outsl
cmp
or
outsl
add
add
add
add
push
gs
push
je
mov
jne
jb
mov
outsb
xchg
add
arpl
out
insl
insl
cmp
dec
and
jns
ja
jnp
add
das
das
adc
push
dec
push
inc
fstpl
push
jl
gs
insl
bound
daa
dec
outsl
jbe
push
fmull
outsl
adc
jo
sub
in
fucom
jne
jne
dec
jne
xchg
mov
jnp
inc
jo
imul
bound
sahf
and
pusha
inc
insb
adc
pushf
jae
cmpsl
xchg
popl
jae
xchg
addr16
push
jne
fs
lahf
mov
outsw
cmpsb
mov
sbb
dec
out
sti
sub
push
jne
xchg
out
into
cmp
inc
ds
popa
das
jo
bound
or
fbld
dec
jno
mov
sbb
test
cmp
sbb
test
mov
and
jmp
and
sub
sub
cs
pushf
mov
cmp
pop
pop
cmpsl
test
inc
mov
cmp
cmpsl
es
jge
jg
cmp
inc
test
jecxz
mov
cs
and
push
pop
or
fdivrl
xor
cmp
jae
cs
fs
jo
in
mov
inc
inc
mov
ficomps
out
jo
insl
and
into
jle
add
jbe
dec
push
push
sbb
mov
fimull
sbb
and
add
stos
int
push
xor
sbb
push
jo
imul
and
jae
insl
pop
mov
je,pn
lods
test
push
idivb
test
inc
and
fs
sub
scas
mov
push
insb
in
pop
xor
inc
popa
and
mov
mov
jne
pop
xor
and
out
pop
cmp
push
xchg
or
xor
mov
push
jo
add
lcallw
push
mov
stos
out
mov
mov
and
or
out
pop
or
imul
push
pop
es
mov
and
push
mov
cmp
push
and
push
adc
adc
int3
fidivrl
popf
jb
loopne
outsl
mov
mov
daa
sub
dec
addb
das
arpl
xor
arpl
pusha
push
sub
mov
fidivs
filds
inc
xchg
insb
imul
out
xor
int3
gs
mov
push
lcall
mov
inc
mov
xor
gs
or
fistps
push
add
sbb
aaa
xor
shll
addb
add
add
or
outsl
inc
ds
cmpsb
outsl
ss
fs
jo
cli
jbe
add
mov
test
xchg
push
mov
and
gs
or
lds
xchg
or
inc
jle
outsl
xchg
imul
or
arpl
xchg
ret
jecxz
lcall
cs
inc
aaa
insl
in
mov
fwait
or
adc
imul
pop
or
pop
cmc
jecxz
add
push
push
leave
cmp
wrmsr
nop
inc
insl
imul
cmp
sbbl
popa
in
xor
rclb
inc
and
sbb
fstpl
cmp
mov
push
jae
xor
rcl
push
pusha
jo
sbb
loopne
sub
ret
jb
push
sub
lock
sub
pop
dec
push
imul
dec
or
jo
and
jno
pop
mov
ja
ds
inc
and
pop
imul
push
dec
cmp
jmp
ud0
loopne
dec
cmp
mov
push
rol
cld
sti
mov
das
lret
jno
icebp
pusha
inc
mov
clc
ret
lock
outsb
movsl
add
xorl
shrl
push
loop
imul
lock
gs
popa
dec
aaa
push
loope
add
xor
jg
js
pop
pop
jle
jae
je
pop
dec
pop
inc
xor
xchg
js
add
xchg
in
cltd
sbb
sub
xor
sub
push
adc
add
add
add
add
xor
cmp
pop
or
aaa
ds
push
pop
int
xchg
pop
hlt
and
or
pusha
add
js
addr16
add
pop
sub
add
sbb
mov
outsl
mov
addl
ret
int
test
add
orb
sti
outsb
push
cmpb
push
and
sub
jb
insl
int
adc
push
jo
add
mov
inc
rcl
push
stos
fwait
push
inc
inc
int3
js
jo
jmp
in
jge
rorb
sbb
in
lea
mov
nop
xchg
xchg
pop
mov
call
inc
or
or
dec
adc
bound
add
cmp
test
and
cmp
loope
adc
data16
test
dec
je
nop
in
fldt
out
push
or
mov
pusha
lea
sbb
and
mov
and
adc
adc
inc
cmp
xchg
dec
addb
andb
and
dec
sbb
add
add
mov
enter
jmp
add
cmp
ficompl
aaa
add
adc
insl
pop
shr
pushl
addb
and
test
mov
nop
xchg
xchg
xchg
xchg
call
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
pushl
mov
mov
enter
int3
int
iret
rcl
rcl
aam
call
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
inc
adc
idiv
stc
cli
sti
cld
std
inc
inc
movsb
adc
sub
call
pop
sbb
add
xchg
push
sbb
push
pop
jg
xor
ja
inc
cs
jae
jb
push
call
dec
stos
inc
lea
popa
mov
repnz
fisubrs
jne
daa
pop
lea
dec
mov
popa
addr16
outsl
js
push
push
inc
push
mov
xchg
ss
and
insb
gs
mov
fcmovnu
cmp
dec
mov
daa
add
insb
mov
gs
in
dec
imul
mov
imul
dec
inc
jb
movsl
and
daa
pop
enter
andl
mov
push
sbb
aad
lcall
addr16
cmp
outsb
inc
sub
insb
pushw
mov
mov
push
in
fisubrs
pop
pusha
inc
jbe
push
loopne
test
jns
lea
dec
lcall
sti
inc
adc
pop
cmp
push
push
lock
and
push
es
dec
lahf
inc
or
inc
lock
push
popa
jnp
xchg
jae
mov
test
pusha
mov
call
push
subl
gs
mov
data16
xchg
mov
pop
bound
push
push
push
dec
testl
push
int3
repnz
mov
in
loope
cmp
lds
mov
aas
jg
dec
ret
adc
call
sub
fistpll
inc
adc
lods
sbb
xor
jg
popa
jl
rorl
stos
mov
or
ljmp
outsl
data16
test
mov
aaa
daa
xchg
mov
cmp
mov
pop
pop
cmp
cmp
add
jnp
negl
push
sub
insb
mov
jl
push
jle
sub
sub
cmpsl
in
fdivrl
addr16
sub
sub
cmp
cmp
jmp
inc
cmpsl
bnd
cmp
in
out
push
cwtl
sbb
addr16
push
jb
imul
jo
ss
lret
out
cltd
loope
lods
sbb
cltd
adc
inc
jo
cmp
jae
mov
jl
imul
inc
add
clc
add
out
sahf
out
aam
shlb
add
sti
push
in
sarb
ss
push
nop
inc
push
xchg
sahf
out
sahf
push
mov
xor
jns
inc
or
add
stc
data16
jl
xor
fs
iret
cmp
decl
pop
push
pop
negl
ds
rcll
inc
add
jns
out
push
xor
and
sahf
jg
out
or
hlt
incl
jns
out
mov
sahf
out
out
clc
incb
mov
out
push
inc
inc
cmp
repz
out
cld
std
lock
iret
repz
movsb
jl
sub
in
out
lcall
mov
ljmp
push
lea
lcall
jo
jns
push
xor
sbb
aad
cbtw
cmpsl
pop
push
js
cmpsb
bound
fs
sbb
jae
jb
xor
test
jne
pcmpgtw
xor
add
jle
push
ret
jne
xorb
push
movsl
mov
pop
stc
mov
dec
inc
push
dec
inc
dec
xor
inc
dec
dec
dec
push
inc
incb
push
dec
inc
dec
add
dec
dec
inc
add
lcall
das
adc
sub
adc
mov
inc
call
rclb
mov
xor
jnp
inc
loop
mov
stc
pop
jnp
ds
pop
adc
clc
lret
sbb
enter
jb
xchg
jge
arpl
cmp
adc
dec
scas
jp
mov
in
fstl
mov
and
and
mov
imul
lret
add
inc
mov
sarl
or
push
test
sub
fwait
ss
sbb
mov
jns
ds
xor
incb
int3
dec
dec
xor
cld
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
mov
xor
sahf
icebp
mov
cld
or
loopne
roll
inc
mov
xchg
push
pop
mov
ds
dec
je
scas
adc
lods
clc
push
xor
nop
adc
bswap
mov
pop
pop
repnz
test
xor
es
mov
xor
mov
jle
add
push
mov
or
push
dec
push
push
inc
inc
or
test
jo
outsb
jbe
and
and
cmp
mov
inc
pop
js
loope
push
push
gs
out
int
push
bound
sti
aas
iret
repz
dec
push
sub
mov
jmp
jg
inc
adc
inc
sbb
adc
push
adc
mov
and
sub
and
push
sbb
inc
add
inc
add
add
fidivl
das
xor
dec
add
inc
push
jno
jb
popa
idivl
ss
add
or
mov
sub
dec
sbb
dec
pop
or
inc
inc
add
das
add
sub
inc
mov
pop
inc
and
std
mov
add
sbb
lods
or
push
ret
dec
pop
cmp
dec
mov
ljmp
or
dec
pop
sbb
call
mov
sub
cmp
inc
pop
pop
xor
adc
in
out
jnp
add
aaa
aaa
or
or
sub
dec
adc
pop
pop
add
or
or
and
and
sub
jmp
jge
inc
addb
sti
outsb
inc
or
imul
addr16
adc
push
or
inc
inc
inc
ret
ss
es
adc
add
or
sub
sub
pop
adc
mov
adc
and
ds
push
inc
push
ds
add
in
sub
sub
push
add
and
imull
sbb
mov
inc
pop
push
aaa
cmp
push
cmp
xor
adc
or
mov
push
outsl
sbb
jle
fucom
pop
fidivl
push
or
push
add
and
inc
and
sub
jbe
push
xor
xchg
push
push
mov
push
je
rolb
cmp
movl
push
gs
es
decb
inc
pop
add
sub
push
cmp
mov
pop
adc
sbb
aaa
jl
pop
dec
in
sub
inc
add
add
notb
and
cmpsb
ret
fistps
cmp
mov
insl
mov
jnp
inc
pop
adc
dec
nop
dec
cwtl
push
je
in
push
cmp
shlb
rolb
dec
mov
mov
xor
push
adc
int
jns
xor
inc
jo
push
xor
idivl
outsl
jg
push
mov
neg
stc
sahf
shl
adc
pop
mov
xchg
bound
aaa
dec
testl
inc
scas
inc
push
cwtl
and
jmp
inc
push
or
adc
push
popa
push
lds
mov
popa
outsb
sub
call
popa
push
popa
add
push
inc
imul
push
xor
lsl
push
or
xchg
or
scas
mov
loopne
push
jns
out
push
xor
shl
cmp
repz
push
push
jo
mov
out
cmp
shlb
push
push
and
push
lock
cmp
ds
pop
sub
lods
adc
pushf
movb
sbb
xor
pusha
pop
das
dec
scas
cs
pop
aam
je
inc
xlat
or
push
cmp
sbb
sub
ss
js
mov
jbe
mov
aaa
pop
stos
mov
fisttps
push
pop
inc
dec
xor
nop
push
or
jmp
pop
iret
jmp
or
push
dec
and
push
jnp
ficoms
pop
cmpsb
inc
push
cmp
dec
fcoms
stos
lcall
adc
mov
or
jb
sub
adc
insb
push
sub
pop
pop
and
adc
push
fistpll
sub
sbb
add
add
and
inc
or
jp
inc
fs
pushf
add
or
in
cmp
mov
dec
push
faddp
cmp
push
out
push
ja
test
jae
ss
ret
test
inc
cld
xor
out
pop
ds
jo
add
add
mov
or
ss
xlat
push
push
xor
cmp
outsb
scas
adc
dec
pop
ss
inc
pusha
dec
popa
test
xor
in
dec
daa
push
pop
rolb
pop
popa
mov
jl
push
cmp
or
sbb
add
imul
and
push
inc
shll
dec
das
push
cmp
loopne
pop
push
daa
sbb
or
adc
lock
inc
xor
mov
neg
sub
or
daa
and
int3
and
stos
mov
mov
add
and
adc
inc
xchg
push
jle
mov
scas
movsb
call
adc
add
mov
add
xchg
adcb
cmp
cmp
mov
mov
and
ds
add
cs
in
and
add
push
dec
and
xor
cmpl
and
fcomps
add
addr16
push
cmpsb
arpl
mov
cltd
ficoms
adc
pop
sahf
inc
add
xchg
ret
scas
mov
enter
adc
sbb
or
das
scas
lods
inc
push
lods
adc
ss
popa
mov
xchg
jnp
cmp
in
dec
sub
les
pop
lcall
cs
sub
in
cli
inc
push
or
sbb
adc
sub
add
xor
add
aaa
jne
loope
adc
add
cmp
push
xor
push
scas
ss
dec
scas
push
cmp
add
dec
add
popf
push
sbb
pop
ss
push
out
dec
xor
xchg
add
xchg
mov
push
cmpsb
add
xchg
adc
subb
push
adc
xchg
xor
sub
push
scas
mov
daa
test
sbb
sub
pop
inc
mov
add
pop
adc
inc
cmpsb
mov
or
movsl
sahf
imul
add
stc
pop
xor
xchg
pop
mov
mov
add
imul
add
add
dec
pop
push
or
inc
imul
pop
add
sti
aas
sub
sub
sbb
ss
push
std
aas
add
add
or
loopne
sti
adc
rcrb
test
mov
and
cli
mov
push
mov
sub
pop
mov
or
adc
ja
xchg
addb
data16
jae
xchg
int3
jg
insl
popa
imul
mov
je
jae
outsl
jo
mov
or
push
ja
or
mov
adc
push
in
iret
repz
add
aam
pop
aaa
imul
int3
pop
out
mov
mov
mov
ja
dec
adc
or
and
iret
pop
out
je
sub
pop
jns
lret
inc
or
or
inc
sub
push
mov
inc
inc
push
add
dec
aam
xor
sub
xor
cmp
sbb
fistpl
add
add
inc
fisttps
cmp
xor
and
sub
push
mov
inc
and
xlat
stos
clc
pop
jl
xor
dec
das
xor
fcoms
pusha
adcb
insb
sub
sub
add
xor
add
add
ret
adc
and
daa
daa
add
jp
fnstsw
enter
inc
lcall
cvtpi2ps
cmp
mov
or
test
and
mov
test
aaa
dec
pop
test
add
das
cmp
sub
push
mov
pop
cmp
dec
insb
outsl
jb
bound
mov
jnp
xor
push
push
je
pop
add
and
jae
popa
mov
sbb
inc
notb
mov
jae
and
fdivs
js
adc
dec
test
push
and
mov
aad
push
jo
fmul
cmp
loop
mov
iret
repz
and
cmp
repz
andl
sahf
out
add
or
xchg
mov
pop
add
cwtl
pop
push
pop
shlb
mov
jnp
testb
sub
xor
cmp
mov
mov
mov
insb
add
sbb
data16
ret
sub
add
or
xor
add
and
add
jo
sbb
lret
verr
fldcw
add
js
jg
stc
das
incl
and
push
push
das
xor
xor
dec
ror
mov
push
cmp
mov
icebp
outsb
xor
pop
sbb
sub
das
cld
ret
pusha
ficoms
sbb
icebp
push
push
mov
dec
sub
icebp
mov
xor
jae
push
les
es
jp
add
loop
xchg
push
loop
jb
outsl
imul
fidivl
shlb
nop
adc
sti
lock
ficoml
pop
sbb
test
inc
add
cmpsl
popa
inc
ss
pop
mov
incl
cmp
sbb
add
sbb
lahf
jbe
scas
pop
inc
pop
aaa
clc
das
pop
inc
sbb
mov
inc
adc
cmp
mov
es
pop
ljmp
or
mov
xor
xchg
adc
add
push
inc
xor
pop
jle
pop
cmpl
or
xor
inc
mov
jle
pop
mov
xchg
sbb
adc
xor
add
into
and
ret
leave
fisubl
and
push
add
enter
fmuls
cwtl
inc
push
inc
inc
inc
sbb
insb
and
dec
dec
adc
icebp
sbb
pop
pop
ds
inc
loope
test
ljmp
push
sbb
cmp
adc
inc
xchg
push
push
mov
xor
or
jbe
adc
mov
aaa
push
jns
pop
ficoml
sub
inc
in
cs
mov
notl
push
cmp
sub
inc
lahf
movhps
dec
mov
inc
fildl
loopne
fwait
lret
dec
mov
pop
pop
sbb
xor
wrmsr
roll
aaa
add
pushl
inc
lds
inc
cmp
inc
out
test
or
push
cmp
push
stc
pop
out
push
inc
sub
pop
sub
and
lret
push
or
push
inc
cmp
dec
inc
mov
push
jo
push
push
fnstenv
push
inc
mov
push
push
rcrb
int3
xchg
in
pop
es
loopne
je
or
add
cmp
daa
add
rcrb
dec
nop
loop
push
push
push
push
jo
pop
shr
push
add
clc
or
xor
add
dec
icebp
pop
mov
and
push
add
xchg
andl
adc
shrb
add
add
orb
fwait
dec
dec
cmp
pop
cmp
add
jnp
pop
mov
adc
sbb
sbb
in
pop
adc
pop
addl
dec
jnp
lahf
mov
cmp
sub
stos
cmp
es
mov
cmp
insl
push
sub
sub
pop
cmpsl
daa
shl
push
clc
xor
sub
sbb
mov
inc
mov
sub
andl
inc
daa
xchg
sub
andl
add
sub
subl
xor
push
sbb
inc
jnp
inc
icebp
mov
mov
adc
and
adc
and
popf
or
push
and
iret
add
into
mov
and
pop
xchg
addb
push
jle
inc
pop
mov
enter
push
dec
faddl
gs
push
cmp
shl
add
mov
inc
push
call
sub
and
add
and
rorl
or
insl
push
xchg
inc
addb
or
mov
push
adc
add
push
jge
clc
or
or
push
cmp
and
or
push
or
sbb
and
clc
sti
cs
sbb
xor
add
add
push
int3
cs
pop
xor
pop
push
cs
add
test
sub
push
int
daa
pushf
cmp
mov
clc
pushf
filds
movsl
es
push
or
pop
test
inc
pop
daa
scas
ss
cmpsb
das
outsb
sub
sub
scas
add
jbe
add
cmp
and
push
and
xchg
cmp
push
and
and
sub
cmp
adc
sti
push
and
push
sahf
jae
sbb
or
popf
fdivl
cmp
xchg
cltd
or
es
fisttpl
mov
or
fdivl
shl
sub
cmp
and
sub
das
sbb
xor
mov
sub
pop
xor
or
mov
adc
cmp
and
jnp
fs
out
adc
sbb
mov
sbb
test
bts
outsl
jo
push
dec
pop
mov
inc
push
arpl
mov
push
cmp
add
or
fadds
or
insl
push
rcrl
or
cmpsb
dec
mov
push
pop
xor
xchg
dec
cmpsl
push
xor
pop
rorl
jnp
dec
cld
arpl
mov
xchg
iret
ficompl
pop
cmp
dec
lods
pop
cmp
cmp
cmp
sub
lods
ljmp
or
inc
sub
cs
dec
jo
fs
pop
sub
inc
out
jge
movq
cmp
mov
dec
add
push
mov
nop
inc
add
mov
push
or
loop
cs
gs
or
push
int
inc
test
cld
jl
jno
push
dec
inc
test
cs
shll
and
push
dec
or
scas
xchg
or
add
jecxz
data16
daa
or
adc
pop
dec
aas
bound
xchg
movsl
pop
fs
add
cmp
push
add
data16
cmp
dec
adc
int
dec
xchg
adc
jnp
aaa
sbb
push
sbb
aaa
adc
dec
xlat
mov
push
adc
lods
sbb
pop
inc
insb
pop
sbb
push
fadds
fistl
sub
icebp
aaa
mov
xchg
add
lods
cmp
lods
xchg
sub
imulb
iret
aas
ljmp
insb
gs
ja
fs
gs
jmp
jmp
mov
das
add
push
add
jns
rcll
cmp
pop
inc
fists
jae,pn
push
nop
pop
inc
add
fdivrp
xor
sub
sub
push
xor
mov
inc
inc
xor
mov
addr16
cmp
and
aas
xor
out
stc
sahf
out
mov
inc
inc
dec
push
push
shrl
dec
push
fdiv
imul
inc
testb
mov
dec
push
dec
dec
or
scas
aaa
shlb
mov
mov
fisttps
sbb
ljmp
mov
ja
stos
call
mov
lods
pop
dec
movsl
enter
push
push
mov
cwtl
insl
ss
adc
pusha
or
mov
sub
sub
or
sti
jg
mov
mov
mov
ds
pop
sbb
lods
sub
jle
jo
pusha
pusha
decl
mov
sbb
nop
ljmp
dec
pop
dec
xchg
pop
shl
dec
push
adc
das
in
pop
adc
aad
and
xor
aaa
xor
cmp
mov
pop
test
fcoms
push
mov
add
outsl
movsb
sbb
imul
pop
mov
dec
sub
leave
jae
sub
sbb
or
clc
and
in
imul
sahf
xchg
inc
enter
js
sahf
test
cwtl
inc
mov
gs
pop
je
inc
js
cmp
mov
test
pop
int3
pop
sbb
test
dec
call
pop
mov
cmp
xor
cmp
xor
sub
sub
xor
inc
xor
inc
and
and
xor
pop
add
jne
cmp
insb
push
outsb
add
add
inc
xlat
inc
das
jle
push
sarb
jo
jne
movsl
mov
inc
rclb
out
dec
jp
ficoms
outsl
sub
stos
cmpsl
bound
je
loope
sti
cmp
popa
outsb
mov
aaa
inc
push
aaa
adc
and
or
mov
addr16
sub
or
pop
push
popa
jnp
pop
dec
ja
mov
loop
lea
das
out
mov
pop
sbb
andl
lock
lahf
and
enter
aaa
add
sbb
iret
mov
and
push
daa
sub
xor
adc
xor
fistpll
hlt
dec
dec
adc
add
sbb
fidivs
inc
cmp
mov
and
mov
jbe
push
add
jbe
inc
add
and
inc
add
loope
jno
inc
add
sbb
adc
jbe
pop
xor
dec
pop
dec
or
xchg
loop
inc
arpl
pushf
and
xlat
adc
das
hlt
test
mov
arpl
dec
mov
xchg
add
addr16
add
int
imul
das
int3
pop
repz
push
sub
outsl
cwtl
inc
mov
int
in
inc
int3
pop
push
mov
iret
sbb
into
xchg
gs
push
test
push
out
bnd
pop
js
test
mov
pop
mov
rcrw
push
mov
bound
xlat
popf
data16
cmpsb
sarl
enter
fwait
int
mov
imul
cmp
testb
punpckhdq
or
sti
pusha
pop
mov
scas
in
mov
es
cmpsl
sbb
dec
pusha
dec
int
cmp
repnz
int
push
cwtl
dec
fwait
int
cmp
mov
push
and
inc
aam
sub
or
repz
iret
sbb
js
outsl
adc
repz
inc
pop
jnp
rcrb
stc
xor
inc
pop
lret
pop
dec
mov
mov
fs
daa
mov
dec
fistps
iret
sub
mov
push
int
daa
iret
jnp
ficompl
and
xor
mov
dec
mov
push
jns
mov
ds
repz
and
mov
pop
pop
push
cwtl
testb
or
out
aad
push
xorl
jns
pandn
std
sahf
out
sahf
fidivs
xchg
sarl
lret
xchg
js
push
and
pop
ss
and
sbb
pop
xchg
es
mov
repz
aas
dec
int
pop
sarb
inc
shll
cmp
cmpsl
stc
fwait
jge
sbb
pop
outsb
stc
cmp
repz
clc
cmp
cmpsl
adc
jl
repz
and
mov
cmp
out
int3
sbb
jns
cmpsl
stc
or
repz
out
fiaddl
test
push
out
ds
jns
popf
xchg
in
iret
repz
stc
adc
mov
mov
decl
addr16
jg
dec
sbb
scas
dec
test
sub
adc
and
rcrb
push
push
mov
xor
adc
mov
pop
pop
mov
scas
in
bound
int
mov
leave
loop
and
push
pop
inc
std
mov
lahf
add
idivb
in
rcl
mov
and
pop
sbb
pop
enter
cmp
adc
or
adc
jg
or
add
or
nop
add
push
ljmp
fwait
outsl
xor
xchg
fisubrl
push
adc
push
push
jae
popa
lahf
inc
and
mov
dec
inc
lea
inc
sbb
or
or
mov
push
mov
cmp
aas
jae
pop
cmp
xlat
push
and
int
ficoms
out
add
dec
rorb
fst
inc
je,pn
push
ljmp
cmpsb
inc
imul
push
inc
cmpsb
push
insb
pop
daa
ljmp
sti
imul
loope
jns
push
fisttps
jp
das
cmpl
fisubrs
inc
imul
ret
inc
lds
retw
dec
ret
push
or
dec
mov
ja
mov
push
mov
in
pop
int
push
je
cmp
push
mov
cmp
ds
lcall
popa
insl
jo
fisttps
in
pop
insb
je
push
addr16
jo
jae
es
idivb
es
cmpb
sub
mov
push
cmpsb
mov
lcall
xor
xor
xor
xor
xor
cmp
int
frstor
cmp
push
xor
xor
cmp
push
add
inc
push
xchg
and
out
xlat
mov
dec
sub
sbb
inc
push
syscall
bound
out
sub
or
stos
dec
add
les
loopne
inc
fdivl
adc
sub
sti
xor
sahf
jp
inc
movsl
es
inc
das
ds
out
dec
mov
pop
ds
push
inc
lock
bound
add
jbe,pn
sbb
and
aas
add
out
xor
pop
inc
push
dec
or
sbb
xor
imul
pusha
lahf
ret
or
dec
inc
and
sbb
and
outsb
push
inc
adc
inc
push
sub
adc
push
loop
push
cli
xchg
data16
adc
mov
daa
xor
pop
mov
and
inc
loopne
je
xor
mov
daa
or
mov
mov
icebp
inc
jae
inc
xor
das
or
pushf
icebp
push
cs
push
push
or
dec
repz
dec
jnp
mov
xor
add
and
sbb
or
das
sub
or
push
jbe
mov
pop
push
daa
xor
daa
lods
xchg
dec
and
subl
arpl
add
lea
pop
adc
bound
das
inc
inc
lods
lea
mov
sahf
aaa
mov
push
dec
aaa
lahf
mov
add
scas
ljmp
pusha
and
mov
loop
xorb
inc
sub
sub
lods
daa
and
inc
adc
mov
das
notl
lods
ss
iret
and
dec
xchg
pop
ret
daa
mov
daa
imul
add
das
inc
cmp
push
dec
out
cmpsl
sbb
test
push
add
repnz
cwtl
mov
push
adc
pop
lret
ja
adcl
outsl
and
or
dec
das
mov
mov
insl
pop
scas
pop
cltd
or
or
daa
lahf
pop
xchg
sub
add
adc
pop
addr16
and
addr16
jg
add
lock
fcoml
pop
mov
jb
push
sbb
iret
frstor
and
and
mov
inc
imul
add
outsl
and
xchg
aaa
arpl
add
push
add
or
or
inc
pusha
sub
es
jl
push
scas
add
xor
imul
test
mov
bound
and
pop
add
adc
subb
dec
js
pop
add
cmpsl
xchg
outsb
inc
ret
mov
pop
icebp
and
sbb
aad
lods
and
mov
adc
in
test
add
adc
adc
mov
bound
pop
out
push
pop
xlat
or
mov
pop
nopl
add
add
mov
pushf
xchg
data16
cmp
into
adc
xor
lods
pop
add
or
sbb
fisubs
cmp
das
sbb
push
and
out
dec
les
pop
addr16
push
adc
inc
fisttpll
cmp
push
pop
dec
mov
or
or
sbb
inc
lds
bound
sbb
adc
das
push
add
add
dec
add
add
clc
adc
test
add
cmp
sub
mull
push
test
jmp
in
inc
daa
and
pop
mov
add
push
push
push
cltd
xchg
loope
sub
andl
or
adc
and
js
outsl
into
adc
mov
sub
mov
rcrl
frstor
pop
or
test
xor
add
cli
aad
aam
dec
dec
push
test
dec
inc
dec
inc
push
repnz
sahf
pop
and
push
cmpsb
or
inc
cmp
mov
and
imul
inc
inc
add
and
mov
dec
jnp
add
aad
sub
aam
add
or
add
sbb
xchg
fs
inc
loop
push
mov
xor
push
sbb
xor
xchg
add
push
mov
xchg
std
dec
sbb
out
not
dec
adcb
xor
add
in
mov
push
call
or
test
or
push
shrb
jp
dec
xor
mov
int
and
mov
dec
mov
orb
push
xor
push
inc
push
sbb
xlat
jb
sub
repnz
aam
aas
mov
mov
or
les
inc
add
adc
sub
jno
sbb
add
xchg
cmp
cmp
cmp
dec
dec
cmp
inc
out
fldt
out
cmp
pop
test
push
comiss
dec
mov
push
push
add
adc
xchg
pop
and
xchg
adc
xor
in
add
xor
loope
xlat
dec
sarb
arpl
subps
clc
adc
and
push
or
shll
or
andl
jne
adc
pop
sub
mov
push
sbb
jns
je
dec
and
jo
pushf
sbb
icebp
inc
jmp
jbe
xor
rorb
mov
jl
and
es
mov
iret
aaa
cli
or
es
adc
outsl
dec
lock
push
sub
pop
sbb
push
cli
push
pop
aaa
add
sbb
aaa
or
adc
inc
xor
or
cs
inc
or
pop
adc
sub
inc
aaa
adc
add
and
lcall
and
dec
pop
push
or
add
adc
adc
adc
pop
cmp
add
add
dec
sub
add
xor
adc
lret
lfs
pop
pop
dec
sbb
xor
pop
inc
dec
xor
in
in
adc
mov
adc
inc
cmp
dec
pop
push
or
xchg
mov
sub
pushl
ds
pop
pop
sub
das
sub
xor
cmp
add
adc
dec
mov
cmp
sbb
pop
push
adc
sbb
and
cmp
push
xor
sub
dec
mov
jmp
inc
jmp
psraw
push
sbbb
ror
adc
decl
fmuls
mov
sub
add
adc
push
push
dec
xor
cmc
push
adc
mov
call
inc
push
jle
adc
scas
adc
push
inc
out
sub
xor
xor
dec
pop
pop
mov
pop
jle
and
pop
cmp
outsl
and
inc
adc
fs
jb
jno
les
lcall
shrl
popl
pusha
je
movsl
enter
inc
jb,pn
cli
dec
push
add
push
ss
inc
push
push
inc
push
dec
inc
dec
push
dec
pop
mov
outsl
jnp
sub
sarb
sub
jne
push
into
mov
sbb
sbb
sbb
dec
pushf
test
add
cmpsb
testl
lods
ds
xor
adc
xlat
lea
daa
pop
test
fstpl
push
sbb
sbb
sub
pop
dec
inc
sbb
add
lcall
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
fldl
adc
jge
push
lock
pushl
jb
mov
andb
fwait
rol
fwait
in
inc
mov
ud0
outsl
and
and
sub
sub
fsubrl
stc
jbe
push
ds
lcall
enter
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
daa
cmp
sbb
cld
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
jmp
jo
dec
ret
insb
sbb
xchg
shll
cltd
test
push
push
shll
insb
aaa
push
dec
ja
daa
mov
mov
mov
cmp
fmuls
lret
rep
ljmp
push
outsl
arpl
test
add
mov
mov
movsb
mull
pushl
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
jmp
pop
inc
cmp
jns
dec
sub
aaa
insl
xor
inc
pop
push
push
jne
sub
fbstp
cmp
cmp
addr16
jnp
dec
push
xor
xor
jge
js
cs
pushl
decl
dec
cmp
je
sub
cwtl
inc
push
dec
add
jl
push
jae
cmp
or
lcall
dec
inc
dec
pop
jno
imul
sbb
cmp
and
jnp
push
push
aaa
push
xor
dec
sarl
pop
xor
xor
push
inc
add
inc
add
inc
xor
and
fstps
jbe
aaa
inc
push
inc
cs
inc
xlat
sahf
pop
scas
ss
pcmpeqd
ss
cmpsl
mov
and
ss
mov
xor
loopne
add
pop
add
popf
shrb
pop
or
sbbl
rorb
call
scas
push
iret
outsb
sbb
mov
int3
cmc
fldenv
adc
inc
add
insb
push
mov
jne
out
mov
scas
cmp
mov
mov
jns
add
push
push
out
daa
rclb
inc
mov
dec
data16
push
add
dec
das
xor
cmpsb
js
pushf
mov
mov
push
roll
adc
inc
adc
sbb
mov
adc
frstor
xor
push
adc
lahf
push
cmpsl
jg
shll
mov
popa
add
adc
sub
xchg
das
mov
dec
or
jbe
push
sbb
mov
and
fs
sub
mov
gs
and
addb
loopne
inc
sub
test
add
push
jne
xchg
neg
arpl
xchg
lret
roll
adc
add
fs
and
mov
add
sbb
xchg
inc
lock
popf
mov
aaa
inc
rclb
sarb
popa
push
mov
adc
sub
loop
xchg
dec
cmp
pop
cmp
fs
xchg
fiadds
mov
adc
or
ret
push
outsl
sbb
pop
cld
in
push
dec
pusha
and
add
sub
lds
or
jnp
cmp
push
aad
or
push
mov
fnstcw
outsb
je
jl
enter
pop
js
xor
jae
popa
jo
into
mov
cmp
loop
add
add
sub
push
sbb
or
mov
test
idiv
xor
insl
loop
push
lea
cmp
das
out
fwait
jno
push
push
dec
fiaddl
insb
push
popa
int3
lea
je
inc
pop
dec
adc
pop
pop
add
cmp
adc
out
adc
fisttps
pop
push
mov
mov
pop
push
jmp
dec
pop
and
or
sbb
shlb
lods
pop
mov
das
pushf
push
adc
push
in
jb
mov
push
push
hlt
jle
test
ss
aaa
fs
ret
jae
mov
adc
scas
movsl
cmp
mov
sbb
sub
adc
or
stos
adc
pushf
jmp
dec
or
sbb
out
fisubs
rcrb
movsl
cmp
sbb
adc
sbb
pop
mov
dec
jecxz
add
pop
repnz
adc
sub
mov
sbb
fmuls
outsb
dec
popa
dec
jge
push
pop
lret
ja
jb
pop
incb
in
jae
inc
jne
leave
sub
test
and
mov
andl
daa
jno
pop
sbb
push
sub
or
jl
push
dec
adc
inc
lods
and
sub
adc
loope
xor
and
cmp
mov
add
test
aaa
and
insb
daa
sub
enter
mov
jbe
jo
mov
or
cmc
push
test
outsl
imul
inc
sti
arpl
push
push
cmovb
shlb
adc
aas
inc
push
jp
pushf
fbstp
pusha
pop
stc
or
xor
ss
aad
inc
push
dec
pop
pop
mov
sbb
sbb
leave
movsl
push
pop
dec
push
pop
sbb
or
cmp
sbb
imul
and
pop
sbb
xor
pop
repnz
iret
pop
mov
and
xchg
je
mov
add
dec
xor
sub
std
daa
outsl
inc
jge
fstpl
outsb
ja
imul
pop
dec
mov
roll
or
rclb
fstl
insb
jmp
int
cmp
add
push
daa
scas
imul
add
mov
pop
pop
aas
push
inc
shrb
dec
push
es
add
pop
pop
or
test
mov
insl
das
dec
adc
dec
pop
dec
pop
fcmovnu
sub
movsl
adc
repz
cmp
cs
xor
push
jge
add
add
enter
shrd
dec
jno
push
add
aad
rclb
nop
dec
dec
mov
fadd
dec
xor
pop
mov
adc
mov
and
mov
jnp
inc
and
inc
cld
or
add
movsl
scas
jns
cmp
shlb
das
add
imul
test
or
lods
mov
sbbl
push
cmp
pop
dec
cmp
cwtl
call
addr16
popa
sub
test
and
fmuls
lcall
out
and
punpckhwd
dec
outsb
push
je
xchg
push
insb
shrb
inc
insb
ret
push
push
inc
dec
push
iret
or
inc
dec
inc
push
pop
cwtl
dec
xlat
jb
gs
jns
inc
xchg
xorb
push
fwait
pop
daa
cmp
roll
pop
mov
rclb
aas
dec
pop
les
pop
js
add
xchg
inc
add
add
inc
js
and
scas
or
adc
and
add
or
rolb
sbb
mov
or
neg
ret
jb
gs
or
push
adc
push
inc
add
add
dec
inc
push
or
add
or
xchg
insl
add
inc
test
inc
xor
or
mov
xor
insb
dec
mov
and
sbb
xor
mov
cmpsb
inc
inc
inc
cmpsb
sub
inc
mov
and
cltd
adc
and
push
mov
lock
and
jno
cltd
cmp
cmc
inc
mov
adc
mov
out
shl
jnp
pop
sub
pop
pop
sbb
push
in
lret
rclb
sbb
adc
loopne
xchg
sub
fsubrl
das
outsl
mov
clc
add
mov
test
adc
sub
mov
dec
pop
and
arpl
sub
outsl
mov
aas
bound
je
inc
add
rolb
pop
imul
std
int
rcr
mulb
outsb
icebp
shrb
jle
xor
inc
das
mov
in
ret
dec
orb
xchg
dec
inc
xadd
sbb
flds
inc
das
mov
inc
cmpl
lock
cmp
mov
jo
maxps
xchg
mov
add
int
cmp
add
adcb
outsb
jnp
fcoms
cmp
aas
ficompl
test
addr16
sarl
fisttps
or
daa
add
stos
jne
jnp
sub
inc
das
inc
add
outsl
ror
cmpsl
ja
mov
add
iret
test
daa
test
mov
in
test
mov
jns
sub
pop
cld
add
mov
jg
dec
scas
jbe
fildll
sub
inc
dec
scas
in
inc
cmp
dec
scas
in
xor
in
scas
sub
push
xchg
ret
dec
pop
adc
dec
mov
out
pushw
loopne
push
les
add
mov
cmp
sarl
mov
lahf
cmpsl
stc
push
pop
xor
cld
pop
xchg
jns
jmp
mov
pop
sahf
pop
pop
ds
sahf
out
out
push
mov
add
pop
enter
mov
dec
icebp
jns
jl
push
push
enter
add
inc
inc
adc
cs
out
dec
inc
lahf
push
xor
pop
enter
aam
fsubrs
repnz
movsb
add
ds
dec
sub
add
xrelease
sbb
jns
mov
mov
dec
add
pop
jg
mov
mov
adc
add
dec
mov
xchg
pop
cmp
or
inc
js
and
pop
push
lock
add
dec
push
push
pop
dec
xor
outsl
add
inc
mov
sub
jnp
sahf
or
leave
and
jns
or
ss
add
sub
dec
inc
push
mov
ret
xchg
sbb
pop
scas
add
pusha
popl
push
xor
xor
inc
dec
scas
mov
pop
test
lods
xor
popa
sub
fimuls
push
push
sbb
pop
scas
mov
mov
add
outsl
sub
insb
out
decl
scas
fs
xor
jns
fs
pop
pop
enter
inc
pop
fildll
pop
enter
outsl
sub
fs
xchg
lock
or
xchg
cmp
xchg
mov
add
mov
jl
adc
adc
lcall
jbe
pop
leave
add
rcrb
push
or
lock
nop
fidivl
add
bound
xor
push
sub
fs
xor
pop
fildll
jbe
ret
push
fbld
outsl
or
das
in
sub
nop
sub
jnp
sbb
push
dec
xchg
scas
add
bound
rorl
scas
add
scas
pop
xor
xor
push
aaa
fiaddl
cs
sahf
mov
mov
lcall
ss
dec
add
pusha
daa
addr16
mov
ss
lds
lahf
sub
pop
mov
test
mov
ret
out
adc
hlt
push
fcoms
pop
dec
sarl
xchg
into
mov
enter
push
xor
or
cmp
dec
enter
popa
divl
nop
adc
enter
js
ret
push
push
push
push
outsl
jg
add
xchg
pop
enter
or
pop
jecxz
dec
sti
push
lods
bound
or
ss
push
test
mov
xchg
push
or
sub
or
mov
or
pop
or
dec
test
bound
xlat
or
popa
stos
es
daa
lock
or
and
arpl
jo
lahf
xchg
xor
push
arpl
jbe
pop
arpl
testl
xchg
fdivs
add
lock
sahf
cld
add
fs
addl
cmp
push
mov
shlb
inc
mov
pop
ja
add
subl
dec
xchg
call
or
fsubs
out
mov
xchg
sbb
adc
pop
outsb
leave
xchg
cmp
pop
mov
insb
ja
add
jg
addr16
jns
in
int3
fsub
sbb
pop
and
jmp
add
and
push
addr16
leave
mov
mov
test
pop
pop
cmpsb
mov
sub
mov
ss
cmp
aaa
add
and
pop
aaa
cld
xchg
lods
in
fs
cmpsl
add
mov
xor
inc
xlat
add
push
sub
push
daa
dec
out
aam
xchg
sub
add
loope
mov
or
pop
pop
lahf
cmpsl
jge
adc
or
imul
jmp
andb
cmp
or
movsb
pusha
cmp
enter
or
xor
or
jae
pop
pushf
push
dec
sub
xchg
outsl
add
or
xor
add
divl
add
dec
cmpsb
or
sbb
js
cwtl
imul
shrb
in
in
stos
loopne
cwtl
add
adc
addr16
mov
or
cltd
nop
push
aam
and
mov
daa
add
mov
or
push
jns
jo
in
fisubrs
clc
push
xor
adc
xlat
and
mov
xchg
out
add
mov
out
ss
daa
sub
jo
cmpsl
scas
shll
push
rclb
pushf
mov
ss
mov
add
cmp
shrb
inc
mov
pop
in
ja
cld
outsl
repnz
add
and
rclb
jnp
xor
cmp
xlat
lods
inc
cmp
pop
mov
push
mov
cwtl
mov
repnz
push
ss
xor
push
or
in
fbld
pop
pushw
loopne
rcll
pusha
mov
cld
fdivrl
mov
out
ds
mov
insl
dec
repz
mov
outsl
ds
repz
mov
jns
out
ss
jl
shl
cmp
out
adc
mov
repz
out
outsl
es
push
jo
stc
cmp
push
movsb
pop
jno
int
jns
jo
mov
add
ds
repz
je
cld
and
jl
out
pop
push
lods
je
or
cmpsl
stc
cmp
insb
xchg
fisttpl
jbe
int
jns
jg
mov
or
sahf
out
cmp
fsubs
js
test
fmuls
cmp
mov
sahf
out
jmp
test
xor
out
das
jnp
jp
jns
iret
cmp
cmpsl
stc
xor
loope
jge
movd
sarl
mov
jg
js
int
stc
cmp
inc
add
cmpl
fmuls
andl
stc
cmp
dec
test
fidivrs
test
out
cmp
sub
xchg
sarl
rcll
mov
jge
sar
and
stc
cmp
repz
mov
loop
mov
xor
cmpsl
insb
cli
lea
out
ds
mov
sti
repz
test
jns
dec
jo
xchg
pop
aad
xchg
out
ds
jno
adc
mov
push
call
lcall
in
xor
shr
and
lcall
fisttps
pushf
repz
movsb
lret
push
ss
imul
sahf
dec
push
mov
ds
repz
jle
push
iret
sarl
int3
pop
mov
out
sbb
mov
repz
cmpl
sarl
push
mov
xor
iret
mov
divl
test
sahf
mov
cmp
pop
mov
lods
sahf
inc
lods
iret
sarl
enter
in
jl
iret
mov
inc
mov
xor
out
mov
add
jns
data16
mov
imul
dec
ret
push
mov
repz
and
pop
cwtl
sti
inc
ror
jl
add
and
push
sahf
sar
push
int
repz
fldt
lock
pusha
lret
lret
push
push
rcrl
int
and
cmc
iret
mov
ret
rcl
int3
mov
sarb
push
aam
sar
pop
inc
inc
or
movsb
sbb
rcr
jmp
es
iret
in
jnp
add
scas
mov
mov
fidivl
cmp
ja
add
add
xchg
pop
leave
insb
sbb
imul
jne
fs
pop
paddq
mov
sub
aas
dec
adc
das
fs
shrb
xor
jecxz
or
mov
imul
sbb
and
int3
jae
mov
loope
jae
outsl
clc
push
out
or
xor
aaa
xchg
inc
test
xor
pop
jnp
mov
ss
push
pop
mov
xchg
into
les
dec
out
jge
xchg
xor
in
mov
jg
jbe
mov
inc
pop
leave
mov
mov
fwait
sbb
aaa
jle
fistpll
push
mull
inc
mov
dec
mov
sbb
push
in
or
scas
fxch
sub
test
fdivrl
ss
fnstsw
mov
sbb
aas
mov
in
dec
ss
and
pmaxsw
out
lea
push
cli
stos
pop
cmp
cs
push
inc
pushl
insl
and
cmp
sbb
fcoml
daa
in
out
or
call
inc
adc
fucom
repnz
push
cmc
inc
add
stos
daa
outsl
or
ds
or
lahf
and
ja
ja
sbb
sahf
push
sub
mov
cmp
and
outsl
into
push
ss
je
jmp
inc
addl
adc
pop
pop
pop
iret
and
mov
push
aas
xchg
push
push
and
idivl
jns
pop
nop
sub
xchg
lahf
mov
jo
inc
inc
push
or
jns
add
sub
outsl
ret
arpl
test
and
xchg
jns
cs
xchg
add
dec
dec
in
aas
in
jbe
scas
cs
cmpsb
inc
push
out
in
in
and
jp
jp
add
cmc
mov
ja
mov
jg
mov
nop
icebp
add
push
repnz
jle
pop
insb
inc
or
call
sub
xor
cmp
dec
pop
jb
sub
addr16
and
jo
leave
and
enter
push
dec
push
cmp
hlt
scas
daa
adc
xchg
sbb
scas
jnp
pop
mov
jl
enter
in
mov
les
enter
and
inc
cs
inc
or
inc
outsl
add
daa
iret
enter
cld
sub
adcb
movsl
mov
sbb
fsubl
jge
xchg
push
icebp
add
les
push
aad
xchg
xor
jle
mov
pusha
lock
adc
scas
and
cltd
xchg
xor
jle
cltd
xchg
pop
and
das
inc
dec
mov
cmp
jg
mov
inc
outsb
repz
in
outsb
dec
push
add
iret
repz
bound
sub
cmp
xchg
and
or
mov
rcrl
in
loope
sbb
sbb
es
and
sub
mov
cmc
mov
fwait
in
mov
sbb
push
mov
dec
outsl
push
outsl
inc
repnz
xchg
fmulp
leave
leave
test
lahf
xchg
out
movsl
add
push
sbb
fsubp
xchg
pushf
pushf
pushf
out
idiv
insb
and
and
jo
jo
jb
enter
jo
jo
jo
jae
dec
shrb
outsb
mov
jl
test
mov
loope
pushf
mov
adc
jo
xchg
cmp
jo
out
and
mov
pushl
xchg
cmp
jno
add
mov
es
das
fcompl
adcl
sbb
das
xor
mov
mov
popa
fiadds
test
add
outsb
and
int3
or
popf
xor
aas
add
xchg
lds
test
jg
test
jb
test
push
leave
mov
push
mov
jb
jb
mov
jb
test
test
inc
push
jb
jb
jb
and
cmp
jb
jb
test
cmp
in
hlt
xchg
nop
test
adc
test
hlt
jb
pop
and
out
xchg
aas
loope
jo
vmread
jae
das
das
das
mov
jae
jae
jae
cs
das
mov
push
or
repz
fisttpl
out
icebp
or
out
cmp
or
jns
out
nopl
sub
out
sahf
out
adc
adc
jns
adc
adc
sahf
out
pop
sbbl
sbb
je
sbb
in
shll
push
xlat
xchg
xchg
pop
leave
and
xchg
mov
fsub
popf
mov
jns
adc
add
mov
xchg
out
roll
cmp
xchg
pop
in
or
je
sub
rorl
pop
jbe
add
daa
int3
mov
lret
and
adc
cltd
xchg
add
mov
js
pop
leave
dec
cs
fdivs
cmp
in
xor
lea
cmp
ja
das
push
ja
mov
push
outsl
pop
ja
mov
adc
nop
add
and
inc
aas
cmp
ja
js
dec
xchg
out
fldl
daa
movsb
fildll
xchg
push
push
mov
lahf
aaa
cmp
jns
mov
js
js
mov
das
lcall
pop
out
sbb
inc
aas
add
in
push
sub
mov
xor
or
movsb
xchg
mov
ficoml
xchg
mov
cld
repz
jns
in
mov
xor
and
jns
dec
repnz
mov
ljmp
stos
inc
sbb
leave
mov
lea
leave
and
nop
fisttpl
pop
nop
push
sets
sahf
add
pop
insl
xchg
jp
addr16
iret
testb
xlat
addr16
iret
sbb
jnp
adc
and
mov
lret
inc
push
leave
jns
movsb
mov
mov
jb
in
mov
in
inc
lahf
jnp
jnp
jnp
lahf
frstpm(287
sarb
add
inc
dec
or
add
and
leave
and
xchg
xor
nop
inc
mov
push
leave
pop
enter
or
inc
fmull
popf
in
cmp
push
dec
nop
cmp
mov
pop
rcrl
dec
xor
lds
stc
adc
adc
jns
jns
sbb
and
sub
xor
jns
jns
cmp
inc
jge
jge
jge
jns
jns
jge
jge
jge
jge
jbe
jns
jge
jge
pop
daa
daa
daa
push
or
daa
daa
or
or
daa
daa
daa
daa
push
add
daa
daa
add
add
cmp
xchg
scas
addr16
in
mov
loop
dec
cmp
jle
xchg
pop
jb
push
sub
jle
data16
ja
in
in
jns
xchg
stos
fistps
int
fcmovne
sbb
jle
aas
aaa
bnd
cmc
paddw
push
add
loopne
mov
scas
adc
and
xchg
int
and
pop
mov
pusha
punpckhbw
add
leave
jae
jo
enter
in
and
mov
add
jg
icebp
pop
adc
jmp
xchg
daa
fisttpll
push
psubq
or
outsl
fimull
orb
sub
adc
xor
cmp
dec
pop
repnz
push
cmovle
add
popa
test
cmpsl
mov
fdivs
faddp
push
pop
mov
aas
dec
push
add
imul
clc
pop
dec
andb
or
adc
pusha
daa
sub
or
rorl
jae
loopne
jle
mov
cmp
pushf
stos
sbbb
cmpb
cmp
cmp
sti
xchg
adcb
jae
in
and
iret
cmp
popf
cmp
repz
add
push
pop
jno
xlat
or
xchg
mov
mov
movsb
ret
mov
xchg
rcl
add
cmp
adcb
push
subb
addr16
add
xor
aas
xorb
cld
incl
addb
sbb
sbb
sbb
out
sbb
pop
xchg
mov
outsb
xchg
push
xor
pop
leave
jae
hlt
orb
cwtl
call
outsl
mov
orl
cmp
add
or
push
push
sbb
sub
mov
loop
cmp
daa
or
mov
push
add
add
pop
jb
sbb
jns
test
dec
inc
mov
adc
cltd
add
jl
xor
enter
scas
les
mov
cld
inc
data16
and
cmpsl
test
xor
shlb
add
dec
lcall
daa
pop
iret
mov
mov
addr16
jb
das
sub
push
enter
fcomps
xlat
adc
fwait
add
xchg
adc
daa
xor
xchg
xchg
xchg
push
lock
test
xchg
inc
repnz
xchg
xchg
push
fists
xchg
mov
pop
fnstsw
cs
mov
pop
rorb
mov
pushf
lahf
inc
fwait
in
and
sahf
xchg
into
leave
jo
pop
xchg
mov
cmp
add
cmp
xchg
xchg
mov
ja
lock
or
fwait
popf
xor
mov
das
das
jg
inc
mov
pop
mov
das
das
das
das
jae
jle
mov
fsubrl
mov
popf
dec
dec
outsb
inc
vaddsubps
out
dec
dec
dec
icebp
cld
pop
mov
jns
movlps
mov
jns
js
mov
or
mov
repnz
mov
mov
inc
lea
les
les
push
add
repnz
mov
cltd
push
mov
mov
ja
jb
xchg
cmp
pushf
xchg
rorl
movsb
xchg
addr16
out
mov
pop
mov
ss
mov
pop
pop
mov
pop
mov
das
mov
into
cmc
das
mov
aaa
mov
xlat
push
dec
mov
pop
mov
mov
dec
fwait
mov
and
cs
mov
pop
nop
sbb
daa
mov
jns
cmp
mov
in
jge
mov
push
add
in
cmp
ja
mov
fwait
lcall
fldcw
dec
verw
mov
sbb
mov
das
rcrb
or
sahf
out
es
loop
ljmp
dec
andb
lea
leave
subl
sbb
lcall
dec
outsb
pop
sub
mov
ja
mov
mov
mov
mov
xchg
xchg
loop
hlt
mov
lds
mov
mov
mov
mov
int3
xchg
mov
in
pop
add
jp
cmp
das
rorl
leave
mov
mov
mov
jmp
dec
bt
add
pop
dec
into
jne
jb
jp
popl
shll
movsb
aas
movsl
fildll
mov
mov
xchg
xchg
int
fucom
pop
pop
pop
jle
in
cmc
std
popl
pop
or
or
in
in
or
pop
in
in
push
add
out
add
sbb
sahf
out
sub
out
sahf
cmp
jae
bnd
and
gs
repz
and
and
ss
test
push
nop
mov
daa
fstpl
iret
pushf
loopne
xchg
out
or
xchg
mov
sbb
rcl
inc
xchg
add
fcmovne
in
in
push
cmp
nop
cwtl
fsubrl
cmp
mov
mov
pop
emms
psllq
push
jmp
fdivrs
or
repz
loopne
call
je
clc
pop
psraw
add
sahf
or
adc
xchg
xchg
sbb
adc
das
xchg
xchg
inc
repnz
cmpsl
pushf
loop
leave
orb
iret
repz
mov
mov
cmp
xchg
enter
pop
lock
clc
fadds
push
push
ja
mov
xchg
test
add
mov
dec
insb
xor
xchg
out
push
add
inc
mov
imul
xchg
mov
pop
or
test
or
sub
pop
cmp
aad
nop
xchg
pusha
inc
cmp
and
enter
sahf
sbbl
fstpt
jecxz
jb
pop
fsubrl
idivb
xchg
scas
push
xchg
sub
test
jb
cmp
cmp
jmp
stos
cld
fisubs
xor
leave
add
out
fists
cwtl
xchg
ja
stos
mov
fmull
rolb
mov
ja
xchg
decl
xchg
jae
outsb
in
xchg
and
jg
xchg
aaa
inc
dec
sahf
fsts
pop
in
outsb
cmp
mov
psubw
outsb
pop
movzwl
in
fs
enter
loopne
rcl
pop
fsub
sub
cs
mov
xchg
das
and
test
clc
stos
out
xchg
xchg
repnz
xchg
lods
leave
leave
leave
inc
orb
mov
cmpsl
push
movsb
cmp
leave
push
scas
loopne
lret
shrl
mov
jae
pop
xchg
wbinvd
add
repz
adc
sbb
cmp
leave
leave
sub
cmp
inc
sahf
fcmovne
repz
pop
pop
or
sahf
out
popa
or
sahf
out
jno
jns
xorl
pusha
aaa
aad
lods
pop
das
lds
jae
int
aad
fldl
in
jecxz
addr16
aad
movb
scas
or
or
enter
scas
adc
fstpl
ljmp
push
rcll
push
jb
dec
mov
mov
verw
aas
pusha
sbbl
mov
jns
stc
or
mov
cwtl
and
xlat
js
cwtl
out
cwtl
scas
sti
xchg
lea
addr16
addr16
leave
inc
ds
daa
dec
pop
ljmp
push
jo
es
ja
cltd
pop
mov
leave
inc
repnz
lmsw
mov
add
int3
fwait
stos
clc
mov
jg
das
out
lahf
in
outsb
jb
add
lcall
sbb
jno
ja
push
or
in
inc
imul
push
out
push
xorb
xor
in
outsl
lcall
xchg
out
pop
xchg
add
lar
inc
negb
lcall
rcrb
or
xor
out
repz
xchg
mov
lsl
in
es
add
out
cmp
sub
or
cmp
or
or
or
mov
mov
fwait
jae
cmp
pop
mov
fwait
iret
shll
xchg
mov
jbe
add
iret
xlat
mov
loope
inc
repnz
cli
add
push
ja
jo
dec
sahf
pusha
outsb
sbb
daa
push
pushf
inc
pushf
inc
sub
adc
adc
inc
mov
ja
mov
daa
adc
jnp
pushf
inc
mov
mov
mov
push
lock
loopne
sti
push
popf
lahf
popf
das
aas
loopne
push
popf
das
push
popf
aas
es
cs
and
or
ljmp
mov
stc
sbb
sbb
jmp
popf
pop
sbb
sbb
lret
lret
lret
mov
popf
loopne
jle
lret
lret
jmp
negb
sahf
bnd
and
sub
cmp
sahf
inc
sahf
movlps
in
push
add
mov
or
and
loopne
das
sbb
jb
call
sahf
add
or
and
in
lahf
inc
mov
add
mov
nop
mov
inc
cmpsb
push
sbb
jb
enter
lahf
fs
jb
fdivl
xor
mov
push
enter
pop
xchg
lahf
lcall
fldt
mov
repz
sub
jb
lock
nop
pop
faddl
fwait
dec
movsl
mov
mov
les
mov
addr16
mov
and
or
mov
jo
iret
jae
cmp
orb
add
jl
mov
cwtl
mov
adc
nop
shlb
cmp
scas
mov
inc
fiadds
jmp
hlt
jmp
mov
scas
mov
cmp
bound
pop
out
sahf
out
push
lcall
or
sbb
aad
mov
mov
and
mov
dec
sahf
out
rcr
adc
ljmp
cli
lar
sbb
and
outsb
sub
xor
fstpt
fs
pusha
push
shll
js
add
mov
xchg
pop
xchg
dec
lcall
mov
mov
or
dec
mov
inc
adc
in
jns
out
xchg
iret
in
in
incl
jg
daa
and
mov
cmp
and
pop
dec
pop
or
push
pop
jae
pop
cmpsb
jg
insb
inc
pop
xorb
xlat
add
xchg
mov
dec
cmpsl
or
fwait
or
mov
daa
daa
pop
lahf
test
iret
repz
movsl
add
loope
fwait
lar
xchg
mov
xor
jo
loopne
call
lock
in
nop
dec
xchg
icebp
adc
jnp
movsb
iret
xorps
push
out
pop
and
addb
mov
mov
lret
aaa
fs
and
iret
mov
push
adc
pop
leave
jae
cmp
js
dec
into
and
daa
fisttpll
stos
mov
add
call
xchg
dec
aaa
movsl
verr
mov
add
aam
dec
or
daa
push
mov
fidivs
cmp
inc
cmpsb
jo
cmp
aaa
pavgb
xor
jb
cmpsl
cmpsb
cmpsb
cmpsb
inc
movsb
or
out
out
cmpsb
pop
and
jae
push
dec
cmpsb
loopne
movsb
fistpl
add
or
pop
jbe
mov
cmpsb
shlb
fsubs
dec
sahf
xchg
or
clc
push
rcrl
pop
or
push
adc
jns
out
sbb
and
sub
cmpsl
lcall
cmpb
mov
add
add
mov
enter
add
mov
ja
mov
sub
movsb
sbb
rcr
loopne
ja
push
daa
dec
daa
rcrl
iret
cs
fxch
cmpsl
test
or
mov
mov
and
lret
push
mov
test
add
daa
iret
dec
data16
cld
sahf
ja
xchg
sbbb
or
test
sarl
stc
decl
pop
fs
rol
aaa
mov
cmp
and
daa
add
and
jb
test
mov
pop
test
in
inc
xchg
xchg
dec
outsb
mov
out
test
mov
repnz
loopne
addr16
cmp
in
adc
enter
sub
out
dec
stos
repz
in
stos
pop
dec
pop
popa
or
or
outsl
daa
iret
dec
add
andb
stos
addr16
fisttpl
cs
les
ud2
mov
test
xchg
add
inc
push
and
stos
movaps
stos
clc
xchg
push
add
pop
sub
xchg
subb
sarb
stos
es
dec
add
mov
loop
aas
fldt
outsl
and
stos
sti
aas
add
clc
add
adc
shrb
push
lods
das
shrb
pusha
cmp
mov
push
push
jnp
xchg
xchg
outsb
repnz
add
xchg
xchg
orl
mov
leave
push
ror
rclb
loopne
add
ret
adc
xor
clc
pop
iret
jae
cmp
lods
adc
adc
sbb
or
and
sub
repz
js
lods
call
enter
lret
xorl
lods
addr16
mov
mov
mov
test
jb
in
lock
clc
hlt
push
lds
and
cmp
push
scas
pop
scas
jnp
subl
setbe
out
daa
pusha
push
or
jo
in
dec
ret
prefetch
or
push
shrb
mov
push
add
sahf
out
sahf
add
add
add
in
dec
dec
xor
push
pop
mov
fucom
arpl
packssdw
dec
dec
dec
outsb
movd
dec
dec
jecxz
mov
sub
daa
daa
daa
dec
insb
nop
mov
cmp
daa
fsub
sbb
repnz
cmp
sbb
mov
add
and
push
dec
push
push
and
jns
leave
pop
pushw
and
dec
xor
pop
js
mov
mov
and
push
add
inc
repnz
lock
leave
fs
dec
rcrl
mov
cmp
daa
mov
xchg
outsl
ja
and
cmc
lea
mov
push
mov
cmp
cltd
loop
repnz
push
mov
mov
mov
pop
sbb
xchg
cmp
dec
mov
mov
dec
inc
mov
jbe
xchg
repz
mov
push
xchg
pop
sahf
lock
repz
cs
sub
mov
mov
mov
sbb
add
mov
mov
insb
pushf
push
dec
out
sub
mov
add
adc
sbb
sete
inc
mov
mov
xchg
xchg
xchg
xchg
mov
mov
mov
mov
xchg
xchg
xchg
xchg
mov
mov
mov
mov
xchg
xchg
xchg
xchg
mov
mov
mov
mov
mov
out
mov
mov
mov
mov
mov
mov
mov
out
push
mov
push
push
push
sbb
repz
repz
sub
xor
repz
and
and
push
cmp
repz
pop
es
repz
rep
sub
and
es
sub
enter
cs
mov
out
cmpsb
xchg
lret
enter
sahf
out
imul
jl
dec
push
scas
mov
test
int
mov
enter
mov
push
add
sgdtl
sub
mov
or
orb
in
mov
in
fs
mov
ss
in
push
jne
test
in
sahf
jge
adc
mov
lgs
roll
pand
jecxz
add
xchg
xchg
mov
inc
mov
dec
das
pop
punpcklbw
jns
out
and
xchg
cmp
neg
add
mov
sahf
outsb
daa
cmpsb
cmp
mov
out
inc
ss
mov
sub
cmp
xor
push
outsl
rep
daa
iret
xor
ja
iret
leave
xchg
aaa
lahf
cmpsl
mov
iret
mov
mov
mov
addr16
arpl
xchg
and
mov
outsb
pop
leave
add
sub
inc
in
mulb
push
pmulhuw
jns
mov
add
xchg
mov
mov
lock
roll
ja
mov
cmp
rcrl
fwait
push
add
pushf
mov
out
mov
repz
bswap
or
nopl
sub
adc
adc
cmp
leave
repz
jp
test
leave
repz
nop
sbb
repz
sbb
pushf
cmp
rcrb
pushf
cmp
call
das
das
das
sub
or
sub
lahf
sub
xor
rclb
lock
in
xchg
and
mov
pushf
cmp
shrb
add
fadds
adc
pop
call
in
test
clc
mov
or
pop
outsb
repnz
adc
mov
mov
and
cmp
in
daa
inc
push
adc
lar
into
repz
pop
pop
jns
cmp
push
pusha
out
dec
lret
dec
mov
sbb
sbb
inc
es
aam
es
cmp
popf
fsubl
aas
outsb
xchg
mov
in
mov
mov
leave
rclb
xlat
fsubp
xchg
add
jbe
jns
divb
cmpsl
and
xchg
addr16
lods
sub
outsb
inc
mov
jmp
aaa
aad
insb
mov
xchg
test
dec
scas
mov
leave
leave
insl
cmpb
repnz
cmp
filds
out
cwtl
in
insl
in
or
adc
sbb
ja
pop
and
add
cmp
mov
add
mov
orb
jo
pop
cmp
popf
pushf
pop
btc
lret
pop
shl
jns
fisttpll
jmp
xchg
out
repz
push
shl
xchg
and
shll
rcll
jb
sarl
mov
dec
es
cmpsl
popa
imul
xchg
sahf
xchg
fcmovne
pushf
movsb
xchg
lods
mov
mov
cmp
add
xchg
add
neg
pop
js
lcall
pop
ret
ret
daa
cmp
pop
ret
ret
outsl
jecxz
test
inc
jg
ret
in
in
ret
ret
mov
pop
jp
sbbb
ret
and
call
fisttpll
idivl
aad
daa
pop
leave
jae
cld
clc
add
enter
ret
adc
sbb
xchg
call
scas
ja
sahf
fucomi
inc
cmovnp
xchg
cmp
mov
xchg
mov
xchg
cmpsl
push
shl
adcb
cmp
and
ja
hlt
ret
push
sbb
das
pop
cmp
xchg
mov
out
les
pop
das
add
iret
jae
aaa
aas
add
push
add
aaa
addb
fsubl
add
mov
mov
adc
pop
iret
rol
xor
and
xor
add
or
adc
pop
insl
xchg
lds
pop
jnp
jns
pushw
add
pop
pop
jp
outsb
syscall
xchg
jle
xchg
xchg
xchg
xchg
lds
lds
vpextrw
ffreep
ljmp
lds
or
jns
jns
push
and
sub
aaa
jns
jns
inc
dec
pop
arpl
jns
jns
outsb
jns
test
pop
daa
fnsave
lcall
dec
dec
outsb
daa
sbb
sbb
sbb
dec
dec
pop
push
adc
dec
sub
xchg
out
cs
push
xor
jns
out
xchg
movsb
fsubrl
jnp
out
lods
pslld
cmp
cmp
sahf
out
iret
or
push
adc
cmp
sub
cmpsl
push
aas
aas
sahf
out
sahf
inc
dec
inc
push
inc
pusha
repz
inc
fidivs
cmp
leave
cmpl
dec
dec
cs
fimuls
dec
out
cli
syscall
enter
sahf
out
push
sbb
pushf
fmull
push
xor
inc
push
leave
repz
pushf
pop
push
jns
cvtps2pd
xchg
out
cmp
lahf
stos
fbstp
cmp
enter
repz
cmp
leave
push
add
add
leave
push
repnz
iret
push
sub
or
repz
jbe
push
or
iret
mov
bswap
repz
adc
pop
sahf
ja
cmp
pusha
push
iret
repz
js
pop
sbbb
mov
push
leave
push
sbb
ja
mov
push
aad
lea
leave
and
fimuls
in
cmp
lret
lret
sahf
out
jns
cmp
add
dec
push
lret
lret
dec
cwtl
loopne
mov
jb
mov
jl
daa
pushf
cmp
and
mov
cmp
fildl
push
sarb
sbb
fcoms
lret
sbb
outsb
add
iret
or
lock
push
clc
lret
or
fsub
cmovl
scas
lret
scas
cld
sub
in
lret
push
lret
outsl
pop
lret
mov
lret
jo
iret
mov
or
mov
xchg
pop
ja
mov
daa
stos
mov
mov
xchg
mov
in
sahf
pop
jo
out
jg
add
mov
int3
pop
push
mov
int3
out
outsb
and
sahf
out
sahf
or
push
or
fmull
pop
jb
mov
repz
pushf
xchg
sahf
adc
lfs
jns
iret
push
aad
push
sbb
dec
popf
je
sbb
pop
int
jns
dec
fimuls
sbb
push
pop
mov
and
outsb
xchg
repz
dec
mulps
out
outsl
outsl
push
daa
jp
das
nop
dec
ss
test
loop
mov
int
out
cltd
int
aas
into
wbinvd
add
cmp
sbb
adc
out
sahf
add
jb
gs
jp
cs
into
dec
aaa
jns
sahf
push
pop
test
add
or
into
insl
and
scas
lret
into
loopne
pop
pop
rorb
jmp
test
iret
repz
adc
pop
push
sahf
xchg
fcmovne
and
je
out
dec
sbb
push
fucom
jns
fs
pop
outsl
mov
leave
repz
and
iret
cmp
cmpsb
push
es
idivl
add
sahf
out
sahf
shrb
fisubrl
add
aad
jns
out
daa
inc
add
jae
shlb
sub
in
xor
mov
xchg
scas
cmpsl
sub
pop
inc
add
add
bound
insl
rcr
enter
js
adc
aas
cmp
repz
or
add
lock
daa
pop
sbb
dec
call
jns
sti
push
rcll
push
add
jns
daa
pop
xor
cmp
or
pop
inc
mov
shll
outsb
in
cmp
lahf
jbe
iret
adc
cmp
shll
rcll
out
mov
prefetcht2
outsl
iret
repz
cs
add
daa
cmp
jg
cmovnp
out
dec
cmpsb
xchg
iret
or
or
dec
xchg
lret
insl
mov
cmpsl
mov
mov
into
in
addr16
psubsw
hlt
sarb
leave
leave
lret
sub
push
or
daa
daa
daa
iret
adc
sub
inc
daa
iret
repz
dec
pop
push
iret
in
in
push
sbb
aas
xchg
iret
repz
sbb
iret
repz
mov
shlb
sbb
repz
in
out
push
aaa
bnd
and
adc
ljmp
sub
sahf
sub
dec
aam
cs
int3
add
and
mov
mov
repz
push
int
fadd
jae
cmp
jecxz
or
mov
aam
aad
push
or
mov
pop
cmp
cmp
jae
adc
loope
iret
adc
aad
and
xchg
das
sahf
dec
aad
jns
sahf
ja
push
sbb
dec
sahf
out
and
mov
pop
iret
leave
loopne
and
not
cmp
in
enter
pop
pop
sub
fmulp
repz
sub
sub
xchg
out
dec
sub
dec
sahf
ja
outsl
test
xor
fisttpll
cmpsb
pop
jp
outsb
mov
rcl
out
cmp
jmp
inc
mov
add
hlt
inc
sbb
test
xchg
adc
sbb
pop
pop
hlt
insb
push
add
aas
inc
push
mov
xchg
adc
adc
cmpsl
mov
imul
aaa
dec
dec
sahf
ja
aaa
cmp
push
add
cmp
repz
add
add
iret
repz
or
or
sub
or
fucomi
imul
daa
adc
adc
leave
leave
in
movsb
and
outsb
mov
push
addr16
das
push
xorps
mov
push
and
cs
pop
andb
cmp
addl
sub
jbe
leave
cmpsl
mov
into
aas
xlat
rcrl
sbb
data16
cmp
add
iret
repz
push
push
inc
cmp
xor
cmp
repz
and
or
jns
cmpsl
stc
clc
call
out
sahf
out
fcom
ror
cmp
jnp
enter
mov
leave
repz
and
sahf
out
insb
pusha
push
push
out
sahf
dec
inc
sub
or
mov
adc
sub
pop
mov
add
adc
in
add
dec
add
and
sbb
sbb
int
jno
dec
movsl
test
sbb
pop
das
sub
sub
pop
lock
push
testb
add
repnz
mov
cmpsb
fisttps
mov
cld
inc
cmc
ja
inc
jle
test
shll
xor
cmp
enter
inc
mov
iret
mov
in
call
mov
push
add
mov
xor
fcomp
loopne
jb
jle
testb
push
and
inc
scas
cmp
jnp
or
add
sbb
or
dec
xor
fdivrp
js
cmp
daa
pop
jle
addps
mov
xlat
incl
xchg
mov
mov
mov
das
movb
pop
add
out
xchg
pop
out
lahf
push
or
out
sahf
cwtl
or
adc
out
adc
repz
adc
iret
repz
hlt
in
jns
out
push
sbb
out
cmp
in
out
push
mov
jmp
or
js
ljmp
in
decl
repz
pusha
ret
cmp
lcall
into
xor
add
pop
clc
call
aas
aam
inc
pop
js
outsb
add
rorl
or
add
and
out
push
sahf
call
xorb
addr16
push
push
adc
jg
rcl
dec
inc
push
xchg
aad
jo
aas
pop
pop
xlat
dec
lds
fisubrs
stos
insl
stos
jge
cmp
jg
out
sbb
and
sgdtl
outsb
stos
ljmp
mov
lret
mov
xchg
es
out
ds
inc
icebp
dec
push
sbb
sbb
js
add
aas
cmp
push
and
add
xor
push
sub
or
mov
mov
repz
out
add
in
push
push
push
jns
jnp
or
add
push
cld
adc
cmp
sbb
hlt
sbb
adc
sarb
out
sbb
push
rclb
jns
out
and
sahf
and
and
stc
xor
clc
ret
es
mov
adc
push
dec
lea
xor
inc
push
pop
cmpsb
cld
xorb
inc
cmp
xorl
pop
sahf
out
pop
cmp
pop
js
mov
ds
repz
adc
xor
add
cmp
movsb
imul
jns
dec
insb
addr16
push
loopne
add
mov
and
jb
add
or
and
repnz
ret
mov
adc
dec
pop
and
sbb
dec
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
call
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
js
fistpll
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
stc
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
jmp
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
cmc
decl
xchg
and
and
mov
aas
jno
or
mov
pop
fs
dec
lea
aas
inc
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
pushl
xchg
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
decl
mov
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
lcall
inc
loop,pn
mov
jp
popa
push
pop
sar
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
ljmp
aas
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
jmp
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
pushl
adc
mov
sub
dec
in
ss
push
scas
into
imul
fdivrp
inc
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
lods
and
mov
ror
add
cmpsb
fmuls
aas
cmp
roll
inc
inc
je
inc
inc
in
je
push
dec
jnp
mov
xor
popa
push
out
mov
lcall
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
sub
mov
sub
mov
sbb
dec
jno
repz
test
jge
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
gs
decl
add
insb
push
arpl
psubd
or
outsb
cmp
imul
addr16
call
in
cmp
aam
dec
std
test
movsl
cli
test
xor
leave
mov
jg
lods
jecxz
fdivs
jne
filds
or
shrl
push
ficoms
incl
popa
sarb
and
mov
cltd
xchg
mov
mov
or
pushl
jmp
outsl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
mov
adc
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
incl
gs
or
mov
cmp
ljmp
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
sar
push
or
fnstenv
adc
mov
mov
bound
ficoml
jl
mov
aam
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
ljmp
adc
ret
movsb
sti
hlt
shrl
imul
mov
sar
mov
add
in
add
pop
dec
or
cmp
add
daa
adc
or
jmp
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
ljmp
mov
orl
mov
in
mov
mov
add
shlb
ljmp
fildl
push
fdivl
or
test
fs
ds
or
lcall
jp
iret
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
rorl
int3
decl
outsl
fistpll
mov
mov
aad
mov
call
xchg
shll
push
ljmp
mov
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
push
dec
add
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
ljmp
mov
rclb
or
add
mov
das
es
clc
incl
mov
add
mov
cmpsl
call
ret
shlb
scas
fldcw
ret
es
pushf
mov
insl
add
lcall
addr16
jb
push
add
adc
mov
jnp
sbb
call
mov
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
sbbl
mov
ja
mov
out
cli
jo
ud0
cmp
pop
or
pop
std
incl
adc
sahf
gs
clc
sar
imul
push
js
or
push
xor
incl
add
popa
cmpsl
notl
pusha
rorb
imul
stos
dec
push
scas
fcompl
fldenv
filds
std
fists
aaa
pusha
mov
fidivrs
mov
jmp
sub
repnz
lret
mov
cmpsb
mov
sarb
dec
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
push
inc
sbb
add
sub
in
push
pop
push
xor
pop
inc
xchg
mov
push
cmp
or
and
aad
push
xlat
fdiv
cmp
repz
fcmovnu
fstpl
iret
fsubp
jecxz
in
cmp
repz
iret
repz
in
repz
cmc
div
cmp
repz
stc
cli
sti
cld
mov
adc
rorb
hlt
add
adc
mov
sbbb
push
pop
xchg
dec
in
sbb
inc
push
dec
fcomps
test
pop
jbe
inc
sarb
dec
mov
bound
dec
stos
dec
addb
arpl
lds
dec
mov
inc
in
cltd
out
cltd
sbb
aas
and
inc
dec
sub
fistpll
jns
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
pop
cmp
pop
xor
xor
or
xor
bound
pop
xor
popa
push
inc
inc
pop
fdivr
jbe
pop
insb
imul
push
insb
gs
push
dec
inc
mov
add
push
inc
mov
mov
lock
shll
or
mov
gs
je
scas
mov
push
jbe
mov
inc
aas
fisttpl
xor
gs
and
inc
inc
mov
js
addb
sub
mov
xor
insb
popa
jns
xchg
insb
add
pop
addr16
loope
addb
in
pusha
ljmp
mov
or
cltd
out
inc
mov
jae
daa
int
or
inc
aas
inc
push
mov
pop
inc
inc
es
mov
inc
pop
je,pn
jbe
jae
inc
inc
inc
add
ds
cmpsb
in
adc
scas
add
shrl
pop
mov
cmp
dec
push
dec
cmp
inc
mov
pusha
stos
or
jb
mov
movsb
xchg
inc
outsb
jne
push
popa
push
mov
pop
fnstenv
add
add
or
adc
xor
addr16
clc
rcr
mov
jo
sahf
inc
cmp
inc
cmp
aas
aaa
leave
cli
adc
push
mov
gs
mov
or
pop
sbb
adc
mov
xor
cmp
mov
mov
inc
mov
scas
or
ss
out
jb
mov
add
addr16
and
xor
jo
andl
outsl
outsl
test
mov
push
sti
ss
jno
push
inc
adc
dec
mov
es
or
nop
test
pop
cmp
push
dec
xor
arpl
cmp
mov
jo
push
push
add
jns
inc
mov
jb
pop
push
add
gs
notl
outsl
arpl
insb
daa
sub
mov
xchg
mov
in
bound
ja
inc
jbe
shrb
xor
cmp
leave
imul
xor
shll
and
daa
das
xor
sahf
pop
ljmp
ret
inc
add
inc
add
push
xchg
jg
rolb
and
or
inc
outsl
lret
xor
xor
inc
dec
and
sub
push
pop
pop
adc
loope
mov
sbb
pop
mov
rclb
inc
push
inc
dec
mov
pop
bound
outsb
arpl
inc
inc
inc
or
pop
pusha
shrb
in
insl
add
jne
push
pop
fisubrl
inc
xchg
fildl
flds
pop
adc
negl
push
pushf
push
daa
sub
fs
mov
add
xchg
push
iret
mov
adc
dec
add
cmpsb
add
hlt
fdivr
loopne
mov
sbb
xchg
ficompl
pusha
add
out
adc
fistl
fstpt
add
pop
pop
push
or
or
or
or
or
or
push
adc
adc
push
adc
push
add
pop
sbb
adc
adc
adc
add
data16
clc
push
lods
fisttpll
adc
pop
adc
inc
add
fldcw
or
add
and
add
sahf
lock
add
ljmp
rcrl
jb
imul
add
call
xor
adc
pop
and
xor
jmp
rcll
bound
js
filds
lods
out
mov
inc
add
push
mov
mov
shrb
cmpsl
test
push
jno
or
addl
and
sub
or
and
scas
pushf
into
cmp
add
add
sub
cmp
adc
aaa
incl
push
pop
popa
jno
and
adc
xchg
mov
stc
and
push
lock
loope
icebp
mov
or
push
mov
xorb
scas
adc
or
js
ljmp
sar
sub
rcr
push
ret
xchg
and
sub
hlt
std
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
loopne
mov
adc
fsts
dec
mov
loope
mov
cmp
outsl
inc
out
cmp
xor
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
add
or
adc
pop
inc
inc
xchg
pop
inc
leave
push
pusha
add
sti
or
add
lds
cld
cli
and
mov
incl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
lcall
jmp
decl
mov
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
add
mov
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
incl
xor
lcall
fs
scas
mov
pop
pop
mov
incl
in
rorb
sti
ret
scas
adc
mov
xor
lods
scas
xchg
jg
movsb
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
jl
lret
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
call
das
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
idiv
jmp
mov
int
arpl
push
out
or
push
fists
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
test
sti
push
and
xchg
jmp
sbb
scas
xor
mov
jb
mov
mov
loope
call
mov
int
inc
fwait
sbbb
mov
dec
jp
push
outsl
jmp
hlt
push
add
stc
loope
mov
shrl
andl
aas
icebp
testb
mov
decl
inc
gs
sub
jno
pop
sub
jg
scas
cld
or
incl
call
sbb
paddb
inc
mov
dec
adc
call
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
in
cmp
test
loopne
cli
adc
aaa
xchg
in
add
dec
outsl
mov
inc
adc
loope
fisttpll
out
aas
std
cli
push
push
pushl
jg
cmp
sub
inc
scas
inc
mov
inc
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
jmp
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
add
js,pn
stos
imul
sub
xchg
pop
clc
pop
hlt
sub
movsb
add
add
lea
jg
gs
std
xorb
jg
add
lcall
xor
das
pop
pop
pop
shlb
out
call
call
cmp
lock
or
sarb
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
ljmp
mov
push
mov
adc
and
sbb
xchg
jo
and
out
incl
icebp
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
decl
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
ljmp
push
mov
push
movsb
xchg
or
mov
stos
dec
lods
xor
mov
jle
jg,pn
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
call
jo
pusha
imul
add
mov
cmp
xchg
mov
insl
push
ljmp
pop
xchg
ftst
jbe
xchg
and
lcall
out
jae
shrb
shlb
out
aas
stc
add
out
gs
mov
pushl
fidivrl
lock
adc
pop
cld
addl
adc
and
pop
repnz
cmp
fmull
enter
jecxz
aas
clc
aas
lahf
scas
sub
in
pop
mov
sub
mov
dec
outsb
mov
cld
inc
mov
push
sbb
push
inc
or
testb
push
pop
jg
add
jg
mov
mov
aad
test
mov
mov
iret
push
std
mov
out
jbe
push
sbb
stos
icebp
pop
incb
jno
mov
cvtpi2ps
push
inc
jecxz
sbb
sarl
adc
mov
loopne
sar
adc
lahf
xor
and
cmp
dec
push
cmp
jg
in
aas
mov
fsubrl
lock
sbb
push
and
clc
xchg
call
mov
repnz
and
mov
adc
lahf
or
push
rcrl
rolb
pop
inc
lds
ret
pushl
fistpl
adc
call
jno
pop
jmp
mov
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
jmp
jmp
adc
or
imul
xor
dec
xor
fsubr
fistps
lds
pop
insb
insb
icebp
fidivrl
jg
stos
pop
add
idivb
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
icebp
decl
in
cld
addl
sbb
mov
lahf
outsl
int3
push
sbb
push
jo
test
paddsw
mov
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
incl
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
in
loop
lahf
mov
or
out
lcall
std
mov
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
push
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
lcall
cmp
cld
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
pop
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
push
jnp
jmp
insb
sbb
cwtl
inc
mov
insb
cld
jg
inc
test
aas
repz
outsl
lock
in
jmp
stc
out
jmp
aaa
clc
push
std
mov
or
lods
out
jne
or
cld
push
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
shrb
fisttpl
out
pop
or
or
dec
ss
les
or
repnz
clc
dec
cmc
mov
jl
call
jle
inc
jno
lret
pop
in
cmp
stc
fwait
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
mov
aas
mov
jg
incl
fdiv
mov
sub
addr16
sbb
cld
daa
jp
std
mov
fucomi
adc
cltd
or
mov
ret
nop
cmp
push
loop
cmc
das
incb
lock
pop
pop
div
cld
idivl
xlat
add
scas
stc
lahf
loope
js
or
jae
jmp
idivb
fbstp
out
xchg
add
out
sbb
xchg
mov
loope
mov
cmpsl
popf
sbb
xchg
mov
fbstp
push
daa
outsl
das
outsl
ss
cmpsb
cmp
call
pop
mov
decb
adc
mov
or
adc
call
fisubrl
add
bswap
and
inc
add
xor
aaa
std
fisttps
sbb
and
sbb
xchg
cmpl
jle
icebp
ret
ror
sbb
mov
or
inc
adc
icebp
push
jno
shrb
mov
pop
clc
loope
loope
mov
jmp
jp
dec
jb
mov
fbstp
xchg
fldenv
iret
fdivrl
xchg
lcall
push
cmp
repz
adc
cmp
into
nop
mov
sarl
pop
out
jg
jno
ret
add
cmp
incl
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
adc
mov
jne
in
sbb
xchg
imul
jmp
outsl
jmp
adc
mov
daa
jmp
faddl
mov
mov
outsl
xchg
pop
add
pop
stc
push
dec
out
fistl
movsb
mov
mov
enter
add
aas
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
test
incl
mov
fsubrl
dec
add
and
pop
adc
sti
pop
inc
dec
push
shrl
push
cmp
incl
int3
pop
iret
and
add
jle
lcall
push
jl
adc
add
ljmp
out
ret
or
xabort
jmp
xor
adc
jns
mov
cmpl
xor
ljmp
cli
hlt
xchg
bound
inc
gs
fcomps
xchg
mov
lahf
movsl
push
inc
sar
jmp
push
sub
sub
cld
or
add
fmul
jmp
add
and
int
scas
outsb
push
mov
dec
psrld
in
jns
mov
fistpl
adc
mov
xor
pop
or
sub
jg
push
sbb
pop
push
imul
ret
jne
loopne
mov
mov
and
cltd
lods
mov
sahf
rcl
inc
fcmovu
mov
push
jg
andb
dec
clc
jne
leave
jae
mov
aaa
aad
call
cmp
xchg
call
jno
int
pusha
hlt
fcmove
fdivp
mov
arpl
int
add
fisubrs
sbb
sub
adc
sbb
icebp
cmp
push
pop
push
into
mov
mov
stos
push
rcll
mov
decl
ret
sbb
push
adc
inc
jnp
loope
aam
fidivrs
jne
sbbb
decl
mov
cmp
in
lods
ffree
insb
inc
pop
inc
sbbb
arpl
lcall
pop
cld
cmpsb
adc
cwtl
or
adc
dec
mov
push
jge
lock
sub
mov
mov
test
dec
cltd
adc
test
push
cld
or
dec
jmp
loope
and
jg
dec
imul
test
pushf
in
dec
lret
rcrl
lcall
sahf
mov
mov
cmp
lods
call
or
outsl
pop
int3
jle
cmp
test
inc
push
in
dec
ret
pop
cmpsl
cs
ds
pop
push
je
cmpsb
jmp
jmp
je
mov
pushf
xchg
push
adc
imul
ljmp
pop
mov
fdivrl
xchg
sbb
cmp
mov
xor
idiv
pushl
jne
lret
mov
jne
pop
jno
fidivl
int3
daa
adc
sbb
sub
jle
das
sbb
cmp
incl
and
leave
sarl
mov
sub
test
cmp
xor
popaw
pop
push
inc
fsub
std
decl
loopne
fucom
sbb
sub
outsl
cld
adc
jmp
mov
cld
scas
imul
cld
cmpl
pop
lock
push
imul
jp
mov
movsl
sub
test
cmp
sbb
iret
test
xchg
out
mov
dec
js
jns
dec
mov
icebp
jns
sbb
push
jg
out
mov
jmp
or
lds
mov
mov
fcom
lods
pop
add
int3
or
sbb
lds
jb
adc
pop
sbb
loope
dec
mov
push
pop
out
sbb
and
or
cwtl
lcall
or
jbe
dec
into
mov
fists
movsb
insl
decl
rolb
xchg
adc
add
nop
mov
or
jae
imul
out
stos
sahf
inc
inc
stos
fstps
in
inc
sahf
popa
push
pop
je
xchg
bound
pushl
out
stc
mov
mov
jecxz
xchg
enter
iret
test
call
test
arpl
and
xor
ds
mov
bound
inc
pushf
adc
lcall
xor
outsb
andl
push
ljmp
push
dec
jnp
inc
push
fcomip
int
add
outsb
push
mov
rcll
lock
cld
pop
cltd
jmp
ja
inc
sub
popa
loopne
xchg
loopne
cs
dec
cmp
pop
pop
in
dec
xor
icebp
outsl
stc
adc
incl
mov
jl
sbb
jnp
sub
sbb
xchg
notb
cmp
incl
stc
add
movsb
sub
adcb
xor
push
fwait
xchg
xchg
movzwl
pusha
pop
and
jmp
lock
dec
xchg
lock
js
mov
dec
push
cmc
loopne
lock
ljmp
xor
lock
ror
inc
mov
xchg
out
mov
and
inc
mov
dec
xor
inc
pop
push
daa
out
add
cmp
mov
fwait
add
lret
sahf
bnd
test
mov
or
jle
cwtl
mov
repz
call
cmp
jo
repnz
inc
mov
jl
aaa
jno
loope
and
fs
mov
outsb
push
ljmp
ljmp
mov
sbb
mov
sti
scas
ret
lahf
pop
in
dec
cs
xor
push
scas
je
jb
adc
mov
xor
clc
incl
daa
in
add
xchg
addr16
incb
lahf
out
scas
imul
push
cmp
or
xchg
in
fdivs
ljmp
and
push
mov
mov
cwtl
jge
aaa
push
cmp
jns
scas
add
sub
ljmp
and
mov
pusha
ficoml
add
sbb
in
jle
repz
ljmp
cli
adc
into
push
sub
cmp
int
daa
fsubl
enter
push
xchg
es
push
lcall
sbb
scas
or
out
sbb
ret
push
in
jb
xchg
xchg
sti
stos
dec
xlat
enter
jmp
sbb
xlat
jns
xor
cmp
xor
fnstenv
in
pop
lret
jbe
addr16
jmp
xchg
das
int
or
and
mov
xlat
sahf
jmp
xchg
incl
inc
jns
in
mov
imul
xchg
jb
in
fbstp
test
call
mov
xor
xchg
sti
int
decl
loop
cwtl
lretw
sub
sbb
mov
arpl
jg
cmpsb
mov
daa
jb
aaa
insl
cmc
lahf
leave
inc
ss
pop
xlat
jge
add
lods
dec
sar
lcall
cmpsb
and
mov
into
sbb
repz
bound
jl
mov
sar
call
shll
ds
push
sbb
shll
mov
data16
jmp
xchg
mov
call
loopne
ret
aam
in
call
mov
sbbl
incl
or
out
fistpl
arpl
addr16
sbb
decl
jo
insb
out
out
cltd
outsb
inc
pop
mov
jmp
jmp
out
fsubrl
xor
mov
fisttpl
out
test
hlt
push
scas
cmp
jne
sub
mov
call
xor
sub
in
jge
fidivl
jmp
clc
cmp
lcall
jbe
fidivrs
push
pop
mov
icebp
in
bound
out
aad
mov
fsubp
leave
push
jg
ret
loop
data16
ret
leave
out
dec
rorl
sbb
xchg
repz
xchg
in
nop
adc
pop
adc
nop
ss
sub
inc
jl
mov
xor
ljmp
pop
lods
sub
sbb
and
adc
loopne
pop
adc
cli
stos
repnz
mov
pushl
mov
xor
mov
cmp
jns
adc
in
aam
mov
ss
shr
out
dec
cmc
stc
mov
xor
ror
rol
outsl
out
mov
mov
inc
adc
aas
adc
jp
push
in
xchg
cli
pop
jne
es
inc
pop
iret
and
out
mov
sbb
dec
or
decl
es
iret
sbb
mov
dec
push
sbb
push
xchg
arpl
pop
data16
jb
bound
mov
dec
inc
pushl
add
test
ja
fs
cmp
ljmp
lahf
outsl
jle
js
lods
xchg
test
pop
popa
mov
hlt
insl
adc
rclb
ljmp
xor
pop
ja
das
sbb
sbb
std
pop
xchg
lods
dec
push
mov
mov
mov
idivb
dec
mov
lods
sti
mov
pop
ljmp
push
xor
cwtl
push
decb
or
pcmpeqd
ljmp
mov
jmp
pshufw
mov
fistpll
out
loope
fidivrs
es
and
push
and
repnz
insl
loop
mov
or
insb
int3
xor
add
dec
pop
mov
push
into
inc
imul
pop
xor
dec
pop
cmpsl
cld
cmp
adc
mov
repz
mov
add
dec
enter
lock
xchg
jle
mov
imul
insb
mov
into
and
and
adc
jge
mov
inc
sbb
xlat
xchg
cmp
decl
dec
iret
mulb
inc
lcall
dec
xor
jne
jmp
fcompl
push
roll
inc
mov
push
aad
sub
fwait
scas
test
push
fwait
cmp
sbbl
sub
insl
xchg
shl
outsl
dec
and
sub
mov
pop
aaa
mov
xlat
jmp
mov
push
xlat
or
outsl
inc
addr16
lods
pop
lea
in
loopne
jg
aas
mov
jne
xor
xor
loopne
mov
push
pop
sbb
fwait
and
mov
pop
hlt
ljmp
pop
add
or
xchg
shrb
loop
lcall
test
jg
cmp
sbb
shlb
sub
jg
mov
and
inc
mov
mov
out
mov
pop
pop
adc
pop
hlt
sarl
adc
sub
adc
pushl
push
xor
in
inc
dec
sub
mov
in
fistpl
and
fistpll
jp
inc
dec
add
mov
sbb
sbb
mov
lcall
mov
dec
divl
sahf
dec
mov
dec
mov
clc
ljmp
mov
pusha
push
or
adc
out
imul
lds
xchg
outsb
pushl
adc
mov
xor
cmp
mov
cmc
fidivl
testb
add
es
ret
cs
shrl
xor
mov
xchg
cmpsl
clc
incl
das
inc
dec
mov
loope
in
dec
fldl
in
fwait
rolb
ljmp
icebp
xchg
inc
fists
inc
xchg
push
adc
mov
mov
or
ljmp
rcll
aaa
xor
aaa
mov
sbb
adc
fldl
or
xchg
lcall
daa
sub
jbe
repz
and
push
test
fcmovb
sub
mov
inc
push
jmp
jge
arpl
jle
cmp
nop
and
fst
sarb
sar
decl
ret
repnz
xchg
out
cmp
push
in
inc
mov
shll
subl
inc
jg
and
data16
into
cs
out
popf
mov
mov
jns
push
ret
das
mov
fldl
mov
fisubrs
sbb
cli
pop
shll
pusha
lods
insl
into
mov
loopne
lods
out
and
scas
xchg
push
sarb
aam
xlat
add
xchg
mov
sub
ljmp
push
dec
ret
fnsave
pop
bound
inc
fcoms
mov
fnstsw
mov
lock
or
fmul
mov
fwait
cmp
push
mov
sbb
or
add
or
mov
lcall
pop
pop
sbb
test
add
test
jnp
stos
push
sub
stos
jmp
or
push
imul
mov
clc
aam
idiv
jg
cld
aaa
and
jge
push
push
insb
js
xor
loop
sbbl
pop
std
ds
test
dec
add
pop
stos
fcoml
add
xor
hlt
idivb
pushf
xor
jg
aam
pop
pop
jmp
daa
mov
add
lret
data16
push
add
cmp
sti
test
shll
mov
mov
lods
adc
scas
pop
push
ret
addb
jmp
mov
cs
aas
sbb
xchg
jmp
add
ret
into
mov
mov
in
cmp
jno
jns
arpl
pop
fcoml
lret
rcrl
or
jle
ljmp
push
and
fisttpl
jl
pop
mov
ret
insb
jl
adc
pushf
mov
ljmp
jbe
sbb
cmp
mov
cmp
flds
inc
iret
popf
test
pop
and
push
cmp
ljmp
test
loop
jge
into
out
push
jg
add
scas
sbb
bound
loop
push
loopne
in
pop
cmpb
adc
and
or
cmc
shrb
adc
scas
xchg
loop
ss
cmpsb
pushl
fistpl
sti
xchg
add
dec
daa
insb
mov
mov
add
mov
sbb
pop
vcvttpd2dqx
mov
enter
mov
jg
inc
cld
test
cmc
mov
jg
or
lret
mov
mov
pop
jg
jo
cmc
pop
push
lret
cmpb
pop
test
mov
sbb
mov
inc
in
push
and
or
xchg
popf
dec
in
mov
adc
mov
jl
push
out
and
jmp
loop
mov
xor
leave
insl
mov
xor
ss
pusha
pusha
lods
lret
int3
rorb
incl
pusha
jo
test
jno
loop
lea
and
inc
jno
mov
jns
mov
push
jmp
das
inc
enter
push
jo
ss
inc
add
or
push
xor
ret
or
cmc
in
fcmovbe
push
clc
pop
push
jg
incl
or
mov
bound
shl
inc
testb
outsb
aam
xor
xor
iret
dec
gs
ljmp
popf
sti
jle
jge
cs
xchg
fldt
ret
inc
test
dec
out
in
andb
jg
mov
inc
fsubs
aaa
mov
jl
int
cmc
cmp
push
lock
push
test
cs
popa
ret
out
pushf
adc
adc
lret
data16
loopne
outsl
outsl
loop
push
pop
jecxz
push
daa
iret
jbe
mov
inc
nop
xchg
sub
sti
inc
pop
je
es
divb
adc
xchg
ja
add
or
add
push
mov
mov
jmp
dec
mov
inc
ss
loopne
ret
mov
push
pop
jne
pop
and
mov
sbb
popa
inc
cwtl
aam
jo
repnz
xchg
mov
fcoms
pusha
add
xchg
clc
sbb
imul
int
sarl
xor
cli
sahf
icebp
fdecstp
xchg
and
cmp
pusha
mov
adc
fsubl
in
mov
push
jl
or
inc
dec
test
scas
into
fcomip
insl
or
cwtl
loop
lods
xchg
sub
ljmp
sub
lcall
jmp
mov
lods
int3
cwtl
imul
or
cmpsb
cmp
xor
cmp
in
xchg
xchg
jl
add
pusha
sbb
or
inc
and
cmp
mov
ljmp
add
cmp
sbb
mov
ljmp
inc
jnp
cmp
pop
mov
out
fidivrs
pop
xor
fwait
dec
fldt
stos
xor
decl
ljmp
pop
por
jecxz
dec
dec
mov
outsb
add
or
call
jo
and
rcrl
cmp
cmp
mov
ret
call
cmp
mov
xchg
daa
pop
mov
decl
lcall
or
clc
pop
test
pop
add
or
jmp
loope
fmulp
or
xchg
fwait
and
jge
pop
adc
incl
adc
mov
inc
es
jge
imul
xchg
cmpsb
pop
ret
cltd
xchg
popf
rorl
ljmp
into
xor
std
push
repz
xchg
ds
adc
lret
int
cmpsb
pushl
imul
aam
or
adc
popa
push
hlt
fiaddl
push
incl
repnz
mov
hlt
mov
push
pop
push
icebp
enter
cltd
mulb
add
add
mov
jmp
jne
push
loopne
jecxz
pusha
fdivr
fsqrt
imul
jmp
mov
call
cld
decl
xor
and
and
pop
mov
ljmp
inc
xchg
cwtl
movsl
xchg
cmp
pop
push
sbb
cmpsl
xchg
cmp
dec
mov
icebp
xor
mov
pusha
dec
jno
test
arpl
sub
addb
cmp
pop
ljmp
jecxz
xorl
fcomps
push
data16
aad
ljmp
bndstx
jecxz
adc
test
cwtl
stos
dec
repnz
push
jmp
ljmp
pop
fcompl
mov
mov
jo
inc
xchg
loope
lds
sub
repnz
add
pushl
ret
jo
inc
cmp
mov
fdivl
mov
mov
dec
lahf
out
test
push
rcrl
add
in
push
pop
fdivp
pop
lea
sbb
ljmp
and
add
cmpsb
xlat
popf
pop
fwait
xlat
push
pop
shr
and
mov
fmull
jg
leave
call
push
aad
and
stc
inc
pop
mov
xchg
insb
ljmp
mov
xor
add
out
pop
in
and
ljmp
cmp
mov
aas
and
sub
adc
es
je
mov
or
in
push
iret
lcall
cli
test
movsb
mov
cmp
lcall
mull
lea
out
ljmp
inc
dec
shrb
adc
aaa
je
dec
xchg
mov
adc
arpl
hlt
xchg
jns
or
movsl
dec
incl
or
adc
push
lret
pop
xor
mov
push
in
sub
jne
sti
out
pop
adcl
fs
mov
jge
call
add
and
fwait
cmp
pop
ss
pop
cmovb
movsb
pop
mov
jl
notb
xchg
push
insl
addl
in
in
ficoml
lods
inc
out
aaa
xchg
test
std
inc
push
inc
mov
shrb
jns
cli
sbb
push
clc
leave
pop
std
push
adc
gs
gs
mov
pop
fdivrp
sahf
mov
or
xchg
in
jg
cltd
push
pushl
lds
dec
pop
adc
sbb
jne
mov
push
push
lcall
push
ljmp
push
xchg
xlat
mov
mov
mov
incl
and
cmpsb
adc
xchg
enter
pop
push
push
mov
adc
inc
jbe
pop
cmc
jmp
cmp
fwait
dec
xchg
loop
sub
lcall
ficoms
xor
pop
and
fdivl
call
jg
mov
pop
mov
aam
and
adc
sub
stos
lret
mov
fucomp
jmp
ret
dec
pop
cld
fimuls
xchg
fildl
add
shr
pushl
cmp
cmp
insb
inc
scas
cmp
ja
cmc
out
bound
ljmp
cld
pushl
jb
aaa
call
jmp
mov
cmp
jg
push
xchg
lea
js
xchg
lds
enter
stc
addl
daa
decl
call
das
ret
rcrl
mov
pop
pop
sbb
lcall
mov
call
jg
cmp
ja
out
mov
clc
flds
dec
cwtl
icebp
jb
lcall
jb,pn
out
xchg
inc
dec
dec
mov
mov
in
inc
sar
jmp
cmpsb
data16
add
push
and
shr
addr16
js
or
cmp
rcrb
arpl
fwait
fiadds
int3
mov
in
and
cmc
shlb
jae
push
xchg
pushf
jb
dec
mov
dec
ljmp
xor
push
xorb
or
es
push
in
pop
aad
sahf
clc
cld
cs
idivl
sbb
aas
int3
data16
les
add
or
aas
test
xchg
cwtl
mov
shll
out
sbb
mov
sub
xchg
sbb
fdivl
mov
les
pop
inc
fstpl
movsl
popa
rclb
outsb
xchg
inc
imul
cwtl
rcl
pop
add
sbb
mov
mov
movsl
aam
mov
clc
cli
decl
sar
shrb
mov
nop
dec
mov
and
fs
inc
call
cmpsb
daa
movsl
imul
test
pop
inc
cli
add
push
add
rcl
mov
xor
xchg
imul
movsl
xor
lcall
ret
adc
fwait
roll
test
and
jmp
test
idivl
mov
clc
mov
xchg
mov
negl
dec
pop
add
adc
popf
xchg
mov
mov
subb
fdivrl
pop
in
repz
xor
lds
scas
mov
cmp
pop
jo
jl
loopne
in
int3
or
mov
out
mov
roll
or
mov
inc
inc
stos
ljmp
out
add
loope
xchg
mov
mov
test
push
insl
sahf
ja
add
rolb
outsl
jmp
sbbb
cli
les
lret
sbb
cmpsb
lods
mov
mov
daa
fdivl
rcrl
decl
or
ljmp
daa
aad
adc
add
xor
mov
jbe
add
incl
out
xchg
daa
mov
add
test
pop
jmp
jle
xchg
lret
xor
cmc
jmp
les
push
add
rorl
cmp
fs
push
adc
jne
cmpb
jae
movsb
andl
cmp
xor
decl
mov
dec
stos
pop
in
iret
mov
sbb
xchg
stos
and
mov
iret
dec
jmp
push
or
lock
push
pop
popa
cmp
lcall
pop
dec
cld
jne
fnstcw
sbb
push
mov
jmp
pop
cwtl
sbb
mov
nop
xchg
jge
jmp
mov
push
stos
mov
mov
jo
sub
and
mov
loopne
add
mov
lcall
mov
stc
inc
mov
push
sbb
shlb
lret
or
incl
rcll
into
cmp
mov
sub
ficomps
push
jno
sub
and
ljmp
aas
push
fidivrl
jae
nop
jg
push
clc
fcoms
lods
cmp
ljmp
xchg
lods
dec
mov
ret
add
js
dec
dec
test
cmp
repz
lods
fwait
inc
cmc
mov
sub
incl
scas
inc
ret
ret
pop
push
enter
insl
or
rolb
inc
nop
sarl
out
jmp
mov
xchg
mov
fcoms
xor
push
jle
mov
stos
in
cli
loop
xor
xchg
dec
add
push
mov
nop
jge
testl
adc
lret
jns
jp
mov
popf
dec
sbb
es
lcall
testl
mov
mov
movsl
or
fisubl
mov
in
int
icebp
fsubr
mov
cmc
fcmovu
fistpl
xchg
jne
bound
mov
lcall
mov
cltd
or
icebp
xchg
es
aas
out
xor
test
jmp
add
clc
sarb
stos
cmpsb
incl
shlb
arpl
jle
and
jmp
mov
xchg
lock
gs
mov
mov
add
pop
das
clc
decl
adc
clc
stc
xchg
pop
bound
loope
xchg
sub
out
sar
ljmp
mov
or
push
xor
jno
mov
lock
sub
push
in
jecxz
dec
jg
outsb
aam
cwtl
outsl
je
jle
push
xorb
pushf
inc
enter
jmp
push
sbb
pop
mov
in
icebp
outsb
in
fidivs
mov
andl
aas
pop
cmc
pushl
inc
xchg
inc
cwtl
push
lds
ss
in
aam
cmp
push
and
adc
jmp
mov
jbe
pop
cmp
lret
jp
lcall
xor
loopne
xchg
es
loope
loopne
pop
push
sub
enter
jo
mov
jmp
xchg
test
jmp
xchg
mov
cmc
jno
jbe
insl
lahf
jmp
gs
clc
decl
push
in
sub
xchg
fs
pop
cmp
fs
mov
ljmp
imul
push
fstl
rol
mov
shlb
fstl
mov
int3
add
test
lret
and
lahf
sbb
out
sub
mov
lcall
cli
add
sub
rcrl
inc
inc
out
push
mov
fiadds
xor
lods
xchg
add
pop
xchg
push
xchg
cmp
jmp
mov
push
movsb
fcoml
ljmp
in
adc
push
jne
cli
aad
cmp
incl
push
fcmovb
rcll
inc
xchg
adc
mov
decl
inc
enter
push
insb
iret
jnp
test
aam
daa
push
cltd
mov
dec
outsl
pop
xchg
mov
inc
mov
ljmp
rcll
inc
push
xchg
add
fsubs
cmp
fimull
subl
jns
jmp
mov
mov
data16
mov
sti
imul
or
mov
nop
push
mov
pusha
add
inc
mov
std
decl
add
cli
and
sbb
dec
mov
pop
inc
add
movsb
dec
inc
incl
sbb
jnp
or
xor
lea
adc
inc
sbb
in
into
mov
lods
xor
and
add
leave
pop
xlat
pop
daa
push
incl
xchg
add
aas
push
out
mov
pop
iret
out
pop
xor
push
sahf
test
ljmp
cs
and
xor
lret
sub
lret
xchg
or
pushl
cmp
inc
mov
adc
mov
lahf
or
add
mov
sub
pop
pop
movsl
xor
cld
add
mov
sbb
js
and
pop
sbb
in
imul
jo
mov
cs
dec
cli
xchg
ja
jmp
jl
idivb
xchg
aaa
andb
sbbl
xor
and
adc
in
into
ja
int
pop
and
adc
pop
mov
shrb
xchg
aas
shrb
sahf
xor
sub
stos
shlb
jnp
adc
mov
push
jle
imul
inc
inc
pop
sbb
lods
cmp
xor
outsb
test
xchg
ljmp
addr16
jl
adc
sub
jne
sub
inc
jbe
rorb
rcrl
jg
inc
imul
ljmp
push
xchg
dec
out
cmp
cmp
sahf
sbb
stos
repz
cmp
incl
add
or
xor
out
out
imull
cmp
leave
not
jecxz
subl
lcall
add
xchg
dec
movaps
and
orl
imul
jmp
push
sub
jb
or
inc
jle
scas
push
jno
shrl
fdivrs
call
out
inc
dec
fbstp
mov
cmpsb
in
test
sar
inc
jge
fldcw
and
cmp
sub
in
pop
xor
dec
pusha
sub
sbb
call
sbb
hlt
push
pushl
pmulhw
mov
aaa
call
pop
icebp
push
cmp
push
dec
decl
adc
sti
out
xchg
test
scas
imulb
dec
and
mov
call
fwait
push
fldl
lret
mov
cltd
mov
cmp
out
adc
rcll
in
xor
decl
cmc
add
das
bound
lcall
xor
inc
pop
repz
jg
lcall
ss
lahf
rclb
test
out
ret
std
mov
sub
lcall
sahf
and
mov
rcrl
pop
sbb
cmp
ss
rol
cli
xchg
filds
call
sti
cwtl
push
popa
push
shrb
xchg
out
aaa
add
lcall
dec
and
test
mov
mov
push
jecxz
cmp
sub
mov
mov
adc
decl
mov
jnp
test
ficompl
dec
push
cmp
add
aad
fucomp
add
ljmp
aam
dec
xlat
mov
mov
jp
dec
orb
out
loop
adc
or
call
inc
out
aas
addr16
subl
aaa
sub
xlat
xchg
pop
daa
mov
loop
xor
fdivrl
pop
out
leave
fdivrl
cmp
inc
lret
pushl
rclb
push
movsb
inc
lret
inc
movsb
sahf
out
popa
scas
pop
arpl
push
jb
inc
stos
sbb
loopne
dec
or
sbb
dec
add
adc
fwait
rorb
clc
hlt
or
jno
xchg
outsl
call
movsb
jo
pop
jno
adc
out
sbb
jb
aad
mov
push
es
push
mov
jl
inc
pop
sub
mov
mov
ret
jb
enter
dec
pushf
mov
js
mov
jmp
inc
outsb
out
popf
sub
ja
xor
ret
aad
mov
mov
and
or
ljmp
pop
je
shl
shll
dec
push
call
sbb
or
push
add
lods
out
sti
rcl
mov
out
dec
push
decl
lock
jle
ret
iret
cmpsb
rclb
xor
stos
inc
dec
pop
or
dec
mov
fdivr
loope
aaa
ret
lcall
ljmp
adc
xchg
xchg
loopne
jo
ficomps
shrb
add
outsb
out
cld
in
decl
push
in
rcrl
outsb
pop
cmpsb
shl
cmp
mov
pop
jg
add
jb
mov
aaa
fs
popf
xchg
ljmp
jg
xchg
loopne
jbe
xchg
mov
cld
icebp
mov
cmpsl
jne
sti
xchg
push
movsb
adc
outsb
pop
loopne
ljmp
andl
xchg
or
out
adc
pop
aas
jnp
loop
mov
scas
mov
mov
and
pop
in
pop
xor
push
push
repz
in
jmp
jns
mov
mov
leave
jmp
scas
test
cld
aas
sub
push
pop
xchg
or
jmp
scas
lcall
call
hlt
pop
es
mov
pop
std
add
out
push
decl
pop
pop
xlat
cs
cli
js
mov
cmp
movsb
scas
jae
js
sbb
cs
jg
lcall
dec
ljmp
mov
cmc
lret
sub
je
nop
sbb
jo
push
lods
cmp
std
rdpmc
leave
icebp
repnz
stos
fmull
in
xchg
mov
rcr
pop
mov
jmp
mov
call
inc
mov
sbbl
mov
ds
jns
cmc
and
call
inc
push
stos
cmp
sub
jne
clc
or
or
add
mov
or
cltd
push
fcoml
imul
mov
xchg
mov
jg
inc
pop
inc
sbb
lcall
hlt
sub
mov
roll
daa
cs
incl
cmp
testb
sahf
pop
stos
cmp
inc
ss
or
dec
adc
and
pop
decl
adc
mov
pop
fmull
mov
icebp
subl
inc
mov
jge
fimuls
xchg
adc
add
testb
push
pop
and
std
jbe
add
jmp
call
sbb
adc
fbstp
bound
pop
pop
jge
cltd
jecxz
stos
jg
sub
ret
ss
orb
inc
in
push
xchg
je
outsl
testl
outsl
cli
mov
jno
adc
das
das
sbb
loopne
out
bound
jp
xlat
icebp
insb
xor
popf
or
in
outsl
mov
xchg
jl
push
jbe
fildll
clc
or
push
xchg
jle
dec
cld
call
add
je
stos
test
es
iret
test
shlb
jg
pushf
or
daa
les
and
rcrl
jns
dec
add
push
jl
fs
outsl
scas
movsb
or
adc
gs
jo
mov
pushf
dec
sarb
decl
cmc
lret
out
in
mov
test
addb
add
pop
inc
subb
lods
in
jno
push
mov
js
mov
pop
mov
lret
test
jg
jmp
xor
xor
adc
xor
stc
pop
pushf
ret
aad
aaa
jecxz
push
aaa
jge
out
sub
pop
sbb
push
push
add
roll
xchg
or
cmp
xchg
ljmp
add
movsb
jecxz
aas
jl
push
out
shl
hlt
js
cmp
inc
adc
fldcw
into
in
sti
mov
sbb
scas
cs
adc
jno
inc
fisubrs
sub
add
jb
call
mov
hlt
and
and
xor
stos
lods
inc
mov
push
stos
into
mov
fdiv
sub
loopne
adc
dec
mov
sub
jge
sahf
mov
ss
loopne
inc
adc
ds
mov
jg
cmp
loopne
ljmp
xchg
and
mov
or
fdivrs
scas
push
divb
icebp
inc
stos
repnz
lahf
xchg
sbb
out
sbb
daa
sub
cmc
push
jg
popa
add
xchg
dec
test
lcall
push
add
push
sub
cmp
insl
inc
int
loop
shrl
dec
sbb
not
or
jmp
ljmp
inc
in
lods
push
xchg
mov
pusha
pop
iret
pop
add
mov
arpl
lcall
jmp
jne
cmp
pop
cli
inc
mov
sub
fadd
not
mov
ja
push
pushl
push
cli
ret
cltd
aaa
fisubs
pushf
push
sub
sbb
pop
arpl
fisubrs
rcr
rcll
xchg
inc
idivb
jp
add
jg
mov
mov
mov
fisubs
adc
mov
scas
jno
push
jmp
das
xor
push
rolb
out
popa
dec
adc
inc
bound
repz
mov
adc
lock
adc
push
mov
lcall
mov
and
xchg
and
iret
push
or
mov
int3
iret
cltd
adc
cmp
inc
mov
mov
dec
in
push
out
rorl
popa
dec
fcoml
mov
jg
out
xor
das
and
lcall
cwtl
jg
scas
xor
test
hlt
or
inc
sbbb
dec
xor
decl
call
add
mov
pop
mov
and
movsl
sub
ljmp
xchg
push
sbb
mov
adcl
or
out
jns
mov
and
test
sar
in
je
sbb
mov
mov
jmp
insb
ds
jg
out
add
or
jno
jae
xor
stos
ljmp
adc
or
pop
popl
mov
xchg
lret
sub
ret
adc
test
arpl
pop
std
pushl
iret
loope
push
and
repz
inc
cmp
popa
jmp
cli
idivl
xor
sub
pushl
fwait
mov
hlt
scas
pop
mov
adc
jo
xor
mov
mov
mov
fdivl
mov
jo
xor
dec
psubw
loope
andb
pusha
push
mov
in
cld
pop
int
fsubr
ljmp
or
jns
jbe
mov
scas
cmpsl
inc
js
push
pop
jecxz
xchg
aaa
pop
mov
add
fnsave
test
into
movl
sub
inc
inc
adc
call
daa
mov
mov
bound
mov
sbbl
mov
filds
lcall
je
es
cwtl
in
mov
mulb
cld
jl
pop
mov
jmp
or
ret
jbe
std
stos
jg
stos
je
out
xchg
enter
jp
push
jg
mov
out
sbb
pusha
jle
test
in
je
in
fstl
xchg
fistpl
cmp
aaa
lret
insl
fwait
les
xor
xlat
or
cmp
jle
and
lcall
adc
mov
imul
push
xor
sub
pop
insl
pop
call
imul
pop
gs
enter
ljmp
lock
pop
les
sbb
xor
jl
arpl
les
cmc
aaa
inc
imul
xchg
icebp
dec
add
jmp
push
adc
and
daa
adc
clc
mov
and
int3
outsb
scas
js
sbb
fistps
xchg
mov
mov
int
sbb
mov
stos
fs
jp
inc
adc
je
cmp
inc
cmp
sbb
cmp
push
repz
add
inc
call
sub
imul
ret
out
xchg
pop
je
scas
idiv
lahf
sarb
xor
adc
mull
loopne
in
pop
add
jecxz
push
mov
into
pop
arpl
ror
shll
lcall
sub
cmc
mov
inc
mov
mov
lret
fcoms
mov
movl
xchg
cld
call
cld
add
mov
push
add
jns
push
js
inc
add
js
add
decl
movsb
cmpsb
call
pop
lock
lods
daa
rcrb
pop
xchg
sbb
mov
sahf
insl
dec
jmp
add
mov
jl
in
lods
or
clc
call
and
repnz
aaa
xchg
mov
cltd
dec
push
cmp
lret
jae
fsubrp
push
pushl
in
je
push
lods
pop
mov
sbb
pop
fidivrs
ljmp
fldenv
sbbb
inc
adc
cwtl
test
lods
inc
mov
push
jmp
xchg
jnp
nop
cmp
shrl
fstpt
xlat
mov
push
cwtl
aas
lods
or
out
xlat
call
int3
pop
inc
mov
inc
icebp
mov
sub
mov
out
pop
fldcw
lcall
dec
mov
cmp
clc
adc
addr16
sub
rorb
hlt
int3
sub
inc
sub
aaa
std
sbb
fadds
pop
jmp
cmc
adc
add
xchg
lods
pushl
cld
push
ficoml
sbb
mov
repnz
rcr
rcrb
cmp
inc
aas
fldcw
jle
mov
rcrb
imul
int
push
jmp
stos
pop
dec
add
sbb
or
or
ljmp
addl
sub
jnp
int
dec
and
sbb
pop
fisttpl
push
add
cmp
shlb
adc
sarb
imul
mov
roll
push
xchg
and
xor
pop
sbb
inc
mov
push
jl
lret
fisubrs
decl
pop
push
sub
aam
aad
lahf
jae
in
xchg
mov
daa
pusha
ja
mov
xlat
sbb
mov
ljmp
ret
lods
xchg
test
dec
mov
add
fcomip
dec
mov
stos
lock
clc
data16
out
orl
xor
xor
ds
pop
pop
out
and
pop
imulb
lahf
imul
dec
add
jle
fs
call
pop
push
cmpsb
por
nop
sbb
pop
jnp
push
mov
loope,pt
pop
clc
pushl
push
mov
int
cmpsb
enter
dec
pop
stos
xor
loop
inc
hlt
and
pushl
adc
inc
test
or
pop
ret
mov
pop
sub
mov
incl
data16
sub
les
xchg
mov
inc
cmpsb
dec
gs
je
mov
sbb
cwtl
mov
add
dec
insl
out
pushf
push
sbb
clc
jno
sub
pop
call
sbb
pusha
lock
sbb
xchg
cmpsb
and
dec
jp
lea
addr16
jmp
mov
adc
jae
push
mov
xchg
push
push
xor
out
xor
test
mov
fcmovnb
pop
rorb
sbb
insl
mov
test
xor
xchg
push
push
mul
xor
aaa
push
mov
cltd
lret
das
adc
call
fsubrs
loope
add
cwtl
cmpsb
mov
push
pop
xor
jge
outsb
lcall
fadds
nop
je
mov
mov
dec
ret
ljmp
testb
cmc
ljmp
xor
and
adc
lcall
mov
ret
and
jg
or
mov
mov
xor
clc
sbb
js
int
sub
or
cmp
mov
in
loopne
loopne
fidivrs
mov
inc
std
dec
repz
js
decl
out
mov
iret
and
pop
add
jge
add
jne
jge
mov
pushl
push
bound
mov
inc
dec
fisubl
insl
aaa
in
setl
mov
inc
decl
in
pop
fnstenv
add
xor
icebp
jne
rolb
mov
test
dec
jb
out
pop
sbb
inc
popf
orb
push
xchg
cs
jmp
dec
ljmp
xchg
popf
call
inc
push
jbe
mov
xchg
fcmovnbe
mov
adc
addr16
pushl
sbb
sar
add
cmpsl
add
push
xchg
call
mov
mov
loop
and
fcom
ret
in
dec
test
rcll
aaa
pop
cmc
shrl
shll
insl
rorb
cmp
xchg
xchg
repz
lret
mov
outsb
sahf
mov
cmp
insb
lods
sets
and
rol
mov
adc
pop
cmp
call
xchg
aas
inc
push
pop
pop
inc
iret
mov
sbb
mov
mov
stos
mov
stos
rclb
pushf
xchg
sbb
dec
pop
lcall
into
dec
or
inc
pop
adc
inc
call
push
jo
scas
call
leave
and
xor
dec
dec
jg
inc
nop
push
xchg
and
mov
jmp
jns
repnz
dec
jle
movsl
cmp
jo
push
jp
outsl
out
mov
in
lods
add
imul
xchg
das
insb
inc
decl
cltd
mov
xor
jbe
cmpsb
mov
jge
jmp
les
and
scas
mov
or
adc
jp
popa
in
stos
pop
jb
pop
push
or
lea
js
pop
pusha
mov
push
es
ss
icebp
fs
jl
je
call
rorb
jae
mov
xchg
cli
mov
lahf
stos
out
jb
push
loop
and
or
outsb
movsb
dec
pushl
std
jmp
jl
push
nop
xchg
push
mov
lock
or
movsl
flds
push
shrb
lret
fldl
or
clc
dec
gs
push
insl
test
push
adcl
push
xchg
and
ljmp
aaa
loopne
iret
gs
call
lahf
adc
pop
mov
adc
xorl
xchg
dec
or
cld
push
jg
pop
mov
push
mov
mov
mov
add
mov
sub
push
mov
pop
into
xchg
mov
or
push
sti
sub
pushl
jns
lods
adc
ficomps
stos
mov
inc
cld
pop
inc
repz
push
xorb
inc
add
xor
nop
repz
mov
mov
jo
cld
inc
aad
pusha
mov
jmp
mov
and
sbb
pusha
sbb
fsubrl
pop
push
ror
loope
mov
shrb
pushl
jg
fisubs
in
push
idivb
push
js
pop
scas
loope
dec
mov
jmp
add
movsb
out
push
stos
jge
movsl
cmpsb
sbb
je
lret
inc
ret
call
and
stc
movsb
shrl
add
mov
or
pop
fnstsw
cmp
sub
dec
int
adc
jb
cmp
jnp
inc
jnp
fstl
dec
dec
sbb
imul
mov
mov
in
fsubl
jmp
arpl
arpl
pop
adc
push
adc
xchg
dec
aad
into
add
pop
cmc
mov
push
xchg
fcmovb
popa
inc
push
dec
xchg
mov
inc
shrb
in
push
shrb
je
iret
imul
pop
mov
scas
cmp
jmp
inc
scas
jg
in
testb
movsl
mov
mov
call
cld
call
push
push
test
jb
or
sbb
lret
and
mov
push
cld
incl
je
xchg
stos
fwait
pop
int
ret
sub
or
fwait
inc
test
sar
lcall
push
hlt
sbb
jle
stc
in
insb
and
sbb
inc
outsl
daa
call
rcrl
xor
add
adc
sub
movsb
sbb
dec
call
xor
pusha
dec
inc
int3
add
jecxz
mov
test
testl
pushl
mov
adc
sub
data16
inc
push
arpl
pop
les
incl
test
shr
test
mul
xchg
arpl
hlt
addr16
jns
cmp
xor
outsb
jge
shl
je
xchg
js
and
into
aaa
stc
hlt
cmp
rcrb
xchg
je
outsl
popf
mov
outsb
sub
lea
mov
fistpl
lcall
add
xor
lea
jae
cmpsl
or
xor
enter
imul
cltd
adc
mov
ss
imul
or
insb
jmp
pusha
mov
decl
inc
xor
mov
test
jbe
push
in
adc
and
lcall
pushf
fldenv
xchg
xchg
nop
xchg
jo
inc
test
or
cmp
inc
xchg
cmpsb
or
and
gs
mov
xchg
mov
sbb
int
aas
test
fdivs
clc
sti
mov
xor
xchg
or
dec
sub
jmp
push
rclb
xor
divl
aam
in
mov
int3
sbbb
ljmp
cwtl
mov
rcrb
cwtl
dec
cmp
icebp
or
xor
adc
out
xchg
push
fstl
insl
lcall
mov
jecxz
cli
mov
rcrb
jmp
fwait
push
dec
mov
xor
popa
jno
std
cmpsl
jbe,pt
jbe
lret
jmp
fldl
clc
jmp
clc
and
sbb
dec
mov
pop
adc
call
cli
adc
mov
push
cli
cmpsb
dec
inc
sarb
push
ljmp
fwait
out
dec
mov
mov
xor
adc
adc
test
rcll
jg
rorb
rorl
popf
scas
jae
sub
or
mov
lcall
lds
leave
scas
fwait
xor
movsb
jo
adc
cmp
sbb
xchg
sahf
int3
and
xchg
jg
push
inc
movsb
lods
jae
push
lods
mov
sbb
ljmp
jle
push
out
and
mov
xchg
cmpsl
lods
xor
push
push
ss
xchg
ljmp
fldt
push
std
das
leave
lds
int
jb
pop
shl
jg
call
pop
pushl
pop
stos
jno
inc
xchg
pop
sbb
pop
ss
movsl
push
std
jp
inc
inc
sub
push
sbb
add
jb
push
add
and
in
lret
inc
mov
out
out
cmp
mov
add
cmpsb
fmull
mov
lcall
hlt
fdiv
inc
adc
push
jne
cmp
cli
push
xchg
decl
xchg
inc
ds
adc
add
sub
inc
inc
dec
sub
inc
mov
pushl
fsubrs
cmpsl
imul
or
pusha
xor
outsb
cmp
lcall
call
mov
and
in
dec
xchg
pop
aad
gs
hlt
ffreep
movl
xchg
xor
inc
inc
jae
mov
pusha
jg
pushl
jae
mov
lds
xor
mov
add
mov
mov
pop
hlt
ljmp
mulb
inc
push
arpl
nop
mov
xchg
cmp
xlat
fstps
or
inc
mov
sub
dec
outsl
cmpsb
std
mov
dec
loop
test
stc
imul
sbb
lods
xchg
out
stc
cmp
xchg
pop
sarl
roll
add
push
arpl
cmpsb
int3
fcoml
lock
xor
jp
add
fistpll
lods
fsubr
nop
pop
pusha
enter
pop
jmp
popa
push
pusha
stos
dec
or
lea
cmp
dec
and
aas
push
cs
add
lcall
jge
xor
pop
fidivl
push
fidivrl
sbb
sbb
xchg
imul
incl
subw
into
add
out
mov
mov
repz
sbb
aad
decl
cmp
fadds
ret
call
sub
outsb
xchg
in
inc
push
daa
rcrl
dec
ds
mov
decl
aam
mov
adc
and
shrl
cmc
xor
adc
inc
mov
lods
call
pushl
sbb
out
sti
cmp
mov
push
ret
pop
and
sub
cmp
ret
mov
stos
pop
scas
add
ss
in
or
jecxz
std
pop
test
push
jmp
stos
stos
sbb
mov
lret
xorl
or
pop
lahf
sbb
jle
lods
incl
or
bound
adc
addr16
fbld
push
pop
daa
pop
imul
scas
scas
sbb
jecxz
mov
out
mov
xchg
icebp
sub
arpl
mov
arpl
lret
inc
std
jo
repz
xchg
jne
call
ss
xchg
mov
push
lock
out
gs
cld
push
pop
incb
jmp
aas
mov
ret
aad
mov
ljmp
inc
bnd
jmp
cld
jg
outsl
xchg
and
cld
mov
rorl
lods
clc
into
add
hlt
add
call
outsb
dec
adc
or
jp
xlat
pop
repnz
jle
and
out
es
decl
pop
lea
pop
xchg
pusha
inc
repz
cld
mov
test
scas
out
jb
movb
push
mov
add
jle
sub
adc
sahf
loopne
mov
inc
clc
lcall
jbe
cmc
popf
stos
mov
mov
mov
ljmp
sub
add
xchg
mov
jp
push
stos
lock
xchg
pop
inc
ficompl
jne
adc
mov
outsl
ficompl
cmp
mov
jb
es
jle
js
sar
call
push
mov
adc
xchg
mov
pop
xlat
dec
xor
cmpl
sub
and
decl
xchg
or
rol
test
lods
imul
out
lret
icebp
and
sbb
xchg
clc
add
cmp
jp
lret
scas
clc
mov
adc
adc
fildll
cmp
mov
xchg
xlat
pop
mov
dec
jns
int
ret
jo
sbb
add
pop
and
or
in
popf
in
sbb
mov
iret
repz
fcomip
jmp
cmpsl
orb
rclb
or
outsl
cmp
std
jmp
out
ja
movsl
jmp
clc
mov
daa
sbb
mov
fsubrs
out
push
pop
and
jbe
fistps
pushl
incl
xor
mov
movsb
jbe
and
inc
nop
mov
jge
adc
dec
adc
iret
xchg
loop
add
es
mov
test
and
ljmp
jns
addr16
mov
nop
adc
pop
mov
aas
pop
mov
lods
mov
js
cmp
push
pop
mov
dec
push
pop
dec
jl
fs
push
sti
lock
es
ljmp
aad
es
addb
out
imul
enter
mov
in
roll
call
rolb
dec
dec
mov
jp
pop
daa
fcmovbe
xchg
in
ljmp
mov
jle
pop
mov
xchg
lea
decl
lock
mov
je
in
inc
jg
ret
sbb
call
jno
xlat
dec
cmc
xor
int
arpl
sub
push
and
pop
xchg
adc
adc
mov
adc
sbb
adc
shll
sbb
testb
cld
ljmp
and
pop
push
and
fnstcw
mov
rdseed
call
cli
cli
idivl
sahf
lcall
nop
ret
jns
adc
cmpb
jmp
rorb
jecxz
out
push
mov
lods
push
xchg
arpl
mov
push
push
negl
cmpsb
push
lods
xchg
cmp
pushl
cmp
pop
nop
xchg
arpl
adc
push
lret
dec
fwait
xchg
xor
dec
mov
lret
in
sub
test
bound
jnp
fimull
and
test
test
or
ret
nop
insl
cmpsl
call
ljmp
xor
or
mov
fnstsw
push
mov
imul
je
xchg
hlt
jmp
push
scas
sbb
push
jne
pop
push
nop
push
mov
stos
decl
mov
jge
sbb
pop
add
add
decl
pusha
orl
arpl
es
cltd
repz
jge
fldt
pushf
xor
out
lds
fs
popf
inc
xchg
lock
push
stc
shll
popa
mov
pop
jmp
inc
mov
clc
cmp
aam
into
sti
or
out
sbb
lcall
loopne
jp
jns
add
inc
int
xor
adcb
clc
stos
ljmp
jae
iret
adc
sbb
mov
dec
mov
ljmp
xchg
pop
cmp
cmc
pop
mov
test
jg
nop
push
jmp
ljmp
mov
out
pop
adc
dec
arpl
adc
or
jge
pop
bound
jns
out
dec
incl
out
add
sub
push
and
adc
mov
push
xlat
adc
call
test
inc
icebp
mov
or
lods
scas
clc
call
lret
or
dec
mov
jp
push
lret
lret
cli
adcb
int3
std
pop
lcall
push
scas
cld
sub
in
ljmp
push
jg
ficompl
mov
enter
out
xlat
lret
scas
sbb
repnz
add
jmp
sbb
dec
and
cld
lds
mov
popa
mov
test
call
cmp
fwait
out
xor
nop
push
jg
stos
aad
fcmovbe
cmpsb
in
mov
decl
cmp
in
outsl
stos
pop
jns
std
cmp
ds
hlt
clc
inc
push
clc
xchg
dec
xchg
jbe
mov
out
shlb
bound
rcll
lods
mov
das
jns
lea
out
jg
call
fstpt
mov
push
andb
push
cmp
inc
stos
and
jg
xchg
xor
stos
cmp
xchg
test
js
cld
lahf
jecxz
jg
decl
sub
cmp
and
jbe
scas
lcall
cmpsb
call
aaa
pop
imul
out
into
in
out
mov
loop
outsl
orb
sub
adc
adc
out
fcomip
incl
jno
adc
mov
sahf
repnz
or
xchg
mov
sahf
mov
pop
negb
adc
in
pop
mov
sub
dec
xor
shr
sbb
sbb
add
scas
adc
daa
or
mov
cmp
xor
jnp
pop
pop
sbb
in
les
hlt
push
mov
cmp
mov
mov
test
pop
cli
loop
insl
sub
shlb
out
iret
sbb
add
mov
jecxz
out
and
mov
pop
push
pop
adc
mov
lods
sar
ljmp
cwtl
sahf
scas
mov
mov
cmp
adc
inc
mov
mov
lret
test
fmuls
mov
shrl
fcomip
or
add
stc
push
jge
gs
inc
mov
stos
adc
into
icebp
mov
das
cli
out
jnp
jnp
lret
nop
cmc
mov
cmpb
push
mov
mov
push
std
sbb
notl
or
fimull
jmp
jmp
pop
adc
pushf
scas
incb
jp
push
int3
pop
pusha
ljmp
jbe
or
mov
aas
xor
and
pushf
jle
leave
push
aaa
pop
cld
mov
sbb
cmc
popf
lret
testb
dec
push
push
or
cmc
loop
fmull
lret
mov
icebp
incl
mov
rorl
divb
inc
mov
shll
mov
mov
iret
push
or
nop
lock
faddp
mov
mov
jecxz
and
lret
add
mov
pop
pusha
aas
clc
jb
push
sub
or
jecxz
pop
push
arpl
popa
mov
and
jg
jg
jg
loopne
outsb
push
shrb
aad
into
pusha
cmpsl
jb,pt
dec
fsubrs
lcall
or
mov
add
xlat
jo
pop
fcoms
jnp
push
jbe
aas
mov
cmp
xor
jp
cmpsl
pop
sbb
or
stc
imul
adcl
jg
insl
xchg
lods
bound
mov
jmp
add
fldt
sahf
not
and
inc
push
int3
sub
and
clc
and
fwait
pop
jecxz
lcall
js
lea
and
inc
into
inc
mov
jb
jno
pushl
pop
mov
rcll
leave
fstpl
iret
xor
pop
cmp
shrb
cltd
lahf
call
aad
jae
mov
mov
mov
and
call
push
loopne
decl
or
mov
adc
repz
jg
arpl
dec
movsl
or
das
jg
test
imul
push
inc
pop
sbb
out
mov
inc
jbe
sbb
pop
sahf
lcall
mov
inc
and
adc
mov
dec
idivb
sub
inc
jg
inc
mov
or
xchg
and
pushf
jmp
andl
jo
xchg
cmpb
inc
mov
inc
daa
fisubrs
push
in
cmp
xchg
sahf
dec
cmpsl
data16
outsl
std
into
or
cmc
sub
push
push
call
push
pop
shlb
fistps
pushl
xor
cld
sbb
loope
loop
push
mov
sbb
dec
push
sbb
incl
mov
push
adc
jmp
insb
and
xchg
jne
fbld
cld
pushf
inc
add
push
pop
icebp
ljmp
sbb
xor
dec
iret
test
jl
xchg
sti
out
mov
pushl
std
adc
push
cs
and
je
cmp
jge
push
fnstenv
or
incl
negb
fsubs
push
jle
mov
nop
jno
ficoml
add
xor
mov
sub
std
mov
jbe
sbbl
adc
test
inc
sub
and
int
movsb
test
and
sbb
dec
ljmp
addr16
pop
into
push
ds
popa
outsb
lods
popf
fstps
jecxz
popa
pop
fisubl
jmp
notb
push
leave
jmp
push
scas
xchg
ret
shl
jmp
ljmp
pop
scas
in
push
add
int
ja
ret
lcall
leave
xor
fwait
stc
inc
jb
jg
decl
repnz
lcall
cmp
call
xchg
pop
push
int
mov
clc
lcall
inc
negl
test
mov
dec
stos
out
inc
js
jmp
clc
jbe
jb
int3
shl
sub
fdivp
jmp
xchg
in
loop
lahf
ret
cld
jmp
dec
jecxz
test
loop
out
mov
adc
int3
pop
inc
cmpsb
pop
add
je
jmp
push
sub
movsl
arpl
outsl
into
fsubl
push
or
adc
sub
sbb
mov
cmp
sar
dec
jmp
mov
xor
mov
rorl
jmp
das
mov
adcb
or
rolb
lcall
rolb
insl
xor
hlt
cmp
cs
inc
pop
jl
out
out
mov
stc
mov
mov
ljmp
jno
in
mov
adc
daa
pop
dec
or
push
push
in
dec
imul
cmpsb
inc
lret
jnp
pusha
es
push
mov
sar
jmp
imul
dec
imul
std
sub
fs
push
loopne
jmp
std
movsb
arpl
push
lods
push
outsb
incl
adc
and
xor
sti
sub
mov
les
arpl
lods
iret
aaa
cs
pop
cmpsb
sbb
mov
ret
xchg
sbb
and
cmp
popf
mov
lahf
inc
in
pushl
adc
inc
nop
cs
add
sbb
add
shrl
mov
cld
call
repz
cmp
shlb
loope
insl
jg
mov
lds
int3
dec
fnstcw
out
jg
pusha
dec
pusha
pop
in
divl
jbe
loope
xor
scas
clc
decl
pushf
pop
mov
or
outsl
adc
jae
cmpsb
ljmp
push
inc
cld
inc
xchg
cwtl
out
es
mov
filds
push
mov
outsb
pop
ja
sbb
aad
push
and
mov
mov
idivl
les
mov
cli
push
cmpsl
xchg
movsb
mov
xchg
scas
xor
jg
jecxz
adc
fiaddl
dec
cmp
cs
and
xor
clc
mov
lahf
imul
fwait
mov
dec
in
adcb
call
aam
dec
mov
jno
mull
lret
arpl
inc
mov
movsl
popa
nop
jg
cmp
or
incl
std
orl
les
stos
gs
mov
jg
sbb
nop
ret
lcall
xchg
mov
hlt
outsl
stc
mov
jge
dec
push
icebp
leave
lahf
cmp
push
enter
std
jge
add
sub
adc
icebp
incl
rcr
pop
adc
shr
daa
push
fdivp
mov
cmp
decl
pop
rcrb
push
lret
or
jns
sbb
loop
fnstenv
dec
sahf
push
and
and
icebp
adc
cld
insb
leave
add
mov
or
js
pop
lock
jae
mov
cmp
test
jp
pop
cmp
sub
scas
decl
pop
mov
insl
aam
inc
repz
dec
push
xlat
pop
or
or
push
insb
sbb
decl
push
int
and
arpl
sbb
jno
cmp
leave
dec
sub
jg
mov
xchg
jp
mov
mov
scas
cmc
or
stc
jmp
dec
add
mov
ljmp
rcl
cmp
xchg
stos
negb
xchg
loop
or
jnp
mov
xor
lcall
icebp
inc
loop
out
inc
imul
lock
popa
jae
divl
sbb
add
loop
ljmp
mov
xchg
pop
mov
add
push
lret
pop
mov
stc
loopw
inc
xchg
loope
cmp
mov
or
add
push
add
mov
pop
pushf
push
inc
sahf
faddl
sub
or
cmp
fmull
das
out
jg
decl
cli
jg
mov
xor
pop
imul
dec
cmp
lods
fisttps
call
pushl
sbb
pop
fwait
mov
xchg
adc
in
jmp
out
sahf
out
gs
ljmp
js
into
test
adc
adc
pushf
fldenv
loop
sbb
dec
daa
ss
idivl
ljmp
pop
mov
cli
or
jg
cmpsb
movsl
in
push
sbb
incb
cmp
cld
incl
push
movb
ds
call
rclb
sbb
inc
adc
incl
scas
aad
dec
shll
jmp
data16
mov
push
movsb
mov
decl
in
ljmp
enter
jmp
outsb
mov
cli
xor
in
in
cli
add
lcall
data16
pusha
lods
decl
jno
test
mov
push
test
leave
add
lcall
decl
add
insl
mov
xchg
je
ror
mov
cmpsb
popa
add
sbb
xor
mulps
add
lcall
fdivrs
clc
push
jne
mov
pusha
inc
add
dec
notl
ljmp
xchg
sub
dec
js
xchg
subl
in
hlt
fcomip
ljmp
xor
leave
movsl
pop
psubsw
inc
mov
inc
or
call
add
stos
mov
shll
jb
icebp
mov
inc
movsb
xchg
fs
ret
scas
inc
fiaddl
xor
mov
pusha
push
fcompl
aad
in
add
mov
repz
aaa
jo
sti
fwait
mov
shl
sub
push
and
add
outsl
call
inc
cli
decl
pop
push
outsb
mov
mov
ljmp
push
pop
adc
dec
data16
mov
jecxz
out
lods
jle
mov
outsl
pushl
fs
cli
mov
arpl
inc
cmc
enter
adc
in
sub
incl
cmp
ficoms
dec
jae
stc
imul
ljmp
pop
jno
leave
or
or
call
inc
push
sahf
sar
cmp
lahf
les
std
jo
adc
inc
aaa
ror
or
mov
lahf
jbe
jae
subb
cmpb
cmovl
pop
add
push
scas
inc
and
lcall
cli
jl
out
xor
pop
xor
in
mov
es
leave
icebp
mov
xchg
push
icebp
insl
jg
sub
scas
test
adc
ds
sbb
test
call
pop
jecxz
ret
mov
pop
xchg
inc
cld
xchg
in
dec
sub
adc
sub
ljmp
jb
cmp
lcall
jecxz
mov
loope
mov
ja
sbb
ficomps
loope
pushl
dec
mov
in
inc
jl
pop
loope
add
dec
outsb
xchg
das
fs
mov
mov
sbb
xchg
mov
dec
add
jnp
sub
mov
pushl
pushf
adc
sub
push
cmp
bound
push
mov
cld
call
sub
inc
pop
pop
mov
jne
jmp
jg
lods
popa
xchg
stc
add
out
sbb
push
jno
pop
push
out
cmpsb
inc
int
ljmp
adc
push
clc
bnd
movsb
movsb
push
dec
xor
xchg
cmp
andb
jo
xlat
jg
inc
pop
fidivrl
sarl
mov
stc
icebp
in
xor
push
fsts
inc
ds
lret
mov
adc
adc
push
pop
sub
subl
icebp
jmp
dec
fbstp
push
jne
das
cmp
adc
pop
sbb
push
mov
popf
cmp
outsb
loop
jg
decl
notl
or
cld
push
inc
cwtl
aaa
aas
roll
sub
and
ljmp
or
loop
pop
pop
add
adc
test
hlt
jb
stc
xchg
frndint
int3
lret
sbb
call
xor
nop
jp
add
cmpl
fisttps
xor
roll
push
mov
pop
mov
fwait
push
sub
fiaddl
mov
test
outsb
pop
call
xchg
hlt
mov
loopne
scas
pop
dec
movsb
lcall
fnstcw
xchg
lcall
jne
sti
je
int3
pop
je
cwtl
mov
incl
jno
test
into
cmp
out
stos
dec
in
call
rorb
jmp
mov
push
add
mov
incb
data16
rclb
xchg
or
mov
sahf
and
outsb
push
lds
mov
test
in
lahf
push
int
mov
jp
scas
xchg
icebp
cmp
mov
clc
call
clc
sub
loop
stc
inc
rcr
inc
and
or
inc
imul
xor
inc
add
push
cmpsb
adc
in
sahf
lods
dec
sbb
mov
inc
pop
cmp
push
movb
add
and
push
add
inc
mov
ljmp
adc
inc
add
jb
push
cmpsl
cmp
stos
sbb
jl
cmp
jg
fs
fwait
scas
push
mov
mov
inc
decl
iret
dec
mov
mov
fmuls
shrb
mov
lock
mov
jmp
push
jo
cld
loop
fdivs
mov
pop
inc
and
rcll
jecxz
addr16
mov
adc
mov
cmp
xlat
mov
inc
xchg
aas
push
xchg
les
aaa
cmpsl
sbb
scas
mov
in
or
cmove
arpl
ljmp
sbb
adc
aaa
xchg
aam
add
leave
sbb
jle
arpl
add
rclb
scas
pop
and
ljmp
lock
cli
out
ss
ljmp
pop
and
js
mov
mov
stos
sbb
mov
call
sbb
push
movsl
pop
and
in
or
mov
cmc
push
cld
test
lcall
mov
push
in
cltd
out
xchg
in
adc
test
or
push
mov
call
outsl
add
scas
cltd
sbb
mov
in
or
stos
imul
call
adc
ds
scas
fs
inc
mov
pop
aam
xor
scas
aam
repz
movsb
fs
cld
or
popa
add
sub
or
ljmp
pop
outsl
jecxz
mov
mov
or
es
dec
jg
aaa
adc
out
loop
movsb
test
cs
mov
rcll
hlt
mov
cmp
fcomip
out
mov
or
out
dec
sbb
xlat
leave
push
pop
push
movsb
repnz
data16
outsl
xchg
xchg
js
xchg
fs
decl
stos
lds
out
fsubrs
ror
adc
mov
mov
and
data16
aad
lcall
lcall
filds
cmc
push
add
clc
or
adc
inc
js
pushf
loop
jns
mov
pushl
imul
dec
jnp
stos
or
decl
das
xor
ja
and
fs
nop
icebp
jmp
ds
pop
push
and
mov
jg
jmp
pushf
int
adc
idivb
pop
stc
sub
sbb
pop
notb
xor
gs
mov
lcall
xchg
pop
push
mov
pop
pusha
ret
jnp
lahf
add
adc
test
mov
jmp
sbb
insb
inc
lock
jecxz
insb
add
aad
fstps
xor
hlt
cli
incl
das
aaa
lahf
xlat
sti
lods
adc
inc
lahf
gs
andb
lods
notb
div
sti
incl
movsb
int
cld
bndstx
lret
std
sbb
sub
xchg
add
add
incl
ljmp
iret
gs
or
mov
sbb
fwait
pop
dec
jmp
aaa
jns
adc
add
inc
incl
jnp
push
adc
mov
mov
mov
xor
push
mov
mov
inc
jmp
daa
push
ja
inc
test
in
adc
fcmovnu
xlat
cmc
push
rcrb
jg
repz
pusha
xchg
decl
dec
sub
shlb
dec
stos
iret
loop
sbb
clc
and
out
ljmp
ljmp
es
addr16
push
dec
cmpsl
jne
or
shrl
inc
scas
dec
push
xchg
sbb
lods
out
enter
jmp
mov
test
popa
mov
pop
hlt
ds
pop
insb
xchg
stos
and
push
or
inc
inc
pop
ficoml
sub
mov
je
clc
mov
push
int
loopne
mov
adc
ja
aaa
mov
fsts
into
ja
lret
flds
or
lcall
leave
and
cli
adc
xchg
pop
pop
xchg
mov
cs
jle
lcall
mov
fbld
push
jbe
cs
jns
mov
lcall
fnstsw
push
add
and
ljmp
outsl
mov
cmp
inc
loope
in
imul
fsubl
mov
lods
aad
xor
fidivl
test
pop
call
les
inc
data16
repz
push
add
ja
das
shr
jo
ja
mov
lret
call
scas
popl
cltd
divb
push
mov
jo
insb
imul
test
jmp
pop
aas
push
decl
mov
mov
ljmp
repnz
loopne
iret
imul
dec
incb
test
addb
in
add
dec
cmpb
aas
aaa
xor
daa
pushl
ljmp
mov
xor
or
jecxz
xchg
pop
xchg
incl
add
xor
mov
xor
jle
cld
cld
add
out
or
iret
mov
lret
inc
add
or
cmp
shrb
fstl
jg
pushf
negb
cmp
push
or
sbb
mov
fstcw
and
lcall
pop
push
lock
or
mov
inc
and
fildll
add
aas
pop
ljmp
mov
cltd
add
or
mov
ret
lds
adc
call
dec
fwait
mov
call
add
pop
jp
arpl
xor
cmp
mov
xchg
inc
cmc
loope
xlat
test
orb
push
rorb
or
xchg
shll
cltd
jecxz
cmp
test
ljmp
push
push
jp
gs
xchg
pop
aas
enter
jp
pop
popa
xorl
call
adc
cmp
jne
xchg
pop
pop
lds
cmpsb
fwait
and
pop
hlt
out
cmp
cmp
pop
fwait
mov
adc
pop
xchg
clc
test
or
fwait
mov
lcall
lcall
dec
mov
sbb
mov
add
sub
imul
sti
xchg
hlt
aad
ss
into
push
pop
lcall
outsb
push
pop
pop
and
xchg
outsl
stos
cld
fcomip
push
xor
push
mov
xacquire
mov
xchg
cs
call
scas
jmp
cltd
into
xor
jecxz
or
xchg
or
nop
out
pop
popa
pop
cmpb
lcall
xlat
idivb
shrl
outsb
add
fidivs
mov
xlat
loope
ja
pushl
pop
push
in
out
mov
aad
jl
lcall
sahf
push
sub
ja
call
loopne
aaa
mov
ds
bound
nop
sub
movsl
iret
add
push
popa
sub
lcall
pop
lcall
cmp
fcmovbe
xor
adc
cld
adc
lret
clc
xchg
cmc
outsb
push
dec
cli
ret
pop
add
mov
movb
xchg
push
in
or
lahf
fcompl
rcl
rol
sub
mov
pushl
ja
out
in
scas
sahf
pop
mov
stc
adc
jb
lcall
mov
sti
jno
jp
mov
dec
mov
add
dec
bound
call
adc
cmp
sub
adc
aam
cld
outsb
jmp
cmp
jg
xchg
cli
dec
sub
mov
push
xchg
mov
mov
or
xchg
pushf
mov
sbb
dec
push
incl
dec
ja
jns
cmp
dec
push
push
andb
call
fdivrs
std
and
sbb
push
mov
fcomip
lcall
movsb
add
cmpsl
xchg
lds
jmp
push
sbbl
call
jmp
aas
fimuls
add
pop
sub
cmpsb
mov
pusha
inc
outsl
sbb
mov
jmp
push
pop
in
dec
fdivrl
xchg
outsl
cmpsl
mov
xchg
push
mov
pop
mov
adc
jo
popf
test
ljmp
addb
sub
xchg
popa
jne
sahf
insl
out
icebp
jg
push
xor
pushf
frstpm(287
mov
dec
test
std
fistpll
sub
rcl
jg
cwtl
dec
xchg
sub
roll
or
or
and
fwait
dec
out
pop
and
cmpsb
std
dec
cmp
lds
arpl
push
jg
decl
mov
repnz
xchg
repz
xor
fistpll
and
sti
pop
push
pop
lds
cld
mov
sub
mov
mov
xor
pop
pop
loopne
dec
das
cmp
dec
xchg
mov
cmpsl
xlat
inc
loopne
call
popf
dec
ret
jmp
sarl
popf
lock
aam
jbe
sub
fbld
int
add
sbb
dec
push
mov
stos
in
clc
incl
shlb
push
push
inc
fsub
pop
lock
mov
ss
shl
jp
pop
sbb
mov
cmp
jmp
std
cs
jg
outsl
fwait
aad
xchg
ljmp
pop
mov
mov
idiv
jns
cmp
es
mov
mov
ja
clc
xor
fdivs
add
xchg
mov
xor
push
cmove
mov
fs
arpl
jmp
popa
push
pop
test
jp
ror
out
ljmp
xchg
mov
xchg
lds
adc
decl
mov
pop
fs
push
ret
bound
call
xchg
sahf
call
outsl
and
test
pop
xor
push
sub
pushf
pop
push
dec
lods
bnd
sbb
jg
lock
aaa
test
mov
push
fcoms
mov
stc
mov
test
xchg
nop
add
sub
xchg
pop
sub
in
call
data16
les
lea
in
jmp
sbbl
mov
lcall
fcomip
cmc
fnsave
divl
insb
pop
cltd
pop
sahf
xchg
mov
inc
into
scas
sbb
ljmp
cmp
sbb
pop
icebp
gs
push
outsl
lea
cmp
adc
jmp
push
push
push
add
sbb
icebp
inc
cmp
popa
clc
adc
icebp
incl
jns
aaa
enter
inc
pop
arpl
jae
clc
enter
mov
out
and
jnp
cmpl
xchg
lods
int3
fs
and
mov
mov
incl
jno
xchg
mov
cli
stos
sub
jp
into
cmp
daa
aam
cmc
or
mov
pusha
mov
mov
ljmp
and
cmpsl
outsl
test
cli
inc
shll
mov
imul
mov
and
incl
in
in
loopne
fndisi(8087
dec
ret
mov
das
cmpsl
in
cmp
mov
jnp,pt
mov
fstpt
mov
sbb
inc
mov
dec
fdivr
jmp
loopne
ja
leave
pop
xchg
pop
dec
clc
sbbl
cmpl
daa
sbb
sub
cld
ror
pop
jbe
xchg
addb
cmp
jg
inc
sbb
sbb
jmp
pop
lret
mov
ret
test
into
stos
sahf
and
out
clc
mov
adc
mov
int3
jnp
hlt
mov
repnz
cmp
push
int
or
cli
nop
mov
mov
fldcw
ret
xor
pop
outsb
xor
cmp
cld
jne
loop
insl
pop
into
mov
cmc
loop
loope
dec
rorb
or
int3
and
push
incl
lret
pop
lods
mov
xchg
imul
out
cli
pushl
inc
pop
dec
and
cmpsb
lret
jge
cmp
stc
cmp
fdivl
jns
adc
dec
adc
stc
es
imul
insl
hlt
xorb
sbb
popf
sub
jmp
fidivs
stc
call
jge
jmp
cld
shll
pop
lock
jge
add
je
lcall
push
mov
scas
hlt
jp
stc
jne
pusha
xchg
dec
fcompl
dec
imul
and
lcall
out
dec
cmp
popf
push
adc
inc
sbb
test
cwtl
push
mov
mov
mov
or
sub
and
mov
add
mov
jbe
jno
or
lods
mov
call
sub
popf
mov
gs
or
pop
divl
les
rorl
insb
incb
jmp
or
test
imul
mov
cltd
sub
push
incl
fbld
mov
push
int
xchg
sub
mov
xor
test
scas
jge
js
fsubl
mov
pop
inc
fimull
ljmp
cli
lock
push
pop
mov
mov
pop
mov
fsubs
and
movsl
mov
and
xchg
push
mov
add
xor
xor
sub
mov
stos
and
out
loope
dec
jmp
hlt
mov
adc
jg
incl
mov
cmpb
mov
in
and
movsl
jne
es
dec
out
adc
and
pop
mov
in
xchg
in
jnp
pop
pop
or
adcl
ljmp
mov
cwtl
pop
pop
lret
mov
push
popa
cld
je
fisubrl
hlt
sbb
incl
jg
fsts
push
shll
sbb
js
mov
imulb
mov
cli
adc
push
sbb
cmp
sbb
adc
call
sub
sub
xchg
pop
int
incb
add
shlb
lods
dec
call
in
in
mov
test
cmp
sahf
incl
and
push
jmp
xchg
pop
ret
cwtl
jge
mov
or
mov
sbb
lcall
scas
orb
lret
repz
and
push
xchg
mov
inc
loop
push
and
fadd
jb
out
cmpsb
loopne
fdivs
das
sub
push
cmp
add
pop
mov
sbb
push
push
clc
inc
and
lea
and
or
incl
mov
jno
daa
push
sti
inc
iret
mov
xorl
push
sub
push
lods
sub
inc
mov
mov
sbb
ja
push
cltd
mov
fwait
xchg
pushl
mov
fistpl
lret
scas
in
xchg
sub
inc
sbb
push
decl
repnz
sti
clc
mov
sub
mov
pushf
mov
loop
push
negb
das
ficompl
and
andl
sbb
push
jmp
inc
cmpsl
jae
mov
es
cmpsl
bound
outsb
push
pop
insl
push
push
insb
popa
lcall
xlat
xchg
repz
hlt
and
sub
incl
or
sub
call
lods
mov
inc
inc
out
xor
movsb
rorb
xchg
test
insl
or
xor
push
dec
icebp
sbb
cmpsb
jge
jg
or
repnz
xor
call
psubb
sub
pusha
xor
shlb
adc
mov
or
adc
inc
cs
push
mov
lcall
or
outsb
lret
fstps
aaa
fisttpll
sbb
jne
push
cs
push
into
add
mov
mov
int
adc
mov
cmc
and
sub
pushl
aaa
insb
arpl
dec
and
nop
lock
xor
sahf
mov
stc
lea
decl
xor
outsl
xor
or
pop
jnp
xchg
xchg
pop
mov
and
add
inc
call
and
jns
cltd
jbe
testb
in
mov
outsb
clc
lcall
mov
push
sbb
das
clc
jmp
scas
rcr
lcall
andb
push
cmp
mov
incl
xchg
dec
call
adc
cld
dec
or
dec
lods
mov
mov
repnz
scas
jne
sbb
dec
add
mov
subl
mov
ljmp
pop
stc
add
fdivr
mov
dec
loop
nop
adc
repnz
movsb
stos
lods
dec
test
out
cli
pop
aam
imul
pop
pop
insb
daa
fwait
push
daa
mov
sbb
jmp
int3
cwtl
outsb
xor
xorb
mov
lods
push
loop
arpl
mov
sub
or
add
push
rolb
push
rolb
jmp
and
in
ret
add
sti
jmp
mov
icebp
insb
fisubs
cld
test
stos
shrb
loopne
pop
push
sar
decl
cwtl
or
push
push
hlt
popf
jno
push
sti
push
sar
and
aas
mov
popa
test
jle
dec
adc
pop
arpl
xor
cmp
ljmp
pop
adc
cmc
addb
hlt
test
fcompl
inc
fwait
mov
stc
lock
lds
pushw
cmp
mov
push
inc
and
incl
ja
pop
aad
push
shrl
call
fcomps
inc
call
jle
pop
push
xor
mov
push
adc
or
cmp
push
adc
push
inc
inc
andl
outsb
inc
mov
decl
xchg
jnp
push
mov
out
push
popa
gs
scas
out
xor
push
lcall
mov
inc
out
cmc
or
mov
mov
xchg
test
xchg
aam
fdivr
mov
in
je
jge
mov
pushf
das
jnp
xchg
jg
push
loop
mov
pop
adc
xchg
mov
sub
ja
xor
insl
mov
imul
cmp
dec
loope
stc
sbb
xor
cltd
sbb
jl
out
adc
xorb
mov
decl
mov
inc
push
nop
pop
and
test
pusha
hlt
sub
ffree
lcall
sub
mov
dec
push
jl
sbb
sarl
mov
push
hlt
incl
jp
pusha
lret
lods
les
pushl
scas
push
xchg
jecxz
fcoml
pushl
rorb
dec
fnstenv
and
lock
cmc
imulb
add
xchg
push
mov
and
mov
rcr
mov
push
jo
or
jp
mov
lock
iret
jge
loopne
jg
test
mov
lret
popf
push
mov
pop
outsb
jp
in
in
jl
pushf
andl
adc
popl
cmp
addr16
lret
je
inc
adc
lret
clc
shlb
dec
mov
push
jmp
jnp
pop
orb
mov
out
mov
loopw
jno,pn
call
orb
push
xchg
pusha
sbb
jmp
mov
lods
es
mov
cmp
jle
jge
mov
pop
sbb
mov
pop
popa
xchg
cmpsl
outsl
arpl
in
js
decl
test
insl
js
fs
and
aam
int
div
xor
bound
andl
incl
cmp
sub
clc
jl
pop
sbb
mov
sub
sahf
mov
adc
dec
dec
cli
mov
lock
push
adc
insb
xchg
push
inc
ljmp
xchg
add
notb
test
add
decl
scas
sti
repnz
insl
mov
mov
popf
jecxz
es
jmp
push
roll
sbb
pusha
xchg
add
push
cli
decl
mov
xor
mov
cmp
cmp
leavew
or
clc
mov
mov
shl
je
inc
mov
repnz
push
and
leave
mov
fdivp
out
filds
stc
out
aam
data16
pop
mov
cmc
mov
sub
decl
push
fxtract
mov
jmp
and
sub
adc
sbb
test
gs
cmp
outsl
cmpsb
mov
lret
stc
xor
mov
jno
adc
js,pn
out
mov
ja
test
jb
sbb
mov
jne
jae
sbb
push
dec
daa
adc
push
xchg
fnstenv
fwait
sar
adc
mov
fnstenv
fisubs
pushl
fnstenv
sbb
stos
xchg
adc
xchg
es
jl
ret
incl
stos
push
and
scas
lds
add
sbb
pop
clc
cmp
add
mov
cmp
push
or
dec
arpl
jmp
mov
mov
sub
xor
adc
cmpl
add
out
mov
push
ret
pop
mov
sub
frstor
add
mov
jmp
xlat
sbb
or
out
xchg
ljmp
cmp
decl
and
adc
push
lds
push
push
pop
lahf
sub
jne
dec
sbb
lods
xor
rcrl
mov
pop
push
outsb
and
push
mov
pop
ret
inc
push
pop
test
mov
cmp
ss
cmp
xchg
decl
push
and
jg
jmp
add
aas
js
cld
incl
inc
sbb
cmp
stos
addr16
mov
es
jl
cmp
mull
xchg
sar
in
jg
pop
sbb
xchg
xor
jge
inc
jmp
enter
ljmp
adc
mov
fcoml
clc
mov
std
dec
cmp
pop
call
sub
pusha
pop
out
mov
add
dec
adc
fnstcw
mov
add
gs
mov
sti
dec
sbb
sub
insb
gs
mov
int
out
test
jne
fwait
rol
mov
xor
pushl
lods
lcall
test
push
push
jne
pusha
mov
mov
cmp
ljmp
hlt
sub
outsb
insl
mov
lret
and
nop
and
movsb
outsl
std
jmp
sub
add
or
shrb
pop
mov
ja
rorb
mov
cwtl
xadd
cli
stc
jne
jbe
jb
cwtl
das
lcall
push
stc
or
xor
out
std
add
lods
sti
bound
lahf
sahf
pop
sub
ror
jne
pushl
mov
mov
rorb
jnp
sti
mov
js
mov
ja
or
pop
cmp
repnz
ds
daa
xor
sub
call
lcall
pushl
cmp
adc
dec
push
push
inc
add
les
ja
lock
jmp
fidivs
mov
ret
std
xchg
mov
pop
mov
pushl
mov
cli
lahf
lahf
push
jp
sub
int3
jl
cmp
xor
ljmp
test
sub
inc
push
gs
adc
mov
aas
imul
pop
sar
call
lods
ljmp
lea
mov
sub
cltd
mov
jle
movl
aaa
std
cmp
mov
inc
data16
rorb
xor
testl
sbb
decl
fwait
mov
jge
lret
out
inc
aam
je
and
lods
pop
push
sbb
dec
adc
call
mov
fimuls
adcb
cmpsl
or
xor
cmc
dec
pushl
or
inc
gs
xor
fs
insb
aad
mov
loopne
sti
cmp
jle
clc
and
add
stc
lds
pushf
std
les
pushf
push
inc
push
or
jecxz
subl
loop
xchg
inc
fsub
mov
jg
mov
dec
cli
rorb
ss
cmc
pusha
test
adc
call
xchg
xor
mov
add
test
test
lea
xchg
sub
cmp
mov
stos
cwtl
imul
mov
jp
dec
jnp
mov
push
adcl
pop
mov
xor
mov
in
movsb
cmp
mov
jmp
in
in
xor
pop
or
out
stos
xchg
popa
add
xlat
call
loopne
dec
xchg
mov
xchg
xor
das
adc
adc
mov
in
fcos
mov
test
pop
outsb
cmp
mov
mov
pop
jg
xchg
daa
cmp
std
and
call
es
add
push
jmp
and
cld
jnp
out
pop
sbb
inc
pop
jnp
rol
incl
lods
sub
fucomp
cmpsb
push
inc
dec
xchg
popf
jno
hlt
xchg
loope
add
int
jle
jmp
push
loopne
iret
xchg
dec
push
dec
out
aad
inc
test
xor
mov
xor
cmc
push
xor
adc
and
xchg
fwait
mov
call
jo
int
mov
es
jnp
divb
sub
pop
js
in
dec
inc
inc
mov
mov
cmpsl
inc
ficomps
mov
lahf
jl
mov
push
jno
ret
xor
pushl
clc
jle
xchg
pop
push
arpl
imul
dec
loope
pushl
or
lea
sub
pop
jmp
push
pushl
pop
ret
arpl
sbb
mov
lcall
mov
xor
and
dec
mov
jp
mov
fsubl
and
lcall
cmp
mov
icebp
ret
fdivl
inc
out
xchg
dec
dec
mov
repz
std
pushl
mov
shlb
cwtl
daa
cmp
mov
jle
xor
cld
out
cmp
loopne
jo
fadds
adc
cli
sbb
adc
mov
jmp
jne
push
loopne
cmpsb
xor
mul
sar
inc
das
sar
push
xchg
or
xor
mov
pushw
stc
or
clc
mov
or
scas
test
repnz
lcall
lods
dec
loope
ss
mov
jmp
mov
dec
outsl
sub
movsb
rolb
lods
mov
jmp
cmp
out
xchg
jbe
mov
adc
lcall
lods
push
jbe
or
roll
adc
pop
out
lret
pop
sbb
fwait
dec
xor
pushf
fcoms
cltd
hlt
pop
cmp
lcall
jmp
inc
hlt
jecxz
mov
test
adc
cld
dec
and
inc
nop
int3
sbb
decl
lret
cmp
mov
push
or
xchg
push
popa
sbb
cmpsb
insb
push
dec
lcall
pushl
cmp
xchg
clc
lcall
enter
or
xor
pop
mov
inc
xor
jge
call
jmp
in
lcall
jle
inc
shrb
sbb
mov
lcall
jns
je
outsb
adc
add
data16
pop
and
out
test
pusha
pop
xchg
shlb
xchg
dec
decl
movsl
add
clc
jl
fnsave
sarb
mov
ss
xor
incl
push
loope
loop
inc
shlb
sbb
mov
outsl
sahf
cmovo
inc
ds
xchg
or
jmp
scas
in
daa
pop
cmp
leave
dec
add
jb
xorl
popa
int3
ljmp
shrb
add
fistpll
flds
fdivs
into
loope
xchg
call
xor
or
mov
or
mov
subl
or
scas
js
test
mov
or
jg
test
or
adc
incl
cmpsb
outsb
pop
mov
out
mov
xchg
xchg
fwait
xchg
sbb
cld
pop
pop
and
stc
test
call
sub
mov
xchg
pop
test
mov
andb
mov
loop
decl
pusha
orl
movsb
stos
mov
int
mov
jmp
xchg
mov
push
push
decl
daa
mov
cmp
orb
push
or
cltd
cmp
lcall
xchg
xchg
jle
hlt
and
pop
sub
push
cld
push
mov
test
jne
jno
popa
sarb
and
mov
cmp
mov
mov
clc
test
clc
pop
push
popf
xchg
lahf
jecxz
incl
lahf
fisubrs
mulb
nop
mov
lods
inc
test
js
mov
hlt
fcomip
imulb
jp
xchg
jnp
push
push
push
jg
ficompl
rorb
clc
sbb
andb
out
mov
lret
icebp
iret
xor
insb
add
pop
cmc
jmp
mov
clc
int
fucomip
sbb
jle
out
pop
fdiv
sbb
outsl
movl
mov
mov
xor
and
mov
pop
or
pop
add
jae
push
cmpb
pop
fdivp
adc
xchg
ljmp
out
inc
mov
lea
pop
movsb
add
mov
jl
decl
push
xchg
dec
divl
add
pop
cltd
sti
push
pop
sub
mov
cli
rcll
mov
incl
sub
pop
push
push
fs
mov
cmp
push
adc
sub
jns
mov
popa
aam
or
call
mov
cltd
mov
aas
and
fwait
jbe
xchg
jmp
ja
mov
jecxz
call
pushf
cmp
push
lret
fbstp
mov
or
call
mov
pop
cmp
xchg
jl
push
xorl
dec
fs
push
and
lcall
pushf
test
out
lods
push
add
into
imul
incl
jbe
pop
in
dec
or
cmp
inc
mov
dec
sbb
push
jmp
ds
sti
add
cmp
or
mov
shlb
sbb
push
cltd
mov
and
sbb
out
sub
and
mov
ds
mov
out
push
or
xchg
test
sbb
mov
frstor
std
sbb
stc
inc
inc
test
std
mov
aas
loope
lds
call
adc
xchg
int
xchg
inc
mov
xchg
mov
bound
xchg
or
out
ss
push
lret
loope
scas
mov
push
adc
cmp
fidivrl
fisttpll
push
push
movsl
mov
enter
ljmp
mov
jmp
mov
ja
dec
cmp
adc
cmpsl
out
andl
cmpsb
dec
out
mov
ja
inc
dec
test
xor
sub
repz
jnp,pt
jne
adc
scas
mov
ja
push
mov
or
xchg
dec
and
les
pop
ds
cmp
incl
out
mov
sub
jecxz
adc
jmp
mov
scas
les
xor
loop
test
xor
sbb
cld
decl
lock
dec
lahf
dec
into
or
out
dec
dec
bound
jp
pop
jp
incl
fidivrl
push
adc
cltd
push
out
xor
into
fldl
rcrb
pushl
orb
nopl
mov
les
out
xor
sahf
and
call
push
xor
xchg
jb
adc
push
xchg
push
pop
sahf
inc
rclb
push
sti
outsb
loope
or
or
jp
or
jge
test
jnp
mov
jmp
cmp
das
xchg
test
jg
imul
sbb
jo
fdivrs
fisttpll
jg
jmp
push
xchg
mov
lods
and
push
into
xchg
fsubrl
jb
iret
adc
popf
inc
push
mov
sbb
inc
cmp
sbb
enter
addw
pop
pop
sahf
aaa
pop
mov
cmc
pushl
pop
lretw
dec
cmp
daa
jecxz
xorb
dec
fnstsw
in
cmpl
sbb
in
rolb
imul
sarb
je
jbe
xor
fsubrs
xorl
call
mov
mov
push
aad
pop
pop
sbb
inc
fsub
pop
xchg
in
and
cmp
adc
movsl
imul
mov
dec
or
dec
std
push
dec
js
scas
add
into
pop
in
in
ljmp
mov
aad
sbb
sbb
push
sbb
xor
dec
mov
out
in
lcall
adc
cli
test
in
lods
packssdw
loop,pt
fisttps
or
xor
mov
sahf
ja
call
hlt
sbb
dec
or
adc
dec
push
mov
sbb
stmxcsr
decl
jecxz
cwtl
dec
dec
pop
xlat
dec
sub
sbb
lahf
scas
nop
adc
inc
pop
in
xchg
cli
cmpl
xchg
pushf
adc
outsb
es
mov
popf
cli
and
sub
in
sahf
fnstcw
and
call
pop
mov
jb
fwait
cmpsl
mov
or
fs
cmp
push
aad
out
mov
push
mov
lret
int
inc
xchg
mov
push
iret
or
cli
cmp
fidivl
mov
inc
mov
test
pop
loopne
lods
lcall
loope
pop
fildl
jmp
into
mov
sbb
daa
sub
sti
sub
inc
call
or
and
inc
imul
dec
add
mov
xchg
cmp
js
dec
jmp
rcll
sub
inc
add
cld
in
insl
xchg
inc
xchg
call
repnz
ret
mov
in
enter
nopl
ficompl
pop
push
xlat
push
lcall
inc
dec
adc
cmc
loope
pop
les
push
cmc
add
cmp
xchg
decl
into
in
lods
cmpsb
in
fidivl
inc
ret
jge
int
imul
and
mov
sbb
pop
xor
loopne
or
pop
clc
movsl
xchg
mov
enter
inc
les
push
sbb
bound
arpl
inc
mov
fildl
mov
fisubrs
ret
int3
jecxz
call
xor
popl
lods
jmp
sub
popa
repnz
cmp
lcall
decl
dec
xlat
scas
int3
cltd
das
sbb
insb
dec
std
add
fnstenv
aam
scas
sub
inc
gs
inc
int3
or
ds
mov
mov
addl
lcall
es
dec
jge
test
mov
addb
test
ss
mov
sar
ljmp
iret
fs
cs
jle
cli
lea
insl
add
inc
xchg
jg
jg
cmp
pushf
rcrb
push
and
fs
dec
in
pop
mov
and
pop
jge
jg
call
push
jg
sub
pop
push
xchg
mov
push
gs
add
ljmp
mov
inc
xor
int3
fmul
jmp
popl
jp
jmp
cmpsl
mov
pop
daa
pop
push
jne
mov
mov
flds
jl
inc
lods
mov
jb
pushl
inc
and
testb
mov
aam
lds
mov
jg
or
cmp
ret
out
pop
jmp
shll
popf
pop
stc
mov
shll
pop
pop
aaa
lret
cmp
test
push
xchg
mov
ret
out
inc
fcomps
insb
mov
sbb
je
mov
mov
addr16
enter
call
hlt
mov
hlt
mov
add
mov
movsl
clc
cmp
inc
popa
fwait
movsl
pushl
ljmp
shl
lds
sub
pop
gs
arpl
in
jp
mov
add
sahf
and
bound
fcomip
jg
jno
lahf
adc
adc
adc
jecxz
stos
out
call
xor
sbb
movsl
inc
lock
pop
xor
adc
fcomps
ljmp
jmp
and
mov
xlat
add
lock
leave
dec
or
lods
push
cmp
decl
test
ret
pop
mov
xor
mov
call
adc
je
mov
push
or
sbb
inc
addb
aad
hlt
xchg
adc
int3
std
mov
or
sti
call
iret
icebp
sub
mov
xchg
pop
inc
inc
jg
ljmp
push
scas
es
test
and
jg
ljmp
lret
jge
add
sbbb
sbb
sub
shll
fidivs
ficomps
xchg
jg
pushl
addr16
mov
and
ret
mov
sbb
dec
imul
cmp
outsb
sbb
jo
std
ljmp
add
adc
push
flds
pushf
and
enter
rep
push
subb
in
fdivs
xchg
js
xchg
cmc
mov
push
jmp
push
cmp
and
aaa
or
sbb
mov
push
sub
add
test
ret
jmp
jns
xor
movsb
sub
aas
ljmp
jl
push
mov
jmp
dec
cmpsl
or
mov
decl
sbbb
int
out
hlt
int
std
cmpsl
or
fsubr
daa
fwait
sbb
std
ljmp
iret
adc
mov
cwtl
ja
mov
mov
adc
add
out
lcall
xorl
sbb
sbb
pop
subl
push
rcrb
clc
call
popf
lret
cmp
and
fwait
data16
push
mov
mov
inc
jo
cmp
pop
cli
adc
mov
pop
jl
dec
iret
jmp
ss
ljmp
sub
cld
mov
inc
test
cli
xchg
sbb
mov
inc
cmpsb
adc
pushl
adc
fstpt
cld
adc
mov
pusha
xor
incl
mov
push
movsb
xor
jb
test
add
out
dec
mov
call
mov
xor
into
xchg
mov
mov
out
and
dec
jp
xchg
jne
pop
or
mov
ss
stos
mov
sbb
inc
or
lret
or
movsl
ret
mov
cltd
push
push
push
incl
jecxz
or
test
dec
outsl
ret
xchg
mov
aaa
mov
xchg
sbb
fistpll
jno
xchg
mov
decl
xchg
stos
push
add
jg
xlat
icebp
pop
and
lock
scas
std
gs
loopne
fwait
and
jg
cwtl
or
lea
into
inc
mov
jnp
mov
dec
fs
push
lcall
call
repz
cli
out
test
or
ds
xchg
je
jno
sbb
shlb
add
shlb
in
int3
hlt
mov
pop
pop
imul
cld
decl
or
jle
mov
fidivs
lret
cli
fisttps
call
ja
fcomi
in
shrl
andl
fisubs
sbb
adc
cmp
ljmp
dec
mov
mov
es
bound
rcl
fwait
dec
jmp
data16
mov
jmp
xchg
mov
mov
jge
push
pushf
ljmp
insb
test
push
jmp
ds
xor
lock
mov
adc
sbb
jmp
sub
mov
mov
incl
int
mov
lods
cli
out
jne
mov
dec
and
sbb
loope
inc
cmp
int
decl
mov
scas
mov
cld
mov
in
jae
clc
jne
mov
add
addr16
cld
and
movsb
lds
xchg
movsb
dec
sbb
mov
gs
lret
or
jnp
lods
pop
icebp
and
lods
ficoml
les
lcall
lcall
jmp
pop
mov
fnstcw
xor
call
icebp
aaa
in
or
cmp
inc
xchg
jge
cwtl
mov
add
flds
sub
ja
pop
add
and
and
push
inc
mov
fstpl
decl
enter
jecxz
movsl
add
inc
sbb
and
and
lock
pushl
imul
das
mov
rcl
mov
ja
mov
dec
or
loopne
int
inc
jne
out
addr16
jnp
push
mov
or
sub
xor
hlt
xchg
mov
sub
fisubs
call
ljmp
fs
ss
jg
ja
mov
mov
outsl
outsb
dec
pop
scas
mov
mov
decl
cltd
pop
test
fwait
dec
push
scas
xlat
mov
jp
call
cli
fcomp
adc
inc
ja
cmp
sub
pop
lahf
jmp
xchg
inc
fmul
stos
dec
sbb
lods
outsl
mov
pop
aaa
sub
in
call
xchg
lods
movsb
mov
xor
push
xor
dec
xchg
dec
dec
mov
xchg
dec
jo
bound
jmp
int3
ja
faddl
mov
push
inc
xchg
jge
cltd
push
xor
arpl
ficoml
and
push
daa
repz
out
subl
cltd
xor
in
sub
mov
mov
sbb
mov
sbb
sbb
add
pop
out
sti
fcoms
out
jg
movsl
aaa
fsub
jg
mov
mov
dec
or
mov
push
lock
pop
mov
in
out
add
movsb
push
ficoml
cmp
xlat
scas
pop
ss
sti
mov
and
xchg
push
aad
in
fcoml
xor
pushf
repz
push
les
jns
jl
push
sub
jo
xchg
mov
cmp
js
pusha
push
inc
cltd
sub
mov
push
and
push
imul
fcomip
jge
mov
sbb
xor
jae
or
inc
inc
dec
call
mov
mov
sbb
mov
into
ljmp
lcall
sbb
push
sahf
inc
dec
fmul
outsl
sub
xchg
ret
call
std
int3
sahf
pushf
mov
movsl
add
sbb
add
aad
adc
mov
mov
in
frstor
cmc
out
data16
insb
pop
fstp
jle
lret
or
fbstp
jns
xlat
mov
pop
xor
movb
sar
scas
adc
mov
dec
push
push
jle
rorb
lods
int3
lea
or
call
and
testb
pusha
rcrl
test
mov
xor
lret
scas
fsubp
inc
call
cmp
xor
xchg
icebp
inc
jl
push
pushf
sar
incl
push
gs
repnz
sub
jge
and
mov
std
and
sbb
decl
xor
inc
push
cmp
cmpsb
inc
stos
mov
adc
cmp
jg
out
sbb
jge
jp
scas
fadd
fdivl
xor
std
pop
call
jno
jnp
icebp
adc
into
and
fimuls
shrb
jp
push
cwtl
xlat
xchg
jge
mov
int
fadd
jl
add
lds
mov
jbe
adc
jnp
sarb
fs
in
push
sti
scas
push
push
adcb
je
fdivrl
out
cwtl
xor
data16
mov
push
fs
sub
mov
loopne
sub
dec
or
in
cmp
shlb
push
aas
out
or
jnp
mov
ret
insb
loopne
movl
leave
mov
lea
bound
jns
clc
cmp
int
dec
in
xor
leave
pop
ljmp
jmp
std
jmp
mov
cmp
pop
stc
mov
imul
out
lahf
inc
ljmp
jne
ja
notl
frstor
mov
jbe
std
inc
xchg
decl
cmp
mov
push
cmpsl
push
aas
inc
xchg
movsl
cmpsb
mov
bound
test
and
lcall
xor
mov
js
or
xor
mov
push
pop
jbe
lcall
mov
mov
pop
or
pop
cs
popa
and
mov
call
lahf
pop
mov
pop
movsl
imul
mov
repnz
ds
test
jecxz
jg
imul
xor
testl
mov
incl
popa
jp
or
pop
icebp
mov
subb
cmp
inc
orl
ss
daa
cmc
jg
jl
lcall
xchg
leave
stos
inc
stos
push
mov
lock
ror
pop
insb
dec
add
fcompl
or
cld
stc
push
scas
cld
cwtl
add
xor
fdivrl
mov
incb
roll
mov
push
mov
pop
stos
hlt
sub
cmpsl
ja
jne
dec
test
int3
adc
flds
pop
lods
jg
pusha
enter
dec
sti
jb
in
mov
pushl
call
pop
int3
stos
or
adc
rclb
fisubrs
nop
fwait
cmpsb
mov
pushf
mov
jle
mov
test
insb
ret
jb
push
jmp
xchg
cmp
xor
jbe
xor
jmp
sub
aad
fmulp
ret
push
loopne
outsl
add
adc
loopne
test
decl
jae
sahf
cli
aam
out
adc
les
mov
and
into
clc
mov
and
sbb
lcall
test
stos
aas
fisubrl
or
jnp
push
ljmp
add
ljmp
xchg
mov
mov
mov
push
mov
sbb
cs
rcrb
mov
jb
cmp
jnp
push
addr16
pop
cmp
subl
scas
enter
dec
sbb
repz
scas
mov
cmpsl
test
leave
loop
in
and
sub
and
daa
aam
inc
and
and
mov
ljmp
ljmp
in
nop
or
dec
mov
inc
test
xor
jmp
nop
cmp
jge
insb
pop
and
cmp
aaa
mov
pushf
mov
insb
jmp
xchg
push
pop
test
das
ds
outsl
cmp
enter
sub
cmp
add
incl
divl
cltd
mov
pop
imul
mov
dec
aam
mov
rcrl
jo
dec
mov
add
clc
jno
dec
cmp
xor
sbb
mov
test
nop
lods
in
das
aad
push
call
cltd
mov
pop
adc
jmp
xor
mov
mov
push
and
pop
cmp
test
icebp
jge
mov
mov
pop
movsb
add
and
incl
scas
sbb
push
popa
push
shrl
scas
sbb
es
ror
std
incl
test
outsl
adc
mov
or
fists
sbb
push
lods
iret
movsb
test
cmp
bound
repz
dec
lgs
pop
push
and
add
inc
xor
sti
leave
enter
flds
pushl
sbb
jmp
in
outsl
int3
arpl
adc
imulb
ljmp
ljmp
mov
test
adc
jmp
ljmp
rorb
cmp
outsb
jne
clc
inc
pop
bound
pop
sahf
ds
lret
xchg
and
bound
mov
mov
pop
scas
repnz
fcomip
cmp
add
es
ss
push
dec
out
jo
pop
cmp
test
enter
mov
roll
push
inc
in
xchg
or
outsb
stos
repz
ljmp
pop
ljmp
mov
pop
imul
xor
lock
jge
les
incl
ds
mov
in
xchg
test
bound
popf
stos
push
xor
pushf
pop
leave
lcall
or
sub
rclb
jmp
mov
out
je
lods
lcall
xor
outsl
call
sub
and
repz
and
xchg
add
sbbl
pop
jl
pop
mov
xor
fnstsw
dec
inc
push
dec
jbe
pop
fcompl
or
incl
daa
aad
cmp
andl
stc
mov
stos
lods
sarl
ljmp
lret
adc
rorb
mov
push
fcmovu
inc
xchg
dec
xchg
jmp
por
or
lret
outsb
xlat
roll
cmp
jns
adc
cbtw
test
push
sub
xchg
adc
jmp
xchg
sbb
movsl
sub
inc
int
cmpsb
stos
jb
rcrb
push
imul
fsubs
push
and
dec
cmpsb
sub
ljmp
pop
or
push
xor
mov
cs
cmp
push
xchg
pop
cmpsl
jo
sub
jne
sub
mov
ljmp
cmp
lcall
es
add
inc
rcrb
mov
sbb
ja
inc
adc
fbstp
mov
ja
arpl
in
ss
call
mov
mov
fdivr
and
bound
fs
aam
push
xchg
add
insl
sbb
adc
test
fadds
adc
jl
sub
mov
stos
cltd
or
adc
jg
ret
sbb
mov
roll
mov
cs
into
or
ljmp
add
jge
call
mov
loopne
cmp
dec
push
push
cmpsb
scas
fidivrl
decl
flds
xor
decl
push
inc
sub
out
repz
and
das
sar
or
addl
sub
in
jp
pushl
je
lret
out
adc
and
dec
es
fadds
mov
ret
xlat
dec
std
or
or
call
jle
imul
orb
outsl
push
cmp
stos
adc
scas
inc
call
dec
cmpsb
dec
jg
xchg
gs
lea
daa
ret
xchg
lret
call
push
in
out
jnp
push
cmpsl
push
add
dec
sub
cltd
pop
bnd
xor
ljmp
cmp
mov
add
sub
cmp
mov
mov
ljmp
sub
dec
xchg
mov
adc
add
dec
popf
add
ljmp
incl
lods
pop
push
xorb
jge
popa
mov
push
ret
jg
rclb
add
adc
add
jp
sub
vmovaps
sub
and
xchg
sti
aas
stc
mov
inc
js
hlt
inc
mov
in
adc
sub
es
out
mov
pushl
mov
shrl
popl
mov
fidivl
jl
test
jp
gs
test
pushl
mov
push
inc
clc
mov
mov
and
mov
xor
sti
movsb
incl
pop
popa
stc
jp
inc
sub
pushf
sub
mov
ljmp
cmp
xchg
inc
add
cmp
aam
ds
cmp
fdivs
push
iret
test
insb
jp
into
mov
aam
sub
jnp
aaa
insl
sub
out
sub
push
cld
das
clc
ljmp
out
xchg
sbb
int
push
in
scas
push
dec
loopne
adc
incl
push
nop
jb
mov
mov
popa
sub
movsl
icebp
and
xchg
outsb
xchg
sub
sub
jp
jo
fcmovb
mov
push
mov
aaa
pop
and
ljmp
sbb
mov
cmpsb
out
pushf
adc
outsl
mov
adc
lret
jmp
leave
rdpmc
cs
repz
jp
decl
push
decl
ficompl
dec
lods
mov
sub
aas
cmp
xor
rcl
or
mov
mov
xchg
loopne
cmpsl
xchg
dec
sti
mov
mov
pop
fcomip
ljmp
leave
mov
adc
testl
ror
mov
clc
push
push
cltd
pop
pop
cwtl
xchg
mov
cld
mov
xchg
aas
xchg
pop
inc
add
incl
mul
lret
nop
add
add
or
and
dec
or
scas
shlb
push
push
insb
push
inc
or
dec
add
pop
cmpsl
movsb
xor
jno
lret
sbb
and
add
shlb
rcrb
adc
je
aaa
and
cs
jo
imul
or
rcrb
ss
add
mov
adc
pop
inc
gs
sub
cwtl
or
or
add
std
data16
subb
xor
insl
mov
inc
and
dec
jo
daa
pop
cmp
mov
aas
and
dec
push
outsl
outsl
movsb
jo
sti
insb
push
push
outsb
popa
jo
push
or
push
jne
insl
xchg
test
sbb
xlat
push
and
and
aaa
fildl
pop
and
aaa
cmp
inc
imul
xchg
dec
xchg
movsl
dec
jne
js
arpl
xor
pop
inc
mov
mov
push
popa
je
sub
and
cmp
or
jns
push
imul
mov
inc
imul
cmp
dec
ljmp
dec
jecxz
and
shr
insl
and
dec
call
fimull
push
or
call
pop
xor
fwait
inc
jl
loopne
sub
sub
cmp
rorb
insb
stos
sub
push
mov
cwtl
sub
fmuls
pop
push
outsb
flds
sub
cmp
dec
inc
sbb
mov
adc
out
or
mov
cs
sbb
sbb
fisubs
mov
sbbb
push
pop
lock
mov
ds
insb
jne
addl
data16
in
inc
xchg
mov
mov
mov
push
inc
sbb
dec
push
jnp
jo
inc
push
fildl
in
filds
pop
fadds
mov
mov
and
push
jne
addr16
ret
subl
jb
cld
push
add
jns
outsb
xor
inc
jae
adc
cmp
sub
push
push
cmp
hlt
fs
inc
jecxz
or
nop
add
dec
cmp
ret
push
or
stos
pop
adc
popa
pop
subb
and
inc
or
jo
packuswb
xchg
imul
mov
or
inc
dec
sbb
pusha
pop
dec
adc
ret
dec
pop
dec
leave
push
std
push
arpl
fistpll
inc
stos
mov
push
xchg
test
xchg
outsb
orl
popa
shlb
sbb
mov
push
mov
ds
pop
and
popw
push
mov
mov
push
mov
inc
xchg
popa
orl
and
das
ljmp
jae
pushf
inc
or
mov
stos
pop
dec
inc
dec
or
inc
jb
mov
jae
mov
jb
stos
or
mov
fadd
arpl
lods
xor
push
push
cmpsl
push
je
ja
mov
push
xchg
jg
pop
mov
ja
sub
cmp
into
mov
inc
popa
es
jp
lods
ret
push
rcll
xor
push
jg
sbb
cmpsb
nop
cmp
mov
shlb
or
fcmovnb
movnti
outsl
jns
int
adc
add
push
fs
xor
jmp
bound
and
pop
lods
lods
jmp
aad
jns
adc
inc
inc
ss
mov
pop
mov
push
inc
sbb
sub
sub
fiadds
sbb
insl
adc
or
push
es
mov
sbb
mov
ljmp
loope
xchg
adc
stos
loope
xor
cmpsl
adc
add
cmp
add
out
ret
pop
aaa
cmp
inc
inc
test
xlat
test
and
mov
cmp
stc
pushf
push
jne
inc
fadds
adc
stos
inc
or
pusha
andb
xchg
das
mov
movsb
inc
add
mov
add
cmp
arpl
xchg
jnp
inc
xchg
pusha
imul
xor
movsl
or
or
inc
test
inc
scas
cmp
addps
outsb
push
outsl
add
inc
cmp
test
inc
arpl
jne
mov
inc
sub
sarb
test
les
dec
gs
jne
inc
cmpsb
jnp
lods
push
ror
adc
xchg
arpl
std
movsb
adcb
jp
ds
pop
mov
inc
jge
out
xchg
adc
sub
sbb
inc
sbb
pop
jmp
dec
xchg
fstps
repnz
neg
lcall
and
int3
pop
mov
in
pop
popa
sbb
fildl
sub
in
push
shlb
pop
adc
daa
int3
outsb
lds
pop
mov
xlat
sbb
je
push
loopne
mov
jbe
jb
pop
test
aam
sbb
nop
inc
cs
jo
bound
inc
inc
gs
arpl
fistpl
popf
inc
imul
mov
mov
mov
mov
js
insb
push
out
outsb
jae
push
inc
insb
jle
jge
pop
inc
subb
nop
lcall
jl
xor
aad
adc
pop
sbb
jne
insl
add
js
inc
mov
jo
push
push
and
orb
sbb
int3
sbb
jnp
push
in
mov
out
pushf
jge
xchg
movsb
xor
push
pop
js
pop
lret
xor
shlb
loop
mov
inc
push
sub
mov
pop
pop
xor
ja
pop
cmp
pop
xchg
fdivrs
je
insl
dec
outsb
dec
loope
andb
mov
cmp
jnp
sar
pop
add
cmpsb
imul
add
mov
xchg
cmpsb
imul
sub
lods
imul
cmpsb
xor
add
pop
adc
repz
mov
inc
jb
rolb
adc
xor
and
jge
sub
bound
cwtl
push
inc
inc
out
inc
push
std
or
jb
push
jb
inc
jae
push
or
ror
jo
aam
js
add
insb
push
ss
repz
jo
sbb
jo
mov
and
xchg
test
aaa
push
pop
push
bound
icebp
xchg
inc
cmc
xchg
mov
push
les
flds
sbb
xor
sbbb
cltd
add
push
mov
push
mov
shl
mulb
notl
pop
nop
mov
fwait
jno
inc
mov
aad
psubusw
cmp
push
inc
fildll
xchg
push
rolb
imul
movsl
xor
or
add
sub
mov
mov
test
or
out
and
in
mov
push
std
rorb
insb
mov
gs
in
inc
subl
shl
lods
push
repz
jge
adc
aad
enter
mov
andb
ret
or
paddsw
pushf
insb
adc
sub
pop
shlb
xchg
ja
push
inc
add
sub
sbb
cmp
sahf
out
push
push
adc
lret
push
sub
subl
xor
pop
ret
sbb
mov
dec
insl
fs
mov
xchg
test
mov
jg
push
push
inc
es
or
push
outsl
mov
orb
inc
lods
fisubl
push
lds
mov
sbb
xchg
inc
mov
push
in
test
xchg
cmp
mov
outsb
shll
fs
mov
jbe
pop
cwtl
push
sub
dec
icebp
icebp
test
lods
xchg
jg
je
int3
pop
outsb
cmp
data16
sbb
addr16
sub
int
test
repz
xor
fcomps
or
aad
lods
shrd
loopne
shl
mov
call
cmp
jecxz
mov
ja
push
popa
xor
or
lods
pop
fildl
enter
xor
js
sbb
inc
inc
push
inc
push
jns
mov
jnp
ljmp
out
adc
ljmp
lods
push
sarb
pop
xchg
dec
push
dec
jnp
aad
jae
inc
mov
push
fsub
or
jl
mov
pop
lcall
jmp
lret
push
jmp
xchg
xchg
fwait
sbb
shlb
pop
sub
adc
or
jno
lock
inc
dec
xor
andl
add
ljmp
adc
inc
pop
xor
cmp
fwait
out
test
cmp
cmp
js
jnp
pop
adcb
adc
out
dec
mov
fdivl
add
mov
dec
xor
rorb
pop
jae
add
push
sahf
rcl
bswap
add
aad
bound
add
jb,pn
popa
adc
pop
bound
add
sub
shlb
xor
push
roll
sub
rcr
fs
push
rcrb
mov
ds
jo
mov
or
lock
int3
icebp
jg
xor
add
mov
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
and
inc
add
insb
inc
add
add
