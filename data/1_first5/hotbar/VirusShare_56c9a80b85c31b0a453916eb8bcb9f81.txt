fcomp
decl
andb
lea
push
mov
or
adc
ljmp
push
mov
push
or
call
test
jne
pop
pop
ret
push
push
aas
int
rcrl
mov
test
je
cmp
lods
add
cmp
jmp
pcmpeqd
cmp
jae
sub
movzwl
lea
jne
push
jb
pop
pop
xor
std
fwait
insb
and
neg
sbb
and
pop
xchg
add
inc
fdivr
fnstcw
push
push
test
rcr
test
jne
pop
ret
push
cmp
or
pop
sbb
add
les
and
insl
shr
adc
xor
push
mov
inc
add
lret
or
inc
sub
lahf
out
aas
push
test
jne
mov
scas
inc
push
push
push
in
xchg
int
push
mov
xor
push
lods
std
dec
mov
pop
je
xchg
inc
mov
pop
lock
and
pop
push
pop
ret
pop
adc
sbb
dec
shrl
incl
or
lock
dec
test
jg
cmp
adc
incb
testl
add
ljmp
mov
in
fstpl
mov
in
adc
push
mov
les
cmpl
or
push
faddl
ds
push
mov
adc
mov
mov
pushf
push
push
aaa
stc
orl
ficoms
jno
and
push
add
insl
inc
mov
icebp
sbb
add
push
lock
dec
add
mov
sbb
sub
add
push
mov
in
add
or
icebp
rcrb
and
xor
fcomip
fbstp
add
inc
hlt
push
push
adc
push
push
xchg
sub
sbb
push
mov
push
adc
inc
ja
push
leave
or
leave
fldl
leave
add
add
add
adc
or
and
inc
pop
repnz
shlb
fs
or
pop
or
fldt
int3
mov
add
mov
and
in
adc
outsl
cs
imul
sub
push
xchg
ds
pushf
dec
add
ss
iret
inc
test
push
fsubrp
or
cmpsb
xor
sub
sete
into
lds
insb
mov
je
in
rcl
fadds
lcall
push
dec
cmp
lods
mov
push
push
push
and
push
inc
and
push
sbb
inc
add
or
push
sub
cltd
sbb
add
popa
sti
xor
int3
xor
ja
loopne
and
inc
les
jb
push
push
dec
push
mov
lea
cli
fisubrs
push
sbb
mov
test
push
jns
dec
xor
les
xchg
shlb
in
insb
and
and
xor
divb
sub
sub
mov
in
and
mov
xchg
dec
pop
inc
scas
mov
cmp
ss
adc
pop
xchg
mov
pop
ret
xor
mov
repz
push
dec
dec
push
inc
sbbl
insb
sbb
stc
pop
stc
jo
hlt
pop
cmp
jl
in
pop
sbb
adc
xor
jg
mov
in
push
mov
mov
fwait
rcrb
or
repnz
sub
add
cmp
push
or
sub
mov
rcrl
mov
into
sub
imull
or
cmp
cmp
or
inc
mov
mov
sbb
ljmp
out
adc
cmp
dec
or
adc
push
jne
mov
mov
subl
mov
pushf
out
mov
rorb
test
inc
add
inc
add
inc
add
or
loopne
fdivrs
jmp
adc
sbb
add
inc
push
add
inc
push
jecxz
add
adc
and
dec
ds
xor
sub
add
and
shlb
sub
add
pop
adc
pop
mov
js
push
add
pop
xacquire
je
or
filds
jnp
inc
repnz
mov
dec
inc
jnp
aam
std
mov
inc
incl
add
sub
testl
mov
xlat
xchg
pusha
pop
xor
push
dec
jbe,pt
pop
imul
mov
mov
or
loopne
shll
sbb
xchg
xor
je
dec
or
mov
jg
or
push
stos
add
push
lea
out
and
push
stc
mov
mov
pop
pop
pop
ja
ds
push
ja
xor
pop
pushf
hlt
dec
pop
pushf
mov
jae
scas
enter
sbb
int3
mov
sbb
roll
lahf
or
mov
mov
sub
sub
aad
or
mov
pusha
cmp
xchg
bndldx
out
popf
sbb
insl
test
adc
jns
lea
push
ds
je
adc
and
jecxz
in
cmp
push
push
push
xchg
cmp
inc
pushf
xchg
in
and
xchg
ficompl
je
push
pusha
sub
fyl2x
jbe
sete
test
test
fs
push
sbb
sub
and
inc
add
dec
subb
je
push
out
scas
pop
aad
out
adc
pop
subb
xor
in
cmp
sbb
push
cmp
movsb
adc
ds
jmp
pusha
fnsave
es
inc
sub
xor
in
jb
add
and
jb
add
sbb
inc
jb
jnp
jmp
jnp
and
das
ds
in
xor
push
enter
push
pop
jno
push
mov
and
punpckhbw
mov
leave
push
add
pop
adc
jo
add
inc
aam
mov
cmp
add
fimuls
stos
jo
jb
sbb
sbb
dec
outsb
sbb
push
mov
cmp
loopne
fcoms
mov
or
mov
in
sbb
std
scas
add
addl
fcoms
mov
add
adc
outsb
or
push
ret
mov
js
ja
xor
addl
fnstsw
sbb
mov
in
pop
cmp
sbb
fnstsw
cmp
incl
rorb
xor
cmp
out
subl
int3
push
push
call
fisttpll
xor
mov
movb
lods
mov
cwtl
push
push
pop
idivl
pop
nop
xor
mov
inc
push
push
add
mov
je
fnsave
pusha
mov
shrb
adc
imul
mov
cmp
mov
jnp
mov
push
cmp
in
popf
cmp
repnz
mov
test
fs
stos
or
syscall
movhps
mov
cli
lea
xor
cld
dec
mov
push
es
mov
lcall
jns
add
test
xchg
or
jle
adc
dec
adc
add
and
adc
adc
call
cmp
dec
stos
xchg
frndint
rolb
mov
arpl
add
pop
adc
pop
inc
aaa
ljmp
clc
push
cltd
sti
add
cmp
adc
dec
pop
scas
das
add
push
adc
fnstcw
das
mov
cmp
sub
mov
xor
jl
lahf
mov
outsl
jmp
inc
mov
cmpsl
sbb
mov
push
repnz
sbb
je
shrl
add
mov
arpl
dec
mov
int3
sbb
orb
pop
mov
dec
mov
or
jae
loopne
ss
es
and
mov
dec
mov
in
jg
bound
mov
jmp
cmc
lea
stos
inc
add
mov
cmp
and
add
mov
mov
jge,pn
push
push
aad
or
clc
scas
inc
idivb
cmp
jb
inc
mov
sti
test
enter
and
insb
xor
cmp
sub
inc
mov
cmp
pop
dec
xchg
add
xor
aas
pop
lods
incb
adc
outsb
hlt
jne
mov
cmc
sbb
pop
cmp
call
sbb
lahf
sub
ret
push
sarl
lds
sub
cmp
je
xchg
add
cwtl
sbb
sub
pushf
adcl
push
pop
mov
clc
test
xchg
shll
and
add
or
pop
adc
scas
add
push
sti
int3
add
js
ds
mov
sub
addb
sub
or
push
jo
pmuludq
es
std
call
push
adc
dec
sar
fs
inc
cmp
jl
inc
ret
outsb
lea
or
push
and
dec
ss
js
jne
or
push
push
nop
ja
xor
test
xchg
push
loope
int
imul
rolb
outsb
nop
adc
xchg
shlb
pop
add
cmpsb
pushl
movzwl
push
lods
mov
mov
es
int
out
mov
jl
sbb
jmp
sbb
test
jne
sub
mov
xchg
cmp
loope
mov
hlt
sbb
or
inc
mov
fistl
or
jne
lods
push
mov
stos
mov
pop
xchg
ret
jo
add
add
fbld
pop
mov
add
xor
mov
cwtl
or
pusha
or
mov
cmp
jl
xchg
xor
push
outsb
fldl
mov
sub
mov
push
or
imul
not
xchg
adc
popa
sbb
pop
adc
add
push
popa
pop
mov
pop
inc
or
inc
xor
sbb
push
mov
dec
sub
pop
hlt
mov
sub
push
jge
mov
push
mov
push
in
mov
movsl
sub
adc
cmp
jle
jb
cmp
sub
cmp
pop
pop
test
sub
mov
lea
sub
or
jge
mov
jmp
add
jmp
add
call
mov
jg
push
push
add
push
push
daa
pusha
jl
int
xchg
pop
inc
add
test
outsb
adc
cmpsb
sbb
add
lret
pop
push
or
mov
ret
out
je
cmpl
mov
push
sub
add
leave
in
inc
hlt
cmc
push
stos
add
pop
or
sub
push
leave
push
mov
ficomps
add
test
cmp
cli
rorl
jge
add
fsubs
or
mull
cmp
cmc
dec
dec
pusha
lods
jp
loopne
sub
push
xchg
jb
hlt
xor
in
mov
or
ja
inc
jnp
cmp
ja
push
push
sbb
pop
in
jmp
arpl
or
clc
push
cmp
mov
mov
fwait
mov
sub
xor
fcmovb
lahf
ss
jecxz
add
pop
les
push
mov
popf
or
outsb
inc
movsb
pop
int3
adc
push
jbe
or
fstpt
xor
cmp
adc
jb
roll
ror
aas
sbb
out
movb
into
mov
xor
jl
xor
jae
hlt
mov
push
push
loope
jle
push
pop
pop
or
js,pt
dec
adc
rcr
test
mov
movsl
loope
mov
mov
mov
sarl
add
jb
sbb
es
or
push
mov
mov
xor
cmp
je
cmpl
mov
and
or
push
push
jne
push
push
iret
pop
cld
call
dec
test
push
notl
int
add
lock
pop
pop
pushf
pop
sub
scas
and
inc
inc
in
in
sarb
inc
clc
outsb
mov
xchg
and
ret
loope
pop
repnz
sub
fdivs
cmp
adc
xor
shlb
adc
sbbl
filds
js
add
mov
push
pusha
add
outsl
add
pop
sbb
sub
and
inc
mov
mov
jb
dec
fsubs
xchg
test
and
xor
mov
jmp
fsubr
jle
pop
mov
pop
push
adc
movsl
test
dec
mov
hlt
jmp
inc
add
outsl
adc
or
add
push
or
add
adc
sub
xchg
sub
fsub
pop
pop
mov
or
push
int3
lock
jo
test
jl
mov
cmp
and
add
rcrb
add
mov
and
push
xchg
sti
push
adc
rcl
cmp
stos
and
add
ret
pop
mov
pop
jae
lahf
add
lock
jge
sbb
cli
cmp
shlb
clc
cltd
add
fbld
mov
or
adc
cmp
add
shll
inc
push
push
or
or
sbb
pop
lahf
sub
jge
pushl
pop
push
xor
add
test
or
jmp
mov
push
add
adc
fdivl
jmp
xlat
call
pop
pop
cmpsl
mov
lods
fstpl
pop
mov
sbb
fildl
sub
test
lret
test
addps
pusha
cmpb
pop
insb
in
mov
xor
mov
fsts
dec
dec
mov
sub
and
mov
dec
cmp
push
sbb
push
fdivrs
pusha
cmpsb
adc
cmp
int3
imul
jl
cmp
adc
adc
cmp
jae
addl
pop
or
stc
lock
int3
in
fidivl
or
mov
sbb
mov
jns
imul
pop
lea
sbb
mov
or
andl
je
data16
lea
ret
jne
xor
out
sbb
lea
mov
inc
cmp
iret
push
inc
imul
data16
or
sbb
jecxz
out
call
and
adc
mov
decl
xor
pop
xorl
adc
shrl
mov
xor
add
outsl
jnp
mov
push
jl
add
or
lahf
adc
test
fstl
sbb
and
dec
xor
sbb
pop
sbb
sbb
sbb
roll
or
mov
cmp
or
inc
lods
jmp
xor
pop
test
aad
push
cli
mov
xchg
inc
cmp
movsl
flds
push
clc
and
je
js
mov
or
push
or
jne
fisubl
push
add
aam
in
aad
rcrb
ret
push
mov
mov
pop
testb
adc
out
dec
mov
cmp
in
cmpl
inc
pop
sbb
and
jle
lock
out
dec
or
addr16
jmp
ret
pop
add
jne
test
push
adc
sarb
rcr
jle
repz
jns
jbe
jecxz
mov
mov
cmpb
jl
shl
out
add
je
add
add
sub
jne
cmp
mov
jmp
loop
xchg
jne
mov
mov
jbe
mov
movb
jno
add
ret
jns
inc
inc
or
inc
adc
mov
daa
jl
jg
mov
sar
dec
mov
cmp
push
js
cmpsb
negb
and
and
adc
inc
jle
mov
mov
xchg
xchg
sbb
outsl
lock
push
mov
pop
movsb
clc
idivl
int3
jo
mov
pushl
leave
and
mov
sub
js
fsubrs
out
xlat
adc
shrb
push
cmpb
test
sahf
in
out
daa
adc
cltd
pop
nop
call
mov
in
mov
adc
ret
imul
xchg
mov
xorl
mov
rorb
push
mov
mov
sti
xor
fldz
movl
xchg
adc
mov
in
xor
mov
cmp
pop
cs
lods
aaa
sub
pop
jns
faddl
pop
push
adc
aad
clc
fwait
push
or
pop
sub
jns
pop
ret
cmp
rorl
cmp
or
sub
lcall
or
and
push
mov
sbb
in
fwait
xchg
popf
push
adc
and
popf
icebp
sahf
lahf
lret
ja
popf
in
or
clc
movb
rcrl
dec
loop
adc
lret
scas
add
movsb
cmp
popf
mov
es
mov
dec
push
dec
mov
pushf
aam
push
pop
push
lea
push
push
push
add
push
lea
push
xor
dec
cmp
nop
cmp
shll
aam
and
jb
or
popf
pop
cmpsl
je
nop
mov
sbbl
clc
adc
add
sub
aad
stos
jge
sbb
jle
add
jae
cmc
cmpsl
cli
cmpb
mov
nop
xchg
aad
add
xchg
cmp
jle
sbbb
cmpsl
insl
add
xor
cwtl
push
lock
sti
movl
fwait
test
push
and
mov
test
dec
xor
mov
stos
or
xor
das
sbb
dec
sub
roll
xchg
dec
and
ret
jle
or
cmp
mov
jne
dec
and
int
shrl
fadds
rorb
movsb
shl
mov
call
in
adc
out
jno
sbb
xchg
or
movsb
lods
push
mov
js
cmp
sbb
out
dec
and
and
repz
lock
mov
or
sbbl
add
jp
pop
test
pop
push
ljmp
insl
push
shr
enter
sub
pop
dec
in
mov
or
push
push
mov
popf
push
cmp
ret
je
addr16
cmp
rolb
add
mov
outsl
xchg
pushf
push
mov
test
sahf
mov
push
mov
xchg
pop
daa
add
mov
ud0
stc
cmpl
xor
adc
scas
jl
mov
and
test
fcmovnb
mov
hlt
inc
mov
sub
roll
push
lea
add
sub
pop
mov
mov
mov
insb
mov
dec
mov
push
push
xor
push
push
lea
sbbb
mov
inc
insb
sbb
rcrl
rcrl
lcall
xor
sub
and
jmp
mov
add
sahf
inc
add
mov
sub
ja
es
xor
xor
xchg
xor
push
inc
xlat
or
jecxz
xchg
int
push
or
push
adc
sahf
out
push
xor
cmp
mov
scas
out
or
jae
adc
push
mov
orl
icebp
sarl
neg
sbb
out
and
inc
cld
call
push
mov
movsl
push
call
jg
xlat
or
inc
scas
addb
adc
imul
or
jmp
sub
mov
cld
sub
sub
add
or
js
add
movzbl
outsb
or
cmpb
addl
lret
xor
xor
dec
inc
pushf
cmp
roll
clc
pusha
lock
xorb
inc
and
push
mov
pop
mov
mov
cwtl
add
jmp
out
icebp
mov
xor
push
push
push
and
jbe
push
inc
mov
aas
cs
jo
lret
push
mov
mov
add
inc
mov
xchg
pushf
mov
push
cmp
pop
xlat
loop
pop
daa
pusha
push
pop
call
cmp
imulb
cld
clc
add
je
or
jbe
add
call
ret
das
mov
call
lea
jmp
pop
push
lds
or
jo
in
mov
stos
or
xor
sbb
sarl
nop
xlat
mov
cmp
xchg
cmp
xor
mov
push
loop
pushf
inc
fsubl
dec
es
pop
push
ret
flds
mov
and
mov
xor
mov
mov
lods
jno
adc
add
push
xchg
stos
sbb
pop
xor
lret
sub
adcl
sahf
sub
nop
and
push
push
add
pop
sub
lea
push
jb
mov
sbb
pop
push
pop
push
fstpl
shufps
pop
push
push
push
aas
movsb
testb
loope
fdivl
testl
inc
and
and
sbb
or
and
adc
inc
sub
pushf
and
xchg
ficoms
add
dec
push
and
push
sbb
je
push
dec
imul
push
push
sub
jns
push
push
addb
inc
inc
mov
push
rclb
push
pusha
pop
xchg
adc
push
add
cmp
pop
add
iret
push
push
lea
mov
loope
push
fs
popa
xorb
insb
add
pop
ss
add
push
outsl
rcrb
push
jg
cmp
adc
addl
mov
pusha
push
push
test
pop
xchg
adcl
mov
mov
dec
addb
xor
sub
dec
add
xchg
icebp
and
xor
stos
sub
movb
sbb
inc
pop
push
push
push
and
out
data16
daa
jo
sbb
mov
js
je
push
jbe
ja
mov
sub
adc
popa
stos
aaa
faddl
sub
cmpsb
in
imul
inc
inc
fldl
fmull
and
sbb
add
je
add
rorl
inc
jl
cltd
push
jb
add
es
push
sub
fdivl
bound
imul
add
scas
add
xor
cmp
add
pop
jns
mov
ds
push
dec
gs
lock
ret
push
xlat
aaa
adc
ret
or
inc
int3
push
sbb
loop
and
out
xor
mov
push
push
pop
dec
push
add
gs
divl
push
mov
dec
daa
repnz
inc
js
pop
jl
or
inc
lock
leave
xor
adc
jo
adc
es
rsqrtps
insl
loope
add
pop
mov
and
or
adc
mov
adcb
push
andl
inc
xchg
test
ret
push
ficompl
movsb
xlat
push
cwtl
insl
mov
mov
push
loope
fdiv
sbb
cmp
fnstenv
sub
cld
add
jge
add
cmp
mov
cmp
jge
lods
lock
push
xor
das
enter
clc
sub
push
pop
adc
pushf
push
inc
test
fs
in
or
dec
push
mov
xchg
lea
sbb
xchg
mov
push
push
outsb
loope
loope
ret
xor
or
xor
push
mov
inc
xchg
pushf
shrb
dec
sbb
sub
push
push
push
faddp
jo
loope
push
lods
outsb
andb
cld
inc
sbb
in
data16
ja
ret
mov
push
sbb
adc
sbb
mov
clc
ret
pusha
add
lea
dec
ja
jge
adc
dec
xor
lods
pop
mov
cltd
add
enter
js
outsl
inc
cs
enter
loopne
jo
sub
or
and
cmp
cs
adc
cmp
and
jl
mov
cltd
and
sbb
ret
mov
push
cmp
pop
pop
adc
jl
push
pushf
xor
add
jecxz
sti
jnp
call
push
or
rorl
adc
out
add
std
inc
cli
push
mov
shr
add
mov
imul
push
lret
out
inc
test
jle
mov
out
outsl
and
enter
dec
repz
mov
mov
add
mov
lret
imul
lea
add
aas
adc
cmpl
xchg
ljmp
jl
mov
cmp
jne
xor
jmp
dec
dec
inc
sbb
xor
fisubrl
jne
mov
hlt
push
arpl
lea
or
mov
and
cmp
dec
inc
push
imul
sbb
lock
inc
lock
and
xchg
mov
rcll
sub
sub
inc
or
push
mov
fstpl
push
int3
je
test
fisubrl
sahf
hlt
sbb
or
dec
es
int3
jl
fstpl
mov
cltd
idivl
push
aaa
roll
lods
andb
cld
inc
cmp
mov
sbb
sahf
imul
scas
push
add
jl
insl
arpl
outsl
jo
loope
adc
jle
cmp
insl
xchg
cmp
mov
adc
sbb
xchg
sbb
and
test
inc
insb
add
popf
imul
imul
jno
jae
dec
sub
xlat
jp
jge
jmp
mov
pop
fninit
sub
sbb
jge
fadd
ljmp
in
fdivl
sub
xor
mov
ds
lock
shll
mov
test
sbb
mov
cmp
jns
in
xor
add
cmp
outsb
cmp
add
fbld
std
lcall
push
lock
adc
je
insb
xor
add
in
mov
inc
xchg
sahf
add
mov
enter
mov
xchg
add
mov
sbb
js
leave
jge
dec
mov
enter
shl
cmp
mov
aad
sbb
jp
jmp
mov
push
lock
inc
lods
mov
sbb
add
inc
sbb
xchg
xchg
xorb
xor
mov
iret
cmp
sub
rcll
cmp
pop
xchg
xor
daa
test
mov
xchg
xchg
adc
popa
shll
icebp
add
xor
xor
jg
and
nopl
push
pop
test
add
xchg
testl
or
inc
push
sahf
or
outsb
jno
or
xchg
outsl
popa
ret
sbb
incl
cmpsb
jmp
jecxz
jmp
loope
cmp
add
or
xchg
adc
push
enter
nop
les
mov
into
or
mov
clc
mov
push
aam
nop
sbb
or
outsl
cmp
pop
push
shlb
das
jbe
push
push
pop
subb
push
pop
daa
ret
push
push
and
xchg
fisttps
jg
push
add
push
subl
pop
xor
and
jle
fwait
imul
inc
fnstenv
push
mov
movl
sahf
adc
lock
and
repz
add
nop
add
shlb
sahf
sbb
inc
sbb
adc
inc
pop
ljmp
jmp
in
shrb
add
jg
lea
pop
add
and
mov
add
cmp
dec
mov
sbb
mov
sub
sbb
adc
cltd
inc
push
pop
test
and
add
pop
sub
or
jbe
cmp
fisttpll
rorb
dec
and
pop
xor
aad
and
cmp
setb
lcall
xlat
sub
cmp
setae
pushf
sub
add
add
addr16
ds
mov
int
jle
mov
or
inc
jno
pop
cmpsb
and
pushl
cld
add
sub
cmp
mov
and
fwait
aad
sub
inc
cmpsb
inc
cwtl
movmskps
add
insl
mov
push
movsl
and
pop
pop
pop
cmp
or
pop
je
sar
cmp
push
inc
cld
jecxz
test
cld
or
xor
push
push
loopne
cmc
stos
sbb
lods
push
fimull
push
sbb
sbb
pop
add
loop
mov
mov
std
sub
adc
daa
int
dec
push
push
inc
push
push
xadd
dec
push
inc
sub
xor
repnz
adc
xchg
sbb
dec
call
pop
dec
testl
push
add
in
mov
sub
movzbl
or
les
outsl
mov
inc
mov
xchg
aaa
insb
jns
inc
dec
add
add
adc
sub
add
adc
or
pop
adc
shll
xor
adc
pop
dec
and
daa
inc
and
xchg
mov
jbe
ret
aas
or
lret
fwait
push
push
rol
push
pop
movsl
cld
mov
add
add
cltd
in
push
jg
mov
aad
xchg
or
scas
cwtl
adc
insl
cwtl
jmp
xor
sbb
xor
mov
aaa
add
push
popf
outsl
repz
idivl
jo
push
rcll
scas
and
xchg
stos
jle
jo
cwtl
adc
and
or
stos
cmp
rolb
rolb
pop
shrb
push
les
mov
or
add
mov
xor
push
pop
mov
out
push
and
mov
push
stc
mov
push
pop
lea
xor
push
js
adc
push
mov
pusha
and
and
in
or
mov
repz
fsubrl
or
push
add
ds
sub
or
mov
cmp
push
push
adc
gs
roll
pop
pop
and
inc
or
jbe,pt
data16
cltd
sbb
ss
add
sub
mov
rorb
gs
and
pop
ret
push
sbbb
jp
in
sbb
jecxz
mov
lcall
sub
push
test
je
shll
popa
notb
ret
mov
clc
jg
jne
push
push
push
push
sub
aad
mov
jge
sbb
movsl
jmp
mov
inc
inc
out
mov
dec
ds
or
dec
and
lahf
jne
in
mov
xor
mov
scas
xchg
mov
push
cli
sbb
dec
aaa
dec
pushf
dec
cmp
inc
outsl
cwtl
xchg
dec
mov
pop
jne
scas
ds
fcmovnu
pop
jb
cmp
jne
or
int3
push
xchg
push
xor
jo
shl
sbb
and
aam
add
and
dec
or
cmp
cltd
xor
adc
or
add
aad
outsl
push
push
push
call
push
push
add
movsl
addr16
pop
mov
loop
pop
ret
xchg
lods
sbb
mov
push
jbe
adc
ljmp
jl
add
push
aad
pop
call
or
add
add
out
jmp
xor
pop
in
sub
flds
jns
aad
mov
adc
and
cmpb
sub
dec
insl
xlat
or
adc
shrb
aad
and
je
fisttpll
xor
add
and
das
aad
sub
fcompl
movsb
mov
mov
cs
pop
mov
cltd
lock
js
pop
and
mov
cs
call
mov
push
add
push
push
mov
and
int3
or
jl
andb
iret
add
add
imull
fdivl
jl
rorb
cmp
pop
movl
jne
dec
add
aaa
pop
push
lock
orb
sbb
sbb
lock
rorl
lds
outsb
sub
mov
add
cli
testl
mov
adc
adc
pop
ror
pop
push
mov
fs
enter
or
cli
pop
rorb
push
and
shlb
nop
and
push
or
mov
aaa
dec
adc
cmpl
dec
push
jl
sub
mov
dec
aam
jae
scas
repnz
sbb
mov
stos
sbb
push
lcall
mov
sbb
cmp
sbb
jo
cmpsl
ss
cli
push
imul
sub
add
sub
inc
mov
mov
fmul
pop
adc
popf
cmp
mov
xor
sbb
imul
jo
inc
movsl
add
mov
adc
pop
fnstcw
push
cmp
aad
aad
dec
pop
roll
fwait
addl
clc
dec
adc
xchg
xchg
pop
cmc
lahf
add
jl
lock
jle
push
fistps
xor
push
rorb
movl
push
ljmp
int
ret
imul
inc
stc
push
cmp
xchg
and
pop
xchg
dec
push
mov
pop
push
outsb
jge
and
mov
push
xchg
mov
lcall
push
sbbl
stc
cmp
add
out
cmp
or
inc
mov
dec
jne
or
inc
and
fsubs
jb
test
jo
sti
push
mov
and
lret
lods
xchg
sbb
cwtl
xchg
push
sbb
mov
clc
sbb
cld
cmp
sub
or
ret
cmp
fwait
sbb
xchg
outsb
ret
or
imul
mov
mov
je
test
cmp
sbb
push
adcb
mov
sub
adc
push
sub
xor
loopew
mov
push
jge
jmp
pop
xchg
sbb
pop
push
pop
aad
or
and
pop
cmpb
sbb
fiadds
cmp
xor
ret
scas
push
cs
cmpsl
das
cld
enter
mov
add
mov
add
push
or
decb
add
pop
mov
sbb
fmull
sti
mov
adc
je
les
sub
loope
jb
sbb
sub
xor
in
jb
inc
adc
out
dec
pop
jne
and
add
in
repnz
movsl
shlb
mov
enter
nopl
sub
lcall
pushf
imul
stos
push
and
and
adc
add
push
enter
and
fcmovb
imul
push
sti
sub
inc
and
add
aas
rorb
cmp
std
sbb
push
loope
jg
es
loopne
les
and
push
mov
dec
push
insb
sbb
push
adc
add
xchg
mov
rcrb
int
movl
lods
mov
scas
pop
or
sub
mov
mov
push
inc
or
add
cmpsl
subl
xor
inc
popf
sar
xor
ror
aam
test
xchg
add
jl
pop
inc
cwtl
push
adc
stos
sbb
adc
out
sub
and
add
adc
push
test
and
sbb
aad
adc
mov
rcrb
shrb
push
pop
pop
mov
and
sub
sbb
js
cmp
aaa
mov
xchg
inc
cmpsb
in
push
pop
movsl
and
xor
add
sbb
and
sbb
stc
stc
add
sahf
xor
push
das
add
in
das
dec
leave
adcb
and
lds
mov
pop
daa
push
mov
inc
das
dec
xor
inc
cmp
or
and
sbb
cmp
or
je
in
adc
add
jl
push
jp
inc
hlt
and
xor
in
mov
push
mov
xor
inc
dec
add
add
xchg
inc
ds
mov
hlt
rcrb
shrb
lea
pop
add
and
xchg
test
add
enter
leave
add
or
adc
or
insl
pop
jge
xchg
mov
and
scas
or
pop
add
movl
in
push
and
xor
cmp
and
adc
pop
adc
cmp
aas
lcall
lods
xchg
je
push
mov
xchg
sbb
orb
sti
pop
inc
push
mov
popa
jo
xor
out
sub
sub
or
mov
bound
mov
jle
inc
xor
mov
ja
cmp
cmp
cli
pushf
inc
fistpll
into
mov
rclb
pop
push
pop
xchg
sbb
dec
fsub
aam
movsb
ja
mov
jmp
lret
in
push
cmp
cli
and
lahf
and
sbb
xchg
push
repz
lds
pusha
add
mov
mov
jmp
xor
push
push
mov
mov
xor
xchg
push
lods
outsl
add
xor
enter
mov
pop
push
out
mov
sub
and
jecxz
or
or
pusha
nop
sub
je
adc
sbb
inc
add
or
push
out
cld
movsl
xorl
pusha
cmpl
lret
add
cltd
cli
or
sbb
sbb
dec
clc
jl
pusha
cmpsb
sub
jmp
cmp
cmpsb
les
xchg
jle
pop
loope
loop
enter
push
xchg
push
push
fwait
xchg
stos
pop
lahf
lods
lea
push
mov
pop
adc
lds
aam
dec
inc
mov
gs
push
repnz
repnz
sbb
sahf
nop
mov
push
mov
lea
pop
push
add
sub
sbb
fldcw
std
add
js
jle
fwait
clc
loope
mov
and
add
mov
and
sub
sahf
ja
rorb
and
push
add
sub
iret
sahf
mov
pop
jp
mov
imul
orl
addr16
push
pop
pushl
in
push
mov
test
je
adc
and
or
ficomps
ret
gs
dec
inc
mov
jg
or
lea
push
sbb
or
ret
pop
icebp
int3
jo
nop
ja
out
or
cmp
bound
js
lret
push
fs
outsb
inc
mov
or
cmpl
lods
dec
sbb
push
mov
test
sahf
push
mov
les
addb
pop
movsl
and
push
sbb
xlat
add
jp
sub
cld
iret
xchg
orl
or
inc
je
mov
jle
jns
sti
push
push
push
push
cltd
pop
inc
push
pop
sub
pop
xor
and
xor
pop
dec
mov
xchg
shlb
test
dec
dec
add
dec
jae
adc
sub
pop
cs
out
das
test
out
adc
dec
jae
adc
pusha
and
fbld
dec
add
or
cmp
arpl
and
test
or
push
xchg
out
jo
push
inc
lcall
or
psllq
push
lsl
and
nop
mov
loopne
test
adc
ds
fstpt
mov
mov
jecxz
pusha
daa
push
sbbl
je
scas
pusha
inc
js
push
add
lret
test
xchg
sete
jle
and
ret
pop
push
push
sbbb
nop
test
xor
ret
cmp
test
nop
sbb
cmp
adc
xor
fs
sahf
xchg
les
cltd
addl
add
popa
cmp
sbbl
and
xor
push
push
mov
inc
sbb
mov
or
inc
ja
in
mov
and
pushf
mov
insb
dec
and
lods
and
fsub
adc
sbb
sbb
and
iret
into
lea
les
cmp
mov
dec
fcomps
cmp
enter
jl
cmp
inc
repnz
sbb
cwtl
jp
lds
faddl
rcl
jno
int
jmp
fiadds
inc
ds
adc
and
nop
loopne
cltd
inc
hlt
mov
push
jne
or
lods
cmp
sbb
add
inc
ja
push
outsl
testl
and
idivl
push
or
cwtl
shlb
mov
pop
add
call
jne
push
enter
mov
add
sub
add
dec
sub
jle
cmp
lods
or
or
jg
mov
ds
pop
pop
int
outsb
add
push
movsb
sbb
xor
push
push
pop
mov
jmp
cwtl
xchg
cld
out
adc
test
jnp
adc
sbb
shrl
adc
mov
hlt
shlb
pusha
lods
mov
sub
sbbb
stc
test
les
push
sub
mov
imul
pusha
push
sub
inc
loopne
mov
cmpsb
push
pop
loop
outsb
adc
and
mov
cs
repnz
add
sub
loope
cwtl
xchg
pop
dec
jp
cltd
push
in
cmp
and
push
or
push
adc
xor
mov
mov
jne
pop
xchg
jns
test
push
icebp
and
loopne
insl
push
lods
jle
dec
clc
aas
sub
xor
or
jge
mov
negl
xchg
mov
add
clc
ficompl
mov
xlat
mov
jle
jg
mov
movsb
jp
lcall
xchg
push
xorb
xchg
pop
std
out
les
cli
and
jne
or
or
dec
and
xchg
xchg
xchg
cmp
out
fildl
cmpsl
jmp
int3
icebp
sbb
xor
push
dec
cmp
outsl
cmp
push
push
out
xchg
inc
ret
bound
sub
cmp
jge
push
dec
je
std
mov
pop
adc
jle
jb
inc
mov
nop
in
out
cmp
lea
fsubrl
sub
jle
lock
sub
mov
dec
in
cs
adc
cmp
sahf
mov
daa
dec
or
mov
mov
addr16
test
add
add
xacquire
and
mov
sbb
shlb
inc
sub
add
add
push
repnz
add
inc
fwait
mov
or
cmp
lods
lds
cmp
leave
dec
push
cmpsl
cmp
mov
add
push
ss
cmp
and
inc
fadds
shlb
add
jl
lcall
stos
jge
lcall
inc
sbb
test
or
pusha
std
or
dec
loopne
add
call
repnz
lods
out
and
loop
sbb
jnp
scas
xor
sbb
inc
jbe
je
push
inc
mov
cmp
addr16
shll
mov
jo,pt
cli
mov
xchg
ret
push
das
jecxz,pn
rol
sbb
fistpll
xor
incb
jle
mov
mov
sbb
push
andl
push
sbb
add
add
lea
sar
leave
inc
arpl
in
add
push
mov
aad
pop
mov
das
mov
cmp
jl
mov
push
lahf
addb
push
lock
je
jp
dec
xor
xchg
mov
pop
cwtl
sbb
xchg
push
and
mov
addb
jp
jle
inc
cmpb
add
int3
cld
sbb
lcall
lea
sub
outsl
into
dec
fs
pop
jb
sbb
loopne
dec
ss
add
sbb
mov
xor
lret
dec
mov
cs
cmp
mov
sub
scas
adc
add
negb
sbb
jle
js
mov
push
pop
add
test
mov
inc
add
scas
or
and
js
xor
xchg
je
test
cld
mov
cmp
push
pusha
cmp
es
cmp
loopne
fisttpl
jo
test
aad
mov
jmp
pop
leave
pop
and
dec
inc
stos
rcrb
leave
divl
es
lea
mov
aam
movsb
or
push
or
push
sub
in
ret
test
pop
stos
fcomps
add
js
cmp
loopne
mov
mov
cmp
ljmp
sbb
orl
cmp
data16
jo
ljmp
cmc
fiadds
jg
aas
push
push
mov
pusha
pop
or
mov
pop
push
test
xor
sbb
insl
xor
push
jg
insl
mov
or
or
sbb
sahf
aam
pop
add
xchg
testl
dec
push
sahf
lea
push
xor
push
sub
dec
jmp
dec
jb
lods
mov
add
cmpb
dec
sahf
add
lods
xor
xor
ret
fwait
inc
inc
adc
xchg
into
and
and
movsb
aad
fs
push
push
add
sbb
push
pop
mov
cli
lock
add
mov
mov
inc
add
in
adc
test
scas
aad
mov
or
add
cmpsb
push
loope
popf
push
ljmp
and
popa
mov
add
adc
inc
daa
pop
jo
pop
and
dec
add
cmp
push
cmp
add
xchg
or
add
xor
or
roll
push
lods
lods
aam
mov
mov
or
loope
inc
pop
inc
or
or
sbb
popa
cmp
pop
mov
loope
loopne
outsb
cltd
dec
pop
and
das
pop
xchg
adc
cs
push
inc
mov
add
popf
push
push
jmp
inc
aas
loop
mov
setge
lea
enter
notb
sub
or
ljmp
pushf
jne
lret
data16
lcall
or
clc
xchg
xor
or
jne
popf
pusha
arpl
add
test
dec
or
movsl
rcll
dec
and
je
icebp
popa
mov
out
testb
sbb
mov
push
xor
xchg
inc
and
or
cmp
xchg
outsl
mov
sub
dec
mov
pop
mov
jnp
push
nop
pop
mov
dec
les
inc
cltd
adc
sbb
jecxz
test
or
test
dec
insb
or
pop
and
or
and
push
jge
icebp
lea
mov
je
and
adc
push
xchg
fst
jno
fidivs
and
and
aam
dec
mov
push
cmpsb
pop
ret
mov
jl
inc
addl
enter
enter
mov
inc
stos
pop
test
jno
call
add
push
dec
xor
or
jb
sbb
sbb
jb
mov
or
scas
pop
fcomps
push
push
mov
mov
push
adcb
out
rcll
mov
rcrl
inc
jnp
in
push
into
cmp
or
mov
mov
and
mov
sub
mov
push
orb
jbe
int3
xor
popa
popf
jbe
orl
push
addr16
pop
fsubrl
mov
dec
inc
sbbl
add
or
xor
je
push
xchg
xor
lods
rorl
repnz
push
insl
call
add
inc
icebp
test
iret
sbb
push
loopne
xor
xor
or
add
clc
add
ds
leave
shlb
push
ss
loope
je
ja
lock
lock
xor
xchg
mov
mov
add
aaa
mov
cmp
add
nop
das
cmp
dec
icebp
cmp
std
adc
xchg
sub
push
mov
lea
mov
shrb
lea
pop
call
pop
adc
mov
lock
push
push
hlt
sub
push
pop
or
fsubr
inc
sahf
adcl
or
add
cmp
cmp
jne
mov
cmp
cmp
jl
jns
loopne
scas
sub
cli
out
adc
jmp
push
pop
loopne
pop
shl
and
mov
fcmove
mov
or
nop
and
inc
dec
jb
or
sbb
jo
add
mov
or
lock
mov
pusha
into
shl
cmp
xor
jne
cmp
ss
adc
popa
push
nop
stos
decl
adc
jle
ljmp
hlt
xchg
jns
das
call
adc
sahf
adc
and
hlt
lea
add
cmp
scas
xchg
mov
sub
add
jnp
insl
sub
or
ljmp
mov
xchg
push
pop
aas
imul
hlt
pop
fwait
mov
dec
mov
jge
add
in
push
push
fcoms
add
clc
shl
inc
push
das
mov
leave
shll
es
mov
xchg
je
enter
subl
push
es
or
in
popa
mov
or
je
jmp
sbb
push
add
push
dec
lds
push
ret
pushf
fcmovnu
adc
fst
adc
sbb
pop
or
adc
dec
dec
popa
mov
jae
pop
roll
mov
cmp
in
push
test
mov
les
dec
push
fsubs
decb
ljmp
subl
mov
lcall
push
adc
sbb
pusha
mov
push
lods
shrl
orl
jle
cmp
popf
sub
rcrl
adc
pusha
adc
lods
sbb
adc
add
lds
int3
pop
dec
mov
push
mov
adc
cmp
pop
push
pop
shlb
sbb
inc
and
inc
jle
sarb
lahf
mov
inc
cmp
add
push
out
or
sbb
push
test
outsb
xchg
inc
sbb
push
push
pop
mov
loopne
lock
repnz
inc
jo
je
and
jno
add
rolb
cmp
and
push
mov
xchg
cmp
pusha
jg
or
xchg
mov
jl
mov
fdivl
adc
cmp
jle
pusha
sub
cmp
jle
add
and
lock
add
pop
shll
clc
test
sub
add
dec
in
mov
xor
xchg
ror
roll
xor
cmp
xchg
xchg
push
push
push
push
loope
dec
addr16
ds
push
add
and
ficomps
xchg
sub
test
in
shrl
pop
into
js
pushl
pop
and
mov
cmp
jbe
das
cmp
jp
mov
or
mov
or
pop
xor
pop
push
mov
mov
push
pop
mov
push
aaa
aaa
rolb
add
jmp
cmp
jbe,pt
mov
push
fcmovu
cmp
jb
fists
pop
je
ret
mov
test
rolb
sub
adc
lcall
adcl
aad
lahf
add
jno
in
mov
out
add
push
pushl
or
adc
cli
sub
pop
and
adc
inc
dec
sar
mov
dec
and
ds
pop
push
pop
in
inc
ret
cltd
pusha
into
and
bound
adc
mov
mov
jecxz
pop
push
adc
jmp
pop
mov
imul
fcoms
jle
data16
popa
sub
pop
dec
je
add
test
mov
sub
push
shlb
sbb
add
xchg
jnp
or
xchg
sbb
or
test
dec
rorb
xor
inc
pop
out
xchg
fwait
push
jg
out
mov
push
push
fdivs
data16
test
pop
jb
and
cs
or
push
fbstp
adc
jg
fidivrs
xchg
xor
fdivrl
aad
jae
lahf
xchg
pop
dec
xor
xchg
ljmp
push
inc
push
cs
repz
mov
fldl
push
or
mov
imul
movl
sbb
ud2
ds
push
pop
mov
cmp
or
sbb
mov
sbb
orl
inc
popl
jno
insl
jmp
inc
add
sbb
lods
xchg
int
cmp
orb
arpl
dec
and
jge
or
test
add
shrb
mov
push
or
rclb
mov
and
push
insl
and
xchg
inc
and
mov
pop
sub
sub
int3
loopne
sbb
iret
adc
add
push
sub
add
mov
adc
or
mov
push
sbb
or
or
inc
rcrb
pop
sub
mov
out
inc
jle
cltd
adc
sub
push
icebp
imul
lods
lock
dec
xor
cld
push
push
daa
mov
test
mov
dec
test
popf
pop
cmp
js
or
jb
jecxz
sub
call
testb
xchg
sub
dec
add
and
jns
mov
lods
push
push
mov
pop
jp
mov
lods
stos
xchg
pop
sub
xor
dec
test
punpcklbw
jle
fwait
cld
mov
xchg
add
add
in
pop
push
add
sbb
xor
jmp
mov
pushl
mov
sbb
cmp
or
clts
scas
rclb
or
imul
mov
movl
fiadds
cmp
add
inc
leave
leave
hlt
and
sbb
test
xor
ret
test
cmp
sub
inc
push
push
loope
xchg
adc
xchg
pop
mov
sti
mov
jl
pushf
pushf
jne
inc
push
mov
repnz
push
cmp
outsb
test
xlat
daa
test
addb
sbb
pop
or
mov
sub
mov
sbb
js
insl
pop
or
add
popf
mov
fdivrs
ret
mov
push
pop
inc
bnd
mov
or
sbb
push
sbb
push
add
mov
jno
push
lds
or
sub
pop
pop
fistpll
xor
jns
or
sub
xchg
insb
mov
sbb
leave
add
mov
adc
int
ja
jecxz
xorb
mov
movsl
bound
xor
mov
adc
xchg
pop
push
andb
push
jns
dec
mov
and
add
push
push
pusha
js
or
mov
lock
jle
test
sub
fcmovnu
mov
cwtl
inc
ret
mov
lods
mov
push
loopne
pop
pop
adc
pop
push
sub
adc
sbb
add
jl
insl
sbb
test
into
test
xor
jno
mov
mov
or
test
sbb
xor
jmp
in
mov
nop
fs
xchg
xorl
mov
clc
add
jmp
adc
or
xor
mov
cs
dec
push
pop
xor
aam
cmp
shll
movsb
popa
movsb
push
add
cmp
and
popa
mov
mov
nop
xlat
and
outsb
push
js
clc
lea
add
push
or
or
cltd
or
jo
push
aam
das
cmp
xor
adc
ret
xchg
jo
aad
stos
adc
mov
jne
and
loopne
jmp
rcll
imul
mov
cmp
lret
add
es
dec
leave
pop
jecxz
arpl
mov
adc
loopne
jbe
inc
sbb
push
pop
sub
jbe
sbb
cwtl
mov
pusha
push
pop
cmp
adc
adc
cmp
jne
bound
mov
inc
push
dec
push
mov
addl
int
push
fldt
adc
mov
fdiv
add
xchg
sbb
add
mov
or
hlt
nop
popf
or
stos
sub
test
jo
xchg
and
cmc
xchg
inc
enter
jle
ret
out
mov
cmpsl
ds
movb
pushf
push
jo
jl
pop
lea
sbb
or
and
inc
mov
xor
add
mov
pop
cld
mov
repnz
insb
dec
rorl
sbb
sahf
mov
xor
jb
and
or
and
or
pop
mov
jl
push
movsb
test
int3
push
push
dec
mov
sub
xor
lcall
xor
popa
cmp
add
jns
pop
icebp
push
jle
stc
add
or
push
cmpsl
outsb
mov
dec
add
out
jns
add
cmpsb
inc
adc
adc
or
xor
and
xchg
adc
cmp
dec
sbb
sub
or
xor
push
push
push
xor
cmpsb
es
ret
inc
inc
mov
add
fimull
cmpsb
pop
push
add
sbb
sub
mov
or
lea
sub
test
fsts
xor
fstpt
mov
mov
mov
fldl
sbb
cli
adc
clc
or
pop
outsl
jg
mov
add
sub
inc
sub
shlb
sbb
dec
stos
add
add
das
add
xorb
test
outsl
adc
adc
cmova
dec
imulb
rorb
mov
dec
mov
sub
add
push
mov
dec
sub
mov
xor
lea
pop
out
xor
add
pusha
jns
jo
mov
loope
ja
imulb
imull
jo
ja
cmp
pop
add
pop
push
out
pusha
lods
add
push
ja
repz
sahf
mov
sub
das
mov
ljmp
add
add
xchg
xor
enter
jecxz
out
std
insb
sub
and
andb
sub
sti
invd
add
aaa
test
pusha
sbb
push
pushf
or
lahf
push
push
sbb
mov
inc
add
or
mov
push
and
enter
inc
sbb
rorl
ret
xchg
lock
ss
mov
pop
push
cmp
or
sub
outsl
int3
push
mov
or
lea
es
std
insb
add
mov
pusha
xchg
mov
call
mov
ljmp
xchg
fcmovu
ds
sti
adc
adc
sbb
out
xchg
andb
mov
and
inc
ret
das
inc
add
adcb
jle
movl
mov
push
push
faddp
add
cmp
or
je
add
pusha
mov
mov
movsl
loopne
icebp
movsl
lock
jae
mov
test
rclb
call
aaa
cmp
test
push
dec
sti
pop
or
adc
mov
in
and
add
push
insl
jg
cmp
aad
sbb
push
inc
or
jns
mov
or
push
jge
cmp
jl
mov
pop
das
pop
mulb
jo
loop
pop
mov
sbb
mov
adc
pusha
or
mov
out
cmp
cld
dec
sbb
cmp
je
mov
jnp
insb
add
push
or
xor
dec
shlb
or
sbb
cwtl
sub
fsin
pop
push
call
push
nop
fmuls
push
outsl
sub
rorl
notb
mov
sbb
pop
ret
rclb
xchg
andl
xor
test
mov
add
sbb
arpl
xor
push
lea
add
dec
and
lcall
push
xor
orb
push
push
mov
insl
rorl
and
and
fimull
mov
fidivrs
xor
adc
add
popf
fstl
shlb
dec
push
sti
xorb
cld
inc
cltd
lock
push
pop
push
rorl
es
dec
cmp
inc
cmp
or
lock
xlat
mov
cmp
mov
test
push
pop
ffreep
fwait
cmpsb
imul
adc
cld
sbbl
lock
rclb
push
les
outsl
mov
clc
inc
clc
xor
push
jl
mov
push
pop
add
movl
push
loopne
sub
in
and
xor
cmp
popa
cmpsb
cwtl
ret
inc
dec
push
push
mov
pusha
xor
lock
xchg
xchg
test
jbe
inc
add
push
into
dec
out
lock
push
and
push
jg
push
and
add
lods
insb
mov
jnp
popa
push
stos
or
pushf
mov
test
fsts
inc
inc
jnp
mov
jnp
jae
mov
loop
sub
dec
push
sahf
jg
ljmp
dec
jb
pop
lea
test
aam
pop
mov
jl
mov
sti
or
xor
and
sbbb
or
cmp
mov
mov
xchg
sub
sbb
lahf
dec
movsl
sbb
and
add
sbb
pop
adcl
cld
ret
xchg
movsb
cmp
ret
dec
imul
rorl
outsb
add
cld
ret
jg
das
add
add
sahf
js
loope,pn
mov
aas
push
push
cmp
lea
jne
push
push
and
xor
push
test
add
mov
mov
fadds
mov
cmp
lock
jns
psubusb
jo
push
pop
repnz
in
mov
les
popa
add
sbb
push
xchg
rorl
push
add
add
pop
movl
lods
inc
mov
lcall
out
push
stos
pop
jl
clc
add
fwait
inc
mull
icebp
adc
xchg
mov
xor
cmp
jbe
add
xor
inc
mov
adc
and
jp
add
mov
jg
leave
subb
in
pop
push
inc
orl
addb
mov
add
mov
cmc
cmp
jb
ret
or
ret
xor
enter
ret
fadd
fimuls
test
lcall
sbb
mov
scas
or
out
movsb
push
push
sub
lods
xor
aaa
or
rcr
pop
sub
in
add
leave
push
les
dec
outsb
mov
add
jecxz
add
or
in
daa
inc
inc
sub
sbb
push
dec
loopne
adc
hlt
hlt
sbb
fsubrl
mov
hlt
jle
fcoml
push
inc
and
push
xchg
cld
jg
mov
hlt
inc
js
mov
mov
shll
or
mov
jb
cwtl
jmp
ret
mov
cmpsl
xor
adc
push
mov
rcrb
adc
cli
jp
sbb
pop
add
loopne
sub
add
data16
inc
cmp
mov
xchg
and
jno
dec
xchg
xchg
adc
push
orb
inc
mov
mov
insb
scas
es
sub
in
pop
and
mov
inc
stos
mov
jl
add
cmp
ret
jmp
dec
adc
aas
or
bound
adc
mov
lret
movsl
ja
dec
jp
pop
idivl
lods
in
sub
scas
add
sub
cmp
jne
sub
dec
pushf
xchg
out
or
push
sbb
push
aas
dec
add
push
repnz
and
push
add
add
mov
les
fisttpl
rcrl
imul
dec
in
sbb
dec
fmull
xchg
mov
shrl
or
roll
cwtl
push
loope
or
outsb
aad
in
dec
fstpl
movb
jb
lods
fwait
mov
mov
add
movsb
into
mov
inc
fs
and
insb
push
dec
lret
sbb
xchg
xchg
sti
outsb
sub
push
in
imul
pop
mov
mov
mov
sbb
movb
rorb
outsb
mov
fisttpll
fldcw
mov
out
stos
add
or
or
mov
or
or
into
pop
lds
jle
loopne
push
mov
pop
push
mov
add
mov
jg
pop
movsb
push
cmp
pop
inc
addl
cmp
jp
sub
or
sub
or
or
mov
mov
ret
pop
push
push
and
aam
into
into
leave
inc
pop
push
inc
dec
lods
lahf
popl
dec
lea
xchg
xor
movl
jle
mov
xchg
push
inc
or
pop
mov
mov
lea
mov
cmp
pop
add
xchg
cld
cltd
dec
dec
or
mov
testl
sbb
sub
sbb
or
add
fneni(8087
sbb
fdivrs
jne
push
loopne
adc
mov
cmp
push
lds
jbe
or
aas
enter
test
lock
insb
push
and
loope
sub
push
lock
sbb
imul
ds
mov
mov
push
or
or
adc
test
icebp
fwait
rclb
add
sub
pop
cmpsb
jle
daa
loopne
hlt
add
outsl
mov
rclb
add
push
mov
je
stos
or
sbb
gs
push
jo
mov
dec
adc
mov
pusha
pop
std
ret
sbb
xor
jne
push
mov
push
cmc
jns
xor
and
adc
pop
push
pop
adc
jno
shll
in
insb
push
sbb
pop
in
shrl
push
pop
addr16
insb
push
mov
das
pop
enter
test
inc
stc
add
xor
sbb
adc
daa
push
jns
in
xchg
push
dec
jnp
orl
push
dec
mov
aad
in
push
add
out
lds
cmpl
insl
movl
or
xchg
dec
adc
cmp
xor
mov
xlat
fidivrs
cmp
push
pop
ror
imul
xchg
xor
push
push
xchg
fdivrs
ror
scas
in
scas
add
sbb
mov
add
pusha
cmp
xchg
pop
insb
adc
mov
imul
notl
add
es
xor
dec
xor
fs
out
pop
pop
imul
je
mov
jmp
cmp
cld
data16
mov
xchg
into
rclb
xchg
rclb
sahf
js
int3
push
or
pop
xor
jne
mov
sub
lea
mov
jle
call
mov
das
bound
shll
iret
add
add
cmpsb
sbb
rclb
add
cmp
dec
xchg
mov
imul
test
xor
jb
xor
popa
test
mov
fadd
insl
and
inc
cmpsb
and
bound
fisttpl
add
sub
xor
add
pushf
xor
push
jle
ret
add
lods
or
repnz
pop
pop
or
push
orl
or
sub
or
fisubs
outsb
sbb
aad
push
pushf
add
push
add
xchg
push
dec
cwtl
xchg
jmp
mov
sbb
movsb
add
ret
ljmp
in
fs
int
xchg
lcall
pop
jbe
daa
in
pop
push
xchg
and
call
lods
imul
jmp
sbb
pop
fstl
das
dec
cs
js
daa
sub
fsubrl
sub
push
lret
and
jl
sbb
shll
test
pusha
inc
imul
dec
iret
ds
or
push
jle
mov
sub
push
jb
insb
push
mov
in
add
xor
dec
jmp
fsubrs
loope
cmp
sub
inc
das
xor
mov
mov
rorb
cmp
mov
mov
push
push
push
xchg
inc
inc
jns
ljmp
add
loopne
jo
aaa
pop
rcll
flds
imul
pusha
jo,pn
mov
xor
cmp
cmp
mov
sub
jge
popl
xchg
dec
sbb
inc
add
sbb
mov
or
lcall
sar
pop
push
cmp
dec
mov
cmp
dec
adc
lret
dec
out
cmp
push
dec
or
mov
push
inc
scas
loopne
mov
cmp
jl
pushf
mov
mov
ja
mov
add
push
push
repz
jno
mov
mov
push
imul
shrb
push
outsb
popa
xor
inc
cmp
bound
xchg
jne
mov
push
packssdw
xor
sub
les
cmp
stos
lret
sub
push
mov
fisubrl
test
adc
add
add
adc
jp
mov
xor
and
xchg
xor
or
iret
decl
add
lds
scas
sbb
jecxz
jne
dec
fsubrs
sub
out
and
cmp
jle
aaa
mov
lahf
mulb
add
lahf
sahf
fwait
test
adc
mov
sarl
push
push
jo
insb
pop
movsb
test
aaa
mov
xor
pop
sbb
mov
cld
or
sbb
adc
ret
jno
cmp
jl
inc
into
pushl
cmp
mov
inc
aam
mov
movsb
shlb
cwtl
out
cmp
mov
roll
ds
pop
outsb
xor
add
fmuls
xchg
pushf
pop
mov
and
pop
ret
dec
in
sbb
inc
lahf
push
movsb
push
push
add
rcrb
xchg
scas
mov
mov
pop
push
xchg
sbb
fisttpl
and
mov
push
pop
ljmp
cs
inc
xorl
push
dec
adc
mov
sub
inc
lds
pop
push
adc
push
add
popa
push
dec
cmpl
xlat
popa
test
and
and
push
daa
lods
pop
pop
add
xor
mov
je
push
mov
push
dec
mov
cmp
mov
xlat
lds
adc
pop
sub
push
or
adc
ret
call
sub
int
nop
pop
xor
das
and
sub
in
mov
sbb
sbb
loope
mov
jne
or
aam
push
lds
pop
insb
sarl
dec
lahf
in
sub
xchg
mov
push
inc
lahf
in
mov
shll
jbe
pop
or
mov
push
shlb
jb
insb
sbb
dec
popa
divb
cs
test
cmpl
adc
mov
inc
push
or
push
push
mov
inc
add
js
fistpll
jae
loope
leave
push
push
sub
js
dec
and
xchg
lahf
insb
cltd
mov
sbb
hlt
ja
sbb
jmp
mov
sub
push
xchg
popa
enter
sbb
mov
push
sub
dec
or
add
inc
scas
les
jo
sub
push
inc
pop
add
add
call
push
sbb
and
fstpl
adc
arpl
dec
or
jb
imul
or
sbb
cmp
dec
mov
ret
adc
stos
cmp
ret
dec
jns
sahf
inc
pop
pop
loopne
xor
sbb
pop
arpl
cwtl
dec
jl
jg
popf
movb
popa
dec
pop
push
add
dec
mov
das
xchg
test
jo
jno
dec
or
xchg
pop
push
fisttpll
inc
pop
dec
inc
stc
cmp
test
aas
and
mov
cmp
ss
push
hlt
lock
stos
sarb
ret
inc
in
test
lea
and
or
test
pop
cmp
nop
or
mov
mov
push
dec
mov
mov
xor
mov
push
leave
jnp
mov
orl
cltd
and
add
or
jnp
pop
leave
mov
mov
jle
notb
or
and
mov
dec
jg
out
dec
std
sub
cmp
ljmp
adc
lea
push
inc
bnd
push
popa
xorl
ret
test
pop
insb
or
das
fldl
cmp
adc
pusha
cmp
and
call
add
and
sbb
xchg
add
or
popa
pop
mov
jg
and
inc
aaa
pop
mov
sbb
enter
insl
out
cmp
mov
xor
mov
dec
fs
mov
or
push
cmp
pop
sub
pop
adc
sbb
arpl
test
adc
cmpsl
mov
daa
aaa
xor
xchg
lods
sub
fiaddl
ret
add
dec
test
or
shlb
ret
cmpb
mov
ret
cmp
mov
push
lret
shrb
dec
xor
mov
outsb
mov
push
jle
adc
ljmp
push
int
addb
adc
es
shrb
ljmp
cs
lret
or
xchg
dec
sub
pop
mov
stos
xchg
shr
dec
mov
xor
movsl
sub
pop
pop
arpl
int3
mov
adc
dec
movsl
movsl
adc
leave
inc
orl
mov
xchg
adc
xor
and
and
idivl
push
xlat
jnp
jbe
in
sub
xor
cmp
aas
cmp
pop
mov
jb
adc
or
hlt
dec
jp
xchg
push
push
ds
xor
lock
mov
adc
repnz
clc
stos
push
or
push
dec
and
or
jmp
xchg
shr
adc
push
ret
outsl
push
rcll
push
loop
cwtl
xchg
pop
xor
xor
xor
add
jne
lds
cmp
dec
mov
and
sbb
nop
mov
add
das
pusha
xchg
add
jno
push
pop
dec
sub
lea
mov
push
sahf
insb
pusha
jnp
xorb
mov
aam
loop
mov
xchg
pop
hlt
push
mov
mov
clc
adc
jle
adc
inc
in
xchg
push
xlat
iret
std
or
push
push
in
xor
popa
jns
lcall
lret
lcall
bnd
and
jne
ds
mov
push
dec
test
and
sbb
mov
inc
and
jno
imul
loope
push
sbb
inc
adc
inc
dec
xor
arpl
cmp
dec
aam
lds
nop
xor
aad
pop
arpl
cmp
bound
inc
xchg
fistpll
and
dec
scas
pop
xor
inc
rcl
push
mov
out
scas
dec
or
adc
push
in
in
and
and
or
jg
enter
jge
cmp
lock
hlt
jne
push
and
icebp
pop
adc
mov
mov
pop
ret
add
jmp
daa
xor
clc
add
xor
ret
filds
pop
mov
outsl
lea
je
cld
je
test
pcmpeqb
inc
sub
loopne
mov
mov
addb
sub
mov
adc
aad
add
push
test
ret
aas
push
cmpsb
jnp
add
dec
push
stc
sub
mov
inc
loop
cmp
out
xor
inc
cmp
and
xor
push
sub
sarl
das
sbb
add
or
clc
push
outsb
add
xchg
mov
or
xor
add
push
jg
mov
imull
xchg
sbb
push
sub
idivl
pop
aas
aad
aam
mov
xor
negl
ret
inc
jl
rcll
push
add
ret
mov
jecxz
icebp
xor
push
movsb
inc
popa
faddl
sbb
xor
ret
push
push
add
mov
lock
dec
hlt
sub
sbb
sbb
cli
or
push
mov
jge
stc
pop
clc
jg
inc
test
repz
push
lea
push
inc
push
pop
xchg
xor
adc
sub
dec
mov
push
push
adc
xchg
adc
dec
dec
das
cltd
mov
add
cwtl
nop
dec
mov
inc
xchg
mov
scas
mov
inc
sub
inc
xchg
lret
mov
dec
mov
pusha
xor
or
pushf
mov
push
shlb
mov
ds
and
in
sbb
mov
pop
inc
push
mov
push
aaa
nop
sbb
cmp
std
pushf
es
and
sub
fisubl
fistpl
adc
inc
cmp
xor
mov
sbb
ds
pop
mov
push
mov
xor
pop
xor
adc
jns
inc
and
cmp
add
and
mov
stos
xor
xor
mov
hlt
in
hlt
ret
lds
or
jg
cmpb
jne
add
dec
xor
daa
addr16
or
or
jns
mov
sbb
hlt
pop
push
sbb
mov
outsb
sub
je
inc
enter
xor
scas
sub
sbb
jbe
pop
mov
in
xor
inc
push
es
icebp
sbb
sub
outsl
or
sub
loopne
mov
pop
push
add
push
mov
add
mov
add
push
std
mov
jg
icebp
cmpsb
mov
add
in
jmp
movsl
movb
aam
inc
sub
inc
or
xor
inc
mov
jb
add
rorl
adc
xor
xchg
and
pop
loope
or
cmp
xchg
rcrb
mov
push
pop
loope
push
lea
xchg
call
fists
in
iret
pop
fdivs
push
pop
dec
xor
mov
pop
jle
cmp
mov
adc
cld
pop
into
mov
cmp
mov
sbb
cli
mov
hlt
stos
test
add
je
or
sbb
subl
cmpb
push
nop
iret
sub
pop
push
inc
loope
push
pop
into
fstps
mov
out
mov
mov
stos
add
push
mov
push
loop
jne
notb
iret
lahf
inc
inc
push
push
fiadds
dec
add
cmp
push
xor
mov
adc
ret
mov
lock
inc
hlt
push
cs
and
fs
adc
sub
ret
cltd
sub
or
sub
xor
mov
sbb
sub
xchg
xor
pop
ret
test
es
lods
dec
daa
pop
and
xor
adc
out
sbbl
dec
icebp
out
imul
jge
push
shrb
xchg
clc
test
add
cmp
jmp
jno
push
pop
jmp
mov
ja
or
inc
jle
jmp
or
aam
stos
mov
scas
aaa
add
mov
bound
dec
or
lods
mull
inc
movsb
rorl
call
xchg
cmp
or
or
nop
mov
insl
je
testb
cmc
sbb
and
pop
or
mov
lea
or
pop
cmpsl
jmp
mov
sbb
lret
sbb
dec
sbb
pop
lods
adc
add
adc
into
shl
and
imul
mov
xchg
cmp
es
push
and
arpl
inc
sbb
mov
fidivs
ret
add
cmp
clc
inc
mov
add
pop
push
jno
xor
or
jb
add
orb
push
or
jl
add
std
cli
shr
lret
push
mov
jnp
rorb
repz
pop
test
fsubs
adc
add
pop
dec
jo
and
mov
mov
adc
je
cs
test
lcall
push
pop
test
popa
leave
pop
mov
orl
push
dec
sahf
push
or
xor
dec
scas
ljmp
pop
mov
mov
sbb
push
ficoms
cs
js
jno
mov
add
jns
pop
cmp
sbb
cmp
add
add
sub
sbb
and
adc
add
sbbb
fwait
xor
and
push
push
pop
movsb
push
test
jle
add
enter
inc
into
gs
mov
mov
flds
out
mov
aam
ret
xor
subb
inc
into
sbb
push
inc
cmp
scas
inc
and
orl
jl
addl
cmc
dec
mov
adc
cwtl
pop
xchg
push
adc
push
rcll
gs
push
mov
and
push
xor
adc
icebp
dec
je
lahf
adc
leave
jne
xchg
fsubr
aas
mov
dec
jne
jno
inc
lret
cltd
mov
adc
data16
andl
or
aam
fsubrl
push
dec
aad
les
dec
shr
imul
or
or
xor
call
mov
inc
sbb
push
jb
clc
add
pop
mov
jne
adc
rorb
pop
ret
pop
cmp
mov
aam
fs
pop
and
aam
or
fs
add
inc
add
stc
xor
xor
and
or
push
into
mov
incl
ds
orl
fs
adc
or
xor
cmp
or
pop
pop
fdivs
pop
inc
push
push
push
push
sub
push
dec
push
in
stc
mov
loopne
stc
push
push
push
pmulhuw
adc
jnp
sub
mov
daa
push
inc
sbb
movl
inc
ret
fnstsw
test
nop
dec
dec
movb
inc
xchg
clc
aam
sub
out
jge
mov
cmpl
add
iret
pop
lcall
xchg
inc
xorl
jg
mov
push
mov
xchg
xor
and
mov
test
jge
xchg
mov
call
xchg
test
push
jno
test
sub
not
fisubrl
cmpsl
or
add
inc
push
mov
ret
xchg
push
lea
add
sbb
insl
psrld
xchg
lods
inc
mov
inc
fcoms
sti
push
fdivl
popf
push
mov
jbe
js
in
push
fidivrs
loopne,pn
pop
xchg
loope
cmp
lea
pop
adc
push
mov
faddl
in
fcom
add
and
mov
test
adc
jmp
popa
icebp
outsl
push
cmp
mov
ret
bound
js
and
xchg
or
adc
hlt
lods
lcall
mov
pop
mov
add
enter
push
sar
int3
rolb
xchg
int3
ret
inc
and
add
in
dec
aas
push
push
push
and
add
lahf
out
push
cs
dec
push
jle
mov
cmp
dec
fsts
ret
push
mov
pop
push
in
inc
pop
pop
daa
and
push
orb
bound
and
dec
adc
mov
sbb
cmp
addb
jmp
add
jne
adcl
pop
lock
imul
sbb
int3
push
hlt
dec
mov
jno
xor
push
repnz
adc
je
sbb
out
push
mov
repz
cwtl
adc
pop
push
enter
pop
adc
inc
and
pop
sub
and
push
test
nop
loopne
add
push
sub
pop
sbb
lret
lock
add
lea
cmp
jne
cmp
int3
sbb
sbb
sbb
sbb
pop
dec
andl
add
add
cs
push
push
jmp
inc
jo
sub
fcomps
and
add
es
adc
pop
js
push
sbb
cmpsb
mov
xor
test
pusha
lret
adc
xor
adc
fiaddl
pop
xchg
js
mov
js
incl
push
je
inc
add
cmp
jl
jmp
jge
cmpb
mov
cmc
dec
pop
push
adc
xor
sbb
add
mov
cmp
and
add
sbb
rorb
xor
subb
daa
rol
dec
or
sub
daa
push
sbb
cmp
add
add
cltd
push
popf
movsb
mov
dec
sub
dec
imul
mov
sub
sbbb
push
push
in
xchg
push
inc
pop
pmulhuw
sbb
sbb
push
jbe
insb
lea
std
js
add
das
inc
cmpl
mov
test
and
sub
outsb
xor
je
sub
insl
fisttpll
cmp
mov
orb
and
xor
sbb
aad
dec
aaa
sub
push
lcall
shlb
mov
call
jge
or
inc
lea
in
push
and
add
add
inc
xor
pop
adc
and
push
mov
in
aad
xor
in
je
enter
nop
loopne
fistpl
push
call
and
sub
dec
enter
sub
fs
clc
mov
mov
cltd
and
adc
or
inc
rolb
rolb
clc
adc
mov
mov
pop
xchg
dec
or
adc
cld
add
je
pop
inc
add
sbb
bnd
sbb
inc
add
add
movsb
inc
adcl
adc
sub
movsl
or
fdivs
sub
inc
mov
pop
xchg
and
movsl
add
lock
icebp
notb
aaa
ret
arpl
dec
adc
ds
and
cmp
sub
adc
addr16
cmp
xchg
push
sub
sub
jo
push
add
leave
sub
adc
and
jge
mov
push
jl
adc
imul
cli
test
or
push
mov
xchg
cmp
xchg
imul
xor
jmp
and
add
adc
ja
xlat
cmpsl
int
xor
or
ljmp
push
xor
adc
shrl
cmpsl
or
adc
push
mov
adc
imul
xor
ret
jg
or
cmpsl
mov
ret
add
aas
imul
add
add
mov
test
push
push
push
mov
sbb
or
push
add
adc
ss
add
push
add
data16
into
cmp
jne
cmp
jb
mov
add
cmp
jae
or
cli
jmp
xor
ret
and
xor
ja
push
push
push
dec
loopne
mov
decl
inc
and
mov
aas
pop
call
jge
dec
cli
adc
mov
cmp
mov
test
add
sarb
call
add
jmp
adc
cmp
jl
pop
ds
adc
cs
mov
mov
adcb
hlt
sbb
pop
jl
jl
push
lock
enter
or
mov
push
test
sahf
push
and
pop
xor
sub
xorb
clc
pop
out
inc
add
jle
mov
mov
pop
fadds
aam
add
mov
mov
inc
aas
mov
test
jo
xchg
xchg
lods
pop
xor
push
add
add
mov
stc
sidtl
cmpsl
mov
inc
cmp
das
inc
add
outsl
inc
add
cmp
push
mov
inc
push
das
xchg
das
cs
fs
outsb
inc
add
lds
jb
or
mov
inc
fistps
inc
inc
sbb
cmp
mov
enter
sbb
mov
out
push
or
aas
test
iret
cmp
lock
pop
jmp
xchg
movsb
jo
pop
mov
push
outsb
sti
dec
out
bound
or
cwtl
lahf
push
dec
add
inc
cld
shr
xor
sbb
insb
jmp
or
and
adc
sbb
add
mov
cmp
mov
cs
jge
mov
add
scas
fcmovbe
andps
iret
add
xor
adc
adc
cmp
pop
or
adc
or
mov
sqrtps
cld
sub
push
add
dec
xchg
add
xlat
loop
aas
mov
int3
cmp
mov
daa
movsl
in
imul
jle
js
dec
or
push
pop
cmp
adc
sbbb
lock
or
jo
movsb
jge
inc
pushf
out
mov
inc
mov
or
jmp
adc
out
rolb
pop
sbb
pop
cmp
xor
mov
je
sbb
add
sbb
jo
dec
adc
push
cmp
int3
push
xchg
test
and
enter
loopne
xor
jg
sub
jmp
clc
mov
sub
cmp
in
lret
cmp
dec
sub
pop
mov
in
add
mov
ljmp
jge
xor
arpl
mov
push
sbb
or
mov
mov
sbb
dec
adc
xchg
inc
add
adc
mov
adc
pusha
pop
and
pop
mov
outsb
ljmp
ret
adc
add
or
or
xor
cmp
les
dec
faddl
and
clc
mov
dec
xchg
mov
dec
ficomps
jno
mov
sti
adc
sub
push
sbb
push
leave
jae
add
xchg
cmp
cmp
push
sub
das
cmp
xor
xor
sbb
es
pop
sub
and
add
dec
push
test
lods
add
push
addl
ret
out
loopne
daa
or
or
xchg
add
adc
add
inc
sub
sbb
push
push
and
xor
xor
xchg
add
test
inc
sub
dec
or
or
inc
push
dec
adcb
adc
pop
inc
and
insb
push
into
sar
cmpsb
jo
add
sub
mov
in
into
xchg
adc
mov
aas
xchg
xor
inc
enter
aam
cmpsb
popa
outsl
aas
mov
add
mov
or
in
imul
sub
pop
mov
inc
pusha
add
pop
mov
sbb
andl
xor
mov
push
and
inc
sti
and
leave
pop
cmp
add
or
adcb
daa
ret
xchg
push
or
pop
inc
lea
int
push
lahf
cmp
xchg
in
stos
movsb
jmp
movsb
mov
push
int3
mov
enter
mov
pop
and
sbb
pop
or
lea
setne
inc
fs
rorb
dec
or
and
and
cmp
or
pop
sub
push
rorb
and
and
or
add
rorb
adc
add
mov
add
adc
aaa
add
cmp
inc
push
adc
add
xor
lods
push
shrl
lea
or
or
daa
jge
xor
cmpsb
sbb
add
push
adc
push
loop
add
cmpsb
fs
and
lret
adc
addl
jnp
mov
adc
or
popa
xor
mov
rorb
pop
xor
mov
push
and
sbb
fimuls
sbb
sbb
sbb
pop
loopne
dec
mov
dec
inc
push
mov
adc
hlt
xor
inc
sarl
sub
mov
call
cmp
sbb
inc
call
add
add
dec
sbb
mov
adc
add
stos
mov
jb
and
loope
mov
sub
mov
test
add
sbb
pop
test
sub
xchg
clc
mov
xor
or
adc
jl
sub
lds
inc
test
pop
adc
xor
add
sbb
cmp
adc
sbb
push
test
dec
pop
mov
inc
mov
push
push
dec
jmp
mov
aam
cmp
dec
push
push
push
rcrb
dec
fwait
cmp
rcll
xchg
cmp
test
enter
fs
loopne
rolb
sub
je
and
cli
jne
inc
jns
popf
xchg
push
push
rolb
sub
or
dec
cld
push
hlt
ficoms
add
or
jns
inc
or
mov
xor
mov
dec
xchg
sbb
pop
sbb
cld
and
test
and
adc
add
pop
push
mov
rcll
push
cmp
add
ret
add
cwtl
into
and
push
jns
dec
stos
loope
sahf
jmp
push
cwtl
jle
add
inc
dec
mov
push
stos
sub
inc
xchg
and
mov
add
push
sbb
popa
mov
add
mov
inc
mov
inc
cmp
aad
mov
rolb
sahf
jne
and
jnp
xor
and
and
xchg
mov
je
mov
push
pop
cmp
dec
or
cmpb
sub
cwtl
dec
push
pop
add
add
ds
inc
inc
aas
and
cmp
into
push
lcall
push
mov
add
outsl
sub
movl
in
pop
cld
repz
je
mov
cmp
or
rorb
inc
and
adc
add
js
mov
inc
cwtl
in
sub
push
fmuls
add
ja
and
pop
lss
inc
ljmp
push
add
mov
pop
jge
add
xchg
loopne
les
push
push
in
out
je
inc
fadds
fisttpll
mov
pusha
sbb
inc
loopne
cmpsl
test
or
cmp
adc
mov
scas
cld
dec
fcoml
lock
lods
inc
loopne
dec
push
and
movsl
nop
pop
hlt
push
loopne
call
ror
add
enter
jl
push
pand
adc
sub
push
mov
repz
sarl
mov
cmp
fdiv
lea
mov
cmpb
pop
or
push
dec
out
or
lret
lods
and
or
mov
int
fwait
psubsb
fmull
rorl
add
sub
lret
and
jg
lods
mov
movsl
push
dec
das
mov
inc
add
imul
mov
or
adc
fadd
xchg
fmull
popf
fadds
jmp
aad
ljmp
sub
loopne
hlt
clc
adc
jnp
pushf
jmp
lea
dec
mov
push
inc
pop
in
push
xchg
xlat
fbld
inc
or
pusha
mov
mov
push
adc
jle
dec
ljmp
cmp
add
sbb
jge
jae
push
sbb
sti
jmp
mov
xchg
aam
lea
orb
pop
push
mov
jno
fldenv
push
sbb
addb
sbb
jl
pop
daa
fucomp
sahf
das
cmpsl
icebp
lea
push
popa
push
rolb
test
pop
nop
push
daa
add
mov
lock
adc
sbb
jo
and
aaa
add
add
das
push
push
lds
call
les
jo
stos
jo
nop
cmpsl
jo
popl
and
sub
ret
add
dec
and
sub
jle
or
lds
je
xor
or
movsb
push
inc
and
cmp
adc
les
sbb
data16
movsb
shlb
int3
or
xchg
dec
sub
test
inc
pushf
push
and
popa
cmp
inc
mov
fldcw
inc
pop
inc
push
sub
xor
jo
enter
les
add
add
adc
sbb
mov
adc
data16
int3
add
std
push
imul
xor
add
mov
xor
cmp
add
jb
out
lcall
lock
jb
movb
sbb
and
or
pop
push
dec
adc
test
adc
add
push
push
pop
cmp
clc
nop
push
pop
xor
into
pop
daa
pop
and
out
ret
nop
lret
into
add
leave
pop
push
daa
ds
push
push
pop
or
mov
xor
xor
sub
dec
test
test
jo
out
outsl
and
push
sub
jl
fs
and
or
shlb
jns
cmp
push
adc
cmp
jmp
ds
mov
fldl
es
or
xchg
dec
dec
adc
sahf
push
adc
fstps
mov
cmp
es
dec
push
cs
add
adc
add
inc
cmp
movsb
pop
mov
inc
das
test
push
push
sub
fidivrs
jne
jo
jecxz
cmp
mov
je
or
sbb
xchg
clc
jl
mov
adc
jecxz
or
sub
hlt
outsl
dec
sub
addl
adc
sbb
test
in
dec
add
adc
sub
rolb
or
mov
push
ds
pop
outsb
push
sbb
cld
movsl
sub
inc
push
or
add
mov
mov
sbb
jb
jo
or
sti
sahf
test
jle
push
push
mov
push
bound
sub
jmp
dec
les
les
mov
and
fdivs
or
cmp
jle
stos
ret
dec
jge
cmp
adc
rcrb
jb
adc
cwtl
sub
sub
xor
xor
sub
pop
lods
xor
xor
test
add
xchg
cmp
pop
xor
add
ja
cmp
push
add
mov
mov
movsl
and
push
add
ljmp
cmp
push
and
pushf
jl
mov
mov
add
xchg
clc
jnp
inc
aaa
rorl
push
sub
lods
push
jmp
faddl
sbb
add
js
xor
push
dec
push
cmpsl
or
add
xchg
dec
and
loopne
lea
sub
mov
mov
dec
mov
inc
cmp
lock
pusha
loopne
stc
imul
inc
sbb
loope
push
push
jmp
dec
jne
add
sub
mov
xor
cmpsb
lods
stc
add
lret
mov
xchg
xor
sub
nop
sub
push
aaa
or
fs
dec
xor
inc
cmp
ljmp
lock
in
flds
push
mov
mov
xor
push
lcall
call
inc
sub
xlat
add
ja,pt
adc
pop
pop
xor
pop
scas
ret
adc
sbb
orps
cmp
dec
xor
and
xor
mov
cli
and
mov
jg
sub
int3
pushl
fisubrl
sar
sbb
lock
test
or
test
into
xor
or
jg
into
aam
and
cmp
mov
je
aas
movsb
stos
testl
cmp
in
mov
or
cwtl
or
mov
xlat
cli
and
add
adc
dec
jne
jp
pop
xchg
xchg
and
jns
mov
mov
push
push
jmp
sti
decl
xorl
orl
mov
out
cmpsb
sarb
sub
pop
mov
cmp
test
lea
sub
xchg
ljmp
sub
adc
sbb
adc
pop
pop
jns
mov
add
xchg
sub
addr16
mov
inc
movsb
pop
lcall
cs
adc
aas
push
adc
or
lds
pop
dec
pop
leave
nop
pop
mov
pop
and
push
dec
push
sti
leave
mov
lea
loope
jecxz
sub
nop
lret
dec
or
lea
or
dec
push
fidivs
and
shlb
aas
pop
push
xchg
add
cltd
call
test
push
adc
xor
jne
data16
add
add
fsubrl
aad
in
mov
and
out
iret
or
mov
adc
cs
sbb
mov
adc
cmp
test
push
hlt
mov
jmp
sub
adc
lret
nop
inc
cmp
sbb
outsl
xor
js
lcall
xor
mov
es
pop
add
add
aaa
test
icebp
mov
sar
sbb
and
sub
pop
fs
push
popf
xchg
add
andl
pop
cmpl
stos
inc
test
or
inc
cmp
mov
fldcw
lea
ret
das
add
out
or
sbb
push
push
mov
testb
adc
sub
mov
scas
imul
mov
sub
dec
cld
icebp
insb
and
add
imul
push
stos
out
sti
ret
dec
inc
aam
es
dec
sbb
lret
adc
outsl
mov
dec
push
loope
cmpl
adc
stc
ja
pop
lods
fs
arpl
push
sbb
incb
test
sub
or
xchg
or
daa
mov
lock
adc
cmpsl
inc
inc
add
repz
push
adc
cwtl
rolb
movsb
fs
inc
mov
or
mov
dec
das
pop
je
cmc
data16
int3
adcl
xlat
scas
push
or
add
das
inc
jle
insl
xor
arpl
popf
sub
sub
and
dec
sub
cmp
and
inc
dec
push
sbb
xchg
sbb
sub
int3
push
add
jecxz
aam
add
stos
xchg
pop
mov
pop
mov
dec
pop
in
xor
push
rorb
mov
dec
pop
jno
sub
pop
in
xor
lea
adc
sahf
push
imulb
nop
stos
cs
sbb
leave
fisubl
outsl
xchg
ss
jmp
call
add
fldt
into
rorb
jle
push
icebp
mov
add
movsb
sbb
inc
and
cmp
push
pop
push
push
or
call
push
cmp
xor
popa
xor
std
stos
xor
mov
sbb
and
xor
sub
pop
call
push
or
dec
push
inc
push
ficomps
fs
in
sbb
and
or
adc
mov
inc
or
nop
iret
sub
push
ds
dec
in
inc
xlat
or
push
xor
and
pop
xor
and
push
push
fisttpll
cmp
jns
ss
je
xchg
adc
inc
hlt
push
fdivl
adc
imul
jns
adc
clc
push
mov
arpl
adc
pop
and
leave
loope
add
fistpll
in
xchg
and
add
sbb
dec
add
mov
and
data16
mov
push
push
ficomps
sbb
sbb
cmpl
hlt
clc
cmp
popf
loop
and
mov
sbb
adcb
mov
push
sub
adc
test
mov
xchg
and
or
inc
ljmp
push
pusha
int
add
rolb
mov
jmp
inc
lahf
inc
xchg
sub
pop
pop
jb
xor
or
sub
sub
xchg
inc
rorb
mov
push
call
push
cld
push
lea
aad
adc
je
mov
ja
or
jb
scas
fsubrs
push
std
sub
cmp
jae
pop
push
shrb
xor
sbb
and
lock
cmp
push
lods
mov
xor
cmp
cmp
mov
and
cmp
leave
dec
add
subl
pop
mov
ret
out
cmp
sbb
and
sahf
or
sub
adc
or
sub
mov
pop
and
add
loope
add
pop
popf
xor
test
add
inc
xor
dec
add
cmpsb
jb
adc
sbb
add
cmp
scas
adc
and
push
sub
add
mov
ja
lea
pop
and
ljmp
xchg
pop
sahf
and
inc
push
into
icebp
add
cltd
out
fcomps
xchg
dec
add
add
inc
gs
jge
pop
xlat
inc
add
mov
xor
xchg
mov
sbb
mov
insb
loopne
cmp
xor
mov
jne
mov
xchg
xchg
xor
mov
inc
cmp
or
fisubrs
cld
add
add
movsb
test
decb
sbb
fisttpl
mov
dec
mov
mov
push
push
sub
int
add
add
dec
enter
das
mov
imul
inc
addb
inc
adcb
sub
mov
xorl
test
daa
jl
es
filds
sub
lcall
sub
sub
dec
cmp
jae
mov
cwtl
ds
push
data16
lock
or
adc
fimuls
fwait
push
dec
fnsave
mov
sti
cmp
pop
mov
jne
pop
push
icebp
mov
or
adc
hlt
xor
test
adc
in
mov
and
lds
fadds
notb
adc
mov
jns
mov
incl
dec
js
mov
sbb
sahf
xor
sub
jle
je
enter
mov
shl
rclb
push
sbbl
dec
inc
nop
popa
test
aas
add
pop
add
cmp
dec
jbe
sbb
sbb
jg
clc
fimuls
jge
movzbl
adc
sub
std
js
scas
xchg
push
loopne
push
pop
and
loop
push
push
xor
mov
test
add
cmpsb
loope
subb
pop
aaa
cmpsb
mov
ljmp
fsubrs
cmc
cmp
je
and
add
and
dec
loop
jg
mov
cmp
or
add
sub
mov
jbe
subb
or
mov
pop
xor
incl
movsb
sbb
je
js
insb
add
add
ds
lret
sbb
inc
mov
inc
sub
movsl
push
out
xchg
adc
adc
mov
ja
mov
add
lahf
cmp
jae
imul
sbb
ret
pushf
push
lea
xor
mov
push
mov
paddb
pop
movl
or
popa
and
xchg
cmc
adc
enter
adc
push
sub
popa
popf
sub
inc
or
add
rorl
or
mov
jnp
and
cmp
push
pop
add
sub
xor
dec
dec
push
push
and
add
arpl
lds
or
lcall
outsb
pop
adc
add
add
je
cmpb
xchg
jnp
divl
divl
sbb
add
and
mov
sbb
imul
pop
inc
mov
jmp
jb
nop
add
lods
repz
repnz
inc
sahf
js
imul
mov
push
pop
inc
dec
loop
test
ret
xchg
lea
adc
nop
sbbl
sbb
dec
aaa
dec
or
pop
test
stos
or
jl
sbb
js
and
mov
or
insb
push
dec
or
pusha
ret
imul
add
bound
dec
push
or
sbb
inc
rolb
mov
xor
xorb
xchg
loopne
aas
mov
mov
push
leave
mov
insl
inc
adc
or
jo
xor
mov
and
imul
add
ss
and
dec
and
add
lea
mov
sub
jecxz
jb
sbb
adc
ret
sbb
jb
jns
pop
call
xchg
cmp
or
cmp
cmp
mov
adc
jge
popf
push
adc
jne
mov
mov
or
or
xor
pop
and
xor
jg
test
xchg
inc
xor
aas
lcall
jl
fisubrs
jae
mov
lea
mov
insb
jno,pt
jmp
and
jle
or
pop
hlt
sub
arpl
xor
or
pop
out
aaa
jo
and
pop
repnz
xor
addr16
flds
shl
movsb
ret
inc
bswap
xchg
repz
mov
dec
mov
decl
loope,pn
push
int
js
dec
cmpl
xchg
or
mov
js
adc
sbb
xor
adc
icebp
adc
sbb
cmp
or
fstpt
fs
js
add
adc
xor
or
dec
je
adc
mov
adc
mov
xchg
adc
sbb
data16
shrl
xor
fst
test
stos
js
xchg
mov
inc
incl
aaa
loope
aad
xor
push
adc
mov
pop
sub
xchg
pop
fsubs
xchg
outsl
xlat
cmp
pop
pop
xor
adc
iret
dec
push
lea
addb
pop
cmp
in
popf
outsb
push
cmpb
adc
or
add
fisubs
xchg
push
cmp
jg
and
xor
sub
je
push
jne
cmp
jecxz
lea
loopne
hlt
sub
lock
xchg
mov
sbb
iret
test
push
xchg
movsl
lea
jmp
sarb
mov
jo
insb
int
mov
push
add
sbb
jb
pop
jo
xor
pop
pop
adc
xchg
push
jne
push
adc
push
push
imul
mov
and
mov
movsb
dec
mov
mov
pop
sti
inc
mov
imul
jnp
mov
lea
add
jne
push
inc
jle
jbe
pop
xor
add
sub
adc
lahf
mov
jae
clc
sbb
xchg
stos
add
push
ja
adc
dec
mov
push
pushf
movsl
repz
adc
add
dec
or
dec
loope
mov
push
cmpsl
push
sbb
or
jl
sub
hlt
data16
xor
test
jle
sti
sbb
inc
test
sub
addb
jne
mov
sub
jge
adc
imul
jnp
lret
jb
sbb
pushf
mov
and
mov
sub
dec
pop
mov
inc
das
jo
adc
je
insl
ljmp
rcll
pop
push
sbb
and
int3
xor
dec
lret
sub
adc
jl
out
cmp
sbb
inc
push
and
lea
lret
inc
push
cltd
imul
xchg
popf
xchg
sub
jb
dec
and
inc
mov
mov
jae
mov
xor
test
jmp
out
or
and
and
shll
mov
dec
jl
jne
dec
adc
roll
add
repz
test
sbb
add
push
nop
cmpsb
adc
mov
push
into
adc
push
and
and
push
pusha
add
pop
add
mov
mov
inc
or
mov
cmpsl
push
xrelease
rcr
dec
sti
cmc
lea
jg
std
outsb
push
cmp
repz
lret
sub
loopne
shlb
sbb
imull
cmp
scas
xchg
cltd
out
frstor
ja
push
push
add
cli
sbb
and
pusha
addl
loope
or
mov
pop
sbb
mov
pushl
pop
popf
movsl
sub
jns
sbb
fwait
or
xchg
jo
loope
daa
mov
push
push
pavgw
dec
jle
sub
push
xor
push
ja
loop
xchg
xor
repz
push
mov
push
dec
inc
andl
push
sbb
adc
cmp
add
test
push
jno
push
add
dec
mov
cltd
jno
jno
adc
mov
push
bnd
sub
push
adc
and
inc
leave
and
je
push
leave
sbb
mov
cwtl
pop
adc
sbb
pushf
nop
ret
dec
dec
push
sbb
es
std
and
cmc
mov
inc
das
adc
testb
mov
and
push
push
je
cmpb
imul
fstl
pushf
inc
xor
pop
and
add
lcall
mov
add
and
test
push
enter
inc
daa
adc
scas
aad
rolb
loope
loopne
cmpl
push
dec
mov
jne
shll
lea
gs
cs
or
mov
aad
push
dec
aad
lods
xchg
inc
push
xor
or
dec
into
or
xor
mov
sub
mov
mov
push
xchg
sub
push
cmp
sbb
push
sub
sub
add
arpl
rolb
add
subl
pop
cmpsb
or
sbb
test
sub
dec
lcall
and
push
xchg
dec
sahf
jg
push
push
jb
and
jns
lcall
mov
stos
sbb
inc
fwait
or
dec
mov
cmp
dec
js
add
scas
out
xchg
sbb
nop
jo
insb
adc
jle
and
xchg
mov
and
inc
pop
dec
adc
cmp
mov
fwait
dec
repnz
adc
mov
inc
push
leave
dec
or
and
inc
cld
inc
ljmp
sbb
jl
sub
inc
rorl
push
cwtl
inc
sub
push
gs
dec
into
fbstp
jl
push
push
xchg
insb
mov
dec
xor
rolb
in
leave
movsl
add
outsl
sub
out
inc
and
adc
add
add
push
xchg
pushf
dec
xor
xor
or
leave
xor
in
xchg
test
cmp
cmp
arpl
mov
enter
insb
hlt
ds
or
nop
add
inc
outsl
sbb
pop
daa
or
jb
push
aaa
xchg
add
mov
sub
aad
pop
nop
iret
add
xor
mov
and
inc
sub
sub
aaa
dec
sbb
cmp
sub
sub
dec
pop
sub
ficoms
mov
popa
int3
inc
sub
aad
stos
inc
pop
outsl
mov
mov
cmp
push
mov
orl
enter
sbb
add
adc
dec
aam
or
jo
pusha
test
leave
dec
xchg
or
add
fnstenv
xchg
ja
inc
push
adc
andb
or
xchg
or
add
cmp
add
adc
xor
xor
test
dec
inc
push
jecxz
push
and
iret
sub
mov
aad
jge
push
mov
inc
inc
push
and
arpl
pop
mov
andl
push
xor
cmp
cmp
stc
ret
popf
adc
inc
fwait
in
mov
and
and
inc
pop
sub
cwtl
aaa
xor
inc
ljmp
addb
push
dec
push
adc
push
leave
push
jb
adc
sbb
inc
adc
lahf
adc
xchg
pop
shll
adc
adc
and
mov
inc
stos
adcb
add
cmp
or
sbbb
jle
add
inc
dec
sbb
or
cmp
add
push
add
sub
stos
sub
lret
sbb
mov
mov
xchg
stos
and
cmc
test
inc
xchg
and
and
in
dec
xor
nop
or
pop
insl
sbb
clc
and
mov
jno
add
add
pop
popa
dec
inc
popa
xor
mov
mov
loopne
push
inc
push
mov
aad
cmpsl
cs
mull
mov
in
jae
and
pushf
mov
xor
ds
fstpl
push
or
inc
and
aad
sub
dec
push
lods
xchg
inc
pop
push
push
jb
repnz
and
dec
mov
clc
xchg
mov
dec
pop
dec
xor
pusha
outsl
adcb
loopne
les
and
xchg
dec
sbb
insb
mov
push
loope
sbb
sahf
shlb
inc
insb
loope
sbbb
or
mov
test
mov
cmp
push
daa
and
shll
mov
dec
fs
cltd
dec
mov
pop
and
add
insb
lds
sbb
push
xchg
dec
dec
xor
and
sbb
cmp
test
add
and
or
nop
enter
stos
loopne
inc
push
mov
inc
test
add
test
imul
add
mov
inc
or
push
push
push
push
hlt
pop
sahf
sahf
xor
inc
push
add
sub
subb
mov
push
jmp
roll
rcr
or
adc
loope
cmp
bswap
rclb
jne
test
push
femms
hlt
add
push
pop
add
pop
sub
lock
add
push
inc
pop
push
pop
push
add
push
and
cltd
adc
push
add
mov
inc
hlt
push
add
push
adc
leave
or
insl
add
test
pop
sbb
orb
das
pop
add
push
outsl
add
inc
dec
dec
adcb
fisttpll
or
xchg
cmpsl
and
pop
lcall
rcrb
aam
xchg
inc
sbb
movsb
negl
mov
fldenv
jno
pop
movsl
or
cmpsb
jl
lcall
movsb
pop
push
xchg
pop
in
xorl
ret
and
pop
dec
dec
outsb
movsb
inc
sub
test
testl
daa
adc
fs
cmp
dec
and
movsb
add
pop
les
lods
shlb
inc
sahf
fdivs
or
in
daa
adc
fcomp
xchg
push
or
ds
imul
dec
jl
xor
push
push
les
enter
loopne
call
xchg
mov
mov
push
aam
stos
cmp
js
push
jns
subl
xchg
xor
ror
xchg
ljmp
repnz
and
and
and
or
and
shl
loope
jmp
cmp
loop
test
sbb
adc
aaa
iret
push
xchg
sub
adc
test
outsb
adc
mov
inc
mov
xchg
dec
dec
inc
je
pop
pop
es
rcr
xchg
push
dec
jle,pt
nop
loopne
int3
or
mov
cmp
xchg
add
mov
rcrb
fsubrs
sbb
jb
cmpsl
cltd
xchg
sbb
es
jb
mov
xchg
test
movsb
xchg
sbb
mov
xchg
cmp
in
add
xor
and
lea
and
and
xchg
and
es
sahf
or
add
daa
rorb
add
mov
sub
sub
sub
lods
sbb
mov
and
adc
mov
sub
jo
lods
and
orb
xchg
lret
jae
jmp
pop
adc
dec
loope
mov
fdivs
std
jge
mov
in
pop
mov
test
jne
sbb
mov
sub
dec
js
sub
mov
pop
xchg
loope
dec
and
or
inc
sub
add
xor
adc
xor
mov
test
rcrb
inc
xor
sub
or
or
imul
mov
jle
pop
sbb
jbe
sub
add
xchg
xor
push
jo
push
and
xlat
pusha
popa
add
add
push
push
sub
mov
sti
cmp
mov
xor
lea
push
push
fs
or
mov
and
addr16
inc
sub
hlt
sbb
dec
cld
pop
or
push
sub
add
mov
mov
sbb
or
test
jg
and
and
add
or
push
popa
pop
push
aaa
push
rcll
jp
ss
or
dec
dec
cwtl
out
lahf
inc
dec
and
cmp
mov
cmpb
cmp
sub
and
and
movsb
dec
cmp
and
mov
pop
jns
push
icebp
insb
mov
jno
xor
ds
jne
sarl
mov
aaa
lock
push
arpl
dec
leave
and
movsb
cld
cld
movb
cmp
out
add
call
mov
inc
roll
mov
stos
movsl
rorl
cmp
xchg
mov
arpl
out
adc
push
push
dec
mov
in
cmp
or
out
and
mov
arpl
xor
repnz
inc
push
mov
enter
dec
cmpb
pushf
lea
add
cmp
cmp
push
dec
aaa
test
cmp
and
cmp
mov
shrb
mov
aas
inc
into
xchg
aam
lea
fwait
stc
and
out
pusha
mov
mov
sbb
and
lods
push
and
jb
add
insb
mov
mov
fbld
xchg
out
lcall
test
adc
movsl
sarb
push
js
jmp
outsb
adc
inc
test
insb
adcb
rcll
ds
faddl
adc
xchg
xchg
pusha
or
sub
lods
jmp
leave
add
mov
aam
xor
imul
or
aam
rorl
push
cmp
ret
fs
mov
bound
dec
push
pop
sub
or
cli
andb
cmpl
lock
dec
push
adc
add
dec
dec
mov
test
cmp
dec
call
bound
add
and
outsb
fisttps
xchg
das
imul
add
in
mov
movsl
loop
punpckldq
add
jno
push
inc
dec
shlb
addr16
xchg
addb
sarb
or
lsl
or
lds
or
adc
and
mov
add
and
adc
dec
ret
mov
int
push
and
dec
add
and
ret
sbb
pop
or
and
cs
adc
pop
push
push
mov
sbb
aaa
inc
xchg
and
fs
mov
push
add
punpckhbw
sub
rcl
jbe
cltd
push
mov
xchg
inc
movsl
cmpsb
or
inc
aaa
hlt
dec
mov
or
lds
data16
pop
lds
inc
push
add
das
mov
add
xchg
pop
sbb
adc
or
push
sbb
dec
mov
mov
pop
dec
lahf
outsb
xor
fwait
js
popl
add
xor
in
es
pop
enter
mov
adc
dec
shrl
xchg
dec
int3
mov
lods
push
int3
aad
mov
sub
sbb
pop
jg
mov
scas
or
gs
fisubs
push
out
xor
dec
jns
iret
aam
cmp
pop
pop
adc
jge
leave
and
sahf
xchg
adcb
in
fistpl
xchg
push
sbbl
pop
or
sbb
pushl
xchg
orl
push
dec
xchg
sub
and
mov
pusha
push
sub
mov
popa
and
xchg
xor
mov
ret
notb
movsb
mov
mov
pop
cmp
or
dec
out
mov
imul
leave
pop
xor
je,pt
push
leave
mov
insb
adc
je
cmp
adc
xor
test
sbb
xchg
data16
sub
inc
push
es
or
jbe
and
inc
dec
cmpl
xor
cmp
add
pop
and
or
pop
or
mov
and
ret
test
add
jl
and
xchg
add
mov
jmp
push
sahf
scas
pop
mov
shlb
or
push
jbe
and
cld
loope
jno
xchg
adc
js
dec
jle
xlat
sbb
push
cmp
sub
sub
xor
cmp
pop
into
push
leave
xchg
sbb
mov
mov
cmp
scas
sub
out
popf
xchg
hlt
pop
dec
cmp
and
gs
add
fnsave
and
jmp
add
sbb
add
testl
lea
inc
push
xchg
xchg
iret
mov
sub
mov
push
test
push
pop
and
xlat
ret
xor
jo
jno
les
out
je
sbb
gs
jmp
les
cmp
and
sub
jne
jo
push
adc
adc
xor
mov
pop
pop
cmp
pop
dec
mov
in
aas
dec
jns
es
ret
stos
push
daa
popf
jb
dec
mov
push
jbe
inc
mov
inc
andb
add
pop
push
jo
movsb
int
cmp
mov
sbb
sub
addl
add
lcall
pop
in
popf
or
sbb
sub
nop
nop
add
lods
sub
xchg
rorl
cmp
sbb
js
movsb
ret
pop
out
add
push
test
sbb
fwait
bound
leave
dec
xor
rcll
or
cmp
testb
jne
push
pop
nop
xchg
xor
inc
bound
jo
mov
dec
mov
cmp
xchg
or
inc
lea
inc
add
mov
lds
adc
inc
xchg
mov
xchg
or
movsl
les
dec
xchg
jl
inc
cmp
call
push
and
imul
mov
sub
mov
leave
test
inc
xchg
mov
mov
mov
data16
rclb
adc
or
sbb
arpl
inc
sbb
dec
mov
and
aas
rclb
jge
sub
or
xchg
cmp
sub
add
add
movsb
mov
add
fsubl
add
pop
pop
lahf
mov
push
sub
xchg
xchg
dec
push
imul
shlb
adc
fwait
adc
dec
adc
adc
aaa
adc
or
sbb
adc
add
xchg
mov
adc
or
xlat
rolb
xchg
add
add
push
hlt
and
inc
cmp
test
add
add
pop
add
push
sbb
std
jl
in
add
mov
xchg
imul
adc
xor
add
adc
and
add
push
ret
xor
add
xchg
jle
imul
and
inc
add
in
mov
aas
push
push
pop
mov
loope
shll
mov
add
lods
dec
mov
and
les
mov
mov
sti
pusha
or
add
sub
ja
and
sub
cmp
jb
mov
mov
jmp
add
roll
xor
cmp
lret
add
push
ss
test
fildll
aam
clc
mov
fdivs
mov
add
adc
push
or
push
arpl
ret
or
mov
push
test
pshufw
stos
inc
lahf
sbb
mov
imul
add
cmp
mov
dec
lds
add
sbb
inc
jge
pop
pop
and
add
push
pop
pop
pop
pusha
flds
and
adc
dec
fs
ss
mov
insb
fstps
sub
mov
adc
pop
add
mov
sahf
or
lods
sub
and
adc
sbb
add
and
adc
add
or
sub
cld
hlt
cmp
out
fildll
push
mov
add
add
aad
add
xlat
js
sub
fcomps
pop
mov
push
add
repnz
adc
mov
sbb
xchg
cld
sub
jbe
mov
movsl
in
mov
mov
adc
movsb
stc
pop
pop
sub
push
insb
add
sbb
push
or
call
ljmp
inc
pop
pop
pop
in
pop
lea
inc
and
cmp
sti
lods
xchg
adcb
aas
movsb
xor
vmovaps
addb
xor
fildll
lock
mov
jle
jbe
mov
lea
mov
fistpl
nop
insw
mov
sbb
cmp
mov
sbb
das
push
insl
xor
xchg
mov
mov
outsl
rolb
loopne
insb
add
mov
and
fdivl
fadd
imul
jb
or
out
mov
mov
xchg
shrl
movsb
fsub
dec
mov
xchg
push
mov
mov
and
sbbl
imul
xchg
arpl
add
push
or
push
sahf
dec
adc
xchg
lods
addr16
sbb
push
adc
mov
jno
add
mov
jecxz
insb
movsb
mov
sbb
addr16
pop
push
push
mov
adc
or
cmp
dec
or
movsb
push
adc
mov
mov
add
negl
or
test
inc
add
in
out
loope
inc
or
enter
shll
notb
lahf
inc
sub
dec
pop
push
mov
or
push
lea
push
inc
add
jp
dec
pop
out
loop
sbb
rcll
mov
and
jl
pop
into
out
adc
aas
add
mov
sti
cmp
jne
cmp
je
cmp
je
cmp
je
cmp
je
push
shlb
iret
inc
cmp
jno
cmp
aaa
clc
repnz
mov
dec
hlt
jne
in
mov
add
and
add
dec
shl
xchg
dec
mov
cmpb
xor
aad
insl
test
dec
insb
dec
stos
inc
data16
loope
push
xchg
xor
push
adc
and
sub
mov
orb
jno
in
adc
popf
add
adc
icebp
into
rorl
frstor
push
xor
shll
push
jo
and
add
add
adc
and
rcll
lock
push
inc
pop
out
xor
test
loopne
lret
adc
push
cmp
out
xchg
sbb
xchg
mov
mov
lods
lock
cmp
sarb
jecxz
pop
nop
push
lock
mov
cmpsb
mov
push
xor
or
aam
xor
addb
enter
aam
cmp
dec
aam
lret
xchg
inc
mov
mov
sub
sbb
in
movsb
movsl
sarb
mov
xorl
sbb
lcall
js
dec
and
js
or
jg
and
xor
pushf
clc
mov
loope
mov
inc
xchg
jmp
pop
das
sahf
sbb
gs
adc
xchg
inc
push
scas
sub
inc
stos
loopne
mov
jne
jb
dec
dec
lock
xor
push
mov
jne
cmp
loope
ret
add
popf
gs
and
jo
in
pop
pop
xchg
pop
jl
and
push
mov
dec
stos
lock
xor
lock
mov
pusha
adc
pop
dec
in
xorl
jmp
adc
aaa
pop
mov
xchg
sbb
inc
dec
jne
nop
hlt
push
push
jmp
jmp
xchg
and
and
mov
loopne
and
pop
add
aam
push
push
push
push
dec
daa
dec
les
dec
test
lock
nop
jo
cmp
test
jmp
dec
fwait
out
mov
out
mov
test
les
mov
mov
cli
enter
jne
loop
js
jns
cmp
inc
popf
sbb
xlat
push
aas
outsl
push
mov
bound
adc
xor
xor
adc
push
dec
xchg
inc
mov
inc
sub
mov
push
call
xchg
pop
mov
add
in
mov
clc
les
push
inc
mov
sbb
mov
aam
mov
xchg
inc
aam
sub
inc
inc
rclb
sbb
push
pop
int3
inc
sub
aas
sarl
out
xor
int
test
or
add
mov
jo
rcr
outsl
or
push
jp
rcrl
divb
clc
jge
and
mov
es
add
in
mov
or
popf
xchg
or
mov
out
and
mov
cmp
cltd
inc
out
movsl
mov
out
push
call
mov
jne
cmp
je
mov
scas
mov
in
jne
dec
fcomp
nop
cli
insb
adc
jle
xor
mov
xchg
ljmp
jnp
jbe
shr
cld
jbe
cmp
xorl
xor
pop
or
and
and
push
sbb
jno
sbbl
sti
imul
movsb
pusha
movsl
dec
pushf
mov
adc
cwtl
jbe
hlt
cmp
mov
lar
pop
mov
inc
add
outsb
add
subl
dec
call
sbb
add
clc
jnp
lods
or
pusha
dec
xchg
pop
xchg
movb
xor
dec
pop
push
or
pop
mov
and
adc
sub
xchg
stc
jns
out
sub
jle
jmp
pushf
test
inc
repnz
sbb
mov
cmp
pop
jmp
mov
test
sbb
pop
mov
mov
xchg
or
sti
lahf
xchg
or
push
pop
movl
movsb
sub
mov
insl
mov
pop
sub
maxps
clc
adc
pop
mov
stos
orb
push
test
fidivl
mov
insb
ljmp
add
loopne
hlt
or
xor
sbb
lea
bound
je
ss
cmp
jg
push
inc
arpl
lahf
adc
add
mov
and
inc
stos
or
mov
fbld
insb
add
dec
out
add
adc
push
les
lea
add
jl
xchg
xchg
sub
sbb
inc
sbb
pop
cmpl
adc
add
imul
sub
adc
outsb
push
and
jecxz
mov
add
inc
and
add
mov
jl
inc
aam
xlat
xor
sub
xor
nop
orb
jnp
and
mov
sbb
sar
jbe
pop
adc
fcoms
stc
push
outsb
insb
or
add
ret
ljmp
xor
jne
loope
test
cmpb
add
mov
jge
jne
mov
std
push
cmp
jne
int3
jns
push
sbb
pop
dec
cmpsb
pop
mov
pop
and
push
mov
sbbl
mov
lea
lahf
test
daa
add
test
add
adc
or
mov
sbb
inc
cs
addb
or
push
push
gs
xchg
xor
scas
lcall
inc
jb
inc
pop
lahf
and
xor
fs
js
jae
popa
sbb
inc
mov
loopne
mov
dec
addr16
outsb
imul
pop
jo
js
inc
scas
mov
xchg
mov
roll
and
xlat
and
jg
test
loope
mov
enter
xchg
addb
and
push
mov
cmp
lods
cld
adc
push
pop
cmp
mov
push
rclb
adc
inc
inc
mov
mov
jae
push
stc
data16
pop
inc
jnp
faddl
jle
adc
test
ss
pop
xor
bound
lea
dec
adc
mov
sarl
daa
ss
icebp
push
push
in
sbb
add
mov
push
push
pusha
scas
sbb
inc
add
movb
xor
and
sbb
and
add
pop
lea
add
pop
inc
pop
xchg
data16
jmp
out
mov
push
xchg
addb
gs
add
inc
cmp
inc
xchg
push
pop
fiadds
inc
shrb
xchg
sahf
jl
or
sbb
lcall
inc
dec
add
push
xchg
sahf
btc
out
imul
adc
add
rorb
out
lret
call
mov
fbstp
adc
xchg
movsb
add
jle
pop
inc
add
add
add
pop
cmp
loopne
cli
lcall
xor
jne
add
push
jp
jo
and
jnp
sbb
inc
ljmp
into
adc
rcrl
sbbl
xor
push
jo
add
mov
lahf
push
xlat
xchg
into
and
lock
ljmp
mov
cmp
jne
test
je
mov
cmp
push
shrb
add
call
mov
inc
mov
fsubs
aad
jne
cwtl
nopl
hlt
jg
jbe
loopne
inc
pushf
push
pop
or
sub
pop
sub
rolb
xor
mov
push
xchg
jb
xchg
adcb
mov
aad
or
add
mov
dec
das
push
nop
cmp
bound
mov
scas
lcall
lret
mov
jge
mov
repz
adc
loopne
jbe
or
add
dec
shrb
jmp
jge
arpl
or
fists
adc
dec
add
xlat
sbb
pop
outsb
add
mov
dec
push
add
addb
or
je
add
mov
sub
sbb
nop
or
andb
cmp
into
xor
or
lock
loopne
mov
cmpsl
in
mov
mov
inc
xor
and
pop
sub
imul
pop
jmp
push
add
cmp
add
mov
rclb
push
push
xchg
aam
sbb
cmp
mov
sub
xchg
cmpsl
add
xor
xor
pop
testl
sub
stc
inc
xor
shrb
adc
push
adc
cmp
push
cmp
in
add
mov
xor
cmpsl
add
xchg
inc
out
xchg
popa
mov
pop
sbb
dec
push
push
cmp
mov
sbb
mov
dec
hlt
out
into
or
aas
fucomp
lcall
sub
push
pushf
xchg
scas
ds
aam
dec
or
mov
cmpsl
or
add
jge
xchg
adc
pop
in
or
adc
sbb
or
imul
push
add
pusha
push
or
add
cmp
loopne
add
push
push
sub
dec
sbb
push
add
pusha
ja
and
pop
ror
cmp
jl
add
and
xor
pop
xchg
jno
orb
and
mov
inc
cmp
test
ret
and
ret
stos
arpl
fldcw
pop
lods
icebp
fadds
loopne
les
in
rcll
mov
inc
outsb
jecxz
in
add
pushf
shll
icebp
dec
std
xchg
or
gs
xor
push
and
adc
fs
mov
push
rcrb
mov
orl
mov
and
jmp
imul
push
in
arpl
mov
inc
ljmp
mov
call
sub
shll
shr
push
dec
movzwl
dec
into
pop
icebp
pop
cmpl
push
setl
movzbl
dec
jl
in
shll
push
push
push
mov
inc
mov
insb
dec
sub
incb
mov
sbb
adc
push
add
adc
pop
cmp
mov
sbb
je
in
ljmp
push
push
push
shl
mov
cs
mov
test
inc
push
or
mov
gs
jmp
or
cld
or
sbb
dec
arpl
mov
push
cmp
mov
sbb
adc
lcall
xlat
adc
jb
dec
push
and
push
dec
andb
sbb
sub
les
rorb
adc
and
fisubs
sub
sub
call
pop
add
sbb
nop
or
sbb
adc
adc
sbb
adc
mov
inc
addb
and
test
ficomps
or
repz
push
rcll
movsb
add
cmp
sbb
leave
shlb
dec
push
xor
cmp
and
ret
jge
and
mov
push
push
and
sbb
dec
mov
mov
sbb
es
sahf
xor
cs
faddp
in
cmp
cmpsb
dec
sahf
xor
mov
pop
inc
jno
xor
xorl
mov
mov
xor
mov
sub
popf
movsl
jno
adc
add
aam
or
dec
sbb
in
xor
rcrb
nop
faddl
adc
or
push
xor
push
push
jp
sarb
xchg
test
leave
mov
add
or
mov
or
sbb
jg
cmpsb
mov
add
sbb
sub
jle
xor
test
lock
fwait
dec
loopne
fsts
cmpsb
sbb
mov
sahf
inc
sahf
ds
dec
ss
dec
je
sbb
cs
lock
das
xchg
ljmp
cmp
or
jbe
pop
fdivrs
sbb
sbb
or
and
add
push
push
or
cmp
mov
sbb
push
adc
fsubr
dec
mov
das
dec
jg
test
inc
sbbb
sub
pop
scas
mov
xor
sub
inc
cmp
sarb
pop
pop
testb
and
sub
imul
or
mov
int
pop
lea
cmp
movq
test
out
cmpb
xor
xchg
shlb
push
sbbl
adc
icebp
push
sbb
sbb
insb
lcall
getsec
adc
mov
arpl
push
mov
sub
and
pop
push
ffree
add
sub
push
cwtl
sbb
adc
jmp
jo
mov
dec
arpl
sbb
cmp
add
inc
adc
sbb
mov
inc
inc
orb
data16
dec
rclb
push
ljmp
pusha
sub
jns
xchg
aaa
xchg
decl
push
cs
and
inc
jb
aad
test
adc
adc
inc
addb
sub
les
mov
inc
out
orl
andl
sarl
sub
and
and
push
mov
xor
cwtl
xchg
push
or
bndldx
scas
jle
xor
scas
mov
pushf
push
push
push
adc
dec
scas
jnp
imul
fcom
xchg
lea
xor
push
mov
test
outsl
sub
push
jl
imul
popa
lods
test
jg
push
jb
je
mov
mov
mov
pop
daa
pop
adc
jle
push
jg
sub
stos
jmp
shlb
int
xlat
adc
out
jg,pt
inc
add
mov
xchg
add
adc
pop
cmpb
pop
mov
xor
sub
mov
repz
fisubrs
aas
push
imul
adc
jp
andl
inc
sbb
sub
test
cmp
inc
mov
add
pop
add
imul
push
mov
sub
test
xor
pop
or
cmpl
jns
xchg
rol
mov
daa
pop
xchg
xchg
aad
adc
or
fisubrl
enter
adc
ds
std
jo
or
inc
pusha
fbld
mov
movsl
dec
dec
wbinvd
or
add
adc
popf
rclb
xor
nop
or
add
sbb
mov
jl
xlat
imul
xlat
inc
add
inc
dec
sub
sub
mov
shlb
cs
dec
cltd
inc
push
xchg
test
and
add
pop
rcrb
dec
ret
push
push
dec
ljmp
loopne
rol
or
mov
dec
xor
fucomp
xchg
dec
lods
or
sbb
mov
jno
popa
loop
popa
adc
and
in
leave
inc
jg
jg
push
jne
sub
mov
out
into
cmpsl
jb
dec
in
mov
push
inc
je
lea
enter
lret
add
pusha
orl
mov
pop
xchg
rcll
xorb
sbb
jo
inc
mov
mov
cmp
lock
mov
add
or
pop
lahf
push
push
cmp
xor
iret
xor
dec
jl
cmp
movsb
fstps
data16
sub
addr16
enter
test
dec
add
repnz
aas
mov
test
push
push
das
imulb
mov
int3
rcll
dec
daa
fisubs
jo
stos
ret
test
pushf
mov
push
or
jae
add
cmp
icebp
inc
aad
mov
sbb
push
mov
scas
leave
pop
push
pop
inc
dec
and
jp
mov
adc
cmp
adc
pop
popa
mov
stc
inc
or
aaa
inc
push
or
and
jmp
insb
push
mov
pop
lods
xor
add
pop
xor
sahf
mov
cmp
jmp
mov
and
pop
pop
push
mov
aaa
shlb
cmpsl
mov
das
push
jp
fildl
inc
jns
cmp
dec
push
and
shlb
and
jb
add
cs
dec
scas
push
cmp
fnstcw
fwait
cmp
mov
dec
dec
outsl
mov
push
push
addl
into
inc
or
pmaxsw
dec
inc
lahf
js
inc
daa
xor
rcrb
inc
sbb
je
push
mov
push
xor
cld
shl
cs
cmp
pop
push
mov
sub
pop
adc
cmpb
je
or
inc
pop
cltd
cmp
add
adc
ja
sbb
inc
push
xchg
xchg
sbb
sbb
pop
jge
jne
dec
gs
dec
xlat
or
and
or
push
and
mov
mov
cwtl
out
lret
mov
jmp
sarb
add
jne
repnz
ret
jne
mov
pop
add
aad
lret
lods
int
filds
sub
movb
push
std
inc
lcall
jl
jle
movsb
decl
jl
hlt
push
push
repz
pop
clc
std
shrl
add
clc
jle
add
sti
je
cmpb
dec
push
mov
mov
push
js
inc
fimull
movzbl
push
push
out
outsl
or
inc
div
jle
es
adcb
pop
aad
std
push
jo
nop
sub
dec
test
pop
shrb
and
push
popf
movsb
push
dec
stos
jb
jae
add
mov
lahf
or
nop
icebp
icebp
nop
outsb
shll
out
cwtl
or
pop
or
push
push
es
sub
cld
pop
jl
pop
ret
test
sbb
mov
inc
dec
enter
sub
out
inc
loopne
mov
ret
div
cwtl
cs
sub
jl
mov
pop
mov
dec
ret
pusha
ret
and
rclb
fimull
cmpsb
rclb
pop
or
cs
inc
cmp
jmp
mov
xor
mov
xor
sbb
pop
mov
mov
mov
and
cmpsb
icebp
mov
popa
jl
clc
and
push
je
call
cmp
add
cmp
mov
and
xor
jb
push
push
shl
inc
outsl
mov
sub
icebp
inc
add
adc
das
psadbw
add
mov
or
mov
fwait
jp
add
stos
out
mov
pop
inc
aaa
fnstsw
push
inc
mov
cmpsb
jge
push
and
sbb
push
int
adc
adc
mov
outsl
clc
mul
seto
aaa
neg
or
test
adc
outsl
out
push
jmp
mov
mov
jne
jp
subl
and
add
adc
jo
subb
xor
lods
movsb
inc
sbb
jmp
mov
push
cmp
pop
or
xor
and
jae
sbb
insb
test
mov
xor
sub
adc
inc
sti
in
pop
loope
daa
xchg
jns
and
sub
outsb
sub
push
push
cwtl
pop
inc
pop
mov
cmp
xor
dec
je
in
or
out
and
mov
add
mov
mov
and
cmp
lea
bound
jb
faddl
ret
push
dec
cmp
xor
pop
mov
jnp
in
push
test
mov
add
or
insb
mov
imul
add
inc
fldcw
jl
mov
imul
int
mov
adc
loope
aad
inc
cmp
or
cmp
xchg
dec
pusha
push
inc
mov
inc
and
adc
pop
stos
movsl
loope
pop
add
cmp
jb
push
inc
loopne
xchg
rclb
push
and
shll
pop
inc
rol
loop
shll
hlt
fdivrl
push
sub
push
ss
inc
pushf
imul
ret
adc
data16
adc
push
in
mov
adc
adc
movsb
mov
pop
ja
dec
or
cmpsb
push
fcompl
pop
hlt
push
mov
clc
cmp
jbe
or
dec
shrb
dec
out
xlat
mov
inc
aas
push
adc
fbld
add
or
mov
and
jae
jge
xchg
mov
and
jne
pop
mov
or
lret
std
cmpsl
mov
inc
adc
add
cmp
les
loop
pop
fmulp
lret
leave
iret
mov
lahf
dec
add
sbb
sub
fmuls
push
std
jno
aad
dec
inc
sbb
jae
movl
aaa
fdecstp
xor
pop
cli
push
adc
je
cmpsl
hlt
add
jae
inc
movl
pushf
jnp
adc
cmpl
fstps
cwtl
jae
sub
es
cmp
jne
pop
cmp
mov
or
push
dec
or
xchg
dec
or
dec
dec
inc
jb
loopne
cmpl
cmp
and
xchg
sarb
addr16
add
jecxz
call
cld
add
gs
inc
cmp
pop
fsubl
push
jp
call
pop
jecxz
sub
lods
gs
push
cltd
push
jmp
mov
xor
lret
cmp
jb
add
cwtl
dec
fs
aad
push
pop
xor
push
lea
iret
jo
enter
mov
inc
or
lock
clc
add
or
push
adc
data16
push
adc
cwtl
js
and
outsl
loopne
adc
add
push
push
es
mov
xchg
cwtl
xor
push
mov
push
call
fsubs
and
ds
xchg
mov
mov
mov
scas
xor
lea
push
fs
lea
les
or
cs
adc
cmp
lock
rorl
push
punpckhdq
pop
js
mov
xchg
icebp
lock
adc
xchg
cmp
std
push
test
lret
pop
je
push
dec
mov
pop
push
sub
loop
mov
or
loop
inc
xlat
ficoml
xchg
cld
mov
mov
je
sbb
mov
add
jae
push
fidivs
fs
and
lds
xor
jg
mov
loopne
adc
mov
pop
jmp
cmpsl
fsubl
jo
cwtl
je
scas
and
cmpl
pop
mov
cwtl
popf
mov
jmp
fistps
or
add
push
rorl
adc
fsubrl
xor
jne
dec
jae
shll
add
push
insb
xor
jg
mov
ret
das
adc
dec
mov
test
push
push
sbb
mov
faddl
and
scas
add
pop
cmp
ds
push
aam
inc
dec
je
test
sub
or
sub
jo
mov
pop
add
lahf
mov
mov
push
push
call
add
hlt
cmpl
clc
mov
push
cmpl
or
inc
add
xor
push
lock
inc
leave
pop
mov
aas
sub
pusha
pop
bound
clc
mov
push
shl
rol
in
inc
or
xor
call
dec
call
test
mov
jmp
xchg
add
imul
loopne
lea
push
push
mov
mov
bound
ds
push
shlb
mov
jbe
sub
repz
or
jp
adc
sub
mov
in
aam
leave
push
jmp
xor
push
jecxz
mov
sub
cld
mov
jl
js
push
or
pop
jmp
loop
dec
sub
andl
fidivrs
push
mov
add
push
mov
and
push
cmp
gs
sbb
in
pusha
sti
xchg
aaa
push
inc
incl
je
jmp
cmpsl
inc
push
sbb
xlat
sub
popa
push
push
sub
push
add
jle
pop
je
loopne
mov
sub
pop
fwait
cmp
mov
inc
rcll
or
push
adc
or
pop
cld
les
lea
movl
adc
pop
dec
adc
pop
xor
or
or
xchg
cmc
test
xchg
add
subb
lods
andl
xchg
mov
rorb
fcoml
mov
test
xor
sbb
lods
outsl
test
and
fsubp
mov
cmp
pop
aaa
cmpl
popf
push
and
das
add
pop
add
and
out
mov
in
sub
dec
inc
jbe
lock
out
mov
xor
repz
mov
mov
jl
in
cld
insl
loope
lock
jne
andl
addr16
inc
add
push
push
aaa
mov
out
push
pop
fstps
ljmp
enter
pop
xor
dec
aam
cmp
or
jp
cmp
adc
js
mov
add
add
leave
lock
subl
lea
movsb
lock
jb
mov
bnd
adc
test
call
out
fbstp
ja
insl
adc
add
decb
jmp
rol
int
add
hlt
inc
ret
hlt
aaa
xchg
cmp
jle
push
loope
dec
and
rorb
cmp
cmp
jne
jecxz
shlb
in
push
push
insb
das
mov
sub
cmpsb
mov
or
decb
pop
push
mov
cwtl
nop
pop
sbb
mov
or
inc
lods
mov
mov
rolb
sub
lahf
mov
push
add
pusha
int
popf
sub
and
push
test
or
pop
stos
aad
cmp
inc
lods
push
mov
mov
mov
scas
push
sbb
inc
rcll
lcall
pop
and
fcoms
pop
pop
ret
rorl
xchg
lods
adc
and
jnp
xlat
push
ror
and
cmp
pusha
inc
out
or
cmp
sti
mov
or
and
jae
out
scas
mov
jbe
push
movb
inc
bound
push
stos
add
cmp
pusha
inc
cmpsl
clc
sbb
imul
dec
add
xor
dec
or
add
pop
decb
cli
and
neg
and
out
pop
mov
jge
scas
mov
ds
push
cwtl
sub
inc
test
pop
mov
pop
in
xor
dec
jmp
dec
arpl
pushf
xchg
inc
loope
imul
mov
movzwl
mov
mov
sub
jg
inc
push
mov
into
pop
mul
xor
add
mov
shl
jp
add
xchg
shlb
push
pop
shrd
pop
int3
lcall
pusha
adc
hlt
in
ds
jnp
lea
je
pop
inc
pop
jbe
loopne
push
cmpsl
jns
push
jmp
adc
xor
bound
sub
push
inc
fsubrl
dec
pop
inc
pop
sbb
sub
or
lds
lcall
push
scas
into
pop
xor
adc
push
push
fs
pop
sub
adc
push
add
push
jge
push
xor
mov
loope
pushf
mov
imul
pushl
test
ret
data16
in
ss
adc
sbb
push
sbb
and
or
ss
sbb
pop
add
mov
or
jge
jno
sub
push
cmp
mov
push
data16
sbb
lea
aaa
mov
jmp
push
lods
push
sbb
lret
push
dec
enter
add
rcrb
cmp
push
push
imul
or
mov
rorb
mov
add
nop
loopne
xchg
je
into
or
mov
test
in
outsb
push
pop
adc
mov
lea
mov
mov
shlb
cmp
andl
adc
loop
or
dec
xor
adc
xor
fwait
mov
inc
lahf
mov
push
roll
clc
sub
jl
push
lock
add
and
or
jl
aaa
push
jge
leave
add
add
mov
cmp
je
jmp
cmp
mov
mov
or
cmp
xorb
mov
mov
jae
lea
pop
xor
or
inc
jl
and
icebp
mov
push
push
arpl
xchg
or
mov
in
in
lock
aam
imul
lea
sub
or
ss
fisubrl
nop
dec
fstpl
int3
xchg
xor
sbb
jae
shll
in
ja
ja
and
push
rclb
add
out
adc
clc
mov
rorb
in
pushf
divl
out
push
xchg
pusha
in
pop
sbb
adc
adc
or
shlb
jne
bound
jmp
mov
rcr
movb
movl
sti
or
cmpl
clc
dec
xor
insl
jne
jns,pn
das
outsl
inc
add
push
jae
arpl
out
repz
jne
push
push
je
inc
jge
fidivs
or
and
scas
mov
into
push
push
mov
inc
sbb
cmp
mov
cmp
dec
push
jo
out
pop
jp
pushf
repz
daa
mov
dec
cmp
popa
xchg
or
mov
push
test
int3
cmp
je
push
fidivl
inc
mov
mov
lods
add
cmp
jp
jb
sbb
xchg
nop
and
mov
loopne
movb
cmp
or
mov
add
in
push
or
jge
rcrb
jmp
push
pop
sahf
sbb
sti
xchg
rorb
dec
fisubs
dec
xchg
dec
imul
outsl
and
pop
push
sbb
and
push
sub
add
adc
xor
xor
cmp
push
cmp
call
xchg
ret
push
or
xor
fmuls
dec
loopne
adc
fisttps
les
fstpt
orl
je
mov
push
addr16
out
cltd
or
inc
xchg
sbb
mov
push
fstpl
or
mov
insb
inc
xchg
roll
shrb
adc
in
hlt
xor
aam
mov
das
sarl
ds
pop
es
ret
or
xchg
aam
add
inc
mov
lahf
adc
mov
push
outsb
or
add
cmp
shll
insb
jo
xor
xor
js
iret
iret
movsl
cltd
fmuls
fsubr
mov
or
cwtl
push
sti
or
push
mov
cmp
sub
out
ficompl
inc
mov
scas
sub
lcall
pop
les
idiv
mov
xchg
int
adc
in
xchg
add
data16
mov
cmpsl
movsb
movsl
shll
push
fadds
fs
daa
inc
jl
js
inc
push
fs
jo
fs
push
fs
inc
push
push
cmp
jbe
movsl
movsl
imul
pop
push
add
xor
sahf
ss
fwait
in
shl
out
movsb
leave
cmp
jne
adc
and
call
in
cmp
jne
mov
sti
xchg
push
push
xor
js,pt
mov
dec
pcmpeqw
lds
add
imul
adc
mov
jge
jecxz
add
sub
popa
add
leave
lods
cs
fcomip
inc
lret
xchg
fnstenv
movsl
iret
repz
jne
sbb
shll
mov
and
test
xor
xor
pop
cli
push
ja
mov
pop
mov
add
shll
mov
rorl
push
pusha
jl
mov
mov
aam
or
pop
cwtl
rorb
or
aaa
adc
rolb
xor
add
test
push
mov
adc
push
lods
push
cmc
iret
or
pop
mov
inc
shll
jo
xchg
jbe
call
shr
and
test
add
inc
enter
test
lock
add
jne
lea
add
pop
mov
dec
or
adc
cmp
push
xorl
adc
sub
sbb
mov
mov
add
test
out
add
pop
jp
das
or
decb
enter
repnz
out
add
iret
cmp
jmp
cmp
pop
in
clc
out
sbb
jnp
imul
fnstcw
add
insl
pop
jmp
adc
shrb
pop
mov
sahf
mov
ss
push
adc
sbb
je
icebp
jne
sti
mov
lea
xorl
inc
imul
sub
cmp
dec
sub
mov
scas
ja
mov
iret
push
test
cmc
js
jno
testb
mov
daa
ret
adc
shrb
shr
sbb
add
nop
mov
xor
dec
mov
clc
xchg
jbe
add
rorb
movsb
push
jmp
jg
lcall
loopne
subl
dec
xchg
pop
into
lahf
push
inc
shlb
or
adc
lock
add
dec
sub
rolb
sub
add
xchg
add
arpl
inc
out
popf
sti
cmp
adc
pop
push
push
or
in
fdivrs
add
outsl
push
icebp
dec
subb
cltd
test
enter
pop
inc
or
mov
xchg
jmp
fcoms
lds
sub
cmp
sub
or
sbb
lea
or
fildll
insb
cld
or
jo
pushl
mull
sbb
fisttpll
dec
xor
lock
add
add
fdivrl
inc
notl
xchg
inc
js
shlb
sbb
lods
mov
daa
add
sub
test
mov
xchg
inc
inc
pusha
insb
insb
cmp
fs
dec
or
adc
lcall
ret
ja
inc
arpl
and
in
dec
jo
out
mov
je
cmp
je
sub
ret
imul
add
mov
and
cmp
je
lods
sahf
test
adc
imul
push
sub
inc
dec
add
lds
xchg
jmp
lea
rolb
repnz
dec
inc
xor
lock
andps
jne
lock
pop
and
cld
rorl
cmpsl
sub
dec
filds
push
push
adc
and
imul
fs
pop
out
dec
xorl
movswl
jbe
sar
jnp
mov
into
add
push
mov
jge
sub
lea
mov
sub
cs
cltd
jecxz
mov
leave
aam
adc
push
leave
inc
push
je
pushf
cmp
inc
or
orb
sbb
sbbl
inc
sub
push
jp
and
fs
and
sbb
adc
fisubrl
lock
sbb
adc
faddl
jecxz
outsb
pop
jo
subb
mov
inc
leave
js
push
sbb
bound
sbb
jns
insb
push
imul
jge
jne
push
mov
mov
inc
mov
dec
xor
xchg
cs
call
xor
push
aas
jne
outsb
and
dec
jnp
xor
xchg
add
insl
lds
divl
stos
or
int
sub
mov
add
sub
push
js
clc
outsb
test
sub
jo
cmp
je
jns
and
xchg
fmulp
pop
shll
cwtl
dec
push
lea
push
pop
cwtl
push
adc
nop
ret
add
lea
pop
sbb
sbb
dec
push
or
add
and
sbb
lods
rorb
lods
add
adc
xchg
fcoms
cli
subb
js
imulb
xchg
pop
xor
pop
rolb
or
inc
jne
push
roll
push
mov
push
fsubrs
mov
mov
pop
arpl
and
imul
shlb
loopne
add
shlb
sub
fcoml
loopne
hlt
inc
add
mov
and
lock
push
dec
xor
jbe
incl
mov
loopne
or
adc
ja
add
inc
lahf
mov
or
jge
sbb
pop
adc
jg
adc
test
mov
fdivrl
add
pop
lcall
pusha
pop
movsb
mov
inc
lret
inc
ljmp
mov
adc
and
nop
inc
fcompl
xor
fadds
pop
cmp
and
push
pop
in
fdivs
jecxz
lock
icebp
or
adc
xchg
cltd
icebp
adc
in
cmp
loope,pt
mov
xchg
sbbb
lret
aas
sub
sarb
out
pop
jg
fs
inc
adc
loop
dec
cmp
adc
nop
jecxz
loope
push
inc
insl
arpl
cmp
and
test
mov
jmp
mov
and
loop
nop
lcall
jmp
pop
in
jle
mov
and
jns
mov
repz
add
pop
jmp
pop
pop
and
in
mov
dec
jne
xchg
mov
movsl
add
idivb
je
mov
add
xor
cmp
dec
adc
movsb
jo
push
cli
mov
orl
popf
push
cmp
push
xchg
mov
lea
lods
mov
stos
and
and
mov
mov
pop
dec
or
ljmp
int3
add
les
popa
and
pop
aas
fsubrs
movzwl
pop
or
test
frstor
daa
jae
pushf
out
mov
push
repz
push
je
or
rcrb
jp
sub
or
adc
push
add
je
repnz
push
xor
out
jne
fisubrl
dec
mov
mov
das
jb
into
mov
add
adc
jg
push
dec
or
and
jl
aas
jns
dec
pop
fyl2x
std
outsb
inc
into
sub
stos
sbb
dec
push
sbb
cmp
jl
or
cmp
inc
mov
pop
add
jmp
xor
inc
scas
mov
orb
add
or
pop
add
xchg
movb
pusha
pushf
aas
push
jno
lcall
xor
or
xorb
mov
sub
push
nop
mov
lcall
xor
mov
lret
or
cmp
decl
pop
loope
and
cmp
add
xor
mov
stc
daa
jmp
addb
in
sar
lahf
insl
pop
addl
add
mov
mov
push
push
jo
xlat
orl
nop
push
mov
pop
cmp
ja
mov
adc
push
xor
push
or
ret
adc
push
ss
adc
add
and
xchg
fcoml
ret
mov
mov
lret
push
andl
jecxz
fbld
sbb
mov
sub
sub
cltd
aam
psubb
neg
and
leave
out
sbb
push
cmp
ret
dec
movb
dec
popa
movsl
adc
adc
je
add
cmpl
insl
inc
insb
js
lret
call
push
les
xor
and
push
push
addl
sub
push
inc
cwtl
test
enter
xor
pop
inc
xchg
dec
incl
loop
ljmp
mov
inc
outsb
jl
jne
mov
aas
sbb
inc
jmp
pushl
mov
cmp
lea
cmp
scas
in
out
jp
mov
in
push
ret
rcll
mov
mov
pusha
shl
ret
and
jbe
inc
pop
xor
idivb
rolb
andl
pop
and
jge
fidivrl
jl
andl
lods
enter
and
cmp
sbb
and
cs
or
jo
cwtl
scas
or
test
int
test
cmp
dec
xor
pop
sahf
push
xchg
in
xchg
xor
mov
xor
mov
je
lahf
add
mov
add
push
adc
cmp
jmp
cli
les
test
pop
mov
add
sbb
mov
jl
pushf
push
mov
sub
inc
dec
mov
sbb
xor
mov
push
or
call
sub
adc
sbb
add
xlat
shr
pop
add
inc
dec
insb
dec
sbb
pop
dec
adc
pop
inc
xchg
xchg
mov
adc
inc
add
daa
sbb
fdivs
insb
sbb
add
sbb
out
jmp
pop
cwtl
hlt
push
fnsave
mul
sub
test
sbb
cwtl
cmp
aam
lock
movb
xrelease
je
int
push
cmp
cmp
cmp
sub
xchg
xor
add
xorl
testb
je
cmp
mov
mov
add
idivb
or
dec
jl
loope
xor
jne
loopne
xchg
into
sbb
movzbl
push
or
or
mov
das
sbb
out
inc
xchg
inc
mov
mov
push
adc
inc
lret
lret
shrl
xchg
dec
in
sbb
add
add
or
jo
jbe
movswl
add
and
cmp
add
nop
add
test
pop
add
fdivl
add
add
mov
cmp
push
push
test
pop
pop
stc
je
inc
data16
scas
xchg
push
jne
enter
lret
filds
mov
adc
mov
add
xor
mov
or
movhps
cld
mov
sub
insb
ljmp
into
stos
and
shlb
add
pop
mov
mov
nop
jmp
in
mov
push
and
rcrl
dec
jnp
ret
pushf
pushfw
inc
xlat
adc
aad
pop
repz
test
rcl
mov
fdiv
fmuls
mov
jo
and
leave
lock
shlb
jbe
sbb
aaa
dec
push
jo
jmp
insb
or
mov
pop
and
pop
push
push
pop
cmp
mov
imul
inc
push
aad
sti
sub
and
dec
sbb
mov
or
add
cmp
sbb
jne
cmpb
xor
inc
out
cmp
mov
mov
pop
test
pushf
mov
cmpsb
jnp
xor
mov
add
pop
mov
xchg
and
sub
cmpsb
test
push
addl
sub
inc
cmc
faddl
cld
add
push
movsb
sub
je
mov
xor
add
adc
fisttpll
andl
loope
xchg
adc
pushl
inc
addr16
or
add
add
jl
cmp
into
add
xchg
movsb
loope
test
clc
test
xor
xchg
adc
or
or
scas
sub
xor
or
ds
push
mov
in
sbb
or
inc
cld
dec
cmpsl
mov
and
and
xor
cmp
mov
ret
sbb
jle
xor
cmp
pop
xchg
xor
sbb
fldl
add
or
sub
mov
xchg
orl
xchg
cmp
pop
mov
data16
imull
dec
push
push
or
adc
insb
add
int3
adc
pop
or
loope
mov
push
mov
xor
orb
cs
xchg
dec
jge
adc
sbb
add
jg
or
cmp
roll
idiv
mov
inc
pop
pop
mov
xor
cmp
scas
in
inc
and
sub
lea
loop
dec
repz
mov
shlb
sbb
sbb
ret
push
pop
and
aas
jp
bound
fdivl
loopne
call
ret
adc
jne
xchg
inc
cli
push
cld
jle
or
clc
xchg
clc
push
aam
aas
adc
movl
jbe
insb
shr
inc
add
arpl
sbb
and
add
push
jp
sub
sbb
std
sarl
insl
mov
decb
adc
push
popa
fcomp
out
add
xchg
adc
jb
les
sbb
lock
loopne
pop
lods
lock
cmpsl
bound
clc
inc
repnz
mov
and
push
sbb
push
pop
adc
sub
shlb
xchg
jne
add
jns
push
sbb
or
jge
out
das
fistps
mov
or
cmp
in
js
add
int3
js
cmp
inc
dec
push
push
inc
sbb
shlb
pop
inc
mov
inc
lcall
and
or
pop
lea
cmp
pop
jmp
in
testb
out
movsl
rolb
mov
add
push
cmp
int
pop
cmp
and
or
jg
call
mov
rcrb
notb
inc
xor
pop
pop
nop
aaa
or
inc
vmovntps
je
adc
mov
pop
dec
sub
rcll
add
sub
adc
xor
addb
xlat
in
xchg
sub
push
pop
mov
lea
jl
push
mov
jg
movb
inc
aaa
jbe
mov
add
out
add
sbb
sub
je
ja
or
dec
push
mov
iret
and
push
add
sub
jg
mov
jo
push
in
add
insb
or
mov
jge
jo
push
jbe
jb
fmuls
or
inc
adc
xlat
inc
pop
clc
adc
inc
jno
and
shrl
loopne
push
or
pop
cmpsb
mov
mov
jg
push
jmp
out
cmp
xor
inc
aas
mov
add
or
loop
jae
push
inc
sbbl
shr
popl
mov
xchg
les
in
lea
mov
inc
daa
push
push
in
push
dec
dec
adc
and
movsb
inc
cli
adc
or
cmp
es
popf
pop
or
pop
inc
fs
xor
movsl
pusha
nop
aas
out
mov
stos
test
xor
adcb
lea
out
xor
xor
notl
xor
out
cli
fs
dec
add
push
mov
out
pop
test
cld
ror
push
mov
cs
neg
add
dec
arpl
aas
adc
mov
push
push
add
inc
test
push
inc
mov
test
dec
or
fadds
push
test
xor
or
inc
inc
rcrl
aad
aaa
sbb
xor
mov
push
fdivrl
dec
jmp
or
dec
adc
add
sub
mov
mov
loope
lret
les
addl
insb
nop
nop
adc
out
pop
testl
je
jge
int3
sub
jge
mov
mov
ret
shl
nop
xchg
fldl
js
mov
pop
or
data16
and
mov
or
in
adc
and
cmpsb
add
es
loope
mov
ds
xor
mov
push
sub
xchg
mov
jae
push
push
out
dec
xor
insb
jl
movl
pop
pop
push
push
jl
add
add
xor
in
sbb
pop
loopne
xchg
sbb
mov
ret
mov
lods
or
sbb
push
gs
dec
fcomps
adc
push
jo
cld
push
testl
mov
iret
jae
mov
add
cmpl
add
inc
test
sahf
arpl
pusha
add
mov
or
pop
lods
or
mov
mov
xchg
add
xor
sub
xor
push
testb
orl
int3
sti
sub
loope
add
dec
pop
rorl
bound
rcrl
daa
adc
pop
sub
push
cmp
testl
out
add
into
push
xor
xchg
mov
pop
lret
add
push
inc
push
push
in
adc
in
pop
dec
xchg
sbb
jbe
push
adc
push
adcl
add
mov
shl
add
ret
divb
lods
leave
test
jmp
pusha
pop
ficompl
push
sbbb
mov
mov
and
out
ret
add
stc
outsl
or
fsubrl
xchg
lret
ja
je
or
je
or
sub
sub
scas
adc
adc
cmp
stos
jl
subb
adc
push
or
add
sub
sbb
lcall
js
mov
outsb
cmp
rclb
adc
adc
xchg
cmpsb
push
cmp
mov
sub
cmpsl
pop
sbb
sti
scas
movzwl
or
jbe
call
fdivrs
adc
loope
push
ret
and
jmp
mov
push
dec
sti
in
out
or
add
je
lock
lcall
push
sti
xchg
push
or
adc
test
movsb
sahf
adc
rclb
loope
rolb
and
and
lock
mov
outsb
mov
push
mov
adc
pop
outsl
and
push
mov
mov
ss
divl
cmpl
push
adc
add
jo
xor
mov
in
mov
or
pop
daa
or
push
adc
push
jo
pop
inc
pop
xchg
push
pop
jo
pusha
xor
fnstcw
fs
jnp
sti
adc
dec
pusha
jge
inc
dec
or
ja
imul
xchg
sbb
adc
adc
xor
aaa
in
and
ret
pop
inc
aad
or
xchg
test
cmp
loop
push
in
cmp
or
cmp
sbb
jmp
or
adc
pop
fcoml
pop
add
movsb
stos
stc
sti
je
inc
pop
mov
pusha
sub
test
or
inc
lds
mov
or
pop
loopne
into
enter
pusha
stos
fsubs
xor
fsubs
dec
xchg
mov
ret
push
push
jecxz
or
faddl
mov
jae
js
inc
mov
ret
lods
ret
mov
pop
sbb
call
ds
adc
fsubs
sub
xchg
gs
call
insb
and
inc
push
cltd
mov
repnz
inc
imul
cltd
add
inc
sbb
int
jb
sbb
cmp
cmp
call
repz
push
sahf
and
cs
jecxz
lods
inc
fdivr
outsl
push
mov
test
loope
rcrb
scas
xchg
movsl
dec
sbb
sbb
ret
in
enter
xchg
fcoml
in
push
rcrb
push
shlb
pop
mov
xor
rcrb
aam
push
inc
and
or
inc
and
sbb
iret
test
push
adc
fldl
jl
cmp
pop
pusha
mov
jmp
sbb
or
jae
xorb
dec
fidivl
mov
sbb
cmc
inc
in
add
test
pushf
inc
mov
icebp
mov
jns
mov
mov
pop
rclb
sbb
xchg
jbe
or
adc
sbb
or
dec
push
jmp
shll
add
js
movsl
inc
mov
mov
imul
adc
les
xchg
fsubs
xor
fimuls
push
mov
add
clc
lret
lcall
fldt
daa
ficoms
jg
notl
movl
and
aam
jne
jle
addr16
subl
in
ss
in
cmp
call
nop
in
mov
mov
jo
add
adc
push
jo
xchg
jl
add
or
mov
daa
shlb
cmp
push
and
fucomip
add
call
rorb
movw
xchg
pop
daa
mov
mov
or
stos
pop
adc
adc
mov
sub
mov
cmp
in
cmp
inc
psubsb
xor
add
rclb
xchg
mov
ret
xchg
add
cli
cmp
push
cmp
sbb
xor
fs
fsubrs
js
and
cmp
sahf
or
push
fistl
inc
aam
xor
ret
shrl
orb
or
add
cmp
imul
or
dec
pop
incl
push
dec
cld
inc
sub
testl
decl
movsl
pop
inc
inc
inc
inc
pop
add
ret
hlt
rolb
pop
xchg
push
mov
into
pop
jp
pop
cmp
movsb
inc
mov
call
nop
dec
les
lea
rclb
cmpb
xor
dec
add
mov
push
sbb
push
mov
xchg
pop
ds
cmp
add
ja
daa
shlb
stos
inc
inc
ret
pop
and
lods
aam
enter
xchg
fcoms
test
or
push
xchg
pop
pop
rolb
fs
or
adc
loopne
push
pop
aas
and
stc
jae
mov
call
les
sbb
filds
pop
mov
xchg
adc
mov
xchg
les
or
or
mov
ja
jg
add
in
dec
mov
enter
jno
push
pop
jne
es
push
add
aam
dec
or
add
inc
cmp
ret
mov
cs
repnz
imul
push
movsb
lock
jns
or
mov
fstpt
je
adc
scas
cmpsl
push
jg
xchg
cmpsb
imul
push
add
jl
ds
mov
inc
int
push
sbb
add
and
add
add
xor
jecxz
rcl
push
dec
adc
and
mov
inc
or
adc
mov
push
xor
pop
outsb
xor
jnp
fistpll
jnp
aad
xorl
or
pop
movb
popa
pop
or
mov
push
adc
outsl
or
xor
adc
mov
inc
add
mov
mov
or
in
pusha
push
push
adc
fcoms
push
cmp
in
pop
pop
sbb
fs
movsb
popf
movsb
scas
push
push
inc
xor
rclb
sti
pinsrw
add
imul
mov
pop
xchg
adc
lock
cmp
sub
ror
out
sbb
pop
jb
jp
fisubrs
adc
mov
shr
stos
leave
dec
push
sub
mov
adc
xchg
mov
dec
test
pop
into
hlt
mov
dec
adc
adc
adcb
cli
call
jb
add
shrl
pusha
push
push
adcb
call
jnp
add
sub
or
mov
jns
lret
mov
dec
rorb
movb
and
add
push
loopne
adc
push
dec
lock
loopne
dec
push
sub
lock
pop
sbb
push
cmp
loopne
inc
inc
add
pusha
add
sub
mov
rclb
imul
inc
mov
sarb
imull
xchg
dec
sahf
sub
sar
and
cmp
xor
fs
mov
mov
test
dec
adc
in
add
and
inc
mov
rolb
add
inc
push
add
add
popf
jp
dec
jp
add
adc
and
lods
rol
mov
std
sti
test
adc
push
cld
push
cmp
or
fdivrp
mov
in
sbb
repz
in
sub
jmp
cltd
push
in
orl
pop
push
cld
push
jg
cmpsl
loop
subl
insb
mov
add
and
fcmovbe
mov
in
pop
xor
dec
or
ficomps
dec
push
push
and
inc
push
cmp
and
pusha
fbld
xchg
cwtl
cmpsl
inc
nop
and
sbb
movsb
bnd
sbb
push
mov
or
and
and
out
ds
jl
inc
and
pop
mov
xor
mov
jb
sub
push
call
fnstcw
cmp
ja
dec
mov
xabort
lret
fs
xor
pusha
and
inc
push
fiadds
push
sub
add
xor
pop
push
movsb
repnz
lahf
xor
iret
inc
es
push
adc
and
cmp
push
jns
or
mov
flds
or
daa
mov
lret
inc
fwait
push
sahf
iret
cs
xchg
or
inc
push
cmp
inc
addb
movsl
xor
mov
cs
push
fs
lret
in
push
dec
push
dec
sbbb
jmp
push
or
nop
xchg
xchg
dec
jo
inc
push
mov
inc
cmp
lahf
out
jmp
sahf
mov
add
fnstenv
xchg
and
push
imul
std
aaa
inc
cmp
out
cmp
pop
or
ret
fwait
adc
test
adc
push
mov
push
push
dec
fistpl
xor
popf
call
adc
pop
lcall
mov
mov
sub
add
add
jmp
pushl
dec
push
inc
mov
imul
jns
outsl
adc
pop
lret
dec
loopne
jecxz,pt
push
roll
fsub
shlb
test
cld
stos
or
pop
xchg
jbe
push
sbb
inc
add
movsl
dec
decb
cmp
sbb
sbb
popa
or
push
cmp
test
inc
mov
fmuls
or
jecxz
popf
push
mov
xlat
mov
add
sub
adc
or
jno
sahf
ficoml
cmpsl
je
cmovbe
pop
push
stos
mov
js
hlt
out
loopne
test
stc
mov
push
in
scas
xchg
jbe
pop
in
call
out
and
cmp
cli
inc
out
add
lock
add
btrl
or
xchg
in
and
mov
lock
xchg
mov
out
leave
and
push
std
repz
test
pop
and
dec
ds
lock
lock
pop
add
push
ret
pop
mov
jno
popa
add
lock
jns
inc
in
or
sub
movl
jb
loopne
dec
dec
add
cmpl
sub
pop
pop
rcrb
les
pop
jo
dec
or
inc
dec
cmp
loope
sub
pop
repnz
rcrl
xor
cmc
popa
enter
mov
mov
ret
sbb
loopne
mov
dec
clc
push
mov
jge
xor
inc
js
repz
add
mov
mov
jle
xchg
ret
jne
leave
and
pop
idiv
cmp
inc
aam
jae
push
pop
mov
test
out
xor
mov
jns
dec
cmp
cli
xchg
idivl
adc
jne
push
push
sbb
sbb
mov
enter
fiaddl
lods
adc
jb
sub
inc
js
repnz
inc
push
pushl
scas
enter
add
add
fs
mov
imul
out
shl
pop
cmp
jne
sub
push
pop
cmp
divl
cmp
xchg
push
js
fidivrs
jmp
cmp
fwait
and
cmp
sub
mov
xor
ret
cmp
or
stos
popa
mov
loopne
jl
sbb
inc
bound
aaa
jp
or
sub
enter
jns
jbe
in
jno
jle
rcrb
sbb
je
cs
adc
mov
je
push
int3
push
int3
rolb
out
loope
pop
and
es
call
push
popf
or
pop
dec
jb
cmp
jle
cmp
sti
push
adc
nop
ret
and
jo
push
pop
and
sbb
cmp
and
stos
or
jbe
mov
dec
das
mov
jbe
push
or
les
or
inc
jmp
lcall
xchg
add
add
sbb
or
push
fs
dec
ja
mov
and
sbb
fidivrs
scas
cmp
and
cmp
ret
ret
inc
mov
inc
or
or
push
cld
cmp
ja
insb
xchg
hlt
mov
call
scas
dec
shlb
push
fsubrs
cmp
sbb
and
clc
aad
into
cmp
or
out
sub
lret
jmp
imul
xor
mov
push
and
sub
nop
push
insb
imul
dec
or
lods
mov
jp
rcrl
push
in
xor
loopne
or
lea
jle
sub
dec
rorl
adc
adc
cmp
shl
das
inc
sbb
cli
add
and
adc
pop
xor
push
sub
or
or
xor
cmp
push
inc
push
sub
ret
insl
pop
dec
inc
push
enter
lock
jb
jmp
dec
adc
pop
xchg
dec
lods
rorl
jp
cmp
lret
adc
addb
cmp
lret
inc
or
lods
in
or
pusha
mov
stc
add
cmp
mov
out
repz
leave
add
add
lock
jge
cwtl
jnp
push
jl
pop
sbbl
outsl
out
sahf
push
push
test
cmpsl
push
sbb
and
xchg
insl
sbb
testb
lret
add
cmpb
or
push
in
bound
lds
push
sbb
dec
adc
adc
or
cmp
jo
sub
add
sbb
or
push
dec
push
add
mov
ljmp
push
cmc
mov
push
cmp
jb
lea
cmp
or
std
mov
clc
fisttpll
rdmsr
or
aaa
cmp
aaa
lods
dec
inc
add
pop
sahf
add
cs
pop
mov
push
sub
or
jmp
mov
pop
ret
or
je
push
cmp
push
or
inc
or
outsl
and
inc
aad
jg
in
fdivs
andl
cmp
and
inc
sbb
ja
xor
iret
or
mov
inc
xchg
outsl
and
sbb
aam
movsl
inc
push
in
fcomp
test
add
cltd
mov
sarl
lods
fcmove
push
in
test
jns
jo
dec
lea
jne
jno
mov
lcall
or
and
or
ret
push
sbb
out
xchg
cmp
aaa
xor
add
ds
push
sbb
adc
sub
jle
bound
jge
add
mov
addl
inc
adc
out
inc
imul
cld
sarb
gs
lcall
push
push
lods
sub
mov
inc
pop
and
xchg
cmp
and
or
cmpsb
shrb
dec
add
or
stos
rorl
inc
mov
mov
fucomip
xchg
pop
pusha
add
add
sub
lret
mov
push
sbb
xor
push
mov
shlb
lock
xchg
adc
sbb
andb
pop
mov
clc
push
jb
xor
add
and
add
push
fisubrs
rcrl
push
adc
push
adc
push
sbb
add
push
pop
mov
rep
std
or
sub
pop
sbb
mov
sbb
daa
in
aaa
xor
loopne
adc
movl
xchg
rcl
pop
fisttpl
or
sbb
add
test
mov
arpl
clc
mov
adc
rcrb
inc
pop
ret
push
xchg
jb
xchg
rorl
sub
dec
js
push
addb
loope
in
xor
or
xchg
in
pop
popl
dec
and
add
rcrl
test
inc
sahf
jge
xor
rclb
push
and
push
cmp
pop
mov
data16
pop
or
lock
xor
ds
cmp
xor
stos
add
adc
add
je
ljmp
std
pop
and
fcmove
leave
jl
push
clc
rcrl
dec
sti
add
cs
adc
xor
mov
jge
cmp
lods
mov
mov
insb
cs
mov
cwtl
fldt
xor
cmp
sbb
xor
out
and
push
push
aam
loope
shlb
inc
cmp
jb
loopne
mov
cmp
les
xchg
arpl
fs
pop
cmp
lcall
hlt
outsl
jecxz
xchg
pop
fadds
lret
sub
push
xor
lea
das
or
inc
or
dec
sub
push
int3
cmp
movsb
incb
sbb
inc
je
mov
fiaddl
cmc
jp
inc
jno
mov
enter
push
js
outsb
adc
xchg
push
mov
xchg
and
add
test
sub
pop
gs
sub
inc
push
pop
adc
sti
jl
test
mov
insb
jg
mov
inc
mov
je
or
ret
mov
and
push
or
lahf
aam
jge
mov
and
jle
dec
add
test
xor
rcrl
push
aas
push
sbb
cwtl
popf
into
out
and
shll
push
divb
add
xor
dec
leave
lcall
and
mov
sub
or
push
inc
in
aaa
xchg
fstl
pop
or
lret
fs
xor
sbb
sub
lret
lret
lret
inc
inc
inc
pop
dec
jl
int3
add
add
pusha
lds
xchg
pop
or
addb
sbb
add
rolb
sub
sub
sub
cld
sahf
addr16
int3
push
mov
dec
add
data16
jno
jns
inc
scas
or
arpl
cmpb
mov
and
sub
add
add
adc
sbb
mov
and
imul
pop
sub
icebp
pop
or
mov
adc
insb
insl
inc
push
imul
testl
inc
pop
stos
ret
jp
shl
sbb
aam
or
push
xor
pop
adcl
mov
out
rolb
jb
add
roll
into
add
jns
sub
mov
aam
cltd
gs
ret
das
bound
jmp
or
je
cmp
jae
add
mov
add
push
mov
in
adc
cmp
adc
sub
js
loopne
or
jo
loop
fidivs
es
loope
adc
pop
cmp
sub
and
inc
dec
ljmp
bound
rep
bound
imul
jmp
sub
clc
pop
ljmp
and
pushf
adcl
sbb
andl
mov
adc
pop
clc
mov
jae
push
int3
mov
dec
rolb
add
jae
sbb
sub
cmp
mov
jl
int3
loopne
adc
es
jbe
je
inc
sub
mov
adc
adc
adc
lret
loope
mov
cmp
fsts
testb
jbe
add
aam
xchg
mov
add
les
dec
dec
cmp
rcrb
pop
cmpsb
sub
mov
xor
xor
ror
or
push
sbb
add
pop
cli
inc
loopne
lret
arpl
mov
push
mov
ret
sahf
add
mov
xlat
hlt
cmp
sete
xor
mov
jmp
mov
xchg
test
popa
jl
inc
adc
jns
shlb
cld
sub
add
xlat
xchg
ds
jmp
cli
xor
mov
repnz
inc
jp
mov
cli
ljmp
rcrb
repnz
mov
decb
jl
and
rcrl
sti
stos
cmpsb
or
pop
adc
mov
sub
push
call
hlt
sahf
cmpsb
push
push
inc
orb
in
xor
push
mov
mov
adc
add
mov
faddp
std
mov
incl
cmpsl
sarl
push
push
aam
dec
rclb
mov
mov
mov
adc
and
push
jae
push
mov
adc
push
add
sbb
loopne
outsb
bound
or
insb
add
pop
int
cmp
push
and
sarb
dec
inc
popa
outsl
shlb
fadds
lods
shlb
push
bnd
roll
or
dec
movsb
dec
xchg
jo
mov
jno
push
stos
pop
push
sub
mov
nop
mov
cmc
jge
je
jecxz
mov
js
testl
fcoms
pop
cltd
cmp
jl
inc
inc
popa
xor
jo
stos
dec
rcrl
fdivs
stos
subb
cld
add
aaa
mov
sbb
xor
sarb
les
lods
xchg
pop
mov
sub
xor
call
aad
mov
add
dec
mov
leave
adc
inc
dec
jb
inc
mov
lahf
adc
jo
iret
mov
adc
add
int3
adc
or
jge
shrb
mov
and
dec
dec
inc
pop
pop
add
push
pop
mov
data16
push
jne
push
add
clc
or
test
cmpsl
add
push
in
ret
loope
mov
adc
push
adc
mov
sub
outsb
or
cmp
fcmovb
aas
bound
dec
adc
inc
jge
loopne
aas
sbb
mov
aad
or
je
and
outsl
outsl
mov
shrb
faddp
pop
ljmp
rol
add
clc
jbe
or
add
mov
sub
lret
dec
adc
js
inc
dec
pusha
in
adc
movsb
pusha
and
sub
jecxz
and
clc
faddl
mov
repz
sahf
xchg
aad
cld
mov
inc
shlb
jmp
pop
adcl
rol
js
or
adc
inc
or
and
ja
lea
push
in
adc
mov
fdivp
cmc
aam
lret
xor
pop
movsl
inc
pop
ljmp
push
xchg
pop
mov
jl
ret
loopne
in
mov
ret
repz
lea
mov
or
push
add
dec
xchg
or
xchg
loopne
inc
mov
inc
push
aas
shll
rol
or
xchg
add
push
pop
lods
mov
add
pop
pop
das
dec
or
and
inc
ret
jo
dec
call
xor
leave
or
sbbl
and
inc
lret
testb
push
mov
popl
enter
arpl
push
in
sbb
dec
add
jne
sub
aaa
sti
incb
lea
jp
cmp
hlt
dec
shll
jae
jb
pushl
jo
dec
adc
js
clc
push
pop
jmp
xor
jae
inc
adc
add
pusha
or
and
rol
xor
add
dec
imul
repnz
test
nop
inc
mov
xchg
inc
cmp
test
pusha
cmpb
add
out
adc
adc
push
sbb
and
shrb
into
std
adcb
mov
inc
jmp
sbb
sarb
push
jp
xor
jmp
test
sub
mov
aas
rcll
add
adc
inc
push
pop
mov
gs
xchg
xchg
test
fdivrl
pop
mov
aaa
cmc
add
dec
mov
cs
pushf
cmp
push
pop
sbb
sub
xchg
jbe
mov
pop
jecxz
in
aas
mov
shr
push
jmp
icebp
jbe
aaa
mov
jmp
mov
aam
outsb
roll
push
insb
je
fwait
xchg
aas
sbbl
mov
inc
mov
adc
loope
add
add
sub
daa
rolb
adc
daa
or
and
push
sub
and
leave
and
dec
insl
stos
fdivl
pop
mov
es
adc
fisubl
inc
mov
dec
or
adc
mov
sub
or
fldt
in
andb
leave
ja
cmp
aaa
insb
inc
xor
ja
dec
add
pop
mov
inc
testl
mov
or
or
or
sbb
mov
or
mov
stc
lock
push
cmp
adc
mov
pusha
sub
inc
pop
inc
cltd
shlb
out
xor
add
mov
call
mov
and
and
sbb
cmpsb
mov
sahf
stos
mov
ds
fimuls
add
push
or
inc
aas
enter
and
and
add
and
add
add
in
cmp
and
add
pop
sub
mov
add
in
loopne
sbb
cmpb
cs
lahf
lret
test
das
jmp
push
push
push
xor
pop
xor
scas
inc
push
pushf
push
fcmove
xchg
xor
or
xor
mov
sbb
loopne
mov
popa
mov
xchg
mov
leave
jmp
daa
pop
jnp
in
sarb
cld
or
out
pusha
push
movl
cmpsb
daa
nop
cmp
or
sbb
adc
adc
sub
pop
sbb
mov
sbb
cwtl
addb
clc
add
or
adc
inc
adc
jmp
js
jecxz
inc
rclb
and
cmp
jecxz
and
test
lea
sub
cs
jno
push
inc
sub
mov
imul
add
lea
jmp
jb
dec
adc
cmovbe
jne
cli
xchg
mov
xor
xor
pop
nop
add
out
sbb
ds
cmp
fcoml
inc
nop
or
pop
jmp
mov
inc
and
jns
and
pop
or
test
xchg
cmp
loopne
arpl
push
and
dec
push
cmc
mov
inc
test
ljmp
cmp
cmpsb
rolb
or
addr16
jbe
pop
adc
pop
sub
jo
add
repnz
pop
test
ss
add
stos
in
cmp
or
and
sbb
mov
pop
leave
ret
push
adc
push
std
add
adc
pop
pop
test
loop
out
inc
mov
hlt
xor
jne
push
and
mov
ret
sbb
mov
add
add
pop
mov
repz
jle
je
dec
lods
or
adc
cmp
shrb
rcll
xor
sbb
fnstsw
mov
jne
pop
sbb
imul
dec
rorl
inc
or
cmp
adc
ret
cld
dec
mov
jns
ret
xor
or
into
mov
push
cmpb
cs
or
js
and
ss
das
idivb
rcrl
mov
test
adc
ds
jmp
int
ret
push
xor
add
xchg
push
mov
cmc
xchg
stos
fsubl
sbb
aas
sbb
sbb
push
or
add
or
or
aam
das
push
in
jle
mov
add
std
xor
int3
in
cmp
jg
lea
iret
outsb
inc
push
popa
and
addb
pop
or
test
aaa
in
sbb
xlat
enter
add
and
test
or
orb
mov
lcall
add
or
aam
jmp
push
in
mov
sub
inc
orb
sahf
dec
or
pop
arpl
jns
inc
loopne
mov
ss
imull
test
or
xor
test
sbb
cld
in
dec
inc
jg
jmp
add
or
sub
and
lret
dec
gs
push
adc
leave
orl
sbb
sub
fmull
xor
or
aaa
pop
test
mov
clc
rorb
jmp
mov
sub
push
jo
movsl
lock
add
loopne
or
movsl
fadds
mov
lcall
js
or
sub
xchg
push
dec
pop
pop
mov
and
add
sbb
push
push
pusha
inc
and
ret
aaa
adc
xlat
jmp
jl
dec
sub
out
mov
jbe
cld
ds
movsb
inc
ret
popa
dec
pushf
lods
xor
cltd
stos
jo
mov
lock
dec
cmp
repz
loop
in
icebp
addr16
xchg
or
fs
add
xor
idivl
mov
insb
lretw
lret
jle
adcb
andps
aas
and
push
sarl
pushl
or
mov
add
jl
cmp
jle
ss
fistpll
push
jp
or
pop
ret
aas
stos
mov
xchg
andb
leave
in
scas
into
cmp
jge
mov
pop
and
cmp
jl
push
repnz
cmp
je
cmp
je
jne
pop
mov
cmp
xor
xchg
and
and
pop
inc
sbb
push
sbb
jl
inc
sub
add
push
inc
sbb
je
or
sbb
sbb
xchg
incl
and
inc
inc
hlt
mov
cmp
ret
enter
mov
add
jmp
push
mov
hlt
jge
lock
pusha
data16
cmp
jne
mov
inc
mov
dec
pop
sbb
bound
lret
fisubl
sbb
movsb
rcrb
inc
add
int3
jmp
sub
lock
out
and
inc
push
add
addb
mov
ljmp
adc
mov
dec
xor
out
enter
shrd
add
add
pop
movsb
loope
sbb
call
or
xchg
fnsave
or
add
cmpsb
mov
sub
push
rcll
push
in
bound
dec
mov
jle
mov
push
iret
lock
or
in
mov
inc
mov
xor
push
mov
fucomp
js
clc
xchg
dec
sub
mov
pop
fmuls
mov
push
mov
in
adc
inc
sbb
es
shl
inc
pop
sbb
insb
dec
mov
xor
movsb
push
xor
decb
pushl
add
pop
hlt
jg
dec
call
leave
mov
jp
inc
add
movd
xor
xor
xor
or
xchg
mov
add
xor
adcb
sbb
push
mov
jb
adc
rolb
adc
push
push
pop
insb
push
sahf
out
pusha
fs
push
lret
test
xor
ljmp
xchg
insb
jge
and
sbb
repnz
in
sbb
mov
ja
shll
dec
adc
add
add
adc
jne
mov
pop
and
cmp
mov
sbb
sbb
sub
add
pop
and
cmovle
jp
push
xor
xor
mov
imul
je
loope
cmpsl
or
jne
inc
mov
jmp
cmp
lock
jl
iret
add
call
jle
in
in
stos
call
int3
mov
sub
jle
and
push
xor
sub
jb
icebp
loopne
int3
aas
test
xor
popa
pop
mov
and
and
jo
sub
add
cmp
dec
and
xlat
add
xor
pop
mov
subb
icebp
movq
xor
add
cmp
enter
roll
adc
xchg
cld
pop
lcall
inc
push
lds
jmp
inc
shrb
jmp
cmp
dec
sti
insl
lds
popa
or
mov
orb
sbb
repnz
dec
mov
arpl
arpl
push
xchg
xchg
in
sbb
cmp
push
test
sbbl
push
pusha
gs
pop
je
sbb
lods
adcb
push
dec
sub
push
imul
fs
icebp
sti
loop
arpl
movb
cmp
loopne
sub
les
pop
stos
loope
mov
hlt
dec
dec
xor
xchg
push
inc
pop
cmpsl
test
xchg
pop
fmull
lea
nop
or
jg
mov
mov
cmp
je
or
je
cmp
sub
adc
and
sub
clc
rolb
cmp
push
pop
and
pop
mov
lea
hlt
movl
arpl
xor
and
or
and
mov
roll
dec
add
inc
and
pusha
jne
or
adc
in
mov
and
push
or
push
inc
repnz
mov
and
mov
shll
fnstenv
pusha
shlb
adc
add
or
call
cmp
inc
rcrb
jno
add
or
ficompl
lock
mov
mov
push
dec
inc
and
pusha
pop
push
adc
fs
sbb
int
aam
icebp
xchg
int3
repz
dec
sub
aam
nop
test
loope
aad
pop
inc
mov
add
pop
dec
and
aaa
jo
adc
dec
fmull
adc
inc
mov
add
add
pop
popa
dec
pusha
popf
ret
pop
xchg
and
add
mov
mov
rol
cmpsl
enter
mov
iret
xor
sub
sti
loopne
jg
sub
clc
sub
inc
jo
add
rcll
add
daa
mov
xor
sbb
jl
xor
jae
mov
sub
mov
inc
dec
xorb
xchg
adc
add
pop
sub
scas
and
inc
pop
push
mov
popa
sub
fimuls
cmp
lock
fldcw
hlt
push
rcrb
in
mov
pushf
cmp
mov
pop
rolb
push
sub
dec
fsubl
ret
cmpl
pop
jo
mov
mov
mov
sbb
add
test
xchg
cltd
mov
mov
imul
inc
add
ficoms
mov
mov
movsb
or
jns
jb
pop
add
add
test
and
mov
add
pop
add
add
or
or
pop
data16
adc
push
adc
das
popf
dec
sahf
adc
aam
outsb
xor
jne
jle
dec
push
add
in
icebp
inc
dec
jecxz
fsts
adcb
ret
fwait
stc
cwtl
int3
jecxz
mov
in
cwtl
jo
leavew
cwtl
jmp
mov
fdivs
adc
mov
negb
mov
jp
rcll
loopne
inc
add
jb
lock
sar
add
xchg
jmp
movsb
mov
out
jmp
sbb
addb
sarb
cmpsb
push
sbb
sub
add
pushf
ljmp
inc
pop
subb
cmpl
push
lods
js
dec
push
lea
cltd
repnz
out
xchg
dec
sbb
push
xor
xchg
cmpsl
inc
sbb
dec
push
or
sbb
movsb
mov
inc
js
sub
or
incl
push
inc
mov
or
add
inc
cmpsb
hlt
sbb
inc
mov
jle
push
or
dec
je
sbb
xchg
test
sub
push
les
sub
add
push
cs
movsb
fsubrp
fwait
dec
pop
je
fldl
pop
push
push
fstpl
add
inc
pop
iretw
repz
adc
adc
jne
push
idiv
cmp
iret
jne
or
jne
or
jne
gs
shl
cld
orl
fstpl
andl
addl
mov
in
pop
nop
push
inc
sarb
inc
sbb
leave
or
in
push
and
or
andl
adc
fstl
jecxz
in
loope
add
popl
sbb
mov
or
outsl
push
cmp
sub
inc
cmp
cwtl
loopne
in
sbb
shlb
dec
cmp
mov
jne
xor
or
or
sbb
daa
or
mov
ret
pusha
mov
pop
cmpsb
add
jp
ret
jne
cmp
inc
ja
insl
push
repnz
or
fimuls
mov
fmull
movsl
or
mov
add
hlt
sbb
jnp
push
and
or
sbb
mov
shrb
add
lcall
add
push
push
jmp
and
jl
and
enter
push
jbe
push
movsb
inc
inc
mov
outsl
sub
push
mov
lock
push
shrl
aad
dec
mov
testl
jg
addb
cmp
adc
enter
loop
mov
inc
xchg
scas
testb
or
push
pop
add
pop
movsb
jle
adc
sub
fwait
add
push
scas
jnp
cmp
pop
adc
sub
mov
mov
dec
pusha
xorb
dec
sbb
jecxz
lods
addl
js
push
mov
push
dec
push
cwtl
push
pop
leave
repz
xor
movsb
insl
sub
lods
es
push
test
mov
clc
sbb
pop
popa
xchg
push
dec
frstor
adc
cmpsl
xchg
sub
fldcw
inc
movsb
inc
add
mov
xor
cmp
mov
add
faddl
test
imul
nop
mov
dec
push
les
pop
inc
es
nop
lret
sbbl
push
or
es
rorb
popa
imul
cltd
nop
aam
or
imul
inc
jo
loopne
xchg
push
inc
cltd
fsubs
push
add
jmp
xor
adc
rclb
in
and
dec
push
test
cmp
push
ror
enter
cmp
sarb
mov
test
sarb
mov
sub
xchg
dec
pop
inc
cmpsl
xor
xor
sbbl
mov
push
dec
stc
rcr
popaw
sbb
adc
pop
push
ljmp
test
not
pop
es
pop
ret
cs
imul
mov
xchg
push
popa
adc
je
cmp
jle
push
jp
cwtl
ret
mov
ret
xchg
shl
fmuls
add
mov
repz
push
fisttps
psubq
mov
push
pushf
je
insl
xor
jnp
jae
repnz
add
add
imul
push
dec
cmp
sbb
js
addr16
mov
jo
icebp
mov
pop
cmp
jl
push
jb
add
push
add
adcb
je
inc
xchg
fimuls
adc
mov
call
imul
dec
mov
push
movl
or
or
mov
mov
push
jnp
push
outsb
inc
pop
loope
sub
pop
mov
push
pop
mov
xchg
sub
call
imul
push
rcrb
and
dec
and
push
enter
or
inc
sti
out
dec
add
sub
push
cmp
in
lds
dec
mov
jbe
mov
adc
cld
subb
gs
pop
test
mov
sub
aam
jae
sbb
or
dec
push
push
xor
adc
pop
lods
fsubs
xchg
nopl
shll
push
inc
imul
sub
lcall
out
cmp
inc
mov
popf
inc
sbb
fs
bound
mov
cmpsb
sbb
daa
adc
call
addl
inc
ret
push
dec
push
mov
lock
icebp
add
adc
xor
dec
sub
push
test
mov
popf
push
push
inc
pop
jle
and
adc
push
into
data16
cmp
add
mov
push
pop
lea
pusha
pop
lea
and
dec
in
sub
inc
jae
pop
add
lods
ret
xchg
adc
mov
loope
jno
lock
test
jmp
lock
or
mov
xchg
push
or
pop
insb
nop
push
leave
int3
dec
out
scas
push
stos
enter
ja
mov
mov
xor
cmc
adc
gs
add
gs
xor
test
bound
lea
dec
lret
clc
psubsw
sub
sar
adc
popa
mov
xor
mov
outsb
dec
xor
daa
add
inc
ss
pop
mov
or
jo
push
icebp
xorl
adc
lods
into
ja
lea
and
xor
jmp
test
mov
in
or
gs
enter
jmp
inc
cwtl
add
add
clc
add
leave
mov
push
mov
dec
clc
enter
mov
popf
sbb
jp
mov
or
pushf
jecxz
rcrb
push
mov
jno
out
cltd
lret
out
movsb
outsb
jl
adc
enter
xchg
jbe
or
cmpsb
icebp
call
fnstsw
and
dec
sahf
and
sbb
adc
test
dec
add
adc
in
jl
mov
in
mov
dec
icebp
mov
push
xchg
loope
loopne
shrl
inc
mov
lret
ds
lock
pop
enter
pusha
stos
adc
push
cmp
xchg
orl
adc
popa
mov
adc
ss
mov
insb
mov
stos
mov
mov
push
sbb
dec
movsl
lcall
sbb
repz
rclb
mov
movsb
hlt
in
xchg
xchg
push
push
jo
mov
or
add
add
fistl
lods
mov
int
rcrb
xchg
pusha
and
inc
lcall
fsubrs
clc
in
or
mov
andl
mov
rol
xchg
pop
aad
adc
pop
pushf
mov
push
mov
adc
adc
mov
push
sbb
dec
mov
push
test
and
jnp
aas
int
cmp
js
add
add
js
popa
rcrb
movsl
sahf
adc
test
imul
and
sub
pop
pop
mov
sbb
jecxz
jo
ss
pop
pop
push
popa
add
sub
mov
mov
and
lock
ss
xchg
lods
fcoms
xchg
fistl
hlt
add
clc
sub
xor
ret
insl
xor
pop
in
loope
jo
and
mov
jns
add
shlb
jno
sahf
aas
lods
lret
aam
insb
or
mov
dec
or
ret
repz
add
call
inc
mov
jl
push
mov
cmp
ljmp
xchg
iret
lds
jg
jl
lahf
cwtl
jl
movsb
test
jno
pop
nop
push
sub
sub
lea
dec
push
dec
sti
pop
push
lods
cli
mov
jnp
adc
sbb
rorl
arpl
mov
jne
xlat
dec
pop
or
xchg
add
cltd
mov
mov
mov
int
push
add
push
pop
and
test
out
adc
add
sub
test
fadds
pop
push
movsl
xchg
cmp
or
xchg
sbb
in
mov
cwtl
inc
shrd
adc
ret
daa
outsl
mull
ret
pop
or
add
adc
inc
inc
cmp
cs
in
mov
rcll
mov
push
push
adc
stc
push
push
dec
stos
mov
in
and
sarb
pusha
ds
popa
jnp
push
mov
ljmp
sbb
jg
add
add
cmp
sub
inc
lea
outsl
rcrb
pop
cwtl
sbb
shll
jne
cmpsl
clc
jno
mov
mov
iret
or
jo
sbb
sbb
add
shlb
stos
push
shl
or
lods
adc
imul
addl
xchg
rclb
add
lcall
adcl
stos
xchg
add
cld
and
mov
imul
jle
mov
mov
cmp
loope
repnz
mov
push
out
add
inc
push
push
mov
jmp
or
inc
xor
shll
popa
lea
popf
les
movsb
mov
mov
hlt
adc
js
inc
xor
pop
push
stos
loope
ret
lcall
cmp
addb
jmp
mov
and
dec
or
add
add
push
xlat
fadds
stos
xchg
fidivs
dec
add
push
insb
imul
add
je
mov
push
dec
fwait
inc
pop
mov
scas
add
and
sbb
iret
xchg
adc
push
dec
dec
arpl
jge
xchg
inc
push
cmpsb
pushf
push
pop
pop
es
dec
in
pusha
lods
or
iret
pop
adc
movsb
jb
jo
pop
enter
orb
jmp
xchg
xchg
xor
pop
jp
sub
cmp
sbb
or
imul
in
iret
and
fs
dec
sbb
fs
cmp
pop
lret
mov
and
ljmp
divb
imul
inc
mov
adc
je
js
scas
sbb
shll
cmp
mov
pop
leave
aaa
lahf
push
inc
mov
and
push
call
adc
inc
jo,pn
xchg
je
pop
lock
pop
in
jecxz
adc
adc
inc
mov
scas
push
and
mov
xchg
sbb
xor
or
outsl
sbb
pop
jo
adc
cmp
bound
in
mov
std
sbb
nop
lret
add
and
in
sub
push
testl
scas
xchg
pop
adc
pop
push
xchg
or
and
repnz
sub
and
dec
daa
adc
and
nop
lret
add
sbb
nop
and
and
ret
addl
lods
lock
push
mov
inc
dec
sahf
fisubrs
stc
pop
cs
jle
xchg
mov
pop
sub
sbb
popa
dec
sbb
pushf
addb
jae
and
adc
es
mov
aas
test
sbb
adc
jl
inc
addl
xor
cmc
sbb
push
pop
jnp
adc
sbb
sbbb
push
scas
movsb
test
cmp
clc
mov
cli
leave
mov
addl
xor
pop
inc
mov
or
add
inc
add
or
daa
cmpsl
xor
add
sub
xchg
nop
bound
aas
mov
push
inc
mov
inc
sub
out
sbb
mov
xchg
dec
add
repnz
adc
loopne
loopne
pop
or
push
xor
cs
xor
out
jg
mov
and
bound
sbb
cmc
faddl
jno
sbb
iret
jg
int3
add
add
mov
je
cmpb
dec
push
sbb
adc
xorb
jne
mov
cli
xchg
pop
leave
mov
push
ss
test
dec
jnp
add
push
mov
fsubrl
orb
dec
lock
add
stc
inc
arpl
ret
gs
mov
loopne
pop
or
mov
push
and
inc
adc
dec
dec
dec
xor
dec
xor
negl
sbb
ljmp
loop
pop
pop
xor
fnstsw
add
hlt
mov
sbb
roll
and
aas
repnz
and
xchg
jne
ret
popf
rolb
data16
xor
mov
fmuls
inc
push
xor
pop
jne
sbb
or
mov
mov
adc
call
and
xchg
jl
mov
mov
pop
add
lock
mov
mov
xchg
cmp
sbb
je
mov
jle
jbe
push
or
sbb
ret
fistpll
gs
inc
cmp
jb
loop
cli
loope
pop
pushl
movl
data16
loop
sub
add
mov
or
rorl
cmp
mov
xor
or
xchg
jle
orl
or
repnz
cmp
loop
and
push
cld
test
sbb
aaa
push
push
and
fdivrp
pop
xor
testl
or
lea
or
adc
and
sbb
or
mov
test
mov
cmp
jne
daa
popf
push
cld
test
je
inc
loopne
add
stc
and
add
mov
mov
or
pop
push
popa
adc
popa
push
mov
fildl
clc
fdivs
xor
add
inc
add
xorb
mov
jmp
jo
adc
rcrb
shlb
mov
mov
jge
add
add
cmc
dec
push
push
cmp
je
cmp
fs
push
or
mov
sub
push
arpl
dec
out
adc
les
ds
jnp
jbe
std
xchg
mov
fldl
cmp
nop
ljmp
je
jo
pop
shlb
mov
sbb
cmpb
sbb
inc
les
js
add
lds
sti
jbe
fdivrs
insb
add
clc
and
and
fsubrl
push
fimuls
dec
mov
sar
mov
xchg
hlt
fsubl
pop
fsub
pop
fsubrp
cwtl
cmp
pop
xor
pop
pop
test
call
pusha
or
outsl
add
pop
add
xor
dec
add
sahf
loop
xor
call
or
and
pop
fidivrl
sub
dec
je
add
rorb
imul
mov
fadds
cmpsb
sub
pop
inc
sbb
jo
mov
sub
push
push
push
test
mov
sahf
ljmp
test
mov
xchg
repz
pop
and
push
fdivrs
enter
and
nop
xchg
sub
aas
pop
movsb
dec
jne
adc
dec
in
cmpsb
outsb
int3
nop
cwtl
ss
repnz
enter
fs
cwtl
repnz
or
adc
and
pop
repnz
push
jg
lock
ja
vmwrite
push
push
mov
adc
cmp
or
stc
and
push
push
pop
rcll
cmpsl
inc
cmp
repz
adc
and
push
vmwrite
ret
sub
loopne
out
mov
sub
cmovle
outsl
or
fcompl
push
jl
leave
out
jl
adc
pop
daa
sub
and
push
jecxz
cmp
into
rcrl
repnz
out
and
and
sbb
and
inc
sahf
pop
push
push
push
arpl
mov
repnz
repnz
push
push
add
pop
je
lret
sub
call
or
mov
and
popf
mov
lahf
fwait
xor
imul
ret
dec
push
xchg
xor
jb
dec
inc
and
in
int3
push
fs
or
adc
out
or
mov
inc
sahf
pop
jb
mov
push
jns
repz
add
cmpl
gs
inc
ja
call
jne
sbb
out
and
es
lret
and
push
cwtl
push
pop
js
dec
pop
lcall
adc
mov
out
cmp
repz
clc
push
or
cmp
repz
pop
outsl
adcb
mov
cld
or
sahf
push
das
inc
push
bound
sahf
out
test
jl
out
ljmp
cmp
cs
push
popa
jb
and
movsl
mov
sub
and
mov
add
jmp
es
push
and
lods
add
adc
mov
je
mov
add
jbe
les
push
add
pop
xchg
xor
or
inc
dec
add
or
push
movsl
movb
add
adc
call
inc
fldl
push
and
in
mov
mov
adc
push
imul
out
sbb
out
jnp
cmp
xorl
jl
mov
or
xor
mov
in
pop
mov
inc
or
lock
dec
cmpsl
jge
sub
sbb
or
aaa
lea
pop
and
int
push
add
loopne
je
mov
mov
shrb
push
mov
xchg
mov
inc
mov
or
sbb
sub
push
fsub
shrb
add
add
lods
push
aad
lds
sbb
test
xchg
test
aam
xor
filds
roll
int3
push
lods
push
in
fwait
sbb
pushl
pop
add
cmpsl
loop
add
cli
mov
dec
hlt
mov
and
enter
xor
adc
pop
popa
ss
adc
and
add
leave
rolb
loop
pop
sub
inc
imulb
push
flds
push
xor
mov
in
lds
sbb
loopne
icebp
add
test
call
je
sbb
mov
xchg
mov
test
add
leave
in
xlat
nop
sbb
push
testb
enter
je,pn
push
in
movsb
or
xchg
cld
sub
mov
pop
adc
add
xchg
stos
adc
js
inc
cli
call
mov
inc
sub
push
test
sbb
lods
sbbl
lods
and
pop
lods
dec
sbb
jnp
loop
or
nop
lock
inc
out
or
and
adc
loopne
adc
sbb
test
xchg
rclb
xor
out
add
xor
dec
mov
test
cmp
int
add
cmp
jns
imul
dec
int3
push
inc
je
push
push
mov
ret
pop
inc
cmpsl
mov
sbb
outsb
sbb
test
cwtl
nop
sbb
push
sbb
adc
jl
add
mov
loopne
push
mov
in
cmp
inc
rcrb
divl
leave
xchg
adc
push
push
push
in
inc
ljmp
das
dec
adc
sbb
out
push
mov
mov
pop
dec
mov
xor
mov
cmp
stos
mov
rclb
lock
test
sbb
inc
sbb
cwtl
inc
adc
push
insb
mov
add
pusha
dec
push
daa
xchg
sbb
adcl
xchg
arpl
mov
adc
outsl
jo
nop
iret
cwtl
dec
icebp
out
test
add
dec
xrelease
inc
add
push
in
push
adc
adc
stc
add
adc
adc
inc
add
add
or
jb
or
jecxz
rol
dec
daa
fdiv
jns
orl
frstor
sub
orb
fwait
lds
push
ret
bound
fwait
xchg
sub
or
xor
test
xor
popa
add
add
cltd
lock
sub
mov
cld
add
outsl
jno
sbb
test
add
add
sub
cmp
add
sbb
test
mov
in
push
test
cmc
adc
icebp
test
xchg
sbb
cltd
mov
or
add
jne
add
lahf
xor
shrl
or
lds
ss
or
sbb
stos
js
lods
mov
lods
out
mov
adc
pusha
push
xchg
add
mov
daa
push
sbb
and
inc
jb
mov
pop
add
addl
adc
pop
nop
fwait
dec
mov
invd
mov
insb
and
test
es
lcall
add
test
push
push
test
or
mov
or
cltd
int
or
and
fwait
add
push
sbb
aad
mov
adc
popf
or
adc
or
addl
push
cmp
popa
lock
aas
jne
mov
or
insl
push
inc
and
jp
adc
xor
inc
and
pop
add
xchg
sub
gs
dec
adc
sbb
inc
and
jns
jb
out
mov
jae
decl
and
cmp
jmp
sti
pop
gs
push
inc
out
mov
pop
sbb
sub
push
push
xchg
add
shll
ret
add
and
push
repz
and
or
add
push
neg
fldenv
adc
aad
rcll
push
jle
push
shr
add
push
ljmp
push
clc
inc
add
xchg
inc
mov
stos
loopne
pop
imul
adc
pushf
dec
xor
popf
mov
or
clc
test
xchg
je
repnz
stos
test
dec
cmp
dec
fiadds
fwait
push
and
addr16
adc
into
adc
test
xor
ret
roll
cmp
ret
outsl
add
scas
dec
shll
icebp
imul
sbb
xor
add
add
adcb
mov
mov
fsubs
aad
xchg
fsubrs
xor
sub
dec
mov
xor
jne
fldl
rol
lds
je
xchg
fmull
dec
pop
xchg
push
cmpb
mov
mov
sbb
xchg
jl
loopne
inc
jo
mov
and
unpcklps
test
push
fiadds
push
subb
lods
push
jmp
stc
das
test
or
push
push
and
add
mov
dec
mov
pop
mov
mov
sub
mov
ret
mov
jp
mov
cmpsl
sbbl
ljmp
add
adc
out
loope
fbld
rcrb
iret
dec
sbb
ffree
lret
js
lds
add
leave
sub
jp
mov
adc
push
xchg
orb
mov
mov
push
push
dec
push
icebp
mov
sarb
pop
jo
inc
and
test
pop
add
and
or
sbb
gs
jmp
fldt
cmc
dec
sub
ljmp
les
adc
or
mov
aad
rcrl
adc
jo
cmp
adc
xor
cmp
xchg
dec
out
fists
dec
mov
sbb
gs
ret
mov
cwtl
mov
pop
add
push
xchg
test
push
rol
movsl
xor
imul
stc
mov
call
aaa
sub
pusha
aam
dec
fwait
shll
imulb
ret
or
mov
or
shr
and
cli
inc
jl
or
sbb
popa
sub
add
cmp
je
mov
mov
jg
clc
decl
add
inc
jmp
movb
mov
push
cltd
xor
mov
pop
idiv
mov
out
lds
aam
add
xchg
addb
adc
icebp
rolb
xchg
test
loope
sahf
frstor
movsb
arpl
jmp
imull
clc
inc
mov
xor
push
lds
jmp
adcl
add
push
lock
stc
push
lock
in
incb
sub
adc
mov
cmp
iret
cmp
pop
sahf
lret
inc
mov
dec
aam
mov
daa
cmp
jmp
jne
mov
push
push
and
orb
mov
sbb
xchg
js
pop
or
pop
insl
add
movsl
mov
inc
mov
test
dec
hlt
and
frstor
push
adc
ret
pop
jp
sbb
add
dec
iret
sub
iret
les
push
ja
pop
filds
add
or
jne
je
sub
mov
jl
ss
lods
push
jno
sub
xchg
test
shll
and
mov
cmp
xor
mov
inc
shlb
adc
sub
xor
dec
movsb
adc
push
pop
int
fsubrs
pop
push
push
es
and
inc
adc
iret
mov
push
pop
push
adc
xor
inc
mov
xlat
imul
inc
fbld
xor
jl
mov
into
in
and
pop
jns
xor
pushf
sbb
or
jo
shlb
push
dec
mov
rcrb
xor
js
daa
and
lahf
in
push
in
add
and
mov
cmpb
sbb
jnp
repz
inc
mov
mov
mov
push
mov
inc
imul
outsl
jae
inc
nop
gs
aaa
and
les
aam
insb
dec
inc
fcmovbe
out
cwtl
and
xchg
or
pushf
mov
mov
and
xchg
fsubrs
and
xor
xchg
adc
neg
jno
adc
in
mov
outsl
fwait
mov
test
jo
and
lods
lds
inc
dec
repnz
cmp
pop
add
mov
enter
ficoml
or
xchg
faddl
and
leave
leave
and
pop
nop
les
inc
mov
addb
js
cltd
fs
dec
jo
push
and
pushf
xchg
mov
and
insb
nop
stos
mov
and
roll
aaa
jns
inc
xor
sub
inc
or
sub
movsl
sbb
sub
mov
add
and
jo
fsubrs
mov
add
loopne
xor
mov
mov
lea
or
cmpsl
adc
jb
sbb
das
push
sbb
int3
pusha
xchg
dec
outsb
push
push
dec
mov
adc
push
xchg
popl
xchg
pop
fldz
mov
xor
fcompl
push
xchg
scas
pop
fmull
icebp
xlat
mov
add
clc
mov
mov
inc
pop
jb
pop
dec
add
into
jo
or
test
cmp
in
call
stc
loope
loopne
sub
shrb
push
mov
jl
aad
push
flds
pop
mov
lods
xor
sub
sub
sub
or
adc
pop
push
dec
add
pop
lcall
dec
bound
adc
int3
cmc
nop
in
push
jg
or
repz
inc
repnz
in
mov
pop
rorl
and
dec
test
les
leave
sub
inc
or
adc
pop
pop
sbb
icebp
lock
dec
and
dec
jle
test
inc
cmpsl
ret
mov
pop
inc
adc
enter
mov
jbe
cmp
pop
movsb
adc
hlt
es
orl
mov
insb
cmpsl
and
jecxz
repz
movsb
test
push
mov
cwtl
mov
rclb
push
aas
push
or
pop
and
adc
mov
mov
andb
inc
sub
fcoms
sub
ds
adc
sahf
in
ss
xchg
sbb
dec
inc
mov
stos
mov
int3
and
xchg
sub
sub
pop
inc
es
daa
int3
pusha
add
and
jne
ret
push
enter
pusha
xor
pop
dec
and
adc
sbb
push
push
push
xor
or
lret
and
fsubrl
and
shlb
psraw
inc
xchg
in
add
dec
lds
mov
pushf
adc
mov
xor
mov
adc
add
test
in
push
inc
pop
into
sbb
inc
ja
add
sub
mov
ret
ja
pop
add
leave
inc
and
or
inc
add
jae
stos
or
je
xor
call
lods
add
add
scas
pop
mov
jge
int3
stos
hlt
fwait
lahf
fsubrs
cmp
ja
fsubs
add
and
psubsw
iret
xchg
xchg
ljmp
insb
movsbl
loopne
js
fstl
add
bound
cmp
daa
push
adc
cmp
gs
ss
jle
jo
pop
adc
dec
leave
add
pop
pop
lret
das
scas
enter
lret
add
test
push
insb
jno
js
jp
leave
incb
pop
add
and
das
ja
inc
lea
ja
inc
or
aas
popa
dec
or
jp
add
xchg
out
dec
movsl
nop
inc
pop
cmpsb
and
xor
xchg
or
popa
shll
cmp
dec
scas
cmp
push
movsb
pop
pop
test
lock
loope
sahf
cmpb
loop
stos
mov
cli
jne
cmp
loopne
push
sarb
sbb
jl
cli
pop
cmp
sbb
es
add
rolb
mov
mov
out
int
add
adc
xchg
adcl
fmul
push
clc
out
add
jae
aam
lds
fmull
mov
adc
xchg
jmp
push
adc
adc
mov
or
add
leave
mov
xlat
adc
adc
push
jo
ret
add
adc
adc
pop
fs
adc
push
lret
cli
push
jne
fiadds
cmpb
imul
lods
int
cmc
clc
pop
cld
jno
pop
jns
les
xchg
adc
pushl
push
loope
pop
mov
inc
test
push
add
pop
lea
xchg
dec
push
inc
sbb
aam
xchg
adc
push
jns
sub
add
shll
fcomp
iret
add
and
leave
hlt
mov
ja
jp
sbb
jmp
cmp
outsb
subb
ret
sbb
push
cmp
cmp
mov
in
add
cmp
ja
mov
mov
popl
fcoms
inc
cmp
ss
add
jmp
sbb
mov
push
xchg
shlb
xor
mov
adc
add
dec
cmp
sub
clc
dec
or
mov
addl
and
mov
fiadds
sub
ja
pop
lahf
outsl
add
int
test
push
cs
mov
adc
lret
rorl
cmp
scas
pop
mov
push
cmp
dec
cmp
push
inc
cmp
xor
ljmp
in
es
sbb
scas
adc
pop
dec
push
sti
sub
fcom
add
sub
or
lock
mov
in
cmc
pop
leave
mov
pop
or
xor
push
mov
das
jns
adc
xor
mov
and
mov
push
int3
pop
and
add
ds
xchg
xlat
popa
mov
outsl
inc
rcl
add
jae
fwait
das
add
std
cmp
pop
adc
jl
cmp
jne
cmp
jb
or
add
leave
or
jecxz
push
sub
add
xchg
lret
insl
or
flds
or
add
das
mov
add
imul
lock
ljmp
sbb
lea
and
ss
add
std
test
lahf
int
mov
dec
add
or
add
xchg
nop
out
movsb
adc
or
mov
movsb
fs
and
or
xchg
lods
bound
fs
lock
xlat
mov
and
pop
in
sub
pop
movsb
push
cmp
pop
adc
aam
push
inc
xchg
inc
and
test
mov
push
js
add
fdivrl
push
pop
inc
mov
lock
ja
shll
notb
pop
in
stc
in
mov
adc
fsubrl
mov
test
and
dec
pop
or
sbb
or
adcl
out
or
xor
fmull
cmp
test
push
aam
xchg
adc
jg
pop
imul
inc
and
push
daa
sub
push
cmpsl
or
daa
xchg
adc
lock
shrb
rorb
inc
imul
xchg
add
mov
and
in
aad
pop
scas
pmulhw
jb
int
jne
bound
fnsave
in
sbb
cmp
xor
mov
outsl
frstor
pop
adc
aam
inc
lods
fcom
pop
adc
sub
dec
roll
rolb
les
fcomps
js
lret
push
adc
push
sbb
inc
pop
dec
add
ret
push
out
push
sbb
fcoms
push
data16
and
cmp
push
and
stc
lods
cld
rolb
cmpsb
out
or
cmp
in
addl
pop
add
push
push
pop
mov
sarb
adc
adc
mov
enter
or
inc
in
xlat
cmp
xchg
and
mov
add
inc
or
in
rolb
shlb
lods
or
xor
inc
jo
and
fdivl
push
xor
mov
add
cmp
sbb
xchg
and
jmp
jo
pop
pop
inc
mov
mov
test
add
adc
or
shlb
pusha
lahf
dec
dec
push
pop
mov
lret
rclb
jle
ljmp
divl
dec
xchg
push
mov
pop
mov
std
inc
push
push
lods
xchg
rol
push
mov
or
add
pop
dec
cmp
jne
mov
fiadds
test
cltd
or
xlat
or
fstl
jl
xchg
add
mov
lock
add
ret
xor
cmp
xor
pushl
cmpl
jne
inc
cmp
jb
dec
and
cmp
inc
stos
push
dec
or
rcl
or
inc
je
inc
push
sub
mov
jne
inc
cmp
jae
rorb
adc
jl
push
sbb
jo
pop
mov
jg
js
sub
add
mov
jecxz
inc
das
or
sbb
cli
push
fsubl
nop
roll
mov
sarb
inc
testb
pop
pop
out
movl
aam
or
pop
rcll
mov
sub
je
fldcw
popf
movsl
adc
push
lea
mov
inc
leave
mov
cmp
jge
insl
dec
mov
mov
ret
out
push
xor
stos
jne
cmpl
clc
pusha
pop
push
push
mov
xchg
jmp
nop
xor
mov
ljmp
or
into
shll
insb
adc
cli
mov
insb
add
pusha
jne
adc
mov
dec
push
dec
add
mov
fadd
sbb
sbb
rcrl
xor
add
xchg
loop
add
ret
hlt
push
nop
outsb
icebp
or
addb
add
mov
imul
push
mov
andb
jmp
or
inc
jp
sbb
xor
xor
jb
mov
int3
loopne
pop
pop
pop
fiadds
xorl
or
stos
mov
or
aad
pop
sub
and
subb
sub
mov
jge
xchg
outsb
adc
jecxz
mov
jne
add
fldl
push
pop
adc
testb
out
std
out
cmp
pop
popf
outsb
pusha
or
pop
pop
sahf
xchg
add
inc
adc
mov
jne
mov
sub
jnp
lods
sbb
enter
pop
cmp
jmpw
nop
out
cmp
divb
loopne
jae
and
sub
mov
pop
dec
sub
inc
cwtl
stos
add
addr16
pop
cmp
xchg
jne
cs
add
movsb
add
lcall
xor
pop
hlt
adc
sbb
adc
mov
push
ret
fisttpl
sti
xor
int3
and
addl
add
mov
sbbl
clc
xchg
inc
cmpsb
loopne
mov
and
sbb
outsl
ss
sbb
gs
adc
or
jmp
jecxz
fdivl
subb
mov
test
int
add
loopne
and
les
orl
adc
and
mov
push
mov
dec
into
lahf
cmpsl
ret
lods
push
stos
je
mov
mov
rclb
test
mov
aam
movl
jecxz
lock
sbb
add
adc
mov
test
lock
pop
mov
inc
jle
mov
xlat
adc
fdivrl
imul
add
in
into
adc
jae
xchg
sub
inc
and
addb
scas
mov
or
imul
push
mov
jno
add
mov
xor
xor
add
orl
stos
push
rolb
nop
fisttpl
js
sbb
or
xchg
push
add
cmpsl
push
nop
and
add
aas
jbe
add
pop
les
rorl
inc
inc
inc
xor
dec
dec
inc
fldcw
loop
mov
mov
adc
xor
insb
add
dec
pop
dec
jne
dec
inc
xchg
jmp
xchg
test
add
sahf
ja
daa
push
mov
cmpsb
and
aaa
mov
repz
mov
sub
adc
mov
mov
popa
push
push
dec
mov
add
add
test
xor
inc
adc
xor
xlat
sahf
shr
or
mov
add
sub
adc
sub
push
call
cmp
pop
adc
and
xchg
and
push
adc
insb
pop
pop
mov
js
mov
pop
arpl
add
dec
sub
cs
xchg
jno
roll
push
sbb
dec
pop
add
xchg
or
add
or
pop
push
daa
add
jle
loop
adc
pusha
js
loopne
and
adc
loope
cltd
loope
inc
insl
fs
and
adc
xchg
dec
je
mov
sbbb
leave
shlb
imul
insl
or
or
rorb
std
push
std
sbb
lds
push
mov
jle
sbb
push
mov
xchg
mov
orl
mov
testb
and
xor
test
in
sub
sub
mov
xor
popa
xor
xchg
mov
fwait
inc
pop
mov
je,pt
enter
test
iret
nop
push
loope
jmp
xchg
out
cwtl
push
popa
and
sub
adcl
sahf
aaa
lods
sbb
fcompl
adc
sbb
xchg
pop
stos
bound
dec
adc
mov
fdivrl
pushf
addb
fwait
popa
adc
sbb
rclb
stc
pop
shll
mov
add
lret
jecxz
mov
mov
loopne
xor
pop
mov
mov
ret
les
pop
dec
dec
mov
leave
add
push
sbb
mov
loope
pop
dec
aaa
rcpps
xchg
push
movsb
setb
inc
cmp
out
and
pop
xchg
je
fwait
rclb
je
push
sahf
and
in
xor
in
movsl
sub
and
stc
sub
dec
pop
dec
or
mov
ret
out
insb
adc
mov
aad
dec
pop
out
adc
inc
or
or
nop
cmp
cmp
push
inc
les
pop
inc
bound
js
je
push
xor
addl
std
jp
adc
add
xor
aam
aas
push
sbb
adc
or
sub
adcb
push
sbb
fucom
int3
sbb
imul
or
push
push
dec
pop
loopne
push
shr
adc
push
lock
cmpsb
or
add
inc
sbb
rorb
in
or
or
adc
or
add
xchg
xchg
inc
mov
and
or
xchg
les
cmp
pop
popa
or
lods
dec
arpl
pop
mov
cmp
sbbl
dec
jo
add
or
jo
mov
cld
xor
and
test
jne
incb
push
jmp
ljmp
jne
add
xor
cmp
pop
in
nop
dec
loope
cmp
lock
int
mov
movsb
sti
lods
cld
add
push
sub
inc
sbb
inc
adc
sub
add
mov
mov
xchg
mov
pop
mov
push
and
scas
jmp
dec
xchg
add
mov
dec
js
addr16
movsb
xchg
mov
mov
push
jbe
add
xor
add
mov
adc
outsl
jnp
mov
jne
gs
cmp
clc
jb
pop
pop
push
or
lods
sbb
push
movsb
ret
xchg
out
fists
or
cmp
or
and
jnp
mov
test
mov
adc
add
or
ds
cmp
cmp
outsl
out
pop
mov
js
leave
cmp
mov
jg
cmp
or
je
add
mov
mov
inc
jmp
mov
and
jl
add
xor
mov
movsb
loopne
or
push
adc
push
pop
mov
stc
insb
mov
push
push
sbb
inc
add
add
jmp
sub
jmp
adc
or
push
repnz
popa
imul
js
loopne
jno
inc
and
dec
mov
test
push
and
sbb
je
cmc
bound
pop
in
cmp
or
int
cmpsl
xchg
cmp
notl
dec
fdivs
or
dec
ret
dec
pop
push
jne
mov
push
adc
mov
push
scas
jns
prefetch
add
sub
mov
loopne
dec
jns
push
jo
xor
mov
pop
jmp
dec
or
inc
or
and
cmp
or
lds
mov
add
dec
xor
call
push
cmp
push
imul
das
dec
test
cmpb
xchg
dec
jae
xor
jmp
sbb
andl
push
mov
inc
mov
stc
inc
jno
flds
inc
or
sbb
mov
cwtl
sub
sbb
pushf
adc
dec
mov
ret
mov
or
decb
push
dec
or
xor
cltd
inc
jecxz
test
rclb
and
add
sub
cld
jb
popf
xchg
call
pop
or
les
cs
lods
insw
pop
dec
jmp
or
xor
dec
or
mov
or
add
sahf
pop
in
scas
add
push
push
hlt
dec
inc
xor
add
and
add
jo
jbe
mov
fsubrl
xor
add
xchg
mov
sub
cmp
sarb
in
fcompl
call
data16
lock
or
daa
and
stc
imul
clc
and
loopne
call
mov
push
add
push
push
pusha
addl
int
sarl
lret
cmpb
jnp
mov
mov
orl
fdivrl
xorl
pop
add
add
cmp
xorl
pop
mov
sarl
xor
aam
mov
xchg
jl
jge
lock
cwtl
fmull
push
bound
or
jne
cwtl
lret
call
add
push
mov
mov
cmp
lea
jg
ret
roll
jmp
sbb
or
lea
scas
ret
cmp
mov
cmp
pusha
or
inc
hlt
les
js
and
fdivr
push
lds
test
adc
jge
jb
or
cmpl
pushl
jmp
inc
jmp
lea
imul
or
sbb
bswap
adc
push
aam
mov
lock
ret
mov
inc
pusha
mov
icebp
lea
cmpl
mov
ss
jno
add
loopne
xchg
mov
add
pop
mov
fnsave
cmc
in
xor
je
dec
cmpsb
pop
or
aam
or
xchg
packsswb
sub
jae
inc
jmp
incl
sbb
pop
add
aam
subl
cwtl
xchg
dec
jnp
aam
lea
in
or
sub
cmpsl
cld
lods
or
ret
dec
xchg
xor
jg
pop
fcmovnbe
rolb
shrl
mov
or
adc
mov
outsl
or
ret
lea
add
push
inc
add
jb
jns
pop
pop
aas
dec
pop
int3
in
xor
mov
loopne
xor
or
pop
out
xor
sub
clc
jecxz
fnsave
xchg
pop
hlt
je
faddl
jp
ja
lret
jae
jmp
mov
mov
jmp
cmp
fiadds
lahf
and
xchg
or
mov
jne
inc
enter
or
sbb
or
mov
or
mov
push
xchg
xchg
repnz
or
call
or
fildll
sub
inc
cmp
push
sub
movsb
and
rcrb
dec
xor
xor
outsb
or
inc
push
mov
xchg
aam
vrcpps
inc
or
mov
adc
mov
jo
sbb
xchg
pop
loopne
or
or
mov
repz
testl
and
adc
imul
out
mov
jb
mov
inc
dec
into
xchg
jne
push
adc
hlt
add
icebp
out
jl
hlt
sti
sahf
rcr
imul
cmp
mov
xchg
das
mov
daa
iret
fs
fs
sub
cmp
ror
add
pop
push
loop
inc
sub
mov
dec
xchg
push
push
in
push
push
inc
sbb
outsl
scas
or
mov
out
data16
pop
setge
adc
insl
add
daa
sub
aam
loope
sbbl
shl
lret
cmpsl
loope
xchg
push
xchg
loopne
pushf
cmp
or
popf
fidivs
push
pop
or
in
or
leave
pop
sub
cwtl
jl
or
lock
rcrl
and
cwtl
sbb
mov
adc
dec
mov
push
or
add
cli
orl
push
inc
sbb
movsl
pop
cmp
cmpsl
inc
dec
push
push
movzbl
out
push
or
in
in
jmp
dec
movsl
push
ljmp
mov
inc
mov
dec
cmpsl
pop
add
jo
insl
sbb
or
inc
jmp
cli
and
jno
or
roll
sub
jb
mov
add
sub
lock
scas
sub
sbb
or
cmpsl
loope
stos
sbb
lret
popa
andl
dec
movb
mov
adc
xchg
pop
insb
fwait
or
sub
ljmp
pop
call
sbb
fbstp
sub
into
pop
jmp
dec
cmc
sub
insl
or
mov
xorb
sbb
mov
xor
dec
cmp
cmp
jbe
push
iret
jbe
mov
sbb
xor
sub
and
cltd
cmp
ds
mov
sub
push
push
test
dec
scas
add
sti
fiadds
mov
dec
mov
inc
xor
inc
nop
nop
icebp
cmp
out
lahf
jne
push
pop
ffreep
jne
push
aad
cmp
pop
dec
lock
mov
cmpsb
pop
jmp
push
mov
mov
pop
add
mull
sub
inc
jge
into
ret
cmp
jb
adc
movsb
sbb
mov
or
mov
aaa
mov
mov
and
sbb
xchg
dec
and
pop
jmp
jno
subb
mov
int3
adc
sbb
mov
pop
rcrb
loop
mov
rorl
insl
xor
push
lea
daa
pusha
lcall
enter
mov
sbb
and
stc
sub
xor
sar
mov
mov
lret
dec
inc
mov
js
int3
dec
and
int3
loope
lock
in
push
mov
jle
pushl
lahf
or
addr16
push
add
jg
pusha
and
cmp
mov
push
or
inc
sbb
fmul
push
push
push
cs
sbb
cld
adc
aam
xor
adc
sub
into
outsl
adc
cmp
daa
cmp
add
out
cmp
leave
and
outsl
or
cld
andb
test
repnz
pop
or
sub
pop
xchg
rolb
adc
push
push
scas
ret
fdivl
push
hlt
jne
dec
lret
jge
test
add
mov
push
adc
test
jno
addr16
in
jmp
je
mov
sub
inc
pop
pop
and
and
lcall
pop
lcall
cs
out
xchg
and
adc
pusha
jo
sub
mov
add
data16
or
lea
xchg
push
and
add
cmp
dec
jno
mov
xchg
hlt
test
sbb
fs
mov
pop
mov
das
ja
lds
or
or
filds
rep
and
ret
xor
xor
ss
and
lock
or
pop
out
enter
push
rcl
enter
int3
int3
int3
sbb
or
andl
adc
leave
pop
pop
pusha
jmp
add
test
ffreep
add
bsf
jg
jbe
pop
imul
insl
sub
adc
mov
mov
rol
notl
cmp
adc
movsb
jecxz
and
and
test
push
loop
scas
mov
add
xor
mov
xchg
or
test
xchg
je
cmp
adc
sbb
pop
mov
dec
jns
inc
sbb
sbb
cld
add
jecxz
xchg
popa
and
scas
mov
dec
shlb
mov
push
pop
dec
popa
adc
sbb
dec
sub
aaa
mov
jge
jmp
lock
adc
or
adc
and
sub
push
pop
inc
and
out
andl
dec
add
cwtl
pop
xchg
mov
pusha
xchg
sahf
insb
and
int
push
mov
mov
roll
lods
dec
jmp
push
add
cmp
out
loop
fiaddl
dec
sbbl
scas
xor
lcall
mov
mov
jmp
js
pop
push
clc
pop
add
push
push
inc
sti
loopne
hlt
push
fsubrs
out
mov
mov
and
aad
sub
fcompl
cli
rclb
xor
jbe
ret
mov
jg
pop
mov
pop
cltd
lret
imulb
loop
fcomps
rcrb
inc
jbe
push
addl
mov
movsl
or
sub
pop
daa
stos
cmp
shl
das
or
mov
dec
mov
xchg
shrl
imul
popa
xchg
out
fldenv
call
dec
jg
test
sub
xlat
lcall
rorb
in
sbb
and
mov
dec
nop
sbb
movb
sbb
inc
pop
rcl
sub
dec
push
inc
sub
xchg
xor
push
push
add
lods
mov
test
insl
jmp
xlat
mov
adc
jle
loop
or
xor
jmp
xor
xlat
insl
dec
push
sbb
enter
dec
lods
ret
xorl
cmpb
rolb
out
push
adc
pop
clc
jne
loopne
popa
pop
subb
hlt
jmp
cmpl
jge
repz
sub
xor
sbb
and
fisubs
cmp
stos
ret
adcb
rorb
jmp
test
inc
add
cmp
repz
sbb
aas
outsl
insb
push
mov
pop
out
inc
xor
xorb
xlat
xchg
cmp
push
push
push
rorb
cmp
loope
fcomps
xor
xor
mov
jge
xor
orb
pop
mov
cs
xlat
push
imul
int3
jmp
mov
inc
test
aam
cmp
imul
cwtl
xchg
lea
inc
iret
xchg
mov
add
pop
movsl
add
or
bound
mov
mov
hlt
pop
test
rclb
shl
ljmp
stc
clc
popf
dec
dec
jnp
push
or
mov
push
mov
pushf
push
cmpl
push
mov
pushl
mov
cmp
mov
push
push
dec
and
inc
movsl
adc
xor
orl
lock
lahf
hlt
dec
rclb
stc
popa
dec
fwait
in
popf
mov
rorl
mov
mov
push
jge
imull
aam
fwait
push
cmp
jbe
mov
pop
scas
mov
push
and
mov
in
mov
fisubrl
test
mov
sub
pop
fiaddl
into
js
xchg
enter
jge
and
and
fdivrs
push
aad
fmul
jb
fcomip
pop
dec
add
add
inc
out
xor
cli
mov
adc
adc
mov
or
push
jl
cmp
or
adc
and
cmp
dec
lock
push
jnp
xchg
mov
repz
xor
mov
dec
test
mov
sub
in
adc
je
mov
pusha
stos
mov
push
cmp
pop
in
stc
mov
fcoml
daa
in
add
jmp
sbb
xchg
adc
push
xor
jge
inc
cmp
or
ret
repnz
out
jo
loop
hlt
or
cmp
xchg
mov
es
adc
fdivs
mov
jmp
mov
inc
cmp
test
adc
cmp
das
and
pop
jno
add
or
pop
pop
mov
or
int
sti
rep
movsw
push
movsb
ret
jno
add
cld
movsb
mov
addr16
sub
mov
adc
ljmp
neg
std
mov
inc
mov
adc
movb
dec
lea
cmpb
pushf
out
mov
xchg
cmpsb
add
push
out
mov
mull
dec
out
pop
jl
ds
movsbl
imul
dec
ss
push
ja
aaa
jge
add
jb
and
push
cmp
je
push
push
loope
and
sbb
add
ss
stos
xorb
or
push
xor
xchg
inc
mov
sub
pop
sbb
push
jp
inc
test
nop
mov
insl
lock
outsl
inc
out
add
add
jle
push
fistl
mov
subl
shl
out
or
sbb
and
cmp
jl
add
sbb
mov
mov
sbb
add
leave
adc
in
sbb
inc
push
inc
sbb
and
test
dec
push
push
fnstenv
mov
add
xchg
push
cmp
loop
mov
push
push
pusha
cmpsb
pushf
cltd
push
push
inc
mov
jb
mov
lods
dec
ret
and
inc
mov
xchg
and
dec
testb
and
stc
out
fwait
mov
adc
cmp
cmp
add
add
cmp
cmp
push
pop
or
fdivrl
or
jnp
or
jbe
jmp
or
push
jmp
por
jmp
adc
pop
adc
push
adc
dec
adc
dec
adc
push
jmp
pop
jmp
sbb
xor
fcompl
jmp
sbb
es
and
push
jmp
pop
jmp
and
or
push
and
add
adc
out
pop
mov
add
add
test
xor
cmp
popa
xchg
push
pop
push
repz
repz
daa
das
aaa
aas
iret
repz
inc
dec
push
pop
pop
arpl
repz
insl
jb
jl
cmp
repz
lahf
movsb
test
repz
mov
ljmp
add
and
or
decl
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
push
and
and
push
test
mov
repz
xchg
push
sbb
inc
repz
xchg
mov
mov
dec
clc
ret
or
push
add
idivl
mov
jmp
lods
aad
jmp
repnz
mov
jo
in
jae
sub
xor
popf
mov
push
cmc
shr
fstpl
pop
movsb
xchg
shll
or
jl
cld
mov
sub
ss
mov
cld
inc
lods
push
inc
cmp
jbe
cli
popa
inc
adc
jns
sub
and
in
push
cmp
push
js
loop
push
sub
mov
fwait
sub
dec
test
mov
fs
pop
pop
adc
pop
push
push
stos
int3
add
jp
mov
cmpsl
push
xchg
push
dec
fstps
hlt
iret
pop
lea
add
sbb
sub
push
test
out
and
xor
shlb
dec
loope
pop
xchg
jl
push
outsb
stos
cmp
push
jbe,pn
fisubs
dec
nop
in
addl
ss
cwtl
or
xor
pop
adc
das
adc
sbb
pushf
inc
sahf
xchg
add
int3
fildl
jb
jns
adc
sbb
lods
add
nop
mov
xor
xchg
jns
push
mov
lock
sbb
outsl
movsl
mov
cld
cmp
add
jle
dec
or
add
je
mov
fsubr
xor
xor
bswap
mov
add
adc
add
cmp
mov
mov
xor
add
adc
rcrl
fcmovu
sub
pop
arpl
ljmp
dec
push
push
jge
std
inc
dec
repnz
pop
sbbb
lock
mov
les
mov
xchg
mov
add
jge
ret
xlat
enter
mov
add
orb
pop
jmp
xchg
push
ljmp
inc
push
push
sbb
dec
or
test
push
fiaddl
xlat
andl
imul
xchg
or
pop
pop
jne
push
cli
mov
push
imul
gs
js
inc
js
mov
jmp
add
cmp
adc
pop
add
push
orl
sbb
jle
jmp
inc
insl
sbb
add
sbb
das
add
add
mov
ja
mov
cmp
andl
ficoms
xor
test
mov
jno
dec
rcll
or
inc
adc
inc
pop
adc
push
paddb
sub
mov
adc
push
in
aaa
js
push
push
add
pop
or
adc
test
cmp
pop
and
or
hlt
fucom
mov
dec
or
adc
and
push
add
cbtw
pop
mov
and
fdivrs
inc
push
mov
add
test
int3
lock
push
xchg
mov
in
mov
push
lea
shll
pushf
pop
push
xchg
push
xchg
jno
push
sub
dec
enter
and
mov
popf
xchg
xor
sahf
and
or
loopne
or
cmp
mov
push
cmp
cmp
addl
or
adc
inc
repnz
in
mov
cmp
xor
mov
mov
sbb
shl
les
jmp
les
add
sub
add
lret
pop
in
cwtl
push
inc
scas
test
iret
repz
addr16
mov
ret
lret
popa
fsubl
stc
faddl
shlb
lods
imul
mov
sub
fs
sbb
lods
add
andl
ret
popa
insb
lock
mov
xchg
daa
xchg
cmpl
sbbb
cmp
jne
lcall
sbb
or
dec
xor
or
or
dec
enter
dec
insb
clc
sub
pop
pop
repnz
mov
sbb
sbb
mov
das
xor
cmp
je
je
subb
lret
addb
fs
popf
rolb
mov
push
mov
cmp
repnz
add
loopne
and
xor
add
std
enter
xchg
cmp
and
enter
cmpsl
int3
or
lret
testl
add
das
es
adc
dec
in
orb
mov
add
pusha
add
cmpsb
pop
push
call
push
pop
push
push
shlb
mov
pop
pusha
and
sbb
mov
ljmp
data16
stos
pushl
sub
cs
psrld
lea
sbbb
dec
add
lahf
mov
lahf
pop
loope
mov
sbb
cwtl
mov
xchg
add
je
in
in
daa
in
jo
mov
dec
sbb
add
cwtl
xor
mov
mov
sub
mov
or
dec
xor
repz
test
mov
and
in
cld
mov
jp
or
and
enter
sti
push
sbb
ljmp
push
lods
inc
inc
cs
movsb
pop
pop
stos
adcb
shlb
in
cmp
stc
adc
push
push
cmp
mov
add
loope
inc
pusha
pop
xor
xor
fsubr
popa
les
dec
or
into
shl
xchg
in
pop
shrb
shrb
loopne
mov
sbb
jmp
aas
add
add
addb
in
xorl
icebp
mov
inc
into
stos
test
xor
or
popa
sub
in
xchg
dec
and
sbb
push
push
cmp
std
inc
ret
or
out
dec
adc
jbe
sbb
add
mov
mov
jmp
xchg
test
push
mov
in
xor
add
imul
dec
inc
push
pop
mov
push
daa
lcall
rclb
and
xchg
jo
xchg
ret
mov
pop
cli
subb
cmp
push
aam
cwtl
mov
and
adc
outsb
inc
call
jg
add
dec
cmp
jne
dec
jmp
cmp
je
mov
inc
cmp
jge
jle
or
fcoml
jl
adc
xor
pop
dec
insl
push
sub
sbb
xor
cmc
pop
fdivrp
mov
mov
in
or
xchg
stos
outsl
dec
add
sbb
adc
sub
and
sub
dec
add
mov
inc
data16
jae
mov
mov
xchg
xor
rorl
insl
dec
push
cmp
sub
push
add
dec
jmp
inc
pop
xchg
notb
push
jne
fsubr
incb
aas
cmp
xchg
cmp
jp
sbb
sbb
adcl
rorb
enter
mov
jo
or
xor
data16
jnp
add
sbb
inc
outsb
shlb
ret
xor
pop
pop
mov
xorb
mov
inc
push
jmp
mov
sub
xlat
stc
roll
or
jns
add
enter
cmp
adc
and
add
xchg
xchg
xor
and
push
add
jnp
setne
mov
or
pop
xor
push
adc
or
cltd
cli
pop
sbb
iret
mov
lods
sar
pop
or
shlb
add
adc
sbb
xor
adc
cmpsl
adc
adc
lods
xchg
stos
pop
or
xor
shl
inc
cmpsb
icebp
inc
movb
pop
xor
cmp
subl
cmp
cmp
outsb
xchg
out
subb
inc
dec
aas
fwait
movsb
jb
or
dec
push
push
pop
xchg
cwtl
es
cmpsb
jno
sub
cmc
inc
pusha
xor
loopne
xor
insb
je
je
jo
mov
pop
loopne
xchg
je
js
jl
pop
test
mov
and
incl
pop
pop
cvtps2pi
out
cmp
jp
int3
xor
jno
cld
addl
hlt
push
or
adc
js
sbb
adcb
subb
movsl
or
xchg
fnstenv
nop
or
jg
incl
prefetch
or
incl
cmp
jl
push
adc
sarb
cmp
jne
inc
cmp
aas
or
xor
inc
sti
je
inc
xchg
call
xor
inc
sbbb
jle
sbb
clc
jl
jmp
imul
and
imul
sbb
lods
enter
push
sub
add
or
push
testb
mov
mulb
sbb
xor
sbb
and
jbe
xchg
mov
jmp
inc
sbb
hlt
push
jl
in
sti
and
shll
jmp
xchg
inc
cmp
adc
addl
xor
xor
mov
jbe
xchg
js
adc
js
or
fcomps
mov
mov
xchg
jge
mov
pop
xor
aas
sub
or
mov
repnz
xchg
sbb
adc
push
sbb
xchg
push
pop
cmp
jge
sbb
fcompl
jl
addl
add
push
daa
mov
fistpl
add
pop
sbb
xor
imul
scas
pop
add
push
mov
and
pop
add
add
rorl
into
sub
outsb
push
push
pop
push
cmpb
mov
out
sub
mov
js
add
pop
jne
push
inc
pop
inc
add
adc
push
out
push
push
jp
out
fnstenv
push
cs
dec
push
cld
mov
jge
outsl
call
xchg
or
push
clc
mov
push
sbb
es
lcall
mov
pusha
jecxz
stos
pushf
mov
pop
push
xchg
jle
incl
or
scas
xor
jmp
jb
fbld
dec
and
sbb
push
fimuls
jne,pn
push
add
lret
out
cmp
pop
add
add
movsl
mov
jle
cmp
inc
xor
push
and
call
clc
rcrb
into
push
aaa
icebp
clc
add
nop
loop
cli
push
inc
aas
lcall
add
cmp
stc
xorb
lods
pop
push
push
pop
aam
mov
out
xor
pop
mov
jne
addr16
andb
add
adc
sbb
clc
mov
ljmp
test
push
test
mov
repnz
adc
pop
in
mov
mov
xchg
and
and
es
das
mov
popf
pop
neg
call
cmp
mov
xor
mov
fisubs
lock
scas
adc
popf
cmp
or
pusha
mov
loop
push
add
push
mov
rcll
pusha
loopne
or
jmp
inc
pop
icebp
sahf
xchg
cmc
xchg
rorl
or
or
sbb
adc
xor
xchg
xor
cwtl
cmp
ja
push
pop
push
or
mov
orb
add
adc
add
cld
jbe
lcall
dec
mov
xchg
push
sub
mov
loopne
or
pop
das
add
sub
arpl
sub
or
and
or
sbb
js,pt
fs
dec
and
lock
push
add
and
lcall
xchg
mov
or
mov
push
andl
imul
jno
add
jle
js
lds
hlt
push
add
jge
shll
aam
fidivrl
or
pop
cmp
jecxz,pt
cmp
jbe
add
roll
mov
mov
gs
cmp
sub
hlt
dec
push
out
mov
cmpsl
cmpsb
movsb
pop
sbb
loopne
inc
add
mov
pop
or
push
push
clc
shlb
or
dec
lock
movsl
adc
add
adc
jne
or
sarl
lret
mov
dec
test
lock
add
test
jle
dec
dec
jo
dec
inc
sbb
pop
lret
lcall
iret
aam
or
call
lds
pop
cmpsl
xchg
xor
adc
xlat
jno
ret
jmp
daa
mov
inc
xorb
cmp
xchg
loope
movaps
cwtl
lea
push
add
movsb
dec
leave
or
push
and
and
loope
or
lcall
fcmovnb
fstpt
nop
dec
test
cmpl
aam
and
pop
lea
push
pop
push
rcrl
push
adc
js
pop
shl
cmp
addr16
add
ret
adc
mov
xchg
add
sbb
inc
or
repz
mov
ljmp
faddl
cmp
lcall
in
cs
or
nop
cmpsl
or
mov
aaa
je
pop
ss
xlat
or
rclb
adc
jns
xor
xchg
push
xchg
insb
test
hlt
xor
lock
pop
test
mov
push
push
repnz
cmpsb
mov
pop
loopne
nop
iret
lret
push
jo
dec
cmp
sub
scas
test
inc
push
dec
loopne
mov
xor
in
sti
into
sbb
andb
iret
lock
lahf
dec
ds
inc
push
xor
push
nop
jp
push
inc
test
dec
aas
push
sbb
and
in
or
xorl
xchg
out
insb
adc
or
movsl
add
pop
addb
clc
mov
lea
sub
cmpsb
mov
mov
hlt
mov
cmp
mov
jl
mov
cmp
cmp
pop
jnp
andl
adc
add
nop
sub
adc
sbb
pop
bound
inc
dec
int3
jne
movsl
mov
daa
push
pop
xor
xchg
or
in
push
sub
and
outsl
cmp
or
mov
jnp
insl
add
add
add
xor
imul
or
mov
add
test
fst
or
out
sub
in
movsb
lds
sbb
mov
ret
sbb
ja
adc
xchg
adc
pop
lock
das
dec
push
pop
add
pop
add
pop
or
push
inc
jb
sbb
xor
inc
cmp
jl
stos
add
or
push
mov
je
popa
jge
call
push
mov
pop
icebp
inc
ret
and
mov
pusha
aaa
dec
movsb
jle
out
dec
or
xor
lret
dec
shlb
out
jle
jle
add
mov
jmp
xor
idivl
andl
dec
icebp
icebp
lea
jne
mov
movsb
rorl
and
inc
pop
xchg
iret
es
movsb
jne
xor
cli
clc
femms
mov
daa
loopne
add
push
shlb
or
inc
ja
sbb
add
insl
lahf
out
ss
push
cs
cmp
inc
cmp
dec
cwtl
sbb
pop
push
push
mov
jne
mov
xor
pushf
popa
inc
jecxz
adc
push
lcall
xor
mov
scas
insl
insl
sub
ljmp
pop
testb
call
adc
lahf
movb
or
in
xchg
lcall
adc
pop
mov
cmp
mov
aaa
mov
icebp
xchg
and
inc
adc
popl
mov
and
sub
gs
add
shll
xor
push
andl
addb
push
adc
pop
and
loopne
xor
data16
adc
mov
push
fistpll
es
push
mov
or
push
xor
add
cmp
sbb
and
or
repz
push
out
movsb
jecxz
dec
aam
or
jge
ffree
sub
das
jne
push
mov
inc
add
sbbb
fdivrl
lea
pop
or
inc
sub
jl
mov
mov
mov
shlb
add
add
mov
ljmp
loopne
add
and
shl
xor
cmpb
mov
mov
jne
movsw
movsb
mov
test
fsubl
arpl
sbb
psubw
jge
sub
into
push
fistpll
add
jmp
mov
or
push
les
sbb
push
outsl
sbb
fildll
add
sub
xor
push
add
mov
mov
push
dec
push
inc
sbb
hlt
cltd
and
cmp
dec
adc
insl
add
xchg
push
xchg
out
ja
push
add
incl
fstl
fldz
fcomp
fnstsw
xor
push
pop
fsubr
pop
faddp
andl
push
push
sbb
pop
add
push
popa
inc
add
and
cmp
hlt
imul
orb
outsb
nop
xchg
popa
push
outsl
lock
imul
push
cmp
push
jl
cs
jbe
test
inc
push
cmc
or
xor
sub
jmp
ret
jp
ret
iret
jge
cmp
aas
mov
fldl
or
popa
ja
mov
fistpl
inc
lods
push
mov
fs
inc
adc
or
push
adc
pop
push
pop
cli
adc
sbb
adc
xorb
cmp
lock
inc
imul
sbb
sbb
imul
loope
loope
mov
xchg
insl
jmp
fldl
push
pop
test
sub
int
call
or
mov
rol
loop
fimuls
enter
hlt
fsubrl
loopne
dec
cmp
call
xchg
jne
mov
lds
outsb
cmp
jo
ret
dec
outsb
sarl
subb
frstor
push
or
pushl
jnp
cmp
and
pop
ja
lea
inc
subl
jecxz
xor
nop
ftst
xchg
pop
inc
dec
data16
mov
jge
jne
and
in
or
pop
cmp
je
or
leave
xchg
pop
cltd
sub
pop
sbb
mov
push
testb
pushf
jne
cmpsb
dec
mov
push
ss
sub
xchg
pop
repnz
aas
cwtl
add
mov
xlat
sbb
test
push
and
fdivrl
push
or
adc
cmpl
inc
test
xchg
add
push
and
push
lahf
mov
gs
cmp
add
mov
sbb
fiaddl
push
cmp
jmp
push
adc
pusha
pop
test
pop
mov
pop
inc
jo
jne
movsb
mov
add
ss
les
add
pop
mov
movsl
jb
ret
cmp
pop
mov
pop
sub
fnstsw
push
add
mov
sbb
and
jne
xor
dec
inc
adc
dec
adc
add
push
leave
mov
mov
arpl
push
rcrb
or
add
neg
adc
push
add
dec
and
enter
int3
mov
jne
mov
imul
dec
roll
ljmp
call
adc
and
sub
movsb
lock
adc
daa
test
fs
mov
leave
add
lock
inc
es
inc
je
or
mov
add
add
push
and
pop
ss
adc
sbb
or
or
add
jne
cmp
mov
jecxz
bound
add
daa
jmp
xlat
popa
jno
xor
inc
cmc
mov
jp
nop
mov
mov
mov
adc
mov
addr16
rcrl
pop
fcoms
jo
cmp
inc
jl
inc
cmc
pop
add
sti
fimuls
nop
mov
add
inc
pop
push
xchg
pop
inc
pop
aaa
arpl
jne
pop
dec
mov
push
sbb
push
xor
hlt
adc
cmp
es
ljmp
jle
or
nop
sbbl
fiadds
sub
adc
add
jo
push
sbb
fldl
rcr
add
fdivl
test
addr16
inc
movsb
adc
jne
push
jo
into
mov
loope
or
test
sub
ss
das
and
cmp
jb
cmp
mov
in
pop
inc
jnp
push
mov
inc
or
cmp
sbb
mov
in
or
imul
int
inc
test
add
xor
and
sbb
push
push
dec
test
and
and
xchg
mov
add
adc
pop
inc
mov
shrl
mov
enterw
arpl
mov
mov
or
js
fstl
lock
cmpsl
inc
mov
pop
hlt
jp
add
bound
mov
jbe
cmp
push
push
inc
rolb
cmp
stos
mov
cmp
testl
or
mov
dec
call
sbb
push
jb
push
nop
frstor
mov
movsb
leave
cmp
push
and
dec
sbb
insb
jb
insb
shlb
jl
xlat
rclb
jp
and
rcrb
or
push
jmp
mov
sbb
and
data16
andl
dec
in
in
ror
cmp
mov
xchg
adc
inc
pusha
pop
push
mov
lock
sbb
inc
xchg
push
in
cmp
xchg
les
or
enter
mov
and
pop
das
int
pop
dec
push
enter
and
push
pop
push
add
push
jne
xchg
cld
xchg
outsb
xor
push
aam
cmp
popf
loope
jnp
aas
jo
and
xorb
mov
mov
or
inc
dec
xlat
mov
mov
mov
xor
adc
lock
lahf
pop
jb
sub
push
add
loopne
sub
fcmovu
adc
faddl
in
sub
or
test
xchg
cmp
inc
cld
or
mov
je
dec
or
clc
and
mov
mov
mov
ds
pusha
stos
push
sarl
sbb
xor
mov
shlb
test
rcrl
in
mov
xor
ds
jp
jo
pop
push
call
xchg
or
ja,pn
sbb
verr
aam
xor
lods
pop
add
and
popa
mov
push
xor
aaa
push
xchg
mov
dec
cmpsb
sub
or
or
and
push
int3
mov
icebp
fwait
cli
cmc
jmp
push
in
mov
shr
and
pop
cmova
add
add
dec
cmc
mov
cltd
mov
call
xor
mull
mov
jecxz
or
ret
pop
adc
push
mov
lret
jl
adc
insb
cmc
loop
dec
int3
movsb
lahf
lock
ret
pop
add
sub
xor
movsb
test
jecxz
cmp
mov
or
sbb
cld
fisttpll
sub
shrl
test
outsl
add
xchg
sti
inc
rcll
xor
sbb
nop
push
adc
sbbl
pop
push
les
mov
mov
push
jmp
adc
sub
add
xor
leave
inc
orb
add
xchg
bound
faddl
notb
lea
cmp
rorb
or
pop
add
add
aaa
lock
pop
jnp
popl
push
push
inc
jle
shlb
xor
cmc
loopne
mov
mov
pop
mov
jns
enter
push
mov
into
rorb
pop
out
xchg
xor
lock
stc
push
or
push
xchg
sbb
sub
sub
enter
ljmp
std
xor
sub
repz
inc
jg
mov
pop
mov
push
cmp
add
cmc
out
inc
mov
repz
inc
aaa
add
dec
cmc
mov
call
mov
repz
jb
imulb
sub
cs
or
ror
arpl
loope
incb
or
jb
dec
jae
stos
sub
and
and
sub
in
aam
sub
clc
mov
sbb
and
testb
fisubrs
lret
xor
es
loop
sub
or
aam
jmp
imul
dec
gs
test
fdivrl
xor
xchg
lea
int3
in
fiadds
call
dec
push
push
out
adc
loopne
inc
jno
sub
sbb
daa
xchg
jne
imul
push
leave
and
and
mov
es
imul
xchg
enter
or
lret
and
imull
push
aam
sub
leave
inc
imul
pop
or
popf
repz
in
mov
and
jne
repnz
rcl
push
sbb
mov
adc
mov
nop
inc
or
sbb
jo
std
cmp
ja
mov
pop
or
in
mov
xchg
adc
adc
ljmp
test
dec
mov
mov
jmp
jne
or
sub
fidivrl
push
mov
and
shr
les
leave
nop
or
js
and
rclb
leave
and
sbbl
push
dec
out
or
mov
xor
add
pop
xchg
push
and
idivb
test
call
pop
ret
icebp
inc
push
mov
and
cmpsl
loopne
addb
data16
in
dec
inc
add
shlb
ror
movb
adc
sbb
pop
cmp
dec
mov
xor
inc
fdiv
movsb
and
xchg
jle
push
negb
push
lods
cmp
xor
xor
jmp
add
xchg
mov
sbb
xor
and
jle
daa
test
or
pop
sbb
jne
mov
orl
xor
jecxz
or
ss
inc
and
mov
adc
cmp
jbe
inc
and
test
mov
jmp
insb
and
and
jnp
mov
add
jb
daa
in
cmp
test
inc
ja
mov
push
or
jp
add
test
dec
mov
push
fcoms
cmpsb
lcall
mov
data16
inc
inc
sahf
dec
cmp
add
lods
pop
aam
cmp
loopne
mov
pop
das
sbb
jl
leave
daa
aad
mov
mov
sbb
je
dec
push
push
or
shlb
push
or
add
nop
add
enter
loope
push
and
pop
mov
xchg
arpl
movsb
xchg
or
xlat
and
aam
or
jmp
adc
negl
les
aam
daa
cwtl
sbb
xor
dec
bound
xor
and
sub
lea
jl
stos
mov
xchg
popf
xor
pop
arpl
addb
popa
dec
sbb
in
stos
add
push
imul
in
jb
dec
rorb
mov
xor
push
push
or
xchg
aam
jmp
ja
loop
or
add
or
pop
lock
mov
test
jo
flds
inc
add
arpl
push
jae
sbb
push
push
dec
dec
push
bound
iret
idivl
addr16
pop
pop
cmp
jge
inc
mov
movsl
sbbb
push
insb
gs
lock
xchg
add
sub
das
adc
popa
adc
sbb
push
mov
xchg
fs
loope
scas
mov
loopne
adc
xchg
gs
mov
lock
sub
inc
adc
das
adcb
cli
adc
mov
mov
int3
adc
rcrl
sub
movb
mov
sbb
adc
pop
daa
inc
repz
insl
insl
inc
cmp
push
je
and
lods
adc
je
push
sahf
es
and
sbb
aad
xchg
jecxz
cmp
mov
pushf
jne
mov
rol
or
cmp
mov
adcb
add
dec
and
mov
adc
enter
lock
in
jle
mov
xchg
pop
mov
test
sub
scas
clc
cmc
push
loop
mov
push
jns
lods
out
std
ficoml
mov
cmp
pop
dec
fistpl
cmp
dec
add
lea
push
aas
pop
xchg
popf
test
push
or
sbb
pusha
inc
sbb
cmp
sbb
popf
jl
jo
push
cld
movl
jge
inc
mov
lea
mov
jo
xchg
shlb
cmp
mov
mov
test
or
jo
cmp
fwait
lret
rol
adc
shl
pushf
popf
ja
int
in
inc
or
push
pushf
push
incl
push
js,pt
add
pop
cmpb
jl
cwtl
leave
adc
xor
add
enter
mov
mov
pushf
aam
pushf
lods
mov
movsb
popf
mov
pusha
inc
sub
in
xor
adcl
lret
je
aaa
jle
out
iret
inc
xor
popf
loope
and
and
insl
mov
fistps
outsl
movsb
js
movsb
jg
mov
mov
lea
xchg
mov
pusha
test
or
das
jle
movsbl
add
cld
or
rep
mov
sbb
icebp
cmp
jne
adc
or
xchg
js
rolb
sub
pop
jmp
pop
enter
or
lret
inc
mov
inc
jb
sub
jo
loop
push
stos
xchg
stos
ret
fiadds
add
adc
inc
jb
outsb
xor
mov
lea
jns
jno
jle
push
mov
jne
push
add
mov
cli
inc
mov
mov
adcl
ljmp
mov
jbe
ja
jb
mov
cs
xor
je
ja
pusha
jo
rcrl
sbb
push
push
jns,pn
pushf
pushf
jmp
push
mov
imul
mov
jb
pusha
and
jo
lods
or
lock
dec
mov
cltd
movsl
jb
mov
int3
jp
nop
xor
or
push
loop
mov
stos
xor
mov
mov
push
mov
in
jecxz
pushf
movsb
cwtl
mov
test
jnp
rcl
mov
das
test
lret
aaa
or
xchg
adc
int
nop
dec
rclb
pop
adc
addb
xor
adc
sbb
cltd
mulb
and
pop
or
lret
jb
out
addr16
adc
pop
push
ss
jne
test
jne
jae
rclb
les
lds
or
fsub
pop
xlat
movb
or
cmp
push
xchg
push
das
add
and
test
popa
movsl
rorb
test
dec
mov
js
jg
sbb
scas
mov
lea
xchg
cmp
das
push
or
or
sbb
dec
loop
and
and
mov
fcomp
loopne
loop
in
push
pop
fadds
pop
add
mov
cmp
js
cs
jns
sbb
add
loopne
add
inc
push
ljmp
push
sub
add
push
jbe
adc
aas
add
jo
jbe
sahf
pop
mov
mov
dec
lahf
test
xor
cmp
shlb
dec
imul
mov
push
mov
outsl
lret
lahf
pop
mov
mov
pusha
or
daa
leave
xchg
mov
and
add
and
cmp
movl
cmp
or
push
push
mov
mov
push
nop
fidivrs
sub
push
xor
out
jge
pop
sub
cmp
sub
fucomi
es
cmp
sti
int3
clc
imul
mov
jle
push
add
sbb
cmp
popf
mov
sete
add
mov
popa
in
popa
add
push
and
int
push
push
pop
mov
or
or
imul
sub
xor
xor
lahf
pop
iret
xchg
mov
test
jo
call
rcr
xor
cmp
lods
pop
inc
push
hlt
mov
pop
push
lods
outsb
inc
bound
mov
rcrb
add
out
inc
or
je
xor
cmp
sbb
cmp
pusha
add
cmp
jg
mov
mov
cmp
or
pop
add
into
sarb
xlat
inc
adc
mov
cmp
pop
movsb
mov
push
pop
pop
xor
pop
rclb
jecxz
cmp
push
jl
int
push
jg
sbb
imul
je
or
leave
std
fs
or
je
cmp
jne
xchg
xchg
lret
inc
jmp
inc
fs
and
je
cmp
ds
pop
lret
jmp
lret
sbb
outsl
xchg
xor
add
cmpb
xchg
ret
in
bnd
push
sub
enter
adc
scas
push
mov
xor
fistpl
movsb
push
sbb
add
pushf
and
aam
inc
shlb
xchg
push
in
inc
lahf
and
rorl
add
jo
pop
sub
jmp
pop
in
mov
inc
xchg
and
in
int
adc
mov
xorb
rcll
jl
or
pop
ja
xchg
mov
sub
mov
mov
mov
add
mov
ficomps
fwait
les
add
push
lret
inc
in
mov
mov
or
pop
jae
mov
lock
push
mov
test
cmp
push
rcrb
enter
dec
inc
and
jnp
or
xor
in
aam
mov
push
push
sbb
sub
je
shll
adc
mov
imul
pusha
es
lcall
je
push
insb
out
ss
outsl
sub
xchg
or
in
js
xor
test
or
mov
jae
outsb
or
push
xor
xor
push
or
pop
mov
jle
xor
and
jg
push
push
cmp
sub
lea
leave
mov
fstl
jae
test
mov
repnz
jne
xchg
insb
and
bound
mov
mov
in
inc
enter
mov
adc
mov
jnp
nop
push
shlb
in
mov
and
test
cmpsl
xor
push
add
mov
mov
cmp
fdiv
add
push
enter
push
shlb
les
je
out
mov
fistpl
dec
repz
push
out
push
inc
push
inc
and
add
loopne
lea
sub
ljmp
test
and
mov
rorb
add
rclb
mov
dec
xchg
ss
adc
xor
test
insb
in
cmp
gs
pop
cmp
xchg
pop
leave
rep
sub
push
jae
sub
push
mov
mov
or
mov
and
loope
jnp
add
mov
lret
adc
sbb
mov
sub
adc
xchg
sub
in
insb
arpl
test
jl
int
push
dec
mov
push
sub
pop
fistpll
fdiv
jns
int3
sbb
adc
fcompl
push
popf
and
adc
pop
movzbl
movsb
add
inc
sahf
adc
mov
cltd
pop
pop
mov
loope
out
std
cmpsl
inc
cmp
mov
sub
pop
or
stos
cs
mov
fcos
push
xchg
cmp
xor
shr
xor
out
nop
loope
clc
adc
pop
shrl
into
not
cld
lea
loope
test
movl
fdivl
push
mov
add
aaa
jmp
add
mov
hlt
rcr
mov
dec
jp
sub
or
inc
push
imul
sub
rclb
mov
shrl
orb
adc
cmp
xor
add
adc
jg
insb
call
cli
subb
push
jp
ljmp
mov
test
rolb
sbb
sahf
stc
and
add
add
notb
scas
cmp
push
stc
jecxz
dec
daa
jno
iret
sbb
add
jb
les
dec
popa
das
add
bnd
cld
in
push
mov
or
mov
xorb
int3
jb
push
add
xor
es
in
xchg
cmp
pushf
sub
inc
dec
and
sub
add
inc
ret
testl
jl
hlt
movsl
inc
mov
push
nop
stos
es
pop
sub
cmp
movsb
jle
inc
loopne
inc
push
adc
push
sbb
pop
daa
lock
pop
sbb
pop
sbb
je
sbb
jb
inc
leave
add
add
aaa
into
sbb
sub
insb
enter
jb
pop
cmp
dec
mov
in
mov
cmp
rorb
jmp
inc
arpl
fwait
sub
pop
cmp
ret
cld
aam
lret
sbb
movsb
xor
outsb
inc
movaps
sbb
fildl
jb
and
adc
and
add
push
push
adc
jg
inc
push
push
outsb
lcall
call
cmp
or
or
test
sahf
add
aam
ljmp
push
insl
push
daa
int
xor
push
add
pop
cmp
sub
push
sub
insb
pop
xchg
aam
add
or
mov
filds
jl
in
add
nop
scas
xchg
je
add
enter
mov
das
or
inc
xor
push
adc
rcrl
lock
pop
ficoml
push
fs
and
repnz
mov
dec
enter
rorb
inc
dec
xlat
push
xor
imul
pop
xchg
sti
lahf
or
daa
orb
ret
jmp
cmp
ret
adc
add
jmp
inc
or
bound
sub
adc
loopne
insb
dec
push
adc
or
push
jns
cmc
mov
mov
inc
or
ret
lods
mov
bnd
fcmovbe
jl
mov
mov
inc
mov
and
nop
or
loopne
add
inc
cmp
fwait
cmp
cmp
and
adc
mov
das
sbb
pop
je
pusha
cmp
lods
lahf
cmp
rclb
and
or
movd
cmp
push
pop
push
fwait
or
movsb
adc
dec
xlat
aad
call
sub
aad
imull
dec
cli
ret
fildl
ds
arpl
cmp
jne
fs
sbb
rcrl
fdivrp
xchg
dec
xor
fs
sbb
and
sub
sub
loope
fcoms
xchg
pop
adc
or
rolb
and
pop
repnz
push
ret
add
cmp
add
dec
sub
shlb
cs
dec
adc
or
js
cmovb
int3
and
mov
scas
or
bound
cmp
inc
mov
inc
das
in
test
hlt
add
aam
mov
add
test
mov
xchg
adc
cmp
inc
push
add
and
lods
xor
sbb
mov
jne
shr
adc
mov
adc
popa
add
clc
mov
pop
lock
lret
sbb
mov
sub
fcompl
outsl
lods
je
mov
pop
sub
xor
pop
dec
imul
ss
test
pop
inc
push
test
mov
mov
stos
xchg
cmpb
daa
xchg
jl
push
xchg
sub
mov
dec
or
jns
pushf
pushf
sahf
outsl
imul
jns
pop
movsb
test
test
fmulp
in
in
add
mov
mov
sbb
and
jns
fdivrl
xchg
int3
lods
xor
cs
cltd
sbb
dec
gs
mov
fnstenv
test
enter
add
push
sub
leave
xor
test
jge
xorb
push
movsl
pop
sub
dec
xor
shlb
aad
push
ja
cwtl
add
and
inc
repnz
stos
flds
cld
pop
ja,pn
push
push
cmp
add
adc
sahf
xchg
sarb
xchg
les
idivb
push
inc
adc
rorl
fiadds
xchg
icebp
mov
adcl
adc
cmpb
ljmp
sub
jge
jb
scas
xchg
test
sub
sbb
push
insb
and
push
push
popa
loope
mov
sbb
lods
mov
arpl
fsubs
test
ss
push
jl
mov
shr
nop
push
push
dec
stc
mov
gs
xchg
adc
not
xor
sbbb
loopne
adc
mov
loopne
or
or
daa
lret
cmp
pop
sub
add
or
ds
and
test
cmp
mov
sbb
cmp
add
adc
pop
gs
lahf
xchg
ljmp
jge
inc
je
sub
in
push
dec
ljmp
jl
pop
jmp
push
inc
or
pextrw
and
jmp
adc
mov
cmpsl
lahf
pop
fwait
mov
mov
enter
jae
lock
pop
adc
ss
gs
add
lock
jno
inc
inc
cltd
test
mov
add
dec
jns
insl
movsl
nop
cli
add
mov
lds
ds
outsb
repz
adc
sub
jp
xor
jns
inc
cmp
pusha
dec
pushf
push
inc
cmp
mov
pop
cs
data16
fwait
in
sub
inc
seta
out
daa
cmp
mov
imul
jge
loopne
pop
mov
dec
jge
js
inc
rcl
add
scas
repnz
jns
mov
ljmp
outsb
jecxz
dec
popf
nop
in
outsb
mov
xor
jne
mov
inc
aam
sub
sbb
dec
shlb
xchg
push
in
push
lret
jle
add
mov
pop
arpl
nop
jle
mov
or
inc
push
mov
push
push
test
or
into
pop
sub
addb
stos
fnsave
inc
gs
fwait
adc
ficoms
mov
imul
sqrtps
and
xchg
mov
and
in
lea
sbb
add
inc
xor
cmpsb
push
sub
cmp
movsl
sub
lods
mov
filds
mov
cli
push
insl
stos
pop
cmp
pusha
insb
ja
mov
or
pop
inc
jge
cmp
push
ret
push
and
in
leave
sbb
dec
pop
add
inc
adc
pop
imul
cmpsl
andb
enter
repnz
sar
push
add
outsb
gs
jmp
jle
add
roll
sub
sub
inc
mov
xor
add
push
add
push
add
push
and
pusha
loope
dec
cli
sub
push
mov
xchg
dec
inc
adc
je
sti
push
or
xor
sti
lods
cmp
mov
jl
and
sbb
cld
cmpl
dec
dec
xor
repnz
inc
add
add
jmp
loope
das
or
decl
inc
adc
jb
addr16
mov
mov
add
xor
add
inc
mulb
je
pop
in
leave
fiaddl
dec
or
add
clc
nop
or
imul
add
or
sbb
fwait
jae
enter
lahf
jae
xorb
jle
mov
nop
or
call
xor
add
testl
and
adcl
inc
mov
pop
popa
adc
pop
in
mov
mov
int3
lock
jle
mov
loopne,pt
call
outsl
mov
insb
push
add
pop
inc
mov
jne
jecxz
movsb
add
nop
fcoml
rorb
sbb
hlt
aad
mov
pop
or
jmp
sbb
stos
sub
sarl
and
cmpb
test
cld
push
push
addr16
add
push
dec
add
repnz
arpl
mov
pop
adc
or
hlt
sub
cwtl
cld
push
inc
xor
sub
movb
mov
pop
adcb
stos
adc
cmp
test
add
pop
inc
mov
jo
sub
lods
xorl
test
add
cld
gs
scas
adcl
add
pop
ret
add
test
scas
lret
jl
out
jge
sbb
rorl
ret
sbb
aas
inc
out
or
mov
or
stos
pop
or
xor
xchg
push
mov
add
jne
mov
out
push
push
out
aam
lcall
movsb
test
faddl
ss
push
adc
add
xchg
adc
push
ss
cmp
or
add
xor
filds
jbe
popa
inc
push
jb
mov
mov
sbb
cld
cmpsb
push
pushl
xchg
pop
xchg
or
mov
inc
cs
addb
shlb
mov
jge
jb
nop
jle
mov
ja
jl
jo
xor
cmp
or
pop
dec
or
fs
movb
lret
je
push
lea
mov
cmp
cwtl
push
inc
imul
or
adc
sbb
inc
adc
push
sbb
pop
arpl
in
sbb
js
inc
fmuls
xor
dec
in
xchg
push
repnz
jae
in
gs
and
push
jnp
adc
jecxz
mov
loop
cld
push
faddl
mov
or
push
push
push
lcall
pusha
or
aam
push
lock
jne
cmp
xchg
dec
push
or
js
or
push
ss
xor
test
or
or
enter
sub
mov
ficoml
jno
push
fdivr
adc
inc
fdivs
je
cmpsb
mov
fcoml
dec
inc
or
lcall
add
lea
dec
and
lea
push
xchg
add
mov
sbb
dec
ds
lret
adc
inc
add
push
cmp
dec
shll
add
adc
mov
in
sbb
push
jo
pop
lahf
or
roll
add
pop
aaa
ljmp
or
or
adc
mov
xchg
sbb
xchg
mov
add
cld
add
into
push
stos
jno
jnp
dec
out
mov
inc
int
in
pop
mov
pop
fnsave
mov
lds
imul
stos
cwtl
lock
icebp
ret
fwait
lods
sbb
cmc
ret
push
test
insb
imul
adc
or
mov
mov
loope
lock
xor
adc
stos
imul
aam
inc
xor
sub
pop
sbb
cmp
inc
loopne
xor
or
cmp
insl
adc
push
bound
call
pop
jno
add
fisttps
ret
mov
loope
arpl
loope
push
sbb
rcrb
pushl
ret
leave
xor
pusha
mov
rol
mov
ror
xor
ljmp
xor
xor
jnp
xor
shr
xor
add
add
or
mov
mov
fs
or
jae
or
mov
adc
fiaddl
sti
add
adc
sub
jge
jl
sub
adc
repnz
cli
fisubrs
sbbl
cli
and
and
xchg
push
aam
and
cmp
mov
xchg
data16
xor
repnz
xchg
dec
movsl
xor
pop
outsl
add
and
not
ret
rcl
add
add
mov
add
add
xor
lret
xor
in
rol
addr16
xchg
aam
call
mov
sub
ljmp
outsb
scas
xor
rol
out
add
push
push
cs
cmpsb
xor
fsub
lcall
in
xchg
add
cmp
and
in
lahf
push
cmp
repnz
punpckldq
add
repnz
bound
pop
mov
and
pop
aaa
mov
rorl
cs
xor
dec
xor
cwtl
loopne
in
xchg
lret
in
loopne
and
loopne
xor
cmpsb
cmp
aam
pop
in
pop
xor
or
dec
fnstenv
int3
and
add
insl
pop
xor
jne
and
and
jl
push
ret
iret
or
xor
cmp
imul
test
inc
loopne
add
mov
cmp
jo
ret
push
jo
je
or
ficoms
call
lcall
dec
adc
push
loop
jle
inc
pop
mov
add
add
pop
sub
jbe
call
fcomi
mov
or
clc
jp
push
and
nop
cmpsb
bnd
add
gs
fdivrs
inc
movsb
imul
and
enter
mov
movsbl
add
inc
xor
jo
cli
stos
pusha
nop
or
adcb
dec
shll
cmp
sub
shlb
call
xor
inc
shr
rolb
add
push
pusha
inc
aaa
cli
xor
xor
xor
shlb
shlb
inc
sub
in
imul
rcrb
pusha
add
mov
dec
aam
add
and
push
imul
dec
and
push
adc
push
xor
and
push
pop
cmp
and
pop
pop
pop
adc
test
push
xadd
or
movsb
or
out
fs
in
pop
inc
lcall
xchg
pop
xchg
pusha
and
scas
mov
movsl
mov
arpl
rorb
adc
pusha
dec
sahf
roll
sub
in
subl
in
fs
dec
dec
iret
enter
stc
stc
stc
mov
adcl
mov
int3
inc
pushf
negb
dec
ljmp
cmpsb
imul
inc
mov
in
add
and
add
add
clc
jg
mov
orb
out
pop
add
sub
mov
adc
pop
push
sbb
incl
cmp
jb
icebp
mov
inc
aaa
sub
pop
cld
sub
pop
mov
inc
push
or
decl
sub
xchg
lock
mov
loop
lcall
or
mov
adc
scas
notb
jae
and
shll
pop
xorb
push
xor
aas
lea
and
push
jmp
add
lcall
push
sub
pop
add
ffree
mov
or
mov
dec
jne
pop
add
loope
cmp
lahf
lock
shl
std
jl
sub
mov
cmp
jbe
or
pusha
sub
inc
mov
mov
jae
push
pop
adcl
outsl
fadds
rep
or
lods
cli
popf
sbb
scas
or
fldt
pop
in
push
pop
loopne
ror
gs
call
or
xchg
ljmp
adc
mov
mov
and
in
add
cmp
jb
cmp
ja
lcall
xor
inc
aaa
popa
arpl
jns
push
and
outsb
xorb
decb
push
add
in
sub
icebp
mov
or
or
push
inc
loope
inc
cltd
adc
sub
in
es
sub
clc
aas
xchg
sub
jmp
je
mov
jno
not
mov
inc
or
je
or
sbb
gs
popa
cmp
in
dec
loopne
jne
test
nop
push
dec
inc
lea
inc
mov
pop
add
idivb
cli
add
jbe
adc
or
pop
add
lea
mov
adc
int
cmp
fs
dec
inc
push
inc
clc
adc
xor
mov
pop
mov
sbb
or
pop
cwtl
mov
call
xchg
sbb
arpl
out
mov
lea
sub
sbb
hlt
and
or
cltd
push
call
xorl
mov
pop
cmp
jne
notb
adc
cmp
and
je
xor
cmp
mov
in
xchg
in
ja
pushf
and
dec
call
aad
data16
push
add
push
pop
inc
cld
addb
push
jle
inc
jbe
push
cmpsb
inc
push
jno
inc
mov
loop
jne
mov
inc
xor
out
xorb
mov
movzwl
cbtw
jb
out
push
data16
jb
cmp
lcall
fsubr
adc
aas
les
pop
icebp
fsubl
inc
orl
adc
in
aaa
je
fs
jne
xor
mov
lock
test
aas
push
mov
mov
or
add
pop
jae
mov
test
in
das
jmp
dec
shlb
daa
test
test
sub
fdivrl
add
push
inc
call
pop
sub
add
push
inc
shrb
stc
inc
jg
or
jge
and
jle
es
mov
sub
sub
and
pop
cmp
jl
pop
jle
dec
push
sbb
stos
add
shll
and
jbe
mov
adc
loopne
test
fwait
and
or
je,pn
test
jne
ds
aas
and
jb
or
mov
sub
push
pop
ss
adc
xchg
shlb
popa
enter
add
add
scas
dec
dec
ljmp
decl
fdivs
xor
mov
ficoms
add
pusha
inc
push
rolb
cmp
inc
pop
jg
inc
lahf
sahf
adcb
xlat
push
add
push
mov
cmp
aas
jle
je
sub
lcall
and
and
xchg
push
xchg
ds
stos
xorb
adc
add
testl
jo
icebp
inc
ljmp
xor
or
xchg
mov
sbb
inc
sub
inc
mov
cmp
add
mov
or
push
pop
ficompl
push
push
push
pop
add
pop
movsb
mov
sbbl
or
inc
cmpl
mov
inc
loopne
inc
das
mov
or
xchg
sbb
pop
cwtl
xor
mov
mov
mov
out
dec
mov
incl
addr16
fsubs
push
push
lret
fadds
inc
and
jae
out
push
push
cmpsb
mov
insl
pop
mov
loope
mov
test
dec
jae
into
rorb
push
fsts
sti
mov
mov
pop
filds
fs
pop
mov
subb
push
jle
jbe
push
and
inc
rclb
fstl
add
push
daa
in
movb
loope
pop
push
and
fs
inc
inc
ljmp
xlat
lret
scas
jl
add
cmp
add
push
sbb
or
cmp
mov
cmp
push
or
mov
cmp
lock
xlat
mov
xchg
popa
push
loop
pop
add
hlt
inc
xchg
xchg
stos
insb
mov
or
in
data16
incl
addl
popa
movsl
mov
sub
pusha
jb
cs
push
fisttps
es
add
add
insb
inc
fisttpl
subb
mov
jmp
cmpsb
lods
pushl
jno
shrb
pop
repz
cwtl
pop
push
mov
movsb
push
addb
or
shrb
and
cmp
shll
sbb
xchg
xchg
mov
lahf
jne
adcl
sbb
xor
sbb
sub
int
mov
ret
das
or
jne
inc
xor
xchg
push
leave
mov
rorl
or
and
cmp
enter
or
mov
test
inc
pop
or
cmp
adc
ret
call
out
cmp
movb
adc
or
sahf
rclb
jp
imul
mov
adc
jl
lcall
jo
mov
mov
loopne
sbb
mov
in
sub
pop
aad
in
and
outsw
mov
adc
loope
xchg
push
push
fdivl
adc
jp
cwtl
cld
mov
das
mov
mov
lea
push
das
bound
jo
fcomp
into
cmpl
dec
adc
ljmp
cmpl
dec
dec
jae
sbb
in
fcomp
sbb
or
and
xor
cmp
mov
icebp
xlat
je
mov
cmp
mov
incl
add
inc
xchg
push
loope
or
in
cmpl
and
aaa
sbb
test
bound
add
stos
or
add
xchg
andl
push
shr
mov
fwait
push
xchg
and
or
lcall
dec
dec
jae
jmp
insb
jne
jl
ss
mov
sub
jge
sbb
pop
rolb
call
xor
inc
daa
lea
push
inc
inc
ds
xor
jne
les
mov
adc
or
push
sbb
cmp
call
lock
push
jmp
test
movsb
out
cs
iret
push
adc
sbb
ret
lods
cmp
mov
insb
jl
sbb
ret
jecxz
jmp
add
add
cwtl
jns
dec
and
or
ljmp
cltd
data16
lcall
ret
or
dec
or
fidivrs
popa
in
adc
pop
je
pop
xorl
push
sbb
mov
jmp
add
addb
rol
jne
mov
xchg
outsl
inc
sub
cmpb
mov
mov
xchg
mov
cs
sub
xor
cmp
pushl
mov
mov
mov
fmuls
and
mov
pushf
sbb
cmp
fiaddl
popa
inc
push
ds
out
add
mov
mov
imul
cmp
movsb
sub
mov
push
cmp
jbe
in
fiaddl
and
and
mov
dec
fadds
stos
push
sub
jb
pop
xor
xor
sub
cmp
call
inc
sbb
pop
es
pop
mov
add
ret
xor
inc
imul
push
or
aad
xor
movsl
adc
pop
imul
push
lcall
mov
push
shr
cs
lds
and
fldenv
push
push
imul
in
mov
and
jecxz
and
push
or
fidivl
mov
or
sbb
jmp
nop
or
pop
push
shll
shrb
push
je
add
and
int3
dec
sub
aas
push
xlat
sahf
cmp
or
or
add
stos
sub
popa
push
push
or
addl
mov
push
lock
out
inc
dec
xor
ss
cmpsl
sbb
mov
jne
sbb
cmovbe
incl
add
cmpb
pop
lcall
mov
mov
add
cld
add
rolb
fwait
mov
pop
mov
leave
jae
in
ficoml
cmp
lret
sti
xorl
mov
add
insb
jbe
mov
sub
mov
mov
hlt
xchg
mov
add
lock
lock
jb
mov
or
cmp
bound
jno
sahf
dec
movsb
inc
adc
mov
and
cmp
mov
xor
dec
movb
jo
dec
sbb
push
xchg
jno
sbbb
insl
jbe
data16
xchg
inc
loop
pop
bound
mov
sbb
cmp
lods
out
dec
mov
sbb
addr16
jnp
rorb
xlat
mov
stos
dec
cmp
ss
dec
movsl
test
lock
sahf
negb
clc
mulb
push
loopne
push
push
test
clc
aam
in
repnz
enter
adc
xor
mov
adc
and
or
sahf
lds
inc
cli
cmp
pop
inc
lahf
sti
add
cmp
cli
cmpsl
cli
enter
addb
or
push
xchg
loopne
mov
inc
push
fimull
add
xchg
pusha
movsb
loopne
jo
leave
add
jbe
mov
push
push
jge
in
jns
cld
or
push
and
dec
testl
adc
pop
int3
jbe
sub
scas
dec
cld
aam
sti
push
das
mov
jbe
out
push
xlat
or
jbe
sub
push
pop
mov
adc
or
test
or
jg
jno
mov
inc
loop
cmpsb
mov
pop
mov
mov
das
inc
adc
mov
adc
iret
mov
and
add
push
adc
pop
imul
dec
sbb
push
xor
cmp
and
sub
cwtl
and
jno
lods
movsb
cmpsl
data16
cmc
lods
sub
sub
push
push
mov
sbb
cmp
inc
add
pop
les
dec
lea
mov
lea
mov
cmpsl
jge
pop
mov
mov
pop
sub
pop
push
cmp
pop
pop
bound
pop
push
popl
cmc
mov
movsb
sub
cltd
dec
push
xchg
in
shrb
mov
js
pop
or
pop
iret
jnp
movl
inc
mov
pusha
sbb
pop
jae
adc
arpl
and
push
popa
faddp
mov
in
and
sbb
es
adc
mov
mov
sbb
in
jb
ds
add
dec
add
insb
push
scas
dec
cmp
leave
imul
add
test
and
loopne
sub
inc
adc
ficoms
int3
call
ljmp
js
and
sub
xor
sbb
enter
movsb
adc
mov
or
mov
mov
and
xor
xor
adc
inc
inc
push
xchg
test
and
shrl
add
adc
add
clc
clc
lar
rorb
arpl
vdivss
xlat
or
or
mov
inc
cmp
and
pop
cmp
mov
sub
and
or
xchg
rcrb
push
fnstcw
incl
and
inc
cmp
dec
push
xchg
rcrb
ds
and
inc
aas
inc
adc
fcoms
adc
xchg
loopne
mov
mov
inc
inc
sub
push
dec
bound
arpl
mov
push
orl
out
xor
loop
sbb
pop
movl
pop
mov
xor
mov
mov
in
test
inc
and
mov
in
sbb
adcb
scas
mov
pop
lock
sbb
adc
jmp
lret
mov
inc
push
push
inc
arpl
dec
and
mov
xchg
mov
nop
dec
adcb
mov
dec
and
mov
and
dec
sub
push
jo
mov
pop
adc
dec
mov
inc
movsb
inc
pop
movsb
lea
jno
xchg
mov
cmp
and
mov
test
imul
out
subb
pop
inc
mov
pop
jo
inc
sahf
push
nop
mov
xlat
cmp
rorb
testb
and
pop
push
mov
mov
sbb
mov
or
pop
and
xchg
add
pushl
inc
cmp
pop
int
inc
jmp
mov
cmpsl
sbb
das
xchg
mov
pop
shll
aaa
push
lds
adc
mov
stos
cmc
mov
pop
add
sub
push
inc
out
mov
repz
cwtl
inc
or
dec
shlb
push
jno
in
cwtl
mov
add
push
push
mov
adcl
dec
in
repz
inc
imulb
scas
and
mov
sbb
jbe
popa
mov
sub
push
pop
pop
decl
hlt
je
cmp
jbe
lds
in
shll
xchg
cld
outsb
lock
mov
xor
add
adc
ret
popa
movsl
fwait
cmp
in
sub
cld
mov
push
push
scas
insb
xor
push
not
mov
jnp
xchg
mov
test
repz
lahf
or
movsb
jmp
push
cmpl
push
mov
mov
rcll
dec
push
pop
push
dec
mov
mov
or
sbbl
add
mov
mov
sbb
cmp
out
push
add
ret
sub
sub
push
pop
fisubl
adc
cmp
jp
sbb
pushaw
cmp
lcall
sbb
popa
ja
mov
test
jge
ret
mov
push
ja
pop
mov
push
sbb
loope
ficoms
std
movsb
int
jns
jbe
mov
das
rcrb
and
jae
push
add
add
mov
jmp
lea
bound
sub
push
sbb
les
cwtl
or
mov
push
xchg
cwtl
cmovl
jl
inc
push
cmp
jbe
and
push
mov
pop
cltd
cltd
sbb
lret
add
add
adc
add
inc
arpl
xchg
xchg
sub
xchg
adc
or
cld
sub
andl
pushf
mov
cmp
jne
fstpt
pushf
nop
add
xor
sbb
mov
shrd
adc
es
or
enter
stos
add
jmp
jle
adc
or
sbb
adc
dec
adc
cs
mov
adc
xchg
mov
insl
mov
mov
cmc
push
sarb
jbe
sub
add
add
push
pop
add
pop
fisubrl
add
lds
jg
push
mov
adc
dec
mov
mulb
ret
fidivrl
inc
cmp
ficompl
cmp
jb
divl
mov
inc
push
ret
icebp
pusha
rcll
mov
sbb
push
mov
inc
and
dec
mov
cmp
ret
sbb
daa
push
je
xor
sub
inc
xchg
jmp
scas
shrb
cmp
xchg
mov
je
sub
sbb
xor
dec
loopne
loopne
push
add
push
cmp
xor
dec
or
xor
push
adc
cmp
je
or
sarb
jns
dec
xor
push
hlt
mov
mov
pop
ret
icebp
or
enter
jg
test
sbb
jp
shrb
fcoms
nop
int
jmp
int3
ret
adc
shrb
add
push
or
push
dec
add
sbb
fwait
push
mov
aaa
inc
pop
sub
adc
cmp
je
push
push
adc
xor
mov
add
ret
insl
bound
inc
adc
jne
adc
pushf
adc
popf
data16
lret
mov
fisttpll
cmp
fbld
outsb
xchg
xchg
je
cmp
or
dec
cld
pop
sub
lea
push
mov
dec
mov
scas
sbb
dec
out
and
sub
cmp
inc
ret
pop
scas
sub
adc
jno
lcall
adc
pop
inc
ss
cmp
sub
stc
ja
and
dec
fmuls
jne
fmul
jb
roll
mov
inc
cld
adc
jle
mov
inc
push
les
push
loope
mov
pop
push
jmp
inc
dec
std
add
mov
pop
loopne
cld
push
stos
dec
loop
lea
fmuls
xchg
sub
negl
dec
nop
xchg
xchg
xchg
out
mov
and
lea
adc
das
jge
fwait
sbb
adc
push
push
mov
int
rcrb
and
lods
pushf
nop
or
adc
cmc
fisubs
loopne
mov
loopne
lahf
les
loopne
les
xor
das
fdivr
pusha
cld
add
inc
jmp
push
push
aam
adc
mov
mov
push
push
fcmove
sahf
cmpb
movsl
lds
cs
shlb
movsb
mov
dec
dec
adc
mov
repz
and
mov
inc
arpl
add
mov
add
mov
orl
pop
lock
cmp
jne
jbe
shrb
lret
push
rcll
fwait
daa
xchg
fistps
lahf
addr16
js
test
imul
fistpll
pop
cltd
push
cltd
inc
xchg
pop
add
movsb
push
test
cwtl
sub
pop
jnp
dec
leave
dec
sbb
bound
addb
mov
jg
add
mov
cmpl
jbe
scas
mov
push
xor
or
jle
push
or
mov
mov
cmpsl
fcomps
xor
loope
inc
dec
cmp
subb
xor
inc
subb
jp
add
roll
cmp
adc
sub
rcll
loopne
and
cmp
xor
popf
and
scas
iret
aas
call
or
inc
imul
dec
incb
loope
sub
push
push
lods
es
shll
xchg
xchg
ret
cmp
cmp
cmp
cmp
out
jl
cmp
add
outsb
aad
ja
mov
fmull
mov
sbb
mov
test
push
popf
and
add
push
adc
sbbl
adc
dec
and
mov
dec
jl
sbb
arpl
adc
ja
dec
jmp
push
push
and
add
adc
push
cmp
adc
or
pop
pusha
mov
dec
sbb
xlat
pop
pop
mov
or
mov
les
mov
rolb
push
cmp
call
sbb
jae
sub
add
cmp
loopne
lock
ss
cmp
jp
xor
je
add
jp
inc
add
push
and
mov
lods
lret
daa
loope
mov
jmp
pop
icebp
push
int3
or
dec
mov
dec
lea
arpl
shlb
xor
imul
mov
push
into
addb
call
lds
test
loopne,pn
add
scas
nop
sbbb
lods
mov
mov
and
adc
data16
dec
das
inc
adc
inc
clc
add
add
and
pop
sub
mov
call
mov
out
mov
add
mov
pushl
inc
push
add
call
sub
cwtl
sahf
out
mov
inc
push
dec
addr16
cmp
jl
loopne
lock
test
mov
ret
push
jmp
push
jne
out
xchg
negb
sbb
jmp
ss
pop
jmp
sbb
adc
cmp
lds
adc
sahf
mov
in
xlat
leave
les
mov
add
ja
cmpsl
push
add
jg
or
enter
outsb
jg
cld
loope
or
dec
mov
push
pop
cs
xor
and
sbb
pop
popa
aas
mov
aaa
leave
ret
pop
sahf
or
add
cmp
sbb
iret
or
loopne
mov
and
adc
lock
pop
cli
add
outsl
or
jecxz
lea
movsb
test
or
jl
pop
sub
mov
pushf
in
test
stc
adc
add
cmp
xbegin
jecxz
mov
sub
push
hlt
je
es
data16
stos
add
dec
ret
out
shr
xchg
mov
clc
call
sbb
call
xor
sub
dec
movsb
inc
andb
testb
dec
cli
ret
lds
mov
inc
add
inc
out
lea
and
and
mov
mov
sub
sub
pop
add
lock
mov
pop
iret
or
xchg
xor
cld
push
mov
add
jo
mov
mov
das
mov
hlt
popf
and
mov
or
es
outsb
jmp
fistpll
sbb
add
adc
jmp
push
add
and
pusha
loope
mov
nop
out
ret
xchg
mov
aas
cmp
cmc
xchg
or
cmp
call
xor
bndstx
and
mov
mov
jle
loopnew
or
push
xor
inc
or
mov
inc
mov
mov
gs
push
jae
lock
dec
jecxz
adc
sub
cmc
rolb
or
dec
xchg
and
or
inc
xor
lds
sbb
call
dec
nop
pop
cmp
je
mov
push
mov
mov
or
cmp
push
or
popa
add
das
adc
popa
ja
cmp
inc
jl
jmp
fs
imul
xchg
leave
push
in
mov
xchg
push
stos
mov
mov
outsl
inc
gs
dec
je
dec
dec
popa
in
mov
or
orl
sahf
je
sub
lods
xor
ds
add
mov
call
loop
dec
sbb
in
pop
adcb
jmp
cmpl
and
sbb
adc
repz
jne
cmp
stos
cld
cmp
and
fs
call
fs
adc
jmp
sbbb
lcall
scas
sbb
fld
imul
and
pop
fildl
lock
mov
and
hlt
push
push
fstps
pop
pop
jo
lahf
dec
or
cmc
cld
push
pop
in
pop
pop
push
xchg
mov
pop
add
and
dec
sbb
cmc
int
jbe
in
push
or
shlb
cs
aas
je
or
sub
repz
add
jge
leave
loope
jae
outsl
push
les
mov
orps
pop
xchg
call
sbb
adc
aas
xlat
rorl
aaa
mov
xchg
or
movsl
pop
add
adc
les
bound
bnd
popf
out
adc
add
cmp
cmp
xorb
or
mov
xchg
adcl
pop
push
inc
jecxz
shll
lahf
jl
iret
lea
jno
lcall
jns
loopne
xchg
les
and
call
gs
cmp
je
rorb
dec
fs
xchg
inc
inc
xchg
sub
in
sbb
in
outsl
xchg
outsb
jbe
test
xchg
lret
mov
xor
dec
enter
ret
push
mov
or
enter
sbb
das
das
sahf
jnp
outsb
mov
pop
pop
or
push
mov
ret
or
popf
notb
xchg
std
loop
or
inc
dec
sub
add
adcb
aaa
out
cmp
cltd
test
shl
cmp
fimuls
add
add
inc
push
icebp
xor
inc
fs
xor
bound
cmp
adc
adc
fcoml
push
push
sub
rclb
nop
adc
push
jecxz
push
mov
sbb
fisttpll
loope
outsb
pop
lea
inc
jns
add
shl
push
inc
lahf
mov
cmp
jae
dec
push
pop
orl
adc
add
or
mov
fimuls
jnp
cmp
push
fs
idivl
jo
pop
insb
in
cmp
and
loopne
cmpsb
mov
dec
dec
dec
clc
jne
mov
add
cmp
jnp
into
xor
movsb
cmp
xor
stos
es
sub
pop
push
imul
mov
and
jns
ljmp
addr16
mov
imul
add
cmp
jae
pusha
sub
xchg
lret
lds
jne
push
js
pop
pop
push
add
adc
loopne
fnstenv
aam
andb
lods
jns
mov
jb
ret
mov
inc
or
add
xchg
xlat
cld
clc
jmp
push
push
les
sarb
mov
xor
adc
cmp
xchg
or
xchg
dec
xor
inc
movl
cmp
fs
pop
xor
mov
sub
stos
and
cmpsb
mov
mov
cmpb
mov
lcall
inc
cmp
cmp
bound
mov
inc
pop
lcall
or
cmp
pop
mov
add
push
dec
mov
lgs
or
adc
inc
scas
outsb
call
icebp
lret
cmpl
add
jbe
push
cmp
mov
jmp
lcall
xor
nop
adc
cmp
add
jp
add
fs
pop
nop
imul
sahf
cmpsb
jmp
xor
inc
leave
sub
das
mov
inc
in
xchg
ret
lods
lods
fildll
fistpll
push
hlt
pop
sub
imul
pandn
adc
pop
fcmovb
inc
ss
test
adc
jne
pop
or
mov
bound
adc
or
addb
push
and
mov
mov
repnz
adc
leave
add
data16
lock
in
sbb
mov
sti
jne
fdivrs
xchg
or
loopne
adc
fbstp
lods
cmp
push
push
fmulp
fidivl
addr16
xor
pcmpgtb
sbb
cmp
inc
add
jne
pop
inc
adc
popa
cli
mov
xchg
sub
mov
sbb
add
fs
push
nop
lret
jg
jbe
mov
cmp
sbb
leave
dec
stos
inc
lods
xchg
xlat
das
add
movsb
fildl
and
mov
dec
cmpsl
mov
adc
mov
sbb
stos
stc
leave
rorb
clc
cmpl
adc
mov
jo
fiadds
or
jg
outsb
sub
js
pop
ret
mov
cmp
adc
pusha
pop
adc
jle
test
mov
rcl
test
adc
add
add
jl
jmp
mov
xor
jmp
sub
mov
jns
xor
mov
sub
sarb
ftst
nop
pop
adc
mov
fadds
shll
or
rorb
dec
and
cld
jge
rolb
dec
in
fldl
stos
cmp
mov
sbb
add
push
mov
sbb
in
xchg
push
fcomp
scas
ds
jb
addr16
and
arpl
lcall
into
dec
sub
stos
cmp
cmp
xor
and
cs
pop
inc
or
mov
mov
orl
jae
test
jmp
mov
cmp
pop
xor
test
lret
imul
fstpt
push
out
jns
push
mov
jb
inc
jmp
ss
xor
add
dec
imulb
rcrl
loop
das
gs
mov
punpcklwd
xor
call
out
aam
lea
sahf
mov
adc
xor
sqrtps
hlt
cmc
adc
int3
add
ret
int
push
cmp
dec
je
sbbl
xchg
das
mov
mov
arpl
xor
or
cmc
jp
addr16
cs
dec
jmp
push
mov
xchg
loopne
xorl
es
sbb
lds
cmp
hlt
negb
adc
bsf
jbe
jmp
inc
add
sbb
in
adc
sub
cmp
cmp
iret
pop
rcrl
add
out
in
jl
cmp
push
mov
pop
divb
movsb
sti
adc
out
push
mov
enter
inc
subl
add
insl
popa
gs
mov
add
dec
rclb
out
test
sbb
clc
add
clc
jno
or
add
push
lods
or
icebp
ja
add
jne
push
cmpsl
and
lret
and
jns
sbbl
mov
and
xchg
sbb
cmpsb
mov
jo
cs
sar
cmc
aas
les
popf
rol
test
not
xor
leave
popf
fcomp
and
ret
aam
mov
in
xchg
dec
faddl
iret
xor
outsl
jl
fisttps
push
hlt
add
and
lahf
imul
jl
mov
xor
loope
faddp
test
pop
lock
std
rorl
sub
shr
bound
outsb
sbb
push
insb
loope
push
ljmp
xor
test
jmp
inc
add
pop
xchg
shr
push
pop
mov
inc
cmpb
add
pop
ret
mov
jnp,pn
mov
gs
das
sbb
sbb
inc
push
sbb
adc
fmuls
rcrl
mov
push
cmp
ret
addb
mov
roll
int3
push
out
mov
dec
andl
shrl
xchg
mov
xchg
gs
or
sbb
inc
clc
or
test
sarb
jbe
add
jae
sub
push
out
sbb
sbb
es
mov
jecxz
mov
xchg
xchg
cmpb
lods
pop
rcrb
pop
addr16
dec
cmp
sub
add
jecxz
fwait
divl
mov
mov
cmpsb
jno
jmp
mov
mov
xchg
lods
cmp
xchg
mov
int
ss
pop
or
enter
ljmp
insb
and
repz
clc
repz
pop
loope
add
rcll
imul
mov
idiv
pop
adc
inc
inc
mov
xor
jle
pop
lea
push
out
repz
push
mov
decl
jb
lret
add
adc
sub
push
gs
enter
push
inc
pop
outsl
pop
jle
sub
xchg
and
cli
cmpsl
dec
enter
adc
fisttpl
cld
jb,pn
adc
mov
pop
test
call
inc
addl
test
das
fildl
mov
add
add
push
xor
cmp
mov
shrl
stos
rclb
jecxz
mov
enter
rcrb
add
test
lods
lods
mov
lock
xlat
push
mov
test
mov
outsl
xor
sbb
cwtl
repz
mov
ret
mov
imul
xchg
out
xor
je
jmp
and
or
rolb
invd
insl
mov
dec
enter
movsl
lock
lea
flds
sub
cmpl
and
inc
lret
jmp
xor
sub
sahf
jp
fwait
inc
addb
add
shll
roll
out
push
inc
clc
add
xchg
sub
loope
int
jae
or
rolb
jl
imul
xchg
fdivrl
repz
push
jae
lea
push
push
rol
mov
leave
sbb
push
push
add
jne
push
rdtsc
adc
stos
insb
mov
mov
pop
ret
sub
jb
popf
lahf
or
popa
jo
in
push
sbb
sbb
push
es
pusha
inc
xor
mov
int
imul
push
jecxz
jmp
add
hlt
push
jp
sub
xchg
inc
outsl
xor
test
and
ret
cmpsl
addb
test
ret
and
je
add
sub
clc
andl
in
push
add
je
add
sbb
movsb
ja
sub
dec
int3
and
out
cmc
push
push
adc
push
push
andb
pusha
and
test
daa
sub
mov
cld
cmp
add
les
mov
mov
negb
dec
ret
mov
jl
add
jl
sahf
push
or
mov
xor
pop
pop
push
dec
mov
push
mov
cmp
pusha
add
fdivrs
and
mov
dec
cmp
push
gs
xor
subl
add
or
add
js
int
mov
pop
bound
xorl
and
adc
lea
mov
dec
add
cmp
ja
cmpb
push
imul
dec
leave
jne
jl
pop
mov
lret
inc
mov
ds
push
sub
invd
enter
mov
cmpsb
mov
cmp
sub
push
inc
or
add
dec
adc
bnd
jo
add
repnz
and
xor
lahf
cld
outsb
sti
mov
jmp
mov
adc
shlb
lea
cli
ja
cmpb
mov
aas
ret
push
xchg
sahf
sub
add
std
adcb
push
add
cmp
in
mov
push
and
cmp
fstl
out
into
dec
cmpsb
imul
imul
sub
xchg
popa
movsl
inc
dec
xor
mov
clc
jmp
xchg
rclb
xor
out
dec
sbb
sub
xor
push
sbb
in
hlt
pop
pop
xor
cltd
imul
mov
mov
mov
scas
daa
mov
mov
push
adc
jmp
cmp
testb
les
inc
jo
mov
mov
push
or
mov
mov
dec
popa
loopne
adc
xchg
shrb
jg
cmp
and
ja
shl
and
int
and
add
sub
call
mov
push
add
sarb
and
inc
push
test
and
and
push
das
arpl
or
jno
cli
xor
psubusw
mov
xor
hlt
inc
sbb
cmp
lret
adc
sbb
inc
dec
mov
lret
or
or
pop
push
adc
add
aaa
add
xchg
data16
xor
push
es
cmp
xchg
adc
jecxz
outsl
adc
addl
xchg
add
and
dec
sbb
jg
test
sbb
add
es
adc
add
daa
negb
sub
psubusw
inc
pop
push
sub
mov
fiaddl
dec
jo
push
test
cmp
cli
jp
sub
psubusw
ret
cmpl
jg
jne
pushl
pop
loope
jg
cmp
insb
test
cmp
jo
push
testb
in
inc
cmp
pusha
inc
bound
dec
mov
or
fldt
inc
test
and
sbb
xchg
mov
test
loopne
add
add
pop
fiaddl
or
push
push
sahf
je
loope
push
iret
and
inc
jae
or
jge
pushf
lea
das
cmp
test
dec
jne
mov
roll
outsl
mov
jo
pop
call
push
outsb
pop
fadd
int3
mov
leave
push
clc
add
mov
in
ror
mov
adc
mov
out
pop
sbb
pop
pop
sub
insb
fwait
ljmp
jg
fwait
mov
cmp
mov
push
rcrl
jle
or
icebp
or
pop
sub
pushf
inc
lcall
and
push
or
mov
adc
inc
cmc
stos
cwtl
insb
jge
and
xlat
cli
jl
mov
jo
scas
cld
cmpsb
mov
ljmp
xchg
pop
mov
xor
push
popa
pop
mov
rclb
cmp
movsb
jle
jne
insb
fdivs
lcall
std
xchg
sbb
pop
popa
mov
lcall
pop
cwtl
adc
add
ret
cs
adcl
inc
test
enter
mov
mov
cmc
mov
in
fwait
fsubr
adc
ss
popa
stos
in
rol
fildl
in
mov
and
push
jbe
pop
jns
cltd
pop
loopne
jbe
mov
add
inc
cmp
imul
shrl
or
imul
mov
int3
mov
or
mov
xchg
xchg
in
pushl
call
nop
testl
sarb
add
push
add
or
xor
mov
sbb
sbb
xor
add
xor
ret
sub
inc
adc
dec
sub
popf
pop
xchg
dec
mov
lahf
sub
jmp
cmp
fimuls
jmp
jg
into
pop
push
cmp
ss
mov
push
js
jbe
mov
jmp
das
inc
testl
xchg
cmp
cli
stos
mov
int3
adc
push
cmp
push
add
add
adc
data16
cmpsb
popa
add
add
dec
fdivr
add
je
fs
pop
cmpsl
pop
push
ret
pop
push
sbb
cld
cmp
jecxz
out
cs
pusha
cmp
mov
jne
insl
adc
jmp
sbb
pop
ret
mov
scas
out
jae
inc
inc
cs
push
add
fistps
inc
and
dec
inc
adc
add
data16
popf
pushw
sbb
mov
popa
and
adc
mov
xor
mov
icebp
mov
or
ret
bound
pusha
rorb
lods
jne
adc
or
sarl
cmpsl
in
and
sbb
push
push
xchg
xchg
sbb
mov
fsubl
sarb
or
stc
sub
mov
add
push
adc
lret
fmull
jo
push
jns
sub
or
mov
add
dec
sub
or
xor
aam
sub
xor
ret
dec
inc
cmpsb
adc
mov
adc
lds
sub
inc
or
loope
jno
or
push
and
dec
xor
cmpsb
adc
push
and
mov
adc
push
ja
push
test
ret
adc
mov
sbb
mov
addr16
and
sbb
clc
fdivl
xor
xor
jne
or
push
sbb
mov
cmp
mov
mov
pop
out
jo
sub
cmp
sbb
jl
call
mov
pop
add
push
push
and
mov
mov
dec
mov
sub
mov
loopne
mov
icebp
cmpl
xchg
daa
jecxz
inc
add
pop
push
pushf
push
addr16
mov
mov
jnp
pop
repnz
push
out
push
push
adc
jo
ret
out
push
xor
xor
cmpsl
flds
adc
frstor
cld
incb
or
ss
mov
add
push
in
hlt
mov
stos
decl
dec
xlat
adc
rol
dec
sbb
mov
inc
jbe
insl
nop
add
add
sub
xchg
mul
inc
outsl
xchg
add
aas
xor
out
cmp
pop
and
mov
jl
jecxz
movzwl
ljmp
jl
pop
mov
mov
sbb
in
cs
jne
push
add
pop
adc
leave
push
dec
xor
push
das
pop
jnp
xorl
stos
xor
and
or
lods
jne
repz
add
sub
and
in
push
arpl
cmp
dec
insb
mov
or
aas
push
inc
or
insb
mov
lret
int3
pop
push
dec
jo
dec
dec
sbb
xor
ficomps
add
ret
dec
or
sub
inc
jo
jne
orl
adc
add
push
add
test
pop
loopne
inc
xchg
shl
in
stos
hlt
leave
mov
adc
fsubs
addb
in
int3
mov
cmp
push
add
add
add
pop
ljmp
add
xchg
imul
cmp
je
push
mov
adc
cli
testb
je
cmp
mov
loopne
adc
jbe
mov
clc
push
cmp
jb
jmp
sub
cltd
adcb
aam
adc
frstor
add
les
or
sub
lock
imul
mov
je
lret
xor
pusha
sub
repz
cmp
subl
add
outsb
dec
or
sub
adc
dec
ja
insb
jae
dec
and
icebp
jmp
jecxz
insb
cmp
sbb
pop
push
out
dec
mov
cmpsl
push
pop
mov
jg
lcall
add
lret
dec
hlt
add
call
xor
andb
xlat
fwait
sub
jo
movsb
and
push
pop
mov
sub
pop
add
xor
hlt
push
push
mov
ret
data16
sbb
or
inc
mov
xor
pusha
mov
xchg
shll
push
xchg
je
nop
ja
outsb
aad
push
add
push
push
mov
jl
pop
xchg
sarl
pop
push
dec
xlat
mov
mov
sbb
add
ret
mov
rorl
sbb
sbb
mov
sbb
outsb
lock
icebp
roll
add
cmp
leave
jmp
je
les
push
and
pop
adc
sbb
adc
jmp
or
bswap
lret
into
jne
pop
jl
je
cmp
pop
out
adc
sbb
stc
jmp
cmpl
xor
lret
jmp
push
and
mov
xor
inc
int
mov
jne
push
and
aas
dec
test
cmpsb
fld
fstl
cwtl
or
add
adc
xor
lea
adc
fisubrl
insb
inc
mov
cmp
sbb
popa
aaa
ds
jp
jl
pop
fdivs
cmp
jne
push
imul
not
inc
pop
int3
mov
or
and
lret
aaa
xchg
ror
jne
scas
jae
cmpsl
mov
lods
sub
cltd
test
shll
js
andl
sbb
out
and
xor
sbb
scas
sub
popl
jo
sti
sub
loope
ja
popa
mov
sub
sbb
and
or
js
push
add
cmp
cltd
push
and
and
mov
es
pop
xchg
fiaddl
fisttpll
push
filds
inc
and
out
xlat
lock
lcall
sarb
imul
lcall
loopne
je
xorb
outsb
dec
rorl
enter
dec
adc
and
ss
jae
ffreep
pop
add
dec
inc
ja
fs
dec
push
cltd
cmp
sub
mov
test
xor
or
loopne
cwtl
shlb
into
pop
pusha
jo
bound
add
leave
add
pusha
fnstenv
push
es
pusha
dec
adc
cmp
inc
rclb
jmp
insb
cmp
ja
pop
add
mov
cmpl
push
inc
or
ret
call
cmp
flds
ret
pushf
xor
es
push
mov
mov
pop
cmpsb
fisttpl
sub
aad
addb
popf
ljmp
adc
insb
lea
mov
loop
and
scas
jl
imull
adc
cmp
pop
adc
ljmp
addr16
or
orl
add
ss
sbb
sbbb
subl
dec
adc
add
fidivrl
insb
and
fmuls
jns
out
push
pop
pop
fxam
and
cmp
and
xchg
sbb
in
cs
jl
repnz
dec
dec
pop
dec
in
mov
roll
xchg
or
mov
cmp
in
jmp
loopne
pop
xchg
cmp
push
or
test
aaa
push
mov
jnp
push
cmp
jnp
xchg
aaa
and
mov
in
cli
inc
cmp
and
jge
je
je
mov
jo
nop
inc
out
sar
lods
testl
cltd
fisubrs
fcomip
add
jb
cmp
sahf
dec
mov
ds
jae
mov
push
push
mov
pavgb
add
inc
pop
and
inc
je
sar
outsb
orl
pop
mov
addl
and
fcmovnbe
add
jo
xchg
adc
ret
xor
pusha
pop
in
push
inc
xorl
loopne
pop
cmc
jns
sahf
js
pop
pop
ret
fisttpl
adc
inc
or
sbb
jb
shr
out
out
ret
push
or
jne
scas
popa
out
call
dec
jnp
dec
lret
int
adcb
dec
xor
pop
or
pop
and
mov
je
mov
jmp
in
fwait
sbb
push
mov
lods
scas
cmpsl
adc
inc
pop
inc
mov
mov
xor
push
repnz
daa
icebp
add
ds
lods
inc
cmp
adc
repnz
lret
sti
and
xlat
mov
cmp
jbe
and
aam
cmp
mov
inc
mov
cmp
in
pop
clc
das
out
pusha
popf
pop
pop
testl
test
fsubl
outsb
xchg
adc
or
ljmp
or
jno
je
shl
loopne
mov
jge
out
mov
mov
enter
repnz
push
bound
push
push
mov
add
inc
cmp
je
inc
xorb
sub
loopne
mov
insl
xorb
mov
or
adc
push
lret
jmp
dec
js
adc
dec
adc
or
xor
and
enter
clc
cmp
inc
or
pop
je
jmp
or
push
cmp
loope
sub
add
adc
push
test
mov
sbb
dec
arpl
lods
lock
jo
cmp
push
lahf
mov
mov
push
ljmp
cmp
icebp
jnp
pushf
xchg
mov
inc
cmp
mov
xchg
inc
sub
aaa
and
pushf
es
push
mov
jno
cmp
dec
inc
pop
pop
and
mov
or
xor
xchg
inc
inc
clc
jo
popf
and
es
sub
or
adc
test
loope
inc
add
mov
pop
sbb
dec
ret
mov
into
mov
dec
push
xchg
outsb
mov
test
popa
jnp
jmp
xchg
inc
cld
ss
jb
test
in
jo
xchg
lahf
pushf
push
jge
cmp
xchg
mov
push
push
inc
test
or
adc
mov
cmpsl
and
loopne
cmp
repz
insl
les
jne
cmp
pushf
sbb
cmp
movlps
ret
and
loop
cmp
mov
mov
inc
adcl
or
loop
shll
dec
je
xchg
jno
dec
add
arpl
hlt
push
inc
xor
dec
add
int
les
nop
repz
mov
adc
repz
xlat
sub
nop
shl
push
mov
rorl
or
ret
sbb
pop
inc
js,pt
xor
mov
add
jne
sub
fists
add
inc
arpl
xchg
sub
mov
pop
jmp
sbbb
adc
and
jne
inc
popa
jae
cmp
add
and
clc
jg
jg
mov
xchg
js
movq
movaps
and
jae
xor
jle
adc
outsb
xor
cli
rcl
lret
mov
xchg
ljmp
and
lret
sub
xor
jg
mov
lock
adc
jnp
mov
fidivrs
xchg
or
add
adc
push
add
adc
mov
popf
mov
pop
add
fadd
roll
add
shl
mov
adc
addps
int
add
ja
fcmovb
sbb
sbb
and
dec
repnz
sbb
jmp
xor
ja
mov
and
mov
sbb
mov
xor
pop
cmp
notrack
xchg
adc
pop
nop
dec
fmuls
cli
aam
pop
iret
lret
xor
push
cmpsl
cmc
stc
ret
mov
mov
pop
es
nop
push
pop
pop
test
dec
dec
xchg
sbb
jl
ret
cmove
in
xor
lock
xor
daa
mov
sub
fistpll
popa
sbb
loope
mov
fisubrs
cwtl
mov
xchg
pop
cmp
and
xor
mov
mov
aam
out
rolb
cmp
mov
cmp
sti
pop
ljmp
mov
mov
les
pusha
js
pop
jne
push
fwait
push
xchg
sub
adc
push
add
add
testl
mov
addr16
ret
cwtl
inc
testb
cmpsl
idivb
mov
push
mov
fbstp
pop
pop
or
popf
mov
add
push
cli
add
lock
mov
lcall
lods
cmc
and
sub
in
stc
imul
push
jmp
push
push
or
xchg
and
push
xchg
clc
push
mov
adc
inc
mov
mov
mov
stc
jg
enter
adc
inc
cmp
jne
inc
cmp
dec
jne
out
pop
xor
decl
dec
js
pop
mov
and
js
les
xchg
pop
and
popa
adc
pop
mov
pushf
jmp
inc
arpl
leave
clc
loop
dec
psubd
adc
pop
pop
inc
inc
push
add
mov
movsb
mov
push
sbb
and
mov
fimuls
adc
cmp
xchg
inc
jae
adc
es
pop
or
movb
push
loopne
mov
pop
xor
cli
push
mov
mov
out
mov
insl
and
inc
lcall
hlt
cmp
cmp
test
sbb
out
aaa
mov
sbb
out
lods
xchg
adc
loope
shlb
dec
leave
cmpsl
insl
callw
mov
rolb
cmp
lcall
fwait
shl
hlt
xlat
je
rol
inc
inc
cmp
aam
lret
mov
adc
jne
sbb
shl
movsb
ret
jg
jmp
jnp
inc
loopne
sti
xor
adc
pop
push
ss
push
mov
jmp
cmp
rsqrtps
lods
push
add
rorb
pop
sbb
in
sub
outsb
fisubrl
sub
orl
jae
sti
fidivs
hlt
daa
shrb
imul
adc
mov
jb
mov
stc
push
xchg
or
jne
inc
push
pushf
or
xor
fiaddl
filds
lea
stos
mov
jp
adc
mov
andl
rclb
clc
rolb
ficomps
inc
adc
push
or
psadbw
data16
jne
enter
idivb
xchg
sbb
cs
bts
or
into
sub
cmpsb
sub
push
dec
add
or
ds
add
scas
mov
cmpl
scas
push
pop
add
pop
jmp
sub
push
testb
adc
addl
dec
rclb
lock
hlt
sub
cmp
and
jmp
cmp
cli
pop
jl
jg
outsl
inc
xchg
jbe
and
add
or
xchg
add
push
sbb
push
int3
xchg
pop
sub
orb
loopne
rcrb
icebp
fdivs
or
adc
inc
inc
imul
lock
call
jmp
aas
aas
cmpsl
or
jns
cmp
jae
lret
shrb
bound
sbb
inc
jno
pusha
inc
movsb
xchg
jmp
sub
or
ja
ficomps
stos
icebp
cmp
leave
sbb
xor
pop
add
call
jle
ljmp
jle
push
loope
xor
lods
rclb
add
incl
add
pop
push
aam
ret
adc
dec
push
push
and
jbe
andb
jb
gs
insb
xlat
mov
maxps
mov
inc
rorl
in
in
mov
push
pop
cmp
sbb
pop
mov
lfs
and
mov
lock
or
xlat
push
ss
add
inc
push
mov
andl
jl
sub
adc
jp
cld
sub
xchg
push
and
rolb
adc
dec
lea
or
push
cmp
lret
mov
std
popf
and
clc
pop
push
fadd
js
jo
dec
je
cld
fdiv
loopne
test
out
sub
push
cmp
jb
xor
lock
std
sbb
ss
jp
push
imul
test
out
xchg
push
cmp
je
cmpsb
fsubl
mov
lahf
push
adc
pop
pop
push
sahf
es
adc
or
shrl
lds
fmuls
xlat
sbb
mov
out
and
sub
sbb
pop
jo
dec
pop
sbb
add
ljmp
and
leave
mov
sub
pop
push
add
shr
and
fistpl
add
adc
jo
je
hlt
pop
cmp
scas
insb
mov
and
inc
xor
mov
push
call
cmp
orb
jg
test
mov
dec
jmp
loope
sbb
mov
or
push
push
pushf
ds
push
les
sarb
push
sbb
push
jmp
out
add
ret
dec
repz
add
jno
jns
pop
stos
lock
sub
js
or
lcall
clc
mov
add
or
mov
adc
das
lret
add
or
add
cli
rol
pop
outsl
movsl
in
adc
dec
fldl
or
inc
pusha
inc
je
xlat
repnz
mov
pusha
adc
push
pop
cmpb
rcl
bound
inc
cwtl
or
pop
xchg
mov
sub
jne
mov
stos
pop
cltd
push
ljmp
mov
popa
clc
jbe
lock
in
xchg
mov
mov
adc
rclb
inc
sub
jp
pop
addr16
xor
mov
cmp
and
mov
movsb
pop
xor
inc
rcr
pop
cmp
mov
lahf
cltd
mov
mov
orb
and
or
add
jl
and
pop
push
inc
mov
test
dec
mov
dec
enter
rolb
mov
xor
js
push
xchg
outsb
daa
push
rorl
add
mov
negb
dec
or
imul
sub
push
xorb
gs
movsl
or
adc
and
mov
pusha
dec
and
lret
add
mov
arpl
or
imull
adc
into
in
sbb
cltd
jne
int
cwtl
dec
mov
shl
and
or
fisttpll
cmp
je
dec
xor
sub
loopne
andb
sbb
repz
imul
add
xor
inc
dec
add
repnz
pop
daa
add
adc
ss
orb
mov
cmp
jle
add
in
repnz
add
cmp
push
push
nop
adcl
jae
sub
or
pop
enter
or
xor
sub
or
or
or
or
or
ja
cmpb
jns
push
cwtl
push
push
and
pusha
in
nopl
in
lods
xor
push
adc
pop
adc
fwait
cmpb
inc
add
popa
in
adc
adc
sahf
lret
out
adc
ret
fisubs
lcall
adc
and
and
push
push
push
lret
adc
mov
pop
xor
in
lcall
cmpb
add
pop
enter
sbb
pop
push
sbb
out
sbb
jb
sbb
add
repz
roll
cmp
push
inc
push
pop
and
pop
pop
jne
add
add
sub
cmp
mov
sti
hlt
movl
pop
or
bound
sti
sub
inc
pop
sti
incl
push
setp
in
jno
repnz
cmp
sub
sub
rol
lea
aad
push
nop
mul
cmp
mov
in
fwait
out
sub
fcoml
cmp
call
cmpsl
sub
dec
cwtl
jmp
enter
ljmp
sbb
and
adc
in
in
repnz
in
cltd
mov
and
enter
out
test
sbb
out
sbb
fs
out
pop
lock
sahf
xchg
add
icebp
icebp
add
sbb
pslld
cmp
sahf
lret
out
std
repz
std
test
test
pusha
hlt
fwait
rcrb
inc
pop
enter
div
pop
push
and
and
cmp
cmp
orb
cltd
push
and
adc
inc
stc
lock
enter
cli
cli
iret
xchg
inc
enter
sti
stos
cld
cld
sub
and
cld
je
cld
push
setb
mov
std
xor
inc
sahf
out
sbb
adc
ret
inc
or
sbb
stos
sbb
mov
sarl
sbb
movsb
or
sbb
and
movsb
imul
pop
enter
sti
in
in
in
stos
and
inc
mov
stc
daa
xchg
sti
add
dec
inc
out
out
cltd
leave
and
dec
sti
adc
xchg
pop
sub
sbb
pop
jmp
jmp
push
jno
push
in
add
dec
popf
cli
sbb
js
out
out
out
les
lock
and
cli
push
cli
movsb
test
stc
repz
in
sbb
cltd
sar
sbb
nop
push
stc
stc
push
push
jno
fstpl
testl
negl
fwait
xor
add
stc
and
cmp
lret
sti
sti
cltd
add
lea
cld
inc
cld
jb
pop
xchg
orl
cmp
inc
pushf
scas
dec
and
enter
jp
sub
inc
or
loop
icebp
testl
shl
xchg
xchg
mov
divl
sbb
out
push
jno
sbb
out
inc
testl
negl
sti
imul
ljmp
negb
jns
cmp
notb
adc
cmp
test
mul
inc
repnz
testb
push
cmp
bnd
or
jno
cmc
mov
adc
pop
xchg
cmc
jb
imul
cmc
pop
dec
cmc
pusha
pop
xchg
cmpsb
div
idivb
flds
cmp
cmp
sahf
clc
clc
jecxz
stc
test
cmp
les
hlt
inc
repnz
jne
xor
push
hlt
sbb
shll
data16
hlt
test
push
jo
sti
sahf
sub
jo
or
adc
xlat
gs
push
loop
leave
mov
adc
jb
popa
test
adc
xchg
in
inc
repz
leave
and
in
rcll
outsb
sub
jmp
adc
mov
xchg
repnz
leave
jo
sbb
int
in
cmc
mov
add
xorl
leave
loope
sbb
movsl
mov
jo
mov
add
les
cmp
sub
cmc
cmc
in
jb
cmc
add
jecxz
xchg
pushf
mov
imul
lock
stc
dec
push
jno
cmc
jne
dec
pop
je
push
lock
mov
inc
add
push
lock
mov
and
test
ss
nop
mov
push
stc
add
push
sub
out
ret
cli
and
push
add
xor
inc
int3
add
and
and
stos
add
jp
sub
jnp
loopne
dec
add
adc
jge
mov
add
jmp
add
test
and
jmp
int
xchg
fsubs
add
and
or
pop
inc
add
mov
xlat
pop
push
jmp
or
push
jl
int
outsl
jnp
popf
sub
loopne
cmp
cmpsl
fldlg2
and
pop
int
mov
jle
loop
ret
and
lahf
out
lcall
sbb
out
movsb
out
rorb
add
roll
xchg
mov
pop
mov
add
dec
and
scas
jge
movb
sub
jle
rolb
add
push
or
add
xor
mov
mov
adc
int
lret
sub
xchg
inc
push
imul
pop
push
add
push
addr16
dec
inc
and
xchg
add
hlt
push
shlb
lahf
popa
cld
mov
shll
rolb
or
cs
mov
push
inc
adc
clc
push
or
imulb
xlat
pop
pop
xchg
cmpb
mov
cs
or
adc
js
sbb
lea
lea
adc
subb
pop
push
fmuls
mov
ja
and
add
mov
push
and
popa
jl
pop
cmp
sbb
add
cld
add
jnp
call
ret
push
leave
loopne
pop
or
sub
xchg
orb
or
push
cmpl
mov
push
fisubrs
push
xor
or
fsts
je
sub
mov
push
xor
mov
ret
sbb
rorl
in
std
ret
push
rep
mov
dec
ljmp
push
rorl
jns
call
ffreep
loopne
jge
push
sbb
xchg
shll
jmp
pop
push
insl
ss
pop
inc
loop
xchg
ret
adc
jle
nop
stos
in
xor
sub
jecxz
pop
js
add
add
call
sub
nop
ret
adc
cmp
jb
and
fwait
or
add
pop
nop
pop
clc
test
inc
inc
aam
mov
pop
clc
cmp
enter
lret
jbe
push
jbe
mov
mov
mov
jl
add
iret
hlt
mov
lret
fsubs
clc
mov
jo
cmp
sbb
jne
cmpsb
or
mov
inc
sub
add
je
pop
roll
addl
pop
cmp
inc
or
enter
add
test
cmp
orps
pop
fcmovnb
rorl
int3
outsl
xchg
xchg
int
jge
adc
mov
add
adc
fs
cmp
cli
add
stos
loopne
fucomip
or
or
jl
or
lods
push
mov
iret
inc
shrl
lea
mov
popf
pop
or
sub
add
inc
loope
inc
cmp
cmp
mov
inc
jmp
cmp
jne
dec
fsubrl
cmpsb
add
sub
repz
inc
sbb
dec
xchg
imul
and
cmp
in
subl
out
add
jmp
mov
jns
out
dec
inc
or
and
adc
out
push
or
adc
dec
add
add
inc
mov
call
decl
jo
jo
adc
lret
or
div
rorb
inc
mov
sbb
jmp
fidivs
lret
sub
cmp
cs
or
leave
cmp
jae
push
enter
movsb
xor
or
jmp
and
dec
add
ljmp
hlt
jmp
push
mov
scas
pop
neg
nop
stos
mov
mov
sbb
and
lret
shll
adc
or
sub
xchg
out
es
mulb
fistpll
clc
xor
push
mov
bound
mov
cmpsb
sbb
fdivrl
das
in
rolb
sbb
mov
and
mov
adcl
hlt
mov
movsl
cmp
cmp
outsb
xchg
cmp
add
and
roll
or
sub
imul
fisttpl
add
seta
push
cmp
jne
jnp
loope
call
and
push
aaa
out
mov
push
cld
jne
mov
push
cmp
jne
dec
jae
xor
es
jne
call
inc
and
ljmp
xor
push
or
repz
iret
iret
repz
jmp
std
std
jmp
cld
cltd
and
push
sub
test
sub
es
inc
inc
rorb
add
test
jno
add
add
pop
pop
adc
popa
stc
inc
fs
adc
cmc
xorl
add
clc
test
ret
leave
jns
adc
pushf
ja
pop
inc
pusha
test
and
cltd
std
push
inc
push
xchg
or
or
push
leave
dec
and
or
xor
add
or
mov
adc
adc
ret
fistl
outsb
sahf
cmp
orb
mov
xor
or
push
testb
jmp
sub
jecxz
mov
or
inc
or
sub
jne
jo
rolb
adc
adc
fstl
in
mov
inc
push
stc
aad
shlb
lret
rcll
imul
jne
or
mov
inc
les
push
jmp
sbb
cwtl
cmp
add
bound
rorb
sti
je
lcall
es
cwtl
ja
in
mov
inc
fs
addb
jmp
push
sub
retw
dec
mov
dec
cmp
ret
popa
xchg
mov
aaa
dec
cmp
testb
inc
xchg
rclb
pop
hlt
jae
add
or
clc
nop
and
sahf
xchg
call
mov
xor
outsl
dec
lods
fimuls
imul
stos
add
testb
or
sbb
and
and
sahf
mov
nop
dec
out
sub
loopne
or
mov
test
push
icebp
cmpsl
rcl
mov
mov
inc
adc
cltd
bound
lock
push
iret
sbb
lea
cmp
add
das
insb
loop
xor
or
xchg
aam
jb
add
cmp
jbe
cmp
andb
stc
mov
push
pop
int3
mov
push
dec
pop
pop
scas
push
roll
and
mov
adc
mov
rep
jmp
sub
bound
sub
jb
sbb
enter
cmp
lea
cmp
out
cmp
mov
fimull
mov
add
shll
dec
push
push
push
cwtl
das
dec
add
movl
xchg
inc
add
add
ficomps
nop
mov
or
push
and
sbb
or
clc
cmp
inc
iret
repz
in
call
iret
repz
hlt
hlt
clc
clc
test
lea
andl
fldcw
pop
push
push
jl
inc
mov
inc
pop
sti
and
or
roll
push
xchg
sub
lea
jl
cld
or
lret
or
loopne
neg
adc
nop
sbb
mov
xchg
daa
stc
sub
cmp
hlt
movups
int
in
push
fiaddl
jl
mov
add
jbe
sub
jns
push
out
push
add
lods
dec
dec
addr16
add
les
mov
iret
repz
mov
iret
repz
xlat
cmp
sbb
sbb
repz
adc
adc
repz
repz
or
add
dec
enter
or
push
push
xchg
lds
cmp
add
outsl
dec
add
add
sub
ja
clc
aam
xor
bnd
push
xor
stos
movsb
mov
pop
incl
inc
decl
jne,pn
pop
pop
pop
cmp
je
adc
jg
cmpsb
xor
jbe
push
cltd
pop
idiv
add
mov
pusha
or
pusha
stos
add
cmp
aaa
dec
mov
mov
xor
in
dec
aam
bnd
cmp
jae
cmp
dec
rorb
into
jae
pop
jbe
mov
dec
es
les
inc
jmp
add
mov
inc
cmp
mov
pop
adc
roll
dec
sbb
mov
mov
sub
jge
mov
sbb
dec
dec
nop
dec
and
hlt
push
mov
ret
ljmp
add
sarb
jbe
xor
pop
decb
filds
dec
push
jo
mov
inc
xor
cmp
das
sbb
adc
sbb
add
pusha
add
loopne
add
cltd
push
loopne
cs
pop
push
push
pop
add
loopne
dec
dec
adc
lcall
jp
fnsave
dec
sti
push
adc
pop
pusha
data16
mov
stos
sti
insb
mov
sbb
lcall
mov
jmp
sub
sub
insl
or
aas
jge
push
push
daa
leave
incb
cltd
pop
idiv
cmp
inc
ss
xor
xchg
inc
out
cmp
xor
jmp
fcmove
push
and
mov
jle
je
test
fs
pop
das
call
push
fs
jmp
jl
mov
sbb
call
fsubl
je
insb
sub
sbb
lock
sbb
sbb
mov
jbe
mov
pop
sub
pop
push
dec
adc
cmp
js,pt
out
add
add
sti
cmp
es
inc
inc
and
inc
jecxz
add
hlt
xor
clc
subb
lds
and
push
xor
and
xor
cld
js
jmp
jge
pop
je
sbb
and
cmp
jl
fs
sti
mov
ud2
pushl
scas
jno
mov
fnsave
test
mov
jo
sbb
je
dec
inc
das
mov
dec
inc
jne
mov
scas
mov
rorb
or
xchg
inc
push
loop
lcall
pop
popl
mov
lods
push
and
sti
popf
pop
push
fs
or
cmp
ret
dec
inc
daa
pop
inc
sbb
pop
stc
add
mov
or
mov
xchg
inc
jmp
push
pushf
mov
jb
lds
xor
sbb
inc
flds
loop
loop
sub
push
je
mov
adc
push
push
push
movsb
xchg
cmp
cmpl
imul
jge
loop
in
pop
jne
fcmovbe
rorl
lock
adc
popw
add
adc
cmp
jns
loop
push
out
call
add
mov
mov
jle
out
pop
pushl
test
call
mov
cmp
xchg
rorb
and
push
pop
inc
push
push
or
sahf
adc
mov
popf
xchg
mov
adc
inc
roll
adc
jne
aam
add
push
inc
lock
jbe
in
inc
and
std
je
gs
ret
cmp
xor
mov
jl
nop
cs
bound
mov
inc
inc
cmp
je
xchg
mov
fs
orb
or
fadds
inc
fidivrl
push
shrl
dec
je
and
mov
or
test
mov
sbb
fwait
xchg
inc
sbb
add
push
mov
incl
lcall
sbb
je
push
mov
push
inc
sbb
ret
and
sbb
push
test
xor
lret
icebp
fisubs
pop
or
bound
stc
mov
sbb
sar
xor
or
xchg
dec
push
cmp
int
je
add
inc
push
bound
or
mov
adcl
adc
mov
stc
test
cmp
adc
add
push
mov
idivl
shll
xor
adc
pop
push
pop
inc
xor
adc
popa
rcrl
or
push
dec
add
cli
frstor
in
dec
subb
cli
insb
imul
xorb
lret
mov
movsl
adc
fiaddl
adc
pop
fcom
fbld
in
add
shlb
push
lea
popa
bound
jl
and
jmp
dec
or
fadds
push
jmp
das
dec
jmp
popf
push
nop
push
dec
sbb
or
xchg
sub
adc
pop
and
je
inc
in
sbb
jecxz
or
clc
ret
pop
or
test
sbb
call
sub
jo
adc
es
in
adc
adc
add
loopew
mov
popa
xchg
cmp
je
jecxz
test
push
push
orb
jp
call
call
push
stos
mov
nop
mov
inc
clc
sub
out
add
and
inc
mov
inc
sti
push
jmp
cmp
ja
test
and
inc
inc
call
push
lcall
outsl
xchg
mov
ja
or
out
xchg
pop
xorl
pop
stos
call
mov
cs
jge
lods
and
sbb
mov
inc
jmp
aas
push
push
pop
sub
xchg
cmp
in
sub
out
mov
nop
pop
jb
mov
in
inc
jne
add
and
cmp
mov
pop
repnz
incl
fstps
pop
pop
fidivrl
divl
add
push
xchg
inc
repnz
and
lds
push
fnstenv
shll
cmp
fimull
ja
shll
dec
insb
push
je
pushf
push
in
call
rcrb
cmp
ja
mov
inc
cmp
movb
lea
add
push
neg
mov
enter
cli
or
add
jmp
push
adc
lock
aas
mov
cmp
jb
aad
adc
fidivl
lahf
mov
dec
js
add
pop
inc
add
push
add
or
shlb
jne
or
dec
sarb
or
jmp
arpl
cmp
std
jne
ret
cmp
sub
dec
int3
icebp
adc
add
cmp
mov
pop
je
out
xchg
push
adc
and
filds
add
and
in
adc
test
fwait
sub
mov
and
and
fsubs
test
jmp
fbstp
repz
inc
pop
jle
pusha
mov
inc
xchg
mov
rorl
inc
rcll
xor
movb
lock
mov
pop
push
cmp
adc
push
jecxz
cmpsb
push
outsb
adc
jns
sub
sub
mov
jno
adc
call
test
adc
imul
mov
xor
mov
loopne
push
pop
adcb
inc
inc
data16
adc
sar
dec
xor
add
shrl
ljmp
nop
sub
in
fimull
fisttps
adc
push
pop
dec
ss
add
dec
nop
push
or
cmp
test
and
out
jecxz
cwtl
mov
es
push
add
xchg
mov
pop
fisttpl
mov
pop
jne
test
out
cmp
insl
or
add
sub
jmp
pop
mov
test
jae
mov
fcmovbe
int3
popa
adc
push
in
xor
pop
call
dec
pusha
pop
sub
adc
jge
sbb
ds
pop
xchg
or
adc
cmpsb
mov
xor
mov
and
loopne
adc
push
add
call
push
push
jmp
pop
jmp
leave
sub
cmp
add
add
notl
add
cmp
adcb
adc
movsb
and
and
add
mov
cmp
rcl
sub
push
cmc
adc
lahf
sbb
into
mov
in
cmp
mov
roll
cli
mov
mov
insb
push
lea
loopne
xor
or
pop
jo
fdivrp
push
mov
push
and
popa
scas
ret
cmp
ret
ja
subb
add
and
imul
sbb
mov
or
sbb
out
dec
add
iret
xor
rcrl
mov
test
inc
mov
ds
call
pop
inc
adc
sti
sbbb
dec
sbb
add
dec
xchg
xchg
adc
sbb
lds
dec
jmp
inc
lret
xchg
lock
push
into
cmp
adc
add
mov
hlt
sub
jp
ss
leave
mov
cmpsb
push
shl
adc
fdiv
fs
add
and
and
popa
nop
inc
sbbl
arpl
pushf
ret
subb
xchg
adc
movsb
push
sbb
mov
rorl
inc
and
daa
push
mov
jecxz
sub
push
or
push
lods
lret
cmpb
inc
pop
sub
sub
or
lret
adc
sub
lret
out
mov
sbb
out
lret
and
popl
repz
lods
cmp
add
inc
mov
jbe
test
adc
add
mov
add
xor
add
xor
sbb
cmp
popf
out
mov
sarl
dec
xchg
mov
xor
ds
in
push
and
aaa
lods
mov
fiadds
mov
mov
and
xor
xor
xchg
mov
or
inc
add
push
fisubrs
adc
or
pop
rclb
xchg
sub
push
mov
dec
add
jp
adc
loope
pusha
jmp
mov
mov
xlat
insb
mov
sub
mov
incl
mov
inc
dec
jne
lea
cltd
out
or
fwait
mov
movsl
xor
adc
pop
enter
jb
fdivrl
adc
or
mov
push
movb
popf
out
or
lret
test
pop
imul
je
je
xchg
xchg
or
outsl
inc
xchg
test
and
ja
or
cld
ficoml
push
push
jnp
jno
in
hlt
pop
sub
mov
cmp
pop
or
in
inc
inc
cld
test
add
mov
ret
adc
push
orb
mov
jmp
and
je
and
mov
push
into
jmp
push
lahf
jle
add
mov
or
les
pop
std
pop
mov
cmp
and
idivb
add
or
push
roll
cmp
add
ds
push
and
and
jmp
mov
inc
ret
xchg
lret
pop
mov
inc
add
nop
arpl
mov
mov
rolb
idivb
add
ja
test
add
pop
and
mov
lea
nop
repnz
dec
sbb
clc
dec
xchg
aas
orl
push
sbb
mov
testl
xchg
jle
pop
inc
out
jmp
insb
or
subl
sub
ss
push
cmpsb
push
sub
pop
sarb
aam
inc
cmp
addr16
outsb
inc
std
jne
fsubr
fldt
dec
cmpsl
in
gs
inc
add
jmp
sbbb
out
sarb
pop
mov
pusha
xchg
int3
movsb
cwtl
lcall
mov
xor
mov
mov
loope
nop
xchg
repz
fistpll
or
xor
jmp
dec
inc
pop
adc
push
ljmp
fdivl
pop
push
and
dec
add
rorb
bound
test
push
call
cld
sub
in
lea
mov
cmp
ret
ret
pop
leave
hlt
repz
inc
inc
cmc
lea
xor
dec
jno
add
sub
test
sub
adc
adc
fistps
fs
adc
or
lcall
add
int3
inc
inc
inc
shrb
sbb
outsb
incl
cld
jge
jge
add
jb
mov
xor
ret
lret
inc
cs
jnp
insb
out
adc
mov
inc
mov
inc
inc
inc
dec
jne
mov
jp
mov
cmpsb
jl
sbb
adc
divb
addr16
mov
xor
jne
shrb
xor
or
hlt
gs
scas
dec
adcb
test
xor
inc
mov
xor
and
sub
loopne
adc
sub
mov
ficoms
mov
pop
sub
add
inc
xor
inc
sbb
ret
ss
test
mov
inc
xchg
in
andb
insl
mov
push
xor
push
sub
enter
rclb
dec
cmp
test
push
lret
aas
xor
fldl
and
fs
push
or
rclb
ret
adc
mov
lret
pop
sub
jmp
xor
mov
or
mov
int
add
add
ret
sarb
subb
insl
adc
out
and
ljmp
inc
mov
fisttpll
cmp
mov
out
mov
lret
cmp
push
std
inc
mov
mov
mov
mov
rcr
sbb
outsl
cmp
es
and
mov
sbb
pop
adc
mov
mov
adc
mov
mov
movsb
jnp
into
sbb
data16
mov
inc
inc
sbb
sub
test
int3
bound
imul
rcrb
cwtl
shr
or
pop
cmp
or
sub
lret
js
sub
mov
jle
cmp
push
push
cmpl
add
js
into
or
cmp
cmp
sub
sahf
inc
add
push
decl
push
push
loopne
jne
sbb
arpl
or
cmpsb
mov
fs
push
movsb
mov
adc
mov
aaa
xchg
out
or
loopne
repz
jo
sahf
dec
sbb
adc
xor
dec
xor
dec
inc
lock
adc
loop
aam
sub
dec
sub
les
js
adc
stos
rcrb
pop
add
adc
ret
jbe
dec
dec
test
add
ret
jo
test
sbb
jo
loope
sbb
or
addl
dec
cmpb
dec
sub
rcll
adc
ficomps
int
pop
sbb
int3
mov
and
push
push
pop
loopne
cmp
rol
andb
mov
call
rcll
sbb
pop
mov
sbb
cmp
and
ss
ljmp
cld
mov
fisubrl
lret
pushf
lods
popf
out
call
sbbl
mov
shll
sub
fnstsw
xor
mov
shrb
setg
sub
pop
dec
cmpb
inc
mov
pop
pop
inc
pop
call
push
pop
dec
jle
cwtl
and
sbb
inc
xchg
lret
mov
ja
inc
push
cld
push
jo
movl
push
push
mov
and
movsb
xchg
dec
jb
jb
cmpsb
adc
mov
jecxz
push
mov
or
pop
dec
jg
jnp
cmp
and
push
outsl
mov
dec
lea
sub
sub
dec
sub
andb
adc
test
pop
xor
push
push
adc
xchg
hlt
shrl
mov
testl
or
xor
shrb
mov
nop
cmpsb
out
iret
adc
push
add
and
rclb
jecxz
sub
and
jb
cmp
js
pop
jb
dec
pop
cmp
xchg
and
jle
cmpsb
sbb
sbbb
lcall
dec
dec
xor
jnp
cmpb
ljmp
je
jle
jge
pop
rorb
mov
mov
sub
jge
cmpl
pop
in
push
push
add
xor
jb
mov
sub
mov
cwtl
je
in
adc
cmpl
ljmp
adc
pushf
add
and
daa
test
jmp
daa
pop
inc
rcll
xor
xchg
mov
pusha
sub
xor
mov
insl
jbe
mov
ss
mov
cltd
movsb
cwtl
mov
dec
loopne
aaa
add
pop
xchg
xchg
mov
sub
mov
sbb
into
pop
das
pusha
ja
adcb
pop
mov
fisubs
movsl
das
lods
xchg
hlt
dec
bound
out
insb
mov
push
sbb
mov
nop
add
fisubrl
sub
loopne
fcoml
push
popf
aam
sarb
clc
pop
pop
pop
jle
in
popf
enter
rorb
pop
lods
mov
daa
xchg
or
sarl
enter
dec
cld
adc
push
pop
inc
cmp
xchg
or
dec
mov
pmullw
lahf
lea
lret
jno
sub
mov
pop
movsl
and
movsb
adc
adc
loopne
es
cmp
fists
xor
add
jge
xchg
add
insb
or
jl
add
jmp
mov
insl
mov
add
jae
and
inc
je
and
pop
hlt
arpl
mov
add
mov
or
add
les
pop
hlt
arpl
push
enter
xchg
iret
repz
or
push
ror
sarb
test
pop
iret
imul
push
sbb
stos
or
cmpsl
sbb
push
inc
gs
fs
push
dec
jl
nop
movsb
push
enter
pop
test
gs
or
push
push
pop
nop
clc
cmp
fs
je
gs
sub
pop
inc
mov
or
pop
push
aam
test
xor
and
test
cmp
ret
addl
mov
dec
roll
xor
adc
fistpll
or
add
push
mov
mov
dec
mov
lret
jne
add
or
fadds
scas
jns
push
rorl
jge
inc
mov
daa
inc
test
cmp
int3
test
push
adc
adc
call
mov
test
repnz
ss
add
and
and
stos
mull
push
mov
aas
lods
mov
shlb
adc
cmpsl
mov
dec
inc
imul
rorb
inc
sub
push
enter
mov
lret
or
inc
or
je
xchg
cmp
cltd
sbb
dec
adc
push
sbb
rcll
cmp
ds
dec
daa
push
pop
push
push
andb
jge
jmp
sbbl
add
je
sub
jbe
clc
push
movl
add
jmp
adc
or
mov
sarl
or
jbe
cmp
push
bound
xor
movsb
test
and
aam
push
or
mov
outsb
cmp
mov
push
ret
out
sub
cwtl
outsl
push
leave
push
cs
aam
js
sbb
jbe
pop
adc
mov
push
jle
test
push
ret
loopne
ja
enter
imul
je
movl
lock
and
icebp
movb
push
mov
adc
and
pop
mov
push
inc
and
mov
lock
lret
jo
sbb
jl
ljmp
mov
pop
xchg
shl
mov
cmp
test
push
cmp
or
push
or
outsb
adc
push
loope
add
les
or
push
cld
insl
or
lea
inc
cmp
cmp
test
into
dec
inc
aad
push
ficompl
pop
pop
sub
pop
cmp
inc
bound
pop
adc
js
daa
jmp
push
jbe
js
movsb
mov
xchg
movsb
sbb
out
or
mov
shrb
push
inc
outsl
or
mov
les
popa
xor
mov
fmuls
int3
inc
or
test
cmp
jno,pn
orl
jp
cmp
or
pushf
aaa
jecxz
push
xor
ss
inc
xchg
test
movsb
test
xchg
mov
push
mov
adc
jbe
push
inc
sahf
adc
test
mov
push
push
in
or
or
jno
icebp
pop
test
fnstsw
aad
pop
divl
in
and
xor
sub
sti
enter
into
sbb
clc
dec
xchg
dec
shr
idivb
push
inc
ficoml
adc
aam
dec
ljmp
jns
test
xchg
mov
adc
loopne
testb
outsl
sub
add
add
inc
push
jp
mov
es
or
and
lock
mov
xchg
int3
andb
orb
pop
add
push
add
lock
test
jmp
aad
push
or
sub
adc
add
inc
push
jge
jecxz
pusha
lock
jb
popf
in
mov
xchg
lret
hlt
fadd
fcomps
cmp
frstor
mov
ds
js
dec
loop
mov
mov
fsubrl
mov
leave
test
adc
sub
in
or
mov
sub
or
sbb
dec
rolb
pop
add
mov
mov
jl
enter
cmove
mov
sbb
sar
arpl
insb
xchg
xlat
xor
les
orb
cli
mov
push
out
mov
ret
mov
push
dec
or
je
push
and
adc
dec
or
pushf
pop
or
xchg
dec
popw
add
addl
nop
mov
sub
or
imul
aam
jnp
sbb
imull
arpl
push
imul
lret
or
ja
lods
shrl
in
xchg
daa
adc
out
sbb
hlt
hlt
stc
cmpl
or
inc
insb
je
lock
mov
test
ret
insb
nop
pusha
sub
xchg
and
fidivrs
ss
or
xor
mov
repnz
jb
dec
xor
les
movsl
pop
add
mov
data16
fs
or
imul
out
cmc
jne
js
cmpsl
sbb
pop
xlat
je
or
lahf
sub
or
push
mov
cs
aam
cmovno
sbb
sbb
jae
sbb
adc
or
andl
nop
mov
ret
add
hlt
shlb
dec
push
fdivr
or
lock
cmp
push
jae
or
test
dec
test
mov
or
cwtl
jo
cmc
mov
adcl
pop
ret
lods
jecxz
sbb
dec
and
in
rol
add
push
xor
mov
pop
or
es
adc
sub
push
ljmp
mov
stos
mov
add
push
insl
cmp
xor
gs
cmpsl
popa
add
sub
call
dec
lret
xchg
push
push
movsb
add
mov
jnp
aas
cmpsl
xor
mov
gs
lock
mov
pushl
push
aas
push
cmpl
fldenv
jge
lcall
mov
inc
mov
dec
mov
pop
ret
cmpsl
test
fwait
dec
inc
xor
push
mov
lea
movsl
inc
dec
cmp
lods
xor
pop
mov
mov
sub
sub
push
loop
gs
call
scas
push
pop
stc
cmp
je
test
aaa
mov
je
aas
add
push
xor
jl
mov
xor
mov
fnstsw
inc
sub
fimuls
cmp
gs
xor
cltd
sub
mov
daa
mov
into
ficompl
add
test
mov
jne
mov
out
pop
mov
pop
jle
insl
cmpl
incl
js
or
mov
int
or
imul
out
call
sub
cwtl
sti
outsl
inc
fildl
cmc
mov
sub
jne
lea
mov
or
popf
test
imul
lea
stc
lcall
pop
add
cwtl
inc
call
sbb
dec
add
lds
cmpb
jne
and
test
popa
int
hlt
push
add
add
and
cld
decb
inc
leave
std
inc
daa
add
movsl
rolb
mov
dec
lahf
shl
xor
sbb
push
sub
pop
test
push
lret
bound
fists
push
sbb
mov
push
pop
mov
cmpsb
jmp
or
nop
bswap
je
cltd
les
sub
sub
jl
inc
adc
sub
cmp
in
sbb
das
pop
fimull
mov
or
sbb
xor
ds
test
pop
mov
or
jne
and
lea
pop
lret
or
ret
push
inc
rcrl
clc
and
add
inc
mov
pusha
stc
cmp
xchg
clc
sahf
add
push
fsubrl
decb
pop
xchg
sub
inc
cmp
ljmp
sub
into
cmpb
mov
or
add
inc
jmp
bswap
js
fisubs
mov
loope
or
insb
sbb
xchg
inc
int3
jle
ljmp
adcl
lret
test
mov
cld
inc
sbb
add
sub
push
mov
sub
push
test
cli
and
leave
fcoml
cltd
sub
xchg
mov
fcoml
or
pop
shl
pop
cmp
push
ja
leave
sbb
dec
fdivrl
lea
cmp
jle
or
pop
stos
movsb
nop
adc
jbe
dec
and
dec
popa
sbbl
jne
push
pusha
push
sahf
jno
aaa
cmp
mov
mov
call
add
nop
in
push
sub
popa
jle
sbb
leave
cmp
lods
add
cmpsb
cmp
add
jno
data16
push
and
or
sarl
je
rcr
jp
les
adc
mov
movnti
mov
nop
cmp
mov
adc
cmp
add
xor
bound
mov
pop
mov
add
insl
push
xchg
icebp
outsb
mov
xchg
mov
jecxz
push
xchg
rcrb
and
jb
das
add
or
add
mov
xchg
jp
loopne
pop
jge
idivb
jg
loopne
fmull
lock
lea
pop
movsb
cmp
lfs
sub
and
mov
test
push
push
loopne
sbb
mov
mov
xor
xchg
popa
test
outsl
sti
dec
das
or
jl
push
mov
xchg
push
jne
push
fiaddl
lcall
adc
xor
pop
push
and
mov
pop
in
push
inc
adc
push
data16
cmp
cmpsl
jo
add
outsb
push
jecxz
and
aam
jne
icebp
or
pop
jmp
push
shl
dec
or
push
lret
or
imul
pop
sub
cmp
add
sub
mov
test
pop
or
and
fcomps
cmp
push
cmp
fsts
test
das
mov
mov
cvttps2pi
jg
imul
add
jmp
notb
add
inc
xchg
dec
lods
xchg
rclb
sub
scas
or
incb
push
shrb
and
shr
inc
and
add
leave
daa
mov
inc
mov
push
dec
or
lcall
add
lea
mov
daa
call
push
cld
ds
movsb
adc
adc
fsts
jg
je
cli
add
cmp
jbe
push
pop
push
or
pushf
dec
or
addb
lret
std
and
decl
not
and
decb
jne
and
xchg
ret
adc
mov
repnz
pop
push
mov
push
dec
pop
rcrl
add
pop
and
and
or
push
sub
pop
sbb
add
jle
cmpsb
xchg
jne
and
sti
add
inc
adc
add
dec
pop
cmp
mov
fimuls
and
addb
sub
mov
jno
clc
outsl
cs
jno
mov
shr
not
and
add
dec
add
xor
shll
mov
xor
sub
pop
dec
add
xchg
imul
adc
add
outsl
dec
and
mov
fidivrs
add
inc
push
shlb
pusha
adc
mov
push
xchg
mov
mov
lcall
out
xor
or
pop
mov
ret
testl
adc
loopne
mov
or
and
xor
into
repz
test
imul
scas
out
cmp
loope
add
scas
jp
push
call
aas
dec
mov
or
sbb
les
andl
inc
adc
inc
pop
pusha
add
pop
add
pushl
push
push
mov
and
mov
mov
fildll
enter
sbb
push
jl
adc
cmp
std
hlt
insl
or
mov
dec
sbb
das
mov
nop
loopne
ret
imul
xor
imul
and
mov
and
add
lahf
inc
mov
les
inc
js
fadds
inc
adc
pop
mov
xor
adc
out
lcall
inc
or
jmp
orl
incl
sbb
jmp
mov
add
ret
mov
pusha
mov
ljmp
rorb
pop
cmp
pop
cs
or
cmpsl
mov
mov
push
push
idivb
mov
lea
xor
loope
mov
inc
sub
shr
jge
loopne
sub
dec
clc
incl
nop
cld
or
adc
test
lock
call
adc
add
je
clc
add
clc
mov
adc
fcoml
sub
sub
fs
inc
mov
jnp
arpl
mov
lock
push
pop
call
nop
dec
inc
jne
or
lds
or
jecxz
shlb
int3
sti
mov
adc
jge
jl
fwait
sbb
sub
pop
shr
or
dec
cld
imul
icebp
push
push
shrb
lock
adc
cltd
jl
fnstcw
repz
dec
or
pop
push
mov
mov
int3
push
or
xor
pop
shrb
sbb
clc
pop
test
nop
es
add
das
movsb
add
nop
dec
or
sbb
add
push
jns
or
cwtl
sahf
sub
add
cli
xor
subb
cmp
imul
sar
dec
mov
cs
fstpl
xchg
popa
fdivp
lea
mov
je
xor
or
mov
lret
dec
pop
pop
push
pop
adc
imul
or
and
and
ffree
test
test
dec
mov
push
iret
adc
inc
insb
xor
out
xor
and
clc
sbb
rorb
xorb
jge
mov
dec
inc
dec
insb
pop
xor
push
movsl
rcrb
incb
jp
movsb
decb
add
cmp
xor
insb
sahf
loope
cmp
dec
je
xchg
jecxz
xor
push
mov
push
or
fcmovu
ja
push
push
dec
ficoms
add
fimull
or
mov
outsb
dec
cmp
xchg
mov
push
pop
mov
lods
decb
into
mov
out
cmp
bswap
xor
cmp
dec
rcr
xor
sbb
cmp
dec
insb
push
movsl
dec
andb
lods
push
test
lock
cmp
push
push
push
loopne
mov
jge
xor
out
adc
clc
and
jo
jae
stos
dec
or
mov
cmp
and
decb
xlat
ret
push
dec
ret
adc
xor
and
mov
std
pop
jne
xchg
jnp
imul
mov
jae
xor
aaa
testl
dec
insb
cli
mov
and
jecxz
pop
xchg
je
nop
js
test
insl
stos
pop
lcall
cmp
je
mov
mov
mov
in
cli
and
ss
and
inc
mov
dec
pop
iret
ret
or
ret
divl
mov
cmp
loopne
imul
out
gs
aad
repz
mov
and
jne
int3
sbb
outsb
leave
inc
test
mov
lock
push
pushf
mov
sub
icebp
sbb
fdivrl
push
sbb
add
jo
jp
xchg
sbb
iret
push
add
mov
decb
fmull
xor
or
or
sub
mov
mov
frstor
bound
dec
push
and
push
clc
into
xor
dec
je
dec
imul
xor
push
or
xor
adc
pop
xor
sub
sbb
and
or
add
rorl
out
or
dec
cld
or
adc
pop
push
in
mov
mov
out
or
aad
adc
nop
jo
or
pop
gs
adc
add
in
xchg
mov
and
lods
test
lea
ds
or
push
cmp
rorl
std
xor
lea
leave
aaa
push
fbstp
add
je
fisttps
pop
jb
or
xorl
std
jno
add
jae
shll
sbb
pop
je
pushf
lcall
ret
clc
xor
adc
std
push
mov
inc
orl
add
test
and
push
and
and
mov
sub
lods
stc
std
xor
mov
add
or
je
jnp
jle
shrl
inc
cmp
cmp
sub
add
arpl
mov
push
mov
lock
scas
adc
es
adc
addl
cwtl
push
lock
enter
movsb
xchg
mov
or
scas
jge
adc
add
mov
gs
add
xor
dec
lcall
sar
pop
mov
scas
xor
lahf
pushl
adc
push
adc
sbb
lds
je
out
or
jne
push
inc
outsl
adc
mov
jbe
rcrl
sbbb
pop
mov
mov
sbbl
js
push
jo
fdivrs
loope
inc
outsl
inc
test
cmc
add
call
pop
mov
sub
ret
jl
push
mov
add
inc
or
je
int
or
sbb
fdivrs
data16
and
add
pop
mov
adc
test
std
fmull
sub
out
push
xchg
stos
inc
or
or
lock
je
jg
xor
push
jmp
insb
sbb
dec
insb
cmp
je
inc
jns
adc
adc
test
cmp
inc
aas
xor
add
inc
ror
and
pop
sub
and
and
lea
mov
call
es
hlt
mov
inc
or
test
pop
xor
mov
sarb
mov
xor
sub
jns
stos
jb
int3
test
js
mov
sahf
and
add
cmp
xorl
push
stc
add
mov
sub
mov
pop
or
test
dec
sub
cmp
xor
sub
inc
mov
xor
fnsave
xchg
cmp
mov
cli
dec
cmp
shr
dec
add
sarb
test
cmp
in
lods
or
pop
or
in
pop
xor
arpl
mov
sub
rorb
ss
fs
push
cmp
cmp
and
in
xor
hlt
xlat
rorb
hlt
icebp
push
outsb
and
push
add
jmp
imul
pop
and
sbb
or
adc
movl
aam
push
cmp
inc
adc
or
sub
loope
roll
pop
les
std
dec
movsl
sbb
xor
ret
jne
enter
in
sbb
dec
pop
jle
leave
jl
leave
orl
push
sbb
lret
pusha
lock
aaa
sbb
cltd
mov
dec
call
enter
xchg
or
xchg
enter
sbb
andl
nop
xchg
mov
insl
inc
xor
add
outsl
inc
call
push
pusha
inc
fs
xchg
adc
jns
decl
add
mov
mov
andb
and
xchg
and
subb
jmp
inc
xchg
xchg
lret
movsb
shr
cs
sub
mov
jae
hlt
xchg
inc
push
or
xchg
ret
repnz
cltd
shrb
cmp
call
call
xchg
pop
mov
dec
jb
pop
rolb
xchg
in
test
xchg
nop
in
push
cmp
inc
test
test
mov
fwait
clc
mov
leave
mov
xchg
jle
cld
enter
cmp
or
sysret
pusha
cmc
push
adc
add
data16
cli
and
out
cmp
mov
dec
test
jge
sahf
inc
inc
ss
adc
and
or
sbb
inc
jne
cmp
push
out
add
testl
mov
mov
and
ret
mov
add
clc
xchg
xchg
lock
xor
xchg
lods
dec
ret
jne
fidivl
sbb
mov
mov
mov
lret
or
pusha
push
xor
cmpsl
and
cmp
or
testb
adc
sbb
lods
inc
mul
jb
push
mov
imul
jb
sub
bound
xor
and
push
ficoms
dec
dec
shr
lds
mov
fincstp
ret
mov
add
add
push
cmp
sbb
mov
adc
push
cmp
sahf
or
add
gs
sub
mov
mov
rcl
add
xchg
lock
cmp
push
fisubrl
mov
out
add
add
ja
mov
dec
lock
je
jmp
add
add
cpuid
add
or
mov
ja
or
adc
cli
ss
push
mov
jne
add
or
or
pop
mov
ds
add
rolb
enter
dec
adc
rclb
inc
movsl
push
call
jo
jne
mov
push
dec
jg
js
push
or
shll
enter
mov
jg
dec
sub
mov
sub
out
loopne
add
xor
shll
sti
cld
std
adc
enter
inc
inc
popa
xor
jg
push
dec
in
push
dec
adc
cmpsb
inc
lret
xchg
je
pop
sbb
add
pop
test
in
shl
fnstsw
sub
sbb
dec
mov
ljmp
movsl
xchg
je
push
or
inc
add
enter
mov
pop
jbe
rclb
push
fldl
or
fldl
or
out
lock
push
mov
aad
cwtl
push
adc
xchg
neg
leave
pop
jmp
jo
push
jns
mov
mov
pop
mov
xlat
das
mov
sbb
lcall
xor
sbb
scas
xor
sti
fnstenv
out
neg
insl
ljmp
dec
push
xchg
fcomps
jle
int
cmp
sbb
sbb
stc
fwait
add
pop
xor
test
push
jns
outsl
xchg
adc
xchg
mov
je
push
loopne
push
sahf
adc
fdiv
inc
sbb
cmp
push
push
shl
push
loop
add
getsec
jne
imul
mov
lock
inc
adc
sbb
and
sub
imul
stos
push
push
pop
pop
lahf
mull
imul
fwait
mov
movsl
stos
mov
std
mov
out
or
push
mov
mov
test
adc
and
mov
addr16
jle
push
jle
xor
ficoms
inc
or
pop
ss
in
mov
push
pusha
jo
jmp
inc
faddl
fbstp
mov
and
or
aas
test
or
clc
push
fmull
and
jp
cmp
push
push
in
push
push
sbb
in
jle
testb
lcall
or
cmc
inc
mov
sbb
insl
popa
xchg
push
stos
lods
push
inc
aas
adc
sub
hlt
into
aas
sub
cmp
xchg
xor
mov
mov
outsl
and
jp
ss
xor
test
aas
mov
test
xor
lods
in
push
test
or
xchg
lret
in
int3
call
lods
add
xor
inc
lods
std
xchg
shl
inc
into
jne
loope
cld
push
inc
cmp
pop
mov
inc
adc
je
pop
add
incb
fdivrl
loopne
and
sbb
fnsave
dec
sbb
pop
sar
aad
jle
lea
testb
mov
or
mov
cmp
xchg
mov
mov
mov
loopne
mov
testb
std
mov
and
enter
int
mov
ss
ja
xor
sub
dec
sbb
pop
rcl
in
std
lods
out
and
mov
mov
mov
int3
jmp
cs
shl
enter
mov
push
xchg
int3
pop
cmpsl
pop
or
add
xlat
push
pop
cs
xor
sbbb
dec
popf
lock
iret
mov
cmp
mov
clc
fcompl
stc
or
pop
in
mov
nop
sbb
ret
outsb
pop
xchg
lret
call
mov
inc
mov
push
or
inc
pop
cmpsb
pop
sub
lahf
sar
mov
movsl
dec
cmp
inc
sub
pop
aad
pop
call
inc
ss
and
pop
insb
inc
xor
pop
inc
jne
pop
lret
cmp
inc
xor
cmpsb
inc
scas
aad
push
imul
int
lds
push
lcall
into
addps
adc
adc
push
leave
dec
hlt
fdiv
xor
pop
pop
jns
stos
mov
repz
lods
dec
pusha
enter
imul
fs
push
push
cmp
or
add
popf
orb
cltd
adcb
pop
push
sbb
xor
xchg
pop
andb
call
loop
xor
cmp
iret
out
setge
std
mov
out
inc
setb
inc
dec
jnp
cld
sets
dec
nop
jno
jne
jmp
cwtl
xchg
stc
jecxz
push
cmpsl
mov
or
mov
test
insl
pop
sub
orb
sbb
cmpsb
fcmovbe
jns
daa
rcl
shll
imul
loop
sbb
mov
or
jge
cs
enter
mov
and
imul
mov
in
or
push
mov
test
stos
and
divl
xor
xchg
cmc
and
test
in
xchg
or
and
push
jecxz
xor
sbb
mov
mov
nop
aaa
aaa
repnz
subl
out
fisubl
adc
mov
lds
xor
cmc
pop
test
cwtl
cmpl
xchg
xlat
mov
ret
dec
xchg
gs
jns
testl
call
bnd
add
jno
jns
mov
mov
mov
subb
xor
daa
stos
cmpsb
pop
xchg
jnp
lret
dec
lret
nop
std
lds
sub
cli
mov
xchg
push
cs
imul
mov
push
lods
mov
pop
orb
cmpl
pop
pop
data16
icebp
push
push
xchg
xor
std
mov
jb
leave
clc
mov
std
int
lods
out
imul
test
xor
test
jecxz
psrlq
dec
xor
roll
adc
push
dec
inc
adc
leave
fmuls
cmp
cmp
xor
jb
popf
call
std
xchg
mov
and
pusha
imul
test
fs
push
mov
mov
daa
in
mov
cmp
push
popa
dec
push
fdivrp
sbb
mov
data16
cwtl
xor
sub
pop
repnz
enter
sbb
pop
dec
jb
push
cmc
sub
sar
lock
push
pop
sub
or
jmp
data16
cmpsb
sbb
jmp
jo
sbb
outsl
negl
jge
int3
cmp
cli
jo
or
roll
dec
and
imul
fnstenv
mov
movsl
and
and
test
jno
fbstp
bound
pushf
popf
push
insl
mov
movsb
adc
xchg
mov
js
sar
sbb
inc
push
inc
lret
jne
cmp
xchg
sbb
cwtl
cmovge
or
jp
jne
fdivr
and
push
dec
pop
jno
sub
jl
je
and
dec
inc
mov
std
sub
loope
push
push
enter
mov
orb
and
nop
icebp
int3
repnz
push
and
or
sbb
pop
inc
or
sbb
movsb
test
add
cmp
cmp
sarb
mov
xchg
outsl
mov
mov
push
imul
push
cmp
and
inc
jo
push
or
jp
sbbb
add
sub
add
mov
mov
add
or
int3
lock
ret
push
inc
ljmp
dec
push
lock
lea
push
pop
add
push
pop
xor
imul
pushf
mov
add
cltd
nop
inc
es
aad
cltd
movsb
push
pop
jns
push
jb
inc
bound
or
adc
and
mov
daa
mov
es
mov
xchg
lods
xor
push
xchg
js
pop
push
cltd
inc
cmpsb
mov
xchg
inc
mov
xchg
xchg
dec
sub
mov
xchg
outsl
jns
xchg
test
sbb
pushf
and
test
mov
fs
mov
fdivrs
push
sbb
daa
xchg
lret
cmc
loope
xor
test
fwait
mov
pop
sbb
xchg
xchg
mov
rep
add
mov
mov
lahf
andl
adc
pop
inc
leave
push
jecxz
mov
xor
pop
repz
mov
nop
add
xchg
pushf
and
pop
mov
push
roll
and
aaa
movsb
push
cmp
mov
movsb
daa
xchg
lret
movsb
popf
xchg
xchg
daa
dec
pop
push
lea
hlt
push
lahf
fs
or
cmp
push
inc
xor
sarb
dec
cmpsl
leave
adc
sub
push
pop
test
test
and
pop
test
daa
push
sbbl
and
add
jno
sbb
lods
lods
or
dec
cwtl
cwtl
mov
push
mov
je
push
mov
stc
dec
xchg
jg
adcl
int
jge
inc
add
test
fdiv
lret
sti
ss
popl
insb
js
iret
mov
shrl
xchg
loopne
rclb
or
jne
rcrb
pop
ja
inc
xor
ljmp
mov
js
adc
sbb
pop
xor
push
ja
scas
dec
push
or
lret
add
cmp
inc
dec
in
mov
into
mov
add
cmp
add
js
push
call
mov
sub
jae
adc
xchg
nop
loopne
test
into
or
jl
cwtl
cltd
fimuls
mov
xchg
xor
add
in
idiv
dec
lret
jno
test
je
mov
xor
xor
loop
bound
ret
cmpsl
mov
sbb
dec
adc
sub
in
ret
and
jle
popa
add
std
mov
add
les
mov
push
mov
cmp
stos
nop
shll
fucomip
stos
bound
or
lahf
jb
jb
sbb
imul
and
ret
pop
les
loop
dec
dec
cld
lods
or
sub
scas
imul
gs
mov
movl
push
xor
pop
lock
gs
adc
insb
dec
cmp
jnp
or
push
addr16
xlat
mov
xor
cwtl
inc
arpl
lahf
or
sahf
pop
fists
inc
or
leave
jnp
test
add
je
hlt
daa
clc
inc
push
xor
scas
or
sbb
jae
testl
cmpsb
jmp
ss
jns
clc
repz
test
cmc
les
test
jo
push
mov
inc
adc
mov
sub
pop
dec
inc
pop
adc
movsl
outsl
pop
add
inc
sub
pop
cmpsb
testb
jbe
sub
adc
cltd
sti
jne
arpl
cmp
push
cmp
leave
mov
adc
add
and
dec
pop
pop
adc
or
gs
lods
rorb
mov
movsl
and
and
xchg
sbb
jmp
push
clc
movb
mov
and
shl
daa
push
add
sbb
xor
sub
dec
xchg
push
xor
dec
push
push
addr16
push
pop
mov
rcrb
mov
push
mov
jo
xor
push
xor
jge
fisubs
in
inc
pop
iret
add
add
add
nop
dec
xor
pop
sbb
out
and
add
add
cmp
push
jbe
push
mov
xor
sarb
imul
int
lods
lods
mov
shll
xor
or
rol
mov
sbb
sbb
sbb
movsl
das
dec
fs
fwait
es
adc
cmpl
test
adc
cltd
mov
scas
sub
push
xchg
gs
test
fdivr
add
loopne
pop
sub
loopne
sub
xchg
xchg
pop
fcmovb
lea
wrmsr
pop
out
aad
cmp
les
pusha
xlat
add
rcrb
loopne
pop
push
adc
adc
shr
loopne
mov
flds
jmp
rcr
or
jne
div
mov
fs
out
inc
mul
add
jb
cmp
or
cmp
add
gs
lret
cwtl
or
push
je
xor
mov
jae
mov
add
lret
jnp
sbb
ds
and
jno
ss
fmuls
dec
cmp
cmp
jb
mov
ret
movsl
dec
dec
and
lea
and
das
fwait
inc
cmp
roll
sub
mov
sub
jg
adc
dec
sub
inc
stos
insl
bound
cld
or
push
xchg
inc
sbb
or
insb
or
jecxz
add
jb
inc
fsubrs
cmp
adc
shlb
leave
test
add
and
inc
jne
xchg
data16
push
cs
imul
cwtl
or
ret
or
xchg
jnp
cmp
dec
jmp
in
dec
mov
jbe
pop
add
add
filds
push
pop
mov
push
jo
ret
stos
sub
mov
imul
or
ficoml
add
popf
cmp
imul
ret
cwtl
lods
fmuls
xor
aas
or
adc
inc
hlt
ret
or
add
sbb
and
sbb
movsb
int
pusha
jle
and
lret
test
dec
jp
rolb
clc
add
add
jge
imul
out
outsb
test
jle
cmp
xor
cld
roll
and
sarl
mov
inc
fs
sti
mov
pop
cmp
cmp
inc
test
cmp
push
mov
push
cmp
lret
cmp
fcomps
rorl
xor
leave
push
sbb
pusha
dec
pushf
jmp
dec
mov
lods
sbbb
xchg
out
fdivl
icebp
imul
js
xor
in
pop
add
push
hlt
add
pop
jb
inc
fstl
add
adc
ret
mov
push
jle
cmp
jg
out
or
shll
xchg
mov
inc
frndint
add
xor
mov
inc
mov
ja
push
dec
lods
out
add
loop
jmp
movsb
aad
popa
xchg
sbb
cmp
add
adc
dec
je
imul
push
push
mov
sub
push
or
push
xchg
idivb
mov
fdivrs
push
mov
sbb
jno
lret
xorb
xorl
or
je
aas
push
push
xor
mov
aam
out
mov
jne,pn
sbb
inc
mov
cs
sub
adc
in
jbe
lret
jge
mov
mov
pop
mov
mov
andb
fcmovnu
xchg
xor
xor
sbb
rolb
lds
dec
jmp
cmp
dec
sbb
loopne
mov
ss
add
lds
lcall
jmp
pop
add
add
lcall
sbb
insb
insb
in
das
insl
loop
fnstcw
jae
dec
lcall
or
add
es
sbb
scas
mov
push
je
mov
pop
push
in
dec
test
inc
add
dec
dec
ljmp
adc
adc
iret
xor
jge
jae
pop
jmp
fsubs
shl
push
lds
mov
out
add
sub
lret
stc
xor
or
mov
add
xor
push
and
or
and
xlat
rolb
and
or
push
in
inc
xor
ss
cmp
je
push
iret
rcrl
adc
pusha
aas
aam
xchg
pop
addr16
outsb
or
sub
and
fisttps
les
mov
sbb
push
or
outsl
or
sbb
xchg
push
mov
outsb
mov
pop
pop
jmp
cmpl
test
call
add
and
dec
lods
fmull
cmp
fstl
push
andb
and
xchg
dec
inc
repz
push
xchg
xor
or
test
and
call
test
shlb
and
rcll
jb
fisttpl
mov
fsubrs
mov
lret
sub
sub
cmpsl
outsl
mov
cmp
jbe
push
lahf
mov
mov
ljmp
mov
outsb
sub
mov
adcl
popa
inc
into
mov
cmpb
pop
je
fistpl
rorb
adc
adc
add
jge
sti
dec
or
mov
in
daa
enter
inc
dec
jae
mov
and
adc
in
aam
adc
push
out
mov
pusha
add
add
add
add
push
aad
adc
fdivs
push
shrl
inc
and
cmp
push
rorb
lods
xor
mov
mov
clc
test
mov
cmp
mov
movb
push
adc
mov
rcr
dec
xor
mov
and
icebp
jge
or
xchg
add
lret
adc
sbb
dec
test
repz
jmp
xor
loopne
pushf
sarb
inc
mov
incl
adc
subl
enter
pop
je
pop
es
add
je
jne
adc
andl
adc
mov
xor
jg
jmp
aad
stc
add
cwtl
icebp
xchg
pop
subps
sbb
add
inc
inc
xor
je
sarb
bound
leave
add
mov
sti
shr
mov
xor
inc
pop
mov
shlb
int
add
adc
jle
cmpb
or
inc
cwtl
fwait
dec
sub
shrl
mov
and
sbb
fnsave
adc
xor
inc
inc
add
in
jge
cwtl
lock
add
out
stos
jb
jg
out
jae
xchg
push
cmp
shl
dec
stos
xchg
es
push
lods
sbb
pop
ljmp
adc
add
push
push
orl
or
inc
test
pusha
lock
and
push
sub
in
mov
jo
dec
cltd
add
dec
mov
mov
insl
sahf
cmp
inc
inc
or
jne
repnz
add
push
sar
sahf
xor
hlt
mov
je
mov
add
and
nop
dec
fistpll
cld
aas
adc
or
add
push
cmp
pusha
jb
jmp
testb
pop
addb
leave
push
jae
cmp
aam
or
out
sbb
add
cwtl
arpl
push
push
sbb
sbb
or
add
popf
push
push
lods
lea
push
mov
inc
push
pop
push
dec
adc
add
clc
or
or
fwait
outsl
mov
decl
and
test
or
cmp
or
mov
in
js
leave
cltd
pusha
mov
mov
xchg
jle,pt
cmp
es
sub
out
mov
cs
mov
add
sbb
aaa
clc
subl
add
mov
sub
pusha
and
push
or
add
mov
nop
xorb
movsl
test
cmp
adc
popa
lea
test
rolb
inc
add
push
mov
mov
add
ficompl
test
xchg
mov
and
shl
add
ror
push
push
inc
add
fisubl
push
and
test
incl
hlt
lods
mov
sub
jl
and
pop
mov
repz
rep
or
xorb
cmpsl
lea
mov
push
pop
je
std
adcb
shl
add
clc
fiaddl
data16
pusha
aas
push
aaa
xor
xor
add
mov
cmp
sub
mov
or
dec
movl
jl
xor
loope
pop
divb
push
adc
or
aad
xor
lock
jb
out
mov
push
cli
xchg
or
mov
test
test
imul
nop
pop
xchg
lock
sarb
lahf
cmpsb
cmp
rorl
push
sarl
xor
xor
and
mov
mov
or
adc
lock
sbb
mov
push
roll
lahf
push
fdiv
loopne
popa
enter
add
adc
jb
rcrl
test
ret
sub
adc
jge
sbb
sub
mov
cwtl
out
je
movsl
sar
ficoml
inc
adc
and
add
xchg
dec
inc
push
pusha
jo
popf
mov
dec
int3
xchg
add
cmpl
subl
cmp
enter
roll
lret
sub
fldl
roll
xchg
jmp
sub
test
jle
cmpsb
jge
mov
outsb
mov
rep
ss
neg
sub
lods
shlb
lock
push
jae
cmp
das
push
pushf
cmpsb
fimuls
add
enter
es
push
dec
xlat
mov
pusha
xchg
mov
daa
not
in
outsl
sbb
popa
push
mov
push
jnp
jp
jae
xchg
adc
push
mov
stos
cmpb
mov
lods
aas
mov
mov
sub
jmp
sub
imul
add
jl
xor
push
push
jae
jmp
mov
xor
mov
ret
mov
dec
dec
xorb
or
repnz
sahf
call
cmpsl
repnz
ficoms
or
hlt
clc
inc
dec
adc
xchg
sub
mov
adc
adc
into
sbb
mov
outsb
push
pop
mulb
mov
je
push
add
or
aam
pop
fmuls
push
out
xchg
outsl
push
push
dec
adc
push
and
ja
lahf
dec
in
push
pop
outsl
inc
or
push
stc
clc
jl
pusha
jle
sahf
outsl
jo
dec
movsl
ja
mov
cmpsl
loopne
out
mov
or
mov
adc
ror
and
lret
loope
or
jecxz
fs
test
jmp
push
out
and
call
sub
sub
push
sub
ja
dec
aam
sub
add
sub
hlt
xor
fsubrs
fld
lock
in
lock
rep
push
movsb
fs
jne
add
outsb
sbb
rcll
in
in
mov
and
out
and
or
mov
push
adc
pop
shlb
xor
add
pop
add
push
hlt
pop
xor
test
inc
push
cli
addb
sub
pop
aaa
xor
jno
imul
or
add
or
cltd
push
fldenv
and
jb
xchg
and
sub
push
pusha
in
enter
add
pop
in
add
push
adc
outsb
sbb
ja
or
pop
mov
pop
fisubrl
push
add
fcompl
movsl
in
sbb
xchg
repz
and
scas
mov
pop
add
pushf
or
js
enter
push
cmp
inc
and
je
adc
loop
xor
mov
push
faddl
pop
dec
push
xor
add
dec
aas
sub
addr16
pop
mov
fcoml
xor
pushf
outsb
aas
add
jmp
mov
or
or
push
jns
sub
enter
mov
add
pop
imul
fiaddl
jnp
pop
out
aam
sarb
ret
xor
mov
sub
or
fcomp
and
inc
rcr
push
sbb
ds
dec
inc
add
lea
inc
rcr
jne
decl
xchg
xchg
pop
fwait
adc
outsl
jo
pop
test
adc
inc
add
xchg
cltd
shrb
cmpsb
sar
cmpsb
pop
mov
push
mov
dec
lahf
mov
rorl
cmpsb
scas
inc
test
aaa
xchg
pop
test
mulb
ret
das
adc
push
or
pop
imul
push
and
push
or
mov
cmp
jg
inc
jmp
fs
test
mov
pop
sub
cmp
imul
jle
push
ret
movsb
fldt
cmc
aas
sbb
nop
push
inc
adc
enter
push
lcall
popa
pop
sbbl
jle
inc
push
mov
popa
sub
fadd
je
push
pop
in
mov
test
xor
sti
adc
fdivrs
push
fmull
ja
pushf
mov
mov
lcall
pop
or
leave
or
test
pop
sub
xchg
sub
shll
or
and
or
jbe
pop
and
repz
adc
xorl
push
rclb
add
lods
outsb
lsl
jmp
sbb
cmpsb
inc
rcrb
adcl
cmp
or
jle
adc
xor
and
adc
or
fisubrl
sub
dec
fisubl
inc
mov
iret
loopne
movsb
adc
mov
push
inc
adc
pop
add
jg
mov
jne
outsl
loope
mov
popa
pop
ret
repz
lret
sbb
xor
mov
repnz
shll
xchg
lods
aas
or
cmp
lcall
dec
sbb
rorb
rolb
jecxz
sarb
add
jo
add
lea
add
inc
cld
in
xchg
or
sub
jl
into
jae
cmpsb
dec
dec
add
ss
ret
filds
xor
jne
and
jbe
lea
jns
push
incb
add
adc
pusha
adc
adc
lock
xchg
add
pusha
xor
push
sub
js
mov
inc
adc
xchg
push
dec
fs
sub
fs
leave
add
push
fistps
test
sbb
subb
mov
mov
push
mov
xor
les
std
mov
inc
loope
cmpsb
fs
push
xor
addr16
xchg
ret
sahf
test
cld
adc
pop
sub
sbb
jle
and
xor
cli
adc
in
scas
xor
lea
or
les
or
loope
shr
loopne
mov
or
mov
mov
popl
aaa
push
mov
inc
add
mov
mov
sbb
enter
sbb
and
inc
adc
fcompp
dec
je
pusha
inc
mov
inc
mov
sar
and
pushl
add
sub
jne
push
mul
push
mov
clc
push
cli
rclb
mov
rcrl
outsb
and
push
inc
js
js
cmp
xor
out
and
test
fwait
aad
mov
stos
inc
xor
lret
ror
push
dec
adc
cld
push
repz
imul
or
cmp
cmp
adc
ss
and
and
sub
in
in
xor
cmp
inc
and
leave
leave
leave
in
inc
cmovs
jb
leave
push
pop
add
jb
fs
jb
je
jl
dec
jnp
sbb
mov
and
dec
mov
xor
xor
movsb
test
sub
or
xchg
je
cmp
outsb
mov
add
inc
cs
stc
push
fdivl
jle
fwait
nop
data16
dec
adc
dec
xor
rorb
sbb
roll
adc
pop
and
sub
lods
lods
enter
pop
inc
jns
or
mov
and
xor
incl
rcrl
loop
das
cmpsb
js
inc
dec
jne
out
jmp
or
lret
add
mov
and
cmp
and
insl
cmc
mov
mov
add
adc
cmp
mov
loopne
daa
sub
aam
push
outsb
dec
pop
xchg
outsb
add
shrb
dec
int3
fsub
and
lock
pushf
repnz
add
faddl
mov
ret
dec
lret
js
negb
sub
dec
sbb
and
inc
pop
cltd
loop
daa
inc
mov
rolb
pop
inc
cli
pop
cmp
dec
push
lea
dec
cmpsl
cmp
sub
loope
push
sar
xor
in
add
ret
lret
scas
insl
sub
dec
mov
lea
push
jle
xchg
add
pop
push
popf
adc
and
int3
pop
sbb
jp
push
dec
cwtl
outsl
cmp
jae
and
sbb
sbb
addr16
aam
add
and
mov
je
push
pushf
jne
pop
out
sub
and
loopne
jge
or
rcrb
add
stos
ret
enter
pop
test
or
cmp
cmp
jnp
cmp
add
int3
inc
repnz
push
lret
mov
sub
push
jae
inc
popa
loope
pop
jne
or
jb
and
adc
cmp
mov
pop
aad
clc
cmp
xchg
popa
testb
mov
rol
jne
pop
cltd
adcl
cmpsb
dec
or
test
push
adc
sbb
add
mov
iret
cmp
pusha
add
dec
mov
xor
and
xchg
cmp
into
jmp
rcl
push
loopne
mov
loope
cmc
js
lds
or
adc
cld
or
int
mov
pop
sti
in
pushl
push
mov
push
add
scas
jmp
enter
and
sbb
xor
xchg
pusha
and
stos
and
loope
adcl
pusha
sub
pop
mov
or
icebp
add
bound
sub
add
lahf
mov
popa
pop
sub
popf
sub
sarl
int
mov
in
inc
popf
add
dec
ds
pop
stc
push
mov
jo
in
cmp
xor
gs
fld
aam
and
ret
adc
push
push
cltd
orb
sbbl
mov
cmp
lock
fisttps
and
fcmovnbe
sti
mov
or
xor
jle
fdivs
aad
or
add
mov
and
push
adc
aad
pop
popf
add
cld
mov
push
add
inc
sbb
les
ljmp
add
pop
mov
int3
adc
dec
dec
lods
or
sub
imul
loope
or
pop
addl
adc
xchg
sbb
mov
mov
add
push
incb
pop
cmp
dec
jmp
lods
mov
pusha
or
outsl
out
mov
mov
mov
lods
dec
push
jmp
add
sar
add
pop
pop
out
lret
add
dec
xor
push
mov
xchg
jo
lret
pushf
dec
jb
sbb
add
adc
sbb
inc
test
cmpsl
jo
add
push
ss
add
or
clc
lods
jnp
gs
or
cmp
test
xchg
aaa
dec
sarl
sub
stc
pop
jmp
cmp
test
mov
push
imul
sbb
xlat
test
rolb
jno
daa
mov
iret
sbb
scas
rcrb
aas
sub
add
cmp
jne
movzwl
add
mov
and
jmp
add
inc
int
dec
out
sub
inc
stc
ss
mov
or
out
iret
test
aad
xchg
add
js
xor
sub
cmp
sbb
rcr
or
adc
pop
adc
push
mov
inc
mov
sbb
in
js
dec
add
xchg
push
pop
mov
pop
shl
aas
mov
cmp
xchg
mov
pop
test
fldl
aaa
ss
jmp
cmp
cmp
mov
adc
adcl
or
inc
mov
outsl
cmpsl
mov
adc
cmpl
fmuls
push
icebp
xchg
push
push
and
inc
dec
sbb
pop
pop
inc
add
mov
daa
jmp
jo
cli
or
jmp
pop
gs
fistpl
andl
cmp
addb
pop
push
cwtl
sub
adc
lods
push
xorl
pop
mov
inc
inc
sbb
or
cwtl
adc
push
jb
bound
pop
add
xor
aas
mov
roll
stc
pop
jbe
and
mov
add
out
add
xchg
push
xchg
sub
shlb
addb
test
mov
les
push
pop
inc
sbb
into
lock
scas
cltd
int
enter
cmp
std
add
push
jno
sub
outsb
xchg
sub
jns
out
add
or
mov
jo
lret
jmp
adcb
pop
sti
imul
or
lea
mov
in
loope
pushl
lods
adc
cmpsb
les
ja
fdivrs
jne
add
sub
cmp
inc
jne
divl
sbb
jnp
xor
filds
inc
andb
les
sbb
and
sbb
mov
pop
or
mov
cmp
pop
pop
pop
inc
in
mov
cmp
pop
dec
out
sbb
aad
leave
je
ret
mov
scas
mov
add
sub
cmpsl
or
and
sahf
add
js
sbb
rolb
push
add
push
fisubrs
xor
adc
or
mov
and
dec
test
fldt
andl
jmp
push
jo
cmp
adc
fdiv
and
sub
xchg
mov
mov
sbb
mov
inc
add
inc
hlt
mov
or
orb
xor
adc
nop
jge
sbb
jno
adc
cmp
push
pop
enter
mov
inc
push
and
xor
test
dec
sbb
scas
sarb
or
shll
ret
jbe
lods
add
ljmp
mov
out
pushf
cli
push
mov
ficompl
mov
addr16
mov
jl
js
or
orl
or
sbb
add
in
mov
push
in
cmp
cmp
push
sbb
gs
arpl
sub
leave
mov
cs
orl
xchg
clc
into
lock
adc
push
les
loope
fcomp
stos
popa
xchg
lods
mov
sbb
cmp
gs
loopne
icebp
mov
pop
cmp
lods
jg
xchg
int3
out
insl
rclb
xchg
dec
shl
or
dec
aam
mov
pop
sti
movsl
shrb
or
lods
push
aaa
shlb
push
dec
sub
jecxz
mov
and
lds
adcb
push
pop
lods
pop
scas
dec
cmp
dec
pop
pop
or
inc
insl
insb
mov
cmp
call
and
pop
ljmp
dec
pavgw
add
iret
mov
adc
and
or
jle
mov
icebp
outsb
cs
cmp
inc
add
pop
in
push
testb
and
mov
enter
jl
inc
test
sub
sti
inc
add
js
pop
sbb
push
add
push
popa
add
les
pop
mov
clc
add
jo
and
and
sub
lock
adc
outsb
or
cmpsl
mov
dec
test
cmp
fisttpll
dec
jns
jmp
popa
mov
or
xor
jecxz
mov
mov
loop
jle
or
stos
dec
mov
sahf
dec
jl
xchg
ret
push
adc
sub
inc
pop
pop
inc
dec
fstl
icebp
pop
cmp
and
pop
add
jae
fcoms
shlb
add
sbb
adc
daa
js
sub
rclb
xor
fistpl
cmp
cmp
sbb
mov
cmpsl
xor
flds
mov
cmp
sbb
sub
lea
mov
sub
jmp
mov
outsb
or
mov
das
movsb
repnz
mov
in
ljmp
dec
pop
mov
and
cmp
sti
ret
push
mov
inc
dec
cmp
mov
sbb
add
inc
sbb
stos
cmp
sub
sub
sbb
rdmsr
cld
push
cmc
sbb
subl
orl
pop
pop
cmp
mov
fs
mov
cld
adc
dec
cmp
not
add
sbb
leave
inc
in
sbb
dec
bound
lock
jl
or
or
daa
inc
aas
ss
in
sub
mov
pop
inc
addr16
int
popf
inc
test
cmpb
pushf
inc
and
jne
or
ret
inc
inc
jg
test
mov
das
or
ret
sbbl
sbb
sub
and
lock
sub
pop
push
dec
or
ror
sbb
mov
pop
mov
fs
inc
push
jecxz
and
or
stos
ret
dec
inc
mov
pop
roll
clc
pop
test
lcall
push
popf
pushf
mov
mov
pop
sub
je
push
popf
repnz
inc
cmc
xchg
jp
scas
fstp
clc
cmp
pop
idiv
add
push
imul
push
adc
xor
dec
rorw
push
or
pop
movsb
fildl
or
rcrl
pop
pop
sbb
adc
pusha
out
and
in
push
mov
xchg
jbe
ret
lret
and
add
xor
in
or
push
into
nop
sub
shll
dec
nop
fcmovne
outsb
xor
adc
or
outsb
jb
jmp
and
dec
add
js
lock
sahf
lock
nop
pop
jns
test
adc
test
adc
jp
test
xor
pusha
lds
push
mov
or
or
or
or
loop
mov
and
mov
cmp
incb
jmp
sbb
lock
cmp
outsb
and
mov
and
aaa
jbe
xor
jecxz
jge
add
or
jmp
sub
hlt
inc
fwait
cld
or
and
pusha
xor
sub
mov
jle
sub
pusha
and
push
sbb
add
fstps
adc
mov
pusha
pusha
loope
pop
sub
dec
shll
dec
and
adc
mov
xchg
fstp
ds
pusha
shrb
mov
out
sbb
repnz
addr16
add
pop
or
xchg
adc
xchg
cmpsl
repnz
sti
add
add
test
xor
mov
enter
enter
repz
or
sub
push
mov
jle
scas
pop
push
adc
testl
cmp
pop
xorb
mov
jb
sbb
jmp
push
and
inc
add
aaa
and
adc
adc
inc
push
add
mov
sbb
fstpl
sub
xorl
imul
jl
pushf
ficomps
out
xchg
adc
test
push
cmp
push
pop
lods
pop
sub
add
adcb
push
inc
xor
cmp
jmp
mov
jo
aam
xchg
push
aaa
test
fldz
repnz
imul
mov
jle
jl
jmp
jle
add
sub
sub
jmp
sub
nop
xchg
add
push
or
push
psubusw
movsb
jns
add
adc
int
sti
push
repz
mov
sbb
dec
pusha
andl
push
mov
in
fstpl
outsb
or
or
subb
jge
ffree
repz
push
xchg
push
mov
inc
rcrl
icebp
mov
enter
xchg
inc
repnz
call
repnz
mov
test
enter
aas
not
insl
in
sbb
jp
dec
in
mov
sbb
shl
out
mov
jp
push
sahf
jmp
pop
xchg
adc
movsb
pop
in
add
mov
xchg
adc
or
and
mov
and
cli
movsb
xor
push
pop
sbbb
pop
out
mov
add
jbe
jle
push
add
pop
loopne
aaa
inc
add
and
xchg
pop
sub
mov
pop
push
sub
pop
add
and
test
insl
cltd
pop
jl
add
fmuls
and
and
or
add
cwtl
mov
rcrb
lea
push
dec
or
call
andb
hlt
inc
lret
adc
or
test
inc
add
push
loope
xorl
jb
filds
loop
pop
test
lds
fwait
jno
xlat
out
call
and
mulb
inc
or
sub
shlb
or
ficoms
loopne
dec
inc
pusha
jmp
insb
or
jecxz
imulb
scas
adc
mov
pop
mov
fsub
in
aam
mov
inc
add
repnz
and
or
pop
xor
jbe
sub
and
cltd
scas
dec
loop
mov
loopne
and
rcrl
sub
xor
mov
adc
test
mov
in
rorb
insb
cmp
push
jae
mov
adc
xor
mov
lds
add
fsubl
adc
clc
data16
scas
iret
sub
into
shl
mov
ret
sahf
push
icebp
stos
and
jg
or
ret
movsl
xor
gs
ljmp
xchg
mov
mov
lock
dec
sbb
addl
lock
flds
pop
fadds
into
outsl
rorl
mov
andl
cwtl
out
mov
in
sub
jne
jne
dec
pop
inc
sub
aad
test
sbb
or
push
add
or
xor
cmpsb
jle
out
mov
push
pusha
iret
outsb
test
je
mov
cmp
push
add
xchg
scas
sbb
sub
shr
loop
inc
scas
adc
nop
subl
sti
ret
sarb
loop
pop
xchg
dec
pop
inc
push
jae
andb
bound
mov
push
or
insl
or
push
mov
jg
adc
fldt
or
enter
fwait
int3
and
push
imul
and
loope
outsl
cmp
jle
call
xchg
cmp
push
mov
or
loop,pt
adc
jp
mov
sbb
adc
ldmxcsr
sub
and
or
or
jmp
and
cmp
repz
jle
jbe
out
add
or
push
sbb
out
jns
jbe
imul
inc
or
cmp
or
push
sub
ret
mov
rcr
or
or
ret
mov
xchg
cmp
lods
rcrl
push
and
and
data16
sbb
pop
aas
jbe
lret
mov
jnp
add
and
pop
fs
push
lret
aam
add
jo
jmp
test
divb
adcb
std
ja
imul
sti
jbe
pop
lods
xorl
in
out
sbb
aam
add
std
push
push
pop
in
adc
enter
or
xchg
clc
push
add
loope
or
adc
and
add
add
pusha
hlt
sbb
mov
dec
cmpw
or
jle
inc
es
ret
push
arpl
add
shrb
xor
hlt
aam
dec
or
xchg
in
jmp
dec
andb
mov
or
cmpsb
add
jle
xchg
mov
aas
daa
fiadds
xchg
cmp
test
add
scas
cwtl
pop
test
jne
leave
mov
hlt
mov
outsl
shrl
stos
repnz
pop
pop
mov
into
jge
loope
test
pushf
xor
pop
add
loop
add
ss
in
add
jns
dec
xchg
loopne
lea
push
jmp
sub
inc
shl
les
xchg
or
test
pop
inc
aam
xor
sti
loop
rolb
adcl
outsb
inc
aas
or
jmp
dec
cltd
insb
pop
and
mov
out
pop
hlt
int
mov
inc
push
into
inc
mov
lea
xor
repnz
cs
or
jb
cmp
sbb
lahf
imul
sub
adc
fldt
dec
bnd
incb
jae
shrb
lds
push
mov
rorl
sbb
push
mov
and
jge
push
mov
test
dec
loopne
roll
mov
getsec
fadds
sti
cmp
dec
dec
stos
inc
in
and
fwait
lods
xor
addps
sbb
aam
xor
cmp
rorl
xchg
inc
hlt
pushl
pop
push
adc
sub
sub
cli
addb
not
mov
popf
je
mov
and
xorb
push
ds
push
or
jne
shl
shlb
fisubl
xor
and
push
sub
out
mov
sub
sarb
push
aas
adc
xchg
aam
dec
push
sub
jb
out
xor
push
mov
pop
push
sub
xor
test
xchg
adc
sub
icebp
push
or
sub
lea
adc
pop
mov
cli
sbb
mov
cmp
pop
add
xor
pop
icebp
outsb
rcrb
iret
dec
jns
test
push
inc
lock
addb
push
ret
flds
inc
add
xchg
cmp
xor
lods
out
addl
mov
dec
push
lea
push
jge
xor
add
andl
xor
mov
fdiv
add
jl
mov
out
ss
fnstcw
or
xor
mov
ret
jge
xchg
add
es
sub
hlt
subl
andb
add
fsts
or
sbb
xor
push
in
orb
loop
stc
xor
arpl
and
rcrb
pop
pop
xchg
pmulhuw
and
push
jb
pop
pusha
addl
and
ja
sbb
xchg
pusha
fs
fstpt
sbb
sub
insb
repz
add
or
inc
les
mov
aad
pop
inc
xor
push
adc
mov
or
test
mov
test
add
popa
lds
jmp
mov
or
std
fwait
rolb
pop
or
jmp
xor
add
mov
ja
scas
xchg
add
fcmove
sub
cmp
ja
or
pop
push
dec
jmp
fs
movsb
in
push
mov
cmp
into
add
lods
dec
xor
call
add
je
fisttpll
add
aas
loopne
mov
gs
mov
cltd
cmpsl
mov
inc
add
or
filds
pop
or
je
cmp
jle
cmp
cmp
jle
cmp
push
xor
icebp
pop
int3
push
jmp
dec
push
hlt
fsubr
add
adc
xchg
xchg
pushf
subl
cmp
imulb
sbb
inc
shlb
jecxz
sbb
mov
ret
fidivl
stos
mov
push
pop
jge
jge
sarl
cmp
test
fsubr
jbe
nop
add
jne
clc
dec
add
je
jmp
mov
or
cmp
jmp
and
sbb
mov
lds
inc
imul
sub
mov
or
sub
dec
cwtl
test
cmpsb
push
jl
inc
jnp
scas
mov
xor
xchg
enter
test
mov
sub
xchg
scas
call
sti
je
mov
inc
mov
mov
lock
js
adc
add
inc
testl
mov
jmp
ficoms
or
dec
xorl
jle
jmp
cld
mov
push
mov
leave
sub
adc
rolb
jg
std
sub
jbe
jecxz
add
pushf
jmp
push
cwtl
mov
sub
xor
sub
into
dec
out
mov
jne
xor
push
add
cli
push
mov
add
cwtl
jge
neg
add
mov
xor
sbb
test
cli
sahf
mov
cmp
adc
lock
mov
sbb
ret
push
sbb
enter
mov
aam
xchg
fidivl
jle
shlb
les
inc
in
mov
add
test
je
add
test
inc
mov
sbbl
push
cmc
pop
dec
and
cmp
jb
mov
dec
mov
cmp
loopne
pop
lcall
xor
icebp
mov
push
xor
and
and
and
adc
sbb
addb
mov
iret
sbb
ja
stc
mov
or
pop
int
mov
pop
movb
testl
jne
enter
sbb
or
into
jne
subb
and
pop
cmp
xor
or
xor
sti
xchg
jne
inc
lock
xchg
fiaddl
or
add
pop
push
cmpsl
ret
add
push
shlb
or
popa
ret
xchg
scas
sbb
cld
cmp
mov
mov
ja
lcallw
js
subl
sahf
sub
psrlq
mov
stc
mov
or
ret
mov
inc
aaa
xchg
test
js
mov
adc
aam
insl
mov
lods
add
or
shr
dec
or
iret
inc
lock
push
in
mov
jg
clc
lret
mov
adc
inc
mov
ljmp
notb
je
aam
mov
adc
fcom
insl
fadd
loopne
shr
or
mov
sahf
dec
sbbb
add
aam
shrl
test
mov
enter
dec
mov
and
pushf
mov
adc
pop
add
fiaddl
sar
pop
add
xor
jmp
call
or
sbb
mov
mov
fidivrl
jb
jo
and
push
fmull
cs
dec
ja
xorb
popa
dec
add
cmp
test
mov
movb
push
push
into
jmp
scas
int
outsl
push
out
ljmp
jno
les
inc
movsb
int3
roll
dec
add
test
jne
push
lret
das
sub
add
out
sarl
negb
sub
repnz
movups
fidivs
shlb
inc
mov
shrb
mov
add
mov
mov
push
addr16
out
cmp
fists
push
sub
jno
in
adc
adc
mov
iret
decb
out
je
or
xlat
push
test
pop
jne
dec
pop
push
cmp
add
fld
scas
subb
mov
mov
rorl
in
pop
cmp
adc
push
in
sbb
fcom
add
pop
imulb
adc
inc
cs
or
add
stc
gs
or
jmp
clc
jg
mov
dec
cmpb
je
mov
cmp
pop
jne
dec
mov
clc
push
testl
mul
pop
add
out
call
xchg
add
add
arpl
out
clc
pop
rcll
adc
std
or
add
es
xor
add
add
sbb
clc
sti
repz
sub
je
dec
jnp
das
xor
notl
jno
insl
repnz
and
pusha
movsl
sbbb
add
testb
sub
add
cmp
cmp
jmp
mov
rorb
or
add
adc
fwait
push
adc
rcll
push
je
or
jge
setg
sub
filds
rorl
aas
sub
sbb
jne
movb
mov
and
cmp
das
fimull
push
xor
xor
mov
es
mov
es
cmp
add
add
inc
sub
lret
stos
xor
add
adc
xchg
xor
sub
lea
test
and
jb
inc
jae
and
jns
les
fdivrs
fs
in
test
cld
xor
push
or
sub
add
mov
add
subb
inc
xor
lds
xchg
mov
inc
sbb
into
aas
dec
mov
aam
mov
mov
push
adc
add
xchg
loopne
add
imul
clc
sbb
enter
aam
sub
scas
add
adc
das
xor
shlb
enter
lock
push
sbb
sub
outsl
or
adc
adc
cld
leave
inc
jecxz
pop
adc
add
cmp
and
jl
pushl
repnz
sbbl
mov
jge
sbb
and
cmp
jmp
dec
xchg
fldl2t
call
in
add
adc
or
push
xchg
push
fcoml
rcrl
mov
and
enter
adc
adc
and
and
xchg
dec
jne
jo
jnp
dec
fmuls
js
sar
lea
or
loope
or
add
dec
mov
pushf
enter
lock
sub
or
xchg
add
push
xor
inc
and
push
mov
add
mov
scas
mov
dec
je
std
pop
mov
and
add
mov
popf
inc
add
xchg
xchg
add
icebp
popf
ret
icebp
sub
imul
fsubrs
jecxz
mov
jg
ret
daa
xor
or
jne
rcll
add
pop
cmp
sahf
pop
sub
and
mov
or
repz
scas
test
xor
cmp
and
inc
xchg
mov
pop
add
or
xor
push
or
lea
xchg
gs
push
sub
adc
fwait
ret
or
lcall
sbb
loop
xchg
outsb
sbb
or
add
mov
add
and
lods
enter
jge
xchg
sbb
cmp
ss
xlat
inc
sti
sbb
clc
mov
or
cmp
nop
stc
inc
cmp
dec
jmp
xchg
clc
sub
mov
push
sbb
or
adc
ror
incb
push
orl
xor
pop
cmp
sbb
adc
out
lret
inc
out
and
pop
and
push
push
pop
sbb
js
push
fisttps
lods
jg
jb
push
sub
or
inc
adc
neg
cmp
mov
lock
adc
addr16
sbb
mov
add
jbe
cmc
pop
adc
or
add
lods
jb
fs
jns
pop
jnp
inc
dec
pop
or
or
sbb
add
daa
fldcw
subl
jae
mov
dec
jno
in
cltd
lahf
es
lods
insl
scas
push
inc
orb
jbe
mov
push
shll
adc
or
loope
sub
loopne
jb
or
and
jp
pop
sub
or
mov
xor
mov
add
je
lock
inc
sub
or
jo
jne
es
jne
jl
mov
adc
or
push
mov
add
mov
and
stos
push
in
test
ficompl
cwtl
sbb
nop
and
adc
xor
add
fwait
mov
or
loopne
inc
xor
repz
and
sbb
cmp
outsb
add
incb
ficoms
dec
test
add
or
xor
sub
out
and
cmp
push
insl
push
jmp
insl
add
cld
aaa
je
loop
jl
sub
mov
jae
inc
or
pop
incb
insl
or
inc
shr
loop
mov
mov
sbb
jns
or
jo
jge
mov
gs
or
pop
lock
fsubl
jbe
add
insb
outsb
inc
popa
je
inc
je
dec
sub
add
add
jmp
xor
sub
pop
inc
add
and
inc
pop
xchg
fcoms
popf
or
cmp
aad
mov
push
enter
mov
and
adc
fdivl
sub
dec
add
push
pop
clc
fstps
or
and
in
das
push
das
sub
xchg
shrl
adc
ret
ret
sbbb
dec
das
xchg
rcrl
add
insb
jl
ret
arpl
cmp
and
adc
dec
pop
aas
push
subl
or
or
xor
jb
sbb
cmp
js
pop
pop
and
mov
shrl
xchg
mov
cmp
jmp
pop
dec
das
movsl
int3
adc
sub
sub
sbb
mov
pusha
dec
test
sbb
xor
cmpsb
jno
and
push
push
popf
xchg
stc
rorb
pop
jno
je
test
ret
jmpw
nop
xor
psubsw
and
cmp
movapd
ljmp
mov
lret
push
cmp
sub
jbe
add
movsl
pop
push
add
mov
sub
xor
pop
inc
mov
adc
or
inc
jmp
insl
sbb
sahf
movsl
or
mov
cmpl
pop
movsb
loopne
sub
into
push
or
push
ds
in
cmpl
or
cmc
lahf
inc
pushf
and
inc
add
imul
pop
pop
pop
pop
clc
xchg
dec
pop
orl
push
xchg
xchg
jb
xchg
mov
je
mov
sbb
lcall
lock
popa
out
in
fadd
popa
loop
jle
cmp
mov
or
mov
sbb
int
lock
movsb
xchg
dec
out
pop
cmp
bound
mov
mov
adc
xor
pop
xor
sbb
je
in
jl
test
imul
dec
jne
push
push
jmp
or
jmp
mul
jmp
je
push
incl
adc
pop
sbb
addb
iret
sbb
xor
and
push
jae
cmp
aam
lods
jne
pop
or
ss
xchg
in
add
or
aam
mov
or
mov
jmp
ss
push
sbb
or
rcrb
ss
in
addr16
cmp
fnstcw
push
or
or
push
adc
aad
jno
sub
js
sbb
adc
xchg
lods
dec
mov
lods
or
sub
sbb
sbb
push
lea
xchg
inc
xor
jns
jne
mov
and
int
mov
mov
pop
or
xor
mov
rcrb
push
or
mov
js
insl
je
and
loope
inc
lret
movl
mov
or
in
xlat
pop
pop
cmp
cmp
enter
in
jno
gs
sbb
sbb
and
sbb
mov
je
xor
add
add
call
sub
push
lods
inc
jl
cmp
and
xor
adc
cmp
and
sbb
inc
jmp
mov
or
xchg
test
and
or
mov
inc
test
insb
inc
in
icebp
inc
mov
sub
push
adc
notl
add
test
outsb
rorb
push
mov
jmp
or
daa
cld
jo
mov
xlat
inc
pop
pop
pop
pop
jne
jbe
test
mov
das
adc
adc
inc
in
adc
repnz
inc
repz
int
loopne
push
int3
mov
push
ret
inc
ret
fsubl
sbb
mov
xchg
inc
dec
cltd
enter
loopne
add
pop
mov
andb
lret
xor
icebp
or
jl
das
mov
adc
or
push
mov
mov
popa
jnp
cwtl
sysexit
mov
sahf
ljmp
sub
or
loopne
mov
fcmovnb
les
fidivs
or
icebp
jo
sub
sbb
loop
ss
punpcklwd
loope
or
sub
sbbb
lea
jmp
ss
add
or
inc
push
push
aaa
addl
lret
fisubrs
mov
cmp
int3
es
jo
sbb
xor
lock
adc
pop
or
jmp
pushf
sarl
pop
sub
mov
and
or
insl
dec
fsubrl
imul
and
sahf
dec
inc
pop
loop
fists
jge
adc
test
inc
adc
add
aaa
push
mov
adc
test
adc
fidivl
push
xchg
adc
lret
call
and
lea
or
fidivs
sbb
repz
add
or
cs
cmpsb
sahf
push
rcl
incb
out
pop
or
mov
add
add
or
bound
scas
sahf
sbbb
mov
mov
cmp
loopne
or
cltd
fildl
mov
rorb
add
int3
cld
jmp
mov
clc
fnstcw
sbb
inc
shrb
flds
inc
add
add
testl
cli
mov
scas
and
adc
sbb
adc
push
jp
adc
repnz
adc
pop
sub
push
jp
adc
iret
adc
test
cmp
out
shrb
sub
faddl
mov
add
dec
addr16
jo
sbbl
call
and
notb
or
shl
mov
mov
adc
loop
ss
test
add
ds
push
sub
shrb
mov
test
test
in
sub
adc
call
call
mov
or
cmp
lock
fsubrl
cs
dec
leave
or
lock
lock
int
xchg
sub
push
add
incl
je
pop
call
aaa
add
sub
jne
add
call
pusha
push
ljmp
adcl
xor
test
ja
mov
push
inc
mov
adc
xor
out
mov
jle
adc
inc
pop
mov
and
ja
les
test
ds
jle
pusha
imul
lods
lret
fidivl
pop
dec
dec
cmp
lock
mov
sbb
aas
xor
cmpb
and
mov
push
inc
xchg
adc
cwtl
or
push
dec
adcl
sub
sub
inc
mov
push
push
cs
or
mov
icebp
push
and
add
fnstcw
and
adc
push
dec
or
cmp
lret
rcl
shrb
jmp
daa
in
shr
adc
loopne
cmp
jbe
mov
add
and
shl
or
or
xlat
add
cli
test
jne
sub
add
push
shll
cmpsb
mov
je
mov
dec
scas
or
ret
dec
sbb
inc
ret
in
or
jg
aaa
fs
aam
adc
xor
jp
jmp
movsl
xor
arpl
sbb
rorb
xor
les
out
xor
cmp
xor
ss
pop
fldcw
shr
jge
inc
inc
out
or
sub
fdiv
fiaddl
sbb
and
repz
inc
sbb
fnstenv
pop
xchg
sbb
xchg
adc
sbb
ficompl
and
fsts
fcomi
sbb
cltd
lret
enter
sbb
insb
lods
add
pop
xor
fwait
dec
jne
pop
pop
pop
or
inc
push
xchg
insl
mov
and
lods
rcl
ljmp
dec
and
shr
mov
push
icebp
mov
idiv
mov
mov
cld
lock
je
scas
hlt
inc
bnd
mov
mov
scas
cli
daa
rcll
sub
sbb
test
insb
and
add
aaa
mov
outsb
call
jne
push
adc
ds
in
cmp
je
push
add
into
jbe
jns
sub
sbb
adc
fldcw
mov
test
daa
push
or
adc
inc
dec
cwtl
cmp
aam
pop
adc
or
int3
sarb
mov
push
pop
and
pusha
mov
test
sub
call
add
clc
cs
fstpl
push
lret
sahf
and
and
sbb
int
xchg
dec
pushl
dec
ss
cmp
sub
dec
ret
lods
jae
mov
adc
in
sbb
mov
sbb
lock
push
sub
jg
cli
or
je
test
and
mov
in
pop
je
fdivrp
aaa
push
and
mov
push
cmp
ja
add
cmp
adc
mulb
movsb
jg
cmp
jne
shll
leave
adc
pop
sbb
add
cmp
or
mov
add
sahf
xor
add
push
mov
mov
cmpsb
or
call
inc
fcomps
jmp
push
jbe
pop
mov
push
mov
movb
icebp
pop
arpl
decb
ret
jmp
not
je
mov
scas
push
push
xor
mov
sbb
lea
mov
sub
inc
add
dec
or
and
leave
fwait
fwait
add
jmp
jne
push
sbb
shll
cltd
inc
imul
das
sub
and
xor
mov
aam
out
fdivl
mov
cmp
adc
loopne
dec
add
dec
test
cmpsl
mov
lret
add
rorl
cmp
push
pop
inc
push
sub
shlb
mov
mov
cmpb
push
sub
adc
scas
or
daa
in
or
enter
imul
and
fadd
pop
or
stc
add
push
lret
adc
xor
push
jg
cmp
fisttpl
rcl
shl
cmp
repz
xlat
fcoms
fwait
iret
sti
fstpt
nop
inc
jecxz
xchg
cmp
negl
xor
inc
add
xor
pushw
push
jne
shll
sub
insb
add
xlat
jbe
mov
or
aaa
cli
mov
mov
add
push
ret
push
adc
js
and
adc
popf
jo
lea
add
maskmovq
jnp
add
in
lock
jle
mov
or
push
adc
sahf
fbstp
sbb
push
push
xor
scas
push
cmp
fcomp
addl
sbb
fldcw
adc
sbb
sbb
outsb
adc
decl
test
or
mov
inc
dec
movswl
faddp
shll
aam
and
fndisi(8087
mov
popf
test
loop
mov
pushf
sti
mov
or
test
adc
es
rol
sti
add
es
popf
or
imul
pop
fdivrs
mov
mul
mov
test
into
or
dec
movb
or
sbb
push
hlt
sbb
xchg
leave
scas
std
sbb
loope
into
and
lea
pop
sbb
in
lods
fistpl
repnz
repz
jae
xchg
shll
add
or
shlb
push
test
test
cmpsb
jnp
iret
in
ljmp
insb
inc
inc
or
cmp
mov
and
add
test
rolb
test
rolb
pop
mov
out
or
mov
jb
loopne
dec
xchg
mov
fcoml
or
out
test
movsb
and
cmp
ret
add
mov
dec
repz
push
addl
mov
jge
shll
mov
mov
shl
ret
mov
cmp
nop
jle
jne
sub
call
mov
je
rolb
shl
loopne
cmp
rorb
dec
push
push
lret
mov
or
inc
push
xor
jo
clc
or
inc
lods
ss
shlb
mov
mov
fcmovnb
loop
jmp
dec
dec
push
fldcw
lock
repnz
cli
cli
inc
cli
push
xchg
out
repnz
and
xor
mov
ljmp
call
mov
adc
mov
adc
test
dec
dec
dec
xor
js
push
leavew
mov
xor
mov
rolb
lcall
mov
imul
ret
xor
dec
pop
jnp
xor
push
mov
mov
loop
int3
shll
xchg
testb
or
mov
adc
jp
cmp
add
adc
xor
push
xchg
out
mov
inc
shlb
fdivs
aam
inc
inc
test
dec
ret
sub
jge
mov
lcall
add
rcll
mov
mov
or
lock
movsb
pop
cmp
sbb
and
mov
dec
inc
icebp
insl
test
dec
push
inc
add
lods
rolb
out
inc
jl
add
xchg
push
inc
sbb
mov
in
imul
notb
test
cmpb
jge
or
or
xor
jge
inc
or
in
movsb
xchg
aas
push
adc
jmp
add
push
jns
pushf
jne
in
fnsetpm(287
dec
pop
pop
pop
loopne
xor
cmovo
mov
adc
stos
es
in
cwtl
sub
aas
adc
jbe
sbb
data16
add
inc
add
add
push
nop
xchg
mov
cmp
push
call
push
pop
jle
out
adc
lret
mov
sub
pushf
pop
shr
and
pop
adc
fisttpl
inc
test
shr
push
shll
push
adc
fcomps
xor
fiadds
mov
imul
jmp
cs
loopnew
fdivrs
add
add
and
paddusw
push
adc
add
sbb
out
push
cld
jo
and
xchg
test
dec
xor
or
mov
add
jge
push
ss
mov
enter
lock
or
or
test
dec
sub
push
pushf
xabort
lcall
dec
enter
mov
cmp
push
shlb
add
add
mov
adc
mov
add
fwait
adc
adc
into
or
mov
inc
ljmp
jmp
cli
aas
xor
mov
dec
cmp
jge
sub
cmpb
sub
push
bound
movb
dec
cmp
into
jb
add
dec
add
add
fadds
and
mov
mov
adc
jp
jne
dec
sub
sahf
mov
jb
int
pushf
adc
push
inc
ret
and
add
dec
inc
push
mov
jbe
sti
gs
xor
inc
or
imul
push
push
lcall
mov
out
enter
lret
mov
jle
rcrl
and
push
push
xlat
lds
rorb
lret
movsl
popf
movsl
into
scas
or
jmp
dec
pushf
xchg
push
or
add
or
pop
scas
add
adc
lods
add
adc
in
or
ret
lcall
add
add
cmp
push
mov
mov
mov
inc
and
cmp
xor
into
push
sub
push
pusha
inc
mov
mov
and
pop
pop
jb
ret
or
pop
cmpps
or
nop
mov
adc
xchg
pop
into
lock
ret
fcom
inc
push
pop
jae
or
add
add
add
ja
add
jl
push
test
dec
inc
or
mov
push
je
pop
pop
popf
jmp
ficoml
js
outsl
push
add
adc
fidivrs
xor
and
js
dec
pop
sbb
xchg
sbb
cmp
mov
rolw
sub
push
inc
dec
xor
dec
jae
fldcw
mov
cld
xor
roll
or
sub
fcoml
inc
stos
jg
xor
into
dec
rcrb
sub
push
cmpsl
add
jge
add
les
pop
sub
jnp
xor
test
adc
mov
add
add
sarb
xor
xchg
idiv
shlb
lret
je
and
cmp
mov
lret
into
into
mov
push
cmp
mov
mov
sub
push
pop
shl
cmp
pop
mov
push
mov
not
and
or
sbb
imul
std
daa
movsb
nop
movsb
xor
or
pop
pusha
inc
adc
lcall
out
ret
pop
test
add
repnz
add
add
testb
test
and
lret
dec
repz
je
and
imul
sbb
pop
mov
sub
sbb
mov
jo
cmp
pop
jae
aad
xor
xchg
incb
push
push
scas
adc
xor
inc
push
dec
inc
movsl
or
ss
add
xchg
jae
add
jo
pop
fdivr
adc
cmp
add
dec
push
cmp
add
mov
loop
xor
or
inc
cmp
sub
andb
ret
fisubs
mov
sbb
xlat
jle
and
cwtl
sub
daa
or
and
inc
aaa
xchg
sub
loop
sub
lret
rcl
ljmp
add
inc
inc
icebp
mov
dec
loopne
mull
lods
xchg
pop
jl
dec
sbb
jle
inc
push
xor
jmp
xchg
inc
add
mov
sbb
jmp
in
mov
frstor
rorl
loopne
mov
out
je
mov
call
jle
jle
xchg
cmp
jbe
inc
inc
sahf
call
movsb
fcompl
jle
lock
lds
popa
fsubrs
call
dec
ret
clc
jo
cmp
mov
jmp
and
xchg
stc
push
or
pop
popa
jecxz
adc
cmp
mov
movsl
bound
loope
mov
repz
sbb
leave
test
and
xchg
cs
lods
rcll
cmp
jmp
pusha
out
stos
xor
xor
jle
pushl
push
leave
outsl
mov
test
je
test
ret
mov
dec
push
xor
mov
push
mov
pop
popf
in
cmpsl
rcr
push
loopne
push
mov
cmpsl
or
iret
add
sbb
xor
inc
cmp
test
ret
pop
push
je
mov
and
fcoml
cmp
rcr
cmpsb
mov
xchg
cmp
inc
sbb
clc
cmp
sub
jge
or
xchg
sbb
pop
push
and
mov
jae
add
scas
dec
and
and
imul
fcoml
xlat
sub
push
lods
push
sarl
test
or
adc
shlb
sbb
add
inc
addr16
cs
or
jae
add
add
stc
jmp
arpl
lods
and
push
mov
sub
int
sbb
mov
add
or
inc
fsubrl
pop
pop
ret
jmp
xor
adc
jl
xchg
lcall
push
inc
add
add
lods
dec
lods
and
rclb
jmp
xchg
xor
loopne
dec
xor
add
cltd
subb
xor
mov
pusha
or
fadd
add
outsb
repnz
cmp
in
pop
add
xchg
jecxz,pn
mov
aaa
fcomps
ret
push
clc
mov
jnp
cmp
or
adc
mov
mov
cmp
imul
dec
shll
mov
rol
push
test
scas
push
test
mov
fimuls
or
cwtl
ret
call
mov
or
add
push
pop
jl
pusha
dec
lea
push
fcompl
pop
enter
js
movsl
adc
mov
mov
cs
sbb
mov
gs
pop
nop
loope
push
sub
mov
and
loopne
jmp
dec
loop
pop
dec
outsl
andb
add
xlat
loope
ss
push
js
subb
pop
adc
sbb
orl
je
sbb
add
push
xchg
and
jno
or
inc
sar
test
push
das
push
movsl
sub
aam
mov
xchg
cmp
in
inc
je
mov
repnz
dec
push
daa
or
ljmp
mov
push
jl
lret
sbb
les
xor
pop
rclb
push
adc
add
add
push
mov
lods
sub
addb
fsubl
dec
testb
push
push
inc
and
or
add
sbb
xchg
nop
or
clc
cs
cmp
pop
mov
xor
sbb
pop
pop
or
out
sub
add
das
jg
loopne
add
in
xor
js
lea
adc
aaa
adc
data16
shll
push
mov
lods
cmpsl
or
pop
pop
push
inc
inc
jecxz
xor
push
das
loopne
mov
sub
loop
and
rorb
sbb
mov
iret
cltd
jne
mov
test
sub
and
aaa
inc
stos
test
jle
fs
mov
lods
push
pop
je
out
sub
outsb
fld
push
xchg
fildll
sub
dec
and
cmp
jmp
fstps
xchg
xor
pop
jnp
jno
xor
jmp
cmp
fcomp
adc
in
ficoml
test
cmpsb
pop
arpl
loope
aad
lea
mov
insb
or
call
jbe
xchg
push
dec
jo
fstps
xchg
popa
popa
push
fs
imul
insb
es
clc
in
test
hlt
push
out
scas
dec
mov
inc
add
pop
fidivrs
fs
ror
push
cmpsb
mov
movsb
cld
adc
cmp
dec
xchg
rcl
inc
stc
inc
inc
inc
mov
dec
mov
rcll
push
inc
inc
mov
test
es
xchg
jbe
jbe
adc
adc
shlb
jmp
push
pushf
jle
push
ret
adc
loop
sbb
add
add
xor
or
mov
lret
pop
sub
nop
dec
sub
xlat
in
sti
sbb
cmp
pop
and
mov
arpl
stos
sbb
pop
or
jge
outsb
add
adc
gs
xor
jl
aam
cltd
pusha
lcall
jb
sub
fmuls
imul
push
cmp
outsl
sti
insb
and
dec
or
imul
jg
out
and
insb
jmp
notb
sbb
adc
pusha
js
gs
ss
and
es
and
lock
xor
add
push
xorb
jmp
mov
fidivrl
icebp
movsb
add
fists
push
ficomps
popa
cmp
inc
mov
or
sub
mov
cmp
sub
jp
orb
outsl
jno
push
inc
mov
sbb
ja
outsl
stos
xorb
outsb
and
std
xor
sbb
cwtl
cmp
mov
sub
dec
xchg
sarb
or
lea
adc
test
xchg
sti
mov
adc
and
jbe
or
mov
pop
push
ss
cmc
and
icebp
cmp
push
pop
lods
subl
shlb
sub
call
jmp
inc
insb
mov
add
movsl
add
mov
icebp
lea
push
in
inc
cmp
mov
xchg
in
sub
xchg
xchg
enter
xchg
inc
mov
mov
mov
lahf
mov
add
lret
sbb
mov
lock
add
fldl
or
fcomip
pop
roll
mov
cmc
inc
dec
add
sbb
int3
iret
and
ret
in
inc
sbb
pop
enter
out
leave
fistpll
rol
push
clc
inc
inc
movl
int3
sbb
cmpsb
inc
push
dec
jne
int3
cli
or
cmp
cmpl
int
and
out
dec
push
lods
sub
adc
testb
testb
repnz
mov
adc
test
or
adc
js
imul
dec
inc
loopne
sub
cs
mov
xor
andl
jnp
and
sbb
jnp
and
jmp
adc
jg
adc
jae
mov
pusha
out
aad
rcrb
adc
gs
stos
stos
stos
mov
jo
insl
shl
mov
mov
jbe
loopne
movsb
sbbb
adc
fisttpl
pushl
leave
xchg
dec
jge
addb
dec
loopne
or
out
jmp
popf
cmp
pop
cs
mov
in
sbb
push
ret
in
cmp
sub
push
xor
cmp
out
adc
and
and
test
pop
inc
sbb
inc
arpl
in
mov
sti
fs
fcoms
test
or
mov
ret
cmpsb
pop
insb
sub
mov
imul
lret
xor
mov
add
push
jl
cli
addb
mov
or
add
add
outsb
mov
sti
jg
aas
add
push
idiv
dec
insb
dec
sbb
pushf
sbb
loopne
inc
sub
add
bound
xor
sub
adc
jno
and
or
pop
jg
movb
adcb
pop
jl
sbb
mov
cmp
mov
sbb
jo
js
call
mov
mov
push
and
cmp
and
push
xchg
inc
xor
xchg
gs
les
lods
and
retw
shlb
mov
jb
sbb
out
loope
fdivs
aaa
sub
and
inc
clc
iret
in
ja
test
mov
out
sub
enter
sub
gs
push
mov
sbbl
or
cmpsl
ss
pop
adc
inc
or
sbb
je
nop
jle
add
sbb
dec
rolb
add
cmp
in
cmp
adc
push
data16
xchg
and
outsb
fcoms
imul
shrl
loope
rolb
jle
pop
inc
outsb
cmp
inc
push
pop
cmp
sbb
push
lods
inc
fpatan
loope
stos
or
and
xchg
sbb
mov
mov
aam
outsb
inc
data16
pop
or
adc
test
negl
add
cmp
mov
inc
pop
mov
or
mov
push
pushl
inc
mov
lcall
loope
add
flds
inc
dec
adc
push
loopne
repz
push
into
cmp
test
mov
pop
je
cmp
aam
push
dec
shrb
xor
add
shrl
push
lcall
pop
jnp
or
je
xchg
je
mov
arpl
fs
sbb
jmp
outsl
les
push
sub
hlt
adc
cmp
pop
add
inc
pop
add
sbb
cmc
inc
imul
nop
scas
dec
push
cmp
push
ret
repnz
ret
dec
mov
pop
adc
adc
sbb
in
jno
leave
cmp
mov
mov
pop
mov
add
testb
jmp
xor
xor
mov
xchg
je
adcl
pop
aam
sub
jne
push
sub
mov
int3
lcall
mov
loope
sub
inc
mov
or
adc
outsl
mov
fisttps
inc
daa
pop
inc
xchg
jns
std
sub
lea
test
mov
mov
filds
aas
enter
je
pop
imul
insb
xor
inc
jno
rclb
push
cmp
lcall
out
jo
call
jb
xor
mov
or
jae
push
cmp
jl
add
inc
mov
inc
sub
mov
dec
adc
das
add
scas
mov
lock
or
clc
push
mov
pop
test
push
ljmp
jb
movsl
sub
mov
xchg
out
inc
add
jmp
adc
mov
inc
push
or
je
jo
push
leave
int3
subb
ds
mov
lods
std
mov
pop
out
aam
sahf
adc
or
mov
adc
lods
mov
bound
dec
and
mov
sbb
jne
jae
xlat
sti
jmp
frstpm(287
or
push
pop
ss
arpl
mov
dec
pop
mov
rolb
add
dec
add
into
pop
jle
ret
add
mov
in
out
mov
or
add
push
cmp
cmpl
aam
andl
or
mov
aam
mov
cmp
add
xchg
pop
xchg
lret
clc
dec
mov
fsub
inc
push
lock
xchg
xchg
inc
adc
sbb
lock
add
repnz
dec
ret
pusha
test
insb
aam
mov
test
pusha
jbe
mov
and
dec
loopne
dec
sbb
sbb
fs
sub
dec
jg
adc
orl
call
lret
pop
hlt
sbb
dec
inc
jmp
aad
jb
fildl
sbb
test
nop
fadds
mov
push
std
pop
mov
pop
std
jb
xchg
aam
mov
mov
test
mov
lock
cmp
xlat
dec
xor
ljmp
and
mov
push
dec
test
insb
ret
lock
or
sbb
out
jbe
inc
aad
or
lret
mov
push
mov
ljmp
cmp
and
xchg
inc
jp
jo
mov
xchg
mov
jg
call
sbb
mov
and
cmp
jb
testb
fwait
or
inc
add
int3
lods
pop
push
adc
adc
jge
push
adc
mov
movb
mov
jb
je
data16
ja
jb
cmp
jbe
mov
push
or
nop
fs
lret
cmp
push
call
call
xchg
xchg
das
xor
aas
out
cmp
sub
adc
test
imul
or
movsl
push
push
mov
xor
mov
sbb
pop
mov
pop
es
inc
adc
bound
push
sub
pop
pop
pop
rcrb
mov
sbb
ret
inc
lea
dec
or
in
sarl
data16
les
arpl
int3
add
sbb
adc
xchg
push
jnp
mov
std
dec
adc
xor
dec
lcall
arpl
fimull
or
shlb
push
fs
int3
pop
fs
in
test
and
dec
xor
enter
sbb
inc
enter
imul
add
adc
push
jae
xlat
cmp
push
push
lods
xor
cmc
inc
fcomps
jle
shlb
sub
dec
sub
fadds
fwait
xchg
ja
mov
sbb
add
mov
nop
cld
int3
imul
lret
sbbb
insb
xchg
sbb
jne
cmp
xchg
sbb
fsubl
mov
icebp
lret
dec
rorb
cld
sub
jmp
int3
xchg
shl
loop
lcall
pop
xor
mov
mov
cmp
mov
arpl
jl
dec
xchg
addr16
and
adc
push
mov
push
adc
dec
mov
cld
pop
leave
inc
sub
xchg
push
test
call
lret
nop
fs
les
jl
pop
test
imul
in
pop
call
and
pop
in
rcpps
jb
adc
cmove
xor
subb
sub
insb
and
dec
nop
fcomps
mov
popf
pushf
outsl
mov
shll
in
in
dec
shll
aad
aaa
call
xchg
cld
pop
hlt
add
sbb
or
jo
in
inc
push
cmp
xlat
inc
loopne
and
add
sbb
aas
loopne
add
mov
clc
lods
or
dec
push
add
dec
add
jbe
jne
xor
cltd
test
pop
mov
cmpsb
add
cmp
jmp
jb
and
jne
dec
daa
inc
jb
test
xchg
call
data16
adc
shlb
mov
loopne
daa
shll
cltd
aam
fs
cmpsb
sub
inc
or
xor
cmp
add
add
or
or
adc
xchg
dec
xor
and
dec
xor
sub
xor
dec
xor
and
inc
inc
xor
and
dec
fs
jne
insb
add
int3
popf
jge
imul
mov
or
add
in
push
in
rcl
xor
sub
hlt
adc
mov
cmp
cld
loop
mov
lock
add
mov
loopne
add
pop
scas
call
mov
and
shrl
sbb
dec
fwait
mov
jmp
movsb
jns
fsub
xchg
mov
xchg
xor
sbb
sarb
popa
adc
addr16
pop
sub
inc
jbe
inc
jo
in
dec
call
sub
cmpsb
movsb
fwait
aam
sbb
in
in
in
mov
or
in
inc
rolb
adcb
or
push
push
ja
and
ja
lds
ja
aas
aad
adc
jg
js
inc
in
test
push
xchg
push
sbb
das
cs
es
call
add
pop
or
in
fadds
jo
cltd
add
or
fs
mov
test
fldl
mov
in
call
xchg
fdivs
lahf
fistpll
inc
je
mov
dec
mov
adc
jnp
jb
jl
or
jnp
imul
addb
dec
call
leave
mov
lods
fdivl
and
jnp
cmpsb
stos
sub
xchg
adc
jl
rcrl
adc
insl
mov
xchg
cmpsb
and
movups
mov
push
int3
jl
stc
push
ret
or
int
loopne
aam
cmp
add
mov
xchg
push
push
push
dec
sbb
add
adc
inc
xchg
cli
add
xchg
dec
jge
xor
addl
fdivr
in
cmp
sbb
mov
out
add
fs
std
pushf
int3
out
int
jbe
shr
adc
cld
pop
fadds
jns
daa
sub
out
cmp
ja
iret
push
dec
cmp
aam
adc
and
mov
xorb
cmpsl
xchg
cmp
cmp
mov
mov
cmp
cmp
rcl
add
and
bound
adc
mov
push
cmp
ret
sbb
adc
loope
rcl
rolb
add
test
in
insl
xor
inc
cmp
in
inc
dec
or
cwtl
push
cmp
sub
orl
sub
aas
setl
sbb
dec
js
addb
jae
and
sbb
and
fildl
dec
rolb
ret
lds
mov
mov
aas
inc
adc
and
inc
mov
sbb
les
mov
mov
aas
sub
push
in
call
pop
hlt
fsubs
mov
cmp
or
sub
imul
mov
jmp
test
and
jmp
test
adc
pop
scas
mov
outsl
and
pop
test
inc
ss
jecxz
das
mov
inc
pusha
insl
in
inc
fwait
add
push
cltd
hlt
inc
fwait
sbb
xchg
jbe
mov
dec
mull
adc
jl
pop
pop
cltd
pusha
inc
add
jo,pn
adc
xor
aad
xchg
xor
jg
sub
add
add
xor
inc
jg
or
xchg
pop
popa
inc
cmpsb
leave
rolb
mov
or
or
dec
adc
mov
test
in
pop
mov
dec
and
out
adc
dec
dec
xchg
sub
jg
fidivrl
xchg
orl
icebp
sub
push
enter
add
ret
pop
xchg
adc
test
xor
jp
pop
pop
sbb
sbb
and
or
dec
call
loopne
test
insb
mov
add
add
insl
ljmp
push
fnstcw
sub
adc
and
sbb
cwtl
xor
mov
push
js
and
mov
adc
insb
mov
push
test
cmp
sub
or
mov
and
mov
and
and
or
pop
sbb
mov
daa
in
dec
push
cltd
and
call
and
pop
mov
add
push
push
mov
adc
in
adc
sbb
les
or
inc
inc
divb
subl
push
addl
and
push
int
inc
mov
mov
xor
loopne
pop
inc
pop
ret
rorb
fstpl
xchg
aaa
ret
cld
mov
aas
cld
shlb
rorb
or
out
mov
cmp
aam
add
inc
mov
push
mov
jecxz
fwait
movsb
pop
mov
push
mov
lds
adcb
and
das
call
call
mov
jae
mov
xorb
ret
cs
adc
xchg
arpl
or
outsl
call
add
loopne
sub
or
fnsave
pop
cmpsb
sbb
in
arpl
outsl
fsubs
loopne
loope
xor
mov
adc
fiaddl
and
orl
mov
xchg
lock
fisubl
sti
adc
or
imul
and
imul
lock
push
ljmp
fwait
nop
inc
dec
aam
lods
nop
jb
jb
enter
jb
jb
mov
jb
xchg
cwtl
mov
mov
dec
outsl
adc
pop
shrb
sbb
pop
cmc
test
popa
push
iret
cmp
cwtl
or
xchg
fbld
insl
mov
jmp
dec
in
outsb
dec
xor
fsubs
adc
popa
mov
push
mov
xchg
nop
pusha
mov
adc
mov
or
mov
jb
push
lods
imul
mov
arpl
rcrb
push
test
push
fistl
call
inc
or
ja
adc
push
jo
mov
and
fsubrl
inc
push
pop
mov
rcl
aas
sub
stos
inc
push
repnz
xchg
add
rcrb
push
jge
sbb
adc
pop
das
rcrb
and
pop
cltd
inc
dec
push
mov
loope
mov
and
call
rcrb
xchg
mov
testl
or
movsb
mov
add
mov
push
pop
cwtl
adc
je
inc
fsubs
int3
jp
imul
mov
dec
xchg
xor
xchg
aam
movd
es
add
es
inc
cmpsl
push
push
cltd
std
fsubl
or
xor
and
test
shl
cmc
imul
mov
jae
xchg
mov
jp
and
fildl
inc
inc
orb
cmc
fdivr
test
ret
xor
std
int3
inc
mov
sti
andl
adc
sbb
adc
subb
fwait
inc
lret
inc
fidivl
adc
mov
and
add
cmp
jb
es
mov
lods
pop
sbb
pop
push
sbb
pop
mov
sbb
jae
or
mov
pop
pushf
shlb
inc
mov
pop
pushf
and
cwtl
test
mov
loope
fsubl
lods
fsubrs
mov
loope
adc
push
add
or
add
js
je
or
mov
mov
fcompl
int
dec
sahf
xrelease
push
sahf
add
mov
inc
pop
mov
jne
aad
lahf
divl
pop
adc
adc
ljmp
stos
inc
adc
mov
rcrb
push
mov
add
aam
fiaddl
cmp
sti
int3
sti
mov
adc
icebp
pop
mov
push
mov
es
addr16
dec
test
aas
pop
js
popa
imul
adc
and
sbb
loope
aaa
adc
mov
test
fsub
push
jecxz
or
pop
call
imul
push
jo
addr16
dec
shll
cmpb
pop
mov
inc
pop
mov
xor
daa
rolb
jmp
xchg
adc
mov
or
mov
pushf
mov
cwtl
adc
in
std
jl
mov
aas
adc
add
fwait
or
int3
mov
and
or
call
dec
dec
stos
adc
jg
movsb
jo
sub
cmp
scas
mov
shlb
rolb
movsl
sti
fs
mov
arpl
js
inc
dec
fwait
pop
jnp
inc
dec
pop
inc
pop
xchg
or
mov
mov
fs
mov
sahf
cmp
pop
cmpsb
sbb
sub
dec
sahf
insb
cwtl
movsb
push
pushf
sbb
enter
nop
dec
lcall
mov
sub
push
leave
pop
cmpsb
sub
cmpsb
mov
inc
lock
mov
mov
lret
test
adc
test
enter
and
fsubl
pop
push
dec
lock
js
inc
jmp
and
mov
mov
test
in
pop
enter
dec
lock
ret
or
lds
inc
fiadds
sub
mov
sub
adc
add
and
pop
push
imul
movsb
lea
or
inc
fsubs
aam
cmp
test
sbb
adc
ret
cmp
insl
subl
les
or
rcll
mov
add
pop
or
jg
leave
in
push
int3
pop
shlb
mov
in
stos
mov
aas
jb
mov
stos
pop
jb
add
add
aam
jne
pop
jge
or
or
and
call
out
or
dec
or
add
and
jmp
mov
test
daa
mov
cs
psubb
les
stos
sub
pusha
jo
shrd
adc
das
jecxz
out
out
adc
mov
sub
movsl
mov
rclb
mov
in
sub
sbb
push
jnp
lods
mull
stos
xor
push
les
inc
orb
pusha
filds
jns
arpl
sub
in
in
xor
aad
mov
in
add
stos
mov
sbb
addb
xchg
pop
in
std
nop
mov
aas
adc
mov
jno
les
mov
adc
adc
inc
mov
or
out
je
mov
int3
jg
push
in
sar
lret
shl
stos
pop
popf
adc
int3
pusha
mov
push
inc
pop
jne
int3
sbb
push
pop
jne
lds
ficoml
fs
fs
test
xchg
test
sbb
loop
mov
add
or
sub
mov
aam
add
add
or
and
fadds
dec
mov
popf
inc
mov
mov
jae
pop
adc
xchg
fmuls
and
mov
iret
nop
addb
mov
fcoms
and
sub
mov
lods
xchg
dec
int3
mov
adc
les
adc
fdivs
cmpsb
stos
mov
inc
test
lahf
inc
faddl
jns
aad
mov
jnp
ds
mov
data16
sub
sbb
insb
js
mov
aaa
and
int
cltd
add
orb
mov
cmp
int
rorb
testl
out
xor
adc
nop
and
sbb
cmpsb
mov
fwait
dec
inc
test
mov
mov
mov
lea
cmpl
cmova
add
pop
xor
xchg
mov
inc
sub
add
pop
mov
push
xchg
adc
pop
jb
aad
iret
or
cs
sub
adcl
jl
cwtl
in
test
jo
add
cmp
or
sub
add
push
mov
mov
or
pop
ret
jmp
les
mov
add
jb
ret
movsl
out
loope
out
fsubr
push
mov
je
inc
xor
xchg
repz
or
push
xchg
or
imul
mov
mov
push
fnstenv
add
in
mov
or
outsl
sub
loopne
xchg
push
pop
jb
in
mov
nop
lret
add
push
xchg
dec
push
and
shrl
cwtl
lcall
or
cmpsb
sub
dec
es
movsb
repnz
js
xchg
fildl
int
inc
inc
jb
leave
insl
nop
and
xchg
loope
adc
mov
pop
int3
cltd
leave
orl
leave
sar
inc
outsb
inc
xor
lods
push
loop
jne
pop
push
dec
cmpsl
lock
popf
mov
pop
mov
adc
pusha
mov
pop
js
mov
test
aam
push
and
rorb
xor
and
sti
enter
or
adc
and
jb
and
arpl
inc
inc
aaa
adc
in
jae
sysenter
fisubrl
cwtl
adcl
cwtl
int3
pop
popa
leave
cs
mov
inc
ds
add
push
push
ss
ja
add
xor
xchg
or
sbb
pop
add
pop
sub
mov
in
insl
leave
out
mov
dec
push
fbld
inc
cs
loopne
jl
fs
jg
add
in
mov
xchg
mov
jbe
xchg
invd
pop
and
add
test
xor
or
dec
and
push
pop
xor
movsb
mov
jne
cmpsb
icebp
cmp
push
fadds
shlb
dec
or
inc
mov
fcomps
mov
aas
inc
inc
dec
jo
or
fsubrs
or
or
push
dec
cmp
adc
dec
sbb
insb
add
das
pop
insb
add
adcl
push
cmp
fstl
cld
cltd
mov
inc
lret
lock
vmovntps
addr16
or
sbb
pop
rorb
movsb
repnz
loopne
mov
lahf
sbb
sbb
mov
push
nop
push
xor
sub
sub
mov
lods
les
popf
jecxz
or
shrb
pmaddwd
loopne
test
inc
xchg
mov
inc
add
and
in
ljmp
in
addb
int3
call
leave
xor
sbb
sub
or
push
adc
arpl
gs
insl
fwait
or
insl
pop
mov
and
xchg
mov
cmp
sbb
adc
xchg
test
adc
lock
adc
jo
stos
and
cltd
sub
cmp
or
sub
bound
mov
xchg
sti
cwtl
gs
aam
popa
int3
push
push
inc
and
adc
lock
fwait
dec
fs
mov
sub
leave
sub
mov
add
mov
lahf
mov
adc
mov
add
in
jno
dec
xor
adc
mov
js
mov
in
pop
insl
pusha
and
dec
xor
push
xlat
push
enter
icebp
dec
lret
push
pop
mov
lea
cmp
sbb
clc
fmuls
lds
and
aaa
or
sub
rol
jne
es
fs
pushf
and
cmp
mov
and
mov
ret
push
insl
mov
dec
adc
xor
aam
enter
rorl
aam
and
dec
pop
adc
pop
insl
push
nop
mov
cmp
xchg
add
je
push
push
inc
orl
dec
data16
incl
cmp
dec
clc
adc
pushf
xor
scas
stos
lods
dec
mov
aad
mov
out
mov
inc
xor
incl
outsl
xor
dec
pop
in
fst
or
iret
add
je
enter
sbb
mov
adc
sub
daa
dec
pop
inc
mov
pop
push
ret
lahf
mov
shlb
mov
cs
fsubr
loopne
add
popl
push
jns
cmp
sbbb
shll
aam
mov
loopne
jg
clc
xor
sbb
imul
or
iret
cltd
shrl
lock
or
jmp
mov
mov
adc
mov
test
mov
push
imul
add
rorb
pop
sbb
daa
adc
incb
shll
sbb
stos
mov
xor
xor
cmp
mul
inc
sbb
and
xor
leave
call
mov
fcompl
cltd
loopne
pop
enter
int3
addl
lock
add
daa
mov
lods
js
shrl
or
ret
sarb
loopne
cld
popa
or
sub
scas
and
mov
insb
movsb
test
dec
or
jp
cwtl
rcrb
addl
pusha
adcb
add
fdivl
aad
xchg
mov
clc
jae
cmp
rcll
rorb
mov
jne
inc
insb
mov
dec
jl
dec
sbb
cmpsb
lea
add
pop
xor
mov
or
adc
mov
lock
cltd
pusha
dec
xor
and
dec
dec
ss
and
push
dec
add
sbb
and
mov
sub
push
fs
sti
dec
clc
cmpsb
dec
sbb
adc
shll
add
push
enter
and
mov
cmp
pop
sbb
movsl
mov
in
jae
sti
inc
ret
jno
jae
in
cli
call
xchg
nop
xchg
aad
jl
imul
cmp
in
mov
test
popa
xchg
fmull
int3
or
mov
iret
jmpw
lods
pop
cwtl
cltd
inc
inc
lea
enter
nop
pop
mov
mov
rcrb
in
test
push
mov
add
ret
iret
call
je
or
jno
cmp
rcl
lock
push
pusha
fadds
rol
adcl
push
nop
mov
inc
popa
and
rorl
in
xor
inc
ds
aas
pusha
shll
sbb
nop
sub
nop
fwait
pop
xor
and
jl
push
repnz
push
test
rolb
enter
pop
cmp
mov
fs
fistps
push
jle
in
shlb
movl
jle
adc
add
aaa
lahf
pop
sti
cmp
and
sbb
mov
sub
jo
out
clc
enter
and
jmp
mov
sub
add
mov
pop
enter
andl
pop
xchg
jo
sub
movsb
xor
push
inc
and
push
shlb
fsubrs
inc
sbb
jae
sbb
dec
loope
and
lock
push
hlt
in
orl
adc
push
sbb
add
mov
pop
fistps
fs
jl
pop
xchg
push
lods
fsubrl
mov
xlat
mov
jle
add
jns
pop
xor
inc
push
push
repz
out
adc
cs
mov
rcl
call
ds
out
push
sarb
incb
notl
add
cmpsb
push
pop
out
out
lahf
rolb
inc
aam
out
in
mov
mov
ljmp
pushl
fistpl
or
jnp
mov
add
std
aas
pop
lock
daa
or
mov
rcll
xchg
adc
aaa
mov
or
outsl
cmp
adc
mov
out
out
cmp
ds
push
lods
out
mov
aas
out
imul
dec
outsb
je
idiv
gs
outsl
arpl
fs
outsl
jo
sbb
push
dec
imul
pusha
pop
jne
push
gs
xor
cs
insb
test
out
ja
bound
and
pop
popa
je
outsl
outsb
push
pop
fadds
add
lock
paddsb
pop
jbe
add
incl
sub
andb
push
inc
outsl
jb
js
out
outsl
fucomi
je
jb
gs
cmp
or
outsl
add
add
pop
lock
add
add
je
push
je
fidivl
jne
jb
stos
inc
imul
dec
push
jbe
xor
xor
aas
out
jle
cmp
cmp
dec
and
mov
adc
add
das
das
adc
push
dec
popf
popa
shll
insl
bound
daa
dec
in
sar
outsl
jbe
dec
arpl
push
jo
sub
ficomps
jne
dec
jne
xchg
xchg
jg
test
insb
dec
popa
jb
push
shll
inc
insb
adc
out
scas
cmpsl
xchg
popl
fdivrl
jg
addr16
push
xor
ja
jb
xor
mulb
pop
jae
push
mov
sbb
into
mov
bound
and
jbe
jae
pop
dec
inc
ds
popa
das
jo
bound
insl
or
fistps
push
pushf
lock
nop
add
incl
push
mov
adc
dec
jge
es
sub
sub
push
clc
ljmp
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
ljmp
inc
dec
dec
dec
dec
dec
dec
dec
jg
movsb
mov
stos
pop
pop
pop
pop
pop
pop
pop
or
lcall
popa
bound
gs
imul
jno
ss
cmpsb
sbb
ja
movsb
jnp
jge
jg
add
repz
inc
dec
imul
ja
inc
push
sbb
dec
xchg
xor
jl
pop
push
inc
insb
jae
jl
inc
imul
push
and
push
jne
inc
and
xchg
inc
jge
das
push
fstps
and
jb
ss
dec
pop
mov
sbb
inc
sbb
jbe
dec
inc
and
add
xor
std
test
outsb
xor
insb
imul
pop
xor
mov
je,pn
xor
mov
xchg
adc
je
sub
and
ss
loope
fs
out
imul
add
or
xorb
fldt
and
daa
mov
jne
imul
xor
insl
and
insl
push
gs
inc
lock
aas
xor
and
jne
dec
mov
or
inc
lcallw
xchg
dec
jo
sbb
add
jbe
iret
je
xchg
and
lret
imul
popa
add
or
fs
cmp
xlat
and
inc
push
jbe
je
mov
add
and
push
jo,pt
or
int3
mov
imul
mov
push
aaa
mov
cmpb
and
das
arpl
cmp
es
push
arpl
pop
sbb
mov
fiadds
femms
stos
in
inc
xchg
sub
imul
xor
jae
int3
or
pop
cmp
xor
jo
gs
xchg
xor
insb
popa
pop
xor
jns
push
inc
mov
cmp
cmpsb
cs
ja
and
mov
cmpl
fs
xor
inc
xor
or
pop
dec
add
add
mov
popa
push
ja
outsl
outsl
push
enter
jae
fs
jo
cli
jbe
add
movsb
jnp
test
xor
push
mov
pop
push
gs
das
mov
shll
mov
out
out
test
outsl
push
fidivs
mov
arpl
lcall
bound
cmp
aaa
insl
in
ljmp
imul
pop
mov
imul
push
pop
in
inc
jno
stos
jle
rcl
push
leave
nop
mov
call
jbe
fucomip
mov
adc
adc
cmp
fadd
inc
and
and
add
movsb
cmp
cmp
pop
mov
addr16
jae
xor
or
mov
out
sub
test
loopne
jb
push
sub
adc
sbb
inc
sub
pop
dec
jmp
dec
or
jo
and
cmp
imul
inc
inc
and
cmp
push
dec
cmp
mov
leave
in
lcall
loopne
add
cmp
in
push
rol
das
lahf
jg
lret
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
or
mov
imul
loop
imul
mov
or
xchg
add
add
es
enter
popa
js
lock
imul
imul
mov
js
add
inc
jne
sub
cmp
xchg
adc
fwait
pop
add
adc
add
add
add
add
xlat
adcb
cmp
pop
or
aaa
ds
push
pop
scas
fnstcw
or
pusha
add
js
or
out
int3
mov
xor
sbb
jnp
idiv
addb
add
xchg
test
insl
lcall
push
orb
cmp
push
push
and
sub
jb
int3
push
mov
fldcw
lods
pop
into
jo
add
inc
mov
sub
mov
cmp
xchg
push
stos
int3
js
jo
popa
loope
jge
movsb
add
out
add
or
rorb
leave
jae
leave
add
lea
scas
pop
jb
mov
in
dec
xchg
xchg
lret
fmuls
data16
push
adc
push
inc
or
xor
js
or
test
dec
add
and
dec
adc
loope
data16
cs
test
out
test
cmp
add
sub
sub
dec
add
inc
scas
in
test
mov
add
or
movsb
stos
mov
and
or
push
movsl
add
add
add
add
ja
or
mov
je
adc
aaa
add
test
mov
pop
rcrl
sub
out
and
jg
loope
addb
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
lcall
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
adc
dec
clc
stc
cli
sti
cld
std
inc
add
lea
push
inc
pushl
aas
sbb
or
cmp
test
lahf
push
pop
outsl
ja
jae
pop
sbb
push
jae
jb
bound
push
mov
inc
data16
dec
cmp
inc
arpl
mov
jne
daa
pop
lea
dec
mov
jbe
in
inc
outsl
js
push
push
inc
push
push
dec
dec
xor
imul
out
mov
xchg
mov
mov
in
sti
pop
jbe
dec
imul
mov
imul
ds
and
inc
jb
jns
sub
daa
pop
enter
in
adc
mov
aaa
call
arpl
pop
int3
cmp
outsb
adc
rcrb
arpl
mov
push
outsl
shr
in
pusha
inc
jbe
push
push
push
outsb
pushf
push
fs
and
cwtl
sub
dec
pop
ss
popl
das
add
cmp
push
sbb
and
insl
es
dec
lahf
sub
cwtl
xchg
mov
xchg
pop
pop
pop
push
push
jae
imul
pusha
insb
mov
xchg
add
movsl
jae
addr16
xor
ja
das
outsb
gs
mov
data16
and
dec
testl
into
mov
outsb
mov
push
cmp
push
scas
dec
jge
push
sbb
aas
jg
mov
imul
sbb
fistpll
xor
jae
and
jg
cmp
push
sbb
jg
test
mov
or
stos
outsb
aad
das
je
outsl
xchg
push
mov
mov
popw
stc
iret
rcrl
pop
cmp
cmp
add
ds
push
das
push
sub
inc
sbb
out
jnp
into
xor
sub
sub
ret
gs
push
cmp
je
lahf
xlat
jmp
cmp
in
mov
inc
dec
pop
pop
cwtl
cmpsb
shrl
addr16
push
jb
imul
push
lret
sahf
sbb
push
cwtl
pop
popa
pop
and
es
xor
sub
iret
sti
outsb
xchg
lock
add
repz
push
dec
inc
xor
popf
in
repz
hlt
dec
xchg
jmp
fs
jl
inc
sub
lock
mov
adc
or
sti
xor
out
add
out
lock
cli
push
xlat
adc
dec
in
call
out
mov
push
sbbb
pop
out
out
jns
push
aam
mov
jl,pt
int3
push
enter
out
sahf
sarb
out
test
mov
sahf
out
je
push
cmp
repz
sbb
out
fdivrl
cmp
cmp
lock
aam
sahf
out
sarb
out
jo
inc
and
sahf
out
cld
in
pop
push
lods
andb
fucom
sbb
jmp
push
test
cmpsl
pop
sub
or
ds
outsl
mov
bound
outsb
push
xor
add
push
ljmp
cmp
lea
cmpsb
bound
in
movsl
push
insb
fs
sbb
bnd
jb
xor
mulb
lods
pcmpgtw
xor
jl
aas
add
sarb
inc
incl
dec
jae
insb
push
sub
insb
inc
mov
jnp
push
sbb
dec
inc
dec
xor
inc
mov
std
decl
dec
push
push
and
xor
push
dec
inc
dec
add
dec
dec
inc
add
mov
sub
adc
mov
push
inc
call
rclb
mov
inc
add
adc
outsb
mov
ds
pop
adc
sahf
jg
inc
pop
clc
lret
sbb
jb
xchg
jge
incb
adc
pop
dec
scas
jp
adc
cld
or
fcmovnu
scas
mov
mov
and
cmp
dec
imul
aas
repnz
iret
lret
add
inc
mov
mov
sub
notb
ss
sbb
pop
jns
fistpll
inc
dec
int3
dec
dec
xor
dec
popf
pxor
add
pushl
mov
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
lcall
insl
xor
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
ret
out
fcoml
cmpsl
xor
ds
dec
mov
lods
jg
pop
xchg
fcoms
mov
iret
adc
or
enter
icebp
pop
pop
repnz
incl
sub
lret
es
mov
flds
sbb
ljmp
fwait
or
leave
ljmp
pop
dec
test
or
push
push
mov
outsb
jbe
dec
add
and
mov
decl
ljmp
push
into
mov
dec
pop
sub
xor
xor
dec
pop
or
push
and
xor
adc
sub
xor
sub
bndldx
push
fistpl
pushl
adc
xor
daa
sbb
xor
xor
dec
pop
inc
adc
jno
jle
in
pop
mov
add
add
xchg
add
adc
and
dec
or
pop
add
in
mov
xor
outsb
pop
and
pop
pop
push
or
cmp
fucomip
insl
cmp
sbb
inc
add
push
and
lods
and
in
fucomi
pop
ds
cmovnp
sub
and
cmp
adc
jnp
mov
sub
push
sbb
pop
or
and
push
pop
xor
mov
jmp
sbb
or
cmp
inc
dec
push
push
dec
push
stc
ljmp
or
push
push
cmp
or
push
dec
sub
jge
popa
inc
push
test
add
pop
neg
mov
inc
pop
push
xor
or
aas
leave
xlat
add
xor
add
addb
dec
lea
push
adc
cmpsb
add
mov
cmp
pop
and
cmp
fsts
repnz
inc
cmp
sbbb
xor
jo
mov
cmp
dec
dec
pop
xor
xlat
int3
movaps
outsl
pop
cmp
mov
xor
pop
push
and
sub
or
js
sub
mov
xor
push
inc
push
test
arpl
cmp
es
jmp
jae
out
ljmp
dec
pop
push
xor
xor
add
decb
cmp
sbb
mov
jl
sub
cmp
push
daa
and
fbld
ja
pop
adc
cld
pop
daa
adc
daa
movsl
daa
inc
jnp
xadd
mov
push
adc
dec
cwtl
in
push
cmp
lock
jns
imul
push
adc
push
xor
mov
inc
push
push
push
xor
mov
cmp
add
jle
out
cmpsl
jbe
push
inc
pusha
xorb
out
jns
push
push
xor
dec
and
add
dec
hlt
xor
or
cwtl
cmp
mov
dec
xor
pop
lock
push
popa
push
and
sub
push
adc
push
popa
test
mov
push
dec
mov
push
cwtl
mov
outsl
push
add
or
push
sahf
push
lock
aaa
jb
push
scas
and
push
mov
filds
loopne
adc
inc
nop
cmp
jns
mov
push
repz
jo
rclb
inc
cs
mov
mov
push
shlb
add
sub
adc
push
mov
imul
scas
add
mov
xlat
pop
add
cmp
ret
push
xor
pop
cmp
inc
inc
popf
stos
ret
aad
xor
or
sti
daa
push
and
push
inc
push
xor
nop
and
jmp
mov
cmc
sahf
pop
fisttpll
pop
and
sbb
sbb
push
or
fsubrs
jmp
jbe
icebp
jecxz
push
dec
add
jb
dec
push
pop
adc
popf
pusha
push
push
insb
push
dec
inc
xchg
arpl
and
cmp
push
fbstp
cwtl
or
pop
pusha
sub
mov
inc
rdtsc
or
xor
xchg
adc
push
dec
in
sub
mov
ret
js
cmp
add
jge
enter
sub
ret
sbb
daa
pop
out
xchg
daa
inc
jecxz
pop
add
daa
scas
jge
fs
pusha
push
int3
cmp
outsb
scas
popa
mov
pop
das
pop
or
xor
mov
pop
rclb
push
sub
out
jl
inc
cmp
mov
sbb
or
push
pusha
sub
insl
mov
sbb
sub
push
inc
sbb
gs
pop
das
push
cmp
pop
in
and
daa
push
xchg
iret
cmp
call
adc
mov
sub
out
fidivrs
sub
or
daa
xor
and
xchg
ret
popf
jbe
pop
daa
xor
rcll
fdivrl
adc
push
jle
mov
scas
sub
xor
sub
xchg
sub
loope
in
inc
xor
mov
or
loop
or
mov
sub
testb
and
sub
xor
sbb
sub
dec
pop
or
and
xorb
ja
adc
cmpsl
inc
icebp
mov
in
out
or
pusha
addr16
push
mov
mov
xor
pop
dec
out
scas
and
adc
cltd
into
test
adc
xor
scas
stos
inc
cli
in
sub
js
or
das
pop
and
push
sbb
daa
xor
mov
dec
cmp
lcall
es
dec
mov
mov
push
cs
lahf
jne
xor
repnz
in
daa
ret
je
sti
add
daa
cmp
push
dec
aas
dec
ja
inc
adc
and
jbe
xchg
cmovp
mov
mov
add
push
mov
or
shl
gs
pop
shlb
cs
lds
mov
and
clc
or
adc
sbb
rcrb
mov
test
addr16
dec
pop
lcall
pop
pusha
pop
push
pop
xor
adc
xor
push
pop
addl
addr16
jmp
shll
adc
into
push
adc
pop
xor
daa
ja
cmp
lods
dec
daa
mov
pop
sbb
jbe
cmpsb
data16
pop
mov
sub
push
push
dec
dec
push
add
sub
jmp
aas
push
das
das
and
or
scas
inc
jno
daa
push
and
call
repz
or
or
mov
mov
push
sub
jns
popa
jne
push
pop
mov
ja
and
loop
popa
fldt
add
dec
decl
sbb
sub
xor
jo
or
inc
push
inc
or
or
enter
or
and
popf
push
or
push
xor
push
call
or
pop
pop
push
and
push
mov
mov
pop
ss
jmp
andl
paddd
xorl
adc
add
xor
push
cmp
popa
mov
out
and
pusha
xor
sbb
pop
mov
int
jae
imul
jns
adc
lock
test
cmp
sub
sbb
ds
xchg
pusha
mov
push
daa
adc
mov
cmc
aas
rol
pop
jecxz
insb
outsl
jb
bound
fdivr
orl
je
or
fidivl
and
jae
popa
sbb
fsubrs
pop
je
aas
cs
mov
das
ljmp
scas
xor
add
orl
cltd
push
adc
mov
and
outsb
loopne
adc
push
xor
push
ret
in
mov
inc
add
xor
sbb
lods
pop
icebp
outsl
call
stos
pop
sbb
dec
push
pop
pop
sbb
adc
daa
or
xor
push
push
movsl
or
push
inc
enter
mov
sbb
and
pop
sahf
and
push
addr16
sbb
incl
dec
push
mov
aam
fs
lods
xor
cmp
jnp
inc
fwait
jle
xor
ds
adc
jo
push
xor
ficoml
jno
and
xor
inc
add
daa
pop
popa
popa
or
daa
and
mov
jle
push
lret
push
add
adc
inc
add
sbb
adc
dec
jo
xchg
popa
sub
mov
mov
add
jae
and
push
and
xchg
add
mov
or
mov
mov
mov
test
sbb
loop
add
lcall
xor
pop
push
testl
xor
sahf
cmp
add
cwtl
jmp
pop
dec
and
push
setg
andb
xchg
xor
sub
push
sbb
push
and
or
push
clc
test
js
adc
repz
jno
and
fcomip
ss
add
repz
cmc
notb
scas
xlat
popf
in
push
clc
cs
pop
std
daa
pop
adcb
push
in
mov
push
das
mov
jae
pop
lock
cmp
jo
push
repnz
dec
push
cmp
call
cmp
enter
mov
xor
sbb
stc
cmp
rcrb
xor
out
and
ret
inc
or
addb
outsl
pusha
es
mov
inc
pop
jl
pop
ss
out
ja
test
sub
jl
dec
push
jg
adc
adc
pop
xchg
dec
push
mov
xlat
adc
xchg
and
inc
adc
data16
loopne
inc
sub
adc
sbb
les
cmp
daa
dec
ds
es
daa
movsl
test
xor
inc
je
cmp
and
test
insb
sub
cmpsl
cwtl
xor
cmp
lret
in
movsl
push
ja
sub
cmp
in
and
inc
daa
pop
cmp
or
cmp
mov
sub
mov
sub
ret
xchg
inc
ficompl
sub
mov
rcll
lahf
push
xor
shlb
sbb
add
add
mov
sub
adc
ss
push
out
pop
cmp
fstps
and
pop
lods
js
jne
adc
enter
scas
pushf
add
xor
sbb
cli
xchg
pop
sbb
dec
sub
push
fldcw
add
and
and
sub
add
mov
or
mov
lret
js
adc
mov
sbb
push
mov
sub
shlb
push
xor
push
adc
push
push
add
inc
and
or
call
sub
and
es
push
fsubl
mov
push
or
mov
dec
inc
push
or
int3
sbb
cs
push
add
push
loope
shlb
and
lods
xor
push
loop
mov
das
pop
add
cmpsb
cmpsb
add
sub
hlt
lds
inc
jns
into
or
inc
cmp
outsl
in
jge
xor
sti
mov
and
and
adc
and
mov
inc
and
cmp
push
adcl
cmp
mov
popf
jbe
fldl2e
push
xchg
fdivs
xor
adcl
mov
sbb
pop
imul
and
lock
in
pop
sub
testb
sbb
and
mov
es
sbb
test
pop
xor
mov
sub
movsl
xor
adc
fst
pop
ss
sbb
adc
es
mov
mov
imul
cmp
sbb
out
adc
fcomi
push
dec
fwait
aad
mov
and
push
jae
or
xchg
daa
mov
sub
shlb
das
call
mov
pop
pop
repz
jmp
xorl
cwtl
and
sbb
dec
es
jmp
mov
mov
sub
dec
jo
je
lods
or
test
decb
pop
loop
cmp
inc
or
inc
adc
push
mov
pop
push
fidivs
jg
or
lahf
push
mov
add
ja
sbb
testb
inc
ret
nop
imul
shlb
lods
adc
rorb
adc
pop
pop
xor
mov
cmp
ja
sbb
enter
cmpsl
pop
push
js
cld
push
push
pop
push
dec
and
sbb
sarb
cmc
jbe
repz
daa
pop
xor
add
sbb
pop
mov
and
daa
ds
ss
int3
int3
pop
push
sub
cmp
psubd
or
mov
pop
push
push
and
or
sbb
push
or
xor
cmp
sbb
insb
int
ret
lcall
icebp
jmp
add
aaa
mov
xchg
add
or
inc
mov
imul
es
sub
sub
aam
add
ja
shrb
imul
and
aas
addb
outsl
jb
jp
and
out
xchg
bound
add
push
push
cmp
popa
jo
cmp
push
mov
inc
outsl
insl
sbb
jb
outsb
pop
adc
pop
sub
mov
cmpsl
idivl
dec
repz
add
mov
push
mov
mov
push
pusha
shll
ds
fldcw
into
ss
rcl
push
nop
mov
shl
loopne
dec
adc
data16
cmp
jbe
jmp
testb
push
mov
addr16
push
dec
dec
or
ds
shlb
mov
mov
jmp
call
jg
push
and
mov
add
adc
mov
mov
mov
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
adc
mov
lahf
in
cld
test
cmp
mov
cld
std
mov
sbb
mov
ds
pop
sbb
test
xchg
jle
jo
fsubs
xor
test
xor
jmp
enter
push
loopne
shl
dec
push
cmp
pop
pop
in
bound
adc
adc
std
test
xor
aaa
aaa
enter
cmp
rclb
and
xchg
imul
dec
sbb
or
imul
inc
jb
or
mov
imul
adc
leave
jae
fcoms
enter
repnz
or
xchg
out
dec
mov
pop
js
cmp
sahf
push
daa
iret
mov
pop
cmp
sub
orl
cmp
mov
insb
inc
js
add
test
add
push
and
jbe
pop
int3
repnz
stos
test
push
push
decl
cmp
xor
xor
sub
xlat
testb
sbb
sub
inc
push
xor
push
sbb
out
fildll
adc
add
push
add
mov
outsb
jecxz
cmp
js
push
dec
cmpb
je
scas
or
jp
aad
cmpsb
sbb
jb
jo
pop
loopne
imul
jne
cmp
popa
outsb
mov
cmpps
adc
mov
sub
sti
and
or
adc
inc
out
and
add
adc
xchg
or
aaa
inc
pop
loop
push
das
ret
mov
imul
das
fistpl
fisttpll
or
add
add
mov
inc
imulb
sbb
sub
iret
shll
xor
xchg
inc
rolb
outsl
loopne
insl
rclb
daa
dec
xchg
and
push
pop
push
xor
daa
add
and
jge
paddusb
jbe
orb
and
or
ja
out
mov
and
inc
pop
xor
pop
jns
ret
dec
sub
sysexit
push
push
dec
es
add
mov
push
add
add
nop
imul
and
add
das
pushf
cmp
arpl
mov
pop
mov
xchg
dec
mov
cld
verr
in
fwait
cmpsb
push
push
arpl
add
pop
jecxz
out
insl
mov
and
loope
pop
bound
test
mov
cmp
int
inc
pop
js
insl
bound
xchg
sti
mov
pop
xchg
push
jle
inc
jle
push
push
push
pop
cmp
inc
fcoml
imulb
pop
nop
mov
pop
mov
xchg
push
push
es
test
ss
fsubs
push
aad
stc
pop
cs
adc
xchg
in
imul
push
cld
mov
outsl
das
push
scas
or
mov
clc
push
cmpsb
cmp
frstor
dec
inc
push
aad
lahf
pop
push
fnstcw
mov
mov
aaa
mov
push
rclb
xor
repz
ja
fiadds
out
test
ret
jns
out
or
pop
stc
xor
sahf
sbb
inc
pop
pop
pop
out
sbb
data16
pusha
push
sahf
push
adc
daa
or
jne
mov
pop
in
pop
divb
out
push
dec
push
pop
lcall
in
mov
sbb
sbb
repz
add
inc
pop
ret
cmpsl
stc
sub
nop
repz
rorb
hlt
inc
test
adc
icebp
jl
clc
pop
mull
xlat
loopne
stc
mov
push
push
inc
push
dec
dec
sti
sahf
repz
ss
push
push
xor
fwait
sbb
fnstsw
dec
sti
sahf
jecxz
push
lret
movsb
inc
add
addr16
add
push
inc
aad
mov
jnp
nop
inc
xorl
fsts
or
iret
repz
iret
in
sbb
lods
repnz
mov
clts
cld
out
icebp
ds
adc
mov
cmpsl
jge
testl
ss
adc
scas
iret
cmp
repz
adc
xor
insb
ds
repz
adc
repz
sarl
jo
cmpsl
mov
push
inc
pop
push
push
ret
repz
lock
inc
mov
or
jg
dec
sbb
mov
scas
shrb
adc
and
and
rcrb
push
push
mov
xor
adc
pop
xchg
add
mov
iret
testb
int
mov
leave
loop
and
push
movsl
jg
mov
mov
je
decb
adc
push
and
pop
sbb
or
sarl
enter
adc
or
adc
cs
mov
daa
or
repnz
add
sub
inc
cmp
test
cltd
pop
out
addr16
outsb
push
ss
sub
lahf
or
push
lret
mov
aaa
daa
inc
sbb
or
sbb
ja
aaa
push
stos
gs
nop
mov
aas
jae
fisubl
jae
push
les
out
add
dec
mov
mov
je
push
ljmp
cmpsb
dec
add
xor
inc
fildll
xchg
stos
pop
push
dec
pop
je
jnp
sti
jns
push
fisttps
jp
and
mov
gs
xchg
push
inc
imul
mov
jno
pop
retw
lock
mov
push
dec
mov
ja
ja
fwait
outsb
or
sub
clc
pop
cmpb
pop
add
xchg
inc
rcrb
out
or
divl
ss
adc
xor
enter
jo
jle
outsb
xlat
es
insb
je
push
addr16
jo
jae
out
push
and
jno
outsl
and
aas
cmpb
sub
insl
cmp
or
cmpsb
mov
push
testl
xor
xor
xor
xor
xor
outsl
imul
cmp
cmp
push
xor
xor
cmp
push
add
sbb
jbe
int
and
das
or
push
sti
mov
add
push
and
sbb
loopne
inc
pushf
push
pop
push
or
add
andb
add
bound
lock
notb
adc
xor
push
push
sub
adc
adc
pop
xchg
mov
int
xor
push
xor
inc
or
add
adc
out
addps
jmp
pop
stos
adc
sub
scas
aas
cmpb
ja
negb
pop
pop
adc
mov
in
cmp
and
subl
inc
lock
push
push
xor
mov
cmp
push
xchg
xor
pop
mov
cmc
data16
jbe
data16
cs
xchg
xor
xor
ret
and
sbb
xor
dec
inc
adc
cmp
inc
mov
daa
inc
jae
xchg
inc
xor
or
push
outsb
or
push
ja
push
inc
and
pop
jo
shrl
les
dec
dec
pop
ret
das
insb
or
push
mov
xor
and
sbb
xor
jbe
jno
xchg
and
aad
inc
inc
inc
lret
adc
dec
call
sub
pop
fsubrs
loop
cmp
dec
push
ret
jbe
das
cmp
aaa
in
xor
push
mov
aaa
lahf
xor
rcr
ljmp
daa
and
mov
xorb
das
stos
out
xchg
push
xor
fisubrl
mov
lods
ss
iret
popa
inc
jl
push
or
adc
pop
ret
bound
dec
insl
daa
insl
push
insb
mov
add
xchg
and
das
dec
xchg
cmpsl
sbb
adc
pop
pop
pop
or
pop
add
sbbl
fldcw
loope
or
or
mov
insl
add
fimuls
fidivs
sbb
lods
mov
pop
int
push
and
adc
pop
add
lock
mov
cmc
push
filds
jbe
ficoms
mov
pop
and
adc
mov
shll
aaa
mov
sbb
mov
pop
movsb
adc
mov
inc
inc
scas
stos
adc
inc
and
xor
inc
jmp
adc
add
dec
daa
les
loopne
iret
pop
cmp
mov
and
or
and
fsubrl
scas
insb
xchg
leave
mov
outsb
mov
pop
xor
aad
dec
ss
add
and
sbb
lea
in
sub
lret
sub
aas
adc
sub
sbb
es
pop
inc
inc
pop
push
das
das
lods
jo
pusha
xchg
das
das
sbb
dec
in
sbb
adc
inc
mov
jbe
adc
lahf
movsb
adc
and
pop
and
fsubl
adc
das
push
in
mov
jp
es
adc
out
test
sub
fs
data16
imul
pop
mov
adc
jns
mov
adc
pop
or
pop
push
add
add
dec
test
inc
or
adc
push
jmp
das
pop
daa
mov
daa
repz
push
push
or
inc
cmp
xchg
es
xchg
sub
les
jne
sub
setle
mov
or
bound
push
and
push
xor
push
adc
cmp
dec
sub
mov
daa
loopne
shr
xadd
out
push
or
sbb
fwait
loopne
add
aas
adc
add
es
fidivl
pusha
imul
cmp
fs
cmp
add
pop
push
insb
mov
push
js
xorb
cmp
mov
sti
xlat
enter
pop
adc
push
push
cmp
xchg
shr
into
or
xchg
mov
and
pop
inc
test
jnp
mov
lock
mov
sub
add
sbbb
xor
pop
es
sbb
fsubrs
imul
push
cmp
inc
cld
int3
xorl
ja
adc
orb
lcall
fisubl
inc
pop
xor
lahf
inc
lret
xor
add
mov
pushf
xchg
mov
pop
inc
mov
inc
dec
mov
dec
pop
fcoms
push
jnp
aas
es
das
daa
mov
sbb
pop
loope
push
loop
and
and
adc
mov
pop
std
or
and
cmp
nop
jg
cmp
sbb
pop
out
das
push
sbb
popa
pusha
lcall
daa
xor
xchg
adc
adc
xchg
outsl
bound
sub
pop
mov
push
dec
in
daa
scas
xchg
jo
ja
jg
repz
repz
pop
sbb
repz
inc
push
andl
imul
or
xchg
add
add
add
int
add
or
adc
adc
in
cmp
ja
sub
xor
inc
mov
push
mov
mov
mov
insb
fistpll
popa
xchg
sbb
fwait
int
ret
sub
add
or
out
insb
push
adc
pop
add
ss
adc
push
push
dec
ltr
mov
and
das
rolb
xor
cld
out
lock
dec
rcpps
imul
stos
mov
and
ficoms
xor
push
test
mov
mov
inc
pop
shrb
call
jb
jo
xchg
jo
dec
pop
inc
push
cmp
imul
xor
xor
add
pop
cmpl
mov
jge
sub
adc
push
cmpb
adc
sbb
push
pop
sbb
push
and
inc
inc
push
cmp
ss
call
xor
pop
push
or
cvttps2pi
push
push
xor
push
inc
or
pop
and
lcall
dec
dec
pop
or
adc
sub
cmp
cmp
pop
adc
or
dec
sub
sub
xor
lret
incl
xor
push
and
mov
pop
adc
mov
push
dec
push
or
sub
inc
push
pop
xor
cmp
sub
adc
inc
dec
pop
inc
push
push
adc
xor
push
or
push
or
es
sub
inc
or
and
xor
and
test
ret
mov
dec
js
sbb
pop
cmp
pop
mov
pop
push
das
cwtl
pusha
scas
xchg
or
cmp
inc
mov
dec
push
cmp
sbb
pusha
imul
cmc
push
xor
mull
inc
adc
loope
in
xor
add
pop
shrb
and
adc
repz
cmp
or
push
jecxz
xor
movsb
nop
dec
imul
clc
push
push
outsl
inc
int
sub
inc
mov
rcll
sbb
popa
mov
cwtl
pop
bound
add
aam
xor
and
dec
xchg
dec
cmp
sahf
data16
jg
pop
push
push
das
or
push
push
inc
push
dec
inc
dec
push
dec
testl
jle
fst
xorb
cwtl
das
mov
inc
aaa
jno
jmp
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
ljmp
test
and
jge
push
je
mov
andb
fcompl
shrl
xchg
out
popf
rorl
lcall
and
sub
sub
fsubrl
stc
jbe
push
ds
insl
xor
incl
pop
mov
inc
xchg
cmpsl
aad
arpl
push
addr16
adc
or
lcall
ljmp
cld
insl
sub
adc
or
or
leave
ret
sub
xchg
mov
mov
test
mov
mov
call
cltd
test
push
push
sar
cld
jmp
dec
ja
daa
mov
mov
mov
cmp
fmuls
lret
scas
lcall
out
orb
js
test
add
mov
mov
ljmp
mull
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
ljmp
fwait
stos
flds
pop
insl
aam
mov
mov
aaa
sub
pop
and
aas
dec
jo
add
inc
and
jae
es
je
imul
sub
jnp
mov
and
insl
ss
or
pop
adc
dec
jne
inc
push
sub
and
hlt
ljmp
jbe
sub
aaa
ja
inc
or
dec
jns
xor
dec
gs
out
or
push
imul
xor
pop
in
sub
sbb
adc
dec
cmp
pop
cmpsb
aaa
mov
pop
pusha
push
dec
push
or
cmp
pop
push
adcb
pop
ja
aas
jmp
mov
pop
daa
ljmp
pop
push
push
push
cmp
lock
and
mov
or
dec
out
test
aam
pop
sahf
and
aaa
jns
xor
pop
xor
xor
xor
xor
xlat
pop
inc
xor
and
aaa
inc
push
inc
cs
flds
inc
ss
cmovb
pop
or
mov
pop
lahf
dec
sbb
inc
pusha
and
push
cmp
jl
push
andb
push
outsb
inc
and
in
sahf
pop
jmp
mov
mov
xchg
cmp
mov
scas
bound
scas
iret
cmp
xor
push
mul
jno,pn
fnstsw
fldt
adc
cwtl
pop
jae
roll
enter
cs
pop
dec
mov
dec
mov
mov
comiss
daa
and
cmpb
mov
xchg
mov
adc
sub
addl
cmp
sbb
pop
inc
loopne
xor
xorl
xor
jp
sub
pop
mov
inc
dec
push
adc
ret
or
adc
sbb
sahf
xor
sbb
sbb
stos
fadds
xor
shlb
test
sub
mov
gs
sub
dec
pop
inc
and
xor
add
or
cmp
scas
idivb
jmp
gs
in
mov
pop
mov
pop
jmp
push
pop
pop
sbb
and
push
add
sbb
xchg
jbe
add
mov
add
mov
add
adc
adc
rclb
neg
sbb
push
mov
ret
pop
cmp
aas
mov
aas
mov
jmp
xor
or
push
inc
popa
icebp
adc
add
out
adcl
outsl
das
sahf
in
or
push
fcoml
test
push
sub
lds
or
cmpxchg
jnp
fisttpll
or
sub
or
fldcw
je
xor
xor
xor
js
xor
jae
jbe
ficomps
insl
gs
cmp
push
mov
icebp
into
adc
jo
and
push
inc
aad
sub
idiv
xor
insl
cmp
aad
loop
cmp
mov
push
outsl
insb
sub
push
popa
je
jecxz
sbb
and
insl
xlat
push
push
xor
mov
dec
push
pop
adc
cmp
or
sarb
gs
pop
pop
adc
jmp
or
sub
imul
sbb
or
sub
ficomps
xor
and
push
daa
rolb
daa
ss
fsubrs
aaa
and
pop
mov
cmp
push
out
divb
adc
cmp
xor
cmp
rcrb
pop
inc
jnp
inc
or
stos
push
ds
sbbl
gs
mov
ds
jo
xchg
sbb
cmp
jae
push
push
pop
pop
fisubrl
adcb
add
cmp
and
push
mov
and
fadds
fs
dec
popa
cli
push
sub
push
data16
jb
pop
cld
adc
or
pop
jge
pop
inc
jne
xchg
adcl
sbb
xor
cmp
dec
fistl
dec
das
test
and
push
push
or
test
ds
daa
push
cmp
xchg
das
inc
das
push
pop
pop
pushf
push
xchg
mov
call
pop
daa
inc
enter
xchg
mov
mov
jae
fs
jo
outsl
or
movsl
push
mov
cs
push
outsl
imul
mov
out
popl
pop
and
xlat
xchg
lcall
cmp
out
fs
mov
xor
add
dec
mov
das
scas
xor
arpl
mov
dec
jne
mov
inc
and
jp
popa
xchg
mov
inc
pop
adc
jbe
ljmp
int3
mov
shrb
dec
or
in
jnp
push
push
pushf
in
xchg
call
daa
push
mov
pop
sbb
jne
pop
xchg
xor
add
and
movsb
cltd
add
scas
pop
mov
popf
sahf
add
sbb
cmp
inc
and
rorb
dec
or
dec
adc
das
add
pop
xchg
dec
in
divl
jb
mov
scas
mov
add
lods
mov
pop
pop
pop
pop
pop
push
xchg
mov
dec
mov
dec
outsl
mov
mov
movsl
mov
cmpsb
outsl
dec
insl
repz
push
test
add
test
shll
xor
test
jno
pop
std
xor
mov
and
cmpsl
and
push
sub
inc
jge
roll
pusha
rorb
cmp
xor
pop
mov
cmp
add
sub
inc
dec
orb
insl
jnp
out
inc
and
inc
add
or
add
gs
jns
cmp
sub
daa
aaa
sub
push
jne
or
sub
insl
sub
mov
dec
outsb
mov
jae
push
popa
or
dec
outsl
and
leave
xor
ds
push
ror
addb
imul
dec
outsb
push
je
scas
pop
add
imul
ret
push
push
inc
dec
push
inc
pop
push
sbb
push
pop
xchg
cmp
cmpsb
cwtl
dec
xlat
jb
gs
leave
ljmp
das
add
pop
daa
dec
xchg
jne
sbbl
jb
push
popa
mov
roll
jb
mov
lahf
push
lcall
loop
mov
jb
cmpsl
adc
adc
add
jg
mov
mov
xchg
or
push
xchg
sub
pop
and
push
jb
fs
pushf
pop
push
adc
push
test
pop
jbe
inc
add
xor
enter
or
femms
lea
push
psadbw
push
iret
cmp
jo
inc
les
add
adc
divl
add
es
jns
add
pop
jae
cmpsl
pop
dec
ja
or
mov
cmp
cmp
clc
sbb
in
add
dec
or
or
adc
inc
sub
pop
or
xchg
inc
rolb
pop
cmp
or
xchg
pop
xchg
out
xor
add
rclb
jmp
and
dec
dec
insb
xor
cmc
dec
add
sbb
cmp
dec
xor
mov
adc
dec
iret
loopne
cmpsl
push
inc
jns
cmp
inc
fidivl
inc
loope
xor
jns
inc
loopne
cmpsl
jne
dec
mov
jno
out
and
push
cmp
push
add
dec
inc
adc
add
cmpsl
jo
ficoml
imul
xor
pop
inc
cmp
mov
stos
mov
dec
add
xor
push
insl
xchg
mov
xlat
ss
sub
aas
scas
daa
mov
push
lds
insl
or
dec
pop
push
sub
mov
push
in
jne
je
sub
lcall
and
push
push
das
xor
xor
dec
and
jecxz
inc
je
adc
fisubrs
sub
fsubs
push
mov
addr16
inc
outsw
insl
pop
xor
mov
and
xor
push
mov
push
push
push
inc
dec
dec
dec
inc
mov
outsb
aas
pop
mov
imul
andb
rolb
cmp
xorb
pop
push
adc
fldt
push
in
mov
sti
sbb
sub
int
push
cmp
dec
mov
ret
mov
xchg
dec
inc
xadd
fwait
enter
inc
lahf
mov
bound
sub
inc
aas
jge
ljmp
mov
imul
inc
mov
or
push
lods
inc
inc
lahf
idivb
add
add
out
inc
push
mov
nop
mov
adc
adc
leave
or
fistpl
jbe
inc
inc
pop
cmp
aas
jbe
addr16
add
lds
addr16
imul
dec
and
daa
add
dec
sahf
xchg
negl
rclb
mov
iret
or
mov
insb
cmp
inc
lahf
add
jnp
movb
cmp
aas
out
stc
jbe
addr16
outsl
pusha
sbb
xchg
pop
leave
dec
inc
inc
pop
leave
xchg
pop
cmp
xchg
pop
leave
xchg
sub
ret
leave
and
add
daa
push
mov
or
stc
mov
push
add
mov
cwtl
or
aam
adc
hlt
dec
cmp
out
mov
jo
lcall
enter
fsubp
sbb
dec
ds
dec
dec
jns
out
dec
push
je
cmp
icebp
ds
repz
dec
sub
inc
out
mov
imul
aas
add
push
cmp
in
out
mov
pop
xchg
add
and
sbb
in
repz
movsb
add
out
cmpsb
pop
dec
add
add
pop
cmp
push
mov
adc
cwtl
pop
scas
xchg
sbb
inc
mov
jbe
mov
ja
mov
push
in
hlt
ja
and
in
in
xchg
mov
pop
inc
enter
test
dec
shll
push
lods
dec
dec
outsl
add
xchg
filds
daa
in
pushf
inc
add
dec
das
nop
dec
ss
in
dec
int3
pop
leave
and
add
outsl
cmp
jns
test
and
add
jo
lds
lods
rorl
scas
add
fsubrs
in
cs
xor
in
nop
dec
test
es
push
dec
fs
lods
push
xchg
or
shll
add
or
and
xor
push
jno
mov
dec
repnz
dec
dec
outsl
add
mov
fildll
and
sub
push
rolb
dec
dec
loopne
test
sbb
mov
dec
aam
push
nop
popa
sub
rclb
add
jne
sbb
pop
leave
adc
out
sbb
jbe
dec
ja
xchg
in
pop
jb
sub
sbb
xlat
cs
dec
repnz
dec
outsl
add
and
outsl
and
rol
test
sbb
and
outsl
and
push
mov
mov
pop
scas
add
insb
and
xlat
add
xchg
nop
cmpsl
cmpsl
fdivs
sbb
dec
xlat
xlat
or
pusha
cmpsl
and
push
aaa
dec
sahf
or
ds
daa
pop
in
sbb
push
dec
sbb
push
insb
daa
add
adc
outsb
es
fst
pop
mov
lahf
mov
push
xchg
mov
call
xor
jg
push
xor
mov
xor
add
xchg
or
mov
pop
sbb
dec
ficoms
loop
inc
icebp
faddp
sbb
inc
fidivs
ja
sbb
rclb
xor
push
jmp
push
outsl
jg
aad
pop
pop
pop
and
daa
pop
mov
jle
add
cmp
sbb
push
je
pop
scas
push
scas
fidivrs
push
or
push
out
or
pop
mov
or
mov
pop
pop
add
and
fcoml
push
lahf
daa
push
sbb
and
fwait
mov
add
lock
addr16
enter
adc
adc
inc
push
lahf
push
pushf
and
insb
and
lods
push
pop
adc
inc
cmp
and
outsl
and
jae
outsl
mov
add
js
pusha
push
scas
jo
roll
push
aaa
mov
pusha
pop
leave
add
mov
mov
and
add
fadd
aaa
in
outsl
add
and
push
inc
and
inc
push
out
xchg
pop
leave
mov
xchg
je
iret
add
xor
pop
lods
pop
jb
mov
xchg
stos
sbb
fs
push
packuswb
add
xor
das
and
xor
push
outsb
rorb
dec
sub
inc
sub
push
mov
mov
jo
das
outsl
lods
in
leave
add
cmp
and
push
pop
test
jecxz
push
ss
cmp
sbb
and
add
in
andl
cmpsb
jo
ret
dec
cs
pushf
mov
popa
imul
popa
roll
cltd
insl
daa
and
sub
daa
or
add
mov
push
mov
push
dec
sti
aam
push
mov
sbb
mov
mov
test
lahf
push
cmpsl
xchg
pop
mov
or
or
or
push
insb
dec
xchg
dec
add
push
pop
outsl
jb
push
xor
pop
or
dec
leave
adc
fbstp
xchg
cmp
xchg
cltd
and
adc
popl
xchg
mov
lock
dec
xbegin
mov
popa
adcl
add
cmp
out
mov
dec
scas
lock
fcomp
inc
out
lahf
addr16
mov
or
sub
and
test
or
push
jb
add
aaa
xor
cmove
test
push
xor
mov
pop
cmp
adc
fdivs
insb
daa
xor
es
out
hlt
push
mov
xchg
sub
inc
les
cmp
and
and
inc
inc
ja
daa
mov
mov
pop
outsl
jl
xchg
outsl
scas
mov
ucomiss
pop
or
push
pop
das
sub
cs
lock
sub
mov
andl
lds
mov
ffreep
mov
pop
pop
pusha
push
insb
pop
insl
shl
xchg
inc
xchg
insl
jo
outsb
push
hlt
aam
xor
add
shrl
inc
mov
sahf
out
lcall
cmp
repz
push
push
xor
jl
negl
push
mov
cmpsl
stc
cmp
add
push
cmp
sarl
push
movsb
lret
sahf
cmpsl
stc
cmp
div
cmp
repz
ja
mov
fiadds
pop
inc
mov
or
int3
adc
out
lcall
pusha
cmp
repz
outsb
mov
cmp
test
jecxz
cmp
repz
bound
mov
out
arpl
mov
int
fs
mov
jns
cmp
sbb
lcall
inc
addr16
cmp
out
mov
mov
out
push
imul
repz
mov
insb
jge
iret
rol
imulb
iret
sarl
push
call
loope
repz
jno
sub
push
js
into
push
jae
out
xor
lret
add
ds
repz
push
jne
roll
jns
out
inc
gs
ret
cld
out
ds
repz
js
push
jbe
fidivrs
jns
push
jp
push
lock
sahf
out
movsl
add
mov
cmp
jg
enter
int
movsb
jle
jg
jnp
mov
sahf
out
sbbb
xorl
repz
inc
subl
out
mov
push
test
out
ds
js
addb
int
xchg
xor
ja
repz
mov
shlb
jl
out
jmp
push
mov
iret
roll
add
out
orb
iret
shrl
xor
fcoml
int
jns
xchg
jb
shlb
xchg
pop
sahf
cmpsl
stc
cmp
xor
sarl
cmp
add
jns
mov
xchg
xchg
aas
lcall
out
fwait
rcrb
pushf
push
sahf
test
iret
sarl
shl
mov
jns
mov
clc
sbb
sarl
mov
adc
outsl
cmp
out
mov
scas
jl
out
stc
xor
ja
dec
stos
jns
iret
rcll
jl
cmp
out
adc
out
jl
mov
mov
rorb
mov
adc
insb
ss
mov
mov
mov
mov
dec
mov
mov
mov
in
add
out
aam
enter
pop
push
stc
inc
aas
iret
es
pop
shlb
int3
pop
fidivrl
ds
out
sti
sahf
dec
dec
and
jnp
inc
iret
pop
xchg
or
pop
bound
push
mov
push
out
or
les
inc
mov
fbstp
xchg
adc
popf
fdivrs
mov
or
rcll
imul
das
fadds
push
aas
int3
jg
daa
xchg
pop
mov
fsubs
inc
pop
jg
dec
and
mov
fistpll
mov
jl
mov
inc
mov
inc
shl
pop
xchg
xchg
mov
in
push
xchg
aas
int
mov
mov
push
iret
rcr
or
popf
mov
xor
das
cltd
mov
push
enter
mov
sub
fnstsw
cmpsl
nop
sbb
insb
in
ret
jbe
insl
ss
pushl
divl
push
idivl
enter
pop
sbb
mov
loop
pop
scas
adc
and
jne
push
push
inc
dec
mov
aas
loop
mov
bound
pop
xchg
fimuls
js
insb
sbb
jo
mov
nop
push
push
add
cmpsl
cmpsl
ret
int3
inc
xchg
out
pop
xor
pop
aam
xor
into
clc
jg
pop
pop
mov
dec
in
scas
lods
incb
daa
jns
sub
sbb
cmp
imul
fsubrp
repnz
out
in
and
out
movsb
xchg
push
jno
in
scas
inc
mov
ret
push
inc
xchg
xchg
push
sbb
adc
and
sub
push
out
push
add
pop
mov
xchg
pop
cmp
cmp
jl
jae
dec
xchg
push
add
xchg
xchg
push
scas
mov
xchg
cmp
push
inc
scas
and
in
sub
push
imul
imul
lods
pushf
mov
or
hlt
imul
and
les
push
daa
inc
scas
cwtl
pop
cmp
cwtl
and
mov
push
and
dec
daa
mov
xchg
push
pop
sbb
mov
outsl
push
cmc
inc
add
sbb
dec
sahf
xchg
imul
imul
dec
mov
xor
mov
imul
les
dec
add
and
add
adc
xchg
xchg
and
sub
push
inc
push
cmp
repz
add
add
insl
push
js
or
mov
aaa
or
and
in
mov
adc
mov
sahf
inc
dec
ret
sub
insl
in
pushf
dec
and
cmc
cmp
ss
push
mov
pop
cmpsl
js
mov
dec
pop
cmp
xchg
and
xchg
jb
jb
test
ja
cmpsb
add
leave
out
adc
fisubs
daa
daa
daa
out
idiv
xchg
pop
leave
and
jb
enter
pop
cmp
pop
pop
and
sbb
pop
mov
out
pcmpeqb
mov
out
mov
mov
or
and
adc
and
pop
xchg
xor
pop
cvtps2pi
dec
sahf
fnstenv
gs
daa
push
negl
xchg
xchg
cmp
inc
dec
jo
jo
xor
push
push
mov
mov
inc
pop
sbbl
push
jo
lock
cmp
test
jno
xchg
pushf
jbe
pop
mov
fdivrl
ja
jl
cmp
daa
dec
imul
xchg
xchg
mov
fwait
dec
pop
xor
xchg
pop
cmp
stc
pop
jns
dec
and
js
daa
push
xor
es
cs
and
leave
xchg
pop
ds
enter
leave
insl
imul
and
test
adc
lea
inc
pop
push
jb
push
jae
mov
fcomps
mov
pop
stc
pop
add
minps
mov
and
cmp
repz
inc
or
repz
repz
or
repz
adc
repz
sahf
adc
mov
shl
iret
pop
jecxz
icebp
sbb
pop
fistps
mov
andb
push
jb
pop
xor
nop
ficompl
les
push
enter
pop
aad
inc
add
jae
and
iret
pop
out
aaa
ficoms
popf
fwait
daa
push
inc
dec
and
cld
pop
rcr
cmpsb
and
cmpsl
or
out
cmp
add
lds
add
popf
ja
push
les
pop
aad
pop
pushl
ja
xchg
imul
add
add
add
add
xchg
xchg
pop
and
add
jne
and
cmp
pusha
xor
dec
dec
rclb
cld
pop
je
bound
daa
test
std
push
int3
mov
fsubl
xchg
adc
xchg
pusha
daa
rorb
xchg
popa
jns
xchg
and
popa
sbb
and
add
mov
out
jmp
pop
je
out
xchg
pusha
push
add
sub
dec
mov
inc
das
ret
popa
push
jmp
inc
jns
sub
push
push
leave
adcl
pop
and
cmp
lahf
je
incb
bound
xlat
sbb
mov
add
jp
in
repnz
adc
bound
jne
ds
inc
pop
dec
orps
daa
iret
enter
add
pop
jle
jp
jp
cmpsl
in
cs
fdivrs
das
nop
fcmovne
scas
call
insl
and
and
push
dec
and
js
and
arpl
dec
ja
arpl
mov
xchg
add
xchg
push
mov
inc
jl
jl
cs
or
mov
stc
mov
cmovbe
fimull
mov
fs
jle
mov
shrd
leave
inc
sbb
daa
outsl
pop
leave
mov
addr16
sti
iret
push
gs
push
jecxz
test
cmp
sbb
jge
xchg
dec
push
and
jns
sbb
andl
xchg
out
jns
lods
xchg
add
loopne,pn
mov
data16
xchg
popf
inc
sbb
leave
and
jle
jle
jg
daa
cmp
mov
jg
xchg
addr16
mov
iret
mov
pop
ret
data16
pop
pop
pop
pop
loop
ljmp
pop
pop
pop
add
adc
addr16
pop
pop
pop
and
xor
leave
leave
dec
mov
pi2fd
leave
leave
leave
leave
or
or
leave
leave
leave
leave
or
push
add
add
add
and
xchg
add
mov
xchg
add
and
fistl
mov
inc
repnz
fcomps
push
repnz
mov
ja
orb
leave
aas
pop
add
fnstsw
lock
cmpsb
scas
push
enter
push
jae
mov
out
push
sub
insl
in
push
sub
sbb
sbb
add
cmp
imul
insb
inc
es
or
inc
imul
push
xlat
dec
dec
mov
dec
or
jns
jns
loope
leave
or
outsb
fnstsw
psllw
rorl
cmovle
out
xor
jbe
ret
and
movsb
fwait
js
movsl
add
pop
mov
rolb
or
popf
loopne
daa
adc
cmp
addr16
icebp
test
adc
das
sbb
repnz
sub
add
cmp
jae
add
or
js
push
push
outsb
pop
leave
test
fmull
test
in
leave
inc
loopne
add
mov
pop
adc
sbb
and
pop
xor
cmp
stc
adc
xchg
out
sbb
add
xchg
lahf
mov
jl
mov
imul
mov
mov
insb
mov
insb
insb
push
mov
movntq
mov
lea
add
jmp
xchg
jb
push
xor
dec
insl
push
insl
iret
in
jbe
pop
pop
popa
punpckhwd
jno
leave
repz
cmp
orl
fistl
xchg
loopne
push
mov
adc
outsb
leave
xchg
and
outsb
outsb
cmp
ss
xchg
jo
out
in
xchg
xchg
mov
mov
mov
outsl
shrb
and
jmp
outsb
mov
inc
fwait
in
adc
push
loopne
jb
push
test
outsl
faddl
pushf
xchg
xchg
leave
inc
repnz
lret
mov
fcmovnbe
ja
mov
xchg
and
adc
jo
addr16
ret
push
pop
inc
jo
dec
jo
es
jo
and
xchg
in
mov
call
jae
jb
xchg
out
lahf
stos
mov
in
mov
lret
jo
jo
lret
push
cmp
jo
in
jo
jo
popf
stos
jp
mov
sbb
xchg
and
xor
jno
jno
jb
enter
jno
jno
jno
loopne
sbb
jno
push
or
xchg
jno
stos
add
or
ud1
iret
loope
xchg
xchg
lock
push
jb
jb
in
pop
outsl
sbb
or
inc
data16
jl
pop
insl
pop
jo
aaa
push
mov
fcoml
mov
out
cmp
or
jmp
cwtl
filds
jae
ja
cmp
jae
jae
pop
outsl
cs
in
sahf
add
add
mov
into
out
jae
xlat
mov
pop
add
repz
addr16
pop
xchg
pop
aad
and
dec
or
sbb
scas
pop
inc
fs
cmpsb
test
push
iret
test
mov
mov
add
jmp
jg
leave
leave
fwait
loop
jne
or
add
jbe
stc
test
das
cmpsl
fwait
cmp
sub
or
ud2
cs
sahf
cmp
dec
jne
loopne
nop
cmp
mov
insl
pop
leave
jae
pop
mov
mov
cmp
addr16
dec
outsb
daa
pop
jmp
pop
test
sub
ljmp
jbe
dec
cs
push
pop
xchg
push
sbb
ja
cs
out
shlb
filds
cld
fisubs
jns
leave
out
xor
pop
ja
pop
ja
ja
jb
cmp
ja
add
pop
mov
addr16
out
sub
cmp
mov
cmp
mov
ja
ja
mov
daa
daa
pop
leave
in
fisubs
pushl
aas
xor
jb
vmread
js
js
or
enter
xchg
dec
js
cmpsl
out
jns
arpl
imul
cs
lods
xchg
sahf
cmpsb
js
jns
sbb
scas
js
js
js
jns
jns
js
js
js
js
jns
jns
js
js
js
js
outsb
fistpll
jns
ud2
pop
or
dec
dec
dec
dec
or
push
add
add
add
jns
out
push
sbb
sbb
out
sahf
out
es
jns
ss
ds
repz
daa
dec
push
and
inc
ds
and
jns
cmp
and
xchg
data16
add
add
aad
iret
imul
leave
mov
ret
decb
jp
add
fs
lahf
push
jp
xlat
and
aas
call
jp
jp
mov
dec
cmpsl
push
cld
xchg
xchg
xchg
mov
cmp
jle
jecxz
repz
push
mov
jp
cmp
fwait
xadd
or
or
lock
jbe
pop
prefetch
or
nop
and
xchg
or
jnp
cs
addr16
ja
hlt
push
in
dec
dec
pop
arpl
outsb
jnp
sahf
aaa
jb
jnp
movb
in
cmpsl
xchg
out
frstor
das
fxch
loope
jb
mov
icebp
stc
sub
aad
popl
inc
ret
xor
jns
or
push
push
cwtl
ret
adcl
addr16
xchg
push
and
xor
inc
popf
sub
leave
repz
jo
add
cmp
test
cmp
jmp
or
testb
in
and
jge
leave
enter
push
jge
pop
jge
add
loope
outsl
ja
out
les
leave
inc
int3
js
inc
xchg
fildl
enter
xchg
popf
call
das
scas
leave
leave
leave
jae
loopne
add
lock
in
push
scas
fidivrs
and
sub
ss
jecxz
fistps
das
pop
jle
sahf
pop
fs
and
sub
jns
out
xor
cmp
sahf
out
cmp
pop
or
jae
jns
insb
pop
je
jl
jae
cmp
test
cmp
xchg
pushf
jle
adc
cmp
jle
sbb
fdivrs
psubsb
mov
jl
pushf
push
jmp
or
add
mov
cltd
cltd
sub
inc
add
popf
xchg
jno
pop
push
daa
pop
pop
rorl
out
add
loopne
dec
bnd
sub
xchg
cmp
mov
cmp
jg
loop
sti
push
add
dec
mov
sbb
mov
adc
das
push
cmp
pop
outsb
in
jae
jle
das
add
aam
push
mov
jmp
aas
rsm
pop
mov
or
nop
out
jne
cmp
lea
inc
and
xchg
mov
jo
push
pop
push
mov
jns
ficomps
push
adc
add
out
pop
sbb
and
fimuls
out
or
cmp
inc
xorl
pop
orl
test
fadds
dec
outsb
xchg
orl
outsb
repnz
sysret
mov
pop
iret
pop
xlat
ds
jns
out
or
or
in
idivl
orb
dec
and
cmp
sbbb
ja
adcb
push
pop
sbbb
addb
popf
mov
sahf
xchg
cmp
out
pop
sahf
ja
cwtl
cs
out
ror
aam
scas
pop
dec
pop
daa
in
xchg
sbb
mov
or
inc
push
cmp
sbb
push
daa
cmp
and
sbb
addl
sbbl
outsb
mov
mov
in
call
mov
add
inc
lahf
xchg
or
add
cmp
ficomps
out
push
ja
xchg
dec
and
or
lcall
sub
rcrl
lahf
push
daa
mov
and
ja
test
test
mov
cmc
bnd
mov
repz
mov
or
iret
repz
or
or
inc
ds
clc
test
cmp
xchg
test
lahf
pushl
test
mov
lods
popa
test
das
mov
and
test
test
test
push
mov
nop
pop
fadds
adc
int
pusha
mov
inc
loop
daa
jo
cmp
xchg
xchg
xchg
inc
mov
xchg
xchg
dec
cmp
lds
push
pop
push
xchg
jecxz
lea
xchg
jb
and
pop
push
ss
push
mov
xchg
mov
aaa
cmpsb
adc
leave
inc
mov
add
adc
jns
and
movaps
nop
icebp
cmp
fwait
dec
mov
mov
sbb
scas
imul
fdivrl
out
fmulp
orl
lods
xchg
xchg
sub
cmp
pop
mov
jnp
cmp
mov
movaps
pop
leave
lods
push
pop
pusha
cmp
shrb
scas
cmpsb
add
leave
inc
repnz
push
lock
leave
leave
leave
leave
cwtl
mov
jns
test
add
leave
leave
leave
inc
rcr
jecxz
mov
mov
outsb
sbb
daa
mov
pop
lsl
mov
add
in
jbe
rcrb
jp
in
jmp
mov
mov
xlat
xchg
add
mov
jb
push
loop
mov
pop
pop
pusha
mov
mov
aas
mov
enter
mov
pusha
mov
jns
cmp
pop
or
in
sahf
xlat
cmpsb
add
jae
pushf
dec
leave
rcrl
movq
dec
mov
mov
loope
loope
push
mov
add
or
daa
xor
jb
adc
cmpsl
sbb
and
xchg
add
aam
dec
push
repz
pop
packuswb
outsl
add
ja
jg
add
xchg
das
loop
push
mov
and
mov
out
pushf
fucom
mov
ja
and
sub
js
xchg
pop
mov
iret
in
xchg
lahf
pop
jno
add
in
mov
add
clc
enter
mov
call
jb
pop
push
lea
pop
lea
daa
iret
cmp
jo
mov
push
mov
dec
mov
xchg
pushf
ret
pop
movsb
lea
fnstcw
sub
repnz
jns
or
mov
or
add
out
sbb
add
lret
lret
dec
dec
sahf
and
lret
lret
xor
dec
dec
jns
ja
adc
push
adc
jns
out
pusha
adc
fwait
iret
js
mov
sbb
test
mov
stos
and
push
daa
aam
pop
je
repnz
xchg
xor
clc
mov
sbb
jb
sbb
sahf
out
sahf
pop
xor
cmp
inc
cmp
repz
dec
push
or
pop
fcmovne
repz
pop
push
pusha
push
sahf
jae
jnp
push
orl
stos
pushl
mov
leave
add
call
subb
in
nop
adc
iret
nop
mov
sub
mov
jg
setp
out
outsb
daa
mov
mov
mov
jns
ret
clts
jns
inc
mov
mov
jns
rclb
ljmp
cli
adc
xchg
mov
cmpsl
cmp
xchg
push
adc
mov
ss
test
mov
push
pop
dec
ja
call
lods
jo
xchg
and
pushf
pop
adcb
rep
mov
xchg
mov
push
or
repz
mov
mov
leave
repz
or
fs
dec
adc
lods
lret
lret
lret
xor
call
xor
setb
in
xchg
cmp
pop
jmp
cs
das
cvtps2pd
or
jne
in
bound
xchg
add
hlt
orb
push
or
jge
mov
adc
or
push
out
xchg
or
push
inc
pushf
mov
lcall
xchg
scas
out
sarb
cmp
ja
add
lock
xchg
out
add
or
loopne
ja
cmovs
push
mov
adcb
xchg
addr16
cmp
fidivrs
xchg
mov
xchg
push
repz
lahf
xchg
lahf
or
add
adc
or
pusha
mov
lahf
cwtl
popf
cmp
mov
dec
push
and
or
pop
xchg
fmull
fidivl
mov
add
add
mov
mov
int3
leave
inc
xor
pop
xchg
clc
xor
js
mov
xchg
out
pop
fs
push
out
push
repnz
add
mov
xchg
fwait
xchg
mov
or
jp
xchg
out
mov
cmp
add
xchg
pop
leave
fsubl
xchg
sub
adc
mov
punpcklbw
xchg
mov
in
xchg
add
outsb
pop
leave
and
jmp
mov
xchg
sub
add
add
in
cmp
pop
push
addr16
out
adc
or
or
jo
out
jb
jp
pushf
cmpsb
xchg
dec
scas
adcb
in
mov
mov
ror
loope
fs
jmp
add
mov
orl
cwtl
pop
ucomiss
daa
daa
daa
daa
push
je
mov
daa
daa
daa
rcr
clc
sbb
xchg
xchg
xchg
cltd
inc
mov
nop
daa
iret
repz
cwtl
sbb
outsb
bswap
push
push
lock
push
and
lcall
repz
and
mov
inc
push
add
xchg
jl
mov
and
lahf
lcall
and
lcall
fcoml
es
mov
sub
repz
add
add
and
enter
cwtl
sbbb
scas
in
popf
pushf
mov
leave
leave
enter
in
cmc
jns
in
leave
std
add
add
out
ss
or
or
push
or
out
jns
or
data16
push
push
iret
enter
pmaxub
adc
and
mov
leave
repz
add
fists
lfence
xchg
xchg
xchg
xchg
pushf
repz
pushf
push
popf
push
xchg
xchg
xchg
xchg
popf
push
popf
and
xchg
xchg
xchg
popf
aas
popf
inc
popf
dec
popf
push
xchg
xchg
xchg
xchg
popf
pop
popf
addr16
outsl
popf
jp
aas
mov
nop
popf
fwait
xchg
xchg
xchg
xchg
popf
cmpsb
popf
mov
mov
out
push
pop
leave
and
and
jns
out
and
and
dec
repz
and
and
jns
out
daa
push
adc
dec
sahf
out
sub
cvttps2pi
inc
cs
dec
sahf
fisttpll
lahf
xor
mov
jns
mov
add
aas
fucom
xchg
push
das
cltd
sahf
mov
sahf
mov
pop
les
fstpl
cmc
fmulp
dec
mov
sgdtl
pop
fdivrp
dec
and
dec
or
sbb
rorb
jg
sahf
lock
lahf
push
add
lahf
cmp
mov
mov
aam
push
mov
pushf
daa
inc
dec
push
popf
cmp
minss
gs
daa
mov
out
adc
jne
daa
rcr
mov
jb
mov
and
jns
dec
sub
pop
cmp
and
iret
jae
mov
xchg
es
repnz
shrl
fninit
in
xchg
iret
sub
mov
daa
cmp
in
das
getsec
push
das
aas
inc
cmp
xchg
out
dec
push
maxps
xor
mov
in
repnz
mov
inc
cmp
xchg
cmp
inc
push
add
pop
stc
ret
jp
mov
int3
inc
cmp
fcmovne
inc
repnz
jo
setns
mov
ja
inc
mov
cmp
loope
iret
lret
insl
mov
add
repz
daa
xor
inc
dec
outsb
daa
iret
add
jae
fucom
jns
jle
or
or
lahf
pop
stos
out
jns
mov
cmp
xchg
ftst
adc
cli
repnz
out
add
push
sbb
cmp
jae
sbb
sbb
cmp
iret
jae
sbb
iret
jae
pop
push
sbbl
pop
xchg
movsl
stc
and
iret
sub
inc
mov
mov
and
jns
adc
addb
popl
dec
sahf
xchg
out
cs
pop
push
mov
pop
push
mov
out
cmpsb
push
iret
rorl
or
femms
cwtl
bswap
xchg
lock
adc
mov
push
adc
cmp
rorl
add
pop
fsubs
loopne
sbb
cmpsb
daa
iret
orl
fiadds
sbb
push
rcrl
inc
sbb
pusha
in
enter
add
out
sbb
sbb
mov
aas
xor
in
cmpsl
cwtl
rcrb
popf
cmp
xchg
add
mov
leave
out
xchg
fmull
daa
mov
mov
inc
repnz
add
xchg
fcomi
paddb
iret
mov
fisubrl
aaa
fcmovne
rep
push
add
movzwl
xchg
push
test
or
xchg
cmp
mov
aas
lcall
fs
mov
and
add
clc
cmpsb
cmp
or
test
mov
inc
cmpsb
stos
pop
popa
inc
ret
mov
pcmpeqd
add
sahf
ja
cmp
mov
jns
dec
cmpsb
or
daa
daa
fst
leave
rcr
loope
outsb
daa
daa
jmp
and
and
hlt
jle
xor
dec
sbb
xchg
xchg
dec
sahf
out
pop
add
out
and
xchg
lcall
stos
mov
mov
add
shrb
test
jg
outsb
mov
daa
add
fists
in
add
cltd
pusha
ja
cmp
or
inc
repnz
push
outsb
mov
js
xor
xchg
add
and
in
ret
lret
loopne
lret
in
in
testb
dec
pop
movsb
xchg
mov
cmp
mov
cs
out
je
add
lahf
cmpsl
pop
scas
ja
xchg
fistl
pop
mov
iret
and
add
decl
lods
xor
cmp
fildll
pop
lods
dec
push
lods
mov
enter
pop
lods
lods
jb
cmp
ja
aam
popf
pop
jo
psllw
mov
mov
syscall
outsb
pop
scas
adc
nopl
repnz
dec
scas
push
scas
pop
scas
das
jg
in
push
jne
jo
das
das
das
xchg
scas
mov
scas
das
das
das
das
ret
scas
fsubrs
das
das
out
scas
stc
scas
add
imul
and
in
in
sbb
sbb
in
in
pop
push
adc
adc
pop
jns
iret
lret
ucomiss
outsb
push
aam
pop
xchg
xor
jbe
dec
aas
addr16
jge
ss
out
cmp
xchg
push
cmp
jns
cmp
out
lret
ds
out
sahf
loopne
jmp
testb
sarl
inc
or
push
pop
out
sahf
out
and
sub
xchg
cmp
dec
paddsw
jns
dec
cs
dec
outsl
bswap
repz
jp
test
push
fcmovne
repz
push
cmpsb
mov
sahf
xchg
xchg
xchg
mov
daa
dec
aaa
jns
mulps
sahf
xchg
xchg
daa
or
jae
adc
mov
adc
xchg
sbb
out
xchg
mov
add
fmull
dec
test
mov
sbb
inc
jo
in
and
push
add
shrb
leave
repz
fmuls
daa
iret
repz
adc
clc
setle
outsb
mov
push
push
sub
fidivs
mov
dec
and
cmp
enter
xchg
cmp
pop
js
addb
nop
fiadds
cwtl
or
add
dec
mov
cs
push
inc
dec
push
inc
int3
ret
mov
mov
and
and
jae
and
add
adc
lret
leave
leave
sbb
int
mov
mov
dec
mov
pop
add
mov
inc
mov
mov
mov
xorb
mov
or
les
push
sub
inc
int
popf
pop
mov
jmp
cmp
in
repz
add
adc
pop
add
sahf
cmpsl
mov
pop
inc
add
daa
fisttps
mov
pshufw
jns
jnp
xchg
fmull
out
or
pushf
pushf
mov
imul
hlt
mov
lahf
sahf
call
mov
out
or
push
sbb
sbb
dec
sahf
out
sbb
dec
iret
leave
jae
nopl
push
bound
xchg
out
cmp
js
and
mov
cltd
movsb
outsl
scas
push
daa
xor
fcmovne
mov
jg
push
shrb
push
sbb
stc
dec
adc
sahf
cmp
dec
push
add
xchg
xchg
test
nop
cmpb
xchg
mov
cmp
cmp
push
push
fiadds
jmp
syscall
or
in
mov
mov
or
fildl
pop
movups
adc
out
adc
dec
cmp
out
push
push
bound
repnz
jae
sbb
xchg
outsb
movhps
sahf
cmpsl
fwait
mov
and
lds
and
pop
out
icebp
mov
add
out
sub
pop
mov
jno
out
add
mov
add
daa
sub
pop
cs
ror
sarl
outsl
imul
daa
daa
iret
add
dec
sahf
out
pop
mov
iret
repz
or
or
add
cmp
mov
xor
ror
xchg
push
sbb
mov
pusha
mov
add
sahf
out
jns
mov
out
or
pop
rorb
pop
ret
sahf
or
out
pmaxub
mov
cmp
mov
adc
sbb
inc
cmpsb
xchg
int
rcl
mov
mov
cs
leave
repz
add
out
fwait
jg
btc
or
push
loopne
testb
aaa
jb
mov
push
add
adc
cmp
pop
sub
scas
aas
cmp
inc
ds
mov
pop
shrb
xchg
mov
sysret
iret
leave
leave
jae
jp
nop
push
fmulp
repz
pop
cmpsb
mov
sbb
jae
jns
lret
sbb
daa
iret
repz
jmp
testb
jb
mov
push
and
pop
xor
cs
repz
adc
out
cmp
insl
sub
scas
sub
cltd
addr16
dec
add
push
das
sarb
fstpt
stos
mov
push
mov
pop
fisttpll
out
or
cs
out
cmp
setae
jns
push
adc
inc
mov
out
outsb
mov
ja
xchg
jle
out
dec
xchg
sbb
rorl
push
mov
push
and
out
and
and
sahf
xchg
out
fisubs
out
es
push
cmp
idiv
mov
iret
repz
sub
es
sahf
out
push
sub
fucomi
in
xor
orps
jbe
jns
pop
xor
outsb
pcmpeqd
jle
cmp
daa
iret
jae
sahf
cmpsb
cmp
sbb
movsbl
das
sub
add
cwtl
pop
dec
es
imull
in
push
inc
sbb
leave
push
dec
lret
dec
inc
fstpl
cmp
daa
dec
or
sub
aas
mov
shl
add
jl
and
testb
dec
pop
adc
dec
xchg
xorb
mov
flds
leave
inc
in
cmp
xor
add
aad
stos
or
xlat
rcl
pop
adc
cs
inc
push
leave
sti
sub
xor
sbb
aas
test
popa
fs
ja
mov
dec
gs
inc
aaa
or
or
aaa
jbe
push
push
push
add
call
repz
fcom
shl
cmp
repz
mov
cwtl
pop
mov
sahf
out
js
jo
push
fs
pop
push
dec
iret
repz
sahf
inc
cmp
push
sub
adc
out
cmp
add
xlat
lock
adc
rorb
out
dec
les
aas
jo
pop
out
popf
mov
sbb
or
jb
cmp
or
aaa
or
or
daa
adc
dec
aaa
jns
adc
and
xchg
inc
inc
push
addr16
das
push
loopne
mov
pop
imull
cmp
out
and
jb
pop
jb
pop
jo
orl
repz
jo
pop
xchg
sub
mov
aas
movsb
loope
in
into
aas
xlat
sbb
data16
mov
jp
sbb
inc
mov
call
cs
add
inc
add
adc
and
mov
aaa
ljmp
sub
insl
stos
stos
mov
and
mov
add
add
add
movsb
add
cmpb
cmpsb
fisttps
mov
cld
push
jg
sub
subb
mov
cmp
cld
decl
inc
mov
iret
mov
in
call
cmp
add
mov
repnz
xor
fcomp
loopne
jb
jle
daa
jecxz
in
inc
scas
dec
bound
subb
or
mov
jle
out
scas
adc
pop
fdivrs
ud2
add
add
push
pop
das
sub
pop
aas
adc
inc
cwtl
aas
pop
inc
cmp
inc
imul
sbb
sbb
out
sahf
out
adc
add
repz
adc
fstpl
pushf
sbb
repz
cmp
add
js
fldcw
scas
mov
jl
ficompl
fsubrl
fildl
fcmovu
repz
mov
jns
jp
jno
out
push
cld
push
or
push
clc
call
aas
add
inc
pop
fldl
vmread
incl
or
ds
push
cwtl
xchg
xorb
rcrl
addr16
push
push
mov
mov
or
rorb
pop
aas
cmc
jne
xchg
pop
pop
mov
cs
xor
dec
cmp
xor
jge
cmpsl
aad
pop
and
sub
cwtl
mov
add
ret
cmpsb
add
cs
xchg
es
inc
loopne
push
sbb
cmp
repz
repnz
jns
cmpsl
adc
mov
sahf
out
or
adc
mov
into
jo
push
push
pop
jns,pn
jnp
adc
insb
and
push
or
fdivp
sahf
out
jl
pop
pusha
sbb
je
mov
adc
push
sbb
repz
dec
push
inc
pop
cmp
cmp
repz
and
and
ljmp
sbb
inc
gs
jnp
jg
sbb
and
ljmp
and
sbb
xor
add
addl
jg
sahf
out
pop
cmp
pop
js
mov
xor
out
repz
xor
and
push
pop
or
lcall
and
testl
decl
mov
add
cli
or
or
inc
ds
ret
mov
adc
cld
xchg
mov
mov
sbb
into
lcall
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
std
call
sub
mov
popl
cmp
cmpsb
iret
decl
js
mov
loopne
jmp
xchg
test
mov
cmp
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
pushl
xchg
leave
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
lcall
subb
fwait
xchg
and
and
mov
sti
aas
jno
or
mov
pop
fs
dec
lea
call
xor
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
ljmp
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
in
ljmp
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
pushl
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
loopne
push
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
fwait
dec
sub
fstl
arpl
int3
and
call
sub
sbb
and
cmp
mov
cmp
fisttps
pop
or
mov
jecxz
cmpsb
add
movb
aaa
fldt
cmp
jno
lcall
and
xor
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
call
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
frstor
push
inc
lahf
pop
out
cwtl
aad
jmp
movsl
xchg
push
push
xor
push
cmp
cmp
jnp
cmpsl
ljmp
add
ja
popa
push
out
mov
les
hlt
ljmp
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
pushl
out
sbb
mov
repnz
repz
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
insb
incl
arpl
psubd
or
outsb
cmp
imul
addr16
add
aam
cld
incl
std
test
movsl
cli
test
xor
leave
mov
insb
fdivr
scas
pushl
jne
filds
or
shrl
push
ficoms
push
xlat
enter
call
mov
and
mov
cltd
xchg
mov
mov
or
or
and
decl
mov
jl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
adc
call
out
mov
mov
movsl
in
lahf
xor
mov
js
mov
or
mov
cmp
fs
add
jmp
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
decl
cmc
fnstenv
adc
mov
mov
bound
ficoml
gs
jmp
sbb
aam
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
ljmp
shll
jmp
outsb
xor
mov
sarb
incl
in
add
pop
dec
or
cmp
add
daa
adc
or
and
ljmp
mov
outsl
and
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
orl
mov
in
mov
mov
add
inc
call
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
decl
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
test
ss
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fcomip
mov
mov
mov
aad
mov
call
xchg
shll
push
repnz
fbstp
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
decl
push
xchg
ja
int3
add
mov
das
es
lds
or
add
mov
cmpsl
call
ret
shlb
scas
fldcw
ret
es
pushf
mov
insl
add
ss
jmp
incl
push
add
adc
mov
jnp
sbb
xchg
or
pushl
or
rcl
xchg
aam
clc
mov
push
int
mov
idiv
jg
jmp
ja
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
jmp
clc
sar
imul
push
js
or
push
addl
mov
mov
incl
cmp
cmpsl
notl
pusha
rorb
imul
loop
push
scas
fcompl
fldenv
filds
aaa
mov
mov
sahf
mov
inc
jmp
and
repnz
lret
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
icebp
out
add
gs
cltd
add
or
nop
movb
repnz
test
addr16
pop
ja
push
in
jns
push
mov
cmp
push
xlat
fcomp
out
sahf
out
fcmovnu
fstp
jns
jns
loop
in
call
jmp
sahf
out
sahf
repz
cmc
div
clc
sbbl
sbb
dec
adc
mov
adc
add
les
xchg
mov
xlat
and
cmp
jae
inc
push
jbe
add
dec
bound
ficoms
insl
bound
jne
mov
arpl
lcall
fistpll
and
mov
push
ret
cmp
inc
jno
clc
fisttpl
xor
pop
inc
cmp
pop
bound
xor
xor
popa
arpl
pop
cmp
pop
xor
xor
or
xor
bound
pop
xor
popa
push
inc
inc
inc
fdivr
jbe
pop
insb
imul
push
insb
imul
dec
inc
mov
add
push
inc
lods
add
subb
stos
loope
popa
or
mov
gs
je
mov
push
jbe
mov
inc
aas
fistl
test
jle
gs
push
pop
or
adc
add
dec
pop
inc
shlb
pop
subl
and
push
xor
pusha
add
cltd
popa
xchg
cmp
cmp
insb
aaa
aas
inc
push
adc
mov
sub
add
cltd
and
jae
and
fidivl
inc
aas
nop
cltd
sub
xlat
inc
inc
and
sbb
inc
pop
dec
popf
jecxz
jae
inc
inc
inc
add
sub
xchg
popa
mov
lcall
mov
dec
push
dec
cmp
inc
mov
fsubrs
sbb
mov
mov
jne
add
push
outsb
mov
dec
jge
imulb
xor
or
stos
mov
arpl
add
addr16
mov
outsl
in
clc
xchg
into
pop
jo
mov
push
dec
in
inc
cmp
sub
add
xchg
sub
pop
and
xorb
outsl
xchg
inc
mov
mov
dec
xchg
lahf
cmp
mov
push
nop
scas
pop
xlat
mov
xchg
out
and
inc
jb
addr16
sahf
add
dec
popa
jo
loopne
dec
adc
lahf
push
outsl
outsl
lods
pop
or
mov
lds
and
lds
mov
mov
pop
or
sub
test
pop
cmp
arpl
cmp
mov
jo
lahf
pop
mov
push
xchg
insb
jns
shrl
in
xchg
push
xorb
ss
int
adc
test
dec
popa
mov
mov
bswap
gs
inc
sti
inc
push
bound
ja
inc
jbe
mov
mov
dec
dec
repnz
ja
dec
xor
je
mov
jmp
sti
push
inc
imul
push
jg
xorb
iret
push
cmpsb
xor
and
popa
cmp
dec
inc
jmp
fwait
inc
sbb
and
dec
adc
sbb
sbb
mov
outsb
rclb
inc
push
inc
dec
scas
cmp
pop
bound
outsb
arpl
mov
enter
pop
in
xchg
pushaw
in
insl
iret
adcb
aaa
or
xchg
mov
mov
dec
mov
out
adc
push
daa
add
orl
push
adc
pop
rclb
adc
push
add
adc
inc
mov
mov
fstenv
incl
in
xchg
pop
loope
pop
loopne
std
jo
push
fdivrl
inc
lahf
push
jne
push
pop
push
xor
dec
xorl
call
lds
aas
mov
mov
sahf
ds
pop
outsl
nop
ds
sbb
or
ds
cmp
adc
out
aad
sbb
cld
xchg
test
js
shl
pusha
cmp
ret
cmpsb
xchg
inc
mov
dec
arpl
jle
cmpsb
push
cmp
fistpll
jbe
fs
outsl
xchg
sub
mov
mov
cli
ja
sti
push
inc
lcall
in
mov
addl
adc
fisubs
pop
bound
decl
fwait
add
xchg
mov
test
bound
ror
push
decl
je
sarl
lcall
arpl
dec
fcomps
shll
outsb
std
movsb
les
pushl
fwait
mov
in
ret
repnz
jo
xor
sub
fiaddl
jbe
push
in
fistps
or
pusha
pop
in
pop
inc
pop
int3
mov
adc
data16
fwait
bound
jbe
gs
jmp
std
loop
insl
aas
mov
xor
jns
xchg
insl
xor
mulb
cmpsb
cld
sti
adc
call
fdivl
outsb
cmp
hlt
test
aaa
enter
adc
inc
in
mov
dec
mov
cmp
gs
movsb
lods
push
out
pushf
scas
popf
push
test
fldcw
adc
out
or
test
test
test
movsl
push
xor
movsl
scas
arpl
push
push
push
aam
rcrl
in
iret
insl
or
outsl
cld
out
loope
push
and
loope
dec
iret
lcall
mov
push
push
fdivs
lock
xor
dec
ja
test
mov
lret
incl
les
sbb
pop
jns
cli
cmc
fldcw
adc
shr
ja
mov
cld
ljmp
xlat
imul
mov
sti
mov
pushf
sbb
pminub
call
push
pop
add
push
mov
mov
push
fs
pop
adc
adc
dec
cmp
cmp
xlat
or
mov
or
or
xchg
dec
rorb
jmp
dec
sub
cmpsb
xchg
adc
sbb
dec
xchg
insl
in
push
cli
jno
pop
sbb
ljmp
ljmp
pusha
cltd
ret
push
sub
aam
popf
or
add
fnsave
jmp
loopne
mov
imul
push
mov
int
in
pusha
jo
jmp
ljmp
pop
lds
shlb
jp
and
inc
push
push
test
fimuls
cmp
jle
outsl
test
mov
push
cmp
xchg
into
stos
jmp
add
pop
test
sbb
jg
decl
jns
lods
fildl
inc
jg
push
add
jge
push
xchg
ja
push
jno
in
sbb
pop
pop
dec
inc
and
pop
pusha
jle
cld
lret
xchg
stc
inc
mov
outsl
fcomip
sbbl
mov
mov
js
loop
inc
push
loopne
call
mov
icebp
lcall
iret
mov
lahf
xchg
mov
xchg
flds
jmp
jmp
decl
or
idivl
push
adc
pusha
xchg
jno
aad
aam
aad
and
out
dec
mov
call
xchg
sbb
dec
mov
or
test
lods
inc
iret
test
out
push
cwtl
dec
arpl
jl
mov
daa
scas
cs
lcall
dec
test
inc
mov
xchg
addr16
decl
adc
test
mov
stc
int3
push
sbb
dec
inc
decl
and
push
mov
adc
add
ja
ret
mov
dec
and
movsl
outsl
pop
mov
mov
fwait
mov
sahf
adc
clc
rcrb
jp
mov
std
jle
mov
sub
out
enter
fs
stos
cmp
sar
mov
sub
xor
ss
xchg
jp
stos
call
jg
push
pop
stos
sbb
xor
fdivrl
lcall
fwait
aaa
jae
sub
jmp
add
lock
mov
push
push
sbb
jb
test
fcoms
adc
stc
pop
lock
call
fstpt
jns
add
jb
pop
jl
jg
mov
scas
scas
test
mov
mov
push
jmp
test
pop
push
test
push
gs
jns
out
rcrb
hlt
lcall
fcomp
dec
mov
sub
sub
js
faddl
dec
test
lret
out
pushf
mov
ljmp
cmp
push
and
push
xor
adc
fsubl
jno
xlat
out
push
mov
and
rcl
xchg
push
cmp
rcll
repz
out
mov
sub
mov
jnp
sub
jecxz
jno
sub
jg
mov
mov
or
xor
adc
das
push
xchg
es
jmp
inc
fdivrs
jns
sbbb
xor
dec
call
jg
mov
lock
adc
push
jne
out
or
xchg
xchg
jne
mov
jo
in
ret
or
sbb
addr16
negb
aad
and
pop
mov
adc
jecxz
repz
scas
lock
loopne
ljmp
push
mov
adc
and
xor
rcl
push
test
jno
out
jp
arpl
ljmp
aas
fmull
iret
jae
aam
pop
cmp
cli
xchg
lcall
mov
xchg
cmpsl
pop
std
ss
jmp
push
call
mov
test
call
adc
push
xlat
mov
test
test
sti
incl
icebp
adc
sub
push
push
fldcw
lcall
xlat
fucom
xchg
push
sub
js
add
push
cmp
jle
rclb
push
lcall
add
out
cli
out
arpl
mov
daa
add
jbe
mov
mov
sub
adc
sbb
xor
addb
mov
dec
mov
adc
ss
sar
jg
sbb
jp
and
cmp
mov
pop
data16
call
xchg
lahf
mov
adc
iret
rep
cmp
push
hlt
loope
out
aad
lahf
incl
filds
dec
pop
out
mul
xor
pop
mov
add
mov
dec
loope
xchg
pusha
inc
cmp
adc
and
loop
push
jecxz
push
ret
fcmove
hlt
divl
imul
mov
and
mov
fnstcw
and
dec
xor
add
dec
pop
ret
call
pushf
xor
fimull
cwtl
cmc
add
jno
shrl
push
jecxz
fcmovnbe
add
bnd
ljmp
sub
into
fists
outsb
ret
pop
faddp
push
or
stc
in
mov
enter
ljmp
mov
inc
pop
aas
jno
and
sbb
sbb
sub
sar
std
call
pop
dec
cmp
or
push
cwtl
insb
imulb
rcl
ja
cwtl
sbbl
xor
cmc
in
in
mov
pushf
in
jle
push
mov
subl
cmp
sarb
scas
cli
pushl
aas
xchg
adc
stos
mov
sub
xchg
nop
jb
ljmp
shl
orb
sarl
inc
fnstcw
lods
add
xor
mov
mov
movb
test
fld
push
pop
ret
lret
fwait
ljmp
mov
sti
xlat
sbb
xchg
xor
cld
sbb
dec
push
clc
inc
dec
push
mov
dec
pop
mov
sbb
rcl
inc
xor
xor
fidivrs
aad
mov
sub
mov
adc
jb
es
stc
xchg
cmpsb
or
cmpb
mov
mov
jo
jbe,pn
popf
adc
decl
aaa
sbbl
sub
insl
lock
out
jge,pt
rclb
movsl
jns
jo
in
ds
fisttpl
das
jns
dec
dec
cmpsb
das
inc
movsl
insb
outsb
jp
cli
call
ficomps
xchg
popa
fistps
cmp
mov
roll
dec
test
or
outsl
decl
and
and
pop
int3
fsubl
aaa
push
subw
inc
lcall
js
flds
div
push
xchg
jl
and
and
stos
imul
pop
out
add
sub
stos
adc
daa
aas
fs
inc
mov
and
push
adc
pushl
xrelease
js
ljmp
andb
push
adc
popa
and
push
hlt
mov
test
data16
call
or
lds
push
pushl
xchg
fsubrs
or
lcall
fmull
and
pusha
jmp
adc
jb
or
notb
xchg
das
push
lea
lcall
mov
sub
shll
jp
pop
jno
dec
nop
rcll
xchg
popa
push
push
cli
jmp
popf
adc
and
jns
dec
dec
pop
mov
stos
stos
repnz
movsb
mov
jmp
push
sbb
lods
jo
and
mov
mov
or
pop
mov
in
xor
mov
out
adc
add
lock
bound
test
cwtl
and
std
jmp
add
roll
pop
scas
test
ds
ljmp
rcr
push
scas
pop
jl
fmul
arpl
in
cmpsb
jns
jl
stos
mov
mov
data16
decl
jg
mov
push
adc
out
xchg
push
pop
jbe
inc
icebp
idiv
and
mov
add
jmp
xchg
push
cli
setp
fists
pop
mov
lcall
sbb
sub
lods
xchg
ja
test
dec
icebp
xorb
dec
add
lcall
aam
aam
push
subb
in
out
mov
inc
sbb
sbb
stos
out
movl
lea
mov
push
test
mov
call
call
es
cmpsl
add
mov
in
jl
xchg
sub
dec
addb
jns
pushl
movsl
and
test
push
not
cli
ljmp
jbe
pop
and
push
and
call
fbld
and
sbb
das
pop
jp
pop
xchg
std
xor
pop
push
addl
ljmp
jg
fsub
and
popf
sahf
mov
sub
aad
mov
push
cmp
and
negl
mov
lds
sbb
das
sbb
add
in
ljmp
jno
jmp
pop
xchg
enter
decl
cmpsb
stos
mov
bound
call
and
pop
pop
out
pop
add
test
sub
inc
fmuls
fisubrs
loop
jne
incl
xchg
test
fidivs
ret
jne
xchg
shll
movsb
andl
jmp
movsb
jl
decl
jae
aad
test
or
xchg
and
outsl
push
push
cmp
xor
fsub
mov
call
fldt
aad
cmpsb
iret
jge
adc
xchg
mov
jne
decl
adc
popf
pop
pushf
push
negb
push
cmp
repz
sbb
ljmp
push
and
scas
stos
idivb
inc
jne
loope
repz
outsl
jge
in
lcall
adc
incl
jg
mov
push
cmc
lcall
mov
jne
decl
add
fs
and
out
pop
fcmovb
add
je
xchg
iret
ja
call
sub
cli
or
mov
shr
adc
jmp
dec
add
add
jmp
ljmp
imul
movsb
test
mov
repz
mov
jmp
ljmp
imul
sub
fiadds
addb
mov
jne
into
mov
mov
call
lds
insb
fwait
cmp
mov
lock
adc
fistl
lret
push
xchg
out
js
out
fs
dec
cmpsb
icebp
incl
into
mov
mov
sti
mov
mov
xchg
inc
ja
jmp
arpl
inc
adc
lret
jle
xor
vmread
popa
and
fbld
loopne
in
fs
mov
sub
mov
mov
push
pushf
les
mov
inc
inc
ds
fdivrp
dec
ret
cmpsb
xchg
loop
mov
lods
sub
add
pop
sub
and
aad
mov
and
ljmp
repnz
jecxz
testl
into
push
addr16
incl
cld
pop
call
push
pop
shll
daa
loopne
in
repz
jl
sti
pushl
xorb
sbb
sbb
in
mov
dec
cmp
sbb
movsl
addl
mov
xchg
ljmp
ror
clc
pop
dec
jp
inc
rol
loopne
imul
and
sub
inc
inc
icebp
repz
mov
call
cmp
in
mov
xor
pop
xchg
subb
or
hlt
mov
mov
outsl
es
cld
jae
hlt
sbb
mov
movsb
aas
xchg
mov
mov
and
sti
push
add
dec
sahf
jp
pushl
pop
lret
fiadds
dec
rcr
faddl
movsl
cmp
adc
stos
dec
mov
jg
add
or
movsl
pushl
js
mov
stc
movsb
aad
add
mov
out
jo
call
imulb
sub
inc
icebp
mov
fiaddl
jne
ljmp
jmp
cmpsl
test
jbe
fnstcw
adc
or
ret
adc
xor
pop
mov
in
pop
pop
out
jle
add
push
or
sbb
sub
add
lds
ja
jne
push
mov
cmpsb
call
push
cmp
out
repnz
fdivp
call
or
sub
mov
std
aam
test
js
mov
cld
lcall
inc
mov
outsl
adc
mov
pop
mov
xadd
decl
aam
subb
sti
frstor
dec
shr
jmp
popa
push
lds
dec
aam
addb
popf
pop
repnz
xor
jmp
ds
in
or
fldl
jnp
pop
mov
jmp
ds
jmp
sub
insb
or
mov
sub
mov
jmp
add
mov
pushf
leave
loope
imul
call
popf
movsb
daa
push
sub
pushf
incl
sub
pop
mov
or
pusha
jecxz
sub
xor
mov
jp
pushl
add
pop
cs
call
pop
mov
imul
jmp
orl
adc
lahf
mov
movsb
outsl
popf
push
rclb
sbb
ds
test
loopne
fcomps
test
lcall
push
pop
imul
and
cmp
aam
push
dec
lcall
in
jo
sbb
test
mov
push
push
icebp
jp
fcomip
push
inc
pop
or
inc
mov
jl
xor
sbb
and
jmp
bound
lods
leave
in
sbb
arpl
mov
in
push
js
inc
neg
fnstcw
mov
dec
jo
xor
jle
adcl
incl
push
and
lods
fists
scas
add
inc
imul
loopne
decl
cmp
aad
insb
je
dec
arpl
push
jmp
imul
addr16
gs
jbe
mov
mov
sub
mov
jnp
xlat
ljmp
xchg
dec
out
mov
push
xorb
pop
sbb
adc
notb
ret
jg
cltd
cmp
and
xor
je
js
xor
fidivs
jg
lcall
fcoms
or
das
add
jno
pop
paddq
adc
lods
aas
mov
je
cs
movsb
enter
out
mov
mov
js
add
jnp
push
add
ljmp
sahf
jmp
xor
lods
inc
call
sbb
pop
clc
add
add
decl
cmp
dec
out
ret
fsin
cwtl
fstpl
dec
dec
cmp
ljmp
aam
sbb
lret
inc
jo
dec
add
lock
test
push
cmp
lock
pop
in
imul
lcall
hlt
outsb
xlat
sub
loope
mov
inc
sbb
fisttps
ljmp
pop
jns
fistpll
int
cmpsl
shll
xchg
mov
lea
lcall
ljmp
mov
fwait
push
scas
inc
xor
pop
sbb
enter
repnz
shlb
or
call
xchg
testb
cld
pop
les
scas
adc
outsl
jg
mov
data16
popf
hlt
adc
popf
fdivrs
fs
push
adc
fildl
daa
notl
push
or
jnp
fsubl
sar
pop
stc
aaa
incl
cld
call
pavgb
cmpsb
and
shlb
mov
jl
pop
outsl
pushl
ret
jg
mov
cmp
pop
addr16
xchg
mov
jno
xchg
and
pusha
js
call
jno
mov
fsubs
sarl
loope
aaa
dec
lock
xor
mov
pop
stos
dec
lret
fisttpl
dec
pop
daa
pop
adc
orl
mov
pushl
rcrl
cmpsb
stc
gs
aas
jle
mov
jnp
and
dec
mov
icebp
push
fdivrs
pop
push
pop
inc
mov
sbb
cmp
jg
in
in
xor
push
adc
dec
cmpsb
and
scas
ljmp
xlat
inc
call
pop
xor
mov
insb
and
test
rcr
push
xor
lods
ret
decl
or
mov
mov
pop
pop
pusha
mov
les
pop
sahf
movsl
pop
stos
push
cltd
jg
fcomip
mov
ret
mov
divl
jle
mov
jno
sbb
and
xor
call
dec
and
xchg
test
xor
adc
idiv
mov
loopne
mov
rolb
lcall
xchg
xchg
test
daa
pop
sub
xor
ljmp
mov
pop
push
out
mov
outsb
daa
and
mov
lods
inc
sub
vsqrtps
outsb
cmc
fwait
decl
int3
fs
mov
pop
inc
or
insl
mov
je
lcall
out
xor
ja
dec
in
push
mov
call
mov
push
decl
push
mov
and
adc
and
sub
lods
lea
and
xor
pop
icebp
lcall
jnp
mov
adc
cmp
fidivrl
rcll
aaa
lahf
fists
les
push
and
daa
sbb
sbb
lock
push
es
cmp
and
dec
fistl
jg
dec
jb
pop
decl
aas
lahf
mov
pop
dec
mov
push
lods
lods
fiadds
cmc
jbe
rcll
cmpsl
test
mov
sub
jno
sbb
mov
inc
sub
bound
pushf
call
sbb
push
scas
and
nop
mov
cltd
push
fld
xchg
decl
je
pop
or
cmp
inc
jns
mov
enter
dec
or
adcb
hlt
fdivrs
into
repz
aam
mov
jecxz
jbe
mov
js
incl
jae
cvttps2pi
and
jb
mov
xor
jg
push
aam
nop
lds
lcall
out
lock
mov
sub
in
pop
mov
sub
xor
pop
mov
call
push
out
push
dec
jg
mov
inc
in
sub
adc
sub
sti
mov
jne
push
inc
fsubr
bound
push
jo
or
sub
ljmp
fidivs
push
sbb
pop
jns
lock
mov
xor
loopne
sub
outsl
sub
jmp
int3
insl
lahf
sbb
mov
add
scas
mov
mov
jge
mov
jae
xchg
shl
aaa
inc
mov
int
test
jecxz
fcmovnb
imulb
shll
das
jle
std
das
adcb
mov
lret
repnz
or
repz
ds
jecxz
stos
jmp
pop
sbb
imul
jns
movsl
push
mov
xchg
orb
movsl
jne
nop
sub
jecxz
dec
xchg
jl
lahf
bound
daa
cmpsl
cltd
aaa
sbb
jg
or
repnz
and
mov
push
hlt
fstps
test
ficomps
jecxz
js
cmpsl
push
xlat
pop
mov
cmc
mov
dec
push
int3
lods
scas
pop
incl
out
pop
sbb
sbb
cltd
mov
dec
sbb
jge
adc
ljmp
adc
and
jb
dec
repnz
jp
pop
orb
xor
mov
shrb
mov
scas
lcall
or
sbb
fistl
leave
and
push
imul
ret
ljmp
dec
out
clc
pushl
js
lret
stos
addr16
scas
test
mov
ds
and
jecxz
ljmp
jnp
jmp
and
iret
mov
add
je
movsb
cmp
and
fsubr
pop
std
jmp
mov
das
adc
adc
aam
and
test
cmc
test
call
mov
ja
fwait
int3
sbb
sub
icebp
push
in
push
into
int3
mov
push
addb
xchg
out
sub
fst
nop
sbb
loope
mov
jno
sti
rolb
inc
aam
add
shr
inc
pop
jge
cltd
lret
and
pop
idivl
addr16
mov
test
std
mov
mov
cmc
outsb
neg
loop
mov
aad
into
sahf
mov
jge
int3
mov
adc
xor
inc
cmp
add
xchg
lods
ljmp
out
shll
cwtl
stos
mov
mov
xchg
sub
ret
and
rcll
pushf
out
inc
xor
or
and
jmp
popf
xchg
jae
ss
ljmp
xchg
pop
mov
jne
and
into
add
jbe
mov
out
add
push
fs
cmp
ljmp
sbb
adcl
fdivs
xchg
cmp
xchg
push
loope
jne
sbb
lods
push
xchg
cmp
cltd
pop
jnp
stc
xlat
ljmp
scas
cmp
xchg
ljmp
into
push
int3
iret
test
cli
ss
xchg
xor
mov
dec
cmp
push
dec
adc
lcall
push
xchg
into
cmp
mov
xor
fwait
sub
popf
add
pop
jg
or
pop
fimuls
rorl
mov
decl
sbb
sub
dec
aaa
lea
les
push
shl
xchg
add
pop
incl
fsts
or
or
dec
aaa
sub
xchg
sar
aaa
mov
rclb
lods
rcll
bound
fidivs
scas
mov
cmp
lcall
xor
mov
sub
out
je
popf
pop
call
popf
or
ljmp
push
lds
adc
inc
int3
sub
arpl
rcrb
mov
repz
mov
ljmp
mov
push
sti
mov
repz
mov
cmpsb
iret
mov
pop
in
cmp
dec
pushl
cmc
in
add
dec
lret
cld
cmc
lahf
inc
cmp
aam
inc
mov
push
ficoms
mov
sub
std
pop
mov
xorb
mov
lret
fisttpll
dec
or
push
mov
test
je
movl
jle
movsl
scas
aaa
cld
inc
pop
cwtl
outsb
lret
and
dec
scas
and
testb
decl
sahf
mov
in
clc
mov
shrb
pop
push
xchg
nop
push
shlb
fsubs
aaa
mull
push
std
mov
xchg
cmp
lods
popf
jl
push
and
jne
push
cmp
mov
mov
fstpl
test
out
pop
lcall
scas
jo
fdivr
dec
orl
inc
jl
pop
notb
fwait
push
push
and
cmc
stos
xchg
adc
pop
and
gs
adc
ljmp
jecxz
or
cmp
ret
popa
mov
lock
loope
push
movsb
pop
cli
xor
mov
mov
sbb
rcr
dec
adc
int
xor
jecxz
insb
out
int
sub
jne
dec
and
rorl
rorl
jne
jne
lret
push
inc
fstpt
stos
dec
jns
stos
decl
loope
mov
or
in
or
insl
push
inc
call
mov
je
pop
adc
mulb
xor
inc
fcomps
incl
int
or
jne
sarl
mov
jg
mov
clc
adc
sub
mov
mov
cmp
xchg
incl
or
mov
sahf
inc
or
fwait
cmp
incl
fadds
gs
inc
mov
in
roll
xchg
cmpl
ljmp
jae
fsubrs
shll
fisttps
frstpm(287
pop
stos
lret
cmpsl
hlt
mov
je
std
push
std
jmp
cmpsb
push
iret
movsl
call
les
sbb
repz
lcall
pop
jb
daa
mov
xchg
ss
inc
add
jns
inc
std
or
in
mov
cmpsl
xchg
cwtl
and
ss
lcall
inc
xchg
xlat
fsubrl
or
push
push
mov
or
push
cmp
mov
pop
mov
and
lock
movb
popa
and
cld
lcall
xchg
or
dec
rol
sub
test
ret
pop
shl
movb
jmp
or
push
add
lret
lods
xchg
leave
rorl
data16
and
inc
rorb
movb
out
leave
xchg
push
sbb
xor
aaa
lcall
sbb
lods
mov
adc
iret
mov
ss
add
ret
inc
popa
jmp
cld
add
inc
in
call
mov
into
rorl
and
icebp
incl
pop
jo
or
fidivrl
arpl
in
stos
shll
mov
xchg
jg
popa
mov
xchg
dec
aad
xor
cli
xor
sub
lock
ljmp
inc
push
push
add
sbb
repnz
sti
cmp
dec
mov
fdivrl
or
jno
ret
push
jle
jp
dec
jg
mov
mov
pushf
mov
push
inc
cs
push
cs
int
decl
test
cmc
sub
loop
popf
dec
aam
hlt
test
cwtl
stos
xchg
pushf
or
xchg
xchg
jg
mov
jo
mov
cmp
nop
push
stos
jmp
movsl
jo
insl
fistpl
ljmp
mov
xchg
out
repnz
cmp
lret
xchg
or
lret
call
into
and
jb
outsl
imul
lret
jmp
dec
testl
pushl
xchg
clc
fildll
fists
dec
addb
jmp
push
popa
rorb
pushl
xor
sarb
xchg
lea
sbb
ja
xchg
or
stos
out
jg
mov
je
pop
xor
pop
leave
fmull
jle
push
fs
jle
das
adc
xchg
test
jg
decl
pop
jae
sahf
xor
js
jnp
mov
mov
inc
or
jle
cld
sub
xchg
mov
test
fdivl
mov
cli
stc
mov
movsb
dec
add
add
mov
jle
push
ret
inc
pop
je
shrb
rorl
jmp
sbbb
push
sub
out
andb
shll
push
inc
jmp
xor
orb
pop
das
push
lahf
int3
mov
add
cld
adc
frstor
jne
mov
pop
push
adc
sub
xor
pushl
out
in
hlt
aaa
ljmp
popfw
imul
xor
aas
mov
fistps
fnstcw
mov
cmp
dec
cmp
stos
dec
nop
int3
cltd
or
push
cmp
mov
mov
cmp
sar
mov
into
aaa
push
inc
or
and
pop
scas
mov
lds
mov
outsb
mov
loope
inc
stos
in
push
testb
test
adc
push
inc
push
imul
pop
lcall
fdivrl
sbb
stc
and
cmpsb
decl
dec
loopne
rcll
mov
movsl
movsl
xorl
adc
scas
mov
pop
daa
pop
in
push
pop
mov
loop
adc
mov
into
out
clc
ljmp
in
mov
out
lcall
pop
mov
insl
mov
cld
or
jecxz
popa
add
xchg
or
call
jl
shlb
mov
mov
mov
add
push
ljmp
loope
xchg
push
or
jmp
cltd
test
pop
adc
sub
mov
pop
xchg
call
aas
lret
adc
test
lds
add
and
fadds
jns
mov
inc
scas
push
decl
jo
xor
xchg
lods
xchg
pop
or
cmp
sub
inc
repnz
pop
jmp
idiv
clc
or
mov
adc
sub
pop
mov
cmpl
pop
jo
insl
mov
mov
fs
in
lods
in
lds
call
test
clc
push
popa
adcl
loop,pn
pmaxub
jbe
sub
movsb
in
scas
data16
jmp
add
xchg
mov
mov
jo
add
adc
adc
into
sbb
in
idiv
dec
fadd
push
sub
enter
cli
leave
ror
mov
mov
push
mov
jmp
cmpsl
sbb
int3
iret
cmp
test
or
lods
sub
mov
repz
pusha
add
pop
loopne
test
fsubp
jno
or
sbb
std
cmp
mov
aam
xchg
out
js
int
cmpb
mov
jae
mov
sbb
dec
jecxz
sub
scas
lds
lcall
pop
iret
fcomps
jecxz
xchg
or
movsl
adc
jno
or
shl
mov
mov
mov
inc
ljmp
jmp
lea
pop
loop
out
call
xchg
push
outsb
aam
call
leave
mov
mov
call
dec
rcrb
add
sbb
fcmovne
xchg
fildl
stos
mov
nop
cmp
in
pop
push
cmp
mov
jmp
add
fisttps
pop
mov
mov
xchg
adc
mov
or
rcl
inc
out
pop
and
out
cmp
cld
jmp
push
push
dec
mov
ljmp
or
call
pushf
ljmp
cli
decl
add
lahf
mov
insb
cmp
loopne
mov
shrb
std
incl
inc
out
mov
inc
ret
jns
jbe
call
dec
addr16
xchg
dec
nop
xor
mov
pushl
add
imul
scas
je
mov
jbe
xchg
mov
xor
ljmp
ficoms
dec
jo
mov
shlb
mov
rcll
leave
out
clc
adc
inc
mov
push
mov
jb
in
enter
fmuls
dec
mov
ljmp
insb
sbb
lcall
xor
cmp
mov
cwtl
push
push
arpl
jo
sar
lods
or
scas
lcall
cmp
fs
int3
loopne
mov
daa
sub
je
imul
add
addr16
pop
iret
jo
cmp
cmp
loopne
scas
fstpt
inc
movsb
cli
push
imul
call
push
decl
lock
push
pop
cltd
pop
in
enter
or
sub
xchg
outsb
push
call
lret
xchg
jae
adc
stc
jns
cmp
dec
shlb
loop
xor
xchg
fisubrl
jmp
loope
push
clc
fildl
xlat
fstl
movsb
popf
mov
leave
std
rcrb
sub
push
sar
adc
pop
push
xchg
jp
jne
lock
mov
pop
imul
test
lret
cltd
sarb
shr
cmpsb
push
lcall
mov
nop
sbb
push
mov
mov
jle
dec
mov
outsb
jecxz
incl
cld
adc
mov
adc
push
icebp
aad
push
ficomps
pushl
inc
dec
sub
xchg
xchg
fbstp
push
into
loop
jecxz
in
loopne
movsl
enter
lcall
mov
mov
push
mov
cld
inc
pop
pop
lods
jl
jecxz
jno
cmpsl
shrl
add
incl
outsl
or
call
xlat
add
in
jg
jae
loop
sub
repnz
jmp
mov
add
sahf
stc
out
incl
loopne
jno
ljmp
outsb
dec
cmp
push
loope
lods
jb
test
pop
adc
js
mov
stos
fs
pushf
aaa
mov
ja
stos
fidivrs
mov
jecxz
sub
sub
incl
lret
dec
fcomps
mov
adc
rcrl
dec
movsl
lcall
inc
jns
clc
sub
stos
mov
inc
adc
push
fs
das
rclb
jg
jnp
xor
and
out
xchg
jo
lcall
cli
das
xor
pusha
and
fisttps
iret
call
add
xlat
mov
push
inc
mov
leave
incl
mov
faddp
roll
sub
imul
popf
and
adc
push
mov
jmp
dec
pusha
sbb
jo
mov
inc
push
call
inc
outsb
sbb
data16
pushl
loop
adc
dec
stos
cs
fwait
mov
addr16
aad
decl
xor
call
sbb
incl
daa
xor
push
aas
dec
xchg
lret
add
pop
outsb
cmp
inc
or
push
adc
ljmp
stos
in
xchg
pop
pop
xor
enter
jl
sub
push
lcall
or
in
daa
jno
mov
add
repnz
push
call
dec
je
push
lods
insb
mov
mov
or
inc
push
sub
bound
pop
into
cwtl
sbb
pushl
jmp
popa
or
xchg
push
mov
out
fists
inc
lret
stc
and
pop
lds
mov
mov
leave
cmovne
lahf
fcmove
ds
arpl
shrl
or
ja
in
mov
mov
jno
xor
aas
repnz
outsl
push
pop
movsb
or
xchg
popa
mov
stos
addl
and
mov
incl
aad
mov
aaa
jl
mov
ret
rcll
pop
enter
dec
outsl
jno
jg
cld
ja
cmc
movsb
jmp
out
lret
popf
sahf
loop
adc
mov
int
xchg
mov
push
xchg
sti
incl
ljmp
popa
cmp
dec
pop
sub
ss
dec
push
inc
out
aam
fdivs
ljmp
shlb
mov
inc
mov
mov
sub
cld
mov
push
mov
xor
mov
jl
imul
inc
daa
jl
mov
outsl
decl
and
fdivs
popa
cmc
mov
jl
or
dec
icebp
mov
repz
roll
rcrl
std
out
fiaddl
mov
incl
out
or
sahf
xor
ljmp
push
pop
pop
repnz
sbb
and
rcrl
jmp
not
pop
jbe
xchg
mov
push
xor
imull
insb
imul
loopne
ja
xchg
cmp
lods
push
icebp
mov
mov
jge
mov
cld
xchg
push
in
add
inc
out
subl
or
jnp
inc
jg
jae
mov
mov
arpl
jecxz
aas
inc
inc
jl
push
jmp
adc
mov
imul
call
fbld
add
ja
push
imul
cmp
pop
xor
and
out
inc
push
mov
cmp
push
mov
out
dec
mov
in
daa
xchg
sbb
cmpsb
xor
cld
pop
call
inc
mov
mov
lret
jge
inc
or
sub
mov
ja
cmpsb
ljmp
aam
leave
iret
pop
jno
sub
sbb
add
adc
sbb
ljmp
subb
test
pop
lds
aad
call
leave
ds
xor
jb
jecxz
pop
mov
jle
shlb
jno
fwait
in
aam
xor
mov
jns
insb
repz
and
jmp
stc
ja
mov
int3
sbb
test
or
mov
bnd
ljmp
mov
repnz
mov
mov
lcall
mov
and
scas
clc
mov
cmp
xlat
imul
xor
sub
es
ljmp
popl
enter
test
dec
and
imul
call
movsb
jecxz
sub
cmp
loop
lret
movsb
mov
mov
scas
xor
sti
fildll
mov
stc
mov
or
cmp
mov
lcall
fildl
push
or
xchg
adc
dec
mov
push
fbld
push
push
cmp
xor
push
sbb
fs
xor
pop
outsl
inc
mov
stos
repz
scas
sub
icebp
jmp
orb
mov
mov
and
cmp
pushf
das
bound
ss
decl
add
faddl
js
jo
lret
adc
pop
sub
pushl
repz
stos
mov
insl
pusha
inc
mov
or
add
ja
mov
ret
imul
push
inc
sar
scas
or
lret
mov
ds
subl
cs
mov
outsl
cmp
movsl
sub
outsl
push
adc
xchg
mov
test
ljmp
clc
es
ss
sub
hlt
push
frstor
xlat
xchg
add
xor
pop
add
pushl
mov
push
movsl
push
dec
loopne
cmc
push
insb
pop
adc
test
insb
add
jp
jg
mov
pop
pop
aad
test
jbe
rcl
mov
jg
xlat
jbe
cli
fwait
xchg
inc
rol
in
insb
inc
enter
pop
and
fs
call
fcmovu
jno
lea
out
or
out
xchg
lea
imul
loop
or
orl
cmpsb
xor
gs
mov
jmp
pop
mov
decl
jae
les
lret
test
int
pusha
cld
push
cwtl
ret
popa
push
lret
fldcw
js
cld
enter
and
movsl
cmp
out
mov
aas
stos
out
xor
pop
push
int3
jnp
xor
mov
push
xchg
cmp
pushl
mov
cli
add
mov
sbb
mov
stos
shr
or
incl
icebp
movsl
lock
adc
fnsave
jbe
pop
fwait
cwtl
pop
jecxz
pop
pop
jne
dec
push
or
jp
movsl
xor
cli
ljmp
xor
adc
cmpsl
pop
cmp
loopne
mov
cmpsl
in
cmp
loope
add
push
ret
cmp
mov
dec
ljmp
mov
mov
sub
jg
imul
jmp
jecxz
dec
push
cld
jecxz
jb
dec
test
push
sbb
loopne
jb
jno
mov
push
mov
les
push
add
inc
sub
jae
dec
dec
aad
or
fcomip
int3
mov
add
js
sbb
lcall
push
es
in
cli
pushf
xchg
fs
push
clc
mov
pop
sbb
sbbb
inc
lea
scas
push
dec
fmul
xchg
in
pop
sbb
aaa
push
xchg
pop
mov
popa
in
dec
push
mov
push
lcall
outsb
dec
adc
ljmp
inc
jmp
adc
aam
dec
nop
shrl
test
jmp
add
bound
popf
faddp
push
push
xchg
aaa
clc
jnp
aas
mov
mov
fstpt
daa
cmpxchg
mov
push
in
test
lea
lcall
xchg
dec
xor
cmp
sbb
call
js
dec
pop
mov
jno
jbe
fwait
or
mov
call
ss
or
rcrb
or
xor
sub
fiadds
jno
incl
cmpsb
push
push
sub
outsl
es
out
jmp
pop
int
into
shll
xchg
hlt
mov
into
lods
xchg
ljmp
jp
jbe
shl
icebp
add
dec
loope
sbb
cmp
iret
andb
sub
fs
repz
filds
leavew
mov
pushl
iret
pop
adc
and
cwtl
xchg
cs
lea
mov
push
jbe
jecxz
push
jmp
pop
stc
sbb
mov
push
das
jns
pop
adc
cmc
inc
jne
outsb
xor
push
pop
pop
arpl
fstps
inc
mov
dec
mov
fs
mov
cld
ret
incl
cmpsl
insl
adc
jge
sahf
push
pop
popf
jp
cmpl
dec
lahf
jnp
cmpsb
fmuls
mov
xor
mov
frstor
imul
lock
fs
and
fsubs
xchg
stos
lcall
xchg
ret
lret
mov
movsb
and
pop
pop
adc
add
adc
xor
jmp
out
out
mov
and
xchg
mov
add
inc
push
cltd
cmp
adc
incl
lcall
inc
dec
mov
cld
or
jge
scas
nop
scas
sbbl
cwtl
lds
ljmp
pushl
cmp
out
inc
mov
test
mov
dec
pushf
push
adc
xor
jp
mov
in
sub
xlat
jo
rclb
push
adc
sahf
inc
loop
jae
push
lcall
jmp
inc
fmuls
push
lret
dec
jp
cwtl
xchg
sub
or
outsl
or
sbb
pop
cld
std
lds
subb
jb
or
mov
sbb
dec
mov
pushl
inc
push
sarl
xchg
pop
dec
mov
imul
cs
cmp
add
lcall
int3
sub
mov
in
rorl
movsb
aam
mov
jg
shl
or
fcom
dec
arpl
popf
scas
arpl
out
jmp
add
testb
xlat
xchg
push
movsb
push
fmuls
inc
xchg
outsb
mov
ljmp
faddl
or
xchg
pop
test
out
mov
iret
mov
call
adc
cld
lods
jb
scas
sub
out
cmpb
rcll
andb
push
push
outsl
into
aaa
repnz
scas
push
js
stos
aad
mov
ret
nop
fwait
inc
outsl
in
test
mov
mov
dec
cmp
inc
pusha
pop
or
lods
mov
popl
ret
out
cmpsl
jg
loope
inc
xchg
std
mov
incl
jne
or
leave
add
bnd
mov
gs
iret
rclb
push
jge
icebp
dec
fcomi
xchg
and
and
cmp
sub
icebp
ljmp
aam
cmp
add
repnz
cmp
imul
incl
sub
ja
ret
push
cmp
or
xor
and
mov
adc
insb
cmc
xor
es
incl
cmc
sbb
and
pop
inc
xchg
inc
arpl
imul
jle
inc
sbb
mov
push
sub
das
cmp
add
insl
sti
inc
xchg
aas
mov
addr16
cmp
dec
inc
mov
sub
mov
dec
jecxz
sbb
pushf
and
incl
jnp
and
lock
idivl
scas
pop
adc
mov
ljmp
movsb
stos
fsubs
pop
enter
stc
not
cmpsb
nop
mov
daa
push
lcall
jmp
add
sbb
inc
add
mov
push
and
push
xchg
pop
into
filds
cmc
xchg
sub
out
orb
jge
addr16
int3
and
xchg
jp
incl
ljmp
mov
fmulp
or
mov
jg
mov
xor
mov
test
int3
and
popf
or
inc
xorl
incl
xorl
push
adc
sti
add
stos
mov
pop
les
pop
and
add
call
dec
and
jecxz
sti
mov
and
into
sarb
lods
xchg
cli
pop
std
pop
hlt
inc
rcrl
inc
out
dec
into
out
loop
aaa
cld
decl
rolb
cmp
push
loopne
gs
out
xchg
adc
jae
jnp
repz
jne
in
adc
mov
jle
jmp
movsl
loope
push
inc
push
xor
inc
dec
ja
lret
movsb
cmp
adc
adc
adc
adc
push
bound
pop
lock
adc
mov
pop
xchg
je
or
pushf
pop
cmc
movsl
cmp
jg
push
add
stos
jle
mov
push
ficomps
imull
xchg
adc
js
int3
sbb
pushl
push
stc
pop
sub
jmp
mov
xchg
mov
pushl
pusha
lea
daa
cmpsl
mov
xchg
leave
andl
sahf
jmp
adc
push
std
push
cmp
jo
sbb
sub
jle
pop
scas
inc
adc
mov
aam
call
xor
rolb
orl
mov
std
les
mov
cmp
cli
mov
mov
cmp
push
sbb
push
ljmp
and
insb
imul
mov
idivl
inc
testl
pop
mov
push
xlat
ljmp
decl
stos
add
test
jge
movsl
orl
mov
lds
jl
jno
push
cld
cmp
inc
jle
cmpsb
lds
insl
fldcw
jmp
jb
movsl
xchg
mov
call
mov
push
jecxz
mov
dec
push
mov
repz
in
sarb
ljmp
incl
fstps
add
clc
cmp
sbb
in
pop
mov
sbb
xchg
call
xchg
pop
lock
xor
cmc
leave
add
mov
mov
lcall
inc
jmp
jno
aad
lds
pop
push
int
cmp
lcall
scas
popf
pop
push
popa
scas
or
inc
shufps
call
repnz
xchg
mov
arpl
in
push
in
mov
lcall
std
js
mov
movsl
fnstcw
ret
sti
adc
mov
or
mov
inc
xchg
dec
xor
jmp
stos
pusha
mov
jmp
cmp
xor
fs
add
call
movsl
leave
sbbb
xor
call
push
sbb
jg
ss
cmpsl
mov
dec
fimull
sbb
pop
nop
in
jb
std
call
les
push
dec
movsb
push
hlt
imul
add
add
pushl
mov
ds
jp
lea
sarb
jge
xchg
orb
das
jnp
and
and
cli
out
shrb
repz
sbbb
je
out
into
or
jo
sub
sub
xchg
pop
inc
cmp
lea
aaa
pop
repnz
add
faddl
adc
fdivr
incl
shl
lcall
mov
jo
or
cltd
pop
into
push
xor
movsb
in
mov
fdivrs
jo
xlat
jb
mov
fiaddl
shlb
mov
xor
lcall
fimuls
jl
pop
iret
jae
int
adc
cmpsb
int
mov
jg
xor
mov
push
add
dec
mov
mov
lcall
mov
adc
jg
lods
jne
dec
inc
mov
mov
decl
movsl
je
mov
jno
inc
ficomps
push
scas
mov
jl
repnz
push
mov
int
call
in
cli
icebp
xor
sub
pop
sbbl
add
adc
shll
ljmp
mov
inc
sti
movsb
jmp
push
nop
loope,pt
mov
nop
add
popf
data16
addr16
mov
inc
sub
jno
cmp
push
je
pop
adc
lret
mov
loopne
mov
rclb
jmp
test
jp
fidivl
stos
call
ja,pt
mov
movsl
scas
jg
xor
decl
aad
and
sub
jp
out
xor
aaa
xchg
int3
popl
aam
push
mov
add
fs
neg
or
repz
cmp
mov
jae
adc
lock
pusha
cli
dec
pushl
adc
mulb
add
fstl
repz
lock
add
mov
jecxz
pop
mov
jle
ret
xchg
sbb
incl
cld
mov
int3
dec
aas
cmp
aam
push
mov
call
sar
test
mov
in
sub
jmp
mov
insb
out
sub
adc
ds
arpl
ret
add
dec
es
incl
push
popa
shl
lcall
inc
pop
inc
mov
or
bound
imul
xor
dec
imul
pop
jmp
sahf
cli
stc
dec
mov
sub
repz
mov
pop
xlat
sahf
mov
and
adc
mov
cld
decl
out
xchg
push
xchg
loope
les
cmpsl
sub
mov
mov
pushl
sbb
inc
dec
jne
cmp
fimuls
xchg
icebp
dec
stos
cmpsb
testb
daa
fildl
lret
pushf
mov
or
dec
mov
imul
test
cld
jmp
dec
xor
fcomi
adc
and
jg
add
dec
xchg
test
cmp
ljmp
clc
push
mov
out
sub
adc
push
mov
out
call
push
xor
push
pop
inc
sbb
xchg
shlb
lcall
lahf
inc
push
xchg
cmp
in
loopne
insl
mov
push
dec
add
imul
ss
mov
xchg
and
push
mov
sub
sub
cmp
dec
xor
adc
adc
push
fisttpll
push
call
fisttpll
push
rcrb
gs
popa
xor
scas
add
insb
or
add
push
and
adc
jmp
or
cmp
sub
push
sbb
add
vpaddusb
push
pop
pop
popa
in
sbb
cmc
incl
xor
outsb
clc
cmpsb
push
ret
mov
test
dec
xchg
pusha
cli
fstpl
scas
inc
jg
or
or
stc
mov
or
mov
sar
lcall
or
xor
jl
enter
sbb
aas
nop
xor
and
xor
ss
jg
lret
hlt
repnz
xlat
add
add
test
jg
or
and
jne
ss
jge
push
pop
and
stos
movsb
jne
aam
xchg
add
fsubl
and
jo
xchg
cmp
loopne
mov
imul
jb
ret
sbb
mov
mov
mov
iret
mov
sti
ret
push
and
pop
sbb
jmp
or
mov
dec
and
clc
lock
mov
das
sub
xchg
push
dec
pop
out
ljmp
lds
add
or
out
lcall
sbbb
call
jb
and
jmp
imul
xchg
pop
out
adc
dec
jmp
inc
scas
scas
xchg
mov
ljmp
out
mov
outsl
xchg
fistps
pushl
xor
addr16
mov
arpl
lret
sub
jo
test
in
add
out
dec
xor
mov
push
jecxz
add
sahf
pop
dec
insb
in
jg
and
bndldx
lcall
ljmp
lods
cmpsl
out
mov
aam
mov
fldl
inc
and
dec
push
cmp
jmp
push
scas
mov
dec
js
rorb
xchg
add
cmp
mov
insb
jb
divl
in
arpl
or
and
jo
jb
scas
into
push
hlt
loop
push
out
fists
cs
dec
movsb
jmp
fs
stos
fs
pusha
lcall
mov
cmp
call
xchg
adc
adc
mov
bnd
xchg
and
stc
imul
pop
repz
pushf
out
push
test
addl
ljmp
sbb
lcall
push
ret
dec
icebp
adc
jle
cmpsb
or
cld
xor
outsl
mov
mov
call
call
test
push
cltd
mov
jle
insb
mov
sbb
ret
repnz
outsb
or
jg
push
inc
lock
xchg
pop
jle
sahf
pop
sub
xchg
xchg
bound
cmc
das
call
incb
lahf
pop
in
sti
decl
lock
sub
xor
repnz
push
js
xor
addl
adc
ficomps
lret
add
cld
mov
nop
cmpsb
lcall
mov
adc
adc
lcall
out
out
fstp
mov
ja
arpl
clc
es
aam
lcall
stc
cmp
lds
fldcw
lahf
ljmp
shl
cmc
outsb
pop
pop
cwtl
movsb
shrl
xchg
sbb
jno
hlt
jge
pop
pushf
in
or
sahf
mov
xchg
mov
mov
outsb
outsb
mov
out
aaa
inc
mov
les
cld
or
dec
je
pop
fidivrs
cli
decl
mov
xchg
cld
lds
arpl
jns
leave
in
or
sbb
imul
insl
pop
jg
mov
mov
pop
data16
loop
push
inc
inc
dec
ud0
fdivrs
mov
test
mov
fiadds
xor
inc
xor
xor
pushl
inc
cmp
fs
pop
stc
std
mov
enter
push
jne
outsb
ds
sub
sbb
pushl
pop
shl
cs
shl
daa
add
xlat
xlat
pop
test
test
fldl2e
insb
call
clc
fidivrs
dec
adc
mov
xlat
and
pop
jge
add
cli
and
dec
adc
cmpl
dec
sti
cltd
push
jmp
je
jbe
xor
repz
xor
sbb
ljmp
shll
cwtl
adc
aam
pop
pop
sub
or
xor
aad
cmp
fs
push
jns
outsb
cmpsl
scas
lock
xchg
push
xchg
and
xorl
xor
dec
sub
sub
cmc
adc
out
pop
cmp
call
repnz
loopne
lret
test
scas
xor
adc
add
sbb
push
fwait
aam
fisubl
sub
pop
or
xor
and
adc
call
xchg
sub
xor
mov
dec
sbb
lret
je
in
sbb
adc
cmp
adc
lcall
xor
dec
sti
cmpb
insl
inc
mov
xor
lods
int3
cmp
pop
lcall
cmpsb
addl
push
push
mov
cmp
icebp
inc
pushl
rclb
jno
jb
sbb
scas
add
addr16
imul
jns
mov
cmp
mov
in
pusha
movsb
bnd
mov
adc
cmp
jmp
pop
push
push
jmp
xchg
rcll
cmpsb
dec
mov
jmp
add
jns
push
dec
pmovmskb
or
cltd
in
sti
mov
in
jecxz
gs
fsub
jno
lcall
jae
lock
dec
cltd
out
sbb
ret
push
aas
or
idivb
jmp
jmp
sub
xor
adc
sbb
popf
lock
orl
sahf
jno
clc
call
cmpsb
and
leave
shrl
outsb
xor
xchg
push
pop
cmpsb
jae
add
jns
push
sub
mov
int
fdivs
cltd
lcall
xchg
xor
pop
dec
fisubs
dec
or
lock
mov
mov
jmp
sbb
mov
pop
fnstenv
dec
push
testl
xor
enter
scas
call
mov
shl
jb
adc
lods
nop
aad
call
dec
push
mov
dec
jnp
dec
out
push
jge
pop
decl
fcmovb
mov
adc
sbb
jg
jmp
out
insb
xchg
add
or
dec
aam
mov
int
stc
cld
sahf
aam
mov
ljmp
leave
cld
pop
stos
sbb
clc
lods
test
daa
mov
or
add
fimuls
jecxz
mov
sbb
xchg
incl
sbb
or
mov
mov
fsub
shlb
movswl
pushl
jbe
stos
cmp
fbstp
pushf
into
push
and
stc
dec
xor
jp
inc
push
xchg
lods
push
movsb
cmp
push
mov
repnz
and
incl
ret
in
pop
inc
xor
jno
mov
je
add
jmp
lret
sar
pop
push
test
jl
sub
lahf
call
scas
xor
pop
or
mov
pop
clc
incl
cmp
mov
sbb
push
enter
gs
jns
lahf
adc
push
mov
mov
dec
fcoml
add
aad
xorl
daa
ljmp
jnp
scas
repz
es
adc
dec
xor
pop
sbb
addr16
call
ljmp
cld
cli
sbb
fdivl
or
js
movsb
cli
stos
push
mov
add
sbb
xchg
mov
jle
insb
mov
fadds
int
dec
jmp
mov
dec
dec
lret
jl
jmp
adc
xchg
rclb
std
jo
lods
jbe,pt
incl
rcrb
pop
pop
pop
andl
out
popf
dec
sub
mov
call
jns
iret
pusha
dec
int3
fst
ds
sahf
pop
sub
push
out
cmpl
dec
cmp
dec
cmp
sub
push
ss
lcall
iret
lock
mov
fwait
xor
mov
addl
sbb
adc
push
sbb
cli
pushl
xchg
push
stos
add
pop
movsb
dec
cmp
pop
test
cld
mov
cli
fcomip
push
shr
imul
aam
push
mov
dec
dec
pop
jg
inc
mov
xor
lcall
lock
neg
in
cmp
imul
adc
cld
mov
fdivrs
sbb
mov
inc
int3
mov
xor
movaps
jns
sbb
push
push
decl
xchg
shrb
mov
fiadds
rolb
hlt
inc
adc
stos
lcall
cli
out
in
mov
in
sahf
push
inc
cmpxchg
cmp
xor
and
je
loope
inc
js
leave
lods
sub
mov
ret
and
jmp
icebp
or
lret
dec
dec
inc
push
dec
mov
lret
and
aam
subb
test
xor
dec
clc
sub
rclb
mov
jmp
in
pop
iret
dec
insb
dec
testl
mov
lea
ljmp
imul
lds
or
jb
cld
inc
adc
decl
mov
xor
int3
add
mov
mov
sahf
andb
push
inc
dec
jno
cmpsb
enter
outsb
imul
cmpsb
scas
jecxz
mov
stc
pop
inc
loop
in
bound
sbb
sub
adc
xlat
push
dec
movsb
xchg
or
adc
jmp
adc
xchg
jne
jnp
push
sbb
in
test
jg
mov
lcall
pop
int
les
repz
call
lock
dec
mov
adc
pushl
cmp
adc
add
imul
sbb
fs
incl
test
xchg
xchg
push
sub
mov
and
vmaxsd
ljmp
pop
mov
xor
fidivs
lahf
daa
hlt
test
cmp
mov
clc
bound
ljmp
lcall
fdivl
mov
jl
xchg
push
ret
sub
dec
pop
inc
mov
data16
xchg
in
push
rcr
jne
lret
jmp
aas
rorb
jns
and
mov
div
call
push
popa
mov
aam
cmpsl
jp
decl
cwtl
mov
pop
pop
xor
dec
adc
lret
cmp
mov
add
into
dec
mov
fstl
cmpsb
lds
fcoms
cs
dec
mov
dec
jbe
cmpsb
add
std
ja
mov
outsl
inc
mov
dec
mov
add
adc
jg
decl
stc
mov
add
movsl
hlt
into
mov
cmp
jge
push
jecxz
jo
sub
cmc
jle
cmpsl
mov
lock
add
frstor
addb
xchg
popa
lcall
loop
aad
xor
lock
sbb
test
sbb
mov
stos
add
dec
popa
mov
inc
int
stc
lods
addr16
xchg
pop
pop
addl
fisttps
ret
int3
call
mov
cmp
sahf
and
cmp
cmp
push
int3
push
cltd
push
out
push
inc
subb
dec
leave
ret
ret
stos
fsubr
adc
pop
aad
mov
test
jb
and
pop
lcall
pop
add
adc
sbb
mov
mov
pop
mov
jmp
popa
mov
lret
pop
mov
pop
mov
add
aad
push
sbb
lock
in
push
fisubl
cli
push
das
sub
fstpt
mov
add
clc
daa
int
cmp
inc
out
mov
add
ret
sarl
leave
test
pop
cs
sahf
jl
ljmp
imul
ficoml
mov
jns
cmpsb
pop
add
mov
clc
pop
mov
addr16
and
push
and
es
pop
dec
xchg
int3
xchg
in
adc
sti
lcall
pushl
push
loope
int3
int
jge
icebp
imul
mov
mov
stc
sar
push
bound
push
xlat
mov
ljmp
fnstcw
mov
in
rclb
push
data16
into
mov
mov
incl
mov
sbb
lahf
xlat
xor
or
pusha
in
adc
mov
jno
adc
pushl
xlat
or
jge
sub
inc
dec
addr16
add
adcl
mov
jnp
mov
mov
push
divl
lea
mov
mov
jo
int
mov
xchg
pop
jg
add
or
cmp
fwait
js
xchg
inc
js
or
jmp
dec
mov
sbb
call
cmp
sti
xchg
nop
imul
lcall
ret
sbb
adc
call
mul
mov
les
add
xchg
mov
jbe
cmp
cmpsl
dec
add
ret
inc
mov
mov
es
loope
mov
addr16
or
xor
xchg
cwtl
jmp
sbb
rclb
into
add
cmpsl
mov
loop
mov
cmp
and
ljmp
jo
popa
out
mov
push
je
xor
dec
adc
out
ror
dec
xchg
add
jle
mov
jle
pop
out
out
gs
fisubs
cld
daa
mov
mov
push
ds
inc
punpckhwd
decl
or
mov
pop
or
cwtl
loop
cmpsl
dec
lock
insb
xchg
or
fs
jmp
adc
sbb
pop
mov
hlt
dec
ffreep
ficoms
decl
lcall
jl
inc
pop
shlb
mov
xchg
pop
shrl
xchg
out
mov
lcall
repnz
mov
cmp
sub
mull
cmp
inc
cmc
fimuls
push
cmp
es
xor
in
dec
cld
enter
xor
jmp
rcll
mov
mov
or
out
xchg
jae
xor
push
add
jmp
jb
clc
mov
ljmp
xorl
fbstp
iret
roll
mov
lcall
jle
jg
cltd
test
sbb
mov
xor
mov
pop
push
add
sbb
cmc
dec
xchg
jne
mov
clc
test
jle
push
jno
mov
lcall
scas
in
out
fs
in
stos
and
mov
es
push
sub
push
outsb
sub
decl
cmp
mov
in
or
outsb
mov
ljmp
xlat
jge
or
stos
push
and
and
push
imul
stos
popa
add
pop
call
clc
in
js
movsl
add
cmp
imul
mov
bound
add
jo
xor
decl
pop
add
or
inc
sub
test
pushf
and
add
jmp
push
lcall
mulb
or
pushl
mov
mov
iret
scas
jmp
adc
mov
jp
lcall
mov
addr16
or
xchg
sahf
sbb
xchg
idiv
ss
decl
dec
cltd
mov
cwtl
pop
mov
incl
into
movnti
sbb
jmp
cmp
jae
push
arpl
pop
call
aam
insl
pop
pop
adc
jge
cmp
ljmp
ret
xchg
jge
dec
dec
xchg
dec
cmp
divl
add
fidivs
cld
lock
pushl
jnp
sub
mov
das
lret
pop
mov
ja
push
fs
ss
rcrb
insb
lret
pop
sti
dec
dec
xor
lcall
rcrl
not
sub
loop
xor
mov
call
sbbb
jnp
mov
add
sub
inc
fs
shr
enter
lcall
ret
mov
pop
mov
push
cmp
pop
mov
pop
pushf
in
sbb
xor
incl
and
data16
or
cmpb
lret
daa
push
pop
fadds
divl
int3
or
mov
fbstp
popf
mov
cmp
cld
stc
into
inc
inc
bnd
sub
adc
xchg
ret
mov
xchg
xchg
andb
into
dec
xor
sub
call
adc
xor
insb
push
jnp
frstor
ret
loopne
incl
ret
icebp
ds
dec
jmp
cli
adc
push
repz
mov
and
adc
test
mov
clc
adc
dec
mov
fcomps
cmp
or
jo
sbb
cmp
mov
push
push
mov
fwait
sti
insb
cltd
scas
jo
xchg
cltd
xor
push
push
cmp
or
ljmp
scas
push
xchg
add
dec
rcl
shl
leave
dec
cmpsb
lea
push
jo
jno
xchg
push
std
nop
push
movsl
adc
div
imul
sbb
les
lods
iret
cmc
ja
call
mov
mov
jecxz
jne
mov
mov
mov
ljmp
nop
inc
leave
ret
xor
push
jns
icebp
repnz
loope
mov
push
pusha
mov
ljmp
mov
and
push
xor
mov
clc
jecxz
mov
jns
pop
repnz
call
notl
popa
mov
outsb
push
leave
psllw
int3
sbb
mov
xchg
loopne
cmp
inc
push
repz
xchg
lahf
jb
sbb
arpl
adc
push
in
push
scas
mov
xchg
shlb
int3
clc
xchg
mov
mov
xlat
pop
pop
subl
jg
sbb
mov
and
mov
lcall
in
sub
clc
add
sub
mov
std
inc
clc
mov
cli
call
repnz
dec
aas
out
hlt
out
jmp
sahf
xor
mov
clc
mov
mov
push
add
je
add
jns
test
fdiv
push
xor
pop
lret
cmc
cli
jg
jecxz
lock
js
cmp
insb
pop
mov
or
adc
push
add
cmp
ljmp
imul
and
cmpsl
xchg
mov
jecxz
push
shlb
pop
sbb
inc
push
shll
loopne
fwait
mov
out
xor
incl
js
mov
xor
mov
adc
cli
in
pop
in
dec
or
decl
movsl
aad
es
xchg
inc
sbb
inc
xor
pop
sbb
push
sbb
incl
lods
out
inc
xchg
insb
mov
cmp
pusha
cmp
xchg
iret
test
decl
cli
mov
mov
loopne
ficoms
xchg
cld
fisttpl
movsb
add
jg
mov
inc
decb
stos
push
xchg
push
insb
loop
pop
es
pusha
rcrl
pushl
pop
loope
sub
or
xlat
into
and
pop
lods
in
adc
or
pushl
stos
mov
lret
ljmp
addr16
xlat
or
cmc
xor
sub
or
xor
stos
ds
pusha
or
in
cmp
xchg
rcl
fnstcw
mov
jg
cmp
add
inc
rcrb
in
adc
call
rcr
mov
inc
push
lret
enter
xor
pop
ret
jp
xor
push
and
cli
xor
scas
int
aaa
ret
cwtl
and
flds
xchg
stos
cmp
jg
sarb
insb
fisttpl
sub
mov
xor
fpatan
fidivrl
icebp
incl
inc
sub
stos
rcrl
nop
sti
xchg
mov
insl
out
mov
stc
loop
into
addr16
incl
outsl
xor
adc
sub
ljmp
subl
jns
lock
adc
in
test
scas
dec
pusha
mov
mul
loope
push
adc
loop
popf
jg
inc
push
add
adc
jle
es
test
dec
push
fimuls
cmpsb
lret
ljmp
adc
in
pop
add
out
jge
fstl
jns
jmp
fcompl
popf
mov
and
pop
xor
fidivrs
sbb
test
cmp
pop
pop
sbb
cmpsl
mov
jmp
inc
inc
std
dec
cwtl
push
lahf
push
sbb
in
in
mov
in
lock
ljmp
fcoml
stc
arpl
xchg
sbb
outsb
or
mov
std
mov
add
pop
bound
dec
enter
mov
aad
add
rcrl
sbbb
hlt
fcomi
scas
in
addb
outsb
push
or
mov
insb
sbb
add
loopne
jmp
stos
imul
pop
cmpsb
iret
mov
fisubrl
cmp
dec
push
and
mov
lods
nop
mov
inc
aad
hlt
jbe
jge
ljmp
dec
jno
scas
cld
mov
jmp
xor
add
call
push
pop
mov
mov
dec
pop
mov
cmp
pop
mov
das
outsb
adc
sub
cmpsl
lcall
mov
in
xchg
test
adc
adc
xor
out
mov
adc
leave
cmpsb
ljmp
inc
inc
inc
test
ljmp
mov
addr16
xor
xchg
lock
js
or
push
jmp
mov
icebp
push
pop
sub
icebp
cmp
or
mov
add
fs
test
sub
mov
insb
test
xlat
sub
incl
cld
jb
jmp
lock
repnz
pop
or
inc
cmpsl
pop
in
imul
ljmp
or
push
pop
mov
jns
dec
sarl
mov
jo
dec
mov
cs
repnz
sub
lret
mov
pusha
and
addr16
ljmp
xor
int3
dec
es
imul
push
push
movsb
mov
or
inc
les
aam
or
cld
sbb
push
xor
mov
jmp
aaa
rcl
call
add
cwtl
mov
icebp
cmp
mov
lds
loop
mov
or
cmpsb
pop
adc
sbb
stos
adc
into
shrl
inc
in
out
int
jmp
pushl
leave
mov
adc
repz
adc
lods
xlat
mov
pusha
dec
out
mov
out
mov
aam
pushf
add
into
les
scas
lds
insb
popf
out
subb
loope
mov
out
jmp
mov
or
xchg
sbb
incl
clc
out
cmp
jg
cmp
mov
pop
test
stos
add
js
mov
push
out
lahf
push
add
test
xor
ror
ja
push
cld
push
daa
cmp
jno
data16
xchg
sbb
decl
negl
xchg
jns
inc
jge
lahf
sbb
push
outsl
push
rclb
xchg
push
nop
mov
pop
fcomip
iret
jge
add
adcb
loop
cwtl
add
push
pushf
call
stos
xor
jg
xchg
pop
inc
mov
movsl
int3
test
repnz
scas
aad
icebp
incl
addr16
andb
and
push
test
in
xchg
mov
mov
mov
mov
jmp
jmp
inc
sub
loopne
and
jae
test
push
roll
decl
repz
adc
mov
outsl
mov
and
inc
mov
pop
jge
mov
mov
iret
cs
pop
or
inc
mov
fwait
inc
data16
cmp
decb
movsb
ror
pushf
mov
loop
int3
jns
push
and
clc
pop
inc
out
add
in
in
push
movsl
imul
adc
shlb
jmp
sbb
jns
jecxz
sbb
xchg
add
punpcklbw
xorb
push
enter
pop
mov
call
outsb
xorb
aas
push
hlt
or
mov
xchg
mov
andb
pushl
fldenv
sub
das
jb
je
lret
les
pop
jb
sbb
jg
shlb
rcrb
negl
mov
add
mov
and
jmp
adc
mov
int
mov
adc
std
inc
pop
pop
sub
test
imul
cmp
adc
sbb
mov
add
pop
dec
int3
xchg
pop
xchg
loope
in
lds
bound
popf
shrb
fdivr
jg
mov
dec
jns
imul
orps
dec
lahf
sub
ja
setle
daa
jmp
push
outsl
dec
es
ss
xchg
adc
inc
sub
pushl
popa
nop
mov
jle
fisubrs
inc
cwtl
sbb
dec
loop
call
cmp
adc
or
sub
les
outsb
movsl
xor
stos
xlat
jmp
and
dec
jmp
sub
aad
xchg
mov
inc
inc
sbb
xor
pop
test
jbe,pt
ret
sub
shlb
repnz
cmc
movsb
cmp
mov
movsl
mov
ljmp
inc
call
call
loop
fldt
xchg
popa
or
dec
mov
clc
push
pushl
movsl
xor
dec
jecxz
imul
test
mov
icebp
orl
std
lcall
sbb
inc
and
xlat
idivb
jb
jmp
xchg
ret
outsl
icebp
hlt
push
cmp
js
xor
mov
decl
addl
lods
subl
js
arpl
mov
decl
jb
push
in
int
stos
and
push
pop
popa
cltd
sbbb
rcll
scas
inc
lcall
inc
mov
into
aam
pop
inc
sarl
jp
insl
mov
jno
jnp
dec
cmp
ljmp
pop
inc
dec
cmpsl
int3
mov
lret
adc
push
in
sbb
and
cmpsb
mov
push
sbb
dec
push
mov
sbb
out
out
data16
bound
lret
mov
xlat
lcall
leave
mov
imul
insb
mov
sbb
cld
mov
inc
push
mov
scas
cmp
dec
out
mov
mov
es
rcrl
xor
adc
cmpsl
ljmp
repz
mov
mov
cmpsb
adc
repnz
std
jl
out
mov
mov
mov
ret
jo
mov
imul
and
popf
icebp
add
call
mov
and
out
push
outsb
pop
fadds
daa
fwait
jno
inc
jne
and
rcrb
lcall
push
and
test
mov
fwait
push
mov
std
call
cwtl
adc
sahf
jmp
insb
sbb
and
mov
push
call
clc
testb
cmp
jb
std
sub
xchg
stc
ljmp
leave
shlb
hlt
mov
add
cmp
ljmp
arpl
sbb
push
jb
mov
jno
add
cltd
into
and
movsl
mov
sub
clc
push
jno
xor
push
push
mov
dec
jg
aas
push
cmp
gs
add
incb
jae
cmpsl
std
sub
ret
in
lcall
push
cmp
mov
and
int3
mov
push
xchg
jne
lcall
sbb
js
mov
jle
movsl
cmp
xchg
and
fidivrl
xor
or
jmp
mov
jno
sub
icebp
mov
es
and
xchg
and
jg
cli
mov
lret
cld
repnz
mov
leave
sbb
fildl
cs
subb
mov
mov
xchg
lcall
and
imul
int
cs
jle
sti
inc
sbb
xor
aad
inc
outsl
adc
hlt
mov
data16
or
ljmp
stos
dec
jg
fwait
in
sub
adc
fs
push
repnz
mov
call
fldenv
in
push
decl
pop
dec
mov
aad
cwtl
fdivrs
fstl
movsb
dec
and
jmp
lcall
es
and
lcall
sbb
shlb
or
scas
cmp
dec
pop
add
mov
cmp
sbb
lret
jb
lcall
pop
lcall
das
cli
pushf
sub
lods
or
dec
idivb
imul
inc
out
call
lds
jl
std
clc
inc
mov
fnstenv
cltd
or
frstor
mov
push
push
test
insb
jno
add
jge
jbe
add
jg
ljmp
je
cmp
mov
xlat
adc
fcmovnu
lock
fwait
call
pop
rcll
lret
negb
ljmp
popf
cli
lds
adc
sti
lock
cmpsb
fstpt
in
pushl
or
loopne
xor
xchg
and
ljmp
or
gs
cltd
fisttps
call
insl
xchg
sbb
fisubs
insl
sbb
and
and
bound
xchg
repz
out
cli
push
add
aam
movsb
dec
jbe
dec
mov
xchg
jo
dec
jne
jmp
xor
stos
push
push
fcmovnbe
push
xor
cwtl
sub
sbb
sub
inc
inc
push
and
mov
adc
aam
push
dec
in
call
push
inc
in
jne
pop
popf
movsl
sub
mov
call
mov
and
pusha
mov
pop
sar
loop
repnz
cld
rorb
lcall
mov
adc
test
addr16
xor
mov
test
dec
sbb
ds
loope
ja
aam
lods
sarb
xlat
push
push
pop
adc
inc
push
lret
or
ljmp
loop
cmpsb
nop
addr16
push
cmpsl
add
push
cltd
loop
bound
push
adc
test
decl
cmpsb
pop
popf
lock
xchg
jmp
pop
jecxz
sub
xchg
sbb
leave
cmp
sub
std
cmp
cld
fcomps
bound
fistpll
fs
scas
mov
sbb
inc
mov
adc
jmp
xor
aam
sub
ljmp
stc
cwtl
push
push
inc
jae
fistpl
mov
incl
popa
mov
push
jne
std
add
arpl
scas
testl
nop
clc
fcomip
push
movsl
cs
mov
outsl
dec
xlat
sti
push
jecxz
scas
xchg
bound
mov
cmp
jmp
xlat
dec
xchg
test
pop
adc
stc
dec
cmp
jle
xchg
mov
mov
decl
ds
arpl
in
mov
or
outsl
idivl
add
inc
mov
sbb
dec
pushl
and
xor
ret
xchg
mov
arpl
push
ja
aam
xor
std
decl
aad
ret
mov
jl
pop
jmp
jl
jmp
push
lcall
jg
ja
push
lcall
push
push
aad
mov
gs
jmp
sbb
loope
mov
pop
add
cs
sbb
inc
mov
lcall
pusha
add
pop
lds
inc
ss
mov
in
push
lea
mov
push
pop
cwtl
insl
inc
mov
das
hlt
nop
cli
int
aaa
xchg
std
addl
and
pop
lock
js
pop
add
insl
stc
cli
outsb
insl
je
ds
shlb
aas
push
icebp
mov
pushl
dec
xor
adc
adc
mov
lds
jne
mov
adc
imulb
insb
cmp
icebp
gs
loope
push
jg
and
fisubrl
bound
and
xchg
rcl
jg
call
pop
adc
pusha
dec
mov
in
sub
enter
stc
pop
std
jmp
and
dec
dec
jl
ds
shrb
mov
aaa
mov
cmpsb
lods
cmpsb
dec
cmp
sub
mov
cmp
sbb
adc
out
fxch
adcl
push
lcall
sub
cmp
mov
push
sub
adc
cmpl
decl
push
rclb
add
addr16
jg
pop
rcrb
insb
loop,pn
or
imul
cmpxchg
std
decl
push
cld
movsb
add
mov
jns
out
cli
mov
pop
mov
lcall
push
jnp
sub
lret
mov
mov
cs
setns
test
scas
xor
ljmp
in
xchg
call
and
sub
aas
das
add
ss
or
ficoms
add
rcll
or
adc
fiadds
insb
loope
or
cld
subl
jmp
orb
stos
decl
test
mov
lds
fwait
stos
pop
push
pop
arpl
lea
add
fldl2e
aas
in
andl
inc
ss
adc
ret
push
in
add
ds
inc
adc
push
cmc
cld
xchg
inc
sub
imul
pop
and
mov
mov
decb
int3
enter
xchg
jnp
mov
ja
jne
push
imul
test
mov
xor
sbb
repnz
mov
les
push
add
out
je
pushl
cmp
inc
js
inc
movntps
push
andl
mov
mov
call
ds
inc
lret
cmp
inc
lods
inc
cmpsl
push
xchg
shrl
shrb
xchg
call
jno
and
or
fildll
daa
mov
dec
add
cmp
mov
jmp
pushf
adc
ror
imull
icebp
cmp
add
pop
jns
inc
aaa
loop
test
ljmp
js
sub
and
addr16
lret
dec
out
scas
lret
bound
jmp
push
clc
call
push
mov
mov
pusha
xchg
das
cmc
mov
ds
imul
ljmp
ret
stos
adcb
jae
rcr
sbbb
lcall
mov
dec
jnp
ljmp
sbbb
pushl
xchg
cwtl
aad
inc
sbb
inc
ljmp
fbstp
insb
inc
adc
sbb
cs
cmpsb
cld
adc
pop
insl
popl
ljmp
cld
arpl
shll
movb
test
fucomip
fisttpll
pop
call
jp
sbbl
test
jb
add
mov
and
mov
or
xchg
pop
leave
mov
jbe
and
sbb
loopne
sub
out
inc
das
pop
repnz
and
pushl
cmpsl
cmp
jne
dec
call
cli
inc
fiaddl
mov
jmp
arpl
arpl
out
inc
pop
rol
aam
push
sbb
mov
ret
clc
dec
push
pop
outsl
or
sarb
ljmp
bound
ljmp
mov
add
sti
or
cmpsb
in
mov
mov
cmp
icebp
faddl
adc
inc
cmpsl
push
add
ss
fiaddl
pop
dec
mov
jmp
stos
push
pop
push
inc
stc
testl
test
cwtl
repnz
mov
and
scas
cmp
jmp
decl
mov
push
adc
xchg
mov
cli
call
dec
mov
enter
cmpsb
add
jge
enter
dec
inc
sbb
nop
mov
mov
stc
movsl
inc
mov
inc
mov
ficomps
int
mov
inc
push
sar
xchg
cmc
int3
xchg
xchg
cmp
fbstp
jb
pushl
mov
popf
outsb
sub
pushf
daa
aas
sbb
xor
in
adc
decl
mov
fcomp
add
push
lret
cmp
hlt
imul
hlt
inc
sbb
cwtl
mov
mov
xor
jno
aaa
push
addl
jge
jne
lcall
cmp
lahf
xor
mov
add
out
int
pop
lock
incl
mov
mov
dec
repz
xor
pop
mov
xchg
add
cmp
xchg
inc
jns
add
mov
loop
mov
lret
ficompl
rcll
ficompl
inc
int3
jecxz
dec
xor
cmc
les
cwtl
mov
sbb
xchg
aaa
out
inc
psubusw
push
iret
outsl
popa
pop
pslld
sub
pop
movsl
cld
decl
icebp
enter
mov
push
gs
mov
out
iret
test
lcall
jno
xor
pop
mov
xlat
adc
lods
dec
sbb
out
inc
nop
mov
aas
ljmp
jb
sbb
aaa
xlat
sbb
ret
dec
fldt
jmp
mov
sbb
xchg
cmp
insl
push
or
add
decl
pop
inc
lcall
out
push
sub
jge
xchg
clc
mov
mov
movsl
xchg
pop
rolb
into
pop
pusha
mov
fsubp
dec
idiv
fimull
test
adc
mov
sub
adc
jb
or
xor
into
push
pushl
inc
pop
jecxz
sub
mov
mov
in
add
inc
pop
test
add
jnp
add
call
jbe
jp
or
sbb
ret
jmp
call
ljmp
sbb
addr16
mov
and
mov
aas
testb
jecxz
jb
sbb
jg
and
jl
and
dec
ds
xor
cmp
jmp
jb
lcall
loopne
mov
xor
stos
and
mov
ja
decl
ja
in
mov
mov
lds
aam
cmp
or
incl
push
sub
cmp
sub
fcmovu
pop
sub
adc
add
jb
mov
xchg
sub
jo
sar
in
xchg
std
inc
cwtl
lds
jg
sub
stos
or
jns
imulb
sahf
mov
push
pop
stos
pop
xor
pop
out
jns
out
and
pop
sub
cmp
fisubrs
cmp
or
and
add
bound
and
insl
sub
aad
mov
ds
push
js
lock
mov
xor
hlt
jns
sbb
pushl
lock
mov
jmp
les
pusha
clc
repz
sahf
bound
and
jp
cwtl
pop
sbb
push
mov
inc
insl
mov
cld
in
popf
in
cmp
jg
adc
dec
lock
dec
out
int
inc
xor
pop
lahf
test
test
mov
lahf
inc
jo
cltd
add
out
cli
jmp
loope
testl
sahf
add
scas
scas
cwtl
xor
in
inc
xchg
or
ljmp
mov
into
cltd
sub
fcomip
pop
mov
int3
mov
fsubrs
adc
ds
ja
decl
cmp
repz
mov
sbb
lret
lods
mov
addr16
mov
cli
mov
inc
testl
jae
inc
jl
mov
xorb
mov
fisttps
test
lcall
fwait
js
sahf
mov
ljmp
lds
jecxz
xchg
dec
roll
test
cmp
fisubl
lock
jbe
jns
or
xor
sti
sub
fcmovnu
ljmp
iret
push
xchg
and
xchg
cli
or
fwait
sub
cmc
adc
cwtl
xorb
sbb
call
push
dec
sbbl
int3
inc
cmp
ds
inc
lds
leave
xor
call
inc
movsb
jl
sub
sar
pushf
pusha
addb
in
or
imul
mov
pop
in
push
jnp
mov
bound
xchg
jle
and
out
subb
xchg
sub
in
fstps
jg
lret
jg
in
mov
xor
dec
sbb
jg
ljmp
les
mov
stos
jne
insb
xchg
stos
sub
mov
out
ss
int
xchg
cwtl
push
adc
jne
test
adc
loop
dec
mov
pop
negl
repnz
jge
ss
pop
ret
jp
dec
lds
xchg
mov
dec
subl
fists
lods
sar
lcall
cmp
das
icebp
out
jl
cmp
and
imul
pop
inc
arpl
pop
and
and
pushl
out
sub
das
push
out
and
inc
cmp
pop
xchg
movsb
cmp
mov
cmp
pop
mov
xor
add
cmp
jns
pop
push
xor
push
or
mov
cli
mov
or
mov
jo
and
adcl
out
sub
fbstp
and
fnstenv
push
cmp
shrl
imul
xor
jge
aas
popl
dec
adc
cmp
mov
je
mov
ljmp
cmp
xor
mov
sti
test
inc
xchg
aaa
clc
inc
mov
fs
iret
sbb
lret
jl
push
stos
roll
popa
jne
dec
mov
int3
fwait
cmp
out
rclb
fisttps
mov
mov
mov
xchg
xchg
decl
loop
out
std
pop
push
dec
push
lahf
push
cmpsl
inc
mov
mov
mov
decl
data16
sub
push
xchg
lods
sub
fistl
pop
popf
mov
rorl
pop
inc
mov
mov
ljmp
stos
test
jo
std
or
out
jns
pop
bound
jo
sub
sbb
scas
sbb
cmpps
ljmp
out
adc
je
nop
jge
jae
jo
jne
or
mov
jg
incl
shld
or
inc
fnstenv
lock
ljmp
std
inc
insb
push
lds
aas
out
lock
rorb
jge
mov
rcrl
sbb
cli
in
and
jg
frstor
mov
frstor
notl
jge
lcall
in
loopne
mov
cmp
xchg
lahf
push
rcr
pop
mov
xor
pop
call
jle
int3
sub
insl
stos
dec
das
lods
inc
test
test
adc
sub
leave
xor
jecxz
sar
incl
movsl
xor
sub
decb
cmpsb
push
inc
gs
sub
lcall
test
add
jg
sbb
and
mov
movsl
jge
stos
stos
xchg
push
pusha
xor
andl
mov
mov
sub
jmp
sub
aaa
lds
mov
mov
ljmp
jle
jecxz
lcall
adc
fcmove
and
lahf
ret
out
jge
repz
clc
dec
jl
dec
mov
sbb
fcomip
push
jno
out
push
cli
movsl
adc
inc
jl
stos
xchg
xor
orl
inc
mov
and
jge
pushl
jmp
gs
mov
lahf
push
aas
ss
rcll
jae
rolb
call
cwtl
into
or
in
inc
xchg
push
rcr
inc
mov
enter
lahf
cs
call
bound
ss
mov
mov
mov
push
dec
test
cmp
fldcw
je
jns
jmp
jg
sahf
mov
xor
pushf
push
mov
mull
mov
mov
cmp
jg
and
jl
enter
jmp
jp
aas
mov
or
mov
fdivrl
popf
int3
lahf
inc
xor
repz
aam
mov
mov
jg
add
jl
loopne
xor
cmpsl
cmp
out
dec
fs
enter
mov
and
incl
cld
pushl
xchg
icebp
inc
outsl
jp
mov
jo
xor
xor
cld
jle,pn
add
les
notl
sub
inc
movsb
add
jg
sub
movsb
pop
into
les
mov
jg
orl
xor
fcomip
stos
jnp
loopne
cmpsb
clc
xchg
rol
jp
sbb
fcomp
xchg
mov
test
mov
cli
sti
cld
fiadds
push
sbb
imul
in
orl
inc
pop
ljmp
pop
push
test
sahf
jmp
dec
scas
lock
adc
aaa
push
add
cltd
dec
movsb
dec
fmul
ljmp
fsubl
cmp
jp
lahf
fs
xchg
pusha
jno
add
outsl
inc
mov
rcrl
lcall
push
in
and
push
sub
add
add
mov
pushl
movsb
sbb
rcrl
dec
hlt
int
sti
addr16
arpl
fstpl
push
scas
jnp
pop
jl
cmpsb
stos
scas
inc
mov
jge
popl
jl
negl
aam
cmpsb
incl
push
mov
or
xchg
pop
loop
push
add
push
pushl
mov
and
xchg
fldl
mov
aaa
adc
inc
push
xchg
movsl
das
cmp
ljmp
jno
xchg
inc
jbe
push
pop
mov
xchg
inc
in
pop
xchg
xchg
scas
and
insl
hlt
mov
mov
test
mov
lret
or
pop
icebp
add
mov
cmp
insb
pop
pop
dec
mov
xor
lret
add
push
sbb
mov
jmp
ss
loope
out
mov
ljmp
cli
decl
out
xor
lcall
das
mov
imulb
push
test
pop
jmp
xchg
push
pop
mov
xchg
sbb
out
aam
mov
iret
add
mov
adc
push
and
fmuls
cld
inc
and
jo
mov
and
adc
push
xchg
loope
mov
or
pushf
movb
dec
mov
inc
mov
cmp
iret
xorb
sbb
decl
cmp
js
aam
push
xchg
jle
pop
jns
fadds
xchg
inc
xchg
lea
ljmp
pushf
dec
sub
inc
cwtl
inc
mov
mov
aad
sbb
mov
outsb
ljmp
daa
pop
sub
dec
pop
iret
push
test
lods
adc
in
dec
mov
in
stos
ljmp
xchg
adc
je
jmp
loopne
cmp
push
popa
jg
icebp
jno
lcall
gs
adc
mov
rcll
cltd
add
lret
lcall
cmp
jns
jne
popf
loopne
imul
pop
jnp
xchg
fcoms
rolb
test
clc
incl
jg
dec
movsb
pushl
nop
js
pop
mov
sub
xor
ljmp
addr16
lahf
shl
fnstsw
and
movsl
mov
out
ljmp
call
ss
fcomps
or
movsb
out
into
mov
fidivs
sub
repz
das
clc
incl
fwait
jg
loopne,pn
inc
or
xor
xchg
lods
mov
mov
mov
sub
sbb
bswap
icebp
sub
enter
xor
fmul
xchg
sbb
pushl
push
adc
sub
or
and
mov
xor
dec
mov
ret
cld
incl
mov
fstpl
nop
out
loop
iret
mov
xchg
ds
call
jo
xor
mov
xchg
test
lods
mov
out
rclb
sbb
ds
je
ljmp
lret
push
outsb
adc
in
cmp
inc
cs
adc
mov
sub
decl
pop
bound
xor
jp
es
mov
xchg
icebp
mov
push
mov
jno
clc
loopne
lahf
pop
add
notb
in
adc
lret
mov
dec
scas
mov
insl
mov
jp
add
ljmp
push
dec
or
mov
ja
aad
inc
jp
cs
jnp
xchg
lods
gs
fdivrl
loope
movsl
sub
pop
ljmp
lret
movsb
popa
add
inc
fdivrp
lret
mov
mov
jmp
scas
inc
imul
add
push
push
adc
inc
arpl
jno
outsb
xchg
add
add
or
decl
notl
sub
xor
add
std
sbb
dec
test
push
pop
out
pop
inc
cld
pop
incl
sbb
push
ret
in
lret
fidivrl
sbb
loope
mov
pushl
inc
orl
and
jle
add
test
mov
ljmp
jne
outsl
adc
daa
add
stos
lcall
loopne
cli
mov
test
incl
sbb
xchg
xlat
repnz
mov
mov
sbb
cmpsb
insl
gs
ljmp
lods
roll
xchg
and
clc
inc
sub
mov
test
adc
lods
test
dec
jns
bound
pop
jne
aas
unpcklps
stc
sub
mov
subl
add
insl
pop
push
mov
push
cwtl
call
fistl
cld
mov
hlt
mov
mov
inc
or
mov
mov
loopne
mov
inc
xor
cmp
add
xor
inc
pop
and
adc
pushl
sar
pop
int
sarb
nop
sub
push
push
lods
roll
aas
repnz
ljmp
int3
xorb
add
jl
mov
shll
inc
jecxz
xchg
pushf
add
lcall
inc
imul
fisttpll
dec
xorl
not
xchg
decl
les
dec
sub
xchg
imul
xchg
in
movsb
call
push
out
hlt
pop
out
rclb
loopne
add
insl
in
rolb
call
mov
in
daa
mov
xchg
inc
push
pop
sbb
lea
mov
lret
stos
lret
or
incl
mov
jno
in
pop
cmp
xchg
push
mov
push
dec
stos
stos
rcl
repz
xchg
xor
pop
push
shl
js
out
clc
push
push
xor
daa
imul
cwtl
call
inc
mov
pop
pusha
xchg
lods
mov
jmp
jg
fisttpl
dec
rorb
inc
pop
stos
lcall
add
xchg
es
mov
push
bound
imul
dec
xchg
xor
push
mov
das
repz
int3
sub
jg
jg
lahf
ret
jo
adc
add
jmp
push
push
jecxz
notb
shrb
rorl
aas
cmpsb
out
mov
cli
fistl
jge
push
mov
stos
jge
sub
push
adcl
cmc
mov
push
xor
pop
addb
pop
test
sbb
sahf
lock
je
popf
pop
pop
sbb
nop
and
inc
xor
outsl
dec
negb
xor
or
xorl
jg
ss
cs
sub
addr16
mov
int3
mov
or
jl
and
call
lea
jg
mov
dec
out
jmp
push
insl
daa
divb
and
pop
mov
dec
and
inc
push
lods
stc
push
mov
decl
jns
hlt
out
js
push
mov
pop
mov
movsl
fimull
push
lods
cmp
ljmp
jle
cmp
mov
jmp
pop
sub
cmp
mov
pushl
push
test
dec
push
inc
adc
aad
insb
fsubs
sub
loop
cmp
fwait
stos
fwait
test
call
push
or
mov
pop
add
dec
sub
fildll
add
pop
xchg
lock
pushl
jns
inc
loopne
cli
inc
xchg
pop
cmp
mov
out
sub
fbstp
adcl
inc
jp
dec
fsubp
ljmp
cmp
jp
pop
int
pop
jg
es
inc
sbb
pop
movsb
adc
nop
ss
xor
jae
mov
imul
fcoml
add
or
xor
and
push
add
icebp
daa
fdivr
pop
dec
inc
shlb
stos
daa
shl
mov
push
ljmp
ljmp
sbb
push
in
popa
cmpb
call
lahf
push
das
and
in
fisttpl
xchg
push
std
inc
pminsw
mov
inc
popa
aas
inc
ret
hlt
fs
lret
ljmp
sbb
lock
lcall
in
out
outsl
shll
popf
xor
ret
cmpsb
pop
clc
cld
add
mov
sbb
fdiv
or
scas
fstp
cmp
jg
mov
outsl
add
xchg
pop
xchg
faddl
subb
or
stos
mov
xchg
aad
xchg
js
xchg
and
jmp
inc
mov
mov
add
hlt
addb
xor
dec
mov
incl
mov
fidivs
sbb
or
fs
push
imul
std
pop
in
call
push
testl
pop
push
push
aam
or
shlb
pop
push
fwait
inc
inc
add
or
pop
loop
addr16
mov
pop
mov
incl
inc
pop
fs
pushf
or
cmpsb
fisubs
pop
aam
or
test
xlat
loopne
jmp
jbe
xchg
mov
sub
aas
jbe
iret
lret
fdiv
jnp
jb
inc
in
stc
mov
and
jg
cld
mov
pop
lea
stc
rclb
mov
push
and
aad
push
loope
decl
mov
fwait
inc
sti
scas
cmp
outsb
pusha
jnp
loop
dec
and
xchg
cli
xchg
fiaddl
stos
jle
int
jmp
xor
sbb
xlat
cmp
jp
sbb
sub
xchg
out
ds
movsl
ret
mov
jmp
inc
or
mov
ljmp
or
adc
ds
cmpsb
iret
out
mov
aaa
fstl
xorb
popa
fbld
mov
sahf
sub
adc
jmp
pop
ds
jl
mov
fs
jns
jg
lcall
lcall
xchg
ret
es
idivb
and
pop
xchg
es
add
icebp
cltd
insb
cs
jg
push
icebp
mov
xchg
and
lods
push
pop
call
mov
adc
int3
mov
sbb
adc
aas
pop
cmc
lcall
repz
dec
jbe
mov
in
ljmp
jmp
incl
or
mov
aam
mov
loope
jno
aam
inc
std
adc
in
ret
push
mov
inc
xor
lds
xor
inc
push
hlt
xchg
mov
out
out
mov
insb
inc
mov
nop
push
fs
rorb
imul
loopne
mov
fcompl
test
and
push
vphaddbd
decl
rclb
jp
mov
cltd
js
sbb
aam
xchg
into
rolb
cli
xor
and
sub
sti
push
cmpsb
js
push
mov
sbb
aas
adc
sahf
sar
jmp
dec
sub
aas
xor
add
fisubl
xchg
push
mov
adc
jmp
inc
mov
incl
push
fs
adc
lret
xchg
sbb
push
fstps
cmp
lcall
ljmp
lods
stc
outsl
int3
outsl
cmpsb
scas
cmp
mulb
outsb
push
inc
sbb
testl
pushl
mov
cmp
mov
add
sbb
mov
dec
xchg
lcall
es
imul
xchg
inc
inc
adc
mov
fisubrs
popf
js
call
cld
out
jbe
add
ss
frstor
popf
in
push
rcrb
imul
jg
jmp
or
jle
mov
mov
mov
mov
and
pushl
inc
lret
dec
rol
iret
pop
imul
pushl
cmp
fsubs
lret
dec
add
jmp
jno
dec
cmp
arpl
pop
ja
incl
js
stos
push
mov
dec
fistl
repnz
rcrl
mov
call
mov
pop
jno
mov
jg
dec
popl
and
enter
cmp
dec
je
sar
incl
xchg
push
sbb
addl
cmp
das
mov
into
ffree
lea
cwtl
pop
sub
shll
lcall
jmp
ds
push
add
scas
pushf
push
clc
ret
loopne
fldpi
and
sub
cmpsl
cmp
mov
dec
adc
iret
mov
add
aam
xchg
scas
pop
dec
push
push
iret
clc
lret
or
and
ljmp
mov
movsb
mov
and
push
repz
jmp
mov
jg
xchg
movsl
xchg
cltd
and
adc
cmc
sbb
pushf
xchg
or
cmpsl
incl
data16
mov
nop
imul
push
cli
mov
dec
cmpsl
idivb
daa
mov
decl
rorb
sbb
mov
mov
shll
aaa
rorb
call
inc
bound
aaa
movsl
icebp
adc
mov
add
inc
rorl
cltd
test
scas
xchg
les
dec
cltd
xor
scas
add
rol
ss
dec
or
out
xor
popf
or
and
call
insb
mov
inc
into
inc
jnp
daa
pop
test
push
jnp
adc
pushl
mov
adc
fdivp
in
push
mov
sub
inc
sbb
mov
pop
xchg
sub
insb
jg
fdivr
xchg
loop
dec
dec
mov
mov
mov
lret
fldenv
aad
or
inc
push
lea
and
imul
aaa
adc
pop
pop
adc
decl
out
jle
mov
push
mov
stc
jg
mov
jns
adcl
jle
lock
movsl
test
xor
lds
cld
add
cmp
cmpsb
pushl
lcall
hlt
imul
inc
and
mov
aaa
ja
add
shll
call
cmp
inc
in
adc
or
xchg
shll
ja
dec
pop
int
add
sub
mov
mov
mov
xchg
loope
mov
lcall
push
fwait
lcall
dec
ljmp
leave
testl
jp
clc
ljmp
jg
xchg
fadds
loop
mov
xchg
in
jo
jae
mov
scas
push
pop
ljmp
mov
pop
mov
fists
xchg
stc
movsl
lcall
dec
adc
jbe
pushl
sub
jae
cmc
bound
jo
aas
scas
subb
mov
and
js
cmp
mov
stc
icebp
subb
mov
lcall
loop
fld
sbb
mov
fcmovne
and
jle
and
xchg
sbb
sub
ja
jle
mov
test
mov
in
add
rcr
lret
inc
xor
lods
ret
jge
mov
adc
pop
jno
lock
push
mov
out
mov
addb
pusha
loop
inc
push
inc
lahf
data16
sub
ljmp
lcall
movsbl
hlt
jo
cmp
jno
pusha
push
imul
jecxz
decl
arpl
push
repnz
or
pop
daa
sub
jbe
fisttpl
call
sbbb
aas
shrb
loopne
ret
icebp
sbb
imul
mov
mov
push
movsb
mov
fildl
jle
jle
test
lods
arpl
insb
inc
decl
or
iret
lods
cmp
add
inc
mov
adc
pop
into
divb
sub
insb
sub
pushl
jge
sbb
dec
pop
arpl
sbbb
je
jbe
cmp
rorb
add
pushl
inc
ret
in
cltd
push
jecxz
test
push
rcrl
cmp
pop
mov
push
xchg
inc
in
lcall
incb
xchg
test
call
in
mov
mov
xchg
in
int
adc
inc
aad
mov
stc
lock
gs
adc
dec
ror
in
push
imul
ljmp
pop
cmpsb
imul
icebp
and
adc
es
pop
mov
clc
mov
push
jp
lock
decl
ret
jb
pop
adc
xchg
mov
ffree
repnz
sar
filds
lcall
mov
xor
inc
push
insl
xchg
or
sar
jmp
out
sbb
push
out
push
pop
sub
xchg
rcll
jnp
pop
rcrb
pop
mov
jg
lcall
imul
lcall
inc
inc
mov
cs
mov
jmp
inc
loop
popf
lds
mov
push
jecxz
cmpsb
cld
out
leave
pushf
adc
fwait
sahf
ss
fists
lcall
push
call
push
push
adc
dec
ljmp
ds
add
mov
popa
jne
lcall
or
sbb
std
ljmp
adc
pop
mov
outsl
jb
mov
and
mov
es
jle
pop
decl
ret
stos
imul
inc
mov
add
sti
lcall
push
ljmp
call
xor
pop
bound
test
sub
test
inc
andl
xor
ficoms
sub
std
inc
movsb
mov
push
push
jns
out
or
mov
lret
cmp
aas
add
inc
mov
jne
sbb
or
push
repz
stos
jp
cli
insl
movsb
mov
and
lcall
pop
xchg
mov
shrl
and
test
out
ds
mov
incl
mov
fldcw
and
xor
jl
dec
add
call
xchg
lea
int
jo
addb
inc
out
mov
insl
mov
pop
sbb
cmp
cli
or
pop
pop
iret
jecxz
ljmp
xchg
std
fnstcw
xor
and
push
cmpb
pop
lcall
data16
fs
lock
and
in
js
dec
jecxz
nop
jo
pop
hlt
lcall
int3
ret
adc
pushf
lret
inc
mov
lods
mov
scas
inc
fbld
cmp
and
movsl
push
loop
andl
incl
pop
icebp
xor
nop
pop
bound
xor
and
lcall
es
push
mov
push
icebp
andl
sub
adc
out
pop
sti
sub
sub
cmc
cmpsb
adc
inc
iret
cld
stos
xchg
rorb
lahf
mov
bound
call
mov
pop
mov
fnstsw
xor
xor
mull
std
imul
cs
adc
xor
ljmp
jmp
pop
cmp
ljmp
push
je
cli
lds
xor
inc
iret
xchg
push
int
arpl
cmp
or
mov
mov
xor
lcall
pushl
sarl
les
jge
xor
jb
loop
aad
imul
scas
sahf
lcall
data16
clc
imul
addr16
std
pop
iret
testb
cmp
lret
aad
jg
inc
sub
sub
nop
dec
sub
cmpsl
ja
out
inc
xchg
xor
incl
and
mov
and
sub
hlt
ficompl
fnstsw
dec
mov
mov
cmp
loopne
out
cld
ljmp
rorb
dec
add
mov
xor
andb
or
insb
gs
ljmp
test
mov
fidivrs
adc
into
out
bound
sbb
sub
test
stc
or
pop
pop
pop
xor
dec
mov
je
push
daa
repz
adc
mov
push
push
shl
inc
repnz
xor
dec
jns
stos
sbb
sub
lret
xchg
cmp
insb
mov
popl
int3
shrb
hlt
das
shl
in
ss
into
idiv
nop
cmp
sub
inc
ljmp
lds
bound
mov
out
pop
mov
and
call
pop
cli
loope
test
xchg
jp
push
decl
in
inc
pop
mov
sub
add
imul
repz
pop
out
cltd
cmp
push
cmp
dec
inc
xchg
or
sub
cmp
decl
cmp
adc
add
push
lret
int3
out
mov
mov
jge
repnz
stos
and
frstor
sbb
shrb
push
add
push
movsl
lods
fwait
or
ljmp
cltd
add
rep
add
jmp
inc
sbb
ljmp
dec
jne
mov
and
outsb
push
std
mov
sbb
ret
mov
lcall
xor
dec
test
dec
cmp
data16
adc
pusha
loop
xor
pushl
rcrl
insl
adc
cmpsl
inc
add
shrb
lds
jae
or
pop
add
xor
fsubrl
test
call
call
loopne
fwait
out
ljmp
pop
pushf
sar
pop
sbbb
jmp
cmc
pop
mov
int3
jno
adcl
lret
in
jge
insl
jp
pushl
pop
inc
ja
out
data16
sub
clc
mov
lcall
ds
fisubrl
jae
pushl
cmp
sbb
sbb
aam
int
cwtl
add
movsb
mov
mov
out
in
lcall
mov
add
cltd
inc
faddl
jnp
xchg
xor
in
int
inc
dec
push
add
incl
sub
test
data16
addr16
mov
mov
dec
cmp
fimull
decb
daa
pop
sbb
mov
pushl
pop
data16
sbb
cmp
ljmp
loopne
push
bnd
std
dec
ljmp
test
daa
imul
jmp
or
insl
fnstsw
push
fistpll
pop
or
aam
out
push
xchg
enter
dec
mov
stos
icebp
aam
or
push
pop
mov
leave
rcrl
cmpsl
fsubl
or
stos
les
add
fnsave
js
testb
ficompl
outsl
sub
and
mov
fldenv
out
fdivs
dec
mov
popf
pop
mov
lahf
push
imul
mov
ljmp
cmp
imull
stos
sarl
adc
mov
add
aaa
xor
mov
out
lds
fnstcw
xor
mov
inc
xchg
sub
dec
sbb
jmp
push
lret
add
pushf
sub
or
mov
sti
ss
push
fsub
add
jmp
inc
cmpsb
shrl
or
jp
pushf
sarl
jno
and
fmull
or
jo
dec
aam
cmp
xchg
push
ds
sbb
sub
dec
lock
sbb
hlt
mov
lcall
push
cld
fdivrl
scas
in
adc
pop
push
jecxz
test
add
test
add
cld
or
nop
incl
push
clc
pop
out
inc
inc
sarb
icebp
or
jbe
call
mov
jp
test
jmp
mov
mov
out
sti
enter
incl
cmc
loop
sbb
das
dec
sub
test
add
clc
test
insb
adc
mov
aad
jmp
mov
cmp
mul
inc
inc
xor
dec
mov
imul
pop
sbb
push
dec
xchg
dec
mov
scas
push
mov
call
pop
inc
mov
adc
sub
arpl
push
scas
ljmp
mov
jb
icebp
mov
out
popf
outsl
sbb
lcall
aaa
cld
lcall
xlat
shlb
in
shlb
dec
pop
imul
xchg
fisubs
decl
cmp
enter
mov
add
icebp
aaa
sbb
jp
popa
orb
adc
lcall
xchg
mov
jl
mov
int
ss
pop
and
arpl
adc
incl
sbb
sub
mov
xor
add
fildll
mov
clc
push
in
icebp
mov
pop
ljmp
inc
jnp
inc
mov
dec
cmp
decl
in
mov
mov
adc
out
jmp
popf
push
leave
in
dec
jne
mov
fs
das
xor
outsb
mov
sub
hlt
decl
fstpl
shll
lret
or
stos
cmp
f2xm1
cmpsl
scas
lea
loope
mov
fsubl
pop
xlat
sti
mulb
test
dec
jecxz
xchg
negb
insb
push
xchg
jle
pusha
push
lods
xchg
sbb
mov
dec
jp
sahf
mov
sahf
lret
jp
enterw
sahf
pop
push
mov
push
and
mov
xchg
cwtl
repnz
push
ljmp
out
inc
or
ljmp
pop
inc
pop
mov
int
jecxz
push
fwait
mov
int3
dec
sarl
lods
xor
aas
push
mov
inc
mov
movsl
rolb
jno
filds
push
sbb
lods
sub
mov
sarl
mov
push
push
addr16
stos
sarb
loop
pop
std
mov
jmp
jae
or
adc
mov
or
lret
lds
fldt
mov
mov
pusha
push
adc
lods
pop
push
repz
test
stc
add
or
aad
push
pop
jmp
sbb
jns
sub
repz
jbe
repz
or
cli
or
mov
xchg
fdivs
or
push
testb
xchg
call
pop
popa
loope
ret
jg
iret
or
std
mov
pushl
dec
and
jb
xor
cmp
inc
fildl
sub
mov
jle
dec
loopne
lock
inc
sbb
sbb
push
push
int
sbb
test
inc
push
fwait
mov
mov
mov
push
jp
xor
add
lret
lcall
lahf
sti
add
das
cli
loopne
icebp
in
mov
int3
in
xchg
dec
xchg
dec
xor
daa
cmp
xchg
inc
dec
inc
adc
cli
mov
mov
test
and
cltd
jl
add
daa
jl
ja
rclb
fwait
jg
decl
mov
add
xchg
add
imul
or
push
call
imul
stc
ret
and
sbb
aas
push
aad
test
gs
call
in
mov
cmp
jl
testb
sbb
rorb
sbb
popf
mov
in
sahf
ljmp
movsb
adc
push
pushw
adc
xchg
test
push
xchg
cmp
and
fcompl
shll
add
orb
insl
xchg
aam
sbb
mov
inc
pusha
aad
loope
lcall
popa
inc
inc
fs
icebp
lods
ret
pop
mov
rcl
sbb
inc
push
in
in
in
sbb
mov
jg
in
jbe
push
jnp
sub
or
pop
sub
lods
push
ret
jb
out
mov
jb
lcall
dec
in
addr16
aad
dec
pop
jo
cmp
add
mov
pop
hlt
sbb
stc
hlt
mov
jg
js
mov
and
and
add
sub
lcall
mov
test
out
pop
push
dec
jno
fsubl
mov
jne
fadds
call
mov
adc
cmpsl
mov
push
jbe
cmp
sti
lds
icebp
xchg
lods
icebp
into
js
xchg
clc
pop
pop
decb
jle
mov
call
add
stc
aad
push
adc
pop
call
lret
push
jg
or
sub
add
dec
or
pop
jno
jl
jg
pop
insb
dec
push
inc
out
pop
inc
mov
clc
cmpl
incl
testb
mov
and
in
xchg
lret
popf
mov
incl
cld
mov
mov
sbb
gs
jo
loope
xchg
xor
lcall
jmp
mov
xchg
pop
xchg
lods
test
xor
cmp
pop
adc
dec
int3
mov
sti
jbe
inc
fwait
ret
daa
negl
in
xchg
or
lret
or
lock
push
sub
rcr
dec
jp
lret
push
or
inc
dec
cmpl
or
test
mov
outsl
shlb
outsl
adc
ljmp
mov
dec
rorb
cmc
pop
jg
mov
testb
mov
cmpsl
mov
shl
sar
decl
enter
imul
and
leave
ficoml
dec
fwait
stos
sbb
jmp
adc
jae
enter
pop
jg
stos
sbb
fmul
rol
popf
inc
mov
jle
push
and
sti
int
pushl
call
cmp
int
adc
popf
xor
inc
sbb
xchg
movsl
decl
ljmp
mov
or
mov
cld
aam
dec
lds
mov
das
lret
ret
ljmp
arpl
fs
stos
aaa
std
jno
nop
insl
mov
jo
data16
ret
push
repnz
repnz
leave
jns
xchg
insl
popa
pop
cmpb
out
filds
inc
push
out
loop
or
jmp
pushl
mov
mov
imul
aad
out
mov
push
jmp
sti
push
std
dec
clc
push
cmc
lcall
mov
hlt
gs
mov
loopne
cmp
sbb
dec
call
push
call
loopne
insb
jl
fstpl
stos
adc
cmovbe
sub
adc
movl
mov
dec
dec
push
in
jmp
sub
lahf
inc
sub
cmc
fistpll
sbb
lock
or
test
out
lock
inc
scas
cli
sbb
dec
jecxz
mov
rorl
pop
incl
icebp
pop
hlt
outsl
es
push
lret
adc
test
cmc
fcmove
pop
call
psadbw
gs
fldcw
sbb
push
lahf
add
shl
in
mov
push
icebp
jg
and
and
mov
xor
rcl
xchg
dec
out
cld
adc
and
mov
cmp
lahf
jg
incl
adc
into
fdivrl
sub
incl
jo
or
les
ds
andl
popa
jl
js
ds
xor
shrl
decl
test
or
inc
xchg
push
sbb
cmp
std
jg
pop
inc
stos
mov
xor
jne
adc
mov
pushl
ror
dec
adc
pop
or
jmp
fidivs
imul
dec
icebp
mov
popf
stos
or
adc
xor
pop
clc
ljmp
jmp
push
xchg
and
add
adc
int3
stos
xchg
mov
les
call
mov
push
call
push
stos
pop
out
sbb
dec
xlat
das
or
jb
addr16
xchg
push
dec
mov
xchg
mov
xor
cli
dec
mov
aam
movsl
pop
xor
jle
mov
xchg
lods
incl
out
xchg
and
out
stos
xlat
aaa
das
mov
fcomp
inc
add
jmp
jne
scas
stos
lret
fldcw
shl
scas
add
mov
jle
lcall
ret
jae
out
sti
in
cmp
jae
pusha
ss
fs
jns
cmpsl
inc
and
inc
xchg
xchg
cli
cmp
inc
fucomi
outsb
insl
in
push
sbbb
imul
aam
pextrw
jb
pop
jns
in
add
pushl
test
sahf
cld
cli
mov
adc
imul
push
in
xchg
adc
pop
loop
std
mov
pop
push
sbb
ja
aas
incb
jge
out
in
cli
and
pop
cld
fildll
data16
sbb
faddl
mov
or
xchg
dec
jb
ret
push
xor
outsb
pop
fildll
out
int3
iret
push
or
sbb
divl
loop
push
aam
xchg
xchg
jl
mov
mov
push
imul
mov
pop
stc
jne
je
daa
rcrl
ljmp
clc
dec
xchg
push
inc
sbb
mov
clc
xchg
mov
jns
pushf
aad
jmp
arpl
lods
icebp
addr16
aas
lcall
sub
je
sub
add
pop
popf
stos
int3
adc
fcompl
push
popf
pop
jo
pop
inc
mov
xor
inc
popf
add
jmp
out
int
and
ret
hlt
push
mov
outsb
adc
jno
mov
sbb
rorb
decl
sub
outsb
inc
cld
cltd
mov
lahf
call
repz
pop
lock
stos
adc
sbb
dec
loopne
dec
mov
jno
dec
sbb
aam
cmp
jbe
incb
lcall
adc
bound
js
inc
jns
dec
sahf
adc
push
sbb
dec
dec
add
push
imul
dec
enter
aad
ljmp
scas
aam
ds
push
adc
sbb
mov
sbb
cmp
shlb
adc
out
push
pushf
bound
cmc
pop
sub
dec
or
push
lods
mov
aad
jge
jnp
les
or
mov
jb
decl
jbe
pushf
xorb
gs
out
movsb
or
in
in
and
incl
icebp
push
test
mov
lret
data16
xchg
pop
inc
inc
adc
cmp
dec
sbb
cmp
mov
repnz
iret
add
sbb
xchg
imul
test
fsubrs
fs
cmc
out
inc
test
incl
outsl
in
daa
sub
inc
push
sbb
popa
push
lds
dec
sub
dec
xor
fisubrl
shl
cmp
mov
daa
shll
negb
ja
xchg
push
scas
decl
jle
repnz
test
pop
dec
fdivrs
imul
incl
jb
xorb
pop
cmc
push
mov
pushf
adc
jnp
and
cltd
and
jg
incl
sub
push
cmp
add
add
sbb
lret
loop
data16
in
mov
pop
js
gs
adc
xchg
inc
repnz
outsl
cmp
cmp
jmp
push
pop
fcompl
fcomip
xchg
inc
sub
enter
fs
imul
dec
pop
jb
cmpsb
mov
lcall
or
ret
cmp
int3
or
pop
add
sbb
mov
jo
sti
aaa
jg
icebp
adc
das
mov
nop
test
mov
fisubrl
and
xchg
cs
xor
jo
sbb
or
inc
jmp
dec
pop
mov
pop
inc
push
jbe
sub
clc
into
jl
push
test
jbe
fisttpl
sbb
push
outsl
hlt
xchg
test
pop
or
jno
inc
test
out
call
cmc
xor
mov
mov
lock
lahf
jge
loopne
lahf
dec
jle
decl
jnp
inc
mov
into
push
fchs
std
js
sub
push
pop
int3
inc
push
lcall
int
jno
cmp
pop
inc
pop
pop
repnz
dec
push
out
inc
xor
or
mov
jp
and
cmpsl
mov
mov
lods
mov
imul
call
jmp
fisubrs
dec
out
clc
loope
ja
dec
es
push
cmp
jecxz
lea
pushl
out
negb
inc
pop
sub
sub
xchg
dec
lcall
fadds
jbe
ljmp
cltd
adc
mov
lods
xchg
mov
fbld
cli
mov
jb
push
stc
cmc
repz
incl
inc
dec
lret
sahf
push
repnz
in
xlat
cmp
pop
cli
xchg
adc
adcl
add
xchg
mov
sbb
cs
ljmp
xchg
add
ds
xchg
dec
mov
loopne
call
and
inc
adc
cmp
pusha
or
pop
scas
fcmovbe
mov
mov
ret
inc
std
cmpsl
inc
push
das
xor
pushf
aad
loopne
mov
scas
incl
mov
xorl
mov
nop
je
pop
sbb
jle
jg
cmp
ljmp
adc
icebp
in
cmp
loope
lods
push
rcrb
andl
leave
aam
inc
pushf
lcall
in
mov
hlt
xchg
xchg
and
cmp
je
inc
mov
jnp
repz
dec
cmp
call
cli
ss
pop
sti
cmp
movsb
sarb
pop
xchg
adc
out
mov
in
incl
mov
mov
ljmp
in
ss
xlat
xchg
or
push
nop
mov
pushl
jmp
pop
icebp
repz
add
popa
and
add
push
lret
xor
mov
adc
inc
mov
mov
jecxz
mov
xchg
or
mov
fdivrs
imul
xchg
test
inc
mov
mov
aam
out
push
mov
jmp
dec
ret
mov
jbe
testb
sub
cltd
ret
mov
mov
pop
incl
or
add
xchg
aad
movsl
and
movsb
pop
incl
push
or
xor
sbb
movsb
into
jb
loopne
sbb
les
dec
fidivs
fidivs
outsl
sbb
fidivrs
xchg
ret
scas
scas
fnstenv
add
lcall
mov
jmp
xlat
ja
pop
jecxz
cmp
xchg
adc
push
shlb
loop
pusha
add
iret
cltd
int
lcall
test
cmpsl
add
sbb
orb
mov
and
sub
dec
mov
ljmp
push
mov
pop
or
bound
jno
ss
imul
cmp
cmp
inc
std
jnp
or
jnp
mov
decb
cmp
jns
addl
repz
imul
in
dec
js
cli
pop
clc
jmp
add
push
add
cmp
lods
test
xchg
cmp
xchg
adc
ljmp
add
xchg
decb
cmc
push
stc
mov
gs
xor
cmpsl
mov
repz
sub
scas
ss
push
sub
lcall
ljmp
loopne
xchg
inc
movsl
inc
inc
dec
mov
push
dec
jb
icebp
lds
hlt
push
and
ljmp
out
adc
or
push
mov
punpckldq
inc
lret
insl
add
jle
add
jmp
xchg
test
ret
imul
daa
daa
sarb
das
sub
mov
push
inc
dec
bndstx
mov
scas
cli
pushl
mov
outsb
repnz
stos
push
adc
adc
lret
decl
and
inc
inc
scas
mov
daa
cli
shl
aad
lcall
loop
jno
clc
mov
and
outsl
and
cmpsb
mov
pop
enter
clc
lcall
jbe
push
pop
sub
lret
sbb
cmp
imul
xchg
or
lcall
pop
mull
loop
mov
ljmp
sub
add
cmp
jmp
inc
sarb
push
subb
and
clc
sub
sahf
orl
cmp
incl
cltd
pop
aam
int
cli
cmp
xchg
xchg
pop
or
inc
mov
test
lret
pop
dec
jno
jae
xlat
imul
and
mov
aam
int
shlb
inc
xor
clc
pop
jae
or
subb
sub
sub
mov
fs
call
or
jmp
leave
arpl
push
mov
push
daa
mov
pop
push
incl
inc
sbb
jnp
loopne
mov
and
arpl
std
add
out
jmp
aaa
nop
movsb
cwtl
inc
sbb
popa
cmp
jb
stc
ret
sti
test
int3
flds
sub
push
jle
mov
nop
rcr
fildl
add
int
and
lods
dec
mov
inc
call
lods
jb
stos
adc
inc
loop
pop
dec
lahf
js
js
outsl
mov
hlt
push
inc
fdivr
loopne
loopne
add
dec
jp
add
cmp
mov
add
add
add
or
pop
pop
push
or
or
or
mov
push
adc
adc
adc
push
adc
shr
in
filds
or
pop
sbb
adc
adc
adc
add
data16
js
imul
adc
pop
adc
inc
in
mov
inc
inc
pop
add
add
add
adc
add
fiadds
add
adc
push
cmpsb
pusha
dec
xor
imul
jecxz
cmp
add
and
in
incl
adc
pop
and
xor
inc
mov
adc
xor
cmpb
cltd
adc
gs
hlt
and
fwait
mov
lods
xor
xor
inc
test
mov
mov
adc
cltd
sbb
pusha
xor
jae
add
inc
pushf
into
add
adc
cmp
jg
jne
adc
push
adc
pop
popa
jno
and
das
push
xchg
mov
lock
loope
add
mov
inc
xor
pusha
and
scas
fiaddl
or
js
mov
cli
sub
rcr
push
ret
xchg
incl
sub
std
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
std
pop
les
add
mov
cmp
mov
out
cmp
xor
and
fistpl
jg
inc
add
std
push
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
xchg
inc
leave
push
add
adc
pop
std
or
add
lcall
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
rcrl
mov
std
movsl
jecxz
pop
mov
es
jmp
clc
cmpl
jg
or
push
push
addr16
out
or
push
push
xchg
add
repnz
inc
lock
call
xor
fdivrp
cmp
fisubrl
in
mov
orb
int3
lcall
std
aaa
cmp
mov
scas
mov
pop
pop
mov
popl
movb
adc
call
adc
adc
mov
xor
lods
scas
xchg
mov
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
lcall
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
std
in
decl
arpl
push
out
or
push
mov
mov
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
decl
idiv
and
xchg
jmp
sbb
add
incl
mov
push
mov
sub
pop
mov
jl
rorl
shll
pop
jg
hlt
push
fcmovnu
add
stc
loope
mov
sar
andl
aas
icebp
testb
mov
inc
imul
scas
fadds
in
sub
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
decl
sbb
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
into
andl
aas
loopne
cli
adc
outsl
decb
xchg
in
add
inc
adc
loope
fisttpll
mov
fsubp
icebp
aas
std
cli
push
push
push
idivl
cmp
ljmp
jle
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
stc
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
ds
decl
push
scas
cmpsb
orb
mov
imul
stos
or
js,pn
jmp
xchg
pop
clc
pop
hlt
sub
fistl
xor
movsb
add
lea
jg
gs
std
loope
pop
incl
shrl
addr16
adc
ret
das
add
shlb
out
sar
scas
cli
cmp
lock
or
sarb
std
pop
les
cli
mov
mov
mov
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
jmp
mov
push
mov
adc
and
sbb
xchg
jo
and
out
test
jl
imul
rcr
lock
sbb
cmpsl
sahf
imul
fcmovnu
rorl
aad
ljmp
nop
enter
add
cld
call
js
inc
call
outsl
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
add
fcmovu
ds
cmpsl
scas
popa
in
pop
or
pushl
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
call
xchg
and
push
push
jo
pusha
imul
add
mov
cmp
xchg
pushl
pop
es
sub
loop
pop
xchg
ftst
jbe
xchg
and
add
jae
sar
ljmp
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
call
iret
adc
pop
cld
addl
adc
and
fildl
push
enter
jecxz
scas
sub
pop
cld
lahf
cs
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
out
pop
sti
pop
jg
add
jg
mov
aad
test
fcmovnu
adc
mov
mov
iret
push
fistpll
stos
icebp
pop
incb
jno
adc
jg
jg
jl
jecxz
sbb
sarl
adc
loopne
in
pusha
repnz
sar
adc
lahf
xor
mov
push
cmp
dec
push
in
aas
mov
sahf
cmpl
imul
push
and
jg
or
push
clc
xchg
dec
ljmp
add
mov
std
mov
adc
inc
aas
push
rorl
jmp
rolb
pop
inc
jb
fistpl
adc
call
call
sti
jno
pop
nop
mov
inc
sti
arpl
daa
std
or
xchg
lcall
incb
popf
push
loop
sbb
or
imul
xor
dec
mov
pushl
fsubr
fistps
lds
fidivrl
jg
stos
icebp
jg
pop
add
dec
mov
sub
jge
xor
lahf
les
aas
mov
repz
sbb
cld
addl
sbb
rol
stc
mov
lahf
outsl
int3
push
sbb
pop
mov
aas
pop
test
bound
pop
outsl
xchg
decl
lock
inc
test
in
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shr
mov
jp
adc
lahf
mov
or
out
lcall
adc
shl
cld
mov
adc
stos
pop
call
push
jg
pop
shrb
rcl
jg
adc
xor
pop
rcr
dec
ja
decl
pushf
lea
jp
jnp
jecxz
adc
inc
inc
ds
pop
adc
imul
or
inc
pop
xor
rorb
and
pushl
add
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
and
xchg
fsubrp
adc
clc
insb
test
aas
repz
pop
jle
ljmp
mov
in
jmp
stc
out
mov
clc
push
std
mov
and
or
orl
lds
jg
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
shlb
or
inc
cld
or
pop
xchg
cmp
mov
clc
aas
fcmovu
lods
movsb
or
repnz
mov
das
or
xchg
imul
aad
or
pop
in
cmp
jmp
mov
adc
aaa
insl
pop
lock
jmp
hlt
dec
mov
cmp
psadbw
xlat
inc
aas
mov
jg
mov
sub
mov
mov
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
nop
cmp
das
incb
lock
pop
inc
orb
div
cld
idivl
mov
sbb
stc
lahf
loope
jae
jmp
shrl
je
jge
call
push
fbstp
out
xchg
add
out
icebp
mov
loope
lock
js
cmpsl
popf
sti
mov
fbstp
adc
push
adc
jge
aaa
loope
cmpsb
out
cmp
call
xor
incb
mov
adc
mov
and
imul
iret
cmp
or
mov
cmp
int
add
push
pop
aaa
cmp
std
fisttps
inc
pop
cmp
ret
sbb
xchg
fimull
xchg
popa
mov
ret
ror
sbb
aaa
sub
icebp
mov
adc
mov
sub
or
cmp
clc
loope
loope
mov
lahf
jp
xor
add
scas
and
fbstp
xchg
flds
call
and
fdivrl
xchg
lcall
decb
js
pop
fbld
sarl
pop
out
jg
dec
sbb
jno
ret
fs
mov
inc
sbb
iret
call
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
fcoml
mov
push
jae
popa
lds
outsl
pop
hlt
dec
add
pop
stc
push
dec
out
fstpt
mov
enter
popf
xchg
pop
add
cmpsl
mov
daa
icebp
push
lahf
sti
inc
fwait
test
lcall
aaa
sbb
cmpsb
scas
les
pop
xor
mov
mov
or
mov
fsubrl
dec
add
and
add
stos
rorb
sti
push
sti
pop
inc
dec
push
mov
jbe
int3
or
cmp
call
pop
iret
and
xchg
sub
stc
or
daa
adcb
mov
jg
nop
icebp
sbb
and
dec
pop
rol
stos
pop
and
push
test
push
inc
or
add
rcl
push
xor
jno
lret
out
adcl
inc
mov
mov
adc
fstl
jne
jo
imul
ja
push
insb
or
ds
test
or
lahf
inc
push
and
push
inc
sub
or
fsubs
adc
mulb
add
enter
aaa
cmp
inc
gs
gs
or
adc
fcoms
push
outsl
outsl
insb
push
push
jo
xor
jo
push
and
gs
and
js
push
mov
insb
dec
jo
inc
push
shlb
je
jo
add
into
adc
adc
inc
imul
shlb
js
stos
cmpb
pop
inc
fists
jmp
stc
outsb
mov
insb
fs
jns
push
imul
cmpl
cs
pop
push
es
frstor
mov
mov
dec
outsl
insl
insl
cmp
sub
dec
addb
xor
inc
dec
jb
rcrl
inc
pop
cmp
bound
fwait
pop
push
outsb
dec
xor
adc
mov
inc
insb
sbb
sbb
ficoml
loope
imul
mov
outsl
jp
xorl
icebp
inc
adcl
or
pushf
bound
jo
mov
insb
or
push
pop
or
sub
inc
insb
jne
mov
jne
data16
push
xor
imul
cld
mov
add
dec
call
push
inc
push
fildl
push
addl
lds
pop
push
out
popa
arpl
mov
sbb
popa
mov
fiaddl
cmp
movsl
mov
push
or
push
and
lock
popa
gs
fimuls
sbb
cmp
xor
shll
or
pop
popa
pop
inc
rclb
jno
inc
or
dec
push
imul
pop
jbe
push
hlt
mov
jo
push
dec
inc
dec
sbb
sbb
fnstsw
insb
jae
arpl
xorb
lret
rcr
jbe
and
loopne
rclb
push
xor
iret
xor
popa
inc
in
sub
roll
pop
clc
rcrl
pop
push
call
xchg
imul
ja
push
cmp
push
jne
cmp
mov
fcomi
push
add
sbb
sub
mov
enter
adc
inc
into
push
jnp
aas
js
xchg
dec
iret
adc
inc
in
insb
or
pop
inc
mov
jb
sbb
ljmp
fs
xchg
lods
xor
pusha
aaa
push
insl
pop
push
mov
mov
inc
push
insb
or
cmp
into
mov
xor
jo
jp
lods
inc
and
ss
popf
in
jae
adc
insb
sbb
mov
sbb
mov
push
jae
fsubrl
je
lock
daa
mov
mov
pop
xchg
outsl
jns
int
es
sbb
pusha
stos
push
push
sbb
and
cs
push
dec
notl
repz
rcr
mov
mov
ret
inc
je
push
inc
inc
push
sub
mov
adc
shlb
push
sub
sub
insl
sbb
jno
insl
add
sub
push
imul
mov
mov
xor
inc
push
or
or
push
cmp
loope
orb
inc
cmp
mov
mov
js
lods
adc
adc
adc
stos
or
outsb
pop
pop
faddl
or
cmp
push
jne
inc
adc
out
in
inc
out
pop
jecxz
inc
inc
inc
and
sbb
jae
xor
lock
movsl
and
shrl
mov
jo
inc
fs
add
sbb
inc
mov
popa
filds
cmp
sub
sarl
cmp
inc
lods
repz
leave
dec
push
pop
sub
in
push
outsl
ja
jb
cmc
dec
sbb
or
jbe
dec
cmp
push
add
packuswb
cmpsb
repnz
insl
fisubl
mov
add
pop
push
leave
push
or
mov
jp
mov
adc
test
js
add
aad
mov
loopne
push
mov
arpl
cli
shl
ds
add
adc
lret
adcl
push
mov
imul
xor
sbb
sbb
jo
sub
loopne,pt
into
and
movsl
jns
ss
or
sbbl
shll
jne
push
popa
push
and
mov
add
pop
jbe
add
outsb
fisttps
ja
adc
nop
popa
ffreep
xchg
pusha
fcmovnb
jmp
fs
fs
mov
je
and
ret
lock
outsl
push
inc
jb
and
or
inc
push
data16
sbb
inc
lds
stos
insl
xor
std
or
jecxz
inc
imul
loop
push
xor
mov
jecxz
add
fs
out
sbb
jle
punpckldq
inc
dec
stos
mov
jp
je
jae
mov
imul
test
sbb
jne
push
sti
lret
jl
js
enter
xorl
stos
pop
add
jle
scas
add
push
addr16
loopne
rcll
cltd
mov
inc
shlb
inc
dec
push
push
pop
xor
jnp
and
adc
in
pop
xchg
pop
cmc
mov
adc
and
and
jnp
or
add
outsb
dec
in
jl
sahf
cmp
ss
ret
jg
lcall
dec
add
mov
mov
adc
xchg
movsb
dec
adc
dec
rorl
movhps
push
rcrl
inc
add
add
test
adc
les
ret
scas
or
add
and
div
mov
xor
inc
jo
fs
cmp
pushf
bound
xor
adc
push
push
jb
inc
jae
inc
popa
pop
and
cmp
icebp
and
jb
and
and
imul
jne
das
mov
jmp
cwtl
jns
sahf
inc
lock
rclb
push
js
xlat
inc
pop
stos
daa
adc
and
and
ds
cmp
outsb
sbb
stos
shrl
cmpb
pop
lock
test
test
mov
in
xchg
pop
mov
aaa
sub
es
insl
addr16
add
adc
scas
mov
dec
mov
sub
mov
jbe
jb
jo
icebp
pop
arpl
adc
push
cld
xchg
cmp
pop
cs
lcall
xor
dec
fistl
ljmp
dec
jno
pop
or
out
jmp
jb
xchg
gs
jl
orl
js
dec
jg
inc
insb
mov
outsl
ret
cld
popa
imul
sub
loope
shlb
sarb
cmp
hlt
and
xchg
popa
add
fstl
mulb
dec
sub
push
ja
push
imul
lock
xchg
addb
enter
dec
insl
pop
xor
mov
std
or
adc
pusha
mov
dec
ljmp
and
inc
mov
mov
sub
sub
inc
xchg
nop
ss
mov
add
xor
outsb
aas
or
pop
sub
or
xchg
stos
loope
icebp
pop
adcl
outsb
mov
dec
inc
outsb
fistl
xchg
test
inc
mov
je
insb
and
inc
loope
imul
fs
inc
fnsave
xchg
or
xchg
scas
add
pop
jmp
insb
sbb
cmp
js
inc
sbb
mov
cmp
inc
cmp
mov
sbb
popa
dec
arpl
addr16
pop
mov
dec
add
insb
lahf
loopne
add
sarl
loope
shrb
inc
xor
sbb
mov
push
mov
imul
jbe
int
in
subb
pushl
test
and
cmp
out
test
dec
mov
inc
inc
push
jne
xor
jecxz
data16
ffreep
in
fdivrs
sub
mov
ds
es
imul
xchg
cmp
inc
push
mov
add
jne
dec
and
and
popa
or
mov
mov
push
add
rolb
inc
pop
xor
cmp
add
fsubrl
add
inc
pop
adcb
call
sub
push
add
mov
jmp
pusha
pop
adc
shrl
notb
inc
mov
dec
addb
cs
lss
and
add
and
mov
cmpsb
popa
adc
mov
dec
in
push
mov
dec
out
fidivl
mov
fiadds
dec
cmp
sbb
sahf
jae
arpl
out
push
sbb
enterw
clc
mov
dec
or
mov
jg
mov
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
pop
inc
add
add
