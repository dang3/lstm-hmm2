divb
in
mov
mov
mov
inc
add
add
sahf
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
inc
add
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
pop
inc
push
adc
add
inc
fcoms
rol
jo
mov
push
mov
xor
sbb
add
push
add
aaa
fwait
mov
mov
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
jbe
xor
sbb
adc
cwtl
mov
lock
pop
imull
dec
shl
in
or
jo
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
fdivrs
xchg
sub
ret
test
push
xchg
mov
call
addb
das
or
push
dec
and
add
xchg
es
pop
xlat
push
sbb
test
or
sbb
push
and
add
push
dec
dec
cmp
je
out
push
out
jmp
mov
mov
pop
pop
fs
pop
lods
mov
aad
add
mov
push
sub
mov
pop
push
insl
and
orb
add
push
iret
bound
fidivrl
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
outsl
push
rolb
js
sti
mov
mov
xor
mov
pop
ret
arpl
xor
stos
pop
roll
pop
imul
rcrl
sar
pop
inc
sub
inc
clc
sub
pop
or
xchg
es
cmpl
adcl
xorl
sbb
pop
cmp
cli
js
mov
cmp
jg
mov
pop
and
adc
ret
pop
dec
add
mov
pop
and
jmp
enter
xchg
das
pop
push
sub
push
mov
sar
imul
lea
push
cmp
ja
adc
pop
dec
clc
add
push
mov
inc
loope
adc
in
inc
jno
xchg
adc
in
outsb
int3
clc
scas
cmp
jle
mov
cmpl
or
clc
loope
incl
shr
sub
or
cmp
push
inc
jle
add
pop
cltd
sub
rcl
enter
shrl
iret
mov
movsb
pop
cmp
orb
sub
cli
cmp
mov
push
jne
js
incb
add
xor
pop
mov
jle
add
call
jo
add
testl
inc
add
adc
lea
adc
stc
std
mov
and
xor
into
mov
adc
cmpsl
push
cmpsl
inc
cmp
mov
cmpsl
mov
cld
fisubrs
xlat
ja
lods
lea
stos
mov
clc
cmp
roll
mov
mov
jge
test
jle
insb
or
cmp
mov
inc
mov
stos
pop
pop
inc
insl
cmp
loope
or
push
push
cmp
adc
outsl
add
sub
repz
push
jmp
push
lea
lea
inc
push
inc
add
pop
sub
in
pop
push
cli
push
andl
ret
and
sbb
outsb
hlt
adcb
or
jbe
inc
and
cmp
mov
cmp
and
xor
push
push
sti
rcrl
hlt
das
push
out
cmp
jle
mov
inc
or
xor
cmpl
je
push
cmp
cmp
jae
push
cmp
inc
and
adc
cs
or
or
add
jb
pop
adc
pop
adc
pop
leave
fwait
jle
mov
fcoms
jnp
ljmp
in
aaa
cmp
lock
loop
push
push
push
rcrb
sbb
or
adc
or
cmpsb
push
loope
add
jne
pop
nop
out
loop
loopne
cmp
jo
inc
sub
add
aaa
lret
shll
mov
inc
or
pop
or
cmp
add
add
xor
jno
cmp
jne
push
push
push
push
xor
push
test
push
mov
mov
or
pusha
pop
pop
jle
sbb
xor
mov
daa
in
rcr
jne
cmp
lret
xchg
and
add
sub
xor
frstor
insb
mov
lock
mov
cld
pop
stc
add
out
add
sbb
fstpt
mov
add
repz
testl
xchg
pop
mov
and
push
je
xchg
sbb
test
cwtl
ds
xchg
loopne
in
dec
out
mov
ja
stos
or
dec
adc
je
push
adc
aas
clc
pusha
mov
push
repz
inc
xor
push
ss
push
incb
sbb
out
lea
dec
push
xor
adc
lahf
testb
lea
out
jae
pop
shlb
fldcw
add
add
add
jge
repnz
lea
push
dec
pop
xchg
push
cld
fists
mov
fistps
add
push
mov
jb
push
outsl
dec
xor
mov
push
out
fsubrl
adc
and
push
scas
push
inc
sti
add
or
test
cmp
iret
insb
push
cmp
push
push
cmp
je
shll
adc
or
loopne
jne
imul
mov
imul
adc
fwait
or
xor
jb
ja
adc
inc
fsubl
shlb
xchg
cmp
mov
xchg
paddq
mov
aaa
movsl
iret
xlat
mov
mov
mov
or
mov
call
arpl
cs
jno
lods
imulb
xor
sub
jg
inc
dec
mov
or
cwtl
in
cmp
mov
add
andl
or
sub
in
mov
shrl
ss
push
mov
mov
push
adc
lock
lcall
sbb
int3
ret
mov
push
testl
jae
and
mov
aas
pop
loopne
push
loopne
pushl
push
cmp
icebp
add
daa
lret
call
sub
adc
pop
inc
lods
or
enter
add
sbb
je
dec
je
push
xor
push
pop
jmp
push
adc
inc
pop
loop
sbb
movsb
call
add
mov
inc
adcb
push
rcll
jg
int
mov
push
mov
insb
sbb
mov
sbb
mov
inc
and
mov
jae
mov
aam
and
pushaw
pushf
pop
cmc
subl
sub
and
sub
add
xor
aam
test
pop
jle
or
mov
mov
sarb
pop
or
pop
rorl
xchg
and
loop
xlat
sub
lret
ljmp
out
shr
sbb
fisttpl
or
sub
js
and
adc
arpl
loope
popa
add
jle
in
dec
xchg
ds
and
sbb
sar
inc
pop
xlat
andb
je
or
cmpb
lea
mov
fldcw
mov
sbb
pop
movsl
push
negl
pop
ds
das
adcl
pop
dec
sub
adc
mov
push
sbb
or
sbb
push
adc
lahf
cmp
sbb
adc
fists
cwtl
add
pop
sbb
and
add
js
xor
in
js
jl
ret
adc
jb
pop
adc
test
mov
mov
mov
cld
cmp
jg
jne
dec
sbbb
push
cmp
enter
movsl
cmp
les
or
andl
nop
into
or
mov
je
inc
mov
icebp
into
scas
mov
dec
or
or
push
data16
sbb
dec
mov
pop
pop
pushf
sub
pushf
sbb
pop
aas
push
and
inc
and
or
push
jo
int
in
jae
bound
cltd
adc
out
in
sahf
adc
je
scas
jnp
mov
adc
lahf
xor
jbe
pop
ret
lahf
mov
insl
jnp
pop
aaa
push
push
or
mov
xor
dec
sub
fmuls
subl
popa
xor
xchg
xor
data16
push
divb
lcall
orl
je
and
mov
out
scas
mov
int3
sbbb
ljmp
mov
mov
pusha
push
lcall
jo
jne
push
ret
das
pop
add
pusha
add
and
in
aaa
sbb
push
dec
mov
lods
mov
jnp
add
pusha
jp
push
in
mov
adc
insb
movsl
sbb
pop
repnz
je
jbe
in
sub
in
rolb
daa
jo
scas
and
orb
xchg
xor
test
lds
repnz
ds
pop
pop
jmp
sub
popa
jmp
mov
xchg
mov
push
xor
mov
pop
aas
aam
jge
decl
inc
and
fisubl
xchg
xchg
je
out
out
add
push
push
add
insl
cmp
jb
lock
bswap
scas
mov
scas
adc
mov
mov
and
push
je
icebp
bound
adc
xchg
in
push
and
push
filds
or
frstor
add
add
add
fldt
pusha
mov
testb
mov
incb
or
and
test
add
in
sbb
jo
xor
or
push
mov
jmp
ljmp
sub
mov
push
lock
pop
push
sbb
neg
sbb
pop
les
ret
je
push
inc
out
loop
in
and
mov
gs
sub
mov
enter
cwtl
sahf
inc
and
fs
mov
dec
mov
mov
imul
loopne
xor
in
pop
push
add
adc
push
jb
or
sbb
add
mov
cmp
xchg
pop
mov
add
jge
pop
incb
jecxz
dec
inc
outsl
mov
in
das
sarb
sbb
sub
xor
sbb
sub
mov
test
fcoml
dec
jo
xchg
mul
mov
shlb
loopne
jo
cmp
movsb
sarb
js
mov
adc
pop
adc
push
mov
xorl
cmp
cmp
rclb
xchg
rcl
ret
les
pushf
pushf
leave
jae
gs
mov
mov
xchg
dec
mov
xchg
sbb
xchg
xchg
sbb
push
test
mov
xchg
int3
clc
arpl
ret
sbb
leave
enter
ror
cmp
sbb
shlb
sub
ret
sbb
dec
jnp
mov
mov
dec
leave
jae
mov
sub
test
push
test
add
test
jle
pop
pop
pusha
inc
xor
and
insl
inc
ja
and
cmp
testl
loope
hlt
shrb
add
mov
inc
iret
and
cwtl
sub
jo
inc
sbb
call
test
push
or
dec
pop
mov
es
push
ficompl
push
loop
jnp
and
cs
push
xor
sbb
and
add
ret
xor
add
lcall
pop
add
enter
or
jle
lahf
cmp
mov
in
addb
test
and
outsb
and
ficompl
inc
sbb
movsb
and
push
aaa
adc
dec
sbb
orl
pop
push
mov
mov
mov
jae
or
cld
sarl
sbb
ret
lods
pop
test
cwtl
sub
lret
xchg
and
std
and
adc
adc
popl
daa
add
sbb
fsubl
adc
addb
cwtl
mov
mov
cmpl
and
push
pop
push
jmp
popa
mov
ret
push
or
mov
fiaddl
adc
or
sbb
adc
movsb
adc
xor
mov
insl
pop
sbb
push
sbb
fstl
scas
and
jl
and
enter
or
adc
sbb
jecxz
pop
dec
push
dec
mov
in
mov
nop
aaa
xchg
xchg
add
adc
test
sbb
inc
adc
adc
movsl
jno
mov
stc
loope
add
inc
xchg
mov
adc
cmp
aaa
pop
inc
adc
xchg
adc
sub
push
cmc
mov
push
sbb
push
nop
imul
lret
xor
push
and
iret
sbb
sbb
aas
loop
add
inc
jne
shlb
jno
jb
mov
test
enter
sbb
movsb
dec
out
lcall
xchg
mov
loopne
dec
jo
lea
mov
sbb
lcall
fbld
das
jne
push
pushf
pop
nopl
pop
xlat
sbb
shrd
popa
testl
outsl
jg
cmp
je
or
je
xor
push
push
or
push
mov
adc
xchg
mov
pushw
mov
mov
xchg
inc
xchg
and
pop
loopne
das
jecxz
daa
add
inc
ret
or
inc
pop
add
mov
mov
add
test
mov
dec
in
lret
xorb
and
sbb
lock
cmp
add
sti
cmp
je
push
push
pop
ljmp
test
xchg
add
mov
sub
inc
mov
mov
clc
adc
and
shrl
pop
mov
xorb
jmp
dec
cmp
sub
mov
mov
xchg
insb
push
sar
and
stc
sahf
sub
sub
or
bound
inc
xlat
in
add
popa
and
sub
sub
pushf
fstps
add
movsb
std
div
faddl
cmp
negb
aas
rcrl
inc
incb
xchg
inc
mov
cmc
pusha
shrb
test
sbb
loopne
push
fdivl
jns
inc
stc
scas
sub
pop
bswap
pop
test
sub
sub
pop
leave
aam
inc
imul
cwtl
lods
jno
ss
je
sbb
inc
lret
ret
test
cmp
cmp
or
mov
fstpt
cmp
push
stos
add
adc
jb
pop
add
xor
clc
push
insb
push
daa
movsb
xor
test
pop
insb
adc
push
lods
mov
mov
sub
pop
stos
jo
fsubs
jne
jo
out
pop
and
pop
xor
xchg
lahf
mov
inc
sbb
arpl
dec
adc
inc
ret
jecxz
lret
push
push
or
sub
pop
adcb
push
add
test
test
adc
mov
mov
enter
push
push
cld
sbb
sti
lahf
mov
adc
add
pop
cmp
add
or
adc
xor
push
sahf
xor
and
add
mov
hlt
sbbl
sub
nop
negl
inc
mov
jo
push
enter
int3
ds
lds
lea
pop
xchg
add
sub
pushl
jnp
fidivs
dec
xlat
test
xor
dec
push
mov
fsubs
roll
aad
imul
sub
inc
repnz
cmp
mov
and
xor
stc
pop
pop
and
dec
dec
xor
ficoml
cmpl
cmpsb
cmp
mov
repnz
sub
rcll
and
sbb
jne
and
enter
and
xor
andl
lods
rclb
nop
inc
in
xchg
or
ds
cmp
push
jl
jne
bound
pushf
dec
inc
inc
adc
ds
popf
fstpt
rorb
dec
mov
mov
push
or
xchg
pop
icebp
pop
dec
les
adc
dec
stos
xchg
adc
pushl
push
mov
sub
mov
loop
add
in
and
adc
sub
ret
push
je
nop
sub
adc
les
rcll
cmpl
add
iret
sbb
push
mov
mov
dec
sbb
outsb
loopne
sbb
fld
sti
cmpb
jae
jne
push
sub
xlat
ret
call
sub
fisttpll
jne
inc
adc
or
in
gs
orb
jmp
cmp
push
mov
nop
out
adc
pusha
cmp
loope
nop
sbb
mov
jmp
mov
clc
cmpb
daa
fs
push
loopne
and
push
shrb
push
outsb
scas
push
dec
lret
add
inc
das
xchg
sti
sub
inc
repz
out
jge
and
xchg
orb
enter
or
lret
jo
inc
mov
cmp
mov
test
pusha
xchg
push
les
jge
jo
and
cmp
out
jo
xor
daa
dec
rcll
sbb
mov
xor
mul
dec
xchg
jo
inc
xchg
add
pop
or
setne
or
dec
or
mov
rcrb
into
add
icebp
aaa
arpl
adc
pop
out
jne
or
je
sub
fadd
mov
in
sti
loopne
je
loope
jg
inc
das
adc
mov
or
in
sbbb
push
inc
faddl
jl
test
dec
push
pop
pop
sub
jo
test
mov
lods
cmp
lock
fsubrp
out
xchg
or
xchg
cmp
fsubs
add
call
neg
test
imul
sub
repz
je
cli
pop
ror
dec
sarb
inc
mov
pop
jns
sbb
fsub
push
out
inc
out
loopne
cld
inc
test
and
or
nop
inc
aas
fnstenv
imul
lock
or
loopne
lods
sbb
cld
or
mov
push
pop
or
push
or
jg
scas
fdivl
add
or
enter
add
int3
add
mov
or
es
fisubrl
jle
push
fdivr
or
sub
call
dec
xchg
call
mov
add
mov
jnp
lock
dec
inc
sbb
je
sub
jle
cld
out
jmp
jge
imul
cmc
jbe
push
xor
jmp
mov
xorb
int3
int
mov
mov
xchg
int3
test
push
sbb
in
icebp
inc
xorb
xor
fstl
inc
sbb
mov
lea
rolb
mov
mov
inc
hlt
xor
inc
mov
mov
jle
push
dec
cmp
adcb
push
pavgw
ret
jle
call
in
sbb
lock
push
mov
orb
mov
shll
in
paddusb
cmp
pop
filds
mov
push
push
add
pmulhw
mov
jbe
pop
clc
add
inc
sbb
sbb
movsb
adc
fcomps
sub
mov
stos
insl
std
adc
sbb
dec
test
pop
lea
roll
sub
or
cmpl
push
push
jne
aaa
or
rcrb
pop
dec
xor
mov
in
inc
xchg
in
cmp
inc
ficomps
cld
test
sbb
or
mov
imul
or
sbb
add
mov
or
xor
push
push
add
pop
ljmp
or
inc
pop
or
cmp
std
popa
xor
add
mov
das
jle
popa
cmp
inc
nop
es
dec
xorb
push
imul
pop
fmull
jp
fcompl
movsb
adc
add
pop
sar
in
loopne
pop
cld
loopne
orb
add
test
lds
lahf
call
into
sarl
aam
enter
test
or
rcrb
push
nop
or
push
cmove
or
cmp
push
push
in
addb
cmp
sbb
mov
cmp
cli
in
mov
push
rorb
mov
ret
or
in
adc
scas
in
mov
push
push
in
sbb
inc
mov
scas
sbb
or
jno
testl
nop
adc
and
add
cmp
test
shrd
rcr
jb
push
pop
push
push
call
and
fistl
rorl
test
mov
mov
pop
daa
mulb
mov
rcll
dec
or
cmpb
jge
out
clc
sub
mov
mov
out
or
push
jge
in
arpl
and
pop
arpl
xor
pop
or
sbb
pop
lock
loopne
mov
cmp
addb
and
and
das
subl
adc
mov
mov
jbe
in
mov
int3
pop
cmp
fxch
rclb
sbb
jl
adc
pushf
xor
in
mov
fbstp
rolb
je
inc
in
fdivr
pushl
call
mov
inc
shr
movzbl
push
adc
push
ret
push
jo
ffreep
push
es
add
je
loope
cmpsl
jle
jbe
dec
testl
gs
nop
sbb
inc
add
push
mov
push
or
gs
or
jg
sub
jb
xor
int
out
push
loopne
pop
or
add
mov
push
sbb
xor
fisubs
push
jmp
scas
sti
jle
push
add
lahf
nop
lods
adc
push
push
mov
cmp
jg
mov
xchg
icebp
int
adc
jae
enter
cmpl
std
sbb
scas
mov
aad
js
pop
and
test
xor
fldt
xchg
jno
outsl
ds
lea
andl
outsb
sub
sbb
subl
call
mov
push
jne
inc
sub
loop
jo
push
ret
push
pop
jmp
mov
popa
xor
lods
push
cmp
mov
and
cmp
je
stos
mov
in
in
add
fcompl
shrb
cld
jne
fdivrl
push
push
test
adc
lock
sbb
or
xor
clc
add
inc
cmp
jae
mov
hlt
lea
movsb
jp
dec
ja
dec
add
sub
je
push
mov
je
add
mov
outsl
push
sub
fcomps
hlt
sub
imul
add
adcb
ret
jl
in
cmp
jg
push
push
push
inc
js
push
pop
cmp
inc
and
jbe
xlat
sar
into
popa
nop
add
mov
loopne
push
pop
xor
adc
call
lea
ljmp
cmp
loopne
sub
add
xor
jo
fnstcw
jb
mov
mov
roll
mov
mov
push
sub
inc
js
or
cli
xchg
adcb
out
ret
cmp
cmpsb
hlt
pop
pop
xor
inc
xchg
je
test
js
inc
dec
hlt
aaa
cmp
fidivrl
hlt
or
and
sub
pop
movb
dec
push
inc
inc
dec
rclb
jge
jmp
dec
inc
cmp
push
mov
insb
sbb
in
out
fdivs
pop
push
push
mov
sbb
xor
cwtl
dec
mov
insb
sbb
fdivp
add
pop
push
push
mov
idiv
cmp
jl
repz
jmp
or
and
pop
cmp
xlat
das
xor
ret
inc
mov
inc
or
cmp
jbe
mov
mov
test
pop
or
xchg
bound
xlat
push
sub
mov
push
stc
jns
lods
sarl
push
mov
push
and
add
or
jle
ret
je
mov
imul
lock
aaa
ljmp
xor
movsb
push
dec
fidivrl
sbb
or
fstps
pop
cmp
mov
or
add
jne
or
sbb
sub
jle
push
call
jl
xchg
jecxz
sti
test
dec
sbb
mov
mov
sbb
ret
je
push
pop
pop
and
xor
mov
mov
jae
jb
jmp
mov
ret
and
adc
mov
xchg
jmp
or
jbe
jb
mov
icebp
scas
fs
jne
cmp
je
jbe
movb
xor
lods
std
or
or
and
sbb
icebp
addb
cmp
test
addl
out
les
xlat
imul
daa
push
pop
and
setne
shrb
ret
jne
pop
jo
pop
in
xchg
cld
add
fiaddl
jne
adc
js,pt
aam
add
jo
jg
jo
prefetch
xchg
das
or
es
into
push
cmc
jmp
test
or
sbb
push
adc
add
sub
jp
shll
aad
mov
js
push
leave
inc
lret
jmp
call
bnd
rorl
cmp
jmp
mov
dec
adc
daa
sahf
jmp
cmp
push
test
mov
imul
cld
ficoms
sub
push
push
jmp
sbb
pop
sti
adc
rolb
pop
rolb
add
scas
sbb
inc
push
mov
lock
pop
nop
mov
sub
inc
mov
add
lcall
je
das
test
push
xchg
dec
jno
mov
loopne
enter
jl
add
insb
cld
cmp
ret
dec
push
add
push
test
lds
pop
push
dec
cld
rorb
push
pop
popf
mov
enter
add
std
push
movl
call
sub
dec
enter
movsb
xchg
xor
sub
imull
push
and
cmp
fld
mov
sahf
fsubs
sbb
pop
push
adc
pop
enter
xlat
jecxz
sbb
insb
icebp
inc
roll
shlb
in
shl
mov
cmp
jp
fdivs
push
adc
shr
pop
sbb
push
push
imul
sub
push
add
aas
lods
pusha
lods
xchg
dec
ret
outsl
dec
mov
adc
lods
sbbl
inc
mov
lds
sbb
mov
in
push
sub
les
push
ss
sub
push
in
insl
fldt
lods
sub
mov
xlat
and
enter
mov
and
aad
jo
es
sub
insb
xlat
push
jno
cmovl
pop
dec
scas
jecxz
dec
xchg
call
sbb
cmpsl
jb
sbb
fsubrs
enter
cld
jo
add
mov
dec
leave
inc
jo
fnstcw
into
or
adcl
jb
leave
mov
ficoml
imul
test
stos
out
or
mov
push
sbb
xchg
xor
pop
and
xlat
or
sbb
add
xchg
sub
stos
push
pop
cmpl
jmp
je
add
ljmp
in
adc
pop
inc
pop
je
dec
ds
fisttps
mov
cmpsl
leave
mov
push
enter
jecxz
and
pop
movl
cmpsb
and
push
sub
xlat
push
jae
sub
mov
jne
pop
add
jmp
sbbb
cld
sub
sub
adc
pusha
pop
and
in
jmp
or
mov
enter
test
sarl
stc
loope
lret
cmp
les
mov
and
push
xlat
cs
stos
lock
cmc
pop
je
xor
mov
sbb
and
clc
mov
jae
jg
adc
lret
adc
dec
add
dec
into
aam
jb
push
inc
xchg
imul
sub
push
mov
add
or
or
dec
clc
and
adc
rcrl
add
pop
pop
cmpsb
mov
mov
mov
in
sbb
add
or
jns
fdivs
daa
js
adc
mov
lea
addr16
or
xchg
andl
shll
mov
push
and
xlat
push
shll
and
sbb
xorb
ret
jne
je
cmp
mov
pop
push
fildll
sbb
cli
push
or
arpl
mov
xchg
js
adc
ja
das
in
cmpsl
outsb
stc
movups
and
test
add
inc
pop
sbb
cmp
mov
or
push
mov
push
cltd
pop
lock
mov
lcall
adc
sarb
roll
jno
add
push
xchg
jmp
loope
add
mov
lods
dec
add
xchg
dec
xor
pop
lods
push
xchg
pushf
push
jbe
fs
shr
cmp
cmp
mov
mov
add
push
pop
dec
je
mov
adc
in
jge
adc
sbb
popa
dec
ss
dec
cli
decb
jmp
mov
mov
mov
rcr
push
and
movsb
fwait
mov
add
pop
jne
out
popa
hlt
sbb
jmp
push
add
push
mov
xor
aas
adc
and
cld
pop
inc
add
mov
mov
inc
loopne
mov
add
push
mov
pop
addr16
mov
fmuls
mov
mov
dec
mov
loop
loopne
push
or
push
shl
std
lea
pop
pushl
js
sub
lea
mov
push
movsb
int3
sub
mov
rolb
push
shr
jmp
cmp
je
cmp
mov
imul
jmp
inc
sbb
leave
adc
out
out
xor
mov
sbb
fstpl
insl
fistpll
jmp
sbb
into
jle
push
and
jmp
and
jmp
push
mov
sbb
sti
mov
incl
into
pop
push
aaa
push
inc
push
push
iret
repz
jo
mov
into
repz
pushf
cmpsl
mov
mov
sbb
mov
mov
add
inc
scas
ja
push
and
sub
or
or
lea
adc
sub
fistps
aaa
sub
or
cmpl
fcmovne
rcrl
lahf
push
push
or
xchg
dec
stc
icebp
cs
pop
jge
cld
out
dec
jl
and
inc
push
mov
mov
pop
push
lea
push
lea
push
push
push
push
add
push
lea
enter
cmp
jnp
inc
cmpsb
add
dec
mov
inc
test
pop
add
aas
cltd
lahf
aam
popf
sbb
lea
lea
movl
orl
or
sbb
sbb
jmp
sbb
addr16
push
je
lea
test
sbb
push
or
pop
push
push
add
jl
inc
xor
add
popf
push
js
in
test
xor
je
push
inc
xchg
outsb
lods
fidivs
jno
jo
cmpsb
addl
mov
push
sbb
push
push
je
mov
xchg
mov
push
clc
pop
dec
notb
jmp
mov
pusha
and
mov
mov
movl
dec
add
pop
jne
mov
jne,pt
push
add
test
repnz
jae
adc
or
push
pause
xchg
imul
dec
jae
popf
mov
call
in
in
ret
mov
xchg
inc
or
ret
or
repz
mov
inc
xor
movsl
push
cmc
lds
push
mov
fcoms
aad
cmp
xor
push
push
cmp
xor
xor
pushf
jl
sub
in
and
adc
rolb
mov
lea
jl
lcall
es
mov
ret
or
sbb
xor
popa
mov
push
xchg
pop
mov
popa
aam
push
aam
das
in
in
sbb
cmp
inc
jl
jne
int3
push
mov
and
fcoml
bound
dec
fildl
cmp
rcr
shr
addl
or
fdivrl
fdivr
ret
mov
rcll
mov
push
mov
inc
scas
xor
adc
fdivr
and
adc
push
push
or
mov
js
notb
sub
je
lea
push
loopne
es
rolb
mov
jo
xchg
add
ds
mov
mov
aam
xlat
push
or
adc
ljmp
in
or
rcrb
shrb
les
inc
push
mov
lock
push
pop
pop
fmull
push
dec
lea
dec
push
push
aaa
dec
icebp
pop
cmpsb
and
jge
fidivrs
cmpsb
mov
sub
in
dec
jmp
sub
mov
dec
cmp
sub
insl
sti
int
in
cmp
push
mov
add
mov
test
inc
inc
dec
cmp
pop
daa
icebp
cltd
adc
xor
mov
iret
mov
mov
and
or
jecxz
or
les
mov
fcomps
in
dec
cmp
cmp
push
sbb
and
loopne
sbb
out
movsb
adc
jp
dec
pop
inc
leave
mov
lock
fisubl
mov
in
and
dec
fstp
cmpsb
imul
adcb
push
roll
inc
push
bound
lcall
neg
sbb
and
pop
in
mov
cmp
iret
leave
out
add
adc
out
jl
enter
pusha
nop
test
js
mov
push
inc
scas
daa
or
add
dec
sub
je
push
negb
adc
aaa
and
lods
out
push
ret
test
icebp
dec
or
addl
rolb
test
dec
pop
cmp
mov
mov
mov
or
mov
loop
dec
aaa
enter
cmpl
jne
pushl
ffree
subl
push
sbb
test
adc
xorl
jbe
outsl
cld
adc
aam
mov
adc
cmpsb
push
inc
inc
dec
insl
dec
adc
std
xchg
xor
push
inc
sub
sti
je
cmp
mov
ja
sti
sbb
jb
stc
ret
popl
or
pop
and
pop
inc
or
aad
xchg
or
popa
in
xchg
mov
jg
xor
sbb
sbb
pop
incl
jne
movb
jmp
cmp
jne
mov
adc
leave
push
loop
ret
cwtl
enter
jle
xor
adcb
repnz
mov
jp
cmp
pop
mov
mov
xor
ja
xchg
test
sbb
lock
pop
notl
and
test
cltd
jne
or
or
popf
sub
mov
mov
push
dec
or
adcb
bound
pop
fsubl
push
push
cmp
push
adc
fcoml
mov
nop
pop
cmp
iret
push
adc
enter
lods
add
test
lds
dec
out
mov
mov
ljmp
nop
add
xchg
scas
mov
mov
add
je
cmpsb
and
mov
cmp
add
dec
and
push
lea
and
mov
cmpb
jg
add
pop
push
call
push
and
push
push
lret
into
shr
mov
rcll
enter
xor
imul
mov
push
mov
xor
int
xor
clc
test
cmpb
xor
movsl
adc
pop
cmc
xlat
jg
inc
pusha
fmull
insb
decb
jno
out
push
add
mov
push
push
aaa
movsl
adc
outsb
mov
push
stos
sbb
out
mov
cli
loop
xor
es
ja
add
mov
mov
jno
insb
inc
cmp
xor
pop
into
popa
in
jne
icebp
in
push
shll
mov
adc
mov
stos
jo
adc
fmuls
sub
cli
repz
jo
dec
or
andb
cmc
jmp
jb
rclb
mov
adc
test
rorl
jbe
jo
xchg
xlat
push
adc
lea
aas
stc
icebp
cmpb
xor
je
push
pop
cmp
mov
negb
push
decl
repnz
push
jne
cs
sub
push
fnstsw
add
jmp
adc
sbb
push
iret
enter
insb
repz
mov
andl
push
fcoms
sbb
fidivrl
push
cli
or
push
pop
jo
popa
icebp
push
sub
cs
push
in
or
jmp
fs
popa
push
sbb
lods
push
push
cltd
sub
push
jecxz
je
push
fbld
jl
xlat
sbb
fadd
orl
addl
pop
fadds
xor
xchg
add
jae
adc
xchg
push
sbb
pop
push
sub
jo
mov
jl
mov
mov
cltd
mov
lea
push
div
sar
orl
movsb
push
xor
ret
pop
mov
pop
mov
jge
mov
shlb
mov
idiv
push
mov
mov
jecxz
test
mov
ret
xor
idiv
out
and
cs
testl
es
sti
fstpt
mov
add
push
int
dec
add
mov
cmpsl
jne
pusha
scas
mov
push
dec
xor
push
pop
jg
jge
add
sub
mov
adc
dec
fstpl
push
pop
push
mov
fdivr
sub
cmpb
jge
je
out
sbb
mov
dec
push
into
jp
xor
popa
xchg
movsl
daa
pusha
js
or
popa
jg
sub
scas
fs
or
xchg
arpl
mov
clc
jle
cmp
xor
sub
negl
pushf
movb
scas
xchg
jnp
aas
dec
lea
jl,pn
sbb
ds
xchg
sub
cmp
shrl
nop
or
out
jp
into
test
std
outsb
mov
fildl
mov
test
jns
fdivr
std
jnp
add
xor
xor
mov
fdivrp
dec
ja
and
dec
sub
mov
shr
clc
int3
mov
mov
inc
les
xorl
cmp
add
push
lods
mov
cmpb
pusha
clc
insl
je
into
clc
fidivl
jmp
push
xchg
jae
addb
mov
ret
pop
jne
pop
pop
movb
xor
dec
ljmp
cmp
mov
jo
leave
xchg
mov
mov
add
shr
hlt
lcall
cmc
push
aad
cld
inc
hlt
adc
lea
add
and
cmpsl
je
addr16
pusha
fdivs
push
gs
lds
imul
fadds
and
stos
scas
cmp
sbb
loopne
push
pop
stos
ljmp
pop
pop
mov
pop
leave
jecxz
dec
sub
inc
push
cmp
or
mov
sub
rcrl
and
cltd
add
cwtl
cmp
test
sbb
or
aam
xor
adc
int
sbb
loope
xorb
mov
dec
jns
and
cmp
ret
sbb
sti
push
rorb
mov
push
les
jmp
punpckhdq
leave
adc
jo
in
push
pop
xor
rolb
jo
pushf
scas
sbb
push
mov
lea
push
mov
push
ret
inc
mov
pop
in
fwait
dec
add
lea
pop
or
jno
sarl
and
push
push
adc
and
cmp
lahf
icebp
inc
and
pop
dec
enter
add
sub
pop
cmpsb
jle
add
add
cmp
sub
bound
xchg
incl
add
xchg
fsubrl
mov
inc
and
jl
nop
adc
fs
hlt
xchg
int3
push
push
pop
in
out
shll
pop
popf
dec
dec
add
repnz
stc
lock
nop
je
mov
pop
or
inc
cli
and
loop
leave
push
cmp
sti
and
pop
daa
sbb
mov
pop
mov
and
in
dec
or
cmc
stos
mov
andl
dec
cmp
sub
call
or
push
add
mov
shrb
test
clc
setb
test
dec
add
add
cmp
jo
pop
dec
mov
dec
adc
data16
pop
or
sbb
jl
aaa
adcb
jle
and
and
pop
pop
out
inc
mov
scas
sbb
add
push
xor
ret
icebp
dec
mov
jo
adc
mov
add
cmp
add
imul
adc
add
push
scas
and
int
xchg
popf
cmp
or
repz
mov
add
jo
xor
mov
in
pop
or
mov
pop
jmp
dec
sti
lret
sub
bound
mov
mov
sub
push
in
aas
jmp
test
stos
sbb
jl
pop
daa
ds
icebp
adc
dec
push
mov
lock
clc
add
pop
je
and
jp
or
loopne
jne
pop
adc
inc
cltd
mov
add
adc
xor
adc
push
add
push
mov
jle
add
jmp
add
out
mov
testl
mov
out
divl
push
push
and
test
adc
sub
call
add
cmc
xchg
cmpsb
add
push
out
and
inc
xchg
push
push
shlb
icebp
and
pop
push
in
sub
hlt
dec
dec
sahf
fmuls
sbb
cmp
mov
xor
xor
sbb
lret
lock
adc
aam
mov
hlt
add
mov
out
shrb
inc
mov
sbb
stos
shll
push
stos
xchg
lret
mov
push
nop
in
call
cmp
inc
and
mov
in
mov
push
iret
mov
lods
imul
pushf
adc
push
sbb
mov
push
push
mov
pusha
das
call
loopne
arpl
push
ret
cmp
sub
insl
test
and
jo
cmp
fsubrl
leave
imull
pop
push
push
outsl
sbb
add
xchg
jnp
imul
imul
cmc
nop
or
push
cmpsl
pop
enter
push
in
dec
cmpsl
adc
cmp
mov
decb
ficompl
jae
inc
out
popf
jae
cmp
sbb
xchg
pop
xor
sti
cmp
enter
jnp
adc
jne
mov
fstpl
push
out
dec
rcrl
push
lods
sbb
pushl
push
lret
push
cmpsl
loope
scas
mov
dec
nop
cmp
add
decl
iret
clc
and
test
je
shll
mov
je
stc
jge
neg
loop
dec
mov
jmp
dec
mov
sub
and
add
mov
jae
mov
add
jo
pusha
inc
xor
dec
push
add
sub
push
sbb
mov
sub
leave
js
cmp
dec
sti
dec
jge
mov
mov
mov
cmp
sbbb
lods
add
cmp
jle
call
push
dec
setle
push
or
cmp
std
fsubr
sbb
popf
fwait
inc
push
mov
out
je
xchg
int
inc
cs
sbb
aam
xor
mov
push
test
into
cmp
mov
lahf
add
pop
jo
sub
dec
clc
cmp
sete
adc
loope
add
insl
andb
je
sbb
adcl
push
test
sbb
shlb
insb
jp
jno
dec
movsb
pop
lds
mov
pusha
loop
sbb
and
pop
or
and
dec
mov
inc
movsl
repnz
dec
add
sbb
jno
pop
lea
das
arpl
push
push
rolb
lods
pop
lods
fwait
adcb
jae
add
lock
jne
or
sub
lea
add
add
mov
push
sbb
imul
mov
mov
movsb
bound
mov
jge
mov
sub
push
iret
ss
imul
or
and
cmp
inc
push
xchg
push
or
popa
fcmovnb
fwait
mov
sbb
or
jmp
das
adc
mov
sub
outsl
mov
nop
lret
pop
in
cmpsb
add
outsb
sbb
pop
pop
adc
rolb
pusha
fmull
je
in
adc
mov
or
lock
in
aaa
ret
in
repz
in
call
ja
fdiv
in
aaa
xor
cmpsb
and
push
jns
popf
push
fdivs
pop
pop
arpl
add
jbe
push
mov
dec
shrl
test
andl
testb
jmp
or
ja
sbb
je
adc
mov
mov
dec
push
adc
or
jg
sub
xchg
je
jecxz
aam
jb
xchg
or
inc
bound
in
push
mov
scas
sbb
dec
and
clc
clc
and
clc
inc
addl
dec
cmp
pop
xor
xor
hlt
add
dec
or
push
mov
in
dec
clc
pushl
xor
mov
mov
dec
call
jle
cmp
pop
clc
lahf
sub
in
jnp
adc
clc
pop
jmp
in
jmp
das
hlt
fwait
loopne
fnstsw
out
or
sti
add
into
push
push
add
push
outsl
or
sbb
rcll
clc
adc
xchg
nop
mov
mov
pop
mov
add
ds
inc
inc
in
jb
mov
fstpt
das
sub
jg
mov
iret
push
insb
cwtl
add
jb
nop
inc
xacquire
enter
inc
lahf
cmp
clc
xor
in
jp
xchg
mov
cmp
add
clc
sbb
sbb
daa
pop
push
mov
js
mov
adc
test
add
push
xor
xor
push
jg
loop
sbb
push
movzwl
adc
push
gs
cmc
rsqrtps
jo
lea
push
jl
inc
icebp
and
push
push
shll
fcmovb
lret
cmp
insb
jbe
jbe
pop
push
mov
call
jo
call
jo
pop
mov
gs
inc
fucomi
mov
sbb
adc
mulb
inc
push
push
fisttps
in
pop
popa
loopne
sbb
in
push
mov
movsb
add
adc
ss
xchg
movsb
xor
ret
inc
cmp
mov
adc
pop
mov
movsl
int3
ret
add
sbb
and
mov
or
add
cld
mov
jmp
adc
xor
mov
push
test
add
and
cmp
sbb
push
ss
mov
ja
add
jl
andl
mov
and
scas
movl
jle
or
pop
dec
push
es
jo
addr16
movl
dec
pop
jp
cmp
sub
xchg
push
sub
mov
add
hlt
push
mov
cltd
inc
xchg
arpl
dec
xor
mov
push
cmp
cmpsb
rolb
cltd
push
push
cmp
inc
sbbl
and
xchg
pop
outsb
jns
popf
lcall
push
mov
sbb
mov
or
popa
xchg
mov
arpl
pusha
dec
loopne
or
push
push
loopne
mov
mov
jb
icebp
push
jg
dec
fs
add
cli
cs
aam
jecxz
add
add
sbb
sahf
idivb
mov
pop
xchg
sub
aad
inc
sbb
shrl
add
roll
cwtl
iret
push
pusha
sub
add
dec
fistl
sbb
jecxz
xchg
adc
sbb
jnp
aaa
adc
mov
pop
fidivrl
xor
jns
cmp
jmp
mov
xchg
sub
mov
xor
mov
adc
sub
pop
push
lcall
sub
adc
pop
test
xlat
jl,pn
jmp
add
or
lock
jg
sub
loopne
leave
cmp
loopne
fwait
add
cmp
shlb
cvtdq2ps
arpl
sub
sbb
add
pop
and
test
or
inc
mov
pop
mov
jmp
inc
sahf
mov
or
cwtl
movl
mov
lea
cmpsl
add
mov
inc
adc
lret
shll
sbb
mov
mov
dec
add
nop
add
push
repz
scas
or
add
lea
push
daa
cmp
mov
or
out
jp
orl
pop
or
cld
mov
fdivs
sub
add
add
adc
inc
or
lcall
mov
sub
mov
cwtl
push
or
xchg
xor
dec
js
sub
lea
test
pop
adc
mov
faddl
dec
cwtl
adc
xchg
push
add
scas
push
add
mov
sbb
cld
dec
js
lock
mov
mov
adc
mov
pushf
push
setne
dec
xchg
cmpb
add
lahf
pop
int
lret
fs
push
push
jbe
push
jne
and
cltd
sub
xchg
mov
jg
sbbb
mov
fcoml
pop
push
and
loop
leave
lea
or
or
sbb
add
pop
movsl
and
ret
mull
pop
imul
stos
stos
add
xchg
ja
lods
and
inc
xor
push
or
loopne
rorl
jg
notb
sub
sbb
sti
scas
pop
stos
push
add
mov
imul
xor
push
cmp
loopne
ret
or
dec
and
sbb
test
repz
in
sbb
dec
cmp
cmc
push
mov
and
dec
jmp
orl
sbb
dec
pop
int3
imul
mov
call
scas
das
mov
gs
in
aas
mov
call
cmp
jmp
scas
mov
outsl
jns
sbb
lret
sub
xor
mov
pop
or
jmp
push
shr
mov
adc
loope
pusha
inc
xchg
fstpt
mov
lret
or
repz
add
fildl
pop
pop
cltd
xchg
mov
push
pushf
and
inc
js
mov
jns
dec
add
inc
jb
pop
mov
popf
lret
fisubrs
add
jmp
fcoms
push
inc
mov
imul
dec
push
loope
dec
or
push
fisttpll
outsb
pop
xor
push
sbb
mov
add
sub
aad
dec
or
pop
enter
or
xchg
or
push
and
dec
cmp
les
add
divl
mov
daa
fwait
xor
xchg
inc
int
subb
stc
in
mov
inc
or
xor
add
pop
fidivs
fimuls
mov
adc
outsl
jbe
add
mov
ss
jo
xchg
mov
mov
jl
outsb
int3
lods
xor
cmp
adc
fiadds
push
jp
add
ror
push
mov
orb
leave
sahf
xchg
rorl
sahf
lods
rolb
xchg
mov
push
and
push
push
repnz
mov
loopne
out
dec
jae
pop
sbb
test
test
faddp
add
fs
data16
xchg
or
push
lock
dec
push
sub
xchg
adc
lock
xchg
ret
push
add
sti
addb
dec
imul
aas
movsb
fdivrs
fucomip
add
cmp
push
sbb
dec
adc
xchg
mov
fdivr
inc
insl
movsl
jbe
and
lds
sbb
mov
xchg
xchg
pushfw
mov
push
add
lea
fs
mov
mov
lea
push
mov
call
in
push
arpl
add
clc
aam
jnp
aaa
pop
mov
mov
lock
mov
xchg
je
je
ds
mov
inc
mov
sbb
xor
fdivr
insl
jo
xchg
sub
xchg
mov
mov
insb
shll
jbe
js
mov
test
adc
and
fs
inc
adc
in
xchg
dec
mov
jnp
dec
jbe
mov
adc
inc
insb
push
mov
mov
xchg
inc
out
cwtl
das
ss
in
inc
aas
das
aam
gs
popl
cmp
dec
pop
lret
jmp
xchg
jne
jo
hlt
nop
push
add
repnz
add
lods
mov
push
push
push
sarl
sbb
pop
ja
addl
data16
add
dec
loop
negb
out
lret
test
mov
fnsave
ljmp
aaa
sbb
rolb
add
daa
nop
jnp
inc
lret
repz
jns
cmpsl
add
lods
pandn
push
arpl
xor
inc
and
fcmove
pop
push
gs
xchg
fiaddl
push
rolb
cmpsl
mov
push
lock
les
sldt
xchg
out
pusha
imul
popf
xchg
xor
mov
shl
add
dec
loopne
pushf
cmpsl
or
ficoms
js
jecxz
mov
cmpsl
cmc
adc
sub
nop
push
notb
jmp
aaa
inc
pop
push
or
add
push
push
stos
andb
mov
roll
cmp
xorl
push
mov
adc
add
ret
or
xchg
aam
dec
rcrl
add
xlat
push
jecxz
mov
add
jae
jno
loopne
sbb
mov
insb
fxch
mov
loopne
sahf
xchg
movsl
popf
add
movl
push
mov
jne
pop
loope
or
loopne
jge
orb
ja
sub
push
adc
cmpsb
sub
daa
pop
sbb
pop
idivl
xchg
fldenv
mov
inc
and
cmp
shl
js
test
imul
sub
imul
rcll
mov
and
je
adc
aas
sub
jmp
push
lods
jb
add
popa
push
leave
inc
xlat
sbb
push
cmp
inc
leave
push
dec
xor
icebp
sbb
sbb
stc
xor
enter
or
rcrb
xlat
pop
ret
bound
cmpl
mov
push
pop
cmp
je
cwtl
push
in
mov
xor
pop
pop
adc
or
sbb
cmpsl
adcb
cwtl
dec
xor
rorb
sti
push
xor
jns
push
pop
andb
lea
push
push
push
add
fiaddl
and
lea
cmp
jge
inc
and
add
add
add
cmp
mov
and
jge
mov
stos
in
sbb
jne
xchg
push
inc
add
rclb
mov
test
fsubrl
mov
sahf
int3
sub
jl
pusha
and
mov
mov
or
mov
sbbl
sub
loopne
sub
dec
psubusb
aas
aam
outsb
push
or
test
addr16
xor
xlat
jns,pn
icebp
inc
fcmovb
and
sbb
push
xchg
ret
jo
insl
mov
int3
xor
dec
push
sbb
arpl
ja
push
fadd
scas
ja
rcrb
push
xor
sub
mov
insl
faddl
or
pop
rorb
rol
dec
mov
lcall
adc
add
popf
call
add
repz
mov
mov
add
sahf
add
es
imul
sub
add
xchg
fldl
mov
stos
mov
fldl
add
add
gs
cmp
fistpll
add
mov
fdivl
mov
ljmp
leave
adc
pop
enter
sub
jl
lock
mov
push
mov
addl
pushf
popa
les
push
push
lea
pop
and
fcomps
push
incl
inc
in
push
aas
rorb
cmpb
out
dec
or
je
push
cwtl
lock
mov
xchg
cmp
xor
dec
jae
mov
fsubs
shll
inc
movsb
xor
or
pop
or
inc
pop
fdivrs
sbb
std
or
cmp
ljmp
lock
xchg
lock
dec
sub
or
les
test
and
jae
cli
fisttpl
cwtl
loope
cmpl
scas
test
mov
lods
push
stos
xchg
test
ret
push
cmp
ficoml
pop
push
cld
je
or
xchg
inc
daa
push
inc
in
sti
pushw
mov
roll
icebp
mov
xorl
adcb
inc
xor
test
add
mov
xchg
pusha
cmpb
pop
push
mov
rolb
bound
adc
xchg
add
test
out
mov
pop
callw
push
sub
in
mov
mov
cmp
loopne
scas
and
jl
xchg
pop
in
lret
hlt
inc
out
pusha
add
cltd
popf
outsl
mov
ret
add
inc
mov
jl
mov
sub
push
arpl
rorl
js
push
loopne
mov
add
pop
add
movsl
mov
rol
push
xchg
test
ret
popa
sbb
std
mov
sub
sbbb
jmp
push
push
iret
scas
and
xor
setle
fnstenv
mov
pusha
rolb
fcoms
push
add
inc
test
xchg
mov
or
mov
sbb
sub
out
or
stos
sub
bound
mov
or
xor
push
lea
cwtl
push
xor
pop
sub
push
pop
fdivr
cmp
stos
mov
mov
or
dec
in
subb
push
int3
push
inc
inc
pop
adc
pop
mov
rcrl
cltd
xchg
loopne
mov
sub
enter
pop
or
sbb
call
ficoms
push
mov
gs
lock
and
imul
hlt
lea
pop
push
xor
add
sub
sti
push
rorb
jmp
adc
cwtl
sbb
inc
pop
xor
jnp
or
pop
pop
adc
rolb
fs
dec
or
leave
test
adc
add
or
mov
ret
scas
fsubrs
ja
mov
cmpb
addr16
popf
cmpsb
dec
ret
push
mov
js
dec
sub
clc
je
push
add
xchg
push
sub
push
add
adc
push
inc
push
xchg
mov
icebp
dec
fwait
push
pmulhuw
fadd
xlat
xor
xor
fcmovnu
fwait
jle
dec
outsl
xchg
lret
cmp
jl
test
mov
int3
xor
sarl
pop
sub
lcall
xor
cmp
jne
lret
out
xor
ret
cmp
push
push
shll
fcomps
out
push
or
cmp
je
sub
out
jo
push
push
stc
push
popf
fcomi
loopne
pushf
fistpll
add
flds
adc
push
sar
repz
or
xchg
and
sbb
bound
in
pop
adc
push
mov
lahf
in
xor
das
in
sub
jo
clc
fisttps
js
dec
or
in
xor
mov
out
xorl
jge
mov
mov
pop
call
push
cwtl
pop
imul
ja
adcl
and
pop
mov
add
ret
fidivrl
lcall
loope
out
inc
add
sarl
or
orb
dec
mov
popa
adc
add
cmp
outsl
adc
dec
or
mov
icebp
rorl
fwait
xor
int
jg
cmp
inc
and
cmp
je
sbb
jbe
outsb
clc
pop
mov
mov
fbstp
mov
mov
lods
mov
push
das
mov
push
add
inc
or
pop
pushl
test
mov
pop
ljmp
push
mov
push
dec
or
push
sbb
xorb
push
sub
dec
and
cmpl
cmpsb
dec
or
xchg
push
or
rclb
or
fmul
pop
movsb
mov
add
loopne
mov
and
mov
dec
add
sbb
aad
in
scas
cltd
or
jne
loope
fcoms
popa
adc
test
mov
dec
xchg
inc
cli
mov
add
js
or
xchg
icebp
mov
adc
leave
je
mul
seto
push
out
add
enter
imul
jmp
jnp
cmpsl
push
cmp
fmull
pop
lock
sub
test
shlb
cmp
shl
cltd
sub
and
cmpsb
inc
cs
dec
inc
add
inc
sbb
dec
pop
popa
sub
cmp
clc
fldl
mov
adc
icebp
pusha
cmpsl
sbb
and
data16
cs
inc
daa
or
add
inc
adc
in
pop
dec
test
mov
mov
sbb
test
pop
sub
lahf
add
xor
xchg
sbb
cmp
push
fdivrl
push
push
and
leave
add
nop
popf
push
sbb
push
in
pop
mov
test
lds
add
push
pop
sbb
cmp
je
sbbb
mov
xor
pushf
cmp
je
pop
xor
xchg
and
cmp
jne
ds
adc
dec
cmp
add
pop
mov
sub
lock
subl
sub
mov
mov
pushf
xchg
lods
xchg
faddp
jmp
jl
ret
dec
mov
test
je
cli
jmp
mov
inc
jno
lock
inc
cmp
jae
add
ss
mov
inc
xor
sbb
pop
jbe
mov
sub
push
and
sbb
jl
adcb
test
push
push
ss
mov
inc
jmp
stc
arpl
mov
test
cmp
bound
shl
push
std
cmp
mov
shlb
adc
mov
xchg
pop
or
push
loop
or
or
outsb
push
movsl
or
xlat
dec
enter
adc
or
ss
push
pop
cmpl
cmp
add
ja
lea
cld
ret
rorl
cmp
mov
adc
lea
jmp
push
jle
addl
mov
pusha
jo
add
mov
pop
cmp
out
lods
dec
or
push
inc
push
clc
dec
or
and
popl
rcrb
adc
inc
or
fnstsw
mov
or
mov
push
mov
and
inc
sbb
jg
push
imul
sub
adc
push
push
or
and
lock
insl
aad
push
cmp
mov
fwait
or
mov
mov
adc
add
and
hlt
add
pop
mov
sub
xchg
add
mov
mov
push
movsl
or
add
cld
adc
push
mov
jl
push
sbb
xlat
inc
orl
stos
xor
int
sti
xchg
jmp
or
mov
ret
and
sbb
dec
test
js
sbb
inc
out
sbbl
adcb
mov
push
test
sub
out
push
clc
aam
xchg
sub
push
push
out
sub
sub
adc
movsl
xor
test
test
pop
ret
call
mov
add
and
add
rol
inc
jp
aam
xor
push
bound
in
cmpsl
mov
dec
mov
rolb
push
jbe
fmuls
popf
ficoml
add
sub
or
sbb
jnp
out
jne
test
mov
push
push
lods
or
push
add
mov
sub
ror
pop
inc
xor
cmpsb
add
popf
cmp
add
adc
insb
lods
sub
add
ljmp
adc
pop
ret
or
jmp
in
and
mov
and
outsl
xchg
popf
dec
pop
mov
mov
push
adc
mov
jbe
push
orb
xchg
xchg
movsl
int3
jbe
and
jnp
jno
int3
ret
lods
mov
pop
add
jmp
jg
mov
shlb
xchg
add
sub
lock
add
loope
and
movl
and
add
mov
or
cmp
clc
and
inc
adc
imulb
mov
mov
pop
and
mov
in
pop
add
pusha
or
aam
mov
int
add
cwtl
fmull
sbb
je
outsl
test
sbb
aam
mov
icebp
xor
enter
sub
lahf
mov
push
add
imul
movl
jg
pop
inc
or
mov
push
or
xchg
pop
sub
sbb
enter
pop
cs
in
dec
lahf
or
mov
fmull
sub
into
addr16
jmp
inc
push
scas
leave
ret
cmp
mov
mov
sbb
mov
or
test
mov
cmp
js
mov
and
ljmp
pop
je
orl
push
mov
test
dec
rcll
sub
movsl
or
push
mov
jp
jle
mov
sbb
sbb
sub
mov
jnp
mov
ljmp
push
addb
add
dec
sub
movsb
repnz
popf
dec
fisttpl
push
push
add
inc
rcll
sub
orl
shll
loope
pop
inc
mov
insl
lods
mov
pop
and
mov
pop
popf
xchg
or
mov
xchg
adc
cld
lea
push
fnstcw
sub
sub
or
sbbl
sub
daa
sub
xor
add
cmp
adc
rcrb
dec
outsb
adc
clc
pop
fisttps
cmp
jbe
push
pop
cmp
inc
ret
pop
addl
mov
mov
test
mov
iret
mov
adc
mov
pop
xchg
out
inc
jo
arpl
out
cmc
mov
repz
in
cmp
push
push
sti
add
lea
pop
insb
lahf
cmc
and
fsub
in
rorb
push
xlat
sbb
into
pop
push
cltd
fsub
call
pop
push
daa
pop
leave
lea
cmpsl
adc
mov
in
push
loopne
hlt
enter
clc
adc
aad
push
iret
enter
push
dec
outsb
inc
les
sub
sbb
add
cmp
cmp
jp
sbb
adc
and
jae
mov
push
push
pop
inc
xor
test
adc
and
int
sbb
mov
jmp
mov
jecxz
aaa
push
sahf
js
push
rolb
jp
ret
loopne
mov
loop
push
in
or
popf
add
mov
sub
lods
mov
adc
sbb
daa
aaa
inc
inc
mov
jb
mov
loop
mov
bound
xor
cmpl
and
inc
or
aad
pop
andb
push
stc
pop
xor
pop
and
lahf
adc
and
sub
sbb
fwait
addl
pushf
out
sbb
jg
push
cs
push
pop
fwait
aas
pop
pop
push
movsb
loopne
cmp
in
pop
xor
fimuls
and
sbb
sbb
in
sub
test
ljmp
lahf
push
fdivr
faddp
nop
mov
mov
js
push
ret
fisttpl
test
pop
inc
inc
das
add
mov
pop
sbb
mov
pop
hlt
push
dec
aad
mov
rolb
mov
xchg
and
outsb
cmpb
and
std
lods
es
cmp
cmpsl
and
xor
mov
dec
ret
dec
adc
into
and
cmp
scas
mov
stos
dec
or
rolb
mov
call
clc
adc
das
pushl
mov
sub
test
hlt
mov
adc
add
mov
push
push
adc
sbb
xchg
xchg
enter
mov
sbb
or
test
pop
lods
sbb
add
cmp
jl
test
jno
xor
xchg
sub
test
inc
mov
addr16
jmp
adc
pop
xchg
pop
ja
xchg
fiaddl
popa
xor
push
in
push
push
mov
in
test
push
fcoml
scas
and
test
pop
dec
push
std
lods
mov
mov
dec
sar
js
loop
out
push
push
push
in
mov
mov
lret
hlt
cwtl
or
or
add
xlat
cltd
or
mov
pop
mov
cs
push
add
push
insl
inc
test
mov
dec
hlt
add
push
imul
ret
jo
shll
ss
xor
dec
lcall
jno
orl
stos
nop
or
or
mov
sbb
imul
push
inc
dec
jmp
mov
lods
test
out
dec
push
sub
adc
jmp
jae
loopne
movsl
pusha
jo
inc
insb
pop
mov
and
loopne
fmull
in
movb
add
mov
inc
pop
ret
sbb
cmp
inc
push
popf
idivb
loopne
mov
xchg
mov
add
add
cmpsl
adc
in
test
add
pop
sarb
ljmp
inc
or
inc
jno
mov
mov
xchg
inc
or
or
jg
loope
mov
jne
pop
xchg
je
popa
push
push
lock
xchg
fstpt
mov
or
jbe
ljmp
xor
jle
xor
in
sarb
test
fmuls
rcrb
jnp
jl
rorb
pop
cmp
inc
mov
gs
insl
test
push
imul
inc
xchg
mov
push
icebp
adc
enter
out
jle
sbb
add
xor
cltd
xor
sbb
mov
loope
shll
add
cltd
inc
sbb
adc
fists
clc
cld
outsl
mov
clc
inc
push
sahf
sbb
fadds
or
sbb
mov
cmpsb
adc
fmuls
xchg
loope
shl
or
mov
xlat
shlb
cli
inc
lock
daa
in
add
add
xchg
push
popl
or
repz
neg
test
inc
or
cld
sub
mov
mov
xchg
cmp
sbb
xor
stos
jle
push
into
dec
xor
inc
incl
scas
es
add
xchg
push
js
inc
push
pushf
pusha
out
or
mov
mov
cmp
js
lds
and
xchg
rcrl
repnz
sbb
adc
fucomip
in
and
daa
and
jno
or
outsb
adc
icebp
xchg
clc
aas
dec
add
add
xorl
xor
add
or
imul
dec
sbb
or
sahf
xchg
cmp
sub
lahf
sbb
cmpb
pop
or
loope
push
adc
cld
mov
out
jnp
orl
push
push
lock
push
jp
inc
je
out
xor
or
push
outsl
adc
cmp
or
shlb
add
dec
loope
add
mov
or
dec
dec
rorb
xor
xchg
cmpb
out
lods
jnp
dec
pop
jne
push
mov
mov
push
inc
or
add
rorl
scas
and
imul
push
data16
fstpl
adc
cmp
jbe
sbb
inc
outsl
aas
sbb
sbb
adc
mov
xchg
stc
jae
cmp
jb
cmp
dec
mov
dec
adc
rcrb
mov
add
incl
cmp
lcall
adc
inc
je
ret
add
cmpsb
sbb
addb
dec
call
enter
andb
fildl
insb
pushf
add
pushf
inc
and
inc
xchg
push
cmp
dec
pop
or
push
push
or
out
add
push
aas
adc
push
push
fdivrs
aaa
push
addl
add
sbb
mov
adc
push
aas
ret
aam
out
and
add
shlb
push
test
sbb
jmp
test
mov
pop
xchg
mov
imul
js
inc
sub
fld
mov
pop
faddl
adc
pusha
dec
xlat
push
loopne
jmp
dec
incb
lods
dec
insb
push
push
push
lea
sbb
ja
arpl
push
jbe
lea
jmp
adc
adc
sub
stos
pop
add
pop
mov
adc
in
insl
lea
push
test
sub
js
pop
push
pop
mov
adc
add
sbb
or
test
incl
adc
dec
fdiv
scas
sub
cmp
xchg
pusha
lret
push
sbb
add
or
mov
rol
adc
sbb
sbb
mov
pop
push
nop
ljmp
adc
pop
imul
mov
mov
jbe
je
fnsave
and
sbb
lods
add
dec
mov
sbb
push
inc
sahf
call
ret
dec
cmp
sbb
jle
sbb
adc
pushl
add
dec
jmp
or
orb
dec
inc
cmpsb
pop
fbld
push
cmp
sbb
loop
jnp
sbb
dec
and
rolb
and
pusha
cmpsb
dec
call
cwtl
jle
inc
or
push
cmp
pusha
xchg
popa
movsl
icebp
sub
js
mov
jge
sbbl
or
mov
dec
add
inc
add
fldl
insb
sub
dec
xchg
shlb
sbb
xlat
and
bound
add
cmp
popa
sbb
jg
cmp
dec
in
jno
lea
lea
mov
mov
or
mov
imul
imul
mov
daa
fimuls
mov
pop
adc
push
lods
lret
int3
cs
adc
mov
loopne
mov
adc
and
mov
and
dec
dec
adcl
xor
or
test
sub
add
bound
movsl
sub
sbb
mov
sarb
pusha
and
sub
jo
cmc
and
mov
popf
jmp
in
popf
fiadds
mov
out
cmp
je
rcrb
int
daa
nop
inc
andb
outsb
mov
mov
push
xor
out
loopne
repnz
loope
sub
mov
ret
outsb
xchg
lret
adc
inc
idivb
je
sub
mov
div
aas
mov
cmp
cmp
jb
xchg
lret
mov
or
mov
rclb
add
xchg
add
mov
mov
orb
or
xor
xchg
cwtl
por
pop
add
fwait
mov
add
jge
pushf
mov
cwtl
add
xor
rclb
sarb
andl
ja
jmp
aam
sub
pop
call
orl
sub
incl
aam
aas
push
xchg
xor
dec
push
je
dec
jne
cmp
lea
mov
or
xor
adc
mov
and
das
lahf
xor
pop
jmp
add
insl
inc
leave
mov
in
int3
pop
cli
inc
and
es
sbb
mov
adc
add
rorb
aad
andl
cld
nop
dec
lret
movl
outsb
daa
xor
outsb
jg
gs
mov
lea
cli
jb
adc
jo
dec
push
inc
jle
xchg
ret
mov
adc
decb
mov
inc
arpl
loopne
ja
xchg
pop
sbb
insl
je
movsb
mov
mov
push
lret
mov
inc
adc
test
xor
aam
cmp
dec
fdiv
xor
adc
or
dec
or
sti
push
push
dec
lods
mov
dec
inc
ret
lcall
into
filds
xchg
push
frstor
push
ret
push
and
lahf
loopne
cld
xor
ds
je
iret
sub
cmp
mov
xor
cmp
or
subb
mov
loop
test
jg
sub
in
shll
lea
push
adc
inc
cmp
push
adc
movntq
pop
cmp
push
jne
cmp
jbe
sub
add
popa
enter
inc
sub
pop
into
jmp
sbb
in
sub
xor
clc
nop
mov
imul
roll
mov
mov
insl
clc
jb
fists
loopew
adc
ret
test
es
push
pop
or
or
xor
xchg
ret
sahf
or
jno
push
imulb
sbb
loopne
push
push
lods
adc
pop
aaa
push
fsubs
and
rcll
cmc
shr
and
je,pn
aaa
js
mov
orl
rcll
outsb
adc
sbb
mov
mov
stos
xchg
adc
ret
pop
pop
dec
push
jmp
je
fs
fcompl
test
sbb
fs
cmpsl
sbb
popa
add
xor
push
icebp
in
xorb
inc
cmp
cmp
mov
mov
xchg
dec
or
pusha
pop
ljmp
adc
mov
sbb
push
js
in
mov
mov
push
mov
adc
jno
divb
adc
aad
sbb
idivl
push
mov
fimuls
stos
icebp
inc
inc
cli
mov
cmp
xor
mov
jnp
adc
push
lds
sbb
stos
or
lods
fucomp
jo
add
inc
adc
push
and
sub
xor
adc
les
sbb
popa
mov
cwtl
sbb
scas
stc
adc
js
lcall
push
mov
pop
popa
and
adc
push
das
push
es
ss
mov
adc
lods
loopne
cmp
nop
sbb
sbb
cmp
jge
sub
mov
or
mov
or
adc
add
mov
in
ret
test
inc
pop
gs
xor
sbb
dec
add
or
test
fmuls
mov
lds
adc
dec
add
mov
rol
pusha
jo
enter
insb
in
mov
mov
lea
call
in
sbb
popa
xor
popf
mov
faddl
sbb
add
jbe
xlat
sub
or
arpl
jne
push
scas
mov
mov
push
fistpl
or
out
les
add
out
loop
out
in
xchg
add
imul
cwtl
mov
xchg
cmpb
insb
hlt
cmp
je
push
pop
imul
pop
add
xchg
and
mov
shrl
or
dec
push
xchg
movsb
fdivrl
mov
push
inc
or
ret
arpl
or
xchg
ret
and
cmp
lods
mov
mov
and
and
xor
lret
sti
sub
push
lods
and
mov
jae
into
and
rorl
ljmp
lret
push
or
push
add
lahf
jne
div
mov
cs
push
ss
add
mov
rorl
mov
das
jl
fisubl
mov
mov
xchg
cltd
daa
xchg
cltd
and
in
push
mov
xchg
sti
test
cmpsb
mov
fs
subl
cmc
int3
push
faddl
test
test
sbb
mov
dec
je
mov
jno
jae
sbb
add
inc
enter
jns
mov
test
cmp
or
inc
orb
jmp
and
dec
cmp
or
sbb
push
cwtl
mov
pop
push
test
notb
sbb
mov
and
loopne
inc
mov
sub
mov
aas
mov
in
cmp
sbb
and
sbb
cld
pop
or
shrb
push
dec
xor
in
pop
push
push
and
ja
pop
mov
xlat
cmp
daa
xchg
pop
mov
fistpl
lds
daa
iret
mov
xor
ds
cmp
into
test
es
adc
sbb
dec
mov
push
mov
enter
sub
movsl
loope
cmp
push
xchg
jg,pt
popf
or
aas
mov
mov
dec
cwtl
stos
ds
xchg
mov
mov
push
lret
js
mov
push
sbb
mov
mov
jp
fstl
pop
and
and
aas
mov
cmp
jo
dec
pop
xor
push
add
add
test
pop
cmp
mov
lret
push
out
cmp
jge
dec
stos
cs
movsb
jp
cmpsb
dec
push
mov
fsts
insl
out
sbb
mov
push
dec
and
sbb
cmp
sbb
lods
sarl
leave
aaa
inc
in
push
inc
xor
jl
sub
push
pusha
leave
xchg
jl
mov
mov
pop
xchg
fistl
push
mov
jecxz
mov
add
jecxz
dec
fwait
push
xor
movsl
sbbl
adc
xchg
jmp
or
adc
andb
add
inc
js
outsl
xchg
pop
xchg
and
insl
mov
fistps
out
cmpsl
or
mov
je
mov
out
sub
mov
and
sbb
adc
push
adc
xor
or
dec
pop
add
pop
jb
mov
pop
add
std
aas
xchg
add
pop
test
or
push
or
push
sti
push
cmp
and
and
ja
fs
sbb
mov
sbb
push
imul
or
sub
cltd
mov
and
and
imul
xor
xor
lods
push
mov
or
scas
xchg
pop
xchg
mov
xchg
add
js
pop
sub
xor
xlat
lea
xchg
xlat
jge
or
aaa
sub
push
add
inc
cld
pop
mov
out
pop
cltd
adcl
jo
cmp
xchg
xchg
add
sbb
sub
push
sbb
pop
mov
cmp
inc
pop
out
int3
mov
xchg
pop
dec
es
das
adc
add
lods
xor
xor
xorb
sbb
inc
mov
mov
xor
and
and
stos
rorl
popf
add
loopne
popf
adc
enter
sbb
pushf
or
pushf
inc
aaa
or
jmp
jnp
arpl
je
pop
es
adc
mov
jae
adc
jno
jge
loop
jno
stos
or
movsb
jb
mov
shll
xlat
call
xchg
inc
dec
dec
cmp
jecxz
cwtl
movsb
xchg
cwtl
outsl
jne
lea
lock
xchg
cmp
inc
push
andb
push
xor
add
inc
pop
mov
inc
divl
or
icebp
out
stos
shrb
pop
outsl
mov
cs
sub
andb
jg
cmp
mov
rcll
add
ja
push
adc
sub
inc
sub
mov
mov
xor
lret
inc
popf
pop
lea
orl
add
and
cmp
push
adc
cmp
or
xor
cli
pop
inc
push
and
sbb
pushf
jge
shrl
imul
shr
mov
out
cltd
pop
loop
push
mov
jbe
pop
and
rorb
or
cmp
xor
push
sub
roll
mov
clc
pop
enter
add
add
pop
mov
in
mov
out
icebp
dec
adc
mov
insl
ret
mov
nop
aaa
sub
fdivr
push
push
sub
leave
out
xchg
mov
or
mov
jno
imul
mov
sub
rolb
fildl
not
mov
xchg
or
cltd
adc
xchg
ud0
addl
pop
popf
pop
xlat
lods
sbb
sahf
fwait
lret
jp
cmp
xor
sbb
dec
or
mov
xor
jl
push
mov
jo
push
push
xchg
rcr
add
mov
jne
aad
cmp
ja
push
inc
dec
add
jo
or
mov
fldenv
and
sarb
or
cmp
push
mull
icebp
push
dec
cltd
cwtl
in
jo
dec
movsl
pop
sub
lock
pop
sbb
lret
popa
fs
popf
push
popa
mov
fistl
xlat
ja
sub
in
divb
mov
jmp
fnsave
adc
adc
addl
fcomps
pop
push
pop
jge
call
add
cmc
xorl
in
pop
int3
push
cmpsb
or
jo
cmpsw
ss
adc
mov
jae
xchg
pop
inc
cmpsl
mov
in
pop
call
jno
lret
mov
push
xor
cmp
sub
test
out
fsub
loop
cmp
mov
iret
cmp
stos
jno
push
dec
push
xchg
mov
std
add
jp
sub
cmpsl
jno
pop
sti
sbb
in
pusha
fcoms
fidivrl
mov
pop
inc
sub
pop
or
add
and
push
inc
push
and
sbb
in
pop
and
fcoms
nop
sbb
xor
and
mov
fcoms
inc
and
and
xor
fdivs
mov
and
call
lds
je
negl
push
xchg
daa
push
jno
jp
sub
daa
stc
imul
and
sub
sub
pop
sub
inc
or
inc
leave
adc
test
or
sbb
out
pop
push
les
add
fnstsw
push
jnp
negl
mov
push
push
sbb
pop
arpl
dec
adc
add
or
sbbl
movl
int
outsl
jne
mov
and
mov
jle
dec
mov
mov
and
xor
imul
rcll
pop
cmp
dec
add
or
inc
or
pusha
lea
fildll
sarb
and
inc
lcall
cltd
nop
sbb
adc
cwtl
mov
or
daa
xchg
sub
testl
xchg
dec
adc
or
ret
sbb
adc
and
add
add
and
dec
clc
movsb
push
inc
in
out
inc
add
je
iret
jo
inc
or
and
inc
or
cmp
int3
shrb
ret
js
lock
js
lea
popf
push
rclb
sub
scas
shrb
and
mov
daa
adc
rcrb
daa
or
sub
pop
pusha
loopne
add
push
jbe
sbb
into
faddl
push
or
jl
outsb
stc
fisubrl
mov
pop
adc
mov
loopne
dec
jne
test
xchg
push
out
or
aam
xor
test
out
mov
push
ja
imul
sub
adcl
inc
adc
lock
or
scas
xchg
scas
pop
pusha
push
pop
push
xor
loopne
push
dec
pop
or
in
and
repnz
adc
xor
les
rorb
cmp
xor
jge
sbb
test
or
lods
rcll
or
lock
push
dec
and
pop
lock
mov
mov
adc
or
loopne
mov
add
cmpsb
stos
sub
fs
add
je
imul
push
int3
bswap
push
icebp
mov
bound
mov
sub
repnz
add
push
adc
lea
push
mov
nop
sbb
and
fld
movsl
jge
popa
call
pusha
xor
dec
ffree
in
imul
cmp
shll
push
push
mov
sub
sbb
or
inc
inc
sub
rol
push
adc
add
enter
imul
dec
cmp
lea
jo
lahf
mov
and
pop
call
adc
mul
dec
push
pusha
cmp
stos
ficoms
and
decb
jge
add
faddp
cmpsl
adc
sbb
addr16
hlt
pop
test
and
cmc
jnp
push
repnz
loopne
out
adc
stos
dec
sub
es
pop
repnz
adc
cmp
lcall
idivb
inc
jne
push
loopne
sarb
mov
jge
mov
mov
loope
dec
fldcw
or
add
add
aaa
add
mov
dec
movsb
cltd
clc
push
push
shr
add
andl
pop
movl
pmulhuw
sbb
adc
push
adc
mov
sub
std
xor
mov
shl
xor
jns
mov
lods
adc
mov
adc
nop
push
cmpsl
inc
stos
jge
es
movsl
jae
aam
sub
sub
mov
popf
jae
sbb
mov
xor
add
mov
or
jecxz
mov
clc
or
js
lea
pop
inc
pop
nop
add
xchg
test
and
iret
xor
orl
cmpsb
adc
and
rcr
dec
dec
addb
jmp
rorl
addl
dec
push
inc
jmp
mov
xor
scas
arpl
xchg
bound
mov
subl
mov
cmpsl
or
pop
fistl
add
jmp
sub
popa
lds
jbe
addl
add
mov
or
add
and
in
add
movsb
inc
stos
mov
lock
mov
std
mov
mov
sbb
leave
mov
cmp
adc
mov
mov
push
mov
dec
sbb
sub
movnti
inc
or
bound
std
test
or
jae
aas
ret
aam
pop
push
push
or
push
mov
movsl
fidivrl
pusha
cmp
xchg
add
add
sub
pop
or
or
les
ret
cmpsl
mov
out
in
inc
mov
dec
fsub
cmp
jle
loope
clc
jg
jae
inc
add
outsb
mov
fcomps
cmp
subb
cmp
mov
cmp
mov
pop
pop
or
xchg
faddl
sub
xor
sbb
pop
gs
paddusb
mov
sbb
mov
lret
popf
les
jp
cltd
add
or
addb
lock
pusha
enter
jne
or
adc
sbb
daa
stc
add
test
sbb
add
pop
inc
push
push
dec
mov
in
sub
add
fistpl
pop
cwtl
ficoms
inc
daa
sub
stos
xor
xor
mov
sbb
adc
sbb
imul
enter
cmp
dec
rorb
mov
lea
mov
mov
out
insl
mov
movl
jp
inc
cltd
push
enter
ljmp
cld
lea
js,pn
dec
cmp
dec
dec
outsb
pop
or
jae
or
pop
or
push
hlt
bound
sub
loopne
insb
sti
adc
or
push
add
shlb
insb
ret
inc
xchg
inc
sbb
lcall
movl
adc
add
popa
scas
add
dec
sub
sarb
add
cmp
lock
cmp
or
dec
sbb
add
insl
pop
lea
jmp
arpl
adcb
or
cltd
inc
push
add
popf
pop
adc
add
mov
jp
add
add
dec
adc
dec
rolb
das
test
shlb
scas
jne
or
xchg
mov
add
sbb
adc
or
inc
movl
sub
popf
mov
mov
outsl
inc
sti
out
xor
cs
mov
addl
or
add
push
mov
add
mov
add
js
inc
lea
clc
cmp
dec
popa
inc
ja
mov
loope
aas
popf
cwtl
je
dec
adc
and
imul
mov
es
js
inc
or
add
or
mov
lods
xchg
add
imul
clc
inc
adc
adc
inc
loop
adc
outsl
popf
cs
xchg
cwtl
bound
and
scas
push
mull
cmpsl
push
jb
rcrb
cmp
lea
pop
push
push
xor
in
dec
mov
out
push
daa
push
xor
sbb
jb
aas
sbb
int
out
aad
je
sahf
incl
das
rolb
pop
cwtl
add
iret
leave
push
fdivl
add
das
subl
cmp
mov
dec
cmp
movsb
fcmovnb
inc
outsb
mov
jp
cmpsl
push
nop
inc
sbb
movsl
adc
decl
rcrl
or
inc
pop
jns
in
push
sub
dec
dec
xor
inc
xchg
pop
rorb
adc
xchg
sub
es
and
insl
pusha
push
mov
rcrb
sub
dec
in
pop
rol
adc
adc
enter
adc
sarb
add
add
mov
data16
sarb
test
orl
xor
fdivs
out
shlb
xchg
mov
js
push
test
sbb
inc
test
xchg
pop
sub
push
lock
jg
pusha
faddl
push
dec
inc
or
sub
lahf
adc
mov
lea
dec
and
mov
adc
jbe
fsubrs
cld
sbb
cmp
dec
inc
mov
sbb
adc
xor
inc
repnz
xor
shrl
sbb
mov
mov
mov
xchg
mov
mull
add
data16
push
or
les
add
mov
adc
sbb
enter
test
aas
push
lods
mov
clc
xlat
hlt
add
adc
and
test
pop
cmp
add
dec
jb
add
roll
arpl
xchg
repnz
scas
push
lcall
lret
cmovb
jge
call
subb
adc
push
movl
push
inc
inc
mov
sub
into
jg
inc
ud2
dec
sti
inc
push
mov
add
cmp
nop
out
xchg
dec
dec
inc
icebp
push
add
xchg
data16
add
xchg
and
pop
mov
push
jge
lea
insb
jo
fwait
and
or
jmp
inc
cmp
ss
into
push
sahf
cltd
jae
mov
in
mov
or
push
movl
cwtl
or
push
insb
or
subl
mov
dec
sbb
icebp
cmp
lods
push
pop
ror
push
mov
cmpl
mov
in
mov
push
jmp
pop
negb
add
sbb
xchg
addl
cmpsl
add
inc
popa
mov
mov
xchg
jns
push
ficompl
arpl
shr
addr16
sbb
gs
push
fdivs
mov
pop
cmp
insb
adcb
shlb
jo
mov
cmp
fimuls
sbb
adcl
shrb
mov
jl
add
dec
dec
fs
mov
pop
add
dec
add
xorl
inc
add
pop
xor
popa
lock
xor
clc
xchg
mov
sbb
stos
jnp
repnz
andl
pop
popf
cmp
add
pop
cltd
inc
dec
out
repz
pop
in
add
mov
add
inc
jnp
push
in
jge
lea
movsb
mov
shll
mov
mov
clc
mov
adc
add
test
rorl
fistpll
cmp
xor
xchg
jl
fisubl
add
xchg
sbb
jg
out
movl
addb
adc
syscall
rcl
mov
mov
dec
subl
mov
cmp
test
add
stos
lods
rol
out
push
push
dec
shrd
push
fsincos
add
mov
jge
or
jnp
mov
movsb
bound
and
xchg
cltd
lods
lock
mov
or
sub
sub
mov
jo
and
inc
sbb
pop
bound
or
imul
inc
bound
addr16
fdivs
sbb
cltd
pop
mov
xchg
mov
pop
dec
jo
jae
call
push
ja
sti
adc
adc
mov
fcoms
jno
mov
or
out
push
push
xor
xchg
pop
inc
andl
and
mov
xchg
mov
lcall
imul
shlb
in
mov
xchg
sbb
or
js
loopne
xchg
push
enter
addl
js
movsbl
mov
ss
pop
jno
jne
and
mov
je
adc
fwait
dec
fisubs
adc
adc
mov
pushf
mov
cmp
sbb
gs
mov
hlt
push
inc
test
rolb
pop
dec
cmp
lock
mov
lret
mov
sbb
pop
js
je
lret
jbe
mov
cld
adc
xor
in
jnp
jne
mov
xor
xor
jecxz
std
addl
lea
stc
lock
fwait
push
bnd
hlt
pop
dec
lods
repnz
dec
push
xor
addb
arpl
mov
mov
arpl
pop
lcall
gs
jno
xchg
fwait
and
shrb
sub
dec
nopl
repz
sbb
jns
std
lock
and
xor
jno
or
sub
and
mov
push
and
cmp
faddl
out
out
fsubrp
or
push
add
es
adc
add
int3
add
in
jmp
add
das
ret
xchg
mov
mov
hlt
and
inc
loope
pop
mov
dec
push
mov
shrl
push
pop
sub
push
push
jg
bound
sbb
and
popa
inc
xchg
mov
sub
mov
popa
and
imul
and
je
insb
fiadds
jmp
cmp
scas
sbb
jno
xor
das
push
mov
and
add
mov
test
sbb
xchg
fstl
or
aam
mov
dec
into
sbb
inc
xor
out
add
ret
mov
mov
or
push
mov
mov
shrb
cld
leave
daa
or
or
inc
das
lret
andb
mov
aaa
lea
rcrb
lret
or
pop
pop
cmp
xchg
clc
imul
jl
popa
je
mov
ret
test
fstps
shrb
in
loope
jnp
jns
mov
push
cmp
in
mov
add
sarb
icebp
lret
mov
popa
sbb
cmp
ja
mov
mov
mov
movl
mov
jl
or
mov
gs
pop
mov
test
cmp
add
push
stos
and
aam
pop
clc
adcb
and
rclb
mov
adc
call
adc
arpl
push
imul
insb
insb
add
jno
lock
clc
adc
mov
pop
enter
adc
mov
add
test
popa
cmc
mov
cmp
cmovbe
pop
inc
aaa
add
scas
mov
shrb
push
int3
shr
xor
pop
int
sub
jno
sbb
xor
mov
pop
mov
inc
pop
arpl
sub
and
movsl
jo
in
in
adc
pop
bound
movsl
movsb
pop
popa
add
add
rcll
inc
add
mov
mov
inc
aas
inc
popl
push
and
aam
jbe
aam
hlt
fsubrl
sub
insb
fldl
or
push
clc
sub
clc
jmp
jno
stc
sub
push
add
push
push
push
push
push
inc
jl
mov
xor
and
pop
popf
lds
sub
or
icebp
insb
jne
mov
call
sub
mov
inc
push
jne
dec
fmuls
adc
or
out
jns
adc
int3
lods
xchg
ror
push
pop
or
sbb
adc
xorl
pushw
push
adc
repnz
xchg
nop
imul
mov
mov
das
adc
xor
sub
adc
sbb
loopne
mov
add
add
sub
test
js
imul
pop
sti
xor
lahf
pushf
jmp
push
inc
cwtl
lcall
orl
hlt
adc
mov
adc
sti
push
pop
add
lret
pop
or
mov
orb
or
cmp
jmp
sti
or
cmp
js
add
xor
sbb
xchg
jbe
scas
or
inc
dec
popf
enter
adc
push
inc
lret
adc
add
add
cmp
add
ss
cmp
mov
mov
inc
sbb
jne
nop
push
and
subl
jno
movsb
nop
movb
sub
add
sbb
dec
sub
cmp
imul
adc
sub
nop
xor
outsl
cwtl
mov
mov
aad
mov
xchg
push
mov
jg
push
push
rcl
xchg
mov
adc
movsb
adc
jbe
pop
insw
xchg
addr16
jmp
mov
lock
inc
mull
jbe
cmp
push
cmp
or
jne
sbb
in
pop
int3
clc
jo
or
jnp
add
lret
adc
aam
cmp
nop
dec
jno
cmp
mov
sbb
jno
push
xor
enter
in
adc
enter
mov
lods
jne
mov
push
out
jg
outsl
adc
inc
cwtl
in
push
push
jo
xlat
mov
mov
loop
adc
jecxz
mov
mov
dec
test
mov
adc
add
and
sub
mov
xchg
mov
arpl
rorb
jp
inc
inc
mov
hlt
popa
jecxz
dec
in
mov
dec
in
ret
cmp
bound
inc
pop
por
and
dec
mov
fwait
push
je
jge
mov
lock
pop
add
xchg
cmp
cmpl
ss
mov
xchg
fdivrs
lret
pop
into
pop
dec
pop
rcl
adc
cmp
js
rolb
jmp
sbb
rcl
decb
pop
int3
je
ds
int3
pop
push
mov
xchg
les
andl
jmp
dec
in
push
fists
fs
xchg
mov
and
clc
mov
and
insb
divl
aad
mov
dec
mov
jle
insb
xor
pop
cmp
in
inc
dec
dec
jge
push
rorl
loope
fs
cwtl
mov
or
sbb
pop
add
and
adc
jge
push
test
daa
aas
fstpt
daa
pusha
in
mov
sbb
lret
test
mov
ja
xor
in
sbb
xlat
lcall
ret
jns
pop
fmuls
sbbl
push
mov
mov
shll
ss
mov
std
flds
cli
aas
push
lea
push
xor
or
scas
push
lock
loopne
int
dec
mov
xchg
sbb
pushl
push
pop
dec
fidivrl
mov
jns
movsb
fnstenv
sub
imul
cmp
inc
dec
mov
rcrb
adc
cmp
pop
nop
stc
jle
add
cmpw
sbb
cmpb
scas
or
push
cld
mov
pop
push
pop
mov
add
sar
sub
mov
push
repz
pop
mov
jns
les
pusha
adc
pop
jns
sbb
add
lock
add
xor
xorb
add
iret
inc
pop
lock
in
mov
dec
push
subb
sub
jl
sub
jmp
mov
pop
sti
lcall
dec
movzwl
cmpl
push
adc
and
or
test
sub
inc
ret
sbb
cs
add
cmp
add
mov
subb
ss
xor
adc
mov
jae
outsl
push
sbb
xor
addr16
inc
add
mov
push
fs
push
je
xchg
mov
insl
sysret
in
sub
xchg
pop
and
pop
and
push
adc
sbb
push
and
out
lcall
jb
fs
push
cmp
dec
and
add
and
pop
aas
pop
dec
pop
push
pop
push
dec
push
arpl
jb
jo
cmp
add
shl
and
test
pop
divps
adc
adc
mov
inc
fadds
push
and
roll
push
imul
icebp
and
cwtl
stos
out
inc
add
add
add
and
nop
pop
aaa
pop
mov
popa
sub
add
orb
scas
sub
adc
add
rolb
mov
pop
shlb
cmpsl
add
jp
inc
adc
call
and
aam
or
lock
call
mov
fwait
jle
adc
pop
adc
shr
push
mov
sbb
pop
fwait
int
mov
pop
dec
inc
iret
mov
cmp
sbb
and
fucomp
and
add
sub
push
or
mov
pop
adc
cmp
sub
js
mov
add
add
pop
adc
pop
jl
xor
push
shll
mov
dec
orl
test
test
inc
adc
orl
repnz
push
or
or
jne
pop
add
add
pop
lods
or
inc
push
pop
dec
daa
outsb
inc
jp
cmc
push
cmpl
pop
je
or
adc
adc
leave
or
mov
mov
faddl
in
and
sbb
arpl
jl
add
or
jne
or
test
hlt
ds
lea
mov
mov
sbbb
inc
mov
into
adc
inc
dec
pop
jne
imul
sub
inc
add
loope
push
and
xchg
les
aaa
scas
push
je
and
hlt
and
aas
or
xchg
push
out
mov
call
push
and
fldl
sbb
pop
sbb
iret
hlt
lcall
ja
out
fnsave
jno
sbb
rcrb
sbb
in
loopne
mov
xchg
inc
lods
sub
roll
mov
dec
fdiv
aas
sbb
mov
dec
push
mov
stc
stc
aad
and
mov
push
loop
sub
incl
fcom
mov
lahf
fimull
inc
and
addl
jge
mov
xchg
or
push
push
dec
jo
inc
mov
in
cmp
pusha
sub
mov
pmaddwd
gs
sbb
adc
xor
or
mov
mov
push
lahf
xchg
enter
xor
push
inc
aaa
pop
fs
push
mov
jmp
push
push
das
or
and
pop
loope
mov
jmp
adc
dec
lahf
adc
pop
pop
or
mov
adc
inc
sti
pop
inc
xchg
cmp
mov
add
rolb
mov
and
adc
mov
sub
mov
pusha
add
push
adc
xchg
xor
inc
add
mov
and
fists
cmp
mov
mov
mov
daa
add
or
mov
push
sbb
mov
xchg
lahf
stos
pop
aaa
adc
daa
dec
lods
inc
mov
push
bound
cmp
pop
xchg
lcall
sub
les
push
dec
push
std
lock
icebp
push
or
push
iret
xor
sbb
lcall
push
mov
dec
pop
sub
pop
repnz
mov
pusha
popa
dec
inc
test
jmp
cmp
jne
ss
out
repz
and
xlat
inc
inc
dec
xchg
xor
mov
push
test
test
mov
mov
loop
push
pop
fwait
in
test
sbb
pop
or
hlt
lea
fcoms
fdivrp
push
sbbb
xchg
pop
movsb
xor
adc
jae
mov
shrb
sub
push
jge
mov
aaa
add
test
push
xchg
into
or
dec
rol
jmp
aam
xor
or
or
enter
cmp
rcrl
dec
mov
mov
pop
imul
pop
pushl
cmpl
movsl
inc
outsb
or
mov
andl
jge
inc
xchg
inc
subl
mov
push
or
jp
add
dec
inc
es
dec
shr
inc
aam
sahf
data16
mov
fisubrs
sub
je
nop
inc
add
movb
jne
push
add
flds
inc
push
push
sub
enter
jne
fists
lret
push
lods
jnp
xor
movsb
pop
xchg
push
add
jle
lret
or
cld
jmp
add
xchg
mov
loop
pop
lea
dec
aaa
movsl
sub
js
pop
pop
and
mov
lea
push
push
je
nop
lock
cmp
das
jae
push
and
and
pop
fsubrl
fisttpll
clc
push
xor
pop
sahf
and
or
cmpsb
cmp
cmpsb
cld
hlt
xor
xor
sub
shlb
mov
loop
or
push
push
add
repz
insb
pop
and
stos
push
and
push
call
cmp
sub
push
jne
push
adc
and
xchg
push
adc
cmp
jmp
push
jg
mov
clc
repz
cmp
out
pop
es
and
je
imul
out
push
pop
sub
xchg
addl
sbb
enter
mov
sub
mov
ret
mov
test
bound
mov
sub
hlt
xchg
or
add
fmull
rol
add
adc
mov
mov
ja
adc
inc
or
pop
jns
adc
inc
sub
adc
mov
add
jmp
test
mov
inc
pop
js
mov
enter
dec
jmp
mov
test
or
daa
and
mov
enter
stos
test
test
or
sub
pop
iret
fldenv
loopne
lret
or
cmp
es
lods
ret
cmpsb
dec
mov
test
jno
xor
xchg
sar
fcoms
jo
mov
cmp
in
or
add
add
add
xor
test
or
pushf
inc
dec
inc
adc
lcall
in
lret
scas
sub
xchg
mov
mov
cmp
xchg
push
xchg
dec
jne
push
dec
add
icebp
lea
mov
inc
xchg
xchg
push
shr
cmpsb
push
loope
orb
cmp
sub
leave
xor
dec
ret
xor
or
test
mov
lock
sbb
add
imul
mov
mov
jbe
pop
aam
or
xor
or
or
xor
or
push
into
add
pop
mov
add
mov
fisubrl
add
jecxz
or
xchg
and
add
adc
sbb
cmp
push
push
jp
lock
add
loope
mov
mov
push
sbb
filds
lret
pop
add
push
pop
aaa
inc
mov
popa
cmc
or
mov
add
in
negb
sub
inc
dec
adc
dec
push
or
je
jg
xchg
loopne
cltd
arpl
addr16
mov
inc
imul
sbb
and
add
ret
mov
or
inc
mov
pop
pop
xchg
sub
push
sarl
in
mov
pop
sbbb
and
repnz
jne
inc
add
fwait
hlt
imul
sbb
and
xlat
inc
mov
push
hlt
imul
sub
stc
sub
jnp
clc
imull
mulb
cli
cmp
sbb
inc
popa
inc
aaa
mull
add
xor
xchg
cmc
push
and
loop
xchg
pop
lea
or
out
orl
sbb
xor
push
pushf
pop
sub
aas
int3
in
mov
push
lahf
cld
imul
push
shrb
sti
sub
icebp
in
lods
andl
sbb
mov
and
pusha
mov
push
fwait
mov
pop
clc
gs
mov
push
sub
pop
inc
and
or
movsb
jo
in
adc
rol
fisttpll
and
xor
jbe
adcb
jb
test
es
pusha
xor
inc
rcrb
sbb
ret
jp
movsl
out
sub
popf
cld
icebp
mov
push
jo
add
stos
in
sub
hlt
push
or
sub
cltd
sub
movsl
and
mov
insb
popf
scas
xchg
inc
mov
fnstsw
dec
loopne
in
sub
mov
test
sub
daa
aas
gs
shlb
sbb
roll
push
lea
insl
cmp
andl
adc
hlt
or
add
xchg
xor
sub
std
nop
xor
and
push
scas
rorl
xchg
nop
dec
lret
and
insl
pushf
xchg
pop
add
pop
xchg
ficoms
adc
push
cs
fs
lods
das
jb
pop
and
push
ret
push
mov
adc
add
mov
subb
pop
and
add
add
xor
rol
cmp
jmp
fwait
push
sbb
call
lcall
adc
leave
mov
lock
inc
insb
cwtl
rol
dec
jg
push
inc
jns
dec
test
pop
xor
bound
dec
mov
mov
fstl
cmp
jo
arpl
cmpsl
adc
xchg
jbe
mov
jnp
inc
adc
sbb
push
or
clc
sbb
jo
and
cli
repnz
aaa
aad
and
pop
push
and
add
push
add
dec
leave
in
xchg
dec
inc
inc
test
add
push
or
jnp
mov
cmp
push
sub
lea
inc
cmp
push
mov
push
and
push
push
dec
or
in
jmp
xor
lea
adc
mov
lcall
push
ja
mov
mov
vphsubbw
adc
shll
mov
add
xchg
andb
pop
imul
cmp
dec
in
pop
inc
sbb
leave
into
and
inc
or
shr
mov
shlb
mov
imulb
push
sub
daa
jne
lods
xorl
insb
push
jnp
or
jo
cltd
mov
push
out
mov
mov
xor
push
into
popl
out
dec
imul
adc
pushf
push
mov
jg
std
or
test
adc
sub
pusha
sub
xor
xor
stc
lock
or
dec
enter
push
add
xchg
adc
cmp
andl
pop
in
inc
fisubl
mov
cli
adc
in
mov
dec
jo
jo
into
lock
add
jno
dec
add
inc
icebp
sbb
clc
and
jmp
clc
jl
or
or
xchg
mov
adc
xchg
mov
add
push
sub
clc
push
jnp
outsl
cmp
mov
and
xchg
xor
pop
mov
adc
scas
xor
call
xchg
mov
jo
push
pushf
pop
add
mov
sub
sbb
xchg
popa
or
adc
cmp
pop
dec
ss
jge
mov
xor
xor
in
mov
jae
hlt
push
dec
push
cmpb
sbb
inc
lcall
out
add
in
pop
add
sbb
rcrb
push
add
and
adc
push
mov
cmp
add
popa
mov
adc
and
adc
loop
movsl
imul
jl
es
out
adc
xchg
or
xor
jb
scas
jns
das
icebp
push
xorb
mov
sbb
mov
shll
add
inc
fisubs
add
clc
sarb
xchg
xor
sbb
cmp
jno
popf
loop
mov
xor
jge
pop
arpl
adc
pop
and
xchg
add
insb
ja
push
mov
jns
xchg
add
cmp
aad
mov
lea
cmp
ret
sbb
jo
mov
jns
dec
inc
lock
scas
jge
mov
inc
adc
hlt
cmp
movsb
lods
or
dec
cmp
inc
push
mov
or
sbb
ret
roll
insl
xorl
and
push
nop
test
adc
adc
inc
cwtl
std
lcall
and
jecxz
inc
dec
adc
and
sbb
test
and
ja
repz
xchg
sbb
mov
cmp
lds
adc
push
or
test
shrb
stc
mov
push
lret
shrl
das
rcll
mov
and
movsb
or
or
adc
push
mov
mov
fistpll
xor
insl
fisttps
and
ja
lds
insl
in
out
insl
mov
pop
sbb
sbb
add
shrb
add
or
jp
sub
inc
push
arpl
jns
and
stos
fiaddl
add
inc
sahf
fistl
xorb
add
cmp
das
and
insl
xor
push
insb
push
leave
test
or
add
ret
xchg
add
les
movl
cltd
ljmp
test
cmp
xchg
shlb
add
adc
adcb
push
ja
sbb
add
cwtl
rcll
push
pop
pop
sbb
je
gs
dec
cmp
inc
pop
or
hlt
pop
cltd
punpcklwd
mov
mov
imulb
outsb
cld
mov
dec
jecxz
pop
in
adc
je
inc
ret
sbb
adc
add
jbe
mov
push
bound
mov
aam
or
js
add
mov
lods
pusha
add
xor
xor
push
int3
or
mov
aaa
mov
leave
sub
sbb
loope
movsb
movsl
pusha
sbb
add
outsl
jno
add
inc
sti
pop
rcll
or
fimuls
arpl
sarb
rorb
rcl
cmp
fisttpl
push
fisttpll
jno
fstps
pop
mov
mov
mov
xchg
mov
mov
nop
jge
mull
daa
mov
mov
xor
dec
fistl
pop
add
popa
inc
sub
scas
push
mov
lock
lds
jmp
jp
adc
xchg
cs
dec
loop
mov
scas
sub
into
push
mov
xchg
xor
popa
sub
jbe
rol
xchg
jl
ret
jle
pop
sub
adcl
nop
xor
decl
testl
inc
push
jle
loop
add
jne
das
fdivrs
lahf
push
adc
mov
add
jg
push
insb
mov
cmp
js
fcomps
ret
pop
cs
xchg
lock
add
push
ror
scas
cmpsb
in
fcmove
stos
add
push
rolb
push
orb
je
inc
loope
and
jle
add
in
inc
movsl
bound
mov
push
daa
add
mov
insb
popf
adc
jnp
nop
or
add
inc
lea
sub
test
je
xchg
or
out
orl
jle
lock
push
pop
push
push
outsl
pusha
sub
scas
sub
fs
sub
xorb
inc
push
fldenv
cmp
fiaddl
pop
xor
sub
jne
aad
stos
in
sub
dec
ret
or
pop
lret
mov
nop
shl
push
sahf
add
inc
jl
xchg
push
je
push
and
addr16
outsb
inc
xor
inc
and
or
jmp
cld
cwtl
and
adc
push
xchg
or
les
add
jno
in
mov
clc
and
clc
sarb
xchg
pop
loop
xor
sbb
or
outsb
adcb
add
jne
add
push
sub
push
pop
xor
loopne
jb
iret
push
sub
lea
push
mov
mov
xor
lods
inc
sbb
pop
lds
fwait
sbb
cs
hlt
dec
ret
mov
xchg
mov
pop
lcall
jl
adc
addps
test
sub
roll
mov
shl
cltd
ss
aam
pusha
pushf
push
lea
pop
js
and
outsl
mov
dec
lcall
lret
fimuls
dec
mov
dec
mov
ljmp
xor
pop
call
adc
pop
fstpl
or
std
aam
add
push
imul
push
test
outsb
sbb
push
xor
sbb
jle
mov
ret
nop
dec
mov
inc
mov
mov
push
sbb
loopne
arpl
mov
popf
in
add
out
out
icebp
hlt
shr
sub
call
das
add
js
push
sahf
pop
in
adc
push
lea
repnz
adc
inc
mov
insl
or
dec
gs
imul
repz
push
pop
inc
sti
cmp
add
fwait
xor
mov
jp
mov
das
mov
inc
push
adc
shll
test
jg
movl
imul
adc
fldz
and
add
testb
and
cmp
and
sub
jnp
push
mov
push
cmp
insb
and
pop
imul
xor
mov
dec
adc
push
loopne
xor
cmp
test
add
in
mov
mov
pop
pop
mov
shlb
mov
test
mov
pusha
rorb
fisttpll
mov
xchg
xor
dec
or
jne
loopne
mov
add
lea
fsubs
call
inc
sbb
add
call
pop
call
stc
mov
inc
mov
scas
sbb
lahf
test
add
xor
mov
or
push
scas
xorl
jmp
call
xor
sbb
adc
cmp
push
cmp
jle
stc
pop
jle
cmp
jp
push
cmp
cmp
inc
pop
add
jge
mov
mov
push
add
inc
jmp
or
mov
lret
clc
movw
lret
mov
cmc
add
bnd
mov
push
mov
cmpsb
cs
icebp
cltd
pop
idiv
lock
xchg
cld
adc
scas
imul
fcoms
mov
add
mov
cmp
and
test
adcb
call
fnstcw
push
popa
or
outsb
jbe
push
dec
or
hlt
cmpsl
xorl
mov
data16
pop
and
xor
pop
mov
dec
js
add
and
movsl
or
adc
and
adc
or
cmp
and
jecxz
int
mov
sbb
sub
xor
cmp
mov
adc
add
nop
dec
push
fdivrs
xchg
dec
scas
pop
insl
iret
jo
cmp
or
repnz
nop
xchg
dec
outsb
pop
or
adc
pop
sbb
enter
les
nop
and
test
sarb
or
and
add
loopne
cmp
lret
jg
push
push
rolb
mov
dec
insl
add
mov
fidivl
jl
outsl
pop
sub
or
into
cmp
add
adc
add
push
inc
fimull
dec
push
sub
or
leave
push
nop
sub
or
add
push
repnz
mov
and
jns
xor
sbb
dec
orb
and
bound
push
dec
leave
jmp
xor
popa
push
jo
cli
ret
adcb
std
inc
rcl
adc
aam
loope
subb
cmp
sbb
xchg
inc
push
cmpsb
aaa
sbb
mov
sbb
popa
mov
loop
push
jo
cmpsb
add
mov
sub
in
mov
inc
fwait
jl
sbb
fidivl
and
add
mov
add
or
outsb
adc
and
and
jnp
cs
leave
sub
fstl
add
push
jmp
lods
shlb
mov
adc
es
popa
adc
sbb
outsl
sbb
push
mov
cmpsl
std
cmp
stos
aad
pop
lods
test
stos
in
mov
ret
int3
andb
add
add
sbb
and
popf
adc
shlb
sbb
xor
sbb
leave
nop
pop
dec
es
adc
add
rcll
aas
add
add
jne
xor
add
add
or
and
push
xchg
and
inc
loopne
in
add
push
and
sar
les
mov
mov
or
adc
sbb
stos
loope
or
fwait
loope
hlt
jb
and
mov
out
rol
push
sbb
sbb
mov
push
mov
cli
sbbb
test
xorb
dec
push
int3
push
icebp
or
and
ret
add
add
mov
adc
jne
lea
add
add
push
popf
xor
push
bnd
push
mov
test
xchg
enter
push
les
add
add
enter
inc
outsl
add
orl
aad
jb
or
add
rolb
dec
aaa
lock
fwait
adc
fstpt
sbb
pop
scas
nop
xchg
sub
or
dec
xchg
cmp
in
je
push
repnz
jne
rol
cmp
outsb
adc
pop
rcrb
es
in
pop
outsl
popa
rolb
add
sub
push
adc
cli
push
addr16
rcrb
ret
and
sbb
int3
inc
cld
xor
and
add
test
inc
sar
pushf
jbe
sbbb
xorl
negb
aam
dec
jae
outsb
push
ja
lock
call
pop
adc
pop
or
xor
sbb
fildl
in
test
pop
stos
cmp
jne
mov
lcall
ret
popa
xchg
mov
sbb
into
add
push
add
xlat
sub
pop
or
pop
fildl
jb
cmp
dec
mov
notb
add
decb
testb
in
insb
cmp
add
jl
fs
mov
cmpsb
add
or
imul
in
shrl
pop
adc
sub
je
lods
mov
add
pusha
addl
and
es
adc
xchg
pop
and
dec
add
std
mov
xor
shlb
mov
es
dec
insb
push
and
rol
addr16
iret
inc
xor
jle
sbb
shl
add
fildl
adc
adc
xor
mov
cmp
test
jle
add
pop
sbb
xchg
adc
inc
push
pop
push
mov
mov
xor
fcmovbe
aaa
je
mov
out
call
and
popf
adcl
sub
cmp
fisubrl
or
sbb
insb
call
inc
dec
jmp
dec
fldl
xchg
inc
je
sbb
add
push
xchg
es
cmp
sti
inc
lcall
dec
ja
jle
test
and
dec
out
ucomiss
push
lods
mov
push
xchg
jge
lods
mov
jo
jnp
xchg
add
pop
fsub
pop
fsubrp
push
add
pop
push
rorb
cmovne
dec
dec
out
lds
int3
icebp
in
push
mov
in
ret
dec
sub
or
js
loopne
cmp
mov
inc
int
loope
cmpsl
dec
pop
int3
in
divb
inc
negb
mov
inc
cmpsl
inc
insl
adc
xor
gs
sub
mov
sub
and
add
bound
sub
shll
or
in
outsl
stos
dec
arpl
mov
jge
dec
insl
arpl
aam
pop
jo
jae
je
into
dec
dec
mov
movsl
pop
xor
push
daa
push
add
cmp
sbb
lods
jbe
fdiv
push
or
iret
das
add
jnp
xchg
pop
in
ret
ja
xor
mov
aaa
adc
push
and
xor
push
in
or
andl
in
gs
daa
xor
out
lock
cmp
jnp
fmull
mov
call
xor
push
clc
mov
add
cmp
jb
sbb
leave
shld
add
rclb
xchg
ja
jb
xchg
mov
push
ss
push
inc
add
push
add
push
je
pusha
or
ret
sub
add
push
leave
adc
push
push
mov
push
xor
or
add
or
mov
lret
push
sbb
push
lods
add
pop
pop
test
leave
pop
or
in
dec
mov
nop
test
shll
xor
dec
push
mov
mov
ja
or
mov
cmp
test
and
push
sti
cmpl
je
sahf
mov
push
sbb
jle
out
inc
jle
push
cmpw
jne
add
and
jge
pop
outsl
cmp
dec
push
push
push
xchg
cmpsl
jl
mov
test
jo
decl
jg
stc
std
mov
or
frstor
sbb
out
lretw
jl
jle
push
push
push
push
xchg
dec
pusha
inc
push
add
test
cmp
mov
aas
push
jle
dec
or
add
push
push
icebp
add
pop
mov
adc
les
sbb
out
adc
mov
imul
jle
add
popa
es
xlat
arpl
ret
cmp
jnp
push
rcrb
sar
je
mov
dec
pop
sbb
pop
jle,pt
movsl
lods
test
add
inc
imul
or
aam
call
jle
mov
xchg
push
mov
push
popf
push
xchg
xor
test
shrb
pop
dec
sbb
pop
pushf
sarb
jae
movsb
std
and
subl
test
xchg
lock
movsb
inc
and
inc
lret
or
add
sub
sahf
int
adc
xchg
movsl
jl
add
lods
adc
push
ss
imul
addr16
mov
lds
mov
mov
sahf
pop
pop
xlat
add
and
and
lods
push
xor
lods
mov
cwtl
push
insl
nop
or
xchg
imul
push
sub
xor
stc
and
enter
ret
pop
add
sbbl
or
cmp
dec
outsl
call
ficoml
sbb
imull
nop
or
or
sbb
aaa
fwait
dec
cwtl
jmp
les
sub
movsl
in
rol
inc
xor
jno
dec
invd
add
add
jb
scas
les
add
push
adc
dec
cmp
add
jp
mov
outsb
pop
cmpsl
bnd
add
cmp
repnz
jb
add
add
cmpsb
add
jns
fxch
shr
dec
popf
jno
or
out
loopne
rep
inc
push
xchg
add
xchg
jg
cmpl
dec
xchg
push
and
sbbl
push
sub
loopne
jno
inc
and
mov
ret
push
movsb
xchg
test
rcl
inc
and
pop
sti
rcrb
ret
pop
popa
adc
faddl
sub
fadds
je
mov
leave
bound
mov
jno
sbb
in
jge
ljmp
icebp
and
xor
add
lret
mov
add
insl
adc
sub
dec
je
add
cld
push
icebp
dec
sbb
dec
jne
xchg
sub
bound
push
insb
adc
jno
pushf
adc
or
test
sbb
jg
sbb
in
push
sarl
pop
lods
jns
push
pop
mov
cmp
ja
scas
scas
push
mov
lea
es
cs
dec
jnp
cmp
test
inc
mov
hlt
push
imul
fs
jp
inc
pusha
mov
in
inc
lods
int3
lock
arpl
sbb
adc
cmp
mov
movsl
and
adc
pop
push
pop
arpl
sahf
and
addr16
pop
adc
cmp
nop
test
enter
sub
jb
and
and
jle
inc
push
sbb
insb
inc
push
cmp
mov
nop
fdiv
sub
sbb
enter
mov
push
push
pop
movsl
mov
fs
sahf
cmpsl
stc
mov
adc
jns
cmp
pop
out
sahf
out
insl
xchg
mov
sahf
mov
leave
rcr
out
int
jns
sti
add
cmp
repz
repz
push
pop
imul
cmp
fwait
scas
movsl
les
aaa
mov
mov
push
pop
pop
ret
std
fucom
jae
outsb
add
ret
pop
mov
mov
mov
cld
adc
ss
nop
sti
das
je
fs
iret
adc
cmpb
sub
fmulp
and
jno
add
les
movsb
xchg
subb
xchg
adc
test
pusha
lods
into
xor
shrl
lock
mov
inc
mov
or
push
push
add
out
fcompl
pusha
aaa
cmp
movsb
adc
mov
xchg
test
mov
add
mov
faddl
adc
sbb
cmp
cmp
mov
insb
and
lret
out
push
dec
test
lods
adc
bound
cld
add
push
sbb
aas
repz
les
inc
ja
rorb
adc
loope
cmp
jge
out
mov
cmp
push
cld
lock
movsl
out
add
jp
scas
cmpsb
push
cmc
popf
add
pop
stc
ficoms
test
ja
imul
rol
or
mov
roll
into
push
ret
gs
push
sbb
das
push
mov
adc
lock
or
xor
filds
or
enter
or
mov
adc
xchg
js
mov
and
decl
sub
pop
fdivs
mov
and
stos
and
or
cmp
outsb
faddl
pop
fcomip
push
mov
mov
xor
je
inc
push
or
or
fs
insb
movb
push
aad
xchg
and
inc
leave
adc
pop
sbb
les
repz
pop
lea
jo
add
sbb
push
add
mov
cmp
pop
xchg
test
shlb
adcb
xchg
mov
mov
cmpb
jecxz
cmc
jb
mov
int3
fiadds
sub
push
xchg
xchg
sarb
dec
div
push
add
mov
mov
xor
or
lods
and
sub
cmp
mov
fwait
pop
cmp
push
sub
jo
test
rsqrtps
mov
or
bnd
test
adc
or
mov
xor
sub
push
mov
xor
jle
icebp
scas
jecxz
mov
xor
sbb
enter
dec
xor
das
insb
lcall
jl
dec
lcall
dec
lcall
add
in
jae
add
mov
mov
sbb
mov
cltd
mov
hlt
push
int3
jl
mov
test
add
cmp
orl
lret
cmp
jns
xlat
movsb
inc
xor
add
in
cmp
mov
pusha
mov
mov
sub
or
pushf
js
stos
push
nop
and
in
jbe
test
sbb
ljmp
shlb
sbb
sbb
sbb
nop
stos
shlb
sbb
push
cltd
fs
sbb
in
mov
push
into
push
rorb
adc
sub
or
sbb
sbb
pop
aam
movsb
sub
sub
sbbl
mov
pop
inc
and
jmp
pop
mov
shl
xchg
inc
adcl
pop
gs
pusha
int
mov
mov
xor
cmp
pop
push
ficomps
push
lret
mov
into
pushf
xchg
xchg
loop
push
jle
mov
mov
mov
jb
sbb
aaa
rcrl
jp
xchg
imul
dec
movsl
mov
mov
int3
cmp
sub
sub
jmp
stc
cmp
movsb
aas
push
cmc
mov
movsb
push
inc
cmpsl
mov
mov
mov
cmp
ds
nop
aaa
and
and
mov
daa
dec
pusha
loopne
cmp
in
js
mov
push
inc
push
sbb
adc
sub
push
pusha
pusha
or
cmp
subl
lea
jo
clc
test
popa
inc
xchg
mov
adc
imul
inc
inc
add
jge
dec
pop
xor
inc
mov
cmpb
je
adc
lcall
jmp
push
outsl
inc
sbb
sub
pusha
aaa
je
pop
adc
stos
mov
sbb
ret
and
inc
mov
imul
dec
dec
add
out
adc
push
test
xchg
in
cmp
aas
pop
push
pop
je
or
mov
pop
push
mov
adc
adc
ds
lret
rolb
jecxz
out
add
mov
lcall
jne
or
add
push
daa
sarb
push
imul
jne
add
pop
sbb
lods
sbb
mov
imul
lods
mov
repz
ficompl
jo
mov
push
inc
lret
sbb
and
add
fwait
cmp
push
xchg
push
movsl
enter
mov
sbb
dec
loope
aaa
stos
xchg
mov
in
adc
sbb
rorb
pop
ficoml
and
mov
cmp
inc
push
outsb
shlb
pop
cmp
mov
je
repnz
jl
cmp
imul
loopne
jbe
add
test
or
sbb
mov
nop
push
call
pop
setl
adc
pop
repnz
movsb
adc
adc
scas
adc
leave
and
dec
adc
push
add
push
xchg
fwait
out
push
es
push
mov
int3
push
and
inc
push
aam
rcrb
push
mov
insl
push
sbb
test
cwtl
push
in
jecxz
int
negl
pop
int
fsubrl
nop
push
test
mov
sbb
push
mov
sub
cwtl
nop
mov
sub
mov
mov
and
mov
add
and
shrb
mov
mov
and
inc
sub
sub
cmpb
dec
jae
test
push
push
inc
sbb
adc
sarb
cwtl
push
pop
pop
push
mov
shrb
mov
sbbl
and
aad
and
sub
adc
push
movsb
pushf
xchg
shll
inc
mov
test
and
xor
je
dec
dec
xor
insb
or
xor
pop
pop
xor
fsubr
pop
add
ret
arpl
test
mov
mov
cmp
inc
ds
mov
mov
xor
orb
inc
call
insb
pusha
aad
xor
xor
popf
in
orl
mov
push
loope
cltd
sbb
int3
or
into
pop
pop
adc
out
inc
jecxz
jbe
in
dec
or
inc
pop
in
roll
sub
inc
call
or
xor
add
lods
lahf
jb
and
movb
leave
xor
sub
or
jne
mov
scas
add
jbe
add
aad
out
jge
add
adc
imul
lods
cmpsl
sbb
adc
cs
or
xchg
or
imul
and
inc
mov
test
sti
js
or
icebp
push
mov
xor
jnp
cmp
fbld
adc
mulb
adc
xor
add
adc
adc
out
ret
sbb
mov
mov
mov
les
cmpb
mov
mov
jo
adc
mov
movsl
imul
shrl
mov
pop
sub
adcb
inc
jmp
mov
aam
cmp
push
sbb
jmp
and
mov
pusha
sbb
pushl
or
add
push
sbb
mov
xchg
lcall
xor
mov
add
dec
enter
pop
and
fwait
and
mov
and
and
adc
roll
and
pop
push
imul
add
stos
sub
push
fcmovu
jecxz
pop
es
pop
test
fs
dec
jnp
sub
mov
subb
es
pusha
push
sub
imul
insb
or
enter
mov
sub
movsl
pop
cs
daa
ss
mov
cmpsb
fmuls
sahf
pop
sub
dec
jmp
inc
test
mov
adc
dec
fildl
dec
rcr
ret
jbe
clc
pop
inc
inc
add
popa
xor
mov
sub
das
not
insl
inc
lcall
and
xor
sub
sub
lods
dec
xor
int
push
sub
fs
and
test
dec
dec
jl
pop
and
int
xor
and
and
xor
push
nop
sbb
and
addb
mov
inc
js
and
les
aam
or
pop
rclb
sbb
add
sahf
adc
push
mov
mov
es
ret
mov
add
orl
add
les
in
cmpsb
arpl
jmp
xchg
cmp
sub
test
rcrb
dec
clc
test
jnp
push
test
loope
lds
push
and
loopne
pop
cmp
je
repz
lcall
popf
mov
pop
jecxz
add
pop
sub
push
scas
aam
pop
adcl
inc
mov
sbb
inc
sbb
rclb
pop
jge
cmp
pop
adc
movsb
or
mov
test
data16
push
add
sbb
enter
lods
inc
cmpsb
and
xor
sub
mov
fldcw
clc
pop
inc
andl
call
stc
and
dec
loop
leave
inc
cmp
inc
or
cmp
push
xor
push
rclb
cmp
lock
clc
cmp
fs
xchg
icebp
stos
cmc
js
ss
adc
push
cmp
and
push
mov
sbb
push
test
cmp
mov
andb
popf
ljmp
xor
sbb
loop
or
jbe
dec
cmp
cmc
dec
lods
imul
popf
pop
cmp
sarb
cmp
cmp
jbe
dec
pop
cld
movsl
mov
mov
nop
movsl
aam
popa
jmp
jmp
mov
add
push
lret
aad
push
push
pop
fwait
and
mov
mov
mov
mov
scas
mov
inc
inc
inc
xor
jge
fdiv
add
adcb
cmp
sbb
or
cmp
lods
or
push
movsb
cmp
and
pusha
ljmp
clc
loope
mov
and
push
jbe
or
jb,pt
mov
and
adc
imul
lret
adc
push
sub
test
fs
hlt
pop
inc
add
repnz
cmpsl
xchg
ret
mov
popa
mov
adc
push
sbb
xlat
jbe
mov
sti
pusha
add
xchg
cmp
jne
inc
in
jb
lret
cmpb
les
addb
hlt
subl
push
test
push
or
iret
jne
mov
inc
push
repz
jae
inc
adc
cmp
xor
bound
je
mov
dec
roll
add
jmp
out
mov
or
xchg
rorb
jp
test
movsl
push
in
mov
adc
lods
add
sbb
pop
cwtl
xchg
adcb
xor
test
lret
pop
xchg
mov
fcmovu
jne
lods
xlat
test
adc
aad
dec
or
cmp
jne
leave
imul
mov
sub
in
fcmovnbe
mov
push
andb
in
add
add
push
add
leave
popa
subl
or
sbb
sbb
add
pushl
inc
jbe
clc
and
xchg
pop
push
sbb
sbb
loope
cmpsb
sbb
jno
lock
mov
jmp
xchg
push
into
add
lahf
stos
adc
jmp
xor
rclb
add
cmp
jl
or
lcall
or
je
mov
inc
jmp
movzbl
movb
movsbl
rcr
cmp
xchg
pop
mov
and
mov
or
inc
mov
leave
jne
pop
sub
scas
bound
rclb
adc
jge
sbb
push
push
add
pop
and
pop
push
mov
mov
push
add
cmp
ja
push
loopne
and
push
inc
inc
dec
arpl
rcll
lock
daa
addl
or
mov
insl
xor
add
xor
inc
mov
sbb
mov
mov
mov
enter
movsb
popa
sti
aas
bound
je
dec
and
add
enter
in
push
rcll
pop
insb
jnp
jge
loopne
push
jmp
aaa
xchg
je
cmp
ljmp
decl
jge
adc
pop
push
push
or
insl
pusha
push
adc
push
shll
ds
sub
inc
jl
out
pusha
mov
pop
add
add
and
adc
lret
mov
or
ljmp
jg
xchg
dec
sbb
ficomps
testb
mov
xchg
sub
mov
or
pushf
xchg
adc
ret
cltd
stos
clc
dec
testl
nop
add
test
add
xchg
mov
mov
nop
sbb
inc
or
out
xchg
and
xchg
jl
mov
enter
jb
push
das
mov
stos
out
mov
cmp
lcall
xor
sub
pop
insb
mov
xor
in
mov
jmp
pop
lock
jmp
lret
sub
and
and
or
jg
outsl
int3
repnz
inc
dec
in
mov
jle
xchg
idivl
adc
enter
nop
xor
and
jmp
cmp
and
inc
cmp
xor
inc
or
mov
sub
mov
aam
clc
js
mov
subb
cmp
jb
sbb
mov
inc
repnz
push
lea
cmp
mov
push
xor
jb
adc
jno
and
pop
adc
pop
addr16
mov
jae
imul
add
push
push
xor
sub
cmp
xorb
dec
pusha
inc
ljmp
push
inc
dec
jns
andl
rclb
mov
daa
dec
mov
mov
add
scas
bndldx
or
in
fwait
push
mov
add
jns
fadds
adc
adc
mov
cmpsl
adc
rcrb
les
clc
adc
js
add
addb
int
cwtl
xor
icebp
jbe
subl
mov
bound
mov
push
xor
xor
xchg
pop
into
jge
pusha
fsts
add
test
or
adc
xor
pop
daa
sarb
insb
out
add
add
cmp
push
sbb
rcrl
enter
push
push
push
xchg
icebp
shrd
pop
xor
or
fwait
roll
or
pop
cltd
mov
jecxz
xor
sub
fs
iret
dec
ss
mov
mov
xchg
or
mov
add
loop
mov
sbb
mov
jb
cmc
adc
sbb
xchg
sub
js
repz
adc
add
add
or
add
addb
jmp
mov
repnz
push
or
shll
xchg
test
pop
cs
fmuls
std
mov
hlt
push
xchg
rorl
loopne
add
or
idiv
movsl
jnp
xchg
mov
imul
xchg
add
xbegin
lods
aam
lea
mov
ret
sbb
and
pop
xchg
add
and
subb
sbb
add
and
sub
dec
mov
cwtl
test
adc
jnp
add
cmp
or
sbb
cmp
ret
or
imul
or
add
jmp
loop
push
adc
add
test
adc
mov
pop
stos
xchg
xor
mov
pop
div
mov
push
dec
pop
cmp
sub
mov
test
push
sub
cltd
xor
stos
push
arpl
cmp
je
loopne
sbb
push
les
cmp
pop
aam
les
sub
cmpsb
js
sub
shl
or
fs
les
pop
das
inc
hlt
in
or
push
add
clc
test
imul
shr
inc
push
jo
jecxz
xchg
sbb
add
ret
pop
subl
cwtl
or
sbb
pushf
xchg
arpl
cli
in
subl
dec
push
xor
mov
call
cmp
jl
scas
lea
jb
sarb
inc
test
hlt
add
sub
inc
fcmovb
pop
adc
insl
sbb
cmpsb
fcoms
mov
mov
dec
xchg
cmp
mov
xor
insb
adcl
pop
enter
rolb
jb
push
enter
outsl
inc
mov
xor
xor
addb
cmp
dec
sbb
push
lea
cmp
mov
adc
in
in
pop
ja
jnp
add
xchg
add
cmp
daa
sub
aam
jmp
xor
scas
push
rol
or
dec
xchg
call
daa
push
mov
adc
addl
sahf
xchg
mov
xor
pusha
xor
lods
nop
xchg
or
push
dec
nop
clc
inc
das
je
jge
out
mov
mov
xor
imul
xchg
or
jbe
das
mov
push
sahf
sub
and
adc
dec
in
imul
es
fdivl
xchg
inc
movsl
jno
pop
mulb
and
sbb
mov
push
or
mov
dec
and
mov
fs
mov
or
cmp
push
lea
sbbb
push
add
cmp
pusha
addr16
movsl
push
loopne
mov
fmuls
out
xchg
xchg
pop
clc
push
sbbl
mov
imul
add
das
in
cmp
push
subl
add
ja
mov
dec
ljmp
ds
in
adc
cld
xlat
or
dec
inc
add
inc
or
inc
aaa
inc
das
test
push
popa
sub
cli
add
pop
add
fiaddl
stos
icebp
push
outsl
inc
add
add
jmp
fiaddl
mov
xchg
repz
pusha
push
push
push
cmp
aaa
xor
add
mov
and
jne
fldl
push
test
notb
data16
cmp
insl
adc
adc
jne
daa
bnd
adc
out
jns
hlt
jne
or
jne
or
adc
xchg
push
mov
nop
push
xor
std
dec
jb
pusha
js
pop
mov
and
aad
pop
or
push
fists
inc
sbb
add
aas
pop
sbb
mov
dec
gs
addb
xchg
aad
jle
push
jl
mov
cli
pop
push
pop
je
pop
hlt
lea
sbb
lea
pusha
mov
inc
imul
nop
xchg
data16
movsb
xchg
cs
ret
and
xor
sub
sub
push
fsubrl
xchg
iret
dec
into
or
stc
int3
rcll
push
loope
push
std
jae
fstl
orb
cmp
fdivrl
adc
call
push
int
shrb
fstl
mov
loopne
fcomp
loopne
rclb
popa
adc
adc
mov
add
pop
pop
push
mov
jl
cmp
enter
mov
mov
push
ss
jl
int3
insb
cmp
aas
pusha
pop
inc
loopne
or
and
and
jecxz
loopne
push
xchg
insl
mov
imul
imul
orl
pop
dec
lcall
int
xchg
test
cmp
mov
fs
jne
mov
mov
lods
and
fistpll
fmul
fs
sbb
ficoml
mov
je
push
pop
add
pusha
jmp
mov
push
fs
pop
bound
adc
jg
pushw
push
shlb
add
add
fisubrs
jbe
call
or
aam
push
jmp
ror
inc
adcl
js
jns
sub
js
test
mov
inc
jb
add
flds
stos
dec
pop
inc
int3
add
adc
gs
push
repnz
and
mov
xchg
inc
xlat
aaa
push
mull
pop
push
or
shrb
sub
xchg
adc
fucomp
das
rol
xchg
xor
insb
inc
popa
cltd
pushl
push
and
xchg
sbb
sbb
call
or
das
cmp
sbb
dec
mov
or
sarb
mov
or
sti
jnp
sub
dec
fisubrl
hlt
imul
idivl
inc
sub
clc
add
xchg
mov
dec
lods
add
push
cmp
cmp
in
and
jmp
sbb
dec
shlb
jle
pop
push
xor
xorl
jmp
and
xor
fisttpl
das
pop
cmp
sbb
xchg
push
cmp
add
push
dec
and
repz
cmc
xor
in
sbb
cmp
and
sbb
and
and
pop
inc
adc
push
arpl
or
fs
adc
push
cltd
xlat
leave
mov
pop
pop
xor
push
dec
push
cltd
nop
sbb
xchg
or
push
adc
mov
sbb
push
mov
or
test
jno
test
pusha
sahf
mov
bound
inc
or
adc
xor
and
outsl
add
in
sub
out
mov
cmp
sbbb
popa
xor
jae
cmpsb
mov
jae
das
sti
and
cmp
mov
cmovbe
push
enter
pop
int
mov
add
mov
icebp
sbb
xor
dec
push
push
lock
jmp
xchg
jecxz
inc
xchg
imul
andb
mov
jo
jo
push
adc
or
pop
adc
cmp
scas
movsb
fbstp
and
js
jg
dec
das
jae
je
push
mov
pop
lea
ficoms
jnp
aam
inc
sbb
fsubrl
sbb
mov
pop
insl
mov
adc
stos
lock
and
adc
adc
lods
test
or
add
mov
aas
dec
rorb
or
pop
pop
push
cmpsb
out
or
loopne
or
adc
add
jmp
push
hlt
xor
jnp
push
les
dec
push
pushf
add
imul
pop
ret
xchg
scas
mov
add
jne
jne
in
inc
dec
sub
add
xchg
sub
daa
stc
out
js
loopne
mov
mov
xor
aam
jne
sbb
adc
lea
jge
jecxz
sbbl
mov
popa
push
xchg
mov
paddusb
inc
mov
pop
inc
std
xor
push
shrl
and
es
scas
mov
mov
loopne
cmpl
mov
ret
mov
ficoml
adc
and
pop
and
jmp
pop
pcmpeqd
test
imul
cmpb
jno
jno
js
in
leave
fsubl
sbb
aaa
into
mov
xchg
test
push
inc
add
movsl
add
aaa
adc
add
adc
pop
and
sbb
cmp
add
push
jne
pop
jecxz
mov
inc
cwtl
pop
sti
ja
mov
and
jne
mov
rorb
ljmp
xor
or
mov
xchg
adc
inc
add
push
xor
bound
xor
xor
or
into
in
adc
loopne
dec
ret
daa
add
add
fdiv
push
mov
movsb
shll
fisttpl
es
popa
filds
dec
xchg
mov
rolb
add
xchg
add
js
cld
cmp
pop
push
jmp
push
pop
in
and
addb
ret
mov
in
les
mov
dec
pop
sbb
lods
and
sub
pop
push
add
orb
inc
jecxz
inc
or
mov
arpl
add
sbb
push
sub
stos
loopne
cmp
dec
bndstx
mov
inc
mov
jmp
out
add
xor
sub
adc
fimull
push
mov
inc
cmp
dec
cmpb
fdivrl
mov
lcall
inc
bound
or
and
divl
or
push
fildll
ficompl
test
aas
sub
leave
cmp
ljmp
jge
adc
add
movsb
incb
push
mov
push
lds
xor
add
or
sbb
addr16
or
push
movsl
or
jecxz
push
dec
xor
das
test
in
add
mov
dec
add
xor
notl
aad
pop
add
loopne
add
sub
hlt
test
shll
or
or
in
or
aas
mul
pop
add
push
add
lods
lea
out
mov
inc
jo
mov
push
lret
addr16
sub
and
mov
xor
push
je
movsl
ja
or
xchg
and
or
mov
xor
cmp
je
or
jbe
ret
in
rolb
sbb
and
clc
sub
lods
pop
sub
cmpb
ret
lock
jae
movsbl
outsb
clc
cmp
ja
inc
mov
mov
dec
rcl
or
sbb
bswap
push
das
add
lea
and
jmp
call
add
or
jecxz
or
add
inc
sbb
pop
incl
cmpl
xor
pop
test
cltd
and
add
sar
add
dec
test
clc
xor
mov
pop
ss
cmp
jecxz
or
inc
jne
enter
adc
mov
mov
dec
jne
mov
ss
xor
lret
test
pop
scas
and
push
dec
icebp
insl
add
cmpsl
shrb
sar
jp,pn
jge
push
shlb
ret
or
inc
bound
inc
adc
sbbl
adcb
jl
movsl
add
jmp
scas
mov
or
cmp
pop
add
add
push
rorl
mov
js
in
jmp
out
add
fucomi
or
arpl
rolb
shl
dec
sahf
xchg
out
mov
cld
xor
push
ret
or
jecxz
adc
pop
scas
and
cltd
add
dec
xchg
mov
cs
dec
pop
xchg
cmp
xor
adc
mov
fisubrl
or
insl
fcomps
movsb
sbb
cld
cmc
pop
in
push
xor
push
jnp
lods
mov
or
pop
sbb
fwait
xchg
mov
xchg
jnp
xchg
or
or
inc
xchg
and
fisttpl
hlt
add
nop
je
add
shrl
mov
mov
push
clc
inc
sub
lahf
xor
add
cmp
or
xor
ds
lahf
cmc
out
fcomps
pop
test
xchg
mov
mov
add
xchg
inc
mov
lock
add
push
push
jge
es
add
push
and
test
pusha
and
push
stos
xor
imul
call
sbb
cmp
cmpl
shlb
int3
pop
ss
jns
cmp
sub
test
int3
inc
inc
stos
shll
lods
adc
int3
xchg
pop
aaa
lea
dec
and
inc
jle
int
bound
cmp
lea
loope
xchg
and
push
and
out
sbb
movsb
je
push
pushl
or
mov
dec
aaa
test
pop
cmp
add
add
fbstp
movsb
mov
in
or
movsb
inc
cmp
pusha
js
cmp
jmp
dec
xchg
mov
mov
push
and
dec
sub
clc
adc
adc
das
push
shlb
lcall
add
and
cmp
jecxz
insb
popf
xchg
rcl
mov
lcall
aam
out
xchg
fcomps
pop
push
das
daa
jno
push
xchg
lret
or
movsl
sbb
push
sbb
mov
and
adc
aam
enter
imul
in
xor
push
push
xor
enter
sbb
mov
mov
xorb
push
cmp
cmp
and
lds
mov
nop
sahf
and
push
sti
push
cmp
pop
mov
cmp
arpl
add
int3
int3
add
jno
bound
mov
sbb
jno
cmp
sahf
sbb
jecxz
sti
push
pop
cmp
sarl
fldenv
repz
je
dec
das
or
fdivr
adc
rorl
inc
out
das
imull
das
pop
pop
jno
jge
cmp
cmp
scas
sub
xchg
pop
enter
add
xchg
test
sbb
or
sub
inc
imul
lock
mov
mov
rclb
add
xchg
dec
aam
leave
add
add
out
add
cmc
mov
clc
jl
stos
mov
imul
jge
sub
push
in
jp
sbb
sbb
je
cmp
daa
movsbl
es
push
call
ret
mov
mov
test
add
mov
test
jo
dec
out
test
sbb
sbb
movb
ret
and
adc
pusha
xor
add
jnp
rorb
sbb
nop
or
add
dec
mov
push
hlt
or
iret
sub
jmp
mov
sbb
inc
add
pop
pop
and
outsb
hlt
loope
iret
adc
mov
fcom
dec
sbb
les
subb
addr16
xor
add
insl
std
lock
in
out
sbbl
in
cmpsb
dec
push
es
add
call
dec
and
sub
add
out
stos
or
inc
inc
mov
faddp
jnp
push
pop
fwait
dec
add
imul
xor
shr
insl
icebp
pushl
movswl
test
mov
push
jne
clc
pop
mov
and
fiadds
sub
movsl
xorl
mov
pop
mov
pop
mov
inc
or
xchg
add
push
hlt
mov
sbb
mov
mov
clc
add
jg
pop
xor
decl
mov
mov
inc
mov
mov
cmp
push
or
dec
clc
addl
int
mov
cltd
sarb
sub
push
icebp
or
orb
out
lcall
add
insl
xor
mov
nop
and
and
add
cld
push
leave
push
xor
mov
clc
cmp
jne
pop
mov
mov
pop
cmp
into
inc
dec
and
adc
push
cmp
call
ds
push
sahf
pop
add
enter
xor
push
shlb
mov
xchg
add
test
lret
in
sbb
push
in
enter
in
into
mov
push
int
hlt
test
les
dec
and
es
pop
adc
inc
mov
mov
cmp
push
enter
fldcw
daa
fbstp
cmpsb
lret
mov
or
add
mov
popa
and
and
or
xor
mov
xor
test
loop
dec
mov
pop
lahf
popf
inc
xor
and
adc
pop
orl
add
and
and
push
daa
or
sbb
push
sub
test
hlt
test
mov
mov
mov
mov
clc
jns
add
rclb
xchg
adc
lds
jb
cwtl
mov
or
dec
cld
stc
sub
ss
lea
cmp
jbe
add
sbb
cmp
jbe
mov
sbb
sbb
cli
enter
sbb
repnz
into
aas
insl
mov
insb
leave
or
cmp
int3
push
adc
divb
inc
dec
xor
xchg
mov
pop
enter
or
cmpsb
push
cmp
or
xor
daa
push
test
stc
push
incl
push
push
push
cmp
cwtl
inc
push
jnp
and
insl
test
jp
add
mov
shr
test
pop
ret
and
nop
arpl
adc
push
mov
in
lods
test
sub
stc
pop
jge
lahf
pop
sub
push
add
call
push
lock
cmpsl
sti
lea
xchg
mov
loop
push
push
xchg
or
sub
pushf
and
je
arpl
cmp
lods
mov
inc
push
mov
imul
jge
dec
push
dec
in
mov
into
push
and
int
and
loope
test
sbb
sbb
cmp
loopne
popf
aas
jb
movsl
addr16
inc
fwait
sub
add
repnz
adc
mov
dec
cltd
jge
mov
adc
shlb
fdivrl
shlb
loope
pop
shll
rorb
jp
and
mov
and
add
lods
jle,pt
cmpl
int3
mov
cmp
mov
scas
jb
out
test
push
adc
push
inc
enter
cld
or
add
out
and
sbb
jle
int3
es
jne
xlat
and
and
add
jno
rolb
push
mov
push
xor
je
nop
mov
mov
sbb
cmp
rcrl
fisttpl
push
loopne
mov
dec
jp
xor
inc
imul
ret
aas
int
cmpl
pushf
ret
call
test
mov
stos
pop
inc
fisttpll
fwait
int
scas
add
push
addb
and
rorb
sbb
ljmp
shlb
dec
pop
je
out
pop
fs
out
fdivl
mov
je
imul
aad
mov
outsl
xor
push
cwtl
test
mov
lret
or
imul
pop
adc
push
pusha
ds
push
nop
inc
out
mov
aas
cld
adc
dec
fwait
nop
or
pop
fidivrl
aaa
aas
es
rolb
sarb
cmp
mov
nop
dec
push
jo
fwait
jecxz
aas
add
jne
ret
cmp
adc
inc
add
sbb
push
std
leave
adc
or
sub
add
and
dec
sub
or
push
pop
je
jo
inc
sbb
test
mov
mov
adc
and
aam
insl
dec
xor
popf
sbb
or
or
push
ret
cmp
add
into
adc
nop
lcall
push
mov
and
pop
fldenv
out
int3
or
rolb
les
jmp
push
xchg
gs
fstl
lock
inc
incl
fwait
rolb
loopne
push
andl
xor
aad
dec
jmp
ret
xchg
pop
xor
jmp
push
inc
mov
adc
sbb
mov
or
inc
xor
push
jmp
push
cmp
pop
aad
add
inc
jne
xchg
push
push
lahf
imul
xchg
mov
push
pushl
addr16
rorb
add
sahf
add
pop
cmp
jbe
sub
sub
cmp
sbb
fcompl
sbb
xchg
rcrb
adc
pusha
mov
mov
lcall
shrb
data16
and
clc
bound
xor
push
xchg
xlat
mov
jne
mov
mov
gs
testb
pop
pop
mov
leave
or
inc
mov
shll
mov
mov
call
cmp
lea
sarb
lods
pop
add
push
adc
jnp
xor
push
call
cmp
sbb
xchg
pop
xchg
sbb
sahf
jmp
add
ds
ljmp
imulb
ret
movsb
aam
jb
xor
stos
add
ja
loopne
dec
out
shll
inc
add
adc
sbb
push
icebp
push
adc
inc
nop
lock
or
push
push
xchg
sub
aaa
mov
adc
or
pop
je
mov
adc
add
add
push
cmp
dec
and
lock
addr16
mov
sti
jb
and
xor
add
sub
add
je
jl
pop
and
pop
add
mov
mov
xor
xor
xchg
xchg
and
insb
mov
outsl
push
jae
lret
inc
shlb
sbb
insb
pop
jmp
mulb
lds
sub
jecxz
outsb
mov
adc
movsl
pop
sub
sahf
add
mov
push
sbb
cld
mov
loope
scas
pop
jne
inc
inc
xor
sahf
test
arpl
add
sbb
add
and
das
fs
movaps
test
or
sub
push
cs
or
pop
push
or
pop
pop
cltd
inc
data16
movsb
mov
dec
and
rolb
xor
cmp
jmp
jo
xchg
jae
jns
bnd
add
add
or
and
inc
adc
mov
or
data16
mov
sbb
mov
xchg
mov
pop
mov
add
sbb
je
mov
cmp
dec
icebp
jne
aad
test
insl
push
push
mov
ss
mov
xchg
sbb
lea
sub
mov
lcall
cli
add
imul
or
cwtl
int3
notl
test
loopne
inc
das
mov
and
frstor
sub
stc
sub
or
mov
jae
xchg
push
or
insb
rcrl
jbe
popf
rclb
pop
jecxz
ret
adc
jb
mov
mov
fcompl
or
lea
xchg
sti
sbb
inc
ret
sub
or
dec
sti
lock
mov
in
ret
xor
xchg
jmp
xchg
xor
pop
sbb
pop
dec
jp
xor
in
push
push
sahf
pop
cwtl
xchg
jecxz
lret
jp
pop
jle
jge
and
push
inc
popf
rorb
lahf
inc
and
inc
lock
pop
cmp
or
inc
loopne
pop
test
and
mov
xorl
int3
add
mov
ja
pushl
add
mov
iret
jle
adc
push
push
mov
add
sub
cmpsb
inc
fcoml
and
and
outsl
cmp
into
add
sub
gs
add
add
cmp
fs
sub
cwtl
add
jbe
xor
lea
iret
mov
dec
fdivp
sbb
xchg
scas
or
pop
lods
or
push
push
xor
jmp
add
or
pop
and
xchg
sbb
test
sbb
push
inc
clc
sub
or
mov
out
imul
add
ret
lcall
and
pop
push
sbb
xchg
lea
or
insl
ret
cltd
mov
push
pop
push
inc
adc
add
stc
mov
fisttps
mov
scas
repnz
cmc
pop
mov
jmp
add
mov
mov
fldt
filds
or
mov
cmp
add
cmp
je
cmp
jne
mov
sbb
add
sti
dec
and
pop
dec
lea
scas
mov
pop
dec
xor
fbld
or
cmpsb
push
jmp
testb
je
testl
fs
sbb
add
fdivrp
cmp
jbe
into
lea
mov
pop
pop
inc
cmp
je
sub
inc
jmp
inc
and
dec
je
xchg
dec
xor
pop
mov
push
add
ljmp
pop
or
push
clc
mov
rclb
jo
cmp
ljmp
sub
fs
adc
into
ret
cmp
lcall
xor
ficoms
inc
push
ja
sub
jne
pop
cmp
jo
dec
push
outsb
hlt
cmpb
add
mov
cld
xor
je
ficoms
xchg
aam
mov
mov
mov
enter
xchg
ss
cmc
pop
insl
dec
push
lock
add
inc
cld
insb
xchg
adc
rclb
jns
cmp
pop
xchg
xlat
movsb
or
arpl
and
xchg
stos
mov
in
mov
call
mov
fsubs
inc
fldl
pusha
mov
add
jae
insl
lock
inc
loope
sti
lahf
pop
shl
add
jmp
pushf
aas
insb
sti
and
test
repnz
in
aaa
push
cmp
js
fs
jne
xor
fwait
push
cmp
adc
incl
or
outsb
pop
jae
mov
jmp
jno
mov
dec
shlb
cwtl
jo
add
jne
pop
push
add
and
incl
inc
adcl
or
int3
cmp
rolb
add
and
cmp
out
out
pop
xor
and
es
sub
mov
jbe
sub
and
pop
or
jl
or
adc
shrb
stos
push
inc
test
jbe
loopne
stos
das
aam
cmp
jbe
and
pop
arpl
fcoml
adc
je
test
jne
sub
inc
adc
std
sub
jb
adc
adc
lods
mov
xor
adc
movb
inc
fcmovnb
mov
sub
inc
xor
xchg
mov
adc
and
add
std
push
mov
inc
and
push
or
stos
mov
adc
mov
add
daa
cmova
and
dec
inc
adc
cs
push
lcall
mov
push
push
lahf
pusha
add
push
mov
int3
lock
adc
mov
adc
mov
movsl
pop
aam
mov
push
je
mov
mov
push
inc
pop
out
push
add
insb
ret
lea
sub
scas
lret
jne
lods
mov
cmc
mov
cmp
push
mov
inc
sahf
jmp
xchg
imul
mov
inc
inc
xchg
enter
adc
out
jg,pn
push
cld
xchg
daa
cmp
addl
push
jbe
push
cmovs
cmp
int
call
out
sahf
int
jp
push
clc
into
inc
sbb
cmp
mov
pop
and
cmp
out
adc
movsb
push
push
popf
mov
pop
xlat
out
inc
mov
jns
pop
dec
pop
dec
mov
ljmp
sbb
insl
xor
fwait
xchg
cmp
or
push
andl
inc
sbb
or
cmp
fists
cltd
ss
push
aaa
jp
inc
adc
out
orb
test
jb
in
pop
inc
sbb
rol
cli
sub
push
push
movl
push
adc
dec
addl
std
or
xor
push
lahf
push
push
sbb
pop
inc
sbb
add
push
and
shl
test
enter
mov
mov
inc
xchg
mov
push
lods
test
add
mov
into
loope
shlb
lds
cwtl
mov
pop
add
int
or
data16
je
mov
mov
mov
mov
add
cmp
outsb
sarb
call
push
pop
push
lea
das
sub
mov
push
sahf
imul
pop
cmovns
dec
lea
pusha
rcrb
mov
pop
sub
push
mov
pop
push
inc
fdiv
jge
enter
fbld
testb
jbe
mov
mov
ja
gs
add
inc
inc
fwait
nop
mulb
or
repnz
pop
pop
movsb
inc
push
pop
nop
push
sub
ret
cmp
mov
push
or
cmc
sub
out
mov
push
movsl
xchg
inc
test
dec
push
cltd
mov
mov
push
ret
idiv
pop
je
test
dec
push
inc
inc
and
xor
push
fs
mov
or
shll
adc
mov
xor
xor
cmp
xor
lea
incl
sub
push
cmp
dec
or
mov
and
mov
incb
inc
push
lea
sbb
mov
stc
push
sbb
mov
lock
adc
mov
push
loop
or
add
sahf
mov
mov
push
aaa
les
movsl
pop
dec
mov
clc
push
add
add
pop
or
xchg
add
push
lret
push
xorb
mov
andl
aam
sbb
sub
jp
ret
or
sti
pusha
jb
into
or
pop
cmp
lea
adc
rcr
and
xchg
adcl
mull
movsb
mov
mov
rcl
adc
push
and
push
mov
orb
add
or
push
ljmp
inc
clc
mov
stos
push
jmp
enter
jbe
mov
push
movb
push
popf
test
push
cmpsl
inc
pop
xchg
addl
xchg
add
xchg
xchg
cmp
sbb
xchg
or
out
lea
or
jg
inc
loope
fnstsw
pusha
stos
adc
and
or
pop
xchg
cmp
push
xor
push
lea
fs
or
insl
and
cmp
movb
mov
cs
int3
insl
gs
jbe
adc
sbb
push
pop
lret
cmp
pop
clc
add
sub
mov
adc
mov
jmp
adc
sbb
ds
cwtl
cmpl
dec
push
in
cmp
ficomps
push
lret
test
and
jne
pusha
sub
add
aad
lods
ret
jge
adc
add
movl
add
js
push
cmpl
pusha
fidivl
cmp
xchg
in
andl
testl
testl
sub
rcr
fisubl
xchg
rolb
or
jmp
bound
and
jnp
fstps
cmp
mov
push
sbb
pop
cld
inc
mov
adc
jne
fstps
mov
jne
lock
setle
insl
inc
jp
aaa
adc
adc
iret
push
vmptrld
xchg
orl
adcb
adc
push
scas
popf
ss
adc
mov
test
dec
movb
pop
sbb
adc
mov
ret
jbe
cmc
xchg
jne
mov
icebp
and
lods
fwait
or
loopne
fsubs
mov
dec
xlat
ret
in
cld
out
push
aas
je
cmp
push
pop
jne
les
cwtl
dec
aam
cmpsl
jne
push
fcomi
imul
or
pop
jne
pop
call
sbb
add
xorb
insl
fstpt
jle
xchg
jne
jmp
xor
in
sbb
sub
into
mov
mov
aaa
push
adc
addl
mov
mov
pop
lea
fldl
add
je
mov
ficoms
in
sub
popf
jbe
inc
mov
push
sti
jno
mov
repz
jmp
mov
cmp
pusha
mov
jae
scas
jg
jp
push
sub
sub
add
leave
daa
jmp
xchg
add
xlat
xchg
mov
sub
decb
adc
cmpl
andb
daa
xor
out
add
js
mov
sbb
imul
add
add
inc
rcrb
or
fadds
ja
or
ret
push
add
push
push
ret
lahf
sti
inc
pop
or
push
mov
push
cmp
std
push
mov
lcall
clc
or
push
movsl
aas
add
or
inc
mov
mov
inc
sbb
sub
and
sahf
xchg
xlat
push
push
push
push
lret
in
mov
test
xchg
pusha
pusha
or
sub
adc
inc
and
xor
orps
ret
addb
les
xchg
insb
sbb
in
jbe
mov
dec
and
fbstp
daa
xchg
sarl
xchg
pop
rolb
sahf
sbb
push
adc
push
outsl
loope
dec
rcll
lret
mov
movsl
and
insb
sbb
adc
mov
stos
push
push
sbb
or
inc
adc
pusha
sub
sbb
pop
sub
sub
outsb
xor
test
fdivrs
adc
or
or
add
daa
cmp
jecxz
jnp
fdivl
leave
pop
xchg
push
es
pop
xorl
ljmp
sti
xor
push
loop
jmp
mov
jnp
dec
aad
aas
jp
push
pop
jmp
clc
adc
pushf
mov
je
into
or
or
and
add
push
pop
ret
xchg
xchg
push
or
lret
and
push
or
pop
push
pop
loope
je
lock
lcall
fstps
sbb
xor
sti
sbb
dec
es
sti
dec
jnp
sahf
test
dec
pop
push
mov
mov
or
sub
mov
fs
mov
scas
ret
push
nop
cmpsl
test
cmpsl
and
cmp
cmp
test
cmp
je
add
dec
cmp
mov
pushf
clc
fildll
je
mov
cmp
jne
ss
cltd
cmp
xchg
adc
loopne
add
adc
or
mov
adc
sub
sbb
in
push
test
nop
mov
cmp
and
sbb
int3
loope
lods
or
inc
mov
add
pop
icebp
pop
mov
add
lea
std
mov
push
adc
cmp
sbb
inc
inc
mov
jbe
push
adc
ds
jo
loope
jae
mov
xchg
push
push
lret
lods
add
in
fcomi
inc
and
lock
cmp
jne
or
or
push
ror
push
subb
pop
jbe
jo
dec
rorl
hlt
adc
scas
xor
lcall
test
jo
stc
mov
daa
xchg
xchg
mov
sub
js
inc
pop
lods
or
adcl
inc
sahf
scas
or
incl
cmp
inc
push
addl
push
icebp
and
and
push
mov
jmp
sarl
mov
int3
mov
mov
les
push
xlat
mov
cmpsl
sbbl
iret
inc
shl
pusha
je
divb
ds
outsl
mov
test
sbb
or
push
inc
add
rcl
sbb
adc
mov
jmp
xlat
sbbl
inc
cmp
fwait
sti
xchg
rorl
inc
hlt
mov
lock
or
pop
cli
hlt
and
push
cmp
mov
call
add
add
mov
cmp
jmp
hlt
movsb
pop
xor
add
push
pop
jb
test
das
les
iret
cmpsb
sbb
inc
mov
jecxz
divb
call
icebp
unpcklps
outsl
mov
and
mov
push
orb
jl
sub
clc
lock
popa
lea
jo
add
cmpsl
mov
jmp
pop
andl
int
and
push
lea
xchg
addr16
or
mov
push
push
rclb
hlt
or
test
and
xor
loope
je
pop
xchg
jo
add
test
adc
mov
nop
mov
inc
dec
mov
xchg
xchg
push
cmpb
loopne
gs
jns
out
add
mov
lock
and
and
mov
or
adc
movsl
movsw
sub
push
push
jecxz
xchg
and
and
mov
push
lds
sub
fsub
mov
inc
push
push
adc
pop
sbb
add
stos
adc
xor
push
test
pusha
es
mov
je
adc
bound
adc
dec
push
popa
mov
or
xor
call
clc
jmp
sub
push
push
jl
adc
push
bound
push
loopne
and
add
dec
push
fucom
addl
cmpsb
dec
rorl
jle
imul
jmp
roll
mov
and
aam
sub
push
dec
push
push
jo
mov
sbb
dec
push
mov
jne
jns
lock
xchg
xor
xor
xor
xor
sbb
or
jg
jbe
lods
mov
ja
jmp
mov
flds
xchg
cmp
cmpl
or
imul
and
adc
jl
out
stc
out
inc
shlb
adc
mov
jno
lret
stos
fmuls
fsubrl
and
loopne
inc
loop
push
shlb
ficomps
and
mov
push
pop
cmp
aas
push
jnp
dec
testl
sbb
nop
nop
rcll
xor
pushf
movb
lds
scas
pop
push
mov
adc
fs
js
je
mov
xchg
jo
out
inc
mov
decl
cmp
jl
jmp
pop
je
mov
inc
clc
sbb
add
sbb
or
lds
mov
xchg
mov
push
cmp
fnstcw
lods
cltd
sbb
sbb
xchg
aam
mov
sbbl
scas
fwait
sbb
xchg
pop
insb
xor
lea
mov
pop
in
push
push
inc
push
sbb
sub
cmp
rolb
dec
push
rep
ret
xor
xor
lock
xchg
add
jmp
clc
xchg
rclb
out
xchg
lods
dec
clc
inc
push
cmc
ds
adc
xchg
mov
and
inc
out
cs
test
push
push
xor
nop
jbe
iret
mov
or
jmp
push
incl
call
xchg
mov
or
add
pusha
dec
daa
lds
in
pop
int3
or
aas
ret
rclb
aas
cs
xchg
pop
sbb
mov
sbb
push
loopne
hlt
sub
mov
fdivrs
mov
add
adc
mov
pop
xor
gs
imul
mov
mov
hlt
or
inc
inc
fiaddl
mov
inc
add
es
cltd
and
in
sub
mov
or
mov
mov
jae
sbb
popa
pop
leave
hlt
xlat
cmp
pop
mov
cmp
icebp
adc
or
cs
fdivs
cmp
inc
mov
insl
pop
mov
jnp
jmp
push
adc
and
fmuls
add
cmp
repnz
sbb
xchg
fcom
mov
xor
mov
push
cwtl
jle
inc
add
and
pushf
inc
or
nop
lock
ds
add
push
push
push
add
rcl
add
xchg
mov
xchg
fstpt
lahf
add
push
jecxz
ret
pushl
push
fldenv
adc
sub
testl
or
in
rolb
or
mov
je
cmp
xchg
js
ljmp
add
sub
rcr
dec
sbb
data16
sub
sub
ret
pop
iret
stos
mov
mov
dec
popf
push
faddl
xor
movsl
mov
add
dec
loopne
and
or
bound
movsb
jnp
cmp
add
inc
sub
or
clc
call
push
and
dec
es
cmp
or
mov
xor
scas
sub
out
jne
ja
repnz
sub
or
jo
mov
cld
sbb
jmp
or
push
roll
stos
fistpl
cmpsb
add
ret
or
cmc
ret
lret
push
sub
push
loopne
sbb
jns
loopne
adc
add
xchg
xorb
push
xlat
data16
cltd
xchg
nopl
adc
into
push
test
subl
or
outsl
iret
or
pusha
cmp
adc
pop
add
ss
arpl
cmp
jns
xlat
or
popa
adc
pop
mov
dec
sahf
dec
in
push
incl
pushf
testb
adc
jbe
push
and
xlat
mov
push
pop
sbb
inc
lcall
scas
adc
adc
pop
add
push
mov
push
push
cld
rcrl
pop
inc
sub
adc
inc
adc
cmpsb
jge
pop
ret
add
xchg
bound
add
dec
pop
cmp
adc
dec
sbb
sbb
mov
add
cmp
and
mov
sahf
adc
lret
inc
push
pop
sub
les
das
inc
sbb
xor
sahf
xchg
mov
test
arpl
add
xlat
or
mov
add
jo
in
cltd
test
movsb
aaa
sbb
pop
clc
loopnew
out
lea
jbe
out
xchg
jne
iret
pop
or
pop
push
mov
or
or
ss
push
sbb
mov
or
scas
mov
or
or
mov
adc
aam
add
xorb
or
outsb
daa
and
mov
loop
jne
out
outsl
xchg
nop
xlat
aam
inc
inc
fmul
xchg
mov
push
lcall
mov
mov
pop
sbb
or
lret
rcrl
add
push
roll
jge
insl
jecxz
or
dec
das
fldcw
nop
movl
aam
imul
xchg
test
and
iret
pop
movl
and
or
dec
xchg
adc
xor
cmp
stos
xchg
dec
push
sahf
or
frstor
imul
test
xor
push
cmp
jp
insb
push
xor
mov
inc
xchg
faddp
mov
cs
fisubl
xor
mov
push
inc
mov
push
mov
or
mov
jp
adc
push
and
xchg
or
sub
repnz
aas
push
shl
cs
cli
sahf
outsb
mov
test
push
add
pushl
inc
cli
sub
mov
pusha
jnp
inc
or
mov
fcoms
xchg
mov
subl
jbe
sahf
push
cmp
jbe
push
push
enter
in
push
sub
dec
aam
int
ja
mov
and
push
adc
sbb
inc
jp
aaa
push
sahf
xchg
je
sub
push
rclb
mov
sbb
add
mov
dec
sahf
inc
ret
outsb
insb
pushf
push
jl
mov
xor
inc
aaa
sbb
mov
subl
adc
push
push
jecxz
push
jge
adc
mov
add
xchg
scas
test
pop
mov
jo
mov
repz
or
lea
push
cli
loopne
mov
test
mov
push
bound
test
add
pop
cmpl
push
adc
or
push
mov
sbb
mov
and
or
sbb
addb
adc
ss
mov
mov
out
frstor
or
pushf
push
xchg
pushf
mov
sub
ljmp
add
dec
lods
pop
mov
inc
xor
shlb
faddl
push
iret
push
push
or
push
xor
sub
bswap
enter
cmp
xor
cltd
jmp
sbb
cwtl
xchg
xor
movsl
push
faddl
shl
push
sub
mov
adcb
jmp
dec
sub
dec
jg
loop
dec
xor
out
les
lret
je
cmp
xchg
push
sbb
inc
lock
push
xchg
stos
mov
scas
jge
fstp
cmp
push
sub
and
jo
cmp
and
cmp
cmp
aaa
xchg
adc
adc
and
inc
movsl
out
sbb
adc
mov
loopne
jle
pop
add
push
and
dec
cmp
inc
loopne
push
mov
fidivrs
popf
xchg
addb
fbld
xor
mov
lret
pop
insb
sarb
dec
fdivl
ret
mov
mov
sbb
insb
mov
and
add
pop
sarb
jo
adc
sbb
push
dec
push
pop
sbb
adc
jmp
enter
mov
cmp
std
mov
cmp
push
ds
or
push
pop
rclb
pop
dec
xor
outsb
mov
loopne
xor
or
or
pushl
xchg
inc
cwtl
inc
leave
sbb
mov
or
insb
mov
ss
push
add
add
xchg
jne
adc
mov
cmp
cmpl
add
jmp
mov
mov
clc
push
mov
push
push
loopne
mov
add
cwtl
add
xor
push
pop
sbb
imul
jo
sub
movsb
cltd
cltd
push
shlb
mov
fwait
sbb
pop
sbb
and
and
sahf
add
pushf
mov
adc
jle
or
dec
icebp
or
add
or
mov
mov
test
stc
sub
lea
pop
dec
inc
mov
leave
xor
cli
ss
inc
and
jne
lock
cmpsl
sub
mov
push
dec
push
jae
lds
sub
loopne
pop
or
sbb
push
or
loopne
push
mov
hlt
fildl
or
sar
sub
cmp
addr16
stos
rcrb
jbe
sub
add
sub
das
movsb
push
int3
inc
jno
or
out
add
cwtl
pop
mov
lods
pop
negl
push
inc
push
sarb
push
rol
push
adc
or
test
and
call
rorl
mov
xchg
stos
xchg
lret
cmpsl
mov
out
lret
ljmp
dec
pop
cmp
pop
push
dec
push
or
xchg
xchg
jmp
hlt
je
int3
add
ds
jge
sbb
hlt
sub
push
mov
add
out
xor
add
dec
add
add
hlt
mov
and
sub
sub
add
loopne
fcomps
xor
lods
mov
loopne
sbb
mov
subb
push
pop
mov
xor
push
mov
push
sub
mov
lds
add
sbb
addr16
add
mov
adc
lret
shlb
arpl
lods
imul
sbb
adc
mov
dec
sub
adc
adc
dec
xor
stos
xor
leave
or
mov
and
fucomip
lods
cmpsl
mov
pushl
push
ds
push
push
xlat
in
cmpsb
ror
shlb
dec
cmp
aaa
xchg
addr16
inc
insl
js
scas
mov
sar
stos
xor
pop
xor
adc
fs
xchg
and
adc
nop
add
adc
leave
and
adc
sbb
xor
adc
adc
xchg
inc
adc
pop
add
and
sub
shll
icebp
push
inc
rolb
pop
mov
pop
aaa
jg
push
mov
cmpw
je
add
aad
imul
inc
clc
add
rcll
or
fcmovu
inc
pop
scas
fwait
lock
pop
adc
fbld
sbb
rorb
lret
add
mov
scas
sti
or
test
in
popf
mov
pop
shlb
jl
inc
imul
das
jmp
cmp
out
or
sbb
cmp
push
jo
je
xchg
jb
jb
cmp
pushf
ss
fmuls
movsb
andb
nop
roll
adc
mov
lea
stc
shrl
mov
inc
mov
adc
jp
inc
dec
mov
or
xchg
push
xchg
insb
jae
mov
push
add
xor
add
into
in
add
in
imul
out
sti
popf
push
cmp
push
add
pop
mov
cmp
iret
sti
pop
jmp
and
adc
dec
pop
inc
rsqrtps
mov
lea
aad
pop
xchg
jnp
popf
push
mov
push
mov
pusha
mov
jne
dec
lahf
jb
push
mov
rol
mull
push
mov
push
inc
movswl
iret
call
sub
mov
jnp
addr16
mov
push
mov
call
setp
add
pop
loope
or
fnsave
testb
mov
sub
pop
add
test
inc
and
jnp
ret
mov
sub
mov
popa
aaa
test
xchg
inc
insl
rcl
and
sub
cmp
fdivs
out
mov
inc
test
in
cmpsb
mov
mov
jg
inc
push
stos
mov
mov
push
adcl
or
xor
test
mov
mov
sbb
cmp
into
aam
test
clc
add
jecxz
cld
cmc
in
pop
xchg
repz
jmp
or
sub
dec
inc
or
or
stos
sbb
dec
push
inc
insl
loopne
inc
add
cmp
inc
xchg
rorl
dec
push
push
imulb
scas
pop
add
push
js
or
xor
pop
inc
dec
push
sub
sbbb
mov
pop
push
inc
out
and
mov
fsubs
popa
push
repz
and
nop
ret
roll
mul
addl
xor
mov
push
pop
lahf
fwait
push
xchg
or
rorb
rcr
mov
xchg
pop
rolb
or
dec
jno
mov
sbb
addr16
xor
xor
and
mov
and
cmp
sbb
lret
test
adc
cmp
xchg
sub
adc
inc
or
lea
xor
or
repnz
cmp
jp
and
popf
dec
ret
mov
inc
clc
fwait
add
jno
mov
inc
test
cli
orl
xchg
test
idivl
inc
dec
adc
rol
push
push
scas
adc
xlat
jmp
addl
movsl
sub
mov
xor
cmc
les
xor
fsubrl
or
or
dec
push
pop
mov
orb
and
rorl
jmp
or
decb
inc
mov
lret
vsubpd
fidivrs
xor
imul
push
mov
movmskps
inc
outsl
stc
adc
pop
imull
mov
dec
jp
xchg
rorl
lea
mov
xchg
ret
rcll
dec
push
aaa
or
or
das
daa
not
andb
adc
sub
dec
test
xchg
pop
into
ror
ret
in
mov
sbb
or
aam
jne
xchg
mov
jmp
pop
out
sub
add
push
bound
test
sub
sbb
xor
xor
inc
push
push
lea
loop
push
xchg
mov
sub
mov
sbb
js
sbb
outsb
rol
pop
dec
push
stos
add
andl
adc
and
inc
mov
pop
mov
cwtl
sti
cmp
loope
rol
fisttpll
pop
jne
mov
mov
cmpsb
mov
daa
xor
sub
mov
jl
pop
js
cmpsb
lea
add
push
pushf
push
push
es
xchg
jns
es
xor
inc
addr16
dec
jmp
arpl
mov
inc
adc
inc
nop
push
push
clc
test
add
mov
roll
dec
xchg
push
jmp
inc
adc
pop
inc
test
imul
or
std
adc
push
aad
rorb
movsl
mov
dec
sar
sahf
add
ds
negb
aaa
cmpsb
or
add
xor
test
rolb
pop
add
push
inc
test
loope
dec
add
jl
inc
xchg
jae
shlb
add
xor
fldl
adc
or
cmp
cmpsl
cltd
xchg
mov
jmp
xchg
dec
nop
pop
in
or
dec
fldl
xchg
stos
test
and
jmp
nop
fstps
or
aad
cmp
mov
les
scas
add
je
dec
leave
or
repnz
dec
sub
jmp
inc
xor
push
cmp
pop
add
push
mov
inc
rcrb
ret
adc
mov
adc
or
je
inc
cmc
xor
popa
in
les
jp
add
mov
push
pmulhw
mov
adc
mov
xor
inc
fcmovb
sbb
or
pop
lahf
add
or
sub
fs
add
outsb
js
notl
push
fistps
add
loopne
loope
jg
adc
dec
cltd
iret
into
nop
pushl
hlt
stos
add
and
pushf
pop
pusha
add
call
push
inc
andl
mov
cmpsl
xchg
sub
in
push
pop
sub
daa
or
aaa
jb
shrl
adc
js
pop
xor
sbb
jns
or
add
pop
sub
in
add
sbb
lods
or
sub
or
add
prefetch
mov
pop
inc
insb
mov
std
cmp
inc
test
movsb
sbbl
add
and
cmp
jb
testl
rorl
or
inc
mov
mov
pop
cwtl
and
xchg
pusha
jecxz
scas
xor
push
inc
incl
in
pop
movsl
push
je
cwtl
xchg
and
inc
cmp
jbe
sbb
nop
mov
andb
mov
and
jbe
stc
xchg
nop
out
xchg
movsl
lret
inc
outsb
or
test
xchg
add
lods
xor
ret
add
add
sub
pop
mov
xor
mov
pop
dec
mov
jae
ja
add
cmp
je
cmp
or
shrd
pushf
sbb
xchg
sbb
clc
push
push
push
adc
xor
addl
pop
add
outsl
lea
cmp
inc
and
cmc
std
cmp
pop
and
inc
lds
nop
add
and
xor
test
or
int3
pop
cmpl
int3
push
or
sbb
add
inc
dec
pushf
and
jae
sub
or
ret
sbb
adc
addl
inc
ja
jecxz
jmp
in
mov
and
fisubrs
mov
xchg
notb
pop
subb
inc
adc
lahf
cwtl
les
sbb
ret
data16
sbb
testl
aad
sbb
ds
adc
xlat
cmpb
data16
mov
mov
cmp
inc
imul
push
jns
mov
clc
jne
mov
push
test
cmp
dec
or
mov
nop
sbb
inc
cld
cmp
stos
test
rolb
mov
movsb
nop
dec
fcoml
xorl
mov
hlt
inc
scas
xchg
inc
hlt
jns
push
add
sbb
lds
cli
sbb
sbb
mov
add
pop
adcl
jae
rclb
les
lret
and
mov
fsts
sub
pop
push
js
fistl
cld
or
loopne
loopne
fnstenv
mov
sbb
push
mov
stc
repz
cld
fcom
sbb
push
jecxz,pn
sbb
push
nop
out
mov
push
cmp
mov
inc
aaa
data16
in
jno
or
aaa
test
mov
ret
mov
cs
dec
sbb
push
fs
xchg
inc
call
mov
shrl
hlt
neg
sbb
and
bnd
movzwl
sti
sub
push
adc
les
mov
jp
test
add
or
test
adc
add
in
pop
xor
add
mov
fcmovnu
arpl
xor
mov
insl
loope
or
and
mov
dec
in
mov
add
clc
idiv
push
cmpl
jne
cmp
jbe
or
jne
push
xorb
jno
pushf
cmp
data16
mov
std
cmpb
data16
mov
pop
push
push
xchg
popa
mov
std
push
inc
cmc
jmp
sbb
mov
addl
push
xchg
lcall
sbb
adc
sbb
and
divb
cwtl
sbb
dec
test
push
pop
jne
add
push
mov
lea
inc
rolb
inc
sarb
negl
jg
vmread
or
add
dec
mov
push
sysexit
or
and
and
jo
or
in
xor
jne
and
xchg
rolb
bnd
push
mov
ret
jnp
and
push
nop
add
je
andl
pop
in
bound
add
mov
ficoml
dec
aas
out
or
sbb
cmp
cs
sbb
mov
inc
sbb
inc
jg
xor
or
cmpl
xor
add
mov
out
mov
inc
loope
add
mov
outsb
pushf
out
push
pop
ret
test
xlat
sbb
xor
push
mov
rorb
sub
add
movsb
push
inc
clc
mov
insb
lock
inc
clc
push
or
mov
jmp
and
add
adc
push
aam
lret
dec
fs
addr16
cmp
jae
inc
fs
cmp
or
dec
xchg
ljmp
sub
inc
jl
ret
add
lahf
les
in
inc
sbb
leave
mov
pop
mov
jb
push
jae
insb
cmp
lods
pop
add
inc
testb
cmp
fcomps
and
cmp
mov
cld
wbinvd
int3
ficomps
je
jle
loopne
cmp
add
daa
jmp
push
decl
cltd
push
push
mov
movsl
mov
outsb
sub
fwait
mov
add
sbb
int3
inc
sahf
xchg
add
outsl
mov
inc
rorl
add
dec
pushf
add
loopne
popf
call
into
hlt
xchg
mov
jbe
testl
or
sub
mov
mov
pop
sbb
sbb
and
test
add
dec
hlt
mov
imul
js
rclb
call
arpl
sub
cmp
add
mov
and
scas
sahf
movsl
fsubl
xchg
mov
and
jge
cwtl
ds
dec
dec
call
gs
packsswb
inc
mov
je
or
xor
adc
cmp
cwtl
or
push
sbb
ret
add
pop
mov
pop
lcall
dec
add
sbb
ss
pop
jl
push
and
jge
leave
adc
push
mov
jns
and
mov
xchg
hlt
xor
adc
and
lods
loopne
xchg
inc
sub
mov
xchg
push
push
mov
and
rcr
mov
ret
or
je
les
push
sub
aaa
mov
xchg
inc
jg
aam
push
in
in
jno
dec
xchg
or
out
mov
dec
mov
aam
pop
je
iret
fcomps
add
and
lods
push
inc
fcoml
push
jle
and
mov
xor
adc
push
sahf
xchg
sti
or
and
das
or
sbb
mov
adcb
adcb
lea
mov
fidivrs
fdivrs
cmp
inc
jle
push
push
in
mov
xor
jns
cmp
xor
mov
or
and
adc
fisttps
rcl
ret
mov
pop
or
xchg
pop
jae
push
add
sti
jb
mov
mov
mov
enter
jo
push
test
lea
arpl
fistps
shrl
add
xor
outsb
add
push
sti
dec
mov
cmp
sub
cmp
add
pop
je
dec
adc
lock
in
jae
lea
ja
mov
aas
or
or
mov
jmp
inc
test
cmp
pushl
sub
sbb
test
and
daa
lock
std
pop
test
or
mov
lea
out
cmp
sbb
pop
push
pushf
jne
push
dec
or
dec
mov
jle
pop
je
iret
lea
les
in
sub
add
mov
stc
jae
loopne
or
add
inc
sub
pop
sbb
orb
dec
shr
push
sub
insb
sbb
and
or
sbb
les
add
mov
ret
rolb
gs
and
inc
sbb
add
sbbb
pop
push
sbb
sbbb
adc
mov
je
mov
pop
aaa
pop
imul
adc
or
adc
jo
adc
dec
shrl
inc
mov
sub
dec
and
sub
mov
ss
les
inc
pusha
imul
lock
lea
cmp
jle
movsl
sub
lret
or
jge
xchg
adc
jp
popf
mov
nop
jmp
imul
adc
popf
jecxz
mov
add
push
mov
add
xor
push
jno
dec
in
lods
or
outsb
or
pop
pop
pushf
lret
scas
adc
mov
push
mov
lea
shr
push
dec
or
sarl
inc
out
inc
cmpl
adc
xchg
cmp
push
lcall
inc
and
xchg
or
data16
xchg
add
push
add
or
iret
adc
pop
pop
inc
jae
mov
je
dec
add
adc
xor
xor
les
adc
adc
repnz
jmp
andl
movb
fcoml
arpl
xor
daa
or
fwait
jnp
test
addb
mov
dec
mov
mov
clc
bnd
mov
notb
cmp
push
fidivs
add
jb
push
jae
lea
push
sub
add
and
xor
xor
xor
es
ja
or
hlt
lods
lret
ret
shlb
or
pop
mov
mov
cmc
loopne
jge
lods
shll
incb
cmpb
xor
fnstenv
inc
jmp
inc
jmp
xor
xor
cmp
adc
ficoml
insb
testl
sub
inc
cltd
mov
add
adc
sub
sub
out
push
mov
sub
jp
mov
insb
testb
div
cmpsb
enter
flds
push
cmc
dec
mov
frstor
rorl
inc
xor
out
push
sti
sbb
push
push
mov
pop
repnz
mov
push
push
adc
out
imul
xchg
inc
cmp
mov
pushf
mov
adc
push
pop
xlat
push
cmp
or
aad
xor
add
push
mov
pushf
cmp
adc
leave
adcb
nop
cltd
or
sub
int
or
scas
divl
cmp
jge
outsb
fstpt
dec
cmp
xchg
inc
mov
and
dec
and
jb
inc
fsubrs
insl
test
cli
rclb
jnp
insl
test
mov
cmp
sub
push
inc
popa
sti
inc
scas
or
add
es
dec
add
mov
cltd
and
push
sbb
add
sahf
clc
and
xchg
push
adc
out
cli
mov
inc
out
std
cmc
imul
test
out
push
sbb
bound
test
pop
adc
ja
push
cmpsb
imul
imul
mov
sbb
popa
adc
and
inc
add
repnz
adcb
push
jbe
inc
push
stc
and
add
push
sbb
movsl
sbb
lea
add
adc
loop
mov
rcrl
inc
xchg
jo
and
mov
ds
adc
push
cmp
mov
add
jmp
das
inc
sbb
imul
lods
inc
adcb
sub
lock
push
pop
pop
pop
sbb
ja
cs
xor
loopne
lds
dec
addr16
xchg
add
add
jb
adc
inc
pop
imull
xchg
or
cmc
test
lret
nop
xor
jbe
cmp
dec
loop
ret
pusha
std
xchg
xor
mov
daa
mov
rcll
loop
inc
js
jg
pushf
mov
dec
xchg
pusha
jo
xorl
movsl
shrb
pop
imul
pop
and
rclb
add
data16
ret
ja
adc
cmp
and
jecxz
or
lret
cmp
push
nop
repz
rcr
adc
and
push
jl
mov
mov
sub
dec
inc
pusha
pop
test
pop
adc
or
mov
cmc
pop
push
imul
cmp
add
mov
sbb
fdivrs
mov
jae
ja
std
or
test
and
push
pop
pop
sbb
xor
pop
or
mov
mov
leave
jae
rol
push
pop
jnp
add
lahf
mov
out
lret
in
mov
pushf
push
add
fimull
inc
xor
les
pop
fs
push
push
scas
dec
inc
xchg
inc
push
roll
jnp
pop
sub
clc
addr16
inc
and
fsubrl
jle
jne
mov
pusha
jne
das
lea
and
xchg
add
push
das
add
lock
das
mov
fwait
and
clc
inc
das
and
fildl
ret
pop
dec
fdivs
sub
lock
aas
push
xor
adc
jbe
inc
cmp
mov
fimuls
and
and
sahf
jbe
nop
shrb
pop
cli
enter
ja
daa
inc
and
add
mov
push
add
mov
mov
out
mov
cmp
test
stos
adc
adc
pop
inc
push
cld
adc
or
int3
sar
enter
or
ja
fs
and
or
notb
iret
inc
mov
les
push
mov
or
leave
push
or
ret
ret
sub
fmull
inc
test
mov
pushf
out
ds
push
pop
and
popw
scas
adc
ja
ljmp
dec
fnsave
xchg
adc
data16
jnp
mov
mov
mov
jo
int3
or
add
pushf
inc
mov
cmp
fwait
ret
xor
pop
andl
out
dec
hlt
cli
mov
cmp
js
xchg
dec
test
jg
mov
add
xchg
jp
or
cmp
or
add
ss
pop
push
mov
in
mov
xchg
dec
cmc
js
jnp
push
cmpl
push
inc
cmp
mov
add
ds
jmp
cmp
xor
mov
push
push
arpl
daa
jo
sub
push
arpl
outsl
sub
add
push
adc
mov
mov
test
sbb
bound
pop
cmp
xchg
andl
leave
in
sbb
xchg
ret
jl
subb
loope
test
movsl
jb
loopne
fsubl
push
sbb
push
push
dec
dec
mov
mov
aam
and
adc
mov
lock
add
xchg
rorb
addr16
pop
sbb
stos
int
push
shrl
push
call
and
out
das
mov
pop
jle
mov
movsl
movsl
addl
push
insb
sub
aaa
and
in
pop
push
mov
mov
mov
lret
or
pop
sub
ret
xor
sbb
push
pop
or
lea
es
in
stos
or
mov
inc
jmp
jge
ret
rclb
push
cmpsb
mov
sub
mov
ret
aas
or
or
ret
push
and
push
adc
fs
sbb
cmp
ja
fnstcw
pop
dec
cld
push
adc
cld
js
in
cmpsl
lods
mov
insl
cmp
dec
cs
sti
dec
clc
add
push
push
xor
lar
jmp
cmpsb
jecxz
jne
int3
add
clc
shlb
cs
sub
pop
fs
jecxz
push
sbb
clc
popa
and
sub
mov
dec
rclb
mov
and
pop
inc
add
jge
xor
mov
cmp
js
popf
sarl
not
imul
es
adc
mov
negl
add
pop
mov
lods
sbb
adc
cltd
into
sbb
gs
lods
out
arpl
push
lea
add
test
inc
adc
and
rcll
or
aad
loope
mov
mov
hlt
xchg
inc
in
sub
push
sub
push
dec
jmp
add
inc
or
mov
lahf
mov
jg
test
ja
add
dec
sbbb
loope
adc
je
jno
scas
xor
dec
jne
pop
fs
push
fcomps
cmp
test
add
out
inc
or
push
in
mov
adc
fidivrl
inc
scas
jbe
mov
cwtl
frstor
into
add
mov
mov
clc
add
xchg
negb
push
cmp
or
in
push
call
das
outsl
push
xor
cmp
dec
inc
sub
js
dec
cwtl
jl
mov
leave
cmpsb
mov
adc
xor
xor
lea
xchg
jl
ss
stos
int3
sub
inc
jmp
add
loopne
pop
adc
lret
iret
push
lcall
adc
arpl
es
add
jmp
loopne
fstps
adc
add
test
out
mov
dec
inc
and
orl
fdivs
mov
inc
mov
incb
mov
sbb
xchg
mov
rcll
dec
fwait
out
gs
scas
clc
call
sbb
inc
jle
add
outsb
adc
movsl
aam
jo
scas
in
movsb
fst
jmp
xorl
ret
mov
or
add
subb
xorb
lret
and
adc
ss
xchg
mov
mov
cmp
ret
or
jge,pt
pop
cmp
or
add
pop
aam
orb
mov
inc
push
xor
pop
xchg
adc
jo
push
ljmp
sub
js
mov
mov
dec
push
or
roll
sub
or
daa
mov
dec
or
inc
in
je
jno
mov
xchg
mov
xchg
xchg
aaa
movsb
pop
test
roll
push
sahf
jne
add
push
dec
iret
mov
dec
xchg
inc
scas
push
push
add
xchg
mov
inc
adc
loope
add
loope
dec
sbb
in
xchg
lods
pop
loop
and
mov
les
sbb
mov
adc
jge
movb
lahf
cmc
int3
rcll
or
adc
call
add
mov
or
and
jl
fwait
xor
jno
and
jne
sub
pop
xchg
or
pop
mov
push
or
jne
sub
lods
dec
add
jne
xor
daa
add
outsb
ljmp
cmp
fists
lahf
cmp
ja
lock
mov
lea
inc
je
lret
push
into
add
clc
mov
sbb
add
jo
int
repnz
cld
push
dec
jnp
notb
popa
inc
add
mov
dec
add
stos
pop
ficoml
push
sti
loope
fists
movsb
inc
mov
std
sbb
fdivrl
push
jnp
aad
inc
xor
sarb
sub
mov
mov
ds
pop
mov
fs
adc
repz
mov
mov
jp
lods
adc
add
out
push
fdivl
enter
pop
mov
mov
push
dec
scas
lcall
inc
inc
fbstp
aam
pop
mov
jg
daa
cmp
and
out
sbb
imul
sub
rcll
xchg
movsb
cmp
push
jmp
cmp
sarl
rorb
insl
roll
loope
cmp
pop
sbb
cmp
xchg
flds
sub
and
and
inc
jo
mov
mov
orl
fcoml
sahf
xchg
add
andb
andl
mov
cmp
in
ret
cmp
jne
test
cli
or
pop
sub
sub
add
push
jae
push
add
out
repz
push
je
xor
imul
sbb
dec
insb
jne
mov
cmp
scas
dec
jno
fs
rclb
rolb
mov
inc
mov
pop
sbb
jo
gs
or
je
pop
add
or
jne
lods
adc
adcb
nop
mov
cmp
pop
addl
push
data16
add
and
xchg
cmp
add
xchg
or
jnp
psubd
inc
cmp
cli
push
pop
cwtl
fdivrl
jl
add
sbb
mov
mov
xchg
ffreep
push
push
das
rorb
push
pop
sbb
test
out
in
push
cmc
push
xchg
jno
aaa
mov
pop
xor
rcrl
push
test
jno
lcall
add
fwait
icebp
add
stc
lds
mov
cmp
jne
or
or
pop
mov
loopne
pop
shll
jo
mov
push
mov
iret
mov
insb
pop
dec
dec
or
je
adc
inc
or
lea
xchg
lea
daa
shlb
lods
or
inc
mov
sbb
inc
xchg
insb
fcmovb
inc
sbb
inc
sub
mov
int
mov
mov
pop
pop
add
add
jae
push
add
mov
lcall
xor
mov
lcall
insb
xor
imul
push
add
orl
or
push
or
or
cmpsl
mov
dec
int3
cmp
push
shlb
cwtl
xor
push
mov
cltd
pop
out
pop
xor
add
loopne
nop
in
arpl
out
or
movb
sbb
sbb
cmpsl
xchg
lods
pushl
cwtl
incl
add
fmuls
inc
jl
js
add
nop
je
insb
sbb
pusha
sbb
add
imul
insl
and
cltd
adc
leave
cmp
aam
and
cmp
push
push
mov
out
dec
pop
add
adc
pop
shrl
cld
jo
in
xchg
xor
sub
sub
and
push
adc
jmp
xchg
add
push
adcl
mov
fidivl
mov
push
data16
push
lea
add
xchg
add
cmpsb
cli
adc
cmpb
fcmovnb
add
movswl
cmp
xchg
aam
push
inc
sbb
or
out
mov
es
mov
mov
pop
or
jbe
push
js
jo
jle
mov
xor
push
add
dec
clc
push
lock
mov
cmp
push
inc
dec
and
push
fcoms
insl
inc
sub
lock
shl
ret
mov
sbb
xchg
add
add
aam
ds
ss
and
imul
je
xor
xchg
jne
das
xorl
cld
addl
pop
jne
orl
cld
mov
jne
imul
sub
data16
pop
dec
test
pop
jmp
and
xchg
fidivrs
adc
das
call
push
stc
fldl
sar
dec
jb
sbb
lods
jo
cmp
sub
sub
sub
add
imul
outsb
dec
les
mov
add
mov
stc
push
jne
loopne
mov
mov
sub
mov
clc
dec
jne
cmp
inc
icebp
data16
cmp
cmpsl
lods
xchg
jne
xor
add
fwait
jl
sub
lahf
jo
cld
ja
xor
dec
mov
and
cli
sahf
loopne
lcall
daa
xchg
lock
or
mov
xchg
sbb
enter
adc
sbb
into
dec
aas
clc
lods
push
mov
add
lret
popf
movsl
sbb
mov
mov
or
cli
out
fidivrs
pop
dec
adc
add
sahf
xor
mov
push
sub
or
dec
lret
jle
add
dec
dec
adc
nop
pop
inc
sbb
jno
pop
cmp
xor
rcll
xorl
sti
insl
cmp
xor
jb
add
sub
sub
xchg
test
shll
or
and
push
and
sbb
call
dec
cmp
mov
outsb
dec
jb
sbb
movsb
sbb
lea
xchg
mov
stos
bound
pushl
jo
and
sbb
jno
orb
mov
outsb
or
lock
fwait
inc
data16
mov
cmp
notl
inc
cmpl
or
dec
add
gs
or
pop
and
insb
insb
out
ror
push
icebp
or
or
xor
cmp
pop
pop
icebp
nop
push
xchg
adc
inc
pushf
cmp
cli
je
or
pusha
popf
popf
add
or
enter
push
mov
or
ficomps
cmp
lea
mov
hlt
sti
loopne
outsl
lds
fwait
inc
and
cmp
push
jne
jg
nop
mov
mov
adc
dec
shll
lock
enter
cld
lock
test
ljmp
fistps
adc
sbb
jp
inc
ja
jo
lods
xchg
mov
cli
fistpll
in
push
mov
lret
add
push
and
mov
rsm
mov
lock
sub
xor
cmp
xor
jne
movsl
pop
or
cmc
jecxz
and
pop
pusha
xchg
sbb
push
test
or
or
lret
push
ljmp
push
mov
add
fsubl
test
pop
mov
sbb
cmp
add
insl
mov
jne
adcb
jbe
mov
push
sub
jne
adcl
popa
adc
add
ror
xchg
fidivl
mov
adc
mull
adc
xor
aas
fldl
cmp
jne
outsb
fcompl
xchg
shrb
mov
mov
sbb
stos
or
test
es
cwtl
fidivrs
mov
sub
mov
adc
je
sbb
jle
cmp
out
push
and
dec
push
lea
push
mov
xchg
adc
sbb
sbb
loop
dec
push
or
popf
xchg
or
sbb
xor
jbe
data16
fcoms
jo
mov
rol
add
popa
xor
into
add
push
fs
pop
loop
pop
or
mov
pop
jno
mov
arpl
mov
xchg
mov
cmp
xor
fdiv
or
cmp
add
push
jbe
sub
sub
add
sbb
addb
cltd
sarl
test
cmp
fdivs
lods
sub
divb
add
dec
ret
jge
int3
mov
lods
dec
sbb
add
add
or
pop
rol
inc
pop
jbe
and
push
jmp
adc
or
mov
mov
shrb
mov
pop
out
ss
jmp
jmp
xor
xchg
push
sub
test
mov
mov
add
pushf
sub
push
jo
into
push
adc
xor
xor
and
and
mov
sbb
dec
mov
and
push
sbb
sub
ret
dec
jle
dec
js
lcall
push
mov
dec
mov
cmp
ja
pop
push
adc
fiadds
mov
mov
cmpl
pop
test
lods
out
add
push
fmuls
dec
jno
mov
sbb
pushf
push
and
sarb
push
inc
mov
cmpsb
add
sub
xor
idivb
pop
push
xor
and
fs
mov
out
call
inc
xor
dec
fdivl
arpl
mov
movsl
add
outsb
mov
jl
mov
mov
sbb
and
sbb
sbb
push
adc
sbb
add
jmp
fnstcw
xor
inc
adc
xor
ja
cs
push
or
scas
mov
xor
and
enter
popa
aaa
cmp
and
mov
repnz
ficomps
sub
mov
jne
aas
fisubrl
and
sub
and
sarb
or
divl
dec
and
push
cmpsl
in
adc
adc
cli
mov
jl
repnz
push
andl
sub
push
aam
inc
cltd
sub
fwait
jne
mov
cltd
or
outsb
adc
and
or
mov
push
or
inc
fstpt
adc
fsubl
leave
and
stos
sbb
or
pop
mov
call
popf
inc
jg
shrb
int
sarl
pop
arpl
push
adc
push
jbe
jo
or
js
cmp
sbb
jo
pop
adc
out
insb
test
push
xchg
add
pop
mov
push
add
aaa
jmp
mov
or
pop
push
orps
and
aaa
xchg
movsb
add
arpl
add
popf
cmpsb
dec
jge
cmp
push
imul
pop
jb
sub
in
and
pop
addb
xor
call
pop
mov
push
mov
rcrb
test
dec
sbb
ret
cmpsl
ret
jge
lret
xor
test
push
or
or
adc
jbe
pop
sahf
push
fs
xchg
push
mov
pushf
and
dec
int3
add
mov
minps
pop
pop
inc
add
sbb
popa
mov
push
jnp
xor
xchg
sbb
sub
testl
mov
sub
dec
lcall
cmp
add
sbb
enter
mov
loope
add
fwait
xchg
cmp
insb
mov
setbe
loope
adc
js
mov
push
cli
push
push
push
cmpsl
imul
push
loopne
sub
iret
aaa
add
aad
jp
or
cmp
and
add
test
and
pop
lds
cmp
adc
addb
inc
in
jmp
pop
and
xor
add
and
dec
je
mov
cmpb
fimuls
jbe
jmp
pushl
andb
dec
rcr
call
lea
push
orb
cmp
mov
mov
inc
test
subl
dec
cwtl
xchg
test
jae
test
or
or
mov
push
xchg
and
jge
cs
jl
andl
or
mov
push
sub
js
daa
fs
jb
cltd
addb
les
inc
jae
test
leave
and
jecxz
cmp
test
mov
push
push
int3
lea
add
jo
fisubrl
ret
cmpsl
shr
push
fcoml
jbe
inc
into
mov
cmpsl
sub
ljmp
adc
push
jno
pusha
adc
ret
andl
adc
rcrb
mov
mov
addl
and
add
lret
rcrl
je
push
pop
ja
out
sub
sub
xor
addb
pop
jmp
and
sbb
jno
mov
das
pop
bound
or
or
add
pop
or
outsb
fs
arpl
jne
jns
pop
pop
sub
xor
xor
mov
pop
lock
pusha
mov
das
push
sub
mov
pop
in
mov
sub
add
cmp
add
sbb
cmp
add
clc
inc
mov
sbb
mov
fdivl
cmp
dec
or
dec
jl
loope
xor
push
or
jmp
fistl
jo
add
dec
mov
mov
mov
lods
push
push
leave
adc
loopne
cmc
imul
ja
xchg
dec
testl
inc
add
jb
push
inc
mov
aas
mov
push
add
shrl
inc
push
pop
sub
xchg
add
xchg
into
outsb
movsl
sarl
aaa
add
pusha
and
sbb
inc
jle
rcr
movsl
push
push
pop
loopne
or
mov
jl
mov
incb
pop
add
loopne
jl
test
add
nop
sbb
shr
aaa
icebp
or
or
xchg
or
sub
xchg
mov
mov
mov
shlb
xchg
ret
nop
inc
mov
inc
and
out
xchg
shl
mov
inc
ficompl
or
lret
xchg
daa
mov
xchg
jo
stos
or
mov
lods
mov
add
dec
fwait
inc
fcmovu
add
push
pop
push
push
lcall
or
push
inc
push
cwtl
imul
cltd
idivl
mov
sbbb
jbe
out
sbb
add
add
sub
hlt
mov
add
push
ret
adc
and
push
gs
jb
pop
add
or
sub
je
mov
inc
fxch
pop
mov
jecxz
push
int
pusha
addr16
or
lcall
imul
filds
and
push
mov
adcb
adc
rolb
mov
xchg
fsubs
adc
aad
or
mov
sub
je
daa
js
cld
sbb
rcll
test
push
push
mov
adc
cmp
pop
mov
dec
jp
mov
loopne
test
add
sub
jo
xor
lods
je
xor
push
mov
push
mov
jns
push
test
cmp
popa
jp
sub
push
and
je
insl
sub
push
nop
sbb
mov
rcll
push
xor
or
cmpsl
notl
pop
jae
mov
test
insl
js
or
and
int3
dec
orl
mov
pop
pusha
jmp
cmp
dec
shl
jmp
cmp
xchg
addr16
cmp
incb
loope
pusha
jb
add
ja
adc
sbb
adc
dec
cmp
adc
sbb
cmp
jo
pop
cmp
jmp
cmc
pop
push
call
xor
add
push
add
push
rclb
xchg
adcb
out
or
addb
sbb
data16
and
aas
jmp
and
loope
cmp
lds
add
push
mov
int3
and
adc
push
cld
xchg
movb
mov
scas
jge
movl
jg
inc
insb
shr
inc
add
stc
ficoms
dec
adc
adc
and
call
jge
dec
sbb
mov
pusha
insb
std
mov
sbb
jmp
mov
adc
std
repz
mov
imul
ss
fsubs
stos
or
add
sbb
jne
sub
in
sbb
push
arpl
pop
add
inc
lock
sub
dec
dec
sbbl
dec
and
inc
leave
lret
push
int
fucom
mov
dec
add
xor
or
pop
adc
or
or
les
pop
ret
mov
xchg
mov
mov
mov
addl
pop
sbb
pop
adc
test
jle
adc
or
cltd
pop
out
mov
mov
insb
insb
pop
mov
adc
data16
xchg
or
push
add
pushl
dec
or
jg
inc
xor
inc
out
bound
inc
movsl
xor
je
in
add
adc
sub
adc
jno
sub
cwtl
adc
js
lret
push
loopne
add
jmp
push
jne
jnp
imul
push
pop
mov
add
out
mov
cmp
cld
arpl
or
add
mov
idivb
addr16
xchg
adc
mov
stos
ret
es
pop
sbb
mov
jo
sahf
repz
in
cwtl
sub
fs
dec
xor
mov
hlt
sti
sub
cmp
jl
dec
adc
shrb
pop
cmp
pop
cmp
or
push
mov
xor
jmp
cltd
push
mov
cmpb
dec
cld
fistpll
mov
jp
mov
inc
je
cmpsl
dec
pop
paddusw
fists
in
lea
mov
xchg
stos
pop
add
add
lret
cmpl
and
mov
or
adc
or
add
fwait
cmp
fs
xor
bound
adcl
cld
dec
jl
sar
inc
dec
movsb
push
adc
cmp
jnp
inc
adc
jbe
mov
les
pop
and
adc
cmc
mov
mov
pop
sub
andb
movsl
mov
repnz
pop
push
mov
dec
je
cmp
push
fbstp
dec
es
jbe
repnz
call
xchg
or
xchg
sets
push
fsubrs
ret
pop
pop
xchg
adc
cs
push
add
test
mov
xor
js
jb
add
and
adc
push
les
push
inc
xchg
cltd
add
into
mov
push
out
xor
push
pushf
in
mov
cmc
je
mov
lret
ret
xchg
lock
ret
shll
testl
lock
pop
dec
jle
xor
or
js
neg
ret
xlat
loope
dec
pop
dec
rcrl
jae
mov
cmpsb
add
insb
dec
add
loope
lock
shlb
pusha
stc
or
jae
push
push
rcrb
lret
jle
sbb
sbbl
sub
pop
and
and
mov
xchg
loopne
dec
push
xor
das
insb
es
in
pop
fwait
add
mov
and
shll
dec
int
sbb
sbb
push
cmp
ljmp
loopne
pop
loopne
mov
add
mov
mov
je
add
add
fcoms
jbe
and
sti
inc
clc
push
sub
daa
inc
insl
xorl
push
movsl
mov
in
dec
push
mov
cmp
push
push
repnz
xor
mov
femms
fisubl
rcl
adc
inc
sbb
adc
popl
mov
mov
subb
push
add
lock
jae
jnp
das
loop
rcr
daa
push
in
xchg
loopne
cmp
add
lods
cmp
cmp
lcall
push
or
lea
loop
cmp
and
sbb
movsl
pop
push
fisubs
mov
add
cld
push
or
and
pop
add
shl
dec
loope
adc
xchg
jbe
or
adc
add
pop
cmp
push
and
xor
pop
mov
test
cmpsb
jne
ret
outsl
decl
mov
cmp
ja
je
movsb
rcr
outsb
or
je
or
sub
xchg
call
das
adc
rorl
jns
push
sbb
cmpl
movsb
xchg
aaa
xor
scas
add
sbb
sahf
pop
add
popa
or
andb
mov
clc
push
jmp
cmp
adc
imul
xor
sbb
inc
push
inc
adc
adc
or
mov
or
add
adcl
push
push
dec
lock
xchg
movsb
dec
cmp
call
jmp
aam
inc
push
push
dec
je
stos
inc
mov
cmp
push
sub
lock
sbb
adc
or
push
pop
fcomps
and
pop
repnz
out
scas
pop
popa
mov
adc
cmp
andl
pop
aad
pusha
or
pop
popa
icebp
bound
adc
outsb
xchg
xchg
and
jno
dec
je
sub
jne
sub
or
pop
mov
in
inc
outsb
jp
mov
mov
add
ds
or
ret
push
adc
inc
push
int3
or
or
mov
insb
adc
insb
popf
das
dec
pusha
add
or
or
cmp
jmp
sbb
add
int3
and
push
inc
enter
and
xchg
inc
push
mov
shr
shrl
push
push
or
lret
sub
lods
rcr
inc
mov
lds
sbb
add
addr16
inc
loopne
fsubl
mov
add
xor
out
je
push
push
or
jmp
cmp
xchg
test
mov
jmp
xchg
push
rol
call
loopne
pop
jns
testl
pop
push
cmp
loope
imul
js
daa
push
or
flds
xchg
push
cltd
mov
sub
inc
mov
popa
aam
or
xchg
and
rorb
dec
lahf
jl
mov
cmpl
mov
inc
clc
and
jns
inc
add
add
add
cmp
pop
push
push
mov
pop
push
fs
jb
fsubr
or
and
pop
cmp
mov
add
dec
pusha
loope
jge
mov
mov
cmp
pop
cmp
js
lods
mov
add
sahf
push
mov
fsubrp
push
das
jno
inc
xor
int
fdivrl
pusha
push
ret
pop
cmc
fsubrs
mov
mov
adc
jmp
jbe
push
push
or
inc
shll
mov
fdivrs
xor
aas
xchg
loopne
sbb
mov
fimuls
mov
dec
sbb
adc
sbb
inc
dec
shr
xchg
push
xor
das
addl
inc
js
inc
sbb
mov
xor
sbb
aaa
jne
cmp
sti
test
mov
bound
adc
mov
jmp
cmp
rcrb
or
dec
inc
sub
fidivl
lock
jecxz
ljmp
movsl
or
push
out
adcb
sub
adc
popf
fimuls
insl
mov
pop
adc
jb
data16
jne
mov
dec
jecxz
xor
loopne,pt
xchg
sub
jge
lcall
ds
push
je
hlt
or
xlat
shlb
push
leave
andb
loop
pop
stos
inc
pop
mov
sbb
jno
sbb
push
and
sub
mov
test
outsl
in
bound
or
je
daa
push
arpl
dec
leave
mov
mov
add
in
sub
inc
andb
test
data16
adc
hlt
mov
sbb
mov
aam
add
and
sub
sub
roll
jp
push
loope
inc
aam
dec
and
sbb
or
inc
fst
ss
or
movsl
adcl
pusha
daa
push
test
dec
sub
roll
jecxz
ret
in
xchg
scas
es
outsl
add
cmp
int3
cmpsl
ljmp
cld
inc
jp
add
cwtl
push
gs
jle
pop
push
inc
leave
stc
mov
xchg
je
rcl
add
cmp
mov
add
mov
sahf
in
subb
xchg
push
sub
lds
fcompl
add
call
inc
pop
jae
data16
xor
aaa
bndldx
xchg
in
mov
sbb
add
or
pop
cmpsl
mov
test
mov
add
and
fisubl
sbb
mov
js
clc
or
mov
sarb
push
mov
mov
out
sbb
push
rolb
mov
mov
mov
mov
adc
adcl
inc
xchg
pop
and
pop
addb
fwait
and
adc
notl
scas
int3
out
or
push
and
mov
cmp
scas
sbb
push
mov
adc
jne
cmpsl
inc
in
push
insb
int3
xchg
or
push
inc
xchg
lods
psubd
add
push
or
scas
iret
mov
cmp
add
sub
xor
or
ret
xchg
push
or
in
js
sahf
or
sub
adcl
xchg
fcmovb
xlat
cmp
test
sbb
pop
data16
subb
cmp
jne
xor
adc
in
popf
inc
sbb
std
mov
mov
push
xor
xchg
jmp
sbb
lret
xchg
in
cmp
or
leave
jp
cmp
push
loope
push
js
je
mov
or
xadd
bound
negl
sti
or
jl
sbb
pushf
dec
je
xchg
inc
das
push
cs
xchg
jmp
movsl
sbb
in
adc
outsb
fiaddl
inc
and
dec
adc
and
add
sub
data16
adc
push
imul
and
mov
jnp
cmc
add
sbb
dec
in
xor
jnp
inc
adc
inc
and
dec
and
and
jnp
loope
divb
jno
sub
cld
and
movsb
into
jle
jno
dec
or
pop
ja
mulb
push
dec
pusha
gs
lcall
ret
sbb
xchg
mov
call
test
loop
in
add
mov
push
sub
add
mov
fadds
or
das
test
push
push
mov
pop
dec
sub
adc
sub
sbb
mov
inc
test
jae
inc
add
lods
das
mov
int3
sub
icebp
xchg
xchg
out
pop
movsb
les
icebp
in
addr16
cmp
sbb
repz
lock
add
jp
lock
mov
or
aam
pop
mov
mov
fdiv
jg
or
gs
movsl
ret
testl
lahf
aaa
add
sti
sbb
adc
pop
lret
dec
or
rorl
stc
and
mov
push
repnz
subb
cmp
out
mov
cmpl
sbb
adc
push
adc
pop
or
popf
sbb
js
dec
mov
jo
pop
jns
dec
adc
push
or
dec
test
cli
mov
dec
and
and
cli
xchg
fimull
push
repnz
pop
je
inc
add
stos
je
cmp
sbb
aas
imul
data16
xchg
sub
and
cld
insl
inc
mov
mov
lds
andb
mov
inc
and
arpl
inc
add
or
inc
not
adcl
dec
outsb
sti
aaa
inc
mov
sub
loopne
cmpb
mov
fnsave
push
add
mov
xchg
dec
mov
ja
pop
pushf
cld
inc
adc
and
jo
insb
lahf
movups
push
mov
inc
lea
insb
test
popf
add
and
std
out
jl
push
sub
shl
adc
stos
cltd
pop
enter
das
pop
orl
jo
or
jno
lock
andl
rorb
fwait
adc
mov
out
orl
or
insb
sub
test
sbb
sbb
fld
jge
push
dec
xor
pusha
add
fxch
sbb
jmp
add
and
into
mov
jmp
mov
sar
sub
ja
add
outsb
xchg
cwtl
lods
inc
pop
aaa
or
push
jo
insb
add
jle
adc
and
xor
movsb
sbb
sbb
test
enter
or
cmp
enter
jg
fsubrl
lds
push
jg
jne
fs
enter
xchg
jg
int
insb
inc
jne
mov
ja
add
lret
sub
fs
fs
in
insl
push
dec
addl
ss
mov
push
cmp
xchg
mov
jle
stc
xor
in
push
daa
jae
sti
je
pushf
out
negl
push
adc
dec
push
xchg
cltd
test
ret
dec
sub
jne
push
adc
push
pop
stos
test
daa
cmp
jmp
and
and
hlt
add
mov
js
pop
and
xchg
or
jb
mov
sbb
and
adc
cs
push
pop
pop
push
add
sub
add
pop
pusha
test
mov
iret
in
mov
movsl
push
sbb
pop
mov
xchg
mov
jnp
pop
sbb
xchg
cmp
scas
fistpll
loope
inc
jl
outsb
rclb
mov
inc
sbb
cmp
push
dec
fdivrl
jle
sahf
jae
push
adcb
push
push
inc
dec
je
cltd
fdivl
inc
in
data16
sbb
add
or
push
push
xchg
push
ljmp
out
or
pop
in
mov
sbbl
add
xor
shl
sbb
mov
ja
push
cmp
cmp
pusha
add
rol
xor
inc
cmp
shrl
push
mov
fidivs
mov
jne
rdtsc
imul
push
nop
cmc
pop
imul
xchg
cmp
adc
and
pop
sbb
popf
add
sub
adc
jg
jne
mov
mov
int3
enter
les
xchg
cmp
cmpb
pop
pop
inc
xlat
ret
mov
sti
lret
push
pop
mov
loopne
and
and
add
add
add
add
inc
imul
shlb
xchg
mov
push
scas
mov
clc
call
shll
mov
mov
jne
pop
gs
sbb
mov
rcl
mov
insb
adc
mov
pop
jmp
loopne
or
pushf
ja
add
mov
je
fmuls
xchg
add
test
mov
push
cmp
add
cmpsb
jbe
dec
mov
xor
pop
and
jge
add
xchg
dec
or
ffree
pop
push
add
jne
sbb
push
pop
adc
add
je
or
rcrb
scas
adc
xchg
pop
mov
add
lea
or
push
xlat
push
push
mov
or
add
mov
pusha
or
xchg
and
mov
inc
lahf
ja
cli
insl
or
call
jg
js
dec
sub
push
and
or
xor
sbb
fdivrl
out
into
in
or
sub
adc
cmp
idivb
lods
test
out
push
mov
les
ja
xchg
adc
mov
sub
out
inc
push
jmp
adc
push
xchg
or
xchg
mov
pop
faddl
add
ret
mov
adc
and
adc
jo
call
dec
push
push
mov
jb
and
mov
push
xlat
fcoml
xchg
or
sbb
cmovno
daa
mov
lds
and
cmp
test
xchg
aad
ja
jg
mov
pusha
lods
cs
mov
arpl
or
pop
push
inc
gs
dec
cmpsb
adc
jb
adc
lods
leave
push
push
lret
sahf
repnz
push
dec
lock
mov
push
xor
inc
mov
jecxz
mov
test
push
notl
jl
cli
add
rorl
xlat
dec
xor
leave
push
xor
in
ret
push
and
inc
jmp
shll
push
mov
jno
mov
mov
add
les
mov
orb
xchg
pop
sub
sar
add
pop
repnz
nop
mov
push
nop
loopne
and
or
lcall
aaa
add
jne
test
push
call
sbb
push
lea
add
shll
cmp
push
cmp
push
or
xchg
pop
add
lods
pop
and
add
sbb
mov
test
test
xchg
or
sub
jo
fs
lea
xor
or
cmpsl
leave
cmpb
scas
stos
xchg
adc
mov
add
pop
fildl
sbb
adc
push
lock
adc
cmp
rclb
aas
ja
push
jg
sbb
inc
int3
mov
data16
inc
add
inc
int
push
les
or
xor
add
incl
mov
jne
andl
nop
inc
and
test
mov
push
adc
jnp
jp
adc
jne
push
or
stc
aam
or
sbb
jae
cmp
jbe
jb
pop
mov
xor
sbb
das
fs
xchg
insb
sbb
push
andl
cmp
mov
mov
add
sbb
jbe
push
sbb
pop
fwait
sub
sbb
icebp
push
or
ret
iret
add
pop
ret
inc
push
lds
les
jb
aas
jo
int3
mov
rclb
and
rclb
popf
add
cwtl
push
adc
add
enter
test
shll
repnz
and
dec
leave
mov
pop
lcall
push
xchg
push
adc
push
push
xchg
shrb
or
cmp
jae
or
cmp
adc
mov
cmp
add
mov
push
punpckldq
aam
leave
shrb
inc
or
jnp
mov
arpl
xchg
push
dec
stos
movsl
movsb
or
sbb
inc
add
cmpleps
aad
movsb
and
sub
inc
rorb
dec
add
test
shll
scas
add
jle
adc
rcrb
jecxz
dec
rcll
imul
pop
adc
push
mov
rolb
xor
stc
pop
jo
je
sub
fsub
sub
push
jo
push
add
add
xchg
xor
in
popa
adc
sbb
sub
adc
add
cmp
pusha
and
mov
push
inc
cmp
mov
les
test
ret
mov
mov
jns
and
xchg
cmp
adc
and
or
add
mov
sub
loopne
cld
push
pushl
and
and
jp
out
pop
sub
aad
cmp
hlt
jno
push
clc
test
cmp
jl
pop
and
mov
call
jp
icebp
aam
add
xchg
mov
add
or
push
xchg
adc
mov
dec
rorl
push
add
sbb
pop
lods
adc
fcmove
ret
or
pop
xchg
test
clc
and
pop
sbb
lea
pop
inc
js
cmp
shlb
sub
or
mov
push
test
and
sbb
pop
or
popf
mov
stos
jl
push
clc
shll
imul
xchg
ljmp
cld
cld
adc
call
clc
pop
jbe
insb
loopne
jg
in
inc
pop
add
sti
inc
and
fisttpl
jbe
sub
lea
sarl
loopne
mov
fwait
leave
ljmp
or
popf
outsl
jne
cltd
mov
je
icebp
adc
jbe
das
shll
xchg
cmc
leave
nop
sbb
sub
inc
repnz
jp
or
loope
pop
inc
sbbl
sbb
or
inc
xor
mov
xchg
xor
inc
push
inc
imul
push
inc
sti
jl
test
jg
cmp
add
mov
mov
xor
cltd
pop
mov
fwait
js
and
clc
push
and
in
jno
jecxz
jle
dec
add
jmp
or
movsb
shlb
push
imul
mov
jg
mov
mov
in
xor
push
cmpsb
jle
jb
mov
sbb
add
daa
adcl
mov
movsl
sub
xor
xchg
xchg
xchg
test
aam
lock
in
or
dec
xchg
mov
push
pushw
lret
lock
jecxz
or
mov
insl
xchg
movl
mov
cmc
or
inc
add
subl
imul
sub
mov
jns
add
xchg
jno
jne
out
adc
xor
push
bound
adc
subb
pop
add
movsl
icebp
and
push
mov
in
movsl
pop
pop
xchg
andb
sub
stos
add
movl
mov
and
jmp
sub
push
addl
xor
jp
jmp
ss
adc
popf
cmpb
or
insl
vdivss
loope
sbb
push
clc
test
popf
stc
test
and
popa
or
add
sub
adc
sbbl
pop
test
arpl
outsb
out
adc
lea
push
shlb
lods
inc
push
push
scas
push
ret
and
cli
add
jl
cmp
mov
push
jo
cli
daa
mov
xchg
fnsave
sbb
mov
fiadds
idivb
dec
sub
dec
jmp
adcb
sbb
in
mov
xor
xchg
xor
jge
mov
xor
cmp
xchg
and
push
push
pop
lea
lods
push
mov
rep
pop
adc
pop
or
mov
dec
sub
jmp
sub
jae
sub
shlb
add
mull
into
jae
sbb
andl
mov
and
jne
push
push
xchg
scas
mov
push
mov
cmpsb
xlat
push
hlt
push
sar
and
push
mov
mov
adc
xorl
rcrl
sub
mov
or
cmp
mov
xor
roll
jnp
push
inc
mov
adc
add
stos
mov
sbb
sub
and
jno
and
lock
adc
hlt
mov
mov
dec
pop
sbb
rolb
push
iret
test
fildll
inc
ret
or
das
pop
jae
sbb
mov
push
push
push
xor
adc
add
out
dec
pusha
int3
cmp
and
adcl
add
push
lret
dec
data16
lock
push
xor
or
dec
push
xchg
mov
je
push
sub
mov
test
xchg
test
adc
jno
decl
vorps
push
push
dec
sahf
shlb
xchg
push
in
xor
mov
mov
xlat
mov
adc
inc
les
fidivrl
add
loopne
add
mov
rolb
stos
cmp
sbb
sbb
pop
lock
and
sarb
dec
jne
lcall
mov
lea
mov
adc
push
loope
mov
adc
inc
loopne
and
and
push
gs
adc
outsb
push
ss
sbb
call
inc
push
test
adc
dec
nop
cmpsl
sub
xor
mov
dec
mov
add
adc
or
push
ror
and
inc
push
in
test
fistpl
icebp
or
ret
call
testb
and
or
add
push
dec
mov
cmpsl
push
and
movsl
jo
cmpsl
push
daa
addb
rcll
ret
push
or
cmp
fnstcw
inc
cmp
cmpb
lcall
jbe
add
dec
jl
lea
test
inc
mov
pop
hlt
sub
sar
xchg
inc
out
loope
repnz
add
rcrb
push
adc
add
cmp
dec
test
and
movsl
push
mov
sub
jecxz
dec
push
dec
xchg
es
imul
movb
xchg
adc
mov
loope
dec
imul
ret
sub
add
sahf
ja
lret
loopne
out
sub
xchg
and
mov
mov
ficomps
xchg
popf
sahf
or
xchg
int3
shrl
mov
jg
mov
cs
cmp
ret
adc
jecxz
and
rolb
add
ret
hlt
add
jl
les
adcb
ret
notb
je
cmpsb
sbb
jne
std
mov
add
xchg
lcall
push
mov
mov
jle
xor
jbe
adcb
test
or
pushf
sbb
js
test
jae
fwait
orb
add
push
cmp
add
xchg
xchg
xchg
adc
pop
mov
mov
aaa
aaa
test
inc
jmp
dec
ss
lock
in
push
mov
stc
jne
sub
mov
incb
pop
pusha
shr
data16
cmp
out
dec
shll
jb
jae
ror
mov
loopne
push
xchg
jmp
mov
mov
dec
hlt
jae
mov
dec
and
jg
push
rcl
xchg
add
in
adc
addl
xchg
jnp
push
dec
inc
sub
dec
inc
inc
inc
jl
jl
fists
inc
sub
jne
pop
jb
adc
adc
jp
jno
sub
dec
pop
mov
and
pop
inc
dec
xchg
cmpsb
cmp
pop
lods
add
xchg
jbe
jo
xchg
pop
dec
sti
inc
pop
xchg
xchg
cltd
mov
sub
mov
add
mov
lret
ret
adc
xchg
or
cmp
xchg
or
and
xchg
sbb
xchg
add
subl
jmp
mov
cmp
or
cmp
dec
cmp
nop
out
sarb
or
and
enter
and
or
mov
mov
and
adc
or
inc
add
sub
in
sbb
sahf
ja
sbb
mov
ja
cmp
jl
scas
pop
adc
arpl
and
adc
xor
add
xchg
loope
mov
push
fmull
test
mov
add
mov
stos
clc
cmpsl
jne
inc
xor
pop
cmp
adc
clc
cmp
sub
arpl
or
pop
dec
shlb
and
sbb
and
or
inc
adc
mov
xor
shr
push
dec
xchg
and
sbb
push
xor
lahf
and
sbbb
fadds
clc
sbb
jb
sbb
push
mov
sub
cmp
pop
cmp
cmp
test
inc
push
fsubrl
xchg
test
out
and
das
test
mov
cmpsb
lods
cmp
pop
pop
mov
xor
inc
sub
and
push
xor
or
xor
mov
mov
movsl
xor
lea
and
test
cmp
sbb
or
pusha
adc
pop
add
or
jl
mov
sbb
adc
int3
dec
outsl
sbb
xchg
sub
ds
pop
test
inc
push
push
mov
mov
mov
fs
xchg
xor
adc
mov
cmpsl
test
cli
jne
in
pop
push
or
mov
mov
in
mov
sbbl
movsl
ja
push
out
pop
push
dec
sub
xchg
aam
arpl
lock
cmp
pop
mov
insl
mov
int
mov
in
loop
aas
in
rol
fimuls
enter
repz
adc
xor
loopne
in
cmp
push
mov
pop
push
push
mov
xchg
sbbb
jo
pop
add
icebp
jae
inc
and
hlt
mov
pop
mov
add
hlt
push
mov
dec
loope
nop
or
mov
inc
mov
push
pop
xor
xchg
and
mov
sbb
xor
pop
in
insb
cs
push
add
fcmovu
pushf
dec
pop
lock
push
xor
add
adc
js
scas
inc
call
cmp
cmp
jbe
jno
addr16
cmp
xchg
lea
xor
lock
bndldx
push
jno
rcrb
loope
inc
pop
pushf
cltd
pop
or
adc
xchg
sub
arpl
or
cmp
jo
mov
xor
or
lahf
inc
lcall
cmp
add
or
aas
lcall
or
mov
sbbb
bound
popf
in
mov
insb
sbb
ja
cmp
sbb
jl
xor
mov
dec
sub
pop
jb
pop
jns
xchg
mov
push
loopne
pushl
sbb
ja
xor
cmp
insb
test
or
jmp
mov
pop
sbb
rclb
enter
lahf
andb
outsb
sub
pop
adc
inc
or
repz
pop
xorl
test
add
pop
sbb
imul
aas
aam
pop
xchg
fmul
add
sub
subb
in
mov
sub
das
add
insb
mov
add
pop
lock
je
mov
lock
dec
sbb
xchg
jl
andb
or
es
das
xor
sub
int
add
nop
mov
or
push
shl
xchg
outsb
sub
pop
or
xchg
push
pop
sbb
mov
popa
xor
pusha
nop
aam
popf
add
or
cmp
movsb
iret
nop
cmc
call
js
dec
and
jno
mov
inc
lcall
jl
call
add
shll
mov
pop
in
push
mov
push
jae
sbb
mov
cmp
add
ffree
mov
push
lahf
lret
out
mov
or
fadds
or
or
inc
xchg
sbb
ret
ja
sub
push
mov
fdivr
aam
add
pop
adc
fcomps
movsl
jbe
fs
dec
add
stc
fucomi
jl
mov
push
sub
and
push
add
push
ljmp
mov
inc
jb
or
sti
sbb
jl
mov
adc
adc
ficoms
jg
dec
dec
adc
adc
lock
lahf
mov
xor
push
inc
xchg
mov
out
mov
inc
add
sbb
into
cmp
adc
gs
push
aam
js
ja
cmpsb
mov
cmp
call
test
push
ret
int
rcrb
mov
rcrb
add
loope
scas
shlb
pop
js
lock
test
rorb
in
xchg
lahf
pop
daa
and
and
ret
add
xchg
std
js
in
pop
push
push
or
adc
or
fstpl
adc
cmpsl
orl
rolb
ds
inc
or
dec
gs
je
pusha
and
cwtl
add
jb
push
and
pop
push
cltd
addb
push
es
into
xor
dec
call
dec
jb
popa
push
ss
inc
fs
fldcw
and
shl
push
push
lds
fwait
mov
xor
loope
es
push
mov
lods
and
dec
stos
aam
add
adc
lcall
and
push
fldenv
sahf
push
test
xchg
mov
pushl
jo
mov
xor
fs
or
push
in
mov
or
insl
jp
fs
addl
shll
inc
push
shll
xor
movsb
pop
dec
xchg
dec
ret
jmp
stc
xor
cmp
repnz
movsl
aam
test
lcall
shlb
mov
xchg
test
push
push
lea
push
mov
inc
ret
sbb
pop
ja
mov
test
gs
push
sbb
stos
jb
cltd
add
popa
int3
sub
daa
test
mov
lock
repnz
aam
es
test
sub
dec
jb
dec
stos
aam
add
orb
enter
and
push
out
arpl
out
push
arpl
loope
add
push
cmpsb
aam
mov
and
jbe
call
sti
pop
enter
mov
mov
dec
faddl
test
add
fisttpl
ja
xchg
call
dec
loopne
cmp
jbe
jne
xchg
pop
jbe
pop
push
pop
mov
outsl
mov
pop
add
inc
mov
xor
outsl
inc
push
add
rorl
pop
mov
xchg
movb
xor
jp
das
and
movsb
adc
mov
push
cmpsl
add
xchg
jmp
add
addr16
mov
sub
das
or
enter
xor
inc
cmp
push
xchg
or
or
lahf
pop
xor
adc
lds
fbld
les
int3
popf
push
test
push
push
test
or
xchg
rorb
push
sbb
adc
dec
in
cmpsb
mov
or
mov
sbb
mov
sbb
js
cld
scas
loopne
dec
lods
jnp
adc
fs
pushf
test
mov
test
les
repz
pop
test
adc
jnp
dec
xlat
cmpsb
mov
or
ss
add
and
sarb
push
or
xchg
adc
push
or
push
cmpb
movsl
add
inc
or
test
cmp
jp
cltd
add
pop
enter
push
pop
test
lock
cltd
inc
add
and
inc
fwait
mov
cmp
push
fs
cmc
enter
lock
dec
mov
add
or
out
push
lock
push
add
dec
pop
inc
shll
insl
pushf
sbb
xlat
sbb
mov
mov
adc
enter
fistl
pop
pop
cmpl
stos
mov
nop
mov
add
rolb
hlt
dec
or
in
pop
fwait
dec
or
adc
movsb
shlb
int3
scas
incb
pop
xor
xchg
fwait
ljmp
push
push
inc
mov
push
sub
les
sarb
jno
xchg
stos
mov
adc
xchg
push
push
fsubrs
lea
cmp
mov
jo
rcrb
in
jo
mov
ljmp
push
aaa
fimuls
sbb
xchg
movsb
fsubr
adc
mov
lock
ss
adc
push
adc
pop
rolb
popa
addr16
push
push
xor
inc
pop
fldl
hlt
inc
or
push
push
sahf
push
or
lods
leave
xchg
mov
jnp
shlb
xor
shr
or
cmp
pop
add
add
cltd
add
inc
insb
adc
fiadds
or
pop
sub
mov
sub
mov
jle
das
jmp
sbb
popa
sti
cmp
sbb
jge
les
hlt
pop
sub
inc
push
mov
mov
jno
pop
xchg
cwtl
pushf
test
mov
test
pusha
cld
in
lods
push
lds
mov
pop
mov
mov
adc
fmul
shlb
pusha
js
mov
mov
enter
loope
cld
xor
mov
inc
nop
cmpsl
xlat
mov
jbe
jp
movsb
rcrb
mov
int
dec
cmp
test
inc
and
movsb
lods
jmp
imul
lcall
mov
and
ds
movsb
sahf
mov
mov
dec
xor
rolb
jle
aaa
adc
cmp
or
add
push
mov
or
mov
sbb
jl
sub
mov
xchg
pusha
push
movsl
mov
ljmp
scas
outsl
push
push
ss
push
pop
mov
jg
adc
mov
dec
add
movsb
adc
sbb
mov
pushf
flds
cmp
and
mov
mov
sti
pop
xchg
or
sbb
inc
std
fnstsw
mov
hlt
mov
adc
push
adc
outsl
adc
sbb
mov
xchg
jo
xchg
adc
and
sahf
mov
dec
in
cmp
cmpsb
out
jmp
cld
test
mov
cmp
pop
pop
sbb
mov
lock
mov
inc
xorl
lods
popa
sbb
stos
pusha
add
insl
int
mov
cmpl
push
ds
adcb
outsl
xlat
push
push
xor
repz
mov
pop
cmp
pop
mov
je
js
mov
mov
xchg
or
addr16
push
movsl
sub
loopne
or
inc
mov
pop
jle
or
scas
mov
loop
jb
andl
jl
icebp
push
sbb
ds
sbb
xlat
lods
cmp
add
or
cmp
cmc
mov
sub
clc
sarb
repnz
push
sbb
sub
inc
adc
push
insb
mov
lret
push
cmpsb
jp
inc
xchg
jne
ljmp
mov
imul
dec
out
mov
test
daa
call
mov
dec
pusha
adc
test
jg
sub
sbb
mov
gs
mov
inc
inc
ror
and
push
jl
outsb
cwtl
xchg
insb
vandnpd
dec
cmp
imul
add
mov
lock
sbb
pop
pushf
cmpsb
xchg
cmpb
xor
sub
dec
inc
in
repz
loopne
lea
xor
xchg
push
add
stos
fs
fsubr
and
sub
mov
push
cmpsb
jne
xchg
inc
mov
push
les
and
adc
inc
adc
and
pushf
sti
adc
ja
into
stos
push
push
popa
jp
sbb
jle
push
pop
xor
pop
hlt
add
sub
lock
cmp
aam
mov
push
shlb
push
xchg
cmp
cmpb
movsb
push
adc
mov
adc
push
pcmpeqw
cmpl
sub
mov
insl
or
mov
adc
jae
sbb
jbe
push
xor
sti
lea
sbb
movsb
sbb
cmpsl
and
cmpsb
or
and
aam
inc
lea
push
lahf
mov
in
dec
pop
ret
bound
jmp
pop
pop
sub
daa
jmp
push
lahf
call
dec
and
mov
imul
fcos
rcll
js
lret
push
ret
pop
sub
push
in
fwait
or
lea
and
inc
movhps
fdiv
cmpb
fsubrs
or
popa
push
mov
sti
cmp
sub
xor
and
xchg
js
pusha
loop
fdivl
inc
lods
adc
push
arpl
call
test
jg
cwtl
sub
add
or
cwtl
not
add
add
pop
push
fsubrl
inc
je
mov
adc
loopne
mov
mov
dec
add
in
fwait
mov
add
xor
mov
mov
or
push
push
sub
das
loopne
lock
popf
sbb
adc
mov
fdivs
repnz
dec
mov
push
mov
jns
fists
adc
mov
sbb
lds
mov
and
mov
popf
sub
loop
rcll
mov
xor
jge
ss
mov
inc
imul
subl
dec
cmp
outsb
adc
stc
xor
js
dec
mov
arpl
pop
sbb
cmpsb
or
push
xchg
cmp
jg
push
or
hlt
mov
add
inc
lods
lods
lock
push
and
sub
clc
cmp
pop
std
xorl
outsb
jp
je
jp
cmp
je
data16
mov
jmp
fmull
mov
ja
inc
ret
jg
push
add
outsb
adc
lret
jbe
or
insl
outsb
add
push
jge
push
shrb
sbb
xchg
push
out
lock
jp
outsb
in
add
and
pop
fstpl
sbb
and
dec
xchg
inc
cmp
mov
adc
jmp
or
jge
cmpsb
dec
xchg
fdivrl
cmp
fsubs
sbb
sbb
in
inc
mov
inc
inc
jmp
inc
jo
je
in
add
addr16
and
adc
lock
fcmove
adc
sahf
add
add
movsl
push
or
les
sub
mov
adc
sbb
repz
lret
jmp
pop
cmpsb
inc
sbb
cwtl
adc
call
mov
fwait
lret
roll
adc
adc
add
in
mov
sub
shr
adc
sub
sbb
or
incb
pop
mov
inc
rcrb
pushf
mov
fcoml
scas
add
dec
and
pop
xlat
out
and
incb
push
sbb
cmp
mov
xchg
les
mov
sub
cmp
push
jns
fmuls
jl
pop
or
cmpb
inc
movsb
xor
orl
mov
stos
add
lret
in
jns
cmp
cmpb
adc
push
mov
loope
clc
in
and
testb
push
fisubl
inc
sbb
repz
cmp
and
adc
mov
xor
cmp
xchg
push
jle
in
or
popa
sbb
or
mov
xchg
lret
or
jmp
shlb
dec
push
adc
xor
push
divl
and
xor
jo
xchg
sbb
push
into
scas
rclb
je
dec
add
std
mov
cmp
add
sbb
cltd
xchg
ds
in
adc
cmp
lea
mov
test
add
out
pop
jno
test
mov
negl
xor
lcall
and
pop
adc
sub
outsl
push
subb
sbb
adc
cmpsb
shl
push
cmc
flds
jno
dec
xorl
inc
iret
pusha
and
test
and
cwtl
scas
loope
add
add
jle
inc
xchg
insb
mov
ret
jg
mov
std
hlt
mov
cmp
push
roll
push
adc
add
jo
fwait
in
and
enter
xchg
add
add
xchg
stos
inc
scas
and
add
push
cmpsl
inc
aas
mov
test
and
inc
test
add
or
inc
insb
popa
jl
dec
lds
into
dec
cmc
and
test
stos
dec
outsb
and
rclb
imul
je
mov
insb
call
pop
xlat
ss
jno
inc
inc
adc
je
das
sbb
cmp
sbb
pop
cmp
fstpl
sub
push
or
sub
xor
std
and
inc
push
stos
push
add
cmp
jo
test
push
pop
test
inc
sbb
mov
dec
pop
add
inc
dec
cmp
mov
xchg
mov
out
push
xor
push
call
push
in
cmp
imul
loope
push
lea
dec
mov
add
or
xchg
xor
jle
add
int3
inc
cmc
mov
call
pop
inc
or
sbb
dec
notl
daa
mov
testl
mov
jl
sub
das
adc
outsb
movsl
add
ret
pop
cli
mov
mov
xor
loop
add
shr
scas
add
js
xchg
fcom
sbb
adc
testl
clc
fcomi
out
mov
ret
shr
cmp
jbe
add
jmp
add
jae
xor
pop
rolb
ret
and
dec
loop
inc
dec
addl
mov
mov
or
mov
lds
dec
adc
inc
sub
aam
lcall
dec
mov
jnp
punpckhbw
sub
jo
scas
sub
xor
mov
sub
mov
outsb
mov
mov
mull
mov
add
xchg
test
and
inc
daa
mov
scas
inc
and
inc
imul
mov
aaa
fwait
ret
aas
cmp
or
ja
rcrb
mov
jl
dec
fsubrs
shlb
enter
sub
add
or
xor
or
jmp
mov
fdiv
xor
popf
push
or
pop
arpl
xor
jb
push
nop
mov
xor
pop
inc
lret
out
mov
aad
loopne
push
xchg
add
outsb
sub
sarb
mov
fisubs
xor
adc
jns
or
shrb
andl
lds
xchg
scas
cmpb
inc
insl
pop
in
inc
sbb
ficompl
xor
adc
mov
and
mov
insb
ret
mov
mov
shrb
push
inc
adc
inc
call
inc
inc
scas
xchg
push
or
push
sbb
nop
xchg
cmp
les
repnz
in
add
cmp
pop
mov
popl
mov
lahf
call
repz
or
enter
xor
sub
inc
imul
rol
mov
lock
sub
push
push
add
iret
xchg
cmpb
xor
or
xchg
pop
or
jmp
insl
add
adc
dec
jne
push
inc
add
sbb
add
push
inc
mov
aam
mov
or
jecxz
movsb
scas
jns
dec
pop
cs
ss
test
sbb
in
push
icebp
dec
sub
xor
sbb
push
ucomiss
push
or
mov
mov
shlb
and
adc
adc
fwait
adc
shl
adc
mov
lods
mov
xor
ss
stos
mov
adc
and
test
enter
repz
pop
loop
jns
fcoms
mov
flds
push
jnp
in
push
mov
pop
adc
xchg
ds
and
pushf
mov
and
insb
pop
push
lock
lods
adc
les
pushl
push
xchg
iret
xchg
add
mov
mov
fistpll
fadds
or
or
mov
adc
fsubrs
aam
push
mov
xchg
ret
icebp
xor
jmp
aaa
pop
and
dec
xchg
scas
jb
roll
enter
xor
xchg
jne
mov
ja
jl
lds
movsl
and
jl
add
mov
fisttps
sub
and
sub
xor
sub
clc
hlt
xor
push
pop
push
mov
adc
stos
testl
pop
insb
mov
adc
es
popa
lret
or
fstl
push
xor
loop
or
pusha
cmp
je
push
addr16
sub
inc
push
dec
das
mov
or
adc
int3
inc
ret
pop
inc
or
sbb
movsl
fabs
or
push
mov
mov
in
or
add
xchg
dec
xor
aaa
and
jns
pop
xchg
jecxz
scas
or
mov
loopne
cmc
andl
lea
stos
mov
mov
push
sti
push
add
or
jg
ljmp
int
push
mov
cmp
jne,pn
inc
and
ljmp
sub
ret
lret
push
add
and
jmp
jge
and
rolb
and
orb
xchg
sub
mov
pushf
xor
cmp
mov
sarl
rcrl
testl
mov
dec
lock
inc
push
loopne
jo
mov
inc
and
mov
xchg
inc
xor
sub
add
xchg
leave
or
jo
cmp
add
cli
push
sub
repnz
jp
sbb
xor
rorl
loopne
add
mov
jo
loop
sbb
inc
movsl
pop
mov
xor
pusha
fs
xchg
test
arpl
push
lcall
sbb
stos
push
dec
inc
imul
ret
imul
jae
or
jecxz
cmp
loopne,pn
mov
mov
xchg
pop
cmp
imul
sbb
and
mov
in
mov
clc
mov
push
cmpb
jmp
mov
scas
nop
xchg
push
cmp
push
into
pushf
leave
les
sub
jbe
push
adc
adc
es
loop
stos
jne
xchg
pop
or
sub
lea
add
add
xor
pop
je
inc
outsl
out
loopne
add
mov
cmp
pop
cmpps
out
xchg
lahf
mov
les
lret
inc
repz
mov
movsb
xchg
testl
loopne
inc
fstpt
cmp
jl
or
cwtl
shll
rep
mov
dec
push
addb
adc
les
pop
or
aam
inc
mov
lret
inc
mov
enter
sti
push
jl
push
xchg
mov
sbb
arpl
jl
pop
jnp
adc
aaa
loopne
inc
dec
adc
pusha
rcll
cmpl
hlt
jle
push
pop
sub
push
insl
lahf
aaa
push
jne
in
loope
xor
push
dec
jbe
popa
xlat
cmp
push
mov
sti
sbb
jmp
ljmp
pop
jb
popa
pop
cmp
add
leave
lret
and
sbb
and
aaa
xor
xchg
dec
pop
jmp
push
fmull
dec
adc
sbb
sub
loope
les
mov
dec
dec
cmp
inc
js
dec
test
xor
in
insl
mov
mov
pop
mov
cltd
repnz
lret
push
cmp
hlt
xor
and
add
mov
shll
mov
sbb
arpl
inc
or
nop
inc
mov
add
and
and
pop
mov
push
stos
dec
lea
add
test
dec
popa
or
add
repnz
adc
incl
or
mov
fs
mov
or
adc
test
mov
enter
in
stc
mov
xor
sti
aam
push
dec
nop
incb
in
movsb
pushf
lods
mov
int3
mov
repnz
in
cld
rclb
sub
inc
xor
fmull
xorb
mov
je
loope
mov
mov
jl
mov
popa
stos
xchg
outsb
mov
cs
mov
pop
mov
add
lcall
mov
dec
aad
into
sbb
mov
xor
aaa
rcll
mov
roll
add
xor
mov
sbb
mov
dec
into
push
mov
xchg
jl
xchg
dec
enter
in
jl
popf
add
fs
js
adc
adc
movsb
and
xchg
psubq
add
lahf
mov
mov
push
call
push
jae
fwait
xor
sbb
stos
jo
test
inc
inc
push
jge
mov
add
lcall
cmp
je
sbb
and
inc
cld
lahf
cmp
jne
push
mov
aad
lock
outsb
dec
pushl
scas
loopne
fsubr
sub
push
jns
out
xor
outsl
into
inc
lods
mov
push
and
loopne
add
jmp
xor
push
or
movsl
sbb
nop
sub
add
or
fistl
jl
jno
sarl
aaa
shll
sbb
add
push
xchg
fwait
cs
mov
or
xor
adc
xchg
xor
std
push
mov
hlt
loopne
xor
or
sub
and
mov
mov
push
push
adc
mov
lret
addb
dec
inc
shlb
jne
and
es
fadds
in
sub
sbb
push
sbb
clc
loopne
and
jge
jbe
imul
js
mov
mov
test
decb
imul
or
gs
dec
inc
in
push
push
cmc
test
outsl
xlat
mov
rolb
fsubrl
daa
xor
push
test
jmp
or
rclb
in
fstpt
pop
icebp
mov
and
add
push
in
pop
rcr
mov
push
pop
sub
or
lods
je
mov
pop
and
sub
out
lds
push
jno
mov
and
push
pop
mov
jno
divw
mov
iret
xlat
call
vunpckhps
or
mov
xlat
inc
shll
xchg
xchg
sbb
gs
add
sub
push
scas
mov
stos
lock
mov
scas
cmp
in
fildll
adc
xchg
jmp
pop
xor
jno
ds
mov
ja
sbb
cli
je
cltd
pop
add
sbb
lret
data16
stos
pop
add
cmpsl
mov
in
add
leave
xor
sub
les
add
and
xor
mov
pop
loop
xchg
leave
jne
mov
adc
cmc
ljmp
rolb
ss
adc
mov
push
push
adc
or
cmpsb
mov
or
push
lcall
xchg
adc
call
dec
mov
xchg
push
push
pop
or
jo
sub
repz
jo
outsl
mov
pop
cmp
pop
std
sbb
mov
jne
mov
jmp
fldl
xchg
cli
insb
adc
aam
xlat
or
mov
jl
inc
packssdw
icebp
lock
pop
xor
mov
jecxz
sbb
fnstsw
dec
rcrb
movsl
push
push
movsl
jge
sarb
inc
hlt
fstl
dec
fcomp
fnstsw
call
and
inc
clc
pop
fsubr
pop
faddp
andl
enter
sbb
sub
test
fdivrl
cs
dec
aam
mov
mov
and
mov
xchg
lods
add
push
into
sbb
or
andb
xor
add
add
lods
or
and
hlt
jge
xor
out
fdivrs
add
scas
stos
dec
fstpl
inc
add
jmp
mov
leave
lea
push
or
adc
adc
pop
dec
xchg
add
into
push
xchg
and
pop
scas
pop
movsl
bndldx
mov
xchg
push
sub
cwtl
out
stos
ss
mov
stos
cmp
mov
int3
dec
jecxz
rorb
jae
push
add
add
fnsave
pop
in
sub
mov
push
inc
inc
inc
cmp
ud0
ret
jmp
mov
cmp
jge
add
or
xchg
mov
dec
leave
mov
and
jmp
roll
sub
in
jmp
or
inc
fldenv
add
adc
rorb
pushf
push
lods
push
pop
test
xor
sub
jg
jne
pop
push
sub
jne
push
push
adc
or
imul
xchg
mov
ret
or
imul
inc
add
xchg
dec
inc
cmpsb
sbb
xchg
jns
mov
push
adc
push
mov
ret
or
outsb
mov
insl
jp
adc
or
in
mov
mov
bound
adc
shl
jmp
jb
jmp
adc
js
push
cmp
pusha
hlt
stc
adc
ja
mov
and
pop
aam
insl
repz
ret
inc
sbb
ret
pop
les
decl
inc
adc
sub
mov
push
xchg
xchg
int
hlt
clc
mov
pop
lcall
xor
add
sbb
repnz
dec
cs
jae
cmpsl
sub
push
add
mov
xor
adc
imul
inc
cltd
or
push
in
pop
push
mov
shlb
jle
cmpsb
xchg
sub
test
and
or
dec
sub
xchg
sub
scas
dec
out
ret
adc
dec
pop
stos
xor
insl
mov
xor
fadds
rolb
push
shlb
mov
inc
sahf
or
clc
inc
loopne
jo
insb
add
xchg
je
xor
mov
adc
outsb
push
mov
clc
jo
mov
inc
add
rolb
lds
add
mov
cmp
pop
mov
xor
ret
das
pop
push
or
add
cmp
sub
sub
bound
bound
push
or
jmp
inc
pop
inc
add
mov
add
push
dec
sub
jmp
or
sub
push
pop
loop
mov
aas
pushf
sbb
adc
push
lea
push
xchg
sbb
clc
jae
or
shl
lret
add
cmp
and
lock
rcll
jl
clc
mov
pop
pop
mov
gs
add
test
lahf
inc
push
sub
jns
jae
push
mov
mov
inc
mov
lock
mov
add
and
out
enter
jb
in
or
pusha
sbb
and
sub
cmp
inc
jmp
push
cltd
push
in
dec
jo
sbb
mov
jb
out
push
clc
mov
es
mov
mov
inc
xchg
lods
sti
adcl
mov
adc
add
push
cmp
push
dec
rorb
out
out
sahf
fwait
xor
sbb
add
sub
mov
outsl
fisubs
mov
imul
test
xchg
push
sahf
rclb
add
incl
rcr
orb
mov
fidivl
mov
or
lcall
dec
add
dec
adc
lods
add
inc
js
mov
sbb
mov
imul
dec
jmp
cmp
mov
push
cmp
arpl
dec
xor
popa
js
sbb
sub
lods
fsubl
sub
in
cmp
sub
pop
or
mov
xchg
adc
rclb
or
mov
mov
pop
lods
push
push
icebp
test
mov
and
test
and
fwait
jp
xchg
sti
call
mov
lret
ja
insl
movb
and
mov
dec
add
jmp
cmpl
mov
lcall
int3
mov
xor
xor
adc
inc
xor
fisttpl
and
jae
testb
fiadds
xlat
jmp
push
and
shll
mov
mov
sbb
adc
ret
dec
test
popa
mov
out
je
loopne
enter
adc
dec
and
or
inc
sbb
push
inc
and
or
ljmp
cmp
call
mov
cmp
iret
dec
add
insb
sub
mov
shlb
mov
stc
inc
push
inc
in
inc
mov
or
cmp
inc
loope
add
or
dec
jmp
mov
xchg
xor
push
test
cmp
pop
push
xchg
push
in
lock
cmp
push
inc
push
xor
xor
xor
jne
loopne
push
and
into
lock
sub
clc
test
jmp
push
jbe
ret
lods
inc
rol
dec
adc
pop
and
pushf
inc
dec
lea
and
cmp
mov
leave
inc
mov
inc
sahf
xchg
js
outsl
add
lret
repz
stc
xor
jmp
and
xchg
adc
mov
rcrb
into
or
imul
les
inc
je
fistps
out
aam
into
dec
imul
enter
push
adc
xchg
push
fldt
test
test
ljmp
xchg
sbb
in
pop
pop
add
mov
sbb
test
js
jbe
push
push
push
push
mov
add
add
mov
andb
pop
icebp
loopne
test
jne
lcall
pushf
popa
add
xchg
fisubs
jb
enter
xor
test
pop
repnz
add
xchg
fbld
sar
test
roll
mov
outsb
or
cmp
fwait
inc
push
popf
jmp
xchg
ret
es
insb
jb
sub
pop
clc
jl
jno
push
xchg
sbb
addr16
cmpsb
rcrb
loopne
pusha
pop
lcall
sbbb
loopne
inc
add
sbb
push
jns
les
add
jb
or
or
testl
sti
sbb
ljmp
sub
lcall
rclb
mov
dec
aaa
rorb
push
ret
jl
inc
cmpsl
cmpsl
addb
push
and
test
sar
mov
imul
push
data16
pop
mov
in
jmp
push
sub
stc
cmc
out
movsl
pushf
mov
mov
push
adc
inc
dec
sub
es
ret
push
jg
int3
cmp
jg
push
jp
ret
cmp
adcb
outsb
ret
jmp
xor
push
push
push
add
push
hlt
jge
inc
add
add
mov
test
dec
imul
lret
add
pop
pop
imul
or
xchg
mov
mov
in
cwtl
popa
out
aam
sub
mov
or
subb
adc
dec
shrl
lahf
roll
push
popa
scas
paddsb
fld
pop
mov
inc
add
out
adc
push
pop
repz
jmp
inc
add
or
lods
roll
mov
scas
jecxz
add
out
call
dec
add
ret
fcom
aas
in
leave
push
int3
sub
or
sbb
xchg
mov
cmpsl
push
clc
imul
sarl
inc
and
bound
lret
stos
jmp
push
mov
pop
testb
es
sbb
aad
sub
sub
lahf
andb
pop
and
cli
pop
and
sbb
loopne
dec
je
sub
addl
sub
push
sbb
mov
mov
es
adc
adc
add
xor
xor
push
xchg
pop
add
xchg
push
sbb
pop
jne
aaa
scas
push
sub
cltd
jno
nop
and
xor
pop
ret
add
dec
sub
add
les
stos
aad
push
push
arpl
jo
outsb
enter
and
mov
fisubl
adc
fistpll
mov
xchg
push
insl
sub
pop
inc
jmp
adc
data16
fistpl
and
jl
ds
clc
rol
ret
xchg
mov
dec
mov
mov
push
fistpl
insb
dec
std
jg
and
inc
sbb
negb
jge
loop
data16
adc
jnp
jmp
lock
and
push
dec
xor
xor
jne
clc
lea
mov
and
jnp
inc
and
sub
push
xor
add
cmp
add
in
sub
cmp
inc
sbb
dec
push
pop
pop
mov
aam
sub
xor
adc
outsl
out
pop
sbb
iret
inc
loop
xchg
jne
cmp
or
andl
push
gs
sub
js
xor
add
pusha
enter
inc
xor
cmp
or
std
movsb
ret
sbb
ret
and
inc
insl
pusha
dec
pusha
mov
adc
stos
aad
dec
inc
mov
data16
jne
leave
and
outsl
add
aas
push
in
adc
adc
push
xor
addl
mov
or
out
loop
sub
mov
xchg
les
outsb
jp
push
push
int
xor
ja
cmp
in
cli
std
sub
push
push
mov
cmp
repnz
or
mov
jb
push
sbb
in
sbb
cs
or
sub
nop
add
or
dec
ljmp
add
sub
sahf
dec
pop
sbb
addb
filds
jmp
dec
jbe
pop
out
xor
jbe
cmpsb
xor
xlat
sub
test
loop
imul
dec
jae
ds
aaa
adc
mov
inc
xorl
jle
and
xor
sar
add
cmp
ja
pop
adc
mov
inc
adc
push
xchg
dec
aam
clc
push
push
iret
stc
inc
jp
fcompl
fadds
push
nop
push
push
inc
les
pop
mov
movsb
add
nop
sub
add
jbe
push
xor
mov
jmp
int
sbb
xor
sub
cmpsl
adc
inc
mov
inc
xor
cltd
sbb
dec
add
rolb
jecxz
ret
cltd
and
pusha
lea
mov
xchg
notb
popa
or
je
sub
lcall
push
ds
and
push
ret
pop
jl
xor
lret
into
xchg
add
fadds
pushf
hlt
pop
cmp
pop
fidivs
sbb
sub
dec
push
cmpb
es
loopne
push
punpckhdq
jl
shrl
xlat
and
and
enter
dec
stc
mov
sbb
sbb
imull
pop
je
push
mov
cmp
adc
cmpsb
inc
cmp
or
or
imul
mov
loop
mov
inc
and
jo
mov
jns
pop
sbb
repnz
push
jmp
push
sbb
je
and
dec
cmp
int
stos
xor
xorl
mov
mov
stos
les
dec
xor
pop
insb
push
jge
lret
xor
dec
push
jno
lea
rcrl
sub
jne
cs
test
xchg
sahf
add
add
add
adc
dec
bound
mov
mov
sbb
pop
mov
xor
or
stc
xlat
push
decb
adc
or
sbb
or
outsl
nop
xor
dec
js
add
fwait
pop
push
ss
add
push
adcb
xchg
cld
adc
cld
adc
je
push
daa
fiaddl
fs
stos
or
lock
test
mov
and
add
aad
fstps
push
mov
adc
movsl
dec
test
push
mov
rcll
rclb
or
adc
xchg
add
push
sbb
pusha
mov
and
or
je
in
rorl
aas
aad
xchg
dec
inc
aam
fwait
mov
stc
mov
adc
mov
pop
pop
jp
sti
adc
in
leave
xor
das
cmpl
popa
xchg
out
and
mov
push
or
ja
add
xor
insl
popa
and
stos
jae
sbb
in
mov
hlt
pusha
jge
dec
inc
adc
push
data16
adc
jb
enter
fstpl
jge
pop
adc
popa
xor
or
push
xor
push
cmp
mov
ret
mov
data16
aas
jne
aam
mov
jmp
add
aam
add
movsl
lcall
scas
or
cmp
mov
out
add
and
inc
push
arpl
dec
arpl
loopne
add
pop
arpl
xor
fwait
mov
push
loop
push
pop
fdiv
je
adc
jbe
cmp
out
add
sub
ss
adc
out
leave
jne
push
jmp
cmp
xchg
mov
xchg
mov
push
rol
mull
add
mov
pop
xchg
push
dec
inc
push
xor
or
mov
and
cld
add
das
xor
les
repnz
push
cmpsb
fnstcw
adc
xchg
stos
mov
adc
sbb
cmpsb
dec
test
mov
test
enter
mov
mov
push
les
mov
inc
cmp
or
add
test
or
pusha
addb
in
inc
xor
decl
aaa
fisubrl
in
xor
test
imul
mov
out
mov
fxch
adc
addb
xor
mov
mov
mov
jo
pop
push
subb
hlt
jecxz
or
pop
push
xor
jp
scas
dec
sub
or
adc
jmp
imul
cmp
enter
or
cmp
mov
or
lahf
jmp
pop
xchg
xchg
dec
pushf
cltd
xor
movsb
dec
icebp
outsl
dec
ret
or
sti
ss
add
outsb
adcl
push
dec
idiv
stos
movl
dec
and
and
rol
pop
add
dec
arpl
inc
stos
movsb
fstl
add
xchg
or
pop
inc
fwait
leave
aas
mov
shll
mov
mov
data16
loope
mov
xor
pop
mov
dec
and
shll
adc
loop
sbb
adc
loope
push
in
aaa
xlat
ret
xor
push
cwtl
xchg
xor
jo
fisttps
inc
push
imul
sub
pop
add
pushf
inc
add
sub
mov
xchg
jmp
jecxz
test
pop
push
das
test
lock
xchg
and
adc
sub
and
xchg
mov
in
or
lock
data16
mov
addr16
arpl
push
mov
jbe
fdivrs
add
sub
pop
add
outsb
inc
mov
xchg
ret
dec
xchg
fldl2t
adc
je
pop
leave
push
adc
jecxz
imul
fadds
add
push
or
jl
mov
push
pop
fwait
dec
and
into
enter
adc
push
xor
add
nop
or
jns
xor
test
adc
or
mov
dec
or
push
loop
idivb
cmpl
popf
shrb
ficoml
cs
imul
jl
adc
icebp
imul
add
je
sarb
xchg
xor
lahf
sub
pop
repz
jo
and
fs
sub
fsubrs
ds
icebp
adc
and
pushf
sti
dec
icebp
icebp
imul
mov
imul
adc
dec
hlt
jl
push
push
push
jg
push
inc
dec
add
xchg
cmp
loopne
cmp
shll
xor
hlt
stos
cli
push
mov
daa
test
pop
rcrl
and
sub
loopne
and
lahf
sub
stos
xchg
cltd
add
icebp
mov
out
rcl
rcrl
jecxz
shrb
or
xor
icebp
jno
mov
nop
mov
pop
or
cmp
fldl
mov
or
or
jecxz
pop
gs
loope
inc
inc
dec
add
dec
push
sub
inc
pop
inc
mov
and
je
cwtl
sub
sub
in
jno
mov
xchg
movsl
fs
into
idivb
nop
push
push
pop
movsb
xor
js
test
cwtl
lds
add
adc
nop
pop
loopne
aad
mov
inc
sbb
inc
or
popf
idiv
xchg
xchg
in
push
adc
test
shl
push
cli
fimuls
sub
push
and
cwtl
pop
jp
mov
jbe
jne
test
shlb
pop
mov
movsb
sbbl
popf
add
pop
xor
adc
enter
add
mov
lahf
fadds
repz
push
bound
xchg
cs
in
or
jecxz
lea
fadds
jmp
cmpsb
mov
fldl
dec
push
sub
add
and
scas
fs
add
add
add
push
push
or
xor
push
enter
push
repnz
push
adc
dec
fsubs
mov
test
or
jae
lret
dec
add
scas
mov
rclb
push
push
out
testb
push
push
push
xor
or
rcll
bound
cs
sub
sub
mov
adc
or
fisubrs
inc
dec
stos
dec
or
sahf
or
sbb
roll
push
push
dec
push
cli
ss
add
or
sub
cmp
push
mov
push
cmpsb
adc
arpl
push
stos
loopne
and
adc
sbb
push
sub
sbb
cld
add
jae
add
dec
std
adc
fs
jb
adc
lea
or
mov
add
je
adc
rcr
ret
in
push
mov
rcrl
inc
push
inc
or
aad
pop
adc
lock
pop
enter
adc
cmp
and
clc
lods
fsts
pop
outsb
jne
shld
xchg
in
mov
and
hlt
mov
push
sbb
add
shlb
in
dec
addb
sbb
lods
aad
jnp
and
pop
out
xor
adc
in
push
adc
in
nop
jno
xchg
dec
sbb
xlat
mulps
or
push
jae
mov
out
add
jmp
push
add
and
cmp
sub
inc
movsb
stos
cmp
dec
lock
jo
sub
add
and
cltd
jbe
mov
loope
jmp
in
push
lea
and
mov
mov
or
inc
dec
in
inc
add
pop
and
jmp
mov
rolb
push
push
adc
adc
loop
dec
adc
and
fdivrl
scas
fsubrs
add
sub
push
mov
test
mov
jge
ret
jmp
xor
pop
lret
fsubrl
push
bound
inc
insl
mov
xchg
mov
mov
test
data16
push
cmp
imul
std
out
stos
add
rclb
mov
ljmp
out
xchg
out
push
test
nop
cld
les
adc
stos
sub
xor
in
rcrl
mov
hlt
mov
jbe
xchg
mov
insl
mov
jno
and
adc
adc
push
cmp
rol
jge
or
cmp
or
rcrb
cld
mov
sbb
je
leave
adc
out
add
test
test
xchg
out
rcr
mov
mov
scas
jp
mov
stos
es
ja
cs
pop
stos
adc
das
push
push
xor
sub
and
mov
enter
pop
push
rorl
jno
push
add
ss
imul
stos
ljmp
test
mov
jle
mov
push
or
shlb
or
or
mov
gs
imull
adc
int
inc
jo
fstpt
push
popa
outsl
lea
and
push
mov
enter
test
test
inc
add
popa
add
stos
cld
cs
js
mov
pop
add
push
jle
sbb
cmpsb
mov
test
mov
in
or
loope
sbb
xorb
cltd
inc
sub
jbe
je
push
push
sahf
insl
or
out
push
and
xadd
daa
shlb
inc
xor
add
pop
jns
pop
imul
push
loopne
push
shrb
in
test
adc
inc
mov
sbb
imul
adc
lcall
adc
loop
loop
push
or
push
shl
push
mov
pop
pop
mov
mov
or
mov
adc
xchg
daa
stc
dec
repnz
test
cmp
or
cmp
add
iret
push
mov
lcall
dec
loopne
sub
aam
cmpsl
frstor
pop
cmp
pop
adc
or
sahf
lret
in
js
bound
iret
mov
sbb
jge
push
sbb
les
shr
push
cmp
pop
repnz
in
wbinvd
dec
gs
or
enter
or
cmpb
ror
and
pop
ror
int3
orl
fisubs
xor
mov
inc
and
add
in
cmp
mov
push
sbb
loope
adc
and
cld
movsb
jle
or
mov
shr
mov
and
mov
mov
dec
dec
pop
out
jle
jmp
cmpb
and
adc
adc
mov
push
test
xor
xchg
lea
mov
mov
mov
and
decl
cmp
jb
jbe
scas
dec
mov
je
ja
push
push
adc
add
addb
adc
add
cwtl
jbe
cmp
jo
jne
int3
dec
push
xchg
mov
dec
push
lea
cli
fcompl
adc
rcrl
inc
add
mov
sub
ja
sub
dec
mov
pop
adc
dec
push
icebp
addl
pushf
cmp
js
aas
add
push
mov
sub
clc
aad
push
imul
pop
xchg
pop
cmp
jmp
cmp
push
add
hlt
push
addl
add
xor
mov
push
rorb
dec
outsl
push
dec
ja
adc
lret
pop
mov
ljmp
inc
xchg
repnz
orb
leave
dec
add
add
leave
leave
leave
leave
push
pop
or
out
out
or
jnp
or
jbe
jmp
or
out
push
jmp
por
jmp
adc
pop
out
out
adc
push
adc
dec
adc
dec
adc
out
push
jmp
pop
jmp
sbb
xor
out
out
jmp
sbb
es
and
out
push
jmp
pop
jmp
and
or
add
and
and
test
adcl
jae
add
push
fwait
dec
jecxz
mul
das
and
push
add
jns
nop
cwtl
mov
sahf
out
ror
aad
out
sahf
out
in
out
repz
jnp
clc
std
add
out
sahf
out
sbb
and
sahf
das
xor
ds
dec
jg
sarl
enter
add
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
mov
xchg
and
aas
push
imul
add
sbb
rcr
mov
lods
cmp
in
push
inc
mov
xchg
mul
or
cmp
cmp
xchg
out
imul
or
shlb
push
stos
shrb
and
out
pop
mov
fisubl
mov
inc
pop
das
push
add
dec
mov
aaa
xor
mov
or
decl
sbb
adc
pop
sti
cmp
loope
pop
mov
xchg
dec
subb
mov
lea
loopne
cmpb
add
cs
lret
add
nop
add
hlt
aaa
scas
sbb
fldenv
ja
push
jbe
cmp
rolb
shll
std
or
jmp
xchg
sbb
add
or
iret
jno
xchg
ficomps
cmp
pop
loop
fldenv
and
int3
xchg
pop
mov
mov
test
setge
or
adc
and
jmp
repnz
jecxz
xchg
ja
inc
mov
mov
push
mov
scas
mov
push
cmp
andb
or
cmpb
or
jne
pop
js
pop
add
dec
push
in
xor
pop
lcall
stos
call
pop
xor
shr
xor
pushf
sarl
in
push
hlt
push
shr
xor
add
add
add
jne
mov
pop
iret
or
insl
push
adc
out
or
and
xor
add
add
jnp
push
aam
sub
jge
fsubr
add
or
mov
ror
mov
aas
pop
mov
fisubl
aam
cli
and
and
roll
lods
mov
push
rolb
leave
xor
push
fs
fisubrl
movsl
sbb
repnz
sub
fdivr
outsb
movsb
push
or
push
or
xlat
and
ror
add
add
loopne
add
add
cs
cmp
aam
cmp
push
pop
pusha
mov
push
xor
enter
sub
ljmp
rol
rcll
add
cli
push
xor
pop
dec
lcall
xorb
sbb
in
shl
in
push
sub
data16
push
inc
push
add
add
pusha
mov
pop
cmp
or
fadd
xor
call
shlb
in
or
lahf
cmp
movsb
imul
lods
xor
test
pop
sub
cmp
sbb
add
cmpsb
xor
fcoms
inc
jge
and
call
in
jl
and
into
add
and
xor
cmp
imul
push
xchg
js
adc
pop
inc
mov
jo
ret
push
jo
ficoms
or
les
pushf
cltd
lcall
cmp
add
cs
adc
loop
mov
and
sbb
lods
dec
fadds
pop
fs
subl
insl
and
fisubrl
fdivrs
or
clc
jl
push
and
add
imul
imul
add
in
stc
icebp
xor
shll
inc
aam
xchg
fidivl
jbe
cli
nop
or
jmp
aam
dec
shll
cmp
adc
xor
sub
mov
jb
in
mov
shl
rolb
rcll
dec
cmp
ss
push
popl
sub
push
xor
inc
add
push
sbb
dec
inc
test
loopne
add
mov
inc
add
stos
imul
dec
gs
inc
push
xor
movsb
add
adc
dec
xorl
sahf
and
mov
add
adc
cmp
or
push
data16
nop
and
stos
inc
stos
ret
xchg
aaa
xchg
out
push
add
or
and
scas
inc
pop
mov
imul
inc
pusha
push
jb
add
pusha
pop
mov
rol
xchg
or
jo
mov
stos
insb
dec
jno
in
inc
adc
jb
mov
fs
dec
movsb
shlb
cmp
addr16
mov
int3
pop
push
jno
test
mov
jb
adc
dec
add
or
orb
adc
jbe
insl
das
call
and
jp
movsb
and
push
mov
lea
mov
dec
pop
out
or
aas
pop
add
sub
mov
fadds
inc
rol
nop
loopne
lret
jb
xchg
aaa
sub
pop
mov
sbb
pop
xor
xchg
cmc
sub
adc
dec
push
fwait
or
xor
or
pop
inc
jmp
rol
and
fdivs
or
test
loopne
mov
mov
sub
loopne
lea
jmp
lahf
orb
sub
dec
sbb
pop
mov
jg
lods
fimull
pop
jne
pop
jbe
add
sarl
add
xchg
sub
push
enter
fisttps
jbe
or
sbb
icebp
mov
mov
push
mov
sub
jae
push
pop
rolb
add
enter
fimuls
mov
sbb
lret
fs
pop
fdivp
shl
ret
ja
iret
mov
hlt
push
shr
xchg
xchg
push
sub
lea
call
mov
addl
or
dec
test
dec
cld
js
ret
movl
pop
push
pushf
mov
cmp
pushf
dec
fdivrs
jbe
fdivrl
xor
mov
sbb
mov
jo
inc
jge
outsl
pop
xchg
rorb
fwait
sbb
dec
loop
push
ds
mov
push
xchg
jle
ja
lea
imul
cmp
ja
or
mull
or
pop
add
cmp
and
mov
sbb
lock
enter
sbb
add
adc
or
and
pop
in
inc
addl
xchg
and
adc
les
or
test
test
shll
push
addb
pop
mov
push
and
add
pop
pop
sbb
mov
adc
pop
call
fdivs
loopne
inc
pop
stos
xchg
icebp
sub
int
pop
imul
mov
mov
call
dec
fwait
xchg
xchg
roll
jge
push
adc
adc
dec
in
insb
loop
add
mov
xor
rcrl
xchg
mov
sbb
add
loopne
xchg
pop
sbb
xchg
sbb
xchg
and
lret
out
fists
ljmp
mov
adc
iret
cmp
lods
cmp
sub
and
add
push
and
stc
add
ret
mov
xchg
add
mov
movl
dec
adc
push
sub
push
push
inc
andb
inc
push
movsb
loope
inc
wrmsr
adc
mov
adc
orl
xor
pop
adc
push
loope
xchg
lods
in
inc
cmp
jl
sbb
or
icebp
test
mov
mov
jp
cmp
add
dec
sar
cli
es
lea
cmp
cld
jg
and
fs
jne
or
js
xor
push
sbb
js
sbb
mov
aad
or
xor
cmpb
mov
outsl
or
icebp
jl
dec
dec
mov
movsl
fstpl
mov
cmpsb
jb
xchg
nop
pusha
and
pushf
dec
daa
lods
nop
lock
lret
and
movzbl
push
rorl
and
adc
js
and
out
xchg
add
shr
jmp
push
aam
pusha
lock
mov
pop
push
inc
in
add
or
test
ret
mov
and
mov
push
and
and
call
mov
lahf
cltd
ja
add
lcall
push
pusha
mov
and
mov
ret
dec
and
xchg
pop
and
stos
and
adc
or
xor
add
push
cmp
add
cmp
rcrb
js
jne
test
mov
dec
or
push
push
sbb
loop
jo
adc
sub
cmp
adc
xchg
mov
sti
push
imul
add
jle
dec
sbb
int3
mov
sbb
and
cmp
shlb
and
xchg
add
add
adc
mov
inc
bound
add
and
mov
push
inc
push
or
xor
pop
cltd
sub
sub
dec
mov
dec
es
inc
mov
push
movl
and
or
add
imul
lcall
add
adc
mov
cmp
jno
xlat
orl
ljmp
sbb
xor
pop
push
mov
pop
ja
push
add
pop
js
pop
push
jmp
mov
jmp
cmpl
sub
push
shl
xorl
pop
adc
fisttpl
shrb
push
ss
je
xchg
jl
dec
aam
mov
pop
neg
and
ret
or
std
mov
fstpt
sub
xchg
lea
out
push
adc
sub
ss
int
mov
sbb
xor
push
or
dec
inc
push
mov
mov
cmp
jmp
and
stc
jge
sub
or
adc
jle
inc
push
push
adc
adc
outsl
cmp
aam
mov
fildl
arpl
or
push
das
add
or
lock
inc
push
aam
adc
jb
adc
js
repz
sbb
adc
testl
mov
sub
jg
adc
dec
ror
dec
sbbl
push
jno
push
aaa
xchg
sub
fwait
ret
inc
or
sbb
sbb
cmp
fwait
loope
and
jnp
pop
mov
mov
or
cwtl
and
loope
jmp
sub
popf
mov
pop
aam
rclb
push
aam
xor
pop
sub
sub
cmpsl
mov
jg
mov
cmpb
icebp
imul
les
jmp
cmp
sbb
pop
dec
shl
mov
and
sub
sbb
inc
xor
call
xor
cmp
or
cmp
inc
inc
rorl
xchg
xor
daa
pop
sbb
or
test
jle
jp
jns
adc
jnp
xor
dec
fnstenv
dec
cmp
ja
inc
rcll
push
sub
fnsave
shll
leave
mov
sub
cltd
jae
sub
rorb
push
pop
push
cld
cmpl
xor
ret
adc
mov
inc
mov
lds
mov
xor
gs
or
roll
cmp
dec
mov
and
push
pop
push
xchg
test
pop
adc
cmpsb
jmp
or
adc
hlt
je
inc
mov
data16
xchg
scas
dec
ret
fsubrs
push
mov
lock
lock
sbb
sub
mov
fimull
push
hlt
ss
mov
push
es
stos
movsl
and
dec
jge
jmp
stos
jmp
in
xchg
sbb
je
mov
orl
mov
cmp
sbb
push
xchg
stos
ja
adc
lods
or
cld
xor
insl
jl
adcl
and
pop
jnp
sub
add
scas
stos
loopne
xchg
mov
adc
sub
mov
pop
movl
orl
call
mov
dec
inc
jecxz
add
or
jmp
mov
pop
or
pop
and
inc
dec
fiadds
inc
pusha
sbb
adc
ds
lds
call
xor
xor
xchg
mov
lock
rcll
clc
into
icebp
mov
push
xor
mov
jmp
push
mov
xor
inc
dec
imul
mov
adc
and
and
mov
arpl
imul
and
mov
sbb
xor
je
nop
inc
and
ss
xchg
cmp
movsl
mov
test
push
mov
push
push
or
orb
sub
xchg
push
xor
xor
mov
adc
xor
fsubrs
pop
jb
and
and
mov
xchg
test
sbb
mov
test
and
xchg
sbb
ret
cmp
enter
adc
adc
mov
inc
and
cmp
or
dec
xchg
and
sbb
cs
and
dec
rcll
and
andl
dec
loop
sbb
loopne
jle
cmpsl
pushf
in
cld
xchg
cmp
xor
mov
cmp
leave
int3
and
leave
sbb
ret
outsb
pop
stos
xor
adc
inc
jne
inc
push
sahf
loopne
and
outsb
cmp
out
sbb
or
mov
out
les
jecxz
lea
ljmp
ret
arpl
mov
lea
push
jbe
lcall
enter
scas
push
push
adc
repnz
adc
mov
cmpl
inc
push
lods
les
popf
out
mov
add
adc
adc
fisttpll
ret
insl
dec
dec
test
fldl
cmp
call
and
mov
jmp
sub
dec
dec
add
das
push
inc
cmp
pop
sbb
nop
push
push
xchg
dec
nop
push
inc
mov
pusha
leave
xor
faddl
mov
shrl
fimull
test
ds
xchg
mov
mov
cmpb
sbb
sub
rolb
test
pop
pop
fisubrs
popa
outsl
jmp
fstpl
fndisi(8087
or
fisubl
sbbl
out
adc
or
imul
xchg
mov
xor
stc
dec
lods
sub
mov
ret
cmp
arpl
repnz
adc
pop
lods
pop
mov
stos
xchg
repnz
add
mov
sbb
dec
stc
mov
add
push
xchg
xor
jp
mov
or
inc
xchg
or
cmpsb
pop
mov
push
cmp
add
shrb
mov
or
shll
mov
push
mov
cmpsb
les
fcmovbe
sub
mov
lea
inc
std
push
push
daa
stos
je
cmp
inc
add
fwait
adc
sub
push
cmp
jge
mov
aam
adc
cmp
inc
insb
lock
lea
les
cmpsl
ret
pop
mov
lds
lcall
add
xor
lret
lret
lock
clc
clc
cld
jne
incb
jae
movl
xor
push
add
nop
imul
dec
fbstp
dec
je
add
adc
cmp
fiaddl
lret
orb
mov
mov
or
push
cmc
lock
ljmp
xor
test
rolb
sub
dec
xor
lds
push
daa
pop
cmpsb
adc
jnp
mov
mov
dec
je
dec
lods
mov
push
add
loop
dec
xchg
pushf
popl
mov
lcall
sub
icebp
ljmp
xchg
testb
mov
test
je
cmp
jne
push
rcrl
sbb
adc
mov
imul
or
data16
add
xor
xor
inc
cmpb
test
sbb
or
gs
lret
idiv
inc
inc
imul
add
mov
hlt
clc
jb
pop
cld
mov
cmpb
add
lahf
pop
je
mov
add
add
or
cmp
jns
or
cmp
or
add
adc
push
push
lock
ljmp
out
repnz
jbe
inc
push
and
fiadds
daa
pop
out
mov
aaa
sarb
push
jge
test
xchg
ja
imul
outsb
gs
jae
repnz
arpl
xor
insl
jmp
mov
repnz
sub
adc
cmp
je
cmp
push
cmp
mov
clc
jne
inc
jne
loopne
in
sub
les
fwait
sub
jb
ljmp
rorl
cmp
jne
pop
dec
add
pop
add
loop
cmp
push
ret
sbb
sarb
add
subb
fcoms
xor
mov
jp
jl
or
jg
mov
jmp
and
pop
outsb
outsb
ds
jmp
inc
jl
inc
jg
aaa
mov
std
push
jp
add
shl
dec
mov
sub
mov
call
mov
fscale
push
xchg
ss
jg
xchg
jg,pn
imul
and
sbb
inc
sbb
xchg
rcrl
scas
add
sbb
or
push
xchg
out
mov
xor
aaa
sub
frstor
pop
and
xchg
mov
jl
pusha
mov
cli
popa
mov
jg
pop
fs
imul
inc
imul
inc
mov
xorb
mov
lods
aaa
lcall
cmp
dec
sub
mov
jmp
test
ljmp
xchg
inc
out
test
das
movsb
xor
xor
fsubs
add
inc
cmpb
mov
movsl
pop
call
filds
pop
pusha
idivb
call
out
jmp
xor
jno
les
dec
inc
fs
mov
dec
sbb
or
add
pop
fsubr
xorb
pop
push
shrb
cld
cmp
sub
mov
inc
and
sub
lds
je
je
and
cmpsb
pcmpeqb
clc
insl
or
mov
mov
add
cmp
into
hlt
add
jne
mov
mov
ds
cld
imul
inc
lods
lret
inc
mov
cs
imul
cmp
or
cmp
mov
jmp
test
andb
push
aad
xchg
ret
out
jg
loop
sbb
inc
push
dec
and
mov
dec
dec
mov
inc
cwtl
add
ljmp
mov
jmp
jns
dec
cmp
or
fsubl
mov
sub
jge
jne
xor
add
rcrl
loopne
movsb
push
sbb
pop
push
add
xor
adc
dec
js
inc
inc
cwtl
xor
pop
inc
inc
push
sbbb
add
add
fisttpll
scas
movsb
sti
sub
into
mov
mov
shl
lds
and
gs
jne
dec
imul
mov
andb
icebp
loope
out
jmp
push
rolb
mov
xorb
xchg
and
mov
sbb
lea
push
xchg
shl
inc
aaa
mov
mov
imul
ret
jge
add
ret
xor
or
mov
fcom
mov
xlat
out
les
dec
adc
jne
push
pushf
mov
xchg
mov
ret
add
dec
lock
cmp
incl
cmp
pop
xchg
aam
cmp
mov
inc
cmp
sub
mov
inc
cltd
or
sbb
adc
in
xor
pop
mov
pop
sub
cmp
inc
push
imul
inc
ds
and
out
cmp
outsb
mov
insl
xor
roll
pop
push
or
or
enter
mov
popf
and
xor
inc
mov
leave
enter
and
jle
movb
jbe
pop
les
fs
sbb
push
js
rolb
inc
mov
jns
cmpb
jne
leave
lods
mov
cmp
not
les
test
aaa
sbb
jne,pt
ds
sbb
ja
dec
ret
addb
and
cmp
xchg
pusha
aas
add
lods
xor
cs
xlat
mov
and
lods
dec
xor
dec
out
mov
aam
test
mov
into
push
jb
rcrb
scas
xorl
fs
orl
rolb
ljmp
inc
lock
in
xchg
jecxz
jecxz
pop
loope
ret
pop
xorl
pop
repnz
test
in
lret
pop
adc
call
shll
push
aaa
sbb
or
sbb
in
mov
push
pop
fnstsw
mov
dec
dec
and
or
ss
shrb
data16
push
push
nopl
inc
test
jl
mov
inc
pop
mov
push
pop
cld
pusha
ret
popf
inc
insb
je,pt
inc
add
inc
jl
push
scas
shll
sub
sarb
rcrb
lods
addl
fstpt
push
test
fldl
inc
fisttps
mov
imul
mov
lock
clc
push
push
addb
adc
pop
jo
mov
fsubs
add
loopne
addr16
push
jo
add
lods
loopne
or
and
fwait
pop
fists
xor
into
sahf
sub
xchg
pop
lods
push
push
lea
loopne
orb
cli
xchg
sub
adc
xchg
mov
or
sub
jo
adcl
sbb
or
and
sbb
add
mov
imul
cmp
fcomps
insl
test
ss
stos
leave
cltd
sub
test
sahf
xchg
dec
sbb
cs
call
cmp
xchg
lock
xor
negb
add
int3
out
jmp
imul
push
push
mov
es
cmp
je
ret
scas
test
push
adc
sbb
or
or
lret
movb
add
mov
hlt
cmp
movl
pop
loopne
sbb
adc
xor
push
mov
enter
mov
in
jne
add
and
sub
aas
inc
je
dec
adc
lock
insl
jne
mov
push
dec
cld
minps
je
or
cmp
and
push
scas
insl
or
adcl
jg
outsb
test
jp
mov
dec
sub
add
and
add
pusha
js
movsb
movsl
dec
dec
cltd
or
cmpb
pop
outsl
push
push
add
sbbl
mov
daa
push
mov
cmp
out
sbb
je
and
add
inc
rclb
clc
mov
fimuls
push
add
xchg
add
pusha
inc
lds
in
pop
dec
mov
aas
add
add
jo
xchg
iret
sbb
add
fcomps
add
sbb
jmp
mov
inc
fsts
dec
pop
xchg
or
pop
pusha
movsl
cmp
jne
add
add
add
push
bound
fldenv
movsl
xor
sbb
jecxz
mov
dec
sbb
data16
inc
rclb
iret
std
leave
sbb
fstpt
mov
into
je
mov
add
ja
movsl
clc
nop
hlt
jmp
mov
sub
jne
sbb
sbb
push
xchg
adc
pop
adc
pusha
xchg
in
sbb
fs
shl
test
stos
or
movsl
lcall
stos
push
pop
fdivrl
in
jmp
es
dec
inc
mov
jb
hlt
or
jnp
ret
loopne
pop
dec
addr16
stos
add
inc
xchg
mov
jle
in
ret
xor
aaa
imul
cmc
in
sbb
cmc
jno
inc
mov
into
or
add
fists
mov
int
movsb
push
or
or
sbbl
xorl
and
jno
outsl
in
dec
movsb
icebp
add
xor
movsb
lock
mov
bound
push
sub
push
cmp
pushf
fstpt
scas
cmp
push
dec
push
arpl
mov
mov
pop
daa
sub
push
subl
or
movsb
mov
inc
mov
xor
pop
imul
ds
lock
loop
xchg
dec
push
push
jmp
bound
mov
fiadds
or
push
mov
inc
and
leave
or
xchg
ss
enter
adcb
push
loop
leave
add
fs
pop
or
sarb
sahf
fs
aaa
out
movsb
xchg
movsb
push
out
jmp
shl
test
sahf
call
enter
adcb
cwtl
xchg
pop
lock
stos
cmpsl
sbb
sbb
stos
out
test
push
and
call
sbb
jl
add
push
xchg
or
push
loopne
ret
jmp
and
clc
inc
ret
mov
inc
inc
movsb
sub
sub
sbbb
xchg
lret
add
addl
subl
clc
pop
and
or
icebp
jno
sarb
inc
rolb
xor
ret
cmpl
push
in
faddl
mov
in
mov
loope
or
out
push
mov
or
nop
add
sub
push
push
inc
mov
add
fadds
adc
xchg
aam
dec
fbld
mov
inc
xchg
add
mov
and
or
mov
shlb
push
rcrl
jmp
add
hlt
mov
xor
mov
sarl
mov
int
call
mov
ss
pop
add
or
xor
sarl
cmp
pop
sbb
sub
fistl
mov
sub
and
inc
pop
jmp
add
inc
scas
inc
inc
call
je
in
fimuls
mov
inc
data16
jo
inc
inc
xchg
jnp
sbb
mov
adc
sarl
cmp
pop
push
cwtl
and
outsl
nop
sbb
add
jecxz
cmpsl
fldl
adc
jne
dec
lods
adc
cmp
sbb
add
leave
fcoms
insb
stc
ss
aad
test
push
leave
jno
loop
jb
xor
xchg
lea
roll
jmp
rorb
push
pop
adc
lret
popf
and
ret
mov
add
mul
and
sbb
adcb
xor
ljmp
and
adc
mov
sbb
push
mov
movl
pusha
jo
add
sub
cmp
or
repz
mov
sub
cmp
cmp
dec
enter
mov
ja
aaa
icebp
lods
push
nop
ret
xor
or
pop
fs
out
test
add
inc
or
or
dec
sub
subl
data16
rcll
mov
adc
dec
adc
mov
inc
mov
sbb
inc
clc
sbb
xor
cmp
rcll
movsb
das
and
aam
or
sbb
mov
xchg
dec
aad
loope
xor
sbb
bound
pop
mov
sbb
lcall
jne
pop
push
jae
inc
inc
add
mov
popf
add
or
jne
ljmp
push
or
push
push
mov
or
xlat
rcll
jecxz
int
fmuls
jmp
lea
fdivrp
dec
daa
orb
or
in
dec
pop
aam
pop
dec
sbb
sbb
cmpl
fisubl
mov
adc
insb
inc
insb
or
add
and
and
idiv
xchg
movsl
inc
mov
movsl
pushw
in
shll
mov
mov
cmp
adc
clc
sub
das
loopne
mov
js
je
icebp
xor
jl
rolb
outsl
sbb
stos
movsb
inc
jecxz
add
stc
clc
or
mov
add
jp
pop
jmp
sbb
add
inc
test
adc
rcrl
mov
testl
xchg
sbb
sub
pop
in
jae
cmp
pop
mov
bnd
cmp
sbb
xchg
shlb
fldenv
dec
shll
push
inc
adc
add
movl
cmc
add
leave
ret
mov
xchg
xchg
xor
ret
lods
inc
sbb
je
jp
ja
shlb
mov
test
or
pusha
jnp
out
ds
lock
xchg
adc
sbb
loop
or
jmp
or
sbb
adc
fs
or
lret
adc
cmp
jb
add
sarl
les
out
popf
or
inc
pop
mov
push
scas
stos
pop
aaa
je
sub
xlat
sub
sarl
jecxz
sbb
adc
sbb
mov
loopne
outsl
in
jae
jle
andl
or
pushf
push
sbb
add
imulb
shrl
sbbb
and
sub
popf
dec
xchg
push
jo
pop
add
or
cli
jmp
inc
ja
adc
cmp
loop
lods
and
jbe
push
inc
andb
test
pop
js
or
inc
sbb
in
mov
add
push
loopne
cmp
insl
pop
adc
loopne
sub
in
test
loopne
ret
pop
mov
add
mov
jae
sarb
adc
call
push
or
mov
lock
mov
xchg
mov
jmp
arpl
push
mov
scas
inc
pop
mov
loop
pop
adc
or
pop
adc
popf
rcll
mov
repz
add
xchg
push
xchg
mov
bound
daa
arpl
sub
add
xor
and
hlt
fs
push
das
sub
push
push
inc
add
jnp
ret
or
cmp
fiadds
lds
fcmovbe
cmp
or
pop
cmp
cs
lcall
in
mov
mov
sbb
add
test
or
mov
dec
ja
inc
jp
mov
push
add
gs
adc
push
push
push
ss
clc
incb
movsb
insl
imull
mov
or
shrb
cmc
cmp
lds
clc
dec
push
xor
lods
mov
push
mov
inc
sbbb
sbb
andb
add
sub
out
ret
outsb
adc
jb
and
inc
sub
aaa
jo
add
imul
out
adc
cwtl
add
les
fs
into
sub
xor
icebp
add
inc
adc
je,pt
sar
adc
xorb
in
add
in
cmp
imulb
in
push
push
mov
cmp
push
mov
add
push
jg
add
sbb
mov
or
lods
out
into
lret
inc
mov
inc
mov
movsb
js
call
xlat
cmpsl
inc
mov
movsl
pop
jae
add
lock
adc
and
sbb
push
and
add
mov
xor
cmp
in
sub
xor
or
and
inc
inc
nop
sub
xor
test
aas
enter
push
je
cmp
jbe
push
add
popa
adc
testb
outsl
mov
push
movl
push
enter
ret
mov
sub
enter
aam
jo
cltd
stos
dec
lock
pop
inc
fists
mov
push
adcb
into
inc
adc
or
cli
aam
in
jo
mov
dec
popl
jl
mov
outsb
dec
insb
xchg
lock
adc
or
push
cmp
fldt
xchg
dec
jo
mov
js
mov
ja
add
sub
icebp
daa
rorb
scas
lods
test
add
lret
mov
add
sub
push
wbinvd
push
sarb
push
sub
adc
jecxz
movl
adc
je
inc
pop
pop
les
xor
data16
rcrb
sub
xor
dec
adc
sub
aad
cmpsb
mov
fmull
pop
ja
call
and
cmp
jne
push
jle
cli
push
mov
xor
enter
jbe
pop
pop
push
lret
jne
mov
adc
fcomi
ss
cmp
std
push
in
dec
cmp
inc
push
xor
pop
div
hlt
add
lea
mov
or
sub
push
inc
or
xchg
xor
push
dec
pop
adc
cwtl
sbb
inc
cli
push
sbb
adc
and
add
push
dec
adc
mov
adc
add
pop
jmp
pop
jp
adc
xchg
cmp
popa
jo
ja
dec
sbb
std
rcr
andl
gs
loopne
pushf
outsl
in
mov
lods
xor
add
push
inc
dec
aam
add
rorb
loopne
je
pop
int
adc
jb
je
aas
add
mov
sub
jo
mov
je
adc
sub
sub
jne
bound
shll
adc
out
adc
inc
add
imul
clc
int3
add
dec
or
mov
mov
dec
or
pop
adc
inc
jns
push
cmpl
xchg
mov
pop
dec
cmp
jb
neg
mov
rorl
ffreep
add
cmpsb
loopne
add
or
adc
and
je
rep
mov
imull
mov
dec
ljmp
jb
loop
gs
call
push
ret
adcl
je
mov
or
xorb
fsub
or
sbb
push
outsl
dec
jne
sub
stc
dec
xor
lea
scas
push
sub
rorl
and
cmp
sbb
je
push
mov
cwtl
scas
pop
push
icebp
dec
fsubrl
and
sbbb
psubusw
mov
out
cmp
and
clc
jg
fs
std
pop
cmp
add
movd
movaps
out
push
enter
shlb
jle
xor
decb
aaa
das
cli
rcl
lret
je
cmp
sub
lret
or
jg
cli
fwait
ret
inc
ljmp
and
in
add
sub
and
add
adc
je,pn
jne
adc
sbb
outsb
fisubrs
repnz
roll
lock
mov
add
pop
shlb
std
addsd
int
add
dec
sahf
repnz
sbb
idivl
pop
test
iretw
into
mov
jne
orb
and
add
rolb
mov
mov
add
xorl
test
mov
lods
mov
or
lcall
mov
andl
adc
cmpsb
leave
and
lret
rolb
hlt
fldenv
lret
dec
cmc
cwtl
sarl
cmp
ficoml
pop
inc
dec
pusha
push
pop
andb
add
sti
lcall
adc
add
pop
adc
ficoms
dec
pop
shlb
and
inc
sub
lea
cmp
scas
mov
aas
in
je
cmp
jne
inc
cmpb
out
orb
pop
adc
and
pop
mov
inc
inc
and
adc
or
or
mov
add
mov
pop
jmp
pop
imul
and
clc
ljmp
sbb
dec
add
cmp
cltd
lcall
xor
xor
pop
notrack
xor
fmull
mov
syscall
jb
leave
push
adc
adc
jo
lea
jno
and
clc
adc
dec
popf
push
lea
cmpb
pop
mov
jns,pn
test
fbld
xlat
cld
sub
xor
add
addr16
es
jno
mov
in
push
sbb
movb
mov
ret
sbb
pushf
pop
addr16
loope
and
sbb
test
lods
and
or
cmpsb
dec
dec
pop
jp
pop
inc
sub
add
shr
add
mov
inc
dec
mov
and
xchg
adc
mov
pop
cmp
jmp
inc
add
mov
psubusw
outsb
mov
mov
jl
js
fidivrs
orl
fwait
adc
fsubs
popf
or
adc
push
jecxz
cli
jmp
cld
rolb
pop
pop
pop
and
dec
lock
adc
cmp
inc
stos
jo
cmp
xchg
mov
arpl
cmp
pop
sbbb
int3
pop
cs
jnp
sbb
mov
xchg
add
cmp
cli
adc
sub
or
cmp
inc
jb
or
mov
or
sub
or
rorb
pop
add
out
pushw
add
rol
xor
inc
data16
push
aas
inc
je
pop
mov
ret
add
je
jae
pop
or
sub
jecxz
lock
fs
cmp
jns
jo
cmp
adc
xchg
pop
ret
add
jmp
xor
and
pop
stos
loop
icebp
mov
and
rolb
shrl
pop
or
shlb
jbe
jmp
gs
iret
cwtl
xor
movups
inc
inc
mov
add
rorl
add
and
pop
cld
or
add
mov
jne
out
cld
mov
hlt
testb
je
inc
mov
cmp
clc
inc
xor
es
loope
or
cmp
adc
loop
or
js
ss
xor
push
push
bound
lds
mov
push
loope
xor
rorl
push
outsl
jne
nop
mov
push
pop
inc
cmpsl
daa
mov
dec
push
or
stos
inc
jle
or
xchg
stos
jge
adc
push
roll
cmp
test
xor
add
daa
cmp
stc
xor
fwait
add
pcmpgtd
pop
mov
dec
ficoml
pop
adc
lcall
stc
or
rep
jmp
addb
cmp
pop
or
jb
xchg
add
test
out
outsb
or
add
push
test
adc
adc
fs
cld
fnstenv
mov
or
lods
adc
inc
mov
mov
movsb
xor
pop
dec
add
sub
nop
inc
xor
xchg
mov
mov
aam
int3
push
jmp
jns
mov
inc
mov
mov
cmp
repz
call
cmp
repz
hlt
clc
clc
or
scas
shll
add
lock
sbb
jmp
ret
jecxz
sub
mov
fildl
pop
sti
and
xor
push
inc
and
dec
scas
mov
into
jl
cld
pop
and
sub
or
mov
fsts
out
xchg
daa
stc
sub
jnp
gs
addr16
nop
mov
mov
int3
rcr
add
out
add
mov
mov
inc
push
fisubl
add
push
fmull
out
mov
push
push
or
iret
repz
pusha
push
clc
subl
sbb
sbb
repz
adc
adc
cmp
repz
or
out
sbb
inc
pushf
or
aaa
push
add
andl
adc
lods
inc
icebp
test
or
mov
pop
shlb
sbb
mov
aam
xor
cmp
add
fildl
shlb
dec
call
push
sub
push
jae
mov
or
jmp
imul
or
leave
les
pusha
mull
mov
adc
mov
jae
sub
fs
push
add
pop
sbb
rorb
lock
sub
sbb
sbb
ror
imul
xchg
inc
sbb
loop
mov
or
mov
std
es
adc
daa
fwait
loope
movl
and
adc
cmp
adc
sarb
jmp
cmp
mov
xchg
adc
fiaddl
xor
mov
sarb
imul
inc
sbb
rorb
or
adc
cmp
or
hlt
dec
loope
or
xchg
push
inc
and
jp
mov
stos
xchg
and
or
fidivrl
dec
mov
sbb
sbb
dec
adc
nopl
add
fdivrl
jle
adc
push
adc
insb
pop
fisttpl
sub
add
aaa
pop
cmp
pushf
mov
cmp
sbb
push
add
lea
cmp
jl
jmp
jnp
andb
cmp
jne
push
adc
loopne
ds
or
add
mov
test
add
xor
aad
pop
fmul
cmp
jle
jne
xor
add
and
push
outsl
or
add
push
mov
xchg
mov
sbb
les
jmp
insl
clc
adc
pop
push
mov
loopne
cli
mov
sti
pop
inc
mov
cmpsb
mov
mov
inc
pop
ljmp
fdivs
mov
sarl
call
adc
jne
insl
push
jb
jle
pop
scas
pop
and
push
loope
xor
clc
ret
ja
pop
add
jno
ss
inc
mov
dec
or
repnz
and
bound
xchg
push
or
push
xchg
aaa
pop
mov
stos
jmp
sub
add
enter
push
xchg
test
fnsave
jne
pop
push
or
jmp
jb
fimull
loopne
rcll
fsubl
daa
push
into
and
pop
mov
pop
and
add
loopne
popa
fucom
sub
pop
fsubrs
and
shl
pop
andb
jmp
insb
mov
or
pusha
sub
repz
jg
pop
mov
lock
js
push
ljmp
in
adc
adc
push
push
sub
inc
xor
adc
push
or
fsubrl
or
inc
js
std
xor
je
or
sub
push
fs
pop
gs
adc
cs
mov
xchg
mov
add
shl
mov
sbb
rcr
inc
xor
inc
xchg
mov
loopne
ja
pop
jbe
lea
adc
sbb
dec
and
data16
cs
lock
push
inc
pop
dec
ss
jb
push
aad
aam
clc
jbe
add
and
insb
out
jb
sbb
imul
mov
popa
add
add
into
or
loopne
pop
mov
test
jne
test
cmp
xlat
stos
rolb
das
mov
sub
add
je
cvtps2pd
pushf
pop
mov
movsl
xor
es
pop
es
addr16
pop
dec
mov
push
or
mov
decb
sub
add
cld
data16
shl
pop
popa
and
jmp
js
hlt
inc
sub
adc
loopne
adc
fwait
push
or
sbb
dec
push
or
add
or
jb
or
pop
lcall
test
shlb
ret
data16
mov
and
inc
pop
pop
or
mov
add
out
shl
xorb
repz
lahf
mov
push
adc
cltd
rolb
adc
cltd
rorb
dec
frstor
or
repz
rorb
push
out
adc
or
repnz
add
mov
and
jle
daa
dec
jne
jmp
inc
pusha
stos
and
cs
pop
mov
dec
es
jne
mov
xorl
ret
setle
ret
xchg
pop
xor
enter
push
aad
lds
pop
bound
mov
insb
arpl
shr
jo
dec
lea
outsb
into
loopne
add
out
mov
push
cmp
jne
mov
push
cmp
repz
std
jne
es
jne
fstl
dec
call
aam
nop
add
inc
orb
ret
inc
incl
repz
mov
adc
jmp
std
xchg
std
mov
cld
cld
jmp
fildl
addr16
adc
in
adc
adc
inc
inc
inc
mov
out
pop
lods
push
test
xor
or
repnz
test
mov
mov
test
mov
out
push
xorb
shr
sub
dec
and
stos
repz
jns
pusha
sbbl
push
jp
popa
mov
arpl
lea
inc
cmp
or
test
add
inc
inc
add
adc
adc
mov
mov
add
or
adc
in
ds
pop
loopne
and
pop
pop
lds
es
or
pop
fs
data16
aaa
mov
movsl
in
movb
jmp
add
push
cli
push
mov
addr16
mov
mov
je
mov
mov
xchg
pop
jg
add
mov
dec
and
mov
or
sarb
dec
call
push
push
inc
test
and
lret
loopne
push
ja
outsb
loopne
out
jae
out
gs
or
dec
add
lea
mov
add
or
ja
daa
leave
cmp
push
xchg
das
pop
jo
and
xorb
pusha
pop
pop
pop
js
or
insb
sbb
jo
sbb
jno
bound
sarb
mov
jb
addb
imul
add
inc
mov
push
rcrb
call
push
jge
dec
mov
ljmp
in
les
ds
and
fmul
es
mov
jb
ljmp
or
adc
or
dec
xchg
pop
lea
int3
ret
aam
je
add
sbb
mov
sub
add
not
and
sub
inc
inc
mov
sti
and
mov
scas
xchg
xor
sbb
test
cld
sub
adc
xchg
adc
push
movsl
mov
push
xchg
js
sbbl
ja
bound
jne
pop
mov
ljmp
incl
loope
fcmovne
sar
stc
and
mov
inc
je
outsl
inc
cld
fistpll
lea
neg
mov
lcall
sbb
ret
add
xor
shl
scas
and
sbb
scas
mov
je
mov
add
mov
inc
cmp
jb
add
push
add
divl
in
cmpsb
hlt
pop
ret
gs
push
jb
or
or
ret
cld
into
xlat
adc
add
adc
jne
or
jne
outsb
outsl
pushf
shl
push
adc
pop
test
and
xor
dec
stc
addl
divb
in
xor
jo
and
out
jne
and
lret
mov
les
test
cld
or
ss
cmp
je
sahf
addr16
xor
and
fsubrl
sti
jns
aam
xchg
pop
addr16
and
push
mov
push
cmpl
xor
adc
adc
outsb
xor
and
lock
in
adc
mov
insb
dec
call
add
jg
xlat
loopne
add
mov
add
jle
pop
pop
sbb
es
test
pop
add
loopne
arpl
cmpsb
bound
mov
inc
jmp
cmp
inc
mov
add
sub
xchg
mov
adc
cmp
aam
xor
lret
push
ss
or
mov
adc
adc
pop
imul
cmpsl
mov
pop
add
push
cld
sbb
cmp
test
mov
and
je
vmovaps
sbb
roll
pusha
je
lea
sbb
dec
mov
and
xchg
shrb
sub
or
sub
jbe
push
add
cmp
outsl
fcomps
dec
push
rcrb
scas
and
sbb
mov
mov
push
adc
shl
cld
xor
sbb
stos
jno
inc
sbb
adc
sbb
sbb
xor
dec
in
or
adcb
mov
jmp
push
sbb
lcall
push
sub
jno
or
sbb
jmp
test
pop
xor
jne
mov
sti
rcr
or
lock
mov
inc
mov
dec
jne
mov
add
shufps
add
pop
insl
push
add
adc
insl
push
or
mov
enter
push
dec
dec
add
push
inc
adc
addl
mov
or
cmp
es
or
adc
sub
sub
mov
mov
popf
jbe
push
adc
nop
mov
insb
sbb
sub
pop
sbb
push
ljmp
jne
pusha
push
into
jl
or
test
imul
mov
movb
inc
jo
inc
sbb
lea
add
adc
or
adc
clc
test
enter
or
clc
scas
mov
bound
clc
mov
es
sbb
add
icebp
add
pushf
rorl
xor
ficoms
pop
cs
inc
pusha
mov
or
es
sub
dec
push
xor
xor
or
mov
inc
cmovns
in
rsqrtps
xor
inc
int3
push
es
sub
cld
or
push
mov
or
mov
or
cmpxchg
mov
sub
mov
cmpl
or
movsl
adc
pop
xor
or
das
adc
outsb
push
test
and
and
inc
sub
add
jmp
es
or
push
add
sub
mov
mov
inc
shlb
add
sub
loop
int3
fcomps
ret
push
or
sti
or
mov
int3
rcrb
cmp
push
or
adc
sbb
push
or
push
jp
push
jmp
xor
adc
loop
or
mov
jle
mov
rcrb
mov
jne
ja
btr
pop
cmpl
push
fwait
scas
dec
gs
mov
jge
or
or
gs
rcrb
jbe
inc
shrb
in
inc
dec
jae
adc
lods
sarb
in
loop
dec
push
push
aaa
mov
mov
push
data16
pop
addl
jnp
add
decl
cmp
pop
fisubrs
sub
jbe
mov
pop
push
hlt
cltd
pop
idiv
dec
test
xor
add
xchg
cmpb
sub
push
cmc
stos
scas
popa
push
mov
pusha
adc
rcrb
add
imul
dec
fisubl
jp
loopne
dec
in
dec
pop
popa
pop
mov
pop
test
sub
pop
aam
mov
test
movsb
add
dec
adc
in
dec
mov
pop
add
pop
pusha
sub
add
sbb
out
jns
jle
adc
or
repnz
fcomp
repz
add
or
add
push
inc
pop
loope
and
xchg
loopne
mov
mov
rolb
pop
and
js
stos
push
fcoms
jnp
jnp
test
mov
push
in
mov
inc
aam
jbe
and
lods
jp
rolb
or
jg
pusha
cmp
dec
mov
jecxz
inc
or
dec
mov
faddl
div
add
push
clc
adc
fs
enter
daa
mov
popf
inc
je
cli
dec
add
sbb
popa
in
dec
cmp
cli
call
movswl
push
aam
jmp
dec
je
add
or
cmp
inc
pop
je
push
or
in
fisubrs
sbb
add
jmp
sub
push
test
push
sti
xor
sti
jbe
mov
cmp
push
push
sub
push
lea
push
test
sahf
sub
dec
push
cmpsl
mov
jo
arpl
add
pop
inc
xchg
lcall
push
push
addr16
jne
mov
cmpsl
or
packuswb
add
dec
mov
xchg
inc
jne
jae
mov
in
push
repnz
xchg
dec
add
cmp
and
dec
xchg
cmovp
jns
jns
mov
or
push
add
sub
push
rolb
add
js
rorl
js
jbe
scas
cmp
mov
add
ja
out
pop
std
lret
adc
or
dec
jb
je
push
jmp
aas
lcall
mov
imul
clc
inc
dec
adc
or
mov
je
push
fsubrs
add
add
cmp
dec
repz
add
adc
idivl
mov
jmp
cmp
jae
stos
arpl
or
mov
push
mov
push
mov
sbb
subb
dec
dec
push
add
int3
inc
sub
mov
loop
and
decl
add
sub
dec
sbb
rolb
cmpsb
dec
cmp
pop
call
xor
lcall
adc
add
sub
je
or
or
dec
and
roll
and
or
mov
dec
xor
or
cwtl
add
imul
adcl
rorb
cmp
push
and
movsl
jb
jo
addr16
xor
push
pop
lods
pop
mov
decl
das
pop
jmp
lock
xor
mov
movsb
mov
push
pop
sbb
push
pop
jg
dec
shll
dec
movsb
inc
push
pop
sub
rolb
ret
push
adc
cmp
push
dec
xchg
mov
scas
cmp
adc
mov
add
into
cmp
lret
jnp
jo
push
push
add
sbb
push
inc
movsl
loopne
dec
lods
movsl
stos
sbb
mov
cli
insl
or
cmp
mov
ret
test
dec
insl
sarl
inc
xor
and
out
jnp
jns
add
inc
cmp
jne
fldcw
cmp
cmp
stc
mov
rorl
mov
int
imul
add
sbb
jge
insl
inc
shlb
pop
adc
push
lods
mov
cmp
shlb
mov
add
cmp
xchg
mov
inc
movb
call
and
testb
pop
inc
mov
sbb
mov
push
je
add
sub
shrb
fldenv
xor
jbe
add
and
fsubrs
xor
pop
sets
xchg
andl
sbb
mov
push
mov
jg
ds
enter
add
aam
cltd
cmp
popa
imul
mov
leave
cmpsb
mov
xorb
inc
ds
stos
std
test
xchg
sbb
jl
lock
xlat
cltd
adc
mov
sbb
orb
test
push
test
adc
cmpsb
aaa
jb
repz
add
cmpsb
mov
cwtl
clc
enter
pop
cwtl
loopne
mov
push
xchg
and
jmp
inc
and
jbe
hlt
mov
mov
je
sahf
xor
jl
jge
jnp
es
cli
add
icebp
adc
mov
adc
dec
pop
lret
movsb
sbb
and
xchg
sahf
rclb
mov
fmul
jo
mov
popa
lret
dec
rolb
sbb
es
inc
mov
jge
call
inc
mov
add
dec
pop
jp
or
insb
rol
es
ja
imul
cmc
mov
adcb
gs
push
cmp
pop
dec
out
or
insb
sub
dec
cld
jmp
add
push
mov
xchg
subb
push
mov
cmp
add
scas
test
pushf
ja
or
in
outsb
jbe
mov
rorl
inc
dec
call
xor
lock
dec
movsl
in
cmp
sbb
jmp
pop
inc
and
sub
sub
loopne
int
cmp
xlat
repnz
or
or
adc
fsubrl
add
push
clc
xchg
sar
imul
adc
xor
adc
je
into
lea
adc
mov
repz
test
loop
jp
inc
pop
enter
add
xchg
push
repnz
xchg
out
not
xchg
sbb
dec
lret
mov
xchg
repnz
jae
aad
mov
jne
mov
daa
out
push
leave
jge
pop
mov
out
push
push
and
add
imull
xchg
rolb
mov
stos
mov
lds
dec
incl
addr16
push
dec
inc
cmp
add
loop
sub
jmp
xor
jmp
push
pop
les
fisttpll
adc
je
pop
nop
and
inc
push
insb
nop
decl
mov
insl
adc
popa
push
pushl
rolb
push
rcr
loopne
inc
jl
call
aaa
inc
or
sbb
pop
test
mov
cmp
bound
push
xor
pushf
and
push
pop
cmp
out
daa
sbb
std
pop
push
or
je
mov
icebp
lret
in
and
or
jne
pop
repnz
int
mov
not
sar
add
fcmovbe
outsl
xchg
push
add
jle
mov
mov
and
jne
push
sbb
xchg
stc
mov
push
loopne
lea
or
fisttpll
mov
hlt
cs
push
ret
adc
mov
daa
mov
push
or
test
cmp
lods
addr16
push
jg
sbb
cltd
or
jmp
negb
push
adc
je
movsl
push
fldl
push
fstl
or
jo
cmpl
mov
xchg
int3
or
into
or
inc
sub
lock
rol
xchg
mov
int3
xchg
lock
hlt
aam
cmp
or
jns
icebp
stos
sti
subl
pop
jmp
lods
pop
add
push
shr
and
inc
cmp
or
cld
inc
push
push
add
adc
xchg
mov
cmp
push
pop
mov
mov
loopne
rcrb
sbb
sbb
das
push
lock
mov
add
add
inc
cmp
inc
inc
cmp
outsl
idivb
shlb
jb
popa
ret
outsl
add
mov
movb
jmp
out
cmpsb
popf
push
insl
xor
sub
std
add
aaa
add
add
pusha
inc
add
mov
mov
or
fwait
subl
shll
lock
adc
or
cmp
adc
mov
mov
add
or
mov
xchg
xchg
fstpl
xor
fistps
mov
mov
test
popl
int
lods
movsb
mov
or
mov
lods
movl
cmp
es
xchg
push
and
dec
sarb
xchg
mov
adc
stc
ds
out
mov
push
call
cmp
sub
push
push
int3
adc
push
xor
fdivl
ror
in
push
mov
dec
adc
jmp
sub
leave
sbb
loopne
inc
mov
andl
testb
loopne
add
push
dec
pusha
dec
popa
xor
pop
arpl
lret
loopnew
fcoml
sbb
lret
mov
or
pop
pop
popf
enter
shrb
les
add
push
out
imul
dec
popf
mov
cld
xor
inc
adc
jo
adc
and
in
xchg
pushw
clc
jno
insl
push
pushf
push
stos
or
insb
repnz
adc
cli
ret
mov
add
xorb
shl
push
mov
ret
pushl
jmp
ja
cmp
rcr
int3
int3
add
and
xor
sbb
dec
or
fsubrl
test
add
shr
pop
clc
fimuls
and
inc
dec
lods
sub
adc
push
lret
jge
movsl
pop
lea
push
mov
adc
jbe
push
inc
dec
cli
dec
push
fisubrs
hlt
jae
xor
sbb
inc
push
lock
or
pop
push
adc
or
sub
hlt
data16
sahf
mov
dec
out
mov
xchg
sahf
in
sbb
cmp
jne
jb
call
add
adc
sahf
addps
stc
rcrl
jo
mov
mov
ficompl
add
adcl
mov
jge
cmp
and
jg
or
push
nop
into
sbb
ret
cmp
test
outsl
dec
jmp
push
test
mov
xchg
ret
push
in
and
aaa
nop
in
pop
mov
shlb
xchg
lret
hlt
fdivrs
sub
sub
mov
popf
xchg
push
push
pop
sbb
fisubl
je
in
inc
call
call
stos
cs
lods
call
gs
or
pop
add
cmpl
imul
jl
lea
adc
ja
cmp
mov
dec
rcrl
push
cmp
pop
sar
pop
mov
fsubrl
sbb
xchg
push
or
inc
loopne
movsb
inc
mov
paddd
fcomp
add
xchg
loope
inc
jae
or
je
or
je
or
test
ds
enter
or
add
pop
cs
add
out
loope
rcll
int3
test
mov
adc
adc
or
or
mov
add
sub
push
imul
or
dec
ljmp
movsl
cltd
nop
imul
cmp
sbb
jo
stc
lock
or
ret
mov
lcall
inc
popa
test
or
xchg
loope
insb
xchg
pusha
sub
adc
sbb
pop
pop
mov
mov
js
add
or
add
addb
push
xor
imul
imul
and
dec
jae
adc
movsl
or
jns
rcrb
add
mov
call
out
pop
pop
pushf
dec
mov
lcall
push
mov
jb
sub
adc
rcll
pop
push
rolb
mov
in
shll
cwtl
mov
xor
dec
movsl
jmp
mov
into
out
dec
test
lea
arpl
sbb
xor
sub
cmp
mov
pop
mov
add
jo
or
dec
and
rorb
in
push
sbb
or
xor
mov
es
add
lret
pop
mov
testb
sub
sahf
inc
push
repnz
aas
add
push
insl
sub
loopne
cmp
lods
ret
loopne
ds
cmc
pushf
sub
les
loopne
test
add
cmp
jmp
mov
push
sbb
sub
mov
inc
mov
push
add
dec
mov
or
or
iret
xor
or
loop
push
jmp
mov
pop
lret
inc
lods
xlat
mov
pop
dec
sbb
mov
dec
mov
mov
mov
fsubrs
xchg
lahf
xor
jns
push
sbb
je
test
sub
push
jo
call
sbb
mov
mov
mov
stos
pusha
je
or
sub
mov
test
popa
shrl
insl
loopne
popa
xor
push
mov
cwtl
xchg
gs
popl
pusha
and
nop
dec
shlb
adc
movsb
jb
xchg
lds
lds
ficompl
shl
cmpsl
add
push
add
mov
daa
in
scas
ljmp
addr16
xchg
hlt
jmp
ja
fists
pop
jle
imul
aaa
andb
pop
push
out
mov
rcll
or
pop
or
mov
nop
cmp
pop
lret
add
mov
dec
pop
xor
cmp
sub
push
sbb
mov
andb
jne
movsl
push
push
push
jbe
add
pushf
iret
sbb
inc
mov
ud1
cmp
or
mov
das
push
dec
sub
mov
pushf
and
jae
imul
pop
emms
mov
add
cmp
sub
push
insb
arpl
xchg
es
out
push
push
into
in
push
pop
test
jecxz
bound
jb
shl
je
and
inc
mov
ja
sub
xchg
sub
cltd
push
xor
dec
add
add
adcl
push
push
orb
neg
jne
push
or
icebp
xchg
jnp
or
ds
xlat
bndldx
jge
popa
loop
daa
mov
or
outsl
mov
or
popa
lea
lcall
inc
adc
and
stc
cltd
push
push
push
xchg
rcrb
jmp
repnz
sbb
cmp
sahf
fimull
mov
dec
jmp
sub
sub
inc
cmp
sbb
fcompl
cmpb
je
shlb
or
add
cmp
in
movsb
aas
mov
es
cld
mov
movsb
sub
clc
int
and
xor
adc
sub
push
jmp
push
mov
iret
xor
sub
push
fcoms
jne
dec
push
mov
mov
jo
shrl
mov
or
xchg
test
jne
jmp
and
sbb
adc
sub
pop
mov
jg
push
xor
cmp
inc
push
cmp
jp
mov
sbb
adc
out
mov
mov
movsl
imul
xorl
jo
sub
add
dec
stc
adc
lahf
mov
and
xor
cltd
fst
add
shlb
jg
jmp
adc
xchg
pop
jmp
adc
mov
inc
xor
mov
xorb
je
gs
mov
sbb
jle
in
out
mov
pop
mov
call
or
clc
ret
xchg
mov
imul
mov
sbb
push
mov
pop
xchg
addl
and
loopne
ret
nop
loop
nop
cltd
push
into
repz
pop
lcall
or
outsb
movsl
leave
adc
xchg
or
and
rcrb
cld
inc
popf
je
push
push
pusha
outsl
mov
adc
pusha
jecxz
notl
int3
jo
out
fisttpl
or
mov
mov
mov
daa
test
test
mov
or
pushf
rcrb
and
cmp
les
dec
jb
inc
push
xchg
call
cmp
mov
call
adc
or
and
sub
adc
xchg
popf
lods
xchg
adc
out
addr16
mov
or
adc
incb
test
and
jb
into
mov
aam
adc
mov
pop
sub
jae
sub
and
add
cwtl
pop
push
sbb
loope
test
mov
lock
psubsb
jb
in
push
hlt
ret
inc
addl
call
xchg
push
out
lret
sbb
movsl
and
gs
fcoms
jmp
dec
jle
adc
mov
pushl
stos
adc
lahf
out
outsl
ret
ficoms
add
push
mov
enter
jmp
xchg
cli
inc
cmpsl
or
push
cmpl
mov
jae
inc
adc
xchg
xchg
xchg
fucomi
out
loopne
push
loopne
loopne
pop
lods
gs
xchg
stc
mov
mov
sub
ljmp
imul
jecxz
mov
and
sub
pop
out
and
pop
sbb
add
dec
jl
xor
inc
xchg
and
cli
das
add
jo
inc
and
mov
jb
jb
jne
lds
add
jne
add
jbe
shlb
jbe
pop
sbbl
insb
add
jle
int3
add
leave
pop
std
pop
jbe
and
and
nop
xorb
pop
cmp
je
push
mov
clc
pop
push
movsb
add
subl
mov
sub
push
inc
sarb
mov
or
dec
test
ds
push
test
adc
cmove
push
inc
sub
outsb
cmc
fnstenv
sbb
enter
sar
or
sub
loopne
or
mov
scas
or
mov
movsl
test
data16
in
xchg
push
fwait
xchg
push
jns
jecxz
fcompl
add
push
cmp
inc
or
lret
fcoms
jl
inc
cmp
inc
mov
jne
xchg
inc
sbb
pushf
add
psadbw
mov
xor
jb
loop
fdivr
lcall
lods
popa
adc
imul
add
pop
and
mov
pop
cmp
mov
test
loopne
arpl
icebp
pop
xchg
loope
movsl
cmpsl
inc
push
or
inc
js
push
add
push
ret
fstl
sbb
lret
pop
jl
jl
xor
cltd
mov
ficoms
dec
sub
test
mov
ret
add
stos
test
cmpsl
and
ret
adc
ja
clc
sub
inc
xor
test
mov
gs
mov
lock
lock
and
jae
push
leave
xchg
mov
or
int
xor
mov
in
rclb
xchg
imul
or
push
sbb
pop
imulb
sbb
loopne
jecxz
jo
sub
and
cld
mov
daa
les
sbbb
cld
dec
xchg
xchg
or
arpl
push
bound
inc
inc
jecxz
sub
add
into
xor
call
push
dec
and
in
hlt
dec
add
xor
jmp
cmp
pop
xor
cmp
add
movswl
dec
lret
sbb
ja
gs
ds
and
and
pop
or
hlt
loope
mov
rcl
sub
inc
roll
pop
push
add
addb
rclb
call
mov
lods
lret
test
xchg
ss
ljmp
sub
cmp
clc
sbb
push
outsb
push
dec
rcrl
testb
xor
ss
mov
test
dec
ret
add
jmp
andl
popa
sub
xor
addb
cmc
pop
cmp
pushl
cmpl
das
pop
pop
jg
sbbb
rcrb
sbb
jmp
pop
ja
dec
mov
aad
dec
setb
dec
popf
in
xchg
dec
subl
dec
mov
mov
add
mov
test
test
push
cmp
mov
int
js
call
pop
xchg
les
push
rcrb
bound
outsl
frstor
bound
mov
js
ret
mov
mov
add
test
mov
lds
adc
pop
addr16
popf
and
pop
ja
inc
cs
xor
fistpll
sahf
dec
xor
xor
inc
mov
shll
outsb
test
mov
or
lods
ficoml
add
sbb
lea
push
insb
test
mov
xchg
jp
scas
cltd
fsubs
aas
repz
cltd
scas
pop
daa
pop
jb
hlt
push
add
mov
bnd
xchg
push
inc
int3
sub
aas
insb
jne
jp
in
sbb
xchg
or
pop
and
pop
mov
insb
jg
adc
cmpb
fcmovb
lods
xor
daa
daa
daa
fnsave
cmp
daa
daa
and
aam
pop
jb
push
rcrb
out
shrb
push
repz
or
cmp
repnz
loope
ret
mov
lea
int
in
sbb
mov
jb
mov
cwtl
leave
mov
xchg
mov
adc
ret
cmc
mov
adc
push
enter
fildl
adc
movsb
xor
ja
mov
cmpsl
jb
mov
push
xchg
xchg
outsl
fisttpll
hlt
js
add
shrb
in
je
jns
mov
mov
sub
push
cwtl
daa
jns
inc
xorl
inc
pop
shlb
cmpsb
inc
sub
mov
movsl
in
out
jnp
push
repnz
jno
bound
or
mov
js
push
jae
cmp
cmp
add
inc
push
test
loopne
int
stc
lods
outsl
cltd
add
mov
mov
movsl
jmp
loop
addr16
push
in
test
std
lods
orl
pop
lea
dec
mov
pop
test
add
clc
add
jne
and
inc
mov
outsb
or
push
pop
xchg
xchg
dec
popf
jecxz
insl
fs
push
push
loopne
inc
or
aas
inc
rorl
push
pop
push
mov
jmp
loope
jg
fcoms
lret
cmp
pushf
push
into
inc
push
mov
scas
adc
lods
lea
sbb
pop
push
lods
or
push
mov
sbb
inc
aas
sbb
inc
inc
pop
aaa
mov
lret
jae
sub
add
loopne
pop
and
pop
mov
pop
enter
jnp
xchg
daa
push
rorb
dec
push
add
pop
fdivrl
lods
jns
and
dec
nop
out
sub
cmp
cmpsb
ret
faddl
adc
aam
cmpsl
add
fs
and
xchg
sub
xchg
sbb
das
cmpsl
lcall
aam
pushf
or
cmpsl
imulb
sti
daa
pop
mov
arpl
or
sbb
dec
jl
mov
cmp
je
pop
add
sbb
cmc
fst
outsb
push
andb
mov
push
scas
cmpsl
stc
cmp
dec
test
lret
xor
mov
jg
out
xchg
inc
mov
add
inc
fidivs
fxch
or
loope
xchg
leave
adc
push
xor
mov
mov
or
xchg
sub
sub
mov
insb
mov
inc
jo
pop
rcll
pop
or
je
sbb
lods
inc
inc
lret
xor
pop
push
jmp
mov
mov
or
testb
push
add
sbb
adc
mov
cmp
jmp
add
lds
movsl
pop
add
dec
iret
jge
std
es
add
add
or
cmp
and
and
sub
inc
add
sub
sub
aaa
dec
xchg
cmpsb
xor
rclb
jo
sbb
dec
insl
xchg
rorl
ret
xchg
negb
pop
push
sbb
add
cs
xchg
add
jl
sbbb
sub
ret
and
or
add
push
sub
mov
adc
or
lock
push
sbb
orl
rcll
jnp
out
lods
lret
push
out
adc
sarl
mov
adc
mov
and
hlt
add
sbb
push
add
or
popa
or
mov
sbb
push
dec
shll
and
fmull
inc
jo
dec
add
loopne
mov
or
jecxz
test
mov
jno
push
mov
push
popf
out
cli
mov
enter
push
push
mov
shrb
shrl
xchg
shlb
mov
inc
add
and
mov
jbe
and
cld
ficoms
push
xor
adc
arpl
inc
mov
mov
push
inc
inc
cld
pop
jae
add
dec
and
loopne
dec
jge
lret
filds
orb
mov
sti
xchg
dec
dec
mov
mov
sbb
pushf
adc
mov
xchg
insb
mov
in
leave
sub
mov
cmp
call
lea
cmp
ja
mov
sbb
sbb
and
cld
jmp
pop
mov
movsl
or
pop
lahf
push
dec
push
pop
ja
fcomps
clc
mov
jg
je
test
ja
std
sbb
cld
xchg
scas
mov
pop
mov
adc
push
movsl
inc
add
add
cmp
and
iret
add
jno
mov
dec
mov
mov
push
cmpb
je
lods
xchg
jmp
mov
shll
xor
pop
jge
mov
cmp
jne
movl
fisttpll
addb
inc
std
jne
subb
jmp
sub
insl
popf
xchg
and
jmp
jo
or
pop
rolb
push
and
add
pop
lods
fwait
mov
push
mov
mov
add
mov
inc
pop
lcall
shrb
xor
inc
shl
into
std
mov
in
push
jmp
lock
sbbb
jae
xchg
and
enter
test
jge
scas
aas
rolb
jnp
jae
cmp
call
sbb
lods
shl
jne
xchg
sbb
pop
inc
push
leave
inc
clc
add
imul
loopne
aaa
or
jmp
inc
in
leave
add
cmc
std
std
mov
mov
cmp
lret
add
pop
movb
mov
jo
inc
add
mull
xorb
push
aas
pusha
les
aam
push
sti
dec
sbb
mov
xchg
and
pop
orb
xchg
fs
sub
dec
jne
inc
psadbw
inc
stos
addr16
scas
dec
jle
sarb
rcrb
push
mov
test
inc
jbe
mov
or
dec
jne
push
scas
andb
or
push
icebp
lret
addr16
jnp
cmpsl
cmp
into
xor
nop
push
stc
rcll
adc
jo
adc
mov
pop
daa
pop
cmp
pop
lret
test
adc
or
stos
and
cmc
xchg
jge
cmp
push
and
lcall
scas
pop
pop
pop
add
ret
push
rcrl
dec
or
cmp
add
pop
push
lret
sti
xlat
testb
insb
ljmp
add
xor
and
dec
mov
or
xor
clc
add
sbb
into
dec
out
or
cmp
inc
jmp
jmp
cmp
dec
sbb
mov
mov
jmp
add
ret
inc
jo
mov
cmp
adc
pop
add
fwait
jno
es
mov
jmp
popf
jmp
or
cmp
pop
aaa
xchg
add
lods
andl
ljmp
std
and
sbb
ljmp
fwait
jb
fisubl
and
push
fs
mov
shrb
fimuls
or
clc
xor
in
mov
mov
aaa
cmpl
ret
dec
dec
cmp
adc
addb
movsl
sub
mov
out
jmp
inc
xor
adcb
sbb
adc
leave
clc
icebp
and
ret
je
jp
jbe
sarb
pop
cmp
lods
or
pop
sbb
mov
imul
inc
mov
cmpsb
movsb
jnp
into
sbb
data16
mov
inc
inc
sbb
sub
add
mov
in
sub
and
sbb
inc
inc
cs
push
mov
xlat
cmp
cwtl
daa
sbb
adc
ljmp
sbb
inc
faddl
or
bound
mov
cld
inc
add
mov
add
jns
dec
jge
mov
cmp
bound
mov
push
and
sub
cmp
mov
push
sbb
inc
out
cmp
test
mov
xchg
push
sbb
pop
rcll
pop
add
inc
and
sub
add
ss
outsl
add
add
rcr
cmovp
pop
pop
mov
jmp
pop
xor
lods
push
dec
jb
add
dec
ss
or
or
and
dec
mov
mov
push
or
mov
mov
mov
jno
lods
push
push
push
pusha
fsubr
mov
mov
push
pop
lahf
cltd
and
push
pop
or
push
mov
filds
addb
data16
add
stos
sub
or
and
push
jg
sahf
adc
jno
mov
inc
shlb
dec
sbb
scas
movsl
push
insb
pop
arpl
adc
sbb
pushf
adc
add
cmp
or
pop
dec
rolb
test
sbb
push
push
ds
add
push
dec
push
sub
test
adc
mov
out
fnstenv
not
lock
sbb
pop
iret
push
adc
in
xor
stos
clc
mov
and
sub
sbb
sbbl
enter
adc
loop
cmp
dec
jl
jle
sbb
pushl
xchg
pop
jecxz
dec
mov
dec
pop
insb
bound
xor
cmpsl
push
sbbl
arpl
xchg
jle
or
mov
mov
insl
jg
mov
push
xor
mov
push
fnstcw
enter
or
xor
push
rorb
mov
pop
jo
les
pop
xchg
push
jo
cmpl
leave
test
push
adc
pop
ds
fucomp
hlt
cmp
add
xor
sti
adc
cmp
mov
jae
or
lret
xchg
loopne
data16
sub
xor
stos
add
pop
xor
pop
push
or
xchg
mov
mov
inc
jne
cmp
sub
stos
mov
dec
and
add
loope
out
pop
mov
ljmp
pop
sub
movsb
aas
es
sub
loopne
or
aam
addb
mov
inc
js
sub
jmp
jmp
vmovd
inc
inc
add
push
pop
aam
jmp
mov
rclb
pop
cs
sub
mov
rcrl
or
xor
sub
mov
incb
push
push
lock
jg
loop
shr
je
insl
sbb
add
inc
adc
push
sub
push
pusha
lods
loope
scas
jo
mov
dec
jne
shlb
or
sub
add
jg
adc
divb
xor
ret
add
lods
out
sub
jne
push
or
or
cli
pop
pop
ret
in
xchg
rcrl
push
mov
bound
add
cli
shr
add
sbb
inc
push
mov
aam
clc
mov
xlat
loop
ret
and
adc
xchg
dec
popf
adc
lods
outsb
adc
adc
add
push
adc
mov
push
mov
dec
mov
shll
enter
mov
and
push
sbb
mov
insb
aaa
call
movsb
push
adc
jo
ja
add
xchg
pop
mov
and
rcrb
push
add
lret
iret
nop
lret
dec
or
xor
dec
jmp
add
add
mov
dec
push
or
popl
fsubrl
add
cwtl
sbb
test
inc
sbb
mov
insb
push
call
sub
rcl
repnz
add
sub
in
mov
arpl
neg
in
jno
xchg
rcr
mov
les
fbld
jmp
and
das
cmp
mov
push
mov
rorl
dec
add
and
sbb
lret
test
add
sbb
pusha
test
add
push
xchg
push
subl
pushaw
iret
in
call
or
sbb
or
pop
or
stc
loopne
and
xor
icebp
int
xchg
add
jmp
decl
js
jmp
mov
mov
frstor
adc
aam
daa
jns
pop
js
and
push
add
lock
push
sub
xchg
jne
lea
xor
xor
adc
dec
dec
push
repz
repz
pop
push
jnp
iret
mov
int3
fcoms
mov
je
mov
adc
mov
ss
cwtl
mov
jne
push
adc
out
add
fs
cmp
jecxz
push
in
jb
push
inc
and
jle
mov
sbb
and
inc
adc
loope
inc
pop
cmp
in
je
push
cltd
jmp
inc
faddl
inc
sbb
stos
and
push
sar
push
jmp
test
add
aaa
xor
jmp
rcr
jg
xchg
and
ret
and
push
push
test
xor
fstl
jmp
sub
rol
es
or
mov
xor
cld
jmp
mov
test
cld
divl
adc
mov
cmp
je
dec
mov
inc
pop
fstps
pop
xor
add
mov
jne
lea
mov
shr
std
mov
les
mov
push
mov
shll
add
sti
je
jmp
bound
shl
pop
jo
add
sbb
or
inc
cmpl
shlb
mov
xor
adc
sbb
xchg
loop
ret
pop
xor
lahf
mov
xchg
pop
ret
xchg
ds
or
xchg
mov
pop
mov
sbb
jne
mov
pop
js
mov
sub
push
addb
dec
daa
je
add
test
das
xchg
int3
mov
repnz
std
mov
lods
std
test
das
lret
call
pop
xchg
xor
mov
adc
les
or
incb
lret
je
or
jp
stc
test
add
push
scas
jno
cmp
addr16
adc
stc
mov
mov
or
out
xor
ds
push
cmp
test
mov
xchg
cmp
std
push
push
test
sbb
xor
shrl
ret
mov
add
pop
rol
gs
mov
or
notb
add
cmpl
add
or
add
icebp
cmp
and
popa
mov
jl
xor
push
popa
cmp
mov
test
mov
rcl
mov
sbb
sub
sub
dec
cmp
inc
sub
aad
pop
and
or
mov
jne
cmpb
ret
add
jl
in
cmp
inc
xor
mov
test
outsl
ss
js,pn
pop
mov
adc
and
xor
shlb
pop
jge
lds
cwtl
adc
in
test
arpl
inc
push
out
repz
mov
pop
mov
xchg
dec
je
push
or
push
or
cli
and
out
xchg
mov
mov
jecxz
movsb
popf
test
cmp
and
movsb
jb
stc
mov
push
adc
loopne
xchg
shrl
dec
or
or
loopne
dec
fxch
leave
movsb
ret
das
loope
jg
mov
mov
shll
ret
and
sahf
cmpsl
aam
inc
pop
sbb
and
lods
jge
push
pop
aam
es
mov
jmp
mov
sub
repnz
enter
leave
loopne
mov
cmp
add
test
adc
and
adc
jne
cltd
test
fwait
or
jo
fwait
sub
fwait
cmp
mov
xor
fwait
mov
lcall
out
js
sbb
insb
sub
xor
add
or
inc
lcall
loopew
mov
scas
or
adc
sbb
loope
jecxz
inc
fcmovne
push
sarb
nop
mov
enter
loopne
popf
rcrb
loopne
mov
mov
pop
mov
push
sub
adc
sbb
dec
push
cmp
je
ret
scas
inc
cmp
stos
sbbb
loope
sub
mov
fstl
push
push
test
push
addb
jge
or
xchg
lea
push
adc
or
pushf
stos
mov
mov
add
xchg
xchg
loope
js
and
movsb
loop
mov
imul
lods
or
dec
or
jno
mov
out
adc
adcb
xor
push
xor
arpl
fstl
adc
xor
push
add
decb
test
adc
fcoms
neg
ret
arpl
push
cmpsl
cmpsl
ds
inc
mov
cmp
xchg
das
movsl
leave
cmpl
repz
loopne
and
mov
or
xchg
lahf
mov
lahf
inc
repz
cmpsl
test
inc
xchg
fcomp
bound
xchg
subb
fidivrs
or
add
inc
jmp
dec
cs
or
shlb
das
in
jbe
jmp
sti
mov
xchg
mov
add
pusha
in
roll
dec
sub
insb
fldl
dec
jno
or
sub
sbb
jmp
dec
adc
jnp
dec
add
mov
js
out
sub
pop
mov
orl
jle
mov
jmp
jmp
mov
xchg
or
pop
or
lds
mov
mov
fldpi
sbb
aaa
dec
mov
je
fcomps
push
push
jno
adc
sbb
mov
sub
sbb
adc
sti
jne
cmp
hlt
push
nop
add
sub
or
sbbl
mov
jnp
popa
outsl
pop
pop
lock
dec
push
add
je
add
inc
imul
popa
adc
dec
pop
loope
inc
daa
pop
mov
mov
rolb
push
cmpsb
jp
mov
pop
inc
or
js
subl
int
push
fdivrl
rolb
sbb
pop
aam
lods
inc
push
xchg
and
sbb
pop
fdivs
cmp
lea
rorb
sbb
pop
mov
lea
pop
or
pop
out
rolb
aas
loope
xchg
jno
call
xchg
jl
movsb
mov
stos
mov
pop
xchg
xlat
loope
pop
repnz
ret
pop
leave
shll
lods
lock
aas
pop
add
mov
sub
xor
arpl
outsb
fsubr
dec
aas
pusha
aas
and
js
scas
movsl
push
out
insl
jne
scas
adc
into
shl
lods
outsb
insb
mov
jb
inc
aad
mov
pop
jo
xlat
adc
fsubrs
inc
mov
inc
inc
inc
inc
inc
inc
inc
cmp
dec
xchg
jno
sbb
jo
std
call
xor
push
mov
nop
mov
rol
add
sti
inc
es
mov
cmpsl
inc
scas
dec
movsb
add
in
and
aad
cmc
push
inc
test
inc
ss
mov
sub
sub
jecxz
cmp
loopne
dec
movsb
adc
and
xlat
enter
decb
cld
push
mov
int3
push
dec
cwtl
cltd
nop
and
inc
mov
or
cwtl
lods
lods
cmp
push
and
fimuls
xor
cmp
movsb
jb
dec
test
test
leave
leave
mov
sahf
pop
mov
cmp
aaa
jbe
addr16
test
inc
cwtl
nop
add
dec
xchg
pop
inc
dec
mov
adc
aaa
repnz
xor
push
cwtl
pushf
xor
adc
nop
xor
mov
pushf
nop
inc
cmpsb
inc
push
pushf
cwtl
nop
inc
dec
mov
test
divb
int
shr
sarb
or
hlt
stos
sbb
xchg
pop
sbb
push
out
lcall
clc
outsl
add
sub
addr16
sbb
mov
mov
mov
ret
ds
or
xor
je
sub
daa
ja
adc
or
test
sbb
pusha
xor
aam
or
inc
or
add
iret
sbb
add
mov
rcrb
xor
adc
rcll
fmuls
test
xor
mov
iret
push
jmp
ficoms
mov
ja
add
int
jmp
jnp
dec
xor
icebp
sbb
add
dec
fsts
dec
jno
sti
add
pop
mov
ret
movsl
jecxz
sti
mov
add
cmpsb
or
add
shlb
and
inc
cltd
les
lock
popa
insb
loop
jo
and
and
or
hlt
mov
push
sbb
rcrb
adc
and
add
push
sahf
test
add
pop
push
ljmp
add
adc
loope
shr
je
ret
jge
or
push
push
dec
adc
push
and
loope,pn
xor
dec
push
ds
out
out
outsl
inc
or
jbe
jle
lahf
out
adc
jo
cmp
iret
lea
mov
jo
in
int3
pop
fbld
lea
lea
inc
out
in
push
stos
and
shrl
test
mov
xor
dec
cmp
xor
movsb
pusha
jp
insb
mov
push
negl
ret
mov
mov
shrb
lret
ret
mov
ds
shr
dec
arpl
sbb
xchg
sbb
cmp
or
mov
test
lret
and
adc
loopne
adc
xchg
cmp
xorl
xchg
sbb
xchg
inc
add
jne
repz
rorl
leave
add
lret
push
test
sidtl
and
fsubrl
add
scas
mov
divb
or
push
sbb
push
dec
and
dec
dec
sub
lret
add
ds
sbb
bts
dec
jmp
hlt
cs
inc
imul
push
fdivs
xchg
les
mov
popa
dec
arpl
or
adc
jne
inc
adc
and
cmp
fmull
cmp
scas
idivl
inc
sub
xor
scas
inc
les
add
pusha
call
push
cmp
rol
mov
push
mov
pop
out
add
xor
and
sbb
sub
mov
mov
ficomps
cmp
jne
loopne
mov
sbb
inc
mov
add
pop
or
mov
shr
jle
andl
or
outsb
sbb
stc
mov
fs
clc
sub
fs
jmp
cmp
xchg
subl
sbb
pop
cmp
lea
ds
xchg
sub
scas
or
push
cmp
aam
xor
mov
fs
rcrb
xor
pop
rcll
sub
sahf
pop
adc
sbb
andb
jmp
adc
jae
ja
adc
mov
lods
sbb
mov
mov
rcll
jmp
inc
or
arpl
push
out
push
mov
add
push
fists
or
sub
or
adc
icebp
je
into
inc
or
push
movsb
inc
push
imul
filds
sbb
jb
gs
jmp
adc
andl
push
jbe
add
gs
jle
xchg
add
inc
sbb
mov
and
xor
pop
add
incl
dec
and
sbb
pop
jne
xor
adc
aad
in
int3
dec
add
stc
inc
test
sub
xchg
call
dec
in
sar
dec
add
xlat
inc
aam
xor
adc
push
sbb
pop
and
popa
add
xorb
inc
cmpsl
jb
cwtl
sarl
cld
enter
ficompl
nop
out
or
dec
pop
dec
and
neg
jae
mov
dec
or
in
push
add
sub
fidivrl
movsl
adc
incl
mov
inc
add
cs
je
cmp
stos
insl
pop
adc
mov
mov
mov
and
dec
cld
sarl
imul
popa
mov
pop
pop
jle
in
shll
cld
add
push
dec
test
sbb
or
pop
pop
insw
push
mov
and
es
and
inc
imul
ds
and
loopne
cmc
pop
out
jo
xor
inc
std
shlb
fcomi
js
sbb
mov
or
decb
outsb
inc
mov
xchg
or
xor
push
icebp
add
jae
incl
push
and
int3
jae
lea
jbe
clc
pop
add
add
push
xor
jnp
inc
mov
orl
andl
pop
mov
rcrb
les
movsb
xor
aaa
popa
adc
cmp
xor
inc
push
pop
cmp
push
je
cltd
pop
sarl
lock
sub
lea
push
out
test
inc
or
mov
loop
and
pop
dec
call
jge
inc
push
pop
push
dec
xorb
jecxz
lea
xchg
or
jae
lock
movw
insl
add
dec
add
pop
movb
xor
dec
das
xchg
pop
dec
inc
ss
cmpl
push
sbb
call
push
xchg
call
lret
sbb
fiadds
ret
loope
add
jl
sarl
fnstsw
mov
mov
addl
fbstp
daa
faddl
add
or
aas
cmp
or
push
aas
js
rorb
and
into
sub
shll
shlb
cltd
xor
jl
ljmp
hlt
jb
loopne
aam
lret
pop
push
and
subl
fmuls
xchg
nop
sbb
cmp
pop
ret
cmp
clc
add
xor
jmp
lods
dec
cld
xchg
add
or
sbb
mov
add
mov
inc
inc
jo
sbb
dec
cmp
adc
mov
repz
xchg
out
jmp
xor
push
orb
jmp
movb
rorb
pop
jmp
lea
push
adc
repz
sub
push
insl
arpl
inc
aaa
xor
mov
mov
js
les
xor
adc
in
insb
lock
je
push
mov
movl
cld
call
ficoml
jmp
push
add
xor
idivb
mov
add
dec
and
outsb
aam
cwtl
cwtl
or
add
imul
mov
orps
pop
test
adc
sti
or
shlb
push
push
add
mov
and
jnp
sub
push
paddusb
repnz
lock
fstl
and
test
jne
out
repz
loop
sbb
or
and
push
lret
pusha
pusha
imul
test
jb
jae
pop
dec
shrl
ret
mov
pop
pushl
jnp
lods
int3
sbb
pop
push
nop
popa
out
sub
push
lock
jecxz
or
sub
lea
daa
pop
inc
sbb
movsl
xchg
enter
in
sub
push
ret
rcl
popf
imul
arpl
fisubl
push
and
in
jb
pop
sbb
addr16
lret
add
push
add
jnp
fs
enter
cmp
cmpsb
push
cmp
adc
sarb
xor
add
stos
in
cld
cs
mov
fsubrp
push
shlb
xchg
inc
inc
adc
lahf
lret
jae
mov
inc
sub
sahf
lret
pop
inc
dec
inc
pop
dec
dec
dec
popf
cmpsl
repnz
push
adc
mov
fs
insb
add
in
inc
jb
fnclex
push
sbb
sbb
add
fldl
movaps
pusha
push
lock
jmp
addr16
add
inc
cli
push
add
or
ret
imul
ror
cmp
jne
lea
push
leave
sub
mov
mov
inc
or
push
pusha
push
push
lods
test
inc
ficoml
sbb
adc
jle
xchg
or
lret
sbb
fdivs
mov
dec
aaa
enter
jge
inc
push
sbb
cmp
add
or
je
xchg
test
push
add
sub
sbb
jb
lds
xchg
push
xchg
leave
clc
sti
cmp
stc
jmp
nop
xchg
idivl
ljmp
mov
cmp
xor
inc
fistpl
sbb
js
loopne
xor
daa
es
push
lea
jecxz
ret
or
or
xor
and
ret
fwait
loopne
mov
lret
mov
jle
jns
shlb
movsl
or
scas
mov
movsb
stos
or
js
sbb
cmpsl
mov
aas
clc
inc
rolb
and
or
jne
or
push
aad
cmpsb
lock
dec
mov
lret
xchg
fildl
push
subb
adc
pop
lea
mov
inc
test
mov
lock
cltd
or
out
jle
and
sbb
fistps
les
ret
enter
rcrl
add
ret
sub
xchg
add
jmp
fsubs
or
aam
scas
add
jg
adc
out
pop
mov
ret
mull
lsl
jmp
push
pop
cmp
jns
push
inc
shr
rcr
shr
rcr
or
mov
div
pop
dec
test
std
mov
pop
jb
cmp
or
cmp
or
repz
in
xor
and
adc
push
inc
add
inc
lret
ja
cmp
iret
pop
ret
adc
sbb
inc
iret
je
test
adc
jbe
je
mov
push
aaa
stos
or
cmc
inc
in
orb
sbb
mov
inc
mov
out
or
xchg
or
mov
pusha
pop
frstor
mov
mov
lahf
or
jge
cmp
add
test
sahf
call
mov
xchg
mov
dec
nop
adc
mov
dec
les
xchg
cli
and
adc
inc
inc
and
or
pop
jmp
dec
sbb
sub
mov
push
repz
movsb
mov
insl
or
sub
iret
xor
sbb
or
loopne
cmp
sbb
mov
clc
out
test
cltd
and
in
sbb
and
mov
nop
shlb
add
and
add
sbb
out
fists
xor
pop
lret
xor
sbb
add
cmp
mov
sub
inc
adc
daa
xchg
or
ljmp
jne
push
add
and
xor
je
xchg
arpl
pop
inc
cmp
mov
or
rorl
rorl
inc
add
jbe,pt
or
mov
test
push
dec
pop
dec
mov
loope
loope
aas
dec
adc
add
addl
xor
add
leave
or
add
add
mov
dec
enter
jl
testl
addr16
inc
pop
outsb
cltd
cmp
mov
in
dec
lods
mov
push
and
pop
lret
ja
lods
fadds
cld
dec
or
sub
sbb
lahf
ss
dec
mov
movsb
add
cwtl
push
lods
sub
cmp
outsb
mov
loop
les
loope
xor
push
cmp
sub
pusha
xchg
xchg
ss
popa
xor
addr16
mov
mov
cmp
dec
inc
push
mov
ds
add
ret
pushf
in
lds
xor
and
or
or
iret
jo
std
nop
call
imul
insb
loop
nop
cmp
mov
sub
cmp
ret
push
je
mov
mov
adc
sub
inc
and
jmp
fistpl
push
mov
aas
test
add
int3
sub
aad
orl
testb
jmp
adc
outsl
lods
inc
xchg
push
jae
loope
mov
imul
pop
mov
cmp
faddl
push
test
add
push
icebp
lock
add
xor
ficompl
pusha
xchg
imul
add
enter
subl
adc
cli
pop
inc
mov
jl
cmp
jg
inc
jmp
add
fsubr
data16
jne
imul
lea
push
dec
push
add
cmp
pop
lea
or
adc
je
dec
scas
push
pusha
mov
mov
or
xchg
mov
lock
xor
movsb
xchg
icebp
xor
mov
es
mov
jne
push
adc
and
or
incl
push
movsl
sub
push
stos
into
mov
push
push
adc
dec
mov
push
cmp
jge
repz
push
jae
add
out
testb
push
mov
cmpsb
cwtl
pusha
sbb
nop
imul
mov
notb
test
pop
stc
xor
pop
inc
jmp
push
add
mov
push
sti
pop
psubd
push
sbb
pushf
or
popa
mov
jl
js
mov
lods
add
ljmp
inc
cltd
pushf
jmp
xor
mov
lahf
subb
and
ja
mov
sub
pop
outsb
gs
rcll
orl
loop
mov
xor
and
adc
push
mov
shrb
pop
int3
orl
inc
adc
push
gs
jbe
and
add
cmp
or
or
rcl
mov
pop
ja
dec
or
loopne
addr16
pop
xorb
adc
mov
push
push
mov
add
add
add
jo
inc
daa
jno
and
or
and
pop
or
xor
mov
shlb
or
xchg
cli
adc
lea
lea
or
out
sti
loopne
mov
popa
mov
mov
sub
popl
loope
nop
cmp
pop
fiadds
inc
mov
mov
enter
sahf
adc
push
mov
adc
xchg
repnz
mov
div
xchg
xchg
pushl
add
jno
pop
cmp
mov
loop
mov
mov
pop
push
push
xor
test
pusha
pop
stos
ljmp
push
inc
cmp
ds
sbb
dec
sbb
push
add
insb
dec
sbb
out
bound
xlat
insb
enter
push
push
adc
cmp
or
adc
std
rol
pop
sbb
add
and
adc
cmp
mov
dec
hlt
cmp
cmp
jmp
mov
jne
jecxz
push
cmp
cmp
add
push
pop
adc
add
aas
pop
and
dec
push
divl
add
stos
inc
pop
add
daa
or
adc
jmp
mov
sbb
cmp
pop
pop
cmp
and
push
pop
pop
add
xorb
test
insb
je
sub
sub
add
push
hlt
push
sub
xor
or
and
loopne
add
mov
jmp
jg
lcall
and
pop
add
dec
adc
inc
rcll
das
xor
mov
gs
push
es
xchg
cmp
add
test
pop
inc
adc
xchg
je
dec
lods
roll
cmp
lea
adc
or
adc
insb
inc
popa
mov
push
add
lock
inc
mov
xor
das
lret
pmaxub
push
cwtl
cmc
mov
add
shl
dec
jl
adc
sysexit
jp
fcompl
sti
inc
fsubr
das
push
inc
jmp
mov
cli
popf
pushl
leave
icebp
sub
xor
psadbw
popa
insb
push
xchg
fidivs
add
add
xor
sbb
cmp
push
mov
mov
jmp
mov
push
push
nop
xor
adc
fcomps
movsb
mov
dec
shll
dec
and
jmp
pop
jecxz
sub
xchg
call
cmp
loop
or
in
pop
xor
xchg
inc
jmp
push
mov
cs
fwait
mov
mov
sbb
scas
inc
or
pop
test
iret
and
mov
pop
xor
sub
cmp
hlt
add
nop
leave
dec
sub
popf
test
nop
or
xchg
and
incb
addr16
jmp
andl
jmp
mov
xchg
test
stos
popf
add
scas
push
mov
push
cld
fucomip
mov
mov
das
cwtl
cmp
jle
sub
cmp
xchg
or
push
jmp
dec
push
in
jnp
add
jbe
or
inc
sub
inc
loopne
hlt
jae
out
data16
adc
inc
sbb
sbb
mov
push
scas
mov
sub
ret
adc
clc
pop
jge
mov
mov
add
jmp
dec
jae
imul
sbb
jb
cmp
subb
pushf
and
outsb
mov
ja
sub
leave
pop
push
sub
and
cmp
lods
push
ds
cwtl
cld
pop
adc
fidivl
mov
lods
mov
scas
mov
lods
sub
out
xor
inc
stos
loopne
imul
je,pt
mov
data16
jno
adc
nop
mov
ret
fisubrl
call
jbe
ud0
testw
mov
sbb
xlat
pusha
jecxz
fldl
pop
shll
sahf
dec
dec
or
and
dec
cmp
mov
imul
lock
cmp
xlat
add
orb
jecxz
push
push
cmpsb
lret
movb
or
pop
js
sub
dec
mov
dec
test
sti
add
mov
mov
add
push
mov
push
fsubrs
cwtl
jge
add
add
mov
imul
sbb
xlat
test
clc
jge
pop
cmp
adc
loopne
inc
lods
orb
adc
mov
dec
mov
or
sub
ds
jbe
jle
jne
repz
or
rclb
pushf
add
aam
data16
fsubrp
lods
sarl
cmpl
fisttpl
pop
mov
sbbl
sbb
mov
jb
icebp
add
movsl
add
sbb
xchg
aam
into
loop
xor
push
loop
out
or
xchg
or
jne
mov
roll
ja
sbb
test
inc
xlat
jae
mov
std
mov
cld
cmp
sbb
or
cli
xor
and
cmp
pop
repnz
inc
testl
movsl
cwtl
jne
lock
mov
dec
into
lret
lock
out
jne
inc
or
cmp
xor
loopne
and
pop
dec
lock
xchg
pop
dec
xchg
nop
clc
sbb
push
jb
cwtl
pop
fsubrs
test
push
pushf
je
fldt
lea
lcall
add
movups
push
dec
std
test
scas
ret
xor
cmp
jb
lods
push
sub
mov
sbb
lods
incw
cmpl
shrl
loope
insl
mov
test
xor
mov
sbb
mov
jg
add
mov
aas
xchg
aam
gs
fbld
shr
push
testb
shr
adc
bound
or
push
sahf
lret
mov
bound
or
adc
mov
mov
addb
negb
mov
shrl
lods
jge
fadd
loopne
shr
or
mov
sahf
dec
mov
inc
xor
pop
jne
outsb
mov
fdivl
mov
aam
loop
xor
cli
sub
jne
addl
rol
mov
ficoml
cmp
addb
ljmp
mov
out
jmp
or
lods
mov
fldenv
and
or
nop
mov
mov
loope
jl
dec
mov
int3
jmp
xchg
or
daa
popa
and
inc
mov
lds
cmp
jmp
lods
sbb
ljmp
jno
adc
xor
cmpb
sbb
imul
push
lret
das
pmaxub
sub
jno
daa
jo
sbb
movups
xchg
imul
mov
inc
mov
inc
test
add
adc
repz
push
ret
stc
cmp
cmp
jo
fnsave
repz
inc
or
jmp
mov
call
mov
rcll
incb
jne
testb
adc
sbb
mov
pop
test
add
add
pop
int3
sbb
les
mov
jno
jo
mov
daa
arpl
cmp
mov
int
push
or
add
test
shl
push
xor
sbbb
in
pop
in
test
adc
mov
sbb
ja
jne
dec
fld1
in
or
mov
or
cmp
or
insl
jb
dec
in
adc
shrb
adc
xor
repz
stos
or
mov
xchg
dec
outsb
cmp
es
sub
cmp
mov
pusha
xchg
adcl
inc
pop
pop
pop
bound
add
mov
cmp
add
add
arpl
int
shll
loop
call
add
cmp
outsb
test
mov
mov
int
loopne
push
xor
jne
sbb
lods
or
xlat
jmp
sar
cmp
sbb
out
add
push
adc
sub
jo
sbb
jmp
sbb
ds
faddl
adc
loope
leave
mov
adc
pop
sbb
mov
aam
rcrl
add
ror
lcall
cmovl
loope
test
jns
sbb
jmp
inc
adc
repnz
pop
jmp
ret
or
loopne
gs
xor
push
and
mov
fidivrl
dec
mov
insl
pop
jno
add
in
repz
xor
mov
fs
pop
ljmp
ljmp
lahf
hlt
push
lea
add
leave
sar
mov
and
mov
add
pusha
or
rorb
test
sbb
lret
push
addr16
jp
cmpl
push
sbb
cltd
pushf
cmpsb
push
pop
ret
and
loopne
jo
push
dec
push
and
add
dec
cmp
pop
mov
js
sbb
pop
pusha
cmp
or
xor
push
push
ds
xor
mov
or
and
dec
adc
test
xchg
push
inc
mov
sahf
add
addr16
mov
fsubl
ret
mov
add
outsl
adc
call
mov
mov
andl
mov
shl
outsb
jmp
and
jae
pop
xor
cmc
imul
sbb
adc
movsl
mov
test
xor
add
or
popa
xchg
movb
jmp
bound
dec
inc
outsb
push
push
cmp
dec
hlt
sub
inc
fs
or
jnp
leave
xor
add
or
inc
add
and
add
cmp
test
data16
pop
jnp
fs
add
cmpsb
sbb
jo
imulb
sbb
mov
add
test
mov
loopne
out
jno
add
mov
js
sbb
cmp
test
jne
lods
test
ret
cmp
shll
lods
dec
cmpsb
sbb
outsl
scas
test
imul
daa
sub
cmc
scas
or
cmp
pusha
dec
iret
test
add
je
out
push
mov
pusha
insb
lods
push
jg
sbb
mov
mov
incb
mov
mov
inc
mov
sbb
adc
mov
push
mov
int3
or
dec
dec
dec
push
movsb
mov
or
xor
jae
mov
inc
inc
mov
cli
or
shufps
mov
pop
mov
push
addl
insb
jo
aad
gs
xchg
faddl
lret
cmp
dec
add
jo
pop
mov
and
or
cwtl
sub
insb
pushl
push
inc
dec
shlb
jbe
fs
pop
loopne
popa
sbb
adc
fiadds
into
mov
stc
cltd
jg
sbb
mov
pop
data16
addb
mov
test
sub
and
in
dec
mov
ljmp
into
sbb
movsl
jne
sbb
mov
stc
cmp
loope
cmp
jmp
inc
add
sbb
sti
leave
add
push
or
sub
lock
lods
shlb
es
and
lds
fisubrs
mov
pusha
mov
add
adc
mov
call
lret
jmp
inc
mov
nop
sub
rcrl
outsl
fucom
lret
icebp
sbb
jae
push
imul
lods
cmp
cmpsl
sub
adc
xchg
lcall
mov
pop
cmp
das
and
das
adc
cwtl
inc
je
jp
rdtsc
cmpb
lret
and
and
or
xchg
cmp
aam
sub
outsl
nop
das
inc
sbb
test
or
mov
lock
pop
adc
xchg
stos
test
push
and
icebp
lds
xchg
and
inc
ss
scas
roll
sbb
ss
int3
xor
xor
inc
xor
adc
add
cmpsb
adc
adc
inc
and
adc
xchg
inc
pop
shlb
fs
push
push
mov
mov
mov
and
je
pushf
push
xchg
pop
or
pop
cmc
fcompl
pop
in
or
jmp
mov
and
cmp
adc
mov
add
mov
mov
hlt
loop
mov
pop
inc
call
pop
xor
mov
je
cmp
pop
adc
cmp
fiadds
inc
mov
jmp
imul
movsb
fiaddl
inc
cmp
decb
les
jmp
addl
js
pop
sbb
movb
jmp
stos
adc
inc
aaa
push
inc
pop
lock
ljmp
or
iret
and
ljmp
jb
les
les
add
js
jge
inc
xchg
inc
arpl
shlb
adc
or
push
inc
push
dec
cmp
mov
sub
push
push
icebp
mov
mov
or
push
dec
sarb
mov
inc
jmp
xor
fwait
sub
jo
mov
add
add
adc
stos
test
pop
cld
not
ret
adc
gs
cmp
adc
sbbb
xchg
data16
andl
arpl
inc
dec
lock
jb
sub
xchg
fsub
add
mov
add
lcall
ret
inc
or
cmp
add
idivb
pop
les
add
pop
adc
push
test
insb
pusha
or
and
rcrl
mov
loop
push
andl
icebp
xchg
loopne
sub
inc
in
in
push
mov
adc
xor
jo
enter
mov
adcl
cwtl
jl
push
pop
cwtl
decb
int
push
jne
push
aas
out
je
mov
lds
inc
pop
xchg
mov
or
enter
adc
call
or
shlb
pop
fdiv
push
jmp
push
std
lock
insl
mov
push
lock
or
pop
push
sub
jne
inc
imul
or
mov
adc
mov
xbegin
mov
adc
fcomps
std
lea
adc
rclb
jmp
shrb
mov
pushf
or
imul
or
push
pop
inc
sarb
imul
add
adc
in
imul
dec
or
xor
adc
and
pushl
add
fadds
fwait
or
cmpb
pop
out
mov
or
jne
mov
clc
push
mov
adc
xor
inc
mov
mov
dec
mov
or
popa
push
push
nop
rorb
xor
dec
je
test
mov
jmp
mov
in
pushf
or
orb
push
outsb
ss
add
cmp
sub
pop
and
mov
cld
cwtl
scas
sbb
adc
popa
or
dec
pusha
outsl
xchg
pop
inc
pusha
jne,pn
sbb
inc
or
and
loopne
jl
push
in
adc
add
push
insb
ljmp
adc
and
lahf
push
sub
je
icebp
cmovnp
cmp
pop
push
sbb
rorl
addl
daa
pop
andb
jbe
xorl
jg
mov
pop
jo
jp
inc
cmp
roll
das
out
sub
mov
fwait
xor
mov
and
inc
xchg
or
dec
bound
aam
or
pop
inc
imul
and
push
add
mov
dec
mov
jb
ljmp
xchg
inc
stos
sub
call
inc
lock
push
push
scas
ss
jmp
adc
clc
jnp
cmp
or
pop
adc
lock
jo
pushf
pusha
lods
cmp
push
xor
in
mov
inc
and
or
inc
out
movsl
out
mov
or
adc
fwait
js
pop
nop
adcl
shl
lcall
cmp
push
ret
mov
in
test
mov
push
clc
call
jne
push
inc
jecxz
lea
adc
mov
push
sbb
mov
sbb
movsb
xor
cmp
mov
mov
push
jnp
daa
mov
push
push
or
pop
je
or
inc
cmp
inc
xchg
into
adc
cmp
mov
movsb
push
sub
xchg
push
orb
mov
pop
cld
imulb
mov
sbb
pop
jno
add
cmp
and
inc
xchg
ja
outsl
in
cmp
lahf
daa
cmc
mov
cmp
or
mov
sub
fisttpll
imul
imul
mov
jne
stos
out
roll
pop
push
lcall
add
stos
pop
add
test
jle
icebp
pushf
jle
mov
mov
mov
test
jno
push
adc
movsb
xor
sbb
jns
adc
clc
cltd
inc
jg
cmp
pushl
mov
xor
scas
and
mov
dec
sbb
in
test
rclb
rcll
sbb
push
nop
mov
loop
ljmp
and
dec
dec
pusha
jge
adc
adc
aam
add
sub
push
or
daa
daa
daa
adc
ss
pushf
fsubrl
and
and
sub
pushf
pushf
pushf
xor
cmp
inc
and
cmp
mov
dec
push
dec
cmp
push
pop
add
dec
dec
fs
dec
dec
je
jl
in
sbb
sbb
xchg
dec
xor
mov
and
pushf
mov
movsb
test
cltd
fs
dec
rol
and
dec
es
shlb
cltd
fidivrl
cltd
fs
dec
in
in
fs
dec
es
hlt
enter
clc
cld
add
sbb
dec
jb
or
gs
xchg
dec
cmpsb
dec
adc
cltd
fs
and
cltd
fs
sub
xor
fs
dec
cmp
push
fs
sub
dec
dec
xor
and
mov
pop
loope
xchg
dec
pop
pusha
sbb
pop
pop
dec
jg
pop
mov
add
movsb
dec
add
test
mov
inc
lcall
enter
mov
push
rorl
mov
xchg
or
imul
nop
adc
inc
lcall
cltd
nop
pushf
and
imul
inc
shlb
or
sub
cltd
nop
enter
pusha
jg
dec
enter
pop
push
adc
and
outsl
loope
js
ret
andl
inc
shlb
push
add
mov
or
faddl
push
or
dec
and
pop
add
nop
sbb
mov
fisubs
call
and
mov
and
aaa
je
adc
add
repnz
jnp
shll
dec
xor
adc
or
jnp
xchg
adc
add
jmp
dec
jb
add
pop
clc
sbb
test
js
test
btc
adc
or
xor
fisubl
xor
fiaddl
xor
mulb
shll
and
shll
sub
push
aad
clc
incb
sub
or
jmp
inc
and
mov
add
jl
and
jecxz
imul
add
or
fiaddl
loope
out
movhps
cli
xor
sub
aaa
enter
jge
je
mov
mov
flds
and
pop
adc
pusha
mov
pusha
loope
pop
sub
jmp
sbb
ficoml
fstp
ds
push
xchg
inc
pusha
fldl
cmp
sub
ret
adc
cld
pusha
jg
testb
in
mov
or
add
mov
out
test
fisttps
loopne
sub
mov
and
sbb
sub
push
and
or
jle
outsb
fs
testl
dec
or
adc
imul
push
and
or
push
or
lds
mov
flds
fstps
jmp
fisttpll
xorb
ljmp
hlt
adc
inc
in
outsl
push
jbe
je
adc
neg
ss
push
sbb
push
addl
in
adc
xor
test
cmp
sbb
sar
push
inc
call
xor
push
aaa
sbb
out
xor
add
pop
rolb
dec
jmp
sub
sub
inc
dec
push
in
jmp
sub
push
mov
loopne
fldcw
inc
test
into
adc
pusha
hlt
movsl
sub
imulb
mov
rorb
inc
add
bswap
and
mov
and
mov
adc
add
rolb
repz
add
push
mov
or
je
inc
rcll
sub
cli
repnz
xchg
mov
jae
es
xchg
pop
ss
shrl
addb
dec
push
push
inc
mov
nop
loopne
or
jle
push
pop
jmp
pop
add
pop
dec
cs
icebp
add
enter
lcall
cmpsb
mov
sbb
and
push
pop
inc
lea
nop
cwtl
addr16
clc
pop
mov
jle
push
add
jns
jnp
mov
and
pop
mov
lret
add
fs
xchg
repnz
aam
add
inc
inc
mov
add
mov
and
test
dec
pop
cmp
je
add
jl
xor
mov
jns
add
or
scas
test
rcrl
cld
sbb
hlt
rorb
inc
pop
cltd
and
sahf
into
es
pushf
sub
lock
pusha
ds
and
or
loope
or
out
sub
mov
fstpl
lods
pop
imulb
jno
xor
inc
and
xor
push
add
or
add
add
es
das
add
or
sub
das
jo
fmul
jo
sub
pop
lods
lea
in
popa
xor
sub
lock
mov
rolb
add
test
sub
pushl
roll
xchg
mov
int
xor
jbe
push
das
adc
inc
addr16
mov
imul
jne
adc
adc
mov
or
jl
push
jnp
add
andl
jne
je
insl
rorb
lret
adc
adcb
cld
pop
test
dec
mov
sub
mov
add
rcrl
shufps
push
xchg
rorb
jge
in
jecxz
clc
lock
or
sbb
fstpl
add
push
mov
and
fsubs
into
pop
add
mov
jmp
dec
xor
mov
sbb
test
and
sub
or
dec
out
fld
in
push
rcl
ljmp
pop
add
push
xor
test
stos
test
pop
and
mov
icebp
das
fstps
loope
mov
or
or
lcall
push
or
push
pop
aas
adc
push
mov
push
cmc
in
add
or
push
xlat
scas
movsb
ret
and
jo
es
sub
push
push
push
test
pop
push
inc
push
pop
dec
ljmp
adc
fnstsw
movswl
lret
sbb
loop
inc
loopne
and
mov
int
sub
rorb
data16
into
aaa
or
insl
or
push
mov
mov
xchg
cwtl
or
sub
or
aam
test
fsubs
ret
ja
fwait
sbb
adc
fcoml
nop
jp
lods
ret
sbb
imul
jae
sti
jmp
addl
sbb
je
scas
xsaveopt
jne
mov
add
sub
or
test
andl
or
jmp
and
add
adc
addb
inc
adc
or
loop
mov
sbb
fld
xlat
xchg
or
pusha
or
ucomiss
mov
shl
lock
mov
add
inc
arpl
int
adcb
push
ja
mov
mov
lock
and
ja
sub
inc
or
push
pop
int
and
adc
ret
in
jo
imul
or
jae
nop
lret
je
jle
loop
adc
xor
decb
add
sti
jbe
push
xchg
rorl
js
adc
mov
sti
std
test
or
add
loope
or
push
or
outsb
dec
fldenv
add
push
or
sub
adc
cmp
jbe
jb
adc
mov
dec
imul
sub
ss
push
or
outsb
add
jecxz
sub
mov
cmp
into
jne
mul
pop
test
jbe
jl
cmc
mov
mov
lock
stos
jmp
stos
pop
pop
fs
and
dec
insl
push
in
inc
cli
js
cmp
movb
pop
add
lods
rolb
adc
cwtl
xor
or
cmp
push
mov
lret
inc
movb
rolb
ljmp
not
test
je
jl
inc
pop
repz
outsb
dec
pop
pop
and
mov
out
sbb
mov
inc
adc
iret
and
insl
push
jbe,pt
dec
mov
add
push
outsb
int
or
or
cmp
sbb
sub
adc
loopne
insb
jmp
inc
pop
jae
add
lret
mov
xchg
pusha
add
sahf
jns
shrb
and
sarb
mov
mov
pop
test
mov
or
jge
je
inc
mov
inc
or
or
or
jp
inc
stos
inc
sub
or
add
mov
pusha
rclb
pop
rorl
cmp
loopne
push
incb
out
and
dec
inc
pop
mov
loopne
pop
popf
jb
mov
and
push
ds
push
or
out
inc
popf
and
dec
sarb
orl
jno
fs
sub
pop
and
ret
cmp
mov
or
icebp
pop
mov
xor
sbb
adc
fsubr
jnp
push
inc
lods
sbb
test
push
icebp
add
dec
clc
xchg
andl
inc
aas
adc
xor
lcall
cmp
mov
mov
mov
jmp
pop
inc
xor
add
add
incb
enter
jns
add
sub
cmp
sbb
dec
cmc
hlt
push
aas
mov
pop
rorb
cmpl
and
movsl
out
cmp
xor
clc
add
xorl
loopne
sub
popa
mov
in
add
adc
lock
into
addb
fiadds
test
iret
and
mov
and
shrl
xor
in
add
pop
mov
dec
lods
rorl
enter
xchg
dec
or
fiaddl
pop
lock
pusha
ficomps
dec
or
nop
loope
dec
push
lret
jne
and
and
mov
cs
cltd
mov
adc
and
push
sub
pop
push
push
add
les
or
or
leave
add
inc
push
pop
xlat
dec
jecxz
adc
jne
sub
mov
or
inc
outsb
and
stc
pop
jne
cmp
and
xchg
add
jb
mov
inc
mov
test
inc
mov
mov
rorl
mov
sbb
into
repz
xchg
out
add
xchg
jo
or
mov
scas
cmp
mov
cmp
insb
inc
cs
or
or
jmp
cmp
je
or
out
mov
dec
lcall
mov
cmp
pop
jne
dec
mov
inc
subb
inc
mov
jmp
and
sub
fisttps
lea
inc
jp
arpl
mov
add
and
inc
leave
into
add
fiaddl
test
add
adc
or
push
inc
cmp
xor
in
inc
adc
mov
add
adc
push
pop
xchg
xor
mov
adc
js
dec
sbb
fadds
sahf
jne
xlat
je
imul
outsb
stos
fdivs
or
add
xor
pop
jno
ffreep
push
pop
sbb
fstl
decb
sub
mov
clc
inc
add
aas
sub
outsb
pop
lcall
pushf
xchg
pop
and
lds
cld
mov
inc
or
xor
movb
add
dec
ret
pusha
loopne
xor
and
cli
jmp
sub
add
mov
insb
sbb
je
pop
adc
cmpsb
dec
push
sub
ret
mov
cld
sbb
push
neg
movb
xchg
mov
enter
jp
xchg
dec
or
add
add
add
sbb
insb
add
push
sbb
rclb
jmp
lcall
psraw
adc
cmp
ret
or
pop
inc
mov
adc
adc
dec
sbb
pusha
inc
jg
shlb
iret
ret
jmp
add
and
scas
jmp
mov
aam
outsb
or
mov
rcll
pop
in
movsb
loope
movsb
push
push
adc
or
in
shlb
pop
dec
lret
cmp
or
mov
gs
mov
push
jmp
and
xchg
mov
out
pop
xor
bnd
inc
and
push
fadd
repnz
mov
push
test
xor
into
jge
inc
stos
adc
adc
and
call
add
mov
fdivrs
or
mov
add
lcall
xchg
sahf
xchg
adc
jnp
icebp
movsl
cld
push
and
or
jne
xor
rcll
test
out
ret
xor
sub
idivb
ss
push
add
pop
and
xor
test
enter
clc
and
add
mov
lahf
test
push
js
sub
ret
scas
dec
and
add
insb
movb
and
mov
mull
xchg
xchg
inc
popf
neg
sbb
mov
stos
push
and
adc
fs
ret
bound
shll
dec
jo
bound
xor
xor
sub
or
cmc
add
pop
and
call
fnstcw
xor
mov
jb
stos
sub
add
pmaxub
add
add
pop
int
mov
wbinvd
divb
nop
push
lcall
dec
sbb
and
sub
sbb
cmp
mov
rol
fadds
adc
stos
pusha
inc
xor
ret
cmp
dec
icebp
xchg
cli
fs
cld
add
hlt
shrd
sbb
cltd
addl
inc
jge
sbb
clc
dec
leave
or
cld
xlat
mov
mov
add
dec
jmp
mov
cmp
ds
sub
pop
adc
pushf
jp
test
or
rorl
push
ljmp
test
roll
pusha
sbb
mov
lret
jo
fmulp
rorb
push
and
imul
sbb
js
jg
mov
or
sarb
jmp
adc
cwtl
shl
fimull
jl
inc
pop
clc
pop
mov
xchg
rolb
jne
sbb
mov
push
lock
ljmp
or
add
shlb
adc
leave
jae
fiaddl
pop
or
or
sbb
lock
roll
cmp
and
and
lods
ja
sahf
frstor
es
mov
mov
or
or
movw
push
sbb
add
sbb
pop
lcall
inc
jnp
ss
jmp
lock
mov
push
inc
sahf
or
push
mov
enter
jns
neg
call
addr16
or
ret
aaa
add
andb
pop
mov
in
or
mov
push
add
adc
xchg
sbb
repnz
je
add
or
aad
fstps
mov
dec
jbe
jl
into
rorl
cltd
inc
dec
mov
push
sbb
xchg
cmp
mov
jmp
or
sbbb
mov
jne
push
cmp
nop
cmp
addl
int
xchg
pop
aam
sub
dec
sub
cmp
leave
xor
enter
jle
in
push
push
orl
dec
out
mov
cld
jl
loopne
jge
push
inc
js
inc
or
mov
and
add
popf
jmp
xor
movsb
add
mov
ds
fxch
in
pop
or
or
pop
pushw
loopne
jne
cmpsl
imul
cmpsb
mov
je
inc
je
pusha
mov
addr16
xor
sub
sbb
pop
cmp
test
aaa
and
test
or
push
cmpb
add
sbb
push
add
or
inc
mov
aam
addb
pop
arpl
cmp
or
dec
jb
add
andb
imul
out
and
sub
adc
pop
xchg
cmpb
jne
mov
add
jp
testl
cwtl
push
xchg
sarl
insb
ret
push
cmp
add
hlt
lea
sbb
or
adc
bound
popf
pop
aam
dec
cltd
loopne
cmp
add
push
mov
adc
sbb
je
pop
push
add
hlt
ja
in
push
push
sbb
popl
add
lcall
sbb
xlat
aam
cmpsl
mov
test
sbb
inc
jmp
cmc
cmp
xor
add
out
inc
or
dec
inc
jne
cmp
add
sbb
adc
cld
mov
push
push
jmp
gs
and
leave
mov
inc
jmp
adc
test
adc
xchg
aam
add
xor
fmull
adc
fidivrs
add
cmp
nop
fidivl
mov
aam
dec
sub
sbb
xchg
adc
xorl
sub
sub
cmpl
xor
rclb
pop
push
or
push
sbb
insl
sarb
adc
leave
xchg
push
mov
mov
pop
add
dec
ljmp
aas
mov
jl
cmp
inc
dec
fiaddl
jb
pop
data16
xor
int
push
pop
mov
sub
je
dec
je
mov
push
push
jmp
or
jmp
sbb
cmp
call
adc
int
in
repz
and
sbb
pop
ret
or
or
aad
sbb
bts
xor
sahf
or
int3
or
push
xchg
cs
xorb
and
or
dec
xor
push
popf
add
jne
adc
adc
add
ds
flds
ljmp
or
sbb
jnp
int3
or
sub
sbbl
add
pop
mov
adc
add
or
mov
ss
dec
into
sub
xor
inc
andb
xor
inc
sub
jno
lret
or
dec
mov
and
aas
or
mov
xor
pushf
and
insl
add
sbb
fstl
int3
repnz
xchg
add
in
pop
sub
mov
rorl
std
inc
or
or
ljmp
dec
cmp
clc
shr
add
or
jg
mov
shr
or
mov
loop
mov
push
push
adc
test
and
add
mov
sbb
notb
lock
leave
mov
mov
add
lods
lods
add
pop
cmp
leave
inc
add
add
jl
in
sbb
cmp
dec
xchg
mov
or
arpl
inc
addl
inc
fisttpl
mov
add
inc
inc
lds
adc
xor
in
inc
call
adc
gs
mov
lea
cwtl
subl
shll
cli
cwtl
sub
dec
mov
mov
test
mov
adc
mov
aam
cmpsb
and
add
lds
loope
xchg
adc
mov
adc
lock
icebp
sbb
ss
and
xor
push
loope
clc
mov
andb
mov
add
sub
cli
jne
mov
sbb
dec
roll
incl
cmpsb
or
xchg
or
inc
mov
shll
in
mov
or
fmull
enter
or
addl
pop
add
lds
leave
nop
sub
jmp
adc
cmpsl
xchg
fwait
push
inc
test
mov
pop
and
lea
cli
popa
cwtl
cmp
pop
or
in
subl
lods
test
lret
testb
dec
jo
popa
divl
inc
cmp
adc
dec
xchg
stc
sub
add
mov
add
dec
pop
add
sbb
or
mov
and
jge
jo
or
sbb
fs
inc
inc
sub
test
jle
cli
add
xchg
mov
add
dec
sahf
sub
inc
sbb
pop
lret
leave
shrb
aaa
xchg
aad
outsl
dec
dec
outsl
inc
inc
push
xor
inc
xor
je
clc
and
mov
js
or
cmp
sbb
fistpll
push
pusha
inc
adc
and
scas
add
mov
aam
sbb
add
pop
je
sbb
mov
ret
sub
add
fmull
mov
push
add
movsb
xor
sbb
hlt
sub
jno
nop
mov
je
ss
push
add
inc
cmp
pop
inc
test
ds
out
sbbl
jmp
pusha
lea
imul
into
xor
or
cmp
dec
sbb
repnz
popf
addb
pop
leave
cmp
mov
enter
xchg
in
mov
cmp
jle
xchg
pop
mov
inc
and
push
popf
add
out
movsb
adc
cmpsb
sbb
bound
ds
fnsave
jmp
sbb
xor
cmpb
sub
cmc
cmp
les
push
incl
out
xchg
adc
push
mov
stc
push
add
inc
jns
push
in
cmp
add
push
imul
ficoml
orb
mov
aaa
jne
cmpsb
add
push
ret
sarl
sub
jmp
rcrb
enter
cmp
jne
imul
inc
dec
add
jbe
call
adc
rorb
push
cltd
or
push
rcrb
fprem
pop
sbb
out
roll
leave
add
mov
not
je
mov
iret
adc
mov
mov
inc
mov
xchg
pop
pop
adc
bound
rolb
call
movsl
sti
lods
pusha
push
pop
jb
loopne
adc
int
cmp
mov
js
add
popa
sbb
mov
or
xor
pop
inc
add
scas
lea
mov
push
icebp
lar
adc
lock
push
neg
neg
sbb
sub
jns
sbb
inc
sbb
or
or
enter
sbb
add
push
inc
and
fsts
pop
mov
icebp
sbb
push
and
and
subb
mov
dec
jns
lock
cmpl
pop
jbe
push
mov
int3
xor
adc
or
jae
lods
rcl
ljmp
in
lock
shr
sub
adc
std
arpl
push
idiv
and
maskmovq
testl
clc
add
push
roll
inc
add
insb
sbb
icebp
fmulp
dec
or
add
pop
pop
lods
aam
stos
jae
adc
dec
lahf
push
test
dec
push
add
sbb
mov
call
je
push
inc
cmp
jbe
pop
inc
xor
aas
orb
pop
cli
hlt
adc
and
aam
shlb
or
push
rclb
adc
rcl
inc
push
outsb
or
inc
inc
cmp
nop
add
into
paddusb
jns
mov
mov
and
ljmp
nop
cmp
movsl
iret
and
mov
incl
cs
ljmp
cld
inc
ss
dec
out
aaa
dec
roll
es
cmpsb
jnp
daa
lods
push
movsb
adc
jp
push
out
cld
mov
add
xchg
enter
pop
adc
inc
jmp
sub
inc
add
js
mov
subl
ret
cmp
mov
add
pop
fs
xchg
cmp
test
mov
loopne
adc
es
mov
inc
xor
and
aas
out
jmp
jb
cmp
ja
add
cmp
adc
cmp
jne
mov
sti
dec
shll
leave
adc
mov
sbb
add
jl
pop
pop
mov
enter
cli
fiaddl
sbb
adc
sbb
inc
xchg
lret
push
and
imul
test
test
aas
sti
pop
dec
insl
cs
push
movb
jmp
or
mov
pop
mov
iret
cmp
pop
and
test
push
subb
xchg
ret
fists
and
movl
push
inc
int
add
rcrb
fldl
pop
mov
into
testb
sbb
pop
cmp
mov
pop
lods
sti
scas
stos
mov
test
mov
idivl
sub
andb
and
xorb
nop
or
dec
daa
ror
push
add
adc
add
sbb
cmp
mov
pop
pop
jp
leave
adc
shr
rcrl
inc
imul
lea
sar
pop
or
gs
into
movswl
data16
imul
push
ljmp
cwtl
sbb
mov
mov
mov
inc
xorl
stos
dec
mov
add
imul
mov
jbe
push
push
ret
and
jl
inc
mov
jnp
or
dec
jle
repnz
lcall
mov
mov
mov
mov
and
and
lea
inc
fisttpll
pop
xor
adc
jecxz
imul
call
xchg
test
dec
jmp
add
loopne
dec
rorl
inc
testl
aas
lods
cmpsb
mov
mov
outsl
push
adc
pop
rorb
lods
xor
inc
mov
les
pop
les
dec
or
or
cltd
data16
xchg
dec
push
sub
shrb
into
movsb
imul
cmp
lods
shl
mov
movsb
sub
pop
out
data16
xchg
mov
pusha
mov
jl
pop
aaa
dec
sti
push
lods
and
rorb
jg
jle
cmp
lcall
shll
mov
add
shr
and
ret
pop
or
and
rorb
pop
negl
sbb
push
lret
cmpsl
mov
mov
cmp
and
inc
mov
jle
cwtl
shrl
cmpsl
jne
test
pop
shr
or
mov
dec
mov
pop
jp
jmp
nop
sahf
jnp
lock
dec
and
jnp
repnz
sub
push
testb
dec
cli
cli
inc
cli
and
cmp
dec
dec
dec
movsl
test
and
movsl
or
jge
sub
cmpsl
or
cli
adc
and
ficompl
ret
mov
dec
xchg
and
outsb
mov
push
fidivl
fldenv
enter
mov
mov
insb
movsl
jmp
mov
dec
xlat
mov
xor
push
mov
dec
sbb
add
push
mov
or
pushw
mov
loop
out
jecxz
xchg
xchg
jge
out
adc
and
mov
pop
mov
dec
mov
dec
movsl
and
daa
adc
sbb
push
cli
or
push
mov
inc
shlb
fdivrs
aam
xchg
pop
xchg
add
jbe
dec
sub
sbb
sbb
shrb
cmp
add
push
adc
xchg
rorb
or
sahf
mov
sbb
fcmovu
add
push
mov
sbb
insl
inc
rcrb
push
mov
int3
jg
add
xchg
add
idiv
inc
add
adc
jge
adc
jg
or
adc
orl
inc
push
in
out
or
jge
add
mov
or
cld
add
jne
xor
push
jns
fnsetpm(287
loopne
mov
or
pushf
pusha
mov
xchg
ljmp
cwtl
sbb
sub
setae
mov
idiv
psubq
sbb
movb
dec
inc
cmp
jle
push
outsb
push
aad
pop
outsb
call
inc
lods
gs
add
lods
adc
in
mov
rcrb
push
shr
pop
inc
rcrl
sub
fcoms
xor
fiadds
push
mov
insl
call
mov
imul
call
xchg
frstor
mov
pusha
lea
push
and
pop
lcall
inc
xor
push
in
fmulp
mov
sti
mov
add
popf
xor
inc
les
movsb
out
ds
loop
inc
addr16
sbb
imul
push
xorl
inc
js
add
sub
lea
fnsave
mov
sahf
mov
and
dec
int3
push
add
test
call
add
xor
add
add
sub
or
into
or
mov
inc
ljmp
jmp
mov
rcrb
jmp
cmp
jge
or
lahf
sub
cmpb
or
add
dec
cmp
imul
inc
dec
add
add
fadds
inc
les
mov
movsb
pop
ret
jp
jne
dec
sarb
or
adc
cmp
in
out
mov
mov
lret
mov
add
push
mov
nop
adc
test
mov
mov
mov
or
cmpsl
mov
dec
adc
and
ret
lcall
add
push
mov
mull
or
push
push
pop
rorb
adc
or
mov
or
add
rcrl
xchg
add
pop
jne
or
push
pop
scas
je,pt
sbb
ret
mov
cld
mov
ret
or
movsl
add
xchg
adc
or
xchg
add
test
fistpl
mov
mov
iret
xchg
xchg
lret
lret
into
pusha
inc
cli
xorl
and
pop
pop
fidivl
sbb
ret
xchg
mov
loopne
sahf
inc
ret
or
mov
sbb
loopne
inc
add
scas
rolb
imul
or
or
jo
dec
push
add
add
push
gs
je
das
push
mov
jae
mov
pop
or
pop
add
insl
add
adc
cmp
jne
and
mov
loope
test
add
es
out
and
push
cmpb
or
ret
outsl
mov
inc
add
movsl
ret
flds
jo
loop
clc
mov
mov
test
sbb
shll
push
scas
orl
mov
inc
subl
add
movb
daa
mov
loopne
mov
rorb
cmp
sti
loopne
sbb
repnz
test
adc
int
add
or
adc
into
mov
xchg
into
mov
mov
sbb
and
sbb
leave
repz
inc
jg
into
into
dec
inc
or
adc
sarb
push
pop
loopne
ficoms
and
mov
shlb
or
sbb
stos
push
lret
mov
ret
xor
mov
push
lcall
cmp
out
adc
push
into
enter
movsb
and
mov
ficomps
test
mov
and
mov
jp,pn
and
cmpsb
leave
adc
sub
lock
roll
xlat
insb
mov
cmpsl
fsub
movsb
lret
ljmp
mov
out
adc
cmp
pop
mov
add
loop
add
jno
loopne
mov
lahf
xchg
mov
or
enter
xor
scas
sub
sub
push
lock
scas
outsb
pusha
outsl
adc
rcrl
in
ret
jl
add
testb
add
je
jnp
sbb
popl
loope
jo
div
jle
rclb
sbb
add
jo
xorl
cmp
je
dec
mov
mov
jb
into
cmp
je
mov
or
mov
push
shl
pop
adc
jg
or
or
cmp
jbe
dec
sbb
cmp
sub
jmp
push
mov
movsl
sbb
sub
fisubrl
pop
lea
inc
pop
push
leave
mov
enter
pop
mov
ret
mov
into
das
add
stos
les
and
gs
and
inc
popa
test
dec
aam
add
scas
mov
fcompl
adc
loopne
jp
or
cmp
add
scas
pushl
mov
and
push
push
mov
push
mov
aam
movsb
mov
popf
fsubs
fmul
adcb
push
or
pop
cmpl
ret
sahf
mov
lret
xor
jb
pop
jl
rclb
cmpb
scas
adc
aam
ljmp
insb
or
push
jmp
popf
inc
push
aaa
sbb
dec
js
add
mov
movsl
mov
or
pop
cmp
test
inc
mov
test
daa
fldcw
add
xchg
pop
subl
push
push
or
pop
stos
sahf
mov
inc
dec
pop
add
push
mov
mov
push
stos
and
test
inc
cmp
andl
push
loope
aaa
cmc
dec
jge
test
shlb
add
je
and
push
ret
ss
js
push
push
dec
push
pop
and
cmp
pushf
inc
dec
mov
into
pop
jo
and
mov
mov
adc
shll
mov
cmp
lods
sbb
inc
add
mov
lret
ja
test
sbb
xchg
arpl
setl
sub
insl
add
jg
push
or
call
inc
js
lea
in
cmp
push
enter
in
adc
paddd
add
lret
mov
push
mov
je
xor
shrl
push
jmp
dec
fs
movsb
fistpll
xorb
ss
mov
sub
js
push
adc
pop
xchg
jno
fmuls
mov
sbb
or
dec
sbb
inc
movsl
xchg
cmp
push
fs
iret
mov
pushf
pop
dec
cmpsl
cmpsb
xor
push
mov
push
nop
lock
sub
add
mov
inc
pushf
ss
sbb
sbb
hlt
mov
push
pcmpeqb
jg
subl
aam
mov
jnp
ljmp
jbe
clc
dec
aam
sbb
mov
pop
movsl
gs
sbb
sbb
or
dec
lods
and
mov
mov
in
repnz
test
fs
test
cmp
jmp
and
lea
add
iret
xchg
sti
push
add
push
adcl
sub
add
and
add
add
test
pop
xor
xchg
hlt
in
sub
mov
lret
add
lea
movsl
pop
cltd
rcll
push
xchg
movsb
adc
mov
or
cmp
mov
jl
push
mov
dec
cwtl
push
jmp
loope
outsb
repz
pop
sbb
scas
add
orl
nop
xchg
jmp
add
inc
and
dec
ret
add
jle
ret
cltd
mov
push
add
add
data16
insb
mov
sar
xor
push
in
adc
sbb
push
dec
push
and
lods
outsb
nop
cmp
daa
test
sub
jnp
mov
roll
ret
push
mov
inc
and
ret
cmpsl
aas
mov
pop
or
mov
add
xor
ret
add
xchg
daa
and
add
in
jnp
mov
es
aas
add
ret
stc
adc
push
pop
in
push
push
pushf
ret
sub
or
push
push
push
shlb
sub
and
ror
sbb
inc
psrad
xchg
add
or
insl
cld
mov
loopne
dec
jmp
xchg
loopne
or
movsl
popa
sbb
push
je
inc
insl
and
cmpsl
clc
pop
pusha
xor
les
lcall
pop
cmp
xor
imul
mov
cltd
addl
call
dec
inc
imul
outsl
insl
dec
or
into
inc
mov
xor
jns
adc
sbb
cmp
xor
add
adc
or
scas
arpl
je
rcrb
xchg
lock
movsl
movsl
lcall
xchg
stos
xor
sbb
addr16
adc
fisubrl
jl
push
cmpsb
clc
pop
popf
mov
and
aad
sar
rorb
fiadds
lea
lds
sbb
ror
pop
sub
add
add
push
cwtl
mov
or
mov
push
fisttps
ret
inc
sbb
sar
mov
lock
data16
xor
inc
and
jo
adc
push
add
sbb
pusha
js
xchg
adc
adc
inc
inc
js
jg
inc
dec
call
sub
pop
xchg
push
cmp
dec
int3
arpl
jo
arpl
into
mov
imul
fidivrl
cmp
ja
mov
jmp
sub
jb
lcall
inc
imul
add
xchg
jge
cmp
loope
add
lcall
jp
inc
mov
sbb
cmp
adc
mov
add
or
sbb
cwtl
repz
out
cld
sbb
push
sbb
inc
cmp
adc
jp
repnz
in
neg
push
dec
test
jg
adc
lock
imull
aas
lcall
mov
test
rorl
cmp
mov
pop
shlb
popa
ret
call
aam
into
lock
cmc
cmp
in
rcrl
addr16
popa
dec
mov
add
sbb
add
push
or
jb
repnz
jbe
inc
jo
and
test
scas
pop
add
lea
stos
dec
aas
leave
xchg
test
ret
rorl
push
sbb
sub
push
add
pop
int
gs
repnz
pusha
test
test
or
aaa
sti
mov
push
inc
inc
loopne
pop
cmp
lock
loope
cmp
nop
pushw
ss
push
and
jle
sbb
mov
das
push
or
call
mov
xchg
lods
sub
lret
mov
cmp
mov
mov
lods
pop
push
adc
rcrl
ret
cmpl
add
add
outsl
ret
cmp
int
shlb
xchg
mov
jns
mov
mov
loop
mull
in
sahf
or
or
push
in
ret
push
cmp
movsl
jne
pusha
std
inc
adc
and
ds
or
jne
inc
sbb
xchg
lds
add
retw
test
js
out
rol
aas
sub
and
inc
jbe
lds
jl
sbb
jae,pt
cmp
adcl
adc
xchg
xchg
mov
jl
inc
xchg
fwait
sub
mov
or
add
add
cmp
enter
xchg
addl
cmp
jle
push
ret
jnp
dec
sbb
mov
and
out
dec
test
inc
pop
rolb
mov
and
or
add
orl
jge
incl
addl
sub
lods
ljmp
call
xchg
imul
add
or
or
loope
sbb
fldenv
add
inc
add
test
inc
inc
or
sahf
stos
pop
add
jmp
movsl
mov
mov
jmp
mov
gs
xor
cmpsb
cmpb
push
cmp
pop
das
dec
jl
outsl
jo
roll
cltd
lods
adc
dec
popa
mov
aam
cmpl
dec
pushf
pop
adc
cmp
jae
cmp
scas
test
jle
cmp
jg
mov
rolb
or
jecxz
xchg
daa
mov
test
add
push
xchg
test
loopne
ret
inc
outsb
fcoms
fcomps
pop
mov
rcl
jnp
adc
mov
cmp
hlt
xor
cmp
fwait
and
lcall
sbb
lods
pop
out
mov
rorl
add
addr16
or
sbb
xor
ss
in
mov
sbb
dec
or
andb
andb
push
dec
cmp
xor
mov
mov
xor
loop
inc
shr
xorl
fnsave
mov
and
sub
add
into
mov
push
pop
outsb
insb
sub
fisubs
or
aam
scas
or
jg
or
and
push
popf
add
jl
scas
cmp
cmp
add
popa
xchg
je
mov
xor
dec
xchg
sbb
add
xor
jmp
outsl
sub
sub
inc
arpl
testb
inc
cltd
jp
inc
dec
dec
insb
push
mov
notl
ret
adc
std
sub
shl
add
cmp
push
into
icebp
pop
adc
adc
xor
mov
je
dec
jne
push
lds
jp
dec
ja
fadds
and
xlat
push
jmp
xor
inc
sub
dec
lahf
je,pn
adcl
fcmovnbe
fsubrl
or
push
sub
fcoms
bound
cmp
scas
mov
mov
fs
inc
cs
arpl
push
loopne
fimuls
dec
dec
jo
xchg
jns
aas
mov
in
out
bnd
pop
loope
inc
sbb
dec
adcb
inc
js
jecxz
jmp
shlb
push
in
cltd
push
cmp
in
xchg
and
and
push
push
jb
bound
stos
fs
push
lods
mov
and
jae
popf
clc
dec
push
dec
rclb
xor
jl
jecxz
jp
clc
inc
mov
add
int
push
mov
je
cmpb
sub
lea
testb
jne
add
xchg
lods
fwait
popa
int
jnp
imul
les
lret
pop
xor
ret
fcom
xor
adc
adc
or
dec
or
push
push
bound
fnstsw
notb
cmp
ret
lret
mov
sbb
rcl
imul
movsb
insl
gs
out
or
add
adc
add
cmp
leave
test
add
sahf
jecxz
rorl
stc
dec
fildl
hlt
jne
inc
xor
adc
fisttpl
imul
testb
mov
add
or
add
outsl
test
jle
insl
scas
mov
es
les
push
pop
or
xor
inc
pushf
cmp
add
add
pop
dec
push
adc
jg
js
fsubr
push
icebp
adc
inc
sbb
pop
movsl
add
lock
addb
jbe
int3
leave
das
jo
lret
jne
lock
jb
ret
sar
and
jp
lock
or
mov
mov
adc
imul
inc
cmpsl
adc
fiaddl
and
mov
ret
push
mov
sbb
mov
cmp
fnstenv
call
je
jp
mov
fsubrs
adc
call
and
jl
ficomps
push
cmp
dec
cmp
cmp
inc
jae
jb
or
sub
cmpsl
push
fcmovb
jnp
and
aaa
pop
pushf
pop
xchg
call
sbb
icebp
jne
jae
scas
push
sub
mov
add
push
inc
bound
inc
pusha
jmp
test
or
or
fwait
or
adc
jbe
xchg
pop
push
outsb
stc
rolb
pop
sti
insl
pop
dec
test
insb
and
js
sub
sub
xchg
jns
inc
cli
ret
or
mov
adc
add
sbb
mov
and
cld
add
mov
testb
xchg
testb
add
jl
outsb
adcb
mov
push
jmp
inc
ss
and
jb
je
cmp
xlat
pop
push
add
jns
jb
cmp
jbe
clc
mov
xlat
push
push
push
or
movsb
or
mov
push
mov
push
add
das
aaa
out
pop
shlb
outsb
push
cmp
add
mov
test
mov
lcall
fstpl
fstpl
pop
jmp
cli
jne
cwtl
lock
pop
pop
sbbb
add
pop
in
mov
int3
sub
mov
push
inc
sub
push
push
insl
mov
and
xor
ljmp
in
fst
push
inc
repnz
hlt
push
cmpsb
inc
mov
push
je
rcrl
mov
jb
mov
mov
repnz
sbb
xchg
add
mov
and
push
xchg
mov
fisubrl
ljmp
adc
movsl
rcrb
and
adc
dec
shlb
ficoml
mov
test
mov
and
jnp
test
pop
and
inc
xchg
lock
fldcw
mov
fildll
roll
shlb
xchg
fstps
mov
xor
in
xchg
rolb
mov
or
sub
das
fcomp
out
inc
in
adc
adc
ret
fstps
add
cmpsb
pop
sbb
or
and
in
dec
xchg
inc
pop
or
shr
xchg
mov
xchg
nop
mov
inc
lea
mov
mov
dec
inc
adc
or
inc
enter
ret
jg
or
add
insl
add
pop
ljmp
xchg
adc
nop
mov
in
xor
adc
lock
frstpm(287
les
sub
cmp
add
xor
or
jb
sub
pop
nop
or
inc
add
pusha
insl
dec
outsb
fucomp
add
add
mov
call
or
in
inc
fs
inc
cs
fadds
pusha
cld
sub
outsl
nop
push
jne
add
iret
je
pushf
xchg
mov
mov
mov
scas
mov
add
adc
push
and
xchg
movl
xlat
dec
dec
das
pop
fisttpl
add
rorl
or
rcrl
enter
sbb
ret
push
add
inc
lahf
fdivr
sbb
and
adc
jl
inc
mov
sbbl
jno
andl
or
lock
xor
aam
adc
jge
dec
pusha
or
xchg
xchg
inc
pushf
sub
insb
adc
fcoms
xchg
or
cwtl
xchg
lret
mov
xchg
adc
or
in
inc
mov
sub
push
xor
in
test
fildl
in
adc
xchg
adc
push
mov
popa
add
stos
xlat
mov
cmp
shrl
enter
xchg
inc
xchg
push
pop
or
cmp
fwait
or
xchg
pop
es
mov
fwait
cwtl
inc
sub
cmp
rolb
xchg
or
mov
cmpb
xchg
mov
js
fdivl
sbb
cs
sub
and
push
enter
imul
call
adc
jbe
insl
les
ja
test
or
rol
push
xchg
in
adc
in
push
dec
outsb
unpcklps
cmc
sti
icebp
shlb
mov
daa
xor
cmp
mov
std
push
jno
pusha
es
fs
fs
xchg
dec
je
jl
xchg
add
ret
xor
call
adc
jb
lods
loopne
and
xlat
add
adc
adc
xchg
push
rcrl
int3
lea
cmc
rorb
call
xor
and
xor
jne
and
xchg
fmuls
in
sti
gs
pop
inc
push
lods
lods
add
scas
push
cmp
lods
push
clc
shlb
jns
adc
cmp
inc
or
xor
ret
sbb
sub
dec
test
lea
add
and
fistpll
add
jno
cmp
lock
mov
or
sbb
je
mov
stos
nop
push
flds
clc
sbb
jnp
push
cwtl
cmp
sbb
push
and
insb
fwait
xchg
adc
insb
inc
enter
aam
mov
dec
addr16
roll
add
and
sbb
lds
test
popf
lock
lock
push
dec
insl
sub
jl
dec
mov
fisttpll
pop
and
adcl
xchg
inc
je
fists
sbb
fsubrs
and
push
inc
xor
imul
and
inc
sbbl
lret
sbb
in
inc
push
mov
loopne
adc
pop
fdivl
jne
shll
shlb
mov
daa
sub
leave
and
cmp
add
or
push
subb
sbb
loopne
dec
cmp
or
mov
in
lods
push
cmp
scas
dec
or
or
add
xchg
xlat
pushf
or
lock
hlt
andb
xchg
fbld
add
adc
mov
sub
call
sub
insl
inc
push
and
or
dec
lea
dec
adc
dec
push
fdivrl
add
sbb
stos
adc
inc
fs
out
pop
inc
mov
es
dec
fs
pop
popa
and
mov
mov
and
je
push
repz
mov
addr16
fidivrl
or
shll
sbb
mov
and
imul
pop
jno
and
cmc
add
and
mov
data16
or
inc
or
call
les
and
dec
inc
mov
test
test
sbb
call
aaa
lock
mov
inc
pop
and
aad
mov
in
dec
xor
jl
adc
loope
in
fsubl
or
and
jl
movsb
addr16
adc
andl
nop
lods
jne
pushl
arpl
xchg
pop
jb
in
call
daa
pusha
and
addl
js
xchg
xchg
fdiv
mov
js
imul
jo
pop
ljmp
dec
push
add
jg
and
sbb
nop
sbb
xchg
xchg
decb
cmpsb
and
movsb
in
rcrl
in
in
jecxz
adc
cmpsb
insb
jne
shrb
mov
inc
mov
cwtl
fs
or
les
loopne
cmp
add
sti
xchg
mov
mov
jb
add
movsb
sti
push
es
and
shrb
fadds
jl
fwait
mov
adc
pop
dec
or
push
int
lea
daa
daa
cmpsl
mov
add
mov
xchg
in
add
mov
test
cmp
test
add
and
pop
inc
adc
fildl
repnz
cmp
cmp
nop
inc
or
or
xchg
dec
push
or
or
sub
or
inc
sbb
mov
sbb
enter
fwait
sbb
inc
inc
xchg
lsl
rcrl
inc
push
ret
xchg
mov
out
sbb
push
sbb
or
nop
add
or
adc
clc
sub
mov
add
mov
daa
xor
pop
nop
test
push
shll
xor
adc
leave
mov
adc
mov
imul
dec
popf
andb
filds
rcr
ret
sbb
pushf
sbb
jo
arpl
in
lea
sub
mov
sub
mov
and
rcr
mov
xchg
jne
ret
xor
sub
test
ja
imul
pop
pop
mov
mov
mov
in
mov
sub
or
add
and
cmp
movl
aam
cmp
push
adc
cmc
inc
dec
in
daa
add
ret
adc
or
repnz
iret
jl
imul
push
jge
das
rcrb
ljmp
shrb
mov
test
aad
leave
push
pushf
sub
stc
fs
adc
sub
sub
pop
or
push
sub
and
push
pop
nop
ret
cmpsb
or
call
pop
fidivl
push
push
ss
inc
stos
jecxz
das
add
movl
rorl
pop
js
jne
mov
or
pop
addr16
cmp
movsb
aas
mov
adc
ss
or
imul
mov
and
cmp
xor
insb
and
je
xchg
adc
pop
ret
push
in
test
ja
jo
adc
pop
xor
icebp
fdivs
cs
xchg
mov
cmp
cs
sub
outsb
loop
xchg
mov
xor
lock
sub
mov
popa
pop
xor
push
adc
enter
nop
and
jo
jb
jo
or
rclb
scas
push
loope
push
pop
pop
pop
add
sub
in
cltd
mov
xor
call
adc
or
push
and
adc
xchg
pop
lret
or
or
xor
or
addb
jno
xor
es
lods
das
cmp
or
or
pop
cmp
ret
jbe
fcmovu
mov
loop
div
popf
mov
add
sbb
jb
push
sbb
jno
xchg
add
adc
mov
insb
test
js
xor
push
mov
pop
mov
pushf
stc
dec
adc
cwtl
and
icebp
imul
adc
add
or
adc
push
jne
add
nop
out
or
ss
inc
or
movsl
ss
add
add
repnz
ret
cmp
int3
pinsrw
addr16
adc
dec
pop
test
int3
xor
maxps
iret
enter
test
mov
xchg
add
in
cmp
and
dec
out
jg
adc
movsl
ss
inc
dec
dec
roll
mov
insb
repnz
xlat
or
add
pop
mov
jmp
test
sarb
jnp
push
imul
add
rcr
inc
fsub
stos
push
and
insb
mov
stos
cmpsb
sbb
lock
das
xchg
or
cmp
jno
dec
orb
ss
int3
das
unpcklps
aam
adc
xchg
push
cwtl
in
mov
fdivrl
pop
xor
push
push
add
add
in
push
repnz
jl
mov
sbb
out
dec
cwtl
adc
dec
nop
pushf
mov
test
sub
rcpps
cs
adc
mov
mov
sub
inc
push
jl
popa
ret
or
in
bound
sbb
pop
lods
gs
aaa
inc
mov
lds
rcr
push
imul
fnstenv
bound
and
out
push
and
movsb
fdivr
add
sub
movsl
add
inc
roll
bound
push
adc
xor
imul
call
enter
add
fldt
mov
dec
and
and
and
inc
dec
inc
sub
mov
lret
mov
fcoml
pop
dec
aam
test
adc
jo
sub
dec
mov
nop
daa
prefetcht0
push
test
sbb
adc
mov
dec
mov
test
insl
xlat
xchg
sbb
push
cmp
inc
testl
inc
jp
dec
add
popa
xor
movsb
and
or
adc
sahf
cmp
pop
inc
in
ss
and
add
sbb
xorb
dec
int
or
push
imul
pinsrw
jne
xchg
mov
nop
notb
dec
xor
das
std
pop
inc
cmp
dec
out
mov
test
push
dec
add
in
dec
jns
insb
cmp
decl
imul
cmp
dec
shl
adc
arpl
cmpsb
and
mov
xchg
push
cs
or
jnp
js
lods
repz
rolb
push
sub
call
leave
aam
inc
cmp
inc
adc
nop
pop
xor
add
jge
and
jb
add
or
fdiv
aad
ret
xchg
mov
dec
sub
rolb
sbb
in
sbb
cmc
mov
sub
push
adc
icebp
pop
inc
arpl
leave
aaa
jmp
test
inc
jb
fildll
xor
xchg
pop
call
adc
addr16
arpl
cs
cmpsl
sub
dec
xchg
add
cmpsl
je
inc
sbb
xor
or
mov
xlat
xorb
cmp
dec
xor
rorl
pop
rclb
dec
int3
inc
aam
popa
scas
inc
sub
or
insl
push
aam
sub
test
push
mov
jnp
dec
call
in
mov
lock
movsl
xorl
cmp
repz
test
or
push
dec
lods
adc
ja
add
xchg
xchg
and
mov
and
cmpsb
or
hlt
jne
sbb
inc
push
mov
adc
cmp
sbbb
int3
gs
rclb
cmp
sub
enter
jecxz
cmp
iret
dec
lcall
jb
imul
add
add
aam
mov
cmp
dec
jg
jo
add
fcomp
sbb
cmp
mov
lds
divl
in
xchg
add
lods
ret
mov
push
jecxz
aas
pop
fdivr
dec
arpl
or
xor
mov
dec
xchg
test
jne
mov
mov
daa
push
adc
sbb
pusha
xor
cmpsl
and
mov
and
stos
lods
in
jne
dec
mov
movups
sub
sub
mov
sbb
adc
aas
sbb
or
js
mov
push
dec
xchg
mov
adc
jb
dec
adc
loopne
or
push
test
push
pop
sbb
fmuls
daa
mov
cmp
das
mov
outsb
movsl
lods
lods
test
rolb
jns
clc
clc
mov
ret
cmp
rolb
mov
push
scas
or
dec
repz
cwtl
js
pusha
add
js
popf
movsb
pop
dec
push
imul
nop
out
and
xor
or
and
lods
dec
jnp
sub
and
and
add
push
mov
fstl
and
rcll
leave
push
adc
aam
fstpl
or
sub
and
push
pop
imul
mov
es
sbb
add
adc
or
xchg
mov
cwtl
push
test
sbb
test
js
lods
adc
enter
pop
ds
inc
fisubl
and
sub
push
in
arpl
ljmp
pop
nop
mov
fnstsw
test
aam
repnz
bound
les
xorl
sub
fcoml
jne
xchg
sbb
sbb
shll
rol
mov
dec
leave
and
int3
mull
mov
iret
push
inc
xchg
cmpsb
push
or
or
sbb
fsubs
adc
insl
pop
push
sbb
fdivr
call
leave
loopne
push
iret
lods
test
or
xchg
sbbl
mov
nop
inc
xor
xor
fs
es
push
sbb
orb
adc
push
or
es
adc
inc
cmpsb
sbb
adc
or
aam
and
inc
mov
imul
cmc
mov
pop
push
mov
stos
push
jmp
dec
sbb
sbb
lcall
sbb
jns
pop
les
fucomi
loopne
lds
insb
stos
sbb
jp
notl
neg
mov
sahf
rorb
adc
fs
push
insl
mov
adc
es
jbe
adc
fs
xor
cmp
cltd
fs
dec
sbb
inc
fs
dec
cmp
push
nop
sub
pop
inc
inc
mov
dec
mov
idiv
fwait
mov
cmc
shlb
cwtl
dec
test
adc
enter
mov
leave
adc
movsb
push
pop
jno
rolb
outsl
iret
push
pop
sbbl
dec
and
test
and
add
add
rolb
sbb
aam
and
xor
xor
sbb
pushf
pop
xlat
or
or
stc
xchg
xor
std
dec
pushf
and
mov
or
push
jge
icebp
ret
dec
xchg
stos
xor
insl
lods
test
fistps
inc
enter
test
movsb
in
pop
bound
jmp
pusha
fisubl
es
push
mov
pop
adc
and
lock
int3
cmp
mov
les
rcl
data16
loop
aam
in
mov
adc
dec
and
mov
sbb
shr
fs
adc
push
sbb
adc
test
push
inc
in
dec
shr
push
xor
xchg
dec
lds
rcrb
out
test
bound
inc
inc
icebp
inc
adc
ja
mov
insb
and
iret
arpl
rolb
or
bound
jmp
out
pop
loopne
inc
repnz
mov
test
or
mulb
fs
adc
inc
or
dec
js
fstpl
xor
test
xor
leave
test
test
xor
loopne
movsb
stos
pushf
or
and
pop
sbb
xor
mov
int3
jmp
mov
dec
sbb
xor
outsl
in
xchg
fiaddl
push
fs
or
cld
cwtl
test
adc
and
add
aam
pop
jo
add
sti
xlat
or
xor
xor
in
cmpsl
jnp
enter
lds
fisubl
jbe
or
push
or
inc
test
out
daa
and
in
aam
adc
push
cmp
fcoms
dec
push
nop
imul
enter
ficoml
or
add
test
imul
sub
addr16
les
dec
lods
rorl
lret
in
jp
pop
pop
push
ficoml
in
jns
outsb
add
mov
outsb
ja
cmpsl
add
cltd
insl
stos
enter
lock
and
imul
pop
mov
adc
aaa
adc
rorl
ja
push
test
imul
cmovbe
or
inc
sub
inc
addl
rcr
idivl
push
pop
leave
xchg
mov
jb
jmp
sbb
push
arpl
inc
lret
out
lods
sub
ficompl
mov
enter
pop
fisubrl
ret
inc
aam
pop
and
loop
imull
call
or
leave
mov
lds
out
adc
xchg
insl
fildll
dec
sbb
mov
pop
in
int
sub
pop
or
pop
mov
int3
mov
jo
rolb
inc
test
pop
dec
dec
testl
xchg
lock
dec
les
lods
loopne
or
sbb
pusha
sub
jbe
in
das
fs
das
cltd
rolb
xor
outsl
adc
xchg
adc
jmpw
push
jg
ret
nop
adcb
or
shld
mov
stos
inc
in
add
xor
mov
push
adc
aam
les
ret
orb
pop
addb
nop
imul
mov
xor
add
and
push
test
xor
mov
add
lods
insb
pushf
shlb
add
xor
sub
inc
fs
imul
xchg
dec
es
insb
lods
push
dec
es
mov
cltd
fs
push
jl
je
fs
dec
test
cwtl
fs
dec
es
mov
dec
es
mov
pop
inc
jg
mov
xlat
ja
lea
mov
xchg
and
jmp
cwtl
jns
fwait
push
pop
fcoms
xchg
mov
mov
pop
adc
sbb
je
pop
cltd
movnti
mov
or
loopne
adc
xor
add
insb
je
in
and
adc
pushf
movsb
and
mov
int3
aam
in
arpl
sub
inc
push
fsubrs
adc
push
mov
and
sbb
mov
pop
cmpsb
loope
popa
and
int
outsb
inc
test
and
leave
js
pop
aam
cmp
mov
mov
cmp
cmp
jb
mov
test
xchg
dec
xor
je
fs
lret
and
jecxz
test
sub
test
and
mov
and
or
nop
test
dec
dec
test
aam
add
aam
cmp
mov
arpl
push
ja
gs
cwtl
ss
aam
sub
stos
xchg
xor
roll
pop
add
cwtl
sbb
mov
xchg
inc
xor
loop
sbb
movsb
pushf
loop
cmp
push
aaa
adc
leave
and
and
pop
int3
jns
push
push
jb
js,pn
xlat
addb
lods
sub
and
rcr
cwtl
dec
insb
xchg
mov
and
and
or
push
sbb
inc
inc
and
sbb
leave
and
mov
sbb
and
xchg
dec
xor
pusha
negl
insl
cmp
jecxz
sub
dec
inc
fsts
adc
jg
mov
xchg
jb
loopne
leave
push
and
lods
adc
xor
test
test
cltd
pop
scas
add
pop
mov
add
shrl
or
xchg
mov
push
gs
test
add
test
xor
rcrb
in
dec
popf
gs
or
cmp
or
aas
adc
pop
aam
add
bound
idivl
cmp
jmp
mov
rcrb
sbb
iret
pop
nop
mov
int3
or
jge
roll
sbb
imul
mov
xchg
sbb
push
mov
ja
xchg
sbb
xor
pushf
mov
and
mov
es
enter
xor
xchg
mov
fmul
les
xor
push
or
filds
test
jl
add
and
adc
enter
pop
sbb
ja
sbb
or
int3
xchg
sbbl
adc
mov
scas
popa
orb
mov
mov
subl
or
rolb
stos
and
fwait
sbb
movsb
sbb
movsb
adc
or
inc
es
sbb
jg
mov
cmp
nop
repnz
js
xor
mov
sub
mov
adc
dec
fwait
add
mov
mov
imul
sbb
or
nop
mov
movsb
mov
subl
fs
push
or
push
nop
or
push
pusha
popa
sarl
inc
or
inc
sbb
sbb
push
sbb
dec
adcl
lea
aam
andl
jbe
xor
in
adc
xlat
rolb
and
adc
insl
hlt
cltd
inc
loop
add
or
test
cmp
in
sti
leave
dec
push
or
mov
fs
and
sub
push
movsb
les
lds
clc
mov
in
cltd
scas
cltd
add
ss
cld
icebp
sar
pusha
rcrb
xor
repz
sbbb
clc
icebp
cmpl
xor
popl
mov
mov
or
push
enter
and
mov
fs
adc
bound
push
sbbb
sub
pop
shr
shrb
scas
and
scas
dec
ret
inc
insb
jle
call
inc
das
out
sbb
mov
or
dec
pop
mov
shlb
rolb
pop
out
and
sbb
fsubr
or
hlt
loope
add
fld1
mov
mov
fwait
xchg
and
or
sbb
out
leave
cmpsl
adc
cs
push
test
inc
test
dec
cmpsb
sbb
inc
xchg
movsb
aad
cmp
outsl
lods
adc
imul
sub
sub
insl
push
popa
sub
movsb
andb
mov
sub
test
imul
orb
pop
jecxz
sub
sub
adc
negl
dec
ss
dec
mov
jmp
mov
inc
push
inc
jecxz
stos
sbb
fsubl
movsb
es
cwtl
aas
pushf
fadds
outsb
adc
jnp
inc
mov
bound
push
test
dec
dec
dec
ret
sbb
xchg
lods
sub
inc
fsubs
ret
scas
adc
aam
inc
in
movsb
iret
insl
adc
adc
or
scas
test
fisttpl
shrl
xor
adc
nop
ja
fiaddl
adc
add
fstpt
aam
nop
sub
pop
pop
adcb
and
adc
xchg
dec
test
sub
aas
ret
xor
std
add
xor
xor
dec
fdivl
inc
or
js
movsl
movsl
cs
sub
cmp
push
and
insl
mov
push
mov
cmp
inc
lods
jbe
add
dec
cli
inc
adc
mov
cli
lahf
adc
inc
dec
add
rclb
daa
pop
dec
rclb
scas
test
lcall
inc
sahf
lods
cmp
je
movb
add
ss
int
inc
add
in
lcall
test
arpl
xor
js
dec
xor
xor
jo
fnstenv
inc
cmpsl
nop
cmp
cltd
clc
mov
and
xor
and
adc
adc
pop
nop
mov
mov
dec
add
lahf
cmp
js
sbb
inc
dec
int
rolb
popa
out
test
sbb
xchg
push
mov
xchg
bound
je
decl
rcrb
jno
xchg
xorb
ds
enter
jge
test
jbe
sbb
add
addb
push
ret
pop
and
xchg
inc
adc
or
push
mov
pop
shlb
mov
imul
lods
adc
test
mov
push
sbb
shl
movsb
mov
add
push
ret
adc
push
popf
or
dec
pop
pop
movsl
lahf
sbb
sub
cvtpi2ps
cmovae
mov
fadds
add
mov
insb
nop
sub
push
fmul
add
inc
sub
push
push
pop
or
jp
push
push
add
nop
nop
notb
sub
lods
pop
push
push
inc
mov
lea
cltd
loopne
cwtl
xchg
or
inc
sub
fwait
mov
sti
out
nop
out
dec
push
cld
hlt
or
repnz
or
fsincos
cmpsb
push
mov
sahf
or
sbb
lods
or
in
fists
jmp
pop
sub
push
sbb
out
divl
fcomps
movb
test
xchg
and
ds
mov
and
inc
lahf
push
les
push
das
xchg
mov
loopne
imul
push
scas
cmp
cmp
adc
cmp
and
dec
sub
inc
pop
push
or
push
push
add
mov
dec
mov
imul
dec
out
cld
mov
pop
mov
cltd
mov
sub
or
mov
rol
dec
mov
push
dec
or
jmp
jl
adc
cmp
sete
icebp
gs
es
or
push
xchg
push
push
pop
aas
in
and
mov
test
jg
sub
in
mov
inc
std
add
jle
mov
add
ds
repz
add
sbb
addb
cwtl
test
mov
sub
inc
bound
sahf
add
inc
push
roll
lret
insl
ss
in
inc
or
pop
push
scas
add
jg
mulb
add
inc
orb
jnp
mov
add
pop
or
adc
mov
rcll
xchg
adc
or
cmp
jg
rclb
cmpl
test
add
nop
add
into
pop
adc
test
dec
iret
repz
ds
imul
push
sub
and
push
mov
pop
cmp
imul
xor
add
push
incl
sub
adcb
mov
popa
test
inc
mov
and
insb
outsl
arpl
xorb
outsb
push
mov
pushl
popa
arpl
jne
jb
outsb
je
add
das
add
push
lahf
adc
insl
adc
cs
sti
jg
inc
outsl
jb
js
je
jb
gs
add
or
outsl
mov
stc
testl
add
add
jne
les
fstp
mov
push
jb
dec
push
add
dec
lock
add
aaa
or
ds
add
xor
inc
push
add
aas
jmp
mov
pop
dec
add
sub
mov
je
push
insl
xchg
je
je
jo
addl
fisttpl
mov
daa
cmpsw
insl
push
push
mov
jae
bound
pminub
sbb
popa
out
pop
cmp
insb
mov
fsubrp
jp
outsl
or
mov
fisubs
gs
bound
jne
fnstsw
and
outsl
jmp
jo
mov
and
stos
insl
and
jne
sub
push
imul
scas
cmp
jne
inc
push
lock
pop
fmull
sahf
xchg
sub
dec
sub
fs
in
icebp
sub
insb
lcall
repz
lahf
popa
cmp
push
sbb
inc
arpl
mov
jecxz
inc
or
daa
sbb
or
fbstp
xchg
js
outsb
bound
jnp
adc
ret
arpl
loopne
outsl
fistl
insl
and
cmp
mov
push
filds
xchg
popa
in
mov
xor
fidivl
and
nop
or
xor
lds
lock
andl
mov
fidivrl
jg
popa
sub
or
outsl
inc
xchg
lahf
aaa
jg
shll
dec
iret
fisttps
dec
fs
xor
ficoms
data16
sbb
push
pop
jbe
imulb
stos
repnz
outsl
xlat
xchg
das
rcrl
jae
lods
xchg
aad
sbb
jo
lahf
sbb
dec
outsl
aas
or
arpl
mov
scas
sbb
mov
lock
push
mov
and
pop
adc
jmp
imul
sbb
mov
inc
shll
popa
leave
push
or
xor
outsl
pop
sub
add
adc
add
pop
mov
pop
insl
lret
je
or
popa
mov
fisubs
test
scas
popw
pop
jo
testl
sub
mov
cmp
xor
cwtl
lods
dec
addr16
add
jmp
andb
ret
fists
push
inc
inc
mov
push
adc
das
sbb
dec
push
adc
push
sbb
sbb
jl
out
mov
sbb
test
fbstp
rcrl
push
das
push
pop
sahf
push
sbb
sbb
iret
cmp
mov
cmpsl
out
ds
incl
dec
mov
addr16
jbe
fdivs
add
jo
les
bound
lret
pop
out
gs
cmp
imul
mov
ds
mov
jo
out
cwtl
shll
cmpsl
push
fwait
cmp
fnstsw
dec
add
sbb
xor
add
add
and
cs
jns
add
das
das
and
and
pop
idivb
daa
dec
inc
mov
out
fsubs
push
push
decb
and
ret
dec
pop
mov
pop
aas
dec
inc
push
push
inc
sub
daa
mov
push
daa
pop
imul
outsl
dec
and
mov
add
das
pop
mov
imul
iret
jns
mov
out
loopne
push
arpl
jnp
insl
pop
pop
jp
jae
fbld
je
and
sub
aaa
in
ljmp
ds
imul
mov
arpl
fcomps
out
mov
cmp
add
dec
jmp
adc
add
das
das
adc
dec
push
inc
inc
arpl
bound
dec
outsl
jbe
inc
mull
dec
arpl
inc
jo
sub
sbbl
jne
jne
xor
insb
xchg
outsb
jle
mov
imul
mov
popa
outsb
adc
cmp
scas
cmpsl
xchg
popl
aaa
out
jg
addr16
popa
je
jb
xor
lods
std
int3
lahf
mov
jae
push
gs
insl
mov
jne
dec
outsl
outsb
and
bswap
cmp
pushf
xchg
pop
dec
inc
aas
arpl
out
dec
or
sti
fldl
mov
jae
in
test
push
inc
push
popa
insb
jne
inc
sub
mov
ret
mov
and
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
or
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
aaa
mov
mov
rcrb
pop
pop
pop
lock
mov
bound
gs
imul
jo
mov
mov
ja
jns
jnp
jge
jg
xchg
dec
outsw
adc
lcall
loopne
pop
in
jnp
inc
add
orb
sar
std
aas
ds
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
mov
je
arpl
imul
imul
cmp
mov
add
jo
xor
es
popa
js
addl
je
pop
dec
pop
sbb
fists
lods
dec
out
ret
ret
sub
in
sbb
int3
adc
imul
add
add
add
add
lds
push
pop
push
add
xor
addr16
test
add
pusha
push
mov
js
or
cmp
add
sti
mov
add
addb
add
xchg
adcb
test
add
orb
daa
push
cmpb
push
and
sub
jb
int3
push
jo
lret
cs
push
push
jmp
push
outsb
imul
jo
pop
adc
pop
or
sbb
adc
iret
leave
xor
sbb
daa
xchg
lea
mov
and
leave
and
add
add
push
xchg
shl
inc
scas
mov
lret
hlt
aad
cmc
add
lods
mov
stos
in
add
sbb
cmp
pop
sbb
push
inc
sub
cmpsl
out
rdtsc
ss
jmp
dec
inc
or
pop
stos
push
notl
fs
add
cs
jae
fstl
jbe
bound
je
outsb
data16
push
jbe
xorb
inc
xor
push
jae
xchg
daa
pop
lea
mov
popa
addr16
outsl
js
push
xchg
cs
aam
testb
insb
jo
and
and
mov
aaa
insb
les
dec
imul
or
inc
mov
mov
lods
ds
cmp
dec
inc
jb
jns
daa
mul
mov
pop
and
mov
cmpsl
cs
je
and
arpl
je
sbb
mov
push
insl
push
fsubrl
push
jbe
mov
cld
mov
fdivl
or
jb
and
xor
pusha
inc
jbe
push
push
ss
jns
insl
and
mov
rolb
and
pushw
in
push
popl
inc
imul
pusha
gs
add
push
lds
insl
adc
dec
test
bound
adc
popa
insb
jae
mov
pop
in
adc
push
jae
or
cmp
jo
pusha
insb
call
xor
addr16
subl
icebp
or
gs
mov
mov
adc
sbb
in
push
push
push
push
dec
testl
dec
push
scas
cltd
push
lods
lea
dec
push
inc
ret
dec
jge
insl
jl
clc
adc
jb
push
imul
call
mov
outsl
xor
inc
in
mov
das
gs
or
or
sbb
divb
pusha
push
mov
addr16
jp
scas
mov
xchg
daa
jnp
pop
loope
mov
popw
pop
cmp
dec
jl
cmp
or
ds
and
iret
repz
sub
es
lcall
sub
sub
dec
mov
outsb
add
sub
cmp
pop
or
sbb
das
push
and
aaa
aaa
cmp
outsb
cmp
ds
mov
pop
pop
jne
stos
addl
push
jbe
sbb
rcr
das
jo
ss
gs
imul
mov
dec
xor
sahf
inc
pop
and
mov
fs
jo
sub
xor
jl
out
sub
pop
cs
add
repz
xor
jge
iret
repz
cld
sub
imul
push
aam
iret
repz
int3
enter
cmp
repz
lods
test
lcall
cwtl
push
je
xchg
idivl
push
mov
dec
jl
push
jo
out
sahf
out
fs
pop
pop
sahf
out
sahf
push
push
dec
inc
xor
cmp
out
and
cld
sub
enter
repz
push
lcall
sbbb
fs
xor
cmp
out
sbb
lock
test
cmp
repz
in
sub
fwait
loope
mov
sub
push
add
jl
and
adc
sub
in
add
xchg
inc
sub
dec
lods
in
sbb
mov
inc
addl
mov
addb
stos
ljmp
xchg
dec
leave
push
mov
add
add
dec
cmp
add
ja
xor
push
mov
inc
adc
xchg
jnp
inc
mov
sbb
filds
insl
sbb
jle
add
addb
xchg
lea
xchg
xchg
call
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
pushl
mov
mov
enter
int3
int
iret
rcl
rcl
aam
call
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
inc
adc
idiv
stc
cli
sti
cld
std
jmp
inc
test
xchg
loope
push
sub
incl
rclb
popa
and
xchg
js
popa
data16
out
pop
inc
test
jns
push
xor
test
jb
add
ds
scas
mov
aaa
push
arpl
sbb
insb
fs
sbb
lods
xor
push
mov
or
aam
jmp
push
setl
scas
add
sub
add
inc
adc
push
je
xor
xor
push
dec
inc
dec
cmovns
fwait
cmp
push
cmove
push
or
call
imull
adc
decl
inc
call
rclb
mov
out
xor
mov
inc
jnp
inc
loop
mov
ds
pop
adc
decb
or
cli
jb
jge
arpl
cmp
fbstp
jg
adc
fisubrs
cld
push
mov
and
cmp
dec
imul
lcall
iret
lret
add
inc
mov
mov
sub
sti
add
dec
fwait
ss
sbb
pop
jns
ds
xor
dec
inc
dec
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
incl
ljmp
and
cmp
cmpsb
das
xchg
pop
and
xchg
lret
incl
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
iret
aas
sbb
insb
mov
out
leave
ljmp
orb
pop
test
xor
jle
dec
add
scas
lods
dec
lock
xor
or
mov
aas
mov
pop
pop
repnz
hlt
and
es
mov
fcompp
add
lds
outsl
loope
add
dec
cmc
ja
sub
int
movsb
pushl
or
shlb
or
jmp
sub
xor
sub
mov
mov
ds
and
inc
cmovg
aaa
mov
xchg
jmp
and
test
jle
imul
xor
sti
es
jae
movsl
xchg
mov
lret
out
and
data16
scas
sub
inc
cmpsl
subl
js
sub
ret
bound
jg
subb
jne
fs
pcmpeqw
ss
sti
or
ja
popa
daa
fucomi
push
or
add
je
push
lods
push
mov
pop
mov
je
mov
dec
loopne
mov
ret
sub
fcomi
test
jb
add
ja
add
sbb
push
nop
nop
push
pop
xchg
add
xchg
imul
sbb
lret
idivl
jae
insl
jle
push
lods
cmp
cmpsl
mov
and
loope
mov
jmp
arpl
repz
mov
fbstp
out
push
sbb
inc
mov
push
mov
pop
jg
mov
xor
insb
daa
jnp
and
push
das
cmpsl
cmp
or
push
add
add
push
xor
adc
faddl
sti
sbb
jns
outsb
xlat
cs
cmp
fs
mov
cmpsl
xlat
pushf
or
mov
je
xchg
js
sub
mov
aas
cmpsl
cs
push
out
add
xchg
jo
subl
cmp
pop
pop
mov
jne
adc
dec
xlat
hlt
and
out
jo
imul
call
es
and
cmp
xorb
daa
adc
push
mov
cmpsl
sbb
inc
xchg
inc
arpl
mov
dec
js
mov
mov
mov
dec
jp
pop
loopne
loope
aas
ja
pop
rorl
dec
jecxz
jnp
mov
sub
ljmp
test
pop
mov
shll
inc
xlat
and
je
and
outsb
ficompl
daa
pop
xchg
jo
arpl
add
gs
loope
jp
jne
xor
and
dec
lret
arpl
mov
pusha
push
and
pop
in
jo
pop
inc
mov
add
fdivs
fldt
dec
mov
roll
add
arpl
mov
lret
sub
stos
mov
inc
sub
daa
into
ret
ss
scas
js
jno
or
jo
add
test
push
into
pop
aaa
sbb
mov
je
mov
push
add
adc
arpl
mov
inc
cmp
arpl
cmovnp
dec
loope
hlt
andb
data16
pop
daa
out
or
les
xor
subb
mov
out
jnp
hlt
arpl
adc
aaa
sub
add
or
fwait
test
mov
pop
push
and
scas
ljmp
sub
and
bound
cmp
dec
aas
loope
push
push
push
inc
pop
push
out
cmp
daa
jne
add
dec
pop
outsl
dec
fwait
jp
rol
sbb
inc
das
push
hlt
mov
push
adc
push
clc
ret
js
mull
dec
xchg
jne
pusha
testl
add
sub
ret
dec
sub
outsb
outsb
sub
and
scas
out
jmp
push
fiaddl
bound
jae
imul
push
push
pop
mov
addr16
sti
push
rdmsr
scas
xchg
jecxz
push
bound
or
push
out
arpl
pop
mov
adc
outsl
jmp
add
mov
in
dec
outsl
insl
cli
mov
cs
mov
add
es
or
out
jecxz
je
inc
push
inc
scas
imul
mov
arpl
dec
insb
xchg
xor
inc
inc
dec
add
dec
out
test
out
adc
mov
add
ss
mov
iret
mov
inc
pop
cs
xchg
dec
por
adc
pop
mov
fdiv
mov
addr16
outsl
or
ja
sbb
inc
out
jmp
pop
push
aas
ds
testl
or
mov
add
inc
inc
jl
jl
and
jl
mov
mov
imul
mov
and
addr16
mov
stos
das
mov
push
pop
sbb
jecxz
fidivrl
jnp
cmp
jns
push
mov
pop
lods
fnstsw
adc
rcr
jl
pop
jnp
cmp
pop
imul
jmp
adc
insl
ja
add
mov
lea
pop
bound
outsb
jg,pn
and
add
mov
mov
jge
cmp
dec
outsl
jo
js
lret
jl
jo
loopne
and
jns
mov
mov
fstpl
ret
loopne
pop
fisubrs
fs
mov
dec
lock
loope
adc
jl
ret
sbb
push
repnz
inc
repnz
lods
js
mov
es
add
jbe,pt
push
imul
inc
pop
and
sbb
add
push
test
push
jle
add
sub
mov
mov
xlat
aaa
sbb
push
jecxz
daa
inc
div
push
imul
jb
sahf
inc
jns
jae
jae
mov
sbb
pop
andb
inc
fisttps
xor
pop
jg
pop
cli
js
cli
add
mov
clc
das
pop
pop
pop
push
mov
jb
rcrb
pop
pop
data16
aaa
inc
mov
insb
roll
push
mov
aas
adc
popl
mov
aaa
es
loope
inc
outsl
das
addr16
ffreep
push
lcall
scas
push
add
add
inc
xchg
inc
cmpsl
stc
xor
fiadds
cmp
scas
fnstcw
ss
add
lret
ss
pop
cwtl
ss
and
mov
fisubrs
xlat
fimull
push
mov
dec
ds
xor
dec
sti
push
pop
push
push
lds
imull
test
push
testb
push
inc
jg
idivb
iret
push
es
ds
pop
jmp
out
jl
cmp
and
pop
test
shr
add
aas
pop
xlat
insb
or
sub
inc
pop
or
fwait
popa
shrl
fidivrs
mov
sbb
repz
xchg
stos
push
leave
pop
or
cmp
inc
outsl
jg
adc
jns
inc
push
inc
and
call
imul
ja
iret
pop
aaa
dec
and
push
orl
sub
jae
imul
pusha
or
daa
inc
addr16
ret
sub
aaa
dec
push
add
or
or
xor
scas
push
lahf
jae
aas
rcl
cmp
mov
push
and
pop
out
pop
fnstsw
push
gs
insl
pusha
push
popa
jne
or
ss
push
and
dec
bound
xor
pop
sub
and
push
icebp
scas
aad
sahf
and
je
das
push
sahf
out
fimuls
jg
stos
fstpt
pop
jl
jne
jne
jp
mov
out
cmp
xchg
scas
mov
and
sahf
jnp
rcrl
or
bound
aas
add
ja
outsb
jbe
les
adc
gs
data16
pushf
je
cmp
push
mov
js
push
push
jo
jb
into
jb
out
jge
mov
and
jae
sbb
pop
insb
imul
cmp
and
and
arpl
xor
jle
fbld
cmp
fs
adc
test
adc
mov
mov
mov
outsb
je
ss
sbb
imul
outsb
outsw
sub
ja
adc
fcomps
and
sbb
mov
xor
fmuls
xchg
push
daa
imul
cmpsl
xchg
or
dec
pop
push
scas
ja
mov
push
ja
push
mov
add
jp
scas
shlb
add
inc
cmpl
push
pop
inc
adc
xlat
mov
addr16
dec
push
and
mov
aaa
push
sbb
mov
xchg
js
push
pop
mov
sub
cmp
pusha
and
jo
cs
sti
mov
ret
push
or
xor
push
iret
lea
push
cmp
pop
push
into
or
or
or
test
cmp
sahf
cmp
cmpsb
pop
mov
aas
add
mov
ret
data16
and
mov
fdivl
sahf
outsl
loop,pn
lcall
repnz
xchg
fldenv
sub
push
or
jo
inc
or
pusha
test
mov
inc
mov
push
add
les
dec
inc
out
push
sbb
pop
mov
outsl
or
or
movsl
cmp
adc
lods
sub
cmp
hlt
push
imul
inc
jle
add
dec
icebp
dec
outsl
adc
lods
pop
or
fmull
aaa
scas
orb
test
dec
js
push
fiaddl
mov
dec
add
lcall
add
lcall
call
scas
and
lcall
adc
push
popa
add
add
and
sbb
cmp
add
lods
fimull
dec
jae
fidivrl
data16
pop
fildl
sti
dec
push
das
mov
xor
arpl
pop
cli
add
xor
vmptrld
fs
add
mov
in
add
and
inc
sub
into
jle
rolb
dec
pusha
into
movb
push
mov
cld
jbe
ss
js
lret
iret
inc
lods
inc
rol
push
ja
add
jbe
out
imul
push
xlat
inc
and
push
push
inc
add
adc
adc
sub
fsubrp
pop
shlb
or
or
lods
mov
adc
js
add
add
jge
cmp
inc
jg
push
fisubrl
sahf
and
sbb
jmp
aad
add
mov
or
ja
jg
add
or
addr16
andl
arpl
outsl
jo
pop
pop
add
addr16
mov
pushf
push
cmc
sub
imul
arpl
je
lahf
inc
and
push
aas
shlb
jmp
ja
andb
adcl
push
pop
icebp
cs
jb
or
push
xchg
out
stos
pop
sub
faddp
lds
push
cs
add
stos
lahf
mov
cmpsb
mov
shlb
aaa
sbb
je
inc
sbb
ljmp
nop
sbb
add
or
jnp
inc
pop
inc
repz
pop
add
lea
subl
push
imul
push
or
inc
arpl
mov
jae
mov
aaa
jno
push
add
fistpl
and
mov
outsl
lock
or
pop
das
dec
adc
inc
sbb
arpl
shrl
imul
ss
inc
and
into
shlb
roll
ret
add
mov
ret
out
pop
rcr
out
test
addb
mov
inc
inc
repz
jp
std
ret
cmpsl
xchg
xor
cmp
mov
sub
pop
pop
jb
pop
scas
inc
outsb
cmp
sbb
xor
ficomps
fldt
sbb
xchg
out
mov
mov
shrl
mov
lahf
sti
pop
rcll
or
cmp
push
xchg
push
and
pop
xchg
push
fstp
mov
jnp
jb
xlat
test
push
mov
inc
sti
jp
rcr
cmp
test
adc
add
and
or
addr16
xor
jnp
cmpsl
xchg
aas
xor
xor
arpl
push
sub
add
xlat
es
cmp
pop
inc
outsl
daa
es
mov
sub
ja
arpl
cmp
shll
popa
shrl
mov
jae
dec
sbb
sub
xor
hlt
push
inc
arpl
out
pop
xor
scas
inc
jne
and
adc
xor
out
jecxz
sbb
fwait
test
test
xchg
loopne
adc
add
cmpsl
adc
arpl
jne
sub
imul
ret
test
test
inc
sbb
ljmp
xor
sub
aaa
xor
inc
push
xor
insl
stos
jp
das
das
dec
cmp
outsl
push
inc
dec
adc
mov
xchg
cmp
stos
xorb
das
add
mov
scas
cmp
les
dec
pop
out
clc
fs
pop
push
or
lds
push
ljmp
pop
rclb
out
lahf
fmull
xorl
jo
and
dec
das
sub
sbb
pop
inc
aaa
lret
cmp
mov
jecxz
pop
popa
xchg
cmp
rorl
or
mov
add
ret
pop
cmova
dec
mov
push
sub
ljmp
cmp
addr16
push
pop
xchg
cs
cs
or
sbb
push
bound
mov
xchg
arpl
out
xchg
sbb
pop
add
dec
je
sub
movsb
push
fisubl
cmp
cwtl
scas
mov
inc
and
lret
sub
xor
sub
roll
or
inc
es
lahf
rcr
movlps
cmp
and
push
mov
call
push
pop
minps
mov
aas
push
fs
or
inc
dec
jle
dec
mov
jmp
pop
jno
mov
repz
push
mov
stos
push
scas
mov
outsl
push
imul
push
sahf
test
mov
or
sbb
iret
jp
scas
mov
add
roll
mov
or
lret
pop
add
dec
fisubrl
pusha
fistpll
cmp
out
or
lods
adc
ja
adc
pop
mov
stos
das
and
mov
imul
xor
push
mov
push
mulps
aaa
out
ss
adc
mov
int
sbb
outsb
ss
int
sbb
sbb
pop
pop
pop
jmp
test
fwait
out
into
js
and
and
inc
cs
push
and
outsb
bound
mov
pop
and
xor
inc
dec
pop
lea
das
dec
sbb
cmpsl
arpl
jno
jno
lret
push
pop
sarl
mov
out
mov
xchg
pop
sti
push
out
or
shll
xchg
pop
pop
jg
addb
xor
lods
daa
sub
dec
pusha
pop
ret
lea
or
push
loop
add
popa
sbb
cmp
sub
jmp
add
mov
daa
cmp
mov
mov
test
add
out
mov
push
lods
lahf
out
cwtl
mov
aam
fwait
dec
jo
loop
pop
mov
mov
das
sbb
lds
popa
sbb
jg
sub
push
add
sub
fildl
push
xor
or
fistpll
push
mov
xor
mov
movntps
das
pop
bound
and
xchg
fimuls
xchg
aaa
inc
test
inc
and
mov
inc
jbe
mov
jmp
bound
push
jecxz
inc
mov
daa
mov
imul
scas
xor
arpl
xor
or
jnp
jge
mov
repz
jae
xor
fs
insl
popf
or
adc
das
inc
cmp
daa
jmp
scas
add
push
insl
pop
inc
sub
and
add
fsubrl
or
cmpsl
push
mov
insl
arpl
bound
mov
dec
clc
sub
inc
xchg
push
pop
or
mov
out
out
or
mov
sbb
and
jecxz
sub
push
leave
push
repnz
mov
dec
pop
and
stos
in
dec
hlt
loopne
pop
and
in
jb
lods
fistpll
mov
xchg
fs
cmpsb
xchg
push
rcr
push
repnz
and
aam
in
cltd
dec
test
fimull
in
scas
xchg
stos
fs
inc
in
fdivs
dec
and
in
lock
mov
push
add
push
repnz
pusha
or
dec
pop
and
stos
in
adc
push
jns
shrl
scas
xchg
sbb
sarb
push
jb
sub
rorl
xchg
test
xchg
mov
ret
leave
xlat
mov
mov
jno
jecxz
pop
and
pop
adc
inc
cmp
lahf
xor
pop
aaa
fcompl
dec
mov
cmpsb
ret
insl
pop
adc
mov
inc
push
or
and
jmp
fistpl
and
inc
in
mov
xor
mov
mov
pop
sub
inc
xor
loopne
xchg
out
dec
pop
xor
inc
mov
dec
frstor
and
mov
and
imul
inc
sbb
test
inc
mov
test
insl
adc
push
mull
mov
rorb
shll
add
sub
mov
mov
movsb
adc
xchg
push
mov
push
cmp
dec
adc
sbb
outsb
add
push
adc
or
lea
pop
aaa
or
push
push
xor
scas
addr16
sub
mov
xchg
insb
inc
mov
fildll
push
mov
scas
cmpsl
lahf
jo
je
xlat
pop
inc
sub
or
add
sbb
add
or
cmp
and
sti
mov
ret
push
fisubl
rcll
aaa
js
leave
mov
inc
mov
outsl
inc
mov
js
scas
mov
das
push
fisubrl
pop
fmuls
rcrl
test
aas
pop
gs
add
or
lahf
pushl
and
in
xor
ja
push
bound
xor
or
adc
sbb
rclb
push
loop
mov
jbe
pop
lcall
shrb
jg
jae
and
add
push
pop
xlat
pop
add
sbb
bound
movsb
insl
pop
lea
ds
pop
sbb
push
pop
add
sub
pop
or
and
add
mov
pop
sbb
push
push
xchg
jb
add
pop
inc
popl
or
or
xchg
fisttpl
cmp
inc
es
addr16
bound
adc
je
or
test
cmp
xor
sahf
gs
cltd
add
or
cmp
xor
mov
es
jae
and
sub
sub
shll
icebp
imul
icebp
push
outsb
dec
mov
push
jbe
cmp
jnp
xor
xor
daa
outsb
xor
pusha
insb
and
xchg
ds
push
int3
add
in
ja
adc
ss
xchg
jae
imul
daa
js
outsl
dec
js
fs
enter
pop
daa
sbb
dec
mov
stos
out
or
xor
add
ret
add
and
xor
shrl
pop
push
subb
sub
sbbl
in
add
popa
push
in
mov
or
push
adc
push
inc
imul
mov
repz
mul
in
and
push
dec
pop
mov
addr16
cltd
filds
sbb
cmpsl
dec
pushf
xchg
pop
inc
mov
pop
imul
jl
adc
xchg
stos
add
lock
jb
xorl
js
inc
imul
mov
mov
das
sti
mov
ret
scas
lahf
xor
inc
pop
xchg
adc
mov
push
fisttps
jo
pop
inc
ja
addps
push
sub
shrb
push
incl
pop
and
rdmsr
cs
add
rclb
xor
xchg
dec
movlps
das
or
pop
cmp
xchg
imul
popa
lods
adc
push
push
push
dec
mov
sub
insb
fiadds
add
subl
jo
xor
cmpsb
je
push
scas
ret
dec
rcll
xchg
inc
push
inc
jecxz
dec
adc
xchg
pop
add
xor
popl
lea
stos
lret
mov
adcl
movsb
mov
inc
imul
testl
loop
outsb
cmp
push
out
ret
push
push
push
cmp
scas
lods
xor
repnz
out
es
mov
aad
add
loopne
mov
and
negl
movl
xor
neg
pop
ret
fs
dec
sub
orl
je
xor
pop
jecxz
pop
jnp
pop
sub
dec
shlb
or
inc
or
sti
push
lret
inc
jle
js
xor
inc
cmp
xchg
scas
jbe
dec
or
fiadds
and
ss
push
sbb
dec
mov
bound
xor
mov
incb
add
inc
ffree
inc
cs
lret
jb
push
cmpsl
xchg
loop
push
cmpsb
xchg
ja
cli
jo
xor
outsb
sbbl
mov
mov
xor
js
mov
arpl
sub
arpl
fs
lock
inc
iret
syscall
or
fidivrl
push
push
mov
into
sti
pop
js
inc
bound
fidivrs
clc
pop
imul
pop
pop
mov
push
es
lock
outsb
pop
push
push
xor
dec
js
ret
divl
das
inc
pop
dec
es
das
push
fisubs
add
and
or
out
sti
pop
push
sysexit
mov
cs
dec
gs
sahf
push
outsl
push
push
cli
push
push
insl
sub
out
mov
insl
mov
inc
ja,pn
xor
mov
fimull
jp
pushl
push
fiaddl
jg
mov
das
xor
das
xor
outsl
pop
outsl
dec
xor
js
push
into
xor
adc
test
outsl
imul
or
sbb
jg
inc
and
pop
add
lods
imul
mov
arpl
ja
add
aam
ljmp
lock
fmull
lret
fmuls
stos
out
inc
jnp
pushf
ds
sub
and
push
lock
aas
add
xor
dec
jno
mov
mov
sbb
ja
jmp
xor
xchg
out
adc
add
sub
mov
imul
test
adc
je
shrl
mov
and
and
fs
das
or
pop
addl
mov
iret
sbb
das
arpl
cmp
sbb
out
scas
xor
or
xchg
xchg
add
pop
mov
pop
dec
mov
add
sub
cmp
mov
loopne
or
jmp
xor
mov
cmp
mov
lahf
sbb
inc
imul
mov
stos
fsubrs
shl
mov
sbb
or
xlat
daa
rorb
add
sub
sti
mov
push
dec
inc
ds
outsl
popa
fs
outsl
aaa
mov
push
mov
or
adc
add
sbb
call
lods
or
in
cmpsl
addr16
push
xor
iret
lods
sub
mov
push
pop
stos
std
jl
js
mov
add
fildll
sub
scas
addr16
in
fimuls
sbb
jecxz
arpl
pop
lods
je
inc
jb
in
cwtl
xchg
scas
repz
pop
pop
pop
push
outsl
xchg
push
bound
xchg
pop
and
sbb
clc
mov
js
repz
push
jle
insb
add
xchg
out
cmp
add
jbe
add
pop
cmp
std
outsb
push
pop
cmp
jne
jo
arpl
push
cli
ss
pop
pop
ja
xor
xor
push
and
push
movhps
popl
sbb
aam
aam
mov
xlat
adc
xor
cmp
movb
outsb
mov
or
lahf
mov
and
lea
add
rcrb
stos
sub
test
cs
outsl
fs
lock
lahf
mov
lahf
xlat
jmp
js
imul
ret
pop
push
arpl
addl
add
jecxz
pop
addl
addr16
cwtl
push
dec
movsl
pop
sti
lods
ljmp
push
insl
push
mov
and
push
inc
fwait
iret
dec
cmp
adc
jo
loope
lahf
popa
fldt
and
xor
mov
repz
xchg
test
inc
pop
mov
and
sub
xor
incl
xchg
outsb
jecxz
pop
dec
dec
lock
ret
cmp
mov
aaa
iret
fildll
adc
es
outsb
dec
arpl
cmp
jae
daa
xor
sub
jbe
stos
arpl
outsl
cmp
imul
das
repz
outsl
pop
xchg
or
aaa
sub
cmp
mov
mov
jmp
jb
push
ds
adcb
adc
jle
add
mov
xchg
jle
add
das
add
data16
sbb
sub
testb
lock
aam
addr16
sub
or
call
or
lock
icebp
push
and
push
cld
outsl
clc
mov
imul
inc
pop
push
sbb
mov
iret
add
out
testl
out
cltd
or
xchg
int
mov
or
pop
or
or
adc
adc
sbb
and
in
sub
xor
inc
mov
mov
testl
push
popa
xchg
add
mov
shrb
ret
sub
shrb
int
or
adc
fneni(8087
repz
add
xchg
rclb
fldcw
lret
str
lcall
stc
das
incl
sub
xchg
insb
call
outsl
xchg
push
sub
fwait
cwtl
lods
add
daa
nopl
and
mov
mov
addr16
jg
mov
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
pushl
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
pop
in
iret
mov
sbb
mov
sbb
mov
insb
incl
ds
pop
sbb
xor
mov
pop
sbb
decl
mov
sbb
js
lods
mov
pop
dec
xchg
jecxz
dec
push
mov
and
pop
adc
nop
push
and
cmp
pop
dec
mov
daa
jb
xor
and
push
dec
cmp
add
pop
add
mov
jg
lods
bound
push
insl
or
mov
push
dec
iret
mov
dec
sub
pop
or
dec
dec
lcall
mov
xchg
fsubrl
leave
jae
fcoml
mov
cmp
iret
pushf
inc
mov
pushf
cmp
insb
dec
pop
inc
add
pusha
shrb
add
cmp
xor
add
push
mov
popf
js
adc
jo
pusha
mov
fwait
insb
and
cmpsl
icebp
movsl
inc
push
mov
nop
sbb
ret
mov
jnp
pop
sbb
lret
ss
cmp
sub
pop
xor
inc
adc
inc
push
push
cmp
inc
icebp
push
xlat
or
cmpsb
jp
int3
mov
bound
cmp
cs
and
imul
xor
and
dec
xchg
jg
je
push
subl
outsl
jne
bswap
or
cmp
popa
outsb
imul
pop
inc
add
and
adcl
mov
mov
aaa
insl
mov
call
mov
sub
inc
pusha
xchg
pop
jg
inc
pusha
sub
pop
push
jnp
fisubrl
add
push
push
scas
add
mov
je
daa
mov
jnp
pop
setbe
add
inc
loope
xchg
outsb
das
addr16
pop
mov
inc
pop
pop
pop
rorb
mov
hlt
mov
push
cmpsl
aas
dec
and
sbb
dec
idiv
push
add
sub
push
xchg
test
out
shlb
inc
and
out
adc
dec
sub
fbld
jbe
mov
fwait
xor
adcl
push
sarl
bound
je
add
jbe
outsl
ljmp
loop
rorl
outsl
add
add
dec
movsb
imul
dec
add
push
insl
cmpsl
dec
cli
mov
pop
sub
mov
out
xor
sti
xchg
mov
dec
jge
out
negl
push
xor
outsl
and
rcll
pop
mov
mov
mov
push
xchg
stos
pop
xor
xor
mov
mov
mov
dec
xchg
xchg
pop
lcall
adc
arpl
repz
inc
lock
es
mov
addl
cs
jge
sub
push
xchg
push
or
mov
pop
inc
pop
fbld
pop
pop
cmp
scas
add
mov
enter
aaa
aam
dec
cs
insb
inc
in
add
jno
push
cs
dec
enter
pop
push
and
cmp
jns
imul
cs
aam
scas
push
sarl
lret
inc
or
roll
inc
loop
iret
shll
aas
jle
pop
stos
ficoml
pop
xchg
xor
push
push
cmc
jns
fwait
jge
push
daa
xor
fldl
outsl
notb
aaa
outsl
push
je
mov
stc
push
pop
adc
xor
ficomps
fs
jns
mov
mov
shr
pop
push
dec
pop
push
mov
test
testb
jl
push
xchg
xchg
mov
not
pop
jnp
out
xlat
or
xor
out
imul
pop
clc
call
mov
pop
mov
in
inc
out
cmpsl
sbb
pop
push
jns
scas
outsl
add
jge
cmp
sahf
ja
je
dec
mov
lahf
out
push
adc
dec
push
repz
rep
test
lahf
out
dec
mov
dec
push
push
and
cmp
sahf
out
push
xor
insb
ds
test
sbb
out
sahf
cmpsl
inc
push
mov
int
dec
es
jno
lds
stc
cmp
and
push
mov
cmp
cmc
adc
sahf
out
outsb
mov
notl
push
push
add
sbb
dec
sbb
scas
sub
aam
cs
adc
stc
add
adc
lcall
push
push
mov
xor
adc
mov
mov
mov
scas
int
mov
pop
in
bound
loop
and
push
pop
mov
sub
loopne
mov
sar
mov
pop
int3
push
and
pop
sbb
enter
stc
cmp
adc
repnz
iret
pop
in
inc
ds
or
add
and
jb
add
dec
stos
ret
aaa
movsl
inc
test
subl
out
mov
fbld
sub
testl
rolb
addl
ja
outsb
outsb
lcall
push
push
js
xor
stos
pop
inc
imul
cmp
xor
andl
jp
adc
mov
aad
lods
iret
imul
push
push
and
xorl
inc
pop
push
dec
out
xor
push
dec
inc
outsl
and
push
popa
je
or
subl
push
fistpl
cwtl
out
scas
pop
inc
mov
cmp
sub
pop
push
ficompl
cs
decl
xchg
ss
sti
es
mov
sbb
ljmp
rclb
adc
scas
pop
in
daa
adc
and
dec
not
push
mov
push
pop
addr16
jno
fcoml
and
add
outsl
xlat
cmpsl
jecxz
jmp
jo
push
jo
pop
add
inc
jg
mov
dec
xor
inc
or
xor
mov
jno
sbb
xchg
jmp
jnp
mov
cli
push
sbb
xchg
fs
lods
and
jae
inc
sbb
pop
xor
mull
sbb
sbb
loop
jg
push
dec
cwtl
pop
test
push
xor
orb
add
xchg
xchg
sti
rclb
xchg
jae
sbbl
punpcklbw
sysexit
les
push
dec
pop
and
xorl
dec
inc
dec
mov
fs
jo
xor
daa
fists
push
outsl
imul
je
mov
add
ds
add
jo
jg
pop
mov
jb
loopne
add
jecxz
mov
fwait
mov
sbbb
pop
ret
shll
test
cwtl
and
sbb
pop
pop
inc
das
movsl
or
push
add
scas
lahf
sub
movb
test
or
sbb
scas
pop
sbb
scas
out
push
pop
rorb
xchg
pop
addr16
arpl
mov
jae
fs
sbb
adc
es
adc
mov
psubq
imull
jo
cmp
mov
pop
das
cmpsl
jg
lock
push
pop
shll
add
lret
dec
and
jge
arpl
or
fidivrs
sub
pop
pop
dec
add
and
ret
pop
fisttps
jmp
cs
popw
push
aaa
imul
mov
mov
inc
in
bound
xchg
das
testl
jg
fsubs
call
xchg
das
push
xor
push
pop
sbb
mov
or
outsl
mov
lods
sub
xchg
push
fiadds
push
inc
mov
lods
scas
inc
jle
rcl
pop
imul
mov
out
inc
into
mov
and
inc
xor
adc
lahf
sbb
pushl
ret
add
dec
add
push
xor
adc
fcmovb
stos
or
shlb
add
ffreep
xchg
aas
add
add
xlat
mov
shlb
out
or
lock
cmp
push
pop
adc
xchg
jp
out
arpl
call
cmpsb
inc
inc
push
inc
pop
pop
outsb
iret
inc
sbb
cmp
dec
ficoms
pop
push
popl
pop
or
xchg
xor
pusha
or
daa
inc
push
or
call
pop
sbb
addb
mov
dec
and
pop
jo
imul
inc
and
mov
push
pop
lahf
inc
dec
jne
mov
outsl
dec
push
mov
add
cmpsl
push
ljmp
andl
adc
add
inc
outsl
loop
sub
dec
dec
mov
jns
je
inc
stos
and
push
out
xchg
fists
das
adc
and
mov
jle
add
cmp
insb
je
dec
daa
rorb
pop
addr16
jo
jmp
fisubrs
sbb
pop
jno
outsl
xor
push
les
xor
push
dec
xchg
pusha
call
sbb
jns
je
jne
or
test
das
fisttps
arpl
push
mov
ja
out
mov
push
push
mov
or
mov
dec
mov
pop
and
je
adc
les
punpckhwd
arpl
and
iret
jbe
pop
and
inc
inc
mov
popw
push
or
maskmovq
testl
out
pop
dec
test
les
sbb
testb
dec
shll
rclb
push
pop
rclb
xchg
jmp
mov
mov
into
dec
inc
push
test
push
loopne
sub
jmp
xchg
push
in
nop
sub
cmpsl
pop
pop
or
hlt
movsb
push
fwait
xchg
push
add
mov
push
movups
or
push
aam
dec
and
fidivrl
jb
iret
dec
loopne
add
mov
and
add
jge
out
inc
outsl
outsb
or
aaa
inc
insb
xchg
stos
daa
and
pop
daa
sbb
imul
loope
mov
jb
sub
out
ds
inc
imul
int
pop
incl
dec
inc
dec
push
xchg
add
dec
sbb
and
pop
imul
jge
aas
fiadds
jg
ret
shlb
mov
add
mov
into
inc
leave
sbb
add
adc
inc
lahf
lcall
scas
sets
mov
inc
aaa
jno
sti
shlb
lcall
push
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
pushl
jb
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
ljmp
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
repz
movb
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
call
gs
leave
ret
sub
xchg
mov
data16
mov
lcall
call
cltd
test
push
push
shll
ja
daa
mov
mov
pushl
stos
fmuls
lret
rep
cs
outsl
arpl
test
add
mov
outsl
subb
movsb
mull
jno
jmp
or
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
lahf
jo
and
dec
ret
js
jecxz
aad
pop
mov
in
or
xor
das
ds
das
sbb
push
sbb
fistps
push
and
push
pop
inc
mov
inc
push
inc
pop
and
or
aas
js
insb
cwtl
dec
mov
pop
push
or
mov
inc
add
or
pop
pop
pop
test
enter
jge
jo
shll
aas
ds
push
shl
xor
push
sbb
decl
incb
lahf
daa
inc
add
sub
loop
push
pop
fisttpl
inc
outsl
xor
in
push
lods
mov
and
or
inc
neg
adc
lahf
stos
outsb
cwtl
push
pop
mov
cmpsl
xor
inc
out
mov
imulb
push
adc
insb
pop
repz
and
sar
add
rol
ret
inc
out
scas
pop
cmpsb
dec
push
fidivs
adc
mov
xchg
lods
push
scas
pop
pusha
inc
mov
and
movsl
pop
outsl
jbe,pt
mov
mov
pop
testl
push
fiaddl
add
mov
in
leave
leave
adc
xor
inc
daa
xor
test
push
adc
jb
add
push
pop
adc
enter
inc
adc
leave
xchg
and
and
arpl
mov
push
sub
je
scas
inc
fsubrl
les
movsb
add
cmp
outsl
je
mov
popa
stos
mov
in
inc
cs
inc
fdivrl
or
sub
sub
push
loopne
jo
mov
dec
inc
jle
in
xor
and
push
push
pop
jbe
add
insl
outsl
fs
gs
jo
or
mov
mov
push
addl
mov
add
or
addr16
and
push
lea
pop
gs
inc
sub
daa
mov
div
xchg
lock
cs
imul
inc
mov
pop
sbb
insl
xor
pop
pop
jnp
push
sahf
dec
sub
pop
mov
in
jecxz
dec
adc
xchg
dec
inc
pmulhuw
sbb
inc
cmovo
idivb
cmpb
aas
nop
jo
xor
jbe
maxps
loopne
out
inc
dec
loopne
mov
push
add
adc
dec
and
lods
adc
pusha
dec
in
imul
sbb
xchg
cwtl
fcomps
pop
push
ss
in
mov
daa
ds
fucomip
jnp
or
and
daa
insl
out
sbb
inc
push
pop
das
or
lods
inc
add
mov
mov
idivb
daa
les
enter
xchg
mov
push
leave
daa
xchg
jnp
sti
data16
fs
push
mov
pop
jnp
jnp
dec
fsubl
fisttps
add
test
add
jl
fiaddl
out
inc
mov
mov
outsl
jle
mov
mov
les
scas
clc
mov
lret
or
add
lret
in
dec
inc
push
dec
add
dec
fidivrs
nop
xchg
out
cwtl
fsubl
mov
enter
sahf
mov
int3
inc
inc
add
pop
enter
dec
adc
and
mov
lret
xchg
dec
nop
out
pop
outsl
xchg
js
add
js
jns
in
movsb
lods
cs
dec
sahf
mov
xchg
out
sar
or
fdivl
daa
clc
aaa
and
int3
push
push
lods
add
das
inc
daa
mov
cltd
fsubrs
xor
aas
daa
repnz
mov
addr16
push
aam
xchg
cmp
in
push
dec
lahf
mov
xchg
mov
int
mov
out
dec
xor
inc
push
nop
enter
lods
lods
sub
ja
aam
jns
in
cmp
adc
dec
pop
xor
movsb
inc
in
push
shrb
aam
iret
test
sub
mov
mov
cmp
inc
daa
lock
mov
mov
inc
enter
test
scas
mov
push
loopne
nop
das
sbb
idivl
mov
adc
aaa
je
les
pop
push
push
sub
fiaddl
addr16
mov
iret
test
push
pop
and
mov
daa
add
mov
mov
aam
repnz
rcl
insb
pop
enter
leave
xor
in
fiadds
xchg
cld
pop
fmuls
insb
sar
jl
scas
dec
in
push
orl
pop
int3
ds
cmp
mov
cwtl
cld
ror
xlat
pushf
test
or
sbb
dec
in
nop
stos
or
cld
cmp
repnz
insb
push
enter
cmp
sar
lahf
add
pushf
lods
mov
dec
lahf
pushf
ds
repnz
xor
cld
or
nop
or
in
jnp
repnz
push
pop
lahf
pop
pop
and
pusha
ja
in
nop
out
mov
mov
fsubr
cld
cs
mov
push
dec
jl
rcrl
push
push
shrl
mov
cmp
fcoml
nop
out
mov
cmpsl
or
cmpb
daa
frstor
andb
sahf
or
clc
scas
cmpsl
cmp
pusha
sub
les
dec
push
dec
fisubs
pusha
jg
mov
jns
in
mov
mov
inc
sahf
mov
loopne
nop
add
mov
and
xor
dec
mov
testb
loopne
in
jg
nop
out
cmpsl
and
js
pusha
mov
out
fcoms
inc
sahf
or
js
int3
xor
lahf
out
lock
dec
stc
pop
enter
and
idivb
push
and
cmpsl
js
mov
inc
jg
mov
imul
test
inc
scas
jbe
lahf
je
cs
nop
aam
enter
inc
clc
adc
cltd
fdivs
and
xor
lahf
clc
lcall
int
mov
out
je
dec
sahf
or
pusha
lahf
fs
mov
nop
out
aam
jl
in
mov
add
push
aad
push
adc
sub
btr
jg
test
iret
test
push
jb
cmpsb
test
pop
loopne
iret
test
mov
enter
jge
mov
adc
add
adc
and
fsubrs
xor
iret
test
js
shll
push
jmp
cmp
insb
test
mov
in
lahf
test
mov
test
andb
sbb
movsb
inc
or
pop
in
clc
cmpsl
loopne
fiaddl
jo
aas
cmpsl
test
mov
cmpsl
sbb
mov
mov
fidivrl
push
cmpsl
nop
out
push
mov
push
mov
fistpl
loop
and
hlt
nop
dec
fldt
mov
pop
sahf
push
insl
push
aas
ja
rcrb
mov
xorl
in
or
ja
sub
jg
nop
dec
jmp
rcr
lahf
jbe
shrb
adc
mov
inc
pushf
push
or
push
push
inc
repnz
mov
jg
js
and
pop
lock
js
test
loopne
xor
enter
inc
push
push
push
movsb
inc
mov
jg
int3
test
inc
jo
outsb
addr16
lahf
int3
inc
enter
ja
lock
xchg
clc
pop
in
fstl
out
pop
adc
sbb
mov
fidivrs
ficomps
adc
mov
ficomps
pushf
fdivrp
fadds
cmpsl
mov
cmp
lahf
pop
jb
jo
inc
int3
cwtl
mov
ds
sub
inc
fbstp
cwtl
inc
jg
shrb
int3
rcr
mov
rcl
int3
inc
ja
and
rcl
outsb
xor
in
iret
push
inc
int
pop
pop
jg
xor
loopne
movsl
ss
lahf
dec
iret
add
stos
inc
ja
pusha
fs
fwait
nop
loopne
push
mov
fadds
fiaddl
mov
mov
enter
and
add
mov
in
loope
push
sub
iret
pop
pop
adc
inc
jg
aad
mov
in
pop
daa
insb
lahf
xorl
inc
lock
lods
mov
aaa
mov
incl
fsubs
push
orl
inc
pop
repnz
ja
fs
pusha
pop
enter
fs
pop
enter
mov
repnz
lock
pop
and
mov
jecxz
lock
nop
iret
test
inc
jecxz
mov
cs
in
mov
adc
nop
mov
mov
lahf
nop
mov
loopne
pop
jb
dec
lods
in
inc
loopne
mov
pop
je
in
inc
push
mov
bound
sti
outsl
aas
js
cwtl
add
cltd
nop
push
push
add
enter
xorl
sahf
sbb
in
push
xchg
inc
lds
int3
shrb
cltd
nop
iret
clc
inc
in
pusha
lods
sub
outsl
adc
aad
loopne
mov
addr16
cmp
in
jmp
lock
ss
test
out
pop
sub
lock
call
aaa
and
pop
daa
adc
data16
pop
out
cltd
or
mov
daa
pushf
fcoml
daa
xor
ljmp
mov
scas
xlat
pop
push
sbb
mov
push
or
push
sub
cmp
aas
call
les
pushl
ja
lods
pop
adc
ja
lods
outsl
iret
mov
mov
add
dec
aam
repnz
in
sub
fiadds
out
dec
cmp
push
jae
fwait
dec
push
push
daa
aas
movl
addr16
or
add
pop
out
repz
mov
ja
daa
sbb
dec
scas
fs
dec
inc
in
scas
in
cmp
in
scas
xor
dec
scas
in
and
jne
mov
pop
mov
push
cmp
mov
dec
push
xor
cmpsl
fnstcw
mov
enter
imul
inc
push
and
lock
cmp
mov
mov
clc
out
push
dec
xor
ds
cmpsl
stc
cmp
push
push
dec
repz
mov
jmp
cmp
add
jmp
fisubs
jg
add
inc
in
xchg
pushf
js
stc
and
dec
inc
cld
inc
mov
inc
int
imul
out
cmp
aam
mov
dec
nop
mov
add
cmp
clc
push
inc
out
cld
inc
sub
sbb
ja
mov
sbb
in
ja
dec
xchg
jg
xchg
fmul
xchg
or
inc
dec
outsl
jns
xchg
mov
fdivrl
push
rolb
sbb
in
dec
outsl
add
inc
pushf
inc
pop
test
inc
in
lcall
xchg
mulb
outsl
add
cmp
cmp
dec
enter
cmp
or
shll
add
outsl
xchg
pop
add
xor
data16
sbb
fbstp
push
repnz
mov
out
leave
add
movsb
out
sub
sub
add
dec
xchg
leave
xchg
or
xor
and
xor
out
out
push
xor
out
outsl
add
jnp
ret
fildll
loop
sub
mov
js
aaa
scas
in
dec
js
cwtl
add
pop
scas
in
mov
clc
cmp
dec
add
push
sbb
lock
mov
rol
jg
insl
mov
mov
xchg
and
add
and
sub
fwait
nop
pop
in
lock
fimuls
icebp
popa
sub
xchg
outsl
add
or
and
or
fdivrp
and
or
sbb
jbe
cwtl
lods
fmuls
pop
scas
add
les
add
shl
dec
fisubs
dec
out
add
xlat
mov
in
push
aaa
push
repnz
sbb
out
add
outsl
test
decl
insl
outsl
xchg
push
pushf
daa
addr16
add
jbe
aaa
jmp
call
loopne
pop
cmpsl
mov
or
xchg
push
cwtl
cmpsb
shlb
ret
aam
jg
push
pusha
repz
loopne
cmp
and
xor
sbb
in
shll
repz
pop
sub
fs
jecxz
add
aam
xchg
js
xchg
pop
sub
add
notl
jbe
lock
outsl
push
push
outsl
ljmp
ljmp
testl
push
xor
scas
push
movsb
clc
push
imul
push
cmp
push
out
xchg
clc
loope
xchg
lds
pop
pop
mov
and
cwtl
dec
cwtl
loope
or
inc
nop
and
sbb
push
xlat
or
push
decl
ljmp
add
xlat
or
lcall
clc
mov
cmc
dec
inc
testl
pop
mov
lds
fdiv
pop
in
cmc
mov
testl
and
add
jns
push
shl
mov
jl
loopne
nop
imulb
mov
dec
xchg
and
divb
rcll
push
aaa
sbb
xchg
mov
outsl
add
cmp
icebp
js
cmpsl
pusha
mull
mov
scas
mov
lods
dec
movsb
xchg
mov
mov
daa
in
mov
aad
lods
loop
and
xor
add
pop
enter
insb
aaa
pusha
and
cs
dec
and
clc
fdivr
pop
inc
push
faddl
mov
pop
lods
in
aaa
push
jl
stos
pop
in
sub
pop
loope
stc
cmp
stc
ss
push
adc
xor
add
jns
and
xchg
push
aam
mov
add
lods
fs
int3
xlat
add
loopne
sahf
iret
xchg
fldcw
pop
cli
daa
or
add
faddp
fwait
adc
push
in
cwtl
push
xchg
jns
out
add
call
inc
js
out
in
outsl
mov
or
jnp
jo
aas
add
and
or
add
jg
scas
das
adc
lcall
inc
sti
das
dec
sub
xchg
outsl
add
mov
xchg
movsb
and
or
add
and
js
add
enter
call
dec
xchg
fsubs
rorl
lods
add
pop
lcall
addr16
loopne
mov
nop
or
out
dec
scas
in
mov
or
cmp
std
mov
je
jl
aas
lret
sbb
addr16
sahf
mov
movsb
in
es
fs
aam
addr16
hlt
std
aad
lods
lret
push
dec
imull
xor
mov
mov
inc
xchg
inc
cmp
test
jmp
push
nop
bound
add
aaa
jo
in
nop
out
rcl
or
fdivs
and
push
xor
lahf
fiaddl
cltd
fdivl
and
clc
out
push
jl
shll
les
clc
ja
sbb
push
or
call
adc
aas
ss
sti
pop
shrb
add
dec
shll
cmpsl
fldcw
push
xchg
stos
cmp
repz
adc
lcall
inc
jo
jl
out
mov
add
iret
push
mov
out
sahf
cmp
mov
cmp
repz
xorb
stc
lea
and
jbe
es
loope
nop
dec
repz
cmp
jmp
sahf
out
cmp
mov
cmp
out
mov
or
iret
rep
xchg
shl
xchg
out
sahf
cmpsl
outsb
xchg
mov
out
iret
repz
or
push
int
jns
xchg
and
add
cmp
mov
add
jns
shl
sbb
repz
push
popf
rcrb
push
jns
sbb
pushf
jl
ja
ficomps
sahf
jns
iret
roll
or
fucom
repnz
sub
dec
xorl
push
stos
add
cmp
mov
sbb
iret
repz
push
lea
jns
cmpsl
jp,pt
mov
stc
es
test
lahf
sbb
lcall
push
stos
cmpsl
stc
cmp
jbe
cli
xor
mov
lahf
lods
adc
sahf
mov
ds
jnp
sbb
jns
mov
mov
iret
repz
mov
mov
xchg
and
iret
sarl
ja
adc
jns
xchg
jmp
mov
jns
iret
repz
cmpsb
stc
cmp
out
pusha
mov
sarl
dec
mov
repz
out
mov
fcompl
mov
cmp
jge
sar
xchg
mov
shl
cmp
cmp
ret
jns
je
cli
xor
cmpsl
stc
cmp
add
push
cmpsl
out
out
jl
lds
sahf
data16
popa
push
enter
out
sarl
mov
mov
fnstsw
lret
fiadds
mov
enter
jl
int
xchg
mov
ja
cmpsl
stc
push
iret
fwait
out
sarb
sahf
mov
xor
pop
push
lods
xlat
repz
out
sub
sahf
cmpsl
stc
out
jno
ds
or
andl
add
dec
cmp
out
mov
sbb
mov
stc
pop
fdivs
cwtl
cmp
sahf
ja
lods
inc
fidivl
fstpt
iret
shrl
add
jp,pt
cmp
out
cmp
imul
fisubrs
dec
mov
fildll
imulb
test
xchg
repz
iret
mov
out
mov
ds
hlt
push
push
div
clc
jge
int
jle
loope
movsl
std
int
jns
lods
mov
add
or
add
lahf
int3
lsl
rcr
js
inc
incb
aas
aam
mov
ficoml
inc
cmp
shlb
or
scas
sbb
xor
adcl
jl
add
pop
aaa
jge
inc
nop
int
mov
or
outsb
adc
or
fs
dec
mov
aas
pop
xchg
rcrb
das
std
cmpsb
fcomp
test
ss
aas
das
stos
xor
daa
cmp
jg
xchg
mov
jmp
and
pop
movb
cmp
into
and
loop
jbe
xlat
pop
mov
add
pop
jb
out
aas
int3
addl
mov
je
dec
out
push
clc
mov
inc
outsl
aas
sbb
ds
dec
pop
adc
dec
adc
mov
aas
in
shl
xor
data16
fimull
dec
aas
in
fimull
enter
popf
push
inc
bound
aad
pop
or
push
pop
mov
jbe
out
mov
fadds
push
aam
ret
cmpsl
in
das
dec
or
or
mov
adc
adc
into
shlb
ja
push
pop
sub
shlb
cmp
inc
js
test
xchg
or
sbbl
mov
push
jp
ffreep
lret
push
inc
jbe
mov
cmp
fwait
sarb
hlt
jne
or
jo
leave
sbbl
pop
pusha
outsb
xchg
pop
jb
cltd
fadds
or
into
inc
ja
push
jg
dec
xchg
push
scas
hlt
add
add
inc
pop
cmp
dec
repnz
push
daa
inc
scas
mov
xchg
into
push
dec
fnstenv
add
iret
push
incl
mov
addr16
mov
mov
scas
popf
pop
mov
ja
outsb
fbld
xchg
push
pop
pop
push
cs
dec
cs
fstpl
pushf
xchg
or
pop
int
fadds
mov
cmp
adc
and
mov
movsb
mov
imul
push
xchg
push
insb
push
out
mov
leave
sub
push
int
cmp
sarl
pusha
dec
and
add
pop
repnz
mov
inc
xor
mov
push
daa
inc
xchg
and
sbb
mov
das
mov
ss
jo
mov
bound
stos
loopne
fisttps
outsl
test
faddl
scas
push
scas
jns
adc
xor
add
in
add
sbb
pop
xchg
rorb
outsl
sbb
fsubl
adc
aam
push
lea
mov
inc
scas
aam
xchg
test
adc
and
push
cmp
pop
jb
fs
jae
pop
nop
mov
xchg
pop
mov
loop
iret
das
push
add
pop
fisubl
push
fidivrs
dec
push
cmpsl
and
add
adc
daa
xor
sbb
push
mov
addr16
fisubl
dec
push
daa
push
mov
outsb
pop
outsl
mov
pushf
pushf
pop
add
pop
and
mov
xor
add
repz
aaa
dec
cmpsl
cmpsb
je
subps
adcl
lea
test
mov
push
jo
lea
insl
pop
ja
mov
push
movl
test
imul
pushf
mov
add
push
jg
push
pusha
pushf
pushf
pop
and
repz
xchg
and
add
fldl
leave
sbb
in
fisttpl
inc
mov
pop
cmpsl
adc
popw
outsb
mov
or
pop
xchg
add
leave
add
push
add
rolb
fcmovnb
out
lahf
out
sahf
or
or
or
in
repz
adc
and
push
push
leave
in
pop
push
push
daa
pop
pop
movq
mov
mov
call
es
xchg
mov
add
popf
cmp
lret
add
add
xchg
pushf
dec
or
push
push
push
imul
xchg
xchg
jo
outsl
rclb
cmpsl
lock
dec
leave
orl
dec
sub
dec
pop
mov
jb
das
jge
mov
and
nop
stos
nop
mov
fnsave
jb
ret
nop
rclb
mov
out
xchg
icebp
ss
or
sbb
sbb
cmp
aas
add
cmpsl
sub
push
sbb
in
mov
daa
pusha
pushl
lock
sbb
test
push
pop
aam
in
and
pop
add
into
sbb
xchg
out
xchg
and
icebp
xchg
cld
xchg
or
sbb
fcmovnb
push
fmuls
es
xor
add
loop
filds
fists
cwtl
dec
sbbl
xlat
dec
push
aas
test
dec
ss
xchg
loopne
ja
mov
jp
orl
iret
add
cmpsb
scas
or
xchg
dec
inc
shlb
and
mov
xor
mov
sbb
in
sbb
xor
xor
push
daa
cld
fisttps
leave
add
nop
inc
inc
sbb
or
enter
sbb
xchg
mov
push
mov
popf
mov
mov
test
sbb
xchg
mov
pushf
out
cmp
sbb
push
daa
inc
out
inc
push
adc
add
scas
mov
push
jg
xchg
pop
in
xchg
pushf
js
dec
xchg
push
in
in
in
xchg
les
push
jno
aas
pop
cmpsl
sbb
or
daa
sub
inc
cmpxchg
xlat
sbb
add
out
in
mov
mov
mov
scas
mov
jb
cld
in
scas
or
jb
dec
test
xchg
inc
inc
dec
inc
push
fs
inc
pop
insl
fdivr
ucomiss
push
addr16
cmp
push
add
mov
xchg
xlat
xchg
out
sahf
adc
ja
pop
jb
mov
loop
orb
push
repnz
xchg
enter
jp
add
in
xor
add
push
jb
xor
pop
inc
daa
nop
mov
or
cmp
xlat
adc
push
jo
xor
es
xchg
add
push
iret
push
add
jns
add
add
out
filds
in
sti
repnz
inc
or
rorl
and
xchg
lcall
and
je
xchg
add
test
xlat
roll
je
xchg
and
pop
int3
fucomp
add
cmc
ja
clc
out
cs
movsl
xchg
cwtl
and
popf
popa
jg
pop
paddsw
jns
pushl
xchg
jle
add
addr16
daa
push
out
sahf
pop
and
and
and
movsb
cmp
leave
inc
pop
addr16
mov
mov
mov
xchg
pop
and
mov
dec
dec
mov
push
push
lcall
pop
scas
add
xchg
pushf
test
push
mov
add
pop
fistpl
out
ja
xchg
pop
adc
push
aaa
inc
fbld
pushf
out
es
and
and
mov
fisttps
push
push
adc
xchg
mov
pop
add
inc
scas
adc
xlat
push
pop
mov
cvttps2pi
mov
frstor
adc
daa
cmp
mov
adc
es
adc
enter
popf
aaa
push
iret
jmp
es
leave
xchg
das
vmwrite
fsubl
cld
es
sbb
and
incl
push
daa
push
xlat
xchg
mov
daa
daa
adc
pushf
cmp
cmp
push
add
jmp
add
sahf
stc
int3
icebp
xchg
setle
imul
enter
jg
adc
xchg
jno
pop
sub
jbe
enter
sub
push
jl
mov
imul
push
daa
out
mov
pop
mov
cmpsl
cltd
push
scas
lock
mov
movsb
push
lahf
scas
sahf
mov
repnz
leave
aam
sub
push
sub
lods
sbb
xor
mov
inc
movl
nop
sub
out
mov
fistpll
insl
or
sahf
lahf
pop
fdivs
daa
add
rol
pminsw
leave
dec
fdivl
into
sbb
or
mov
repnz
inc
push
add
cmp
jbe
das
jo
add
cmp
mov
mov
mov
pop
jb
jb
in
and
mov
pushf
dec
sbb
mov
sub
inc
push
xchg
push
push
jae
mov
scas
das
lcall
mov
ljmp
cmpsl
push
dec
sub
cmp
mov
or
push
pop
dec
ja
je
jbe
xchg
sbbb
mov
out
call
mov
fiadds
fsubrp
sbb
jmp
push
inc
cmovnp
leave
jae
push
ja
fs
int
cmp
lea
aas
pop
popf
xchg
movsl
adc
frstors
cmp
iret
repz
sti
jo
mov
pop
movsb
pop
or
repnz
pop
pop
hlt
ss
iret
rcrl
push
iret
jae
cmp
insl
js
and
outsb
daa
mov
cltd
or
scas
das
mov
xchg
out
rorb
adc
loope
jns
cld
adc
pop
movsl
mov
push
cmp
outsb
pusha
stos
mov
movsl
ljmp
inc
imul
dec
das
push
daa
mov
inc
lcall
pop
stos
test
mov
scas
testb
pop
and
fwait
loope
cmpsb
fisttps
push
add
out
mov
lahf
cmpsb
decl
fs
pop
leave
shrb
cmpsb
xor
cmpsb
ja
orb
outsb
ja
cmpsb
pop
xor
iret
xchg
fcoms
xchg
pop
jb
sti
in
jne
dec
js
cmpsl
pop
push
daa
movsl
dec
repnz
add
cmpsl
sbb
mov
pop
xchg
xchg
push
ljmp
mov
test
das
add
and
xchg
xor
mov
fsubrl
mov
jmp
and
les
xor
xor
fmuls
loopne
and
lock
cmp
ret
mov
test
sbb
daa
iret
sbb
push
add
cmp
iret
cmovg
movsb
in
and
fbstp
adc
cltd
push
cmp
jg
in
cmpsl
jp
in
pop
cmc
test
std
test
pushf
in
xchg
test
xorb
lret
addl
test
pop
sub
mov
divps
xchg
push
add
mov
mov
push
lret
or
dec
push
pop
xor
test
js
incb
stos
je
in
sub
out
mov
xchg
push
leave
jnp
rorb
pop
push
push
jle
pop
and
or
cmpsl
scas
adc
xor
cmp
in
out
cmp
das
decb
sbb
add
sub
mov
push
lods
pop
insl
pusha
xlat
outsb
stos
pushl
out
stos
lcall
cmpsl
stos
iret
ficoml
loop
ljmp
test
jbe
lods
xchg
in
dec
lcall
xchg
xchg
xchg
or
dec
push
insb
pop
in
xchg
pop
mov
adcl
iret
movsb
shrd
js
iret
mov
mov
fcmovne
add
out
pop
enter
imull
iret
jae
fimuls
push
push
push
pop
pop
or
jae
cmp
das
or
aas
iret
repz
or
or
repnz
pop
adc
push
mov
ja
jg
unpckhps
xchg
xchg
lods
xlat
lock
sbb
push
add
mov
push
pushf
cmp
inc
scas
das
fsubl
adc
dec
push
dec
cmp
scas
ficoml
cmpsl
push
mov
cmpsb
scas
scas
call
sbb
add
xchg
cmp
scas
pop
pop
insb
mov
scas
das
dec
ja
fiaddl
scas
mov
lock
mov
out
add
cmp
jmp
mov
dec
in
in
or
into
or
mov
fimuls
imulb
out
push
test
fimuls
dec
out
add
outsl
jp
pop
aam
js
pop
jbe
aas
ret
jnp
and
inc
mov
pop
dec
or
outsl
rorb
adc
adc
ja
and
cmp
push
cmp
nop
jl
mov
inc
adc
bound
cmp
mov
mov
push
outsl
dec
push
add
cmp
into
push
out
sub
add
out
in
mov
pop
xchg
or
shrl
lea
call
or
cmp
mov
sbb
cmp
loope
ja
notl
incb
mov
mov
adc
decl
push
cmp
inc
mov
rolb
dec
mov
iret
xlat
popf
jnp
out
jp
cmpsl
push
xchg
push
out
fnsave
cmpsb
push
mov
dec
in
jno
or
out
mov
cs
xchg
int
sarb
mov
repz
repz
add
add
add
repz
dec
add
add
repz
pop
mov
xchg
hlt
cmp
repz
insb
or
mov
daa
mov
sbb
daa
std
mov
add
add
repnz
add
or
add
and
sbb
sub
in
dec
cmp
enter
mov
sbb
pushl
mov
lahf
jg
into
mov
mov
cld
incl
in
xor
mov
cltd
aas
in
pop
in
jbe
jb
fst
int
cmpsl
add
xchg
out
jo
mov
roll
sbb
mov
pop
jb
jb
inc
cmp
leave
in
in
iret
ja
ja
incb
xchg
add
leave
inc
mov
xchg
xchg
mov
in
lods
inc
out
and
cmp
adc
lods
mov
pop
ss
ds
inc
shll
punpcklwd
insb
mov
xor
lahf
jbe
cmp
cmpsl
scas
mov
ret
out
fisttpll
add
pop
cmp
enter
testb
or
mov
scas
push
mov
or
or
stc
or
add
cs
and
gs
in
adc
insl
inc
mov
pop
scas
cs
pop
or
scas
insb
dec
dec
dec
rorl
pop
push
mov
movsb
inc
fsubrl
cwtl
pushf
je
out
ja
outsb
inc
leave
or
inc
mov
out
fmull
iret
out
xlat
pop
fbstp
xchg
pop
out
maskmovq
or
setb
sbb
mov
lret
and
inc
cmp
rorl
mov
mov
pop
aas
pop
and
in
push
push
test
pop
mov
pushf
nop
lcall
dec
cs
call
cmp
adc
sbb
das
and
dec
je
je
pop
xchg
push
addr16
decl
jns
mov
lea
sarl
daa
adc
in
hlt
mov
jne
mov
dec
sahf
flds
xlat
inc
mov
push
dec
mov
jo
pop
jb
in
xchg
out
pop
aaa
rorl
add
mov
mov
fsqrt
cmpsl
push
adc
pop
in
xor
xchg
enter
mov
push
add
das
mov
popl
leave
in
in
xchg
fimuls
add
out
cmpsl
cld
js
bnd
mov
das
mov
xlat
push
inc
inc
mov
xchg
ja
mov
mov
mov
dec
mov
mov
mov
fstpt
add
fsubl
iret
repz
out
repnz
leave
xor
jns
or
mov
cmp
push
push
movaps
cmp
sahf
pxor
inc
scas
mov
pop
push
add
leave
leave
shrl
jg
imul
xchg
setg
jns
mov
in
outsb
mov
xlat
jecxz
jmp
xrelease
lock
aas
adc
xchg
sbb
fmulp
aaa
mov
pop
mov
cmp
add
jbe
jle
sahf
out
jbe
lcall
sahf
movsb
mov
addl
mov
pop
sub
or
xchg
xchg
xchg
mov
dec
lcall
push
jae
mov
xchg
setle
test
scas
movswl
dec
xlat
push
pop
in
dec
das
xchg
out
cli
dec
or
in
and
dec
push
pusha
sub
mov
fucomi
js
out
orb
push
add
outsb
push
dec
cwtl
xlat
or
dec
scas
loopne
mov
adc
xchg
in
pop
push
aas
push
mov
shlb
iret
mov
push
add
adc
and
sbb
das
cmp
mov
test
lahf
jo
scas
shlb
sub
push
ror
fcmove
repz
add
adc
ds
cli
add
pop
mov
shl
xor
xchg
dec
dec
pop
iret
pusha
shll
and
pop
mov
sar
iret
leave
in
in
mov
popf
pushf
pop
and
fisubrs
cmp
xchg
mov
adc
sbb
mov
xchg
sub
inc
xchg
leave
leave
in
in
push
subps
lock
dec
das
pusha
xchg
setg
iret
cmpsl
out
cmp
push
mov
or
ljmp
add
enter
ret
daa
ret
ret
xchg
mov
ret
js
push
xchg
imul
pop
punpcklbw
mov
mov
fwait
add
out
in
mov
xlat
mov
icebp
daa
stc
fbstp
jp
test
sbb
pop
add
fwait
les
fucom
jns
push
xchg
add
clts
aaa
leave
xchg
push
sahf
inc
les
fidivrs
sbb
mov
les
dec
cmpsb
mov
push
ret
fsubrl
aas
int3
paddq
xchg
inc
and
inc
lds
jb
movups
and
leave
xor
lds
adc
addr16
cmpsl
mov
xchg
xchg
xchg
mov
leave
mov
ds
lds
dec
fadds
xchg
jecxz
enter
push
add
add
dec
jb
shufps
push
shr
xchg
test
push
add
push
jmp
loopne
imul
push
cld
dec
mov
aas
pushf
repnz
jo
shrd
call
iret
mov
loope
xchg
dec
adc
scas
inc
push
das
pop
pop
iret
leave
sub
and
sahf
cmp
inc
pop
dec
outsl
push
bound
pop
push
jae
outsb
stos
dec
jl
xchg
iret
mov
dec
popf
pop
popf
fildll
jb
mov
jmp
in
aam
fcomip
ljmp
sub
out
or
xchg
insb
pop
dec
pop
psubb
pop
das
cs
mov
insb
jmp
and
add
cmovp
ss
add
enter
jb
pushf
movsb
setnp
cs
lods
enter
es
je,pt
push
cs
enter
fcmovne
repz
or
in
in
mov
stc
add
jle
leave
mov
adc
push
dec
leave
fidivrs
nop
mov
push
add
xorl
leave
iret
xlat
or
inc
mov
jo
idivl
fadds
push
inc
movhlps
lret
cmp
pop
rolb
fiaddl
fwait
mov
push
ljmp
out
push
iret
cli
push
or
das
or
pop
leave
out
decl
push
inc
shll
pop
sahf
pop
jmp
add
add
sub
cltd
lret
pop
add
mov
addr16
addr16
or
clc
pop
add
or
outsb
jae
outsb
adc
pop
cmovg
xchg
add
and
xor
mov
insl
push
jmp
push
lret
pop
mov
lret
xchg
addr16
pop
pushf
pushf
xchg
setg
cmpsl
cmp
mov
mov
cmp
sub
mov
mov
push
sbb
add
jns
out
and
jns
out
push
or
pop
or
or
inc
repnz
mov
pop
pushf
cmp
xadd
push
sbb
pop
jecxz
fsubrl
mov
psubq
int
cwtl
mov
add
repnz
adc
sbb
pop
xchg
sbb
int
dec
jne
outsb
dec
push
scas
int
in
bswap
add
pop
and
xor
int3
pop
add
movsb
pop
pop
rolb
test
or
xchg
aaa
cmp
mov
int3
mov
cmp
cmpsb
lcall
int
int
push
sbb
into
sahf
fldt
xor
add
sahf
out
push
add
cmp
cmp
or
cmp
or
repz
or
iret
cmp
repz
ficoml
in
stc
cmp
repz
adc
iret
iret
repz
cmpsl
adc
pop
daa
cmp
repz
xor
cmp
repnz
prefetcht1
xchg
xchg
xchg
xchg
push
adc
xchg
xchg
adc
adc
sbb
xchg
xchg
push
or
add
add
iret
faddp
and
out
iret
das
mov
add
sbb
inc
aas
push
xchg
pop
fisubrs
or
pushf
pop
and
mov
lods
idivb
mov
adc
fidivs
mov
daa
scas
xchg
es
mov
pop
daa
or
inc
cmpsl
frstor
push
dec
and
xchg
jl
sar
shlb
jp
mov
push
pop
shl
in
movsl
jmp
jl
inc
mov
das
out
in
cmpsl
pop
ror
sahf
out
add
iret
add
mov
or
pop
inc
daa
xchg
pop
adc
ljmp
pushf
pop
mov
addr16
push
pushf
pop
and
rclb
hlt
xlat
daa
xchg
xchg
fmul
iret
sub
shr
rclb
lcall
stc
sbbb
rcl
jmp
and
pushf
cmp
pop
xchg
add
add
les
cmpsl
mov
adc
call
out
into
pop
rclb
xchg
out
fmulp
add
or
add
add
repz
add
rep
daa
xor
push
or
sahf
out
cmp
push
push
or
or
popa
push
imul
cwtl
adc
in
add
shr
xchg
inc
popa
cmp
fstp
call
repz
shl
out
sub
pop
cmp
inc
das
enter
popa
addb
or
or
lahf
xor
xlat
mov
dec
inc
aam
push
add
pop
aam
pop
inc
cmp
out
push
fildll
jno
jle
and
adc
pop
jmp
es
bound
mov
iret
xlat
pandn
mov
or
sbb
cmpsl
mov
push
mov
daa
adc
ja
imul
ja
jg
aad
mov
mov
push
add
mov
xchg
cwtl
js
sub
bound
mov
pop
rcrl
xlat
cmova
incl
push
jg
popa
mov
cmpsb
out
mov
les
push
sbbl
pop
push
loop
pop
adc
jmp
gs
inc
xor
mulw
sbb
outsb
aas
xlat
inc
fimuls
jmp
or
sbb
xlat
je
popf
fldt
inc
repnz
icebp
notl
pop
xlat
iret
popa
xlat
lods
fwait
cmp
push
push
jno
add
cmp
iret
leave
add
jns
or
pusha
mov
xchg
push
btc
xchg
cltd
adc
mov
jae
pop
push
int3
fisubrl
mov
xchg
notl
lods
fisttpl
addr16
and
leave
xchg
fsubrs
fsubr
in
loope
dec
data16
xchg
cmp
addr16
mov
pxor
push
xchg
push
add
sahf
outsb
repnz
push
in
and
dec
idiv
or
adc
repnz
sbb
sub
shrb
addr16
dec
push
add
cs
mov
dec
push
mov
fwait
pop
movsl
ss
jl
xchg
dec
push
jae
shrl
in
enter
fnsave
ud0
invd
or
mov
or
and
cmp
mov
fidivrl
seto
inc
push
rolb
fisubrl
mov
cs
pminub
add
sub
ljmp
mov
addb
add
mov
ficompl
or
call
ja
inc
pop
sbb
shll
lock
in
cvtdq2ps
add
out
or
or
xlat
enterw
push
es
dec
jb
adc
pop
fildl
insb
add
movsl
mov
fmull
push
popa
cmpsl
fistps
test
popf
mov
loopne
pop
pop
adc
pop
mov
psubd
leave
inc
js
and
and
popa
pop
jns
pop
leave
mov
pop
mov
lods
xchg
imul
and
pop
dec
outsb
loopne
lock
inc
and
clc
pop
or
in
in
pop
push
add
add
out
add
or
out
and
or
cs
sub
push
fstl
cs
insb
cmp
sub
les
ja
daa
daa
pop
add
into
insl
pop
movq
cmp
clts
mov
iret
leave
iret
xlat
or
repnz
pop
or
insl
add
into
leave
add
pop
bound
pop
jae
jns
cmp
xchg
mov
popf
pop
dec
pop
lods
mov
mov
dec
andnps
or
das
outsb
repnz
push
pop
gs
repz
repz
adc
jge
dec
dec
mov
push
daa
daa
daa
mov
pop
vpmullw
mov
in
sbb
repz
cmc
pop
std
mov
testl
mov
and
cmp
repz
cmp
iret
repz
push
sub
pop
cs
insl
fnstcw
jne
jge
das
xor
insl
andl
mov
sbb
sub
adc
outsl
outsl
fsubl
adc
mov
push
jns
jns
inc
fisttps
push
loopne
lea
xchg
xchg
mov
je
dec
andps
outsb
daa
daa
pop
xchg
add
fs
mov
rorl
repz
xchg
add
mov
jmp
scas
cmpsl
mov
fucomi
in
or
loopne
jmp
cmp
jnp
testb
into
or
sahf
xchg
out
sub
adc
adc
unpcklps
out
xchg
xchg
loope
loope
pop
lcall
sbb
jns
into
sbb
sbb
out
repz
loope
sahf
out
push
and
jns
out
and
inc
sahf
out
sahf
and
push
sub
subb
jns
out
sub
sahf
sub
rcr
in
in
xor
call
mov
mov
jg
jecxz
adc
mov
out
fisubrs
inc
es
out
sahf
dec
and
jns
out
insb
and
and
sahf
out
lea
cwtl
push
sahf
out
sahf
mov
sbb
out
les
iret
sbb
out
sahf
out
in
lock
iret
sarl
dec
push
in
adc
sahf
out
push
sbb
sub
xlat
dec
pop
aaa
sqrtps
pop
push
jle
mov
dec
cmovp
sahf
out
pop
pop
pop
data16
iret
mov
mov
push
xchg
or
lahf
add
in
in
test
jno
outsl
call
psadbw
in
pop
in
and
das
daa
in
in
pop
iret
repz
aas
or
or
repz
or
sbbb
mov
push
setle
out
adc
jns
out
adc
adc
sahf
out
sahf
adc
out
enter
sbb
sbb
jns
adc
sbb
sub
xor
cmp
sahf
out
push
and
das
mov
in
jbe
dec
js
orl
fwait
out
cmpsb
push
sbb
jns
pop
rcll
out
sahf
out
aam
fcoml
sahf
out
sahf
in
in
adc
adc
repnz
cld
movd
or
sahf
out
sahf
or
and
sahf
out
or
or
or
cmp
inc
out
out
cmpsl
fwait
cmp
push
arpl
inc
xchg
es
dec
out
dec
jne
sbb
movsl
outsl
lods
out
shrb
mov
pmaxub
cmp
mov
add
aad
aad
fstpl
in
fucomip
push
inc
ds
pop
std
divps
xchg
testl
adc
in
repnz
sbb
out
sbb
call
lahf
sbb
xchg
jp
dec
xor
xorb
push
push
daa
mov
in
push
add
jecxz
add
jmp
psubq
jmp
or
sbb
and
out
sub
adc
push
push
adc
jb
cmp
orb
lcall
mov
ret
ret
cmp
fsub
and
jmp
and
mov
xlat
rclb
nop
movaps
jns
outsb
pop
xor
add
out
pop
push
pop
packsswb
je
out
or
or
fisttpll
ja
push
push
orl
out
adc
add
bound
scas
xchg
xchg
test
aas
jns
sbb
jmp
adc
add
sbb
daa
pop
xor
jns
out
or
push
repz
cmp
mov
or
pusha
push
iret
repz
imul
adc
cmp
lods
push
adc
repz
into
psubusw
in
add
cli
add
notb
in
pop
sbb
in
pop
cmp
and
in
dec
pop
and
in
dec
sahf
and
leave
leave
leave
in
lahf
rsm
mov
repz
leave
lret
loope,pn
in
loop
in
imul
outsl
xor
mov
in
addr16
repz
shrl
xchg
test
add
dec
in
push
add
pusha
push
push
je
repz
or
nop
in
jns
lcall
in
mov
ret
dec
sahf
out
adc
loop
ljmp
cli
sbb
out
repnz
pop
bndldx
or
adc
sahf
outsb
nopl
push
mov
stc
mov
nop
jnp
pop
cmp
cmp
maxps
jns
cmp
cmp
cltd
sbb
xchg
out
mov
push
leave
out
mov
ja
es
lock
add
std
dec
inc
sahf
or
push
and
fildll
sahf
aaa
stc
hlt
push
or
cmp
push
or
fucom
jns
bound
mov
in
jbe
pop
jp
test
lahf
fwait
sahf
out
outsb
mov
adc
adc
leave
push
aam
paddsb
mov
shl
into
push
sbb
jns
out
call
in
lret
add
mov
nop
pop
insl
jbe
jbe
icebp
jg
icebp
lahf
cmp
mov
neg
add
movaps
sahf
jnp
mov
jg
sub
push
sub
jg
cs
das
pop
sahf
out
sahf
xor
jb
jge
mov
xor
xchg
sahf
in
sahf
out
ss
aaa
mov
mov
sub
cmp
cmp
mov
jg
dec
mov
pop
pushf
cmp
xchg
aas
mov
out
outsb
xadd
inc
xlat
dec
sahf
out
inc
in
icebp
sahf
out
fisubrs
or
dec
adc
adc
add
stos
sarb
daa
je
push
loope
aas
dec
push
dec
dec
das
fwait
lret
mov
dec
inc
jge
jg
xchg
icebp
cmpb
push
mov
cmovle
jle
jns
pop
jns
repnz
push
mov
in
mov
or
or
iret
leave
leave
iret
fsub
or
ds
repnz
push
push
adc
sbb
jns
out
adc
inc
push
jb
cmp
adc
adc
sahf
ja
pop
sbb
jge
pop
lcall
mov
bswap
push
and
loopne
pop
loop
leave
jmp
add
jg
jne
nop
insb
clc
jg
push
add
sbb
push
pop
hlt
mov
lahf
jno
jl
es
cmp
add
dec
sahf
out
add
jb
leave
repz
aam
lahf
outsb
jns
fcompl
ljmp
repnz
cmovle
cmc
and
leave
repz
cs
adc
adc
repz
push
pop
pop
jns
iret
repz
cs
dec
sahf
out
sbb
enter
mov
sub
mov
jns
enter
and
cmp
insl
fimull
jmp
lea
sub
sub
adc
iret
mov
inc
cmovl
mov
xor
lds
mov
int3
aas
div
push
add
cmp
into
aas
fidivrs
out
lahf
out
xor
aam
outsl
testl
add
es
mov
jns
in
negl
push
push
pop
movntq
ja
push
or
jle
rorl
or
into
repz
cmp
stos
adc
negl
adc
adc
jbe
fsub
pop
xlat
jl
out
ds
pop
stc
sbb
out
jl
sbb
mov
sahf
out
sahf
sbb
sub
xor
xchg
xchg
out
aas
and
out
sahf
and
jp
mov
out
test
nop
popf
fsubrl
mov
leave
scas
testb
mov
pop
dec
push
or
sbb
into
repz
sbb
add
stc
sahf
pop
stc
adc
inc
dec
sahf
out
add
pop
push
pop
jae
orb
repz
repz
repz
mov
mov
jns
rorl
pmaxub
mov
aam
push
pop
cli
push
adc
ja
or
push
adc
out
outsw
cmp
inc
sbb
es
jns
push
push
sub
cmpsb
cli
daa
daa
iret
dec
pop
push
add
jne
jg
push
add
enter
pop
out
or
repnz
es
incl
sti
jns
fbstp
prefetch
sti
pop
push
paddusw
out
adc
cmp
inc
jns
iret
mov
push
pop
push
push
fmull
out
pop
insl
js
xor
iret
repz
repz
fwait
sbb
out
fidivs
and
repnz
into
and
enter
xchg
sti
or
cmp
insl
jbe
cld
pop
and
sub
sahf
testl
xchg
pop
fs
cld
int
cmp
sahf
out
mov
cmpsb
adc
adc
jns
call
daa
push
sbb
in
cld
or
push
push
sbb
xchg
out
sub
pop
aaa
inc
std
lahf
sahf
xchg
or
dec
std
fisttps
arpl
out
and
and
in
in
setp
jl
mov
pop
sub
xchg
inc
cmp
cmp
xor
mov
loope
ja
pop
lock
clc
outsb
pushf
sbb
sbb
xor
das
dec
fsubrs
push
filds
sbb
jns
push
mov
leave
shrl
pop
syscall
lcall
mov
mov
xchg
syscall
or
fisubrs
iret
or
unpcklps
cmp
jnp
pop
adc
sub
xor
inc
push
adc
xchg
pop
loopne
lcall
les
in
sbb
fisubrl
sbb
out
jecxz
repz
es
cmp
mov
das
popa
push
and
repz
ja
orb
cwtl
daa
mov
movsb
fwait
pop
das
sub
sahf
ja
cmp
iret
push
das
fisubl
fucom
jns
in
pop
xor
xchg
out
cs
push
add
ss
add
ds
outsb
aaa
pop
push
outsb
push
jmp
insb
emms
pop
iret
leave
repz
cmp
cwtl
dec
and
clc
mov
cmp
into
aas
setb
in
in
add
push
out
cmp
int
fmuls
jecxz
jns
sahf
or
stc
or
add
cmp
add
sbb
daa
push
adc
jns
leave
repz
cmp
jbe
pusha
das
imul
push
pop
xorl
pop
scas
repnz
daa
mov
sahf
out
fisttpll
call
ja
repnz
add
cs
mov
sub
sahf
xchg
out
jns
test
sub
out
scas
pop
cs
jns
in
adc
das
pop
push
xor
xor
xor
outsb
xor
fucomi
cmpsb
lahf
mov
mov
xchg
rcr
dec
add
push
lahf
push
out
dec
inc
sub
pop
add
xchg
addr16
pushf
fisttps
add
jns
in
fstpl
push
pop
mov
cmp
packsswb
ficompl
das
smsw
add
data16
cwtl
dec
in
popl
cmc
fwait
xchg
inc
mov
push
or
es
sbb
xor
fs
mov
jno
mov
cmpsl
fmul
inc
mov
es
mov
adc
cmp
pop
push
push
mov
pop
xor
loopne
sub
xchg
subl
out
out
orb
and
xchg
rorb
push
cmp
mov
add
add
aas
inc
push
or
sub
lahf
rorb
add
cmp
aaa
sub
aaa
xchg
aaa
sub
xlat
add
cs
popf
push
jbe
mull
arpl
mov
or
decl
pop
or
dec
outsb
daa
daa
or
aaa
or
jbe
jne
or
daa
jbe
mov
and
in
inc
push
addr16
das
mov
xorps
insl
cmp
pop
push
sbb
mov
orl
mov
xchg
sub
in
in
sahf
mov
in
shll
pop
or
jo
mov
mov
add
add
adc
lods
and
or
test
add
or
lcall
aam
add
push
and
mov
pushf
add
add
movsb
add
pusha
cmpb
cmpsb
fisttps
mov
repnz
mov
cmp
decb
inc
mov
out
in
inc
mov
iret
mov
in
call
mov
push
add
in
cmpsl
in
push
pop
fisubrl
xor
fcomp
loopne
jb
loope
adc
in
xchg
pushf
and
xchg
nop
repz
repz
repz
insb
pusha
push
dec
inc
cmp
iret
repz
xor
sub
repz
repz
sbb
adc
imul
and
in
and
out
outsl
in
faddl
aam
shlb
mov
dec
out
cwtl
out
out
push
dec
insb
push
fs
pop
push
jns
repnz
into
sbb
iret
repz
aam
mov
cmp
mov
jns
repz
push
sahf
push
cmp
and
push
or
out
ds
and
fadd
mov
pushf
neg
jns
xchg
pushf
push
je
pusha
push
inc
add
pop
icebp
adc
add
adc
in
push
xor
cmpb
lock
js
clc
mulb
gs
incl
dec
hlt
xor
jno
xor
aas
sbb
es
push
or
lock
push
orb
lock
mov
xorb
iret
dec
outsl
lock
call
push
mov
daa
push
adc
je
fists
pop
shll
inc
sgdtl
push
adc
jg
add
sbb
xchg
jb
mov
add
add
mov
arpl
fsubs
pop
das
add
popl
or
add
js,pn
dec
mov
inc
stc
pop
jg
jl
addl
pop
out
fdivrs
lock
repnz
out
sbb
jb
es
jns
ja
xor
insb
ss
out
and
sahf
push
mov
and
sbb
adc
ds
and
sahf
testl
jns
out
and
or
or
adc
fcompl
repz
jns
adc
xor
sub
and
push
and
sahf
out
and
and
and
add
aaa
inc
dec
cmp
or
clc
rol
xchg
fucomi
pop
imul
daa
xor
and
subb
fmulp
xlat
xchg
incl
xorl
fistl
cmp
repz
xchg
mov
in
repz
repz
xor
dec
insl
add
jns
aaa
cmp
pop
ja
mov
testl
das
push
dec
insb
adc
xchg
xchg
mov
repnz
jb
or
or
ret
cmpxchg
cld
xchg
movntps
sbb
leave
sbb
scas
mov
ret
inc
and
sahf
mov
sub
inc
rcrb
and
decl
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
mov
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
jmp
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
ljmp
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
gs
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
pop
hlt
lcall
cmpsb
lock
mov
popa
sar
mov
sbbb
std
ljmp
mov
subb
fwait
xchg
and
xor
int3
add
aas
jno
or
mov
out
or
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
jmp
test
inc
lods
lds
mov
insb
scas
add
aas
xor
aad
mov
jmp
aas
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
dec
adc
lcall
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
jg
lcall
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
std
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
jg
inc
xchg
test
pop
mov
jne
fldt
cmp
jno
sar
jmp
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
jmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
cld
outsl
call
and
dec
dec
gs
std
orl
pop
ficomps
frstor
sbb
into
or
or
addb
jno
mov
add
pop
repnz
inc
inc
je
inc
inc
push
dec
jnp
addr16
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
mov
xchg
jg
stos
insb
cmp
int
fdivrs
pop
fisubl
call
dec
inc
jo
inc
popa
push
outsb
jbe
imul
push
mov
gs
outsl
dec
cs
and
add
adcb
shlb
in
leave
add
push
dec
out
sbbb
inc
dec
push
inc
push
adc
jnp
jo
jb
push
push
adc
inc
inc
inc
test
mov
dec
inc
gs
gs
insb
xchg
clc
mov
ds
arpl
test
rcl
or
bound
outsl
push
dec
pop
mov
push
push
xchg
and
xorb
xor
and
fisubrl
and
inc
push
das
push
fs
add
push
mov
cwtl
add
xchg
dec
rorl
daa
daa
mov
jge
dec
jae
imul
xor
inc
jg
jnp
cmovae
loopne
lahf
or
push
push
les
push
cmp
jp
test
je
dec
rclb
shlb
push
push
imul
sub
insl
inc
inc
inc
inc
adc
jb
dec
fidivrl
dec
lds
jae
jbe
mov
push
dec
test
push
mov
adc
xchg
int
cmpsb
adc
push
mov
mov
aas
push
sti
dec
popa
jne
arpl
and
dec
pop
cmp
pusha
pusha
xlat
push
or
dec
rol
mov
add
aad
and
clc
pop
mov
js
cli
dec
sub
mov
or
or
push
add
scas
push
jg
notl
push
imul
andl
loope
jb
lds
orb
das
pop
add
push
mov
addl
jp
lock
push
sbb
and
gs
stos
or
mov
push
push
outsl
push
inc
arpl
push
lds
test
out
xor
pop
jg
adc
mov
mov
cmp
sbb
mov
mov
data16
push
add
jno
outsl
mov
pusha
pop
outsl
ja
or
pusha
pop
es
add
aam
or
arpl
inc
or
push
inc
jo
adc
lahf
ss
pop
icebp
ja
stos
sub
push
gs
dec
scas
sub
dec
lahf
sbb
pop
inc
dec
subb
push
lahf
nop
leave
dec
add
adc
test
jg
sbb
rcrl
mov
aas
decl
out
sub
add
stos
lahf
mov
inc
jno
nop
cmp
out
mov
and
outsl
shl
mov
dec
dec
jb
inc
test
js
add
cmpsl
mov
aam
arpl
dec
outsl
add
push
movsb
and
outsb
push
sub
fisttps
pop
push
jne
les
outsl
sbb
cmp
loopne
push
mov
jle
dec
outsl
addr16
rolb
aad
iret
cmpsb
test
mov
iret
pop
sub
fcmovb
insl
pop
arpl
lea
das
xlat
stos
dec
adc
out
jg
repz
cwtl
incb
jl
dec
sahf
out
cmp
or
jns
out
mov
jl
sub
cltd
shl
rol
data16
inc
insb
pushf
cmp
jmp
dec
push
js
pushf
cmp
pause
push
and
lahf
incl
ljmp
add
popa
push
out
mov
inc
insl
pop
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
decl
mov
sub
mov
sbb
dec
jno
repz
test
call
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
lcall
fldcw
arpl
or
pop
adc
in
pusha
aad
jno
mov
jmp
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
or
xor
iret
or
shrl
pushl
fldenv
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
mov
add
and
or
adc
stos
sbb
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
ja
pushl
aam
call
xor
mov
lcall
cwtl
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
decl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
jl
mov
bound
ficoml
gs
aam
pop
popa
mov
into
pop
ljmp
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
dec
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
pushl
mov
lcall
ljmp
fildl
push
fdivl
or
test
cmp
push
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
rcl
jmp
add
inc
push
imul
xorb
sbb
push
imul
jg
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
lret
sbb
outsl
and
xchg
ja
int3
add
mov
das
es
mov
or
sub
mov
cmpsl
call
ret
shlb
sbb
pushl
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
push
pushl
hlt
orb
adc
mov
jnp
sbb
xchg
or
out
fdivr
jl
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
cmp
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
call
std
clc
sar
imul
push
js
or
push
addl
mov
cmp
jmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
ljmp
mov
inc
jmp
repnz
lret
mov
cmpsb
mov
pushl
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
cs
movsb
mov
or
sbb
add
add
iret
push
loop
shlb
xor
cmc
mov
cmpsl
outsl
inc
jne
push
popl
or
mov
imul
je
push
insb
imul
lods
pop
filds
sar
pop
inc
jbe
push
jns
arpl
arpl
mov
fsubrs
in
push
inc
insl
sub
mov
pop
inc
jne
outsl
insl
addr16
xchg
sbb
rcrb
add
or
xorb
ja
adc
cmp
push
xchg
mov
dec
inc
js
xor
bound
cmp
inc
js
pop
ret
sub
fistl
in
sbb
and
aas
pop
inc
cmp
pop
imul
jmp
xor
aaa
cmp
popa
arpl
cmp
arpl
or
popa
add
jg
xor
xor
xor
loope
dec
les
inc
jbe
pop
sbb
adc
icebp
xor
inc
ret
negb
cmp
inc
or
xchg
inc
lock
fmull
push
pop
shll
mov
mov
cwtl
push
ss
jbe
arpl
add
aas
movsl
sbb
ret
aam
jle
hlt
nop
fsubrs
inc
push
clc
xchg
inc
jo
js
sbb
and
inc
fldl
xchg
insb
popa
jns
pop
mov
push
push
dec
insb
xor
and
rclb
movq
popl
in
push
and
and
jae
cmp
adc
push
aas
dec
nop
lods
stos
cmpsl
push
mov
inc
fcomp
insb
sbb
inc
pop
pop
add
jae
inc
mov
in
fiadds
add
ds
test
mov
mov
mov
call
xchg
sbb
arpl
inc
outsb
jne
and
mov
dec
jge
int
jne
xor
xor
or
inc
cmc
mov
add
addr16
push
xchg
into
pop
jo
or
pop
inc
cmp
add
aaa
dec
add
je
orb
sbb
dec
ss
inc
mov
pop
push
xchg
inc
mov
lahf
inc
dec
mov
or
mov
push
pop
adc
rclb
lds
jb
dec
add
frstor
push
js
adc
jo
sahf
add
lahf
aas
push
outsl
outsl
mov
mov
push
pop
push
jno
inc
stos
and
in
sub
pop
shl
shr
test
pop
cmp
arpl
push
cmp
inc
and
mov
call
lea
lock
jns
jne
jo
das
inc
pusha
push
popa
jb
push
fs
mov
sbb
nop
adc
mov
adc
insb
bswap
arpl
clc
or
bound
pop
dec
popl
test
push
aaa
ja
or
ret
movl
xor
bound
sbb
add
push
sub
aaa
pop
jl
adc
loopne
push
pusha
pop
popl
addr16
xor
testb
push
xchg
mov
and
mov
movsl
sahf
aas
pusha
popa
adc
cmc
jg
outsl
shll
dec
and
sbb
cs
push
outsb
cwtl
adc
dec
pushf
mov
inc
lds
jns
daa
aas
pop
inc
or
mov
add
and
add
pop
sbb
push
rcrb
inc
aaa
add
pop
sarb
pop
nop
inc
movsb
xor
repnz
std
clc
or
pop
mov
int
inc
inc
repz
and
sbbb
add
lock
add
mov
jb
push
cli
pop
add
inc
dec
push
and
sti
fistpll
or
cmpsb
dec
shrd
popa
incl
lea
pop
decb
or
bswap
mov
out
psubusw
test
repnz
in
push
pusha
ljmp
lret
pop
dec
cli
push
cld
push
imul
add
in
test
rcl
mov
daa
ss
aas
loopne
add
or
or
push
daa
out
xchg
ja
cmp
adc
adc
add
mov
add
fdivrp
imul
adc
lods
jbe
pop
xor
adc
xchg
xor
jbe
pop
subb
or
loop
inc
mov
push
add
cmpsb
nop
insl
loopne
add
jns,pn
cld
cltd
popf
add
les
lods
add
add
inc
imul
aaa
nop
lret
cs
mov
sbb
add
aam
loopne
sahf
jae
arpl
xlat
out
cmpsl
test
add
jnp
test
push
dec
sbbb
inc
inc
rclb
pop
cmp
rcll
adc
jmp
xchg
jno
rolb
mov
or
rorb
add
rolb
mov
pop
or
dec
jne
sahf
mov
pop
or
mov
lret
sub
fsubl
imul
jbe
pusha
pop
ja
in
push
push
negl
xor
enter
xor
repz
gs
push
incb
add
or
sub
ja
cmp
or
call
pushf
xor
in
xchg
dec
cmp
into
int3
loope
pop
or
je
jnp
push
movsl
rcrl
outsb
hlt
mov
insl
adc
imul
jl
les
xor
rcrb
push
push
mov
xchg
clc
add
pcmpgtw
mov
in
inc
cmp
stos
out
out
mov
xorps
sbb
push
movzbl
mov
or
or
rcll
test
or
leave
mov
les
imul
push
mov
adc
cmp
jbe
mov
add
pop
dec
ljmp
pop
imull
mov
nop
mov
sahf
leave
roll
ret
or
adcb
loopne
into
scas
mov
and
mov
add
cltd
loopne
call
sbbb
push
add
outsb
and
sub
jbe
dec
or
adc
xchg
and
aad
or
mov
jne
push
inc
imul
add
adc
xchg
mov
mov
insb
sub
push
sti
push
xor
sbb
xchg
sub
dec
and
andb
jne
push
jecxz
mov
mov
and
and
cmp
test
sub
mov
mov
movsl
mov
push
lea
jl
hlt
cld
add
daa
shrl
cmpsb
xchg
push
sbb
in
imul
or
enter
out
adc
push
push
fstpt
add
dec
in
push
leave
push
xchg
es
pop
mov
cmp
pop
add
ja
and
sarl
movsl
outsl
mov
adc
cmpsl
loope
lock
outsl
push
mov
jp
dec
pop
push
ret
je
rolb
sbb
sbb
subl
pop
cltd
test
lea
mov
enter
xchg
mov
inc
or
test
push
mov
es
call
aam
je
inc
test
mov
in
jecxz
push
add
sbb
add
push
mov
jl
in
aam
lea
dec
out
or
lds
mov
scas
lds
push
jno
mov
in
shll
add
bound
popf
je
shrl
in
add
and
mov
push
or
ficompl
add
repnz
cs
xchg
addr16
hlt
or
mov
xchg
inc
repnz
mulb
aas
sbb
lcall
and
rorl
in
push
mov
jb
test
sub
popf
icebp
jne
or
and
xor
bound
inc
ljmp
dec
pushf
sbb
imul
pop
je
call
push
push
insb
add
cmp
fdiv
sub
adc
push
imul
mov
xor
and
adc
xchg
push
inc
or
pushf
out
ss
jl
sbb
lcall
or
stc
jp
popf
pop
es
push
cmc
loopne
pop
lds
jne
add
pusha
cmc
xlat
pop
jp
push
dec
jl
pusha
or
inc
or
add
sub
pop
mov
addr16
and
pop
xchg
sbb
test
ja
mov
add
pop
rolb
sub
mov
call
pop
out
outsb
push
jnp
int
push
adc
or
pop
inc
xchg
ret
sbb
jl
subl
pop
fchs
pop
call
or
cmc
mov
mov
add
in
add
add
pop
xchg
adc
and
add
scas
add
push
sar
ss
lcall
rcll
or
mov
enter
stos
lods
sbb
dec
cmpsl
jecxz
and
mov
ds
inc
sub
cmp
stos
push
call
call
sub
pop
jne
xchg
lea
and
mov
or
xlat
xorb
cld
mov
je
cs
mov
sbb
jmp
test
or
outsb
add
push
dec
inc
lock
xorb
dec
call
inc
add
dec
pop
sbb
shrb
mov
cmpb
or
ja
pop
mov
xor
jmp
xchg
xchg
sbb
dec
call
jnp
into
pop
in
dec
push
inc
inc
cmp
mov
loopne
aad
xor
in
dec
imul
push
fs
sbb
sbb
push
je
cmp
fdivrs
fsubr
shl
or
xchg
add
jmp
xchg
pop
sub
push
inc
push
xor
repz
sbb
cmpsb
sbb
mov
or
out
sbb
or
add
ret
sub
or
adc
push
xchg
mov
pop
mov
jecxz
inc
movzbl
sbb
add
mull
adc
clc
je
push
pop
or
pop
ret
aas
sub
movb
sub
lds
and
push
pop
pop
mov
lds
and
shll
pop
jbe
je
sub
push
loopne
adc
or
rcl
pop
ret
push
mov
sub
jnp
and
loop
jo
in
and
add
mov
sbb
shlb
push
pop
push
push
mov
mov
cmp
shll
or
ds
sbb
push
subps
jnp
aaa
sbb
sbb
test
popa
pusha
loop
fdivr
jecxz
sbbb
jb
xor
sub
mov
mov
push
push
dec
fdiv
es
cmp
pushf
sbb
jbe
xchg
pusha
push
fimull
mov
xchg
in
int3
call
or
pop
xor
or
cmp
jmp
mov
sub
fisttps
mov
adc
xchg
cwtl
sbb
insl
stc
shlb
xor
ja
add
push
jb
call
daa
les
aas
mov
pop
and
addr16
xchg
xchg
dec
xchg
test
in
mov
lea
adc
movsl
inc
jbe
mov
nop
add
add
lds
push
mov
mov
mov
mov
add
sub
daa
shlb
fildl
or
cmpsb
imul
fiadds
out
sub
push
out
repnz
sbb
call
cmp
hlt
fdivrp
xor
fdivr
andb
loop
ret
xchg
mov
xor
xor
decb
mov
add
push
sub
xor
ds
ss
aas
xor
mov
xor
call
mov
mov
idivl
or
mov
adc
sub
add
mov
push
jle
xchg
les
adc
pop
mov
pop
jb
andb
lea
push
repnz
enter
mov
repnz
xchg
push
pushf
imul
movsb
pushf
pop
sub
adc
or
push
cltd
arpl
stos
fstpt
jle
rcll
fisubs
nop
bound
adc
inc
in
lcall
add
pop
shl
sub
inc
and
push
repz
cmpsl
fisubs
mov
stos
push
pop
push
sbb
sbb
std
jo
shlb
push
mov
rolb
sbb
mov
pusha
ljmp
outsl
push
jb
je
ljmp
ljmp
pop
pop
stos
je
and
les
andl
or
sbb
cmp
push
clc
je
mov
sub
mov
sbb
inc
pop
adc
gs
push
push
xor
add
sub
pop
ficoml
or
fisubrs
and
fidivrl
cmpsb
into
rcl
fiaddl
mov
dec
imul
lret
sbb
inc
push
loopne
pop
aaa
sub
hlt
enter
sbb
in
or
mov
sbb
loop
std
sub
adc
sub
jnp
mov
adc
push
jnp
and
and
scas
dec
adc
imul
xchg
ss
mov
push
push
adc
call
mov
jle
jmp
mov
pop
dec
lcall
mov
loopne
fnstenv
in
in
sarb
push
push
add
and
and
or
jmp
fsubl
jb
inc
inc
ficomps
pop
and
and
in
xor
push
xor
loope
fdivl
jne
push
or
nop
dec
in
adc
sti
mov
or
enter
bound
pop
jno
cmpsl
imul
push
call
cmp
adc
dec
pop
xlat
jo
sub
mov
mov
cmp
inc
test
test
rcr
in
mov
insb
loope
pop
mov
roll
inc
cltd
bound
cmp
scas
cltd
je
inc
or
fdivl
lea
cmp
mov
sub
je
in
in
sbb
cmp
in
mov
adc
out
ret
mov
lcall
mov
adc
cmp
pop
imul
mov
shl
push
andl
jnp
pop
fists
push
ljmp
jne
clc
jne
movsb
mov
jne
mov
lods
push
cmp
arpl
push
or
xor
push
or
push
mov
mov
dec
mov
jae
xlat
mov
xor
jmp
or
add
faddl
call
inc
enter
push
lahf
insl
cwtl
adc
adc
sahf
les
movswl
pushf
adc
mov
fldl
mov
lods
lods
dec
xlat
push
push
cwtl
stos
xchg
pop
mov
jecxz
repz
pop
into
inc
call
xchg
mov
lea
jb
adc
add
cwtl
add
in
pop
pushf
in
dec
adc
or
mov
in
rorb
int3
dec
or
add
cmp
rcll
push
add
jne
jl
mov
add
push
fildl
adc
movl
dec
sarl
in
test
test
jne
cmp
add
fdivrs
mov
orb
push
pop
icebp
or
gs
jne
dec
dec
ljmp
push
add
add
out
enter
loopne
loop
shrb
mov
cmp
xchg
xorl
daa
cmp
or
and
inc
insl
jge
mov
mov
mov
in
inc
xchg
push
add
pop
and
je
push
mull
js
add
or
je
mov
lea
jmp
pop
dec
or
loopne
outsb
sbb
cld
inc
mov
adc
ficoml
xchg
xor
bound
jmp
mov
fs
imul
popa
adc
push
das
imul
or
lcall
sahf
scas
cmc
pop
pusha
popf
rorl
adc
inc
dec
or
nop
add
or
lods
cmp
mov
lods
pop
push
cltd
add
mov
mov
xor
lods
scas
add
inc
jne
xor
inc
add
inc
sbb
lods
push
add
popf
out
popa
inc
adc
mov
insb
add
mov
in
aaa
clc
mov
jne
push
loopne
cli
test
xchg
push
mov
mov
fists
push
inc
add
adc
ds
test
repnz
mov
inc
inc
xor
inc
call
rorb
or
shr
adc
mov
or
jnp
mov
ss
stos
std
std
enter
movhps
jb
cld
cmp
sarl
cmp
rorl
inc
rorl
push
mov
mov
and
aas
jmp
mov
dec
fisubrs
test
testb
and
gs
orl
inc
pop
push
xchg
jb
sub
dec
add
adc
std
adc
ds
nop
push
ds
jl
shrl
outsl
mov
jne
pop
fldl
jbe
test
add
sarb
sahf
lret
dec
add
mov
ljmp
cmp
or
jl
mov
adc
adc
sarb
add
inc
fcoms
or
sub
shlb
sbb
jmp
add
or
or
or
mov
jne
in
ret
dec
cmp
push
xor
fistl
fs
or
daa
jae
ret
inc
mov
inc
int3
lods
or
sbb
and
subl
out
mov
daa
pop
mov
adc
xchg
adc
cmp
and
hlt
jne
rclb
adc
popf
mov
or
mov
add
cmp
cwtl
inc
jecxz
aaa
imul
push
mov
push
call
lcall
ret
sub
inc
jbe
mov
mov
push
xchg
popf
push
dec
sbb
mov
xchg
xchg
sarb
jge
clc
push
or
enter
lret
and
jne
xor
adc
std
jmp
and
xor
pop
call
inc
jmp
in
ficoml
jle
or
insl
mov
xchg
js
in
mov
lahf
cwtl
xorl
fstl
or
mov
pop
inc
jb
cmp
popa
aaa
ret
xor
cmpb
fs
sub
sub
aam
sbb
sbb
rorb
je
dec
or
sbb
adc
xchg
and
data16
sbb
mov
cmp
xchg
jae
leave
push
mov
jl
imul
jg
jne
mov
jmp
or
xor
movsb
cmp
or
pusha
cwtl
mov
push
or
call
dec
cmpl
shr
test
add
mov
mov
and
pushf
push
insb
push
adcl
or
inc
sbb
addb
ja
inc
push
add
call
out
push
cmp
or
fisubrl
jne,pn
ljmp
and
test
shll
outsb
int
decb
ss
mov
test
inc
cltd
cmp
insb
inc
adc
dec
mov
adc
mov
mov
adc
push
mov
cwtl
or
popf
inc
bound
out
xchg
out
insl
push
out
push
fucomip
cmp
push
insl
pop
in
je
cmp
jbe
movsb
add
and
nop
cld
mov
subb
clc
push
inc
mov
fsubs
std
pop
jbe
sub
lock
fsubl
pop
cwtl
sbb
push
in
or
test
mov
hlt
pushf
cli
adc
push
popf
fadd
shlb
xor
pushf
loop
fwait
or
test
inc
jmp
xorl
mov
sbb
imul
sbb
mov
fmuls
rcl
dec
adc
or
fadd
pusha
mov
fimuls
fwait
jmp
push
mov
cmp
aas
fsubrp
jo
push
sbb
adc
adc
gs
adcl
or
sbb
adc
push
inc
adc
add
and
lods
stos
loopne
sti
push
and
je
test
inc
lea
aad
xchg
addb
dec
in
test
stc
xor
jo
jg
sub
icebp
sub
pop
push
lea
mov
mov
mov
push
jno
enter
jne
mov
sub
push
scas
dec
push
push
push
cmpsb
aam
cmpsb
inc
mov
in
sbb
cld
clc
loop
push
cli
call
push
jo
sbb
je
aad
filds
and
add
scas
fnsave
fwait
jae
js
push
push
lret
xchg
add
mov
or
push
jns
add
mov
adc
aam
lret
xlat
shrl
repnz
or
mov
pop
or
into
imul
mulb
mov
jmp
lret
and
leave
roll
enter
jo
sbb
jmp
in
xlat
adc
out
mov
loopne
pop
sub
lock
dec
push
hlt
ss
xor
mov
adc
jne
clc
and
cmp
jmp
rclb
cld
push
add
push
dec
mov
in
mov
cmp
mov
and
or
push
sub
xor
add
sub
mov
adc
ss
push
cs
push
add
sbb
xchg
or
inc
cmp
call
or
dec
ja
pop
movsb
call
inc
ficoml
mov
sbb
adc
push
stos
mov
or
jne
addr16
sbb
mov
push
int3
sbb
xchg
dec
cld
jne
into
cmp
xchg
or
jmp
ss
cmp
subl
jne
push
pop
and
or
je
push
sahf
jmp
decb
mov
mov
jo
adc
xor
es
jae
js
pop
add
sbb
loop
icebp
call
rolb
push
or
das
enter
and
push
mov
fisttpll
push
push
push
jmp
xlat
inc
mov
call
leave
test
inc
mov
lcall
dec
jl
js
negb
cmp
dec
push
nop
push
xor
out
imul
dec
mov
fxtract
jmp
and
insb
pop
xorb
movsb
mov
roll
outsb
mov
pop
dec
jl
movl
test
adc
add
movsl
popa
fdiv
add
and
xchg
jne
mov
imull
in
and
in
movsb
jmp
lret
in
js
sbb
out
xchg
and
insb
adc
dec
push
data16
sbbl
cmp
shll
jbe
imul
cmpl
insb
into
and
push
mov
push
stc
add
pop
sub
arpl
and
dec
sbb
mov
add
pop
test
fdivl
or
mov
dec
jl
out
cwtl
or
popf
pushf
or
cmp
fidivrs
lea
adc
stos
push
inc
dec
mov
fs
inc
mov
shll
mov
inc
mov
incl
cmp
jg
push
dec
lea
add
pop
mov
cmp
jbe
test
ret
fstpt
mov
add
jl
adc
pushf
ret
mov
push
decl
or
inc
inc
dec
jne
bndldx
fdivs
xor
adc
scas
aam
nop
mov
sub
test
xor
and
lea
incl
nop
sbb
sub
es
lods
jmp
decl
dec
lods
and
adc
cli
sub
sbb
test
xor
or
xchg
add
and
ja
xorb
xchg
enter
xor
inc
pop
rorb
pop
push
sbb
mov
fmuls
or
shlb
mov
xor
test
push
stos
aaa
and
loopne
dec
sbb
leave
js
dec
dec
fwait
adc
or
sahf
inc
cwtl
mov
fstl
call
popa
es
push
movsl
shrl
dec
aam
mov
test
and
jmp
xchg
les
stos
clc
test
mov
push
or
push
jle
movsb
sti
lds
dec
lds
jmp
orb
in
mov
adc
mov
aas
mov
adcb
inc
negl
xchg
adc
pop
inc
add
dec
add
sub
sar
call
sub
mov
out
jbe
add
or
add
and
adc
add
add
add
fcmovnbe
out
xor
rorl
mov
inc
and
inc
adc
or
lds
jp
add
mov
pop
mov
xor
add
add
or
mov
mov
rcrl
in
adc
push
xchg
push
adc
or
mov
fs
pop
popa
pusha
inc
nop
orb
push
dec
inc
inc
adc
andb
addr16
cli
or
or
jp
pmaddwd
jle
mov
callw
mov
call
call
sti
push
jmp
js
dec
aam
inc
adc
iret
cmpsb
jns
cmp
call
je
jmp
xchg
pop
int3
pop
outsl
sub
xchg
pop
outsl
cmpsl
sarb
test
out
rcrl
cmp
or
jle
and
mov
out
fdiv
pop
call
clc
scas
pop
inc
xchg
repz
andb
fnstcw
mov
jb
cmp
jmp
je
das
leave
mov
sbb
ret
xlat
xchg
rol
xchg
out
mov
addr16
jne
enter
pop
push
les
fmul
cmp
xor
dec
rcl
fisttpl
sbb
lds
shr
addl
and
pop
inc
add
ljmp
push
sbb
repnz
push
mov
adc
leave
test
pop
jo
test
and
mov
sub
or
pop
mov
xor
sarb
fiadds
sti
mov
xchg
push
push
es
adc
push
add
push
and
jns
adc
test
xor
shll
pushf
mov
push
push
or
dec
syscall
add
movb
adc
outsb
iret
dec
insb
adc
call
ficomps
cltd
mov
or
pop
add
or
mov
js
sbb
fnstenv
lea
push
dec
rorl
jae
dec
sbb
pop
fs
adc
jp
test
daa
dec
loope
sbb
sahf
add
sub
push
jecxz
and
xchg
pop
aaa
mov
arpl
movsl
adc
or
adc
and
add
rclb
cmp
orl
and
and
xchg
pop
rolb
mov
add
mov
inc
shr
orb
les
and
sbb
or
add
sbb
inc
mov
inc
ss
and
adc
sub
adc
cmp
pusha
inc
jbe
pop
jb
inc
cmp
mov
lret
call
mov
or
rcrb
sbb
xchg
or
push
inc
dec
imulb
cmpsb
and
fs
idivl
pusha
nop
push
in
nop
je
mov
popf
out
insb
dec
cs
outsb
dec
out
repz
inc
or
push
sub
sbb
into
repz
or
ds
sbb
dec
out
or
mov
mov
mov
pushf
adc
pushf
and
xor
pop
nop
add
and
dec
xchg
add
out
and
fisubrs
mov
mov
or
repz
repz
mov
ror
sbbb
jge
or
cld
or
push
adc
mov
popf
sub
inc
sbbl
sub
sub
addr16
cmpsl
or
rcrb
sub
inc
dec
mov
jne
dec
or
insb
and
aam
ja
adc
dec
pushf
push
pop
jmp
xor
xor
xor
xor
sub
add
pmulhw
or
lahf
ret
lea
out
push
ficoml
test
inc
xor
push
pop
add
or
add
pop
repnz
add
add
and
sub
jo,pt
cmp
je
xchg
add
enter
mov
mov
push
push
push
gs
lcall
or
in
or
xchg
push
repnz
cld
add
or
enter
or
imul
or
sbb
or
or
push
or
addr16
push
movzwl
pop
xor
adc
pop
fidivl
jb
adc
scas
in
mov
int
inc
push
inc
adc
adc
test
adc
in
in
adc
sub
push
push
inc
jae
inc
sahf
pop
pop
and
aad
mov
sbb
mov
cmp
sbb
sbb
enter
mov
pop
enter
sbb
je
bound
jns
sbb
jo
push
repnz
pop
push
in
push
repnz
inc
negb
pop
add
add
add
sub
cmp
sti
outsl
rcll
mov
add
cmp
add
cltd
inc
xchg
and
lods
pop
lods
stc
cmp
push
in
push
in
imul
fistl
sub
rcl
ret
out
xchg
mul
xor
mov
xchg
out
out
in
pop
mov
sub
call
and
adcb
pop
leave
jnp
xchg
mov
cmp
cmp
ljmp
pop
add
lcall
movsb
sub
or
in
in
xchg
sub
push
aad
in
cmp
in
sahf
xchg
mov
out
xchg
xchg
or
pusha
out
or
je
in
xorl
xchg
dec
jb,pn
outsl
icebp
cmp
das
jnp
inc
scas
xor
adc
repz
cmpsb
repnz
std
hlt
hlt
imul
std
cmc
repnz
cmp
mov
mov
sbb
or
push
pop
gs
clc
clc
clc
leave
xor
or
repnz
cli
add
cmp
sti
sti
fdivrp
push
ss
cld
cld
je
cld
push
push
aaa
and
jne
mov
xor
sbb
insl
fs
sahf
xor
inc
ret
pop
hlt
push
xchg
sub
jb
lahf
shll
int3
xchg
xor
or
or
fwait
or
jecxz
jecxz
push
shll
xchg
xor
sub
in
addl
sbbb
adc
inc
or
out
jb
inc
out
scas
call
cltd
sti
adc
inc
mov
cltd
or
out
jmp
xchg
daa
dec
pop
push
in
cltd
or
daa
or
cli
aad
imul
in
aad
mov
andb
cli
or
aas
repz
add
mov
leave
and
stc
xchg
cmpsb
jb
imul
mov
xchg
clc
in
repnz
cmp
mov
xor
sti
inc
scas
ss
sti
sti
xchg
or
scas
xchg
push
repnz
jmp
mov
cmp
scas
mov
mov
jl
daa
add
sub
aad
imul
shl
add
loope
clc
andb
and
imul
out
pop
push
xchg
push
fdiv
out
mov
negl
lret
imul
ljmp
push
jmp
pop
repnz
notl
mull
hlt
imul
out
push
inc
test
repnz
notb
mov
insl
repnz
repnz
inc
repz
pop
push
loope
testb
sub
test
mov
out
imul
iret
in
mov
dec
loope
cmp
jb
cmp
rcrl
jb
or
and
sbb
cli
hlt
subb
or
xchg
test
add
push
stos
into
jo
adc
push
ret
clc
sti
mov
loope
loope
scas
xchg
stos
jp
movnti
cmp
mov
in
pop
lret
or
pop
repz
setb
aam
mov
lcall
jmp
pop
mov
pop
pop
dec
repz
in
xchg
adc
pop
mov
pop
pop
repnz
repnz
add
or
jb
scas
dec
icebp
icebp
das
xchg
pop
inc
jb
sub
ds
mov
pop
repnz
dec
push
cmc
cmc
mov
icebp
mov
andb
icebp
or
jne
stc
push
and
test
dec
icebp
xor
andb
or
out
lock
mov
xor
ret
add
jmp
repnz
fwait
push
sub
ffreep
push
inc
fcmovbe
dec
push
insb
loope
inc
cmp
cmp
ret
mov
adc
mov
test
inc
add
jne
stc
mov
fld
xor
jmp
xchg
pop
ljmp
pop
xchg
hlt
and
and
jmp
dec
or
push
nop
push
jns
xor
cmpsl
xor
or
push
add
dec
adcl
mov
jl
push
jecxz
repz
mov
sahf
jae
insb
sbb
push
push
aad
jns
imul
dec
xchg
gs
dec
outsb
and
mov
jno
inc
cmp
or
inc
mov
mov
rcrl
and
lea
mov
cmp
and
dec
dec
or
test
sbb
jmp
dec
push
mov
xchg
or
xchg
in
xchg
push
test
jg
popf
arpl
adcb
inc
and
push
fsubrs
scas
push
or
rclb
movsb
sub
push
adc
inc
and
fwait
sub
aaa
sub
mov
dec
sarb
xlat
pop
mov
mov
cld
inc
inc
xchg
push
push
adc
adc
hlt
ret
daa
or
aam
in
jmp
sbb
pop
pop
adc
push
enter
push
and
pop
leave
inc
ds
jmp
jmp
ret
cmp
sub
inc
push
push
rclb
mov
insb
jno
dec
cs
mov
jb
inc
jno
mov
and
cli
adc
jmp
cwtl
bound
pop
xor
stos
sub
loop
adc
or
adc
hlt
psubsw
xor
push
sub
push
inc
push
cmp
jb
cmp
sub
add
jns
xor
jg
call
mov
add
and
enter
add
cwtl
test
xchg
add
push
pop
lds
sub
or
loopne
mov
jo
add
mov
xorb
dec
xor
ret
mov
inc
push
mov
fstl
xchg
mov
aaa
xchg
and
inc
and
inc
dec
pop
rorl
pusha
push
dec
nop
in
or
mov
sbb
int3
ret
mov
inc
xor
dec
nop
mov
or
xor
in
jns
data16
inc
rcrb
xchg
popf
fnstenv
inc
push
cmp
test
ds
rcl
dec
pop
xor
add
or
movsl
xchg
mov
adc
mov
inc
jnp
dec
mov
adc
xlat
xchg
inc
in
loopw
enter
mov
lcall
xchg
pop
inc
je
or
sbb
or
leave
push
lahf
push
xor
push
rcll
lahf
xor
rolb
and
fwait
dec
sub
mov
inc
inc
aaa
fcomps
movsb
sti
or
push
dec
inc
leave
xor
mov
add
lret
pop
repnz
rcll
jmp
fwait
data16
add
movsb
lahf
adc
fwait
add
nop
cli
lahf
in
mov
and
cmpsb
mov
imul
pushf
dec
enter
es
push
rcl
jns
sbb
nop
push
dec
xor
out
or
cmp
lds
sbb
movsb
lahf
test
outsb
cmpsb
mov
stos
dec
nop
into
jmp
nop
outsb
imul
inc
sahf
cmp
jb
jb
sub
sbb
cmp
movsb
in
xor
push
out
cltd
xchg
and
mov
in
lahf
mov
fwait
repz
bound
movsb
mov
hlt
jbe
sbb
leave
addb
pop
push
inc
es
add
adc
pop
lcall
xor
lahf
fbstp
lahf
inc
and
pushf
or
test
inc
xor
xchg
sbb
cmp
mov
cmp
cmc
add
xor
jmp
xor
jb
les
aam
and
xchg
add
leave
adc
rcrb
adcl
or
pop
sahf
push
stc
aaa
sbb
xchg
sahf
loopne
cltd
imul
sbb
xchg
push
inc
cmp
cmp
jno
or
cwtl
imul
push
jmp
push
lea
inc
mov
mov
and
test
adc
cmp
xor
mov
push
lcall
rcl
sbb
sbb
pop
std
lods
inc
es
es
pusha
addl
inc
dec
mov
arpl
movsb
mov
fs
outsb
mov
in
mov
jl
shlb
fcmovnb
or
cltd
xchg
xchg
inc
imul
lret
xor
popf
add
imul
and
clc
mov
pop
dec
inc
or
dec
cmp
fnstenv
and
out
cmc
pop
sbb
or
add
jecxz
push
sub
rcll
sub
or
nop
jbe
inc
fdivr
hlt
jle
sub
add
or
inc
xor
mov
std
sbb
dec
and
push
or
mov
xor
add
xor
adc
jnp
adc
jle
movb
mov
adc
inc
push
jns
loopne
aam
and
mov
lock
daa
sub
jmp
mov
bound
rolb
cwtl
add
nop
add
adc
xchg
cmpl
test
xor
movsb
xor
jmp
add
es
pop
or
mov
or
test
pop
iret
dec
int
bound
rcll
or
cmp
scas
stc
aaa
popa
aas
ss
xchg
xchg
je
sbb
add
or
inc
imul
movsb
mov
push
pusha
and
cmp
fisttpll
inc
cmp
sbb
or
or
xor
sbb
popa
dec
jbe
cmp
into
dec
dec
mov
sti
push
sbb
je
daa
dec
mov
inc
or
scas
jb
dec
ret
popa
cmp
mov
push
je
push
xchg
mov
ss
pop
push
xchg
mov
insl
sub
lea
xor
or
mov
lret
mov
xchg
lods
and
dec
mov
loope
xchg
push
push
int3
xor
nop
sbb
cltd
xchg
sbb
xor
push
sub
data16
loopne
int3
xor
cwtl
push
test
mov
pop
mov
or
cltd
xchg
mov
mov
ds
shl
lret
mov
rolb
je
loopne
mov
mov
sbb
xor
call
rcl
xlat
scas
test
mov
mov
scas
pop
test
sbb
mov
inc
sub
xor
push
loope
int
je
sub
push
int3
xor
cli
aam
sbb
pop
pusha
mov
stos
cltd
xchg
inc
adc
or
int
in
sub
dec
inc
mov
sbbl
or
mov
xor
or
mov
jae
imul
dec
inc
sub
loopne
mov
cltd
xchg
orl
subl
outsb
dec
inc
aaa
les
mov
shrb
imul
sub
nop
das
dec
int
xlat
ss
sbb
adc
xor
data16
xchg
dec
adc
shrb
sbb
jmp
imul
dec
inc
scas
cltd
sub
xor
shrl
jnp
xor
adc
sub
sub
and
xor
dec
sbb
push
data16
sub
push
rcll
enter
aas
push
sbb
dec
inc
sub
rcl
stc
jb
mov
dec
inc
aaa
xor
mov
xor
mov
mov
imul
stos
and
fwait
jno
imul
pop
std
pop
movsl
test
imul
into
ds
pop
movsl
xlat
mov
mov
sub
add
cmpsb
sub
mov
sub
dec
inc
push
push
sub
adc
movsb
subb
sub
andl
aam
push
cwtl
mov
mov
sub
lret
mov
inc
inc
sbb
mov
cltd
xchg
sbb
fdivrl
rcrb
fistpl
mov
adc
mov
sub
int
dec
cmp
aam
jns
ffree
dec
inc
sub
or
aaa
int
sub
or
aad
out
xor
daa
mov
or
loope
cmpsb
mov
insb
pop
add
int3
sbb
lock
xor
sub
pop
dec
test
or
int
jl
push
mov
ss
xor
jbe
add
push
stos
mov
pop
and
inc
aaa
rcl
sub
ret
aaa
rcl
imul
dec
stos
cmp
mov
inc
jo
into
xor
sub
int
mov
sub
cmp
imul
sub
and
sub
repnz
sti
lret
outsb
sbb
xor
sub
loopne
jbe
lret
sub
sub
mov
lahf
xchg
je
into
shlb
pop
jb
int3
xor
push
jnp
data16
mov
jp
adc
loope
xor
lock
out
nop
mov
inc
mov
inc
les
data16
lods
fiaddl
xor
stos
test
inc
or
sub
dec
cmp
outsb
cwtl
imul
xchg
sbb
repnz
mov
xchg
out
sub
xchg
xchg
xchg
xchg
xor
cmp
xchg
xchg
xchg
js
push
lds
dec
pop
cmp
popf
and
int
sub
xor
lret
call
adc
push
rorb
popa
jo
lods
mov
loope
cli
cmp
cmp
cltd
xchg
or
ds
cli
xchg
icebp
leave
jmp
xor
lea
fistpl
push
les
dec
and
dec
lds
mov
mov
repz
mov
in
pop
xchg
jmp
xlat
or
inc
out
push
mov
aam
mov
movb
cmpsb
testb
sub
mov
inc
push
mov
inc
push
in
fbstp
cmp
jbe
xchg
jmp
add
pop
dec
inc
into
add
jmp
test
jp
push
pusha
xorl
or
addr16
push
rcll
add
inc
dec
inc
pop
nop
imul
pop
adc
push
mov
add
mov
mov
xchg
loope
inc
jnp
add
pop
stc
xor
xlat
jae
mov
and
les
sbb
dec
or
or
mov
dec
cmp
dec
dec
jo
push
jbe
negl
sbb
xchg
je
cmp
pop
pop
jle
or
push
and
pop
sub
xchg
je
dec
je
add
js
inc
dec
cmp
push
cmp
inc
dec
dec
shlb
scas
add
push
dec
insb
cmp
cmc
int
dec
dec
sbb
fcompl
data16
push
jp
push
mov
in
push
scas
lret
cwtl
xchg
inc
cmp
inc
dec
sbb
mov
leave
ret
pop
adc
or
loope
out
or
push
pop
adc
adcb
inc
cmp
pop
pusha
mov
in
cli
stc
add
mov
es
dec
pop
jg
es
xor
xchg
pop
jo
test
add
fs
sub
leave
xchg
and
movsb
ret
pop
add
add
fwait
rolb
jl
shrl
xchg
pop
jnp
inc
hlt
out
or
sarb
enter
out
adc
mov
outsl
inc
add
notb
and
dec
mov
or
pop
cld
cs
sbb
or
jno
shrb
dec
pop
push
sbb
call
adc
inc
mov
hlt
cs
jbe
fimuls
inc
mov
cmpsl
inc
je
mov
inc
cmp
or
xchg
cwtl
cmp
shll
inc
inc
sub
pop
out
inc
push
inc
xchg
ret
in
push
add
mov
inc
rcrb
pop
push
mov
mov
inc
nop
sahf
cmpl
inc
sub
add
outsb
inc
push
loopne
outsb
inc
inc
mov
jnp
and
mov
and
and
or
filds
mov
xor
loopne
adcb
inc
in
movsb
adc
inc
xor
inc
push
nop
call
pop
mov
mov
dec
call
push
outsb
inc
sbb
or
call
jne
dec
mov
and
mov
xchg
mov
xchg
enter
mov
and
loope
dec
mov
push
jo,pn
adc
add
dec
call
adc
mov
xchg
test
inc
or
in
or
dec
adc
mov
mov
test
inc
dec
inc
out
mov
mov
adc
dec
nop
fs
or
lods
jmp
adc
inc
xorl
cmpsb
and
addl
or
xor
inc
and
pushf
sub
mov
mov
pop
adc
dec
fstpt
and
mov
push
cmp
adc
add
rcl
push
xchg
push
loop
call
push
scas
dec
aas
movsb
add
incl
jl
je
and
xchg
rclb
xor
sbb
cmp
jecxz
adc
notb
inc
push
rclb
sub
push
ljmp
or
lret
adcl
xor
sbbb
xchg
into
pop
enter
lret
push
jns
push
cmp
xor
jo
pop
inc
sub
repz
addr16
lods
out
call
adc
add
arpl
inc
gs
loopne
cvtpi2ps
jb
push
adc
add
cmc
and
sub
ljmp
mov
add
adc
popa
and
cs
mov
nop
inc
aam
cmp
jmp
incl
jb
nop
fimull
jb
xor
push
inc
call
pop
pushf
inc
pop
inc
ss
push
ss
pushl
add
fsubrl
add
mov
sti
mov
or
jne
inc
cmp
inc
dec
insl
imul
jne
insb
cmp
add
cmp
pop
sbb
std
inc
jmp
dec
jmp
xor
push
or
push
inc
inc
adc
inc
jmp
inc
inc
inc
pop
je
inc
gs
aaa
pop
es
cmpb
push
mov
loope
pusha
mov
mov
in
ja
fs
stc
add
adcl
sub
dec
push
int
or
je
clc
xor
movsbl
and
cmp
leave
or
push
mov
cmp
push
cld
inc
add
push
test
jmp
add
enter
popa
adc
push
popf
pop
pop
or
cwtl
adc
loope
gs
push
sbb
sbb
sbb
enter
aas
add
sbb
pusha
popa
push
test
add
mov
loopne
movsl
shl
mov
fiaddl
lock
pop
sub
xchg
sar
call
sbb
imul
addl
dec
or
out
addps
push
lret
sti
lods
fisubrs
jge
push
push
or
push
es
inc
jecxz
imul
cmp
sbb
and
test
fs
add
ja
cmp
xor
add
mov
push
add
ret
push
sar
inc
push
sub
mov
call
shll
pushf
push
sarb
xor
int
push
hlt
dec
push
mov
pusha
sub
fcomip
inc
adc
sub
or
lret
mov
dec
nop
mov
fldl
dec
sbb
ret
lods
nop
addr16
sbb
ret
dec
mov
test
inc
and
test
cmc
pop
add
in
push
rcl
add
mov
stos
in
jo
dec
add
sahf
popa
mov
in
push
test
adc
adc
das
out
push
or
inc
add
movsl
jnp
xor
orl
xor
or
add
cs
popa
mov
cmpsb
or
add
push
cmpsb
xor
mov
mov
mov
test
imul
test
mov
shlb
and
lret
aas
stc
testl
or
fadds
cli
mov
enter
ret
sbb
push
add
fists
bound
add
inc
xlat
sbb
mov
mov
ret
inc
sbb
inc
dec
inc
and
dec
xchg
pop
xchg
xchg
movsb
dec
loopne
mov
sarb
mov
or
les
daa
nop
sbb
add
or
push
lea
cs
push
fcoml
nop
outsb
xchg
lock
xchg
insb
fwait
mov
push
jbe
pop
mov
jmp
repz
movsb
pop
inc
xor
movsb
mov
ret
loopne
xchg
int
mov
lea
mov
movsl
ror
int3
leave
mov
jno
xor
or
push
loopne
lods
es
sarl
mov
or
adc
call
xchg
call
inc
pop
jmp
punpckhwd
inc
push
sbb
rorb
add
xchg
ja
sbb
xchg
dec
add
movl
pop
pop
repnz
movsl
test
loop
ficompl
sub
rolb
add
push
enter
jmp
inc
sbb
rclb
pop
or
mov
or
xor
push
push
mov
and
xchg
lret
call
sub
add
add
cmp
xchg
imul
es
in
dec
enter
push
mov
sbbl
je
sbbl
arpl
ret
test
and
movsb
fisubs
mov
mov
dec
jo
icebp
jmp
mov
push
imul
cwtl
cmp
push
inc
add
or
or
adc
xor
sbbb
das
add
and
or
cmp
cmp
in
cs
mov
or
fistpll
cmp
xor
and
push
jmp
sbb
hlt
add
mov
xor
dec
xor
lcall
xor
outsb
xor
xor
add
add
cmpsb
cmp
roll
add
fwait
loopne
outsl
pop
shlb
and
jbe
sbb
and
sub
in
jbe
add
add
int
add
mov
out
popa
leave
and
sbb
push
enter
jecxz
dec
imul
xor
imul
inc
sbb
outsb
xor
sbb
loope
scas
add
dec
in
xchg
and
aam
or
push
mov
in
jo
in
sub
cltd
push
pop
push
ret
sbb
leave
inc
inc
or
dec
push
and
pop
in
push
jno
push
in
xchg
pop
rorb
mov
adc
fwait
pop
and
mov
adc
and
in
inc
push
cmp
in
or
and
in
inc
pop
jne
jne
add
xorl
and
loopne
or
jo
test
pop
sbb
je
test
mov
sub
cmp
jmp
daa
mov
xor
outsl
and
sbb
jb
adc
sbb
test
jmp
lret
call
pop
or
stos
les
inc
mov
clc
pusha
out
aam
dec
call
jecxz
or
xor
and
sbb
imul
call
dec
icebp
sahf
add
jne
cmp
xchg
dec
adc
or
nop
mov
jno
test
and
call
enter
loopne
add
ficoml
pop
and
xchg
sub
sbb
test
jbe
or
sub
outsb
add
enter
loopne
sbb
pop
fdivrs
push
jne
sar
mov
mov
xlat
inc
rolb
je
cmp
out
push
mov
outsl
mov
inc
adc
mov
daa
lea
mov
mov
cltd
sbb
add
cmp
es
add
adc
push
cwtl
add
addr16
push
cwtl
nop
or
jb
aas
sbb
sub
call
or
addr16
mov
roll
adc
add
xchg
testl
shlb
cmp
xchg
rcrb
push
xor
adc
mov
cmp
sarb
sub
xchg
push
mov
xchg
push
sub
pushf
es
mov
les
stos
mov
adcb
push
adc
mov
ss
lds
daa
pop
sbb
daa
or
sbb
adc
je
jno
jne
int3
push
pop
add
cmp
insl
dec
dec
loope
push
xchg
mov
mov
pop
jo
fisttpl
pop
adc
shl
packuswb
fdivrl
cmp
mov
xchg
xchg
dec
and
dec
inc
or
mov
in
mov
aam
pop
call
dec
push
dec
dec
hlt
push
jp
dec
xchg
and
jnp
inc
inc
jns
sub
mov
adc
push
and
movb
jns
test
idivl
data16
and
jmp
cmp
fstl
inc
jns
mov
frstor
add
adc
add
lret
xchg
js
lods
mov
dec
push
call
mov
addl
push
and
cmp
adc
rcr
xchg
push
cmp
push
xchg
jns
int
lods
outsb
test
mov
pushf
mov
mov
lds
mov
pop
pop
xor
imul
add
adc
call
mov
int
rorb
mov
ss
mov
dec
adc
sub
jns
int3
mov
mov
ret
mov
and
xchg
pushf
idivb
jns
fadds
jp
push
jns
pop
adc
ds
popf
subb
hlt
adc
push
xchg
jns
mov
adc
jns
sub
mov
test
sbb
cs
push
jns
dec
push
inc
jns
pop
push
inc
inc
jns
and
jbe
adc
sarb
jne
or
add
sub
push
xchg
nop
jns
orb
sub
mov
sbb
test
push
lea
sub
jns
adc
stos
dec
call
or
inc
das
push
lods
inc
inc
outsb
inc
jns
aaa
inc
js
jns
mov
adc
push
inc
inc
jns
sbb
inc
push
and
lahf
jg
push
xchg
shrb
rorl
xchg
sbb
add
popa
xor
fistl
sbb
xor
push
sbb
int
mov
sub
jae
imul
lcall
inc
sbb
dec
in
test
inc
jns
jnp
or
mov
dec
call
xor
or
ficomps
jecxz
mov
les
jns
test
mov
or
or
adc
push
int
int3
sub
call
inc
push
orl
cwtl
mov
mov
je
pop
push
pop
add
xor
inc
negb
add
pop
xchg
or
in
aaa
call
leave
nop
dec
scas
pop
sub
pop
sbb
pop
test
pop
lods
xchg
mov
xchg
or
or
js
pushf
dec
xchg
and
xchg
insb
pushf
mov
test
sub
adcl
bswap
mov
cmp
je
test
pop
pop
dec
cmp
xor
cmp
sub
lods
sub
pop
arpl
je
repz
loope
or
xchg
mov
xchg
rolb
pop
pop
inc
mov
pop
cmp
or
sub
jb
call
xor
bound
pop
sbb
rorl
das
xchg
push
push
push
jns
test
xchg
das
sbb
pop
mov
cmp
pop
jb
movsl
lahf
sbb
add
roll
leave
mov
dec
dec
push
xchg
das
dec
enter
ss
inc
jbe
das
sti
mov
mov
cmc
jns
in
das
scas
sub
inc
das
call
inc
das
jle
sub
fdivr
das
sub
movsl
shlb
add
sbb
dec
das
pop
inc
add
or
adc
das
adc
xor
jp
aad
fiadds
andl
scas
jae
mov
sub
pop
or
into
pop
xchg
or
insb
call
add
mov
sbbb
leave
jle
inc
push
xchg
or
cs
mov
or
pop
mov
pop
enter
xchg
or
hlt
push
pop
and
pop
and
pop
xor
sbb
pshufw
rclb
pop
jmp
mov
mov
pop
push
fs
jbe
xchg
pop
insb
push
sub
and
inc
inc
mov
or
xchg
testl
adc
mov
mov
imul
pop
in
fs
leave
inc
mov
dec
or
mov
and
dec
sbb
test
push
lock
adc
mov
pop
test
fldl
push
sub
jnp
mov
push
es
adc
push
mov
adc
and
push
pusha
cmp
stos
ret
aas
shrl
sub
adc
or
mov
test
bound
adcb
adc
push
enter
bound
call
popf
cmc
in
outsl
nop
push
push
popa
inc
mov
mov
push
push
mov
push
push
pop
adc
inc
popa
inc
push
psubd
push
push
aad
je
fsts
add
mov
mov
xchg
or
mov
push
or
dec
mov
push
mov
cmp
rclb
pop
and
pop
ss
in
mov
std
dec
aam
or
inc
xchg
mov
aas
xor
unpcklps
das
cmpsl
cli
out
or
daa
call
movswl
and
adc
call
xor
clc
lret
in
xchg
sub
lock
call
and
std
int
pop
and
dec
call
pop
mov
andps
movsl
pop
call
in
xchg
das
pusha
call
push
stc
repnz
call
je
gs
pop
and
cmp
call
mov
inc
sbb
cmp
sub
es
sbb
adc
lret
lret
movsb
rclb
push
in
fnstenv
jl
unpckhps
ret
les
xchg
lret
enter
lret
fldl
mov
movsl
jb
jle
jae
jb
pop
sub
pop
call
push
in
inc
aam
movsl
jb
pop
lock
es
sub
adc
add
add
leave
or
movsl
mov
or
loope
adc
cs
sbb
cs
dec
in
mov
stos
and
push
mov
sub
cs
dec
mov
jle
jae
in
mov
cs
inc
gs
dec
mov
dec
xor
push
adc
and
or
pop
add
inc
inc
inc
or
push
or
push
cs
jb
inc
inc
std
insb
and
int
dec
xor
jo
xor
sahf
cld
mov
call
mov
je
data16
js
imul
data16
sbb
xorb
dec
lcall
or
cmp
inc
and
cli
cmp
call
lcall
sub
cmp
mov
cli
mov
movsb
mov
mov
and
shlb
shrb
mov
cmp
push
shrl
mov
mov
je
test
addb
lcall
mov
push
mov
daa
and
pop
pop
adc
dec
or
sbbl
stos
pop
mov
mov
xor
sub
and
pop
add
or
stos
mov
adc
sub
test
dec
aaa
adc
inc
and
and
sbb
sbb
orb
pusha
int3
adc
arpl
add
cli
cs
pop
adc
and
imul
call
xor
mov
fnsave
mov
xor
dec
mov
movsb
inc
or
inc
shlb
call
xchg
or
adc
jp
ret
push
mov
sub
mov
sbb
push
or
push
jecxz
aad
mov
aad
sbb
mov
add
sbb
aad
inc
or
shrb
addl
or
push
rclb
add
fwait
je
ret
stc
mov
mov
sub
or
push
pop
push
andb
pop
or
adc
adc
push
enter
aad
xchg
sub
mov
out
imul
aad
adc
or
inc
aad
mov
jp
les
or
filds
aad
cmp
fs
or
es
jmp
fs
ret
adc
fwait
mov
inc
xchg
inc
cmp
movsl
jne
sbb
pop
pop
outsb
xchg
test
je
and
mov
call
mov
sbb
adc
sbb
mov
xchg
inc
sbb
cmp
cli
sbb
lds
push
in
push
and
mov
xor
add
cmpsb
fs
cltd
shlb
mov
push
or
lods
pushf
cltd
xchg
sbb
je
pop
adc
dec
push
adc
fstl
scas
adc
add
xchg
adc
mov
adc
dec
push
ret
rcrl
xor
shlb
js
adc
cltd
or
xchg
sub
std
cmp
xchg
sub
cmp
adc
shlb
adc
push
cmpsb
adc
pop
xchg
adc
pushf
sub
xacquire
push
addr16
pop
push
gs
adc
insb
cmpsb
adc
cwtl
mov
sub
xor
adc
ret
dec
adc
add
sbb
mov
xchg
xchg
ret
or
adc
stos
inc
and
pop
rorl
push
call
jns
call
mov
xchg
adc
mov
jmp
adc
cmp
cmp
sbb
xchg
rolb
mov
inc
and
ret
test
addl
js
jmp
stos
mov
xchg
leave
sub
mov
popf
ret
testb
sub
push
ret
xchg
add
inc
lret
mov
mov
es
inc
dec
xchg
add
pop
inc
mov
addl
stos
xchg
mov
adc
mov
cmpl
orl
nop
rolb
and
lea
adc
jmp
sub
aam
sub
add
lods
loopne
addb
push
mov
subl
mov
or
inc
shrb
push
dec
repz
and
add
push
add
int
jmp
jge
insl
xor
and
gs
les
and
testl
dec
push
mov
int3
lea
addl
stos
xor
add
and
sarb
adc
and
pushf
imul
cmp
je
adc
popf
push
aaa
out
mov
xorb
lret
roll
add
adc
fsubrs
loope
jl
popa
pop
push
adc
ret
mov
in
ss
inc
cmp
enter
aaa
and
cmp
roll
aaa
xchg
jb
aaa
xor
fs
aaa
je
rolb
dec
aaa
aam
inc
ja
jbe
and
shl
adc
aam
mov
push
loopne
pop
aaa
imul
arpl
mov
stc
push
pushf
sub
insb
cld
add
mov
mov
push
dec
mov
test
int
out
call
iret
dec
push
add
push
iret
push
and
cmp
test
inc
push
cmp
add
nop
and
and
mov
loopne
les
push
movsb
repz
call
xchg
sbb
mov
js
rolb
andb
and
jmp
mov
jle
je
add
and
jp
into
shll
cwtl
and
movsb
sbb
add
ret
aaa
adc
xorl
in
push
addr16
xorb
addr16
xor
adc
addr16
xor
les
push
addr16
xchg
and
adc
add
and
push
mov
scas
rolb
mov
push
sbb
pop
pusha
loopne
pop
sahf
cmp
inc
push
pop
sbb
or
add
add
jbe
pop
jmp
rolb
and
push
mov
add
pop
rcrb
pop
shll
add
sbb
out
cmp
adc
xor
or
cmpsl
cli
push
xor
or
pop
in
in
cmp
mov
jecxz
mov
push
out
je
adcb
pop
xchg
mov
roll
adc
mov
and
xchg
scas
push
repz
lods
xlat
xor
gs
jmp
imul
je
mov
pop
dec
inc
dec
xor
xchg
xchg
add
xor
rcrb
cmp
and
loopne
jb
or
test
cwtl
mov
mov
or
xor
scas
gs
mov
mov
gs
or
or
repz
addl
repz
xor
xchg
repz
xchg
or
repz
pop
fdivl
add
sahf
adc
inc
sbb
and
sahf
sbb
or
imul
sbb
xchg
push
xor
cmpl
mov
sbb
je
mov
jg
mov
sub
in
mov
popa
push
popf
bound
push
mov
std
insl
push
mov
out
call
jno
cltd
xor
or
xor
fs
out
sbb
adc
or
inc
xor
push
adc
sbb
and
fs
xchg
stos
mov
cmp
jne
or
adc
movsb
add
add
inc
ss
push
push
or
sbbb
adc
and
sbb
sub
cmp
sti
fwait
repz
adc
mov
mov
push
jo
repnz
xlat
fwait
push
lret
mov
add
sub
dec
mov
dec
out
jb
adc
xchg
fwait
cld
inc
scas
cwtl
jge
adc
jb
inc
lcall
xor
sub
push
jnp
js
push
adcl
inc
ja
jnp
ret
test
sti
lcall
adc
xlat
ret
lcall
nop
inc
nop
adc
xchg
and
xchg
push
xchg
inc
xchg
mov
inc
xchg
cmp
jo
xorb
mov
xchg
pop
dec
mov
cmp
cltd
js
nop
dec
test
and
inc
mov
push
push
xchg
inc
sbb
out
push
cmp
cmp
mov
add
mov
adc
rcll
cs
retw
int3
or
add
inc
ret
push
mov
mov
pop
and
pop
cmp
add
and
cmp
repz
out
sbb
ret
cmp
repz
mov
push
out
cmp
ds
or
sbb
out
jns
call
add
push
lods
push
mov
idivl
jnp
push
push
sub
push
nop
cs
out
fisubl
push
inc
out
out
jns
cmpb
push
push
sahf
dec
cmp
sbb
repnz
cmp
repz
into
mov
mov
push
pop
into
sbb
incb
add
out
out
repnz
loop
sbb
cmp
mov
out
outsb
pusha
sbb
pushf
repz
out
lret
or
iret
repz
and
pop
data16
iret
repz
nop
sahf
lods
mov
cmp
repz
in
decb
nop
repz
shlb
jb
jle
sahf
mov
daa
sarb
jns
loop
clc
adc
sub
cmp
cmp
cmp
push
push
cmp
cmp
lods
clc
adc
daa
pop
mov
jbe
insb
stos
push
in
add
push
cwtl
cmpsl
pop
fwait
ret
fisubrs
add
das
out
iret
dec
test
xor
push
repz
add
jbe
push
scas
test
add
push
dec
fidivrs
add
or
pop
jo
inc
dec
push
pcmpeqw
mov
inc
sub
push
inc
dec
push
adc
imul
push
je
sbb
rcrl
add
mov
ja
roll
ds
out
mov
fcoml
es
ss
pop
js
xor
xor
dec
xor
pop
ss
mov
jae
outsl
ss
mov
addr16
adc
jecxz
xchg
bound
xor
fldt
mov
push
cmp
mov
outsb
aas
das
lret
fwait
test
dec
imul
mov
xchg
xchg
pop
mov
xchg
adc
inc
mov
rol
orb
sahf
or
push
mov
jbe
and
imul
and
and
rolb
dec
sub
fsubrl
stos
outsl
and
data16
add
testl
cmp
mov
jg
xor
ret
aas
ret
je
inc
bound
mov
incl
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
sub
out
rorb
xchg
pusha
lret
mov
sbb
pop
dec
out
dec
jnp
and
pop
dec
imul
mov
jae
inc
jne
outsb
je
adc
inc
push
sbbl
in
outsl
push
push
jnp
inc
xor
sub
xor
inc
inc
sub
sub
inc
inc
xor
xor
xor
jge
in
mov
xor
inc
xor
xor
ss
xor
fdivrp
fldcw
cmp
xor
clc
inc
inc
xor
mov
aam
ret
and
das
lret
mull
add
xor
orb
sbb
push
fidivrs
cmp
shll
push
xor
or
push
and
lock
adc
xor
inc
pop
dec
push
inc
add
jl,pt
dec
sub
push
jle
inc
popa
xor
dec
and
mov
push
idivl
and
sub
pushf
xor
add
push
sbb
dec
dec
outsl
mov
dec
sbb
fs
pop
push
test
in
scas
push
push
or
hlt
imul
ficoml
pop
push
call
push
inc
out
adc
push
into
repz
sub
out
cmp
jne
sti
int3
in
mov
lods
sahf
add
repz
fsubr
cmpsb
push
hlt
mov
dec
fidivs
pop
mov
insb
adc
and
mov
jo
outsl
xor
imul
jp
add
inc
je
push
push
mov
mov
and
inc
cmp
cmp
push
sbb
xchg
ret
add
sbb
pop
popf
mov
stos
push
inc
cs
sub
inc
or
dec
insb
insb
mov
xchg
and
adc
data16
ret
lret
cmp
testb
cltd
dec
lods
and
xor
or
pop
mov
xor
insb
fmuls
push
sbb
xchg
jns
pop
add
int3
pop
rcrl
enter
stos
inc
pop
ja
sbb
pusha
push
and
mov
jnp
inc
inc
inc
sub
imul
bound
js
daa
jmp
scas
je
dec
shll
push
imul
push
jo
lods
imul
sbb
pop
push
inc
aaa
dec
movsb
push
mov
jae
outsl
pop
pushl
push
pop
arpl
inc
cs
push
push
push
add
dec
sub
pusha
ja
and
je
outsb
outsl
fld
or
sbb
popa
lea
cmpb
cmc
sbb
int3
add
pop
sub
add
add
and
inc
inc
and
sub
pop
stos
inc
or
es
or
repnz
rorb
or
push
pop
or
movb
add
aaa
or
jle
and
xchg
pushf
add
sbb
push
xchg
adcb
and
pop
inc
mov
popa
sub
sub
mov
adc
adc
iret
repz
orb
or
add
mov
adc
push
adc
out
dec
add
iret
sarl
sbb
sbb
mov
std
sbb
push
das
fbstp
out
pop
nop
cld
and
cli
xor
push
jns
stc
jp
repz
iret
push
cld
fdivr
mov
cmpsl
or
jbe
add
mov
out
les
mov
adc
outsl
mov
dec
int3
xorb
ja
cmp
sbb
push
cmp
es
bound
add
popl
adc
repz
addr16
cld
or
in
into
repz
int3
les
xor
out
dec
nop
mov
mov
jns
insb
push
cmp
pop
mov
dec
jns
repz
inc
cmp
xor
jns
out
sub
and
sahf
out
sahf
sbb
adc
or
cmp
out
add
cld
or
hlt
repz
repz
iret
repz
movsb
nop
jo
xor
sahf
out
ds
int3
mov
insb
jns
out
inc
sub
adc
repz
repz
push
fcom
les
js
sub
aam
out
lcall
iret
jnp
jl
add
call
cwtl
add
loop
jl
mov
mov
pop
inc
bound
dec
les
imul
adc
or
nop
js
lret
xor
fidivrl
sub
inc
inc
add
adc
shr
mov
cmp
dec
mov
pop
and
lret
push
add
cmpl
adc
sub
adc
xor
mov
mov
add
mov
inc
pop
les
xchg
sub
rcll
adc
sbb
xor
mov
pop
push
jmp
les
aaa
push
sub
or
push
es
pop
insl
popf
add
jae
fadds
pop
wbinvd
add
lods
xor
add
stos
xchg
loop
push
or
mov
pushf
andb
rolb
ret
jns
inc
sub
add
add
and
mov
push
inc
push
xor
xchg
cld
inc
inc
mov
jnp
out
loop
jo
mov
ja
jg
pop
jne
pop
xchg
xchg
lods
stc
sbb
enter
ret
jne
imul
je
pop
dec
pop
adc
push
mov
jo
pushw
loop
push
or
jo,pn
dec
add
bound
popa
or
daa
or
outsl
push
push
push
insb
das
inc
repnz
jl
add
cmpsl
ja
lahf
rorb
das
loopne
aaa
jns
xchg
loopne
inc
sbb
pusha
out
push
mov
push
and
test
mov
stc
xchg
nop
or
sarb
jg
fdivrs
test
ss
push
insb
ret
sete
jo
mov
jg
jbe
int3
jl
aas
add
dec
push
mov
xlat
jns
pop
cmp
or
push
in
insb
push
lcall
lret
icebp
jns
test
adc
sbb
push
popf
jl
in
mov
push
push
aas
sbb
mov
cmpsb
jg
mov
cmp
mov
shlb
aam
pushf
sub
sarl
vmptrst
enter
je
mov
leave
and
pushf
push
sarl
jbe
insb
rcr
in
jp
pop
imul
pop
loopne
pop
repnz
dec
adc
out
imul
lock
enter
mov
sbb
xor
mov
sbb
dec
imul
add
sahf
or
inc
je
dec
imul
sbb
lahf
mov
sub
cmpl
scas
pop
push
in
sbb
and
add
ljmp
add
push
outsl
ja
xor
mov
push
sub
fsubl
push
sub
add
jecxz
mov
fsubrp
daa
movsb
and
adc
sbb
repnz
arpl
mov
add
jl
ljmp
mov
or
repz
cmpsl
fs
jbe
push
jb
push
shll
jae
arpl
and
sbb
outsb
push
add
push
imul
out
insl
xchg
mov
jae
enter
push
jae
push
adc
or
adc
jae
push
mov
mov
mov
mov
out
adc
add
push
sub
push
inc
jno
leave
dec
sbb
dec
adcl
and
add
es
mov
inc
push
mov
dec
lods
loope
pop
das
push
mov
inc
or
cmp
push
jo
jb
jns
or
ret
mov
cltd
shlb
movsb
sbb
shll
mov
add
lods
cmpsl
xor
push
and
lock
sbb
imulb
push
divb
mov
adc
out
or
popa
jge
and
shll
das
pusha
inc
and
sahf
nop
cmpsl
and
inc
mov
rcrb
and
xchg
mov
add
jecxz
popa
mov
add
cmp
inc
add
lods
or
push
gs
or
fstpt
jnp
inc
rolb
jne
addr16
outsb
pop
add
xchg
pop
push
scas
push
and
leave
jmp
jbe
xor
nop
pop
ds
fs
dec
test
lahf
xor
lahf
sbb
dec
adc
and
icebp
push
inc
jge
cmp
cs
cld
adc
ret
adc
jle
and
push
loopne
ret
pop
adc
mov
outsb
xor
imul
and
sub
dec
add
or
or
sarl
pop
outsl
mov
shrb
inc
add
add
push
lcall
orb
mov
mov
xor
xor
dec
dec
pop
pop
in
inc
jmp
add
inc
jns
mov
lea
xchg
fs
lds
gs
mov
lret
arpl
outsl
inc
push
outsl
cmp
xchg
fsubrs
arpl
dec
and
roll
add
fs
xlat
or
sbb
cmp
rorb
jbe
xor
push
mov
mov
jb
sbb
or
mov
adcb
cmp
jp,pt
mov
inc
jmp
lret
mov
push
arpl
fidivl
dec
inc
dec
pop
or
aas
or
pop
outsb
inc
cmc
lods
sbb
sub
out
jnp
push
jmp
enter
push
push
push
xor
cmpl
mov
stos
sar
imul
add
jo
add
add
jo
add
outsl
inc
pop
movsb
adc
sbb
inc
push
jo
sub
loopne
ds
pusha
data16
xchg
dec
pusha
push
jo
jno
mov
mov
cmp
add
popf
inc
add
scas
into
pop
roll
xchg
add
cmpsl
es
or
ljmp
dec
imul
add
iret
cltd
push
push
xor
int
xchg
insb
imul
inc
dec
pop
imulb
add
push
mov
add
ret
push
and
mov
add
std
or
aas
cld
inc
jae
adc
add
je
add
push
data16
cmp
outsl
xor
and
add
lcall
or
push
sbb
cmp
into
insb
sbb
or
push
add
mov
inc
sub
ret
add
imul
fbld
lret
fbld
pop
rcl
scas
ficomps
mov
push
popa
or
fwait
xchg
xlat
push
and
and
inc
cwtl
aam
lcall
xchg
sub
push
pop
in
aam
pop
add
sbb
jae
push
ds
mov
add
repz
insb
push
sbbb
ret
xchg
push
punpcklbw
jnp
mov
and
add
std
adc
xchg
jns
sub
adc
test
decl
cmp
sub
pop
or
inc
dec
cmpsl
data16
fiaddl
pop
gs
cmp
inc
xor
sti
fsubrl
shrb
or
ss
aad
cwtl
inc
pusha
jmp
pop
pop
xor
mov
jo
shlb
mov
adc
xor
inc
or
mov
and
dec
push
adc
fisubs
lcall
mov
repz
adc
add
out
sahf
out
out
lock
jns
enter
mov
repz
jns
movsb
pop
mov
cmp
xchg
nop
mov
cmp
pusha
push
pop
push
inc
jns
out
cmp
and
sbb
cmp
out
cld
in
lock
mov
loopne
fcom
out
sahf
out
sarb
sahf
mov
cmp
jns
out
sub
sbb
or
cmp
out
cld
in
hlt
in
in
repz
fmul
mov
cmp
repz
push
inc
repz
imull
and
or
jmp
inc
or
mov
adc
stos
pusha
test
add
je
subl
mov
pop
testl
sbb
add
incl
pmuludq
cmp
not
lock
mov
push
nop
lods
lods
in
data16
mov
and
sub
add
shrl
adc
filds
add
mov
pop
inc
dec
pop
add
add
push
and
mull
mov
xchg
mov
sub
mov
lods
xchg
aaa
dec
adc
push
movb
xchg
cmp
add
xor
push
pop
jo
add
in
pop
add
sbb
pop
push
mov
inc
xor
inc
outsb
sub
add
mov
xor
xor
xchg
cmp
insl
jbe,pn
and
ljmp
xor
xor
ds
sbb
cmp
sub
mov
fdivs
ret
mov
and
dec
pusha
inc
repz
imul
sbb
cmp
sbb
insb
and
push
and
es
or
adc
and
jb
jne
es
ret
mov
mov
popa
insb
into
dec
adc
mov
jns
das
sti
and
mov
push
sbb
jbe
sbb
inc
inc
mov
inc
pop
pop
adc
mov
add
xor
xor
sbb
bound
loopne
sbb
das
xor
xorb
xor
incl
xor
xor
xor
xor
xor
movsb
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
xor
xor
dec
xor
xchg
shll
inc
ss
decl
repnz
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
jg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lock
cmp
cmp
sub
ret
add
push
lock
idivl
aas
sbb
xor
xor
xor
push
xor
or
jmp
outsb
xor
popf
xor
xor
xor
xor
xor
fs
cld
pushl
imul
aam
fnsave
xor
xor
xor
out
xor
xor
xor
jge
mov
xor
xor
fidivl
scas
xor
pushl
fdivs
call
xor
jg
push
ss
cltd
ss
ss
ss
aaa
sbb
jno
mov
aaa
loopne
dec
pop
aas
out
cmp
pop
cmp
outsb
cmp
jmp
cmp
cmp
cmp
or
cmp
cmp
cmp
push
cmp
jl
cmpl
lcall
mov
cmp
push
adc
cmp
cmp
cmp
cmp
adc
cmp
jae
mov
pushf
cmp
mov
ds
jo,pt
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
roll
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
xor
push
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
fcomip
daa
xor
xor
xor
pop
xor
jo
xchg
xor
xor
ljmp
inc
xor
xor
xor
xor
xor
xor
clc
xor
push
sub
ss
clc
loop
cmp
cmp
cmp
pushl
cmp
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
push
mov
xchg
aas
inc
aas
pop
aas
ja
pusha
pop
aas
adc
pop
push
or
cmp
pop
jg
pushl
arpl
push
xor
xor
xor
xor
xor
xor
xor
paddd
add
cmpsb
push
xor
xor
lcall
out
xor
xor
xor
xor
test
mov
mov
nop
xor
mov
aas
clc
out
in
xor
scas
clc
xor
cmp
dec
pop
lods
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cld
pop
jl
cmp
cmp
jp
cmp
cmp
std
cmp
cmp
push
pop
xchg
adc
sbb
cmp
xor
ljmp
cmp
ds
fidivrl
jmp
incl
xor
mov
ss
ss
xchg
cmp
aaa
cld
jmp
cmp
iret
cmp
mov
cmp
cmp
cmp
outsl
xchg
test
cmp
cmp
cmp
cmp
cmp
cmp
lcall
adc
dec
aas
push
mov
cmpb
aas
sarl
aas
in
out
shll
and
xor
incb
xor
xor
xor
fisubrl
xor
decl
loop
xor
xor
xor
mov
xor
xor
jmp
shlb
ss
add
or
mov
and
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
jl
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
outsl
cmp
jg
cmp
xor
pusha
cmp
mov
cmp
cmp
sbb
push
cmp
lcall
jg
inc
cmp
dec
cmp
popa
cmp
cmpb
cmp
decl
decl
push
stos
cmp
cmp
or
cmp
cmp
cmp
cmp
jg
mov
cmp
bnd
adc
sub
xor
incl
cmp
push
cmp
pop
cmp
jb
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
ja
cmp
inc
cmp
pop
cmp
mov
call
cmp
jg
cwtl
ds
ds
jecxz,pt
out
ds
das
test
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
jp
repz
push
xor
insl
stos
lcall
sahf
xchg
les
fidivl
in
lahf
das
mov
and
sub
cmp
jb
mov
xor
xor
xor
out
cli
pushl
xor
xor
xor
mov
jl
cmpsl
xor
xor
aaa
loopne
add
lcall
xor
scas
jg
xor
xor
mov
ret
aaa
xchg
aaa
fwait
sahf
mov
scas
scas
cmpsb
mov
bound
scas
cmp
push
cwtl
scas
jp
cmp
fdivrl
aaa
cmp
ret
imul
cmp
mov
jmp
mov
cmp
cmp
cmp
sbb
xor
or
lcall
xor
cmp
bound
data16
push
outsb
aaa
jb
jbe
xchg
ljmp
cmp
jge
cmp
cmp
cmp
cmp
cmp
cmp
jle
and
pcmpeqd
out
sbb
movsl
or
ja
lahf
xor
xchg
aas
push
mov
pop
cld
inc
xor
mov
xor
xor
xor
icebp
ss
ss
fiadds
aaa
ret
loopne
jmp
repnz
or
cmp
pop
cmp
aas
std
cmp
mov
cmp
cmp
jbe
xchg
cmp
cmp
cmp
mov
cmp
cmp
cmp
fdivrs
push
aas
das
cmp
mov
or
sub
decl
xor
xor
xor
dec
or
sbb
scas
repnz
aas
xor
divl
pop
xor
call
adc
es
dec
ss
outsb
notb
mov
enter
in
and
cmp
cmp
cmp
mov
pop
mov
sbb
cmp
pop
mov
imul
cmp
test
mov
mov
cmp
cmp
dec
cmp
cmp
ljmp
data16
aam
fnstsw
jecxz
imul
mov
cmp
cmp
pop
mov
cmp
inc
cmp
orb
cmc
decl
push
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
or
jo
addr16
loope
rol
mov
xor
xor
pop
xor
xor
incl
cmp
or
xor
xor
xor
xor
xor
mov
xor
pushl
xorl
add
xor
ds
dec
aaa
pop
aaa
js
mov
stos
jg
decb
cli
fidivl
out
in
aaa
cli
aaa
mov
cmp
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
loope
sarb
cmp
cmp
adc
jbe
cmpl
push
cmp
cmp
adc
and
pusha
aas
cmpb
aas
fdivrl
loop
out
out
icebp
adc
sub
jne
jmp
jl
adc
xor
jae
cmp
jne
jg
xchg
xor
xor
xor
mov
xor
xor
ljmp
jbe
loopne
adc
adc
pushl
sbb
sbb
sub
sub
nop
cmp
mov
cmp
cmp
cmp
cmp
cmp
int
sahf
or
push
lock
out
xor
cmp
cmp
aaa
into
cmp
inc
inc
xchg
or
xor
xor
lcall
decb
lods
xor
int3
mov
std
mov
test
lods
xor
fwait
push
clc
jg
int3
xor
cmp
sub
sub
xor
cmp
pop
loop
incl
inc
cmp
dec
cmp
push
rcrb
cmp
jg
or
fidivs
cmp
cmp
or
lahf
pop
test
push
rcr
cmp
aad
clc
sub
fdivl
jge
jne
lock
dec
cld
push
add
or
adc
clc
das
pop
pop
stos
sbb
and
and
sub
sub
xor
aas
incb
fidivrs
inc
cmp
cmp
pop
loopne
jecxz
cmp
cmp
insb
cmp
je
jl
addb
ret
push
mov
nop
xchg
cwtl
filds
mov
aas
inc
mov
push
aas
push
aas
insb
aas
test
xchg
aas
cwtl
aas
lods
aas
mov
shrb
aas
fdivrs
loopne
clc
dec
mov
push
or
xor
xchg
mov
mov
xor
inc
xor
xor
sub
cwtl
xor
xor
xor
xor
cmpsb
cmp
xor
mov
insb
dec
jecxz
jb
inc
xor
andb
add
fwait
in
and
or
or
ss
call
lcall
aam
fdivs
fdivl
loopne
in
call
ss
ss
decl
lock
add
add
or
or
adc
adc
aaa
sbb
and
and
sub
sub
sar
inc
pop
xor
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
mov
pop
std
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
nop
aaa
outsb
shlb
aaa
cwtl
into
mov
dec
mov
mov
jg
xor
enter
shlb
aam
fdivs
fmull
in
out
aaa
hlt
jl
cs
xor
aaa
hlt
add
or
adc
adc
sbb
mov
add
cmp
fdivrl
call
mov
cmp
pop
aas
std
pop
sahf
jl
cwtl
cmp
cmp
sub
cmp
cmp
cmp
cmp
ljmp
cmp
jl
test
decl
cmp
movsb
cmp
mov
mov
mov
cmp
test
inc
mov
imul
push
sar
movsl
movsb
fs
lret
div
ret
pop
lods
pop
push
aaa
cmpsb
punpcklbw
icebp
push
fnstenv
jg
jl
aaa
stos
mov
push
lret
aaa
ljmp
gs
jne
aas
push
aaa
mov
xchg
add
xchg
data16
dec
and
addb
jns
or
outsb
icebp
add
add
push
sarb
push
sbbl
sub
test
out
addb
nop
add
push
xchg
sub
sub
adcl
mull
sbb
or
add
or
rorb
pop
mov
mov
jmp
cltd
cmpsb
dec
repz
out
add
mov
daa
notb
add
push
sub
lcall
or
ret
ret
out
movsb
scas
aas
nop
das
es
gs
inc
xor
adc
push
gs
insb
or
and
movsb
subb
push
sbb
imul
pushf
dec
or
adc
out
movsb
jno
sbb
call
add
inc
call
std
std
xor
jbe
cmp
xchg
mov
jae
xor
inc
lods
bound
jle
cld
xor
jl
or
incl
jb
hlt
pop
and
mov
sub
dec
xor
adc
adc
add
pushf
xchg
test
xchg
mov
or
std
incb
shl
leave
jbe
call
jo
in
es
xor
in
pop
mov
add
sbb
mov
test
je
mov
sbb
pop
lret
lahf
jp
sbb
fwait
aam
loopne
and
or
sbb
jge
or
inc
fnsave
loop
push
mov
mov
xor
in
pop
popa
leave
orb
mov
mov
push
inc
ret
shrb
or
pop
and
add
pop
push
nop
dec
sbbl
loope
jae
arpl
pop
std
sub
jo
sahf
add
lret
popf
sub
mov
movsl
and
and
cmp
jne
testb
test
sbb
jmp
push
cmp
es
push
call
repz
dec
mov
lcall
mov
or
rcll
add
insl
dec
divb
cltd
adc
dec
test
add
dec
add
adc
cmpsb
xor
pop
add
mov
or
or
inc
test
dec
test
popa
lret
inc
loop
sbb
adc
jbe
dec
adc
xchg
pop
fldl
mov
push
dec
cmp
jo
pop
xor
popa
aas
lea
sbb
call
mov
pop
fsubl
cmp
or
sub
mov
xchg
test
pop
ret
mov
xchg
jo
xor
lods
movsl
xchg
xorb
lret
xchg
and
cmp
scas
add
adc
loope
adc
dec
push
xchg
fisubrl
js
jecxz
pop
add
sbb
push
stos
sbb
fimuls
and
mov
jecxz
add
mov
add
je
xor
push
and
add
xor
jne
aad
pop
add
mov
pusha
adc
cmp
insb
or
dec
sti
add
inc
imul
sub
pop
xchg
mov
or
inc
or
add
mov
adc
mov
sbb
int3
add
push
cmpb
push
ror
inc
sub
jo,pn
mov
xor
mov
xor
mov
cmp
mov
cmp
or
fildl
and
sub
push
mov
mov
rol
xchg
iret
popa
test
enter
stos
or
adc
adc
dec
sarb
mov
cwtl
repnz
dec
sarb
adc
fcoms
testl
out
cmp
mov
inc
push
movsb
mov
cmp
inc
lahf
cmpsl
daa
and
addl
inc
mov
outsl
inc
push
test
push
jle
mov
aad
in
mov
mov
in
dec
mov
xchg
pop
aaa
mov
sub
or
cmp
stos
lods
add
cmpsl
ret
inc
pop
push
scas
mov
stos
mov
add
aas
mov
mov
loopne
xchg
lods
jnp
lods
cmp
inc
cmp
inc
bound
or
sub
mov
mov
mov
adc
mov
repnz
push
sbb
inc
push
dec
xchg
sbb
rol
adc
imul
in
pop
cli
sbb
xchg
stc
and
push
std
pop
or
and
xor
add
mov
or
sub
sub
fucomip
dec
call
call
or
jbe
inc
mov
aaa
mov
and
inc
rolb
push
dec
push
cmp
popa
or
dec
adc
push
cwtl
fstl
pop
push
and
popf
or
cmp
push
lret
mov
call
es
add
fsubrl
xchg
sbb
mov
sbb
mov
sbb
pop
mov
push
add
mov
xorl
add
and
sbb
sub
sub
gs
fwait
stc
add
lea
sbb
push
push
sbb
sbbl
push
add
movsl
jg
gs
mov
sub
das
mov
fistps
or
mov
mov
add
cmp
or
push
sbb
and
repnz
add
push
or
mov
sbb
sbb
adc
cmp
add
add
inc
fimull
jne
mov
orb
mov
xor
mov
add
add
push
adc
fldt
sbbb
and
fdivl
insb
push
or
inc
out
sub
fistpl
xor
jp
cmp
or
ja
ret
xor
mov
pop
inc
insb
mov
sub
lret
push
fcomp
mov
fisubl
inc
cmp
or
sbb
pop
nop
and
fwait
popf
cmp
movsb
and
cmp
mov
nop
push
and
es
add
sbb
pop
addr16
addr16
mov
pop
sub
xchg
cmp
jnp
je
insb
fs
push
dec
lret
dec
inc
addr16
jmp
out
mov
addr16
dec
adc
add
jg
fsubrp
outsb
xor
pop
nop
inc
push
fs
mov
pop
pop
add
addr16
sub
mov
jns
shl
call
mov
repz
or
and
and
push
addr16
cmp
xor
jnp
inc
push
push
push
xlat
or
add
xlat
mov
cltd
jle
mov
stc
loopne
rolb
xor
add
sbb
push
cltd
and
mov
nop
cltd
mov
or
hlt
addr16
sub
shll
orb
xchg
push
stc
adc
inc
push
call
test
cs
mov
pop
or
leave
xchg
push
leave
repz
mov
lcall
add
daa
dec
cmpsl
xor
inc
es
sbb
iret
enter
daa
daa
es
shlb
daa
daa
lret
inc
xor
daa
daa
lcall
daa
daa
daa
sbb
movsb
imul
dec
push
daa
daa
daa
daa
inc
enter
sub
xchg
cmpsb
jns
sub
sub
inc
xchg
sub
dec
rcrl
sub
sub
and
xor
sub
sub
lret
sub
sub
adc
movsb
sub
dec
testb
cmp
and
push
or
sbb
adc
or
add
jne
sub
and
mov
add
inc
stos
cltd
mov
psubb
and
adc
xor
push
rcrb
sbb
pop
cmc
push
lock
push
jp
or
clc
fs
dec
sbb
cmp
sbb
and
push
test
nop
subb
psubsb
cwtl
inc
xchg
outsb
test
jo
orb
inc
push
sub
push
test
and
mov
jge
mov
xchg
adc
pop
mov
sub
orl
jle
or
pop
es
mov
inc
ja
call
cvtps2pi
pop
mov
or
addr16
fldl
sub
and
out
push
add
xchg
push
or
or
stc
sbb
loopne
fs
adcb
or
daa
adc
daa
adc
adc
ret
call
dec
jae
add
mov
movsb
cmp
add
adc
add
repnz
sub
pop
add
mov
dec
and
into
or
cltd
sub
jno
dec
mov
mov
imulb
cltd
xchg
mov
nop
clc
ret
pop
cltd
cwtl
pop
push
call
or
cwtl
lret
cmp
inc
mov
inc
fdivl
cltd
fs
shlb
outsl
cltd
mov
dec
pushf
ss
xor
cltd
xchg
outsb
or
cwtl
pop
mov
xorb
add
xchg
sub
and
mov
test
or
add
sbb
test
pusha
and
mov
cltd
repnz
adc
adcb
inc
cmp
pop
xor
xor
sub
xor
xchg
cmp
adc
inc
push
pop
aam
pop
adc
pop
adc
sub
adc
test
push
imul
push
cmpsl
in
xchg
jmp
outsb
adc
dec
adc
aam
or
pop
ss
test
jb
adc
add
mov
enter
xchg
push
in
add
adc
push
adc
mov
imul
dec
mov
in
xor
imul
inc
or
adc
stos
inc
fstl
adc
adc
out
movsl
adc
pop
loopne
dec
xor
nop
and
popa
fsubrs
mov
fldenv
fidivs
push
movsl
adc
inc
call
jl
inc
cmp
inc
adc
leave
inc
pop
and
stos
rclb
fldl
pusha
adc
call
sub
ss
outsb
push
movsl
adc
pop
adc
mov
loope
cwtl
sub
stos
pop
jmp
and
push
jne
dec
adc
adc
addl
ss
es
xchg
push
adc
mov
xchg
adc
xchg
push
daa
or
pop
or
test
nop
dec
pushf
pop
adc
icebp
and
and
push
mov
rcrb
adc
fstpl
rorb
mov
mov
cs
clc
in
push
add
mov
loop
pop
pop
pop
add
push
mov
or
and
lods
sbbb
movsb
fwait
and
cmpsb
xorb
les
add
and
adc
pop
push
pop
nop
fidivs
popa
mov
inc
andl
ret
js
jae
pop
xchg
pop
push
sub
sub
push
add
pop
loope
adc
into
sti
sub
not
mov
lret
pop
mov
inc
xor
movsl
hlt
pop
xchg
cltd
mov
xor
mov
pop
mov
inc
shr
sub
pop
cmp
leave
repnz
mov
fstpl
push
pop
adc
into
call
mov
dec
adc
fnstcw
outsl
adc
fdivs
lds
pop
jmp
loop
lea
or
movsb
jne
pop
call
addl
pushf
sbb
sbbb
mov
sbb
and
addb
jne
cmp
leave
sbb
iret
imul
mov
dec
jno
cmp
dec
cmc
xchg
mov
mov
nop
andl
aas
lock
jl
fs
xor
pop
inc
stos
add
pop
out
jmp
push
addb
outsl
cmp
xor
stos
adcl
lahf
xor
cmp
xchg
adc
add
xlat
push
cmpb
aas
inc
and
stos
add
inc
cmpsb
cmpsl
pcmpgtd
pop
fstpl
frstor
loop
in
int3
pop
int3
fsubl
mov
push
aas
push
call
push
cs
pop
or
mov
loopne
int3
pop
dec
repnz
push
inc
fdivl
fdivl
fwait
pop
or
sub
lret
call
or
mov
add
lret
pop
mov
or
mov
adc
push
mov
cmpsl
sub
mov
out
out
inc
enter
sub
dec
cs
lods
mov
leave
inc
arpl
xor
ret
pop
or
les
inc
sbb
frstor
add
or
loopne
leave
repnz
je
fs
adc
dec
enter
pushf
fisttpll
push
dec
test
sbb
test
movb
repnz
mov
mov
push
inc
nop
daa
in
lea
or
rcl
sub
sub
shr
in
sbbb
daa
xchg
je
and
pusha
sub
cmp
fmul
mov
mov
mov
cmp
and
cltd
and
sub
push
inc
jecxz
cltd
push
iret
les
cmp
push
jp
lea
xchg
inc
mov
fcoml
icebp
push
adc
and
lea
mov
push
stc
cltd
mov
push
cld
lods
push
xor
push
inc
jmp
mov
cltd
in
shll
cltd
adc
xchg
and
sub
cmp
cwtl
test
inc
dec
leave
mov
mov
jb
mov
ljmp
nop
daa
scas
inc
mov
fdivr
loope
or
and
adc
lahf
mov
arpl
jle
add
xchg
xchg
sbb
mov
repz
repnz
add
sub
dec
je
sbb
adc
pop
push
daa
inc
gs
and
shlb
sub
enter
and
stos
inc
push
les
dec
lea
daa
push
rcrb
es
adc
call
inc
enter
dec
mov
ret
sbb
sub
shrl
add
sti
and
stos
fcomi
jmp
add
ret
mov
scas
pop
jnp
dec
cmp
pop
hlt
je
inc
sub
jge
loopne
pop
push
out
mov
mov
adc
test
rcll
andb
loopne
sbb
xchg
inc
push
lret
icebp
push
xchg
inc
mov
stos
inc
adc
and
sbb
jge
inc
jl
jl
ret
sub
mov
and
inc
jno
mov
and
mov
push
popa
pop
pushf
inc
pop
adc
xchg
xor
add
enter
or
jns
mov
jmp
nop
push
js
xor
int
fdivrl
jne
xchg
pop
push
roll
and
pusha
or
push
or
test
adc
push
fistps
add
es
and
jecxz
adc
xchg
fcmovb
imul
pop
das
lods
xchg
push
xor
ss
adc
scas
mov
xor
sbb
hlt
xchg
pushf
mov
les
xchg
fdivl
daa
mov
xchg
or
mov
ss
adc
or
push
xchg
es
aam
sub
aam
sahf
insl
loop
adc
cmp
inc
xchg
lret
fxch
and
aam
pushf
stos
in
fldcw
dec
insl
roll
mov
dec
insl
xchg
or
cmc
rclb
or
xchg
add
repnz
push
add
addb
je
mov
fimull
and
sub
dec
mov
ficoml
xchg
movsl
fwait
ss
je
xchg
cwtl
sub
inc
push
inc
xchg
rol
in
fwait
inc
and
mov
mov
xchg
mov
dec
mov
xchg
mov
push
add
ljmp
movsl
xchg
mov
or
dec
pop
mov
sub
sub
xor
mov
xchg
pop
jp
sub
or
jmp
mov
mov
mov
xchg
loopne
add
and
and
leave
mov
fs
lret
or
xchg
test
push
mov
jne
and
shrl
lea
outsb
shll
fcoml
cmpsl
lret
int
inc
into
sub
adc
push
gs
stos
pusha
add
ds
fldcw
mov
aaa
mov
loope
push
and
mov
aam
repnz
leave
call
adc
push
int
mov
jb
pop
fdiv
leave
sbb
das
push
in
mov
mov
pop
lea
out
push
cmpsl
lods
xchg
pushf
inc
sbb
cmp
jb
inc
xorl
dec
xchg
rcll
aas
mov
lcall
inc
fildl
lcall
in
fistl
push
or
fildl
xchg
mov
adc
and
inc
pop
andb
testb
lds
aad
cmp
enter
enter
push
orl
outsb
fildl
ret
in
add
loop
push
cmpb
sub
mov
iret
leave
mov
ret
dec
or
pop
and
fisttpl
and
lret
push
push
adcb
and
push
pop
loopne
sub
mov
test
je
fisttpl
adc
pusha
sub
mov
out
fidivrl
inc
or
cmpsb
lods
sub
add
test
fdivs
xlat
out
loopne
aaa
out
jns
adc
jl
jno
rcrl
fildl
fldt
call
pop
call
jecxz
aam
test
inc
dec
or
lods
fisttpl
faddl
xchg
add
ja
cmp
jle
dec
or
test
rolb
xchg
cmpsb
mov
outsb
daa
imul
lods
add
mov
or
icebp
adc
fucomip
in
and
sar
cmp
mov
leave
bound
cmp
repnz
jns
inc
lret
mov
and
dec
pop
mov
mov
and
or
add
in
mov
in
fdivrl
pop
jns
jns
mov
test
das
mov
mov
das
das
cmpl
das
das
popa
mov
dec
mov
inc
mov
nop
sbbl
mov
enter
add
in
pop
cmp
mov
jb
sbbl
mov
stos
mov
lahf
mov
sbb
and
mov
nop
sbbl
mov
enter
cs
in
sbb
push
jb
mov
and
mov
nop
sbbl
mov
enter
pushf
mov
in
pop
cmp
jo
gs
pop
mov
cmp
inc
push
cmp
in
pop
sbb
jb
xor
jmp
inc
enter
inc
in
in
mov
and
daa
int
sahf
or
mov
adc
jp
mov
das
add
xor
mov
dec
sbb
adc
adc
daa
int
xor
push
sbb
mov
enter
cli
mov
and
int
and
cmp
jb
mov
enter
inc
mov
and
mov
dec
jl
sahf
xor
mov
add
nop
jo
rolb
add
dec
mov
subb
inc
in
adc
xchg
xor
inc
adc
shr
test
adc
rol
rolb
cmpsl
in
sbb
stc
jb
dec
repnz
cmp
popl
jmp
sub
push
pusha
jmp
add
mov
ret
push
repnz
mov
mov
inc
sti
testl
pop
icebp
sbb
fdivrs
adc
mov
shlb
pop
rcl
mov
jg
mov
push
and
inc
lds
push
jbe
add
cmp
push
push
mov
rcrl
punpckhbw
leave
rol
dec
into
inc
or
rsm
loope
push
xchg
shrb
es
pinsrw
aaa
arpl
hlt
add
hlt
paddusb
inc
les
dec
bswap
inc
pop
adc
and
lret
and
mov
rcrb
xor
pusha
xor
rcl
sub
mov
jbe
push
xchg
or
and
xchg
dec
cwtl
test
jmp
pop
sarl
xchg
outsb
sbb
push
sbb
mov
pop
mov
dec
lret
inc
pop
push
xchg
out
xor
lret
mov
xor
xor
int3
pop
xor
sub
jo
adc
sbb
fsubl
andb
js
add
js
jmp
xchg
jne
and
xchg
mov
push
xchg
or
sub
int3
dec
mov
cmp
test
or
inc
sub
mov
and
push
xchg
mov
sbb
dec
movsb
movsl
sub
push
lcall
adc
mov
es
mov
adcb
test
mov
or
mov
and
sbb
adc
sarb
gs
pop
sbb
into
movsl
sub
inc
mov
and
jbe
aam
test
jo
scas
push
mov
sub
lcall
mov
sub
scas
dec
jge
push
lret
js
insl
pop
push
lret
or
lret
fmull
fimuls
add
js
cld
fsubr
test
xchg
fcoml
ja
clc
push
call
notl
fcompp
dec
lds
adc
movsl
or
out
xchg
or
jns
out
test
movsl
or
pop
lret
and
jnp
sub
xchg
or
rcrb
dec
or
mov
push
ret
adc
je
xchg
or
mov
out
adc
adc
or
pop
or
xchg
sbb
xchg
mov
pop
mov
push
ds
js
sub
xchg
or
shr
dec
push
or
and
rclb
sub
arpl
pop
mov
movsl
aad
push
adcb
or
or
popa
push
xor
sub
icebp
fwait
and
lret
xor
xchg
xchg
fnstenv
mov
mov
rcr
sub
js
je
stos
xchg
movsl
pause
imul
mov
push
inc
rcrb
popa
das
or
sub
out
movsl
sub
or
xchg
or
or
sahf
shlb
jmp
std
push
sbb
sub
or
xchg
sahf
cmpsb
dec
or
push
aad
add
in
xchg
xor
adc
dec
and
xor
outsb
adcb
push
push
mov
sbb
sub
and
mov
mov
stos
cmc
or
gs
mov
add
or
ja
sbb
mov
gs
and
dec
pop
mov
gs
je
mov
sub
and
push
push
lret
shrb
movsl
sub
mov
xor
mov
or
ret
push
lret
sbb
scas
push
or
or
or
push
call
sbb
and
stos
xchg
movsl
or
sahf
jmp
mov
repz
push
test
cmp
bound
sub
pop
loop
cmp
call
inc
dec
pop
or
inc
sub
stos
or
adc
ficomps
mov
sub
movsb
js
push
xchg
mov
sub
gs
cmpsl
xor
sub
dec
dec
scas
or
repnz
or
xchg
adc
mov
adc
data16
or
or
push
xchg
scas
movsl
or
add
lahf
loope
cs
adc
les
push
or
out
pop
movsl
sub
mov
jb
in
xchg
push
cmp
jg
sbb
mov
pop
pop
sub
sbb
pop
fldl
sub
xlat
inc
inc
sub
cmp
loope
mov
in
sbb
shlb
xchg
test
cmp
aaa
xchg
out
test
push
aaa
adcb
inc
inc
push
orb
jnp
cli
lods
mov
mov
in
das
nop
mov
adc
mov
mov
lcall
xor
push
pop
ds
mov
in
xor
lock
mov
push
xor
test
push
cltd
inc
pop
push
and
sbb
sbb
mov
or
push
ja
pop
xchg
cmpsb
cli
sahf
arpl
movsl
cmpsb
and
fnstcw
mov
ds
adc
loopne
push
testb
jns
out
push
sub
mov
int3
faddl
sbb
repz
sub
inc
push
pop
outsb
cmp
repz
xchg
test
enter
repz
outsb
or
push
ds
cmp
repz
jb
mov
int3
out
push
stos
out
sahf
cmpsl
adc
cmp
out
sahf
pusha
jbe
test
into
out
idivl
add
push
sbb
sahf
out
sahf
xor
dec
pop
insb
adc
inc
ja
pop
cmpsb
add
ret
lods
push
adc
and
xchg
aad
pop
mov
push
lea
ret
or
add
out
mulb
sbb
push
push
mov
repz
mov
cmc
add
repz
clc
mov
mov
inc
adc
iret
mov
xchg
adc
add
push
pop
add
mov
sahf
idivl
mov
add
out
sarb
adc
adc
push
ds
sarl
sbb
sbb
xchg
out
sbb
or
int
xchg
out
test
push
pop
sahf
mov
and
pop
cmpb
ds
repz
jp
cmp
hlt
call
and
lcall
mov
or
enter
outsl
enter
test
add
sahf
out
add
and
out
adc
add
xchg
in
repz
repz
fcom
int3
iret
repz
enter
mov
cmp
movsb
mov
iret
repz
nop
mov
iret
cmpb
insb
cmp
repz
fs
pop
pop
repz
repz
push
dec
dec
inc
iret
repz
inc
cmp
xor
sub
iret
repz
adc
add
nop
jns
out
fmul
test
push
dec
sub
pop
iret
repz
movsb
jl
push
dec
inc
lcall
cld
mov
jns
out
shlb
cmp
out
lock
int3
test
jge
xchg
push
xor
jg
push
add
lock
es
mov
inc
sub
push
pop
sub
push
xchg
or
mov
decl
aaa
xor
push
push
add
and
xor
xor
test
aam
push
mov
sbb
inc
aaa
shlb
add
pop
jbe
or
and
out
shlb
mov
push
xchg
and
dec
shlb
xchg
mov
add
or
inc
out
xlat
testb
das
inc
add
dec
mov
iret
test
mov
mov
jg
pop
cmpb
mov
ss
pop
shll
add
int
jbe
add
mov
testb
rorl
xchg
aas
test
andb
shrl
aaa
inc
pop
xchg
inc
in
sbb
dec
xchg
bound
pop
scas
inc
fists
dec
pushf
mov
aas
fld
or
fldl
inc
jg
shll
dec
pop
xor
aas
inc
es
sti
push
int3
rcr
repnz
push
andb
fsubl
dec
fstpl
dec
mov
arpl
and
popa
mov
add
movnti
imul
cmp
inc
mov
pushf
add
push
xor
insb
cmp
icebp
int
xor
cmp
pop
stos
outsb
cs
scas
outsb
lahf
inc
outsl
ds
outsl
jl
out
gs
push
and
mov
and
pop
leave
rolb
imul
mulb
sub
push
adc
scas
mov
mov
outsl
jne
notb
imul
dec
mov
push
outsl
and
jb
arpl
xchg
insl
sub
inc
inc
arpl
lret
inc
mov
inc
sbb
sbb
outsl
gs
sbb
bound
and
sbb
stos
pop
sbb
xor
lods
lcall
shrb
fwait
dec
add
jo
fldt
dec
mov
and
mov
mov
xor
add
push
push
adc
cmp
push
ja
jne
pop
xor
roll
rcrb
aam
mov
int
push
add
xchg
lea
arpl
mov
add
mov
pop
xor
add
add
rcrb
inc
arpl
shll
roll
shll
inc
inc
and
sbb
sti
jno
sbb
lahf
arpl
rcrl
lds
out
rorl
lea
add
inc
adc
pop
pop
push
imul
mov
inc
cmp
push
aaa
add
ja
xchg
mov
push
add
mov
stos
addr16
xor
xor
cmpsb
pop
push
pop
inc
xchg
iret
repz
movsb
xchg
jle
pushf
cwtl
xchg
cmp
repz
mov
repz
inc
sahf
out
sahf
inc
cmp
xor
sub
sahf
out
sub
sbb
inc
ss
out
add
xchg
hlt
xchg
in
out
sahf
testl
enter
jns
mov
test
mov
xchg
jno
je
insb
lret
out
fs
push
dec
mov
ja
out
push
and
add
in
xchg
push
sahf
out
sahf
enter
test
jnp
out
cwtl
nop
mov
cmp
jo
pop
inc
cmp
push
adc
lock
loopne
iret
repz
mov
xor
rep
pop
outsl
insb
or
out
pop
xchg
adc
or
je
sub
push
cwtl
and
xor
mov
pop
adc
push
jne
addb
or
cs
adc
cmp
pop
push
pop
push
sub
clc
mov
jge
test
enter
cmp
inc
jbe
outsb
mov
lcall
xor
mov
aas
pop
or
aas
inc
add
stos
xchg
incl
mov
jns
rolb
shr
arpl
mov
inc
adc
inc
xor
rcr
xor
xor
cmpsb
dec
clc
decl
cmp
ss
ss
nop
ss
ss
aaa
shrl
ss
ret
sub
xorl
aaa
adc
sbb
add
cmp
fstpt
push
cmp
xchg
ret
xchg
lret
cmp
int
sarl
fidivrs
and
cmp
clc
mov
cmpl
adc
xor
cmp
cmp
aaa
ret
ds
ds
ds
fdivr
mov
icebp
ds
ds
ds
aas
pop
aas
and
sub
xor
aaa
outsl
mov
into
push
data16
jbe
adc
jnp
cmpl
movsb
aas
mov
sarl
div
inc
fnstsw
dec
add
jl
xchg
cmpsb
mov
xor
mov
xor
pop
add
inc
xor
inc
add
xor
xor
faddl
add
mov
cmp
xor
inc
add
fdivr
data16
dec
xor
xor
xor
xor
jecxz
incl
xor
xor
xor
xor
xor
dec
cmp
mov
ss
mov
ss
pushl
sbb
mov
sbb
push
add
sub
das
out
xchg
in
cmp
add
pop
cmp
xorb
xor
das
or
cmp
xor
xor
cmp
cmp
sarl
pop
cmp
or
pop
push
outsl
cmp
mov
xor
inc
fisubs
cmp
cli
outsb
cmp
idivb
mov
cmp
cmp
cmp
dec
push
xor
stos
pusha
outsb
ja
jle
test
inc
incl
cmp
cld
cmp
push
ds
and
xchg
cs
jg
loopne
cwtl
xchg
xor
xor
loope
jnp
test
xchg
xor
push
xor
dec
decl
shll
xor
xor
xor
xor
mov
xor
xor
outsb
xor
loopne
repnz
dec
ss
bound
pop
mov
xorl
ss
ss
or
scas
xorb
jecxz
clc
ss
ss
aaa
or
fbld
jecxz
push
push
xor
aaa
addr16
sarb
dec
adc
cmp
xchg
jno
push
sbb
pop
jno
mov
cmpsb
test
mov
cmp
add
outsl
xchg
push
in
jmp
repz
cmp
cmp
cmp
and
es
cmp
cmp
decl
or
cmp
jle
xchg
sbb
jecxz
cmp
cmp
fcmovb
cmp
push
add
incl
insb
cmp
cmp
cmp
cmp
cmp
cmp
push
and
fs
cltd
xor
insl
pop
shrl
xchg
mov
outsb
inc
arpl
sbb
aas
mov
dec
fadd
js
arpl
xor
into
xor
pusha
xor
push
jp
xor
xor
call
xor
xor
xor
xor
xor
jo
in
pop
xor
xor
sbb
fnsave
push
or
cmp
insb
jecxz
out
and
xor
xor
adc
push
cld
aad
or
push
ss
arpl
stos
add
ss
ss
jecxz
sub
xor
aaa
jne
jle
pop
pop
add
or
sbb
sub
and
cmp
cmp
incl
cmp
cmp
cmp
aaa
or
cmp
cmp
test
arpl
outsb
sbb
xchg
ret
fnstsw
fildll
lods
inc
out
ds
or
cmp
lret
mov
pop
insl
adc
fbstp
divb
data16
aas
jne
mov
xor
xor
xor
xor
and
xor
xor
pushl
adc
xor
xor
xor
xor
xlat
xor
ja
mov
pushf
ss
mov
sbb
ficomps
adc
imul
data16
aaa
leave
test
jb
loop
cmp
hlt
lock
cmp
push
cmp
mov
jmp
std
cmp
xlat
and
ds
imul
xchg
mov
adc
lods
cmp
or
sbb
mov
mov
cld
xor
or
out
sub
cmp
cmp
cmp
dec
cmp
pop
cmp
lahf
sub
aas
cld
pop
xor
xor
xor
xor
xchg
testb
test
or
pop
dec
es
xor
mov
jp
add
adc
aaa
arpl
pop
pusha
out
jmp
adc
sbb
mov
sbb
xorb
or
ret
jle
xor
cmp
insb
jb
daa
mov
push
bound
mov
lods
ret
rcll
dec
int3
xor
popa
je
fdivrl
in
je
jecxz
xor
cmp
push
int3
inc
xor
clc
mov
insb
jb
sbb
gs
jl
mov
cmpsb
test
mov
rol
scas
mov
sub
jecxz
fsubrp
out
xor
or
adc
adc
sbb
sbb
loopne
sbb
xor
mov
cmp
inc
xor
inc
aaa
xor
push
xchg
pop
xor
xor
xor
sub
je
jl
clc
mov
mov
mov
nop
xor
iret
xor
cli
xchg
mov
xor
call
xor
inc
add
xor
ss
js
ret
adc
jbe
xor
aam
push
cmp
push
xor
fs
or
ja
mov
mov
cmp
cmpb
dec
add
xor
stos
fmull
pop
mov
daa
cwtl
out
shl
ljmp
sub
mov
or
insb
xor
xor
xor
xor
xor
jge
inc
xorl
mov
shlb
cld
hlt
aas
ficoml
pop
xor
xorb
xchg
sbb
aad
sbb
jmp
addb
call
xor
clc
lock
xor
inc
add
loop
jg
or
push
sbb
xor
mov
std
or
cmp
inc
xor
xor
xor
push
xor
pop
xor
incl
jo
je
js
jl
andb
xor
push
scas
pushf
xor
xor
xor
xor
xor
xor
pusha
jo
shll
shlb
int3
ficoml
sub
mov
xor
jno
add
jp
sub
sbb
ljmp
fcmovnbe
adcb
sbb
or
push
decl
fdivr
add
inc
pop
andb
pusha
scas
xor
cwtl
add
add
fstpt
add
or
pop
pop
push
or
or
or
or
or
adc
adc
push
adc
mov
add
pop
sbb
adc
adc
adc
add
mov
or
adc
pop
adc
loop
adc
inc
add
add
inc
mov
adc
add
mov
add
inc
mov
mov
add
jge
incl
dec
cmpsb
add
push
adc
pop
and
xor
jmp
rcll
bound
js
leave
nop
pushf
dec
xor
and
inc
sbbl
or
xchg
mov
dec
popa
adc
xchg
xchg
xchg
and
adcb
pop
rcrl
popa
add
inc
sub
pop
adc
incl
inc
adc
push
adc
pop
popa
jno
and
or
or
mov
or
xor
adc
shrl
icebp
mov
add
mov
push
xor
or
aad
add
js
jo
cld
pop
adc
or
add
lds
cld
cli
and
mov
pushl
ret
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
outsl
cs
movsl
jecxz
cli
pop
mov
stc
or
incl
loope
inc
repnz
addr16
out
or
push
push
xchg
add
cli
mov
fstl
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
xorb
xor
lcall
mov
push
pop
mov
pop
pop
mov
popl
lcall
sub
mov
ret
scas
adc
mov
xor
lods
scas
xchg
test
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
outsl
call
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
ljmp
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
cmpsb
lcall
leave
mov
jp
push
out
or
fadd
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
sar
std
sarl
xor
hlt
and
xchg
jmp
sbb
pop
jge
jecxz
lods
mov
out
pop
jb
mov
sbb
jg
iret
in
push
mov
sub
pop
mov
jl
rorl
adc
scas
gs
jg
hlt
push
add
stc
loope
stos
fstp
decb
andl
aas
icebp
testb
mov
ljmp
inc
gs
sub
jno
pop
sub
jg
pop
aam
ljmp
inc
sbb
paddb
inc
mov
pushl
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
loopne
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
jge
inc
fwait
inc
adc
loope
fisttpll
out
aas
std
cli
jg
je
push
push
push
idivl
cmp
sub
inc
scas
inc
jmp
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
push
lock
mov
pop
xor
outsl
pop
js
jmp
xchg
pop
clc
pop
hlt
lret
movsb
add
add
lea
jg
gs
std
xorb
jg
jmp
js
ret
das
pop
pop
pop
shlb
jg
ljmp
out
sarb
sbbl
jno
or
sarb
std
pop
les
cli
mov
mov
mov
arpl
stos
mov
and
insl
add
leave
push
scas
loop
idiv
jge
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
jmp
js
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
cltd
clc
fadd
or
mov
nop
enter
loop
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
pop
cld
lcall
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
jg
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
dec
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
add
push
ja
xor
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
incl
lods
addb
add
jae
shrb
shlb
out
aas
stc
add
sti
jmp
pop
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
pop
lock
and
lahf
fmull
enter
jecxz
push
cltd
mov
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
or
cld
inc
or
bound
cmpsb
push
pop
jg
add
jg
jbe
mov
aad
test
mov
mov
iret
sar
fldt
push
jbe
push
sbb
stos
icebp
pop
incb
sti
jmp
dec
jno
adc
push
inc
jecxz
sbb
sarl
mov
std
adc
loopne
and
clc
xorl
mov
imul
dec
cmp
jg
push
in
aas
mov
fsubrl
add
fisubl
lock
and
ljmp
push
clc
xchg
pushf
mov
repnz
fadd
das
clc
and
mov
adc
inc
aas
push
rcrl
ds
mov
jb
fistpl
adc
call
jno
out
mov
addr16
scas
inc
sti
arpl
daa
std
or
sbb
loope
inc
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fildll
lcall
lds
fidivrl
jg
stos
pop
jl
lcall
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
decl
in
negb
cld
addl
sbb
mov
lahf
outsl
int3
push
jo
push
sbb
pop
paddsw
pop
arpl
out
out
outsl
xchg
inc
test
clc
incl
cld
in
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
cs
ljmp
dec
adc
lahf
mov
or
out
lcall
fistpll
pop
shl
cld
mov
adc
stos
pop
jg
pop
sar
jmp
fildll
rcl
jg
adc
xor
pop
rcr
dec
mov
gs
decl
movsb
idivl
aad
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
jmp
imul
or
inc
pop
xor
rorb
and
add
lret
xchg
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
mov
or
and
xchg
fidivrs
mov
insb
test
aas
repz
sbb
lock
or
push
paddsw
out
sbb
aaa
clc
push
std
mov
jl
icebp
or
mov
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovu
dec
cld
inc
inc
adc
inc
loopne
test
out
rolb
pop
or
cli
loop
cld
or
dec
ss
lods
movsb
ret
call
fimuls
repnz
mov
jl
inc
lock
call
cmpsl
lret
fwait
stos
jle
pop
in
cmp
jmp
mov
mov
mov
jmp
hlt
dec
mov
xlat
fdiv
jg
inc
aas
mov
jg
mov
sub
addr16
incl
mov
sbb
cld
daa
jp
std
adc
cltd
or
mov
cmc
mov
jg
ja
nop
cmp
das
incb
lock
pop
pop
div
add
push
loop
cld
idivl
fs
sbb
stc
lahf
loope
jae
jmp
adc
je
jge
xchg
mov
xchg
add
out
icebp
mov
loope
mov
pop
and
sbb
fbstp
test
daa
outsl
mov
jge
out
or
cmpsb
cmp
call
xor
decb
fdiv
pop
push
adc
mov
and
shrl
call
popf
dec
cmp
or
mov
cmp
int
add
push
pop
aaa
cmp
std
fisttps
inc
pop
cmp
ret
sbb
xchg
fimull
xchg
popa
mov
ret
ror
sbb
aaa
sub
icebp
mov
adc
mov
sub
or
cmp
clc
loope
loope
mov
lahf
jp
push
xor
xlat
rcrl
je
xchg
fldenv
iret
fdivrl
xchg
lcall
lock
repz
sub
jo
jo
and
outsl
pop
out
jg
jno
ret
or
inc
arpl
jmp
inc
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
std
inc
inc
mov
in
sbb
xchg
imul
clc
pop
inc
mov
std
mov
daa
jmp
fsubrl
rolb
mov
ret
outsl
pop
jmp
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
xor
push
inc
in
adcb
add
int
or
inc
add
nop
cltd
dec
push
push
nop
mov
fwait
rorb
popf
test
and
mov
cmp
cmp
test
sbb
push
pop
pop
cmc
rcr
jge
inc
aaa
call
mov
jns
sub
in
cmp
dec
mov
dec
pop
arpl
inc
pop
pop
dec
add
mov
fmull
in
dec
dec
xor
testl
push
fcomip
jmp
mov
adc
xchg
cmc
push
or
movsb
clc
cmp
pushl
push
in
inc
fists
xor
cmp
leave
jbe
pop
dec
cmpsb
dec
sbb
dec
dec
and
ljmp
jae
out
push
cld
xchg
mov
or
dec
push
pop
movsl
fiaddl
and
push
xlat
xchg
jbe
push
cmp
std
call
sub
push
push
sub
sarb
jg
insb
pop
xchg
divb
inc
arpl
scas
aam
adc
cmp
push
sub
adc
call
neg
cmp
incl
cmp
mov
iret
sub
pop
lret
imul
test
in
cmp
jno
lock
outsb
movsb
mov
xchg
hlt
xchg
adc
pushl
lret
ja
inc
mov
sub
sub
lret
and
imulb
add
inc
filds
ja
ficompl
outsb
imul
into
movsb
cmpsl
xchg
data16
ss
popa
xchg
test
lahf
imul
leave
popa
int3
repnz
imul
mov
roll
mov
into
mov
decl
addl
sub
mov
push
pop
sub
gs
lcall
call
out
mov
negl
gs
inc
xchg
cmp
adc
ret
clc
addr16
dec
lret
ljmp
inc
inc
data16
popa
repnz
fnstcw
push
xchg
icebp
xor
shll
sbbb
xor
decl
sbb
mov
cld
dec
je
rcr
out
mov
je
mov
fs
call
fsts
cmpsl
dec
hlt
jl
nop
inc
xchg
jne
fcmovnbe
xor
mov
fwait
cs
or
lcall
or
js
enter
jg
mov
pop
aad
push
movsl
push
mov
cltd
push
incl
cmp
adc
test
loop
or
aad
adc
cmp
cld
cmp
sbbl
jle
xchg
test
sbb
jbe
and
std
test
call
cmc
mov
fsubrl
sar
jmp
xchg
or
addl
stc
fisttpl
aam
mov
mov
mov
sahf
jecxz
decb
adc
incl
es
jo
fcmovnb
push
outsl
test
mov
lahf
jp
inc
fwait
repnz
decl
jne
jo
aaa
mov
cmp
xchg
mov
xchg
popf
test
mov
push
adc
mov
cli
outsl
lods
ja
out
inc
mov
test
ficompl
and
pop
ljmp
mov
cmp
xor
or
mulb
push
lock
ss
ret
in
std
mov
lcall
jb
cmpsb
add
dec
cmp
movsb
cltd
ja
dec
adc
sbb
add
push
sub
ret
ljmp
adc
fs
mov
and
dec
add
pop
cmpsl
xchg
js
scas
xchg
sub
clc
jg
push
loop
clc
std
in
pushf
and
mov
lcall
lods
test
test
mul
lret
out
jne
icebp
out
repnz
hlt
sbb
push
or
dec
shlb
jle
add
ljmp
js
scas
xchg
push
jae
fwait
dec
cmp
xchg
ja
insb
or
pop
subb
adc
ljmp
sbb
mov
stc
xchg
adc
clc
sub
or
mov
inc
mov
jb
data16
in
incl
jecxz
mov
mov
push
xor
rolb
adc
sub
decl
dec
push
jecxz
push
insl
repz
sete
ficoml
xchg
fistps
lret
into
mov
std
and
inc
cmp
rcl
mov
xchg
pop
fsubrp
pushl
xchg
push
lods
dec
jne
adc
rolb
lahf
sub
mov
ds
push
sub
jg
lcall
pop
xor
test
movsl
xor
insb
std
fldt
jns
push
pop
jmp
call
std
mov
lock
add
push
in
cld
push
test
pushf
stos
mov
xor
loop
rorl
js
sbb
sub
push
jns
scas
decl
pushf
mov
or
daa
mov
mov
call
sahf
jg
flds
sbb
shll
shl
cltd
test
or
incl
int3
mov
insb
sub
push
push
insb
divb
in
cmp
cmpb
pushl
jns
call
fiaddl
jmp
lds
cld
push
xor
js
push
sbb
mov
scas
jg
or
inc
mov
cmc
inc
pop
push
imul
push
in
push
into
pop
inc
les
push
cmp
decl
stos
roll
cmp
mov
loopne
cmp
mov
filds
mov
sgdtl
lcall
sub
xchg
into
xchg
cmpb
mov
leave
pop
adc
pop
xor
decl
dec
scas
xor
sub
mov
imul
test
loopne
dec
push
cmp
fld
mov
outsl
push
dec
mov
dec
xlat
ja
pushl
inc
add
push
lds
ret
or
inc
jl
aad
jg
call
pop
mov
xorb
pusha
ljmp
sbb
aam
aaa
out
clc
clc
int
movsb
sub
gs
push
imul
test
insb
sbb
std
xor
add
cmp
cmp
push
cwtl
mov
jp
sti
jmp
xchg
xor
sub
pushf
mov
leave
das
inc
aas
adc
dec
icebp
repz
lcall
push
cld
jbe
popa
xchg
inc
inc
inc
xor
cli
pop
outsl
int
ret
into
stos
pop
jg
push
lds
or
movsl
mov
icebp
xchg
repnz
jg
jg
jb
lds
jbe,pt
lret
out
pop
in
cmovs
leave
int
pop
loop
cli
loopne
iret
idivl
in
andb
in
mov
mov
imul
add
outsb
sbb
lcall
out
push
pop
pop
pop
and
xchg
pop
in
out
pop
out
lret
nop
ds
sbb
or
decb
cmc
decl
cwtl
or
ret
popa
jb
movsl
movsl
mov
lret
lods
xor
lcall
pop
mov
or
cwtl
or
sub
add
pop
lcall
pusha
arpl
lods
mov
push
push
stos
xchg
push
int
sarl
jns
pushf
iret
jle
js
xchg
inc
inc
lret
call
or
incl
mov
push
in
push
jae
mov
aaa
mov
data16
xor
in
inc
cmpsl
inc
mov
mov
stos
jl
mov
sar
fs
cwtl
push
sbb
xor
pushl
cld
jno
sbb
adc
pop
sbb
repz
test
scas
scas
mull
pop
stos
or
call
fwait
sub
push
adc
sbb
or
fwait
mov
lcall
mov
jae
push
icebp
les
clc
pop
add
pop
jecxz
out
mov
fcomip
mov
adc
into
lds
pop
vunpcklps
push
fisubrl
pushf
pop
mov
sti
bound
pop
mov
xchg
jmp
in
jb
out
or
addr16
call
sub
mov
scas
rol
add
movsb
mov
scas
mov
ret
pop
dec
stc
mov
pop
cmp
inc
push
sbb
cmpsb
cmp
icebp
push
test
test
adcb
xchg
push
lcall
or
sbb
sbb
in
and
sub
mov
mov
mov
in
jae
stos
out
pushf
int3
or
pop
add
xor
jecxz
push
sub
dec
outsl
popa
in
sbb
cmp
sub
inc
rolb
xor
outsb
decl
sarb
movsl
mov
xor
or
xor
mov
ljmp
mov
sub
mov
jbe
aad
push
cmp
cmp
mov
pushl
push
gs
and
jmp
mov
mov
sub
sbb
loope
sahf
xchg
xchg
xchg
loope
inc
dec
popf
jmp
mov
push
fsubr
or
jnp
lret
pusha
orl
dec
cwtl
jecxz
mov
push
jbe
pop
add
loope
cmp
cmp
mov
fadds
lds
test
push
sti
adc
xchg
push
lcall
jmp
iret
and
lahf
test
fiadds
sbb
xor
loopne
mov
scas
decl
and
lea
cmc
rcl
repnz
mov
cmp
xor
sub
inc
jge
push
dec
sbb
in
lahf
jo
cli
test
pop
push
call
fwait
sub
and
fbld
bound
shll
sbb
enter
mov
aad
jns
dec
pop
sub
loopne
fxch
subl
jmp
fildl
pop
xor
out
mov
jmp
and
fistl
adc
call
in
stos
mov
sbbb
je,pn
pop
fnstenv
jno
inc
outsl
faddl
popf
cwtl
sbb
lcall
fdivs
ret
mov
and
cli
dec
xchg
jmp
add
mov
dec
mov
mov
rcrb
ret
and
push
iret
cmp
fs
test
idivl
decl
ret
stc
adc
in
xchg
adc
adc
pop
lea
mov
call
sub
jno
add
cmp
out
in
aas
rolb
aam
into
mov
lcall
push
gs
inc
jl
adc
aam
pop
call
sbb
xor
jmp
or
mov
inc
loope
xchg
xchg
xchg
mov
jp
pop
sub
sbb
mov
shrb
cmp
pushl
jo
pop
cld
lcall
shll
and
shlb
test
in
xchg
icebp
mov
repz
push
pushf
sub
fwait
in
mov
std
incl
xchg
out
movsl
xor
push
aaa
xchg
mov
sub
mov
jnp
push
lock
incl
mov
pop
sub
ja
mov
push
or
incl
lret
addr16
mov
pop
cmpsb
xor
pop
xchg
es
lret
pop
incl
loopne
xchg
mov
pushl
fs
xchg
outsb
sub
aaa
in
xchg
jno
sub
fwait
sbb
fdivl
dec
mov
scas
popa
xchg
pushl
sub
rcrl
imul
mov
fidivrs
add
pop
fsubrl
call
lahf
cmpsl
pusha
cmp
add
ror
sub
cwtl
inc
aad
ja
outsb
pop
mov
cmp
lret
call
lea
dec
push
aad
sub
sbb
out
incl
cli
xchg
ja
mov
lods
outsb
mov
bound
movsl
call
mov
ds
pop
out
push
leave
xor
pushf
imul
or
fildll
shl
ja
jp
jmp
or
inc
mov
std
adc
add
dec
xlat
xchg
jge
mov
out
add
outsb
and
out
mov
shrl
loope
mov
in
adc
lcall
ret
data16
lds
adc
fdivr
andb
incl
sbb
cmpsb
scas
and
or
dec
mov
add
cmp
fwait
ljmp
ja
leave
ficompl
sub
or
add
mov
lcall
push
popa
out
jno
sub
mov
mov
out
shlb
jl,pt
das
inc
call
jle
push
arpl
ror
test
mov
ss
or
mov
push
es
outsl
iret
lcall
shrl
xchg
jb
subl
daa
js
sar
pushl
imulb
or
jp
arpl
dec
cli
lret
js
push
je
les
jmp
aas
xor
mov
pop
mov
push
adc
ljmp
insb
loop
and
ljmp
pop
out
arpl
stc
int
dec
xor
sub
sub
mov
test
outsb
lcall
adc
jns
and
xchg
adc
nop
mov
mov
dec
add
pushl
and
push
push
data16
test
popa
sub
sub
lds
pop
icebp
inc
clc
dec
fisubrs
clc
sbbb
scas
fbstp
push
fs
mov
test
bound
push
adc
xchg
jae
mov
or
call
fiadds
sti
xchg
sub
aad
aad
xor
subb
mov
fcos
incl
ljmp
pushf
daa
mov
inc
movsb
imul
adc
int
xchg
pop
mov
loope
call
dec
jl
int3
mov
mov
stos
and
ljmp
fcompl
or
in
push
cmpsb
ds
call
cld
pop
push
push
and
loope
dec
jbe
jp
pushf
rorb
xchg
stos
sbb
hlt
jg
decl
in
xor
and
test
cmpsl
stos
sarb
fstpt
enter
xchg
pushl
mov
popf
mov
repz
mov
mov
fwait
sbb
and
incl
mov
sbb
mov
scas
fwait
cmp
mov
add
and
adc
jg
jmp
lret
rorl
mov
mov
xchg
adcb
stos
mov
sub
fidivrl
sub
push
xchg
or
inc
mov
pop
int
mov
push
xchg
je
inc
push
inc
xlat
out
or
incl
xor
mull
adcb
mov
test
out
lea
aas
adc
call
movsl
pop
push
loop
xchg
fwait
push
hlt
cmp
test
hlt
jmp
dec
ja
add
decl
in
subb
lods
sub
filds
mov
add
mov
jae,pt
xor
call
jmp
and
add
dec
fcomp
lcall
push
mov
cmc
lahf
gs
es
ljmp
sbb
jle
sub
inc
mov
xchg
cmp
into
xchg
pop
xor
adc
movl
jb
lcall
or
ss
xor
jmp
sbb
mov
dec
loop
jg
or
push
decl
cwtl
out
push
testb
movsb
pop
orl
test
jae
push
in
decl
jne
movb
sub
xchg
xchg
mov
xlat
xor
mov
repz
lret
decl
sbb
stos
mov
int3
into
mov
ljmp
add
ds
js
div
mov
scas
lret
divl
insl
sbb
push
lds
mov
incl
xchg
and
inc
test
sbb
out
daa
aas
mov
pop
cmp
sub
add
pop
fstl
dec
mov
lock
jmp
inc
pop
js
in
mov
cld
push
add
pop
mov
ud0
ja
jp
insb
mulps
jmp
sahf
inc
decb
lret
xchg
and
incl
bound
jbe
xor
push
push
push
cmp
mov
lcall
xchg
inc
sub
push
lcall
jmp
sbb
push
mov
pop
int
ljmp
fcomp
dec
push
lret
test
arpl
pop
add
aad
out
sub
call
jl
icebp
fildll
mov
push
mov
test
push
xor
jmp
cmp
xor
pop
add
mov
and
jge
adc
push
clc
inc
lcall
adc
xchg
sbb
fld
mov
sub
ficoml
or
cs
ljmp
and
jg
mov
adc
rol
in
adc
out
hlt
outsl
divb
fdiv
sub
jnp
aam
jmp
outsb
leave
push
ja
xchg
sbb
push
jle
mov
fsubs
sub
rcrl
decl
aaa
test
cmpsb
mov
ja
adc
lea
add
orb
mov
data16
gs
push
cmp
loope
subb
mov
cwtl
mov
pop
push
insb
mov
cs
mov
call
dec
inc
xchg
ret
rorb
mov
sbb
add
mov
pop
test
outsl
jg
ljmp
push
aam
rolb
cmc
or
cld
mov
xchg
pop
lea
pusha
addr16
push
and
stos
push
or
decl
mov
mov
cmc
stos
cmpb
shll
add
inc
or
and
dec
into
ret
mov
adc
fcoml
add
ds
les
pushf
js
dec
or
sub
inc
mov
push
nop
in
or
cs
adc
fs
jge
or
pop
icebp
cld
out
cmpsb
incl
xor
out
outsb
mov
push
mov
push
in
cmpsl
or
ljmp
inc
enter
xor
nop
repz
mov
in
xor
test
jg
push
aam
int3
daa
pop
mov
jae
sbb
pushl
lods
cltd
cmp
and
sub
mov
outsb
fsubrs
jg
add
mov
and
mov
jp
jge
sbb
mov
pop
mov
xchg
js
sbb
shll
cltd
daa
jmp
dec
mov
in
adc
cwtl
push
incl
iret
push
or
mov
orl
inc
push
mov
incl
outsl
mov
xchg
lret
mov
out
mov
xchg
sbb
imul
cmp
mov
push
xchg
pushl
in
mov
ds
test
rcrl
jnp
pop
xlat
mov
cld
cmc
lcall
mov
mov
mov
out
bound
mov
add
and
std
mov
incl
lds
insb
clc
pusha
adc
test
push
inc
mov
cmpb
cli
mov
or
lcall
dec
inc
dec
mov
xchg
pop
cwtl
and
sbb
filds
rolb
andl
ljmp
ret
fildl
loope
sub
aas
gs
jg
dec
cmpsb
enter
sbb
or
xchg
jmp
mov
aad
jmp
ljmp
fbstp
xchg
pop
and
out
jo
popa
add
xlat
mov
fstpt
call
inc
push
cli
out
sub
sbb
sbb
mov
or
icebp
stos
decb
gs
test
ja
sub
outsl
jns
decl
imul
mov
mov
lcall
rcll
add
pop
call
sub
fcos
mov
mov
xchg
and
into
roll
les
mov
mov
std
or
imul
jl
sarl
adc
shlb
aam
lods
xor
mov
jg
aad
pop
adc
sub
xlat
xchg
inc
jecxz
jg
test
fwait
pop
cs
pop
inc
sbb
ret
shlb
mov
mov
pop
dec
mov
or
js
js
int
pop
aam
fnstsw
pop
lcall
lcall
pop
movsb
dec
cwtl
cmp
dec
insb
repz
jmp
sub
xor
fnstcw
in
test
mov
cmp
cmp
sub
mov
lods
dec
call
mov
dec
mov
test
faddl
dec
sbb
push
jmp
ret
loope
add
cmp
pop
or
lahf
lret
inc
call
dec
inc
jmp
test
pop
repnz
mov
insl
movsb
mov
mov
iret
popa
mov
popf
outsl
int3
mov
mov
jae
jb
leave
mov
push
repnz
or
movl
jmp
xchg
shrb
mov
js
sbb
fsubrs
jp
mov
out
push
xor
fcompl
jecxz
dec
mov
mov
jg
or
dec
pop
sti
in
test
push
cltd
int
int3
jmp
inc
pop
in
jnp
out
push
ja
mov
ljmp
pop
loopne
mov
and
push
pop
cmp
in
bnd
push
jmp
loop
mov
lcall
aaa
jbe
test
push
xchg
add
push
push
fcomip
jg
add
pop
adc
out
cmp
std
lea
call
xor
and
sbb
aad
cmp
jecxz
ret
jl
adc
das
mov
ja
in
inc
mov
iret
mov
adcl
mov
xor
sbb
jmp
or
inc
and
cmp
xor
pop
lret
movsb
xor
cvtpi2ps
push
fwait
mov
dec
cmp
and
incl
jo
and
push
mov
lods
push
rolb
fstps
ljmp
push
xlat
sub
ret
or
inc
push
sysenter
push
mov
mov
dec
cmp
sbb
xchg
fnstenv
arpl
js
pop
lcall
sbb
popa
pop
jg
cwtl
lret
jo
mov
xchg
mov
sahf
lock
sbb
call
push
dec
shl
aad
xor
fsubs
nop
cli
inc
jne
and
sbb
xor
incl
adc
das
xchg
xor
popf
mov
mov
das
sub
jmp
into
testl
jmp
mov
dec
push
jae
dec
arpl
dec
loop
aaa
ljmp
subb
mov
xchg
int3
or
xor
imul
push
es
inc
sub
push
push
sahf
push
lds
sub
push
shll
incl
pop
popa
jl
pop
lds
jge
and
mov
cmp
int3
mov
int3
enter
jns
mov
push
jb
lods
int
fcomip
pusha
jge
pop
call
jg
xor
mov
repz
testl
lsl
shr
les
inc
call
fcmovnu
xor
test
lcall
jg
push
jecxz
jnp
push
mov
pop
inc
es
cmp
mov
pusha
in
popa
lods
ret
incl
icebp
out
xlat
out
sub
jl
add
int3
inc
inc
in
sub
jg
popf
pop
stos
xor
jns
sbb
loop
popf
test
mov
rcrl
jg
sar
push
sahf
lret
inc
mov
mov
loop
loop
mov
scas
call
ljmp
mov
push
int3
adc
mov
mov
push
xor
mov
cld
pushl
fists
sub
xor
pop
insb
jg
lret
fsubs
inc
mov
xchg
dec
insl
jmp
lret
daa
imul
mov
add
pop
xchg
in
mov
notb
clc
rol
in
addr16
inc
adc
push
in
scas
cmp
push
rcr
mov
icebp
add
xor
repz
or
cmp
sbb
subl
movsl
mov
insw
dec
das
sbb
mov
fisubrl
xchg
fdivl
stos
jecxz
push
jbe
scas
outsb
push
decl
adcb
inc
int
rorl
cs
xchg
adc
lods
or
cli
lcall
inc
xor
sbb
clc
or
jb
xchg
mov
cwtl
leave
fistl
push
and
aaa
jno,pn
cmpsb
mov
xor
in
fs
push
pop
out
stos
push
adc
jmp
popf
movsl
mov
jp
add
and
pushf
xchg
or
loopne
cmp
jmp
out
sbb
fisubrl
jg
arpl
jb
aam
xchg
data16
scas
movd
push
sub
lods
push
inc
mov
arpl
pop
in
divl
sub
nop
sbb
loop
dec
call
jmp
iret
scas
inc
cmpsl
mov
mov
mov
cwtl
inc
out
call
or
test
clc
movsl
mov
iret
mov
out
mov
out
test
xchg
pop
pop
mov
in
and
adcb
mov
push
rcrb
jg
xor
aad
ret
dec
sbb
lcall
out
cmp
repz
dec
or
sahf
dec
fwait
lea
movsb
inc
inc
jecxz
sahf
jg
lcall
cmpsb
mov
lea
cmpsl
les
jno
lea
mov
lock
lcall
lods
dec
adc
xchg
imul
inc
clc
in
sbb
push
push
mov
mov
call
decl
and
mov
mov
dec
in
cmpsb
dec
mov
test
test
push
call
xor
jecxz
jnp
mov
retw
inc
or
push
sbb
push
nop
loope
loopne
loopne
cmc
in
and
ror
cmp
sahf
sbb
ljmp
lcall
gs
orl
mov
rorl
jb
cmp
xchg
aaa
testb
jecxz
lds
std
testb
repnz
jns
inc
sub
cmp
dec
xchg
pop
sbb
aad
out
scas
or
pop
cmp
pop
cltd
test
enter
cmp
pushl
pusha
pop
les
lea
mov
push
xchg
iret
and
int
pop
sahf
cwtl
jmp
jmp
pushf
adc
pop
test
sahf
daa
sub
cmp
jge
lock
jmp
fcomip
into
dec
sub
aam
push
add
cld
mov
and
cmpsb
test
or
test
jns
mov
sbb
mov
cmp
fs
insb
mov
xor
dec
jne
loope
mov
cmc
js
in
mov
ljmp
in
aaa
ds
cltd
mov
mov
test
ljmp
repnz
jmp
adc
xchg
push
push
iret
push
jmp
inc
js
pop
or
add
movsb
mov
jno
jecxz
mov
pop
mov
sti
iret
mov
pop
sbb
fldt
out
icebp
lcall
adc
nop
dec
test
fiaddl
mov
fimull
jl
mov
fistpll
stos
stos
hlt
outsl
mov
pop
xchg
xchg
dec
inc
incl
cmp
jo
pop
icebp
loopne
pushf
movsb
or
mov
aas
jo
pop
pushl
hlt
filds
mov
mov
mov
nop
mov
jno
dec
adc
je
mov
jbe
lahf
xor
popf
data16
jle
fdivr
jl
ret
addb
cmp
es
adc
mov
loop
outsl
clc
stc
ja
lret
add
sub
jnp
rcll
dec
xchg
xchg
lret
fcos
fisttps
push
mov
xor
lret
xchg
xchg
data16
mov
in
jo
outsl
outsl
clc
je
ffreep
push
out
lods
fmulp
ds
inc
or
xchg
mov
cmc
scas
sub
fdivrp
incl
rorb
je
mov
xor
mov
push
in
incl
dec
push
fs
push
jge
adc
fcoms
sbb
test
faddl
mov
jge
aas
fst
test
jmp
in
inc
outsl
jmp
push
ret
jg
sti
out
jecxz
lcall
in
test
mov
out
pop
xchg
mov
dec
jbe
dec
mov
out
xor
pushl
std
call
stos
imul
outsl
jae
mov
stos
stos
pop
lahf
incl
idivl
lcall
pop
adc
push
cli
mov
call
imul
sbb
cli
jmp
cld
mov
sub
adc
fisubrl
mov
aas
lret
xchg
and
popa
jp
jmp
jbe
mov
xlat
add
call
ljmp
mov
lds
mov
adc
xor
aas
adc
jecxz
dec
out
mov
ljmp
inc
loop,pt
popa
push
les
movsl
jp
xchg
test
subl
cmpsb
fs
push
rcl
xchg
lcall
push
ret
jnp
hlt
aas
xlat
mov
jb
inc
pushl
call
mov
sub
xchg
push
repnz
dec
out
cli
ds
mov
pop
and
stos
dec
std
xchg
cmovbe
fimull
push
inc
push
mov
pop
lcall
and
pop
adc
repz
loop
jl
sub
int3
add
jnp
pop
ljmp
decb
sub
insl
shll
mov
out
call
xor
out
dec
fcmove
sahf
cld
xor
mov
aad
stos
sub
jns
adc
or
daa
mov
jns
cltd
xor
sub
xchg
dec
xor
sbb
mov
arpl
daa
lcall
out
dec
cld
jb
mov
sahf
roll
in
add
dec
sbb
push
jmp
inc
jbe
xchg
cmpsb
bound
xor
or
dec
popf
shll
adc
and
call
xchg
sahf
mov
jne
mov
fs
push
or
sar
out
adc
scas
cmp
int
add
sub
incl
daa
dec
add
jns
pop
xor
int
shl
dec
pushl
scas
fmull
sub
movsl
push
jae
xchg
sbb
push
movsb
jecxz
testl
mov
pop
dec
pop
rorl
jne
cmp
pop
lret
cs
fs
or
decl
jg
aad
js
or
mov
pop
out
cmp
jnp
iret
sub
bound
cmp
sub
xchg
in
scas
inc
gs
in
cmp
jmp
mov
out
dec
sbb
pushf
and
adc
mov
nop
rcll
pop
cmp
lret
movsl
xchg
push
fwait
push
mov
xor
cmp
stos
xchg
fidivl
fwait
mov
les
daa
andl
lahf
pop
adc
movsb
stc
es
decl
pushl
push
adc
cmp
mov
push
mov
mov
xchg
xor
pop
test
call
mov
push
dec
add
vpshab
sarb
lcall
adc
add
mov
pop
ret
lds
cmp
lcall
out
add
push
loop
incl
inc
aas
xor
call
mov
lods
testb
ljmp
adc
xchg
test
icebp
pop
adc
fmull
cmp
add
lea
xlat
call
scas
sub
or
insb
andl
pop
test
les
push
push
jg
aam
xor
add
xor
popa
sbb
enter
dec
inc
cmc
adc
cmpsl
sub
incl
test
ret
inc
dec
jb
xor
ljmp
jnp
cmp
sub
inc
jmp
lcall
int3
cmc
mov
xchg
arpl
xchg
sbb
or
inc
jge
lahf
ficoml
jecxz
xor
add
incl
pop
pop
dec
jge
xor
mov
rorb
and
mov
and
cmc
lret
incl
sbb
pop
xchg
incl
test
cs
pop
inc
ljmp
xchg
outsb
js
dec
arpl
cltd
inc
fsubs
push
cmpsl
or
push
inc
cmp
inc
cmp
jae
xchg
push
into
xor
ljmp
adc
aas
mov
xchg
ljmp
inc
pop
sub
sarl
xchg
js
addr16
dec
cmc
call
mov
mov
jg
leave
rcrl
jae
in
adc
inc
leave
push
popa
data16
sbb
xchg
loope
mov
or
push
cld
xchg
jle
or
scas
or
fsubrs
sbb
fdivr
jg
pusha
cmpsl
mov
shrl
repz
gs
lds
cmpsl
ret
imul
sbb
xchg
mov
mov
ljmp
xor
sub
mov
xor
mov
fsubrp
outsl
ror
popa
pop
mov
mov
jb
mov
js
stos
xchg
or
decl
rol
stos
mov
ficoml
dec
cmp
hlt
adc
jle
or
cmp
lcall
dec
lods
mov
jbe
icebp
sahf
xchg
popf
arpl
arpl
inc
jno
loopne
dec
adc
jle
jp
movsl
jo
dec
stos
inc
sbb
or
shl
inc
or
inc
insl
jmp
inc
cmp
pop
fisttps
jmp
or
lcall
inc
repnz
jge
add
ss
inc
dec
dec
push
push
das
nopl
xchg
cmp
dec
jo
incl
add
pop
in
mov
pop
cmc
xlat
dec
enter
mov
pop
jne
mov
notl
or
movsl
xlat
aas
ja
stc
pop
or
push
pop
das
mov
inc
std
mov
dec
enter
pop
fiaddl
cmp
sub
mov
fs
in
push
or
xchg
and
mov
scas
mov
or
mov
jmp
stc
xchg
dec
mov
and
xor
and
cmpsl
xchg
lods
sbb
jmp
lcall
ljmp
or
repz
mov
getsec
call
pushf
mov
loopne
mov
cmp
pushf
divl
call
pushf
xor
or
je
rcrb
mov
push
adc
xor
pop
pushf
xchg
pushl
sbb
repz
mov
cli
and
pop
mov
cmp
jbe
lods
mov
mov
fsubs
sbb
stos
pushl
or
inc
or
outsl
jl
push
adc
jbe
dec
in
mov
mov
in
shr
daa
xor
js
adc
insl
scas
pop
fidivrs
call
call
and
add
cwtl
test
stos
insl
push
mov
sub
sub
ja
and
shlb
sti
les
jge
ljmp
adc
dec
aas
sbb
sbb
int
xlat
mov
insl
lea
adc
push
xor
pushf
cwtl
jecxz
or
jl
push
ljmp
div
in
sub
jne
mov
test
mov
test
push
and
mov
loopne
xor
jmp
xor
and
push
cmp
lds
into
jbe
ffreep
pop
enter
dec
dec
mov
inc
scas
add
out
cmp
push
xchg
cli
sahf
jbe
rclb
mov
insl
cmc
add
mov
shrb
add
popf
sub
mov
mov
rorl
cmp
mov
call
js
fs
jl
lret
jb
jmp
js
xchg
loope
xlat
cld
cmp
inc
mov
aas
pop
fmull
push
xchg
mov
jb
loopne
inc
je
pop
js
cwtl
cmp
lcall
into
iret
test
fsubrp
xor
mov
lea
ret
jecxz
jp
xlat
mov
xlat
dec
subb
mov
sub
mov
jae
dec
xor
sbb
jg
push
fimuls
fbstp
mov
sbb
inc
loop
jnp
xor
stos
cli
add
call
push
mov
addr16
xchg
aas
or
mov
lret
jecxz
inc
arpl
stc
sub
hlt
mov
lret
insb
std
sbb
outsb
inc
jle
and
mov
cpuid
daa
popf
pop
add
inc
out
dec
testl
pop
call
or
rcrb
ds
xor
mov
decl
jo
sarl
jo
or
add
lock
sbb
ljmp
mov
in
inc
arpl
addr16
scas
xchg
lods
lea
adc
test
fcomip
sbb
nop
and
jne
jg
pop
cmp
mov
or
mov
pusha
idiv
call
xchg
push
lods
jns
adc
mov
arpl
or
subl
dec
stos
call
std
mov
pop
jb
jbe
jp
xchg
aam
push
jo
jl
sub
incl
dec
mov
add
mov
sbb
pop
xchg
push
rcll
jmp
push
in
inc
mov
jl
add
jg
push
pop
add
sbb
or
mov
incl
hlt
addr16
fwait
lcall
and
jmp
rcll
inc
test
bound
cwtl
sub
clc
stos
test
adc
sbb
movsb
push
rol
jmp
mov
mov
addr16
ljmp
push
xor
out
mov
nop
ds
bound
cmpsl
leave
xchg
test
mov
pop
push
loopne
push
push
int3
inc
nop
das
cli
cmpsl
push
lods
sbb
decl
lcall
jb
movsl
and
xor
mov
jne
test
sbb
add
stos
incl
stc
or
gs
and
push
cmpl
int3
sub
pusha
pop
scas
ror
gs
ljmp
add
das
sub
insb
mov
sbb
insl
mov
cmp
idiv
jg
out
sbb
jg
push
lret
aas
lds
cmp
inc
sub
outsl
pop
xchg
out
sti
mov
lock
call
jns
in
stos
data16
adc
inc
insb
push
mov
out
js
pop
ret
loop
jae
pop
ret
aaa
jnp
mov
inc
ret
dec
scas
push
push
and
into
sub
jmp
leave
xchg
js
xor
cltd
push
in
aas
dec
sahf
xchg
clc
pushf
lcall
pushl
xchg
arpl
jle
imul
negl
ret
sar
push
adc
lcall
xor
mov
push
jo
mov
mov
stos
fisttpl
lcall
sub
sub
int
test
in
or
pushl
and
sbb
sub
jl
add
xor
testl
cli
scas
dec
xchg
sbb
dec
and
cmpsl
cmp
pop
and
jne
movsb
repnz
call
ljmp
test
jg
jne
rclb
or
pop
push
fidivl
mov
ja
pop
mov
dec
and
rcl
xor
xchg
sub
mov
jmp
inc
mov
xor
xchg
mov
fcmovnbe
mov
pcmpeqb
jmp
jns
sbb
mov
ljmp
mov
add
aam
pop
jg
mov
xor
ja
movsl
divps
out
dec
into
dec
or
std
jmp
mov
sbb
jg
cltd
in
mov
fimuls
ljmp
lret
cld
cmpsb
gs
pop
fs
imul
fstpl
add
pop
imul
call
cltd
jge
lahf
dec
in
jo
lods
xor
aad
jle
sti
push
push
mov
fcomip
ljmp
fdivs
cmc
and
insl
jae
cmp
addr16
mulb
add
aad
lea
call
cmpsb
jb
adc
xchg
inc
ljmp
rcrl
rcll
push
sbb
aaa
ja
mov
movsb
pop
pushl
std
scas
mov
xlat
lahf
mov
lock
test
std
push
fldl
mov
decl
push
cwtl
push
or
les
sbb
aad
ret
push
stc
shlb
pushl
stc
and
sub
decl
mov
fisubrl
fcmovnb
std
das
sar
adc
xchg
adc
jbe
js
int3
test
mov
jmp
outsb
xlat
int3
adc
cli
jbe
pop
loope
in
add
ror
xlat
insl
and
jmp
das
mov
outsb
clc
les
sub
inc
mov
jge
adc
adc
frstor
add
mov
sbb
mov
sbb
fcoms
add
ret
and
fcoml
xor
xchg
scas
into
mov
in
dec
adc
mov
fldcw
mov
sahf
mov
push
xor
sbb
cs
mov
addr16
lahf
cmpsb
add
dec
pop
adcl
incl
adc
mov
mulb
push
push
sbb
fistpl
xchg
pop
pop
fld
adc
incl
push
dec
mov
sub
int
mov
push
ror
fnstenv
lods
in
cltd
les
lcall
xor
sbb
xchg
pop
push
adc
xchg
mov
push
mov
mov
mov
scas
incl
and
or
call
loop
lea
sub
xchg
sub
cli
mov
add
adc
jecxz
test
pop
push
data16
lcall
or
aam
imul
adc
and
sbb
mov
call
jns
push
push
mov
fsubr
out
xor
std
nop
xchg
les
push
das
mov
es
iret
test
bound
sub
push
mov
mov
ljmp
test
notb
cmpsb
aad
push
xor
movsb
pop
cmp
scas
arpl
stc
fcompp
insl
pushl
mov
xorl
fcoms
pop
push
xchg
movsb
cmp
ljmp
orb
and
mov
and
xor
mov
or
inc
cmp
jmp
or
loope
fistps
ret
int3
pop
sbb
add
and
lock
or
sar
push
cld
aas
ja,pn
pushf
inc
jno
insb
iret
jmp
push
pop
rcll
ss
pop
sahf
xchg
or
jns
frstor
mov
and
fld
sbb
mov
decl
pop
lods
les
test
adc
fs
mov
lods
outsb
xchg
stc
lret
push
sbb
insl
shlb
and
out
cli
out
insl
cmpsl
loope
in
jecxz
inc
inc
jnp
frstor
cmp
sub
mov
jmp
inc
addl
add
addr16
add
iret
xor
movsb
jl
not
call
mov
test
jbe
fsubl
out
mov
pusha
mov
adc
test
call
or
shl
sbb
call
xor
sub
pushf
xor
or
add
sub
scas
decl
int3
xor
jg
mov
mov
xchg
inc
fsubs
dec
push
sub
leave
imul
sbb
loope
xchg
test
loope
fisttps
mov
out
test
aas
or
jae
fsubr
decl
mov
outsl
cld
in
add
sub
out
pop
xchg
cmpsb
push
add
sub
loopne
xor
sub
push
aad
push
in
push
xor
je
incl
sbb
or
cmp
mov
daa
xor
iret
subb
add
aad
mov
xor
ljmp
xchg
lret
cwtl
sti
mov
pop
ljmp
call
das
add
das
clc
inc
mov
xchg
mov
fst
mov
and
test
fisubrl
popa
test
fdivrp
sbb
mov
push
xchg
cli
pop
and
aas
sbb
cld
pop
out
cmpsl
in
clc
mov
loopne
negb
data16
cld
and
mov
out
cli
lret
aaa
jp
and
pop
movl
popf
test
xor
fld
pushl
jecxz
cmp
jl
lret
cwtl
push
sbb
inc
add
out
sti
mov
push
pop
ljmp
fisubs
jbe
inc
or
mov
sub
arpl
les
push
decl
gs
nop
inc
xor
sbb
or
xchg
adc
jecxz
jne
ss
call
pop
mov
push
mov
cmp
mov
roll
lahf
pop
sbb
mov
decl
inc
mov
mov
ret
movsb
cmc
fistpl
test
xchg
and
or
movsb
jle
xlat
lock
int3
push
shrb
cmp
or
mov
xchg
xchg
adc
xchg
lock
es
rcrb
pop
sub
out
clc
pop
jge
jo
or
xor
lret
mov
cmp
lahf
push
cmp
push
sbb
int
rcr
aad
jo
pop
shlb
push
push
filds
cmp
lcall
mov
jle
ret
sbb
cmpsl
es
or
test
or
cmp
scas
out
jmp
gs
shrb
push
cmpsl
ret
push
scas
enter
test
mov
mov
daa
push
rep
jb
idiv
jmp
fildll
mov
or
inc
sub
cmpsl
mov
call
movsb
add
cmp
sti
jnp
push
inc
dec
pop
xchg
scas
pop
adc
push
pop
or
decl
popa
mov
pop
fists
les
and
and
fwait
sub
cmp
incl
scas
xor
mov
mov
pop
xor
xor
clc
test
pop
loopne
and
fwait
movsl
ficompl
mov
popf
je
mov
idivb
fldenv
lahf
xor
outsb
or
mov
sbb
imul
fsubrl
fnsetpm(287
pushf
mov
pop
icebp
cmpsl
out
fs
movsb
repz
mov
sahf
fildll
cmp
add
call
leave
cs
or
cmpsb
nop
fprem
ljmp
xchg
imul
les
in
pop
leave
in
loopne
lret
lcall
out
into
or
test
add
xlat
bnd
lcall
push
mov
and
pushf
mov
push
clc
and
push
sub
decl
adc
push
or
ljmp
outsl
mov
or
mov
mov
lcall
mov
into
movsb
and
and
out
stc
mov
mov
push
dec
out
cld
icebp
and
jl
ljmp
jge
inc
loop
fnstsw
jbe
ss
insb
mov
shrb
sbb
outsb
sub
lcall
nop
jbe
sbb
push
xchg
mov
daa
xchg
iret
push
pusha
insl
mov
and
stc
hlt
fists
adcl
jne
testb
ljmp
push
xchg
jg
sbb
cmp
outsb
jno
xorb
mov
icebp
lcall
inc
xor
fsubrl
and
xchg
mov
ret
call
das
in
aam
in
shll
xor
lds
sub
aas
and
jmp
push
fsts
xchg
je
mov
stc
fucom
pop
cmp
lock
std
pushl
cld
mov
sbb
stos
push
out
sub
rcrb
inc
push
fwait
sub
enter
sbb
ss
mov
cmpl
inc
ror
ljmp
rcrb
stos
mov
movsb
scas
inc
dec
xchg
lret
sub
or
cwtl
push
push
call
jmp
mov
xchg
hlt
push
nop
mov
dec
popf
fistl
dec
loopne
sarb
lods
pushf
xchg
jae
cmp
ljmp
mov
hlt
std
xchg
cmpl
xlat
pushf
sub
pop
xchg
cmp
cmp
and
stc
pop
pop
jp
int
add
imul
fs
jge
jbe
push
lcall
mov
repz
xor
cmp
mov
addr16
dec
movsl
pop
cmp
dec
jo
jno
sbb
pop
dec
cmp
hlt
sub
add
cmp
pop
call
adc
xchg
enter
dec
mov
addr16
bound
adc
and
mov
jmp
cltd
fistps
sbb
cmp
lea
rorb
push
arpl
xor
ss
pushl
or
xor
icebp
movsl
nop
dec
sub
xchg
sbb
jecxz
loope
cmc
into
push
adc
jmp
xchg
ret
js
add
mov
clc
xor
inc
jle
data16
pusha
push
mov
push
mov
pushl
ret
testb
sbb
cmpsb
loopne
mov
nop
adc
add
cmp
adcl
mov
repnz
incl
adc
jg
scas
scas
ja
push
test
mov
pusha
sub
pushl
cmp
dec
and
lahf
fwait
jecxz
cmpsb
dec
loopne
jb
push
std
cmp
sbb
insl
push
aas
decl
rcrl
push
addr16
mov
jge
sbb
and
xchg
and
out
jb
xchg
xchg
ljmp
in
mov
das
cmpsl
add
xchg
mov
test
sahf
in
aas
jnp
jno
mov
call
stc
aam
rcpps
das
dec
jbe
jle
adc
cmp
imul
sub
cwtl
push
cmpsl
push
mov
lds
popa
shll
lcall
inc
clc
sbb
and
repnz
fdivp
rolb
je
jmp
xor
dec
loopne
mov
xadd
xchg
lock
jo
notb
out
mov
pop
fnstcw
dec
fcmovbe
dec
inc
sbbl
outsb
lahf
xor
pop
mov
pusha
clc
fcomip
ljmp
aas
sbb
mov
jae
sub
je
mov
pushl
xlat
cmp
fisttpl
lret
subl
mov
stos
cltd
pop
jg
push
fiadds
dec
cmc
in
jne
add
mov
mov
clc
fldl
xorb
adc
xor
xchg
push
cs
lcall
jno
inc
push
jecxz
movsl
mov
jns
movsb
push
push
movsl
pusha
subb
mov
fisttps
stos
mov
adc
popa
test
xchg
sbb
and
cli
dec
sbb
sbb
pop
pop
push
mov
pop
popa
mov
outsl
mov
addr16
cli
aad
pusha
repz
test
jg
repnz
pushf
xchg
cmp
mov
xchg
idivb
mov
int
ud0
lcall
mov
xchg
scas
lret
sub
jp
lods
lds
stc
xor
shlb
insb
inc
jge
lods
sub
mov
sub
add
push
jp
test
mov
dec
and
add
pushl
cld
dec
cmp
jo
pusha
test
leave
push
icebp
pusha
repnz
stos
cmc
push
daa
loop
inc
mov
and
rol
jbe
inc
aaa
jmp
int3
cmp
push
fprem1
lea
inc
test
clc
lcall
adc
xor
loopne
sarl
daa
jnp
fisubl
mov
lahf
daa
stos
stc
out
mov
movl
sti
clc
cmpsl
popfw
mov
dec
sbb
divb
outsl
add
ljmp
loopne
or
push
jp
in
jmp
sbb
pop
add
jmp
dec
int3
in
inc
cmp
jb
mov
ss
ljmp
push
cmp
xchg
pushf
sbb
pop
and
jmp
dec
insb
mov
jb
mov
ret
adc
or
dec
mov
add
jp
cli
sbbl
pushl
cwtd
xchg
xor
inc
mov
stos
or
cmc
inc
lcall
sub
mov
decl
pusha
rcrb
addr16
add
mov
aad
ret
push
mov
pusha
xchg
je
pop
loop
mov
jmp
ficoms
pop
and
push
mov
sahf
sbb
mov
mov
inc
negl
jmp
add
aad
je
cmc
je
ljmp
int
ss
jns
sbb
mov
cwtl
test
popa
leave
add
mov
fimuls
cmp
bound
ljmp
loop
mov
pop
std
fisubs
fsubp
push
dec
dec
lcall
nop
cmpsb
idivl
imul
xor
push
adc
lods
xor
inc
rcrl
enter
xchg
bound
mov
xor
mov
shll
xchg
mov
xchg
mov
mov
and
xchg
fcom
mov
mov
sar
lcall
mov
xchg
shlb
scas
inc
push
jg
cmp
lds
das
sar
xor
sbb
addr16
inc
or
pop
sbb
pushl
jge
icebp
pop
cs
fs
jo
push
sbb
cmc
out
sub
xor
mov
pop
cld
insb
sub
aam
in
dec
mov
inc
push
lds
mov
test
mov
xor
daa
lods
add
pop
xor
mov
idivb
adc
decl
nop
adc
cwtl
out
pop
xchg
xchg
subl
mov
mov
mov
xchg
xchg
push
pop
das
adc
lcall
cmp
lcall
sbb
insl
mov
loopne
ret
add
lock
dec
or
aam
and
pushf
dec
push
fwait
mov
in
sub
cli
pop
inc
cmp
jg
call
xchg
insl
push
or
lods
jns
jmp
iret
xchg
cmp
decl
sbb
adc
and
pop
lahf
xchg
mov
sub
xor
jg
incl
pop
or
ret
adc
push
lods
sti
std
xchg
aas
jo
xor
jns
ljmp
jne
mov
bound
iret
cs
push
jle
adc
cwtl
dec
push
jecxz
dec
push
lahf
aam
adc
xor
add
test
icebp
fs
out
sub
pushl
dec
and
es
xchg
mov
xchg
jae
out
xor
ja
jp
sub
fsubrs
jnp
pop
adc
stos
icebp
imul
xor
in
jg
mov
je
mov
ljmp
push
arpl
addr16
loopne
dec
test
inc
sub
fdivp
jge
sarl
int
hlt
lock
cmp
inc
xchg
pusha
cld
pop
pop
mov
cmp
stc
in
cmp
cmp
incl
fsubl
fs
in
cmp
xchg
ds
sarb
inc
lcall
xchg
mov
ss
scas
stos
add
pop
cli
outsl
xchg
lcall
imul
cmp
dec
addl
mov
fdivr
lcall
jl
ljmp
cmp
add
decb
das
push
jb
jmp
dec
bound
cltd
pop
loop
cmp
into
add
in
cmp
pop
cmp
ret
mov
cli
movsb
cltd
pop
ljmp
or
xor
cmp
push
xchg
sbb
mov
and
jge
cmc
aaa
std
popa
dec
addr16
mov
lret
imul
pop
mov
data16
aas
imul
sub
fnstsw
outsl
shll
mov
in
fidivl
mov
jo
mov
jg
nop
pop
icebp
mov
mov
ljmp
insl
cmp
pop
out
scas
sarb
lods
cmp
jl
cmp
out
dec
inc
lcall
repnz
lcall
cltd
inc
fbstp
fisubrl
popa
push
pushl
sub
dec
xor
add
sbb
cmp
mov
mov
mov
mov
push
sahf
or
mov
pushl
pop
das
fwait
sbb
xchg
jmp
dec
out
mov
ffree
cmp
rclb
insl
and
std
movsb
insl
rclb
inc
lret
and
add
decl
enter
mov
cwtl
in
jge
mul
dec
fdivrl
jb
in
call
push
push
and
push
xchg
testb
aas
and
sub
mov
rorl
sar
pushl
mov
pop
sbb
sub
imul
mov
and
in
les
fcomip
call
sub
jle
inc
inc
je
inc
arpl
jo
jp
out
sti
dec
in
fildll
dec
lock
call
mov
jmp
push
and
movsl
int3
scas
stc
ljmp
or
bound
mulps
xchg
sbbb
fimull
cmpsb
jecxz
lcall
inc
dec
fisttpll
movsb
sbb
mov
pop
je
cld
call
fmull
cwtl
es
pusha
iret
and
adc
dec
dec
sbb
lds
push
push
les
adc
xchg
ret
lods
xchg
es
adc
decl
repnz
lret
rcrb
lea
aad
mov
pop
mov
incb
sahf
je
lret
in
push
sub
sti
add
call
std
sahf
jecxz
int
mov
insl
adc
dec
shl
or
and
ret
jg
pop
decl
inc
cmp
outsb
cmp
pop
es
mov
push
dec
sti
dec
mov
test
pop
lock
mov
push
xor
rcrb
adc
mov
mov
fimuls
lock
cli
hlt
sti
imul
mov
sub
repnz
adcb
lret
mov
sub
roll
pushl
call
gs
mov
jl
dec
int
xor
mov
sar
decl
aam
daa
and
adc
sub
jo
aad
jge
enter
jbe
sub
incl
mov
xorl
loopne
imul
jge
scas
xchg
sbb
stos
bound
aaa
mov
lods
cwtl
pop
pop
into
cwtl
xchg
lret
addr16
mov
insb
xor
jns
frstor
add
cmc
lcall
cmp
popa
aam
loopne
push
xchg
ljmp
fdiv
inc
cmp
and
mov
cmpsb
fists
lahf
loop
in
mov
dec
xchg
mov
push
xor
into
xlat
mov
push
aam
dec
cld
loopne
nop
xchg
fwait
xor
jmp
ret
sub
int3
cmp
push
sbb
inc
jecxz
aad
stos
push
sar
jg
imul
xor
insb
std
pop
adc
aaa
cwtl
out
xchg
inc
pop
fdivp
mov
icebp
pop
hlt
lcall
aam
aas
pop
stc
jge
dec
fs
pop
xchg
popf
cli
je
leave
pop
inc
dec
cmc
sub
js
and
lret
mov
insl
xchg
jl
outsb
and
push
movsl
inc
movsl
add
out
mov
incl
ret
pop
ret
pushf
dec
sub
push
push
cltd
lcall
ljmp
addr16
adcl
xchg
jmp
data16
mov
push
sbb
inc
ret
movsb
sub
rcrl
scas
rcl
jnp
cmp
mov
xchg
sti
test
mov
pop
int3
mov
ljmp
xor
push
pushw
popf
cwtl
sub
insl
or
sbb
inc
bnd
scas
jno
dec
inc
sti
cmp
les
adc
ret
ljmp
mov
ficompl
aas
mov
sbbl
sub
fisttpll
jg
in
ret
arpl
adc
mov
sbb
push
pop
add
hlt
jmp
mov
and
lcall
xchg
cs
adc
xchg
or
enter
sbb
decl
xchg
cmpb
xlat
stos
mov
decl
insb
out
out
push
xor
add
lcall
mov
int
push
push
push
rcll
imul
push
mov
jno
pop
cli
sub
out
les
dec
test
sbb
push
sbb
inc
jmp
out
stos
inc
fstps
and
int
shlb
lcall
jp
add
sub
inc
xor
pop
inc
xchg
mov
inc
push
sub
jns
sahf
ljmp
into
addr16
call
enter
subl
inc
sub
fdivrl
sbb
xchg
add
inc
inc
jle
fcomi
aam
adc
cmc
sbb
adc
or
xor
scas
xor
incl
and
test
lods
cmpsl
jne
sbb
aaa
and
jb
ret
filds
xchg
cmp
lds
in
mov
ss
cli
mov
pop
loope
cld
sub
mov
sahf
cmp
dec
pop
out
lock
jl
ret
jns
in
push
adc
pushl
push
sbb
pop
jmp
mov
shl
loop
aaa
sti
in
stc
pop
jmp
push
dec
adc
push
std
or
ja
movb
dec
or
xchg
test
pop
jecxz
mov
cmp
jmp
cli
xor
test
xchg
fists
and
pop
dec
adc
adc
pop
adc
pop
inc
ljmp
roll
adcl
sub
lret
pop
mov
cld
cwtl
or
push
divl
fnstcw
add
int
push
jns
pushf
into
cs
jl
cmpsl
sub
stc
dec
mov
iret
jmp
fmuls
sti
test
ret
pop
or
pop
xchg
sub
fisubl
mov
add
adc
aad
mov
dec
fiadds
push
rcrl
cli
rcrl
add
sbb
jmp
ljmp
arpl
std
popa
adc
adc
stos
outsb
mov
sbb
xchg
call
mov
sbb
mov
push
jmp
fs
inc
mov
add
and
pop
pushl
inc
mov
iret
fldt
stos
pop
push
adcl
hlt
xchg
and
mov
daa
xlat
fists
jbe
and
das
ss
fldenv
popf
pop
ljmp
incl
push
out
leave
subl
dec
push
addr16
sar
fildll
xchg
sub
lea
xor
rorl
clc
movsl
mov
push
inc
sarl
pop
cld
in
jge
add
xchg
push
sbb
out
mov
dec
cwtl
loop
jle
pop
mov
sbb
push
fchs
aas
ret
add
outsb
xchg
arpl
sub
pop
mov
shrl
mov
jge
mov
lock
ds
jmp
cld
xchg
mov
bound
call
pop
mov
out
cld
push
sub
mov
lahf
adcb
rorl
pop
rcrl
adc
pushl
popl
fbstp
sbb
test
inc
push
xor
lods
ret
ret
test
test
fcomi
or
push
adc
repz
addr16
insl
ret
inc
jg
mov
sub
ret
adc
dec
dec
push
ret
movsb
xchg
pop
push
ljmp
push
fldt
fildl
loopne
or
popf
insl
mov
jle
shll
pop
gs
arpl
mov
rcr
xchg
mov
hlt
add
sbb
and
xchg
in
pop
sbb
ja
divl
repz
jmp
shlb
xchg
sub
jg
jmp
mov
ret
and
aad
mov
dec
jbe
dec
pop
jg
repnz
xor
fcmove
rol
popa
xchg
aas
pushf
push
inc
push
sub
jb
aaa
insb
sbb
add
lahf
sti
inc
into
popf
mov
xor
add
dec
sub
dec
in
fwait
jl
fistpll
aaa
rclb
pushl
xor
sbb
mov
mov
pop
insb
and
lcall
stc
lods
mov
mov
pop
cmpsb
xchg
clc
adc
and
jg
ds
inc
mov
call
pop
push
out
mov
cmc
mov
pop
push
sub
cltd
push
jmp
jae
lods
cmp
and
call
adc
or
cmc
mov
imul
jge
loope
lock
ljmp
add
cmp
mov
xchg
rorb
mov
jg
push
outsl
mov
dec
cmp
sbb
pusha
shll
out
sub
mov
decl
aaa
daa
cmp
cmp
mov
leave
shll
jb
test
icebp
pushl
dec
rolb
sub
adc
xchg
jle
dec
arpl
leave
dec
mov
or
push
cmp
cld
jmp
inc
or
add
cld
arpl
pop
fnstenv
xor
mov
add
std
or
orl
lea
rcrl
nop
jns
lcall
push
add
lcall
ja
addl
outsb
push
push
sbb
mov
sbb
es
lcall
decl
jl
add
fildll
stc
icebp
sahf
aaa
test
xchg
cli
xchg
in
jg
cmp
adc
in
je
xchg
push
push
adc
out
xor
lcall
ljmp
cmp
sbb
shll
sbb
xor
pop
loopne
xchg
hlt
or
scas
mov
cld
call
pavgb
out
je
mov
jmp
into
loop
xor
mov
jmp
adc
scas
ss
mov
es
dec
bound
sub
mov
negb
xchg
test
adc
stc
arpl
hlt
jmp
cs
adc
fcomip
add
push
jge
mov
rolb
aad
jg
aam
push
mov
sahf
in
sub
call
jae
sub
jno
or
push
sarl
scas
les
xchg
cmp
xchg
or
mov
out
cli
pop
stos
push
imul
mov
in
xchg
mov
fcoms
imul
clc
repz
int
and
mov
push
cmp
add
push
fdiv
outsb
pop
ret
movsl
mov
call
pop
pop
jmp
loope
pop
xlat
and
lret
std
ljmp
fcmovu
hlt
fadds
xchg
pop
mov
ret
cmpsb
das
in
sub
mov
insl
jg
outsb
mov
mov
int3
jae
dec
xchg
sti
dec
hlt
jle
adc
imul
mov
push
icebp
dec
fisubs
add
mov
rorb
mov
inc
cmpsl
lcall
arpl
push
cmp
push
loopne
dec
pusha
sbb
adc
add
jg
mov
xchg
ffree
ss
out
mov
insl
sbb
sbb
mov
jns
xchg
in
dec
in
movsl
jnp
out
divl
lods
push
fwait
lret
fistps
adc
cmp
push
idivb
mov
fdivl
push
shl
xchg
in
icebp
pop
push
mov
jmp
dec
cmp
mov
sub
sub
cmpsb
cwtl
mov
jno
dec
sbb
push
pop
mov
incl
jp
push
add
add
loopne
fldl
mov
push
stos
int3
mov
bound
call
out
xlat
nop
add
in
aas
mov
mov
inc
sbb
mov
orb
lcall
sbb
inc
mov
outsb
and
xor
inc
insl
mov
sbb
cltd
mov
call
mov
dec
dec
sub
mov
inc
mov
movsb
lods
mov
sub
sub
in
call
and
gs
ljmp
addb
jge
inc
sub
jmp
push
movsl
movsl
popf
mov
xchg
data16
nop
ds
in
test
pushl
out
les
das
cmpsb
mov
dec
movsl
pop
jo
bound
ror
xchg
xor
pop
adc
pop
jb
insb
xchg
ss
subb
sbb
mov
pushl
sti
imul
call
xor
pop
insb
mov
fisubrl
int3
cmp
mov
repnz
out
js
imul
jb
mov
mov
adc
shl
andl
cld
pushl
pop
mov
sub
push
dec
in
jp
sub
jmp
sar
cmp
lods
dec
lock
jmp
xor
faddl
jecxz
or
add
nop
addr16
nop
fidivrs
jne
in
xchg
sbb
jmp
pop
sub
out
xchg
adc
jb
cmp
fldcw
jp
stos
mov
cltd
das
xchg
mov
xchg
leave
mov
arpl
ljmp
sbb
je
mov
cmpsb
or
jmp
mov
stc
iret
mov
shll
mov
outsl
movsl
das
xor
shl
lods
and
jmp
aad
jns
pop
sti
jle
sub
adc
add
stc
inc
lret
push
push
sub
jmp
pushl
mov
cmc
jo
push
fs
test
data16
mov
lods
mov
mov
inc
addr16
les
xchg
popa
xchg
shl
outsl
mov
sbb
xchg
sub
mov
pushl
lahf
cmc
imul
and
dec
dec
xor
clc
jmp
mov
in
iret
xchg
int
gs
fmuls
cmp
call
xchg
jmp
jle
popf
or
inc
andl
push
out
in
pushf
push
cmp
test
out
ja
pop
jno
jl
imul
push
lret
insb
and
into
sbb
inc
fldt
je
and
mov
sbb
into
mov
mov
or
aad
mov
jmp
pushl
mov
sarl
dec
sub
loop
inc
inc
add
xchg
pop
adc
call
insl
das
sub
test
dec
cmpsb
loopne
sar
mov
cld
push
sub
xor
enter
inc
mov
cld
dec
fdivrs
decl
rcll
repz
fcomps
mov
jg
insl
mov
in
lcall
pop
test
and
outsl
clc
pop
mov
out
std
sub
jmp
push
imul
inc
push
mov
cmp
incl
mov
mov
sub
out
jecxz
stc
and
idivb
jmp
outsl
or
cs
mov
jge
addr16
out
mov
inc
cmp
inc
mov
fildl
insl
cs
cmpsb
jmp
subb
xor
scas
xor
inc
push
ljmp
sbb
das
incl
mov
pop
icebp
xor
mov
mov
gs
incb
decl
into
pop
mov
mov
std
imul
jne
mov
cli
call
sub
ljmp
sarb
and
data16
in
div
lcall
xchg
add
movsb
push
sub
adc
lock
mov
push
ss
mov
adc
clc
push
pop
xor
sbb
cmp
popf
pop
enter
add
ljmp
sub
adcl
push
movl
ret
xchg
jg
pop
push
sar
aaa
cld
ljmp
pop
fabs
out
mov
cs
inc
sbb
and
imul
xchg
decl
mov
or
inc
lds
xchg
jmp
incl
aad
iret
push
xchg
push
jge
pop
into
jns
and
inc
outsl
mov
decl
push
xchg
jb
leave
aam
test
fwait
jg
ret
test
jmp
cmpsl
mov
decl
cmpl
mov
sbb
les
jge
sub
xor
jno
sbb
cmpsl
xchg
adc
add
and
mov
pop
push
sbb
test
stc
mov
xchg
fisubs
dec
cli
xchg
sahf
dec
ss
adc
pop
push
rorb
adc
jg
ljmp
jle
mov
sysexit
loope
ljmp
sahf
mov
or
mov
xchg
sub
jge
das
xor
xchg
pop
pop
jns
repz
jo
cmpsb
xchg
dec
ja
xor
xor
adc
pushl
cld
shlb
arpl
pop
lods
lods
std
mov
pop
bound
imul
cmp
or
in
mov
int
pop
enter
out
dec
pop
lea
aaa
or
incl
fs
mov
fcoml
gs
lea
outsb
stos
cld
leave
jmp
pushf
cmp
inc
mov
decl
lods
sbb
pusha
movsl
and
ret
adc
jns
pop
jl
shrb
mov
push
xchg
jo
sub
test
std
push
sar
ljmp
int
daa
add
lods
nop
das
adc
adc
scas
imul
dec
std
adc
call
cmpsl
pop
loopne
shr
lret
bound
and
pop
sti
xchg
lret
call
mov
jmp
xchg
mov
sub
cld
jl
pop
repnz
fnstsw
inc
out
pushl
sbb
mov
mov
pop
leave
ss
test
jno
jecxz
xchg
out
pop
inc
inc
and
call
mov
inc
fadds
cmpsl
inc
call
pop
sub
movsb
mov
jae
xor
in
jmp
pop
iret
jnp
jmp
jno
nop
push
std
jl
icebp
cmpsb
fwait
dec
xor
mov
mov
lods
test
jbe
incl
jbe
sbb
push
jno
fstps
jmp
mov
sub
inc
or
sub
lcall
inc
lea
shll
xor
fs
add
fadd
pop
stos
scas
adc
add
ljmp
inc
test
dec
jnp
loop
notl
mov
mov
push
sub
addr16
popa
add
mov
es
pop
fidivrl
scas
ljmp
sub
add
addr16
out
mov
aam
mov
out
xchg
fcomip
ljmp
mov
pop
daa
je
cs
pushf
lock
decl
or
dec
aad
std
push
hlt
js
mov
loope
pcmpeqd
sub
lods
fucomi
decl
icebp
sub
lahf
lods
hlt
in
gs
mov
sbb
test
xor
xor
jg
call
xchg
ret
adc
push
sbb
inc
adc
cld
pop
add
arpl
inc
out
mov
ljmp
vmovupd
mov
dec
cmp
in
mov
mov
jb
scas
inc
mov
decl
jbe
xor
emms
sub
sahf
roll
push
les
fs
jg
and
or
mov
cld
in
cmp
out
dec
jp
xor
mov
call
movsl
gs
loopne
inc
push
ret
mov
add
push
lods
xchg
incl
dec
enter
gs
ret
int
cli
test
dec
arpl
jmp
sahf
inc
test
sarb
cmp
fsubs
cltd
sbb
pop
sti
aad
jnp
call
mov
notl
ljmp
movsb
jp
jne
sahf
sahf
jns
das
sar
mull
loope
repnz
mov
dec
dec
fidivrl
mov
stc
je
sahf
jl
leave
loope
out
xor
pop
push
or
jmp
pop
fimull
inc
mov
push
out
testb
int3
in
loop
add
xlat
sar
decl
sub
mulb
arpl
iret
mov
pushl
push
imul
scas
sub
pushl
jns
push
neg
pushf
jo
or
ds
js
mov
sub
aas
cwtl
fistpll
insb
jge
pop
movsb
pusha
adc
mov
lcall
pop
outsb
test
std
pop
sbb
cmp
cwtl
xor
mov
aaa
mov
jbe
pop
cld
or
jmp
sbb
or
xchg
mov
insb
es
sahf
jp
mov
insb
pop
dec
clc
iret
mov
imul
jnp
fisubl
and
cmp
ljmp
std
pusha
xchg
cmpl
jg
and
es
aam
cwtl
sub
mov
inc
stc
sar
sbb
dec
xor
imul
lock
loop
jg
in
and
mov
scas
ss
scas
scas
xor
lods
aam
push
cmp
cmpsl
pop
fwait
xchg
in
cmpsb
daa
out
lods
and
shrb
xor
mulb
int
and
pushl
mov
mov
xchg
inc
xlat
cmpsb
loope
leave
shll
test
mov
stc
mov
decl
xchg
dec
xchg
sub
insb
mov
pop
jne
mov
inc
mov
out
faddp
mov
mov
sbb
mov
scas
jno
mov
sub
gs
cli
imul
ret
xchg
xor
cli
xor
pop
cmpsb
sbb
xchg
xchg
mov
mov
fwait
add
xchg
and
pushf
nop
push
or
ljmp
ss
adc
movsl
jp
jle
js
add
int
mov
fs
das
shlb
in
pop
arpl
jns
push
add
iret
lods
push
imul
into
shrl
gs
aas
loop
jg
in
lods
fsubs
inc
clc
call
bound
lods
mov
mov
xchg
aas
mov
testb
shll
lcall
inc
ret
fwait
arpl
dec
mov
jbe
xchg
and
xlat
sbb
mov
push
sub
pop
dec
dec
clc
cmp
lret
test
out
loope
mov
js
decb
jnp
jmp
cmp
clc
sub
and
pop
mov
xchg
xchg
push
ja
test
andb
jb
fwait
adc
adc
jae
sbb
fwait
push
sub
cltd
xor
pop
outsb
add
fs
push
cs
enter
leave
jne
and
call
dec
imul
cmpsl
jg
xchg
mull
stos
data16
cmp
decl
test
dec
out
mov
adc
xor
daa
push
jne
sub
call
out
push
ficoml
jbe
cmpsb
mov
pop
shll
out
mov
and
ljmp
dec
mov
push
cmp
push
or
adc
test
cmp
ljmp
imul
aas
loope
dec
xchg
xlat
dec
in
inc
or
cmpsb
in
mov
xor
dec
call
ds
push
mov
outsb
mov
push
test
test
aad
int
fcoml
ja
iret
mov
jle
cmpsl
mov
repz
rolb
aad
pushl
mov
jne
xchg
push
gs
inc
fmul
mov
inc
push
cld
mov
mov
mov
lcall
xor
inc
fsubl
dec
and
xor
sbbl
pop
fldt
sub
addl
inc
cli
dec
in
shl
push
and
pusha
jg
cmp
sbb
or
mov
add
push
jecxz
dec
test
sbb
push
je
call
pop
dec
pusha
jecxz
mulb
mov
mov
sti
and
ds
ret
jnp
daa
inc
stos
es
pop
mov
lods
in
adc
jne
jmp
jge
push
add
jno
mov
es
das
in
sti
mov
dec
add
jns
mov
and
dec
std
mov
and
adc
inc
shl
xchg
pop
and
mov
lcall
inc
pop
in
cltd
ficoms
lock
scas
incl
dec
aam
scas
and
push
mov
push
mov
inc
xchg
je
scas
xor
int
loopne
or
mov
adc
in
pop
loope
aam
pop
push
adc
adc
mov
jmp
test
cwtl
bound
xchg
cwtl
sbb
jmp
call
pop
imul
mov
mov
cli
or
iret
adc
in
sbb
incl
sbb
mov
hlt
stos
fadds
sbb
sbb
std
adcb
movsb
mov
fimuls
call
mov
mov
xor
sbb
dec
data16
ds
inc
stc
adc
fwait
lret
cld
aas
adc
icebp
fwait
inc
pop
dec
add
dec
lds
mov
jno
or
jmp
ljmp
xchg
mov
push
push
aaa
hlt
pop
addr16
aas
inc
sub
lahf
pushf
mov
jecxz
or
aam
mov
shl
and
sbb
mov
mov
pushl
cmc
popf
hlt
add
imul
stc
or
shll
enter
rcrl
in
cmc
xchg
pushl
add
pusha
add
adc
cltd
inc
ds
aam
aad
aaa
and
loop
fstps
xor
adc
xor
pushf
jg
xchg
adc
mov
adc
pop
add
push
inc
sbb
add
nop
jno
aaa
test
cmp
adc
jp
cmpsl
jl
cmpsl
adc
mov
pop
mov
adc
insl
call
cld
ljmp
nop
test
cmp
sbb
mov
insb
ret
adc
sti
sbb
push
aad
add
pop
fwait
push
mov
sbb
movsl
incl
mov
xchg
cli
adc
cmp
or
pop
div
insl
test
jg
sbb
adc
xchg
push
fcom
ss
repnz
ljmp
sbb
xchg
add
jmp
insl
jnp
repnz
mov
jnp
ss
data16
clc
ljmp
push
xorl
nop
inc
movsl
fistpll
sbbb
cmp
int3
fcompl
inc
call
nop
movsb
es
mov
ja
addr16
jle
dec
stos
xchg
push
dec
cmp
les
inc
xor
pop
inc
jmp
lock
inc
repnz
repz
xchg
hlt
pop
xor
mov
push
jns
data16
ljmp
cs
test
out
or
sub
into
push
jle
mov
mov
clc
movsl
cmp
mov
cli
jle
adc
roll
fisttps
sar
movsl
push
add
or
scas
notl
jle
add
ljmp
call
int3
mov
fiadds
clc
rcrb
dec
sub
cltd
or
sbb
loopew
jl
aam
xchg
sub
jmp
mov
push
push
aad
xchg
stos
or
or
mov
xchg
jl
ds
push
adc
pop
popf
fwait
and
ret
mov
ljmp
or
xchg
shl
or
mov
push
hlt
pop
ret
test
in
push
xchg
pop
in
mov
pop
adc
mov
ss
mov
iret
mov
mov
pop
stc
push
out
push
lcall
xchg
and
daa
adc
cwtl
lods
adc
lods
jnp
mov
decl
rorb
test
push
xchg
inc
mov
cmp
lods
add
das
sar
add
ret
add
dec
push
ljmp
imul
dec
fstps
cltd
outsl
cli
or
pop
mov
je
and
outsb
adc
sbb
fcomip
lcall
pop
shlb
pop
xor
push
sbbb
mulb
sbb
rorb
decl
add
outsb
icebp
jno
cmp
pop
jne
mov
cld
pop
movsb
xchg
call
mov
cmc
rorl
jmp
repnz
imul
xchg
jmp
cli
xor
jg
or
clc
sub
push
test
jns
sub
lcall
pop
push
jle
push
stos
xor
jle
mov
idivb
in
sbb
jb
inc
insl
ljmp
adc
xchg
gs
gs
loope
mov
inc
or
pand
jg
sbb
xor
mov
push
fs
or
add
cmc
jmp
push
pop
test
decl
push
xor
mov
xlat
ficoml
inc
pop
mov
scas
arpl
ret
or
icebp
mov
sti
inc
xchg
lods
mov
cmpsl
fnstenv
mov
loope
xor
or
sub
out
clc
cwtl
in
jmp
xor
popa
push
mov
ljmp
lods
inc
movsb
adc
xor
push
lods
shlb
js
mov
aam
dec
adc
rcr
mov
loopne
ljmp
cmp
icebp
scas
sub
sub
cmp
xchg
mov
mov
pop
cli
fdivrp
dec
dec
add
jp
clc
stc
xor
incl
or
push
dec
mov
icebp
pop
mov
fmull
add
inc
stc
push
out
cwtl
ss
cmp
push
push
mov
add
xor
mov
add
and
dec
jbe
les
xchg
rol
addr16
call
push
pop
into
andl
dec
popf
xor
hlt
stc
adc
pop
js
out
adc
ss
pop
cmc
decl
dec
mov
jp
loop
add
and
lock
xor
jbe
mov
aas
push
pop
gs
pusha
ficompl
movsb
adc
add
faddl
stos
enter
push
inc
fwait
inc
aad
mov
bound
test
adc
in
dec
ret
call
lcall
ret
jecxz
mov
rcr
stc
lods
jl
iret
pop
repz
adc
mov
addr16
mov
mov
mov
jmp
push
mov
in
add
in
sub
mov
and
cmpsb
hlt
pop
add
dec
inc
xor
jmp
jae
mov
ja
stc
adc
fucomip
stc
mov
bound
aad
jge
sub
jmp
inc
andl
into
sub
push
cmp
test
iret
test
mov
cld
incl
ljmp
or
mov
pop
lahf
sbb
pop
fdivrl
xor
das
pop
movsl
dec
orb
xchg
outsb
pop
test
daa
mov
add
ljmp
mov
cmp
sub
dec
jmp
mov
inc
loop
jge
xchg
fdiv
ljmp
das
pusha
xchg
js
cld
push
inc
sub
rcrl
das
push
hlt
jbe
dec
lahf
mov
dec
popa
inc
jae
ljmp
add
xchg
dec
cld
add
or
or
std
add
cmp
and
inc
sti
sti
insl
add
stc
mov
jns
out
or
push
jg
scas
or
call
cld
cmp
lahf
fstps
ret
and
pop
pop
inc
push
add
popa
jge
dec
inc
inc
dec
lahf
std
mov
push
popf
pop
push
jle
jp
negb
xor
inc
dec
pushl
mov
clc
mov
out
loop
cltd
int
mov
push
mov
pop
inc
jg
movq
call
sar
rorl
aaa
jp
addr16
gs
shrb
leave
sahf
lods
mov
dec
adc
jp
fs
and
icebp
adc
push
xchg
add
adc
icebp
incl
hlt
and
and
mov
aaa
ljmp
push
pop
xorb
push
mov
dec
inc
mov
mov
cmc
adc
test
lea
test
in
mov
sbb
lcall
dec
stos
push
cmp
ds
cmp
lret
into
je
inc
scas
and
dec
insb
decl
adc
mov
in
or
xchg
sub
mov
sub
decl
adc
mov
dec
ret
incl
push
sbb
lret
popf
lret
jg
mov
or
incb
movaps
xchg
or
fidivs
mov
nop
std
sbb
lea
add
mov
repnz
inc
test
mov
cmp
negl
xchg
enter
imul
sub
sub
ljmp
fwait
mov
mov
ja
or
movsl
pop
hlt
jne
push
mov
call
cld
movb
leave
sahf
outsl
add
in
adc
bswap
cli
addr16
dec
pop
xor
fadds
call
sti
adc
jbe
jb
sub
jae
jo
sbb
xor
cli
and
clc
enter
ror
mov
icebp
int3
dec
shrb
push
adc
jg
das
and
add
inc
mov
pop
pop
jg
pop
cli
push
cmp
pop
ljmp
into
sti
stos
mov
cltd
dec
out
inc
pop
leave
fs
outsl
pop
popa
push
mov
jg
lcall
into
sarb
mov
add
psraw
mov
scas
lock
clc
push
idivb
loope
dec
add
mov
xor
sahf
add
pop
jno
adc
std
nop
cwtl
mov
pop
and
mov
pushl
ljmp
add
movb
xchg
push
xchg
jle
pop
cld
in
sbb
lret
and
cmp
xor
ljmp
and
lcall
mov
int3
clc
jb
fdivl
imul
movsb
adc
xchg
fcoms
decl
pop
add
loope
sbb
jbe
jnp
repnz
jnp
ret
ret
xor
inc
push
dec
mov
loope
mov
shl
dec
lahf
cvtps2pi
xchg
sti
mov
out
scas
cmp
arpl
incl
aas
ljmp
gs
mov
popa
pop
call
out
mov
adc
adc
fisttpll
xchg
nop
jg
and
lcall
insb
inc
shl
fildl
ret
push
mov
cmp
sub
lcall
mov
sbb
pop
mov
arpl
or
test
call
jmp
jl
bound
lea
push
decb
call
add
out
cmp
or
xchg
pop
adc
xor
andl
jg
push
loopne
icebp
shr
inc
adc
cli
incl
mov
sahf
cmp
imul
xchg
or
push
shr
mov
pop
adc
pop
ficomps
mov
test
mov
repnz
iret
fidivs
xor
mov
adc
ljmp
fstl
gs
sub
mov
mov
xorl
arpl
or
pop
sahf
lcall
jb
incl
xor
repz
xchg
pusha
mov
pop
cmp
and
and
pop
mov
adc
mov
dec
xchg
loop
mov
lcall
mov
sub
je
lods
mov
cmpsb
dec
fmul
xor
aad
mov
mov
mov
sbb
loope
outsb
loop
ljmp
or
cmp
and
stos
and
into
cmpsl
mov
inc
and
jmp
pusha
or
lds
call
in
ljmp
cwtl
call
xchg
xchg
decl
stc
mov
mov
jno
int
aam
je
push
insl
outsb
cmp
test
or
or
push
inc
mov
mov
addr16
fsubr
lcall
imul
int3
xor
mov
icebp
jl
dec
fs
push
mov
ljmp
sbb
mov
aad
push
adc
jb
out
mov
or
fs
sbbb
sub
call
mov
movsl
and
insb
jnp
lret
xlat
pop
mov
stos
lret
inc
js
icebp
shlb
inc
fst
jmp
xchg
jne
mov
out
rorb
mov
sub
and
jmp
xchg
out
push
js
push
aas
add
shll
pushf
dec
test
pop
push
sub
and
ret
mov
mov
sub
fwait
xor
xchg
pop
push
and
ljmp
xchg
call
jnp
fisttpll
cs
stos
hlt
sbb
cmp
imul
adc
incl
in
xlat
leave
icebp
adc
cld
pop
faddl
filds
push
jecxz
xchg
sbb
jne
shll
cwtl
mov
adc
ret
pop
pop
notl
test
xor
sti
mov
aas
inc
imul
xor
fildll
mov
stos
cmc
test
aam
pop
adc
in
int
enter
pop
xchg
shl
jl
movsb
call
pushf
int
fstl
inc
sbb
mov
clc
xor
pushf
loopne
call
orl
mov
pop
cmp
jo
dec
and
inc
mov
jb
dec
push
mov
xchg
push
and
pop
and
lahf
cld
js
lret
sarl
nop
adc
dec
sub
push
lds
cltd
mov
inc
test
icebp
jb
inc
inc
and
clc
in
into
cmc
xchg
jnp
lods
icebp
push
sbb
jno
mov
ja
scas
nop
cmc
xchg
loopne
mov
icebp
xchg
ss
jle
decl
jno
daa
xchg
dec
dec
arpl
xor
push
xor
je
scas
rcr
cmc
incl
imul
sar
fcomps
mov
mov
pop
dec
fmull
shlb
test
fmull
dec
arpl
and
incl
add
jg
push
adc
inc
insl
call
add
cld
enter
test
cwtl
jp
and
test
jae
stos
xor
loopne
fcoml
lahf
jae
pop
xor
sub
test
mov
incl
test
sti
shll
jg
outsl
mov
outsb
add
mov
cmp
in
xchg
xor
lahf
jbe
push
cld
cmpsb
lret
xchg
lret
sub
and
das
cwtl
ljmp
int
call
cmp
movsb
rcll
pop
cli
sti
jmp
jne
add
or
inc
sub
mov
mov
imul
mov
enter
fbstp
lahf
mov
mov
xchg
lds
loopne
jle
in
sub
call
add
xchg
xor
iret
popa
mulb
xchg
pop
incl
stos
inc
mov
mov
ret
loop
mov
mov
jmp
fistpll
fdivs
inc
sub
xor
xor
inc
push
jae
and
mov
das
clc
aaa
addb
jbe
sub
and
addr16
cwtl
popa
jo
push
or
rclb
pushl
or
insb
cmp
jmp
mov
push
in
and
fldenv
and
push
outsl
fnsave
outsl
decl
aaa
lcall
jo
nop
cmp
push
rcrb
push
mov
jmp
xor
pusha
or
mov
push
and
add
insl
ret
jns
pop
cmc
decl
adc
int3
fs
cmp
mov
shl
test
lahf
mov
cltd
adc
in
dec
mov
movsb
insb
pop
ja
idivl
pxor
push
sbb
jle
lcall
leave
jo
mov
pop
lfs
jo
mov
cmp
dec
ret
lcall
and
sbb
out
mov
add
push
cwtl
addb
in
xchg
sub
das
clc
jg
cmp
ja
push
xor
mov
setle
loope
or
lea
test
xchg
cmc
mov
inc
push
sub
push
dec
cld
pop
push
movsl
mov
jmp
bts
inc
push
out
mov
xchg
jae
cmpsb
test
push
lods
lret
lcall
incl
dec
call
test
add
adc
push
rorl
leave
sahf
jle
mov
xchg
jg
ljmp
and
ret
and
adc
xchg
or
jecxz
lcall
add
mov
js
cmp
in
xchg
jp
dec
cmp
mov
fbstp
or
mov
pushl
mov
sub
jl
repz
pop
jae
sbb
subl
dec
fiaddl
inc
bt
push
nop
fnsave
divb
adc
sub
jno
addr16
and
ja
jmp
adc
fistps
jmp
jge
xchg
fwait
aad
imul
enter
mov
call
mov
jl
jae
iret
mov
icebp
mov
addr16
repnz
push
enter
add
ljmp
subl
dec
sub
ss
sbb
push
pushl
into
dec
adc
scas
es
adc
fdivs
data16
dec
shrb
jo
je
cld
inc
cmpb
sbb
adc
in
lea
icebp
ds
ljmp
pop
int3
jne
rclb
sbb
jnp
jb
dec
in
sbb
dec
adc
mov
or
pushf
or
test
mov
test
fidivl
inc
outsl
xor
aas
fwait
pop
sub
jg
and
mov
inc
adc
pop
xor
incl
test
shrl
xchg
cmp
jg
pop
push
fwait
sub
mov
sar
push
les
mov
lock
sahf
push
or
aad
mov
xorb
stc
popa
push
jbe
cltd
in
call
outsl
es
std
in
repz
xchg
in
mov
pusha
and
cld
stc
jp
sahf
mov
mov
loop
decl
mov
flds
fcomi
cwtl
imul
int3
or
ret
pop
xchg
mov
test
mov
mov
repz
loope
insb
outsb
push
or
push
imul
ds
sti
loop
lcall
sti
or
not
ret
out
cltd
std
xchg
push
inc
out
loopne
lret
jmp
mov
cmp
outsb
jp
push
inc
push
or
cli
dec
mov
inc
mov
and
mov
in
mov
pusha
push
push
mov
adc
icebp
mov
fsubrp
out
pop
inc
dec
mov
cmpsl
out
fistps
rorl
cli
mov
lahf
jno
cmp
or
add
xor
push
je
mov
push
ljmp
cli
push
imul
add
push
or
jb
cwtl
stc
sahf
push
push
pop
in
fimuls
call
and
sbb
inc
inc
sbb
sub
jp
aad
notl
ss
inc
jb
iret
loop
sbb
sbb
aad
fildll
sub
mov
call
call
out
pop
popf
or
and
xor
ret
sti
inc
inc
imull
rcl
cmp
mov
cld
sti
cli
lcall
xor
mov
pop
jnp
xchg
cld
sbb
adc
loop
ja
incl
cmc
xor
cmp
mov
test
repnz
pushl
leave
pop
sbb
push
call
xchg
sub
movsb
or
fs
in
rcrl
cmp
incb
pop
loop
dec
into
push
fs
cld
icebp
aas
es
outsl
das
mov
sub
jnp
inc
sbb
dec
cld
movsl
fmull
stos
inc
mov
jae
cld
dec
or
sbb
and
pusha
cmp
push
jmp
lcall
in
loope,pn
xor
int
aaa
ljmp
call
fists
pop
dec
jns
mov
fdivs
pop
movsl
inc
xor
pop
pop
sbb
sbb
ljmp
mov
adc
xor
add
lods
lcall
lds
int3
in
and
adc
int
pop
stos
adc
push
xor
and
adc
roll
lcall
mov
inc
push
cs
gs
dec
in
int3
dec
out
mov
out
sbb
js
scas
ss
adc
cmp
adc
ljmp
xor
xor
bound
pop
sub
inc
jbe
lcall
xchg
push
test
push
xchg
or
mov
rorl
loopne
aam
xchg
push
incl
dec
dec
loope
addb
fldt
sbbl
cltd
je
sbb
inc
les
sbb
ljmp
in
lcall
sub
mov
test
test
and
lcall
cmc
mov
inc
adc
aaa
jle
cmc
mov
and
jo
outsb
inc
mov
inc
adc
xor
push
pop
add
mov
dec
test
jle
clc
add
xchg
xchg
ret
test
push
adc
ljmp
fdiv
sbb
test
int3
clc
mov
dec
dec
add
ljmp
cmp
pop
call
fsubrs
in
push
mov
ds
xlat
es
std
mov
lcall
cld
and
jnp
das
in
clc
pusha
cmp
rcll
dec
mov
call
enter
dec
sti
ret
jno
xlat
les
jbe
or
mov
dec
shl
pusha
xchg
cmp
fwait
add
adcb
scas
jmp
movlps
mov
mov
loop
fidivrs
int
fucomp
or
lock
daa
addr16
adc
and
pop
pop
icebp
xor
aad
call
iret
outsl
cli
and
cmpsl
jno
daa
test
lcall
inc
mov
daa
stos
sti
sbb
aam
push
aad
jle
sub
enter
xchg
jmp
testb
sbb
ss
dec
adc
xchg
jmp
jmp
rcr
incl
imul
add
xor
outsl
iret
sbb
and
xor
xchg
jp
and
inc
movb
pop
insb
jp
out
addl
xor
adc
push
sar
xlat
mov
jno
ljmp
inc
je
dec
jo
jle
lock
rol
xchg
popf
popf
add
insl
push
pop
gs
mov
jmp
in
mov
out
test
adc
inc
sbbl
jbe
mov
sbb
pop
inc
pop
add
mov
mov
adc
xchg
or
mov
mov
push
fnstsw
incl
inc
add
xor
adc
push
dec
das
std
inc
or
out
test
push
jns
dec
sbb
and
push
daa
push
sbb
imulb
jg
xchg
adc
ret
xchg
and
shll
jmp
pushf
sub
lcall
dec
loop
sbb
mov
jae
add
sub
mov
jns
stos
pop
loop
icebp
dec
adcb
add
adc
int
pop
xor
dec
jp
pushl
jo
scas
jmp
inc
js
push
jl
ds
push
adcb
add
pop
loopne
out
jb
jns
nop
jg
push
cmp
pop
nop
mov
xchg
testb
jle
sub
inc
sbb
mov
pop
leave
mov
xchg
ljmp
mov
sub
jmp
dec
mov
xor
cwtl
mov
jns
dec
pushf
pop
xor
adc
popa
mull
pop
jmp
pusha
bound
jmp
inc
fnstenv
xor
rcl
arpl
pop
das
mov
cli
data16
jmp
mov
or
ds
mov
int
mov
leave
daa
xchg
inc
push
cs
lcall
call
dec
test
jl
or
push
mov
xchg
int3
xor
adc
mov
cmp
adc
jmp
pop
sub
sbb
popf
shll
mov
lods
das
jp
mov
dec
adc
push
mov
inc
push
sub
into
xor
adc
movsb
mov
or
call
aas
mov
xchg
add
mov
sbb
xchg
and
xchg
fwait
jnp,pn
das
lahf
add
movsl
in
test
popa
push
jnp
jne
sub
pop
xor
mov
test
notl
scas
jne
bound
ljmp
pop
inc
mov
sbb
sub
cmpsb
loop
pushl
into
hlt
fdivp
sbb
sbb
or
lcall
mov
lods
add
aad
popl
jnp
lods
divl
imulb
repz
mov
push
add
sub
dec
mov
mov
mov
aaa
xor
out
clc
inc
and
adc
xor
cli
je
inc
and
movsl
stos
jecxz
inc
imul
pop
mov
aam
adc
xchg
test
in
aam
push
mov
sti
jl
lcall
les
xor
pop
dec
loopne
cmp
add
inc
in
pop
inc
movsl
popf
loop
mov
pushl
adc
in
ret
and
xchg
dec
cmovge
mov
sbb
sti
sub
sbbl
and
mov
orl
xchg
lret
jnp
incl
push
sbb
fcoml
xor
ret
xchg
sub
ficoms
mov
inc
xor
jae
mov
scas
mov
repz
sti
decl
aaa
add
imul
mov
shlb
jbe
in
fwait
dec
jl
adc
fimuls
ja
hlt
dec
testl
fisubs
xchg
int
imul
decl
dec
add
aad
cmp
pop
adc
or
movsl
sub
push
or
call
notl
adc
inc
dec
inc
jg
dec
data16
mov
and
in
incb
xchg
incl
cwtl
or
iret
push
test
inc
in
push
push
aam
icebp
ja
mov
je
fisttpll
xchg
fnsave
cld
les
mov
ljmp
pop
pop
outsb
cmpsb
mov
push
ja
adc
cmp
shlb
adc
movsl
mov
rcll
lret
jmp
xor
lahf
stc
cmc
adc
lods
fwait
loopne
lcall
in
je
shll
xchg
movsb
xlat
lcall
push
pop
and
fs
pop
jbe
adcl
and
es
jg
scas
add
aad
es
cmp
sub
negl
pop
ss
jae
xorl
incl
jle
cltd
and
dec
xlat
pushf
xchg
and
hlt
test
jo
cmc
in
push
cmp
decl
pop
sub
xorb
cmpsl
popf
jmp
dec
test
fdivrs
cwtl
add
nop
push
ja
push
cmpsl
fsubrl
jnp
xchg
xor
jbe
cmpsl
xor
into
inc
xor
repz
cli
lcall
testl
arpl
sub
adc
or
call
push
mov
inc
loop
inc
push
add
mov
pop
inc
mov
pusha
pop
sahf
and
add
or
cwtl
jl
jb
mov
mov
sahf
lods
aad
daa
xor
xor
aas
cmp
xchg
enter
xrelease
pop
aas
add
pop
sbb
test
jmp
pusha
in
dec
icebp
pushl
fidivrl
sub
mov
test
add
mov
das
cmp
jbe
fisttps
out
jmp
call
out
push
adc
popa
xor
test
mov
addr16
rclb
mov
aad
ret
movb
push
clc
cmc
inc
in
inc
xor
xchg
addb
push
sbb
jg
ficomps
lds
mov
push
incl
mov
cwtl
push
or
jecxz
cmp
dec
add
call
movsb
into
pop
scas
mov
mov
cltd
or
iret
iret
mov
mov
push
pop
lock
call
cli
mov
push
mov
mov
jb
imul
pushl
call
lds
loop
jnp
insl
ret
movsb
or
jl
mov
jg
dec
scas
xchg
push
orl
stc
call
in
dec
push
outsb
cltd
push
sub
sar
mov
pop
inc
shll
je
imul
sahf
jno
ret
xchg
loop
fdivl
decl
ljmp
cwtl
ja
pop
arpl
push
sub
clc
xchg
sub
cmp
pop
adc
call
pop
ret
mov
ret
inc
mov
and
enter
jae
adc
dec
sbb
jb
outsb
or
mov
nop
sti
mov
pop
sbb
sbb
insl
pop
jmp
mov
mov
aaa
xorb
cmp
lods
das
adc
fidivrs
cld
aaa
pop
fdiv
movsl
incl
hlt
pop
shlb
xor
jp
dec
lret
jp
pop
sbb
push
ret
test
jo
incl
and
add
lea
mov
push
mov
pushf
jne
pop
movsb
dec
fiaddl
scas
jmpw
jmp
mov
cmp
aad
xor
mov
jo
jg
and
mov
dec
xchg
push
fimuls
std
mov
xchg
insl
adc
and
mov
mov
jg
je
out
test
mov
jecxz
inc
xor
or
int3
sbb
and
add
mov
fs
cmp
stos
je
subl
cmpl
sahf
gs
rcr
inc
cmpl
adc
mov
cmpb
loop
xchg
pop
inc
mov
movsl
mov
repz
jge
jmp
pusha
pop
sbb
pop
mov
pop
xor
push
out
lds
pushl
sbb
cmpsb
cmp
bnd
dec
scas
jns
adcb
mov
mov
and
inc
lcall
pop
jo
cmp
rclb
ss
fcmovbe
rcl
ljmp
andb
jge
cli
inc
aam
mov
aam
lds
mov
movsl
xchg
scas
add
inc
movsb
popf
jl
xchg
ljmp
clc
push
outsl
jp
je
xchg
pop
ljmp
mov
or
hlt
add
clc
cmp
cwtl
idivb
jmp
sbb
pop
xlat
lods
xchg
adc
sar
decl
xchg
xchg
mov
push
mov
je
xchg
dec
mov
push
cld
test
xor
popa
xchg
lock
ljmp
clc
pushl
push
insl
cli
in
pop
cmp
aaa
loopne
xchg
jle
xor
jo
mov
fcomip
pushl
push
sti
or
movsl
in
ljmp
mov
lret
insl
xor
sahf
xorb
inc
repnz
cmp
mov
mov
sub
dec
cmp
cmp
xchg
lea
cld
les
xchg
test
outsl
xorb
cmp
jbe
lcall
push
hlt
outsl
out
cmp
lret
pushl
sub
stos
in
add
cmpsl
sub
mov
adc
leave
and
xchg
ljmp
jge
ss
sub
enter
lahf
dec
xchg
push
sbb
push
sub
mov
mov
lahf
xchg
je
daa
mov
inc
jo,pn
fisubrl
ds
dec
xor
mov
mov
mov
out
cmp
cltd
mov
inc
stos
adc
incl
pop
sbb
into
sub
jp
mov
inc
insl
push
xor
clc
jno
dec
or
ljmp
in
mov
js
inc
ljmp
stos
add
push
mov
mov
out
pop
inc
jns
fsts
mov
sub
jmp
jno
jbe
fnclex
xor
inc
adc
add
and
dec
xchg
sub
movsl
mov
or
mov
or
lcall
les
fimull
out
jno
and
aas
fiadds
fnsave
lods
jbe
sbb
fiadds
imul
push
faddp
decl
fdecstp
rcrb
mov
jmp
jle
lret
push
inc
or
fcompl
nop
lcall
ljmp
sub
gs
test
fld
push
inc
cmp
pushl
lcall
xorl
or
mov
mov
sbb
xor
push
dec
push
cli
add
push
stc
pop
mov
jl
push
and
ja
mov
jg
decl
mov
sub
out
xchg
pop
int
rcrb
mov
mov
jl
ljmp
jnp
lock
xchg
pushf
imul
addl
cmc
or
decl
gs
pop
lret
mov
hlt
mov
lahf
jecxz
ljmp
sbb
push
aaa
dec
dec
inc
push
mov
lods
cmp
sar
lcall
cmpsl
cs
lret
cmpl
and
xchg
pop
lcall
aaa
inc
mov
loopne
or
xchg
jnp
fisttpl
mov
and
jmp
pop
mov
dec
in
sbb
mov
jle
add
xchg
jp
sub
stos
inc
sahf
mov
fcomip
fsts
xchg
mov
or
iret
xchg
pop
stos
dec
lock
pushl
std
pushf
dec
cwtl
inc
xchg
mov
or
sub
xchg
jno
ja
jne
loop
dec
cmpsb
insb
ss
call
mov
push
scas
outsl
add
inc
mov
adc
mov
stc
push
xor
shll
xor
lcall
incl
or
loop
shll
xchg
stos
std
testb
je
adc
pop
es
call
std
mov
xchg
xchg
cmp
aad
sbb
fcmovne
xchg
cmp
gs
leave
sub
mov
pop
jg
decl
xor
adc
sarb
stos
cld
dec
pop
outsl
sub
pushf
jmp
out
and
fcomip
call
daa
mov
lcall
int3
add
icebp
jl
cltd
fcomi
imull
add
sub
add
fistl
repnz
ljmp
xor
pop
daa
ljmp
nop
cmp
out
bound
test
mov
pop
out
jge
push
adc
out
dec
clc
or
mov
mov
decl
pushf
fs
xchg
rcl
subl
mov
mov
cltd
dec
xlat
or
pop
call
mov
pop
pop
cmp
mov
push
jp
add
cmp
or
loopne
decl
jb
ret
call
pop
mov
add
push
adc
lods
push
dec
lea
push
stos
pop
xchg
imul
ret
incl
mov
aas
pop
fstp
xor
mov
xor
fs
js
ds
push
cmpsb
insl
mov
adc
sub
fstpl
mov
pop
mov
sbb
jno
jecxz
call
push
int
lods
frstor
xchg
xor
test
mov
push
test
fildl
or
cmc
gs
and
out
jns
sti
jge
outsb
popf
xchg
xchg
and
in
mov
jnp
in
xor
test
mov
add
sbb
ds
xor
dec
and
sbb
push
scas
pop
nop
in
and
inc
mov
add
pushf
push
cmpb
jg
sbb
sbb
adc
arpl
data16
out
sbb
add
inc
mov
stos
jmp
ret
pop
arpl
mov
jno
push
mov
mov
unpcklps
xchg
imul
inc
adcl
shrl
fcomip
sbb
lret
andb
lds
push
adc
inc
mov
rolb
aad
out
repz
sub
fwait
add
dec
and
jne
stos
and
pop
push
hlt
push
clc
adc
in
sbbl
mov
and
lcall
incl
mov
mov
insl
addr16
and
fcmove
cmp
pop
lret
fidivs
stos
sbb
xor
les
xor
mov
out
mov
cmp
xlat
pop
push
cld
sbb
data16
fldl
xchg
push
sbb
push
repz
mov
xor
xchg
aaa
mov
sahf
add
pop
xchg
jbe
pop
cld
lcall
jl
push
fldt
push
push
fiadds
sub
mov
xchg
mov
fisttps
fldt
testl
icebp
cmp
xor
push
enter
push
adc
mov
xchg
dec
jg
ret
jb
jp
adc
mov
jns
fildll
cltd
sub
out
mov
pushl
mov
ret
les
not
dec
loopne
lods
movsb
cmp
adc
cld
enter
int
ljmp
xlat
pop
popa
adc
dec
das
cmpsb
and
push
out
lods
insl
adc
xchg
and
ljmp
into
jb
jno
aas
inc
std
icebp
or
into
adc
and
sbb
cmpsb
jmp
inc
pop
add
push
or
jge
ret
or
mov
hlt
scas
incl
std
out
in
or
cmpsb
aam
dec
xchg
negb
insb
sub
in
xchg
decl
ret
fsubs
xchg
sbb
aas
nop
repz
jp
add
push
sub
ss
jmp
jmp
mov
scas
add
jbe
sub
push
sbb
adc
mov
sbb
iret
test
inc
push
sub
decl
push
mov
sub
std
pop
rol
aad
mov
lcall
hlt
xchg
add
daa
aaa
jns
lds
mov
pop
imul
lcall
add
movsl
xchg
push
push
lea
call
aam
xlat
jbe
aaa
push
mov
fimuls
adc
push
stos
aam
es
push
rorl
movsb
inc
in
jmp
push
std
movsb
push
mov
push
jecxz
or
fs
mov
shrl
jmp
test
pop
fwait
cmc
mov
decb
pop
push
pop
adc
fistpll
flds
sti
push
mov
push
insl
xchg
mov
loopne
aaa
xlat
dec
fwait
clc
pop
dec
hlt
fisubrl
stos
and
lcall
pop
fisttpl
add
scas
ret
inc
inc
cmp
outsb
xor
adcb
jae
dec
jb
lahf
xor
int3
bound
dec
ret
std
pop
rolb
pusha
lret
aam
je
loopne
jg
in
mov
lods
dec
cli
sahf
mov
stos
cmc
imul
dec
pop
jmp
faddl
push
and
xchg
mov
out
or
sub
mov
pushl
xchg
ror
fwait
sub
subb
js
cmp
ljmp
or
pop
cmc
call
icebp
data16
movsl
fcompl
stc
inc
cltd
pop
out
in
jnp
jo
mov
stos
lds
outsl
mov
xchg
ja
insl
sub
mov
pop
jb
popf
and
ja
xchg
test
mov
push
rolb
bound
dec
jg
jmp
shll
pop
push
push
movsl
jp
movd
mov
in
pusha
cmp
sbb
mov
hlt
shlb
stos
shll
div
or
mov
test
sbb
inc
xor
mov
sbbl
sbb
sub
jns
lcall
inc
push
in
or
push
aam
mov
xor
lods
mov
cmp
dec
sub
mov
push
lods
fwait
lcall
and
pop
imulb
dec
add
loope
mov
xor
fs
sbb
mov
jns
sub
imul
jns
scas
cmp
fisubs
or
push
popa
adc
jmp
in
cmpsl
imul
aam
mov
filds
popf
mov
adc
jge
adc
jmp
and
and
lcall
movhps
cmp
push
or
lods
and
es
dec
mov
ds
ret
mov
call
imul
xchg
add
pop
jmp
ffreep
jl
imul
cmp
andl
mov
push
cmc
gs
or
cmp
push
or
sahf
insl
call
int
lret
and
sbb
mov
int
dec
aaa
fists
fcomps
jmp
rorb
out
jle
and
cmp
cmpsl
fsubrp
ljmp
lcall
movsb
repz
mov
movsb
adcb
test
inc
mov
adc
lock
jg
ja
xor
inc
xchg
sub
or
cltd
sti
fs
push
in
jnp
test
dec
lds
lahf
push
push
lret
int3
ss
je
stc
push
jno
fbstp
das
mov
cmc
pushl
fchs
lahf
not
ss
xchg
push
ja
nop
jbe,pn
adc
int3
mov
jg
push
lods
in
mov
pop
xor
test
lcall
inc
mov
insl
jg
mov
and
mov
lahf
les
inc
scas
aam
sub
mov
inc
xchg
and
fisttps
enter
sub
sar
ljmp
imul
ret
lahf
jle
mov
out
in
pop
add
rcrl
inc
call
loope
fs
jne
shrl
add
das
xor
sub
scas
aaa
sbb
stos
jmp
ds
je
cmp
out
push
add
adc
mov
xor
decl
and
outsb
and
lcall
repz
cwtl
dec
mov
xchg
xor
jo
mov
xorl
test
jnp
daa
outsb
in
test
in
lret
jns
cltd
test
sbb
incl
imul
mov
xchg
cmp
fisubs
mov
cmp
push
test
dec
loope
add
mov
mov
mov
lcall
dec
cs
in
inc
das
push
insb
jne
or
jle
sbb
movsb
mov
mov
add
dec
mov
add
js
sti
stos
inc
or
adc
dec
cwtl
lock
js
in
ljmp
sbb
adc
sbb
or
lret
or
jle
clc
imul
xchg
imul
shlb
push
push
sarb
sub
sub
stc
sub
mov
mov
cmpl
inc
add
push
jp
jns
je
push
nop
jb
lcall
stos
pop
xor
pop
pop
int3
scas
pushl
xchg
daa
dec
jns
jecxz
and
push
jns
xchg
mov
push
xchg
push
cmp
decl
mov
pop
test
jnp
jbe
cmc
or
cwtl
ljmp
mov
in
nop
mov
inc
test
jnp
sub
popf
ret
int3
mov
stos
or
call
mov
jnp
scas
xchg
add
hlt
in
push
push
call
daa
cmpb
lret
out
movnti
or
mov
les
incl
mov
cmp
mov
inc
ja
push
dec
jo
cmp
mull
cmpsb
fwait
stc
xchg
fsubrs
push
shlb
repz
push
push
push
imul
fdivr
mov
das
clc
mov
inc
xchg
cwtl
xor
inc
cmpl
fnsave
test
mov
pop
pop
jge
pusha
or
roll
mov
sub
mov
jg
js
ret
mov
and
fwait
and
sub
pop
jg
add
adc
push
scas
push
sbb
add
lcall
cmp
mov
stos
subl
pop
popf
addr16
inc
stc
mov
lcall
mov
roll
mov
sub
and
jecxz
idivb
xor
sub
das
and
daa
adc
adc
jecxz
mov
pop
leave
adc
add
decl
fcoms
sub
push
fstps
adc
jg
adc
add
fwait
incl
pop
jnp
divb
rcll
das
push
mov
into
insl
insb
adc
mov
pushl
popf
lcall
nop
jb
cmp
pop
std
in
jmp
inc
or
sar
cmp
incl
test
outsl
pop
repz
push
push
addb
mov
es
lcall
stc
xor
sbbb
test
call
loopne
push
pop
add
sub
mov
add
cli
jns
incl
out
mov
add
sbb
in
adc
sub
enter
cmp
jmp
sbb
repz
xor
or
cmp
imul
xchg
popa
jg
mov
xor
push
push
fsubl
mov
dec
add
mov
call
xor
lods
pop
std
jp
bound
xchg
out
enter
pop
ds
jmp
xor
sahf
adc
pop
pop
insb
or
repnz
xchg
mov
inc
lret
xchg
repnz
add
decl
ret
pushf
stc
adc
or
pushl
adc
cli
movsl
in
mov
mov
or
sti
push
cmc
xchg
mov
jmp
lock
jmp
xchg
shl
mov
test
rcrb
stos
daa
dec
cmp
fisubs
xor
mov
cli
jg
aad
xchg
mov
lods
sub
lods
mov
icebp
cmpsb
adc
pop
add
out
inc
dec
es
addr16
sbb
mov
inc
out
stos
mov
pop
outsb
mov
mov
lock
mov
andb
and
mov
nop
jbe
push
xlat
out
and
ds
cmp
mov
hlt
or
call
and
dec
push
repz
in
in
decl
and
jmp
imul
rorl
mov
in
cmp
pop
cmpsb
subl
pop
decl
lods
cs
test
repnz
ret
lahf
mov
xor
fsts
ljmp
cmp
xchg
sti
jb
cmp
jnp
push
mov
mov
pushl
inc
xchg
stc
loop
push
jo
cltd
jae
test
lahf
repnz
mov
dec
pop
inc
or
test
jg
fsubs
enter
xchg
lret
testl
mov
mov
mov
insb
cwtl
dec
repz
inc
repz
push
out
cli
and
cwtl
mov
sar
lret
js
adc
cmpsb
pop
mov
int3
popf
jmp
xchg
push
pushf
lods
out
mov
sub
mov
filds
lock
call
scas
loop
jmp
jne
ja
or
and
pop
cmc
fwait
pop
sub
cli
sti
mov
filds
orb
dec
jl
xchg
movsb
sbbl
mov
stos
lods
shr
mov
jae
inc
int3
call
push
cmp
inc
add
sbb
fmuls
iret
inc
mov
jl
jae
mov
nop
cmp
scas
das
or
pop
mov
pop
push
mov
jo
cmp
fs
call
loop
xchg
ret
in
mov
lds
dec
mov
cld
sub
adc
outsb
psrld
push
outsl
adc
out
and
outsb
jge
mov
fists
push
imul
mov
incl
xor
cwtl
xchg
popf
dec
xor
rorb
pop
inc
add
ficomps
push
xchg
mov
incl
clc
sbb
les
out
mov
fcmovnbe
mov
cs
pusha
cmc
ds
dec
hlt
mov
or
pusha
imul
xor
adc
cmp
imul
jne
jnp
idivl
mov
movsb
cmp
sub
lret
mov
popa
jl
fadds
jne
and
push
es
ds
xlat
stos
pop
sub
aam
mov
das
dec
adc
jg
lcall
popf
lods
or
out
adc
scas
dec
add
add
ljmp
nop
mov
xchg
push
cmpsb
rcll
cwtl
je
push
rcrl
sub
daa
stos
mov
inc
mov
add
add
pushl
js
in
xor
or
xor
jg
aad
mov
jne
lds
fstpl
in
cld
mov
cs
out
clc
fisubl
ret
lods
jnp
cltd
sarl
rcrb
pshufw
fmull
lahf
leave
cmp
pushl
sbb
pop
cmp
les
pop
movsl
sub
mov
loopne
test
mov
in
repz
outsl
cltd
cmp
jecxz
jo
push
popf
sbb
test
scas
loop
mov
cwtl
jle
dec
inc
adc
or
inc
cld
aam
add
test
adc
mov
add
jmp
mov
ljmp
sbb
test
or
jle
mov
incl
sar
or
daa
cmp
or
push
xchg
lret
mov
dec
push
mov
mov
mov
jno
inc
aam
or
push
sahf
out
cmpb
daa
inc
mov
inc
out
lcall
mov
adc
sbb
mov
out
shlb
cmp
loope
andl
idivl
xchg
iret
jns
in
js
jo,pn
inc
mov
sahf
jnp
pop
loope
addb
xchg
lret
loope
fdivs
mov
or
or
sar
mov
fadd
cmp
mov
mov
cs
in
jecxz
stos
call
jmp
add
leave
outsb
stos
test
fldcw
rcrb
in
inc
pop
cmc
pop
stos
jnp
push
lcall
and
cmc
and
mov
lcall
mov
fs
fbld
pop
xor
cld
inc
cltd
adc
push
sub
inc
pop
pushf
pop
cmc
scas
ret
inc
lcall
call
xor
mov
mov
lods
push
xorl
push
push
out
cmpsl
sub
mov
lock
jmp
fwait
lcall
inc
sub
cwtl
mov
insl
xchg
stos
aas
mov
pushf
lahf
push
lea
call
loopne
pop
popa
cmp
jno
pop
ret
pushf
aad
insl
orl
xor
add
loopne
rorb
or
lock
sar
incl
ss
in
sub
mov
loope
xor
mov
stc
lds
in
and
fsubs
sub
jg
scas
xor
sbb
das
iret
cmp
and
fldcw
hlt
pop
sbb
std
xor
mov
sbb
repz
push
xor
xor
cmc
es
notl
std
call
sub
enter
dec
add
sbb
jg
pop
and
mov
pop
pop
pop
data16
cmp
movsb
xchg
leave
clc
add
adcb
std
pop
push
int3
push
push
stos
push
mov
sbb
scas
sub
add
insl
mov
jg
push
xchg
nop
loope
fsubl
mov
leave
les
ljmp
pushl
push
xor
xchg
lods
and
stos
sti
xchg
dec
pop
sti
rcll
sarb
cmpsb
add
jg
icebp
xor
cmp
fcoml
mov
jno
into
sti
lcall
pop
out
js
pop
xlat
pop
jb
int3
xchg
push
xlat
les
test
or
pop
mov
lcall
repnz
and
test
fstps
std
lcall
loope
and
jnp
dec
pause
stos
jg
cmp
cmp
sub
call
lods
aad
js
cmpl
mov
cmp
adc
in
pop
cmp
aas
or
aam
fidivrl
out
lret
repz
hlt
lahf
negl
mov
outsb
jmp
clc
jg
cmc
and
push
arpl
out
inc
dec
mov
ljmp
sbb
dec
mov
sbb
jmp
fistpll
mulb
jmp
mov
cmp
pop
inc
cmp
insb
and
fcmovnb
lret
adc
js
or
jbe
cmp
mov
cli
xchg
push
rcll
shlb
mov
and
inc
cld
gs
dec
ss
pop
push
es
ljmp
ljmp
neg
sbb
add
movsb
jne
dec
sub
rorl
iret
mov
pop
out
ja
leave
and
out
call
sarb
sub
enter
out
es
xchg
or
xchg
jle
add
ficompl
pop
mov
pop
ja
pop
jl
and
cmp
lcall
push
aaa
push
mov
lcall
stc
ret
js
jp
add
stos
push
sbb
xlat
xchg
jae
sbb
push
mov
ss
test
mov
andl
mov
dec
outsl
xchg
dec
loope
out
cmp
cmp
xchg
fmulp
cwtl
add
inc
mov
inc
cs
inc
xchg
jne
fs
int
push
in
cmp
fldl
popf
xchg
lods
jge
cwtl
test
test
sub
push
xor
and
lcall
jmp
lds
subl
and
mov
jmp
scas
lret
ret
movsl
leave
pop
sbb
and
or
jg
adc
jno
cld
xchg
fs
out
mov
cli
sti
xchg
inc
xor
out
lcall
daa
lahf
imul
movsb
mov
gs
mov
adc
xchg
subl
xchg
mov
clc
mov
leave
scas
add
in
jb
fisubl
mov
jno,pt
mov
push
subb
push
gs
sbb
decl
xor
mov
shrb
fimull
dec
popf
sarl
xchg
std
xchg
repz
js
mov
test
dec
movb
lret
cmpsl
jmp
bound
cmpsb
es
outsl
mov
sbb
out
add
data16
inc
hlt
xor
stos
xchg
xor
mov
and
inc
cmp
jne
rcrb
push
bound
iret
inc
pop
jge
dec
sub
mov
lods
mov
dec
lds
and
adc
mov
in
ss
out
lcall
andb
fwait
or
incl
mov
pop
mov
sbb
arpl
decl
push
push
movl
mov
sub
sbb
push
data16
and
xor
outsl
ficoml
je
scas
aad
in
and
testb
js
xor
cmp
iret
call
lcall
sbb
clc
sbb
inc
adc
out
bound
stos
call
jg
in
mov
or
mov
insb
lock
adcb
add
lock
jae
mov
loopne
jmp
xor
imul
outsl
not
mov
cmc
jp
data16
addl
call
loopne
fstpl
in
xor
cmp
xchg
jbe
mov
incl
cmp
movl
mov
int
sbb
decl
xchg
mov
frstor
js
loopne
lret
stc
cli
pop
push
xor
mov
incl
test
shrb
mov
xchg
xchg
jne
push
test
lods
sarb
xor
shl
push
insl
add
adc
lods
push
adc
jle
push
insl
or
loop
jmp
mov
and
sub
imul
sbb
scas
incl
lahf
sbb
sarb
sub
pop
mov
mov
and
mov
dec
jg
out
sti
ret
mov
xor
pop
or
inc
in
cmp
or
mov
pop
mov
jns
cmp
repnz
lock
lahf
sbbb
mov
les
test
divl
mov
pushl
sbb
push
mov
pop
pusha
mov
pop
dec
pop
std
or
pop
std
aas
inc
sub
test
push
imul
test
lcall
jge
push
addl
in
je
pop
aaa
push
jnp
and
adc
jne
decl
test
mov
mov
sub
icebp
adc
ljmp
insb
jp
incl
xchg
insl
imul
inc
or
inc
pop
xor
adc
call
mov
pushl
fs
or
jne
mov
pusha
jp
push
ljmp
or
lock
hlt
icebp
jno
xchg
sub
sub
adc
jne
loop
pop
flds
jmp
mov
ljmp
inc
jge
sub
dec
mov
jecxz
push
xchg
cmc
sahf
push
mov
call
jae
shrl
icebp
or
movsl
into
dec
dec
jns
enter
ja
aam
pop
jbe
inc
cmp
rolb
cld
inc
dec
fstps
add
rcll
hlt
les
rcl
or
adc
repnz
repnz
mov
or
mov
cs
or
idiv
mov
loopne
jne
or
mov
mull
scas
add
mov
add
adc
call
sbb
lret
lret
out
and
dec
cmp
mov
or
enter
decl
mov
inc
mov
sahf
rcll
xorl
fucomi
dec
out
call
pushf
push
lcall
and
clc
push
out
int3
ror
push
sub
adc
lcall
ret
in
testb
enter
sub
leave
stc
inc
sub
mov
mov
mov
push
repz
fadds
cli
mov
lret
cld
xor
test
mov
push
int
xchg
mov
xor
out
clc
jg
add
dec
lds
je
in
push
in
push
xchg
shl
inc
and
decl
add
pop
sub
xor
test
addr16
push
mov
ljmp
push
xor
out
hlt
mov
aas
jp
lahf
mov
or
jno
sub
push
adc
pop
xor
leave
fildl
decl
stos
iret
xchg
mov
movsb
mov
or
addr16
push
sub
push
sti
pop
inc
pop
rcll
lcall
aas
xlat
out
pop
stos
clc
xor
push
mov
push
fucomp
sub
add
pushl
lods
or
leave
xor
mov
dec
xor
repnz
clc
aad
add
lods
enter
stc
sub
adc
imul
stc
je
aad
shl
or
lcall
lcall
or
cmp
jb
mov
jp
add
push
roll
pop
ljmp
cmpb
mov
and
jo
pushf
popa
sahf
lods
push
test
inc
sbb
xchg
cld
movsl
imul
decl
mov
and
inc
cmp
test
rol
push
ljmp
mov
cmp
pop
mov
popf
repnz
mov
xor
mov
ljmp
cli
and
icebp
lcall
xchg
popf
out
mov
scas
cmpsl
stc
daa
insl
push
fidivrl
adc
call
push
in
aad
movsb
test
iret
xchg
xor
scas
test
xchg
add
jmp
fiaddl
xchg
scas
sti
clc
movl
in
dec
iret
das
call
pop
xchg
out
inc
int3
pop
xchg
fs
mov
push
sbb
jno
push
clc
xlat
sbb
int3
je
xor
aam
lods
leave
xchg
dec
xchg
ljmp
xlat
pop
stc
repnz
icebp
ret
stos
addps
pop
std
call
in
adc
push
negb
mov
pushf
jmp
arpl
lea
lcall
aam
and
test
loop
and
push
xchg
out
pop
imul
stos
shlb
or
lea
stos
movsb
ret
repnz
std
mov
add
xchg
int
cli
les
pushf
mov
popa
mov
sbb
outsl
adc
aad
push
pop
jl
mov
in
jg
ljmp
fsubs
out
mov
adc
xchg
xchg
leave
mov
scas
adc
std
xor
xchg
dec
leave
xchg
jb
arpl
mov
jnp
ljmp
sub
out
cmpsb
nop
cs
out
fidivs
call
jbe
mov
out
jmp
fcmovu
pop
xchg
mov
lcall
pop
inc
mov
hlt
jmp
test
je
insl
mov
xor
push
test
cmp
cmc
jge
shrl
xchg
imul
mov
jge
cltd
push
bswap
call
imul
jb
sub
lock
sbb
ljmp
pop
dec
sub
mov
fwait
mov
pop
les
and
lock
dec
call
push
popf
inc
pop
sbb
rorb
movsl
push
push
or
pop
icebp
call
jg
push
inc
mov
inc
in
xor
sbb
sbb
sub
decl
mov
cmovae
or
xchg
xchg
add
jl
fnstsw
push
cmpsb
outsl
pusha
sti
push
jns
aam
aad
scas
add
xlat
loopne
mov
mov
fdivrs
fidivrs
mov
inc
lock
out
adc
insb
jle
pop
jmp
ss
pop
fidivrs
mov
push
cs
inc
jb
xchg
decl
sub
cli
outsb
in
mov
push
ljmp
cmp
cli
js
call
inc
notl
loopne
pop
jnp
stc
mov
cmpsl
mov
pushl
mov
adc
iret
es
lods
pusha
ret
lcall
aad
loope
sub
cmp
test
jmp
mull
lret
data16
push
call
lret
mov
negb
ljmp
lahf
insb
outsl
pushf
sahf
rcrb
mov
mov
or
stos
aas
jl
and
jbe
gs
mov
setle
inc
sbb
loopne
cmpsl
add
popa
cmp
popa
sub
cmp
faddp
jmp
lret
xchg
aaa
add
dec
and
mov
ljmp
orb
sub
mov
cmp
jns
rolb
incl
mov
arpl
xor
xor
inc
cli
or
push
gs
pop
adc
orl
aaa
flds
test
ret
or
cmp
pushl
fbstp
outsl
test
sbb
ss
pusha
xchg
iret
cwtl
push
loopne
and
ljmp
jge
cld
dec
aas
ja
je
push
fcompl
mov
test
sbb
xor
pushl
mov
and
test
dec
lds
in
sbb
scas
inc
xchg
cli
sarb
mov
aam
lcall
out
mov
or
or
sar
push
mov
cmp
xor
mov
cmpsb
gs
mov
decl
and
mov
pushl
movsb
call
bound
in
lds
insl
imul
mov
subb
jg
lret
push
ud0
das
rorb
int3
pop
jp
or
inc
mov
ret
aam
enter
ljmp
push
fwait
je
mov
imul
and
pop
push
stc
pop
and
jp
mov
fisubrl
mov
xor
cld
inc
push
mov
mov
jbe
ja
adc
out
adc
cltd
pusha
dec
mov
lcall
popf
inc
lock
jae
xchg
lret
and
int3
lods
outsl
jo
lcall
adc
dec
ffreep
mov
push
dec
ljmp
sbb
jmp
push
popw
jmp
jns
jb
orb
sub
sub
push
or
push
cmpsl
hlt
jg
jmp
and
out
mov
sbb
vpsubb
aas
dec
nop
or
stos
jge
mov
pushl
out
mov
inc
pop
cmp
mov
mov
mov
xlat
loope
xor
jmp
adc
mov
int
dec
inc
xchg
repz
in
in
pop
sub
decl
dec
mov
loop
nop
ss
ljmp
push
fwait
dec
in
cmc
lcall
enter
cmp
inc
lods
lods
xchg
pop
test
fucomip
and
nop
sar
dec
sar
lcall
inc
hlt
adcb
pushf
xchg
sub
sar
cmp
xor
inc
mov
es
sub
loope
push
ficompl
shll
sub
push
add
pop
je
or
jmp
mov
aaa
daa
sub
pop
mov
nop
push
ljmp
or
fs
leave
adc
shlb
shlb
add
mov
incl
sbb
mov
jne
push
lahf
mov
out
lods
ljmp
mov
aad
jl
in
shl
std
cmp
in
pop
cs
push
xorl
pop
push
cmp
out
pop
pop
mov
mov
in
push
out
mov
out
inc
push
adc
idiv
lcall
movsb
mov
int3
cmpl
shlb
add
insb
and
call
sub
test
jl
xchg
in
xchg
ljmp
mov
mov
jge
and
cld
fistl
shll
aaa
ds
cmc
enter
xchg
cwtl
cli
stc
mov
or
sub
bound
inc
lea
and
pop
lret
popf
mov
jmp
fiaddl
decl
jno
dec
pop
in
and
push
loopne
push
mov
inc
outsb
xor
lea
sbb
fs
cld
jmp
xchg
inc
adc
popf
jb
jl
fadd
aaa
push
out
mov
push
incl
out
cmp
movsb
test
mov
adc
or
jnp
push
dec
fs
in
push
dec
adc
cwtl
push
sub
jo
fsub
push
movsb
jb
sbb
sti
pushl
fldl
test
ljmp
in
jnp
mov
ret
add
loopne
out
stos
icebp
push
mov
ja
sarl
jg
int
or
lcall
pop
enter
mov
test
inc
in
push
inc
out
stc
sub
sahf
cmp
shll
loopne
fists
aaa
in
insb
neg
mov
pop
aad
jno
sbb
jmp
ds
push
in
sti
out
mov
lret
imul
enter
stos
sahf
js
incl
push
icebp
pop
add
mov
pop
sbb
ret
and
pop
jae
cmpsb
ljmp
adc
mov
leave
cmp
sub
enter
rcrl
lcall
int3
leave
adc
and
popa
add
bound
sub
loop
sbb
incl
xchg
adc
mov
iret
cltd
sbb
lcall
and
repz
dec
out
int3
movsb
mov
movsl
push
xor
jns
mov
cs
or
push
cmpsb
out
sub
aas
jne
fldcw
jmp
cmp
ss
pushf
test
add
inc
cld
lock
and
pop
fcomp
sar
call
loopne
scas
and
cmp
sarb
call
fldl
je
shl
ljmp
insb
in
pop
enter
jge
stos
stc
popf
sub
hlt
push
dec
cs
sub
mov
call
rcl
mov
mov
mov
xchg
call
lret
movsb
ljmp
fildl
mov
mov
xchg
sub
out
inc
rcl
lret
ljmp
adc
fstpl
fwait
or
mov
cmp
aad
out
jns
js
fwait
int3
aad
sti
lock
in
sbb
xor
sbb
imul
push
sbb
add
xor
test
cld
pop
int
cmpsl
pop
xor
cmp
adc
sub
add
pop
sar
outsl
sarb
cmp
movsl
jns
repnz
xchg
pop
nop
xchg
sbb
mov
pop
mov
std
pop
mov
inc
cmp
stos
cmpsb
cmp
cmc
jo
pop
sti
out
adc
enter
incl
xor
idivb
int
enter
outsb
inc
int3
push
lea
ss
bound
mov
cmp
lea
fistpll
fcompl
xchg
push
jp
adcl
cmc
mov
es
popa
roll
mov
dec
mov
out
xchg
aam
push
lcall
int3
cwtl
shl
repz
xor
jmp
nop
xchg
or
incl
pop
mov
cmpsl
or
in
push
dec
mov
pusha
mov
jne
mov
pop
lea
push
dec
stos
jg
test
sbb
and
or
inc
push
repnz
adc
or
popa
and
and
cmp
pop
or
add
arpl
adc
pushf
pop
pusha
stos
call
mov
push
cmp
mov
lret
dec
in
pop
ret
adc
cltd
ret
fnstcw
incl
andb
sbbb
dec
add
xor
pop
cli
push
cmpsb
shrl
cmp
nop
into
mov
aaa
lcall
jo
lret
decl
mov
adc
jo
cmp
push
cmp
cmp
fists
pop
inc
loopne
call
ljmp
lds
jb
cmpsb
xchg
jg
adc
pop
lock
ljmp
cmc
cmp
dec
push
dec
jecxz
fdivl
pop
cmpsl
shl
aam
lods
mov
jmp
cmpsb
lea
dec
sahf
jecxz
mov
into
sar
and
jns
push
ret
sub
pushl
cmc
sbb
push
into
and
icebp
cld
in
push
or
mov
nop
repz
or
pop
scas
push
lods
orl
mov
fwait
insl
es
push
and
rclb
pop
int
lods
jae
decl
mov
xchg
sbb
stos
aaa
jb
int3
xor
pop
je
jle
adc
outsl
fiaddl
xor
dec
cmp
xchg
icebp
xchg
add
xchg
jl
xchg
xchg
add
jmp
sbb
out
jle
push
gs
xchg
push
in
or
mov
sbb
adc
push
mov
adc
icebp
lcall
leave
xor
mov
ljmp
pop
pusha
jmp
xor
pop
loop
sti
xchg
push
mov
dec
fsubrs
enter
or
movsl
insl
sbb
mov
in
mov
fisubrl
pop
mov
mov
cli
push
mov
ds
lret
dec
and
icebp
ljmp
test
ljmp
adc
sub
sbb
jae
outsl
mov
lcall
rclb
fdivrl
xchg
add
inc
fdivr
pushf
enter
mov
jg
cld
daa
dec
dec
and
cmpb
sbb
int3
enter
out
and
decl
push
mov
cmpb
and
pop
notl
orl
jmp
cmp
cmp
pushf
mov
lods
push
and
aam
dec
cld
and
mov
jmp
lods
xchg
pushf
xlat
xorl
xchg
adc
inc
fsubs
push
notb
insb
pop
sbb
outsl
xor
aas
das
sbb
push
rcrb
es
dec
std
out
mov
out
test
adc
add
ljmp
std
popa
popf
repnz
mov
leave
add
or
or
add
mov
adc
jno
jecxz
adc
mov
jb
bound
call
xchg
and
inc
sbb
xorl
or
mov
lods
mov
cmpsb
lcall
clc
pop
xchg
ss
cltd
shlb
mov
add
lret
js
in
out
sbb
jg
jno
adc
call
fwait
xchg
lcall
pop
shlb
jb
dec
and
cmp
idiv
jp
fiaddl
call
or
sub
push
js
pop
loope
ljmp
xor
jecxz
rcrb
push
jo
pushl
push
clc
fcomi
inc
pop
popa
or
and
jno
test
add
cmp
or
push
mov
es
pop
aaa
aaa
sbb
mov
mov
push
sarb
jp
aam
loopne
mov
jl
loop
cmp
jnp
mov
shl
xchg
jmp
adc
or
in
in
fistpll
jg
jmp
fstpl
jl
idivb
out
jb
jecxz
xchg
popa
xor
out
or
stos
popa
shrb
clc
adc
clc
sar
jno
push
xchg
xchg
mov
insb
fistl
adc
mov
xor
enter
icebp
fstps
sub
in
icebp
aam
shrl
sti
or
loopne
inc
mov
mov
mov
sub
pop
js
adc
scas
incl
pop
dec
rorl
clc
add
out
loop
decb
sbb
sub
dec
lods
xor
decl
inc
dec
fidivl
dec
cmp
sbb
mov
or
and
jo
fnstcw
mov
decl
cmp
mov
clc
xor
das
in
pop
push
pop
mov
mov
mov
ficomps
jns
add
jb
jmp
xor
in
jmp
mov
lahf
lcall
cmc
hlt
xchg
icebp
adc
dec
xor
add
ror
inc
jmp
xchg
rol
mov
sbbb
cmp
in
arpl
call
jl
xchg
and
insl
inc
mov
fmuls
mov
pop
lock
pop
or
pushl
inc
mov
out
jecxz
mov
mov
add
jmp
push
jmp
ljmp
or
dec
fdivrl
insl
int3
into
jbe
jge
mov
and
das
insl
mov
add
jge
negl
test
cmpl
lods
add
pop
sbb
test
mov
incl
xchg
push
cltd
subb
dec
js
test
push
push
mov
movsl
cmc
cmp
jg
xor
movsb
cmpsl
sarl
mov
shll
pop
movsb
hlt
incl
fs
lahf
inc
lock
inc
xor
sub
push
or
sub
inc
sub
add
pushf
add
loope
add
sar
inc
aam
faddl
mov
dec
testb
add
jae
ret
call
lret
push
sub
outsl
add
inc
or
add
dec
hlt
push
test
rcll
add
imul
les
loop
cmp
movsb
jg
push
inc
ficompl
ss
leave
jmp
jecxz
jecxz
jno
sbb
ljmp
daa
pop
js
mov
cmp
xchg
stos
int
mov
xorps
or
cmp
call
xor
adc
in
dec
sbb
lock
and
push
dec
dec
aas
mov
iret
add
push
xchg
dec
jmp
ljmp
out
fs
fldenv
dec
push
sub
pushl
std
fldl
xchg
sub
mov
sub
enter
addr16
ja
sub
sbb
jg
dec
push
cmp
pop
xchg
repz
int3
inc
xchg
sub
pushl
or
inc
and
insb
fst
scas
xor
nop
shrl
aad
fmuls
ljmp
std
cs
ror
inc
rcll
xor
dec
lods
adc
mov
push
mov
xchg
call
dec
repz
push
in
sbb
icebp
sti
push
fdivrp
in
xchg
push
xlat
imul
pop
inc
lahf
fisubrl
movsb
and
leave
inc
cmp
inc
pushf
int3
fs
dec
decl
lock
test
es
mov
inc
loop
fistps
hlt
dec
mov
cmc
mov
add
push
stc
adc
into
pop
aaa
xchg
cmpsb
sahf
jg
nop
xchg
fadd
jg
shl
jmp
stos
jecxz
shlb
das
mov
loopne
cmp
pushf
sti
clc
das
push
insl
lods
icebp
enter
movsb
cld
decl
mov
cs
xlat
mov
xchg
push
jne
add
inc
add
xlat
decl
jo
cwtl
sbb
cmp
orl
dec
cmp
pop
in
pop
mov
sbb
push
loop
icebp
lcall
mov
adc
sub
popa
jge
mov
outsl
or
pop
test
mov
push
push
pop
movsl
and
inc
jmp
sub
ljmp
popf
int
int3
jl
pop
cmovb
scas
call
mov
mov
mov
jb
sub
decl
dec
fstpt
aaa
mov
dec
jns
push
ljmp
cwtl
dec
xchg
push
xor
fidivrl
or
cmpsb
xchg
aaa
cld
fbstp
pop
mov
mul
pop
dec
sarl
test
sahf
adc
add
pcmpgtd
hlt
pushl
pop
mov
lds
lahf
lods
jns
lods
mov
cli
enter
leave
cld
dec
pop
in
ljmp
fcomps
pop
mov
pop
popf
int3
mov
loop
push
mov
xchg
inc
bound
jmp
push
filds
mov
ljmp
sub
sarl
jl
or
call
addr16
mov
push
cmp
insb
mov
xchg
lcall
pop
clc
inc
popa
sbb
fists
sbb
rcr
or
push
jae
mov
ljmp
dec
xchg
ja
daa
pop
cwtl
cld
cmc
xchg
mov
or
push
pop
xchg
mov
sbb
cli
dec
jge
pop
xchg
jge
insl
mov
cmp
dec
inc
mov
jmp
lods
push
lret
dec
aaa
push
lods
mov
mov
mov
cld
xorb
xchg
pop
or
or
mov
setae
call
cmc
push
sub
lahf
adc
ljmp
shlb
mov
int
in
ljmp
dec
std
stc
imul
lret
mov
insl
repz
out
jl
lock
dec
mov
add
xlat
lods
daa
sbb
push
inc
jno
pushl
sbb
shl
jp,pt
pop
push
xchg
or
out
in
scas
sub
dec
mov
xchg
and
or
iret
cli
clc
push
fsts
shl
xchg
leave
push
ljmp
lcall
xchg
inc
stos
daa
push
push
fistl
fidivrl
call
aas
add
int3
mov
push
shll
fadd
xchg
dec
xor
popf
out
imul
lcall
std
into
repnz
add
in
rolb
test
cmpsb
jo
call
sbb
decl
push
lods
dec
fcoms
push
dec
mov
inc
decl
push
sub
ret
sub
push
ljmp
and
push
xor
jno
mov
xor
add
push
imul
lcall
jne
cmpsb
enter
fidivrs
and
ret
addr16
xor
decb
imul
ljmp
mov
stos
cmc
sub
mov
jo
xchg
mov
or
call
inc
addl
filds
jp
out
in
sar
mov
ds
xchg
loope
lcall
mov
gs
pop
xor
pusha
in
sbb
clc
mov
pop
push
rclb
arpl
daa
ffree
pushl
std
mov
cmpsl
and
js
cs
pusha
test
mov
test
xchg
js
fmul
nop
cmp
out
mov
inc
pop
cmpsl
sbb
sub
int3
jnp
mov
scas
cli
mov
pusha
cltd
mov
ja
daa
call
pop
jmp
and
pop
int3
xchg
pop
mov
lock
out
lcall
jecxz
and
clc
call
lods
jbe
push
and
jmp
scas
mov
jb
ljmp
mov
inc
aaa
dec
movsb
lock
fsts
mov
cmp
xchg
insl
adc
aaa
cmp
mov
lock
lcall
into
sti
loop
sub
insl
inc
xor
rcr
popa
xchg
xor
add
and
call
imul
insl
or
jns
stc
pop
rcrl
mov
inc
mov
mov
lcall
pop
cwtl
jnp
dec
push
jl
loope
subb
and
imul
fdivl
repz
lcall
inc
repnz
sub
repz
or
mov
fldl
addl
lcall
add
std
loop
mov
cli
das
out
nop
leave
lods
mov
decl
decl
jbe
jp
clc
mov
xchg
sub
fistl
fisttpll
in
jle
adc
jno
rorl
xor
adc
pushf
dec
and
lcall
lcall
fldt
jecxz
hlt
stc
fidivrl
inc
jo
sub
pop
out
jg
mov
and
aaa
lock
push
test
dec
adc
mov
mov
test
call
or
jbe
pop
enter
xorb
mov
adc
fs
pop
call
shlb
adc
dec
jecxz
cmp
mov
fists
test
mov
xchg
call
in
movsb
adc
xor
mov
cmp
call
sti
xchg
cmc
adc
cltd
lahf
mov
inc
insl
add
dec
adc
mov
pop
in
dec
lcall
jg
sti
ss
xchg
dec
add
adc
data16
xchg
es
add
outsl
fcomip
gs
lods
jecxz
mov
orb
fldcw
leave
push
loope
ljmp
pop
xchg
rorl
jne
lahf
xchg
jbe
ja
scas
xchg
jecxz
inc
sbb
mov
js
stos
add
test
sarl
pop
mov
ja
inc
call
jle
push
mov
adc
or
pushl
stos
dec
stos
test
jae
mov
xchg
int3
mov
or
out
cs
xchg
leave
fstpt
incl
loop
lock
xor
in
xchg
mov
dec
and
incl
inc
gs
xchg
xchg
jae
dec
push
cmp
addb
fs
jmp
xchg
fcoml
xor
loopne
sub
in
pushl
jl
push
push
sar
ljmp
cmp
loope
ja
shlb
mov
jne
adc
mov
jg
xchg
add
scas
imul
in
decl
aad
andb
mov
incl
fcoml
call
mov
repz
cmp
jae
fisttpl
addr16
cli
add
xlat
imul
or
sub
fwait
adc
xor
jns
fucomp
push
pop
test
add
mov
enter
pop
add
pop
cmpsb
es
cld
xchg
mov
lcall
out
fldenv
fdivl
xchg
sub
and
lock
jge
jb
int
cwtl
in
pop
rcrb
sub
or
bound
gs
incl
movsl
fwait
pop
inc
or
mov
lds
jmp
into
mov
lret
jae
or
ljmp
or
add
incl
dec
add
pop
cwtl
rorb
imul
xchg
cli
test
es
mov
outsb
or
dec
jmp
ljmp
jmp
xchg
cmp
or
movsl
pop
cmc
fcomip
bound
mov
sub
pusha
cmp
test
push
js
sub
mov
jl
cmp
xor
fldcw
xchg
lret
push
or
nop
out
shll
test
incl
mov
cmp
mov
fsubrs
push
pusha
std
lret
shr
sub
arpl
adc
outsb
sub
lcall
movsl
jno
xchg
inc
cmp
out
cmp
les
int
repnz
data16
xor
adc
adc
imul
cmc
in
cmp
pop
je
xchg
sub
stc
cs
call
scas
jbe
adc
sub
ret
xchg
stos
or
call
fdivp
xor
sar
sti
pop
cmp
or
lods
adc
fistpl
jno
pop
in
into
cmp
jg
mov
nop
jle
inc
and
cs
addr16
pop
xor
mov
mov
inc
shlb
cmp
paddb
cmp
adc
xchg
jle
dec
push
jp
pop
xlat
cmp
mov
mov
dec
out
jmp
dec
cwtl
hlt
hlt
popa
push
call
xchg
sbbl
sub
movsl
pusha
mov
in
xlat
arpl
call
inc
dec
push
icebp
jle
dec
mov
sahf
enter
push
pop
mov
adc
push
xchg
mov
and
ficoml
add
mov
mov
lret
insb
sub
jl
push
xchg
mov
in
fs
cmc
out
insl
mov
shlb
xchg
or
dec
xchg
test
mov
test
xchg
in
and
adcb
inc
push
lea
pop
gs
outsb
mov
cld
push
popf
sub
loop
dec
pop
fs
fidivrs
in
fistps
movsl
das
ret
jecxz
mov
inc
rolb
mov
loope
call
out
xchg
test
es
rcr
jbe
inc
inc
push
repz
mov
fstps
dec
xchg
cmp
and
push
pop
mov
pop
push
adc
inc
cltd
leave
push
push
sbb
adc
add
movsb
repz
cld
scas
andl
mov
decl
sub
outsb
xchg
cmp
xchg
push
sub
cmc
adc
xchg
adc
loop
mov
incl
aas
cmc
xor
pop
lret
lods
mov
decb
or
inc
mov
roll
ljmp
mov
adc
cmc
adc
mov
int
stc
ss
test
imul
into
cli
out
pop
xor
cmc
movsb
call
sub
jbe
xlat
js
lods
dec
mov
lcall
push
mov
push
xchg
mov
mov
adc
cld
fists
jmp
add
loop
ljmp
cmpsb
dec
mov
xor
pop
ja
ret
xchg
fsqrt
jle
add
pop
rclb
in
inc
sub
rcrb
push
jmp
xor
xchg
popa
push
and
fbld
call
dec
cmpsb
incl
jb
dec
out
leave
cmp
add
std
xchg
add
pushl
xor
inc
dec
or
sub
loope
adc
pusha
jecxz
mov
mov
stos
ljmp
fbld
xor
xlat
pop
in
add
mov
add
ss
jnp
fcomip
call
stc
sbb
jp
push
mov
mov
add
and
std
cld
pop
loopne
sub
jg
sbb
clc
aas
push
shl
sub
fldl
pushl
in
xor
imul
or
push
aas
popa
int3
push
sub
adc
call
cmpsb
mov
jnp
pop
mov
mov
cld
aam
sbb
push
inc
pop
in
aaa
int3
sub
mov
pop
sub
lds
imul
push
add
push
add
xchg
push
mov
mov
pop
loopne
repz
cld
ljmp
shlb
or
mov
int3
cli
cli
xchg
mov
lcall
cld
lret
add
mov
cmc
sub
imul
call
sub
decl
fwait
mov
pop
lea
xchg
dec
roll
dec
dec
pop
js
cmpsb
call
outsl
add
jae
cld
sbb
jmp
jbe
jecxz
inc
cmpl
popa
ja
repz
sbb
or
in
insb
mov
sbb
inc
adc
sbb
jno
es
std
add
fsubrl
mov
adc
lcall
sub
xor
out
hlt
inc
sbb
sbb
and
mov
xor
std
pushl
subb
and
fbld
mov
pop
ficompl
mov
sub
and
inc
push
lea
sahf
or
jecxz
xor
and
lock
fdivrs
call
xchg
add
sahf
push
fldenv
int
adc
loope
insl
aaa
std
outsl
and
inc
mov
stos
ficomps
adc
fdivrp
dec
push
mov
sbb
arpl
mov
dec
jmp
jo
mov
fisttps
jp
sbb
mov
and
jno
cmc
loopne
adc
jae
mulb
xor
lcall
jge
cmp
jne
test
in
mov
xor
mov
scas
and
scas
cmpsl
mov
mov
pop
inc
lods
fldenv
push
sbb
and
jl
jnp
fidivl
test
call
in
cmp
mov
push
cli
aaa
pop
and
xchg
push
add
into
xchg
loope
loopne
and
repnz
shll
lcall
mov
pop
ds
mov
xor
inc
sbb
decl
mov
dec
dec
pop
test
xor
fistps
pop
pop
xor
das
lock
mov
xchg
jl
xchg
adc
lods
mov
xchg
xchg
incl
xchg
mov
js
test
in
ljmp
fistps
outsl
pop
mov
loopne
jg
lahf
hlt
aaa
xchg
shl
mov
pop
pop
pop
push
shlb
repnz
lcall
jo
or
xchg
mov
rolb
xor
dec
push
push
mov
lcall
clc
add
jl
lds
leave
mov
cli
push
mov
outsl
jg
cmp
scas
xchg
push
jnp
leave
bound
xor
xchg
icebp
pop
call
mov
nop
cld
xor
cmp
ljmp
stos
jmp
rorb
lock
push
aaa
std
mov
sahf
inc
movsb
aaa
decl
push
xor
nop
ljmp
jecxz
mov
pushf
xor
js
mov
cld
xor
push
push
andl
stos
mov
jl
add
pusha
mov
mov
fdivs
fs
cli
incl
xchg
loope
mov
loop
mov
cmpsl
lods
add
jbe
pop
jmp
fdivr
incl
popa
jnp
data16
sbb
cs
rol
aam
mov
loop
or
ljmp
aam
xor
push
popa
int
loopne
xchg
je
add
sti
xor
pusha
pop
mov
push
fisubl
jns
sub
jns
sub
iret
nop
jo
les
sub
cld
ret
decl
cs
inc
repnz
push
xchg
decl
adc
add
sarb
jl
cwtl
test
add
sub
pop
clc
jmp
popf
pop
clc
imul
fistps
stos
jle
sar
call
sbb
cwtl
fiaddl
cmp
mov
adc
int3
divl
call
mov
pusha
xchg
sub
adc
push
xchg
adc
cmp
and
mov
mov
cmc
cmp
push
push
mov
push
mov
sarb
mov
std
pop
cmp
jg
mov
add
lods
out
shrb
sti
and
fnstsw
jmp
imul
jmp
out
lahf
scas
js
add
rcl
bound
bswap
fmuls
mov
not
popa
clc
jp
pop
mov
sti
rol
xchg
lock
lods
pushl
shl
cld
pop
xchg
outsb
mov
shrl
dec
mov
in
cmp
xchg
incl
lods
push
or
jo
scas
lcall
comiss
int3
pop
in
test
add
dec
aad
sahf
mov
iret
out
dec
and
rcrb
daa
inc
dec
mov
jnp
or
or
ljmp
pushf
shrb
insl
cmp
out
loopne
rcl
test
rorb
js
outsl
cli
inc
das
out
adc
popf
fadd
and
fdivrl
push
movsb
inc
psraw
lcall
je
insl
xlat
push
jae
lock
insl
pop
dec
mov
push
fsubs
es
loopne
and
fcomip
jmp
aad
sbb
cli
jae
stc
sub
adc
pop
orb
adc
and
adc
xchg
and
xor
call
call
test
movntps
inc
loop
outsb
out
sbb
sbb
xor
sbb
push
fs
and
xchg
loopne
lret
lcall
sub
es
mov
jmp
rcrl
je
xor
lcall
xorb
jnp
cmpsb
add
push
in
mov
mov
pop
inc
pop
clc
inc
dec
movsl
cmc
rclb
jle
inc
dec
ret
or
ljmp
neg
sarl
daa
out
cmp
or
push
mov
push
iret
gs
decl
adc
adc
rcll
pop
repz
mov
decb
aam
mov
cmp
call
decb
adc
aas
pop
cmp
daa
movsb
shrb
rcll
mov
mov
rorb
sub
mov
dec
mov
push
fldl
aam
push
mov
inc
xor
jmp
dec
xchg
stc
xor
jnp
cmp
pop
push
add
mov
clc
jmp
jecxz
add
jg
insl
loope
sahf
jp
das
clc
pushl
pop
xchg
dec
sti
aas
nop
shlb
mov
loop
rorb
jmp
loope
ret
movsb
mov
push
out
mov
xchg
inc
push
inc
jle
jo
leave
dec
xlat
xchg
lret
cmp
movsl
fcoms
push
push
pushf
lds
insb
fstpl
dec
lds
mov
mov
xchg
mov
test
or
push
pushl
xchg
cmp
mov
xor
lods
xor
dec
test
lea
sbb
fbld
add
or
and
push
cmp
pusha
icebp
je
into
xchg
lcall
mov
push
adc
ficoms
pop
fidivl
sub
decl
xchg
xchg
push
loopne
test
repz
mov
xlat
test
div
fists
icebp
lahf
mov
and
add
cmp
xor
fnsave
mov
std
add
dec
pop
push
dec
packssdw
mov
xor
adc
lcall
jns
lock
scas
test
xor
aaa
repz
repz
ss
fcoml
mov
in
mov
jo
les
test
andb
mov
iret
dec
push
mov
pop
fdivrs
mov
pop
int3
sbb
mov
jg
add
xor
test
call
loopne
push
js
into
dec
jecxz
lods
dec
mov
mov
push
inc
push
aad
mulb
aas
xchg
div
and
in
into
mov
adc
mov
shlb
pop
xchg
dec
sub
jg
into
shlb
shlb
push
mov
call
pushf
sbb
ljmp
lret
sbbl
add
add
dec
fdivrs
xchg
cmpsl
test
test
lcall
insb
sub
xchg
pop
add
push
daa
jg
mov
inc
push
scas
test
jmp
setb
sti
cltd
out
shlb
bound
push
fwait
xchg
mov
adc
jecxz
sti
popa
jmp
ret
jb
pop
or
and
xor
icebp
rcll
cmp
mov
push
gs
lcall
push
push
adc
fadd
sbb
adc
xor
stos
lods
push
mov
mov
call
xor
cli
imul
bound
bound
pop
xor
ljmp
inc
sbb
inc
pusha
cmp
sbb
repnz
pop
inc
jmp
jmp
incl
sub
leave
lcall
dec
pop
mov
pop
cmp
cltd
scas
xchg
dec
rol
jmp
lcall
push
out
adc
scas
int3
dec
sub
repz
pop
and
popa
xor
adc
sbbl
adc
inc
xchg
push
sub
subl
call
nop
push
incl
sbb
insl
out
in
mov
mov
fisubl
jp
in
daa
cmp
dec
xchg
dec
insb
outsb
jle
shlb
inc
fcom
call
jmp
popa
jp
xchg
call
xchg
push
adc
sub
xchg
js
stos
call
and
cmc
out
pop
cmp
hlt
add
push
sbbb
xor
nop
jmp
lea
jle
lcall
mov
lret
gs
add
mov
cmp
sar
mov
and
xchg
mov
inc
lds
outsb
data16
dec
sbb
shlb
xor
cld
jg
fdivrs
jo
add
xor
push
decl
scas
jg
push
lret
push
fistpll
jbe
xor
jecxz
jno
call
decb
add
daa
or
lret
mov
sti
into
mov
call
add
fcoms
inc
xchg
fistpll
push
mov
sahf
dec
push
das
and
lcall
dec
cmpb
hlt
pop
mov
xchg
add
filds
int3
jae
out
into
add
add
add
aas
xchg
repz
sahf
shlb
xchg
fidivs
mov
movsb
push
mov
sahf
add
cmp
outsl
jnp
clc
push
add
push
push
lock
fs
dec
into
fists
mov
ja
push
or
inc
fwait
dec
inc
clc
jg
decl
clc
movsb
xchg
and
sub
mov
imul
aam
cmp
nop
clc
inc
add
cmp
mov
xor
neg
mov
mov
xor
scas
add
in
cmp
inc
fwait
cmp
cmp
lcall
mov
repnz
or
roll
das
or
dec
mov
sub
pop
into
fidivrs
adc
mov
inc
scas
jno
es
sub
pop
stos
lcall
adc
enter
inc
sbbb
dec
pop
pop
leave
dec
imul
hlt
lcall
mov
xchg
adc
rcll
hlt
icebp
xchg
stc
xchg
call
jge
dec
cwtl
call
mov
mov
add
and
or
fwait
push
push
pop
stos
mov
or
out
mov
push
cld
filds
pop
mov
decl
mov
and
iret
sbb
out
outsl
mov
repz
inc
xchg
mov
and
jmp
cmp
push
xchg
mov
cs
mov
adc
xor
fwait
ljmp
jge
leave
jns
ljmp
mov
leave
les
inc
dec
movsb
mov
cmp
incl
lcall
in
cld
sbb
int
dec
mov
xor
icebp
decl
mov
xchg
add
pop
shr
repnz
and
mov
imul
adc
aaa
std
incl
xchg
jl
imul
out
xchg
in
aam
and
out
xchg
pushl
cmp
cld
jno
mov
rcrl
icebp
xor
stos
inc
hlt
add
jb
pop
sbb
pushl
xchg
inc
pop
mov
pop
mov
sbb
pop
mov
mov
decl
lods
gs
sbb
inc
lea
pusha
fwait
test
out
outsb
mov
inc
pop
decl
mov
lahf
stc
mov
cmpsl
lret
cwtl
popa
fisubrl
ljmp
aam
sbb
shlb
fbld
add
ljmp
sahf
lret
adc
lds
push
and
and
mov
clc
insl
mov
pop
xor
push
sbb
and
xchg
pop
clc
push
xrelease
or
arpl
mov
mov
dec
cltd
gs
enter
repz
incl
dec
push
in
jg
fs
movl
test
sbb
mov
mov
adc
cmp
and
lret
jg
test
pop
pop
test
add
inc
idivb
and
imul
in
pushf
inc
mov
push
xor
test
icebp
sbb
iret
dec
lods
ja
push
pop
xchg
loope
or
xorb
lahf
fs
int
data16
add
xchg
jp
xor
imul
jmp
pop
mov
ret
cmpsb
sub
xor
sbb
sbb
jns
pop
xchg
bound
aaa
std
fisttpl
sub
les
push
lret
pusha
bound
int
jae
cmp
jg
test
and
sub
jns
xchg
adc
or
ljmp
mov
mov
jge
std
or
sub
push
inc
cli
jmp
lcall
shrb
adc
inc
je
or
outsb
lcall
jnp
pop
mov
xor
adc
mov
lret
jp
dec
mov
call
cld
sbb
cs
rcrb
mov
xchg
and
fcomip
xor
mov
xor
cs
adc
mov
jo
fs
and
enter
decl
and
cltd
out
xchg
les
bound
data16
fwait
dec
dec
cs
in
call
add
pusha
pop
sub
pop
jmp
das
cld
fsubrl
iret
loop
in
sar
loop
cmpsl
jmp
xor
in
dec
fmull
mov
mov
test
adc
dec
pop
es
xor
adc
jmp
inc
adc
std
out
pushf
adc
aas
mov
mov
xor
clc
inc
add
xor
jp
adc
adc
call
jmp
loop
xchg
cmc
adc
sub
imul
js
cmp
cmp
jmp
pop
or
scas
mov
leave
scas
sbb
fmulp
les
imull
mov
ja
or
mov
icebp
sub
setg
int
adc
push
fdivrp
call
adc
jl
xorb
inc
sub
mov
add
sahf
or
push
mov
push
mov
adc
incl
popa
jl
cmpsb
jl
or
arpl
orl
xlat
cmp
pop
sar
call
scas
ss
test
or
sub
sub
shll
cmp
outsl
add
ds
jmp
fwait
xor
fmulp
xor
test
fidivs
insb
jne
in
mov
mov
and
andl
xchg
push
pop
and
lahf
mov
out
gs
lcall
andb
xor
popf
pop
addr16
loope
cmpb
sbb
ds
movsl
aad
sahf
mov
popa
outsl
clc
call
xchg
pop
sbb
nop
lods
push
call
mov
andb
decl
or
rcrl
push
stc
mov
mov
out
mov
push
popf
add
mov
decl
shl
ss
jmp
nop
cs
sub
das
sub
mov
outsl
jo
pop
fucomp
call
or
cli
out
ret
xor
xchg
mov
mov
insl
lock
adc
mov
mov
lock
adc
cld
pushl
adc
test
mov
ds
hlt
xlat
sahf
mov
xorb
push
dec
shlb
inc
adc
popa
fsts
cmp
iret
xchg
ljmp
jmp
decb
dec
and
sub
push
pop
lret
outsb
decl
cmc
jo
mov
add
or
ret
sbb
mov
ret
sti
jp
mov
adc
popf
and
xor
mov
dec
out
daa
jne
incl
mov
adc
lret
mov
and
pop
stos
shlb
dec
call
and
inc
ljmp
stos
insl
mov
ljmp
jo
cmp
xchg
cmpsl
pop
mov
adc
add
inc
insl
push
stos
cld
cs
lock
jmp
addr16
xlat
lret
iret
sub
mov
gs
sbb
mov
push
rcr
cmp
inc
cmp
jg
repz
inc
inc
mov
sbb
movsl
sbb
push
cmp
jmp
xor
adc
rcrb
jg
hlt
mov
imul
mov
rorb
decl
add
inc
xor
repnz
xor
popf
mul
or
jmp
pop
push
sti
pop
push
lods
sub
sbb
sbbb
dec
sub
inc
subb
pop
loopne
xor
mov
push
fimull
in
rcrl
jp
cld
jmp
sub
add
jecxz
test
adc
stos
inc
stos
mov
jl
repnz
incl
mov
and
jg
std
mov
and
or
lahf
or
pusha
jnp
mov
sbb
push
imul
dec
and
mov
cltd
negl
ret
mov
mov
xor
push
jg
dec
cld
mov
inc
cs
and
test
ljmp
stc
cmpsb
adc
idivl
jne
imul
adc
out
push
sti
push
sub
adc
sbb
mov
pusha
or
mov
popf
call
loop
add
sub
adc
fidivrl
dec
ror
sbb
js
mov
add
jns
xchg
daa
sub
scas
test
jle
sbb
aas
pop
adc
jbe
lret
cli
jmp
clc
jmp
cmpsb
out
sub
xchg
fwait
out
in
std
out
inc
mov
mov
ljmp
lret
push
dec
pop
inc
lods
loope
cmp
cmp
insb
sub
enter
ds
mov
cmp
fistps
xchg
inc
mov
adc
add
ja
insl
xchg
cmpb
jmp
jae
stos
jl
sbbl
or
icebp
jl
and
inc
mov
pop
lcall
add
es
and
inc
das
add
stc
pop
std
push
lods
notb
dec
in
xchg
aam
adc
fwait
mov
aas
sarb
aad
dec
inc
outsb
iret
pop
rolb
jp
jae
jmp
popl
dec
pop
ss
gs
repnz
add
lahf
dec
lahf
lahf
insb
aas
cmpsl
mov
mov
ud0
call
nop
inc
xchg
push
test
fs
mov
dec
push
mov
pop
ja
jae
push
in
int
bound
call
mov
ja
bound
adc
dec
fstl
push
fdivrs
imulb
jmp
sarl
inc
mov
xor
ds
shrl
cmp
mov
mov
mov
sbb
sarl
movsb
subl
aaa
jae
sbb
push
cli
ljmp
cmp
dec
out
mov
lods
mul
and
lcall
stos
aas
divl
cmpsb
push
xchg
das
jns
dec
inc
xchg
enter
decl
add
lds
out
xchg
pusha
jmp
xor
pop
jge
inc
andl
fldenv
sar
fcmovb
cltd
test
lahf
cmpsl
add
repnz
test
fwait
adcb
cmpsb
jg
outsl
es
push
stos
mov
xor
dec
data16
mov
jb
shrb
dec
or
incl
push
xor
rorb
out
test
es
scas
clc
decl
test
and
test
sti
lret
add
adc
in
fwait
call
gs
andb
gs
inc
jl
push
and
or
jge
into
add
ljmp
jmp
cmp
fs
gs
jno,pn
mov
in
cmpsl
outsl
das
jle
pop
repnz
orb
inc
test
xchg
mov
ljmp
or
fimuls
addl
loopne
aaa
sub
adc
pop
jg
and
pop
clc
cli
insl
icebp
movsb
sub
mov
or
dec
pop
sub
add
test
adc
jge
lock
lret
pushl
or
in
loope
subb
pop
jmp
push
lods
mov
loopne
loop
jmp
ljmp
enter
fdivrl
incl
sub
adc
test
aaa
mov
cmp
movsl
jmp
pushl
push
xchg
mov
mov
mov
out
cs
dec
pop
outsb
icebp
mov
stos
sub
jmp
inc
cmpsl
dec
mov
cmp
jg
call
shll
add
pop
jp
mov
and
mov
mov
mov
pop
inc
ja
inc
mov
imul
test
pushf
push
data16
or
push
shr
xchg
ret
nop
jo
add
jno
sub
push
mov
lcall
jge
leave
fistpll
js
inc
xlat
mov
mov
arpl
jno
xor
adc
cld
jl
sub
xchg
and
and
inc
inc
add
push
out
xor
mov
sbb
xlat
ret
jns
jmp
xchg
rcrl
loopne
adc
pop
pop
pop
mov
xor
sbb
inc
dec
hlt
daa
ljmp
cmp
ljmp
jle
fbstp
lock
adcl
jg
fistpl
push
xchg
enter
jecxz
pop
cs
movsb
mov
xchg
lock
decl
outsb
cmp
shrb
stos
pusha
outsl
test
xchg
data16
fists
pushl
cli
add
jnp
jg
xor
popf
insl
cs
sbb
test
bsf
push
mov
lods
cmp
aam
inc
cmp
jge
pushf
mov
shrl
jp
mov
mov
cmp
popa
repz
popf
sbb
imul
fildl
lcall
cwtl
mov
inc
dec
xchg
dec
sub
xchg
push
xlat
rcrb
xchg
andb
xlat
sar
movsb
fcoms
sbb
push
adc
pop
js
push
insb
mov
sbb
mov
cmp
fsubrl
enter
ljmp
and
popf
push
pop
pushf
jo
mov
rep
rol
mov
push
in
pop
aaa
pushl
push
or
lods
hlt
and
pop
dec
dec
out
mov
cmp
sub
jle
outsb
xchg
lcall
push
lcall
fldl
push
xchg
mov
test
pop
push
push
and
fildll
incl
out
icebp
cmp
adc
les
dec
mov
int3
add
call
jmp
inc
loop
cmp
aam
sub
pop
inc
or
pushf
ja
xchg
fdivl
dec
inc
in
push
jb
and
scas
pop
adc
add
insl
rorb
push
push
arpl
xlat
mov
shll
add
cmp
test
pop
test
loopne
or
xchg
call
push
cmpsl
aad
sbb
imul
test
pusha
inc
pop
lret
lret
js
fmul
dec
shlb
pop
fadds
inc
inc
fbld
out
fldcw
out
push
stc
imul
insb
pop
pop
mov
sub
mov
rcrl
movsb
mov
in
rdpmc
in
pop
jnp
sbb
decl
sub
fcmovne
adc
lret
nop
xor
test
in
xchg
push
add
xchg
call
or
mov
xor
pop
xor
lea
cvttps2pi
xchg
rorl
jo
dec
fldt
jo
jb
nop
sub
rcrb
adc
inc
js
rolb
outsl
xchg
xorl
sahf
add
sub
int
mov
dec
jae
mov
nop
dec
xor
xchg
in
pop
roll
sub
inc
sbb
sti
pop
gs
mov
insl
ljmp
cmpsl
mov
lock
lret
int
aam
mov
xor
cmp
push
in
push
inc
mov
insb
test
inc
aad
mov
push
outsb
add
jmp
cmc
cwtl
call
xor
cmp
cmp
addb
aaa
jbe
sbb
mov
sub
movsb
adc
sub
xor
push
mov
lea
ret
ds
mov
cli
mov
leave
orb
cmp
mov
sub
sub
movsl
popf
dec
adc
and
mov
mov
incl
cmp
rolb
add
add
cli
xor
scas
outsl
jno
lcall
mov
xor
ficomps
outsl
sub
ret
imul
inc
cwtl
mov
xor
in
inc
mov
push
je
xor
lock
call
jl
or
dec
xchg
or
stos
ficompl
popf
mov
scas
jmp
call
lds
out
leave
sub
mov
out
repnz
xchg
xor
test
dec
repnz
inc
out
cmc
pop
test
inc
incl
inc
or
mov
lret
fiadds
aaa
int
sub
lahf
call
call
jbe
mov
pop
out
stos
cmp
sbb
ret
sarl
incl
add
lods
mov
add
cmpb
push
mov
bound
push
leave
jns
mov
jae
decl
and
jae
or
int3
jecxz
icebp
add
jl
js
dec
sbb
icebp
cltd
dec
outsb
jmp
dec
inc
stos
xchg
dec
dec
jge
fnstcw
adc
fldenv
sbbb
cmp
jmp
pusha
lcall
sub
fwait
aaa
sub
add
add
out
hlt
aam
cmp
add
sti
add
in
shrb
jg
adc
arpl
js
outsb
lods
mov
incl
in
ds
adc
shll
scas
inc
cli
lahf
lock
adcb
jmp
ret
ljmp
addr16
and
and
xchg
push
pop
mov
jp,pt
and
enter
and
sar
decl
and
icebp
jg
mov
fldcw
or
mov
std
mov
aaa
push
hlt
mov
sbb
xor
gs
rol
adc
pushl
sbb
mov
push
mov
mov
cmp
push
sub
push
ljmp
mov
fcmovu
repz
les
jns
dec
leave
sbb
jecxz
cmpsl
push
ffreep
or
adc
pop
add
inc
lds
pusha
addr16
add
adc
or
fwait
sahf
push
ret
js
sub
xchg
xchg
insb
and
and
loop
pop
adc
out
ja
fisubrs
leave
out
sbb
testb
mov
pushf
arpl
test
jbe
dec
jp
out
out
or
pop
push
outsb
mov
int3
icebp
call
inc
jle
add
test
ret
lock
sbb
faddl
or
stc
dec
imul
fs
jle
inc
mov
insl
mov
push
ljmp
and
or
dec
pop
jne
orb
mov
mov
add
push
mov
mov
fwait
insb
cmpsl
in
gs
decl
mov
dec
and
xor
shlb
mov
and
jmp
push
jp
loop
je
sub
jl
jp
jbe
test
jae
mov
jo
pop
adc
les
decl
xchg
lret
popf
ss
ds
daa
fwait
inc
mov
daa
xchg
lahf
xchg
aaa
fstpt
pop
rcll
lcall
jmp
imul
mov
xchg
ss
addr16
lcall
add
int3
dec
jae
lods
aas
xor
stc
xchg
jge
fdivp
mov
pop
push
mov
out
incl
mov
sbb
into
mov
pop
call
mov
mov
inc
pop
dec
icebp
inc
clc
jp
jmp
jg
jmp
xor
and
fucom
jge
mov
and
fwait
stos
mov
sub
stc
sub
ljmp
and
cmpb
popa
sti
mov
pop
sub
daa
and
decl
jne
scas
jne
mov
ret
int
imull
ljmp
pop
gs
and
test
in
ss
and
call
hlt
mov
call
fadd
push
out
test
arpl
mov
mov
jg
xor
jae
jmp
inc
xchg
ret
cli
in
cmp
mov
push
adc
push
lea
sbbl
outsb
lcall
ja
nop
mov
in
adc
mov
xchg
mov
dec
sbb
inc
repnz
fcom
loopne
notl
int3
mov
push
fimull
adc
inc
lret
mov
call
fimuls
cmpsl
ret
fldenv
ljmp
xorb
jl
xchg
jmp
mov
jnp
data16
pop
cmp
mov
pop
out
push
cmpsb
inc
movsb
sub
test
movsb
adc
pushl
push
decl
mov
stc
or
dec
popf
lret
cld
dec
bound
outsb
mov
in
test
incl
push
ret
sub
sub
xchg
mov
xabort
pop
int
jge
mov
mov
add
adc
leave
bswap
jg
int
jl
inc
inc
jle
fldt
decl
movsl
sub
push
xchg
xchg
ficoml
mov
push
std
pop
adc
or
jmp
out
dec
and
pop
fstl
add
push
sub
fcomip
lcall
jge
jbe
jnp
fisttpl
jno
push
test
pop
fisubrl
jmp
pop
xor
in
decl
xchg
loopne
loope
push
test
jle
cmp
arpl
call
incl
mov
push
push
mov
insl
and
in
sub
test
fisubrl
inc
lock
pop
pop
mov
arpl
aas
ret
addr16
aaa
std
rcrb
outsb
cld
push
add
dec
push
xor
add
ljmp
pop
cltd
por
or
inc
out
test
mov
sbb
mov
rcl
add
sub
mov
cmp
pshufw
out
test
lock
lret
sti
sbb
decl
aas
cs
stos
add
xchg
dec
sub
imul
fwait
mov
or
mov
in
fisubrs
jns
scas
maskmovq
notl
mov
outsb
out
filds
xchg
push
dec
mov
xor
insl
leave
ljmp
push
pop
iret
sub
mov
xchg
repz
popf
outsl
lock
jb
dec
lds
mov
js
mov
jb
sub
jne
adc
out
js
lea
inc
mov
pushl
jns
dec
incb
mov
mov
insl
arpl
mov
es
mov
xchg
sti
ret
xor
fmull
pop
mov
jp
aaa
add
sti
mov
push
fidivl
adcb
out
inc
data16
cmpsl
push
hlt
dec
cmp
xor
lds
test
test
insb
dec
and
xor
rcrl
decl
inc
in
pop
std
or
mov
das
test
sub
adc
adc
fnstsw
cmp
jns
xor
ret
fistps
mov
push
push
mov
mov
lea
ds
mov
and
sbb
ljmp
mov
pusha
repz
pop
adcl
test
icebp
ret
add
outsl
shlb
ja
in
icebp
cmpsl
xchg
aam
in
inc
imul
roll
test
outsl
nop
pop
jmp
cmc
pushl
xor
flds
sub
and
dec
or
sub
fldl
dec
fwait
mov
jl
adc
dec
popf
xor
jno
fucomip
lcall
jmp
jne
stos
or
jle
call
out
in
outsl
les
mov
filds
push
in
xchg
mov
fmuls
dec
fistpll
std
lcall
mov
clc
push
fidivrl
cmp
in
fucomp
sahf
cld
push
fxch
jge
and
adc
add
xchg
dec
adc
in
jno
fildll
cmp
subb
and
or
pushl
xchg
or
dec
bound
push
xchg
sub
xchg
inc
xchg
mov
inc
sbb
movsl
add
decl
push
addl
outsl
mov
pop
in
clc
adc
addb
jmp
repnz
push
dec
jb
push
into
cltd
idiv
stos
jb
mov
push
push
arpl
sub
call
dec
jge
adc
xchg
sub
into
stc
pusha
pop
xlat
outsl
mov
inc
and
aaa
in
enter
jmp
adc
xlat
fists
sub
jg
inc
push
mov
cmp
dec
mov
int3
ja
push
movsb
cmpsl
insb
notb
sbb
cwtl
mov
jnp
pop
aam
mov
and
adc
mov
mov
test
call
pop
sbb
mov
call
je
mov
cltd
cmc
int
push
xor
rcll
in
push
inc
ret
dec
in
cmc
mov
decl
sahf
and
lods
repz
add
dec
sbb
testl
decb
and
add
in
pop
pop
pop
rclb
add
pop
in
pop
testl
jp
add
dec
faddp
xchg
xchg
mull
je
xchg
mov
std
adc
sahf
fwait
mov
xlat
add
add
scas
test
iret
mov
int
repnz
decl
lahf
xchg
fldcw
call
in
inc
and
push
xor
mov
outsl
clc
xor
cwtl
pop
gs
sbb
rcll
cld
pushl
ret
leave
or
test
leave
adc
mov
bound
or
fcomps
out
fiaddl
jle
or
xchg
xor
je
pop
inc
out
adc
jo
clc
jns
push
xor
lcall
int3
aam
pop
arpl
mov
ret
pop
scas
popf
clc
or
rclb
adc
xor
call
imul
and
fidivl
lea
push
add
and
push
and
in
and
dec
stos
add
pop
dec
shr
cwtl
sbb
push
cltd
testb
pushl
pop
cmp
mov
dec
les
imul
xchg
gs
jb
jmp
and
adc
adc
je
mov
push
xchg
into
mov
int3
mov
pop
fidivs
movsl
aas
test
xor
ljmp
sub
adc
sbb
pop
push
rorl
push
xchg
int
xor
mov
jnp
cmp
ljmp
jnp
aad
or
popl
lcall
sbb
aas
sahf
pushl
mov
push
sub
xlat
sahf
out
jns
and
jns
xor
mov
call
cwtl
das
jmp
mov
lret
push
sub
mov
sbb
pop
je
rclb
in
sarl
imul
incl
movsb
push
loope
mov
sarl
cmc
push
jl
adc
test
cmp
pop
outsl
jbe
ds
call
jmp
into
shrb
loop
xchg
clc
xlat
or
push
xor
sub
ljmp
sub
dec
sbb
ljmp
cmc
fsts
mov
pushl
ss
cmp
jecxz
in
jecxz
pop
xor
xor
sarb
hlt
decl
mov
mov
rclb
fwait
mov
adcb
ret
push
jne
icebp
mov
sar
inc
mov
mov
adc
xlat
gs
cmpsl
push
xor
sbb
fimull
stos
lcall
sbb
adc
out
adcl
mov
ljmp
xor
das
push
loopne
push
jo
cli
inc
pop
loop
mov
pop
cmp
aaa
out
insl
sbbl
cld
loopne
inc
cmpsb
push
fsubl
mov
pusha
and
jno
loope
ljmp
arpl
xor
sub
xchg
adc
loop
jecxz
lcall
pusha
loop
adc
jns
inc
jno
jns
decl
and
sub
fiaddl
push
test
into
enter
inc
sbb
testl
dec
lret
lock
pushl
aam
jo
push
cmp
jl
and
in
idivl
js
and
clc
ljmp
repz
and
xchg
insl
xchg
dec
cs
inc
xlat
lahf
cld
cmpsl
or
dec
or
fstl
and
push
cli
add
jbe
push
cmp
incl
mov
dec
cs
and
mov
or
xchg
aad
pop
ljmp
test
cmp
imul
lock
add
add
movsl
rolb
frstor
xor
fs
lcall
out
ss
in
jne
repz
cld
mov
jmp
icebp
cmpsl
mov
inc
or
mov
outsb
jae
push
fs
lds
mov
out
aas
aad
imul
decl
xchg
or
adc
or
push
cwtl
mov
push
xchg
lret
shlb
xchg
pop
nop
pop
jne
sbb
pop
scas
xchg
bound
cmc
mov
aaa
fmul
dec
lret
das
inc
sti
rorl
loopne
scas
xchg
popa
mov
dec
mov
and
lcall
cmp
sub
mov
xchg
addr16
sbb
mov
dec
mov
sub
incb
aam
dec
fsubs
das
icebp
jbe
fimuls
jg
jmp
bound
sarb
mov
cmpsl
dec
add
test
addr16
lods
jmp
mov
cld
out
je
jg
pop
or
insl
cmpsl
js
push
test
sti
push
into
rolb
mov
push
add
dec
mov
fildll
xchg
jecxz
mov
ret
push
push
ss
mov
xchg
jg
call
stc
notl
lods
mov
sub
insb
xorb
adc
incl
movsl
cmp
adc
xchg
jns
and
jl
and
cli
cmp
fadd
pop
mov
cli
xchg
ljmp
xor
je
out
aaa
aad
lret
dec
jmp
je
vmovd
dec
push
cmpsl
mov
and
push
sahf
aad
fildll
fdivr
push
hlt
push
data16
fisubl
push
cmpsb
sbb
sub
xchg
lock
xchg
sbb
ljmp
outsl
mov
cmp
rorl
and
push
pop
fsts
pop
and
mov
sbb
inc
add
push
xor
jg
lcall
add
aam
mov
fimuls
inc
pushl
mov
es
aaa
mov
jle
dec
repnz
mov
int
mov
adc
inc
aas
xor
push
pusha
dec
int
ret
push
stc
stos
mov
imulb
push
test
adc
repnz
jmp
or
and
std
push
call
ljmp
push
sbb
mov
das
insb
jne
mov
sbb
sub
mov
jmp
pop
or
adc
cmp
es
in
lods
or
or
aas
adc
in
ja
pushl
cmovge
push
inc
or
test
xchg
cmp
pop
out
pop
scas
add
cmp
inc
jp
roll
push
daa
xchg
pop
sti
icebp
jg
mov
pop
push
mov
jmp
and
mov
jmp
into
add
lcall
jg
mov
fisubrs
lret
jb
push
mov
pop
mov
fimull
in
mov
clc
pushl
hlt
cmp
and
cmp
push
cmpsl
xor
sbb
jg
ljmp
sbb
xchg
or
and
stos
push
sub
imul
add
pop
cmpsb
mov
jg
enter
push
xor
mov
xchg
adc
adc
mov
test
test
shl
outsl
jg
fsubrs
inc
jg
dec
sbb
test
add
and
jnp
cmp
mov
cwtl
inc
adc
cld
cmc
pop
push
decl
movsb
mov
repz
push
mov
roll
into
sbb
imul
fs
pop
es
pop
mov
push
mov
incl
jmp
jle
imul
adc
adc
or
cmp
das
and
mov
lcall
outsb
xlat
adc
push
add
and
and
sbb
lds
xchg
adc
or
mov
jo
ror
or
insb
cmpsb
adc
pushl
popf
jmp
lods
add
ret
sub
clc
frstor
mov
xor
les
call
add
inc
das
lahf
addb
mov
js
clc
lret
ret
sbb
call
cmc
fwait
dec
sub
leave
cs
imul
clc
int
insl
das
test
testb
je
rclb
pop
sbb
lds
and
xchg
mov
mov
stos
jbe
rcll
in
aas
jg
inc
cs
pop
inc
pop
add
mov
bound
pushl
inc
ret
fdivr
pop
jl
or
stc
outsb
repnz
fnstenv
and
pushl
mov
pop
inc
movsl
in
aas
mov
rcr
cld
jno
adc
out
pushl
sbb
mov
or
add
mov
mov
call
les
incl
jmp
js
cld
jne
rcll
lock
ret
cltd
out
dec
ffreep
sti
mull
mov
or
add
cmp
in
xor
push
lods
push
call
push
xchg
nop
xchg
mov
inc
popa
lcall
incl
mov
dec
pop
repnz
xor
pusha
and
or
or
aas
arpl
xchg
mov
xchg
and
jmp
fcomps
mov
fisubrl
hlt
test
ja
lcall
pop
lahf
call
daa
jbe
popf
jge
dec
adc
pop
testl
or
mov
fiadds
cmp
loopne
mov
and
xor
loopne
cld
ss
jne
adc
push
xorl
icebp
sbb
adc
mov
ljmp
lahf
jg
cmp
je
mov
push
and
xchg
cmpl
call
lret
shlb
popf
lods
outsb
push
inc
fbstp
repz
popa
fldt
ud1
call
mov
mov
ds
cltd
pop
outsl
push
js
and
mov
decl
jp
pop
fbld
scas
inc
mov
add
cli
or
mov
mov
into
aad
jl
mov
mov
mov
push
pop
roll
aaa
cld
idiv
mov
fcmovu
ss
adc
push
aam
in
stos
es
jp
dec
sar
ljmp
mov
adc
les
inc
fwait
addl
push
lock
jg
outsl
mov
insl
mov
dec
repz
test
inc
pusha
add
sub
mov
xchg
scas
pushf
out
fdivr
out
adc
lret
jg
and
imul
push
les
cmc
jnp
mov
lret
inc
outsb
or
dec
pslld
fldl
mov
shrb
incl
xor
dec
daa
fdivrl
mov
mov
add
lret
mov
add
mov
dec
nop
aaa
mov
jo
ljmp
insb
xchg
cmp
add
ljmp
dec
inc
xchg
or
dec
pop
jecxz
jl
pop
add
xchg
mov
call
cmp
test
pop
scas
xchg
or
loope
xlat
and
push
jbe
loope
dec
mov
mov
lret
js
mov
jns
cmc
icebp
addb
jo
std
cmpb
inc
lods
adc
jbe
jmp
pop
jmp
dec
mov
jnp
cli
and
call
jmp
leave
mov
pusha
cmp
adc
inc
pop
adc
and
mov
push
pop
fdivrl
xor
mov
enter
mov
cmc
jbe
nop
xchg
fstpt
popa
adc
jae
mov
or
incl
in
pusha
add
fdivp
dec
jno
mov
out
daa
sti
mov
incl
ljmp
push
shlb
lahf
jmp
ret
addb
add
data16
mov
add
jg
mov
jae
adc
arpl
push
add
pop
mov
call
xor
xlat
fwait
add
xlat
push
pop
mov
sub
add
mov
pop
pop
fnsave
lcall
aam
mov
aad
cmp
cltd
and
imul
sub
pop
mov
jmp
and
ds
and
ret
sbb
mov
or
xlat
and
jle
and
fisttps
lods
jne
cltd
or
jae
int
sbb
fxch
jmp
mov
pop
inc
mov
movsl
ss
icebp
sub
aaa
out
dec
mov
call
int3
sub
fs
adc
insb
jecxz
pop
or
push
mov
imul
pop
pop
imul
jmp
and
inc
adc
cmpsb
sub
mov
mov
lret
cmp
lcall
pop
jne
loopne
pushf
pop
dec
arpl
xor
add
sarb
outsb
or
adc
push
sahf
ja
dec
mov
inc
std
sti
xlat
mov
push
test
jmp
and
mov
outsb
lahf
or
push
jge
icebp
andb
inc
std
dec
cld
call
pop
mov
repz
mov
or
adc
jle
sbb
pushl
pop
sbb
mov
or
push
jp
pop
fwait
cli
stos
sbb
and
sub
sub
jmp
repnz
mov
cmp
movsb
inc
lods
mov
ljmp
add
out
mov
scas
pop
cmpsl
aad
and
and
ret
lock
pop
dec
clc
dec
push
cmp
xchg
xchg
pop
pop
jae
decl
decl
mov
jge
inc
int
outsl
das
aam
inc
sub
dec
xchg
das
decb
inc
inc
mov
into
call
mov
cmpsl
xor
jne
in
filds
pop
mov
and
into
je
test
ljmp
inc
enter
mov
faddl
ret
adc
jl
jmp
out
call
test
jo
lahf
cs
ret
cwtl
jmp
mov
push
scas
jns
ljmp
inc
lahf
mov
add
out
add
jo
aaa
xchg
fimull
lret
mov
test
pushl
xor
mov
les
ljmp
stos
subb
imul
outsb
sbb
andl
xchg
jnp
push
xchg
das
adc
dec
sbb
or
mov
or
pop
inc
pop
mov
jmp
xchg
fdivrp
xchg
lock
dec
loope
and
arpl
sti
lret
fimull
jmp
add
inc
mov
push
sbb
imul
sub
jb
cmpsb
into
aam
lahf
test
jns
pop
inc
mov
jae
mov
sbb
fldenv
xor
call
data16
in
mov
out
xor
stc
mov
lods
lret
call
ret
jmp
mov
cmp
je
fs
fcmovb
mov
sarb
out
in
xor
add
jg
pop
lret
inc
push
idiv
add
or
in
inc
icebp
mov
jmp
mov
sub
mov
arpl
jge,pn
int
push
ret
cmpsb
pop
or
add
ljmp
rorb
xchg
les
lret
negb
cli
es
dec
stc
adc
push
mov
xor
pop
jecxz
imul
sbb
rorb
fidivrl
decb
pushl
das
push
xor
xor
mov
rolb
inc
fbld
pop
xor
inc
scas
insb
lods
dec
addr16
add
pushl
jmp
mov
call
cmp
lods
out
hlt
pop
loope
ljmp
incl
push
ret
dec
je
cmp
pop
jns
inc
adc
mov
pop
in
push
mov
call
inc
inc
cmp
arpl
xor
je
lea
cmpsb
loope
xchg
add
test
jmp
xchg
testl
sti
loopne
mov
jne
push
ja
lcall
incl
sub
out
jne
mov
sub
cmp
cmpsb
mov
adc
filds
and
insl
rcrb
sbb
or
insl
fs
jge
vmwrite
push
jmp
das
cli
call
repnz
lcall
sbb
mov
sbb
cmc
mov
lcall
incl
lock
ljmp
inc
jae
fists
mov
jnp
xor
in
jg
fucom
imul
movsb
sbb
sbb
push
push
outsb
leave
push
dec
xchg
jmp
sti
lds
test
dec
dec
pop
aas
lcall
lods
aas
in
call
movsb
ss
jns,pt
sbb
mov
daa
jg
cmc
xor
in
xor
idiv
jns
or
adc
sbb
push
push
pushf
mov
dec
and
ret
adc
call
ja
xor
sti
pop
outsb
lods
shlb
pusha
ret
fisubrl
push
push
mov
imul
aam
fisubl
xor
mov
and
mov
adc
and
push
xor
adc
xor
imul
es
movsb
inc
pop
lea
xchg
or
jmp
add
shll
fistl
xchg
push
lret
mov
add
jae
jg
pop
sub
mov
decl
mov
bound
jmp
add
int3
lock
imul
sti
decl
sbb
xchg
mov
pop
add
int3
dec
sbb
movsb
pop
cld
pushl
rorl
mov
pop
pusha
negl
pop
push
inc
mov
insl
push
bound
mov
lea
mov
push
cli
idivb
test
das
adc
cmp
xchg
test
cmp
fiadds
test
sub
in
call
inc
jmp
sbb
mov
fiaddl
addr16
cmp
pop
decl
pop
add
cmp
cmp
in
not
dec
divl
adc
movsb
mov
lods
pop
insl
xchg
iret
pusha
pop
jae
std
cli
xchg
testl
lock
lcall
insl
fcom
inc
movsb
cmp
lcall
lcall
or
xor
subl
movsl
sbb
and
or
xlat
pushl
sbb
push
adc
lds
scas
rcr
sub
cmpsb
mov
inc
loop
ds
xchg
jge
test
push
lock
push
call
mov
stos
mov
jg
add
es
aaa
dec
and
adc
push
subb
push
xor
and
jle
aam
scas
pop
sar
mov
test
inc
pop
inc
leave
sbb
cmpsl
mov
ljmp
add
lds
cmp
in
inc
pop
incl
lea
fnsave
mov
ja
pop
push
xchg
dec
pop
add
stos
out
xor
pop
jmp
cmpb
jge
test
push
fistpl
into
lea
std
test
cmp
cmc
pushl
jno
lret
pop
jno
aam
lds
add
sbb
jmp
pop
out
ljmp
pop
ja
cli
add
pop
cwtl
outsl
cmpsl
mov
cld
xchg
or
std
adcb
cltd
pop
jg
fsub
or
sahf
adc
sbb
in
dec
ljmp
leave
outsl
hlt
dec
imul
adc
faddp
notl
jb
cmp
jns
mul
ljmp
push
cmp
adc
in
insl
lahf
cmp
fidivrs
outsl
sbb
xchg
dec
dec
jg
lcall
aas
dec
repnz
mov
mov
les
stos
sub
jno
sbb
mov
mov
ljmp
cltd
pop
call
or
fucomip
add
pop
dec
mov
xlat
rorb
mov
imul
push
ret
jb
js
decl
iret
loope
aas
shll
out
adc
jge
pop
sub
outsl
pop
lret
stos
lods
xor
ljmp
lret
push
jne
add
pop
pop
cwtl
push
fs
push
jmp
in
push
lcall
nop
mov
push
inc
and
fwait
push
shrl
shll
test
int3
sahf
push
adc
mov
scas
sub
incl
ror
mov
test
insl
or
push
push
outsb
cmp
jmp
sbb
movsb
outsb
sub
pop
adc
addr16
dec
repz
push
outsl
xor
out
rcrl
in
push
pop
incl
adc
test
sub
cmpsl
in
movsb
insb
mov
rorl
sbb
fwait
inc
add
out
sbb
pushl
adc
dec
out
addb
testb
or
inc
inc
scas
stc
cmp
jle
shrl
ret
aas
mov
pop
adc
cmp
aad
out
fdivrl
sub
push
pushl
loopne
or
xchg
inc
ja
push
or
sbb
icebp
lods
clc
loope
cmp
test
sti
icebp
call
mov
stos
jmp
or
pop
dec
ret
nop
jo
pushf
rclb
mov
sub
mov
arpl
in
js
pop
pop
gs
sbb
push
xchg
cmp
mov
or
movsl
mov
jg
jae
hlt
stc
cmp
xchg
popl
push
mov
sbb
dec
cmc
loop
pushl
jp
push
daa
xchg
sbb
sbb
xor
sub
push
xchg
call
and
jbe
xchg
push
mov
cs
xchg
pop
xor
pushl
clc
scas
in
shll
dec
lahf
adc
cmp
mov
lret
mov
push
decl
dec
sub
or
sbb
and
mov
push
or
jge
pusha
icebp
mov
dec
adc
mov
inc
mov
mov
lock
loop
push
push
mov
xchg
cmp
jno
jg
stc
test
ss
push
pop
adc
repz
mov
or
incl
imulb
sbb
or
dec
outsl
or
scas
xor
pusha
popa
pop
xor
jp
inc
xchg
mov
stos
adc
jnp
jge
outsl
mov
pop
jg
sub
fiadds
sbb
sbb
adc
pop
filds
fmull
popl
mov
incl
add
mov
repnz
dec
mov
and
ljmp
mov
ljmp
or
and
scas
lcall
push
dec
cld
jecxz
xchg
fs
pop
mov
cld
jns
sub
ds
xor
int3
pop
jns
sahf
icebp
dec
incl
sub
daa
mov
popf
sbb
insb
mov
xchg
and
out
pop
mov
ljmp
rorb
mov
cltd
mov
mov
adc
fildll
ljmp
ret
inc
out
mov
outsb
ljmp
jnp
and
and
popf
cmc
mov
inc
or
data16
jb
mov
ljmp
add
ret
ret
adc
mov
push
fnstcw
push
bound
xchg
lock
lcall
xor
cmp
mov
out
push
push
cwtl
cltd
test
cli
dec
lods
jp
movsb
xchg
incl
insb
xchg
mov
mov
test
xchg
outsb
inc
ficomps
imul
call
jp
es
adc
leave
inc
loop
stos
xchg
adc
and
aaa
gs
imul
sub
stc
lcall
fdivrs
fldl
mov
inc
popf
pop
fcomps
sbb
cwtl
cwtl
sbb
mov
mov
push
es
mov
jg
xchg
sub
sbb
xor
sahf
sub
add
insb
or
popa
jecxz
jmp
out
inc
mov
adc
mov
sub
ljmp
mov
inc
ss
out
addr16
rorb
xchg
in
out
das
repz
pushl
pop
xchg
jg
inc
pop
sbb
xor
and
xchg
inc
add
stc
test
pop
das
push
mov
sbb
xchg
ljmp
pushl
lret
aad
pushf
lods
int
dec
jb
mov
jg
mov
dec
push
or
inc
scas
jns
fcomps
fstps
sbb
fcomps
enterw
xlat
stos
out
or
ljmp
jne
mov
fcmovne
jo
mov
lahf
push
mov
in
mov
xchg
out
lock
jge
in
push
pop
or
adc
fwait
call
int
in
add
std
hlt
sbb
jle
js
cmp
mov
loope
push
inc
mov
ljmp
adc
loopne
mov
add
cmpl
jae
int3
add
jg
adc
jnp
sub
rcrl
xor
iretw
add
cmp
in
repnz
lds
xchg
into
test
add
call
jns
sbb
xor
repnz
in
out
xor
pop
xchg
lcall
sbb
ss
cmp
pop
jno
pop
mov
loopne
cwtl
xor
loope
dec
cmp
cmp
jmp
mov
xchg
std
inc
xor
dec
fcomps
lahf
pop
into
mov
shrl
pushf
push
mov
lock
add
pop
xor
dec
int
out
ljmp
loope
and
pop
dec
sub
adc
lret
out
call
xchg
fs
or
std
xchg
pop
cmc
and
cmc
aad
push
jg
or
lods
mov
jecxz
cltd
lock
xchg
orl
pop
adc
push
xor
call
jge
pop
mov
ret
cmp
in
push
mov
into
shl
decl
or
stc
mov
xchg
stos
movb
dec
fisubrl
dec
lahf
filds
sbbl
outsb
idivb
sub
sub
mov
pop
hlt
ljmp
sti
je
xchg
ret
cmp
xchg
sbb
popf
xchg
ljmp
mov
decl
mov
sbb
loope
subl
dec
mov
out
sub
mov
cwtl
imulb
fldt
inc
xchg
sbb
xor
xchg
xor
pop
xor
pop
jne
pushl
imull
lock
mov
loop
mov
pop
cmp
xor
aaa
jb
das
xor
incl
mov
test
and
pop
xchg
in
jae
sbb
enter
incl
push
adc
ret
in
mov
pop
sar
xor
imul
push
scas
fs
scas
or
xor
in
pop
add
mov
push
mov
cmp
mov
jle
ljmp
xor
jecxz
cmp
pop
xchg
cmp
outsl
mov
dec
mov
add
jmp
idiv
jmp
add
aas
xchg
push
sub
or
dec
shll
xor
jo
fisubs
jmp
and
std
shr
cmp
aas
inc
call
push
pop
shll
and
xchg
jmp
mov
mov
inc
scas
in
sarb
jbe
mov
into
push
pop
arpl
pop
std
lcall
push
cmp
or
out
mov
mull
sbb
mov
or
lea
scas
sub
xor
mov
fucomip
cmp
mov
xor
fistl
lret
pop
hlt
lcall
mov
mov
ljmp
insb
lcall
pop
testb
incl
push
mov
mov
inc
and
mov
cmp
dec
stc
lret
xor
mov
decl
inc
out
ret
jmp
icebp
jno
sbb
pop
fwait
inc
add
lret
xchg
ret
mov
fdiv
filds
dec
daa
sbb
lahf
jg,pn
nop
jo
pop
and
mov
aaa
inc
fs
jl
jmp
mov
outsl
xchg
sbb
mov
inc
push
movsl
and
pushl
xchg
test
mov
rol
out
xor
jl
sbb
push
scas
sbb
incl
mov
xchg
mov
or
lcall
sub
ljmp
mov
sub
pop
mov
pushf
insl
jmp
mov
sub
dec
jo
loop
clc
out
popa
inc
pop
ja
jmp
push
stc
lret
arpl
and
jmp
arpl
fwait
mov
es
sar
fsubrl
sarb
mov
fstpl
inc
nop
inc
lret
or
ja
dec
cmp
les
fistps
push
and
sqrtps
sbb
lret
aam
or
mov
mov
mov
jp
fdivr
idiv
dec
xchg
and
inc
bound
cmp
sub
inc
jge
adc
out
dec
sub
idivb
xchg
mov
xor
out
cmp
add
mov
loopne
popf
adc
scas
sub
fsts
adc
decl
imul
stos
fs
push
loope
and
loope
insb
fdivr
pushl
push
leave
pusha
sub
pop
adc
mov
fnsave
dec
fs
or
in
sahf
cwtl
jmp
ffreep
flds
loopne
cmp
and
in
mov
xchg
cmpsl
jnp
aaa
std
incl
in
int
repz
rorl
jmp
out
jmp
xchg
jns
roll
movmskps
mov
add
inc
xchg
addr16
cmpsb
testl
dec
stos
sarb
cmp
scas
daa
lcall
mov
push
pop
cli
out
clc
ljmp
cmp
inc
or
mov
jne
inc
test
daa
ja
pop
mov
sbb
ljmp
xlat
lret
andl
or
jo
mov
test
fisttps
cmpsl
mov
rorl
mov
mov
sahf
adc
cwtl
mov
sbb
out
cmp
movsl
test
and
cmpsb
add
pushf
adcl
jmp
out
pop
inc
mov
enter
sti
and
inc
sub
ficomps
mov
pop
popf
leave
xchg
stos
jbe
clc
xchg
sahf
out
lcall
cli
call
into
fmuls
ret
or
in
jbe
mov
ficompl
gs
sbbl
pop
scas
ds
pop
int3
les
cmpsl
and
decl
jle
push
ret
mov
xchg
inc
mov
or
cs
out
lcall
jle
mov
pop
addr16
sbb
fidivrs
faddl
mov
cwtl
repz
call
sbb
and
notb
mov
incb
cmp
xchg
mov
test
push
inc
ss
lret
cmp
mov
outsb
int
mov
call
lock
cli
mov
dec
outsl
jg
push
out
jle
data16
test
adc
ljmp
push
adc
std
dec
outsl
dec
push
sub
pop
or
dec
scas
mov
decl
ss
mov
add
adc
dec
lods
mov
inc
xor
push
xor
insl
mov
lcall
push
adc
dec
mov
push
in
test
popa
nop
jmp
or
mov
xchg
push
sub
fcmovu
mov
int
pop
aad
mov
jmp
pop
ljmp
movsl
mov
popf
pop
cltd
cmc
out
minps
dec
rcrb
add
cwtl
ficompl
sub
data16
rcrb
jae
adc
dec
jmp
scas
sbb
inc
dec
sbb
push
adc
enter
movsb
int
fnsave
incl
shll
xchg
fisttpl
cmc
cmp
ljmp
fcomp
es
xchg
xchg
jmp
bound
add
lea
mov
aam
ja
dec
test
vpcomd
cmp
mov
inc
sahf
inc
dec
xchg
mov
icebp
std
movups
sbb
mov
sub
daa
shll
ljmp
mov
gs
shlb
dec
aam
shrl
inc
pop
dec
dec
dec
ret
xchg
dec
jnp
ss
add
jmp
push
and
imul
iret
mov
test
mov
mov
jl
test
aam
jle
jb
pop
cmp
out
in
dec
or
incl
jle
mul
mov
nop
xchg
push
push
mov
dec
xchg
addr16
mov
jg
call
adc
stos
les
enter
test
cmp
sub
decl
cld
jae
outsl
cltd
xor
xchg
out
jl
or
popf
mov
pop
decl
jno
jne
push
inc
aam
push
sbb
movsl
mov
add
add
addr16
imul
mov
push
mov
or
movq
xchg
movsb
sub
xchg
inc
dec
int
inc
mov
les
hlt
call
ja
add
movsb
inc
test
bnd
test
mov
rcrb
call
jge
out
cli
incl
out
les
imul
out
in
notb
call
mov
das
cmp
fsubl
pop
mov
arpl
push
cli
and
data16
xlat
xchg
push
add
rolb
dec
xchg
addr16
lret
sub
les
lcall
lock
add
scas
mov
mov
pushf
lock
outsl
pop
xor
xchg
call
out
mov
or
mov
add
or
pushf
ret
jmp
cld
stos
cmp
jl
ffreep
test
in
ds
jno
add
dec
push
xchg
inc
ljmp
cli
adc
sub
ds
mov
jmp
push
push
and
es
sbb
xchg
fadds
decb
and
inc
sbb
stos
mov
dec
pop
loop
sbb
testb
jmp
lds
sarb
nop
sbb
or
lcall
out
stos
divl
mov
pop
cmp
cmp
pushl
xor
sti
test
push
lahf
add
lahf
push
mov
popf
jmp
insb
mov
rcr
mov
sti
stos
sbbl
lahf
mov
mov
jg
jmp
adc
xchg
popf
mov
and
cmp
je
mov
xchg
call
and
cmp
incb
cmpsl
lret
mov
cmp
nop
data16
pushl
sub
cwtl
xor
in
jle
fimull
xlat
cmp
repnz
ljmp
add
stc
aas
xor
pop
and
and
jg
push
popf
dec
adc
adc
in
lahf
jae
mov
lahf
dec
sub
pop
push
jno
xor
dec
mov
div
mov
ljmp
adc
stc
cmpsb
jge
mov
das
xor
push
outsl
fildll
xchg
mov
sub
lods
xchg
inc
and
aaa
cmp
inc
pop
mov
cmpsb
test
das
adc
lret
or
ret
aas
scas
xor
call
in
rorl
pop
aad
pop
ret
mov
cmp
cmp
out
bound
ds
ljmp
clc
call
aas
adc
dec
inc
addb
cmp
in
pop
mov
imul
insb
paddq
sub
cmp
pop
lock
lds
daa
cmp
test
pop
mov
adc
inc
fdivrs
out
mov
sarl
outsb
mov
pop
lds
mov
xor
pop
cmp
repz
jg
pop
inc
xor
bound
hlt
cmpsl
inc
les
fcomi
ret
adc
sti
xor
in
sub
mov
dec
mov
mov
dec
sbb
jg
dec
mov
ret
inc
dec
scas
sahf
add
mov
push
xor
mov
xchg
pop
outsl
das
cmp
xchg
mov
xchg
lcall
adc
js
xchg
sbb
fmuls
push
mov
sar
cmp
inc
cmpsl
adc
and
dec
sub
inc
pop
add
ret
push
int3
scas
mov
jnp
lcall
lock
daa
push
ds
and
push
mov
mov
push
gs
lock
fcmovb
and
aas
jle,pt
iret
pushf
outsb
sti
jp
mov
mov
mov
inc
lds
fdivp
in
jbe
or
xlat
dec
popf
into
aas
fs
call
cmp
pop
stos
xor
ret
adc
and
fucom
and
call
or
sbb
jae
dec
daa
pusha
xor
repz
incl
les
out
icebp
pop
call
inc
jo
inc
jb
insb
jg
iret
es
gs
repz
mov
dec
mov
jge
test
test
int
rorb
sahf
scas
loopne
jns
pop
loopne
decl
mov
push
cmp
in
sbb
loope
arpl
ljmp
pop
lods
dec
pop
add
dec
mov
mov
mov
js
cmp
inc
mov
lret
adc
cmp
lcall
push
sahf
insb
dec
in
stc
push
adc
lods
jmp
add
call
or
xchg
jbe
jmp
sub
psubb
mull
sub
inc
cmp
ljmp
test
outsb
add
in
jg
test
test
js
or
std
aas
out
sbb
adc
xor
in
jmp
pusha
pop
lahf
jge
mov
adc
lods
push
loop
add
cli
mov
addb
pop
ss
arpl
sbb
clc
lcall
stos
sbb
pop
cs
inc
rorb
hlt
mov
inc
lcall
addl
add
xlat
nop
ds
stos
lahf
adc
jp
push
cmp
ja
incl
or
inc
subb
gs
mov
jo
and
incl
mov
repnz
xchg
mov
test
ljmp
data16
fsts
push
ljmp
and
mov
lds
loopne
jns
lahf
ljmp
xchg
pop
negl
xchg
icebp
call
lods
adc
inc
xchg
pushl
jl
lds
stos
mov
stos
fdivl
outsl
lds
sysexit
push
xor
sbb
call
sub
sbb
les
inc
push
pusha
sbb
inc
clc
ljmp
mov
dec
and
sub
inc
and
ljmp
outsb
ljmp
cmp
jg
dec
addb
mov
fsubs
ret
call
sub
insl
push
mov
add
pop
pop
jl
xchg
xlat
add
xchg
dec
cltd
in
mov
cmc
jg
mov
xor
in
neg
xor
mov
dec
fdiv
or
stc
or
add
lock
jae
test
or
jns
icebp
mov
add
mov
shlb
mov
movsb
push
jne
call
repz
adc
or
test
out
push
xchg
in
out
clc
ljmp
repnz
jmp
xlat
mulb
cld
inc
pop
xchg
icebp
ss
mov
scas
cli
call
rcr
or
scas
leave
pop
inc
or
adc
jp
incl
js
sub
sbb
push
orl
mov
mov
mov
std
fnstcw
pop
pop
xchg
enter
mov
push
mov
dec
fsub
fwait
leave
mov
push
in
mov
out
cltd
cmp
shll
jg
fisubs
or
fs
add
rclb
into
inc
mov
ljmp
xor
mov
xor
push
fidivrs
pop
mov
imul
lret
add
adc
adc
inc
dec
push
lea
add
imul
pop
cmp
movsl
sahf
imul
aaa
mov
out
mov
push
bound
gs
inc
mov
cmp
clc
mov
sbb
movb
imul
ljmp
insb
ficomps
or
mov
mov
xchg
cs
decl
mov
push
int
push
pop
addb
aas
jo
cld
pop
inc
stos
xchg
sub
adc
fcmovne
jne
jmp
movsb
lods
sub
mov
stos
sub
lret
mov
bound
add
ljmp
push
out
add
clc
iret
xchg
and
and
mov
mov
dec
cmc
arpl
fsubs
push
fstl
insb
ds
lds
movsb
push
popf
push
sbb
mov
jg
rclb
outsl
in
dec
xor
jp
add
lcall
add
repnz
sbb
or
cld
cmp
xor
or
jb
ss
dec
shlb
pop
jge
ljmp
mov
lods
je
lods
adc
cwtl
stos
call
outsl
pop
pop
fisttpll
pop
sti
faddl
pop
divb
dec
jbe
sbb
out
cmpsb
push
xchg
xor
mov
mov
insb
jae
hlt
dec
popa
cli
and
je
lock
pop
jns
fmul
inc
push
sbb
hlt
adc
sub
decb
dec
ljmp
pop
je
pop
cmp
push
gs
and
ss
rclb
cmpsl
jg
adc
outsb
insl
scas
int3
ljmp
dec
sub
adc
or
arpl
fcomip
xlat
loope
out
xorl
das
clc
xchg
jns
lret
push
mov
dec
lea
stos
jecxz
mov
call
sbb
jp
mov
xchg
pushl
mov
es
cmp
orl
add
lods
adc
jle
addr16
lea
cmp
jno
xchg
add
ljmp
into
arpl
dec
add
cmp
push
lret
incl
outsl
sub
sub
xchg
or
or
lock
xor
scas
xor
or
pop
jle
mov
lock
loope
insb
lock
sub
push
dec
leave
or
les
fidivrs
inc
decl
or
xchg
add
xor
mov
sub
mov
lea
cmp
cmp
mov
aaa
es
jnp
pop
mov
jo
popa
jbe
notl
xchg
and
pop
mov
decl
sub
push
decl
sti
dec
and
aad
cmc
lret
mov
inc
std
mov
cmc
test
call
jg
sti
fistl
jo
or
fistps
jg
mov
and
jg
push
adcb
cmp
xor
mov
dec
ror
out
out
mov
loop
in
jecxz
pop
ja
or
das
mov
data16
popa
stc
outsb
cmp
loopne
decb
lret
iret
loop
xor
xchg
xchg
cmp
ret
add
incl
idiv
adc
stos
sahf
repnz
lret
fists
push
sarl
dec
movb
pushl
xor
jmp
test
insl
mov
pop
mov
mov
fildl
inc
sub
pushl
cmp
pop
add
inc
dec
test
enter
in
mov
in
jecxz
mov
out
incl
loopne
cmp
ja
cmp
inc
cmp
lcall
push
mov
jmp
xor
jno
mov
cmp
push
adc
lcall
ljmp
lret
mov
jns
push
xchg
mov
xchg
pusha
jecxz
test
inc
sub
jg
je
xchg
sbb
scas
icebp
push
or
adc
lcall
dec
in
nop
push
dec
sub
push
push
ss
leave
xchg
mov
cltd
adcb
mov
mov
mov
dec
add
pop
xor
arpl
inc
pop
movsl
and
sub
jg
je
inc
or
or
mov
and
mov
mov
and
ss
jmp
or
jp
mov
and
cltd
pop
scas
push
jl
call
loopne
pop
and
sub
xchg
add
nop
xchg
test
add
adc
in
mov
mov
decl
pop
sti
cmp
inc
adc
leave
jg
pushl
cmp
pop
sub
fisubrl
push
jg
sahf
jns
test
mov
movsl
jmp
lods
cmc
xacquire
jno
rolb
mov
pop
sbb
inc
cmp
push
imul
mov
xchg
jmp
out
cld
mov
sbb
outsl
and
je
xor
mov
mov
popa
rcr
push
das
jne
inc
aas
movsb
in
push
ret
pop
pop
add
mov
sub
adc
or
dec
sarl
sub
out
inc
push
add
jp
xor
jne
mov
mov
adc
jl
inc
push
pusha
push
jmp
test
repz
mov
inc
mov
dec
adc
loope
pop
pop
fcmovnb
and
and
mov
mov
das
push
filds
out
stos
les
pop
push
fdivp
mov
jo
jg
pop
mov
sub
inc
fnsave
push
push
mov
dec
xor
clc
ljmp
sub
leave
arpl
lds
push
mov
adc
pop
xor
scas
pop
push
cwtl
popa
mov
add
adc
jle
loopne
flds
ss
push
or
jg
mov
inc
pop
jno
jge
lahf
mov
mov
and
push
incl
push
xor
out
sbb
enter
sub
icebp
les
adc
incl
mov
mov
or
mov
arpl
mov
inc
hlt
out
or
inc
add
jbe
jg
mov
pop
call
test
cli
call
sbb
rcl
sti
aad
jmp
jle
jge
push
gs
ljmp
mov
arpl
mov
pop
aas
out
aad
imul
decl
mov
sbb
xor
icebp
add
sub
xlat
lea
popa
mov
xchg
ja
or
stos
rcll
not
loopne
inc
sub
aad
push
sbb
es
jmp
cwtl
addr16
inc
jmp
jp
push
andl
xor
decl
mov
test
jg
lret
je
lods
adc
add
dec
push
insl
std
push
cwtl
ljmp
aam
rcl
test
cmp
fnstsw
popf
int3
sbb
and
int3
in
xorl
dec
lods
mov
add
xchg
jo
pop
lods
mov
jmp
shll
sahf
cmpsb
mov
in
setne
push
scas
pop
jmp
loopne
ret
clc
xor
xchg
imul
inc
push
js
inc
loopne
int3
mov
adc
ret
pop
adcb
inc
loopne
leave
xchg
iret
fidivs
add
call
add
pop
xchg
test
jbe
lret
xchg
push
add
repnz
pop
scas
incl
push
fstl
mov
repz
pop
add
cwtl
xchg
inc
decl
cmp
jns
mov
xchg
ret
es
or
sbb
sti
xchg
cltd
int
aaa
mov
pop
imul
shl
movaps
shrb
mov
std
out
shll
and
loopne
lock
or
sbb
xor
sbb
pop
mov
pop
jb
imul
int3
test
mov
std
cmc
and
ljmp
addr16
mov
mov
in
pop
sub
aad
test
cmc
loopne
add
rcr
or
movsl
decl
xchg
ljmp
or
or
jl
in
jns
add
or
pop
loop
lcall
movq
push
test
adcl
inc
jp
pushl
test
push
dec
ja
mov
dec
fwait
ljmp
sti
leave
bound
cltd
out
loope
mov
inc
cmc
lds
sub
adc
call
jg
jecxz,pt
add
dec
fs
mov
imul
add
jge
divb
pop
rclb
sub
jns
xchg
push
cmp
icebp
dec
lcall
jbe
or
js
mov
mov
das
es
fisttps
inc
and
icebp
sahf
les
sub
pushf
sub
push
mov
sub
cmp
or
mov
incl
mov
rolb
aam
aas
dec
sbb
cmpsb
sti
decl
mov
movsb
mov
negl
rcll
shr
adc
jnp
or
pop
mov
sub
sahf
or
scas
pop
inc
or
mov
into
ljmp
fbstp
lods
jb
mov
icebp
mov
shll
sub
add
incl
cmpsb
add
movsb
mov
inc
test
xchg
enter
test
lcall
fmuls
subb
push
push
adc
pushf
imul
jg
mov
cmp
sahf
mov
adc
das
inc
mov
push
shll
lcall
sub
shll
cmp
out
aam
bswap
dec
fsubl
xchg
sti
cmpsb
sbb
lcall
and
cmp
and
rcr
pop
out
addr16
es
jle
jmp
xchg
push
shlb
xlat
mov
pusha
dec
test
add
cmp
or
sarl
mov
push
into
xor
mov
sbb
rcr
mov
stc
ss
mov
fsubs
arpl
das
mov
call
shl
xor
jo
mov
push
mov
xor
incl
lcall
inc
push
and
mov
cmp
mov
je
xor
xor
fwait
mov
shlb
mov
dec
insb
cld
idiv
jmp
inc
negb
sub
fmull
fmull
push
sbb
pop
xchg
jg
push
mov
push
outsb
lods
lahf
mov
scas
and
int3
mov
adc
pushl
ficomps
and
ljmp
mov
aaa
scas
faddl
ljmp
gs
inc
shr
clc
insb
fisubrl
es
push
push
decl
imul
cmp
pop
pop
fs
add
aaa
sbb
ljmp
inc
mov
mov
out
loop
stos
sbb
test
into
adc
xchg
push
mov
cld
clc
fwait
hlt
ljmp
inc
outsl
push
pop
pop
test
into
mov
xchg
fs
lcall
into
xchg
jb
test
ss
lcall
lcall
mov
mov
jmp
pop
jbe
ret
shrl
mov
jge
cmp
adc
fs
enter
adc
push
mov
pop
rol
mov
add
xchg
mov
mov
mov
in
repz
and
dec
mov
sbb
incl
fsubl
push
mov
aam
add
enter
xchg
aam
int
jmp
movsb
std
sti
mov
js
adc
cmp
stos
hlt
outsb
push
add
subps
lcall
outsb
loope
dec
lods
imul
mov
inc
jnp
mov
outsl
xchg
mov
outsl
cli
test
mov
cmp
test
ljmp
arpl
pop
mov
push
pop
xchg
push
push
fistpl
ljmp
jmp
push
sub
cmp
ja
insb
fdivrl
push
and
xchg
jg
call
popf
xor
movsl
and
lods
stos
mov
cmc
inc
and
movsb
scas
sub
fwait
shlb
mov
aad
push
out
mov
xor
popa
or
push
pop
ljmp
adc
mov
hlt
or
in
out
dec
push
mov
lcall
mov
mov
jbe
mov
mov
push
test
sbb
cltd
add
jns
into
int
mov
sub
lds
cmp
mov
out
popf
cmc
push
dec
mov
cwtl
push
popa
iret
aad
cmc
ss
cmp
je
inc
decl
loope
sbb
or
lcall
mov
xchg
fadd
adc
call
inc
jp
gs
push
xchg
inc
aad
and
aaa
sub
inc
jg
shll
pop
enter
pop
daa
jge
ja
jne
inc
xchg
arpl
inc
fistps
outsl
popa
test
mov
push
dec
sub
gs
jge
ss
loope
andb
pop
cmc
sbb
jbe
fdivp
mov
fildll
inc
dec
push
push
inc
add
xchg
je
inc
adcb
lds
add
add
and
enter
inc
rol
das
xchg
pushf
dec
inc
xchg
movsl
pop
adc
lods
leave
pushl
adc
shlb
pop
xchg
fdivrs
ret
es
push
ss
xchg
rcll
mov
ljmp
out
out
lods
cmp
adc
add
mov
jne
loopne
add
jmp
xchg
add
shlb
jecxz
stos
push
repnz
aad
test
sbb
das
clc
jl
cmpsb
data16
call
add
add
fwait
out
fsubrl
push
in
mov
sub
dec
adc
add
enter
sub
outsb
adc
arpl
mov
dec
dec
push
fnsave
insb
jg
ljmp
arpl
xor
push
stos
xchg
das
aaa
jbe
mov
out
xor
incl
inc
loop
inc
pop
inc
pusha
cmp
movntps
mov
idivb
ljmp
cltd
sub
ja
ljmp
xor
mov
lea
cmp
push
inc
lcall
mov
sbb
fbstp
cmc
adc
imul
dec
cli
ljmp
push
call
call
jb
inc
sbb
lret
xor
pop
inc
jb
sub
idiv
cld
mulb
xor
push
call
mov
xor
cmpl
mov
sbb
in
xchg
push
faddp
pushl
fisubl
xchg
mov
aaa
pop
or
mov
sub
cmc
mov
xchg
xor
mov
sbb
in
xchg
dec
mov
lock
xor
jecxz
lret
lret
outsb
jb
cmp
test
mov
ljmp
cmpsb
pop
push
cld
pusha
add
mov
jecxz
pop
mov
mov
sbb
js
sbb
mov
jbe
cmpsb
cld
xchg
fnstcw
push
pop
test
loope
scas
cli
ljmp
roll
insb
les
insb
movsb
cmpsb
cmc
les
fadd
loope
jg
cmc
mov
roll
fidivrl
and
push
ficomps
imul
into
dec
outsl
dec
cmp
jbe
mov
xchg
lock
xor
int3
cmp
and
mov
sub
call
shlb
in
mov
xchg
lret
sbb
arpl
jp
and
and
xor
ret
dec
pop
dec
adc
sar
pushl
mov
popa
push
fidivrl
push
or
jmp
lcall
aaa
test
decl
xchg
js
lods
add
nop
jae
addl
cmpsb
adc
jp
incl
lcall
les
lods
popl
pop
repz
xor
dec
stc
cli
mov
inc
enter
dec
and
push
ja
sbb
lret
adc
jl
xlat
pop
shl
lcall
push
jecxz
sub
push
push
push
les
stos
cmp
jae
stos
mov
cltd
inc
push
ror
dec
push
push
sbb
cltd
sbb
cmp
ljmp
cmp
stos
add
sub
and
ss
xchg
jno
sbb
jl
insb
scas
jae
jmp
sub
fs
pop
test
inc
daa
sti
pusha
xorl
stos
in
inc
call
adc
out
jl
arpl
inc
xor
cwtl
stos
je
push
xor
mov
jmp
sub
mov
cli
pop
sub
adc
andb
lea
fs
fcmovnb
jbe
xor
stos
roll
mov
fmul
bound
jg
xchg
lea
cmpsl
add
repnz
dec
shl
mov
xchg
mov
push
push
xor
sub
or
mov
pop
in
xlat
pop
addl
or
outsb
adc
sbb
push
xchg
incl
aaa
and
cmp
sbb
mov
popf
or
mov
or
jmp
jns
imul
cmc
fdivrl
dec
sub
cmp
cmp
add
jg
loop
enter
add
pop
inc
leave
lods
sub
outsb
loop
cwtl
push
incl
mov
add
nop
pushl
mov
sub
add
enter
ljmp
sbb
adc
orb
stos
mov
rorl
dec
cmc
fsub
lret
std
imul
adc
cmp
adc
jnp
jb
or
cmp
popa
fiadds
decl
dec
add
push
push
stos
mov
mov
sbb
sbb
in
cmp
cmovno
xor
mov
and
mov
xchg
dec
insl
inc
aam
ret
cmp
les
call
push
lds
fwait
ljmp
psrlq
subb
sahf
jnp
clc
ljmp
imul
out
fnstsw
fwait
mov
test
jg
push
push
pop
cld
mov
pop
idivb
push
mov
xor
add
mov
cli
arpl
pop
mov
lds
jmp
mov
mov
fndisi(8087
cmpsl
and
lret
dec
mov
cmpsb
out
jmp
jnp
xlat
dec
popa
test
add
cmp
pop
or
iret
enter
in
into
fsts
dec
test
jmp
pushl
and
dec
out
push
stos
dec
rorb
out
xchg
mov
cld
test
push
inc
in
cmp
inc
cmp
shll
pop
sub
aad
cmp
lds
jnp
incl
mov
cmp
gs
into
mov
pop
ret
ljmp
push
lcall
lods
xchg
xor
or
pop
lods
lods
mov
xor
sahf
push
xchg
push
add
jns
call
xchg
je
je
subb
int
add
fsubrs
fsqrt
cmp
rorb
in
fdivr
push
xor
and
incl
add
or
into
adc
or
clc
cmp
in
xor
int
cwtl
mov
jo
lcall
imul
push
lahf
scas
sarb
inc
filds
in
xchg
bound
nop
clc
xlat
dec
test
out
hlt
mov
pop
cmc
add
jmp
jno
fwait
and
adc
cmp
or
cli
cli
dec
cmp
cmp
scas
mov
lahf
fwait
fwait
dec
cli
call
lods
sbb
movsb
xchg
jb
xchg
rclb
xor
cmp
pop
std
fwait
addl
sbb
imul
call
sub
imul
add
fcmovb
icebp
cmp
pop
iret
mov
orb
mov
fcompl
adcl
add
jae
adc
sub
into
out
sub
mov
call
mov
push
ljmp
aas
xchg
nop
cmc
cmpsb
in
aad
pusha
or
or
mov
rcrb
ss
incb
sbb
mov
js
jecxz
js
out
xchg
jl
xchg
cltd
cli
lods
jbe
fcomip
jg
dec
adc
and
or
sar
push
mov
jl
ja
clc
filds
or
in
rclb
push
xorl
mov
pop
mov
iret
cs
pop
sbb
test
sbb
inc
inc
enter
andb
adc
mov
xchg
rolb
pushl
push
lods
add
outsb
stos
xor
inc
inc
inc
sti
sbb
cwtl
push
xor
cwtl
int3
repnz
iret
jg
mov
and
and
scas
js
scas
ficompl
lcall
cmp
decl
mov
shrb
adc
xor
fldl
call
sarb
mov
cmp
and
inc
cmp
sarb
push
into
push
scas
jmp
mov
scas
movsb
pusha
pop
push
pop
xchg
mov
movsb
jbe
ds
jns
repnz
mov
mov
stos
cld
lds
rcrl
shl
dec
sbbl
ljmp
frstor
mov
pop
sbb
mov
inc
add
mov
outsl
add
or
pushf
xchg
inc
lock
pushl
xchg
dec
lock
pop
frstor
push
cmp
test
testb
scas
out
add
sbb
or
adc
adc
es
out
lods
push
cwtl
lcall
mov
adc
dec
fmul
dec
iret
iret
ljmp
fdivrs
addr16
push
ljmp
jo
sub
roll
sbb
pop
rorb
jp
ljmp
outsl
sub
mov
mov
js
inc
xlat
sub
movsl
dec
and
test
scas
mov
decl
push
push
gs
fs
inc
push
repnz
or
mov
push
cld
add
sbb
loop
mov
sbb
inc
push
arpl
sub
pop
jne
out
ret
inc
popf
mov
mov
or
jmp
sub
das
cli
decl
popa
add
dec
enter
lret
push
add
jmp
lcall
out
aad
jae
aas
stc
or
pop
mov
inc
jno
enter
push
jmp
rorb
movsb
push
dec
push
cmp
cli
gs
sub
ds
into
ljmp
icebp
frstor
not
lods
cld
in
fldt
fcomps
call
testb
call
jno
sahf
scas
cmp
cmp
jbe
jo
xor
incl
dec
dec
inc
jnp
mov
mov
and
nop
in
xor
add
mov
push
js
out
or
outsl
loop
fs
jnp
mov
jg
insb
hlt
lods
and
mov
outsb
or
cmc
flds
jo
cmc
std
ljmp
scas
rcr
xchg
lods
xchg
repz
clc
aas
add
cmp
sub
sub
call
shlb
dec
mov
jmp
pop
mov
mov
iret
into
mov
push
push
lea
decl
xchg
fistps
int3
jg
lcall
dec
fistps
push
aam
inc
fucompp
push
sub
jb
imul
cmp
mov
mov
cmp
jb
lea
sbb
popf
mov
pop
hlt
lock
cmp
jg
push
stos
cld
add
stos
inc
xchg
shr
call
push
xchg
or
ret
jl
ret
adc
mov
dec
jmp
jge
cmp
fcomi
xchg
push
mov
ficoms
xchg
xor
mov
outsb
inc
filds
loope
stc
pushf
jge
mov
jl
fisubs
or
dec
out
dec
mov
scas
decl
jmp
sbb
fdivrs
ror
dec
fwait
popf
loopne
divl
adcb
inc
fimull
xchg
mov
ljmp
jno
xor
or
or
adc
push
xchg
pop
cmc
sbb
fwait
mov
inc
movlps
mov
push
jmp
cmpsl
dec
xchg
adc
cltd
xor
xchg
dec
inc
push
push
aad
in
mov
sub
call
and
imul
ja
cmp
ss
popf
mov
sbb
xchg
call
cmc
mov
mov
mov
fldenv
arpl
mov
data16
push
inc
movsl
nop
jns
roll
in
ja
sbb
dec
cmp
push
or
repnz
cli
daa
sbb
ds
jmp
add
stos
sbb
orl
lds
mov
test
jae
fstp
fadd
adc
ficoms
jmp
jb
adc
in
xor
clc
push
imul
mov
sub
and
pop
dec
inc
hlt
and
hlt
clc
scas
notb
arpl
pop
sahf
pusha
jg
aas
gs
cld
push
push
cmp
jo
addr16
in
adc
mov
xor
lcall
adc
cwtl
aas
mov
xchg
sub
inc
mov
push
arpl
dec
push
sub
lcall
loope
inc
daa
enter
sbb
sub
out
rorl
cmp
sub
fcos
ljmp
lods
out
dec
push
push
pop
sbb
pop
mov
nop
jecxz
sbb
stos
push
mov
dec
jp
mov
pop
enter
in
jge
aaa
lds
dec
jmp
call
adc
cmc
dec
and
notb
andb
mov
xor
or
loope
int3
mov
incl
orb
cmp
sbb
orl
testb
mov
stos
popa
clc
in
lock
std
inc
cmc
les
lods
movsl
clc
dec
pop
outsb
pushf
test
pop
xchg
pusha
push
dec
fisttpl
clc
xchg
fstpl
rorl
cltd
in
ljmp
xorl
dec
xchg
cmp
mov
sahf
in
jg
repnz
inc
cmp
shl
call
jmp
sub
add
inc
mov
sahf
sti
add
adc
scas
out
inc
cld
lcall
icebp
int3
fs
sarb
mov
lock
xchg
mov
and
xor
sahf
mov
ljmp
movsl
movsl
dec
xlat
imul
shrl
and
scas
sahf
lock
pop
push
lods
pop
jmp
int
lcall
int3
inc
mov
gs
fs
and
loopne
addb
inc
jp
sbb
mov
sbb
pop
sahf
test
pop
cs
sub
jl
or
arpl
push
mov
sbb
int
add
js
push
scas
lcall
xor
cmp
stos
loop
push
movb
mov
mov
stos
sub
and
xor
test
aad
ljmp
jl
sub
inc
or
out
sub
shlb
mov
lcall
jle
imul
inc
jl
sub
dec
adc
mov
dec
pop
jl
jmp
repnz
jmp
mov
push
aaa
dec
cwtl
push
popa
outsb
xlat
jae
scas
sbb
mov
sbb
mov
xor
loope
xor
jo
jge
mov
xchg
mov
push
sub
cmp
inc
es
or
movsl
mov
pushl
out
mov
pop
imul
fldl
lcall
test
xchg
hlt
les
sbb
ljmp
movsb
add
mov
std
call
fbld
mov
pushf
add
lcall
das
dec
xchg
or
fcmove
repz
incl
cwtl
stos
movsb
shrb
sbb
push
sbb
adc
pop
mov
icebp
outsb
jl
and
call
addl
leave
insb
fistpll
and
pushf
inc
pop
imul
incl
dec
and
pushf
and
mov
push
or
movb
mov
scas
call
or
or
pop
in
sti
cmp
sbb
out
mov
dec
pusha
ljmp
jb
cmp
dec
inc
jg
or
fs
lret
mov
leave
mov
pop
loopne
pop
cmp
int3
and
pop
aas
das
aad
iret
lods
dec
je
cmp
adc
movsl
pop
mov
out
in
fnstcw
xchg
scas
xor
mov
jns
nop
inc
test
cld
push
inc
test
mov
jns
clc
jmp
in
xor
pop
mov
dec
pop
xchg
cmp
das
or
data16
cvtdq2ps
ljmp
jp
cmp
fldl
and
jns
cmpsl
ror
mov
pop
fcmovnb
jg
jae
fnstenv
or
jecxz
mov
stos
movsl
adc
cmc
sti
imul
mov
jns
movsb
mov
cmp
js
hlt
mov
mov
test
iret
inc
jg
sbb
push
ret
cmpsb
add
and
xchg
push
pop
pushf
fisttpll
cmc
fldl
mov
pop
js
xchg
repnz
movhps
test
add
lcall
pop
dec
loopne
leave
cli
bound
xchg
lahf
sub
outsl
je
cwtl
or
popf
inc
adc
call
stos
lcall
ss
fabs
dec
cltd
jae
xor
mov
sub
ljmp
cmpsl
and
pop
dec
les
int3
jne
mov
push
std
sub
sbb
les
or
daa
movsl
mov
inc
lea
sub
test
incl
sub
test
dec
sarb
hlt
sub
sbb
fwait
cmp
out
adc
mov
push
out
shll
dec
mov
fxtract
adc
out
aad
lret
mov
pop
xor
test
mov
fs
push
movsb
sahf
cltd
adc
call
adc
sub
sbb
in
stos
call
sbb
add
sub
sti
xchg
orb
cmp
adc
jle
call
imull
mov
and
pusha
mov
loope
cld
pushl
jle
mov
fs
and
xchg
xchg
jnp
or
dec
insb
into
out
sbb
es
jg
and
mov
je
faddl
xchg
in
mov
push
mov
in
out
pop
shll
jmp
fcompl
lret
jmp
add
pavgb
movsb
mov
xor
mov
jl
pop
adc
lds
jae
mov
xchg
xlat
pushw
sub
cld
xchg
jo
mov
mov
clc
pop
lret
adc
pop
js
out
clc
cmp
ds
mov
pop
pop
mov
mulb
ja
jbe
incl
hlt
jecxz
pop
push
xchg
mov
or
sbb
pop
lods
cmpsl
in
adc
std
dec
xchg
lahf
testl
stos
mov
mov
push
and
cmp
mov
lods
mov
pushf
and
fcomip
jecxz
xchg
mov
stos
cmp
test
setno
jmp
pop
in
bswap
pop
jbe
sbb
sub
xchg
and
sbb
adc
add
insb
decl
lcall
add
xchg
test
cmp
and
aad
mov
jmp
fxch
ret
push
stos
dec
fimull
aaa
data16
adc
pushl
repnz
mov
clc
inc
pop
push
add
insl
daa
in
sub
lcall
jno
pop
fldt
mov
scas
xchg
pop
das
xchg
cmc
mov
popa
and
jb
and
fdivr
pop
icebp
jmp
xchg
scas
add
icebp
jo
aas
shrb
aad
mov
xchg
call
mov
cs
sbb
rcrb
dec
mov
mov
pushf
jmp
rclb
sar
fstps
sti
in
pop
add
test
xchg
xchg
imul
add
ret
sub
xor
adc
mov
bnd
lret
push
loope
gs
out
mov
mov
push
call
sahf
dec
scas
aaa
imul
imul
pusha
xchg
in
bound
in
stc
arpl
int3
sbb
adc
mov
and
loopne
in
cmp
imul
stc
mov
fsubr
or
push
adc
push
and
jno
pop
jle
jmp
jmp
es
aaa
and
sbb
pop
inc
ljmp
push
mov
ljmp
fisubrs
pop
or
xor
test
push
push
les
xor
jl
push
sbb
push
insb
rol
popf
pusha
addr16
dec
pop
sbb
sub
sbb
push
jno
pop
add
xor
mov
cmpsl
mov
jmp
fwait
orb
fnstenv
sbb
xor
popl
pop
pusha
xchg
fmul
dec
lea
pushf
dec
ljmp
cli
call
or
xor
repz
inc
inc
mov
jg
jmp
dec
daa
mov
cld
fiadds
clc
jmp
or
mov
popa
mov
jnp
xorl
aas
call
sahf
xchg
mov
push
mov
and
push
inc
push
ss
inc
repnz
out
mov
fildll
cld
call
cld
and
into
xor
shll
pushf
mov
imul
aas
dec
pop
adc
notb
jne
inc
push
enter
decl
xchg
das
scas
xlat
ss
xorb
jb
lcall
pushf
jo
jmp
mov
aas
xor
push
mov
mov
and
mov
mov
jmp
jg
stc
into
and
mov
int3
insb
test
cmp
mov
inc
mov
xor
push
movsb
icebp
lea
ja
incl
cld
dec
into
pop
inc
pop
inc
xlat
xchg
loope
iret
adc
add
pushl
inc
mov
das
out
fistpll
or
and
xchg
adc
dec
pop
in
stos
jmp
inc
addb
push
jge
sbb
jnp
cmp
dec
mov
jns
adc
in
mov
jbe
iret
xor
or
add
lcall
sub
jle
pop
pop
cmpsb
sti
cmp
dec
xor
je
enter
jbe
inc
pop
sbb
jnp
push
imul
ljmp
adc
lret
stc
aas
adc
sub
cmp
lret
pop
push
orb
in
incl
pop
inc
dec
movsl
xchg
idivb
lods
repnz
push
mov
pop
lds
ljmp
sti
pop
movsl
lock
mov
lcall
sub
dec
hlt
sub
push
dec
icebp
push
decl
jmp
cltd
adc
aam
aam
sahf
xchg
jecxz
scas
jp
jae
stc
jmp
mov
sub
xchg
adc
mov
xchg
sahf
adcb
incl
add
xchg
lcall
mov
dec
lods
add
pop
pusha
push
cld
and
fldl
or
fmuls
fdivrs
nop
mov
ret
clc
incl
mov
fcomp
xor
sbb
dec
fstpt
jbe
xchg
scas
sub
dec
out
ljmp
sti
mov
ss
sbb
cli
iret
rclb
ret
xchg
xchg
push
stos
xchg
hlt
daa
mov
cltd
mov
pushl
into
call
mov
leave
negb
std
sbb
cmp
xorl
push
adc
or
add
ret
dec
mov
add
jp
cmc
stc
mov
js
test
into
push
dec
shrb
ficomps
pushl
lret
in
xchg
pop
pop
add
in
mov
pop
shlb
outsb
movsl
pushl
pop
repz
pop
push
dec
shl
xchg
and
cld
in
in
sub
sti
jae
pushl
dec
inc
cwtl
test
mov
xchg
xor
xor
jbe
in
rorb
js
mov
dec
and
cmc
aad
imul
lods
mov
cmp
sbb
pop
dec
and
call
mov
les
imul
pop
ret
fiaddl
pop
sbb
ljmp
incl
mov
roll
gs
out
and
call
xchg
je
mov
out
ja
adc
xor
fidivrl
mov
lock
jmp
in
jb
and
cmp
push
ljmp
js
lcall
pop
fs
subb
mov
fcomip
lcall
push
outsb
inc
mov
cmp
jbe
sbb
lods
xchg
mov
fs
jnp
push
shlb
sub
jmp
mov
repz
pop
shrb
sbb
adc
jecxz
out
push
push
pop
push
fdivs
sub
mov
sub
cwtl
scas
pop
inc
lds
pushl
sbb
push
scas
ret
xor
ss
cmc
cwtl
adc
in
xchg
sbb
xchg
ljmp
jp
fldt
and
lods
fcoms
dec
cmp
and
arpl
pop
pusha
test
mov
jecxz
fst
mov
out
mov
push
loope
jle
adc
mov
or
cwtl
mov
push
cld
dec
ss
sbb
jmp
mov
sub
lret
xchg
data16
push
pop
xor
aaa
jp
cli
outsb
pop
cmp
call
enter
dec
jae
loopne
xchg
dec
shlb
in
jg
add
incl
and
into
adc
out
add
lret
fwait
push
test
add
push
sbb
ljmp
xchg
mov
add
int
or
lods
jmp
xor
pop
jns
mov
decl
fmuls
les
xchg
sbb
jecxz
adc
xlat
rorb
out
add
cmp
xchg
and
hlt
cmpsb
pop
adc
cmp
cmp
jmp
ret
leave
cld
fcmovbe
pushl
ja
pop
jne
imul
pop
inc
in
jge
pop
push
daa
outsb
xchg
sbb
dec
sbb
jle
nop
ret
cli
and
lods
fs
sub
or
or
test
ljmp
jae
lods
ds
incl
push
and
rol
adc
mov
stos
or
xlat
ss
call
outsl
jmp
sbb
or
cmpsb
push
loope
cmp
enter
sbb
lcall
mov
jp
add
mov
jge
fimuls
inc
neg
cmc
inc
fmull
cmpsb
xchg
std
jg
pop
adc
or
gs
cmpsl
xor
jae
outsb
lcall
mov
in
mul
xor
sbb
sub
jmp
fcmovnb
cmp
or
mov
lcall
in
jecxz
das
scas
icebp
fisubrl
fsub
repz
xlat
jne
pop
hlt
fwait
push
push
mov
lcall
mov
xor
jp
repz
mov
mov
push
lret
push
decl
in
sub
sub
cmp
dec
ds
jb
mov
mov
xlat
popa
scas
movb
cli
popa
iret
fcomps
ficomps
inc
mov
mov
bound
fstps
dec
filds
incl
lahf
pop
mov
pushf
pushf
test
mov
pop
jle
or
ret
int3
or
mov
mov
ljmp
clc
test
lahf
and
leave
in
push
pop
cltd
fcompl
mov
or
cltd
out
mov
jle
mov
cli
jae
push
call
inc
mov
jmp
jnp
push
cmp
xchg
cmp
xchg
push
inc
hlt
repnz
enter
push
mov
scas
cli
mov
cmp
mov
outsl
mov
and
xchg
dec
insl
sar
call
pop
repz
daa
imul
inc
in
mov
lock
xor
clc
addr16
jmp
insb
xchg
inc
mov
in
aaa
leave
das
cmp
repz
in
in
in
cwtl
stos
jg
das
in
jmp
mov
jecxz
xor
and
mov
mov
shrl
ds
mov
lcall
lret
icebp
mov
pop
or
dec
ljmp
rcll
xchg
scas
mov
mov
lret
xchg
shr
sbb
and
mov
mov
cmpl
cld
fisttpl
lods
push
fisttpl
xchg
or
push
icebp
sahf
dec
fnsave
shrb
add
pop
in
sbb
lcall
aad
cmp
pop
mov
cmpl
push
aas
jo
outsb
jmp
cld
filds
jmp
clc
insl
mov
ljmp
addr16
xor
jmp
and
pop
repz
sub
push
pop
ficoml
mov
call
notl
jns
pop
sar
int
xor
sub
jg
jne
sbb
incl
and
bound
ret
adcb
xor
inc
sbb
pushl
mov
frstor
jne
mov
jmp
fsqrt
xor
pop
jle
jg
inc
mov
mov
sub
rolb
mov
and
decl
aaa
sti
pop
movsl
pop
into
dec
out
sahf
xor
std
adc
mov
pushf
and
xor
std
incl
mov
add
cmp
lock
dec
jmp
lods
int3
in
xor
dec
jbe
std
decl
imul
push
movsl
mov
or
push
inc
jbe
nop
adc
xchg
pop
mov
ljmp
aaa
lock
jmp
pushf
fisubl
fidivrl
pop
in
scas
decl
push
pop
orb
push
xor
rolb
out
xor
inc
push
pusha
mov
ljmp
testb
repz
xchg
std
push
fstpt
and
ret
mov
push
push
cltd
divb
xor
push
add
iret
mov
jno
in
leave
daa
dec
lds
xorb
pushf
data16
and
jmp
xor
add
and
pop
stos
ds
fcomip
mov
scas
pop
and
hlt
dec
jg
add
in
cmp
push
shrb
lcall
repz
sbb
aaa
addr16
dec
dec
add
incl
sbb
aas
bound
mov
dec
fnstsw
mov
aas
xchg
ficompl
pusha
and
push
imul
push
inc
or
in
dec
lret
daa
push
mov
cwtl
adc
mov
jmp
jae
test
cwtl
jge
xor
sub
pushf
push
pop
cmp
divb
push
lds
sar
dec
out
aas
jge
inc
bound
mov
inc
cmp
dec
std
testl
in
rcll
jmp
aaa
jo
mov
mov
dec
inc
addr16
push
jno
dec
std
mov
dec
push
dec
mov
push
inc
movq
mov
cli
sbb
mov
lret
addl
fcoml
repnz
xor
ljmp
aas
in
pop
aam
sbb
out
inc
push
sub
mov
jmp
ljmp
inc
jl
pop
push
adc
inc
mov
or
mov
pop
cmpps
adc
fnsave
push
pusha
test
pop
into
fisttpl
mov
fidivs
mov
sti
call
sub
incl
rcll
mov
std
add
mov
pop
xor
incl
ljmp
or
je
stc
cmpsb
xchg
std
jno
adc
dec
push
cld
mov
add
push
aaa
inc
and
shlb
cmc
push
pop
add
ficoms
loopne
jmp
js
mov
lods
cmp
jg
pop
jecxz
call
int
pop
push
jge
cmp
xchg
jae
fdivr
or
imulb
cld
ljmp
sub
loop
test
fs
add
pop
les
mov
scas
dec
inc
dec
push
add
push
divb
jl
xlat
xor
jecxz
mov
call
stos
pop
and
xchg
stos
loopne
and
cmpsl
dec
xor
pop
mov
or
ljmp
les
sbb
idiv
dec
inc
xor
into
inc
adc
mov
dec
push
decb
xor
rolb
movups
js
ljmp
movsb
adc
fdivrs
cwtl
addr16
ljmp
decl
mov
dec
and
jae
js
and
push
test
int
clc
loop
inc
sbb
cli
push
andb
leavew
std
push
dec
pop
xchg
daa
push
xchg
daa
jb
out
cmp
lods
xor
jmp
mov
aaa
data16
ja
mov
jmp
jmp
clc
loop
sbb
and
and
hlt
or
mov
or
add
mov
bnd
xor
cmp
pop
mov
cwtl
mov
xchg
cmpb
hlt
insb
lret
cmp
fcmovnbe
out
or
incl
inc
fninit
cli
fwait
js
mov
pop
aam
mov
and
pop
inc
inc
stc
dec
pop
and
incl
adc
pop
popa
xlat
rorl
cld
and
sbb
sarb
aaa
std
stos
xor
adc
adc
ss
and
pushf
cmp
cmp
mov
add
pop
cmpl
adc
push
lock
push
push
mov
mov
outsl
clc
decl
cwtl
cmp
in
out
test
push
icebp
jb
cmp
stos
inc
lods
mov
andb
lods
cs
push
inc
jnp
fisttpll
sahf
arpl
pop
int3
dec
push
outsl
fwait
pop
or
lcall
pop
loope
mov
inc
jae
sti
push
ljmp
mov
lcall
lcall
jne
mov
mov
sarl
ret
nop
sarl
pusha
out
lahf
sbb
dec
inc
mov
incl
clc
outsl
test
pop
ret
mov
push
jp
cld
or
cmp
push
test
mov
xor
mov
js
or
lcall
sub
push
mov
ret
jb
mov
shr
test
inc
int3
ljmpw
pop
ljmp
test
jg
mov
ja
int3
pop
or
out
mov
test
cltd
dec
pop
sbb
or
incl
and
out
sub
jno
xchg
pop
mov
int
lock
out
cs
popa
mulb
fcomp
and
mov
addr16
sbb
cli
mov
add
xchg
xchg
test
movsl
or
pop
or
adc
jmp
sbb
sbb
cmp
hlt
xorb
lds
daa
lret
fildl
push
insb
daa
inc
test
loope
jmp
or
lds
in
pop
inc
or
cltd
sub
jge
ljmp
push
les
pop
push
movzwl
cwtl
and
xchg
mov
imul
adc
loopne
icebp
aaa
cld
call
jae
push
push
notb
sub
gs
lcall
pop
icebp
pop
out
test
popa
movl
cmpsl
xchg
push
int
loope
addr16
ljmp
sahf
in
fiadds
sub
push
loopne
inc
js,pt
lds
jbe
sub
fidivs
lcall
add
int3
subl
jl
lahf
inc
mov
decl
lds
aaa
jg
mov
jge
adc
lods
cmp
push
jle
js
pop
adc
pop
and
cmp
mov
es
scas
icebp
js
aaa
pop
lcall
pop
cmc
pushl
xchg
and
xchg
xchg
push
lock
aaa
mov
sbb
subb
jmp
dec
adc
add
push
icebp
sub
aas
jo
pushl
iret
leave
and
xchg
mov
ljmp
iret
mov
cmp
aas
dec
push
cmpsl
or
fs
push
cmp
fistl
and
push
or
out
mov
and
scas
lcall
xor
dec
inc
in
imul
outsl
clc
decl
jmp
cltd
adc
cld
enter
fimull
jb
jo
cmc
mov
xorl
inc
or
std
push
jbe
xchg
pushaw
cwtl
mov
std
repz
call
addr16
cld
sbb
test
jge
mov
aam
cmp
cli
inc
lock
mov
mov
add
lcall
xchg
orb
pushl
or
fwait
aas
les
test
fmulp
pushf
inc
mov
fnstsw
das
clc
pop
adc
xchg
sbb
dec
ss
enter
push
lods
mov
and
arpl
mov
pop
negl
inc
mov
in
fcom
repz
sub
int
fs
nop
cmp
mov
mov
pusha
popa
mov
xor
fldl
rorl
adc
in
clc
mov
adc
out
sbb
decl
xor
out
mov
xchg
roll
iret
icebp
mov
xlat
pop
dec
pop
jl
outsl
jge
nop
movsb
not
pop
enter
jecxz
jmp
into
push
sub
loopew
jmp
in
incl
les
dec
and
pop
nop
push
jb
fsubrl
pop
and
mov
in
dec
decl
xlat
xor
stos
push
jo
nop
fs
pop
rcrb
test
out
mov
jmp
movsl
ret
xor
adc
cmpsl
lds
cmp
mov
jg
inc
ds
imul
out
loop
stos
repz
xor
fcompl
decl
shlb
adc
subb
dec
push
sub
xlat
popf
dec
mov
cmp
sti
add
nop
ljmp
sbb
mov
sub
fwait
sub
call
decl
xor
insb
into
and
pop
mov
icebp
adc
cli
lret
call
outsb
mov
mov
jecxz
divb
repnz
adc
mov
das
mov
jmp
nop
push
in
jl
subb
aaa
jg
dec
sub
xchg
adc
xchg
cmc
ja
adc
or
mov
ljmp
cmp
mov
lahf
pusha
add
inc
jl
nop
mov
loope
sbb
dec
xchg
mov
jle
lret
jno
movsl
xor
movsb
sbbb
rcl
pop
int
fdivrp
jg
jl
or
dec
dec
jle
ficompl
jnp
sbb
cmc
test
jp
inc
push
std
pop
cmp
imul
pushf
in
or
mov
enter
shrl
xchg
and
enter
adc
or
sbb
adc
jae
inc
add
test
pop
ficoml
push
cmp
orl
pop
insb
dec
scas
pop
jb
cmc
das
pop
loope
ljmp
cli
icebp
int3
cmp
incb
adc
fwait
out
or
das
dec
add
jp
arpl
sar
incl
lret
dec
add
pushf
mull
lock
pop
cmp
in
cli
xor
movsb
pop
fwait
jmp
rcrl
pop
mov
mov
adc
fmull
ljmp
push
nop
daa
xlat
jecxz
cmp
pusha
out
mov
jns
or
inc
aas
mov
incl
dec
ret
imul
sbb
movsb
lods
cltd
mov
std
mov
push
and
or
cmpsl
inc
xlat
test
mov
push
shr
std
into
imul
rolb
test
dec
push
mov
out
push
adc
in
test
test
scas
shlb
js
insl
int3
in
iret
xor
push
adc
pop
pop
mov
rcl
adc
test
int3
outsb
mov
and
cli
loopne
pop
into
sti
xlat
outsl
jmp
adc
test
lea
int
pop
decl
rolb
jecxz
gs
mov
cld
pop
and
fstl
rcl
inc
pop
jg
aas
push
sub
pop
pop
push
sbb
nop
ja
mov
cmp
dec
je
or
jmp
xchg
xor
push
mov
pop
jmp
mov
shrb
inc
aaa
daa
jecxz
mov
cmpsb
sbb
fisubrs
mov
ljmp
frstor
sub
mov
repnz
out
enter
fs
ljmp
call
xadd
insl
loop
fcmovne
clc
adc
mov
mov
xchg
mov
pushl
adc
mov
dec
or
test
xchg
or
mov
mov
jecxz
clc
pop
fwait
cli
cmpsl
sub
cmp
cmp
stos
mov
ljmp
push
push
loope
mov
pushf
shll
lea
es
sarl
xchg
lds
xor
nop
adc
cmpsb
mov
sbbl
sub
sarl
add
mov
loop
cmp
fs
out
ret
cmp
rorl
ljmp
mov
sti
insl
mov
icebp
ljmp
mov
adc
push
lret
and
sub
or
fnstsw
lcall
xchg
xchg
popa
cmp
inc
mov
pusha
movsb
ret
cmp
push
inc
lods
out
cld
dec
or
idiv
ljmp
inc
push
adc
int3
incb
xor
lock
mov
shl
aad
xor
movsl
dec
aaa
pop
clc
lcall
aaa
adc
aad
mov
jl
outsl
out
fcomps
cli
xchg
cmc
xchg
pop
outsb
mov
loope
daa
pushf
mov
bound
jbe
add
lahf
xor
lea
pop
les
andb
mov
mov
xor
bound
aaa
sahf
arpl
mov
xchg
mov
mov
dec
incl
mov
mov
popf
xor
nopl
xchg
push
pushl
cmp
leave
dec
xor
aas
jp
sbb
test
clc
movsb
ljmp
jb
cmpb
add
stos
in
add
loop
inc
loopne
push
adc
pushl
fsubl
push
xchg
jle
cmp
push
push
nop
outsb
loope
dec
dec
sbb
pushl
fidivrs
add
pusha
mov
out
gs
scas
repz
push
fidivrl
call
inc
mov
pop
in
push
push
test
test
dec
insl
inc
cltd
add
cmp
je
in
ljmp
add
inc
lods
push
lds
push
je
lahf
popf
enter
xchg
setno
jg
out
out
sahf
xor
add
ret
mov
push
js
pop
xor
cmp
loope
dec
mov
pop
mov
ret
adc
xchg
inc
ljmp
sbb
hlt
decl
jns
cmp
add
nop
cmpsb
in
jb
lcall
popf
fmull
bswap
xchg
mov
and
inc
mov
fwait
adc
in
cltd
js
add
lea
fldlg2
mov
xor
mov
or
arpl
cli
lcall
decl
repnz
stc
xchg
dec
mov
sub
aas
ficomps
pop
sub
inc
lret
mov
xchg
mov
popf
out
dec
not
adcl
call
in
lahf
adcl
pop
lea
jmp
outsl
test
in
fists
into
xlat
das
das
and
adc
xchg
hlt
cmpsl
scas
jmp
lret
xchg
push
jbe
mov
or
jecxz
insl
mov
jle
jmp
fwait
jge
fcoms
bound
dec
adc
push
and
scas
shr
ds
cltd
ljmp
mov
pop
es
arpl
push
sbb
mov
sbb
push
adc
cmp
lea
and
call
sbb
xor
fisttpl
hlt
rorb
pop
mov
push
es
jg
sbb
popf
push
shlb
add
push
shll
call
popa
jmp
inc
add
arpl
gs
insb
inc
std
fsubr
sub
ja
mov
stos
xchg
inc
mov
inc
ss
xchg
ljmp
jmp
xchg
imul
adc
ret
pop
insb
outsb
loopne
and
jae
add
fcmovnbe
pushl
add
sbb
loop
jb
sub
push
inc
inc
int3
adc
and
jmp
out
push
mov
decl
scas
dec
mov
int
scas
xchg
xchg
sbb
mov
lock
cmpsb
add
jmp
and
jo
sub
push
data16
dec
loopne
and
int
mov
movsb
pop
dec
lods
pushf
add
cwtl
decl
hlt
loop
mov
mov
inc
jle
sub
jo
jp
inc
dec
pop
jmp
mov
test
lods
sub
dec
pop
inc
xor
ffree
pop
incl
repnz
nop
ret
jbe
gs
in
mov
pop
push
pop
adc
jae
mov
cltd
xchg
int
pushl
pop
pop
jb
ror
sub
xchg
in
insb
fimull
inc
loope
hlt
jl
incl
je
mov
pushw
icebp
out
lcall
shll
pop
sub
mov
lcall
mov
inc
lds
pop
jbe
sub
or
push
ljmp
outsl
inc
test
loope
ljmp
and
ficoml
mov
cli
divb
mov
pop
adc
clc
fs
xchg
cmp
fistpll
or
scas
pop
and
mov
jl
out
cli
test
cwtl
sub
call
insb
ljmp
push
mov
call
mov
popf
sub
push
xchg
adc
cld
jmp
xor
sub
dec
and
lcall
ljmp
insl
fldln2
jecxz
sbbl
stos
rcll
push
inc
jne
adc
pop
cld
inc
cwtl
fnsetpm(287
sub
adc
mov
mov
incl
xchg
mov
cmp
sbb
cltd
rcrb
ljmp
bound
test
cmc
mov
xchg
xor
in
call
xchg
inc
mov
cmp
leave
pop
adc
fwait
and
sahf
gs
int
pushf
iret
ljmp
lods
iret
std
inc
dec
test
or
mov
lods
addb
pushl
xchg
out
mov
outsl
je
scas
push
push
adcb
adc
scas
rorb
stos
lahf
ljmp
aas
inc
fld
jl
in
sbb
nop
push
push
lcall
jle
mov
mov
decl
mov
pusha
std
adc
inc
inc
and
mov
pop
push
and
mov
ljmp
add
inc
loope
gs
cmp
popa
rcll
ja
test
ljmp
dec
sub
jmp
popf
daa
sbb
inc
xor
push
fbld
fwait
inc
push
bound
cmpl
inc
mov
mov
mov
loopne
scas
es
inc
cmc
mov
sub
mov
and
pop
inc
sbb
call
mov
orl
xor
out
scas
and
push
sbb
push
into
test
push
mov
add
incl
cld
les
mov
das
loope
hlt
nop
insl
loope
sub
fistps
fisubs
decl
rcrb
dec
outsl
scas
lcall
sub
jo
dec
cmp
test
mov
ss
out
mov
pushl
daa
aas
or
adc
icebp
dec
cmp
jns
mov
mov
aas
loopne
cmp
incl
sub
out
outsl
jp
rorl
inc
iret
adc
or
clc
call
sub
stos
pop
roll
xchg
add
inc
or
xchg
loop
cltd
cs
cmpsb
in
test
sbb
jle
andb
jecxz
cmpsb
mov
les
pop
in
je
lcall
sbb
fidivrs
imul
sub
adc
rolb
adc
xchg
adc
movsb
push
das
pop
xchg
xor
jmp
dec
sbb
sub
add
xor
stc
lret
jge
popf
shl
mov
loop
aas
or
call
pop
jle
adc
fcompl
pop
pop
je
dec
dec
push
xchg
rorl
orl
xlat
xchg
xorl
ljmp
push
cld
fcmovnbe
adc
inc
mov
jge
in
push
mov
popf
into
pop
lcall
and
sbb
pop
addb
mov
rorb
jg
dec
mov
data16
inc
pop
pop
cs
and
lret
mov
xor
cli
inc
mov
cmpb
or
add
fistps
jg
push
lods
and
sbb
ljmp
movl
or
xrelease
sbb
push
sbbl
mov
fldenv
push
sub
ficomps
movsb
into
mov
push
pop
sub
icebp
cmpsl
inc
dec
insb
jns
mov
pop
shlb
mov
inc
pop
in
fsubs
mov
ds
ja
push
addl
sbb
xor
es
cltd
jmp
and
push
dec
xor
inc
add
push
ret
mov
icebp
jb
std
fxtract
mov
push
push
movsl
subl
jae
cmp
pop
jbe
adc
les
dec
iret
dec
and
xlat
xchg
sub
ds
call
xor
jne
inc
push
test
pop
mov
popf
popa
mov
out
cmp
adc
cmp
clc
mov
pushl
out
and
rcl
imul
jmp
aas
xchg
push
rcrl
dec
repz
pushl
lcall
out
iret
shrl
inc
test
adc
adc
fdivr
mov
jp
test
stos
fwait
lcall
and
jle
push
xor
pop
incl
or
adc
add
inc
sub
imul
adc
xchg
jmp
nop
add
jp
into
push
pop
lods
cli
or
sub
int
cmc
jge
xchg
pop
pop
aad
popa
cmp
sub
fmuls
outsb
mov
stos
mov
xchg
loop
rol
lret
scas
repz
adc
out
and
shll
repz
push
call
into
pop
dec
lock
inc
bound
xchg
dec
add
shrb
sbb
call
jg
mov
lods
es
or
adc
fisttpl
pop
adcb
and
ljmp
mov
jle
ljmp
outsl
lods
call
jp
mov
mov
add
aam
pop
sub
clc
pushl
cli
push
icebp
add
mov
inc
xchg
call
jg
ljmp
or
inc
andb
nop
cmp
gs
enter
dec
push
cmp
dec
xchg
mov
js
gs
jbe
pop
jl
test
out
xchg
mov
mov
lock
mov
or
sub
mov
out
sub
jmp
jne
push
mov
sub
movsb
push
or
lods
clc
decl
jle
push
ss
stos
ret
sub
xor
adc
je
clc
lret
push
cmp
ljmp
test
stos
push
iret
jp
push
cmpsl
insl
inc
mov
add
xchg
not
jb
lcall
lds
ds
xchg
mov
mov
cmpsl
icebp
push
insl
sbb
fcoml
jmp
adc
clc
push
push
pop
out
mov
adc
add
cmp
xor
push
lret
fwait
add
mov
outsb
scas
aad
cmpb
scas
cli
fildll
sbbl
jle
dec
mov
sbb
or
jbe
fildll
lcall
decl
test
subb
dec
stc
jmp
shr
xor
cli
stos
out
lods
cli
jbe
insl
mov
mov
into
mov
jecxz
call
or
mov
fcmove
sti
or
int3
jno
mov
out
or
ljmp
popf
inc
lret
out
xor
add
jb
xlat
mov
call
cmp
lahf
cmp
lea
addr16
and
sub
fstpt
xchg
xor
dec
and
and
jp
shrb
in
shl
xor
popa
cld
pop
inc
stc
bsr
int3
dec
adc
sbb
lock
daa
jns
hlt
inc
aas
dec
mov
pushl
into
mov
pop
xchg
icebp
stc
sbb
push
lcall
sub
jmp
inc
sbb
or
inc
push
jle
bound
xor
xchg
es
stos
push
jbe
addb
ret
push
orl
mov
inc
mov
inc
cmc
subb
mov
jg
pop
pop
inc
dec
mov
push
adc
jle
xchg
sub
push
fnstenv
ds
cmp
cmp
ja
mov
mov
jb
fwait
push
test
rcl
xchg
test
adc
popf
aaa
shl
jmp
incb
xchg
ja
cmpsl
arpl
enter
imul
mov
fdivrp
in
and
stos
aaa
or
leave
mov
adc
es
mov
lods
jae
jmp
ljmp
xchg
jecxz
and
push
cmp
cmp
mov
testl
pushl
xchg
insl
movsb
add
push
push
clc
cmpl
divb
test
lcall
jbe
pop
cmp
mov
or
outsl
mov
hlt
jmp
cmc
fsubrs
jbe
or
fimuls
push
dec
sub
stos
test
jmp
mov
pop
scas
jmp
in
inc
adc
or
xchg
xlat
inc
mov
dec
and
mov
jmp
jecxz
mov
mov
mov
or
jg
jbe
mov
sbb
lret
xchg
add
aaa
inc
mov
mov
incl
leave
mov
rcll
mov
and
leave
jb
shll
bound
imul
mov
inc
imul
push
ret
add
data16
dec
es
scas
divl
cmp
or
into
cmpl
dec
or
js
ljmp
cld
loop
or
insl
aad
test
adc
or
ds
add
fwait
dec
adcl
jmp
out
jns
xor
jo
mov
add
fdivs
sub
push
test
mov
pushl
invd
mov
std
mov
add
mov
push
fisttpl
cli
xor
pop
pop
sti
scas
incl
into
test
xchg
cltd
cmp
loop
inc
cmc
xchg
lock
jmp
int
int
mov
fs
incl
cmpb
mov
jns
aas
out
jecxz
push
sbb
sub
negl
outsl
jg
lcall
cmpsb
shll
jne
fs
inc
jno
xchg
sbb
std
xchg
sub
clc
std
repz
add
push
pushaw
adc
mov
outsl
stc
popa
scas
and
sbb
sahf
sbb
inc
cmp
das
lods
movsl
push
pop
jmp
dec
push
push
lock
mov
xchg
movsl
ljmp
loop
push
and
mov
fnstenv
inc
int3
xchg
lods
bsf
cmpsb
jns
or
jmp
sub
sbb
ja
int3
lods
cltd
jge
mov
xchg
jae
add
decl
cmpb
repz
xor
pop
aad
aam
mov
enter
cmpsl
or
mov
or
in
insb
dec
stos
daa
les
mulb
dec
pushl
pop
push
mov
jbe
lds
dec
insb
or
and
dec
jb
sbb
decl
xor
insb
push
sbb
pop
cmp
cmp
cld
xor
testb
add
fwait
iret
adc
ss
mov
lcall
jge
fwait
ds
push
or
pushf
pop
aaa
lahf
add
daa
cmp
out
cmp
ljmp
test
cmpsb
fstpl
dec
mov
push
pop
adc
in
ss
nop
ficoml
pop
adc
mov
ljmp
arpl
insl
int3
mov
scas
pop
incl
ljmp
pop
hlt
push
je
push
jb
test
dec
xor
aaa
push
mov
es
adc
push
push
cmc
pushf
arpl
adc
jl
out
in
into
or
scas
out
lret
loopne
add
imul
das
clc
lcall
and
mov
test
mov
mov
scas
dec
jne
nop
mov
loopne
pushl
enter
sbb
xor
jo
jb
push
pusha
fcmovbe
popf
mov
repnz
fbld
xchg
cmp
or
or
and
call
and
pop
cs
test
push
out
ja
and
shl
add
or
push
test
adc
pushl
dec
mov
dec
fucom
xchg
push
jl
mov
xor
jbe
xlat
dec
mov
xchg
jns
push
loope
fldt
std
mov
mov
test
push
xor
push
sahf
mov
push
clc
jnp
pop
lcall
call
cmp
push
lds
sahf
or
adc
decl
dec
testb
cmove
lods
jnp
lahf
daa
inc
ss
mov
inc
shld
jmp
cli
inc
notl
sub
fcmovu
push
or
fnstenv
arpl
xchg
mov
call
cmp
ret
test
int3
sub
mov
mov
fidivs
lret
lret
inc
inc
jbe
inc
jmp
sbb
icebp
in
out
bound
call
push
xor
imul
shlb
xchg
movsb
or
xchg
jo
stos
xchg
cli
call
bound
cmovno
insl
clc
jge
scas
inc
inc
or
dec
cmp
jle
sub
or
incl
fistl
add
scas
xor
pop
ficomps
mov
jp
pop
leave
loop
stos
pop
jns
in
call
cs
repnz
push
xor
insb
mov
xor
mov
test
jmp
xor
or
mov
mov
xchg
mov
mov
es
lcall
bound
cltd
cli
jb
pusha
or
add
or
inc
js
mov
cmp
lods
loopne
cmp
and
or
or
repz
jge
out
int
sarb
jle
add
push
aaa
imul
cmp
xchg
mov
inc
stos
movsb
fwait
jp
pop
movsl
std
mov
popa
sarb
mov
sarb
jne
decl
mov
imul
loope
or
hlt
dec
aad
fs
fadd
inc
fld
adcb
jg
jmp
idivb
cmpsb
and
data16
xchg
or
push
ljmp
xchg
cmp
sub
sub
lret
mov
test
xor
mov
push
xor
sbb
pop
mov
jae
shll
mov
sub
xor
lcall
add
pop
test
leave
dec
call
pop
add
push
jg
fmull
fwait
lcall
lods
addr16
rolb
addr16
cmp
into
rdpmc
add
ljmp
cli
add
adc
mov
dec
lods
mov
fstpt
and
fbld
cli
ljmp
inc
xchg
in
sub
jge
ja
cld
pushl
push
gs
stc
cltd
cmc
rorl
or
lods
xchg
test
jb
mov
xor
fidivrs
test
jg
cmp
jno
add
cmp
repz
push
into
mov
int
stos
clc
lock
addr16
scas
stos
sbb
fildll
mov
pusha
loope
daa
in
jne
addb
jmp
es
arpl
lcall
jns
mov
sub
in
jns
push
push
ficompl
dec
jl
or
dec
test
or
mov
divl
cmp
sub
test
jb
mov
cmp
sbb
cmp
clc
pop
xchg
push
inc
adc
fcomip
es
jmp
lahf
xchg
xor
push
cs
xchg
xchg
imul
pop
lcall
cmpsl
decl
lods
mov
pusha
jmp
mov
push
inc
movsl
adc
shll
and
and
sbb
loope
shrb
sub
rcr
lods
cmpsb
imul
xchg
jns
decl
jp
shl
mov
sarl
dec
xchg
scas
idivl
enter
sti
push
sub
pop
lcall
fcoml
jae
cld
push
jno
mov
out
clc
pushl
mov
mov
ljmp
nop
pop
insb
mov
inc
aam
je
add
mov
enter
or
push
or
xlat
call
loope
leave
andl
clc
sub
aam
das
rolb
lods
jmp
jle
mov
ljmp
js
pop
mov
push
xor
clc
cmp
cmp
movsb
mov
ljmp
incb
scas
popf
data16
sbb
jns
xchg
mov
xchg
and
fdivrs
and
jp
decl
mov
aam
mov
std
fldl
mov
mov
incl
mov
xchg
pop
aam
mov
adc
lahf
add
in
mov
insl
adc
popl
sbb
add
mov
xchg
and
lahf
ss
jmp
daa
push
imul
xchg
cli
pop
push
mov
stos
fistps
adc
fcomp
movsb
mov
ljmp
jg
pusha
xchg
fcmovu
pop
dec
mov
add
adc
push
std
decl
xor
xlat
les
jns
movsl
push
adc
inc
fwait
sub
inc
and
in
sti
cmp
lahf
lock
stc
or
xchg
xchg
mov
cwtl
lods
xor
pop
pushl
push
mov
or
aas
ljmp
repnz
or
mov
dec
push
enter
mov
adc
xor
or
ss
bnd
stos
adc
add
inc
add
imul
ret
js
cmpl
jg
js
icebp
lcall
testb
in
dec
pushf
cli
mov
in
loop
cmp
cmp
loope
inc
mov
out
shrl
add
mov
push
xchg
dec
add
call
aas
add
cmp
mov
mov
inc
sub
imul
push
movsb
leave
rcll
and
mov
add
sahf
mov
outsb
cltd
clc
pop
sub
hlt
add
outsb
dec
in
sub
inc
xchg
out
test
xlat
popa
cmp
aad
imul
enter
sub
adcl
pop
xor
divb
mov
lret
ffree
mov
pop
lods
movsl
mov
leave
aam
bound
in
jecxz
adc
xchg
rorb
ljmp
ja
cmp
sub
mov
inc
jge
ljmp
imul
jmp
push
pop
das
mov
xchg
imul
cmp
imul
jmp
nop
cld
movsl
jns
mov
push
mov
jne
icebp
dec
pop
jge
dec
aam
inc
cld
out
mov
bound
and
mov
cmc
cmpsl
loopne
jle
add
ja
lcall
cwtl
and
lcall
or
sahf
int3
and
out
lods
inc
lcall
daa
iret
ja
call
sbb
xor
xlat
dec
mov
cmp
cmpsb
xor
testl
mov
jbe
rolb
div
js
std
pushl
inc
daa
xor
adc
sti
inc
pop
mov
cmp
js
cmpsl
sub
fstpt
push
sar
jg
mov
or
xchg
scas
incl
cmpsb
jl
loopne
lcall
xchg
cmpsl
pop
out
xor
movsl
cmpsb
cwtl
cli
cmp
adc
push
ret
mov
add
mov
add
aam
out
dec
dec
aam
fidivrl
sbb
xor
daa
movl
inc
jmp
loope
jo
mov
cltd
mov
outsb
add
loop
nop
or
int
or
insl
inc
test
scas
loop
shlb
loop
in
movsb
mov
push
xchg
push
andl
clc
or
pop
aam
rcrb
cmpsl
inc
push
jp
adc
xchg
sub
mov
loope
daa
mov
and
pushl
std
leave
sbb
xor
push
cmp
aad
dec
imul
movsl
ds
in
ljmp
mov
or
mulb
mov
adc
push
lods
xchg
pusha
and
jno
jmp
fdivr
jo
inc
pop
pop
insl
mov
or
dec
dec
mov
loope
std
mov
movsl
fst
push
jae
inc
dec
xchg
xchg
lds
push
mov
testb
es
mov
bound
stos
call
clc
xchg
mov
jp
out
adcb
jns
xor
insb
std
test
and
popl
std
dec
dec
sub
repz
sub
adc
xchg
fisubl
cli
mov
xor
sbb
dec
pushl
mov
xchg
push
imul
dec
sub
in
fidivrl
loopne
push
lea
sti
sub
cmp
jmp
add
push
insb
xchg
mov
fldt
inc
test
cmp
jno
gs
sbb
mov
sbb
dec
xchg
pop
fdivrl
pop
dec
subl
mov
mov
cwtl
arpl
call
xchg
int
xorl
aam
lods
and
outsb
in
int3
int
scas
cltd
cwtl
jbe
mov
sbb
sub
cmc
flds
aas
dec
lahf
jp
and
add
icebp
mov
int3
add
xor
je
cwtl
je
pop
cmc
outsb
xor
mov
mov
push
cmc
ljmp
aad
pop
fcmovnb
repnz
jbe
mov
push
pop
inc
ljmp
gs
mov
cmp
faddl
jmp
lods
fcoml
dec
inc
xchg
add
sbb
cmc
or
pop
ja
insb
mov
jg
int3
loope
dec
jle
lock
and
dec
cltd
fcomp
ljmp
or
aad
lcall
push
stos
sbbl
shl
stos
sbb
fidivs
and
mov
cmp
incl
xchg
pop
and
mov
loopne
dec
enter
in
cmc
shll
movsb
fwait
movsb
mov
push
mov
dec
cmp
mov
add
jl
or
adc
mov
xor
pusha
dec
fwait
mov
pop
push
aas
scas
dec
sti
xbegin
dec
shlb
decl
lahf
lods
add
mov
lcall
cmpsl
scas
jp
test
cmp
lret
xchg
cwtl
roll
lret
scas
sahf
ss
jl
xor
push
jle
fbld
loope
insl
jmp
push
pop
sub
faddl
lret
jmp
stc
add
jle
mov
xchg
cmp
jmp
inc
sbb
daa
sub
insl
push
stos
jge
mov
pop
dec
daa
sti
into
mov
je
xor
in
fwait
or
push
add
loope
xchg
jle
push
and
hlt
cwtl
nop
call
scas
mov
lcall
int
mov
cmpsl
stc
jp
push
clc
add
mov
cmp
jne
stos
mov
mov
xor
std
mov
push
mov
das
lea
mov
push
test
sbb
dec
and
push
cmc
mov
mov
loopne
and
fistpll
xor
adc
push
data16
add
pushl
testb
mov
popa
xor
js
mov
sbb
mov
mov
decl
data16
sub
push
smsw
jb
mov
mov
push
subb
lcall
cmc
repz
mov
ret
aaa
or
lcall
je
mov
cmp
pushf
push
cmp
jle
sub
pop
and
mov
mov
mov
jle
jecxz
pop
push
xor
outsb
ret
sbb
pop
decl
jns
test
inc
enter
or
add
bound
ja
ljmp
repnz
call
jo
or
out
adc
mov
scas
dec
pop
idiv
aaa
cld
cmp
insb
jmp
mov
leave
xor
int3
pop
call
sub
mov
call
paddw
fiaddl
testb
mov
mov
orb
sti
cmpsb
ret
pop
dec
std
ljmp
dec
cmpsb
js
xchg
mov
mov
fstpt
lcall
jb
in
and
fwait
xor
or
mov
ljmp
lret
mov
mov
jns
mov
pop
jecxz
inc
xchg
loopne
adc
out
imul
pushl
movl
sub
sbb
jp
cmp
mov
fs
js
lods
pop
scas
ljmp
sub
mov
jne
in
int3
jl
lods
out
xchg
jle
psubusw
push
push
aam
fnstcw
xchg
sbb
cltd
repnz
cs
push
cmp
push
in
xor
jnp
jns
hlt
mov
imul
pop
adc
cwtl
sbb
mov
xchg
jmp
into
nop
push
ret
or
divb
iret
xor
out
push
pushl
mov
cmpsl
ss
lock
push
push
jge
add
add
call
aad
shrb
jp
sub
test
lret
out
cmp
ljmp
aam
push
loopne
and
sub
inc
adc
cmp
push
data16
arpl
call
rcr
jae
loop
imul
cli
inc
sbb
jge
xchg
xor
ljmp
adc
mov
leave
or
add
or
jns
xor
mov
jae
dec
scas
xor
mov
xchg
mov
xchg
cmpsl
cmpsb
test
bound
in
mov
inc
stos
mov
std
mov
mov
xor
rclb
pop
xor
cmp
dec
ljmp
les
adc
and
sbb
decl
sti
jno
je
xchg
psubsw
pop
xlat
add
jp
pop
xchg
dec
inc
mov
pop
jp
or
or
xchg
notl
scas
shrb
movsl
call
mov
jmp
inc
gs
ds
fs
in
and
xchg
dec
xchg
inc
dec
test
js
sbb
outsb
out
cmp
push
cmpsb
cmc
xor
lcall
sbb
lea
add
iret
gs
call
addr16
jecxz
cld
mov
fstps
out
pop
jle
and
incl
sahf
push
imul
scas
jne
mov
push
jae
cmp
imul
pop
out
addb
mov
popa
fmull
mov
xor
or
mov
call
in
jle
lods
nop
int3
insl
push
xchg
xchg
xchg
icebp
xor
cmp
xchg
in
fwait
sub
mov
in
mov
inc
inc
dec
lock
ljmp
sbb
inc
sti
dec
mov
pop
imul
test
outsl
fiadds
divb
mov
cmp
jmp
in
and
xchg
or
repnz
sub
mov
pop
pushf
mov
cs
ljmp
call
fbld
xlat
aaa
sarl
mov
and
inc
inc
frstor
pop
add
inc
xor
lcall
adc
sahf
jbe
adc
scas
add
add
jno
and
pop
cmp
pop
sub
ret
or
loope
dec
mov
cmpsb
sbb
mov
outsb
adc
repnz
in
push
inc
cmp
dec
dec
lcall
dec
lods
in
fwait
lret
jb
fs
push
or
orl
mov
sbb
call
jbe
jg
add
movsb
icebp
inc
fwait
ja
sub
xor
mov
incl
cld
call
sbb
xor
jb
outsb
mov
cmpsb
mov
jo
mov
dec
pusha
test
pop
push
nop
xchg
aaa
or
pop
xor
add
pop
xlat
xchg
pop
mov
fcomip
pop
call
ja
test
cmpsb
into
stc
rolb
cwtl
leave
pop
or
sub
add
cwtl
cmp
push
or
mov
les
movsb
cmp
pop
fisubrl
pop
imul
decl
add
push
bound
popa
dec
ja
js
rcrl
loopne
decl
fistpl
sub
int
cli
cmp
sbb
push
fisubl
dec
ljmp
pop
inc
lcall
outsl
call
push
das
cmc
sysret
ja
clc
std
ds
mov
bound
sahf
adc
mov
dec
pop
jne
stc
inc
out
jb
leave
mov
pop
xlat
mov
sbb
or
std
jg
lods
out
pop
pop
jno
sbb
js,pn
adc
pusha
mov
scas
call
mov
mov
jp
ds
into
cmpsl
mov
inc
push
push
int3
lock
push
cs
lea
cmp
inc
mov
aam
mov
popf
xchg
add
or
jae
mov
decl
lcall
xchg
sub
cmp
insl
das
xchg
sub
mov
xchg
fcom
les
ljmp
cwtl
xor
mov
dec
stos
jmp
mov
xchg
outsl
mov
add
jecxz
fistpll
dec
sbb
ds
dec
mov
jmp
cmp
call
insb
arpl
or
test
incl
xor
add
mov
sub
cmpsl
push
lret
fists
fdivs
jmp
sbb
or
push
aas
push
rcrl
call
or
ret
adc
xor
sti
mov
outsl
inc
pusha
mov
aaa
cld
pushl
adc
scas
mov
pusha
fdivl
mov
mov
aad
jg
xor
int3
shrb
cs
adc
dec
pop
push
and
movsl
rorb
loopne
jmp
adc
in
js
ljmp
ds
or
cmp
incl
mov
sbb
addr16
xchg
cmp
lock
stos
mov
incl
loope
sbb
mov
lret
inc
xor
sub
jae
cli
jo
xchg
inc
repnz
mov
xor
cmp
es
xchg
push
stos
lret
cli
ljmp
sar
popl
aad
cmpsb
sub
jle
sub
add
cmc
fcomip
decl
cmp
lea
mov
test
and
mov
xchg
cmp
jmp
leavew
add
jno
adc
cltd
jae
aaa
adc
adc
cmp
jne
or
push
fwait
js
ljmp
cmp
inc
push
inc
mov
pop
lods
lcall
xchg
and
imul
aas
in
mov
adcb
out
push
and
incl
test
pop
fildll
add
inc
lods
lcall
push
cli
stos
sbb
ss
popa
in
and
xor
cmp
mov
mov
and
das
inc
and
mov
push
sti
or
stc
lcall
xlat
rol
aaa
lcall
ror
sbb
add
cmpsl
add
dec
paddd
out
push
sub
mov
movsl
pop
add
lcall
or
cmp
out
clc
ljmp
push
pop
bound
mov
cmp
ret
lods
testl
cli
std
lcall
mov
xchg
mov
sahf
pop
mov
cmp
inc
lods
and
pushl
add
cmpsl
cli
loopne
sbb
imul
nop
cli
ljmp
dec
leave
outsl
fcompl
ret
pop
cmp
pop
das
cld
pushl
adc
repz
and
subb
mov
sbb
mov
movsb
adc
jg
add
fbld
cmc
rolb
pop
add
mov
jmp
xor
mov
cmp
shl
cwtl
fdivr
es
jo
stos
xorl
dec
adc
mov
cli
incl
popf
pop
repz
out
jecxz
or
mov
mov
jp
cmp
mov
stos
mov
into
fldt
cli
loop
or
pushf
bound
decl
jnp
rolb
xchg
fcmovnu
xchg
out
and
loop
decl
loope,pt
fbld
cmc
and
or
stc
jb
mov
iret
mov
jl
imul
push
xchg
cs
cmpsl
les
mov
repz
fnstenv
add
xchg
push
fisubrl
in
loopne
pop
andb
and
fisttps
pop
sbbl
push
sbb
cld
push
inc
mov
adc
gs
test
call
sub
dec
pop
sub
cld
adcb
outsb
jnp
scas
pop
mov
out
adc
es
incb
pop
inc
inc
cmpsb
scas
je
mov
into
iret
lcall
push
stos
pop
sarb
test
cmp
jmp
add
xchg
lahf
cmp
int
in
jge
xor
lea
test
idivw
and
mov
xor
cli
mov
ljmp
lods
dec
add
xchg
sarb
je
ja
jnp
adc
clc
daa
fstp
cmpsl
pushl
stos
imul
fcmovnbe
xor
ret
out
sarl
cmpsb
mov
push
decl
sbb
mov
ljmp
xor
imul
insb
ja
lds
in
lcall
imul
cmp
and
decl
or
cli
add
mov
out
mov
ljmp
hlt
aad
push
push
pushw
pop
iret
xor
daa
push
sbb
inc
pushl
add
dec
mov
pop
popf
xchg
fiaddl
and
pop
dec
movsl
pusha
pop
mov
fwait
ljmp
das
dec
and
fnstcw
aad
je
mov
or
and
ret
jg
pushl
adc
out
mov
sub
inc
insb
sub
jl
addl
xchg
xor
imul
or
sub
adc
lcall
mov
jge
jp
and
lock
mov
push
cltd
sbbb
fwait
cmc
fcomip
incl
pop
jge
addr16
pop
xchg
int
out
mov
std
fldl
decb
sar
jmp
rcll
pop
jnp
and
cmc
xchg
push
out
test
dec
push
add
push
dec
insl
jae
insl
pusha
sbbb
pop
xchg
out
gs
popf
mov
fiadds
inc
xchg
add
call
push
inc
daa
fwait
jb
or
adc
pop
pusha
mov
mov
call
call
dec
xorb
or
repz
movsb
scas
mov
ffreep
jmp
loope
mov
jae
out
cltd
cmc
mov
push
inc
insb
mov
add
test
nop
or
mov
dec
pusha
xchg
add
arpl
push
loope
fidivs
call
cs
scas
add
pop
ljmp
xor
push
adc
call
out
or
inc
cltd
mov
outsl
std
out
xchg
cmc
imul
pop
and
and
push
push
mov
test
pushl
mov
sbb
lods
mov
mov
decb
rcrl
xlat
dec
outsb
xor
lds
daa
call
int3
mov
cs
ljmp
shlb
or
in
inc
cmp
or
incl
daa
out
cmpb
test
jecxz
mov
cmp
mov
pop
ljmp
add
mov
fisubrs
push
adc
pushf
mov
int
cmp
sub
cmpl
scas
loop
movsb
push
push
push
movsl
inc
inc
mov
xor
jmp
shl
jmp
fmull
push
sar
call
fsubl
sub
and
ret
mov
push
call
aas
jg
les
jb
sub
xor
xchg
filds
cwtl
or
test
mov
or
jo
cmp
ljmp
pop
and
jl
or
dec
jb
adc
push
cmp
pop
mov
mov
aas
test
jp
fcoms
leave
movsl
loope
mov
push
jno
inc
jl
dec
dec
cmp
and
in
adc
mov
adc
mov
aas
fstpl
out
cli
mov
mov
loop,pt
lahf
xchg
jle
jae
fmul
shlb
jne
adc
je
jae
xchg
dec
xchg
cmp
test
cwtl
xchg
stc
xchg
dec
iret
shlb
jp
cmp
mov
ljmp
jle
pop
sub
rcll
xor
mov
jo
mov
fildl
test
fmull
movsb
jns
xchg
pop
pop
js
out
push
pop
rolb
dec
lcall
test
rcl
cmpsl
jecxz
loope
dec
pusha
xor
mov
jg
ljmp
push
pop
mov
and
sahf
std
dec
test
pop
sar
das
adc
repnz
add
cld
in
jg
call
mov
inc
lret
xor
addr16
pop
mov
cmp
stos
dec
xor
add
dec
in
mov
lcall
enter
lods
aad
fwait
pop
inc
fs
das
add
mov
push
mov
push
inc
std
cmpsl
in
xchg
rorl
ret
scas
cmp
jbe
cmp
mov
jae
scas
add
jmp
mov
pop
mov
jl
stos
sub
xchg
cmpsl
mov
cmp
push
cmp
std
stc
imul
fdivrl
pop
cld
es
lods
ret
repnz
decl
dec
dec
cmp
sub
and
arpl
sahf
repz
je
jg
enter
lds
lock
pop
add
movsl
pop
xchg
loope
cmp
jl
and
or
xor
xor
std
je
lods
sahf
jecxz
add
jge
movsl
out
clc
inc
lock
jge
enter
movsl
sbb
cld
xchg
jle
fstpl
js
stos
fisttps
cmp
popf
inc
addl
test
pop
in
sbb
sbb
mov
jg
xlat
mov
push
int3
sub
js
dec
jg
cld
fsubrp
pushl
repz
or
movsb
pop
dec
test
adc
sti
jp
lcall
pushl
mov
aam
adc
outsl
movsl
sub
data16
aaa
mov
les
call
iret
cmp
icebp
push
push
dec
testb
sub
in
pop
pop
add
xchg
pushl
mov
sbb
js
fs
lret
cmpb
jmp
outsb
call
mov
cld
lods
inc
lods
cld
sbb
icebp
cmp
aad
dec
sbb
pop
ret
pop
lcall
lahf
in
xchg
rorl
add
daa
and
xor
xchg
cli
mov
and
ret
add
mov
call
repz
xchg
addl
lahf
js
cwtl
movsl
imul
decl
adc
clc
outsl
inc
cmp
cmpsl
pusha
xchg
jecxz
imul
je
andl
jmp
dec
push
dec
ds
add
ret
lds
jns
outsb
sbb
pop
xor
fwait
decb
ret
pop
pop
add
in
jle
mov
int
cli
shll
pop
sbb
cmp
mov
lret
lods
jmp
ljmp
pop
pop
mov
push
movsl
dec
push
jno
decb
aam
push
or
mov
leave
es
mov
adc
sub
mov
lods
dec
mov
in
push
test
fdivr
aas
pop
xor
cmp
inc
icebp
lret
sbb
add
mov
scas
les
inc
sub
incl
cmpsl
enter
vpsllw
cmp
push
pusha
inc
decl
jnp
xchg
lea
sbb
enter
xchg
push
aam
inc
pop
sbb
sbb
xorb
inc
popa
pushl
or
lds
xchg
cmp
idivb
addb
pop
xchg
mov
add
das
mov
dec
adc
loope
jl
mov
pop
les
mov
scas
daa
push
mov
nop
jg
mov
shlb
add
sahf
orl
fstpt
mov
ljmp
outsl
or
loopne
imul
sbb
stc
shlb
fcomi
jecxz
ljmp
jg
inc
fisttpl
mov
sbb
cmp
jle
xchg
daa
lods
popf
cmp
decl
mov
cmp
test
cmp
sbb
mov
cwtl
adc
call
arpl
mov
pop
test
shl
movsl
in
stc
dec
mov
imul
jecxz
mov
cli
pushl
mov
enter
sub
loop
cmpsl
sahf
mov
pushl
ret
imul
jns
add
dec
xor
cltd
sar
inc
or
mov
hlt
push
stc
cmp
or
inc
jae
xchg
pusha
dec
je
xor
xor
cmp
pop
and
addr16
jmp
xorb
lahf
xchg
sub
subb
call
mov
std
cwtl
adc
mov
pop
adc
or
pushl
sub
pop
adc
outsl
loopne
fdiv
pop
stos
adc
hlt
adc
or
inc
je
mov
inc
sbb
jae
lret
jle
add
push
mov
incl
push
xchg
jae
inc
xchg
jg
mov
cmp
andl
pop
sahf
mov
lcall
lea
push
fisubl
mov
iret
pop
sarl
or
jnp
inc
push
sbb
incl
or
adc
out
pop
lret
mov
xchg
incl
subl
mov
aad
sbb
jg
call
pop
clc
jbe
in
aam
dec
push
or
xor
mov
xchg
sahf
push
xchg
ljmp
xor
jecxz,pt
inc
adc
in
xor
data16
out
mov
xorb
shr
inc
es
xchg
cmpsl
push
dec
jg
sub
push
mov
jg
xor
push
outsb
inc
push
popf
fbld
cli
arpl
xor
mov
das
popa
cmp
pcmpeqw
mov
call
cs
adc
push
fldenv
push
inc
pop
jg
mov
push
js
pop
imul
dec
into
test
call
adc
leave
dec
lds
jnp
xchg
push
cmp
push
stc
mov
cld
adc
scas
mov
clc
mov
cmpsb
add
xchg
rolb
loope
rcl
mov
and
jnp
dec
inc
lds
std
decl
and
push
pop
sub
daa
shr
xchg
push
adc
cld
mov
add
pusha
lcall
or
hlt
mov
jae
mov
sbb
data16
pop
cmc
mov
push
sub
cmpsl
imulb
adc
dec
or
loop
mov
mov
ffree
add
pop
shll
incl
sub
nop
xor
call
add
xlat
jns
sti
addr16
stos
cli
stos
into
stc
sar
jmp
scas
push
sbb
and
cltd
mov
sbb
sbb
sti
push
cmp
out
dec
jp
push
cmc
pushl
jmp
and
fwait
iret
gs
lret
mov
lock
mov
pop
je
pop
gs
push
sub
inc
pushl
push
or
mov
movsl
ss
xchg
cli
push
ljmp
fildll
sub
daa
sub
pop
daa
mov
xchg
inc
pusha
jmp
lcall
jg
adc
insb
nop
cmp
jg
cmp
lcall
notb
call
mov
sbb
xchg
and
lcall
test
xor
repnz
movsl
pushl
dec
sub
xchg
sub
pop
pop
int
shl
push
mov
pop
push
test
incl
cli
and
cmpsl
pop
das
imul
mov
shll
in
loop
test
inc
jg
fdivrs
std
leave
jno
inc
test
fucomi
and
daa
call
insb
test
sti
scas
clc
fldl
pop
cmp
xor
cmp
and
inc
sarl
pop
jp
cmp
mov
ss
aaa
xchg
add
dec
mov
pcmpeqd
inc
aam
scas
xchg
test
adc
pop
jo
aas
insb
int
lret
pop
and
aam
cmp
lods
pushl
adc
jl
out
push
or
jmp
cli
jb
and
aaa
sti
nop
mov
cmpsb
pop
ss
xchg
cmp
call
mov
mov
dec
push
ret
enter
aam
pop
xor
aam
inc
or
pop
mov
in
xlat
sbb
jnp
cli
inc
cli
decl
cs
icebp
jle
cmpb
scas
xchg
push
test
incl
pop
jns
jle
push
cmp
and
inc
in
and
sbb
mov
or
push
jl
mov
jmp
dec
lock
sarl
jmp
or
or
insb
decl
dec
insw
inc
push
je
repz
jecxz
inc
ljmp
push
sub
cli
jecxz
mov
ret
lret
dec
cwtl
inc
stos
or
xor
xor
test
xchg
clc
stos
mov
ret
xchg
sbb
push
dec
sub
decl
sub
and
sarl
shlb
and
push
pop
adc
adc
push
xor
bound
rcrb
outsb
mov
shlb
xchg
fcomp
incl
in
fidivs
xchg
shrl
popf
lock
adc
inc
fisttpl
inc
std
add
mov
addr16
jnp
adc
in
sbb
xchg
out
and
out
mov
call
and
fs
add
push
mov
pop
push
and
mov
fistpl
call
push
dec
insb
shl
cmpsb
or
sub
lea
sarb
fidivrl
lods
cli
and
test
ret
mov
jne
push
fdivl
jbe
pushl
adc
add
mov
and
ljmp
and
mov
ljmp
dec
loopne
pop
pop
je
dec
cmc
xlat
in
add
mov
sbb
outsb
pop
mov
decl
xchg
xor
cmp
hlt
fimuls
and
stc
scas
mov
pop
loop
dec
ljmp
mov
stc
ficompl
aas
lret
jecxz
ret
or
dec
gs
cmp
ret
add
jmp
sbb
fwait
push
mov
popf
fsubl
cmp
add
jecxz
mov
aad
jg
xor
daa
mov
xchg
aam
shrl
test
scas
add
sarb
cmpsl
add
xchg
sbb
inc
sarl
and
or
pop
out
push
int
inc
sub
lods
decl
jle
and
or
out
es
mov
sbb
dec
lods
mov
incl
std
call
pushf
xorl
lods
popf
cmp
test
inc
es
add
mov
mov
mov
test
dec
shl
or
mov
mov
decl
pop
insb
sar
call
loop
les
jno
orb
add
xor
fsubrl
inc
negl
cmpsb
sahf
pop
stos
xchg
pop
mov
scas
sub
faddp
cmp
idiv
lds
incl
cmp
dec
xor
push
pop
inc
outsb
shll
inc
cmc
stos
cli
inc
or
inc
dec
add
mov
repnz
cmpb
lret
push
cli
xchg
fstpl
std
sub
call
mov
leave
or
movsb
hlt
fisttps
call
daa
or
push
hlt
push
lret
xchg
loope
jns
insl
lock
add
gs
cmc
incl
movsb
push
mov
inc
mov
cltd
or
repz
mov
arpl
mov
dec
shrb
pushf
jno
cmp
cmp
pusha
inc
fisttpll
lods
xor
mov
jg
push
sub
scas
xchg
mov
idiv
jg
incl
pop
and
dec
call
addr16
das
ficomps
ljmp
add
insb
and
push
jl
gs
insl
sbb
lea
sub
rcrl
jecxz
xor
ss
adc
mov
mov
pop
negb
daa
dec
lods
mov
fdivs
into
mov
jg
cmpb
dec
push
inc
push
add
out
mov
mov
shr
and
jnp
push
add
push
inc
xor
fstpt
repnz
ret
push
cmp
shrb
inc
call
out
sahf
lods
push
int
cmp
xchg
rolb
ss
stos
dec
dec
push
dec
pop
test
pushl
sahf
xchg
popf
cli
jp
dec
add
xor
push
dec
incb
not
in
rcrl
lcall
mov
inc
jbe
les
dec
jl
decl
ja
sbb
popa
stos
nop
lods
test
lds
pushl
inc
mov
adc
mov
lock
test
and
adc
decl
push
loop
nop
cli
mov
dec
stos
insb
call
ljmp
call
adc
addr16
inc
lcall
xchg
lods
lret
enter
daa
lret
mov
cmc
call
push
das
inc
aad
xchg
jnp
sub
in
jp
and
cs
les
cld
pushl
pop
sbb
jne
out
aaa
or
lret
dec
pushf
push
lods
addr16
lcall
sub
cli
and
dec
js
js
sub
jnp
loop
pushl
fistpl
sub
imul
and
jns
jne
push
or
call
mov
repz
aad
lock
xchg
push
enter
inc
jns
movsb
jnp
and
std
incl
jno
pusha
inc
inc
pop
mov
stos
je
rolb
push
in
dec
les
das
sar
addl
and
jne
ljmp
xchg
pushl
std
cmp
or
mov
scas
dec
jle
pslld
fwait
pop
pop
cli
lcall
insl
dec
push
sbbb
int3
push
sbb
lahf
nop
push
std
mov
ret
add
and
or
dec
pop
xchg
cmpsb
sub
or
incl
jb
loope
imul
jge
js
cmc
dec
pop
sub
mov
out
cmpsb
xor
jmp
dec
jl
lods
repz
push
mov
pushf
xlat
aad
inc
mov
mov
add
cmc
ljmp
sbb
cmp
popf
jmp
mov
das
ret
arpl
push
mov
push
jp
mov
inc
ss
pop
lcall
xchg
shll
jecxz
pop
jmp
inc
sbb
cmc
div
ss
pop
pop
loope
and
sub
dec
push
mov
jl
push
aaa
xchg
repnz
stos
inc
in
xor
andb
in
int3
pop
dec
push
ljmp
jg
popa
mov
xchg
pmaxsw
mov
cmpsb
jno
and
repnz
lcall
mov
cmpsb
push
mov
mov
adc
stos
addr16
mov
xchg
in
cld
pop
dec
pop
sub
or
rolw
jno
test
cmpsb
mov
lret
pop
inc
dec
jle
adc
cmp
mov
sbb
or
imul
xchg
xor
les
ret
icebp
incl
js
mov
xor
adc
lahf
add
andl
jnp
pop
rclb
pop
stos
arpl
mov
xchg
jns
cmp
jb
xchg
push
xchg
cmp
decl
outsb
mov
jge
in
gs
sub
fisubs
push
sbb
jge
add
cmp
loopne
fbstp
scas
fstpt
xlat
and
ljmp
jne
jl
push
jl
outsb
stc
rcrb
popa
add
jnp
dec
lcall
or
jmp
lock
clc
fistpll
out
lds
inc
and
sbb
sub
xchg
rcll
out
sarb
adc
xor
fwait
shr
push
jo
add
jmp
je
fs
cmp
xchg
sub
nop
mov
test
dec
mov
gs
lret
jg
not
inc
sbb
popa
lea
scas
pop
loop
loope
pop
mov
pop
imul
ljmp
nopl
data16
call
pop
verw
mov
out
test
ljmp
insl
cs
push
lock
push
inc
inc
das
sub
fstl
jge
popa
ljmp
xor
pop
dec
imulb
inc
add
mov
in
mov
mov
mov
sub
or
incb
or
bsr
decl
out
xchg
lods
cmp
mov
shll
jae
pop
bound
fwait
push
incl
ret
inc
dec
aad
bound
xlat
push
or
adc
mov
push
adc
cmp
inc
lock
push
int
sbb
stos
push
inc
cmc
rclb
mov
pushl
movsb
addr16
pop
xchg
and
xlat
lret
or
jo
mov
hlt
je
add
js
bound
cmc
sbb
hlt
sbb
cmp
stos
ss
fstpl
mov
jne
or
mov
adc
mov
mov
insl
std
fucomp
das
jae
and
ret
cmp
jle
fiaddl
lods
in
pop
xchg
repz
outsl
or
jb
sub
dec
cmp
call
mov
jbe
lods
mov
inc
jl
out
push
popf
dec
into
sub
push
push
cmc
fucomp
jns
jmp
inc
ja
mov
outsl
and
mov
ret
and
aas
mov
push
jno
je
in
and
jmp
and
xor
sub
pop
pop
movsl
call
mov
ljmp
sti
lds
push
fadd
repz
xchg
fisubl
das
jo
shr
ja
mov
aaa
lods
xor
enter
dec
jl
and
popa
pop
dec
daa
sti
or
or
and
push
nop
movsl
cli
adc
ss
cmpsl
cmpsb
xchg
lcall
and
fsubrp
dec
pop
repnz
in
mov
add
into
lods
pusha
sub
mov
movsl
nop
jg
push
pushl
xchg
jle,pn
cmpsl
dec
jp
fidivrl
mov
call
sbb
push
or
shrb
dec
mov
js
repz
xchg
divb
push
loop
jae
cmp
js
into
inc
xchg
inc
ds
xchg
aam
push
xor
mov
inc
sbb
fildl
jb
call
clc
fwait
inc
or
lahf
mov
jns
inc
aam
sub
and
in
fcomps
cld
aaa
lcall
add
in
jne
sbb
cmp
shlb
or
and
mov
adc
sahf
pop
jp
cli
cli
imul
jl
cli
sbb
mulb
or
pop
adc
mov
incl
jmp
dec
mov
mov
cmpsb
jns
test
gs
jb
fiadds
jg
fs
leave
or
sub
ret
fisubs
in
ljmp
mov
sbb
jg
mov
xchg
push
pop
fstl
daa
adc
cli
cwtl
test
test
dec
cmp
movsl
imul
mov
jbe
stc
jb
mov
xor
jnp
in
or
sbb
rcrl
mov
dec
adc
add
jl
jecxz
pop
push
movsl
icebp
mov
mov
and
dec
mov
jp
mov
pop
test
scas
loop
mov
push
jns
aaa
orl
push
push
xorl
sbb
ljmp
jg
outsl
inc
jp
in
incb
inc
pop
push
mov
jmp
push
pop
icebp
jle
inc
dec
cld
ljmp
cmpsb
cmp
inc
mov
pop
dec
add
cmp
jg
and
sbb
jmp
out
ret
in
sti
hlt
xorb
int3
test
mov
mov
pop
pop
lea
and
adc
mov
pop
sti
out
cmovs
jmp
or
xor
cmp
out
icebp
sar
cmp
inc
dec
mov
cmp
mov
sub
sub
add
mov
outsl
mov
cmp
nop
add
hlt
sbb
jnp
call
enter
fisttps
jns
jl
je
xchg
iret
in
jg
stc
or
movsl
cld
pushl
into
in
dec
cmp
add
sub
inc
xchg
mov
jmp
inc
mov
sbb
incl
lock
cs
sub
test
dec
pop
in
bound
stc
xchg
mov
cmpsb
inc
xchg
jmp
adc
cmpb
lcall
sti
or
dec
xchg
testl
into
inc
inc
adc
lret
xchg
ja
in
cld
incl
mov
sbb
jae
jle
insl
out
mov
or
mov
in
mov
ret
imul
in
push
xchg
mov
mov
icebp
xchg
int
or
shl
repnz
xor
mov
decl
clc
or
mov
sarl
aad
ja
jb
add
xchg
fcmovnb
sbb
call
addr16
mov
aas
cmp
test
call
jecxz
push
dec
and
cld
sub
sub
cld
and
dec
jne,pt
pop
xor
mov
ret
xor
cmpb
orl
arpl
cmp
test
aaa
or
push
sub
mov
dec
jmp
lea
hlt
jge
xlat
xor
mov
add
pop
out
outsb
movsl
aas
movsb
push
mov
jmp
pop
jg
int3
xchg
fs
out
rclb
xlat
scas
sbb
test
ljmp
out
aaa
pop
xor
clc
mov
ds
data16
clc
ljmp
punpcklwd
xor
je
fucomi
es
cmc
sbb
jno
sbb
or
decl
add
lea
cmp
adc
hlt
xor
pop
sbb
xor
sar
lcall
mov
lahf
dec
hlt
push
or
das
out
inc
movzwl
pop
push
call
cmc
addr16
sub
out
jae
mov
mov
mov
jmp
mov
fcoml
jg
leave
cmp
arpl
in
push
insb
fcmovne
fisubs
xor
lcall
sub
ja
aam
nop
push
adc
cli
xor
cmp
mov
test
cmpsl
std
push
stos
pop
adc
fwait
insb
push
and
cld
lcall
dec
enter
std
push
dec
int3
rol
xchg
icebp
and
fisubrs
push
and
gs
rclb
cs
out
test
push
push
jge
jl
sbb
sbb
cwtl
data16
sub
out
xchg
je
jbe
sbb
fstps
push
lock
cmc
jge
out
and
pop
mov
int3
pushl
cmp
out
mov
ret
pop
add
xchg
or
js
or
daa
inc
scas
test
add
cmpsl
test
test
dec
mov
pop
outsb
and
clc
roll
test
lret
pushl
pop
pop
and
mov
repnz
mov
incl
inc
inc
sbb
jg
mov
lcall
dec
mov
mov
movsl
and
leave
scas
sbb
sub
mov
mov
stos
vmovhps
stos
rcrl
xor
in
call
inc
in
mov
mov
xlat
inc
or
inc
xor
mov
jecxz
sub
decl
jo
stos
out
xor
xor
pop
cmc
mov
and
call
fwait
js
pop
iret
scas
call
shlb
push
ret
ljmp
or
pop
or
test
ljmp
ljmp
and
push
lcall
push
mov
jge
inc
sub
or
incb
cmpl
jae
xlat
insb
out
sub
popa
pop
inc
lret
cmpl
fimull
or
test
les
lcall
call
xchg
mov
js
jno
test
fisubrs
add
inc
in
lahf
jmp
push
std
aas
outsl
xchg
mov
inc
dec
in
add
inc
dec
loop
add
cmpsb
hlt
pushl
sub
push
out
test
jns
rcrb
js
ret
cmp
iret
xchg
and
gs
idivb
inc
cmp
or
pop
fcomps
aaa
ret
adc
mov
mov
loop
mov
cbtw
adcb
mov
adc
jmp
mov
mov
das
stos
xor
nop
ret
shlb
imull
enter
in
out
dec
mov
mov
popa
xor
aad
lahf
fwait
jge
stos
xor
jmp
mov
mov
xchg
xchg
movl
adc
adc
ds
incl
idivb
shll
mov
enter
xor
or
fnstsw
cmp
xor
mov
xchg
mov
mov
icebp
push
adc
push
test
clc
aaa
lea
dec
push
mov
sub
ja
cli
aam
lea
lret
pop
out
sub
jmp
sahf
mov
mov
jle
mov
mov
adc
cmp
ljmp
pop
mov
fisubs
xchg
sub
xchg
push
pop
cmp
jg
ljmp
decl
jl
imul
xchg
aam
sbb
dec
bound
iret
adc
fildl
dec
fmull
clc
out
mov
jg
outsb
das
loop
xor
imul
mov
add
jb
mov
adc
sbb
insl
jp
bndldx
push
test
mov
push
cmp
or
imul
insb
outsb
lret
pop
or
add
cmp
fistpll
fucomip
lock
movsb
setno
inc
jge
ljmp
add
mov
jns
popa
aas
xor
dec
cld
push
mov
ficoms
mov
lods
nop
fsubl
mov
imul
fldl
pop
or
pushl
icebp
adc
sti
jno
out
fcomps
jae
mov
mov
dec
cmp
fsubrl
call
mov
push
and
inc
push
adc
adc
lret
sub
shrb
scas
and
lret
outsl
push
stc
sub
clc
ljmp
mov
lcall
aam
mov
cmp
xchg
push
in
jl
insb
inc
adc
icebp
call
sbb
mov
jne
call
cmp
in
push
outsl
fisubrl
test
ljmp
outsl
adc
out
cmc
insl
mov
fsubr
leave
test
push
fdivr
or
jmp
sahf
mov
dec
xchg
mov
loope
lret
xchg
mov
and
icebp
mov
fdivs
mov
stc
lret
add
in
mov
ja
cmpsb
adc
dec
pop
call
cmp
push
jae
xor
lret
lock
nop
inc
mov
add
stos
pop
dec
mov
inc
fstpt
ljmp
push
push
nop
fs
sbbb
push
roll
pop
clc
pop
sbb
push
push
adc
fstp
mov
push
xchg
adc
jl
mov
test
leave
loop
lock
jb
pushl
loope
iret
data16
rcll
das
shlb
mov
test
scas
cli
jg
mov
inc
scas
cmp
insl
insb
mov
mov
push
pop
test
ljmp
leave
imul
add
adc
or
jmp
sub
mov
outsb
inc
es
or
ja
and
add
decb
daa
push
dec
addr16
dec
pop
pushf
or
mov
push
mov
mov
pushl
ds
fcmovb
xchg
push
push
inc
stos
inc
or
leave
jecxz
add
decl
lahf
lcall
incb
or
cld
enter
inc
shlb
dec
mov
test
jmp
out
fstpl
mov
jmp
hlt
and
in
outsb
jmp
out
ret
out
dec
aaa
add
xchg
roll
ss
ret
insl
cld
js
faddl
das
cld
sar
les
or
decl
pushl
les
arpl
mov
xor
loop
xchg
andl
add
stc
call
xchg
jl
loopne
stos
mov
test
ljmp
push
popf
imul
or
dec
sahf
adc
lret
jns
xor
sub
pusha
fwait
pushl
fldenv
pop
into
add
mov
adc
xchg
jne
push
or
dec
notb
jg
decl
mov
pusha
xchg
cmp
mov
xor
scas
icebp
scas
cs
mov
mov
shlb
mov
loop
lods
pushl
rclb
hlt
insb
pop
xor
rclb
mov
ljmp
inc
push
sbb
adc
sub
jle
ljmp
and
test
movsl
sar
jg
lds
mov
and
push
insl
and
fs
fistps
in
cmp
cs
lcall
xchg
arpl
inc
int3
popa
mov
cmp
mov
push
sub
pop
jo
and
mov
xchg
mov
and
adc
ss
outsb
mov
repz
push
push
incl
clc
test
loop
mov
mov
incl
push
xor
stos
bound
data16
push
mov
lcall
fmulp
scas
cwtl
lahf
dec
pop
loop
sbbl
outsl
cli
pushl
mov
xor
sbb
clc
pop
out
int3
movsb
adc
pusha
sbb
rcrb
imul
incl
mov
or
repz
scas
popa
cltd
into
nop
push
insl
push
jle
test
jl
mov
rclb
sub
sbb
nop
fwait
xchg
lods
sbb
out
faddp
call
imulb
jne
aaa
lahf
cmpsl
xchg
jae
jb
and
inc
incb
sbb
sbb
dec
loop
inc
scas
inc
mov
fsubl
sub
js
mov
sbb
aas
ss
lcall
mov
add
mov
inc
pop
dec
push
out
or
out
test
ss
out
imul
hlt
sub
pop
jge
lcall
hlt
jl
sti
pop
jae,pn
lods
push
sub
mov
push
cmpsb
ficoml
decl
add
bound
and
test
lea
ljmp
call
ret
rclb
data16
mov
ljmp
lcall
std
nop
xchg
lahf
inc
xchg
or
add
cmpsl
int3
pop
dec
loop
in
out
sub
call
ljmp
mov
push
add
sub
jl
insb
dec
es
lock
lcall
les
ret
jp
daa
lods
inc
aaa
mov
in
nop
xchg
jns
out
dec
fs
loopne
lcall
or
xchg
into
cmp
add
push
and
aas
fidivrl
add
xchg
adc
fbld
std
mov
mov
sbb
sahf
dec
es
pushl
shll
mov
and
scas
enter
push
nop
insl
xchg
movsl
pop
sar
decl
pop
cmp
movsl
cmpsb
add
adc
sarb
ljmp
hlt
ljmp
shl
or
xchg
idivb
stc
jle
inc
mov
mov
cmpsl
adc
incl
pop
fcomi
aam
icebp
repz
push
loope
idiv
and
pop
jecxz
clc
mov
inc
mov
pushl
xor
in
push
jnp
mov
leave
pusha
enter
lea
inc
push
incb
ljmp
mov
jecxz
movsb
jnp
or
scas
pop
lea
dec
dec
lret
pop
addb
std
ja
ljmp
and
aas
imul
add
call
in
xlat
push
lock
jg
call
dec
mov
fnstenv
pop
mov
push
adc
push
sub
push
pushl
sahf
xchg
cmp
push
mov
popf
clc
pop
pop
or
adc
push
ljmp
adcl
push
testb
outsb
jg
add
fcomip
loopne
adc
lds
sub
mov
je
jb
xor
mov
inc
or
mov
mov
pop
into
push
scas
sub
outsl
jno
xchg
imul
push
shr
pop
pop
daa
aam
jmp
movsb
pop
aas
push
dec
rorb
mov
pusha
sbb
push
std
push
or
pop
cmp
icebp
or
ljmp
lods
out
gs
add
inc
or
stc
xor
into
sub
mov
outsl
xchg
lock
xchg
mov
rcrb
imul
jg
jmp
fnstsw
pop
or
lcall
mov
jl
ljmp
sub
mov
lea
push
or
mov
roll
aas
mov
push
inc
sub
pop
and
inc
jns
sub
and
orl
xchg
jae
rcr
addb
pop
imul
incl
pop
in
cmp
ja
add
add
mov
jg
and
pop
or
inc
add
in
mov
add
dec
orb
jnp
lahf
pop
inc
mov
iret
and
and
sub
add
mov
add
icebp
dec
lock
inc
xor
inc
in
repnz
xor
popf
jno
fstpt
jnp
xchg
movsl
push
daa
add
xchg
dec
and
fdivp
add
es
push
movsb
push
movsb
std
dec
enter
push
stos
push
and
mov
jae
push
test
and
imul
stc
pop
lds
add
mov
pop
sbb
jg
sbb
mov
sbb
inc
mov
pusha
sbb
mov
cmpsb
ds
les
push
adc
fs
mov
insb
fwait
out
decl
add
imul
imul
imul
into
mov
jbe
fldenv
lods
adc
jae
mov
stos
pop
mov
mov
ss
mov
jbe
add
jo
mov
push
shll
add
outsl
push
shll
push
jo
push
fidivrl
iret
outsb
or
push
ret
mov
sbb
jns
out
jge
fisttps
aam
xorb
ljmp
movsb
push
add
mov
cmpl
jae
shlb
mov
push
jge
sub
jne
push
aam
clc
imul
add
mov
or
dec
add
sbb
push
data16
inc
xchg
ja
aaa
add
push
push
shlb
lret
insb
pop
rep
stos
aas
add
ja
push
loopne
lods
sti
push
xlat
jne
add
ja
push
pop
fsub
mov
aad
push
xlat
ja
js
push
jns
or
mov
jp
inc
push
fidivrl
sarl
pop
sub
int3
ja
fldl
sub
ret
jmp
ljmp
mov
in
xchg
sub
xchg
xor
xchg
push
setbe
xor
dec
fisttpl
push
lcall
fnstenv
push
pushf
cmp
popf
sbb
aas
push
sahf
inc
push
lahf
inc
lahf
mov
fbstp
push
jecxz
push
imulb
jne
stos
pusha
scas
out
out
out
sahf
out
hlt
clc
stc
cli
sti
test
jns
cld
std
incb
jecxz
arpl
cltd
int
imul
add
imul
xor
add
pop
add
pop
add
sbb
add
in
lds
mov
add
or
or
mov
add
add
inc
repnz
add
pop
jae
shrb
jbe
out
sbb
adc
adc
lods
add
shrb
pop
stos
femms
lods
lods
pop
mov
lods
dec
mov
add
scas
insl
sbb
stos
lods
pop
pop
adc
and
mov
add
xchg
in
pop
scas
sbb
scas
scas
scas
scas
sbb
mov
mov
and
mov
pop
push
mov
inc
push
xorl
lock
and
mov
mov
pop
and
push
xor
pop
mov
and
shrl
pusha
fwait
and
sub
mov
popa
xchg
cld
test
mov
repnz
and
mov
in
mov
mov
ficomps
cmp
in
or
mov
cmp
push
mov
add
mov
pop
xor
pop
addr16
add
out
insl
pop
pop
xor
mov
pop
das
push
cs
xor
add
xor
aaa
in
std
xor
pop
push
push
xor
adc
pop
push
cs
dec
inc
das
inc
inc
xor
incl
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
dec
or
add
pusha
pop
pushw
dec
dec
cmpb
jo
in
pushl
mov
mov
cwtl
sahf
mov
pushf
fwait
lcall
xchg
mov
test
xchg
xchg
inc
push
jle
insl
push
add
jle
je
push
bound
js
jg
fwait
adc
xor
jne
je
add
mov
jg
lods
add
popa
subb
add
bound
outsl
mov
jle
xchg
pop
push
repz
mov
push
mov
cmpsb
push
mov
jle
fisttpl
dec
dec
xor
ja
push
ja
jb
cs
xor
mov
mov
cmp
pop
jbe
dec
sbb
and
mov
cmpsl
fnstcw
jo
push
inc
mov
jg
inc
clc
cmp
mov
inc
iret
enter
xchg
jp
fildll
inc
push
popf
inc
mov
aaa
add
xchg
jno
lret
addr16
iret
push
bound
mov
mov
jmp
popf
inc
push
sahf
mov
insb
add
outsb
add
xchg
pop
push
test
cmpsb
dec
push
dec
push
movsb
add
jae
add
jb
shll
outsl
pop
xlat
ds
pushf
push
rorb
add
lcall
outsb
mov
repz
dec
mov
add
ja
sahf
jbe
fistpl
add
fstps
outsb
ds
push
add
and
jle
mov
js
mov
data16
imul
insb
pop
outsb
push
outsl
rolb
push
ds
jno
add
jge
push
test
fisttpll
lock
or
mulb
add
lcall
es
bound
out
arpl
pop
xor
push
loopne
iret
sahf
mov
outsb
push
insl
push
jb
out
in
push
jle
mov
orb
sti
popf
jp
aad
push
divb
fildl
adc
imull
int
adcl
mov
shll
push
test
test
sbb
test
fldcw
in
mov
push
xchg
nop
and
out
xchg
cmpb
lock
sub
sub
outsb
fiaddl
imulb
push
xchg
repnz
xor
cwtl
push
cmc
sahf
xor
lcall
outsl
cmpsb
pop
cmp
jle
and
cmpsl
push
cmpsb
scas
jo
test
sahf
mov
adc
pop
jbe
stos
into
pop
lock
shll
lgs
int
mov
mov
iret
cmpsb
sub
rcr
rcl
mov
push
aad
jle
data16
add
add
std
dec
mov
jne
je
dec
daa
addb
cltd
sub
incl
sbb
es
push
adc
aas
and
push
add
add
ds
imul
mov
adc
sbb
xchg
push
mov
and
sbb
or
push
add
and
loopne
lods
pop
and
cs
mov
aas
and
sub
xor
or
aas
aas
cmp
in
inc
cmp
and
cmp
sbb
inc
jbe
cmp
mov
insl
inc
inc
jle
cmp
adc
ds
jle
sti
ds
cmp
adc
ds
xor
outsl
jbe
dec
dec
inc
test
mov
pop
in
mov
mov
addr16
jg
in
pop
mov
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
decl
dec
test
mov
mov
ds
xor
sub
sub
sub
sub
idivb
sbb
sub
dec
and
inc
mov
cld
call
imul
push
pop
push
push
push
imul
fs
das
pop
imul
call
mov
mov
nop
test
insl
popf
mov
je
xchg
jns
jle
addl
jo
outsb
pushf
sub
stos
cwtl
sti
lds
xlat
or
push
rolb
push
sti
or
mov
incl
adc
loopne
out
or
repz
jl
push
add
cmc
repz
dec
xor
dec
add
add
xchg
pop
cmp
test
jg
incl
xlat
mov
add
mov
push
mov
fnstsw
repnz
outsl
incl
mov
aaa
add
addr16
add
add
mov
mov
in
lcall
or
mov
add
push
dec
lret
js
into
fcomi
incl
pop
add
mov
mov
test
scas
xchg
js
in
mov
and
and
out
nop
nop
sub
sub
xchg
push
sub
nop
sub
out
xchg
xor
xchg
outsb
lcall
leave
fldt
jbe
negl
fcmove
fst
es
fmulp
push
lret
loopne
push
std
stos
or
into
fdivrp
negl
xchg
add
test
jg
jle
mov
add
or
call
dec
dec
dec
add
pop
std
sub
push
dec
or
adc
cmp
adc
dec
or
fcomps
mov
push
adc
add
or
pop
pop
jl
cmovg
inc
push
dec
sbb
mov
adc
inc
inc
adc
sbb
dec
add
jg
aas
dec
adc
inc
ds
cmp
cmp
cmp
daa
and
sbb
push
icebp
lcall
sbb
and
add
dec
ss
xor
sub
sub
dec
pusha
push
add
insl
mov
fidivl
mov
mov
mov
cmp
mov
push
adc
adc
add
inc
das
pop
push
enter
or
or
outsl
mov
cmpsl
dec
xor
or
into
incl
jg
sub
inc
xlat
sbb
shll
or
push
jnp
pop
mov
es
xor
cmpsb
pop
daa
iret
fdivrp
sysret
in
lock
pusha
rcll
punpcklwd
rcll
inc
sbb
or
push
lock
outsl
pop
mov
sub
sahf
jg
test
sub
lahf
mov
into
adc
out
cli
mov
add
mov
cli
filds
add
cmp
pop
jg
add
xor
cli
inc
test
adc
les
or
jg
inc
mov
cmp
pop
das
sti
mov
pop
pop
add
jle
rcll
mov
sti
jg
jo
insl
pop
xchg
ret
mov
adc
and
pop
test
sbb
push
les
dec
idivb
ljmp
cld
add
and
bound
or
push
or
std
test
add
xchg
les
xchg
pop
jg
push
orl
add
mov
or
sub
decl
push
loopne
xor
inc
xor
incb
jg
and
adc
xor
incl
jg,pt
sbb
sbb
mov
shl
pop
pop
xor
mov
jle
mov
push
sub
sbb
and
xchg
ffree
mov
push
call
and
xor
lods
jle
lret
imul
mov
xchg
add
inc
imul
scas
jle
mov
lcall
push
popa
mov
xchg
cmp
jg
sbb
adc
data16
sub
add
push
sub
adc
jg
ss
les
inc
pop
add
mov
ljmp
call
ljmp
stos
insl
in
popf
testb
pop
add
daa
aas
xor
mov
pop
pop
add
in
push
pop
pop
jle
add
xor
push
rolb
sub
or
lahf
mov
pushl
push
jle
push
dec
xchg
push
bound
add
mov
mov
insl
iret
das
pop
daa
push
arpl
xchg
popa
das
les
push
mov
insl
xlat
out
mov
decl
dec
push
and
decl
ljmp
movsb
ds
sub
mov
inc
lea
push
dec
jl
jge
idiv
fnstenv
add
push
jne
pop
test
jbe
out
push
dec
or
jnp
push
jp
push
js
mov
jbe
pop
add
call
fdivrs
jne
jbe
push
outsb
ds
cmp
jle
cmp
aam
dec
incl
sub
jp
dec
test
xchg
dec
ja
xchg
subb
je
sahf
jns
fs
adc
xchg
call
push
mov
adc
outsl
inc
jbe
sahf
inc
out
scas
cs
aas
and
push
pushf
cmp
cmpsb
test
cltd
mov
insl
fstpt
xchg
xor
xchg
xor
sub
sub
nop
daa
xchg
sarb
ss
cs
mov
enter
xor
stos
test
mov
sbb
jg
pop
fnsave
xor
test
push
inc
or
or
es
or
ss
cs
rcl
push
add
or
mov
ja
dec
push
test
movb
aas
adc
ja
divb
mov
add
ja
add
in
adc
push
addb
push
mov
pop
dec
push
outsl
or
pop
or
adc
scas
adc
pop
push
xorl
cmp
mov
cwtl
mov
jmp
push
imul
mov
sbb
test
push
lock
cmp
push
jmp
pop
cmp
icebp
call
xor
in
add
mov
mov
pushl
add
dec
out
pop
dec
sahf
jbe
idiv
mov
or
push
call
push
sbb
xor
inc
cmpsb
negl
sti
std
call
jmp
syscall
mov
sub
xchg
mov
or
call
sbb
add
mov
daa
cld
pop
das
pop
stos
mov
incw
js
xchg
adc
add
push
jbe
lcall
or
sub
sti
psubusw
test
ds
fcompl
adc
ljmp
test
inc
push
sahf
test
call
decb
sbb
inc
cmpsb
decl
mov
lcallw
sub
ljmp
cmp
add
adc
mov
enter
bswap
xor
data16
adc
inc
sti
mov
stos
insl
out
setno
incb
add
push
inc
dec
inc
sub
nop
sysret
arpl
add
mov
outsb
push
sub
dec
arpl
push
sub
pop
sti
and
call
imul
call
mov
jbe
xor
pop
stc
bswap
arpl
leave
add
call
jg
push
inc
test
cli
dec
dec
mov
test
push
imul
push
sbb
imul
rcll
ficoms
push
pop
inc
stos
nop
into
aaa
mov
jecxz
fwait
push
shll
roll
imul
ret
lcall
call
adc
jmp
ljmp
dec
push
mov
push
inc
insb
insl
fidivl
mov
fildll
sahf
movsb
dec
push
stos
push
popf
inc
xchg
fidivs
inc
cs
dec
mov
and
push
add
push
out
push
shrb
rcl
lea
outsb
shrb
es
add
sub
repnz
push
iret
insl
pop
xchg
dec
ja
daa
outsl
pop
imul
push
push
push
push
xchg
push
ljmp
jmp
lcall
xlat
ds
pop
add
repnz
fwait
dec
push
jmp
pushf
cmp
xchg
hlt
push
aas
decb
cwtl
xor
and
push
xchg
hlt
push
push
aaa
push
lcall
ss
xchg
push
xchg
es
xchg
xchg
dec
notb
sub
test
mov
scas
sub
lcallw
xchg
dec
fimuls
jg
sbb
or
std
faddl
inc
fstpt
push
jnp
jp
outsb
lcall
or
jl
sbb
movq
es
jbe
int
jle
adc
fidivrl
push
dec
push
dec
repnz
repnz
jae
outsl
mov
jns
push
mov
jnp
jge
hlt
test
imul
jl
cli
int3
outsb
nop
negl
adc
mov
mov
mov
nop
xlat
lods
cmp
iret
mov
int
push
addb
jnp
lahf
dec
es
mov
in
inc
and
orb
jl
hlt
jg
and
xchg
out
push
sub
iret
out
mov
cli
cmp
aaa
aam
jbe
clc
push
idiv
out
ds
test
inc
sub
jg
mov
icebp
push
dec
mov
dec
pop
cld
loope
out
push
daa
jno
sub
jg
mov
icebp
fistl
xorb
xchg
mov
xchg
ja
bnd
repnz
xchg
cld
jp
sub
adc
in
xchg
aaa
or
out
cmp
jge
and
sbb
in
sar
jg
dec
in
rclb
ja
iret
lock
mov
icebp
test
idiv
push
lcall
je
lea
fsub
pop
push
stos
nop
test
int3
decl
inc
jle
mov
fidivrl
arpl
clc
popa
and
decl
into
and
pop
or
push
xchg
and
pop
dec
inc
ds
lcall
push
pop
insb
add
jns
mov
push
mov
jmp
mov
in
sbb
in
sbb
xchg
mov
pushl
adc
xchg
out
sbb
loope
and
lret
jg
out
mov
push
and
aaa
mov
add
ja
inc
or
aas
xlat
push
cmovno
mov
add
or
push
dec
pop
sub
int3
and
aaa
lret
xlat
pop
and
dec
xor
push
inc
lahf
rolb
adc
call
fsts
adc
sub
inc
push
add
xor
into
pop
push
sbb
push
xor
dec
sti
sbb
push
or
and
fwait
sbb
push
sbb
outsb
stos
arpl
dec
or
xchg
mov
inc
add
orb
push
add
test
out
xchg
pop
cwtl
xchg
push
dec
bound
inc
add
add
pop
nop
xorb
gs
jo
push
stos
add
sbb
dec
popa
xchg
lret
std
and
icebp
xchg
test
mov
adc
xor
push
inc
xchg
js
aaa
xchg
pop
fiadds
mov
sbb
test
lret
xchg
lock
daa
add
or
xor
popf
paddq
je
ret
add
ljmp
jb
and
scas
popa
std
pusha
push
cltd
inc
mov
pop
pushf
es
pop
add
push
adc
es
add
xchg
dec
aad
dec
sbb
add
mov
add
sbb
push
fwait
adc
push
les
add
insl
and
sbb
movsl
pop
popf
in
xor
popa
shlb
sbb
mov
xor
jb
lods
xor
xlat
add
mov
add
mov
xor
xchg
dec
dec
or
filds
lods
movsl
sbb
pop
gs
insb
adc
adc
icebp
add
and
sbb
loop
mov
jo
inc
xchg
jnp
dec
xchg
idiv
sbb
dec
loop
lahf
push
cmc
shrl
or
add
fdivs
adc
outsl
shrb
jo
xor
dec
subb
outsl
loop
and
imul
sub
and
add
fstpl
push
pand
out
inc
fstpt
incl
sub
sbb
push
shll
adc
mov
adc
insb
jne
addr16
loop
mov
push
or
or
nop
outsb
test
popa
sbb
or
or
add
dec
bound
add
jne
inc
cmp
pop
add
inc
scas
arpl
and
jbe
add
ss
pop
push
sti
popf
xchg
icebp
or
cwtl
push
popa
insb
or
icebp
xchg
aad
cmp
je
jne
add
pop
add
popa
push
rol
jnp
es
negb
sub
in
push
dec
in
dec
mov
sbb
push
rcrl
mov
mov
cmp
rol
rcll
adc
inc
lcall
loopne
subl
ret
pop
pop
adcl
dec
inc
cmc
fiaddl
sub
leave
test
jb
addb
shlb
outsb
lock
shl
mov
je
bound
test
mov
pusha
jnp
cmp
or
js
xchg
xchg
or
inc
mov
inc
shll
test
pop
lock
daa
add
mov
rolb
add
add
inc
popa
pop
sub
sub
shrb
pop
push
dec
sbbb
jae
or
add
push
scas
and
adc
lar
dec
mov
xchg
inc
imul
adc
in
jecxz
push
pop
test
pop
inc
and
inc
cmp
and
ret
scas
lahf
lock
mov
jne
mov
clc
mov
gs
inc
outsl
jae
loop
outsl
mov
jae
les
push
sbb
mov
aam
push
add
xchg
cwtl
mov
movsl
pop
fisubs
or
adc
mov
out
add
das
sub
gs
aas
test
xchg
insl
and
dec
mov
cmp
fwait
lret
xor
sub
sbb
inc
aaa
xchg
mov
imul
xchg
insb
jne
arpl
rolb
pop
and
mov
fs
addb
lock
adc
and
mov
sbb
and
inc
sbb
xchg
mov
push
in
mov
inc
or
cwtl
pop
popa
inc
insb
push
popa
rcpps
js
lea
sbb
push
jb
inc
inc
inc
add
add
in
ljmp
lds
insb
push
sbb
mov
inc
jae
sahf
daa
sbb
push
and
push
cld
sub
fldt
inc
fs
fwait
pop
and
jbe
mov
jno
cmp
dec
inc
add
xchg
add
jae
push
out
push
jg
pop
test
jns
lock
push
fldcw
xchg
shlb
test
test
aam
dec
std
fwait
adc
or
mov
push
outsl
sub
mov
adc
xor
push
outsb
inc
and
sbb
pop
and
clc
fwait
popa
inc
je
insl
dec
outsb
dec
std
pop
or
jb
push
and
mov
mov
push
in
insl
repz
js
add
pop
add
add
sbb
mov
add
sbb
movsb
dec
adc
lcall
imul
imul
jl
push
jo
stc
push
es
pop
add
inc
add
shlb
add
and
sbb
mov
and
shlb
sbb
out
test
popf
rclb
ficompl
daa
es
repz
mov
out
test
pop
shrl
sub
imul
inc
insb
scas
cli
test
push
mov
outsb
xorl
sbb
cmpsb
xor
mov
movl
inc
jo
add
sbb
add
rcl
sarb
into
dec
mov
mov
pop
cmp
sti
mov
addl
dec
mov
mov
or
sbb
jge
xor
cmpl
push
xor
add
hlt
and
ret
push
mov
sbb
ud2
lods
jle,pn
mov
imul
ja
dec
pop
pop
pop
sbb
lret
inc
lock
sub
or
int3
jge
mov
popw
xlat
subb
outsl
adc
lock
mov
sbb
adc
imul
or
mov
addb
and
sbb
cmp
imul
insb
mov
push
cmpsl
inc
ret
sub
jbe
outsb
jbe
cmpsl
nop
pop
pop
adc
and
adc
mov
jbe
pop
scas
push
mov
and
or
push
inc
fs
adc
fs
xchg
shll
sbb
scas
or
addr16
inc
cmp
adc
test
les
repz
jmp
arpl
test
cmp
adc
sbb
inc
push
mov
nop
fs
mov
push
xchg
sbb
and
sub
inc
cmp
push
push
mov
out
xchg
cmp
daa
outsb
pop
fwait
or
xchg
push
xchg
scas
inc
sbb
hlt
cmpsl
sub
pop
pop
lods
xchg
mov
add
mov
add
or
call
nop
xor
jle
jns
mov
inc
out
mov
incl
sub
lods
xchg
sbb
sbb
adcl
xor
lcall
mov
out
inc
test
sub
cmpsl
dec
dec
ja
imul
shll
add
aaa
or
movsb
pop
sub
sub
leave
add
out
rcl
call
dec
mov
addr16
and
cli
add
push
pop
add
lock
adc
addr16
inc
int3
adc
pop
add
jnp
mov
nop
mov
add
add
and
and
movl
dec
dec
mov
addr16
clc
add
add
pusha
addr16
fiadds
adc
push
mov
enter
or
pushf
push
movlps
out
cld
add
dec
lret
ret
addr16
jp
outsb
jnp
jnp
rorb
dec
inc
add
and
xchg
lock
xchg
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
