divl
in
mov
mov
mov
add
add
int3
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
dec
adc
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
cmpsl
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
sub
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
mov
andl
data16
mov
add
int3
aam
jg
fdivl
call
aaa
mov
push
mov
inc
in
iret
negl
push
in
loopne
movb
inc
cmp
inc
outsb
ds
inc
add
add
call
mov
cmpl
jne
mov
mov
jmp
ja
add
push
mov
sbb
out
std
jnp
add
jbe
sbb
pop
inc
push
push
ss
xor
xor
mov
shl
xlat
cs
loop
in
xor
adcl
and
movsb
xor
dec
sbb
loop
push
mov
add
push
cwtl
in
xchg
sbb
xor
fldenv
clc
orb
jmp
fsubrs
push
fildll
pusha
xor
sbb
push
push
lods
or
pop
movd
fdiv
fistpl
fisttpl
ret
add
dec
cld
ljmp
test
je
pop
add
pop
mov
push
push
loop
xor
loopne
push
push
rolb
add
lds
pop
push
push
add
jne
mov
add
in
pusha
out
adc
mov
xchg
dec
add
sub
in
push
call
lock
pop
sub
sahf
or
lcall
in
xchg
rcll
out
xchg
and
push
push
mov
in
inc
mov
mov
pop
sbb
mov
lahf
leave
cmp
jge
mov
jmp
mov
xchg
mov
inc
dec
jb
mov
jno
and
and
insb
sarl
sbb
adc
sbb
add
xor
push
pop
mov
aaa
jb
lret
add
mov
xchg
adc
fwait
scas
fldcw
rolb
and
inc
cmp
jae
out
pop
pop
and
cmp
push
stc
push
mov
add
mov
sbb
add
ljmp
pushl
sub
xchg
andl
dec
fnstsw
push
adc
add
sbb
jl
addl
xor
push
lcall
or
adc
mov
test
mov
dec
lock
add
call
cli
and
xor
jmp
fwait
loopne
and
popf
sbb
pop
xchg
gs
xor
fsubrl
push
push
sbb
or
lahf
xor
sub
ret
or
inc
sbb
jo
push
loopne
in
pop
rolb
push
stc
stc
fisubrl
push
cld
mov
cmp
pop
sbb
cmp
sbb
cmp
sbb
pop
out
push
or
inc
pop
cmpl
and
std
jnp
pop
fwait
repz
push
fwait
je
bound
mov
adc
movsl
lods
mov
push
mov
aas
outsb
sbb
mov
int3
push
xchg
mov
ret
cmp
or
cmp
test
arpl
aad
sub
xor
sbb
cmpb
scas
sbb
push
xchg
loop
sbb
dec
sub
xchg
test
jne
data16
andl
and
sbb
xchg
jb
subl
sub
sub
adc
xor
sub
adc
movsl
jns
sbb
cs
inc
pmulhw
push
shl
jmp
popl
inc
adc
repnz
loopne
pop
push
pop
sub
push
mov
push
adc
mov
out
jl
subb
punpckhbw
xchg
and
inc
xor
fstl
push
int
sbb
pop
sbb
sarl
orl
add
jmp
in
jnp
js
sbb
sbb
jmp
fbld
xor
ret
ret
xor
cs
pop
lock
test
call
outsb
jns
in
lahf
lds
ret
mov
pop
cld
add
das
mov
mov
out
mov
lock
lea
or
push
push
push
adc
jbe
je,pt
ret
fiaddl
jl
data16
in
and
or
notl
mov
jl,pt
sbb
pop
push
idivl
xor
cmp
sub
imul
xchg
mov
shrb
test
mov
movsl
cltd
mov
test
jl
or
ds
mov
mov
adc
pusha
rclb
fs
mov
cmp
jl
cmpsl
nop
or
adc
sbb
aas
mov
hlt
je
or
push
mov
mov
aaa
je
in
aas
push
nop
sub
cmp
cli
mov
sub
insl
lea
insl
mov
inc
sbb
or
mov
pop
inc
adc
in
mov
inc
sub
mov
adcb
dec
hlt
cmp
imul
pop
or
inc
cwtl
sbb
jae
or
jge
mov
xchg
and
push
daa
and
xor
pusha
out
xchg
cmc
push
stc
test
mov
and
mov
xchg
cmpsl
xor
sbb
bound
in
xor
data16
push
mov
jmp
jbe
ficoml
scas
clc
push
dec
insl
icebp
mov
push
add
cmpb
sbb
lock
jne
pop
mov
inc
out
icebp
sub
fs
fildll
iret
cmp
je
sub
dec
pushl
pop
in
or
push
push
adc
and
cli
fistps
pop
sti
xlat
mov
mov
lds
mov
push
push
mov
cmp
lods
push
sub
sub
loopne
mov
or
push
add
xlat
mov
test
jne
jmp
inc
cmp
jl
jmp
pop
pop
push
imul
push
pop
push
pop
test
jmp
sub
jl
jbe
sarb
pop
ret
add
testb
mov
mov
push
dec
add
or
bound
and
mov
mov
xchg
lret
gs
add
std
enter
sub
ss
andl
push
mov
fbstp
jge
orb
push
mov
out
psrlw
push
push
push
and
jbe
mov
pop
pop
ret
and
dec
adcb
sbb
rcl
or
repnz
dec
mov
scas
hlt
jbe
mov
and
xchg
pop
xlat
adc
sub
push
cs
rcrl
mov
aam
push
mov
sub
pop
js
sub
pop
cmp
mov
jge
iret
xchg
out
test
pop
ss
cmp
je
mov
cmp
add
sbb
ret
add
lea
push
mov
out
mov
in
cmp
ja
add
jmp
mov
jbe
jo
push
adc
adc
jo
pop
xor
ret
icebp
cmp
negb
idivb
cmp
je
or
std
adc
push
hlt
dec
mov
jmp
xor
sub
fwait
add
or
loopne
jg
stc
jne
mov
jmp
xchg
rcl
fucomi
adc
push
repnz
das
clc
ja
inc
repz
push
ja
lea
decb
pushl
or
pop
cmp
jmp
jge
pushw
aas
mov
popa
fsubl
pop
pop
arpl
out
bswap
adc
pop
xor
rclb
add
je
add
pop
js
cwtl
rcl
mov
test
faddl
pop
push
push
movsb
mov
icebp
outsl
mov
jle
je
push
push
cmp
sarl
sub
jb
fildl
pop
ss
push
push
popl
adc
and
pop
xchg
mov
mov
shlb
ret
or
scas
retw
sti
mov
sbb
xor
insb
jle
sub
add
add
sbb
lret
out
aaa
push
sub
push
mov
int3
cmp
or
inc
jbe
sub
jmp
aaa
idivl
out
adc
into
je
cmpl
pop
mov
cmp
jne
push
push
jge
push
adc
nop
pop
pop
jmp
xchg
rorl
pop
stos
push
dec
lods
sub
clc
dec
xor
xor
dec
and
sub
or
jge
jmp
test
or
jl
push
inc
clc
jg
inc
cmp
sbb
or
add
xor
shr
cmpsl
sbb
int3
cltd
add
cltd
adc
xor
or
inc
inc
or
shr
dec
sbb
mov
ret
jns
mov
sbb
mov
je
dec
mov
sbb
pop
and
leave
adc
cmp
adc
roll
jne
test
cmc
sub
dec
push
push
call
outsl
jle
fidivrl
adc
add
out
or
pop
pop
sbb
xor
mov
ds
mov
fdivrp
mov
mov
mov
jns
jmp
mov
ficoml
lods
in
jge
inc
repnz
or
jae
lods
cwtl
push
lahf
loop
add
clc
sub
pop
addb
xchg
mov
jg
mov
xor
cmpl
jle
push
daa
sbb
sti
bsf
jge
mov
ret
ret
fldt
add
and
push
out
xor
inc
roll
push
sub
xchg
aad
inc
je
cmp
mov
add
xor
add
add
push
insl
pop
jo
push
adc
adc
mov
pop
pop
push
jmp
ljmp
pusha
les
insl
mov
bound
hlt
mov
pop
jbe
jo
or
lock
mov
mov
cmp
fdivrl
mov
ret
push
scas
jmp
iret
orl
sarb
dec
cmp
sarb
xlat
xlat
mov
adc
les
xor
int
and
or
jb
shll
lea
daa
or
push
shrl
add
or
push
or
fistpl
jmp
pop
jmp
aaa
xlat
or
lock
and
adc
lea
push
or
in
mov
pop
pop
jmp
test
sub
testb
pop
les
cmp
jb
pushl
movsl
repz
push
mov
femms
sub
inc
ret
push
dec
mov
mov
dec
adc
sbb
popa
or
shrb
ds
ficompl
aaa
and
negb
add
add
or
iret
js
fld
jbe
mov
iret
add
fildl
mov
sbb
mov
or
or
adc
sahf
sub
nop
cmp
add
mov
mov
inc
and
insb
pop
xlat
pop
add
or
sbb
das
cmp
loopne
or
rorl
icebp
or
push
push
sbb
mov
inc
adc
sbb
or
push
and
fldenv
sub
in
repnz
sbb
das
sbb
sbb
add
mov
or
sbb
cmp
into
adc
pop
lcall
jo
push
sub
add
and
xor
mov
add
adc
pop
shr
xchg
add
lods
dec
or
lock
mov
cmp
ja
mulb
movups
and
stc
adc
repz
stc
cmp
popf
cmpl
push
cmp
xor
test
mov
push
cltd
pop
mull
jne
lock
mov
mov
das
sub
je
jb
jmp
push
pushf
push
pop
mov
mov
cmpsb
cmovp
xchg
pop
adc
and
out
pop
mov
push
jbe
call
mov
cmp
mov
je
and
hlt
ja
sub
jmp
sub
dec
je
insb
xchg
in
mov
jge
adc
sub
ss
mov
jo
shr
or
jecxz
adc
int
addr16
jbe
jp
jecxz
pop
jne
jp
fcomip
lock
jg
jg
sbb
stc
or
lea
xchg
push
add
mov
scas
adc
jp
jmp
out
sub
mov
xchg
adc
push
mov
xchg
xchg
mov
push
sbb
mov
cld
adc
loope
xchg
and
push
sbb
jg
or
push
sub
scas
in
pushl
js
data16
in
in
mov
adc
divb
mov
adc
jmp
es
dec
sbb
jae
mov
mov
cmpsb
inc
sbb
leave
adc
adc
in
jle
mov
xor
dec
fstpl
imul
jmp
sbb
and
dec
jnp
in
jp
sbb
je
mov
mov
inc
mov
pop
sub
push
sahf
out
mov
push
int
jns
incb
sub
out
mov
add
lods
push
stos
stos
cld
sbb
cld
cmpsb
or
mov
adc
push
push
rcr
addb
add
out
or
or
clc
pop
xor
add
movsl
bnd
or
adc
push
mov
lea
lds
push
and
and
push
pop
push
lea
inc
ret
mov
xchg
xlat
dec
cmp
mov
cmp
inc
lods
xchg
xor
add
pop
call
cltd
jge
mov
dec
adc
movl
push
pop
xchg
loopne
jnp
insb
push
sbb
xchg
shll
sub
testb
adc
sahf
in
lds
call
add
add
inc
push
push
ja
mov
mov
movl
lret
lock
in
push
test
mov
inc
and
pop
sbb
pusha
push
inc
jmp
ss
or
jp
push
and
nop
sub
dec
fnstenv
sub
imul
imul
xchg
arpl
in
adc
insb
push
int
xchg
mov
push
sub
adc
dec
dec
rclb
not
and
push
outsb
jo
mov
sub
add
jle
mov
popa
mov
inc
imul
shl
inc
shll
cmp
nop
stc
insb
clc
push
push
push
push
mov
loope
pushf
filds
push
push
push
push
repz
test
xchg
push
mov
lret
dec
mov
dec
xor
jp
xchg
dec
cwtl
sahf
inc
add
bound
fiadds
pop
pop
daa
lea
xchg
lock
je
mov
jo
pop
sub
ss
ret
in
and
or
cmpl
inc
xor
sbb
sbb
inc
push
push
cli
hlt
inc
fadds
xchg
push
sbb
pop
roll
xor
xchg
push
ljmp
daa
pop
fstps
adc
clc
push
xor
decl
insl
pop
mov
pushl
mov
adc
dec
adc
mov
inc
jnp
push
dec
lea
or
mov
pop
cmp
je
dec
call
cltd
sub
sar
add
mov
push
bound
in
dec
in
insl
sti
int
cmp
push
mov
add
mov
inc
adc
xor
cmp
pop
leave
mov
jp
xor
mov
inc
adc
pushf
sub
pop
sub
push
mov
add
or
sub
nop
or
and
sub
addr16
sub
push
push
or
add
fists
inc
js
jg
and
jle
neg
sbb
and
xor
lds
bound
cmp
mov
dec
inc
cmc
dec
shll
dec
inc
cmp
cmp
push
rcll
push
enter
insb
mov
test
push
mov
aas
inc
mov
sbb
and
test
cmpsb
inc
inc
cmpb
sbb
cltd
shll
adc
mov
popf
call
ljmp
in
test
and
dec
inc
pop
clc
sbb
sbb
jge
je
push
mov
test
jmp
pushl
and
push
push
loope
repnz
mov
incl
and
push
sbb
daa
sbb
fistps
loopne
mov
mov
jmp
cmpl
fiaddl
add
jge
mov
or
in
dec
je
cmp
adc
xchg
sbb
cwtl
pop
pop
das
mov
add
sbb
jmp
mov
fsubrl
mov
mov
loopne
and
pop
sbb
roll
aas
sbb
mov
inc
mov
pop
loop
stos
add
push
lcall
mov
push
sbb
outsb
pop
fmuls
cmp
loopne
or
hlt
movb
xchg
or
or
fldcw
adc
cwtl
sbb
sub
jo
movb
mov
aas
mov
xor
mov
jae
clc
out
cmp
add
jbe
pop
cmpsb
repz
loop
add
jbe
test
inc
pop
loopne
mov
and
int
data16
pop
adc
xor
addr16
jl
pusha
mov
test
divb
lea
lea
hlt
jmp
push
push
sarb
outsb
pop
jbe
adc
cmp
loope
aas
mov
cmp
mov
rcr
in
je
sub
adc
push
sub
loopne
sbb
jp
push
enter
cmp
lret
jb
addl
insb
je
cwtl
push
enter
into
cmp
sub
mov
push
adc
cmp
or
dec
orb
pop
sbb
lock
and
sub
ror
enter
daa
addb
xor
and
cwtl
cmpl
pop
xchg
aam
push
cmpb
icebp
iret
sbb
test
icebp
mov
aaa
faddl
sub
int
xor
cmp
test
dec
fldl
fmull
lods
push
xchg
shl
cs
sarb
pop
push
cmp
ret
rcrl
push
rcrl
adc
xchg
inc
add
movsl
pusha
es
pop
fcoms
sbb
or
loop
repnz
bound
popa
rorb
adc
dec
push
or
or
pushf
scas
mov
icebp
and
scas
push
lods
arpl
testb
or
push
add
xor
addr16
push
addl
mov
add
test
inc
fistl
xlat
stos
fcoms
cmpsb
dec
dec
or
loopne
hlt
mov
popa
cmp
loope
or
js
ret
cmp
or
sbb
in
jne
das
adc
nop
inc
xchg
dec
and
add
in
rcll
inc
mov
test
jb
mov
adc
pop
mov
dec
test
ficomps
cld
je
cmpb
sbb
and
pop
shrl
mov
xchg
xchg
push
cld
pop
nop
inc
stc
sbb
sub
sub
push
push
or
sbb
cmp
pop
rorl
cmp
dec
je
lock
es
push
shll
pop
inc
shlb
ret
imul
cmp
pop
xor
push
and
int3
add
push
in
adc
cmpsl
push
xor
push
sub
sbb
cmp
sbb
xor
and
jo
dec
jmp
push
out
jecxz
lods
loop
xorb
fisubrl
mov
cwtl
arpl
add
adc
xchg
testl
bound
jl
mov
cltd
mov
add
sar
push
or
inc
xchg
data16
jl
dec
inc
or
cli
pop
fisubs
cmp
adc
incb
mov
fcomip
sti
push
pop
push
mov
dec
jmp
xor
idiv
jle
out
sti
call
sub
test
jg
mov
icebp
adc
jne
loopne
jbe
adc
out
jmp
frstor
mov
int
jp
jne
pop
pushf
pop
jp
in
ret
les
flds
push
mov
or
out
inc
or
pop
pusha
push
add
shr
inc
movsb
sti
sub
test
pop
lea
cltd
idivl
mov
inc
mov
xor
mov
jl
pop
popa
jg
fs
or
out
pop
stc
mov
mov
cmp
mov
mov
lahf
xor
xchg
sbb
and
pop
mov
jle
add
pop
inc
pop
xchg
xchg
jg
sub
cmp
int3
lods
sti
fucomip
or
out
insb
mov
pop
hlt
fildl
aas
fildll
pusha
or
add
fdivl
ds
lock
or
stc
mov
jle
lret
rolb
pop
add
pop
add
ficomps
cwtl
fdivp
or
xchg
pop
jl
jmp
jno
sbb
inc
mov
mov
or
clc
fidivl
jmp
outsb
sub
mov
out
xchg
pop
xchg
inc
jne
pop
lahf
push
sbb
jl
dec
jmp
icebp
mov
aad
mov
push
fisttpll
js
lea
or
lock
aam
push
adc
and
rolb
sbb
mov
notb
jne
push
lahf
lcall
lret
je
or
fcoms
jne
subl
sbb
lock
mov
push
push
loopne
mov
pop
sti
adc
lock
adc
or
sub
lods
add
push
and
test
call
int
jns
cwtl
sub
cld
gs
mov
or
mov
shll
push
jne
mov
xchg
pop
jne
rcll
adc
mov
pushf
loopne
sti
sbb
scas
jmp
leave
push
leave
xchg
pop
add
rcrb
pop
and
movsb
mov
and
outsl
add
pop
icebp
lea
push
mov
push
loop
jae
fnstcw
add
push
std
mov
push
jns
pop
jne
hlt
adc
mov
sub
dec
and
fnsave
dec
add
push
xor
cmp
loop
hlt
xor
mov
mov
add
ret
push
sbb
jg
jg
popa
push
add
inc
mov
adc
sbb
dec
clc
loope
or
mov
xchg
lock
push
pop
shr
push
pop
add
jo
sub
mov
mov
jns
movnti
mov
rorl
mov
repz
nop
adc
push
xor
bound
and
stos
mov
or
and
add
in
or
xor
and
out
rcll
push
xor
push
cmp
pop
pop
mov
shrb
iret
pop
cmp
push
sar
cmpsb
leave
clc
lods
sub
clc
setb
test
jne
mov
ficomps
das
sarb
dec
sub
sar
xor
and
adc
mov
lea
push
pop
adc
mov
sub
pop
call
jmp
mov
fsts
mov
mov
rcr
dec
nop
lock
hlt
mov
dec
or
pusha
je
xor
call
shrb
inc
sbb
shrl
pop
dec
mov
inc
cmp
push
loope
mov
hlt
sbb
or
imul
shrb
aam
call
pop
ret
pop
cmpsl
xchg
push
rcrb
push
sbb
ss
notl
in
cs
add
call
xor
push
fisttpll
and
int
in
pop
xor
clc
or
and
push
je
and
icebp
mov
std
cs
jbe
into
pop
or
adc
test
cmpsl
mov
add
and
adc
mov
std
xor
leave
adc
movl
sub
add
pop
movl
loop
push
mov
xchg
mov
imul
add
ja
movsl
push
push
pop
pop
lods
push
shlb
outsl
add
xchg
cltd
adc
push
mov
push
inc
pop
roll
push
in
pop
dec
lods
and
xchg
out
cmc
test
je
xor
clc
pushl
mov
mov
ljmp
push
movsb
mov
and
pop
mov
mov
jmp
push
pop
dec
lods
mov
adc
mov
lcall
inc
jbe
jb
mov
or
addr16
pop
pop
add
fmul
andl
test
insb
jo
jae
sub
add
mov
push
cmc
or
inc
add
pushf
lock
inc
or
pop
push
add
xchg
addr16
mov
xchg
xchg
and
inc
inc
mov
adc
loop
xchg
push
jg
vhaddpd
mov
inc
jg
shrl
rorb
pop
jmp
push
mov
jns
jns
decl
call
mov
pusha
enter
add
in
push
push
ret
dec
jle
dec
lock
ret
jmp
push
push
and
pop
inc
push
fcomps
jbe
or
sbb
xor
imul
rorb
push
stos
inc
repz
jbe
mov
loop
cld
insl
lock
je
cmpb
cltd
adc
repz
adc
mov
xchg
xchg
imul
aad
or
leave
xchg
lods
jl
push
or
pop
stos
or
xchg
add
mov
stos
and
add
cld
jbe
mov
dec
add
out
outsl
stc
jl
or
orl
popf
push
icebp
and
nop
pop
cmp
dec
jbe
or
lcall
popf
inc
ljmp
mov
decb
test
add
movb
sub
adc
and
sub
lret
mov
push
mov
and
or
roll
pushf
lret
pop
data16
movsb
das
or
push
mov
ret
fcmovne
mov
add
js
push
mov
lcall
and
shl
daa
add
subl
sub
mov
fdivl
loop
add
push
es
adc
adc
jge
jl
bound
sbb
in
adc
aam
in
fbstp
arpl
push
int3
mov
sub
push
mov
jmp
mov
aam
push
push
scas
adc
int
imul
mov
adc
rcrb
gs
inc
test
inc
adc
cmpsl
inc
pop
or
out
sub
jo
pop
add
add
aam
mov
in
push
push
xor
cmp
movl
jp
adc
mov
add
mov
aam
enter
push
or
jecxz
in
dec
neg
hlt
mov
bnd
xor
inc
and
xlat
push
je
mov
testb
sub
aam
out
mov
rcrl
push
stc
or
jns
add
pop
mov
and
push
pop
add
nop
notb
sub
dec
push
mov
or
jl
sbb
mov
sbb
dec
leave
bound
mov
in
lock
lahf
popw
das
icebp
jnp
jne
pop
push
mov
pop
scas
mov
or
push
nopl
fsubr
adc
mov
jecxz
lods
mov
mov
js
psrld
sub
lds
push
in
loopne
sbbb
or
sbb
xor
pushf
mov
lcall
loope
decl
pushf
sbb
das
movsb
inc
shll
adc
cmp
repnz
sub
add
aad
imulb
pop
sbb
pushf
or
sbb
push
jae
loopne
lcall
jl
les
cld
push
sub
lret
stc
shrb
and
push
popf
stos
cltd
imul
je
les
mov
add
sbbb
lea
push
rcrb
push
adc
rclb
push
out
dec
push
nop
je
pop
mov
and
or
cld
jo
mov
scas
cmp
push
stos
sub
xchg
xchg
test
or
inc
and
mov
imul
flds
push
cmp
cmpsl
push
lods
cmpsb
and
cs
add
mov
push
pop
mov
and
das
test
xchg
mov
or
rol
mov
adc
lods
adc
jo
jns
push
ret
gs
daa
and
adc
add
sti
xlat
cmp
fnstcw
xchg
in
cs
sti
pop
fdiv
jl
adc
mov
add
add
decl
stc
loope
push
daa
sldt
mov
or
sbb
sbb
ljmp
scas
add
lahf
pop
lret
push
push
shrl
dec
daa
pop
ljmp
pop
leave
daa
pop
dec
push
or
call
movq
dec
test
and
sub
jo
and
std
jo
add
js
scas
jno
add
mov
and
faddl
push
or
and
or
mov
push
pop
push
or
jbe
push
shlb
push
jecxz
jbe
mov
add
popf
iret
je
and
push
mov
add
add
add
fistpl
in
push
mov
popf
movsl
add
push
adc
xchg
mov
or
insl
cmovp
xor
test
ret
dec
outsl
dec
sub
push
mov
popf
adc
dec
sub
dec
dec
mov
push
outsl
adc
and
mov
mov
cmc
inc
push
cwtl
hlt
ficoms
adc
cmp
punpckhwd
pop
jl
inc
lods
data16
or
jo
push
popa
or
mov
push
fnstsw
pop
jle
lret
jbe
ret
push
dec
into
mov
inc
and
idivb
jo
aas
jo
out
jle
and
ja
rolb
sahf
cmp
je
ja
mov
inc
decl
add
mov
add
push
outsb
sub
xchg
int
lea
jg
jae
push
rorl
jne
sbb
sbb
lds
jne
inc
js
call
and
jno
sub
outsl
push
outsl
outsl
testb
pop
push
je
and
gs
test
ret
mov
lea
mov
stos
jae
test
nop
out
pop
or
dec
or
fdivrl
inc
pop
cmp
imul
inc
xor
add
test
testb
out
shrl
cmp
popa
jl
sbb
push
lock
or
enter
or
push
fidivs
sti
pop
mov
lcall
pop
pop
daa
sub
jl
or
mov
jl
divb
pusha
in
or
pop
js
sub
scas
xchg
ror
enter
call
enter
adc
xor
test
sarl
cmp
nop
adc
or
and
inc
nop
fldl
sarb
cmp
ficomps
adc
xor
add
dec
fwait
bound
xchg
daa
xor
outsb
mov
inc
pop
sbb
fs
sahf
xlat
int
or
or
jns
add
adc
add
xorb
or
or
sbb
out
aam
push
cmp
push
ret
adc
push
dec
addr16
in
or
fildl
add
xchg
decb
push
sahf
out
add
add
add
std
adc
pop
mov
push
cmp
jecxz
cmp
or
mov
popa
aad
cmp
push
push
sti
outsl
push
mov
mov
ljmp
popl
fcomps
inc
push
fsubl
lock
bound
and
adc
int
pop
js
and
push
call
adc
jns
cwtl
and
pop
adc
out
faddl
adc
or
and
scas
test
push
or
int3
add
cmp
test
hlt
loopne
push
imull
cmp
testl
jnp
div
ljmp
pop
push
andl
sti
push
xor
xor
mov
xor
adc
movups
enter
pop
xchg
icebp
adc
out
jge
jo
adc
pushf
fs
daa
fstpl
add
mov
xor
or
xchg
stc
in
or
out
inc
pusha
sub
jmp
jae
sub
pop
push
cld
jnp
ss
xchg
bound
mov
sti
jne
push
or
int3
sbb
sbb
sub
push
push
sbb
fimull
cmp
movsl
js
pop
insl
xchg
dec
and
andb
sbb
dec
clc
xchg
cmpl
jne
int3
dec
xor
xor
int3
fnstenv
test
mov
es
add
jl
movl
add
push
mov
orb
push
pusha
mov
and
test
orl
pop
lea
push
push
push
js
xlat
mov
outsb
lcall
jl
test
xor
push
js
js
imul
pop
adc
adc
sub
jmp
cmc
adc
add
clc
cmc
jae
dec
push
sbb
xor
ret
dec
ffreep
ja
or
xor
rcll
cmp
push
lea
jns
aam
js
scas
push
std
push
pop
push
add
push
sti
xor
sub
inc
mov
sub
loope
push
mov
xor
fdivr
jns
dec
sub
pop
hlt
test
pop
out
add
cmp
xchg
push
add
cmp
dec
test
das
movsb
adc
cmpsb
xchg
add
imul
or
aad
dec
xchg
aad
push
outsb
xor
fwait
push
pop
mov
and
sti
jle
xor
fstps
pop
push
and
repz
test
xor
mov
dec
cmpsl
push
cmpb
jge
xchg
or
and
add
sbb
fistl
and
push
testb
bound
push
mov
idivl
jl
or
sbb
or
and
cli
sub
repz
add
push
jmp
add
dec
cli
xchg
test
rclb
or
xchg
mov
call
es
lret
sub
mov
pusha
xlat
and
inc
fcmovnb
and
mov
sub
loope
nop
adc
mov
adc
xchg
and
push
lods
mov
inc
out
cmp
loop
push
test
movsb
jne
sub
jo
xor
test
mov
outsl
addr16
popf
push
repz
loop
pop
hlt
setne
or
pop
repz
sti
aas
push
inc
ljmp
pop
es
cmp
call
hlt
jne
push
push
push
push
dec
ret
push
test
mov
cli
lahf
faddl
or
adc
push
sbbl
pop
cmp
sub
xchg
sub
push
adc
or
lret
xor
jle
rcr
or
adc
and
dec
loop
xchg
pop
inc
jb
xchg
lock
adc
ljmp
and
jne
push
jne
mov
in
jb
aas
pop
inc
jo
adc
adcb
add
push
js
hlt
jbe
les
iret
jge
fldenv
lcall
mov
jl
movzbw
shl
cwtl
adc
or
dec
je
pusha
push
adc
cmp
add
jmp
lcall
cld
add
jbe
push
push
sub
stos
cmc
mov
push
pop
mov
andl
push
arpl
dec
ret
mov
sub
sub
lods
inc
lret
orl
add
negl
in
sbb
mov
add
add
mov
inc
add
and
xchg
data16
aad
adc
push
and
xchg
sti
outsl
cmp
sbb
dec
add
sub
das
xchg
jmp
push
femms
sub
fmuls
js
shrb
and
add
inc
sub
xor
mov
inc
orb
xorl
add
mov
pop
sbb
add
adc
jo
jne
sub
je
push
je
xor
or
sbb
and
addr16
mov
imul
test
movl
pusha
popf
xor
in
arpl
adc
stos
or
clc
mov
lret
sbb
and
pop
add
fwait
mov
xchg
rclb
aam
pop
es
inc
and
ret
sub
ret
addl
add
jne
and
jle
push
xchg
negl
fs
add
sub
sub
adc
jbe
sbb
or
or
repnz
fldl
shrb
jne
addr16
add
push
adcb
loope
push
inc
out
sub
cld
das
jo
push
fldl
xchg
mov
stc
sbb
sub
sub
pop
cmp
fdivl
test
cmpsl
sarb
cld
rcll
out
push
cwtl
add
or
push
pop
and
or
push
movzwl
pop
movswl
add
sub
cmp
setge
fidivs
je
test
jle
aas
mov
add
jge
addb
insl
cmp
xchg
stos
in
scas
dec
andb
pop
int
lret
fmuls
lea
in
mov
push
add
sub
das
sub
or
add
push
jo
sti
push
push
jnp
lods
jnp
icebp
std
dec
jb
mov
sub
movsb
daa
ss
in
cmp
repz
jnp
addr16
add
pop
xor
mov
inc
dec
testl
in
mov
push
mov
pop
mov
inc
ror
insl
adc
jle
xor
add
mov
push
mov
push
pusha
stos
addr16
insb
cmp
dec
inc
test
cmpsb
pop
xor
adc
insl
and
or
xor
cmp
ljmp
test
mov
push
xor
test
stos
push
mov
ret
aad
or
shrb
enter
xchg
adc
ret
push
pop
lock
add
sbb
mov
push
pop
lods
ja
xorl
repz
add
inc
pop
jl
push
gs
repz
lods
outsl
test
add
jl
jmp
loope
sbb
xchg
add
pushf
mov
push
mov
and
sbb
fdivrl
cmp
jbe
stos
push
jo
lcall
out
jge
icebp
loop
inc
add
push
inc
add
arpl
cmp
rorb
cmp
push
sahf
sub
cld
cli
inc
sub
scas
adcb
shrb
lds
into
dec
popf
das
or
cmp
test
mov
lret
into
lock
add
push
adc
shll
sbb
mov
mov
or
clc
cmp
jae
push
jb
mov
fdivs
push
pusha
cwtl
shl
and
daa
es
scas
pop
mov
push
push
ret
push
add
fstpl
mov
jmp
cmp
dec
hlt
jge
mov
jmp
ja
jmp
mov
outsb
stos
test
fmul
push
loop
mov
jmp
rorb
ljmp
add
pop
fs
cld
push
jge
jecxz
and
cmp
jg
aam
sbb
add
in
mov
test
jmp
sub
add
insl
mov
hlt
mov
jbe
icebp
and
stc
or
adc
fadds
inc
hlt
sub
sbb
push
push
sbb
or
mov
add
pop
or
ret
ret
or
mov
mov
lock
xchg
mov
in
mov
es
xorb
dec
pop
push
stos
pushf
push
sbb
ret
mov
cmp
mov
lds
sbb
mov
or
jne
xchg
bound
popa
clc
push
loope
movsl
rcl
sbb
jne
sub
cmp
or
jle
add
fsubs
cmp
scas
je
sub
cli
add
js
xchg
push
fsubs
mov
and
mov
jo
dec
cmc
ud2
inc
sbb
sahf
push
stos
mov
xor
lret
ret
mov
dec
or
lods
push
pop
jp
fsubl
in
jecxz
push
ds
xchg
mov
push
incb
add
push
xchg
fcomps
dec
and
cmp
mov
fwait
pop
sbb
mov
jg
and
mov
xchg
cli
or
insb
roll
es
or
lock
movsb
jb
push
addr16
in
push
mov
pop
std
int3
mov
inc
mov
or
xchg
or
pop
sub
int
cs
sbb
add
mov
pop
xor
mov
add
push
pusha
sbb
insl
adc
push
cmp
rol
inc
test
ret
pop
test
mov
mov
sbbb
dec
mov
push
or
and
js
pop
adc
inc
fs
mov
push
mov
movsb
aas
adc
xchg
js
xchg
push
pusha
lods
mov
and
cmp
push
mov
ret
mov
je
push
cmp
pushf
inc
cli
loop
add
jg
mov
or
sub
add
cmp
mov
xor
lods
lods
mov
xchg
adcb
dec
faddl
jb
mov
sub
cmp
mov
push
mov
add
in
push
push
mov
scas
test
imul
add
dec
xor
lea
lock
mov
xorb
jmp
add
and
xor
or
or
sub
add
aam
or
add
push
mov
ret
dec
inc
push
adc
cmpsb
cmp
mov
or
nop
adc
or
pop
lret
push
sti
adc
arpl
pop
std
dec
inc
mov
pop
dec
push
sbb
dec
mov
mov
add
push
pop
cwtl
je
movsb
orb
jecxz
lock
cmp
daa
dec
add
fs
sbb
add
cmpsb
and
push
add
cltd
cmp
nop
inc
lods
xchg
insl
sub
sbb
adc
cmpsb
mov
mov
adc
dec
mov
mov
out
xlat
orb
ret
adc
adc
sub
pop
call
call
dec
add
sbb
mov
shlb
js
jp
js
mov
in
jne
loopne
and
call
shll
test
xor
sbb
adc
adc
imul
mov
cmp
add
call
add
sahf
adc
mov
sbb
inc
test
fwait
jno
mov
in
loope
adc
inc
inc
pop
ret
mov
push
sbb
pop
cmc
jmp
popl
pusha
push
sbb
jne
fldt
add
push
push
or
sbb
xor
add
push
push
and
or
sbb
push
and
int
call
je
sub
pop
loopne
ja
inc
jbe
test
push
ss
push
outsl
cmp
add
pop
daa
mov
or
arpl
in
fs
push
push
fs
sahf
and
xor
les
fwait
and
or
test
add
mov
lods
mov
pop
add
jle
or
ficoms
xor
push
call
mov
add
test
lods
mov
fwait
in
mov
xor
mov
mov
mov
xchg
outsl
add
jmp
sbb
mov
mov
js
fisttpll
nop
push
js
sbb
andb
add
insb
sbb
mov
adc
push
cmp
or
or
loopne
mov
adcb
arpl
add
push
negl
xchg
pop
bound
je
xor
and
pop
add
lods
mov
mov
repz
bound
push
sbb
leave
sbb
insb
add
les
push
push
pop
cmc
jp
push
out
movb
jp
add
sbb
jne
push
push
mov
fs
repz
fmull
mov
clc
xchg
loopne
fisubrl
jo
mov
sub
push
fcoms
icebp
lcall
int
adc
push
push
and
inc
push
xchg
push
mov
cmpb
jnp
data16
pop
pushf
mov
push
loop
je
fcoml
adc
les
pop
sub
lods
enter
add
jno
addb
leave
pop
add
pop
rorb
or
or
xorl
pop
loopne
roll
out
mov
add
scas
je
ret
or
xlat
ds
push
push
xor
adc
lock
xor
hlt
inc
xor
sub
gs
inc
mov
call
lea
cmpsl
fdivrs
clc
pcmpgtb
and
or
aam
adc
inc
mov
dec
imul
add
jne
xor
push
imul
adc
cld
faddl
add
xchg
push
lock
movsb
popa
gs
addl
cli
clc
mov
push
int
inc
add
xchg
testb
lea
push
lock
add
cld
sub
mov
imul
add
fimuls
ficompl
lock
call
push
xor
cmp
loop
or
hlt
shr
adc
or
add
imull
icebp
add
iret
push
push
add
push
fcoml
xlat
fstl
or
xchg
dec
jp
mov
add
add
jp
xchg
or
push
mov
add
jle
add
jo
enter
adcb
dec
sbb
shlb
xor
arpl
dec
mov
mov
imul
inc
inc
sbb
sub
add
jg
sbb
insl
aam
js
movsl
and
or
cwtl
dec
cwtl
rcll
sub
hlt
and
movsb
test
add
insb
push
icebp
lret
add
bound
mov
mov
push
call
ret
or
lock
shlb
cmp
je
sbb
push
dec
cmp
adc
pusha
movzwl
jmp
push
dec
mov
fcmovne
pop
and
mov
jp
int
iret
push
ss
jle
mov
push
mov
push
movsb
sub
jo
sarb
outsl
sub
test
push
test
or
cmc
mov
push
int
shl
sub
jecxz
push
test
mov
sub
mov
and
cs
sub
xchg
adc
or
mov
mov
cmp
je
inc
push
add
push
lea
push
jb
insl
jbe
arpl
cmp
sub
push
sbb
pop
push
adc
mov
pop
or
adc
sarb
and
call
push
sbb
cwtl
aas
push
adc
mov
pop
in
sbb
aaa
and
lret
mov
enter
movsb
bound
push
clc
add
hlt
push
in
xor
adc
push
sbb
outsb
in
in
mov
neg
push
add
mov
test
add
call
loope
in
jl
or
mov
sbb
inc
std
scas
je
shl
and
test
ja
fidivrl
push
dec
movsl
jbe
mov
push
jo
or
push
cmp
je
fcmovbe
push
push
xchg
stos
inc
sbb
mov
add
fisubrs
movsl
xchg
sub
fdivrs
mov
je
push
push
aas
in
push
mov
sub
add
pop
mov
arpl
push
push
icebp
mov
sbb
jns
or
into
push
test
add
in
imul
push
inc
xchg
gs
movsb
cmp
adc
sete
in
push
xchg
mov
decb
addr16
rcl
jnp
push
and
outsb
ljmp
cmp
aam
push
popf
out
ja
nop
js
aad
dec
cmpl
je
ret
pop
or
and
ljmp
data16
sub
adc
ret
add
jb
pop
movsl
dec
rcrl
mov
sbb
xor
mov
aam
lea
rcll
shl
std
cmpb
mov
jb
ljmp
mov
push
lea
push
cmp
je
cmp
cmp
ret
jne
add
cmpsb
mov
jo
ja
cmc
je
and
push
rclb
outsb
or
adc
cmpsb
mov
outsb
pop
mov
cmp
xor
adc
mov
pop
clc
daa
xor
add
or
test
mov
mov
dec
lea
cmp
jne
xchg
rolb
and
push
sti
mov
sbb
mov
mov
or
push
lea
cld
push
and
sub
cld
xchg
outsb
push
cmp
add
mov
lea
pop
xor
leave
ret
sbb
xorb
jo
adc
icebp
in
inc
loopne
cmpb
or
ja
mov
call
rcrl
pop
push
loopne
ret
mov
dec
mov
add
push
sbb
xchg
mov
add
pop
push
xlat
xor
dec
inc
adc
xchg
orb
mov
mov
xor
je
cmpl
in
xor
arpl
cli
push
add
jle
jne
mov
cmp
gs
je
cmp
jne
mov
sbb
outsl
pop
out
rolb
push
dec
inc
lock
mov
mov
fiadds
dec
xor
push
movsb
jne
jmp
testb
lcall
inc
aam
sbb
cli
cmp
jbe
out
pop
add
inc
cmp
fs
dec
inc
jmp
inc
and
add
xor
or
hlt
loopne
mov
mov
add
or
data16
sub
cmp
or
add
cmp
je
mov
lea
lcall
hlt
and
cwtl
jo
xor
xor
inc
cmpl
test
jle
cmp
notb
cmp
jno
xchg
insb
push
and
fidivl
loope
sub
jb
or
ja
or
test
sub
inc
jne
in
mov
cmp
push
cmp
jecxz
cmp
push
ljmp
or
jb
cmpsb
inc
sub
popa
lret
push
jno
loop
jne
mov
add
sbb
inc
inc
jo
movzwl
pushw
lret
xor
std
dec
rcr
cmp
jecxz
add
jmp
sub
les
inc
orl
hlt
add
je
fs
jne
xor
push
add
lock
test
sub
dec
or
add
ret
push
jae
mov
jmp
dec
shlb
test
jbe
test
sub
lea
test
and
shlb
adc
jno
adc
std
pop
mov
stc
inc
jg
mov
cmp
cmp
or
jle
repz
sub
jle
jmp
cmp
jl
ret
outsl
pop
jle
pusha
in
test
iret
addb
jb
jbe
mov
mov
test
fwait
and
or
jl
jle
je,pn
test
jne
je
outsb
and
test
add
xchg
je
je
xor
xor
adc
movb
inc
mov
push
sub
add
sbb
lds
add
sub
shlb
mov
push
mov
inc
and
je
jnp
dec
in
adc
jae
mov
mov
add
adc
es
dec
and
and
insb
add
push
movl
sub
mov
mov
xor
push
cmpsb
outsb
push
push
and
xchg
mov
ror
sbb
xchg
add
loop
mov
ja
out
pop
cmp
add
mov
xchg
jmp
lods
push
sbb
mov
pop
sub
mov
inc
mov
movb
cmp
fwait
push
inc
lea
mov
movsb
mov
pop
jb
sbbl
cwtl
pop
cmp
mov
dec
movsb
add
loopne
inc
das
mov
sbb
lea
pop
cwtl
xor
xor
aam
lock
bnd
stos
dec
daa
mov
add
jl
sbbl
push
push
outsb
mov
shll
call
insl
and
cmp
loope
aas
or
xchg
adc
mov
push
fnstcw
sti
mov
clc
sahf
add
or
pop
mov
pop
daa
dec
add
repnz
mov
arpl
or
add
movsb
ss
int3
push
push
inc
mov
or
aam
xor
pop
mov
adcl
mov
test
clc
add
inc
inc
movsb
fnsave
jl
add
cmp
add
mov
cmpsl
data16
mov
pusha
add
add
sahf
inc
xor
lock
popa
mov
es
inc
xchg
xchg
inc
lods
pop
adc
xchg
rcll
call
lods
jo
cmp
xchg
xor
addl
add
pusha
jb
cs
lret
lds
cwtl
and
pushl
adc
mov
xchg
leave
or
push
cmp
sbb
mov
shrl
insl
mov
pop
sbb
cltd
lods
dec
mov
lock
into
push
mov
cmp
and
lret
fs
jmp
sbb
xchg
xchg
jne
lahf
xchg
pushf
lods
sbb
cwtl
addl
xchg
xchg
xchg
fnstsw
xchg
or
insl
pop
movsl
mov
iret
push
leave
mov
cmp
or
jns
sub
xchg
or
mov
inc
test
adc
xchg
lahf
mov
dec
pusha
call
add
add
lcall
jne
add
aam
lock
subl
xor
xor
mov
xor
loop
pop
sbb
push
in
rolb
ds
dec
es
push
sar
push
jne
sub
pop
out
and
jne
jnp
cmp
fwait
push
push
fdivl
rclb
jne
sbb
sub
loop
aas
jnp
das
movl
add
push
lock
into
cmpl
dec
adc
mov
inc
cmpl
mov
sub
jnp
mov
jb
adc
and
sbb
shr
shr
cmp
je
jbe
cli
clc
ja
lds
add
inc
xchg
in
loope
jge
inc
inc
fsubs
and
aaa
sbb
sub
cwtl
add
add
pop
mov
adc
lods
fstpl
pop
push
aam
fsubr
cmp
in
test
jbe
popf
jo
push
push
outsb
push
push
and
inc
sub
sub
in
push
call
xor
jae
xor
sub
jge
shlb
inc
pop
cld
pushw
jmp
pop
inc
cmp
je
lea
cmpb
mul
mov
cmp
jne
les
aam
adc
ret
add
pop
cmp
mov
pusha
sub
incl
fnstcw
loope
rorb
jmp
mov
pop
cs
ja
sbb
xor
jb
jge
cmp
dec
fchs
je
jl
mov
add
mov
rclb
movb
mov
or
add
enter
iret
popa
imul
sub
loop
fsubl
nop
jmp
inc
push
sbb
dec
popa
in
adc
pop
sbb
outsb
sub
pop
push
fisttpll
cmp
push
xor
subl
sub
adc
add
int
push
rolb
dec
mov
pop
pushf
ret
inc
jecxz
add
adc
mov
xchg
mov
cmpsl
xor
test
lret
in
xor
cmp
fsubs
mov
fimuls
jns
or
ret
pop
lret
push
push
push
sbb
andb
xchg
lock
push
or
or
push
das
mov
jmp
push
cmp
cmp
imul
jbe
cmpsb
sbb
inc
and
pop
or
fdivrs
mov
sub
lret
in
sub
xor
jb
pop
cmp
cmp
jbe
add
fists
sbb
pop
ret
push
enter
jle
test
push
js
in
test
insb
ss
in
add
or
mov
clc
lods
lret
xorb
inc
mov
push
ret
or
add
lahf
jp
mov
jge
insl
cmc
xchg
jb
jle
push
pushf
sahf
in
enter
jmp
mov
push
push
repz
fwait
movsb
push
push
lock
aas
fsub
inc
push
cmp
popf
mov
insl
insl
lods
mov
jle
test
inc
popa
adcl
mov
xor
xchg
jl
addl
mov
loopne
rcrb
add
pop
inc
dec
movl
xchg
sbb
js
pop
mov
or
loopne
mov
adc
inc
inc
shrl
addb
inc
cs
rcrl
test
in
sbb
test
or
lods
jnp
jae
or
add
lcall
inc
js
push
xor
mov
xor
cmp
jle
cmp
loopne
in
add
shl
jne
cld
aam
xor
test
adc
fistpll
jnp
add
add
push
lcall
hlt
cmp
push
mov
pop
jg
inc
dec
rclb
jnp
sub
cmp
sarl
adcb
push
ud0
push
mov
repz
mov
lea
mov
rorb
xor
pop
xchg
push
cmp
dec
bound
rorl
cmp
fsub
and
cmp
push
dec
add
arpl
nop
sbb
sub
rclb
mov
xchg
in
in
add
loop
fsubl
in
out
sbb
mov
xchg
mov
call
aam
and
sub
add
xor
pop
sbb
sub
mov
lea
mov
in
sbb
idiv
push
adc
cltd
loopne
sub
shlb
cmp
add
enter
sti
mov
bound
sub
or
jo
inc
out
push
add
loope
mov
daa
int3
inc
dec
adcl
cmp
dec
add
andl
dec
add
orb
cmp
or
sbbl
mov
or
dec
xchg
loopne
cmp
inc
add
mov
mov
or
sub
jl
cld
insl
loopne
in
xchg
iret
add
push
in
cltd
inc
mov
popa
xchg
pop
or
scas
fnstsw
lds
cld
mov
repz
sub
lret
call
sub
pop
pop
sbb
adc
or
loop
fwait
roll
sbb
cmpl
mov
fiadds
and
push
pop
mov
mov
mov
inc
adc
pop
iret
mov
fwait
adc
add
dec
xor
push
adc
pop
imul
sbb
push
xor
cmp
inc
xor
cmp
and
inc
mov
lret
sbb
ja
data16
inc
test
idivl
cmp
pop
std
xchg
std
sbb
add
subl
loope
pop
decl
pusha
les
aas
mov
push
aas
push
push
mov
push
add
or
add
dec
mov
or
and
push
add
mov
icebp
lcall
mov
push
add
xor
fisttpl
or
or
cli
pushf
adc
mov
and
pop
faddl
lcall
in
lock
movsl
add
jo
push
xchg
pop
shrb
inc
mov
jb
cmp
pop
or
std
sub
adc
in
leave
shl
and
push
lock
dec
cmp
add
xchg
jecxz
add
dec
rorl
into
push
hlt
int
dec
test
mov
lea
push
aaa
scas
jecxz
data16
dec
inc
out
or
sub
and
dec
movsl
add
push
mov
xor
les
xor
pop
movsl
shll
rolb
sbb
cmp
push
movsb
sbb
sbb
call
andl
dec
sbb
push
andb
int3
loopne
clc
push
push
test
pop
and
clc
fisubrs
incl
xchg
xchg
lcall
in
out
push
je
clc
xchg
cmpsl
sub
lret
scas
inc
cwtl
and
sub
std
and
lret
xor
pop
test
push
popf
addl
xor
int3
jecxz
inc
pop
rorb
mov
test
jb
sbb
jo
add
xchg
push
ret
in
lock
call
add
popa
jnp
dec
push
and
cmp
dec
inc
push
insl
inc
pop
sahf
daa
jp
inc
push
or
out
push
jl
xchg
inc
push
xor
jecxz
mov
xchg
nop
cmp
into
push
xor
inc
xchg
push
push
xchg
pop
mov
cmp
mov
or
insb
insb
psrld
sub
jae
and
pop
popl
jo
popf
add
or
adc
inc
dec
imul
xor
mov
nop
rorb
sbb
jg
movsl
in
imull
in
sbb
inc
loopne
dec
push
cmp
or
scas
or
pop
addr16
ds
sbb
or
pop
adc
in
popf
mov
dec
jp
lods
push
adc
adc
add
xchg
or
test
mov
cli
rcr
neg
or
jmp
mov
adc
xchg
push
dec
int
mov
cltd
sub
and
or
pop
mov
sub
xchg
sub
or
inc
stos
jp
jg
jmp
repz
cmc
push
add
test
sbb
rol
jmp
dec
sub
cld
rorb
aad
pop
cmp
pop
cs
arpl
pop
inc
jb
dec
lods
or
das
or
test
pushl
xchg
xchg
pop
sbb
stos
jp
sbb
nop
pop
pop
push
cmp
idivl
add
shlb
aam
sahf
xor
xchg
pop
outsl
adc
add
insb
jo
push
inc
aam
push
mov
or
adc
pop
jno
mov
jmp
xor
add
movsl
adc
ds
add
push
cmp
pusha
sub
lahf
cld
cmpsl
ret
call
jne
pop
scas
in
fisttpl
inc
adc
fstp
arpl
inc
sub
pop
dec
or
mov
adc
dec
lock
outsb
jnp
leave
jo
fidivl
or
push
in
pop
dec
push
lods
mov
pop
loope
jne
or
fiadds
or
cwtl
nop
adc
cwtl
xor
inc
cmp
hlt
jl
or
push
jno
jmp
insb
lcall
adc
repz
jns
push
cwtl
adc
les
add
mov
sub
sbb
dec
fcomps
stc
in
or
shll
push
adc
and
rcll
adc
xor
dec
sub
jmp
sub
test
jmp
mov
lock
je
cmc
pop
sbbb
movsb
mov
adc
dec
add
push
movsb
mov
jb
sbb
sub
sbb
pop
sbb
and
cmc
orb
pop
movsb
and
xchg
jns
popf
mov
testb
mov
mov
add
xor
inc
outsb
daa
pop
push
push
sbb
adc
push
mov
fsts
push
inc
xor
ret
xchg
and
sbb
loope
leave
dec
call
insb
sub
insl
cs
xor
inc
pop
push
dec
mov
int3
xor
inc
inc
decl
enter
and
roll
xor
mov
dec
and
jo
jge
popa
arpl
xor
sbb
xchg
subb
mov
fs
rclb
inc
fmuls
jbe
and
xchg
push
cmp
add
mov
insl
jmp
insl
loopne
xchg
cmp
loope
scas
inc
js
xor
int3
or
and
inc
shll
rcl
ret
movsl
es
pop
enter
push
in
adc
shll
daa
jne
addr16
shrl
stos
adc
cmp
orl
pop
or
add
fdivs
pop
xor
sub
sub
or
out
jmp
scas
sub
xchg
mov
mov
popa
ja
or
xchg
push
and
sub
push
xor
subb
test
xchg
stos
das
jno
aad
jb
mov
loopne
inc
xor
adc
add
jne
pushf
push
cmp
inc
in
orl
les
xacquire
adc
pop
in
add
test
mov
aas
in
mov
pop
xchg
or
fisubl
dec
dec
add
js
xor
pop
loope
shlb
rclb
in
js
dec
dec
and
pusha
xor
push
jae
enter
inc
pusha
dec
and
and
mov
mov
mov
sub
sbb
out
xor
and
pop
xor
in
movsl
or
push
inc
cmp
jne
mov
jmp
loopne
or
sbb
enter
negb
xchg
pop
sub
xchg
cwtl
shrl
pusha
dec
add
xchg
pusha
xor
sbb
cmp
push
xlat
enter
adc
gs
pop
dec
xchg
adc
and
push
or
push
jp
in
dec
hlt
rol
and
stos
clc
rol
repz
fdivrl
ret
rep
aas
push
mov
xor
adc
das
jle
sub
push
push
je
js
push
or
push
cs
xchg
or
adc
movsb
add
hlt
jne
push
ret
sbb
mov
sbb
push
cmp
pop
scas
jl
or
add
jp
mov
dec
sbb
lock
pop
aaa
dec
ret
and
dec
cmpsl
sbb
lods
mov
push
cmp
dec
cld
adc
popf
loopne
xor
and
test
cmp
xchg
rcl
aas
adc
push
mov
fadd
fldpi
push
mov
pop
pop
je
fwait
movsl
lret
js
push
test
cwtl
push
lcall
call
xlat
sub
subb
cmp
lods
add
shlb
pop
push
repz
cmp
das
lea
pop
pop
clc
ds
lret
dec
or
stos
xorl
repnz
inc
in
cmp
xchg
mov
inc
push
push
mov
rcrb
xlat
mov
rcrb
mov
aam
push
pop
ds
test
mov
sbb
xor
cs
js
or
int3
pushf
jl
xchg
fdivr
rolb
sub
mov
fcos
loopne
sbb
or
sbb
cmovo
jno
jno
jmp
sub
adc
mov
or
je
repz
insl
adc
or
or
xor
fsubrs
clc
mov
pushf
je
push
sbb
dec
push
scas
and
cwtl
sbb
movsl
sub
cltd
jns
mov
add
adc
mov
stos
sub
inc
and
or
xor
add
out
jnp
xor
and
popf
bound
mov
jg
mov
pop
mov
add
mov
clc
addr16
leave
shrb
or
fcmovnb
ret
pop
xchg
add
xor
xorb
adc
add
mov
add
out
in
jbe
loope
lea
test
rcrb
add
insl
and
dec
add
cmp
adcl
loopne
insl
rep
sub
inc
sahf
je
out
adc
lret
and
dec
in
call
xchg
int3
mov
test
lret
daa
aas
xor
or
push
adc
arpl
add
inc
push
sub
movsb
fnsave
sbb
push
cmpsl
loop
sahf
shl
pop
rclb
shrl
xor
enter
sbb
adc
xchg
fdivs
or
push
jle
mov
xchg
subl
aas
rcll
repz
mov
jmp
push
add
popf
push
mov
shlb
in
push
lods
rcrb
jno
jmp
int3
cmp
jae
flds
loopne
inc
insb
add
lock
add
ret
mov
fidivs
addb
push
call
sub
hlt
popa
and
add
sbb
cmp
and
into
mov
adc
mov
cmpsb
pop
add
cmpl
js
pusha
sub
xchg
ret
pop
stos
push
idivb
aam
je
loopne
repnz
pop
cltd
lahf
insb
jb
dec
mov
xchg
push
dec
sqrtps
dec
test
adc
insl
push
push
mov
pop
push
jb
cmp
jne
mov
add
jecxz
ds
and
test
ret
xor
pushf
in
mov
jns
stos
mov
jmp
cli
movb
cld
rolb
jne
ret
and
movzbl
push
jo
scas
mov
push
jg
or
mov
xor
mov
rolb
inc
pusha
pushf
fiadds
aas
andl
hlt
jbe
cltd
stos
dec
lock
je
sub
sbb
lahf
pop
jp
push
jmp
out
insl
mov
mov
mov
xor
sub
mov
mov
mov
cmp
repz
push
lea
push
inc
push
ja
js
fildll
pop
mov
pop
mov
testl
out
mov
cmp
xchg
sbb
ret
js
cmp
mov
sbb
fwait
xor
mov
xchg
mov
cmp
inc
leave
dec
xor
movsb
sub
jmp
movl
pop
add
mov
dec
mov
and
pushf
jle
push
jge
jb
punpckhdq
push
or
inc
in
dec
ret
jge
cmp
jne
push
inc
jecxz
pop
int
push
xchg
mov
movsb
xor
ja,pn
mov
mov
or
or
dec
je
jno
jle
push
adc
cmp
fimull
or
lock
jl
lock
cmp
mov
movb
fidivrl
sahf
and
xchg
push
push
push
and
lods
movsl
push
stos
pusha
mov
adc
mov
add
sbb
mov
push
xchg
inc
nop
and
jge
pusha
mov
push
ret
psllq
ret
pusha
and
ja
add
call
mov
adc
int
test
sub
rcrb
mov
sbb
ror
xlat
and
in
imul
mov
pop
push
add
mov
out
test
jns
out
fwait
outsl
xchg
lcall
je
mov
add
enter
iret
jbe
mov
sub
lret
inc
mov
mov
ret
jecxz
inc
ja
mov
mov
jnp
fxch
push
sbb
adc
add
inc
dec
xor
sub
add
idivb
es
and
shlb
pop
mov
cwtl
push
es
mov
jle
mov
adc
or
xchg
pop
push
mov
lea
add
xorl
and
cmp
pop
call
jl
push
sbb
push
adc
dec
jle
mov
pop
movsl
ret
nop
test
es
sub
inc
sbb
ss
push
sbb
bound
mov
addb
pop
push
xlat
or
faddl
mov
or
test
scas
or
adc
pop
or
insb
mov
sahf
jnp
add
fs
icebp
fcomp
mov
push
loop
ds
jl
push
sbb
xlat
icebp
push
sub
and
and
stc
jge
adc
jb
scas
jmp
fcomps
leave
jb
ret
mov
or
cwtl
sbb
sbb
stos
push
cmp
sbb
outsb
mov
imul
xchg
xor
jns
jle
pop
pushf
dec
push
stos
push
gs
add
outsl
mov
fbld
flds
push
add
imul
and
dec
sbb
cmp
fisubl
mov
adc
subb
xor
in
cs
and
sub
mov
ret
popf
jg
movsb
xchg
sti
mov
lea
mov
add
in
pop
dec
or
sub
sub
shll
add
pop
ret
leave
loopne
cld
dec
pop
mov
pop
pop
mov
pop
enter
sbb
and
pop
cld
push
testb
lea
stos
in
lds
jecxz
push
cmp
rcll
lea
test
and
sub
mov
scas
shrl
in
xor
sbb
arpl
and
xchg
orb
dec
movsl
ret
pop
fdivrl
mov
xchg
notb
pop
jo
push
cli
outsb
pop
loopne
loop
or
jmp
cmpl
imul
cli
and
aam
je
call
inc
jnp
roll
dec
push
andl
sbb
rclb
movsl
not
push
loopne
and
pop
adcl
mov
cmpsl
cmpsb
push
dec
arpl
mov
jo
es
loope
add
and
adc
xor
jne
add
pop
ret
addr16
sbb
pop
cmp
xorl
js
jb
neg
pop
imul
pop
shlb
pop
adc
daa
adc
dec
sub
sahf
inc
xor
loopne
out
clc
add
or
mov
scas
jno
rolb
sbbb
scas
add
mov
or
cmp
add
mov
dec
mov
cmp
jmp
inc
inc
das
out
cmpb
lods
push
pushf
es
faddl
das
test
pop
inc
mov
subl
adc
sbb
andl
loope
push
adc
rcrl
adc
and
outsb
cwtl
mov
and
xchg
lcall
shl
lea
mov
add
sbb
jmp
mov
loope
lcall
mov
xchg
jg
cmp
call
jl
cmp
add
add
inc
hlt
pop
jno
adc
lods
dec
jmp
int3
sbb
jo
fsubr
push
je
or
ret
adc
add
popf
mov
xchg
mov
jle
pop
cld
cs
lock
inc
xor
sub
outsl
mov
pop
fistpll
pop
lock
or
ss
jmp
icebp
cmc
push
jle
test
jl
lods
cmp
fistpll
cmc
mov
mov
add
xor
or
mov
xor
sbb
pop
sbb
mov
test
das
sbb
mov
xchg
xlat
lea
adc
test
inc
ret
sbb
push
nop
pop
push
cwtl
test
ret
pop
push
push
or
sub
mov
clc
dec
ss
push
push
adc
out
iret
ficoms
aas
les
mov
sub
add
dec
lahf
and
sub
mov
roll
clc
mov
pop
push
mov
roll
inc
mov
movl
mov
push
push
xchg
pop
inc
add
pop
mov
dec
pop
sbb
push
push
stos
and
mov
fsts
inc
pop
pop
sbb
gs
test
lea
rolb
fcoml
pop
pop
dec
fisttpll
fsts
pop
jp
rolb
insl
push
js
icebp
push
incl
xor
je,pt
cmp
shl
jle
jbe
adc
sbb
cmpsb
outsb
enter
pop
aam
jnp
add
ret
ljmp
sub
int3
pop
std
mov
adc
cmp
jae
cmpl
or
xor
or
jecxz
mov
scas
jle
mov
mov
mov
fists
sub
add
jbe
xchg
cld
js
jb
pop
cwtl
pop
jnp
movsl
imul
push
adc
xchg
popf
mov
mov
cmp
push
push
mov
dec
xor
mov
sbb
xrelease
mov
scas
or
mov
stos
cmpsb
insb
mov
add
les
xchg
adc
mov
shrb
push
sbb
mov
mov
or
mov
cmc
push
loop
loopne
sbb
outsl
in
mov
inc
notl
decb
enter
fisubrl
mov
mov
xlat
sub
lds
aad
mov
or
loopne
push
and
xchg
clc
add
push
test
test
test
dec
jns
shll
aaa
and
inc
mov
jmp
aaa
lret
pop
and
pop
sbb
leave
mov
jp
or
xchg
add
xor
cli
push
int3
cmp
je
cmp
mov
jbe
orl
add
add
adc
mov
sub
push
push
push
cmc
je
lret
inc
cld
xchg
or
imulb
sbb
push
sub
or
cmp
mov
or
dec
test
and
icebp
xchg
fidivrs
mov
insb
mov
ds
xor
adc
rcrl
add
xchg
and
mov
mov
add
or
scas
push
cmp
aaa
rolb
mov
cwtl
cmp
mov
or
xchg
lods
les
and
fcoms
insl
scas
mov
and
or
data16
dec
xor
ja
rorl
es
pushl
adcb
cli
and
jmp
cmp
pop
pop
loopne
cmpb
cmp
mov
rorb
loopne
pop
or
fdiv
sti
imul
cmp
sub
add
mov
sub
cmp
pusha
jne
movsl
xor
add
adc
in
jge
cmp
jne
cmp
mov
push
ds
out
or
lock
and
aas
mov
xor
imul
cmp
mov
inc
adc
sub
pushf
or
stos
xchg
xchg
dec
inc
push
inc
sub
in
rclb
pop
pop
fs
cmp
je
mov
push
mov
sbb
push
and
test
cmp
jne
adc
jo
fstpt
and
js
fs
jmp
jecxz
dec
jmp
xor
sarb
cmp
and
xor
fcmovbe
clc
xchg
ret
jne
add
cmp
test
in
hlt
sbb
or
mov
dec
inc
push
or
popa
in
sarl
mov
pop
or
js
daa
cli
pop
sub
mov
add
mov
xchg
add
je
pop
mov
aas
shlb
adc
sarb
jae
lea
jmp
aaa
sti
or
inc
inc
cmp
jbe
xchg
in
pop
call
mov
sub
jmp
mov
sbb
rolb
adc
in
jbe
adc
sub
mov
push
add
cwtl
jo
sbb
jp
std
fs
in
xchg
movsb
out
add
mov
jmp
xchg
or
xor
pop
call
call
jno
or
push
push
adc
add
imul
das
and
shl
adc
pusha
clc
addb
or
ret
add
xor
inc
sbb
push
pusha
sub
mov
repz
outsb
pop
mov
xchg
pop
add
rolb
rolb
insb
shl
adc
or
sbb
movsl
les
pop
add
inc
inc
add
mov
negb
push
repnz
push
inc
fcompl
xor
cmp
jne
popa
cmp
xchg
jge
or
sbb
lods
dec
lods
adc
or
and
hlt
xlat
shll
dec
inc
mov
cli
inc
loope
mov
cmpsb
ret
ja
mov
sbb
push
scas
add
movmskps
gs
push
je
jo
fdivrl
loopne
xchg
loopne
xchg
js
leave
mov
jmp
sbb
movsb
pop
push
sub
xchg
push
xchg
inc
sbb
loope
mov
or
call
or
lock
lret
pusha
mov
adcl
rcr
xchg
fstpl
fwait
in
adc
fwait
or
pushf
push
cmp
orb
sbb
inc
fadds
cmp
sbb
lods
cld
sub
push
test
xorl
xchg
mov
or
lock
mov
xor
adc
mov
inc
lcall
or
add
jne
dec
rol
daa
dec
xor
push
sub
push
add
repnz
xchg
or
daa
andl
adc
xor
cwtl
lea
lea
dec
jns
pop
shlb
ret
mov
add
or
roll
xor
push
cmp
es
lock
lahf
jmp
mov
sarl
or
jnp
cmp
and
nop
cli
xor
out
int3
andb
jg
cmp
push
mov
inc
xor
insl
xchg
jns
dec
dec
clc
jne
mov
mov
mov
cmp
dec
or
sub
lea
add
push
pop
cmp
stos
popa
movsb
push
shlb
xchg
adc
sub
xchg
sbb
data16
xchg
xor
hlt
hlt
jns
ret
jb
inc
pop
rcrb
ret
pop
pop
mov
adc
cmp
call
or
lret
mov
hlt
jne
push
js
cs
xor
adc
loopne
fnstcw
sbb
jne
mov
fcoml
inc
int
push
call
ret
add
or
pop
sbb
or
lock
xchg
pushl
cmp
jmp
cmp
xchg
ret
inc
adc
out
data16
xchg
jbe
or
xor
sar
je
mov
xchg
pop
add
cmp
push
mov
jmp
hlt
push
and
je
mov
sub
or
add
mov
mov
lea
mov
adc
leave
add
xor
mov
mov
cmp
adc
add
cmp
mov
pusha
mov
in
jge
push
daa
sahf
lea
arpl
loopne
aad
imul
or
add
mov
test
inc
cmpl
jne
cmp
inc
loope
push
cmp
adc
mov
outsb
jns
push
adc
dec
hlt
sti
mov
jae
adc
adc
xor
dec
pushf
fldl
loop
arpl
sub
das
push
jmp
mov
lea
push
add
inc
add
cs
ret
add
xor
lret
add
adc
gs
loopne
in
push
adcb
lods
push
cmpsl
lahf
addb
shll
data16
cltd
bound
dec
dec
lock
push
adc
mov
adc
dec
push
leave
mov
dec
add
mov
outsl
loopne
sub
push
mov
add
fcom
mov
sbb
mov
sarl
adc
mov
sbb
sbb
add
push
cli
adc
data16
xchg
xor
pop
push
cmpb
xchg
push
and
adc
scas
test
mov
cmp
mov
mov
push
aam
adc
and
mov
add
mul
seto
test
aam
pop
mov
enter
aaa
mov
adc
mov
push
or
jae
sarb
int3
mov
push
lahf
push
push
push
pop
fistl
mov
loop
xor
sbb
dec
dec
push
add
mov
jns
lea
mov
mov
xlat
movsl
inc
in
jbe
stos
jmp
aam
int3
dec
add
lret
imul
mov
dec
push
jmp
or
jbe
adc
das
xor
les
add
pop
dec
and
adc
mov
pop
sbb
adc
call
xor
mov
pop
jbe
shll
aaa
cmpsl
xchg
cmpsb
sbb
xchg
mov
add
push
jp
ss
insl
xchg
pop
or
pop
xchg
jo
push
aad
addb
jecxz
adc
inc
test
pop
mov
xchg
mov
push
add
andb
pushl
rorb
sarb
cli
outsb
test
lods
and
test
sarl
cmpb
shrb
pop
je
test
adc
lock
addb
jl
jmp
mov
add
sahf
stos
dec
mov
outsl
pop
jecxz
mov
add
mov
inc
mov
lods
mov
nop
pop
inc
xchg
push
je
push
clc
icebp
dec
mov
add
pop
insb
movsl
push
shrl
imul
or
jmp
ljmp
xchg
aad
popf
pop
js
cmp
xchg
inc
andb
add
fstpt
cmp
addr16
and
testl
jecxz
test
push
mov
lret
iret
cmc
clc
and
sbb
test
or
jb
call
add
pop
add
rcrb
aam
rorb
push
mov
js
je
out
xchg
scas
inc
pop
jp
hlt
lock
add
cmp
pusha
add
mov
dec
pusha
sub
aas
movsl
cld
xchg
aaa
push
or
iret
outsb
push
out
xchg
daa
dec
or
add
fldpi
push
cmp
mov
mov
mov
pusha
add
mov
aaa
daa
add
adc
sub
and
add
jne
dec
ror
rolb
or
inc
sbb
add
in
mov
xchg
dec
xor
or
cmpsl
jp
in
shlb
xchg
jmp
es
repnz
inc
pop
add
jo
jo
cmpsb
loopne
xor
sbb
sbb
mov
mov
or
test
add
negb
adc
jge
pop
popa
jbe
cmp
adc
xor
xchg
xchg
inc
sahf
sbb
adc
lcall
call
push
jnp
out
in
jl
cmp
jmp
clc
cmpsl
inc
bound
sbb
and
je
mov
inc
jl
cmp
jmp
adc
call
negl
or
pop
clc
add
clc
pop
shrl
jno
repnz
mov
roll
dec
mov
xor
div
jne
loop
add
sbb
or
out
ror
lcall
and
push
pusha
jns
js
mov
leave
outsl
push
cmp
adc
aas
xor
lea
or
rol
test
jmp
sbb
sbb
or
imul
pcmpeqw
fmul
jge
adc
cmp
mov
push
xchg
and
pop
shlb
push
add
jne
bound
push
push
jne
popa
xor
pop
push
and
dec
aas
sub
rorl
jmp
mov
mov
mov
mov
sbb
push
insb
in
cmpsl
test
adc
jnp
xchg
pushl
jmp
mov
aam
int3
pop
inc
jmp
outsl
adc
mov
add
daa
shrb
fsubl
js
xchg
mov
in
das
lcall
xchg
mov
rol
fsubrl
fcompl
int
dec
add
shlb
mov
mov
add
xlat
pop
inc
jmp
loop
lds
add
movsl
or
mov
xor
sub
jl
cmp
ds
jbe
fldt
test
pop
lea
lods
mov
lret
lea
push
cmpsl
fiadds
mov
add
mov
es
shrl
or
push
inc
cmpsb
and
imul
popf
xchg
sbb
xchg
pop
nop
jecxz
rclb
cmp
mov
push
cmp
inc
dec
int3
cmp
jae
sub
sub
xchg
loopne
adc
cs
adc
ljmp
push
mov
fsts
cmc
xchg
shlb
fucomi
clc
push
inc
mov
adc
aad
cmp
fstpt
add
dec
dec
int
js
idiv
inc
inc
mov
xor
aam
pop
mov
or
sti
mov
mov
pop
or
orb
jb
icebp
xor
adc
push
add
xchg
jle
sub
orl
loop
xchg
enter
int3
add
in
shrl
rolb
test
ja
xor
shl
cmp
adc
cld
pop
insl
enter
ret
addl
add
add
fnstsw
orb
add
imul
rcrl
test
pop
test
add
lds
sub
dec
xchg
loope
pop
je
mov
inc
les
hlt
jae
add
and
repz
rcll
adc
adc
push
lcall
lea
cmpsl
sar
lcallw
sbb
les
add
cmp
cld
xchg
sub
add
les
jp
subb
adc
xchg
jmp
notb
or
mov
xor
sbb
add
cltd
loop
test
out
in
pop
push
push
cld
mov
pop
adc
imul
ja
cmp
testb
push
add
pop
loop
mov
mov
fistpl
cmp
jne
cmpb
ret
push
jae
lods
adcl
push
sub
sbb
jp
mov
xchg
adc
fildll
mov
add
out
insb
add
or
or
ret
repnz
rcll
lahf
inc
sbb
mov
mov
cmp
test
push
shlb
fstpl
cmp
jae
inc
jmp
push
or
mov
mov
and
movb
addb
mov
outsb
sub
inc
pop
dec
fcom
sub
mov
jbe
push
add
lahf
xchg
xchg
ror
int
pop
shrb
add
mov
sbb
fiaddl
push
push
es
pop
add
mov
test
bound
pop
pusha
in
cmp
lret
or
shl
or
add
jmp
adc
add
rcrb
push
pop
sbbb
pop
push
dec
pop
xchg
mov
mov
in
pop
pop
aaa
adc
and
inc
or
add
or
or
xchg
test
std
arpl
mov
cmpsb
lcall
pop
nop
or
les
in
cmp
add
cld
inc
mov
add
je
mov
call
adc
ja
cmpb
push
push
or
add
mov
lock
sbb
dec
rorb
mov
js
cmp
jb
inc
pushf
cmpb
cmp
pusha
push
fadds
cli
stos
or
data16
xlat
cmp
sub
push
inc
or
add
mov
jbe
push
mov
clc
add
aam
push
std
jnp
sbb
into
and
add
mov
jmp
mov
adc
shlb
lea
cli
ja
cmpb
add
push
imul
ret
push
xor
add
sbb
dec
xor
sbb
aad
jle
mov
cs
or
sub
cmp
xchg
push
addr16
jo
push
rsm
lret
pop
cs
adc
pop
nop
push
push
les
popf
pop
in
inc
cmc
lods
add
sti
xchg
xor
mov
adc
sbb
movsb
xor
add
lret
jns
pop
adc
clc
dec
decb
jmp
or
cmpsb
jno
push
cmpsb
int
mov
test
jge
mov
pop
sub
cmp
ja
fs
xorb
ret
aas
ret
jmp
mov
shl
dec
cmp
lea
jl
mov
and
sub
xor
jns
mov
stc
shrl
ret
jne
adc
add
loopne
pop
dec
mov
cmc
rcr
dec
jp
add
sbb
popa
add
ja
adc
call
add
fldt
pop
decb
dec
mov
dec
or
xor
stos
loopne
or
cmp
jbe
pop
and
add
push
rorl
add
fstl
je
into
adc
or
or
or
dec
sub
bound
lock
sbb
or
or
add
mov
sub
sub
sar
movl
pop
dec
std
push
stc
cld
push
mov
push
popf
dec
mov
sub
aam
add
fdivr
ss
add
ret
and
or
lods
addr16
cli
in
test
inc
in
add
xlat
cmp
cmpb
pushl
push
mov
or
addl
out
test
and
xor
lock
mov
xor
mov
loopne
pop
add
sbb
fcompl
jl
in
mov
pop
inc
repnz
add
hlt
adc
aas
xor
mov
mov
cmp
aam
push
ret
adc
inc
dec
or
sarb
js
jne
and
loopne
pop
je
sbbl
cmpsl
daa
or
int3
aam
fwait
push
add
add
add
cmp
mov
adc
cmpsl
jmp
ror
xor
cmpsb
mov
shlb
mov
pop
xchg
mov
pop
int3
insl
xchg
adc
adc
xchg
pop
push
cld
test
rorl
ss
fs
jo
icebp
jb
imul
dec
xor
cmpb
pop
iret
in
fistpll
sub
jl
out
les
out
fnstsw
sarb
lock
adc
dec
test
jmp
dec
mov
call
fstpt
aaa
push
cmp
push
movsl
into
call
xchg
xor
add
mov
inc
adc
push
pop
sbb
add
push
mov
xor
xchg
or
inc
jge
test
dec
and
test
push
push
xchg
je
stc
add
fs
insl
cs
push
push
pop
cld
cmp
mov
enter
mov
cmp
lret
das
xor
fs
dec
hlt
sub
stos
in
or
sbb
jns
dec
shrb
inc
mov
icebp
xor
cld
push
ja
or
and
or
lahf
adc
jmp
das
icebp
adc
pop
test
add
fsubl
out
das
ss
ret
push
push
adc
ja
push
jae
sbb
call
push
add
pop
insb
jg
add
sarb
ret
pop
jne
pop
je
mov
inc
flds
xchg
clc
add
dec
mov
adc
jnp
mov
mov
int
outsb
aad
fmuls
out
loop
pop
push
js
dec
out
pushl
xchg
rorb
fidivl
jmp
or
dec
jbe
sbb
ja
or
cmpsl
pop
adc
jae
imul
sub
sti
pop
pop
lret
call
add
iret
and
shrb
call
cmp
lcall
mov
call
add
xchg
mov
adc
and
lods
imul
imul
mov
dec
mov
cwtl
mov
sbb
sbb
push
xor
add
es
jb
jbe
les
lock
mov
mov
jp
add
ret
scas
fcoml
loopne
xor
mov
es
sub
and
lds
add
jp
int3
xor
jne
pop
mov
mov
pop
xchg
push
push
push
int3
push
cmc
div
nop
lock
sbb
adc
push
or
dec
mov
int3
mov
pop
mov
leave
inc
push
push
or
mov
ficoms
cmpl
adc
testb
dec
es
jbe
inc
in
clc
rclb
inc
dec
push
inc
jp
sub
testl
add
and
addb
xchg
les
mov
sbb
cmp
mov
in
adc
lcall
mov
ret
add
pop
jbe
in
add
call
addr16
bound
test
lock
fldcw
lret
mov
bound
xchg
out
test
adc
sub
mov
xchg
outsl
adc
and
or
add
jmp
mov
mov
rcrl
icebp
push
adc
sbb
std
jae
add
push
test
ret
or
pop
add
jge
push
std
imul
and
cmp
pop
mov
push
push
or
cmp
adc
sbb
fdivr
sahf
or
fimull
xor
cmp
fcom
ror
dec
mov
sbb
leave
mov
jns
sbb
lods
xchg
push
adc
mov
nop
jbe
out
daa
xchg
test
movsb
adc
inc
fwait
xchg
xor
jmp
das
or
sub
jne
call
mov
decb
pop
jo
test
lea
push
cli
sub
ds
fisubs
jge
notl
or
push
pusha
adc
movsl
lea
repz
nop
push
ret
cld
xor
or
lar
sub
xor
and
push
jae
jnp
mov
cld
add
adc
push
or
xor
add
ret
or
cs
ret
push
cmp
in
xor
cmp
add
mov
pop
xchg
test
mov
dec
push
call
aam
insb
mov
fidivs
and
call
cwtl
sbb
push
test
sti
sub
nop
iret
mov
or
pop
pop
mov
aaa
loopne
mov
js
and
pop
lods
push
clc
pop
adc
test
out
mov
push
xchg
es
clc
push
push
sbb
pop
call
aaa
cltd
inc
or
sarl
test
cmp
fisttpl
rolb
subl
push
add
add
icebp
push
pop
test
push
xchg
or
adc
mov
stc
fsubl
pop
adc
xchg
outsl
xchg
jne
xor
sub
dec
data16
loope
xor
cmp
jbe
ds
js
test
pop
fdiv
inc
inc
push
xchg
pop
inc
test
mov
mov
movsb
inc
add
andl
mov
cmp
call
loopne
or
or
push
mov
lock
push
ret
inc
push
jb
cmc
or
mov
add
add
dec
sbb
aas
jne
xor
addb
xor
in
adc
lret
adc
add
negb
test
xchg
mov
mov
lds
mov
pop
sub
faddl
xchg
jbe
cltd
add
iret
sub
xor
mov
out
inc
fsubrs
push
fs
push
sub
mov
mov
dec
movsl
pop
jmp
mov
mov
xor
sbb
and
fmuls
xor
into
je
jge
xchg
je
xor
inc
mov
push
orb
pop
inc
lcall
outsl
jne
push
push
lahf
add
jmp
test
mov
das
aad
insl
fstpt
adc
rorl
movsl
add
pop
lds
loope
mov
mov
ljmp
repz
mov
cmp
mov
sbbb
pop
cmp
push
cmp
and
adc
cli
and
inc
sub
cmc
ss
add
or
in
sbb
ljmp
cmp
test
ljmp
shrb
inc
add
rolb
mov
mov
add
push
push
mov
push
inc
rolb
orl
nop
mov
add
je,pn
int3
outsb
add
sbb
mov
add
inc
add
cmp
jmp
sti
mov
pop
mov
pop
iret
insl
jge
add
push
mov
test
mov
sub
fs
add
rorb
mov
incb
adc
xor
rcll
mov
inc
push
and
pop
rol
and
add
in
add
or
pop
fdiv
cmpl
imul
add
pusha
push
in
das
mov
mov
push
mov
and
rep
mov
lea
mov
cmc
mov
push
enter
lret
pop
add
mov
adc
arpl
xchg
push
aaa
or
push
and
sbb
mov
mov
mov
mov
movsl
cmp
push
adc
outsl
mov
js
or
loopne
lahf
sbb
mov
mov
push
outsl
outsl
aad
mov
stos
add
hlt
inc
jne
dec
jmp
pop
adc
or
pop
mov
int
lret
or
sbb
sti
add
mov
mov
mov
mov
inc
adc
xor
and
add
or
fsubl
popf
sbb
movsl
xchg
mov
fsts
sar
jecxz
add
add
je
or
out
test
sub
mov
xchg
xchg
popa
dec
mov
nop
je
fidivl
sub
inc
push
jb
sub
test
jl
add
jl
setp
scas
inc
inc
mov
jecxz
aas
xchg
subb
sbb
jo
les
outsl
jecxz
ja
adc
es
adc
jg
lcall
push
pop
mov
mov
inc
outsb
notl
adc
repnz
push
and
xchg
sti
es
xor
jb
jne
ret
sub
sub
lcall
in
les
mov
and
fisubrs
mov
stc
pop
flds
cmp
push
imul
mov
fildl
jb
lcall
cwtl
into
mov
jno
mov
add
xchg
push
mov
push
stc
scas
rcrl
adc
adc
dec
in
add
add
sub
xchg
xchg
add
test
or
movsb
jb
cmp
or
xchg
lret
inc
or
or
dec
push
fs
inc
push
adc
push
pop
cli
xlat
jmp
mull
rcrl
adc
pop
mov
daa
dec
mov
pop
int3
adc
in
rcr
mov
mov
cmpsb
dec
mov
or
sahf
fsubrs
dec
aam
rcrb
or
pop
loopne
inc
pusha
add
pop
mov
lret
sbb
loopne
adc
add
cmp
jg
xor
lock
or
mov
adcl
mov
ret
into
mov
sbb
enter
add
and
push
jo
in
or
xchg
jbe
adc
xorb
nop
mov
jnp
fs
nop
inc
push
cmp
inc
push
cmp
cmp
push
cmp
nop
sub
and
cmp
nop
inc
adc
or
mov
push
or
adc
lds
add
and
lea
popa
mov
sbb
inc
xor
sub
xchg
fldl
fstpt
lahf
ret
mov
dec
push
and
ret
jmp
daa
cmc
xorb
iret
leave
loop
cltd
sub
jmp
lea
adc
mov
rolb
push
and
mov
stos
jne
popf
and
sub
jle
or
cld
pop
sub
xchg
subl
add
add
ljmp
push
and
sub
inc
add
push
push
sbb
cmp
or
lret
or
and
leave
mov
xchg
pop
sbb
outsl
rorb
push
sbb
cmp
ja
mov
jge
adc
mov
insb
or
or
or
out
orl
push
in
push
push
sbb
or
mov
cli
ljmp
pop
mov
dec
and
inc
or
jmp
lea
sub
rcrb
test
nop
add
jo
aad
xchg
add
cmp
mov
push
cmpsl
ljmp
mov
push
push
pop
cmp
pop
add
push
or
nop
dec
or
push
jne
mov
inc
or
add
cwtl
push
orl
rcrl
add
mov
dec
insb
rcr
adc
jl
jns
or
push
mov
mov
and
cwtl
fwait
and
aam
pop
insb
sbb
cmc
or
mov
xchg
pop
xchg
add
cwtl
shlb
add
mov
push
add
fmull
ret
cmp
and
loop
add
cmp
push
cmp
push
loopne
push
push
mov
movsb
cmp
mov
mov
sub
inc
lock
sub
push
enter
adc
push
jmp
add
sbb
push
or
pop
xchg
add
loop
int3
loop
inc
mov
pop
sbb
subl
mov
repnz
test
std
pop
inc
and
orb
je
push
push
ficoml
sub
mov
jmp
les
xlat
dec
mov
dec
jae
insb
or
dec
fnstenv
cmp
push
insb
leave
xchg
cld
popf
inc
adc
icebp
inc
jo
stc
xor
lods
mov
xchg
fnstsw
jmp
adc
mov
jne
adc
pop
in
rol
pop
add
adc
mov
orl
jo
xchg
pusha
repnz
in
cmpsl
and
popa
and
cld
mov
push
add
xchg
sti
fdivr
je
adc
pop
pop
jne
cmp
jae
push
imul
jmp
mov
add
test
es
leave
imul
cmpsl
cmp
and
sbb
bound
or
push
mov
pop
inc
test
ds
mov
lret
lret
sbb
test
decl
jle
je
aam
sub
jo
repz
dec
mov
mov
dec
add
add
int
pop
pop
push
addb
and
lods
push
pop
xor
add
and
push
ss
or
jge
jmp
addl
in
mov
inc
outsb
mov
je
xchg
mov
les
imul
out
fiaddl
push
into
push
mov
inc
inc
jg
loope
mov
jmp
jg
clc
out
pop
shrb
cmp
hlt
cltd
mov
pusha
push
cmpsl
and
movl
cmpb
into
repz
add
xchg
loope
aaa
adc
mov
js
xor
out
lock
dec
daa
ljmp
xorb
xchg
mov
sub
aas
jp
lcall
sbb
mov
mov
add
lret
rcrl
add
adc
or
inc
test
push
ja
outsb
cmp
and
lahf
push
xchg
addl
test
push
mov
add
stc
push
pop
test
sub
rcl
sbb
andl
push
call
icebp
push
stos
call
adc
mov
loopne
pop
pop
xlat
xor
ss
adc
jl
and
test
test
xchg
cmpsl
or
pop
push
ret
rorb
test
sarb
xchg
cmpb
test
adc
adc
or
hlt
jne
push
xchg
nop
sbb
repz
dec
cmp
xchg
es
xchg
add
jmp
rsqrtps
int3
or
pushl
pop
in
js
push
leave
popaw
xchg
rcrb
ljmp
dec
in
adc
nop
sub
adc
in
and
sti
fadds
jl
dec
repz
mov
jno
test
push
mov
mov
scas
lock
sbb
or
pusha
push
sbb
scas
pushf
cmp
and
mov
movb
mov
pop
jmp
jo
popa
xor
pop
es
ja
dec
or
xchg
xor
push
fwait
mov
inc
push
jnp
orl
mov
stc
inc
jo
adc
js
push
jp
mov
int
jbe
nop
nop
and
shll
movsb
cmc
mov
popf
or
dec
mov
xchg
in
mov
lock
jg
lret
add
sbb
sub
cltd
stc
jnp
jle
add
mov
shll
and
sub
scas
lods
in
xlat
cmpl
sub
scas
negl
push
push
test
testl
addr16
nop
fwait
add
mov
or
lods
inc
icebp
mov
push
mov
popl
mov
add
mov
cld
stc
lcall
or
cmpsl
loope
ret
and
lock
lahf
aaa
mov
mov
add
sub
cmp
inc
test
js
shll
divb
mov
or
repz
inc
arpl
fnstenv
or
inc
xor
xchg
mov
in
jbe
push
push
or
rolb
mov
xor
imul
xchg
lock
xor
and
rolb
cmp
mov
mov
test
xor
loopne
mov
adc
push
out
in
or
inc
das
or
cld
test
xchg
adc
test
aam
add
enter
mov
loopne
sub
xchg
and
or
pop
lock
iret
pop
mov
jno
loopne
xchg
clc
lods
add
jbe
xorb
push
pop
inc
inc
sbb
int3
mov
jecxz
mov
jne
add
rolb
mov
sti
pop
cwtl
push
push
insb
int
push
addl
inc
jb
repz
movsb
or
enter
push
push
adc
nop
add
mov
push
xchg
and
pop
sub
jl
jl
push
mov
nop
dec
xchg
out
cltd
ret
jle
mov
sbb
stc
mov
out
es
repz
mov
mov
fs
adc
jmp
add
sub
shll
sub
iret
mov
add
mov
push
enter
jbe
mov
fmul
jnp
push
outsl
imul
movsl
outsb
arpl
mov
add
mov
rorb
add
jp
lahf
icebp
xor
sti
mov
leave
inc
inc
sar
cli
rcll
fs
int
adc
jbe
mov
test
enter
pop
into
in
test
lret
popf
sbb
dec
jl
mov
pusha
in
fcmovnb
lea
scas
fisubs
sbb
rol
fs
and
aad
add
les
in
mov
push
iret
into
fmull
rcl
adc
jmp
loope,pn
aam
pushf
popf
sub
int3
sub
cmp
jle
push
movsb
loopne
push
cmpsl
cmp
sarb
cmpsb
adc
jo
rolb
vpaddsw
inc
cmp
mov
ds
ret
add
lret
inc
jecxz
cltd
push
pop
lret
rolb
mov
cld
add
add
pop
jl
adc
jle
and
push
push
mov
or
jmp
adc
adc
mov
push
loop
addr16
adc
mov
pop
pop
shlb
sar
loope
jg
pop
sbb
or
sub
lea
fidivrl
fidivrs
xchg
mov
adcl
jmp
mov
add
pop
and
mov
lock
push
je
dec
jne
rorl
sbb
clc
adc
push
xchg
jbe
adc
add
push
and
sbb
mov
mull
ja
and
sbbb
push
jmp
cmp
mov
shlb
sub
daa
int
out
pop
xor
xor
icebp
inc
daa
or
dec
mov
pusha
or
cmp
mov
xchg
push
sahf
or
aaa
js
push
or
fldl
add
or
and
dec
inc
cmp
pop
sbb
dec
scas
push
rorb
bound
pop
dec
movsl
sub
sub
add
jnp
mov
addr16
ja
push
fisttpll
sub
xor
add
sub
lock
inc
or
inc
mov
cmp
jle
les
mov
add
inc
test
lcall
inc
xor
or
mov
xor
push
mov
jbe
int3
pusha
shrl
das
test
dec
push
and
sub
jno
pop
cli
sub
ret
dec
or
add
push
mov
into
pop
into
ret
inc
stc
add
xor
or
shlb
mov
fwait
cld
sbbl
inc
sub
sti
je
mov
sbb
or
pushf
xor
iret
mov
dec
inc
pop
and
and
jp
stos
jns
mov
mov
pushf
inc
in
gs
lahf
jne
pop
mov
and
and
jno
sti
dec
sub
int
enter
xor
xor
sarl
push
push
pop
cmp
daa
xchg
pop
add
in
add
je
or
jmp
jl
into
mov
or
xchg
xchg
test
or
xchg
dec
imul
push
inc
and
xchg
ss
lret
adc
xor
sbb
jmp
xchg
sub
sub
int
or
movb
mov
mov
dec
pop
cs
xchg
rolb
push
lods
adc
addb
fisubrl
push
cli
inc
out
movsb
inc
add
loopne
dec
or
and
decl
or
mov
jmp
cmp
jae
addb
out
std
inc
out
mov
dec
inc
in
andl
dec
jns
dec
add
in
pop
mov
xchg
jb
xlat
clc
cs
ficompl
into
cmp
adcb
js
pop
shl
push
xchg
cltd
mov
inc
dec
ficoml
pop
js
mov
test
sbb
sbb
and
adc
movups
out
adc
out
push
pop
or
rcrl
xchg
mov
test
fwait
mov
sbb
inc
movsl
mov
shl
mov
js
mov
mov
pop
sbb
cltd
sub
jmp
testl
or
mov
jbe
sahf
rolb
mov
jne
add
xor
push
jbe
or
sar
test
pop
xor
mov
ffreep
xchg
cmpl
mov
stos
nop
xchg
scas
xor
testl
test
std
or
enter
xor
fwait
mov
xchg
inc
loopne
xor
xor
add
hlt
dec
mov
lea
cmp
js
xor
mov
or
jne
push
add
fisubrl
mov
in
fs
aaa
rclb
push
add
lock
inc
daa
mov
cmpb
xor
push
xlat
lock
jmp
push
enter
cwtl
xlat
jns
mov
and
sbb
add
fsubr
cmpb
xchg
inc
sarb
push
scas
jge
pusha
jecxz
or
jle
jl
loopne
cmp
push
jmp
cmp
adc
push
lods
aam
fiadds
aaa
mov
cli
add
jae
daa
fwait
lcall
jl
adc
dec
loopne
cmp
sbb
dec
pop
pop
call
jbe
lock
fdivrl
add
adc
loop
xor
cld
pop
js
jecxz
xor
jp
mov
jno
inc
push
mov
insb
bound
jle
mov
call
es
pop
jne
loopne
add
add
sub
jne
cmpl
bound
test
or
push
pop
pushf
sub
test
add
test
xchg
iret
adcl
pushf
das
sbb
sbb
repnz
pop
dec
or
adc
cwtl
aas
inc
xor
xor
and
out
in
adc
mov
insb
inc
lods
push
sahf
dec
mov
add
aas
and
aam
lods
or
push
enter
pusha
inc
ret
sbb
shrl
cmp
push
test
fiadds
imul
arpl
fcomps
cmp
cmp
xor
inc
add
cmp
and
add
mov
cmp
call
jb
add
bound
or
aas
push
ret
rcrl
cmp
push
or
or
fdivs
pop
jle
pusha
in
sbb
sbb
sarl
jl
mov
mov
push
xchg
inc
ds
sbb
adc
shrb
mov
or
and
dec
enter
push
sbb
inc
push
cltd
mov
sbb
sbb
or
arpl
dec
shlb
imul
das
cwtl
and
or
mov
and
add
cld
lret
add
cmp
nop
enter
sub
les
and
push
rcrb
les
xor
cmp
xor
jp
and
sub
cmp
sub
dec
das
popf
add
sbb
pop
test
outsb
lea
push
mov
leave
daa
push
ljmp
adc
cmp
daa
add
fildl
adc
out
xchg
sbb
das
dec
sub
loope
je
sub
sub
sub
pop
lea
test
and
add
jbe
or
push
dec
sub
fs
add
movsl
movsl
pop
sti
push
cmpl
sbbb
mov
mov
pusha
pop
mov
sbb
mov
pop
push
cmovno
pop
pop
out
inc
leave
push
fists
dec
push
push
cmp
and
daa
inc
movsl
testb
jae
testb
inc
xor
cmpl
cmpb
lods
les
push
andl
sub
fiadds
add
pop
and
sbb
addr16
or
test
dec
mov
cmp
leave
mov
ja
push
xor
dec
add
fbstp
je
push
or
lock
fs
es
xor
pop
mov
stos
popa
out
and
and
outsl
inc
pop
arpl
xchg
es
mov
mov
and
mov
or
dec
filds
daa
hlt
sub
sbb
xchg
dec
xor
adc
mov
or
outsl
cmpl
lret
in
bound
push
ror
or
add
push
mov
xchg
push
lret
or
and
dec
addb
cmp
sub
xchg
sbb
inc
xor
imul
pop
hlt
es
sbb
fisttps
sbb
cmp
pop
sbb
or
adc
xor
mov
xor
mov
sbb
sbb
adc
in
sbb
mov
shrl
cmp
add
rcrb
mov
sub
jns
sbb
dec
lods
nop
adc
mov
roll
test
push
fsubl
xchg
xor
lea
aam
adc
push
adc
jmp
sbb
mov
sub
xorl
mov
sbbl
sbb
test
push
into
lods
lock
sbb
mov
and
xchg
js
xchg
jnp
mov
sub
ret
aam
cli
pop
inc
xchg
push
jne
push
add
dec
jl
in
popa
imul
into
dec
js
adc
das
or
jne
inc
cmp
pop
test
loope
add
fwait
xchg
fadd
or
sub
sub
mov
es
in
add
ret
xchg
das
js
dec
scas
fwait
dec
push
fmuls
gs
sub
push
pop
mov
sahf
mov
dec
or
mov
pop
test
xchg
lds
ret
ja
test
jo
or
jns
and
dec
lods
repz
dec
xchg
icebp
pop
mov
stos
push
xchg
and
and
push
xchg
ds
dec
sarl
lock
inc
inc
ss
popf
ljmp
cmp
sbb
xor
push
lret
jbe
adc
dec
or
cmp
mov
or
add
sbb
sbb
filds
in
ret
mov
push
rorl
sbbb
pop
or
sbb
sub
cmp
and
fstl
push
cmp
faddl
inc
rcrl
popf
rclb
sub
mov
out
sahf
add
adc
or
fs
adc
pop
inc
lock
or
fs
adc
and
dec
cwtl
rclb
sbb
enter
pop
jl
mov
mov
rcrb
jns
loopne
test
fcompl
cmp
pop
repz
inc
sub
mov
sbb
sarl
mov
push
lcall
ret
push
sar
xor
sbb
and
mov
stc
mov
or
mov
pop
enter
push
enter
push
push
mov
pop
les
cmp
je
cmp
xor
les
fs
test
cs
push
and
fwait
orb
imul
es
xor
leave
xor
cmpl
mov
add
movsl
sbb
xchg
cmp
sub
mov
or
and
es
xor
pop
sbb
js
cmp
jmp
pop
mov
stos
push
sbbl
push
cmp
adc
sub
insb
outsl
xchg
xor
jmp
ja
mov
aaa
pop
cmp
popa
and
dec
pop
sbb
lock
xorl
insl
sub
int
les
adc
ss
or
or
mov
int
dec
stos
les
inc
popf
push
sbb
adc
enter
and
xchg
jae
pusha
inc
test
in
mov
or
cwtl
imul
add
add
sbb
les
mov
les
add
add
mov
cmp
bound
xchg
and
sbb
cmp
rorb
pusha
popa
nop
aaa
sub
and
pop
mov
aas
sub
mov
jge
ror
dec
test
xor
lock
imul
push
push
clc
add
into
cmp
lock
sbb
pop
jb
subl
jge
out
ja
cwtl
lods
aam
inc
xor
xor
sub
pop
lea
dec
dec
push
aaa
pop
inc
and
jbe
push
and
sub
add
and
mov
hlt
mov
cmp
xor
dec
dec
adc
dec
xor
rorl
or
xor
push
test
push
cwtl
pushf
or
sbb
cmp
pop
dec
jo
movsl
xor
cmpsl
inc
enter
punpckhbw
mov
and
dec
push
push
lahf
jge
push
sub
cli
outsb
iret
xor
sub
adc
repnz
aam
push
adc
dec
ss
sbb
push
je
ljmp
sbb
sbb
push
cmp
jbe
js
popa
sbb
inc
cld
pusha
dec
mov
aam
add
add
pop
xor
push
cmp
and
push
enter
inc
jo
shl
add
adc
and
out
add
enter
subb
sub
fs
test
mov
xchg
push
fistpl
mov
loopne
mov
mov
stc
es
add
lcall
leave
out
xlat
popa
and
dec
pop
or
divb
fdivl
lahf
inc
cmp
test
or
or
or
enter
xchg
xor
cmpw
dec
pop
and
inc
shrl
inc
inc
sbb
inc
jo
add
or
xchg
call
sub
movsl
gs
aas
sbb
cmp
test
xor
icebp
or
sbb
loope
je
xor
movsb
sbb
or
add
pop
icebp
inc
into
and
jp
stos
and
cmp
jo
arpl
cs
das
mov
in
xchg
adc
dec
dec
or
and
and
inc
pop
xor
in
ss
mov
addl
sahf
stc
inc
push
dec
push
cld
mov
xor
dec
popa
popf
inc
lcall
inc
inc
lret
ret
dec
test
push
sub
pushf
pushl
and
push
sbb
rorl
inc
pop
sbb
dec
pushf
and
inc
std
popf
test
cmp
cld
xor
inc
test
jne
and
popf
jae
lock
aaa
add
cmp
dec
in
in
clc
pop
push
add
push
pushl
aaa
pushl
call
in
sub
pop
xchg
dec
daa
nop
xor
and
sbb
cmp
xor
sbb
mov
jmp
sub
and
nop
pminsw
lock
ljmp
stc
out
or
add
or
adc
enter
push
sbb
pop
shlb
incb
xchg
and
adc
inc
push
mov
or
inc
and
xchg
sahf
and
inc
inc
in
rclb
or
daa
js
les
incl
add
jno
inc
aas
mov
ss
pushl
loopne
rol
xor
or
cmp
pusha
sbb
adc
mov
or
sbb
mov
lods
jp
xchg
les
or
ficomps
jmp
daa
adc
nop
sub
push
mov
jge
push
xchg
in
test
test
test
test
iret
es
push
cmp
mov
fwait
add
jno
add
add
or
int
cld
xor
xchg
movsb
add
mov
xchg
sbb
cmp
je
pop
sub
pusha
sarb
setnp
lret
pop
mov
fwait
and
addr16
mov
push
jg
jecxz
and
xchg
cmp
lcall
xchg
jo
dec
xchg
pop
repnz
mov
inc
sbb
pop
xchg
in
sbb
xor
jne
lods
rcrb
sbb
or
cmp
pop
dec
faddp
pop
fists
and
and
mov
test
leave
and
and
and
les
in
loopne
pop
daa
in
stc
cmp
and
mov
cltd
aad
js
daa
test
iret
es
mov
pop
push
popf
out
ja
push
enter
in
add
and
mov
call
inc
push
and
rclb
dec
mov
lods
cmp
sub
mov
fwait
cmp
dec
push
inc
loopne
add
mov
mul
int
stc
mov
inc
dec
push
push
adc
gs
xchg
and
adc
dec
pop
jno
outsb
cmp
sub
mov
add
xchg
xchg
insb
push
sub
push
test
sbbl
fnsave
sub
cmpsb
push
push
pop
xor
adc
cmp
aas
fs
aad
lds
leave
sub
aaa
sub
daa
loope
popa
inc
arpl
pop
test
xor
pop
jb
es
xor
das
icebp
mov
or
outsl
mov
xchg
push
pusha
mov
cmp
adc
jp
inc
fidivl
popa
daa
mov
cmp
andb
xchg
pop
repnz
mov
sbb
inc
cltd
inc
cs
pop
in
or
adc
mov
gs
adc
xchg
push
shll
xchg
xor
jo
cmp
dec
inc
popa
inc
jg
adc
mov
xchg
rcrl
mov
pop
cld
adc
push
adc
sub
out
dec
adcl
sbb
inc
movsl
leave
xorb
mov
push
daa
push
adc
test
push
stos
dec
andl
cmp
outsl
mov
leave
cmp
mov
ret
push
jg
pop
imul
nop
sub
sub
cmp
pop
add
push
imul
jle
stos
mov
inc
das
sub
and
mov
xchg
sub
and
adc
sub
aas
test
int
mov
fs
cmp
roll
ja
outsb
mov
lods
inc
adc
mov
xchg
add
jbe
inc
lahf
aaa
xchg
add
xor
idiv
xorb
xchg
movsb
add
adc
xor
sub
test
nop
xor
add
dec
ret
xor
mov
jmp
adc
inc
push
nop
mov
or
push
aaa
cmp
sbbl
test
adc
dec
xor
pusha
pop
cmc
popf
push
mov
jle
dec
xchg
push
pushf
jae
clc
xchg
lea
push
mov
jo
xchg
out
push
call
jge
cwtl
das
mov
pop
jmp
test
jl
cmp
and
ss
negb
jnp
and
jne
cmpsb
dec
push
lods
cmp
icebp
in
int
mov
nop
addb
jmp
aam
inc
fwait
call
and
pop
xlat
mov
jae
pop
cmpl
popa
es
sub
mov
inc
jnp
pop
xor
and
or
cmpsb
jae
sti
push
sbb
push
push
jne
pop
xor
jmp
adc
sub
push
jne
js
or
push
jl
aam
sub
or
pusha
pop
movsl
inc
xchg
xor
sbb
push
xor
stos
rcll
jecxz
pushw
or
inc
daa
or
cmp
lea
mov
daa
push
adcb
adc
call
add
inc
je
lea
cmp
pop
repz
mov
insl
pop
fmuls
mov
aam
movsb
popa
mov
fsub
adc
adc
jg
add
add
fcoms
or
push
sub
xlat
addb
pop
add
call
pop
call
xor
dec
fsubr
adc
fcomps
ljmp
inc
sbb
movsl
pop
cmp
repz
mov
sbb
insl
mov
dec
pop
add
push
pop
and
jp
movsb
shrb
mov
mov
and
enter
test
pushf
adc
shll
and
push
sbb
xor
or
mov
lcall
addb
push
cmp
dec
loopne
or
jo
mov
sarb
sub
ficoml
and
xchg
mov
and
inc
ret
lds
mov
std
mov
or
jne
ret
mov
ret
adc
fdivl
fs
xor
aad
lcall
and
mov
imulb
outsb
movl
cltd
incl
dec
cmp
mov
add
or
sahf
test
inc
or
imul
aam
mov
jae
add
sbb
int
fadd
push
xchg
sub
pop
mov
fstps
dec
sub
lcall
pushf
mov
fimull
sbb
adc
and
xor
fildll
lock
pop
jae
mov
mov
mov
mov
sub
dec
jp
test
fs
inc
fisubs
je
cmp
sbb
pushf
mov
adcl
xor
and
add
scas
inc
xor
inc
jg
popa
adc
cmp
push
shrb
mov
fst
push
inc
outsb
xor
insb
sub
push
sbb
jns
xchg
sahf
fildl
and
movsl
cmc
cmp
add
mov
dec
dec
leave
and
push
aas
aaa
subl
add
push
subb
mov
pushf
shlb
dec
andl
sub
movsb
or
imul
mov
and
mov
add
lea
push
movsb
fstl
scas
jp
ja
xor
cmp
push
lret
or
add
cmpsl
daa
inc
addr16
movl
lods
nop
xor
mov
shlb
xor
movl
xor
and
and
dec
rcrb
mov
pushf
lock
lcall
mov
enter
pop
ss
loopne
add
cs
add
std
jb
add
repnz
mov
push
data16
cmpsb
es
or
add
cmp
mov
aad
mov
pop
add
sarb
mov
lcall
cmp
fwait
mov
push
rcrb
dec
cmp
mov
pop
punpckhdq
out
sbb
mov
mov
decl
adc
je
cmp
je
cmp
je
cmp
je
push
gs
push
sahf
aas
cmp
pop
int
adc
movhps
inc
outsb
xchg
push
sbb
add
aaa
loope
jno
sbb
clc
lcall
out
mov
mov
mov
mov
lods
push
mov
mov
stos
mov
lock
cmpsl
mov
inc
cld
inc
cvtpi2ps
test
or
pop
shll
outsb
or
mov
dec
jb
adc
push
add
push
je
test
scas
and
bound
adc
push
les
aam
leave
inc
push
inc
pop
in
adc
clc
or
sbb
adc
add
imul
fcomps
icebp
sbb
sbb
sbbl
fmuls
add
jb
enter
les
mov
je
test
fldl
push
push
icebp
call
add
sbb
jne
jecxz
push
add
sbb
imul
push
in
sub
adc
sub
test
inc
dec
jp
and
xchg
mov
stc
xor
pop
mov
add
inc
adc
aas
xor
sub
js
fistpll
fwait
rcrl
cmp
fdivs
dec
or
roll
dec
cmp
mov
fsubrs
nop
xchg
xchg
lods
pop
inc
fsubp
and
lea
inc
mov
mov
sarb
inc
xchg
imul
test
test
xchg
xchg
repz
hlt
daa
inc
mov
clc
lea
pop
sub
andl
mov
fs
or
or
aaa
sub
or
xorl
loope
mov
mov
lds
imul
dec
mov
cmpb
cmc
sub
icebp
popa
js
and
pop
push
bound
add
pop
push
shll
adc
push
mov
cmp
pop
enter
xchg
roll
sbb
push
mov
lods
aam
xchg
push
push
push
arpl
aam
inc
lret
mov
inc
cs
inc
das
jge
leave
enter
hlt
inc
mov
xor
cmp
xor
aas
fdivs
mov
lret
in
add
adc
into
js
or
push
pushl
push
push
andl
xor
fistps
lods
fcoms
xchg
xor
pusha
xor
mov
out
xor
jbe
add
inc
hlt
pop
cwtl
repz
xor
add
push
sub
out
mov
or
repz
mov
rcl
out
je
out
push
sbb
sub
mov
ds
fisubrl
lret
jbe
xor
xor
loop
test
adc
pop
lock
mov
jb
ljmp
push
mov
pop
movsb
xlat
in
adc
inc
out
fistl
out
add
jne
imul
loope
sub
mov
sub
dec
add
out
mov
ret
and
cltd
addr16
lea
xor
or
test
inc
fistpll
jle
je
movsb
push
and
sub
adc
data16
ret
push
push
fwait
push
adc
es
mov
add
push
xchg
mov
mov
mov
test
xchg
adc
cwtl
fdivs
ret
push
cs
push
movsb
mov
roll
int3
or
mov
adc
jnp
loope
cmpsl
xor
and
and
mov
or
pop
push
sub
jne
or
pop
pop
nop
mov
push
push
push
or
inc
push
les
in
inc
cmp
dec
mov
popf
repz
pop
or
jg
xor
cmp
or
add
pop
mov
pop
test
jmp
inc
add
pusha
xchg
xchg
sub
loopne
xor
out
ret
adc
ss
movsl
inc
xlat
dec
roll
movsl
out
ret
inc
pop
mov
out
xor
pusha
mov
jne
push
push
and
add
movsb
in
aas
add
clc
mov
sub
sub
add
adc
mov
dec
fstpl
hlt
sar
dec
clc
push
add
push
jg
xor
jne
pop
test
or
xorl
cmpsl
pop
inc
cmp
jne
outsb
push
add
cmp
jne
xorb
dec
mov
mov
pushf
sarb
jne
outsl
sub
test
fistpll
rorb
mov
inc
inc
cld
loope
xchg
sbb
mov
shrl
pop
pop
dec
stc
or
cmp
mov
push
call
or
pushl
aam
xchg
aam
movsl
movsb
mov
inc
add
fimuls
or
and
sub
xor
lcall
push
mov
push
push
inc
jmp
or
or
sub
sbb
adc
lds
movb
pop
add
add
adc
or
icebp
inc
loop
int
xor
fucomi
cmp
aad
add
pushl
and
out
test
decl
fucomip
mov
mov
mov
jb
cmp
or
cmp
cmp
loopne
or
adc
mov
jb
or
mov
push
pushf
jecxz
dec
push
shl
sub
inc
test
movsb
jecxz
sbb
cmpsb
cld
in
loope
cmpsb
roll
mov
add
xor
aaa
out
dec
pop
or
pop
push
ret
ficompl
jns
jl
push
pop
cmpsb
push
addb
cltd
sub
aaa
cs
dec
jb
scas
cmp
cmp
in
or
adc
dec
pop
mov
mov
jp
lea
adc
add
jo
adc
adc
jl
dec
loop
dec
inc
lret
fldcw
pop
xor
jmp
xor
cmpsl
lods
inc
add
stos
add
cmp
adc
divl
sub
dec
cli
add
lret
je
je
int3
jno
jbe
push
mov
xor
xchg
mov
sub
xor
push
xchg
jns
sahf
scas
ret
incl
cmp
add
add
or
pushf
aad
in
push
jmp
push
add
cmp
xlat
cmp
push
push
pop
leave
mov
adc
nop
cmc
sbb
test
xor
fwait
mov
loope
test
mov
dec
mov
xor
add
or
dec
mov
cmpsb
inc
lock
dec
fadds
sub
ret
add
cltd
or
pop
clc
pop
mov
je
lcall
mov
or
imul
pusha
push
in
js
sbb
jo
shlb
sub
pop
xor
mov
clc
lea
jecxz
inc
sub
imul
mov
les
mov
and
mov
adc
addr16
mov
sbbb
movl
push
test
loopne
inc
in
aas
xchg
int3
push
insb
mov
xchg
pop
or
mov
pop
aad
lock
dec
les
pop
push
pop
stc
imul
and
xchg
add
pusha
xor
inc
mov
add
dec
test
imul
adc
aas
daa
or
and
xor
or
adcl
xchg
icebp
or
push
lock
mov
fmull
push
push
fwait
xor
sbb
adc
pushf
and
rclb
jo
sbb
dec
mov
push
ds
pusha
fs
cmpsb
les
pusha
jo
dec
or
adc
or
cmp
or
mov
push
sub
inc
push
ret
in
or
push
loope
inc
jge
jo
mov
cmp
jne
nop
adcb
jne
xchg
lods
cmp
mov
jns
push
in
and
lock
adc
pop
push
jbe
mov
test
ret
ret
ret
and
ficompl
add
jl
or
adc
ds
jo
in
add
mov
sbb
push
mov
and
testl
cmp
stos
or
sub
ret
mov
mov
xor
and
pushf
test
out
sub
lss
adc
lock
lea
pop
lock
or
and
sub
outsb
shll
or
aas
stos
add
add
push
push
pop
mov
pusha
nop
or
adc
inc
mov
mov
lret
or
iret
cmp
mov
aam
into
jmp
icebp
sti
or
cmpsl
mov
xchg
pop
nop
adc
lds
in
lock
push
dec
or
push
push
cmp
in
out
clc
and
aaa
dec
sbb
push
or
je
push
add
pop
pop
nop
popf
shl
je
inc
or
fwait
inc
jbe
notl
xor
mov
nop
sub
mov
shlb
jne
push
iret
jmp
pop
mov
insb
pop
cmp
adc
dec
xor
pop
je
cld
sbb
mov
and
sbb
out
pop
mov
movsl
add
sub
inc
push
ret
add
xor
in
push
imul
mov
inc
lea
mov
test
faddl
ljmp
add
aaa
pop
xchg
mov
sahf
int
test
aas
popf
fisubrs
je
shlb
push
push
add
pop
and
leave
lret
scas
call
push
sbb
stc
popf
push
cmp
push
lahf
mov
mov
xchg
mov
in
dec
or
test
roll
sub
call
jge
xchg
mov
or
sub
jp
push
fisubrl
mov
xor
sub
nop
add
push
push
sub
dec
push
call
stos
sub
add
lods
scas
js
add
dec
pop
inc
bound
fldl
or
inc
cmp
xlat
js
xchg
loopne
aam
sbb
ss
insl
mov
push
movb
push
lods
int3
push
sbb
cmpsb
or
add
movsb
cmp
push
dec
repz
dec
in
mov
push
add
push
sbb
in
rorb
cmp
cwtl
dec
xchg
and
std
add
add
addl
loope
cmpb
call
mov
and
xor
mov
pop
fwait
sbb
xchg
adc
pushf
cmpb
aaa
lahf
or
in
imul
arpl
into
mov
bound
cmp
sbb
stos
sbb
xor
or
xchg
or
test
or
lea
cmpb
jne
incl
cs
das
pusha
cld
std
clc
inc
clc
movb
push
mov
and
in
sub
cmp
pop
jl
pop
je
test
mov
jbe
loopne
out
dec
es
fmull
mov
fidivl
jecxz
xor
fldenv
dec
repz
cmpsb
fdivrl
cmp
mov
dec
sub
pop
lea
pop
aad
inc
outsb
dec
loope
cmp
mov
mov
jne
stos
out
jne
sti
or
push
pop
mov
dec
stos
dec
pop
push
pop
icebp
ret
dec
lcall
hlt
dec
push
cmp
addr16
mov
dec
or
cmp
sbb
fimuls
mov
xlat
sub
repz
push
bound
fidivrs
mov
lds
or
adc
mov
test
clc
push
ds
sub
in
and
test
scas
xor
pop
or
push
outsb
or
pop
pop
xor
xor
mov
xor
mov
push
jmp
jno
sbb
mov
sbb
and
jmp
cmp
jne
xor
mov
lea
lret
out
stos
push
mov
test
data16
fildl
adc
roll
xor
fstpt
mov
adc
inc
cmp
testb
push
mov
insb
clc
or
jg
jne
and
shlb
scas
in
test
jmp
test
rorb
ss
leave
faddl
pop
dec
shll
cmp
sbbb
cmpsb
pusha
xchg
sub
jecxz
lds
mov
push
xor
and
mov
add
fistps
fcom
add
shrl
fisttpl
cs
and
data16
mov
rcrl
sub
idivb
es
cmp
rorl
jecxz
ret
adcl
jge
cmpl
inc
xchg
test
adc
push
sub
shrl
ret
or
cmp
push
xor
xchg
add
pop
cmp
sbb
mov
orb
pop
into
jecxz
add
call
jge
pop
xor
push
repnz
mov
jmp
faddl
lods
mov
jmp
outsb
leave
xor
xlat
std
cwtl
and
fisttpl
out
lea
iret
mov
sahf
push
jle
and
push
jl
dec
test
bound
and
loopne
shrl
and
inc
pop
sub
mov
xor
cmpsb
in
imul
lcall
pop
push
insb
push
andl
xor
or
push
imul
aas
jmp
inc
das
ja
xchg
or
scas
push
lea
and
insb
sub
inc
jno
scas
popf
jl
or
or
ss
jnp
pop
cmpsl
or
dec
orb
pop
push
dec
pop
inc
or
loop
inc
mov
push
and
pop
sub
dec
jbe
addl
ret
movzwl
test
je
test
and
mov
or
insb
mov
or
push
mov
adc
ret
call
mov
mov
pop
add
jne
cmpl
rcll
or
popa
fadd
repz
cmp
rorb
fdivrl
mov
daa
test
xor
out
out
or
xchg
pop
xor
test
std
in
jmp
mov
dec
clc
rclb
shlb
adc
daa
pusha
or
out
addr16
enter
sbb
add
imul
js
dec
cs
jmp
inc
or
jecxz
sbb
les
or
pop
je
mov
mov
int3
cltd
jb
test
sub
pop
or
insl
mov
pop
push
in
pop
xor
dec
mov
in
pusha
and
mov
cmp
je
jmp
ja
mov
sub
popa
outsb
adc
arpl
cmp
inc
rolb
mov
in
inc
je
sub
xchg
fmull
sbb
int
das
lret
inc
pop
loop
push
das
add
insb
and
loopne
sbb
xor
lcall
xor
shlb
ljmp
or
or
pop
push
jbe
mov
xchg
adc
mov
pop
call
add
add
mov
in
loopne
sbb
or
cli
test
popa
sarb
dec
stos
push
or
cltd
jbe
negb
das
add
loopne
add
pop
in
xor
hlt
sub
pop
in
xchg
es
and
lock
sbb
add
xor
mov
cmp
pop
das
mov
adc
mov
cmpsl
push
imull
inc
in
dec
and
pop
sbb
in
or
dec
ret
add
loope
leave
push
push
icebp
jge
stos
push
loopne
cmp
sti
movsb
push
mov
mov
test
ds
inc
or
inc
mov
lds
lock
subl
je
mov
int3
mov
andb
lcall
and
push
cwtl
call
xor
sbb
sbb
add
sbb
add
ud0
push
hlt
pop
addb
and
jl
test
nop
loop
sub
cmp
test
daa
mov
imul
sub
push
sub
push
mov
dec
add
ret
std
inc
or
mov
cwtl
xchg
cmpsb
pushf
pop
popa
xchg
shrl
jo
rolb
mov
jge
lret
aam
mov
in
xchg
pop
ss
pop
mov
jbe
enter
push
adc
mov
pop
sbb
mov
je
rcll
ja
push
adc
mov
pop
pop
ret
shll
ret
fwait
mov
mov
or
push
shl
jo
loop
rcll
aad
ret
jmp
fidivrs
dec
ret
push
push
fdivrs
mov
sub
push
aam
jne
mov
adc
pop
scas
mov
pop
sub
not
jl
mov
loope
sbb
adc
lods
add
dec
or
add
jnp
stos
pusha
pop
cwtl
add
mov
dec
addl
add
aad
mov
rol
push
cmpsb
sub
add
negb
push
pop
push
mov
jmp
cmp
movsl
jno
mov
not
push
test
mov
xor
inc
loopne
ret
ds
and
andl
jbe
mov
clc
fcompl
loop
cld
mov
or
roll
rorb
sbb
out
aas
js
jne
fistps
test
sbb
adc
jmp
sbb
mov
add
or
pop
inc
push
and
mov
cmp
jmp
adc
add
ret
sbb
add
loop
adc
dec
mov
xor
mov
dec
push
cwtl
mov
sub
faddl
jb
or
lods
xchg
mov
push
add
adc
sub
rcll
loopne
push
xor
push
and
mov
jo
mov
cmpsb
xor
inc
mov
faddp
pop
mov
sub
mov
insb
push
xor
xchg
sbb
push
subl
pop
outsb
mov
jno
mov
orl
ret
xor
push
push
jecxz
xchg
lea
aaa
dec
adc
push
movsb
je
jle
pop
inc
adc
adcb
jl
inc
movsl
std
cmp
sbb
sub
push
inc
dec
or
sbb
outsl
mov
adc
pusha
xchg
sub
ds
loopne
lock
andb
mov
test
adc
fucom
xor
lods
pop
in
outsl
ja
mov
sub
mov
sbb
cli
cmp
jb
lea
jae
jecxz
adc
or
xor
stc
sub
mov
ret
mov
mov
inc
les
ret
lahf
imul
jnp
clc
inc
pop
jge
pop
cmp
mov
sbb
jo
adc
ja
sub
add
call
dec
xchg
into
pusha
cmp
or
cli
or
dec
ja
nop
or
insb
adc
mov
dec
add
sub
xorl
cmp
push
xorb
xchg
mov
xchg
dec
push
call
xchg
mov
rclb
bound
cmp
or
rolb
push
in
xor
jb
push
push
add
dec
inc
sub
xlat
mov
dec
mov
pop
add
insb
lock
pop
xor
pop
xor
mov
adc
mov
push
mov
jmp
pop
adc
push
es
clc
mov
push
pusha
push
or
xorl
test
movsb
lret
and
cmpsl
mov
dec
insl
xor
cvtdq2ps
add
jmp
push
lock
popf
jmp
js
push
fnsave
or
sub
in
push
movsl
xor
push
add
aam
inc
shrb
std
pop
bound
add
adc
movl
push
mov
adc
je
inc
or
jae
pop
pop
and
add
push
jae
arpl
out
repnz
push
je
mov
or
push
or
jg
insb
jne
or
cmp
push
push
dec
jmp
sub
xchg
sbb
cmp
inc
inc
add
rolb
and
out
push
dec
add
sbb
mov
pop
inc
lea
aam
mov
or
incb
push
std
out
push
or
sub
xor
cwtl
cmp
mov
xchg
stos
aam
add
insb
stos
pusha
dec
mov
loopne
push
sub
popf
xchg
jmp
push
iret
addr16
adc
dec
pop
mov
jnp
push
xor
jb
pop
xor
xchg
cld
lods
cmpsb
aaa
xchg
je
fcomp
push
push
out
jno
add
outsb
jo
and
sbb
push
xchg
icebp
adcl
xor
push
faddl
jb
shlb
dec
or
test
jae
add
fcompl
cmp
jb
outsb
sbb
pop
lea
xor
pop
and
or
dec
loopne
adc
or
fucomip
mov
mov
mov
outsb
sub
orb
test
lcall
ss
or
xor
push
adc
ficoml
fwait
xchg
dec
push
inc
movsl
insl
in
cltd
push
jne
sub
adc
pop
lods
mov
xchg
subl
push
add
inc
mov
push
mov
dec
mov
adc
shll
add
cmp
pusha
xor
shll
push
xorb
jl
mov
aas
xchg
fsubr
mov
mov
sti
or
ds
dec
cmpsl
cmp
imul
fwait
inc
mov
scas
sub
mov
add
rcrb
lods
dec
or
sbb
mov
xchg
int
adc
and
push
sahf
sub
ret
pusha
mov
in
xchg
sub
push
fdivs
and
cmp
sbb
add
and
jo
push
fs
jae
add
push
cmp
jbe
add
dec
notb
ret
test
icebp
xor
xor
add
pop
pop
fsubl
clc
adc
and
jg
cmp
jne
pop
push
xor
outsl
fadds
test
dec
nopl
orb
insb
mov
loop
mov
jb
add
sub
popa
add
jbe
std
xchg
fbstp
jmp
cmp
sbb
mov
jne
cs
sub
xchg
lret
or
dec
mov
mov
testl
js
rcrl
inc
mov
jb
mov
add
dec
add
jnp
leave
lea
dec
dec
test
daa
dec
inc
or
xor
jnp
mov
ret
sarb
repnz
mov
out
mov
fmuls
jbe
insb
sbb
movsl
mov
inc
jg
lea
jo
rol
ljmp
shl
ret
mov
sbb
test
xchg
mul
imul
mov
add
ret
mov
adc
scas
sub
push
lret
notb
sub
out
test
popa
andl
filds
cmp
fnstcw
and
add
adc
xchg
pop
mov
xchg
pop
repnz
out
xchg
pushf
je
add
iret
cmp
jo
push
ljmp
stc
out
mov
or
pop
mov
fnop
xchg
out
cmp
adc
fiaddl
cmp
pop
and
mov
and
xor
clc
push
stc
aad
cmp
je
icebp
jne
xchg
dec
sti
mov
xorl
in
inc
imul
cld
jb
sub
sub
add
test
cli
cs
scas
iret
js
inc
inc
negb
outsb
addb
adc
popf
inc
ds
push
movsb
mov
xor
mov
add
cmp
cmp
or
jmp
cmp
adc
jae
mov
dec
xchg
add
mov
rolb
add
ljmp
push
push
and
sbb
pusha
mov
jg
mov
ds
xchg
je
mov
dec
xchg
pusha
sub
jecxz
mov
push
sub
test
std
add
inc
mov
adc
xor
adc
cli
adc
cmpsb
xchg
push
mov
je
pusha
addl
push
mov
sbb
inc
int
jo
jge
ucomiss
and
sbb
fmull
fcompl
xor
cmp
push
movsb
add
out
notl
xchg
and
adc
rcrl
lods
or
push
pushf
icebp
mov
je
sbb
fs
pop
fs
pusha
xchg
inc
inc
push
insb
insb
push
push
les
inc
sub
sbb
movb
ja
and
xchg
push
mov
je
and
movzwl
divb
mov
jno
inc
xor
push
cmp
loope
cmp
je
xor
dec
ret
or
push
push
lock
push
lock
mov
inc
pop
xchg
jmp
lea
pop
fmul
add
mov
dec
leave
add
and
add
lock
add
lock
cld
lock
and
cmp
dec
jmp
movsl
out
into
push
push
adc
lods
adc
sbb
sub
dec
ss
fcompl
int
mov
sahf
movsb
push
xor
mov
mov
lea
lods
cmpps
sub
adc
xchg
es
mov
cli
shl
cmp
push
mov
jl
sbb
sbbl
inc
sub
mov
jae
add
out
add
add
pop
orl
test
je
test
ljmp
sbb
add
dec
in
mov
stos
sub
jle
ret
push
xor
dec
push
sbb
or
lds
insb
xor
pop
enter
jo
popa
sbb
cli
jo
xchg
or
mov
ror
adcl
popa
push
cmc
pop
or
push
aas
jne
arpl
xor
xchg
insl
lds
fsubs
cltd
jae
xchg
stos
insb
jbe
jbe
fistl
fidivrs
test
sub
pop
test
sarl
sub
pop
loopne
je
sbb
lret
sbb
add
pusha
xchg
data16
or
cwtl
dec
push
lea
push
pop
cwtl
push
adc
test
add
rcr
loop
ds
lret
push
or
dec
sbbb
sbb
lods
add
adc
mov
or
jl
or
and
dec
adc
add
pop
adc
lock
push
aas
adc
fs
add
nop
dec
dec
sub
pop
adc
pop
arpl
cmpsb
dec
cmp
adc
sbb
ss
push
jmp
lea
in
inc
push
mov
pop
std
mov
mov
xchg
push
pop
cmp
pop
add
movsb
je
push
aad
xchg
or
jp
aaa
adc
add
dec
lods
sbb
pop
mov
mov
aaa
adc
push
mov
mov
pop
lods
or
sti
and
es
jg
adc
test
push
cmpb
inc
dec
inc
inc
sub
push
push
popa
dec
stos
pusha
gs
pop
scas
inc
jne
or
push
mov
adc
add
movsb
inc
and
pop
enter
clc
or
push
adc
pop
or
push
pop
into
jecxz
inc
cs
lock
xchg
sbb
in
cmp
sub
js
adc
push
xchg
lret
ret
aad
verr
sbb
mov
xor
cmp
cmp
sbb
lods
fstpt
inc
push
sbb
or
fcoml
pop
xchg
cmp
cmc
outsb
pusha
cmp
mov
add
cmp
pop
aam
jecxz
push
mov
fcmovu
mov
and
loopne
fisttpll
adc
fs
pop
sbb
and
mov
cs
lods
mov
xchg
add
xor
stc
mov
sub
pusha
je
hlt
add
cld
mov
loopne
sbb
sbb
ss
adc
out
jo
pop
jl
push
cli
loop
mov
data16
sahf
cmp
push
xchg
popa
cwtl
or
mov
lock
sbb
mov
out
jp
mov
or
inc
shr
dec
jne
rcrb
js
aaa
fdiv
and
aas
mov
or
mov
and
jne
repnz
dec
pop
sahf
xchg
out
push
push
push
je
push
rolb
lahf
das
cmp
insl
adc
mov
cmp
push
lea
push
push
bound
movsl
inc
adcl
push
loop
movsb
in
fwait
push
add
push
popf
xchg
fs
fwait
leave
movsl
and
icebp
dec
xchg
xor
add
xchg
push
push
jge
aas
adc
lods
enter
sub
imul
sbb
xchg
pop
cmp
test
add
imul
pop
popa
add
and
jge
mov
orb
xor
loopne
mov
mov
jmp
xchg
dec
or
imul
adc
sbb
xor
add
mov
add
daa
jecxz
mov
xchg
sar
push
pop
push
pop
sub
adc
add
xlat
nop
mov
mov
push
adc
gs
decl
mov
mov
xchg
xor
out
cmp
rdmsr
sarb
outsb
dec
stos
jmp
push
mov
jmp
xor
add
shll
or
adc
pop
inc
shrb
pop
popa
inc
jmp
and
mov
mov
pop
adc
std
xor
adc
or
jo
push
sub
and
dec
xchg
arpl
fimuls
sahf
push
or
xchg
lret
sbb
mov
int
push
and
xor
ficomps
sub
in
inc
ret
movswl
push
ss
in
neg
sbb
push
cmp
ret
xchg
or
xor
xchg
or
pop
and
jb
loope
mov
sbb
cmpsb
add
cmpl
outsl
inc
and
jp
pop
lods
push
xor
lock
dec
mov
daa
add
or
xor
inc
xor
inc
lcall
insb
xor
sahf
pop
inc
xchg
dec
inc
xor
lock
andl
jne
xor
lock
jo
add
sub
ficompl
push
pusha
jmp
push
gs
xor
fsubrl
loop
mov
std
inc
lea
and
out
lahf
loopne
cmc
ss
push
inc
add
fdivl
outsb
pop
aas
mov
or
push
jo
jg
ret
pop
pop
pop
pop
xchg
inc
idivb
add
adc
add
outsl
xor
mov
jl
andl
adc
lock
jl
and
pop
jo
cltd
add
test
rorl
push
cmpsb
int
or
cmp
sub
jle
dec
xor
pop
sahf
push
xchg
dec
mov
int3
outsb
mov
fists
pop
shll
add
daa
test
scas
ficoml
push
adc
xor
jl
movb
cmp
test
pop
adc
inc
mov
lods
pop
adc
add
xchg
repnz
cmp
das
shll
jl
dec
cmp
sbb
xor
jl
or
push
or
xchg
sub
and
push
in
js
add
add
cmp
insb
dec
dec
adc
mov
push
inc
adc
inc
push
add
xchg
aam
fdivrs
inc
sbb
add
sbb
out
jmp
pop
cwtl
hlt
push
fbstp
mul
push
nop
or
fs
bound
leave
fwait
btr
rol
inc
xlat
or
je
je
test
pop
xlat
fcmovne
decl
mov
cmp
cmp
cmp
mov
xor
add
sbb
xchg
ss
testb
or
mov
add
loop
jge
mov
jo
sti
lahf
mov
loope
xor
xchg
cmp
or
inc
mov
mov
xor
andb
pop
mov
cmpl
std
ss
mov
arpl
adc
dec
xor
cmp
lret
mov
repnz
mov
stos
pusha
xor
sbb
out
dec
movswl
add
and
cmp
add
xor
popf
shll
and
outsl
sub
mov
sbb
aas
push
fnsave
sti
pop
cmpsl
dec
pop
or
or
stos
pop
fldl
rol
fisttps
push
add
lods
cmp
jne
jp
cmp
pop
mov
dec
and
out
push
hlt
imul
push
push
das
loop
and
or
cmp
and
ret
and
or
xor
mov
nop
jmp
cltd
mov
mov
ss
sub
nop
jo
pushw
pushf
imul
xlat
adc
add
sahf
out
movsb
test
jo
in
stos
mov
mov
inc
cmpsl
add
inc
push
adc
ret
mov
pop
and
subl
or
xchg
loopne
imull
pop
andb
pushl
dec
add
repnz
adc
insl
popf
aad
fwait
mov
mov
push
push
lea
ss
das
sbb
subb
jmp
mov
fisubl
shlb
sub
dec
clc
loop
push
insl
test
jmp
push
cmp
add
push
xchg
mov
jb
sbb
pop
add
or
aas
pushf
push
imull
xor
addr16
xor
or
or
jecxz
add
xchg
cwtl
add
add
in
and
push
addl
jge
add
pushf
test
je
push
std
xor
movsb
cmp
jns
xor
jl
cs
imul
add
es
pushl
lods
or
std
rclb
mov
add
mov
xor
adc
aam
mov
pop
inc
cmp
xor
movsl
aam
or
daa
scas
sub
imul
jbe
mov
push
mov
in
pushf
subb
cmpsl
mov
es
and
pop
and
dec
pop
clc
xor
cmp
xlat
sub
pop
cmp
je
mov
dec
mov
pop
mov
add
push
or
jae
push
adc
leave
jle
push
aas
mov
movsb
jb
or
sub
aas
ljmp
jbe
lods
sarb
xchg
xchg
cmp
dec
xchg
mov
xor
test
outsb
mov
add
jo
xor
add
cmp
mov
insl
scas
clc
or
int
jge
jge
adc
sbb
cltd
adc
pop
inc
mov
and
imul
loope
mov
dec
pop
jo
loopne
add
mov
push
mov
sbb
mov
shlb
outsl
or
orb
repnz
and
aas
dec
dec
mov
inc
lods
jbe
fisttpll
scas
fsubr
mov
cmpl
int3
and
add
ret
pop
icebp
movb
inc
in
pop
cli
test
pop
adc
inc
insb
shr
and
and
inc
add
and
fsubp
xor
push
cmp
sbbb
sub
inc
out
mov
jp
or
pusha
insb
std
mov
decb
sarl
fimull
adc
fucom
xor
js
push
movsl
aad
jb
jge
mov
jl
rclb
rol
cmpsl
ficompl
clc
fisttpl
and
je
push
lock
cmpsl
jl
push
push
pop
adc
dec
cmp
push
inc
hlt
shlb
imul
mov
jnp
jge
icebp
pop
pop
not
je
mov
or
jle
push
push
mov
xchg
test
push
data16
shlb
or
mov
mov
imul
orb
rclb
mov
lods
jne
sub
add
stc
loopne
jmp
cld
jecxz
dec
sti
cmpl
sbb
in
mov
addl
insb
sbb
adc
mov
xor
in
fxsave
pushl
mov
lahf
cmp
sub
testb
movb
js
jne
addb
lahf
xor
je
mov
cmp
pop
dec
sub
mov
test
adc
orb
mov
add
test
mov
dec
push
mov
clc
out
adc
clc
leave
mov
cmp
call
aaa
jbe
in
and
mov
outsl
int3
dec
sub
cmpsl
xchg
fnsave
add
push
push
xchg
jge
add
testb
in
dec
in
pop
mov
mov
out
sbb
inc
jo
addr16
xchg
pop
jle
jmp
into
sbb
dec
xchg
xchg
scas
pop
mov
adc
jb
sub
push
xor
jle
pop
or
adc
out
and
push
mov
fidivs
xor
dec
mov
sbb
cmp
mov
shr
sbb
ja
cmp
lea
cmp
or
inc
pop
stos
cmp
push
ror
push
push
movsl
adc
je
and
jge
push
cmp
sub
dec
lahf
or
pop
fs
xchg
mov
dec
mov
xchg
mov
or
in
push
cmp
data16
jno
or
pop
je
mov
pusha
arpl
push
pop
movsb
sub
pop
and
ror
lahf
lea
mov
pop
testl
loope
inc
pop
inc
and
iret
rolb
call
inc
mov
dec
or
dec
or
cmc
xor
lcall
shrb
xchg
mov
int
sbb
or
adc
sti
enter
and
dec
sub
xor
jo
jp
into
addb
les
push
pushf
popf
add
push
int
je
add
out
adc
mov
testl
push
lods
xchg
jle
xor
or
fs
jb
and
xchg
lret
lcall
and
sbb
insb
es
xchg
sub
add
mov
mov
pop
leave
sbb
out
dec
les
sbbl
sub
and
aam
aas
lods
mov
pop
popa
xor
and
outsb
pop
movsl
add
adc
sbb
dec
jecxz
sbb
bound
adc
scas
pop
and
jg
testl
notl
das
pop
ret
cmpl
inc
imul
xor
push
cmpb
mov
ficompl
pop
dec
pop
lods
push
pop
call
fdivp
mov
xchg
add
and
sub
enter
aaa
adc
xchg
cmp
mov
sti
xchg
cmp
xor
mov
dec
push
push
call
or
sbb
push
ret
jae
mov
inc
cmp
in
xchg
test
mov
or
push
xor
xchg
mov
inc
push
push
push
mov
adc
or
mov
push
ja
push
xchg
mov
xorl
icebp
pop
add
or
and
xor
ret
divb
cmp
sbb
ficomps
and
push
and
cltd
jno
jecxz
stos
mov
pop
andl
fwait
sub
xor
cmp
out
sti
dec
ja
je
or
je
or
sub
xchg
pop
adc
adc
and
hlt
nop
jg
or
ds
dec
cmp
xchg
test
sbb
jo
orl
ss
ror
jmp
cmp
push
je
push
adc
adc
shlb
push
cmp
jp
xchg
inc
sbb
add
scas
sub
sub
dec
mov
jbe
call
xchg
xchg
clc
push
in
mov
or
or
and
push
jns
rorl
dec
movsl
mov
gs
add
je
cmp
ret
je
push
cmp
rorl
adc
add
jge
adcb
shrb
xor
push
add
icebp
ss
or
add
pop
xor
dec
or
aaa
and
dec
test
clc
dec
je
sub
shr
sub
add
outsb
add
xor
add
nop
adc
in
sub
popa
arpl
or
push
adc
inc
xchg
out
add
or
das
jecxz
into
mov
dec
push
adc
iret
push
or
xor
loopne
dec
sbb
add
int3
sub
push
xchg
nop
jns
mov
repnz
or
push
dec
push
stos
push
loope
add
into
or
sar
push
iret
sbb
sbb
jbe
movsl
xor
adc
fdivrl
notl
add
je
pushf
divl
add
lcall
pop
mov
xor
push
sub
inc
ljmp
rorb
in
push
push
call
call
xor
add
pop
xor
aaa
loopne
xchg
mov
xor
xchg
fdiv
xor
notb
and
inc
inc
inc
negb
test
or
cmp
sete
jmp
inc
cmp
jne
add
mov
mov
xchg
std
insb
std
fdivl
jns
mov
jmp
lahf
inc
mov
das
adc
fwait
out
les
adc
and
fcomps
inc
enter
or
pop
xchg
dec
sbb
ret
ret
pop
movsb
imul
push
xchg
sbb
xchg
dec
and
fdivrs
repz
sbb
cs
call
mov
push
cmc
mov
push
test
jns
cltd
add
and
sar
add
pop
jge
pop
stos
pop
loopne
fidivs
ja
loop
sbb
cmp
in
inc
push
nop
test
leave
add
sub
fdivrl
push
inc
sahf
es
test
call
aaa
sbb
aas
test
push
pop
sub
push
ret
mov
cmp
nop
xchg
and
cmpsb
imul
clc
ret
rolb
cmp
mov
fdivl
pop
or
lahf
test
sahf
pushf
push
adc
mov
jl
push
push
js
xor
mov
sub
pop
and
lahf
dec
fisubl
mov
sbb
sbb
push
push
movsb
push
mov
pushf
popa
push
std
adc
adc
lcall
ret
xor
ror
xchg
dec
or
jmp
jle
add
dec
pop
sbb
add
int
inc
push
cld
push
push
adc
enter
adc
mov
jbe
push
or
adc
pusha
cmpsb
xor
jp
sbb
cmp
cs
insl
test
les
sub
mov
pop
leave
push
xor
inc
enter
and
add
or
xchg
pushf
sub
fwait
dec
in
sub
movsb
xor
clc
insb
flds
lea
shrl
addr16
fcoms
leave
push
imul
xchg
outsl
pop
movsb
or
push
and
jmp
and
hlt
aaa
lock
movl
jp
movl
or
push
int
testb
mov
sbb
adc
dec
and
and
cmp
test
push
arpl
mov
aam
fadds
add
mov
loope
add
loopne
pusha
ret
aad
test
add
jg
int
pushl
aas
xor
xor
or
dec
pop
cld
dec
add
add
in
mov
loop
clc
into
dec
pop
incl
push
fdivr
xchg
jnp
pop
lcall
shufps
test
push
fiadds
push
int3
rorb
mov
cli
jne
pop
insb
xchg
mov
and
hlt
add
pop
fcompl
test
mov
push
inc
nop
std
dec
dec
or
sbb
sbb
neg
sbb
mov
loopne
or
push
and
mov
add
pop
nopl
add
or
or
mov
dec
in
adc
faddl
jmp
mov
pop
lret
js
add
push
push
out
and
iret
sbb
pop
das
cmp
adc
test
add
mov
aam
inc
jl
jbe
cmp
mov
mov
das
push
adc
lock
cmp
test
fadd
lahf
rorl
inc
out
mov
and
pop
adc
adc
inc
cmp
pop
jg
sti
je
dec
sub
rorb
sub
sbb
add
jg
jnp
addb
sbb
test
and
lock
adc
ret
lods
movsb
dec
sbb
inc
mov
les
bound
inc
xchg
aad
push
dec
cld
movsb
movsl
inc
sub
sbb
call
test
outsb
or
enter
jl
adc
sbb
mov
cmpl
lock
mov
mov
push
ds
cmp
inc
mov
push
sbb
jns
mov
nop
add
mov
sub
inc
leave
lock
mov
and
sub
inc
mov
adc
pop
mov
mov
or
insb
and
cmp
mulps
mov
sbb
dec
or
cmpb
add
imul
and
hlt
and
push
inc
into
mov
rcl
pop
xor
stos
enter
pop
sbb
outsb
mov
mov
pushf
mov
aam
inc
xor
jl
in
not
mov
pop
popf
add
sbb
pop
jo
arpl
icebp
pop
sub
push
js
fidivrs
fwait
jmp
aaa
stos
mov
enter
jmp
lods
mov
es
outsb
dec
pop
pop
into
hlt
je
push
xchg
enter
and
xchg
add
fsubrp
mov
popa
test
lock
sbb
jnp
sbb
xchg
cmp
sub
sbb
cmpsb
sub
push
push
mov
cmp
je
aam
push
mov
or
adc
pop
imul
dec
pusha
in
dec
in
mov
jns
mov
add
shrb
or
aas
dec
hlt
add
pop
je
or
push
adc
jbe
mov
and
mov
xor
mov
shrb
and
cld
lock
mov
xor
fldt
orl
cmpsb
cmp
push
push
popa
lds
leave
call
dec
in
loopne
dec
adc
inc
rorb
cld
mov
dec
mov
fisttpl
pop
call
and
sub
push
pop
pop
enter
add
fisubrs
add
jle
jmp
push
push
lcall
or
mov
push
push
add
or
add
and
push
cmp
fildl
enter
jmp
mov
movsb
jb
push
mov
cmp
addr16
mov
pusha
dec
dec
adc
fldenv
fwait
and
add
lds
incl
lret
sbb
dec
loopne
pop
imul
and
out
and
xor
int3
xchg
xor
mov
orb
cmp
xchg
in
cmp
and
cmp
and
push
push
shll
hlt
mov
mov
insb
add
or
icebp
push
or
sbb
subl
pop
push
mov
xor
jg
sbb
ja
test
push
push
mov
cmp
mov
adc
pop
ss
cmp
xchg
addr16
push
cmp
jns
sub
adc
inc
cs
inc
cmp
lahf
xchg
out
or
or
inc
inc
xchg
or
sub
dec
dec
fwait
iret
lret
inc
xchg
or
enter
rcll
dec
add
lods
or
jo
mov
add
push
dec
xlat
or
test
repnz
push
fists
clc
push
arpl
xor
inc
push
lea
scas
mov
clc
push
inc
mov
jae
dec
mov
shll
sahf
addr16
mov
sub
sbb
loopne
cmpsl
dec
sub
jne
push
mov
sub
adc
pusha
je
push
add
pop
adc
pop
lcall
adc
es
add
and
pop
insb
and
rclb
push
mov
add
cmp
mov
mov
push
jmp
add
aaa
jno
aas
jmp
push
mov
int3
lahf
ret
imul
sub
pop
test
imul
cs
adc
pop
sbb
es
mov
inc
int3
jl
movsb
mov
mov
add
dec
cld
in
push
sub
xchg
cmp
mov
data16
jmp
add
mov
push
add
pop
add
mov
or
add
jbe
push
push
addl
xor
sub
push
jl
cmp
jae
mov
dec
mov
push
shl
add
mov
jne
jg
and
in
or
pop
dec
cmp
sub
or
adc
push
ret
aas
sub
jmp
push
jl
loopne
sbb
das
add
sti
outsb
aam
xchg
and
cltd
pop
add
js
add
ds
scas
les
mov
add
call
sahf
imul
leave
or
lods
jge
mov
mov
jnp
push
adc
sbb
xor
rclb
sub
les
or
xor
pop
stos
test
add
inc
xor
stos
nop
cmp
cmp
jecxz
daa
dec
clc
sub
cmp
or
lahf
dec
mov
scas
sbb
fsubl
movsl
jne
dec
xor
mov
test
push
add
add
dec
jne
hlt
pop
push
sbb
add
sarl
sub
int3
adc
xor
rdpmc
cs
jnp
hlt
sbb
push
pop
addr16
pinsrw
or
imul
mov
push
insl
and
mov
push
mov
cmc
sbb
je
cmp
pop
pop
cmpsl
xor
into
push
ss
xor
test
imulb
cltd
dec
mov
and
rolb
fs
mov
lock
jns
add
xor
ret
adc
test
mov
pop
scas
or
jnp
cmp
shlb
fstl
cli
add
shll
push
leave
push
aam
add
xor
lret
add
andb
push
xor
imul
cmp
inc
shlb
sbb
push
lock
or
lock
sbb
xor
mov
push
and
orb
pop
sbb
push
push
rolb
and
mov
mov
sbb
push
dec
stc
iret
xchg
and
add
test
push
xor
cmp
mov
cmp
jbe
mov
cmp
push
inc
add
or
and
push
ja
repnz
leave
inc
mov
mov
bound
pop
mov
mov
jns
in
push
push
lea
in
push
sub
jp
jb
sbb
mov
push
pop
in
and
rorb
mov
jne
cmpl
lret
dec
add
push
xchg
popa
xchg
aad
mov
and
lcall
cmp
insl
insb
jb
inc
xor
out
or
cmp
push
mov
inc
movsb
das
addb
mov
call
add
or
pusha
and
je
push
jnp
dec
sub
ss
bound
add
lret
jle
repnz
out
roll
cli
adc
push
jmp
inc
pop
inc
andl
mov
loop
or
inc
or
fbstp
mov
and
mov
jne
andl
sti
shrb
sbb
add
clc
adc
or
pop
mov
push
and
lahf
or
or
add
mov
insb
enter
push
insb
push
xchg
lea
mov
lea
mov
mov
inc
inc
int
or
or
and
adc
fstpl
or
pusha
mov
push
xor
add
loop,pt
mov
adc
sub
cwtl
add
lret
pop
add
enter
dec
xor
xlat
adc
pop
adc
cmp
sub
pop
ret
cmp
in
imul
inc
imul
push
cmp
mov
movsl
jl
mov
cli
iret
int
andl
gs
imulb
push
pop
push
stc
mov
mov
aaa
sub
hlt
fcoml
and
push
mov
pusha
mov
xchg
outsl
in
iret
cld
adc
cmc
sub
and
shrb
lea
or
faddl
cmp
pop
push
add
adc
xor
loope
ljmp
mov
adc
xorb
inc
push
mov
mov
xchg
js
pop
repnz
sub
mov
jbe
pop
mov
add
push
jae
das
pop
push
xor
fistpll
or
sbb
shrl
cmpl
mov
dec
or
or
adc
pushl
add
sub
pop
lret
lahf
movsb
std
jge
or
push
scas
xor
adc
mov
mov
and
hlt
xrelease
or
ja
mov
and
xor
or
push
lods
fadds
jg
add
sbb
loopne
sbb
ud2
inc
xchg
es
push
sbb
mov
push
pop
aas
dec
test
jge
lock
lock
cmp
mov
jl
inc
sub
stos
or
hlt
add
adc
mov
adc
punpckhwd
push
outsb
push
clc
in
pop
js
sarl
pop
sbb
ljmp
cld
jo
mov
call
cmpsb
jno
adc
mov
mov
cmpsl
cmp
inc
and
cmpb
clc
lea
ret
push
insl
aaa
add
inc
inc
cmp
jb
pop
add
imul
in
and
rcrl
mov
push
lcall
jmp
testb
outsl
dec
and
jne
sub
dec
fcomp
push
xchg
fdivr
lea
push
imulb
dec
movsl
xor
add
test
push
mulb
jne
incl
and
mov
xchg
popf
jecxz
shrb
cltd
and
enter
or
sbb
je
add
addr16
inc
push
mov
loope
push
pop
insb
adc
jl
test
adc
jb
adc
and
ret
mov
and
jge
orl
leave
mov
jecxz
iret
movd
add
shll
xchg
rol
pop
aas
arpl
pop
add
push
shll
push
jecxz
ss
xor
jge
xor
add
mov
aad
pop
mov
mov
pop
sub
movsb
sub
pop
pop
push
mov
je
nop
inc
lods
xor
pop
inc
rorb
xor
sub
or
lret
mov
sbb
pop
add
jge
inc
jmp
add
stc
cld
lods
push
addb
push
and
jo
leave
add
decl
or
insb
lret
stos
or
xlat
pop
aaa
push
adc
fiadds
and
insb
mov
jle
nop
xor
je
mov
fwait
jmp
ss
jnp
mov
push
mov
sarb
jb
xor
mov
outsl
sub
icebp
pop
or
fisubrs
jle
push
push
fldl
mov
inc
scas
cmc
push
addl
movb
ret
mov
orl
cmp
cmpsb
fnstsw
jmp
xor
cmp
sub
cmp
sahf
movsl
sub
fwait
test
inc
stc
test
sbb
fnsave
push
mov
ljmp
jae
dec
mov
in
pop
add
add
adc
cmp
lods
or
imulb
jno
dec
sub
or
adc
dec
movsb
jmp
xor
mov
sub
sti
movsl
pop
xor
jne
pop
cmp
sti
adc
sub
cmp
pusha
sub
mov
pop
loop
rep
bound
xor
or
adc
or
sbb
cmp
jae
jmp
loopne
add
sbb
shlb
insb
mov
outsl
jnp
and
jne
clc
and
cmp
jae
push
push
mov
data16
xlat
push
and
push
mov
in
mov
push
ret
dec
adc
push
sub
popf
ret
inc
sub
dec
sahf
ret
adc
push
mov
loopne
cmp
fsts
inc
add
mov
inc
std
xor
sarl
rclb
add
rcr
xor
xor
adc
or
inc
mov
icebp
push
jo
in
scas
ss
jge
mov
cli
fs
insb
std
sub
push
pop
rorl
insl
mov
test
inc
dec
jmp
hlt
data16
and
push
jbe
or
xchg
jl
sub
rcl
lahf
add
sub
and
pop
fidivrs
xor
push
fs
inc
iret
ret
movsb
pop
mov
inc
xchg
pusha
rcrb
test
cmp
test
mov
push
lret
mov
mov
pop
adc
push
dec
pop
sar
sbb
jmp
mov
stos
es
mov
cmc
xchg
dec
dec
fdivrs
push
adc
rol
rcl
mov
mov
push
cmp
mov
lods
sub
adc
xor
fdivrl
mov
ljmp
sahf
mov
out
push
xor
inc
dec
rclb
jbe
or
and
mov
adc
int3
sub
arpl
and
add
sahf
add
jae
data16
sbb
js
stos
cltd
orl
sbb
fmuls
lock
sarb
dec
jne
fs
mov
sub
push
lods
or
rolb
inc
sbb
cmp
or
int3
push
add
scas
dec
mov
jge
je
dec
or
dec
testl
ds
cltd
mov
movsb
push
push
shrb
cmp
mov
sub
popa
sub
into
movsl
xchg
mov
inc
sbb
negl
push
adc
pop
or
or
xchg
aam
sbb
jo
dec
mov
xor
outsb
jecxz
xchg
in
test
adc
test
out
into
fnsave
lea
popa
inc
pop
cltd
out
jns
sbb
clc
adc
adc
add
and
call
shl
xor
pop
or
add
mov
js
cmc
or
testb
dec
sub
movsl
add
mov
cwtl
xchg
inc
or
pushf
sub
insb
loope
mov
push
adc
lds
sahf
roll
push
pop
push
adc
stc
cmp
dec
adc
dec
nopl
dec
pop
add
cmp
or
pusha
lret
inc
outsl
out
adc
cwtl
sub
sar
cmp
jbe
or
add
mov
inc
lret
dec
xor
movsl
pusha
in
inc
ret
lret
adc
add
jecxz
pop
push
rol
inc
xchg
push
inc
or
rep
loop
or
mov
jno
lea
push
adc
and
test
inc
or
sarb
push
lea
mov
mov
lock
pop
addr16
nop
pop
xchg
sbb
dec
pop
divps
jnp
in
sub
xchg
lea
cmp
data16
push
mov
lea
dec
fimuls
rcr
pop
inc
inc
nop
rcrl
xor
cmpsb
imul
sub
pop
hlt
push
add
add
xchg
jb
fstl
int3
mov
and
mov
or
and
pop
shlb
sbb
mov
testb
mov
shrl
arpl
dec
add
aas
aad
mov
cwtl
outsb
sar
mov
data16
pop
cmp
or
xchg
mov
jae
jb
incl
adc
shlb
jmp
xor
dec
dec
int
jae
adc
adc
cltd
and
shl
adc
add
addb
hlt
adc
test
cmp
cli
push
or
movsb
adc
sub
inc
mov
dec
mov
out
mov
sub
mov
cmpsb
cltd
push
mov
dec
push
lcall
jmp
dec
xor
cmp
dec
jmp
jno
xchg
sbb
pop
xor
cmp
loope
jb
sbb
insb
and
jmp
mov
daa
or
and
push
sub
and
leave
and
enter
mov
mov
cmp
out
ja
dec
outsb
xchg
adc
ja
add
sbb
dec
or
adc
outsb
sub
or
fldt
shll
inc
dec
or
push
insl
rcrb
cmp
rcrl
sbb
and
adc
add
fwait
daa
ret
rol
in
addb
pushf
xchg
pop
das
or
mov
push
lods
push
adc
jnp
mov
push
xor
jns
in
and
cwtl
add
outsl
popf
pop
jecxz
and
adc
mov
add
xchg
xchg
add
std
cmp
push
cltd
pop
pop
stos
push
inc
inc
push
sbb
in
fldl
insb
push
xor
xchg
and
and
xchg
xchg
and
mov
and
inc
push
nop
xchg
sub
sub
loopne
mov
mov
push
das
pop
push
inc
scas
inc
push
rclb
iret
xchg
xor
or
xor
mov
pop
ret
mov
dec
shlb
fmuls
rorb
nop
je
in
pusha
cmp
or
lahf
push
push
notb
in
or
scas
jo
adc
shr
lret
ficomps
or
inc
add
adc
add
adc
sbb
shlb
adc
dec
lods
mov
push
inc
or
icebp
adc
aaa
adc
inc
adc
pop
add
pusha
xchg
cltd
dec
add
mov
test
push
or
in
shlb
dec
sub
mov
add
pop
adc
adc
sahf
lods
jge
lcall
pop
pop
pop
inc
and
xchg
jno
std
and
mov
adc
dec
inc
or
push
inc
fistl
add
pop
sbb
push
out
lods
jo
jae
jmp
or
clc
add
fwait
or
mov
popa
pop
mov
add
test
rcll
sub
pushf
mov
sbb
add
clc
push
add
pop
popa
andl
push
enter
js
ds
jmp
and
mov
popa
sti
xor
fsubrl
xchg
push
push
and
fsubl
lock
push
lock
test
test
push
pop
cmp
cmp
pusha
push
xor
jne
adc
loopne
push
add
aam
es
mov
add
and
jnp
mov
cmp
xor
leave
pop
add
mov
adc
popa
xchg
xor
pusha
daa
mov
and
adc
sbb
loopne
sub
ja
jne
and
add
je
daa
add
pop
push
add
aaa
orb
mov
inc
add
in
dec
fnsave
mov
or
loope
les
sub
sub
inc
inc
sbb
mull
push
pop
scas
or
mov
jg
rclb
sub
repnz
xor
inc
mov
fmuls
adc
jmp
cmp
cmpsb
jno
sbb
cmc
test
adc
lock
adc
sbb
andl
cmp
mov
ljmp
push
loopew
jg
js
out
xchg
lods
cli
jle
add
add
add
test
dec
mov
cltd
sbb
rol
leave
lock
sbb
pop
clc
movsl
xchg
mov
enter
dec
cmp
or
sub
divl
or
cmpsb
addl
pop
inc
bound
mov
mov
aaa
pop
push
jne
push
fistpl
xor
arpl
and
loope
and
jg
mov
push
das
or
mov
push
movsl
and
xor
or
mov
repnz
iret
xchg
fsubrl
or
pushf
or
js
mov
mov
push
lock
push
and
jno
pusha
pop
int3
push
arpl
jnp
gs
adc
lcall
mov
and
sub
xchg
lret
int3
aas
in
add
movsb
jb
fdivrl
push
lods
inc
push
cli
cmp
dec
bound
adc
fiadds
or
and
pop
lock
mov
pop
std
fmull
imul
lahf
push
inc
ds
xchg
or
in
imul
pop
xchg
jge
adc
sub
ds
imul
lock
cli
xchg
mov
cld
cmc
sbb
orl
roll
ds
in
add
mov
lea
sbb
pushl
or
push
mov
cmp
jl
cmp
jle
cmp
push
jp
jbe
add
or
pop
xchg
je
stos
test
test
rorb
decb
and
jno
cmp
jge
mov
pop
and
jns
sbb
xor
je
cmp
je
dec
les
jne
pop
cltd
push
mov
test
sbb
cs
invd
ja
test
sub
add
roll
sbb
std
sub
pop
mov
mov
js
dec
sbb
test
add
or
fwait
inc
xor
in
add
test
mov
push
pop
or
xor
fisubl
add
add
adc
adc
fnstenv
pop
or
push
mov
and
loopne
subl
push
out
dec
sub
mov
cmp
cmc
add
push
decb
lods
shr
and
sar
les
xchg
or
inc
shlb
sub
or
rcrb
inc
aam
pop
out
in
clc
out
sbb
jmp
sub
addl
xchg
test
pop
pop
push
or
pusha
push
mov
fidivs
push
and
in
jo
je
jge
sbb
sub
call
pop
jmp
sbb
xor
mov
xchg
cmpsb
lea
push
rcl
add
push
sbb
cmp
pop
in
adc
pop
xor
mov
jo
leave
jp
inc
pop
push
ljmp
aam
xchg
jle
lahf
ss
pushf
and
dec
shrl
pop
int
push
call
push
sbb
sbb
pop
sbb
in
mov
or
js
out
pop
pop
pusha
fs
or
add
sbb
push
cmp
ret
scas
fstpl
jge
sub
xor
cmp
dec
sbb
outsl
dec
stc
icebp
incb
sbb
mov
cmp
insb
adc
sub
jne
jo
test
pop
imul
adc
push
loopne
imul
adc
push
leave
jae
insb
push
and
loope
and
push
add
std
imul
pop
inc
ret
cmp
and
out
pushf
sub
movsl
or
jg
pop
pop
or
nop
pop
rclb
ret
sbbb
xor
cmp
inc
bound
and
cmpsb
inc
aam
fs
sbb
inc
call
pop
xchg
mov
push
sbb
popf
mov
mov
addr16
add
scas
xor
pop
inc
rol
push
incb
jbe
jmp
outsl
bswap
xorl
sbb
pop
add
and
divl
dec
sub
popa
sub
dec
pop
fsubrl
push
lods
inc
jmp
inc
jl
fucomi
mov
gs
cmovb
pop
lea
and
push
xchg
imul
jo
into
mov
sub
and
stos
das
or
xchg
inc
mov
popa
aad
inc
sub
mov
sbb
xor
shlb
dec
push
and
or
mov
and
ficoml
lcall
fcompl
or
in
ljmp
cmp
pop
xchg
nop
dec
mov
sub
subb
dec
adc
sbb
or
fildll
or
mov
clc
and
ss
or
je
cmp
xorl
pop
push
xor
movsl
call
push
hlt
xor
pop
int
jmp
inc
clc
adc
xchg
xor
adc
je
adc
pop
dec
add
and
arpl
mov
and
rcrl
and
mov
in
mov
repnz
jmp
and
data16
jne
xchg
pusha
cmp
and
js
ret
sahf
pop
sub
or
insb
addr16
xlat
cmpsb
sbbl
fadds
inc
pop
filds
daa
cli
bound
push
pop
push
xor
mov
sbb
inc
rorl
cmpsb
push
mov
fldcw
adc
outsl
jnp
xor
mov
inc
mov
mov
mov
movsl
test
test
insl
in
fcomps
xchg
cmp
jmp
fdivrs
add
fs
add
sub
addl
mov
shr
mov
xchg
jle
into
push
mov
rcl
push
jb
repz
jne
add
icebp
js
rcl
sbb
lret
int
cs
push
sti
push
inc
loop
or
mov
push
add
inc
sub
inc
sbbb
lods
int
clc
sarb
add
push
enter
push
mov
aad
inc
mov
sub
cmp
add
shr
add
push
lods
add
push
orps
push
sub
lcall
filds
pop
repnz
repz
or
sub
lea
mov
lret
pop
ret
lods
jg
mov
jne
push
push
lcall
pop
ret
pop
jnp
and
and
adc
shrl
or
mov
std
mov
add
sub
dec
jns
mov
mov
sub
inc
adc
dec
clc
xor
add
add
or
add
xchg
inc
add
ss
adc
aam
jns
aam
lods
xchg
push
dec
sahf
repnz
jne
lret
pop
mov
outsb
ja
in
ds
call
daa
addb
and
jecxz
sub
sbb
and
out
enterw
ret
jmp
es
dec
pushf
arpl
mov
adc
fsubl
repnz
pushf
hlt
inc
add
push
adcb
mov
lret
xor
cs
mov
pop
adc
push
lea
pusha
lcall
and
addl
or
mov
imul
sub
cmp
cmp
or
push
and
jge
pop
add
jnp
cmp
pushl
test
xchg
and
in
cs
push
inc
sbb
and
jae
notl
test
shl
je
test
sbb
sub
sub
and
xchg
adc
xchg
pushf
jbe
rol
add
dec
adc
gs
or
add
mov
cmc
and
mov
loopne
push
fdivrs
fldl
pop
je
frstor
fistl
sbb
dec
in
subb
push
cmp
insl
adc
adc
jne
push
divb
jns
sahf
lahf
or
jne
or
jne
or
add
cld
or
fldz
lret
andl
pop
add
sarl
je
xchg
mov
mov
out
pop
push
test
dec
inc
inc
fisubrs
mov
or
inc
imul
lret
lea
fstl
jecxz
inc
sbb
mov
mov
mov
add
mov
jecxz
clc
loope
inc
rorb
pop
and
add
adc
ljmp
push
sub
cwtl
adc
sbb
push
sbb
cmc
sbb
movsb
sub
fucom
popa
pop
pop
rolb
ljmp
xchg
data16
sti
movsl
paddusb
or
lcall
xor
push
mov
fildll
sub
cmpsb
cmp
sbb
adc
out
inc
adc
or
push
xchg
cmc
adc
nop
push
test
std
dec
sub
push
jbe
shll
ficoms
fidivl
pop
sbb
movsl
sub
push
adc
mov
ret
sti
push
mov
mov
jno
dec
inc
pop
push
push
add
add
loope
dec
add
and
js
pop
xor
sub
subb
nop
stos
xor
push
mov
adc
mov
push
xchg
mov
adc
inc
ds
nop
push
mov
sub
adc
push
xor
mov
inc
call
fmul
rcl
lds
push
leave
lret
push
push
adc
or
jne
pop
xor
shr
and
int3
test
imul
loope
jmp
add
lods
cld
jb
jle
or
jo
popf
push
and
jno
add
int3
xor
aaa
add
fnstsw
mov
sub
sbb
pop
pop
lods
or
enter
cli
add
nop
inc
mov
movsl
and
test
pop
lea
xchg
leave
enter
ja
adc
sbb
cwtl
nop
fsub
daa
push
xor
in
add
and
in
and
adc
adc
imul
mov
sbb
add
sub
add
cwtl
ss
mov
mov
adc
xor
mov
cltd
in
lods
dec
adc
mov
mov
add
stc
jle
lods
iret
pop
xor
xor
dec
es
fnsave
cmp
popf
imul
push
loopne
dec
mov
imul
push
ja
add
dec
sub
and
pop
push
out
ret
cli
or
std
or
insl
mov
push
int
outsl
xchg
xchg
xchg
adc
or
lret
push
fwait
sbb
add
jle
push
cmp
aam
adc
jp
fstl
inc
pop
adc
sahf
shlb
add
add
xor
adc
popl
xchg
sbb
outsb
frstpm(287
cmp
pushf
cmp
jl
enter
push
inc
xor
stos
inc
rol
subl
and
dec
xchg
or
add
add
add
xchg
add
pcmpeqw
jmp
push
add
sbb
push
pop
fmuls
cli
or
add
mov
and
dec
repnz
adc
adc
jmp
lods
inc
in
add
fmul
imul
mov
leave
pusha
dec
popf
xor
inc
xchg
mov
pop
fsubrl
ret
cmp
xchg
insb
rclb
sub
push
popf
and
stc
or
fistpl
fmull
push
push
ljmp
jg
mov
inc
pop
stos
xor
add
test
sub
or
dec
push
push
pop
jae
fstps
pop
iret
in
jne
xor
es
pop
test
mov
lods
inc
testl
add
jp
mov
fldcw
and
cmp
inc
add
adc
arpl
jne
push
mov
dec
pushf
mov
jle
mov
cwtl
pop
and
in
or
xor
pop
adcb
mov
jbe
adc
or
rorl
stos
cmp
xchg
xchg
and
pop
jbe
and
pushf
lcall
add
inc
into
cmp
jne
xor
sub
and
stos
filds
add
mov
in
shrl
cmp
and
lea
push
insl
fmulp
cmp
dec
loope
sub
and
pop
adc
cmpsb
addl
je
mov
scas
jae
adc
and
adc
cmp
jo
sub
and
mov
or
sarb
mov
movsb
push
lahf
aam
push
or
mov
sti
outsb
add
fistpl
pop
lea
and
add
dec
add
and
mov
pop
inc
dec
pop
and
and
add
pop
ret
jb
popf
dec
and
mov
test
insl
js
pop
add
xlat
pop
fwait
adcb
and
add
pusha
adc
popf
leave
mov
mov
sub
jno
mov
adc
ja
mov
fs
stos
inc
lods
fildll
mov
data16
pop
pop
icebp
out
mov
inc
sbb
push
push
cmp
or
sub
movsl
or
rolb
adc
lods
sub
push
xor
pop
fcoml
xchg
add
stos
fwait
mov
adc
dec
xchg
pop
aam
jnp
push
and
movsl
std
xor
sbbl
movsl
mov
mov
mov
jge
stc
sahf
jge
aaa
fcmovu
sub
rorb
mov
and
outsl
inc
movsl
jmp
movsl
adc
sbb
lods
mov
add
lds
fildl
mov
add
rclb
subb
popf
rclb
mov
pusha
or
mov
sub
cmp
or
loop
test
sbb
push
sbb
pop
and
or
lock
cmp
inc
cmp
lds
ss
imul
sbb
xor
xor
push
lods
mov
loope
fwait
lods
lods
lret
aam
repnz
fsubrl
aam
mov
fnstenv
insb
das
and
shrl
jmp
mov
push
jle
popf
add
xchg
push
push
mov
test
jnp
xor
cmp
stos
sub
inc
enter
sbb
in
adc
in
push
shr
pop
fsts
enter
mov
push
cmp
sbb
pushf
add
movsb
xor
adc
adc
inc
popa
rolb
lods
mov
jbe
cmp
mov
mov
movl
inc
add
mov
and
insl
mov
sbb
and
and
int3
pusha
sbb
out
sbb
adc
adc
ret
test
cmp
sub
aas
fs
add
xor
add
loope
cld
imul
ret
dec
dec
daa
lods
push
push
jl
pop
ja
ljmp
gs
pop
mov
adc
and
fistpll
test
leave
mov
aam
pop
push
push
dec
xchg
fmuls
dec
loop
repz
lods
popf
pop
mov
mov
xorb
sbb
and
cmp
orl
cmp
jecxz
icebp
call
inc
sbb
push
push
es
mov
movsl
imul
xchg
cmc
inc
dec
sub
and
mov
lds
sbb
add
call
mov
push
das
dec
ljmp
out
and
jne
aaa
push
fdivl
xor
test
std
adc
test
mov
outsb
sub
pop
sbb
cld
cmp
mov
adc
and
ljmp
xchg
pop
push
mov
adc
pop
add
rol
add
popa
mov
push
lcall
rolb
lcall
xchg
dec
mov
stc
sahf
add
and
push
sub
jo
jle
sarb
ljmp
iret
aas
inc
jbe
adc
fdivrs
or
int
and
fdivrl
shll
fistps
push
popa
jmp
das
add
leave
cltd
mov
dec
jmp
sbb
xor
adc
mov
in
sbb
dec
or
aas
in
xor
sbb
je
or
pushl
mov
aaa
mov
dec
push
fs
xchg
push
pusha
xor
push
push
cmpsb
pop
pop
sub
add
pop
adc
in
sbbl
and
shrl
inc
inc
add
dec
in
xlat
adc
inc
add
jecxz
sbb
push
pusha
xor
or
pop
leave
ret
pop
or
or
sub
or
loopne
inc
ljmp
and
push
cld
imul
jl
pop
push
push
jnp
insb
or
inc
cmp
adcl
inc
or
rolb
or
xor
mov
sbb
inc
push
div
add
dec
out
or
or
movsl
and
adc
cmp
data16
push
sub
push
adc
add
outsb
cmp
sbb
add
sub
fiaddl
xor
cmp
ds
inc
pop
sarl
pop
add
inc
push
jmp
stc
leave
add
mov
push
pop
xor
lahf
loope
mov
pop
stos
rcrb
bound
dec
and
jnp
adc
mov
adc
xor
xchg
adc
jb
dec
int3
or
sbb
data16
repnz
dec
pop
adc
adc
negb
inc
pusha
pop
das
movsb
xchg
fs
mov
or
adc
sbb
add
sub
pop
lahf
add
or
mov
xchg
stc
cmp
push
or
cmpsb
mov
adc
cmp
adc
loopne
mov
cs
mov
rclb
push
or
xor
ret
rorb
ss
mov
sub
hlt
add
pop
sti
or
jmp
fsubrl
arpl
or
add
sbb
pusha
in
int3
movsb
adcb
jne
scas
fs
sbb
arpl
adc
lcall
mov
jle
cmp
inc
dec
adc
xor
hlt
xor
lock
add
mov
inc
outsb
pop
mov
iret
mov
push
adc
mov
in
add
lods
mov
lahf
aam
mov
in
and
push
hlt
fmul
push
add
mov
bound
les
in
repnz
sbb
add
ja
cmp
mov
ja
push
xorb
xor
fbld
xchg
xor
cmpxchg
or
add
mov
jl
add
into
xor
or
out
dec
das
mov
mov
les
in
inc
or
shll
ja
nop
cmp
call
jmp
dec
adc
adc
cmc
lahf
adcl
xchg
repz
cmp
jae
fdivs
fiaddl
or
inc
pop
jmp
rolb
fcmove
dec
or
or
ret
nop
das
fs
adc
jp
add
ret
adc
xor
outsb
mov
push
rorb
es
jbe
add
cmp
inc
or
push
adc
jmp
shll
idivl
imulb
cwtl
mov
dec
test
mov
aaa
cld
in
ja
das
push
das
push
mov
cmp
inc
push
push
addl
and
inc
jno
lret
xor
push
or
xchg
mov
sbb
enter
std
std
ret
sub
iret
in
cld
mov
rol
push
out
xchg
jmp
imul
rolb
ret
pop
jl
or
add
jno
in
push
cmp
je
push
icebp
dec
cmp
or
popf
insl
sub
test
sub
push
adc
loopne
jg
mov
gs
fbstp
jmp
xchg
and
mov
mov
movsb
imul
push
insb
and
lods
repz
pop
dec
lret
mov
cmp
sub
push
inc
and
jae
imul
cmp
jns
lret
je
testl
rolb
jp
xor
out
mov
int3
dec
add
mov
inc
test
es
push
adc
clc
sbb
add
notb
fnstsw
test
je
and
add
xchg
add
test
add
sbb
pop
lcall
mov
sbb
fsubrl
push
dec
pusha
adc
mov
or
fldz
out
cmp
fbstp
pop
and
pop
fsub
pop
fsubrp
addr16
add
enter
mulb
lock
cmp
add
pop
add
and
xor
or
xor
shlb
add
ja
sub
subl
aaa
mov
adc
sub
mov
dec
xor
repnz
out
jmp
sbb
dec
or
and
lods
cld
mov
sub
push
push
lock
and
test
xor
sbb
xor
mov
sahf
xchg
jg
ss
adcb
inc
and
inc
lcall
pop
dec
iret
fstpt
in
push
cs
movsl
rcrb
jae
xchg
ss
sarl
xchg
clc
movsb
push
adc
push
es
in
sub
jp
and
and
push
lea
iret
add
ja
jbe
xchg
frstor
dec
push
or
xor
cmp
out
dec
testb
push
push
lods
arpl
lret
cmp
push
push
enter
push
adcb
call
dec
push
pushf
add
and
sub
cmp
add
sbb
leave
adc
mov
or
xor
xor
sub
sbb
pop
push
jecxz
xor
fcoms
dec
aam
ret
pusha
aaa
add
pop
mov
adc
cmpsb
pop
mov
aas
add
pop
pop
jns
or
jbe
push
push
lock
add
aaa
insl
aaa
adc
ljmp
or
rcll
or
inc
dec
sbb
fs
adc
adc
sub
sub
dec
in
cmpsb
arpl
cwtl
and
ret
add
or
pusha
in
jbe
or
push
push
outsb
xchg
or
lds
clc
inc
xchg
sbb
nop
inc
sbb
or
push
sub
imul
and
mov
dec
and
sub
jl
mov
imul
and
pusha
mov
mov
dec
loope
adc
push
add
adc
iret
repz
ss
pop
imul
mov
iret
testb
sbb
cmp
pop
insl
jle
mov
mov
shl
cmc
repz
repz
sbb
sub
dec
iret
repz
pop
insb
jge
lahf
mov
cmp
adcl
cmp
ss
imul
das
lods
xchg
cmp
lods
ret
pop
jnp
cmpsb
push
sub
dec
pusha
push
aas
mov
and
or
sub
xor
adc
incl
jge
push
adc
sub
push
mov
sbb
ja
test
lahf
add
sbb
ja
mov
jg
add
dec
inc
repz
aad
push
sub
mov
test
xor
adc
xchg
mov
daa
fs
sub
popa
jl
sbb
inc
sub
sbb
movsb
hlt
pop
stos
adc
mov
out
adc
lods
adc
sbb
lods
xor
mov
aas
das
add
adc
iret
rclb
mov
xchg
xchg
cmpsl
or
icebp
mov
test
imul
pushf
sub
dec
cmp
bound
xor
inc
xor
inc
mov
inc
push
mov
aam
cmp
dec
push
jmp
nop
cmpsl
xchg
sub
or
or
sbb
mov
fdivrp
add
inc
push
pop
sbb
push
xchg
mov
mov
dec
test
jle
es
dec
push
mov
dec
pop
inc
push
pop
jl
pop
add
xchg
sub
cltd
fiaddl
or
jnp
or
lcall
xchg
in
arpl
in
je
lock
popa
xchg
lret
call
sub
sub
xor
mov
movsl
push
sbb
adc
icebp
in
in
sub
enter
mov
push
adc
pop
int
add
in
and
mov
enter
lock
sub
push
adc
fisubs
movsb
push
mov
inc
add
add
sbb
xor
loope
xor
dec
and
push
or
jle
adcb
push
inc
pop
jb
sub
sub
sub
ja
push
or
adc
add
jne
add
loopne
lock
xor
sbb
out
leave
scas
aad
push
add
enter
mov
xchg
loope
call
or
mov
sub
xor
in
dec
push
sbb
call
insl
mov
and
push
dec
push
adc
push
leave
push
push
movsl
adc
adcb
into
movsl
or
add
cmp
push
sbb
fldl
mov
lods
sub
lds
nop
dec
mov
shl
imul
push
xor
leave
lock
add
ffree
adc
mov
mov
shr
adc
mov
fdivs
jge
leave
jno
addr16
test
ret
xchg
adcb
adc
cmpsl
jo
mov
add
cmpsl
xchg
sbb
aas
or
roll
push
add
push
push
or
mov
xor
push
jno
rolb
jl
xor
mov
mov
dec
or
mov
sub
arpl
cmp
mov
mov
mov
adc
int
cmpsl
xor
adc
lds
sbb
sbb
lds
daa
push
add
je
aas
sbb
xchg
adc
push
cmp
mov
cmpsb
inc
dec
pop
leave
push
xchg
or
jecxz
dec
and
and
pop
enter
add
sub
xchg
jg
adc
bound
push
sbb
xchg
sbb
add
ror
adc
dec
push
push
mov
es
mov
mov
roll
and
stc
repnz
xchg
test
pop
pop
sub
add
add
inc
cmpsb
xchg
xchg
push
sarb
dec
mov
jne
scas
or
movsb
push
negl
cmp
nop
mov
cmp
jb
add
std
adc
pop
push
sub
sub
sub
and
mov
enter
add
inc
xor
xchg
sub
xchg
add
cmpsl
cmp
stos
stos
lcall
mov
push
inc
pop
push
push
add
add
aad
mov
sbb
in
or
mov
enter
add
insb
mov
sbb
and
xor
sub
pop
dec
inc
lea
lea
lahf
sub
mov
and
sub
repz
mov
xchg
mov
xor
dec
ret
dec
data16
movsb
sub
add
add
in
push
cmp
or
sub
andl
andl
push
cmc
cli
mov
lds
inc
sub
outsl
or
into
lods
and
or
xor
jno
cmovo
inc
add
xorb
xor
addl
mov
roll
adc
add
mov
push
bound
add
xor
push
add
add
orb
adc
pusha
sub
sbb
xor
arpl
push
jae
rcrb
mov
sbb
mov
imull
mov
nop
add
in
sub
cmp
push
cmpsl
jo
cmp
mov
push
lods
inc
add
jmp
xchg
fisubrl
mov
sub
shll
inc
mov
inc
ds
add
daa
mov
add
cmpsb
cmpb
je
pop
push
mov
adc
add
cmp
push
adc
add
addl
sub
gs
test
pop
loopne
repnz
mov
mov
push
out
fwait
dec
sub
loop
adc
sbb
sbb
xor
or
or
inc
sti
adc
xchg
test
jb
out
adc
inc
fmuls
and
cmp
add
add
mov
xor
ret
add
sar
int
or
lahf
jl
cmp
jmp
mov
movsl
inc
into
cmp
out
adc
or
add
inc
or
je
or
dec
dec
test
sbb
sbb
push
loop
push
and
add
or
mov
shlb
jp
add
or
dec
pop
je
add
and
xchg
push
lret
movsb
fcmovne
push
insl
imul
push
push
ja
sub
pop
xor
dec
or
adc
jo
xchg
dec
push
loop
subb
push
push
sbb
xor
push
xchg
mulb
push
pop
aas
or
mov
xchg
pop
mov
sbb
fldl
ret
and
insb
or
inc
imul
sti
sbbl
setne
dec
shrb
rorb
add
lea
xchg
xchg
push
jae
je
push
pop
dec
xor
xor
ja
mov
sub
rolb
sub
sbb
ret
in
inc
loopne
and
xchg
adc
cwtl
sbb
inc
or
pop
movsb
rorl
add
xchg
in
ret
jmp
inc
lock
and
cltd
adc
lods
fmull
mov
ucomiss
inc
dec
push
mov
push
mov
inc
push
push
adc
mov
adc
pop
adc
xor
or
mov
pop
sub
test
mov
mov
pop
jg
cmp
mov
jl
xor
jmp
cmp
jl
or
sbb
popa
scas
xor
jp
adc
cmp
cmp
je
mov
mov
jg
clc
decl
add
inc
jmp
movb
mov
push
pop
orl
addr16
xor
sub
ljmp
repnz
jbe
sub
or
cmpl
loope
mov
loopne
sbbl
addb
push
dec
inc
pop
or
or
or
mov
jecxz
test
sub
test
in
jmp
sbbl
cmp
inc
push
dec
inc
dec
cltd
xchg
cmpsl
jb
in
sub
xchg
cmpsl
jb
lock
pop
cltd
nop
cmpsl
jb
in
xor
pop
and
into
cmp
cmp
adc
add
stc
lock
pop
push
push
sub
hlt
and
jmp
fisubrs
and
inc
out
sbb
xor
rorb
mov
add
xor
mov
xchg
xchg
inc
inc
adc
and
movsl
icebp
sub
clc
das
aam
push
sahf
repnz
lods
or
or
push
fcmovu
cmp
dec
movsl
test
push
pop
pop
les
pusha
mov
pcmpeqd
mov
dec
nop
adc
lods
add
pop
adc
inc
or
test
stc
dec
or
add
movsb
cmc
cwtl
pop
xor
ds
lea
adc
push
adc
and
adc
leave
mov
outsl
pop
imul
repnz
cld
in
push
sbb
int3
push
les
pop
push
pop
adc
adcb
ja
sbb
mov
cmp
and
data16
bound
sbb
jne
enter
loopne
jl
add
pop
or
add
adc
rcrb
fsubrs
aaa
shlb
push
or
lcall
dec
xor
pop
and
sub
in
adc
jae
mov
cltd
mov
and
cmp
test
mov
js
push
pusha
add
in
nop
mov
shll
in
ret
sbb
fnstsw
fsubs
and
inc
inc
in
dec
aaa
adc
jge
sbb
fadds
adc
mov
scas
or
mov
mulb
lods
cwtl
ljmp
mov
andb
and
cmp
push
andb
mov
fsubs
and
shr
aad
mov
inc
and
call
icebp
movsl
nop
cld
int3
mov
test
inc
sub
xor
shlb
adc
cmp
sub
or
bound
sbbb
add
jbe
mov
mov
outsl
mov
add
lods
test
push
xchg
pop
add
into
in
cmp
out
data16
pushf
pushf
or
add
mov
cmp
fstl
add
adc
push
or
stos
nop
jmp
xchg
push
sbb
mov
add
or
enter
adc
lods
pop
in
jae
mov
es
and
inc
mov
add
and
loopne
adc
pushf
pop
jbe
mov
stos
push
adc
sub
orl
loope
jp
fcoml
mov
add
imul
in
addb
adc
lret
add
test
mov
leave
gs
or
insl
xor
in
dec
jb
fcoms
sbb
add
sbb
pusha
shrb
lods
and
add
xor
orb
xchg
inc
std
into
mov
inc
pop
sar
daa
test
aaa
mov
xchg
push
test
stos
call
push
mov
shll
adc
popf
xchg
test
jbe
dec
pusha
add
test
push
pusha
cmp
pop
cmp
xchg
xor
xchg
adc
lods
movsl
xor
mov
push
or
push
cmp
inc
sahf
inc
mov
neg
sub
sub
adc
inc
ss
adc
push
inc
and
push
inc
movsl
cmp
and
add
lea
and
inc
add
sbb
add
inc
xchg
push
push
test
in
stos
sub
xor
dec
add
dec
sarl
push
popf
test
jmp
inc
mov
ds
mov
gs
imul
js
nop
xor
fistpll
adc
mov
or
rclb
or
cmp
xchg
jb
xchg
nop
sbbb
and
jae
out
imul
push
fldenv
xor
rclb
and
add
test
xstore-rng
cmpsl
subb
sti
push
inc
imul
sub
pop
adc
xchg
dec
add
xor
cmp
loopne
repz
fidivs
daa
mov
lea
xor
xor
sbb
fsubrs
cmp
ja
fcomps
lods
and
addb
add
or
rclb
dec
loope
inc
jge
and
and
cs
add
movsb
inc
js
add
insb
movl
leave
push
adc
lret
lret
add
add
shlb
int3
loopne
sahf
fwait
pop
lcall
jb
add
aam
jmp
cwtl
mov
xor
or
fld
leave
daa
or
sub
loopne
xchg
xor
jne
loope
or
ljmp
mov
cwtl
ss
add
cmpb
jne
stos
or
nop
jnp
test
pop
call
insb
add
cmpb
imul
sarl
femms
jne
mov
movsl
push
fidivl
loopne
push
sbb
pusha
push
imul
xor
arpl
aas
out
es
add
jo
jmpw
and
and
mov
mov
sub
clc
mov
or
push
addl
fcompl
int3
jecxz
cmp
sbb
cli
cmp
mov
adc
ret
inc
es
adc
addr16
sub
js
dec
sysexit
add
stos
rorb
int3
daa
popa
dec
xor
push
fldcw
lods
aaa
push
int3
adc
pop
inc
cli
jns
jle
pop
mov
sarb
adc
or
cmp
arpl
loop
stos
out
jecxz
js
int3
cltd
lods
or
dec
mov
xor
inc
mov
ss
lds
popa
add
and
xchg
push
sbb
dec
push
fldl
ds
mov
frstor
mov
leave
mov
aam
pop
stos
add
add
ja
and
mov
arpl
movsb
lcall
dec
lcall
push
pop
lea
sbb
sbb
movsb
in
adc
cmpsl
dec
rolb
mov
xor
mov
testb
inc
cmp
in
add
in
adc
inc
adc
orb
pop
sbbl
ret
adc
ljmp
cmpsl
test
push
dec
add
les
xor
nop
jo
push
call
in
shlb
lock
les
pop
daa
mov
mov
pop
test
cmp
adc
lods
jp
rorl
cmp
in
cmp
push
cmp
xchg
sub
dec
cmp
cmp
in
cmp
es
sub
scas
pop
sbb
adc
cmp
inc
rorb
sti
fidivrl
cmp
mov
adc
sbb
ret
pop
loope
lds
pop
lahf
dec
fs
add
mov
enter
add
cs
jb
xchg
mov
in
leave
faddl
pop
je
cmp
pop
lea
add
into
xorb
mov
adc
jle
dec
mov
movb
mov
mov
cmp
jne
mov
add
adc
mov
xor
das
jle
xchg
push
rcrb
add
and
insl
adc
jb
xor
mov
xchg
stos
sbb
and
cmp
insb
push
adc
xchg
lea
and
add
in
and
adc
jle
or
pop
mov
and
dec
jp
ret
in
in
add
icebp
loop
xchg
rclb
mov
xor
ss
jo
sbb
and
loopne
and
ret
mov
call
inc
xchg
or
jb
cli
mov
pushf
inc
sahf
xor
addb
jo
xchg
jo
adc
subb
js
and
cmp
es
push
fnsave
xchg
das
or
mov
sub
lock
nop
jmp
das
pop
loope
mov
sbbb
add
into
aam
dec
movsl
movsb
fldcw
icebp
or
subb
cs
or
add
mov
bound
jp
daa
dec
adc
movsb
lds
xchg
and
xchg
movsb
adc
sarb
inc
div
out
push
rorl
aas
push
push
mov
aam
push
fwait
adc
adc
loope
adc
aam
adc
push
adc
jmp
add
movsl
out
ja
cmp
xchg
cmp
loopne
jae
cmp
lock
jnp
mov
gs
in
arpl
outsl
pop
cli
ja
punpckhdq
push
sub
inc
lcall
les
xchg
mov
test
data16
sbb
insl
push
or
loop
cmp
mov
fiadds
loopne
dec
or
rolb
sbb
out
push
mov
fs
push
lods
cmp
xor
ret
jmp
pop
push
lret
mov
int3
adcl
dec
sbb
bound
sbb
push
and
jbe
mov
add
mov
xor
sbb
jne
sub
pop
pop
mov
add
repnz
pusha
ljmp
cmp
and
aas
pop
inc
stos
test
add
faddl
dec
inc
mov
loope
mov
mov
push
add
push
cltd
jb
hlt
or
pop
loope
cmc
xor
daa
addl
std
pop
mov
cmp
push
cmp
cmp
pop
fmuls
addl
jnp
or
dec
mov
test
in
dec
lret
cli
jo
mov
inc
xchg
push
enter
fisttps
xor
cmp
jae
mov
mov
call
dec
mov
pop
mov
add
jmp
jo
std
pop
sti
outsl
scas
std
dec
xor
mov
jmp
push
jne
push
outsl
adc
bound
cli
push
fdivrl
loope
adc
push
inc
fbld
mov
fists
add
pop
hlt
fwait
push
out
push
sub
sub
push
insl
jns
xor
jns
aad
pop
daa
sub
mov
inc
call
out
dec
inc
js
mov
add
xchg
jne
pushf
jns
sbb
pop
jo
ljmp
mov
ds
mov
or
cmc
cmpsb
push
lret
repnz
push
push
cmpsl
mov
filds
mov
test
jo
fldt
gs
lock
vmovaps
popl
testl
sub
stos
pop
add
outsb
add
jge
inc
sbb
push
cmp
push
imul
push
cmp
push
cmp
pop
rol
xor
dec
repnz
jmp
xchg
adc
sbb
or
xor
add
lcall
ficoml
add
adc
adc
stos
xor
std
mov
jmp
or
add
rclb
and
xor
into
and
ds
and
sbb
test
or
faddl
orb
adcb
test
pop
js
or
in
sub
test
mov
inc
push
cmp
push
mov
inc
ja
or
movsb
sbb
addl
test
xor
add
dec
inc
and
and
push
pusha
xchg
and
add
adc
pop
push
sub
sub
popf
and
movl
and
rcrb
cmpsl
leave
push
fisubl
pusha
pop
add
mov
jne
mov
adc
lods
arpl
int3
mov
mov
xor
add
push
pop
je
pop
addl
mov
das
push
and
sub
sub
stos
add
fmuls
and
sbb
jecxz
add
fldcw
lods
daa
ds
mov
repnz
testl
mov
xchg
add
dec
or
add
icebp
dec
iret
outsb
test
xor
xchg
subb
push
push
or
pop
orb
adcb
or
sub
orb
aaa
roll
je
fdivrs
sbb
arpl
xchg
mov
push
and
mov
pushf
pop
add
and
sbb
pop
inc
repz
xor
cmp
shr
pop
jne
sub
les
cmp
pop
mov
adc
mov
inc
inc
mov
cmp
pop
push
cmp
shll
sub
rolb
sahf
mov
shrl
add
movl
test
out
xor
mov
sbb
outsl
pop
aaa
dec
pop
sbb
sbb
xor
push
outsb
add
inc
lods
add
xchg
pcmpeqd
jge
punpckhbw
and
call
ret
ja
arpl
cmp
add
sbb
dec
stos
xchg
dec
sbb
test
sub
add
mov
test
inc
dec
sub
lods
or
sbb
push
mov
sbb
push
fisubs
adc
sarl
add
jo
frstor
push
pop
xchg
push
add
add
in
shll
cmp
test
nop
addr16
leave
shl
movsb
mov
js
popf
pop
je
push
jo
mov
outsl
test
xchg
mov
cs
aad
push
ss
xchg
jne
lods
cmp
mov
clc
les
inc
lock
aaa
jmp
sub
adc
push
cmp
scas
fnstcw
or
xchg
ficomps
outsl
sbb
int
rclb
pop
sub
cmp
xor
sbb
or
mov
aaa
jo
inc
and
rcr
adc
push
ret
lds
test
daa
xor
lcall
sub
mov
and
insb
dec
aam
xchg
and
std
or
inc
cli
aam
test
jne
subb
and
test
push
and
enter
lea
mov
mov
lods
jne
xor
leave
fsubl
add
mov
push
or
push
mov
mov
jns
xor
nop
daa
xor
pop
pop
inc
ror
or
fcomps
and
jb
sbb
rcl
push
xor
push
dec
fsub
jne
cli
sbb
xor
pushf
add
xchg
xlat
xchg
sub
movl
cmp
lods
cltd
jbe
xchg
and
in
sub
add
and
and
lret
mov
je
push
aad
inc
pop
mov
fs
ret
daa
add
pop
fwait
sub
dec
xor
jns
push
mov
sbb
push
pop
xor
adc
push
pusha
popf
movsb
pop
xorb
pushf
sub
lods
nop
ret
daa
fs
sub
push
cmp
mov
inc
xchg
inc
jg
cmp
test
xchg
je
incl
loopne
leave
sub
add
adc
inc
and
sarl
stos
push
push
in
jne
sbbl
pop
movsb
xor
add
add
insb
add
test
mov
or
outsl
lock
cmp
add
fs
in
or
mov
or
cwtl
lods
add
faddl
jo
xor
pop
pop
xchg
jnp
push
daa
adc
rclb
icebp
popa
jmp
jb
or
jecxz
lahf
ret
inc
clc
xor
add
popf
mov
jo
jmp
inc
adc
push
mov
ja
cmp
arpl
jp
outsb
lods
cld
dec
mov
into
and
inc
add
das
fs
inc
rcrb
mov
and
loope
add
pop
imul
repnz
shrl
mov
jp
ss
jo
aaa
mov
mov
out
mov
add
or
inc
sub
sub
or
xor
mov
nop
mov
lock
test
inc
cmp
inc
jb
pop
pop
lea
nop
andb
push
jle
arpl
push
or
gs
decl
or
add
rclb
xchg
jp
xchg
add
inc
add
or
lea
sub
clc
or
rolb
shlb
push
mov
or
cmp
mov
cmp
mov
jb
lea
int3
into
mov
mov
outsb
fstps
shr
addb
cmovp
mov
out
mov
or
ja
or
push
mov
jge
mov
pop
and
ror
stc
jo
in
mov
jp
push
pop
push
sub
xor
and
add
xor
lock
into
pop
mov
stos
inc
cmp
jb
jmp
xchg
cmp
sub
mov
sarb
or
sub
ret
dec
mov
inc
push
ljmp
test
adc
pop
ret
sbb
adc
cmpxchg
stos
sub
xor
pop
adc
dec
pop
ljmp
mov
pop
add
xchg
fisubrs
sub
sbb
sub
cmp
cmpsb
push
or
adc
shr
push
sahf
fldcw
repnz
dec
test
xchg
js
cmpsl
xchg
ss
es
add
push
sub
or
in
lahf
fmuls
mov
add
in
fmuls
lahf
das
sbb
and
sub
pop
pushf
adc
mov
mov
and
mov
dec
std
cs
jne
popa
iret
mov
imul
outsb
inc
adcl
sub
les
pop
iret
inc
inc
pop
dec
sub
arpl
xor
jns
out
popa
bound
sarb
pop
xor
inc
inc
cmp
pop
sbb
push
ja
negl
lock
movsb
test
push
inc
pop
inc
out
or
cmp
add
and
xor
std
pop
test
es
or
popf
stos
ss
add
add
ljmp
loopne
add
inc
test
jo
lahf
or
int3
shr
frstor
cmpl
divl
cwtl
loopne
push
mov
push
sub
add
pop
and
pop
fld
push
mov
out
lret
test
mov
cmp
lea
cmp
add
xor
mov
sbb
mov
fcoml
cmp
shl
jl
sahf
aas
sub
inc
cmp
sub
cmpl
pushl
test
jle
inc
jmp
popa
fwait
sbb
incl
lea
inc
dec
inc
ud2
sbbl
movsl
sub
xor
pop
lea
xorl
or
pop
fildl
mov
mov
xchg
xchg
scas
add
loop
push
les
aam
add
inc
insl
insb
clc
inc
cmc
incl
or
jl
fsubrl
les
rolb
dec
imul
aam
js
mov
in
lock
sbbb
aam
outsl
add
sbb
cmp
lea
sahf
inc
pop
jp
adc
das
xlat
mov
mov
or
sub
inc
sub
adc
bound
pop
pop
mov
std
es
xor
cmp
lcall
fwait
loopne
test
shll
addb
pop
or
cmp
sahf
testl
nop
mov
lret
or
sbb
call
sub
mov
fucom
stos
nop
xor
adcl
popa
xor
xchg
and
cmp
cmp
xor
pushf
push
inc
cmp
dec
adc
or
jl
jo
test
and
shrb
adc
dec
mov
loop
loope
out
and
mov
outsb
mov
or
mov
sbb
sbb
push
mov
dec
cwtl
adc
movsb
hlt
or
gs
push
jl
pushl
xor
adc
cmp
inc
and
add
int
ret
iret
push
cmp
sbb
mov
outsl
mov
test
inc
or
and
push
out
push
push
inc
pop
mov
inc
sbb
cmp
inc
mov
shrb
mov
arpl
xchg
addr16
popf
sbb
or
sub
loope
andl
ret
sbb
add
push
mov
or
sub
mov
add
inc
lret
xor
mov
shll
adc
and
xor
add
sbb
xor
xor
fmull
sub
pop
jmp
or
outsl
mov
mov
mov
cmpsl
xor
push
push
cwtl
adc
xchg
jo
test
or
in
in
jmp
fwait
dec
movsl
ljmp
popf
cmp
test
faddl
xorl
inc
popa
popf
inc
rorl
xor
sub
and
add
dec
fcoms
push
add
mov
cs
push
les
in
mov
cltd
or
or
mov
dec
add
adc
pusha
xor
mov
inc
inc
add
int3
pop
jb
mov
enter
cmp
mov
clc
adc
insl
call
push
lock
lea
movl
sub
js
add
ficoml
mov
enter
push
pop
push
int3
add
sub
daa
rolb
add
sub
inc
inc
and
push
jne
mov
mov
xchg
push
and
mov
jno
icebp
or
or
lcall
or
adc
pusha
push
push
and
jecxz
ret
idivl
loop
push
adc
push
repz
add
or
adc
add
clc
or
mov
push
aam
out
adc
and
or
and
stc
sub
lock
xor
cld
jge
mov
cmpsl
pushf
adc
out
enter
insb
loopne
jmp
inc
es
adc
lret
shlb
test
dec
bound
add
cmp
dec
aam
in
sbb
std
enter
inc
ss
jno
ror
aas
xor
cmp
ret
notl
les
ljmp
or
cmp
push
mov
mov
das
pop
daa
adc
sbb
jnp
adcl
xchg
addl
and
pushf
mov
fidivrl
push
mov
pop
fs
aas
adc
lcall
mov
int3
and
sub
int3
xor
fdivrs
sub
pushf
mov
and
ss
xor
mov
aam
adc
ljmp
lea
push
ret
imul
lock
popf
nop
mov
paddq
mov
mov
repz
push
dec
pusha
mov
rclb
jge
flds
lock
pop
test
mov
je
js
je
adc
mov
xlat
out
dec
mov
dec
ja
je
lock
and
popa
ja
rclb
or
movl
andl
pushf
add
mov
test
test
addr16
inc
or
mov
inc
mov
loop
add
jmp
dec
add
pop
sti
and
dec
mov
movsl
std
cmp
jmp
xorb
and
mov
daa
insl
jne
fbstp
in
lock
sbb
pop
inc
dec
pop
sbb
add
mov
cs
push
push
pop
or
cwtl
lcall
push
es
xor
pop
cmpsb
test
sbb
pop
inc
pop
push
pop
mov
sub
xor
and
mov
mov
mov
mov
jmp
lcall
mov
jmp
xchg
bound
fwait
pop
xchg
cmp
sub
dec
sbb
dec
insb
sarb
or
xlat
adc
jecxz
sahf
mov
jecxz
sbb
adc
ret
cmp
push
pop
mov
jle
lahf
sub
nop
cmp
das
mov
push
movsb
pop
repnz
test
nop
addr16
push
flds
pop
adc
mov
dec
mov
outsl
cmpl
xor
js
pop
aaa
mov
xor
jmp
adcb
and
dec
jle
pop
jo
adc
cmp
in
adc
sub
shlb
mov
es
ja
dec
test
dec
push
xor
sbb
adcb
cmp
jl
inc
or
rorb
out
cld
and
divb
mov
and
dec
adc
sar
mov
testb
pop
fadds
out
xor
pop
arpl
sub
push
insb
sbb
inc
inc
mov
cmp
jg
dec
push
sbb
hlt
rclb
push
push
call
sbb
inc
push
push
push
dec
inc
popf
mov
popa
adc
inc
loopne
xchg
cmpsb
mov
cwtl
jle
loop
xchg
movsl
jnp
pop
dec
jecxz
popf
cmp
jae
pop
jmp
add
loopne
icebp
mov
push
sub
or
inc
push
inc
js
or
pop
mov
push
mov
xchg
lods
pop
pop
add
gs
popf
les
wbinvd
sarb
push
mov
mov
or
enter
inc
scas
push
out
clc
dec
jne
add
popa
repnz
test
ficompl
cmp
lahf
mov
add
push
mov
add
push
inc
aas
shrb
push
pop
sarl
xchg
int3
mov
shr
cli
inc
or
push
push
and
je
mov
in
mov
insl
sbb
popf
rcr
jl
push
fimull
js
fs
fistl
enter
in
mov
xchg
push
or
insl
shl
mov
mov
pop
shl
fisttpll
fcom
pop
fimuls
dec
xchg
faddp
dec
adc
xor
cli
mov
add
movzwl
inc
mov
inc
js
stc
lock
shr
cmp
out
aaa
roll
xchg
cmp
and
or
xchg
xchg
push
pop
lds
pop
fwait
cmp
cwtl
mov
loope
cld
dec
add
jge
mov
sbb
sbb
dec
es
sahf
add
test
sbb
and
adc
in
std
test
add
add
fdivrs
outsb
push
scas
push
cmp
or
mov
movb
or
cmp
cmpb
shll
and
inc
sbb
cmp
jne
jmp
std
pop
inc
aaa
inc
rolb
add
xchg
pop
in
loopne
pop
das
add
inc
mov
pop
jl
cli
int
mov
movsl
movsw
push
jno
add
cld
movsb
int
or
lcall
adc
mov
adc
mov
out
inc
mov
adc
movb
or
cmp
shlb
add
mov
pop
or
add
add
inc
pushf
cmp
jbe
pop
movsbl
xor
push
ss
outsb
cmp
xor
push
adc
repnz
out
shlb
jbe
push
cld
je
push
inc
cwtl
jnp
push
and
adc
test
pop
insl
lods
loope
sub
and
mov
mov
xor
pusha
arpl
push
xchg
outsl
test
xor
sbb
or
push
inc
test
stos
fldt
push
mov
cmp
fs
inc
and
faddl
jl
adc
sbb
dec
cmpsl
hlt
inc
mov
xor
inc
or
xchg
mov
push
mov
push
cld
cmc
ss
fsubs
sub
push
add
adc
mov
rclb
mov
mov
dec
ja
sti
xor
popf
popl
or
mov
sahf
sbbl
jle
push
add
add
xchg
xchg
xchg
add
int
xchg
or
jmp
or
jmp
or
jno
int
int
jmp
push
jmp
por
jmp
adc
int
int
pop
adc
push
adc
dec
adc
dec
adc
jmp
push
jmp
pop
jmp
sbb
xor
int
xor
jmp
sbb
es
and
jmp
push
jmp
pop
jmp
and
or
int
or
jmp
and
orps
mov
aas
push
mov
mov
dec
into
push
xchg
add
mov
push
and
xor
inc
repz
repz
push
pop
pusha
gs
repz
push
je
jle
cmp
repz
lea
iret
repz
iret
repz
mov
sarl
fucom
or
add
dec
incb
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
sub
sbb
and
aas
or
cld
repz
jle
subl
xchg
pop
jmp
fdivrp
es
and
fs
cmp
jle
mov
jno
mov
adc
xchg
jmp
push
ret
pop
aas
xor
add
push
pop
jae
popa
adc
adc
fbstp
sbb
pop
movsb
xchg
shll
lahf
and
je
jp
cmpsb
mov
sub
sub
mov
xor
push
inc
cmp
jbe
dec
test
pop
jbe
pop
inc
adc
or
jae
loop
in
mov
je
sbb
inc
mov
sbb
inc
push
push
sbb
pop
pop
lds
scas
in
jl
fiaddl
dec
inc
insb
jle
sbb
mov
lods
push
add
sbb
add
lods
dec
mov
movsl
popf
or
les
sub
and
push
sub
popa
push
inc
push
jle
aam
adc
addb
fs
test
inc
mov
pushf
test
add
dec
inc
sbb
stos
and
je
jp
inc
xor
add
sbb
xor
or
jno
movsb
xor
pop
in
fstp
mov
add
mov
inc
add
mov
cmp
lret
sub
mov
adc
adcl
and
xorl
inc
iret
stos
rorl
les
cltd
rcll
imul
addl
and
mov
jns
cmp
shl
shrb
adc
jecxz
or
xor
mov
mov
xor
lcall
insb
fldl
mov
xor
les
jne
inc
arpl
xlat
andl
outsl
xor
add
test
sahf
iret
jne
push
mov
pop
or
aas
or
fnstsw
jl
clc
or
pusha
pushf
sbb
jmp
mov
and
jne
and
dec
jne
push
xlat
push
icebp
jno
aas
jo
es
data16
sub
movl
push
loopne
sbb
jg
push
mov
pop
test
jno
loopne
pop
sub
ds
int
testl
je
dec
maxps
or
aas
lahf
enter
cld
push
clc
lock
sbb
xchg
clc
sbb
sbbl
xor
mov
or
adc
pusha
or
popf
cmp
cmp
pop
sub
pushf
inc
movsb
and
orl
jo
scas
xor
sub
loop
js
lock
add
mov
pop
sbb
clc
ds
xor
ret
out
lea
mov
test
xchg
sub
incl
neg
adc
jp
xchg
mov
dec
ds
mov
sbb
andl
xchg
push
loopne
mov
ret
xchg
and
arpl
or
test
push
or
xor
lods
jo
ret
popa
push
out
bound
push
mov
pop
or
or
xchg
ficoml
jno
in
nop
pop
or
pop
mov
and
xchg
sbb
test
cmp
fsubl
in
das
rcl
jp
push
push
mov
add
push
jne
cltd
mov
aam
push
add
pop
push
sbb
xlat
xor
jo
or
popf
mov
mov
sub
jne
add
and
push
adc
xchg
sbb
pop
xchg
insb
mov
test
cmc
inc
enter
push
xor
adcb
inc
add
scas
shrb
add
xchg
aam
pusha
scas
jp
bound
stos
push
push
shrl
out
lods
rcrl
add
mov
into
sbb
adc
adc
das
mov
or
push
fildl
iret
mov
or
adc
mov
cmp
loopne
sub
sti
inc
add
dec
cmc
cltd
and
jno
dec
loopne
inc
cmp
daa
xlat
add
xor
sub
popa
pop
pop
or
mov
pushf
jne
add
xchg
fdivrs
jo
pop
or
ret
mov
or
fadds
xchg
les
fsubr
add
push
test
cltd
repz
cmc
cmp
push
pop
add
das
push
ret
or
enter
fdivl
sbb
in
xchg
inc
cmp
sbb
add
mov
or
ret
add
sbb
jp
std
loopne
mov
fldenv
sbb
xchg
out
sub
or
lcall
inc
jp
dec
sub
mov
xchg
or
xor
in
inc
clc
or
seto
fistpll
push
mov
popa
cld
push
nop
push
mov
out
mov
mov
dec
mov
daa
sub
and
add
aad
hlt
dec
and
pushf
cmp
jmp
ffree
add
in
ret
cmp
xor
adcl
leave
jmp
pop
in
sbb
add
push
push
xor
rolb
mov
push
outsb
std
enter
pop
jl
xor
shl
inc
add
fmuls
and
inc
jbe
dec
inc
dec
inc
push
inc
aaa
dec
ja
push
aas
dec
push
cmp
pusha
fs
pop
insb
jo
cmp
and
nop
add
in
in
jl
sbbb
mov
and
mov
cmpsb
mov
cwtl
pop
pushf
jbe
push
mov
or
mov
add
imul
rclb
add
repnz
jo
lcall
add
sbb
cs
shll
sub
mov
pop
inc
ljmp
and
jbe
or
sbbl
mov
cmp
jl
sub
lea
cmp
mov
add
mov
or
popf
testb
sbbl
xchg
negl
push
mov
loopne
std
jmp
push
call
and
popa
test
in
or
pop
jl
jmp
out
sbb
push
mov
pop
fisubs
mov
loopne
mov
clc
push
mov
pop
sti
cmp
je
inc
adc
jge
inc
lahf
jl
rcr
dec
lret
jmp
rcrl
pusha
cmp
xorb
inc
fcmovbe
pop
int3
jne
jae
int
xor
das
sub
cmpsb
fistpl
mov
loopne
popa
rorl
jl
push
xchg
popf
movsb
outsb
sbb
push
fwait
dec
push
jno
imul
fs
je
mov
sub
cmp
inc
fdivrs
jns
sbb
jg
add
sti
jge
inc
cmp
jg
hlt
cmp
jl
cmp
jle
ret
dec
push
ret
add
imul
sub
aaa
mov
sbb
or
adc
mov
fsubrl
or
iret
sub
test
xchg
mov
jg
aam
pop
jb
cmpb
jne
fcmovb
jg
call
pop
mov
adc
inc
cmpsb
push
jbe
ret
mov
jge
pop
cltd
mov
dec
add
cmpb
cmp
inc
popa
inc
jmp
or
adc
sub
test
in
or
nop
push
pop
nop
lock
add
jne
xor
pop
nop
mov
dec
mov
pop
or
xorb
xor
mov
fcoms
mov
lds
jo
mov
adc
adc
jmp
inc
mov
out
in
inc
inc
jns
xchg
mov
cmp
jns
dec
arpl
sbb
ljmp
lahf
sbb
sub
push
in
repnz
icebp
cmp
cli
cmpsl
mov
orb
sub
cmp
je
xor
add
pop
push
imul
inc
mov
scas
mov
mov
and
movsl
popf
aam
xor
lods
inc
in
pop
mov
test
leave
xchg
lea
gs
call
lods
popa
and
call
dec
jno
jne
xchg
cmp
shlb
adc
movsbl
mov
mov
push
or
sub
faddl
mov
sub
inc
jo
fbstp
xlat
jmp
inc
shlb
xor
test
shll
pop
push
sub
or
xchg
popa
jno
lcall
dec
add
dec
or
add
dec
add
fisttps
ret
mov
rcl
or
int3
loope
scas
mov
xchg
pop
cltd
or
test
mov
add
mov
mov
push
push
ret
adc
cwtl
mov
adc
adc
nopl
pop
fldl
bound
lea
adc
or
xor
cmpsl
dec
pushl
push
adc
mov
xor
outsl
and
or
adc
or
mov
cltd
or
jle
xorl
imul
add
mov
xlat
int
inc
or
jnp
pop
test
add
dec
popa
repnz
sbb
push
push
cmp
mov
clc
dec
pop
push
xchg
xchg
and
add
add
sbb
gs
into
jo
cmp
cmp
xchg
or
mov
sti
inc
dec
dec
inc
or
jle
arpl
into
popf
mov
jmp
pop
jbe
adc
inc
dec
fwait
cmp
cmp
add
push
sub
iret
sbb
mov
stc
sub
out
add
mov
push
cmp
rcl
imul
adc
js
sbb
pop
push
jg
xchg
rcrl
dec
inc
rolb
and
shlb
lock
xchg
xlat
rorb
mov
mov
cs
xor
shlb
xorl
hlt
sahf
ret
inc
push
jle
lock
in
push
push
push
arpl
inc
fwait
pop
je
daa
mov
test
imul
inc
je
adcl
ret
xor
daa
mov
fsubl
test
pop
or
add
in
dec
out
mov
mov
leave
lret
push
test
sub
or
pop
and
push
mov
xchg
pop
xor
pop
sub
push
mov
inc
enter
addb
movsl
sub
xchg
jo
orl
adc
push
loop
dec
test
sarb
sbb
push
xor
pop
gs
sbb
adc
inc
push
loopne
nop
and
cs
inc
in
scas
xchg
jb
xor
lods
jl
aas
push
mov
or
dec
inc
movsb
imul
xor
fwait
inc
or
or
adc
pop
dec
lock
clc
insb
add
xchg
jg
jmp
push
mov
pop
repnz
xchg
hlt
xlat
hlt
pop
hlt
repnz
jl
cmp
orl
mov
hlt
push
jmp
loop
loop
shl
es
push
scas
mov
mov
pushf
mov
push
icebp
xchg
adc
pushf
cmpsb
adc
xor
mov
inc
gs
push
fstpl
jnp
rcr
scas
out
test
cmp
aas
lcall
mov
lea
adc
test
imul
cmp
test
sbb
mov
mov
jne
xor
mov
addb
jl
or
inc
adc
pop
lock
ja
push
or
jecxz
fldl
cltd
or
cmp
fsubrl
out
test
inc
inc
sub
cmp
sarl
shl
aas
in
rol
fimuls
enter
hlt
imul
or
in
dec
fdivr
mov
sbb
pop
push
loopne
mov
sbb
call
mov
push
inc
push
inc
xchg
push
cli
pusha
xchg
xor
add
call
ss
xlat
lahf
xchg
mov
adc
sub
ss
sbb
cmp
mov
jge
adc
dec
addl
push
jp
push
rorb
jl
inc
pop
out
lahf
pop
rcr
or
xchg
xlat
rorl
jbe
call
push
test
mov
rolb
aaa
or
push
or
inc
inc
cmp
cmpl
sub
test
mov
push
push
lret
cmp
roll
push
inc
mov
sti
xor
jle
mov
jge
sti
add
push
movsl
mov
sub
add
cwtl
dec
cltd
sub
adc
add
jb
or
aaa
pop
fdivrs
add
popa
push
push
shll
xor
inc
test
cmp
add
push
push
sub
sub
and
pop
jb
jns
movsl
push
adc
or
xor
dec
inc
or
pop
lock
dec
pop
push
out
xchg
add
adc
or
ja
dec
jp
das
lods
inc
aam
jle
add
pop
cmp
lea
mov
and
ficoms
mov
insb
int3
adc
or
fdiv
inc
testl
sub
movsb
dec
sbb
test
mov
or
cld
mov
fwait
inc
sahf
sub
push
jae
leave
lods
imul
xlat
pushf
xchg
or
in
inc
or
mov
push
in
sbb
pop
add
insb
dec
shlb
sbbb
in
lods
ret
pusha
or
push
loopne
jno
add
dec
loopne
push
pop
lret
je
cmp
pop
pandn
cmp
inc
inc
pop
and
out
rorl
push
xor
push
adc
cmp
xchg
popa
rcrl
loopne
push
and
xor
imul
test
mov
jge
mov
pop
add
paddq
and
adc
adc
dec
sti
cmp
je
xor
push
jmp
inc
add
mov
push
add
in
dec
jbe
nop
je
add
bound
and
sbb
pop
scas
mov
adc
push
imul
je
vmovsldup
fmuls
and
movsl
adcb
mov
in
es
push
scas
jmp
and
loopne
sub
and
bound
insb
cmp
jb
popa
jg
and
push
outsb
popa
hlt
or
pop
jbe
push
xor
test
xchg
push
push
adc
xchg
frstor
repnz
jo
inc
mov
add
fildll
push
add
jmp
ja
pop
pop
fsts
and
int
push
dec
cmp
push
pop
ret
mov
mov
mov
icebp
stos
movsb
daa
outsl
mov
add
or
add
sbb
xchg
mov
lea
sbb
add
sbb
lcall
add
inc
push
movsl
and
xor
inc
loop
mov
push
and
push
call
dec
or
movsl
loope
fbld
test
add
jbe
mov
mov
jne
sub
jo
stc
jb
testl
cmp
mov
adc
xor
scas
cvttps2pi
and
iret
or
lea
pop
jno
xor
in
ljmp
mov
fsubs
movsb
cmp
dec
mov
es
add
adc
xor
mov
xor
and
or
cmp
loope
mov
pusha
stos
test
add
lock
fdivrs
mov
test
xlat
xchg
loop
inc
loop
mov
xor
in
dec
xchg
and
movsb
imul
pop
jb
pop
push
lods
add
cmp
xchg
gs
sub
addl
loopne
pop
sahf
add
mov
xchg
fcmovne
mov
and
xor
mov
lcall
cvttps2pi
and
pop
mov
cmp
addr16
lock
xchg
xchg
leave
jl
aam
dec
push
push
add
imul
adc
xlat
cwtl
in
or
dec
add
shlb
or
jns
movsl
or
dec
or
fs
and
push
das
call
add
jp
shlb
add
xor
sbb
imul
or
push
add
xor
inc
jecxz
test
dec
inc
imul
jbe
lret
push
jnp
or
sbb
mov
inc
mov
addl
lock
inc
insb
xchg
push
pusha
ret
push
es
mov
mov
ds
jge
dec
and
xor
shl
pop
inc
sub
or
push
add
loope
xchg
cmc
sub
xchg
cmpl
dec
and
cmp
scas
outsl
add
cmc
adc
and
inc
cmp
and
je
popa
mov
mov
or
movsl
out
loop
ret
lahf
movsl
pop
dec
pusha
xor
pusha
push
test
sub
jmp
es
or
lock
clc
add
sbb
push
test
cmpsl
sarb
test
iret
sbb
repnz
push
adc
mov
sub
or
adc
insb
testb
push
dec
fs
test
mov
rol
clc
xor
adc
push
sub
xchg
ja
or
andb
or
loopne
das
xchg
pop
lret
sbb
mov
jo
repnz
es
xchg
mov
mov
xor
xchg
jle
je
inc
nop
lar
and
cmpl
inc
xchg
les
push
cmp
loope
addr16
movsb
push
lods
jne
nop
sbb
movsl
shl
fcmovnb
loopne
or
dec
cmp
jmp
xlat
mov
push
pop
pop
sub
lret
incl
in
jae
nop
adcb
sub
repnz
adc
dec
sbb
in
call
push
or
in
mov
js
add
sub
sub
arpl
jnp
add
fimull
mov
ret
add
scas
add
sub
lods
jge
lahf
or
inc
lret
xchg
decb
imul
cmpsl
addb
imul
testl
fsubrs
fdiv
scas
xor
fadds
or
mov
jo
in
mov
dec
adc
sbb
or
imull
sbb
push
dec
repnz
add
lret
popf
jle
add
js
mov
inc
push
jl
sub
call
inc
mov
adcb
push
fmull
add
or
pop
jnp
mov
mov
shr
add
lret
sbb
adc
dec
sub
cmp
fisubrl
or
sub
pop
or
rcll
push
mov
or
xchg
pop
mov
sub
inc
ret
adc
xor
daa
icebp
andb
repnz
inc
adcb
mov
clc
cltd
adc
subl
lret
and
cmp
xor
or
lea
mov
cmpsl
mov
adc
add
sub
sub
data16
sbb
inc
xor
or
pusha
pop
jo
fcoms
repz
mov
and
sub
add
cmp
fmul
leavew
inc
addb
mov
jb
adcb
dec
adc
jae
and
mov
or
jo
mov
cwtl
xchg
repz
cmp
divl
pop
add
cmp
gs
scas
add
adc
push
mov
imul
sub
fisubrs
push
test
aaa
add
mov
and
jl
sub
cmp
ljmp
pop
push
push
push
lahf
dec
loop
ds
add
es
loopne
out
xlat
insb
push
adc
rclb
imul
dec
add
call
jle
pop
dec
scas
jmp
or
orb
and
add
mov
aam
lret
adc
in
push
add
jge
dec
rcrl
sbb
arpl
insl
pop
inc
push
inc
imul
sbb
dec
stos
adc
mov
mov
movsl
cmpsl
andb
sub
or
clc
dec
out
push
mov
or
xchg
cmp
test
push
pop
add
or
add
add
je
jne
loopne
rclb
in
fs
push
push
push
add
rolb
pop
clc
lods
or
cmpl
and
push
mov
movsl
pop
jne
or
fdivr
mov
xlat
mov
adc
jnp
adc
jmp
and
je
popf
mov
or
adc
cli
dec
ja
jle
mov
dec
pop
sbb
and
sub
repz
sarb
sub
orl
pop
dec
faddl
jl
pop
dec
test
je
cmpsb
sahf
hlt
popa
lods
sub
jg
aas
ja
das
dec
mov
movzbl
insb
outsl
jecxz
xor
push
mov
lcall
ret
adcl
mov
orb
sub
subb
jl
mov
lods
pop
test
sub
adc
and
xorb
mov
xchg
pop
rcl
add
cmp
dec
jnp
add
or
cmpl
rcrb
popf
or
add
lahf
push
dec
adc
enter
and
and
dec
sbb
cmp
push
or
or
adc
in
aaa
in
adc
jns
cmp
dec
jg
mov
mov
add
add
xchg
or
dec
mov
sub
pop
adcb
add
rcrl
dec
xlat
hlt
or
xchg
adc
cmpsb
adc
pop
gs
hlt
sub
lods
mov
aaa
incb
fisttpl
cmp
xchg
or
je
sti
xor
mov
sbb
lea
mov
cmpsb
or
inc
pop
loop
mov
lea
enter
ret
push
movsb
imul
adcb
addb
cmpsb
mov
mov
pop
pop
mov
fnstenv
cmp
jle
ret
cs
fmull
fs
in
out
push
lea
jl
stos
jo
js
xchg
stc
jl
or
jno
add
add
test
adc
and
push
or
sbb
cltd
inc
pushf
nop
mov
and
sbb
iret
iret
in
lods
or
movl
dec
mov
mov
sbb
lea
stos
or
mov
rep
add
or
xorb
mov
mov
push
mov
pusha
or
outsl
ficoml
mov
mov
xor
sbb
lea
push
test
mov
in
cld
adc
ds
cmpb
cmp
adc
sub
dec
jo
enter
insb
out
jb
insl
int3
loop
out
jns
ss
push
cwtl
lods
adc
or
cmp
mov
mov
add
popa
mov
cmp
fwait
out
mov
push
push
push
sbb
insl
or
dec
test
rcrl
jne
enter
dec
cwtl
xchg
clc
adc
xorb
xorb
arpl
sbb
mov
cld
cld
pop
sarb
pop
mov
sub
xchg
loop
xor
rclb
adc
jne
adc
add
rolb
roll
rol
jg
or
lret
inc
mov
inc
subl
push
lea
mov
in
in
sbbl
call
imul
and
mov
loopne
fmuls
cmp
in
push
in
mov
jbe
fimuls
lret
push
push
and
pushl
pop
inc
sbb
pop
jb
mov
rorl
pop
sbb
mov
jne
rcrl
jmp
push
mov
nopl
xchg
push
daa
inc
stos
notl
pop
adc
pop
or
mov
push
sbb
test
mov
push
and
cmp
out
inc
and
mov
xchg
cmpsl
sbb
jbe
test
mov
pop
and
in
cmp
insb
and
test
pop
movsb
lods
inc
jne
cwtl
sbb
cmp
add
jb
lret
xor
ret
push
add
jle
sbb
aaa
adcl
es
mov
pop
mov
adc
mov
xor
xor
sub
test
xchg
pop
je
jno
sbb
cmpb
sub
inc
sbb
cmc
gs
adc
mov
push
push
ficoml
mov
cltd
rolb
mov
and
push
enter
mov
inc
sti
out
add
pop
mov
loop
sbb
or
fcomp
xor
inc
add
jns
push
movsb
dec
pop
adc
popa
das
push
ds
mov
push
mov
insl
dec
or
add
adc
fwait
mov
add
inc
or
sbb
push
popa
call
fcoms
add
mov
incl
je
into
add
push
rclb
outsb
push
mov
adc
or
jge
pop
pop
mov
mov
adc
ret
das
xor
and
cld
dec
and
jmp
lods
push
loope
push
pop
push
add
xor
or
leave
sbb
adc
in
int
jl
dec
ret
pop
inc
clc
sti
mov
jne
pushf
jp
dec
jbe
gs
ljmp
jbe
fsubrp
cmp
sub
and
xchg
dec
stos
and
pop
push
scas
andl
xchg
or
ja
xchg
push
xchg
or
push
js
lea
cmp
cs
adc
and
or
fcoml
loope
je
icebp
lock
sbb
xor
xor
pop
mov
or
mov
sbb
mov
mov
pusha
cs
jp
pusha
add
mov
push
sti
adc
fsubs
sub
add
mov
inc
add
push
dec
arpl
push
dec
cld
nop
imul
ret
shl
sbb
sub
je
cmp
data16
shlb
inc
fcoms
call
aad
ret
jg
mov
shlb
stc
push
or
push
add
popf
out
lods
aad
lea
popf
out
cmpsl
mov
popf
dec
es
fnstenv
push
pop
and
sub
shl
sbb
jb
test
call
pmulhuw
shrl
int
mov
cmp
fnstsw
imul
daa
xchg
negl
cmp
jne
inc
inc
jmp
inc
fs
sub
jecxz
jmp
and
sub
add
adc
fimuls
shlb
repnz
stc
push
sub
fimull
jmp
arpl
pop
mov
aas
jecxz
push
push
add
mov
je
jmp
xchg
xchg
push
xchg
sbb
lods
in
outsb
repz
mov
jno
in
and
inc
jne
mov
test
dec
and
inc
cmp
movsl
sbb
cmpsl
aam
pop
in
mov
repnz
sbb
in
andl
or
sbb
rorl
je
fcoms
mov
out
ss
push
add
xchg
das
and
or
dec
mov
scas
pop
xchg
call
lods
lds
fdivl
adcb
dec
cmp
pop
mov
xchg
stos
shlb
push
cmp
addl
stc
shrb
insl
mov
sbb
enter
add
stos
jnp
push
xchg
and
adc
jg
cmpsl
push
and
insb
and
push
scas
xor
sbb
les
je
mov
mov
cs
imul
push
push
dec
clc
or
nop
add
je
shl
gs
je
outsl
jle
mov
add
cmp
fisubrs
sbbb
insb
movsb
loope
and
and
addb
repnz
fwait
hlt
inc
fcompl
push
lahf
mov
jle
xor
sub
push
push
push
fs
push
push
adc
mov
inc
sarb
bound
mov
mov
push
lcall
pushf
adc
cmp
mov
push
pop
push
dec
or
xchg
test
cs
add
cltd
je
xchg
push
loop
push
rorl
inc
fldenv
inc
xor
xlat
fdivl
test
sti
dec
pop
cmp
lods
ret
pushl
les
add
clc
push
dec
jb
int3
ret
hlt
data16
push
test
xlat
xor
lods
outsb
dec
lods
dec
sbb
int3
insb
push
insb
pop
les
cmp
or
sub
clc
insl
lods
inc
loop
dec
mov
or
in
mulb
mov
popa
ret
jne
jbe
adc
fdivrs
cld
push
insb
inc
jno
or
jle
adc
pop
and
mov
fcoml
push
dec
daa
cld
jo
dec
add
test
pop
js
call
mov
mov
xor
mov
pop
add
push
jmp
out
adcb
test
rorb
push
ret
inc
leave
xor
shr
sbb
cmp
test
xor
filds
or
xchg
loop
xchg
adc
test
pop
and
push
movl
fmull
cmp
jbe
add
jmp
add
mov
movsl
loope
sub
pop
out
shr
cmp
and
enter
push
test
add
push
loope
addb
repz
cmp
mov
xor
bound
sbb
jb
push
test
push
or
dec
inc
push
add
mov
loopne
dec
push
js
add
push
and
orb
push
inc
push
jl
xor
mov
add
in
lods
daa
sahf
xchg
pop
mov
jne
push
or
sbb
js
push
jb
sub
or
outsl
loopne
ret
xor
sbb
sbb
or
sub
xchg
push
mov
mov
add
test
pop
sub
push
and
sbbl
mov
add
ss
adc
clc
xor
inc
faddl
or
leave
mov
pop
push
loopne
and
mov
mov
mov
or
and
mov
and
decl
stc
xor
sbb
sbb
sub
jp
sub
mov
cmp
shll
pop
jae
js
insb
into
std
shlb
lds
add
add
lds
insb
add
cmp
lods
ficomps
push
mov
or
add
rcr
mov
cmp
add
call
or
or
and
or
push
jmp
and
inc
ljmp
sub
jo
push
adc
add
dec
mov
mov
movsb
cmp
add
pop
inc
xor
mov
mov
scas
or
add
andb
xchg
push
and
inc
xchg
dec
xor
insl
stos
ret
inc
aas
stos
pop
and
and
lret
nop
sub
and
sub
or
pop
sbb
inc
push
mov
push
xchg
or
pusha
in
mov
adc
inc
xchg
sbb
ljmp
test
push
xor
pop
enter
xor
dec
mov
or
dec
dec
xor
or
xchg
push
shrb
nop
and
mov
leave
and
push
sbb
xchg
jo
pop
scas
adc
mov
shl
cmp
push
or
loopne
outsl
inc
or
adc
clc
and
and
es
xchg
mov
icebp
lea
or
fisttps
xor
mov
cmp
sub
inc
fs
mov
and
cmp
js
sbb
xchg
lock
lret
das
bound
cmpsb
fcoml
or
xor
pop
jl
mov
mov
or
mov
shll
pop
push
or
and
push
jmp
cmp
mov
clc
push
sbb
pushf
sbbl
jo
pop
sbb
daa
and
lret
xchg
jecxz
test
inc
mov
es
pop
jns
mov
insl
or
xor
push
pop
sbb
xor
push
cwtl
sub
push
push
and
out
pusha
sub
mov
ret
sub
outsl
push
insb
sub
test
js
xchg
daa
dec
adc
int
arpl
and
mov
mov
mov
adc
lcall
sub
dec
rcr
and
les
push
test
ss
mov
jge
add
jle
or
movl
inc
nop
ret
sub
or
pop
or
daa
dec
xor
push
fs
jbe
push
push
aaa
adc
push
and
jge
pop
call
adc
rclb
ror
add
sbb
std
cmp
add
mov
add
lcall
fiaddl
and
sbb
cmpsb
fs
mov
xchg
add
xor
sbb
mov
ja
sbb
mov
add
xchg
test
test
les
imul
mov
pop
call
cmp
call
dec
test
sti
fs
sbb
add
or
sbb
out
dec
shlb
int3
and
mov
shlb
sbb
and
ret
adc
sahf
inc
dec
inc
movsb
mov
cmp
sahf
xchg
mov
jmp
push
adc
xchg
je
jle
add
sub
movsb
mov
add
sbb
cwtl
or
jno
cmpsl
dec
dec
test
in
test
push
add
rorl
nop
lock
pushl
push
push
out
sbb
push
push
movb
cli
adc
mov
mov
pop
adc
and
aad
mov
shr
loope
sbb
pushf
loopne
mov
dec
jo
add
push
or
xor
rorb
lods
in
sbb
push
inc
pusha
xchg
adc
jmp
cmp
je
xorb
lds
push
test
cmp
je
jbe
push
js
inc
mov
jmp
adc
aad
dec
je
or
and
cmp
in
rcll
into
icebp
pop
ss
sbbl
sti
nop
shlb
push
push
xchg
adcb
push
sbb
nop
push
in
mov
imul
ljmp
dec
xor
mov
cltd
and
push
xor
inc
adc
push
clc
pop
add
fsubl
pop
push
fstpl
and
leave
insl
in
sub
daa
call
push
aaa
sbb
and
cs
or
sbb
jle
mov
xor
or
outsb
mov
ret
loopne
test
decb
fwait
jno
loop
adc
or
push
pop
push
mov
es
push
adc
xchg
hlt
add
sbb
fstpl
adc
cmp
push
clc
jb
jecxz
jo
loopne
adc
cmp
inc
clc
pop
fsubr
pop
faddp
loopne
sbb
test
push
test
cvtdq2ps
loope
js
xlat
in
mov
sbb
in
pop
mov
add
add
iret
push
sti
fucom
adc
dec
shrd
xchg
dec
pop
js
jg
loop
lcall
mov
lock
hlt
or
mov
jo
jne
mov
lret
inc
insb
adc
pop
in
push
add
push
xchg
pop
test
fstl
sbb
mov
dec
add
push
xchg
push
push
push
lods
pop
pop
xlat
adc
pop
sub
inc
pushf
jge
xor
add
sub
shrl
insb
mov
mov
inc
pop
popa
sbb
jnp
xor
popa
popf
or
cmp
sub
sub
daa
std
in
addb
movsb
jno
push
inc
push
lods
daa
std
pop
nop
cwtl
push
insl
jmp
push
imul
subl
mov
test
dec
jl
adc
cmp
and
mov
push
cmp
adc
fadd
inc
imul
mov
xchg
mov
scas
mov
xchg
or
or
inc
or
daa
test
push
aam
xchg
cmc
pop
sbb
jge
cmpsl
cmpsl
xchg
int3
push
xor
mov
lea
push
push
fmuls
and
xor
flds
popa
movsl
out
insl
jecxz
add
xchg
mov
sbb
test
in
dec
popa
sub
and
test
rolb
decb
lcall
nop
xchg
xchg
rclb
stos
int3
sti
test
pop
stos
push
mov
outsb
push
add
xchg
in
cmc
rclb
dec
fldl
or
jmp
cmp
inc
and
adc
mov
addr16
sub
and
mov
loopne
xchg
or
dec
jne
testl
sub
inc
push
imul
add
cmp
jmp
or
jmp
sbb
lds
aam
pusha
inc
sub
push
add
push
nop
sbb
cwtl
lret
fdivr
dec
add
jb
push
add
repnz
repnz
pop
xchg
test
mov
xor
sub
std
adc
and
pop
inc
jge
sbb
cltd
add
pusha
mov
pop
lret
mov
or
or
cli
mov
int3
dec
pop
cmp
or
add
ficoml
pop
jl
mov
inc
push
lcall
push
add
inc
add
xor
gs
fisubrs
inc
dec
sbb
test
jne,pt
cmp
push
and
fwait
ja
mov
loopne
lret
faddp
jl
add
dec
repnz
sbb
mov
xchg
pop
push
outsl
push
ja
push
mov
sub
aas
cmp
rolb
or
inc
adc
gs
push
push
mov
push
or
dec
push
sbbb
xor
test
push
inc
popf
xor
lds
jl
mov
cli
push
in
sub
inc
add
or
xchg
add
cwtl
mov
aas
and
dec
add
sti
hlt
enter
inc
push
add
push
adc
push
or
adc
cmp
jbe
cltd
jmp
fiadds
xchg
jmp
inc
mov
mov
lods
adc
inc
and
push
mov
dec
fadd
and
and
fmull
daa
add
in
inc
pusha
adc
das
sub
add
mov
mov
cmpsb
loopne
xlat
in
add
je
push
sbb
push
stc
pusha
or
adc
xchg
mov
aaa
pop
adc
xor
pusha
pop
mov
mov
push
or
push
jecxz
push
cmp
pop
call
adc
daa
push
orl
popa
inc
add
adc
jnp
jbe
lea
popa
int3
call
test
dec
inc
or
pusha
mov
add
mov
popa
pop
push
jmp
rorb
sbb
sub
dec
lods
mov
jo
push
cmp
test
adc
add
inc
dec
sub
add
and
iret
push
mov
ja
loope
arpl
push
ret
pop
rol
imul
popa
pusha
imul
mov
add
jmp
rorb
xlat
inc
loopne
sbb
push
imul
jle
sbb
loop
push
xor
fildl
fimuls
in
pop
mov
jg
or
mov
stos
jp
mov
sbb
mov
mov
insb
add
dec
cmc
ret
mov
sbb
mov
shll
add
rcl
pop
add
lods
adc
test
adcb
popa
xchg
dec
cmp
jp
mov
mov
lock
jp
fdivrs
or
jo
fmuls
or
cmp
add
cmp
adc
push
insl
in
dec
add
xchg
sub
xor
and
add
lea
fmuls
fwait
dec
cmp
in
xor
cli
dec
pusha
mov
rol
mov
ror
xor
shr
mov
sub
jnp
xor
shr
xor
add
add
add
or
fsubrs
mov
lcall
iret
or
jae
or
ret
jmp
pop
call
add
aam
sub
stos
and
les
int
scas
xor
into
ljmp
add
mov
jge
xor
and
and
xchg
push
aam
dec
faddp
add
push
fs
dec
gs
repnz
and
fmull
pop
push
fisttps
fidivl
and
not
ret
rcl
add
add
pop
ss
add
push
call
xor
in
rcl
add
call
jl
jb
dec
xor
ljmp
mov
shr
add
push
push
mov
fsub
imul
push
nop
cmpsb
aam
in
shl
adc
mov
in
push
cmp
bound
push
or
enter
pop
mov
pop
aaa
mov
xor
fadd
cs
call
push
xor
cwtl
loopne
in
inc
sub
call
adcb
sub
cmp
aam
pop
xchg
sbbl
cmp
pop
gs
in
add
sti
in
in
mov
clc
and
and
out
iret
or
dec
or
add
and
xor
add
popa
pop
push
test
cmp
or
mov
pop
subl
push
jo
ficoms
add
mov
sbb
fucomip
loop
dec
adc
push
loop
mov
fimull
mov
filds
cltd
and
fadds
pop
jbe
xor
scas
push
call
lretw
mov
clc
jp
push
and
add
gs
fdivs
add
push
cmp
test
clc
popa
jle
sub
inc
mov
adc
mov
xchg
clc
and
popf
push
jo
cli
stos
adcb
aam
aaa
cmp
lcall
call
in
sub
or
add
mov
and
jge
rclb
shlb
rorb
shll
sub
dec
loopne
add
xor
xchg
cld
jo
add
push
nop
add
sahf
dec
push
and
and
push
rorb
dec
xor
mov
jb
cmp
and
xor
cmp
add
and
push
push
pop
and
inc
stos
fs
inc
pop
xchg
out
stos
mov
push
add
xchg
aaa
xadd
or
xor
pop
inc
pop
add
pop
test
lret
adc
inc
pusha
dec
adc
xchg
movsl
mov
mov
or
mov
rolb
dec
sahf
mov
xchg
fs
cmpl
dec
fs
dec
dec
icebp
stc
ljmp
fsts
xor
xchg
inc
dec
bndldx
not
dec
mov
shll
adc
sbb
jo
adc
in
add
and
clc
sub
cmc
cmp
outsl
add
dec
shrb
dec
cmp
aas
pop
add
push
sbb
shrl
mov
into
add
inc
incl
lock
jle
int3
lea
or
pop
adc
pop
cld
sub
int
pusha
data16
xor
push
lock
lea
mov
add
shr
add
sarb
shl
add
rol
and
mov
or
dec
clc
adc
adc
xchg
inc
jae
mov
sub
or
fidivs
adc
add
sub
jl
sub
out
mov
add
out
mov
or
mov
dec
jne
pop
adc
dec
sub
loope
lock
idiv
pushf
lahf
jl
sub
mov
cmp
jbe
or
fwait
inc
cmp
fs
sub
inc
pop
adc
dec
inc
sub
jae
push
pop
fadds
pop
adc
stos
or
mov
scas
cli
cmpsb
ljmp
inc
fs
pop
stos
call
ror
mov
notl
add
jb
push
leave
dec
fwait
add
xchg
adc
es
push
movsl
inc
cmp
test
out
push
mov
push
daa
xchg
xor
and
imul
add
shll
lods
testl
in
jne
lock
push
sbb
xchg
nop
aas
or
add
push
shr
pop
xchg
adcb
xor
cmp
dec
cmp
inc
push
xor
pop
push
shrl
loope
inc
mov
add
repz
and
push
xor
push
or
mov
imul
in
sbbl
jae
mov
andl
mov
cli
mov
or
dec
add
dec
add
xor
mov
cmp
arpl
pop
jo
cwtl
loope
add
test
xchg
and
sbb
lods
and
add
ret
test
inc
sbb
ljmp
call
sub
lret
inc
and
and
dec
add
mov
mov
movsb
pop
ret
dec
iret
push
push
jmp
loopne
hlt
mov
into
les
add
fbld
mov
clc
add
cmp
popa
sub
push
or
adc
out
xor
pop
adc
adc
and
sbbb
or
cmp
fucomi
adc
jne
cs
adc
and
add
pop
fisubrl
outsl
inc
cmpl
loopne
jae
mov
dec
jle
and
adc
es
fisubrl
pop
push
loop
adc
mov
enter
mov
inc
mov
push
gs
in
in
add
and
in
lods
inc
mov
or
test
pop
icebp
mov
xchg
in
and
inc
sub
fisubs
sbb
jns
cmpsb
push
and
and
shrb
xor
push
nop
dec
or
lahf
jecxz
push
jl
repz
leave
aam
enter
and
push
dec
repz
push
xor
fstp
fwait
and
js
xor
lret
dec
test
or
cmp
cmp
test
add
xchg
andl
or
shrb
add
nop
add
stos
test
add
pop
leave
lret
inc
lock
test
cmpsb
or
or
testb
pop
ljmp
or
insb
loopne
pop
inc
jae
lret
pop
xchg
adc
cmpsl
or
inc
lahf
or
inc
jmp
mov
ret
bound
ja
cmp
add
sub
fdivs
mov
mov
pop
add
sub
mov
add
shl
xchg
mov
cmp
xor
mov
ss
push
test
add
dec
addl
push
push
sti
sub
sub
dec
and
sub
adc
jbe
adc
sub
push
pop
jb
xlat
jle
lret
lahf
std
sbb
pop
cmp
xchg
out
es
and
cmpsb
shlb
push
mov
and
ret
rorb
arpl
sub
repnz
push
push
mov
or
dec
push
dec
out
jge
int
gs
xor
and
mov
xchg
outsl
out
cs
push
sbb
add
xchg
filds
mov
add
outsl
mov
push
pusha
andb
mov
outsl
outsl
xlat
pusha
call
add
sbb
cmp
fstl
pop
jne
or
test
push
or
or
and
cmp
adc
sbb
pusha
push
pcmpgtd
mov
lret
pop
mov
push
fdivrl
sub
ret
inc
xor
addr16
sahf
cld
sbb
cmpsb
aas
lock
push
mov
std
mov
push
push
repnz
sbb
mov
stos
jae
jb
push
movsb
ret
mov
js
ljmp
and
xlat
and
sbb
stos
jg
pop
bound
orl
nop
test
cmp
mov
fidivl
pop
cmp
insl
cmp
jo
xchg
push
add
push
in
or
popa
fstl
sti
dec
adc
aad
cmpl
lock
je
in
mov
outsb
dec
lea
or
mov
pop
sbb
pop
sbb
dec
subb
call
push
aaa
lea
adc
jecxz
ret
cmpsb
push
cmpb
hlt
adc
or
mov
inc
and
jne
ret
mov
fisubl
pop
jmp
sbb
jle
adc
or
movsb
xorb
adc
pop
adc
and
push
or
dec
jb
ss
mov
push
rcrl
sub
cmp
inc
cli
push
mov
jbe
sub
add
sub
pop
add
movsb
push
pop
bound
mov
cli
push
push
jl
ret
ljmp
or
repnz
adc
mov
jmp
mov
mov
or
inc
push
mov
fwait
and
xchg
add
mov
inc
push
push
jg
pop
mov
cmp
jne
push
xchg
adc
add
xorl
js
sub
repnz
in
lret
pop
cmc
xchg
mov
push
hlt
sub
clc
push
xor
and
scas
sub
mov
insl
mov
mov
rolb
adc
push
add
insl
icebp
jbe
stos
inc
add
mov
mov
push
in
call
enter
sub
xor
dec
pop
cmp
mov
cmpb
je
cmp
pop
cmp
push
add
mov
clc
inc
inc
lea
push
mov
test
icebp
push
mov
sahf
sbb
dec
jnp
mov
jp
add
jne
add
or
push
dec
inc
popl
clc
push
pop
inc
aaa
inc
jge
sbb
or
ja
adc
add
jne
adc
pop
lock
jb
mov
push
mov
fwait
adc
shll
mov
sahf
xor
push
stos
add
push
in
aam
in
mov
cmpsb
mov
movsl
add
add
les
pmullw
addr16
or
xchg
jb
cmp
movsb
nop
in
ret
xlat
fmul
test
or
xor
push
cmp
and
fbld
insb
mov
cmp
mov
and
lods
mov
test
leave
mov
sub
add
push
add
pop
fildl
lock
daa
loopne
rolb
xchg
xor
sub
jmp
jg
cli
mov
mov
inc
cmp
mov
jl
imul
inc
sub
cli
cmpsl
jl
lea
mov
cmc
xchg
out
lock
mov
sub
movzbl
adc
mov
pop
cwtl
xor
mov
jne
shlb
or
out
mov
addl
jne
push
rorl
jmp
or
lahf
out
adc
pop
mov
add
imul
sbb
incl
scas
mov
cmp
je
popf
dec
rcrb
dec
in
push
or
pop
push
add
fldl
cld
sahf
xor
inc
cmp
jl
cmp
add
ja
fidivrs
shl
xchg
fidivl
ret
push
xor
dec
and
push
adc
xor
push
jge
cmc
cmpl
aam
ret
inc
adc
xor
call
push
sub
cmp
shlb
jle
and
cmpb
icebp
push
jl
xor
mov
insb
mov
or
push
jl
shrb
cmp
cmpsb
divl
js
daa
inc
jb
movsb
mov
xor
lock
pop
bound
xor
lds
inc
daa
add
sbb
push
jmp
inc
cmp
mov
out
dec
lods
nop
jl
sub
add
adc
and
int3
outsb
pop
jmp
xor
mov
sbb
xchg
cmpsb
add
or
add
xchg
mov
in
clc
fistpll
loope
and
add
mov
enter
shl
add
decl
pop
pop
loope
shl
xor
mov
mov
fisttps
movsw
movsb
mov
adc
inc
rorb
test
cli
sub
sub
jge
lods
mov
mov
iret
push
fidivrs
adc
add
popf
lods
xor
mov
mov
dec
nop
dec
pop
movsl
sub
andl
pop
aad
jnp
sbb
fs
add
push
orl
dec
fnstsw
xor
mov
cmp
inc
cmp
lock
mov
or
jp
aas
test
cwtl
adcb
inc
cltd
xchg
mov
jmp
clc
mov
xchg
mov
pop
jl
lods
push
shlb
lods
add
pop
dec
gs
or
icebp
dec
or
test
pop
jl
xor
jle
push
repz
or
xor
jbe
sub
xor
es
fs
icebp
cmp
mov
sub
aam
sbb
pop
and
dec
adc
sbb
adc
aam
sbb
push
or
fimull
add
push
lret
push
push
xlat
add
sbb
jae
or
mov
inc
popa
rcrl
adc
lea
xchg
pop
and
mov
inc
in
cmp
push
jbe
xchg
or
or
jo
sarb
adc
popa
mov
cs
sub
fs
adc
dec
mov
mov
dec
cmp
mov
mov
sub
sub
shl
xor
mov
xor
aaa
inc
adc
mov
push
jecxz
sub
adc
out
add
push
mov
jg
dec
xor
cmp
jg
add
pop
push
jo
or
std
es
outsl
jmp
push
js
pop
dec
add
xor
call
fnsave
sub
cmp
and
cmp
stos
add
add
adc
out
or
inc
sub
fsub
movsb
mov
aam
push
or
jnp
dec
hlt
pop
push
ret
adc
inc
test
jecxz
out
cs
pusha
cmp
mov
outsl
sub
xchg
and
cmp
mov
sbb
push
jle
pusha
outsl
jae
loope
adc
xor
and
lds
js
adc
aaa
testb
mov
push
or
mov
xchg
xor
sahf
orb
daa
dec
sti
and
push
sbb
nop
mov
or
mull
insb
pusha
in
mov
pop
ret
add
or
pop
mov
jl
jmp
rorb
nop
jns
lea
sbb
sub
mov
sbb
sub
and
shll
stc
popf
ss
push
mov
or
sbb
push
adc
add
jl
dec
xor
xchg
ret
pop
or
push
sbb
adc
add
sub
sub
sbb
int
mov
mov
dec
mov
stos
push
sub
and
jns
call
add
or
shl
push
inc
adc
or
enter
push
and
nop
pop
and
or
mov
arpl
cmp
push
push
gs
adc
lea
lods
jbe,pt
ja
ret
bound
mov
and
push
cmp
dec
lahf
clc
loopne
std
push
sbb
xor
xlat
cmp
mov
ret
sti
or
sbb
mov
mov
cli
push
inc
xor
xor
ss
call
sub
xorb
mov
int3
add
ds
dec
cmp
xchg
mov
xchg
pop
push
testl
rorl
pop
push
decl
xchg
pop
out
sbb
pop
fistpl
pop
pushf
mov
pop
push
aad
push
push
xchg
mov
pandn
cwtl
push
ljmp
fsts
dec
mov
add
rcl
mov
incb
push
or
sbb
out
cmp
adc
push
push
xchg
mov
adc
cmp
xchg
les
push
pop
xor
pop
push
mov
push
xchg
inc
add
add
sub
shrl
dec
pop
cmp
inc
sarb
and
jecxz
sbb
out
cmp
jle
add
add
scas
and
mov
and
add
lods
fisttpl
cmp
in
insl
jmp
sbbl
int
xor
lahf
push
inc
sub
pop
or
in
sub
or
jne
xchg
push
mov
push
inc
mov
stos
jno
jmp
xchg
popf
push
push
cmpsb
sub
mov
dec
insb
mov
or
insb
push
lock
inc
rorb
jo
add
movsb
adc
xor
hlt
fiadds
add
pushf
aas
cld
dec
or
sub
inc
jo
jne
addl
dec
xlat
add
into
or
arpl
outsb
inc
add
out
add
push
aaa
and
stos
dec
inc
jp
pop
xchg
or
paddb
test
or
and
cmp
mov
add
xor
adc
mov
sub
jo
push
nop
aas
subb
push
outsl
decl
hlt
xchg
sub
aaa
sbb
adc
dec
fwait
fwait
rclb
push
cmp
fisubrs
sub
sub
cmp
jne
push
adc
mov
xor
mov
sub
cmp
mov
sub
or
gs
imul
js
aad
push
pop
jmp
xchg
rolb
subl
test
mov
sub
insb
pop
push
and
jae
dec
and
addr16
pusha
movsl
push
xlat
sub
cld
cmp
adcl
in
push
add
jne
jg
dec
or
push
add
inc
xchg
inc
adc
pop
add
or
xor
cmp
insl
gs
sub
sahf
jo
and
movsl
stc
sbb
pop
andb
cmpsl
xor
sub
aam
push
data16
add
ret
sbb
or
inc
mov
xchg
push
cmp
or
cld
push
dec
push
push
sbb
subl
test
outsl
addr16
dec
xlat
pop
mov
sbb
andl
std
add
mov
jbe
ret
fisttps
rorl
sbb
sbb
push
repnz
roll
aaa
clc
test
cmp
leave
jmp
cmpsb
scas
or
dec
call
sbb
adc
fs
adc
pop
sbb
js
bswap
lret
into
jne
push
adc
cmp
pop
or
cmpsl
xchg
adc
stc
jmp
loope
sub
jb
dec
xor
mov
jmp
push
dec
pop
pop
xor
inc
push
cld
nop
mov
sub
mov
loopne
out
mov
out
std
fidivl
fnstsw
cwtl
nop
inc
in
dec
xor
mov
fstpt
fldt
xchg
inc
xchg
pop
mov
jae
cmp
cmp
pop
push
inc
jp
jne
cmp
fbstp
inc
push
xchg
xor
aam
data16
push
insb
sbb
push
dec
add
pop
sbb
jmp
aaa
les
paddb
xor
fadd
pop
lahf
push
push
test
sbb
mov
add
or
mov
daa
or
out
sbb
mov
lcall
movl
loopne
xchg
or
decb
or
pop
sbb
aad
push
or
sub
cmp
xor
jbe
pop
cltd
push
nop
add
cmp
push
pop
loopne
ret
fdivr
or
add
sub
lock
subl
lcall
cmpsb
dec
push
and
jae
aas
push
and
dec
jno
imul
dec
dec
add
mov
or
ret
int3
int3
aas
nop
push
or
and
add
in
cltd
movb
pop
jb
adc
mov
mov
jle
rolb
add
push
add
call
test
mov
sbb
add
lcall
int
add
xchg
lret
jb
and
cld
adc
std
cld
adc
dec
gs
and
cmp
cmp
addb
gs
xor
xchg
gs
mov
sbbb
cmp
jae
sub
cmpsb
mov
mov
sbb
aam
test
adc
fwait
and
andl
mov
cwtl
xchg
les
sub
sub
or
jmp
in
popa
fldl
orb
inc
adc
cmpl
push
ljmp
adc
dec
lods
pop
adc
in
mov
lcall
rcr
lcall
lock
sub
mov
adc
imul
lahf
fcmovne
adc
cld
ret
orb
xchg
and
scas
adc
subb
xlat
push
mov
repz
jle
pop
add
mov
jbe
xchg
jmp
pop
ss
mov
ret
push
lods
and
int3
push
aaa
test
sbb
inc
enter
in
movsl
outsb
mov
or
adc
cmpl
sub
ret
aas
pop
shlb
dec
insl
cmp
and
lods
pop
in
jle
adc
pop
or
dec
dec
pop
sbb
ud0
pop
fadds
jmp
xchg
push
ja
in
sub
inc
cmp
pop
pushf
mov
adc
shlb
push
pop
mov
pop
clc
out
and
adc
xchg
nop
mov
adc
addl
je
push
sbb
push
cmpsb
xor
xor
add
js
push
or
fsubs
addb
ror
insb
mov
add
ja
dec
mov
ds
jae
lds
mov
add
cmp
btr
jl
push
sub
sbb
xorl
ja
lock
or
pushf
out
rcl
mov
pop
xor
outsl
mov
outsb
pop
outsb
rcll
push
xchg
xor
jnp
fs
cli
sbbl
sbb
mov
cmc
or
inc
nop
and
fdivrs
sarl
lock
xlat
adc
or
dec
jp
ljmp
sbb
adc
stos
xor
push
fidivl
cltd
test
xchg
mov
and
sbb
loop
out
jb
int3
adc
cmp
loop
sub
push
mov
lods
scas
pop
pop
mov
xchg
aaa
je
xchg
mov
scas
int3
push
shl
add
push
mov
mov
lods
push
jnp
js
les
mov
mov
dec
inc
imul
movsb
jbe
test
loopne
push
mov
pop
inc
inc
inc
enter
in
pop
clc
popf
sbb
pop
dec
pusha
lahf
lea
push
out
pusha
daa
shll
cld
inc
adc
or
das
ret
sbb
or
shll
adc
jae
jge
outsl
rorl
inc
push
jg
popl
cld
cmp
push
xchg
pop
mov
push
mov
add
inc
cmp
je
inc
ss
fisubrs
push
nop
sbb
mov
addr16
push
mov
mov
jmp
push
fwait
roll
xor
rorl
insb
sbb
mov
movsl
or
aas
dec
scas
dec
inc
or
pop
je
jmp
inc
cmp
dec
sub
js
push
dec
out
sahf
jns
push
faddl
pop
inc
sbb
lock
add
sub
cli
jg
jmp
xor
mov
sbb
cmpsb
icebp
test
xor
movhlps
pop
icebp
jnp
or
out
mov
dec
mov
push
sub
aaa
push
scas
cmpsb
ret
shll
push
mov
rol
icebp
loopne
inc
pop
pop
and
and
ret
pop
mov
loopne
popa
and
push
inc
add
mov
sbb
add
and
adc
sub
dec
cmp
in
push
adc
dec
imul
push
mov
js
jnp
jmp
add
mov
jb
insb
test
in
pushf
push
push
jl
xor
xor
push
inc
or
sub
mov
cmpsl
and
add
adc
sbb
lods
les
add
jne
push
icebp
lods
xchg
mov
cmp
push
jge
sub
fstpt
pop
mov
sub
mov
inc
xor
cmp
add
dec
je
push
jo
and
add
jne
popa
xor
mov
icebp
ret
jbe
das
mov
sbb
and
cmp
fs
mov
cmp
add
lods
dec
or
shrb
frstor
rorl
or
or
dec
test
negl
rcrb
js
xor
mov
aaa
dec
add
shrb
sti
sahf
pop
and
scas
shr
fdivrs
mov
and
push
mov
lock
jbe
cmp
fdivr
pop
cmp
cmp
mov
and
clc
jg
fs
insl
dec
test
movd
movaps
fwait
testl
shlb
jle
xor
aad
fdivrl
cmpsb
je
mov
outsl
adc
and
lret
or
jg
jnp
ret
ljmp
jg
jnp
mov
mov
scas
mov
adc
or
add
adc
add
lock
add
imul
and
pusha
idivl
pop
enter
mov
adcb
xchg
cmpsl
mov
pop
xor
cmp
fistpl
inc
and
jmp
cmp
and
bound
add
pop
pop
push
lds
jb
or
decl
push
and
adcl
es
call
pop
xor
xor
fmulp
sbb
loop
jns
jge
mov
jge
pop
and
sbb
sub
fs
fldl
dec
push
mov
xchg
lock
adcl
fsubl
test
lret
add
cmp
jb
neg
or
rcr
mov
mov
adcl
sbb
fnstsw
test
or
rorl
cltd
mov
rep
mov
dec
ljmp
lret
sbb
in
ret
inc
push
int
mov
mov
rorl
roll
nop
pusha
clc
jb
push
inc
cmp
and
mov
add
scas
push
shll
test
pop
push
sti
incl
rep
jmp
sub
cmp
sub
or
add
jl
data16
xor
adc
cwtl
sub
sub
push
push
js
shrl
pop
and
scas
push
repnz
mov
cmp
push
movl
cmpsb
inc
add
add
mov
out
push
loopne
out
sahf
fcom
enter
andl
cli
in
call
call
repz
repz
hlt
clc
clc
cld
fldt
push
mov
lret
add
fldz
jns
adc
jmp
and
inc
xchg
mov
or
add
jno
fsubs
push
lea
jl
cld
mov
and
std
cld
out
mov
push
scas
adc
push
xchg
pop
push
inc
xchg
stc
sub
mov
mov
fadds
add
fiaddl
jl
push
jbe
fisubs
add
sahf
inc
push
out
push
add
nop
dec
dec
addr16
lcall
cmp
dec
in
mov
fs
das
ds
repz
test
iret
repz
sbb
adc
repz
repz
or
or
add
inc
push
icebp
jns
mov
mov
aaa
loop
imul
pop
inc
pusha
mov
daa
ja
js
popf
mov
shlb
and
jbe
in
mov
pushf
sub
fisubs
mov
add
or
fbld
int3
stc
pop
clc
pop
negl
push
ljmp
jo
les
add
cmp
sbbb
push
and
mov
mov
inc
inc
add
in
pop
push
jle
mov
jmp
jp
je
mov
shr
rorl
sahf
mov
pop
movsb
sbb
mov
fstps
sbb
xor
pop
icebp
arpl
subb
cmp
int3
cli
add
mov
cmp
mov
adc
add
mov
pop
push
sbb
call
cmpl
sbb
sub
push
hlt
xchg
sbb
or
and
andl
mov
fucomi
add
inc
sub
in
iret
jne
movsb
test
push
fsubs
and
sub
push
pop
add
push
xchg
inc
pop
mov
aas
mov
fists
jmp
adc
mov
push
jne
inc
cmp
cmp
shrb
push
sar
mov
ret
adc
mov
mov
xor
jl
push
adc
xchg
or
and
pusha
jmp
dec
push
adc
and
cmp
mov
jle
inc
inc
cmp
cmp
cmpsl
sub
dec
loopne
and
jg
iret
or
dec
adc
xchg
adc
cmp
lret
and
es
or
loopne
xor
jle
add
addb
mov
mov
cs
and
and
pop
adc
cmp
cmp
addr16
add
aaa
jl
mov
stos
add
loopne
imul
cmp
jae
fadds
shl
shlb
imul
sbb
or
or
inc
pop
cmp
mov
jae
mov
movsb
push
fmull
rol
inc
inc
cmp
aam
lret
jne
das
loopne
push
sbb
mov
lock
jnp
or
push
sahf
mov
xchg
iret
inc
movl
cmp
adc
sub
sub
pusha
enter
xchg
bound
rclb
out
scas
add
add
mov
testb
or
cmpl
add
lea
pop
clc
stc
adc
hlt
jl
sarb
sub
jae
hlt
das
das
and
fs
inc
and
icebp
and
adc
addb
cmp
or
shrb
insb
ja
xchg
inc
xchg
outsb
mov
add
pop
inc
push
mov
rolb
ja
gs
jge
into
and
movb
add
test
neg
xor
cli
or
add
jmp
or
scas
or
xor
jbe,pn
sbb
aaa
cmpsb
cmp
jb
cmp
in
mov
into
jmp
mov
dec
mov
mov
dec
dec
mov
inc
cmp
jb
loop
ret
ret
adc
fsubl
or
or
add
aad
mov
or
sbb
cmp
in
lods
mov
jmp
dec
mov
rorb
sub
cmp
jb
lea
push
adc
imul
cmpsb
jns
outsl
add
test
je
cmp
jne
mov
push
cmp
fwait
cmpsl
mov
es
jne
jmp
fwait
jns
in
sbb
pop
jo
jge
ret
adc
push
dec
jmp
iret
iret
repz
jmp
std
std
jmp
cld
cmp
jae
cld
ret
pmaxub
and
adc
push
jb
mov
push
movb
shr
pusha
dec
push
mov
hlt
or
lea
je
mov
mov
rcrb
fsubrs
in
or
testb
push
adc
add
xchg
add
cmp
cmp
adc
or
iret
rcrb
mov
aad
stos
std
or
adc
nop
or
rcrb
push
and
add
cmp
pop
rcrl
adc
or
xchg
movl
xor
sub
sub
inc
sbb
xchg
je
or
and
jmp
and
jg
add
mov
mov
mov
dec
jl
sub
push
add
push
push
popa
ret
insb
clc
and
dec
and
repz
jae
adc
scas
jp
push
xchg
and
push
pop
jle
push
push
pop
div
add
bound
jb
ds
sbb
add
nop
sar
push
es
push
test
subl
sub
pop
adc
push
sbb
push
mov
andl
adc
cmp
test
adc
popa
gs
add
adc
shrb
int
imul
loope
mov
pop
xlat
in
in
gs
xor
and
fsub
add
push
js
push
cmc
loope
add
ror
add
mov
mov
adc
sbbl
adc
fisttps
testb
jl
or
lods
es
or
push
mov
adc
jle
cmpl
aaa
pop
in
rcrl
fstl
xor
decl
cmp
jne
orl
jmp
adc
jne
sub
sbb
dec
dec
jge
shlb
mov
or
jg
fisubl
or
in
inc
push
or
and
adc
insb
adc
pop
jne
dec
add
add
and
inc
lds
mov
xor
or
test
dec
and
xchg
adc
jmp
xchg
fidivs
mov
sub
cmp
ja,pn
xor
lea
dec
adc
sbb
loopne
daa
movsb
xchg
lock
pop
add
dec
test
push
push
and
lods
bound
cld
in
ss
adc
flds
mov
ljmp
add
push
orl
jne
test
es
mulb
mov
and
push
or
add
into
mov
mov
in
rolb
sub
mov
xor
xchg
mov
lcall
leave
push
mov
cmp
sbb
sub
and
xchg
inc
pushf
inc
or
and
pop
push
ret
clc
aas
fsub
push
data16
jge
stos
mov
shr
test
add
mov
pop
aad
inc
pop
sub
test
jo
inc
cld
shrb
add
lcall
mov
push
es
or
mov
rclb
dec
repz
rolb
adc
push
ret
push
sub
adc
sbb
sbb
decl
mov
inc
inc
data16
je
or
mov
clc
dec
js
sbb
jnp
arpl
dec
shll
sbb
mov
xchg
adc
inc
mov
mov
sbb
rorb
push
cs
xchg
adc
ficompl
fstpl
ds
push
aas
push
add
pop
push
jmp
pop
das
mov
xor
scas
shl
loopne
or
stos
lock
fs
sbb
mov
sbb
push
movsb
ret
inc
mov
stos
and
adc
jbe
or
loop
mov
mov
jmp
and
pusha
inc
dec
ret
pop
pop
or
xor
test
loopne
fidivl
fstps
xor
insb
pop
jae
fwait
or
pop
and
data16
adc
or
inc
xor
daa
ret
sub
loop
ret
cmp
jae
sub
lods
adc
cld
add
push
icebp
inc
cmp
xorl
add
loopne
je
inc
cmp
jb
lea
in
push
adc
into
dec
push
xchg
fisubrl
in
add
xchg
loop
enter
adc
ds
mov
in
fcompl
lock
cltd
dec
xor
push
mov
and
lock
xlat
jne
push
out
cmp
or
aam
sbb
notl
jb
sbbl
jbe
add
ret
sbb
jno
xchg
cmp
pop
push
push
or
outsb
inc
mov
inc
sub
or
sti
dec
popa
ret
or
test
jae
or
lcall
sub
pop
mov
mov
sbb
test
hlt
add
xlat
xor
ss
jge
or
dec
and
cmpsl
adc
mov
or
inc
and
decb
incb
sub
ds
fcmove
sub
std
add
xchg
push
xchg
mov
jl
push
sub
scas
and
sbb
je
mov
je
inc
stc
xlat
rorl
pop
adc
adc
ja
loopne
cmpl
xor
push
hlt
movsb
mov
pop
lret
or
mov
fildl
xchg
ja
negb
ficomps
in
or
or
popf
sub
rorl
lret
enter
insl
jmp
xchg
dec
push
fs
inc
fcomps
out
pop
xchg
aad
push
popf
xor
pop
call
test
jg
xor
add
movsb
push
imul
pusha
jb
pop
add
movzwl
icebp
and
pusha
inc
fadds
jb
xor
repnz
inc
push
pop
or
repz
add
scas
in
or
xor
out
mov
pop
xor
into
lcall
loop
push
mov
aas
pop
je
push
or
shlb
push
je
jae
add
ljmp
sbb
ja
add
push
mov
mov
js
subl
addr16
pop
fadds
sarb
jno
sub
inc
loopne
out
add
inc
je
mov
sahf
mov
sbb
ss
jp
mov
imul
cltd
fdivr
and
mov
cmp
je
cmpsb
fcoml
out
inc
faddp
sbb
lahf
push
loopne
mov
call
adc
sub
ss
mov
movsl
in
sub
bound
testb
xlat
xchg
add
ret
nop
xchg
mov
xor
movsb
or
sbb
pop
sbb
mov
lahf
push
or
sub
and
out
sbb
fimull
in
push
leave
push
outsl
loope
shlb
fistpl
int3
add
adcl
ret
ja
push
cmp
add
add
or
mov
xchg
shlb
je
push
adc
sub
add
stos
and
sub
pop
icebp
add
pop
nop
sbb
rcrl
add
js
pop
cmpsl
xchg
mov
out
rcrb
add
jns
mov
dec
add
test
loope
mov
dec
ds
daa
xor
push
pop
push
inc
push
inc
cwtl
js
loopne
dec
inc
pop
adc
pop
push
pushf
dec
pop
mov
add
cmp
andl
push
daa
mov
sbb
ljmp
push
jbe
out
call
adc
jp
add
adc
jge
pushf
ds
nop
xchg
sbb
add
xchg
ja
and
jmp
pop
loope
xor
pop
gs
jl
scas
or
dec
and
jnp
and
enter
dec
ffreep
or
fisttpll
mov
pop
or
xor
std
mov
push
inc
fsubr
test
dec
enter
mov
mov
js
cmp
mov
or
ss
inc
loopne
ret
xor
push
mov
sahf
fcoml
inc
bound
sbb
add
mov
pop
push
adc
out
jmp
popa
cmpsb
push
and
call
sbb
sub
notb
adc
mov
or
cwtl
dec
mov
gs
push
push
pop
jle
mov
cmp
je
lgdtl
add
sub
je
fisubl
cld
or
pop
sbb
adc
imul
jo
pop
add
mov
iret
add
daa
add
enter
add
cmpsl
cmp
dec
add
in
fildll
lcall
flds
add
pop
enter
xchg
pop
push
push
and
push
pop
jb
or
nop
out
or
or
add
or
sub
nop
or
pop
or
loop
or
add
or
lcall
out
or
ror
repnz
ja
push
imul
adc
inc
push
fcomps
adc
fwait
sub
ret
enter
inc
or
ds
pop
enter
adc
dec
push
jns
ret
adc
jb
mov
adc
nop
adc
in
cmp
pop
pop
mov
sbb
sbb
sbb
sbb
nop
out
add
add
sbb
inc
push
sbb
sbb
mov
sbb
je
pop
sbb
mov
jge
sbb
sbb
jae
addb
pop
xchg
mov
pop
jne
add
add
sub
cmp
fldt
add
add
cmp
xchg
daa
loopne
push
push
and
mov
pop
sti
int
inc
loopne
cmp
je
lcall
sub
sub
rol
lea
aad
push
nop
mul
cmp
mov
in
fwait
out
sbb
or
push
jbe
in
fcoml
call
nop
adc
dec
dec
cwtl
jmp
and
sub
xor
jmp
jmp
and
out
in
in
in
cltd
add
cs
in
inc
in
sbb
iret
enter
jge
test
out
sbb
pop
add
lock
xchg
xor
icebp
bswap
add
sbb
repnz
std
test
repz
std
hlt
add
int3
test
hlt
fwait
jb
sahf
xchg
mov
and
enter
pop
notl
idivl
std
clc
in
or
adc
outsl
stc
inc
stc
lock
cli
ror
repnz
iret
sti
sbb
xchg
inc
enter
cld
cld
je
inc
sub
bswap
xchg
mov
std
xor
sbb
ss
repnz
adc
ret
sub
sbb
push
add
lahf
inc
shrl
pop
in
pop
xor
scas
pop
or
dec
mov
jecxz
xchg
pop
add
jecxz
std
sti
in
in
jns
in
icebp
mov
mov
bound
xchg
sti
out
out
jb
push
out
outsb
call
add
sub
jae
and
pop
jmp
add
dec
jmp
cltd
pop
leave
and
popf
in
rcll
fsubs
dec
out
out
out
cltd
push
and
mov
cli
inc
add
pop
push
cli
sbb
xchg
stc
repz
add
stc
push
scas
and
fstpl
lret
stc
div
imull
cmpb
xor
in
repnz
adc
out
clc
push
cmp
mov
lret
xchg
add
dec
sti
sti
cltd
mov
cld
inc
cld
cmpl
sbb
cmc
sbb
dec
and
jmp
xchg
xorl
sub
jne
rolb
mul
repnz
pop
shl
scas
imull
mov
out
rolb
sbb
out
bound
jns
xor
sbb
pop
repnz
sbb
movsl
test
mov
shl
pop
mov
inc
mov
inc
xchg
negb
insb
out
out
jno
scas
in
inc
negb
xchg
pop
leave
and
add
sbb
repnz
lret
and
jno
cmc
pop
and
cmc
jae
lcall
div
out
jns
idivb
and
pop
add
clc
clc
shr
add
hlt
stc
popa
xchg
cmpsb
repnz
scas
in
pop
jno
hlt
pop
xchg
pop
leave
and
push
hlt
add
das
pushw
cmpsl
xlat
pop
andb
test
idivl
rolb
sti
lahf
xchg
mov
adc
ds
dec
test
cmc
pop
lcall
mov
xor
loop
scas
repz
test
imul
jb
repz
repz
in
repz
xchg
cmpsb
jb
sbb
mov
adc
cmc
mov
mov
inc
xlat
xchg
repnz
out
inc
sbb
in
aaa
cmc
and
mov
inc
xlat
add
and
rclb
inc
sbb
icebp
repnz
divb
icebp
repnz
test
test
sub
cmc
cmp
lea
pop
pop
jb
jecxz
fstl
add
dec
ret
popf
mov
stc
stc
cmc
mov
lock
lock
and
and
pop
xlat
push
lock
test
ss
mov
faddl
sub
out
or
in
ret
enter
cmovno
push
add
mov
iret
add
stos
add
jno
fmuls
jp
push
jnp
adc
mov
adc
mov
or
dec
xchg
mov
add
sahf
and
loopne
fmull
jmp
mov
pop
and
fwait
in
jg
pop
push
inc
add
pop
pop
jns
fstl
data16
push
mov
pop
dec
sub
cmp
push
sahf
push
stos
pop
sahf
out
ss
pop
das
bndstx
mov
jl
dec
adcb
lods
pop
xor
icebp
std
push
push
mov
int3
inc
pushf
out
outsb
mov
xorb
gs
push
ror
ret
xor
xchg
icebp
jno
pop
aam
lock
or
sbb
cld
cld
jge
push
or
js
adc
ret
pop
pop
sbb
mov
cltd
js
pop
xor
cmp
sbb
xchg
add
add
dec
stos
movsb
scas
sbb
je
add
js
fcomps
fmuls
and
add
cmp
and
lock
sbb
iret
xor
and
pop
aaa
lods
flds
sub
mov
mov
mov
mov
jl
lods
adc
movsl
lea
sahf
inc
ror
out
subl
repnz
push
jo
add
in
es
mov
daa
push
mov
cld
add
push
sbb
xchg
daa
push
jne
insl
xchg
mov
iret
xorb
cmp
inc
jb
adc
mov
shlb
sub
mov
pop
inc
inc
inc
inc
pop
sub
clc
inc
pop
cmp
push
into
add
enter
sbb
mov
imul
push
mov
fisubs
iret
add
popa
cli
js
in
popa
pop
js
xchg
sub
xor
dec
outsl
cmpsb
or
adc
cmp
or
repnz
je
pop
roll
sub
pop
mov
inc
inc
pop
cmp
enter
stos
testb
xor
orps
push
mov
jne
jg
pop
cmpb
lret
pop
movsl
dec
jp
inc
ja
mov
insb
xor
repz
pop
inc
outsl
xchg
sbb
fimull
xchg
cltd
lods
adc
nop
jne
jo
sub
dec
or
inc
shl
xor
mov
fstpt
inc
loopne
inc
adc
outsl
ret
stc
aad
loop
test
cld
mov
scas
pushl
jne
mov
mov
inc
inc
cmp
push
push
jmp
sbb
xor
xlat
outsb
out
jns
mov
dec
mov
mul
pop
rolb
pop
pop
push
mov
les
sbb
ja
stos
xor
or
adc
add
adc
mov
aaa
addb
mov
std
testb
movb
or
movsb
dec
jmp
push
enter
add
mov
add
jmp
insl
or
ljmp
sbb
add
in
fimuls
dec
or
hlt
mov
adc
dec
jne
leave
adc
cmp
pop
push
sbb
add
inc
call
push
add
mov
xor
das
mov
stos
xor
mov
jg
adc
mov
mov
incl
inc
decl
jne,pn
loop
lock
iret
repnz
mov
pop
xor
aaa
jbe
push
cltd
pop
idiv
pop
mov
pusha
or
je
add
imulb
and
dec
mov
mov
xor
cwtl
clc
ja
jo
jmp
cmp
jae
dec
out
lods
pop
sbb
jbe
adc
out
adc
dec
test
pop
sub
inc
adc
adc
cmc
sbb
mov
and
pop
push
jg
push
mov
imul
add
add
test
mov
mov
sbb
dec
dec
je
push
push
jne
sbb
cmp
mov
mov
sub
sti
pop
push
negl
or
out
loopw
push
mov
inc
pop
stc
sbb
pop
inc
cmp
das
sbb
mov
aaa
loop
xchg
pop
add
add
fs
lock
sbb
negl
xor
orb
popa
mov
pop
fsubrl
and
xor
adc
fiaddl
mov
sbb
jno
mov
push
push
jmp
jge
daa
cmp
lahf
scas
sub
sub
insl
or
aas
lock
push
cltd
pop
idiv
sbb
ret
mov
btr
xchg
inc
out
cmp
push
xchg
xchg
mov
or
mov
and
pop
pop
xor
pop
imul
lea
add
push
adc
fs
inc
imul
cmp
mov
pop
adc
cs
je
insb
sub
subb
sbb
sbb
sbb
jecxz
dec
mov
and
sbb
or
add
in
and
jg
pop
loop
add
sti
xchg
pop
sub
mov
inc
loopne
and
mov
mov
or
cmp
push
mov
and
xchg
push
cmp
stos
cmp
mov
movl
insl
cmp
ud2
add
jle
das
ljmp
add
adc
outsl
mov
fnsave
int3
dec
jo
mov
je
mov
inc
cli
jne
mov
cmp
sub
mov
bound
lret
cs
cltd
test
adc
insb
lock
js
pop
popl
mov
lods
imul
sti
popf
pop
push
mov
push
jbe
inc
mov
mov
pop
inc
inc
outsb
cmp
pop
stc
push
aas
clc
lcall
or
and
pushf
sbb
xchg
jne
add
and
je
das
push
flds
mov
adc
push
mov
movsb
xchg
add
pop
rcl
insl
and
jge
add
push
push
hlt
ret
cmp
mov
push
adc
xchg
jbe
add
cmp
inc
adc
or
out
call
addb
push
jae
bound
jmp
jbe
icebp
push
sbb
dec
ljmp
and
xchg
rorb
adc
aaa
jg
push
pop
add
fdivs
sbb
test
sbb
loop
pushf
ds
pop
insl
or
mov
aam
add
fadds
je
push
inc
jg
cmp
inc
test
je
gs
xor
xchg
push
scas
pop
mov
jg
push
into
fisubl
mov
inc
inc
cmp
je
cmp
mov
cli
orb
imul
add
addr16
lods
fidivrl
dec
je
popa
mov
mov
dec
sbb
ss
pushf
je
rolb
push
movsl
mov
stos
clc
mov
incl
fdivr
hlt
push
mov
push
push
bound
pop
inc
sbb
sbb
inc
pop
cmp
mov
pop
sbb
jnp
dec
or
bound
jae
insl
sbb
or
jbe
jmp
das
dec
push
add
bound
subb
add
sub
mov
dec
lock
mov
addr16
test
pop
js
lret
test
inc
loopne
cmp
and
cmp
je
mov
add
mov
test
lock
mov
sbb
pop
add
inc
int
mov
popa
fs
push
pop
lcall
out
push
add
frstor
sub
lods
sbb
dec
movsb
jb
jns
add
pop
hlt
cmp
pushf
cmp
lret
mov
test
fcoml
fiaddl
orl
pop
add
add
rcrl
js
sbb
mov
pop
call
popa
dec
or
mulb
pop
sub
push
jmp
das
pop
cmpsl
add
dec
jmp
dec
sbb
sbb
mov
repnz
jne
and
pop
cmp
inc
and
scas
adc
cmpsb
push
stos
xchg
jno
pusha
pop
clc
ret
addl
imul
aam
ds
call
add
bound
dec
xor
out
dec
ret
sbb
aam
aam
mov
adc
hlt
jbe
mov
lahf
jge
push
jns
and
je
push
pop
xchg
stos
adc
clc
cmp
inc
inc
or
add
cmp
xchg
mov
int3
int
mov
add
push
jmp
cmp
hlt
pop
in
shlb
or
inc
inc
ss
gs
mov
outsl
inc
or
orl
insl
and
sub
cltd
pop
mov
mov
clc
in
or
and
call
es
inc
jmp
dec
rolb
aas
pop
fidivl
push
imul
cmp
jns
inc
pop
adc
in
jns
pusha
jmp
es
add
sbb
cmp
add
adc
jge
jne
and
and
fldz
mov
test
mov
jo
pop
inc
or
pop
insb
call
jmp
jge
movsl
push
pop
inc
jo
xor
pop
fdiv
mov
sarl
pusha
hlt
add
ret
add
sbb
loopne
sahf
adc
or
out
punpckhdq
outsb
mov
gs
sti
mov
and
jmp
pop
arpl
mov
xchg
push
jno
dec
sub
fs
clc
adc
iret
or
push
jno
call
push
std
or
int
les
cmp
hlt
cmp
mov
sarl
das
push
jnp
test
divl
sbb
xor
pusha
into
ds
mov
fsubl
cld
subl
mov
or
outsb
jbe
js
adc
cmp
jle
push
and
push
mov
jecxz
dec
inc
sub
jae
or
faddl
jno
js
xor
lods
movsl
sbb
sbb
or
mov
shll
in
and
jmp
insb
adcb
mov
adc
pop
mov
mov
js
outsl
dec
popf
sahf
enter
ret
sub
or
sarb
add
push
adcb
out
ror
or
icebp
and
pushf
enter
outsb
scas
xchg
sbb
mov
jmp
mov
dec
ret
sbb
inc
dec
maskmovq
mull
xor
das
or
data16
sbb
push
add
sub
pop
add
bnd
sbbl
or
adc
push
xchg
test
loop
shrb
int3
push
add
push
sbb
jo
arpl
imul
test
fidivrl
push
push
loope
icebp
push
add
aaa
rcll
lahf
xchg
in
imul
xchg
imul
shlb
jge
cmp
lods
aaa
and
dec
rorb
jge
fiaddl
xor
sbb
pop
or
jo
mov
iret
js
popa
ret
inc
out
mov
fistl
push
sbb
mov
sub
pusha
loope
dec
pop
jle
pushf
xchg
cli
repnz
inc
mov
dec
push
jg
adc
in
fcoml
xchg
orb
push
xchg
cmp
test
out
mov
cmp
push
pop
test
ror
rcll
jl
xor
sbb
hlt
fadds
in
jo
fbld
ret
call
sbb
push
jge
inc
clc
sbb
sub
mov
or
incl
sti
add
push
push
pop
dec
test
call
adc
push
push
imul
es
in
fisttpll
sub
dec
les
dec
les
push
add
test
fwait
loope
add
jecxz
pusha
fistpll
insb
push
lea
loopne
out
into
push
rolb
loope
xchg
push
sub
popa
jg
in
push
add
push
xor
push
call
pop
lods
inc
arpl
je
xchg
dec
cmc
pop
add
iret
xor
push
dec
or
sbbb
xchg
jmp
ret
jmp
rorb
sti
mov
aad
pop
dec
lea
dec
xchg
ret
arpl
es
sbb
stc
pop
cmp
jl
jg
pop
fdivs
jecxz
jb
and
and
xor
hlt
gs
lock
out
or
mov
jne
cmpl
fxrstor
cmp
pusha
out
and
push
call
adcl
sbb
push
pop
popa
fsubs
shl
enter
sub
or
add
lock
loop
mov
lds
lods
lret
test
xchg
lock
in
outsb
mov
jbe
out
or
sub
jg
cmp
push
or
jg
pop
pop
add
adc
popl
cmp
lods
cmp
add
inc
jl
pop
or
loopne
movl
cmp
rorb
sarb
and
rol
fsubrp
sti
add
mov
adc
push
xchg
push
pop
imul
sub
loopne
call
add
sub
sub
or
adcl
cld
sub
fs
or
imul
adc
or
push
fs
lret
dec
loop
ret
ret
rorl
cld
xor
add
shl
or
sub
add
sub
mov
jns
mov
inc
dec
jne
lea
adc
cmc
or
rcl
inc
sbb
push
xchg
sub
call
push
mov
shrb
mov
fwait
and
adc
out
aas
add
push
movb
out
roll
or
ret
out
push
sub
arpl
je
ds
or
popf
or
push
cmp
add
cld
fidivrl
mov
fstl
push
push
dec
aad
mov
std
push
cmp
push
push
ficoml
adc
cld
pop
dec
add
gs
jecxz
add
push
orb
mov
mov
and
je
and
shl
in
movb
sarb
jp
push
mov
test
pop
mov
cmp
lahf
jbe
pop
and
sbb
lret
add
jmp
cmp
mov
and
and
and
jmp
inc
add
mov
inc
mov
loopne
lods
pop
and
shlb
clc
mov
mov
jo
jg
or
ja
ss
pushf
mov
imul
jno
testb
shlb
fcomps
sbb
mov
jno
mov
mov
cmp
sahf
push
pop
insb
push
hlt
call
insb
dec
jmp
sbb
jmp
add
shll
cmpsb
push
sub
cmp
xchg
aam
inc
cmp
sarl
add
jne
fsubr
fldt
je
or
stos
enter
mov
xchg
or
push
fs
pop
xchg
mov
push
fldt
adc
in
cmp
mov
jb
nop
xchg
repz
shlb
out
inc
add
out
into
std
fidivl
call
jmp
pop
push
xchg
js
loope
add
push
out
and
xor
pop
aad
add
inc
rolb
push
xchg
hlt
jnp
jae
cmp
jbe
xchg
mov
mov
test
lock
xor
inc
pop
leave
dec
nop
push
imul
jge
loop
call
lea
push
in
dec
popa
loopne
sub
mov
jmp
loopne
andb
cmp
adc
inc
inc
mov
adc
outsb
incl
aas
adc
jmp
mov
lea
push
fistpll
inc
xor
adc
mov
inc
mov
inc
inc
jp,pn
std
inc
dec
jne
mov
inc
push
ds
push
jl
sbb
es
divb
sub
jo
mov
push
rorl
inc
dec
jne
movsb
addb
cmp
or
cltd
add
pusha
hlt
gs
jnp
xor
jmp
cmp
test
shlb
pop
and
fdiv
jae
loopne
add
adc
jno
stc
mov
mov
dec
test
and
mov
stos
rcrb
inc
sub
pop
sbb
cltd
sub
add
push
arpl
mov
xchg
mov
push
inc
push
push
inc
fs
fisubrl
jbe
int3
cmp
jo
insb
ljmp
xor
fnsave
and
fs
loop
pushf
das
or
insb
ret
popf
dec
rcll
dec
loopne
jl
sbb
or
pop
sub
jmp
xor
mov
dec
sbb
mov
xor
add
mov
ss
push
out
subb
xchg
jno
ljmp
fwait
jo
jb
sbb
jmp
xchg
stos
add
cmp
mov
adc
mov
cmp
dec
stc
mov
std
and
pop
movl
add
outsl
cmp
in
or
push
shll
cmp
pop
sbb
sahf
add
dec
adc
popf
data16
nop
es
mov
sbb
xchg
adc
jno
repz
cmp
inc
xchg
int3
mov
ror
or
sbb
add
push
movhps
stc
ret
pushl
out
jle
fildll
add
push
push
cmpl
cmp
pop
cmp
add
add
inc
or
decl
jne
sbb
dec
xor
push
lods
mov
pop
sub
mov
or
lea
jnp
xchg
ficomps
or
cmpsb
or
shll
add
pushf
sub
sbbb
xor
add
pusha
ret
and
inc
xchg
loopne
xor
je
push
mov
jno
add
add
pop
in
lcall
pop
jbe
cmpb
adc
inc
and
sbb
and
dec
cmp
loope
shlb
subb
jmp
out
add
jmp
push
ficomps
pushf
inc
dec
and
mov
xor
int3
insl
xchg
cmp
and
push
cmp
lods
push
sar
xlat
sbb
daa
mov
dec
push
push
jns
aaa
dec
mov
mov
push
add
or
cs
jns
sub
mov
lods
imul
xor
out
call
xchg
mov
cwtl
sub
inc
mov
fisubl
mov
push
push
mov
or
setg
mov
push
add
andb
mov
push
dec
dec
xorb
lock
pop
cmp
enter
shll
and
sbb
xchg
xchg
lret
mov
mov
insb
push
cld
push
jo
mov
or
rolb
rolb
push
les
movsb
xchg
jne
mov
sbb
insb
in
jae
jb
dec
aam
insb
jg
fcmovnu
and
or
push
outsl
addl
test
pop
ret
inc
sub
or
ret
dec
push
mov
mov
and
cmp
movsb
pushf
and
test
std
mov
orl
repnz
mov
shlb
sub
inc
mov
fwait
xor
pop
xrelease
clc
pop
lcall
push
in
xor
in
push
in
inc
dec
or
subps
xlat
andl
push
rcpps
push
dec
ja
push
push
nop
xchg
sti
jbe
gs
std
cmc
and
pop
cmp
je
jle
dec
inc
clc
test
jno
mov
inc
popf
insl
jg
loop
loope
jge
orl
inc
inc
xchg
lahf
nop
add
movsb
ljmp
mov
jb
mov
cmp
cmp
mov
xchg
cmpsb
cmp
or
iret
ljmp
out
inc
lods
popf
jno,pt
test
dec
ja
out
xor
pop
into
jle
mov
jge
dec
sub
inc
mov
test
xchg
mov
inc
js
ds
gs
roll
sub
inc
mov
addb
das
sarb
aam
cld
shll
rcrb
sub
andl
fimuls
ja
adc
test
dec
inc
and
in
xor
dec
cmp
xchg
or
fmul
lret
xchg
fcomps
int3
lretw
lret
lret
out
mov
popf
enter
jecxz
lret
movsl
shrb
push
outsl
add
addr16
add
rorl
pop
fidivrl
dec
cld
adc
jecxz
test
sub
aam
add
in
loopne
mov
fcomps
xlat
adc
mov
push
xor
add
sbb
jne
pop
jno
movsb
or
or
pop
jmp
jge
daa
lock
jns
mov
adc
push
mov
add
or
bts
jmp
int
or
mov
or
mov
jae
ljmp
push
add
js
lahf
push
cmp
mov
fistpll
push
call
push
enter
add
lahf
push
mov
outsb
sub
push
mov
lahf
out
sahf
xor
and
adc
mov
fprem
mov
insb
push
js
mov
push
jno
lahf
lock
test
hlt
mov
clc
push
adcb
das
inc
dec
je
lock
lock
out
fstl
and
mov
iret
repz
int3
aam
lea
sbb
lahf
or
pushf
inc
add
mov
add
lahf
les
sub
addl
push
push
cs
pop
or
call
xor
scas
and
mov
adc
dec
and
ret
mov
sbb
jle
adc
lcall
jo
or
idiv
jns
push
adc
jge
inc
mov
imul
mov
mov
movsb
stos
test
xor
scas
adc
or
aam
adc
add
sub
lds
test
fs
and
xlat
inc
add
inc
mov
lea
imulb
sbbl
jmp
hlt
mov
repz
out
daa
jecxz
add
add
and
push
enter
jge
lret
or
inc
or
je
insb
popf
fs
xchg
dec
dec
adc
loopne
jae
add
dec
jae
cmp
push
pop
sub
push
jge
jmp
outsl
mov
and
insl
dec
or
fcomps
or
jne
or
push
imul
mov
je
sbb
inc
lods
ja
adc
inc
lcall
lock
or
int3
push
test
daa
adc
xor
xor
jno
and
inc
cwtl
ret
dec
les
push
std
push
jno
shll
fs
add
orb
push
sub
mov
cmp
js
nop
sbb
je
movl
sub
clc
dec
sbb
fsubrs
fmuls
hlt
jecxz
rol
xchg
xchg
jp
sbb
mov
sbb
dec
in
es
mov
jl
sub
ljmp
daa
xchg
add
les
add
sbb
loopne
cmp
or
es
lret
jle,pt
test
adc
es
add
inc
mov
nop
sbb
lea
inc
adc
pop
xchg
inc
dec
dec
inc
aad
fcomp
pop
push
pop
push
or
jecxz
xchg
sbb
push
inc
and
inc
movb
mov
test
inc
incl
xor
xchg
mov
pop
push
imul
shrb
ret
sub
js
dec
inc
mov
sbb
adc
or
test
xor
or
lock
subb
inc
add
push
mov
test
fstpl
adcb
push
mov
out
pop
jae
adc
jbe
push
inc
pop
sub
sub
or
fmull
push
in
or
inc
outsl
fmull
stc
pop
cmp
push
adc
pop
divl
in
lds
test
aas
inc
ds
pop
add
mov
mov
jle
push
push
jne
aam
in
fcomps
xchg
dec
ljmp
jns
or
or
push
call
ss
pop
mov
add
add
and
rcrl
jp
mov
fcoml
add
imul
xchg
add
ljmp
xchg
push
push
push
mov
sbb
inc
in
mov
jno
fsubs
inc
shlb
jle
add
fyl2x
daa
xor
inc
add
jmp
popa
dec
sub
cli
out
stos
add
lcall
ret
cmpl
mov
aas
xor
push
jmp
rorb
je
adc
and
int3
daa
xor
negl
sti
rorb
popf
in
mov
clc
aam
fadd
pusha
not
mov
jne
xor
cmp
sbb
push
je
jne
add
mov
inc
mov
popa
pop
dec
nop
push
inc
leave
mov
mov
test
in
or
call
or
cmp
pop
pop
out
dec
push
jp
les
ljmp
rcrb
jl
clc
movsbl
cvtps2pd
mov
sbb
pop
sar
pop
mov
xchg
es
push
inc
imul
out
mov
mov
sti
or
aam
clc
sub
dec
sub
dec
call
add
loop
je
sbb
jne
cs
scas
pushf
pop
or
mov
add
ds
cli
dec
loope
push
xchg
sub
or
pop
shrb
cs
clc
loopne
mov
mov
shrb
inc
mov
shlb
adc
lods
shll
jb
xchg
daa
out
sbb
pop
hlt
stc
nop
je
push
cmpl
insb
je
lock
mov
subb
xlat
ds
xor
sub
pop
mov
and
mov
or
xor
mov
xor
repnz
dec
xor
movsl
mov
dec
fs
mov
or
adc
pop
outsl
imul
js
sub
je
mov
push
push
lahf
and
push
dec
inc
sub
lret
pop
scas
pop
sbb
rorb
sbb
sbb
jle
inc
je
pop
jge
xchg
jns
or
add
and
movsb
nop
mov
cmp
mov
fdivr
xchg
dec
pop
or
out
in
sub
je
push
jae
mov
testl
mov
mov
mov
add
pop
loopne
icebp
dec
and
in
or
fmuls
mov
mov
dec
andl
sub
inc
es
pop
push
mov
inc
scas
mov
push
mov
inc
push
insl
cmp
popa
lock
ss
negl
test
ljmp
shlb
ss
add
addl
pushf
outsl
not
jg
inc
mov
push
mov
movb
loop
mov
aas
push
mov
or
dec
loope
setp
hlt
mov
inc
mov
hlt
mov
pop
std
cmp
inc
mov
js
jecxz
dec
popa
movsl
mov
adc
shlb
push
xor
ret
push
ss
cli
add
add
pushf
into
add
addr16
sub
push
push
push
outsb
je
test
ss
or
cmpsb
mov
popa
aas
add
sbb
lret
test
sub
or
xchg
adc
or
add
sbb
adc
add
subb
add
imul
adc
hlt
mov
push
cmp
jle
insl
cmpl
incl
loopne
subl
sbb
adc
mov
sbb
mov
out
call
orl
sti
sbb
sbb
ret
dec
sub
lea
pop
mov
jo
popa
lock
xorb
ljmp
pop
jo
rcll
call
sbb
dec
nop
orb
ds
inc
adcl
sub
push
mov
hlt
outsb
mov
add
out
addr16
rolb
cmpsl
dec
decb
popf
mov
in
lock
loope
xor
lock
lahf
rcrb
enter
push
lret
push
test
cmp
xor
push
out
inc
fbstp
inc
mov
fcmove
push
fidivrl
pand
out
or
je
cltd
loope
sbb
dec
sub
mov
cmp
jl
jae
arpl
inc
fisubl
in
pop
fimull
push
or
sbb
jno
into
ds
test
decl
push
and
lea
cmp
sbb
push
push
inc
std
loopne
or
push
and
shlb
or
xor
xchg
clc
sahf
add
popf
loop
lret
mov
dec
jmp
pop
xchg
sub
inc
cmp
ljmp
test
into
and
popf
adc
mov
movb
inc
jmp
push
mov
mov
loope
pop
xor
jmp
dec
push
xchg
mov
or
cmp
sub
sahf
mov
adc
test
aas
addl
sub
add
dec
jl
jecxz
jmp
and
sub
push
test
sahf
adc
stos
mov
adc
enter
fisubrs
popf
fcoml
or
pop
test
mov
push
jp
dec
xor
dec
fdivrl
lea
stos
test
imul
add
push
jbe
dec
or
movsl
sub
fdivs
filds
lods
mov
nop
aaa
cmp
outsb
shlb
pushf
push
loopne
stos
or
jle
rorl
movsl
sbb
cmp
add
cmpsb
mov
scas
push
repnz
andb
and
adcb
and
add
rcrl
push
mov
clc
mov
and
daa
pop
mov
shrb
cmp
mov
sub
movsb
loope
sahf
pusha
cmp
test
xlat
pop
sub
outsb
mov
push
movsb
xor
stc
cmp
roll
inc
mov
jno
push
scas
push
add
xchg
push
mov
bound
pop
rolb
js
loopne
sbbb
shlb
pop
shrb
mov
xor
mov
insb
or
adc
lea
sbb
cmp
inc
cli
fdivrl
out
dec
or
rolb
and
lcall
mov
in
push
mov
mov
add
push
inc
dec
popa
rcll
or
scas
aaa
subb
push
pop
popf
or
test
jne
push
aas
out
push
fmull
arpl
lds
test
std
pop
sahf
andb
clc
or
push
aam
push
les
cli
loopne
adc
xor
cmp
cmp
mov
outsb
push
xchg
and
jmp
mov
or
sbb
mov
adc
add
inc
xchg
imul
cmp
xchg
sub
or
mov
rorb
notl
pop
cwtl
adc
ss
fisttps
sub
mov
inc
mov
enter
sub
sub
fdivl
rclb
jno
or
test
in
push
shrb
cld
jmp
cmp
out
jnp
mov
inc
rcrl
nop
and
cltd
sub
sbb
sarb
or
add
lods
mov
clc
adc
or
ljmp
addb
cmp
jbe
push
pop
mov
dec
or
addb
jae
mov
shr
lea
not
and
decb
jne
add
cmp
aad
sbb
lea
xor
pop
cmp
pop
add
push
or
cld
add
or
or
mov
sub
jmp
clc
and
fisttps
mov
push
shlb
and
sti
mov
mov
xor
dec
pop
cmp
jge
stos
add
mov
imul
sub
and
pusha
pop
out
sub
jno
jno
mov
sbb
je
aaa
fsubrs
divb
sub
jmp
push
mov
loopne
mov
xor
push
cmp
pop
dec
add
mov
push
or
add
xchg
in
insl
rcr
ficoms
or
mov
sarb
or
loope
ret
cmpsb
adc
mov
mov
inc
mov
adc
mov
mov
ret
inc
lret
call
jl
clc
mov
jmp
dec
adc
push
mov
or
lcall
cld
shrl
or
repz
enter
add
and
and
adc
jg
test
loope
add
scas
sti
divb
call
aas
gs
push
or
repnz
push
flds
sub
dec
inc
adc
inc
dec
push
inc
out
and
pusha
add
and
pushl
sbb
xchg
push
push
mov
push
loope
sbb
mov
adc
push
adc
adc
jp
call
sub
cmp
lahf
outsb
jp
or
mov
sbb
das
mov
or
imul
lock
data16
cmpsl
test
add
js
add
dec
adc
les
or
loopne
lock
xor
data16
push
sub
test
sahf
push
and
jge
fucomi
fwait
orl
insl
lods
fisttpl
addb
push
inc
imul
push
notb
je
add
rolb
ljmp
rorb
clc
incb
pop
fadds
mov
dec
jne
or
pop
push
cltd
out
addr16
mov
popa
xchg
pop
lea
shrb
inc
aaa
dec
xchg
inc
sub
shr
push
add
paddb
incl
sti
adc
or
adc
add
lock
push
add
sub
sbb
push
loopne
jno
add
mov
cmpsb
loopne
daa
dec
sub
sub
mov
sahf
pop
mov
inc
mov
icebp
pop
inc
mov
test
dec
dec
inc
jne
or
adc
jle
lds
not
and
les
pop
scas
inc
mov
adc
add
shlb
sub
sub
stc
mov
jb
mov
push
pop
xor
adc
ret
adc
es
int3
inc
mov
rolb
mov
cmp
aam
add
rcl
gs
mov
int3
push
pop
xchg
cmpsb
add
pop
mov
popf
lcall
mov
xchg
lret
pop
add
cmp
nop
dec
or
mov
jns
sub
push
roll
add
ljmp
cltd
adc
xor
inc
add
and
sbb
jbe
mov
adc
imul
pop
rcll
push
pop
adc
call
sub
adc
js
jmp
add
jmp
aaa
js
xchg
push
test
iret
adc
push
add
xchg
call
sahf
and
mov
inc
and
clc
jl
cmp
inc
or
lods
clc
lds
inc
dec
insb
pop
xor
push
sar
dec
ret
sbb
and
add
clc
adc
cmp
dec
xchg
xor
dec
je
fbld
mov
fadds
fld
roll
ja
dec
ficoms
add
sbb
mov
adc
dec
lea
mov
mov
xchg
jbe
lock
or
mov
xchg
xchg
cmp
lods
decb
into
mov
out
cmp
xchg
xor
jns
dec
fcmovbe
add
push
add
mov
jp
xchg
add
ret
lods
inc
push
js
and
inc
cmp
push
push
mov
or
push
jge
add
out
adc
pop
add
cli
in
or
push
xor
outsl
or
push
nop
cmp
and
decb
xlat
adc
gs
ret
adc
bound
push
jne
mov
out
mov
fnstenv
jmp
jns
xor
aaa
daa
add
sbb
add
xchg
lods
mov
and
popf
and
rclb
and
pop
and
cmp
je
mov
mov
sbb
in
cli
and
mov
mov
dec
pop
iret
jne
push
jno
mov
and
cld
xchg
push
scas
pop
push
popl
out
rep
jnp
pop
dec
mov
and
jne
mov
push
xor
and
leave
inc
test
inc
push
pushf
push
cmp
jno
or
out
icebp
sbb
or
and
add
test
add
xchg
sbb
shrl
xchg
subl
and
clc
jmp
jo
push
decb
jne
int3
dec
das
pop
je
and
jmp
jp
mov
pop
pusha
dec
bound
fwait
or
mov
imul
test
fnstenv
inc
je
cmp
push
or
das
pop
mov
enter
sub
jge
cmpsl
push
and
subb
cld
or
push
or
enter
mov
or
sub
ljmp
adc
pop
in
xor
shrl
jbe
lods
test
lea
ds
jne
cmp
into
push
sbb
mov
inc
add
cmp
mov
repnz
xor
idiv
cmp
loopne
or
mov
jae
adc
adc
jp
mov
inc
sbb
mov
add
clc
dec
push
cmp
ud0
lock
add
mov
adc
xor
jnp
sbb
or
add
das
daa
and
shlb
cmp
push
lcall
pop
mov
inc
cmp
cmp
mov
out
cmp
push
mov
or
xchg
je
add
insb
popa
push
xchg
insl
repnz
xchg
or
push
and
cld
push
xchg
shlb
or
andl
and
aas
jmp
push
dec
xchg
fidivrs
sbb
fsubrs
negb
std
lahf
pushl
adcl
add
adc
out
pop
jne
push
or
sub
sbb
movsl
mov
inc
cmp
iret
mov
dec
sub
cmp
ret
push
add
outsb
psubd
sbb
movl
hlt
and
cmpsb
es
dec
scas
inc
xchg
imul
inc
je
jl
in
dec
das
sbb
or
sahf
and
sarb
aad
add
jbe
push
rcrb
dec
pusha
sub
mov
adcb
sbbb
jnp
or
lea
or
lea
lods
popf
call
xchg
hlt
test
and
sbbl
sbb
mov
stos
lahf
sbb
lock
adc
jge
jmp
movzwl
or
int3
test
jns
xor
je
add
cmp
je
into
push
mov
ljmp
sbbb
loopnew
out
test
mov
sub
pop
lcall
xor
ja
addr16
mov
movsb
mov
cmpl
dec
shrb
jle
sub
sbb
adc
fsubrs
or
mov
lret
pop
add
mov
xchg
arpl
push
shlb
pop
and
in
leave
rorb
ss
pop
outsb
inc
push
enter
scas
and
hlt
faddp
adc
hlt
hlt
icebp
push
jns
add
fcmovu
inc
fistpll
insb
jne
cli
mov
or
pop
and
pop
mov
adc
xchg
inc
cmp
xor
arpl
scas
cmp
mov
push
sbb
jmp
int3
or
nop
out
push
pop
std
dec
sub
inc
movsb
xor
ret
jne
mov
in
in
pop
repnz
or
movsb
cli
dec
push
fs
add
sbb
push
push
test
xchg
roll
enter
dec
cmpsl
call
enter
mov
mov
push
enter
call
cmpb
test
in
fmulp
call
xchg
and
dec
outsl
cltd
or
add
call
nop
xchg
stos
xor
jns
decl
add
mov
mov
test
stc
pusha
nop
xchg
and
andb
inc
test
xchg
xchg
lret
movsb
shr
cs
sub
mov
rcll
hlt
xchg
lahf
push
or
xchg
ret
repnz
cltd
shrb
cmp
add
call
xchg
pop
mov
dec
jb
pop
rolb
xchg
in
cwtl
add
push
nop
in
push
cmp
inc
test
test
mov
fwait
clc
mov
leave
mov
xchg
jle
cld
enter
cmp
or
mov
data16
fwait
ret
cli
test
fidivs
push
popa
and
sahf
cmpsl
cmpsb
lea
adc
push
or
inc
mov
daa
cmp
push
xor
pop
pop
lea
dec
cmp
mov
mov
addb
push
add
clc
xchg
xchg
push
xor
xchg
in
inc
pop
sub
fwait
adc
add
and
in
push
mov
andb
cwtl
or
and
cmp
and
push
call
mov
outsl
cmp
mov
xchg
stos
push
lcall
and
mov
jnp
adc
dec
xchg
pop
popa
mov
add
mov
adc
cmc
aam
repz
and
or
int
in
dec
lret
adc
loop
sahf
dec
sbb
add
add
hlt
out
dec
mov
stc
mov
aaa
inc
cld
push
add
dec
cs
xor
nop
cmp
cmp
adc
das
inc
adc
push
dec
add
or
xor
outsb
ror
and
not
and
cmp
jne
jo
and
cmp
dec
pop
xchg
sub
rorb
mov
cmp
add
shll
std
decb
je
mov
pop
mov
inc
fwait
push
push
and
adc
cmpsb
sub
jg
sbbb
fstps
add
xor
sub
sbb
dec
mov
add
add
jno
mov
push
or
pop
inc
fmul
lret
loopne
lcall
mov
add
call
and
std
dec
aaa
jno
loopne
jne
out
in
xor
add
sub
leave
pop
jmp
jo
mov
rorl
mov
jb
lods
repnz
sub
das
sub
mov
sub
je
dec
je
add
and
sbb
gs
or
sti
fldenv
lcall
xchg
push
sahf
pop
pop
test
cmp
and
mov
sbb
lods
insb
movsl
sub
js
add
ja
add
add
jno
mov
lret
xchg
adc
lock
pop
in
test
in
lock
push
in
lret
loopne
adc
faddl
push
dec
ret
scas
lret
fsubrl
fstl
push
xchg
inc
add
lock
mov
aaa
jne
das
and
inc
lock
push
ljmp
repz
pop
push
mov
mov
das
cmp
inc
andl
add
mov
lods
lea
rorl
mov
or
jp
inc
push
cmp
xor
lock
push
addl
jne
sbb
mov
popf
jle
inc
jle
shl
daa
hlt
fisubs
pop
push
inc
clc
add
hlt
ja
cmpxchg
jb
push
xchg
jmp
inc
stos
insl
shlb
adc
fldl
popa
push
jmp
test
or
or
insb
inc
jp
rcr
jg
cmp
test
jne
push
push
orl
icebp
push
sbb
std
xor
mov
orl
adcl
jne
cmc
pop
sbb
inc
mov
xor
aad
and
dec
js
jno
inc
sbb
stos
in
pop
fnstenv
call
mov
mov
lret
in
lock
call
pop
sub
jno
dec
mov
std
lods
std
mov
clc
lret
pop
into
jne
xchg
pop
mov
movsb
sbb
clc
ja
call
sar
loope
add
mov
add
jg
xchg
dec
sbb
loopne
sar
clc
mov
mov
and
xchg
mov
int
adc
push
test
jle
xchg
out
test
inc
pop
cs
pop
push
dec
inc
push
adc
push
or
mov
ja
movsbl
mov
cs
xchg
std
lods
gs
jb
lcall
mov
shl
mov
enter
push
daa
adc
mov
jne
enter
pop
or
mov
add
push
xor
aas
test
iret
mov
cmp
lea
stc
or
iret
and
inc
ds
mov
leave
mov
es
popa
push
mov
mov
scas
mov
push
or
inc
loop
mov
lcall
mov
jne
inc
sub
pop
mov
mov
and
cmp
jne
add
jne
inc
lret
testl
inc
xor
mov
xchg
movsl
in
push
fimull
adc
imul
cmpsb
rol
jne
js
cmp
cmpsl
test
dec
or
nop
mov
cmp
leave
jae
mov
repz
scas
lea
push
repz
in
push
movsb
mov
sahf
iret
sbb
push
inc
call
adc
jmp
push
or
ret
dec
js
mov
xor
sbb
adc
dec
sti
push
inc
cmp
mov
cmc
popf
lea
sub
out
in
mov
lods
scas
outsl
dec
mov
cwtl
add
dec
jnp
dec
mov
cmp
imul
int3
push
push
adc
xor
pushf
adc
mov
lods
push
sub
push
mov
hlt
mov
jecxz
jns
daa
mov
mov
add
jns
xorl
hlt
std
push
add
loopne
sbb
sub
jnp
jno
enter
pop
mov
push
or
or
mov
pop
cli
cmp
bound
xor
mov
pushf
or
ret
in
lcall
pop
jb
pop
in
mov
cmp
mov
lret
insl
pop
xor
cmp
std
aaa
addr16
xor
mov
std
jecxz
das
pop
fdivr
sar
div
cmp
add
mov
test
ret
test
shlb
adc
add
push
add
nop
mov
mov
push
jmp
shr
call
sahf
bound
mov
popa
sbb
pusha
std
mov
sub
push
mov
fdivrs
push
lret
loop
mulb
les
mov
mov
gs
std
mov
or
lea
pop
mov
mov
lods
outsl
lods
dec
imul
inc
ret
cmpb
insl
mov
cmp
data16
sbb
push
mov
ds
std
mov
mov
pop
out
popa
mov
out
pop
repz
shrl
add
ljmp
aad
xor
loop
test
bound
dec
lret
shl
ret
xor
roll
adc
push
cmp
cmpsb
inc
inc
adc
sub
in
ss
cmp
mov
sbb
call
mov
std
lock
cmp
aaa
imul
test
xor
std
mov
cltd
std
inc
repz
pop
scas
out
sarb
mov
popa
pop
out
lret
mov
es
fisttpll
out
stos
mov
or
test
dec
jmp
dec
mov
movsb
jnp
add
xchg
lret
sar
lock
xor
mov
sub
sub
or
pop
mov
adc
and
cmp
loopne
sub
movsl
addl
mov
push
div
add
aam
pushf
jns
jae
movsl
lock
dec
andl
sub
fbstp
cmpsl
add
push
movsb
adc
or
add
lret
inc
sub
sub
into
push
dec
dec
hlt
or
enter
fdivr
das
push
and
jno
push
push
and
xchg
je
sub
std
lods
and
loopne
in
sub
xchg
mov
enter
das
movsb
bound
mov
xchg
mov
nop
jo
inc
add
jns
iret
roll
mov
pushf
xor
test
lret
inc
inc
jns
or
and
adc
sarb
fidivs
and
fsubr
add
push
xor
pop
and
popl
xor
loope
and
pop
in
and
add
cmp
lea
mov
insb
loopne
cmpsl
xor
inc
in
push
or
lcall
adc
sub
cmp
ja
add
lods
repnz
leave
and
add
or
lock
cmp
clc
nop
pop
pop
or
loope
sarb
int3
xlat
popa
enter
push
sbb
sbb
or
dec
dec
push
imul
aaa
xchg
add
xor
mov
pop
test
jb
sbb
lret
push
jns
scas
movsl
call
jecxz
call
push
pop
leave
and
lret
add
in
lret
jne
mov
or
lret
sbb
xor
xor
int3
les
out
xor
push
lret
or
mov
mov
test
sbbl
xchg
push
cmpsb
outsb
movsb
and
pushf
inc
leave
and
cli
das
xchg
int
lods
test
enter
dec
sub
es
xchg
sbb
xor
adc
mov
push
sub
mov
loope
mov
jne
cmp
fwait
mov
sbb
test
std
int
cltd
dec
cmpsl
add
mov
mov
movl
pop
inc
mov
and
adc
aaa
cmpxchg
and
or
xchg
psrad
adc
mov
mov
push
or
mov
and
cmp
inc
inc
add
fisttpll
aad
inc
es
pushf
movsb
bound
sbb
dec
push
aaa
add
repz
adc
test
enter
test
test
adc
pop
jb
adc
leave
enter
pushf
and
push
subb
or
addl
rorb
xor
mov
jmp
aam
push
add
mov
lea
rolb
ja
push
test
sahf
cmpsl
push
pop
mov
test
mov
shr
or
out
push
mov
sbb
jg
adc
and
pusha
movsl
push
test
lea
or
stos
dec
ret
out
mov
or
lods
inc
or
xor
sub
or
xchg
jne
or
and
push
fidivl
test
lret
es
push
sub
inc
add
aam
or
jp
jge
cmc
mov
xchg
dec
rep
ss
neg
pop
mov
std
lods
shlb
lock
push
add
pop
sub
add
scas
inc
imul
sbb
mov
xchg
xlat
adc
iret
imull
push
push
dec
adc
push
and
dec
in
xor
dec
push
pop
outsl
data16
jl
inc
or
jbe
jle
sbb
dec
movsl
push
outsl
ja
mov
or
xor
sbb
shrl
lock
and
sub
cmp
lods
lret
xchg
fmuls
pop
dec
rorb
outsb
mov
test
and
call
mov
sub
push
lret
pusha
xchg
nop
sub
ja
push
fcomip
imul
shrl
shll
fnstcw
jl
jae
clc
in
lock
rep
jge
adc
insl
mov
xor
fcmovb
adc
pusha
out
or
and
or
mov
rorb
sbb
int3
pop
jmp
nop
lret
pop
jae
rcr
adcl
ret
hlt
pop
add
xor
stos
loopne
fidivs
lcall
jne
movb
mov
lcall
pop
aam
mov
xchg
add
jne
add
or
nop
icebp
xchg
ja
in
dec
pop
mov
or
cld
cmp
mov
xchg
icebp
jl
int
mov
xor
cmp
push
shrb
popa
push
pop
cmpsb
xor
mov
sub
daa
pop
mov
mov
adc
jmp
jno
into
fistps
pop
js
or
adc
clc
in
aas
dec
and
push
mov
lods
cmp
inc
or
outsl
mov
test
je
idivl
sar
xor
loop
ret
aaa
mov
push
push
mov
sbb
iret
add
xchg
pop
and
jne
xlat
and
xlat
lea
popa
add
sub
add
les
mov
push
mov
add
jmp
bound
adc
and
add
out
or
insl
mov
pop
inc
cs
add
adc
jmp
or
das
push
jo
das
mov
repnz
mov
in
inc
inc
lds
inc
jae
xor
cmp
pop
mov
add
mov
adc
arpl
xor
inc
loope
push
ret
mov
sbb
fists
ret
jnp
cmpsb
lea
cltd
push
add
je
hlt
scas
or
leave
daa
clc
inc
push
inc
sbb
jae
cmpsl
xor
inc
testl
fdivr
mov
mov
lret
sbb
test
add
jp
adc
pusha
sbb
xchg
scas
mov
jae
push
movups
and
pop
and
mov
cmp
fisttpll
push
mull
sub
xchg
cmp
pop
inc
push
pop
push
push
inc
shr
rcr
shr
rcr
or
mov
jnp
jne
div
pop
dec
adc
inc
mul
pop
jb
cmp
ja
jb
cmp
or
xor
and
jle
rorl
or
fcmovu
scas
nop
inc
inc
fcmovu
lret
iret
gs
or
loopne
mov
add
bswap
and
sub
pop
jmp
inc
repz
inc
pop
clc
mov
movb
adc
movb
cmp
dec
fwait
push
jno
push
adc
mov
lret
adc
push
push
addl
dec
cmp
sub
add
sbb
sbbl
sub
nop
xor
pop
pusha
loopne
adc
jecxz
cltd
les
adc
dec
leave
mov
jne
mov
jp
pop
mov
and
or
data16
movl
stos
fwait
cmpsb
xchg
test
cmova
dec
sub
sbb
and
sbb
shrl
test
add
lea
or
push
lds
lret
pop
outsb
clc
aas
push
push
aad
adc
lret
push
popf
test
test
ret
cmc
jne
ja
mov
add
lea
xchg
dec
inc
sahf
adc
adc
cwtl
sbb
sbb
dec
mov
popf
and
sbb
sbb
add
push
or
xor
push
inc
jb
pusha
jl
mov
orl
push
pop
loop
pop
les
cmp
jo
xor
adc
pop
add
mov
aaa
adcb
out
add
lret
jo
xor
push
xchg
xor
mov
mov
add
sub
enter
add
pop
sbb
adc
adc
fwait
daa
stos
add
push
sbb
add
mov
pop
cltd
xchg
push
jo
test
jge
in
daa
ret
sar
insl
sub
jnp
sub
inc
lock
js
adc
add
pop
adcl
xor
aad
inc
cmp
push
pop
pop
push
imull
loope
insl
mov
fisubrl
je
mov
jo
repz
gs
push
pop
and
stc
add
out
les
cmpsl
test
sbbb
xchg
inc
gs
shll
pop
adc
pcmpeqb
mov
fdivrp
iret
bound
push
jle
sub
or
or
inc
jecxz
shl
push
adc
add
loopne
xor
ret
icebp
ljmp
jle
in
xor
jo
and
ljmp
add
jo
pushl
cmp
sbb
int3
pop
inc
clc
cs
lret
push
out
cmp
je
imul
shlb
faddl
aam
xchg
pop
addr16
adc
cld
pop
and
nop
sub
cmp
ret
and
daa
add
js
mov
mov
ficoms
dec
push
mov
add
loope
pusha
and
test
icebp
lods
dec
in
cmp
icebp
repnz
sub
cli
push
add
and
popf
adc
nop
loope
add
inc
fistps
inc
in
pop
sub
loop
mov
roll
and
xor
daa
dec
sbb
mov
pusha
pop
mov
pop
jne
sub
adc
fistl
xor
or
cs
sbb
mov
sbb
jp
hlt
or
jb
inc
sub
pop
ficompl
or
pushf
lahf
push
push
sbb
mov
or
mov
clc
cmp
lock
or
add
jo
push
orl
push
xor
cmp
cwtl
pop
nop
sbb
pop
movsl
inc
add
loopne
mov
sbb
add
arpl
jecxz
nop
andl
mov
mov
or
push
lret
mov
imul
or
fisubl
out
mov
ret
xor
adc
or
inc
and
fs
scas
adc
hlt
add
sti
add
test
dec
pusha
jae
cmp
in
scas
add
add
test
repz
lock
xchg
and
leave
xchg
out
outsb
test
jle
cmp
xor
lods
roll
and
add
jle
cmp
aas
lahf
or
cmp
push
mov
test
cmp
and
cmp
jmp
pop
sbb
mov
or
inc
xor
pop
leave
push
sbb
mov
push
cmp
pusha
sbb
fucom
cwtl
mov
dec
mov
xor
gs
mov
lahf
movsb
push
cmp
icebp
imul
or
sbb
pop
fnstsw
pop
add
add
push
mov
mov
mov
jne
call
sti
or
std
dec
mov
shll
fwait
out
or
fxch
and
adc
sbb
jmp
add
rcr
mov
lods
daa
pusha
cmp
cmp
jbe
pop
xchg
ss
frstor
push
add
and
dec
je
cmp
scas
mov
push
xchg
push
push
mov
mov
push
or
cmp
or
adcl
idivl
push
les
mov
in
and
xchg
aaa
adc
scas
push
or
je
aas
push
cwtl
xor
mov
aam
out
mov
jne,pn
sbb
inc
mov
cs
sub
adc
in
jbe
lret
jge
mov
mov
pop
mov
add
fildl
gs
mov
sbb
rolb
lds
dec
jmp
push
dec
cmp
insb
rorb
add
xor
add
or
sub
adc
int
lcall
jmp
pop
add
mov
daa
sub
iret
xchg
insb
in
push
dec
jmp
scas
data16
addl
addl
xor
push
push
jmp
arpl
add
inc
mov
jne
cmpl
sbb
lret
sbb
and
cmp
jbe
inc
or
repnz
in
inc
subl
cmp
xorl
xor
movsl
neg
jmp
and
inc
test
and
sbbb
stc
ja
outsb
dec
ret
loope
rcll
addl
test
mov
and
add
call
or
cmp
push
dec
out
push
cli
ljmp
mov
outsb
dec
adcl
popa
les
mov
orb
je
sbb
pop
push
cs
sbb
inc
mov
inc
sub
repz
sbb
negl
and
popa
loopne
xor
imul
lods
pop
push
add
in
or
mov
in
dec
push
out
mov
sbb
mov
add
roll
mov
add
adc
fdivrs
adc
and
cmp
xor
dec
or
mov
adc
jb
push
bound
add
dec
mov
cmp
sub
inc
mov
cmp
mov
jl
mov
test
push
test
add
jne
xchg
add
inc
lcall
fsubrs
ja
cmp
ss
div
dec
jmp
xor
add
dec
cmp
inc
inc
adc
add
add
inc
pop
je
pop
lods
popf
dec
lea
sahf
jb
je
mov
and
adc
xor
or
sub
jmp
add
push
inc
inc
pop
push
addl
sbb
add
dec
call
clc
cmp
cmp
leave
inc
dec
andl
fnsave
inc
add
xor
inc
pop
icebp
mov
pop
add
adc
mov
ljmp
cwtl
mov
inc
sbb
cmp
dec
inc
push
insb
xor
call
mov
sbb
mov
inc
mov
dec
inc
andb
sbb
mov
xchg
aas
aam
es
stos
push
aas
jae
mov
mov
shl
pusha
test
mov
push
ss
xchg
mov
jl
lock
xchg
jge
jge
lea
push
orl
or
add
mov
or
mov
adcb
pop
loope
jne
jo
lds
pop
and
or
adc
and
jo
sub
lea
test
mov
lods
mov
cmp
roll
mov
sbb
repnz
sub
push
sar
push
add
inc
dec
inc
hlt
arpl
cwtl
loopne
das
mov
jae
fcoml
sbbl
add
aad
gs
dec
jne
cmp
sub
add
jmp
sbb
cmpb
lock
or
fdivl
and
or
out
int
pop
or
push
cwtl
push
ljmp
sbb
aas
xchg
add
mov
sub
lea
pushf
pop
mov
inc
push
pop
push
dec
mov
xchg
rolb
and
or
mov
jmp
add
insl
mov
or
or
push
and
push
cmp
inc
mov
pop
mov
js
jae
add
dec
in
pop
mov
xchg
and
loop
out
mov
jmp
add
sbb
sbb
rclb
in
or
add
and
outsl
rorl
dec
andb
and
adc
or
inc
cmp
sbb
ficoms
adc
insl
std
sbb
lock
jo
push
mov
push
add
xchg
push
test
cmp
lock
mov
add
out
add
mov
push
out
inc
add
mov
shll
or
jns
pop
pop
or
incl
hlt
inc
orl
rclb
xchg
pop
clc
mov
xor
out
or
xorb
jb
dec
adc
push
andl
xor
push
add
shl
mov
pusha
add
aas
push
aaa
xor
lods
lret
rorl
mov
add
or
cmp
cmp
mov
movl
mov
add
rcl
imul
adc
adc
xchg
mov
push
and
insb
aaa
inc
dec
out
mov
sbb
sahf
or
inc
jl
shlb
xlat
cs
mov
pop
push
sahf
mov
pop
xor
push
xchg
movsb
loope
cltd
xor
mov
jg
add
mov
test
adc
fisttpl
or
xor
not
push
shl
or
sbb
cld
mov
add
adc
jb
icebp
mov
xchg
pop
xchg
dec
add
ret
sub
pop
sbb
cmpl
dec
adcb
clc
loopne
in
mov
pop
xorb
rcl
mov
data16
popa
push
mov
pop
bound
jae
jle
scas
inc
sbb
mov
dec
fdivrl
decb
in
add
ret
pushl
sub
push
movsl
add
adcb
xchg
out
jae
sbb
push
arpl
nop
add
fmull
mov
je
ret
inc
inc
adc
jl
idivl
inc
pop
test
inc
push
dec
mov
push
ret
xchg
and
test
xchg
jge
cmp
js
mov
push
cmp
fnclex
stos
insl
jecxz
adc
push
aaa
jp
std
push
ja
add
push
loopne
jno
imul
or
dec
cmp
jb
nop
mov
scas
out
pop
and
mov
mov
xchg
add
mov
dec
dec
je
add
push
inc
pop
push
add
cmp
inc
in
out
imul
leave
xor
xchg
lret
add
fdivrs
and
int
mov
sub
mov
xor
iret
decl
cwtl
push
add
jne
or
cmpb
test
push
and
push
sub
add
int3
xchg
jl
add
or
test
mov
popf
xchg
pop
mov
jae
bound
cmp
das
push
adc
cmpl
adc
or
and
xor
dec
or
xchg
jb
lret
or
sarb
lods
shrb
sbb
aam
sarb
ret
jle
sub
sub
cmp
sub
push
and
mov
mov
push
jg
adc
out
push
pop
test
ljmp
sub
pop
aas
jmp
adc
outsl
jo
popf
lret
mov
jae
adc
fnstcw
or
cmpsw
shl
push
adc
dec
fadd
fadds
sbb
jmp
sbb
push
push
push
mov
aaa
push
adc
sub
mov
or
testl
pop
imul
shlb
aaa
xchg
cli
sub
jl
cmp
jg
inc
jmp
mov
inc
inc
or
pop
js
cmp
mov
inc
add
add
inc
push
push
mov
xor
inc
xor
add
roll
and
nop
sub
pop
adc
movsl
cmp
push
mov
mov
xor
fadd
aam
dec
stos
imul
cwtl
mov
cmp
push
ja
out
out
divb
and
add
jo
ljmp
leave
mov
leave
inc
leave
inc
or
xor
gs
push
daa
jno
stc
pop
push
repnz
sbb
and
andl
add
je
cmpsb
icebp
and
das
jmp
add
es
out
add
add
pop
or
ret
sub
divb
or
xchg
loopne
xchg
or
jb
dec
dec
inc
loopne
daa
mov
rcrb
push
andl
int3
push
and
sbb
dec
pop
or
dec
pusha
insb
adc
sarl
jae
fimull
in
or
fisubrl
cmp
push
sub
xor
or
in
int
in
and
enter
loopne
add
fbld
adc
mov
pushl
es
cltd
clc
sbb
test
adc
in
pxor
or
adc
push
jmp
sahf
sub
aam
shl
ret
das
aam
sbb
stc
ds
movsl
xor
or
jne
pop
in
mov
cmp
cmc
xor
adc
xor
jbe
dec
inc
mov
and
test
and
inc
rol
jg
jle
adc
push
popa
xchg
add
lret
adc
xchg
or
mov
jl
push
adc
adcb
push
add
add
push
movsl
push
das
jo
sti
add
sub
add
shll
int
sub
pushf
sbb
xor
push
push
sub
movsb
jno
or
push
push
adc
sub
mov
sahf
lret
or
dec
lock
jg
dec
jg
and
pop
jl
mov
sub
mov
sub
dec
leave
xchg
or
fstl
jle
call
fneni(8087
xchg
lea
sub
xchg
addb
test
gs
add
out
jbe
lods
xchg
xor
mov
cmpsb
lock
out
jb
shlb
mov
mov
fdivs
aaa
inc
inc
push
inc
inc
pop
xor
adc
stos
push
gs
lods
pop
stc
xchg
outsl
mov
cmp
gs
pop
cmp
jle
dec
or
lahf
dec
jns
inc
or
sbb
sub
je
fdivrl
cmc
lcall
dec
rolb
jbe
dec
mov
xchg
inc
dec
jmp
jmp
xor
addr16
out
xchg
mov
and
sbb
add
pop
mov
popf
jne
or
rolb
into
enter
cmp
inc
push
int3
and
xchg
fidivrl
ret
sbb
or
jle
bound
add
aaa
add
dec
sbb
mov
cmp
pop
cmp
adc
or
dec
imul
test
push
aas
mov
decb
cld
xchg
inc
mov
pop
mov
ja
mov
and
and
repnz
push
sbb
loope
sbb
ficoml
repz
roll
icebp
mov
jnp
nop
test
je
int
cltd
aam
push
addb
jecxz
jg
add
std
es
stc
jl
push
jmp
cmp
mov
ja
popa
xchg
je
mov
fadds
mov
addb
sub
loopne
mov
shl
add
inc
sbb
arpl
add
pop
add
enter
xor
mov
loope
call
adc
test
insl
mov
push
leave
lock
xorb
inc
mov
ds
jno
push
or
sbb
and
xor
or
push
popf
push
xchg
pop
add
sahf
sbb
add
add
out
fsubs
xchg
loop
aaa
mov
icebp
roll
cli
fcmovnb
sub
inc
andb
mov
mov
ss
sbb
arpl
imul
test
mov
nop
sbb
ja
filds
or
add
pop
je
pop
cmc
and
xor
rorb
add
rol
or
mov
mov
jb
fs
leave
inc
cmp
inc
bound
jae
push
cmp
jl
mov
inc
leave
addb
mov
xchg
xchg
adc
ja
lcall
jne
lea
testb
jne
clc
push
mov
push
add
or
repnz
mov
fld
push
ljmp
pop
pusha
and
cmovno
push
inc
add
mov
jp
and
dec
and
mov
insl
inc
and
enter
aad
sub
icebp
cmp
scas
mov
mov
sbb
push
push
mov
scas
adc
or
add
or
xchg
adc
lods
mov
shll
xchg
or
sbb
xchg
xlat
jns
jne
fadd
cmc
jle
and
in
rcll
arpl
lods
xchg
cmp
add
dec
add
pop
jle
xchg
mov
mov
sbb
xor
inc
xchg
mov
pushf
jl
jecxz
loope
adc
and
lret
add
pusha
push
popa
jns
pop
mov
sbb
nop
xchg
add
push
add
mov
popf
clc
dec
lahf
adc
jecxz
push
lock
subl
lea
sbbl
jl
and
pop
and
outsb
pop
fs
or
hlt
inc
sub
dec
adc
in
pusha
jbe
add
push
dec
pop
loopne
sbb
dec
insb
fldt
lods
in
cmp
fstl
orl
call
lret
pop
hlt
sbb
das
pop
sbb
aad
out
cmp
call
orl
nop
mov
push
adc
or
scas
or
subl
sbbb
jmp
mov
or
popa
shll
and
notl
ljmp
and
xor
adc
lock
push
daa
loope
mov
jnp
es
push
push
adc
clc
push
mov
ljmp
xor
aad
or
lret
pusha
mov
mov
cmp
fcos
mov
xlat
je
cmp
push
adc
shll
testb
les
add
xchg
push
or
pop
add
dec
dec
sarl
jmp
inc
ds
faddp
sbbl
adc
jb
cmp
add
stos
dec
insb
push
push
or
push
push
jo
int3
in
push
xchg
adc
push
inc
push
out
and
call
and
js
mov
adc
icebp
xor
jecxz
push
es
or
out
push
pop
pop
adc
mov
cld
jl
xor
rorb
inc
insb
pop
mov
push
pop
jmp
inc
add
inc
loop
push
pop
mov
lods
or
xor
adc
push
lods
mov
push
or
imul
push
ret
push
xor
sub
sbb
outsb
je
in
mov
cmp
jb
jbe
lea
lea
or
inc
or
ljmp
push
cmp
repz
mov
popl
pop
push
add
mov
push
jmp
and
je
dec
movb
mov
push
xchg
adc
cmpb
cmpsl
pop
clc
push
mov
inc
sbb
mov
add
sub
orl
mov
mov
sarb
call
rcrl
ljmp
je
arpl
js
cmp
xor
out
mov
push
gs
push
xor
or
push
add
out
sbb
test
xorl
or
jb
jb
adc
ss
and
and
sub
leave
leave
leave
xor
cmp
xchg
ret
inc
and
xchg
xchg
xchg
fildl
dec
push
in
adcb
in
in
fs
in
je
jl
rcrb
test
mov
dec
cwtl
pushf
mov
movsb
test
sub
mov
je
and
ret
add
cmpsb
or
lock
test
shlb
movsb
mov
data16
clc
adc
cld
out
adc
or
nop
add
or
fs
or
or
and
or
iret
enter
pop
push
pop
mov
adc
enter
pop
dec
inc
xor
cmp
rcl
sarb
mov
inc
dec
jne
out
and
pusha
sub
jb
lret
sbb
sub
lods
ret
cmp
call
insw
or
push
fnstenv
call
dec
sbb
mov
add
lock
add
fs
int3
movsl
aam
or
pop
repnz
add
out
adc
push
sub
aaa
loope
fadds
jne
int3
mov
xor
inc
mov
fucom
fcomp
inc
dec
adc
pop
pop
cwtl
jo
pop
jle
cmp
add
or
das
cmp
xchg
inc
cmp
adc
xchg
or
loope
ret
idiv
mov
mov
inc
inc
fistps
fmuls
adc
push
mov
mov
int3
or
rcrl
inc
lock
lcall
adc
sbb
aam
aam
add
inc
or
pushf
insl
enter
in
sub
and
inc
push
xlat
test
and
mov
xor
mov
pop
stos
mov
add
lock
popf
repz
mov
mov
fs
mov
in
inc
call
test
cltd
aam
mov
and
pop
mov
adc
or
mov
jp
adcl
add
jge
or
mov
dec
je
jnp
jbe
xor
ss
les
roll
clc
inc
dec
xor
loopne
pop
roll
mov
fcmovne
jo
test
lcall
push
popf
and
mov
sub
sbb
pop
add
pop
mov
or
add
xchg
idiv
push
clc
and
mov
and
cmp
add
ret
jp
pop
lea
xor
mov
psubb
lods
ljmp
add
inc
pop
add
adc
mov
notb
sti
jmp
inc
xor
mov
push
fsubrp
sbb
rclb
sub
test
cld
push
lret
ds
dec
push
add
sub
add
in
fbld
cmp
mov
adc
add
jmp
xor
push
push
cmpsl
push
lea
push
and
out
sar
push
push
mov
add
sar
mov
or
or
loope
sti
add
cmp
loope
out
mull
jne
aad
mov
push
wbinvd
push
adc
inc
popf
lods
popa
rclb
or
mul
push
mov
daa
ret
mov
push
adc
ljmp
call
xor
mov
hlt
out
je
pusha
dec
sub
xchg
lock
jnp
popf
pop
addl
pop
outsb
xchg
push
xor
ss
mov
adc
inc
adc
mov
sbb
mov
pop
cmp
in
lods
mov
lock
mov
mov
mov
lock
jmp
mov
in
push
add
cmp
ja
sub
add
cmp
fsubs
mov
mov
xchg
push
push
je
dec
rol
add
call
jmp
push
dec
rolb
add
push
cmp
pushf
es
inc
pop
pusha
xor
loop
lods
jnp
imul
push
nop
popa
push
push
inc
test
push
or
lahf
xor
dec
sub
rol
shl
cmp
mov
popf
incl
cmpsb
int
xorl
push
or
add
add
or
scas
sub
or
add
movzwl
push
cmp
rorl
add
lock
inc
int
push
jmp
jo
adc
sub
adc
lahf
stos
pusha
push
je
int
inc
insb
fcomp
pop
sub
repnz
cmp
sbb
add
fisttps
cmp
sub
mov
xor
inc
mov
sbb
xor
inc
dec
add
sub
mov
roll
jl
iret
dec
and
jmp
xchg
mov
and
arpl
sub
mov
cmp
mov
adc
cmpsl
clc
adc
or
inc
mov
adc
cmpl
fmuls
push
pop
push
icebp
xchg
and
inc
pop
push
push
mov
cmp
movb
jmp
xorl
cmp
in
movsl
dec
add
in
and
xchg
loop
inc
cmp
jg
repnz
mov
inc
inc
shlb
adc
xchg
cmpsl
mov
or
add
inc
nop
aas
mov
shrb
dec
stc
pop
xchg
cmp
mov
adc
into
xchg
push
rdmsr
addr16
xchg
sub
addb
sahf
and
xchg
sarl
jmp
ror
or
sub
out
shrb
mov
jno
leave
adcb
adc
mov
sub
or
xorl
lock
lret
jmp
or
and
stos
push
sti
mov
bnd
lea
mov
cmp
fildl
xor
rclb
cmp
shlb
test
inc
jne
mul
pop
push
fnstenv
fidivrs
xor
sub
mov
fprem
rcll
cmpb
mov
jg
icebp
ret
or
or
icebp
pop
or
pop
mov
sbb
ja
dec
leave
pop
test
mov
cmp
flds
cmp
push
xor
xor
mov
loopne
loope
sub
and
cmpsb
loope
or
sbb
sbb
inc
cli
clc
pop
lea
mov
sbb
fcmovb
dec
or
sbb
popf
adc
push
xor
or
jno
dec
adc
or
jmp
unpckhps
push
push
js
and
sbb
or
and
cmpsb
push
sbb
mov
cwtl
mov
add
ss
test
xor
push
pop
mov
into
xchg
outsl
add
jge
add
lock
js
xor
push
and
adc
xor
addr16
sbb
add
mov
repnz
and
lret
sahf
mov
ljmp
xchg
inc
in
les
test
inc
mov
mov
add
mov
dec
and
aam
add
add
xor
and
push
ror
and
ficoml
sub
or
mov
sbb
orl
inc
sub
mov
jge
mov
mov
orl
inc
out
arpl
push
pop
cmp
add
mov
xchg
xchg
shlb
dec
jbe
jge
out
stos
jge
addr16
pop
or
and
add
push
mov
call
lcall
faddp
push
jne
xchg
mov
mov
cmp
adcb
add
jecxz
push
pop
lods
pop
lods
mov
or
pop
pop
mov
cmp
adc
jns
adc
lahf
clc
or
push
sub
lock
iret
mov
push
xor
xor
inc
test
cmp
inc
xchg
cld
and
push
push
and
xor
outsb
lahf
je
inc
cmp
shlb
fwait
mov
test
add
js
pop
sbb
push
add
in
add
push
popa
add
or
adc
xor
add
movsb
mov
popf
adc
inc
sbb
xor
sub
jmp
pusha
in
lock
lret
dec
lret
jae
dec
addl
rorb
test
inc
jmp
icebp
xor
jecxz
cmp
xchg
int3
mov
loop
jle
mov
test
mov
ret
sbb
sbb
loope
push
rcrb
gs
cmp
inc
lds
fcoms
push
and
sbb
and
jnp
push
mov
sub
rclb
cwtl
xchg
fistpl
cmp
push
mov
mov
sub
mov
mov
mov
sub
mov
lahf
inc
insb
movsb
mov
in
cmp
lock
push
cmp
int3
jne
test
mov
leave
gs
cs
inc
dec
and
and
sbb
mov
shll
mov
loope
rorb
inc
dec
cmp
sub
xor
sbb
pop
clc
lods
mov
je
sub
dec
cmp
push
dec
inc
jb
xor
mov
dec
dec
loop
mul
jbe
pop
cmp
dec
jbe
jbe
mov
mov
mov
xchg
fldenv
loope
cld
cmp
push
fdivrs
repnz
rcrb
ret
mov
adc
inc
mov
rorl
jl
movsl
inc
insb
nop
push
jle
scas
fildl
pop
test
and
testl
add
stc
push
xchg
sbb
lcall
or
add
mov
xchg
les
inc
dec
xchg
push
xchg
mov
mov
push
ret
ret
inc
sub
and
hlt
jne
and
push
adc
mov
dec
or
ror
cltd
dec
add
xor
rorl
gs
dec
ret
hlt
sbb
bound
nop
jp
push
in
jg
aas
push
pushf
pop
mov
xor
pop
sub
je
push
popf
punpckhdq
pop
call
orb
pop
idivl
and
outsb
push
addb
loope
and
in
xchg
and
and
icebp
push
push
xor
lcall
inc
or
out
je
test
push
or
xchg
js
dec
lock
and
push
mov
xchg
test
sbb
ret
xchg
add
or
xor
in
or
nop
outsb
jg
and
not
xor
loope
xor
fcmovne
or
shr
dec
outsb
add
jmp
mov
and
js
sahf
lock
test
adc
or
add
pusha
xor
out
or
addl
cmp
je
or
or
sub
adc
or
inc
jmp
pop
clc
outsb
divl
add
std
or
jmp
inc
and
mov
cmp
add
jl
and
jecxz
jbe
xor
xchg
jmp
call
adc
xor
inc
in
and
inc
mull
jge
jge
je
sbb
xorb
js
flds
and
mov
pusha
mov
pusha
loope
pop
sub
roll
dec
and
mov
xchg
adc
fnstsw
pusha
ljmp
mov
pop
je
push
addr16
inc
testb
push
es
adc
test
add
add
test
fisttps
incb
das
call
or
sub
inc
jmp
sbb
mov
imulb
pop
testl
insl
jmp
adc
jb
jnp
lods
xor
push
and
inc
add
adc
add
inc
flds
fmuls
and
or
pop
xor
sbb
repz
sub
sbb
and
xchg
cmp
inc
fistl
pop
sub
addl
adcb
ret
mov
mov
sti
lret
mov
mov
inc
aam
xchg
jmp
sbb
push
aaa
sbb
mov
and
sbb
in
test
add
les
sub
dec
push
in
lods
sub
jmp
sub
push
fstl
fsts
sbb
test
int3
in
mov
div
add
xor
sbb
pop
repz
js
clc
push
loope
pop
ds
fstpl
lods
or
cli
imul
or
or
pop
push
push
mov
inc
cmp
iret
mov
add
div
jb
enter
xchg
push
repnz
mov
dec
into
pop
clc
xor
in
mov
orl
bound
shl
sub
push
idivl
jp
push
sahf
jmp
inc
mov
push
pop
movsb
lods
mov
std
adc
xor
adc
or
jge
rclb
mov
adc
add
cmp
mov
push
add
xchg
fwait
and
add
and
das
adc
xor
or
jmp
or
mov
mov
push
sarb
adc
push
lea
or
jnp
mov
push
dec
cmp
je
je
jl
cmp
sub
push
es
sbb
js
das
adc
pop
add
hlt
or
adc
and
add
sbb
loopne
jecxz
pop
sbb
pop
push
out
push
mov
pop
adc
add
mov
fsubrp
fwait
jno
mov
scas
inc
and
jo
popf
in
pop
add
or
pop
xchg
xchg
rolb
or
dec
pop
push
ss
sbb
scas
cmp
mov
fsubrl
mov
in
add
imul
sub
add
sti
pop
in
cmp
and
or
adc
sub
or
adc
les
out
sbb
and
ficoms
adc
js
inc
adc
sub
loopne
fsubs
jo
std
inc
popa
xchg
xchg
lret
xor
xor
int3
pop
cld
sub
clc
jge
icebp
cli
inc
sub
cs
jo
jp
loope
ret
sahf
push
push
daa
adc
shl
dec
sub
pop
cmp
push
and
mov
sbb
ja
add
ljmp
add
xchg
push
cwtl
sub
jno
fadds
into
aaa
test
push
mov
sub
push
push
cwtl
sbb
push
xor
test
mov
imul
pop
or
mov
aad
icebp
sbb
sti
mov
shll
push
or
stos
inc
add
or
push
movsb
aas
and
and
sbb
je
mov
cld
push
imul
jno
es
sbb
sub
shr
loop
pop
sub
ret
enter
aad
push
jo
push
rcrb
lods
jge
test
inc
fldenv
sbb
and
xor
push
in
fldcw
push
push
mov
or
lock
sub
fwait
sahf
jbe
cltd
loopne
fwait
int3
and
sbb
inc
insb
xchg
adc
and
jle
adc
fdivp
jb
mov
xor
cmp
and
mov
push
inc
pop
loopne
je
xchg
scas
push
mov
xchg
and
sti
jo
mov
and
push
call
jp
inc
ret
repz
out
mov
mov
sbb
pop
add
and
cmp
jbe
xchg
rclb
insl
jmp
sbb
cs
adc
xlat
sub
fidivrs
mov
inc
shlb
mov
pusha
xchg
and
test
push
mov
or
data16
clc
inc
or
jbe
rorl
out
enter
cwtl
xchg
dec
aam
addb
cmp
adc
pusha
and
dec
dec
mov
outsl
inc
dec
push
gs
inc
inc
test
out
sahf
mov
psubq
xchg
push
sub
lods
cmpl
fwait
lock
test
adc
mov
dec
mov
add
push
sub
mov
push
or
sub
mov
add
adc
xlat
enter
push
push
dec
std
dec
sbb
rorb
cmpl
add
adc
mov
add
ret
push
push
inc
sub
rclb
add
or
fchs
cmpsb
sub
dec
push
or
lock
aaa
add
out
sub
lods
or
mov
cmp
mov
test
clc
pop
test
jne
or
jl
mov
roll
push
stos
stos
test
inc
inc
aad
adc
push
sbb
aam
xor
clc
orb
rcrl
or
pop
cltd
mov
pop
add
gs
dec
jns
dec
out
xchg
mov
xchg
loopne
lea
pop
subb
inc
rorl
cmp
or
in
pop
pop
inc
aam
loop
rolb
adcl
shlb
repz
push
cltd
shlb
idivl
mov
out
mov
inc
mov
dec
jl
sub
dec
jbe
dec
data16
daa
icebp
mov
add
orb
js
xor
cmp
sbb
dec
outsb
das
lods
jg
adc
jb
incb
jae
mov
mov
adc
es
sub
jns
add
and
cmpsb
fiadds
rolb
xchg
push
add
hlt
ljmp
sti
cmp
dec
dec
stos
test
ds
and
packuswb
push
aam
xor
inc
inc
xchg
loop
or
rorl
mov
clc
out
ret
cli
out
and
push
cld
not
in
popf
inc
sbb
repnz
cmpsb
and
sahf
pop
ds
push
or
and
icebp
jne
shl
and
mov
or
inc
shl
clc
loope
inc
mov
jl
mov
movsb
data16
fs
aam
movsb
sbb
bound
popa
pop
lahf
cltd
inc
jno
dec
mov
hlt
test
inc
icebp
and
push
push
pusha
addb
mov
inc
sub
lea
dec
add
inc
sbb
dec
mov
fs
push
pop
xor
jg
xor
add
adc
dec
lds
inc
lock
or
jecxz
insb
inc
or
add
sbb
mov
mov
inc
mov
mov
leave
call
add
fcompl
gs
xchg
lret
mov
clc
pop
aam
mov
iret
and
cmp
mov
or
jno
shrb
cld
sbb
add
ret
jge
jmp
pop
scas
shl
loopne
adc
out
pop
std
adc
xor
and
add
or
push
outsl
add
stc
and
scas
mov
pop
bound
pop
pop
xchg
in
or
daa
in
adc
pop
inc
or
adc
xchg
pop
add
adc
sub
inc
cmpl
adc
cmp
sbb
in
sbb
add
inc
adc
sbb
inc
movsl
cmpl
dec
mov
push
sti
xchg
call
nop
into
mov
lcall
add
movsb
call
pushf
cmc
xchg
adc
ss
ljmp
inc
nop
cs
push
mov
mov
lcall
cmp
in
jne
inc
jmp
mov
sub
mov
sub
add
hlt
testb
ret
sub
cmp
ja
push
dec
jmp
fs
mov
adc
mov
mov
rolb
call
add
dec
cmp
add
dec
ret
xor
jge
nop
mov
jmp
cmpsl
pop
sub
test
add
and
xchg
pop
pop
mov
jle
dec
sti
inc
jle
cmp
push
xor
add
incb
jmp
dec
push
mov
in
jbe
push
lods
loopne
popf
sbb
cmp
iret
add
push
jmp
mov
mov
sbb
dec
dec
ja
mov
ret
dec
mov
mov
pop
jge
pop
jnp
jae
cmp
test
nop
mov
adc
dec
dec
jae
popa
inc
cs
imul
sbb
push
fs
adc
scas
inc
add
outsb
mov
or
decb
push
sub
iret
and
cmp
in
orl
jne
add
pop
scas
push
and
scas
mov
xor
mov
jo
test
mov
and
call
mov
rorl
sbb
xor
fldcw
fadd
fstps
js
ud0
or
add
testl
pusha
and
rcr
hlt
adc
push
addl
jmp
cld
sub
sbb
and
sub
mov
cmp
std
push
fsubr
jle
jmp
mov
jmp
push
cwtl
pop
imul
mov
push
mov
inc
sbb
ret
hlt
test
jne
xor
test
fcos
or
jge
neg
add
mov
int
imul
pop
jge
les
mov
pusha
add
cs
sbb
ret
into
outsb
jle
add
sub
xor
lods
sbb
mov
add
test
sbb
mov
sarl
push
mov
cmp
mov
sbbl
rorl
push
mov
dec
mov
cmp
je
sub
dec
or
mov
sbb
xchg
mov
push
xor
and
and
and
adc
mov
fs
andl
sti
imul
mov
ja
cld
mov
or
scas
out
mov
pop
movb
testl
jne
enter
int
jnp
les
test
into
jne
inc
mov
pop
cmp
cmp
jne
shr
lods
hlt
int3
add
jne
mov
aaa
add
test
rcrl
or
cmp
add
les
sahf
inc
push
movsb
push
or
sub
xor
lock
dec
ja
fwait
enter
push
js
subl
lcall
sub
sub
mov
jg
add
dec
pop
dec
cs
pop
test
js
outsb
mov
and
shll
clc
mov
add
or
shr
js
push
add
or
push
out
fucom
and
bound
or
aaa
add
adc
inc
mov
les
testb
sbb
mov
jmp
adc
dec
fcom
insl
fadd
loopne
shr
or
mov
shl
call
jne
dec
bound
insb
mov
mov
push
push
ja
or
and
jbe
xor
inc
jge
cmp
add
ficompl
cmp
ret
sti
pop
dec
subb
cmp
cmpsb
push
call
or
scas
fidivl
jl
fidivrl
jb
lods
cs
jno
push
fmull
pop
nop
dec
ja
cmp
add
cmp
mov
mov
xor
into
jmp
scas
xlat
jge
mov
xchg
rolb
add
xor
and
mov
cmp
int3
mov
xorb
lret
das
mul
popf
adc
negb
jns
sbb
movups
cmp
and
ret
or
adc
inc
push
xchg
xchg
add
inc
push
sbb
sbb
imul
mov
out
sahf
out
jp
out
popf
inc
lcall
pushf
inc
sbb
push
lcall
or
add
jne
outsb
inc
mov
jne
cmp
mov
xchg
push
add
scas
inc
insb
mov
mov
add
dec
mov
rorl
test
cmp
in
mov
push
or
push
test
xchg
adc
inc
das
shrb
xchg
or
ss
cmp
je
incl
xor
mov
dec
cmpb
je
mov
jg
mov
cmp
pop
jne
dec
mov
inc
inc
mov
out
add
ljmp
pop
mov
sbb
inc
add
negl
add
sbb
clc
xor
imul
adc
or
in
add
xor
xor
mov
xor
xchg
and
subl
notl
arpl
gs
and
shlb
movsl
add
mov
dec
sbbb
xchg
sub
pop
xchg
mov
cmc
jmp
xchg
and
sbb
rorb
or
add
sbb
adc
mov
shll
test
dec
setg
sub
out
clc
add
mov
mov
mov
aas
sub
movb
lea
sarb
mov
cmp
jecxz
iret
sbb
xorb
mov
insb
dec
xlat
xchg
es
les
cmp
jmp
sub
add
add
je
pop
push
pop
xor
ret
fs
add
pop
inc
dec
inc
out
cs
jae
and
dec
jns
les
sub
inc
fs
ficomps
dec
in
test
or
mov
jne
add
testb
inc
add
popa
mov
lea
push
push
pop
daa
push
or
inc
or
sub
inc
or
xor
adcl
test
loopne
pop
insb
push
cwtl
inc
adc
or
ja
xchg
push
mov
andl
jle
dec
adc
insb
xchg
mov
aam
sub
adc
and
lods
mov
fidivrl
xor
enter
inc
xchg
or
pop
mov
lock
push
add
dec
sbb
fucomp
cmp
repz
inc
mov
push
add
and
ljmp
dec
cwtl
inc
sbb
dec
push
mov
adc
and
jecxz
imul
pop
xchg
mov
jmp
xor
mov
rclb
fcoml
xchg
mov
pop
add
das
sub
add
push
and
stos
lret
adc
dec
rol
xor
pusha
and
mov
sar
lea
fdivrl
adc
adc
dec
mov
xor
ss
mov
add
push
xor
ret
inc
enter
movsb
dec
ja
loopne
js
push
cltd
xchg
mov
push
dec
dec
jmp
ret
dec
and
add
mov
xchg
nop
and
popf
fcmovb
sub
mov
neg
sbb
jecxz
loop
mov
jg
ret
daa
xor
or
jne
pop
dec
je
sarl
add
mov
or
adc
mov
ss
into
dec
dec
xor
and
or
insl
les
pusha
xor
sub
fdivrs
mov
push
sub
adc
and
fcoms
sbb
sar
shrl
loop
pop
dec
int3
outsw
js
jb
inc
mov
outsl
cmpl
ret
mov
add
dec
shrd
sub
cmp
jge
xchg
cmp
ss
jl
cmpsl
dec
push
xlat
inc
clc
mov
or
cmp
int
stc
xchg
stc
inc
add
dec
jmp
jo
xchg
or
mov
sub
scas
xchg
aam
jle
incb
addl
inc
or
nop
or
lcall
xor
jo
call
out
and
add
inc
mov
or
pop
push
fisttps
dec
jb
push
sub
or
pop
shl
fidivrl
rorl
push
mov
out
inc
shll
push
xor
dec
lods
jns
fs
jbe
and
mov
and
push
jg
lods
jb
scas
mov
dec
inc
dec
pop
adcb
or
mov
mov
add
adc
mov
adc
jae
stc
mov
dec
add
sub
mov
or
xchg
cmp
ret
lds
add
les
loop
call
jb
xchg
movsb
mov
jbe
mov
and
inc
sbbb
add
push
cwtl
or
sbb
lock
inc
sub
mov
call
es
jne
orb
stos
mov
mov
push
mov
add
or
pusha
daa
out
into
mov
adcb
xor
filds
sbb
test
or
pop
or
add
pop
push
nop
dec
ds
shl
jne
cmp
dec
mov
inc
lret
jbe
sbb
mov
inc
rorb
push
push
lea
mov
stos
sub
icebp
cmpsb
sti
and
adc
push
insl
push
jmp
insl
cmp
cld
cld
jl
fimuls
mov
mov
inc
aam
out
xchg
or
mov
inc
shlb
sbb
mov
cmc
inc
fsubr
sbb
jns
fldt
nop
call
je
or
push
ds
pop
data16
lea
jmp
aaa
fwait
inc
popa
je
inc
je
testb
jmp
xor
adc
xor
jmp
dec
movsb
enter
cmp
je
mov
xor
dec
jmp
inc
and
push
repz
les
jbe
call
call
dec
add
push
pop
clc
fstps
add
mov
or
adc
push
js
in
loope
add
rol
or
mov
add
nop
sbb
into
rcr
sarl
or
loop
js
adc
xor
dec
pop
enter
dec
inc
pop
push
imul
dec
loopne
imul
movsl
jecxz
mov
mov
cmpb
jne
jp
push
add
pop
dec
inc
pop
push
xchg
rorl
sbb
sub
add
hlt
sbb
mov
stos
xchg
movsl
xchg
rolb
cmp
inc
subb
cmpsl
je
loopne
cmp
inc
xor
dec
cld
test
cmpsb
jno
dec
push
sub
and
xchg
int3
add
pop
call
push
or
dec
dec
dec
pop
sbb
bound
mov
mov
aaa
sub
push
cmp
or
mov
jbe
sub
hlt
mov
sub
mov
movsl
xchg
cs
inc
mov
pop
add
adc
insl
out
lds
mov
fadd
lret
jns
pop
lret
test
pop
push
or
push
data16
xchg
push
pop
dec
push
mov
xor
jno
pop
add
inc
mov
imul
push
push
pop
shlb
and
or
pop
push
aad
movl
xchg
mov
mov
sub
cld
pusha
js
xor
mov
jp
cld
testb
cmp
xor
fdivl
and
sub
mov
lods
sub
out
pop
cmp
mov
mov
icebp
cwtl
adc
mov
jl
mov
xor
mov
sub
pop
and
orb
inc
push
jmp
mov
cmc
jmp
testb
and
sub
xorl
and
xor
negl
push
sbb
xchg
outsb
push
jne
test
xor
or
mov
add
or
add
rorl
fimuls
dec
cmp
ss
push
sbb
sbb
add
xor
inc
leave
icebp
ds
xor
jno
push
sbb
push
and
add
jecxz
pop
sub
jbe
fsubr
cmp
adc
dec
fs
sbb
mov
mov
push
jecxz
push
push
adc
movsl
add
testl
mov
cwtl
pop
hlt
sbbb
xor
adc
out
or
xor
xchg
inc
mov
imul
pop
and
dec
xrelease
shlb
mov
xor
xlat
inc
aaa
xchg
movsb
mov
cmp
jge
notl
mov
and
cltd
sbb
sbb
jl
cs
push
dec
and
fldt
das
add
call
stc
insl
xor
sub
push
arpl
and
xor
cmp
popa
loop
daa
sbb
inc
jmp
mov
pop
jb
inc
jo
mov
and
fmuls
cmp
inc
test
data16
sub
sub
sub
push
cmp
dec
bound
outsl
jl
xor
ret
fmuls
pop
test
icebp
rol
mov
jo
mov
pusha
mov
rcr
jge
jne
lea
pop
jmp
adc
not
cmp
inc
in
adc
leave
mov
pop
repz
pop
repz
adc
loopne
jnp
jp
pop
fsubl
imul
lea
dec
add
aaa
adc
jle
mov
add
cld
data16
mov
cmp
sbb
adc
inc
loope
xchg
xor
rorb
aaa
xor
popf
lret
inc
jmp
lds
adc
ret
jecxz
add
nop
or
fimuls
nop
adc
and
movzwl
sub
sbb
and
sub
inc
jge
loope
jo
es
pop
incl
mov
xor
mov
test
xchg
push
add
lret
mov
inc
xor
insb
mov
adc
js
jo
ss
arpl
push
inc
fldl
out
pop
xor
jmp
out
pushf
mov
sti
and
inc
mov
cmpl
and
lds
cmp
and
jno
adc
jo
mov
inc
sbb
mov
add
sbb
test
adc
sub
lret
decl
dec
cmp
lea
or
and
rol
add
out
pop
add
or
sahf
test
fcmovb
jmp
shr
or
mov
int3
imul
testb
or
bound
scas
push
cld
add
sar
in
stos
mov
cmp
sbb
inc
pusha
lock
fildl
xor
bound
es
add
out
js
inc
imulb
in
cmp
ds
add
shl
testl
cli
mov
push
adc
fimuls
mov
push
jp
adc
cltd
repnz
xchg
xchg
pop
dec
fldl
or
dec
enter
xchg
or
stc
out
sbb
out
orb
xor
and
or
es
orl
cli
and
clc
push
or
shl
andl
mov
xchg
lods
test
xor
clc
stos
test
loope
sub
or
test
test
mov
sbb
lret
je
dec
call
pushw
or
xor
cmpsl
js
pop
cmp
fimull
orb
movsb
ficoml
cmp
mov
outsb
int
pop
cmp
add
xor
pop
mov
cmp
cmpsl
outsb
add
add
fidivl
call
ss
and
push
inc
adc
push
test
in
outsl
ss
xchg
mov
mov
inc
dec
movsb
jle
inc
xchg
push
fnsave
mov
push
jle
push
lds
sub
inc
push
ja
leave
push
popfw
les
or
mov
cmp
adc
ja
cmp
leave
inc
xor
fildll
jbe
cmp
lock
jl
cmpb
jl
add
mov
cmp
adc
xor
add
push
adc
stos
cli
mov
rcll
inc
push
push
mov
push
push
dec
pop
add
mov
or
stos
xor
and
adc
push
push
pop
or
mov
lock
jne
and
mov
pop
cmp
jbe
scas
shrb
fs
and
shl
or
or
adcl
adc
push
fcmovu
inc
mov
add
shll
fldl
push
je
mov
and
scas
or
ljmpw
dec
cli
and
and
inc
fwait
pop
pop
push
imul
sub
fistl
jmp
xor
jge
xor
mov
sbb
push
outsb
push
sbb
aam
xchg
cltd
cwtl
rclb
inc
push
sub
or
pop
or
push
xor
in
add
inc
jg
jge
inc
inc
div
fdiv
fiaddl
jns
sub
inc
sbb
and
addl
sub
sbb
push
push
inc
imul
fsts
movsb
push
sbb
adc
test
and
or
cmp
test
or
pop
pop
pop
adc
shll
adc
mov
rcl
ljmp
shr
sub
dec
test
stc
scas
call
idiv
and
cld
je
dec
lods
test
divb
or
clc
dec
ljmp
adcb
and
cmp
stos
sbb
push
push
sarl
bound
ds
test
jne
call
ljmp
or
push
mov
fimuls
cmp
jbe
jns
aas
jp
add
sub
adc
pop
xchg
cmp
sbb
add
push
push
adc
mov
pop
insb
mov
data16
mov
dec
cltd
orb
mov
adc
adc
cmp
pop
notrack
pop
push
punpcklwd
mov
fldt
push
out
or
cld
and
mov
data16
dec
pushl
dec
fidivs
pop
in
add
jg
push
inc
adc
rol
jge
dec
push
sbb
leave
in
sbb
testb
cltd
jp
lock
das
pop
clc
or
je
xor
and
cld
xlat
adc
es
mov
je
push
and
test
cmp
ja
add
cmp
adc
cmp
jne
mov
shll
leave
adc
mov
xor
idivl
pop
add
add
push
je
mov
scas
ret
ja
sbb
mov
pop
lahf
mov
mov
pop
pop
ljmp
sbb
pop
push
sbb
testb
in
fdivs
push
pop
adc
mov
movsb
into
sarb
xchg
pop
pop
leave
add
fisttpll
mov
and
mov
in
nop
clc
jne
nop
push
cmp
xor
std
aaa
xor
adc
push
and
in
mov
aad
dec
cmpsl
pop
mov
js
add
dec
insl
push
test
add
popa
fst
mov
jno
cmp
push
lret
sbb
hlt
inc
test
sub
xchg
cmp
pop
mov
sub
push
imul
or
mov
sti
les
jns
cltd
dec
jae
and
fsts
inc
sbb
xor
or
jle
xor
add
mov
dec
sti
and
movb
push
rcl
shl
cmp
repz
xlat
fcoms
fwait
iret
sti
fstpt
mov
mov
mov
add
push
fsubs
jne
cmp
test
int3
mov
mov
in
outsl
add
or
adc
push
pop
adc
add
add
movsl
aaa
or
jne
fldt
push
add
sarl
in
ja
test
pusha
call
cmp
xlat
std
into
cmp
das
or
push
xor
push
fwait
loopne
test
adc
add
add
push
and
insb
gs
imul
or
lcall
call
imul
lea
sar
inc
and
sbb
mov
xor
fisttpl
mov
adc
sbb
loop
mov
jmp
cwtl
pushf
sub
or
adc
sub
jnp
adc
mov
adc
sti
add
or
sub
and
mov
adc
les
decl
add
adc
lock
inc
xor
jg
add
mov
lea
icebp
lret
pop
sbb
sarb
mov
xchg
jnp
mov
or
push
leave
bound
mull
and
add
in
ljmp
loopne
inc
or
outsl
or
bound
pop
push
push
push
sub
repz
test
rolb
push
mov
popf
lods
out
sbb
lea
xchg
mov
or
inc
cwtl
or
or
dec
push
ss
sub
cmp
pop
mov
sub
mov
lcall
xchg
cwtl
mov
jge
jl
shll
and
shlb
jo
add
jle
adc
push
outsl
jne
mov
sarl
add
aaa
in
or
cld
or
and
hlt
fsubl
icebp
rorb
push
push
push
lret
out
inc
add
inc
mov
clc
xchg
pop
mov
lods
ss
shrl
mov
hlt
sub
shl
adc
mov
dec
inc
dec
cmp
push
push
add
lock
lcall
jns
sub
testb
xlat
add
inc
sbb
mov
mov
loopne
mov
push
jnp
outsb
sub
sbb
adc
and
popa
aaa
ret
add
push
dec
push
clc
pop
xchg
mov
and
mov
mov
rolb
ja
rcrl
idivb
in
int
mov
push
or
dec
cmpsl
add
mov
scas
push
mov
repnz
pushw
sub
jo
push
test
adc
and
mulb
sbbl
repnz
mov
adc
xor
int
call
ret
loopne
sub
cmp
ss
sbb
mov
test
dec
ss
dec
test
push
sub
push
dec
mov
add
or
call
dec
inc
mov
lea
push
fnstcw
mov
insl
mov
outsb
lcall
inc
inc
and
repz
cltd
add
sub
aas
sbb
adc
negb
negb
and
iret
enter
lock
xchg
lret
out
or
sbb
fs
jge
inc
sbb
loop
lock
jmp
add
movsb
repnz
jne
sbb
in
pop
xchg
loopne
outsl
fimuls
push
or
mov
adc
je
cwtl
push
in
scas
push
sub
insb
sbb
adc
inc
add
inc
mov
aas
int3
mov
push
add
push
nop
cmp
cmp
fbld
jle
out
adc
add
cmpsl
sub
mov
and
popa
call
jb
mov
push
shll
test
jne
sbb
neg
and
pop
jle
inc
imul
icebp
sub
loopne
loopnew
test
add
scas
sub
and
add
fnstcw
in
out
loop
xor
dec
sti
and
aad
stos
cltd
xchg
mov
repnz
mov
add
mov
or
into
in
sub
enter
jl
or
enter
sub
dec
movsb
xabort
push
inc
inc
pop
mov
clc
sbb
scas
mov
cmp
push
shlb
add
mul
add
lahf
add
add
add
in
into
or
sbb
mov
inc
xchg
inc
in
ficompl
nop
dec
mov
dec
lock
hlt
cmp
jge
sub
cmpb
or
add
dec
cmp
jae
mov
push
xchg
jb
add
add
fadds
add
or
fidivrs
jne
dec
mov
jb
int
inc
push
or
adc
loop
ret
and
add
push
add
inc
jbe
ret
adc
sti
sub
enter
or
or
and
ret
lcall
add
push
mov
ret
and
test
add
rclb
or
fisttps
jmp
cli
inc
out
mov
or
xchg
icebp
jns
add
or
jmp
add
adc
pusha
test
adc
mov
stos
or
push
ret
les
adc
or
jae
cmp
ret
aas
test
lret
push
cmp
pop
cmp
xor
into
push
sub
push
pusha
inc
mov
mov
rcrl
dec
mov
or
pop
cmpps
or
nop
mov
adc
xchg
mov
lock
ret
mov
inc
push
pop
jae
or
add
add
add
ja
add
jl
push
test
jl
or
mov
push
je
dec
pop
or
push
mov
or
dec
pop
dec
pusha
test
and
fidivrs
xor
and
ds
mov
mov
movsb
sahf
pop
mov
popa
cmp
or
pop
push
pmulhuw
push
mov
dec
lcall
xchg
or
xorb
or
cmp
stos
jg
subl
into
xchg
into
inc
ret
add
jge
and
in
stmxcsr
cmp
faddl
bound
cltd
ss
or
add
data16
sbb
add
add
xchg
jle
out
push
mov
mov
xor
leave
repz
inc
jg
into
into
push
push
pop
and
out
fisubrs
sarb
push
pop
nop
xchg
push
out
icebp
pop
cwtl
pop
mov
cmpb
shl
push
jnp
pop
add
clc
and
pop
push
sub
add
leave
lahf
sbb
out
pop
test
add
xchg
addr16
add
add
inc
mov
or
je
pop
inc
lcall
xchg
sub
adcl
sub
sbb
lret
jb
lret
push
xor
xchg
push
adc
push
push
data16
push
dec
xchg
mov
pop
rcll
cmp
xchg
test
mov
test
push
mov
xor
push
dec
loopne
adc
and
mov
jno
jle
xor
fwait
pop
movsb
ret
ficomps
adc
sbb
cmp
mov
pcmpgtb
dec
or
and
adc
lea
sarb
addr16
pop
mov
xchg
lea
mov
stc
push
icebp
inc
and
jno
rorl
push
aad
movsb
cwtl
dec
sbb
xor
adc
push
adc
scas
les
insl
add
inc
dec
shlb
push
lock
dec
sub
shlb
out
loopne
mov
fisttpl
ds
je
xor
jp
call
push
cmp
jbe
in
daa
loop
inc
inc
int3
call
jle
xchg
lds
out
xor
inc
push
mov
jo
fsts
ss
dec
loope
jmp
or
shll
and
or
icebp
shlb
lock
fistps
or
loopne
into
inc
push
repz
sbb
xor
mov
add
test
xchg
adc
lods
test
leave
sahf
inc
xor
jmp
sub
mov
sbb
sbbl
mov
pushl
and
in
inc
test
je
test
frstor
das
push
xor
mov
aam
pop
pop
and
jb
inc
push
fcoms
or
minps
nop
popa
push
out
jge
mov
push
adc
add
fs
cli
shlb
cs
pop
aas
fcoml
and
rclb
in
pusha
xchg
dec
sub
in
cmp
pop
xchg
pop
jge
or
xchg
sbb
pop
push
sub
jae
add
xchg
jl
dec
stos
and
xchg
xor
add
jns
push
lods
push
sarl
movsl
pusha
movsl
push
mov
adc
dec
es
ret
mov
pop
aas
jo
rcr
push
cs
pop
add
add
lds
rorb
loop
jmp
push
push
xlat
xchg
mov
scas
pop
inc
es
mov
scas
and
popa
sar
lea
add
lock
mov
xor
mov
inc
add
or
loopne
push
inc
push
jne
push
inc
test
lock
das
lods
movsb
cmp
test
push
or
mov
xchg
gs
or
fmull
mov
fisubrl
mov
inc
sub
and
inc
aam
rolb
sub
push
out
mov
and
push
sbb
insl
add
rolb
fsubs
jle
pop
add
add
sbb
pop
mov
jo
outsb
data16
mov
fcmove
pusha
jns
cmp
xchg
sbb
dec
rcll
aam
notl
jge
pop
add
addl
or
clc
adc
xor
push
lock
adc
sbb
jl
add
ficomps
push
cmp
lea
sub
add
enter
sub
adcl
inc
loopne
repnz
fsts
push
fbld
out
stos
loopne
jmp
push
ret
dec
loop
cmp
inc
add
xor
scas
cmp
push
js
and
adc
rorb
adc
cld
sbb
inc
js
rclb
rclb
inc
imul
fcompl
mov
rcrl
xchg
push
sub
sub
add
jno
push
xchg
sbb
pop
jbe
cli
les
sbb
lcall
or
popa
push
and
mov
inc
cmpsb
inc
hlt
pusha
push
mov
popa
repnz
add
push
adc
push
mov
stos
pop
testb
mov
aaa
or
inc
inc
ds
push
adc
add
mov
add
sbb
xchg
cwtl
or
mov
push
push
adc
aad
push
add
or
dec
pop
adc
pop
xlat
subb
int3
dec
js
mov
push
daa
add
test
mov
push
adc
cmp
sbb
xor
testl
mov
inc
or
mov
pop
test
sbb
pop
inc
arpl
jo
test
adc
xor
dec
add
scas
mov
cltd
mov
dec
loop
loope
and
adc
fwait
test
in
out
prefetch
ljmp
add
movsl
push
dec
in
fisttps
jmp
jp
rcll
cs
rcr
fists
fildll
sbb
mov
pop
adc
jmp
fstps
icebp
or
mov
lahf
or
add
push
mov
andb
cmp
lods
pop
xor
fcomp
adc
test
adc
pop
sbb
mov
movsb
mov
jge
sub
dec
dec
loope
dec
in
jo
scas
movsb
jno
or
inc
or
dec
in
xchg
test
adc
mov
adc
push
bound
sub
push
mov
add
sbb
fadd
fsubrl
es
mov
imul
in
mov
ds
loopne
mov
data16
pop
insl
leave
and
aad
dec
add
jecxz
jbe
adc
les
outsb
sub
fmuls
xchg
adc
bound
daa
in
inc
push
in
lock
or
lock
fwait
dec
adc
inc
dec
pusha
jp
rcll
xchg
call
in
cmp
push
adc
cmp
sbb
repz
adc
dec
adc
add
jo
jl
mov
jl
inc
lock
stc
adc
xchg
sbb
cmp
ss
jb
fs
inc
adc
gs
jge
xchg
lret
insl
call
cli
xchg
mov
mov
orb
pop
xor
inc
xor
push
push
jo
cmp
fs
push
imul
pop
adc
adc
mov
pop
gs
cmp
or
sub
xchg
jbe
cld
mov
adcb
push
pop
mov
push
call
mov
fdivl
mov
mov
jg
or
outsb
push
pop
pop
in
movups
cmp
jg
or
mov
std
sbb
icebp
or
cmp
fcoms
movsb
insl
dec
pop
cld
dec
or
xor
mov
out
cmpsl
sahf
xor
add
pop
or
lock
pop
hlt
add
sbbb
addl
repnz
jnp
andl
popa
aaa
add
push
aad
sbb
and
sbb
imul
jmp
dec
enter
or
aaa
mov
jb
negl
cmp
rclb
ret
cmp
xchg
mov
xor
or
leave
test
pop
sbb
cmpl
test
adc
dec
xor
or
sub
xor
xchg
dec
cmp
xchg
dec
es
inc
dec
fs
iret
fs
insb
out
add
xchg
sbb
sbbl
rol
push
in
inc
sbb
int3
cmp
pmulhuw
faddl
aaa
cmp
add
testb
sub
outsl
dec
pop
or
mov
pop
cmp
cmpsb
inc
in
scas
stc
test
xor
mov
nop
test
adc
xchg
sti
dec
cmpsb
adc
and
test
sbb
xor
movsb
push
loopne
push
loopne
js
test
or
adc
inc
sbb
xorl
bound
and
jno
subb
aas
pop
dec
xor
pop
add
mov
mov
mov
mov
aam
xchg
mov
mov
or
dec
and
xchg
mov
gs
add
movsl
fsub
mov
jae
mov
rorl
sbb
in
jl
call
or
in
or
flds
pusha
fiaddl
push
or
inc
hlt
and
mov
enter
out
lock
adc
add
inc
movq
enter
test
cld
mov
mov
jns
mov
mov
fsubs
mov
mov
shlb
adc
dec
repz
int
movsl
sub
in
les
std
dec
lcall
sbb
loope
mov
mov
clc
mov
xchg
mov
push
dec
aad
in
cmp
sbb
dec
mov
push
push
cwtl
adc
loopne
mov
pop
movsl
cmp
lea
jb
mov
mov
mov
je
jb
rcl
dec
add
xchg
cmpsb
imul
mov
mov
sbb
fists
add
adc
or
cwtl
adc
mov
mov
and
cmc
or
xor
pop
in
mov
sub
xor
insb
mov
dec
xchg
pop
mov
or
das
push
or
adc
add
and
inc
rorl
gs
xchg
jl
add
lea
push
mov
das
setle
push
adc
inc
adc
mov
fadd
xchg
and
inc
cmp
sbb
inc
icebp
and
and
pop
daa
fcoml
sub
loopne
sub
push
dec
insl
adc
sbb
xchg
addb
push
test
jnp
mov
enter
add
roll
lea
dec
cld
sbb
stos
sub
xor
adc
mov
pop
pusha
cltd
fs
cwtl
ss
in
je
adc
aam
addb
jne
pushf
mov
lods
dec
nop
xchg
imul
shl
dec
push
bound
xchg
mov
in
ljmp
sub
test
test
xchg
lret
cltd
fisubl
cmpsl
sbb
xor
subb
call
sbb
lahf
ret
leave
push
add
xchg
jne
mov
sub
jle
scas
mov
dec
push
sub
and
test
inc
mov
push
jmp
rcrb
cltd
xchg
or
cmp
in
lods
cs
xchg
mov
xchg
gs
xchg
xchg
fmull
xchg
cmp
pop
inc
imul
sbb
xchg
sbb
cwtl
pop
adc
dec
enter
popa
cmpsl
or
xchg
or
or
or
or
shlb
sub
daa
in
aaa
or
nop
call
jo
ja
cltd
test
inc
fiaddl
push
sbb
es
imul
ret
xchg
lock
mov
lea
int
or
repnz
iret
rolb
inc
xlat
lahf
xor
iret
stc
adc
out
movsl
sbb
ret
xchg
and
jo
aad
jne
pop
or
pop
mov
mov
repnz
sub
fwait
push
dec
enter
inc
xchg
add
pushf
or
int
incb
fcomps
xchg
iret
pop
cmp
nop
and
fs
pushf
std
and
in
cmp
das
xchg
es
mov
mov
push
adc
insb
mov
mov
push
push
mov
lods
mov
stos
mov
or
cmp
jne
in
mov
inc
or
ret
or
lods
fiaddl
stc
adc
push
mov
or
subl
sub
xchg
adc
dec
test
or
pop
in
xlat
push
xlat
enter
dec
push
cmp
ja
out
inc
es
out
je
imul
jb
rclb
inc
leave
sbb
rcrb
dec
add
push
mov
mov
xor
or
cwtl
cmc
loope
jle
or
and
mov
shlb
movsb
je
movsb
xchg
xchg
nop
jo
sbb
adc
adc
push
dec
fadd
cmp
lods
popa
in
lahf
push
mov
cmpsl
call
adc
ficoml
push
aaa
outsl
aam
cltd
loopne
cmp
invd
addb
push
cmp
or
fcoms
push
adc
mov
jae
cmp
mov
inc
pop
rcrb
nop
in
mov
lock
adc
daa
in
mov
dec
je
mov
rolb
adc
sbb
insl
mov
wrmsr
lds
dec
int3
lods
mov
in
fdivl
lds
movsb
and
pop
faddl
in
dec
push
call
and
movsb
push
test
into
in
or
and
cmpsb
mov
mov
jmp
hlt
inc
dec
lea
xor
cs
ja
fmull
movsl
fsubl
dec
fistpl
rcrb
les
rolb
dec
push
push
mov
add
sbb
decl
xor
outsl
aam
leave
add
mov
fsubl
adc
jo
movsl
mov
dec
rorl
aas
popf
shr
out
adc
cmpsl
sbb
sub
or
inc
lock
cmpsl
push
add
test
or
div
or
mov
pop
mov
test
scas
push
push
jg
test
adc
popl
sub
test
ret
mov
popa
mov
mov
ror
stos
jne
xchg
jg
stos
out
jbe
je
aad
pop
pop
mov
fnstenv
push
cmpsb
mov
xchg
stos
in
fsubrp
test
lods
or
add
fsubr
movsl
sub
mov
sbb
popa
loopne
add
test
mov
addl
loope
inc
addl
mov
sbb
mov
pop
subl
scas
add
sbb
add
mov
push
fildl
jnp
push
adc
or
in
ljmp
in
pop
or
std
pop
adc
add
enter
xorb
es
xchg
test
cwtl
aaa
dec
xor
mov
test
mov
enter
pop
push
bound
jns
in
sbb
fsub
push
sbb
push
mov
daa
inc
push
push
mov
or
ret
pushf
and
cltd
push
mov
ret
adc
lret
ret
roll
push
pop
mov
ret
movsb
mov
mov
pop
sti
mov
cmp
push
pop
adc
xchg
sbb
xchg
jge
mov
jbe
out
xchg
lea
adc
pop
lahf
loopne
xor
clc
mov
xchg
mov
test
orl
lock
lea
add
mov
jne
mov
sbb
jmp
rorb
loope
cmp
cmp
xor
mov
dec
pop
in
mov
clc
imul
fmuls
push
aad
scas
sbb
mov
and
std
movsb
mov
adc
fsubrl
gs
jae
repz
fs
jp
insb
dec
adc
stos
adc
push
js
dec
push
mov
loopne
dec
test
jns
add
jo
mov
lods
popf
outsl
mov
jae
prefetcht1
mov
or
in
shll
xor
and
push
test
cmpsb
push
xor
push
inc
push
lock
xor
inc
loopne
xor
insl
mov
seta
cwtl
in
dec
lock
movsb
fdivl
and
insb
shrb
ret
add
ret
packssdw
pop
xor
and
mov
repnz
or
or
mov
inc
adc
in
mov
mov
and
inc
jae
mov
mov
imul
jne
jns
jns
push
adc
clc
mov
out
adc
shl
or
ljmp
pop
inc
les
invd
mov
mov
sub
mov
shlb
xchg
xchg
enter
sbb
enter
add
les
enter
dec
jge
pop
dec
inc
fs
xlat
inc
sub
inc
shll
push
xchg
out
imul
xchg
sti
lock
and
adc
inc
mov
out
and
adc
imul
sbb
lcall
mov
add
movsb
repnz
add
adc
enter
std
add
lea
test
sti
cmp
aam
lahf
xor
mov
mov
adc
leave
and
or
shrb
xlat
and
inc
mov
and
inc
xor
xor
sub
add
mov
call
out
ja
and
out
movsb
mov
mov
inc
mov
ret
fmuls
shl
rorl
bound
and
push
or
inc
imul
add
add
fmull
test
mov
pushf
pushf
pushf
mov
shrl
jmp
xchg
rol
xchg
xchg
xchg
xor
push
in
mov
add
roll
mov
adc
pop
les
mov
mov
and
enter
mov
mov
pop
mov
ret
add
movsb
inc
fsubrs
lock
pop
and
xor
pop
or
test
enter
sub
sub
popa
adc
or
js
sub
xor
add
or
xor
arpl
test
and
cltd
movsb
adc
cmp
add
and
movsb
sbb
pop
push
sbb
mov
mov
arpl
shll
sub
bound
add
cmp
add
xor
imul
call
lds
in
mov
pop
cltd
mov
iret
fsubs
in
outsl
xor
std
add
cltd
nop
inc
sti
or
or
fs
adc
pop
ss
and
adc
add
inc
mov
add
jge
add
mov
das
in
aam
or
pop
cmp
std
enter
add
or
xchg
or
dec
aam
fldl
add
and
fists
sbb
and
pusha
inc
xor
jb
push
aam
add
fdivs
std
xchg
jb
mov
dec
movsb
sbb
sti
mov
inc
in
sti
mov
sbb
aam
or
pop
mov
int3
mov
aad
aad
cmp
enter
xor
mov
les
mov
test
dec
and
adc
cmp
sbb
dec
or
loopne
inc
nop
addb
loopne
call
cmpsb
adcb
add
xor
push
cmp
mov
push
jne
xchg
cmp
mov
pop
jmp
int3
pop
or
mov
inc
adc
lods
fcmovu
mov
roll
sbb
mov
mov
jae
push
shll
into
stos
imul
fcoms
and
push
loopne
iret
mov
adc
pop
iret
mov
cmpsb
or
enter
inc
shr
stos
sbb
mov
cmpsb
shlb
mov
rorb
aam
mov
test
or
add
aas
add
and
push
and
dec
xor
fdivr
rorl
fcoms
add
clc
push
or
add
sub
cltd
mov
xor
or
add
inc
js
imul
xchg
imul
xchg
dec
xor
adc
xor
and
in
push
fsubs
enter
pop
sub
mov
mov
dec
fwait
push
icebp
cmp
mov
and
xor
push
mov
adcb
mov
dec
fwait
cwtl
adc
xor
je
fs
dec
xor
and
test
cmp
fisttpl
cmp
int3
pop
xor
mov
mov
enter
fdiv
call
xbegin
orb
xchg
stos
push
jo
jecxz
cld
mov
push
inc
stc
fs
add
icebp
push
mov
je
mov
push
mov
pop
inc
jo
mov
or
lds
pop
pop
adc
adc
aad
dec
mov
movsb
and
fidivl
lock
mov
adc
dec
push
dec
inc
fcoms
inc
test
lods
negl
les
rcrb
test
xlat
push
or
mov
xchg
mov
or
pusha
xor
and
test
movsl
test
adc
mov
sbb
xchg
stos
test
fistl
rcr
fstpl
dec
scas
or
push
dec
out
enter
push
mov
rcr
dec
mov
adc
mov
scas
test
loope
fldenv
test
sbb
xor
test
sub
xor
scas
or
push
dec
orl
shll
push
or
and
cwtl
gs
cmp
add
cld
clc
push
movsb
sub
fdiv
cmp
in
xlat
push
dec
xchg
icebp
hlt
adc
lods
sub
pusha
test
add
sbb
cmpsb
mov
mov
hlt
insl
push
sbb
in
jno
rorl
dec
add
adc
nop
mov
clc
xor
inc
fsubl
or
push
ret
aam
clc
xor
and
pusha
test
loopne
lock
mov
cmp
gs
frstor
arpl
push
xor
xor
lds
lret
sub
mov
jo
dec
ds
inc
inc
outsb
mov
push
or
jns
sub
ret
jo
adc
fcomp
dec
out
movsb
pop
fistpl
pop
insl
adc
adc
in
in
inc
sti
enter
imul
int
mov
adc
jl
jo
or
sub
cwtl
stos
adc
push
or
dec
pop
pusha
dec
sbb
subb
cltd
mov
push
cmp
inc
insl
mov
adc
pusha
sbb
andl
enter
inc
inc
and
cmpl
cwtl
loopne
push
add
push
adc
sti
mov
and
xor
or
adc
shrb
cmp
into
pop
outsb
int3
shrl
orl
daa
stc
add
push
cmp
aas
sti
adc
iret
mov
nop
fistpl
call
ds
add
push
push
loopne
mov
std
pop
lret
call
add
and
dec
ds
subb
dec
push
xchg
mov
pop
push
push
xor
and
or
test
fldt
inc
pop
jb
mov
test
and
in
outsb
dec
ss
and
popa
xchg
call
add
nop
mov
das
sarl
fs
imul
out
pop
mov
adc
and
push
dec
push
bound
cmp
push
jb
lea
mov
aas
fnstenv
pop
sti
jmp
push
mov
sbb
adc
ud1
in
inc
sbbb
sbb
out
aad
jo
or
cmp
dec
mov
fistpl
or
jnp
mov
xchg
pop
and
xadd
aaa
dec
and
jnp
or
adc
out
leave
ljmp
jmp
jle
test
push
sahf
out
sahf
xor
sbb
or
int
jne
inc
inc
inc
inc
dec
dec
dec
dec
dec
inc
sbb
dec
push
pop
push
incl
dec
pop
pop
pop
popa
bound
gs
imul
jo
jb
je
jg
pushl
js
jp
xor
xor
sub
daa
adc
mov
gs
cld
jmp
adc
or
outsl
cmp
adc
jns
ret
push
adc
insl
push
mov
fcmovne
repz
xchg
adc
negb
jo
mov
aas
dec
outsb
je
jb
outsl
arpl
fs
out
sbb
push
dec
imul
push
mov
insb
xor
cs
adc
popa
and
mov
je
outsl
outsb
push
js
icebp
sub
aad
jbe
lock
rdpmc
add
insl
mov
sub
xor
in
mov
inc
js
je
jb
gs
cmp
or
outsl
mov
add
add
add
je
push
andb
je
mov
popa
jb
mov
inc
imul
dec
xor
xor
imull
dec
cmp
cmp
out
stc
sub
dec
and
jns
add
das
or
in
mov
dec
push
inc
inc
gs
insl
out
out
or
daa
dec
outsl
jbe
dec
arpl
out
lock
femms
jo
sub
addr16
dec
jne
repz
mov
inc
jo
imul
jb
push
inc
into
cmp
insb
adc
xchg
cmp
sahf
jae
xchg
xchg
cltd
mov
push
jne
xor
loope
and
daa
push
scas
clc
std
adc
aaa
sbb
dec
js
push
jne
pushf
jae
jbe
inc
sub
cmp
push
popa
das
jo
or
cmpsl
cmp
lock
mov
ds
add
push
test
adc
out
rolb
push
adc
inc
test
std
shl
jmp
sub
sub
cs
movsl
cmp
cmp
ds
inc
pop
push
dec
push
das
pop
pop
mov
insl
cli
push
push
cmp
jge
jg
cmp
fildl
imul
out
adc
or
adc
lock
push
inc
insb
jae
repnz
fs
mov
inc
mov
cmp
mov
xor
imul
and
dec
push
push
insl
in
inc
sbb
or
dec
dec
inc
sbb
lods
and
add
xor
sbb
outsb
push
jo
imul
and
inc
scas
cltd
pop
mov
je,pn
jo
fdiv
lret
and
mov
and
sbb
pop
fs
scas
xor
mov
or
xorb
insl
xlat
sahf
xor
mov
mov
fistpl
insl
and
insl
push
gs
fiadds
aas
xor
cmpsb
loopne
and
jne
dec
mov
add
insl
les
out
fwait
dec
and
mov
and
mov
mov
sbb
lock
movsl
add
or
fs
popf
jmp
mov
je
or
flds
and
push
ds
xor
fidivrl
ss
push
mov
pop
xchg
sub
movsb
addb
das
arpl
cmp
ss
dec
popa
sub
negb
fiadds
inc
xchg
xchg
pop
pop
push
insb
imul
lods
cmp
int3
or
push
ret
add
sbb
popa
or
sbb
pop
xor
dec
jno
mull
push
push
filds
push
sarl
nop
aaa
xor
mov
fs
xor
hlt
inc
and
cwtl
pop
dec
add
xor
fisubl
outsl
ss
sub
and
fs
xorl
imul
sarb
xor
pop
pop
ficompl
gs
xor
out
inc
test
outsl
push
or
outsl
mov
cmp
cmp
xor
inc
aaa
and
jecxz
insl
in
ljmp
imul
pop
shrl
or
stos
jmp
add
leave
nop
xchg
lds
inc
insl
imul
push
cltd
cmp
xorl
or
insb
popa
and
and
pop
pop
adcb
push
cmp
addr16
popf
mov
xor
fsubrl
pop
pop
pusha
jo
sub
add
sub
push
sub
lret
inc
sub
jne
jo
pop
dec
jmp
mov
pop
cmp
push
and
cmp
mov
mov
cwtl
ja
ds
inc
inc
and
jbe
and
ud0
sahf
pop
fisubl
add
mov
sub
rol
das
lret
outsl
dec
mov
inc
mov
clc
ret
movsl
add
xorl
jae
jae
push
loop
adc
imul
jle
fisttpl
aad
popa
dec
add
xor
in
adc
jae
outsb
js
mov
addr16
dec
pop
add
add
icebp
jne
and
sub
xchg
adc
adc
test
add
add
add
add
jns
cmp
pop
or
aaa
ds
push
pop
hlt
and
in
pop
or
pusha
add
js
or
sub
pushl
data16
sbb
addb
cmp
push
xchg
test
add
fisubs
pop
daa
push
cmpb
in
popf
fnstenv
xor
int3
push
lods
pop
into
jo
add
inc
push
inc
add
fbld
push
stos
int3
js
mov
pop
dec
rorb
sbb
add
lea
and
nop
xchg
pop
jb
xchg
xchg
xchg
loope
and
addb
and
and
ds
pop
inc
or
cmp
test
add
and
test
dec
cs
test
dec
cmp
je
dec
cmp
adcb
pop
arpl
mov
sti
mov
xchg
in
and
sub
xchg
scas
xchg
and
adc
and
adc
add
and
and
add
rcl
add
add
xor
loopne
add
add
mov
push
add
aaa
inc
sbb
push
add
pop
mov
add
shr
and
aas
sub
addb
mov
nop
xchg
xchg
call
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
pushl
mov
mov
ret
enter
int3
int
iret
rcl
sar
call
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
sar
repz
cmc
div
clc
stc
cli
sti
cld
sbb
inc
roll
incl
inc
test
dec
mov
xchg
sarl
aam
pusha
lcall
int3
fisubl
outsl
ja
add
cs
jae
jb
bound
dec
icebp
popf
mov
stos
inc
ss
popa
outsl
mov
fimull
jne
daa
outsl
lcall
dec
mov
outsl
js
push
push
inc
push
dec
sbb
dec
and
popf
mov
out
mov
dec
mov
stos
aam
mov
in
dec
imul
pop
jns
inc
mov
imul
into
push
and
inc
jb
jns
daa
scas
inc
mov
mov
gs
cmp
bound
mov
xchg
fs
sub
pusha
les
push
mov
mov
jns
outsl
pop
sbb
push
pusha
inc
jbe
push
jnp
jbe
push
push
lahf
mov
jecxz
jns
and
mov
push
dec
clc
jle
dec
fiaddl
cmp
push
or
rcll
and
cmp
xchg
mov
push
push
jae
cmp
and
pop
pop
cmp
call
movsl
jae
addr16
subl
gs
movsl
push
mov
xchg
mov
inc
or
add
out
push
push
dec
testl
dec
divb
xor
cmp
fildll
dec
jge
loope
mov
jg
imul
call
lds
dec
xchg
sbb
xchg
jg
popa
mov
ret
pop
jl
mov
jg
sub
inc
aad
push
or
cmc
fcomps
das
je
outsl
xchg
daa
negb
ret
daa
popw
pop
cmp
sahf
jl
cmp
cmp
push
das
push
fcmovnbe
cmp
inc
jl
push
jle
jbe
imul
addr16
sub
sub
inc
stc
mov
and
cmp
mov
dec
pop
stos
jb
pop
pop
cwtl
jb
sbb
push
jb
lods
xor
adc
xor
int3
lock
lret
lods
or
add
sbb
and
nop
mov
jo
sub
test
sub
cld
jns
push
add
hlt
push
call
sahf
out
mov
rcrl
add
inc
sti
push
aam
cwtl
stc
mov
cmp
insb
inc
push
test
cmpsl
jl
je
fs
xor
pusha
add
pop
pop
add
sahf
out
mov
push
aam
dec
xchg
out
out
jns
mov
inc
rorl
sahf
inc
pushf
aas
push
je
cmp
repz
xor
sub
and
and
cmp
push
push
sbb
add
out
in
clc
decl
shrb
dec
sub
or
out
out
incb
test
pusha
inc
jl
out
xor
sub
hlt
std
repz
shr
loopne
mov
cmpsl
stc
cmp
insb
inc
sbb
cld
aam
out
sahf
mov
pusha
xor
cmpsl
and
or
mov
mov
dec
jns
push
mov
push
pushf
xor
pushw
int
dec
cwtl
cmpsl
pop
push
lahf
adc
fs
sbb
jae
jb
xor
cmpsl
aam
ljmp
xchg
mulb
xor
add
jle
push
insb
test
inc
inc
dec
jae
gs
inc
insb
inc
mov
sbb
push
out
sahf
push
inc
dec
xor
inc
dec
dec
dec
push
push
xchg
xchg
mov
push
dec
inc
dec
add
dec
dec
inc
add
adc
jg
adc
sub
adc
incl
lcall
mov
mov
adc
outsb
mov
ds
cvtdq2pd
pop
push
pop
clc
lret
sbb
nop
fnstenv
xchg
jge
arpl
cmp
adc
dec
scas
jp
jg
mov
fstl
mov
and
inc
sahf
jg
cmp
dec
imul
lret
add
inc
mov
cmp
popf
mov
sub
fwait
ss
sbb
jg
inc
pop
jns
ds
xor
incb
int3
dec
dec
xor
cld
decl
out
dec
pushf
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
jg
pop
and
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
mov
ds
dec
xchg
ret
ljmp
mov
iret
adc
into
mov
pop
and
es
adc
shll
in
jle
outsl
push
dec
push
push
adc
or
outsb
jbe
inc
pop
mov
and
push
fmull
std
mov
adc
and
sahf
sti
mov
dec
push
dec
push
lock
jmp
sub
mov
pop
push
push
sub
push
aas
push
dec
jg
lahf
add
push
push
dec
and
xor
aaa
push
pop
sbb
or
aaa
jle
pop
sub
aas
sbb
mov
aaa
dec
push
inc
pop
das
jno
jb
jbe
fincstp
in
pop
xor
sub
sub
or
dec
pop
xor
fucomi
mov
pop
push
sub
push
sbb
push
adc
push
push
push
push
xor
imulb
inc
das
dec
dec
aas
sbb
and
dec
mov
or
cmp
cmp
daa
ljmp
js
or
daa
pop
dec
adc
inc
or
pop
push
push
mov
push
inc
push
push
es
or
or
es
mov
pop
pop
push
push
push
inc
dec
and
and
pop
add
inc
push
and
push
inc
and
pop
fnstenv
xchg
xor
inc
dec
or
pop
jnp
sub
xor
or
or
sbb
xor
ss
mov
sub
pop
sub
std
xchg
or
adc
xor
sbb
popa
lret
sbb
fisubrl
mov
add
or
add
xor
ds
pop
sub
xor
jle
clc
xchg
mov
xor
push
adc
and
or
dec
popf
stos
add
xor
dec
push
sub
arpl
add
gs
fcomip
jb
xchg
sub
pop
inc
push
push
push
inc
pop
sbb
push
add
or
sub
push
dec
daa
adc
sub
add
in
in
sub
pop
push
pop
jo,pt
mov
sbb
adc
ja
push
adc
add
push
decl
pop
movsl
pop
push
inc
lock
pop
adc
dec
nop
dec
cwtl
in
push
cmp
nop
lahf
out
scas
daa
adc
push
lcall
fcomip
xor
insb
mov
add
iret
repz
out
xor
neg
mov
stc
push
std
adc
pop
stc
cmp
repz
daa
call
and
dec
negl
adc
sub
hlt
inc
scas
sub
cwtl
pop
mov
push
and
adc
loopne
jg
adc
popa
push
call
lahf
inc
popa
outsb
add
mov
inc
mov
push
popa
mov
popl
enter
outsl
icebp
cmp
cvttps2pi
xchg
insl
add
cmp
dec
iret
repz
push
insb
jo
mov
cmp
add
sbb
fs
out
jne
xchg
popf
shl
cmp
dec
sbb
lcall
subb
adc
pusha
shll
pushf
pop
inc
les
dec
aaa
stos
pop
fdivl
scas
cs
mov
xlat
push
add
cmp
or
or
scas
push
push
jnp
jbe
mov
sub
mov
lock
sbb
sbb
push
das
nop
adc
iret
stos
or
jmp
push
fisttpll
dec
jnp
fsubrp
and
push
push
cmpsb
inc
adc
adc
stos
lcall
sbb
fcomi
jecxz
or
add
jb
adc
pop
adc
popf
pusha
and
insb
push
adc
arpl
and
daa
xor
out
loope
sub
sub
in
sub
pusha
inc
negl
xor
inc
or
jp
sub
daa
inc
pop
pop
push
or
in
push
mov
mov
test
push
add
sti
rclb
ss
xor
pop
cld
xor
out
sysret
sbb
pop
sub
jecxz
push
add
pop
scas
jge
fs
rorl
hlt
outsb
scas
xor
dec
pop
jo
pop
mov
subl
xor
dec
xchg
ret
popa
sub
adc
sub
pusha
sub
xchg
push
fs
cs
and
mov
out
dec
das
push
mov
cs
popf
push
pop
sbbb
push
or
mov
adc
or
shll
xor
pop
sbb
js
sbb
dec
adc
jge
or
fisttps
aaa
or
enter
pop
lahf
fwait
pop
pusha
sub
push
aaa
adc
or
cmp
mov
mov
mov
inc
push
add
push
inc
xchg
aaa
xor
xchg
push
push
xor
rorb
xor
xor
pop
adc
adc
pushf
push
insl
and
jecxz
mov
xor
xchg
call
xor
push
adc
cmp
or
aaa
push
mov
sub
orl
xchg
aaa
dec
addr16
test
push
sbb
mov
lods
push
and
pop
mov
lret
cmp
mov
aas
and
inc
xchg
add
pop
xor
insb
fdivs
pop
or
and
loop
fs
js
dec
mov
inc
je
pop
cmp
cmp
aas
add
and
subb
push
or
dec
outsl
pop
mov
jo
mov
pop
sub
sbb
mov
jp
jnp
mov
sub
addr16
sub
push
and
xchg
jge
sbbb
ds
cmpsb
pop
mov
dec
rcll
test
lock
inc
dec
inc
out
jle
mov
and
pop
dec
cmp
inc
daa
pusha
addr16
pop
and
sub
mov
pop
push
dec
xor
push
pop
test
xor
push
jge
mov
leave
or
inc
push
pop
add
push
mov
pop
ja
dec
shl
inc
inc
push
push
lods
pop
aaa
pop
sbb
js
pop
mov
sbb
addr16
adc
sbb
sub
adc
pop
sbb
dec
js
not
xor
adc
cmp
sbb
and
in
xchg
ss
shrl
sub
jl
addb
mov
sub
mov
adc
ja
and
scas
push
xor
jae
insl
popa
imul
push
sbb
push
mov
mov
jo
mov
push
ja
mov
cmp
pop
adc
xor
push
into
cs
stc
cmp
repz
inc
add
frstor
ja
loop
mov
pop
cmp
and
js
jnp
and
insb
test
or
push
pop
je
nop
or
push
jg
lret
push
or
sbb
inc
js
popa
push
pop
js
pop
pop
and
and
sub
pop
pop
push
ret
xor
cli
cmp
pop
or
inc
sbb
pop
xor
fisttps
or
mov
ds
ja
push
pop
xor
push
pop
les
sub
xor
add
adc
pop
out
adc
outsl
sbb
pusha
add
mov
xchg
cmp
pop
add
pop
sub
sub
pop
fsubrs
sub
xor
out
xchg
add
mov
decl
pusha
pop
pop
insb
pop
pop
inc
xor
ss
aaa
aas
pop
nop
pop
pop
adc
dec
sub
loopne
out
mov
dec
bound
icebp
inc
addr16
gs
inc
pop
addr16
imul
sub
jne
cld
inc
and
push
push
das
xor
xor
and
insb
dec
call
pop
jbe
mov
sbb
movsb
mov
out
sub
imul
icebp
push
sbb
dec
xor
mov
xor
je
es
xor
jae
push
xorl
push
int
xor
nop
xchg
jb
outsl
imul
daa
mov
push
xchg
inc
addb
mov
dec
push
xchg
mov
insl
xchg
cmpsl
pop
push
push
and
scas
mov
adcl
pop
jecxz
jg
lret
push
sub
push
or
push
sub
adc
pop
dec
add
call
jg
xor
sbb
pop
sub
ds
cmp
jo
loopne
sbb
mov
and
push
nop
cmp
sub
push
aas
mov
bnd
mov
int3
xor
jle
inc
push
cmpsb
push
push
sbb
pusha
xor
cmpsl
add
xor
mov
shlb
adc
inc
fmuls
outsb
leave
jp
pop
ret
and
push
jp
dec
adc
sub
mov
test
cmpsl
rcrb
xchg
aas
inc
push
adc
aas
lcall
ret
daa
add
inc
pop
xchg
test
fwait
bound
push
sub
lock
das
mov
inc
movsl
mov
or
sub
jns
frstor
divb
add
es
pop
sbb
dec
or
pop
movsb
pop
xchg
jns
mov
daa
pop
pop
jae
std
mov
arpl
pop
sbb
sub
sbb
push
xor
cs
xchg
out
aam
adc
mov
into
push
push
or
adc
pop
nop
pcmpeqw
sbb
and
sarb
popa
or
xor
andl
mov
and
push
daa
sub
testb
jecxz
dec
in
jg
jmp
jge
out
dec
in
push
aas
xchg
xor
es
push
fsub
daa
loop
imul
rorb
add
inc
cltd
mov
js
daa
pop
sbb
lds
pop
jo
sbb
add
inc
mov
push
out
xor
fcoml
mov
and
enter
pop
aaa
cltd
lcall
sub
dec
mov
push
and
das
pop
push
sub
pop
cmp
push
xor
pop
and
pop
aas
ret
push
jno
pop
xchg
add
or
pop
pop
xor
add
and
das
xor
adc
cmp
mov
push
pop
icebp
mov
xor
cmp
mov
push
cmp
imul
pop
cmp
dec
inc
daa
mov
sbb
cmp
cmp
cmp
inc
inc
adc
in
sub
mov
mov
and
push
jns
add
mov
jmp
cmc
aaa
inc
cmp
mov
push
out
inc
fucomip
movaps
lcall
sbbl
mov
pop
test
mov
push
rcrb
sub
adc
in
dec
adcb
das
cs
out
or
inc
xchg
pop
cmpsb
inc
adc
sub
sub
or
cmp
add
int3
inc
fdivrl
or
shrb
inc
push
loopne
jmp
ljmp
aaa
pop
sbbb
push
xchg
add
inc
pop
sbb
mov
and
inc
pop
add
and
adc
adc
sbb
add
add
and
lods
loopne
push
push
dec
and
or
int3
add
cs
push
sub
xchg
adcb
es
pop
mov
rcr
sub
sbb
dec
icebp
pop
push
es
add
xorb
adc
adc
pop
add
pop
fisttpl
jae
int
push
das
adc
lcall
jae
pop
sub
or
movsb
pop
dec
jp
sbb
cmp
xor
push
sbb
push
push
call
cmp
inc
fcoms
stos
das
adc
push
push
adc
mov
insl
mov
inc
cmp
and
cmp
push
mov
fnstcw
cmp
jge
loopne
adc
pop
and
es
cmp
sub
inc
adc
loop
inc
enter
inc
sbb
push
push
jnp
nop
insl
xor
xor
out
push
adc
mov
or
pop
dec
mov
xchg
mov
or
sub
ds
jne
push
or
cltd
pusha
loop
xor
aaa
out
jo
dec
cmp
pop
inc
mov
and
jnp
xchg
mov
adc
adc
push
cmp
sbbb
in
cltd
adc
roll
sbb
adc
dec
fs
xorb
xor
sub
fildl
test
push
ret
or
gs
sub
sbb
and
sub
mov
xor
pop
mov
xor
inc
loopne
pop
xor
or
stos
movsl
inc
aaa
adc
cmp
and
out
shll
jno
insl
mov
xor
pushf
cmp
pop
mov
cmpsb
shll
dec
pop
loope
xor
das
int3
insl
inc
jno
aam
mov
cmpsb
lock
lcall
outsb
inc
adc
lods
ret
sbb
cwtl
pop
mov
jg
loop
je
xchg
mov
mov
je
adc
sbbl
sub
mov
imul
ja
or
cmpsl
wrmsr
xsha256
cmpsb
push
xchg
cs
xor
ds
xor
and
push
mov
jae
mov
adcb
mov
popf
loopne
mov
daa
mov
or
dec
push
sbb
cs
testl
sub
push
inc
sbb
lret
mov
push
sbb
add
xor
pop
inc
pushf
jp
sbb
xor
cmp
xor
pop
adc
hlt
xchg
sti
sbb
sub
in
sub
pop
or
daa
aam
cmpsl
push
nop
fldt
lcall
push
andb
jne
add
aaa
daa
xor
adc
mov
add
sbb
or
pop
das
pop
adc
ja
pop
enter
sbb
mov
inc
adc
xchg
inc
inc
add
data16
push
ja
push
ss
xchg
loop
or
pop
jae
xor
cmpsl
fstps
test
adc
iret
repz
pop
jb
pusha
int3
popa
fwait
mov
mov
inc
in
movsb
inc
push
pop
add
inc
lahf
cwtl
addr16
push
dec
dec
in
add
aaa
notl
pop
shlb
mov
mov
dec
sbb
aaa
cld
aaa
ljmp
mov
ja
mov
lods
andb
cld
jb
push
push
mov
inc
insl
ss
adc
cli
mov
jmp
mov
jle
sub
mov
sti
pop
repnz
adc
pop
sbb
xor
rol
addr16
dec
fsubs
sbb
call
test
xor
dec
xchg
pop
shl
dec
push
jbe
cmpl
add
jg
pop
in
inc
cs
and
xor
ds
inc
mov
jo
cmp
and
lods
rclb
rclb
pusha
dec
add
push
fadds
jb
out
outsl
jge
add
xchg
imul
in
dec
mov
leave
jae
sub
pusha
cmp
pop
jb
rolb
jo
pushf
xor
pop
cmp
inc
pop
lock
sahf
imul
lods
pop
pop
and
mov
xor
jo
jl
pop
add
push
dec
pop
fsubrl
or
or
shrb
in
dec
mov
out
sub
cmp
xor
sub
sub
xor
or
xor
xor
inc
xor
mov
sub
cmpsb
cmp
adc
pop
mov
imul
mov
push
jb
jo
pop
neg
pop
jmp
jne
cmp
popa
outsb
dec
bound
add
pop
das
out
jecxz
sbbb
and
pop
xlat
or
or
and
pop
xchg
adc
test
cmp
adc
xchg
pop
pop
xor
sbbl
dec
clc
pop
jae
mov
pxor
sbb
rcrb
aaa
cli
cmpsb
cmp
pop
daa
sub
js
dec
ds
push
push
sbb
pop
sub
es
lcall
add
or
inc
lret
push
dec
or
cli
sti
outsb
in
push
sahf
dec
adc
pop
and
inc
push
xor
jns
clc
addr16
mov
pop
sub
mov
pop
lret
push
stos
adc
out
nop
pop
sub
adc
into
or
sub
das
jmp
je
je
add
cli
jmp
xchg
cmpsl
call
in
ss
cmp
mov
aad
fstp
pop
jnp
jbe
subl
push
repz
int
lcall
add
jnp
fisttpl
mov
push
jecxz
sahf
out
ficompl
es
xlat
test
push
xchg
dec
xchg
xor
popw
hlt
mov
pop
push
data16
imul
mov
bound
pop
jbe
jo
in
inc
movb
roll
out
lahf
cs
ret
lahf
push
mov
ja
loopne
mov
or
arpl
or
in
xor
inc
pop
test
pop
pop
enter
imul
push
jb
shl
fnstcw
in
jnp
push
sbb
push
mov
aaa
mov
leave
xchg
push
mov
cs
push
lahf
cmpsl
stc
mov
sbbl
repz
stos
enter
mov
cmpsl
jns
testb
test
xchg
int
sti
out
jb
movb
xchg
daa
je
sub
loop
xchg
cmp
aaa
mov
push
pop
jnp
out
push
imul
and
ja
push
imul
add
push
adc
push
outsb
aas
cltd
fiadds
cltd
nop
push
pusha
lock
repz
push
pushf
aam
aaa
or
push
fistpll
lcall
lahf
idivl
push
inc
pop
pop
fwait
ss
idivb
sahf
jbe
adc
xchg
imul
shll
xchg
pop
push
fs
fisubs
iret
repz
mov
cmpsl
fstps
and
aad
jns
insl
mov
daa
mov
xor
out
icebp
adc
repz
cmp
sahf
cmp
jle
and
shrl
cmp
mov
iret
repz
push
xchg
out
lcall
cmp
repz
es
dec
jbe
sti
cmp
repz
mov
inc
cmp
repz
fiaddl
ljmp
cs
or
and
jg
dec
sbb
scas
sub
cld
add
cs
adc
stc
add
adc
jg
push
push
mov
xor
adc
mov
lds
mov
scas
int
mov
jbe,pn
aas
leave
loop
and
push
pop
mov
mov
loopne
mov
dec
sti
das
jbe
pop
int3
push
and
pop
sbb
enter
das
in
sub
xchg
inc
repnz
iret
pusha
or
daa
or
scas
ret
add
dec
add
int3
mov
or
inc
shrb
xchg
outsb
push
push
jae
insl
mov
aas
inc
push
outsb
push
pop
adc
jge
ljmp
aaa
insl
mov
cmp
cmp
rcr
and
jae
fisubl
ja
cmp
divb
mov
jae
dec
cmp
dec
je,pn
fisubrl
insl
push
ljmp
cmpsb
dec
add
push
inc
out
jb
jbe
push
insb
pop
push
dec
pop
je
xlat
sbb
jns
push
fisttps
jp
das
push
stos
jne
push
in
outsb
cmpsl
jbe
out
or
adc
push
pop
retw
ret
push
jl
out
mov
fbstp
pop
push
push
xchg
inc
rolb
xchg
push
cmp
push
ds
push
das
adc
jbe
loopne
mov
popa
insl
jo
mov
insb
je
out
daa
out
adc
addr16
jo
jae
es
outsl
and
sub
out
into
or
cmpsb
mov
mov
ljmp
xor
xor
xor
xor
cmp
out
sti
jbe
xor
push
xor
xor
cmp
push
add
cmp
sub
lahf
ds
push
push
sbb
repnz
sub
sbb
add
add
out
pop
dec
mov
push
sub
jp
fdivl
jp
mov
pop
ret
es
daa
mov
pop
repnz
loopne
cmc
adc
aaa
sub
push
leave
into
dec
push
xchg
pop
push
cmc
dec
sub
ss
pop
or
push
push
pop
lods
cmp
jne
subl
push
push
push
aaa
sbb
push
stos
dec
xor
int
jmp
jae
push
sub
jle
shll
xor
test
or
js
inc
cltd
rcrl
orb
aas
sbb
dec
push
lcall
pop
or
or
inc
and
loope
addr16
push
xchg
pop
clc
ret
sub
sub
cmp
ret
push
push
adc
dec
lea
xchg
sbb
mov
mov
das
fnsave
insl
push
xor
push
sbb
pop
xor
xor
cmpsl
das
push
xor
xor
ret
sub
push
sbb
push
adc
sub
out
sbb
cmp
loope
ret
bound
adc
or
sub
aaa
in
out
movsb
push
inc
mov
or
cwtl
push
mov
dec
sbb
cmp
jo
push
fdiv
pop
aaa
push
xor
insl
adc
xchg
push
sbb
lods
inc
sbb
lock
push
inc
sbb
fbld
cmpsl
lock
mov
fimull
mov
das
das
mov
inc
mov
aaa
iret
sbb
or
xlat
mov
pop
ret
pop
test
daa
or
das
popa
pusha
mov
mov
pop
xchg
das
dec
aaa
mov
or
xor
into
icebp
push
push
cmp
pop
add
xor
jmp
inc
cmp
push
xchg
pop
push
lods
lods
loopne
mov
scas
pop
rcr
pop
cltd
daa
lahf
pop
mov
outsb
mov
ss
pop
push
add
faddp
pop
jg
jl
push
jg
push
ret
ret
xor
mov
pop
and
and
xchg
xchg
xor
data16
pop
xor
mov
fadds
aaa
outsl
lret
inc
test
mov
sbb
sub
sub
adc
popa
or
jmp
and
gs
out
imul
adc
insl
fbld
pop
aas
or
cmp
dec
js
mov
nop
ds
push
ds
aaa
aas
dec
mov
sahf
xchg
push
pop
adc
sbb
xlat
ds
mov
add
pusha
add
or
push
cmp
mov
adc
dec
lret
and
shll
and
out
loope
les
push
sbb
lret
push
adcb
adc
daa
push
out
test
enter
adc
pop
or
and
sub
gs
xor
int3
or
xor
cmp
adc
mov
pop
dec
adc
ret
sbb
pop
daa
xor
sub
lea
adc
dec
xor
jecxz
scas
test
jno
sbb
push
cwtl
push
push
pop
add
or
into
iret
insb
test
cmp
or
cwtl
sbb
add
pop
into
fsts
adc
daa
xor
ret
adc
pop
andb
push
adc
es
lret
push
or
push
or
adc
pusha
pop
pop
add
or
shlb
push
fwait
sbb
les
rcrl
fisubl
mov
push
pop
push
pop
loopne
aam
loope
push
push
dec
xor
aam
mov
ss
fldcw
push
les
lcall
cwtl
rol
adc
cwtl
cmp
negb
xor
insl
pushf
xor
lcall
shll
push
xor
ret
pushw
xor
or
mov
aas
mov
push
xor
test
das
dec
xor
or
das
loope
cmpb
push
or
adc
cmp
aaa
sbb
or
popa
sub
push
or
xor
mov
xor
and
inc
mov
cmp
xor
jae
mov
xorb
pop
int3
int3
sbb
push
cmp
mov
adc
repnz
aam
add
push
push
or
pop
pop
pop
and
dec
xchg
jno
inc
aas
shll
push
sub
cmp
xor
mov
lcall
push
pop
sub
aas
add
mov
sbb
mov
stos
xchg
pop
popa
fs
and
daa
and
xor
in
pop
push
dec
mov
iret
repz
adc
adc
pop
sbb
cmp
xor
ds
repz
ds
cltd
or
xchg
data16
or
pop
or
or
adc
adc
sbb
and
sub
fldcw
xor
inc
mov
mov
mov
lret
mov
popa
xchg
insb
ss
int
add
test
sub
add
or
pop
adc
pop
add
sub
adc
push
push
ss
int
dec
str
add
scas
fldcw
stc
das
incl
inc
js
jae
push
pop
pop
and
pop
cs
and
ficomps
test
or
sub
push
xor
xor
mov
mov
movsb
pop
pop
jb
jo
jb
push
pushf
sbb
imul
es
add
out
sbb
mov
iret
xor
adc
outsl
dec
lock
sbb
xor
add
call
cltd
ljmp
xor
and
dec
cmp
mov
add
or
push
adc
pop
adc
inc
adc
and
aaa
or
sbb
lcall
or
or
pop
daa
sbb
xor
and
sub
push
mov
or
inc
dec
sbb
hlt
adc
push
incl
dec
out
push
inc
dec
sbb
loope
std
pop
sub
or
or
or
adc
jg
mov
mov
xor
cmp
add
inc
adc
call
cmp
add
inc
adc
and
dec
adc
inc
dec
sbb
pop
das
or
xor
aaa
and
cs
adc
cmp
xor
sbb
cs
add
stc
pcmpgtb
xchg
cmp
sbb
xchg
imul
add
push
mov
xchg
pusha
and
cmc
pop
cmpsl
scas
incl
pop
daa
or
push
or
clts
in
lcall
jg
adc
dec
pop
and
mov
sub
and
pop
push
andb
add
push
out
daa
push
dec
sbbb
jnp
xor
imul
xor
maxps
push
lods
dec
and
outsl
inc
inc
inc
adc
sbb
dec
inc
jecxz
jns
add
adc
loopne
lfs
push
xchg
roll
pop
nop
mov
jp
outsb
push
jg
add
xchg
push
push
and
inc
push
dec
inc
dec
push
dec
inc
arpl
sub
add
add
incb
fistps
das
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
lcall
stos
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
andb
push
fwait
rol
fwait
in
inc
mov
bswap
mov
jmp
dec
fsubrl
decl
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
addr16
incb
sub
adc
or
cld
insl
sub
adc
jmp
or
cs
ret
sub
xchg
mov
data16
mov
call
call
and
cltd
test
push
push
shll
daa
decl
lock
mov
movsb
sbb
dec
stos
fmuls
lret
rep
cs
mov
adc
enter
mov
mov
movsb
mull
jno
inc
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
lcall
cmp
xor
cmp
or
push
sub
es
sub
imul
dec
and
incl
aaa
inc
dec
ja
push
and
popa
cmp
jbe
push
jl
imul
jnp
sub
push
mov
dec
sub
pop
jge
cmp
sub
inc
outsl
mov
jae
push
jl
cld
arpl
add
aas
cmovo
sub
pop
inc
roll
push
push
daa
pop
xchg
mov
jg
sbb
push
sub
popa
mov
jnp
aas
push
push
into
insb
xchg
xchg
xchg
pop
xor
addr16
daa
pop
daa
pop
cmp
push
push
daa
push
and
xchg
popa
and
inc
pop
nopl
push
push
testl
xor
dec
shrl
mov
sub
push
xor
xlat
popf
mov
cmp
inc
pop
inc
inc
inc
jbe
out
xor
and
aaa
inc
push
inc
cs
inc
ss
cmovb
pop
xor
scas
aad
mov
dec
and
inc
add
shlb
or
pusha
mov
add
sbb
mov
adcb
push
daa
and
test
scas
int3
cmc
fxch
bound
adc
push
and
add
bound
les
inc
test
scas
mov
mov
data16
pop
mov
rclb
pop
mov
data16
mov
jle
pop
dec
pop
jnp
cmpsb
loopne
sbb
fsubl
adc
push
add
adc
pop
sub
mov
in
rcll
loopne,pn
int
roll
xor
pop
fnsave
jg
cmpsl
lret
push
pop
mov
fiaddl
pop
xchg
adc
fiaddl
jp
sbb
int3
push
sbb
mov
fdivrs
loop
sub
push
mov
call
mov
aaa
sbb
mov
and
test
adc
cmp
popa
or
or
dec
xor
pushf
hlt
pop
xchg
push
mov
in
out
jge
push
jmp
and
inc
jmp
xor
push
mov
sarb
xchg
inc
lods
fildl
pop
sbb
xchg
call
mov
sub
pop
imul
add
add
xor
and
push
aad
icebp
adc
popa
mov
sub
sub
sahf
xor
enter
cmpsb
pop
inc
adc
adc
pop
aad
or
popa
push
mov
add
or
imul
je
xor
js
xor
mov
jae
popa
insl
gs
cmp
mov
push
es
and
outsb
sbb
sbb
or
aad
test
push
outsl
idiv
xor
inc
mov
pop
das
push
sbb
mov
testb
outsl
insb
sub
push
popa
je
inc
xchg
sbb
sub
insl
aaa
sub
inc
inc
mov
pop
or
adc
daa
dec
or
aaa
add
test
xchg
outsb
imul
push
inc
dec
pop
pop
aaa
push
xchg
xchg
jbe
or
xor
add
aaa
jl
xchg
push
mov
add
add
pop
jb
add
add
in
iret
cli
add
dec
xor
and
push
inc
sub
cmp
lahf
add
xor
dec
daa
xor
andl
xor
push
rcrb
xor
fcomps
xchg
loopne
sub
or
icebp
out
push
and
aaa
js
sbb
and
daa
ds
test
mov
fdivs
sbb
pop
dec
popa
dec
add
add
ja
jb
pop
jecxz
cld
pop
xor
pop
inc
jne
mov
xchg
or
in
rolb
outsb
mov
or
pextrw
pop
rolb
outsb
sub
jl
mov
sub
test
ss
mov
dec
es
adc
ret
and
push
inc
out
push
sub
mov
pop
bswap
push
aaa
add
ret
mov
test
jo
scas
test
push
leave
or
in
sbb
imul
dec
test
pop
sbb
add
movsl
push
mov
sbb
push
inc
jl
mov
jmp
push
or
ds
pop
sub
test
sbb
push
inc
xor
aas
mov
dec
cmp
inc
mov
xor
pop
xor
xor
leave
push
rclb
push
loop
lods
xchg
push
data16
pop
push
ret
and
lea
ja
in
or
inc
outsl
sbb
push
lahf
push
dec
ja
push
push
lcall
pop
add
shlb
sbb
push
das
out
inc
popf
aam
mov
lret
mov
dec
jle
xlat
es
pop
pop
pop
aas
das
fiadds
jecxz
or
pop
das
loopne
pop
pop
push
pop
ret
jp
out
jle
inc
mov
sub
dec
pop
movsl
pusha
insl
outsl
jae
dec
pop
repz
adc
push
and
cmp
icebp
popa
daa
pushf
xor
test
xor
push
sub
mov
pop
inc
jl
das
add
addl
ds
sub
ret
add
scas
fiadds
sub
sub
inc
dec
fistl
and
or
inc
and
inc
int3
adc
pop
add
cmp
cmpsl
fdivs
adc
fistps
lock
fstps
or
stos
push
push
sbb
add
jb
pop
push
add
dec
and
xor
fnsave
push
popa
and
cmp
jae
add
je
push
punpckhwd
call
dec
outsb
push
je
scas
inc
rorb
popf
add
inc
dec
push
inc
pop
push
dec
inc
iret
or
dec
xlat
jb
sbbb
movaps
inc
cmpsl
fwait
pop
adc
js
dec
push
dec
jb
test
push
lods
add
dec
pop
or
xchg
jmp
inc
adc
nop
adc
push
in
cvtps2pd
sbb
out
lcall
sub
or
and
addb
in
idivl
xorl
jns
jb
fidivrs
negl
adc
in
xchg
mov
lods
out
inc
decl
or
addb
test
pusha
push
or
std
pop
push
dec
sub
sub
xor
inc
mov
dec
add
sbb
dec
mov
cmpsb
dec
adc
pop
sub
dec
dec
pop
and
inc
mov
pop
and
mov
push
rcll
xchg
fcomps
mov
cmc
inc
or
call
loop
adc
pop
mov
jb
or
in
test
inc
sbb
xchg
dec
stos
dec
sub
fsubrl
push
sbb
cmp
adc
xor
xlat
outsl
rclb
test
mov
mov
xchg
dec
lods
adc
sbb
adc
mov
sub
xlat
outsl
xchg
bound
cmp
inc
and
loop
test
and
bound
inc
pop
inc
mov
adc
outsb
mov
jle
push
cwtl
ds
inc
das
test
ret
dec
sub
orb
xchg
dec
inc
psubusw
shll
cmc
inc
aas
mov
fists
push
lock
fdivp
sub
cmpb
aas
mov
sub
outsl
maxps
dec
add
fadds
xchg
sbb
das
xlat
fstpl
pop
cmp
out
movsb
daa
aas
add
test
rep
fldl
addr16
movsb
aam
xor
mov
lock
or
movsb
pop
lods
pop
leave
add
iret
sub
daa
adcb
push
lahf
add
jnp
push
daa
mov
fiadds
xor
mov
daa
outsl
mov
jae
pop
int3
aas
stc
jbe
adc
nop
sbb
lods
push
daa
dec
inc
leave
xchg
pop
leave
inc
cmp
leave
xchg
pop
xor
xchg
pop
leave
xchg
and
fcmovnu
xchg
rolb
iret
fcomps
clc
pop
push
js
ds
shrl
pop
mov
enter
fisubrs
gs
inc
pushf
pop
xor
ds
fs
pop
sbb
pop
xchg
out
dec
loopne
test
push
cmp
cmp
jns
pop
pop
ds
push
test
repz
pop
movb
nop
icebp
jns
out
pop
cwtl
jl
inc
pop
enter
push
jo
and
jns
add
cs
jecxz
adc
out
dec
inc
nop
mov
pcmpeqd
imul
xchg
out
pushf
ss
add
scas
movsb
sbb
adc
or
scas
in
shlb
aaa
loopne
je
clc
push
cmp
sub
testb
add
or
and
ja
dec
insl
mov
push
mov
mov
and
xchg
dec
das
jbe
and
push
inc
clc
sbb
lock
add
adc
dec
xchg
outsl
add
scas
fs
inc
adc
inc
cmp
jb
jo
mov
notb
jb
xchg
cmp
cmp
mov
mov
ss
add
pop
dec
and
push
pop
pop
add
dec
xchg
or
bound
cld
loope
dec
cs
xor
jnp
mov
aaa
les
jae
pop
add
pop
in
xchg
popa
sub
scas
add
insb
mov
ljmp
add
xor
cs
dec
xor
inc
es
rcrb
in
xchg
dec
sub
and
mov
or
lock
pop
dec
mov
mov
js
pop
leave
repz
pop
mov
push
fadds
pop
pushf
outsl
xlat
dec
xchg
inc
mov
add
andl
dec
xchg
add
in
or
pop
sbb
fidivl
and
sub
cmp
dec
pop
filds
add
and
enter
outsl
and
fs
es
cwtl
sbb
and
xchg
subb
jbe
push
fsubrs
orb
js
popl
leave
mov
outsl
out
rclb
pop
daa
add
and
test
cmpsl
and
scas
sbb
push
aaa
data16
aaa
les
dec
idiv
aam
fsubl
or
xchg
popa
add
lods
in
es
dec
pop
add
mov
push
lahf
push
dec
popa
push
push
fadds
adc
jg
shll
push
mov
scas
pop
je
push
mov
pop
leave
xor
sbb
jl
in
add
lock
dec
hlt
pusha
ja
popa
mull
daa
nop
ja
rcrb
pop
cmp
outsl
push
push
outsl
add
xchg
pop
inc
pop
fcmovu
nop
xchg
daa
testl
mov
popa
in
enter
jl
bound
pusha
scas
andb
lock
jae
mov
and
test
bound
xlat
or
imul
popa
shlb
scas
add
fisubs
lods
xlat
or
arpl
test
lahf
mov
add
pushf
and
sbb
pop
add
daa
sub
mov
add
and
scas
in
loopne
add
add
inc
dec
enter
shlb
push
jl
loopne
push
add
dec
xchg
or
push
add
pop
cmpsb
aaa
pop
outsl
addr16
or
lock
mov
mov
xorl
jns
pop
hlt
jg
add
gs
xchg
in
pusha
jg
jb
daa
xlat
addr16
add
leave
test
movsb
lods
add
or
xchg
nop
mov
jmp
sub
mov
sbb
loopne
outsl
add
ss
fs
mov
cmpsb
push
orl
enter
mov
andb
xchg
mov
loopne
add
or
mov
dec
xchg
add
add
daa
push
xchg
sub
daa
or
push
sub
cmp
jnp
pop
and
push
aam
push
inc
sub
out
or
push
cs
mov
shll
punpckhbw
or
aas
popf
nop
pop
jb
fs
nop
es
push
lods
pop
or
jb
or
aam
lock
pop
and
mov
add
roll
imul
scas
sbb
push
xor
lods
outsl
pusha
and
data16
popl
add
push
xor
rcrb
push
aam
or
pushf
addr16
push
jb
hlt
daa
or
out
jb
test
cmp
mov
hlt
outsb
rcrb
ss
pop
pop
leave
jae
add
mov
int
sbb
cmp
insb
ffreep
iret
dec
push
and
imul
aas
or
inc
js
and
imul
pop
lods
pop
mov
outsl
lods
and
xchg
in
scas
fsubrl
mov
xlat
data16
fsubs
das
pop
push
insb
pusha
push
rcll
push
sbb
ret
xchg
pop
mov
js
out
jo
sbb
push
add
shrl
or
dec
dec
ret
jbe
and
out
sahf
push
lea
out
sahf
ja
push
outsl
xchg
mov
lahf
out
or
pop
je
repz
sbb
push
push
jg
idivl
out
jnp
lcall
out
push
xchg
repz
repz
mov
iret
std
inc
jle
stos
hlt
jg
jns
popw
orb
cli
iret
repz
adc
aam
sahf
out
lcall
cmp
sarl
dec
mov
jmp
add
inc
test
out
sbb
repz
cmpsl
xor
mov
imul
mov
repz
out
and
jl
jns
jg
loopne
mov
push
orl
addr16
out
and
jns
iret
jmp
xchg
nop
out
sahf
popw
xchg
dec
insl
nop
mov
imull
xchg
jb
jmp
jns
iret
mov
cmp
out
or
jl
iret
fadds
or
iret
mov
iret
cmpsl
stc
cmp
pop
cltd
mov
cmp
push
fwait
inc
fs
pop
pushf
iret
repz
nop
cmp
jns
out
sahf
inc
push
push
lahf
jns
in
lcall
mov
dec
repz
stc
out
repz
push
mov
movsb
jle
or
cmpsl
jo
or
iret
xchg
rorb
cmpsl
shlw
mov
out
jl
mov
fisubrs
sarl
mov
loopne
out
add
lcall
ficoml
cwtl
sahf
cmpsl
fnstcw
xor
push
jp
mov
mov
faddl
mov
mov
lcall
or
ds
shll
test
jae
jns
out
into
sbb
cmp
repz
cmp
repz
cmpsl
test
sarl
cmp
jle
or
das
cmpsl
stc
cmp
pop
call
out
insb
lahf
jno
mov
or
imul
ds
jnp
push
and
or
jnp
rcrl
xchg
adc
cmpsb
dec
mov
mov
inc
mov
add
push
xor
jmp
add
push
mov
leave
jae
adc
sbb
pop
insl
xchg
ja
addr16
cmpsl
inc
add
les
in
jge
filds
jb
ja
or
pop
paddq
pop
in
imul
lret
cltd
nop
pop
jb
mov
sti
cs
sbb
mov
push
add
std
xor
pop
sbb
jae
mov
inc
sbb
or
shlb
filds
xor
das
in
roll
je
pop
xchg
dec
ss
and
and
adc
jl
jg
orb
aas
rolb
jns
dec
fmuls
xchg
push
fildll
mov
imulb
ss
scas
aas
mov
dec
adc
mov
aas
cmc
fnstsw
jnp
vprotb
or
fucomp
pop
in
ss
cltd
fdivs
aas
mov
repz
enter
aas
mov
stc
daa
xchg
lea
xchg
sbb
add
lcall
lds
jnp
into
push
inc
ljmp
pop
outsl
getsec
lahf
cmp
sbb
xor
daa
inc
in
adc
mov
mov
push
pop
decl
add
and
pcmpgtb
ds
and
add
cmp
sbb
inc
pop
pop
enter
adc
shrb
dec
outsl
je
nop
and
mov
pop
push
aas
push
jo
sbb
push
jg
dec
pop
cmp
push
pop
lret
jbe
cmp
or
push
popf
mov
pop
js
pop
pop
jle
negb
inc
cwtl
adc
popf
movsb
push
jg
das
mov
shll
xchg
sbb
leave
fdivrl
js
js
dec
push
mov
adc
es
xchg
push
jmp
jns
scas
sarb
lcall
sbb
cs
and
mov
jns
jns
mov
add
cmp
push
inc
inc
xchg
mov
sub
push
mov
lods
test
adc
and
data16
frstor
sarb
mov
mov
jmp
enter
jnp
jnp
and
inc
jo
inc
out
push
enter
jns
jo
add
jns,pn
push
jno
outsl
add
pushf
pop
jg
add
call
mov
in
repnz
and
adc
jl
lret
inc
scas
inc
dec
sahf
xchg
nop
add
das
call
jp
pushf
clc
stos
jns
mov
repz
lret
push
add
iret
repz
add
add
add
pop
pop
jp
xchg
or
es
xor
jno
xchg
pushf
mov
mov
movsb
push
daa
dec
push
les
scas
lret
adc
sahf
dec
jb
jle
sbb
inc
sbb
daa
insb
jp
push
addr16
push
loope
rclb
addr16
scas
lods
jp
xchg
xchg
xchg
xchg
mov
out
xchg
iret
repz
add
jnp
mov
das
jnp
jnp
xchg
and
jnp
jnp
jnp
and
push
and
iret
in
in
orb
out
pop
and
bsr
outsb
pop
int
aad
fstpl
in
inc
repnz
push
dec
es
iret
add
cs
cs
inc
pop
push
fcmovne
sbb
movd
jl
out
cs
scas
mov
pop
shlb
jns
hlt
and
add
add
sbb
stc
push
mov
pop
jmp
notl
add
andl
xorl
ja
mov
push
daa
add
xchg
ja
xchg
hlt
sbb
into
inc
xorb
xchg
add
cmpsl
in
inc
repnz
cmp
inc
repz
leave
and
lds
and
sbb
push
adc
rcll
and
jle
xchg
xchg
sbb
xor
jle
sbbl
insl
jne
or
mov
and
sub
lcall
jns
xor
lds
repnz
fdivrs
jle
jle
repnz
jle
jg
jg
jg
repz
and
cmp
cmp
repz
or
or
repz
addr16
adc
repz
jge
mov
xchg
adc
repz
adc
adc
repz
lret
sbb
stc
xchg
out
sbb
test
and
loope
orb
mov
push
inc
mov
jb
cmp
leave
popf
xchg
jbe
mov
mov
mov
mov
xchg
pushf
mov
adc
jbe
fwait
in
xchg
push
daa
inc
scas
sub
and
or
in
mov
and
cmp
dec
andl
leave
dec
dec
jbe
add
pushf
insl
in
outsl
mov
xorl
or
mov
xor
jl
and
cmpl
into
inc
fiadds
out
iret
add
loopne
add
mov
lock
push
sahf
cmpsl
add
es
xchg
cmp
orb
into
repz
jle
add
jge
mov
aas
lea
mov
add
xchg
or
mov
lock
push
sbb
inc
xor
mov
orl
jb
xor
jne
call
xor
subl
push
add
pop
mov
loopnew
pushf
in
mov
dec
mov
pop
sub
test
push
pcmpeqw
pushl
inc
jb
mov
fildl
addr16
iret
shll
pushf
mov
movsl
mov
pushf
in
mov
mov
xchg
xchg
pushf
adc
jns
stc
or
test
test
xchg
out
push
add
dec
dec
mov
aam
dec
and
and
testl
adc
lea
mov
test
xchg
dec
and
addl
in
mov
mov
in
xchg
xchg
in
in
xchg
xchg
xchg
xchg
in
in
xchg
xchg
xchg
xchg
dec
fimuls
push
adc
push
or
or
or
dec
dec
dec
dec
or
push
add
add
add
fwait
cmovge
push
and
in
jbe
and
cmp
rcr
push
popa
xchg
mov
je
pop
and
in
inc
in
jl
daa
in
ja
adc
adc
addr16
ja
dec
andps
xchg
mov
add
ja
mov
xchg
lahf
movntq
push
scas
mov
or
jo
sahf
mov
lahf
and
mov
mov
or
mov
cmpsl
or
nop
iret
cmp
js
jg
add
mov
xchg
out
push
minps
dec
dec
sahf
dec
fimuls
push
test
jne
pop
ja
or
setne
jge
cmovg
add
add
add
add
pusha
aas
xor
add
inc
pop
cmp
outsb
rorb
mov
daa
push
xchg
and
mov
mov
mov
xchg
pushf
in
mov
lea
sbb
and
sub
xor
jae
cmp
add
add
and
pop
push
mov
dec
dec
je
ja
insb
xchg
out
cltd
call
fmull
xchg
cwtl
enter
leave
inc
repnz
add
sti
inc
mov
mov
mov
cmp
repz
add
add
cmp
inc
pop
push
or
cmp
repz
or
jl
cmp
repz
or
sbb
mov
call
or
mov
enter
mov
cmp
fldt
pop
inc
cmovns
push
push
daa
iret
jae
pop
popa
or
fs
outsl
vmwrite
into
in
add
flds
fcompl
add
cmp
xchg
mov
fildl
adc
pop
xchg
xchg
scas
in
jg
sbbl
inc
xchg
and
iret
push
xchg
inc
dec
jno
pop
lea
lea
jb
mov
aaa
ljmp
iret
leave
leave
xor
jb
xchg
aam
jg
mov
jb
push
sbb
or
sub
enter
pop
orb
in
lea
xchg
cmp
loopne
cmc
sarb
cmp
clc
aas
xorb
mov
mov
mov
or
js
cmp
cmp
mov
xchg
mov
pop
leave
jae
dec
xchg
sahf
xchg
out
jns
add
dec
cs
rcr
incb
pop
and
leave
loope
mov
and
sbb
mov
xchg
cmp
lret
lret
vmread
lret
lret
lret
lret
mov
rorb
cmp
lret
loope
out
decl
jo
lret
pop
js
nop
iret
sbb
lret
lret
lret
xor
push
nop
lret
lret
lret
lret
pop
nop
push
jne
adcl
nop
lock
daa
daa
daa
daa
mov
daa
daa
daa
in
sti
push
fnstcw
xchg
xchg
adc
dec
repnz
xchg
inc
xchg
addr16
fildl
push
add
lcall
stos
rclb
leave
inc
push
mov
mov
mov
scas
insl
ficompl
xchg
mov
fucomip
ja
es
pop
push
inc
add
sbb
mov
aaa
lcall
push
fcmovne
jecxz
adcl
or
call
shrb
ret
mov
pushf
daa
hlt
mov
add
mov
cmpsb
fists
mov
loop
push
add
enter
verw
cli
xchg
cmp
jbe
add
or
jns
cmpsl
fwait
ud2
and
xchg
cmp
cmp
xchg
aaa
seto
xchg
scas
push
xchg
jbe
sub
popf
lcall
mov
cmp
loopne
daa
clc
add
push
addr16
xchg
mov
cld
dec
push
xchg
fists
xor
mov
add
leave
insb
enter
inc
or
add
js
sti
jle
das
push
add
in
enter
xchg
fisttps
call
pop
scas
outsl
add
ja
repnz
jg
xchg
xchg
pop
invd
lahf
cmpsl
repnz
sahf
scas
xchg
lahf
mov
mov
hlt
xchg
pop
lahf
jg
xchg
xor
rcll
push
ucomiss
lahf
mov
sbb
dec
xchg
push
xchg
pop
pop
setl
add
xchg
sub
dec
mov
mov
stos
mov
pop
leave
xchg
aad
out
enter
xchg
push
pop
xchg
push
add
push
cwtl
push
push
inc
add
xor
call
popf
and
inc
call
add
mov
ja
cwtl
insb
push
pop
je
jae
cmp
jl
enter
aaa
cmpsl
push
movsb
mov
scas
cwtl
mov
ret
add
lret
fnstcw
divb
inc
out
clc
sbb
cmp
daa
cmp
cmp
out
pop
cltd
pop
setns
cltd
xchg
leave
dec
push
out
cltd
pop
mov
push
xchg
jb
xorb
push
mov
cltd
adc
iret
rcrb
dec
dec
cs
ljmp
jns
inc
or
or
repz
or
sub
xor
repz
cmp
repz
dec
adc
pop
stos
in
loopne
lcall
roll
cmpsb
clflush
iret
repz
mov
mov
ja
fiaddl
ds
mov
dec
movsb
or
movsb
pop
movsb
in
jbe
inc
out
scas
neg
pop
mov
fwait
loope
fwait
lahf
push
push
add
push
fwait
nop
movsb
cmp
in
push
pop
sbb
mov
cs
scas
pop
mov
rorb
fstpt
cmovns
fwait
pop
cld
fwait
scas
dec
out
inc
iret
jp
test
or
jo
shrb
xor
mov
push
lahf
aas
pushf
pop
inc
push
add
xchg
outsb
repnz
lar
cmp
enter
mov
addr16
bnd
or
sbb
cmp
jns
ret
lret
pop
sarl
leave
repz
add
pop
fsubrl
cmp
pop
repz
sti
pop
add
cmp
popf
scas
or
popf
mov
and
popf
xchg
adc
adc
popf
sahf
out
mov
xchg
ja
add
xchg
out
add
add
xchg
jl
cmpsl
mov
mov
mov
call
xchg
adc
or
sahf
out
pop
ret
push
clc
inc
ja
out
push
jns
test
push
daa
push
and
cmp
pushl
repnz
sahf
pop
sahf
test
cmp
popl
in
sub
mov
in
sahf
aam
fistps
inc
push
push
lahf
pop
jle
lret
lret
push
lahf
sbb
sub
movd
lahf
jno
and
lahf
dec
lahf
shrb
push
jno
out
nop
inc
repnz
or
test
jmp
lahf
loope
repnz
lahf
stos
lahf
pop
mov
jg
ret
xchg
jns
scas
loopne
pushf
sti
push
stos
sbbb
pusha
scas
inc
mov
adc
xchg
and
mov
mov
jb
mov
imul
mov
cmpsl
cmp
xchg
mov
mov
and
mov
dec
jb
mov
mov
and
jb
pop
cmp
das
inc
mov
mov
mov
insb
pop
repnz
jno
pop
je
inc
fldl
scas
sbb
nop
mov
mov
adc
das
lahf
cmpsl
scas
add
mov
mov
ja
incl
dec
lods
push
jbe
enter
daa
in
jbe
in
pmaddwd
std
syscall
mov
jg
lods
inc
repnz
loopne
lods
invd
enter
mov
xor
daa
cmp
aas
push
lods
popa
ja
out
mov
imul
push
mov
cmp
cmp
iret
cmp
jb
jb
out
adc
out
testl
mov
lsl
adc
jns
dec
mov
dec
ja
outsb
pcmpeqd
dec
sahf
fildl
addr16
ja
out
stos
ljmp
mov
mov
pop
pop
jle
movsb
enter
dec
movsb
push
movsb
popa
movsb
stc
dec
jo
insb
movsb
ja
cmpsl
or
insl
and
jo
or
pop
mov
push
dec
fisubrl
jmp
mov
lahf
cmc
cmpsl
std
add
or
mov
sub
jb
movsl
cmp
in
sahf
out
add
jns
fisttpll
add
push
in
testl
decb
mov
push
xchg
imul
add
data16
and
sahf
pop
and
ja
arpl
ss
in
mov
dec
cs
out
in
mov
fs
fdivr
add
mov
and
loopne
idiv
out
insb
mov
inc
mov
cmpsl
push
iret
mov
cmpsl
cmp
mov
pop
lsl
or
enter
xchg
out
cltd
mov
pop
lidtl
add
xchg
out
sahf
test
xchg
xchg
shll
cmpsl
testl
and
std
int3
mov
push
jb
loopne
daa
fsubr
pop
test
mov
push
sbb
repz
repz
add
add
mov
pop
test
iret
repz
jno
inc
dec
jb
test
subl
aaa
lods
inc
dec
leave
orl
add
inc
mov
in
iret
cmp
cmp
xlat
out
cmovg
lcall
sysret
pop
lods
push
sahf
xchg
test
test
or
mov
add
js
cmp
pop
test
or
jle
xchg
mov
mov
test
ffreep
test
in
mov
call
mov
push
leave
adc
ss
xchg
mov
iret
ds
inc
stos
dec
pop
sahf
out
sahf
dec
push
outsb
pop
jbe
orl
jns
sbb
stos
data16
out
jns
xchg
sahf
in
dec
sahf
adc
dec
sahf
out
push
into
stos
adc
test
jb
dec
push
leave
push
inc
jl
insb
push
daa
lret
stos
add
sbb
jne
sbb
push
pushl
aas
ja
stos
fisttps
sub
sbb
add
jp
orb
setb
pop
mov
pop
or
stos
mov
out
dec
push
cmpsl
stos
jnp
pop
mov
add
pop
xchg
or
or
mov
scas
daa
xchg
xchg
xchg
xchg
aad
in
repnz
scas
and
test
pop
ja
lods
push
pop
lods
addr16
iret
cmp
xchg
sahf
out
outsb
pop
mov
mov
rorb
add
enter
leave
rcr
pop
or
pop
leave
out
mov
pop
add
enter
lods
push
lods
es
in
jge
push
lahf
lods
xchg
add
mov
xchg
repnz
add
mov
cmp
ja
pop
push
pop
out
test
or
sbb
xchg
inc
add
decl
loopne
sarl
sahf
pop
fs
scas
scas
pop
inc
add
inc
aaa
jns
clts
cs
scas
iret
in
jbe
pop
pop
addr16
or
xchg
lcall
jbe
pop
mov
mov
xchg
outsb
cmp
pop
add
push
rorb
mov
cmc
std
add
outsl
or
sbb
and
xor
xor
ja
cmp
dec
scas
test
jo
cmp
orb
nop
xchg
add
lock
scas
scas
ret
lret
pop
jo
popf
rorl
in
aas
hlt
outsl
cld
xor
mov
or
push
cmpsl
xchg
xchg
in
mov
aaa
mov
jo
add
aas
mov
mov
leave
leave
sub
imul
mov
leave
cmpxchg
in
in
pop
xor
insb
cmp
leave
leave
mov
fcmovne
repz
ror
out
repz
add
sbb
adc
mov
sbb
mov
and
cmp
and
mov
mov
pop
inc
into
lock
test
and
and
in
in
out
testb
sahf
out
iret
adc
add
add
out
ss
jb
enter
popa
mov
mov
jb
xor
xchg
mov
out
sub
int3
and
daa
aam
add
notl
les
mov
pop
out
iret
mov
pop
comiss
mov
pop
mov
mov
das
das
das
imul
das
das
das
das
mov
mov
das
das
das
stos
mov
mov
mov
mov
cs
das
lret
mov
mov
push
adc
jecxz
jmp
repz
sti
mov
lock
sub
mov
and
iret
insl
xor
xor
add
inc
push
out
bound
xchg
and
jp
xorb
mov
mov
mov
mov
xchg
and
mov
mov
mov
cmp
ret
mov
mov
mov
cmc
inc
mov
mov
push
sbb
lea
mov
push
sbb
adc
sbb
and
sub
cmp
or
and
js
sahf
and
and
sub
mov
call
outsb
fucomp
jno
add
sahf
fsub
cltd
getsec
into
push
cmpsl
xchg
iret
leave
test
mov
lock
iret
mov
mov
std
pop
mwait
add
add
add
sub
pop
mov
ds
inc
cmovns
sbb
leave
jae
fwait
insb
test
pop
dec
dec
outsb
pop
test
ror
popf
pop
mov
ja
testl
enter
sbb
outsb
xchg
mov
dec
jns
leave
repz
or
mov
out
jo
pop
xchg
adc
repnz
mov
cmp
iret
push
loopne
sbb
fsts
add
cmp
pop
sbb
jns
xchg
cmp
dec
pop
mov
and
les
aad
enter
mov
ud1
sbb
sbb
pminsw
mov
cmp
cmp
cmp
jns
out
mov
dec
outsb
daa
iret
adc
fimuls
out
mov
and
pop
sbb
outsb
pcmpeqd
jle
xchg
xchg
xchg
xchg
sahf
shlb
lock
mov
in
mov
fucomi
in
sub
pop
or
sub
mov
das
cmp
in
xchg
inc
pop
mov
pushf
cmp
fldt
add
jecxz
hlt
pushf
cmp
jmp
repz
or
insb
fs
jle
mov
or
pop
aaa
jns
femms
and
repz
sahf
out
adc
cmp
adc
jns
leave
inc
dec
push
adc
jb
pop
pop
arpl
sbb
imul
or
sbb
cs
mov
jns
mov
mov
out
mov
pop
in
nop
pop
pop
mov
jns
inc
jmp
iret
in
insl
testb
mov
movups
and
xchg
leave
xor
cmp
inc
repnz
fmull
xchg
push
add
inc
ja
ja
xchg
xchg
add
aas
add
xchg
mov
sahf
xchg
xchg
fcmovnbe
ljmp
or
mov
adc
mov
xchg
cmp
dec
push
xchg
sahf
out
add
lock
in
in
orl
ficompl
mov
into
js
mov
icebp
stc
add
pushf
cmp
in
or
pop
adc
and
sub
sarb
or
addr16
pcmpgtb
out
jb
insb
je
cmpsl
push
daa
daa
adc
and
lahf
cmpsl
scas
and
xchg
int3
daa
daa
pop
dec
fidivl
loop
repnz
mov
daa
cli
add
pop
or
adc
jbe
xor
mov
cmp
dec
rcll
leave
and
sbbb
scas
pop
iret
jae
mov
test
mov
repnz
mov
insl
sub
dec
int
fucomip
test
psubq
add
scas
in
outsb
mov
fists
pop
sbb
and
mov
insl
in
bnd
jae
mov
xchg
add
xchg
xchg
mov
fs
cltd
mov
test
mov
mov
in
in
xchg
hlt
insl
sub
dec
cld
ret
scas
cld
cmpsl
sub
iret
sub
ret
push
ret
addr16
daa
pop
jne
daa
test
fsubl
iret
test
mov
out
popf
mov
pop
loopne
popf
shlb
inc
loopne
inc
repnz
or
add
inc
fwait
in
decl
shlb
jmp
xchg
add
add
imul
add
mov
daa
mov
jmp
mov
pop
pop
ss
into
fld
in
aas
xchg
mov
cli
les
lds
cld
movsb
cmp
lds
cmp
inc
lds
sahf
xchg
outsb
mov
push
push
jae
mov
jns
jns
pop
xchg
lds
lds
ja
rol
push
and
and
js
out
and
and
fdivrp
movsb
xchg
lds
pop
or
dec
sahf
out
push
and
cs
leave
repz
inc
sub
sub
pop
cs
sahf
out
sahf
jnp
xchg
xchg
xor
xor
mov
mov
enter
dec
sahf
outsb
bnd
mov
and
adc
push
leave
cmpsb
popl
rcrb
xchg
scas
mov
imul
insl
pop
push
jg
xchg
in
inc
sbb
mov
in
in
rol
xlat
loop
in
in
in
xbegin
enter
in
enter
enter
jns
in
enter
pop
sbb
sbb
enter
outsl
in
xchg
xchg
enter
test
cmp
repz
mov
mov
out
and
and
and
enter
cmc
add
or
cmp
push
sub
and
sub
jns
sub
aaa
inc
cmovge
repz
das
pop
xor
outsb
in
repnz
jns
pop
sahf
out
in
movsl
mov
mov
mov
leave
leave
rorl
cmp
leave
leave
repnz
or
movlps
xchg
jl
js
lret
cmp
mov
lret
movq
daa
iret
add
ja
cmp
popl
xchg
or
sub
push
dec
lret
add
test
leave
repz
leave
pop
and
fdivrp
aad
in
inc
cmpsl
mov
pop
push
daa
jl
or
adc
lret
cmp
mov
dec
sahf
outsb
repnz
clts
pop
pusha
js
dec
dec
push
stc
mov
lret
or
xorl
cmp
mov
fiadds
daa
fcmovne
lahf
dec
xlat
xor
cmc
ss
mov
int3
inc
int3
xor
int3
es
cmp
xchg
int3
int3
mov
lods
outsb
and
js
int3
jg
int3
addr16
jae
mov
jge
setae
repz
pop
sahf
or
repnz
mov
jb
loopne
testb
xchg
dec
sahf
cmpsl
adc
pop
daa
iret
repz
push
cmp
sahf
out
push
sbb
pop
sbb
dec
sahf
out
sbb
sbb
leave
jae
jp
and
fwait
push
and
rep
daa
outsl
rorb
daa
fstpl
das
repz
sub
fadds
push
and
into
enter
mov
repnz
into
jg
dec
cmpsb
fimull
mov
lret
loopne
jecxz
out
jmp
push
negb
arpl
stc
pop
iret
pop
syscall
or
ds
pop
iret
and
repz
enter
cmp
inc
loopne
iret
adc
outsb
pop
iret
repz
das
fs
outsl
iret
jp
sbb
sbb
jns
out
mov
mov
dec
sbb
pop
shlb
fnstsw
rorl
and
and
popf
push
daa
or
adc
sub
out
pop
sub
sub
sub
adc
cs
pop
pop
push
outsb
push
shlb
insb
shlb
inc
push
imul
add
adc
movsb
imul
or
xor
out
lock
mov
rcrb
cmp
out
add
add
testl
add
scas
or
sbb
fucomi
in
xchg
push
dec
rcll
pop
sarl
aaa
jb
shll
add
add
xchg
aaa
jmp
sysret
pop
das
das
aas
bound
aam
in
das
ljmp
in
inc
dec
push
xor
aas
push
add
fadd
cmpl
xorl
stc
or
fstl
sahf
push
shrb
dec
mov
mov
iret
dec
mov
into
or
cmp
jns
fsubp
or
icebp
push
cld
add
or
sahf
xchg
notl
push
adc
adc
iret
jae
sub
xor
cmp
cmp
iret
repz
sbb
cmp
iret
repz
sbb
sub
ds
pop
mov
lcall
mov
jae
rcl
rcr
push
push
jns
out
out
repnz
rep
adc
aam
adc
push
push
or
mov
leave
sub
aas
pop
dec
push
cmp
daa
daa
pusha
imul
cmp
repz
sbb
mov
mov
dec
into
psubusw
out
dec
sahf
push
in
and
pop
ret
dec
sahf
and
femms
add
into
movups
sbb
es
daa
leave
repz
cmp
cmp
inc
out
cmp
push
sub
cs
jae
jle
push
xor
in
in
daa
stos
push
xor
xchg
fistpl
loope
cmpsb
js
in
maskmovq
cmp
lods
lcall
push
push
xor
test
sbb
adc
fiaddl
or
xor
cmp
jle
out
add
inc
push
push
add
rcl
pop
cmp
aas
dec
xchg
inc
push
into
pop
inc
sub
jbe
mov
aaa
jns
pop
sub
cmp
push
cmp
in
in
add
add
add
or
xchg
fcmovne
leave
or
or
or
or
daa
adc
fmull
leave
adc
and
popf
pushf
inc
push
addr16
das
push
sysret
mov
in
push
mov
insl
push
and
leave
repz
sbb
push
pop
xchg
fucomi
addb
orl
addb
pushf
fmull
fbld
or
sbb
data16
and
gs
add
jmp
iret
repz
sub
sbb
iret
repz
cld
call
sahf
out
fcom
ror
mov
sarb
repz
movsb
cwtl
nop
out
fmulp
mov
sahf
out
sahf
pop
push
inc
inc
cmp
pushf
ret
sbb
or
mov
cmpb
push
in
add
sbb
lret
adc
adc
and
mov
xchg
sbb
mov
xor
stos
xor
push
adc
cmp
mul
fldt
ss
movsb
add
pusha
cmpb
cmpsb
fisttps
cs
jb,pt
movsl
sbbl
test
pop
shll
cmovo
pop
inc
mov
or
mov
sbb
in
call
adc
add
mov
xor
fmul
ret
fsubp
stc
jb
jle
testb
icebp
cmpsl
inc
pop
andl
imul
pop
push
mov
cli
inc
aaa
mov
out
push
incl
sbb
or
mov
aas
adcb
cs
mov
mov
ds
repz
or
out
sahf
out
adc
sahf
adc
sbb
in
cmp
repz
lods
sbb
cmp
repz
push
sub
imul
cwtl
jmp
out
dec
repz
ljmp
aad
jp
push
cmp
sbb
jge
lcall
mov
mov
loope
cmpsb
aas
rorb
push
add
fcoms
mov
inc
pop
push
jmp
pop
nop
add
or
add
lds
inc
dec
sub
icebp
imul
cmpsb
jnp
sub
push
push
xchg
aas
pop
daa
push
aad
negl
imulb
call
inc
lods
mov
add
xchg
cs
aad
jbe
inc
sub
pop
adc
xor
out
mov
mov
mov
pop
xor
or
push
sbb
sbb
and
add
lock
and
repz
call
sbb
cld
lock
fcomip
mov
pop
adc
fsubl
das
cmp
or
or
adc
pop
rcrb
in
enter
out
push
rcrb
push
mov
jns
out
test
movsb
and
and
and
aam
mov
nop
xor
clc
mov
xor
inc
out
xor
dec
sub
sahf
jmp
inc
cmp
xorl
jg
cmp
out
push
pop
js
mov
sti
cmp
out
adc
xor
add
or
dec
cmp
pop
ja
adcl
dec
das
stos
dec
popf
out
dec
insb
cmpsl
arpl
stos
jmp
das
dec
inc
pop
nop
leave
enter
inc
pushf
or
nop
psubw
mov
adc
jg
andl
mov
sbb
dec
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
call
add
inc
stc
mov
adc
mov
decl
js
ljmp
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
fdivrp
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
incl
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
push
mov
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
sbbb
clc
ljmp
leave
fwait
xchg
and
and
mov
sti
aas
jno
or
mov
pop
fs
dec
lea
call
xor
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
ljmp
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
in
ljmp
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
pushl
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
push
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
call
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
call
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
lcall
and
xor
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
call
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
frstor
bound
pop
pop
pop
xchg
pop
inc
inc
je
inc
inc
push
dec
pushl
andl
pop
ja
popa
push
out
mov
les
hlt
push
xor
jmp
mov
push
movsb
mov
aad
mov
rclb
mov
sub
call
adc
push
jno
repz
test
ficompl
jmp
mov
hlt
inc
test
adcl
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
push
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
ljmp
or
insb
cwtl
mov
leave
mov
insb
fdivs
jne
filds
mov
fcompl
shrl
push
ficoms
push
xlat
enter
mov
jmp
les
iret
shld
sub
mov
and
or
call
dec
push
sarl
fdivl
jno
add
aad
mov
lcall
mov
push
movsl
in
lahf
xor
mov
js
stc
call
test
xchg
sbb
push
sub
insb
fs
add
hlt
push
imul
jmp
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
call
mov
ljmp
cld
fistps
ficoml
gs
aam
pop
popa
mov
jmp
incl
add
inc
movsl
fisttps
fadd
jg
shll
jmp
outsb
xor
mov
sarb
add
in
add
lcall
or
cmp
add
daa
adc
or
and
test
decl
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
clc
call
push
fdivl
or
test
fs
ds
or
or
push
in
pushl
inc
and
scas
add
mov
pop
jge
xchg
shlb
add
lcall
inc
push
imul
xorb
sbb
push
imul
aam
loopne
rorl
call
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
mov
xor
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
decl
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
cmp
fwait
mov
outsl
and
ja
int3
add
mov
das
es
add
cmp
mov
mov
add
mov
cmpsl
call
ret
shlb
scas
fldcw
ret
es
pushf
mov
insl
add
push
or
addr16
jb
push
add
adc
mov
jnp
sbb
decl
aad
mov
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
call
mov
mul
ja
outsl
ja
mov
out
cli
jo
ud0
cmp
incw
lcall
adc
sahf
gs
clc
sar
imul
push
js
or
std
call
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
ljmp
fldenv
filds
pushl
shlb
pusha
mov
fidivrs
mov
jmp
movsb
sbb
mov
lret
mov
cmpsb
mov
sarb
incl
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
add
decl
add
sub
mov
sub
and
pop
sbb
iret
ret
mov
add
repz
or
push
xlat
fcomp
iret
repz
fcmovu
fsubp
repz
repnz
in
call
jmp
repz
repz
cmc
div
clc
outsb
cmp
repz
cli
sti
cld
pop
add
aas
mov
adc
movsl
push
mov
push
sbb
and
jae
xchg
dec
in
inc
inc
push
dec
bound
jbe
inc
vphaddwd
pop
inc
insl
bound
fisttps
lret
popa
je
push
jge
dec
in
fistpll
and
cmp
bound
pop
inc
jno
xor
pop
mov
pushl
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
mov
sub
xor
xor
xor
mov
push
inc
jbe
pop
insb
imul
xchg
insb
and
mov
imul
dec
inc
es
outsl
iret
in
add
push
inc
jp
push
das
dec
adc
js
cmpsl
lea
popa
or
jecxz
daa
fs
push
lret
sub
ss
jbe
and
jp
inc
icebp
dec
and
mov
inc
jle
gs
aam
xchg
inc
push
add
sub
movsb
stos
pop
aaa
inc
loopne
xor
xor
pushf
imul
mov
pop
sarl
dec
insb
imul
cmp
je
aaa
pop
push
movq
inc
push
push
mov
pusha
aas
add
add
jae
addps
cmp
daa
inc
dec
mov
pop
inc
aas
mov
and
mov
inc
inc
fistpl
sbb
inc
pop
test
jae
inc
inc
inc
add
sub
ds
mov
scas
add
mov
iret
int
push
dec
cmp
aad
adc
inc
mov
cmp
fs
xchg
cli
inc
sbb
inc
outsb
jne
fsubrl
push
andl
stos
jge
xor
outsl
fucomi
pop
xor
or
add
pop
push
addr16
clc
xchg
into
pop
pop
popf
pusha
insl
jo
popf
pop
inc
or
imul
aas
std
or
cltd
dec
pop
push
mov
andb
pop
outsl
add
or
cmpsb
or
bound
sbb
xor
mov
sbb
adc
adcb
frstor
cmp
test
cmpsl
rcll
push
mov
xchg
shrl
mov
jge
pop
xor
jno
mov
or
mov
in
pop
xchg
add
sub
test
pop
cmp
arpl
cmp
or
or
mov
mov
xchg
outsl
insb
jns
das
insl
stos
add
inc
jb
push
fwait
jnp
pop
mov
je
inc
outsl
arpl
sbb
mov
fimull
bound
ja
inc
jbe
xor
addr16
in
je
ja
dec
xor
adc
fistpl
add
lods
jmp
int3
inc
and
push
jg
shrb
and
xor
pusha
sbb
and
dec
sahf
dec
add
cwtl
lock
sbb
sbb
and
lea
outsb
rclb
mov
push
inc
dec
pop
bound
outsb
arpl
mov
pop
mov
lcall
dec
push
pusha
aaa
inc
jne
insl
mov
adcl
sub
fldt
xlat
cmpsl
add
and
add
adc
pop
push
dec
and
mov
sub
push
jg
hlt
inc
sahf
xchg
in
leave
rcl
mov
sti
dec
dec
jge
in
lret
sbb
xchg
mov
lret
cwtl
sub
adc
scas
and
faddp
stos
mov
call
dec
adc
inc
lock
jae
imul
call
jecxz
enter
negl
andl
ret
test
mov
sbb
jge
icebp
xchg
jno
loope
pushf
xchg
imul
lods
int3
push
sbb
pushl
or
xchg
cmp
jl
stos
push
mov
dec
inc
jge
jecxz
gs
inc
orl
cli
jmp
pop
or
push
fsubrs
enter
imul
jge
pop
fmul
outsb
xchg
and
call
mov
and
inc
fwait
xor
daa
inc
pusha
sub
and
out
les
or
xchg
mov
fists
xor
ror
int
xor
ljmp
loope
clc
out
mov
test
popf
stc
ss
pop
cltd
xchg
call
pop
outsl
gs
test
icebp
ret
int
xchg
or
jmp
or
add
cmc
push
daa
arpl
fildl
stos
mov
push
outsl
mov
incl
adc
cmc
mov
sbb
insl
jmp
mov
fwait
or
incl
lea
int3
rcll
repz
push
mov
sub
in
cs
xor
pop
in
out
push
loope
mov
mov
adc
movsl
jo
add
popf
add
mov
sub
js
xchg
xchg
scas
and
inc
mov
mov
xchg
add
lcall
xlat
or
test
pop
or
and
test
std
mov
and
xor
pushl
jbe
push
jno
mov
jno
mov
add
fidivrl
push
add
icebp
call
dec
hlt
mov
std
push
int3
in
dec
fildl
adc
inc
and
dec
lcall
pop
pop
xchg
cmp
pop
mov
call
push
sbb
inc
adc
fbstp
mov
or
pop
push
call
outsb
lods
and
and
scas
popa
fucom
add
test
loopne
mov
jecxz
les
lea
incl
sarb
out
xchg
hlt
cmp
inc
fstps
or
mov
ja
aam
pushl
out
test
sbb
pop
into
mov
insb
fcmovnbe
pop
movsb
cmp
shlb
dec
ja
out
scas
call
push
das
sbb
lahf
mov
adc
div
sub
or
lds
lock
sti
jmp
jnp
pop
and
incl
sub
js
jno
sub
filds
inc
mov
cmp
xor
loopne
out
sbb
xchg
lcall
lcall
mov
int
add
int3
cmpsb
mov
mov
movsl
ja
mov
negb
jg
inc
ss
and
cwtl
pop
push
leave
sbb
xlat
pop
or
test
mov
adc
jnp
jmp
cmpsb
repz
cmp
fidivl
sbb
insl
mov
mov
sbb
jb
lret
lods
pushf
fsubl
loope
imul
mov
jp
ret
sub
dec
adc
inc
push
std
push
xchg
mov
adc
mov
pushl
test
pop
shrl
insb
outsl
push
imul
das
mov
sub
jbe
push
call
dec
xor
mov
mov
out
xor
orb
cmp
pop
adc
jmp
adc
xchg
shlb
xor
sbb
xor
ret
stos
cmpsl
cs
add
ljmp
mov
dec
sub
je
jp
bt
rcll
imulb
mov
xor
shl
gs
pushl
push
outsb
dec
shlb
insb
mov
jns
xchg
data16
mov
js
pop
mov
pushl
inc
and
insb
clc
ret
shrb
or
cld
adc
scas
jae
mov
mov
inc
mov
int3
and
xchg
movsl
and
es
imul
ret
push
call
shrb
popf
push
movq
mov
add
and
sub
jge
into
push
andl
cmc
mov
in
lods
mov
add
mov
and
repz
sbb
mov
in
pop
cmc
jg
or
loope
outsb
insb
dec
das
shlb
push
mov
mov
inc
xchg
push
jnp
in
xchg
xor
or
lahf
dec
xchg
mov
fnstsw
adc
mov
mov
sub
repnz
icebp
fists
cmp
push
dec
push
fimuls
mov
xchg
cltd
les
mov
lcall
int3
ds
je
sahf
scas
dec
jo
jecxz
repnz
iret
xchg
mov
das
cmc
lods
xchg
cmp
add
int3
movl
cmpsb
jg
call
ficomps
sbb
sbb
mov
add
push
lds
jbe
add
mov
sahf
xor
pushl
nop
call
sbb
leave
push
cmp
or
inc
stos
or
call
fcompl
add
nop
sarb
sub
push
cld
mov
mov
push
flds
and
jmp
xor
scas
jmp
mov
incb
aas
inc
sub
add
adc
jge
and
jae
jb
push
jnp
jg
ficoms
push
push
pushf
sub
pop
subl
call
nop
push
nop
adc
ds
sti
stos
ss
shr
add
leave
sbb
sub
jmp
aas
int
sahf
mov
or
cmpl
push
pushf
xor
dec
jle
pushl
mov
xchg
in
dec
inc
sbb
pop
adc
fs
add
push
jae
adc
ljmp
xor
adc
sbb
incb
pop
lret
add
hlt
stc
popa
fwait
jge
push
lods
in
imul
push
das
sbb
cmp
cmp
add
mov
push
cmp
mov
out
mov
add
into
push
pop
cmp
pop
xchg
adc
sbb
sub
jns
pop
icebp
dec
incl
xor
sbb
xchg
rcr
imul
fcmovnbe
inc
sahf
add
fstl
in
inc
push
pop
movsl
add
js
push
cmc
cld
dec
adc
aad
cmp
mov
lods
test
ret
gs
adc
inc
mov
mov
ljmp
fidivs
ficoml
or
mov
jmp
rol
adc
adc
frstor
int3
test
addr16
jg
jbe
call
sub
sub
inc
andl
inc
inc
outsl
xor
lds
cli
jg
mov
jg
dec
out
roll
jnp
or
insl
andl
inc
rorl
add
stos
call
or
call
outsl
stos
pop
fsts
inc
fincstp
sub
fildl
adc
cmp
fcompl
cmp
fs
loopne
lcall
mov
add
jnp
xchg
xor
add
inc
push
pop
mov
xor
insb
xor
jb
jmp
sub
or
decl
rorl
in
hlt
add
loope
inc
mov
sub
lret
sbb
dec
adc
or
mov
ljmp
dec
stc
js
push
push
adc
mov
das
mov
mov
dec
mov
mov
ljmp
push
psubusw
push
fisttps
lcall
ljmp
sarl
xor
cmpsb
in
sar
faddl
push
call
out
stos
mov
jmp
push
push
movsl
add
inc
in
clc
divl
xchg
ss
add
xorl
shr
jmp
shl
out
xchg
adc
mov
cwtl
sbb
push
or
loopne
pop
fidivrs
or
xor
mov
pop
je
shlb
cmpsl
pop
pop
call
aaa
mov
ss
sbb
rorb
dec
out
ret
cld
std
cmp
test
mov
push
cmovnp
mov
mov
cmc
xchg
mov
pushl
add
fcoml
out
fstl
outsl
mov
jb
sbb
test
fdivr
decl
mov
pop
cli
xor
cmc
ljmp
dec
pop
cmpsl
das
inc
mov
jle
ljmp
clc
mov
cli
dec
pop
imul
cmp
sub
and
xorl
lea
sahf
xor
int3
push
in
out
aad
push
push
out
ret
clc
add
scas
sbb
call
dec
sub
in
inc
and
mov
cmp
inc
stc
shlb
ljmp
push
adc
fistpl
push
mov
dec
mov
inc
cmpsl
fdivrl
lahf
pop
jmp
stos
repz
xchg
clc
test
insb
in
dec
inc
xchg
xor
test
xchg
insb
clc
lods
dec
decb
sub
and
pop
cld
jmp
loopne
jo
out
insl
addr16
sub
xchg
or
ds
sub
inc
rolb
fstl
mov
lret
cmp
andb
data16
xor
xchg
ss
repz
jno
ret
fwait
add
push
cmp
inc
inc
divl
sbb
jp
in
or
mov
gs
mov
push
data16
in
inc
xlat
mov
lcall
mov
arpl
mov
cwtl
outsb
inc
js
xchg
outsb
fwait
daa
js
mov
rorb
push
jge
sahf
jp
xchg
outsl
cs
out
cli
ja
xor
dec
sti
and
out
xchg
into
in
icebp
push
fs
bound
push
dec
fsubs
shr
cmp
test
inc
sbb
or
popf
test
push
adc
and
lcall
mov
mov
gs
aam
test
rcrl
or
pop
mov
or
out
dec
sbb
stos
add
arpl
push
shrl
xor
sbb
or
push
xchg
addr16
mov
pop
jecxz
mov
cmp
pop
push
add
outsl
clc
cmpl
mov
test
pop
loopne
fnsave
incl
mov
jo
cmp
pop
jle
int3
fnstsw
lcall
or
pop
adcb
push
mov
mov
out
outsb
adc
mov
decl
hlt
cmpsl
sahf
hlt
lret
mov
mov
cmp
ds
adc
decl
gs
inc
xor
cmp
adc
jle
ret
clc
call
jecxz
into
fists
mov
sbb
outsl
pop
jb
sti
cmp
and
stos
scas
or
add
cmp
decl
mov
sub
add
mov
fldt
xchg
in
addr16
dec
cmc
adc
pushl
dec
xlat
cmp
sbb
sub
xor
mov
loopne
addb
jmp
xor
add
clc
cmp
inc
push
mov
xchg
dec
mov
pushl
ja
sbb
addl
pop
ljmp
das
xchg
imul
pop
mov
sar
call
push
out
leave
stos
rcrl
push
loop
je
xchg
das
popf
in
pop
inc
xor
add
call
ret
out
adc
inc
std
loope
mov
mov
fildl
push
stos
and
call
push
sbb
fs
movsbl
xor
insl
mov
loopne
mov
mov
push
mov
mov
ja
jae
mov
cmp
incl
mov
sub
cltd
cmc
aas
icebp
mov
xlat
and
sbb
and
inc
dec
mov
sbb
jle
cmp
cmc
xor
call
mov
jmp
lods
daa
jbe
xor
dec
mov
inc
sahf
sbb
mov
insl
sbb
cmpsb
adc
lret
sbbl
notb
enter
and
test
subl
imul
pop
mov
inc
dec
pop
cmp
arpl
jmp
aad
xor
xor
xchg
cmp
dec
filds
mov
pushf
test
cs
push
push
mov
mov
hlt
pop
std
xchg
addr16
dec
test
or
into
cs
call
and
loop
inc
sub
scas
add
add
jno,pn
mov
adc
enter
jb
mov
fs
orl
mov
push
iret
jmp
aas
push
mov
clc
and
shrb
xor
inc
sub
incl
jmp
and
psllw
pop
iret
push
xchg
mov
loop
mov
fistps
xor
mov
in
mov
js
sti
lcall
xor
lods
fnstcw
add
xchg
and
sub
mov
adc
jmp
ljmp
je
push
sbb
cli
loop
xchg
push
jne
imul
stos
xchg
pusha
pop
mov
nopl
inc
push
mov
aad
lcall
movsb
lret
xchg
mov
push
data16
movsb
lcall
call
cmp
push
inc
dec
pop
cmpsl
dec
gs
push
jb
cltd
xor
gs
js
push
mov
add
cld
cld
cli
imul
in
sub
lds
call
push
or
cwtl
arpl
push
jae
xchg
test
stos
jnp
scas
cli
decl
mov
insb
insl
ficompl
call
lock
cmp
sbb
push
fistl
sub
mov
pop
pop
cmpl
pushf
aad
scas
xor
decl
in
mov
mov
test
pusha
fs
dec
xchg
in
cmp
and
dec
repz
dec
sbb
loopne
or
repnz
nop
pop
pop
pop
dec
jg
jo
sbb
inc
test
sbb
mov
imulb
mov
in
enter
stc
sbb
sub
sub
pop
iret
jns
jg
cmp
jmp
mov
ficomps
push
inc
sbb
or
in
clc
add
add
fists
mov
jg
les
popf
xor
xor
out
cmp
add
lcall
cs
push
xchg
pop
test
xor
dec
jno
add
ja
sbb
sbb
mov
inc
cld
call
or
dec
mov
xchg
sbb
pop
ret
mov
clc
jg
push
push
mov
adc
fmull
or
cld
rorl
imul
or
call
pop
push
dec
xor
and
mov
hlt
mov
inc
jg
addb
cld
or
sbb
out
mov
push
ror
xor
mov
jmp
mov
fdivrp
int3
or
negl
adc
adc
dec
xor
popf
std
or
mov
int
inc
push
cli
inc
lahf
push
fwait
push
pushf
fisubrl
mov
std
ds
or
and
lods
xchg
xchg
ja
xchg
sarb
cmp
pop
fimuls
mov
popf
push
dec
push
ljmp
mov
sub
outsl
dec
test
in
mov
sbb
and
js
sarb
pop
sub
mov
mov
js
in
dec
jg
adc
or
scas
jno
jne
imulb
and
lret
incb
xor
mov
xor
push
fnstenv
lret
stos
daa
or
push
out
and
xchg
lret
push
xor
inc
adc
adc
sti
idiv
and
xor
sbb
inc
xor
sti
mov
adc
shll
mov
or
jl
out
pop
enter
xor
fstps
pop
lcall
clc
jmp
cmovl
cli
sub
mov
dec
xor
pop
fnstenv
leave
push
cmp
incl
inc
pop
and
in
outsb
inc
call
push
lahf
cmp
lcall
js
push
adc
jb
xor
sub
scas
ja
pop
nop
add
clc
dec
fld1
enter
loopne
test
xor
es
sub
mov
es
movb
cmpsb
incl
inc
lock
adc
mov
xor
fdivr
call
pop
jno
out
inc
mov
subl
dec
jle
icebp
add
stc
adc
sub
in
xor
push
data16
xchg
imul
inc
loopne
jecxz
jge
mov
iret
inc
or
xchg
sub
push
cmp
ficoml
jge
mov
mov
cmc
repnz
call
fldenv
fldenv
dec
mov
icebp
jl
sbb
std
mov
es
sub
mov
shrb
mov
pushf
mov
loope
nop
aas
shrl
js
push
cwtl
out
sub
adc
add
repnz
lods
popf
imul
mov
outsl
test
insb
add
or
shll
sbb
push
xchg
sbb
push
cmp
pop
mov
or
xlat
add
mov
ljmp
or
out
aam
in
mov
std
into
sbb
and
push
inc
adc
push
dec
iret
pop
daa
test
dec
cmp
add
mov
jl
sbb
dec
adc
jg
add
fcomps
pop
sub
inc
stc
sbb
movb
sub
shr
rorb
jns
mov
pushf
call
sub
cld
jg
mov
adc
xor
push
incl
mov
aaa
push
jl
sbb
xchg
xchg
fdivs
mov
add
loope
mov
cmp
sub
mov
cwtl
adc
gs
fs
jge
add
fwait
aaa
and
xor
and
int
mov
ficomps
mov
mov
cmp
imul
test
cmp
dec
clc
push
fcomps
mov
push
sar
push
jbe
pop
mov
pop
inc
jne
xchg
mov
inc
cmp
ljmp
xor
js
arpl
ret
xor
lret
call
xlat
inc
xlat
pop
push
cld
pushl
mov
cld
jg
mov
pop
dec
decl
jg
push
dec
stos
cltd
loopne
mov
add
sub
shrb
call
inc
call
xchg
hlt
pop
out
andl
cmp
es
dec
lock
or
imul
ljmp
in
push
mov
push
mov
add
mov
arpl
inc
dec
sub
movsl
push
pop
mov
add
jo
mov
movsl
jg
jge
mov
nop
inc
sbb
hlt
call
mul
pop
dec
mov
fbld
out
xchg
inc
pop
fucomip
jge
mov
push
pusha
popf
lods
mov
pusha
shll
lcall
int3
imul
mov
rorb
and
arpl
popf
out
cmpsb
ja
xchg
rcr
mov
mov
pushl
rclb
sub
push
xchg
fwait
sub
cmpsl
adc
fisttpl
les
cmpsb
push
push
xchg
or
iret
inc
push
aaa
xor
out
mov
insl
push
push
fs
cmova
iret
adc
repz
adc
lahf
cmp
popf
push
ja
push
mov
dec
cmpsb
aas
lods
imul
xchg
sub
pop
mov
addl
ds
aas
mov
lcall
cmpsb
pusha
jp
loopne
xchg
iret
sbb
mov
loopne
gs
sub
lcall
pop
test
inc
pop
out
inc
jbe
mov
dec
cli
xor
in
dec
sub
xchg
out
clc
jmp
cmpl
ss
cld
je
aam
repz
adc
decl
and
lds
in
xor
mov
stc
adc
es
fadds
sar
pusha
imul
cld
lcall
xchg
pop
mov
dec
movsb
xor
and
das
inc
sub
push
inc
push
fidivrs
xor
call
int3
stc
or
mov
ja
loope
or
jae
push
cmp
add
out
call
into
and
sbb
imul
push
inc
insb
inc
icebp
xor
mov
outsl
inc
scas
cli
fstpl
xor
add
dec
loope
jbe
cmp
cmp
sbb
in
mov
ljmp
sahf
push
mov
push
dec
out
xor
fstps
sbb
lret
mov
add
mov
stos
and
and
lret
mov
fdivl
dec
incl
daa
in
add
leave
dec
loope
jmp
inc
push
sti
jnp
imul
lcall
hlt
les
fildll
hlt
xlat
lret
or
movsb
out
push
lcall
sub
lods
xchg
outsl
sbb
mov
jle
jp
aam
push
scas
sbb
daa
loope
addr16
decl
out
es
push
mov
aam
rcrb
inc
leave
aas
cmp
dec
sahf
ds
es
int
sbb
xor
fildll
mov
and
mov
rolb
pushl
add
push
rorb
test
stos
mov
int3
mov
aam
mov
cmpsl
sub
dec
push
mov
and
lods
shl
stc
outsl
clc
lcall
and
movsl
and
movsb
cmp
xchg
mov
and
jp
or
clc
pushl
xchg
je
or
aas
sbb
mov
fcompl
sar
jmp
mov
stos
pushf
add
push
add
mov
mov
lret
jmp
jnp
mov
push
icebp
inc
out
push
and
and
sbb
mov
adc
enter
imul
inc
cmp
add
bnd
mov
jne
jg
dec
divl
lods
cmpsb
sub
sub
sub
decl
decb
ret
adc
imul
outsl
scas
add
fdivl
std
sahf
cmc
push
clc
fistl
js
scas
mov
jp
nop
in
mov
sbb
call
mov
or
mov
hlt
jg
mov
lods
sbb
movsl
xor
push
mov
push
mov
xchg
nop
mov
sti
std
inc
xchg
stc
pop
test
lret
add
mov
dec
sub
dec
lret
xor
jo
adc
nop
xor
ret
lcall
data16
divl
jae
add
jae
fiadds
mov
cmpsb
decl
shll
sbb
loopne
negl
dec
insl
jmp
lret
push
or
pushl
jp
inc
sub
mov
hlt
pop
push
mov
pop
xchg
xor
push
enter
sbb
loope
jp
push
or
cmp
pusha
je
call
or
sbb
mov
push
push
xor
mov
cmpsb
repz
out
cld
jmp
gs
les
aam
add
xchg
xchg
popf
aaa
ljmp
cld
ljmp
cmpsb
fcomps
rcll
xor
mov
nop
pop
sub
loop
add
adc
outsb
mov
aaa
sbb
pushl
push
xor
mov
cli
dec
fsubrs
add
sahf
cmp
jge
stos
inc
pusha
sub
cmp
dec
cmc
jmp
rolb
jno
sbb
leave
inc
bound
sbb
bnd
mov
js
loop
jg
incl
cli
cwtl
adcb
loop
into
jp
fs
fstpl
fsts
mov
pop
xchg
pusha
int3
sbb
int
lahf
or
incl
xor
push
cmp
sti
clc
stos
jns
mov
mov
mov
or
fists
mov
dec
testl
jg
xchg
daa
jmp
movsb
cwtl
les
xchg
out
lcall
js
dec
imul
imul
and
dec
mov
pop
xchg
ljmp
xchg
sub
add
cmp
push
pop
adc
mov
lcall
mov
imul
adc
mov
fmuls
mov
push
test
out
mov
into
sti
ss
leave
xchg
aaa
sub
and
xor
sahf
sub
jecxz
jg
sbb
jg
jp
xchg
daa
lret
sub
stos
insb
lock
mov
test
dec
or
inc
out
xor
sbb
jns
sub
loopne
mov
sar
outsb
inc
jle
popf
xor
outsl
mov
sarb
icebp
mov
out
mov
and
mov
dec
call
test
mov
insl
adc
inc
es
js
jecxz
nop
ljmp
loopne
dec
mov
outsl
frstor
push
test
fbstp
adc
push
mov
cli
push
in
xor
les
dec
aam
shlb
sbb
das
ror
ss
mov
push
mov
pop
adc
clc
cwtl
xchg
and
repnz
iret
xlat
shl
push
enter
pop
adc
test
decl
cmpsb
mov
jae
inc
pxor
lods
mov
xchg
dec
test
std
mov
test
sub
aas
imulb
movsl
cmc
cltd
jmp
fsubrl
scas
sbb
add
rcll
cld
cmc
call
lret
shll
push
std
cmp
sub
dec
inc
int3
rcll
lcall
lods
add
and
lods
cmovge
out
cld
ret
mov
xchg
adc
clc
dec
push
dec
jmp
rolb
dec
imul
incl
pop
scas
pop
mov
ret
jle
adc
pop
cld
ljmp
inc
ss
or
das
mov
rorl
mov
and
xchg
mov
pushl
push
pop
test
mov
cmp
in
xchg
inc
sti
xchg
sbbb
incl
nop
jae
insl
lock
jmp
inc
cmc
sub
push
sti
jo
mov
jle
das
clc
pop
shll
sub
push
cmp
popf
scas
sub
ficoms
lcall
dec
push
das
push
sub
adc
fwait
lahf
mov
sbbl
mov
dec
test
cmp
inc
iret
add
loopne
push
xchg
mov
lcall
ret
pop
jmp
fmull
arpl
lret
push
ret
adc
sar
push
aad
mov
adc
mov
jge
imulb
add
dec
pop
xchg
xlat
sub
dec
ds
dec
lock
dec
xlat
jge
mov
cmp
repz
incl
cmp
cld
movsl
jl
aas
cltd
push
in
jecxz
in
dec
arpl
pop
repnz
sbb
inc
dec
pop
test
loop
mov
hlt
ljmp
mov
inc
dec
in
mov
fisubs
mov
ljmp
lret
into
lock
into
inc
mov
test
nop
push
mov
test
mov
stos
ljmp
inc
mov
jge
inc
lods
or
popf
xchg
sub
faddl
popa
xor
or
arpl
outsl
lcall
jecxz
sbb
mov
sub
pusha
xchg
fldt
cmp
add
pop
outsb
decl
pop
nop
lret
clc
ffree
movsb
lret
and
fadds
dec
je
popa
pop
sub
scas
or
rorb
cli
aas
cs
push
addr16
cmpsl
aas
nop
add
popa
sbb
pop
pop
mov
lret
mov
ljmp
jns
adc
pusha
out
mov
push
mov
xchg
in
cmc
push
shrb
icebp
adcl
pop
adcl
cltd
movsb
adc
addr16
cmp
xchg
and
pop
outsl
mov
xchg
in
or
sub
mov
es
popf
scas
repnz
aad
or
pop
push
shlb
jg
mov
mov
pop
addr16
lods
jle
pop
sbbb
xor
xchg
mov
sub
jnp
hlt
sarl
xlat
fisubrl
jecxz
lcall
testb
dec
and
iret
jnp
js
ja,pn
gs
fisubl
inc
push
xor
inc
daa
daa
fnstsw
incl
pop
xlat
fstl
pop
out
lret
fildll
push
adc
push
bound
cmp
jecxz
xchg
cli
in
fisttpl
lret
scas
int3
jae
iret
xchg
jg
push
in
cld
mov
lret
sbbl
lcall
sbb
loope
xor
enter
stc
jg
decb
xchg
or
cmp
call
jno
stc
fistpl
mov
scas
pop
jb
enter
xchg
xor
rcrl
repz
dec
ss
mov
and
adc
scas
jb
jne
call
into
or
and
xchg
lcall
xor
test
jge
mov
cmp
nop
shr
clc
mov
mov
cmpsl
ss
lcall
xchg
fsts
push
xor
gs
fstps
sbb
add
sbb
lret
and
cmp
in
and
cmp
pushf
xor
lods
fbstp
out
ljmp
xchg
lock
adc
imul
aaa
in
dec
xor
or
lock
inc
xchg
or
decl
lods
imul
pop
je
daa
push
daa
cwtl
insl
shrb
adc
mov
jmp
mov
cmp
push
jmp
icebp
xor
stc
xchg
or
lock
sbb
ljmp
sub
jmp
or
sbb
mov
push
pop
cs
mov
inc
sub
xor
and
xchg
xchg
inc
int
lcall
je
das
cmp
push
dec
sbb
ljmp
jmp
mov
adc
xchg
pop
pusha
or
lods
int3
adcl
mull
dec
outsb
test
dec
and
xor
mov
pushf
adc
fimull
mov
push
addr16
int
lds
lcall
mov
data16
or
jp
clc
add
int3
cltd
push
push
cmc
je
aam
dec
mov
mov
or
push
scas
in
mov
clc
adcb
mov
jns
int
mov
inc
xor
jmp
ror
mov
shrb
add
adc
cmp
clc
mov
sti
mov
js
add
stos
into
arpl
add
call
xchg
fdivs
fnstcw
cmp
cwtl
in
js
inc
xchg
cmp
dec
inc
xchg
in
pandn
arpl
ret
jge
push
jae
jb
data16
jne
dec
call
stc
jle
or
repnz
imul
or
sub
lcall
inc
and
ss
call
in
inc
dec
and
mov
dec
mov
pop
shrl
push
pop
push
adc
sbb
loopne
push
decl
fcomps
xor
fcmove
fnstenv
aas
fists
outsl
hlt
pop
into
mov
pushl
mov
arpl
cwtl
lret
jae
mov
cld
test
cli
xor
sti
in
cmp
stc
push
jb
lds
push
mov
and
mov
mov
imul
ljmp
jbe
lahf
push
addb
das
call
jp
mov
jg
mov
aad
std
nop
ja
inc
mov
push
shll
call
cli
sub
nop
dec
inc
addr16
inc
mov
xor
jae,pt
xor
movsb
pushf
test
pop
hlt
push
pop
push
fcomps
and
sbb
ud0
jg
dec
xchg
cmp
fdivrs
lods
xlat
jno
idivl
pop
subl
ljmp
xor
test
or
dec
push
xchg
mov
dec
scas
pop
xor
loop
in
out
call
cli
ljmp
push
mov
xchg
lretw
sahf
cltd
mov
push
jmp
pop
jl
fldt
sbb
int3
addr16
sbb
push
or
lds
lret
pop
push
leave
lret
mov
decl
ja
xor
fcmovne
rcr
imul
clc
cli
mov
lods
rcrl
push
mov
mov
call
dec
inc
inc
ret
sbb
in
adc
cmp
fisubrl
mov
mov
mov
add
test
mov
push
push
cmp
sbb
push
loope
test
pusha
aam
test
sti
ss
in
notb
xor
cmp
mov
mov
in
ljmp
jbe
lcall
mov
fcomip
les
xchg
xchg
aam
jge
gs
push
inc
dec
sbb
push
ljmp
ret
pop
mov
gs
pop
inc
cltd
cwtl
mov
mov
shlb
decl
cltd
mov
iret
sub
into
xor
lcall
imul
shrb
aam
pop
lock
xchg
mov
jbe
jne
movl
sti
shlb
lock
incl
add
cmovl
mov
ss
loop
fidivrl
lcall
inc
cmp
push
mov
iret
jle
pop
pop
into
bound
in
and
mov
pushl
dec
sbb
sbbb
adcl
xchg
loopne
pop
fbstp
mov
lods
outsl
daa
cmp
sub
dec
sub
iret
ret
pop
xchg
push
mov
out
cli
mov
cmp
rclb
fwait
rcrb
pop
mov
sub
aaa
loope
pushl
push
inc
ja
xor
mov
cwtl
jl
cmpsb
mov
aam
add
mov
outsl
das
mov
outsb
xorb
add
sbb
mov
hlt
lcall
dec
dec
mov
or
sbb
dec
notb
push
pop
in
lcall
insb
jge
sbb
jne
lods
cltd
mov
ja
out
incl
cld
call
pop
pop
mov
aam
les
mov
cld
xchg
ss
js
and
or
sahf
push
jne
mov
dec
jmp
pop
ljmp
push
and
popf
sbb
lcall
cltd
das
adc
jnp
cmp
incb
sbb
sarb
adc
mov
pushl
movsb
mov
add
shrb
jle
mov
in
decl
inc
bound
mov
stos
adc
call
mov
mov
adc
sub
lcall
xor
inc
sbb
outsl
int
fldenv
out
lds
jns
adc
pushl
xor
add
aaa
div
mov
jle
dec
movsb
inc
mov
mov
mov
loope
in
pushw
jecxz
mov
dec
adc
mov
push
and
mov
ljmp
fimull
sub
sub
cmp
dec
fwait
xchg
add
mov
loope
sub
jmp
xor
fs
jne
xor
push
cmpsb
push
out
xor
dec
cmp
jg
mov
inc
lcall
or
fwait
aas
xor
cmc
pop
decl
jb
xchg
maxps
and
dec
dec
loopne
ja
xorl
clc
lcall
pop
cmpb
mov
jle
mov
xlat
imul
movb
incl
or
fdiv
sub
adc
adc
xorl
mov
jmp
ret
lods
add
dec
xchg
jns
stos
and
dec
jle
aaa
mov
xchg
mov
jmp
adc
xchg
ret
int
add
xor
popa
gs
push
pop
add
pushl
inc
inc
push
inc
mov
sbb
mov
lock
dec
sbb
pop
ja
cmpl
xchg
inc
dec
add
aas
xchg
lret
jb
nop
sub
pop
inc
adc
sti
movsb
aam
mov
jmp
lods
and
in
fs
fbstp
fldl
mov
ljmp
push
stos
sti
addr16
push
bound
incb
outsl
push
jp
add
jle
outsl
clc
incl
sbb
push
mov
jmp
xchg
or
dec
jbe
mov
mov
ljmp
inc
jb
cld
push
adc
adc
stos
lea
cmc
sarb
popf
inc
mov
jle
incl
pop
adc
in
aad
sub
rorb
xor
outsl
sub
outsl
cli
mov
ljmp
xchg
push
sub
push
stc
pop
mov
cmp
repnz
sbb
push
mov
mov
pusha
shl
dec
lret
enter
subl
dec
ss
out
aaa
jp
adc
jno
push
pop
jmp
jb
cs
ljmp
mov
lret
jle
mov
inc
ret
leave
xchg
push
hlt
mov
xchg
push
fwait
adc
imul
mov
and
adc
pop
jmp
pop
fstps
ficompl
jae
pop
cltd
loope
punpckhwd
inc
or
gs
mov
call
aam
imul
fsubrl
xchg
push
mov
insb
sub
cwtl
add
mov
in
pushl
es
xor
insl
xchg
iret
repnz
mov
jno
pop
jnp
into
data16
scas
in
cld
decl
icebp
jp
lret
mov
rclb
inc
ljmp
out
and
stos
dec
js
cmpb
inc
or
test
lods
pop
stc
cmp
or
inc
leave
pop
pop
adc
aaa
inc
out
xchg
les
fidivrs
jne
xor
lods
fmuls
hlt
lcall
adc
jp
xor
push
ds
sbb
lcall
inc
add
push
idivl
push
or
sub
inc
cs
incl
mov
inc
xor
dec
cmp
add
inc
cmc
scas
movsb
jo
push
xchg
sub
mov
mov
or
mov
add
xor
and
pushl
test
xchg
pop
jecxz
lea
cmp
fiadds
movsb
minps
lcall
jg
adc
pop
mov
fsubl
outsb
daa
jmp
push
enter
sbb
cld
fcomip
scas
or
inc
cmpsb
cs
xchg
cwtl
cli
cli
pop
inc
or
or
jg
incl
outsb
lcall
mov
mov
cmp
test
jbe
movsl
pushl
and
jg
clc
pop
or
pop
push
xor
sbb
mov
pop
test
sbb
mov
cli
cld
xchg
xlat
push
add
testb
mov
in
sbb
sub
jle
daa
lcall
hlt
out
dec
ss
sarb
xor
mov
scas
pop
std
or
incl
cmpsb
mov
pop
aam
adc
mov
out
sub
xchg
fs
xor
cld
inc
cmp
cmp
sbb
inc
xchg
pushf
add
xchg
dec
fdivr
add
and
pushf
xchg
xor
faddp
lock
push
adc
cltd
rcrb
pop
mov
push
in
add
orb
inc
sbb
outsl
mov
loopne
and
mov
aam
popf
std
mov
xchg
loope
incl
xor
adc
es
data16
sub
or
dec
pop
std
call
add
xchg
adc
cwtl
push
gs
xchg
vaddsubpd
scas
imul
shll
dec
mov
pop
xchg
adc
popa
lods
enter
cmc
inc
cmpsb
fiadds
jmp
xchg
or
shll
ret
push
pushf
sbb
add
add
sub
popf
ljmp
shlb
sarb
out
mov
xchg
test
call
mov
icebp
repz
adc
shll
pop
pop
aam
mov
pushf
dec
mov
push
ljmp
in
add
inc
movsb
sub
aad
fadd
xchg
ret
mov
push
in
jo
int3
pushl
pop
das
int3
fs
add
in
les
mov
fsubrp
inc
and
test
or
inc
jae
loop
xchg
movsb
cmp
dec
rcr
jge
pop
lcall
cmp
inc
cmc
test
pop
mov
mov
fadds
aam
xchg
cld
xchg
cmpsl
nop
and
cld
popa
repnz
rcrb
push
insl
sbb
sbb
scas
adc
rolb
out
gs
mov
pop
pusha
sarl
mov
notl
lcallw
add
push
jbe
out
mov
add
std
push
mov
mov
inc
dec
addb
or
out
pop
and
scas
roll
jnp
jmp
add
pop
push
adc
push
cli
out
mov
lods
sbb
lods
xlat
addb
loopne
sub
inc
int3
sub
sub
add
int
test
lcall
lods
push
int3
and
pop
push
fidivrl
push
int
movsb
pushl
sub
insb
mov
bswap
pop
xchg
jnp
push
sub
pop
aam
rcr
pop
sbb
push
ljmp
pop
or
fstpt
lret
jo
pop
out
in
les
xchg
jmp
xchg
push
out
lods
mov
mov
push
std
cmp
fstl
and
dec
mov
xchg
jp
in
push
fnstenv
cmp
repz
fbld
mov
lcall
js
push
lahf
mov
sub
pop
or
adc
cmp
enter
data16
mov
adc
or
pushf
pop
js
scas
jmp
mov
scas
scas
adc
shrb
clc
sbb
mov
adc
enter
call
loopne
mov
jl
icebp
xor
dec
and
leave
scas
mov
and
ljmp
lret
fwait
hlt
in
dec
test
les
rcl
lret
cltd
roll
imul
lcall
push
or
add
mov
inc
vminps
jae
cwtl
rcrb
fcoms
dec
add
arpl
or
sbb
addr16
mov
mov
jns
lcall
mov
fldcw
mov
and
jnp
rclb
push
arpl
movsb
test
stos
call
xchg
cmp
ds
mov
sbbl
pop
adc
jecxz
mov
mov
div
andb
fdivrl
sbb
cmc
fisubl
jp
mov
push
in
fimull
pop
fcomi
sub
mov
inc
cmc
in
mov
ljmp
sub
outsl
daa
shl
scas
stc
out
mov
cmp
xlat
cmpsl
or
ljmp
mov
sub
mov
sbb
jne
adc
je
or
lock
mov
daa
lahf
xchg
push
incl
fs
mov
xchg
and
stos
inc
jno
inc
in
push
mov
sti
shll
ret
xchg
add
sbb
in
xchg
aas
cmp
pop
aam
cs
fisubrl
out
cli
imul
test
pop
scas
mov
in
dec
mov
mov
sub
mov
or
cmpb
mov
cmp
dec
jns
xchg
inc
subl
push
aad
ljmp
daa
mov
pop
pop
icebp
mov
sbbl
pop
sbb
add
mov
jno
push
dec
lahf
and
scas
pushl
loop
inc
imul
aad
dec
insl
ret
jbe
sub
add
rorl
adc
pop
mov
loope
fnsave
idiv
fbstp
inc
cmp
push
fstl
push
sbb
jle
xchg
or
jp
pop
movb
call
adc
roll
arpl
int3
inc
pop
dec
xor
inc
dec
mov
jmp
jge
call
mov
bound
hlt
pushl
add
jns
mov
call
mov
icebp
cmc
popf
adc
xor
xor
fstpt
mov
call
cmp
cmp
movl
adc
or
ds
int
and
pop
les
insb
and
xchg
call
and
stos
js
addr16
scas
inc
aaa
sti
imul
test
jecxz
fmulp
lock
fildll
psubb
out
mov
iret
leave
push
inc
xor
hlt
xchg
cmpsl
ret
inc
lds
loop
jne
aas
popf
cmp
sti
cmpl
aad
mov
mov
push
or
push
add
dec
jo
lods
cli
inc
and
sar
cld
incl
sub
ficompl
adc
rorb
jmp
and
push
popf
mov
jne
ja
sahf
cmp
mov
mov
out
pop
sbb
movsl
popa
shl
lcall
sbb
lds
js
movsb
out
js
rcrl
in
fnstcw
sub
sar
jmp
or
jecxz
cmp
and
fs
dec
xor
aad
mov
jg
cld
or
cmpsb
inc
std
lods
fisubrs
xchg
push
and
push
decl
test
fisubrl
imul
cmp
jge
and
jg
xor
jbe
mov
ljmp
mov
jnp
sti
cmpsb
xor
cmp
adc
loopne
call
push
jge
in
jbe
pusha
sub
bound
cltd
adc
test
jg
repnz
lret
out
aaa
in
cmpb
sub
fstl
pushl
cmp
int3
adc
mov
xchg
roll
push
iret
or
das
clc
pushl
loope
bound
push
push
lods
push
nop
add
orb
ss
in
mov
jp
out
in
aas
jge
pop
shrl
stos
cltd
inc
dec
enter
mov
push
ljmp
lfs
push
pop
cmp
cmp
or
pop
int3
sub
mov
decl
out
cmpsb
xchg
dec
jecxz
addr16
xchg
cmp
icebp
addr16
mov
and
push
cltd
xor
incl
jl
push
inc
xor
adc
mov
mov
pop
movsl
adc
sahf
call
test
mov
stos
leave
lock
pop
dec
pop
push
and
xchg
leave
sub
add
out
inc
leave
enter
movsb
shlb
cmpl
arpl
lret
mov
lret
sub
testb
imul
fcomip
jmp
and
mov
call
int
pop
xor
mov
int3
dec
push
mov
pop
bound
xor
lcall
std
std
shrb
xor
xchg
call
js
or
subl
cwtl
mov
mov
dec
fsubrl
mov
pop
cmp
int
jmp
sbb
mov
idivb
das
sar
cmpsl
gs
mov
and
mov
sbb
lahf
inc
adc
adc
xchg
in
push
and
mov
mov
ret
cli
push
dec
mov
inc
int
data16
mov
sbb
outsl
push
push
mov
sub
pop
rcll
mov
decl
insb
adc
loopne
push
jo
push
xor
or
adc
in
lock
int3
aas
lcall
ror
push
shr
aad
push
mov
or
in
lcall
test
xor
push
mov
ud1
push
mov
int3
call
loop
lock
call
sbb
cmpsl
repz
aaa
outsl
jb
or
out
push
pop
xchg
sbb
mov
jno
lea
popf
int
inc
loopne
xor
push
ret
outsb
mov
jbe
ljmp
mov
push
lods
xchg
mov
pop
and
out
inc
dec
int3
jno
into
arpl
aad
mov
incl
push
arpl
gs
xor
popf
sahf
or
adc
pop
add
mov
dec
jmp
jmp
pop
fimull
or
adc
ret
insl
push
movsl
scas
adcl
pop
lods
adc
and
stos
xor
dec
sbb
mov
addr16
fdivs
loop
mov
pop
xor
and
aad
nop
lock
xor
or
stos
sub
decl
or
xchg
fdivs
stc
xor
out
inc
jecxz
pop
scas
ret
fcos
jmp
push
cwtl
push
sbb
push
cmpsb
inc
fisubl
in
call
push
into
fsubr
je
mov
mov
or
int3
push
xchg
sar
jns
adc
mov
sbb
sarl
in
cmp
jg
fdivp
cmc
push
dec
lret
inc
mov
xchg
mov
jecxz
mov
add
jnp
add
js
iret
jmp
lods
and
inc
icebp
sbb
gs
mov
or
jge
push
mov
incl
mov
cltd
add
arpl
stos
xorb
jmp
xchg
jle
lcall
rorl
mov
and
adc
fisubrl
cmp
mov
int3
cmp
adc
inc
fwait
jnp
xchg
add
clc
js
test
adc
mov
xchg
mov
jp
adc
inc
push
add
sbb
pop
fnstsw
sub
pop
je
push
cld
pushl
cmp
xchg
mov
in
enter
jae
rorb
inc
push
xor
jmp
inc
mov
jmp
int3
cmc
add
mov
xrelease
mov
imul
inc
add
sub
cld
mov
and
in
out
movsl
test
movsl
out
out
cli
ljmp
sub
loope
xchg
add
popa
adc
imul
mov
mov
push
jbe
xchg
rcrb
movsb
jp
jbe
test
jg
or
ret
movsl
mov
and
sbb
lods
xor
sti
jmp
cmc
inc
jno
push
faddl
push
cmp
sub
lods
fwait
nop
lcall
repz
imul
dec
push
fstp
jmp
outsb
adc
add
adcb
std
sarl
das
addr16
sub
jbe
sbb
scas
outsl
xor
sbb
call
cwtl
fwait
int3
mov
mov
int3
sbb
mov
add
xor
jle
push
dec
shl
scas
pushl
sub
dec
insl
or
dec
xchg
mov
ret
ds
mov
repz
fwait
shll
mov
push
ss
mov
into
pop
add
jg
rorb
push
mov
testl
cmp
or
or
dec
jl
mov
xor
sub
jns
push
sub
mov
ljmp
pop
adc
mov
leave
cmpsl
jge
mov
push
push
cmp
mov
das
fstpt
jl
test
xchg
ja
fyl2xp1
incb
cmp
loopne
stos
jae
nop
push
sub
mov
test
jmp
daa
in
pop
ss
mov
push
popf
and
movsl
adc
push
jnp
cmp
ja
jmp
cmc
ljmp
jo
rdpmc
ret
aad
cs
sahf
test
push
inc
mov
lret
in
test
in
jmp
out
clc
cltd
movl
fs
push
push
ds
movsl
pop
inc
fsub
arpl
popf
bound
test
icebp
lret
jne
mov
pushl
sub
inc
cli
cltd
stos
loopne
in
add
cmc
sti
repnz
pusha
adc
sub
sbb
lahf
and
outsl
cmp
ljmp
psubq
mov
jne
test
fistl
push
pop
ljmp
pushl
test
push
or
or
push
fwait
sahf
mov
sarb
test
mov
incl
pop
leave
frstor
xor
push
dec
std
xlat
or
stos
dec
aad
mov
fcompp
addb
cmp
sbb
xchg
xor
clc
inc
adc
sarl
loop
add
and
pushf
dec
ud0
ljmp
loopne
jecxz
cli
aad
aad
imul
sub
mov
loopnew
xchg
pushl
sbb
mov
rol
mov
pop
jns
pop
sbb
in
es
dec
jge
lock
jbe
jnp
or
push
dec
out
and
imulb
icebp
daa
je
shlb
pop
ljmp
inc
lods
xchg
test
es
push
outsb
sahf
les
sub
push
add
aas
fs
sub
mov
adc
push
dec
jp
xor
fs
jg
inc
int3
aaa
lcall
jno
jp,pt
mov
out
shrl
mov
rcrb
decl
rolb
dec
mov
inc
xor
cmp
push
packsswb
cmp
dec
pop
dec
inc
sti
aaa
arpl
inc
xor
addr16
xor
or
cwtl
or
fbstp
inc
in
in
jb
and
or
mov
dec
int3
adc
mov
jg
xor
cli
es
fldl
addl
jnp
mov
insl
xchg
xchg
lods
mov
push
jge
enter
pop
mov
sbb
jecxz
cmp
pop
stos
pop
or
in
adc
dec
fs
cmp
cmp
int
xor
adc
lahf
into
decl
hlt
pop
mov
je
loope
stos
push
or
lret
adc
rorl
aam
insb
aas
hlt
ja
and
inc
scas
push
rcrb
jge
call
add
jp
outsb
mov
jg
sbb
dec
scas
jns
ret
and
jns
cmp
mov
cwtl
pop
mov
aad
ret
call
adc
mov
aam
jbe
push
mov
aaa
lret
and
jnp
popa
test
repz
movsl
mov
jmp
nop
inc
jne
leave
sub
rep
lock
pop
push
jns
adc
mov
inc
les
cmp
adc
jecxz
sub
lock
sub
inc
cmp
test
cmp
mov
xorb
push
inc
push
pop
push
loope
xchg
das
cmp
mov
popf
jl
jle
mov
cmp
gs
ljmp
clc
lods
pop
mov
add
lods
imul
lods
icebp
test
xchg
or
lcall
xchg
adc
fs
in
pop
sub
daa
pop
add
call
int3
mov
jno
test
shlb
adc
and
push
and
jg
imul
call
repz
jecxz
outsl
clc
jmp
or
or
icebp
inc
ss
xchg
push
in
jmp
inc
pushf
loopne
pop
inc
adc
lods
jp
jle
add
bound
adc
in
loop
bound
or
dec
pop
pop
adc
jno
gs
lcall
mov
aad
xchg
xlat
push
mov
mov
data16
cmc
or
pushl
mov
mov
cmp
shl
pop
mov
add
jg
jmp
nop
mov
jge
adc
and
mov
imul
lcall
fisttps
or
add
sbb
jmp
or
mov
lcall
call
xchg
stc
sbb
or
repnz
fwait
push
sub
int3
mov
adc
es
jnp
fcmovne
push
sbb
add
dec
nop
mov
adc
mul
and
xchg
dec
sbb
lods
faddl
dec
cltd
jle
sbb
xor
pushl
pop
mov
ds
int3
popf
pushf
jb
jp
sbb
lds
cmp
mov
call
pusha
rdmsr
and
lret
cmp
adc
jo
cli
jne
inc
call
into
sbb
inc
xchg
enter
or
xchg
dec
sbb
movsl
loope
incl
mov
imul
stc
lret
push
push
nop
and
fildll
daa
stos
xchg
int
decl
xorb
stos
cltd
mov
pop
cmpsl
jne,pn
scas
mov
repz
mov
test
inc
mov
jbe
jnp
mov
adc
or
adc
popf
add
int3
and
ret
out
icebp
sub
cmp
jo
xchg
out
mov
dec
aaa
pushl
ja
pop
in
push
popa
enter
lea
jmp
std
jb
dec
jmp
outsb
lods
jmp
jmp
sahf
adc
inc
test
aam
ret
cmpsb
adc
sub
and
push
adc
decl
mov
ljmp
jne
loopne
cmp
and
in
cmpl
cld
notl
fbld
add
pop
push
lret
adc
add
adc
filds
xor
mov
fs
mov
and
into
jg
and
es
sub
cltd
xchg
rclb
negb
mov
test
jns
cmp
repz
daa
adc
aad
insb
hlt
ss
mov
jg
push
sub
adc
and
fiadds
loop
jmp
ss
jb
dec
loop
dec
cli
imul
sahf
int
mov
cmp
xchg
data16
call
test
repnz
sub
mov
cmp
xlat
outsl
adc
shrl
pushl
adc
rol
ljmp
aad
cmp
cmp
test
mov
idivb
iret
mov
sti
pushf
das
movsb
cmp
stos
in
hlt
gs
cwtl
lods
subl
xchg
pop
stos
mov
inc
dec
pop
popa
cmpsb
or
rcrb
jns
and
lret
inc
jmp
mov
jmp
pushf
cmpsl
xchg
dec
test
repz
dec
fidivrl
sbb
test
adc
or
outsl
cmp
mov
jl
dec
idiv
test
pusha
xor
xchg
out
arpl
roll
std
decl
sub
aam
lret
sahf
fnsave
sbbb
jbe
fdivr
ljmp
mov
add
pop
sub
and
and
push
jge
nop
or
and
cli
nop
test
cwtl
dec
push
lcall
gs
inc
add
sub
lahf
outsb
ja
test
fdivr
pop
mov
and
jnp
mov
ds
adc
jmp
pusha
or
loopne
fs
enter
pusha
stos
and
or
cmp
pop
test
cmc
xchg
push
mov
movsl
add
fs
dec
mov
mov
lods
imull
or
test
xchg
shrl
fs
lcall
jl
jne
enter
jp
testb
shlb
add
sti
push
fnstsw
movsb
jmp
jae
aas
add
mov
lods
mov
std
mov
ret
dec
shrb
mov
pop
add
aas
jp
and
adc
test
icebp
lds
or
insl
mov
pop
stc
idivl
xor
mov
pop
or
je,pn
movsl
xchg
call
xchg
push
movsl
js
or
stos
inc
aas
pop
mov
lea
push
dec
push
pop
clc
inc
lcall
jnp
add
adcb
nop
sub
or
js
out
push
adc
shll
sti
pop
sti
inc
sbb
scas
cs
in
cmpsl
cmp
scas
ret
jbe
xchg
int
dec
xchg
pop
jp
jecxz
lahf
sub
push
js
ljmp
xchg
imulb
int3
popa
repz
pop
mov
loopne
jg
mov
shr
mov
mov
lret
lret
mov
call
cmpl
out
int
mov
sub
out
xchg
add
test
mov
push
imul
stos
cmpsb
into
arpl
cs
xor
xor
pop
mov
aas
cli
pop
mov
lahf
lret
js
fsubr
mov
dec
cmpb
cli
incl
push
jge
mov
ret
iret
xchg
pop
mov
inc
mov
mov
mov
dec
push
dec
out
inc
std
adc
dec
add
lcall
lret
push
sbb
sub
push
sub
mov
loope
testl
fdivrl
mov
lret
pop
pop
or
or
cli
lods
mov
mov
clc
xchg
jnp
hlt
dec
mov
and
lahf
shlb
dec
ljmp
add
lcall
push
cmp
mov
pop
pop
push
outsb
bt
iret
fidivrs
jg
clc
jp
xor
pop
in
das
outsb
nop
out
leave
sub
sysexit
push
ret
sti
jne
pusha
push
ljmp
shlb
mov
cli
pop
pushf
mov
incb
test
sub
or
decl
xchg
aad
cmp
sti
iret
test
outsb
jecxz
mov
ss
mov
test
incl
out
scas
lcall
pop
xor
ret
push
int3
rcll
popf
cwtl
pop
adc
dec
rcll
aas
pop
bound
aad
pop
adc
pop
push
lcall
sti
dec
dec
cld
aam
lods
sbb
xchg
test
incl
mov
pop
mov
pop
ret
les
xor
dec
mov
or
incl
jl
hlt
jb
mov
xor
stos
aaa
push
sahf
mov
push
jb
push
cmpsb
inc
mov
push
cmc
push
mov
repz
fbld
push
cwtl
ffreep
stos
cwtl
mov
cmc
bound
xor
mov
ljmp
mov
orb
mov
pop
cltd
sbb
decl
sahf
je
ds
movsl
adc
mov
sahf
out
enter
mov
cmp
ss
ror
das
xor
stc
test
adc
or
jno
mov
xchg
jg
jg
cmp
jecxz
mov
cs
and
mov
add
push
rcrb
xor
fcmovne
push
pop
jns
hlt
lds
xor
mov
dec
std
sbb
int3
mov
cltd
dec
cmpsb
mov
inc
outsl
mov
aad
lcall
push
cmp
cmp
push
cwtl
or
sub
es
pop
ja
or
cld
mov
lret
inc
jmp
pusha
jg
pop
add
sub
sub
cmp
imul
pop
pop
aam
mov
adc
add
fbstp
scas
mov
in
stos
pop
mov
aaa
out
jmp
test
and
add
movsl
add
sbb
push
xlat
leave
incb
cltd
push
incl
jl
mov
pusha
rcl
dec
roll
jbe
in
hlt
sub
push
stos
nop
and
dec
pushl
xlat
mov
jmp
xchg
jo
sarb
mov
repnz
insb
sub
out
sar
inc
js
jnp
mov
xor
mov
lret
sbb
std
ret
in
dec
push
mov
mov
imul
call
fwait
dec
cmp
mov
in
sub
in
jbe
push
jp
jg
movsb
cli
xchg
icebp
mov
adc
lret
sbb
sbb
data16
push
jg
call
inc
mov
arpl
cld
std
xchg
cmpsb
jns
sbb
xchg
pop
and
bound
stos
fsubrl
dec
jb
push
mov
es
das
xchg
cmp
sbb
cmc
mov
pop
mov
mov
jg
lcall
test
pcmpeqb
rcl
jne
faddl
dec
mov
push
stos
addr16
call
fmulp
jp
stc
xchg
and
cmpsb
out
shlb
daa
pop
adc
mov
fnstcw
mov
dec
outsb
pushf
cmp
daa
jecxz
loope
iret
cmp
sub
mov
mov
ss
lock
bnd
mov
jmp
test
daa
xchg
or
scas
xchg
sub
xchg
pop
test
add
push
xchg
mov
lds
or
mov
inc
fs
cmpsl
mov
fistps
cmp
mov
pop
mov
add
loopne
cmp
cmp
xchg
mov
in
pop
lods
lcall
mov
cwtl
add
pop
into
fsubrs
adc
decl
daa
mov
pop
fmull
sbb
sbb
nop
test
dec
push
ljmp
int3
clc
sub
ret
cs
push
pop
icebp
outsl
divl
cmc
xchg
test
cmp
popf
mov
push
pop
idiv
fsubl
outsb
jge
ret
mov
adc
jmp
loop
pop
and
lcall
mov
rcrb
pop
vmovq
inc
and
push
or
aaa
inc
jb
outsl
cmp
jmp
xchg
movsb
push
nopl
and
mov
outsb
add
decl
shl
imul
adc
xchg
and
fcoml
xor
fsubp
cmp
jns
incl
cmp
jg
xchg
dec
icebp
rorb
gs
ljmp
fidivs
and
lcall
das
fmuls
push
mov
inc
or
outsb
pop
cmp
xor
cs
and
decl
ss
pop
mov
jbe
cmp
filds
mov
decl
movsb
or
inc
inc
ret
jns
pop
jne
cli
fistpll
les
ljmp
pushl
es
sbb
fdivp
jns
push
or
aam
jnp
clc
popa
test
int3
push
and
sar
aas
shll
sarb
push
repz
jns
pushl
fisubrl
sbb
pop
adc
dec
pop
lret
sbb
clc
push
movsl
adc
jmp
sub
sub
ss
cwtl
scas
xor
mov
add
inc
mov
mov
ljmp
lock
jne
dec
push
stos
add
hlt
xchg
enter
and
add
inc
dec
cld
push
call
sbb
or
mov
push
jmp
mov
je
cld
int
or
pop
insb
testb
sbb
sbb
xchg
pop
loop
mov
or
push
call
loopne
add
jo
xchg
or
mov
and
and
ljmp
rcll
and
lahf
inc
dec
mov
mov
mov
nop
lret
jmp
jl
fcmovnbe
lock
sbb
xlat
nop
scas
sub
inc
gs
out
stc
xor
je
or
cwtl
mov
mov
test
les
cmpsl
mov
das
cli
call
in
jmp
mov
mov
sbb
ljmp
xor
fwait
xchg
arpl
lock
movsb
nop
mov
lcall
insl
hlt
jmp
ret
mov
les
mov
clc
inc
dec
pop
add
ljmp
aas
scas
push
out
repnz
dec
jno
in
fadd
sub
xor
fsubrp
cld
ljmp
mov
das
lret
adc
fstps
dec
lret
rorl
pop
arpl
aaa
cld
mov
out
pop
enter
fwait
push
mov
test
push
mov
movhps
jo
mov
inc
out
adc
pop
fcmovb
repnz
pusha
in
xchg
adc
int3
dec
repz
and
js
incl
aas
fs
cmp
nop
dec
ljmp
sbb
mov
push
aam
jmp
pop
ret
pop
ja
xchg
jno
jge
sub
stc
push
push
call
ljmp
mov
loope
cmp
or
pop
jmp
test
loope
std
sub
ljmp
dec
jmp
repz
cltd
mov
cmp
and
mov
in
jmp
scas
jns
push
add
jl
mov
pop
xor
pop
repz
fsub
pop
call
xchg
stos
jmp
stc
negb
pop
mov
pop
xchg
and
push
cmp
in
lcall
pop
adc
add
ss
scas
dec
dec
mov
push
cmovle
fcoml
or
bound
fs
pop
jp
sbb
cmp
popa
testb
fs
jg
lcall
cmp
and
ss
pop
insl
and
andl
mov
or
add
xor
in
outsl
fnstcw
push
jns
jmp
lds
out
test
decl
addr16
movsl
scas
loope
mov
pop
xor
inc
in
les
add
call
xchg
loopne
les
in
repnz
mov
xchg
lock
pushl
xchg
mov
lret
out
repz
inc
movsb
xor
jg
dec
gs
pop
imul
js
loope
mov
incl
dec
push
sub
data16
dec
add
pop
ja
sar
outsl
cli
das
add
pop
cmp
test
in
jae
dec
or
mov
pushl
repnz
inc
roll
mov
lahf
push
inc
add
imul
sbb
mov
adc
repz
mov
mov
incl
sarb
sub
push
sarb
ret
inc
clc
cmpsl
pop
outsb
bound
das
jmp
arpl
test
adc
lcall
mov
sbb
gs
addr16
inc
xchg
push
cmpsl
cmp
jo
and
ljmp
pop
imul
call
jae
and
in
test
call
into
fcomps
adc
insb
jl
lcall
inc
or
jne
movb
mov
clc
daa
mov
adc
fwait
pop
adc
cmp
lds
push
cli
sub
inc
rclb
cli
scas
cli
mov
test
xchg
daa
adc
push
pop
test
std
es
or
jle
add
push
jno
ljmp
or
and
gs
xchg
lods
scas
std
mov
cmp
iret
arpl
mov
mov
gs
daa
outsb
in
jecxz
mov
add
mov
out
mov
push
std
out
mov
pop
mov
loope
rolb
add
addl
pushl
stos
and
dec
sbb
dec
scas
add
jg
add
inc
repz
cld
fdivrl
pop
push
adc
shl
je
xor
cmp
sub
movsl
add
push
add
jb
popf
pop
mov
daa
loop
fistpll
add
imull
or
mov
mov
pop
frstor
mov
cs
sub
call
lods
jnp
decl
adc
out
push
scas
das
push
stc
into
xor
and
aam
pushl
shr
sub
addr16
add
adc
call
in
lock
mov
fwait
push
sbb
push
dec
pop
out
lret
cltd
lock
push
cmp
data16
xor
jae
rcl
sbb
cmp
and
xor
mov
dec
cs
inc
loope
into
daa
call
push
add
or
jns
cmp
dec
jmp
iret
aas
fwait
pop
xor
loope
xchg
cltd
adc
std
mov
std
idiv
incl
cmp
pop
das
and
repz
fdivr
mov
mov
mov
call
add
sbbl
lcall
test
in
sub
fidivrl
pop
mov
jne
leave
adc
decl
xlat
mov
decl
mov
cld
adc
unpckhps
lock
fldenv
test
scas
bswap
jle
push
std
push
shll
mov
lret
xchg
cs
mov
pushl
or
xor
ret
flds
flds
data16
in
xlat
rcl
gs
jmp
call
repnz
and
jnp
dec
das
aaa
int3
mov
xor
movl
jmp
incl
mov
xchg
outsb
aad
sahf
jp
rclb
rorb
pop
adc
incl
xchg
push
arpl
dec
dec
push
adc
bound
mov
pop
aaa
pop
jl
pop
lods
je
inc
fimull
sbb
push
pop
scas
cmpsb
in
fldenv
inc
cld
data16
call
fcompp
fwait
sbbl
mov
inc
outsb
in
push
push
pshufw
xor
mov
orb
cmp
pop
loopne
mov
lret
in
mov
xor
jg
lods
pushl
movsl
adc
insl
mov
cmpb
ljmp
xor
in
adc
mov
je
add
andl
incl
adc
fnstenv
push
cmp
int
int
test
mov
xor
clc
insb
cld
lcall
mov
sbb
out
repnz
jg
enter
xor
xchg
jb
sahf
mov
dec
or
fcmovu
and
fs
adc
movsb
jmp
xorb
mov
mov
cltd
push
dec
sbb
test
add
or
mov
rcr
and
jg
adc
das
or
andb
mov
rol
and
mov
incl
cmpsb
and
insb
and
outsb
movsb
sbb
aas
ss
pop
and
lahf
cmpsb
jg
dec
cld
push
or
lods
stc
ret
jge
test
incl
divb
arpl
inc
pop
jns
mov
and
xor
call
mov
jbe
jb
jo
xchg
adc
popf
adc
pop
xchg
sahf
stos
movsb
add
sbb
push
cmc
inc
xor
mov
inc
cmp
addl
mov
or
push
push
push
push
call
testl
out
rcrb
jp
pop
lcall
test
dec
lret
xor
shll
mov
into
adc
sub
ret
dec
cmpsl
mov
mov
jmp
cwtl
sahf
imul
sahf
imul
je
push
ja
mov
outsb
adc
mov
mov
inc
in
dec
cmp
pop
adc
mov
clc
fnstsw
inc
jecxz
inc
divb
mov
or
cmp
aad
dec
out
fsubrs
sub
dec
xchg
fidivrs
hlt
and
imul
out
fdivl
mov
nop
incl
int
stc
or
jecxz
or
adc
sahf
rcll
push
jo
adc
scas
jle
or
pushl
xlat
mov
mov
xchg
push
cmp
cli
adc
inc
jle
cmpl
mov
push
dec
add
ljmp
xchg
xchg
ret
cmpsl
sahf
adc
cwtl
mov
jl
dec
mov
inc
or
lods
xlat
daa
mov
xchg
incl
pop
xchg
cwtl
pop
xlat
adc
adc
mov
decl
mov
cwtl
insb
xor
cmpsl
cmp
push
je
data16
arpl
mov
and
sbb
in
pushf
pop
movsl
mov
scas
je
fcomip
pushl
pop
ror
xchg
daa
xchg
imul
int3
jb
xor
push
or
fildl
in
sbbb
out
pusha
fdivr
mov
clc
jg
cmpsl
clc
movsb
ror
aam
lcall
add
js
jo
mov
jecxz
inc
lock
lods
loopne
xchg
mov
sbb
decl
mov
cltd
decb
fsubrs
cmp
mov
flds
xlat
add
dec
jmp
stos
enter
test
ja
adc
jbe
js
sbb
loop
lret
ds
mulb
push
jmp
sbb
not
mov
mov
and
inc
mov
mov
jmp
push
shl
adc
inc
jbe
stc
adc
add
push
fcomp
xor
mov
dec
mov
call
cmp
fwait
add
nop
inc
jg
sahf
mov
pushl
add
aad
cmp
mov
popf
or
adc
inc
ss
call
pop
sub
test
inc
mov
pop
mov
xchg
jno
adc
call
push
gs
shl
pop
jmp
fdivr
loopne
adc
dec
add
pusha
add
fistpl
fbstp
push
add
add
or
fcomi
fisttps
or
pop
push
or
or
or
or
or
adc
adc
push
std
fcmovb
adc
mov
or
pop
sbb
adc
adc
cmpsb
add
or
adc
pop
adc
rorb
adc
add
add
add
adc
mov
add
add
xor
push
inc
mov
mov
add
jge
add
jg
incl
push
adc
pop
and
xor
mov
adc
loope
add
xor
cmpb
sarb
adc
xorl
mov
push
jbe
icebp
and
jecxz
enter
movl
inc
push
inc
and
lahf
xchg
and
scas
pushf
into
add
out
scas
adc
sarb
adc
push
adc
pop
popa
xor
stc
out
adc
or
xchg
mov
lock
pop
stos
and
loope
icebp
mov
mov
push
xor
xorb
scas
fiaddl
or
sbb
mov
dec
loopne
sub
dec
rcr
push
ret
xchg
and
sub
std
cmpsb
xor
aas
imul
repz
fdivrl
add
mov
mov
loopne
mov
fsts
sub
mov
mov
cmp
ret
ja
out
cmp
xor
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
stos
pusha
inc
mov
incl
sub
pusha
add
sub
decl
bound
add
lds
cld
cli
and
mov
fiaddl
jg
fnstsw
xchg
ficompl
cmpsl
xor
mov
test
mov
cli
aad
std
movsl
jecxz
pop
mov
lods
ss
clc
cmpl
jg
or
insb
sub
addr16
out
or
ljmp
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
cmpsb
fisubrl
in
mov
orb
int3
lcall
fs
scas
push
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
pushl
scas
xchg
test
aam
and
sbb
sarl
and
rcr
incl
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
pop
outsl
in
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
lcall
mov
pop
cwtl
int
arpl
push
out
or
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
roll
stc
xor
hlt
and
xchg
jmp
sbb
and
dec
out
pop
jb
icebp
jg
mov
mov
mov
sub
pop
mov
sub
jp
push
gs
jg
sti
stos
hlt
push
add
stc
loope
mov
sar
andl
aas
icebp
testb
mov
inc
imul
scas
fadds
in
ljmp
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
jg
subl
jb
adc
push
lock
lods
jp
testb
sbb
jp
into
fcomps
sbb
sbbl
into
andl
aas
loopne
cli
adc
imul
ljmp
aaa
xchg
in
add
inc
adc
loope
fisttpll
ror
rcrl
cli
push
push
push
idivl
ljmp
dec
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
ret
scas
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
inc
sar
cmp
sti
punpckhbw
cmpsb
orb
mov
push
sarl
inc
push
sub
xchg
pop
clc
pop
hlt
jg
push
sub
movsb
add
lea
jg
jmp
std
xorb
jg
aad
adc
ret
das
pop
pop
add
mov
insl
pusha
fucom
out
sarb
sbbl
aad
sbb
or
sarb
std
pop
les
cli
mov
mov
lcall
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
idiv
call
or
adc
and
sbb
xchg
jo
and
out
test
pushl
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
and
clc
nop
enter
or
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
mov
lods
xor
jg,pn
cmpsl
scas
popa
in
pop
or
jg
xchg
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
pushl
adc
xchg
and
push
push
jo
pusha
imul
add
mov
cmc
push
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
lds
test
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
jno
das
cli
adc
and
lahf
fmull
push
cltd
jge
push
lret
mov
pop
mov
sub
clc
mov
dec
incb
fisubrl
aas
mov
or
mov
inc
or
pop
jg
add
std
mov
jg
mov
aad
test
mov
mov
jbe
or
iret
push
jbe
push
sbb
stos
icebp
pop
incb
jg
out
dec
jno
adc
push
inc
jecxz
sbb
sarl
outsl
loop
jnp
inc
sar
xor
sbb
xor
imul
dec
jae
imull
mov
aas
mov
fsubrl
mov
push
and
punpckhwd
push
clc
xchg
pushf
mov
repnz
add
push
and
mov
adc
inc
aas
push
shll
cld
decl
inc
jb
fistpl
adc
call
jno
lcall
pop
pop
nop
mov
inc
sti
arpl
daa
std
or
sbb
ljmp
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
push
fsubr
fistps
lds
fidivrl
jg
stos
inc
pop
add
dec
mov
sub
jge
xor
lahf
les
sbb
shrb
xor
inc
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
pop
sar
jmp
arpl
out
out
outsl
xchg
ljmp
sar
test
in
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
movsb
incl
xchg
aad
loop
lahf
mov
or
out
lcall
dec
cmp
shl
cld
mov
adc
stos
pop
jg
lcall
fistpl
sub
sarb
adc
xor
pop
rcr
dec
mov
jmp
jmp
lea
jp
jnp
jecxz
adc
inc
lds
call
pop
adc
imul
or
inc
pop
xor
rorb
and
add
jg
incl
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
jg
movsb
insb
or
and
xchg
fidivrs
push
xor
add
insb
test
aas
repz
outsl
lock
clc
int
mov
in
jmp
stc
out
mov
clc
push
std
mov
mov
or
mov
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
mov
loopne
test
out
rolb
pop
or
or
inc
in
cmpsb
rorl
aas
lods
leave
inc
lods
movsb
or
cmp
add
mov
jl
mov
add
call
cmpsl
lret
pop
fwait
mov
cmp
jmp
mov
pop
sti
stos
or
lock
jmp
hlt
dec
mov
xlat
inc
inc
sbb
lods
jg
mov
sub
addr16
nop
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
push
mov
das
incb
lock
pop
pop
div
cld
testl
fs
sbb
stc
lahf
loope
jae
jmp
addb
jge
jg
pushl
out
xchg
add
out
icebp
mov
loope
mov
clc
inc
mov
cmpsl
popf
sti
mov
fbstp
cmp
outsl
das
rorl
out
rcrl
popf
js
data16
decb
faddl
outsl
decb
dec
adc
call
xor
cltd
add
sbb
mov
cmp
int
add
push
pop
aaa
std
sbb
inc
sbb
mov
mov
aas
icebp
ret
rol
enter
sbb
aaa
inc
adc
adc
mov
sub
mov
pop
clc
loope
add
and
dec
add
push
adc
jae
xlat
jmp
jg
push
and
fdivrl
xchg
lcall
jecxz
imul
andb
rorl
outsl
pop
out
jg
jno
ret
cmp
pop
and
out
jg
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
icebp
decl
in
sbb
xchg
imul
jmp
outsl
jmp
lock
add
std
mov
daa
jmp
faddl
mov
add
jae
jmp
pop
add
pop
stc
push
dec
out
fstpt
lds
jecxz
mov
enter
push
push
adc
xchg
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
hlt
lcall
mov
fildll
fsubrl
dec
add
dec
push
orb
add
push
sti
pop
inc
dec
push
mov
in
sub
bsf
popf
shrl
mov
pop
iret
and
mov
push
add
cld
imul
or
movsb
scas
aad
ja,pn
add
pop
xchg
test
and
push
mov
lds
lar
mov
es
jnp
lret
addb
inc
cs
or
adc
je
cld
outsb
dec
ja
and
jne
jo
imul
mov
jp
ds
rol
add
push
lds
push
inc
out
xchg
orb
cmp
ror
inc
clc
xor
add
imul
insb
push
dec
add
adc
pop
sti
sarb
faddl
and
inc
imul
sbb
dec
adc
jae
dec
gs
pop
and
push
aad
outsl
outsl
insb
push
push
jo
push
outsb
popa
jo
push
insl
pop
es
sbb
dec
dec
sub
or
dec
dec
jne
js
or
pop
inc
scas
ret
add
popa
jno
add
adc
cmp
ss
inc
jns
push
adc
push
imul
fsub
sub
dec
ljmp
dec
ss
pusha
pop
add
or
adc
and
rcrl
dec
xchg
jo
or
or
repnz
data16
loopne
sub
jle
test
add
lcall
sub
inc
or
mov
or
cmpl
imul
pop
dec
inc
or
jae
cli
arpl
mov
ret
adc
inc
cmp
mov
fisubs
mov
dec
adc
push
pop
ds
inc
icebp
inc
insb
jne
addl
xchg
xchg
test
add
clc
ss
imul
dec
xorb
fldcw
inc
push
fildl
push
addl
sub
mov
mov
popa
andl
push
pop
jb
xchg
and
loopne
in
or
cmp
xchg
adc
xchg
inc
add
push
hlt
add
popw
fs
inc
jecxz
das
sarl
dec
cmp
imul
int3
adc
push
insb
xor
jo
xor
inc
or
dec
lods
inc
xchg
add
addr16
push
pop
xor
pop
pop
mov
inc
popa
sbb
xchg
adc
pop
bound
outsl
leave
mov
xor
arpl
mov
outsl
adc
xchg
fdiv
mov
and
test
shlb
fisubrs
popa
inc
fidivrl
or
pop
or
fcmovu
xchg
popw
push
shlb
push
mov
fcmovu
mov
inc
xchg
popa
and
jmp
inc
push
inc
in
push
dec
jae
pushf
inc
or
fistpl
inc
dec
or
inc
dec
push
cmp
mov
push
test
lahf
or
fs
js
std
xchg
lods
xor
fnstsw
ljmp
inc
sbb
rcl
inc
jg
pop
push
rcl
adc
ja
in
mov
pop
and
and
ret
sbb
popa
es
jp
mov
loope
push
jb
sbb
jg
sbb
rorb
push
and
push
inc
xchg
mov
outsl
jns
int
dec
rcrb
add
sbb
gs
and
jbe
inc
xchg
pop
aad
mov
jns
add
fwait
xchg
inc
je
push
inc
adc
lods
jmp
out
sti
xlat
addb
push
inc
sbb
shlb
mov
into
mov
adc
jno
addl
insl
adc
or
push
es
mov
mov
loopne
add
push
or
jns
push
push
cmp
dec
stos
loope
es
xor
pushf
lock
cmp
pop
xchg
or
add
out
ret
pop
aaa
cmp
or
bound
test
inc
dec
pop
dec
and
andb
pushf
push
jne
inc
mov
shlb
adc
fbld
adc
jecxz
dec
xor
mov
lret
inc
xchg
rolb
push
xor
or
adc
jo
add
addr16
outsl
jg
mov
inc
adc
fisubrs
inc
scas
pop
stc
add
pop
outsb
push
outsl
add
add
sub
fwait
pop
jbe
insl
and
in
sarl
push
sarb
and
jns
sarl
ret
stos
data16
push
and
arpl
sub
sub
mov
add
adc
or
mov
jno
fisubs
push
xorl
imul
xchg
add
dec
jnp
and
jnp
xchg
push
popa
sbb
out
outsb
adc
fs
mov
push
fadds
adcl
dec
fstl
push
je
push
aad
sahf
and
push
outsl
xor
push
fsubs
jb
and
jl
inc
push
or
in
lods
jo
pushf
dec
inc
inc
and
arpl
sbb
pop
inc
imul
shll
sahf
mov
inc
pop
mov
ss
push
inc
insb
jle
clc
popa
dec
aad
call
xor
mov
movsb
jae
out
pushf
jmp
nop
mov
mov
add
lds
inc
xlat
xor
inc
nop
sbb
dec
add
mov
dec
rcr
push
les
movsl
push
movsb
push
out
jnp
push
xor
push
pop
xor
ret
ficomps
shlb
mov
add
imulb
push
push
dec
rorl
adc
push
and
pop
cmp
out
mov
jns
je
insl
dec
outsb
dec
or
jnp
int
loope
ss
sar
pop
add
add
cmpsb
xor
mov
xchg
xor
imul
or
cmpsl
imul
xchg
mov
inc
push
addb
pop
adc
cmp
ds
pushf
sbb
inc
jb
mov
sbb
and
dec
and
jl
outsl
flds
ret
movsb
bound
add
test
out
inc
add
mov
jb
inc
jae
insl
insb
insl
insl
inc
leave
inc
shll
ret
or
dec
imul
cmc
push
sbb
jo
insb
and
adcb
rclb
shlb
push
jl
cs
mov
mov
mov
pop
adc
sbb
mov
mov
lret
add
or
je
cmpsl
push
movsb
in
mov
out
adc
push
and
es
aad
sbb
jp
sub
outsl
or
adc
rcrb
fisttps
inc
pop
or
inc
mov
or
sub
jmp
push
outsl
adc
aad
test
jb
lods
fdivl
push
add
jo
or
add
ss
jl
pop
or
adc
inc
mov
xlat
or
ret
pop
push
mov
sbb
sbb
movsbl
or
xor
sub
mov
ds
dec
sub
or
jg
cwtl
dec
push
or
rclb
sbb
or
int3
outsb
push
push
or
mov
rcrl
call
push
and
jae
mov
pop
movsb
pusha
jnp
mov
push
dec
lods
pop
and
adc
test
mov
and
mov
int3
lret
inc
lds
dec
sbb
and
push
push
aas
or
inc
rcl
sbb
pusha
fcomi
aaa
xchg
sub
insb
test
movsl
outsb
out
mov
scas
or
cs
pusha
jno
mov
cwtl
jecxz
add
das
sbb
mov
popa
or
mov
dec
cmpsl
fs
xlat
in
pop
ja
int3
add
pop
push
lods
sub
inc
iret
jns
fiaddl
cmpsl
jge
loop
ror
nop
inc
mov
fs
cmp
jecxz
mov
dec
xchg
or
pop
mov
push
or
mov
push
add
push
push
out
cmc
sbb
add
cmovno
pop
adcb
enter
ljmp
push
inc
out
or
push
js
repz
sub
pop
xchg
dec
push
add
jae
inc
mov
scas
lock
int3
add
movsw
dec
subl
outsb
lods
jo
add
jmp
jg
xchg
mov
add
jbe
adc
or
adc
popf
jge
mov
add
mov
nop
or
or
addb
dec
scas
dec
add
jp
iret
pop
loopne
inc
pop
rcrl
lock
cmp
xchg
jbe
jb
jnp
adcb
or
sar
es
loopne
repnz
push
xchg
cld
pusha
push
add
inc
pop
bound
add
lock
push
pop
enter
add
mov
pop
adc
sub
jb
popa
adc
add
push
push
into
push
out
inc
xor
push
cmp
insl
in
add
jb
push
xlat
mov
mov
push
lahf
es
and
out
shl
add
inc
and
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
add
