divb
in
mov
mov
rorb
add
add
out
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
movl
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
inc
push
adc
add
inc
sub
rol
jo
mov
push
mov
xor
push
mov
call
pushl
fwait
mov
enter
push
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
xorw
push
adc
cwtl
or
lock
fcomi
sub
dec
shlb
in
or
loope
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
push
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
call
and
cmp
ret
test
push
xchg
mov
call
addb
das
or
push
dec
and
add
xchg
es
pop
xlat
mov
xor
test
or
sbb
push
lock
or
inc
scas
stos
imul
dec
out
jge
test
mov
pop
jne
aad
imul
cmpsl
jnp
cmp
data16
mov
dec
pop
push
insl
sbb
pop
cld
add
push
push
push
iret
bound
lds
aaa
jae
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
mov
js
sti
mov
mov
xor
mov
pop
ret
arpl
ret
add
pop
roll
pop
imul
sarl
pop
pop
dec
add
clc
sub
mov
enter
push
push
ss
loopne
jmp
fs
xor
jne
pop
adc
fdivr
mov
adc
jg
mov
adc
int3
adc
adc
ret
shrl
jge
pop
add
lock
pop
outsl
jmp
in
sub
xchg
sbb
push
decl
push
mov
sar
xor
cmp
ja
adc
add
sub
add
push
movsb
inc
xor
adc
nop
xchg
push
jo
addb
add
scas
cmp
loop
lds
iret
jle
mov
cmpl
lds
jle
push
filds
ret
add
jge
std
xlat
mov
sbb
or
jmp
cltd
sub
ja
fcmovb
shr
enter
mov
mov
sub
dec
push
add
cld
sbb
cmp
jl
cmp
jne
pop
mov
inc
pop
mov
mov
mov
push
jbe
mov
hlt
out
jne
rorl
mov
mov
or
adc
push
lea
cmpl
fld
push
xor
into
mov
mov
mov
cmpsl
sub
cmp
cmp
cmpsl
mov
in
scas
xor
fsubrs
mov
jg
cmpsl
rcrl
mov
mov
xchg
or
test
jle
dec
popa
outsl
or
push
call
sahf
mov
add
or
icebp
in
pop
pop
fwait
push
pop
sub
jg
decl
ja
mov
inc
jecxz
jns
mov
loop
pop
mov
inc
addr16
aam
sbb
sub
or
ret
andl
ret
and
mov
adcb
idivb
jmp
hlt
jg
pusha
andb
cmp
sub
mov
notb
hlt
movlhps
hlt
mov
insb
idivl
jle
mov
out
clc
adc
cmpl
je
push
cmp
cmp
jae
addl
sub
mov
or
add
inc
push
sub
jb
pop
add
xchg
pop
std
notb
sub
ret
lea
ljmp
lcall
inc
push
push
push
push
rclb
rcrl
mov
jmp
xchg
jmp
inc
or
addb
mov
pop
es
and
and
inc
sub
jo
cmp
aad
aaa
stos
rcrl
add
or
pop
or
fbld
cmp
push
mov
lea
cmp
jne
push
push
mulb
clc
push
push
adcb
js
push
mov
mov
or
pusha
enter
pop
pop
rclb
iret
rcrl
push
stc
inc
fdivl
cmp
stos
xchg
out
xlat
jge
movl
mov
add
jae
iret
xchg
add
out
add
pop
fstpt
mov
add
mov
sbb
xor
mov
pop
mov
sti
push
or
cwtl
push
push
xchg
out
sti
imul
mov
loopne
in
dec
push
push
cmp
sbb
mov
std
stos
or
adc
je
push
adc
loopne
test
push
sbb
sar
inc
inc
inc
or
or
fildll
lea
dec
push
xor
sbb
pop
mov
xchg
pop
push
jmp
dec
fwait
fs
add
sbb
pop
jae
jae
push
add
les
inc
push
dec
pop
xchg
push
out
or
iret
popf
lea
push
add
push
mov
cmp
outsl
fwait
xor
pop
cmp
sub
mov
ja
sub
mov
and
push
scas
mov
aaa
cmp
push
sbb
addr16
push
cmp
push
inc
cmp
je
call
sub
outsl
sbb
cmp
in
jne
sbb
sbb
in
jp
jecxz
jo
pop
mov
add
into
xor
jb
cmp
repnz
cmc
or
sub
test
fsub
mov
aam
jp
or
mov
mov
mov
jecxz
std
jle
mov
cmp
adc
jge
xor
jno
add
or
inc
lea
or
rcr
lcall
clc
push
or
roll
or
add
adc
or
sub
pusha
mov
cmp
mov
shlb
dec
or
push
or
ds
fisubs
scas
ljmp
or
push
mov
xlat
push
xchg
sbb
fsts
jno
cltd
sbb
icebp
stc
lcall
pushl
push
mov
out
add
jp
sub
mov
sbb
mov
ret
shrl
adc
pop
inc
xlat
add
add
pop
or
or
ret
je
dec
je
ret
jns
sbb
adc
or
adc
and
shll
js
hlt
or
pop
adc
and
iret
jo
mov
rcll
inc
fmuls
ljmp
ljmp
mov
push
add
shr
mov
cli
xor
fadds
mov
xchg
jmp
adc
pusha
pushf
pop
cmc
mov
call
push
xor
cmpsl
xchg
mov
in
aaa
pushf
or
mov
jae
mov
sarb
fisttps
inc
xchg
and
aas
mov
dec
mov
cmp
js
sub
out
sbb
push
sub
or
sub
js
and
fwait
or
fcoms
cmp
popa
add
roll
in
dec
dec
lock
fldl
pushl
dec
in
loopne
out
neg
sbb
inc
inc
pop
xlat
sbbb
mov
mov
or
cmpb
fiadds
sbb
push
cltd
adc
cmpb
jbe
movsl
push
popa
negl
pop
fildll
das
pop
sahf
jmp
sbb
call
or
test
sbb
loopne
xlat
repz
lea
cmp
sbb
adc
aaa
pop
mov
push
lret
mov
push
xchg
xorl
xchg
ret
pop
adc
test
clc
mov
fstpt
aas
pop
mov
xchg
out
cld
cmp
jl
or
dec
jl
mov
push
xor
cmp
sahf
dec
inc
push
fs
or
sbbl
mov
xchg
into
scas
push
pusha
nop
mov
and
xor
sti
xor
pushf
sub
mov
xor
or
daa
inc
fs
xchg
add
jo
mov
push
in
jae
nop
out
cwtl
adc
adc
mov
scas
adc
vdivps
lahf
xlat
lea
push
push
or
mov
xor
sub
xchg
jl
push
inc
subl
or
xchg
xor
rolb
xchg
xchg
cmpsl
stc
sub
jmp
mov
js
dec
jl
dec
in
or
mov
mov
ljmp
divb
fnsave
scas
xor
mov
cmp
call
push
push
pop
inc
lods
jo
loope
add
shlb
mov
or
sbb
outsl
lea
insl
cmpsl
flds
add
in
jl
xor
in
jne
push
mov
mov
pop
repnz
je
or
push
mov
inc
and
add
sub
sbb
xor
loopne
jno
les
mov
pop
pop
add
jne
xchg
inc
jmp
fabs
ret
push
xor
mov
mul
aam
jge
decl
inc
setno
xchg
test
out
add
enter
loopne
movl
lock
mov
mov
push
aaa
cmp
inc
xlat
or
jp
dec
adc
mov
and
shlb
bound
adc
xchg
in
push
and
push
or
ljmp
frstor
add
add
add
fldt
pop
sbbb
in
testb
xchg
in
push
sarb
pop
push
movb
stos
jo
xor
mov
and
mov
adc
jmp
stc
jle
dec
test
mov
pop
push
fldcw
push
pop
jno
idivl
je
push
fimuls
ja
and
cmp
pop
inc
je
or
test
or
xchg
mov
mov
dec
cmc
jo
sbb
imul
enter
add
out
das
lock
push
enter
lods
lods
add
in
fmull
and
or
add
inc
repz
daa
outsl
mov
js
insb
das
loopne
push
mov
dec
cmp
in
cmp
adc
sub
ljmp
sbb
fdivp
cmp
add
out
data16
xchg
jge
out
sti
lock
shlb
cmp
adc
mov
sarb
pop
adc
mov
adc
arpl
movsb
xchg
and
cmp
movsb
xchg
out
mov
adc
fwait
rol
aam
push
test
dec
inc
pushf
pushf
and
ret
mov
mov
xchg
sbb
dec
inc
xchg
xchg
hlt
inc
cmpsb
in
movsb
int3
sbb
int3
in
lret
inc
enter
mov
and
rol
push
repnz
rol
in
lret
cmp
pop
mov
mov
dec
leave
jae
mov
sub
test
push
test
add
test
jle
pop
pop
pusha
inc
xor
and
insl
inc
ja
and
aas
add
testl
cwtl
arpl
pop
mov
push
sub
fstp
push
loopne
iret
and
xchg
outsb
inc
sbb
aaa
xchg
add
ret
mov
test
jo
ss
je
sbb
loop
fstp
push
jmp
cs
push
xor
sbb
or
mov
and
add
adc
add
adc
or
in
loopne
add
inc
mov
ret
jle
clc
in
mov
in
andb
je
test
lods
imul
push
push
fisttpll
movsb
and
push
dec
punpckhwd
aaa
adc
dec
scas
je
sti
or
push
divl
test
clc
out
pop
test
sub
fs
shll
pop
sbb
and
insl
or
add
popa
cmpsb
xor
lret
xchg
mov
xchg
or
std
and
pushf
push
adc
adc
ds
ds
add
cmp
or
jl
or
lea
push
leave
aad
lock
jne
fildl
xchg
pop
pop
push
jmp
push
xchg
ret
leave
xor
leave
pop
jmp
adc
adc
jle
imul
test
scas
fadds
xchg
dec
mov
adc
add
ror
sbb
sub
or
sbb
mov
push
push
sbb
daa
pop
jbe
and
jl
mov
sbb
or
cwtl
fs
sub
btc
lret
adcl
in
fildl
mov
inc
test
adc
inc
adc
leave
adcb
jno
shll
sbb
jne
fidivl
es
into
adc
dec
cmc
xor
inc
adc
xchg
dec
mov
push
add
add
cmc
dec
push
inc
mov
call
inc
lret
insl
xchg
pop
push
js
dec
sbb
test
mov
mov
lock
fistpl
jne
jo
or
sbbb
inc
sbb
or
jb
push
cmpsl
scas
cmp
cltd
outsb
clc
popf
jl
in
in
loopne
cmp
pop
add
push
sahf
les
xchg
fbld
add
pop
nopl
xchg
and
popa
pop
xlat
sbb
mov
maskmovq
idivl
imul
loop
clc
add
xlat
outsl
or
je
xor
push
push
or
mov
or
iret
xchg
mov
pushw
mov
nop
or
adc
pop
dec
movsl
and
jecxz
or
scas
mov
add
clc
inc
popw
add
lods
mov
hlt
int3
or
aaa
cmp
jl
xor
and
fstpt
sbb
out
test
hlt
je
pop
sahf
loopne
push
push
pop
ljmp
test
int
inc
pusha
lock
adc
mov
mov
clc
adc
and
shrl
pop
mov
xorb
jmp
dec
cmp
sub
mov
mov
xchg
and
push
xor
sub
push
and
js
lahf
bound
adc
xlat
and
sti
add
pop
sub
cmp
popf
pop
mov
cmpsl
and
xchg
movsb
std
daa
inc
div
fdivrl
and
cwtl
and
je
aas
incb
add
push
or
jo
jmp
fsubrs
push
fdivrs
aam
stc
scas
xchg
sbb
sub
push
sbb
sub
sub
inc
imul
sub
jno
jno
or
ss
inc
stos
inc
dec
inc
lret
ret
test
lret
or
xor
mov
cmpsl
jne
mov
add
add
and
inc
pop
xor
cwtl
push
insb
stos
xor
frstor
ss
pop
insb
adc
repnz
rclb
lods
mov
jo
xchg
and
push
test
add
test
jo
mov
pop
lcall
sbb
adc
jecxz
dec
sub
adc
fcomps
lret
push
push
outsl
xchg
in
test
ficoms
or
sub
add
rclb
in
inc
jo
mov
mov
mov
push
mov
sti
sbb
sbb
mov
pop
fmull
fadds
mov
push
pop
and
or
loopne
add
add
sahf
inc
popf
cmp
or
jmp
dec
cmpsb
inc
das
sub
in
call
stos
dec
enter
mov
add
enter
popw
cs
bound
xchg
add
dec
mov
call
mov
insl
sbb
xlat
push
inc
jb
cmp
cltd
mov
std
fdivs
addl
outsl
inc
xor
pop
out
jmp
mov
in
inc
cmp
inc
mov
mulb
add
or
xchg
stc
pop
call
xor
ficoml
enter
sbb
pop
add
pop
cmp
daa
pop
cmp
cmp
jne
and
test
and
fadds
or
mov
int
or
cmp
ficomps
test
mov
jne
bound
shrb
push
bound
popf
fildl
js
mov
xorl
mov
addr16
punpcklwd
mov
ret
add
fs
jo
fwait
xchg
mov
loop
push
jo
mov
in
and
mov
adc
lods
add
push
je
nop
out
mov
jnp
adc
pop
dec
mov
jge
adc
je
cmp
jge
push
push
jp
mov
mov
add
inc
mov
mov
add
lock
sub
test
pslld
push
sub
call
sub
das
mov
shlb
xchg
adc
inc
in
mov
aas
mov
sub
jmp
cmp
or
shll
dec
enter
xor
pop
add
lock
mov
jmp
mov
stos
lock
jl
push
mov
add
xor
loopne
sub
add
es
scas
push
adc
push
mov
js
pop
lret
cmpb
push
push
movsb
adc
rolb
cmp
mov
cmp
inc
dec
jns
cld
push
or
cmp
sbb
add
mov
daa
sbb
or
movsb
loopne
mov
adc
dec
das
xchg
jbe
jle
xchg
inc
out
or
pop
or
sub
cmp
xchg
mov
add
icebp
les
cmp
pop
in
negb
jne
or
je
sub
das
add
cld
jo
in
sti
loopne
jg
popa
or
int3
cli
jo
inc
hlt
xor
and
lock
faddl
sbb
adc
pop
pop
test
mov
ret
orb
ret
rcr
out
out
jne
or
popa
cmpsl
push
out
xchg
cmp
mov
loop
test
call
call
rolb
sub
arpl
cmp
lahf
je
sub
jmp
push
sbb
rcrl
insb
inc
fsub
push
out
inc
out
test
inc
lock
push
add
xor
mov
mov
imull
cwtl
lods
loope
lds
ret
jno
inc
stos
orl
cmpsb
push
add
push
xor
push
push
or
jg
mov
cmpsb
mov
les
or
test
repnz
cmpsl
mov
rorb
rolb
sbb
fdivr
or
xor
xor
in
rorb
mov
mov
jnp
and
lock
dec
dec
je
sub
jmp
jge
cli
adc
push
inc
push
mov
jmp
lock
mov
jg
or
fwait
mov
xlat
pop
xchg
adc
push
rclb
xchg
icebp
inc
and
inc
inc
inc
insl
sbbb
mov
aad
mov
je
lock
mov
mov
xor
inc
mov
sarl
jl
lods
push
dec
cmp
adcb
push
aaa
fs
push
pavgw
jle
enter
jno
fwait
sbb
push
or
lock
jecxz
push
mov
orb
movl
cmp
loopne
fisttps
cmpsl
or
in
add
sarb
add
inc
sbb
sbb
imul
outsb
fadd
sbb
sbb
xchg
add
jle
ret
scas
pop
lea
add
psubd
in
ret
sub
shlb
out
inc
cmpl
push
push
jne
aaa
or
push
jo
jnp
into
in
inc
xchg
in
jp
lock
stos
xor
cltd
mov
rcrb
test
or
sbb
or
scas
fcmovnbe
mov
insb
mov
cmp
mov
push
fistl
sbb
dec
pushf
in
inc
out
cmp
ds
inc
cmp
cmpl
jne
add
mov
cmp
jle
cmp
nop
es
dec
xorb
push
imul
pop
fmull
jp
fcompl
movsb
adc
add
pop
sar
in
loopne
pushf
loopne
mov
mov
jmp
push
pusha
mov
dec
fcomps
shll
push
sti
cwtl
test
aam
fmuls
or
loopne
or
push
mov
inc
loop
cmp
nop
or
push
addb
pop
adc
scas
fdivr
mov
cmp
cli
in
mov
jbe
mov
rorl
or
in
pop
stc
and
scas
in
lret
mov
cmp
inc
mov
scas
sbb
jno
testl
nop
inc
xchg
and
mov
fmuls
test
test
pminub
jb
sbb
lods
ret
push
push
call
and
rorl
cmpb
mov
fs
add
inc
and
addr16
mov
rcll
clc
add
mov
cwtl
lock
jo
out
mov
enter
lds
or
push
jl
add
test
je
push
pusha
mov
pop
or
mov
dec
iret
mov
add
inc
mov
adc
add
dec
push
and
pushf
int3
push
pop
xor
mov
hlt
dec
mov
adc
mov
fcmovnu
into
lods
adc
rclb
sbb
mov
das
das
das
fcoms
fsubrl
adc
mov
mov
lcall
inc
mov
pushl
call
mov
decl
shr
movzbl
push
adc
sbb
xchg
or
ret
push
ret
dec
mov
mov
cmp
in
stos
mov
cmpsl
jmp
sbb
pop
popf
cmp
ret
push
andl
test
insb
sbb
in
xchg
adc
push
gs
pop
xor
mov
sti
push
pop
jb
xor
loopne
pop
or
add
xlat
push
mov
fwait
add
xor
jmp
imul
push
add
push
push
jl
std
daa
mov
cmp
jg
mov
mov
jmp
add
gs
cmp
aaa
lds
pop
fldl
repnz
sbb
mov
inc
pop
adc
mov
mov
aas
mov
dec
jecxz
mov
or
popa
lea
xor
inc
je
aaa
outsb
sub
in
sub
sbb
subl
sbb
push
shlb
and
pop
jg
mov
ret
push
pop
jmp
mov
push
inc
ret
fdivrl
add
ss
arpl
and
cmp
je
cmp
in
add
imul
cmp
adc
test
push
adc
lock
xor
inc
cmp
jae
add
inc
hlt
lea
ja
pop
dec
cmc
add
je
call
push
mov
fildl
js
je
add
fiaddl
insb
sub
fcomps
cmpsb
lock
fnsave
std
or
scas
pop
hlt
add
jl
in
and
lcall
push
lods
ljmp
pop
cmp
jecxz
xor
inc
adc
clc
roll
loop
popf
into
popa
nop
add
mov
rcrl
pop
xor
adc
cli
lea
ljmp
push
push
cld
or
xlat
leave
into
sub
test
xor
out
xchg
add
leave
pop
in
push
mov
mov
mov
mov
adc
mov
aad
inc
js
jb
mov
mov
xchg
cltd
mulb
leave
js
inc
dec
hlt
jg
hlt
or
clc
or
push
sub
pop
pop
push
enter
lock
filds
and
add
inc
ss
mov
cbtw
scas
fdivrs
in
out
push
push
add
fdivs
mov
cli
adc
xchg
sub
jno
fdivp
add
adc
hlt
jl
repz
push
sub
push
in
enter
and
and
xor
ret
or
bound
xchg
popa
pop
add
fwait
mov
cmp
push
xchg
in
test
bound
push
mov
popf
jge
or
sarl
mov
adc
or
stc
push
cmp
push
and
mov
ret
je
mov
fdivrs
mov
jp
mov
sbb
movsl
sbb
test
pop
movsb
push
dec
sbb
ficomps
or
cmp
mov
or
add
icebp
sbb
rolb
test
xor
adc
cmp
fiadds
test
add
mov
movsl
or
sbb
out
aam
fadd
je
push
and
xor
scas
ljmp
insl
hlt
pop
mov
jb
ficompl
and
sub
and
adc
sub
jmp
icebp
jb
clc
push
pop
sbb
fs
jne
cmp
je
add
xor
inc
cmp
jmp
push
push
push
and
and
sbb
mov
ret
shlb
dec
and
xor
imul
or
xchg
rol
ljmp
addl
test
fisubl
adc
jbe
setne
shlb
shll
test
sbb
cmpsl
ljmp
mov
js
lcall
divb
psrad
mov
jnp
stos
pop
add
pop
sub
pop
inc
mov
add
push
push
adc
mov
pushl
movsb
jp
js
push
decl
loop
cmp
or
inc
add
add
jno
or
loope
lock
lock
mov
loopne
xor
adc
jo
adc
sti
mov
lods
jo
xlat
or
xor
inc
fcmovb
dec
pusha
pop
dec
push
call
add
mov
add
adc
arpl
push
jmp
cwtl
or
adcb
push
addr16
sbb
daa
or
popl
add
add
xor
pop
inc
enter
aas
push
xchg
xchg
call
cmp
mov
sub
sar
shr
mov
mov
or
adc
jb
xchg
xchg
clc
mov
enter
jl
add
insb
cld
cmp
lea
jbe
mov
push
call
pop
push
leave
inc
adc
adc
xchg
add
add
push
js
test
movl
in
add
stos
xor
ds
add
les
xor
push
xor
inc
bound
mov
outsl
roll
pusha
or
nop
sub
xlat
jecxz
add
add
test
cmp
and
lea
sbb
adc
lock
push
aad
popf
icebp
rclb
mov
mov
sbb
sti
inc
andb
andl
or
loop
sub
dec
lret
movsl
mov
lods
pop
xor
mov
and
sub
incl
test
push
jae
sub
pushf
mov
fldt
adc
add
cwtl
add
xchg
sbb
cmp
add
xlat
push
lds
dec
mov
mov
mov
call
jbe
mov
adcl
jns
mov
adc
test
jno
dec
es
lret
cmp
cmp
pop
jb
pop
and
adc
int3
and
add
and
imul
add
mov
and
clc
mov
stos
xor
inc
mov
into
cs
xchg
cmc
add
bound
jmp
or
leave
adcl
roll
enter
sbbb
in
je
sub
dec
dec
inc
dec
popf
pushf
and
mov
cmp
lea
pop
stc
inc
mov
mov
dec
push
push
pop
cmpsb
pop
or
add
sbb
dec
jbe
nop
and
stos
pop
cli
out
mov
xchg
or
fwait
hlt
and
and
dec
mov
stos
jns
jg
cwtl
push
inc
mov
push
pop
xorl
in
and
jbe
andb
adc
lcall
das
lret
cmp
shl
pop
lods
stos
lock
mov
loopne
pusha
scas
cmp
and
leave
and
clc
cmp
and
adc
in
xchg
adc
dec
adc
outsl
pop
pushf
test
push
push
mov
lock
mov
add
or
and
mov
sub
or
sbb
jnp
std
pop
pop
ret
mov
dec
mov
xlat
sbb
add
or
sahf
shlb
pop
dec
push
mov
adc
popf
lea
or
mov
outsl
or
xchg
adc
ja
test
mov
and
and
and
fwait
xchg
sbb
sbb
sbb
sbb
aaa
sub
cmpsb
push
add
push
mov
sbb
aam
movsl
notl
and
xchg
and
rcll
xchg
jae
fdivrp
movups
std
in
dec
sbbb
imul
stc
adc
cmp
popf
xor
sar
cmpl
cmp
push
mov
in
in
shrl
pop
negl
adc
popf
cmpsb
mov
add
cmp
add
push
adcl
push
jb
inc
js
pop
mov
mov
stos
mov
inc
arpl
aam
add
jbe
mov
loopne
aam
jmp
cmp
push
out
lret
pop
movsb
cmp
in
jne
jnp
loope
sub
dec
je
into
adc
in
jge
adc
push
push
pop
dec
ss
sub
mov
xchg
mov
movsb
jmp
ror
popf
sbb
jecxz
jne
cld
mov
sbb
jmp
push
add
push
mov
jmp
xor
or
lea
inc
inc
xchg
xchg
rclb
sub
jl
jno
fmull
mov
pop
push
mov
lds
lea
or
mov
mov
or
xor
or
stc
or
push
daa
pop
jo
xchg
out
pushl
js
push
jle
mov
xchg
pop
and
std
mov
jmp
mov
rcrb
xor
cmp
je
cmp
pop
jmp
movsl
imul
sti
jbe
jg
fldz
andl
and
dec
xchg
outsb
jmp
sbb
and
arpl
sbb
je
mov
or
ret
fstl
ljmp
pop
bound
jnp
negb
pop
push
insb
push
jg
mov
loopne
adc
sbb
jo
les
iret
clc
stos
mov
iret
xlat
inc
sbb
mov
mov
add
pushw
and
lock
sub
adc
pusha
lea
imul
sub
decb
lahf
rorb
fmuls
xchg
or
inc
repnz
out
push
or
xchg
xchg
pop
loop
lret
lahf
jne
loop
dec
xchg
push
dec
push
mov
pop
push
lea
jg
pop
push
push
push
push
add
push
lea
cli
mov
dec
cmp
and
cmp
inc
stc
and
lahf
nop
aad
inc
fcompl
test
cld
lea
lea
movl
dec
aam
inc
cmp
sbb
lds
adc
jbe
xlat
nop
lds
sbb
call
js
je
lea
jbe
sbb
push
aam
imul
push
push
dec
xor
movl
dec
sub
push
xchg
push
cltd
dec
push
jl
enter
daa
mov
xor
rcrl
sbb
movl
cmp
push
ss
push
inc
and
pop
shlb
xorb
bound
pop
push
jbe
insb
in
mov
add
lods
in
adc
push
dec
repz
cltd
adc
insb
inc
mov
or
jae
adc
or
push
pause
push
and
dec
fmuls
push
call
in
push
inc
and
mov
xchg
inc
or
xor
adc
inc
push
sub
data16
je
cmp
sbb
lea
testb
sub
mov
loope
aam
cmp
push
push
cmp
icebp
scas
add
hlt
mov
pushf
jl
imul
in
pop
mov
mov
lea
push
pop
in
jl
lcall
out
push
adc
or
shll
add
rclb
pop
mov
popa
aam
push
aam
das
in
xchg
mov
popa
pop
jne
int3
push
das
dec
imul
xchg
inc
jl
mov
or
add
jle
push
outsb
pop
jo
fcomi
inc
add
push
pop
fmull
fdivr
ret
lcall
fwait
adcb
scas
xor
adc
out
aas
or
int3
cmp
jne
push
sub
xor
bswap
or
pop
clc
js
mov
xor
pop
iret
je
lea
aaa
mov
rolb
mov
jo
add
mov
sbb
cmp
cmp
pop
pushl
call
push
or
push
ja
int
sub
stos
mov
iret
pop
shll
rol
shrb
les
inc
push
mov
lock
cli
loopne
or
adc
dec
lea
dec
push
push
push
mov
ret
push
and
jge
fidivs
lods
jne
sub
sub
in
dec
jmp
cwtl
pop
pop
subb
outsl
push
sub
outsl
dec
fisubl
in
cmp
push
mov
add
mov
inc
adc
dec
cmp
mov
mov
insb
add
or
push
mov
adc
jge
sbb
xchg
cmpsb
push
or
inc
inc
fcomps
in
dec
jno
jns
fsubs
add
cmp
dec
jg
out
enter
xchg
add
leave
add
mov
into
in
and
cmpsb
imul
cmp
push
pop
imul
negb
mov
lcall
clc
in
mov
sbb
and
push
push
out
cmp
out
add
cmpsb
adc
test
aaa
enter
jnp
adc
pusha
enter
mov
scas
daa
nop
mov
mov
xor
push
xlat
push
dec
sbb
adc
punpckhdq
xchg
or
imul
or
push
xor
adc
pop
xchg
mov
fldenv
neg
or
push
pop
mov
push
inc
loope
mov
mov
cld
pop
sub
cmp
jle
cmpl
jne
pushl
cmp
lock
jnp
sbb
push
data16
mov
fadds
je
outsl
cld
adc
scas
push
aam
mov
dec
fisttpll
add
int
add
add
das
jg
push
and
je
cmp
dec
into
jbe
mov
push
sahf
cmp
repz
add
js
lock
xchg
inc
add
jecxz
xchg
loope
popa
in
xchg
pop
jno
pop
push
mov
es
xor
sbb
push
jne
movb
jmp
cmp
sub
loop
jne
popf
movsl
fldz
xor
dec
pushf
inc
cwtl
push
pushf
xchg
jo
movb
push
jle
ret
dec
aas
mov
iret
addb
mov
push
cmp
out
and
sub
jecxz
or
test
sbb
lock
mov
and
test
mov
daa
rcr
mov
mov
into
xlat
ds
push
dec
or
adcb
dec
lods
push
stos
fsubl
stos
pop
push
push
adc
mov
xchg
fcoml
push
nop
pop
cmp
iret
push
adc
enter
ret
cwtl
cltd
lcall
sub
mov
int3
std
jmp
mov
or
push
push
fmuls
adc
push
iret
xor
rolb
cmp
add
daa
sbb
push
test
or
adc
dec
and
stc
mov
pusha
adcl
inc
sbb
mov
push
push
jns
popf
xchg
lret
jl
xchg
andb
das
or
fidivs
xor
fistl
and
sub
xor
mov
test
nop
aaa
mov
je
inc
cwtl
imul
outsl
inc
fldl
fmull
mov
outsb
out
push
loopne
push
push
aaa
movsl
addb
stos
inc
rcrl
pushf
mov
and
fiadds
in
dec
out
andl
xlat
ficomps
add
insb
pop
int
out
negl
popa
in
push
cmp
cmp
push
pop
je
push
popa
sbb
out
fadd
adc
mov
adc
fmuls
add
add
repz
xor
pop
lock
sbb
test
fiaddl
clc
test
or
rol
or
push
mov
xlat
push
adc
sbb
scas
mov
add
clc
dec
loopne
cmpb
xor
je
push
pop
lods
adc
pop
push
add
mov
push
jne
sahf
std
aad
cs
sub
push
push
mov
adc
addr16
sbb
and
repz
xchg
shrl
bound
dec
stos
add
fidivrl
push
cli
mov
xor
push
popa
sub
cmp
test
xor
call
mov
xor
push
popa
push
push
sub
sub
mov
jecxz
and
in
loope
sub
sbb
daa
out
into
inc
xorb
out
rorb
xorb
xor
mov
adc
pop
xchg
and
stos
movsl
ror
push
or
dec
mov
add
adc
jl
mov
cltd
mov
lea
push
ds
mov
dec
adc
sbb
aam
inc
or
cld
negl
add
cmp
jge
mov
data16
idiv
push
mov
mov
sbb
ret
xor
idiv
jg
and
add
jg
xor
fdivrl
out
or
stos
cmpsb
pop
cmp
xor
pusha
scas
mov
test
negb
xor
cli
jge
add
jne
and
mov
in
or
out
mov
pop
insb
xor
xchg
push
xor
sti
sub
add
mov
je
pop
sbb
mov
dec
push
into
jp
xor
mov
daa
pusha
js
pop
ds
jg
fs
stc
mov
movl
adc
insl
mov
ret
mov
lahf
xor
iret
push
negl
pushf
movb
sbb
hlt
fnstcw
dec
lea
sahf
jl
out
ds
xchg
sub
cmp
or
out
jg
nop
or
out
insb
mov
outsb
fildl
mov
test
jns
faddl
std
jnp
fdivl
xor
mov
fdivrp
mov
dec
ja
dec
sub
mov
mov
mov
pop
add
pop
add
in
xchg
xchg
push
xorl
out
add
push
popf
mov
cmpb
or
clc
adc
clc
fidivl
jmp
push
xchg
cli
jmp
or
mov
lock
jne
pop
pop
movb
push
jo
cmpsl
xor
mov
sbb
leave
xchg
jp
and
add
mov
hlt
or
shlb
pop
pop
cmc
push
inc
hlt
adc
lea
fsubs
add
pop
push
jbe
pusha
push
gs
fadd
lcall
inc
pop
scas
fs
and
ljmp
xchg
push
pop
stos
dec
out
push
pop
pop
into
pop
leave
cmp
jb
push
outsl
lds
cmp
call
mov
xchg
cmp
cltd
imul
dec
ret
push
test
inc
popf
sbb
or
xor
outsb
mov
fs
loope
pop
sbb
mov
pusha
jns
and
cmp
ret
inc
jne
sti
mov
pop
rorb
jmp
push
mov
and
adc
pushf
jo
in
pop
xor
shrb
sbb
sub
or
sbb
inc
mov
arpl
xchg
pop
in
add
push
push
lods
pop
pop
mov
or
into
mov
lea
leave
xor
out
push
push
cmp
mov
imul
inc
sub
setp
xor
popa
scas
jle
and
push
and
push
mov
push
bound
add
pusha
adc
pop
mov
scas
sbb
aam
and
mov
dec
popf
or
fs
ds
int3
pop
push
pop
in
sbb
xchg
jl
pop
popf
dec
dec
rolb
movnti
jmp
dec
and
xor
sub
push
jl
jns
push
cmp
lahf
in
and
sbb
mov
pop
sbb
imul
lods
mov
and
xor
mov
aas
sbb
inc
dec
jg
sbb
push
add
push
mov
pop
sub
clc
setb
test
rcrb
rorb
xor
test
xor
sub
andl
pop
or
jecxz
push
lods
aaa
orb
jle
je
push
fstps
imul
shlb
gs
lock
es
and
je
dec
mov
push
adc
inc
push
xchg
hlt
push
int
int
sub
add
add
shrl
inc
sub
xlat
mov
das
push
cmp
jb
pop
fwait
pop
add
inc
sub
cmp
mov
sbb
fwait
add
jo
stos
ret
fwait
bound
mov
aas
sub
lods
out
imul
sub
das
mov
bound
inc
loopne
das
xor
add
inc
inc
jnp
push
jmp
test
pop
lds
jl
pop
adc
icebp
test
push
pop
push
xchg
add
pop
int3
pop
in
dec
and
add
mov
or
push
add
add
sbb
adc
das
lea
out
sbb
cmp
js
leave
push
sub
cmp
dec
aaa
inc
add
dec
std
int3
push
mov
add
enter
adc
iret
add
sbb
push
and
cld
sub
sbb
inc
pinsrw
add
dec
out
adc
dec
mov
sarb
inc
mov
clc
pop
push
push
jns,pn
in
enter
cmp
fmuls
sbb
adcb
sbb
rclb
jns
popl
mov
ss
add
fdivr
xor
int3
add
and
pop
push
cwtl
add
pop
shlb
arpl
fidivs
sbb
mov
sbb
sbb
push
test
mov
add
mov
jle
stos
orl
cs
mov
addr16
lods
adc
push
sbb
lcall
mov
int3
mov
xchg
das
incl
into
cmp
into
cmp
mov
or
push
faddl
ds
jno
cmp
in
nop
jl
mov
popa
pop
push
push
outsl
inc
cmp
jnp
adc
push
pop
inc
push
mov
mov
in
pop
push
cld
dec
cmpsl
adc
cmp
push
jbe
mov
mov
inc
push
jnp
enter
popl
dec
push
jns
cmp
enter
out
xor
jne
mov
sbb
je
pop
xchg
js
arpl
sbb
xchg
pop
pushl
push
lret
sub
scas
mov
inc
in
ja
movb
decl
xor
jecxz
cwtl
ret
je
mov
sbb
scas
cmp
push
dec
mov
jmp
dec
mov
sub
out
mulb
mov
lcall
dec
add
testb
xor
jmp
cmpsl
xchg
sub
insb
push
js
mov
sub
leave
cmp
js
cmp
jge
mov
mov
mov
cmp
sbbb
pop
add
jle
call
jmp
push
pop
xchg
out
or
fsubr
sbb
fwait
or
fsubrs
out
test
sbb
enter
sbb
test
adc
ljmp
into
jbe
mov
cmp
in
mov
add
sub
incl
inc
sete
adc
loope
loopne
lea
sbb
adcl
mov
nop
arpl
cmp
pushf
lods
repnz
mov
cwtl
insl
dec
out
mov
add
sbb
and
inc
sub
ljmp
dec
shrl
ret
sbb
or
fcompl
add
movsl
mov
int3
jnp
loopne
sub
pop
push
roll
xor
cmp
adc
ret
lret
sbb
push
dec
lock
pop
sub
jmp
andl
cs
push
pop
push
insl
pop
or
or
mov
mov
mov
gs
aaa
bound
cld
negl
fcoms
ss
adc
std
fadd
pushf
cmp
push
xchg
push
or
insb
mov
sti
add
addl
adc
mov
add
out
cmp
push
jb
fdivrs
jne
hlt
adc
or
adc
mov
clc
mov
fsubl
in
adc
mov
or
das
lock
cmp
data16
repz
in
call
ja
fdiv
in
push
mov
and
xchg
lods
adc
sti
xorl
inc
pusha
fmuls
or
sbb
and
in
add
es
lock
fstpt
enter
or
mov
jge
and
inc
or
pop
or
push
insb
cmp
xor
cltd
or
testl
mov
jb
xchg
or
dec
insb
addr16
pop
xchg
sbb
jno
enter
jne
je
add
pop
mov
in
clc
sub
mov
test
add
dec
sti
lock
push
hlt
add
or
lock
adc
lods
sbb
xor
daa
hlt
xchg
pushf
add
popl
jle
std
repnz
add
add
clc
cld
sub
adc
cmp
std
dec
call
jge
cmp
jmp
aaa
adc
scas
pop
hlt
mov
out
or
sub
add
into
push
push
add
push
outsl
or
add
dec
fnstcw
add
adc
adc
sub
loop
push
mov
fbld
insl
inc
inc
in
jb
sub
fstpt
das
sub
jg
mov
pop
dec
add
add
jae
jb
xor
addb
pop
lods
dec
sub
xor
stos
test
enter
cmp
pusha
jno
sbb
pusha
push
push
js
push
sub
shlb
pop
repz
xor
xor
xchg
jg
pop
mov
movzwl
push
pop
aaa
xor
gs
cmp
dec
lods
jg
call
push
test
jp
push
rcll
or
call
pop
push
mov
adc
into
sbb
rcrb
jae
adc
pop
mov
add
or
pop
and
mov
sbb
sbb
pop
ss
push
push
fisttps
in
nop
sbb
fs
add
inc
cmp
mov
xor
orl
jl
mov
adc
mull
test
cltd
jge
sbb
jbe
mov
push
jge
dec
add
push
testl
cld
mov
out
adcb
cld
xchg
inc
icebp
xchg
inc
fldl
sbb
in
jbe
mov
push
bound
scas
or
push
cmp
loopne
icebp
sub
add
or
lock
mov
xchg
pop
aas
orl
xchg
adcb
sub
loope
jae
addr16
movl
dec
cld
ror
out
inc
stc
xchg
dec
sub
dec
sub
incb
data16
push
mov
iret
xor
arpl
dec
xor
inc
pcmpgtw
push
cmp
cmpsb
mov
xchg
sub
push
push
inc
leave
mov
jle
mov
adc
fldln2
icebp
jns
stos
jb
sbb
sarb
mov
mov
shll
inc
jo
push
or
mov
fwait
cmp
sti
inc
add
mov
xchg
add
push
sahf
loopne
decb
int3
jmp
mov
jp
sbb
push
divl
fs
adc
add
mov
dec
or
add
mov
imul
ljmp
inc
jb
subb
aam
rcll
iret
jo
popf
xchg
adc
les
inc
pop
mov
cmp
sbb
and
popa
add
out
repz
adc
daa
inc
jns
ljmp
popa
and
or
push
call
xchg
adc
push
adc
inc
sub
loope
push
inc
lret
pop
mov
inc
mov
cmp
lret
out
sub
jl
jmp
add
sbb
and
add
je
das
cmp
add
push
xlat
add
push
roll
adc
adc
or
mov
xor
lea
ljmp
dec
call
movsl
fldenv
lock
xchg
and
jecxz
jae
cmpsl
cmp
ds
in
sbb
pop
dec
out
in
jle
sbb
loop
mov
add
das
xorl
and
push
xchg
jb
scas
xchg
add
adc
cmp
std
flds
dec
sbb
fstps
push
or
bound
push
int
sbb
mov
sbb
inc
or
lcall
add
sbb
sub
call
nop
push
loope
xor
fidivrl
popf
orb
jl
xchg
ret
test
test
mov
xchg
dec
and
mov
xor
or
mov
push
aam
bound
out
xchg
mov
lea
sbb
jmp
fwait
mov
in
addr16
mov
xchg
test
repz
int3
inc
lcall
lret
cmp
push
outsb
scas
push
mov
cmp
xchg
dec
call
add
xor
ljmp
xchg
es
or
sbbb
mov
or
rclb
pusha
and
push
inc
add
addr16
push
adc
push
push
mov
jo
xchg
je
fistps
popa
fists
jb
adc
or
sbb
jns
xadd
sbb
mov
cld
cli
sub
push
add
mov
push
mov
stos
or
xor
shlb
popf
push
rorb
pop
xchg
cmpl
in
shrl
cld
add
inc
push
adc
popf
lds
or
repz
sbb
fistl
or
loope
lret
mov
mov
addl
nop
dec
jge
cmp
mov
aas
pusha
cmpsb
ficoms
pusha
pop
inc
push
dec
lret
xchg
adc
dec
xchg
xor
fidivs
cs
or
sub
js
jl
or
fstpl
or
push
hlt
pop
in
lea
loope
sub
ljmp
jmp
or
movb
mov
rol
push
test
js
and
push
insb
adc
in
mov
xorb
mov
add
pop
mov
mov
sarl
sbb
dec
call
and
or
add
inc
fldl
xchg
add
adcb
imul
in
or
mov
jg
rclb
ret
lea
cmp
jbe
mov
jl
pop
es
push
mov
imul
mov
sub
dec
lret
dec
int3
mov
push
cmp
cmp
imul
mov
cmp
pop
mov
and
mov
sub
push
out
mov
ja
test
int3
lods
xor
adc
or
adc
mov
fldl
sarl
inc
orb
loopne
std
sahf
xchg
rorl
cld
sbb
fsts
mov
xor
insb
fnsave
scas
ret
xor
add
test
testl
scas
push
arpl
pop
callw
outsl
popa
xchg
fs
lock
xorl
add
addb
inc
mov
aas
movsb
fdivrs
fildll
add
sbb
and
add
inc
adc
xchg
mov
xlat
jbe
insl
movsl
jbe
and
push
in
pop
cmp
sbb
mov
or
xlat
pushfw
mov
outsl
cli
ret
add
mov
add
or
and
push
insb
in
incb
arpl
mov
pop
mov
mov
mov
xchg
xchg
cmc
mov
testl
out
loopne
sub
cli
insl
sub
bound
roll
ret
mov
adc
and
jae
xor
sbb
or
inc
pop
pop
or
jae
jnp
stc
dec
mov
push
mov
pusha
and
icebp
inc
aad
inc
inc
add
inc
out
add
mov
das
ss
sbb
pusha
xchg
rcrl
cmp
or
pop
repnz
in
inc
jno
add
push
mov
jecxz
mov
add
fisubl
popf
dec
mov
enter
fstpt
test
mov
and
or
sbb
pop
insl
aad
xchg
scas
hlt
add
cmp
dec
and
addr16
mov
pop
push
add
jns
bswap
push
bound
movsb
push
arpl
fbstp
pop
push
gs
inc
xchg
push
cmp
or
or
add
pusha
xor
inc
mov
add
xchg
pushf
lea
sub
mov
loope
ror
cmp
popf
repz
or
mov
rcll
dec
hlt
add
daa
lock
js
adc
notb
push
test
cli
push
mov
pop
push
xlat
add
daa
rclb
sub
jne
pop
push
repnz
pop
je
ja
cmp
inc
mov
movsl
lds
push
ret
sbb
jl
mov
cmp
or
aas
and
shlb
xor
insb
shll
pushf
fidivrs
add
xchg
fdivrl
loopne
mov
adc
andl
loopne
add
dec
jne
add
xchg
and
add
sub
jne
pop
loope
push
add
lds
jp
loopne
jge
orb
mov
fdivs
sub
pop
add
xchg
mov
cmp
dec
faddl
fidivl
xor
pop
pop
mov
push
or
pop
push
cltd
mov
cmp
push
sbb
hlt
sub
cld
jmp
sbbl
add
push
cmp
cld
push
xlat
sbb
pop
imul
adc
or
sbb
pop
xor
stc
jno
jmp
jno
mov
xor
rcrb
jno
call
mov
jne
push
scas
or
add
shll
mov
add
push
jle
test
imul
jno
or
scas
or
sub
dec
cwtl
xchg
dec
adc
rorb
jns
jo
idivb
push
lea
pop
mov
add
push
fs
and
adc
jge
inc
and
add
cmp
push
add
sub
mov
stos
out
dec
push
fcmovu
pop
sub
sbb
and
push
lods
in
xor
sub
fsubrl
mov
dec
int3
sub
jl
mov
xor
outsb
push
mov
jge
hlt
shlb
loopne
je
fsts
aas
aam
xchg
flds
sbb
das
enter
mov
das
pop
xor
jns,pn
icebp
mov
sub
dec
inc
cmp
xor
imul
push
rorb
xor
or
push
xchg
xor
push
pop
lret
xor
sub
adc
pop
insl
fdivr
shlb
add
loopne
negl
faddl
enter
lock
popf
call
test
push
mov
mov
aad
sahf
lods
lock
add
xor
add
cwtl
jo
or
add
mov
je
sub
lods
adc
and
xchg
add
inc
jl
clc
fstp
fwait
mov
push
sbb
insb
add
ja
mov
sbb
shrb
insl
loop
xor
pushf
inc
lea
sbb
fcompl
cmp
sbb
mov
incl
push
movsl
js
push
or
jo
sub
lds
lods
cmp
lock
xchg
into
ret
insb
rolb
pusha
sbb
or
repnz
fdivs
pusha
inc
notb
or
xchg
gs
fsubs
aam
add
je
test
cmovnp
jbe
mov
add
mov
jnp
ret
xchg
or
and
jae
fisttpl
rclb
lea
add
scas
int3
adc
sub
jg
sub
push
sub
dec
pop
das
unpcklps
xchg
int3
push
push
pop
jmp
je
xchg
jbe
and
movsb
push
es
push
pushw
sub
add
rcrb
ljmp
test
adc
add
xor
jne
xchg
clc
in
push
xlat
pusha
cmpb
pop
push
mov
mov
cmp
cmp
fsubl
cli
mov
stos
push
outsl
fstl
mov
enter
jg
rorb
mov
sub
mov
pop
gs
pop
movsb
and
or
sbb
or
sub
lret
ds
inc
cld
addb
cld
xchg
mov
fwait
xor
and
hlt
sub
push
arpl
push
loopne
es
js
mov
pop
jb
push
push
jno
dec
xchg
push
jbe
mov
add
or
pop
sub
sbb
adc
nop
pop
jb
outsb
push
mov
mov
fnstenv
add
test
add
push
inc
or
stos
rclb
or
faddp
bound
or
aas
cmp
clc
out
or
pop
dec
ror
cmp
or
dec
push
push
ret
xchg
das
outsb
or
xchg
mov
sbb
repnz
cmc
cmp
push
mov
sbbb
push
pop
add
int3
push
inc
inc
ret
xchg
mov
mov
cltd
xchg
cmp
dec
sub
push
add
push
fisttps
sbb
call
fst
mov
lcall
ret
shll
sub
faddp
inc
arpl
push
and
add
adc
mov
out
pop
lods
xchg
push
nop
pop
add
ret
dec
pop
push
and
lock
adc
add
shlb
data16
cmpsl
cmp
cmpb
addr16
jmp
jnp
sahf
dec
push
push
ja
push
arpl
pop
cmp
into
mov
dec
loope
clc
je
push
popl
ds
push
loopne
adc
decl
push
add
adc
push
inc
push
repz
out
push
cmovb
imul
xor
cwtl
lcall
fisttpl
push
dec
lret
cmp
jl
cmp
dec
hlt
int3
xor
inc
mov
hlt
icebp
sub
push
jle
cltd
push
add
jne
mov
int3
negl
push
add
shrb
add
push
arpl
out
scas
adc
dec
test
out
xor
cmp
out
lcall
pushw
push
into
jae
mov
fistpll
jo
xor
add
fstps
and
push
or
jmp
pop
push
jns
bound
in
pop
adc
xor
lahf
in
xor
arpl
fldcw
fisttps
shlb
out
push
dec
or
in
out
xor
sbb
lods
daa
xchg
or
adc
sub
or
outsb
cli
enter
xchg
inc
or
lds
loope
ret
xchg
mov
cmp
loopne
pop
cmp
ja
pop
add
push
je
loope
xchg
and
les
mov
mov
add
pop
faddl
push
add
or
out
pop
cmpb
jl
mov
rolb
jbe
cmp
fadds
cmp
aaa
or
pop
sub
mov
mov
jb
neg
cwtl
mov
jg
cmp
pop
pop
lock
test
mov
bound
sub
addl
sub
arpl
in
mov
adc
nop
filds
imul
test
xchg
lock
adc
mov
flds
andb
and
insb
jl
imul
xor
xchg
sub
sub
dec
jno
jl
jmp
pop
and
leave
add
dec
decb
data16
and
mov
fisttpll
push
stos
sub
xor
adc
push
cmpb
test
push
or
cmp
rcrl
ret
into
mov
or
mov
inc
adc
in
loop
xor
xchg
xlat
div
pushf
mov
decb
inc
fadds
jne
loop
aas
mov
cmp
jmp
std
stos
pop
jl
add
sbb
shlb
jmp
mov
ret
sbb
push
jno
cmp
push
inc
cmp
jae
pop
mov
adcl
inc
and
add
out
pop
pop
inc
xchg
ret
cmpl
cmp
mov
and
ja
js
aaa
cld
fcmovnb
cmp
mov
inc
shl
jmp
push
outsb
pop
mov
sub
ljmp
sub
add
pop
sub
fistl
lret
xor
cmovs
jle
push
jae
fstpt
add
jl
inc
adc
inc
testb
or
dec
or
test
clc
testb
inc
sbb
dec
and
aad
sbb
add
sbb
xchg
adc
adc
hlt
insl
aad
push
push
or
dec
sub
xchg
push
fimuls
addr16
test
fwait
or
cmpb
nop
lret
mov
sahf
movl
push
xchg
and
cmp
out
fiaddl
xchg
add
push
or
cmpsb
lea
push
mov
cmp
je
mov
jo
push
sub
lret
loop
mov
xor
je
sarb
add
ret
and
push
adc
pusha
push
jo
pop
lcall
push
jl
ss
xchg
xchg
xor
jnp
push
int3
sub
mov
dec
lahf
add
push
clc
movsl
jg
xor
sbb
inc
push
adcb
dec
adc
dec
imul
pop
ret
movb
incl
push
sbb
pusha
inc
jp
in
insl
popa
mov
add
jne
push
fistl
ds
mov
neg
sbbl
add
out
lock
cli
jp
or
adc
hlt
js
jne
test
and
push
aam
push
je
inc
jmp
pop
mov
or
int
in
daa
add
enter
mov
add
inc
insb
sbb
mov
add
and
loop
xchg
sbb
ret
jecxz
adcb
sbb
or
andl
nop
aad
cmpsl
movsl
xchg
iret
ret
sbb
jmp
sub
and
dec
inc
outsb
test
repz
jne
andl
jnp
mov
dec
sub
mov
jne
movsl
nop
adc
sbb
lcall
fwait
cmpsl
mov
insb
mov
rorb
lock
stc
and
add
movl
or
and
xchg
push
or
mov
add
movsb
pop
inc
adc
imulb
pop
pop
mov
popf
mov
cmp
xor
cmp
pusha
mov
dec
jmp
imul
inc
push
adc
mov
mov
or
mov
mov
inc
add
lds
inc
inc
adc
push
add
push
jnp
xchg
push
inc
pop
jg
pop
aas
adc
adc
or
adc
pop
xchg
pop
sub
cmp
push
stc
push
je
jo
dec
in
nop
inc
push
fildl
cmp
sub
pop
or
dec
and
push
push
mov
ret
cmp
jp
cld
loopne
mov
loop
insb
or
test
pop
loop
test
lea
adc
loopne
cmp
js
test
sbb
push
ljmp
std
xchg
je
orl
push
jb
test
dec
rcll
or
je
decb
lea
mov
or
xor
jo
das
jg
pop
cmpsb
add
insb
pusha
jne
test
insb
xchg
push
pushf
push
dec
jnp
js
das
repnz
pop
gs
popf
dec
jne
mov
rolb
cmp
addl
mov
andb
sub
int
outsb
nop
xor
ret
inc
mov
or
rcrl
repz
inc
sub
stos
and
cmc
adc
test
inc
cld
lea
xchg
loopne
ffree
and
push
test
shlb
inc
js
loopne
mov
xor
push
and
jo
jecxz
mov
and
subl
jns
cli
adc
mov
sbb
cmp
icebp
aam
jbe
push
pusha
jne
pop
ret
pop
repz
imul
cmovge
pop
sub
or
mov
sub
lea
xor
inc
addl
cmc
enter
xor
and
adc
ret
jb
push
push
xchg
mov
in
notb
insb
xor
jecxz
mov
sub
push
mov
shrl
adc
bswap
lea
cs
cmp
loopne
cmp
ljmp
dec
iret
in
push
fmuls
mov
mov
adc
xor
js
sbb
daa
sub
into
dec
add
cmp
add
and
sbb
pushl
sbb
adc
xor
test
frstor
je
push
mov
pop
icebp
or
aam
in
or
sbb
xor
aaa
push
sahf
js
push
inc
jo
loopne
dec
push
and
mov
cltd
popf
add
repnz
popf
add
lea
push
cs
add
cltd
adc
cmp
xchg
insl
aaa
cs
inc
xorb
mov
incb
pop
cmp
jns
jns
rolb
push
push
ret
loopne
inc
or
cltd
push
andb
sub
cmpl
and
adc
lea
sbb
pop
pusha
cmc
push
leave
xchg
ret
ret
mov
push
cmp
lock
aas
push
push
pop
lcall
sbb
in
push
push
cmp
sarl
xchg
and
daa
popf
cmp
sbb
test
addr16
shrb
dec
popf
or
ds
fdivr
faddp
xchg
xchg
aad
mov
sbb
ret
or
pop
or
push
lock
adc
sub
shlb
pop
aad
mov
pop
pop
sub
jl
push
and
add
and
std
mov
cmpsl
and
andb
xor
ret
dec
adc
xchg
inc
or
mov
jbe
mov
jmp
add
lahf
adc
pop
pavgb
call
jb
movsl
aaa
das
pushl
mov
rcrl
adc
fistl
adc
add
push
sub
sbb
loop
dec
fadds
inc
adc
sbb
or
roll
sahf
or
int
je
call
cmp
xchg
mov
fiaddl
mov
lock
int
and
addr16
xchg
xchg
fnstenv
pop
add
ficompl
push
in
call
sbbl
call
into
sarl
pop
sti
mov
dec
test
je
sub
clc
js
es
lea
loop
in
aaa
ss
enter
leave
push
mov
lea
and
cwtl
js
mov
pop
or
jne
adc
pop
push
test
mov
hlt
add
push
imul
jns
push
jo
shl
fisubrs
pushl
lret
adc
mov
or
jno
xchg
add
cli
mov
movsl
xlat
mov
fsubrl
mov
jmp
pop
jne
stos
xor
bound
sub
lea
sbb
inc
shr
cmp
das
pusha
jo
inc
insb
pop
pusha
xchg
push
pop
outsl
cmpb
or
fsubp
test
movb
mov
mov
inc
mov
inc
pop
adc
jl
shrl
test
shll
or
or
mov
std
loope
test
xchg
jecxz
push
in
movsb
sbb
or
push
cmpsb
in
xor
or
dec
adc
or
mull
mov
or
int3
push
adc
adc
jmp
mov
dec
dec
adc
jnp
jo
sub
outsl
push
outsb
xlat
ljmp
hlt
or
push
dec
shlb
add
insl
loope
stc
ficompl
push
lea
jl
jb
pop
push
stos
lea
push
cmp
movsl
sbb
aam
ljmp
and
mov
add
mov
sub
daa
test
inc
out
add
xchg
jne
jle
xchg
xchg
rcrb
and
adc
ss
add
xor
or
push
fucom
cmp
mov
inc
push
enter
fwait
pop
in
daa
test
les
jne
enter
lods
and
sbb
popf
push
xlat
lock
rcrb
mov
daa
in
add
add
xchg
push
or
adc
cmpsb
pop
neg
test
arpl
loopne
sbb
mov
xchg
in
cmp
push
or
cmp
lea
sbb
xor
stc
int3
inc
push
push
mov
clc
insb
cmpsl
fs
enter
xor
insl
and
and
fnstenv
mov
xchg
test
or
bound
xor
lods
es
iret
mov
xchg
enter
nop
mov
aam
vpcmpeqd
jno
mov
xor
push
cmp
inc
fdivs
test
xor
jmp
ror
mov
cmpb
je
je
mov
ds
sbb
or
out
jnp
orl
push
push
shlb
ljmp
sub
or
push
inc
pop
cmp
dec
push
cmp
jne
cmc
stc
xor
clc
pop
call
adc
or
dec
out
xor
add
aas
test
or
adc
push
mov
pop
or
loop
inc
add
xchg
mov
aad
icebp
add
jl
insb
mov
andl
and
inc
lds
pop
push
pop
push
or
push
jle
pop
ret
out
lods
lods
sbbl
gs
push
add
and
cld
xchg
jle
cmp
jae
sbb
mov
fsubr
aam
out
cmp
sbb
jne
push
mov
adc
pop
test
pop
ds
dec
or
out
add
dec
xchg
pop
test
ljmp
mov
daa
mov
loopne
rclb
cmpsb
push
mov
insb
push
push
push
iret
cmpsb
or
pop
cmp
insb
mov
pushf
adc
push
push
or
push
das
or
inc
dec
mov
push
sbb
xchg
adc
pop
imul
mov
sub
pop
push
into
movsl
and
inc
adc
cwtl
fnstcw
das
pop
xchg
popa
adc
and
mov
lods
stos
fs
push
mov
and
xor
mov
and
cmpsl
adc
xor
and
leave
and
and
cmpsl
and
or
and
orl
xor
scas
sub
mov
test
lods
scas
sahf
add
xorb
dec
inc
push
inc
dec
cmp
pushf
les
decl
fsubs
orb
jae
add
pop
out
les
xchg
mov
pop
inc
imul
sbb
or
cmp
popa
leave
and
mov
test
or
data16
inc
repz
repnz
sbb
jecxz
rolb
push
pop
lea
stos
out
rorb
mov
mov
mov
add
dec
add
insl
and
sub
sub
mov
jns
push
movsb
ret
mov
pop
and
push
mov
clc
scas
pop
xchg
xlat
dec
in
jno
lea
lea
mov
and
adc
mov
bound
pushf
imul
mov
push
out
or
fimuls
mov
sbb
inc
jnp
xor
pop
leave
and
rcr
mov
in
aam
dec
mov
test
lahf
and
cmp
push
andl
scas
sarb
mov
pushf
push
xchg
shl
cmp
pusha
fadd
mov
jbe
lock
stc
jo
jno
lods
xorb
dec
mov
test
std
add
pop
dec
jae
add
paddusb
mov
aaa
js
std
mov
mov
je
lods
call
pop
pop
or
adcb
or
cs
adc
loop
xor
in
mov
ret
mov
inc
pop
mov
pop
xchg
and
popa
add
sbb
test
or
jg
je
mov
nop
movsb
pusha
dec
ret
imul
test
pop
sbb
mov
rolb
rcrb
rolb
dec
xlat
loope
ja
scas
sub
popf
jb
sbb
mov
fildl
sub
mov
xchg
jp
or
add
and
inc
adc
mov
divl
fbld
push
sbb
inc
in
inc
mov
jmp
imul
jae
add
add
in
and
add
in
cmp
lea
mov
out
sbb
mov
or
ja
jmp
aad
out
pop
test
inc
rcl
aam
aad
sbb
rolb
mov
xchg
add
push
test
lcall
push
je
dec
jne
push
push
inc
cmp
inc
insb
out
mov
xchg
shr
and
cmc
or
pop
mov
pop
sbb
xchg
add
rcl
nop
lahf
test
stc
sub
int3
js
sub
je
dec
nop
lea
xchg
in
xchg
dec
cmp
mov
xchg
les
test
jge
roll
inc
loopne
cld
xor
push
pushf
pop
xchg
daa
xor
xchg
cltd
sbb
mov
mov
lea
cmp
jb
adc
or
loope
add
cmp
pusha
jge
cmp
add
ja
xchg
ss
pop
sub
je
mov
xchg
cmc
push
loopne
push
data16
mov
fmuls
cmpps
and
sbb
xchg
jge
in
sbb
sbb
ss
insb
clc
mov
aas
mov
push
inc
imul
mov
loope
push
sbb
les
ja
je
dec
test
stos
lods
pop
adc
pop
jo
frstor
cmp
testb
sbb
psubsw
cld
scas
xor
ds
je
pop
lock
add
mov
inc
in
mov
pop
pop
jg
popa
aam
and
sub
add
lock
or
xorl
cld
orl
test
push
enter
jo
popa
lea
xchg
jno
mov
push
iret
add
pop
dec
xchg
dec
mov
ss
lods
push
lods
adc
xchg
ret
xchg
aaa
push
inc
add
cld
fcmovnbe
cmpsl
lods
mov
jmp
cmp
je
aaa
js
popa
dec
add
shll
and
adc
lcall
ret
add
xchg
adc
pop
sbb
dec
xchg
jmp
add
call
jo
out
pusha
and
xor
mov
fs
popa
add
fwait
sbb
cltd
in
push
pusha
incl
inc
add
in
inc
roll
adc
mov
and
jmp
push
mov
jne
lret
cli
push
bound
push
test
sarl
fcoml
insl
psrad
pop
adc
adc
aaa
movsb
and
lret
popa
call
sbb
fldt
fistl
or
cltd
jbe
les
mov
dec
mov
arpl
jl
inc
jbe
add
movl
int
test
add
inc
adc
push
and
sub
add
popf
test
xchg
mov
dec
push
imul
imul
push
and
pop
cmpl
testb
adc
mov
test
jg
mov
mov
ja
jge
js
mov
shrb
adc
fdivrs
mov
roll
mov
sbb
dec
add
imul
inc
ret
rcll
and
mov
popf
and
loope
pop
mov
mov
push
js
jo
enter
insb
mov
scas
nop
les
mov
adc
push
and
dec
mov
shll
in
mov
add
imul
or
dec
andb
sbb
cmp
in
mov
jae
inc
ja
daa
ffreep
add
pusha
ficoms
ds
cmp
xchg
mov
sbb
push
dec
jmp
popf
inc
jg
aaa
mov
inc
cmp
cmpb
je
push
mov
mov
mov
andl
imul
sub
sub
mov
imul
adc
or
or
cmc
addl
xchg
jbe
push
push
mov
lret
inc
je
ret
sarl
clc
or
std
xchg
mulb
xor
mov
jae
lret
js
movsl
aas
adc
test
shr
push
sub
push
add
jle
push
jge
mov
addl
enter
dec
rsm
roll
mov
das
jl
push
xchg
shrb
cmp
data16
outsb
fistpl
adc
push
mov
sbb
out
test
cmpsb
mov
cmpsb
ss
outsb
inc
pop
subl
int
flds
iret
sbb
mov
insb
test
dec
je
mov
std
aaa
push
sbb
add
inc
dec
mov
jns
mov
test
cmp
add
inc
dec
xor
aam
mov
jmp
cli
dec
inc
or
mov
push
cwtl
sbb
pop
push
test
cld
inc
jbe
dec
inc
iret
lea
loopne
icebp
push
sub
jge
adc
aas
add
jle
fucomip
dec
inc
sbb
cld
pop
adc
add
jno
shlb
push
outsl
ja
add
pushf
xlat
pop
pop
mov
cmp
mov
dec
cmp
cmp
mov
pop
lds
sbb
mov
into
mov
adc
dec
daa
das
ljmp
test
push
in
push
mov
fadd
movl
hlt
and
movsl
insl
mov
lock
dec
cwtl
pop
inc
pop
subb
jnp
les
or
inc
enter
cmp
fcoms
push
pushf
push
or
fst
aas
lahf
filds
dec
es
xchg
dec
xchg
insb
cmp
pop
rcll
lods
mov
and
pop
adc
mov
xchg
push
out
aad
mov
jge
cmp
je
and
addl
mov
sbb
stc
lgdtl
pop
mov
pop
sbb
add
cmp
and
jl
in
jl
fwait
pushf
sbb
lds
leave
xchg
xor
sbb
add
mov
add
jecxz
inc
fidivrs
jb
and
imul
adc
je
or
adc
jmp
sbb
subl
addb
and
add
add
add
or
dec
mov
mov
mov
and
or
in
fstps
push
adc
in
or
dec
jb
in
pop
add
sti
inc
sub
jo
cwtl
xchg
aas
movl
xchg
mov
pop
mov
xchg
and
push
jl
push
xor
push
bound
sbb
out
adc
pop
cmpsb
subl
jo
dec
sbb
and
pop
imulb
imul
inc
cmp
and
and
aad
and
push
sub
xchg
push
push
xor
sub
mov
or
jno
push
loopne
nop
pusha
mov
dec
fcmovnbe
jo
pop
sub
xor
mov
lea
or
aaa
sub
mov
push
inc
pop
cld
jecxz
xchg
xchg
cltd
adcl
out
and
iret
inc
xchg
andl
and
or
out
leave
or
lds
imul
push
out
xor
imul
cmp
enter
xor
cmp
fmull
or
popf
pop
popf
sub
adc
sbb
push
sub
sbb
inc
aaa
ss
xor
jl
dec
cmp
je
jae
push
cmp
inc
pop
gs
int3
jno
jno
push
stos
scas
push
stos
adc
out
je
cwtl
adc
arpl
dec
xchg
enter
sub
pop
fnstsw
subl
outsl
jl
mov
jne
lea
orb
shrb
mov
nop
inc
mov
divl
or
icebp
adc
add
push
jmp
and
lods
je
pop
sub
or
rorb
cmp
faddp
scas
roll
and
std
sub
jb
and
add
or
inc
xor
aam
and
mov
sbb
sub
jae
iret
test
dec
add
popf
daa
mov
dec
jge
xlat
cli
pop
inc
push
and
outsb
push
dec
jae
adc
jmp
sbb
ret
out
inc
test
cmc
jbe
adc
ja
hlt
mov
mov
push
loopne
push
sub
lahf
adc
pop
cmovle
fldcw
adc
loope
or
add
daa
call
mov
nop
mov
test
ljmp
ret
mov
cmpl
push
fstl
mov
and
sub
hlt
xchg
shll
clc
insb
test
pop
mov
rcl
adc
xchg
xchg
xchg
cmp
or
xchg
xor
sbb
cmp
insb
sub
imulb
lcall
jmp
dec
push
es
dec
or
sub
or
cmpsb
js
jl
inc
je
ret
mov
push
mov
stc
lea
les
fdivs
add
loopne
ret
push
test
inc
les
sbb
iret
mov
dec
and
int3
shrl
mov
add
idivl
mov
mull
pop
sub
pop
cmpsb
push
and
sbb
in
fadds
pop
daa
in
cmp
sbb
xchg
cwtl
cmp
sub
xchg
in
divb
mov
pop
mov
adc
or
xchg
adc
roll
jmp
loopne
pop
push
pop
xchg
insl
fistl
jge
lea
stos
push
je
cmp
xor
pop
in
mov
xlat
push
push
cmpsb
or
cmpsl
ss
and
mov
push
shrl
jae
sub
jle
hlt
cs
mov
mov
push
and
push
xor
aam
mov
lcall
sarl
sub
push
cmp
mov
iret
imul
sbb
into
pop
push
xchg
std
das
inc
or
das
lds
sahf
push
push
sbb
inc
inc
out
ja
sbb
dec
mov
pop
fs
pop
lret
inc
pop
sbb
push
sbb
pop
dec
pop
xchg
inc
push
and
clc
push
and
jb
push
and
and
mov
xor
pusha
leave
and
leave
and
sbb
inc
push
jne
sbb
movsb
enter
and
mov
dec
lds
add
or
sub
daa
mov
sub
daa
insb
or
stos
stc
test
in
lret
xor
sub
and
nop
mov
and
cmp
pop
sub
push
push
mov
sub
scas
lods
xor
data16
adc
aaa
arpl
and
outsl
rcrl
push
ja
in
push
push
sbb
dec
adc
pop
jb
pop
enter
jae
filds
mov
inc
and
adc
orl
and
outsl
jle
dec
mov
int
mov
adc
xchg
sbb
push
push
or
mov
pop
or
loop
lcall
lcall
adc
and
dec
xor
add
add
add
loopne
adc
mov
out
nop
xchg
push
xchg
sub
add
adc
push
push
dec
in
mov
inc
mov
mov
les
push
loope
jecxz
hlt
push
out
dec
clc
js
push
in
pop
push
add
repz
pop
and
or
add
aaa
and
rcrb
sarb
push
pop
lock
fsubrs
lock
xor
adc
lock
mov
movsb
call
mov
or
sub
pop
into
loop
mov
add
inc
add
inc
sub
or
sbb
mov
inc
lcall
cmpsl
imul
outsb
xor
ret
jne
arpl
data16
sarl
mov
test
pusha
fdivs
push
hlt
sbb
sbb
add
scas
lock
cltd
push
pop
pop
push
pop
push
xor
gs
push
dec
adc
test
adc
xor
out
pop
inc
aaa
xor
aam
sub
inc
adc
les
and
push
push
push
icebp
or
and
es
loopne
ret
test
xchg
sti
jle
mov
jne,pn
orl
fisttps
je
inc
xlat
stos
mov
hlt
nop
ret
insb
xor
mov
je
mov
xor
add
mov
pop
cmp
push
dec
icebp
dec
sbb
add
xor
call
mov
xchg
inc
add
sbb
add
ja
int3
inc
cmp
jmp
xor
shld
mov
int
rol
jg
lods
lcall
jnp
cmp
cmc
adc
cmpsb
sbb
clc
push
in
movsb
jb
ss
or
inc
sub
or
xchg
pop
cmpsl
aad
shlb
enter
push
les
xlat
xchg
cmp
mov
cmp
lock
fsubr
or
xor
add
subb
and
inc
jo
push
pushl
or
lahf
icebp
and
icebp
add
fdivs
push
cmpb
in
and
ljmp
push
pop
inc
enter
push
repnz
add
xor
mov
fwait
les
outsb
add
and
lret
mov
sub
adc
sarl
and
jnp
inc
jne
push
loopne
add
mov
jge
mov
and
je
mov
imul
pop
add
add
aaa
mov
add
rorb
inc
push
push
call
andl
adc
movl
push
sbb
pop
jp
call
addr16
dec
and
imull
push
push
lea
movsb
mov
aad
adc
inc
sbb
daa
xchg
stos
mov
rolb
push
mov
scas
pusha
push
test
sbb
sub
adc
imul
lret
sbb
cltd
test
jae
jle
add
int3
sbb
jecxz
and
adc
push
cmp
daa
incb
mov
push
xor
sahf
dec
cmp
add
push
lods
dec
ds
or
and
adc
mov
cltd
cli
and
inc
jnp
dec
inc
inc
in
clc
cmpsb
imul
dec
or
cmpl
fucom
call
inc
jmp
mov
roll
sub
sub
pop
aaa
xor
adc
cmp
mov
pop
fistl
sbbl
jmp
sub
xchg
push
cmp
or
leave
push
sbb
loop
dec
sbb
or
add
xchg
nop
stos
add
dec
inc
stos
mov
pop
inc
fmul
and
mov
dec
jae
and
loop
dec
mov
sbb
sbb
insb
mov
aam
pusha
es
fs
xchg
nop
in
call
pop
out
push
insb
cmp
add
add
mov
push
test
or
mov
xorb
add
cmp
dec
jle
ss
add
mov
test
xchg
shlb
or
loope
sub
rol
cmp
in
inc
inc
or
adc
fsub
cmp
jle
cld
jae
inc
add
outsb
push
cmp
addb
call
mov
cmp
xor
jo
or
pusha
pusha
ret
jmp
inc
xor
icebp
xchg
scas
fnstcw
pop
mov
lret
sbb
cltd
add
or
add
jmp
in
pop
rclb
push
sbb
dec
jno
and
daa
stc
in
add
adc
in
shrb
dec
sbb
sub
add
mov
les
sbb
pushf
gs
and
out
push
loopne
movups
pop
push
pop
jmp
xchg
lret
stc
inc
inc
es
mov
and
dec
add
lea
mov
add
jle
call
cwtl
movl
jp
push
cmpsb
add
mov
mov
xchg
outsl
sub
outsl
dec
and
xchg
xchg
or
sbb
inc
push
pop
or
add
sbb
adc
lret
sti
test
adc
jmp
scas
ficoms
scas
lock
cltd
jo
scas
lds
movsl
add
jecxz
es
push
movl
cld
faddl
inc
push
dec
andl
dec
imul
adc
xor
rorl
push
mov
mov
js
dec
dec
out
adc
pop
adc
or
or
add
add
int
fcmovb
cld
add
dec
aaa
adc
push
jl
sbb
ret
xchg
jbe
cltd
jne
inc
push
adc
lretw
nop
cmp
sub
sarb
inc
sub
add
xchg
mov
mov
jno
fdivrs
push
sbb
in
xor
inc
test
mov
xchg
inc
inc
mov
fs
xchg
pop
and
push
add
pusha
rcll
inc
lea
mov
inc
xchg
xchg
ja
sub
call
adc
imul
mov
imul
sub
sub
adcb
dec
sbb
insl
daa
adc
pop
push
std
sbb
enter
test
push
mov
mov
stos
mov
loop
and
mov
loopne
rclb
nop
dec
xchg
cmp
out
mov
jae
pop
push
push
xor
fcmovnb
push
test
push
daa
push
stos
orl
sbb
xchg
stos
sub
call
scas
je
sahf
incl
sbb
xchg
push
sbb
lds
iret
leave
push
fsubl
sub
cmovb
rorl
dec
cmp
xor
test
xor
loope
dec
imul
nop
inc
pop
or
or
inc
movsl
adc
mov
lahf
xor
in
or
push
sub
stc
test
add
dec
dec
dec
xor
add
std
sub
dec
insb
push
icebp
pop
pop
mov
sbb
hlt
add
pop
call
xchg
mov
mov
pop
push
enter
loop
call
xor
data16
insb
jge
inc
ds
mov
xor
mov
lret
dec
subl
das
rclb
aas
fistpll
fistpll
aad
cltd
xor
sub
fadd
cmp
pop
adc
pop
adc
sub
pop
adcb
add
dec
jmp
push
lea
sbb
and
push
adc
shll
fists
mov
cmp
fidivrl
aaa
sbb
push
inc
mov
push
fldenv
or
cltd
push
adc
push
inc
xchg
mov
mov
push
push
adc
test
test
mov
mov
adc
or
xor
fiadds
cmp
jmp
enter
add
adc
loopne
ret
sub
imul
je
pop
inc
push
push
jnp
dec
inc
mov
pushf
xor
cwtl
cmpsl
dec
push
xor
jle
lret
sbbb
inc
or
mov
dec
sbb
xor
movl
outsb
mov
add
imul
xchg
in
jmp
inc
push
mov
add
push
mov
xor
or
dec
inc
lcall
dec
add
xchg
add
xchg
in
ret
push
dec
push
add
sub
pop
cmp
xor
test
xor
xor
jo
fwait
or
fnstenv
mov
and
js
insl
fidivl
je
or
xchg
outsl
movsl
cmp
or
push
movl
cwtl
or
add
or
push
out
jle
mov
adc
movsb
xor
loop
arpl
xor
stos
push
sub
movb
bound
jns
and
and
jo
jp
sbb
and
add
jmp
xchg
adc
cwtl
push
and
movl
imul
and
mov
fdivs
mov
lcall
push
sbb
mov
inc
jo
lods
repnz
push
and
and
mov
or
cmova
test
dec
dec
sub
xchg
xchg
dec
add
xchg
xchg
inc
add
push
xor
jbe
or
cmp
push
inc
and
or
mov
aam
loopne
sbb
lock
stos
inc
mov
test
sub
call
inc
insl
repz
stos
sbb
rorb
add
mov
popf
jno
inc
xchg
inc
push
sub
push
add
mov
pusha
inc
test
mov
clc
mov
scas
or
add
and
or
mov
dec
jmp
enter
xchg
bound
xchg
dec
mov
cld
or
add
xchg
and
dec
add
or
in
or
pop
mov
cmpsb
mov
movb
js
xor
mov
sbb
add
xchg
shlb
pop
testb
shrd
push
fsincos
add
out
mov
mov
jge
add
mov
pop
pop
push
mov
mov
cmp
adc
test
mov
mov
xchg
enter
pop
inc
cmp
jmp
xor
mov
into
shlb
xor
pop
cwtl
sub
add
dec
cmp
push
lret
rclb
add
cmp
xor
in
imul
shrl
push
ret
sbb
sbb
mov
out
push
push
xor
imul
and
mov
mov
sbb
sub
add
fnstcw
sub
xor
and
notb
mov
adc
push
adc
addb
movsl
add
test
fsubrp
push
js
popa
add
movsbw
or
cmp
jne
and
outsb
mov
or
je
adc
fwait
dec
testl
arpl
push
jae
adc
cs
cmp
dec
inc
fldpi
mov
hlt
push
inc
mov
sbb
mov
mov
je
push
lret
pop
in
pop
js
je
lret
stos
pop
mov
insl
mov
mov
or
loope
sub
nop
mov
xor
xor
hlt
mov
inc
stc
lock
fwait
push
pop
xchg
cmp
ss
lods
repnz
insl
ret
imul
push
adc
mov
shrb
popf
movsl
mov
or
mov
iret
gs
aaa
popa
mov
fwait
and
dec
cmpsl
mov
push
jl
dec
sbb
cwtl
and
lock
add
xchg
pop
inc
or
add
and
test
adc
and
and
dec
faddl
out
loop
mov
call
xchg
jo
cmc
add
cs
cmp
jmp
loop
adc
mov
ret
mov
pop
rorb
and
inc
loope
sbb
test
and
imul
push
push
imul
push
and
or
sbbb
sbb
test
inc
cwtl
push
in
and
test
insb
fisubrs
scas
and
cmc
pop
mov
fidivl
sbb
xchg
das
push
and
and
int
and
or
xchg
mov
into
push
icebp
cmp
aam
repz
dec
sbb
inc
ret
dec
xor
sub
inc
push
mov
mov
mov
push
mov
shrb
inc
xor
cld
leave
daa
or
test
or
lret
andb
loop
push
lea
lret
rcrb
or
leave
mov
pop
cmp
cmp
xorb
ret
mov
dec
arpl
dec
cld
andb
f2xm1
enter
jae
dec
jne
mov
shrb
mov
mov
lock
dec
cld
cmpsb
in
lret
cmp
add
mov
js
sub
mov
mov
add
movl
or
hlt
mov
or
or
leave
mov
mov
mov
pop
fidivrs
xchg
sub
and
nop
fidivl
addb
loop
and
push
push
push
mov
sub
mov
inc
cmp
adc
ja
ret
xor
and
lods
inc
or
notl
sahf
and
or
dec
decb
sbb
adc
mov
movl
loop
cmp
inc
sbb
inc
dec
inc
pop
inc
pop
add
pop
cwtl
mov
inc
outsl
les
int3
shrb
add
sub
rol
sub
shrb
movsb
push
mov
xor
popf
clc
xchg
int
inc
js
sbb
mov
and
jge
add
fstl
adc
pop
bound
movsl
xchg
xchg
outsb
test
hlt
add
rcrl
or
xchg
or
add
inc
aas
mov
adc
push
and
sbb
sub
or
sahf
sub
sub
mov
add
sub
cld
jg
js
stc
dec
clc
push
add
push
push
push
push
adc
xchg
pop
pusha
das
popa
repnz
mov
pop
inc
add
icebp
jmp
or
insb
jne
mov
push
push
popa
shlb
not
ret
push
cmp
jne
mov
movlps
movsl
les
xchg
mov
inc
cmp
mov
mov
lods
dec
pusha
and
and
ss
cmp
dec
add
dec
pushf
popf
push
push
dec
xchg
nop
mov
push
ror
adc
mov
das
mov
jmp
movsl
or
and
jb
or
cld
jmp
push
sub
jb
js
add
in
movsl
cs
lahf
pushf
jmp
push
inc
cwtl
lcall
orl
hlt
adc
movsl
pushf
lea
inc
sub
add
mov
cld
mov
lods
fnstsw
mov
jecxz
or
cmp
mov
mov
jle
cmp
js
add
xor
cmp
jbe
pop
adc
loopne
enter
adc
cmp
mov
dec
in
lcall
loopne
adc
mov
inc
adc
iret
rol
lods
ss
cmp
jl
xchg
popa
cmc
xor
pushl
rorl
nop
ret
rorb
or
add
lret
testb
js
pop
movsb
ret
push
nop
add
stos
mov
rcrl
nop
scas
pop
das
xor
mov
enter
test
mov
jmp
adc
sbb
or
adc
push
mov
cmp
xchg
mov
test
push
push
sbb
leave
adc
and
rorb
addr16
push
mov
in
lahf
sarb
push
shll
adc
cmp
cmp
sbbb
mov
lcall
jo
or
jnp
add
bnd
adc
loop
nop
mov
inc
cmp
popf
xorb
loopne
cmp
lea
cwtl
pop
and
adc
dec
sub
push
loopne
subl
mov
icebp
popa
adc
xchg
mov
jmp
leave
or
loop
mov
loop
pop
push
dec
xchg
lea
mov
lds
push
adc
cltd
jmp
xchg
mov
pop
adc
ret
les
lea
mov
xor
enter
sub
or
dec
xor
les
add
mov
jge
mov
int3
mov
lods
clc
pop
mov
push
inc
add
mov
ljmp
mov
xchg
lock
icebp
dec
pusha
negl
dec
pop
pop
jmp
cmp
pusha
dec
dec
shlb
jmp
sub
ljmp
add
cmp
je
testw
int3
pop
push
pop
adc
dec
cld
mov
or
jmp
sbb
loope
cltd
je
push
push
jb
nop
mov
pop
mov
push
dec
insb
pop
into
test
push
mov
inc
jbe
cmp
pop
cmp
in
inc
dec
push
sbbl
loope
or
push
cmpsl
push
xor
cwtl
mov
xchg
xchg
push
pop
add
push
icebp
adc
andl
subl
sbb
adc
lods
gs
nop
lret
mov
scas
sub
push
xor
in
sbb
xlat
lcall
ret
fst
das
sub
pop
xchg
into
cs
aas
inc
xchg
xchg
into
jno
push
ror
pop
and
and
loopne
pusha
pop
shr
test
pop
push
loopne
add
push
inc
loopne
or
repnz
mov
mov
leave
xchg
ret
mov
or
fimull
in
fs
push
nop
fs
xchg
out
add
mov
sbb
xchg
inc
imul
adc
leave
cmpw
or
sbb
cmpb
mov
sbb
push
pop
add
ss
enter
push
testb
sar
popf
test
scas
fadd
push
je
test
addb
shlb
gs
push
adc
rol
add
adc
std
loop
dec
xchg
or
xchg
push
mov
inc
pop
int
cwtl
or
lock
dec
push
dec
push
xor
daa
mov
push
jl
sub
jmp
and
jp
lcall
dec
movzwl
cmpl
push
adc
rorl
push
sbb
inc
add
add
xchg
iret
inc
xchg
pop
sbb
add
pop
fidivrl
sbb
add
or
sub
lcall
or
cmp
fistps
or
pop
push
test
jns
xchg
ret
pop
pop
cmpsb
in
push
addb
setbe
xlat
pop
add
xchg
sbbb
and
pop
and
mov
and
cmp
jne
jb
fs
inc
cmp
dec
push
push
jle
cmp
add
pop
push
pop
data16
push
push
dec
xor
or
jo
inc
shl
imul
or
or
or
push
push
insl
pop
adc
sbb
mov
add
movsb
int
imul
leave
sbbl
icebp
jae
inc
add
out
inc
add
and
shlb
mov
je
sub
rcrl
icebp
movsl
push
insb
nop
pop
add
adc
movsb
pop
or
mov
stc
sbb
adcb
rcl
insl
popa
call
test
or
lock
test
inc
xor
sub
adc
js
rorl
or
mov
mov
mov
inc
iret
cmp
jns
mov
cwtl
inc
sub
add
jl
add
mov
mov
mov
sub
push
add
mov
jb
enter
pusha
sbb
shll
sbb
and
lret
and
adc
call
xchg
enter
sub
sbb
push
and
cmp
push
sub
jb
je
fiaddl
lock
pop
inc
or
mov
daa
mov
push
cmpl
pop
je
or
adc
add
push
and
jmp
mov
adc
ror
adc
xchg
xor
fsubrl
push
cmc
movsl
cmpsl
and
inc
dec
cmp
add
mov
push
fimull
inc
hlt
or
mov
dec
call
mov
out
sub
and
jne
imul
xor
push
adc
sbb
insb
lahf
push
and
loopne
lods
scas
push
push
dec
cmp
inc
icebp
cmp
cmc
push
loope
mov
bnd
push
inc
subb
add
xor
clc
push
mov
cmpsl
push
nop
loopne
addr16
inc
pop
push
mov
sbb
hlt
adc
sbb
xchg
dec
mov
pop
rclb
add
sahf
xor
test
lea
psubw
mov
dec
cmp
and
cmp
pop
cli
dec
addr16
gs
inc
or
sbb
jmp
xor
adc
in
dec
outsb
lahf
in
xor
in
adc
mov
mov
sub
lods
push
adc
adc
dec
xchg
xor
sub
repnz
or
shlb
sub
popa
enter
xor
push
inc
test
daa
aaa
sbb
cmpsb
lret
lea
jmp
push
push
das
xorb
push
sbb
jbe
dec
jmp
adc
xor
nop
or
fildll
adc
pop
inc
inc
xchg
cmp
mov
movsl
aam
push
orps
add
adc
adc
in
sub
cmp
push
adc
xchg
icebp
mov
idivb
pop
call
add
addr16
daa
add
mov
mov
or
mov
enter
xchg
testl
mov
mov
xor
push
cmp
pop
scas
aam
add
mov
push
push
push
dec
sub
aad
xchg
push
or
push
adc
inc
sbb
iret
xor
sbb
imul
push
sub
into
aaa
push
add
mov
addr16
sahf
add
pop
mov
jne
pop
ja
and
repz
jmp
jne
push
call
sbb
enter
mov
push
xchg
test
aaa
pop
inc
sub
in
pop
adc
xchg
push
sbb
jmp
mov
sub
shlb
test
push
dec
mov
fldcw
fdivrp
pop
push
or
push
sbbb
outsl
cmp
jae
mov
nop
imulb
add
loopne,pt
or
pop
ds
push
jge
fdivl
aas
hlt
aaa
add
lea
push
in
int3
into
rol
and
add
mov
shrb
into
hlt
pop
or
mov
adc
mov
clc
add
sbb
jmp
lea
jge
add
dec
push
pop
movsl
inc
mov
hlt
dec
call
shlb
mov
call
mov
xchg
pusha
addb
or
lock
or
jmp
aam
mov
xchg
scas
mov
xchg
popf
sbb
nop
mov
rolb
sub
jnp
mov
adc
add
jae
sub
enter
push
add
sbb
pop
and
movsb
lret
arpl
rolb
inc
xor
jle
cld
addr16
jae
icebp
jmp
add
loop
and
movsl
sub
add
dec
and
pop
pop
or
fimuls
sti
lea
test
mov
sub
add
jae
push
jp
pop
fmull
ja
andl
xor
pop
dec
mov
dec
lcall
hlt
les
push
xor
add
shr
fldenv
test
rclb
mov
shlb
mov
cmp
fwait
bound
repz
add
push
inc
fwait
in
shl
popf
and
addr16
std
incl
loope
inc
adc
or
int
fistpl
jmp
push
jg
lods
clc
repz
push
jb
dec
pop
test
mov
inc
cld
mov
movsb
pop
and
dec
sub
mov
lret
and
sub
fadd
lock
gs
sub
dec
and
sub
jle,pn
idivl
call
sbb
xor
and
jmp
cmp
call
mov
pop
cmp
sbb
out
scas
jmp
ss
ret
add
nop
cmpsl
or
jg
inc
cmp
push
push
fldl
xor
jle
adc
jne
push
push
and
and
mov
cmp
js
push
xchg
mov
pop
xor
seto
neg
or
push
mov
rcrb
push
adc
adc
and
int3
cmp
pop
out
xlat
aas
jbe
adc
test
mov
cmp
enter
xchg
xchg
jbe
mov
adc
inc
clc
lret
je
mov
testl
jp
push
push
dec
mov
lret
loopne
mov
sbb
mov
mov
push
les
xorl
push
jecxz
adc
fadds
jl
fsubs
je
insb
jge
pushf
add
adc
jbe
inc
cmp
or
xor
testb
pop
or
sub
inc
cmp
adc
cmp
lcall
scas
test
out
shrb
xchg
decb
cmovae
mov
mov
shrb
in
leave
sub
inc
push
push
test
daa
fnsave
stos
test
xor
stos
test
mov
stc
aas
adc
dec
sahf
dec
xor
dec
and
js
cmp
add
and
dec
sub
fstpt
repnz
add
fs
incl
in
nop
lea
adc
adc
push
pop
adc
sbb
and
jecxz
adc
sbb
into
andl
cmp
and
sbb
mov
sub
add
movsl
or
and
add
xor
or
xchg
mov
xchg
orb
rolb
xlat
jns
icebp
adc
ss
test
adc
hlt
test
cwtl
adc
fsub
pop
rolb
shrb
xchg
das
push
dec
xor
xor
sbb
lods
dec
ja
mov
fiadds
and
and
sub
mov
add
pop
ret
add
pop
mov
je
imul
xchg
and
or
jmp
ret
and
add
scas
push
cld
lea
jae
jb
mov
xchg
or
xor
dec
ret
and
push
sub
cmpsl
lock
inc
lods
and
cmp
mov
stos
loopne
mov
push
lcall
pop
shl
and
mov
sbb
cmc
enter
push
or
mov
add
dec
daa
lea
popf
popf
add
testb
xchg
js
sbb
dec
jmp
pop
lock
xorl
ret
inc
roll
cmpl
or
mov
adc
push
add
or
or
lret
pop
mov
aaa
xor
push
popa
cmc
or
mov
loop
inc
push
push
inc
add
negb
sahf
xchg
fucomi
lcall
mov
or
xchg
xor
addr16
add
adc
add
sbb
popa
stos
dec
ja
and
mov
adc
adc
or
imul
pop
sti
or
adc
sub
repz
ds
push
sbb
adc
ljmp
add
adc
nop
pop
pop
scas
sbb
imul
divb
sbb
xchg
or
testl
pop
or
adcb
add
iret
movaps
pop
test
xor
pop
pop
cmc
push
mov
cmpsl
pop
dec
pop
aam
lea
cmp
push
ficoms
cmp
xor
inc
movsb
sbb
push
push
jg
push
lahf
adc
add
adc
push
sbb
and
dec
pusha
jecxz
movsl
sbb
sub
add
xlat
xor
xchg
push
mov
mov
sti
push
jno
add
cmp
imul
dec
in
stos
push
test
xor
repnz
in
push
jnp
jl
data16
push
push
or
scas
shll
jns
andl
mov
popf
loopne
dec
icebp
mov
dec
push
mov
push
mov
push
movsl
cmp
stos
test
fs
jle
scas
flds
add
or
fstl
sub
xor
add
cmp
or
test
or
popf
test
icebp
in
jg
jmp
dec
les
or
flds
push
cwtl
pop
mov
gs
sbbb
adc
cmc
or
sar
gs
inc
ss
roll
inc
mov
lock
dec
lcall
insl
push
xor
test
and
mov
outsl
sbb
xchg
ficoms
add
fldcw
mov
pop
sbb
or
lea
push
or
inc
dec
and
inc
int
bound
mov
imul
movsb
and
in
push
push
xlat
pop
inc
pop
or
mov
sbb
or
rol
adc
xchg
xchg
mov
adc
jo
lret
dec
xchg
or
mov
ret
sbb
cwtl
in
cmp
add
push
xor
popa
jns
aaa
shll
dec
dec
pop
push
bound
movsb
out
sbb
mov
mov
pop
arpl
and
or
or
inc
mov
adc
cmp
and
cmp
ss
push
sub
ficomps
ret
sub
lds
and
pop
jbe
sbb
jge
roll
stos
push
rclb
push
and
inc
je
or
push
lods
outsl
mov
cmp
aaa
rol
cltd
push
fs
push
faddl
inc
sbb
and
push
push
inc
add
inc
mov
sub
sbb
out
dec
adc
sbb
and
mov
xchg
es
add
fists
test
loope
add
movzwl
add
xor
push
iret
pop
pop
xor
or
mov
xchg
inc
sbb
pop
inc
sbb
jo
and
or
mov
xor
inc
xchg
push
add
mov
push
sub
daa
adc
xchg
mov
mov
jno
sbb
pop
in
jnp
or
shlb
adc
inc
cltd
push
push
cwtl
cmp
adc
into
xor
pop
sbb
add
jb
ja
out
dec
xor
mov
pop
dec
mov
insl
jg
test
js
mov
test
push
push
xor
jl
sbb
out
lret
and
xor
add
or
adc
cmp
mov
in
fisubrl
mov
scas
adc
sbb
sbb
cli
adc
roll
shl
cmpsb
mov
cltd
and
jle
xor
ja
ds
imul
clc
and
or
jl
pop
mov
adc
mov
xor
push
adc
mov
cmp
les
sbb
test
js
stos
in
jno
push
mov
mov
pop
mov
mov
scas
xor
jne
xor
mov
jno
sub
sub
sbb
test
sti
adc
ret
test
sbb
xor
adc
imul
jbe
loopne
aam
dec
mov
jae
mov
test
js
cmpb
mov
push
mov
lcall
out
orl
or
rorl
add
pusha
push
adc
adc
add
movb
ret
ret
or
pop
rcll
add
fsubs
adc
sbb
je
scas
xchg
sub
dec
cmp
sub
loop
outsb
xlat
xor
push
push
insb
xchg
xchg
sbb
xchg
and
mov
jno
push
inc
es
pavgw
sub
nop
mov
xchg
xor
jno
dec
fbld
mov
mov
imul
push
nop
sbbl
cmc
ds
inc
es
test
and
insl
and
mov
aaa
or
pushf
ficomps
xor
mov
adc
js
push
fisttps
inc
sub
add
loop
jns
imul
inc
and
add
sbb
cmp
hlt
cmp
int
cmp
mov
push
ja
das
int
inc
xadd
jmp
outsb
fwait
stos
and
sbb
xchg
push
nop
outsb
jl
ds
cwtl
imul
push
or
adcb
and
repz
mov
add
inc
ret
inc
jecxz
sbb
in
test
in
mov
test
or
nop
mov
ja
clc
push
dec
mov
lock
dec
add
and
roll
clc
push
sub
cli
add
push
push
mov
out
sub
push
add
or
mov
mov
fstp
sbb
mov
ja
lds
outsl
fwait
inc
mov
in
and
xchg
jp
sub
or
dec
or
popa
mov
dec
dec
jne
mov
imul
xchg
jl
cmc
add
adc
ss
sbb
outsb
arpl
or
loope
xchg
dec
test
mov
test
and
or
and
and
sti
add
ret
xchg
add
ret
adc
imul
sub
mov
sub
xorl
add
cmpsb
sbb
inc
rcll
lods
test
addr16
xchg
mov
pop
or
pop
fisubrl
mov
rcl
push
les
loop
or
adc
out
nop
dec
xchg
lahf
pop
sbb
data16
adc
in
adc
inc
ret
je
sbb
adc
mov
ret
mov
push
adc
aam
outsb
rorl
mov
sarb
add
add
and
inc
adc
int
xor
sub
add
adc
push
sbb
jl
jmp
adc
inc
pop
pop
adc
fldl
pop
or
mov
incl
mov
sbb
popf
fs
add
or
int
insl
mov
sbb
sub
mov
or
insb
test
movaps
dec
loope
mov
lods
or
in
push
mov
adc
mov
test
cltd
adc
fwait
push
cmpsl
cmp
sti
popa
push
mov
clc
dec
adc
add
jno
or
fldt
test
movsl
jecxz
enter
cmp
into
push
clc
es
mov
popf
std
scas
xchg
and
mov
scas
cwtl
xchg
call
adc
xchg
enter
stc
loope
sarl
inc
push
jle
xchg
das
fcomps
sbb
es
push
adc
add
push
out
or
jg
push
fdivl
pop
sub
fcomps
or
mov
jnp
jecxz
js
pop
push
adc
in
pop
pop
aaa
lcall
add
shlb
cmp
je
adc
repnz
and
test
jle
mov
bound
inc
add
iret
pop
std
mov
mov
add
mov
mov
sub
sub
or
into
ret
mov
pop
add
push
pop
push
push
lcall
pop
sbb
sub
push
push
je
pop
xchg
fnstenv
push
xchg
sahf
loope
sub
xchg
cwtl
and
push
repnz
xchg
dec
addr16
ficoms
and
jecxz
lret
mov
scas
shl
push
dec
iret
shlb
pop
sbbb
daa
push
sub
or
or
test
or
or
popf
setp
jle
adc
je
mov
cmpsl
lods
xlat
scas
call
inc
test
add
jl
cltd
mov
push
iret
mov
xchg
adc
das
push
xchg
movsl
cs
adc
mov
sbb
call
cmp
pop
sub
jo
test
pop
inc
clc
jg
sub
push
sub
lea
push
lret
sbb
push
inc
test
mov
dec
and
test
push
loopne
leave
cs
hlt
mov
mov
add
test
test
mov
fld
push
pop
jl
sub
jp
push
pop
lods
mov
dec
xchg
cmp
xchg
mov
ficoml
adc
adc
cmpsl
shrl
mov
xchg
popa
xorl
adc
mov
fwait
pop
movsl
or
fidivs
test
sub
and
fnstenv
test
mov
cmp
push
and
mov
ss
pop
adc
mov
imul
mov
mov
push
xor
xchg
mov
or
add
xchg
gs
or
mov
xor
adc
arpl
and
aad
in
add
out
or
cmp
sub
call
jnp
push
pop
adc
or
xlat
push
lret
sbb
sub
mov
dec
gs
imul
popa
pop
test
inc
nop
cmpsl
push
or
push
or
mov
xchg
jp
and
das
push
iret
mov
inc
push
pop
or
adc
inc
inc
jg
ja
inc
movl
inc
std
test
inc
adc
fldz
and
dec
imul
cmp
and
sub
adc
push
or
inc
pop
out
pop
add
jnp
push
xchg
jae
inc
jmp
sbb
xor
mov
adc
mov
push
and
adc
add
adc
sub
test
adc
mov
stos
add
rorl
or
addr16
pop
fmuls
mov
flds
push
data16
add
sub
movsl
jo
in
popf
and
dec
movsl
mov
sbb
call
adc
xor
das
inc
sbb
nop
sbb
cmpsw
mov
es
rcrl
push
je
push
push
pop
pop
popa
sbb
xchg
fldt
mov
cmp
jl
push
cmp
push
cmp
dec
cld
cld
repz
cmp
jp
push
cmp
cmp
cmp
add
sti
add
add
inc
jmp
and
data16
and
std
mov
ljmp
lahf
aas
and
or
fs
dec
pop
cmp
pop
idiv
call
cmpb
ror
aad
dec
mov
inc
movsb
cmpsb
or
mov
test
jnp
add
jns
in
pusha
push
jnp
inc
das
subb
sarb
sbbb
ret
sbb
push
hlt
iret
adc
mov
mov
dec
mov
ret
xchg
xchg
mov
dec
and
sub
inc
cmp
jnp
dec
pop
ficomps
add
sbb
pushf
push
dec
sahf
and
adc
xchg
sub
mov
mov
mov
pop
int
cmp
ficoml
mov
jo
push
push
outsl
mov
test
cmpsb
lahf
add
enter
fs
pop
leave
and
iret
mov
mov
add
shrl
dec
mov
sub
pop
pop
push
scas
popa
jns
add
dec
push
dec
mov
cltd
inc
rcl
iret
enter
aam
hlt
or
and
jo
adcl
add
mov
inc
insl
pusha
mov
rcrl
dec
test
stos
outsl
loopne
inc
jl
insl
mov
les
daa
cltd
movsl
adc
fistpl
add
push
data16
dec
pop
mov
dec
push
sub
leave
lock
inc
test
mov
xor
add
and
jb
imul
xor
es
or
dec
and
and
leave
adc
mov
popa
subb
enter
insl
lods
mov
or
fistl
add
jecxz
inc
jne
ret
addb
jo
loopne
sub
lods
sub
xor
sbb
sub
aaa
xchg
fs
sbb
and
sbb
add
pop
cmpsb
test
cmp
xor
push
sbb
fwait
xchg
mov
es
sbb
stc
add
add
movsb
adc
or
cmp
outsb
and
jnp
jno
add
mov
mov
push
lea
pop
cmp
cltd
push
or
push
notl
in
mov
lds
fsubrl
push
or
mov
jp
shrb
jae
je
xchg
lods
push
and
nop
sbb
or
add
adc
jmp
inc
adc
lret
leave
inc
add
adc
loopne
sbb
dec
and
mov
inc
add
adc
lea
sbb
ret
push
or
test
fs
rorb
sar
les
mov
lret
mov
or
adc
sub
add
pop
or
sbb
fwait
loope
push
and
or
mov
out
bound
rcrb
lds
xor
push
dec
mov
mov
pusha
mov
sbb
adc
xchg
inc
jo
jne
fcoml
enter
or
add
sub
xor
aaa
int3
add
jnp
jne
lea
mov
add
pop
xchg
mov
out
jmp
xor
test
lock
loopne
xor
fs
add
cmpsl
dec
shll
add
cmpsb
clc
cmpsb
ret
orl
test
orl
add
aaa
or
fwait
adc
fistl
dec
scas
fiadds
or
and
mov
jbe
cmp
ficompl
adc
pminsw
add
mov
out
fiaddl
ror
insl
andb
add
xor
cli
push
add
or
push
ljmp
ja
pop
loopne
sbb
jbe
and
std
nop
and
hlt
mov
and
in
fsubrs
flds
adc
out
ss
stos
push
js
lock
loop
push
add
adc
lret
les
fmuls
popa
inc
addr16
pop
push
popa
stos
cmp
mov
popa
inc
jne
stc
push
test
adc
popa
pusha
mov
addr16
mov
sbb
push
add
xlat
pop
or
into
inc
pop
fildl
fildl
mov
add
dec
shl
sbb
ror
push
pop
gs
mov
push
adc
cmp
pop
xchg
jl
add
rep
xchg
test
leave
push
pusha
jae
jnp
xor
fnstsw
jg
adc
lods
popa
xor
adc
arpl
mov
sub
pop
pop
inc
je
and
adc
subb
and
lea
mov
xor
mov
and
push
lock
cmp
je
cmp
jle
push
cmp
shl
add
roll
adc
inc
cwtl
jl
push
pop
pushl
xchg
clc
cmpsb
and
cmp
mov
jle
or
out
xchg
inc
ret
xchg
inc
inc
push
lods
add
leave
icebp
xchg
push
sahf
jbe
mov
xor
in
orb
or
out
mov
pop
push
dec
sub
in
jno
cmp
fsub
sub
or
sub
insb
movsb
or
xchg
fcom
mov
sub
add
or
fnstsw
test
je
sbb
and
pop
clc
add
xlat
ret
add
fldl
push
sbb
dec
cmp
out
mov
fstpl
and
test
into
fstpl
hlt
pushf
mov
inc
inc
xchg
mov
pop
or
fnsave
jnp
xchg
add
and
loope
fsubrp
pop
or
adc
xchg
repz
fcomps
dec
inc
repz
xchg
push
mov
mov
imul
ret
lret
pop
and
mov
or
add
andl
sbb
xor
std
push
testb
aaa
inc
mov
xor
pop
scas
sbb
enter
mov
push
stos
adc
shlb
inc
jo
sub
dec
and
mov
jge
dec
inc
inc
sbb
popf
add
cmpb
or
inc
dec
fs
adc
xor
xor
icebp
and
mov
sub
xchg
iret
pop
add
jnp
lock
mov
sbb
mov
mov
and
sbb
pop
push
add
push
jp
jae
daa
add
cmpsl
xor
jnp
es
or
mov
scas
add
cmp
push
clc
and
cltd
push
clc
loop
jmp
cmp
jb
sbb
leave
shld
add
add
add
ja
jb
ja
push
mov
push
push
inc
add
push
inc
and
push
or
lods
sarb
adc
mov
push
mov
mov
push
mov
int3
pusha
adc
or
or
pop
ja
cli
insl
push
push
mov
ret
add
pop
pop
sahf
es
xchg
add
popa
mov
inc
sbb
ret
cmp
push
mov
cwtl
leave
shlb
xorl
loop
mov
add
adc
nop
push
inc
cmpsl
insl
insb
or
push
sbb
jle
testb
cmpl
imull
jne
rclb
and
fidivl
mov
push
loope
dec
push
push
jl
outsl
mov
jns
aas
in
popl
xor
mov
sti
jg
stc
std
mov
or
sahf
mov
out
data16
rol
mov
push
push
push
outsb
mov
hlt
ret
insl
mov
sub
add
ret
mov
sub
dec
or
add
mov
mov
sub
mov
adc
les
and
in
adc
mov
add
jle
add
or
lods
out
icebp
mov
xor
insl
loope
icebp
add
or
je
xor
ss
repnz
dec
pop
push
nop
xchg
movsl
add
out
filds
jns
push
test
xchg
or
pop
movsl
sbb
das
lea
rcrb
push
insl
mov
or
dec
ljmp
inc
rclb
movsb
mov
push
test
push
imul
mov
mov
stc
inc
in
xor
push
adc
add
mov
mov
add
clc
and
fiaddl
inc
shrb
inc
test
jl
lds
ds
je
lret
mov
dec
ror
jno
pop
xlat
cmp
pop
add
lcall
mov
cwtl
push
xchg
inc
imul
outsb
mov
dec
inc
xor
stc
jo
ret
pop
add
cltd
inc
add
les
sub
ja
xchg
inc
cmp
js
xchg
xchg
xorl
popa
jno
xor
sbb
sub
sub
lret
ret
fwait
mov
jno
jp
cmp
mov
pop
lret
or
adc
fld
pop
inc
cli
push
mov
ja
ret
ljmp
dec
aam
inc
lahf
repnz
cmpsl
rcll
nop
add
sbb
clc
add
add
adc
and
in
push
flds
call
mov
sbb
pop
push
outsb
inc
push
add
jl
xor
cmpb
adc
and
jns
fists
add
adc
mov
and
push
push
jmp
mov
call
xchg
fsubrs
lret
es
adc
push
popa
out
orb
or
sbb
insb
jno
shll
xor
movsl
pop
cld
jno
mov
inc
mov
insl
jo
daa
sbb
sbb
add
mov
fs
addb
int3
add
sub
int3
and
je
add
sbb
dec
jne
movsb
pushf
mov
mov
in
push
xchg
or
into
push
cld
mov
add
cmp
push
sarl
or
jp
push
je
lret
mov
push
scas
push
stos
cmpb
lea
insb
scas
push
dec
push
test
jnp
sbb
iret
hlt
push
sub
adc
sbb
enter
in
fs
xchg
jl
pop
in
inc
push
test
cmp
jge
push
stos
mov
pop
push
pop
ret
dec
push
nop
inc
mov
and
jle
xchg
enter
mov
jb
and
call
mov
and
rolb
enter
orb
in
inc
pop
jl
jb
nop
inc
rclb
adc
scas
and
ljmp
insb
mov
ror
fisubrs
iret
repz
adc
jns
out
and
pop
bound
jbe
mov
test
mov
sahf
out
in
clc
add
cmp
or
and
xor
and
push
pop
jo
inc
adc
aaa
lret
adc
lret
push
lahf
fnsave
add
pop
js
ds
xor
jae
mov
inc
or
test
fcompl
inc
adc
test
nop
je
orl
sarl
les
jno
ja
arpl
sti
test
movsb
movsl
xchg
xchg
out
xchg
fwait
jmp
jl
mov
sub
add
mov
inc
mov
push
std
xchg
aam
pop
stc
jmp
fldz
fcompl
cmp
cmp
pop
xchg
cmp
inc
fisttpll
mov
rcrb
mov
faddl
test
sub
sbbb
sbb
loope
shlb
les
gs
xlat
out
dec
test
inc
mov
add
and
dec
lods
xchg
popa
pop
inc
cmpsl
std
int3
imul
mov
ja
rorb
arpl
xchg
ja
cwtl
mov
push
cmp
push
in
lock
dec
add
rcr
add
cmpsl
scas
sahf
push
xchg
aam
or
add
outsl
in
xchg
cmpsl
jg
inc
add
movsb
sbb
or
xorb
fisubl
xorl
push
gs
push
or
mov
add
dec
sbb
sbb
add
movsb
sub
adc
int
adc
xchg
adc
xchg
dec
and
decl
ret
mov
and
inc
and
add
rcll
add
adc
or
inc
or
movb
lea
adc
sti
mov
scas
sub
pop
shlb
fwait
inc
push
or
or
xor
pop
pusha
mov
lret
outsb
cmpsb
mov
inc
rcll
das
shr
push
or
cmpl
bound
sbb
out
rcll
dec
shlb
jle
test
ret
pop
inc
jnp
xchg
je
mov
testb
push
mov
or
xchg
leave
int3
cmc
enter
js
dec
add
jno
leave
mov
sub
and
hlt
fnstsw
push
std
popf
mov
xchg
fimuls
xor
stos
xorb
dec
push
movsl
cwtl
fwait
fwait
adc
sahf
sbb
jl
xchg
je
jnp
push
and
cmp
mov
push
pop
pushf
push
xchg
stc
adc
jp
xchg
mov
xor
lcall
pop
rorb
push
jle
icebp
xor
and
and
mov
fnsave
xor
imul
das
insb
imul
sub
cs
sub
sub
fs
int3
in
int3
xor
ss
mov
cmp
pusha
loopne
mov
pop
int3
sub
mov
test
adc
adc
pop
aaa
popf
jo
cmp
cmp
in
xlat
movsb
inc
fbld
dec
sti
subl
mov
lcall
and
inc
or
xchg
js
stos
push
loopne
orb
test
push
lahf
pop
incb
mov
imul
ja
loopne
imul
gs
scas
add
inc
add
int3
pop
sbb
sbb
sbb
nop
push
mov
mov
dec
and
movsl
xor
dec
mov
es
jae
sbb
sub
fists
pushf
test
add
ret
inc
xchg
push
or
adc
data16
lods
xor
cmp
aad
fwait
or
cmp
je
adc
push
mov
cmp
pop
loope
fmuls
pop
cmp
insb
adcb
inc
movsl
jle
sar
andl
int
add
es
pop
cld
test
cmp
dec
insl
hlt
mov
mov
dec
mov
icebp
fmul
cmpsl
movsb
loopne
add
int3
cmp
mov
rcll
sub
bnd
ds
movsb
aas
test
mov
cmpsl
inc
cmpsl
roll
aas
and
and
cmp
and
in
aaa
and
and
popa
inc
inc
push
adc
daa
cmp
pusha
cmp
inc
cmp
sbb
and
inc
push
rcrb
push
scas
dec
xorl
jo
push
cmp
subl
sub
popa
inc
jno
dec
xchg
add
xchg
or
or
sub
pop
cmp
sbb
adc
adc
outsl
or
std
jno
jmp
push
sub
pusha
mov
fnstsw
nop
movntps
and
out
xchg
out
add
rorb
xor
xor
cmp
push
and
push
cmc
in
cmp
loopne
inc
xchg
loope
or
jle
push
mov
call
xchg
imul
enter
pop
ret
test
out
pusha
jo
cvtpi2ps
out
jge
test
jne
or
hlt
push
add
xchg
rorb
rol
push
mov
push
das
or
mov
add
sub
push
gs
or
ret
pop
sbb
mov
into
push
mov
xchg
ficompl
pop
cmp
add
sub
add
sbb
loopne
inc
mov
inc
call
jno
sbb
aaa
mov
xchg
pushf
or
dec
mov
fimull
or
in
xor
adc
insb
xor
cmp
xchg
pop
cmp
push
pop
iret
mov
inc
data16
inc
jl
add
cmp
loopne
test
imul
or
nop
push
int
iret
and
xchg
setl
and
and
mov
int
adc
adc
adc
in
dec
adc
xchg
es
inc
mov
lock
adc
aaa
das
push
and
call
mov
mov
out
push
sbb
pop
fbstp
notb
negl
lods
fsubrs
sbb
xchg
lods
sbb
int
fcoml
push
orb
fcompl
push
xchg
out
mov
int
mov
jl
adc
inc
and
adc
cs
jae
and
adcl
nop
out
inc
test
sbb
jns
cmpb
js
imul
inc
xchg
mov
nop
push
or
push
pop
mov
adc
xchg
movsb
mov
cmp
sbb
test
test
sub
add
int
xor
or
dec
xor
fs
pop
dec
pop
add
fsubrl
pop
add
adc
sbb
testl
nop
cmc
adc
movb
sbb
cli
push
xor
add
lret
in
pop
sub
xor
inc
inc
sbb
xor
jns
and
push
in
cmpsl
xor
cltd
xor
xchg
dec
or
dec
xor
and
cmpsl
sbb
adc
jbe
imul
in
shll
sub
add
jne
cmp
add
mov
test
test
orl
movb
mov
and
mov
iret
test
jne
mov
push
adc
ret
cmp
aad
push
orl
adc
push
divl
lods
or
mov
cmpsl
sbb
and
rorl
pusha
or
pop
push
mov
shr
and
test
or
or
icebp
and
dec
xchg
jnp
push
mov
cmpsb
or
xchg
mov
and
push
ret
adc
xor
jo
nop
sarb
dec
punpckldq
sub
movsb
add
mov
hlt
les
js
mov
adc
xor
mov
rol
jae
movsl
push
xchg
mov
inc
inc
sbb
xchg
push
push
inc
jmp
inc
or
fnstcw
sbb
add
fmul
jbe
sub
sbb
rcr
enter
leave
pushl
clc
push
add
or
ror
sbb
mov
xchg
cmp
xor
mov
jae
test
pusha
inc
scas
loope
dec
nop
pop
sub
movsb
and
cltd
push
sbb
sbb
sub
roll
and
pop
push
imul
sbb
stos
sub
push
mov
out
imul
add
sub
pop
or
int
push
imul
sub
mov
subl
dec
enter
sub
rorb
sub
pop
push
imul
test
push
adc
loope
lea
dec
scas
xchg
orl
lods
es
movsb
imul
ret
dec
in
loope
jno
pop
pushf
mov
aad
imul
mov
mov
popa
loop
call
popf
das
not
and
mov
icebp
inc
movsb
movsb
cltd
nop
ss
lcall
lods
cltd
nop
inc
sub
imul
nop
inc
lcall
movsb
cltd
and
and
lcall
cltd
nop
test
mov
imul
sbb
subb
and
and
les
test
rcl
pop
shlb
sahf
adc
adc
fdivs
and
mov
inc
sub
push
xchg
in
jnp
xchg
jmp
lea
jno
add
adc
iret
dec
fnstsw
pop
sbb
loopne
mov
cs
gs
test
test
xor
xor
dec
icebp
fdivrs
mov
lds
adcl
mov
cmp
push
push
mov
je
repz
push
push
push
es
idivb
jecxz
repnz
pop
sub
pop
scas
aam
add
dec
jo
orl
dec
inc
lods
mov
pop
mov
pop
jg
ss
loope
adc
push
and
or
adc
mov
dec
inc
cmpsb
and
xor
push
nop
push
add
popf
fidivl
adc
fadds
ss
or
rorl
cmp
dec
cmp
or
cmp
lods
mov
loope
clc
dec
pop
push
lock
or
clc
cmp
daa
lea
inc
sub
ffreep
repnz
push
cmp
ret
mov
inc
mov
xor
add
sub
xchg
test
std
and
andb
mov
pop
adc
cmp
xchg
dec
jbe
movsl
dec
lods
imul
jp
mov
pop
dec
mov
aam
pop
and
sub
mov
pop
mov
jmp
lea
mov
jmp
lea
add
sub
pop
jecxz
jmp
adc
mov
inc
inc
xor
repnz
or
inc
adc
outsb
inc
or
jg
loop
push
push
sbb
std
mov
inc
je
push
push
clc
adc
or
mov
add
push
adc
dec
adc
nop
jb,pt
mov
imul
adc
lahf
loopne
xor
push
addl
lret
pop
push
xor
ja
cwtl
ret
aam
pop
cmp
fcomip
fbld
push
sbb
xlat
jbe
mov
xchg
cmp
jne
inc
cmp
add
les
add
push
push
sti
or
hlt
subl
lock
push
or
iret
jne
mov
inc
add
repz
jae
inc
adc
cmp
push
jmp
lods
add
mov
dec
roll
mov
jmp
xlat
mov
mov
add
add
inc
sub
mov
xchg
xchg
lods
inc
clc
and
adc
pop
jl
push
sti
add
adc
mov
mov
xchg
jne
pusha
fcmovu
jne
pushf
xlat
dec
or
loope
js
or
ds
imul
mov
xchg
mov
test
sub
push
and
ljmp
sahf
cmpsl
jne
inc
sub
pusha
rcrl
ss
xchg
icebp
or
sbb
movsb
adc
inc
sbb
add
pushl
inc
je
xchg
pop
lea
ret
sbb
test
out
cmpsb
sbb
addl
cmc
cwtl
test
xor
sahf
stos
andl
sub
in
push
aam
sbb
imul
push
mov
cmp
ds
jl
or
pandn
mov
cmp
or
and
mov
add
pop
dec
cld
shr
mov
add
pop
add
xchg
dec
add
leave
jne
pop
xor
add
movsl
xchg
xchg
scas
mov
loopne
xor
pop
jno
sub
lea
mov
pop
push
add
sub
cmp
flds
pop
or
fiadds
push
sbb
push
lock
adc
test
dec
arpl
lahf
push
lock
clc
rorl
addl
add
pop
mov
sbb
cmc
imul
inc
lock
fs
mov
mov
pop
add
cmpb
je
dec
and
add
in
jge
in
push
ret
sub
jle
jo
inc
jmp
inc
insl
mov
mov
loope
popa
push
sub
icebp
jmp
js
mov
or
push
adc
push
fwait
mov
and
cmpsl
pop
icebp
dec
pushf
fisubs
ret
mov
pop
add
loope
fmuls
sub
andb
fstpl
pushl
push
data16
ljmp
sbb
inc
je
imul
cmp
inc
push
add
xor
mov
add
xchg
adc
dec
arpl
rorl
dec
adc
inc
jp
sub
dec
loopne
mov
adc
xchg
orl
jns
pop
pop
sbb
jb
in
outsb
xchg
xor
cmp
cmp
jb
enter
and
sub
into
pop
or
mov
ret
rolb
xor
and
jmp
aad
mov
ret
or
and
outsl
repnz
lock
inc
mov
shlb
add
adcl
pop
daa
subl
push
push
movsl
adc
add
sub
mov
cmp
adc
dec
mov
pop
jno
or
repz
push
repnz
in
push
sub
and
add
lock
dec
test
mov
xchg
je
nop
bound
add
cs
sbb
leave
cmp
cmp
sbb
sub
aaa
cmpsb
xor
gs
xchg
shlb
pushf
es
sub
dec
or
sbb
movl
jp
in
push
push
sbb
loope
imul
movl
repz
xorl
sbb
pop
xor
push
jg
sbb
pushf
xor
push
sbb
add
push
fisttpll
or
shrb
cmp
push
pop
stos
fisttpl
test
adc
cli
dec
mov
mov
into
push
sahf
fmuls
or
into
test
add
rcll
push
sub
sbb
inc
and
pop
flds
mov
jle
and
dec
pop
je
cmpsl
add
jmp
aas
ja
cli
out
jg
rolb
andb
mov
ror
cmpsl
lods
push
and
push
ret
xorb
mov
cmpsb
mov
push
inc
sbb
or
add
iret
push
xor
fdiv
add
popa
or
pop
sub
insb
idivb
cmp
insl
outsl
ljmp
enter
scas
and
mov
shrb
or
lea
out
movsl
inc
mov
xchg
push
add
adc
xchg
mov
xor
adc
mov
mov
and
push
mov
ret
ficomps
or
mov
cmp
jg
and
clc
or
sbb
and
jmp
andb
xor
jo
inc
test
or
ja
mov
movsb
icebp
ret
je
stos
mov
ds
imul
mov
pop
cmp
xlat
push
mov
sub
dec
fadds
and
xor
jmp
jno
mov
push
les
push
adcl
sub
call
adc
shl
shrb
in
mov
inc
add
in
cmp
add
or
xchg
scas
add
sarb
mov
jmp
mov
sbb
fldenv
and
mov
aas
add
je
in
dec
lret
insl
test
dec
adc
add
mov
mov
xor
jne
je
inc
fimuls
pop
into
cmp
jl
add
sarb
rcrb
xor
xorl
mov
or
adc
push
sub
fxch
imull
insl
xor
xor
mov
fcompl
cmp
bound
and
movntps
lret
mov
enter
cltd
or
fldt
loop
mov
imul
pop
push
lea
mov
and
mov
inc
cmpsb
mov
pop
add
mov
or
xor
add
in
mov
xor
push
or
or
dec
xchg
movsl
xor
movsb
call
rdtsc
xor
enter
lock
mov
or
mov
movsb
or
lods
jnp
or
aad
or
lret
fcomps
inc
das
je
jge
sahf
ljmp
popa
out
jae
jns
jnp
or
cltd
nop
das
mov
inc
sahf
fdivr
cmp
cs
in
cmp
test
shrl
call
fmuls
movsl
jb
xor
push
call
mov
sbb
sub
add
xchg
mov
sbb
and
dec
mov
push
sub
push
pop
cmpsl
pusha
lea
sbbb
xor
addr16
xchg
mov
xlat
es
xor
xor
out
dec
sbb
xchg
repz
mov
imul
add
mov
leave
jp
push
cmp
outsb
add
ja
mov
or
add
ds
pop
mov
rol
pop
cs
pop
adc
mov
mov
or
push
push
dec
movsb
pop
mov
jb
add
in
pop
mov
inc
sbb
les
jmp
add
mov
sbbl
dec
mov
ret
lods
cli
iret
add
mov
call
sbb
ja
nop
mov
add
leave
inc
mov
inc
cmp
inc
data16
out
cld
mov
cmp
adc
jne
daa
cld
cmp
out
bnd
adc
hlt
jne
or
jne
or
push
mov
push
pop
xor
cmp
cmp
pop
mov
mov
and
aad
sub
push
lea
jo
mov
loop
dec
int
xor
mov
push
push
cmp
jl
mov
jmp
jle
pop
hlt
lea
jge
les
push
movsl
movsb
jmp
aam
push
lcall
push
xor
mov
sbb
subl
pop
or
jle
dec
loopne
std
and
mov
or
in
popa
inc
jmp
push
add
sub
xor
cmp
fdivrs
and
in
inc
adc
adc
fcomps
mov
loopne
rorb
adc
sbb
in
adc
mov
cs
jl
lea
das
jge
cli
xchg
jmp
fs
mov
push
ss
lea
push
sbb
loopne
xorl
or
jo
add
mov
insw
mov
inc
adc
orl
incl
pusha
pusha
xchg
sub
xchg
test
cmp
pop
mov
orb
mov
sahf
movsb
into
xor
xor
arpl
dec
ficoml
mov
add
fwait
mov
mov
mov
fidivs
movsb
hlt
push
push
arpl
push
addl
adc
aad
push
jo
sbbb
or
add
mov
adc
shlb
or
fmuls
inc
movsl
cmp
rorb
int3
or
into
inc
jo
jno
subl
dec
mov
int3
xchg
gs
or
or
add
inc
pusha
enter
imul
push
and
jnp
sub
xor
inc
je
es
xlat
fs
push
or
nop
ret
sub
popa
je
mov
shlb
sub
xchg
xchg
mov
hlt
xchg
dec
imul
jge
add
sub
daa
xchg
pusha
ret
rorl
js
sbb
nop
xchg
xor
insb
loopne
mov
mov
shl
pushf
movsb
lea
imul
mov
mov
xor
sbb
xor
je
insb
setno
cmp
add
je
ret
mov
and
mul
push
xchg
pusha
sbb
ror
or
xor
xorl
inc
sub
out
add
mov
loope
mov
xchg
jo
jmp
or
xor
or
cmp
mov
sbb
cmp
push
cltd
nop
adc
adc
cltd
nop
inc
push
add
adc
dec
push
adc
mov
sub
sbb
adc
xlat
leave
mov
sub
pop
xor
push
cltd
nop
cltd
push
sbb
or
outsl
push
adc
mov
adc
mov
and
ss
test
sti
dec
ret
ja
mov
cmp
pop
inc
cmp
adc
xor
and
and
outsl
mov
daa
in
mov
shlb
and
out
xchg
cmp
adc
lea
sbb
push
and
push
and
inc
mov
cltd
mov
pusha
jno
rcl
sbb
push
je
movsb
cltd
fsubrs
push
add
sbb
xor
dec
add
out
sbb
adc
insl
rorb
aam
mov
popf
adc
or
outsb
and
sub
adc
mov
inc
cli
and
js
jg
aas
jae
je
push
xchg
mov
mov
lea
and
adc
xchg
inc
push
fdivl
loopne
sbb
hlt
fsubl
push
lcall
std
rcrb
movsb
fwait
popf
cli
xchg
leave
mov
mov
nop
dec
lods
pop
sub
push
call
inc
sbb
xchg
add
out
jbe
imulb
pop
mov
push
les
add
inc
sbb
call
xchg
mov
fldpi
lods
adc
or
in
dec
sub
xchg
call
es
or
mov
or
int
inc
stos
push
jns
and
lock
or
add
imul
add
call
mov
push
lock
in
add
fmull
mov
xor
inc
mov
fldenv
sbb
mov
inc
je
arpl
inc
loopne
jae
dec
fwait
xchg
xor
push
lcall
out
or
test
imul
emms
mov
pop
push
insl
addr16
imul
mov
sub
pusha
emms
sbb
sbb
repz
fadd
popf
movsl
cmp
aam
lret
inc
loopne
shll
push
jmp
add
add
les
loopne
dec
cmc
je
rolb
test
jne
pop
sarl
call
jmp
popf
mov
and
jne
mov
and
sar
sub
popf
outsb
addb
xchg
outsb
sub
mov
pop
sarl
push
xor
cmp
push
mov
push
adc
lret
lds
cmp
daa
fmull
jb
repz
inc
lods
dec
mov
or
and
push
test
ja
mov
dec
xchg
int3
popa
ss
pop
xor
dec
push
lcall
cld
pop
sti
push
xchg
mov
je
adc
stos
lock
int
cmp
mov
rclb
lock
adc
add
add
adc
mov
jmp
or
xor
mov
addb
xchg
cmc
scas
subl
pop
call
movsb
pop
je
jmp
out
je
mov
xchg
push
xchg
enter
lock
add
inc
adc
xor
and
and
lret
and
mov
and
add
inc
dec
add
or
fstps
add
fdivrs
mov
sbb
xor
aas
inc
xor
imul
fists
cmpsb
mov
les
xor
push
push
xchg
outsl
movsl
push
shll
rorl
sbb
xchg
addb
add
dec
mov
imul
inc
or
and
pop
rorb
and
leave
inc
nop
xchg
push
addl
inc
sub
add
add
sub
or
aad
add
mov
lret
mov
pop
adc
ds
cmp
in
add
stos
add
testl
xchg
pop
leave
adc
aam
jno
outsb
jo
and
add
dec
ret
push
je
movsl
ja
leave
pushf
dec
or
cmpsl
mov
mov
leave
cmp
je
mov
cmp
adc
rolb
sbb
xchg
lock
inc
sete
es
clc
icebp
xorl
cmpb
dec
imul
sbb
add
jne
jae
movsbl
sbb
inc
mov
mov
sbb
or
inc
inc
mov
clc
sub
or
out
push
das
add
lea
and
dec
inc
jg
add
or
jecxz
or
add
inc
cmp
jl
cmpl
sbb
cltd
and
add
sar
es
rolb
add
push
scas
push
stos
hlt
clc
xor
ss
subb
cmp
jecxz
sbb
inc
jne
push
jg
or
adc
or
dec
add
shll
adc
pop
loope
arpl
adc
xor
lea
push
adc
and
inc
inc
jp
jbe
std
xlat
dec
adc
ret
or
add
ret
add
sbbl
adcb
mov
xchg
push
cmp
mov
cmp
aas
mov
cmp
or
mov
pop
lods
fstl
cli
js
inc
mov
add
dec
jne
pop
fs
cmpl
pop
or
rolb
lcall
sbb
add
jns
push
ret
or
imul
push
adc
loopne
cs
adc
mov
or
or
sub
mov
ficompl
arpl
push
pop
or
das
addl
add
mov
push
or
push
repnz
pop
sbb
mov
jo
xor
repnz
call
jbe
outsb
dec
or
lret
hlt
add
nop
je
add
adc
push
js
mov
adc
das
test
loopne
pushf
add
aad
or
aam
xor
add
push
mov
outsb
pop
pushf
mov
pop
add
cmp
sti
test
jnp
or
add
push
and
loop
push
sbb
xor
mov
dec
add
jmp
test
xchg
inc
add
mov
jle
js
cmpl
lcall
pop
int3
pop
ss
push
dec
jns
lret
add
add
add
aaa
push
arpl
dec
sbb
jae
cwtl
push
insb
mov
push
lea
inc
das
in
popa
test
cmp
movsbl
mov
je
push
pushl
add
xor
cmp
mov
fadd
addl
fwait
mov
or
sub
jmp
pop
xor
jp
add
push
test
std
xchg
add
mov
movsb
mov
push
pop
gs
push
das
push
nop
dec
cmp
shlb
jbe
fisttps
add
pop
mov
push
cmp
mov
jecxz
test
rorb
int3
add
aam
add
xor
ja
loop
mov
cld
dec
rolb
or
fidivrl
push
shll
adc
fs
xchg
aam
imul
sbb
add
add
rclb
or
pop
aam
mov
mov
push
and
scas
movsb
push
arpl
call
push
jmp
mov
xchg
adc
lcall
sub
xchg
or
imul
pop
fwait
sbb
ret
mov
fidivl
pushf
add
add
int3
int3
mov
xor
sbb
in
add
sti
cld
jecxz
mov
cmp
loopne
sbbl
and
repz
je
cmpsl
lods
cs
fmuls
adc
cmpsl
call
out
das
in
inc
rorb
inc
xorl
jle
in
fisubl
add
push
mov
pop
mov
clc
and
popa
mov
fwait
lcall
or
pop
mov
xor
xchg
and
rclb
and
pop
adc
xchg
dec
aam
add
test
rolb
arpl
fidivs
clc
jl
cwtl
loopne
fdivrl
pop
jge
or
sbb
in
jo
push
xchg
pushw
sbb
cmp
push
movsbl
call
enter
call
adc
jmp
mov
out
test
xchg
sub
out
test
cmp
nop
lret
movb
pop
push
test
or
shlb
inc
add
addl
jmp
add
xor
cmp
mov
aaa
pop
inc
popa
xchg
out
dec
push
roll
out
mov
mov
mov
aaa
cli
jo
stc
mov
cld
jp
jmp
icebp
xchg
mov
xor
iret
popf
sub
add
fdiv
jge
movsb
lock
mov
and
dec
sbbl
call
add
iret
pusha
rcrb
mov
sub
and
inc
inc
scas
mov
or
jg
mov
pop
mov
je
adc
xor
mov
pushl
mov
outsl
mov
mov
clc
pop
mov
ja
mov
sub
adc
lea
rol
sub
inc
push
and
inc
cmp
lods
xchg
out
mov
push
mov
mov
incb
xor
outsl
decl
decl
mov
mov
inc
mov
mov
cmp
jl
fldenv
addl
mov
mov
leave
sarb
sub
push
icebp
or
orb
fdivrp
pop
mov
mov
add
add
movsb
insl
push
mov
mov
nop
and
lds
add
cld
push
leave
push
xor
mov
inc
jmp
inc
adc
jmp
mov
mov
fwait
jb
aam
add
into
in
xchg
mov
mov
inc
mov
push
cmpsl
icebp
inc
bound
xlat
push
mov
mov
nop
cmp
adc
gs
push
fs
in
adc
leave
push
sbb
and
les
ds
mov
outsb
adc
testb
loopne
pop
adc
ds
push
enter
mov
xor
jae
lahf
lret
push
scas
and
inc
xlat
pop
mov
mov
popa
push
loop
test
and
in
scas
rorb
add
adcb
xor
pop
pop
sbb
dec
mov
jae
and
adc
add
mov
sbbb
mov
mov
and
lret
insb
imul
addb
lret
push
cmp
adc
pop
je
pop
clc
jp
in
mov
push
mov
pop
mov
sub
add
or
rol
je
dec
mov
mov
lahf
shrb
sub
ss
lea
cmp
jbe
cmp
jbe
sbb
rorl
sbb
mov
lcall
call
stos
and
insl
sbb
ret
mov
push
sbb
adc
add
stos
add
or
push
push
mov
aaa
cmpb
push
pop
jne
outsl
adc
daa
push
fsubrs
dec
cmp
push
push
cmp
cmpsb
add
aas
stos
jmp
push
scas
test
fimuls
jns
mov
hlt
jmp
pop
ret
and
inc
lods
dec
push
daa
lds
and
sbb
cltd
jbe
mov
test
xchg
jne
lods
mov
das
mov
or
cltd
call
sub
movl
lea
adc
add
xchg
push
int
jecxz
push
xchg
pushf
adc
pusha
sub
mov
push
nop
mov
mov
std
cmpsb
mov
or
add
andl
in
adc
add
adc
dec
in
test
mov
stos
and
mov
sbb
mov
lock
mov
inc
popf
aas
jb
movsl
addr16
fwait
sub
imul
adc
add
scas
cs
adcl
adc
xor
pusha
adc
ljmp
and
rorb
add
push
and
and
pop
mov
dec
cmpl
xchg
cmpl
int3
cmc
sbb
pop
shrl
push
mov
jmp
push
pop
xor
inc
enter
jle
pop
add
cmp
mov
adc
pop
mov
add
ss
add
or
push
mov
push
adcl
cmp
sbb
jbe
fsubl
mov
adc
mov
xchg
mov
xchg
outsl
dec
sti
cld
andl
and
sarb
jge
push
imul
call
or
xor
scas
add
push
aam
and
push
add
cmpsl
addl
xchg
adc
and
imul
out
fdivl
ds
push
je
jg
fs
push
lret
les
sbb
jge
dec
or
mov
sets
jecxz
lret
maxps
push
mov
push
cli
jo
mov
jge
push
push
cmp
sbbl
fs
fidivrl
xchg
rolb
rcrb
jge,pn
cmp
mov
dec
cli
mov
pusha
ficompl
fdivl
stc
adc
push
rorb
inc
add
leave
push
insb
or
sub
inc
aam
add
cmpsl
int
sub
xlat
or
push
pop
sbb
outsb
je
aaa
push
inc
sarb
mov
cmp
xlat
popf
ds
cmp
movsb
push
mov
dec
mov
or
push
into
sub
add
insb
jge
addr16
daa
xchg
outsb
mov
cmp
dec
divl
out
int3
mov
or
sbb
filds
aas
gs
add
dec
adc
incl
mov
mov
cwtl
mov
js
inc
aad
push
jmp
push
pop
mov
aas
jmp
stos
int3
shl
push
adc
call
xchg
loopne
push
cli
iret
xor
pop
push
push
push
push
movsb
adc
fisttpl
push
leave
jne
and
sbb
imul
push
pushl
hlt
pop
rclb
mov
daa
inc
pushl
in
pop
cmp
jbe
inc
xchg
idivl
push
pop
push
sbb
ja
jmp
in
fldcw
add
sub
adc
lret
negl
cmpsl
or
cmp
nop
data16
cmc
out
xchg
daa
sbb
pop
clc
jne
mov
push
cmp
adc
loopne
call
inc
mulb
mov
leave
xchg
out
push
cmpsl
mov
mov
rclb
nop
or
jmp
jl
mov
cmp
sbb
popa
in
ss
adc
call
cmp
sbb
xchg
and
hlt
in
add
xor
and
call
mov
je
jno
rclb
pop
mov
fldt
inc
inc
add
jae
adc
hlt
inc
jmp
add
pop
push
icebp
inc
mov
cld
nop
sbb
pop
xchg
mov
rorl
cs
xchg
fisttpl
out
icebp
dec
shl
xor
and
push
in
jmp
dec
sbb
pop
adc
dec
mov
or
cmp
andl
add
push
xchg
std
dec
and
and
xor
mov
sbb
mov
push
jo
ds
add
into
inc
call
xor
xchg
cwtl
jl
loopne
mov
push
jae
sarb
pop
fildll
sub
cmp
cmp
pop
sti
xor
into
adc
andb
pop
sub
mov
and
or
push
mov
das
inc
xchg
gs
xor
dec
or
loopne
ret
lcall
movb
aad
dec
das
sub
xchg
pop
adc
adc
sti
sub
push
cs
or
jnp
adc
push
or
add
mov
mov
dec
subl
xor
xor
xchg
push
movsl
jmp
lds
add
repnz
in
add
and
and
mov
sbb
mov
cmpsl
sbbb
xor
cmp
fsts
ja
add
pushf
mov
xor
push
mov
dec
mov
je
and
outsb
shlb
pop
xchg
js
adc
fs
sub
or
pushf
inc
test
inc
rolb
push
arpl
jo
push
xchg
mov
iret
popa
mov
push
mov
daa
dec
mov
inc
mov
out
arpl
repnz
jnp
mov
pop
adc
xor
outsl
adc
cmp
jne
inc
jge
and
fldl
xor
mov
sbb
rorb
jp
adc
lahf
enter
popf
fidivrs
cmp
pop
jecxz
jg
jb
mov
inc
dec
mov
movsb
jge
xor
shrb
call
pop
movb
push
aam
mov
and
ds
ret
in
ret
fisubs
fadds
push
cwtl
pop
loope
mov
rclb
xlat
inc
jmp
xchg
ja
cmp
sub
fs
jge
xchg
outsb
pop
mov
add
cs
inc
adc
sub
mov
pop
or
inc
jo
sub
add
xor
pusha
inc
fdivs
int3
add
mov
ja
repnz
pushl
movsl
test
mov
add
push
push
jne
jne
dec
popa
jecxz
dec
fcoml
inc
sub
xchg
faddl
loopne
mov
jmp
jge
mov
clc
mov
jmp
add
js
std
or
insb
add
ret
mov
cwtl
sbb
scas
movsl
les
subb
lea
push
mov
ror
mov
div
sbb
xchg
push
pop
les
and
loope
push
push
stos
or
inc
add
xorl
movsl
add
push
cltd
or
cmp
push
mov
xor
cmp
adc
sbb
inc
aaa
popa
pusha
and
leave
push
ret
lods
push
push
fisubrl
push
add
push
sbb
mov
jo
enter
mov
xor
push
pop
push
inc
adc
inc
aas
stc
mov
sub
sub
adc
addl
mov
mov
mov
fistpll
cmp
je
or
mov
cmp
addr16
je
cmp
jne
mov
insb
stos
shl
or
pop
insb
push
dec
sti
dec
and
mov
pop
dec
xor
push
adc
fbld
push
jmp
testb
je
testl
jbe
sbb
cld
cmp
jbe
aas
xorl
stos
inc
cmp
je
leave
dec
fdivr
sub
inc
jmp
inc
and
or
xor
and
sahf
cld
push
imul
mov
cmc
sub
repnz
add
mov
or
loopne
cmpsb
push
adc
into
or
or
mov
sar
sbbb
sub
les
xor
cld
inc
pop
cmp
add
sbb
push
sti
cmp
outsb
hlt
cmpb
bound
xor
mov
xchg
pop
push
xchg
cwtl
rcr
mov
cmp
xchg
lds
out
inc
inc
xchg
push
jmp
inc
cld
shrb
sub
popa
leave
pop
jnp
push
mov
arpl
pop
test
dec
mov
cli
pop
add
lds
mov
data16
push
mov
faddl
paddq
jae
movl
rcrb
jecxz
add
pushf
aas
insb
sti
and
cmpsb
and
push
xchg
mov
cmp
fwait
sub
aaa
js
fs
jne
xor
or
lock
mov
mov
inc
rorl
call
cmp
dec
jge
jno
shlb
cmpsb
sub
push
jo
add
dec
pop
das
ss
push
add
and
or
xor
cmp
sarb
jbe
add
cmp
out
and
es
sub
sub
and
pop
or
mov
jbe
jl
or
adc
bound
das
shlb
cli
jbe
aam
cmp
jbe
loopne
stos
push
hlt
pop
arpl
pop
adc
adc
je,pn
test
jne
pop
adc
cmp
std
sub
jb
lock
mov
pusha
cld
lods
mov
adc
movb
inc
xchg
fadd
or
push
sub
and
inc
xor
push
adc
and
data16
mov
inc
sub
sbb
and
push
cmp
inc
inc
mov
adc
cmp
out
jae
add
jp
sbb
sbb
dec
inc
lcall
cmp
mov
je
pop
sahf
add
or
push
mov
sbb
daa
lods
adc
jne
hlt
adc
mov
cs
pop
mov
push
mov
rorl
dec
adc
jmp
out
into
inc
inc
adc
jp
clc
ret
add
leave
cmp
mov
js
jecxz
xor
jne
addb
js
mov
sahf
mov
imul
pop
addb
cwtl
add
add
jg
pop
push
aas
mov
in
cmp
push
mov
rclb
mov
sub
loope
ss
andb
cli
jecxz
or
adc
adc
mov
mov
lea
int
push
out
push
xchg
icebp
leave
xor
cwtl
and
mov
xchg
mov
jns
pop
lea
mov
sub
inc
or
add
lret
mov
cmp
lds
lret
jecxz
push
andl
sbb
int
movsb
cmp
pop
cltd
aaa
jp
pushf
enter
cwtl
or
mov
cwtl
cmp
es
iret
ret
adc
scas
es
push
pop
push
movl
lds
pop
mov
xor
push
xchg
add
cmp
mov
mov
sub
inc
xchg
push
mov
test
shrb
add
pusha
and
add
and
xchg
ss
mov
pushf
pop
loope
popf
int
js
stos
xorb
push
add
mov
je
pushl
fcompl
cmpb
lea
jle
mov
jae
pop
push
push
das
popa
movb
imul
sbb
cli
push
dec
lea
rcrb
pop
sub
enter
bnd
push
inc
fcmovbe
pop
xor
and
mov
pusha
mov
imulb
push
gs
add
ss
out
inc
inc
fwait
cmp
movsb
inc
push
nop
pop
pop
nop
push
into
test
cmp
or
or
out
and
fcoms
movsl
rorl
adc
outsb
cltd
mov
aaa
push
ret
idiv
pop
je
test
dec
push
inc
inc
and
xor
push
fs
mov
or
shll
adc
mov
xor
xor
cmp
xor
lea
call
adc
cmp
pop
or
inc
push
fdivrs
shl
and
sarb
lea
sbb
jo
sbb
sbb
inc
push
mov
lock
in
mov
xor
mov
loop
inc
and
stc
je
fdivs
aaa
les
add
mov
add
add
pop
xor
mov
mov
mov
add
or
faddp
and
pusha
loop
jp
pusha
jb
loopne
decl
in
adc
roll
push
mov
pushw
out
xchg
or
mov
mov
mov
rcl
add
push
and
add
push
mov
or
or
push
ljmp
push
clc
mov
xchg
adc
bound
and
mov
inc
push
push
popf
test
repnz
xchg
addl
dec
xchg
and
cmp
popf
movsl
jb
xchg
cltd
cmp
jg
sbb
cwtl
pop
inc
loope
fnsave
cmp
pop
frstor
ss
xchg
push
enter
xchg
fs
pusha
cmpsl
xor
push
and
lea
adc
popa
out
and
cmp
jne
insb
add
pop
cs
inc
or
int3
in
rorb
push
sbb
sub
ficomps
add
add
outsl
sub
and
mov
jne
xchg
mov
ds
pop
cwtl
cmpl
dec
push
cmp
test
ficomps
pop
mov
or
out
add
dec
aad
cli
xor
insl
ficoms
xchg
sti
lock
add
js
js
cmpl
outsb
ficompl
in
andl
int
mov
add
in
sub
pop
fcmovu
and
xchg
rolb
add
jmp
bound
and
jnp
fstps
cmp
mov
push
sbb
sbbb
mov
adc
jne
icebp
popf
jne
push
mov
jne
lock
setle
mov
adc
loope
mov
push
addl
sub
dec
ret
dec
cmp
fisubrl
ja
loope
adc
mov
ret
add
dec
loope
and
insb
ja
roll
mov
xchg
jne
mov
shll
icebp
cmpsl
lods
stc
rclb
rcrb
rorb
cmpsl
mov
lcall
push
xor
xlat
push
aas
je
cmp
subl
and
jne
push
imul
jne
stc
adc
sbb
incl
test
ficoml
jg
pop
mov
and
sub
or
mov
jo
lds
mov
lret
sub
call
cmp
int3
loope
mov
sbb
pop
ds
je
pop
in
pop
sbb
enter
add
je
mov
je
imul
sub
imul
adc
int
sub
fdivl
jg
add
ret
or
sbb
push
add
xlat
fstpt
inc
es
mov
sub
decb
pop
dec
push
mov
add
cmpl
lock
xchg
dec
bound
orl
sbb
pop
cs
lret
pop
fs
push
lods
or
inc
decb
out
cmpb
or
or
jmp
mov
push
add
push
adc
adc
or
push
cmp
std
rolb
std
push
mov
adc
mov
repz
push
popa
fildll
movsl
aas
add
inc
arpl
mov
pop
xchg
sub
mov
push
pop
push
push
lock
xchg
jb
pop
push
push
pop
pop
pop
cs
lret
pop
pop
pusha
pusha
fs
pop
or
adc
pop
sub
popl
xor
ror
push
stc
push
or
enter
mov
imul
and
push
fs
push
frstor
jmp
ja
push
dec
add
sbb
jmp
push
rcll
insb
add
add
dec
adc
push
add
popa
push
add
or
sbb
or
inc
adc
cltd
dec
sub
add
adc
sub
outsb
bound
xor
test
push
jecxz
push
adc
or
add
daa
mov
push
cmp
xor
rcrl
leave
je
and
sbb
ljmp
popf
jecxz
sbb
inc
outsb
lret
fwait
clc
pop
dec
cli
jp
push
pop
jmp
push
jecxz
test
stc
sub
enter
movsl
popa
inc
into
or
sti
and
imul
jmp
mov
and
cmp
frstor
or
push
gs
cmp
mov
push
and
inc
lods
xor
mov
lock
xor
sti
add
fs
es
sti
rcrb
mov
pop
push
mov
sub
subl
push
pop
xor
mov
mov
movsb
fcmovne
test
imul
popa
xor
lret
je
add
and
push
mov
daa
aaa
sub
dec
add
dec
add
ss
es
outsl
adc
in
in
gs
jne
pushl
or
inc
sub
je
jg
mov
roll
ret
inc
mov
nop
mov
and
sar
cmp
je
push
aas
cs
bound
adcl
pushf
add
pop
sbb
pop
add
push
sbb
ret
cmp
mov
push
gs
sbb
sub
sbb
adc
ds
andb
mov
mov
faddl
call
fdivl
mov
cmp
jne
or
jl
push
into
sbb
add
pop
jbe
jo
pop
lcall
sbb
loope
test
test
je
sub
out
or
daa
cs
jae
js
lods
fcmovb
push
sbb
and
add
and
push
push
adc
sbb
mov
ret
or
inc
stos
sub
mov
xchg
mov
xor
mov
hlt
in
subb
or
add
imul
hlt
mov
hlt
cmpsb
int
cltd
mov
jge
jge
je
divb
push
xor
jle
or
push
inc
add
or
adc
mov
push
add
push
cld
mov
xor
inc
cmp
lea
jns
adc
inc
hlt
mov
lock
add
cli
hlt
cmp
push
add
and
mov
loop
inc
inc
mov
cmp
ljmp
hlt
mov
enter
jne
je
pop
jb
daa
and
repz
outsl
adc
mov
mov
pop
call
mov
ret
and
int3
cli
add
pop
jg
loopne
pop
jmp
popa
lea
test
test
xchg
outsl
orl
sarl
and
push
pop
cs
mov
jne
shrl
mov
push
rclb
hlt
push
add
test
stc
add
inc
mov
push
or
jle
out
fisubl
loope
adc
pusha
lods
xor
jb
xchg
push
cmpb
mov
xor
adc
add
lds
push
fsubl
mov
jo
out
xchg
and
or
mov
sub
push
cld
mov
sarb
fsub
pop
cmp
push
adc
pop
sbb
push
pop
dec
mov
fisttpl
pop
rcll
pusha
es
inc
je
xchg
sbbb
and
mov
movsl
test
adc
dec
sub
mov
sub
push
push
push
out
push
popa
stos
in
add
add
dec
push
in
loopne
sbb
cmpb
xor
mov
adc
inc
loope
nop
inc
and
add
jo
sbb
andb
mov
mov
mov
mov
dec
push
add
mov
je
or
dec
jne
jns
cmp
add
jmp
xor
xor
in
sbb
jg
jbe
push
aas
in
sbb
mov
jmp
xchg
cmp
test
cmpl
jo
out
cmp
cld
xor
ficoms
int3
xor
inc
shlb
repnz
ds
sub
add
fcomps
loop
out
neg
inc
call
cltd
add
cmp
sub
lock
call
insl
popa
and
and
mov
mov
inc
sub
insb
arpl
sub
imul
in
lret
push
mov
roll
fs
push
sub
inc
mov
das
pusha
inc
cmp
jl
jmp
loope
push
pop
pop
orb
clc
sbb
add
lds
cld
movsb
mov
mov
std
or
pop
push
cmp
movl
mov
mov
ror
mov
push
xchg
sarb
insb
xor
lea
ds
push
sub
xchg
les
jge
and
insb
cmpsb
dec
add
rep
subl
and
int3
mov
mov
adc
add
cmp
or
pusha
add
dec
clc
inc
push
xor
dec
pop
out
mov
and
inc
ds
inc
call
jg
push
xor
clc
jbe
mov
jne
jmp
push
fs
cmp
add
clc
mov
add
es
dec
add
push
or
int3
or
leave
push
in
js
ret
or
iret
stc
loope
dec
je
sbb
mov
pop
xchg
sbb
or
cwtl
hlt
sub
jno
outsl
sbb
aas
in
nop
cmc
xchg
cli
push
sbb
add
pop
xor
mov
mov
inc
cld
dec
fisttpl
call
add
inc
fsubrs
mov
movsb
not
arpl
fcomps
or
jae
sbb
adc
or
popa
pop
leave
sub
jl
jmp
cmp
mov
or
shl
cs
add
ja
inc
jo
jns
insb
stos
mov
test
jo
pop
jmp
push
loopne
add
sbb
dec
cmp
repnz
add
mov
xor
inc
adc
cwtl
jle
push
add
and
mov
dec
mov
and
push
push
mov
lock
mov
loope
pop
xchg
xlat
movl
adc
iret
jno
ja
popa
or
cmpsl
jo
movb
loopne
mov
cltd
jo
push
add
sbb
or
cmp
jp
add
pop
or
daa
push
rclb
xchg
inc
or
mov
data16
adc
pop
dec
ljmp
mov
shrl
push
stos
pop
inc
out
pop
movsl
mov
inc
movl
fisubl
sahf
or
or
cmp
mov
sub
insb
popa
inc
sub
ret
pop
fisttps
sbb
call
cwtl
mov
sub
or
pop
fcmovb
enter
or
bound
sub
push
cmp
push
mov
xor
xlat
inc
cld
sbb
mov
and
stos
xlat
rcrl
add
cmpsb
or
jbe
add
mov
das
push
sub
stos
or
sub
push
lds
loopne
xchg
lock
xlat
data16
stc
loopne
add
cld
adc
mov
and
and
adcb
add
inc
scas
iret
or
adc
push
jne
cmp
nop
adc
or
mov
imul
inc
fists
aaa
jbe
fucomp
cmp
push
and
xlat
mov
push
xor
stc
fcomps
push
or
dec
subl
add
push
push
mov
push
push
pop
inc
sub
mov
movl
add
xchg
bound
lods
sbb
push
adc
enter
cmpsb
imul
cmp
push
sbb
popf
and
icebp
mov
add
aam
sbb
iret
ret
xchg
mov
xor
add
push
push
stc
pop
mov
cmp
inc
xor
add
int3
ret
jo
inc
add
sub
jnp
mov
jnp
mov
lret
xchg
jb
int
jo
fadd
fsubrl
icebp
dec
push
mov
mov
stos
loopne
pop
ret
shl
gs
or
loope
or
mov
xchg
out
aam
pop
rclb
jb
mov
outsb
and
cmp
mov
dec
jge
cmp
xor
fsubs
mov
fmul
sbb
and
inc
and
js
sbb
add
test
hlt
lret
jge
mov
or
mov
or
pop
leave
mov
clc
or
mov
cmc
clc
mov
jo
and
fstpl
inc
push
mov
addb
inc
dec
adcl
mov
mov
dec
cmp
or
adc
sbb
inc
sbb
mov
test
orb
shl
xor
pop
inc
movsl
pop
jnp
out
jmp
adc
and
imul
das
jecxz
dec
imul
mov
xchg
popa
or
adc
pop
push
dec
mov
push
and
sub
cmp
addb
dec
std
dec
add
cli
lcall
roll
cs
decl
push
xor
mov
sub
repnz
sbb
xor
ficomps
inc
and
pop
inc
inc
or
and
fimull
inc
sbb
xchg
mov
enter
jb
xchg
add
sub
dec
aam
xorl
adc
dec
or
mov
cs
jnp
rolb
jae
scas
push
push
adc
outsl
addl
adc
sbb
mov
xchg
dec
je
sbb
fmuls
pop
lret
fstl
mov
arpl
xor
mov
add
adc
push
jmp
jge
adc
enter
inc
pop
mov
roll
jae
cmp
int3
push
mov
ljmp
pop
and
sbb
sbb
loopne
mov
rcrl
hlt
lea
adc
cld
in
cmpl
ja
adc
and
and
pop
add
and
call
jnp
push
jne
push
mov
and
out
mov
lret
and
mov
and
and
pop
ss
pop
mov
mov
pushf
push
cmp
out
mov
inc
lods
add
mov
lods
or
repnz
shlb
ja
push
sti
push
adc
dec
adc
mov
push
inc
xchg
lcall
inc
add
fs
loopne
or
xor
add
mov
out
pop
xchg
andb
dec
xor
mov
or
pop
jmp
adc
lahf
shll
jne
push
push
shll
mov
mov
je
dec
adc
cmp
lcall
xchg
lcall
out
sbb
or
in
lahf
int
shr
dec
test
sbbl
pop
or
mov
cmp
push
mov
loopne
loopne
outsb
mov
les
push
fadd
xchg
enter
aam
mov
pop
jbe,pn
fdivl
ret
lea
mov
fwait
and
insb
sbb
xchg
add
push
or
cmp
jbe
shrl
adc
aam
and
pop
out
fidivl
enter
mov
jbe
mov
jne
cmp
push
faddl
push
rcrb
jb
sub
sub
movsb
push
adc
loopne
dec
movsb
aam
dec
add
bound
xchg
mov
cs
adc
ret
icebp
inc
in
rcrb
les
cli
test
pop
or
add
dec
fst
and
stos
mov
cwtl
adc
pop
incl
cmp
and
jae
mov
shrb
cmp
jmp
mov
mov
add
cwtl
pop
add
pop
inc
inc
sbbl
push
and
pop
mov
push
mov
ret
jo
xchg
dec
lds
push
loopne
push
or
push
mov
lahf
xor
jmp
cmp
jns
divb
jo
das
ljmp
mov
and
aam
pushf
fs
inc
sbb
test
sbb
adc
or
mov
test
and
jge
lods
and
adc
jmp
in
pop
mov
xchg
jne
inc
and
adc
jmp
mov
mov
push
mov
jle
jg
or
mov
xor
ret
mov
mov
inc
add
or
divb
sub
cmp
rcl
mov
mov
roll
push
mov
push
imul
add
mov
xchg
push
mov
xchg
xor
inc
push
es
inc
sarb
aaa
cmp
jb
jnp
lods
mov
ja
idivl
inc
push
xlat
dec
pop
lods
sbbb
movsl
pop
jne,pt
mov
push
es
aas
xor
or
mov
xor
cmp
dec
rclb
jmp
push
mov
ds
enter
hlt
jne
je
pop
cmpsl
sub
sub
add
out
xor
push
xchg
dec
add
push
add
pop
insb
sbb
xchg
mov
ret
enter
inc
ret
sbb
sbb
bound
in
and
sbb
je
icebp
test
sbb
jne
ret
sbb
adc
cmp
je
push
sub
sbb
adc
mov
and
loop
lock
leave
adc
push
and
ret
imul
dec
xchg
adc
xchg
lret
add
jmp
xor
cmp
fucom
add
sbbb
ja
lods
cmpsl
fstl
ss
xchg
ret
enter
cmp
out
dec
in
pop
inc
sbb
out
bsr
mov
or
gs
mov
mov
adc
sbb
and
jo
adc
add
adc
jb
and
adc
adc
mov
icebp
inc
fs
adc
int3
mov
pop
aaa
cmp
push
push
add
stos
and
mov
or
inc
clc
add
mov
xor
inc
pop
sub
adc
xor
daa
stc
rcrb
scas
jo
into
rorb
cmp
mov
lds
lods
mov
je
inc
sub
test
movsb
shlb
mov
addr16
adc
and
das
jmp
cmp
or
lods
push
jo
out
cld
cmp
bound
dec
or
mov
xchg
jbe
add
fmuls
movsb
cmpb
adc
push
in
mov
inc
xchg
movsb
stc
mov
cmp
ljmp
fists
jnp
adc
adc
sub
jo
pushf
out
or
xchg
rorb
cli
push
add
xor
add
sbb
aaa
cmpsb
pushf
imul
jne
leave
popf
dec
adc
movb
pop
mov
addl
sbb
popf
and
sbbb
add
lret
pop
inc
ss
add
lea
sti
or
xchg
repz
push
cmpsb
icebp
pop
xchg
test
jno
jne
pusha
test
dec
fdivrs
push
mov
inc
add
call
bswap
mov
addr16
test
insb
aam
jnp
mov
and
mov
inc
or
xchg
xor
push
pushf
repz
js
int3
mov
sahf
xor
dec
cmp
adc
lea
xchg
push
mov
and
cmpb
out
add
xor
mov
push
movb
xor
pop
jne
pop
into
fisubrs
sbb
mov
mov
rorl
mov
icebp
imul
mov
jge
pop
sti
push
push
cmpl
xor
jno
loope
xor
cmp
cmp
inc
jl
cmp
jg
cmc
outsl
sbb
add
test
jmp
loop
mov
xchg
add
dec
push
je
or
movsb
push
clc
sbb
cmpsl
mov
sub
mov
sbb
insl
sbb
loopne
ficompl
jge
hlt
sbb
ret
add
popa
or
jmp
add
xor
sub
sub
sbb
ret
mov
mov
mov
jb
push
add
cltd
adc
add
push
inc
scas
push
shlb
enter
push
push
add
movl
jle
or
xlat
cmp
add
mov
push
adc
pop
dec
and
popl
jl
mov
test
and
inc
push
or
mov
addl
push
movsl
lahf
insb
cmp
jge
dec
push
mov
mov
mov
push
add
jno
jl
or
int3
jno
jecxz
pop
out
fildll
es
shrb
xor
mov
lcall
mov
lea
shrb
mov
and
addr16
icebp
inc
push
or
inc
out
loope
std
call
repnz
sbbl
jae
pop
dec
jmp
add
aaa
add
mov
inc
test
rolb
push
or
into
xor
ja
push
jg
jb
add
pushf
inc
dec
adc
imul
cld
roll
push
push
mov
cmpl
push
mov
inc
mov
mov
or
sub
or
mov
or
add
dec
or
and
mov
rorl
aas
mov
push
int
inc
jmp
stos
lock
pop
std
and
mov
inc
icebp
sbb
andb
adc
inc
dec
push
pop
inc
jmp
fimuls
sbb
psubw
mov
popa
mov
sub
sub
xchg
add
jmp
mov
std
add
ret
outsb
sub
jo
mov
push
add
push
and
pop
imul
xchg
pop
push
cmpsb
pop
adc
sbb
or
mov
cli
rcl
cmpl
pop
cmp
pop
cmp
jge
inc
fs
push
pop
xor
or
fs
push
mov
sbb
dec
fisttps
js
inc
push
imul
rclb
orl
jmp
scas
hlt
mov
jns
pop
sbb
lods
mov
mov
adc
push
stos
add
push
loop
int3
andl
lea
lods
insl
dec
inc
mov
mov
cmp
pop
insb
or
and
outsb
dec
mov
cltd
pushf
mov
roll
sub
mov
test
jecxz
xor
shll
test
inc
pusha
lahf
in
mov
push
jns
sub
orb
rcrl
daa
mov
and
adc
inc
xchg
and
adc
add
mov
mov
ljmp
pop
clc
or
dec
cmp
lcall
and
push
xor
sub
cltd
repnz
filds
mov
or
nop
xor
dec
and
pop
jmp
or
outsb
dec
cmp
out
pop
rolb
pop
add
push
jecxz
or
pop
movsb
and
dec
bound
or
lahf
mov
sbb
movsl
add
xchg
movsl
jbe
inc
cmpsl
mov
enter
loope
rcrb
stos
push
push
fmuls
push
push
aad
scas
sub
cmp
inc
js
pusha
mov
add
xor
push
dec
cld
adc
push
imul
mov
jmp
or
push
aas
repz
fs
jmp
movsl
add
adc
ret
lret
or
ret
cmp
mov
or
insb
or
push
rol
sub
je
dec
inc
xchg
ja
xor
les
notb
test
mov
pop
imul
test
rcrb
push
mov
pushf
xor
idiv
jae
lea
jmp
cmpl
sub
shll
mov
push
and
push
test
push
pop
and
aam
scas
movsl
add
mov
jmp
sbb
inc
xchg
xor
in
mov
add
sbb
inc
add
xor
dec
xor
imul
lds
cmp
sub
cld
and
push
flds
aad
lcall
ljmp
add
lret
push
inc
loopne
mov
inc
xchg
ja
mov
push
arpl
xchg
mov
add
jb
cmp
add
inc
add
fwait
sbb
scas
loopne
ja
or
dec
lods
pusha
cmp
adc
inc
inc
xchg
pop
add
xchg
pop
bnd
xchg
cmp
jnp
lea
movsb
inc
stos
xchg
test
mov
scas
out
daa
adc
cmp
dec
jo
xchg
movsb
mov
cmpsl
roll
dec
idiv
loope
cmp
xchg
mov
mov
mov
je
jecxz
inc
push
sub
push
icebp
jl
and
push
jno
sti
push
je
cwtl
xchg
mov
inc
adc
sbb
test
sbb
in
iret
xchg
js
cmp
stc
xchg
and
sub
or
shrb
cmpsl
pushl
xchg
test
or
fmull
pop
mov
add
in
fs
push
popw
dec
jb
outsb
int
fimuls
jmp
xor
mov
je
cmp
stos
psadbw
pop
mov
sbb
adc
mov
push
addl
mov
sti
je
and
dec
adc
add
xchg
cmc
std
enter
cmp
pop
adc
add
nop
dec
sub
pop
add
je
jp
test
push
popl
or
inc
nop
fstps
add
xchg
inc
xchg
push
pushf
and
loop
adc
jae
push
xchg
add
xchg
loopne
js
jl
js
js
and
pop
pop
jmp
inc
shlb
cmpsl
mov
xlat
jo
xor
movsb
push
test
jb
mov
inc
adc
lahf
inc
sbb
js
fmuls
call
pop
or
jb
je
sub
cmpl
push
adc
data16
in
mov
mov
add
or
je
test
bound
push
jns
data16
jne
mov
mov
test
cmp
dec
shrl
test
add
cmp
in
stos
les
or
orb
loopne
mov
mov
imul
jb
add
mov
and
adc
xor
loopne,pn
mov
cmp
call
subl
or
push
js
cs
xor
sub
cmp
dec
shll
cld
lods
push
mov
adc
lret
or
cld
fadd
dec
inc
aaa
xor
sbb
mov
or
fstl
mov
mov
inc
in
dec
sbb
add
lahf
pop
scas
lea
fwait
adc
pop
jae
pop
cs
pusha
push
ret
sar
mov
push
hlt
neg
sbb
and
in
testl
movzwl
push
adc
insb
les
mov
mov
inc
leave
test
js
mov
adc
jmp
xor
jge
sarl
add
add
cmp
or
aas
daa
ret
push
lret
cmpsl
je
movsb
adc
mov
inc
cmpl
jne
cmp
jbe
jmp
adc
or
jne
push
ret
rclb
cmpb
hlt
shld
add
ds
data16
mov
pop
push
push
xchg
popa
mov
std
cs
cmc
jmp
pop
jl
pop
mov
addl
dec
xchg
roll
or
adc
sbb
and
xchg
cltd
push
divb
cwtl
sbb
pop
stos
mov
or
scas
xchg
loope
inc
add
and
js
adc
dec
xchg
xchg
dec
jg
xor
xor
mov
add
ja
pop
inc
xorb
imul
or
repz
add
shlb
sahf
push
pushf
or
mov
mov
jnp
inc
out
les
out
adc
enter
push
das
push
je
out
push
lret
xor
pop
inc
in
xchg
pop
nop
out
add
inc
out
std
adc
inc
or
ljmp
mov
enter
pusha
fildl
add
mov
inc
adc
cmp
adc
and
sahf
or
sbb
cli
jae
andl
leave
ret
mov
or
movsl
clc
sub
add
adc
inc
add
xchg
add
divl
pop
ffreep
and
cmp
sbbb
cmp
lods
lahf
pop
out
enter
sbb
mov
jg
xor
or
cmpl
or
stos
jmp
loop
ret
je
push
mov
loopne
pushf
out
push
sub
aas
mov
jecxz
push
loopne
lods
arpl
mov
pushf
test
xor
mov
inc
shlb
mov
mov
lock
xlat
lret
add
mov
cwtl
add
fcoms
ljmp
fstpl
cmp
jae
inc
xor
mov
cmp
pop
sbb
cld
mov
pop
xor
adc
and
cmp
mov
out
push
cmpb
mov
jae
mov
push
adc
mov
xor
pop
sbbl
addr16
mov
lcall
or
je
cmp
cmp
loope
or
js
movsb
sahf
jno
jl
push
xlat
xor
fwait
mov
add
cmpsb
push
lret
std
mov
aas
or
sbb
inc
dec
popf
add
mov
inc
lret
out
jb
out
aas
add
push
ret
mov
xlat
movl
insb
or
inc
in
mull
jmp
mov
in
dec
js
mov
jmp
push
dec
add
push
dec
mov
and
add
fstps
cld
adc
sbb
sub
inc
jle
mov
push
movsl
fsubl
pusha
or
and
dec
test
jge
cmpsl
enter
cmp
pcmpeqd
sub
arpl
test
es
sbb
or
xor
sbb
push
and
fcmovnb
add
dec
lahf
xor
pop
xlat
cmc
add
cmp
and
fisubrs
pop
cmp
mov
gs
push
sti
loop
xchg
and
mov
repnz
mov
inc
or
add
xor
shrl
inc
sub
xchg
sbb
push
scas
mov
and
rcr
mov
ret
adc
je
sarb
je
or
inc
std
clc
xorl
in
ret
sub
mov
out
push
aam
rorb
cmp
and
mov
push
xchg
dec
mov
out
es
xchg
jg
add
add
loope
imul
mov
mov
push
jge
pop
ljmp
pop
rcll
fdivrs
cmp
mov
cli
and
add
ret
jle
dec
pushl
dec
pop
pop
in
mov
arpl
mov
or
rcrl
and
mov
inc
in
fnstsw
sarb
ret
mov
cmp
or
xchg
xor
pusha
push
ja
sti
jb
mov
dec
bound
mov
sub
sbb
add
lea
rorb
insb
fistps
add
xor
add
pushf
xor
je
xor
sub
mov
cmp
addr16
das
sbb
pop
je
dec
adc
mov
jae
lea
daa
imul
ja
cmpb
jne
fidivl
add
or
jp
addr16
dec
add
decl
jb
jae
stc
sbb
daa
mov
add
dec
pop
mov
lea
out
sbb
sbb
out
out
sti
push
dec
or
dec
lock
bound
jno
cs
fs
jae
shl
xchg
xor
jae
leave
jmp
push
or
jmp
fsub
pop
rorb
rclb
jo
inc
lods
add
sbb
cmpsl
es
mov
dec
shl
sbb
add
cs
das
cltd
mov
imul
fmull
and
mov
or
clc
xor
xor
and
mov
sbb
adc
push
adc
fdivrs
jne
sub
inc
mov
test
push
lock
das
dec
and
sub
inc
push
mov
mov
fcomps
sahf
xor
or
inc
data16
add
repnz
xor
pop
movsl
sub
popf
dec
pop
fstl
dec
cmpsl
or
pop
adc
fists
mov
nop
and
addr16
clc
or
fsub
add
add
add
add
cmpsb
add
aad
fistl
ret
inc
mov
lahf
mov
popf
testb
cmp
pop
mov
icebp
jne
add
mov
push
jg
pop
je
lea
addb
shll
idiv
inc
cmpl
adc
loope
dec
ds
cmpsl
add
dec
mov
shll
and
data16
mov
lock
sbb
cmp
call
jns
adc
inc
sub
inc
sarb
push
je
dec
add
fmull
les
orl
pop
mov
jno
ds
rol
aam
outsb
sbb
jmp
or
dec
pushl
and
cmpsl
add
repnz
js
pop
rol
lock
mov
mov
les
cmp
push
cmpb
mov
jb
push
jae
lea
push
sub
mov
inc
popa
pusha
stos
lods
push
pop
stos
jnp
jg
fs
ja
repnz
adc
jo
pop
ret
mov
leave
inc
ret
sub
cmc
pop
out
and
adc
fildll
pop
cmpsl
imul
std
add
cmp
xor
fnstenv
inc
jmp
push
cmp
into
rcrb
cmp
sub
popa
mov
xor
adcb
sub
fldz
xorl
inc
cltd
mov
sub
and
push
sahf
popf
ljmp
add
mov
add
cmc
xchg
jo
out
insb
testb
imul
out
dec
movsl
add
in
mov
lea
push
mov
push
cmp
fisubrl
sub
mov
push
cmp
and
or
add
cmp
aas
push
test
test
repnz
lea
mov
mov
lret
cmp
mov
push
mov
popf
cmp
push
aad
xor
out
xchg
test
mov
adc
or
or
cltd
push
stc
push
mov
add
out
gs
cld
or
je
xor
jge
cmp
mov
cmp
in
addr16
inc
mov
jb
inc
mov
ds
mov
jo
pop
pop
popa
movsb
cmp
cmp
sub
shr
sahf
bound
inc
or
add
shll
fsubs
jbe
ret
inc
jb
aad
roll
and
sahf
cmp
push
les
clc
mov
dec
or
out
std
cmc
inc
or
mov
sub
cmp
xlat
or
insl
pop
stc
popa
imul
mov
arpl
imul
imul
xorb
fs
movsl
or
scas
xchg
pop
in
addb
loopne
test
mov
and
and
nop
push
cmp
sbb
and
shrl
fdivr
adc
ja
add
mov
inc
or
xchg
push
cmp
adc
add
xchg
jmp
xor
rorb
imull
xor
sbb
andb
lret
pop
pop
sbb
or
fidivrl
iret
add
or
or
sub
mov
es
adc
dec
lock
cmp
imul
lods
jmp
icebp
les
jbe
cmp
int3
loop
ret
lret
xor
cmpl
cld
into
jne
pushl
mov
scas
jg
cmp
add
addl
pop
xchg
jo
nop
movsb
sub
sub
fiaddl
pop
loopne
mov
orl
test
pop
subl
dec
push
sub
rorb
xor
ret
lret
lods
add
jg
rol
test
jmp
push
and
outsb
mov
inc
mov
loope
movsl
mov
dec
jmp
jge
iret
adc
dec
cmp
test
mov
pop
adc
or
mov
dec
sub
pop
decl
cmp
push
adc
adc
mov
push
add
shll
sbb
pop
shlb
lds
mov
xchg
mov
ss
out
push
push
pop
xchg
lret
notl
das
mov
int3
adc
push
push
pop
cmp
out
mov
les
ja
xchg
push
pop
test
sub
ret
inc
mov
jge
cmp
shlb
adc
test
push
inc
adc
mov
sti
add
jne
lds
jne
push
out
adc
cwtl
cwtl
pop
sbb
adc
adc
std
lock
mov
mov
inc
sbb
pusha
xor
fmuls
jns
mov
push
mov
push
repnz
shrb
sub
adc
or
mov
stos
push
shll
loope
cmp
movsb
push
out
mov
lcall
dec
or
cld
add
dec
or
push
xor
or
in
sbb
push
les
jl
inc
push
xor
cli
leave
push
scas
add
sub
arpl
pop
gs
aam
shll
or
add
das
lods
push
add
rcll
das
nop
or
addr16
push
cmp
cmp
or
adc
mov
test
push
adcl
xor
nop
int3
add
pushf
inc
adc
pop
fwait
pop
jnp
inc
ret
mov
adcb
push
push
test
dec
cmp
divb
aam
fst
sti
js
push
push
or
pop
sub
sub
into
movzwl
xchg
incb
test
je
test
xchg
or
jo
mov
pop
dec
jb
pop
push
mov
repnz
xchg
dec
daa
push
lds
jmp
js
push
or
rorl
sbb
cmp
call
popa
cmp
mov
push
clc
push
push
sbb
daa
fdivrl
sub
push
pop
fstpt
test
sub
pop
lock
adc
mov
popf
xorb
and
adc
add
pop
fbld
xchg
or
or
jecxz
push
xor
sbb
movsl
je
mov
pop
push
pop
jo
and
sbb
xorb
aam
mov
push
nop
sbbb
push
cmp
rorb
sbb
mov
sub
mov
ret
cltd
ljmp
inc
jnp
add
jle
mov
mov
pop
in
sbbl
shll
rol
shlb
sbb
xchg
movsl
adc
or
imul
aad
cmpsb
cmp
push
pop
sub
push
sub
xor
add
out
call
or
leave
inc
stos
or
xchg
ficomps
mov
ljmp
push
movsl
pop
popa
stos
movsl
daa
pop
sub
mov
ds
xchg
hlt
jp
push
xchg
scas
sub
cwtl
ret
pop
xor
sbb
repz
insb
lahf
inc
ds
push
adc
cld
push
testb
cmp
and
insb
lock
dec
clc
adc
sub
xor
and
xchg
test
int3
jne
test
jp
ret
jbe
mov
cs
fs
testb
sbb
push
push
sbb
clc
popa
std
adc
or
lret
sub
mov
test
or
mov
and
js
andb
add
mov
sbb
push
mov
sarl
cld
dec
cmp
adc
mov
das
bound
loope
jecxz
pop
jl
subl
les
into
sbb
mull
or
xchg
outsl
mov
add
xchg
mov
fsts
add
dec
and
and
js
adc
movsl
or
lea
sub
adc
mov
inc
cli
jg
sub
push
sub
push
jl
pop
cmc
das
dec
add
inc
or
mov
enter
ja
mov
daa
adc
sbbb
pshufw
loop
popf
dec
in
shrb
scas
xor
je
test
push
dec
push
in
arpl
ljmp
mov
mov
aas
int
mov
inc
dec
dec
push
pop
xchg
xchg
or
mov
mov
jmp
into
out
test
loope
sarl
or
orl
xor
into
jnp
loopne
push
cmp
xor
jecxz
dec
das
outsl
subl
jne
loop
inc
loop
daa
adc
js
dec
into
jl
mov
leave
sbbb
sahf
jno
std
shll
aas
lea
pop
ss
inc
or
cmpsb
ret
pop
out
int
inc
sub
dec
dec
jns
adc
lret
cmpl
shrb
fsubr
mov
mov
push
adc
shlb
inc
add
pop
adc
jmp
xlat
out
mov
and
sbb
rorl
push
xor
cmp
cmp
pop
test
mov
push
or
xchg
mov
ret
or
push
in
xchg
xchg
inc
push
xchg
adc
push
or
cmc
push
js
je
and
xor
outsl
subb
jmp
cmp
das
sbb
push
lods
pushf
jo
sub
dec
push
sub
adc
add
mov
dec
pop
fldl
out
push
xchg
lods
mov
insl
rolb
cmovge
dec
iret
pop
inc
push
add
xor
jo
inc
lret
mov
loop
pushl
cmp
jne
sub
push
pop
pop
sbb
adcl
roll
adcl
daa
bound
fadd
movsl
jnp
xchg
inc
in
mov
jnp
mov
jne
aaa
sbb
das
ret
adc
rorb
mov
aaa
rorl
add
pop
inc
adc
mov
pop
push
lds
add
je
dec
sbb
ret
lods
pop
loop
and
cmp
dec
mov
jno
or
add
pop
add
movsl
in
mov
jns
xchg
jne
xor
jp
in
data16
mov
or
fisubl
cmp
jne
xchg
popa
mov
pop
mov
jmp
jne
or
jne
adc
mov
xor
adc
cmp
jae
outsb
loop
push
pop
addr16
fists
lahf
pop
and
sbb
sarb
xorl
push
or
sub
pop
sahf
pop
sbb
fcoml
repnz
rcrl
sar
push
popa
inc
adc
jecxz
daa
dec
pop
lcall
test
sbb
push
sti
loope
movsb
inc
mov
mov
adcb
xor
sarb
sub
mov
out
mov
je
mov
mov
or
dec
or
bound
inc
lods
adc
outsl
jp
or
mov
xorl
mov
fnstcw
jo
dec
scas
lcall
inc
cmp
mov
sbb
pop
mov
daa
sub
xchg
jg
and
pop
or
xchg
sbb
pop
faddp
bound
mov
jo
movsb
sub
jmp
sarl
rolb
add
jae
cmp
push
xchg
sarl
les
sub
and
jnp
push
mov
icebp
xchg
mov
rorl
xor
rolb
dec
andb
rol
push
repnz
rolb
push
jne
dec
cli
or
pop
int
movsl
insl
sub
sbb
jne
add
pop
imul
xor
int
testb
sbb
dec
insb
jne
aaa
adc
sbb
cmp
scas
mov
and
adc
inc
mov
or
ret
scas
ficoms
and
sbbl
or
or
ds
push
or
jne
mov
adc
ret
xchg
cmpsl
leave
jo
or
xlat
fsubs
lock
adc
and
mov
imul
call
pop
push
sti
daa
jecxz
push
pop
into
fdivrl
jl
mov
rorb
sbb
cmp
test
movsb
cmpsl
fidivs
mov
push
pop
sbb
in
sbb
xor
push
pop
fdivl
and
fstl
jns
inc
dec
push
outsl
fdivl
sub
stc
ss
loop
mov
loopne
adc
jle
decb
or
or
ljmp
add
adc
adc
fldenv
sub
cmp
sbb
fs
ret
xchg
jge
dec
adc
fwait
and
xchg
sbb
clc
das
inc
js
sbb
sbb
mov
loopne
in
push
sti
loopne
stos
shlb
shrb
or
mov
mov
loope
add
and
andl
dec
and
shll
sub
cmpsb
adc
cmp
push
pusha
shll
jo
repz
mov
or
add
outsl
lods
imul
mov
enter
inc
cmp
sub
xchg
imul
xor
addr16
scas
sbb
shrb
xchg
or
repnz
divl
and
pop
movb
or
dec
or
mov
pop
xchg
push
fmul
orb
jl
js
or
orb
push
fs
adc
cmp
out
std
add
and
xchg
xor
in
push
mov
sbb
dec
out
out
addb
inc
push
pop
sbb
inc
in
clc
cs
adc
push
mov
push
jo
loop
sbb
cmp
sbb
adc
mov
add
push
adcl
and
mov
mov
add
test
dec
subb
stos
cli
sbb
rcrl
push
mov
popa
add
add
push
dec
cmp
push
pop
jo
inc
sbb
push
push
ret
pushl
daa
mov
jle
push
xlat
adc
jle
xor
sub
or
push
inc
add
in
push
lahf
ds
or
and
flds
cmp
jo
push
mov
and
test
and
xchg
add
add
pusha
and
sub
ja
adc
xor
dec
and
das
xorl
mov
mov
sub
push
jg
mull
inc
dec
adc
imul
or
test
inc
jmp
and
xchg
add
test
mov
imul
mov
push
sub
pop
sar
xchg
pushf
je
lds
add
aas
cmp
sub
sub
out
add
imul
rclb
scas
je
dec
add
xchg
stc
push
jne
mov
sub
sub
mov
pop
dec
jne
cmp
sub
data16
cmp
mov
adc
xor
dec
mov
fwait
pop
mov
jo
cld
mov
outsb
push
dec
mov
nop
ret
and
dec
jo
mov
push
xor
xor
or
hlt
adc
dec
mov
call
push
pop
dec
pop
push
push
inc
cmp
inc
shlb
popf
rorb
push
ljmp
push
fldt
pusha
cli
out
fidivrs
push
adc
andb
or
and
adc
lahf
sbb
outsb
es
jmp
call
dec
or
cmp
dec
lods
mov
arpl
es
sbb
inc
mov
xor
sub
xor
int
dec
jecxz
dec
add
mov
sahf
call
sbb
xchg
sbb
adc
push
lds
scas
pusha
insb
mov
or
sbb
lea
xchg
sbb
cmp
jo
pushl
pop
scas
neg
and
mov
adc
add
fcmove
lock
adc
add
pop
or
inc
lock
inc
js
shlb
sbb
je
pop
cmpsl
add
mov
je
cltd
test
jae
fs
nop
xchg
inc
inc
pusha
insb
insb
or
fs
jmp
xor
loop
cmp
jl
icebp
cwtl
push
xchg
or
je
popf
add
push
pop
mov
or
adc
adc
pushf
add
test
sbb
adc
call
push
hlt
sti
push
sub
jo
mov
inc
and
jo
pushf
jne
aas
dec
and
enter
cs
rclb
adc
adc
mov
push
lock
fs
cld
lock
cmp
jmp
stos
ret
sbb
cmp
adc
sbb
lea
mov
movswl
in
push
sbb
std
out
mov
lret
add
push
and
jo
fimull
shlb
lret
sub
dec
aad
sub
cmp
xor
mov
sahf
push
flds
mov
and
pop
nop
xchg
mov
test
or
movsb
je
shlb
and
aas
idivl
insb
dec
or
sbb
pop
mov
sbb
jp
test
jbe
cmp
push
adcb
out
inc
cmpsb
sbbl
mov
sub
pop
mov
sbb
popa
jge
ret
add
and
cmp
mov
and
popa
or
mov
mov
xor
push
aas
jne
fsubrs
movsb
xor
loope
pop
out
outsb
cmp
jp
push
mov
or
or
in
or
pushf
cwtl
fidivrs
inc
js
jg
sub
js
clc
mov
fwait
sbb
jle
cmp
push
into
pop
and
dec
rorb
insb
xchg
cwtl
push
mov
mov
sbb
dec
push
or
pusha
ss
sbb
xor
or
lock
fs
in
fcoms
lds
test
popa
add
movsb
mov
outsb
add
adc
xlat
sbb
mov
outsl
lds
pop
arpl
sbb
imul
ficoml
jb
hlt
inc
fdiv
sarl
mov
dec
or
sub
cmp
cmp
add
sbb
dec
mov
and
cmp
push
push
popa
or
aaa
jb
push
sbb
xchg
sub
add
xchg
into
in
outsl
push
ret
jge
int3
mov
dec
xchg
pop
sbb
sbb
cmp
lods
shll
mov
sbb
rolb
into
stc
xchg
adc
or
addl
mov
and
or
popa
out
pusha
xor
out
jmp
pop
in
adc
dec
push
xchg
push
cltd
push
movsb
push
push
push
stc
pushf
jo
mov
and
adc
push
out
xor
adc
xor
jo
aas
push
lea
and
inc
push
cli
sub
dec
sub
mov
jecxz
dec
inc
in
sub
js
cltd
mov
push
push
push
xchg
or
cmp
adc
fiadds
mov
js
lock
cmpl
adc
inc
out
push
jno
out
fmuls
aad
push
movsl
pushf
inc
rolb
je
push
sub
add
pop
pop
push
mov
mov
loopne
idivb
pop
jae
push
pop
call
inc
xor
mov
inc
xor
dec
pusha
sbb
pop
mov
movsl
add
or
jl
sbb
and
push
add
sbb
jmp
daa
sub
jo
popl
insl
bound
cmp
jg
lret
js
push
lods
test
out
push
lock
jmp
xor
pop
and
outsb
or
xlat
mov
cmp
and
sbb
cmp
repnz
hlt
sub
mov
ja
mov
fidivl
and
pop
lcall
ja
movsl
sbb
je
movsl
push
roll
divl
push
pop
ljmp
pop
lahf
push
cmpsl
adc
orl
add
inc
movsb
lock
outsl
test
mov
sub
outsl
xor
sub
sub
lea
pop
and
jmp
or
inc
push
or
cmp
mov
adc
fsubl
xor
and
stos
sbb
jno
push
and
inc
sbbb
pop
mov
add
inc
jg
adc
imul
gs
adc
push
lock
lret
push
or
xor
mov
mov
sbb
aad
loope
rorb
mov
roll
mov
add
jp
push
add
jp
cs
or
pop
lods
popf
fsubrl
pop
cmp
cmp
pop
adc
push
arpl
push
xchg
pop
pop
rcrb
or
xlat
mov
imul
and
sbb
jg
xor
call
or
jbe
jge
push
mov
push
jo
add
cmpsl
push
xor
sub
jne
jl
out
fstl
xchg
push
xor
push
or
mov
inc
insb
or
push
inc
mov
pop
in
xchg
cwtl
sarl
mov
xchg
adc
or
sbb
sbb
xchg
jbe
add
sbb
xchg
jb
mov
jnp
xor
fs
and
and
daa
int3
push
inc
xor
cwtl
xchg
mov
and
pop
adc
adc
xchg
add
fwait
xchg
add
xchg
cmpl
xchg
mov
dec
adc
pop
sbb
clc
js
jecxz
xchg
mov
mov
iret
adc
shll
inc
push
sbb
iret
ffree
std
push
nop
sbb
cmpb
leave
push
mov
or
or
mov
or
dec
pop
movsb
adc
jnp
lds
sbb
inc
push
inc
inc
ret
in
jmp
sbb
xchg
lods
adc
mov
lods
stc
inc
cmc
js
dec
cmp
sbb
jmp
pushl
jne
push
pop
mov
pop
add
push
sahf
ds
cmpsl
orb
jnp
idivl
mov
inc
xor
and
ret
push
std
or
add
or
mov
mov
sub
mov
in
adc
jl
andl
adc
popl
jbe
js
add
fs
pop
add
jae
in
dec
dec
pop
inc
jecxz
cmp
sahf
dec
cmp
repnz
jo
xchg
int3
ds
or
jbe
movsb
adc
scas
inc
xor
or
push
fcoml
fistpll
mov
adc
bound
or
sbb
pop
adc
dec
sbb
mulb
dec
adc
dec
adc
sbb
ret
out
lock
push
jl
and
mov
jo
mov
ret
je
push
pop
loopne
js
call
push
sbb
jo
sub
inc
ljmp
mov
push
das
pop
bound
xor
nop
pop
or
add
shlb
adc
sahf
and
movsl
add
pop
push
sub
jb
pop
in
sub
lock
ss
push
sub
loope
sbb
pop
jle
repnz
test
subb
sub
dec
ja
outsb
sarb
pop
mov
inc
sbb
mov
mov
and
dec
or
dec
sbb
add
jl
loope
xor
push
fisttpl
ret
adc
and
inc
inc
rorb
sbb
fisttps
jl
push
push
leave
in
arpl
xchg
cmc
mov
lcall
sub
in
cmp
inc
add
xor
mov
or
add
xchg
leave
inc
push
jo
out
push
pop
fisttpl
popa
popa
add
sarl
aaa
add
sbb
add
icebp
sub
push
jle
jo
ja
movsl
push
push
pop
pop
js
xor
or
inc
and
and
pop
xchg
push
xlat
mov
inc
es
push
test
mov
xchg
add
stc
or
jo
fsubrl
cmovle
mov
and
mov
repnz
out
subl
mov
dec
repz
or
mov
mov
mov
add
inc
mov
lock
call
push
ret
adc
pushf
ret
movsl
daa
cli
shrl
stos
or
mov
add
xlat
dec
fwait
mov
push
pop
push
push
push
inc
ljmp
rolb
jge
test
pop
hlt
jbe
lret
fs
add
movb
sub
mov
push
ret
push
pop
lds
or
add
pop
sub
or
and
xor
add
scas
xchg
mov
out
and
or
andb
andl
xchg
and
push
leave
aaa
shlb
push
mov
add
pusha
and
mov
add
add
xchg
xchg
fdivs
adc
or
pop
inc
or
js
aad
pop
jle
mov
add
mov
add
adc
rcll
mov
jl
cmpsb
adc
add
das
jl
push
stos
mov
xchg
mov
dec
inc
adc
mov
ss
clc
push
jns
or
cmpsl
add
adc
sbb
xchg
fsubl
test
inc
cli
xchg
push
or
test
aaa
pop
stos
loopne
push
push
push
mov
inc
hlt
hlt
jle
outsl
push
or
jae
xor
popa
leave
push
add
or
orb
repz
dec
insb
out
cwtl
jge
add
andl
popl
push
mov
icebp
push
jmp
data16
xor
add
add
rcll
cmp
sahf
and
mov
inc
adc
sbb
jb
pop
enter
push
xor
adc
sbb
xor
jne
jge
add
jle
pop
mov
xor
rorb
pop
add
push
dec
pop
sbb
push
xor
inc
mov
push
add
add
insb
cmc
add
inc
mov
add
rcll
inc
imul
imul
ficoms
push
int3
and
add
xchg
fld
push
pop
pop
out
hlt
push
mov
sbb
pop
adc
inc
insb
shr
addr16
fldl
test
push
loopne
inc
ret
adc
cmp
rcrb
add
call
mov
insb
std
test
je
pop
incb
adc
add
insb
fstpl
repz
repz
insl
out
fistl
push
in
sub
jae
movsl
mov
fs
or
hlt
sbb
jne
sbb
push
lret
cmp
jmp
push
push
pop
adc
add
icebp
or
repnz
mov
jns
add
lret
cmp
mov
testb
sbb
test
jne
js
dec
push
push
stos
lret
jns
or
or
push
int3
xchg
xorl
inc
arpl
les
shlb
inc
pop
mov
sub
das
or
imul
or
dec
adc
or
dec
pop
out
mov
inc
adc
insb
insb
lods
push
and
mov
mov
xchg
inc
test
cmpsb
aam
jg
push
add
or
out
cs
adc
movb
sbb
inc
movsl
xor
je
inc
add
dec
jne
add
call
cwtl
adc
mov
fbstp
push
push
jnp
push
inc
mov
mov
jecxz
clc
out
lds
cmp
cmp
sub
aas
or
add
inc
xor
add
packuswb
cmp
ss
jbe
es
mov
push
jne
repz
pop
inc
loopne
xor
push
lret
shll
cmp
mov
jne
adc
movsl
mov
hlt
into
sub
or
iret
shlb
dec
inc
pop
clc
rolb
push
cmp
or
mov
test
shrb
jno
or
clc
shll
mov
cmp
dec
cmp
in
cmp
sub
cmp
push
jne
adc
pop
inc
aaa
test
inc
es
ret
in
lea
and
in
dec
add
fsubl
add
and
push
and
inc
push
cwtl
ret
and
mov
pop
fs
or
scas
or
fcos
add
push
push
sub
xor
mov
cmp
test
idivl
mov
xor
fs
or
mov
pop
testl
cmp
aas
cmp
dec
es
out
call
dec
mov
adc
inc
cli
xor
ror
push
roll
xor
roll
out
mov
push
loop
js
add
and
dec
sub
adc
cmp
push
push
lret
call
sbb
out
cmp
mov
jl
cwtl
fnsave
add
ss
jnp
lock
pop
push
add
testb
pxor
jle
xor
or
mov
addr16
xchg
imul
pop
adc
mov
dec
xchg
cmpsb
add
xchg
test
or
jno
xchg
subl
adc
jae
push
push
fsubrl
imul
sbb
sbbl
cltd
in
lods
jmp
pop
pop
push
push
push
adc
push
or
dec
int
mulb
pusha
xor
jl
push
clc
test
js
push
and
dec
adc
mov
push
mov
sahf
push
cmp
aas
ljmp
rolb
loopne
mov
orb
sbb
cs
mov
sub
add
jbe
and
sub
mov
xchg
insl
adc
adc
cmp
mov
daa
add
add
add
lret
mov
sahf
imulb
rcl
cmp
rcl
adc
jnp
or
aas
mov
jno
push
push
stos
sti
push
add
jno
sbb
cmpsl
jae
pop
mov
das
in
daa
mov
or
adc
mov
sub
fsubs
decl
pop
jae
xchg
sub
xchg
xorb
push
sbb
ss
or
test
pop
rolb
mov
xchg
mov
adc
cmp
inc
test
pop
add
shl
mov
fdivrs
test
cltd
adc
fs
or
pop
cld
push
xchg
sub
nop
push
and
nop
movsl
xchg
aam
lret
cmp
out
andl
jae
std
push
jnp
sti
dec
ja
je
or
je
or
sub
sub
sti
das
mov
movsl
adc
aad
testb
dec
loopne
or
add
or
jne
xchg
fadd
sahf
popa
jnp
push
jecxz
and
push
jmp
cmp
xchg
out
push
adc
adc
movsl
test
daa
cmp
pusha
inc
mov
add
ja
and
inc
enter
in
or
pop
divb
lcall
mov
add
mov
sbb
daa
mov
sahf
pusha
push
cmpsb
or
add
inc
push
out
es
jo
mov
push
sub
mov
sti
or
adc
add
test
daa
paddw
xchg
and
lods
orl
add
lods
add
incl
ret
addb
dec
je
sub
xor
mov
loope
or
sub
add
cld
sbb
outsb
fstpt
outsl
mov
inc
jbe
cltd
shll
or
push
adc
mov
push
xchg
xchg
cmc
fs
inc
add
insb
adc
movsl
mov
dec
pusha
and
cmc
xchg
push
or
jbe
or
jmp
adc
push
inc
enter
movsb
cmp
dec
push
mov
enter
jne
push
or
push
call
or
inc
inc
mov
jmp
mov
push
cmp
mov
dec
or
ret
out
xchg
clc
repz
push
icebp
clc
inc
sbb
mov
push
sbb
pusha
pusha
or
dec
movsb
xchg
bound
out
pop
sbb
cmpsl
adc
push
bound
test
push
xor
mov
les
xor
jo
push
or
in
ret
fdivs
lcall
xchg
push
pop
inc
add
dec
mov
enter
add
xchg
add
xor
dec
mov
adc
enter
ds
push
and
repnz
push
inc
add
add
add
adc
or
add
shlb
ds
push
in
mov
add
mov
mov
mov
mov
and
jecxz
iret
sub
insl
sbb
push
js
lods
add
push
fcoml
sbb
nop
cmpsl
fsubrp
push
xor
testl
push
ret
pop
lcall
mov
dec
test
cmp
add
xchg
jbe
push
es
xor
sbb
loopew
ret
jbe
fmulp
add
out
jl
mov
pop
cmp
inc
loop
pushf
roll
aam
adc
inc
xchg
mov
xchg
pop
adc
jo
xlat
in
lret
pusha
das
xchg
push
xchg
dec
adc
pop
aaa
dec
std
inc
sbb
mov
pusha
fsubrs
fsubs
int
sar
dec
pusha
jne
arpl
stos
std
decl
mov
adc
jmp
cmp
and
roll
jge
clc
push
fidivl
push
ljmp
movsb
push
jg
sahf
and
cs
inc
pop
inc
adc
xor
sbb
clc
fidivrs
jns
cmp
mov
push
xchg
and
mov
mov
mov
sbbl
frstor
pop
xchg
jge
aaa
call
lahf
ds
idivb
push
or
jne
icebp
test
stos
inc
push
pop
or
pop
mov
mov
push
pop
jmp
sub
and
xchg
xchg
mov
cmpsl
dec
push
mov
je
daa
xor
roll
cltd
loopne
add
pop
insb
pop
jle
rolb
or
dec
mov
mov
aas
pop
js
dec
sbb
sbb
sub
dec
sub
mov
fs
xor
push
inc
xchg
test
push
or
adc
xor
inc
inc
faddl
jbe
mov
mov
daa
mov
push
mov
aaa
sub
add
add
jmp
mov
andl
dec
incl
jo
int3
cmpsl
aam
or
sti
pop
add
inc
jp
add
gs
mov
or
inc
leave
repnz
je
rcl
add
add
or
mov
subb
icebp
add
jge
push
sub
dec
sahf
imulb
pop
movsl
cltd
insl
repz
inc
xor
xor
xchg
loope
aaa
divps
in
mov
xor
dec
xchg
inc
movsb
push
sbb
xchg
add
adc
dec
mov
idivb
add
sbb
ficomps
cmp
mov
out
iret
xor
mov
mov
dec
or
out
sbb
push
mov
addl
adc
or
push
and
pusha
popa
mov
dec
dec
cmp
cmp
adc
xchg
dec
mov
push
cwtl
jae
and
or
xchg
popa
cmp
jbe
mov
adc
jne
cmpsl
jns
xchg
nop
jp
xchg
mov
add
add
and
and
sub
pop
pop
or
cmp
mov
sub
cs
sbb
pop
add
xor
testb
jnp
mov
add
and
ss
lds
or
inc
cmp
cmp
jne
xor
adc
sub
sub
fisttpl
xchg
fdivrs
lret
xchg
test
in
or
push
loope
cmp
pop
cmp
mov
ret
inc
sti
jge
sarl
fdivp
push
fmull
sti
or
jl
sbb
je
cmp
ds
push
sbb
jmp
add
cs
std
and
inc
movsl
popf
pusha
pop
iret
inc
push
outsb
sub
mov
cmpl
sub
adc
jno
je
pop
cmp
movsl
stos
imul
cmp
dec
shrl
xor
lcall
sbb
test
dec
pusha
popa
and
divb
or
pop
jno
sub
popf
and
jle
pop
add
mov
sbb
adc
scas
in
or
mov
sbb
adc
ret
mov
mov
xchg
jge
in
adc
popf
cmp
lret
and
leave
add
imul
push
das
inc
push
sbb
push
inc
popa
push
mov
pop
and
imul
ja
ret
sub
and
sub
sbb
or
prefetch
in
lods
imul
notl
cmpsl
repnz
pop
mov
pop
jmp
int
in
loope
mov
lods
dec
mov
inc
lock
dec
cltd
push
sub
test
jecxz
cmp
pop
mov
lods
and
fcomp
add
cmp
inc
popa
hlt
gs
pop
je
push
ss
add
sbb
adc
inc
cmp
jge
or
leave
nop
lock
das
inc
and
arpl
daa
subb
out
sub
outsl
adc
je
cmp
je
loopne
push
mov
sbb
jo
and
jle
dec
mov
outsb
das
dec
mov
dec
adc
push
mov
fdivrp
and
mov
xor
loop
daa
call
cmc
fisttps
repnz
pop
je
add
push
dec
mov
pop
call
ds
lahf
add
mov
sarb
sahf
ror
and
cld
jp
or
imul
andb
sbb
popa
rcll
leave
dec
rclb
add
movsl
cmp
sbb
sub
cmp
dec
movsb
push
outsb
sti
xor
je
mov
cmpb
nop
cmc
xchg
push
data16
and
push
pop
mov
incl
or
jp
cld
fld
mov
jo
mov
push
adc
push
cld
and
fdivl
popf
std
mov
inc
push
nop
jl
cmc
cs
adc
stos
cltd
push
in
orl
xchg
ret
adcl
sbb
je
and
or
pop
imul
je
adc
sti
inc
push
mov
out
lret
sbb
lahf
jne
or
cmp
sbb
fwait
int3
mov
and
and
jb
rorb
dec
xor
xlat
sub
popf
add
jb
lea
cmovnp
xchg
inc
into
jae
or
xor
js
xor
add
int3
inc
scas
loopne
adc
xor
add
dec
xor
mov
and
enter
cmp
inc
rcrb
jle
cmp
inc
xor
add
pop
jle
jne
sbb
mov
ret
add
jns
dec
dec
fs
xor
and
push
mov
orb
mov
les
enter
jg
dec
add
and
imul
mov
in
daa
repz
jb
jae
push
pushf
push
xlat
push
mov
ficoms
dec
push
sbbl
outsb
dec
clc
jg
dec
sub
jne
push
out
add
test
sahf
add
inc
push
and
std
mov
ficoml
cmpl
or
adc
and
movsl
test
adc
pop
pop
push
sub
orl
cmp
xor
lods
nop
mov
pop
sar
cltd
cmp
push
sbb
jo
sub
jb
rclb
mov
pop
arpl
lea
cmp
loope
adc
or
pop
outsb
jmp
sbb
es
lea
xchg
or
push
repnz
cmpsl
dec
fdivrl
ret
jns
pop
mov
or
addr16
dec
je
enter
cltd
fdivl
mov
loop
jle
mov
mov
dec
pop
xor
xchg
call
pop
in
stos
in
lock
dec
pop
in
push
testb
mov
mov
sbb
mov
xchg
mov
pop
mov
fimull
loopne
push
xchg
inc
pusha
add
cmpl
pop
repnz
jb
in
ret
jbe
mov
incl
jne
cmc
add
sbbl
pop
imul
pop
je
std
jle
push
inc
sahf
mov
popf
add
sub
or
mov
xchg
orl
or
add
sbb
js
int3
mov
mov
enter
outsb
add
nop
ja
pop
inc
inc
xor
push
pusha
insl
xchg
loopne
and
pop
or
int3
add
mov
cmp
subb
rorb
inc
xor
fdivrs
cld
call
xor
add
mov
mov
pop
rolb
xchg
cmp
shl
push
or
shlb
jecxz,pn
pop
stc
or
mov
add
shl
cmp
add
sahf
je
fmuls
xchg
xchg
push
ficoms
mov
add
leave
arpl
push
cmp
mov
pop
pop
jb
lods
jbe
pop
add
dec
das
xchg
out
push
jl
lcall
dec
or
das
mov
add
push
mov
add
add
inc
sbb
add
es
aaa
and
pop
call
push
scas
mov
sbb
or
jmp
push
xlat
push
sbb
inc
jmp
or
bound
fs
add
xchg
dec
mov
push
sbb
lahf
ja
mov
mov
js
dec
sub
push
and
or
das
in
jmp
std
xor
fmul
in
push
jb
int
aam
jge
jmp
inc
and
adc
enter
shr
pfmin
adc
orb
jo
sub
les
jo
mov
adc
push
mov
jo
adc
gs
loopne
cmpsl
add
sbb
in
sub
jge
adc
jo
or
push
jb
mov
jl
and
push
xchg
mov
xor
add
dec
insl
add
or
daa
dec
xor
call
and
jmp
inc
lahf
add
lods
ja
mov
mov
cs
adc
or
pop
or
cmpsb
adc
push
sub
inc
sbb
sub
xchg
add
dec
lock
xchg
jge
push
xor
pusha
sbb
aad
xchg
dec
insl
shl
mov
push
fiadds
in
mov
xchg
cmp
nop
pop
xor
jbe
shll
push
leave
push
xor
pop
or
push
pop
xchg
pop
fwait
add
cmp
fnstcw
jno
outsb
push
add
add
arpl
inc
insb
nop
mov
enter
jns
bound
sar
push
xchg
push
daa
inc
mov
sbb
xchg
ds
mov
xchg
add
in
cltd
jp
pusha
adc
stc
add
jnp
xchg
fnstenv
push
lea
cmp
adc
add
mov
cmp
push
cmp
mov
lds
adcl
mov
jno
adc
test
xchg
xchg
hlt
or
sub
out
xchg
sub
push
lea
cmpsl
sbb
nop
pusha
in
aad
adc
and
push
and
or
repnz
sub
add
mov
and
lock
push
shlb
xor
std
aaa
mov
ja
push
pop
inc
mov
mov
popw
push
pushw
xor
pop
fdivrp
and
lea
and
add
and
adcb
sbb
mov
mov
push
mov
mov
push
add
aad
aam
xchg
adc
jae
jbe
or
mov
jnp
sbb
jecxz
sbb
int
fsubrl
subl
cmp
insb
dec
mov
push
rol
outsb
or
jle
xlat
rcrb
or
sub
or
es
push
push
cmpsl
mov
iret
mov
add
add
push
lds
push
fdivs
jle
insl
int3
mov
shlb
inc
push
rclb
popf
add
sbb
aas
es
sldt
jo
je
insl
xor
leave
mov
mov
mov
sub
adc
dec
add
add
pop
or
or
push
push
cmp
jae
or
mov
bnd
adc
loopne
push
cmp
inc
mov
enter
or
rol
mov
std
aad
push
inc
dec
hlt
jecxz
arpl
or
ret
push
dec
stos
dec
dec
adc
push
push
jmp
jge
or
sub
cmp
dec
xchg
cmc
or
andl
adc
dec
gs
loopne
xchg
jge
mov
clc
push
adc
and
add
dec
sbb
push
into
icebp
jo
fmull
dec
int3
and
xchg
inc
fiadds
fcoml
lods
mov
add
arpl
fs
jne
sbbb
popf
adc
pusha
mov
xchg
push
adc
add
mov
adc
sbb
add
mov
dec
mov
push
cmp
insb
mov
pop
ret
je
aaa
mov
mov
js
sbb
in
test
or
add
jge
xchg
mov
pusha
lods
jnp
dec
test
lea
add
add
hlt
sbb
or
and
push
hlt
test
imul
adc
in
popf
mov
mov
push
jb
ss
jns
xchg
je
inc
add
xchg
mov
push
jns
pop
adc
or
adc
add
push
lods
adc
sbb
or
pusha
movsb
aam
add
adc
pop
pop
and
mov
xchg
add
sub
push
push
push
ja
test
sub
adc
and
sbb
push
mov
stos
jl
sbb
clc
shll
data16
add
cld
test
call
clc
pop
cmp
insb
mov
inc
pop
add
roll
jae
or
lea
js
push
ljmp
cmp
lods
or
ljmp
outsl
je
ret
fidivrl
dec
push
nop
imul
out
leave
nop
sbb
cmp
pop
cmpsl
sbbb
mov
pop
push
jo
test
fbstp
jo
les
cld
and
dec
popf
xchg
int
xor
add
lock
stos
inc
push
inc
cltd
lods
popa
mov
test
mov
cmp
jecxz
push
lret
sub
mov
push
xchg
mov
cltd
pop
mov
inc
movl
negl
jle
dec
add
jmp
xchg
mov
cmp
mov
out
adc
push
andl
movsl
in
xor
push
icebp
inc
shrb
cmc
fs
ja
add
inc
inc
adc
es
loop
hlt
or
in
gs
xor
xor
cmp
cmpsb
repz
sub
inc
dec
fs
mov
cmp
jo
xor
xor
push
pop
movl
jg
jno
movl
movsb
add
jae
and
imulb
add
loopne
and
decl
jno
jne
jl
xor
or
push
bound
sub
pusha
je
jb
call
xchg
mov
pushf
push
mov
repz
dec
add
shlb
cmp
mov
push
mov
mov
sub
sarl
push
pop
jns
and
inc
adc
jns
jle
push
ss
sbb
ret
mov
pop
adc
cmp
js
shrl
in
stos
test
dec
jge
and
push
sub
cmc
dec
jb
sbb
push
test
cmpsl
jo
movsb
mov
mov
dec
cmp
jb
add
pusha
jl
cmp
push
mov
push
mov
xchg
or
xchg
sbb
xor
cmc
push
idivb
dec
sub
inc
cmpb
add
xor
cmpsl
outsb
xor
jge
je
pop
cmp
push
icebp
jge
sub
fldcw
cmp
or
push
xor
sub
loop
inc
sti
rep
repnz
xor
jns
mov
sbb
jmp
sub
pop
add
pushl
and
and
adc
push
jae
sbb
andl
mov
adc
pop
push
push
ja
scas
jae
push
push
mov
cmp
into
cmpsb
xlat
push
and
push
mov
stos
pop
lods
rcrl
dec
adc
xchg
data16
dec
les
je
push
sub
add
push
or
inc
pop
pop
adc
aas
xchg
rcrl
inc
add
sbb
orb
adc
fnstenv
sti
imul
and
jno
push
mov
and
lock
lret
repnz
adc
or
mov
inc
rolb
push
iret
test
popa
test
lods
fildll
mov
das
arpl
jnp
mov
adc
push
push
jne
dec
arpl
cwtl
andb
out
lret
inc
ja
xchg
or
pop
orb
lcallw
hlt
lock
clc
add
inc
mov
push
js
cmp
dec
pop
adc
lcall
xor
jmp
dec
call
decl
imul
scas
push
push
xchg
loopne
adc
in
fcomps
dec
xor
xlat
mov
adc
bound
cmpsl
pop
arpl
mov
add
xor
sbb
add
inc
inc
cld
loopne
roll
js
shrb
and
sarb
dec
jne
push
cmpsb
in
sub
xchg
jmp
push
add
jmp
cmp
inc
sbb
xor
sbb
push
xchg
dec
add
outsb
push
add
in
and
orl
mov
stos
sub
subl
sub
xchg
inc
clc
adc
xorl
dec
add
cmp
orl
jle
add
in
xchg
xchg
testb
adc
test
adc
add
xor
or
or
xchg
xchg
push
mov
shlb
cmpsl
add
cmp
in
sahf
add
shll
inc
cmp
cmpb
sub
and
add
lea
subb
add
dec
mov
hlt
sub
sar
andb
jb
ret
cmp
mov
dec
sbb
xchg
push
inc
and
xor
ret
sub
jecxz
es
shlb
in
jbe
mov
les
inc
inc
jmp
xchg
add
call
rcrl
or
ret
xor
fstpt
sahf
ja
test
mov
insb
sub
or
push
iret
test
pop
xchg
push
int3
rcl
mov
cmp
and
ds
push
and
icebp
mov
ret
and
rcrb
dec
xchg
sbb
cmp
int
bound
jl
subb
ret
notb
cltd
mov
push
cmpsl
addl
or
adc
jno
push
pop
push
push
adc
mov
add
or
or
sbb
lods
daa
lcall
or
test
sbb
mov
ret
dec
pop
addr16
add
mov
xchg
adc
pop
sbb
cmp
in
push
mov
jmp
dec
ss
mov
mov
jne
sub
outsb
sar
call
jp
cmp
rorl
mov
jb
shl
out
dec
jae
ror
push
mov
cmc
cwtl
xchg
jmp
dec
hlt
jae
inc
test
adc
xchg
add
push
ret
rcl
repz
in
mov
icebp
inc
sarb
or
push
daa
jno
push
cmp
inc
sub
icebp
pop
jl
adc
jb
adc
jne
adc
xchg
imul
pop
out
xchg
mov
sub
push
sub
pop
inc
jne
adc
cmp
xchg
jbe
pop
dec
sti
xchg
sub
cltd
mov
cltd
push
xchg
cli
lods
test
add
fs
bound
jne
cltd
xchg
add
sbb
or
pushf
xchg
sbb
push
pusha
lret
mov
insl
dec
cli
mulps
add
pop
dec
jbe
or
sub
dec
dec
mov
pusha
jmp
pop
xor
loope
pop
shr
mov
or
adc
shll
mov
fbstp
push
pusha
aaa
jbe
iret
mov
push
push
jge
pop
rcrl
mov
ds
inc
adc
add
ret
subl
dec
negl
jp
adc
daa
or
mov
sub
and
jb
ja
mov
xchg
dec
or
inc
sbbw
cmp
nop
adc
sub
ss
adc
fs
mov
xchg
jb
dec
shll
arpl
cmp
cmp
sbb
mov
jmp
cmp
test
sbb
int
faddl
adc
xchg
fsubrs
jg
xor
in
or
pop
inc
les
mov
fisubl
jne
jbe
addl
xchg
outsb
and
jne
push
add
test
test
call
push
jmp
jmp
dec
mov
adc
adc
push
push
xor
mov
dec
mov
xchg
mov
test
aas
and
and
enter
faddl
enter
clc
and
add
and
mov
in
es
pop
enter
dec
daa
and
enter
enter
movsb
sub
cltd
fsubs
cs
or
mov
cmp
inc
push
push
xor
cmp
inc
scas
pop
xor
fs
iret
xchg
pop
and
mov
xor
or
xor
adcb
cmp
xor
or
or
fdivs
mov
in
pusha
adc
pop
add
jl
cmp
add
pop
sbb
adc
or
adc
pop
cmp
mov
scas
jg
inc
js
sbb
jne
popf
in
adc
adc
orl
jne
movl
scas
movsl
fadds
mov
sbb
jge
fwait
ja
sub
push
imul
jge
sahf
inc
jae
jge
lods
mov
ss
sti
adcb
imul
mov
imul
cmpsl
cltd
movsb
lahf
enter
fdivl
inc
out
jns
loopne
in
aam
jo
sbb
test
rorl
insb
xor
pop
pop
jo
jo
pop
jmp
cltd
add
sahf
je
fcomps
mov
mov
push
enterw
push
test
sub
jo
jo
jmp
pop
xor
sub
test
aam
inc
aas
rcrb
push
mov
pop
add
add
jb
jns
xorb
and
pop
call
cli
rolb
push
das
jo
adc
inc
mov
mov
scas
or
mov
cmp
push
loopne
les
sahf
and
sbb
inc
add
mov
repz
stc
enter
lock
das
nop
jae
jl
mov
and
fwait
and
xor
jno
in
test
xchg
and
rorl
push
pop
mov
push
jle
mov
xor
gs
push
testl
push
add
adc
clc
sub
insb
addb
jbe
or
je
xchg
sbb
out
cmp
jmp
cmp
in
cmpb
mov
inc
xchg
into
je
fistps
mov
xor
je
sub
fnstenv
cmp
adc
ja
movsb
add
mov
loopne
and
test
mov
insb
test
dec
ret
mov
push
xor
pop
pop
sahf
aaa
lods
nopl
and
inc
sbb
mov
or
add
ret
inc
xchg
pop
or
jo
or
sbb
je
sbb
cli
add
adc
repnz
xchg
push
push
xchg
rcll
mov
in
syscall
pop
adcb
mov
mov
and
cs
clc
lock
xor
mov
mov
push
nop
and
fistl
or
cmp
mov
and
mov
xchg
lock
inc
lcall
mov
push
pop
mov
add
pushf
aam
test
int
cmp
test
xchg
adc
nop
loope
xchg
popf
lea
adc
pusha
xchg
les
lcall
xchg
or
push
xlat
or
or
das
loop
mov
mov
xor
mov
inc
gs
les
lret
je,pt
cwtl
add
jnp
dec
push
sbb
clc
or
test
les
cmp
in
fdivr
aam
add
fsubs
push
dec
dec
fwait
ret
adc
cli
inc
xchg
mov
sub
push
mov
jbe
repz
inc
adc
fbld
dec
add
or
or
mov
bound
or
push
inc
sbb
out
mov
mov
adc
rorl
or
scas
push
pop
cld
jbe
jmp
lahf
dec
outsl
or
adc
rclb
add
add
sbb
sub
popf
jnp
leave
cmp
adc
xor
push
xor
imul
popa
dec
ret
mov
rol
out
inc
and
sub
xor
adc
movlhps
dec
rcr
or
or
std
imul
mov
rorb
in
nop
repnz
dec
outsb
inc
or
lea
cmp
and
fdivrs
push
push
and
adc
xor
jmp
push
js
pop
iret
icebp
dec
stos
mov
add
fcomps
jecxz
or
dec
push
inc
inc
adc
inc
divl
jno
cli
das
enter
cmp
movsb
cmpb
push
stos
sub
push
es
push
mov
call
fs
pushf
fs
inc
mov
jl
int
xchg
movsb
mov
and
xchg
and
dec
mov
fwait
inc
popa
push
sbb
fimull
xchg
test
mov
ret
and
outsl
dec
cli
and
pusha
lods
or
jae
xchg
add
mov
loope
cmp
or
lock
push
push
es
call
xor
or
push
enter
add
ficompl
daa
loopne
inc
nop
jne
and
and
mov
pop
pusha
imulb
repnz
sbbl
mov
movsl
aam
dec
rcrb
xchg
add
cmpsb
cwtl
imul
scas
insl
push
push
lea
ret
test
mov
xchg
pop
mov
addl
into
push
inc
shrb
int3
adc
push
dec
push
movsl
pusha
inc
sub
rorb
insb
pusha
or
mov
test
xchg
icebp
aam
push
dec
rorb
lea
loope
inc
loope
xchg
dec
sub
jmp
jo
aam
dec
subl
cmp
outsl
pusha
push
push
push
loope
aad
push
and
xchg
sub
sbb
sub
jno
cmp
aas
sti
push
pop
mov
ja
mov
and
or
push
fdivr
cmpsl
je
loopne
cmp
jbe
nop
cmp
inc
mov
pop
push
or
mov
das
dec
jge
bound
rclb
add
add
pop
and
mov
in
imul
xor
adc
adc
pusha
ljmp
add
xlat
shll
sub
cmp
sti
pushf
loop
push
xor
push
fwait
lahf
jl
or
jne
xor
xchg
lds
adc
mov
mov
or
les
add
or
push
test
insb
movsb
gs
and
mov
push
push
sbb
leave
scas
sbb
test
shrb
cmpsb
into
inc
mov
mov
js
ret
add
push
adc
and
mov
xchg
adc
addl
cmpsl
stos
fdivl
dec
add
sbb
adc
dec
test
test
inc
rolb
fnstenv
push
shlb
jo
mov
pop
inc
and
jmp
icebp
clc
dec
sbb
mov
xchg
or
sbb
or
pushf
clc
rclb
push
push
adc
das
mov
js
and
mov
mov
je
push
psllq
sbb
xor
push
inc
clc
mov
add
pop
push
add
push
add
out
jbe
cs
sbb
xchg
and
enter
push
mov
push
mov
fcoms
and
xchg
scas
pop
orl
mov
iret
add
xlat
xchg
jo
dec
and
lret
sbb
lds
dec
or
sub
and
out
movsl
pop
fwait
adc
add
push
nop
lods
sar
add
pop
xor
shrl
mov
sub
jnp
push
sub
mov
pop
scas
addb
data16
movsb
stos
ret
sub
imul
xchg
fadds
pop
adc
scas
mov
lret
xchg
movsl
test
es
xchg
lret
or
call
dec
sbb
stos
inc
insl
les
in
xchg
xchg
inc
les
or
clc
xor
testl
enter
push
push
cwtl
aas
repnz
and
inc
jg
mov
ret
mov
inc
in
int3
hlt
rcr
test
or
sub
ds
sbb
or
fs
pop
fsubrl
enter
or
rolb
jo
pusha
test
pusha
pop
inc
lcall
or
xchg
mov
add
push
test
mov
adc
insb
aas
push
xor
sub
call
movsb
pop
sub
adc
test
movsl
test
xchg
lret
xlat
lret
mov
nop
xchg
cwtl
pushf
push
lcall
sarl
jne
pusha
cld
mov
and
push
sub
sarl
jecxz
stos
dec
mov
mov
fmul
and
popa
and
test
sub
mov
pop
test
ja
xchg
adc
sub
loopne
shlb
jmp
mov
mov
fsts
popf
and
inc
dec
dec
imul
or
cmp
enter
scas
icebp
fidivl
jae
rcrb
inc
xchg
cltd
cmp
dec
adc
in
mov
adc
jle
les
mov
push
jp
dec
test
sbb
test
push
stos
jge
mov
mov
push
movsl
jl
cmp
enter
scas
outsl
or
pop
mov
mov
mov
mov
dec
add
lods
or
cmpl
xor
insb
mov
sub
inc
push
inc
shll
pop
enter
dec
sbb
jmp
out
push
xor
hlt
lahf
ret
mov
or
test
mov
and
mov
cltd
cmp
pusha
jecxz
stc
and
dec
in
cmp
pop
or
mov
movsl
and
or
mov
add
stos
adc
xorl
pop
pop
jb
add
stos
cmp
jnp
cmp
adc
leave
adc
roll
xlat
push
push
xor
repz
mov
pop
pop
inc
pop
mov
je
js
mov
mov
xchg
or
addr16
push
movsl
sbb
loopne
or
inc
sub
or
pop
jno
jp
lods
mov
loop
jb
andl
cld
scas
icebp
push
sbb
adc
lea
movsb
mov
or
add
sbb
ss
jbe
mov
dec
push
push
test
incb
mov
sub
push
idivl
lret
into
ret
push
add
cltd
daa
sti
inc
popf
sbb
jne
mov
mov
adc
fnsave
ja
ljmp
mov
into
jo
mov
dec
and
and
repz
lea
mov
decl
cmp
jge
push
in
movsl
xor
inc
inc
inc
inc
push
jl
js
or
cwtl
xchg
pushf
lods
cmp
stos
dec
cmp
mov
jmp
lds
enter
mov
inc
lock
and
bound
nop
jge
or
dec
loopne
in
repz
inc
repnz
xchg
push
add
int
dec
xchg
fsubr
and
push
mov
push
pushf
mov
cmp
mov
push
add
adcl
sti
sub
add
clc
outsb
into
stos
push
push
and
dec
jle
push
pop
jo
jbe
fsubl
hlt
add
mov
addr16
iret
hlt
lock
mov
and
push
ret
add
mov
cld
mov
pop
add
cmp
test
pcmpeqw
cmpl
test
movsb
jp
add
sbb
jge
dec
push
jbe
push
and
lea
sub
or
mov
sbb
push
xorl
push
nop
addr16
sbb
xor
shrb
dec
ljmp
xchg
lea
lock
and
pop
pop
sub
gs
push
mov
xchg
fs
movsl
lods
in
jae
outsl
in
inc
sbb
in
adc
sbb
xchg
mov
in
cmp
xor
xorb
push
mov
mov
xor
faddl
shl
repnz
mov
mov
popa
push
or
jge
lods
adc
pop
xchg
cmp
sahf
mov
lods
push
adc
gs
adcl
movsb
jne
fsub
fdivrl
scas
jne
push
lods
adc
out
mov
leave
loopne
jo
xchg
call
or
inc
test
cltd
pusha
add
push
rolb
push
test
and
mov
mov
adc
add
add
aam
lcall
popf
mov
pop
rclb
lret
sub
or
add
or
push
adc
out
add
sbb
incl
sbb
mov
daa
jno
jae
dec
mov
push
cmp
sarb
lods
adc
inc
cld
cmp
mov
and
inc
mov
dec
sahf
movsb
sbb
pop
and
roll
add
mov
movsb
test
decb
cmpsl
mov
dec
movsb
ss
mov
aaa
or
jge
jmp
outsb
lock
aaa
enter
loopne
inc
or
and
sbb
fiadds
lcall
or
les
sbb
rorl
lret
inc
hlt
push
jge
lock
es
mov
or
jne
insl
or
cmpb
cmp
std
mov
jp
je
sbb
lods
ret
adc
je
data16
pop
sub
add
jle
xchg
ja
stos
add
and
cmp
jg
outsb
adc
cmp
imul
outsb
add
push
jge
or
jle
xchg
clc
mov
cmp
ja
outsb
and
pop
bound
imul
sbb
lret
sbb
lock
xlat
or
xor
int3
or
out
cmp
fnstcw
cmpsb
dec
cmp
dec
sub
sbb
sbb
push
lock
xor
fs
inc
jmp
inc
repnz
bnd
add
addr16
inc
ja
dec
and
jne
cld
or
and
lock
xchg
or
movsl
push
loop
add
or
aam
pop
xor
or
iret
jne
lods
lret
jmp
pop
or
add
or
mov
int3
fistl
mov
fsubr
mov
test
push
loope
rcrl
cmp
loopne
inc
adc
scas
dec
pop
loopne
sub
xor
jo
inc
out
xchg
push
pop
mov
call
push
mov
jae
add
out
xor
sbb
push
sbb
jge
movsb
xor
lret
mov
xchg
les
or
push
sub
lods
sub
fldcw
mov
sbb
push
inc
xchg
adc
add
cmp
nop
push
xchg
jle
jmp
adc
adc
jns
lahf
roll
cwtl
add
scas
push
fcomp
lds
mov
push
and
popa
dec
dec
add
movsl
jge
rolb
fstp
adc
aam
andl
xchg
rorb
xchg
imul
inc
sahf
in
leave
push
or
inc
or
xchg
and
mov
inc
popf
push
xor
rorb
push
testl
jo
or
loope
inc
into
cmp
xchg
stc
push
jo
jb
cmp
xchg
or
add
xchg
pusha
nop
cltd
sbb
popa
xchg
arpl
cmp
or
push
test
loopne
adc
test
sti
push
jbe
sbb
xor
lcall
and
pop
or
pushf
jmp
pop
enter
test
dec
scas
xor
mov
mov
or
sub
push
inc
pop
orl
test
cwtl
add
mov
pop
cs
insb
mov
sub
and
hlt
cmp
push
xor
inc
adc
cmp
dec
orl
fwait
mov
add
dec
and
js
xorl
sbb
push
mov
fistpl
lods
xor
repz
cwtl
rorb
das
inc
dec
push
popa
mov
mov
imul
lods
add
push
into
dec
cmc
xchg
or
xlat
cwtl
push
push
mov
xchg
imul
je
add
in
jne
ss
mov
incl
adc
je
cltd
test
scas
test
gs
pop
cmp
sub
enter
sub
rorl
jae
dec
add
shr
sub
jge
stos
push
add
cmp
push
xor
mov
nop
call
dec
pop
insb
add
cmp
cmp
mov
push
xor
push
call
mov
cmp
imul
imul
in
push
xchg
xor
repnz
jle
add
adc
sbb
xor
call
cmp
cmp
inc
cmp
loopne
sub
insl
lea
adc
push
dec
fdivp
cmp
and
call
aad
or
sbb
adc
not
cmp
cmp
mov
mov
ret
shr
cmp
jbe
add
jmp
add
pop
rcr
inc
dec
gs
and
add
add
dec
inc
loopne
jg
adc
mov
mov
or
mov
call
xchg
dec
adc
test
mov
js
stos
or
and
inc
loope
punpckhbw
scas
jnp
pop
mov
jo
lods
or
mov
mov
ss
mov
mov
arpl
pusha
out
dec
mov
das
sarb
inc
adc
fnstcw
rorl
xchg
imul
jbe
mov
and
and
push
int
inc
loop
test
add
cmp
call
imul
mov
jl
pushf
ss
or
xorl
test
xchg
les
hlt
pusha
sbb
and
sub
sbb
mov
sbb
xor
out
push
or
mov
push
jb
push
xchg
out
fadd
cs
cwtl
add
xor
add
dec
sub
outsb
cmp
jg
and
stos
xchg
je
leave
shl
pop
inc
mov
cs
cmp
add
test
xchg
test
cld
scas
cmpb
sahf
addl
cmp
test
xor
cmp
adc
in
out
adc
mov
add
call
adc
orl
mov
mov
add
es
mov
les
and
bnd
mov
in
pop
inc
ret
mov
push
push
pop
push
mov
sub
dec
push
fstl
xor
push
mov
sub
pop
aam
push
dec
pop
mov
loope
pop
cli
arpl
ds
push
add
sahf
or
push
mov
pop
dec
jmp
insl
add
adc
dec
jne
push
movsb
dec
add
and
inc
mov
out
sbb
int3
std
out
dec
pop
repz
dec
insb
cs
xor
in
push
loop
push
mov
push
jo
cwtl
xorl
mov
minps
test
or
popa
jmp
popa
fdivs
mov
push
fs
adc
adc
fwait
and
mov
ljmp
mov
lods
repnz
jns
sub
adc
stos
vfmaddsub231ps
xchg
notl
jl
enter
repz
pop
les
fcoms
mov
adc
mov
pop
add
xchg
ds
inc
or
mov
inc
push
insb
pop
push
aaa
test
in
rol
sub
push
ret
xor
hlt
push
popa
pop
and
adc
shrb
jbe
inc
mov
mov
inc
fsubrs
aam
jp
and
mov
adc
pop
and
movsb
shrl
stos
jnp
adc
mov
ja
adc
pop
add
add
mov
orl
repz
and
push
xor
sub
mov
xor
push
fimull
pop
pop
popa
rep
cmpl
cltd
inc
pop
mov
es
sub
sub
push
push
sbbb
inc
push
loop
shll
push
or
sti
jb
je
push
sub
lock
xor
jmp
imul
push
jno
push
sahf
pop
ret
pop
test
mov
xor
repz
lock
cmc
repz
mov
mov
cmpl
sub
jns
fcomip
mov
push
push
into
idivb
jb
lods
push
enter
mov
nop
popa
xor
pop
lods
add
sti
push
push
add
add
sbb
xor
rcll
fisubrs
jne,pn
inc
or
xlat
or
rorb
lret
push
add
add
rcrl
inc
je
add
mov
cli
mov
mov
mov
mov
mov
dec
addr16
pop
mov
lret
jo
loope
ja
mov
test
cld
add
lahf
cmpsl
push
mov
test
add
push
mov
inc
dec
push
cmp
inc
imul
add
in
loopne
mov
cmp
insl
popf
insl
mov
add
push
adc
rorl
or
sbb
and
pop
adc
jo
pop
add
loop
sbb
fstps
or
xchg
test
pusha
fs
arpl
sbb
lock
ret
in
lea
sbb
and
mov
push
incl
sahf
or
jecxz
cmp
fwait
mov
xchg
cmp
sbb
imul
test
mov
cmp
sbb
adc
mov
es
pop
xchg
lahf
mov
push
js
mov
cmp
push
bound
push
es
mov
xchg
pop
in
test
pop
loop
pop
pop
lods
mov
lea
dec
xchg
jle
push
add
add
daa
mov
loope
pop
je
inc
pop
js
aaa
add
dec
cmp
inc
cmp
shlb
push
lahf
mov
les
mov
fistps
or
flds
jo
mov
pop
shrl
mov
mov
fs
jbe
jl
or
test
sahf
xchg
pop
push
and
dec
pop
mov
sub
scas
ds
lods
cmovae
inc
aaa
call
sbb
dec
sbbl
rolb
push
add
loop
push
mov
mov
add
bound
fmuls
push
aaa
loopne
mov
call
orl
adc
leave
mov
mov
cmpsl
push
clc
mov
ret
cmp
jbe
push
mov
push
push
mov
mov
test
imulb
sbb
jb
stos
pop
lods
ret
mov
xor
pop
pusha
leave
push
push
push
insl
lret
and
sub
xor
ss
and
bound
in
xchg
jmp
xorb
shl
push
or
mov
push
inc
test
xor
mov
popa
cmpsl
icebp
js
mov
pop
clc
push
pop
cltd
repnz
pop
aaa
leave
pop
rclb
nop
popf
jno
hlt
xor
mov
test
jo
rcrl
cwtl
sarl
bound
inc
fwait
cs
arpl
dec
or
nop
inc
mov
add
and
and
pop
mov
push
stos
dec
lea
add
xchg
dec
popa
or
add
repnz
adc
incl
or
mov
je
mov
or
adc
test
mov
enter
in
stc
mov
xor
jnp
push
dec
nop
nop
sub
lods
lods
les
repnz
mov
les
push
xchg
fcompl
sbbb
daa
inc
clc
mov
test
mov
mov
jl
mov
popa
stos
xchg
mov
es
sbb
sahf
bound
sbb
lcall
inc
mov
sub
add
pop
shlb
mov
add
movl
inc
sub
mov
lret
dec
mov
dec
adc
test
jl
dec
enter
pusha
sete
inc
jle
push
fs
js
adc
fs
sub
idiv
jbe
and
add
bndstx
mov
aaa
call
inc
roll
xor
fcmovnbe
leave
jo
test
mov
push
inc
dec
push
xor
fwait
mov
add
incl
jge
movsl
clc
and
iret
ds
xchg
and
push
mov
xor
orb
mov
rcll
push
xlat
arpl
jmp
xor
cmp
push
sub
and
or
inc
inc
mov
pop
mov
add
mov
shll
aaa
leave
and
movsb
adc
or
inc
popf
ret
rolb
add
loop
sbb
push
sarl
mov
pushl
cmp
movsb
sub
inc
popa
sbb
ret
or
movsb
test
lea
hlt
pop
xchg
loope
jo
leave
mov
push
pop
out
xchg
clc
rolb
les
divl
push
push
or
ret
push
das
icebp
sub
inc
shlb
inc
fldl2e
popa
and
fsubl
add
rclb
dec
jno
cmp
icebp
out
clc
shll
loopne
xchg
jge
iret
pushf
xchg
push
jbe
icebp
push
js
mov
mov
lock
xor
imul
sbb
dec
aam
aaa
push
push
aad
into
mov
jmp
xlat
arpl
inc
cmp
xchg
aaa
lods
lahf
rolb
lret
rcl
push
inc
pop
xchg
cs
icebp
mov
adc
add
cld
add
rcrb
mov
outsb
jecxz
or
pop
dec
jne
je
inc
adc
mov
mov
xchg
js
pop
inc
lahf
int
sbb
bound
inc
dec
push
push
dec
test
stos
ss
lods
js
xlat
clc
imul
sar
xchg
push
jns
daa
and
xchg
mov
test
push
outsb
adc
or
xlat
movsb
pop
in
filds
xchg
jmp
pop
sub
and
mov
jg
fiaddl
leave
rolb
or
je
cmp
stc
push
cltd
pop
lret
pusha
or
and
bound
es
sti
in
repz
sahf
stos
add
dec
add
add
pop
xchg
dec
add
mov
ss
pop
lcall
ds
cmp
int
add
push
add
cmp
lcall
jo
sbb
aam
cmc
je
fsubrp
fstpl
sbb
push
push
aam
push
andl
scas
or
fs
insb
in
rcrb
cmp
dec
mov
jmp
fstpl
or
mov
stos
aam
imul
mov
lock
dec
sbb
cmp
loop
inc
fwait
and
pop
push
movsl
push
push
movsl
mov
faddl
fstl
imul
fistpl
fldl
pop
fsubr
pop
faddp
adc
pop
fildl
icebp
cmpsb
xor
shrb
push
mov
pop
mov
add
in
add
dec
mov
imul
insl
inc
jo
data16
mov
shll
mov
mov
push
or
aam
dec
adc
fdivrs
sub
xchg
test
xor
imul
mov
ja
test
jno
xor
push
or
jmpw
sub
rolb
into
push
gs
push
sbb
and
frstor
sbb
xchg
setbe
pop
jb
cmp
cmp
cmp
mov
int3
dec
sbb
ret
aam
pop
outsb
push
xchg
jp
sub
mov
jne
pop
in
sub
jecxz
add
pop
add
mov
scas
lock
jmp
mov
cmp
jge
add
insl
sbb
pusha
adc
dec
and
sub
pop
push
rol
outsb
cmp
ud0
pop
pop
adc
mov
stos
pop
and
push
jmp
addr16
outsl
lods
push
pop
xchg
ss
js
mov
imul
aaa
push
cmp
jne
push
push
adc
or
insb
aam
jl
and
pop
mov
ljmp
ror
inc
add
xchg
pop
inc
cmpsb
sbb
xchg
or
jns
mov
push
adc
push
mov
ret
or
inc
insl
cmp
dec
bound
pop
stos
in
mov
aam
push
mov
bound
adc
and
jmp
pop
ss
imul
push
cmp
arpl
xchg
test
add
int
add
xchg
ret
dec
cwtl
ficoml
xor
pop
fsubrp
pop
jp
cli
decl
inc
adc
imul
sbb
mov
xor
arpl
jmp
bound
mov
mov
push
outsb
movsl
mov
scas
call
adc
jae
mov
or
push
add
hlt
sbb
sarb
dec
inc
and
and
in
pop
or
inc
dec
mov
adc
std
jg
aaa
lds
and
add
lock
sub
imul
stos
or
push
out
loop
or
fadds
xorl
jns
pop
adc
fcoms
push
add
pop
out
push
rcrb
loope
sub
iret
xchg
pop
and
inc
subl
pop
pop
lock
cmp
je
add
fsubl
cwtl
dec
pop
adc
ret
fwait
and
jno
fdivrl
mov
adc
leave
roll
addr16
mov
mov
enter
mov
xorl
push
inc
sbbb
xor
and
arpl
inc
sarb
fisttpll
adc
inc
add
mov
dec
adc
mov
mov
adc
lret
pop
mov
rclb
test
pusha
lea
xchg
sbb
clc
adc
cs
repz
push
lcall
mov
sar
mov
mov
jge
gs
shr
push
hlt
lahf
arpl
sbb
lock
ljmp
leave
jne
jg
stos
ret
push
cs
mov
dec
push
add
shlw
addl
cmp
scas
in
adc
imul
insl
jmp
mov
cmpsl
push
add
rclb
xchg
out
popf
js
in
mov
clc
enter
lods
pop
jecxz
mov
pushf
pop
dec
ja
mov
push
xchg
and
sub
repnz
imul
inc
sbb
enter
push
mov
jmp
popa
mov
ret
mov
lret
add
mov
aaa
dec
mov
outsl
mov
sbb
and
xor
inc
add
mov
hlt
add
xor
nop
jbe
mov
test
jbe
leave
push
outsl
test
dec
insb
pusha
stos
xchg
jbe
leave
lods
xchg
outsl
js
mov
sbb
ljmp
pop
cmp
scas
in
xor
mov
sbb
loopne
test
dec
pop
dec
push
andl
sbb
int3
dec
lods
add
in
cmp
sub
jne
or
adc
mov
ficoml
xor
loope
stos
js
das
mov
pop
sbb
cmpsl
cli
lods
xor
loopne
sbbl
out
test
jp
ljmp
mov
popa
fdivr
cs
add
and
ficoml
fsubs
push
cmpl
mov
cmpsb
mov
inc
add
mov
xor
pop
xchg
adc
enter
pop
push
jge
mov
push
jae
pop
fs
pop
inc
pop
sub
pop
xlat
xchg
mov
xor
mov
push
inc
inc
push
add
test
push
sub
int3
sbb
jbe
dec
test
je
loopne
mov
inc
adc
mov
sbbl
cwtl
movsl
sub
cmp
test
mov
and
aaa
call
mov
adc
cmp
sub
dec
icebp
inc
cmp
dec
or
inc
pop
cmp
inc
push
inc
xlat
pop
sub
xor
add
ljmp
pop
insb
jp
mov
xchg
sbb
jne
xor
aas
dec
mov
shlb
aaa
push
popa
pop
pop
lcall
push
cltd
push
sarl
aas
xor
pop
dec
dec
and
or
lock
test
jmp
adc
sbb
cmp
xchg
loop
or
shll
pushf
std
loope
enter
mov
sub
addb
inc
mov
lods
dec
js
or
repz
dec
dec
rclb
sub
adc
push
mov
stos
dec
loop
rcrb
jle
mov
stos
test
push
in
or
pop
fcomps
aam
mov
movsb
jae
xchg
dec
push
push
loope
add
sbb
sti
les
cwtl
dec
in
movb
in
and
push
sbb
jbe
cmp
dec
mov
xchg
add
add
arpl
inc
lcall
xorl
pusha
and
or
daa
mov
add
and
sub
rolb
add
je
add
std
faddl
or
sarl
enter
xchg
cmp
mov
outsb
xchg
rol
xchg
xorb
cmp
loopne
clc
jl
add
cmpsl
xchg
cmpsb
movsb
imul
addr16
sbb
loopne
rcrb
mov
aam
leave
in
sbbb
push
sahf
add
add
add
push
lret
xor
add
sahf
testl
sti
sbb
or
dec
repz
lcall
out
push
mov
jl
inc
xchg
push
loope
movsb
test
mov
mov
and
pop
stc
push
xchg
mov
inc
xor
data16
jmp
mov
pop
push
cmc
in
pop
push
push
sub
stos
cmc
out
sub
xchg
popf
pop
neg
push
adc
jmp
sub
pusha
mov
sbb
imul
pop
jecxz
popf
or
lahf
jp
rcrl
loope
jmp
ja
push
push
add
push
hlt
jge
inc
mov
adc
inc
sub
pop
loopne,pn
xorl
stc
pop
or
out
cli
jae
pop
inc
jle
or
or
mov
sub
outsb
inc
xchg
faddl
pushf
xor
mov
in
loopne
push
aaa
sub
inc
inc
add
addr16
or
adc
push
sarb
mov
and
sarl
inc
or
mov
rcrb
dec
and
mov
rol
pusha
or
rcr
and
sbb
int3
sub
pop
daa
inc
sbb
xchg
sbb
cmp
clc
imul
adc
inc
and
jecxz,pn
stos
jmp
push
dec
sbb
ljmp
lahf
cmp
or
ret
and
push
dec
je
sub
fadds
inc
fsubrl
jle
xorb
or
pusha
and
and
pop
add
mov
push
xor
jmp
cmp
push
mov
in
lds
lock
popf
add
jb
stos
sub
cltd
sbbl
adc
add
nop
in
imul
ss
push
pop
lods
int
or
mov
mov
and
and
mov
in
mov
or
inc
ljmp
jmp
adc
xchg
mov
inc
cmp
sbb
nopl
mov
jnp
cmc
cmpsb
les
push
dec
push
add
mov
movq
inc
add
and
xchg
in
fidivs
loope
addr16
and
jmp
push
dec
xor
push
pop
mov
push
add
test
lret
inc
pop
add
cmp
add
dec
loope
in
sub
cmp
popa
adc
iret
inc
inc
dec
push
cmp
push
and
and
ficompl
inc
xor
aas
lahf
les
cmp
xchg
xchg
mov
jl
sbb
inc
andl
dec
xchg
inc
das
dec
or
inc
and
fwait
pop
lea
or
loop
pusha
jl
xor
pop
add
sub
cltd
shlb
ret
xor
or
sbb
inc
js
add
dec
add
pop
and
add
call
addb
adc
sub
or
inc
fstpl
pop
cmp
sbbl
or
mov
icebp
push
in
call
cli
std
scas
rcrl
jge
or
daa
xchg
inc
xor
or
jl
xor
push
sbb
hlt
in
cwtl
fdivs
sahf
adc
in
jns
or
add
xchg
jp
push
or
sbb
add
addr16
imul
pop
xchg
jno
mov
fsubrl
fildll
aam
xorb
lods
or
xchg
fnsave
pop
data16
mov
mov
ret
aad
andb
inc
and
mov
aaa
add
and
jle
lock
push
and
sar
add
cmp
ja
nop
je
clc
pop
adc
or
movl
push
je
and
cmp
lea
sbb
nop
push
xchg
push
xorb
mov
or
dec
cmc
push
and
sbb
mov
cld
addl
or
jmp
adc
or
pushf
xor
aaa
xor
inc
aam
add
ds
cwtl
push
or
cltd
sbb
test
lock
xchg
aas
pusha
lea
mov
rcl
adc
jns
je
sub
lods
jl
and
jo
scas
and
cmp
jl
xor
lret
outsl
imul
jmp
or
push
cmp
cmp
sub
sbb
push
cmpb
es
dec
mov
sarl
push
pop
enterw
mov
shr
pop
cwtl
repnz
std
dec
mov
push
pop
imul
push
mov
cmp
jno
cmpsb
inc
cmp
mov
lock
jmp
or
xor
push
cltd
jo
jnp
inc
and
pop
jne
jns
pop
sti
mov
loopne
repnz
push
jmp
push
or
push
dec
sbb
loope
divb
jmp
int
stos
xor
imul
sub
push
jne
jnp
in
jl
inc
mov
dec
push
jge
lret
scas
loop
mov
inc
xor
xchg
int3
sub
mov
add
sub
inc
push
sahf
add
push
sub
pusha
sub
ljmp
inc
pop
inc
xor
cld
adc
into
sar
adc
or
fimuls
and
sbb
shlb
in
pop
imul
lods
pop
push
ss
mov
push
jno
rorb
lea
fldcw
cld
adc
je
push
lods
incb
fs
add
push
clc
mov
push
stos
fistl
mov
xchg
adc
and
js
cmp
or
pop
icebp
inc
sbb
mov
aad
nop
xchg
add
das
and
and
rcrb
jg
sbb
push
cwtl
mov
mov
mov
jle
cli
or
mov
arpl
iret
inc
add
mov
adc
adc
jl
loope
pop
stc
mov
jl
popa
nop
jb
mov
imul
enter
lret
enter
cmpl
inc
pop
movsb
cmp
mov
push
or
pop
and
pop
insl
popa
pop
mov
push
out
fcomps
cmp
lods
push
sub
cmp
inc
stos
js
pusha
add
or
pusha
testl
fmuls
cmp
xor
push
cmp
dec
pop
ret
mov
data16
test
je
aas
jne
loopne
add
mov
pusha
inc
or
out
pop
sub
movsl
imul
mov
or
jbe
aas
mov
sub
jae
sbb
adc
adc
adc
pop
cmpsl
aaa
stos
arpl
loopne
add
pop
arpl
xor
fwait
mov
inc
add
push
pop
fdiv
je
push
mov
push
cmp
in
add
sub
ss
adc
out
leave
jne
push
jmp
cmp
je
mov
into
adc
or
test
push
pop
xchg
arpl
test
add
or
add
and
or
nop
das
divb
aam
and
sbb
push
inc
cs
add
addb
stos
mov
or
das
cmpsb
shl
fmuls
cmc
mov
cltd
and
lods
mov
mov
js
or
mov
mov
mov
adc
fisubl
aaa
or
decl
push
fsubrs
mov
sub
cmp
shlb
and
sbb
test
mov
jb
add
xchg
mov
daa
jge
iret
rcr
pop
scas
dec
add
shlb
test
jne
mov
mov
sbb
dec
jecxz
imul
push
lea
call
sbb
fisttpll
mov
adc
inc
stos
dec
loope
mov
sbb
pop
fwait
fs
jns
fdivs
stos
jmp
or
movsb
dec
mov
scas
or
inc
rolb
mov
push
fs
insl
xchg
test
mov
popf
sti
cwtl
or
mov
adc
stos
in
fisubrl
sub
loope
and
mov
ss
mov
rcrb
test
add
add
push
out
mov
push
sbb
ret
jne
aad
push
mov
loope
fistpl
inc
adc
or
lret
add
mov
or
rcr
das
icebp
add
iret
jge
popf
xor
in
push
sbb
mov
cmp
pop
mov
mov
stos
loopne
mov
inc
adc
or
imul
test
mov
jne
and
mov
xchg
jmp
push
add
icebp
xor
ja
push
mov
ret
jno
ret
mov
lahf
scas
ret
adc
mov
add
pop
aam
xor
add
sub
mov
lods
and
into
xchg
in
jmp
adc
pop
xchg
insb
add
inc
jle
incl
mov
or
clc
and
jecxz
lret
push
out
ret
fidivl
sub
or
enter
add
fwait
int
adc
mov
fmuls
dec
or
jg
cmpl
popf
rolb
adc
outsb
loope
mov
pop
xchg
mov
fcompl
je
imul
add
inc
add
cmpsb
xchg
inc
popa
ret
cmpl
lahf
rorb
sbb
mov
sub
fwait
outsb
and
inc
and
jecxz
scas
ds
and
mov
jmp
mov
ljmp
mov
decl
adc
xchg
cmp
jl
jp
or
push
push
push
filds
mov
lods
rclb
lods
push
insb
loop
and
arpl
mov
mov
sbb
cli
lea
inc
jp
sbb
movsb
and
xlat
sbb
mov
in
mov
mov
loope
or
xchg
hlt
mov
or
das
movsb
imul
push
push
in
jecxz
shrb
push
pop
movl
push
dec
pop
jb
insb
add
lock
cmp
shlb
rcl
jecxz
mov
inc
movsl
ret
inc
dec
add
loopne
mov
aaa
inc
pop
mov
cwtl
sub
ja
push
pop
orl
adc
fimull
scas
sti
jb
push
push
pop
mov
xchg
pushf
mov
and
sub
push
xor
lock
mov
add
mov
jb
and
mov
add
cld
mov
inc
or
xor
mov
sub
lods
sub
out
push
inc
orl
inc
sbb
imul
mov
lcall
xor
jbe
js
add
pop
or
and
add
mov
or
shl
sbb
push
pushf
xchg
cs
lea
jecxz
lea
jmp
test
mov
lcall
pop
leave
repz
add
jb
xchg
jo
add
in
imul
push
push
push
bound
dec
mov
out
adc
jl
cmp
and
mov
test
push
cwtl
mov
adc
rclb
push
push
lcall
push
push
push
xor
or
push
scas
push
and
jb
adc
or
test
adc
inc
scas
or
or
or
ss
cmc
bound
das
dec
les
je
xorb
xor
js
rorb
cwtl
and
push
dec
push
cli
ss
sbb
in
adc
sbb
mov
fimuls
add
in
pop
xchg
rorb
mov
pop
sbb
push
test
xchg
invd
popl
push
pop
divb
loope
fldt
add
add
stos
std
adc
fs
mov
adc
cmc
out
mov
popf
mov
or
mov
add
je
adc
rcr
ret
pop
push
mov
rcrl
inc
push
inc
push
enter
adc
add
adc
mov
push
and
add
outsl
push
or
psrld
aam
mov
inc
sbb
test
mov
adc
dec
push
pop
outsl
mov
mov
xchg
pop
or
lret
dec
inc
mov
iret
mov
das
cmpb
push
adc
popf
inc
mov
or
in
ret
mov
sbb
pop
inc
sub
adc
pop
push
lahf
call
subb
xchg
movsb
cmp
add
push
xchg
call
fisubl
sub
test
popa
sub
jmp
in
push
lea
outsb
adc
adc
add
mov
jo
mov
jmp
mov
aam
scas
movsl
and
adc
sbb
aam
dec
loopne
dec
sbb
ret
and
push
sbb
and
xor
mov
mov
jbe
mov
ja
adc
push
jo
outsb
sub
xchg
fdivrs
mov
test
lret
or
outsl
mov
imul
add
rclb
mov
ljmp
fcmovnb
pushw
out
xchg
out
mov
and
dec
pop
inc
stos
in
les
mov
add
mov
add
pushf
xchg
fsubs
and
adc
xchg
test
or
insl
faddl
or
loopne
pop
mov
jecxz
add
sbb
shll
test
fcoms
pop
insb
sub
lea
sarl
pop
shll
lods
mov
jp
push
gs
cld
ja
mov
xchg
push
das
adc
sub
push
push
xor
or
fmull
in
stos
xor
rcll
mov
mov
inc
pop
ret
fiaddl
ss
mov
pop
stos
idiv
rcl
out
push
push
test
mov
stos
in
mov
push
test
cmp
fsubs
add
xor
lods
pushl
fistpll
push
mov
push
fstpt
test
and
out
inc
enter
test
syscall
cmp
add
mov
ror
js
mov
loopne
stos
inc
ljmp
lods
cmpsb
mov
test
mov
and
and
pop
mov
cld
addr16
adc
insb
lds
lret
push
and
push
lea
push
and
sti
add
repnz
xor
outsb
add
pop
jns
lods
inc
push
lahf
pop
std
mov
push
sbb
inc
cmp
in
test
add
push
inc
mov
sbb
imul
rorl
lock
rcl
loop
loop
push
or
push
shlb
push
mov
mov
or
mov
les
stc
dec
xor
mov
adc
push
shll
add
loopne
nop
cmp
push
mov
pop
mov
mov
push
aam
sub
sbb
adc
in
xor
add
mov
subl
push
mov
adcl
nop
loopne
cmpsb
and
and
lock
cmpb
rorb
and
enter
xchg
xchg
cmp
decb
nop
pop
and
add
cmp
push
in
dec
iret
mov
fwait
add
loope
lret
xchg
clc
sbb
sbb
movsb
ja
pusha
cmp
or
mov
mov
or
mov
aam
pop
out
jle
jmp
and
xor
test
mov
push
ljmp
mov
fstps
jo
mov
mov
cmp
ret
and
pop
ret
cmp
mov
adc
and
je
ja
sarl
popa
inc
shrb
pop
and
test
adc
or
out
pop
mov
xchg
inc
push
push
lods
addb
pop
pop
les
popa
adc
inc
add
test
enter
fcom
xorl
and
dec
mov
mov
mov
fcoml
jl
cmp
mov
push
xchg
je
clc
push
and
popf
cmp
jns
xchg
sbb
pop
cmp
jmp
mov
push
add
hlt
push
xor
pusha
or
xor
push
xchg
push
shlb
hlt
dec
ja
adc
mov
xchg
add
push
popa
push
je
hlt
call
xchg
xchg
add
add
xchg
xchg
xchg
xchg
push
pop
or
int
int
or
jnp
or
jbe
jmp
or
int
int
por
jmp
adc
pop
adc
int
int
push
adc
dec
adc
dec
adc
int
int
aas
pop
jmp
sbb
xor
int
int
jmp
sbb
es
and
int
int
pop
pop
jmp
and
or
add
and
test
inc
pop
dec
pop
mov
xchg
or
jno
jbe
out
mov
ret
popl
clts
jecxz
iret
repz
repz
add
or
iret
repz
adc
and
sub
cmp
cmp
inc
dec
repz
repz
push
pop
pop
fs
repz
imul
iret
repz
mov
xor
pop
enter
add
pushl
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
lgs
aas
push
shrb
enter
sub
inc
add
daa
icebp
adc
cmpb
ja
inc
sub
mov
xor
ret
adc
cmp
cs
jbe
pushf
les
push
aam
push
adcl
add
pop
add
add
cli
push
popa
les
outsb
xor
push
mov
cmp
jb
inc
and
popa
mov
test
cmp
das
std
sub
loopne
push
push
dec
mov
movsl
mov
sbb
add
aam
shrl
daa
push
add
sti
in
addl
mov
inc
js
lods
cmp
out
mov
xchg
shll
cmpl
mov
rclb
sbb
add
lea
add
sbb
jno
or
pop
loop
mov
mov
loopne
push
fcompl
cmpb
mov
mov
je
dec
rcrb
cmp
jae
mov
rcr
sbb
ljmp
and
mov
xchg
xor
aam
les
mov
je
mov
inc
sbb
rol
xor
fldl
or
pop
add
push
mov
mov
inc
mov
push
mov
ror
sti
shr
xor
pushf
shll
fld
ret
or
or
icebp
add
add
add
popa
add
or
jg
popf
ret
insl
push
or
and
xor
add
add
test
push
aam
sub
jge
fsubr
add
lcall
mov
ror
mov
fisubl
in
jge
xor
and
and
mov
push
shrb
fmuls
inc
test
xor
xor
int
gs
repnz
and
fmull
pop
push
testb
ja
and
not
and
sbb
add
add
add
cs
fsubr
rolb
call
shll
xor
push
lcall
rol
shll
xor
add
push
xor
push
cs
fcomp
loopne
imul
xchg
add
cmp
and
fwait
push
cmp
data16
add
repnz
les
pusha
push
and
mov
aaa
fadd
cmpsb
loopne
xorl
fwait
call
imul
call
rorl
cmp
pop
cmp
aam
lock
jns
pop
aaa
mov
out
mov
or
xor
and
out
lock
iret
or
sbbl
xor
add
inc
addl
aas
fdivs
ret
add
push
ret
push
jo
call
adc
or
sarb
or
push
into
aam
filds
inc
jne
and
je
mov
sbb
mov
dec
fadds
pop
fs
js
call
or
ret
lret
push
clc
jl
jno
shll
and
add
and
add
shrl
inc
fs
adc
xor
in
gs
lret
rol
inc
aam
mov
test
or
adc
mov
aam
cmp
cmpsb
imul
xchg
inc
mov
add
mov
shl
rolb
dec
cmp
or
push
lcall
rorb
lcall
adcb
and
dec
stos
imul
inc
push
and
dec
scas
dec
cs
int3
dec
push
movsb
cltd
add
xor
adc
gs
push
cwtl
addb
pop
mov
and
int
leave
push
push
pop
sbb
xor
cmp
fcoms
ret
test
push
add
cmpsl
mov
and
scas
inc
or
add
pop
fcompl
pop
test
lret
adc
inc
pusha
loopne
push
mov
push
clc
ret
or
mov
imul
jnp
xchg
or
push
adc
imul
stc
adc
and
stc
stc
mov
int3
and
ret
mov
fildl
insb
jb
cmpsb
imul
adc
push
call
and
ficomps
and
push
add
inc
rorb
dec
add
outsl
popa
xor
shrl
mov
cs
test
testb
cmp
jb
cmc
jb
aaa
sub
sbb
mov
sub
pop
xor
push
addl
push
adc
pop
mov
or
rol
and
call
jne
add
test
loop
jae
stos
or
sub
mov
sub
loopne
aas
push
je
lea
jmp
jl
sub
adc
loopne
sub
pop
mov
pop
ret
fimull
pop
jne
pop
cmp
std
stos
and
mov
push
sahf
idivb
or
enter
clc
aaa
jbe
or
push
pop
and
in
adc
cmp
inc
add
jae
sbb
pop
rolb
rep
fimuls
jbe
outsl
jbe
movsb
xchg
sbb
lret
fs
lock
ror
mov
hlt
push
shr
je
and
xchg
fistps
pop
cmp
dec
mov
lcall
outsl
sbb
movb
adc
orl
test
and
test
movl
inc
fdivrl
outsb
sub
add
les
inc
jge
pop
xchg
fwait
es
loop
outsl
sbb
pop
xor
pop
xchg
pop
mov
push
or
mull
cmp
ja
inc
stos
mov
add
cmp
sub
mov
sbb
imul
or
pop
fs
or
and
ret
sbb
add
cmp
push
xorb
jnp,pn
jle
and
mov
push
adc
ret
add
xor
or
test
mov
mov
inc
adc
push
fadds
stos
xchg
pop
arpl
outsb
cmc
out
or
mov
repz
clc
ret
pop
or
pop
in
adc
or
dec
adc
adc
mov
mov
sbb
xor
sbb
sbb
add
dec
jb
and
fldl
adc
jae
mov
jmp
mov
cmp
sbb
adc
dec
sbb
mov
cltd
nop
sbb
daa
push
add
ret
pop
and
lods
nop
lret
xchg
ja
add
mov
sbb
sub
and
and
dec
xchg
mov
add
inc
jne
rorl
cmp
adc
pop
adcl
mov
icebp
mov
loope
cmp
jl
popl
sub
pop
xor
fcom
pop
xor
std
jle
fidivrl
xor
jbe
cli
es
lea
cmp
popa
sti
inc
or
jg
and
or
js
add
sub
or
or
jne
adc
inc
push
aad
lods
das
jp
or
xor
cmpb
stos
jbe
jle
outsl
or
icebp
jl
dec
pushf
sahf
cmp
push
js
sarb
xchg
mov
mov
pusha
and
push
dec
daa
lods
test
stos
inc
ret
jae
movzbl
adc
mov
and
add
inc
js
inc
das
mov
dec
jmp
dec
adc
push
aam
fcomps
add
ss
push
mov
popl
ret
mov
les
inc
and
inc
shll
sbb
sub
xchg
jo
lods
cmp
pop
hlt
lahf
cltd
ja
mov
cmp
test
loopne
sub
mov
sub
mov
clc
push
ret
dec
and
cwtl
inc
bound
xor
xchg
mov
pop
or
add
and
add
and
add
pop
or
outsl
fs
js
jne
adc
push
fsubs
mov
cmc
mulb
psubsb
pop
push
sub
aam
mov
mov
dec
sti
bound
adc
inc
cmpsl
mov
mov
xor
push
dec
dec
sbb
pop
and
popa
xor
and
fiaddl
add
xchg
add
add
fmuls
mov
mov
roll
bound
je
outsl
out
cld
xor
add
sbb
cltd
lock
enter
mov
rolb
or
or
les
adc
mov
add
mov
incb
sbb
add
dec
sub
enter
incl
pop
popa
and
pop
fstpt
dec
and
push
lods
add
jge
push
fsubrl
pop
ja
mov
add
ljmp
push
jmp
outsl
adc
jmp
jle
push
dec
pop
jne
ret
dec
pop
pop
test
idivb
and
loopne
cmpl
daa
push
pop
stos
mov
pop
pop
testl
mov
fstpt
arpl
fnstenv
push
sbb
lret
and
ds
push
sub
sbb
xchg
fwait
push
or
imul
mov
sbb
sub
mov
or
aas
or
inc
push
push
ds
push
push
adc
push
aam
mov
test
add
cmp
outsb
push
ret
inc
rcrb
push
repz
out
mov
lock
inc
call
hlt
xchg
inc
dec
inc
mov
shlb
adc
sub
cmp
push
cmp
dec
leave
dec
add
mov
xor
xor
rorb
sub
dec
xorl
dec
inc
dec
cli
push
xchg
sub
push
jno
push
stc
ret
lea
ss
fwait
dec
adc
scas
unpckhps
call
jnp
pop
mov
push
imul
dec
or
test
jae
aad
daa
lods
mov
sbb
sub
sbb
scas
xor
dec
inc
dec
cmp
imul
dec
stos
mov
push
cmp
and
mov
test
cmp
sbb
cmp
adc
mov
sub
imul
xor
shll
cmp
inc
cwtl
je
pop
inc
pop
inc
inc
rorl
pop
or
imul
sub
stc
push
pop
mov
and
loope
jo
add
adc
test
iret
add
cmp
fnstenv
add
lret
shll
ret
sub
dec
mov
pop
fnsave
shrl
push
mov
or
or
cltd
jae
clc
jo
cld
cmpl
push
cmpsl
mov
dec
adc
inc
and
loop
cwtl
lds
xchg
movsl
sahf
les
xorl
add
push
and
jb
and
push
xchg
es
adc
sbb
sbb
mov
data16
enter
adc
shlb
mov
lock
or
fld1
sub
mov
fimull
push
hlt
ss
cmp
push
jbe
xor
xchg
dec
sub
ljmp
ret
cmp
ss
testb
mov
adc
lcall
and
cmpsb
or
push
ja
adc
sub
in
jae
or
cwtl
outsb
sbb
fwait
adc
xor
xchg
pop
jnp
sbbb
push
scas
stos
mov
adc
sub
cmp
xorl
call
addl
inc
sbb
ds
rorl
pop
and
xchg
notl
sub
or
ds
shlb
cmpsb
lds
mov
and
or
xor
mov
or
mov
pop
adc
movd
icebp
mov
push
xor
bound
dec
cmp
insb
insb
pop
mov
inc
push
in
imul
bound
push
inc
imul
and
mov
push
nop
dec
xor
dec
scas
fs
mov
inc
ss
jbe
mov
xchg
cmc
push
push
push
push
or
mov
sub
sub
and
jg
mov
inc
dec
mov
fidivs
fsubrs
xchg
pushf
sbb
cmp
push
sub
jb
test
pop
shll
pop
pop
lea
cwtl
adc
or
in
push
push
inc
cmp
loopne
and
pop
or
sbb
jmp
fisubl
lods
fcomps
cs
and
and
sbb
mov
sbb
adc
jmp
int
loope
xchg
cmp
fistpl
cmp
leave
leave
sbb
cwtl
cltd
xor
movb
dec
mov
ret
insb
aad
inc
push
cltd
or
jnp
daa
xlat
out
mov
out
adc
mov
or
jle
int
es
adc
mov
popf
insb
imul
mov
mov
rcr
pop
mov
adc
push
movsb
lock
and
push
adc
decl
sbb
jne
xchg
adc
push
fstl
sti
push
or
and
cld
mov
addr16
dec
dec
sbb
sbb
fistpl
js
mov
pop
or
jmp
pop
sar
xor
dec
pop
cmp
je
cmp
add
xchg
push
push
inc
cltd
cmpsb
lret
push
mov
fdivrl
mov
push
sub
xchg
cwtl
sbb
inc
sub
ds
xchg
inc
dec
mov
mov
scas
decb
scas
sub
add
add
mov
mov
jp
or
aam
inc
fstpl
loope
pop
shll
nop
adc
jns
and
adcl
and
fidivrs
or
or
add
lods
test
cmp
cs
arpl
mov
ret
xchg
les
pop
mov
xchg
repnz
popa
aam
sub
add
cmp
xchg
rolb
andb
push
loop
push
xchg
mov
insl
push
or
filds
or
or
hlt
adc
pop
repnz
push
inc
pusha
cmp
pop
cmp
dec
add
inc
sbb
dec
inc
push
les
cmp
sbb
sub
mov
lea
daa
mov
pop
cmp
jg
test
out
sub
push
cmp
jge
mov
inc
add
bound
ds
lock
lea
jae
sqrtps
add
inc
push
jecxz
shlb
inc
xchg
or
lock
clc
clc
cld
loope
add
mov
or
add
and
and
add
cmpsb
push
mov
push
and
sbb
xor
dec
je
add
decl
adc
cmp
dec
or
mov
shr
sbb
decl
mov
mov
or
mov
sub
mov
push
mov
lds
sahf
and
jb
mov
sub
mov
or
mov
or
je
push
add
leave
mov
out
loop
push
xor
outsl
mov
repnz
add
add
jmp
sub
in
add
push
add
add
je
cmp
jne
sbb
adc
mov
pushf
cmp
or
dec
roll
xor
add
sub
or
outsl
clc
xor
inc
adc
inc
jmp
mov
or
cltd
idiv
inc
inc
mov
or
ljmp
add
mov
mov
jp
xchg
push
jo
push
cmc
je
mov
add
or
cmp
mov
stc
push
or
lcall
and
adc
push
cmpsl
mov
cmp
cmp
je
cmpsl
xor
fnsave
inc
test
jmp
daa
pop
cli
js
xor
rolb
in
clc
jae
dec
adcl
mov
outsb
gs
jae
call
lods
jmp
mov
xor
sub
jle
in
arpl
cmp
je
cmp
push
mov
je
cmp
jne
inc
jne
and
push
mov
flds
or
push
pop
inc
mov
xlat
adcb
pusha
jb
mov
je
ret
fldenv
and
test
add
xor
cmp
loop
cmp
push
dec
stos
test
cmp
add
pop
andb
shrb
push
lods
or
adc
push
xorl
mov
jp
jl
sti
sub
push
mov
jmp
and
out
xchg
push
jmp
inc
jl
inc
jg
mov
jp
add
shl
dec
mov
sub
mov
enter
mov
mov
rol
jg
repnz
int
imul
and
and
sub
loop
push
rcrl
or
adc
add
out
mov
jle
and
dec
pop
lods
push
pushl
insl
push
mov
inc
cmp
pusha
mov
jg
fcomi
ret
push
push
fs
imul
mov
out
mov
roll
dec
jl
xor
aaa
lcall
iret
orb
cwtl
xchg
popa
adc
aaa
mov
lods
aad
daa
jge
add
das
fimuls
lods
mov
and
cmp
dec
movl
add
ja
adc
cmp
mov
inc
inc
push
out
jmp
xor
inc
adc
mov
movsl
dec
fs
sbb
push
mov
addb
pop
mov
pop
fsubr
mov
cs
push
shrb
dec
cmp
cmp
int3
or
cwtl
mov
cli
inc
lret
fwait
je
add
or
orb
and
cmpsb
pcmpeqb
adc
and
mov
mov
push
clc
out
push
je
ljmp
add
jne
pop
adc
adc
cld
imul
bound
inc
mov
iret
push
push
add
in
imul
je
xor
sub
or
shll
movsb
fsts
test
adc
adc
xchg
xlat
ret
in
push
pop
xor
subl
dec
adc
xor
mov
imul
lret
mov
aaa
mov
sahf
mov
andb
cwtl
xchg
push
dec
cmp
adc
insb
sbb
mov
push
lock
sub
jge
jne
mov
sub
sbb
test
sub
rcll
add
and
mov
movsl
push
xor
pop
es
inc
inc
add
xchg
je
loopne
mov
sub
sub
mov
add
cmp
shrb
and
mov
mov
mov
test
jp
pop
inc
imul
mov
andb
icebp
adc
out
jmp
push
rolb
mov
rorl
inc
out
sahf
sbb
dec
adc
stos
xchg
rorl
iret
dec
mov
dec
sbb
sarl
sbb
jl
ret
jb
or
xor
rorb
cmp
enter
dec
or
and
daa
pop
jne
push
movb
xor
and
hlt
mov
sarl
push
cwtl
jge
inc
incl
cmp
push
andb
pop
xor
cmp
andl
adc
rcrb
daa
push
mov
sub
ficompl
cmp
mov
pop
adc
imul
out
cmp
sahf
xchg
and
pusha
add
xor
or
insl
xor
mov
cs
je
xor
lahf
mov
popf
and
mov
jmp
movsb
sub
leave
enter
or
movb
jbe
push
fs
push
inc
cmp
jmp
mov
add
cmpb
jne
mov
fincstp
mov
pop
ret
mov
data16
push
jne
xor
leave
adc
sbb
dec
ret
sbb
mov
push
sub
lods
sub
xor
cs
rcrl
mov
dec
sub
mov
push
xchg
subl
jb
push
mov
loope
add
es
push
out
fs
adcl
inc
add
adc
inc
lock
xor
adc
ja
int3
rorb
std
pop
repnz
jp
addl
lret
pop
adc
call
shll
push
ja
les
jnp
adc
mov
mov
push
pop
fnstsw
mov
dec
dec
and
mov
or
cmp
shrb
adc
pop
push
nopl
inc
test
jb
mov
xor
rclb
pop
in
popa
ret
inc
insb
je,pt
inc
add
push
xchg
push
push
scas
shll
sbb
sarb
rcrb
lods
addl
sub
push
pop
cmp
xchg
pop
bound
fisttps
mov
imul
mov
lock
clc
push
push
jbe
adc
pop
jo
mov
fsubs
add
loopne
addr16
push
jo
add
lods
loopne
or
sbb
fwait
pop
fists
das
aam
in
ror
sahf
sub
xchg
pop
mov
lock
orb
cli
xchg
sub
rolb
push
ror
shr
sbb
loop
inc
push
sub
andl
fidivrl
dec
mov
mov
sub
push
sbbb
mov
add
pop
inc
or
into
jmp
aam
rcll
push
push
test
leave
add
sahf
lret
pop
mov
lods
bound
inc
outsl
rcll
or
mov
xor
in
std
cmp
lcall
xor
shr
cmp
aas
push
dec
ljmp
imul
inc
cmp
je
ret
scas
test
push
adc
sbb
or
sbb
mov
and
add
sub
mov
xchg
and
ljmp
mov
mov
mov
dec
jne
and
nop
sbb
xor
mov
cmc
dec
adc
addr16
adc
in
push
daa
sbb
pop
or
cmp
add
sti
xor
push
scas
push
inc
pop
add
push
adcl
jg
fsubl
mov
add
add
jmp
add
inc
xchg
scas
mov
push
mov
push
outsl
push
push
jecxz
or
daa
jmp
push
fbld
or
arpl
or
xor
xchg
mov
ljmp
jne
fimuls
push
add
mull
add
or
add
adc
xor
loop
iret
test
out
add
xorl
mov
jns
add
mov
lahf
fdivl
dec
pop
xchg
fnstenv
daa
inc
or
jl
xor
or
and
dec
add
pusha
or
add
push
bound
xor
movsl
xor
enter
sbb
movb
jge
xchg
add
into
je
mov
pop
add
enter
pop
jmp
jno
jb
xor
sbb
jo
divb
sbb
pop
mov
pop
mov
add
popa
loopne
lret
push
stos
andb
lcall
sbb
insb
pop
fmull
in
movsl
imul
lock
jnp
andb
ret
addr16
ret
add
mov
ds
jle
dec
inc
ss
lcall
sbb
les
into
or
popf
fcomps
add
inc
sub
sbb
or
adc
lods
into
subl
mov
les
and
in
pop
jo
popa
dec
outsl
xor
lahf
inc
sbb
mov
inc
fs
push
rclb
sub
popa
pushf
cmp
push
push
dec
pop
inc
dec
xor
pop
pop
daa
scas
lea
rolb
jns
in
sub
into
xor
pop
test
sbb
mov
push
loop
push
cmc
hlt
test
bound
mov
sub
mov
and
shl
push
mov
mov
cmp
xchg
or
fists
pusha
or
xor
fmuls
or
pop
or
fwait
fs
je
pushf
sub
movsb
xchg
movsb
push
adc
outsb
push
out
mov
cs
call
adc
imul
cwtl
lock
dec
adc
push
mov
test
push
hlt
lea
out
sub
push
xchg
or
sub
pop
loopne
or
dec
mov
mov
ret
mov
push
or
inc
add
stos
xor
and
in
es
stc
lar
mov
sub
fwait
xchg
inc
inc
xchg
test
mov
scas
pop
add
cmp
add
mov
fiaddl
xorb
push
jo
sbbb
and
mov
stc
push
push
popa
jns
mov
repz
add
xchg
insl
rorb
xor
jbe
mov
inc
sbbb
nop
xchg
cmp
shlb
mov
rcrl
add
lods
std
out
push
jmp
sbbl
test
fbstp
sub
inc
add
mov
movb
jge
es
cwtl
cmp
stos
add
dec
xor
add
inc
push
sarl
cmp
adc
es
push
enter
sub
fists
jmp
pop
nop
mov
add
mov
mov
mov
cmp
insb
shrl
mov
jo
inc
jg
xor
cmpsb
cmp
incb
jge
das
pop
push
ret
outsl
mov
xor
or
sti
aas
jecxz
pusha
cmp
dec
les
daa
lods
and
push
jne
popa
sbbb
or
and
cmpsb
mov
dec
xor
test
fistpl
cmp
filds
das
and
ficompl
pusha
add
inc
adc
xor
push
or
fistl
sbb
scas
fs
cs
push
xor
adc
popa
je
adc
mov
decb
daa
jo
dec
insb
mov
movl
outsl
jo
dec
push
jns
add
or
mov
gs
andl
add
bound
adc
rorl
xchg
pop
test
cmp
fwait
or
adc
inc
or
sbb
sub
sub
jge
subl
dec
or
aas
dec
adc
push
mov
js
and
adc
xchg
mov
popf
adc
mov
sbb
lock
cmp
rcll
dec
aas
dec
inc
and
sbb
ja
sbb
lea
aad
inc
test
jl
sbb
mov
push
and
loopne
mov
cmp
sub
rorl
outsl
pop
push
jae
push
sahf
pop
lods
mov
mov
jne
into
sbb
mov
add
push
ret
orl
lock
ds
xlat
sbb
push
lcall
jmp
jmp
mov
push
dec
adc
sarb
dec
mov
nop
xlat
adc
ss
pusha
sbb
adc
leave
add
in
add
test
add
mov
jmp
dec
fs
loopne
out
in
add
jle
cmp
adc
rorb
add
jl
and
aaa
je
inc
sub
loopne
xlat
dec
dec
sarb
movb
mov
dec
adc
movsl
scas
shlb
sub
aas
inc
jo
das
jl
jp
pop
clc
sbb
sub
cmp
or
jbe
xor
push
repz
insl
push
push
pop
addb
sub
cmpl
mov
push
cmp
pop
mov
mov
bnd
xchg
or
iret
loopne
mov
xchg
pop
pop
push
hlt
push
push
mov
push
push
inc
into
adc
pop
add
loopne
sub
ret
lret
test
xlat
xchg
loopne
push
mov
sbb
ret
mov
je
jp
and
mov
push
sub
mov
ss
dec
dec
rolb
mov
shl
xorb
add
leave
data16
lds
fs
dec
sbb
in
out
xor
sub
add
fisttps
jmp
inc
ret
and
or
jl
mov
and
add
inc
jp
sahf
into
shr
push
sbb
mul
mov
shrb
sbb
shll
popf
cmp
ja
scas
jo
shlb
cwtl
lret
ret
fildll
or
sbb
lods
xchg
xor
fdivl
bound
outsb
sbb
shrl
mov
and
sub
divl
mov
cltd
adc
or
cli
jmp
inc
ja
mov
fwait
or
lods
lds
mov
add
lcall
add
ljmp
sahf
adc
lock
xchg
mov
push
adc
mov
jae
loopne
faddl
fadd
jg
gs
addr16
and
push
xchg
scas
sbb
xor
mov
fisttpl
sub
lock
sub
inc
dec
xchg
daa
push
call
movsb
pusha
and
loop
push
xor
cmp
lea
int3
inc
push
jbe
or
cmpsl
fs
repz
rol
and
rorl
or
je
sub
xor
lret
rclb
push
push
lea
xchg
das
sub
push
divb
subl
or
cmp
dec
or
mov
add
and
movsl
pop
cmp
add
pop
lcall
in
call
add
adc
push
inc
jmp
or
js
rcrb
les
or
pop
dec
push
and
shlb
mov
clc
imull
and
daa
adc
inc
pop
subl
adc
sar
dec
test
xor
out
or
or
imulb
cld
sbb
add
cmpb
sub
push
mov
jb
and
jno
push
or
dec
or
adc
cwtl
add
les
cmp
add
in
nop
inc
inc
adc
je,pt
push
mov
mov
jbe
mov
fisubs
out
fidivl
mov
nop
or
jle
adc
aaa
ds
jg
ljmp
ret
jb
ss
sub
lock
mov
out
dec
lret
inc
inc
ja
mov
sub
inc
loopne
imul
orl
popa
dec
fs
shlb
leave
pop
sbb
push
inc
mov
mov
or
leave
inc
int
xchg
or
and
jmp
cmpsb
add
loopne
inc
cmp
test
xchg
inc
mov
cmp
sbb
lret
push
popf
fadds
push
lods
jl
jmp
das
addl
and
push
xlat
add
adc
lcall
mov
or
xor
pop
inc
mov
lods
jbe
inc
inc
adc
cli
cs
dec
sub
in
filds
test
hlt
xor
arpl
outsb
dec
insb
xchg
or
cld
xchg
push
cmp
inc
das
lock
xor
jne
mov
sub
mov
ficompl
subb
scas
push
cld
or
inc
jo
ljmp
add
out
add
fdivrl
lea
push
and
shlb
adc
push
bound
xor
gs
aad
rcrb
sub
add
sub
xor
aad
es
call
call
and
cmp
jne
push
jle
cli
push
mov
xor
sbb
pop
jg
lret
jne
mov
adc
fcomi
ss
cmp
std
push
in
dec
mov
inc
push
xor
pop
div
hlt
add
lea
mov
sbb
inc
mov
lock
addr16
xchg
xor
push
dec
adcb
sbb
inc
cli
push
cmp
mov
pop
add
push
arpl
adc
in
negl
and
jmp
pop
jp
adc
in
cmc
popa
jo
ja
dec
imul
rcr
andl
gs
loopne
pushf
outsl
in
fildl
lods
xor
loop
rolb
ret
or
rorb
loopne
je
pop
int
adc
lcall
inc
xchg
cmp
push
mov
je
adc
sub
sub
jne
bound
adc
out
adc
dec
add
popa
fwait
pop
cmp
jp
clc
int3
add
dec
push
push
ficomps
xchg
inc
or
pop
adc
dec
jge
push
cmpl
clc
mov
mov
pop
dec
cmp
jb
neg
xchg
rorl
fistpll
jne
mov
or
adc
and
je
rep
mov
imull
mov
dec
ljmp
insb
loop
gs
call
push
ret
mov
dec
jl
mov
rorl
ss
or
sbb
push
out
push
jne
sub
repz
xor
lea
test
sub
rorl
and
sub
lods
or
add
jno
fmuls
cwtl
scas
pop
push
icebp
dec
fsubrl
and
sbbb
psubusw
mov
out
xor
and
clc
jg
fs
int
jnp
pusha
jmp
jle
movapd
sar
push
enter
shlb
jle
adc
outsb
xor
cli
rcl
lret
sti
push
fs
je
cmp
and
lret
or
aaa
xchg
ljmp
pop
mov
cmc
and
in
add
mov
aam
call
adc
or
clc
adc
sbb
ficomps
xchg
repnz
imul
mov
mov
pop
sti
roll
shl
pop
enter
inc
push
ds
fisubl
loopne
push
dec
sbb
inc
pop
pop
pop
test
pushf
push
mov
xchg
cld
in
in
movsb
dec
and
orb
outsl
clc
add
rolb
pop
add
add
cmpsb
xor
std
xorl
test
mov
lret
or
jmp
jb
mov
rol
std
sbb
lcall
test
mov
lods
push
add
lds
sbb
push
push
inc
dec
pusha
mov
loope
stos
sahf
adc
push
popa
inc
pusha
cmpsl
lods
push
and
jmp
push
sbb
insl
or
lods
std
mov
push
sub
out
les
lock
ja
mov
jbe
sarl
sbb
adc
jne
loope
sti
pop
inc
cmpb
out
addb
stos
sub
dec
adc
add
int3
or
adc
xor
cmpb
fadd
daa
lcall
dec
push
gs
pop
scas
dec
cwtl
inc
sbb
jmp
xor
loop
mov
cwtl
loope
xor
outsb
xchg
cwtl
imul
jo
xor
js
enter
xor
push
dec
cwtl
mov
dec
ficompl
xlat
xor
nop
or
push
dec
sbb
in
add
adc
xchg
push
roll
jns,pn
or
pop
jmp
mov
cmp
jne
pop
sbb
inc
jb
cmp
mov
movb
mov
les
cli
pushf
pop
addr16
sbb
sbb
sbb
mov
or
pop
test
xor
enter
daa
cs
or
lods
mul
out
mov
xchg
dec
jmp
call
dec
flds
pop
cmp
adc
mov
pand
out
faddp
mov
add
mov
jne
orl
stc
inc
cld
add
jmp
push
and
xor
sub
out
loope
push
and
add
and
int3
testl
pop
sarl
pop
or
lcall
ss
cmp
int3
test
sbb
icebp
cmp
cmp
cli
adc
dec
adc
popf
insb
push
adc
inc
sub
fdivrl
bound
or
xchg
pushf
test
movsl
shrb
sub
in
rolb
add
aas
lretw
shlb
jl
inc
push
fs
pop
pop
adc
pop
movsl
sti
mov
insl
jle
or
enter
add
cld
add
xchg
inc
mov
push
cmp
icebp
pop
clc
jne
xchg
adc
orb
add
popa
shr
xor
loop
icebp
mov
push
rcl
add
pusha
cmp
cs
mov
das
sub
pop
mov
pop
cwtl
mov
pop
cwtl
xlat
mov
inc
sbb
mov
hlt
lahf
bound
addl
in
add
stos
jo
hlt
and
cmp
imul
pop
out
testb
je
inc
mov
cmp
mov
cld
in
leave
es
loope
or
cmp
jne
dec
jmp
outsb
test
jb
xor
xor
je
std
mov
jne
inc
aaa
push
lds
mov
call
loope
ror
sbb
push
mov
cmp
pop
rcr
roll
rorl
add
test
test
sub
or
add
sub
add
cmp
sbb
dec
inc
or
fiadds
sahf
xor
pop
and
inc
dec
add
dec
pop
pop
jne
fldenv
rorl
pop
adc
push
scas
add
incl
rep
jmp
mov
push
jb
mov
mov
test
lea
push
aam
clc
cmp
sbb
or
mov
shrl
pop
sub
lods
push
repnz
mov
xchg
stc
rclb
add
fldenv
nop
inc
xor
xchg
out
add
push
sbb
repz
adc
add
gs
mov
repz
mov
push
call
cmp
repz
hlt
clc
je
cmp
clc
cld
loopne
push
ret
lock
fs
add
sbb
jmp
pop
push
fs
mov
or
nop
inc
pop
sti
ret
pusha
sbb
and
loop
mov
lea
jl
cld
pop
and
jl
daa
or
fsubl
fsts
lea
xchg
xchg
sub
pop
nop
lock
shr
adc
fiaddl
jl
mov
mov
mov
add
aaa
adc
mov
push
nop
dec
dec
addr16
mov
or
ficoms
iret
repz
push
mov
mov
addr16
sbb
iret
repz
sbb
adc
adc
cmp
repz
or
or
inc
in
or
push
and
icebp
push
add
sbb
add
lds
add
lar
cltd
dec
jp
jmp
or
stos
jae
das
jmp
inc
imul
pushf
xor
lock
or
jno
or
mov
dec
ss
cmp
jae
sub
xorb
flds
mov
jp
adc
mov
sbb
or
sbbb
pop
push
movsl
orb
adc
xor
pop
cmp
popa
lds
lea
ret
pop
fists
js
mov
push
sbb
int
and
mov
inc
test
xor
lds
pop
movsb
inc
adc
lret
add
inc
call
dec
push
mov
movsl
pop
push
sbb
and
enter
dec
add
pop
punpckhbw
or
movsl
inc
or
test
mov
aam
cltd
pop
insl
jb
xchg
and
test
dec
test
add
jecxz
pop
lret
sbb
add
adc
pop
adc
dec
js
or
jle
mov
push
arpl
fildl
dec
push
jbe
sub
outsl
aaa
loope
inc
aaa
jle
cmp
pushf
mov
cmp
into
popa
pop
sbb
push
cmp
add
jmp
sub
jnp
cmpsb
cmp
jne
push
adc
or
and
out
ds
mov
and
test
jle
xor
pop
in
dec
cmp
sub
scas
adc
adc
sub
push
and
adc
xor
and
clc
adc
pop
pusha
inc
jp
sti
addb
mov
fstpl
pop
ljmp
pop
add
aaa
fadds
jbe
mov
enter
call
jmp
xor
xchg
in
pop
push
lret
divl
dec
pop
mov
adc
xchg
icebp
loop
lret
loopne
xor
fadd
dec
sbb
shl
out
push
ss
adc
dec
mov
or
fnsave
or
insb
and
inc
insl
pusha
xchg
xor
jbe
add
xchg
aad
mov
add
sub
push
jl
loope
cmp
jne
pop
in
inc
loop
lea
mov
or
push
push
and
out
mov
int3
pop
mov
or
shrb
cwtl
push
loop
pop
call
out
jmp
sarb
std
mov
push
or
out
int
or
jl
and
xlat
push
push
push
lock
pop
js
push
ljmp
in
mov
out
adc
adc
jmp
push
sub
aam
mov
jecxz
cmp
adc
ds
lea
lds
or
pop
aaa
sub
mov
fs
pop
xor
mov
ja
add
xchg
lret
mov
sub
in
aaa
mov
pop
jbe
lea
adc
or
xor
jl
adc
loop
push
sbb
jbe
sbb
cld
jb
cmc
fmull
clc
jbe
add
mov
and
loop
clc
es
inc
add
jo
add
jo
cli
lret
jmp
test
jne
test
pop
add
loopne
rolb
adcl
push
jnp
divb
dec
out
mov
mov
pushf
pop
jmp
add
imul
cmp
es
mov
xor
xchg
in
cmp
add
add
add
jns
jecxz
push
fisubrl
addr16
mov
lea
ret
rcrb
pusha
aam
cmp
add
cs
xor
rcrb
push
add
push
sub
adc
pusha
scas
pop
and
and
movsl
inc
jmp
ds
sbb
mov
sbb
push
addb
insl
xchg
roll
inc
sub
sbb
add
outsb
xor
lock
push
sbb
xor
inc
dec
push
rolb
repz
sbb
test
shl
orb
cwtl
rcr
or
pop
add
add
cmp
rolb
jno
out
adc
leave
pop
enter
push
sti
ret
cltd
rclb
push
test
inc
mov
in
rcl
icebp
xor
dec
sbb
mov
inc
jbe
bswap
repnz
add
das
inc
cmp
cs
dec
jne
jmp
or
ds
ja
nop
dec
adc
dec
cmpsb
dec
jne
addb
dec
cmp
mov
sahf
xchg
cmp
push
orb
mov
sti
mov
ror
es
adc
or
dec
js
insb
bound
call
lea
push
outsb
into
pusha
add
inc
pop
es
mov
push
cmp
jne
mov
push
cmp
repz
std
jne
es
jne
fstl
dec
call
aam
mov
mov
dec
mov
push
inc
incl
dec
mov
adc
jmp
std
push
int
std
mov
jmp
fldt
jmp
nop
adc
adc
inc
inc
inc
push
xor
icebp
mov
or
repnz
xchg
jle
icebp
cwtl
mov
lret
mov
aaa
rorb
xchg
aam
subb
pusha
sub
and
scas
mov
test
popa
jns
pusha
or
sub
bound
inc
cmp
movl
mov
enter
std
andl
xchg
adcl
pop
pop
jns
adc
pop
fs
add
mov
sub
shlb
pop
add
xlat
push
mov
mov
jne
sbb
add
pop
imul
jg
add
mov
popf
push
or
pushl
mov
mov
inc
in
push
incb
pop
call
push
push
dec
call
hlt
and
mov
ja
jae
out
jmp
mov
push
jle
addl
inc
add
mov
add
push
and
mov
call
pop
aaa
adc
pop
orb
add
arpl
pop
xor
push
pusha
pop
pop
add
and
jecxz
jne,pn
cmp
enter
call
scas
inc
xchg
mov
push
xchg
push
xchg
test
xor
push
lcall
push
rcrb
popa
mov
fld
push
mov
adc
add
push
and
inc
fndisi(8087
ljmp
clc
or
lea
data16
or
fdivs
fists
insb
lcall
daa
fmuls
lock
and
sub
mov
sub
pop
outsb
cmp
pop
sbb
jecxz
sbb
adcl
cmp
and
loopne,pn
lock
xchg
jl
rorb
and
cmpsb
push
int
insb
pop
mov
push
inc
lcall
lock
stc
and
mov
inc
je
mov
outsl
mov
lea
neg
mov
sbb
or
or
std
add
add
xor
pusha
repz
xchg
loope
sbb
scas
sbb
mov
mov
add
mov
inc
cmp
jb
jo
adcl
jae
shrb
mov
add
gs
andl
jo
mov
or
ret
mov
or
iret
mov
sub
or
popf
sbb
adc
mov
mov
push
divl
lret
dec
stc
addl
std
or
iret
xor
jo
and
ljmp
add
das
rcr
out
jne
xchg
inc
ret
cld
inc
cld
add
je
ss
cmp
je
out
inc
push
xor
fisubl
faddl
aam
xchg
pop
addr16
dec
sbb
aam
or
xchg
dec
or
add
pop
js
mov
div
add
in
jno
pop
sub
imul
adc
mov
jl
and
lret
ror
mov
add
pop
pop
pop
pop
pop
cwtl
or
mov
pop
cmp
xchg
xor
inc
pop
mov
inc
jmp
cmp
jecxz
outsl
fwait
sbb
jmp
adc
jne
sub
jp
cmp
xlat
hlt
mov
adc
cmp
cld
push
xor
ss
js
or
out
push
scas
and
adc
adc
pop
sbb
repz
add
push
mov
mov
cmpb
and
je
icebp
je
pop
lret
sbb
mov
aas
pusha
je
lea
sbb
adc
pop
lea
lock
test
or
sbb
sub
add
mov
cmp
nop
jo
movsb
and
movsb
mov
rclb
push
adc
shrl
test
mov
cltd
lea
sbb
inc
mov
xchg
sbb
mov
mov
pop
and
push
js
mov
cmp
orb
push
js
daa
pop
ljmp
pop
push
sub
and
bound
adc
subl
jmp
aaa
jne
mov
cmp
mov
or
adc
mov
dec
jne
fs
add
or
addb
adc
add
sub
insb
movsb
aas
orb
mov
cltd
in
pmovmskb
push
push
sub
push
xchg
popa
push
inc
adc
mov
xchg
or
cmp
adc
es
dec
or
push
popf
jns
jge
push
and
jmp
sbb
je
insb
sbb
xor
add
cmpsl
test
push
cmp
jbe
and
imul
adc
lret
jno
add
sub
add
nop
mov
adc
insb
filds
jb
lea
push
adc
or
in
dec
ss
adc
repnz
enter
push
jle
test
movsb
jnp
mov
insb
in
es
mov
cld
push
pushf
mov
les
lret
mov
inc
push
adc
jne
or
add
ss
jno
adc
adc
or
mov
jmp
dec
dec
dec
sbb
cmpb
imul
add
in
in
pop
nop
sub
xor
sub
dec
ja
or
loope
loop
out
jmp
mov
add
mov
mov
pop
cli
mov
rolb
or
sub
mov
or
stos
push
sub
or
or
nop
clc
inc
hlt
add
insl
movsl
cmpsb
sub
sub
push
loope
xor
add
jp
mov
and
mov
mov
mov
inc
sar
or
mov
daa
fidivs
fcomps
je
adc
or
gs
jnp
dec
rcrb
cmp
adc
rcr
data16
ljmp
adc
push
jmp
xor
or
cmp
jle
mov
les
ja
paddsb
pop
or
mov
call
or
push
push
adc
rcrb
xchg
push
jge
adc
pusha
pop
dec
rolb
sub
in
inc
call
int
loopne
inc
imul
in
out
lods
adc
sbb
insb
push
data16
pop
addl
filds
xor
or
jne
pop
xlat
xor
dec
push
jo
pcmpeqd
jge,pn
out
out
cltd
pop
idiv
decl
mov
xor
mov
pop
and
movsl
ljmp
xor
inc
xorb
rol
imul
mov
shrl
inc
aad
adc
cmp
cltd
mov
add
rclb
aam
mov
push
xchg
xchg
mov
add
xchg
adc
in
nop
jp
push
add
fwait
js
cli
push
in
sbb
fdivp
or
adc
or
repnz
add
or
xlat
ficoms
test
test
xchg
loopne
mov
js
and
add
js
stos
rcl
push
cmpl
notl
in
mov
mov
ret
and
lods
jne
orl
jecxz
jno
mov
cmp
stos
inc
cmp
repnz
iret
int
add
je
sahf
mov
faddl
mul
add
outsb
clc
fs
ret
sbb
adc
jmp
popf
inc
je
adc
or
xchg
sbb
popa
ficoml
or
jbe
jle
mov
dec
je
add
or
ja
fimuls
bound
in
lods
mov
add
jmp
sub
or
push
jecxz
inc
and
out
es
add
push
pop
cld
mov
ljmp
test
jge
les
adc
arpl
push
inc
xchg
lcall
push
push
addr16
jne
mov
push
sbb
push
addr16
add
dec
mov
xchg
inc
jne
jmp
xchg
fs
loopne
mov
jbe
and
stc
mov
xchg
add
cmovp
in
jns
mov
mov
or
mov
push
or
pop
sbb
addb
push
loop
pop
aas
iret
or
js
jbe
mov
add
ja
out
pop
shl
das
cvtps2pd
add
dec
jno
jae
push
jmp
sub
push
dec
mov
mov
add
fdivl
mov
adc
fmuls
inc
push
push
add
add
cmp
mov
imul
or
orb
xorb
jo
aas
cmp
jae
aad
add
in
mov
push
mov
or
sub
xchg
imul
push
add
int3
inc
sub
mov
loop
lea
sub
pop
add
sub
adc
jo
ficompl
or
fst
xor
in
rcr
test
adc
lcall
sbb
dec
and
xor
shl
add
cmp
or
mov
pop
jle
inc
negl
pusha
ss
cli
pop
dec
leave
mov
rorb
add
push
mov
sbb
rcrb
repnz
addr16
sub
push
pop
int
add
or
cmp
das
scas
pushl
push
rolb
sub
push
pop
test
loopne
das
sbb
jbe
lcall
dec
push
pop
sub
adc
hlt
push
and
cmp
push
dec
push
pushf
mov
lret
outsl
mov
push
sbb
stos
imul
cmp
push
push
add
fidivrl
dec
sbb
push
inc
lods
movsl
cmp
sbb
mov
in
fimull
sub
cmp
sub
clc
ret
mov
and
shll
mov
pop
mov
push
inc
cmp
je
lret
fsts
stc
xchg
clc
push
mov
stc
mov
test
cs
cmc
mov
notb
imul
add
sbb
jge
insl
pop
fcmove
movsl
inc
sub
pop
adc
lds
sub
arpl
or
leave
dec
cs
add
cmp
loopne
mov
jmp
dec
or
mov
cltd
pop
inc
mov
push
xor
inc
outsl
sbb
cs
ret
shrb
mov
jnp
jp
xorb
push
fsts
add
dec
pop
sets
lods
popf
push
push
inc
jecxz
mov
int
push
mov
inc
into
icebp
in
push
add
in
add
js
imul
inc
fdivrs
mov
or
inc
dec
mov
jo
add
inc
adc
adc
cmp
pushf
out
cmc
roll
jp
mov
stos
mov
js
sbb
orb
xchg
mov
mov
test
adc
inc
xor
cwtl
loopne
sub
mov
mov
add
and
jmp
dec
and
jbe
hlt
mov
test
rcll
jl
sbb
sbb
lds
icebp
adc
cmp
popa
movsb
adc
aam
pop
lret
movsb
sbb
pop
popf
xchg
push
mov
inc
dec
push
je
xchg
test
xchg
and
add
xor
adc
and
jge
xor
in
dec
mov
dec
lock
pusha
pop
jp
xchg
inc
add
shll
adc
lahf
push
mov
xchg
notb
lcall
fmuls
jbe
stc
and
mov
in
movsl
ja
sub
dec
cld
jmp
adcb
xchg
pop
dec
rclb
push
loopne
frstor
sbb
cmpsb
add
push
mov
xchg
ja
or
xorl
ret
pop
inc
pusha
xchg
call
dec
lret
dec
add
lock
xchg
mov
sbb
adc
mov
fmuls
jmp
pop
push
lea
lea
test
or
orl
cmp
xlat
repnz
jle
or
sbb
xor
fsubrl
test
nop
dec
loope
clc
jmp
in
mov
in
push
push
xor
into
je
cmp
push
scas
pop
jne
and
insb
mov
iret
xor
bnd
popa
jp
add
jns
jl
add
sbb
data16
stc
inc
leave
and
jp
jl
add
cltd
inc
aad
les
dec
lret
mov
xchg
add
xchg
in
jge
push
aad
mov
and
add
jl
sbb
loop,pn
rorb
sarb
push
push
jo
fildll
xor
ljmp
pushl
incl
jnp
movsb
push
pushf
xchg
mov
je
lcall
jmp
mov
push
jno
lcall
cmp
pop
mov
jo
xchg
push
mov
inc
pop
pop
call
mov
out
sahf
testl
cmp
jo
lahf
inc
push
nop
out
int
dec
inc
insb
or
sub
and
cwtl
nop
jmp
in
adc
imul
mov
loopne
bound
sbb
in
out
sarb
shrl
push
or
sub
xchg
in
je
mov
icebp
sbb
shl
pop
cmp
inc
or
jne
pop
stc
pop
or
rol
cli
add
cli
pop
insb
add
xchg
mov
mov
xchg
out
push
int3
testb
jne
push
sbb
sub
xchg
stc
call
lret
enter
inc
and
cmp
xor
xchg
sarb
fsubr
outsb
jne
out
jle
adc
pop
mov
pop
mov
sbb
add
adc
mov
cltd
or
jmp
idiv
fsqrt
jbe
je
movsl
dec
test
in
cmpsb
push
fstl
std
pop
jns
lcall
sbb
or
loop
andl
test
jbe
add
out
mov
sbb
or
adc
test
inc
xor
xor
cmc
add
or
lods
push
shll
add
test
or
and
cld
add
dec
pop
add
push
sbbl
xor
mov
sbb
pop
inc
adc
xchg
cli
and
sbb
dec
mov
jmp
jnp
push
or
call
loopne
or
pop
fildl
pop
loopne
lock
jo
jb
insb
clc
lea
dec
mov
movb
jmp
fnsave
sub
std
add
add
ret
ficoml
pushf
sub
push
push
mov
sub
mov
rclb
clc
mov
mov
dec
or
or
repnz
push
loopne
or
inc
repnz
loop
leave
adc
and
and
xorb
add
mov
or
push
sbb
mov
adc
jle
or
test
pop
sub
mov
lods
movsb
in
push
jecxz
mov
pop
test
or
movl
cmp
es
push
pop
pop
test
cmp
dec
mov
add
fmull
call
int
outsb
decb
fsubrs
int3
stos
sahf
loope
adc
push
xor
lock
add
inc
push
xchg
dec
xchg
imul
movsb
mov
shll
mov
movsb
xchg
andl
cltd
add
sub
pop
push
xor
lahf
sub
or
std
fsubrl
sub
sub
sarb
cmp
clc
or
ret
jns
jns
les
cmpsl
jne
outsb
test
or
pop
add
hlt
fisubrl
mov
cld
xor
mov
adc
adc
xchg
mov
shll
in
xchg
clc
jno
insl
push
jne
jo
lods
insb
repnz
jmp
aad
iret
fsubs
adc
pop
mov
inc
inc
test
loope
shlb
pushl
mov
add
call
ja
int3
lcall
in
add
and
add
test
clc
or
add
fimuls
and
shr
pop
xchg
xchg
test
cltd
rolb
lods
jecxz
sahf
push
lea
adc
test
jge
pop
movsl
pop
mov
push
mov
push
loopne
xor
push
inc
fisubrs
aam
sub
lock
pusha
xchg
outsb
or
jp
movb
sbb
pop
mov
and
nop
ficompl
jbe
xchg
add
dec
jp
and
popa
xchg
fimuls
into
sbb
clc
dec
cwtl
fsts
lods
sbb
ret
imul
and
outsl
add
jns
push
in
shl
stc
rcrl
mov
arpl
pop
sbb
xorl
pusha
jl
push
or
push
mov
fnstsw
adc
mov
or
add
cmpl
sbb
mov
push
mov
scas
add
cmp
lds
js
push
dec
rol
xchg
cltd
test
mov
or
pop
popf
mov
jo
xchg
fdivrs
xlat
xchg
mov
popf
jne
ficoml
je
sbb
sbb
in
or
mov
rorb
call
xlat
cli
gs
pop
imul
mov
mov
cltd
lea
aam
ja
lret
or
ljmp
rorl
sbb
pop
sar
sbb
movsb
mov
loopne
fsubl
xchg
push
shlb
inc
ljmp
jb
je
mov
mov
pusha
lret
out
xor
add
mov
or
mov
push
pop
add
ret
addr16
addl
push
sbb
push
sub
adc
icebp
fdivs
inc
js
mov
shll
mov
rorb
int3
adc
ja
movsl
mov
jb
and
mov
hlt
adc
inc
mov
sbb
dec
cmp
push
xchg
or
jnp
or
dec
mov
pusha
sub
xlat
mov
sbb
pop
and
aaa
ss
js
add
dec
sbb
int
jge
inc
xor
movsb
into
enter
incl
push
sbb
sbb
imul
outsl
and
xchg
out
adc
movsl
adc
in
inc
xor
or
aad
call
fnstsw
pop
outsl
das
mov
xor
push
jae
mov
sub
adc
mov
inc
test
add
fcmovb
and
adc
mov
rorl
or
adc
sbb
fstl
and
arpl
xor
mov
imull
xor
sub
nop
jbe
xchg
mov
pop
add
loope
or
dec
and
in
xchg
addb
ficoms
jp
es
add
mov
adc
add
adc
cmp
popf
add
push
insl
cmp
jl
xor
xor
rcrb
cmc
pushf
sub
xlat
rorl
mov
sbb
push
cmp
movsb
dec
loope
jnp
inc
mov
push
sbb
or
test
nop
push
dec
les
xchg
insl
add
cmc
das
maskmovq
jg
lret
jmp
mov
inc
lods
cmpsb
sete
xlat
mov
mov
dec
imul
dec
pop
jl
jo
xor
shlb
mov
adc
cmp
ds
pop
mov
push
inc
sub
mov
rcl
sub
add
addr16
sbb
push
or
or
sub
mov
ss
ret
cmpsb
fistpll
je
xor
out
filds
sbb
xor
mov
xchg
dec
andl
jb
dec
cwtl
sub
lds
cmp
shl
cmpsl
add
sbb
idiv
push
add
mov
push
jne
add
push
addr16
xchg
hlt
jmp
cmp
jle
sbb
out
pop
imul
ret
pop
push
inc
cmpsl
repnz
and
add
mov
movsb
out
jo
lods
lock
nop
sbb
fstpt
pop
js
pop
dec
push
jb
mov
mov
lea
push
dec
mov
adc
out
cltd
sbb
add
push
push
pushf
jb
je
iret
sbb
inc
push
ljmp
jne
and
nop
jg
lea
push
lahf
mov
jae
push
cmp
imul
adc
mov
daa
add
and
fiaddl
pop
test
xchg
push
loope
popa
imul
xor
cmp
bound
jbe
shl
je
and
push
jle
test
fwait
push
or
add
pop
dec
sbb
mov
jl
jae
add
ficoml
aaa
movsl
mov
sbb
outsb
jnp
or
sbb
ret
je
adc
sbb
jno,pt
mov
or
test
shll
lea
adc
push
inc
icebp
pop
dec
inc
stc
cltd
push
push
push
mov
add
add
dec
aas
repnz
xor
stc
cmp
dec
jmp
sub
faddl
inc
cmp
inc
js
push
pop
lahf
movb
xor
and
or
in
add
push
imul
pusha
and
insb
idivb
and
mov
aas
sar
int
adc
inc
add
push
mov
adc
push
jmp
xor
sub
push
xor
add
test
int3
mov
js
shrl
mov
inc
mov
cld
test
jne
jmp
and
sarb
dec
adc
or
add
nop
mov
jg
add
mov
out
pop
gs
fwait
lret
lods
or
ds
das
adc
lret
pusha
xchg
subl
xchg
cmpsb
loop
aam
mov
or
jle
jo
adc
push
hlt
mov
movsb
mov
fwait
ret
add
rolb
inc
lret
std
xlat
add
jmp
push
pop
fisttpll
adc
fsubr
and
push
rclb
lock
mov
or
jl
mov
sub
xchg
mov
cmc
cld
dec
mov
jge
movsl
daa
pop
mov
mov
loopne
lret
sbb
into
mov
loope
addr16
mov
popf
cmp
mov
push
mov
insb
pop
jmp
lock
ret
nop
popa
fwait
ds
sub
fisubl
lcall
xorb
dec
mov
movsl
data16
imul
mov
test
gs
adc
mov
mov
arpl
cmc
add
pop
or
pop
adc
int3
push
or
pop
ret
jp
movsl
jle
or
pop
inc
mov
mov
xchg
enter
or
mov
or
cmp
nop
sub
movsb
and
jb
mov
xchg
dec
inc
mov
sbb
pop
in
add
jl
fnop
push
data16
mov
pop
jno
inc
mov
inc
xchg
or
or
mov
adc
test
sub
daa
jb
into
mov
pop
aam
mov
shrl
jae
inc
add
cwtl
fsubl
and
pop
scas
out
hlt
int3
les
mov
push
or
mov
jne
add
mov
ret
out
lret
cmp
dec
std
and
sbb
sub
fmuls
inc
add
cmp
scas
outsb
in
sbb
pushl
insl
and
lahf
xchg
fdivr
insl
fadds
cmp
je
mov
stos
mov
stos
ss
jg
fs
push
cmpl
mov
adc
jmp
inc
dec
jb
jb
or
loopne
loopne
les
test
ljmp
imul
jl
adc
add
xchg
dec
sub
jmp
push
pop
sbb
sub
mov
pop
xchg
mov
dec
add
or
clc
pop
inc
mov
les
xchg
push
jb
and
cmpsl
out
add
cld
and
cld
add
mov
cmc
jbe
add
fs
add
sub
add
subb
push
iret
add
sbb
pop
and
mov
mov
and
mov
jns
push
xor
mov
repz
xchg
sarb
xor
sub
push
sbb
mov
and
clc
mov
sti
xor
std
mov
mov
push
outsl
add
push
mov
jge
inc
flds
cmp
sub
lea
push
out
enter
sar
push
fld
xchg
sub
aaa
pop
or
mov
push
and
data16
lret
adc
ja
test
xchg
push
pusha
sub
adc
pop
push
add
cli
loopne
or
lea
bound
call
je
adc
or
mov
adc
cmp
cmp
loop
ret
mov
xor
out
and
subb
std
xor
jo
mov
sub
pop
and
aaa
sub
outsb
pop
and
subb
push
xchg
sarl
pop
add
stos
xchg
push
cmp
mov
inc
push
fwait
sahf
pop
call
ret
fstpt
xchg
lret
pop
jl
jmp
mov
lahf
mov
rcr
int3
push
jge
pop
imul
stos
pop
and
sub
sbb
push
lea
loopne
and
in
xor
movsl
lods
int
rclb
mov
xchg
jne
mov
test
lock
add
jmp
push
xchg
adc
push
xchg
dec
adc
xor
ret
out
test
pusha
nop
ss
mov
adc
iret
xor
pop
sbb
or
clc
into
pushf
push
sbb
call
cld
mov
mov
sti
sbbb
or
dec
xchg
adc
ljmp
sbb
sarb
call
add
push
pusha
jl
into
shll
pop
or
push
mov
fucomi
rorb
scas
leave
cmp
cmp
mov
js
aam
push
cli
add
add
push
cmp
sub
into
mov
sbb
rclb
dec
aaa
sbbb
mov
je
roll
add
add
mov
or
pop
pushf
shll
rorb
lret
test
cmpsb
lock
or
xor
imul
pop
out
subl
fstpt
add
sub
push
pop
adc
addb
outsb
xor
incl
aas
sub
aas
das
pop
pop
jg
sub
add
sbb
jp
sbb
dec
mov
rcrl
icebp
popf
in
xchg
dec
addr16
lods
clc
hlt
pop
dec
mov
arpl
inc
adc
test
mov
sub
cmpsl
rcr
in
push
jae
je
call
in
les
add
and
ja
mov
cmp
bound
ret
mov
mov
andl
icebp
xchg
mov
cmp
leave
fistpll
aas
je
ja
nop
dec
ds
mov
fdivr
iret
mov
rorl
test
mov
rcr
pop
popa
aaa
stos
mov
or
cltd
mov
pop
add
push
nop
mov
mov
mov
and
mov
mov
cmp
xchg
lods
mov
lret
leave
sbb
roll
hlt
icebp
xchg
pop
cmp
int3
dec
icebp
outsb
and
aas
insb
jne
jp
mov
adc
and
push
mov
insb
jg
adc
fwait
adc
mov
imul
and
leave
leave
dec
mov
inc
cmp
leave
sub
sbb
aam
xchg
pushf
xor
rcrb
cmp
mov
in
add
or
loope
ret
outsb
popf
push
pextrw
or
xor
mov
push
in
sbb
jb
in
mov
ret
cmc
mov
adc
jns
sbb
fildl
adc
pop
mov
push
push
jb
movsl
sahf
ffreep
push
repnz
sbb
rol
lret
push
mov
sub
pop
xorl
push
xchg
pop
rcl
lods
in
sbb
and
out
ret
inc
sahf
outsb
and
jno
shll
adc
jo
mov
js
push
pop
push
and
add
jecxz
cmpsl
push
loopne
aaa
mov
add
mov
mov
xchg
jmp
loop
addr16
or
sti
dec
sub
jmp
inc
mov
pop
pop
decl
sbbb
test
xor
leave
enter
mov
subl
idiv
in
xchg
mov
push
popf
jecxz
test
test
aad
sbb
inc
idivl
add
mov
mov
pop
fdivs
jnp
pushf
testl
loopne
add
pop
shrl
adc
in
push
cltd
push
mov
sbb
inc
aas
lods
test
inc
pop
aaa
mov
pop
xchg
inc
mov
faddl
lods
lds
jb
pop
push
cmp
in
aad
pop
rorb
dec
mov
ss
add
mov
and
and
mov
xor
aaa
and
nop
mov
xor
loopne
sbb
adc
lods
rclb
pop
enter
cmpsb
jmp
xchg
or
loopne
and
nop
aam
inc
test
mov
enter
mov
adc
inc
js
adc
mov
les
cmp
mov
pop
add
cmc
fnsave
sub
lods
pop
dec
insl
scas
inc
xor
cmpsl
imul
scas
push
or
repz
ss
repz
gs
adc
mov
sub
jbe
push
nop
jo
and
lahf
fs
lock
lret
xor
sub
cmc
push
xor
pop
xchg
cmp
or
or
rcll
mov
sub
and
imul
faddl
das
mov
or
inc
inc
je
cmp
rolb
mov
ljmp
adc
imul
ficoms
icebp
shr
lds
xchg
mov
jbe
dec
xchg
dec
add
add
or
out
push
cli
and
or
jne
sub
push
push
cs
or
xchg
or
push
cmpsb
xor
rclb
fisubl
sbb
nop
sbb
roll
add
xchg
mov
mov
add
push
add
fsubrl
add
pop
add
xchg
mov
jmp
sub
clc
je
dec
pop
or
xor
dec
pop
push
fisubrs
xchg
or
push
or
or
cmpsb
lock
push
shr
sub
sub
adc
inc
xlat
push
add
and
enter
add
or
or
test
add
sub
mov
jno
adc
mov
inc
add
sbb
testb
or
nop
pop
dec
sub
sbb
push
mov
fimull
enter
dec
shl
add
xchg
lahf
fdiv
mov
push
dec
cmpb
out
cli
in
add
xchg
sub
test
or
scas
ficoml
mov
sub
sub
testl
cld
ficoms
push
push
dec
jp
mov
mov
lret
jne
cmp
inc
out
add
sarb
and
int
decb
add
push
orb
mov
popf
xchg
xchg
and
and
notb
pop
mov
xlat
mov
mov
lahf
in
leave
sub
mov
data16
mov
lea
cmp
ja
mov
xor
jbe
sbb
sbb
and
bound
dec
aaa
cld
jmp
movb
cmp
das
inc
pusha
sbb
add
clc
mov
adc
insb
push
mov
xchg
sbb
dec
xchg
das
fstps
cmc
push
mov
fdivrl
xor
add
sbb
lock
loope
cmp
cmp
mov
mov
jns
cmpb
cs
jmp
cmc
xchg
aam
mov
cmp
jne
cltd
popl
shlb
imul
cmpsb
jge
in
jne
jmp
sub
jne
dec
or
and
rolb
mov
push
loopne
xchg
pop
lods
jmp
adc
push
adc
push
push
rcrl
fwait
scas
inc
mov
push
or
scas
or
xor
out
jb
or
jno
rcl
push
jmp
mov
push
dec
fwait
inc
add
push
and
dec
adc
into
aaa
inc
cmc
inc
mov
rolb
jnp
xchg
pop
cmp
or
push
call
loope
ds
nop
jne
sahf
cmp
insl
cwtl
sbb
pop
inc
push
leave
pop
aam
cmovb
fsubl
imul
orb
daa
pop
subb
enter
div
xchg
test
fs
cmpb
inc
cmp
aam
inc
adc
fsubrp
loop
ret
js
jo
inc
fisttps
add
jb
mov
jne
jno
imul
push
xlat
movsb
mov
adc
mov
push
pop
dec
and
icebp
loopne
pop
fisttpll
lods
cltd
jle
sbb
popa
mov
mov
jecxz
xor
push
mov
inc
dec
jne
sahf
rolb
scas
stos
mov
jmp
rcr
mov
mov
add
jmp
cmp
lcall
push
adc
pop
adcb
xchg
mov
mov
xor
lods
sbb
sbb
push
pop
push
and
popf
in
or
inc
cmp
mov
cmpsb
pushf
sub
fldcw
jne
or
aam
add
pop
push
push
mov
push
aam
push
pop
inc
pop
push
cmp
xlat
testb
insb
ljmp
add
cmp
faddl
or
and
dec
les
or
mov
mov
rcl
clc
add
in
fmuls
testl
jge
mov
mov
add
dec
jmp
stos
xchg
int
cmp
out
and
sbb
push
ljmp
mov
jmp
and
cmp
mov
cmp
jne
das
cmpl
xchg
bound
and
xor
mov
jg
ficoms
psubsw
add
sbb
mov
xor
rorb
cld
push
lods
cmpl
mov
cmpl
ret
ret
ret
adc
addb
mov
sub
xorl
xor
test
sub
adcb
mov
cmp
test
je
mov
mov
mov
and
imul
mov
loop
lods
pushl
pop
int3
pushf
inc
lcall
mov
adc
push
dec
jnp
sbb
sub
adc
sub
add
imul
rcrb
cwtl
shrb
cmp
cmp
cmp
movsb
pop
mov
aam
jle
popf
andl
or
adc
pop
cld
faddl
sub
add
jg
popl
push
pop
cmp
loop
stos
xor
jp
pop
add
sub
push
mov
sbb
addr16
cmp
test
out
push
mov
push
sbb
pop
lret
sbbl
inc
and
push
sbb
and
push
cmp
adc
outsl
add
insb
leave
fimuls
dec
jecxz
jle
and
pop
xor
lods
push
dec
jb
add
dec
ss
or
or
and
or
sbb
pop
mov
mov
mov
mov
jno
mov
push
push
pusha
fsubr
cmp
mov
push
pop
lahf
cltd
and
outsl
push
rorb
mov
mov
xchg
sbb
jl
js
pop
data16
mov
add
inc
mov
jns
or
int3
inc
push
jg
sahf
or
mov
fwait
mov
inc
cmpsb
loope
cmpb
inc
cmp
insb
pop
arpl
or
jb
in
push
loopne
xor
clc
xor
mov
rcrb
ds
xor
test
nop
popf
sbb
and
pop
sarb
pop
push
mov
xor
or
jnp
or
xor
shl
pop
js
push
cs
aaa
jmp
call
iret
clc
add
and
and
sub
push
in
sbb
in
push
in
inc
dec
or
subps
roll
sbb
push
mov
sar
push
dec
mov
bound
xchg
sub
aas
jge
push
sbbl
lahf
lods
adc
xchg
mov
mov
nop
mov
jg
jge
adcl
jg
pop
sub
mov
sahf
inc
in
push
rorb
mov
mov
pop
mov
pop
cmpl
popf
sub
push
movsl
mov
outsb
cmpsl
iret
jmp
mov
test
les
cmp
ljmp
add
push
mov
stos
cmp
xchg
pop
sub
xor
sub
fistpl
js
push
xor
jge
inc
pop
xchg
arpl
movb
xlat
push
rcll
cmp
add
and
xchg
sbb
or
mov
xchg
and
mov
and
and
xor
fwait
add
sub
movsb
scas
add
out
or
das
pusha
cmp
js
pop
pop
out
inc
xor
mov
adc
js
adc
jbe
xchg
mov
push
hlt
or
or
mov
rcr
lsl
sbb
or
xor
sbb
dec
jecxz
enter
out
rclb
mov
jg
loop
mov
cmpsb
shl
aaa
fistpll
jg
xchg
dec
movsl
sti
push
inc
adc
and
inc
push
lock
pusha
jo
mov
dec
jne
inc
data16
jo
je
and
xor
or
adc
divb
xor
xchg
hlt
push
fs
sbb
add
jne
push
mov
sbb
cli
pop
pop
ret
ret
inc
mov
adc
rcll
fnsave
push
mov
bound
add
cli
shr
add
daa
add
dec
pop
xchg
xchg
popa
inc
cld
or
loope
jge
or
daa
in
insl
icebp
popf
lock
xchg
cmpsb
outsb
adc
pop
movsb
dec
out
adc
fwait
test
shll
push
or
shll
enter
and
or
es
and
jecxz
pushf
clc
mov
insb
xor
mov
push
add
push
js
aam
dec
push
mov
add
pop
mov
push
push
add
pop
pop
dec
sub
lds
fsubrl
pop
sbb
je
push
or
sub
push
bound
mov
adc
jbe
loopne
mov
adc
ficompl
push
fldl
or
push
add
pop
push
and
jle
xor
sub
add
insl
pop
jbe
arpl
jno
xchg
and
mov
nop
in
inc
sbb
pop
xor
into
das
and
rorl
cs
je
dec
add
mov
mov
and
sbb
adc
mov
adc
roll
lahf
sarl
pusha
pop
xor
call
subb
dec
cmp
and
nop
scas
jns
inc
stc
cmpsl
xor
and
jb
int
imul
mov
jmp
mov
mov
cmp
mov
adc
pop
js
and
fmull
fstl
mov
lock
push
adcb
push
lea
xor
xor
popf
int3
int3
push
scas
repz
repz
into
repz
xor
in
test
mov
cwtl
add
ret
push
and
int3
stos
inc
add
pushw
cmp
cltd
in
mov
jae
mov
push
inc
pop
xchg
push
mov
inc
jle
call
add
and
inc
std
or
inc
push
lea
push
push
mov
jmp
inc
faddl
mov
or
and
or
inc
nop
or
clc
sub
and
pop
fucompp
bound
xchg
iret
clc
and
ret
and
push
push
test
jmp
inc
data16
add
push
mov
adc
cld
outsl
mov
and
idiv
divl
adc
mov
xchg
decb
inc
mov
sbb
jbe
sub
mov
pop
xor
jne
lea
mov
shrb
jg
mov
jne
mov
push
mov
shll
fucomip
stos
add
insb
mov
out
xor
sbb
sub
scas
fmull
add
sbb
jne
popf
test
mov
sub
aad
or
addb
push
inc
aaa
inc
aas
movsb
repz
cs
fucom
or
mov
jb
int3
mov
das
nop
pop
xchg
std
mov
lods
call
lret
sbb
jne
dec
das
call
lods
inc
mov
imul
mov
dec
and
add
pop
and
ret
xor
mov
test
mov
adc
jecxz
pop
fimull
fdivrs
sbb
in
negl
sub
popf
mov
mov
repnz
cli
mov
inc
rcl
std
add
xor
aad
leave
mov
mov
mov
inc
test
faddp
dec
sbb
xor
dec
dec
lret
cs
mov
add
clc
xor
pop
insb
xor
sahf
dec
shl
pop
mov
pop
fdivrs
sub
sub
notl
xor
push
pop
dec
es
stos
imul
mov
rcll
mov
data16
mov
insl
push
push
sub
push
inc
rol
fisubrl
call
scas
pop
adc
and
push
cmpb
jb
add
ret
add
cmp
je
mov
fucomip
int3
ret
lds
push
ds
push
imul
mov
push
lcall
lret
pop
sahf
mov
pusha
loopne
fadds
mov
imul
test
pop
fimull
scas
fmull
pop
inc
lcall
add
pop
fdivs
push
sub
in
mov
test
js
or
stos
cmp
adcb
sub
std
adc
xchg
iret
dec
jnp
cld
mov
sbb
or
xor
xchg
cmpsb
in
mov
test
adc
std
into
incb
sub
insb
push
es
lock
jg
negb
cmpl
rcll
pop
sbb
inc
mov
stc
test
lods
lds
sbb
pop
aam
jmp
mov
fs
notb
fdivs
call
std
dec
rorb
xchg
daa
dec
cmp
push
adc
lea
add
add
xchg
div
or
push
mov
lock
and
and
cmp
aaa
mov
xor
xchg
movsl
out
adc
rcrb
xor
inc
pusha
addl
fidivrs
movsb
dec
jo
sub
bnd
mov
fisubl
inc
jns
jecxz
daa
call
jae
in
sbb
imul
push
add
pop
jmp
ret
mov
sbb
sub
adc
int3
arpl
jne
call
scas
es
mov
mov
inc
out
push
in
mov
dec
sarb
std
pop
pusha
stos
inc
test
popa
ja
out
sub
int
sub
lea
aam
outsb
xor
imul
cmpb
fildl
mov
fisttpl
mov
in
push
pop
xchg
jb
stc
sub
xlat
leave
je
outsb
dec
or
or
lcall
iret
out
popl
out
xor
inc
pop
lcall
mov
lds
shrb
inc
ret
dec
sbb
push
adc
fcoms
add
movsl
loopne
neg
ret
cmpsl
adc
mov
jecxz
jmp
das
mov
movsl
lea
rolb
sahf
sbb
mov
pusha
dec
fucomi
fcmovnu
add
pop
xor
jp
fildl
mov
test
aad
xchg
fmuls
fcomps
frstor
into
cmpb
and
push
ficoms
or
aas
dec
cs
push
pusha
xchg
cmp
ss
sti
mov
jmp
dec
rolb
push
cmc
rcr
aam
movsb
jns
add
loop
pop
jl
xor
andl
sub
or
jmp
call
testl
mov
sub
xor
scas
pop
mov
xlat
sbbl
cmpsl
rcrb
pushl
pushl
sahf
xchg
or
daa
ret
loop
fldz
int
hlt
cs
jmp
mov
dec
lods
sbb
mov
aaa
dec
mov
jno
jge
addr16
adc
adc
adc
hlt
in
sbb
sub
fidivrs
mov
push
nop
addw
ficoml
jl
cmpsb
jmp
sbbl
mov
adc
add
inc
pop
lock
add
je
popa
add
imul
mov
daa
daa
dec
pop
loope
mov
mov
jp
roll
push
cmpsb
addr16
stos
or
xor
std
mov
add
rolb
stc
push
shll
scas
hlt
and
testb
lcall
stos
pop
xor
adc
rolb
enter
xor
push
adc
xor
jne
nop
or
lods
test
daa
inc
enter
mov
and
and
adc
jne
outsb
dec
xor
mov
push
mov
mov
inc
gs
lea
pop
or
pop
out
rolb
pop
scas
mov
movsl
xchg
out
ss
pop
ret
and
lock
jno
xchg
repnz
pop
sbb
fisubrl
push
lock
movsl
pop
lea
movsl
xor
sub
or
movsl
pusha
int3
or
les
sbb
adc
mov
and
aad
cmpsl
aad
xchg
lea
sub
pop
and
inc
cmpsl
inc
sbb
sbb
cmpsb
inc
cmp
sbb
sarb
arpl
in
push
stos
mov
repnz
dec
es
rclb
in
in
shrb
cltd
movsb
jb
aad
sbb
add
nop
lret
sbbl
dec
cmc
push
rcrb
mov
lods
sub
xor
repnz
and
add
lret
sub
or
cmp
movsb
xlat
adc
inc
out
mov
mov
push
push
push
aaa
xor
mov
inc
xchg
and
mov
and
cwtl
lods
add
sbbl
enter
test
je
lret
leave
mov
daa
xchg
test
out
pop
stos
xchg
inc
test
fdivs
loop
addr16
leave
inc
test
nop
push
inc
push
in
test
sub
inc
dec
inc
and
pop
sub
leave
inc
and
pushf
cwtl
add
leave
nop
nop
mov
mov
pushf
cwtl
push
cmp
sbb
xor
dec
mov
fistpl
or
outsb
movsb
cbtw
hlt
js
lods
sbbb
jl
cmpsl
push
jl
push
dec
stos
testb
insb
inc
dec
jp
mov
mov
push
fnstsw
or
xor
inc
sub
cmp
rol
sub
inc
js
testl
xchg
mov
mov
dec
mov
test
dec
inc
or
pop
pop
mov
or
movb
pushf
inc
and
push
sbb
icebp
xor
and
xor
sti
fcomps
push
jmp
cmp
jno
fstpl
add
push
jg
mov
test
sbb
mov
and
verr
jno
pop
mov
jl
cmp
loopne
jo
or
add
rclb
cltd
jl
ret
jne
mov
es
inc
mov
inc
adc
inc
mov
and
or
cmpl
inc
or
adc
dec
sahf
fnstcw
push
push
sub
dec
adc
push
push
loope,pn
shr
je
sti
adc
mov
push
dec
adc
xor
ret
and
jle
dec
ds
repz
pop
outsl
inc
or
jbe
iret
shll
outsl
ja
and
mov
ja
jne
shrl
std
mov
int3
pop
ffreep
lea
lea
inc
out
sub
dec
inc
in
shrl
popf
insb
adc
imul
pop
fdivrs
jo
inc
inc
push
negl
and
mov
mov
lret
ret
test
fmul
mov
shr
dec
adc
jl
fnstenv
lock
pop
into
sbb
jae
lahf
add
repnz
mov
nop
aam
or
lcall
and
push
push
dec
or
shl
fadds
add
insl
add
sbb
adc
add
or
mov
stos
add
jmp
mov
mov
jl
dec
popa
sarl
mov
ffree
les
sbb
pop
jne
cmpl
jne
mov
idivl
adc
and
cmp
and
cmp
bound
or
scas
mov
popa
xor
xor
adc
push
cmp
rol
push
mov
sahf
out
add
and
icebp
jno
rol
cmc
out
shl
shlb
fsubr
cmp
jne
ss
add
add
pop
andl
pusha
sub
add
js
or
cld
jle
andl
or
stc
mov
movsl
and
sub
adc
inc
addl
nop
pop
subl
nop
sub
xchg
test
lea
ds
mov
mov
cmp
dec
xlat
mov
mov
fs
loopne
sub
test
jmp
rcll
sub
cwtl
adc
dec
in
adc
out
insl
loope
insl
and
dec
pop
cmp
push
sub
or
movsb
shrb
rcl
inc
sub
mov
inc
or
rolb
push
push
add
inc
jns
pop
cwtl
sbb
fucom
pop
cmp
push
mov
adc
and
and
xchg
out
movsb
inc
push
out
fcoms
or
push
in
fdiv
sub
sti
ficoms
jb
gs
jmp
outsl
mov
xchg
mov
push
jbe
add
xchg
js
shlb
jne
adc
fists
pop
add
incl
out
and
lods
cltd
lea
mov
pop
fs
fistpl
jmp
enter
dec
int3
stc
sbbb
inc
fwait
adc
and
subl
inc
sub
outsb
stos
add
xor
or
inc
push
push
add
pop
add
add
mov
push
inc
cwtl
xorl
cmp
std
jbe
cld
enter
or
jne
dec
cmp
add
dec
aas
rolb
frstor
dec
add
sub
popl
movsl
adc
outsl
xor
inc
cs
je
cmp
lret
cmp
add
and
or
cld
push
insb
ljmp
inc
adc
and
in
cmp
mov
push
and
cld
add
sbb
or
push
or
test
jmp
push
mov
and
es
test
and
ret
xor
ds
int3
push
pop
add
adc
xor
lcall
add
clc
sub
sbb
lea
into
adc
mov
push
adc
jae
filds
jae
lea
add
add
psrld
add
xor
cmp
lock
lea
push
xchg
and
mov
shlb
jbe
cmp
add
int3
dec
movl
jp
enter
push
je
fwait
mov
sub
mov
push
sub
lea
push
fsts
mov
fs
pop
or
mov
mov
gs
std
fists
ljmp
push
pop
push
iret
aam
sbb
fadd
mov
nop
mov
or
incl
movw
mov
adc
lcall
sbb
mov
cwtl
pop
dec
inc
jle
inc
xor
add
int
push
add
jle
pop
movsl
pop
das
cltd
call
push
add
add
loopne
ret
mov
mov
fidivrs
sbb
movsb
or
pop
sub
push
addl
sbb
js
jl
daa
and
idivb
pusha
pop
orb
add
pop
pminub
cmp
or
rorb
and
into
sub
test
adc
shll
xor
jl
in
and
sbb
adc
hlt
jb
xchg
jp
or
pop
push
or
or
dec
or
or
pop
and
fcomip
testl
push
add
adc
adc
mov
push
movsb
or
add
add
jb
sbb
inc
add
sarb
and
addl
or
orb
jmp
mov
jmp
lea
ja
cmc
push
cmp
mov
ds
aaa
xor
mov
mov
jne
jmp
or
add
or
je
push
or
movl
or
add
adc
adc
push
pop
sub
sbb
pop
idivb
mov
add
or
movsb
rorb
test
loope
mov
add
loop
fwait
inc
dec
out
mov
jle
jne
test
not
mov
push
mov
icebp
dec
mov
movl
push
push
sahf
mov
paddusb
push
shlb
dec
bound
and
notl
mov
mov
test
inc
mov
mov
inc
mov
add
push
lret
mov
ja
hlt
push
sub
stos
xor
orb
test
jae
les
clc
pop
ret
mov
mov
sti
insl
dec
pusha
push
sbb
out
leave
negb
push
sub
push
lock
jb
inc
jb
mov
int
dec
fs
dec
mov
add
and
cltd
movsl
out
add
fistl
les
popf
mov
or
xor
imul
xchg
xchg
leave
mov
xchg
das
push
push
jb
pop
sbb
aas
cmpl
push
andl
lahf
ffreep
push
jnp
incb
cmp
fldt
loopne
daa
jg
out
loope
dec
xor
xor
add
stos
test
out
add
lock
xor
mov
inc
adc
fidivrl
cmp
adc
in
cs
jl
pop
inc
dec
test
mov
cwtl
push
adc
ds
cmp
xchg
imul
inc
test
inc
mov
lods
and
inc
dec
or
dec
adc
dec
fs
dec
push
pop
test
mov
xchg
pop
pop
mov
stos
xchg
xor
pavgw
lret
dec
add
xchg
imul
leave
xchg
inc
in
pop
scas
sbb
test
pop
inc
or
movzbl
mov
push
xor
imul
movb
or
popa
push
shlb
sbb
nop
push
mov
lea
cmp
xor
mov
mov
adc
and
pop
andb
scas
cs
sbb
adc
sarl
and
cmp
sbb
inc
lea
not
and
bnd
inc
push
sbb
sbb
sub
pop
and
or
jbe
shlb
pop
add
sub
sbb
xchg
and
neg
add
pop
pop
sbb
outsl
adc
push
cli
sti
std
call
out
jge
aas
adc
hlt
jmp
and
dec
in
out
add
loopne
xor
sub
inc
push
add
or
rcrl
test
and
fimuls
inc
add
sub
sub
adc
dec
ja
test
mov
test
adc
jmp
cmp
push
aas
clc
lock
or
lret
loop
pusha
lods
and
insb
mov
insb
or
push
in
dec
loopne
adc
mov
aad
adc
adc
pop
lea
mov
adc
test
mov
lock
push
aam
out
subb
sub
pop
fdivs
xor
mov
and
jb
add
fwait
lock
pop
xchg
add
ret
sub
insl
add
jmp
add
int3
or
rol
push
or
imul
xchg
fcoms
or
lock
jnp
out
ret
mull
lsl
jmp
push
pop
push
push
mov
jg
inc
shr
rcr
shr
rcr
or
mov
repz
scas
sub
jno
ljmp
outsb
pop
jb
cmp
or
cmp
or
xor
and
cmp
add
adc
or
fiaddl
lret
cs
fxch
pop
ret
adc
sbb
scas
sub
aas
jbe
add
mull
lea
imul
xor
inc
in
sub
inc
pop
popf
sub
mov
cwtl
pavgw
xchg
daa
or
xchg
or
mov
das
inc
pop
push
mov
mov
mov
sub
aad
add
cmp
or
call
mov
test
dec
inc
mov
mov
dec
cmp
div
and
adc
inc
and
inc
and
pop
das
add
or
mov
imul
jne
repz
push
test
cmp
push
push
sbb
cmp
sbb
je
clc
loop
dec
and
jmp
dec
and
push
push
ret
mov
in
push
mov
and
add
or
in
aas
fists
rorb
lret
push
ds
sbb
add
cmp
mov
sub
inc
adc
sub
scas
fsqrt
pop
jne
test
popf
in
inc
push
outsl
xor
push
or
jnp
pop
inc
cmp
mov
rclb
rorl
and
push
push
mov
fiaddl
push
jnp
cmpl
mov
sub
jmp
and
or
enter
pop
or
mov
fldl
jb
push
push
mov
ss
icebp
add
or
mov
add
cltd
loope
sbbb
jns
popf
in
mov
and
inc
addr16
jo
icebp
xchg
cs
loopne
sahf
iret
decl
cwtl
push
divb
xchg
icebp
call
jo
xor
and
mov
daa
sub
adcb
add
xor
addr16
or
dec
mov
mov
inc
push
mov
sti
nop
fmull
xchg
aas
inc
push
add
or
or
lds
push
add
sub
add
ret
dec
cld
or
sarb
sti
inc
cmp
outsl
imulb
aam
sarb
ret
push
je
mov
rol
adc
add
push
ss
or
and
cmp
test
push
pop
adc
int3
lods
mov
push
pop
jnp
dec
jne
mov
testl
jmp
adc
outsl
mov
dec
stos
push
fdivs
test
adc
and
or
sbb
mov
mov
adc
add
fcom
and
inc
jmp
gs
aam
lcall
fidivl
push
push
mov
subl
loope
dec
enter
lods
pop
imul
mov
pop
inc
mov
jl
cmp
jg
inc
jmp
add
fsubr
pusha
jbe
jne
imul
lea
push
dec
push
add
cmp
pop
lea
or
adc
je
dec
scas
push
pusha
mov
mov
or
out
inc
lock
xor
cmpsb
cmpsl
xchg
icebp
xor
or
and
add
insb
jne
push
in
dec
adc
and
add
sbb
cmp
xchg
into
mov
pusha
cltd
jo
mov
adc
aaa
mov
push
cmp
jge
mov
add
sbb
out
testb
push
mov
cmpsb
cwtl
pop
sbb
nop
imul
mov
icebp
pop
test
pop
stc
xor
sarl
pop
inc
rclb
mov
dec
or
shl
sbb
lcall
pop
test
test
jl
js
mov
loopne
movsb
ljmp
in
xor
dec
sbb
or
mov
fsubl
add
ja
mov
sub
jo
add
rcll
orl
dec
insb
and
mov
adc
xchg
push
push
pop
int3
orl
inc
or
push
gs
pop
imul
insl
lock
clc
sbb
rcl
fs
pop
ja
push
insb
lods
sti
sub
dec
push
imul
sbb
xor
or
cmp
push
push
push
xchg
xor
xor
sbb
or
and
filds
ljmp
mov
shlb
xor
jg
and
lea
lea
ljmp
cmp
out
mov
imulb
mov
push
sbb
add
jmp
popl
outsl
adc
jecxz
add
mov
adc
jle
enter
loopne
shrb
in
push
loopne
adc
sub
loope
out
inc
mov
data16
mov
pushl
add
jno
push
jne
adc
mov
push
mov
xchg
push
push
xor
inc
dec
test
pop
movsl
ljmp
push
inc
cmp
ds
and
movsb
cmpsl
push
push
push
shlb
insb
enter
fs
lea
cmpsb
add
aaa
adc
adc
sbb
mov
fisubrl
add
mov
dec
hlt
cmp
cmp
mov
mov
jne
sub
add
pusha
cmp
sub
fiadds
pop
stos
push
cmovno
add
aas
scas
dec
call
pusha
add
popl
pop
push
dec
adc
in
daa
add
scas
call
outsl
andl
es
cmp
pop
pop
xor
pop
call
mov
test
insb
je
sub
sub
or
pusha
pusha
add
push
imul
movd
push
push
mov
adc
pop
jg
lcall
inc
inc
mov
stos
jl
cwtl
sub
xor
and
clc
das
xor
sbb
pop
gs
adc
pusha
loop
mov
mov
push
adc
lret
loope
insb
pop
dec
pop
lods
int
clc
add
lea
cmp
ret
push
add
mov
add
push
adc
mov
sub
adcb
xrelease
rolb
dec
cmp
loop
push
push
test
ss
hlt
mov
les
adc
dec
insb
fisttps
fcoml
das
mov
and
pushl
leave
lret
push
mov
cmc
iret
cmp
jo
mov
lock
add
sub
mov
test
pop
pop
insl
and
push
inc
push
push
nop
lods
loopne
inc
push
dec
mov
cwtl
or
test
mov
inc
mov
arpl
jl
cld
cvtdq2ps
and
or
or
push
mov
and
inc
push
or
xchg
scas
inc
jne
mov
or
lea
and
subb
cmp
insl
add
mov
cmp
push
push
addl
test
loop
sub
or
das
jl
incb
dec
mov
movsb
andl
xchg
adc
jb
test
stos
popf
add
or
and
mov
gs
pop
mov
adc
cwtl
cmp
jle
sub
cmp
xor
jmp
xchg
sbb
jmp
dec
push
in
jbe
cmp
push
sub
jae
test
testl
jmp
inc
sbb
ret
adc
sbb
mov
sub
mov
jmp
adc
out
cmp
add
push
movsb
fstpt
add
jne
out
dec
jae
enter
imul
sbb
jo
sub
and
fimuls
scas
xchg
rclb
bound
pop
push
sub
jmp
xchg
orl
in
pop
aaa
cld
pop
pop
push
and
shl
or
stc
sub
cmp
mov
fadd
jbe
lods
sub
mov
dec
lret
stos
loopne
je
mov
sarb
loop
mov
inc
cmpsl
mov
shr
cmp
aaa
roll
repnz
add
mov
jecxz
fldl
pop
add
dec
or
pop
or
cli
cmp
pop
es
repnz
fdiv
cwtl
pusha
stos
cli
lea
cmpl
jecxz
shll
inc
jmp
cmp
cltd
jmp
icebp
sub
and
inc
es
mov
dec
push
hlt
and
add
jne
das
push
rcrl
pushf
push
fcomps
test
cwtl
jge
add
imul
inc
sbb
ffreep
pop
int
test
cmp
stos
pusha
add
mov
pusha
jp
insl
add
adc
or
sub
xor
jne
inc
or
daa
pop
adc
pushf
fwait
sbb
add
xor
call
add
jge
xchg
push
mov
mov
sbbl
ss
lea
push
pusha
jge
movsl
and
mov
lea
enter
xchg
mov
out
add
jne
mov
lcall
shll
roll
or
mov
sbb
nop
inc
imul
sbbl
cmpsl
pop
mov
push
or
mov
mov
mov
std
and
mov
testl
out
jne
xchg
xchg
lock
dec
into
sbb
jne
inc
or
cmp
pushf
and
sahf
cltd
xor
test
mov
or
jb
cwtl
xchg
test
push
pushf
fstpt
lea
lcall
or
adc
icebp
ret
add
sub
push
jg
xor
cmp
jb
mov
dec
sub
mov
ja
js
pop
stos
incw
cmpl
insl
mov
xchg
pushf
pop
jg
out
shrl
sbb
sti
jg
add
add
rolb
fs
xchg
push
inc
incl
aam
call
fwait
cli
testb
shr
aas
or
push
jge
adcb
into
movsl
mov
sub
inc
mov
add
into
negb
lods
lods
jl
sti
fbld
shrl
shl
shr
or
mov
mov
dec
mov
jne
outsb
mov
mov
aam
mov
ja
push
cmp
test
sub
rcr
ficoml
add
fiadds
mov
dec
lock
ljmp
jmp
or
push
lods
push
jnp
mov
popa
icebp
push
cmpb
mov
aam
add
push
jl
dec
int3
int3
jmp
adc
or
daa
mov
and
jmp
lods
daa
es
rcll
dec
and
les
les
add
sbb
imul
jne
push
lret
xchg
jmp
sub
cmpl
add
adc
mov
mov
or
call
sub
mov
mov
cmp
jl
cmpsl
stc
inc
incb
adc
inc
mov
cmp
repz
sub
sarb
or
mov
pop
ret
pop
incb
jne
testb
adc
sbb
mov
cltd
fldt
push
push
jb
add
rcrb
jg
insb
sub
add
pop
cmp
add
xchg
int
test
xor
outsb
pop
or
add
push
xor
inc
das
fdivrs
in
lods
xor
push
insb
stos
mov
sub
xor
push
add
outsl
mov
cmp
or
insl
jb
dec
in
adc
shrb
repz
ret
mov
xchg
dec
push
sub
push
sub
cmp
mov
pusha
xchg
adcl
adc
xorl
popa
add
mov
cmp
add
add
arpl
int
out
mov
xchg
and
loop
call
add
cmp
outsb
test
jnp
ucomiss
lods
loopne
push
xor
jne
sbb
lods
or
xlat
jmp
sar
cmp
sbb
out
add
push
adc
sub
jo
inc
iret
jmp
sbb
ds
faddl
adc
and
leave
mov
adc
pop
sbb
cs
lds
rclb
add
ror
push
lea
cmovl
loope
inc
or
sbb
std
push
loopne
push
stos
and
jmp
push
and
mov
jmp
int3
jmp
mov
lods
cmpsl
and
in
cmc
rcl
adc
cmp
adc
in
cmp
xor
lcall
pop
loope
push
std
jmp
push
dec
lahf
loope
push
lea
add
leave
sbbb
sti
sar
mov
aas
or
loopne
or
testb
dec
adc
pop
or
sub
sbb
mov
cmp
sets
addr16
sbb
imul
sbb
insb
add
adc
ljmp
inc
pushl
cmpsl
mov
sahf
pop
pusha
jbe
inc
sarl
icebp
or
xor
push
test
popf
and
int
push
sub
xchg
nop
sti
xor
push
inc
mov
or
mov
cld
jns
lock
mov
mov
add
std
mov
mov
mov
mov
andl
or
dec
and
outsl
add
add
pop
or
out
lret
add
mov
enter
inc
push
movsl
sbb
and
cmp
mov
adc
into
les
inc
outsb
sub
push
dec
hlt
movb
scas
lea
loop
fmuls
fmull
jnp
pusha
mov
adc
popf
xchg
push
inc
add
rolb
lea
je
movsl
jno
jae
or
dec
mov
adc
shll
mov
and
pop
mov
cmp
mov
add
pop
mov
push
or
shrl
add
popa
aaa
icebp
mov
add
sub
xor
pop
sub
cmpsb
sbb
fwait
imul
push
inc
push
pop
ficoms
daa
sub
inc
test
jae
cmovns
iret
test
mov
push
mov
sbb
rolb
adc
mov
fs
add
mov
mov
inc
mov
sysenter
sbb
dec
xor
sub
ss
jo
test
rcll
sbb
xchg
lret
pop
ret
xchg
jle
fs
xor
ffreep
mov
jae
mov
cmp
jne
fldt
loop
shufps
mov
push
into
adc
push
addl
xchg
lock
icebp
and
xor
ds
inc
fisttpll
jne
xlat
out
fnstenv
daa
ret
sub
or
or
insb
pushl
cwtl
nop
addb
int
sub
shl
movsl
pop
jbe
dec
sbb
fbld
jns
push
jle
clc
adc
fiadds
into
jg
sbb
mov
mov
data16
sub
mov
cmp
cmpl
add
or
popa
add
daa
push
adcl
jne
leave
adc
lods
stc
jo
or
cmp
jmp
dec
rolb
mov
test
cmp
push
sarb
push
or
or
cs
dec
enter
inc
test
js
andb
fiadds
stos
mov
mov
add
push
jo
lret
jmp
inc
mov
sbb
mov
adc
pop
mov
push
dec
jae
call
inc
lods
cmp
cmpsl
sub
cmpsb
les
insb
adc
jl
jmp
sub
jne
mov
gs
mov
fidivrs
xorb
cwtl
inc
je
xor
test
jp
cmp
lret
and
sbb
fldenv
xchg
cmpsb
or
jmp
icebp
sub
mov
add
test
inc
movsb
inc
mov
inc
push
adc
pop
test
icebp
and
adc
dec
adc
mov
xchg
push
inc
ss
fistl
sbb
int3
enter
xor
mov
cltd
cmc
or
lret
push
jb
nop
adc
cmp
and
adc
mov
insb
cmp
inc
pop
or
aam
mov
jb
cli
xchg
jp
xor
jne
xlat
mov
pop
les
fimuls
push
xchg
pop
fcompl
pop
inc
cli
mov
inc
and
jg
add
jns
add
data16
inc
sbb
mov
sbb
pop
xor
cwtl
or
scas
lock
js
fisttps
mov
cmp
push
cmp
add
add
push
jmp
test
push
sbb
sbb
cmp
rorb
fcos
aam
and
or
enter
or
insl
and
or
push
loopne
ljmp
add
mov
cmpsb
lock
dec
add
les
dec
andb
add
ds
adc
push
inc
sub
xchg
jo
dec
sbb
icebp
mov
add
enter
xorb
push
dec
lret
push
inc
jae
inc
jmp
xor
dec
loope
jge
mov
and
add
xchg
push
and
fcoms
push
test
pop
sar
out
cmpsl
les
cmp
and
pop
add
sbb
xchg
data16
adc
or
mov
sbb
sbbb
sub
add
inc
xor
mov
adc
pop
shl
mov
or
mov
adc
cmc
pop
adc
adc
or
jno
fadd
and
rcrl
push
andl
mov
add
int
adc
push
mov
enter
jle
mov
leave
xor
rcll
xchg
and
pushf
jl
add
mov
push
jne
push
mov
out
int
pop
add
pushl
push
in
push
and
test
cld
cmp
loop
add
xor
cmp
test
jbe
push
jmp
push
std
jne
cmp
fwait
rcll
or
jl
ret
jne
pop
push
addps
loopne
pop
inc
imul
or
pop
test
mov
inc
mov
lea
mov
dec
hlt
xor
push
lcall
cwtl
clc
rorl
fistpl
pushf
or
xor
or
push
inc
icebp
imul
mov
test
outsb
scas
cmpsb
jb
imul
dec
or
lahf
popa
fsubrl
and
xor
ror
clc
outsb
movsl
mov
imul
or
adc
add
and
fistpll
or
jne
jge
lock
and
push
sbb
push
sarl
inc
mov
mov
and
dec
add
nop
mov
je
inc
and
adc
popf
sti
lds
mov
jmp
mov
lret
or
add
push
push
jno
jnp
faddl
jge
add
cmp
pop
push
jne
and
jne
rclb
add
and
fs
mov
fbstp
jne,pn
sbb
inc
mov
dec
inc
ja
and
loopne
stc
sahf
cmpsb
in
adc
add
or
mov
adc
inc
or
xchg
jmp
inc
push
icebp
push
insb
call
pop
add
loopne
jmp
test
sbb
or
add
and
mov
adc
fs
and
or
jg
aaa
push
fmull
jp
inc
cmp
add
insb
loop
cmpl
loop
es
sbb
xor
mov
mov
add
ret
dec
bound
mov
or
pop
rcrb
inc
mov
mov
mov
jb
je
test
or
sub
adc
fs
add
rcrb
or
stos
dec
pop
push
jecxz
add
sbb
inc
clc
cmp
or
mov
adc
and
or
push
cs
cs
cmpb
inc
and
and
adc
popa
cmpsl
add
pop
jmp
mov
sub
movsb
add
je
inc
aam
inc
imul
in
test
mov
add
cmp
push
clc
call
or
sbb
fiadds
mov
push
inc
add
cltd
stos
cli
rclb
dec
movsb
xor
mov
pop
mov
mov
sarl
out
push
and
test
lret
sub
outsb
ja
clc
inc
cmp
rcrb
inc
sub
clc
pop
mov
repnz
adc
sbb
push
xor
popa
sbb
and
imulb
mov
mov
mov
pop
cmp
and
mov
or
jb
ja
mov
in
lea
ficoms
hlt
xchg
inc
mov
addb
jle
push
and
fisttpll
inc
mov
hlt
stos
out
roll
lret
inc
adc
cmpsb
or
inc
sti
ret
loopne
xchg
adc
jle
sahf
rcrl
xchg
ljmp
and
arpl
les
xchg
je
sbbl
inc
sub
and
sbb
aas
and
push
jg
cmp
incl
adc
jg
xor
jne
movsb
cmp
jae
or
movsb
aad
in
lock
mov
pop
sbb
or
stc
imul
cmp
lock
dec
ret
and
or
lods
popl
pop
jbe
inc
rclb
aad
movsb
xchg
in
in
or
adc
xchg
xchg
fldt
sbb
xchg
xchg
xchg
xchg
sub
xor
mov
adc
mov
inc
inc
cmovs
add
add
leave
pusha
fs
leave
jo
js
movsb
cmp
adc
xchg
dec
es
mov
xchg
cwtl
pushf
xor
test
dec
xor
mov
or
int3
shlb
dec
fwait
mov
dec
xor
loopne
call
and
lock
cmp
and
clc
cld
add
add
dec
push
add
add
xor
mov
xor
adc
xchg
dec
sbb
and
xchg
dec
xor
sub
xchg
dec
xor
xor
cmp
orl
cltd
fimull
push
pop
pushf
fs
dec
pop
pusha
sbb
jmp
sub
pop
adc
and
add
sub
add
test
mov
dec
xor
xor
mov
xor
imul
or
int
mov
adc
nop
adc
dec
dec
xor
sbb
rcrb
int
movsb
cmp
cmp
mov
xor
inc
les
xor
ror
dec
int3
add
scas
orb
inc
insb
pop
insl
inc
loopne
icebp
adc
movsb
push
insb
and
mov
push
ret
nop
or
sbb
movsb
push
or
inc
rol
and
mov
movsb
je
call
jae
pop
push
or
clc
sbb
pop
add
sbb
ret
lock
ficomps
add
test
and
fsubs
and
nop
into
and
out
orb
xchg
repnz
cld
not
xor
loope
xor
and
jb
nop
or
jmp
mov
add
add
add
test
js
adc
popa
push
in
test
adc
sbb
add
fcmovbe
aam
fildl
pop
mulb
shll
and
xor
dec
or
sub
and
call
add
outsl
sbb
std
or
jmp
inc
ja
frstor
cld
mov
and
aaa
int
out
jecxz
sbb
add
or
sbb
lea
std
shll
and
sub
sbb
sbb
es
jge
std
push
ljmp
aas
pusha
mov
pusha
loope
pop
adc
and
sub
xor
inc
jecxz
push
jns
adc
fnstsw
ljmp
pop
cmp
movsl
sub
lgs
xchg
sub
inc
testb
cmp
xlat
sub
sti
add
ja
test
pop
xor
icebp
and
sub
mov
movsb
loopne
mov
or
sub
push
and
inc
sbb
lods
ficompl
testl
add
adc
outsl
lods
imul
jmp
push
and
or
push
or
jg
adc
inc
push
fstps
jmp
fisttpll
lds
lcall
sub
test
inc
pop
sub
mov
push
push
lret
mov
add
sti
out
ficoml
sbb
and
or
out
sub
push
inc
enter
call
es
ror
sbb
out
cmp
push
std
fisttpl
mov
in
add
sub
jmp
cmp
mov
sub
push
xorb
or
psubusw
xchg
test
into
adc
adc
sub
imulb
pushf
sub
mov
daa
adc
jnp
cmp
and
mov
lea
push
mov
inc
clc
dec
add
inc
pop
mov
repz
shr
push
cmpsb
in
xor
push
repnz
mov
mov
iret
inc
cwtl
lods
xchg
or
fld
insl
in
sahf
pop
orl
sbbb
loopne
or
jle
push
pop
jmp
pop
or
cs
icebp
adc
and
pop
xor
loopne
cmpsb
mov
or
push
pop
mov
popa
cmp
jle
push
add
jns
mov
sbb
cmpsb
inc
loope
push
lret
add
xor
repnz
test
xor
push
add
mov
rolb
outsl
ret
push
inc
out
pop
cmp
je
add
lea
sbb
fidivrl
pop
add
or
push
ret
sbb
sbb
push
pop
cltd
and
dec
imul
pushf
sub
stos
and
les
loopne
out
pusha
mov
pop
fstpl
pop
negb
fwait
jno
mov
lods
leave
dec
inc
and
in
or
add
aam
xor
dec
int3
das
add
pusha
aad
inc
out
lret
jo
gs
scas
adc
sbb
pop
loope
fsubl
and
in
push
mov
imul
subps
jae
or
or
sbb
mov
jbe
push
das
ss
push
es
inc
int3
imul
xchg
into
arpl
and
mov
mov
push
jnp
dec
sbb
dec
add
andl
adc
loopne
jecxz
add
cld
mov
jnp
dec
leave
daa
push
add
add
xor
mov
or
stos
sub
lret
fld
xor
lock
or
sbb
mov
insb
add
push
mov
inc
rcr
and
pop
or
add
in
pusha
fcomps
sbb
adc
ret
dec
and
outsl
adc
enter
fld
fstp
cmpsl
subb
out
sti
xor
pop
mov
leave
test
mov
imul
mov
icebp
das
dec
test
xchg
shll
push
or
imul
push
or
add
cmpsb
lcall
and
iret
adc
or
push
in
dec
cmp
sar
sbb
mov
jbe
sub
push
push
call
push
pop
dec
ljmp
adc
fnstsw
movswl
sbb
lret
sbb
loop
pop
pop
subb
cmpsl
and
rorb
sub
rorb
data16
out
or
or
insl
or
push
mov
mov
xchg
or
sub
loopne
or
fwait
test
fsubs
insb
xchg
jbe
outsb
fwait
sbb
adc
pushf
loopne
das
repnz
sbb
movsb
fldpi
xor
mov
or
cmp
mov
pop
sbb
push
lret
dec
sbb
xorb
mov
ss
fistl
sbb
push
pop
inc
jo
xchg
jo
jae
andl
mov
dec
sub
jmp
and
insl
imul
push
int3
or
jnp
inc
push
push
test
insb
loop
jbe
pop
pop
jo
fsubrs
test
cmpsb
add
fisttpl
and
ss
sub
pop
or
mov
out
and
ja
lds
or
test
xchg
adc
and
push
pushf
add
inc
push
insb
enter
add
loope
sub
add
or
adc
add
nop
lret
je
pop
or
xor
push
add
push
sti
jbe
cmp
mov
dec
test
sub
or
enter
call
push
add
loope
push
or
add
push
inc
fstl
xor
ret
cli
sub
sub
dec
or
fldenv
imul
dec
push
or
pop
adc
outsb
add
jmp
inc
or
push
push
or
cmp
testb
inc
cld
loopne
test
jbe
push
hlt
mov
in
hlt
jbe
insb
lock
stos
jp
pop
pop
inc
push
pop
cmp
fs
nop
ds
mov
mov
and
push
add
mov
mov
rolb
sub
dec
xor
inc
sti
lret
lea
push
sarl
xorb
rolb
jg
stos
lret
loop
rolb
and
inc
push
or
adc
add
repz
inc
pop
push
out
pop
and
mov
out
mov
inc
adc
push
sub
jbe,pt
dec
mov
add
mov
mov
or
or
cmp
sbb
add
inc
add
jp
adc
out
pop
jae
xlat
mov
mov
add
rcl
enter
sarb
faddl
loope
mov
mov
mov
pop
sbbb
mov
jge
je
inc
mov
xor
leave
or
outsb
call
inc
daa
xchg
push
pop
add
inc
aam
iret
inc
mov
dec
xor
cmp
pop
addl
das
test
and
push
loopne
jae
das
mov
lret
sub
sub
add
dec
mov
lea
adc
mov
and
push
ds
loope
dec
sbb
or
out
and
add
push
popa
xchg
test
jl
mov
push
and
mov
insb
and
ficomps
mov
or
mov
xor
push
loop
test
dec
fbld
addl
out
test
pop
sub
or
and
out
or
adc
lcall
xor
push
cli
in
add
and
jmp
or
jb
test
lcall
push
enter
dec
jns
imul
cmp
and
shl
cmp
or
or
push
rorb
popa
or
frstor
clc
fs
and
ret
jno
mov
xor
xchg
loopne
push
ss
shll
stos
rolb
sbb
pop
xchg
add
je
mov
gs
into
add
imul
lea
out
and
inc
mov
jge
mov
mov
adc
xchg
shl
xor
rolb
jle
or
fiaddl
pop
lock
cwtl
cmp
mov
test
and
jne
and
adc
push
cs
dec
cs
dec
inc
and
and
inc
jb
push
push
test
adc
mov
dec
pop
dec
roll
mov
push
pop
pop
xor
jne
js
and
lret
or
or
and
sar
pop
jne
cmp
loop
bound
dec
nop
cmp
push
push
imul
push
inc
mov
mov
rorl
jmp
mov
enter
push
pusha
and
jo
pusha
das
pop
outsb
pop
xchg
mov
pop
xchg
xchg
adc
inc
cs
or
popa
in
pushl
ss
cmp
je
or
out
mov
dec
decl
movsb
add
mov
cmp
pop
jne
clc
push
aam
dec
mov
inc
inc
mov
jmp
data16
and
and
fcompl
sarb
inc
xor
jp
nop
sbb
arpl
sub
or
inc
inc
cmp
adc
jmp
xor
inc
fsts
xchg
cwtl
cmp
mov
inc
or
outsl
notl
notl
jno
cs
mov
jle
idivb
cmpsb
add
lods
inc
mov
xlat
mov
or
jbe
or
add
lea
fnsave
ffreep
push
pop
sbb
out
lret
add
rorb
xor
or
jg
clc
add
mov
popf
and
aas
sub
or
nop
xchg
push
dec
xchg
loope
cld
mov
inc
or
pop
push
cli
sbb
add
add
imul
les
pop
fbld
jmp
sub
add
popf
adc
insb
jmp
rorb
inc
add
into
cmpl
dec
jns
neg
movb
xor
loop
jl
cltd
push
enter
sarb
call
add
add
lock
pop
into
fisubrl
mov
lcall
pop
push
mov
jns
jo
test
add
xlat
or
pop
and
sbb
nop
fldenv
dec
std
dec
xchg
jmp
push
outsl
cmpb
cmpsl
or
jbe
pusha
cwtl
xchg
jge
xchg
sub
adc
fsubrl
mov
push
push
adc
shlb
sub
inc
sbb
xchg
addr16
xor
ss
push
jmp
mov
add
sub
xchg
pusha
adc
ds
push
fadd
xor
add
push
mov
cmp
jge
adc
call
mov
enter
out
mov
imul
cli
mov
enter
sub
daa
adc
and
xchg
or
jne
lret
push
imul
cmp
dec
mov
sub
fcoml
dec
cmc
jns
xor
out
mov
inc
sub
inc
xor
add
mov
andb
add
in
xlat
inc
fstl
dec
sub
leave
and
add
insb
lahf
mov
push
xchg
fbld
adc
enter
inc
inc
mov
fistpl
fstpt
ret
loopne
lock
ret
mov
or
jne
bound
xor
aam
es
icebp
sub
jp
in
call
xor
mov
mov
sbbb
aam
fisubs
or
mov
or
mov
hlt
nop
or
call
dec
inc
and
pop
xchg
and
push
xor
pushf
ret
inc
dec
inc
xor
add
dec
jge
xor
insl
cld
add
sbb
clc
hlt
shrd
sbb
xchg
jge
xchg
dec
cmp
jge
sbb
faddl
inc
clc
cwtl
xor
data16
inc
cltd
dec
jg
add
dec
jmp
and
lea
fisubrl
mov
or
rorl
pusha
cmp
sbb
add
or
sbb
cmp
sbb
pusha
xor
mul
dec
ljmp
shrl
in
sub
js
jg
jb
xor
mov
or
fbld
shl
fimull
jl
sub
push
shll
cltd
mov
insb
push
in
push
and
lock
push
mov
add
mov
dec
inc
dec
pop
or
mov
in
lods
jmp
cmp
sub
jnp
push
lods
ja
flds
sbb
mov
and
shll
icebp
rcll
push
cmp
jmp
dec
and
adc
scas
push
incl
add
movl
add
dec
cmp
jle
in
push
mov
ss
jmp
aam
mov
inc
or
push
inc
sahf
fwait
adc
and
neg
decl
mov
xchg
inc
or
or
ret
imul
aaa
push
lods
roll
push
sbb
push
insb
xchg
mov
add
das
push
repnz
js
fdivs
and
pop
sub
add
cwtl
dec
and
sub
mov
cmpsb
loopne
outsb
cmp
jmp
xchg
sbbb
es
divb
push
cmp
or
cmp
or
push
xor
outsb
rolb
enter
or
push
sub
sbb
add
or
jl
add
mov
inc
or
pop
push
stc
mov
push
add
pusha
sbbl
add
add
pop
or
fstps
or
dec
int
pop
data16
cmpsl
out
mov
inc
popa
je
pusha
mov
sbb
aaa
mov
xor
inc
sbb
aas
xor
pop
pop
dec
adc
bound
cmp
movsb
sbb
outsb
ret
je
rorb
clc
push
mull
and
push
add
pop
shll
mov
inc
mov
adc
and
arpl
imul
push
cmp
sahf
add
pop
inc
xlat
sub
test
and
out
and
push
adc
push
add
cmp
cmp
out
cmpl
jbe
push
xchg
sarl
push
insb
ss
jmp
jbe
or
sbb
loopne
push
aam
test
cli
jge
mov
adc
xchg
cmp
sbb
je
mov
mov
add
mov
sub
xlat
popa
add
outsb
mov
inc
jmp
mov
enter
xchg
add
ds
popa
or
fcoml
add
sub
cwtl
pop
pushl
mov
dec
cld
call
fldt
sub
and
inc
adc
add
aad
inc
jmp
les
adc
add
into
test
clts
add
mov
xor
fcompl
or
cmp
inc
dec
add
mov
sub
mov
pop
inc
mov
addl
mov
push
sub
sahf
fwait
xchg
sub
xor
pop
cmpl
sbb
cmp
insl
rolb
mov
push
leave
cmpb
jmp
adcb
push
mov
pop
dec
ljmp
aas
add
lods
lret
jl
cmp
enter
leave
and
test
dec
add
pop
xor
and
in
jge
dec
push
sbb
dec
je
dec
push
push
jmp
mov
cmc
jmp
add
call
orl
pop
adc
fistps
in
and
outsb
arpl
sbb
add
add
rcrl
and
sahf
andb
or
int3
or
js
or
or
mov
loopne
aaa
lea
xor
gs
sbb
jne
adc
cmpsb
fdivp
adc
cmp
sbb
in
mov
sbb
sbb
int3
or
push
sub
lahf
das
imul
sbb
jnp
movsb
dec
push
ds
adc
fiaddl
into
and
push
repz
inc
xorb
cmp
cmpb
jno
lret
cmpl
dec
xchg
ds
or
and
int3
insl
add
sub
push
adc
add
mov
std
pop
sub
mov
inc
or
or
lea
repz
jge
shr
add
or
out
jg
mov
pop
or
mov
push
push
adc
mov
dec
call
and
add
dec
inc
xchg
xor
or
add
cmp
mov
mov
jp
imul
adc
inc
shrb
outsb
jbe
add
jl
in
sbb
cmp
shlb
or
dec
pop
imul
loopne
inc
sti
and
push
add
fidivrs
adc
push
xor
bound
xor
jns
nop
cld
lret
clc
add
sbb
mov
lea
out
or
es
sub
add
fidivrl
lock
insb
sub
mov
adc
and
and
ret
push
or
add
lods
or
pushl
icebp
sbb
or
xor
push
and
pusha
loop
in
xlat
shlb
test
dec
push
cmp
pusha
roll
xchg
mov
pop
inc
mov
shll
outsb
inc
imul
sub
popf
push
jbe
notl
dec
pop
mov
and
mov
test
mov
mov
leave
jmp
test
jmp
clc
test
loope
pop
dec
cs
mov
adc
fnsave
repnz
sbb
dec
sbb
pop
or
cmp
cmc
addl
sub
sub
testb
dec
jo
mov
adc
inc
notl
adc
add
add
dec
xchg
push
popa
add
stos
or
insl
xor
xor
movb
lahf
or
orb
loope
stos
sbb
sbb
fcmovb
fildl
add
add
loope
rolb
adc
xor
xchg
rcrb
mov
aaa
mov
jno
imulb
pushf
outsl
inc
push
xchg
mov
inc
xor
xorb
lret
xor
or
lea
clc
sbb
fistpll
push
pusha
dec
adc
and
scas
add
mov
aam
sbb
add
pop
je
sbb
mov
ret
sub
add
fmull
mov
push
add
fs
and
and
ja
je
ss
push
add
cmp
pop
inc
test
ds
out
cmpl
jmp
pusha
lea
imul
into
xor
or
cmp
dec
sbb
repnz
popf
addl
lock
incb
xchg
push
cmp
jle
xchg
pop
mov
inc
and
push
popf
add
out
movsb
adc
cmpsb
sbb
bound
mov
pop
fnsave
jmp
sbb
xor
cmpb
sub
cmc
cmp
enter
add
rolb
fstl
outsb
inc
popa
vmwrite
inc
pop
inc
jns
push
in
cmp
add
push
imul
ficoml
orb
mov
aaa
jne
cmpsb
pop
and
inc
pop
push
cmp
sub
jmp
sarb
enter
cmp
jne
imul
inc
dec
add
jbe
call
adc
rorb
push
cltd
or
xor
mov
sbb
out
roll
leave
add
mov
not
je
mov
iret
adc
mov
mov
cli
push
test
xor
je
ljmp
mov
pop
or
jne
fsubl
sti
push
pop
sub
fsub
adc
xor
xor
sub
dec
adc
loopne
adc
dec
and
xorl
add
or
lea
rclb
mov
sub
dec
dec
lock
icebp
jge
inc
inc
push
neg
neg
sbb
sub
sbb
sbb
inc
sbb
xor
js
mov
xorl
adc
fwait
imul
adc
and
fldcw
dec
pop
add
and
sbb
outsl
adc
leave
dec
jns
inc
addl
adcb
pop
pop
pop
aam
adc
jae
or
jae
lods
rcl
ljmp
dec
and
shr
sub
adc
arpl
push
push
idiv
and
and
sub
maskmovq
cld
lock
je
adcl
add
add
xchg
xor
aaa
icebp
fiadds
lret
inc
into
movsl
push
pop
pop
add
stos
shlb
lahf
push
test
dec
adc
dec
movsl
xor
xor
or
inc
incl
push
or
aad
inc
pop
inc
xor
jbe
aas
xchg
pop
cli
addb
aam
push
pop
in
or
push
sbb
push
push
or
xchg
inc
add
inc
xchg
sbb
inc
cmp
paddusb
mov
call
mov
mov
pop
ret
or
add
xchg
mull
pusha
imul
add
mov
jo
cs
ljmp
cld
inc
ss
inc
mov
sub
xorl
cmpsb
jnp
dec
loopne
aad
jns
push
out
cld
addr16
out
dec
mov
enter
loopne
jne
pop
cmp
mov
push
jmp
sub
add
add
dec
cmp
and
shrl
popa
nop
insl
cmp
and
push
or
add
mov
adc
adc
xchg
andl
mov
je
call
shll
jl
out
push
cmp
ja
add
cmp
dec
mov
cmp
jne
mov
xor
adc
mov
and
mov
pop
je
and
mov
adc
adc
iret
and
jb
dec
or
add
push
and
push
push
scas
push
shlb
test
or
fdivr
aas
cs
outsl
and
add
mov
sbb
xchg
cmpb
iret
cmp
push
jle
test
and
data16
mov
adc
push
and
movl
add
sbb
push
test
lock
enter
mov
dec
testb
sbb
mov
mov
and
test
mov
stc
inc
jb
xchg
jnp
mov
push
and
xchg
add
cmp
mov
push
add
cmp
mov
sarb
dec
fadd
call
stos
popa
int3
add
imul
lea
sar
inc
sub
lcall
movswl
xchg
fildl
mov
cmp
es
ljmp
cwtl
imull
sbb
sbb
ret
inc
add
cwtl
inc
sbbl
in
ss
fs
add
and
inc
push
xor
cwtl
mov
push
adc
mov
push
jb
jl
lcall
dec
jle
repnz
adc
mov
mov
mov
mov
and
and
lea
icebp
fidivl
inc
xor
xchg
dec
stos
jmp
mov
sbb
add
and
ja
pop
pop
pop
dec
repz
dec
and
inc
testl
lds
inc
inc
add
jo
mov
cmp
pop
in
add
and
lea
rolb
or
pushf
inc
mov
push
icebp
sub
push
lea
mov
push
int
test
dec
or
inc
nop
subl
or
ret
mov
dec
shll
xor
add
imul
fimull
push
lods
and
rorb
shll
jle
cmp
out
adc
jo
mov
shll
mov
fstps
rolb
rol
pop
or
and
ss
or
sbb
push
lret
int
sarl
inc
pop
outsl
inc
sub
or
inc
mov
lods
sti
insl
shrl
loope
shr
or
mov
imul
filds
lock
dec
and
jnp
repnz
jns
shl
testb
dec
cli
cli
inc
and
repnz
subl
pusha
inc
call
cmp
cli
adc
and
cmpsb
imul
pop
fisubrl
or
into
jb
cmp
xor
cmc
xor
and
and
or
mov
insb
lret
enter
imul
xor
jb
xor
ja
rdpmc
sbb
inc
repnz
dec
pop
fsubrl
loop
out
daa
mov
sahf
jge
out
fcoms
add
adc
lret
inc
push
jne
dec
in
aam
daa
adc
xchg
push
dec
fdivs
cli
or
outsb
das
and
inc
shlb
fdivrs
aam
add
int3
jbe
dec
xor
nop
and
jne
mov
add
lcall
sub
fmull
or
dec
add
and
rclb
cmp
mov
inc
pushf
add
mov
int3
jg
add
cmp
add
add
rolb
xchg
into
or
push
sbb
mov
mov
enter
out
or
jge
add
xorl
lock
or
cmp
jne
jne
push
movsb
repnz
add
add
pushf
pusha
mov
aad
dec
pusha
pusha
add
sbb
add
es
mov
mulb
xor
inc
add
inc
mov
dec
call
pop
outsb
call
lret
mov
inc
cltd
and
or
shl
and
gs
rcrb
xlat
leave
cli
pop
inc
rcrl
cli
fcomp
cmp
neg
and
imul
mov
imul
sarl
loopnew
fdivs
pop
add
and
mov
push
in
mov
movsl
out
fidivrl
adc
add
mov
sar
sub
fbstp
enter
into
test
xor
test
int3
ss
sub
clc
rolb
lods
add
push
mov
xor
mov
add
sub
test
jnp
or
call
add
cld
push
call
into
or
mov
inc
ljmp
or
dec
stos
aas
std
insl
inc
sub
jge
sub
cmpb
arpl
push
cld
or
add
dec
cmp
add
pop
test
dec
add
add
fadds
cmovle
pop
add
call
outsl
mov
jp
jne
dec
mov
jb
or
xchg
or
cmp
or
pop
popf
in
jbe
dec
mov
lret
or
mov
inc
mov
imul
push
add
lcall
and
ret
and
dec
popa
lcall
stc
sub
adc
and
add
push
sbb
movsb
adc
imul
xor
xchg
add
stos
add
jle
jne
or
push
pop
setp
scas
je,pt
push
ret
sbb
adc
push
xor
cld
mov
add
push
ret
or
xchg
adc
xchg
dec
add
add
mov
or
pop
mov
mov
andb
cmp
xor
into
pusha
imul
and
cli
ss
pop
sub
and
pop
pop
jbe
sub
mov
pop
cmpps
prefetch
or
mov
adc
push
loopne
shrb
push
test
inc
ficompl
test
data16
or
or
adc
and
or
push
movsl
push
or
inc
aad
mov
sbb
lret
pop
or
inc
out
lcall
insl
out
sbb
xchg
adc
jne
cltd
ret
out
and
mov
rorl
pop
dec
jge
out
dec
ljmp
or
ret
add
addl
orb
loop
clc
pusha
inc
mov
shl
cltd
jnp
or
push
scas
cmpb
orl
mov
or
and
xchg
lea
cmpsb
dec
add
xor
in
clflush
or
ss
test
cltd
into
or
add
or
add
push
into
mov
mov
out
jnp
sbb
xor
inc
jg
push
xchg
xchg
xchg
into
into
into
mov
mov
mov
sub
mov
pop
nop
pop
sahf
pop
push
mov
add
shlb
or
sbb
adc
sbb
push
adcl
push
and
mov
shll
hlt
add
leave
lahf
pop
xchg
jo
faddp
out
adc
add
sub
jno
movsb
fwait
cmp
es
stos
pop
test
mov
shll
lods
and
cltd
and
popf
ret
cwtl
sbb
xor
sub
jmp
sbbl
mov
xor
ljmp
mov
out
pop
adc
add
add
sub
mov
lahf
xchg
mov
scas
popa
sub
push
add
xchg
sbb
fsts
sub
mov
mov
push
xor
add
pop
xchg
in
hlt
ljmp
aam
jmp
lret
dec
add
jo,pn
add
or
repz
push
push
sahf
ficompl
insb
les
sbb
sbb
mov
add
adc
out
je
mov
ljmp
hlt
mov
cmp
jb
cmp
jbe
ror
adc
in
mov
fbstp
movsl
pushf
xchg
loopne
mov
or
fisubrl
cmc
lahf
dec
pusha
test
ret
mov
ret
aam
pusha
mov
sbb
jle
pop
adc
les
and
inc
or
gs
inc
or
popa
test
pop
aam
pop
xchg
scas
mov
es
shll
adc
loopne
enter
cmp
pushl
lds
addb
aaa
sbb
divb
push
push
mov
pop
and
aam
xor
xor
cltd
fsub
or
enter
or
push
pop
mov
jne
cmpsl
adcb
leave
jae
xor
jmp
xor
dec
test
adc
lods
mov
xchg
jnp
mov
push
ja
cmp
cs
lods
pop
cmpsl
aaa
sbb
add
test
xlat
or
ret
add
cmp
add
sub
dec
daa
add
imul
lock
or
ret
xor
mov
push
mov
push
add
mov
push
bound
movsl
sub
and
sub
loopne
adc
adc
mov
or
push
loope
aaa
jne
xchg
jp
lds
sbb
mov
hlt
call
ja
icebp
inc
call
mov
jo
insb
ss
push
outsl
xor
inc
mov
cmp
cwtl
inc
xor
pop
pop
dec
loope
inc
mov
mov
fidivrl
or
pusha
gs
xchg
sahf
ret
lds
dec
in
mov
ret
clc
mov
add
cli
jno
enter
test
sbb
xor
fadd
sti
push
lock
mov
adc
pop
fists
iret
pop
test
popf
out
lods
dec
lea
sub
sub
std
mov
pop
das
add
pop
pop
int3
fimull
add
pop
nop
rol
xchg
mov
jecxz
cmpsb
loopne
jmp
in
lea
loope
adc
movsb
fistps
imull
cmp
or
mov
ja
adc
aam
das
sub
adc
jne
mov
inc
insl
leave
orb
test
pushf
iret
dec
jae
mov
setp
push
mov
sub
add
sbb
shrb
mov
je
sbb
hlt
decl
xor
je
jg
orl
aam
pop
pop
scas
adc
xchg
jnp
pop
test
jecxz
cmp
jbe
test
lock
aad
push
roll
pop
pop
mov
lret
pusha
pop
rorb
xor
adc
jb
sbb
enter
in
repnz
and
inc
mov
clc
pop
jbe
int
js
xlat
add
add
push
sahf
sti
push
fcomps
sbb
and
lahf
push
and
pop
loope
mov
incb
jge
rolb
pop
inc
cmp
jmp
xor
loopew
sub
sub
or
or
dec
mov
sbb
push
mov
dec
sub
mov
jl
xor
mov
push
xor
clc
xor
outsb
adc
les
movsl
dec
in
mov
sub
mov
and
les
mov
xchg
jmp
and
aam
mov
xchg
inc
mov
lret
cld
cltd
mov
push
add
test
jns
sarb
clc
xor
sbb
dec
pop
push
and
or
cmp
fnstsw
inc
arpl
fildll
mov
mov
rclb
roll
mov
cmpsl
test
xchg
aas
mov
adc
push
pushf
sahf
xor
imul
sub
dec
clc
push
mov
shll
es
sub
sub
dec
sbb
fisubl
push
push
pushf
ret
es
movsb
jo
inc
mov
push
clc
rclb
lahf
mov
int3
jmp
subl
push
sbb
xchg
add
or
insl
cld
mov
loopne
rcrb
xchg
loopne
ss
or
ja
or
sbb
push
les
inc
pop
popa
adc
fistl
mov
rcrb
add
cmc
or
push
xor
data16
and
add
adc
orb
inc
mov
call
js
or
rcrl
rclb
dec
or
into
inc
mov
in
dec
xor
jns
adc
and
cmp
and
stos
mov
adc
jae
xor
scas
arpl
xchg
jmp
sub
jp
dec
xor
in
imul
stos
and
mov
dec
sub
outsb
insl
clc
pop
or
popf
dec
dec
inc
test
mov
addb
ret
lds
xor
or
fmulp
xor
mov
pop
sub
popa
mov
imul
test
push
xor
fcoms
dec
or
loopne
xchg
adc
movl
add
push
xor
sub
sbb
adc
push
shl
imul
rclb
mov
mov
icebp
inc
push
sahf
adcl
sub
cld
arpl
imul
rorl
fidivrl
out
rol
ja
mov
jmp
jb
daa
lock
jo
push
js
rclb
xchg
jge
cmp
outsl
mov
aas
or
movsl
jge
or
mov
adc
mov
sbb
cmp
ja
shlb
jge
mov
push
xlat
cwtl
movsb
cld
sbb
mov
aam
out
push
inc
pop
xchg
cmp
out
jp
repnz
adc
test
jg
or
lock
imul
lcall
pushf
icebp
mov
call
icebp
cmp
push
pop
shlb
push
shlb
mov
push
cs
inc
push
in
and
mov
cltd
jb
dec
mov
xor
inc
add
loope
icebp
push
push
cmp
push
sub
cmp
inc
pop
add
dec
jb
and
pusha
scas
lea
inc
lock
xchg
enter
push
arpl
pop
adc
jne
testb
testb
repnz
insl
outsb
sub
in
sub
push
inc
aaa
sub
fcoml
inc
loopne
pop
cmp
cmp
sbb
mov
repz
stc
and
nop
xor
decl
cmpsl
aas
xchg
jg
mov
jg
jae
xor
imul
cmp
bound
mov
adc
mov
xor
push
int
sub
cmpl
mov
sti
pushl
jge
out
int
shr
sbb
xorl
test
jmp
mull
in
push
adc
in
cmpsb
jo
mov
inc
xchg
cmp
std
imul
push
and
and
inc
sbb
inc
lea
xor
xchg
adc
jo
mov
or
and
push
jbe
lds
xchg
pushf
sbb
mov
insb
sbb
push
xchg
sub
mov
add
jl
pop
sbb
mov
test
push
add
insl
jmp
push
inc
mov
inc
lock
cmp
add
or
dec
push
fstps
mov
and
push
push
push
add
or
daa
mov
jb
or
adcl
data16
int
incl
inc
adc
pop
jl
and
stos
in
mov
call
push
mov
addr16
rcll
jae
mov
call
or
xor
add
jns
push
adc
push
loope
or
and
inc
mov
pop
add
cltd
add
fs
movsl
mov
fstp
scas
lret
mov
jmp
aam
pushf
fdivs
pop
inc
jmp
jge
or
cmp
inc
lods
pop
das
jl
outsl
jbe
jo
rcrl
adc
popa
aam
cmpl
dec
pushf
pop
adc
scas
mov
or
sbb
mov
lret
cmp
mov
or
dec
mov
aam
sbb
xchg
or
inc
jge
std
adc
test
add
movsb
or
test
cmpsl
cmpsb
jmp
and
roll
pop
scas
rcrb
mov
rcl
idivb
mov
cmp
call
push
pop
cmp
fwait
and
lcall
sbb
lods
addr16
xchg
addr16
add
aaa
or
pop
dec
mov
sbb
dec
sbb
and
subl
fcmovbe
add
or
add
add
ds
and
jae
xor
repnz
or
shl
cli
mov
call
sbb
xchg
loope
fildl
dec
or
mov
cmpsb
test
je
sbb
aam
scas
or
jg
add
add
add
decb
sbb
ja
popa
xchg
in
or
je
mov
sbb
roll
sub
dec
cli
rcrl
cli
testb
push
cmpsb
mov
cmp
aad
sub
notl
xor
xor
repnz
xor
in
test
cmp
xchg
adc
xor
jg
cmp
je
dec
jne
push
xor
jno
mov
jne
push
jmp
xor
loopne
xor
pop
mov
adc
cmpsb
pushl
je
sub
jne
push
sub
test
cmp
jmp
push
icebp
rorb
cli
inc
cs
arpl
mov
push
adc
cli
push
in
mov
jl
pop
dec
pop
loope
inc
sbb
pop
xor
jecxz
jmp
xchg
push
push
stos
jmp
sbb
sbb
mov
mov
inc
ss
push
lock
jb
push
test
stos
arpl
push
je
in
xor
push
lea
rolb
inc
sarl
in
add
xor
push
cmpb
sub
add
je
shll
and
pop
out
insb
sub
clc
ja
cltd
ret
mov
les
shlb
pop
xor
fnsave
mov
pop
sbb
xor
pusha
mov
inc
inc
cwtl
or
mov
enter
pop
cmp
or
sbb
xor
mov
inc
das
dec
pop
fsts
sbb
adc
xor
leave
sahf
jecxz
mov
mov
sbb
shlb
jne
ja
loopne
adc
fisttpl
or
inc
pop
pop
ss
mov
mov
and
ret
fs
mov
jle
sti
imul
test
les
movsb
xor
inc
add
or
pop
enter
jne
sub
cmp
pop
dec
push
mov
cmp
shlb
pop
mov
jg
rclb
cmp
orl
and
adc
scas
test
into
xchg
dec
adc
add
pop
popa
mov
cmp
jg
cmp
adcl
scas
jle
out
subb
lods
loopne
pop
fiaddl
and
mov
and
inc
faddl
sbb
retw
add
dec
jg
cmp
xchg
call
mov
jmp
adc
xchg
movsb
fmul
sbb
or
and
or
jl
add
and
mov
jb
lods
jo
jb
or
cmpsl
mul
mov
inc
and
mov
pop
aaa
pop
pushf
and
test
mov
jne
jae
js
cmp
jno
sub
pop
and
jns
rcl
in
bound
mov
gs
jmp
or
shll
es
lret
inc
and
and
jo
sti
insb
insb
and
aam
push
mov
adc
mov
mov
mov
jns
cmpl
nop
inc
pop
mov
push
mov
xlat
je
cmp
jg
adc
or
inc
and
add
add
inc
jl
lock
outsb
xlat
daa
movsb
mov
push
jmp
sbb
or
cwtl
and
clc
mov
jb
je
cmp
jle
mov
cmc
pop
xor
cmp
jbe
clc
push
push
or
movsb
in
push
xor
ret
push
inc
xchg
mov
rcl
jmp
das
xor
jbe
sti
insl
mov
and
mov
addl
pop
xor
jbe
outsb
sbb
pop
mov
pop
es
inc
es
test
sub
mov
sbb
pop
pop
insb
or
cmc
pop
sti
loopne
fs
orb
in
push
push
popa
stos
dec
lods
inc
sbb
gs
in
fstl
hlt
lods
mov
arpl
aad
mov
sbb
gs
jne
stos
dec
jns
mov
dec
test
add
and
enter
jne
add
inc
and
in
add
fisubrl
jge
mov
mov
fidivrl
push
daa
fldz
mov
xor
repnz
rclb
push
pusha
xchg
test
push
add
sub
xchg
push
mov
test
xor
andb
fistps
dec
pop
je
pop
and
fld
inc
xor
mov
test
fistps
xchg
mov
ds
mov
fsubrp
xchg
fstps
adc
les
adc
arpl
add
fucomi
sub
das
fcomp
jbe
bound
lea
push
and
pop
sbb
push
dec
lods
inc
and
in
dec
xchg
sbb
pusha
adc
xchg
pop
test
or
dec
cmpsl
xchg
lea
mov
mov
in
xchg
rorb
sub
cmp
or
addb
popf
je
xchg
lret
insl
mov
adc
in
xor
and
lcall
and
test
add
in
add
xor
in
or
adc
test
or
or
popa
pop
inc
inc
in
add
add
rcr
mov
jo
call
es
lock
pop
xchg
or
push
add
push
inc
fsubs
insl
xor
int3
pop
cld
jb
and
cmp
sahf
add
mov
test
mov
addr16
inc
pop
xchg
push
inc
xchg
jl
xchg
fmull
add
push
adc
or
mov
jnp
cmp
popa
and
xchg
xchg
int3
lock
dec
xchg
mov
je
roll
test
push
repz
rcr
mov
add
popf
add
inc
sbb
and
icebp
fadds
dec
in
nop
and
jp
popa
loopne
adc
xor
cmc
dec
pusha
into
or
lock
rorl
ss
jae
stos
cmp
adcb
or
imul
and
dec
mov
jl
and
in
inc
in
lcall
cmp
pop
mov
or
movsb
and
pop
pop
insb
pusha
das
xor
popa
or
enter
inc
lods
xor
push
nop
pop
mov
pop
les
adc
fwait
sbb
pop
es
mov
sbb
in
push
xor
jb
test
dec
and
jne
jl
push
js
xor
mov
imul
add
enter
xor
inc
mov
call
rcl
dec
adc
les
test
aam
rcl
imul
lcall
push
ret
jb
adc
cmc
clc
mul
andl
mov
adc
jl
lds
std
push
jno
pusha
fs
xor
and
insb
jo
leave
and
je
jl
or
sbb
inc
xchg
call
fwait
pop
adc
test
scas
sbb
jo
add
xchg
sti
adc
adc
in
xchg
imul
mov
aaa
testl
xor
ret
mov
in
jno
aam
cmp
adc
inc
xlat
xor
add
in
sti
gs
sbb
jns
call
imul
aad
insb
pop
jnp
stos
inc
orb
lea
jne
cmp
inc
fcompl
push
into
mov
and
ret
sbb
int3
push
mov
mov
popf
inc
loop
jp
cmp
adc
and
outsb
stc
popa
js
lods
add
or
push
pushf
int3
ret
test
cmp
add
test
loope
pusha
insb
push
pop
inc
ret
outsl
jae
push
dec
insb
cltd
adc
inc
mov
nop
insl
pop
jb
in
sbbb
push
popa
push
repnz
adc
inc
dec
add
lods
lock
arpl
test
inc
push
test
pop
push
adc
adc
add
loopne
pop
mov
nop
in
sbb
jp
imul
fs
and
lock
mov
xlat
mov
jg
mov
pop
and
or
test
mov
dec
in
cmc
add
push
fsubrl
sub
jne
test
xlat
imul
cltd
imul
sbb
and
xor
push
or
and
mov
add
test
and
call
enter
push
xor
or
in
sahf
iret
push
and
mov
xlat
and
rcrb
test
dec
push
pusha
repz
push
enter
cltd
adc
dec
add
jl
jp
fistpll
pop
and
pusha
adc
dec
add
cmpsl
xor
ficoml
call
lahf
fs
and
lcall
cltd
sbb
nop
and
mov
imul
stos
adc
or
and
adc
hlt
mov
fs
or
lods
add
or
and
testl
test
or
addr16
insl
sub
or
pusha
and
test
jns
adc
cmp
pushf
jecxz
ret
fwait
sbbb
and
std
push
adc
scas
mov
xor
jp
inc
lcall
shlb
add
dec
and
adc
aaa
or
inc
adc
aam
mov
and
inc
push
sub
in
add
cmp
jno
push
adc
mov
sub
dec
push
jmp
dec
in
and
sbbl
lret
subb
lcall
and
dec
xor
fs
addr16
popf
push
inc
loopne
ret
jne
sbb
pushf
and
pusha
insl
repnz
xlat
adc
and
push
stos
enter
leave
mov
leave
and
mov
sbb
aad
xchg
nop
and
loopne
sbb
mov
enter
and
pusha
aaa
add
popa
push
mov
jo
in
or
or
test
test
loopne
jbe
dec
leave
aam
pop
mov
sbb
add
dec
movsb
sti
xor
xchg
xchg
or
aam
fsubrs
in
add
adc
js
sub
dec
jmp
es
bound
sti
hlt
xor
sub
daa
test
rsqrtps
inc
mov
push
or
or
and
sti
cmp
stc
xchg
or
aam
in
cmp
cs
or
cmp
nop
inc
or
or
xchg
dec
push
or
or
sub
or
inc
add
mov
sbb
enter
fwait
sbb
inc
sub
xchg
inc
jns
add
push
ret
xchg
mov
out
sbb
push
sbb
or
nop
add
or
adc
loopne
insl
mov
filds
xlat
and
sbb
push
or
xchg
jbe
cmpsb
mov
xor
and
mov
cmp
adc
dec
push
and
aad
xlat
test
mov
in
sbb
in
and
ret
sbb
lds
adc
adc
adc
or
orl
push
or
fdivl
and
pop
or
pop
or
xor
fmuls
mov
or
mov
cmpsl
or
xor
hlt
pop
or
iret
pusha
sub
mov
mov
push
pusha
test
add
add
and
jl
shr
pminsw
add
cmp
cltd
dec
leave
popa
mov
add
imulb
adc
dec
enter
dec
cmpsl
ret
adc
addl
push
sub
cmpsb
das
rcrb
mov
test
cmpsb
or
psubsb
loope
in
add
add
insb
adc
sub
pop
subb
lods
lods
lds
dec
sub
adc
add
xor
mov
aas
ja
cs
or
and
sbb
daa
adc
mov
das
add
xor
loopne
lock
pavgb
lret
stos
in
mov
push
push
or
mov
lea
sbb
pop
nop
imul
je
dec
mov
xlat
shll
sub
add
jne
and
jl
push
scas
in
iret
push
sbb
dec
lods
xor
mov
js
mov
jne
jge
movsl
lods
loop
frstor
aaa
rolb
or
pop
inc
loopne
add
jns
stos
outsb
inc
push
jns
xor
dec
dec
inc
shrl
or
xchg
js
js
adc
jns
lods
xor
loopne
ret
lods
inc
or
or
test
and
inc
mov
nop
outsl
adc
sbb
mov
xor
in
cmp
dec
or
es
cmp
adc
push
inc
push
cmp
or
or
pop
push
or
jno
add
mov
mov
cmp
lods
lret
dec
xor
inc
js
lock
scas
mov
inc
push
mov
pushf
stc
jo
jb
pop
stc
cwtl
and
jmp
sbb
add
sub
and
pop
lock
jne
pop
xor
or
push
mov
lock
bswap
ss
xor
shr
mov
adcb
mov
cmp
int3
pinsrw
cmp
mov
pop
jnp
dec
pop
inc
int3
fistl
push
rorb
pop
aam
add
ret
fistpll
mov
nop
lret
orl
push
inc
ja
rclb
pop
or
jp
mov
push
xor
cmp
andl
add
push
cmpsl
insb
inc
cmp
pop
xlat
sarb
sbb
jg
fdivrl
push
test
pop
cmpsl
jmp
loopne
xlat
add
aam
cmp
seta
and
mov
push
insl
stos
lea
mov
adc
int3
jb
cmpsb
imulb
unpcklps
aam
test
cmp
cmpsl
sbb
jne
aas
mov
jo
xchg
xor
pop
cmc
fsts
ljmp
in
das
les
xor
aam
jno
jbe
lods
fwait
mov
ficompl
add
arpl
test
sub
out
mov
dec
ss
cmp
xchg
sub
sbb
jl
inc
inc
nop
lods
xor
mov
pop
inc
outsb
cmp
mov
inc
jno
mov
adc
pop
jge
pop
lods
insl
ja
sbb
push
and
movsb
fadds
enter
inc
jo
cmp
mov
jns
pop
sarb
and
in
xor
imul
jb
mov
xchg
jae
xor
int3
mull
aas
inc
movsl
push
test
push
xchg
aam
sub
inc
mov
insb
ja
aas
mov
mov
sbb
hlt
aas
inc
dec
pop
jb
and
and
push
push
mov
scas
or
sbbl
xchg
push
lea
enter
aas
and
mov
xchg
push
roll
cmp
cmpsl
in
outsl
pop
inc
stc
jo
and
inc
xchg
jge
inc
pop
mov
push
lea
push
xchg
cmpsl
fdivr
in
insb
pinsrw
cmp
add
dec
adc
mov
lock
inc
jno
xchg
mov
inc
test
test
and
gs
addr16
jns
test
dec
in
jo
xchg
and
xor
and
xor
mov
xor
arpl
xchg
gs
pop
out
jo
hlt
jne
or
adc
push
mov
xor
sbb
leave
aam
inc
rol
inc
adc
cwtl
sbb
xor
add
pusha
std
mov
jb
add
or
fdiv
aad
pop
sub
inc
sbb
mov
aad
inc
in
andl
test
push
xchg
dec
mov
xchg
popa
pop
fdivr
fcomps
inc
dec
popa
aad
outsl
push
loopne
sbb
pop
cmpsl
dec
cs
mov
addr16
stos
add
cmpsl
les
loopne
xchg
jl
call
pusha
push
test
and
mov
and
or
add
or
jne
pop
sub
jo
dec
adc
cltd
ss
mov
adc
or
pop
in
test
push
aam
dec
inc
and
dec
push
in
xchg
mov
in
mov
mov
mov
inc
movsl
aam
int
or
repz
rorb
xchg
pop
daa
cwtl
xor
test
lret
push
adc
add
movsl
sbbl
enter
jb
cmpsb
xchg
lret
pop
dec
xor
sbb
arpl
add
mov
mov
rolb
mov
gs
not
add
sub
adc
add
in
aaa
jg
push
mov
aam
test
mov
inc
mov
mov
scas
mov
jbe
aam
movsb
or
ret
int3
test
les
rcl
cmp
sbb
dec
nop
inc
lds
divl
in
push
aaa
lock
cmp
adc
mov
pop
fmull
dec
push
lock
xchg
or
sub
sub
adc
les
push
adc
inc
les
dec
push
or
or
add
mov
test
dec
leave
xchg
test
movups
xchg
movsl
push
jne
sbb
sbb
adc
aas
mov
arpl
loop
dec
inc
das
jo
push
lock
xchg
lds
inc
stos
pop
clc
jne
push
cmp
in
dec
gs
or
js
push
sub
push
xchg
lock
mov
or
jb
mov
lods
lods
mov
movsb
test
test
and
pusha
push
mov
daa
or
lahf
sbb
mov
int
pop
or
and
and
js
test
orb
enter
gs
xor
push
adc
xorl
imul
nop
push
mov
bound
inc
push
outsb
mov
aaa
dec
int3
pop
or
popa
inc
fadd
pop
add
lock
test
push
or
sbb
loop
jne
add
pusha
and
pop
push
in
movsb
lret
adc
xor
dec
xchg
inc
adc
int
mov
jbe
dec
cwtl
inc
xchg
adc
les
andl
in
sbb
test
fldt
push
mov
test
hlt
push
or
push
sub
pop
inc
mov
or
in
enter
aad
pop
mov
rcrb
test
rclb
pop
xor
pop
lret
add
sub
fmull
test
pop
push
xchg
inc
mov
nop
shr
aas
xor
loopne
int3
mull
mov
and
sarl
push
jge
lods
in
imul
mov
movsl
push
faddl
addb
loopne
push
mov
push
jns
push
adc
xor
add
inc
push
or
jo
movsb
mov
pcmpgtb
sbb
push
dec
cli
jo
adc
xchg
ret
ret
pop
insb
xchg
mov
pop
cltd
push
adc
push
sub
cli
and
pop
call
and
or
and
mov
mov
mov
inc
adc
sub
jecxz
mov
clc
xor
push
push
pop
pop
icebp
repnz
pop
enter
mov
adc
in
inc
inc
mov
jp
idivl
sbb
loop
or
mov
jnp
adc
fisubl
insl
cmpsb
sbb
push
pusha
adc
dec
push
dec
es
sbb
inc
cmp
es
fs
sub
push
test
xor
xor
add
fcoms
adc
or
add
sub
lods
or
icebp
sbb
loop
inc
enter
push
movsb
adc
cmp
pop
inc
or
and
lea
sbb
pop
mov
pop
dec
leave
mov
cmp
mov
mov
xchg
mov
addl
add
pop
jecxz
cmp
and
add
xchg
js
inc
test
cmp
notb
jne
xor
std
lcall
js
insb
out
jge
aaa
mov
xchg
cwtl
pop
int3
push
pusha
inc
fiaddl
pop
add
and
or
inc
es
jmp
movsb
fimull
aam
pop
dec
inc
mov
iret
ret
leave
insl
inc
sub
mov
cli
sbb
pop
jle
sbb
jb
push
out
mov
jne
xchg
add
sub
cs
add
mov
fcoml
inc
int3
fwait
cwtl
xor
int3
and
pop
dec
daa
pop
jb
rcl
adc
aam
addr16
xor
pop
cwtl
jo
inc
pop
cmp
popf
xchg
dec
cmp
adc
adc
fs
inc
inc
shrl
sbb
and
add
pop
or
pop
rcl
mov
dec
enter
and
imul
movsb
sub
faddl
leave
arpl
add
sbb
inc
jb
pop
je
and
rorl
adc
loopne
mov
ret
inc
nop
arpl
and
arpl
out
clc
dec
adc
test
mov
dec
inc
fs
push
adc
jo
dec
mov
dec
pusha
das
movsb
ja
sub
inc
xchg
fs
adc
loope
test
jo
test
mov
xchg
nop
mov
xor
sbb
mov
orl
mov
xchg
push
sub
insb
pop
ljmp
pop
adc
mov
inc
dec
sbb
test
xor
std
add
add
sti
pusha
stos
mov
adc
sbb
push
mov
lds
pop
and
mov
xor
test
inc
daa
insb
push
xor
inc
dec
les
mov
dec
fisubl
fcoms
dec
push
nop
imul
enter
ficoml
jae
add
test
imul
nop
fnstenv
xor
shlb
push
stos
xor
cmpl
jno
movsb
push
mov
lcall
add
loopne
add
dec
xor
add
imul
insl
lock
ret
jo
in
and
xchg
orb
adc
test
ja
test
add
adc
mov
cmpsl
cmpsb
inc
iret
addps
inc
mov
adcb
cmp
leave
xchg
imul
mov
pop
pop
ret
pop
or
sub
inc
ret
add
adc
jbe
out
cmpsb
pusha
shrl
xlat
push
adc
pop
or
stos
fldl
pop
in
in
aam
mov
push
in
sbb
out
fildll
mov
das
aam
sub
movsb
rorl
mov
jg
xchg
mov
shl
lds
outsl
int3
jns
sbb
in
jo
cwtl
push
movsb
or
fcoms
mov
fcoml
mov
dec
inc
pop
and
pusha
test
dec
mov
adc
mov
test
sbb
dec
jb
mov
dec
adc
add
je
subl
or
ret
push
dec
rorl
or
addb
lcall
inc
lds
outsl
shlb
inc
xor
scas
lahf
pop
rorb
aam
les
pop
adcb
nop
sbb
mov
nop
add
add
nop
push
test
add
mov
sbb
pusha
sbb
test
inc
inc
jecxz
xor
mov
adc
leave
and
lods
push
mov
and
dec
test
xchg
dec
xor
xchg
dec
xor
test
cwtl
nop
dec
xor
and
js
and
and
aam
xor
dec
fcmovne
outsl
pop
decb
in
insb
jmp
pusha
inc
shl
jns
cmpsb
dec
mov
fcoms
xchg
mov
mov
inc
adc
je
mov
cltd
repz
inc
sbb
rcl
test
adc
movl
insb
je
cmp
xchg
jl
test
mov
movsb
lods
in
inc
push
mov
les
aam
push
add
mov
cwtl
js
mov
adc
push
mov
mov
adc
in
sub
addb
in
es
and
cmp
int3
pushf
pushf
pushf
pushf
les
pushf
movsb
pushf
xchg
mov
xor
je
dec
es
insb
fs
push
push
adc
in
mov
xorb
movsl
sub
orb
ds
pop
pop
test
pop
enter
aad
dec
mov
lods
inc
aam
inc
test
adc
mov
pop
fisttpl
test
in
mov
dec
push
arpl
cmp
pusha
leave
mov
andb
cwtl
sbb
mov
dec
inc
movb
in
or
movsb
pushf
imul
fldl
test
pop
xor
xchg
jmp
fcoml
clc
js
mov
sub
add
dec
sub
jb
das
sarb
xchg
pop
in
jns
shlb
aad
inc
inc
testl
es
movsb
adc
sbb
pushf
fs
adc
pusha
not
xchg
imul
out
cmp
add
adc
test
cmp
mov
adc
mov
sub
mov
imul
and
lds
push
cltd
pop
scas
sub
push
sub
jbe
lods
sub
push
and
add
mov
pop
mov
push
or
lcall
lea
mov
out
fcoms
invd
sbb
xchg
dec
aas
outsl
mov
inc
inc
fadds
aam
add
pop
jno
sbb
jl
or
jmp
xor
and
popl
sbb
sar
mov
int3
or
jge
cmpsb
lea
cmp
sub
ss
sbb
daa
sbb
das
xchg
sbb
add
mov
xor
pushf
insl
xor
adc
enter
or
mov
fmul
les
xchg
fs
stc
les
arpl
imul
test
jl
push
nop
inc
jo
adc
and
pushf
xchg
mov
sbb
sbb
lock
and
cmp
in
mov
pop
ret
add
andl
sub
xchg
or
movsb
add
insb
leave
jle
dec
push
xor
movsb
sbb
movsb
adc
adc
orb
ljmp
mov
inc
jo
and
xor
lock
repz
sub
nop
imul
mov
imul
jl
add
nop
pushf
mov
pop
dec
insb
leave
movsb
mov
sbb
mov
or
and
and
nop
push
rol
mov
xchg
jno
mov
or
mov
dec
or
sbb
in
jecxz
test
xor
or
popf
xor
in
adc
mov
inc
push
and
adc
insl
hlt
cltd
inc
add
add
inc
jno
repz
insl
push
pop
sbb
xchg
add
adc
add
sub
add
les
xor
sub
clc
mov
cmp
cmp
add
icebp
sar
sbb
lds
xchg
inc
popa
mov
shlb
inc
in
int3
in
ret
in
mov
lahf
orb
xor
mov
rcr
sub
and
push
pusha
push
roll
sub
push
xor
shrb
scas
dec
shrl
adc
inc
lea
jp
pop
xor
das
cmp
mov
jg
cmp
sbb
mov
rorb
nop
mov
push
aas
out
and
pop
add
jmp
mov
loope
add
xor
fld1
mov
sbb
mov
movsl
or
jp
dec
leave
cmpsl
adc
mov
test
xchg
imul
inc
and
scas
imul
adc
dec
test
and
sbb
lods
dec
dec
jno
jne
mov
sbb
and
or
test
pop
pusha
inc
mov
adc
es
jecxz
or
sub
adc
idivl
testl
fwait
mov
gs
lcall
push
pushf
lcall
push
inc
mov
pusha
mov
rep
negl
inc
mov
mov
enter
add
popa
and
stos
or
arpl
mov
adcb
scas
xchg
push
cmp
cltd
adc
movsb
push
scas
or
pushf
aam
imul
mov
sbb
inc
mov
push
jo
xorl
sbb
movsb
pusha
insl
add
js
pushf
mov
mov
and
xor
or
mov
jge
sub
mov
mov
add
subl
fmull
xchg
arpl
or
xor
in
movsl
mov
subl
and
enter
call
lcall
lods
pop
pop
sbb
push
jns
bound
adc
jmp
test
xchg
and
dec
daa
push
jl
mov
scas
test
dec
xchg
push
leave
cwtl
fldt
test
or
pop
je
cmp
sbb
and
cmpsb
repz
inc
add
movb
sbb
lds
shrb
dec
xor
shll
pusha
cmp
dec
or
xchg
cmp
push
nop
cmp
shlb
xchg
sbb
lods
out
mov
xor
cmp
mov
shrl
lods
pop
sub
addb
or
pop
inc
movb
or
out
int
fcmovbe
inc
xchg
bound
sbb
sbb
jno
xchg
orl
mov
mov
add
in
pop
nop
test
ret
scas
jne
insl
ret
inc
add
or
xor
push
ret
dec
test
lods
pusha
and
push
and
add
or
mov
js
mov
jecxz
lds
les
adc
lods
adc
fs
mov
icebp
movsb
push
push
sbb
mov
or
pop
repnz
mov
jno
pop
test
sbb
and
cmp
mov
pxor
pop
in
add
test
nop
sub
push
int3
or
mov
movsb
pop
in
or
cwtl
cmp
mov
test
std
fdivp
push
push
inc
mov
xor
xchg
hlt
dec
xor
inc
sbb
cmp
or
xor
pop
mov
sahf
xchg
insb
push
cld
and
inc
lock
lret
xor
inc
jl
fidivs
ds
sahf
or
mov
and
xor
jge
loopne
cmpl
push
or
cltd
push
sbb
inc
jbe
jle
adcb
sbb
movb
xchg
imul
push
imul
repnz
sbb
rorb
mov
jno
and
call
ss
and
pop
add
les
sahf
add
and
dec
push
scas
push
movsb
icebp
call
add
inc
mov
loop
inc
jo
sub
cld
mov
inc
cmpsb
sbb
hlt
mov
sbb
push
sub
mov
leave
sbb
cmp
in
nop
orl
mov
les
es
or
sbb
sub
jl
jo
addl
cmp
push
out
pop
mov
and
ds
add
push
inc
dec
mov
fdivl
ds
daa
push
xor
sarl
pusha
mov
mov
idivl
adc
push
inc
pop
mov
cmp
ja
mov
add
fsin
push
inc
add
rolb
lret
dec
add
jmp
add
arpl
jl
push
jmp
xlat
lcall
cltd
cmp
inc
orb
jnp
mov
add
ljmp
adc
mov
rcll
xchg
adc
or
cmp
rclb
xor
dec
jns
mov
test
add
nop
add
into
pop
adc
test
dec
divl
push
push
fiaddl
divl
dec
dec
lret
push
cmpsl
stc
xor
lea
dec
fwait
sub
test
cwtl
add
and
add
movzbl
fsubrs
andb
mov
popa
insl
mov
bound
and
insb
outsl
arpl
imul
insl
mov
lods
jb
sub
popa
arpl
jne
jb
jbe
popa
outsb
je
add
add
push
insl
adc
mov
push
inc
outsl
jb
js
outsb
div
imul
add
or
outsl
fcomip
scas
sarl
add
add
jne
mov
je
imul
dec
push
sbbl
add
aaa
mov
cmpsb
orl
inc
xor
inc
push
cmp
jo
mov
push
and
jmp
dec
add
sub
push
insl
addl
je
and
jae
out
imul
fisttpl
fs
cmpsw
mov
push
push
or
bound
jns
push
jne
imul
or
jbe
aas
fsubrp
imul
jp
outsl
or
mov
or
gs
fstpl
addr16
and
outsl
jmp
and
add
jne
int
lret
stos
insl
sub
push
imul
and
scas
ja
cmp
pop
fdivrl
push
data16
push
mov
outsb
dec
sub
xchg
ds
jp
sub
insb
adc
repz
push
sbb
xchg
jecxz
push
inc
arpl
or
inc
daa
dec
jbe
js,pn
sbb
fbstp
outsb
bound
xchg
aaa
adc
sbb
jo
arpl
mov
jo
push
xor
scas
push
lds
sbb
fbld
mov
filds
push
das
jb
mov
xchg
popa
ret
fidivrl
cs
leave
push
xor
xor
nop
andb
xorl
fidivrl
jg
loope
mov
popa
sub
shll
lahf
je
inc
lds
jg
dec
and
sub
iret
fbstp
cs
fbstp
jne
jbe
jb
push
push
data16
pop
inc
sbbb
jg
xlat
xchg
scas
pop
stos
bnd
das
roll
jae
pop
sbb
ljmp
push
jo
lahf
outsl
aas
arpl
sbb
iret
arpl
sbb
mov
xlat
popl
pop
and
aaa
insl
lret
sbb
jecxz
stos
fs
imul
test
pop
rcll
dec
fbld
psubb
popa
leave
xor
add
xchg
push
jmp
mov
pop
add
adc
pop
cltd
idivb
je
scas
cmp
mov
lea
jae
subb
pop
pop
jecxz
push
and
rcrb
dec
andb
imul
add
into
sub
jns
sahf
sbbl
inc
mov
dec
imul
out
lcall
sbb
sarl
sbb
stos
xor
jae
push
pop
sahf
push
sbb
sbb
and
pop
js
jns
imul
push
cld
and
decl
cmpsl
out
dec
aaa
add
mov
andl
jp
les
add
push
mov
dec
jb
fcmovne
add
ret
outsb
pop
mov
xchg
gs
xchg
ja
ds
cwtl
xchg
pop
mov
shll
cmpsl
fnstsw
mov
fwait
cmp
dec
add
sbb
xor
in
fsubr
pop
add
and
add
das
lods
xchg
fsubrs
das
and
and
jbe
out
fcoms
cs
inc
and
lods
xor
jmp
push
fbld
idivl
inc
sub
mov
lods
icebp
push
push
daa
mov
scas
ret
ds
daa
outsl
dec
pusha
add
imul
inc
arpl
inc
mov
pop
pop
imull
insl
out
iret
jns
out
out
cmp
push
bound
mov
arpl
pop
lock
jnp
inc
jae
push
and
pusha
fbld
sub
pop
dec
insl
imul
fbld
ds
neg
fdivs
mov
iret
mov
mov
es
cmp
cmp
idivb
sub
dec
and
jns
add
lahf
jmp
addr16
push
inc
inc
mull
clc
arpl
bound
dec
outsl
jbe
dec
arpl
sbbl
inc
inc
jo
sub
addr16
xor
jne
xchg
outsb
xchg
inc
jo
imul
bound
inc
popa
cmp
fdivrl
scas
cmpsl
xchg
out
jnp
popl
ja
std
int3
fnsave
inc
popa
je
jb
xor
outsl
imulb
gs
sbb
dec
outsl
out
insl
mov
jbe
ror
cmp
aas
add
out
fldl
mov
mov
and
fildll
push
push
inc
push
mov
insb
jne
inc
inc
mov
test
loope
or
dec
xor
and
sub
sub
cs
pushl
xor
xor
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
mov
sbb
push
push
mov
pop
pop
pop
pop
pop
hlt
pusha
popa
bound
gs
addr16
insl
outsb
outsl
jo
add
jbe
js
jp
outsw
mov
jl
jle
dec
adc
lcall
loopne
inc
xchg
dec
and
add
cmp
in
jnp
rorb
ljmp
lret
jno
icebp
pusha
inc
mov
aas
lea
clc
ret
movsl
add
xorl
mov
imul
xchg
das
cmp
es
jae
add
jo
xor
out
js
addl
lods
dec
pop
jne
sbb
out
ret
sbb
adc
sub
je
sub
adc
adc
add
add
add
lds
xor
cmp
push
pop
xchg
mov
add
xor
pop
hlt
and
repz
add
pusha
push
add
mov
mov
inc
add
or
xor
sbb
sub
addb
push
xchg
test
add
and
adcb
pop
daa
push
cmpb
sahf
jge
push
push
and
sub
jb
int3
push
add
mov
cs
cmpsb
call
ja
and
mov
jo
add
pop
adc
xor
lcall
leave
rorb
add
leave
and
mov
nop
xchg
xchg
dec
es
xchg
mov
mov
push
mov
cmc
popf
dec
daa
cmpsl
inc
scas
mov
jne
out
add
push
stos
aad
lods
mov
cmc
jp
repnz
sbb
mov
pop
sbb
out
out
or
cmp
rdtsc
ss
jmp
push
dec
dec
inc
dec
inc
adc
notl
mov
xchg
je
hlt
jbe
mov
dec
bound
je
outsb
data16
fstl
insl
xor
ss
out
je
xor
fistl
rclb
jo
pop
sar
jae
lea
mov
outsl
js
push
testb
and
insl
jo
jo
mov
fldenv
int
dec
xchg
shlb
aaa
insb
in
pop
or
les
dec
imul
mov
or
inc
cmp
dec
inc
jb
imul
cmpsl
cs
stos
ss
jns
mov
mov
outsb
lock
and
arpl
je
and
push
rcrb
mov
outsb
jle
jbe
mov
push
xor
outsb
pop
jb
divl
sbb
and
xor
incb
pusha
aaa
push
jns
inc
ss
lods
jp
mov
mov
pusha
xchg
pushw
popl
cs
mov
cmp
pop
and
push
sbb
xchg
pop
daa
bound
insl
adc
dec
test
pusha
lock
push
outsb
mov
pop
pop
pop
push
push
jae
or
pop
in
cmp
cmp
sub
hlt
clc
addr16
or
mov
das
outsb
gs
mov
add
icebp
jbe
mov
in
adc
inc
push
push
push
push
dec
testl
push
jne
repnz
push
push
ret
push
lods
filds
lea
dec
dec
jge
adc
ds
jle
jb
xor
and
push
imul
mov
jg
inc
adc
adc
in
xchg
or
clc
mov
sbb
bound
push
inc
jg
loop
testb
mov
das
je
outsl
pop
loope
insb
xchg
daa
xchg
mov
ds
jnp
popw
pop
cmp
cmp
repz
fisttpl
ds
and
sub
ret
je
jl
push
addr16
jle
addr16
je
cmp
dec
add
sub
pop
adc
jnp
or
sbb
das
push
jb
call
aaa
and
push
mov
xchg
xchg
fcmovbe
mov
outsb
stos
addr16
push
fstpt
addl
adc
xor
or
pop
shll
pop
mov
int3
lock
dec
sbb
mov
xchg
inc
jo
cmp
and
push
jl
repz
sub
pop
cs
add
cmp
repz
xor
adc
cld
mov
lock
push
call
out
push
push
aam
int3
repz
cmpsl
mov
mov
lods
sahf
out
fldt
mov
cmpsl
stc
push
test
mov
push
cmpb
sahf
out
jo
push
sahf
out
pop
push
push
dec
lahf
out
sahf
inc
xor
and
cld
sub
iret
repz
enter
imul
or
sub
out
sahf
out
xorb
lahf
out
sahf
push
xor
sbb
lock
repz
test
pop
sub
repz
repz
sub
push
pushf
jo
repz
xchg
jg
push
and
adc
sub
push
dec
aam
in
push
pop
add
sub
dec
mov
push
test
add
pop
sbbb
popa
or
xchg
lods
stos
mov
add
cmp
push
mov
and
add
mov
dec
adc
add
dec
pop
add
mov
in
xchg
add
pop
fildll
xchg
sub
fdivrl
add
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
lcall
movsb
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
fdivrp
fnstsw
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
pop
or
jmp
loope
add
test
sub
popa
stos
add
and
xchg
jo
pop
pop
outsb
gs
popa
inc
pop
out
inc
movsl
shlb
outsb
push
xor
sub
jb
jbe
mov
jns
outsl
dec
arpl
fstpt
lock
insb
fs
sbb
popf
ljmp
cmc
jp
push
setl
add
xor
push
inc
adc
fnstsw
rclb
push
xor
push
dec
inc
dec
cmovns
data16
loop
inc
das
push
adcb
adc
sub
adc
mov
popa
into
mov
mov
jg
inc
jnp
inc
loop
mov
ds
pop
adc
jmp
iret
aas
clc
lret
sbb
jb
jge
arpl
fstpt
pop
pop
dec
scas
jp
jno
in
fstl
jg
jg
mov
and
cmp
dec
imul
incl
lret
add
inc
mov
mov
sub
sarb
sahf
fwait
ss
sbb
pop
jns
ds
xor
jg
incb
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
idivl
cld
push
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
and
xchg
dec
xchg
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
dec
xchg
pop
mov
out
leave
ljmp
addb
or
or
scas
int
mov
leave
hlt
sti
jg
mov
sahf
xchg
dec
add
scas
lods
dec
lock
xor
pop
daa
in
mov
icebp
pop
pop
repnz
jg
aas
and
es
sbb
sub
fadd
add
outsl
inc
ja
mov
inc
outsb
push
out
jne
dec
jo
scas
xlat
dec
out
test
inc
sub
popa
sbb
push
into
adc
push
push
insb
fdivrs
mov
das
pusha
and
fmuls
fdivrs
pop
dec
xchg
mov
and
popa
mov
mov
out
sbb
sbb
outsb
imul
and
inc
jae
xlat
scas
or
ficomps
roll
jg
pusha
dec
loopne
pop
fs
nopl
or
clc
mov
mov
and
je
pop
imul
jae
inc
xchg
loope,pn
and
aad
sti
jmp
js
out
push
xchg
lret
xchg
or
or
loop
addr16
imulb
jb
add
mull
push
or
lahf
ja
movsb
pop
jo
cmpsb
outsl
addl
xchg
repnz
insl
jle
add
push
pop
cmpsl
mov
inc
sub
clc
sub
arpl
loope
js
adc
sub
pop
out
adc
aaa
push
mov
jb
push
sbb
mov
in
dec
mov
das
cmpsl
cmp
ret
jecxz
or
jae
add
sbbl
xchg
xlat
cs
icebp
mov
mov
cmpsl
mull
loope
adc
sbb
mov
push
sub
cmpsl
dec
mov
aad
ja
inc
adc
mov
sbb
cmp
pop
pop
mov
out
jnp
jne
adc
dec
lcall
push
push
pop
mov
imul
push
es
inc
sbb
ds
cmp
mov
cmp
inc
mov
sub
add
xchg
inc
sub
cld
arpl
dec
dec
decl
lock
fstpt
xchg
gs
aaa
jbe
xchg
dec
dec
jp
add
xchg
aaa
lcall
fwait
insb
jns
pop
jge
pop
dec
mov
mov
pop
jmp
xor
out
ror
not
addr16
je
and
dec
pop
xor
aas
arpl
daa
jo
mov
arpl
add
faddl
frstor
jne
xor
and
sub
ja
arpl
push
sbb
pop
fnstsw
sbb
mov
sbb
push
xchg
inc
fldt
mov
push
pusha
mov
or
aas
arpl
bound
sub
adc
sub
inc
pop
mov
add
cmp
jo
add
jo
in
add
loop
mov
je
fwait
clc
clc
addr16
push
cli
popf
jl
lock
push
arpl
cmp
lods
pop
call
pop
or
ds
mov
jae
add
pop
or
or
js
xchg
sbb
je
jae
loope
std
and
mov
push
adc
mov
pop
enter
or
sub
pop
jnp
stos
test
pusha
das
push
and
push
mov
push
mov
ja
bound
cmp
dec
out
mov
mov
jae
pop
js
icebp
or
jne
add
jle
xor
dec
pop
outsl
dec
or
sbb
inc
xor
adc
adc
addr16
mov
sahf
push
pop
xchg
daa
cwtl
pusha
add
das
outsb
out
jb
push
push
cmp
sub
or
ds
add
out
pop
push
fiaddl
fiaddl
jp
jae
push
pop
mov
addr16
shl
push
sti
and
xor
mov
bound
testl
inc
xor
add
outsl
jmp
and
daa
lahf
add
adc
ja
addr16
outsl
jb,pn
pop
adc
add
adc
dec
rorl
out
inc
push
inc
scas
out
jnp
mov
arpl
dec
dec
in
loope
insb
xchg
inc
inc
dec
cmp
ja
sbb
jmp
in
inc
shll
ss
imul
mov
outsb
dec
pushf
mov
jge
clc
sbb
pop
je
pop
dec
pop
icebp
jmp
insb
aas
pop
sbb
pop
scas
inc
bound
call
mov
lods
pop
mov
ja
xchg
inc
arpl
pop
pop
bound
adc
push
aas
testl
jle
inc
mov
mov
mov
xchg
push
loopne
jmp
pop
jnp
jl
imul
push
mov
sbb
and
addr16
bound
das
mov
push
das
mul
jno
add
mov
cmp
jns
jo
jae
jl
push
sbb
push
scas
ficoms
pop
jnp
sbb
scas
xor
jmp
es
xlat
pop
icebp
into
ja
add
ja
jnp
cmp
outsb
mov
and
lahf
pop
arpl
jnp
push
inc
and
jno
loop
cmp
pop
fsubrl
outsl
lret
jl
mov
or
jns
inc
or
or
lock
mov
ds
addr16
or
fs
mov
imul
jno
add
push
xchg
jl
inc
or
lods
repnz
sbb
jl
arpl
mov
xor
aas
addr16
imul
adc
ljmp
outsl
roll
rol
fisttps
divl
sbb
inc
jl
xor
jae
dec
out
xchg
or
inc
jns
lcall
jae
movsb
sbb
pop
fistps
adc
ja
mov
cli
add
mov
test
aaa
pop
pop
clc
jne
imul
inc
pop
in
roll
push
ret
insb
roll
dec
in
push
popa
mov
addb
pop
push
es
dec
fcompl
jle
das
addr16
pop
mov
mov
add
xchg
test
mov
lods
jle
push
sub
push
add
xlat
jl
sub
add
out
sbb
hlt
lret
cmp
pop
test
fldcw
inc
push
push
inc
or
push
mov
mov
push
mov
pop
ds
push
jp
divl
iret
out
push
cmp
out
jne
insl
mov
pop
push
push
cmpl
fnstcw
cs
lret
pop
cvtps2pd
fst
jl
pop
out
inc
pop
mov
cs
mov
aas
pop
cmp
jl
test
pop
out
pop
push
mov
push
ficoms
sbb
mov
call
cld
sbb
push
fcoml
out
pop
cmp
cmp
sarl
or
dec
push
outsb
ja
rolb
lock
mov
inc
ja
xor
scas
mov
jae
outsl
adc
mov
jo
jns
daa
fwait
icebp
pusha
or
xchg
dec
cli
ret
cmpsb
push
push
or
arpl
pop
push
or
insb
lret
cmpl
sti
aas
pop
popa
jl
aad
push
jae
fisttps
popa
outsb
arpl
push
gs
insl
push
pop
out
pop
pusha
push
popa
jne
or
and
ss
push
dec
bound
xor
ficompl
and
jae
aaa
mov
mov
je
je
push
js
jl
ds
rep
scas
xlat
pop
jne
cmp
int
pop
jne
cmpsb
push
mov
mov
repz
jbe
cmpsl
imul
es
bound
addr16
loopne
cmpsl
into
xchg
aaa
cltd
clc
dec
xor
gs
shrl
je
cmp
ds
outsl
push
jo
jb
out
jb
in
pushf
mov
mov
and
jae
sbb
ds
incb
and
and
arpl
xor
adc
outsl
sti
cmp
fs
adc
add
adc
mov
scas
push
sbb
je
ss
cmp
adc
data16
outsl
stos
mov
fsubrs
sbb
ja
adc
aaa
or
cmp
sbb
and
add
xchg
sub
imul
cmpsl
xchg
sub
popw
push
scas
ja
fdivl
dec
push
lfs
xchg
lcall
or
inc
sarb
or
insl
pop
pop
addr16
inc
or
xlat
mov
cmc
insb
inc
dec
push
and
nop
cmp
cmp
insb
int
js
mov
sub
mov
xor
pop
push
es
fwait
outsb
push
sub
mov
sub
out
or
into
push
pop
pop
jmp
call
or
call
sub
sub
dec
xchg
shlb
sub
aas
into
pop
lret
mov
ja
add
push
and
mov
fdivl
mov
lcall
xor
and
jle
sub
adc
sub
add
push
add
dec
adc
dec
mov
inc
xadd
test
or
or
rcrb
bound
pop
pop
mov
add
addr16
daa
cmp
dec
daa
dec
fisttps
loope
mov
stos
push
inc
ja
lods
add
iret
imul
lea
pusha
stos
filds
mov
mov
movsb
xor
xor
fimuls
scas
mov
push
sub
imull
mov
data16
add
outsl
iret
imul
jecxz
dec
pop
fidivl
pop
je
add
mov
cmp
int
add
stos
xor
mov
aaa
and
maxps
cs
imul
stos
testb
outsb
jae
inc
stos
jno
push
jp
arpl
pop
xchg
divb
dec
test
sbb
les
lahf
bound
inc
arpl
addl
cli
scas
pop
jb
fs
cs
jb
add
icebp
lcall
scas
loop
inc
sub
fwait
dec
mov
fiadds
or
dec
mov
push
lret
mov
fists
stos
inc
ja
mov
pop
add
imul
inc
fwait
jmp
test
in
jae
repz
adc
adc
loopne
aas
push
sbb
dec
decb
xorl
popa
fisttpll
insl
aas
fists
imul
das
ret
add
xchg
xchg
loopne
mov
jg
push
inc
pop
lods
lea
aas
sbb
add
ljmp
pop
and
or
stos
xor
pop
js
insl
addr16
mov
cmp
int
rolb
lods
dec
dec
mov
and
jmp
dec
xchg
dec
movsb
lahf
bound
mov
pop
xchg
fimull
insl
xchg
mov
xor
js
mov
dec
push
or
test
out
or
pop
mov
dec
jne
lret
sub
test
jmp
stos
ljmp
lahf
lcall
pushf
or
jle
lods
inc
xchg
inc
cmp
sub
sbb
scas
jle
icebp
out
cmp
imul
rcll
fs
sbb
stos
pop
mov
pusha
mov
addr16
inc
mov
lret
mov
arpl
imul
sub
aas
sub
mov
roll
out
rcr
mov
aaa
lret
sti
jbe
mov
arpl
jno
push
xchg
jb
ret
outsb
pop
das
xchg
mov
arpl
xchg
pop
inc
push
dec
xchg
movsb
mov
lock
roll
ret
fisttpl
pop
or
outsl
ret
mov
dec
add
dec
ret
ret
mov
sti
fldt
arpl
mov
daa
insl
scas
lcall
xchg
xlat
dec
or
mov
stos
jne
pop
inc
outsb
cmp
sbb
fs
ficomps
adc
push
push
xchg
hlt
or
loopne
insb
mov
lods
je
stos
jbe
ret
sbb
mov
pop
cmp
inc
aam
stos
inc
push
pop
ss
adc
jb
push
outsl
push
notl
jb
xlat
pop
push
faddp
xor
push
inc
fstpt
test
mov
xor
add
add
jmp
xor
je
into
fcomps
lahf
aas
xor
fdiv
or
es
in
sbb
outsl
sub
dec
pop
imul
cmpsl
stos
test
iret
sub
or
jecxz
pop
mov
xlat
sbb
je
mov
imul
or
int3
sbb
sbb
mov
dec
dec
sub
pop
adc
inc
xchg
arpl
stos
xlat
cmp
popaw
push
xchg
addr16
shlb
fs
loopne
mov
arpl
imul
ljmp
test
add
push
cmp
test
pop
testl
xor
push
enter
add
xor
push
outsl
test
das
cs
insl
das
outsl
push
inc
dec
mov
xor
ja
xchg
popa
adc
adc
mov
ss
add
mov
push
dec
mov
out
cmp
stos
push
sbb
dec
dec
push
iret
push
adc
cmpsb
pop
outsl
stos
and
out
lods
setg
push
mov
pop
sahf
xor
add
dec
call
lret
cmp
jl
lahf
pop
pop
popa
xchg
mov
and
xchg
inc
pushf
or
test
add
mov
xrelease
or
out
mov
orl
adc
nop
add
cmp
pop
pop
cmp
cmp
inc
mov
pop
add
jae
and
or
arpl
pop
pop
pop
test
dec
add
or
sub
cmp
xchg
jnp
mov
lret
sbb
sub
loop
push
mov
cmovg
imul
nop
sub
cli
or
loop
scas
push
push
mov
xchg
minps
or
sbbl
subb
add
mov
push
pop
imul
repz
adc
mov
jbe
scas
iret
outsl
push
add
ret
fs
sub
outsl
mov
iret
jp
pop
call
dec
jmp
jae
insb
je
mov
jnp
push
mov
pop
mov
mov
xchg
aas
xchg
inc
push
mov
mov
out
inc
ja
pop
add
push
loopne
das
adc
pop
sbb
and
sbb
jns
andl
out
lcall
xor
call
xor
and
sbb
sub
add
adc
lcall
clc
pop
mov
insb
mov
inc
iret
xor
inc
mov
mov
fiadds
mov
popa
xchg
add
shrb
ret
sub
shrb
cmpsl
fldcw
pop
adc
insb
sbbl
pop
sbb
data16
dec
str
mov
fwait
add
inc
stc
das
incl
stos
lods
sbb
shrb
sti
inc
add
int
repz
insb
or
or
ss
xchg
or
adc
adc
frstor
adc
push
push
mov
sbb
hlt
pop
inc
faddl
jb
and
jl
inc
out
or
add
add
push
and
fidivrs
push
push
mov
pop
adc
sub
movl
mov
dec
inc
pop
dec
sbb
jp
xor
xchg
bound
and
das
incl
jo
mov
xchg
or
jae
sbb
sarl
lods
dec
imul
scas
sub
addb
lea
popa
pusha
pop
ret
add
das
add
es
das
aas
sub
xchg
sti
arpl
mov
arpl
cmp
shrb
sub
adc
out
mov
rol
iret
out
adc
mov
add
pop
lret
aas
sti
mov
das
sbb
cmpsl
iret
loopne
mov
add
mov
dec
jmp
or
sub
das
and
add
outsl
rcrb
push
jecxz
lret
imul
adc
pop
mov
iret
test
imul
pop
mov
aaa
jbe
fimull
andb
jg
jecxz
rcl
jecxz
shll
mov
jnp
fisubs
inc
cmp
add
clc
push
or
jnp
jge
mov
outsl
mov
sub
and
fs
fildl
loopne
inc
add
push
lcall
imul
add
es
push
insl
pop
inc
mov
and
add
faddl
jecxz
jmp
push
mov
insl
arpl
bound
mov
push
sub
mov
fisubs
push
iret
push
inc
cltd
push
mov
loope
in
fsub
inc
mov
stos
in
cmp
loop
pop
and
sub
loope
mov
add
loopne
push
xor
xchg
push
mov
sub
and
rcr
in
cltd
dec
subb
mov
jns
pop
cmp
fldt
inc
lock
dec
and
in
hlt
fldenv
cld
fcoms
push
xor
pop
and
stos
in
adc
xchg
pop
and
sub
aad
dec
and
aam
in
jb
and
rorl
xchg
test
xchg
mov
xchg
push
leave
cmp
rcrl
dec
clc
rcl
test
push
sub
stc
mov
out
add
jg
or
push
lahf
inc
bound
pop
push
das
fnsave
pop
rorl
call
inc
inc
fwait
xorb
and
xchg
mov
adcb
test
das
inc
xlat
test
pop
bound
xlat
fisubrl
addb
ffree
arpl
inc
xor
and
mov
pop
and
xchg
or
inc
dec
and
shl
fildll
sub
cmpsl
popa
aam
ss
not
adc
add
cmpsl
inc
or
pusha
shlb
mov
adc
dec
andps
pusha
push
xchg
jae
adcl
push
inc
sub
lcall
movsl
mov
dec
xor
push
das
mov
outsl
sub
add
sbb
movb
pop
push
scas
addr16
xor
adc
neg
xor
and
inc
push
mov
scas
push
inc
rcrl
lahf
adc
inc
sub
add
mov
aaa
cmp
popf
inc
mov
adc
test
loope
nop
cmp
pop
and
in
nop
pusha
das
out
aaa
or
iret
xchg
scas
pusha
add
movl
mov
aaa
outsl
sub
add
lea
mov
fisubl
pusha
scas
push
or
add
aas
pop
jmp
push
iret
pushl
push
xlat
adc
jg
xor
shll
ja
adc
les
cmp
aaa
push
dec
enter
dec
xor
pop
pusha
test
cmp
push
push
xor
jbe
aam
inc
dec
inc
xlat
push
insb
xchg
pusha
jg
subl
aas
xchg
xlat
mov
clc
sub
add
inc
shr
popa
xor
and
shlb
pop
sbb
jge
and
jae
pop
or
adcl
cmp
sub
push
push
outsl
loopne
cmp
bound
xchg
add
jo
test
cmpsb
xchg
cmp
std
es
addr16
bound
popf
fdivrs
ja
je
or
mov
sahf
aam
cmp
sub
mov
sbb
nop
push
adc
jecxz
es
jae
push
nop
sub
mov
jecxz
sbb
mov
mov
mov
rorl
nop
js
mov
push
jbe
xor
adc
sbb
daa
outsb
xor
add
mov
data16
in
ja
adc
cmp
ret
jae
imul
xchg
outsl
dec
js
fs
pop
daa
das
fs
daa
sbb
adc
xchg
fwait
adc
fisttpl
sbb
mov
and
add
iret
and
dec
mov
pop
jecxz
inc
nop
push
rorb
scas
jae
mov
aad
sbbl
in
inc
pop
inc
adc
movsl
push
cltd
push
idivl
push
push
pusha
ss
xor
add
in
loope
ds
pop
repnz
push
ds
push
jl
aas
fcoml
filds
inc
rolb
xor
jno
sub
xchg
js
or
mov
inc
lods
popa
cmp
imul
push
fwait
adc
popa
xor
and
and
pop
or
mov
mov
inc
lods
movsb
pop
fbstp
movb
sub
adc
outsl
into
cld
xorb
subb
out
roll
dec
movzbl
add
rol
es
cmp
adc
pop
and
sub
enter
add
xlat
jns
nop
mov
fiadds
push
inc
mov
imul
add
cmpsb
je
ret
adc
movsl
xchg
fisubrl
add
bound
pop
adc
loope
adcl
mov
scas
or
ret
hlt
cmpsb
aas
mov
mov
xchg
push
test
ja
dec
es
outsb
outsb
sub
out
sbb
push
cs
cmp
cs
xor
stos
negl
out
es
add
xchg
adc
mov
push
movl
out
mov
push
xor
jae
fs
fdivp
rcrb
dec
sub
into
xor
pop
mov
pop
pop
dec
shlb
lods
xchg
negl
inc
mov
scas
mov
push
xor
ja
imul
inc
scas
pop
fnstsw
jbe
dec
or
inc
push
and
out
mov
jns
dec
mov
bound
iret
cmp
adc
xor
xor
cs
lret
pop
pop
outsb
jb
loop
push
loope
sbb
xor
outsb
outsl
jne
hlt
sbbl
data16
xor
xchg
shlb
mov
cs
fs
adc
test
mov
cmp
or
daa
jbe
pop
divl
mov
pop
js
jnp
adc
pop
jb
imul
pop
fnstsw
loopne
mov
push
es
ss
outsb
ffreep
test
daa
dec
jb
das
inc
lods
loope
cvtdq2ps
dec
das
add
out
cmp
and
or
mov
iret
jns
dec
cs
sahf
push
cmp
push
push
in
jecxz
insl
sub
push
insl
imul
testl
mov
jnp
fidivrs
jp
ds
clc
fidivs
fiaddl
jg
dec
das
xor
fisttps
jp
pop
out
loopne
outsl
pop
outsl
dec
xor
or
pop
into
xor
pop
enter
imul
inc
jb
push
inc
mov
sbb
loop
addr16
pop
push
push
pop
inc
mov
pop
sub
rol
lret
pop
aam
cmp
xchg
jo
jnp
add
jbe
fidivrs
pop
das
add
fistpl
pop
add
and
jae
add
ja
andl
or
out
lods
pop
xor
adc
pop
and
mov
loop
sub
jae
in
sbb
movsb
es
sbb
adc
std
ret
inc
add
mov
arpl
lock
lea
cltd
ret
out
or
fsubrs
mov
or
and
add
pop
je
outsl
dec
daa
fisubl
jmp
imull
or
inc
mov
lret
mov
dec
dec
or
xor
scas
sbb
mov
subl
lods
mov
lods
fisttpll
addr16
addr16
ret
aaa
test
in
and
mov
jmp
push
dec
inc
push
insb
outsl
popa
fs
outsl
lods
pusha
xor
and
mov
aaa
orb
pop
pop
inc
shrb
mov
das
sub
inc
ret
mov
pop
adc
iret
pop
iret
xlat
lcall
movsl
or
add
add
push
hlt
popf
rorb
fs
addr16
out
mov
ss
mov
scas
jp
dec
xlat
push
jb
mov
jmp
faddp
xor
mov
pop
fdivl
xchg
pop
and
addl
repz
add
test
aaa
imul
add
mov
push
ja
pop
cmp
jge
jle
jne
jo
arpl
xor
test
ja
xor
xor
push
push
add
or
pop
push
and
mov
cmp
xchg
jae
outsb
mov
fimull
push
jecxz
mov
sub
mov
add
repz
or
fisttpl
add
inc
cmp
mov
sbb
pop
nop
dec
jmp
mov
lahf
pushl
jnp
push
pop
fildll
pop
les
xor
push
push
subl
fisubl
stos
and
xchg
pop
sti
and
cmp
mov
and
das
jne
stos
xor
adc
and
inc
mov
lahf
popa
fldt
or
adc
mov
repz
add
imul
cs
push
xor
jmp
jnp
cmp
dec
aas
scas
jmp
cmpsl
test
das
lcall
mov
ror
and
or
jns
outsb
dec
arpl
fsubr
jo
jae
daa
jbe
ret
mov
negb
mov
aas
lods
ljmp
xor
sub
xlat
lea
outsb
shll
ljmp
mov
adc
pop
mov
addr16
shrb
ds
or
adc
jle
or
lock
mov
in
pop
scas
dec
add
das
mov
ja
mov
inc
push
jno
movsl
aas
xchg
or
imul
sub
xchg
push
push
and
sti
add
clc
outsl
or
push
jmp
cmpsl
jge
push
and
jl
dec
movsb
push
lds
inc
pop
add
bound
xchg
inc
nop
and
mov
adc
iret
adc
and
mov
add
adc
outsl
inc
dec
mov
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
fsin
filds
cli
mov
sub
sub
mov
mov
sbb
mov
ds
pop
sbb
lahf
in
pop
subb
mov
dec
fsubs
cmc
jmp
sbb
mov
pop
dec
xchg
add
mov
jecxz
dec
push
pop
adc
jb
mov
pop
push
and
outsb
xor
push
in
or
fstpl
insl
insb
sbb
xchg
imul
add
js
daa
push
fsubs
push
scas
and
xchg
inc
sbb
xchg
mov
xchg
xchg
cmpb
dec
dec
cmp
daa
iret
leave
jae
sub
or
xor
and
in
sahf
xchg
out
xor
fdivl
cmp
cmp
mov
in
in
mov
cmp
add
orb
inc
xor
stos
rcrb
lahf
push
pop
sbb
adc
inc
decl
jmp
shrb
arpl
movsl
roll
mov
test
sbb
popf
rolb
add
roll
cmp
out
mov
cmp
sub
pop
xor
inc
adc
inc
push
inc
xor
push
inc
addr16
idivl
cmpsb
jp
mov
jge
bound
push
popa
testl
pop
data16
daa
dec
mov
xchg
loopne
add
jne
cmp
popa
outsb
imul
inc
roll
xchg
xorl
sub
movl
lock
daa
stos
inc
add
aaa
push
and
jge
cmp
mov
aas
xlat
ret
inc
ret
push
adcb
xchg
xor
push
mov
mov
push
scas
scas
cmc
test
mov
test
aaa
pop
pand
sub
and
lcall
push
mov
inc
movzwl
mov
mov
jne
inc
call
add
add
sahf
push
mov
cmp
aad
inc
out
or
inc
andl
out
in
adcb
pop
jb
add
test
arpl
daa
cmpsb
cmp
mov
pop
and
mov
rorl
jne
aaa
bound
push
xor
mov
and
dec
dec
ljmp
bound
add
add
dec
inc
arpl
insb
add
add
push
insl
cs
xchg
jle
lcall
out
es
mov
js
mov
imulb
xor
sahf
cmp
rcll
loopne
add
xchg
cmp
push
std
cltd
xorb
mov
cltd
sbb
mov
add
pop
and
sub
clc
mov
push
mov
je
es
sbb
xchg
rcl
mov
test
mov
outsb
filds
inc
divps
jge
xorb
int3
ds
scas
leave
cmp
xor
cmpsl
stc
mov
push
aaa
nop
hlt
data16
mov
adc
sub
divb
sarl
fimull
cs
xchg
dec
repz
inc
inc
pop
jl
setbe
mov
inc
repz
aaa
addb
xor
inc
dec
aaa
mul
jge
icebp
addl
push
aaa
mov
push
repnz
jle
mov
fwait
jge
arpl
push
mov
push
sub
repz
push
push
push
test
fyl2x
ds
push
xor
push
pop
cld
fdivp
cmp
pop
sub
aaa
jbe
repz
sbb
fistps
lcall
cs
imul
cmp
push
and
jbe
adcl
push
xor
dec
jns
sahf
cmpsl
jge
aas
pop
es
xchg
cltd
rclb
inc
idivb
neg
fstpl
inc
sbb
leave
inc
outsl
push
push
inc
cmp
out
xchg
ficoml
dec
das
dec
sti
cmp
repz
and
in
dec
pop
mov
sahf
inc
sti
lea
jno
mov
js
jmp
dec
sub
pop
andl
pop
mov
stc
cmp
lea
fdivr
sqrtps
dec
loopne
cmp
ja
mov
jecxz
xchg
das
push
jg
dec
sbb
scas
shrb
cs
aas
push
jecxz
adc
stc
add
adc
cld
ljmp
adc
push
mov
xor
adc
mov
lds
pop
mov
jg
or
mov
dec
movsl
mov
int3
push
and
jg
jg
pop
sbb
enter
adc
fadds
adc
daa
or
mov
push
test
inc
mov
pop
orl
xchg
cmp
adcb
dec
std
adc
mov
std
xlat
popl
and
iret
adc
out
test
and
imul
and
adc
push
js
xor
push
push
lds
imul
cmp
xor
or
ja
mov
lret
dec
mov
mov
aad
lret
dec
jo
add
adc
daa
and
push
dec
clc
dec
add
push
outsl
inc
jb
popa
je
mov
or
push
pop
jl
test
pop
inc
mov
mov
movsb
sub
pop
push
ficoml
fisubl
cs
ljmp
jb
test
pop
add
or
dec
push
inc
inc
ljmp
xor
lahf
lahf
pop
sub
mov
pop
pop
addr16
dec
sub
lahf
arpl
jnp
mov
push
pop
adc
or
xor
outsl
xchg
push
or
cmpsl
jo
pop
mov
inc
lds
je
dec
dec
lahf
cmp
sub
inc
jecxz
sub
mov
xchg
push
mov
lret
in
ficoml
mov
fiaddl
dec
cmpsl
nop
ret
mov
popa
mov
xchg
mov
jb
adc
in
mov
movsb
xor
and
push
addps
aaa
data16
mov
add
xchg
test
ltr
adc
insl
inc
jo
sti
add
out
nop
or
xchg
dec
mov
sti
insb
ficomps
scas
daa
xor
cmovp
push
dec
pusha
mov
imul
and
aaa
push
bound
iret
js
daa
dec
fs
jo
xor
push
or
mov
outsl
imul
jnp
lret
mov
add
movsb
add
sub
pop
xchg
jg
lahf
inc
and
pop
push
add
test
rorb
pop
mov
adc
mov
mov
decl
adc
fiaddl
aas
sbb
bound
inc
cmp
push
cmpsl
das
pop
add
movsl
add
mov
xchg
jmp
sbb
ret
test
das
das
push
pop
sbb
subb
mull
mov
mov
xchg
rcl
addr16
arpl
mov
test
iret
xor
pushf
add
lret
insb
repz
je
adc
xchg
mov
sti
aaa
ja
lods
add
pshufw
das
mov
cmp
xchg
and
es
add
push
jge
ror
mov
add
dec
cs
push
push
sub
mov
mov
mov
mov
cs
popw
outsl
aaa
aaa
imul
mov
pop
daa
xchg
das
mov
jbe
testl
popa
mull
jb
or
das
pop
add
add
push
pop
dec
mov
mov
pop
add
push
xchg
fiadds
push
popl
loopne
inc
jle
pop
push
fmuls
and
jecxz
fidivrs
out
inc
into
inc
add
and
sub
pop
or
add
push
cmp
add
aas
rol
loopne
push
xrelease
mov
fisubrl
adc
aad
iret
add
loopne
and
xor
fcmovbe
adc
cmpl
mov
pusha
adc
outsl
xlat
pop
push
test
or
pop
pop
push
pushf
add
outsl
stos
mov
mov
xchg
mov
and
mov
mov
cmpsb
inc
inc
push
inc
daa
sbb
cs
sub
push
sbb
out
inc
cmp
mov
push
pop
pop
inc
mov
mov
dec
dec
inc
jbe
jbe
mov
bound
sub
mov
mov
pop
adc
pop
xlat
inc
mov
mov
pop
lahf
mov
xor
lock
pop
dec
add
shlb
xlat
cmp
and
testl
xor
cmp
push
adc
push
jns
je
or
pop
and
outsl
stos
mov
push
xchg
das
adc
and
dec
add
shr
jbe
es
insl
jo
je
add
addr16
aas
jo
jae
daa
pop
jno
outsl
xor
test
loope,pn
out
cmp
pop
jg
inc
dec
sub
jns
je
loope
sub
jne
or
cmp
adc
out
test
mov
mov
jae
push
mov
mov
push
cmp
add
inc
pusha
rcrl
mov
icebp
dec
dec
adc
imul
or
test
gs
dec
adc
inc
jmp
popw
fisubl
adc
push
push
pop
mov
or
pop
mov
pop
sub
ret
bound
add
sbb
jg
mov
mov
push
push
enter
adc
ret
jmp
into
dec
mov
push
mov
stos
jmp
adc
push
mov
mov
aad
daa
fwait
xchg
mov
lds
push
adc
jns
jb
clc
inc
add
iret
mov
scas
adc
push
ret
mov
andb
dec
xlat
insl
pop
rorl
call
or
ljmp
pusha
addps
loopne
pop
daa
data16
dec
int3
mov
pop
out
jb
cmp
or
aaa
adc
ds
outsl
dec
mov
push
pop
incl
call
inc
dec
push
xchg
add
add
subl
pop
das
fiadds
jg
pusha
mov
fcmovb
jbe
out
xorb
pop
add
add
push
add
jmp
add
inc
xchg
inc
pushl
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
incl
and
jge
push
je
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
jmp
dec
fsubrl
stc
jbe
push
ds
insl
pushl
test
daa
add
repz
movb
aad
arpl
push
sub
adc
or
lcall
cs
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
data16
lcall
test
mov
mov
call
cltd
test
push
push
shll
pushl
push
dec
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
outsl
arpl
jmp
test
add
mov
mov
movsb
mull
jno
addr16
push
scas
out
jmp
jb
outsb
cmp
cmc
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
and
mov
xchg
mov
and
clc
inc
mov
pop
mov
ret
xchg
xor
das
ds
das
sbb
add
ja
mov
and
push
out
out
fdivrp
pop
inc
inc
inc
push
inc
pop
and
or
aas
js
insb
cwtl
shrb
push
cmpsl
sbb
adcb
push
and
push
push
rcr
or
pop
mov
and
outsl
call
adc
outsb
mov
pop
aas
ds
push
xor
push
sbb
imul
dec
aaa
push
or
or
daa
inc
mov
jg
sbb
sub
push
mov
decb
add
sbb
lahf
std
outsb
jmp
fwait
int
push
insb
mov
cli
das
aas
inc
cmp
lahf
dec
xor
cmp
push
and
and
push
call
cmp
sar
sub
push
mov
push
inc
and
mov
push
mov
movsl
and
jmp
add
add
pop
or
mov
sbb
daa
or
jno
jecxz
lahf
dec
pop
mov
push
xchg
mov
xlat
mov
mov
cmp
xor
paddusw
push
xchg
jne
mov
out
push
pusha
push
dec
jb
xor
mov
out
push
imul
add
inc
clc
out
and
bound
or
push
jnp
push
es
insb
jns
mov
je
and
mov
mov
popa
stos
and
in
xchg
loopne
cs
adc
ljmp
and
xor
and
add
int3
and
ret
dec
inc
sahf
pusha
mov
int3
and
push
push
jle
insl
adc
insl
outsl
fs
gs
jo
jns
lods
pop
in
mov
adc
dec
add
insl
jne
rorb
push
or
loop
add
or
addr16
insb
lret
xchg
cmp
and
insl
inc
xor
jae
inc
insb
mov
jbe
fdivrs
xchg
inc
popa
imul
jle
xor
outsl
jo
test
sahf
dec
sub
sbb
xor
mov
xchg
inc
or
inc
xadd
dec
and
sti
sbb
inc
cmovo
outsb
movswl
cmpb
aas
adc
in
nop
jo
maxps
loopne
ljmp
push
inc
cpuid
add
inc
pop
dec
inc
jge
mov
imul
es
mov
sbb
lock
fwait
add
iret
push
add
and
aas
add
fstpt
or
xor
jnp
adc
insb
das
mov
mov
inc
add
lods
pop
mov
out
mov
jg
daa
les
fsub
inc
fimuls
inc
xchg
mov
insb
sub
daa
xchg
imul
push
cmp
je
push
jo
mov
in
fidivrl
push
dec
fsubl
fildll
js
jecxz
lea
add
aam
in
mov
inc
pushf
leave
mov
outsl
jle
int3
loope
mov
xor
in
les
invd
lret
lret
bound
dec
adc
lds
scas
push
push
pop
add
lods
in
mov
cmp
lahf
mov
mov
cmpsb
pop
and
fdivs
call
inc
inc
lahf
or
dec
and
fidivl
and
inc
lret
xchg
dec
bnd
or
js
and
js
iret
test
mov
int3
fsubs
rorb
int3
out
pop
or
aas
out
addr16
ss
pop
daa
add
push
int3
mov
jnp
pusha
push
insb
push
mov
inc
add
push
xor
lods
ds
pushf
pop
enter
in
pop
and
pop
int
push
in
dec
lahf
mov
inc
sub
push
mov
in
lods
lods
ja
aam
roll
aas
mov
mov
int
add
inc
hlt
outsl
add
into
ja
mov
in
lock
fiaddl
daa
lock
lcall
notl
lock
das
sbb
negl
fdivrs
mov
add
test
lahf
or
iret
xor
cmp
shrl
addr16
xchg
out
sahf
mov
cmpb
sub
mov
fiadds
int3
xchg
mov
add
add
mov
aam
lcall
push
aas
jns
pop
add
cld
and
leave
jnp
mov
rclb
xchg
pusha
ss
enter
decl
scas
push
pop
in
cltd
jo
aam
jbe,pn
outsb
ds
push
jge
rcll
sbb
sub
pop
in
dec
fldt
dec
aas
cs
ja
rcrb
nop
or
rcrb
repz
add
lods
mov
int3
dec
lahf
lods
pop
enter
cld
or
pop
enter
shlb
es
and
rcrb
or
pusha
pop
enter
lahf
mov
mov
iret
test
es
sarl
or
cmp
pop
insb
dec
push
mov
out
push
stc
lods
lods
dec
fistpll
or
bnd
movsb
nop
mov
fcomps
cmpsl
nop
idivl
hlt
or
scas
nop
or
bound
repnz
push
pop
cmpsb
mov
es
fisubs
jae
iret
mov
mov
mov
mov
repnz
enter
lock
add
mov
and
loopne
xor
dec
enter
push
pop
cmpsb
inc
loopne
int
insl
cmpl
iret
jae
cwtl
lods
call
push
cmpsl
mov
test
in
pop
cmpsb
mov
and
enter
mull
in
js
inc
push
push
cmpsb
insl
orl
sahf
outsl
dec
mov
sahf
pop
in
mov
movsb
dec
add
test
aam
jb
pop
enter
outsl
inc
ds
clc
and
xor
inc
mov
xor
iret
test
lahf
and
je
xchg
jb
outsb
and
je
test
push
aam
enter
push
les
clc
pop
js
fadd
and
cmp
xorps
or
imul
push
js
fsubs
cmpsl
or
in
loopne
nop
or
int3
loopne
loopne
repz
cs
pop
push
and
xor
addr16
jns
mov
cmpsl
jg
cmpsb
fs
dec
lahf
or
addr16
jns
in
cmpsl
fs
mov
addr16
dec
jae
push
roll
mov
in
ficompl
push
sub
out
fiaddl
cmpsl
loopne
iret
test
insb
sbb
das
in
lods
cmpsl
pop
sbb
mov
test
rcl
aas
inc
push
fsubs
dec
enter
fistl
sub
lods
sub
cmpsl
jg
fstp
repz
nop
pop
daa
addr16
stos
fstl
jns
in
shrb
or
ja
or
out
clc
or
sbb
pop
data16
ja
out
xchg
pop
pop
jg
and
faddl
dec
inc
clc
dec
in
push
jbe
dec
pushf
fsubrl
and
rcr
cs
fstl
cmpsl
pushf
js
imulb
lahf
js
inc
or
mov
inc
fstl
fs
mov
outsl
insl
sbbl
sahf
int3
xchg
daa
movsb
lahf
int3
push
add
ja
lock
test
hlt
or
enter
push
lock
in
test
sarl
fimuls
subl
xchg
nop
inc
jl
sar
ficomps
adc
push
xlat
lods
fdivrp
push
jmp
pop
pop
sbb
or
inc
fmull
out
cwtl
sub
cmp
cmp
icebp
push
push
fists
mov
jg
int3
rcr
and
inc
movsb
pusha
mov
ja
rolb
lea
jl
loopne
adc
rclb
aam
movsb
stc
pushl
shl
loopne
pusha
insl
adc
jnp
repnz
inc
pusha
je
test
cwtl
push
pop
and
shr
pusha
jg
repnz
inc
nop
enter
loopne
lahf
nop
inc
enter
cs
cmp
or
inc
mov
jl
jg
in
insb
daa
addr16
mov
inc
ja
sarb
adc
mov
loopne,pt
outsl
push
ds
sbb
jmp
test
loop
dec
sahf
sub
lahf
fs
mov
andb
add
mov
inc
sahf
or
rorb
mov
jge
adc
and
lahf
mov
ja
in
and
repnz
pusha
jo
nop
out
pop
push
adc
mov
mov
dec
lahf
nop
out
push
mov
dec
mov
sahf
adc
inc
jge
in
lock
in
lds
push
push
xchg
inc
imulb
aas
mov
and
js
in
fdivs
mov
mov
rcr
adc
lock
lcall
and
push
add
movsb
das
fmuls
stc
xchg
clc
push
fs
or
in
clc
outsl
add
pop
push
lcall
aad
js
bound
mov
iret
add
iret
or
sbb
out
or
out
jmp
into
adc
daa
addr16
insb
daa
mov
add
mov
pushf
daa
lods
in
xchg
mov
xor
jmp
rcll
scas
xlat
repz
call
ljmp
push
push
daa
cwtl
nop
push
enter
xchg
rcl
dec
incl
fstp
add
outsl
repnz
mov
outsl
dec
in
and
cld
xlat
adcb
data16
out
dec
dec
call
mov
aas
addr16
xor
aas
mov
out
lahf
outsl
ja
ja
daa
sbb
xchg
jmp
dec
inc
inc
dec
scas
in
cmp
dec
scas
in
sub
scas
in
scas
and
add
dec
test
pop
enter
pop
out
ljmp
icebp
dec
repz
clc
adc
jl
iret
jnp
push
push
xor
lock
call
ror
mov
push
js
ja
ja
or
sahf
push
inc
out
ds
push
jns
jns
js
or
cmp
out
test
push
pop
loopne
jmp
fisubs
scas
ljmp
adc
xchg
pushf
in
fsub
cltd
in
inc
cld
push
ss
popa
and
inc
cmpsl
jns
int
fildl
and
nop
leave
sarl
add
sbb
pop
mov
inc
in
jge
jnp
enter
out
cld
inc
mov
add
jmp
inc
nop
pusha
jg
add
ja
pop
leave
adc
xchg
pop
cmp
outsl
movsb
add
sbb
nop
adc
inc
inc
shr
loopne
ret
xchg
cmp
in
in
outsl
add
push
xor
pushf
inc
inc
mov
sub
sarl
pushf
outsl
leave
xchg
or
fistpll
mov
cmp
inc
test
cmp
mov
cmp
xchg
pop
scas
or
add
outsl
leave
push
lock
out
int3
xchg
xor
fstp
xor
and
add
call
push
mov
bound
fsubs
ljmp
add
lods
xor
xor
out
out
and
outsl
add
sub
loop
sub
sub
sbb
js
dec
sahf
out
aaa
mov
cwtl
add
dec
sahf
out
mov
repz
adc
test
sub
aaa
notl
sub
lahf
mov
mov
or
out
push
xor
ja
add
sub
loopne
mov
repnz
cld
lock
ficomps
icebp
and
add
pop
leave
and
fisubs
add
xlat
mov
fdivrp
and
test
sbb
add
or
out
xor
sbb
roll
xlat
scas
sbb
and
scas
in
xchg
push
add
outsl
xchg
idiv
xchg
or
fisubs
addb
mov
aaa
jmp
call
loopne
pop
jne
out
push
or
imulb
mov
test
in
jg
push
jo
js
dec
dec
pop
loopne
inc
repz
adcl
pop
leave
xor
loopne
add
js
xchg
push
es
cmp
filds
hlt
jbe
fimull
adc
outsl
push
push
outsl
mov
cmp
jg
test
push
pop
pusha
xchg
daa
xchg
mov
push
inc
cmc
scas
ljmp
cwtl
cmc
scas
data16
jbe
testb
xor
push
movsb
or
jmp
cwtl
loope
or
sub
push
sbb
ss
or
xor
scas
add
sbb
stos
outsb
xlat
or
dec
shl
or
testl
in
cmc
pop
add
rorb
cmc
mov
add
and
pop
leave
fwait
push
mov
mov
lock
divb
mov
dec
sub
add
lock
adc
addr16
add
dec
aaa
sub
outsl
addr16
sub
add
cmpsl
adc
in
testl
jecxz
xchg
sbb
pop
les
daa
hlt
shrb
clc
ja
loop
insb
cmp
xor
jg
addr16
or
mov
cs
je
add
sub
mov
clc
push
in
pop
leave
mov
push
mov
das
outsl
add
aaa
pop
in
mov
clc
cmp
pop
dec
pop
cli
aaa
enter
js
pop
stc
aaa
add
and
cs
movsb
push
in
mov
popa
imul
iret
fsubl
andb
add
rol
loopne
insb
cli
scas
in
data16
or
popa
inc
call
int
mov
push
movsb
adc
clc
sti
fsubrl
repz
insb
sbb
outsl
mov
mov
lock
aas
add
decb
cli
cmpsl
bound
aaa
or
or
ss
inc
xchg
sti
push
sti
outsl
add
aaa
imul
movsb
mov
fwait
mov
rolb
add
add
scas
in
js
add
cld
shll
cld
pop
and
mov
add
jl
out
add
sbb
sub
add
adc
inc
or
out
pop
sar
out
les
or
add
ss
cli
std
addr16
push
mov
aas
addr16
daa
mov
mov
movsb
hlt
fs
in
clc
es
addr16
push
add
mov
dec
divl
or
xor
test
incb
push
incb
imul
movsb
out
pop
add
or
aaa
dec
mov
nop
out
sahf
rcl
lock
mov
filds
inc
lcall
fdivl
test
clc
out
push
mov
das
clc
ja
push
call
inc
decl
shrl
stos
xchg
rolb
push
dec
and
shrl
jae
xchg
jns
xchg
cmp
sarl
dec
outsb
xchg
mov
loope
mov
pop
je
xor
out
out
mov
iret
je
mulb
mov
out
sahf
jnp
shl
pop
mov
out
cmp
rcrl
xor
ja
push
fmuls
xor
imul
nop
insb
iret
repz
or
stos
ficompl
sbb
popf
out
jns
cli
es
xchg
push
jg
repz
mov
repz
xchg
sub
iret
repz
ret
repnz
inc
cmp
out
lea
xchg
pop
xchg
jns
iret
repz
push
xchg
mov
repz
out
push
cwtl
inc
xchg
cmp
ds
mov
add
xchg
push
andb
es
repz
inc
pushf
push
sahf
out
mov
popf
dec
ljmp
pop
mov
pusha
lahf
cmp
out
sahf
roll
mov
iret
repz
in
mov
out
jmp
mov
lahf
out
mov
movsb
out
sahf
out
movsl
push
test
int
cmpsb
inc
imul
data16
test
repz
out
call
out
lcall
aam
repz
or
jns
out
xor
in
pop
lods
nop
fcomps
scas
dec
repz
push
fdiv
xor
xchg
repnz
insb
lds
mov
repz
popa
lods
call
sahf
out
cmp
sti
outsl
mov
mov
dec
repz
sbb
sahf
cmpsl
stc
inc
mov
mov
sub
dec
in
mov
int
imul
push
mov
ds
mov
mov
cmpsl
stc
cmp
mov
sahf
out
cmp
fstpl
mov
repz
or
inc
mov
jns
cmpsl
stc
sub
push
mov
cld
out
ds
repz
ret
or
pop
push
xchg
int
stc
cmp
mov
lock
popf
imul
push
mov
repz
addr16
cmp
je
frstor
lret
lret
inc
imul
loop
int3
jle
repz
repz
popa
xchg
shr
jl
out
iret
xchg
mov
stc
cmp
pop
mov
repz
iret
vpshrdvw
mov
out
push
lock
jl
hlt
int
jns
inc
aad
push
mov
lahf
out
ds
dec
js
or
sahf
out
xor
loope
fnstenv
jl
fisubl
fisubrl
out
jae
jmp
fsubrl
fcompl
rcr
imulb
fistps
mov
mov
cmp
inc
jmp
in
in
ds
mov
or
xor
rep
movsl
cmc
data16
insb
inc
testb
pop
sti
lds
int
cld
or
xchg
xchg
mov
push
dec
add
xchg
add
adc
lahf
int3
nop
push
inc
xchg
or
or
push
aas
aam
jb
in
sqrtps
sub
sarb
scas
sub
inc
push
jns
adcl
cmp
call
and
insl
shrb
xchg
pop
sarl
xchg
aas
pop
enter
xchg
sarb
fs
fcomps
push
test
jmp
jbe
popf
mov
int3
loopne
repnz
mov
fcomps
aas
packuswb
inc
pop
jbe
xchg
sbb
dec
sub
xor
mov
fbld
mov
lahf
roll
cmp
push
push
je
shl
mov
pop
inc
das
and
and
lcall
adc
push
or
ss
and
jmp
mov
inc
roll
aas
xchg
dec
dec
data16
ficoml
jg
dec
aas
in
xlat
cmc
fimull
outsb
ss
push
inc
pop
pop
jne
sbb
jo
daa
movq
push
pop
mov
ja
nop
pop
add
adc
rclb
jne
inc
pop
or
cmp
pop
push
nop
pop
ret
ffreep
adc
and
jnp
cmpsl
loopne
mov
daa
roll
ja
xchg
ja
js
dec
dec
and
inc
inc
or
les
fbld
jns
adc
sbb
pop
cmp
push
lea
jl
pop
jo
fs
jne
je
scas
xorb
les
sbbl
aaa
add
xchg
sub
inc
leave
cmp
or
pop
inc
shlb
lods
lahf
push
aas
cmp
mov
adc
rorb
xchg
add
daa
and
add
lahf
icebp
xchg
xchg
xchg
mov
addr16
jmp
xchg
fbstp
xchg
fistps
in
leave
inc
pop
pusha
xchg
imul
inc
jb
xchg
cltd
mov
or
xchg
pop
jb
push
loop
dec
loopne
js
mov
adc
daa
repnz
cmp
pop
and
fwait
in
inc
mov
push
and
data16
mov
mov
rcrb
sub
divb
push
xchg
mov
outsb
sbbl
dec
cs
aam
adc
dec
and
or
addr16
mov
stc
xchg
xorl
out
or
jo
scas
pusha
daa
cmpb
xchg
daa
mov
push
outsl
lods
aaa
add
add
push
sub
fadds
rorl
inc
imull
cmp
in
add
sbb
inc
iret
cld
push
sub
add
jg
pop
jl
add
push
leave
enter
scas
jns
cmpsb
in
add
add
mov
add
repnz
sub
sbb
daa
cmp
sbb
cmp
pop
mov
fsubrs
push
mov
mov
mov
jns
enter
daa
push
dec
sahf
pop
mov
cmpsl
push
int3
jbe
adc
mov
adc
cmp
mov
add
in
push
jb
leave
leave
add
roll
call
daa
movsb
aas
data16
cmp
sub
pop
pop
or
adc
decl
out
mov
mov
pop
mov
add
add
insl
adc
fcoml
lahf
mov
lods
mov
xchg
sahf
pushf
pushf
pop
mov
pushf
in
cmp
sbb
in
xchg
in
cmpsl
hlt
cld
xchg
sbb
repnz
or
adc
insb
mov
pop
and
push
lea
outsb
pop
dec
xorps
xlat
cs
out
rolb
mov
xchg
mov
cmp
cmp
mov
push
add
mov
push
or
or
cmp
cmp
or
or
or
sbb
dec
and
push
daa
mov
ja
daa
push
pop
pusha
punpckhbw
pop
outsb
daa
jnp
pop
sahf
mov
out
mov
mov
cmp
jns
ret
add
daa
cmp
loopne
cmp
dec
sub
cwtl
push
xchg
mov
mov
test
fs
push
insb
scas
andb
inc
dec
xor
in
cmpsl
in
adc
cmp
cmp
or
fisttps
sbb
cmpsl
mov
mov
loop
sub
testl
enter
nop
push
nop
sub
test
cmp
dec
nop
out
sbb
popa
aam
test
adc
and
push
push
leave
push
pop
int
mov
xor
sbb
cmpsl
mov
out
pushf
ret
add
add
insb
jns
fistl
notl
jnp
pusha
aas
mov
inc
filds
pop
jns
mov
cmp
stos
dec
jb
sub
addr16
push
dec
addr16
add
leave
inc
repnz
ja
pop
roll
mov
jb
sarl
add
adc
push
repnz
fdivr
sbb
jmp
cltd
xchg
push
add
cmp
inc
sbb
xchg
das
jb
mov
pop
push
dec
and
loope
jg
incl
sbb
xchg
xchg
xchg
sbb
push
pop
iret
daa
mov
fisubl
loop
xlat
out
push
jg
xchg
pop
or
mov
xchg
das
xchg
aaa
xchg
sub
push
sbb
and
add
pop
test
pop
and
sets
sbb
dec
cmp
lock
and
lcall
rclb
push
into
je
xor
out
scas
daa
jns
jge
mov
mov
movsb
xchg
and
sbb
mov
pushf
or
repz
scas
and
mov
xchg
push
testl
sbb
push
addr16
jle
xchg
pop
ja
mov
xchg
mov
sub
xchg
fsubl
sub
addr16
dec
jo
stos
pop
iret
or
dec
push
mov
cmp
mov
test
pop
cmp
and
je
pop
xchg
pop
inc
dec
cs
push
addb
scas
mov
pop
in
rcll
hlt
cmp
jns
push
ja
pop
or
sbb
xor
mov
xchg
pushf
dec
dec
lds
xchg
and
jp
mov
push
scas
mov
fstpl
ja
iret
in
xchg
or
in
ror
enter
sbb
pop
movsbl
mov
pop
push
cmpsl
push
pushf
mulb
jns
jb
incl
out
xor
push
loop
mov
mov
pop
and
pushf
cmp
pop
ja
xchg
xchg
and
andl
mov
ja
fidivl
iret
add
mov
pop
in
in
pop
cltd
adc
cmp
jb
leave
add
leave
rclb
into
mov
cltd
pmaxsw
inc
rep
push
fisttps
mov
and
fidivrs
fbstp
mov
es
and
xchg
dec
pop
sbb
mov
push
add
push
jb
inc
jmp
adc
clc
mov
push
fdivrs
xchg
adc
inc
es
lcall
pushf
add
jno
aas
pushf
es
lret
inc
push
leave
xchg
shlb
shlb
movb
es
cmpsl
cmp
sbb
push
daa
cmp
cmp
and
cwtl
mov
je
daa
lahf
ret
inc
sahf
xlat
popf
xchg
lret
shll
push
add
mov
add
int3
icebp
xchg
into
setge
imul
popf
enter
aaa
inc
xchg
inc
xchg
push
scas
adc
sub
ja
sub
pop
push
sub
sbb
dec
ja
jg
jmp
mov
daa
mov
pop
xchg
push
inc
outsl
ljmp
setae
sbb
mov
les
shl
inc
repnz
fdivl
pop
leave
push
ljmp
cmp
sub
push
popl
push
dec
adc
cmp
inc
ds
js
jmp
push
out
mov
sahf
pushf
je
orl
sahf
ja
pop
fucomi
fs
pslld
testb
mov
ja
lahf
pop
push
lahf
fsubrp
ss
lahf
xor
cmp
inc
push
add
dec
push
lahf
or
add
mov
add
add
leave
leave
mov
sbb
out
push
imull
daa
test
mov
cvtpi2ps
addr16
mov
and
pop
jo
xchg
ljmp
insl
aaa
outsl
or
xchg
mov
inc
iret
ljmp
ss
mov
mov
pushl
jge
cmp
mov
mov
cmp
leave
mov
incl
mov
sub
cs
out
aas
ja
cmp
mov
ja
push
add
pop
stos
jae
outsl
cmpsl
push
je
cmp
in
outsb
fstpl
in
in
push
pushf
cmp
cmc
mov
std
pop
ja
inc
leave
enter
sub
pop
repz
cmp
add
add
cmp
leave
push
bound
insl
js
pushf
out
das
orl
mul
in
mov
das
movsb
push
or
mov
push
vmovups
iret
enter
adc
mov
daa
xchg
cs
inc
fwait
in
addr16
movsb
fbld
in
ss
icebp
and
mov
leave
adc
leave
xchg
pushf
movsb
ljmp
or
outsb
pop
mov
xorb
lock
jg
insb
jno
xchg
movsb
movsl
das
or
cmpsl
adc
pop
or
mov
mov
xor
push
and
movsl
addr16
xor
push
insb
ret
mov
xchg
ret
movsl
push
mov
sbb
in
movsl
cmc
movsl
std
xchg
xor
and
loopne
mov
cmpsb
fistpll
xor
add
xor
pop
add
or
addr16
xor
shrl
mov
add
xor
sub
add
add
lahf
leave
xchg
xor
cmpsb
mov
popa
pop
or
sub
ficompl
loop
ljmp
dec
add
fisttps
push
cmpsl
repnz
mov
cmp
push
pop
add
or
fwait
sub
pop
aaa
int
mov
push
lcall
leave
repz
mov
into
jae
ljmp
xor
js
rcl
incl
test
repnz
test
or
pop
sar
outsb
mov
xor
xchg
addr16
pop
ja
mov
mov
mov
push
add
movl
mov
test
test
sbb
js
ds
test
cmp
popa
push
add
movb
push
xchg
or
imul
xlat
stos
adcl
test
pop
push
add
adc
pop
leave
pushf
aaa
jb
jmp
aaa
push
daa
dec
ja
es
inc
or
ss
fmull
into
mov
iret
les
pop
leave
and
dec
stos
ss
fwait
in
add
je
fs
inc
sub
jne
inc
mov
outsl
in
mov
jle
xchg
mov
push
bnd
xchg
xchg
sbb
out
jbe
sarl
push
add
mov
loope
add
iret
push
icebp
stc
or
lods
jns
ficomps
or
or
adc
or
jns
out
or
dec
sahf
out
adc
adc
dec
sahf
out
adc
adc
sahf
popa
push
imul
dec
ds
aaa
xchg
push
insl
in
sub
lods
loop
repnz
mov
add
push
dec
cmp
jb
inc
adc
ud1
icebp
dec
lods
push
xchg
mov
test
mov
sbb
hlt
in
roll
adc
aaa
dec
ja
cmp
inc
scas
mov
dec
ja
aas
jo
xchg
mov
xorb
imul
fstpl
seto
xchg
mov
pop
out
popf
out
mov
push
rcpps
add
xor
jns
aas
pop
adc
sbb
lahf
jp
ljmp
pop
or
pop
or
push
jo
daa
iret
jmp
adc
ja
enter
xchg
cpuid
and
cmp
and
daa
jo
pop
pop
push
scas
sbb
outsl
pop
fdivrs
push
add
out
or
pushf
pushf
cmp
add
mov
and
jb
pop
cwtl
add
jbe
jb
addr16
jge
imulb
push
or
push
jmp
leave
xor
or
rcrb
cmp
gs
mov
pop
pusha
fs
mov
or
add
add
jns
mov
cwtl
jnp
aas
lock
add
out
cmp
in
mov
push
add
iret
jmp
mov
push
mov
in
repz
scas
or
mov
push
idivl
in
mov
sti
or
cmp
repz
add
add
iret
push
push
pop
arpl
jno
iret
repz
orb
or
fwait
lret
add
cmp
int
ja
daa
repnz
mov
mov
ja
pushf
movsb
add
in
daa
sbb
rorb
filds
mov
mov
daa
in
adc
fidivl
jl
mov
fnstsw
xchg
dec
jmp
fstl
adc
fsubrl
incl
fldt
jns
aas
movsb
mov
xchg
xchg
xchg
mov
and
inc
aas
iret
mov
pop
xchg
inc
mov
dec
outsb
xchg
data16
mov
adc
cmp
jns
and
mov
sbb
in
xchg
dec
iret
jno
jae
sarl
addr16
lahf
jns
out
mov
mov
mov
out
ret
in
cmp
int3
inc
repnz
mov
sub
sub
add
repz
popf
push
dec
dec
push
or
popa
mov
jl
fs
adc
in
add
mov
mov
enter
sahf
test
int
xor
add
rolb
inc
fisubs
mov
cwtl
inc
fisubrs
aad
and
or
fwait
add
jo
daa
fstpl
dec
push
cmp
lods
cmp
pop
pop
arpl
jns
mov
iret
or
mov
lea
filds
adcl
das
leave
outsb
xchg
xchg
xchg
mov
mov
out
loope
repnz
mov
mov
xchg
ja
pushf
pushf
pop
pop
fs
rcrb
xchg
lahf
mov
into
xor
scas
mov
outsb
adc
or
rclb
rolb
mov
xchg
cmp
std
pop
mov
ja
outsl
popa
mov
enter
push
mov
repz
push
add
add
leave
lret
pop
hlt
decl
mov
push
inc
push
and
jl
add
cmp
jns
dec
add
jle
daa
pop
leave
jae
test
mov
test
mov
xchg
mov
mov
ficoml
inc
cmpsl
inc
shrl
dec
pop
mov
mov
fcmove
push
cmpsl
xchg
jbe
rcrb
mov
or
xchg
out
call
xchg
pop
incb
pushf
push
sysenter
popf
out
aas
add
push
pop
out
daa
fisttpll
add
cs
or
cmp
imul
orl
insl
daa
xchg
das
femms
mov
cmp
mov
add
xchg
inc
xor
in
jns
repz
add
loop
enter
adc
pop
mov
movntps
scas
sub
pop
jg
repnz
movq
ja
xchg
fsubrl
xchg
out
lods
mov
leave
repz
call
jae
aas
cli
lahf
add
jnp
push
adc
push
setno
or
mov
js
mov
daa
adc
mov
fistps
mov
push
xchg
push
fists
inc
das
lcall
int
mov
fildll
jo
cmovae
divb
mov
jae
jle
imull
or
dec
mov
out
pop
xor
fists
mov
paddb
add
xadd
xor
cs
negb
mov
pushf
mov
dec
push
jb
jne
sub
push
pop
sbbb
sahf
fisttpl
mov
mov
mov
sahf
add
int
aad
sahf
pushf
pop
and
clc
add
or
dec
mov
push
pop
dec
jne
jbe
push
push
iret
pop
daa
data16
xchg
out
pop
outsb
add
add
xchg
or
in
jns
mov
loopne
mov
pop
fsts
mov
cld
add
in
fwait
decl
daa
rcrb
fbstp
xchg
jb
mov
jb
dec
sahf
ja
xchg
add
in
movsl
lods
lgs
lds
xchg
call
pop
loope
mov
push
mov
and
dec
xchg
stos
test
fmull
pop
outsb
jbe
jle
cmp
out
outsl
xchg
jbe
test
xchg
insl
and
dec
in
in
pop
and
leave
hlt
add
ret
out
inc
pop
push
daa
daa
ret
in
popf
mov
push
ja
mov
sub
test
popf
xlat
insl
lar
lea
dec
sahf
add
push
scas
movsl
fiadds
pushf
cmp
or
sbb
mov
and
fisttpll
out
xchg
out
mov
ja
ret
inc
cvtps2pi
aas
ret
incl
mov
jae
cmp
jl
mov
in
push
mov
mov
jb
jb
shr
fisubrl
jns
jb
pop
ds
push
push
aaa
jb
les
iret
repz
out
push
add
pop
add
ds
jge
jb
sub
rcr
in
jbe
xlat
fsub
mov
iret
and
mov
lds
stc
adc
adc
adcb
sbb
push
iret
jae
popa
imul
cmp
insl
xchg
jne
pushf
dec
ds
or
rclb
in
outsb
jae
ret
out
into
add
in
in
in
in
cli
pmovmskb
in
in
add
aas
sbb
mull
sarl
sahf
or
cmp
adc
out
testb
cmp
push
jae
or
push
pop
jp
xchg
call
mov
push
fisubs
call
es
fdiv
loopne
add
push
scas
mov
clc
pop
push
das
add
or
in
divb
das
push
ja
and
loop
jl
sub
inc
pop
push
push
test
adc
sbb
dec
cmpsl
mov
daa
daa
out
push
add
mov
xchg
push
jg
adc
into
repz
pop
cmp
pop
or
in
shr
dec
cmovle
push
data16
push
femms
enter
repnz
negl
add
push
add
repz
iret
ss
xchg
int
call
adcb
mov
push
xlat
push
mov
dec
lods
daa
mov
repnz
add
int
mov
mov
xor
cmp
ss
mov
adc
test
lea
pop
lgdtl
movaps
leave
incl
mov
out
out
leave
insb
fwait
dec
cmp
add
push
addr16
pop
jo
setg
cmpsl
imul
pop
jo
mov
pop
pop
cmp
icebp
fs
ljmp
xchg
push
or
jne
daa
cmp
outsl
inc
pop
jns
addr16
push
popw
out
sahf
out
or
and
sahf
or
pop
and
enter
enter
jae
out
por
jmp
add
jno
stc
pop
pop
push
lret
dec
sub
cmpsl
outsb
jmp
cs
ss
clts
setnp
xchg
or
and
imul
push
add
adc
xor
cmpsl
xor
repnz
inc
pop
mov
mov
sbb
mov
mov
in
movsb
xlat
lret
scas
pop
daa
or
pop
testl
pop
call
and
push
inc
psllq
in
imul
add
add
mov
xchg
mov
inc
pushf
lods
pop
push
or
repz
iret
or
iret
push
out
psubd
add
int
adc
push
sbb
repz
repz
adc
iret
push
inc
pop
push
sbb
iret
repz
push
cmp
prefetcht1
push
adc
adc
adc
cmp
cmp
adc
push
or
mov
inc
pop
dec
jle
add
int
inc
push
push
push
mov
push
inc
adc
nop
rcr
and
cmpsl
fcompl
push
daa
in
out
pushf
sbb
mul
jmp
mov
dec
into
lock
inc
into
cmpsl
adc
imul
daa
hlt
mov
in
shll
mov
sub
in
jmp
xor
incl
rcrb
into
pop
int
pop
mov
push
dec
outsl
pop
mov
mov
pop
leave
pop
cltd
inc
das
xchg
pop
push
iret
out
sahf
out
pop
push
outsl
das
push
add
add
sahf
out
aas
add
iret
xchg
mov
sbb
nop
jb
inc
jmp
mov
hlt
scas
and
mov
pop
repnz
push
mov
daa
rolb
mov
nop
mov
dec
fisubl
addr16
sbb
cmp
pop
int
ja
scas
and
adc
ja
pop
and
add
shl
mov
xchg
add
mov
pop
jb
cmpsb
call
xchg
sahf
ja
popa
insb
push
add
xlat
popf
pop
pop
push
xchg
add
jns
mov
rorl
mov
pop
ljmp
cli
add
or
adc
mov
mov
fistps
shlb
pop
push
pop
dec
sahf
xlat
popf
sub
xor
or
inc
repz
repz
or
or
mov
iret
adc
inc
pop
sarb
sbb
push
add
xor
pop
daa
mov
xchg
into
fistps
movsb
dec
ror
out
rclb
jb
rolb
add
mov
out
pusha
popa
mov
and
or
shrl
push
add
ror
cmp
push
add
push
add
es
fistps
bound
sub
ds
push
or
push
testl
rcrl
bound
daa
mov
mov
mov
cmp
fdivrs
mov
push
bound
and
aam
push
aam
aam
leave
leave
inc
mov
push
pushf
out
aam
mov
lahf
xchg
aam
xchg
cmp
pop
mov
addr16
shr
iret
pop
aad
data16
fmull
push
mov
cltd
push
arpl
jb
shll
mov
jb
pop
xchg
shr
ja
mov
in
xchg
shll
pop
pop
push
and
xchg
add
or
loopne
das
pop
das
sbb
mov
daa
push
or
hlt
xchg
push
gs
cmpsl
out
loop
cmp
pop
pusha
or
roll
inc
icebp
in
jbe
jnp
sbb
push
cmpsl
mov
gs
out
pop
pop
ja
ja
push
add
lahf
ficompl
push
xchg
pop
aaa
jns
pop
add
jns
sahf
or
repnz
add
jecxz
lar
das
or
push
data16
xchg
iret
adc
sub
xor
pop
push
push
cmp
pop
leave
jae
mov
jo
pop
inc
insl
mull
xchg
cs
dec
dec
fwait
xor
inc
push
inc
dec
xlat
xlat
jg
aas
outsb
jbe
cmp
fdivrs
push
mov
pxor
push
xchg
add
sahf
outsb
repnz
clts
push
pop
dec
dec
dec
dec
push
in
jns
mov
cmpsb
fdivrs
test
leave
mov
pop
push
mov
addr16
ljmp
add
adc
push
ret
jmp
nop
push
fstpt
outsl
inc
scas
push
pop
dec
daa
loopne
xchg
fstps
push
aas
in
mov
fstps
invd
jnp
fwait
cmp
xchg
or
fisttpl
cmpsl
fld
psubusb
push
repnz
fnstenv
and
cmp
popl
add
adc
stos
inc
add
add
cmp
add
cs
push
push
dec
pop
jmp
psadbw
cmp
shll
cmp
sbb
jae
daa
dec
outsl
pop
lods
jae
or
call
push
ja
jnp
das
pop
sbb
lahf
nop
fisubrl
cmpsb
ljmp
xchg
cmp
fnsave
mov
rcr
sbb
push
or
imul
jo
pop
pop
push
fldt
fistpl
pop
pop
or
movd
leave
mov
ja
xchg
mov
inc
dec
mull
daa
xchg
xchg
pushf
lret
push
fmull
in
fisttps
fcoml
fsubrl
push
faddl
rorb
pop
inc
popf
fsubrl
pop
xchg
push
pop
sahf
xlat
popf
out
add
imul
in
push
jns
add
add
dec
dec
add
or
aaa
jns
out
mov
xchg
cmp
dec
or
cltd
adc
mov
inc
adc
in
in
in
aam
add
mov
divl
fstpl
push
add
push
jbe
fsub
mov
push
mov
out
xchg
dec
xor
push
dec
aaa
aad
jae
paddusw
fildl
pop
fisttpl
jecxz
fldt
jmp
das
repz
sti
pop
or
cmp
stc
add
fwait
mov
in
lds
push
btr
mov
out
ret
adc
adc
jns
dec
aaa
movups
or
jae
cmp
adc
pop
and
leave
jmp
iret
sbb
nopl
cmp
pop
dec
mov
repnz
and
dec
scas
fwait
cmp
jae
es
sub
cmp
repz
mov
xchg
sub
cmp
repz
sub
sub
iret
cs
mov
adc
lret
fisubrs
or
sub
adc
ss
xchg
cmpl
inc
pop
shl
in
dec
in
outsl
cld
sbb
scas
les
push
or
inc
push
add
das
pop
adc
sbb
fbld
lods
jmp
pop
repnz
push
leave
inc
dec
xchg
xchg
xchg
mov
ds
add
xchg
jo
loopne
xlat
cltd
jo
leave
in
pop
movups
jmp
pop
push
cmpsl
pop
pop
add
mov
out
pop
push
or
cs
cmp
repz
inc
cmovg
popf
cmp
ja
adc
scas
adc
iret
repz
rclb
fstl
stc
cmp
repz
loope
jns
cmpsl
sbb
sbb
sahf
out
sahf
sub
jns
out
dec
and
push
and
andb
jns
and
enter
ds
ret
loope
loope
cmp
fucom
ljmp
sahf
out
adc
das
push
xor
cmp
jnp
ss
inc
loop
dec
loop
push
loop
lods
cmp
cmp
mov
loop
out
sahf
out
daa
mov
cltd
and
movsb
and
and
jns
and
and
out
sahf
out
out
icebp
sbb
cld
sbb
sbb
iret
repz
sbb
adc
iret
repz
dec
dec
dec
push
repz
repz
pop
dec
push
scas
fwait
cmp
ja
test
push
dec
xchg
mov
push
jle
pop
dec
repz
pushf
fmull
dec
adc
cmpsl
iret
pop
mov
das
int3
dec
xlat
jns
out
push
loop
in
mov
jecxz
in
push
mov
outsl
bound
jno
in
sahf
xchg
pop
cmove
insl
mov
jne
ds
jns
pop
push
pop
lea
lcall
or
jns
into
or
iret
repz
notb
out
in
and
push
adc
adc
adc
out
xor
cmp
dec
out
sahf
out
push
sbb
sahf
out
sahf
push
ja
sbbl
mov
xchg
and
and
in
jbe
fldcw
or
shl
cld
das
pop
out
cmp
repz
adc
iret
repz
xor
cmp
repz
adc
dec
bswap
repz
pop
out
or
repz
or
jge
cmp
repz
pop
fs
xchg
outsl
daa
dec
aaa
cmovo
push
sbb
pusha
je
repz
sti
out
add
pmaxub
out
push
add
adc
out
sahf
xlat
insl
pop
wbinvd
push
sub
xor
cmp
aaa
cmp
enter
rcpps
pop
out
repnz
arpl
jae
fmull
adc
test
lea
lahf
sbb
jns
scas
sbb
aad
push
adc
mov
sub
call
mov
rdtsc
push
add
dec
inc
cmovns
pop
cmp
cmp
popa
imul
orl
daa
iret
cmp
xadd
dec
dec
enter
dec
dec
dec
dec
call
xor
xor
or
pop
sbb
xor
iret
push
inc
aaa
inc
jmp
out
repnz
fstpl
and
out
jbe
pop
jg
add
dec
xchg
pop
mov
jns
mov
or
in
daa
leave
push
push
rcr
dec
jb
jns
loope
adc
icebp
psubw
ljmp
inc
aaa
and
data16
ljmp
push
dec
push
add
cmp
repz
push
jne
cmp
jae
orb
ja
mov
scas
jns
out
push
mov
dec
sahf
out
adc
sti
clts
jmp
mov
cltd
aas
adc
pop
sbb
daa
pop
xor
out
sbb
out
jns
pop
imul
xchg
in
dec
sahf
and
dec
sahf
out
and
leave
in
in
in
psubb
in
sahf
out
fs
sbb
das
dec
icebp
in
das
cmp
outsl
xor
out
stos
ret
js
add
iret
add
repz
push
add
add
scas
push
mov
sahf
rorl
mov
aam
jb
mov
or
clc
xchg
xchg
cltd
pusha
rorb
or
cmp
xchg
sbb
adc
xor
cmp
iret
jae
push
inc
dec
sbb
mov
sbb
pop
sbb
jns
leave
pusha
nopl
test
jo
and
mov
mov
lock
in
iret
xlat
fucomip
outsl
and
dec
out
out
in
cli
das
add
sbb
fdivrs
andl
pop
rdpmc
ds
sahf
pushf
pushf
mov
outsl
out
aaa
stc
hlt
int3
fistpll
mov
push
fucom
jns
or
in
jbe
jns
mov
ficomps
jmp
adc
in
in
lret
or
pop
push
push
push
and
leave
cmp
lock
sbb
sbb
sub
out
sbb
sbb
fucom
push
mov
pop
push
jbe
jg
lahf
mov
mov
outsb
mov
fists
pop
sub
sub
mov
jg
sub
push
sub
sahf
push
cs
das
stos
xor
out
mov
shlb
ja
cmp
xor
xor
in
sahf
dec
repz
ss
aaa
add
cmp
jmp
jnp
cmp
aas
rcrb
int
fdivrs
jecxz
loopne
jns
out
stc
scas
add
jns
out
cmovae
inc
and
inc
xor
dec
das
jmp
out
jbe
dec
bound
adc
pop
push
cmp
pop
push
call
add
dec
decb
stc
pop
dec
jg
es
jge
loopne
dec
and
rep
mov
mov
rorl
int3
add
jcxz
xlat
outsl
push
push
mov
pop
cli
add
cmp
adc
or
jns
out
inc
push
dec
setle
jns
pop
adc
je
cmp
cmp
mov
adc
adc
movsb
scas
mov
pushf
fmull
pand
repz
adc
or
in
jbe
and
inc
adc
repz
xorb
enter
add
pop
cmpl
jns
outsb
repnz
add
add
testb
or
push
pop
out
in
dec
and
sub
iret
repz
or
fcmovne
repz
jno
jl
adc
es
xrelease
xchg
unpckhps
iret
repz
popf
push
test
mov
sahf
out
cmp
leave
cs
sbb
iret
cmp
ljmp
int3
adc
jns
push
and
insl
jns
out
and
sub
repz
ss
pop
inc
cs
dec
sub
sub
je
iret
sub
setp
shlb
adc
xlat
iret
int
cmc
outsl
cli
cmc
and
testb
btr
sbb
aas
sub
jg
leave
xorb
testb
push
orl
pop
vprotq
outsb
mov
jns
xchg
xchg
xchg
mov
or
jns
out
or
or
leave
repz
prefetch
or
in
loop
imulb
add
push
testl
negl
xor
pop
repz
mov
inc
sbb
enter
sbb
or
pop
cs
cmp
repz
push
ja
xorb
iret
pop
lea
lcall
and
cmp
and
out
xchg
in
test
out
pop
scas
inc
cmovo
imul
lock
inc
sbb
pop
addr16
js
loopne
je
jg
xchg
lcall
dec
push
jns
dec
sahf
add
mov
pop
out
sahf
out
or
or
stos
add
or
pop
stc
repz
ficomps
push
push
and
movq
add
sub
mov
fmulp
repz
adc
push
adc
jb
outsl
mov
xchg
cs
leave
repz
sbb
aaa
rol
stc
push
test
xlat
pop
add
push
aas
cli
add
bndldx
daa
push
cli
sub
popf
cmp
in
wbinvd
inc
dec
repz
push
pop
push
or
iret
push
insl
js
orl
repz
xchg
fwait
push
adc
jns
daa
iret
adc
sbb
jns
out
sbb
sbb
out
in
sahf
sbb
sbb
hlt
push
push
sbb
cmp
pop
outsb
add
or
leave
addr16
and
sti
and
push
cmp
pop
iret
repz
pop
packssdw
add
cmp
dec
leave
repz
mov
mov
ret
sti
lcall
femms
sahf
out
sahf
in
out
adc
cmp
cli
add
sbb
jb
repnz
es
adc
push
out
sahf
ja
xor
cmp
xchg
out
sahf
dec
sbb
sbb
mov
orb
mov
jns
ja
xchg
dec
and
sahf
lods
and
mov
fdivr
pop
sub
ljmp
frstor
mov
je
mov
std
cs
enter
std
inc
ds
push
std
jbe
mov
out
cmpsl
xchg
xchg
subl
ret
mov
and
jecxz
out
or
xchg
iret
repz
or
syscall
dec
sahf
out
or
or
mov
push
pop
outsb
cltd
mov
jle
sahf
out
adc
adc
sahf
out
sbb
add
out
out
iret
in
or
and
cmp
pop
and
mov
and
iret
and
lret
es
outsb
repnz
daa
loope
in
nopl
xchg
xchg
es
mov
push
sub
push
das
push
sbb
fucom
jns
and
pop
xor
xor
inc
push
ss
jbe
dec
pop
push
sahf
ja
jns
xchg
cmp
cld
jp
sahf
cmp
outsb
sub
mov
mov
jmp
add
mov
das
repz
push
jns
mov
or
das
push
mov
dec
sahf
out
sub
or
dec
cmp
mov
gs
adc
dec
sahf
ja
jnp
push
adc
test
mov
repnz
loop
in
and
add
adc
sbb
and
and
mov
cmp
pop
out
sahf
fistl
sub
jns
mov
ret
sub
fidivs
stos
add
cmp
cs
das
pushf
cmp
in
pop
push
xor
repnz
repz
sahf
xor
in
jbe
mov
pop
ret
mov
bndstx
pop
pop
dec
inc
cmp
pop
add
jnp
sbb
or
push
add
add
pushf
pushf
mov
push
icebp
cmp
enter
stc
test
smsw
ds
das
jmp
cmpsl
xor
push
xor
dec
in
shll
sbb
into
test
push
xchg
and
cmpsl
das
ret
mov
pushf
pop
aaa
mov
mov
add
dec
call
add
add
pop
xor
inc
push
mov
add
pop
in
adc
nop
stos
add
adc
shlb
ss
add
add
aas
inc
push
or
les
pop
fidivrl
inc
pusha
mov
outsb
pop
cmp
dec
aaa
test
add
mov
mov
mov
xlat
add
push
jbe
fldt
addr16
test
and
leave
leave
mov
lahf
push
or
outsb
fstl
scas
or
mov
scas
adc
ja
cmp
xor
in
jbe
push
addr16
das
push
xorps
pop
imull
push
and
mov
out
jb
pop
andb
mov
orl
pop
popf
pushf
cmp
xchg
sub
cmp
into
aas
xlat
adc
sahf
sbb
data16
or
mov
mov
add
adc
adc
adc
test
jno
and
or
xor
xchg
sub
pop
test
push
adc
xor
or
sahf
jl
movsb
add
cmpsb
fisttps
mov
inc
sbbl
mov
fisubl
inc
lahf
xchg
or
mov
inc
mov
mov
in
sbb
call
shr
jle
adc
push
ficompl
push
pop
fisubrl
xor
mov
xchg
rcr
fsubp
stc
jb
jle
xor
inc
out
pushf
jns
out
and
xchg
nop
mov
test
pusha
sahf
out
sahf
push
dec
inc
cmp
xor
sahf
out
xor
and
out
sahf
out
sbb
or
int
int
and
in
and
push
faddl
aam
iret
repz
shlb
mov
popa
or
sahf
idivl
push
fs
pop
push
dec
mov
cmp
ds
push
into
sbb
clc
and
sahf
out
sahf
aam
mov
sahf
out
cwtl
nop
mov
cmp
jo
pusha
push
cmp
int
popf
cmp
sbb
or
and
cmp
repz
les
loopne
repz
inc
movb
pop
outsb
pop
add
cmpb
cmpsl
in
cmp
mov
es
incl
dec
hlt
xor
aas
sbb
cmp
push
push
add
or
mov
mov
jae
xorb
icebp
incl
in
push
push
push
mov
into
add
adc
imul
pop
dec
inc
sets
push
adc
adc
call
or
xchg
rorl
add
push
dec
jbe,pn
add
pop
es
subb
pop
push
testl
das
outsl
test
pusha
data16
iret
push
pop
jge
jb
js,pn
stc
fildll
pop
jg
jl
add
pop
orl
repnz
add
mov
out
xchg
es
sbb
xchg
cmp
repz
and
and
sahf
out
pop
push
sahf
idivl
or
sahf
cmpsl
stc
ds
and
dec
cmp
jnp
push
fcoms
push
aam
shl
cmp
repz
or
adc
sahf
inc
sbb
fcompl
cmp
aam
pop
out
xor
sahf
add
push
and
out
adc
adc
sbbl
int
aaa
inc
es
fs
out
clc
shll
subl
and
outsb
ret
adc
xor
xchg
cmp
cs
outsl
in
xchg
incl
xorl
fistl
sahf
out
pop
cmp
pop
js
mov
idivb
jns
adc
xor
dec
insl
add
cmp
fwait
cmp
pop
ja
mov
jnp
iret
shl
jae
das
push
dec
insb
mov
add
ds
mov
stc
nop
cli
or
or
ret
addps
mov
adc
enter
push
pop
and
sbb
push
mov
ret
inc
and
sahf
mov
sub
inc
rcrb
and
decl
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
aad
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
pushl
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
decl
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
cli
decl
pop
cmpsb
lock
mov
popa
sar
mov
sbbb
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
lcall
int
add
aas
jno
or
mov
ja
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
sar
decl
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
out
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
incl
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
mov
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
ljmp
mov
inc
rcr
push
arpl
int3
and
call
cmp
lcall
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
mov
inc
inc
pop
mov
jne
fldt
cmp
jno
call
and
xor
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
ljmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
mov
mov
dec
dec
gs
std
orl
pop
ficomps
frstor
mov
scas
or
or
addb
jo
fldl
orb
adcl
je
inc
inc
push
dec
in
cmp
and
dec
dec
inc
push
dec
inc
aaa
xor
fldt
jmp
jg
jp
cmp
call
mov
lcall
dec
inc
jo
inc
popa
push
outsb
jbe
imul
sub
gs
outsl
daa
pop
sbb
aas
dec
insb
adc
xor
jns
rclb
mov
xor
xchg
jbe
add
push
dec
jae
rorb
inc
dec
push
and
cwtl
cmp
pushf
push
sub
mov
inc
inc
inc
test
fidivl
dec
inc
gs
gs
mov
add
xchg
inc
ds
arpl
inc
push
arpl
mov
pusha
imul
sub
dec
outsl
push
dec
pop
mov
push
push
xchg
adc
xchg
out
xorb
sbb
pop
push
adc
in
aam
cmpsb
das
push
adc
push
das
push
fs
shll
xchg
aas
dec
add
inc
dec
push
dec
push
dec
daa
inc
mov
imul
xor
inc
jg
cmp
jns
dec
lahf
mov
xchg
push
les
push
cmp
mov
data16
jns
pusha
mov
push
mov
and
dec
in
inc
and
jb
in
pop
and
dec
push
dec
dec
lds
jae
jbe
lds
push
dec
test
push
mov
or
dec
xchg
int
cmpsb
or
sub
dec
iret
pop
rcrb
jne
arpl
ret
add
outsl
dec
dec
pop
xchg
add
mov
push
leave
and
mov
addb
inc
push
adc
xchg
push
dec
push
jl
fidivrl
sub
sub
push
push
or
add
add
stos
idivl
testl
imul
mov
push
int3
jo
jb
lds
inc
push
insb
mov
add
fisubrl
jp
lock
push
or
jg
push
test
repnz
ret
add
stos
mov
inc
arpl
push
loop
push
dec
push
cmpsl
pusha
push
cwtl
aaa
and
jg
mov
inc
outsl
xchg
inc
push
insb
pop
pop
sahf
sub
add
push
add
sub
flds
lods
outsl
ja
add
xor
ja
xor
das
add
xor
ja
ljmp
mov
pop
and
loopne
push
stc
lahf
sbb
scas
aad
lcall
mov
dec
scas
xchg
pop
mov
or
inc
adc
adc
dec
addl
pusha
aam
jg
push
test
pop
sbbl
test
adc
inc
subb
push
mov
cmpsl
stos
sbb
test
inc
xchg
dec
shlb
dec
dec
mov
js
adc
cmpsl
sbb
push
xchg
arpl
dec
outsl
add
sub
insl
imul
dec
push
pop
push
jne
les
outsl
push
or
pop
loopne
push
fadds
ds
dec
outsl
xor
andl
iret
push
aam
pop
inc
iret
pop
adc
insl
pop
inc
loopw
xor
xlat
aad
mov
dec
jg
jns
loope
push
push
mov
jns
pop
cmp
lock
iret
repz
movsb
mov
dec
call
mov
daa
jl
xchg
out
push
add
mov
mov
push
and
lahf
incl
inc
mov
xchg
xor
ja
popa
push
out
mov
les
hlt
ljmp
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
pushl
out
sbb
mov
repnz
repz
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
insb
incl
arpl
psubd
or
outsb
cmp
imul
addr16
add
aam
incl
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fdivs
jne
filds
or
shrl
cmp
ficoms
push
xlat
enter
mov
and
pop
clc
pushl
iret
shld
sub
mov
ljmp
or
adc
stos
sbb
data16
inc
fdivl
jno
fildl
mov
adc
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
lcall
pop
or
or
mov
cmp
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
incl
sbb
hlt
or
fnstenv
adc
mov
testb
bound
ficoml
gs
aam
pop
popa
mov
into
mov
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
std
call
push
imul
mov
shlb
jae
add
in
add
pop
dec
or
cmp
add
daa
adc
or
dec
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
inc
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
pushl
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
or
jp
iret
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
decl
ljmp
push
test
ss
sbb
push
imul
aam
loopne
rorl
ficoml
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
fdivrs
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
incl
ss
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
sar
ljmp
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
pushl
cmpsl
call
ret
shlb
sbb
ret
es
pushf
mov
push
or
or
addr16
jb
push
hlt
orb
adc
jp
loop
sub
or
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
jmp
aam
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
hlt
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
lcall
insb
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
ds
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
incl
pushl
mov
xor
mov
add
push
xlat
int
push
fdivrp
call
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
sbb
add
iret
push
add
test
xor
cmc
mov
xchg
ds
inc
cmp
push
dec
je
push
insb
mov
in
test
call
add
fistps
jbe
push
jns
lods
sbb
sti
arpl
arpl
mov
ss
cmpsl
in
push
inc
insl
jns
movsl
or
outsl
insl
imul
xchg
fildl
imul
push
xlat
fbld
fs
add
cmp
mov
mov
js
inc
insl
bound
inc
out
sub
aad
mov
inc
inc
js
in
bound
push
dec
orl
jno
fistl
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
imul
pop
popa
arpl
cmp
arpl
or
xor
dec
popa
add
bound
popa
add
jbe
pop
sbb
jnp
icebp
xor
inc
xchg
testb
or
insb
add
lock
mov
push
pop
rcr
hlt
inc
rorl
ss
jbe
jnp
push
arpl
popl
add
sbb
ret
jp
mov
fadds
sub
sub
xchg
inc
sbb
inc
and
xor
inc
fstl
push
rcrb
dec
insb
adc
adc
aaa
je
aaa
push
inc
push
mov
add
ljmp
pop
cltd
and
jae
mov
adc
push
dec
push
mov
nop
lods
stos
aaa
inc
or
fisubrs
xor
ficomps
add
jo
inc
inc
add
ds
jnp
add
mov
iret
int
push
dec
dec
sub
xchg
pop
fistpll
xchg
ja
outsb
jne
lods
mov
and
mov
lret
pop
xor
jne
xor
or
add
ss
push
mov
or
mov
aas
jle
stos
pusha
aaa
cltd
dec
jo
add
mov
dec
or
inc
mov
inc
outsl
pop
mov
add
lahf
mov
fwait
incl
or
xchg
imul
adc
rorb
lds
dec
sbb
adc
push
push
js
popa
jo
lahf
or
add
push
outsl
outsl
test
mov
cmp
jno
lds
and
sub
sub
in
nop
test
pop
cmp
aam
pop
ljmp
xor
sarl
jo
test
xchg
pop
adc
insb
jns
das
mov
xor
popa
jb
test
addr16
adc
push
nop
adc
insb
or
cs
test
clc
inc
push
bound
adc
xor
ret
test
ja
pop
adc
xor
xor
add
add
sub
adc
mov
aaa
pop
pusha
jl
adc
loopne
push
pop
pop
orb
scas
addr16
sub
and
mov
scas
xchg
fisubl
xchg
test
adc
jg
push
outsl
rcll
add
aaa
aam
pop
insb
mov
push
loop
aaa
pushf
and
cwtl
mov
adc
dec
lds
daa
push
inc
lds
aas
pop
inc
and
and
and
add
push
inc
sbb
push
fisubs
pop
adc
dec
adc
sbb
out
movsb
enter
std
push
or
pop
mov
int
mov
shlb
pop
and
pop
add
add
cwtl
outsb
outsl
je
add
xchg
jb
fistl
dec
cld
and
and
cs
sbb
popa
jmp
sub
pop
lea
out
lahf
cmpsb
bswap
mov
out
ud0
ds
jmp
repnz
in
push
pusha
ljmp
lret
cli
add
dec
pop
push
cld
push
imul
sbb
push
inc
es
add
dec
into
sahf
testb
add
and
add
sbb
insb
daa
aam
aam
cmp
add
pop
add
and
add
add
rcr
jnp
inc
sbb
add
sub
push
test
mov
push
mov
andb
mov
push
loop
mov
enter
push
add
pop
add
aas
adc
adc
jge
and
and
add
lods
add
push
mov
xor
inc
push
repnz
lret
sar
inc
cs
mov
insl
dec
mov
or
rcrb
dec
adc
out
add
out
cltd
and
dec
addb
repnz
push
inc
sbb
adc
cmp
add
je
rol
adc
je
jmp
add
das
jle
sahf
mov
lea
pusha
test
aam
ss
or
mov
and
xor
bound
leave
xor
fs
ret
and
adc
push
jbe
adc
push
enter
wrmsr
int3
fbld
jno
int3
fucomi
gs
pop
pop
push
lret
ja
sbb
sar
jne
jmp
mov
lods
add
lea
pop
mov
or
call
adc
xchg
inc
inc
in
sub
int3
loope
adc
xor
daa
nop
fsubrs
mov
mov
fstl
enter
jl
les
add
jg
enter
pop
sub
in
or
mov
pop
in
clc
add
jl
fwait
mov
add
or
or
push
mov
sbb
push
movzbl
sarl
and
nop
fadds
mov
insb
inc
ret
sbb
movsl
cltd
fs
mov
fsubrs
cmp
jbe
mov
add
test
push
sub
pop
faddl
or
aad
inc
nop
inc
cli
mov
jp
aaa
sub
or
fildll
mov
sub
adcb
loopne
cmp
mov
mov
push
movsb
std
loopne
call
sbbb
push
add
outsb
xchg
test
sub
clc
pushf
and
push
sub
clc
aad
or
repz
mov
xor
push
inc
imul
add
adc
push
data16
fsubrs
rcl
bound
popa
inc
or
and
add
push
rcl
mov
adc
mov
and
loopne
rorb
mov
sub
mov
movsl
es
hlt
test
mov
shrl
jbe
leave
imul
fs
enter
xchg
mov
push
stc
dec
jnp
or
mov
leave
push
sbb
fistps
xchg
into
int3
sbb
add
ficomps
or
push
add
rcll
xchg
ret
jae
push
sahf
push
inc
fiaddl
jp
dec
pop
push
ret
shlb
or
rorb
test
or
lds
test
sahf
lea
mov
shlb
lock
rclb
cltd
jmp
lret
addb
mov
aam
je
inc
test
movb
xchg
sbb
add
push
mov
cmp
mov
insl
scas
out
or
lds
insl
sti
loope
test
mov
arpl
xlat
mov
andb
mov
mov
test
mov
mov
in
add
and
loopne
xor
rol
addr16
lock
repnz
mov
xlat
hlt
sahf
adcl
push
call
repnz
mulb
lcall
decl
lcall
int3
out
or
jae
aas
adc
popf
xlat
mov
rcr
push
dec
and
aad
mov
push
sbb
push
dec
notl
in
pop
je
call
push
xor
jo
push
insb
fdiv
sub
inc
mov
adc
in
mov
mov
mov
aam
loope
popa
xchg
xor
adc
or
xor
mov
jl
outsb
rclb
add
xor
or
stc
je
cltd
cmp
push
addl
sbb
cmp
jp
push
or
js
icebp
aad
or
mov
and
rcll
lahf
pop
xchg
sbb
test
ja
xchg
adcl
mov
rolb
fstpl
sub
call
lcall
mov
sbbb
jb
sub
imul
call
dec
rcrb
push
add
and
inc
aam
pop
add
fisttpl
inc
dec
pop
xchg
and
movsl
add
scas
wrmsr
addb
sbb
cli
lret
aaa
or
adc
daa
sub
xchg
loope
call
cmp
test
clc
jl
or
or
je
mov
xchg
jle
pop
push
call
xchg
std
or
call
lret
dec
pop
jne
xchg
lea
xor
mov
push
scas
or
sbbl
je
cs
hlt
jmp
dec
push
push
lock
pop
add
or
bndstx
pop
pop
push
mov
call
shrb
sbb
or
lahf
pop
sbb
ja
pop
mov
xchg
xchg
ja
adc
out
loop
clc
ja
sbb
push
inc
into
pop
in
leave
sbb
dec
push
inc
cmpsb
cmpsb
push
or
or
in
shrl
push
fs
inc
sbb
sbb
sbb
mov
sahf
pop
mov
cs
or
or
mov
xchg
push
imul
rolb
xor
lahf
ss
inc
clc
sbb
push
or
xchg
ret
lea
mov
inc
sub
or
fimull
push
jecxz
add
idivl
jne
add
push
mull
adc
xor
or
int3
dec
xchg
sbb
fstps
aas
cmp
call
mov
sti
mov
sub
sbb
pop
lahf
popa
jecxz
push
mov
movsl
gs
scas
xchg
xor
push
mov
ljmp
bound
cli
dec
xchg
or
push
sbb
hlt
push
in
or
sub
push
jns
xor
pop
loop
jo
xchg
add
sti
clc
je
fdivs
push
pop
ss
sbb
push
push
ret
xor
je
push
mov
push
adc
and
jne
js
xor
push
sbb
cmp
subl
loop
fcom
movsl
add
push
sbb
cwtl
cmpsb
pushf
cltd
daa
push
push
sub
mov
dec
fdiv
divb
les
loopne
lcall
pusha
push
int3
call
push
push
sbb
mov
mov
pop
sub
pop
das
addr16
andb
cmp
xchg
inc
test
dec
loope
and
add
scas
imul
call
push
pop
jle
push
outsb
test
lahf
je
cmp
mov
addr16
xchg
xchg
test
mov
dec
fwait
mov
add
inc
jbe
cmp
test
test
mov
cs
mov
mov
adc
add
fisubs
shlb
fildl
or
dec
rcr
push
cmp
xchg
add
out
or
xor
repnz
xchg
insl
sbb
sbb
fld1
jb
hlt
fdivrp
xor
fdivr
sub
loop
mov
inc
mov
adc
sbb
xor
sahf
imul
add
stos
pop
mov
push
leave
xchg
lcall
mov
dec
xchg
aas
xor
inc
lahf
or
call
mov
add
or
mov
adc
mov
mov
lock
mov
les
adc
pop
mov
jnp
xor
pop
lea
push
xchg
xchg
dec
enter
sbb
repnz
mov
dec
sbb
cmpsb
rep
push
adc
xchg
mov
imul
leave
shll
jle
rcll
jnp
mov
cmp
jne
cli
fbld
xchg
add
xchg
mov
jne
sbb
scas
rorb
cmpsl
push
mov
mov
aam
push
pop
lahf
fld1
xchg
repnz
shlb
cmp
mov
shlb
cmpl
loope
lock
jb
sbb
dec
mov
and
ljmp
pop
pop
stos
je
dec
and
push
and
fiaddl
rolb
mov
mov
lahf
popa
je
mov
mov
mov
repnz
inc
fistpl
or
push
mov
sub
repnz
loope
adc
adc
jb
adc
xchg
pushf
data16
in
imul
xor
push
int3
into
rcl
fiaddl
mov
add
ret
lret
mov
loopne
pop
insb
jmp
mov
sbb
in
cwtl
and
repz
mov
mov
sub
adc
fldt
pusha
or
add
push
push
or
insb
or
and
scas
pop
and
loopne
adc
push
xchg
add
cwtl
push
push
xchg
sbb
dec
jo
push
call
xchg
adc
and
jmp
inc
adc
adc
dec
cmp
push
outsl
xor
lret
loopne
imul
enter
push
add
add
pop
or
jmp
xchg
xchg
lret
cmp
inc
std
sbb
pop
dec
sub
push
fidivrs
xor
mov
push
or
nop
adcb
dec
in
stc
mov
xchg
in
enter
adcb
jno
adc
test
dec
fs
push
insb
cmp
adc
loop
xchg
sub
mov
fldcw
lods
cmp
rcr
in
mov
inc
loope
pop
mov
and
lahf
cmp
adc
stos
repnz
cltd
sub
inc
mov
mov
mov
cmp
mov
xchg
xor
shl
aam
nop
loope
cmp
in
movl
jne
in
ss
mov
jge
fcomps
leave
lea
pop
cmp
imul
and
or
es
cmpsl
adc
xchg
pop
push
outsl
pusha
sbb
mov
mov
lea
shll
lods
push
cmp
test
inc
std
fidivrs
sbb
inc
xor
sbb
push
cmpsl
into
pop
mov
add
cltd
sub
xor
xor
mov
call
push
mov
test
inc
enter
cli
insl
inc
js
data16
sahf
or
pusha
ja
mov
mov
cmpl
mov
jb
in
mov
lods
lods
dec
push
lods
mov
mov
jecxz
repz
inc
sub
mov
call
add
cmp
add
in
dec
adc
or
cmpsl
popf
dec
in
rorb
int3
dec
js
add
cmp
mov
push
add
jne
jl
cld
and
push
in
pop
pop
test
cld
jb
xchg
fadd
add
or
or
in
and
cmp
xor
negl
scas
jns
sub
test
sbb
icebp
or
gs
push
pusha
ljmp
push
add
add
out
enter
jo
or
inc
push
jecxz
xchg
cli
xorl
into
sub
arpl
add
pop
jbe
ss
inc
and
pop
cmp
cwtl
mov
inc
dec
pop
and
je
or
or
je
mov
pop
push
jmp
clc
dec
or
loopne
outsb
ret
cmp
or
mov
jmp
aaa
xchg
sbb
xor
bound
jmp
mov
fs
loopne
mov
adc
xor
cli
pusha
pop
out
sbb
cwtl
imul
lcall
hlt
jl
das
rcrb
insb
cld
adc
pop
jp
int
nop
add
or
mov
add
xor
sbb
mov
or
sub
xor
lods
jns
sub
jbe
popf
jne
xor
or
sbb
nop
push
dec
inc
jnp
add
ljmp
test
arpl
mov
cmp
daa
cmp
adc
inc
or
mov
mov
sti
push
xchg
push
inc
rorb
hlt
repnz
testl
shll
aam
inc
inc
xor
sub
or
or
shr
decl
jl
or
jnp
loope
sbb
call
mov
xor
xchg
nop
cld
cmp
movb
jo
inc
mov
call
idivl
mov
xor
loopne
or
push
push
dec
xor
inc
adc
test
sub
mov
jo
cld
jge
xchg
lret
sub
movsb
pop
cmovo
dec
adc
std
adc
jmp
push
ds
loop
mov
cmp
iret
add
clc
ljmp
jne
xchg
out
add
mov
sahf
pop
add
mov
and
cmc
test
pop
sub
jl
mov
rolb
fisubrs
jne
sbb
popf
into
cmc
sub
subl
push
pop
jle
addb
int
mov
add
sub
pop
mov
in
ret
dec
cmp
ds
xlat
les
xor
mov
mov
add
dec
adc
int3
lods
or
inc
jno
inc
dec
or
push
push
mov
daa
idiv
add
jl
adc
xchg
adc
jmp
pop
pop
cmp
push
xchg
popf
mov
mov
hlt
pop
mov
fists
sub
mov
outsw
mov
push
call
pop
jmp
pop
xor
sub
inc
xor
add
pushf
scas
popa
xor
push
sbb
sbb
xchg
sarb
push
pushf
clc
push
or
cmpsl
enter
outsl
jne
mov
outsb
in
std
jmp
fwait
insl
mov
and
xor
add
jo
jmp
in
js
lcall
js
xor
fcmovu
loopnew
fadds
sarb
add
xchg
adc
decb
mov
shll
loopne
addl
and
fs
xor
icebp
mov
ja
pop
in
rorb
je
mov
call
dec
adc
enter
xor
or
call
xchg
cmpsl
sbb
repnz
out
cmp
jl
pop
jne
mov
jmp
or
pop
shll
js
or
or
pop
arpl
xor
rcrb
aas
add
pop
or
mov
or
push
sub
sbb
push
adcl
cmp
cmp
cmp
test
or
es
ljmp
ljmp
sbb
push
call
push
cld
pop
pushf
mov
cmp
ss
sbb
add
call
xchg
nop
cs
cmp
je
dec
mov
insb
jmp
dec
jmp
xor
mov
lea
add
int3
or
notl
mov
push
fucomip
cmp
je
cmp
jbe
cli
mov
cmp
subl
mov
sub
and
std
pop
dec
xchg
mov
or
sbb
pop
ret
or
test
inc
jae
push
push
mov
cli
adc
or
subb
movsb
jae
pop
pushf
loop
aaa
adc
shr
and
sub
je
imul
sbb
fwait
shll
imul
mov
mov
loope
mov
mov
clc
or
mov
paddb
mov
pop
fwait
jmp
push
inc
das
loope
mov
call
jo
push
sbb
and
mov
lret
sub
call
or
sarl
adc
push
adc
add
and
lods
stos
loopne
sti
push
dec
nop
imul
ljmp
addb
cmpsb
in
push
test
imul
sub
loop
fbstp
pop
push
lea
mov
jno
mov
push
loop
enter
jne
jge
aad
sub
push
jge
jle
push
cmpsb
aam
dec
xchg
push
inc
cmp
clc
icebp
lds
popa
fsubrl
call
stos
loopne
ss
je
stos
cltd
pop
or
faddl
push
popa
in
fadds
push
add
ss
scas
mov
je
jae
js
push
push
mov
sbb
add
inc
xor
or
push
repnz
or
adc
aam
cmpsl
and
xlat
aas
push
in
or
mov
pop
shll
xchg
popf
imul
mulb
mov
jmp
xchg
sbb
add
dec
xchg
mov
xchg
jmp
inc
das
scas
sub
frstor
sarb
push
lock
dec
push
hlt
insb
pop
mov
mov
jo
adc
iret
mov
jne
clc
and
cmp
push
sbb
push
add
test
push
mov
or
jmp
sub
and
aam
pop
and
add
sub
push
or
or
or
and
dec
aaa
dec
or
adc
loop
mov
push
pop
mov
out
sbb
ja
xorl
push
push
imul
and
outsb
arpl
addr16
sbb
sbb
sbb
idivl
into
cmp
add
cld
push
cmp
xlat
pop
mov
jne
push
pop
cmpsl
adc
and
ret
cmp
dec
decb
or
jns
outsl
and
sub
nop
xor
test
push
sahf
jae
pop
imul
xchg
sarl
lds
call
mov
cmp
cmp
and
push
mov
xor
pop
mov
cwtl
cmp
and
add
movsb
xor
mov
sbb
ljmp
mov
push
push
stos
ret
negb
sti
sbb
add
push
dec
xor
mov
jmp
jmp
mov
pop
xorb
movsb
inc
or
xchg
xor
je
pop
push
adc
movl
imul
fadds
test
ret
or
or
jmp
inc
out
xchg
jne
add
push
call
insb
out
and
in
movsb
jmp
js
in
jb
sbb
test
fnstenv
mov
mov
adcl
xchg
pop
add
cmp
clc
xor
xor
icebp
mov
inc
pop
pop
adc
movsl
adc
lret
mov
bound
call
andb
jo
push
sbb
push
cmp
sub
fdivl
or
mov
cwtl
or
insl
mov
or
cmp
test
test
scas
test
stos
or
inc
loopne
fs
ret
push
mov
push
cld
inc
mov
loopne
andl
cmp
jg
push
dec
rorb
scas
shlb
pop
mov
dec
pusha
mov
orb
xor
mov
aas
mov
cmp
and
insb
adc
nop
push
decl
adc
scas
clc
or
inc
inc
dec
jne
movzbl
add
stos
push
push
add
xor
movsb
nop
add
mov
dec
inc
faddl
or
or
pop
lea
nop
out
push
nop
sbb
dec
xchg
mov
jmp
add
mov
or
jecxz
fstpt
and
adc
cli
sub
fildl
add
cmp
mov
jg
loopne
rorb
xor
inc
pop
test
inc
testb
fs
rcrb
dec
sub
add
push
dec
sbb
imul
mov
pusha
pop
loopne
xchg
jb
push
sti
xchg
daa
sahf
sbb
sub
movsb
xor
push
xchg
lock
aad
push
push
call
test
dec
add
movsb
pop
aam
push
jp
outsb
movb
add
je
call
cmp
add
push
mov
push
and
incb
das
dec
mov
cmp
andb
aas
enter
adc
lods
loopne
xor
mov
jge
lock
repnz
xchg
adc
pop
push
adc
rolb
sub
xor
mov
lods
and
jp
xor
add
das
out
xor
add
xor
addb
and
xorb
mov
xor
add
add
out
xor
xor
and
sbb
adc
adc
shl
xor
push
add
add
xor
xorl
sub
mov
or
nop
test
cmp
daa
and
xor
mov
adc
or
xor
and
stos
cmpsl
pop
popa
pusha
andb
sbb
lahf
push
loopne
xchg
cli
or
or
or
call
out
out
in
inc
callw
pop
call
call
jle
cmp
dec
aam
sti
mov
mov
push
jns
cmp
call
sbb
call
int3
pop
jmp
xchg
sbb
fstpt
inc
pop
cmp
and
mov
decl
inc
jge
mov
or
pop
psubsb
add
mov
test
and
das
cmc
xlat
andb
in
push
and
je
cmp
jmp
cmp
sbb
dec
inc
xor
mov
inc
jle
fwait
cmp
clc
push
cmpsl
loopne
enter
pop
push
lds
int
into
cmp
xor
dec
dec
jge
dec
dec
jmp
sub
inc
jmp
adc
roll
push
ret
push
and
xlat
add
repnz
es
cmp
or
adc
leave
test
add
jle
or
pusha
lock
sub
pop
ret
daa
lods
mov
inc
fiadds
sub
incb
mov
mov
es
cmpsb
add
add
ret
movsl
push
and
add
into
pop
add
je
decl
or
ja
push
add
dec
ret
push
push
es
inc
and
push
outsl
movb
pop
fildll
ss
iret
dec
push
test
xchg
or
in
ficomps
or
xorb
mov
js
ljmp
int3
rcrl
enter
inc
push
imull
push
xor
xor
enter
inc
push
test
js
mov
inc
adc
or
jle
repnz
xchg
pop
aaa
dec
rcrb
jp
mov
mov
int3
pop
and
adc
and
pusha
inc
inc
orl
add
pop
push
push
inc
push
adc
inc
adc
call
mov
push
fisttpll
mov
and
or
fs
pop
inc
xor
popa
xor
jnp
mov
sub
bound
mov
in
sub
or
fs
lret
inc
movsb
repz
loope
jmp
ss
rol
shrl
inc
or
push
inc
scas
push
push
dec
inc
fs
out
jnp
data16
pusha
nop
push
in
nop
je
mov
push
les
xchg
add
inc
dec
inc
cmp
fldl
inc
or
push
sub
jmp
adc
add
add
sahf
xlat
loopne
jmp
imul
mov
adc
adc
or
inc
lock
daa
inc
out
fstpl
add
and
dec
dec
cs
dec
inc
pop
xchg
sbb
insl
inc
push
fldl
jno
inc
mov
iret
repz
or
push
mov
ror
mov
inc
fidivl
ret
add
or
push
adc
sbb
jns
inc
add
addl
fadds
nop
addr16
rclb
inc
jb
pop
mov
pop
dec
or
insb
and
jo
dec
pushf
push
pop
jmp
add
sbb
cmp
je
mov
add
sub
and
push
or
lahf
ret
lea
mov
adc
add
pop
add
or
add
add
add
cmovb
ja
lret
mov
cmp
je
xchg
add
mov
add
iret
enter
push
gs
pop
movsl
mov
or
dec
fimuls
xchg
or
or
leave
jae
and
inc
lock
or
xchg
cmpsb
jb
mov
adcl
or
xchg
or
jns
scas
push
sub
in
adc
pop
adc
stos
cmp
adc
in
add
adc
lret
popa
adc
adc
lcall
in
push
inc
adc
mov
inc
pop
xor
or
pop
and
sbb
leave
mov
mov
iret
sbb
fcompl
sbb
pop
leave
sbb
push
jns
lcall
sub
inc
sahf
sbb
jo
xor
xor
push
push
inc
sahf
aaa
and
fnsave
ret
sub
clc
xorl
add
cmp
xchg
loopne
dec
pop
jmp
lcall
in
push
in
imul
movsl
test
ret
in
sahf
sub
in
out
or
sub
fiaddl
call
adc
repnz
enter
cmc
mov
cmp
cmp
ljmp
jb
jmp
push
mov
lcall
mov
in
cmp
mov
scas
in
out
out
xchg
out
jae
inc
push
or
je
inc
scas
ss
lock
dec
icebp
call
icebp
das
jnp
nop
addr16
or
push
das
in
std
hlt
hlt
imul
pop
hlt
xchg
std
cmc
cmc
and
cmpsl
div
add
negl
shll
in
std
clc
clc
clc
or
aas
stc
stc
jb
iret
enter
add
sti
fdivrp
cld
outsl
pusha
and
cld
je
cld
push
push
nop
sarb
repnz
mov
xor
sbb
rolb
in
xor
mov
sub
dec
pop
gs
insb
inc
dec
dec
mov
rcl
ljmp
or
jecxz
jecxz
jns
or
xchg
xor
adc
cmpl
sub
or
out
and
out
scas
call
pop
sti
adc
adc
cltd
or
push
imul
in
aad
cltd
or
jb
pusha
leave
jmp
pop
insl
nop
cmpsb
out
out
out
xchg
mov
lock
cmp
cli
or
pop
repz
push
and
sbb
xchg
cmp
imul
div
imull
xchg
xchg
clc
cltd
dec
push
and
jb
push
stc
xor
adc
outsl
in
cmp
or
cmp
in
push
and
and
or
test
rcll
xabort
jmp
insl
nop
cmpsb
loop
loop
arpl
push
jecxz
inc
clc
daa
or
add
mov
lcall
jns
jne
fdiv
out
mov
and
test
ljmp
push
jmp
andb
or
hlt
imul
out
test
adc
mul
dec
push
and
scas
notb
add
insl
repnz
aad
repnz
inc
repz
and
sub
or
cmpsb
jb
push
out
imul
push
xchg
div
add
scas
test
mov
push
and
stc
jmp
pop
pop
cmc
cli
cli
push
sub
cmc
loope
cmp
pop
sbb
cli
hlt
or
or
mov
test
push
jo
add
mov
mov
add
clc
sti
fidivl
cmp
mov
loop
pop
hlt
xor
nop
cmp
mov
rclb
hlt
in
shll
addps
and
repz
movsl
test
repz
lea
shlb
rep
mov
in
in
and
inc
lea
shlb
repnz
repnz
dec
adc
icebp
and
mov
push
and
mov
repnz
adc
sbb
test
xor
mov
or
push
and
dec
cwtl
icebp
or
jne
stc
jmp
jb
mov
and
mov
xchg
stos
jne
out
lock
mov
dec
jecxz
cmp
add
jmp
mov
and
and
push
sub
ffreep
push
inc
stos
jge
push
insb
loope
inc
cmp
cmp
ret
mov
adc
mov
pop
mov
add
pop
pcmpeqw
cltd
push
dec
add
movsb
xchg
xchg
jno
push
dec
add
ss
and
xchg
jmp
shlb
filds
xorl
nop
push
jns
adc
jns
dec
push
aaa
or
push
add
dec
adcl
ss
int
push
jecxz
repz
mov
sahf
out
insb
sbb
push
push
aad
sahf
out
in
xchg
gs
dec
outsb
or
xchg
into
jnp
mov
lahf
add
and
out
jg
xor
lea
inc
cmp
sbb
shll
xchg
xchg
aam
lret
test
sub
push
aas
mov
or
xchg
dec
dec
bound
push
sub
sarb
jbe
adc
sarl
daa
jmp
mov
lea
loope
mov
push
mov
sub
push
or
cmp
sarl
sbb
and
xlat
sub
negl
sbb
lret
pusha
roll
pop
call
popa
dec
hlt
ret
pop
ret
nop
aam
in
jmp
lods
lret
adc
push
sbbl
push
and
es
xchg
cmp
call
jmp
cwtl
xchg
push
lret
sub
sub
adc
add
and
dec
cmp
les
and
push
movsl
out
or
and
adc
cwtl
xchg
push
js
cmp
and
out
push
ss
xchg
push
rorl
sbb
adc
push
push
jmp
ret
and
add
sub
jmp
mov
cmp
test
inc
jbe
rolb
xchg
lock
movsl
sub
sbb
inc
add
add
pop
xchg
push
nop
in
and
sub
scas
adc
adc
xor
push
and
dec
xor
sub
push
adc
inc
cmp
mov
adc
or
inc
adc
in
adc
pop
adc
pusha
push
stos
add
scas
add
or
add
cmp
sub
push
adc
inc
orl
add
in
imul
or
shlb
mov
or
dec
aad
in
mov
insl
dec
adc
clc
imul
xchg
mov
mov
sbb
adc
lods
ss
insl
sbb
or
jg
add
loop
push
or
cmp
in
xlat
jne
cmpsl
dec
mov
add
dec
nop
pushf
stc
push
cmpsb
mov
xor
xchg
addb
push
or
xor
mov
adc
sbb
lret
in
movsl
movsb
sti
and
dec
xchg
and
je
adc
pop
fwait
in
mov
jmp
and
jmp
test
dec
nop
or
adc
cli
sbb
outsl
pop
and
mov
into
mov
mov
mov
es
ja
leave
hlt
push
sbb
loopne
xor
mov
mov
add
or
test
jno
jmp
and
nop
add
cmpsb
stos
mov
cs
mov
daa
push
mov
inc
sub
daa
sbb
movsb
pop
ds
push
xor
push
out
push
jecxz
xchg
stos
imul
mov
sbb
mov
push
outsl
inc
and
mov
or
dec
nop
or
mov
adc
adc
movsb
xchg
and
fbstp
push
mov
jo
push
pushf
inc
xor
mov
loope
inc
dec
cmpl
imul
jg
push
jmp
ja
insb
pop
xor
aam
fs
push
and
push
andb
dec
cmpsb
loopne
lea
gs
xchg
mov
pop
or
xchg
add
cltd
lcall
inc
jno
mov
jge
cmp
push
dec
cmpsl
sti
xchg
cmp
jmp
push
xchg
cs
mov
pop
mov
push
rcl
inc
mov
add
lea
xor
mov
popf
push
push
cmp
popa
stos
lcall
or
test
add
fs
xorl
arpl
dec
push
in
inc
mov
in
or
push
andb
pop
or
inc
mov
lods
imul
rorl
nop
clc
mov
je
and
dec
or
je
mov
pop
enter
test
add
dec
xchg
and
subb
or
decl
test
push
sti
hlt
mov
and
and
add
decl
adc
mov
mov
mov
cmpsl
or
add
xor
leave
and
pop
in
sub
addr16
dec
nop
push
ja
cmpb
sub
loopne
rclb
cs
add
aas
add
mov
push
ja
es
orb
shrb
nop
jb
movsl
mov
push
xchg
and
xor
loopne
das
in
lea
data16
lds
jecxz
add
loope
add
scas
adc
iret
dec
cmp
aad
sub
pusha
push
cmp
in
aaa
popa
aas
xor
or
xor
xlat
movsl
sub
xchg
inc
push
fs
or
sbb
inc
fs
inc
mov
cltd
inc
adc
sbb
arpl
xor
adc
cltd
add
dec
jp
mov
cltd
vorps
xchg
inc
arpl
adc
scas
jb
xchg
nop
cltd
mov
push
rclb
and
or
imul
sub
adc
cs
addr16
fimull
or
dec
adc
jl
roll
xchg
je
lods
mov
dec
inc
mov
int3
scas
test
enter
inc
xor
stos
imul
xor
cmp
mov
xor
and
je
dec
mov
or
push
xor
inc
add
jl
or
mov
mov
clc
mov
mov
sbb
imul
cmp
mov
test
inc
cmp
je
jno
pop
mov
cmp
pop
dec
jmp
pop
insb
insb
enter
loope
stos
imul
rcll
inc
mov
aam
imul
mov
shlb
nop
xlat
push
xor
and
sub
mov
mov
or
xor
mov
mov
cmovae
mov
push
dec
inc
mov
fldcw
leave
loopne
adc
add
cli
enter
push
pop
shrb
xchg
mov
mov
imul
nop
push
pop
lcall
cmp
adc
aad
fs
mov
or
adc
shrb
xor
shlb
rolb
xlat
add
xchg
xorl
dec
lods
mov
call
jo
fidivl
cmpsb
imul
xor
fadds
and
nop
subl
push
ss
mov
in
mov
lcall
dec
inc
ja
xorl
inc
cmpl
jb
push
inc
insl
adc
inc
out
sbb
fdivs
add
push
dec
inc
subl
mov
call
pop
xor
inc
imul
inc
sub
or
adcl
push
xor
sbbb
or
andl
dec
add
xchg
and
add
lcall
inc
andl
add
cs
into
inc
xor
inc
lods
rclb
mov
das
push
dec
inc
aaa
sbb
cltd
xor
sbb
sarb
rcrb
push
adc
adc
push
pop
popf
dec
imull
aam
push
adc
sbbl
subl
outsb
stos
imul
aad
sub
mov
and
or
ret
inc
and
movsl
fnstcw
lock
add
insb
pushf
mov
or
int
jl
test
add
push
sbb
pop
mov
scas
cmpsb
mov
scas
cmpsb
mov
add
xor
insb
cmpl
fwait
jno
or
lods
imul
pop
sbbl
stos
imul
xorl
xor
sub
push
sti
lret
outsb
sbb
imul
xchg
mov
push
shlb
add
stos
jne
add
sbb
andl
test
adcl
aam
cmpl
sbb
ret
cmp
jp
out
and
cmovs
je
adc
les
aam
subl
subl
clc
js
xchg
dec
stos
mov
je
nop
mov
fstl
cmpl
cmp
xor
inc
in
sub
andl
and
and
cmp
and
and
inc
push
pop
mov
and
dec
dec
pop
cmp
cmp
cmp
stos
imul
adc
push
mov
jo
pop
arpl
ret
lods
cli
cmp
cmp
xor
sub
sbb
inc
jno
ds
cmc
xchg
icebp
leave
jmp
xor
sbb
mov
imul
and
cwtl
dec
aaa
dec
and
daa
icebp
mov
repz
mov
in
pop
xchg
rclb
popf
xchg
enter
out
push
mov
mov
pop
pop
dec
in
dec
pop
ret
sub
repnz
mov
dec
bt
sbb
lret
gs
jbe
or
ret
mov
aaa
pop
push
pop
mov
xchg
addr16
test
jbe
cmc
push
or
xorl
push
ja
addr16
cmpsb
and
add
or
dec
inc
pop
and
orb
adc
dec
xorb
lock
inc
pop
gs
inc
out
sbbb
xchg
add
mov
imul
loop
xchg
and
jp
pop
orb
or
inc
xchg
add
or
mov
cltd
sbb
xchg
test
in
adc
or
sbb
and
test
mov
or
push
and
mov
cs
mov
je
test
jae
xchg
xchg
test
ror
pop
mov
push
test
fwait
push
xchg
test
cmp
pop
xchg
fdivs
cmc
hlt
movsl
jp
add
xchg
adc
or
cmp
push
push
push
sub
sbb
movsl
out
or
adc
pop
in
add
jl
ds
aam
in
cli
stc
or
add
push
adcb
scas
mov
mov
mov
shlb
jp
push
cmpb
sbb
xchg
dec
test
sub
stos
add
fwait
movsb
or
add
xchg
ds
or
sub
je
into
dec
adc
outsl
addl
adc
xor
testb
pop
stc
pop
lcall
dec
or
and
in
notb
push
and
and
dec
sbb
pop
call
fimuls
nop
je
or
mov
mov
jmp
and
inc
mov
or
dec
push
cwtl
je
mov
push
shll
nop
dec
sub
das
dec
add
inc
xchg
ret
leave
dec
cmp
shl
or
push
nop
mov
adc
add
mov
add
mov
nop
je
add
sub
add
add
push
rorb
dec
mov
neg
inc
mov
sbb
inc
dec
and
dec
mov
or
mov
inc
loopne
add
add
pop
add
loopne
imul
xor
dec
push
and
rol
mov
idivl
dec
clc
cs
call
sbb
xchg
fsts
inc
sbb
jne
call
sub
mov
adc
adc
xchg
adc
push
pop
loopne
and
inc
pusha
mov
xor
int
in
adc
mov
dec
enter
call
in
adc
adc
or
cltd
test
adc
int
je
nop
adc
xor
adc
mov
data16
adcl
test
or
adcl
adc
sbb
adc
imul
push
test
xor
orl
ss
outsb
jae
lea
movsb
adc
adc
push
cmp
adc
add
movsb
mov
add
fwait
stc
dec
daa
mov
add
incl
jl
je
dec
xor
add
daa
and
call
cmp
movl
mov
aam
ljmp
pop
mov
cmp
adcl
jp
jmp
pusha
addl
pop
sub
rcll
push
cmp
xor
inc
sub
repz
loopne
pop
or
sub
adc
add
arpl
loopne
push
test
in
mov
out
or
out
push
ljmp
cld
or
or
add
dec
inc
pop
adc
ret
and
cs
mov
nop
inc
test
add
and
cmp
pop
rcr
and
mov
xor
push
inc
call
inc
pushf
inc
pop
inc
lods
in
sub
ss
jmp
in
xor
inc
rcr
add
shlb
sti
inc
aaa
mov
jne
cmpl
dec
fcmovnbe
int3
daa
fldl2t
insb
cmp
add
cmp
inc
mov
repz
jmp
xor
push
and
mov
inc
adc
xlat
fwait
cs
jmp
inc
inc
inc
pop
je
test
test
es
add
add
cmp
inc
xlat
push
mov
ret
pusha
mov
or
add
pop
das
or
mov
xorb
cmpsb
lcall
lock
jp
movsbl
and
cmp
leave
or
push
mov
fstp
mov
call
xor
inc
jmp
aaa
je
pop
add
adc
push
lret
xor
inc
nop
dec
cwtl
lds
inc
imul
cltd
inc
add
in
pop
sbb
loop
mov
add
loop
pusha
popa
push
mov
imul
or
movsl
xorl
pop
call
cmp
push
hlt
gs
inc
shl
arpl
rorb
jb
cmp
jle
and
pop
fisubrs
jge
push
push
popf
out
sub
leave
std
dec
mov
or
mov
cltd
cmp
and
jmp
cmp
scas
or
in
xor
adc
push
cs
outsl
add
ret
push
sar
inc
push
adc
xlat
xchg
hlt
nop
xor
xor
or
cmp
mov
sub
fcomip
inc
adc
mov
movsl
out
cmp
pop
scas
push
fwait
and
or
shlb
sbb
xchg
add
cmp
cmpsb
imul
sbb
add
sbb
pop
add
shr
add
filds
cmc
add
je
add
in
jl
inc
inc
popa
xchg
mov
or
inc
cmp
ds
in
test
xchg
push
ja
sub
pop
mov
xchg
out
lea
pop
or
push
sarb
sub
adc
adc
add
dec
lea
sbb
inc
mov
push
and
xchg
sbb
or
mov
sub
subl
inc
and
pop
lcall
int
inc
iret
mov
mov
aad
aas
shrb
test
xor
or
in
mov
dec
inc
aas
xchg
mov
popf
push
sbb
cmpsl
push
push
xlat
cmc
fisttps
xchg
adc
in
imul
ret
push
mov
add
nop
sbb
inc
cmpsl
decb
stos
inc
cmp
shl
lahf
mov
test
jno
or
les
daa
ja
add
inc
xchg
sbb
xchg
or
push
lea
nop
mov
fistpll
add
in
jge
xchg
insb
sbb
jbe
pop
add
pop
lea
ds
push
ja
je
ss
xor
rol
ja
add
and
sbb
pop
scas
adc
aaa
insl
lea
mov
and
roll
jmp
sbb
loopne
lods
es
jo
pop
push
mov
fldl
jne
xor
and
jne
jae
xchg
xor
push
aas
je
and
pop
shll
cli
jl
dec
pop
and
inc
mov
nop
fisttpl
sbb
subb
out
sbb
push
movl
or
ljmp
jne
js
orb
or
and
dec
inc
pop
add
enter
rcl
sub
mov
sbbl
jle
or
mov
and
jae
test
jno
jns
add
daa
aaa
rclb
sub
daa
nop
movsb
repnz
fwait
jno
mov
or
and
jecxz
outsb
inc
pop
cwtl
add
xchg
jecxz
addb
je
add
xor
adc
mov
mov
jmp
outsb
outsl
rcl
jns
aam
add
and
cmp
or
pop
jp
inc
mov
or
stos
add
and
loopne
or
cmpsb
cmpsl
xor
add
and
jne
dec
mov
or
xor
ja
fbstp
in
mov
ljmp
and
repnz
movsb
mov
jno
mov
and
xor
pop
jo
addr16
or
add
leave
popa
ret
leave
add
nop
loopne
jmp
push
add
jbe
sbb
sbb
leave
sbb
mov
enter
pushf
clc
add
inc
mov
inc
repnz
imul
adc
xchg
lea
add
xorl
sbb
push
inc
icebp
fildl
jno
rcrl
sbb
loope
pop
xor
or
outsb
xor
mov
movsb
mov
push
push
sbb
loopne
mov
daa
dec
pop
push
ret
andl
inc
inc
inc
dec
or
imul
pop
xor
mov
inc
pop
shl
orl
adc
sbb
adc
jmp
push
in
in
add
shr
shrb
je
cmp
jmp
or
fiaddl
jo
test
in
test
movsb
roll
jecxz
test
sbb
imul
sub
dec
pop
out
in
cmp
mov
daa
outsl
and
movsb
jne
loop
mov
nop
or
jecxz
pop
stc
jbe
mov
lret
call
add
stos
add
or
jnp
ss
aam
dec
call
cwtl
or
jg
dec
mov
addb
scas
iret
xor
nop
push
or
inc
or
out
sbb
sub
icebp
sub
mov
mov
and
dec
out
insb
push
dec
call
mov
jge
cmp
unpckhps
outsb
hlt
out
sarb
lds
test
pop
loope
test
jbe
pop
sub
mov
push
imul
rorb
inc
fstp
add
hlt
xor
test
xchg
mov
ds
fcmovnbe
inc
lea
je
push
mov
push
adc
fst
sub
cwtl
daa
add
es
popf
divl
add
cltd
sbb
add
loopne
and
shl
ds
sbb
je
adc
rolb
clc
loope
ret
mov
push
call
add
cmp
sub
test
cmp
adc
or
adcb
push
rorb
lods
flds
mov
or
pop
push
and
xchg
push
adc
mov
sbb
mov
xchg
sub
xchg
sbb
push
sbb
mov
and
adc
sbb
out
lods
test
push
mov
jl
xchg
imulb
pop
sbb
or
push
aam
scas
roll
repnz
push
rcr
lea
and
aaa
fdivrs
add
movl
stos
dec
xchg
push
aas
sbbb
packuswb
fnstsw
push
stos
loopne
add
add
fidivrs
stos
xor
inc
aaa
push
pop
insl
or
mov
aam
pop
add
pusha
call
jmp
stos
dec
hlt
push
jp
stos
xchg
and
fsts
or
and
imul
mov
and
and
cmpsl
adc
or
cmpps
fchs
stos
cmp
adc
dec
neg
mov
call
cs
mov
or
pop
xor
lret
outsb
pop
and
xchg
fsubs
dec
push
test
call
mov
add
fld
adc
xchg
loop
fldcw
fldenv
ret
lods
fstps
inc
or
fxch
jne
loope
movsb
ljmp
dec
fstps
xor
jo
nop
fldcw
mov
aaa
pop
or
int
mov
xchg
ss
mov
dec
call
jno
nop
lcall
int3
mov
pop
and
fnstcw
push
xor
mov
mov
rcrb
mov
flds
fcomi
fsts
jp
rcrb
fldcw
inc
xor
adc
ret
pop
and
movsb
xor
loop
mov
jb
fldcw
adc
xchg
flds
testb
or
test
mov
mov
out
add
or
sbb
cmp
pop
adc
roll
jo
rol
push
push
xor
cmpl
jp
mov
and
adc
mov
adc
fldl2e
and
test
cmp
jbe
mov
rclb
and
add
push
popf
sbb
pushf
or
call
jo
mov
jo
inc
dec
sub
lds
movsl
or
test
cmp
or
out
out
mov
xlat
or
les
or
sbb
sbb
out
and
std
and
and
fnstcw
pusha
flds
sbb
push
mov
adc
daa
dec
lret
pop
and
flds
adc
fnstcw
push
mov
mov
aaa
loopne
xor
mov
mov
mov
insl
pop
cs
xchg
mov
dec
mov
cmpsb
mov
fstpl
test
mov
cmp
or
js
jecxz
sbb
pop
and
cmp
fs
addb
sbb
xchg
or
movsb
mov
inc
idiv
cmp
mov
pop
dec
mov
cwtl
cmp
sub
mov
arpl
leave
shl
xchg
mov
je
or
jge
xchg
in
inc
xchg
or
fiaddl
pop
pushf
dec
xchg
mov
sbb
fucomi
mov
pushf
and
mov
and
sbb
dec
cs
dec
adc
aas
fstpl
push
push
flds
or
xchg
jl
pop
dec
cmp
and
add
imul
or
loopne
inc
push
pop
cmp
dec
adc
inc
ss
sti
xor
adc
divl
xchg
inc
push
jmp
popl
jp
dec
insl
mov
jle
ljmp
dec
les
shlb
dec
inc
dec
adc
sbb
enter
pop
inc
mov
or
push
cmp
cmp
test
dec
fildl
aad
loopne
and
fiadds
sub
cld
dec
jae
orb
insb
je
push
dec
dec
pop
and
dec
ss
cwtl
insb
enter
fs
scas
push
and
add
jnp
sbb
or
add
cwtl
jnp
add
sbb
mov
sub
add
push
adc
pusha
mov
lea
fnop
bnd
sbb
movups
jmp
mov
xchg
or
adc
fs
inc
xor
adc
dec
test
mov
add
sub
aam
add
mov
dec
loop
adc
ret
mov
adc
mov
imul
or
pop
loop
pop
in
mov
dec
mov
loop
jmp
dec
sbb
movlps
mov
add
inc
call
mov
adc
cmp
mov
push
lcall
and
loopne
mov
pop
ljmp
icebp
pusha
cmp
rcrb
mov
mov
outsb
jno
pop
ret
nop
jge
xor
adc
test
mov
mov
ja
sbb
adc
push
bound
call
adc
in
outsl
jb
dec
call
cwtl
push
adc
sbb
push
adc
adc
xor
mov
or
test
call
ret
test
in
repz
xchg
stos
sub
mov
je
cwtl
push
mov
cmp
jmp
rcrb
push
xchg
rcrb
out
sub
outsb
ja
aam
or
inc
or
aas
push
mov
xor
call
xchg
aas
aad
ss
mov
adc
pop
stc
in
call
xor
clc
lret
xor
lock
das
pop
mov
call
divl
adc
inc
call
stc
repnz
call
movsb
lods
stc
repnz
call
pop
call
xchg
das
pop
mov
call
jo
repnz
call
js
pop
jl
push
fstl
rcrb
sbb
xchg
dec
movsl
adc
cmp
xor
nop
sbb
cwtl
add
jb
push
mov
xchg
xchg
lret
unpckhps
xchg
dec
in
ret
les
push
lods
int3
mov
dec
ja
xor
push
mov
loopne
cs
dec
in
pop
call
mov
lock
cs
dec
xor
es
sbb
repz
mov
add
add
leave
or
leave
gs
fisttpll
loope
adc
lret
sbb
sbb
movsl
jb
pop
and
xchg
lret
sub
xor
movsl
jb
jle
jae
test
cmp
inc
push
movsb
jb
jo
gs
dec
cmp
frstor
push
adc
mov
pop
push
inc
xchg
dec
add
jo
or
adc
mov
aam
lcall
ret
cmp
dec
mov
cwtl
sahf
scas
dec
push
call
je
je
rolb
xchg
data16
js
int
dec
xor
inc
sbb
xor
push
xor
mov
mov
daa
int
dec
mov
cmp
and
inc
dec
xor
test
inc
lods
in
ror
dec
cli
mov
dec
xchg
daa
int
mov
rcrb
push
popa
xor
mov
inc
or
add
jne
and
je
inc
fldl
adcl
adc
daa
daa
orl
cmp
dec
inc
pop
pop
xchg
test
leave
mov
sbb
test
pop
mov
adc
xchg
inc
add
push
adc
add
out
add
or
add
mov
pop
fstl
and
dec
adcb
jge
push
filds
jmp
dec
jge
fadds
push
jge
arpl
pop
cmp
mov
xor
xchg
or
inc
cld
push
jp
insb
pop
inc
cltd
mov
rcrb
mov
xor
negb
mov
xchg
das
xor
pop
les
sbb
dec
dec
add
cmpb
sub
pop
adc
adc
add
sub
aaa
push
push
dec
sbb
jno
xor
and
mov
decl
or
mov
test
adc
andb
pusha
enter
mov
inc
orl
jp
xor
mov
in
dec
push
mov
push
scas
je
xor
pop
push
or
rcll
inc
xor
add
inc
xor
xor
mov
andb
xor
or
and
xchg
sub
mov
sbb
xchg
repnz
xor
fs
mov
push
cwtl
rcrb
push
aaa
inc
mov
push
mov
cmpsl
push
arpl
lods
mov
jne
cmp
and
sub
flds
fucomp
inc
cmp
mov
cmpsl
inc
jne
rorl
jg
out
bound
test
xor
gs
mov
pop
adc
jecxz
push
jae
rclb
adc
mov
and
cltd
pop
cmp
mov
pop
cmp
xchg
mov
pop
mov
pop
or
push
mov
pop
cmpsb
fs
pop
fwait
dec
mov
sub
cs
cmp
je
mov
fs
jo
mov
call
das
push
mov
dec
push
lret
xchg
mov
loopne
pop
inc
xorb
dec
jmp
lret
xchg
dec
adc
xor
pop
mov
add
sub
xchg
outsb
mov
dec
jmp
xor
push
mov
pop
mov
xchg
out
adc
sub
add
jle
xor
push
xor
and
cs
pusha
pop
cmpsb
pop
cwtl
movntq
add
xchg
xchg
push
mov
and
xor
cmpb
out
pop
and
pop
push
jb
fwait
shlb
popa
and
adc
or
out
rorl
adc
dec
and
adc
dec
and
sbb
call
adc
fstl
sub
jno
and
fwait
lods
dec
call
inc
inc
arpl
popa
les
roll
xchg
aad
inc
imul
pop
push
fwait
pop
loop
les
xchg
add
mov
inc
push
ret
push
xchg
cmpsl
int
nop
addr16
or
gs
cmpsl
add
gs
sbbl
cmpsl
dec
sahf
adc
mov
dec
jo
nop
cmpsl
lret
xorb
push
adc
mov
movsb
lds
add
dec
mov
nop
mov
jne
xchg
xchg
xchg
mov
andl
and
imul
pop
lods
loopne
dec
aaa
shlb
aad
mov
dec
loope
sub
cmp
and
cs
xor
lds
mov
dec
mov
or
jge
addr16
sbb
mov
addr16
and
or
nop
xchg
negl
mov
jnp
dec
push
mov
lea
lcall
stos
xor
xchg
outsb
or
js
mov
out
sub
sbbb
xchg
bound
cmp
rclb
insb
inc
ja
xchg
add
outsb
mov
cwtl
adc
sbb
xchg
jl
add
xchg
popa
pop
mov
xchg
pop
inc
cmp
pushf
loopne
fs
les
adc
inc
notb
add
add
imul
xor
lods
bound
sub
pop
sub
nop
fcoms
lock
push
xchg
dec
pop
add
jmp
mov
pop
test
push
cld
add
add
pop
push
sbb
imulb
or
sbb
cld
jb
or
out
push
mov
dec
push
pop
or
add
mov
add
adc
test
push
adc
das
dec
inc
and
and
inc
and
and
cmp
mov
sbb
or
jo
or
add
call
icebp
andb
xor
or
adcl
sub
shrb
mov
into
or
inc
jle
pusha
nop
pop
mov
fcoml
dec
out
inc
loope
nop
sbb
cmp
add
adc
lea
or
add
dec
or
inc
sbb
dec
andl
adc
rolb
push
pop
fimull
add
jo
cmp
and
push
inc
aaa
adc
push
addb
push
xor
pop
jnp
cmp
cmp
add
cmp
pop
jmp
addl
dec
shrb
nop
jno
nop
xchg
mov
add
nop
popa
sub
add
shll
imul
sbb
sarb
stc
xor
shl
mov
jno
push
pop
adc
test
in
push
xchg
sub
adc
mov
dec
imulb
call
ror
or
adc
push
jp
fadds
mov
dec
jge
pop
cld
sahf
jg
push
mov
call
outsl
nop
dec
mov
mov
movsb
xchg
shr
mov
pop
sub
inc
dec
or
je
push
scas
pop
pop
inc
push
mov
nop
dec
cmp
and
or
cmp
lods
mov
lock
daa
mov
or
fwait
adc
nop
cmp
push
add
xor
adc
adcl
add
xor
push
addb
jo
push
mov
xchg
cmp
xor
xor
jne
rolb
inc
adc
leave
stos
sahf
adc
dec
leave
push
add
inc
adc
jo
enter
pop
adc
aam
cmp
mov
jb
adc
or
jmp
subb
or
inc
dec
push
aad
popf
popa
push
popf
pop
mov
adc
mov
je
push
call
out
mov
mov
leave
xchg
out
pop
pop
pop
xchg
sub
aaa
cltd
rcrb
push
push
fs
pop
xchg
and
dec
insb
movsl
hlt
cld
sbb
jb
aam
xchg
add
cmp
adc
add
cwtl
push
lcall
ss
rolb
push
mov
jb
push
push
jne
sub
add
sti
fwait
repz
adc
aam
push
mov
jo
xor
outsb
fdiv
stos
xlat
fwait
push
jnp
sub
sbb
mov
dec
mov
inc
dec
lea
call
icebp
add
fwait
insl
push
or
adc
jo
fldt
test
mov
and
loope
shl
jge
or
divb
or
sbb
lcall
adc
roll
addr16
push
stos
xchg
inc
push
inc
out
rcrb
or
mov
or
mov
and
ret
cmp
movsb
repz
mov
lret
out
call
rep
ret
jne
out
xorl
cmp
jo
cltd
mov
test
dec
mov
push
cs
inc
push
and
xchg
out
sbb
xor
out
cltd
rorb
jo
mov
sbb
or
jmp
dec
out
scas
push
inc
jmp
int
or
sbb
push
or
adc
fwait
dec
mov
adc
iret
pop
repz
inc
cmp
add
and
or
jns
out
sbb
ret
sahf
out
sahf
mov
push
ds
int
jns
or
sbb
aam
fcmovnu
repz
push
mov
pushf
pop
push
lods
push
mov
int3
loop
push
inc
push
push
mov
jns
sub
push
nop
movsb
push
push
xchg
repz
repz
push
inc
ss
repz
pop
dec
cmp
ds
repz
repnz
fsubrp
jns
out
mov
ret
out
jnp
pop
into
sbb
incb
add
es
lcall
sbb
sahf
out
mov
repz
pusha
sbb
pushf
scas
lret
repz
cld
or
and
sahf
out
inc
pop
data16
out
sahf
out
sahf
lods
mov
jns
jns
fsubrp
decb
ss
inc
xor
out
shr
jb
data16
ja
jle
sahf
mov
daa
rol
loop
sti
fdivp
push
clc
adc
sub
cmp
aaa
je
jns
ja
fs
push
cmp
adc
fidivrl
pop
daa
pop
mov
jbe
add
jae
jbe
push
cwtl
cmpsl
insl
mov
xchg
out
iret
dec
test
outsl
cwtl
imul
fnstcw
test
scas
test
les
push
mov
out
mov
pop
cmp
pop
out
fbld
sbbb
jbe
jle
sub
inc
xchg
sub
inc
ret
and
xlat
or
dec
push
je
mov
fwait
push
inc
mov
push
ja
ret
daa
xchg
dec
and
addl
mov
and
daa
xor
pusha
enter
jae
mov
ss
xor
add
inc
pop
js
bound
add
push
xor
jns
fisttpll
sub
pop
adc
dec
cmp
mov
outsb
aas
das
sub
xchg
aaa
or
mov
out
mov
jae
and
dec
arpl
sub
les
test
in
sarl
push
pcmpeqd
cmp
sbb
or
movsl
inc
insb
jmp
dec
and
sbb
mov
cmpl
pop
bound
mov
daa
add
sti
test
sbb
mov
jg
or
ret
je
aad
add
arpl
gs
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
push
push
out
rorb
inc
loop
pop
inc
jo
rclb
cli
or
xor
jae
ficomps
imul
cmpsb
jo
inc
jne
outsb
je
shlb
in
arpl
xor
fcmovnu
scas
les
jnp
inc
xor
sub
sub
inc
sti
in
sub
inc
inc
xor
xor
xor
jge
mov
fstpt
xor
cmp
inc
stos
xor
ss
xor
cmp
fsubl
mov
xor
clc
inc
inc
xor
mov
aam
out
add
out
inc
cwtl
jne
test
sbb
cmp
cmp
xor
push
in
jg
in
xor
or
push
and
inc
aaa
adc
les
inc
pop
dec
push
adc
or
mov
push
popa
out
aaa
cld
stos
xor
dec
and
cmp
ss
inc
pusha
mov
pushf
xor
add
aam
cmp
mov
dec
pop
xor
ds
in
scas
push
push
sub
hlt
imul
aaa
test
pop
push
out
pop
mov
jle
out
inc
out
adc
push
sub
out
popf
out
push
das
jmp
divb
add
movd
fsubr
cmpsb
push
hlt
adc
dec
mov
mov
add
jg
push
mov
and
jo
ss
insb
outsl
xor
imul
fs
inc
je
push
push
jns
rclb
mov
push
inc
cmp
add
jbe
in
cmp
sbb
xchg
xchg
test
and
xor
adc
cs
std
inc
arpl
sbb
insb
mov
xchg
and
outsb
ret
lcall
cltd
js
add
dec
or
xor
or
pop
sysenter
adc
cmp
sbbl
pop
xorb
repz
mov
cwtl
mov
push
jp
ficoml
out
dec
mov
dec
popa
jae
push
je
and
inc
push
imul
test
jne
add
loopne
jns
mov
pop
subl
mov
gs
cmp
ret
ss
popa
fs
jo
movsl
dec
cmp
jecxz
mov
add
push
sub
mov
movsb
jmp
pop
dec
jae
outsl
push
pop
arpl
mov
cs
push
push
push
add
rcll
je
dec
sub
outsb
outsl
push
popa
imul
outsb
popa
incb
sbb
fadd
lods
cwtl
add
and
add
add
push
sbb
and
sub
adc
push
or
inc
rolb
or
inc
add
pusha
aas
ret
andl
jle
pushf
add
sbb
push
jg
xchg
adcb
cmpsl
sub
mov
popa
sub
xchg
fs
inc
incl
mov
test
fadds
adc
subb
repz
or
add
add
mov
push
adc
sahf
out
dec
xchg
adc
push
sbb
sbb
iret
sarl
sbb
call
imul
xor
jae
nop
cld
and
cli
js
xor
cld
stc
jp
push
cld
xor
repz
mov
cmpsl
sbb
pop
jbe
add
scas
push
pop
mov
and
pop
push
adc
ret
dec
int3
orb
stos
or
ds
cmp
cmp
xchg
es
es
addr16
popa
add
adc
push
iret
repz
cld
or
in
int3
les
into
repz
mov
dec
repz
xor
mov
out
push
mov
sahf
out
push
pop
cmp
repz
push
dec
dec
inc
out
lret
cmp
xor
sahf
out
sahf
sub
and
sbb
jns
out
adc
or
add
cmp
out
cld
or
hlt
call
enter
ds
repz
push
xor
lock
jns
out
int3
mov
insb
inc
repz
out
sbb
cld
push
iret
repz
fcom
les
cmp
sub
aam
mov
xchg
jo
sbb
add
iret
jnp
jg
push
int3
push
mov
es
inc
xor
mov
pop
cmp
lret
icebp
mov
inc
xlat
nop
js
xor
sub
mov
inc
inc
add
adc
adc
out
push
inc
dec
cmp
pop
mov
mov
pop
and
or
adc
adc
mov
xor
pop
push
jecxz
add
cmp
loopne
mov
sub
cli
out
pop
adc
xchg
movhlps
push
dec
or
dec
push
jno
aad
push
ja
mov
push
jmp
or
popw
and
sub
fildl
jno
push
sbb
pop
insl
popf
ret
jae
test
decl
xchg
add
ljmp
adc
stos
xchg
icebp
or
mov
loop
pushl
mov
shrb
inc
mov
dec
ret
jns
sbb
sub
subb
data16
das
push
inc
push
xor
mov
gs
inc
mov
jnp
out
psrad
jg
add
or
xchg
xchg
sbb
je
cli
pop
ret
jne
imul
or
dec
fidivs
arpl
pop
adc
outsl
mov
jo
push
gs
push
or
jo,pn
bound
stos
dec
add
pusha
cmp
xor
mov
cs
inc
push
push
push
insb
das
pop
inc
mov
mov
and
mov
pop
cwtl
lahf
add
das
out
add
popa
add
loopne
out
adc
mov
mov
sbb
sbb
popf
nop
outsl
dec
data16
nop
pop
sbb
jg
dec
enter
push
cmp
lds
ret
pminub
cltd
fcoms
jg
pop
add
add
ret
pop
and
xlat
jns
mov
jecxz
rcr
or
mov
sti
cltd
ss
lcall
sbb
push
test
adc
or
push
popf
jl
loopne
aad
in
push
aas
xor
test
sbb
ret
lcall
inc
es
aaa
mov
adcb
inc
aam
aas
vmptrst
inc
mov
enter
sbb
cmp
outsl
pinsrw
and
xchg
fcmovnbe
mov
aas
sub
in
shufps
loope
adc
fs
pop
mov
xchg
dec
mov
push
xchg
and
mov
lock
enter
mov
rorl
loope
jb
stos
xchg
xor
lods
adc
jnp
mov
mov
sbb
cltd
xor
sahf
inc
inc
and
and
je
dec
imul
shlb
add
cltd
stos
push
jb
push
lcall
scas
pop
push
and
and
inc
push
push
push
add
push
jmp
xor
xor
jle
sbb
push
sub
add
sbb
es
daa
pusha
in
xor
movsb
and
and
add
cmc
into
or
daa
outsb
inc
lods
push
lret
mov
ljmp
mov
pop
mov
bound
mov
push
dec
push
jb
adc
mov
faddp
in
add
insl
jo
dec
pop
outsb
push
jnp
cmp
add
add
fisubs
fstl
mov
insl
std
push
popa
jae
push
jae
push
xor
adcl
ret
mov
or
test
jb
inc
mov
xchg
fidivrl
sub
xchg
mov
push
inc
sbb
xor
out
addb
add
xor
and
add
mov
mov
inc
push
sbb
pop
das
push
mov
dec
or
cmp
push
jo
xor
imul
sub
lret
test
movsb
sbb
cmp
push
lods
cmpsl
or
add
sbb
imulb
leave
cmp
push
aaa
into
inc
imul
inc
mov
inc
jmp
insl
inc
pusha
inc
and
or
pop
cmp
sub
and
and
mov
cmp
push
sbb
add
sub
ja
fisubl
sub
add
fbld
jne
mov
jnp
or
inc
rolb
lods
jp
inc
loopne
mov
pop
mov
scas
xchg
and
xchg
mov
jecxz
sbb
pop
mov
sub
fs
lahf
icebp
cltd
mov
xor
dec
add
push
xchg
icebp
popf
xor
loope
inc
cs
fadd
push
adc
jle
sub
push
call
outsb
adc
lahf
outsb
add
ret
adc
dec
add
pusha
scas
mov
aas
das
pop
mov
mov
shlb
inc
add
stc
add
push
lcall
orb
push
pop
mov
mov
xor
mov
js
dec
dec
dec
pop
addr16
fisubrl
lds
arpl
lds
inc
imul
lret
sbb
push
outsl
std
xor
loope
and
roll
push
mov
in
pop
add
cmpsb
je
movsl
cmp
mov
lock
add
mov
rol
movl
jb
add
sub
ret
icebp
mov
xchg
adc
arpl
lods
cmp
das
push
aaa
cmpsb
xor
push
dec
inc
dec
pop
or
aas
inc
int3
and
jecxz
mov
jnp
push
nop
out
mov
stos
enter
jmp
gs
xor
inc
adc
inc
sarl
mov
stos
add
dec
and
add
add
xchg
xor
pop
inc
dec
andl
sub
add
adc
dec
pop
data16
push
jo
jno
cmp
jnp
imul
arpl
scas
into
pop
roll
in
cmp
adc
xchg
cmpsl
pusha
inc
leave
xor
add
mov
mov
add
adc
fcmove
pop
xchg
jmp
lret
xchg
ss
in
inc
cmpsl
add
hlt
gs
push
push
push
mov
push
shl
loop
ret
push
and
or
insb
jo
cld
inc
jae
adc
add
je
mov
add
push
orb
add
add
mov
sub
mov
jecxz
sarb
into
insb
sbb
mov
dec
jle
nop
cwtl
push
jae
inc
xchg
or
imul
cmp
lret
fbld
pop
sbb
out
sbb
stos
xor
push
std
fwait
xchg
jge
inc
andb
cwtl
aam
push
movsl
fldenv
jle
popl
add
in
aam
inc
jp
add
jae
pusha
loope
fisttps
ds
jge
pop
push
insb
push
sbbb
push
and
push
punpcklbw
repz
pop
and
add
std
jo
inc
pop
jns
sub
pop
dec
mov
mov
adc
sbb
dec
add
push
mov
imul
add
js
fsubrl
xor
fs
pop
push
sbb
rorb
cmp
scas
adc
mov
add
xchg
adcb
adc
inc
and
and
fs
mov
push
and
or
scas
inc
mov
push
adc
iret
repz
or
clc
out
jns
out
lock
jns
out
mov
iret
repz
test
pop
mov
cmp
pause
mov
leave
push
inc
sahf
out
sahf
cmp
and
sbb
xchg
adc
cld
in
lock
out
sub
call
ror
jns
out
sarb
sahf
out
pusha
push
cmp
sahf
out
sahf
sub
sbb
or
cmp
sarl
hlt
in
in
int
iret
repz
mov
xchg
iret
repz
push
mov
js
push
inc
sub
lahf
out
jle
sbb
loopne
push
adc
xchg
andb
sbb
or
jne
cmpsl
sbb
mov
mov
cmp
mov
rol
mov
pmuludq
mov
dec
not
lock
adc
push
jo
nop
rcr
sahf
data16
fidivrs
je
and
jp
and
adc
add
sti
insl
and
mov
pop
inc
dec
pop
xor
sbb
pusha
inc
adc
add
mov
daa
movl
lahf
dec
or
nop
data16
das
sbbb
dec
add
dec
fstpt
dec
push
pop
jo
add
in
mov
inc
mov
push
dec
inc
andl
or
aam
rorb
cmp
insl
xor
ljmp
xchg
cmp
mov
and
jbe
and
xchg
cld
fbstp
add
and
or
je
adcb
or
xor
jae
mov
jb
pop
and
add
shll
imul
sbb
cmp
mov
sub
and
xor
add
adc
add
push
pop
jne
es
xor
sti
mov
popa
insb
into
sub
dec
mov
or
das
sti
ss
add
push
mov
lahf
ds
inc
add
inc
inc
add
fistpl
adc
fcmovnbe
add
les
xor
sbb
bound
loopne
sbb
das
xor
xorb
xor
xor
xor
ljmp
xor
xor
xor
movsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
xor
dec
xor
xchg
shll
inc
ss
ss
incl
aaa
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
dec
cmp
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
sbb
cmp
sub
ret
add
push
lock
idivl
jmp
add
adc
and
dec
xor
xor
outsb
xor
mov
popf
xor
xor
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
out
xor
inc
sar
jge
mov
xor
xor
fidivl
scas
xor
rclb
clc
pushl
jecxz
call
xor
cmp
pushl
cltd
ss
ss
ss
aaa
sbb
jno
mov
aaa
loopne
call
or
ret
cmp
loopne
jmp
push
cmp
or
cmp
cmp
cmp
push
cmp
jl
cmpl
mov
jmp
aam
fimuls
adc
cmp
cmp
cmp
cmp
pop
cmp
mov
jmp
cmp
cmp
incb
call
das
jo,pt
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
pop
or
std
out
jmp
repz
andl
xor
xor
xor
xor
jl
mov
mov
xor
xor
ljmp
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
pop
xor
jo
xchg
xor
xor
out
es
xor
xor
xor
xor
xor
xor
push
mov
sub
ss
clc
loop
cmp
cmp
cmp
mov
mov
inc
cmp
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
ret
fwait
xchg
aas
inc
aas
pop
aas
ja
pusha
jg
and
pop
push
or
cmp
pop
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
jmp
incl
cmpsb
push
xor
xor
lcall
jg
clc
xor
xor
test
mov
mov
nop
xor
out
in
xor
xor
clc
xor
cmp
pop
fildll
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
jp
cmp
cmp
std
cmp
cmp
loop
lds
push
lcall
das
cmp
decl
ds
aas
jmp
ljmp
outsb
xor
xor
mov
ss
ss
xchg
cmp
cmp
test
lods
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
ljmp
mov
cmp
cmp
cmp
cmp
adc
dec
inc
inc
aas
push
mov
cmpb
aas
sarl
aas
in
out
out
in
pop
pop
lcall
movsb
xor
add
das
pop
cld
xor
xor
xor
fisubrl
xor
ljmp
and
xor
xor
mov
xor
xor
aas
cli
scas
std
xor
cmpsb
data16
ss
add
or
aaa
and
lods
loopne,pn
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
xchg
std
aaa
cld
decl
int
repz
xor
cmp
xchg
outsl
cmp
mov
call
xor
pusha
cmp
mov
cmp
cmp
sbb
push
cmp
inc
lock
mov
add
push
cmp
sbb
cmp
std
push
incl
stos
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
clc
push
cltd
sbb
jbe
adc
sub
xor
cmp
ljmp
cmp
dec
cmp
push
cmp
insl
cmp
js
cmpl
mov
xlat
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
jg
xor
cmp
pop
cmp
mov
cltd
cmp
scas
cmp
jg
cwtl
ds
ds
jecxz,pt
out
ds
das
aas
cmp
je
cmp
aas
jge
mov
movsl
aas
stos
aas
mov
mov
shlb
pop
xor
lcall
sahf
xchg
les
fidivl
in
jmp
xor
xor
xor
xor
mov
xor
xor
xor
xor
ljmp
xor
xor
xor
mov
jl
cmpsl
xor
xor
jge
sbb
lcall
xor
xor
ja
xor
cmpsb
xor
xorb
aaa
fwait
sahf
cmpsb
jmp
sbb
scas
cmp
outsb
subb
cmp
cmp
mov
xchg
cmp
mov
sbb
nop
cmp
cmp
cmp
ljmp
mov
jle
push
or
xor
clc
lcall
cmp
bound
data16
push
outsb
aaa
jb
jbe
xchg
ja
cmp
jge
cmp
cmp
cmp
cmp
cmp
cmp
jle
inc
add
jbe
cmp
sbb
ds
ds
pop
mov
aas
push
mov
insl
decl
mov
xor
xor
xor
jl
jg
push
scas
fiadds
aaa
ret
add
aaa
repnz
or
cmp
pop
cmp
jge
mov
cmp
fsubrp
cmp
cmp
jbe
xchg
cmp
cmp
cmp
sti
mov
cmp
cmp
cmp
fdivrs
push
aas
jne
jmp
or
mov
fwait
xor
mov
shlb
xor
dec
or
repnz
xor
xor
divl
pop
xor
fdivr
mov
ss
dec
ss
outsb
notb
ss
sbb
fidivl
in
and
cmp
cmp
cmp
mov
pop
mov
sbb
cmp
jg
sub
push
imul
cmp
test
mov
ljmp
or
cmp
dec
cmp
cmp
cli
mov
cmp
cmp
cmp
jp
mov
cmp
cmp
pop
sarb
sub
push
push
inc
cmp
orb
push
mov
push
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
addr16
mov
rol
decl
or
xchg
xor
xor
pop
xor
xor
jg
clc
xor
xor
xor
xor
xor
xor
xor
mov
xor
push
xorl
add
xor
ds
dec
aaa
pop
aaa
js
mov
stos
std
pop
loopne
cli
fidivl
out
in
aaa
cli
aaa
mov
cmp
mov
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
incb
dec
cmp
cmp
adc
jbe
cmpl
cmp
cmp
icebp
lcall
adc
and
pusha
aas
cmpb
aas
fdivrl
loop
out
out
pop
aas
icebp
push
xor
adc
ljmp
xor
loop
xor
xor
jg
xchg
xor
xor
xor
mov
mov
add
ljmp
jbe
loopne
adc
adc
sbb
sbb
pushl
sub
sub
nop
cmp
mov
cmp
cmp
cmp
cmp
cmp
fdivrl
test
out
xor
incl
cmp
inc
xor
or
lock
lcall
orl
mov
aaa
inc
sarb
xor
xor
xor
cmp
sub
sub
xor
cmp
inc
cmp
and
decb
dec
cmp
push
rcrb
cmp
call
fidivs
cmp
cmp
adcb
ret
ficoml
mov
enter
jge
scas
mov
cmp
cmp
mov
cmp
inc
lock
aad
push
push
dec
cld
push
add
or
adc
cmp
stos
sbb
and
and
sub
sub
xor
clc
jecxz
fidivrs
inc
cmp
cmp
pop
cmp
aas
sahf
cmp
insb
cmp
je
jl
cmpb
cs
cs
mov
nop
xchg
cwtl
decl
mov
push
mov
aas
inc
mov
push
aas
push
loope
ret
xchg
aas
cwtl
aas
lods
aas
mov
shrb
aas
fdivrs
loopne
clc
push
sti
shlb
push
or
xor
xchg
xor
mov
sbb
and
inc
xor
xor
cwtl
xor
jmp
enter
cs
rorl
mov
xor
mov
jb
out
jle
inc
xor
andb
add
leave
fimuls
xor
ss
sahf
int3
clc
aas
std
pushl
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
inc
fidivrl
or
or
adc
adc
jg
mov
and
and
sub
sub
xor
cmp
cmp
inc
aaa
inc
aaa
dec
call
lcall
jb
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
or
nop
aaa
xchg
aaa
cwtl
into
mov
call
loope
dec
mov
mov
mov
aaa
enter
rorb
dec
cld
aaa
aam
fdivs
fcompl
in
loop
test
xor
aaa
hlt
add
or
rclb
cmp
sbb
cmp
out
ret
fdivrl
call
clc
ss
inc
js
pop
cmp
cmp
cmp
cmp
es
cld
in
ljmp
cmp
cmp
cmp
cmp
cmp
push
cmp
subb
cmp
mov
cmp
cmp
mov
cmp
push
add
mov
push
rcrb
push
add
jg
in
aas
repnz
movsb
fs
lret
lods
pop
push
aaa
cmpsb
punpcklbw
icebp
test
mov
aaa
mov
aaa
stos
mov
push
pop
out
test
aas
push
aaa
mov
shlb
out
imul
mov
add
dec
push
push
out
adc
inc
add
adc
add
mov
pushf
addl
inc
adc
xor
sub
test
pop
sbb
out
leave
or
addb
and
push
dec
add
out
insb
out
das
sbb
sbb
or
xorb
dec
loopne
and
test
out
push
mov
and
adc
out
fs
cmp
add
add
daa
sub
xchg
pusha
aas
lret
mov
mov
daa
sbb
push
imul
movsb
scas
bound
sub
addb
xchg
pusha
pop
xchg
gs
or
xchg
ss
inc
iret
mov
shll
pushf
dec
jmp
adc
push
sbb
outsl
popf
jle
call
call
cmpl
xchg
imul
idivb
push
sub
je
jae
xor
or
bound
jle
std
inc
or
add
jl
or
incl
jb
adc
cmpsb
xor
and
add
adc
fmull
adc
fcoms
mov
adcl
jbe
inc
sub
aam
aas
shlb
dec
pop
test
es
popa
add
pop
dec
jmp
mov
pop
jmp
ljmp
sub
or
add
movsl
mov
popa
or
std
push
and
or
adc
aam
mov
cmp
or
in
lcall
add
or
add
pusha
push
mov
add
push
add
adc
pop
insl
add
adc
fidivs
mov
std
cmpsb
push
or
sahf
add
lret
cmc
ror
xchg
into
mov
rcr
call
or
inc
cmp
jne
divb
adc
mov
pop
jmp
push
cmp
call
inc
dec
cld
xor
mov
xchg
call
sub
cltd
sub
or
inc
xchg
or
das
push
fiaddl
adc
nop
je
cltd
adc
dec
add
pop
push
add
dec
add
and
mov
xor
pop
add
pusha
test
mov
or
in
scas
adc
or
mov
jl
xor
adc
pushf
loope
and
cmp
adc
sub
cmpsl
and
cld
pop
fldl
or
clc
or
push
lods
mov
pause
fstpt
adc
cmp
xchg
pop
clc
push
pop
orb
pop
cmp
or
or
leave
jo
adc
cmp
push
test
or
ljmp
mov
outsb
and
or
ljmp
je
adc
shll
fcoml
mov
js
jecxz
pop
add
nop
adcb
fisubl
int3
ja
fimuls
inc
xor
jecxz
pushl
cli
add
fwait
dec
cmpb
lret
andb
push
ss
mov
pushf
mov
je
or
subl
jne
adc
push
adc
mov
mov
jmp
rcr
add
fwait
cmp
sbb
add
mov
mov
fwait
loop
sbb
sarb
int3
imul
dec
xchg
or
add
fcmovnbe
leave
inc
pop
daa
push
xor
adc
les
pop
fstpt
cmp
or
cmp
and
add
inc
adc
add
mov
pushf
mov
test
cmp
enter
push
xchg
xor
mov
sbb
cmp
cmpsb
sub
or
sub
or
sub
inc
sub
testl
add
test
push
jge
sub
cmp
mov
lahf
repz
fs
addl
inc
or
cmp
or
cmp
aas
pushf
xchg
mov
cmp
aas
je
dec
and
dec
and
fldl
test
mov
rcrb
gs
add
inc
add
mov
add
add
add
adc
aas
cmc
mov
adc
pop
pop
or
nop
and
xchg
pop
pop
les
and
testl
cmc
clc
push
cli
loop
aaa
adc
and
je
adc
nop
ss
inc
dec
sub
cmpsb
orb
imul
xchg
pop
cli
sbb
push
and
testl
pop
pop
js
jl
dec
jge
jnp
mov
adc
mov
push
mov
ret
call
call
inc
pop
sahf
jbe
mov
inc
and
push
inc
xchg
aaa
mov
push
les
cmp
xchg
lods
sti
pop
call
leave
jb
cwtl
cs
dec
jmp
sub
test
sbb
call
add
pop
es
in
adc
and
test
add
pop
mov
jge
call
push
add
inc
jl
add
add
pop
and
dec
adc
push
outsb
add
pop
fwait
stc
sbb
and
gs
pusha
sub
gs
add
das
in
or
pop
mov
mov
add
movsl
xor
gs
mov
fistps
adc
or
fstpt
mov
mov
or
sbb
adc
ficoml
or
inc
sbb
sbb
adc
dec
or
repz
fidivrl
add
inc
stos
add
adc
fcmovu
cmp
mov
xor
mov
cmp
mov
pop
fistl
sti
or
fldt
andb
and
insb
push
push
push
sbb
inc
shl
jne
cmp
mov
ret
pop
xor
hlt
xorb
adc
mov
lret
or
sub
daa
jae
out
add
pop
aam
ljmp
out
fldlg2
movsb
and
cmp
mov
dec
lret
es
add
daa
fldl
mov
push
dec
jg
fidivrs
je
insb
fs
jns
out
push
dec
inc
xchg
push
sbb
cmp
sar
test
mov
ja
cmp
sub
lret
jg
and
ja
sbb
xor
pop
nop
inc
cmp
notl
fs
mov
push
add
jmp
push
repz
outsb
mov
lock
cmpsl
cmp
clc
cmp
or
and
pushf
xchg
gs
jns
fwait
and
or
push
lods
add
xlat
push
inc
xchg
cltd
jle
mov
mov
xchg
mov
mov
and
jb
popa
hlt
and
addr16
xchg
mov
in
cltd
clc
adc
add
cmpsb
pusha
les
pop
push
mov
mov
pop
or
leave
repz
stos
sub
call
adc
ret
push
ret
pop
mov
sub
lcall
mov
daa
es
daa
pop
and
es
daa
or
add
daa
daa
imul
inc
lcall
xor
daa
daa
daa
daa
daa
test
add
sub
out
sub
sub
sub
and
sub
sub
shlb
sub
cmpsb
test
sub
addl
cmpsl
and
dec
testb
and
cmp
cmp
test
inc
andl
adc
sbb
add
inc
stos
fcomi
subb
js
lods
andl
fldl
inc
sbb
mov
pop
cmc
push
int
xchg
push
jp
or
clc
fs
dec
enter
sbb
pop
add
nop
call
psubsb
cwtl
adc
inc
sub
jo
call
push
add
inc
sub
and
add
add
mov
sub
cs
addr16
dec
mov
sub
cwtl
push
nop
addr16
jle
push
nop
dec
bound
pop
inc
inc
mov
xchg
in
je
subb
data16
rolb
adc
cmp
addr16
addr16
dec
test
imul
push
shlb
sahf
xchg
test
xor
data16
popf
filds
mov
cmp
or
add
inc
inc
addr16
adc
adc
ret
call
xor
addr16
test
xchg
cltd
mov
inc
inc
mov
jp
inc
loopne
jmp
or
inc
mov
test
mov
mov
in
loop
mov
addb
test
mov
push
adc
aas
jl
cltd
cwtl
pop
push
call
nop
add
ljmp
push
les
dec
add
cltd
mov
xor
enter
cltd
or
cwtl
mov
cltd
pop
xorb
nop
cltd
pop
sbb
push
adc
sbb
cltd
sbb
insb
aaa
or
sti
sbb
test
adc
cltd
outsl
and
push
adcb
xchg
and
addl
xchg
pop
cltd
faddl
and
aam
adc
adc
push
or
mov
popf
pop
jae
mov
insb
push
scas
mov
push
xor
jae
jne
cs
jmp
outsb
adc
sbb
mov
fstl
gs
icebp
push
test
and
push
or
fidivrl
rorb
adc
sbb
aam
bound
jae
mov
pop
les
jno
lds
lea
loopne
pop
cmp
inc
insb
push
mov
ljmp
mov
into
stos
mov
mov
mov
in
cmp
loopne
inc
or
push
aaa
add
push
jne
insb
jno
jbe
sub
jno
in
fiadds
test
fstl
jl
cs
daa
add
inc
jo
leave
inc
pop
aam
inc
pop
and
inc
adc
adc
bound
ss
enter
lea
push
ja
adc
adc
pop
cwtl
fs
inc
inc
enter
insb
push
sub
fsubs
or
sub
mov
es
xchg
pop
les
jne
add
mov
jmp
imul
or
sarl
mov
mov
pop
rol
and
dec
lret
movsb
pop
arpl
mov
push
add
or
pop
aas
icebp
addr16
xor
sub
nop
pop
xchg
sbb
repnz
mov
mov
enter
inc
pop
pop
sub
and
mov
or
add
pop
and
inc
pop
mov
xor
adc
pop
push
shlb
sbbb
xchg
add
popa
lock
jnp
add
inc
xor
xor
jb
xchg
pop
push
ds
add
fbld
loope
sub
testb
pop
push
jns
divl
mov
or
xchg
cltd
sbb
xchg
xchg
xchg
xchg
xchg
cmp
inc
pop
xchg
xchg
xchg
xchg
inc
dec
dec
inc
inc
cmp
and
mov
pop
pop
pop
mov
sub
pop
push
call
rcrb
jo
cmp
dec
adc
cmp
fdivrs
fdivs
lds
pop
and
xorl
out
test
dec
or
jmp
mov
push
flds
movsb
and
dec
sbbb
in
sbb
cmp
movsb
addb
and
dec
sub
sbb
mov
cmp
xorl
jno
cmp
ja
mov
add
test
lock
jl
movl
dec
mov
pop
xor
std
call
nop
pop
push
xorl
call
inc
cmpsl
add
inc
ds
adc
mov
sub
inc
xchg
pusha
pop
cmpsb
cmpsl
in
insb
ljmp
xchg
arpl
pushf
sbbb
int3
fsubl
xchg
mov
push
add
arpl
xchg
insb
lret
or
and
push
int3
pop
inc
dec
push
enter
fsubl
pop
loope
ljmp
pop
and
mov
push
lea
inc
loope
mov
mov
adc
push
mov
repz
rorb
sbb
add
add
mov
inc
add
mov
insb
cmp
faddl
adc
pop
nop
inc
dec
int3
sbb
add
bound
or
loopne
sahf
sub
sbb
push
or
add
pushf
dec
fmul
xor
test
sbb
das
inc
cwtl
popa
cmp
loopne
in
scas
xchg
imul
addr16
in
add
in
or
add
daa
rclb
frstor
dec
daa
sub
add
jecxz
jmp
adc
xchg
dec
cmpsl
or
daa
jnp
in
mov
daa
fwait
rcrl
add
and
mov
lea
testl
and
cltd
mov
dec
inc
xor
push
sti
dec
mov
daa
leave
mov
xlat
sarl
cmp
sub
push
and
outsl
adc
lret
shrl
sar
adc
loopne
stc
cltd
mov
push
cld
lds
ret
push
push
inc
jmp
aaa
and
cmpsb
cwtl
cltd
mov
adc
sbb
popf
fisttpll
pushf
xchg
iret
and
mov
push
or
xchg
mov
daa
and
ljmp
add
push
out
cld
loope
mov
xchg
sbb
stos
jmp
leave
xchg
push
jle
add
pop
xchg
xchg
mov
or
mov
repnz
add
sub
mov
and
or
jo
cmpsl
adc
or
xchg
rclb
sub
mov
mov
stos
nop
add
aaa
mov
push
call
nop
cmpsl
mov
popa
insb
xor
test
mov
dec
push
int3
jge
in
cmc
in
mov
fcomi
jmp
add
retw
ret
call
push
fsubrp
mov
xchg
and
je
movsl
mov
sarb
imul
subl
inc
aam
je
addb
mov
andl
and
sub
hlt
inc
inc
icebp
sbb
or
enter
adc
and
push
cmpb
jl
cmpsl
pop
jmp
test
xchg
xchg
pusha
movsl
inc
jno
sbbl
dec
sbb
push
lret
pop
adc
or
inc
pop
add
or
lods
loop
push
arpl
mov
loopne
in
nop
pop
js
jne
xchg
add
test
pusha
or
and
mov
out
test
or
push
fwait
push
sbb
dec
sub
push
jecxz
xchg
pop
adc
xchg
push
fdivs
mov
xchg
push
xor
test
ss
lahf
popf
mov
mov
nop
lret
cwtl
hlt
xchg
pushf
pop
imul
mov
xor
cmp
daa
mov
loope
xchg
mov
test
add
push
fwait
xchg
sub
sahf
mov
adc
adc
repnz
mov
lret
flds
aam
aam
stos
xchg
daa
push
fldcw
push
insl
roll
pop
sub
mov
xchg
or
cmc
xchg
xchg
inc
mov
pop
or
xchg
es
pop
push
pusha
add
or
sub
pop
push
mov
je
xchg
dec
bswap
shrb
xchg
inc
mov
enter
je
mov
add
push
inc
sbb
and
xchg
cmp
daa
lcall
xchg
dec
pop
add
ljmp
dec
xchg
aaa
xor
mov
es
xchg
ret
je
fs
mov
jmp
lods
pop
jno
fs
or
jmp
push
ljmp
es
out
lcall
js
xchg
and
and
daa
mov
dec
and
xchg
xchg
test
movsb
icebp
jnp
in
xor
int
add
adcb
cmpb
inc
jb
lret
xor
int
xchg
add
or
push
cmpsl
lret
or
cmpsl
pusha
int
adc
ss
adc
mov
aaa
mov
lea
clc
int
push
imul
int3
sbb
lret
leave
call
rolb
loopne
jb
fbld
jae
pop
das
push
in
mov
dec
int3
pop
insb
push
xor
int
mov
jp
out
pushf
inc
je
sbb
inc
loopne
lret
imul
jmp
inc
cmp
dec
pop
out
roll
inc
push
push
pop
aas
push
add
mov
inc
dec
mov
mov
test
xor
dec
push
and
fistl
cmp
inc
loopne
test
mov
cmp
adc
xchg
divb
adc
gs
add
aaa
add
cmpsl
dec
fildl
inc
or
clc
outsb
or
xchg
fnsetpm(287
cmp
aam
sub
cli
push
or
scas
fucomi
nop
fldt
mov
iret
ret
and
and
fnsetpm(287
and
adc
push
or
mov
xchg
pop
push
fistpl
inc
test
lods
cs
cltd
ret
jb
xchg
mov
push
sbb
push
andl
popf
mov
or
shlb
sub
xchg
mov
xor
pop
pop
mov
out
jns
xchg
inc
lock
test
jne
xorb
test
sub
neg
imul
mov
je
fistl
mov
inc
and
and
and
dec
sub
fwait
inc
mov
push
scas
fildll
jle
dec
sub
add
or
mov
mov
pop
xchg
imul
cmpl
mov
lds
fucomip
in
enter
iret
leave
rorl
aam
scas
cli
lock
iret
loope
pop
push
orl
jb
jns
mov
or
pop
mov
mov
and
or
add
in
mov
in
fdivrl
inc
pop
pop
pop
les
lret
lret
lret
lret
test
mov
lret
lret
mov
jno
lret
lret
lret
lret
imul
lret
lret
dec
mov
xor
and
jb
sbbl
idivl
inc
push
loope
mov
and
sarb
jb
sbbl
pop
jns
inc
jle
jo
gs
pop
mov
push
jb
mov
and
cmp
and
nop
sbbl
mov
leave
inc
push
jb
mov
in
pop
jns
mov
jb
sbbl
xchg
mov
inc
push
jnp
jo
gs
pop
mov
push
jb
cmpl
cs
leave
inc
sbb
sbb
and
mov
adc
mov
and
inc
mov
dec
xor
or
mov
xor
mov
or
xor
mov
rolb
push
or
inc
adc
adc
dec
xor
adc
push
xor
daa
int
sbb
sbb
rcrb
mov
enter
and
cmp
pushf
xor
daa
les
mov
jb
mov
mov
dec
inc
mov
dec
xchg
daa
int
jl
dec
dec
push
subb
add
ret
lock
mov
inc
mov
and
cmp
in
add
xor
inc
sub
add
sbb
pop
js
lods
adc
ror
lods
or
stc
sub
push
jb
push
jb
dec
repnz
pop
aam
push
dec
adc
dec
test
neg
scas
test
cmp
inc
pop
mov
hlt
imul
and
inc
sti
testl
pop
icebp
mov
pop
scas
mov
inc
sub
add
dec
lods
xchg
adc
sbb
test
xor
sub
inc
and
push
sbb
inc
cwtl
sub
push
jns
push
xchg
sbb
outsl
gs
adc
sub
dec
je
xchg
mov
arpl
inc
xchg
mov
movsl
gs
sub
pusha
hlt
mov
rorb
cs
outsl
lret
and
mov
movsl
sub
xor
mov
mov
add
dec
and
outsl
mov
sub
mov
gs
sub
sub
test
fisubrs
xchg
out
adc
gs
outsl
stos
xchg
movsl
sbb
outsl
stos
xchg
movsl
mov
movsl
sub
add
outsl
repz
outsl
xor
push
outsl
inc
movsl
sub
int3
outsl
stos
xchg
and
lret
sbb
mov
mov
fcompl
outsb
push
ficoml
gs
addl
or
add
jmp
dec
inc
push
and
pop
pop
pop
jle
xchg
shrl
imul
imul
jp
imul
ja
mov
sbb
loop
shrb
dec
movsb
lcall
imul
aam
cmp
mov
int3
imul
push
xchg
out
cmp
mov
aam
mov
movsl
roll
call
out
xchg
imul
lret
imul
int
imul
scas
push
or
jae
push
xchg
outsb
mov
mov
sub
aaa
inc
mov
or
fdivl
adc
loopne
add
mov
fsubr
enter
dec
icebp
cmp
aas
gs
insl
push
call
fnstenv
sarb
lds
and
pop
jp
clc
push
or
adc
xchg
scas
cmpsl
sub
jnp
mov
mov
insl
sbb
sub
popf
imul
aaa
push
adc
lds
dec
ja
lods
imul
pop
add
orl
mov
loopne
jno
imul
dec
push
imul
imul
add
pop
gs
aad
outsl
jecxz
cmp
cmpsb
sub
adcb
inc
imul
fwait
and
lret
xor
cmp
gs
imul
sarb
out
insl
mov
popa
nop
imul
dec
pop
imul
inc
rcrb
in
imulb
outsl
sub
mov
jle
imul
or
inc
scas
xchg
repnz
lock
xor
adcb
push
sbb
xchg
movsl
fwait
inc
test
aas
gs
sbb
mov
sbb
xchg
rcll
add
xor
or
or
xor
gs
push
xchg
xchg
cwtl
cmp
and
jno
imul
xchg
out
dec
pop
imul
imul
imul
imul
xlat
ljmp
xchg
dec
aad
cmpsl
sub
movsl
and
pop
cmp
rolb
mov
jne
xchg
pushf
imul
mov
push
inc
imul
sbb
and
add
sbb
or
sub
push
call
cmp
fcoml
mov
mov
xor
mov
push
dec
pop
imul
sub
dec
pop
imul
shl
push
dec
in
jne
stos
jno
pushf
mov
fsubp
xchg
and
dec
stos
andl
dec
shrl
xor
dec
pop
imul
imul
cmpsb
les
adc
les
dec
imul
imul
pushf
mov
mov
inc
sub
xlat
lahf
loope
les
xchg
pushf
mov
mov
mov
imul
in
popf
mov
sarb
pop
lret
xchg
and
imul
pop
gs
inc
loope
inc
cmp
pushf
enter
mov
shlb
int
int
andl
pusha
fstl
imul
adcb
inc
sub
cmpsb
push
push
test
cltd
jmp
shrb
call
mov
sub
das
mov
or
push
pop
mov
mov
lods
dec
movsl
jb
in
xor
mov
clc
and
mov
lret
or
je
xchg
push
and
loopne
pop
push
push
leave
sar
cmp
fst
mov
pop
addr16
xchg
int
mov
arpl
movsl
cmpsb
js
mov
or
sbb
decl
imul
cmp
repz
mov
repz
sbb
ss
sahf
out
push
pop
outsb
sbbb
mov
jns
stc
outsb
or
push
ds
pop
sahf
out
sahf
jb
mov
jns
clc
push
stos
adc
repz
repz
jbe
repz
mov
repz
mov
sub
mov
pop
insb
addb
insl
test
push
adc
adc
cmp
and
mov
push
orb
ret
jno
push
pop
sbb
pop
mov
push
push
mov
sahf
cmpsl
out
cmc
add
push
clc
nop
imul
xor
iret
adc
xchg
aaa
add
and
jns
sarl
mov
mov
out
or
add
test
cmp
adc
push
adc
xchg
dec
repz
sbb
sbb
xchg
js
fcomip
cmp
or
mov
mov
mov
and
and
cmpb
sbb
repz
cld
cmp
and
aam
subb
add
adc
and
pop
inc
es
int3
mov
outsl
or
adc
test
loopne
rolb
xchg
iret
repz
push
push
cmp
adc
sahf
cmpsl
stc
cmp
clc
xchg
in
loopne
jns
out
fcom
int3
enter
sahf
out
mov
out
sahf
movsb
mov
jns
out
mov
jns
out
je
insb
push
fs
pop
pop
push
push
jns
out
dec
dec
inc
inc
cmp
jns
out
xor
sub
dec
repz
adc
add
nop
fmul
cmp
repz
mov
sub
out
add
pop
movsb
jl
jns
out
push
dec
inc
xor
sarl
or
mov
shlb
mov
or
lea
imul
repz
jnp
jg
push
add
lock
mov
sub
and
and
adc
and
dec
add
push
aaa
xor
cltd
shl
push
push
add
and
aam
inc
xor
inc
or
mov
test
jne
pop
or
inc
mov
iret
lods
call
mov
push
das
sbb
sub
into
or
add
and
and
xchg
inc
mov
push
daa
push
push
xor
outsb
jnp
mov
inc
add
fadd
mov
lahf
pop
pop
add
pop
xorb
inc
pop
shll
sbbb
pop
jnp
or
push
jnp
pushf
push
inc
es
andb
shrl
aaa
inc
leave
and
pop
rorl
cmp
push
pop
scas
inc
fildll
ss
mov
aas
bound
add
lahf
inc
jg
push
jle
pop
xor
and
jb
aas
sti
push
int3
pusha
in
sbb
push
andb
fsubl
cmpsl
out
push
dec
mov
jecxz
add
movsb
fbld
inc
sbb
mov
add
movnti
imul
cmp
inc
mov
pushf
add
push
adc
insb
cmp
icebp
int
xor
cmp
pop
stos
outsb
cs
scas
outsb
lahf
inc
outsl
ds
outsl
jl
out
gs
push
and
mov
and
pop
leave
rolb
imul
mulb
sub
push
adc
scas
mov
mov
outsl
jne
notb
imul
dec
mov
push
outsl
and
jb
arpl
xchg
insl
ljmp
lret
inc
mov
inc
sbb
sbb
outsl
gs
sbb
bound
and
sbb
stos
pop
sbb
xor
lods
lcall
shrb
fwait
dec
add
jo
fldt
dec
mov
and
mov
mov
xor
add
push
push
adc
cmp
push
ja
jne
pop
xor
roll
rcrb
aam
mov
int
push
add
xchg
lea
arpl
mov
add
mov
pop
xor
add
add
rcrb
inc
arpl
shll
roll
shll
inc
inc
and
sbb
sti
jno
sbb
lahf
arpl
rcrl
lds
out
rorl
lea
add
inc
adc
pop
pop
push
imul
mov
inc
cmp
push
aaa
add
ja
xchg
mov
push
add
mov
stos
addr16
xor
xor
cmpsb
pop
push
pop
inc
xchg
iret
repz
movsb
xchg
jle
pushf
cwtl
xchg
cmp
repz
mov
repz
inc
sahf
out
sahf
inc
cmp
xor
sub
sahf
out
sub
sbb
inc
ss
out
add
xchg
hlt
xchg
in
out
sahf
testl
enter
jns
mov
test
mov
xchg
jno
je
insb
lret
out
fs
push
dec
mov
ja
out
push
and
add
in
xchg
push
sahf
out
sahf
enter
test
jnp
out
cwtl
nop
mov
cmp
jo
pop
inc
cmp
push
adc
lock
loopne
iret
repz
mov
xor
rep
pop
outsl
insb
or
out
pop
xchg
adc
or
je
sub
push
cwtl
and
xor
mov
pop
adc
push
jne
addb
or
cs
adc
cmp
pop
push
pop
push
sub
clc
mov
jge
test
enter
cmp
inc
jbe
outsb
mov
lcall
xor
mov
aas
pop
or
aas
inc
add
stos
xchg
incl
mov
jns
rolb
shr
arpl
mov
inc
adc
inc
xor
rcr
xor
xor
cmpsb
dec
clc
decl
cmp
ss
ss
nop
ss
ss
aaa
shrl
ss
ret
sub
xorl
aaa
adc
sbb
add
cmp
fstpt
push
cmp
xchg
ret
xchg
lret
cmp
int
sarl
fidivrs
and
cmp
clc
mov
cmpl
adc
xor
cmp
cmp
aaa
ret
ds
ds
ds
fdivr
mov
icebp
ds
ds
ds
aas
pop
aas
and
sub
xor
aaa
outsl
mov
into
push
data16
jbe
adc
jnp
cmpl
movsb
aas
mov
sarl
div
inc
fnstsw
dec
add
jl
xchg
cmpsb
mov
xor
mov
xor
pop
add
inc
xor
inc
add
xor
xor
faddl
add
mov
cmp
xor
inc
add
fdivr
data16
dec
xor
xor
xor
xor
jecxz
incl
xor
xor
xor
xor
xor
dec
cmp
mov
ss
mov
ss
pushl
sbb
mov
sbb
push
add
sub
das
out
xchg
in
cmp
add
pop
cmp
xorb
xor
das
or
cmp
xor
xor
cmp
cmp
sarl
pop
cmp
or
pop
push
outsl
cmp
mov
xor
inc
fisubs
cmp
cli
outsb
cmp
idivb
mov
cmp
cmp
cmp
dec
push
xor
stos
pusha
outsb
ja
jle
test
inc
incl
cmp
cld
cmp
push
ds
and
xchg
cs
jg
loopne
cwtl
xchg
xor
xor
loope
jnp
test
xchg
xor
push
xor
dec
decl
shll
xor
xor
xor
xor
mov
xor
xor
outsb
xor
loopne
repnz
dec
ss
bound
pop
mov
xorl
ss
ss
or
scas
xorb
jecxz
clc
ss
ss
aaa
or
fbld
jecxz
push
push
xor
aaa
addr16
sarb
dec
adc
cmp
xchg
jno
push
sbb
pop
jno
mov
cmpsb
test
mov
cmp
add
outsl
xchg
push
in
jmp
repz
cmp
cmp
cmp
and
es
cmp
cmp
decl
or
cmp
jle
xchg
sbb
jecxz
cmp
cmp
fcmovb
cmp
push
add
incl
insb
cmp
cmp
cmp
cmp
cmp
cmp
push
and
fs
cltd
xor
insl
pop
shrl
xchg
mov
outsb
inc
arpl
sbb
aas
mov
dec
fadd
js
arpl
xor
into
xor
pusha
xor
push
jp
xor
xor
call
xor
xor
xor
xor
xor
jo
in
pop
xor
xor
sbb
fnsave
push
or
cmp
insb
jecxz
out
and
xor
xor
adc
push
cld
aad
or
push
ss
arpl
stos
add
ss
ss
jecxz
sub
xor
aaa
jne
jle
pop
pop
add
or
sbb
sub
and
cmp
cmp
incl
cmp
cmp
cmp
aaa
or
cmp
cmp
test
arpl
outsb
sbb
xchg
ret
fnstsw
fildll
lods
inc
out
ds
or
cmp
lret
mov
pop
insl
adc
fbstp
divb
data16
aas
jne
mov
xor
xor
xor
xor
and
xor
xor
pushl
adc
xor
xor
xor
xor
xlat
xor
ja
mov
pushf
ss
mov
sbb
ficomps
adc
imul
data16
aaa
leave
test
jb
loop
cmp
hlt
lock
cmp
push
cmp
mov
jmp
std
cmp
xlat
and
ds
imul
xchg
mov
adc
lods
cmp
or
sbb
mov
mov
cld
xor
or
out
sub
cmp
cmp
cmp
dec
cmp
pop
cmp
lahf
sub
aas
cld
pop
xor
xor
xor
xor
xchg
testb
test
or
pop
dec
es
xor
mov
jp
add
adc
aaa
arpl
pop
pusha
out
jmp
adc
sbb
mov
sbb
xorb
or
ret
jle
xor
cmp
insb
jb
daa
mov
push
bound
mov
lods
ret
rcll
dec
int3
xor
popa
je
fdivrl
in
je
jecxz
xor
cmp
push
int3
inc
xor
clc
mov
insb
jb
sbb
gs
jl
mov
cmpsb
test
mov
rol
scas
mov
sub
jecxz
fsubrp
out
xor
or
adc
adc
sbb
sbb
loopne
sbb
xor
mov
cmp
inc
xor
inc
aaa
xor
push
xchg
pop
xor
xor
xor
sub
je
jl
clc
mov
mov
mov
nop
xor
iret
xor
cli
xchg
mov
xor
call
xor
inc
add
xor
ss
js
ret
adc
jbe
xor
aam
push
cmp
push
xor
fs
or
ja
mov
mov
cmp
cmpb
dec
add
xor
stos
fmull
pop
mov
daa
cwtl
out
shl
ljmp
sub
mov
or
insb
xor
xor
xor
xor
xor
jge
inc
xorl
mov
shlb
cld
hlt
aas
ficoml
pop
xor
xorb
xchg
sbb
aad
sbb
jmp
addb
call
xor
clc
lock
xor
inc
add
loop
jg
or
push
sbb
xor
mov
std
or
cmp
inc
xor
xor
xor
push
xor
pop
xor
incl
jo
je
js
jl
andb
xor
push
scas
pushf
xor
xor
xor
xor
xor
xor
pusha
jo
shll
shlb
int3
ficoml
sub
mov
xor
jno
add
jp
sub
sbb
ljmp
fcmovnbe
adcb
sbb
or
push
decl
fdivr
add
inc
pop
andb
pusha
scas
xor
cwtl
add
add
fstpt
add
or
pop
pop
push
or
or
or
or
or
adc
adc
push
adc
mov
add
pop
sbb
adc
adc
adc
add
mov
or
adc
pop
adc
loop
adc
inc
add
add
inc
mov
adc
add
mov
add
inc
mov
mov
add
jge
decl
dec
inc
add
push
adc
pop
and
xor
jmp
rcll
bound
js
leave
nop
pushf
dec
xor
and
inc
sbbl
or
xchg
mov
dec
popa
adc
xchg
xchg
xchg
and
adcb
pop
rcrl
popa
add
inc
sub
pop
adc
incl
inc
adc
push
adc
pop
popa
jno
and
or
or
mov
or
xor
adc
shrl
icebp
mov
add
mov
push
xor
or
aad
add
js
jo
cld
pop
adc
or
add
lds
cld
cli
and
mov
pushl
ret
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
outsl
cs
movsl
jecxz
cli
pop
mov
stc
or
incl
loope
inc
repnz
addr16
out
or
push
push
xchg
add
cli
mov
fstl
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
xorb
xor
lcall
mov
push
pop
mov
pop
pop
mov
popl
lcall
sub
mov
ret
scas
adc
mov
xor
lods
scas
xchg
test
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
outsl
call
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
ljmp
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
cmpsb
lcall
leave
mov
jp
push
out
or
cmp
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
sar
std
sarl
xor
hlt
and
xchg
jmp
sbb
pop
jge
jecxz
lods
mov
out
pop
jb
mov
sbb
jg
iret
in
push
mov
sub
pop
mov
jl
rorl
adc
scas
gs
jg
hlt
push
add
stc
loope
stos
fstp
decb
andl
aas
icebp
testb
mov
ljmp
inc
gs
sub
jno
pop
sub
jg
pop
aam
ljmp
inc
sbb
paddb
inc
mov
pushl
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
loopne
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
jge
inc
fwait
inc
adc
loope
fisttpll
out
aas
std
cli
jg
je
push
push
push
idivl
cmp
sub
inc
scas
inc
jmp
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
push
lock
mov
pop
xor
outsl
pop
js
jmp
xchg
pop
clc
pop
hlt
lret
movsb
add
add
lea
jg
gs
std
xorb
jg
jmp
js
ret
das
pop
pop
pop
shlb
jg
ljmp
out
sarb
sbbl
jno
or
sarb
std
pop
les
cli
mov
mov
mov
arpl
stos
mov
and
insl
add
leave
push
scas
loop
idiv
jge
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
jmp
js
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fadd
or
mov
nop
enter
add
cld
call
js
cmp
scas
lods
hlt
cld
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
loopne
fdivrl
jg,pn
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
call
adc
push
jo
pusha
imul
add
mov
cmp
xchg
mov
push
in
sub
loop
pop
xchg
ftst
jbe
xchg
and
add
jae
shrb
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
adc
jno
call
imulb
cld
xor
repz
jge
cmp
fmull
enter
jecxz
scas
sub
decl
hlt
sub
mov
dec
incb
fisubrl
aas
mov
sti
sbb
push
inc
or
pop
jg
add
iret
mov
jg
mov
aad
test
mov
xchg
movsb
mov
iret
push
jbe
jmp
sar
push
sbb
stos
icebp
pop
incb
jno
adc
push
inc
jecxz
std
outsl
sti
push
sbb
sarl
adc
loopne
and
rorl
mov
jg
push
imul
dec
push
in
aas
mov
fisubl
cmp
fsubrl
lock
and
incl
sbb
clc
xchg
das
clc
jmp
or
and
mov
adc
mov
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
ret
lock
data16
pop
nop
mov
out
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
jmp
divb
iret
dec
xor
fsubr
fistps
lds
fidivrl
jg
pop
insb
insb
adc
dec
mov
sub
jge
xor
idivb
ja
lahf
les
sbb
sbb
cld
addl
icebp
decl
inc
sbb
mov
lahf
outsl
int3
push
sbb
push
test
sti
jle
xchg
popa
out
add
paddsw
pop
outsl
xchg
inc
test
in
jge
popa
push
test
outsl
clc
lcall
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
jle
or
out
lcall
shl
cld
mov
test
mov
pop
jg
pop
shrb
rcl
jg
adc
call
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
decl
inc
lds
push
pop
adc
imul
or
lcall
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
mov
lcall
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
and
xchg
lock
insb
test
lock
repz
sbb
lock
in
jmp
out
jmp
mov
clc
push
std
mov
or
lods
out
jne
or
cld
push
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
shrb
fisttpl
out
pop
or
or
dec
ss
les
or
repnz
clc
dec
cmc
mov
jl
call
jle
inc
jno
lret
pop
in
cmp
stc
fwait
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
mov
aas
mov
jg
incl
fdiv
mov
sub
addr16
sbb
cld
daa
jp
std
mov
fucomi
adc
cltd
or
mov
ret
nop
cmp
push
loop
cmc
das
incb
lock
pop
pop
div
cld
idivl
xlat
add
scas
stc
lahf
loope
js
or
jae
jmp
idivb
fbstp
out
xchg
add
out
sbb
xchg
mov
loope
mov
cmpsl
popf
sbb
xchg
mov
fbstp
push
daa
outsl
das
outsl
ss
cmpsb
cmp
call
pop
mov
decb
adc
mov
or
adc
call
shrl
popf
dec
or
add
fs
inc
add
loop
out
mov
aaa
std
fistpll
cmp
inc
sbb
xchg
mov
pop
cmp
mov
aas
icebp
ret
ror
sbb
mov
adc
sub
adc
aas
pop
clc
loope
loope
mov
or
jp
dec
add
xlat
insl
push
xor
sbb
and
insl
lock
adc
jne
push
cmp
repz
pop
and
sub
jo
sarl
pop
out
jg
jno
ret
movsb
and
loope
cmpsb
inc
arpl
out
inc
call
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
dec
outsl
jmp
add
mov
daa
jmp
faddl
mov
inc
push
jae
lcall
push
imul
pop
stc
push
dec
adc
jmp
cmp
mov
mov
enter
mov
push
inc
dec
or
add
push
sti
pop
inc
add
or
nop
mov
test
incl
add
xor
loope
out
or
inc
jle
fisubrl
inc
adc
cld
incl
push
sar
jle
sbb
jl
and
cmp
jg
adc
fiaddl
bound
fildll
cwtl
mov
xchg
jbe
out
in
jmp
dec
shll
addb
jns
mov
gs
xor
pop
es
mov
enter
push
xchg
stc
mov
ds
lcall
cmp
add
iret
imul
and
xchg
nop
jnp
jnp
stc
out
sbbb
push
insb
mov
outsl
mov
ret
sahf
mov
pop
push
out
push
mov
notb
dec
adc
ja
js
pop
mov
repnz
rcl
mov
xorb
incl
lods
dec
xor
push
iret
mov
movsb
or
ja
faddp
pop
sub
xchg
loope
sbb
loop
negl
push
adc
repnz
ficoml
imulb
fnstenv
sarl
pop
nop
roll
orl
loop
leave
popa
shrb
movsb
push
in
fdivl
incl
adc
push
outsb
and
jns
pop
jo
push
push
pop
out
cli
add
pushl
in
mov
or
inc
jmp
mov
push
lcall
xchg
pop
lcall
aam
fdivrs
mov
js
xor
rcr
adc
pop
mov
pushl
fwait
jo
loopne
adc
jmp
sbb
dec
mov
mov
inc
lret
movsl
adc
call
or
mov
mov
adc
pushf
fldcw
mov
std
push
push
jge
sub
mov
cwtl
mov
addb
call
push
xchg
popa
popf
aas
push
sub
push
push
clc
mov
sbb
icebp
lcall
adc
pusha
mov
and
enter
jmp
loope
jmp
push
aaa
iret
rorb
mov
xor
and
addr16
sub
sar
incl
sbb
sbb
push
mov
adc
and
cli
sub
insb
push
loope
pop
inc
rorb
fiadds
repnz
movsb
xacquire
xchg
dec
jp
xchg
and
out
push
pop
daa
lret
jge
arpl
cmp
pop
cld
xor
cwtl
js
xor
sbbl
dec
mov
lea
xchg
ljmp
jmp
mov
rcll
icebp
lock
jbe
into
cli
cld
lcall
fwait
mov
push
mov
cmp
adc
fidivl
fstpl
fidivrl
jg
add
enter
xlat
jbe
ss
dec
xorb
aam
mov
mov
cmpsl
push
mov
incl
pop
xorb
cwtl
xor
repz
shll
jbe
popf
pop
dec
aaa
aaa
push
ljmp
rclb
xlat
mov
call
mov
ljmp
push
add
sub
inc
jmp
aaa
or
incl
sahf
push
jecxz
push
mov
push
dec
push
cmp
jl
push
call
add
mov
xlat
jmp
lods
andl
repnz
push
xchg
in
into
ljmp
loopne
jmp
int
dec
or
sahf
dec
cmp
fldl
pop
fidivrl
test
xor
inc
jns
lods
int
cmp
cwtl
out
or
pop
in
jecxz
cld
stos
dec
lret
xchg
iret
cs
jp
push
and
loope
clc
and
push
rorl
outsb
dec
shrb
adc
cwtl
incb
clc
inc
xor
insb
push
fs
jg
ljmp
inc
jno
jb
mov
jle
sti
movsb
inc
adc
xchg
testb
or
push
popa
out
lock
arpl
lret
gs
pop
add
xchg
lret
mov
sub
cmp
loope
popf
shlb
mov
and
repnz
cmp
xchg
nop
inc
decl
push
sarb
sbb
pusha
push
xor
push
jecxz
popa
or
inc
int
push
jns
adc
pop
icebp
dec
and
popa
cmpsl
xor
aas
pop
lock
loop
adc
jb
pushl
or
xchg
dec
sub
lret
mov
into
jo
decl
out
or
mov
cltd
sub
jl
cs
push
bswap
scas
in
mov
pop
push
lods
inc
inc
scas
clc
pushl
out
fldenv
mov
ds
fistpl
xor
add
or
mov
mov
cli
xor
dec
inc
xchg
cmc
inc
and
jo
incl
sbb
cmp
leave
and
shll
sub
daa
xor
mov
mov
ja
icebp
add
jg
push
cmp
lcall
shll
insl
test
jne
shlb
arpl
push
inc
sub
jno
jge
pop
out
int
jns
shll
dec
jns
pop
std
mov
in
jmp
cld
add
repz
inc
pop
int3
xchg
or
rclb
mov
pop
dec
repz
in
pop
sysenter
sbb
xorl
inc
or
cmp
mov
xor
inc
mov
mov
jge
mov
sub
inc
jmp
mov
dec
mov
push
incl
popf
inc
mov
mov
and
and
dec
lods
aaa
cld
jmp
sub
or
mov
xor
repz
xor
inc
call
add
sub
jb
sub
push
shll
pusha
jbe
and
lock
jecxz
dec
loopne
cld
dec
sbb
loope
sub
popa
fsubl
stos
pop
fcmove
add
das
inc
cmpsb
fdivl
repnz
mov
jmp
add
roll
mov
int3
sub
add
jecxz
icebp
cmpsl
sub
scas
loopne
jg
decl
jo
mov
insl
pop
push
aaa
stc
pusha
repz
jnp
lea
dec
pusha
xchg
int
std
dec
xor
jns
ja
in
mov
stos
cmp
push
push
cltd
mov
jne
cld
js
fldt
mov
sub
xchg
xor
icebp
in
inc
clc
mov
ljmp
fnstcw
aam
inc
sbb
fistpll
loope
mov
jns
push
inc
push
call
stos
je
push
fwait
pop
and
daa
xchg
je
adc
sub
cmp
jne
add
incl
test
adc
sbb
jp
fbld
dec
enter
dec
js
cltd
xorl
sbb
in
sti
jp
dec
add
lods
adc
into
insl
loope
les
push
cmp
pushl
add
pop
mov
inc
cli
ss
daa
xchg
cmp
pop
loopne
mov
or
fdivs
jnp
mov
adc
fistpll
jmp
xchg
add
mov
or
in
dec
aas
adc
out
lcall
or
pop
add
cmpxchg
inc
and
pop
icebp
decl
jo
movsb
mov
pop
sbb
fsubrs
pushf
jmp
mov
cmp
push
stos
cmp
ljmp
cli
vpxor
insl
std
lahf
stos
sbb
fwait
jnp
mov
dec
dec
out
cmpsl
adc
aad
dec
insb
sub
scas
in
cmp
lods
jns
add
ljmp
jb
inc
in
add
call
or
mov
xchg
pcmpgtw
pushl
ret
cld
pop
fldl
push
cltd
push
mov
cwtl
in
add
bound
arpl
ljmp
gs
cmp
mov
jnp
movsl
into
pop
jmp
mov
xlat
dec
int3
xchg
pop
cwtl
aam
inc
test
add
and
pop
cmp
ds
jg
cmp
dec
jg
cmp
and
leave
aad
call
dec
adc
lods
enter
push
addr16
push
and
stos
enter
inc
test
outsl
jno
je
lcall
cmpsl
pop
mov
daa
sub
mov
jo
push
inc
mov
and
or
mov
and
pusha
mov
mov
lahf
and
mov
xor
lcall
pop
mov
lahf
push
or
imul
out
fucomip
pop
jp
adc
orl
hlt
das
fcmovu
loope
mov
dec
repnz
inc
nop
push
iret
and
das
stc
ret
and
lea
call
mov
movsb
dec
xchg
mov
lcall
call
inc
xchg
push
imul
movsl
cwtl
sbb
es
add
addb
mov
loop
sbb
and
fmul
into
repnz
mov
mov
adc
and
mov
jbe
fstpt
mov
pop
insl
cli
aaa
and
inc
mov
cmp
and
ljmp
or
dec
out
ja
out
or
sar
cmovle
cmpsb
push
decb
shll
ds
cmp
push
arpl
jg
ds
or
cmp
ds
inc
sti
pop
and
mov
jmp
fs
jle
sbb
adc
imul
sub
test
popa
shl
push
pusha
add
dec
repz
sbb
in
fiaddl
xchg
add
popf
add
mov
out
jmp
cmc
add
imul
pop
and
jle
push
adc
push
ds
mov
outsb
lcall
ds
lahf
repnz
xchg
jecxz
and
aas
jo
adc
mov
xor
shlb
lods
lcall
xlat
xor
sbb
mov
push
push
push
ljmp
addr16
push
pop
fwait
js
and
xor
out
ret
xchg
xchg
mov
clc
sti
push
mov
jmp
lcall
repz
inc
scas
stos
negb
enter
in
ljmp
mov
ds
lgs
pop
test
lea
mov
ja
ljmp
repz
jp
or
test
loopne
mov
fdivs
inc
mov
decl
in
inc
and
pop
cli
push
aam
aam
mov
xor
mov
mov
jmp
jmp
inc
jnp
pop
mov
sbb
mov
pop
cltd
test
insb
push
mov
loope
or
jge
push
push
decl
dec
outsb
dec
mov
pop
mov
lcall
jo
pop
icebp
mov
clc
decl
negl
gs
scas
jge
xchg
stos
rolb
dec
lret
mov
mov
push
sahf
push
sahf
in
aas
movsl
fadd
mov
cmp
mov
sarb
sbb
mov
and
out
test
pop
sti
or
movsb
dec
jecxz
loope
call
pushl
push
cmp
pop
imul
mov
out
inc
inc
and
out
inc
xchg
fcmovnbe
sub
jo
or
sub
inc
in
and
sarb
fistl
lcall
notb
mov
and
pusha
negl
sbb
loopne
leave
mov
cmp
push
push
imul
ss
into
push
mov
jno
mov
jo
or
push
test
and
sarl
jo
mov
lods
nop
sbb
and
mov
mov
or
adc
push
adc
out
xchg
mov
cltd
pushf
out
in
push
inc
and
fbld
and
xor
adc
dec
ret
aas
out
jmp
ljmp
sbb
scas
ret
or
mov
sti
cmp
gs
inc
jb
leave
pushl
iret
cmp
jns
mov
cmp
dec
adc
movsb
adc
jg
add
pushl
ret
mov
cmc
ja
je
jae
mov
cmp
andl
ja
add
je
rorl
imul
add
lahf
clc
xor
sarb
cmpsb
fwait
pop
rcll
push
dec
add
mov
lcall
fiadds
sub
ret
mov
pop
lcall
sbb
ljmp
mov
fdivs
jl
js
fcomps
push
jb
gs
adcl
dec
xchg
data16
dec
scas
call
add
xchg
mov
cwtl
popf
jge
sub
adc
mov
cwtl
pusha
jns
ljmp
in
popf
push
fldenv
xchg
xchg
shll
jmp
scas
cmp
decl
pop
mov
stos
stc
xor
or
cli
adc
ljmp
out
and
mov
rcr
or
mov
pushf
fdivr
lods
mov
sar
mov
xchg
push
or
or
fsub
mov
add
lret
cmpsb
cmp
inc
test
movsb
rcr
lcall
das
sub
push
push
xchg
fwait
pop
sbb
repz
popl
stos
add
scas
cld
mov
clc
aaa
sub
stos
movsb
xchg
add
and
or
dec
mov
rorl
loop
sub
mov
jle
sti
dec
mov
mov
cmp
outsl
lds
cmp
adc
xchg
incl
decl
rol
lcall
inc
fcom
mov
cmp
dec
test
jmp
scas
popa
adc
jbe
sub
pop
cmp
push
add
inc
call
mov
incb
mov
fbld
pop
hlt
lcall
repz
fstpl
cmp
jg
ficompl
aad
scas
mov
aad
cwtl
xor
cmp
pavgw
dec
mov
mov
outsb
sub
mov
outsl
mov
mov
mov
dec
popl
inc
idivl
jg
push
ds
sbb
sbb
ja
fdivl
dec
in
fsts
jne
and
sahf
stc
xor
movsb
cwtl
ljmp
pop
inc
mov
fdivs
push
pop
insl
jo
inc
and
lcall
mov
inc
xor
xchg
cmp
pop
sti
loop
stos
push
jns
stos
out
pop
pusha
cmp
cmp
push
pushl
dec
jmp
sbb
stos
jno
fbld
mov
fmull
stos
cmp
pusha
push
enter
sbb
jle
loop
mov
cmp
ja
rorl
sti
push
push
call
mov
jb
jmp
pop
paddsb
or
ljmp
cs
sub
jne
ja
je
inc
xor
pop
pop
cmc
cmp
dec
test
jecxz
incl
adc
push
ret
add
mov
or
nop
sub
jg
xchg
in
imulb
aad
mov
add
sub
scas
lcall
push
pop
test
int3
xchg
nop
or
push
mov
sbb
fcmovnb
cmp
popf
lcall
ja
mov
fmul
xor
call
lds
faddl
stc
sub
add
pushl
adc
hlt
fwait
or
xor
pop
cmp
dec
ss
popa
ljmp
cmp
sar
jmp
adc
push
stos
pop
push
test
aam
jmp
inc
sbb
gs
adc
call
js
movsb
add
xchg
mov
pop
xchg
outsl
jbe
xlat
mov
mov
pusha
inc
xor
jg
shrb
enter
lods
xchg
std
lods
sub
inc
push
out
pop
xchg
or
and
rcl
mov
jmp
inc
out
les
leave
ss
dec
pusha
pop
in
stos
adc
xor
xor
lcall
xor
addr16
pop
repnz
adc
aaa
dec
inc
ljmp
scas
fstpt
call
mov
ret
sub
fildl
in
cli
inc
jne
mov
add
incl
mov
repz
jo
push
sbb
dec
je
div
repnz
xchg
clc
ljmp
mov
mov
dec
sahf
cmp
loope
xchg
aaa
xor
mov
jecxz
andl
push
jbe
mov
aam
ljmp
xchg
outsl
insl
hlt
cmp
nop
adc
in
ljmp
inc
push
or
lret
push
lcall
cmpsl
inc
sbb
xchg
mov
mov
cwtl
nop
call
xor
gs
jl
inc
decl
or
filds
mov
cld
test
pop
mov
mov
pusha
out
adc
test
lds
lods
addr16
pushl
in
mov
lret
loop
jne
xor
adc
daa
cmp
pop
lcall
decl
adc
jns
push
enter
xchg
push
fwait
cli
pushw
jnp
lock
decl
test
cmp
and
sahf
pop
mov
mov
cli
lods
incl
je
lock
stos
aas
ficoms
leave
dec
cmp
dec
imul
fnstsw
test
mov
adc
mov
sbb
insb
loop
and
pop
dec
jg
outsl
jle
jbe
call
cmp
shll
jmp
or
decl
lock
lods
fldl
test
ret
xchg
xchg
dec
push
jae
call
cmp
dec
xor
adc
repnz
mov
dec
call
or
push
push
out
enter
lcall
ss
fcomps
nop
imul
push
in
call
pusha
xchg
test
push
outsl
inc
and
push
lods
xorl
lret
gs
pushf
adc
js
or
scas
clc
incl
pop
sbb
in
dec
gs
subl
jno
movsb
inc
loop
into
ds
xchg
add
test
mov
mov
fcomps
subl
jmp
jg
push
fcmovnbe
cltd
into
mov
sar
add
and
jecxz
ljmp
cwtl
adc
push
pop
jg
push
fstl
les
inc
cmpsb
in
cmpsb
mov
or
repz
jg
lods
ret
cltd
mov
ds
out
stos
int
xchg
lcall
dec
and
lods
jno
cmp
jge
jp
notb
sub
jg
mov
inc
lods
pop
jnp
subl
dec
or
shrl
scas
xor
pop
mov
push
cltd
cmp
pop
cmp
inc
cmp
pop
add
dec
cli
xchg
fnsetpm(287
fcomip
jmp
xor
push
data16
mov
push
jl
in
inc
call
xor
cld
popl
xor
jle
inc
lahf
push
add
repz
pop
inc
cmpsl
icebp
jge
out
decl
add
sbb
inc
imul
fsts
sbb
mov
shr
outsl
les
rcr
into
jmp
test
pop
pop
adc
pushl
loop
push
xor
add
lods
stos
add
cmp
mov
xor
cmp
adc
lea
es
pop
xchg
lock
sbb
cmp
mov
pop
ljmp
pusha
lods
pop
sbb
mov
dec
cmp
push
push
pop
xlat
dec
inc
repnz
shll
dec
mov
adc
jo
stc
cwtl
int3
outsl
ret
adc
xor
push
movsb
jmp
pusha
dec
sbb
xor
ret
in
sub
lcall
enter
add
fidivrl
xchg
int3
push
arpl
xor
sub
jmp
pop
push
or
and
mov
jecxz
mov
aas
sub
push
stos
ds
int3
pushl
xor
xchg
pop
pop
mov
aas
lods
fdivs
jno
stos
cmpsl
leave
sahf
cmpsb
aad
pop
lret
std
push
nop
sub
ja
test
scas
ret
pop
rolb
incl
mov
push
pop
inc
and
leave
shll
lret
ljmp
stos
and
hlt
out
repnz
xchg
stc
mov
jg
cli
lods
test
jmp
mov
xor
cmp
jg
repz
mov
enter
out
out
sbb
es
or
inc
stc
pop
mov
or
call
xlat
nop
fistpl
or
fistl
flds
movsl
push
mov
imul
xor
js
add
push
jb
fs
out
sbb
rcr
lea
push
jg
xor
push
mov
and
dec
xor
outsl
fistps
negl
xor
jns
ljmp
xchg
popa
jge
sbb
call
shll
loope
jne
loop
cltd
dec
roll
xor
call
mov
lds
sbb
jbe
or
fsts
pushl
aaa
xor
pushf
ja,pn
and
push
loopne
jg
arpl
push
inc
inc
dec
push
push
jg
sub
xchg
std
xor
push
and
sbb
sub
jle
xor
add
pusha
outsl
push
int
mov
lcall
mov
mov
jmp
test
insl
cmp
xchg
jg
mov
pop
sub
out
cltd
fstpl
jno
jge
bound
lods
fbstp
nop
aam
out
clc
orb
jmp
pushl
add
mov
cmp
aas
xchg
lea
jbe
aaa
loope
lret
inc
push
jmp
fcoml
mov
inc
sub
movsl
sbb
pop
push
lods
fcmovu
jnp
hlt
lods
inc
and
xchg
push
pushf
test
jp
cli
ljmp
cmovno
in
lods
xor
sahf
jge
aam
add
and
rcrl
decl
stos
xor
out
mov
push
inc
test
jae
mov
and
call
push
je
arpl
aaa
inc
out
iret
rolb
or
mov
or
mov
sbb
jl
jp
xchg
adc
lock
outsl
das
incl
cmp
dec
movsb
call
stos
hlt
mov
nop
sub
or
std
inc
out
jecxz
add
aam
mov
jmp
pushl
imul
sbb
sub
imul
dec
push
addr16
push
dec
lcall
in
stos
push
add
pop
in
add
daa
xchg
jne
sti
sub
dec
xor
bswap
std
jmp
mov
bound
test
scas
shl
imul
mov
or
decl
cmp
mov
pop
movups
and
sub
push
pop
ror
add
sbb
iret
mov
bound
xchg
jmp
movsl
inc
push
pushl
js
sub
ja
jbe
xchg
add
clc
mov
aas
sbb
jns
aad
dec
pop
mov
dec
arpl
inc
mov
insb
sub
fwait
mov
dec
jmp
mov
dec
dec
test
push
aam
mov
out
and
adc
popf
je
clc
push
add
stos
mov
sub
cmp
jo
jae
jbe
fiadds
mov
jmp
icebp
fcompl
adc
mov
pusha
inc
cld
ljmp
cmp
stos
out
stc
sub
mov
popa
fmull
inc
out
xchg
mov
es
call
sahf
sub
rclb
push
sti
and
inc
lods
sahf
mov
mov
sysret
ljmp
jmp
addl
cltd
sbb
es
sbb
push
scas
js
sub
sahf
or
mov
call
fisubl
fadd
test
mov
dec
push
cmc
lods
call
leave
add
sub
jno
or
inc
out
out
dec
pushf
sahf
mov
popf
push
je
mov
push
rcll
daa
fucom
add
sbb
fisttps
dec
jbe
loope
pop
xchg
nop
xor
or
ja
rolb
aam
inc
ljmp
clc
ljmp
xchg
movsl
int
roll
testl
mov
jmp
sbb
mov
mov
and
jl
gs
lods
dec
ss
rcrb
inc
jae
lcall
dec
mov
out
push
xor
inc
sti
jns
xlat
jl
inc
nop
mov
mov
mov
and
inc
pop
dec
and
and
sub
dec
mov
mov
lret
jg
lcall
ror
pop
fdivl
inc
ret
and
pushf
popf
loope
test
push
ljmp
add
mov
adc
cmp
push
in
data16
pop
in
cld
jge
adc
imul
fwait
std
push
push
pop
xchg
lahf
cli
ljmp
jbe
shlb
test
pop
lods
xchg
imul
in
dec
lcall
outsb
mov
pop
pop
mov
gs
mov
jmp
adc
incl
mov
jmp
leave
mov
push
shlb
sbb
mov
mov
ljmp
clc
push
icebp
cld
add
fisubrs
or
adc
mov
call
jmp
fsubrs
dec
test
mov
jbe
mov
ret
dec
and
jns
add
mov
decl
adc
aaa
mov
sbb
mov
mov
xchg
mov
loop
mov
inc
jnp
popa
call
xchg
dec
fistl
lods
stos
mov
mov
imul
lds
xor
fildl
stos
aad
adc
call
enter
cwtl
sub
inc
mov
jno
add
mov
out
out
jae
adc
mov
lcall
bound
inc
adc
jecxz
jecxz
lret
jb
clc
mov
add
dec
or
fbld
fwait
shl
and
into
or
jecxz
xor
scas
xor
inc
xchg
push
xchg
push
enter
lcall
and
mov
fisttps
pop
cmp
inc
jl
xor
push
inc
mov
jmp
ljmp
testb
adc
push
cwtl
out
loope
jnp
jbe
or
add
jg
xchg
jo
out
mov
popf
pop
xchg
push
jge
adc
dec
sbb
ljmp
push
jecxz
mov
mov
loope
mov
adc
sahf
sub
mov
mov
lcall
push
aad
mov
cmp
sub
shrl
fsubp
pop
lds
call
dec
adc
repnz
xor
dec
cmp
movsb
xlat
mov
mov
mov
fidivrs
cmpsl
mov
mov
mov
repz
or
ljmp
sub
es
add
xor
scas
mov
push
call
daa
or
int3
lock
in
leave
push
fcomps
rcrb
pusha
jg
loop
clc
pop
decl
ret
scas
xor
cmpsl
lods
enter
xlat
movsb
sti
and
sti
xchg
mov
dec
ds
push
jmp
cwtl
xor
xor
jle
outsb
mov
jg
test
push
xchg
add
mov
mov
adc
jno
scas
xor
lcall
call
or
ror
aaa
adc
mov
mov
out
jle
pop
lcall
insl
push
dec
or
aas
mov
lods
sbb
and
and
push
in
test
call
inc
cmpsl
sti
xor
xchg
aaa
lds
sub
adc
dec
mov
ds
jns
cmp
pop
les
push
sbbl
int
dec
or
stos
xchg
inc
test
jmp
push
push
cwtl
pop
sahf
ja
xor
das
mov
shl
dec
in
les
or
and
test
add
sub
lds
arpl
adc
rcrb
push
enter
lret
test
adc
and
test
cmc
jmp
dec
mov
aam
pop
insl
hlt
sahf
inc
int3
mov
into
lea
cld
jle
jmp
mov
into
dec
iret
dec
imul
push
sub
pop
insb
rcl
cld
test
xor
lcall
jno
pop
jp
sbb
mov
push
fdivr
incl
shl
loop
fxch
insl
and
add
and
pushl
out
add
mov
je
sbbb
iret
out
mov
cld
lcall
jns
cmc
pop
imul
adc
mov
pop
adc
cmc
js
inc
jmp
jl
mov
push
push
mov
xor
jbe
aad
outsb
in
sbb
xchg
or
nop
in
xchg
pop
and
movsb
push
xor
inc
cmp
add
enter
xor
mov
push
jns
decb
mov
sti
inc
dec
dec
push
xchg
decl
test
mov
mov
cmp
arpl
bound
addr16
mov
jmp
inc
add
adc
testl
fildl
das
or
push
jns
fs
pusha
and
sub
push
je
shlb
cmp
xor
stos
mov
gs
dec
sbb
in
mov
jbe
mov
jle
ja
dec
call
push
popf
aad
shll
rcll
mov
enter
lcall
cmp
pop
add
ja
push
pop
aad
or
jp
dec
cli
mov
shlb
sar
push
clc
ss
das
sub
fs
mov
mov
cmp
push
sbb
mov
int3
push
cmpsb
push
sahf
fxch
mov
and
scas
sbb
jge
add
out
cli
sti
js
cmpl
scas
leave
add
and
sub
fildl
int3
out
decl
dec
mov
pop
leave
sti
adc
fistl
cmc
mov
mov
mov
ljmp
mov
xchg
insb
sti
dec
inc
inc
movsl
fcoms
xchg
cltd
jne
incl
xchg
addr16
cmp
in
lds
xor
mov
lcall
incl
or
xchg
xor
cli
dec
stc
mov
negb
mov
sbb
mov
into
xchg
mov
call
sbb
addr16
mov
movsl
fidivrs
sub
out
and
jge
inc
clc
jecxz
and
idiv
pushl
movl
pop
inc
mov
clc
sbb
dec
mov
push
cmp
testb
xchg
outsl
cli
incl
sti
and
lds
jno,pn
lods
aad
push
jno
popf
push
cmp
and
into
call
int
sub
add
fs
gs
out
or
push
inc
test
jmp
decl
cmp
les
push
sub
cmp
adc
loope
movsl
dec
ud0
incl
jle
mov
dec
loope
and
movsl
sbbb
rclb
inc
decl
scas
mov
mov
das
js
mov
mov
mov
inc
test
add
aaa
lcall
call
jle
shl
sub
sahf
imul
sbb
mov
arpl
fucomp
incl
jae
ja
pushf
cmpsl
mov
lahf
mov
jne
mov
cs
jg
jnp
push
aam
mov
sbbl
mov
inc
sbb
in
or
mov
mov
adc
rcrl
or
mov
test
outsb
and
sbb
push
adc
dec
jp
xor
out
mov
add
lahf
mov
rorb
pop
inc
int
sub
add
sbb
clc
lods
fnstcw
mov
xchg
in
loop
cld
decl
out
lock
cmp
mov
sbb
lock
push
add
xchg
popa
push
pop
call
mov
jg
xor
xor
dec
sub
cmp
decb
movsl
jb
adc
xchg
pop
and
mov
or
mov
jno
out
xchg
sub
add
sbb
in
sub
clc
idivb
ljmp
xchg
into
xlat
das
inc
or
addr16
adc
cli
pop
or
dec
jg
inc
xor
decl
mov
sarb
adc
xchg
sub
sarl
punpcklwd
notb
sbb
ja
add
adc
stos
xchg
lcall
loop
push
out
dec
sti
jge
mov
inc
jmp
sbb
lret
cmp
and
jno
cmp
cmpsl
dec
cmp
movsb
pop
movsl
call
jne
jg
dec
stos
mov
outsl
movsl
xchg
out
je
sub
arpl
inc
push
call
nop
inc
lret
pop
aam
jbe
sub
push
cwtl
xchg
mov
or
mov
mov
jp
outsb
cmpsl
clc
insl
add
adc
gs
fiadds
cmp
clc
fiaddl
jle
jge
bnd
mov
jge
gs
adc
insb
pushl
js
jno
aas
in
mov
jecxz
sub
nop
mov
fdivrs
out
mov
cld
lcall
xor
ljmp
push
stos
mov
add
aas
js
push
cmc
mov
and
imul
cld
rorl
popf
xchg
stc
cmpsl
xor
pop
or
test
add
mov
fprem
mov
dec
lea
inc
xor
add
mov
es
out
pop
sbb
pop
iret
mov
ja
lret
popa
or
ljmp
insb
stc
inc
dec
inc
mov
rclb
jno
and
iret
out
ja
push
loop
das
cli
call
lock
call
outsl
inc
xor
out
or
mov
jg
cli
sbb
xor
sbb
movsb
sbb
les
add
int3
push
imul
ljmp
jnp
xchg
cmpsl
and
loop
cmp
cmp
or
sbb
xor
mov
repnz
arpl
in
cmp
inc
scas
inc
scas
nop
pop
cli
inc
mov
clc
dec
adc
cmp
mov
dec
int
push
int
jmp
stos
jbe
ret
imul
ljmp
loopne
clc
decl
jecxz
nop
sub
mov
dec
xor
mov
jmp
imul
cmp
imul
test
lods
inc
out
ds
leave
pushf
dec
add
fwait
movsb
loope
pushl
dec
mov
cmpsl
pusha
sub
movsb
xor
pushf
xor
adc
shll
pushl
cld
lahf
ds
icebp
fldt
sbb
push
adc
rcl
sub
inc
cmovp
cmp
pop
jne
pop
cltd
jmp
add
jne
dec
jae
nop
test
notl
sub
lcall
shll
aad
repz
and
test
ds
jl
arpl
call
push
das
jae
fistpll
lods
push
lcall
scas
mov
pop
pusha
cmp
xchg
call
nop
add
and
ljmp
lods
rcrb
mov
adc
imul
push
or
push
shlb
adc
call
test
adc
pop
fsts
push
and
cmpb
dec
mov
mov
cmc
movsb
ds
mov
adc
pop
ret
push
sbb
mov
leave
sti
cmp
call
xchg
xor
repnz
lret
enter
mov
inc
negl
out
add
xchg
sub
and
leave
addb
test
or
or
sub
mov
stos
sub
outsl
in
cmpsl
jb
mov
mov
xchg
ljmp
rcr
or
mov
push
cmp
popf
sbb
mov
pop
dec
cmp
lcall
frstor
adc
outsb
or
dec
push
xor
inc
mov
aaa
cli
push
add
cltd
inc
jp
cmp
adc
addb
xchg
jno
pusha
jge
mov
jg
ljmp
push
or
ret
rclb
shl
fldt
lret
ljmp
jmp
scas
shrl
insl
cmpsb
mov
test
nop
jge
int
fwait
lahf
incl
cli
jg
or
movq
add
enter
stos
add
xor
dec
and
cmpsl
push
or
mov
bnd
movsl
adc
dec
or
sbb
clc
cwtl
jne
adc
sbb
iret
mov
mov
movsb
mov
mov
xor
lcall
sub
jae
sub
jns
sahf
mov
int3
data16
cwtl
mov
and
out
stos
and
mov
push
repz
sub
shll
dec
fsubr
cmc
dec
add
rclb
loopne
and
aam
mov
lds
imul
nop
lods
mov
addr16
insb
pop
sbb
test
lret
fdivl
mov
inc
inc
mov
setae
outsl
cli
or
cld
push
cmp
pop
mov
rorl
icebp
sar
or
jp
data16
pushl
cld
cli
data16
lcall
cwtl
mov
sub
pop
sub
cmp
and
mov
mov
sub
ret
jmp
jmp
test
dec
and
add
lds
into
jae
or
pop
call
call
cld
inc
es
nop
in
lods
adc
push
clc
jl
dec
sti
cmc
cmc
stos
jle
ds
ljmp
repz
outsl
mov
and
in
and
push
jae
lds
add
pushl
jns
ficoms
lea
or
loope
rcrl
fsubrl
xor
jno
dec
ljmp
inc
sub
jns
imul
inc
inc
iret
mov
insb
jb
xchg
push
fildl
popa
data16
movsb
mov
pusha
das
push
mov
shll
pushl
cltd
lcall
dec
and
hlt
loope
mov
jl
stos
jp
xor
jp
xor
or
ret
pop
sbb
out
or
movsb
jbe
and
xchg
imul
decl
pop
cmpsl
bound
ljmp
ret
sti
mov
ja
sub
cmp
push
jns
lods
push
pop
inc
out
add
mov
xchg
add
mov
lcall
data16
lcall
push
adc
push
push
cmpsl
sub
mov
lds
orb
mov
and
mov
repz
cmp
shlb
add
jb
es
test
call
and
ja
movsb
and
cmpsl
xchg
jg
push
sub
insl
lds
int
frstor
call
shl
dec
mov
ljmp
mull
outsl
orl
and
call
pop
push
icebp
jo
sbb
inc
xor
mov
es
leave
jge
in
jmp
shl
sbb
lcall
add
xor
adc
sbb
mov
cmp
sub
pushl
cwtl
sbbl
jno
fst
sti
pop
stos
mov
rcrb
mov
sbb
sub
jo
mov
fists
mov
movsb
or
xor
insb
pop
lret
flds
int3
push
pop
jg
push
adc
pusha
rcrb
call
xchg
sbb
ror
push
sub
jne
adcb
out
adc
je
push
inc
fistpl
scas
adc
pushl
jecxz
cwtl
push
sub
xlat
inc
dec
mov
push
xchg
jno
push
test
stos
add
jb
movsl
decl
push
inc
inc
sarb
xchg
or
es
mov
mov
mov
dec
adc
outsl
orb
mov
mov
jg
ljmp
mov
and
repnz
sbb
outsl
and
in
addr16
inc
movsb
dec
call
mov
cld
push
xor
mov
leave
and
add
and
stos
dec
call
rcrb
shll
lret
mov
mov
mov
das
clc
jle
add
xor
pop
iret
jl
pusha
aas
incl
dec
add
jne
mov
cld
leave
int3
outsl
jl
inc
adc
lock
push
outsl
inc
push
cmpsb
shll
jmp
ficoml
adc
into
stc
fcoms
xchg
adc
xchg
xchg
dec
sbb
cmpsl
jge
dec
cmp
ljmp
clc
xor
push
inc
sub
xchg
imul
test
ljmp
aam
rcll
jle
lret
pop
jp
push
dec
fidivrs
pop
hlt
add
loope
push
shlb
popf
filds
push
mov
imul
xor
or
lea
ret
xorl
in
cmc
lret
sar
push
faddl
pop
dec
push
dec
out
lods
cs
rorb
nop
in
aas
icebp
dec
xor
pop
jmp
dec
or
dec
adc
std
call
dec
ja
imul
incl
fdivs
or
cli
ss
mov
mov
ja
push
jle
lea
ds
add
out
addb
ljmp
scas
jge
lahf
jae
mov
rorb
sub
lea
mov
pop
enter
in
ljmp
pop
ss
and
jp
outsb
sub
and
clc
pusha
pop
or
fistl
add
sbb
mov
call
add
xchg
xor
xor
add
or
pop
popl
xchg
xor
and
lods
stos
adc
ljmp
jg
ljmp
xor
pop
mov
jae
mov
bound
pushl
pushf
push
adc
imul
cmp
mov
mov
repz
sahf
xchg
imul
std
je
std
push
mov
cld
divl
inc
jge
sbbb
pop
cmp
insb
push
jp
decl
or
dec
arpl
icebp
cmc
and
or
jae
sbb
xchg
add
cld
ficompl
bnd
push
add
adc
adc
loope
iret
out
ja
das
hlt
and
xor
mov
pop
aam
add
outsb
pusha
cltd
jnp
jmp
psubsw
mov
xor
fists
dec
jle
xchg
cmp
shrb
fmull
pushl
icebp
push
xchg
pop
outsl
mov
xlat
xchg
push
sbb
ret
leave
or
arpl
data16
call
push
ret
or
pop
mov
stc
push
test
negb
lds
movsb
xchg
inc
xor
repnz
data16
lret
outsb
das
cs
paddusb
pushl
dec
mov
cmp
xchg
mov
into
push
add
mov
sbb
bnd
call
pushf
fdivl
xchg
shrl
faddp
int
or
and
orps
xchg
out
lea
lcall
gs
fisubrl
push
inc
lods
jb
cld
lea
lods
jne
cmp
xor
xlat
sbb
pop
incl
mov
pop
cwtl
fcoms
jae
lds
push
xchg
cld
jo
pusha
xlat
insl
fstpl
cmp
pusha
jmp
popa
addb
xor
rcr
loop
mov
mov
in
jmp
fstl
lcall
rolb
mov
mov
loopne
xor
jl
add
std
lcall
jb
and
push
xchg
jle
fildl
jne
mov
fdiv
jns,pn
call
movsb
sbb
call
inc
pop
dec
test
mov
add
fwait
jbe
and
push
jmp
and
mov
cmp
xchg
int3
add
inc
push
and
lock
cmc
mov
xchg
lret
jl
hlt
data16
filds
imul
push
or
jecxz
pushw
call
mov
int
fisubs
aas
mov
sbb
aas
aad
ret
daa
filds
sbb
les
dec
fldt
mov
mov
dec
addr16
lcall
ja
inc
push
jmp
lods
cld
push
and
jb
pusha
notb
mov
mov
loopne
sbb
stos
xor
or
lret
fadds
push
fmuls
push
je
fsts
or
shlb
jae
xchg
or
ds
popa
call
add
pushl
cli
cltd
jge
sbb
fnsave
arpl
dec
sub
cwtl
dec
andl
and
fucom
pop
jnp
je
out
icebp
mov
rcrl
sar
jmp
ja
mov
pop
jae
sbb
movsl
push
xor
pop
insl
mov
xor
add
mov
je
mov
test
xlat
jecxz
mov
and
pusha
mov
rcrb
lods
jns
sbb
mov
test
push
or
jg
out
rclb
jecxz
cmp
movsl
pushw
xchg
sub
ljmp
pop
jg
stos
lahf
test
stos
in
ljmp
lcall
push
aas
push
les
int
sbb
test
push
mov
pop
jg
pop
test
and
cmc
lea
or
pushl
mov
cmpsb
push
repnz
test
rcl
xchg
fsubl
add
ja
shrb
fisttpll
call
cmpb
cwtl
pop
outsb
inc
in
xchg
or
hlt
cld
cltd
xor
incl
enter
lea
sbb
mov
in
sti
call
mov
inc
pop
push
cwtl
das
shll
push
pop
int
pop
arpl
bound
add
jmp
popa
fldl
pop
out
add
cli
fs
stos
sub
xor
test
lcall
popf
adc
por
out
adc
xor
ja
cmpsb
nop
jmp
in
lret
cmc
or
and
call
sarb
xor
xor
movsl
pop
pop
add
pop
lea
mov
stos
and
daa
dec
gs
call
in
mov
push
sub
and
add
mov
xchg
jecxz
inc
push
add
sbb
mov
mov
outsb
or
outsl
add
jecxz
stos
jb
aas
popf
arpl
pop
sub
push
xor
lods
fs
sbb
push
inc
mov
pop
sbb
sub
out
jb
out
lcall
lock
inc
pop
int
vpmacssww
mov
fstl
jmp
sbb
dec
sahf
shll
movsb
cmpsl
push
fmull
mov
push
pop
mov
std
decl
and
popf
out
push
idivb
push
fcomi
iret
sbb
out
cwtl
es
xor
incl
dec
add
sbb
faddl
out
jb
mov
sub
push
push
inc
cmp
push
sbb
mov
aaa
in
jg
cmp
cld
shrl
cli
mov
cli
call
loopne
sarl
pusha
push
push
repnz
fiadds
pop
pop
das
fbstp
xacquire
push
push
add
pop
pop
sbb
mov
mov
arpl
outsb
push
lods
data16
loop
mov
cmp
in
out
fcoml
jle
sahf
adc
fcoml
xor
sub
push
xor
loopne
lods
jbe
fwait
clc
and
and
jno
cmp
ret
call
and
xchg
lret
push
mov
xchg
aad
incl
fadd
fidivrl
loop
je
cmpsb
out
insl
adc
push
out
push
ss
call
cmp
repnz
mov
and
mov
pop
jo
push
adc
mov
incl
mov
fisubrl
insb
push
inc
dec
mov
mov
mov
jbe
inc
push
mov
ljmp
out
in
or
adc
jg
ficompl
ret
mov
std
call
aas
or
xor
out
aas
pushf
fwait
xlat
bound
fidivrs
mov
ds
fbld
fldt
lods
dec
fs
xchg
sar
pushf
xchg
lahf
jb
icebp
fucomp
stc
test
push
jb
in
sub
xor
imul
call
mov
or
jge
out
sub
rorl
inc
jmp
rcll
test
mov
pusha
jp
in
mov
pop
mov
fadds
call
lea
cmc
mov
mov
or
sbb
mov
inc
and
push
inc
jge
ljmp
repz
loopne
push
cmp
pop
dec
popa
bound
inc
call
mov
xchg
outsb
jmp
dec
je
ret
dec
pushf
sarb
adc
rclb
ljmp
mov
aam
add
nop
and
dec
mov
pusha
mov
xor
or
mov
jg
popa
sub
xchg
add
scas
aaa
mov
inc
ljmp
sub
pop
adcl
jecxz
test
sbb
and
cwtl
leave
int
fcomip
pushl
fsub
imul
sbb
mov
mov
jne
ljmp
clc
pop
push
jb
addb
sbb
xchg
fwait
add
push
outsb
mov
ljmp
movsb
or
inc
fwait
fwait
and
outsb
adc
loope
sbb
std
insl
sahf
push
jb
add
lahf
sbbb
addr16
ljmp
adc
jae
stos
sbb
fbld
adc
xlat
jne
xorb
mov
and
xor
push
pushl
sti
push
mov
cmp
mov
jmp
inc
sbb
mov
arpl
fidivs
add
adc
ret
xchg
imul
into
pop
adc
incl
test
mov
adc
jnp
iret
lret
out
jle
mov
arpl
out
lcall
and
orl
push
jnp
cmp
jo
syscall
push
jne
lret
in
mov
incl
adc
aas
mov
mov
cmpsl
pushl
clc
movsl
jne
dec
fdivl
sar
lock
leave
adc
ja
int3
shrb
xchg
nop
ljmp
sbb
dec
daa
inc
and
aaa
bound
push
rcrl
xor
cmpb
fldenv
cmp
or
cmpsl
mov
push
adc
pop
iret
sar
xlat
inc
es
sahf
lcall
scas
into
dec
jg
jb
insb
js
mov
jno
inc
rcrl
or
sbb
std
test
jg
pushl
cld
dec
cmp
push
cmp
inc
adc
sub
testl
lcall
ret
int
imul
popf
dec
push
jae
inc
push
sbb
hlt
bound
stos
jnp
mov
addr16
mov
cltd
jecxz
repz
out
ret
lds
shrb
dec
lods
insl
popf
add
sub
pop
jp
cli
scas
test
adc
imul
mov
inc
mov
fwait
xchg
notb
mov
mov
lea
xorb
inc
cltd
dec
mov
cli
nop
xor
adc
add
test
sub
mov
fwait
lahf
addl
or
dec
out
jg
inc
notb
mov
or
sbb
xchg
stc
inc
xor
fsubr
inc
stos
dec
cld
add
ds
cs
in
mov
mov
ljmp
cli
int3
mov
jge
add
xchg
out
cwtl
lret
les
pushl
xor
push
sbb
sub
push
clc
dec
jno
stos
add
cmp
or
adc
adc
lds
jo
gs
pop
inc
cmpb
mov
incl
sarb
std
pushf
lock
fs
mov
lock
fsubl
ret
push
ss
dec
out
adc
sahf
jbe
and
mov
test
sbb
dec
pusha
lret
add
in
loopne
pop
xor
stos
pop
aas
idiv
call
mov
xor
pop
test
imul
push
push
stc
jmp
ss
mov
icebp
int3
xchg
cmpsl
mov
iret
add
dec
enter
mov
push
pop
lds
fnstsw
mov
int
outsb
aad
push
out
int
rcrl
int
call
jbe
movsb
ret
push
add
popf
je
ja
mov
sahf
add
imul
sub
jle
imull
movsl
or
shrb
ljmp
cli
mov
fiadds
push
decl
pop
dec
jns
ret
mov
adc
sbb
cmpsb
imul
xor
jae
and
and
cmp
mov
into
mov
js
push
cld
incl
jnp
mov
push
xchg
jecxz
imul
pop
cltd
out
jp
inc
push
add
ds
push
fisttps
aam
in
jmp
push
into
aam
jo
pop
insl
adc
insb
lock
pop
ret
insb
in
sub
dec
iret
jp
call
cld
sbb
push
jmp
and
cltd
xor
jg
test
and
cmpsl
int
lea
subb
jmp
sub
lea
jb
in
fisubrl
cmp
test
jo
mov
sub
dec
dec
lcall
dec
fadd
decl
loop
fcmove
fs
insl
loop
cs
dec
mov
unpckhps
jmp
dec
mov
lcall
daa
xor
sbb
adc
data16
xchg
xchg
mov
addl
xchg
dec
test
xchg
or
aad
divb
in
and
ds
mov
repz
pop
outsl
dec
fmul
insl
outsl
imul
out
scas
add
pop
mulb
jmp
and
sbb
push
movsl
scas
filds
lods
xchg
push
arpl
dec
popf
stos
cld
adcb
jecxz
mov
cmp
outsl
fcomip
jmp
ljmp
or
es
xchg
adc
sbb
push
shlb
inc
ljmp
add
addr16
js
xor
pop
scas
jae
sti
jg
pusha
push
adc
xchg
out
fadd
popa
lods
mov
mov
pop
xchg
push
dec
rcll
out
jp
sbb
cmp
jecxz
jae
dec
std
xchg
lret
dec
and
imul
incl
or
jnp
push
or
shl
mov
sti
inc
xchg
jmp
mov
xchg
addr16
decl
cmpsb
xchg
mov
jne
mov
jne
push
fstl
call
js
add
jmp
cmpsb
leave
jg
dec
stos
sub
pop
pop
cmpl
mov
into
push
dec
jle
add
sub
test
fldenv
cli
into
adc
jae
enter
sub
jg
sub
js
sti
loop
mov
stos
mov
xchg
push
or
push
out
fwait
in
push
rcll
pushf
movsl
fimuls
lea
roll
sub
inc
out
xor
decl
xchg
out
push
xchg
ja
arpl
mov
inc
cmp
add
xor
jmp
lock
aaa
std
cmp
cmp
push
lods
sub
push
jb
sahf
mov
mov
dec
sub
lcall
mov
sub
pop
jl
or
call
loop
fistps
xchg
mov
pop
mov
idivb
pushl
adc
xor
dec
add
lock
imul
mov
fstl
aas
inc
ljmp
clc
lcall
psraw
mov
ljmp
jne
incl
sahf
pop
ficoms
pushf
and
mov
jle
mov
inc
and
decl
jae
xor
xchg
gs
jns
mov
xchg
pop
into
daa
sbb
lcall
ljmp
mov
push
or
ds
xor
cmp
sub
incl
dec
xor
pop
stos
sarb
lea
loope
xchg
dec
shl
or
xchg
mov
xchg
lret
fldlg2
arpl
xchg
add
fnsave
arpl
mov
sar
call
shlb
imul
xor
pusha
mov
in
push
inc
mov
ljmp
mov
inc
fldcw
cmpsb
fwait
stos
and
sar
out
sar
cltd
jmp
dec
lock
or
pop
push
cmp
ljmp
xchg
dec
sarb
mov
add
ljmp
inc
jmp
inc
push
jg
and
mov
add
sbbl
incl
and
arpl
dec
sbb
add
pop
push
push
jmp
test
daa
dec
call
adc
int3
adc
jg
mov
enter
pop
test
scas
mov
cmp
sahf
push
insb
aaa
popf
in
push
adc
lret
cmp
popa
aad
rorb
cmp
bound
sub
pushl
dec
push
cs
fisubrs
dec
add
mov
push
arpl
xchg
std
jecxz
cmp
xchg
adc
or
loopne
cmp
movswl
cltd
cmp
and
aaa
cmp
fidivl
cwtl
push
mov
icebp
cmp
push
inc
ja
push
idiv
je
mov
leave
mov
jg
dec
pushf
pop
test
fidivrs
add
xchg
scas
in
andb
mov
sub
ss
cmp
push
int3
inc
adc
je
cmpsl
std
hlt
fcmovu
add
push
shr
pop
sub
icebp
jmp
cmpsl
pop
adc
fistpl
inc
jmp
dec
dec
loope
mov
daa
fisttpl
ret
push
test
lods
jo
incl
hlt
dec
adc
repnz
jo
cmp
enter
mov
pop
testb
in
inc
int
pushl
aas
outsb
ds
inc
in
sbb
mov
sub
es
jl
bound
mov
add
stos
je
mov
int
ljmp
fbld
inc
imul
mov
cmp
mov
or
lock
inc
xchg
in
fldl
pop
lcall
rcr
std
fwait
cmp
lock
outsl
clc
fs
int
lret
add
cmovle
clc
xchg
cli
cmp
and
ficomps
mov
mov
mov
mov
push
push
cmp
mov
jecxz
push
jg
xchg
movsb
icebp
mov
mov
jmp
loope
gs
jg
cwtl
xor
adc
leave
fwait
mov
repz
mov
ljmp
cli
in
sahf
insl
scas
mov
cwtl
repz
repnz
cmp
ret
insl
dec
loopne
mov
ljmp
testl
dec
xor
call
jo
jbe
xor
or
adc
imul
jmp
push
mov
mov
in
shll
cs
xchg
add
xchg
outsb
xchg
aas
xorb
jle
lahf
in
aam
popa
jle
cmp
repnz
ret
imul
mov
pop
mov
into
hlt
insb
movsb
sub
mov
les
cmp
sub
cmp
movsb
jbe
mov
sub
outsb
cmp
inc
sar
mov
adc
sti
gs
dec
xor
cltd
ror
popf
xchg
xchg
es
clc
ljmp
pop
mov
mov
jns
sarb
sti
adc
mov
add
mov
jl
xor
lret
or
fisttpl
cli
sub
ljmp
inc
and
decl
adc
loope
cmp
or
or
add
dec
sbb
aam
es
call
cmp
and
dec
xor
add
negb
add
sub
mov
lcall
enter
pmaddwd
hlt
outsb
push
push
in
or
push
dec
stc
ret
xchg
movsl
jns
call
jbe
mulb
mov
adc
roll
pop
mov
lcall
je
mov
mov
jg
sub
push
mov
and
sub
jg
pushl
cmpsb
ud0
ljmp
push
aad
or
ficomps
or
adc
fbstp
pop
popf
inc
cwtl
push
dec
imul
push
push
xchg
pop
call
push
shrl
mov
scas
fwait
in
push
xchg
insl
dec
mov
notl
test
jp
xchg
mov
and
ljmp
rorl
pusha
jnp
push
dec
mov
loop
loope
fsubrs
inc
fisubrs
add
shr
xchg
sbb
push
sti
scas
cs
adc
mov
xor
call
repz
insb
push
dec
rorl
lcall
and
roll
repz
je
mov
inc
idiv
pushl
add
mov
aad
repz
jo
jge
outsb
xchg
xchg
bound
pop
outsl
ljmp
jb
gs
scas
push
inc
mov
leave
push
rorb
mov
std
pushl
jae
outsb
pushf
and
mov
xchg
jb
daa
push
inc
jmp
std
fnsave
mov
lock
xchg
cmpsl
mov
int3
aam
add
ds
and
aas
push
and
fucomi
pushl
data16
jns
data16
lcall
in
sub
push
fs
sbb
incl
aam
inc
movsb
imull
add
xchg
mov
arpl
pop
inc
sub
sar
test
hlt
xchg
in
and
mov
daa
sub
ljmp
xor
incl
or
in
pop
testl
push
lcall
nop
aas
xor
cmpsl
out
aas
leave
xchg
ud2
cwtl
inc
mov
sar
fcoms
loopne
shl
shlb
mov
xchg
jmp
sbb
ljmp
xor
sub
addl
addr16
sahf
sahf
jmp
shll
repnz
sbb
push
pop
cmp
jb
outsl
and
mov
pop
scas
test
test
int
pop
mov
and
stos
cmp
js
fdivr
sbb
pop
aaa
jmp
sub
jp
cli
enter
jb
mov
insb
incl
jp
push
adc
xchg
fs
test
movsl
lret
push
sbb
ja
mov
ljmp
mov
mov
popf
ja
jle
hlt
mov
call
mov
pushl
arpl
mov
lds
push
xor
dec
dec
outsb
out
cmp
lret
add
xlat
pop
add
rcr
add
test
into
scas
or
mov
push
sbb
test
ret
jne
jmp
jns
lods
imul
arpl
lahf
lods
movsl
aam
clc
xor
scas
sbb
xchg
cmp
repnz
bnd
cmp
lcall
xchg
es
sub
lret
xor
imul
xchg
lahf
cmpsl
repnz
cltd
jmp
movsb
fs
mov
push
jp
xor
cmpsl
cltd
scas
cwtl
xor
jns
cmp
ljmp
add
cmp
repnz
dec
sbb
pop
or
add
mov
push
out
imul
in
dec
daa
aad
jecxz
nop
sti
popw
xor
hlt
cmp
pop
cmp
test
xchg
mov
outsl
sbb
push
es
ljmp
cs
add
popa
push
in
mov
stc
fistpl
push
ja
jo
je
jae
sub
stos
cmc
ljmp
xchg
leave
ret
sbbb
push
adc
imulb
pop
xchg
cwtl
push
in
add
and
fbstp
int
jecxz
adc
cmpsl
inc
loopne
mov
subb
mov
jnp
daa
ljmp
lods
lock
xorl
cli
add
xchg
scas
outsb
or
cltd
push
out
mov
push
insb
cmp
fistl
ss
sbb
aaa
push
sar
xchg
sbbb
incl
mov
pushl
pop
aas
cwtl
loopne
hlt
mov
jne
js
and
outsb
pop
sbb
add
ds
ljmp
fcoms
repz
fsts
or
scas
dec
out
jne
pop
mov
not
call
jb
xor
mov
fcoms
pop
cli
loopne
sub
jmp
int3
lcall
sub
xchg
mov
sbb
rcr
pop
divl
mov
xchg
lea
and
fbld
ljmp
nop
jmp
cwtl
sub
jp
dec
in
int
imul
mov
pop
movl
call
cld
and
sub
xorl
cmp
mov
pusha
insb
mov
aaa
inc
xchg
mov
out
pop
imul
cmp
cli
rcr
cmp
jne
and
in
inc
testb
and
mov
mov
fucomi
not
std
sbb
mov
inc
lcall
das
mov
lret
sbb
test
stos
pushl
xlat
push
mov
bound
or
or
jmp
test
inc
jge
push
sub
cmovns
es
sub
push
movsl
sti
stc
fsubrs
pop
sbb
std
xor
sbb
repnz
push
add
icebp
jne
shr
call
cmp
or
into
push
or
pushf
lahf
out
push
in
sbb
test
ds
scas
call
sub
int
addr16
sbb
in
mov
add
xor
sbb
pop
mov
adc
sub
fbld
push
push
sbb
mov
mov
xor
fstps
inc
ffreep
icebp
clc
jg
icebp
das
je
out
stos
sub
push
add
mov
ret
test
stc
outsl
hlt
lods
and
cwtl
jl
cs
sub
pop
cmp
outsl
xlat
adc
ror
xor
mov
jmp
out
testb
movsl
xlat
pop
and
aas
xchg
push
js
insl
mov
subb
ljmp
cmp
push
cmpl
test
lds
xchg
mov
cmp
mov
lods
sbb
push
loopne
bound
divb
sarb
jb
jmp
mov
dec
and
and
sbb
gs
jl
cmp
dec
jge
and
inc
sbb
shlb
jnp
sub
decl
and
imulb
out
xchg
out
mov
and
cmp
mov
adc
out
les
xor
int3
mov
pcmpeqb
mov
mov
inc
xor
pop
mov
mov
xor
rorl
addl
decl
cmp
push
je
pushf
xchg
cmp
mov
cs
movsb
icebp
aaa
jle
call
stos
pushl
sub
insb
sbb
adc
mov
cmp
lcall
fwait
cmp
imul
add
call
mov
pop
outsb
outsb
push
jno
out
or
mov
cmp
mov
psubusw
out
mov
shrb
cmpsl
rorl
call
in
fsts
lret
mov
movsl
or
mov
pop
push
aam
in
addr16
nop
mov
lcall
or
mov
mov
sbb
xor
xor
jl
icebp
ret
ljmp
pop
into
repnz
add
cmp
filds
cmpsb
fdivp
and
lcall
outsl
test
ss
out
push
pop
icebp
inc
in
lcall
jl
jge
scas
movsl
jmp
mov
push
dec
inc
je
mov
adc
loope
loope
push
inc
or
xor
adc
mov
ds
adc
std
andb
sbb
mov
mov
gs
movsl
add
int3
xchg
mov
ljmp
das
sahf
push
pop
loop
ss
fisubl
loop
push
push
ja
xchg
and
loope
dec
adc
mov
cld
das
pop
repz
imul
int3
lret
dec
jge
fldl
mov
jo
xchg
adc
sahf
jp
jnp
sub
cmp
test
call
lret
xor
adc
sbb
pop
ret
mov
cmp
fs
mov
icebp
ljmp
mov
or
jp
test
jp
pop
outsb
fdivr
sti
lcall
jle
stos
push
push
mov
mov
dec
adc
jbe
icebp
lret
pop
mov
jecxz
idiv
fildll
and
push
inc
mov
das
mov
nop
rorl
insl
shlb
xor
push
or
call
mov
outsl
pop
iret
loopne
mov
movsb
pop
cmpsl
mov
adc
jns
dec
call
pop
mov
sbb
cld
stos
es
xor
mov
data16
ljmp
push
or
out
cmp
out
iret
mov
mov
ficomps
sub
inc
cmp
xlat
xor
cwtl
add
imul
sbb
lcall
push
mov
aas
in
jbe
jmp
insb
mov
xchg
xchg
ds
sub
leave
mov
aad
sbb
pop
xor
lcall
lret
push
cmp
nop
pushf
nop
sbb
scas
ffreep
out
lods
or
lret
cltd
jmp
push
ja
mov
scas
loope
and
and
pushf
add
incl
shlb
pop
ljmp
or
inc
xor
mov
sbb
xor
lcall
lcall
lock
mov
insb
sub
dec
repnz
and
mov
repz
call
push
xor
jne
jl
xchg
pusha
je
sub
and
ret
fistps
xlat
nop
mov
lods
je
and
call
fadd
xor
xor
sbb
jae
icebp
ja
int3
mov
out
pop
jnp
mov
sbb
or
js
inc
mov
push
push
fsts
lcall
sarb
mov
sub
push
aam
xor
xor
incl
and
jl
addr16
push
xchg
shll
decl
inc
jo
sarb
fdivr
lea
push
fnstenv
clc
lret
jg
jno
jb
jb
push
imul
mov
mov
cmp
inc
jae
mov
mov
xchg
mov
sub
dec
test
sti
lock
mov
push
and
lcall
or
jno
aaa
add
mov
test
insb
aaa
fisubs
mov
bound
cld
mov
mov
bound
out
sbbl
mov
pop
dec
lret
cmpl
add
lcall
mov
push
mov
or
pop
xor
pushfw
mov
fidivs
repnz
fimuls
out
lods
sbb
or
out
mov
pusha
sar
call
scas
aad
nop
test
mov
ja
cmp
repz
jg
les
jnp
outsl
push
push
xchg
push
mov
push
push
ret
pop
push
mov
lcall
mov
imul
or
subl
push
movsl
data16
jg
xor
je
fcomp
sbb
cmpsl
fimuls
inc
aaa
xchg
out
or
pop
mov
or
mov
lcall
fildl
mov
movsl
lea
fimull
pop
sbb
insb
mov
iret
ljmp
movsb
cltd
cmp
jmp
dec
movb
or
mov
addr16
mov
pop
and
lcall
lods
sub
push
data16
inc
enter
pop
and
pop
nop
imul
dec
and
fistpll
and
decl
mov
mov
fs
addr16
pop
mov
jg
cs
arpl
pop
jg
jg
adc
repnz
sub
mov
or
das
std
mov
std
pushw
add
mov
add
cmpsl
mov
cmp
adc
dec
aam
mov
or
ljmp
fidivl
lcall
decl
fs
loop
insl
sarl
push
movsb
cwtl
hlt
jmp
mov
outsb
iret
mov
mov
mov
adc
cld
fiadds
call
cmp
add
loopne
scas
xor
loope
in
adc
inc
cmp
in
mov
aas
fnstcw
xchg
orl
mov
xorb
cmp
rcl
aam
adc
outsl
clc
dec
push
dec
dec
lahf
pop
dec
subb
mov
mov
cmp
ss
mov
push
imul
adc
jmp
add
push
cld
lds
sub
ret
sar
or
or
sub
mov
or
push
in
scas
pop
xchg
lcall
dec
mov
xchg
int3
inc
push
movsl
fcompl
fsts
sbb
and
in
negb
cli
cmp
dec
std
inc
mov
xor
rcr
scas
sbb
repnz
jg
jmp
jne
je,pn
jle
mov
or
lods
mov
adc
and
mov
mov
cmp
cmp
mov
sub
rcll
jnp
fcomip
std
and
arpl
or
call
mov
jl
lcall
mov
popa
test
int
sarb
adc
dec
inc
adc
mov
inc
lds
lock
dec
js
imul
jbe
cltd
xlat
and
mov
into
sbb
in
jmp
xchg
pusha
dec
sub
sbbb
popa
push
je
iret
pop
and
call
jg
and
dec
xchg
movsl
cmp
sub
out
enter
test
mov
dec
xchg
jmp
push
push
fldl
xchg
mov
std
lahf
xor
mov
int
pop
or
inc
or
xchg
ss
jmp
enter
cwtl
mov
int3
cld
rcrl
push
int3
cwtl
and
out
mov
pop
and
pop
hlt
jmp
popf
jmp
or
cmp
sarb
jne
fisubs
iret
xchg
xchg
bound
mov
outsb
lcall
pop
push
lock
fsubp
scas
mov
xchg
add
stos
ret
decl
dec
imul
xchg
sbb
mov
xchg
jmp
sub
jae
xchg
jge
call
in
sbbb
xchg
xor
jmp
and
std
std
fcomip
lcall
cmpsb
mov
lock
mov
inc
adcl
sub
ret
pushl
add
lcall
mov
mov
push
dec
sbb
cmpsl
jg
das
cli
pop
pusha
cmp
xor
mov
xchg
out
ljmp
pushl
inc
dec
test
fs
push
pop
cmp
sub
pop
aas
or
jbe
jo
cld
sbb
sub
rcll
lret
iret
addr16
jecxz
fwait
loopne
adc
pop
dec
aaa
push
fdivrp
jmp
pop
ds
into
enter
insb
int3
dec
lea
std
es
and
scas
cli
rep
xor
xchg
insb
mov
aam
setp
cld
push
mov
call
xor
adc
insb
mov
int3
cltd
out
xchg
rcrb
pop
in
dec
lret
push
pusha
cltd
es
incl
xchg
adc
ljmp
mov
mov
std
aas
test
push
inc
fcom
scas
setl
movsl
inc
and
xchg
cmp
ret
xor
call
sub
pop
xchg
test
loopne
mov
add
add
xchg
stc
imul
mov
std
sti
push
jecxz
mov
cmp
mov
scas
pop
icebp
adc
sub
xchg
icebp
nop
daa
lcall
fidivrl
add
out
cli
pushl
pop
sub
dec
cld
jge
fisttps
cmpb
aad
lods
adc
mov
mov
xor
add
mov
cli
in
into
xor
mov
ss
incl
neg
inc
aas
lahf
loope
cmpsb
test
jge
leave
add
add
popw
out
and
mov
jmp
into
dec
hlt
je
push
shlb
mov
push
movsl
aad
ret
jne
and
adc
lcall
lahf
xchg
push
xor
cmp
jl
dec
cli
push
fisubrs
jecxz
ss
pop
scas
pop
inc
jl
jle
sbb
cmp
mov
or
mov
mov
mov
stc
xchg
in
es
incl
push
lret
scas
jp
mov
xchg
xchg
movsb
loopne
shlb
subb
fsub
std
and
xor
scas
or
sbb
pop
sbb
sbb
cmp
pop
hlt
jmp
gs
push
xchg
insb
mov
fcoms
mov
cld
mov
mov
jmp
xor
xlat
sti
jns
cmpsl
push
xor
fstl
dec
cltd
loopne
xchg
loope
sbb
cltd
pop
scas
ss
dec
adc
call
add
ret
mov
in
loopne
pop
mov
lahf
fstpl
pusha
push
push
mov
lahf
push
add
sub
cld
jg,pt
cmp
cmovs
xlat
cmp
dec
test
adc
jg
add
aaa
test
push
jp
in
dec
or
das
aas
mov
and
push
adc
jns
pop
cmp
pop
cmp
ficompl
das
or
call
pop
inc
insl
leave
arpl
rcrl
mov
mov
aad
push
fisttpl
fdivrp
mov
rcrl
xchg
lret
sub
push
dec
xchg
and
jg
scas
adc
ds
mov
shl
test
scas
pop
cmp
addr16
int3
shlb
sub
xor
cs
cmp
lcall
cwtl
rcll
mov
int3
push
inc
mov
pushl
call
insl
pop
cmp
cs
pop
enter
aas
ret
push
pop
xor
andb
mov
ficompl
push
sub
sub
mov
dec
inc
sub
bound
inc
ljmp
cli
ljmp
xchg
xchg
sub
dec
inc
les
pop
scas
lock
lahf
cmp
mov
pushl
stc
and
jmp
mov
dec
cld
inc
mov
jae
jp
jmp
call
fs
add
mov
pop
mov
sub
jp
loopne
dec
pop
aad
mov
mov
sub
ficoml
pop
repnz
push
pushl
cli
or
outsl
xchg
es
lods
add
push
sbb
sub
imul
ljmp
inc
dec
in
stc
xchg
pop
inc
push
movsl
pop
neg
andl
test
xor
push
xor
ljmp
pop
stos
clc
pop
adc
popf
call
sbb
cli
jg
cltd
push
cmc
inc
jae
lret
loopne
dec
mov
fsubrs
call
outsl
cs
mov
pop
sbb
jb
or
xor
jge
mov
filds
dec
xor
jle
fstl
es
sarb
das
mov
sub
call
sub
dec
jle
push
fs
insb
call
jg
sti
add
negw
ja
ja
push
xchg
jp
aam
sbb
jmp
add
arpl
xor
ds
test
arpl
pop
incl
clc
push
sahf
scas
adc
stc
xchg
scas
push
mov
xchg
push
cmpsl
inc
cmp
pop
xor
dec
jb
and
ret
rcll
lret
pop
cmp
scas
add
lret
cmp
jg
jecxz
xchg
loop
dec
sub
cmp
xchg
fwait
mov
dec
hlt
xchg
call
xor
cld
sbb
lea
sbb
lea
dec
cmpsl
loop
mov
mov
xchg
dec
loopne
inc
mov
les
add
pushl
push
mov
insl
and
lods
mov
xchg
sar
dec
pushf
int
call
inc
loop
cmp
jp
cmp
stc
sbb
pop
mov
pushl
fidivrs
xor
sub
mov
sub
loop,pt
popf
sarl
push
and
add
loope
jne
ljmp
fmull
pushl
ds
cli
aas
ljmp
pop
divb
daa
pop
fs
cli
jg
inc
fadd
enter
lock
or
lds
pusha
jb
call
loopne
pop
out
mov
add
jecxz
out
jge
jae
ds
cmp
orl
shll
pop
dec
icebp
jnp
inc
mov
cmp
addr16
sub
pusha
test
pop
fadd
xchg
lahf
jg
incl
aas
fstpl
jae
icebp
popf
ds
mov
ffreep
ret
loop
mov
pop
jns
ljmp
or
faddp
dec
cmpsl
dec
je
scas
or
inc
cmc
repz
fwait
fs
lcall
or
orl
xchg
pop
sub
mov
xchg
shl
idivl
mov
jg
cmpsb
lods
lcall
pop
cmpl
mov
xchg
cmp
jmpw
push
ljmp
sub
sbb
andb
sbbb
adc
cmp
in
loop
mov
push
push
cmpsl
loopne
pop
mov
or
jmp
cmp
cwtl
push
insl
xchg
fstpl
lcall
arpl
ljmp
adc
and
mov
stc
movsb
dec
mov
jb
in
jno
fsubs
decl
mov
fdivrl
mov
mov
test
inc
mov
or
ljmp
push
mov
push
mov
sahf
mov
call
les
mov
mov
cmpsb
cli
in
mov
in
fdivrp
je
mov
xchg
inc
pop
inc
sti
and
cmp
popa
fdivl
lcall
test
jo
mov
mov
or
or
hlt
stos
jmp
ret
jmp
dec
lcall
and
inc
mov
lcall
icebp
ja
sub
xchg
popf
jg
push
je
scas
mov
mov
cmpsb
popa
jl
push
pop
repnz
jmp
cld
in
aad
lock
mov
shufps
cld
ljmp
fstpt
aas
pop
aad
leave
push
pop
movsl
sbb
and
mulb
cli
mov
ja
out
in
unpckhps
push
add
pusha
push
xchg
mov
push
mov
jl
je
xor
ficompl
pop
or
jmp
mov
xor
or
iret
pop
bound
movsl
and
cmpb
lea
decl
js
imul
fidivrl
and
push
nop
sub
jae
lahf
cmc
mov
sub
push
stc
rcr
sbb
dec
cmp
xchg
push
out
mov
inc
rol
mov
xor
out
mov
mov
das
jmp
out
add
idivb
inc
pop
dec
push
mov
and
or
scas
xchg
mov
or
leave
jae
aad
jns
xchg
fildll
mov
test
push
mov
sti
lret
pop
fsubs
cmp
aam
jmp
mov
jae
lods
pusha
xchg
inc
rclb
dec
push
sbb
xor
mulb
daa
jge
push
mov
test
add
and
or
xor
nop
lcall
incl
lret
lret
push
shl
pop
loop
movsl
pminsw
push
or
ds
in
fldl
mov
fildl
push
add
scas
rorb
dec
repz
mov
jg
add
movsl
mov
cltd
enter
mov
mov
inc
ret
push
pop
push
pusha
loop
movsb
pop
movsb
jmp
xor
movsb
cltd
mov
add
jbe
push
adc
jmp
decl
nop
in
outsb
xor
mulb
out
fistl
dec
push
mov
jle
in
mov
or
data16
jg
je
mov
jns
mov
popa
clc
pop
xlat
andb
js
mov
fcomip
das
jb
cmp
fmul
sar
in
movsb
lcall
adc
mov
lcall
and
sarb
shll
lds
add
arpl
or
mov
cmp
stos
mov
jb
fcoml
dec
sub
cwtl
lds
in
fisubrl
dec
ss
and
mov
mov
arpl
pop
jmp
jge
adc
test
jle
sub
xchg
pop
gs
mov
lcall
je
mov
test
add
or
iret
das
mov
into
fcmovnbe
xchg
out
push
inc
push
sub
lods
jp
js
dec
fdivrp
std
push
aas
jp
sar
sbb
fisttpll
cmpsb
cs
scas
dec
add
mov
xchg
decl
xchg
pop
add
enter
xor
movsl
push
pop
in
cmpsl
mov
lock
mov
rcrl
push
xchg
push
repz
inc
dec
cmp
std
mov
into
sbb
fsub
jecxz
pop
dec
leave
and
popa
or
mov
add
mov
and
ljmp
ljmp
insl
cmpsl
mov
clc
scas
jae
pop
push
xchg
and
dec
outsl
dec
je
dec
push
cmp
call
dec
mov
xor
push
scas
sbb
add
or
stc
outsb
in
sub
decl
pop
mov
shll
call
sahf
cmp
pop
popf
das
stos
subb
pushl
jae
sbb
mov
jecxz
ret
iret
cwtl
icebp
jnp
fsubrl
daa
xor
mov
ljmp
inc
aas
xlat
adc
mov
xchg
dec
mov
mov
or
xchg
jl
jae
push
push
mov
fildll
ds
mov
adc
inc
and
outsb
js
pop
lock
fsubr
mov
test
pop
fldenv
cmp
push
mov
push
xor
pushl
mov
test
inc
ret
cmp
jle
push
movsb
xchg
sti
and
adc
mov
or
fucomi
popa
fdivrl
xorb
mov
fdivrl
cmp
pop
shl
xchg
lods
fwait
or
inc
adc
jg
push
incl
mov
push
sbbl
adc
ja
fmul
adc
dec
call
pop
out
jp
incl
ljmp
fcmovb
sub
sub
cmc
imul
pushl
cmp
ret
nop
sar
repnz
popa
call
xchg
mov
or
push
push
cli
mov
enter
enter
dec
repnz
leave
add
ljmp
add
dec
lock
cli
mov
ss
xor
mov
pushl
cld
sub
in
int3
jo
sub
in
and
jno
jle
cs
jbe
mov
jmp
aas
stc
in
sub
shlb
cmpsb
mov
inc
div
fcmovb
rorl
ljmp
pop
pop
and
les
insl
or
jg
xor
test
ljmp
call
test
dec
gs
leave
mov
push
push
inc
jmp
fisubrl
dec
fcomip
jmp
icebp
lret
mov
insb
push
out
mov
mov
lods
mov
aad
push
test
mov
push
mov
xor
int
stos
fs
loope
xchg
mov
inc
cmp
decl
jge
fimuls
pop
mov
cmp
pop
rol
scas
sbb
cmp
dec
jmp
push
xchg
xchg
repz
lret
cmp
inc
push
mov
pop
sbb
push
into
stc
mov
repnz
jns
cmp
push
shl
jae
mov
push
pop
rcl
popa
and
mov
add
clc
jmp
mov
mov
das
jne
mov
lahf
pop
xor
movsl
xchg
imul
cli
bound
add
push
pusha
jno
mov
xchg
push
mov
mov
mov
pop
jmp
sar
push
loopne
inc
pop
out
lret
dec
cmp
xchg
dec
pop
incl
mov
pop
in
adc
outsl
lds
jo
sahf
fs
xchg
daa
call
mov
loope
xor
mov
bound
std
divl
insl
xor
ja
lcall
addl
and
stos
push
lret
inc
mov
and
jbe
sbb
mov
mov
mov
xchg
jbe
testb
cmp
mov
iret
out
push
loop
cmpsb
cmp
in
mov
leave
pusha
adc
nop
lods
lock
add
fisttpl
inc
mov
pushf
jecxz
xor
cmpsb
fiaddl
mov
decl
idiv
mov
jge
std
cmp
nop
and
add
popa
lock
dec
cmp
xchg
cli
xor
incl
jae
pop
mov
adc
loopne
mov
push
jns
add
incl
cmp
mov
jp
ret
inc
fmulp
jg
fnclex
mov
xchg
sub
movsb
out
inc
mov
and
lret
push
push
je
lcall
in
adc
scas
mov
push
dec
pusha
movsl
add
xchg
inc
lea
sarb
mov
dec
xlat
call
jmp
mov
mov
pop
test
cwtl
xlat
sbb
clc
js
push
xchg
loopne
xor
xchg
les
repz
pusha
arpl
mov
xchg
stc
or
lcall
push
mov
or
jmp
cmp
in
outsb
bound
repnz
ret
jg
cmp
mov
fbstp
mov
jbe
xor
or
fld
xor
call
jne
pop
sub
js
push
adc
or
insb
mov
stc
xchg
out
xchg
pop
cmc
push
stos
dec
mov
enter
shlb
mov
std
mov
xchg
clc
dec
aam
jl
dec
xor
push
xor
jb
in
rolb
inc
das
cmp
push
mov
jae
out
rcll
pop
adc
push
sbb
loopne
push
ret
add
decl
sub
mov
sbbl
les
add
sar
call
xorb
and
popa
popf
mov
push
adc
out
call
sub
inc
in
addl
lds
mov
enter
ljmp
sbb
test
out
rclb
ss
in
cltd
or
jae
decb
rorl
sub
out
std
jo
sbb
imul
xchg
mov
outsb
dec
sti
mov
in
pop
mov
and
xlat
repz
pop
loope
cli
pushl
mov
hlt
push
add
add
xchg
fisubs
shrb
pop
ja
mov
lds
or
add
mov
jge
sbb
ss
or
clc
ja
push
fst
ret
push
push
inc
mov
mov
mov
dec
xchg
cmpsb
scas
add
dec
xchg
inc
dec
fadd
cmpsl
cld
mov
xchg
int3
sbb
jmp
in
mov
lcall
pop
jo
mov
pop
cmp
add
decl
push
xchg
rcl
mov
fildll
outsl
ja
sbb
mov
pop
imul
or
xchg
dec
sbb
sti
pop
shrl
dec
dec
cmpsl
dec
ror
jp
enter
add
dec
adc
sar
call
sub
mov
adc
adc
cmp
ret
aad
sub
mov
dec
xchg
and
lea
add
push
or
lcall
sub
dec
fdivl
mov
fisttpl
notb
lcall
movsb
adc
lahf
push
jno
clc
cmp
mov
dec
addr16
xchg
jl
fistpl
sub
decl
push
jns
mov
xchg
clc
jae
jecxz
push
mov
test
insb
sub
dec
lcall
or
mov
sub
pop
mov
rclb
jne
mov
lcall
sbb
mov
cli
or
je
mul
xchg
or
movsl
fs
movsl
sub
lock
ljmp
adc
shlb
cmpsl
pop
and
ljmp
push
cmp
xor
pop
scas
clc
mov
xchg
loope
cmpsl
les
mov
outsl
mov
xor
ljmp
cmp
imul
hlt
add
rorb
pusha
js
iret
ffree
cli
mov
inc
faddp
es
add
jo
xchg
xchg
aam
mov
mov
jmp
push
jle
jmp
adc
into
fwait
lcall
add
inc
imul
mov
mov
icebp
shl
inc
xorb
imul
cvttps2pi
jmp
pop
adc
stos
inc
jp
cltd
data16
xor
cmpsl
cmpsb
imul
insl
insw
mov
inc
idivl
xchg
cmp
mov
and
ja
adc
sbb
and
and
cmpsl
pushl
fldenv
pop
jle
sbb
jg
shrl
pop
xlat
inc
mov
fildl
stos
sar
pushl
cmp
sbb
fcomp
outsl
mov
add
rorb
sub
ret
jmp
test
fimull
mov
push
sub
sbb
mov
mov
fdiv
out
and
push
fidivrs
pushf
ljmp
sbb
mov
pop
fcomip
sahf
lcall
adc
dec
and
and
cmp
inc
and
mov
scas
ret
jg
pop
cld
cmp
mov
add
adc
dec
jp
lea
incl
stos
xchg
fdivrs
mov
fs
cmpsb
xchg
or
andl
cmp
mov
xchg
aaa
xchg
in
icebp
inc
std
dec
mov
and
jl
scas
ljmp
les
je
push
imul
stc
std
cmpsb
aam
out
into
cmpsl
dec
jb
int3
out
push
std
incl
mov
push
scas
stc
jno
sub
in
push
jns
pop
mov
ljmp
and
or
pop
xchg
pop
cwtl
js
inc
xchg
add
jns
test
adc
incl
jle
push
and
cmp
outsl
mov
loopne
fstpt
lcall
xchg
and
jns
mov
adc
lds
sbb
fsubl
cmp
in
lcall
aad
dec
jno
pop
fdivrs
add
es
nop
jge
out
and
pop
jecxz
push
jp
inc
repz
mov
lret
incl
jnp
arpl
and
pusha
lcall
xlat
adc
jp
jno
pop
mov
push
jecxz
test
ljmp
push
jg
push
or
dec
cwtl
imulb
cmpsl
sub
adc
sbb
pop
xchg
rcrl
adc
or
jg
jge
cld
lcall
jmp
inc
jp
mov
inc
je
sub
cmc
int3
and
jg
and
and
lcall
jge
xor
xchg
mov
roll
jmp
pop
stc
or
mov
and
inc
iret
in
jnp
mov
push
push
pop
out
sub
ljmp
leave
jae
or
mov
ffree
push
lock
je
aam
adc
push
scas
dec
pop
adc
push
push
ljmp
mov
or
popf
std
sub
dec
fidivs
mov
or
xor
mov
insb
pop
ljmp
mov
xchg
or
inc
sub
mov
or
jo
xchg
call
int
pop
push
cltd
inc
pop
mov
mov
xchg
and
and
shrb
int3
out
icebp
decl
cmp
jl
loope
les
fwait
sbbb
mov
cmpsl
inc
lock
pushf
or
fdivrp
fwait
pop
add
cmc
and
bound
mov
inc
int3
insb
jae
out
mov
cmp
and
fcmovnb
insb
aad
add
arpl
mov
movsl
inc
push
pushl
loop
fldenv
inc
loopne
lods
arpl
mov
in
or
into
pop
arpl
mov
fwait
and
pushl
in
or
add
loopne,pn
movsb
push
cmc
incl
xchg
xlat
mov
bound
xchg
lds
sarb
mov
sub
jl
sbb
pop
push
push
shlb
push
jecxz
addr16
jg
call
movsb
cmp
jns
test
pop
or
add
inc
andb
out
mov
jmp
dec
dec
out
lea
jge
inc
lds
mov
ljmp
cli
imul
bound
dec
fucomp
scas
ljmp
add
xlat
push
mov
fstp
outsb
inc
je
popf
mov
pushf
sahf
dec
popf
xchg
jmp
jns
rcr
jno
lds
arpl
mov
cmp
pushl
mov
js
mov
cwtl
leave
insb
jb
sbb
jb
rorb
inc
fmull
or
decl
stc
test
push
aad
rcrb
mov
lods
je
cmp
call
xor
inc
mov
imul
dec
bound
jo
sbb
mov
pop
test
popa
dec
ss
loop
call
cld
aaa
push
mov
jne
xchg
and
adc
or
iret
dec
lret
sub
mov
int
cmpsb
push
out
pop
sar
into
rcrl
push
jg
mov
inc
test
jo
in
or
ret
push
enter
mov
sti
jl
and
repz
popa
pop
icebp
cmpsl
and
sub
mov
imul
jl
jmp
fnstenv
pushl
sbb
dec
mov
test
lds
pop
mov
jg
jns
cmpsl
iret
dec
jae
idiv
cmp
fstl
rcrl
xor
cmpsb
dec
inc
out
xchg
scas
call
jge
jae
jge
push
cli
std
lret
mov
es
cmp
and
incl
xor
lahf
inc
outsl
mov
sub
js
jp
aas
loopne
xchg
aad
fxch
lea
icebp
ja
ljmp
js
test
add
lea
add
lcall
cmp
lock
jp
pushf
or
jbe
pop
idivl
or
mov
add
fmuls
shlb
test
xlat
faddl
ljmp
jge
addr16
push
and
jmp
push
jmp
mov
xchg
lock
sbb
fcos
call
pop
ljmp
clc
scas
push
jecxz
jle
faddp
xor
jl
mov
ljmp
pushf
and
mov
mov
mov
jns
push
pop
aam
push
cmp
call
bound
loop
mov
outsb
les
iret
jns
xor
mov
jg
pushl
movl
stos
pop
push
ja
jb
adc
shlb
hlt
negl
mov
push
call
fsubs
lods
iret
xchg
popf
mov
lods
ljmp
loope
fadds
testl
xchg
or
lret
lcall
mov
mov
mov
lods
or
int
es
mov
ja
sti
mov
lcall
imul
or
sbbl
stos
sbb
stos
hlt
imul
mov
jle
int
xor
ljmp
clc
nop
imul
jb
xlat
in
arpl
add
mov
jg
push
pop
jg
dec
call
cmpsb
hlt
pop
and
dec
inc
add
pop
repnz
fnstenv
incl
push
xor
rcr
pop
and
outsb
int3
jecxz
fnsave
jb
loope
ljmp
cmp
sti
nop
inc
mul
push
outsb
cmpsb
lea
addr16
cwtl
addr16
push
pop
cld
outsl
cli
mov
pop
pop
mov
jmp
fdivs
decb
in
push
pop
mov
call
xchg
add
pop
ss
inc
mov
pop
mov
dec
and
mov
xor
loope
and
out
pop
push
mov
incl
inc
dec
xchg
xchg
mov
pop
loopne
lock
ja
lds
jmp
cwtl
xor
inc
int
xchg
pop
aaa
ljmp
pushf
leave
pushf
xchg
lcall
sub
jmp
outsl
xor
lret
inc
xor
mov
arpl
sbbb
cmp
fmul
outsb
fisubrs
push
mov
pop
icebp
outsb
or
inc
dec
push
call
sbb
repz
mov
jb
adc
dec
dec
dec
ret
or
insb
mov
and
call
cmpsb
mov
push
sub
push
push
std
mov
lahf
shlb
fadd
xchg
movsl
sub
ljmp
or
dec
sub
xchg
pushf
push
push
jne
pop
cwtl
lret
lcall
movsb
imul
xchg
ds
or
cmp
adc
popf
mov
movswl
mov
les
mov
nop
decl
or
or
iret
push
arpl
clc
loopne
jae
mov
imul
xlat
xor
decl
and
or
jae
repz
xchg
leave
dec
pcmpeqw
dec
movsl
lcall
in
push
jo
push
nop
into
je
push
in
push
add
imul
iret
pop
stos
lods
mov
ljmp
int3
orb
mov
push
hlt
dec
mov
icebp
mov
lock
ljmp
sub
push
jns
pop
rcl
xchg
or
js
jg
jno
xor
shlb
fnstsw
decl
aam
adc
jp
xlat
dec
fwait
outsb
xor
jg
dec
out
enter
or
lock
enter
jnp
mov
adc
xchg
xchg
ret
aam
push
lea
in
in
insb
das
pop
popa
and
decl
jecxz
outsl
push
add
hlt
mov
xchg
pusha
jge
mov
pop
stos
sub
lods
lcall
adcl
sbb
out
aad
xlat
stc
cmpsl
sbb
int3
cmp
jb
aam
jmp
into
xor
in
dec
xor
sub
inc
adc
imul
lcall
pop
or
insb
mov
cld
mov
jl
cld
xchg
push
mov
nop
or
sahf
jne
jmp
outsl
jg
subb
decl
movsl
dec
data16
mov
insb
stc
xchg
sub
cwtl
and
cmp
and
ljmp
fcmovbe
and
cwtl
shlb
mov
lods
pushf
movsb
das
mov
lock
xor
jmp
mov
cli
xlat
jp
sub
pop
jg
es
mov
or
imulb
mov
nop
nop
mov
dec
mov
push
mov
jle
aam
mov
dec
notb
sub
std
icebp
lcall
and
jmp
adc
orl
je
sbb
push
xor
adc
mov
decl
sbb
sahf
push
ja
inc
mov
push
pop
jl
pushf
fists
cli
lcall
pop
push
shrb
test
pop
adc
sub
or
push
cmp
clc
bound
jl
jne
cwtl
xor
mov
pop
lock
test
or
ljmp
sbb
push
stc
mov
orl
int
mov
inc
or
mov
inc
adc
mov
cld
push
jg
cs
or
xor
imul
fstl
inc
dec
sbb
int
lds
push
repnz
fsts
pop
nop
sbb
mov
jmp
sti
xchg
subb
jo
insb
repz
jbe
sbbl
sub
mov
fcoml
jmp
nop
mov
gs
xchg
pop
jg
mov
iret
fsts
jecxz
jecxz
out
out
incl
fcmovnbe
test
addr16
ss
mov
adc
arpl
or
mov
jmp
mov
mov
add
mov
enter
push
ficompl
xor
lcall
imulb
mov
bound
dec
mov
mov
stc
and
or
loopne
enter
fdivr
cltd
cld
and
lods
imul
enter
add
lcall
and
addr16
dec
or
push
out
fwait
jb
mov
or
inc
push
ficompl
adc
sub
jb
push
mov
and
mov
ljmp
rcr
out
xor
scas
mov
ljmp
pop
add
lods
dec
movsl
mov
data16
push
imul
fsubrp
fwait
popf
and
mov
pusha
jg
call
dec
dec
inc
cmpb
sbb
dec
pop
and
clc
rorb
mov
add
shl
les
or
adc
dec
push
repz
cld
jmp
mov
xchg
dec
arpl
rolb
hlt
into
pop
jecxz
xchg
jmp
pop
jne
aaa
in
push
jbe
cs
adc
mov
incl
xchg
insl
jp
mov
dec
les
jle
mov
test
mov
ret
add
nop
pop
das
mov
repnz
out
push
ror
or
das
fcomps
jmp
lods
xor
dec
or
fxtract
cmp
movsb
sbb
pop
add
dec
and
lds
jecxz
cmp
xor
inc
bound
add
or
dec
mov
cmp
das
push
ljmp
dec
jbe
imul
push
or
leave
nop
decl
push
in
fldenv
inc
inc
daa
fs
jecxz
std
data16
popa
xor
inc
pushf
aaa
lret
cmp
sub
shrb
cli
sub
and
shl
hlt
mov
sbb
decl
imul
cmpsb
movsb
push
out
pop
iret
mov
aas
or
arpl
sti
mov
incl
test
jne
mov
lods
fcomi
fsts
ret
stc
lods
push
jb
lret
test
pop
pop
jnp
out
mov
fucomip
repz
mov
outsl
dec
das
push
out
mov
xor
jp
std
dec
add
orl
lods
mov
faddl
xor
mov
stos
jb
mov
out
lahf
dec
pop
xor
in
or
loope
sub
decl
adc
rorl
ds
std
rcll
aas
and
xchg
jae
stos
stc
icebp
sbb
popf
add
sbb
and
in
hlt
or
cld
push
pop
mov
orb
lock
inc
sbb
insb
movb
inc
out
call
pop
pop
sub
je
stos
bound
cli
call
xlat
or
aad
mov
dec
mov
push
xor
mov
jg
sti
dec
lods
dec
addr16
testb
popf
inc
mov
pusha
jl
sarl
xchg
jns
stos
leave
mov
or
sbb
mov
scas
sahf
enter
pop
repnz
and
pusha
mov
repz
ficoml
sub
add
dec
dec
xchg
ljmp
dec
xchg
adc
lods
or
cmpsb
dec
xor
dec
push
out
aad
mov
call
sub
mov
xlat
add
adc
add
jle
jnp
xor
cltd
scas
pop
cmp
mov
and
mov
sbb
mov
cmc
incl
pusha
cmpsl
or
and
jbe
xor
rol
cmp
jg
push
jg
dec
icebp
inc
pop
mov
scas
sbbb
arpl
jmp
sbb
lcall
jno
sub
and
roll
into
push
enter
das
decl
dec
xchg
cmp
leave
iret
adc
inc
pop
mov
insl
fcom
lcall
sub
arpl
shrl
cmp
push
xchg
test
inc
movsl
adc
enter
or
std
dec
in
repz
shrl
pop
dec
or
push
adc
imul
sub
mov
jmp
imul
outsl
jne
mov
cmp
pop
call
pusha
jae
dec
jbe
lcall
xor
sti
lock
out
push
mov
leave
pusha
test
stc
mov
xor
lahf
adc
daa
and
cmp
pushl
cld
jmp
stc
pushf
push
mov
idivl
jbe
dec
scas
mov
inc
idiv
ljmp
lret
push
test
imul
mov
xchg
enter
xor
cld
ljmp
int
ds
add
icebp
mov
movsb
xor
sbb
add
and
mov
dec
int3
aam
ljmp
test
bound
mull
addb
incl
lods
and
mov
ds
lock
fwait
mov
mov
fisttpll
jmp
xor
stos
push
aad
faddp
sbb
xchg
adc
cmp
add
ljmp
xor
dec
ret
push
mov
xor
icebp
sub
xorb
dec
les
hlt
dec
aam
inc
xchg
rcrl
in
idiv
iret
imul
sbb
popf
addl
mov
stos
fcoml
jne
add
cltd
mov
mov
jne
fisubrs
inc
add
ljmp
insb
mov
inc
push
push
fs
idivl
fwait
ds
adc
inc
test
sub
xor
call
push
call
std
scas
loopne
mov
insl
and
pushf
jnp
cmp
cmp
push
mov
xor
cmp
jns
and
adc
xor
push
popa
addr16
ljmp
pushf
xchg
das
xor
mov
xchg
and
or
or
aad
dec
jmp
pop
gs
into
clc
lods
nop
push
int
decl
push
mov
or
pop
bound
fstl
push
mov
out
jno
je
jmp
and
pop
fbld
das
dec
dec
mov
xor
addr16
adcl
xchg
inc
xchg
insb
movsl
push
insl
mov
mov
ljmp
test
push
ljmp
mov
cmp
ja
mov
mov
daa
xor
call
inc
push
aas
push
test
cltd
daa
adc
mov
cwtl
aam
mov
cmp
sbb
mov
test
pushf
mov
popa
dec
loopne
fbstp
inc
inc
adc
cmp
and
test
fstps
rcl
ret
pushf
sti
xchg
leave
mov
adc
pop
add
test
xor
iret
fnstsw
aaa
decb
call
xor
into
jmp
mov
stc
ljmp
test
loop
outsb
fs
jbe
insb
lcall
or
xchg
rcrb
mov
and
shll
jmp
jg
lret
in
scas
mov
mov
pushl
aad
dec
scas
lcall
push
inc
jo
cmp
arpl
mov
sbb
ljmp
mov
mov
cltd
xor
leave
inc
and
adc
or
mov
add
mov
pushl
cld
or
bound
mov
jl
test
test
imul
out
and
out
mov
mov
jmp
ret
sbb
pop
sub
cmpsl
sub
xor
inc
out
and
out
clc
call
dec
sbb
out
push
fwait
lret
xchg
lcall
xor
test
decl
lock
sub
loopne
leave
repnz
dec
push
popa
mov
dec
jge
mov
mov
inc
fdivrs
add
jns
cs
mov
xchg
fcompl
xor
sar
call
pop
lea
scas
jb
shl
clc
dec
jge
and
pushf
in
jns
mov
ds
pusha
inc
lods
call
std
push
pop
iret
add
pop
in
mov
sub
mov
out
cmp
sbb
subl
pop
decb
mov
inc
daa
leave
in
decl
lea
fmuls
stos
mov
pop
pop
cmp
lahf
push
loopne
mov
push
dec
jecxz
inc
mov
inc
sbb
lcall
cbtw
mov
je
lods
add
jmp
dec
movsb
in
jo
insb
add
lods
inc
flds
sbb
mov
push
xchg
leave
in
in
jne
out
xor
decl
dec
jle
inc
xor
sub
stos
std
and
out
and
jno
idiv
pushf
pushl
xchg
popf
fadd
rcll
sahf
fcomip
adc
adc
or
ja
mov
sbb
incl
push
insb
into
pushf
adc
out
into
xchg
cmpsl
sahf
jp
shrl
inc
push
cmp
out
and
call
ljmp
sub
fs
fwait
shrl
jg
out
xchg
xchg
push
xchg
cmp
in
jns
sbb
sbb
sub
test
mov
cld
sbb
sarb
dec
jg
cmp
pop
bound
cmp
gs
call
sti
scas
loopne
lret
mov
or
ljmp
das
or
sub
adc
dec
mov
jbe
pop
mov
adc
jno
daa
repnz
cmp
ds
push
sub
pusha
lcall
das
insl
cmp
mov
flds
lret
mov
ret
adc
jle
mov
dec
imul
push
fisttpl
xor
inc
out
loope
ljmp
negb
mov
int
cmp
rclb
aam
jge
popa
int3
ret
int
mov
incl
pop
push
fs
aad
enter
push
insb
idivb
push
push
xchg
mov
cmp
std
mov
xlat
xor
adc
aaa
das
cmp
jbe
sbb
or
lds
jmp
cmp
mov
inc
out
mov
xchg
lret
pop
or
mov
add
into
dec
cmp
cmp
test
xor
push
lds
jno
cmp
xchg
in
xchg
add
call
push
popl
and
lret
push
mov
hlt
add
push
sub
mov
es
popa
in
inc
dec
lret
xlat
mov
jle
insl
dec
mov
addr16
stc
in
cld
popa
int
mov
incl
pop
xor
mov
dec
cld
rorb
ja
insb
in
ret
sarl
imulb
hlt
arpl
push
dec
cwtl
mov
and
mov
daa
popa
jo
push
xchg
shll
xchg
in
push
jae
cmp
in
call
mov
lret
out
mov
pop
dec
rcrb
adc
incl
repnz
or
or
mov
lds
sbb
in
xlat
iret
inc
sub
push
mov
inc
in
add
aam
sbb
cmp
andl
cmp
add
xorl
xchg
or
fucom
jbe
push
cmp
fstl
sbb
shl
jmp
idiv
add
push
mov
lcall
lds
cmp
jmp
std
arpl
ret
lret
les
int3
call
out
scas
jno
shll
jno
dec
imulb
repnz
rcll
sbb
pushl
clc
push
and
and
xchg
adc
push
shrl
out
mov
sahf
dec
movsl
out
jge
pop
mov
pop
into
scas
add
mov
adc
in
popa
mov
repz
or
fistpll
cmp
test
add
lcall
aam
pop
mov
ds
mov
clc
sub
jp
mov
or
mov
mov
pop
es
cmp
sarb
jmp
aam
jmp
addl
pop
das
cld
and
xchg
cmp
push
add
ljmp
inc
enter
cli
jg
pop
sbb
test
and
cmp
xor
jns
cmp
jl
add
int3
xor
jb
aam
mov
mov
adc
xchg
push
sub
insl
xor
cmpsl
data16
pop
or
cli
jge
fwait
icebp
pushl
xchg
mov
jne
sbb
jg
inc
mov
stc
bound
jge
idivb
cmp
pop
xor
ljmp
pop
mov
jae
jle
lock
cld
sub
jnp
mov
cli
and
lcall
xor
xbegin
and
fiadds
mov
sbb
mov
cmpsb
xchg
les
repz
lcall
mov
insl
gs
adcl
insl
sub
test
das
inc
test
cmpl
dec
lcall
cmc
cmp
pop
inc
add
call
sti
mull
push
dec
shrl
loop
ljmp
dec
popf
into
jge
les
repz
mov
cmp
mov
call
leave
imul
call
bound
mov
int3
jo
int3
outsl
push
out
test
jmp
incl
in
aad
xlat
ret
test
leave
mov
sub
into
mov
addr16
dec
and
xlat
mov
out
lret
xor
fbld
vmwrite
add
test
movsb
iret
in
push
ret
call
adc
mov
lea
add
jno
jnp
cmp
incl
movsb
pop
mov
and
incl
jb
inc
jno
std
mov
lock
fcomip
inc
fwait
push
sub
sbb
fcoms
vpminub
mov
jns
ds
dec
sbb
incl
addr16
cmp
aaa
mov
adc
nop
adc
mov
test
out
add
fwait
mov
pop
mov
scas
sbb
mov
xchg
jbe
fdivrl
or
cmc
jae
push
mov
clc
loope
sub
test
inc
mov
decl
cmp
ds
add
aam
lods
shrl
rcr
push
mov
cmp
addb
mov
fcompl
pop
ljmp
push
mov
pop
mov
clc
int3
addr16
enter
movsb
lret
cmpsl
jae
fdivs
cmp
inc
inc
jmp
je
mov
stos
xchg
jnp
loope
js
pushf
inc
xlat
icebp
pop
lcall
popa
add
mov
aaa
mov
out
push
mov
mov
pushl
inc
ljmp
inc
or
push
jno
push
lea
xchg
mov
out
shrb
call
or
scas
int
sub
clc
pop
push
aaa
jecxz
xor
test
aas
fwait
outsb
mov
lods
loop
filds
adc
lods
mov
xor
aad
adc
push
xchg
adc
lock
flds
cs
clc
lret
pop
leave
or
cs
pop
inc
jbe
fcoml
or
lcall
movsl
mov
cli
popf
push
ljmp
sarb
movb
test
test
testb
mov
mov
pop
mov
lcall
popa
cmp
int
std
pop
popa
xchg
test
jl
and
xor
hlt
ret
call
cltd
loopne
pop
insb
sub
leave
adc
push
inc
test
or
mov
incl
or
push
psllw
dec
gs
jae
iret
sub
cmp
and
mov
ss
jnp
insl
aam
in
sub
lock
mov
jb
push
inc
loopne
icebp
ss
call
dec
cmp
xchg
jmp
xor
pop
cwtl
jne
stc
xchg
cmp
xor
push
or
pushl
mov
mov
pop
or
xor
pop
and
cmp
mov
rclb
mov
push
xchg
jnp
pop
inc
pop
cmpsl
pop
out
xchg
dec
inc
in
ljmp
clc
fsubrs
adc
xchg
mov
push
mov
out
mov
jg
push
lahf
insl
enter
lock
mov
idiv
jnp
or
es
mov
lcall
pop
jecxz
fisubs
push
jne
xchg
pushl
mov
pop
sbb
popl
or
jae
es
mov
push
pop
je
jg
add
mov
jmp
cmp
flds
std
jmp
mov
mov
or
mov
add
jmp
xor
sub
aaa
test
fadds
lahf
in
pusha
push
mov
call
mov
outsb
xor
xor
sbb
pop
dec
and
pop
aaa
mov
push
ret
loope
scas
xor
push
cmp
sub
repnz
mov
push
pushf
call
mov
test
and
fcomip
or
in
insb
add
xorb
fwait
jno
lods
adc
ljmp
movsb
outsb
jl
popf
out
cmp
int3
cs
dec
mov
fsubrs
js
push
sarb
jle
shlb
popf
pop
nop
mov
add
hlt
out
into
dec
in
sbb
mov
xchg
xor
loopne
stos
sti
pusha
dec
fcomps
in
loope
call
pop
xchg
lahf
mov
xchg
repnz
add
loope
stos
mov
push
adc
jne
je
incl
repnz
push
stos
gs
add
jecxz
movsl
dec
jg
sub
push
testl
mov
nop
add
adc
das
or
push
int3
pushl
pop
xchg
add
ja
jmp
or
sbb
jbe
bound
mov
addr16
gs
shrb
decl
xchg
popf
arpl
jno
insl
test
and
pop
xchg
lcall
pop
lods
jl
insb
scas
cli
add
xchg
das
les
clc
jecxz
sbb
mov
sbb
cmp
dec
addb
lea
ror
repz
cltd
and
mov
pop
sbb
or
lret
sub
pop
adc
pop
jg
push
fmuls
xchg
test
ljmp
lock
call
add
shlb
adc
xchg
jno
sbb
adc
sbb
je
pop
push
in
adc
cmp
pop
idivl
mov
jae
mov
xchg
cmp
into
jo
lds
lcall
pop
movsb
test
pop
mov
es
jge
cmp
dec
xchg
and
call
xor
dec
xchg
pop
inc
nop
adc
out
or
mov
xor
das
pop
decl
mov
notb
popa
rorb
mov
xor
mov
call
jno
xor
xlat
cmp
and
sbb
lcall
lock
inc
subb
jecxz
push
xor
adc
dec
cmp
adc
cmp
jecxz
in
js
pop
testl
mov
and
lret
mov
jmp
sbb
pop
es
pop
mov
icebp
aam
outsb
sub
ret
jne
jns
lock
ljmp
jg
std
adc
hlt
xor
int3
cmp
cs
adc
pop
pop
mov
lahf
mov
cmpl
cmp
in
dec
mov
bound
std
fwait
mov
dec
jns
pusha
ret
push
stc
scas
push
jg
mov
cld
xchg
gs
fstpl
inc
jle
out
and
mov
jno
sub
pop
mov
call
lcall
incb
push
outsb
push
mov
lods
fildll
aad
mov
jmp
fnstcw
cli
in
int
sar
add
xchg
into
mov
ljmp
pop
fcompl
mov
xchg
mov
aaa
cmc
mov
mov
jecxz
int3
mov
out
xor
cwtl
inc
xchg
push
inc
nop
out
jl
fwait
push
dec
mov
fistpll
pushl
mov
mov
sbb
stos
rorb
clc
call
push
in
jno
mov
or
loop
shlb
fdivl
jle
pop
loopne
sbb
xchg
jge
scas
or
fidivrs
xchg
lcall
rcl
pop
fucomp
cmc
adc
jp
xchg
vmovd
call
daa
or
pop
mov
mov
jecxz
rclb
std
pop
push
loope
mov
xchg
lahf
jge
out
clc
pushl
fwait
testl
loope
or
in
pop
outsl
imul
decl
xchg
lods
xor
test
imul
jb
addr16
imul
push
jns
stos
mov
mov
jnp
inc
pushf
push
sbb
xchg
mov
sti
bound
mov
lods
mov
clc
jl
mov
mov
jg
pop
insb
jp
ds
mulb
dec
and
dec
push
in
or
decl
jo
sub
fstl
testl
lret
jmp
mov
mov
pop
mov
xor
lcall
insl
cmp
addl
inc
cltd
sbb
pop
xchg
hlt
rcll
lods
sub
out
add
jge
sti
mov
mov
mov
mov
shlb
addl
es
jmp
and
lock
xchg
incl
bound
xchg
pop
fistps
and
pop
ret
addr16
xchg
out
pop
jbe
sbb
in
lret
cs
ret
and
ljmp
pop
add
fisttps
or
imul
ret
call
jle
add
pcmpeqb
inc
dec
insb
push
test
push
das
pop
or
nop
jg
inc
cmpsl
mov
dec
or
inc
push
pop
mov
mov
cmp
sbb
adc
inc
mov
xor
push
cli
pop
lds
fwait
jns
lret
rolb
jle
mov
jnp
fwait
das
mov
incl
pop
rol
stc
dec
push
andl
stos
cmp
stc
je
lea
daa
movsb
lret
cmp
sbb
mov
mov
lret
or
sub
inc
enter
inc
ret
add
data16
adc
jle
dec
nop
mov
enter
incl
ret
cmp
outsl
and
jecxz
dec
ret
push
jp
test
hlt
and
cmp
add
mov
daa
fisttpl
jl
jo
add
push
fdivrs
js
popf
or
roll
pop
call
jl
test
mov
pushf
push
enter
dec
dec
lahf
and
inc
popa
adc
sub
shrl
jg
cs
mov
data16
mov
shl
js
enter
dec
rcr
xchg
lcall
flds
pop
jmp
cli
dec
inc
ret
mov
mov
cs
mov
hlt
outsl
mov
mov
into
xchg
subb
loop
inc
xorl
pushl
sbb
xchg
and
jp
decl
outsl
ss
dec
xchg
test
rcrl
cli
inc
ds
iret
je
dec
cmp
das
jns
cmp
cmpsl
sti
insl
call
sub
inc
sar
stc
xor
cmp
sbb
jg
sub
mov
jb
adc
test
int3
push
fisttpl
nop
lcall
lcall
dec
lea
test
bound
repnz
dec
add
iret
mov
iret
push
mov
enter
pop
mov
mov
enter
test
dec
cmp
cwtl
push
aaa
push
xor
xchg
sub
push
push
jbe
ljmp
push
sub
pushl
sub
sub
adc
sub
jmp
jmp
aaa
inc
sub
pop
test
xor
loopne
adcl
adc
sbb
test
in
pop
scas
sbb
and
movsl
cld
mov
incl
movsl
cmp
repz
push
ss
mov
loope
xor
sub
lret
pushl
aad
lahf
adc
jle
lds
cmp
mov
or
ds
jmp
movsl
adc
dec
je
into
mov
cmp
or
add
in
pushl
mov
push
mov
aad
dec
xor
lods
push
outsl
es
inc
mov
ljmp
mov
pop
adc
in
je
outsl
fistl
not
in
jbe
mov
mov
xor
pushf
fnsave
xchg
mov
je
ficoms
jmp
ljmp
push
cmc
std
xchg
cmp
into
xchg
mov
test
loope
ret
push
addr16
push
inc
pop
push
dec
push
ret
adc
out
in
mov
repz
xchg
add
incl
mov
xorl
or
xchg
popl
lret
gs
pop
roll
ljmp
sub
movsl
daa
xchg
out
inc
jnp
mov
mov
xor
mov
popa
ljmp
mov
shll
loope
xchg
sahf
mov
xchg
ja
roll
and
call
je
adc
xor
xor
shll
pushf
jg
lods
add
push
and
stos
stos
xlat
xchg
sbb
lcall
fldenv
fs
hlt
push
add
push
dec
cmp
push
jmp
pop
fdivrp
loope
call
rorl
mov
pop
and
testb
aad
mov
pop
daa
pop
jae
stos
pop
out
mov
test
sub
mov
fisubs
std
insl
int
jmp
cmp
popa
out
std
mov
xor
stc
push
or
lcall
xchg
mov
or
pop
stos
mov
sub
pop
fadd
mov
dec
add
mov
inc
je
jmp
add
int
push
pusha
data16
sbb
incl
xor
sub
pop
out
jae
aam
push
and
and
stos
jle
push
jecxz
out
decl
out
jae
dec
out
fistps
imulb
ja
cmp
stos
or
cmp
jp
jl
cmp
pop
pop
hlt
fstpl
popa
jno
gs
pusha
push
sub
inc
imul
mov
add
sbb
ljmp
or
fiadds
and
test
jne
or
inc
out
call
in
xchg
add
lcall
mov
cmp
stos
icebp
dec
gs
pop
cld
fistps
int
stos
ss
aaa
ret
lods
xchg
es
or
cmp
dec
dec
fsubrs
dec
mov
lret
mov
mov
jmp
sbb
nop
pop
loopne
dec
sub
imul
mov
cmp
call
adc
mov
mov
mov
lret
mov
and
jl
bound
adc
lret
icebp
call
addb
mov
pop
in
stos
icebp
dec
aaa
cmc
or
aam
je
ret
incl
popf
dec
into
xor
push
lahf
mov
and
jmp
in
mov
incl
sbb
xor
pop
jno
cmp
lds
in
data16
rolb
call
inc
test
int
mov
loopne
cmp
inc
cwtl
mov
pop
imul
xchg
jmp
pusha
mov
imulb
testl
in
and
lret
inc
sub
adc
push
jmp
jnp
sti
sahf
jmp
or
fidivs
add
jns
scas
out
adc
imul
mov
push
sub
inc
out
or
dec
dec
into
insl
ret
in
ljmp
repnz
inc
dec
jnp
mov
test
pop
hlt
jmp
mov
jns
xchg
lods
stos
fisttps
inc
sub
sub
popf
mov
or
sub
adc
push
insb
std
push
xlat
lea
jo
popf
or
mov
test
cmp
dec
movsb
sbb
pushl
add
enter
push
pop
movsb
xchg
mov
aam
popf
stc
data16
out
inc
rcll
enterw
push
enter
sti
fstpt
fwait
inc
jnp
mov
shlb
call
cmc
push
mov
std
and
bound
aaa
cli
push
rolb
or
sbb
and
mov
jmp
add
dec
aas
movsb
sahf
and
sarb
rorl
cmp
ss
ljmp
add
movsl
sti
scas
call
push
push
out
push
push
push
cli
mov
int3
inc
adc
mov
xchg
testb
or
test
adc
out
cmp
mov
jge
cltd
popf
out
pop
dec
movl
lcall
into
ret
mov
xor
lock
int3
fwait
lods
stos
mov
fwait
dec
sbb
add
fists
jge
mov
sahf
loope
jns
mov
cmp
cmp
ret
das
stos
push
jns
lcall
addb
pop
shll
testl
and
out
pop
mov
dec
xor
sbb
add
add
mov
pop
sbb
inc
dec
push
aad
pop
lods
pop
lahf
push
mov
mov
mov
js
insl
cmp
cmp
sub
call
push
gs
push
push
test
pminub
cmpb
pop
imul
push
add
insl
stos
mov
xlat
sarb
push
fs
jmp
popa
cmp
lahf
mov
dec
mov
sub
ret
adc
cmc
mov
ljmp
pop
lock
push
rcl
xchg
sti
jnp
pop
cmpsl
rcll
add
les
decl
and
insl
arpl
cmp
js
sbb
cmp
dec
xor
pop
in
popf
fidivl
test
call
add
daa
jmp
sub
adcl
pop
mov
out
mov
sub
mov
mov
es
call
cld
incl
stc
cmpsb
mov
push
add
hlt
leave
mov
mov
call
pushf
fnstenv
mov
call
xchg
sbb
sub
bound
mov
push
decl
push
sbb
jp
mov
mov
mov
jmp
cmp
mov
fcomi
rcr
jge
jae
lcall
std
jae
mov
mov
ljmp
hlt
inc
andl
xchg
push
jg
sbb
lret
pop
repnz
or
pop
dec
nop
mov
pushl
mov
arpl
rcll
mov
mov
fisubs
les
or
sbb
dec
imul
jmp
les
or
imul
mov
cmp
ljmp
cmp
jg
incl
lahf
lahf
pop
and
sub
gs
aad
ud0
loopne
push
pop
jno
leave
and
xor
adc
dec
or
loop
pop
les
call
xor
xchg
loope
out
mov
scas
sub
int3
mov
mov
mov
scas
ljmp
in
add
jnp
xor
inc
stos
jg
xor
xchg
out
mov
stos
fcoms
mov
out
xchg
in
cli
mov
jmp
inc
mov
enter
sahf
bound
pop
xor
out
clc
lods
icebp
add
sbb
push
lcall
call
fadd
jbe
push
clc
and
into
cmp
and
jae
xchg
rorl
fld
in
cmpb
aas
xor
jg
jbe
and
or
addr16
daa
xor
cmpsl
mov
jmp
xchg
jmp
ss
sarl
repz
xor
lods
repz
test
mov
xchg
xchg
movsb
decl
lds
pop
xor
jb
xchg
mov
jbe
out
cli
fucomp
mov
popa
mov
aaa
mov
sbb
ja
add
sar
inc
xor
pop
jecxz
fwait
jns
pop
cs
cmp
mov
jo
jp
cld
dec
cmp
sbb
jg
cmp
or
stos
lods
cmc
outsb
cltd
hlt
jecxz
dec
mov
test
bound
inc
repnz
popa
mov
sbb
push
dec
xchg
xchg
lret
jecxz
arpl
adc
aaa
incl
jns
mov
xchg
out
or
and
dec
dec
inc
mov
je
push
mov
imul
or
jae
cmpsl
mov
sbb
jge
les
sahf
lcall
call
loope
pop
lret
test
imul
xorl
enter
jmp
and
fldl
push
enter
inc
dec
pop
ja
pop
loopne
mov
fistpl
mov
lcall
loop
lahf
adc
xorl
lock
inc
ljmp
xor
adc
lock
sbb
cmp
mov
fcom
jmp
xchg
push
loop
out
adc
popf
fwait
cld
sub
es
add
xchg
or
sub
popa
mov
stos
jmp
mov
inc
mov
lret
pushl
std
fstpt
jne
fsubrs
fs
fimull
sbb
pop
stos
imul
jg
decl
in
jecxz
push
xor
push
mov
lea
and
test
ljmp
leave
inc
sahf
push
inc
in
pop
in
lock
or
xchg
pop
popa
stc
or
lahf
cld
mov
ljmp
cmp
mov
jecxz
push
pop
or
jo
roll
xlat
inc
imul
std
scas
jmp
sbb
loop
and
movsb
mov
in
inc
or
mov
adc
pop
insl
adc
shlb
std
lcall
push
sbb
xchg
fcmovbe
sbbb
sahf
aam
movsl
dec
ud0
call
mov
jg
jae
mov
pop
cmp
mov
mov
neg
cld
fcmovnu
hlt
push
cwtl
jmp
jns
inc
inc
ss
in
jg
fildl
outsl
pushf
mov
pop
fnstsw
lret
pushl
xchg
and
jge
rcr
add
sbb
inc
xlat
jp,pn
cli
cwtl
out
dec
inc
cld
sti
inc
out
lea
cmp
xlat
cmp
cmpsl
rol
andl
push
out
insl
clc
out
inc
jg
incl
cmp
repnz
std
and
xchg
mov
js
jns
arpl
xor
decl
pop
rol
mov
lods
mov
out
movsl
and
jns
push
pop
mov
xor
mov
lds
sub
in
or
loop
cltd
xchg
rcrb
inc
jge
pop
jmp
fsubl
xor
pushf
out
ret
stos
xchg
sub
dec
or
pop
ds
and
inc
and
std
pop
mov
inc
xchg
fwait
lods
jns
stos
imul
pop
add
call
movsb
xchg
ljmp
ja
dec
out
aaa
push
or
rorl
fsubrl
mov
jno
shll
inc
lea
jl
and
les
dec
std
icebp
mov
data16
pushf
xchg
xor
lret
addb
dec
in
dec
inc
jbe
js
mov
lcall
lods
call
fsubrp
int
int3
loope
add
or
xor
imul
push
incl
cmp
out
mov
loopne
xchg
call
xchg
push
pop
cmp
mov
popa
andl
inc
pop
jge
xor
mov
out
adc
push
ret
push
jb
test
jne
nop
cmp
push
js
pop
mov
lods
mov
icebp
call
push
ljmp
sub
push
stc
xor
icebp
icebp
jle
and
decl
int3
ja
xor
arpl
std
xor
xchg
mov
ds
xchg
mov
pushl
mov
lods
dec
and
rorb
and
imul
stc
lcall
cmp
incl
lret
add
dec
jl
xchg
pushf
pusha
adc
in
inc
push
xchg
aaa
push
or
cmp
cld
mov
mov
dec
pop
daa
pop
jl
jbe
aam
cs
decl
jle
stos
pop
psraw
jp
mov
fnclex
cld
pusha
data16
movsb
xchg
cli
ljmp
mov
push
in
and
xorl
cmc
xchg
adc
jecxz
cwtl
sbb
push
in
push
rdpmc
cli
scas
inc
notl
dec
inc
out
in
cmp
out
and
pop
clc
jne
inc
jge
push
mov
es
inc
mov
or
call
ret
dec
adc
xorb
rorl
jae
lret
cld
shrb
dec
push
inc
mov
jl
out
fdivs
enter
cmc
push
cmpb
icebp
lret
add
inc
fnstenv
add
mov
fbld
cli
pop
movnti
sbb
xchg
clc
cli
dec
jbe
and
fcomip
loop
mov
ja,pt
testb
and
or
lods
cwtl
xor
mov
les
sub
pop
xchg
fucomp
mov
pop
nop
lock
pop
lods
cmpl
mov
decl
pusha
fmuls
scas
mov
adc
insb
mov
inc
out
or
ret
adc
cmc
call
call
push
add
push
pop
pop
fldcw
aas
cmp
popf
push
sbb
call
xchg
dec
ss
in
shll
mov
push
and
mov
mov
jmp
push
push
push
xchg
jnp
lret
lcall
xchg
push
mov
xchg
insl
shl
in
jle
mov
mov
rorb
sbb
dec
mov
ret
mov
out
inc
xchg
jnp
xchg
xchg
adcl
scas
pop
dec
pop
test
and
push
cwtl
sub
mov
sub
pop
mov
inc
xor
adc
lock
xor
push
xor
adc
cld
out
scas
std
mov
int3
enter
mov
stos
mov
idiv
mov
adc
adcl
xchg
mov
cmp
pop
push
ljmp
pop
cld
sbb
and
daa
jbe
int
mov
or
jp
mov
loopne
leavew
xor
push
dec
mov
cmpsb
mov
xlat
lcall
cli
cli
nop
movl
shr
adc
aad
xchg
sbb
mov
adc
out
je
fistl
dec
inc
stc
dec
bound
pop
pusha
xchg
mov
es
adc
out
cwtl
adc
pop
outsl
rcrl
aam
pop
and
cmpsb
sbb
jo
mov
sti
xor
stc
xchg
dec
mov
nop
jns
std
jb
adc
pop
je
std
out
cmp
sub
jo
outsl
jo
cmp
pushf
das
enter
lret
pop
stc
cmp
out
loope
out
jb
adc
jnp
mov
call
outsb
das
popa
nop
dec
pop
cmp
cwtl
call
push
jge
sub
dec
movsl
jnp
add
pop
pushl
mov
inc
cmpsb
and
je
push
push
movsb
pop
imul
std
inc
sbb
incl
mov
iret
mov
in
mov
xor
dec
mov
cmpsb
out
jg
mov
cli
sbb
rcrl
sub
pop
lcall
or
mov
add
imul
push
fs
mov
fwait
icebp
mov
insb
arpl
mov
dec
jo
sbb
or
dec
sbb
call
das
sbb
add
xor
mov
adc
pop
push
cwtl
popf
jp
push
ret
sti
lods
sbb
and
and
cli
ljmp
lahf
sub
pop
push
rolb
jne
inc
mov
rcr
lock
ljmp
or
loopne
cltd
dec
and
adc
xor
dec
adc
or
imul
in
xchg
in
jbe
ljmp
push
insl
addb
aad
push
sbb
mov
roll
lcall
adc
popa
dec
and
push
paddsw
in
sbb
pop
pusha
mov
xchg
insl
mov
decl
dec
mov
xor
ret
add
popf
and
mov
dec
jnp
push
mov
incl
out
data16
lahf
arpl
rolb
iret
lahf
int
adc
ret
ja
rclb
aam
mov
decl
fcomps
scas
and
push
jle
inc
cmp
enter
mov
aad
cld
lcall
sarl
loopne
ljmp
clc
mov
pop
lods
jg
bound
int3
test
push
xchg
movsl
pop
test
xchg
call
pusha
cmp
int3
jbe
je
pop
jp
add
int3
adc
cld
jno
bound
and
outsb
push
clc
ficomps
dec
cmp
cwtl
push
test
sbb
jmp
jmp
jmp
jg
gs
add
pushf
repnz
dec
fdivs
aad
call
add
js
inc
notb
ljmp
inc
or
sub
shlb
cwtl
and
shll
data16
lods
mov
mov
dec
pop
xchg
sub
mov
or
and
cmc
inc
outsb
pop
or
aad
mov
jno
addb
push
test
mov
ret
pushl
mov
xchg
mov
push
leave
cmc
ret
pop
lahf
add
cmp
jmp
inc
or
jo
mov
jg
jmp
in
movsl
and
adc
or
and
out
dec
repnz
inc
ret
cmp
outsl
cmpsb
jb
xchg
sub
push
daa
pop
xlat
mov
call
xchg
add
sub
xchg
sbb
xor
jnp
movsl
nop
js
sar
jmp
push
arpl
jns
jmp
dec
hlt
pusha
xor
mov
and
pop
fiadds
mov
das
cli
ljmp
mov
pop
mov
call
mov
xchg
addb
pushl
int
lods
imul
mov
sbb
fwait
push
sbb
xor
ljmp
ret
test
inc
sub
out
popa
mov
mov
jmp
cmp
mov
mov
push
daa
scas
ds
imul
incl
arpl
loop
and
jno
filds
cmp
jg
sti
addr16
cmpsb
roll
jmp
fadds
xchg
xchg
repz
or
pop
cltd
mov
push
pop
lds
dec
mov
mov
inc
lcall
mov
push
pop
sub
scas
push
filds
divb
out
loop
inc
push
dec
push
test
pop
dec
adc
lcall
rorb
inc
xchg
xchg
xchg
test
pushl
cmc
bound
call
cli
movl
mov
inc
jae
mov
sbb
mov
clc
lods
or
test
in
xor
pushl
xchg
aam
repnz
push
mov
es
js
test
fidivl
ds
ja
xchg
ljmp
fcmove
add
adc
push
cmp
pusha
test
in
sar
stos
jmp
mov
jle
mov
sbb
js
jnp
push
mov
int3
stos
mov
scas
cwtl
hlt
out
dec
fwait
dec
mov
int3
mov
push
in
lods
bound
std
sub
pop
dec
jmp
loop
ret
sub
cltd
iret
jb
insl
clc
pushl
lods
insl
dec
add
shll
les
pop
ficoms
imul
inc
shrb
sbb
add
and
cmc
jmp
xchg
xor
cld
push
ss
sub
in
andl
hlt
push
add
call
add
incl
mov
iret
cmc
inc
pop
jl
pop
mov
insb
xchg
aam
sarb
out
mov
icebp
incl
dec
in
dec
xchg
mov
in
mov
repz
repz
decl
add
loopne
fdivl
xor
imul
add
mov
pop
test
fs
lds
fisubs
insb
xchg
mov
cmp
sub
divl
mov
inc
adc
push
jmp
adc
movsb
jns
lret
call
lahf
xlat
xor
sbb
jg
testl
inc
jno
ljmp
mov
push
dec
aad
jge
inc
xchg
push
popa
xchg
or
test
mov
in
stos
adc
cmpsl
mov
adc
mov
jno
push
decl
loopne
adc
push
jb
pop
adc
cld
lret
sti
scas
repnz
stos
lcall
imul
test
and
leave
imul
inc
mov
decl
test
hlt
lcall
jg
mov
jmp
xor
jnp
push
lahf
sti
jg
pop
mov
insb
cmpsl
sub
int3
sbb
pop
cltd
mull
lret
add
mov
arpl
icebp
sbb
icebp
cld
xor
xchg
and
jnp
mov
clc
jle
mov
sbb
jg
outsl
adc
enter
cmp
mov
lea
call
out
insb
sbb
jmp
cmp
jmp
leave
rol
push
es
jno
test
js
addr16
cmp
dec
push
popa
push
inc
ljmp
rclb
jnp
sbb
or
fwait
pop
scas
je
fsubp
adc
sbbb
jno
push
rol
shlb
frstor
adc
push
push
bound
fxch
ss
cltd
stc
sbb
cld
jmp
test
mov
xchg
xchg
std
jmp
push
mov
mov
mov
or
cwtl
jo
ljmp
sbb
adc
inc
rorl
loope
adc
in
dec
mov
sbbb
mov
lock
daa
inc
push
shl
sahf
out
lcall
sbb
or
pop
inc
or
lcall
or
subl
in
in
jl
fimuls
sbb
lret
xor
out
dec
test
std
pushl
mov
push
in
lods
aad
mov
xchg
rorb
stos
sbbl
pop
call
ret
mov
inc
pop
int3
mov
ds
adc
aas
sbb
push
pop
mov
or
cmpsl
cltd
ds
lcall
fnstenv
fs
movsb
iret
dec
push
xchg
jno
cmp
adc
fisttpll
xor
jmp
mov
std
pop
pop
inc
std
scas
loope
sbb
fstl
ret
addr16
popf
jg
incl
arpl
out
sub
test
push
fdiv
jp
iret
popf
popf
aam
incl
and
cmc
xchg
xchg
jne
adc
adc
cmp
mov
pop
aad
add
clc
jae
sub
test
lahf
mov
stos
aam
aam
inc
fcom
sub
push
cmpl
xchg
jg
insl
sbb
jecxz
mov
sti
pop
lods
mov
mov
popw
imul
push
pop
mov
lods
and
add
mov
jecxz
fs
sub
ds
pop
inc
adc
mov
fcomps
inc
lock
pop
push
ret
and
mov
mov
mov
mov
jo
mov
lock
sub
pushl
adc
add
out
sub
pop
mov
jnp
jo
loope
lret
aaa
jecxz
incl
jmp
adc
jo
dec
lret
add
aas
pusha
outsl
adc
jle
xlat
mov
inc
pop
leave
jl
mov
data16
fidivs
outsb
test
test
mov
insb
faddl
ljmp
mov
rcrb
lock
ljmp
sbb
dec
sub
xchg
and
lret
clc
clc
or
into
dec
inc
pop
and
fistps
lcall
inc
cmp
cmp
push
push
mov
dec
fiadds
cmp
sbb
arpl
decl
cmp
pop
sahf
loop
mov
jmp
insl
push
mov
cmpsl
and
decl
sbb
push
fisubs
sar
aaa
cld
filds
insb
mov
popf
scas
pusha
mov
mov
push
xor
jmp
test
mov
negb
test
ficoml
push
fildl
ret
fistpl
dec
stc
add
xchg
lcall
std
jg
movsl
sub
dec
daa
and
jae
jecxz
not
in
sti
xchg
cli
incl
sbb
mov
cmp
mov
dec
mov
pop
std
push
ss
jo
jp
ljmp
bound
nop
jge
inc
cmp
mov
fwait
jns
jbe
xchg
test
add
mov
or
test
leave
pusha
xor
call
repz
pop
imul
inc
mov
icebp
xlat
cmp
jmp
out
scas
push
repz
stc
stos
es
or
mov
mov
xorl
cmp
les
rep
cltd
out
shlb
pusha
jle
call
rorb
repz
pushl
js
mov
filds
rorb
int3
sarl
inc
rorl
lahf
pop
fcomip
inc
push
je
cld
mov
aas
sbbb
and
lock
decl
hlt
je
xchg
xchg
adc
push
adc
pop
jl
call
les
inc
push
inc
cmc
mov
fcomip
fsubs
mov
mov
ljmp
nop
push
jp
cltd
mov
ds
ret
xchg
sub
jp
cmpsl
es
and
aaa
std
mov
fadds
fwait
cli
cli
insl
add
pop
cmp
test
std
repz
call
outsl
stos
pop
popa
insl
jb
and
jmp
push
push
stos
sub
cmc
dec
xor
and
arpl
sub
mov
adc
adc
std
sarb
mov
mov
rcrb
dec
pop
arpl
and
jnp
add
xor
adc
out
and
call
and
jne
lock
jo
pop
ljmp
rclb
mov
std
mov
decl
adc
xchg
out
adc
pop
push
in
and
mov
xchg
insb
pop
repnz
cmp
mov
lcall
push
int3
add
pop
lods
daa
push
in
popa
jge
adc
fbstp
push
cwtl
out
cmp
mov
dec
call
and
xor
adcl
inc
pop
mov
mov
jns
and
cmpsl
xor
sbb
mov
sub
hlt
mulb
lahf
lock
shll
call
popf
push
mov
jbe
movsb
lret
push
pop
lcall
pop
cmp
jge
adc
mov
aas
jmp
xlat
ss
mov
shr
shll
iret
mov
jmp
add
push
in
dec
adc
rcll
pop
jp
mov
dec
xchg
int
call
leave
cmpsl
or
out
imul
lahf
fistl
cld
sti
stos
pop
mov
sub
and
call
in
xor
mov
aad
fisubl
stc
test
movsl
push
mov
lds
push
jmp
mov
popf
mov
je
daa
sbb
push
push
rorb
pop
cli
decl
leave
sti
dec
jecxz
push
inc
hlt
lods
pop
dec
pop
dec
js
xchg
pop
add
or
mov
aaa
push
sub
pop
mov
lds
mov
or
faddl
cwtl
and
scas
test
jmp
dec
adc
pushf
ss
push
test
sbb
push
andb
jno
rorb
test
inc
or
sub
xorl
xchg
push
sub
fwait
stos
test
xor
sbb
mov
stos
jmp
sub
je
and
movsl
push
test
das
sar
inc
push
adc
adc
mov
aas
add
mov
jne
pop
cmp
push
jo
adc
dec
push
enter
or
adc
pop
mov
clc
dec
ljmp
call
mov
mov
scas
cmpsl
sub
inc
es
cmc
pushl
xor
in
pushf
or
pop
dec
ja
adc
mov
sbb
js
fnstsw
xchg
mov
mov
mov
cmp
rcrl
push
pop
daa
jbe
or
jmp
fildll
push
sbbl
cwtl
mov
lcall
sti
es
sub
xor
out
aas
rcrb
div
sbb
es
loope
cld
movq
jge
inc
aam
aaa
imul
bound
xorb
cmp
jp
or
sub
mov
mov
cli
dec
sub
sub
repz
fcomip
lcall
adc
sbbb
ficoml
push
enter
aam
pop
dec
dec
mov
sbbl
in
data16
lret
in
push
in
cwtl
sub
aam
add
jg
fsubs
lret
mov
mov
enter
es
or
jp
push
fsts
push
cmp
inc
sahf
pop
sbb
cmp
and
daa
dec
or
shl
mov
pushl
sub
xlat
or
int3
dec
add
daa
outsl
aam
sub
and
xor
jno
mov
decl
add
pop
jb
mov
fs
sbb
adc
sbb
jg
clc
loopne
in
out
add
xchg
mov
sbb
mov
pop
push
jle
mov
dec
ljmp
mov
movsb
push
cld
incl
pop
loopne
xchg
jl
punpckldq
mov
hlt
dec
mov
pop
adc
das
in
jmp
jnp
jnp
sub
shrb
or
lcall
int3
jle
jne
lret
xor
addr16
cwtd
fwait
popa
cld
mov
lcall
sbb
mov
shll
and
mov
pop
sbb
out
movsb
xchg
lea
incl
je
or
sahf
out
and
ljmp
lods
test
imul
mov
inc
das
dec
fs
ss
test
mov
call
push
adc
out
cmp
cmp
nop
xchg
in
sub
jno
scas
lcall
ljmp
sub
out
fdivr
sbb
jns
mov
in
loop
std
sub
data16
jno
ficoml
xor
enter
dec
mov
outsl
push
mov
xor
or
mov
cbtw
in
cmp
div
in
xchg
jo
sbb
or
mov
dec
cwtl
mov
sub
pop
dec
jno
shlb
dec
test
push
arpl
inc
test
adc
pushl
add
fwait
pop
shll
xor
ds
scas
cmp
add
das
cmp
mov
xchg
xchg
jo
mov
inc
xchg
stc
sbb
andl
mov
incl
rorb
or
adc
stc
dec
sub
xchg
mull
aad
insb
popf
xor
mov
cwtl
ljmp
mov
cmpsl
adcl
outsl
cmp
enter
sti
subl
bound
fmuls
test
sbb
test
cmp
call
cltd
pop
mov
mov
sti
sub
pop
and
mov
mov
dec
mov
pop
rorl
cmp
push
in
shll
pushl
mov
mov
scas
icebp
rcll
xchg
or
testb
leave
ds
cmpsl
push
das
push
cli
inc
in
jb
ljmp
and
sbb
mov
sub
lock
jnp
jl
push
nop
test
icebp
xchg
gs
and
push
call
sbb
aaa
pusha
aam
jb
or
pop
fisubrl
test
xchg
xor
ljmp
fsub
cli
push
outsb
xlat
mov
popa
inc
push
cmpsl
xchg
mov
mov
or
pushl
dec
loope
mov
push
in
mov
xor
sarb
sub
xchg
gs
mov
dec
in
dec
add
cmp
inc
jno
lods
cmpsb
xor
xor
jns
jmp
punpckhdq
ljmp
jmp
fwait
mov
cli
rolb
and
push
pop
push
jge
fstps
inc
pop
addb
fnstsw
rclb
adc
xchg
loop
sub
lds
ljmp
pop
imul
call
and
fistpll
ja
dec
call
nop
popf
pop
push
imul
hlt
dec
dec
jmp
scas
cli
lcall
mov
xchg
aas
int
mov
jle
fmulp
das
in
mov
mov
cli
add
cmp
fistpll
pop
push
cmpsl
jno
jnp
arpl
out
testb
mov
pushf
jo
in
pop
call
mov
call
push
sbb
push
and
lret
clc
addr16
pop
repnz
mov
fwait
mov
int
bswap
loopne
push
out
dec
in
adc
cmp
push
xorb
jmp
cmp
mov
test
adc
insb
cmpsb
sub
and
add
ja
arpl
mov
call
outsl
inc
lret
out
or
sub
psadbw
sub
sub
mov
incl
fcmovu
push
jl
xchg
push
out
cmp
notl
jno
neg
pop
hlt
dec
std
inc
jle
mov
jno
fistps
je
mov
aaa
cld
jg
mov
cltd
lods
jno
mov
pop
dec
insb
mov
xchg
das
gs
push
mov
in
ret
fistpll
jmp
xlat
addl
enter
jnp
repz
mov
das
jcxz
lods
jo
jmp
cmp
dec
mov
push
sub
leave
inc
xor
aas
iret
iret
lds
dec
movsl
lret
aad
pop
ffreep
inc
std
movsl
outsb
int
pop
inc
cli
cli
adc
dec
cli
test
mov
cwtl
xchg
push
mov
das
cli
ret
jae
notl
pusha
xchg
imul
test
pushl
fistl
test
lret
lods
movsb
test
mov
xchg
cmp
ljmp
fidivrs
lea
sbb
push
rcll
sbb
pushl
loop
xor
push
js
popf
cmp
add
jno
outsb
in
push
cmpsb
incl
stc
lahf
fwait
decb
movsl
jp
out
cltd
out
adc
mov
xchg
jle
decl
hlt
jnp
xchg
jmp
or
and
lcall
jmp
push
cs
xor
mov
and
call
std
je
adc
ret
ficompl
addr16
lock
test
daa
add
mov
mov
pushf
cmpsl
xor
mov
pop
imul
cli
pushf
loope
jnp
ret
lock
adcl
push
pop
or
sub
pop
mov
lcall
loopne
stos
out
daa
cmp
jl
or
xor
pop
push
call
fwait
in
lea
repnz
cmpl
cmp
ljmp
outsb
movq
mov
cmpsb
xor
sbb
inc
jp
push
mov
jle
mov
ficoms
lods
push
sub
lret
decl
mov
cmp
pop
jo
xor
int
adc
sbb
jge
std
call
xor
dec
std
repnz
orl
fsubl
lock
mov
fwait
push
sbb
mov
and
int3
aaa
push
jle
lock
jge
or
push
fistpll
inc
cmp
call
pop
pusha
ljmp
mov
mov
sub
stos
push
mov
cmp
mov
sub
mov
mov
sti
push
cmp
icebp
ljmp
xchg
and
mov
xchg
sbb
pushl
jge
xchg
mov
sub
sarl
inc
cmp
ljmp
mov
push
fisubrs
adc
jno
ljmp
or
pop
jae
mov
sbbl
sbb
in
out
push
cltd
xchg
xchg
or
push
cmpsb
cmpsb
jmp
pop
mov
repz
jb
inc
rcrl
mov
sub
inc
notl
daa
cmp
mov
push
cmp
stc
roll
outsb
dec
fidivl
int
repz
aad
sub
fcomi
xor
xor
loope
orb
adc
stc
dec
ror
test
cs
adc
decl
outsb
xchg
ds
sub
cmp
hlt
xchg
shll
inc
jae
adc
fcmovnb
lods
ds
out
stos
daa
xchg
roll
sbb
das
scas
ss
xchg
test
lret
insl
incb
jmp
jp
sub
pop
loope
lret
pop
in
iret
adc
cmp
cmp
divb
std
repz
rolb
sahf
out
mov
mov
dec
pushl
mov
mov
sub
fidivs
jle
sarl
pop
test
xchg
incl
push
mov
adc
scas
negb
lods
mov
xor
fisttps
pop
push
jg
loope
xorb
pop
cwtl
and
lea
test
jecxz
pop
icebp
jge
cmpsl
xchg
rcr
ss
mov
xor
rolb
gs
ret
aaa
popf
cmp
jo
aas
jmp
mov
adc
mov
mov
push
aaa
xchg
and
push
loopne
cli
fsubrl
cmc
enter
mov
cmpb
stc
xchg
mov
add
fmul
mov
mov
bound
or
call
push
push
sub
and
ss
xor
push
scas
fs
cli
in
dec
pushf
sbb
xchg
xor
jnp
mov
sub
out
cmp
mov
decl
mov
jo
mov
icebp
sbb
add
sbb
push
fsub
ljmp
incl
int3
and
cmpsb
inc
je
fwait
test
ja
cmc
repz
jmp
and
dec
mov
ret
mov
scas
mov
and
pop
mov
in
jbe
imul
test
lahf
push
outsb
loope
rcrb
cltd
sub
mov
sahf
inc
mov
popf
sub
mov
mov
and
adc
pop
mov
incl
lret
stos
shll
adc
pop
sbb
inc
fisubrs
mov
call
mov
cmp
out
out
out
imul
cmp
pop
ss
and
shll
negb
dec
xchg
push
cwtl
mov
or
pop
mov
push
fs
inc
imul
xor
dec
dec
xchg
sub
cmp
push
jg
mov
dec
push
test
lret
ret
outsl
inc
decl
jae
sbb
jecxz
cld
mov
mov
out
ja
xchg
pushl
or
jle
in
je
push
nop
in
mov
movsl
adc
adc
push
clc
sahf
xchg
adcl
addl
std
fimuls
jae
or
mov
pop
rorl
dec
lds
push
push
push
add
ljmp
mov
out
xchg
adc
xchg
test
ljmp
inc
shlb
fisubs
call
insb
js
mov
fidivrl
xor
ret
mov
daa
leave
fwait
and
mov
fbld
cld
mov
fistl
lods
jmp
lcall
incl
insb
arpl
fsubl
mov
mov
jae
insl
int
in
dec
cwtl
jg
int3
enter
push
insl
les
lahf
sub
cwtl
and
jmp
ljmp
test
xchg
and
mov
call
add
xlat
or
dec
sbb
stos
and
clc
adc
dec
pop
popa
push
inc
xor
iret
incl
js
cmp
imul
push
dec
mul
cli
arpl
ja
or
repz
cmpsb
jg
inc
adc
cli
fs
clc
decl
mov
enter
sahf
cmp
ljmp
push
or
fistl
movsb
lcall
loope
aad
rorb
fildll
sarb
cwtl
js
push
cld
int3
ds
lcall
cmp
mov
xorb
fldl
stc
outsl
aam
ljmp
lcall
push
rclb
pushf
ja
pop
lods
andb
mov
arpl
add
incl
pop
mov
enter
stc
push
lock
lock
xor
mov
mov
mov
popa
lock
inc
jl
sub
ljmp
push
cmp
lret
and
xchg
mov
cli
sbb
incl
arpl
mov
sbb
xchg
lods
pusha
xlat
and
xor
ret
pushl
jmp
cwtl
push
dec
clc
je
dec
fisttpll
sbb
loopne
jg
inc
popf
shlb
adc
lock
arpl
lods
loop
dec
scas
loopne
mov
incl
add
jo
jo
test
ret
dec
js
pop
mov
mov
mov
mov
inc
into
jge
scas
dec
ljmp
sub
test
incl
sub
push
xchg
xchg
mov
and
testb
inc
mov
pop
adc
add
jge
pop
shr
repnz
loope
push
mov
sub
or
jne
divl
jmp
inc
and
lcall
xchg
pop
mov
pop
push
xor
and
sti
cmc
cmpl
mov
cmp
das
shlb
shlb
push
fcomip
test
lcall
call
ret
das
and
test
pop
mov
sbb
mov
jmp
mull
and
dec
hlt
jl
ret
test
imul
push
loopne
out
fildll
and
mov
lret
sti
decl
aad
bound
aam
push
adc
imul
out
mov
cld
jne
ja
bound
loop
mov
popf
inc
ret
cmc
fcomip
jge
icebp
and
out
mov
scas
dec
mov
cli
fists
into
ja
scas
ds
inc
jge
adcb
jge
push
loope
jecxz
test
jp
enter
iret
jbe
out
and
lods
pop
roll
imul
push
testb
in
mov
xchg
fadds
push
outsb
push
aam
stc
mov
mov
push
loopne
jmp
fdivr
pushf
mov
stos
and
sub
jmp
mov
scas
fstpl
std
test
sbb
insl
xor
xor
loop
int
decl
test
fwait
xchg
inc
pop
or
in
lcall
es
jns
movsl
xchg
pop
ret
fs
mov
popa
jle
or
mov
shrl
xor
push
mov
incl
mov
cltd
shll
pop
adc
bound
outsl
js
ror
add
mulb
xor
ljmp
movsb
sub
test
lods
cs
add
sbb
pushl
and
popf
mov
cltd
cmc
pop
adc
jnp
js
mov
dec
push
lock
je
jle
in
lds
or
addr16
fsubrs
mov
decl
shll
mov
scas
xlat
jle
xor
xchg
insb
jne
icebp
shll
push
pushl
ret
jmp
pop
out
aaa
and
mov
pushf
in
mov
mov
or
lock
push
mov
in
pop
xchg
adc
jg
lods
pushf
add
xchg
out
lret
push
repz
outsl
xchg
mov
clc
xchg
int3
inc
inc
xchg
pop
incb
repnz
xor
aad
je
xchg
add
lock
loopne
push
adc
add
push
clc
je
push
push
test
jecxz
sbb
lods
pop
xchg
cmp
fcomps
jp
lds
hlt
cmpsb
xchg
pushf
fmull
sbb
stos
repnz
mov
clc
scas
int3
pop
int3
sub
jg
les
cmp
repnz
int3
fs
repnz
incb
and
dec
incl
push
mov
adc
rcrl
sub
mov
xchg
xor
sahf
jg
test
pop
inc
jg
mov
cltd
dec
imul
ljmp
mov
je
rcr
je
clc
das
ret
jle
rorl
mov
fs
jg
lcall
cwtl
popf
arpl
push
test
mov
rcl
pushf
mov
inc
xlat
in
and
and
cmp
cmp
push
inc
pop
lods
ud0
decl
sbb
ffree
dec
and
gs
xchg
inc
jnp
pop
sar
lcall
xchg
in
jns
stos
push
cwtl
pop
popf
cmp
gs
sub
dec
lea
dec
sub
jnp
stos
mov
cmp
lock
jg
das
neg
sbb
jnp
lcall
testl
out
mov
stos
sbb
ret
lods
xchg
adc
imul
fcmovnb
xchg
lahf
jp
mov
xor
repnz
xor
inc
shll
stc
mov
out
xor
fmuls
stos
sbb
ds
les
idivb
scas
add
cmp
in
mov
lcall
lcall
notb
es
vfrczps
aaa
push
outsl
pushf
xchg
cmpsb
sub
xchg
fistps
xchg
pop
lock
cli
mov
pop
mov
fs
addb
ret
push
scas
mov
jmp
dec
iret
std
and
adc
fcmovu
push
mov
jne
aad
mov
cld
outsl
nop
mov
and
jb
cmpb
pushl
mov
or
int3
insl
push
lods
fimull
jecxz
mov
jg
sub
dec
dec
xlat
mov
xor
shrl
sarb
pop
jb
nop
out
test
sub
sub
decl
insb
shrb
cmp
int3
jnp
jnp
and
enter
xchg
in
cld
sub
jno
jno
cld
cmp
push
test
mov
jge
mov
mov
xor
pop
popa
dec
jle
xlat
lcall
sub
sbb
pop
sub
xchg
xlat
mov
mov
sbb
pop
jmp
or
bound
lret
outsb
jo
out
xchg
push
ficoms
fldcw
lcall
dec
sahf
repz
or
mov
and
dec
pop
dec
mov
insb
push
imul
xchg
fwait
insl
push
sub
xchg
mov
jb
imul
dec
lret
pop
stc
inc
lds
jno
clc
jbe
mov
fcmovnu
sahf
gs
call
xchg
cltd
mov
and
cmp
dec
inc
sahf
insl
xor
cmpsl
mov
inc
cltd
xor
cs
xor
adc
inc
jle
push
mov
jo
shll
add
xor
sbb
addr16
lock
fistpll
icebp
mov
int3
xchg
xchg
rorb
nop
add
in
pop
adc
mov
movsl
sti
ljmp
or
sub
in
mov
repz
mov
rcrb
fs
stos
aas
dec
test
aaa
std
lcall
push
bound
mov
push
lcall
push
mov
js
jae
lcall
pushl
sahf
fldl
cmp
insb
popf
sbb
and
jge
lret
xor
jmp
xchg
push
xor
jl
push
cmp
movsb
mov
mov
cld
lea
decb
mov
push
clc
notl
das
sar
into
insl
popf
sbb
and
cmp
dec
aad
and
daa
jg
leave
jl
clc
mov
fs
movb
jmp
lcall
pushl
dec
cmp
movsb
adc
cmp
pushf
das
cmp
ljmp
mov
sub
es
jnp
nop
nop
pop
cltd
mov
arpl
dec
push
and
and
ljmp
push
inc
mov
pop
cld
repnz
xlat
adc
and
aas
nop
mov
inc
cli
lcall
pusha
jno
into
mov
xchg
or
sub
pushl
call
xor
sub
lahf
fwait
or
jnp
pop
xor
push
push
bound
decl
pop
es
jae
ja
dec
and
dec
das
push
pop
mov
jge
lods
jmp
cmp
xor
xlat
imull
cmp
jmp
jecxz
sub
call
and
pop
adc
ljmp
mov
cmp
mov
cmpsl
cmp
clc
add
sub
sbb
cmp
jmp
les
push
jge
xchg
das
mov
xchg
xchg
jne
jnp
lods
inc
mov
add
jmp
js
call
lret
cltd
adc
rorb
xchg
add
in
mov
mov
pushl
ljmp
xabort
arpl
jno
xor
fsts
push
mov
inc
daa
cmpsl
adc
mov
frstor
pop
cld
push
push
or
pop
pop
mov
in
aas
sub
cmpsl
loop
stos
cmp
mov
xchg
jp
inc
pop
fnstenv
out
sub
les
les
xchg
lcall
aad
add
jmp
insb
mov
xlat
lret
mov
and
pop
or
daa
pusha
ja
push
pop
fistpll
sbb
cli
incl
mov
jae
test
std
lods
push
loop
xor
adc
add
jmp
xorb
cmp
jge
out
mov
fstpl
enter
loop
std
pop
leave
push
in
in
sbb
das
sub
ljmp
mov
faddl
dec
fwait
rclb
daa
pop
xor
bound
xlat
push
add
dec
cmpsl
ret
lret
nop
repnz
rclb
paddsw
jbe
pop
scas
jmp
sbb
rorl
xor
sbb
shlb
xor
int
mov
mov
pushl
outsl
outsl
jae
imul
mov
push
pop
push
sub
mov
or
or
daa
call
jl
lods
stc
jae
xor
dec
mov
jp
pushf
or
sub
aas
clc
lcall
out
rcrb
stos
push
fsubr
jnp
push
loop
fwait
inc
mov
sub
jecxz
lcall
add
mov
jl
mov
sub
sub
clc
push
sbb
inc
mov
cmp
lods
jle
inc
nop
js
mov
mov
dec
pop
jbe
mov
xor
sub
add
je
push
daa
int
in
lcall
fbstp
push
xchg
leave
mov
leave
sbb
int
imul
call
in
mov
data16
sub
aam
ret
repz
cli
mov
xor
call
or
loope
add
repnz
fisttpll
inc
xchg
ljmp
pushl
decl
and
push
jbe
inc
sbb
dec
iret
jno
data16
and
xchg
test
jg
ja
jb
add
push
stc
and
test
push
es
pop
sbb
mov
xchg
cmp
fadds
jge
lods
test
pop
mov
xchg
call
pop
xor
hlt
fmull
divb
xchg
push
hlt
cmp
aas
jle
lods
cltd
mov
pop
leave
pop
fwait
lcall
push
ss
iret
iret
js
adcb
sarb
insl
dec
loop
enter
fistpl
subl
loop
push
xor
sub
jb
pop
add
cld
inc
sub
adc
jo
xor
xor
adc
icebp
stc
or
addr16
sub
and
cmp
ljmp
test
or
xor
pop
pop
cmpsb
jge
adc
cmc
or
movsl
mov
xor
lret
lcall
lock
dec
out
sbb
jo
adc
dec
push
pop
cmpsb
ljmp
push
call
mov
mov
mov
or
es
stos
bound
pushl
inc
inc
and
call
je
ljmp
inc
ret
divb
dec
iret
into
xor
pushl
add
dec
inc
out
jns
cli
cmpsl
and
into
cmp
push
inc
mov
lcall
sbb
jmp
notb
mov
mov
adc
adc
dec
mov
hlt
sub
jo
je
add
sti
xor
rorl
cmovle
aad
fadds
hlt
pop
inc
xor
inc
jbe
cmp
mov
into
sti
cs
jae
stc
ficoml
insb
mov
jo
push
or
sbb
test
jmp
pushf
bound
loop
or
sbb
push
ror
push
mov
int3
mov
ljmp
divb
outsl
cltd
js
in
jmp
and
and
sub
decl
pop
sahf
int
ss
xchg
lret
stos
cmp
and
and
mov
iret
les
jmp
ror
sbb
pop
cmc
test
es
pop
sbb
inc
notl
arpl
sbb
fstps
ds
or
lcall
mov
iret
sbb
fsub
repnz
enter
hlt
sti
pop
roll
ret
stc
shrl
push
lods
mov
pop
mov
daa
jg
inc
lret
jle
push
or
push
cmpl
xchg
sub
lcall
mov
push
shl
pop
mov
mov
mov
or
jo
mov
sub
mov
leave
adc
aas
inc
lods
call
incl
mov
dec
dec
push
mov
stc
in
cmp
movsb
cmpl
mov
lcall
fdivrs
dec
in
int
addr16
pop
test
mov
push
sub
hlt
mov
decl
jmp
leave
pop
inc
faddp
ljmp
lahf
mov
shlb
cmpsl
xor
jmp
shll
mov
cmc
mov
xor
lock
or
inc
or
pushl
std
sub
imul
xchg
push
xchg
sbb
roll
adc
call
ljmp
jl
cli
dec
ja
and
sbbb
xchg
add
or
cmp
stc
push
xor
add
loopne
and
cltd
add
mov
push
sub
fs
sbb
cld
mov
arpl
push
pop
imul
pop
dec
popf
push
add
fnsave
cmpl
call
dec
aam
insb
mov
pop
sub
cmp
cmp
sbb
aad
out
das
jns
inc
or
xor
dec
or
es
loop
dec
ds
push
pop
clc
mov
sbb
cmpl
xchg
inc
clc
rcrl
dec
push
data16
mov
ljmp
cmp
daa
mov
mov
xchg
test
add
ret
out
lret
sbb
lock
dec
sub
mov
mov
mov
jbe
or
fcoms
jae
fimuls
and
decl
sbb
xchg
test
gs
les
fistps
jl
ret
incl
dec
cmp
adc
sub
aad
pushf
adc
outsl
cmp
inc
push
movsb
clc
dec
or
stos
sahf
add
xchg
or
push
mov
lcall
push
pop
sub
cli
jb
cwtl
les
mov
cwtl
inc
push
shll
pushl
xor
js
cmc
jecxz
jecxz
push
push
inc
shrl
sub
add
add
call
popa
fisubrl
inc
and
mov
sub
jg
jnp
push
push
popa
jb
push
xchg
mov
aam
sahf
lcall
stos
stc
insl
std
and
add
test
and
andb
aad
jno
les
fwait
push
clc
push
roll
nop
adc
mov
sub
mov
aaa
std
push
inc
pop
mov
add
pop
add
ja
cmpsl
arpl
push
jns
cmp
clc
call
mov
lea
adc
jnp
push
outsl
cli
inc
cs
les
xor
mov
add
iret
ja
in
dec
call
push
loope
and
jl
cltd
push
out
inc
addr16
les
ss
aas
cmp
push
cmp
or
mov
mov
adc
and
andb
jno
loop
popf
sbb
pop
dec
fcoml
fstpt
int3
cmp
incb
inc
pop
lcall
xor
pop
push
adc
data16
repz
xor
into
outsl
mov
jl
int
daa
sbb
jl
lds
arpl
jmp
imul
lret
push
stos
jecxz
cmp
pop
in
ja
sub
or
cmp
push
push
hlt
jmp
lcall
xchg
xorl
or
mov
xchg
push
pop
ficomps
push
test
sbb
movsb
insl
mov
pushl
es
les
push
int3
xor
pop
mov
mov
popa
push
lcall
ljmp
loope
js
dec
jle
stc
mov
dec
pop
mov
mov
mov
repz
dec
sbb
jecxz
dec
dec
inc
jns
jne
inc
ds
inc
xadd
call
repz
divl
sub
xchg
pop
jo
and
xchg
dec
xchg
mov
sbb
ljmp
push
sub
rcr
out
imul
lea
fistpll
dec
lcall
mov
mov
incl
out
out
ss
addl
leave
push
inc
inc
inc
xchg
add
push
and
sahf
mov
ss
cmp
shll
cmp
jne
pop
ja
loope
into
jp
mov
push
and
and
nop
leave
or
mov
sub
jle
sti
lds
icebp
and
stc
negb
leave
push
icebp
or
jl
mov
std
ret
xor
movsl
xchg
in
into
dec
insl
sar
lcall
popf
dec
jnp
test
mov
and
add
xor
test
dec
adc
push
pop
shl
cmpsb
adc
scas
push
cmpsl
push
aas
stos
fdivs
ret
jmp
call
outsb
adc
and
sub
decl
cmp
push
js
pop
adc
repz
mov
enter
and
mov
dec
hlt
mov
scas
call
jg
jmp
sub
jmp
inc
jge
xor
imul
xor
inc
cmc
and
jge
and
pop
jl
stos
xlat
jo
int
jb
adc
push
es
mov
fiadds
rcr
clc
pushl
data16
mov
in
in
sar
mov
cmp
ljmp
jl
xchg
in
dec
mov
call
insb
fsts
mov
jle
lcall
mov
jmp
sti
stc
sti
leave
shl
into
mov
insb
std
add
test
inc
push
call
or
into
inc
push
lahf
movsl
sub
sub
cmc
arpl
loope
scas
pop
cwtl
mov
xchg
mov
pop
push
xchg
jne
or
imul
decl
rorl
jg
test
clc
add
inc
loope
mov
pop
je
clc
push
aaa
push
clc
mov
cmp
jbe
fisubrl
and
or
adc
pushf
shll
lock
les
pushf
mov
std
sub
or
push
add
lcall
or
sub
ja,pn
sbb
iret
dec
ds
cmp
daa
inc
inc
sub
or
out
mov
adc
jbe
add
out
pop
ret
sbb
ret
aaa
insl
xchg
add
lcall
mov
andl
jnp
scas
sub
retw
pop
jno
pop
mov
jno
sub
pushl
stos
or
jecxz
mov
and
xchg
xchg
adc
sub
int
mov
lock
int3
or
scas
xor
shll
xchg
or
push
test
sar
mov
xchg
pop
sbb
loopne
fst
shl
push
icebp
stos
xor
data16
je
jg
jge
xor
cmp
enter
movsb
pop
inc
and
cmp
sbb
int3
sub
out
xor
insb
xchg
cmc
jmp
inc
clc
in
loope
push
ja
ficompl
sahf
loop
rcr
cwtl
dec
in
lcall
inc
int3
arpl
mov
ret
aad
cli
sub
cmp
test
xorb
mov
shll
dec
scas
adc
mov
adc
jle
mov
call
lcall
fwait
jbe
add
adc
sbb
sbb
adc
subl
outsb
aas
adc
call
adc
jo
or
test
mov
sbb
jg
mov
lock
mov
pop
dec
adc
decl
lock
push
xchg
imul
push
push
mov
cmp
sbb
xor
adc
pop
into
int
and
xor
fsub
test
xchg
mov
lret
jbe
in
mov
out
xor
adc
fcomip
mov
nop
sub
inc
and
mov
xlat
mov
jecxz
leave
aam
dec
jns
push
push
inc
nop
mov
adc
sub
and
decl
and
mov
repnz
add
cli
fstps
mov
xchg
shl
pushf
repz
push
xchg
push
pop
lock
add
in
mov
cmp
cmp
and
or
cmp
lock
mov
cltd
hlt
sub
stos
scas
lret
sub
or
ja
sub
pop
pushl
fsub
mov
hlt
mov
in
ljmp
mov
lods
mov
popf
mov
ljmp
shrb
stos
jg
imul
pop
mov
test
fldl
loope
cmp
aaa
jmp
fwait
mov
jle
pop
cwtl
push
jns
push
cmp
sbb
lods
dec
xchg
add
les
mov
jmp
outsl
jmp
les
adc
mov
mov
or
sbb
push
lods
rorb
jg
cmpsl
and
fs
xchg
pusha
scas
jle
fdivrp
sub
dec
pop
jns
push
jp
cmpsl
pop
ret
incl
add
pop
bnd
push
jnp
dec
jp,pt
mov
dec
xchg
mov
mov
scas
mov
adc
sbb
ja
inc
push
scas
enter
pushl
or
push
stc
mov
jbe
es
push
lock
push
push
cwtl
lcall
popa
movsl
decl
push
inc
pushf
cmp
mov
out
rcl
test
test
inc
faddl
jecxz
sub
pop
decl
sub
scas
sub
add
dec
sbb
push
mov
popa
xchg
push
lods
and
iret
ret
jmp
mov
lock
je
fldcw
jl
fbld
mov
call
lods
cmc
ss
push
mov
ss
dec
inc
jae
je
and
adc
mov
into
ljmp
in
jno
ret
enter
fs
leave
movsb
dec
jns
xchg
inc
sbb
jl
jnp
mov
mov
nop
and
aas
mov
cmp
dec
jo
lret
cmp
xchg
not
dec
cmpb
std
dec
adc
imul
inc
or
incl
outsl
mov
adc
jmp
or
ret
cli
xlat
fidivl
scas
mov
mov
mov
pop
call
sub
ret
sbb
jmp
adc
leave
fs
cli
mov
lea
mov
out
in
sub
and
movsb
rcrl
lods
adc
cltd
push
xchg
or
push
sub
inc
icebp
mov
loopne
mov
inc
mov
sbb
cmpsl
jg
dec
push
mov
inc
push
movsb
and
sub
mov
or
insb
aaa
js
cmpsl
mov
and
ljmp
lods
inc
notl
iret
xor
scas
xor
adc
decl
shlb
loop
dec
pop
pop
mov
sub
daa
scas
mov
call
push
push
aad
lret
xor
sub
mov
call
jo
pop
arpl
imul
icebp
incl
or
aam
fisubrl
lret
mov
xor
out
xchg
xchg
push
mov
pop
cld
repnz
in
cltd
push
insb
push
fnstenv
pop
xorb
scas
mov
js
test
lock
mov
jl
cli
push
jecxz
out
imulb
jg
mov
jbe
push
cvtps2pd
xchg
test
icebp
mov
add
xstore-rng
cmpsl
jmp
js
pop
cmp
push
pop
jo
fdivl
pusha
loopne
lods
pusha
xor
cli
pushl
inc
sbbb
jecxz
mulb
cmp
mov
shrb
incl
mov
mov
fimull
popa
in
cmp
jle
push
ljmp
cmc
inc
cmc
arpl
push
and
jg
inc
mov
rorb
ficompl
inc
inc
push
es
lahf
add
test
clc
ljmp
jne
push
sub
ret
add
inc
push
sbb
cld
adc
add
adc
es
call
inc
int3
fimull
out
jge
test
dec
fldl
dec
shlb
mov
arpl
in
pop
mov
js
pop
lret
xchg
push
movsb
test
push
movhlps
jecxz
jg
mov
into
pop
fidivrs
enter
sbb
cmp
outsl
push
mov
aas
enter
cmp
or
and
arpl
insl
pop
sub
dec
ds
add
dec
add
hlt
inc
in
pop
inc
lcall
insb
ljmp
mov
cmp
sub
call
cld
cmp
lds
or
fadd
or
repz
test
xchg
test
jnp
ds
mov
adcb
lahf
popf
add
mov
sahf
pushf
fcomi
jbe
sub
shlb
xchg
shl
mov
je
lcall
in
in
js
xlat
xor
adc
sub
mov
call
je
cs
mov
push
mov
adc
out
xor
cmp
or
push
out
call
mov
fcoml
outsl
jne
and
mov
mov
movsb
inc
hlt
push
xchg
xchg
mov
add
sbb
loop
mov
inc
lret
aas
jge
push
dec
xor
out
lcall
fildll
pminub
push
sub
adc
fidivs
addb
dec
sti
add
rcl
decl
insb
adc
xor
mov
aas
addr16
decl
mov
fldt
jecxz
add
data16
sti
mov
mov
jmp
dec
pop
push
dec
sbb
sub
daa
lds
mov
xor
dec
cmpsb
pop
cmc
pop
mov
clc
add
sti
lahf
lea
pushf
sarb
mov
pop
hlt
jmp
sbb
pop
fstl
call
into
out
gs
clc
push
pop
stc
mov
divb
jo
pop
xchg
pop
xchg
push
test
pop
test
jo
std
incl
into
jno
mov
pop
frstor
push
mov
loope
outsb
fsubr
push
fdivrp
je
inc
pushl
je
popa
dec
lahf
and
jae
leave
rep
cmp
hlt
xchg
cli
sahf
scas
sub
int
call
int3
stos
jbe
xor
pop
imul
fldl
add
outsl
mov
xor
popf
and
adc
mov
call
cmp
cmp
and
pushl
sbb
sbb
mov
dec
mov
pop
sub
jecxz
leave
add
fnstcw
rcll
outsl
cli
mov
fs
sbb
or
push
pusha
lret
mov
incl
add
repz
call
unpckhps
gs
and
fdivrp
call
jb
dec
and
in
stos
int
sub
and
pusha
notb
ljmp
cmpsl
push
mov
mov
and
adcb
mov
daa
xor
push
inc
mov
jmp
xlat
xchg
jne
lock
push
pop
pop
icebp
pop
mov
xor
in
dec
aad
mov
ja
daa
ret
rcrl
shr
cmp
mov
ljmp
lcall
xor
jno
ror
out
and
pop
mov
sbb
lcall
mov
cli
fwait
sub
outsb
cld
incb
jmp
lds
enter
mov
cmp
stos
add
xchg
lcall
push
jle
out
xor
cmp
jge
pop
pop
les
jbe
mov
andb
scas
fs
xchg
enter
mov
or
repz
cmp
loop
and
or
out
lahf
js
pop
pop
movsb
in
inc
subl
jmp
sub
inc
test
push
adc
inc
push
out
in
pop
in
pop
mov
push
adc
lret
xlat
stos
xchg
mov
dec
cmpsb
mov
adc
pusha
dec
pop
mov
mov
dec
mov
addl
jmp
cld
pop
ret
shll
mov
imul
or
push
aam
or
mov
pusha
push
gs
and
ljmp
adc
push
and
mov
aad
cld
out
jl
xor
fwait
in
jmp
mov
adc
inc
xchg
stos
cmpsb
js
adcb
push
insl
jle
mov
lcall
aas
push
lahf
andl
mov
inc
jns
lds
mov
ss
ljmp
mov
std
push
mov
aad
adc
data16
dec
pop
xchg
pushl
stos
lods
jns
out
xchg
test
mov
fildl
dec
xor
clc
jg
add
xlat
jmp
adc
sarb
scas
sbb
mov
xor
mov
stos
jo
mov
jae
jmp
cmpb
lods
hlt
push
xor
out
rorb
ror
incl
cmp
shrl
push
pushf
or
jbe
pop
inc
sbb
stc
sbb
pop
dec
mov
jo
std
stc
out
sbb
icebp
inc
inc
mul
mov
scas
cli
ljmp
scas
dec
aam
ror
scas
xor
orb
leave
pop
push
loope
fwait
lds
call
fs
ss
rorl
in
into
cmpsl
or
fwait
popa
sub
repz
cmpl
mov
cmp
sub
mov
movsl
sub
outsl
jo
or
adc
leave
iret
pop
or
in
incl
cld
and
jne
xchg
jnp
cmp
mov
stos
jl
push
mov
pop
out
ds
loopne
fcomip
pushf
out
cmp
push
ficompl
cmp
mov
mov
bound
xchg
imull
iret
cli
inc
adc
xchg
int3
scas
cmp
jl
inc
int
sbb
cld
repz
jno
adc
adc
mull
lret
inc
lods
in
push
jle
pushl
lds
nop
add
pop
jno
push
rclb
mov
dec
stos
push
push
inc
and
pusha
push
dec
imul
ljmp
or
loopne
sub
lds
ljmp
leave
lret
cmpsl
iret
add
add
adc
lahf
or
mov
lods
mov
push
into
sar
mov
xor
mov
inc
std
dec
xorl
pop
xchg
push
jg
jg
sbb
sub
mov
ficomps
lret
add
push
xor
jle
mov
push
or
adc
sub
inc
in
xchg
xchg
xor
sbb
push
mov
fidivrs
inc
cld
dec
push
xchg
adc
div
scas
xor
inc
sub
out
lcall
mov
in
loope
push
enter
cltd
popf
xor
sbb
cltd
ljmp
aas
scas
xchg
xor
xchg
xchg
or
pop
add
push
fistl
stos
xor
rcll
std
mov
scas
mov
test
mov
lret
mov
dec
jecxz
adc
mov
jl
ljmp
ds
cmpsl
cs
je
pop
lahf
xor
jno
enter
sbb
pop
lahf
add
pushl
idiv
sbb
fs
rolb
fsubrl
iret
jne
and
jmp
sahf
jmp
mov
scas
pop
or
adc
loope
cmpsb
pop
or
inc
mov
push
dec
decl
dec
mov
scas
xchg
cmp
aam
pop
lahf
fidivrs
jae
cmpsb
aam
mov
inc
push
cld
decl
pop
mov
aad
add
xor
clc
lcall
pushl
push
js
sub
adc
enter
push
frstor
mov
inc
mov
call
leave
in
lret
addr16
enter
adc
imul
cmp
test
xor
lods
dec
ja
cmp
leave
or
popa
pop
dec
addr16
mov
cmp
mov
fstpt
insl
rcrb
pop
frstor
or
fnstenv
rorl
std
repz
inc
and
mov
adc
dec
test
inc
or
decl
ja
aad
scas
mov
mov
xor
add
push
jmp
mov
mov
lods
out
ljmp
shl
movsl
push
lods
outsl
std
mov
scas
cli
out
and
cmp
add
stos
xchg
jae
push
mov
mov
or
pushl
mov
dec
jle
fildll
xor
inc
cmp
int
in
lods
mov
gs
push
decl
inc
push
adc
enter
jge
arpl
std
pop
xlat
not
mov
mov
inc
push
ds
xchg
sub
mov
pop
test
shlb
and
dec
ficoms
jp
push
sub
cmp
icebp
or
jnp
sub
dec
pop
std
jle
or
arpl
shlb
mov
or
inc
pop
scas
lcall
ljmp
lahf
jne
mov
xchg
jnp
pusha
lret
insl
ficoml
sub
rol
pushl
sbb
pushf
sub
cmp
sbb
call
test
push
sub
ficompl
out
dec
out
loopne
icebp
mov
push
stos
adc
test
lcall
cwtl
jp
mov
pop
jg
push
nop
mov
in
lods
push
push
cmpb
push
cmpsl
notb
and
jecxz
out
hlt
in
xor
lds
stc
ffree
aaa
dec
mov
pop
jge
jbe
scas
add
cmp
jg
add
xor
ja
rcrb
sbb
cwtl
scas
mov
mov
mov
cmp
pop
int
es
cmp
mov
pop
inc
cmp
int
sub
in
je
cltd
pop
and
cmp
sub
mov
pop
push
dec
mov
popf
cld
test
sbbb
out
gs
ljmp
ficoml
dec
lock
and
xchg
mov
pop
cld
push
testl
int3
push
out
rorb
aas
xchg
call
dec
add
jecxz
loope
lcall
add
std
in
inc
cmpsl
scas
push
cmc
dec
das
xchg
leave
mov
bound
fsubrs
jg
scas
test
ficoml
cld
inc
cmpsl
mov
push
cmpsb
push
pextrw
cmp
sub
push
adc
mov
jp
jle
or
jnp
call
mov
pushl
pop
or
imul
mov
inc
xor
push
jmp
call
dec
lret
cltd
in
lcall
sbb
stc
fstps
lea
sub
decl
jle
hlt
lret
test
jo
cmpsl
and
adc
mov
fcomi
pushl
popf
mov
mov
inc
lahf
adc
and
dec
daa
xchg
push
dec
or
sub
add
insb
jne
pop
bound
xor
das
cli
incl
in
in
int
popa
cmpsb
xchg
pop
pop
push
adcl
test
mov
ljmp
pop
mov
cmp
int
outsb
pop
pop
mov
shlb
mov
cltd
mov
cli
jmp
fcomip
call
dec
inc
jle
adc
mov
popw
lcall
cs
mov
mov
ljmp
or
cmpsl
arpl
jg
lods
inc
cmp
fildl
mov
xchg
dec
inc
xor
in
jb
mov
dec
rcrb
lock
inc
pushf
lahf
mov
popf
addr16
and
xchg
cmc
lcall
inc
nop
sbb
ljmp
add
or
aad
or
scas
sub
push
fwait
inc
xchg
dec
inc
or
sbb
decl
pop
mov
out
mov
inc
sbb
out
sbb
pop
jns
add
lcall
insb
nop
jl
add
fwait
bound
mov
sahf
mov
stc
std
cmp
mov
xchg
jecxz
lret
repz
stc
cmp
mov
or
stc
and
xor
call
jl
and
roll
add
and
adc
imul
mov
movsl
sbb
int
jbe
or
repz
push
sbb
outsb
push
mov
xor
inc
jp
aas
add
push
adc
ud1
or
push
xorb
lock
jp
lds
lcall
adc
loopne
jno
dec
repz
push
cmpsb
out
rcll
test
mov
lcall
xchg
outsb
mov
insb
cmp
ret
popf
shlb
xchg
clc
pop
cmp
pop
rorb
pop
jne
mov
xrelease
notb
std
fistps
fcomip
call
in
cmpsb
pop
pusha
mov
out
imul
xchg
or
push
push
jmp
ljmp
insl
push
cmp
ret
fcomps
sbb
enter
lds
sahf
fcomps
js
addr16
mov
ss
or
sub
js
decb
cmpsb
stos
test
outsb
js
or
pop
insb
dec
icebp
idiv
sub
mov
scas
sbb
pop
inc
pushl
dec
pop
outsl
adc
jg
mov
shl
ljmp
push
pop
dec
pop
inc
xor
jbe
lcall
stos
gs
inc
pop
lea
loope
lret
popf
pop
cli
lret
xlat
push
push
mov
outsl
cli
pushl
dec
push
add
fcoms
frstor
jp
stc
jbe
xchg
mov
aas
and
xchg
popa
push
adc
push
dec
rcr
mov
movsl
aad
aaa
xchg
mov
loop
mov
arpl
xor
ret
cmpl
addr16
mov
call
cld
incl
add
arpl
push
test
mov
outsb
mov
cmp
push
lahf
pop
cwtl
pop
add
imul
sahf
jle
and
xchg
fstpl
es
dec
cwtl
mov
incl
or
mov
leave
jno
cmpsl
xchg
and
mov
imul
dec
leave
ljmp
dec
imul
pop
and
stos
jo
push
xlat
xchg
int3
bnd
lcall
call
dec
add
mov
push
and
mov
cld
into
ret
daa
scas
fidivrs
mov
and
xchg
lods
xchg
mov
inc
sbb
pop
cltd
adc
mov
scas
lcall
int
xor
in
in
or
loopne
loopne
push
push
clc
pop
fnsave
sbb
push
lea
adcb
mov
imul
mov
jg
inc
adc
xorl
cmp
cmp
pop
cmc
jmp
incl
clc
inc
xor
mov
into
sbb
xor
push
pushl
std
lcall
mov
pop
jl
adc
mov
or
mov
aam
pop
inc
cld
xor
addr16
cmp
decb
add
inc
and
cmp
mov
fdivr
in
cmpxchg
or
push
pop
sub
or
shlb
loopne
cmp
add
add
mov
incl
loop
pop
jbe
pushf
ret
add
std
decl
sub
mov
dec
lods
enter
pop
inc
clc
dec
sub
sbb
jo
or
in
fisttps
mov
ljmp
and
inc
shl
lcall
addr16
cmp
shl
pop
push
decl
fists
movb
or
and
jge
jg
push
shll
je
pushl
fildl
mov
out
lcall
mov
mov
popa
jae
add
pushl
inc
sbb
cmpsl
outsb
ljmp
dec
cltd
sarl
aam
lds
inc
jmp
add
aaa
addb
pop
lahf
mov
push
lds
movsl
mov
lret
stc
jne
jge
mov
xor
xor
arpl
mov
rcl
sbb
pop
sub
pushl
mov
push
std
xor
inc
inc
sarb
out
dec
andl
hlt
scas
mov
cmp
push
gs
jmp
inc
movsl
scas
sbb
fst
insl
mov
rorl
cmp
mov
in
xorl
jl
dec
sub
cmp
push
paddq
mov
sbb
ret
and
aam
or
popf
int3
in
dec
cli
outsl
clc
inc
mov
test
inc
mov
mov
outsl
mov
push
lods
cmpb
mov
mov
outsb
sub
hlt
fsubrp
mulb
mov
mov
mov
faddl
xor
adc
shlb
ror
cmpsl
xchg
jae
pushf
out
clc
lcall
pop
mov
xlat
aad
out
inc
mov
pop
popf
cs
aas
or
ljmp
mov
jmp
dec
lret
pop
out
icebp
mov
add
add
ljmp
mov
test
adc
or
cmpsb
mov
pushl
dec
add
das
dec
mov
rorl
jle
lock
cmp
inc
ss
std
cwtl
dec
imul
pop
movsb
sbb
pushl
lea
inc
repz
pop
int3
es
inc
or
shl
sub
adc
and
and
lcall
jb
into
fabs
fwait
and
and
movsl
out
mov
sbb
lock
je
xchg
sub
add
lds
jmp
push
popf
add
sub
fwait
push
scas
in
cs
push
js
or
mov
fidivrl
lods
loopne
das
pop
out
lods
xor
jge
sub
push
add
sub
jb
pop
cld
call
cmp
inc
stos
sub
and
sbb
pop
or
sub
lea
mov
xchg
adc
pushf
ss
lahf
aad
mov
aas
test
movsl
rclb
scas
test
loop
push
or
stos
nop
sbb
push
aas
js
mov
ljmp
add
arpl
fadd
mov
jbe
insb
xchg
clc
call
fmuls
xor
jae
jl
add
ds
xchg
scas
test
mov
mov
adc
ljmp
sbb
pushl
xor
mov
pop
pop
push
inc
mov
add
sarb
nop
mov
jb
fsts
call
pop
and
test
sub
sbb
pop
jge
sahf
movsl
test
xchg
push
cmp
aas
idiv
pushl
add
jns
aam
add
into
addr16
stos
js
aaa
aad
push
jns
push
testl
and
incl
add
repz
push
mov
or
dec
cmp
sahf
pusha
jnp
dec
ja
cmpsl
mov
push
lret
hlt
mov
fnstcw
or
pop
int
subl
mov
and
aam
sub
std
popf
in
dec
jb
sbb
inc
xchg
stos
sbb
push
fldt
lcall
pop
mov
js
fwait
addl
popf
mov
mov
mov
stos
cmpsb
ja
call
incb
gs
pop
lods
shlb
js
cmp
adc
outsb
rolb
outsb
nop
fwait
or
fisubs
mov
ficompl
movsb
lahf
ds
icebp
add
adc
pop
cli
stc
in
lods
cmp
aas
int3
addr16
add
push
cwtl
dec
mov
adc
sahf
pop
jecxz
dec
pop
push
push
jno
jb
ljmp
mov
inc
cltd
jns
or
mov
sub
push
push
mov
or
mov
mov
inc
or
rdpmc
mov
loopne
jp
aad
fdivrl
cli
push
sbb
push
adc
pushl
addr16
push
mov
andb
or
mov
xchg
cli
jmp
xor
jae
or
orl
jno
jge
sub
jo
jne
and
jmp
jo
daa
jne
movsl
ja
push
pcmpgtw
int
insl
lds
xchg
fidivrl
incl
push
pop
cmc
sahf
shlb
sub
mov
dec
and
pop
mov
push
das
testl
jg
mov
mov
xchg
addr16
aad
imul
jp
dec
lcall
rorb
jae
sarl
or
add
dec
jge
pop
insl
shlb
clc
dec
xchg
cmp
xlat
movsb
inc
ljmp
out
mov
add
ljmp
mov
cmp
lcall
int3
fsubrl
inc
fsubr
xor
and
jns
stos
ret
jne
subl
int3
lods
scas
icebp
incl
andb
icebp
test
mov
xchg
imul
fidivs
and
dec
aaa
movsb
or
pushf
incl
mov
sbb
mov
push
out
add
xchg
in
adc
sahf
cmpsb
cmp
rol
mov
add
sub
ljmp
movsl
cld
aad
lock
ret
lret
arpl
jg
add
sahf
js
xor
and
sub
in
inc
push
mov
push
inc
aad
fsubrl
inc
pop
sub
jmp
inc
mov
orb
sub
push
pop
jl
outsl
imul
inc
jbe
std
jo
jge
fbld
dec
jp
mov
cwtl
ret
popf
inc
adc
ljmp
call
mov
rclb
cmp
stc
cmp
loopne
pop
sbb
ret
sti
add
lods
hlt
push
fcomip
inc
add
cmp
or
mov
or
in
sti
push
cmpsl
aam
flds
cmp
mov
ja
mov
add
lahf
clc
xor
ljmp
jnp
fmull
nopl
sub
mov
and
mov
pushl
enter
sahf
jo
xor
dec
pop
fldl
mov
pop
dec
std
in
mov
not
cmp
jecxz
ja
incl
js
or
add
orl
adc
rclb
test
sti
or
imul
incb
push
imulb
decl
js
int3
push
and
xlat
cmp
decl
dec
clc
arpl
pop
mov
inc
in
movsl
or
xchg
cmp
adc
pushl
jle
xchg
cld
addr16
daa
mov
lds
xchg
in
mov
cmp
sub
push
mov
call
cli
ljmp
push
mov
mov
ret
imul
nop
add
lcall
shld
int3
jg
push
push
adc
ficoms
xadd
mov
lret
mov
hlt
push
rcll
add
pop
mov
push
adc
mov
cmpsb
ljmp
push
fcomip
fbld
mov
fcmovnb
inc
repnz
lcall
cli
pushl
loopne
pop
int
inc
loop
das
adc
filds
iret
and
pop
adc
test
jmp
ljmp
xchg
stos
and
icebp
xchg
jp
fisubl
mov
jg
and
pushl
xor
lea
notb
int
jns
pop
jecxz
hlt
dec
jle
inc
pop
sbb
incl
xchg
ds
cmpb
inc
jg
aam
daa
jae
add
lret
enter
stos
aam
jl
decl
add
ljmp
mov
mov
inc
scas
aas
jns
lcall
and
cld
xchg
fildll
dec
mov
mov
cltd
and
insb
lods
in
pushl
fists
aam
repnz
pop
cmp
xor
cltd
aad
shrb
xchg
lock
dec
dec
cmp
pop
mov
sahf
push
fldcw
lret
stos
pushl
cld
dec
mov
mov
rorl
out
xchg
inc
outsb
test
aas
pop
mov
stos
inc
mov
mov
stos
jp
pushf
jg
std
xchg
je
adc
jnp
xor
aaa
fmulp
orl
jle
ljmp
push
cmpsl
scas
nop
cli
cld
outsl
inc
je
cli
jmp
movsb
sbb
sbb
push
inc
and
push
mov
adc
inc
loop
rclb
add
lret
in
stc
pushf
mov
mov
push
fcmovnb
aad
mov
mov
test
and
imul
jmp
jo
imul
add
push
mov
mov
adc
idiv
cmp
inc
inc
add
cmc
xchg
js
jne
repnz
inc
jne
mov
cmp
or
pushl
lods
lock
cmpsl
cmp
adc
mov
inc
jmp
popa
jl
inc
xor
call
add
or
dec
adc
repz
ljmp
adc
lcall
incb
mov
jb
clc
sbb
inc
pop
inc
subb
std
dec
fnstsw
dec
jg
out
fisubrs
mov
push
addl
cmp
jne
sbb
orl
fucomip
add
decl
mov
arpl
flds
push
out
aas
into
jmp
lcall
call
pop
jae
rcl
pop
lea
xor
lahf
fstpl
loop
je
cltd
or
dec
mov
rclb
dec
sahf
xchg
jno
in
jge
sbb
ss
jnp
arpl
aad
decl
lret
in
pushf
sbb
cli
cmp
nop
or
je
mov
lcall
sub
leave
rol
push
cmp
fsubp
stos
sbb
ret
movsl
pusha
and
decl
pop
and
or
mov
pop
xchg
cwtl
rcrb
lods
add
call
jle
movsb
pop
mov
xchg
inc
pop
sub
std
add
stos
xor
jno
or
mov
insl
add
out
jbe
int3
ljmp
mov
jae
inc
out
pushf
lret
aas
mov
jo
and
lret
decb
mov
mov
fstpt
sub
xor
pop
dec
xlat
bound
out
lret
jb
dec
pop
and
cli
push
mov
sub
mov
pop
sbb
or
xchg
in
push
mov
jg
fstl
jne
int
sub
pop
push
notl
js
xlat
xchg
cmp
xchg
fdivr
jmp
fs
inc
xor
icebp
inc
shlb
sbb
cmpsl
fcmovbe
jmp
dec
mov
and
inc
xor
lahf
jb
cmpsb
popa
mov
ja
pop
es
addr16
ljmp
sub
dec
mov
add
adc
leave
xor
fcomps
cmp
out
popf
pop
jae
mov
mov
divb
imul
cli
and
add
pusha
gs
lret
cmp
int3
negl
stc
ljmp
sbb
outsb
int
push
sub
mov
mov
pushl
into
aam
cmpsb
push
call
scas
out
pop
call
dec
lea
mov
lock
and
loop
stos
pop
cmp
mov
jo
push
enter
dec
xor
xorl
fwait
sub
jg
jmp
adc
ds
dec
and
outsb
icebp
mov
cwtl
pop
fistl
decl
iret
iret
jg
lods
ficoms
cmpb
out
or
xchg
xor
xchg
cmpsb
mov
mov
jg
add
sarb
or
xor
pushf
mov
ljmp
out
sub
lea
pop
cmc
out
dec
cmp
test
mov
rcrb
popa
enter
jg
rclb
or
cli
arpl
cmc
rcll
ret
inc
fisubrl
ror
mov
call
jo
imul
jg
sbb
and
sub
lret
mov
sub
push
xchg
movsb
or
mov
pushl
push
or
cmpsb
lds
pop
push
sti
addr16
out
mov
inc
scas
je
stos
jmp
sub
es
ret
cmc
add
out
fdivrl
cmc
push
xor
and
fisubl
cmc
xor
scas
adc
test
outsl
decl
fs
mov
jge
push
dec
pop
jmp
cld
clc
cmp
fistps
mov
roll
pusha
fadds
jp
ret
inc
push
sub
insl
or
lcall
je
mov
loope
fdivrl
push
jo
icebp
ficoml
adc
insl
inc
pop
aas
jmp
pushl
pop
fstpt
add
lahf
xchg
out
xchg
sahf
lods
lods
call
cmpsl
mov
push
jo
decl
push
pop
int3
jge
xchg
push
add
test
sbb
add
fsts
mov
adc
rcr
sub
mov
cmp
mov
fstps
jge
sub
in
pop
insl
nop
mov
incl
insb
jne
mov
cmp
in
sbbl
dec
mov
inc
lcall
xchg
mov
shr
or
or
jnp
ljmp
jnp
stos
jl
les
push
ljmp
insb
adc
pushf
mull
fidivl
adc
loop
pop
out
dec
in
in
or
pop
ss
scas
adc
ficoms
je
xchg
push
scas
pop
imull
incl
sarl
jecxz
enter
cmp
sub
shlb
jnp
int3
pop
sbbl
test
rcrb
sub
leave
mov
inc
cmp
repz
mov
in
sahf
repz
lret
mov
pushf
sub
nop
inc
or
adc
in
ret
inc
sbb
push
pop
fildl
sbb
mov
lret
pop
inc
pop
jns
inc
inc
loopne
xchg
incl
incl
lea
cs
mov
out
fs
add
decl
pusha
loop
lahf
mov
es
and
dec
test
push
xchg
jge
cmp
out
int
mov
pushf
jecxz
repz
js
sbb
call
push
push
add
js
arpl
into
pop
stc
rorl
mov
das
add
sbb
out
and
push
out
lret
cs
pushf
shlb
cmp
in
sti
out
stc
jmp
ljmp
cli
lret
sbb
in
lds
jno
mov
jge
or
jnp
leave
sbb
sub
pop
xchg
addr16
xor
das
dec
sub
out
cli
in
stos
jp
dec
in
mov
popf
jmp
loop
xchg
cmp
add
fwait
or
xor
mov
xchg
lcall
shl
int
nop
nopl
sub
pop
lahf
int3
shll
push
mov
loope
lcall
loopne
icebp
test
pop
cmp
jg
or
or
jg
maskmovq
imull
gs
insl
out
jnp
push
inc
fildl
xchg
jg
mov
sarb
loop
xchg
outsl
or
push
inc
mov
lret
mov
ljmp
or
out
test
insb
mov
pop
cmp
jle
xor
pop
lock
out
mov
mov
xor
adc
loopne
ljmp
push
and
loop
mov
lcall
sub
mov
inc
mov
sub
or
mov
int
xchg
rorb
std
xchg
call
cmc
lcall
add
scas
xchg
mov
pop
jbe
xor
sbb
xor
shll
js
pop
js
stc
dec
lds
and
mov
or
and
inc
push
hlt
aad
mov
das
sub
clc
aam
sbb
pop
fistl
xchg
ret
and
lds
in
sub
scas
and
pop
push
xchg
pusha
push
out
xchg
pusha
sti
insb
adc
mov
out
sub
lcall
pop
cmc
decl
loope
fisubl
or
outsl
stos
push
int3
popa
loopne
sub
jg
std
xchg
fmuls
into
mov
pusha
js
adc
sbbl
inc
movsb
pop
inc
loopne
incl
mov
add
mov
and
out
add
dec
or
cmp
call
int3
sub
sbb
int
adc
and
divb
and
pop
incl
stos
ja
cwtl
sti
dec
xor
lea
cwtl
clc
cmpsl
lahf
cs
cmp
push
fidivl
jb
xchg
push
bound
xchg
pop
test
add
push
push
fimuls
bound
inc
dec
pop
das
es
rcl
pop
fcomip
mov
popa
mov
cltd
mov
stos
or
sahf
jne
or
arpl
popf
sbb
sbb
xor
fbstp
sbb
jge,pn
cli
pusha
or
sbb
cli
jl
lret
xlat
test
lcall
mov
push
insl
addr16
pop
add
mov
call
mov
lahf
adcl
int3
inc
add
lock
hlt
add
testb
out
sub
sbb
jbe
outsb
jp
data16
push
fmul
outsb
push
mov
mov
ret
add
mov
cmpsl
cmp
push
mov
mov
adc
xchg
cmp
and
inc
ret
shlb
stc
imul
push
out
fs
cmp
pop
and
scas
or
inc
ss
enter
or
filds
cwtl
neg
pop
or
cmpsb
aad
call
loopne
mov
lret
xor
lret
sti
mov
inc
push
mov
fmuls
decl
mov
lret
cmp
sbb
mov
sbb
mov
incl
sbb
mov
std
cmp
roll
outsb
sbb
push
dec
pop
dec
mov
scas
aad
xor
fisttpl
adc
out
mov
movsl
je
lea
jno
mov
xorl
add
push
push
mov
shlb
cmp
nop
out
adc
in
and
add
dec
push
in
test
mov
popa
cmpsl
add
loop
cld
mov
movsb
jo
dec
outsl
dec
push
aam
test
lret
loop
cs
mov
decl
jae
inc
xchg
movsb
mov
repnz
xchg
sub
mov
push
xchg
jb
ljmp
mov
adc
enter
rcl
jmp
jns
jmp
pop
lret
mov
into
jbe
cli
es
or
push
arpl
aad
shll
mov
aad
mov
jo
outsl
in
test
scas
test
add
leave
decl
jmp
std
out
cmp
mov
jmp
int3
jmp
fildll
movsb
test
cmp
dec
jbe
test
fldcw
insl
mov
fstpt
test
decl
adc
mov
scas
add
mov
mov
or
cmpsb
pop
imul
or
in
enter
in
es
and
scas
cmc
jmp
rol
cmp
pusha
popa
jo
mov
lds
jno
mov
fcmovu
repnz
icebp
push
lahf
sti
push
sbb
loopne
call
js
lahf
push
push
int
pop
sbb
cltd
sub
add
ljmp
mov
dec
icebp
lahf
xor
imul
call
add
incl
mov
mov
inc
repz
and
push
sub
ret
outsl
jge
lcall
cld
loopne
in
mov
push
imul
fcmovnu
or
aaa
push
mov
add
xchg
adc
pop
loop
std
pop
or
out
sub
push
loop
add
or
decl
mov
adc
jmp
adc
addb
in
movsl
clc
sbb
into
incl
cli
lahf
adc
mov
test
in
popf
jle
out
xchg
decl
ds
ret
rep
sub
or
nop
push
movsl
data16
sub
call
out
push
in
cltd
dec
jno
mov
arpl
es
mov
adc
jge
mov
ljmp
mov
ljmp
adc
xchg
aaa
hlt
pop
ljmp
mov
xchg
inc
daa
aad
push
jge
ss
mov
push
adc
mov
loop
orl
rolb
popa
mov
jle
hlt
or
jns
aas
pop
std
mov
xor
mov
cmp
call
add
xor
ljmp
fmull
dec
sarl
cwtl
pushl
mov
mov
imul
and
rol
test
addr16
xchg
dec
sub
mov
push
adc
jns
pop
mov
sub
imul
push
ret
roll
mov
mov
jns
loopne
add
mov
into
xchg
sbb
and
cmc
les
mov
add
push
sub
or
inc
mov
into
aas
push
mov
fnstenv
mov
dec
or
cmp
sbb
cld
sbb
pop
jb
sbbb
dec
dec
inc
pop
fwait
iret
sbb
push
mov
sbb
vpmaxub
mov
test
sbb
jae
push
pop
xor
rclb
mov
aam
in
pusha
push
lods
cmc
imul
call
cmp
nop
cld
icebp
push
loopne
xor
rcll
aad
int3
sub
hlt
dec
xorps
je
jne
mov
xor
sahf
into
les
call
dec
lods
xor
mov
mov
iret
ficompl
scas
mov
jmp
adc
sbb
fcomp
and
ret
inc
dec
inc
inc
dec
lret
int3
mov
cmp
call
icebp
pop
push
mov
sbb
aaa
pop
inc
aam
cmp
pop
inc
and
lea
dec
out
addr16
lret
jecxz
mul
jmp
lock
dec
mov
cmp
fists
out
mov
shrb
ret
lahf
popf
imul
shll
rcll
jmp
fadds
sbb
sub
push
xlat
jb
loopne
incl
clc
stos
adc
movsl
mov
mov
test
or
mov
jns
inc
adc
and
mov
jmp
scas
out
dec
jbe
jb
inc
fldcw
out
push
lcall
push
mov
adc
das
addl
mov
out
xchg
sub
scas
aad
cld
add
scas
cld
popf
jnp
lock
cli
dec
sub
lcall
aam
mov
sbb
popa
mov
jmp
mov
xor
inc
setns
push
mov
rorb
mov
les
push
push
sub
call
enter
pusha
call
xchg
fdivrs
ljmp
adc
and
cmpps
sub
push
jg
cmp
mov
mov
stos
push
daa
xchg
mov
lds
sbb
cmp
fidivrl
mov
int
ljmp
adc
cmp
push
dec
lea
cmpsl
test
sub
cmpsb
cmp
push
xchg
cmpsb
stc
mov
test
jg
xor
dec
mov
icebp
push
xchg
out
xor
push
add
xchg
jp
mov
xchg
add
push
mov
adc
push
test
hlt
in
push
dec
int3
fistps
jle
pop
adc
or
dec
mov
or
xchg
or
outsb
mov
insl
pushf
jg
data16
or
sub
sub
sub
ljmp
push
inc
popf
push
push
mov
xchg
jno
stos
scas
test
push
call
adc
and
cltd
fwait
mov
je
inc
fildl
es
int
inc
call
lds
mov
jo
bound
lds
xor
pop
mov
outsb
fildll
int
je
mov
outsl
xor
cmp
adc
fisttps
mov
pushf
ljmp
inc
jge
mov
imulb
cld
incl
adc
push
pop
jmp
push
mov
cmp
or
inc
push
cmp
sbb
cmpsb
mov
jmp
pushl
pop
fimuls
icebp
stc
test
repnz
cwtl
adc
jno
test
pushf
pop
cmpsl
cmp
jmp
pop
add
lret
jl
jmp
jnp
pop
inc
add
pop
dec
mov
cmp
or
fmulp
cwtl
cmp
xor
push
clc
sbb
xchg
mov
mov
jge
xchg
scas
loop
xor
dec
or
imul
insb
pop
jmp
hlt
es
dec
xchg
dec
into
pop
dec
pop
lcall
inc
scas
jp
cmp
jle
int
jae
outsl
idivl
mov
xor
fidivrl
dec
xchg
enter
ss
call
add
dec
fimuls
addb
and
sub
cld
test
lods
and
dec
into
xlat
scas
out
clc
push
dec
mov
insl
mov
mov
ret
xor
call
jecxz
dec
inc
lods
cmpsl
and
inc
push
adc
clc
decl
mov
cmp
outsb
shrl
cltd
test
jg
jmp
sub
mov
into
movb
das
cmp
hlt
and
add
hlt
mov
lret
loop
jne
xchg
shlb
insb
hlt
out
stos
dec
jmp
inc
clc
ret
call
or
ja
jmp
sub
add
or
enter
ret
cmpsl
enter
ljmp
jns
dec
xchg
fs
leave
arpl
sbb
stos
sarb
sbb
pushl
jns
push
add
shrl
pop
mov
outsb
lea
ss
test
lret
lcall
imul
cmp
xor
jo
mov
loope
sbb
mov
lcall
sbb
shl
orb
lods
lods
inc
ds
dec
cmp
adc
mov
pushl
ror
pop
nop
add
lahf
dec
push
and
out
add
fidivrs
mov
popa
mov
ja
decl
lock
mov
dec
ja
lahf
sub
jmp
faddl
decl
out
sub
inc
outsl
in
insl
shl
sbb
pop
rcll
cmpsl
xchg
mov
add
sar
ds
cli
jne
fsub
or
inc
lret
push
push
scas
ljmp
fldenv
mov
ret
jmp
ss
fdivl
lock
popf
aam
mov
sar
pusha
push
cmp
mov
mov
rclb
pop
lcall
mov
call
xor
out
stc
xchg
push
jb
mov
cmc
jo
call
fldl
jmp
mov
xchg
iret
pop
xor
mov
push
insb
push
ds
xchg
lock
decl
dec
jmp
xlat
mov
cmpsb
pop
dec
mov
rolb
jg
xlat
and
xchg
inc
xchg
aam
jae
or
gs
inc
pushl
jle
shll
call
xchg
add
mov
std
test
stc
inc
inc
testl
test
stos
icebp
pop
mov
sbb
test
mov
inc
mov
push
mov
mov
pusha
jl
div
inc
jb
xor
int3
dec
nop
mov
push
fcmovne
sub
or
jg
std
loope
ret
push
xchg
pusha
and
enter
or
lds
cmp
cmc
push
shlb
and
pop
stc
in
jnp
cmpb
sub
jp
pop
dec
add
popf
push
xchg
rorb
inc
and
dec
out
push
test
mov
mov
inc
cmp
decl
enter
repz
cmc
mov
enter
in
sahf
mov
dec
bound
xchg
inc
inc
bound
jo
lahf
lea
and
cli
mov
movsl
adc
or
les
push
fs
cwtl
test
push
ffreep
mov
pop
cmp
fwait
lret
dec
repnz
fs
fisttpl
mov
mov
out
mov
dec
imul
xchg
pusha
movsb
jns
xchg
fistps
cmpsb
ljmp
inc
inc
adc
pusha
mov
test
outsb
jecxz
cltd
push
jno
fdivrp
pushl
pop
and
cmpsl
add
jg
adc
cltd
fbstp
jo
scas
ficompl
or
sub
adc
lret
jmp
mov
divb
mov
mov
aam
inc
xchg
lea
jmp
testb
jno
mov
jmp
cmc
cmp
mov
cld
call
jle
dec
push
lods
cli
out
inc
and
add
cmc
popf
scas
push
call
mov
out
mov
lods
outsl
fcomps
push
add
dec
js
xor
aad
lds
lea
lea
pop
cmp
sbb
mov
pop
lcall
aad
sub
lret
pop
mov
ffree
ds
and
insb
push
insl
icebp
enter
or
incl
aad
es
and
fisubl
sub
or
jp
or
sub
jnp
je
std
out
mov
xor
adc
popa
mov
or
sbb
movsl
add
dec
xor
idivb
dec
cmp
pusha
test
lahf
inc
pushl
pusha
pop
dec
jne
dec
jl
loopne
lahf
or
and
push
mov
mov
xor
mov
and
dec
es
mov
lea
inc
mov
out
out
push
in
adc
int3
sub
lds
jnp
addr16
enter
sarb
mov
jmp
adcl
es
out
push
rcr
daa
or
leave
imul
bound
clc
std
movsl
ret
in
pop
mov
movsb
jae
cli
aas
into
fdivrp
ljmp
mov
into
sbb
and
out
lods
hlt
xchg
add
jg
jl
xor
jmp
not
adc
push
jp
mov
rcr
xchg
arpl
idiv
pushl
cwtl
or
mov
and
bound
and
mov
adc
sahf
gs
jmp
mov
pop
pop
test
cwtl
jge
xor
popa
adc
shrb
jns
add
ljmp
xchg
pop
dec
xchg
cli
loopne
cmp
pop
test
adc
aas
rcll
jecxz
incl
and
insb
or
jne
xchg
js
loop
int
pop
scas
sar
decl
dec
loope
imul
sbb
ljmp
cmpsl
cmp
xchg
push
xor
ret
mov
insb
testb
jae
adc
lcall
xchg
scas
push
push
pop
push
xor
stc
dec
pop
and
pop
push
popa
pusha
int3
mov
inc
xor
mov
mov
fsin
mulb
push
mov
jno
stos
arpl
fcmovbe
mov
adc
or
rcr
xor
xchg
lock
sbb
scas
clc
jmp
pushf
enter
clc
adc
add
pop
pop
imull
out
fnstcw
insl
add
pushl
sub
xchg
inc
cmp
ljmp
xor
mov
jg
aaa
add
inc
jb
mov
mov
jae
mov
xor
decl
inc
pop
cmp
pop
add
fldenv
xlat
pop
pop
es
mov
or
inc
ret
aad
les
iret
sbb
dec
mov
jecxz
test
test
inc
jns
pushl
pop
arpl
adc
jnp
add
fldl
popf
pop
dec
data16
jp
mov
inc
mov
lcall
lret
mov
ror
popf
jae
decl
rclb
in
sub
outsb
shl
loope
jns,pn
mov
out
xor
pop
or
push
scas
add
xchg
dec
or
test
push
popf
xchg
test
mov
sbb
and
cwtl
inc
lahf
jge
jg
gs
pop
movsb
fisttpl
xlat
into
inc
mov
fwait
nop
or
les
cmp
dec
popa
sbb
lea
scas
add
xchg
ss
sub
mov
int3
int
cwtl
test
gs
call
adc
mov
jnp
lahf
xor
fxch
xor
push
cmp
loopne
jp
lods
push
pushf
pop
push
adc
adc
stos
xchg
test
inc
sbb
mov
sub
ret
cmc
xchg
mov
mov
movsb
loope
jg
rcll
call
and
mov
cli
in
rcl
stc
mov
inc
adc
mov
sub
push
adc
sahf
xchg
add
pop
mov
push
jge
add
rol
les
cld
ljmp
insb
loop
popf
iret
jbe
add
lret
ljmp
cltd
iret
mov
movsb
sub
pushl
in
mov
adc
and
jo
in
xor
cmp
fisubl
into
pop
sahf
fildl
cwtl
mov
cmpsl
push
mov
pop
aaa
cld
fwait
jp,pn
rorl
mov
dec
push
mov
xchg
cmpsb
outsb
inc
in
pusha
xor
lea
sbb
aaa
jp
mull
arpl
fidivrl
pop
xor
rol
adc
add
sbb
jnp
add
pusha
jmp
cltd
cwtl
xlat
loop
and
xchg
cli
inc
push
es
sti
arpl
xchg
movsb
sub
ja
icebp
or
repnz
cmc
lock
xchg
out
loop
dec
pop
push
fistpll
shll
jg
jg
lcall
test
jle
ja
mov
lahf
cmp
adc
test
aam
mov
xor
xor
repnz
idivb
dec
stc
mov
call
jg
mov
jbe
jmp
stc
xchg
sub
das
adc
cld
out
xor
into
sar
decl
loope
ds
lods
jmp
sbb
sbb
pop
pop
mov
cld
jmp
push
jl
cmpsb
es
jnp
cmp
mull
mov
push
sbbb
rcrb
lods
stos
lret
add
iret
add
and
lahf
xor
es
xchg
test
in
test
or
mov
lcall
decl
sbb
lock
or
out
testl
jg
lea
mov
fucomip
fisubrl
std
mov
imul
push
fsts
lcall
mov
iret
push
loop
outsb
cmp
mov
mov
lods
call
cmp
or
ds
adc
fistpl
jae
in
fcomi
lods
xorb
fwait
es
dec
es
xchg
or
outsb
jne
mov
push
loopne
dec
xchg
push
cmp
shll
loopne
aad
push
pop
cli
jg
test
cli
jo
test
mov
inc
scas
cmp
dec
into
dec
adc
ret
xchg
pop
mov
lret
jne
push
imul
adc
pop
dec
test
enter
sbb
hlt
ja
orb
or
inc
push
out
mov
inc
lcall
clc
mov
push
sbb
pusha
xchg
cs
cmp
jp
out
pop
addr16
cmp
xchg
push
cmc
xchg
ret
repz
aad
jmp
sbb
arpl
arpl
mov
shr
test
jmp
and
loopne
jge
jg
xor
and
or
xlat
test
mov
and
mov
imul
lock
mov
and
in
cmp
test
dec
outsb
lcall
sbb
xchg
dec
push
xor
jmpw
loope
xor
test
movsl
test
lcall
call
ret
dec
jno
sub
loop
pushfw
xchg
adc
test
mov
push
aad
call
cmpsl
cmp
mov
jge
test
inc
mov
ss
dec
mov
ljmp
jnp
andl
mov
cmpsb
and
aas
dec
lds
loop
adc
pop
xor
or
sub
push
mov
movsl
sbb
in
or
clc
inc
loope
popf
add
mov
xor
jp
jno
cli
inc
inc
cmp
jge
xor
fdiv
mov
adc
inc
or
xlat
fists
adc
jns
add
jae
sbb
lahf
cmc
rorl
mov
cltd
xchg
push
out
mov
hlt
bound
dec
sarb
mov
pushl
sbb
rorb
in
out
insb
nop
sub
add
adc
jo
jbe
mov
incl
pop
push
push
hlt
imul
test
mov
scas
mov
ss
and
lcall
push
push
scas
mov
xchg
jmp
mov
xlat
sub
xor
movsl
push
ds
push
stc
push
mov
xchg
dec
fdivs
sbb
aaa
pop
push
xor
repz
incl
cltd
mov
aam
push
imul
jo
and
out
sub
jmp
fidivrs
push
roll
add
sbb
daa
xor
pushf
bound
push
sub
pop
sbb
dec
iret
xor
aas
dec
les
aaa
mov
jbe
dec
mov
adc
scas
std
sbb
lods
ljmp
or
cmc
insl
dec
jecxz
inc
in
ja
clc
lods
pop
jb
data16
ljmp
xchg
inc
gs
mov
sub
fidivs
notl
mov
icebp
cmp
mov
jg
mov
add
rolb
call
sub
mov
mov
dec
sbb
cmp
mov
sub
cmp
shl
jl
incl
sub
sub
mov
outsb
addb
dec
fst
pop
mov
ljmp
icebp
pushl
icebp
dec
fwait
pop
or
mov
test
ss
inc
rorl
repz
jns
dec
xchg
cwtl
out
cli
xor
or
scas
jnp
in
mov
pop
xchg
iret
loope
mov
mov
mov
adc
jns
rcl
rcll
fildl
push
decl
decl
cltd
sti
cmp
unpckhps
mov
jg
in
enter
mov
ret
mov
dec
and
lret
popa
lods
and
sbb
fiaddl
dec
jno
call
jmp
cli
dec
rclb
in
scas
push
aaa
inc
push
mov
xlat
jp
or
repnz
mov
lcall
add
shrl
xor
mov
mov
scas
mov
mov
decl
jnp
sbb
dec
sub
out
xor
xchg
subl
add
cmc
cmp
sti
and
sub
jmp
or
push
aad
push
sbb
mov
fidivrl
push
enter
ljmp
adc
pop
sub
sahf
pop
mov
icebp
lahf
ftst
loop
ret
idiv
scas
xor
pushf
decl
inc
nop
idivb
call
or
add
add
push
mov
sub
inc
aam
push
xor
out
and
call
xor
rcr
dec
shrl
mov
in
negb
call
data16
or
mov
stc
jmp
jmp
and
lods
adc
jg
insl
inc
popf
shll
into
fnstenv
jo
into
cwtl
and
adc
scas
clc
mov
lret
call
add
xchg
aad
xchg
cmp
testb
into
shlb
mov
add
jns
movl
inc
sub
test
mov
cmp
inc
mov
decl
xchg
cmp
jmp
sbbl
xchg
mov
movsl
cli
pop
xor
lcall
mov
push
jno
in
jl
add
scas
pop
das
pop
dec
loopne
test
incl
push
jl
push
jle
mov
mov
and
cmpsl
pop
cmpsl
xchg
loope
cmpsl
jecxz
inc
add
imul
or
inc
jp
neg
mov
cwtl
push
mov
fists
push
xchg
stos
pusha
push
or
sti
enter
pop
nop
mov
cld
out
rorl
scas
les
popf
pop
sub
add
cwtl
inc
loopne
mov
sbb
stc
cmp
jg
outsb
cmp
test
insb
cmp
orl
adc
xchg
call
outsl
clc
mov
push
test
pop
daa
cmp
lcall
hlt
decl
inc
sub
jno
cltd
mov
hlt
decl
stos
addr16
int
and
imulb
mov
jae
xor
call
insl
xlat
imul
ret
icebp
push
pop
ljmp
dec
gs
test
mov
or
cmp
ja
daa
sbb
stos
inc
lea
cli
out
pop
or
movb
and
jmp
cs
stos
popa
jmp
inc
push
aas
mov
lds
sub
push
aas
ss
xchg
push
sar
jg
call
and
jnp
adc
mov
std
inc
ss
cmp
es
addb
adc
dec
add
lahf
push
dec
mov
loope
cmp
cmp
mov
sbb
enter
fistpll
std
mov
cs
mov
xor
sbb
test
sub
rcrl
stc
pop
dec
sahf
incb
push
inc
repz
or
stos
mov
dec
in
pop
decl
cmp
arpl
cmp
mov
ret
mov
jno
mov
dec
push
jno
mov
js
addr16
jmp
imul
cld
scas
pop
mov
subl
xchg
jle
test
jmp
cmp
stos
xor
mov
sub
jmp
scas
inc
add
dec
xor
in
call
fnstcw
loope
push
inc
jg
xor
fildll
es
jmp
dec
mov
decl
orb
ss
subb
and
and
sahf
pop
imul
movsl
mov
mov
cmpsl
adcb
lods
mov
add
ljmp
ficomps
test
shrl
das
inc
cmc
out
data16
ret
js
inc
push
fs
dec
sbb
or
jl
jmp
fists
mov
jno
leave
out
and
pusha
jecxz
mov
push
cmpsb
incl
pop
jb
pusha
scas
movsl
cmp
aad
fsubrs
dec
or
outsb
push
in
mov
stc
adc
clc
fnstenv
test
sub
dec
aad
in
adc
cmp
jg
jmp
mov
ffreep
pusha
inc
mov
and
adc
loop
daa
es
jg
adc
mov
cmpsl
xor
mov
jno
pop
mov
xor
decl
mov
test
cmpsw
cmp
adc
xor
repz
fdivrp
dec
sahf
inc
movsl
jl
adc
sbb
leave
ret
add
loopne
test
incl
scas
fldz
push
icebp
lds
aad
adc
lock
mov
shlb
outsb
jge
lock
test
out
out
popf
push
xor
adc
filds
cmpsl
push
adc
inc
in
lcall
sbb
or
jbe
mov
lahf
loope
test
push
ds
mov
lea
aaa
xchg
lods
jp
jge
std
and
cltd
ljmp
xor
cmpsb
push
mov
popf
das
fisttps
adc
lds
push
mov
test
dec
sub
lcall
mov
repz
jl
movsl
out
or
mov
mov
cltd
push
sbb
mov
sarb
shlb
call
into
cltd
pop
xor
push
stos
aad
push
or
xchg
pop
sub
pop
sbb
jg
out
scas
push
out
mov
pushf
xor
or
mov
flds
and
stos
cmc
icebp
xor
std
inc
cmp
enter
xor
pop
scas
inc
push
rolb
lcall
inc
test
sub
fldenv
cmp
js
mov
movsl
add
mov
fcmovnbe
inc
xchg
fisubs
data16
sbb
shrl
mulb
stos
scas
push
or
ret
xchg
jbe
ret
cli
pushf
in
pushl
mov
out
dec
les
sub
filds
jo
cltd
mov
mov
sub
xor
mov
cld
sar
inc
imulb
in
arpl
arpl
push
dec
lret
jg
sbb
xchg
mov
addr16
mov
fwait
xchg
mov
xchg
push
push
push
aam
addb
repnz
ljmp
push
ds
cmpsl
insl
flds
mov
fucom
xor
cmp
std
xchg
pop
jne
call
and
mov
mov
aas
roll
ja
inc
mov
mul
fnsave
jno
ja,pt
sbb
gs
incl
jmp
and
adc
ds
fcomp
das
jno
dec
push
fstps
mov
ss
mov
or
inc
sbb
stc
xchg
mov
rcr
repnz
popa
loop
add
jmp
sbb
in
pop
mov
jle
inc
xchg
fldt
push
mov
jg
cmpsb
and
push
loope
mov
pop
jne
pop
add
int
ds
pushf
sbb
and
cld
push
out
in
cmpsb
pop
xchg
call
and
adc
adc
mov
push
subl
add
aaa
es
test
push
xchg
sub
iret
sub
rsm
pop
xor
popa
push
push
sbb
fs
jmp
lahf
cmp
xchg
xor
jae
int3
lahf
sbb
cmp
xchg
adc
ljmp
and
iret
push
shll
adc
stc
sbb
and
scas
iret
xor
call
inc
pop
xor
icebp
jmp
inc
test
sub
shl
pop
inc
jnp
fidivrs
mov
mov
lds
mov
repz
pop
sub
jmp
fldcw
mov
fistl
jno
dec
add
adc
icebp
lcall
outsb
ds
lret
aaa
mov
call
inc
xorb
or
out
sub
cmp
pop
enter
rcrb
ljmp
adcb
leave
in
inc
pop
pop
pop
push
lret
jae
inc
nop
fstpt
xchg
lcall
jno
add
adc
lahf
mov
out
adc
push
test
pusha
sub
stos
mov
lret
dec
xchg
mov
popa
cli
add
ljmp
rcr
test
aaa
push
les
lods
sbb
dec
in
lcall
inc
sub
call
jmp
or
hlt
fildll
jnp
sbb
js
js
xchg
jecxz
hlt
ror
jne
call
sub
xor
pop
sbb
iret
or
insb
xchg
mov
xlat
andl
das
cli
call
je
lret
insl
les
push
add
cmp
inc
xlat
lock
sbb
jg
jnp
and
pop
nop
decb
arpl
push
sbb
cmp
sub
lods
mov
repnz
stos
mov
xor
inc
add
fsts
pop
xlat
mov
cmpsl
jnp
insl
sbb
cld
mov
and
lret
in
leave
std
sub
mov
jl
jecxz
mov
xlat
push
movsb
lahf
outsl
out
pop
inc
xor
call
sub
xor
pushl
mov
inc
push
es
ja
clc
xchg
inc
xchg
in
cmp
negb
pop
mov
ds
fwait
pop
or
or
pushw
xchg
cs
outsl
adc
jo
stos
sar
or
imul
or
lret
mov
fdivrl
push
fbld
mov
sbb
adc
mov
add
int
fdivr
jg
mov
ret
les
adc
roll
sbb
sbb
sub
sar
das
clc
cmp
jmp
pushf
adc
jecxz
jbe
fcompl
repz
aas
sbb
mov
and
push
fstp
xor
out
xor
jmp
bound
dec
inc
int
mov
mov
cld
sbb
shll
mov
jecxz
jb
cmp
push
or
push
popf
lcall
call
popf
mov
outsb
push
rolb
daa
pop
push
xlat
inc
sbb
push
mov
xchg
pop
ljmp
mov
out
inc
shlb
mov
or
inc
xchg
dec
inc
xchg
jnp
inc
daa
or
ljmp
jp
je
xor
fstpl
mov
in
mov
add
aas
fstpl
les
jae
popa
push
fldl
popa
sarl
or
pop
push
incl
mov
pop
jecxz
shl
jno
jb
push
mov
mov
lods
test
fwait
and
call
and
inc
cmp
add
cmc
push
hlt
lret
aas
mov
ret
andl
jbe
dec
xor
jmp
dec
push
dec
and
aad
dec
aaa
cld
mov
fcoml
popa
clc
dec
and
mov
sbb
mov
lcall
or
subl
jno
add
fstp
xlat
pop
mov
movhps
jo
mov
into
mov
jg
test
mov
sahf
pop
add
movsb
adc
decl
dec
lahf
insb
faddl
ror
push
pcmpeqb
lcall
icebp
fistps
dec
aam
jns
push
jmp
dec
jmp
and
testb
xchg
adc
js
data16
into
and
call
mov
loop
js
inc
adc
jecxz
fldl
ror
pop
jae
jmp
jo
clc
incl
jb
adc
and
xor
jns
test
cmp
ds
sub
dec
push
cmc
filds
or
daa
dec
jo
push
inc
xor
push
or
sahf
loopne
jae
pusha
pop
jecxz
adc
call
xor
mov
xlat
inc
popa
mov
inc
inc
cmpsl
push
jmp
aad
movsl
cmp
xor
out
not
mov
sbb
mov
jmp
lcall
cmp
shl
cmp
push
add
cmp
mov
adc
icebp
xchg
inc
xlat
popl
and
jmp
pop
or
and
sub
fcomip
and
dec
jmp
fdivr
add
scas
pop
jae
cld
shll
push
xor
out
loope
std
incl
mov
sbb
push
add
pusha
stos
aaa
es
xchg
into
mov
pushf
out
add
decl
inc
lahf
adc
sub
push
cmp
jg
jmp
cltd
adc
fnsave
sub
lds
and
fisttps
ret
or
popf
inc
insb
lods
lcall
fsubl
call
mov
nop
insl
jle
lret
xlat
mov
div
add
fld
adc
insl
mov
insb
repz
sbb
dec
je
out
jge
mov
ljmp
mov
adc
arpl
rcll
call
cli
cltd
nop
out
pop
xor
mov
decl
lcall
and
sub
dec
xchg
mov
aaa
cmp
mov
dec
add
nop
or
lret
sub
add
int
ret
mov
movsl
das
lret
decl
pop
in
cwtl
clc
inc
push
inc
mov
mov
cmp
jecxz
jl
fiadds
pop
pop
leave
lock
cs
rcll
mov
insb
jns
call
frstor
xchg
sbb
mov
pushl
jmp
ja
jecxz
or
jge
insl
movsl
imul
jmp
js
cmp
add
lods
cmp
nop
pop
in
jmp
sbb
jmp
fiaddl
mov
mov
std
idivb
pop
in
add
stos
xchg
mov
incl
cltd
jle
rcll
loopne
adc
xor
fstp
mov
scas
clc
lcall
ret
push
packuswb
xchg
mov
mov
pop
movsb
cmp
sub
sbb
int
inc
adc
lcall
mov
sti
rorl
lcall
pop
int
scas
sub
insl
popa
cmp
jg
adc
inc
pop
add
call
sub
pop
lcall
xchg
sbb
mov
dec
mov
in
cs
call
int3
pop
pop
mov
pop
and
pushf
sbb
shl
int
int
dec
sahf
jmp
and
fisttpll
out
mov
movsb
filds
mov
ljmp
pop
popf
es
lcall
push
into
hlt
cmp
daa
cld
push
pushf
addr16
lds
cltd
scas
out
adc
sub
add
sahf
dec
pop
push
sar
cmc
and
and
lods
add
loop
lcall
aad
in
lret
std
test
cld
jo
sub
mov
loopne
sbb
call
lods
pop
sub
lea
ss
decl
mov
xchg
cmp
pop
cmp
add
push
sub
sti
pop
lods
dec
cmp
repz
pop
or
jge
cmp
push
pop
jmp
cmp
ds
lock
clc
les
mov
loope
cmpsl
add
add
ljmp
cmpsb
mov
test
idivl
jb
call
cwtl
pop
cmp
cwtl
outsl
or
test
cmp
push
xor
fistps
fmulp
mov
dec
aaa
mov
add
js
idivl
iret
add
lcall
lcall
mov
pop
cmp
adc
mov
cmpsb
push
ljmp
inc
jnp
pop
movsl
pop
arpl
in
jbe
jle
jo
mov
out
sbb
fs
iret
sbb
jg
dec
pushw
addr16
outsb
pop
call
or
frstpm(287
jno
mov
xchg
inc
jae
add
xchg
cli
jmp
fsubrs
dec
mov
in
aad
test
dec
pop
and
mov
push
pop
adc
inc
mov
ljmp
push
cwtl
ret
inc
xor
leave
mov
mov
xchg
sbb
jg
xlat
shl
insl
pop
jno
and
mov
push
sahf
jne
jns
inc
mov
adc
push
and
dec
incl
add
push
xchg
test
sbb
push
aaa
int3
xchg
jle
xor
out
clc
call
push
fildl
fistl
cmp
movsl
jne
mov
pop
sti
jno
mov
inc
xor
cmpsl
mov
incl
inc
lret
pop
push
mov
fcomps
sub
xchg
fwait
and
xchg
jg
scas
popf
lods
orb
sbb
fidivl
sbb
jb
or
call
mov
xor
fbld
ret
test
jecxz
mov
pop
data16
aas
test
xor
jns
test
cli
in
mov
mov
sti
push
push
loopne
dec
sub
and
lcall
mov
call
mov
sub
pop
lret
fdivrl
jmp
lods
lahf
inc
push
repnz
js
jae
sub
sar
cmpsl
cmp
push
mov
stos
xchg
fwait
mov
pop
int3
fwait
push
hlt
add
dec
sahf
mov
inc
call
jge
mov
or
movsb
push
cld
ret
pop
or
jg
loop
call
and
pop
in
fidivs
cmpsl
data16
xchg
mov
mov
loop
xchg
popf
cmpsb
mov
leave
jl
xchg
neg
add
call
push
pmullw
pushf
out
shrl
mov
shl
or
jmp
xlat
mov
fs
loopne
test
fstpl
sub
mov
and
jg
cmp
sub
aad
insl
xor
xor
out
das
loopne
rorb
sub
push
inc
out
call
and
ja
fucomi
jge
push
mov
scas
lret
push
ds
cmp
inc
pushf
comiss
push
and
std
xchg
pop
stos
lret
fadds
rorb
in
push
test
icebp
dec
int3
jbe
mov
popf
xor
pusha
lret
bound
ret
sahf
ret
test
cli
push
cld
pushl
pop
inc
and
inc
in
fbld
aaa
mov
push
test
es
push
out
call
mov
repz
arpl
outsb
dec
pop
mov
fldl
pop
jge
ja
clc
ds
fcomip
mov
les
adc
add
mov
incl
call
in
and
iret
test
push
int3
shr
in
test
mov
call
clc
test
and
into
sub
data16
in
mov
lret
cmp
insl
cli
or
in
push
inc
shll
xor
cltd
pusha
sub
mov
shll
cmpsb
cmp
inc
mov
fisubs
jae
les
sub
in
mov
mov
loop
cltd
xchg
add
call
push
scas
adc
mov
sbb
fildl
dec
xchg
or
fdivr
pop
cmc
dec
inc
xchg
mov
cmpsb
xchg
xor
push
cmp
in
jno
shlb
in
jmp
add
test
mov
push
icebp
push
sbb
pop
jmp
cmp
cmp
cld
decl
mov
leave
dec
inc
in
mov
mov
pop
xchg
mov
mov
pop
pop
mov
ljmp
and
hlt
insb
xchg
popf
cld
jnp
test
jo
icebp
cmp
mov
clc
inc
push
cwtl
mov
mov
xor
das
call
xor
add
push
sbb
rcl
sbb
inc
out
out
loopne
pop
test
fsubs
ror
jne
testl
hlt
mov
movsl
fsts
mov
jo
adc
mov
call
gs
rcrl
mov
adc
cmp
mov
jb
adc
add
mov
xor
push
clc
dec
and
lcall
add
incl
in
sti
or
dec
add
push
clc
out
jb
xor
imul
jb
imul
sar
cmp
cltd
add
mov
cmp
lcall
jle
mov
push
fwait
dec
pop
sub
xchg
sbb
xor
int
mov
lock
adc
jle
inc
ljmp
rolb
icebp
out
pop
xchg
dec
int
pop
mov
pop
push
push
iret
add
mov
les
pop
sub
jge
arpl
int3
cmpsl
xchg
decl
lock
sub
outsl
insl
scas
mov
sub
dec
jne
ja
push
cmp
sbb
cmpsb
popf
sbb
dec
push
cltd
rorb
xchg
mov
mov
push
push
out
negb
testb
pop
rorb
mov
imul
fcomip
in
sbb
mov
xchg
test
or
xor
popf
mov
pusha
push
add
sbb
mov
ja
sub
sub
pusha
mov
iret
hlt
std
jnp
jno
in
fsubp
jmp
fsub
aam
pop
adc
adc
cmp
icebp
insb
out
push
pop
or
fwait
adc
cmp
push
imull
fmull
sub
pop
xchg
cmp
mov
cmp
scas
push
jne
jl
mov
and
repnz
cmp
decl
movsl
lods
outsl
mov
jno
adc
mov
rorb
inc
pop
cs
insl
in
ljmp
sahf
mov
mov
jbe
inc
xor
hlt
test
dec
mov
mov
in
sbb
mov
pop
call
push
outsb
pop
test
popf
icebp
das
sar
fiadds
cmp
and
mov
or
sbb
loope
cmp
in
rolb
arpl
bound
aas
xor
push
jmp
icebp
lea
sub
lret
je
inc
xchg
xor
fstps
xchg
pop
add
ljmp
cli
and
mov
jb
xchg
lea
shrl
gs
cmp
lcall
cmp
push
lock
enter
mov
imul
mov
adc
push
pushl
loop
jns
sti
mov
popa
pop
or
pop
or
mov
stos
call
sbb
adc
movsl
imul
outsl
jbe
je
hlt
pushl
mov
adc
jne
mov
out
mov
jl
test
decl
cmp
js
fisubrs
push
mov
fistl
and
mov
jge
ljmp
mov
rorl
add
sub
lret
test
push
push
stos
adc
add
call
add
xor
xchg
dec
jae
icebp
nop
sar
aam
pop
dec
loopne
data16
ljmp
pop
mov
adcl
das
push
fistpll
test
mov
aas
nop
jno
push
dec
sbb
cmc
call
pop
int3
xchg
inc
mov
fnstenv
pushf
xor
loop
pop
lahf
int
aam
shlb
dec
sub
mov
and
add
mov
add
bound
mov
call
mov
adc
stos
dec
hlt
je
jg
fmuls
aam
fcompl
jle
adc
mov
jmp
adc
add
lahf
dec
fcomp
xor
enter
mov
imul
dec
lcall
int
mov
sti
rcrb
dec
dec
fstpl
mov
xor
and
out
in
dec
hlt
repnz
mov
cmp
jo
aam
repnz
jl
xor
mov
mov
enter
cli
or
js
mov
xchg
push
sbb
mov
sub
dec
push
mov
dec
clc
lcall
push
mov
add
push
mov
inc
push
sbb
icebp
je
mov
mov
repnz
out
pop
imul
pushl
dec
xor
iret
or
sbbb
inc
leave
ss
test
clc
mov
imul
mov
je
pop
aaa
das
or
outsl
xor
insb
xor
jmp
test
ja
sbb
adc
insl
mov
sahf
int
add
xchg
pop
stos
cltd
stc
pushl
aas
aad
push
add
lahf
icebp
mov
and
sbb
pop
fcmovu
fwait
dec
enter
pushl
sbb
pop
out
les
fcompl
lret
sbb
int
inc
dec
push
lock
call
and
icebp
inc
sub
or
lahf
int
mov
lock
sbb
or
ret
das
add
and
xor
or
shlb
jmp
jg
pop
aas
clc
orl
outsl
test
cmp
mov
in
xchg
jecxz
out
das
mov
fadd
mov
insl
xchg
scas
or
jge
fldenv
pushf
cltd
xor
or
or
repnz
fucomi
hlt
pop
ficoml
cmp
pop
inc
es
jo
repnz
mov
sub
sti
aam
mov
mov
dec
shr
inc
push
sbb
push
int3
popf
addr16
jg
push
jbe
cmpsb
pop
jns
test
mov
mov
push
mov
jb
call
movsl
push
mov
fldcw
cmp
add
xor
clc
sub
in
ljmp
and
test
cld
xchg
jle
pop
sub
retw
ror
test
push
inc
push
decl
push
mov
stos
int3
pop
push
inc
mov
xchg
push
pusha
sti
inc
adc
mov
fldl
or
stc
sbb
or
xchg
mov
aad
xchg
cld
push
jge
push
and
pushl
xor
mov
push
mov
lret
pushf
aad
mov
cli
lretw
push
pop
mov
incl
testl
lds
jno
fdivp
lods
aam
mov
dec
cmc
xchg
cltd
bound
mov
call
cltd
fsubs
mov
sbb
int
jmp
mov
ret
cmc
call
scas
add
sar
jmp
push
adc
inc
add
arpl
outsb
arpl
pop
cmp
inc
jmp
inc
or
xchg
movsl
jmp
sbb
pop
xchg
out
cmp
mov
mov
lcall
push
pop
mov
aas
daa
or
cltd
dec
addr16
les
out
mov
dec
movsb
and
adc
jbe
stos
or
sbb
pop
lds
loop
fwait
inc
sbb
fdivrl
clc
jmp
movsb
jge
cmp
sbb
fldenv
aad
sbb
sbb
aaa
cld
call
mov
inc
mov
add
adc
mov
cmp
cmpsb
aaa
js
lds
add
cmpsb
or
pop
das
xor
cmp
and
jb
dec
fs
cmp
xchg
pusha
sar
incl
fistpll
jecxz
ret
pushf
pop
sahf
ja
push
pop
mov
in
mov
jg
fldt
leave
mov
std
add
inc
cltd
ljmp
outsb
push
and
or
jg
mov
inc
fdivl
adc
mov
aaa
jge
push
dec
inc
mov
push
sub
ret
lods
or
test
shll
ret
fisubs
xorl
flds
cmpsl
cld
inc
pop
addr16
cmp
and
jg
xchg
pop
fdivrs
push
and
pop
jecxz
mov
sub
addr16
jns
sbb
mov
decl
or
xor
ret
scas
mov
cmp
fisubs
outsb
shl
push
gs
sbb
mov
ljmp
xor
sbbb
xchg
sbb
cmp
decl
dec
sbb
sub
sub
les
iret
repz
jns
pop
mov
adc
stc
mov
fdivr
push
jle
mov
add
add
cwtl
xor
xor
inc
mov
lcall
ror
fbld
xchg
add
push
stos
out
or
outsl
mov
mov
scas
sbb
jmp
insl
loopne
insb
dec
jbe
in
add
adc
push
scas
jb
add
xchg
pop
or
call
and
mov
or
in
or
cmp
pushl
into
jp
jns
xor
pop
cmp
mov
add
je
adc
push
sbb
jmp
test
adc
xchg
jbe
in
fisubl
jecxz
in
mov
int3
das
clc
decl
xor
xlat
ss
gs
into
stos
mov
aaa
loopne
dec
shrb
outsl
fisubs
push
and
aam
mov
arpl
test
aaa
mov
and
decl
movsb
pushf
pop
xlat
cltd
in
pop
or
leave
lahf
loopne
iret
test
addr16
push
mov
lcall
push
inc
mov
fistpll
sbb
call
and
sub
mov
gs
imul
or
inc
enter
scas
cmp
mov
hlt
jne
std
mov
pop
enter
sub
mov
repz
jmp
adc
inc
std
mov
mov
rcl
push
add
outsb
scas
jl
sub
fnsave
fiaddl
push
test
ja
xchg
test
or
lock
or
or
rep
leave
or
adc
fadds
call
lock
pop
cli
push
inc
int3
and
fistl
ror
adc
pop
dec
out
adc
push
addr16
arpl
dec
lods
clc
jmp
ret
call
push
loope
push
stc
loop
xor
fwait
adc
sarb
insl
cmp
jmp
or
adc
nop
ja
int
subl
push
call
jg
cmp
adc
test
icebp
jl
jo
ljmp
dec
mov
out
cltd
sub
pushl
sub
push
sbb
xchg
shl
sbb
in
adc
mov
lcall
ror
jmp
fcmovnbe
or
adc
andl
mov
jmp
insb
iret
pop
push
ficoms
shr
dec
pop
jl
lcall
scas
scas
sbb
js
aam
lock
pop
aaa
mov
ss
pop
dec
testb
add
xor
pcmpeqw
jg
incl
inc
or
mov
out
mov
push
push
push
cmp
idiv
repz
and
insl
xchg
loopne
xlat
jne
xchg
sub
sub
test
jmp
mov
dec
cmpsl
sbb
jmp
xor
pop
mov
jg
push
or
push
push
xchg
lock
jecxz
and
imul
mov
mov
lds
sub
jns
daa
sti
shll
cmp
push
pop
lcall
jge
mov
jg
test
or
sub
sub
icebp
cs
mov
leave
xchg
cmc
xorl
sub
cli
ret
mov
cwtl
fstps
xor
gs
sarb
jl
lods
mov
sub
lret
jo
mov
test
pop
adc
xor
lods
pushl
jg
pop
mov
testb
sub
rclb
arpl
shlb
jmp
out
xorl
cmpsb
jns
push
sub
xchg
fdivs
cmp
add
mov
incl
jne
mov
je
cwtl
cwtl
push
out
sub
fnstenv
pushf
loop
ljmp
sub
add
dec
ss
jmp
out
stc
and
pop
lcall
ret
mov
enter
push
sarb
jp
pushf
xlat
jp
int
jb
mov
pushl
ds
loop
ljmp
pusha
lcall
mov
ljmp
mov
and
inc
in
mov
push
insb
movsb
push
xor
test
mov
or
mov
pop
mov
jo
pushf
push
inc
cld
xchg
mov
sbb
lcall
and
test
rolb
cmp
imul
shl
int3
jmp
les
loope
pop
dec
fbld
flds
sbb
jnp
jmp
fstpt
rclb
or
dec
xor
inc
pop
inc
dec
aad
pop
jae
stc
testl
lock
mov
inc
mov
push
scas
sbb
dec
xchg
ljmp
in
push
ss
gs
mov
loopne
repnz
sbb
inc
pop
imul
dec
shlb
add
or
outsb
adc
adc
or
loopne
out
dec
cmc
jo
mov
pushf
iret
stc
lock
in
mov
jp
test
hlt
je
gs
fwait
testb
mov
call
rolb
push
jecxz
add
dec
dec
iret
sub
push
and
xor
dec
lret
ds
addr16
mov
ds
and
push
pop
mov
push
imulb
lds
in
pop
mov
das
clc
incl
adc
adc
loopne
stc
add
push
repz
and
jmp
imul
sub
clc
cmp
push
push
sbb
mov
mov
loopne
outsb
lock
cmp
aas
int
jmp
sub
ficoms
sbb
or
fistpl
mov
clc
loopne
lcall
lods
addr16
mov
into
push
test
and
jno
sub
fcomip
pushl
cmp
lods
mov
mov
cmc
inc
insb
add
lahf
add
push
and
add
push
lods
enter
ret
dec
cmpsl
jg
mov
enter
jmp
shld
mov
lds
mov
addl
mov
cmp
mov
jecxz
lret
addr16
mov
lcall
push
and
dec
dec
aad
xchg
jecxz
mov
jl
in
pop
push
xor
jecxz
cmp
stos
dec
lods
sub
inc
cltd
js
push
shll
sub
insb
mov
roll
gs
lcall
dec
mov
adc
mov
push
sub
jg
sub
add
int
sahf
insb
push
sbb
incl
cld
dec
lods
rcrl
addr16
xchg
in
push
and
inc
push
stc
lock
or
fnsave
sbb
es
nop
add
sub
push
mov
push
or
inc
xor
or
clc
or
ja
int3
rorl
adc
mov
sub
cli
pusha
insb
call
adc
xor
inc
test
add
inc
xor
incl
mov
cmp
rcrb
mov
and
into
xor
mov
mov
out
lret
imul
fdiv
int
xor
stos
or
push
xor
add
dec
insb
adc
and
mov
and
call
rol
sub
ljmp
ljmp
pushf
gs
push
adc
jmp
movsb
cmp
sub
push
scas
loop
sbb
outsl
cmpb
decl
das
int3
insl
cmp
inc
mov
jno
lret
ljmp
movsl
insb
popf
sbb
insb
xchg
mov
mov
dec
cltd
mov
aaa
jnp
fisubl
sbb
vminsd
pushl
mov
sub
fisttps
loopne
push
call
ljmp
add
stos
call
mov
loopne
xchg
mov
daa
stos
sbb
cmc
insl
jmp
ss
adc
pop
pop
fs
or
lret
cs
int
cltd
ljmp
loope
mov
push
inc
cmp
pushl
adc
nop
lods
mov
push
xchg
cmc
fdivr
jmp
sub
add
ret
dec
fists
or
dec
shrl
adc
inc
push
daa
nop
ja
cwtl
decl
cmp
push
mov
leave
js
mov
nop
shll
cmpsl
jbe
pop
push
and
das
call
sbb
sub
cmp
inc
dec
stos
pop
pop
test
ljmp
jle
in
repnz
sahf
rcrl
xchg
dec
in
jg
insb
decl
and
pop
loopne
jae
sbb
mov
sahf
imul
jle
sbb
in
mov
leave
cmp
mov
insl
or
dec
mov
push
jmp
jb,pn
hlt
xlat
sahf
fsubl
jbe
shr
mov
sub
push
sti
jg
loopne
addr16
icebp
daa
aaa
inc
std
rolb
sahf
sbb
ret
jmp
and
cmc
jae
jg
daa
hlt
in
orl
mov
data16
in
adc
sub
jns
cmp
pop
xor
and
jmp
sub
sahf
gs
clc
sti
dec
in
cmp
icebp
decl
mov
repnz
jg
cmp
ret
mov
lcall
cli
push
lea
bound
cmc
das
sarb
inc
sub
stc
pop
int3
sbb
xchg
outsl
cli
dec
pop
sub
in
xchg
in
sub
decl
outsl
cwtl
mov
pop
dec
sarl
and
mov
lock
pop
inc
idivb
jo
repz
push
xchg
hlt
cmp
hlt
inc
xchg
rorb
mov
pop
movsl
push
ds
outsl
fstl
inc
mov
xor
enter
pushl
test
sub
mov
ljmp
sahf
pop
jge
out
xchg
pushf
in
jp
mov
rcrb
loope
in
push
das
jo
stos
push
pop
mov
dec
sbb
dec
jecxz
dec
adc
cmp
dec
lcall
mov
cwtl
int
xchg
ret
inc
push
xor
incb
xchg
add
leave
jns
mov
mov
pop
in
mov
js
adc
insl
mov
lock
and
scas
fcomps
ljmp
loope
repz
imul
out
mov
push
inc
jae
call
lcall
popa
xchg
pop
dec
addl
pop
sub
filds
mov
mov
fidivrl
nop
xor
hlt
test
das
mov
inc
movsl
aad
movsb
cmp
iret
pop
ret
jb
call
add
jg
addr16
cmpsb
mov
fisttpl
mov
mov
add
jp
lcall
push
sub
jo
cwtl
insl
sbb
mov
es
push
mov
incl
dec
adc
leave
xor
or
outsl
xchg
repnz
push
inc
outsb
mov
ljmp
out
adc
add
call
nop
or
call
cltd
sub
addr16
insl
sbb
outsb
ret
or
ret
in
sub
fdivrp
jg
pop
insb
lcall
arpl
inc
test
mov
enter
pop
jmp
mov
fst
mov
sbb
mov
mov
sub
and
mov
cmp
popf
fcomi
dec
jno
or
pop
scas
or
pop
jge
incl
sub
mov
adcl
mov
cmp
call
dec
sub
out
jecxz
mov
jmp
or
dec
add
jl
test
mov
sbb
cmp
ss
cmpxchg
cli
lret
lods
icebp
mov
lock
jg
loope
xor
nop
fisttpl
push
movsb
es
jne
mov
sub
ret
mov
mov
or
push
ljmp
xor
or
shlb
popf
pop
gs
and
mov
lret
mov
cmp
xor
incl
and
stc
aas
ljmp
push
xor
clc
decl
fidivs
cmp
adc
iret
cmp
ljmp
inc
jno
fdiv
pop
enter
pop
lahf
ss
push
lahf
hlt
mov
dec
call
mov
mov
sub
dec
loopne
sub
in
fs
inc
lcall
div
jo
ficoms
aaa
cltd
xor
sarl
mov
add
popa
and
jg
decl
cli
inc
sub
cmpsb
pop
mov
push
jg
stos
sub
adc
pop
jb
dec
jb
adc
dec
ljmp
sub
imul
cmp
call
pusha
jns
mov
push
pop
sbb
aad
jmp
fucom
gs
scas
decl
mov
push
and
sbb
push
int
bound
mov
sahf
sarb
lret
mov
incl
adc
xor
mov
jg
test
or
xchg
and
das
sti
adcl
in
les
push
frstor
xchg
pop
cmpsb
out
andb
pushl
sub
push
in
mov
out
in
jmp
inc
sub
sbb
lret
mulb
cmpsb
mov
cltd
push
pop
test
inc
add
mov
cmp
push
cmp
pushl
mov
xchg
or
int3
ss
imull
pop
test
adc
jmp
mov
popa
jbe
in
push
adc
jp
ret
sbb
push
sbb
xlat
test
or
xchg
jnp
std
in
dec
sahf
xchg
adc
dec
mov
aas
jg
mov
outsb
ret
and
pushf
sub
sub
mov
test
push
or
fildl
xchg
push
mov
loop
adc
pop
mov
fnstcw
mov
out
add
add
sbb
je
adc
cwtl
xor
mov
repnz
addb
es
call
sub
arpl
in
shr
jb
cmp
push
or
call
out
jmp
dec
outsb
out
mov
adcl
into
pusha
mov
jge
clc
movsb
sahf
ss
inc
call
add
pop
test
or
jle
pop
sbb
fildll
out
rorl
lods
imull
aam
jmp
inc
and
loopne
pop
dec
push
cld
pushl
inc
int
xor
fbstp
pop
xchg
in
push
cmc
cmc
out
fsubrp
cmp
jp
adc
lcall
inc
xchg
inc
arpl
push
aas
xchg
jo
idivb
lcall
loope
xchg
sahf
stc
inc
adc
inc
sbb
cmpsl
pop
cmc
mov
rcrl
mov
faddl
push
outsb
aad
js
out
jp
stos
cmp
xchg
mov
sbb
cmpsl
daa
dec
dec
push
xchg
stos
xchg
add
int
push
pop
pusha
push
pop
and
cmpsl
shrb
sub
xchg
sub
ljmp
leave
outsb
out
cmc
adc
adc
mov
repnz
or
outsl
clc
jmp
xlat
pop
mov
jae
and
xor
jo
xchg
mov
pushl
mov
sub
fidivrs
shrb
lahf
mov
sub
dec
dec
jg
jmp
adc
lods
xchg
dec
xchg
sarb
add
dec
outsb
sub
jp
scas
push
sub
gs
jmp
push
pop
add
xchg
cmpsb
jo
lret
out
jo
popa
scas
pusha
cmc
pushf
dec
xor
sbb
stos
mov
jmp
gs
cmpsl
or
popf
cwtl
icebp
mov
notb
inc
andl
inc
movsb
call
mov
xchg
mov
pop
mov
nop
roll
shll
hlt
jp
movsb
out
clc
cmp
mov
xor
fwait
jb
cmp
repz
mov
scas
cli
lcall
vmptrld
add
aaa
pop
push
mov
aas
sti
adc
movsl
ffree
jl
mov
mov
xor
rcrl
movsl
lcall
lcall
insl
clc
js
mov
inc
cmp
pop
fwait
push
inc
mov
push
aam
imulb
adc
mov
incl
add
sub
xchg
lods
stos
ret
jno
lea
adc
xor
mov
mov
popf
jo
stos
mov
xlat
scas
jnp
sub
xchg
xchg
stc
outsb
lods
sbb
iret
mov
mov
ret
cmpsb
inc
inc
das
jecxz
xchg
add
inc
inc
lret
inc
popf
ljmp
shll
int3
cmp
jbe
nop
arpl
repnz
pop
dec
pop
jp
ss
adc
push
add
or
int3
mov
incl
insb
icebp
shlb
mov
mov
mov
sti
add
xor
adc
cmpb
pop
fimull
cmpsl
push
mov
cmpsb
mov
fadds
push
mov
push
clc
inc
mov
in
icebp
xchg
out
add
insl
rolb
imul
nop
cmp
jmp
push
scas
aaa
gs
sti
adc
dec
cmovg
or
clc
arpl
gs
call
leave
cmpl
cmpl
test
pop
mov
roll
pop
inc
scas
enter
mov
int3
mov
cmp
scas
outsb
mov
popf
push
adc
inc
adc
inc
inc
inc
inc
jns
andl
mov
scas
jmp
mov
idivl
or
gs
sub
pop
mov
test
sbb
sti
jl
gs
cmp
dec
repz
fcmove
jne
push
lret
cmp
inc
imul
cmc
xor
jmp
fcomip
fistpl
adc
bound
sbb
and
pop
adc
or
add
jl
cli
dec
shr
jne
xchg
popf
jae
xchg
jge
jne
fucom
into
es
fwait
jmp
ret
les
ret
stos
mov
in
lahf
mov
mov
jbe
repz
in
push
popa
inc
jno
cmp
pop
int3
jo
and
les
mov
cmp
jg
pop
aaa
xor
sub
call
or
dec
jl
repnz
cmp
jg
incl
sbb
shlb
sub
pop
dec
inc
jnp
mov
pop
shlb
or
test
sbb
decl
xor
pop
push
into
pop
cmp
and
and
sbb
fwait
sbb
xor
aaa
cld
call
jae
add
xchg
in
adc
inc
adc
lcall
cld
and
push
mov
out
cmpsb
jge
js
mov
sub
sub
lcall
arpl
push
or
daa
sub
pop
sub
js
jne
jl
or
incl
cmp
jge
lds
xchg
dec
sbb
pushf
xlat
add
fbld
lret
movsb
pop
or
into
push
in
or
dec
mov
and
jge
imul
int
sar
mov
jl
test
int3
push
jne
push
cmpsl
push
out
push
mov
xchg
mov
sbb
pop
movsl
sbb
je
mov
push
dec
inc
mov
mov
push
dec
in
loopne
pop
lods
in
xchg
and
test
pop
lcall
mov
inc
push
pop
mov
insb
mov
icebp
cmp
bound
sbb
inc
sbb
jge
pusha
jge
sub
in
jns
add
and
lcall
lock
jmp
xchg
lock
lahf
xchg
shrb
sub
jl
fadds
jno
xor
mov
inc
add
in
add
push
push
mov
sti
adc
adc
push
cmpsl
mov
dec
adcb
aad
mov
ljmp
sahf
inc
jg
ss
jp
in
sub
ret
jbe
adc
push
aam
movsl
jg
movsl
popf
shr
pusha
out
push
rsqrtps
stos
mov
pop
mov
ljmp
and
cwtl
test
or
xor
pop
clc
jp
call
incl
add
jmp
imul
xor
or
mov
and
sbb
mov
loopne
decl
inc
stc
stos
stos
lahf
shll
lret
out
fidivrl
ret
xlat
and
decl
je
pop
add
addr16
int
or
mov
xor
and
sbb
decl
shll
jp
shll
push
or
and
out
add
xchg
ret
incl
push
mov
jecxz
addr16
mov
jp
push
and
lret
sarl
shl
xchg
in
pusha
mov
mov
js
pop
lcall
xor
enter
push
cltd
mov
cmpsb
aas
cmp
mov
mov
lcall
inc
mov
lds
pop
dec
in
xchg
movsl
xchg
jl
and
incl
js
movl
inc
gs
sbb
ds
fldcw
sbb
lcall
daa
xchg
mov
lea
mov
push
hlt
pop
dec
xor
call
fmuls
push
or
test
xor
fldenv
fadd
jg
mov
hlt
loop
shlb
rcrl
iret
jmp
ljmp
lds
int3
inc
lret
dec
in
rol
mov
not
mov
cwtl
adc
xchg
fisttps
cli
jmp
out
mov
sbb
add
mov
sbb
outsb
bound
jge
ret
stos
ljmp
push
sahf
xchg
fucomip
fisttps
pop
xchg
imul
movsb
jl
mov
hlt
jl
movsl
mov
and
inc
lret
ficomps
mov
mov
decl
incb
or
lea
mov
sbbb
es
inc
dec
mov
aad
iret
xchg
jl
iret
pop
nop
ljmp
mov
leave
fwait
ret
movsl
lret
dec
insl
lret
mov
fsubs
jl
js
dec
jo
cltd
call
mov
or
hlt
adcl
sti
cmpsl
into
adc
mov
test
push
dec
in
call
sbb
pusha
sbb
inc
xchg
std
imul
dec
and
mov
lcall
test
dec
inc
outsl
cmpsl
test
mov
or
stos
inc
sbb
jno
movsb
sub
call
or
iret
iret
popf
sbb
cmp
lods
add
mov
pop
dec
dec
ja
lret
sbb
fstl
xor
jmp
push
cld
cltd
popf
fisubl
sub
xlat
xchg
xchg
sbb
xor
lret
cmp
int3
outsl
ljmp
push
pop
clc
in
sub
xchg
xor
and
loope
add
or
aaa
cmp
mov
pusha
jae
rorl
in
das
les
das
rcrl
test
mov
mov
sar
push
mov
inc
gs
ljmp
xchg
fcmovbe
adc
fcom
imul
das
sbb
fistl
xchg
jmp
enter
decb
add
mov
jmp
mov
xlat
shlb
fs
push
mov
xor
pop
cmp
dec
imul
std
call
les
mov
cmp
xchg
pop
mov
mov
lcall
stos
es
xor
jecxz
lds
adc
pop
es
sbb
push
sbb
xchg
in
jno
lcall
out
pop
lahf
ja
or
movsb
je
jl
push
cmc
xchg
push
cmp
outsb
fwait
adc
cmp
call
out
push
mov
dec
pop
addr16
or
jbe
pop
outsb
aas
inc
imul
call
insb
insb
mov
mull
cmp
xchg
add
sahf
dec
jp
inc
push
xchg
iret
push
sti
xchg
test
clc
call
je
sbb
push
movsl
sbb
pushf
cmp
lret
cmc
cmpsb
subb
clc
jmp
add
std
inc
xor
scas
mov
mov
xchg
cmp
lcall
jnp
call
cs
and
std
out
xor
and
adc
inc
pop
lock
mov
aaa
std
call
jp
xchg
add
dec
sarl
data16
pop
cmp
sbb
jmp
cs
fnstcw
mov
push
jg
jmp
inc
inc
push
pop
cmp
mov
incb
call
lahf
jb
sub
add
mov
test
call
sub
inc
frstor
imul
mov
out
rolb
ret
or
xchg
mov
adc
push
out
bound
movsl
lcall
into
push
push
jp
movsb
int
cmp
sarl
jge
and
das
movsl
js
sbb
decl
test
shll
pusha
inc
cmpsb
cld
repnz
call
fbld
shrb
ret
jbe
jmp
fcmovne
mov
and
mov
or
int
mov
dec
cmpsb
inc
nop
aad
je
xchg
jl
fimuls
pop
call
jmp
adc
inc
fsubl
pop
cs
inc
pop
jle
fisttps
faddp
aad
inc
std
pushl
aas
mov
loope
lcall
mov
pop
enter
ljmp
data16
cltd
pop
test
lods
enter
call
adc
mov
cmp
ror
mov
sub
and
pushl
ss
push
mov
push
scas
and
incl
jb
movsb
xor
xchg
dec
inc
test
mov
inc
gs
sbb
xlat
fldenv
lea
push
pop
adc
jbe
mov
mov
into
sti
addr16
enter
loop
push
int3
fsubl
into
xor
in
enter
mov
jmp
and
mov
jp
dec
push
cmpsb
inc
nop
xchg
xor
dec
dec
pop
in
lret
scas
clc
das
clc
std
add
pop
jp
mov
lods
mov
ret
sbb
decl
in
add
mov
ret
inc
mov
sbb
mov
jne
inc
jbe
test
mov
sub
dec
fsubl
imul
cmc
jp
sarl
inc
and
pushf
cld
mov
cli
loop
es
into
jbe
jmp
lcall
jno
mov
inc
lahf
cmp
adc
ljmp
mov
sub
ljmp
ds
fwait
cmp
je
sub
push
jo
lcall
mov
and
imul
mov
mov
repnz
mov
cmp
mov
adc
out
mov
sbb
ljmp
je
mulb
lea
or
daa
dec
or
xchg
xchg
push
add
mov
lret
or
test
dec
sub
lcall
imul
daa
jmp
movsl
inc
jle
aas
shlb
jg
in
jecxz
pop
xchg
int
sbb
jg
jno
jbe
int
sub
repz
push
test
loop
cmpsl
mov
cmp
and
dec
test
jecxz
cmpb
add
push
and
push
clc
jb
xchg
push
mov
ret
inc
call
cmp
out
lods
outsb
sahf
xchg
xor
add
jo
scas
js
xchg
clc
sub
movsl
leave
mov
and
insb
shll
adc
sub
dec
pop
int
jl
jge
jb
mov
dec
aaa
lods
add
arpl
mov
xchg
adc
or
or
inc
dec
mov
jmp
jle
push
insb
loop
and
rorl
loop
jno
sbb
sbb
bound
mov
mov
les
sbb
xor
not
movsb
data16
mov
test
hlt
repnz
mov
std
adc
or
mov
cmpsl
std
inc
mov
mov
and
ret
push
and
push
enter
pusha
xchg
imul
decl
push
lods
sub
sbb
adc
push
in
sub
inc
or
movsb
mov
add
dec
fistl
xor
mov
pusha
sar
jmp
scas
mov
sar
or
inc
test
push
jg
and
cmp
lcall
mov
test
mov
lods
jne
fdivl
cmpsl
cmp
pop
lock
imul
fsts
sub
xchg
adc
adc
ss
sar
fidivl
jmp
mov
jno
inc
xchg
sub
outsl
pop
icebp
ds
insl
mov
xor
imul
and
fsub
stos
jle
xor
jge
je
push
ret
in
push
pusha
push
sarl
sbb
push
xchg
adc
ss
lcall
call
gs
push
js
pop
lcall
fs
mov
mov
outsl
sar
mov
mov
jmp
pop
push
pop
add
mov
roll
jmp
std
jae
lcall
push
sar
sahf
mov
stos
icebp
lea
sar
pop
std
lcall
fstps
mov
jmp
mull
jae
xor
push
dec
decl
xor
std
mov
xchg
loopne
repnz
mov
sbb
pop
inc
xlat
jp
jae
sub
incl
cltd
or
and
out
xor
sti
pop
xchg
aam
and
adc
inc
mov
or
mov
sbb
popa
jb
xor
jae
jnp
mov
lcall
pop
or
shr
call
mov
lock
inc
mov
lcall
adc
and
mov
fsts
test
out
and
lock
in
or
call
cmpsl
aad
aaa
adc
das
ljmp
test
push
pop
cmp
and
lcall
std
mov
cs
xchg
mov
pop
cld
incl
out
pop
rcrb
aaa
fs
sahf
jno
adc
loop
es
cmp
pushl
mov
add
popa
sbb
xor
adc
mov
dec
sysenter
fmuls
mov
fdiv
xlat
mov
bound
mov
pushl
sub
xchg
xchg
mov
mov
add
and
jne
pop
jl
jae
decl
decb
stos
and
and
xor
dec
rcr
fcoml
call
ret
push
inc
push
loope
ljmp
dec
subl
cmp
insl
clc
decl
and
push
cli
int3
xchg
pcmpeqd
mov
jmp
cwtl
xchg
mov
test
lea
and
call
std
mov
mull
jnp
into
mov
cmp
insl
fs
clc
mov
clc
outsb
in
cwtl
or
adc
stc
addr16
inc
add
jns
test
adc
mov
ljmp
push
jae
xor
sti
shl
imull
jno
mov
mov
dec
out
jl
dec
sub
adcb
jmp
push
adc
mov
ret
out
ljmp
xlat
xor
jp
lret
sub
ja
enter
pop
xchg
insb
andb
jnp
jne
lret
cltd
mov
lea
adc
push
adc
inc
popa
scas
rol
and
mov
test
push
call
test
sbb
sub
mov
add
ljmp
std
jb
xor
mov
sub
pop
mov
push
adc
incl
jmp
das
in
and
adc
cmp
inc
shl
ret
mov
out
jmp
hlt
pop
push
mov
popf
ret
aam
and
jp
fiaddl
jmp
pop
sbb
stos
ljmp
mov
dec
mov
in
je
shlb
xor
ja
call
lods
cli
in
and
cwtl
mov
pop
push
push
roll
jg
ljmp
aas
push
push
popf
pop
sub
xor
lock
xor
ret
sbb
cmp
jmp
popf
or
icebp
pop
cmp
push
sarl
xchg
lods
adc
pop
xchg
inc
decl
push
inc
rcrb
and
out
inc
pop
or
lcall
lock
xchg
mov
test
sbb
mov
test
ja
mov
lcall
add
mov
push
jmp
sahf
addb
cwtl
ret
sub
and
add
aam
inc
pop
xor
add
iret
rorl
arpl
fldcw
mov
dec
cmp
sahf
pop
or
xor
add
mov
in
push
dec
mov
pop
popf
mov
in
mov
lcall
jo
lds
adc
cmp
repz
add
mov
lcall
push
and
add
adc
dec
fwait
sub
jmp
or
jmp
sbb
lcall
xchg
jg
jg
or
psrld
mov
movsb
lods
or
pop
push
call
cmp
xchg
xorb
xor
fstpt
sbb
cmp
sbb
sbb
pushl
iret
ficompl
jne
adc
ret
lods
add
clc
jl
cltd
mov
decl
orl
pop
fsubrs
and
icebp
pop
enter
in
dec
xchg
add
jg
out
call
test
sub
fnstcw
jle
xorb
jmp
shl
fsubrl
dec
mov
inc
call
add
or
add
add
incl
sub
rolb
out
imul
sti
push
scas
dec
dec
fmull
mov
mov
sarl
cld
int3
adc
mov
std
lock
orb
pushl
es
fimuls
imul
pusha
fmulp
or
incb
xchg
add
inc
push
fmull
xchg
xor
outsl
ss
mov
add
in
sub
loope
xor
cmpsb
test
fnsave
mov
mov
jecxz
fisttps
mov
mov
je
std
lds
adc
ficoms
loopne
push
insb
push
push
repnz
in
rcr
enter
das
lret
cld
std
pop
mov
call
add
stos
aad
xchg
in
cmpsl
jle
lret
add
js
cmp
cli
call
mov
faddp
xchg
mov
jmp
test
cmc
pop
mov
push
pusha
in
or
xchg
loope
lea
and
enter
rclb
mov
lret
pop
ljmp
lret
test
ja
mov
jmp
adc
pop
je
lret
jmp
mov
daa
pop
xchg
addr16
inc
push
fwait
pop
hlt
pop
js
push
enter
push
and
cmp
jmp
mov
xchg
out
cmp
test
bound
stos
fwait
sbb
mov
mov
sbb
lods
and
pop
lcall
bound
call
call
cltd
stos
xor
jb
pop
and
fisubrl
and
fnstcw
call
fstpt
mov
fisttpll
in
mov
daa
pop
nopl
loope
hlt
jmp
stos
fnstcw
adc
mov
iret
int
lret
ret
xor
cmc
lcall
lcall
icebp
or
push
stc
sbb
add
push
incl
push
insb
pusha
jl
sbb
adc
imul
xchg
mov
pusha
push
dec
test
adc
jmp
add
and
ljmp
rolb
mov
mov
sbb
add
out
jp
or
mov
mov
decl
movsl
inc
sub
shl
sbb
out
stos
leave
rorb
mov
add
cmc
pushl
lret
sahf
jl
mov
scas
jle
cmp
push
outsl
adc
fstpt
fisubrs
pop
repz
lcall
addr16
and
stos
out
subb
sub
fnstenv
jmp
imul
pop
mov
mov
ljmp
xlat
xlat
out
cmp
jp
icebp
mov
in
inc
jmp
mov
pop
push
decl
je
lcall
shl
mov
mov
inc
mov
push
dec
lcall
xchg
jne
mov
cmp
xchg
fisubrs
cld
bound
pop
pop
jp
mov
enter
jb
outsb
sahf
lea
sub
sbb
out
cmpsl
and
sub
and
outsb
and
punpcklwd
cli
lret
and
mov
pushf
jle
fisubrl
jmp
hlt
repnz
adc
pop
jb
nop
cmpsl
imul
arpl
add
mov
mov
decl
pusha
mov
add
and
xlat
sbb
lret
mov
xor
sbb
out
test
inc
mov
cmpsb
inc
insb
push
jg
call
jecxz
lock
adcl
gs
mulb
pushl
pop
sub
jmp
sub
mov
enter
xchg
std
inc
mov
push
movsb
ljmp
in
inc
sbb
jno
mov
test
test
adc
leave
rcll
fldcw
aaa
mov
ljmp
sub
gs
leave
fisttps
aam
adc
std
adc
out
mov
data16
sbb
pop
outsl
mov
mov
jbe
cltd
shlb
ljmp
dec
or
sub
or
inc
sarb
mov
xor
incb
loopne
jno
sbbb
pop
cmp
lods
cmpsl
sbb
movsl
lock
neg
outsb
shll
mov
in
into
mov
push
xor
out
jecxz
sarl
jbe
pop
pop
inc
mov
out
dec
sub
fs
daa
movsl
movsb
push
fdiv
call
nop
hlt
or
cs
ss
inc
jl
inc
and
push
jns
jl
dec
outsw
fmull
int3
add
pop
sub
adc
dec
jae
pop
cmc
jmp
sbb
push
out
jo
dec
sub
mov
pop
inc
cmpsb
gs
cwtl
fadds
push
lcall
pop
push
lahf
std
push
mov
push
out
jge
pop
mov
loope
xor
leave
je
clc
ljmp
sbb
outsb
sarb
scas
outsb
xchg
shrl
jmp
push
sahf
dec
inc
mov
lret
cmpl
imul
call
mov
mov
in
jne
and
clc
das
decl
pop
mov
ss
incl
leave
in
or
inc
jbe
xor
pop
iret
cmp
jbe
das
jg
test
jno
mov
pushl
test
xor
and
out
cwtl
xchg
es
jp
mov
shlb
decl
ficompl
push
cli
pusha
in
jmp
ljmp
fisubrl
cmc
pushl
stc
push
imulb
cmc
mov
cmp
fimuls
lea
stos
jle
mov
jecxz
mov
enter
hlt
in
movsb
jo
xchg
and
out
mov
mov
pop
arpl
xlat
jg
mov
daa
jecxz
mov
mov
push
mov
cmp
sub
jmp
sub
or
jg
in
incl
sub
je
pop
in
fcomps
push
add
push
sahf
sahf
std
adc
ljmp
hlt
fildl
jmp
daa
pshufw
and
adcl
sar
mov
les
pushf
xlat
mov
popa
sub
mull
out
mov
mov
xchg
gs
inc
jmp
ljmp
mov
hlt
and
in
out
jb
aas
test
cmp
fidivs
and
mov
fs
mov
in
fildll
fcomp
mov
sub
mov
incl
dec
xor
add
iret
push
lret
push
mov
lret
decl
dec
or
add
test
insl
ret
es
cld
ljmp
stos
fisttpl
cli
pop
fstpl
mov
cmpsb
ljmp
repnz
loopne
dec
outsb
cmp
pslld
call
aad
mov
add
sub
inc
fidivl
mulb
push
mov
mov
leave
ds
adc
nop
sub
std
ja
sbb
or
sbb
scas
xor
mov
and
call
scas
inc
lcall
lahf
lods
xchg
shl
mov
in
in
pushl
sub
mov
stos
jo
js
mov
mov
dec
adc
repz
notb
call
call
mov
pop
cmc
fwait
into
cli
imul
imul
test
fildll
push
push
jno
push
mov
xlat
lret
xor
outsl
cli
push
sarb
mov
xchg
data16
pop
aad
xor
hlt
rol
incl
lea
mov
add
adc
mov
lcall
pusha
lret
cmpsb
int3
clc
in
jg
scas
sbb
jg
and
scas
add
pop
out
decl
or
jns
in
mov
popf
lock
or
lcall
mov
jo
mov
xor
lcall
mov
test
push
inc
lods
addr16
add
sbb
enter
lcall
add
or
test
jg
jmp
sub
mov
dec
les
xor
stc
inc
cmp
dec
int
popf
xchg
lods
xor
call
mov
jg
jns
mov
mov
clc
addl
bound
or
or
fiadds
gs
or
iret
push
pushl
or
cmp
sbb
pop
push
call
mov
mov
adc
repz
lcall
jne
lods
push
scas
jg
adc
dec
mov
inc
mov
push
push
push
add
shrl
pop
mov
call
dec
ljmp
and
imul
xchg
lret
ja
pushl
adc
mov
cmp
mov
xor
lock
add
fdivp
xchg
or
and
lcall
xchg
lods
cmp
imul
pushl
pop
add
clc
pop
mov
add
adc
dec
je
cltd
pop
pop
pop
xchg
inc
or
mov
xchg
xor
popf
fistpll
and
or
mov
shl
int3
addr16
pushl
sub
ja
pop
loop
mov
push
aad
nop
frstor
push
dec
and
out
aam
sbb
clc
ja
cld
push
cld
iret
and
push
loop
lock
movsl
and
mov
and
push
insl
shl
xchg
fwait
movsl
pop
inc
loop
jmp
je
sti
das
mov
popa
ret
ljmp
jg
sbbl
mov
mov
decl
int
sbb
scas
sbb
out
leave
jns
bound
pop
ror
cld
in
arpl
int3
cmpsb
cmpl
pusha
jp
xchg
scas
pop
out
pop
enter
mov
sub
adc
stos
call
mov
roll
inc
xor
scas
stos
adc
shr
hlt
or
test
add
mov
mov
xor
pop
icebp
add
add
pushf
or
dec
mulps
jb
add
pop
sbb
ljmp
movsb
adc
test
cmp
sbb
adc
fiadds
sbb
pop
ljmp
add
xchg
sub
scas
loop
sbb
mov
sbb
and
aaa
sbb
clc
cmp
dec
sub
jo
pop
dec
std
ljmp
dec
mov
and
xchg
dec
adc
lcall
mov
push
call
hlt
sbb
das
sub
cmpsb
arpl
adc
fsubl
clc
decl
pusha
insl
jo
out
inc
aam
dec
out
stos
filds
adc
stos
ljmp
test
orb
mov
stc
arpl
fwait
ret
dec
es
incl
jmp
push
mov
xorl
pop
jae
inc
outsb
scas
mov
ljmp
cli
adc
xchg
inc
scas
cmp
xchg
mov
negl
lcall
out
daa
ficoms
cmp
adc
and
lcall
or
lcall
repz
xorb
xor
les
out
loop
out
aaa
mov
adc
pop
ret
inc
xorb
lds
loopne
ss
cmpsb
push
inc
dec
mov
sahf
and
loope,pn
or
incl
and
gs
dec
pop
mov
or
jo
push
pop
adc
sar
std
shrl
cli
add
cli
dec
xor
xor
mov
adc
xchg
or
and
jo
pushl
xchg
iret
mov
cltd
outsl
adc
pop
and
mov
cmp
jle
sahf
push
dec
cwtl
dec
pop
pop
cmp
pushl
stos
flds
test
loopne
push
mov
mov
test
sbb
test
lcall
out
fsubr
lods
bound
in
iret
push
std
pcmpeqd
incl
add
dec
mov
lock
fidivl
clc
lock
mov
mov
lcall
mov
sarb
jecxz
mov
cmp
stc
adc
pop
in
jo
pop
les
cmpb
mov
sar
decl
roll
push
pop
out
ret
mov
jnp
pop
aas
xchg
out
pop
cltd
mov
xor
sbb
mov
push
ss
divl
mov
lcall
int
and
imul
pushl
xchg
ss
push
imul
mov
je
aam
in
aad
jmp
pop
adc
pop
push
add
popa
mov
mov
push
xorb
test
aad
push
jb
jbe
mov
and
and
scas
mov
lcall
shlb
pushf
movsl
jae
mov
mov
in
in
ja
inc
dec
xlat
cli
lods
lock
pushl
cmp
leave
xchg
adc
xchg
sub
xchg
in
inc
pop
mov
adc
call
jnp
leave
scas
outsb
sub
dec
inc
dec
push
cmp
ljmp
mov
jnp
pop
test
dec
insb
jbe
aad
mov
push
lock
push
dec
sbb
clc
lods
jnp
mov
xor
les
sub
and
into
and
out
jns
call
fsubr
gs
mov
insb
in
or
out
dec
add
mov
lcall
gs
inc
test
cmp
dec
mov
leave
and
push
in
nop
dec
pop
xchg
push
cld
pushl
fcomi
les
add
aaa
xor
push
jne
incl
cmp
loop
mov
push
or
lcall
xchg
cmp
fdiv
pop
sbbl
xchg
xchg
fimull
xor
pop
mov
shr
dec
push
mov
xchg
lcall
adc
pop
sbb
inc
mov
or
lds
hlt
cwtl
mov
jg
call
sub
or
adc
push
inc
dec
fistl
xchg
adc
incl
xor
adc
ljmp
jg
pop
jbe
push
cmp
cli
mov
add
jge
mov
out
adc
mov
aam
push
dec
xchg
sahf
pop
jge
stc
add
loop
imul
les
push
sti
sbb
jmp
das
fisubrs
push
inc
rep
and
pop
push
adc
and
cmp
sub
pop
rcr
inc
ret
add
addb
add
incl
or
add
bound
mov
add
mov
scas
insl
add
jg
add
pop
xchg
andl
jg
scas
mov
fwait
inc
add
add
dec
addb
in
or
adc
pop
mov
mov
dec
adc
scas
mov
psllw
jg
add
setl
scas
repnz
inc
xor
cld
inc
in
or
jnp
xchg
movsl
push
daa
add
repz
xchg
dec
and
cmpsl
push
and
cs
lcall
push
push
movsb
push
movsb
inc
scas
push
and
stos
push
mov
jae
jo
test
and
imul
mov
sbb
pop
add
mov
stc
sbb
mov
sbb
add
mov
pusha
sbb
cmpsb
flds
mov
adc
fs
call
mov
insb
or
lret
imul
imul
addr16
negb
add
mov
mov
jbe
mov
xor
push
mov
adcb
stos
pop
stos
mov
enter
ss
add
jo
mov
push
shll
add
outsl
push
jo
ss
shll
fidivrl
iret
outsb
or
push
fcmovnbe
ja
ret
je
fidivrs
out
jge
aam
mov
push
xorb
ljmp
movsb
push
add
movzbl
stc
mov
shlb
mov
dec
sub
add
jne
imul
push
ret
add
mov
lods
pop
add
push
pop
dec
add
fsubrl
jo
push
data16
inc
lahf
ja
sbb
cs
push
shlb
pop
rep
push
lret
stos
aas
add
ja
outsb
lods
sti
out
push
push
xlat
jne
add
ja
fsub
mov
push
aad
push
xlat
ja
js
push
ds
jns
push
jp
jp
inc
push
fidivrl
sub
or
sarl
ja
fldl
lds
inc
jmp
ljmp
insl
xchg
sub
xchg
in
xchg
sub
xor
ja
xchg
xor
xchg
push
setbe
xor
dec
fisttpl
push
lcall
testl
push
pushf
cmp
popf
inc
mov
pop
xchg
popf
aas
push
sahf
inc
push
lahf
inc
lahf
mov
out
mov
push
jecxz
push
imulb
movl
fdivr
out
out
push
hlt
clc
iret
repz
stc
cli
sti
cld
std
insb
lock
inc
jo
add
mov
jae
add
es
add
popa
push
add
pop
int3
data16
add
pop
add
pop
fadds
add
inc
mov
stos
mov
mov
add
mov
push
mov
add
add
cwtl
outsl
or
or
imul
test
test
or
push
mov
mov
pop
adc
fwait
imul
pop
lods
pop
stos
femms
lods
lods
pop
mov
jne
mov
add
scas
jo
jnp
insl
lods
pop
pop
adc
add
push
inc
and
adc
fstpl
sbb
scas
scas
scas
jae
repnz
sbb
mov
mov
cmpsb
jns
jb
mov
mov
push
add
mov
ret
or
lock
and
mov
mov
lods
xchg
mov
mov
cmp
push
and
mov
insb
repz
sub
mov
lods
xchg
mov
mov
xor
pop
daa
mov
mov
es
int
pop
aas
cmp
shll
dec
pop
cmp
sti
decl
mov
aaa
cmpsb
add
mov
pop
xor
in
int3
insb
pop
pop
or
or
add
pop
insl
pop
pop
xor
mov
pop
das
push
cs
xor
add
cmpsb
mov
xor
pop
push
push
xor
adc
pop
push
cs
dec
inc
das
inc
loop
incl
sub
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
lahf
mov
sub
xor
pushw
dec
dec
cmpb
decl
mov
inc
xorl
mov
xchg
xchg
xchg
popf
pushf
fwait
lcall
xchg
mov
test
xchg
xchg
sub
dec
ja
test
je
push
bound
js
adc
push
xor
jne
je
add
adc
rorl
addb
cwtl
stc
dec
add
add
xor
scas
aas
adc
or
out
jg
jle
xchg
pop
push
dec
add
push
mov
movsb
dec
and
cmpsb
push
mov
xor
xor
ja
push
ja
inc
mov
cs
xor
mov
adc
pop
jbe
dec
sbb
outsl
dec
and
push
mov
xchg
es
jo
push
inc
mov
cmp
mov
inc
stos
inc
ljmp
jp
mov
push
popf
inc
mov
aaa
add
xchg
jno
lret
iret
mov
lahf
push
bound
mov
mov
inc
dec
cmp
sahf
mov
insb
add
outsb
add
imul
push
test
cmpsb
dec
push
dec
push
movsb
or
insb
inc
jae
add
jb
shll
outsl
pop
xlat
pushf
jge
ljmp
rorb
add
lcall
outsb
mov
out
dec
mov
add
ja
sahf
jbe
fistpl
std
add
popf
imul
stos
push
add
and
std
and
es
js
mov
data16
rcl
mov
insb
pop
outsb
push
outsl
rolb
push
ds
jno
add
jge
push
jg
shll
fisttpll
lock
mulb
loopne
dec
and
mov
add
test
and
iret
sahf
mov
daa
add
jb
out
in
push
rclb
jecxz
or
fiadds
fnstcw
aad
push
divb
add
adcb
adcl
sti
sbbl
sbb
sbbl
test
test
insb
mov
pop
sbb
test
in
mov
push
xchg
nop
and
int
in
push
out
xchg
in
xchg
lock
sub
sub
add
rcrb
scas
outsb
out
xchg
das
push
xchg
fidivl
aaa
repnz
xor
cwtl
push
cmc
sahf
xor
lcall
fwait
cmpsb
pop
cmp
mov
es
aam
jle
push
push
dec
or
test
sahf
sbbb
jle
jbe
stos
into
shll
lgs
int
rcll
shll
rcr
rolb
mov
ret
data16
adc
into
add
addr16
dec
sbb
cmp
out
je
dec
rolb
inc
daa
add
mov
inc
fisubrs
add
or
pop
nop
mov
pop
push
adc
push
add
add
in
or
ds
add
mov
mov
ret
ds
mov
mov
mov
mov
fsubrs
mov
add
and
push
imul
scas
mov
rcrb
aas
and
aas
insb
xor
or
aas
repnz
and
aas
cmp
cmp
sub
adc
js
pop
mov
sbb
inc
jbe
sbb
mov
incl
jle
cmp
scas
xor
dec
mov
idivl
dec
jle
aas
adc
cmp
jge
dec
xor
dec
inc
test
fidivs
scas
add
mov
xor
pop
mov
ds
lods
stos
inc
clc
std
test
cmpsl
cmpsl
cmpsb
cmpsl
add
test
mov
in
lods
lcall
sub
sub
add
add
mov
sub
dec
and
inc
mov
jg
pop
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
jmp
nop
cltd
mov
mov
nop
test
insl
popf
mov
je
xchg
jns
jle
addl
jo
outsb
pushf
pop
mov
xor
scas
adc
push
rolb
sub
dec
adc
mov
incl
movsb
test
add
sub
jl
push
call
loopne
div
add
dec
xor
bound
jae
aas
add
mov
cmp
test
add
mov
add
mov
push
mov
pushl
lahf
add
cmc
repnz
inc
add
gs
sti
jecxz
pushf
add
mov
push
in
lcall
pop
jo
sti
or
mov
push
push
dec
lret
lcall
enter
xchg
add
mov
mov
mov
add
mov
out
mov
insl
pop
loopne
sub
sub
xchg
push
sub
nop
sub
pop
xchg
das
push
xchg
xor
xchg
xor
xchg
outsb
lcall
es
jbe
negl
int3
out
int
int3
fst
es
push
lret
loopne
push
test
cld
push
std
into
fdivrp
insb
lea
add
test
data16
add
jle
jge
pop
mov
dec
xchg
dec
dec
dec
dec
and
inc
decb
or
pop
or
add
push
dec
or
adc
cmp
mov
fcmovnu
adc
dec
or
add
push
adc
add
in
std
inc
inc
or
pop
pop
cmovg
inc
push
lahf
mulb
dec
sbb
inc
adc
inc
inc
adc
pushl
dec
dec
add
dec
adc
inc
ds
cmp
cmp
cmp
and
daa
and
sbb
sbb
and
add
dec
ss
xor
sub
sub
adc
std
push
lods
mov
addb
mov
pop
mov
mov
add
ss
ss
add
outsb
add
shrl
outsl
add
test
jg
andl
pop
sbb
add
and
jbe
sarl
orb
jmp
lock
xlat
sbb
incl
pusha
mov
adc
sysret
or
cmpb
pusha
movsl
ds
xor
in
pop
inc
jb
lock
hlt
and
or
xorps
push
and
inc
jg
ja
add
outsl
int3
inc
andb
sbb
ret
pop
lahf
and
addb
jg
xor
sar
mov
cli
fists
mov
adc
adc
jle
adc
push
mov
inc
test
inc
mov
jo
adc
mov
addl
push
sbb
jg
xchg
or
add
and
mov
xchg
mov
inc
cmp
pop
inc
push
cld
jg
and
enter
inc
loopne
jg
std
pop
inc
add
ja
jg
sbb
and
sub
dec
sbb
jg
enter
jle
roll
data16
sbb
add
subb
pushl
incl
push
add
add
data16
arpl
fisubs
push
test
jg
xor
sub
push
pusha
jg,pt
add
jbe
xchg
fsubs
add
inc
mov
jmp
sbb
scas
incl
add
inc
mov
lods
jle
lret
imul
mov
addl
jle
adc
inc
add
push
add
addr16
add
add
jbe
rorb
push
subl
add
inc
shlb
inc
shlb
mov
inc
push
shlb
ss
pop
in
push
adc
orb
jg
jle
in
sub
ljmp
ficompl
pop
stos
pop
pop
pop
add
pop
pop
pop
pop
insl
leave
inc
add
jle
push
enter
stos
pop
inc
test
inc
enter
mov
jle
sbb
jle
push
dec
xchg
out
sarl
push
mov
mov
push
comiss
daa
push
mov
addr16
pop
push
and
out
push
inc
lea
mov
xor
or
notrack
dec
dec
mov
adc
lea
mov
push
push
pop
or
fnstenv
add
xor
ja
push
jbe
adc
fwait
adc
push
jnp
push
jp
fnstenv
and
push
js
dec
jbe
pop
xlat
jne
mulb
pop
mov
mov
mov
push
outsb
push
daa
aam
ljmp
call
hlt
mov
dec
ljmp
in
pushf
inc
outsb
ss
cmp
call
jmp
mov
or
xchg
pop
outsb
lahf
mov
push
mov
mov
dec
pop
jbe
sahf
inc
out
inc
jbe
call
scas
cs
aas
popf
inc
push
pushf
cmp
test
pop
cmp
fwait
adc
xchg
xor
sub
mov
out
nop
sub
nop
daa
ss
cs
mov
dec
xor
xchg
incl
bound
jg
xor
fnsave
jno
je
cmp
sahf
sbb
xor
movb
es
pop
and
ss
cs
add
pop
ja
cmp
push
xchg
sub
fcmovb
pop
pop
ja
or
aaa
mov
add
add
sub
out
mov
mov
sub
adc
jno
add
outsl
add
inc
sub
cltd
and
add
mov
negl
orl
lea
lahf
aaa
adc
popf
push
imul
incl
xchg
mov
sbb
test
push
lock
cmp
or
inc
lods
cmp
icebp
sub
push
in
add
mov
test
ljmp
shlb
out
pop
idiv
push
and
mov
xchg
call
push
or
mov
mov
xor
and
xor
push
sub
add
into
movl
mov
sub
sbb
bound
add
pop
sti
sub
lcall
or
mov
popa
sti
dec
shrb
xchg
daa
cld
pop
fildl
cld
call
lcall
lcall
std
out
and
adc
adc
lcall
or
ret
xor
movups
pop
adc
test
push
call
inc
mov
adc
pop
call
call
lret
test
sahf
sub
or
test
int
decb
cmpsb
ljmp
mov
sbb
inc
rcll
out
test
or
mov
inc
jp
clts
add
push
sub
mov
movzbl
nop
pop
iret
jle
adc
push
inc
sti
out
prefetch
xchg
dec
push
incb
dec
adc
add
sysret
rorb
adcb
xchg
fsubl
incl
and
inc
inc
call
nop
fdivrp
pusha
inc
push
es
sub
in
in
adc
push
std
call
mov
pop
out
adc
inc
adc
pop
mov
sbb
pop
in
stc
lgdtl
mov
xchg
call
jg
je
adc
loop
mov
cwtl
inc
or
pushl
decl
aas
adc
incl
fcmovbe
sub
pop
inc
mov
lods
mov
jnp
adcl
push
shll
pop
mov
roll
dec
out
adc
incl
fldcw
ljmp
lahf
inc
mov
daa
out
inc
push
inc
inc
pop
inc
pop
mov
aaa
push
pop
sahf
movsb
dec
mov
stos
push
popf
inc
cmpsb
dec
dec
inc
scas
imul
mov
push
addr16
and
fnstcw
out
push
shrb
rcl
outsb
shrb
cltd
movsb
sbb
es
push
jb
in
dec
shl
das
push
iret
insl
out
int3
push
push
pop
daa
outsl
pop
xchg
aam
cltd
imul
leave
xor
push
incl
xchg
stos
cs
ljmp
decl
pop
add
and
int
repnz
jmp
popfw
cmp
aas
xor
insb
push
cwtl
xor
addr16
dec
xchg
push
push
aaa
push
lcall
ss
xchg
push
xchg
es
pop
scas
push
xchg
xchg
aam
mov
mov
dec
dec
push
ljmp
xchg
push
sub
xor
rcr
sbb
add
push
dec
jmp
fcmovbe
js
std
faddl
jge
imulb
push
jnp
jp
or
jl
or
fnsave
fdivrl
jge
jg
std
add
jle
repnz
push
dec
fwait
std
std
fwait
push
dec
repnz
repnz
jae
pop
fidivrl
push
mov
fistpll
jnp
jge
hlt
in
add
int3
outsb
nop
testl
and
sbbb
dec
inc
add
jne
dec
lahf
push
jmp
and
or
cs
sahf
ja
push
addb
jnp
lahf
dec
es
pop
testl
inc
and
xchg
and
push
sub
iret
out
mov
cli
call
clc
push
idiv
call
jb
sub
jg
mov
icebp
ret
ss
pop
cld
and
sub
jg
mov
icebp
ja
ret
xorb
push
jns
repnz
mov
inc
cld
jp
es
xchg
xor
sbb
dec
and
andb
sbb
in
sarb
stos
push
pop
ja
jmp
and
jge
mulb
push
lcall
push
nop
cs
fsub
pop
push
dec
adc
int3
decl
push
jle
mov
fidivrl
arpl
clc
jbe
int3
cmp
push
pop
movsb
fnstsw
movsb
push
pop
or
dec
ljmp
hlt
sti
and
lcall
jns
adc
addr16
mov
jmp
xchg
jmp
mov
push
xchg
mov
jle
adc
loop
adc
xchg
out
sbb
loope
and
lret
jg
out
mov
stos
in
xchg
or
pop
push
push
test
ja
inc
or
daa
xlat
push
cmovno
add
cmc
push
imul
and
push
dec
fsubrl
movb
pushf
adc
negl
add
push
push
popa
add
shld
pop
lret
sub
call
jmp
adc
sub
dec
add
into
pop
sti
fstp
jbe
sbb
push
sbb
push
fwait
xor
dec
or
and
mov
inc
or
push
stos
arpl
xchg
add
add
dec
sub
mov
lods
mov
ret
sbb
mov
push
stos
and
inc
add
ja
xchg
lea
icebp
inc
push
gs
mov
xor
jo
add
mov
dec
push
sbb
and
add
sub
jae
xchg
inc
mov
pop
add
fiadds
mov
push
sbb
xchg
or
xchg
inc
mov
insl
lods
jmp
jno
adc
popf
sbb
add
imul
jecxz
std
pusha
insl
jno
dec
inc
aas
add
pop
pushf
adc
add
jno
inc
dec
les
jns
inc
sbb
aad
mov
sbb
mov
adc
xchg
xchg
mov
sbbl
push
adc
mov
dec
les
test
mov
jo
les
push
pop
popf
in
in
xor
shlb
xor
cmp
xchg
jb
insb
lods
xchg
xlat
jae
inc
sbb
or
bound
xor
xchg
mov
add
adc
pop
pop
sub
xlat
sub
add
jno
icebp
add
adcl
xchg
mov
aas
mov
dec
xchg
fdivrl
dec
idiv
sbb
push
cmc
add
sub
jno
outsl
xor
push
push
outsb
dec
push
outsl
fwait
ss
ret
loop
and
out
imul
and
fwait
subl
ljmp
fistl
dec
insb
out
inc
dec
pusha
sbb
imul
mov
inc
adc
mov
shl
mov
jne
rolb
in
push
inc
loop
mov
or
adc
inc
cs
ficompl
add
insl
test
bound
arpl
scas
jne
inc
pop
arpl
push
lds
inc
add
add
fiaddl
ss
pop
popf
xchg
push
icebp
icebp
dec
or
sbb
aas
cmp
add
add
push
inc
adc
add
popa
push
push
jnp
sbb
cmp
jo
xor
cmp
dec
in
mov
insl
xchg
sbb
aad
and
lahf
cs
sub
push
test
loope
dec
sub
xchg
add
jp
push
xorl
outsl
sub
nop
iret
jecxz
loopne
addl
push
xor
dec
addb
sub
xchg
dec
push
push
jb
dec
sub
add
shlb
imul
jne
shl
inc
je
jne
pop
add
inc
iret
inc
test
lea
cmp
cltd
inc
fistpl
xchg
xchg
mov
icebp
popa
and
pop
test
jbe
lds
add
lock
and
xor
or
rol
add
inc
sbb
push
sub
popa
ret
push
dec
sbbb
pop
xor
lret
push
jns
mov
and
nopl
das
mov
int
xchg
inc
imul
mov
jecxz
add
pop
test
lds
inc
jg
mov
and
clc
ret
lahf
mov
lock
ja
push
jne
inc
jge
mov
mov
outsl
jae
enter
loop
outsl
sbb
mov
test
sub
cmp
xchg
cwtl
mov
and
iret
xchg
mov
inc
arpl
mov
and
sub
and
popf
aas
sub
xchg
pop
sub
mov
mov
cmp
push
push
xchg
lret
xorl
insl
arpl
mov
dec
ljmp
mov
lret
imul
lds
insb
jne
arpl
push
fcmovb
xchg
and
pop
and
mov
mov
lds
sbb
lds
mov
imul
mov
fcmovnb
sbb
cmp
jne
push
in
ds
or
sbb
cwtl
pop
push
popa
rcpps
js
xor
lea
push
jb
inc
inc
xchg
push
inc
add
sub
ljmp
insb
shlb
in
push
sbb
and
daa
push
and
insb
pop
jo
push
cld
sub
fs
push
neg
fwait
push
mov
pop
and
lea
loop
cmp
add
xchg
add
jae
out
push
jg
jns
rcrl
hlt
lock
push
jo
fldcw
xchg
movsb
and
push
les
pop
mov
add
mov
inc
jae
or
xor
popa
outsl
sub
xchg
and
xor
inc
lcall
popa
mov
ficomps
pop
jb
clc
fwait
inc
je
insl
dec
outsb
dec
std
roll
add
rcrl
xor
sub
push
push
imul
repz
add
pop
add
add
sbb
mov
xor
xchg
movsb
dec
adc
lcall
adc
or
mov
xchg
pop
add
es
in
ret
add
sub
or
inc
fcmovnb
add
and
cltd
push
sbb
mov
mov
push
and
shlb
cmpsb
ret
out
test
and
mov
adc
daa
es
andb
imul
mov
mov
sub
imul
pop
inc
scas
cli
test
inc
int
push
mov
fldcw
jno
roll
shll
out
mov
les
inc
sbb
aad
in
add
shlb
mov
dec
mov
pop
bound
jne
rolb
sbb
arpl
sub
nop
push
jge
push
xor
mov
ret
xor
xor
and
es
add
ret
push
dec
cs
insb
sub
lods
push
mov
xchg
dec
pop
lret
inc
pop
pop
sbb
outsb
sub
mov
xchg
mov
jge
ss
xlat
adc
subb
xor
pop
and
sbb
dec
add
mov
imul
inc
xor
mov
or
adc
fucomi
inc
aaa
outsl
cmp
cmp
and
mov
sbb
inc
ret
lods
outsb
jbe
sub
test
nop
pop
adc
fsts
xor
mov
pcmpeqd
scas
push
mov
ret
and
xchg
dec
insl
dec
inc
push
push
and
adc
fs
shrl
cld
addr16
ret
xchg
loope
adc
xchg
pop
imul
push
pop
push
mov
out
pop
jmp
arpl
mov
inc
cmc
inc
sbb
sub
push
mov
mov
xchg
mov
push
mov
push
jae
push
and
inc
cmp
push
test
push
out
test
in
push
xchg
cmp
daa
outsb
pop
or
roll
aas
scas
inc
sub
push
jne
xor
pop
or
fldcw
add
dec
adc
lahf
add
mov
fdivr
push
inc
inc
xor
jnp
cmp
xor
xchg
pop
sub
andl
or
cmp
jo
pop
dec
mov
cmp
and
outsb
inc
test
rorb
xchg
imul
mov
add
jo
aaa
sub
push
adc
sub
inc
test
jp
and
sbb
dec
sub
jl
fisubl
xchg
dec
add
mov
cwtl
and
addr16
insl
add
add
inc
sbb
stos
or
jge
push
sbb
pop
add
add
mov
xchg
mov
pop
rcll
mov
addr16
notl
imul
dec
lock
sahf
push
cld
push
mov
enter
jecxz
mov
cmp
push
and
fs
movsb
xor
repz
int3
aam
push
cmp
jp
inc
push
insl
adc
inc
fisubrs
adc
sarl
lods
push
xchg
and
jmp
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
