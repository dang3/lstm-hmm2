fcomp
decl
loopne
inc
add
mov
or
push
add
jge
add
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
std
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
mov
mov
add
or
dec
and
sti
enter
push
hlt
test
pop
push
dec
lahf
xorb
sbb
les
insl
pop
push
push
push
xor
pop
fdivr
call
and
inc
add
aam
lea
inc
dec
sti
pop
cld
pop
nop
adc
incl
sbb
inc
push
mov
rcll
push
mov
je
push
push
push
mov
push
neg
mov
mov
inc
nop
jne
out
push
mov
pop
jg
mov
add
mov
inc
or
sti
jg
dec
push
xadd
dec
test
jg
add
mov
call
ret
pop
ret
testb
add
ljmp
jne
mov
mov
sahf
mov
les
fidivl
mov
xor
in
push
push
mov
add
xor
das
dec
xor
jle
or
sbb
mov
aaa
xor
mov
adc
push
lea
push
ficoms
push
add
clc
sbb
add
or
sub
adc
cmp
roll
dec
add
jg
and
add
push
pop
sub
add
pop
push
cmpb
ds
icebp
out
xor
xor
inc
hlt
push
and
sbb
orl
loopne
shll
cmpb
fstl
add
mov
lea
xor
push
or
mov
sub
lds
fcomps
add
loopne
ret
add
mov
push
insl
jmp
xchg
sub
out
or
fldt
sbb
mov
add
mov
insl
cs
cmp
adc
adc
push
test
outsl
mov
enter
mov
adc
or
mov
mov
into
sbb
or
leave
mov
xor
sarl
lcall
fdivrs
push
les
add
push
nop
pop
punpckhbw
and
jge
mov
mov
dec
js
adcl
dec
add
jo
shll
data16
mov
xor
and
and
mov
inc
aam
xor
xchg
jg
push
push
inc
push
mov
lea
jecxz
mov
adc
sub
jecxz
xchg
repz
add
sbb
lods
nop
xchg
add
inc
and
cmpsl
and
dec
test
push
jae
inc
jo
pop
sub
xchg
cld
clc
pop
push
mov
and
mov
dec
or
xor
lea
filds
jns
cmp
jge
mov
stos
pop
pop
lods
mov
pop
ret
xor
repz
push
dec
dec
push
sub
push
insb
loope
lret
mov
cmp
jl
je
fcompl
add
les
ja
cld
or
movsl
cmp
ljmp
test
clc
mov
sub
mov
in
lds
sub
jl
or
scas
insb
add
inc
jb
enter
add
and
inc
xor
push
popf
push
je
xor
pusha
push
cld
cmp
push
push
fstpl
aad
mov
ficomps
mul
inc
dec
jne
pusha
bound
dec
in
dec
inc
loope
int3
push
add
call
inc
mov
inc
test
in
xor
mov
or
xacquire
cmp
sub
out
and
pop
je
sarb
pop
push
movsb
sbb
inc
hlt
adc
hlt
nop
test
cmp
mov
aad
push
sarb
mov
int3
xor
adc
jl
add
mov
addb
xor
sub
cmovo
or
dec
sbb
and
pop
dec
or
test
sub
push
push
nop
aas
jl
stos
add
push
lea
or
or
fbld
add
cltd
mov
inc
xor
jge
cmp
imul
scas
shl
faddl
or
lea
pusha
push
jo
and
andb
push
jbe
sub
mov
pop
mov
sbb
and
rcll
pop
and
les
adc
test
inc
mov
cmp
dec
mov
pusha
push
push
es
or
push
add
mov
push
push
sub
scas
mov
jbe
pop
push
pusha
sub
sete
test
inc
leave
ret
leave
test
orb
and
sbb
test
iret
or
fs
adc
cmpsl
add
int3
xor
in
mov
cmp
inc
dec
movsl
add
or
sub
pusha
lds
pop
nop
jecxz
push
lock
mov
inc
jne
cmp
das
pop
push
jle
je
test
push
adc
mov
mov
xor
jb
loopne
mov
push
adc
invd
les
push
out
pusha
notl
js
push
inc
lea
mov
pop
movsb
out
push
xorb
sub
cli
push
or
sub
testb
mov
add
ds
scas
dec
push
cmp
or
jno
mulb
xchg
stos
xor
or
sbb
std
adc
inc
cmp
add
push
mov
jle
push
push
rolb
movsl
in
ret
jle
or
xchg
sbb
mov
sti
mov
mov
pushf
jbe
xchg
icebp
sbb
cmp
int
inc
jle
loope
push
jo
push
push
es
push
push
and
adc
adc
leave
mov
mov
add
sti
add
aas
js
ficoml
sbb
push
sbb
jl
mov
rolb
cli
mov
xchg
sub
push
sub
mov
into
xchg
adc
mov
sbb
inc
jg
push
mov
frstor
jno
xor
jl
add
cmc
bound
adc
push
jp
or
movlhps
or
cs
push
data16
ret
inc
decb
lock
mov
js
int3
fsubrs
aas
mov
hlt
add
test
xchg
or
out
adc
adc
push
mov
adc
push
adc
lcall
mov
mov
dec
xchg
push
sub
add
sbb
push
inc
mov
mov
jge
jecxz
fmull
adc
adc
pop
daa
cmpsl
lret
push
loope
notb
jle
xorl
or
cltd
das
insb
icebp
out
orl
and
ret
xchg
notb
push
cmp
and
dec
mov
inc
mov
add
dec
aam
xchg
xor
adc
sub
popa
aaa
push
adcl
lret
subl
mov
pop
mov
icebp
jns
inc
dec
sahf
je
adc
push
xor
mov
dec
mov
lcall
mov
add
jo
popa
push
mov
lods
mov
adc
sub
in
jg
fmuls
cmc
lea
scas
sbb
insb
mov
pop
out
outsl
pop
and
add
jecxz
nop
mov
or
jb
mov
and
mov
sub
test
stos
outsb
in
test
xchg
dec
gs
call
sbbb
push
cmp
out
sbb
sub
or
add
or
loopne
inc
adc
jle
jne
mov
dec
loope
adc
xor
and
hlt
inc
lods
popa
rcrb
push
fxch
fldt
sub
cmp
je
or
push
sti
test
pop
or
sbb
add
and
inc
pop
mov
jp
test
add
inc
mov
mov
shl
adc
mov
jg
add
into
add
lds
loopne
mov
mov
dec
push
push
pop
aad
mov
push
aas
rcr
call
xor
adc
call
inc
cmp
jl
xor
jle
test
sti
or
push
jae
push
js
jne
ss
in
cmp
jbe
pushf
push
xor
pop
pusha
xor
push
mov
mov
dec
or
inc
daa
add
dec
faddl
test
sub
push
push
aaa
adc
popf
pop
test
push
loopne
ret
sbb
mov
and
out
shrb
fbld
and
jne
xorps
and
int3
xchg
std
cmpb
je
push
cli
into
sbb
jmp
ss
mov
lea
idiv
push
add
inc
test
jne
sub
push
push
inc
sbb
leave
test
adc
adcb
cs
cmpb
and
fists
js
push
inc
add
add
and
fs
insb
jne
adc
or
int3
out
pop
dec
es
lea
pop
mov
add
jb
iret
cmp
sbb
in
idivb
xor
xchg
decb
jl
xor
push
cmp
insb
pop
pop
ret
mov
jbe
pop
xchg
adc
jg
adc
pop
rcrl
int3
arpl
cwtl
mov
ret
rol
lcall
mov
sbb
pop
fisttps
or
or
push
loopne
fs
xlat
sub
rcrb
fists
test
jo
out
fisubrs
std
sbb
jge
push
call
mov
or
mov
decl
mov
cmp
pop
insb
mov
addr16
mov
mov
lea
push
or
cmp
faddl
push
movl
cmp
das
jl
cli
ja
add
jmp
insb
fcoml
add
push
hlt
clc
fildl
cwtl
jl
inc
jo
jg
mov
scas
pop
popa
fcomp
movb
pop
pop
pop
pop
ret
or
and
icebp
mov
enter
fcoms
fldcw
jbe
je
cmpl
insb
jge
sub
add
ror
and
in
inc
hlt
mov
and
adc
ret
xor
in
adc
cmp
push
dec
push
fsub
loope
rclb
les
jg
pop
pop
pushf
pop
cmp
push
ds
jne
js
jo
push
lods
and
jp
and
mov
inc
clc
or
lret
repz
in
mov
cmp
ja
push
clc
lea
push
push
jmp
movb
aam
push
add
invd
mov
sub
dec
fcomip
push
pop
out
jl
sub
and
scas
rcl
adc
add
push
or
test
and
push
push
push
or
cli
cmp
push
push
mov
outsl
add
add
int
push
mov
pushf
subl
mov
push
js
out
and
adc
adc
xor
sub
pop
adc
mov
ret
mul
jg
ds
popa
add
or
shl
test
negb
push
mov
mov
or
stos
outsb
pop
or
lahf
ljmp
inc
add
rcrb
mov
push
aaa
add
out
adc
je
addl
push
lea
jl
mov
push
jne
push
imul
enter
test
push
mov
sbb
das
rclb
scas
pop
idivb
hlt
push
push
sbb
daa
or
fdivrs
rclb
mov
inc
inc
or
inc
or
sbb
pusha
inc
xor
fndisi(8087
insb
icebp
cwtl
cmpb
xor
jecxz
test
rorb
lret
pop
in
sbb
sar
add
cwtl
dec
push
stos
fcoms
pop
dec
mov
ret
aaa
and
cmpsb
repnz
inc
inc
or
shlb
adc
ret
aas
sbb
jmp
xor
outsb
sbb
mov
fdiv
addb
inc
je
adc
push
and
fsub
dec
pop
push
push
insl
mov
mov
lds
cs
mov
jb
stos
pusha
cmpsb
add
mov
rorl
ficoml
mov
rol
cmp
jge
popa
jp,pn
lea
dec
adc
adc
pusha
and
mov
lea
lds
push
or
ret
mov
mov
fiaddl
or
cmp
or
andb
or
cs
ret
out
cs
or
add
shlb
add
dec
mov
jl
adc
movsl
rcrb
adc
sahf
scas
cs
adc
push
out
outsl
xor
and
cmp
add
adc
imull
rorl
or
push
add
ret
push
jmp
xor
jae
cmpsl
sub
ror
cmp
jge
inc
jle
mov
mov
dec
inc
or
inc
pop
xorl
xchg
or
hlt
cmp
cli
lret
add
xor
sar
rorl
cmp
add
cmp
rcll
push
je
mov
pop
movsb
add
sub
mov
mov
rclb
cmp
add
adc
enter
push
adc
xchg
ret
ficomps
push
fsubrs
dec
aas
push
mov
jge
jp
inc
adc
rcrb
push
xor
sub
jmp
cli
andps
lahf
mov
popa
inc
cmp
jb
mov
push
mov
jbe
add
pop
pop
int
jo
mov
push
mov
mov
pop
jae
gs
test
lcall
outsb
sub
addps
or
mov
insb
adc
ja
xchg
adc
xor
incb
pop
out
xor
jb
fnstsw
xchg
pop
xchg
adc
jle
sbb
push
test
inc
pop
int3
push
loop
adc
cmp
cmp
in
and
or
daa
es
push
test
rorl
push
sbb
negb
cwtl
icebp
and
lret
stc
rclb
dec
loope
pop
xor
movsb
push
push
and
out
push
rclb
pop
sbb
mov
or
add
sbb
aas
mov
in
push
xor
cmp
jne
leave
rcr
divl
rclb
dec
pop
outsb
or
sbb
fimull
mov
pop
mov
inc
cmp
pop
inc
jecxz
stc
xor
mov
mov
mov
add
test
jb
fnstcw
or
add
ret
adc
jmp
aad
push
mov
sbb
jge
inc
push
mov
add
add
inc
xor
dec
orb
sbb
inc
sbb
into
test
and
xchg
das
leave
and
sbb
pop
add
lock
aas
or
sub
mov
mov
mov
or
cmpsb
lds
sbb
inc
xchg
push
ret
xorl
inc
or
inc
cmp
add
xchg
or
jp
mov
add
and
je
or
out
or
jne
xlat
xchg
inc
push
push
add
les
rcrb
ret
popa
mov
pop
mull
fwait
ljmp
dec
cmp
pop
test
adc
sbb
and
jle
lock
clc
in
pop
iret
dec
or
jmp
ret
pop
add
jne
push
or
inc
orl
adc
hlt
fs
rcrl
stos
jecxz
insb
icebp
mov
sbbb
mov
jecxz
dec
push
or
adc
inc
pop
inc
cld
mov
dec
je
aam
pop
cmp
pop
je
mov
ret
call
mov
sarl
xchg
mov
fcmovu
dec
movsb
movb
mov
sbb
je
outsl
scas
loope
inc
dec
adc
pop
add
sar
incb
push
and
repnz
dec
je
jmp
loopne
aam
dec
mov
decb
mov
sbb
push
mov
in
pop
xor
cmp
cmp
mov
fstps
leave
and
ss
or
mov
shrb
outsl
mov
pusha
rorb
jp
rcl
aas
xchg
fcompl
mov
in
cmpb
adc
mov
leave
push
mov
lret
sbb
js
stos
mov
notb
popf
jns
lds
mov
jo
sbb
inc
sbb
xchg
fldz
movl
ja
fisttps
sbb
sbb
pop
sub
daa
outsl
in
adc
jne
scas
dec
sbb
pop
ret
inc
cmp
or
jb
xchg
iret
sarl
ret
aas
insl
jbe
out
imul
push
popf
inc
sub
xor
scas
jb
mov
mov
fistpll
sbb
sub
adc
and
sahf
cmp
sahf
in
or
clc
rcrl
adc
add
adc
mov
adc
scas
add
mov
xchg
sahf
sub
aad
jecxz
push
scas
clc
aas
lods
mov
pop
push
lea
push
ficoml
add
mov
cli
xor
xchg
push
rolb
dec
aam
xchg
xchg
addl
push
xor
xchg
inc
pop
sahf
pop
mov
pop
jge
cmp
mov
mov
adc
sbb
aad
sbb
in
add
xorb
jo
jl
stos
aas
push
fiaddl
cld
xchg
mov
nop
xchg
aas
add
test
add
fs
sub
push
push
push
jle
ficompl
movl
subl
mov
sub
or
pop
les
in
sbb
sub
and
pop
je
push
icebp
add
push
aad
sbb
add
xchg
dec
mov
sbb
movsb
shl
mov
cmp
inc
jb
out
sbb
xchg
xor
xor
in
mov
xchg
je
sbb
sub
jbe
out
dec
and
push
xchg
push
mov
sub
into
setne
push
mov
out
or
dec
and
xor
and
push
push
mov
cmp
pop
dec
in
push
std
mov
push
push
inc
cwtl
rol
aaa
push
pop
cmp
je
lea
add
test
xor
add
mov
xchg
pushf
mov
mov
nop
incb
test
or
ret
pop
or
movsl
inc
sub
push
push
cmpl
jne
mov
cli
adc
mov
and
test
aam
push
mov
inc
xchg
mov
sub
ret
push
or
out
pop
push
lea
adc
lods
cmp
mov
pop
push
push
mov
mov
insb
push
dec
dec
mov
fisttpl
push
inc
push
push
xor
mov
dec
sbbb
je
sub
enter
ljmp
rcrl
shll
inc
xor
and
std
ss
dec
sub
mov
add
sahf
inc
add
flds
dec
inc
mov
cmp
jno
arpl
xor
push
pushf
in
xor
xor
mov
xchg
fadd
push
icebp
jbe
cwtl
push
sbb
push
adc
out
sahf
push
xor
cmp
inc
push
cmp
jp
mov
pop
pushf
stos
rolb
push
mov
push
ficomps
xor
push
adc
and
xor
inc
neg
sbb
and
push
cmp
call
pusha
adc
add
mov
subl
addb
adc
lods
loope
xor
push
fnstsw
push
shlb
sub
add
bound
movzbl
pop
repz
out
mov
mov
lock
lret
je
cs
xor
lods
jp
and
cmp
call
lock
or
jo
inc
movb
in
aas
adc
aas
add
cwtl
add
push
mov
jmp
lret
xor
push
push
push
and
push
add
sbb
cs
jo
lret
enter
push
mov
inc
popf
enter
cwtl
das
cld
mov
loopne
popa
pop
xlat
loop
or
mov
mov
push
mov
cmp
test
rolb
push
inc
sbbl
call
lea
data16
in
jg
jmp
pop
or
inc
xchg
cwtl
jo
in
push
pop
cmpsl
adc
rolb
jno
sbb
mov
inc
mov
push
jp
lock
inc
xchg
add
sub
mov
fxtract
or
clc
sahf
push
adc
jmp
scas
xor
ret
jg
add
push
xchg
ljmp
mov
incl
jne
jl
inc
sub
mov
inc
and
cmp
xchg
jo
adc
lea
push
jb
pop
xchg
push
fstpl
pusha
movb
mov
fwait
imul
mov
inc
xorl
or
enter
add
bound
and
cmc
mov
sub
jnp
sub
nop
xorl
inc
add
push
mov
fldcw
push
dec
sbb
dec
sub
mov
push
sub
addb
fmul
js
inc
inc
lahf
push
rorb
xor
pop
push
pusha
mov
cmp
add
and
dec
push
das
lock
mov
nop
cmp
sub
push
push
lea
ficoms
mov
mov
jp
xor
add
sub
push
dec
sub
add
push
js
nop
add
popf
pushf
je
addl
or
push
test
xchg
andl
adc
int
cmp
dec
addb
roll
mov
dec
add
rorl
mov
outsl
popa
or
call
mov
test
sahf
jbe
push
push
and
jo
push
inc
and
inc
sbb
add
js
je
push
int
call
mov
mov
test
aaa
faddl
sbb
inc
rdpmc
int
shrb
inc
inc
fldl
je
adc
xor
mov
push
and
in
lods
enter
cltd
push
push
lahf
push
pusha
leave
jae
mov
adc
lock
sub
shlb
fldl
mov
pop
in
sub
popa
mov
push
push
inc
dec
and
add
push
lds
pop
rorb
les
push
and
mov
jne
or
dec
inc
pop
lock
push
add
push
mov
scas
add
or
push
and
sbb
cmp
xchg
cmp
lock
dec
or
or
and
push
mov
cltd
loope
add
cmpb
jno
inc
repnz
or
add
or
adc
xor
push
inc
cwtl
bound
insb
xorl
sti
rorb
xor
push
mov
mov
lds
pop
mov
cs
out
xchg
lret
cld
add
sbb
cmc
mov
cmp
jb
jge
xchg
lock
push
mov
adc
sub
sub
mov
inc
test
pop
movsb
mov
int
dec
push
fcomps
lea
add
and
add
cmp
iret
add
fdivl
adc
subb
mov
push
mov
fmull
sbb
mov
push
push
push
push
cli
and
xchg
lods
xchg
push
xchg
push
cmpsl
inc
imul
dec
adcl
leave
add
jge
es
popf
inc
sub
push
loopne
sahf
sbb
mov
int3
add
pop
xor
jno
dec
inc
pop
and
popa
dec
xor
out
gs
fs
fs
add
add
int3
and
mov
sub
sbb
jecxz
xor
adcb
cmp
add
fadd
cltd
and
jg
adc
push
sar
push
fistl
daa
jl
dec
or
xlat
and
mov
mov
lock
decl
adc
out
sar
mov
shr
add
mov
imul
push
adc
sbb
jg
in
jle
in
adc
in
add
jmp
mov
cmc
sub
mov
stc
add
les
push
push
push
enter
jl
lcall
sub
cmp
je
cmpl
aaa
ss
sbb
cmp
jne
push
jno
and
aas
lea
fimull
ret
ficomps
icebp
shr
out
pop
es
lea
push
fdivl
pop
sub
stos
and
outsl
sbb
sbb
sub
pop
adc
inc
dec
push
dec
pushf
rolb
or
push
inc
add
inc
jb
cmpsl
sbb
sub
jnp
das
cli
dec
jle
fldz
data16
push
ljmp
pushf
sub
sub
mov
mov
test
ja
mov
cltd
idivl
loopne
add
aaa
ds
pop
cmc
outsb
outsl
xor
sub
sbb
jne
sbb
push
fs
sti
test
arpl
mov
fidivrs
in
jle
adc
test
or
jbe
add
outsl
adc
sbb
and
and
inc
dec
add
ja
imul
imul
cmp
iret
outsl
dec
jae
dec
sub
jge
jmp
mov
sub
pop
fistl
fists
loopne
sbb
push
faddl
xor
pop
or
clc
sub
xor
mov
fdivrp
shll
and
fisttps
sbb
mov
mov
mov
jns
inc
push
fcoms
xchg
imul
icebp
in
or
mov
fmuls
out
fidivl
mov
pop
pushf
add
idiv
inc
cmp
clc
in
push
pop
movb
add
mov
pop
mov
icebp
leave
jge
movsl
dec
addl
enter
ficoms
sub
shll
dec
pop
fimull
push
sbb
and
inc
out
hlt
or
int3
xchg
mov
loopne
mov
je
sbb
arpl
rcll
sti
lret
xor
xchg
adc
movsb
or
cmp
mov
add
insl
xchg
xor
add
push
sub
xchg
adc
mov
and
rolb
mov
sbb
add
gs
pop
adc
invd
mov
add
xchg
mov
add
inc
fistpl
cwtl
repnz
mov
pop
les
stos
aam
push
inc
outsl
loopne
push
sbb
jns
jmp
jecxz
sbb
add
mov
scas
in
jne
and
xchg
sbb
xor
or
and
lea
pop
or
mov
adc
jb
dec
cmp
pop
add
loopne
or
add
push
aaa
ret
pop
sbbb
push
push
sub
push
out
and
xchg
fisttps
aas
lea
push
push
fidivl
fmuls
inc
xchg
test
or
aad
xor
jo
fstpl
inc
in
mov
movl
sahf
adc
inc
movsl
jo
mov
sbb
adc
push
push
sbb
mov
sub
push
nop
push
popa
cmpl
sbb
adc
pop
dec
fs
jmp
pop
loope
sbb
stc
lea
dec
xchg
mov
sbb
ret
popa
and
pusha
call
pop
push
dec
mov
xchg
mov
mov
inc
leave
inc
push
jle
jne
xchg
lret
push
pop
aas
ret
and
notb
shll
and
lahf
jb
jb
or
or
and
xchg
loope
in
or
dec
clc
pop
lcall
out
es
cmp
setb
insb
push
mov
sub
cmp
setae
repnz
cmp
lcall
adc
sbb
mov
inc
addb
punpckldq
xor
xchg
mov
add
inc
sarl
sub
inc
pop
orl
push
movsl
pop
ret
push
es
pop
pop
jnp
mov
lods
insb
push
jl
push
jecxz
dec
andb
xor
push
pop
cmp
daa
int3
jnp
inc
push
mov
jno
outsb
xor
push
sbb
addb
shrb
cmpsb
flds
or
inc
ss
xchg
xchg
xchg
push
inc
push
push
dec
mov
loopne
push
mov
aas
inc
or
jns
or
mov
pushf
mov
call
jge
sbb
iret
xor
call
mov
ja
psrld
dec
clc
mov
fcoms
cmp
or
push
and
cmpsl
dec
jno
mov
cmp
xchg
lds
push
mov
fwait
idivb
add
add
adc
adc
fsubrs
sub
sub
dec
xor
xchg
sbb
mov
mov
mov
xchg
mov
or
mov
mov
sub
inc
xor
add
movl
xchg
jmp
jo
fs
pusha
jmp
or
pop
push
mov
dec
in
add
lea
mov
gs
cltd
and
jns
movsl
and
jo
dec
seto
bound
mov
pop
adcl
xchg
adc
push
mov
add
xchg
rolb
add
pop
mov
add
mov
or
shrb
arpl
mov
pop
mov
push
repnz
call
sbb
push
stc
xor
stos
dec
sbbb
or
add
sub
lds
pushf
stos
xchg
pop
fdivl
push
mov
or
mov
sub
test
mov
rcll
and
subps
push
bnd
push
pop
or
push
ss
ds
dec
dec
sbb
add
sub
shlb
rclb
lods
gs
pop
ret
aaa
mov
pop
push
sbb
sbb
push
jg
xor
es
roll
push
stos
inc
mov
je
fstpl
jne
push
push
lods
jecxz
data16
shl
mov
movsb
sbb
mov
ss
pop
and
ret
ds
xchg
mov
adc
in
enter
mov
push
adc
push
xor
insl
cli
sbb
cmp
cltd
push
push
dec
mov
shll
push
aad
jp
leave
or
dec
dec
inc
jg
xchg
sub
jo
pop
inc
arpl
pop
nop
dec
sbb
sbb
or
inc
pop
sbb
sbb
dec
rorb
loope
test
ja
inc
in
adcb
xor
test
es
dec
add
push
push
pop
push
loopne
mov
lcall
sub
push
or
fimuls
or
add
jns
inc
add
jle
orb
fdivrs
adc
or
add
scas
pop
xchg
mov
cmpsb
lods
or
push
fisttpl
sub
fistl
adc
mov
xor
jmp
fldenv
or
outsb
sti
inc
push
add
jne
adc
loope
or
or
mov
addr16
or
mov
out
pusha
mov
fcomps
or
jno
push
push
lods
add
mov
inc
or
add
mov
cmp
clc
cmpsb
add
pop
jo
mov
push
add
inc
loop
sbb
imul
mov
inc
ss
es
pop
movl
mov
test
push
shrb
rolb
jb
cs
push
rorl
push
add
data16
mov
pop
sub
in
adcb
aad
shl
push
das
jae
int3
add
cmc
or
mov
dec
fldl
jns
push
push
sbb
scas
movsb
pop
push
mov
daa
and
add
hlt
cmpsl
push
lods
das
mov
sbb
jne
ds
push
mov
mov
cmp
mov
pop
and
push
addl
inc
mov
adc
adc
movsl
into
rclb
lahf
in
scas
lods
xchg
push
cmp
mov
cmp
sub
dec
adc
popf
loop
pop
insb
dec
sbb
insl
push
movsl
popa
rolb
mov
aam
mov
loope
dec
fwait
lea
popf
push
adc
xor
sub
sub
mov
iret
sbb
loopne
pop
or
aam
xor
inc
mov
push
ja
add
nop
cmp
mov
mov
shr
pop
mov
adc
push
or
gs
mov
dec
jl
adc
dec
mov
test
jne
jle
bound
out
ds
int3
add
push
stc
lds
cmp
push
add
jb
into
xor
movsl
cmp
push
std
stc
cmp
mov
repnz
sbb
or
cmp
adc
jmp
das
push
jmp
and
inc
and
xor
lods
jge
jne
lock
push
push
pop
xchg
cmp
sbb
jl
inc
mov
push
or
loope
iret
adc
enter
mov
or
xchg
sub
push
inc
jbe
add
je
inc
insb
cmc
or
jmp
sbb
andb
or
mov
pop
add
bound
xchg
inc
or
clc
leave
shll
push
mov
pop
dec
push
cmp
mov
leave
mov
adc
and
or
add
iret
adc
sbb
push
out
add
mov
outsl
shll
enter
aad
sub
lahf
push
fmull
pop
mov
ljmp
lahf
push
sbb
sub
pushf
sbb
sbb
movl
repnz
rorb
lock
ss
jbe
adc
shlb
sbb
repz
mov
movsb
dec
mull
adc
inc
sbb
dec
add
dec
enter
insb
jmp
push
adc
mov
mov
sbb
push
pop
adc
orb
push
dec
push
add
and
adc
jbe
cmp
sbb
add
xor
mov
adc
and
enter
and
sbb
jne
xlat
pop
das
aam
add
cmp
shlb
jne
adc
push
or
data16
inc
stos
inc
and
stc
dec
jo
mov
mov
inc
mov
adc
gs
xor
and
and
jmp
enter
and
mov
and
cmp
xchg
and
daa
jmp
lret
pusha
cmp
sub
lret
and
test
xor
ljmp
mov
mov
xor
sub
jno
mov
std
aaa
sbb
ret
mov
push
nop
or
push
rcrb
imul
lcall
xor
mov
and
fbstp
sub
xchg
test
nop
addl
push
sub
jae
cmc
add
in
add
or
adc
stos
sti
and
sbb
fistpll
inc
pop
rorb
dec
and
fwait
push
adc
mov
aad
icebp
adcb
inc
push
sbb
pop
je
rolb
sbb
popa
lock
mov
add
les
push
push
nop
aaa
cmpsl
adc
or
jmp
add
push
fwait
sbb
xor
addl
sbb
icebp
sub
push
xorl
xchg
mov
pop
adc
and
fwait
add
lcall
xor
pushf
loope
add
xor
scas
or
pusha
pop
push
scas
sbb
push
mov
push
adc
xor
in
das
mov
adc
test
mov
adc
jl
jae
pop
add
push
push
sbb
aaa
inc
ss
sbb
mov
push
pop
cmpsb
pop
ljmp
dec
mov
stos
xor
enter
add
aaa
push
jb
cmp
push
leave
inc
jno
pusha
cmp
add
push
test
pop
adc
add
xor
das
dec
xchg
dec
cld
fidivl
pop
add
sub
cmp
test
divb
es
loop
insb
les
push
sbb
xor
sub
mov
pop
lods
or
cmp
andb
or
inc
pop
inc
pop
cltd
loopne
push
xchg
push
or
or
add
mov
sbb
int
bndstx
adc
push
fbstp
leave
or
sub
pushf
jmp
push
sbb
push
lds
push
or
movsb
das
mov
or
jne
movl
daa
int
and
inc
jb
stos
cmp
nop
mov
sub
and
cmp
outsl
jb
sbb
test
push
mov
lods
pop
or
pop
add
mov
clc
mov
push
sarb
test
lret
sub
or
rorb
test
daa
mov
jg
sti
sbbb
inc
movb
adc
xor
in
jecxz
lcall
xchg
fsubr
pop
loopne
adc
fildl
pusha
int3
mov
pop
out
and
neg
js
mov
and
movsb
fcmovnb
mov
and
add
test
push
or
add
push
and
add
loopne
inc
fs
sub
cld
ss
pop
mov
xchg
outsl
add
mov
or
mov
cmp
push
adc
add
jmp
fmuls
or
push
popf
adc
pushf
lret
push
inc
fisubrs
sub
push
test
ljmp
jmp
sbb
fs
or
cmpsb
loope
push
clc
mov
ss
pop
in
and
std
push
into
pop
imul
jp
add
and
pop
push
rorl
cwtl
mov
fld
stos
pop
add
outsl
stos
xor
call
pop
push
out
mov
jle
jb
sbb
lods
mov
mov
and
jno
add
pop
call
xchg
mov
adc
jb
ffreep
and
push
dec
mov
push
mov
test
inc
sub
jg
jecxz
cs
push
jb
mov
lods
sub
roll
jno
pop
aaa
or
addr16
and
lret
push
test
adc
daa
mov
in
and
sbb
cld
fcmovne
push
test
je
aad
cmp
cld
fsts
sub
test
orb
adc
mov
pop
or
push
fsubrs
cltd
sub
or
mov
mov
leave
mov
mov
jl
cmp
sub
pop
push
and
add
jae
adc
or
test
add
or
les
stos
add
jo
sub
in
dec
or
roll
sub
sbb
push
xchg
imul
ds
or
es
mov
sti
jg
in
push
inc
data16
aaa
iret
shll
push
push
mov
cmpsb
xchg
iret
ret
dec
push
cmp
sbb
cltd
inc
push
pop
pop
adc
inc
pop
adc
xor
imul
adc
inc
es
inc
adc
nop
cmpsb
cmp
adc
pusha
nop
lret
popl
cltd
nop
push
cmpsb
pop
add
cmp
in
cwtl
test
jae
adc
adc
and
jp
mov
add
imul
cwtl
inc
cmc
insb
mov
pushf
pusha
in
int3
pop
pop
repnz
nop
add
xlat
or
push
jns
test
jns
xor
cmpsb
sbb
add
mov
add
push
adc
xor
inc
push
push
out
inc
test
jl
andb
incb
movl
cmp
inc
dec
xchg
add
fisubrs
cmp
std
xchg
xchg
adc
or
fs
push
dec
xorl
cwtl
popa
cmp
pop
add
daa
sti
jle
mov
xor
push
push
fwait
dec
cmp
pushf
out
add
add
sbb
dec
and
or
lea
or
popf
push
jmp
mov
adc
cmp
repz
inc
sbb
rcll
mov
dec
fmuls
js
cmp
repnz
shll
inc
sbb
or
movsb
inc
leave
jne
pop
cwtl
lods
movsb
test
imul
lea
mov
inc
cli
lock
sub
into
mov
sbb
leave
sbb
add
xchg
adc
inc
push
sahf
sub
or
push
or
or
idivb
addb
notl
mov
pop
push
aas
movl
in
push
sub
orl
out
mov
out
pop
pusha
sub
mov
mov
or
jmp
in
ds
test
test
add
add
adc
mov
dec
loope
movsb
out
jae
or
outsl
push
or
mov
dec
daa
push
or
cmp
bound
cltd
push
pop
mov
rcrl
std
enter
sbb
jecxz
lret
dec
xor
add
pop
inc
jle
mov
in
in
pop
cmc
adc
in
clc
cmp
stos
fs
arpl
and
dec
gs
fs
inc
inc
and
fldenv
sub
mov
push
and
push
dec
xor
sub
add
mov
in
push
or
sahf
test
into
pop
das
xchg
dec
jecxz
add
insb
fldt
call
frstor
xor
push
mov
lea
xchg
adc
mov
and
ja
pop
sub
je
and
jle
dec
clc
mov
dec
cld
sub
or
jge
push
lock
es
push
push
adc
dec
ss
out
pop
or
mov
outsb
sub
jmp
clc
jg
or
or
aaa
pop
je
rol
pop
outsb
jl
fucomi
repz
call
sub
jne
push
adc
icebp
lea
outsl
shr
outsb
mov
lea
inc
test
jmp
push
in
push
lea
fildl
push
cmp
push
sbb
push
sub
push
push
or
loop
cmp
test
xor
or
pop
lret
adc
sbb
jle
jb
pop
movsl
adc
dec
cld
sub
cmc
out
lcall
nop
add
push
in
inc
jge
cmp
adc
popf
mov
out
js
mov
add
mov
adc
sbb
test
add
mov
and
aas
movsl
xchg
not
mov
push
jno
sbb
push
or
xor
cmpsl
aas
ret
adc
jecxz
mov
xchg
dec
add
push
repnz
add
inc
ret
and
dec
shlb
cltd
aad
fisubrl
les
jg
mov
imul
cmp
xor
aaa
ss
cmp
adc
xchg
add
mov
pop
add
outsl
pusha
add
clc
dec
and
jnp
add
push
mov
jmp
sub
push
push
arpl
push
or
or
or
leave
daa
mov
jo
add
inc
mov
mov
js
xor
jne
je
movl
push
push
test
push
sbb
scas
xor
jo,pt
pop
or
xchg
xlat
sbbl
jecxz
xlat
rorl
js
loope
add
xchg
fcomps
incb
jle
mov
mov
xor
call
in
incl
or
xor
push
popa
push
adc
hlt
add
jo
xor
inc
pusha
arpl
add
fs
add
mov
mov
stos
outsb
rorl
js
push
mov
mov
jmp
push
sbb
push
pop
pop
andb
xchg
push
inc
pop
ret
nop
insb
pusha
pop
pusha
ja
test
push
es
sbb
mov
jp
jle
cmpb
aas
js
mov
clc
out
dec
cld
lea
sub
fs
dec
leave
loopne
mov
mov
fimuls
in
jo
sbb
push
jecxz
mov
xor
add
and
mov
aad
mov
ss
sub
sbb
dec
xor
into
sbb
sarb
jp
add
xchg
mov
mov
or
push
arpl
test
outsb
loop
or
jmp
shrb
out
or
sbb
loopne
push
xchg
jne
das
shrd
and
rorl
scas
or
xchg
data16
xchg
mov
scas
push
ds
xorl
xor
inc
nop
dec
push
pusha
mov
adcl
icebp
dec
xor
loop
add
sub
sbb
out
pop
add
or
and
pushf
jmp
dec
out
das
sti
mov
cmp
push
xchg
and
outsl
leave
pop
or
andl
add
mov
cmp
add
ret
je
mov
adc
into
test
std
xorps
push
push
push
aas
arpl
push
cmp
test
ret
mov
push
rolb
sarl
cmpsb
ret
sti
inc
inc
add
jp
pop
testb
inc
pushf
call
jae
shrl
mov
sahf
dec
sahf
add
and
and
push
outsb
jecxz
xor
pop
add
scas
lock
fcmovnu
je
mov
loop
clc
adcl
xchg
ret
inc
icebp
push
ja
pop
push
test
movsl
inc
scas
js
mov
dec
add
je
ss
pop
adc
daa
in
dec
pushf
add
xchg
push
dec
lods
in
lods
xor
jle
sub
cmp
and
fcoms
aad
adc
ret
inc
push
sub
sub
rolb
fists
mov
cmp
push
or
fists
xor
ret
or
mov
dec
in
cmc
inc
mov
ljmp
jno
adc
cmp
pop
test
sub
test
popa
es
cmp
lea
sahf
mov
ljmp
dec
and
push
dec
js
or
or
out
and
out
jecxz
sub
sub
stos
rorl
dec
inc
jl
sub
pop
push
and
dec
loope
shlb
call
sub
push
mov
rorl
lea
sbb
mov
add
adcl
setge
sub
cmpsl
shlb
sub
sub
cmp
movsl
stc
and
add
inc
out
push
jns
or
xor
cmc
fcoms
pop
es
cmp
sbb
sbb
ret
xchg
and
and
and
cmp
mov
pop
iret
cmp
lahf
mov
das
add
jg
and
test
out
lock
cld
jno
push
cmpsl
push
inc
or
jno
test
sub
adc
mov
inc
pop
and
sarb
xchg
scas
daa
sahf
push
jle,pt
push
and
sbb
push
push
push
jo
in
xchg
pop
rcrb
add
aaa
push
call
add
and
add
pop
push
push
jb
adc
mov
call
dec
pop
cltd
or
cwtl
mov
pop
or
fs
cmpsl
xor
and
xor
mov
push
lea
cmpsb
xor
mov
stc
insl
rorb
push
push
icebp
or
add
and
sbb
sub
sub
jb
fdivl
xchg
adc
or
push
mov
jns
icebp
adc
sahf
adc
sub
adc
push
loop
loopne
mov
cmp
jl
cmp
pop
inc
outsl
in
insb
xchg
add
add
inc
mov
or
in
dec
pusha
ja
adc
cmpsb
jo
test
ret
mov
lock
mov
mov
aas
fnstsw
aam
push
adc
cmp
sub
call
sbb
mov
xchg
sbb
mov
dec
stc
mov
adc
add
sbb
icebp
push
mov
adc
aaa
loopne
mov
push
shr
incb
xchg
mov
xchg
jo
sbb
or
and
pop
clc
mov
xor
mov
ret
in
fwait
add
cmpsb
data16
sbb
nop
mov
pop
jmp
repnz
xor
xor
hlt
cmp
lcall
es
fistps
dec
les
into
ja
repnz
push
push
push
ret
push
sbb
cmpsl
adc
aaa
mov
sarl
std
pushf
lods
push
mov
subb
adc
sti
adc
xchg
sub
jno
cwtl
sbb
jae
je
mov
mov
adc
mov
jg
add
or
lea
jge
push
push
add
lock
imul
test
jl
dec
push
add
push
push
iret
sub
add
fidivrs
sub
add
mov
pushl
mov
inc
xor
or
sub
sub
sub
mov
inc
mov
jmp
mov
xchg
cmp
lods
xchg
and
inc
imul
or
and
and
sbb
mov
xchg
int
roll
push
insl
lds
sbb
aam
fadd
push
int3
sar
and
outsl
push
sub
je
cmpb
pop
jo
pop
pop
pop
add
xchg
loopne
and
decb
add
mov
sarl
out
xchg
add
sub
push
sarb
sub
fnstenv
cli
xor
lret
lret
add
cmp
push
cmp
lods
or
sbb
iret
sti
mov
dec
hlt
jge
arpl
add
or
jp
add
sbb
xchg
cld
insl
xchg
and
movl
nop
sbb
es
das
jno
mov
fmul
fsubrs
push
add
adc
es
xchg
or
fcmovnb
adc
sahf
jl
mov
push
icebp
sub
jg
push
add
push
out
sub
ret
lods
test
or
gs
adc
dec
dec
cld
sub
loope
loopne
add
lea
mov
xchg
call
add
loop
xchg
pushf
imul
or
mov
scas
push
adc
mov
inc
push
xor
pop
fisttpl
adc
lods
add
ret
out
outsl
and
repnz
hlt
pusha
xchg
push
aaa
les
push
adc
stos
and
or
xchg
xchg
cmp
ret
jg
cmp
in
cmp
mov
cmp
mov
sub
rcll
mov
push
add
push
push
mov
pop
mov
imul
xchg
xor
insl
jg
jge
inc
jle
jg
mov
ret
add
je
filds
movb
mov
xchg
xorl
jp
loopne
sub
lahf
das
aas
test
or
adc
stc
mov
ret
pop
push
jmp
scas
fcoms
or
ret
insl
popf
cmpsb
push
or
pop
scas
adc
pop
add
popa
jne
and
sbb
add
aam
inc
mov
or
mov
dec
adc
pop
mov
jl
mov
and
adc
cmp
in
add
lock
out
inc
mov
cmp
jne
loop
mov
pop
pop
push
ss
mov
push
ljmp
popf
test
shl
je
add
into
pop
fdiv
add
push
sarl
xor
rorb
jae
orl
xor
push
and
adcl
aaa
jp
outsb
push
add
and
push
pop
test
xlat
aaa
cmc
mov
shll
jns
insb
pop
mov
add
add
pop
hlt
xchg
stos
mov
or
mov
sbb
movhps
ret
int
inc
cmpsl
inc
mov
pop
mov
shrb
pop
mov
add
lock
or
pop
test
mov
mov
sbb
inc
or
or
add
subb
adc
inc
pop
gs
insb
inc
mov
popa
mov
lcall
inc
inc
add
mov
add
scas
loop
jp
stos
call
movsb
pop
ljmp
inc
pop
jecxz
sbb
cmpsb
push
mov
js
xchg
orl
adcb
xchg
mov
mov
int3
jmp
aas
iret
das
adc
cmp
cmp
push
mov
shl
jns
xchg
dec
shl
outsb
push
jp
pop
jle
jle
mov
xchg
cld
push
push
cmp
mov
test
sbb
test
xchg
and
push
lds
jmp
mov
push
add
addr16
lret
dec
and
push
sub
ja
xor
dec
sub
pop
sub
aam
mov
imul
icebp
jge
or
sbb
or
jmp
push
icebp
and
mov
pop
test
push
add
mov
in
test
xchg
mov
xor
sub
adc
add
pop
jecxz
jne
f2xm1
push
push
js
add
scas
std
inc
mov
mov
jmp
pop
add
repnz
cmp
lds
cmp
inc
mov
sbb
push
dec
lods
shll
xchg
mov
popa
decb
mov
add
inc
mov
push
add
sub
out
dec
dec
sbb
sbb
add
push
cmc
adc
push
xor
add
xchg
jmp
mov
pop
test
and
pop
fiaddl
mov
mov
pop
cmp
jb
int
adc
sub
push
leave
and
xchg
cmp
mov
ficomps
push
adc
test
icebp
mov
sbb
scas
lods
xor
cli
test
ds
add
rclb
loopne
adc
sub
test
mov
add
push
es
mov
xor
sti
je
adc
out
xor
es
mov
mov
xchg
into
add
jno
fwait
sbb
jle
mov
push
jp
mov
and
xor
adc
push
push
std
popf
hlt
rcll
push
pop
cmpsl
jecxz
dec
jnp
cmp
xor
sub
push
pop
out
inc
lock
jmp
mov
xchg
push
add
push
es
push
stos
mov
sbb
pop
loopne
pop
jne
cld
cmp
mov
lds
mov
add
mov
inc
mov
inc
add
sub
ret
push
inc
adc
pop
and
push
roll
cmp
push
push
aad
pop
pop
sub
jecxz
mov
ret
outsl
add
pop
lahf
sub
mov
add
xchg
and
pop
int3
adc
stos
cmp
or
cwtl
xchg
add
sub
push
mov
int
sbb
inc
stos
rcr
mov
dec
insl
or
stos
or
cmp
lock
mov
jecxz
jge
aam
arpl
pop
jle
pop
jne
int3
mov
adc
push
test
sub
and
xchg
mov
pop
in
pop
fwait
xchg
lahf
xor
mov
cwtl
add
cmpsb
adc
cmp
in
aas
sub
and
sahf
cmp
addl
bound
pop
aaa
and
pop
mov
sub
adc
add
or
jae
adc
sub
adc
and
push
add
pushf
sub
and
inc
out
jecxz
cmp
adcl
mov
mov
xor
push
mull
jmp
lock
les
ret
jg
push
test
stos
jg
xchg
or
test
xor
push
and
ret
pop
xor
arpl
fstpl
jo
and
xor
inc
and
add
sub
xor
push
sub
nopl
and
pop
push
cltd
xor
adc
dec
add
js
inc
popf
and
add
cmp
or
js
popa
je
gs
push
dec
mov
dec
roll
out
push
insl
lock
aam
cltd
incl
testl
or
xchg
cmp
mov
or
push
add
ss
into
stc
lret
mov
or
lcall
xchg
add
lret
dec
jo
stos
cmc
mov
pop
push
int3
sti
addr16
test
inc
sbb
stos
cld
sub
push
aas
ficoms
pop
sub
lock
jl
jo
and
dec
xchg
jl
pop
shrb
sub
je
adcl
lret
movhps
or
dec
pop
jne
enter
rol
ret
cmpsl
out
ds
insb
cmpsl
ficoms
sub
rcrl
push
cwtl
push
add
ret
add
and
xor
lock
mov
lret
or
movl
sbb
jb
aaa
jl
ss
sub
pop
push
lea
scas
imul
cmp
xchg
dec
je
cwtl
xchg
lds
repnz
ss
test
pop
shrb
xchg
les
or
lcall
pop
push
sbb
shl
cwtl
push
stos
rorb
pushf
push
push
lds
push
mov
pop
xor
movsb
sub
pop
push
loope
popf
gs
imul
leave
dec
add
mov
and
scas
xchg
out
xor
aad
or
in
xor
add
jo
xchg
pop
add
push
or
adc
pusha
decl
mov
and
push
sbb
imul
call
or
rcrb
das
add
test
je
lea
out
pop
aas
add
rcr
mov
rorl
arpl
mov
adc
into
cmp
jb
pop
pop
lock
aaa
mov
jg
aam
push
std
dec
dec
daa
add
sub
inc
push
jo
cmpsl
sub
test
lods
or
je
adc
dec
rorb
add
cmp
mov
std
aam
jle
loop
or
mov
sub
imul
add
in
call
jle
cmpb
clc
sub
or
jge
push
sbb
lret
xor
add
add
lcall
das
cmp
sahf
aas
push
push
jo
jo
and
push
bound
sub
sub
jg
xchg
lea
add
pop
push
push
push
push
add
movsb
daa
push
push
push
push
pop
push
imul
enter
sub
add
add
push
movb
mov
xor
xor
and
xor
ljmp
sub
jb
fisubrs
fs
mov
js
jg
add
js
sbb
jo
cmp
fidivrs
lea
jmp
into
nop
shrl
lods
test
dec
insb
enter
push
outsb
or
rorl
ret
cmp
pop
ret
ret
rorb
or
and
xor
ret
add
int3
push
mov
add
xor
jl
lea
ret
pop
or
xor
ljmp
std
insb
and
push
adc
add
push
and
fdivl
sub
push
adc
pushf
repnz
and
pop
jo
jmp
adc
lods
mov
adc
sahf
xchg
mov
add
mov
mov
movl
les
movsl
aas
inc
cld
push
loop
push
xor
add
cmp
push
jp
shll
loopne
mov
idivl
xchg
loopne
push
in
or
repz
mov
test
push
push
imul
push
push
ds
or
ret
lock
adc
and
and
es
inc
lds
sbb
inc
clc
add
pop
adc
mov
jge
shl
cmp
jl
mov
pop
das
lock
rcrb
insl
fnstenv
pop
sbb
adc
add
mov
scas
test
cld
mov
dec
add
shll
add
ds
mov
xchg
inc
inc
sbb
sahf
cltd
add
inc
push
xor
sbb
mov
push
pop
sbb
push
adc
popf
push
cmp
cli
push
shrl
sub
mov
sbb
pop
nop
adc
leave
push
sti
outsb
loopne
add
inc
cld
xor
idivb
sahf
out
cmp
add
xlat
sbb
push
je
lods
xchg
lock
inc
mul
out
in
jmp
xor
fimuls
cmp
push
mov
xchg
xchg
sub
ljmp
inc
mov
add
outsl
aas
xor
rclb
ret
sbb
pop
pop
mov
call
push
or
icebp
ja
pop
pusha
mov
push
gs
xor
push
dec
orl
push
cmpl
aad
pop
mov
push
clc
and
call
mov
sub
mov
add
sbbl
adc
jg
mov
push
push
dec
inc
add
or
inc
clc
xor
push
sbbb
call
or
or
lock
cld
jecxz
mov
in
pop
add
sarb
sbb
js
push
xor
aam
mov
pusha
jo
leave
clc
push
dec
lock
mov
adc
add
push
and
imul
dec
mov
mov
hlt
scas
insb
popa
push
xchg
in
int3
push
stos
or
pushf
addr16
mov
ss
inc
jnp
cmp
jae
sub
ss
mov
and
pop
or
pushf
adc
and
add
jb
pop
lea
sub
aam
pop
mov
ret
outsb
lret
cmp
clc
adc
pop
and
loope
gs
call
mov
loope
cmp
sub
mov
jmp
cmp
aas
xchg
dec
sbb
and
add
sbb
mov
cmpsl
inc
int
ret
jge
movb
cmp
ret
dec
imul
rorl
cld
sub
inc
inc
mov
rcll
cmp
lea
jne
push
push
add
pop
fwait
inc
test
and
add
xchg
inc
push
cmp
cmpsl
test
xchg
pmuludq
add
fcmovbe
pusha
in
mov
movsb
cli
scas
xchg
lret
cmp
call
mov
or
orb
test
or
inc
movsb
sbb
sahf
test
xor
sbb
xlat
sbb
sbb
aas
test
jl
push
iret
mov
int3
adc
out
adc
cmpsb
insb
push
loope
popf
cli
dec
dec
cmp
adc
ret
fistpl
in
or
or
das
jecxz
pop
and
pop
jb
dec
das
or
test
and
fiadds
add
mov
lahf
cmc
loop
or
dec
imul
test
fcomps
mov
or
int3
jno
pop
mov
test
pop
push
lods
mov
add
xor
out
sbb
outsl
dec
xchg
xor
xor
fidivs
inc
fnstsw
stos
rcl
in
adc
pushf
fistps
mov
movl
jecxz
add
inc
inc
ret
xor
mov
shl
dec
dec
push
dec
and
hlt
hlt
pop
sub
ror
xchg
jge
ret
hlt
fistpll
push
dec
lea
xchg
les
jg
inc
js
stos
test
inc
jae
aaa
dec
jb
mov
mov
mov
out
pop
push
pop
inc
stc
int3
xchg
inc
sbb
sbb
mov
sbb
dec
mov
push
or
push
je
dec
or
jge
pop
jo
notl
inc
push
jp
add
lock
mov
test
inc
cmp
adc
je
push
and
js
pusha
mov
add
in
xor
jl
cld
adc
lret
add
xor
sarl
push
push
xchg
and
sbb
push
push
subb
inc
lcall
push
push
loope
sub
pop
pop
inc
mov
dec
divps
or
pop
pop
lea
push
push
roll
pop
xor
jl
add
cmp
jne
dec
rcr
xchg
mov
rol
loope
sti
xchg
dec
in
dec
sahf
add
sub
sbb
stos
and
mov
cmp
cmp
mov
xchg
inc
add
out
or
dec
mov
out
and
mov
test
pushf
in
in
jo
int
aas
ret
mov
outsb
test
mov
inc
mov
push
mov
ret
jl
std
shlb
inc
cmp
adc
jg
mov
push
or
push
push
mov
rorb
push
push
xor
shlb
pusha
movsb
imulb
mov
mov
sbb
pop
mov
orl
sub
cmpl
add
andl
mov
push
insl
pushf
sub
xor
xor
je
loope
cli
adc
and
push
sub
sub
sarb
mov
pop
inc
add
sub
and
hlt
jg
mov
sbb
push
movsl
lahf
pop
addb
or
adc
cmc
push
sti
push
mov
push
mov
data16
fdivl
lahf
out
in
adc
mov
push
push
aas
dec
push
movsl
icebp
cmc
or
xchg
jle
sub
arpl
xor
or
and
sar
or
and
push
and
xchg
fdivl
add
cmp
jnp
lock
cmp
jmp
andl
cltd
jae
rcrl
addb
and
fdivs
jae
adc
inc
push
sbb
sbb
orl
push
push
xor
mov
dec
fsubrs
jne
push
loopne
rolb
and
cli
lahf
rcll
mov
fisttpl
fimull
inc
dec
pop
push
jl
add
inc
xchg
xchg
cmp
push
or
jb
scas
ja
xchg
pop
pop
jmp
and
dec
and
iret
adc
xor
pushl
mov
push
or
add
push
out
gs
call
out
dec
inc
std
mov
ret
jo
mov
call
shlb
js
repnz
adc
inc
mov
or
dec
fadds
fists
xchg
adc
cmc
lret
adc
lret
and
adc
fsts
shll
rcll
inc
sbb
pop
sbb
xchg
and
dec
xchg
inc
test
js
cmp
add
cwtl
or
sbb
ja
adc
ss
push
test
pop
sub
repnz
ss
ljmp
stc
dec
pop
add
push
lea
arpl
mov
sti
inc
adc
fs
cmp
pop
cmp
sarb
xchg
dec
out
sarb
xchg
les
mov
cwtl
xchg
push
jne
sub
xor
cmp
inc
pushf
push
jmp
push
push
test
add
cmp
xor
cmp
dec
lds
fistl
cmp
push
mov
cmpsl
adc
dec
or
adc
test
pop
negl
or
jl
push
pop
jg
mov
pop
inc
pop
insb
push
sub
stos
cld
insb
mov
push
pop
test
xor
or
rol
or
into
vpunpckldq
sbb
sbb
cmp
aad
les
add
repnz
dec
adc
cmp
inc
js
and
jo
xor
popf
inc
inc
push
sub
mov
rcrl
inc
mov
jl
push
sbb
and
push
pop
test
fiadds
xchg
cwtl
lods
sbb
test
inc
sub
and
sbbl
push
xor
es
xchg
fisubl
dec
add
and
xchg
je
daa
pop
push
adc
push
push
bswap
inc
sub
and
mov
or
es
jmp
loopne
shll
push
mov
cmp
sub
push
and
mov
sub
sarl
mov
dec
cmp
ja
pop
ja
jmp
ss
push
dec
lahf
xchg
add
leave
add
mov
or
push
gs
pop
mov
sbb
pop
mov
cs
pop
xor
add
add
push
cltd
in
dec
push
rclb
mov
add
pop
dec
push
pop
insb
jb
dec
sub
aam
rcr
add
pop
out
dec
roll
sub
ret
test
mov
les
fstps
insb
inc
jno
and
repnz
push
and
sbb
test
das
cmpsl
mov
mov
scas
push
jl
inc
dec
inc
cld
push
test
test
adc
pop
xor
mov
pop
push
aas
cwtl
dec
mov
xor
or
cld
xchg
jno
sub
outsl
clc
xchg
mov
xchg
dec
xor
sbb
aas
push
push
pop
sub
adc
sub
nop
jo
adcb
add
push
push
lock
push
and
add
les
push
lods
dec
cmp
imul
dec
test
dec
sarb
lcall
cmp
test
adc
lock
sbb
mov
repnz
lea
mov
pop
xor
push
push
shll
sub
sub
xor
push
lahf
xchg
in
or
mov
pushf
cmp
add
or
push
outsb
sbb
nop
inc
ror
jb
mov
pop
rolb
rcrl
mov
xor
xor
pop
fiadds
xor
cmpsl
or
dec
sbb
push
lret
nop
push
add
movl
or
inc
shlb
mov
sub
dec
les
fdivs
fstps
xor
push
mov
les
roll
pushf
or
insl
je
fadd
mov
xchg
inc
std
sarl
iret
mov
outsl
inc
fs
or
fisttpll
push
mov
mov
inc
jmp
jp
xchg
cmp
ja
pop
jp
sbb
jnp
pop
cmp
xor
inc
movsl
jo
shr
push
xchg
roll
dec
and
sub
shll
movsl
dec
and
mov
cwtl
fs
push
shrb
sub
sub
or
and
test
mov
or
cli
dec
push
mov
push
push
pop
mov
pop
js
shrb
fs
test
fs
pusha
or
and
sbb
mov
sbb
adc
add
jle
cmpsl
popf
mul
clc
cmp
iret
pop
xor
sbb
scas
or
pop
or
and
xchg
mov
sub
push
and
jge
xor
sub
jmp
js,pn
dec
or
xor
mov
jge
sub
outsl
ret
repz
insb
jmp
sub
mov
xlat
and
or
mov
push
inc
jge
dec
ss
push
pop
decl
sbbb
sbb
insb
sub
sbb
push
mov
je
fdivl
mov
repnz
jnp
or
sbb
lret
push
adc
push
sub
dec
pop
xor
shll
cltd
ds
in
clc
or
push
imul
dec
dec
andl
or
arpl
jbe
xchg
aas
pusha
cltd
stos
push
ret
push
adc
and
mov
mov
mov
inc
xlat
stos
add
xor
sub
add
and
push
sbb
or
rorl
and
and
hlt
lea
inc
push
ret
arpl
dec
push
jge
pop
jmp
into
add
cmc
xor
mov
outsb
sbb
mov
push
and
add
in
jbe
ret
orl
jns
adc
add
adc
xchg
mov
mov
push
lea
sbb
mov
pop
cld
cmpl
inc
out
adc
jg
lret
push
rorb
dec
mov
stos
fstl
fidivs
lea
mov
popa
jne
jb
call
add
or
lock
or
jge
subl
fisttps
adc
push
call
sbb
aaa
adc
sbb
aad
or
sub
or
mov
push
or
or
xor
mov
or
loop
ds
mov
cmp
cld
adc
sub
orl
dec
push
test
inc
jo
scas
add
sbb
addr16
sub
jno
adc
push
push
push
dec
sarb
into
inc
aam
test
jle
or
xchg
je
sbb
inc
and
and
mov
sbb
add
push
iret
inc
ss
sbb
push
and
sbb
jo
arpl
repnz
push
fisubs
cmp
or
fpatan
stos
sub
mov
andl
xchg
pop
push
ss
dec
stos
mov
xorb
push
mov
fsubs
add
xor
std
cmp
movsb
push
loop
lahf
and
loope
rcrb
push
push
xchg
inc
rorb
int
mov
sbb
sub
add
inc
pop
push
icebp
test
mov
jp
cltd
jne
inc
loope
seta
xor
and
jb
jbe
xor
adc
cmp
cmp
jno
sbb
inc
pop
inc
or
cwtl
inc
in
mov
movsl
jmp
ds
ds
cmp
mov
pop
mov
cmp
fsubs
mov
dec
fstp
mov
jg
movzbl
push
mov
shr
adc
push
push
rcll
push
popa
sub
orb
sub
push
sar
sbb
push
sbb
dec
xor
aaa
leave
jne
cmp
mov
lds
dec
outsl
and
cmp
sbb
bound
add
inc
out
popa
push
gs
pop
adc
adc
xchg
int
and
pop
ds
loopne
mov
xchg
orl
dec
cli
es
test
mov
aaa
sahf
mov
and
dec
jo
call
xchg
sub
imul
nop
fs
push
fbstp
add
shufps
pop
cli
out
push
stos
movsb
subl
iret
mov
jg
xchg
in
push
push
jecxz
sbbb
sbb
dec
adc
and
adc
cmp
add
fidivs
dec
test
in
mov
sbb
adc
or
dec
jl
push
push
push
cmp
push
movsb
sbb
sbb
mov
ja
neg
xchg
iret
mov
or
push
jecxz
cmp
mov
pop
mov
inc
lahf
ja
mov
dec
or
adc
jbe
jno
push
mov
push
rorb
notb
add
insb
mov
cmp
jne
and
inc
pop
adc
mov
ret
add
jmp
adc
lret
push
add
std
sbb
cmp
loop
or
pop
xchg
aam
hlt
or
je
mov
movl
inc
sub
mov
out
fistpll
out
test
faddl
jo
push
jnp
xchg
popl
add
add
sbbl
fcomps
jg
sbb
cmp
je
dec
cld
add
push
movb
in
rcrl
mov
push
sub
mov
call
xor
icebp
or
enter
fldl
or
fbstp
mov
mov
cmpsb
fs
mov
jo
push
hlt
mov
incb
pop
push
call
in
cmp
xor
sbb
jnp
mov
popa
scas
xor
enter
xchg
add
xchg
fiaddl
shlb
out
shll
test
cs
push
call
call
arpl
lock
and
push
sub
mov
repz
push
lea
push
inc
push
lods
cwtl
lcall
cmpsb
push
lods
add
es
jmp
fcmovbe
cmp
adc
or
and
push
cltd
adc
dec
lahf
adc
mov
jno
or
test
sbb
inc
xchg
out
inc
cmp
or
adc
pop
jmp
shlb
jge
dec
mov
add
xchg
je
jo
sub
sub
sub
out
or
lcall
sub
or
add
and
ljmp
ret
mov
sub
jle
cltd
sbb
or
cmp
hlt
xchg
cmp
push
xchg
repnz
repz
xchg
gs
or
addr16
sbb
and
xor
xor
or
dec
hlt
add
fistpll
mov
push
or
jg
cmpb
mov
lock
xor
daa
out
aad
or
or
call
push
daa
push
push
sbb
mov
aas
test
push
orb
inc
or
xor
fwait
add
lret
pop
and
cmpl
fistl
psrlw
push
push
outsb
test
mov
pop
sub
xor
push
and
popf
mov
dec
pop
sbb
inc
mov
insb
jecxz
and
jno
xor
inc
jge
jmp
mov
adc
dec
jnp
movb
sub
cmc
mov
inc
or
add
add
and
test
and
pop
pusha
dec
cmp
xor
or
adc
aas
fdivrp
pop
xor
in
cli
lods
pop
mov
test
movl
out
push
lea
adc
or
pop
fdivs
mov
mov
lods
mov
pop
mov
push
push
jb
add
shrb
push
pop
or
pop
punpcklbw
cmp
insb
in
cmp
nop
push
sub
cwtl
sbb
sbb
int
incb
mov
add
push
mov
repz
sbb
push
dec
movsl
in
sbb
adc
repnz
aam
push
push
add
adc
or
push
andb
sbb
push
xor
lods
jmp
dec
fstps
lahf
dec
fwait
push
icebp
pop
xor
movsl
inc
or
xor
inc
push
dec
adc
xor
sub
and
sub
xchg
cmpsl
out
sub
inc
dec
dec
xchg
sbb
sbb
push
add
dec
push
jp
sub
lcall
daa
xor
out
inc
push
add
inc
fcos
lcall
xor
push
orl
shrb
pop
clc
nop
adc
daa
push
popf
add
sub
lea
dec
pop
mov
inc
popf
dec
clc
dec
iret
cmp
jne
in
add
repz
mov
mov
dec
or
popa
pop
out
dec
dec
hlt
ret
or
ror
sub
repz
mov
push
pop
and
xor
movsb
je
sub
les
gs
inc
adc
mov
fstpt
lcall
cmp
loopne
sbb
xchg
mov
rolb
jns
adc
cmpl
pop
lea
cltd
out
fcoml
lret
push
adc
and
cmp
push
sbb
adc
adc
cmp
sbb
dec
sub
pop
addl
mov
xlat
mov
jg
bound
cmp
pop
mov
dec
mov
ret
pusha
test
ret
es
fadds
and
aad
sbb
dec
call
fsubr
pop
mov
push
push
cmp
add
sub
add
incb
sbb
inc
jnp
push
sub
cmp
add
fidivs
sub
fldcw
lret
fsubp
scas
arpl
leave
push
adcb
ljmp
jecxz
pop
adc
push
and
inc
insl
lahf
sbb
push
jae
inc
in
dec
mov
bnd
repz
jb
push
dec
push
add
out
inc
sbb
xchg
adc
insb
cltd
mov
in
adc
adc
sbb
insb
inc
loopne
lock
or
add
and
scas
adc
cmpsl
sub
hlt
push
pop
mov
pusha
add
or
mov
lahf
and
xorb
sbb
cmp
sbb
add
in
fs
aam
pop
aam
hlt
cmpsl
pop
xchg
mov
adc
es
jbe
lea
dec
cld
test
sub
or
and
adc
cld
mov
imul
adc
push
push
aaa
sub
sbb
dec
loope
imul
idiv
adc
sbb
push
fs
dec
adc
pop
sub
jecxz
push
push
pop
cmp
inc
and
stc
mov
rcr
push
push
in
mov
mov
inc
adc
jns
movsb
push
sbbl
dec
pop
clc
add
push
xor
std
add
jne
ss
push
rolb
cmp
pop
ret
shlb
jae
push
stos
and
push
mov
orl
testl
sbb
cmp
fstl
cltd
fstpl
add
jae
push
data16
stc
push
mov
nop
fs
jmp
test
loopne
loopne
cwtl
popa
fadds
cwtl
rcrb
stos
ja
dec
or
xor
mov
pop
add
fldt
test
or
pop
sub
push
fldln2
sbb
xchg
sub
pop
or
and
dec
sbb
jg
xor
jge
jbe
xchg
adcl
mov
push
cli
xor
jnp
sbb
cmpb
sbb
hlt
pop
inc
sbb
fmuls
or
lods
pop
aaa
adc
fildl
or
and
lea
push
enter
rcll
cmp
push
lahf
sbb
mov
lods
adc
aad
or
dec
inc
pop
inc
pop
and
or
jo
jl
test
scas
add
fs
cmp
mov
add
jmp
mov
push
fcoms
xchg
and
push
fsubrl
mov
add
in
inc
loopne
xor
test
hlt
mov
mov
dec
lcall
inc
jo
jmp
test
add
data16
pop
jmp
inc
sbb
sub
xor
or
adc
adc
es
cmp
lds
mov
int3
imul
sarb
or
mov
cmp
add
add
and
xchg
sbb
testl
mov
pop
in
and
and
loopne
je
push
lsl
mov
cld
imul
in
scas
cmpsl
sub
jmp
sbb
push
mov
adc
add
andb
aas
jl
mov
imul
test
adc
lret
aad
fst
sub
sub
leave
adc
and
test
jns
sbb
nop
out
push
cmp
je
cwtl
adc
xchg
lret
add
test
inc
into
mov
orb
rolb
js
lods
repz
mov
pop
jecxz,pt
add
xchg
add
fnstenv
pop
lea
cmp
jne
cmp
aaa
sbbl
add
pop
lahf
js
std
cli
dec
inc
add
popf
ss
push
push
push
dec
cmp
imul
movsl
inc
mov
and
leave
fisubrs
jg
scas
mov
xchg
arpl
push
push
mov
cmp
test
mov
mov
mov
jns
js
mov
mov
jle
xchg
sarb
jo
mov
inc
bound
sarl
jge
iret
rorb
and
ficoms
mov
inc
bnd
sbb
leave
dec
add
jmp
sbb
pop
cmp
sbb
add
and
aaa
clc
pop
js
test
xchg
lea
add
scas
out
add
jae
add
xchg
jbe
sbb
mov
lret
bound
or
mov
iret
in
push
push
ret
dec
cmp
test
push
sbb
call
mov
cs
mov
inc
mov
je
pop
mov
mov
arpl
dec
cmc
mov
in
mov
jne
mov
je
push
add
sub
or
fcoms
pop
mov
and
and
xlat
subb
sub
in
sbb
sbb
test
or
add
inc
adc
iret
cmc
sbb
jge
or
push
and
or
jne
lcall
adc
mov
jne
mov
cltd
xchg
mov
mov
es
dec
nop
loopne
pop
jb
loopne
mov
pop
fnstsw
jmp
or
pop
xor
scas
mov
pop
ret
jle
test
sub
inc
push
xor
add
cmp
inc
mov
test
stos
hlt
pop
cmpsl
mov
xor
jmp
sbb
or
add
sub
push
mov
fsts
cmp
fdivs
mov
cmp
or
inc
stos
mov
mov
mov
stc
sahf
imul
and
fldl
jecxz
jb
push
addl
js
jns
push
push
dec
mov
jb
xchg
sub
add
adcb
test
jp
adc
adc
mov
jl
adc
cmp
mov
mov
rcl
jns
std
movb
fadds
push
pop
sbb
cwtl
roll
mov
xor
or
fsubl
xlat
imul
xor
jns
mov
mov
cs
dec
mov
subb
and
cmp
dec
je
cmp
pop
sbb
adc
dec
cmp
pop
or
add
add
sbb
or
push
mov
mov
not
shlb
sub
mov
nop
and
cmc
mov
vorps
in
mov
cmp
jne
cli
stc
jb
or
ss
add
cmp
jae
cwtl
add
into
mov
imulb
enter
stos
add
ja
push
push
push
sbb
or
inc
js
mov
jmp
int3
call
pop
ret
and
xor
cmp
jb
outsl
sbb
fstpt
outsb
add
das
call
inc
or
or
pop
add
aad
jle
add
jno,pt
cs
mov
push
aaa
int3
mov
mov
mov
jmp
iret
gs
adc
push
movb
lods
loopne
xchg
xchg
or
mov
push
and
aad
cmp
lods
sbb
inc
xor
mov
loopne
push
sbbb
out
inc
inc
and
in
sub
jle
dec
or
add
lea
and
xchg
cmp
pop
cld
and
ds
xchg
add
adc
inc
or
sub
add
xchg
push
cmp
cs
xchg
sub
popf
mov
sbb
push
scas
lock
loop
mov
mov
xchg
test
loop
sbb
add
adc
pop
call
xorb
cmp
cwtl
je
cmp
mov
sub
mov
fwait
or
inc
rcll
push
sub
adc
jbe
je
jns
sub
inc
pop
or
dec
or
scas
jo
fs
aas
popa
push
adc
dec
or
dec
cmp
cmp
clc
pop
push
inc
call
rorb
mov
add
dec
or
push
or
cli
inc
xchg
dec
pop
adc
inc
shlb
outsb
mov
mov
rorl
stos
andps
push
leave
xor
repnz
adc
xor
or
sbb
add
sbb
scas
leave
add
insb
and
cmc
jge
add
pushf
xlat
jg
xor
jo
sub
mov
testl
sbb
stos
mov
or
sub
pop
add
lock
je
mov
jge
sub
mov
lods
sub
inc
hlt
adc
lds
test
dec
test
inc
pusha
mov
jg
stos
inc
cmp
mov
arpl
sub
sarb
sbb
mov
and
add
ds
adcl
dec
mov
inc
mov
addb
xchg
inc
push
push
loope
repz
adc
xor
mov
add
sub
push
cmp
sub
push
push
adc
dec
push
push
mov
mov
fildl
and
lea
or
addr16
lret
adc
and
rorb
mov
test
adc
repnz
adc
adc
push
pop
and
mov
mov
pusha
leave
adc
aam
sub
rclb
push
dec
xorb
enter
pushf
jmp
sbb
pop
iret
addr16
mov
sub
cltd
add
leave
fwait
add
add
leave
jae
add
add
jg
add
adc
adc
adc
sbb
nop
ret
or
mov
mov
sub
lcall
xor
or
sbb
add
add
nop
lret
add
movsb
xor
or
xchg
add
sub
add
inc
sub
xor
cmp
cmp
xor
inc
and
cmovbe
test
xor
sbb
movsl
mov
icebp
inc
cmp
mov
and
jno
mov
mov
rcrb
daa
cmp
xchg
xor
nop
and
rol
sbb
aam
js
jne
mov
add
dec
mov
or
mulb
dec
adc
sub
pop
inc
cmp
sbb
sahf
in
popa
and
push
pop
pop
mov
inc
daa
and
sti
cmp
mov
out
and
sbb
pop
push
and
or
pop
ret
ljmp
ret
mov
push
mov
sbb
dec
push
sbb
pop
push
int
rcrb
push
int3
push
rcrb
enter
int
les
or
std
or
or
imul
inc
xchg
or
inc
or
data16
or
sub
xchg
cmp
xor
xchg
sub
xchg
data16
and
xchg
data16
add
data16
add
sub
xchg
adc
or
add
data16
cmp
sub
stos
add
add
cld
or
scas
cld
add
inc
repnz
add
add
addl
add
das
imul
addr16
movsl
icebp
push
mov
add
xor
add
add
inc
xchg
cmpsb
sub
mov
jnp
or
pop
jne
sbb
inc
js
fucomi
sbbb
dec
std
mov
dec
push
enter
pop
pushf
adc
pushf
cmc
stos
and
mov
ret
daa
stc
jne
icebp
xchg
int
and
adc
movsl
xchg
add
xchg
imul
push
cmp
sbb
push
cmp
rolb
mov
fs
punpcklbw
test
add
mov
loopne
and
pop
mov
mov
add
pop
push
or
les
outsl
and
sub
jbe
sub
and
xor
loope
bound
or
sub
imul
push
add
jecxz
and
push
mov
dec
jmp
and
xchg
sub
adc
xor
pop
sub
adc
push
test
lea
adc
sbb
sbb
sbb
filds
cmp
dec
pop
mov
push
or
dec
mov
test
cmp
imul
dec
push
pop
je
jb
push
or
mov
ret
call
clc
mov
loopne
xchg
inc
sub
jmp
int3
rcrb
aaa
jne
leave
cmc
cmp
in
std
jle
loop
cmp
sub
or
in
cld
sbb
mov
lods
or
repnz
orb
dec
test
insb
popa
test
sbb
sbb
push
sbb
enter
sbb
adc
in
and
rcll
in
adc
push
add
hlt
and
lds
inc
js
lock
sbb
ds
mov
sbb
test
std
push
push
mov
lahf
adc
rcll
and
out
sub
dec
or
je
lods
into
es
add
aam
push
inc
mov
cmc
pop
mov
add
rcrb
orl
xor
and
xchg
mov
je
lret
dec
subb
clc
jns
gs
dec
push
push
and
and
sbb
and
sub
stc
clc
add
or
pop
shlb
mov
push
pop
fstpt
lea
push
bound
or
nop
push
dec
add
fildl
loopne
movl
in
pop
cld
in
fs
mov
cmp
or
call
sub
not
shrl
dec
mov
inc
cwtl
inc
repnz
movsb
and
mov
mov
nop
jg
jb
xor
adc
push
in
jge
add
mov
lods
or
sti
dec
mov
push
inc
fadds
pop
jnp
or
fcoml
loop
js
cmp
inc
jns
push
push
sbb
mov
mov
cmp
cmp
call
dec
mov
loopne
in
or
mov
push
mov
dec
shll
sub
push
pop
adc
pop
icebp
sub
js
or
in
and
cmpsl
sub
in
mov
mov
cmp
lea
add
sub
rorb
dec
mov
or
out
sahf
xchg
xlat
sarb
ret
inc
mov
pop
dec
lcall
sbb
rorl
popl
xchg
or
cmp
add
xchg
fdiv
call
mov
iret
fs
test
pop
xorb
mov
addr16
mov
mov
dec
jg
idivl
pop
push
cmpb
push
ficompl
cmp
xchg
inc
sub
pop
fimull
adc
imul
xor
jnp
or
dec
jo
sarb
clc
jl
adc
movsl
sbb
xchg
lahf
orl
pop
leave
mov
in
ffreep
xchg
mov
cmp
mov
jo
repz
push
dec
insb
or
pushf
or
mov
jge
jae
push
and
sbb
sarl
or
or
jg
jle
sbb
push
imul
les
push
mov
sub
and
mov
insl
pop
and
nop
inc
ljmp
push
mov
add
xor
push
movsb
shrl
push
adc
adc
inc
outsb
cmp
add
jo
push
xor
mov
jb
pop
xchg
sbb
inc
in
mov
cmpl
rcll
insb
clc
fs
add
dec
add
pop
mov
mov
jmp
xchg
jne
xchg
or
jo
cmp
dec
or
or
inc
mov
mov
in
and
sub
sub
mov
inc
cmp
add
jno
mov
dec
sub
sub
and
insb
sub
adc
ret
jno
orl
mov
or
xchg
dec
adc
pop
pop
inc
adc
pop
adc
les
jmp
jmp
or
cmpl
hlt
lods
mov
je
adc
mov
adc
cmp
test
push
cmp
jno
inc
inc
xchg
ja
and
inc
fisubrs
push
dec
pop
mov
leave
inc
dec
inc
cmp
adc
pop
adc
xor
js
stos
add
add
je
push
cld
popa
mov
sbb
rcrb
dec
les
mov
jo
xor
mov
pop
and
nop
push
orl
lods
jae
xchg
sbb
push
mov
mov
pop
push
jb
jl
mov
lret
nop
add
xchg
int
jno
popf
and
jb
cmp
sub
fwait
add
xor
dec
sbb
or
es
xchg
or
sub
je
lock
cmp
cmp
js
xorl
in
popa
pushf
adc
pop
dec
ss
and
push
ror
xchg
sbb
push
dec
pop
xchg
and
clc
push
mov
push
push
rolb
sbb
sbb
sub
in
xchg
adc
sbb
adc
push
sbb
xchg
mov
lahf
jns
push
push
jle
addl
inc
fs
lret
sbbl
adc
sbb
xchg
add
sbb
jns
sbb
inc
push
add
add
xor
and
mov
jge
pop
push
fdivrs
sub
cltd
cmp
xchg
dec
data16
dec
pop
push
lods
and
cmpsb
cmp
sbb
lret
push
sub
adc
xor
aad
das
imul
adcl
sti
and
pop
dec
insb
push
sub
push
dec
mov
adc
adcb
and
cmp
test
adc
pushf
lods
inc
mov
sub
mov
loop
js
orl
xchg
ret
push
sbb
dec
or
imul
or
hlt
pushf
mov
sbb
cmp
mov
cs
stos
and
mov
and
pop
or
add
adc
and
ljmp
jmp
lock
or
jge
push
clc
jl
mov
add
adc
jle
xchg
or
or
fmul
das
add
stos
mov
inc
pop
or
adc
in
fwait
adc
sub
test
das
or
lahf
leave
ret
sbb
pop
and
add
fsubs
adc
mov
fistpl
ja
cmp
adc
sbb
cmpsl
cltd
mov
xchg
push
cld
or
pop
pop
outsb
push
dec
mov
mov
inc
js
add
orl
jle
pop
cwtl
sub
jl
nopl
jg
scas
mov
je
or
adc
jns
bound
push
fdivrl
jmp
cmpsl
add
add
pop
xor
xchg
xchg
xchg
sub
cmp
cmpb
mov
add
inc
sub
or
push
cmp
mov
xor
lea
jmp
iret
sub
xchg
cmp
subb
out
js
push
mov
jle
xor
xlat
adc
inc
adc
add
add
loopne
stos
cwtl
adcl
fadds
cmp
push
adc
sub
mov
mov
mov
dec
imul
cmp
pushf
clc
test
into
add
push
stos
pusha
pop
sahf
jns
insl
pusha
enter
xor
sub
mov
or
push
pop
je
popf
js
hlt
mov
mov
lahf
ss
add
sbb
cmp
sub
nop
push
and
adc
mov
xchg
popf
popa
stos
mov
push
add
sbb
cmp
es
jo
adc
pop
mov
jle
cmpsl
push
push
sbb
and
adc
push
stos
incl
iret
test
jne
and
ficomps
cmp
mov
insl
sbb
fucomip
mov
pop
sub
pusha
shll
addl
and
or
pop
and
fmuls
add
push
adc
mov
pop
xchg
aad
cmp
fdiv
pop
or
add
push
in
push
movsb
outsb
punpckhbw
mov
jmp
lods
cwtl
inc
xor
jno
and
mov
xorl
insb
xchg
jns
add
adc
in
mov
jmp
iret
rol
jmp
push
cli
sar
aam
and
mov
cld
xchg
les
std
cmpsb
pushf
or
rol
push
imul
sbbl
sub
inc
cmp
sbb
sbb
je
or
mov
ret
pushf
mov
dec
in
subl
mov
je
and
sub
cmp
xlat
cli
dec
popf
sbb
and
or
sub
mov
pop
and
mov
add
icebp
mov
or
jmp
fstl
cmpsb
fdivrl
adcl
loopne
or
mov
add
mov
mov
push
jae
mov
loopne
fistpl
xchg
je
test
pop
pop
push
sub
adc
jb
pop
pusha
mov
adc
lods
adc
jb
adcl
xchg
push
add
xor
dec
dec
push
sub
sub
xchg
adcl
je
lret
incb
jle
cmp
jg
mov
xchg
out
fisttps
lahf
push
clc
es
addl
nop
push
inc
push
push
inc
sbbl
push
add
rolb
jae
adc
pop
inc
cmpsl
nop
sbb
dec
and
nop
sbb
jae
cs
or
sub
pop
sbb
das
xor
in
sub
insb
fs
cs
insb
sbbl
cmp
nop
inc
inc
add
add
cmp
add
addl
xor
nop
sbb
pop
and
or
mov
xor
fiaddl
fs
and
xor
and
sub
dec
add
ss
or
stos
pop
push
js
dec
and
cmp
xchg
lret
jl
dec
mov
adc
inc
dec
je
call
xchg
mov
sahf
andl
out
cmp
lahf
dec
jle
mov
push
je
fidivrl
mov
lods
dec
pop
jmp
adc
lds
xor
adc
pop
lret
jl
mov
les
cmp
jb
aaa
xchg
and
je
icebp
dec
inc
das
lahf
mov
nop
sbb
orl
add
test
sub
inc
pop
pushf
psrld
inc
push
cmp
mov
mov
movsb
pop
mov
sub
frstor
mov
pop
push
and
ja
push
jp
push
dec
imul
mov
mov
xor
lds
or
pop
loop
mov
inc
jmp
sbb
dec
xor
push
cmpl
adc
cmp
insl
and
test
sbb
pushf
xchg
mov
enter
push
push
and
ss
pop
fistpl
sti
inc
jmp
xchg
lock
ret
shlb
or
jmp
stos
out
sub
mov
xchg
sub
test
sub
inc
pop
sbb
cs
xor
and
ret
das
testl
xchg
add
add
push
pop
ss
push
call
dec
xor
jbe
mov
adcl
jl
mov
push
xor
addl
add
cmp
ret
mov
lret
push
push
add
push
sarb
xor
ret
or
add
lret
or
inc
shl
fs
push
int3
adc
mull
xchg
dec
ja
fbld
add
loop
push
dec
or
cs
sbb
or
mov
mov
icebp
movsl
jmp
lock
rcll
pop
jecxz
repz
test
add
or
push
lds
xor
jns
push
das
or
jae
test
int3
adcl
ret
inc
add
adc
jecxz
gs
out
inc
leave
mov
xor
mov
jb
add
and
or
mov
push
push
in
add
scas
xor
scas
or
mov
dec
add
les
push
insl
mov
sub
aam
arpl
pop
xchg
and
or
mov
push
mov
out
mov
es
imul
xchg
mov
jmp
in
fimull
mov
add
push
push
cld
sbb
push
jno
add
sbb
cmp
addr16
and
je
pop
mov
enter
push
popa
mov
test
shll
mov
sbb
ret
pop
mov
or
insb
sub
arpl
pop
or
je
push
pop
push
inc
xor
out
dec
fisubs
daa
pusha
cmp
mov
xchg
xor
jbe
pop
cltd
xchg
inc
or
and
pop
addl
les
push
les
mov
pop
add
or
repnz
shl
call
add
mov
xor
push
and
pop
loope
mov
or
mov
push
arpl
sarl
sub
or
daa
push
fs
inc
and
push
mov
fildl
add
icebp
das
idivb
test
das
push
int
mov
pop
xor
inc
xor
pop
lds
mov
pop
push
mov
ret
push
dec
jne
mov
xchg
lea
lods
mov
test
ds
fisubs
sub
cmp
jne
cmp
add
adc
pop
mulb
ds
in
dec
push
add
push
aaa
stc
lods
and
add
ficomps
sbb
push
js
dec
mov
sbb
push
sbb
xor
add
je
and
xchg
and
lods
mov
bound
mov
sub
cmp
jae
nop
les
sub
xlat
sbb
and
lock
sub
rolb
xor
cmp
test
pop
xchg
xchg
sbb
push
cmp
mov
mov
pop
std
lock
out
pop
les
js
mov
les
dec
and
xor
add
add
push
xor
dec
movsl
jae
pop
mov
jnp
push
ds
adc
sub
push
push
jnp
fs
bound
push
popa
jne
push
dec
mov
xchg
mov
sub
daa
sbb
test
xor
dec
lock
aam
push
in
or
xor
dec
add
sbb
inc
and
daa
adc
pop
inc
jne
cmp
int3
pusha
add
dec
inc
inc
sbb
in
push
push
sbb
pop
add
inc
push
push
cwtl
dec
push
push
fistpll
outsl
adc
inc
sub
adc
add
clc
jno
push
lods
push
ret
dec
sbb
outsl
mov
in
mov
add
pusha
mov
and
ds
jecxz
data16
in
cmp
mov
iret
repnz
mov
shrb
pop
adc
adc
jmp
cmp
push
lock
xor
pop
cmp
jne
movsb
push
repnz
idivl
dec
cmpsb
adc
mov
lret
enter
inc
adc
nop
leave
dec
enter
push
push
mov
push
hlt
and
xor
outsl
mov
jp
jle
rorl
inc
xor
mov
daa
mov
push
lods
mov
shll
leave
into
push
jge
xchg
adc
mov
lea
ret
cmp
inc
cld
mulb
cmpsb
push
fcoml
sbb
add
andb
add
mov
aad
push
sbb
and
sbb
nop
jle
movb
sub
inc
out
mov
mov
and
rolb
out
mov
ds
mov
les
xchg
movsb
stos
pop
pop
call
xor
mov
inc
sub
add
pop
jecxz
aam
push
xchg
jno
xchg
push
je
xchg
sub
jmp
popl
fsub
daa
lods
adc
pop
push
cmp
imul
mov
jbe
xchg
cs
cmp
jae
out
xor
add
cwtl
push
aaa
lea
dec
sub
dec
icebp
or
adc
sti
push
add
jge
jns
mov
test
shlb
pop
push
or
and
push
imul
jmp
push
ljmp
call
and
ret
sbb
adc
test
sbb
data16
aam
add
pop
xor
or
push
add
in
sbb
inc
popf
mov
leave
sbb
or
mov
aaa
int
test
push
test
enter
adc
add
mov
adc
sub
or
enter
push
mov
or
mov
mov
test
mov
cmc
sub
cltd
ljmp
nop
add
add
adc
jge
insb
pusha
push
push
mov
mov
jp
sbb
jle
popa
dec
jo
cmp
mov
mov
cmc
stc
jl
pop
pop
and
mov
mov
dec
out
test
and
sub
arpl
lret
xor
dec
push
sub
mov
jb
pop
aaa
shr
cld
data16
test
sbb
or
mov
in
xor
jge
mov
fadd
push
mov
sbb
dec
xchg
addb
ret
pop
pop
and
jle
stc
movswl
addl
jbe
push
xorb
jb
into
cmpsb
adc
lea
int
testb
mov
push
and
or
xlat
shrb
ret
call
mov
subl
int
mov
xchg
fildll
ja
popa
fcomp
and
rolb
aad
sub
push
test
sbb
inc
dec
fldl
gs
ss
aas
adc
and
push
adc
adc
or
andb
sbb
jle
push
adc
adc
sbb
sbb
stc
adc
mov
dec
pop
aas
lret
jno
inc
test
je
xchg
ret
jmp
cwtl
and
ja
sub
js
js
lret
popa
lcall
jae
pop
mov
loopne
jbe
js
push
push
out
push
sub
movl
inc
orl
adcb
pop
mov
cmp
in
rorl
pop
shlb
xchg
arpl
rorb
bound
add
push
or
mov
inc
lea
jno
add
jne
outsb
sub
sub
pop
mov
lcall
daa
in
xchg
sub
mov
add
push
pop
lea
push
jp
pusha
out
pop
fwait
insl
mov
push
jo
mov
mov
sub
and
incb
or
and
add
outsb
and
clts
and
les
mov
inc
mov
test
pop
inc
inc
add
sbb
sbb
mov
xor
pop
inc
dec
ljmp
or
cmp
adc
int3
pop
clc
push
cmc
out
or
jmp
push
test
or
jl
sbb
js
push
stos
xchg
loopne
inc
rorb
insb
ss
mov
cmp
pusha
ret
ss
mov
push
inc
pop
add
xchg
pop
dec
push
or
rcrl
add
or
xor
adc
sub
push
jae
push
or
sub
test
or
sbbl
add
inc
adc
cmp
imul
inc
nop
faddl
pop
add
mov
add
xor
add
add
or
scas
sar
nop
inc
les
cmp
jne
cmp
adcl
hlt
cmp
nop
mov
cmp
xchg
mov
and
sub
fsubl
jmp
mov
push
or
sub
add
ret
lock
sub
mov
add
fwait
sub
add
outsb
push
mov
jno
jnp
push
mov
xor
mov
dec
sbb
jnp
lods
dec
xor
jae
lods
sub
cld
mov
lea
and
test
test
aad
jb
pop
pop
or
jle
sub
dec
orl
pop
jns
stc
and
and
xchg
push
rcrb
es
sub
flds
dec
add
sub
dec
mov
fsubs
and
push
cmp
repnz
push
jmp
add
femms
mov
lea
xchg
push
adcb
xchg
mov
adc
dec
cmp
jle
push
cmc
cmp
inc
pop
pop
es
lods
add
adc
test
repz
cmp
inc
outsb
cmp
or
insb
lahf
push
loop
dec
mov
dec
call
mov
ja
mov
cmp
cmpsl
push
pextrw
jns
pop
nop
push
jae
and
adc
cmpl
cmp
sub
pop
cmp
jp
mov
aaa
and
adc
cmp
pop
ficomps
fs
or
dec
lcall
cmpsl
sarb
outsl
dec
add
dec
jne
out
adc
sbb
rorl
cmp
inc
int
ret
mov
and
movsb
jb
xor
addb
les
xchg
cmpb
xchg
mov
xchg
xor
les
arpl
cmp
xor
repnz
insb
fwait
lock
and
jne
orl
movsl
lock
mov
xchg
sbb
push
jle
or
adc
or
push
mov
sbb
adc
lcall
or
jmp
and
or
or
xor
cmp
or
shrb
sub
je
and
sub
xor
add
dec
xor
xchg
dec
ret
mov
push
add
push
mov
jmp
inc
fs
and
or
sbb
cmp
lods
dec
mov
test
loopne
nop
and
mov
pop
mov
test
pop
insb
cmpl
cmp
lock
hlt
mov
test
stos
enter
pop
sub
mov
push
adc
pop
and
mov
pushf
test
pop
pop
lds
mov
push
lea
fbld
int3
sub
int3
pop
push
jae
pop
add
dec
inc
or
mov
xorl
inc
in
pushf
pop
daa
ljmp
daa
push
in
pop
outsb
mov
sub
fmuls
cmp
xchg
mov
add
adc
inc
push
cmp
js
cmp
sbb
xchg
xor
mov
sbb
pop
dec
cwtl
adc
movsb
pop
dec
push
stc
lret
stc
decl
inc
push
inc
sub
jle
test
inc
cmp
inc
test
lea
add
jo
cmp
push
aaa
icebp
adc
mov
push
cmp
stc
adc
nop
push
mov
xor
ret
xor
popa
jno
dec
gs
addr16
and
jae
mov
jmp
sub
push
inc
pop
sbb
dec
shll
movsb
jno
test
dec
sahf
nop
dec
js
or
test
mov
lods
mov
dec
cld
pop
hlt
jo
leave
repz
stos
push
je
and
or
jo
fcomps
adc
push
es
or
test
cmp
ss
mov
or
mov
push
cs
loop
inc
test
in
roll
push
sbb
mov
xor
jb
loopne
ret
xor
fistpll
mov
add
lock
lret
mov
push
push
inc
adc
lea
mov
push
add
cmp
jo
jb
lea
data16
pop
xchg
sbb
pop
je
xchg
popa
xchg
pushf
and
repnz
push
xor
inc
or
add
insl
mov
sbb
rcll
push
cmp
inc
cmpsb
pop
push
push
test
ret
sbb
and
popf
adc
dec
movntps
mov
fs
sahf
and
dec
xchg
jb
shlb
scas
mov
and
push
pop
add
and
popa
sbb
nop
and
stos
in
push
and
call
adc
movl
adcl
sbb
xor
or
and
inc
or
inc
inc
add
dec
mov
xchg
xor
cmpb
or
jns
sub
sahf
cmp
inc
pusha
cmp
jb
stos
xorb
cmpsl
and
cwtl
pop
and
mov
and
daa
pop
inc
dec
xchg
insl
mov
sub
push
push
sub
cmp
sbb
and
lods
or
or
outsl
in
jno
xchg
cmp
cmp
ror
and
cltd
mov
xor
mov
xor
pop
push
mov
adc
jmp
jg
jnp
or
sub
add
add
dec
push
cmc
dec
das
sub
or
push
fstpt
dec
dec
stos
nop
mov
xor
sub
or
sbb
rcrl
and
pop
xor
cmp
nop
lret
push
push
dec
push
dec
lcall
xor
inc
adc
or
inc
sub
cmpl
ret
insb
scas
sub
lea
arpl
inc
mov
push
xchg
movsb
insl
iret
xor
enter
lcall
pop
test
pop
fimuls
adc
add
jb
mov
mov
xchg
lods
jbe
in
jge
fisubl
sbb
loopne
sbb
cmp
xor
cmpsb
pop
push
insl
and
push
add
mov
add
in
les
adc
aas
or
sub
pusha
pop
jno
sbb
mov
sbb
and
inc
cmp
sahf
notl
lods
xor
sbb
adc
xor
xor
adc
jg
lods
xchg
or
inc
mov
insl
add
sbb
jmp
or
jl
lahf
or
add
pop
adc
sbb
fstpl
push
adc
add
push
lea
fildll
sub
add
xchg
jnp
lods
mov
les
sub
xor
mov
jmp
aas
cmp
cmp
fwait
dec
inc
je
mov
mov
test
test
mov
inc
jle
add
subb
inc
adc
add
or
adc
push
adc
popa
mov
faddl
inc
sub
jg
add
add
out
push
sub
inc
orb
fwait
outsb
xchg
insl
or
subb
int
stc
inc
push
cmp
loopne
or
or
loopne
pop
test
adc
pop
icebp
adc
xchg
stos
adc
add
mov
sub
inc
xchg
dec
inc
arpl
outsb
inc
adc
sti
ud2
and
popf
pop
dec
sbb
call
and
lret
mov
test
adc
push
jmp
and
dec
gs
jmp
sub
ret
adcl
movsb
add
adc
xor
sbb
or
push
rcll
push
mov
adc
or
and
add
xor
push
add
inc
repnz
pop
push
bound
and
enter
push
or
add
add
xchg
push
or
sbb
xor
mov
push
or
lcall
add
and
sbb
hlt
sub
stos
call
jge
xchg
push
rcrb
cmpsl
mov
adc
xchg
sbb
xchg
out
inc
push
inc
and
dec
sbb
sbb
and
lods
dec
insl
sbb
add
add
jno
enter
ds
stc
sbb
push
jecxz
push
jns
lds
push
push
orb
inc
xchg
sbb
sbb
push
xor
aad
sbb
and
mov
cmp
movsl
push
add
xchg
push
dec
dec
push
add
sbb
dec
stos
inc
cmp
or
and
adc
inc
pusha
fdivrs
loopne
add
cwtl
and
loopne
xor
push
outsl
xchg
stc
sub
jg
inc
insb
cs
and
in
pushf
pop
or
xchg
or
sub
add
jns
outsb
daa
lods
nop
inc
je
daa
dec
sahf
fwait
adc
push
leave
mov
fwait
xor
popa
add
xor
mov
sbb
pop
adc
imul
pop
pop
dec
adc
flds
push
mov
adc
popf
inc
insb
in
dec
push
mov
mov
mov
nop
dec
enter
xchg
or
sarb
fisttps
ret
mov
push
push
jo
jo
mov
clc
je
mov
pop
jne
dec
shlb
xchg
lea
rcrl
dec
test
jne
pop
cmp
ss
fcomip
push
cmp
rclb
das
add
mov
pop
add
jb
mov
push
add
sbb
push
pop
push
add
pop
orb
xchg
mov
mov
sbb
je
adc
dec
jl
gs
shlb
aam
inc
popa
pop
push
cmpsb
inc
xor
xchg
mov
int
fsubrl
push
icebp
arpl
add
or
fldl
stc
pushf
and
dec
out
aam
pusha
movsb
xchg
cmpsl
je
aam
lea
adc
cmc
push
incl
bound
pop
in
add
lea
mov
ret
aad
jbe
test
push
dec
and
push
gs
xor
adc
jne
xor
jmp
pop
xchg
cmp
je
movl
push
cmp
cmpl
add
jbe
addb
cmp
xor
push
or
dec
xchg
cmp
cmpsl
test
sbb
adc
or
iret
push
loopne
mov
add
push
or
out
pop
sarl
or
xchg
cs
push
cmpsl
mov
mov
clc
inc
mov
push
dec
dec
int
sbb
adc
push
mov
xchg
cmp
pusha
aam
ss
insb
mov
push
enter
xor
aam
dec
lret
dec
cmp
leave
xor
or
push
leave
jae
or
out
add
inc
sub
leave
add
pop
or
add
fcoms
cmp
cmp
jl
adc
fs
mov
inc
xchg
stos
test
rcll
popf
pop
outsb
jmp
xchg
repnz
pop
push
mov
push
jmp
adc
in
and
mov
mov
cmp
jo
in
imul
subl
daa
sbb
int3
cltd
lcall
mov
sbb
dec
rcrb
nop
fistpl
cmp
sbb
fildl
push
cli
rcr
xchg
sbb
mov
enter
push
pop
xor
xchg
and
adc
and
repnz
iret
add
mov
cmp
es
enter
fdivrl
and
sub
sub
sub
add
xor
jnp
fsubrs
pop
subl
sub
xchg
xor
cwtl
or
cmp
cli
inc
cmp
cmp
pop
sbb
cltd
mov
dec
pop
sahf
pop
push
jbe
shll
fs
fsubrs
and
dec
das
aam
sarb
and
sbb
and
sbb
jbe
mov
jl
fs
dec
mov
mov
cs
cli
daa
adcb
adc
lock
js
loop
mov
jle
cmp
push
or
sub
or
push
add
xor
push
nop
jmp
scas
xchg
and
scas
enter
pop
mov
add
in
aam
dec
notb
cmpsb
inc
sub
cmp
sarb
test
sahf
cmp
lock
inc
adc
enter
sbb
xchg
add
sub
jo
cmp
xor
push
mov
sbb
movsl
xor
add
mov
inc
add
das
adc
cmp
xchg
cs
lret
sub
or
orb
inc
ss
mov
aas
push
sub
dec
add
inc
mov
jns
in
inc
clc
cmp
daa
xchg
hlt
inc
cld
lret
cmp
fcomps
daa
xchg
add
lret
mov
sbb
adc
and
inc
mov
inc
mov
dec
cmp
movsl
icebp
daa
decl
sbb
push
push
push
cmp
jo
sub
js
xor
pusha
xlat
xchg
inc
loopne
in
addb
sahf
or
mov
inc
movsb
bound
in
inc
lods
inc
push
mov
aas
movsb
mov
and
cmp
nop
scas
or
sbb
mov
adc
jne
pop
cmp
lea
sti
or
xor
stos
mov
push
test
add
lea
jge
xchg
je
loopne
xor
xchg
dec
push
xor
or
int3
xchg
xor
push
test
orb
loope
cltd
xor
push
xchg
xchg
jnp
sub
push
nop
mov
adc
push
imul
push
movsl
xor
insb
dec
cmp
xor
push
loop
or
sub
or
addb
fmuls
icebp
xchg
mov
cmpb
xor
pop
test
pop
push
dec
adc
shll
inc
movsb
mov
xor
mov
into
push
stos
adc
mov
dec
push
push
mov
add
pop
je
andl
orl
into
jg
inc
mov
adc
push
push
mov
pop
decb
sbb
cld
sti
cltd
pop
push
ja
mov
mov
xor
mov
push
sbb
dec
add
mov
xchg
push
pop
dec
adc
jns
mov
and
rolb
roll
and
pop
orb
add
inc
sub
imull
sub
dec
sbb
push
dec
mov
pop
addb
or
push
push
mov
sub
inc
jmp
dec
aas
push
ret
sub
insb
sahf
or
jns
sub
fadds
nop
and
and
cmp
es
es
dec
jecxz
test
adc
test
enter
sub
inc
dec
jnp
scas
mov
xor
cld
adc
or
and
fldl
dec
and
rorb
out
push
and
push
jo
popa
jmp
inc
in
add
inc
pop
inc
cmp
lock
mov
sbb
fwait
mov
cld
sub
add
xchg
pushf
sub
push
jne
add
orb
mov
sbb
xor
cmp
xor
sub
or
es
push
test
mov
mov
or
xchg
cmp
pop
cmp
inc
mov
cmp
and
insb
rcll
push
mov
push
mov
or
in
and
inc
add
sbb
pusha
fiaddl
cmp
mov
pop
roll
cld
iret
and
enter
cmp
pop
popa
xor
pop
sti
pop
mov
and
pop
mov
aaa
add
mov
je
pop
or
mov
xchg
in
pop
jae
fdivs
and
pop
mov
loope
or
jmp
das
leave
mov
cld
cld
add
sub
mov
paddusb
cmp
or
fistps
ljmp
js
jb
pop
imul
and
inc
leave
filds
and
adc
pop
mov
enter
ja
mov
mov
shll
push
adc
and
jecxz
push
adc
or
stc
cltd
push
aam
mov
jp
test
pop
push
stos
jae
lcall
sti
inc
pop
sbb
js
repnz
pusha
xchg
jo
icebp
pop
push
push
and
lcall
push
gs
and
in
mov
and
sbb
sub
jl
xor
or
adc
xchg
xor
adc
add
jno
int3
pop
jns
fiaddl
movsb
dec
push
xor
xchg
out
add
sub
add
jb
lods
aam
mov
movsb
leave
aam
and
int3
mov
ljmp
cwtl
in
clc
sbb
bound
cwtl
or
leave
daa
arpl
and
sub
sbb
adcl
or
sbb
rcll
mov
hlt
push
cmp
jae
in
xor
xchg
mov
cmp
push
jmp
int
xor
push
pop
fistl
mov
mov
lock
out
push
pop
inc
jne
mov
adc
in
roll
dec
cltd
pusha
or
ljmp
outsb
addb
and
ljmp
into
inc
adc
mov
test
add
cmp
xor
and
sbb
addb
sbb
push
jmp
push
adc
push
scas
cmp
mov
jo
push
sub
test
mov
mov
mov
push
lea
adc
outsl
add
adc
adc
fstl
push
sub
aaa
cmp
sbb
arpl
aas
sub
push
push
jmp
loope
daa
jne
push
xchg
xchg
jecxz
andl
pop
or
mov
mov
xor
inc
push
shrb
addl
inc
mov
push
xchg
pop
stos
inc
lock
and
mov
add
or
sarl
mov
pop
scas
arpl
cmp
or
pop
dec
in
sub
adc
push
dec
inc
int3
ss
inc
add
jo
mull
iret
xchg
mov
dec
or
push
adc
inc
pop
lea
dec
cld
push
pop
mov
rcpps
inc
dec
or
sahf
ficoml
mov
sbb
scas
daa
lods
xor
cmpsl
push
xor
imul
inc
mov
dec
sub
or
fists
outsb
and
pop
sub
or
cmpsb
add
sbb
sbb
jns
and
adc
and
adc
sub
mov
inc
test
test
or
inc
dec
jge
push
sbb
ret
in
xor
nop
cmpsl
fdivs
pop
stos
dec
adc
xor
push
mov
xor
push
push
mov
or
ljmp
rcll
adc
mov
push
arpl
inc
fwait
imul
mov
add
sbb
or
pop
dec
adc
lahf
ficoml
movsl
push
inc
sub
pop
adc
cmp
add
push
jp
in
adc
imul
int
push
add
fistpll
cs
and
mov
sub
popa
and
sahf
inc
inc
xchg
adc
mov
sbb
pop
and
loope
sbb
or
sbb
pushf
or
inc
cmp
xchg
add
mov
out
mov
inc
cmp
jae
mov
xchg
or
xor
sarl
je
inc
cmp
jl
and
mov
jnp
sar
shlb
sub
and
dec
or
pop
mov
and
test
push
mov
inc
ret
roll
dec
ret
and
pushf
add
fldl
orb
pop
insl
push
aaa
xchg
mov
cmp
sbbl
test
mov
add
mov
scas
lahf
inc
mov
dec
clc
sbb
add
sub
sti
lahf
ss
and
sub
cmp
jb
mov
fwait
ljmp
fsub
sub
mov
mov
rcr
sbb
pop
out
pop
dec
dec
into
xchg
pop
fdivl
fsubp
xor
fdivs
orb
add
pop
push
pop
adc
loope
or
icebp
xchg
leave
dec
and
add
push
test
aas
in
in
mov
pop
jnp
dec
ret
or
cmpb
add
sbb
xor
inc
add
sub
call
mov
flds
jo
add
jge
fwait
push
sub
sbb
pop
add
dec
xchg
imul
imul
xor
xor
add
sub
or
sub
lret
or
push
cltd
in
add
cs
mov
or
sbb
rcl
inc
ss
test
push
or
mov
jo
adc
and
pop
addr16
add
add
jg
test
inc
lock
xorb
fadds
loopne
mov
fisubl
cmp
xlat
sub
push
cs
sbb
insb
mov
sub
pop
push
or
mov
ljmp
add
mov
out
inc
xor
pop
hlt
ret
test
xor
inc
add
fadds
lahf
push
lea
sbb
lods
jp
lods
nop
mov
add
test
xchg
popa
mov
lods
cld
adc
mov
lret
mov
jbe
les
mov
sbb
push
push
xchg
add
dec
push
lea
sub
jns
lock
lea
push
mov
insl
add
add
in
lea
addb
jo
jp
je
test
icebp
dec
nop
sbb
in
sbb
fisttpl
xchg
enter
movsb
cltd
pop
in
in
inc
enter
push
mov
and
les
cmpsb
sahf
push
mov
mov
or
add
inc
cmp
test
sbb
test
xchg
addl
add
pop
push
leave
dec
test
clc
add
or
andl
mov
jg
mov
jne
rolb
mov
jns
and
sbb
mov
mov
push
testl
js
jp
add
out
add
shll
loopne
sub
inc
push
insb
lods
js
xlat
push
push
out
push
push
fwait
ret
xorl
aas
add
bound
insb
daa
sbb
loop
sbb
push
stos
dec
das
jne
lret
ss
push
cmpl
hlt
mov
sarl
call
je
cmp
je
cmp
je
cmp
je
push
je
mov
jnp
jle
mov
loopne,pn
mov
adc
sbb
pop
rclb
mov
add
pop
add
push
ret
sti
fistpl
pop
mov
fdivrs
inc
hlt
cli
or
loope
in
push
mov
jo
fs
mov
push
scas
sub
rclb
inc
ret
or
je
shl
xor
adc
ret
add
stc
pop
aad
lds
test
mov
aam
and
push
xor
adc
add
ljmp
icebp
clc
add
rorb
into
xchg
imul
adc
add
cmp
pop
mov
jmp
outsl
enter
adcl
nop
test
pop
sbb
add
push
sbb
add
or
mov
xchg
outsl
mov
mov
dec
lcall
push
lock
lods
sbb
addl
lahf
test
xchg
jge
jmp
jo,pt
popl
inc
fmull
push
test
adc
xor
fsts
cltd
int3
sbb
adc
pop
or
les
icebp
mov
pop
push
fisttpll
test
lret
jne
adc
pop
jg
mov
push
jg
movsb
sub
movsb
sbb
inc
movsb
add
movsl
mov
ss
nop
lret
std
mov
push
outsl
jb
movsb
call
mov
inc
mov
xor
xchg
add
push
and
pop
add
push
in
push
pop
addl
push
jno
scas
xchg
in
cmp
mov
jl
aam
mov
mov
adc
aad
les
push
adc
jno
xor
pop
mov
inc
int3
or
xchg
and
and
mov
and
dec
pop
je
xchg
aaa
cwtl
std
lret
sbb
cmpsb
mov
and
int3
mov
sub
pop
clc
hlt
sub
sub
rcl
and
add
cmp
xor
xor
fsubs
push
xchg
fsubl
pop
outsl
sbb
mov
add
xchg
icebp
xchg
jo
jp
insb
outsb
inc
add
mov
push
insl
pop
clc
and
sub
sarb
inc
xlat
mov
inc
add
push
dec
es
xchg
xor
xorb
mov
insb
rol
lahf
and
jnp
in
xchg
jbe
mov
jmp
inc
mov
inc
and
push
fstps
dec
push
loop
test
fiaddl
inc
adc
mov
pop
and
mov
mov
dec
aam
rolb
push
push
and
or
inc
fsubs
adc
or
adc
bnd
push
sub
inc
cmpsl
xchg
dec
sub
imul
test
aaa
inc
pop
xchg
cwtl
xchg
bound
inc
insb
xchg
lahf
out
imul
mov
pop
js
jl
add
jae
inc
int
push
ss
push
orb
test
scas
std
or
push
sbb
mov
shll
lods
or
popl
mulb
in
xchg
fmul
xorb
aam
jge
testb
je
xchg
add
xchg
add
adc
cli
outsl
aas
add
pushf
mov
jae
inc
insb
je
push
sarb
rolb
mov
fsubrl
push
stc
mov
pushf
cltd
test
push
pop
mov
int
push
jge
adc
mov
adc
add
mov
or
inc
rorb
aam
test
faddl
lret
gs
je
mov
sbb
jae
sbbl
int
or
aam
aam
cmp
je
push
daa
arpl
or
xor
jnp
pop
ds
add
js
pushl
roll
fsubl
mov
sbb
dec
cmp
push
sbb
inc
xor
mov
dec
or
mov
stos
ret
add
mov
add
jbe
mov
inc
sbb
xorb
dec
rorl
mov
push
push
adc
inc
mov
mov
or
pop
push
in
sbb
xor
push
fs
and
js
sahf
movl
xchg
xchg
xchg
xchg
push
test
xor
or
push
xor
dec
jmp
add
ret
mov
sbb
mov
jecxz
inc
repnz
pop
popa
inc
mov
mov
je
jae
in
add
pusha
fstpl
fnstcw
jmp
add
sub
inc
sbb
pop
addl
cmpsb
or
add
mov
test
or
add
rorl
loope
push
cmp
loopne
push
and
rorb
cmc
jl
andb
call
add
outsb
sub
mull
or
ret
sbb
sar
cmp
lock
xchg
fcoms
stc
push
outsb
insb
pushf
xor
dec
fs
mov
push
jl
sub
loope
rorb
dec
mov
or
out
lds
jne
jmp
mov
jne
int3
jnp
push
sbb
pop
adc
sbb
pop
aaa
inc
pop
push
xor
sub
and
jg
xchg
push
push
ja
rorb
int3
cmp
outsb
xchg
daa
push
rcrb
pop
imul
xor
movsl
inc
inc
push
incb
xorl
outsb
les
xor
sahf
inc
add
cmp
mov
jmp
cs
push
xor
mov
addr16
test
jo
or
inc
stos
sub
or
inc
sar
test
imul
or
mov
cmpsb
or
pop
js
xor
iret
add
repnz
add
cs
pop
cmp
mov
pushf
pop
adc
push
rclb
inc
or
in
addb
movsb
imul
sbb
stc
rorb
jle
mov
mov
sub
sub
ret
push
xchg
movsl
mov
lea
test
cmpl
dec
out
sbb
cli
push
sub
push
push
push
xchg
divl
mov
mov
push
push
dec
mov
int3
dec
sbb
inc
adc
pop
jo
out
sbb
and
or
and
inc
lea
adc
dec
ja
test
cmp
shr
pop
adc
aaa
sbb
jo
fst
sub
cmp
inc
mov
push
inc
shrb
out
push
jl
push
cmp
je
fbld
push
inc
dec
add
call
in
nop
or
pop
fs
inc
sub
rorb
out
or
fistl
pusha
addl
mov
invd
pop
mov
or
pop
and
inc
pusha
xchg
push
pop
mov
stos
ret
xchg
and
and
stos
jb
cmp
add
push
sbb
cmp
push
das
imul
xlat
es
jne
jo
and
jnp
sbb
jge
add
sahf
fisubrl
sub
pop
iret
int3
xor
cmp
pop
push
sahf
xchg
stos
push
xlat
mov
or
dec
cmpb
adc
adc
insb
movsl
aaa
push
cld
adc
es
cmpsb
add
mov
add
sbb
mov
mov
and
adc
stc
mov
pop
cmp
mov
push
idivb
pusha
ffreep
cmp
mov
cs
sub
das
mov
push
add
rol
enter
jns
push
pop
and
push
mov
or
dec
test
push
mov
ret
dec
push
das
imul
push
pop
xchg
push
or
mov
dec
sti
sahf
stos
imul
adc
pop
sbb
addl
jecxz
mov
adc
pop
addb
pusha
push
iret
stos
dec
call
push
or
sub
addr16
dec
testl
shl
jno
and
add
or
sbbb
inc
lcall
inc
adc
lock
call
pop
rcll
add
out
dec
mov
xchg
cmpsl
inc
add
sahf
sub
fiaddl
add
mov
mov
jmp
push
add
and
jp
mov
jno
push
popf
dec
xchg
mov
mov
xor
add
fs
inc
xor
lret
xor
pop
fdivs
xor
aas
test
mov
shll
lods
data16
dec
test
jns
stos
pop
or
xor
sub
sub
mov
xchg
inc
scas
mov
pop
pop
sbb
inc
add
pop
mov
outsl
add
mov
jbe
popw
lods
repnz
push
mov
xchg
fnstcw
and
dec
pop
jge
sub
test
push
loop
adc
sbb
sbb
add
inc
xor
pop
jne
mov
push
add
xchg
mov
in
mov
jp
rclb
push
lret
loopne
xchg
es
dec
movsl
or
add
inc
sub
pop
rolb
mov
testl
lcall
loope
add
dec
movb
bound
inc
inc
or
xor
and
sub
adc
or
adc
and
or
inc
sbbl
sbb
and
add
mov
sbb
das
jecxz
pusha
xor
aas
enter
es
push
mov
cmpsl
dec
movsl
orb
or
cmp
push
lock
lods
mov
sbb
test
inc
mov
dec
and
add
dec
jl
adc
pop
call
dec
scas
mov
push
pop
les
jmp
arpl
and
sbb
add
mov
iret
lahf
out
or
inc
test
mov
mov
mov
jne
cmp
jb
sub
jmp
push
dec
movzwl
jbe
mov
pop
cmpl
push
setl
movzbl
push
imull
popl
lods
stos
andb
adc
loope
les
sbb
adc
xor
xor
roll
mov
jl
add
jb
in
xchg
out
cmp
dec
push
push
mov
cmovbe
mov
push
push
adc
and
xor
xor
cmp
lea
lea
push
jmp
decb
lahf
add
sub
jns,pt
push
iret
test
xchg
pop
cmp
ret
add
adc
pop
and
push
mov
push
sub
mov
xchg
jb
cmp
test
adc
push
inc
lds
inc
pop
lcall
cmp
insb
add
push
pop
mov
pop
aas
ret
js
sub
push
push
push
or
xchg
mov
ljmp
mov
or
pusha
mov
pop
pop
leave
scas
sarb
inc
mov
push
rcrb
xorb
repz
pusha
mov
rclb
pop
adc
dec
xchg
mov
push
in
cwtl
mov
and
or
xchg
xor
cmc
xor
imul
push
cld
xor
cmp
mov
loopne
loope
loop
adc
jne
mov
xor
mov
xor
push
enter
inc
bound
adc
push
mov
cmp
mov
inc
aam
push
jae
mov
sbb
pop
lods
es
and
mov
xor
dec
dec
push
push
push
rcrb
sbb
test
pop
ljmp
inc
cmp
xor
adc
push
push
xchg
or
fcmovne
mov
ret
push
stos
es
pop
test
push
inc
jl
adc
in
pushf
fidivl
icebp
sbb
and
jb
mov
lcall
sbb
or
push
mov
mov
cmpsb
sbb
mov
push
int
xor
add
pop
popf
nop
ja
fmuls
jge
mov
xor
nop
mov
push
push
xor
icebp
or
add
xor
cltd
clc
cli
xchg
cmp
pop
or
bound
jo
mov
loope
andb
mov
dec
out
fidivrs
or
jno
pop
pusha
sub
cwtl
inc
jecxz
dec
pop
push
push
inc
inc
out
iret
xchg
adc
mov
push
xor
test
cmp
xchg
cmp
push
dec
mov
pop
sub
and
or
sbb
lods
dec
sbb
mov
inc
pushl
les
or
cmpb
jne
adc
jbe
push
xchg
sbb
pop
lcall
fistps
add
xchg
push
je
sbb
rorb
decb
jnp
jmp
add
sbb
enter
jnp
gs
ficoms
mov
cs
test
jb
xor
adc
push
lret
push
or
or
cmp
repnz
dec
xor
or
xchg
jl
dec
movsl
xchg
leave
sub
call
fdivr
sub
mov
and
inc
stos
sbb
dec
push
aas
aam
jno
jne
loop
push
xorl
jmp
jbe
adc
test
add
push
loope
mov
pop
mov
mov
cmc
push
shl
in
add
imul
test
inc
sub
xchg
pop
add
adc
data16
and
stos
pop
jg
inc
xchg
inc
push
pop
mov
mov
ret
push
mov
test
pop
mov
out
inc
ljmp
and
repnz
into
or
and
andl
push
mov
push
cld
adc
push
decl
pop
jne
aam
jno
jne
iret
mov
jmp
nop
adc
repz
jg
negl
mov
pop
xor
and
fmuls
and
jecxz
add
xorb
enter
jo
lock
lret
inc
sbb
push
es
xchg
dec
mov
and
js
or
add
add
pusha
add
mov
add
and
sbb
inc
add
mull
test
or
fwait
sub
xchg
int
jl
js
adc
push
pop
mov
xorl
sbb
leave
les
pop
mov
add
or
adc
adc
and
les
mov
mov
pop
in
push
sbb
dec
jl
xchg
push
push
adc
loopne
test
enter
xor
xor
js
sub
push
mov
or
or
std
loope
mov
js
adc
mov
dec
cwtl
inc
sub
dec
mov
test
pop
jae
leave
push
or
pop
sub
sbb
mov
sub
popa
dec
push
inc
cmp
inc
sub
mov
jno
sti
mov
or
cmp
inc
dec
dec
or
bound
sub
pop
adc
std
sahf
inc
repnz
cmp
in
dec
in
dec
adc
xchg
mov
pop
ret
push
ud1
dec
inc
into
push
push
cs
adc
push
test
sbb
adc
and
xchg
adc
pop
jb
adc
cltd
or
and
adc
add
or
xor
adc
fldl
push
fcoml
lea
mov
mov
and
jnp
dec
inc
and
pop
out
sbbl
pop
mov
out
sbbl
or
loopne
enter
push
dec
enter
dec
dec
pop
in
sbb
push
mov
dec
lcall
iret
test
dec
xor
pop
push
enter
push
aas
cmp
push
sbb
in
test
push
loope
mov
push
int3
or
dec
mov
enter
int3
insb
nop
xchg
xchg
pop
pop
int
inc
push
add
cmp
pop
push
andl
test
ss
sbb
or
sub
pop
push
push
jecxz
and
fsubrs
jg
aas
repnz
push
push
xchg
adc
in
add
jp
sarb
pop
shrl
mov
dec
mov
sahf
sub
dec
xchg
or
mov
ds
test
xchg
mov
add
movsl
sbb
shrb
jg
cmpsl
push
or
mov
lret
outsb
inc
lret
push
pop
repz
inc
das
add
lods
stos
incl
cmp
cmp
add
mov
and
ss
or
or
or
dec
dec
adc
add
daa
mov
sar
inc
pushf
ja
pop
dec
sub
pop
out
adc
xchg
jl
push
and
pop
add
push
inc
and
pusha
push
dec
test
popl
xor
in
or
cmp
pop
sbb
add
ljmp
push
push
loopne
pop
ret
pop
pop
andl
xchg
incb
cmpb
je
cs
scas
add
push
sub
test
xchg
jno
sbb
and
mov
xchg
pop
imull
aam
loopne
inc
pusha
xchg
dec
and
sbb
test
or
pushl
outsl
hlt
and
sbb
hlt
ja
pusha
jle
mov
add
jne
leave
rclb
jno
add
lahf
addr16
lret
jge
jg
mov
xchg
add
add
dec
pop
sub
dec
add
mov
lea
in
call
push
or
fistps
push
inc
sbb
clc
xorb
add
add
mov
int3
cmp
push
push
xor
sub
sub
div
roll
pop
lahf
addr16
aam
sub
mov
fsubl
xchg
mov
lahf
fidivl
jo
out
add
arpl
les
pop
inc
add
test
mov
mov
out
add
or
pop
inc
sbb
sbb
or
add
ret
loopne
scas
adc
jmp
push
rcrl
out
sbb
out
or
loopne
jo
ret
div
scas
rolb
inc
sub
je
cmp
mov
je
or
push
sbb
rclb
fimull
pop
test
lock
rorw
push
test
shrl
xor
mov
xor
jo
pop
dec
test
adc
js
inc
and
jl
lock
in
add
sub
pop
or
adc
loop
sbb
push
and
cmp
jg
sahf
repnz
sahf
push
pushf
push
test
mov
inc
cwtl
push
test
lcall
sahf
into
int
pop
cmpsb
add
pop
fcmovb
test
movsl
and
stos
out
mov
rcll
mov
jno
or
inc
or
jbe
sbb
adc
push
mov
seto
mov
icebp
sbb
neg
or
sbb
lock
sub
or
cmpsb
stc
es
movsb
push
lds
cwtl
jne
jp
insl
add
push
or
and
sub
dec
add
fldenv
push
icebp
sub
dec
pop
mov
adc
or
sub
jnp
fnstcw
cmp
ds
push
dec
fistpll
cmp
mov
xor
push
movsl
mov
loop
xchg
mov
in
pop
loope
ret
aaa
jae
adc
push
jo
sub
xorl
push
fstpt
mov
inc
xor
and
fimull
and
bound
mov
scas
sbb
and
lea
bound
and
popa
ss
push
add
outsb
add
mov
jg
mov
add
push
rcrb
adc
push
fadds
jno
cltd
outsb
add
mov
add
inc
fldcw
int3
lods
fildll
stos
pop
add
dec
cmpsb
or
adc
imul
or
cmp
pop
push
ja
or
cmp
mov
es
jle
cmp
and
adc
cmc
pshufw
cli
add
push
pop
pop
adc
add
inc
add
test
and
rol
loop
mov
add
js
dec
sarb
push
ss
add
out
push
mov
pusha
js
push
mov
call
std
fcoml
mov
imul
lcall
std
insl
js
push
fcompl
cmp
into
pop
cwtl
mov
cmp
jbe
or
out
jmp
cld
sub
add
outsl
fldcw
movsb
sub
or
push
hlt
nop
sbb
mov
push
rclb
sub
mov
push
in
pop
pop
mov
or
lret
std
cmpsl
mov
inc
adc
add
cmp
les
loop
pop
fmulp
lret
leave
iret
mov
lahf
fs
sbb
sub
fmuls
push
std
jno
aad
dec
inc
sbb
jae
movl
aaa
fdecstp
xor
cmp
je
add
pop
lock
lahf
movl
pushf
jnp
adc
cmpl
adc
cwtl
xchg
sub
nop
cmc
cmp
jne
pop
cmp
mov
or
lret
cmp
pop
inc
repnz
cmp
pop
cmp
and
dec
cli
lahf
mov
fcomps
add
jecxz
mov
cld
add
gs
bound
push
insb
bound
xor
ja
icebp
jge
mov
jmp
xchg
insb
xor
and
jmp
std
out
into
popf
adc
mov
cwtl
stos
add
xchg
fwait
dec
adc
iret
pusha
ret
push
xchg
sbb
sub
push
adc
cmp
push
push
xchg
icebp
or
adc
data16
push
push
and
xchg
sbb
pop
push
test
jo
pop
mov
daa
xor
adc
clc
push
or
rolb
cmp
mov
push
ljmp
gs
aaa
add
mov
cld
and
ds
push
inc
jge
sub
xchg
shlb
xor
inc
xchg
sub
mov
push
push
lds
daa
xor
dec
pop
int3
adc
xor
xor
cmpsl
pop
mov
leave
cmp
pop
ret
push
punpckhdq
fchs
push
pop
js
lock
xchg
pop
imul
out
sbb
or
stos
push
sub
jb
movsl
sbb
or
loop
inc
pop
xor
sub
scas
je
push
push
cld
mov
cmp
je
add
adcb
fcoml
inc
push
mov
add
int3
cmp
jg
mov
loopne
adc
loopne
in
add
pop
jmp
ffreep
outsl
cmp
cmpb
jl
pop
pop
add
jg
call
or
push
into
cwtl
popf
mov
jle
inc
push
ja
dec
xchg
push
roll
inc
idivl
dec
jge
xor
lcall
cmp
add
movq
mov
cld
and
push
mov
cmp
ss
dec
dec
test
mov
aas
pop
jb
sarb
cld
adc
xchg
sbb
inc
sbb
ds
add
inc
je
test
add
or
mov
pusha
leave
ret
adc
mov
push
cmpsb
test
sbb
hlt
cmpl
inc
call
adc
or
lods
dec
jae
adc
push
arpl
push
lock
adc
xor
push
mov
clc
into
adc
andl
test
clc
pusha
mov
rolb
or
dec
int3
test
mov
gs
add
sbb
incl
clc
push
push
adc
jl
mov
ds
push
in
or
data16
sbb
rclb
pop
mov
mov
mov
lods
sbb
push
jmp
and
or
dec
fisttps
jecxz
sbb
loope
cwtl
bound
jl
shrb
jmp
js
pop
jmp
pusha
adc
jle
or
and
lock
jo
mov
add
jl
ljmp
push
mov
sbb
mov
iret
in
pusha
fidivl
sbbb
les
incl
je
jmp
icebp
cmp
and
push
sti
inc
outsb
push
push
add
jle
loopne
sti
mov
aad
sub
into
je
stos
mov
and
in
inc
xlat
xchg
outsb
test
add
roll
jne
adcb
fmuls
inc
or
inc
outsl
push
mov
or
xchg
pop
adc
call
in
insb
ja
or
dec
add
imul
push
fcom
xor
hlt
add
add
rcrb
aam
push
dec
mov
and
mov
inc
push
scas
mov
and
icebp
mov
mov
hlt
xor
dec
cmc
loopne
repnz
and
mov
das
add
mov
in
mov
mov
outsl
jne
add
cld
adc
push
ljmp
xor
nop
adc
push
hlt
out
js
push
mov
cld
subb
fcmove
cmp
fiadds
lea
cmp
jnp
int3
mov
out
mov
add
push
push
icebp
pusha
dec
rolb
dec
aam
sub
or
cmp
outsb
test
or
inc
mov
cmpsb
mov
subl
sbb
sub
insl
movsb
lock
add
jo
dec
or
push
push
add
arpl
mov
sub
jne
mov
pop
call
std
lea
incl
add
repnz
sub
shll
ds
jbe
adc
ret
inc
cmp
jno
popaw
lahf
pop
inc
xchg
flds
mov
mov
mov
pop
cmpsb
sub
push
sub
push
iret
sar
and
movb
mov
cwtl
nop
pop
sbb
mov
or
inc
lods
mov
inc
or
add
lahf
mov
push
call
shrl
xchg
les
ss
pop
push
adc
mov
jnp
sbb
mov
pop
lods
pop
movsl
mov
loopne
and
push
mov
add
mov
mov
pop
ret
rcr
stos
nop
or
data16
fst
or
push
shrl
and
inc
cmp
cs
inc
mov
cmp
ret
into
jae
clc
call
je
outsl
movsl
lret
add
bound
cwtl
xor
popl
lds
mull
imul
and
je
add
cmp
sub
or
pop
push
mov
fdivrl
dec
sub
idivb
mov
mov
mov
pushf
sub
dec
inc
adc
divb
cmp
dec
jmp
cmp
pop
cs
push
inc
inc
dec
aad
shrl
std
movzwl
mov
mov
mov
jg
rcrb
loop
cld
das
rolb
push
clc
jle
add
xchg
lods
cmp
mov
jb
rcll
int3
push
pop
pop
setle
push
jmp
cmpb
test
je
pop
aad
test
scas
mulb
mov
mov
adc
inc
shlb
sub
push
pop
pop
loope
dec
and
mov
add
call
cs
sbb
push
pop
les
and
sbb
lcall
inc
push
add
jge
xor
loopne
push
xor
mov
mov
nop
push
rorl
sahf
rorl
mov
pop
mov
test
cmc
push
dec
sbb
push
sbb
cmp
xor
jnp
je
or
cmp
mov
or
push
orl
inc
or
popa
stos
pop
xchg
push
je
inc
sti
push
lea
aaa
dec
loope
push
inc
test
sub
lret
mov
or
add
add
add
mulb
sbb
xor
imul
or
mov
shrb
push
cmp
add
add
jnp
outsb
push
je
out
pop
cmp
mov
in
pop
call
inc
sub
mov
pushf
mov
loopne
pop
jge
rorb
or
cmpsb
adc
loop
or
dec
xor
pop
call
xor
adc
scas
cltd
fwait
mov
inc
lahf
mov
push
roll
jl
pop
lock
pushf
call
movbe
inc
sbb
adc
pop
cmp
repz
add
and
sbb
cmpsb
and
cmp
dec
xchg
rclb
adc
cmp
popf
loopne
mov
push
lock
rcrb
leave
sub
sub
ds
push
inc
jl
and
jecxz
sbb
arpl
inc
std
sub
push
test
sti
add
adc
cltd
mov
imul
ffree
pop
stos
int3
xchg
add
xchg
repnz
inc
addr16
frstor
or
out
and
and
and
lock
jmp
std
in
jae
js
out
adc
clc
mov
push
mov
push
push
cli
dec
and
aad
adc
sub
and
mov
xchg
mov
pop
std
mov
cmp
fadd
bound
mov
push
pusha
fisttpl
cmpsl
push
enter
dec
xor
insl
jne
cs
add
repz
push
push
jae
arpl
cmp
jne
push
push
je
inc
or
lret
repz
jg
push
or
and
jle
imul
push
cmp
addl
cmp
leave
jno
adc
call
call
dec
mov
fistps
inc
cli
je
mov
movsl
mov
pop
mov
jl
or
cmp
je
push
fidivs
push
or
sbbl
outsl
cmp
and
adc
sub
adcl
cmp
sub
add
fisubrs
mov
scas
sub
or
cmp
add
pop
in
xor
pop
sahf
xchg
rcrb
je
stos
addr16
dec
mov
push
loopne
aaa
cmp
sbb
sti
clc
shlb
sub
xor
add
subb
mov
cmp
sbb
jnp
jae
sbb
je
add
arpl
sbb
push
aas
test
call
or
ja
pop
cmc
dec
loopne
adc
les
in
push
mov
add
inc
loopne
pop
outsb
push
mov
jg
mov
add
cmp
lret
inc
sub
push
pop
sbb
or
or
sbbl
les
jb
xor
add
bound
push
mov
in
cmp
scas
sbb
fcoms
sub
adc
mov
push
and
imul
pusha
cmpsb
imul
mov
js
fmuls
fdivl
cs
cmpsb
cwtl
imul
or
push
mov
inc
int3
cwtl
aam
inc
mov
rol
addr16
scas
sub
push
and
pop
shlb
aam
mov
mov
add
loopne
add
mov
sbb
sar
mov
cwtl
sbb
pop
mov
sub
or
add
fadds
sbb
nop
add
js
jo
sbb
add
nop
fs
push
imul
push
inc
push
add
rclb
or
ja
adc
sub
dec
sbb
test
aad
mov
adc
and
test
enter
dec
jo
js
pop
push
xor
aas
jo
xchg
push
add
dec
pcmpeqw
lock
push
sub
xor
call
bound
pop
mov
fildl
popa
add
fists
testb
jmp
cmp
sbb
or
push
xor
sbb
out
sub
ror
test
xchg
mov
xchg
add
cli
push
ja
in
insb
mov
xor
add
jle
insl
mov
movswl
fs
lret
mov
ljmp
ret
or
lea
imul
push
adc
adc
ret
xor
adc
into
insl
inc
test
in
adc
add
cld
jo
not
incl
add
and
cmp
pop
push
rol
ljmp
add
inc
mov
add
loopne
xchg
jl
jne
lea
add
mov
jne
adc
scas
into
push
out
lret
notb
lock
or
ret
inc
sbb
inc
fisttps
fnstcw
sbb
clc
adc
and
lret
in
or
adc
or
sahf
xchg
stc
incb
repnz
lahf
dec
dec
mov
iret
cmp
or
lcall
cltd
mov
xchg
mov
inc
xchg
sub
fnop
add
ret
roll
mov
mov
sub
mov
cmovns
stc
lock
cmp
push
stc
je
rcll
lock
jne
xor
jb
inc
xchg
ja
fwait
xchg
aas
ss
pop
lahf
sub
xchg
or
add
pop
dec
sub
pop
call
add
and
je
add
mov
inc
stos
add
aaa
or
adc
mov
or
push
out
jns
push
mov
adc
lret
clc
rorl
movsl
cmp
or
sub
stos
ljmp
push
adc
jmp
ja
dec
xchg
sbb
lahf
dec
inc
or
mov
arpl
adc
or
insb
cmp
pushf
adc
jp
add
adc
scas
adc
or
jmp
pop
shrb
xor
push
or
in
add
outsl
dec
icebp
std
adc
jl
test
enter
inc
mov
adc
xor
push
push
adc
inc
or
dec
sub
sub
sbb
popa
shrb
add
fmul
scas
jo
pop
and
and
mov
and
scas
lock
adc
xor
int3
lock
jnp
sbb
pop
cmovl
add
sbb
ret
or
mov
je
xor
enter
pusha
pusha
and
push
and
movsb
sub
jnp
int3
insb
aaa
add
sarb
xchg
ret
ja
lret
addb
sub
outsl
orb
divb
mov
shll
or
push
cmp
add
iret
je
xor
jne
lods
push
rclb
sub
mov
push
sub
inc
pop
xchg
ret
lock
lea
lcall
xchg
push
addb
xchg
out
jne
lock
adc
fs
mov
sahf
pop
in
cmpsl
addb
testl
shll
add
xchg
jp
dec
ss
fistpll
jo
mov
jbe
mov
pop
xchg
incb
into
add
push
mov
adc
out
lea
mov
sub
cs
sub
testb
mov
push
je
loopne
cmp
mov
jl
sbb
sbbl
inc
sub
inc
aam
and
fs
and
jge
sub
sub
sub
rcl
test
test
ljmp
sbb
adc
loopne
repz
scas
cmp
jle
leave
enter
inc
sbbl
mov
pop
leave
adc
fsubl
dec
insb
clc
push
push
jge
jne
lea
mov
cli
xchg
mov
inc
mov
mov
mov
in
call
ret
pop
cmp
adc
jae
mov
outsb
and
xor
xchg
add
push
cld
test
sbb
rcr
imul
jge
pushf
cwtl
fidivrs
inc
stos
sub
and
sbb
je
sbb
adc
cmp
push
in
loopne
mov
lea
cwtl
mov
add
or
pop
aam
sbb
push
ss
dec
push
or
int
adc
adc
push
es
xor
fcoms
cli
les
out
mov
clc
and
pop
xor
jo
lock
sahf
xchg
inc
fs
adc
cmp
stos
sub
mov
pop
imul
push
arpl
and
sbb
mov
push
mov
jne
ja
jo
cmp
mov
loopne
dec
dec
cmpb
cmp
adc
testl
push
adc
push
and
fnstsw
ret
dec
cmp
je
aaa
jns
loopne
jb
jle
inc
out
std
shlb
and
lret
cmp
loopne
sbb
jmp
fildl
pop
and
pop
xchg
andb
add
outsl
pusha
pop
sbb
or
adc
adc
ds
fs
sbb
or
or
rorl
cmp
ret
loope
fistl
into
jecxz
and
ret
lods
adc
loopne
setne
mov
repz
mov
loopne
lret
or
aad
sar
mov
lock
pop
add
cmpsb
cmp
cmp
pusha
jno
fistl
fdivs
or
adc
aam
sub
add
fsubr
xchg
cmpb
cs
movsl
pusha
push
mov
cmc
adc
lock
jmp
loop
mov
aad
pop
shlb
sub
mov
jo
mov
sti
fwait
pop
fs
pusha
shrb
ljmp
xchg
popf
pop
dec
pop
mov
movsl
add
idivb
je
mov
push
push
pop
pop
jo
pop
adc
es
out
jo
push
les
addr16
cli
fcomps
aaa
push
arpl
sub
mov
shrb
test
aad
testb
mov
cmp
adc
push
jmp
mov
ss
aaa
pop
popf
push
fadds
and
pop
aas
mov
mov
or
test
inc
mov
xor
je
jae
add
jae
inc
lcall
sbb
dec
inc
or
movsl
lcall
or
adc
call
rcpps
je
repnz
push
xor
imul
adc
mov
lcall
pop
sub
add
or
call
or
mov
nop
test
push
dec
iret
aam
adc
pusha
sbb
inc
into
sbb
or
sbb
outsb
stos
sbb
sub
lds
add
js
stos
xor
addr16
and
jb,pt
dec
pop
inc
cmp
or
vmread
mov
sbb
ret
xchg
jg
outsl
sbb
push
mov
jb
sbb
xor
test
mov
sub
xor
add
leavew
xor
pop
ret
mov
inc
xor
mov
lret
or
lock
decl
pop
loope
in
xchg
cs
pop
add
xor
mov
stc
dec
mov
stos
xchg
rorb
xchg
dec
xor
call
mov
leave
mov
rorb
push
push
jo
bound
sub
push
mov
pop
cmp
fsubrl
repz
add
mov
push
or
mov
or
push
cmp
mov
and
xchg
fmull
cmp
mov
sbb
add
lret
fildll
mov
lret
std
push
and
xor
xchg
fbld
in
nop
mov
sub
enter
sbb
push
mov
cmp
ret
aam
mov
adc
imull
lods
jo
adc
mov
add
cmpl
loopne
insb
js
add
push
sbb
les
mov
and
int
adcl
add
pop
dec
cwtl
test
adc
inc
pop
inc
cmp
mov
clc
andl
mov
xchg
sbbb
sub
outsb
jl
aas
sbb
lcall
pushl
loope
push
pop
mov
lea
jmp
scas
in
out
jmp
mov
ss
or
mov
or
rcll
mov
xor
outsb
mov
rolb
je
mov
mov
inc
push
inc
idivb
xorb
cld
mov
and
gs
push
in
and
pop
mov
jl
cld
and
subl
inc
or
inc
cltd
pushw
cmp
lds
dec
xor
pop
sahf
push
xchg
testb
dec
outsb
mov
cltd
adc
or
push
movsb
xor
xor
mov
adc
xor
adc
test
add
mov
and
cmp
xor
add
in
and
lock
push
sub
push
mov
sub
dec
cmp
adc
jl
or
cmpsl
cmpsb
call
adc
sbb
add
push
add
shr
pop
xor
jecxz
add
lock
fmuls
adc
pop
cmp
jbe
inc
push
inc
adc
inc
cmpb
nop
push
and
fdivs
rolb
sbb
cmp
addl
pop
movsb
push
xchg
xchg
pop
fnsave
testb
push
leave
orl
lock
push
sbb
xchg
je
cld
popl
sbb
cmp
cmp
sub
xchg
xor
js
imul
ret
div
arpl
sti
inc
sbb
or
add
xchg
adc
mov
pusha
lcall
icebp
xor
and
xor
pop
pop
add
xchg
ret
addb
leave
dec
mov
sub
pop
or
push
push
xor
inc
out
inc
jnp
scas
push
mov
ds
outsl
nop
sbb
enter
xor
add
fisttpll
mov
and
cmp
rorb
subb
in
fadds
inc
add
jb
lahf
aaa
add
ret
addb
nopl
jae
mov
dec
js
xchg
mov
test
adc
pop
bound
scas
xchg
xor
push
cmp
fistps
xchg
pop
xchg
xor
cmp
dec
mov
xor
std
adc
push
push
subps
loopne
jne
mov
jnp
aaa
movl
dec
push
aam
pushf
push
data16
addr16
pop
enter
inc
or
cld
nop
jmp
jno
roll
callw
xchg
pushw
pushf
pushfw
inc
xlat
adc
out
sahf
mov
dec
rcrb
mov
mov
call
xor
xchg
rcrb
popf
xchg
mov
into
aaa
dec
pop
add
jo
jmp
xor
dec
cmp
outsb
pop
push
sbbb
mov
imul
movsl
sub
dec
cwtl
adc
in
and
sbb
imul
cwtl
mov
push
dec
pop
mov
adc
into
jne
pop
pop
loop
cmpb
movsl
jb
out
ds
inc
aad
or
pushf
xor
mov
pop
xor
add
sub
in
or
cwtl
gs
aam
cmp
inc
xor
andl
leave
inc
inc
loopne
and
loop
add
xchg
je
lock
jl
mov
in
andl
add
xchg
adc
adc
pushl
inc
xchg
xor
mov
inc
rorb
test
into
add
xchg
movsb
dec
lods
into
xor
or
cmp
jo
test
lea
mov
xchg
sub
es
and
stos
je
mov
aaa
addb
cli
push
mov
xor
test
or
add
inc
or
ss
lock
cmp
xor
cmp
mov
and
je
rcll
shll
dec
push
cmpsl
testl
pop
jae
xor
aas
add
or
sub
data16
imul
mov
add
andl
sub
test
push
pop
mov
mov
mov
dec
insb
add
fcoms
nop
or
add
mov
sub
adc
sbb
jge
mov
xchg
pop
pop
shlb
lock
mov
cmp
jne
mov
push
jmp
mov
xor
inc
add
repnz
das
cmp
in
push
push
jg
shlb
dec
mov
mov
mov
sbb
xor
cmp
aas
mov
xlat
fdivl
xlat
push
jne
inc
jo
dec
jne
test
loope
popf
inc
cli
push
cld
xabort
xor
mov
jg
lahf
jns
sbb
pop
adc
inc
insb
shr
inc
add
lea
loop
jns
jae
sub
dec
or
adc
jle
adc
dec
aaa
sbb
pushl
cmp
insb
std
mov
dec
cmp
or
out
dec
mov
gs
adc
jb
jge
lock
sahf
mov
lock
mov
clc
pop
imul
sub
dec
stc
dec
push
push
pop
adc
mov
inc
hlt
lret
xchg
jne
mov
lock
cwtl
mov
jno
in
mov
pop
shl
int
cmpsl
enter
dec
insb
or
int3
or
xchg
fisttpl
dec
hlt
mov
xchg
sbb
dec
xor
imul
inc
andb
mov
push
int3
inc
add
mov
or
repz
cmp
pop
jmp
jbe
outsb
dec
out
movsl
addl
test
dec
insb
sbb
ret
arpl
test
xor
ud0
leave
pop
sbb
add
mulb
inc
xor
or
xor
je
mov
rcrl
sbb
daa
ss
or
dec
adc
das
add
and
push
loope
push
sub
push
pop
mov
mov
and
insl
add
movb
in
and
inc
aaa
jbe
inc
sub
and
rol
jo
sub
iret
mov
pop
sub
add
xchg
mov
pop
jg
xchg
testl
ss
push
xchg
mov
aas
in
scas
rcrl
or
dec
enter
dec
aaa
dec
pop
inc
pop
loope
adc
popf
or
pusha
sbb
inc
in
adc
push
into
arpl
mov
push
sbb
cmp
ret
push
popa
push
mov
nop
outsb
pop
sbb
lds
les
dec
and
adcl
push
outsl
xchg
les
dec
mov
inc
daa
mov
lea
movsb
push
insb
push
fxam
adc
test
sbb
mov
adc
aam
es
adc
inc
push
pop
dec
into
jp
xor
lock
or
pop
fs
pop
or
jae
fs
subb
or
aad
ja
jecxz
jno
inc
pusha
idivb
les
push
test
push
aaa
lret
mov
fldcw
sub
inc
fmull
out
stos
xor
pop
lods
pop
or
stos
loopne
movsl
mov
inc
in
loopne
push
pop
mov
pop
div
add
into
lret
mov
push
push
or
lock
fadds
imul
fldl
out
dec
call
loope
xchg
inc
pusha
push
aaa
sbb
xor
std
rcr
push
jmp
or
mov
jmp
sub
movsb
mulb
lret
add
js
or
push
sub
mov
aad
sub
add
mov
testl
test
inc
fnstcw
mov
push
or
data16
and
roll
aam
shlb
cmpsb
add
bound
or
imul
xchg
ret
inc
push
push
sbb
mov
jae
push
push
mov
es
jl
movl
pop
pop
push
push
or
les
add
cltd
rcl
xor
enter
add
add
outsb
mov
dec
mov
test
mov
bound
ret
shlb
clc
push
add
outsl
push
testl
mov
shll
sbb
outsl
pop
cmpl
inc
movsl
push
rolb
andl
mov
dec
jo
mov
hlt
pop
cmp
lods
push
cmc
cmpsl
mov
ds
add
mov
sub
push
jns
shlb
push
in
xchg
or
mov
sti
xchg
add
mov
jl
push
call
xchg
das
push
lea
push
lods
add
xchg
push
ljmp
in
mov
xchg
xchg
xchg
test
or
push
mov
ja
xor
xchg
mov
adc
push
into
pop
push
mov
or
pop
pop
dec
mov
call
out
adc
jbe
push
push
or
xchg
jp
les
push
mov
sub
loopne
add
ret
testb
lcall
sub
inc
lods
into
pop
sub
push
imul
dec
data16
adc
cmp
out
ret
outsl
or
in
pop
inc
sahf
sti
dec
ja
je
or
je
or
imul
sub
xchg
adc
adc
mov
stos
rorl
es
or
add
xor
or
lcall
mov
push
jmp
cmp
fidivl
adc
adc
xchg
xor
inc
adc
xor
vcmpeqpd
pushl
movzwl
dec
and
push
bound
in
mov
push
cmp
dec
jmp
pop
cmp
mov
es
dec
inc
mov
hlt
test
cli
gs
add
je
bound
add
mov
adc
sub
and
in
inc
js
cmp
cltd
enter
and
push
push
add
push
sbb
pop
xor
ds
les
pop
clc
sti
inc
dec
lret
or
je
sub
sub
sarl
data16
mov
adc
add
push
adc
in
mov
or
test
xor
daa
or
push
adc
inc
sub
push
pop
jo
cwtl
insb
sub
ds
mov
pusha
sbb
mov
or
xchg
push
outsl
cwtl
sbb
sbb
xor
push
cltd
idiv
pop
and
andl
add
rolb
push
cld
out
push
ss
add
shll
cmp
pop
shlb
loope
sbb
fsubl
hlt
mov
xchg
popa
xchg
bound
scas
adc
test
stc
sti
je
adc
add
or
push
sub
inc
push
inc
mov
clc
mov
add
ror
jo
and
scas
fcomp
sub
ret
ss
sbb
in
push
push
xor
pop
or
push
in
fimuls
xor
xchg
add
sub
xchg
xor
popa
sbb
movzwl
push
gs
lcall
or
mov
add
xchg
les
mov
mov
fs
cltd
mov
imul
add
ljmp
cld
call
iret
movsl
cmp
cmp
call
test
cmp
jns
push
fadd
jno
add
outsl
inc
push
mov
das
and
jl
pop
jge
scas
mov
sbb
sub
sub
add
faddl
in
mov
pop
subl
mov
add
push
mov
imul
aam
int3
inc
mov
nop
sub
lods
add
add
or
addb
or
add
pop
std
xchg
idivl
ficoms
cmp
mov
fsts
add
repnz
fldenv
xor
sbb
cmc
dec
rclb
inc
sub
out
or
icebp
cltd
mov
jnp
sbb
rorb
add
jmp
xor
sub
or
adc
and
push
xor
dec
rorl
push
sarb
push
mov
mov
xchg
pop
mov
dec
ficompl
test
and
pop
stos
and
adcb
icebp
insl
mov
lcall
fldt
daa
jp
subb
xor
inc
enter
mov
aaa
inc
push
jne
jle
mov
test
mov
into
mov
push
cmp
ss
in
cmp
in
nop
adc
shlb
imul
aam
ror
fcoms
stc
and
push
sub
add
subb
jo
in
cmp
and
add
jo
cmp
mov
or
push
pop
mov
push
pusha
inc
add
or
jg
cmpsb
std
mov
add
adc
dec
sub
mov
in
hlt
sbb
cmp
xor
cmp
push
or
push
push
xchg
mov
aam
fsubs
adcl
xor
push
push
stos
inc
xchg
fsubrs
test
pop
cmp
rorb
or
push
mov
jg
les
xor
xor
sbb
dec
pop
add
mov
sarb
aaa
mov
call
pop
incl
push
dec
cld
sbbl
cltd
add
jne
jl
xchg
fdivr
or
dec
mov
mov
pop
add
pusha
test
hlt
andl
mov
out
pop
jp
jg
je
dec
mov
loopne
xchg
cld
dec
mov
mov
shl
or
add
xor
dec
mov
hlt
mov
insb
sbb
push
mov
dec
pop
xchg
test
cmp
push
add
sarb
rcr
xor
add
lods
aam
push
cli
pop
orb
loopne
push
xchg
pop
pop
rolb
fs
or
ficompl
loopne
jg
orl
mov
in
nop
movsb
push
movb
add
push
pop
mov
cmp
enter
or
cld
dec
or
or
jg
rorb
add
push
dec
mov
sti
sbbb
add
jne
es
repnz
add
les
xchg
test
pop
test
xchg
mov
mov
mov
cs
sub
jp
aad
ja
jae
pop
ds
movsb
jns
out
add
ljmp
xchg
jg
jns
dec
arpl
dec
or
clc
add
jl
mov
lods
xchg
xchg
shrl
and
push
inc
adc
add
xchg
add
and
rcrb
pop
add
pop
pop
xor
jecxz
dec
adc
add
aad
and
pop
add
sub
and
adc
or
pop
mov
movsl
jle
xor
lods
pop
adc
jnp
movups
sbbb
es
aad
aaa
shlb
movb
sbb
stos
sbb
and
push
adc
add
xchg
xor
rcl
xor
mov
ds
inc
jne
stos
outsb
ret
fs
pop
sti
mov
adc
ss
dec
adc
movsl
ret
pop
sbb
bound
insl
xchg
loop
push
inc
xor
rclb
jmp
js
scas
and
adc
and
add
filds
sbb
orb
sbb
push
out
add
call
jecxz
push
test
or
pop
mov
stos
or
clc
cmp
aad
push
movl
je
cmpsl
mov
adc
je
sub
sub
mov
or
cli
call
dec
fadds
pop
movsb
jmp
sbb
jnp
sbb
xchg
pop
add
xchg
or
pop
imul
fldt
sub
cli
fmuls
movb
and
add
push
subl
dec
dec
cli
add
pop
je
or
push
addl
cmp
rorb
hlt
add
push
out
mov
nop
cmp
and
inc
dec
movsb
test
add
mov
sti
fdivrp
dec
adc
jo
inc
jmp
or
into
or
add
pop
fs
pop
jmp
and
movsb
xchg
fsts
dec
adc
fiadds
mov
push
push
cmp
es
inc
mov
cmp
push
mov
or
jnp
dec
and
aas
lea
jmp
cld
push
add
stos
pop
les
int
mov
cld
push
xor
adc
repz
in
or
shr
push
jmp
sbb
adc
scas
pop
mov
les
imul
mov
outsl
jno
popa
mov
push
gs
rcrb
add
pop
imul
push
dec
out
add
stc
mov
push
adcb
cmp
cmp
andl
add
daa
push
push
sahf
adc
and
repz
xchg
sbb
push
inc
push
inc
xchg
and
xor
push
pop
push
sub
cmc
xor
sub
std
inc
sub
or
xchg
add
xor
jns
adc
push
daa
adc
mov
push
push
and
mov
adc
ror
jb
xor
jb
nop
loopne
stc
mov
adc
add
push
inc
scas
xchg
and
shl
sahf
push
or
inc
mov
cmp
rorb
push
inc
repnz
inc
fwait
xchg
out
flds
fmull
mov
cmp
sub
stc
sbb
shl
in
movsb
sbb
push
xchg
nop
and
inc
bnd
cld
adc
pop
push
pop
push
clc
ljmp
adc
enter
mov
lahf
icebp
push
mov
rol
shll
repz
add
xchg
mov
xlat
and
dec
lcall
std
dec
dec
xchg
clc
push
sarb
pop
or
ret
dec
or
mov
call
ljmp
into
test
nopl
add
enter
dec
push
inc
mov
movsb
or
bound
push
sbb
and
xchg
pop
jmp
pushl
sub
inc
movsl
sub
lea
jno
mov
insb
pop
lret
dec
loopne
dec
ret
mov
mov
scas
cld
mov
push
pop
and
das
inc
add
movsl
lock
pop
xor
fdivr
push
cli
andb
out
push
push
movsl
les
xlat
testb
adc
mov
ret
sti
inc
jecxz
adc
jae
loopne
xor
sub
pop
or
sbb
aas
inc
fildl
je
out
push
icebp
mov
xor
mov
out
repz
add
lea
push
mov
in
stos
pop
sub
call
jns
cs
ror
cmp
testb
lock
cmp
and
pusha
mov
and
xlat
shl
xor
xchg
fdivp
or
jle
lea
mov
add
movsl
and
cmp
adc
xor
push
push
dec
and
or
call
or
or
and
push
or
or
test
mov
adc
leave
ret
out
mov
mov
xchg
add
xor
add
pushf
push
aaa
in
loopne
dec
dec
add
cmp
sbb
push
push
js
or
xchg
xor
mov
or
rclb
sub
xchg
cmp
mov
xor
push
popf
and
popa
jge
mov
lea
stos
sti
sbbb
pop
cmp
movl
push
mov
xor
inc
cmp
arpl
or
push
sarl
pusha
xchg
cmpsb
jns
jne
push
outsb
add
push
daa
sbbl
xor
jnp
xlat
dec
gs
ss
jl
int3
mov
shll
inc
aad
cmp
or
in
inc
adc
enter
stos
push
and
and
in
xchg
pop
add
or
xor
dec
repnz
dec
push
ds
jae
mov
and
jl
cmp
jae
sub
mov
cld
das
push
shl
pop
cmp
jne
pop
adc
push
pusha
xor
cmp
jge
add
insl
icebp
cmp
cmp
scas
loop
fwait
or
mov
push
and
and
loope
call
in
jae
shl
hlt
loopne
jl
repnz
test
and
mov
call
xchg
das
or
cmp
outsb
mov
mov
sbb
sahf
or
pop
rclb
test
stos
and
aad
sbb
adc
mov
pop
pop
mov
dec
or
add
test
insl
subl
pop
popw
shrl
push
and
in
loopne
cmpsl
or
nop
adc
andl
mov
or
add
fistpl
leave
sbbl
pop
in
fiaddl
loopne
adc
aad
jmp
push
xor
push
and
sbb
inc
or
ja
test
rorb
mov
jne
mov
pop
dec
idivl
jb
dec
push
adc
sub
or
or
mov
movsb
lods
rcrb
scas
xor
lods
div
cmp
jns
add
mov
xorb
push
movsb
cmp
sbb
pop
mov
or
cli
into
scas
cltd
out
add
mov
push
xor
mov
or
or
cmp
and
int3
mov
pusha
jb
popa
or
sub
or
stos
inc
jno
pop
mov
lock
test
cmpsb
dec
dec
dec
das
ss
cltd
mov
and
inc
dec
or
das
inc
xchg
aaa
mov
loopew
popf
stc
outsb
inc
jae
jle
dec
dec
stc
add
test
dec
xlat
mov
push
cmp
jo
add
mov
cmp
out
or
lock
pop
adc
orl
imull
test
cmpsl
jbe
mov
cmp
jbe
xchg
pop
or
adc
jo
push
push
sahf
in
pop
jae
and
es
pusha
fwait
in
jb
cmp
mov
sub
xchg
sahf
add
jmp
sbb
add
sbb
xor
test
rorb
push
xchg
cmc
sbb
push
fdivp
es
fidivl
cmp
cmp
mov
or
std
xor
inc
jmp
ja
shll
or
cmp
push
push
push
mov
inc
mov
pop
mov
or
nop
mov
aam
mov
push
cmpsl
pusha
xchg
ret
test
loopne
int3
cld
push
pop
cmp
adc
or
popa
loop
sub
lea
out
fdivs
andl
jne
pushf
inc
pushf
sbb
xchg
lods
cmpsb
add
cmpsl
lock
or
add
jmp
xchg
mov
inc
lahf
add
sub
rclb
enter
mov
pop
enter
and
sbb
lea
mov
cld
and
dec
inc
inc
aas
or
mov
push
add
movb
movl
insb
das
lds
or
add
mov
leave
stos
xor
lods
lods
mov
push
jne
inc
fisttps
or
xchg
dec
and
adc
add
cmp
jecxz
test
pop
mov
test
ja
jno
in
imul
negb
rcrb
sub
dec
sub
fsubl
shrd
rclb
bound
cmc
andl
jnp
int3
adc
sarl
pop
scas
xor
jb
add
mov
insl
scas
pusha
xchg
popa
or
mov
or
enter
mov
js
imul
or
push
loope
mov
push
mov
sub
dec
jp
xor
daa
mov
jns
pop
iret
sub
inc
or
sar
push
pop
or
lea
aaa
out
lea
push
pop
mov
in
adc
cli
rep
mov
adc
add
aaa
xor
rorb
fimull
dec
clc
sbb
mov
jg
adc
fs
push
sbb
or
cmpsb
roll
or
jge
add
icebp
dec
fmul
clc
add
push
pushl
decb
sbb
adc
xchg
loope
or
push
mov
xor
testb
jne
test
inc
mov
popa
mov
pop
pop
in
adc
dec
and
mov
mov
jg
lock
xor
dec
adc
ret
andps
cmp
and
and
outsb
daa
push
loop
pop
or
sbb
cmp
test
or
stos
ljmp
clc
je
add
jp
mov
outsb
push
incb
pop
and
push
shrb
cld
adc
insb
cld
sub
mov
dec
jns
insb
lea
loop
inc
xchg
pop
incb
add
sbb
clc
lea
ret
push
xor
pop
push
cmp
sbb
stc
inc
js
and
xchg
pushf
inc
outsb
aaa
mov
flds
mov
or
divb
ror
enter
or
mov
xchg
inc
subb
push
or
cwtl
or
add
aam
inc
pop
dec
push
cld
push
xor
sbb
mov
neg
sbb
inc
je
imul
rcr
fisubl
enter
xchg
sub
xchg
adc
insb
cltd
push
int
sbb
pushf
jo
jnp
jecxz
sbb
sbb
test
pusha
mov
sub
rorl
cmp
jae
push
pop
stos
fsubr
mov
test
test
data16
cmp
jg
test
nop
inc
in
or
ret
movsb
push
sbb
mov
int
inc
insl
sbb
jge
jnp
xchg
insb
mov
scas
jle
sbb
shr
not
inc
lea
cmc
sbb
in
je
out
and
es
mov
xchg
shll
push
xor
pop
inc
dec
jle
dec
push
push
addr16
dec
aad
push
ja
enter
xchg
xchg
fisttps
lods
or
or
lret
lret
lret
xor
inc
in
addr16
inc
clc
dec
sbb
dec
insb
popf
jmp
movl
sub
pop
or
xchg
je
add
adc
jge
sub
cmp
aam
push
mov
xor
decl
shlb
jg
add
or
cmc
adc
xchg
adc
lods
fimuls
enter
pop
rcrb
jmp
int3
rclb
push
insb
push
mov
sub
mov
out
jnp
icebp
pop
or
pop
out
push
and
adc
leave
sub
jmp
scas
inc
push
inc
fdivrs
cmpb
or
push
add
or
pop
pusha
sub
push
pushf
mov
jp
loope
pusha
xor
mov
arpl
fisttpll
cmpsb
add
cmp
pause
sub
pop
call
xchg
popa
mov
xor
je
or
cmpsb
ret
je
cmp
jae
cmp
push
dec
add
cmp
add
adc
cmp
add
mov
xchg
icebp
mov
cwtl
or
adc
mov
xor
or
mov
mov
pop
cmp
fidivs
imul
repz
mov
mov
ss
cmpsb
inc
xor
or
fisubrs
sub
jmp
sub
jae
cltd
add
shlb
add
movl
andl
popf
fdivrs
and
jne
push
push
aam
inc
push
inc
cld
inc
add
jae
and
insb
cmp
lcall
loopne
adc
mov
je
dec
or
icebp
inc
sub
add
adc
or
or
test
cmp
pop
inc
pop
xchg
xor
mov
ljmp
inc
xchg
mov
dec
pusha
push
je
popf
dec
mov
arpl
xor
xor
mov
and
push
pop
or
sarb
add
mov
out
push
pushf
jo
leave
clc
push
mov
mov
sub
pop
lahf
mov
cmp
sete
cmp
ss
xor
xchg
pop
sarl
and
pop
mov
and
cld
sub
cmp
cmp
in
jbe
bnd
shlb
inc
xor
mov
push
mov
push
cld
clc
pop
pop
cwtl
fcmovnbe
rdtsc
into
add
lret
add
jnp
inc
loope
mov
push
push
xchg
dec
jmp
rol
scas
inc
lret
push
adc
ficoms
sbb
cmp
add
mov
imul
fisubrs
outsl
orb
mov
xor
xchg
adc
xchg
and
outsb
ret
mov
jge
testl
sub
push
inc
pop
es
push
cmp
jb
jbe
adc
lret
pop
int3
sub
arpl
jmp
xchg
pop
mov
add
lods
mov
sbb
or
scas
and
sarb
push
fmuls
dec
jne
push
loopne
mov
lods
xor
adc
bound
roll
bnd
sarl
shlb
or
int3
push
jno
pop
pop
cli
fs
scas
mov
and
push
and
je
pop
icebp
adc
testl
mov
movl
jbe
sbbb
data16
ljmp
sub
dec
in
xor
xchg
push
sbb
pop
fxch
fnstcw
add
mov
adc
mov
bound
jo
dec
mov
into
call
cmp
pop
pop
leave
adc
repnz
pop
mov
add
jmp
add
inc
inc
sub
sar
adc
int3
adc
mov
xlat
test
leave
adcb
sub
adcb
in
pop
adc
xor
mov
or
fisubl
inc
adc
test
sub
jle
add
jle
pop
daa
cmp
xor
push
insb
loope
movsb
dec
add
push
adc
shll
dec
or
push
pop
cmp
orl
push
cmp
mov
mov
or
lahf
mov
dec
or
inc
add
test
jmp
push
clc
add
clc
dec
out
loopne
jbe
or
add
jmp
sub
inc
mov
pop
orl
adc
lea
sub
jecxz
pop
jb
adc
inc
xchg
push
and
in
mov
or
mov
and
enter
cmp
mov
adcl
inc
pusha
add
lock
loopne
mov
orb
mov
sbb
sbb
xor
push
jnp
mov
pop
jge
jl
pop
xchg
pop
pop
in
mov
cmp
cs
pusha
lea
sbb
mov
notb
inc
pop
inc
sbb
sbb
cmp
xor
lods
xor
dec
orl
iret
inc
pusha
inc
xor
dec
out
insl
add
dec
pop
pop
sbb
sub
enter
sbb
ret
pop
stos
loope
test
orl
sbb
xor
test
push
adc
adc
jmp
dec
push
arpl
inc
jnp
orl
jne
sub
inc
incb
lea
jp
cmp
or
lods
push
push
ja
inc
cmp
jb
pushl
mov
pop
sbbb
or
pop
jmp
xor
push
add
mov
adc
add
mov
in
and
aas
adc
mov
hlt
insb
push
or
int3
xchg
pop
adc
inc
add
icebp
lods
movsb
cmp
push
imul
xchg
movsl
pop
mov
jbe
dec
jl
out
sbb
or
mov
jle
xchg
push
bound
push
add
test
sub
fisttpl
lcall
outsb
cmp
jmp
cmpsb
inc
push
push
test
sub
scas
movsb
xchg
dec
xor
test
or
inc
and
movsl
inc
sub
arpl
std
xchg
sbb
cli
lods
lahf
nop
mov
enter
ret
cli
gs
inc
dec
and
and
insb
xchg
pop
and
or
sbbl
sbb
adc
daa
or
sub
sbb
or
addr16
inc
add
pop
or
cmpsb
cmp
mov
ss
cmpsb
arpl
ja
or
cmp
addr16
fcoml
sub
sub
xchg
fisttpl
aas
mov
cmp
fsubl
call
lahf
and
jmp
add
in
mov
movl
dec
or
or
shlb
adc
sub
outsl
inc
outsl
jne
cmp
mov
sbb
inc
je
sub
add
in
in
pop
and
pop
sub
dec
xchg
bound
dec
movsl
movsb
add
enter
movsl
dec
push
sahf
add
cs
dec
outsb
jb
lds
add
insb
fsubrs
addr16
ret
rcr
cmp
lods
popa
inc
push
add
and
enter
and
mov
and
add
sub
add
add
inc
in
cmp
sub
cmp
add
mov
xchg
or
das
jmp
push
scas
sbb
pop
push
inc
pop
inc
push
push
xchg
xor
or
xor
mov
jge
cmpb
test
xor
cmp
dec
jl
rcrb
cmpl
or
fbstp
cmp
xchg
out
cwtl
add
sbb
inc
sbb
adc
or
mov
dec
in
add
and
cld
mov
sbb
movl
shrb
andb
lds
or
add
in
outsb
pop
adc
add
jecxz
adc
adc
jmp
mov
mov
ja
rcl
shlb
inc
inc
mov
andb
sti
push
loope
dec
sub
xor
mov
sbbb
mov
mov
out
arpl
jle
jne
imul
mov
push
xor
imul
and
xchg
pop
push
jae
inc
push
mov
sbb
xorb
jbe
inc
add
xchg
pop
push
cwtl
and
test
js
ds
mov
adc
negl
in
in
je
fstps
cld
movaps
insb
pop
pop
ss
xlat
insl
push
cmpb
pop
sub
shll
mov
push
lcall
es
out
shr
dec
or
xor
in
fdivp
call
push
test
jnp
mulb
out
je
mov
rolb
add
jns
dec
call
push
int3
sub
das
dec
push
or
and
rolb
add
sbb
sbb
rol
call
and
in
test
in
push
call
push
pop
ljmp
lods
adc
xor
dec
pop
cmp
out
adc
or
mov
push
cmpb
popa
push
scas
push
jae,pn
outsb
mov
and
xchg
or
push
xchg
lock
cmp
xchg
and
cmp
dec
jmp
cmc
jno
frstor
sbb
adcl
sbb
je
xor
add
clc
pop
dec
aaa
jecxz
mov
push
push
jg
mov
sub
cmp
jg
js
sbb
addr16
outsl
cmp
nop
pop
cmp
push
pop
sbb
icebp
sbb
ss
sahf
stos
rcl
cld
push
push
cwtl
xchg
push
xor
adc
push
push
outsb
shlb
inc
out
adc
call
dec
pushf
loopne
rorl
mov
loop
or
sub
pop
jmp
cmp
cmpl
xchg
shlb
dec
or
push
dec
sahf
adc
int3
sbb
pop
test
sub
test
jo
push
mov
ds
add
repz
add
xor
or
sahf
fchs
test
jle
lret
dec
clc
push
arpl
inc
sub
or
gs
pop
xchg
loopne
add
pop
ret
or
push
adc
or
mov
jmp
movsl
push
lock
jns
cld
lock
add
test
mov
mov
call
or
push
popa
jp
xor
out
es
and
push
hlt
inc
inc
nop
xchg
inc
sub
push
mov
ret
push
dec
push
clc
xor
mov
pop
xchg
inc
or
inc
out
sbb
lock
jb
out
jge
out
adc
pop
test
ds
sub
test
or
lahf
cltd
stos
and
lock
ds
cmp
gs
ss
roll
daa
push
aaa
and
or
cmp
xor
mov
lock
pusha
dec
fsubrs
mov
out
xor
packssdw
shl
push
leave
andb
push
jmp
lcall
push
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
daa
or
mov
cmp
aas
lods
mov
std
inc
xor
pop
cmp
mov
repz
xor
je
cmp
je
test
inc
js
pop
adcb
mov
repnz
push
and
iret
jae
lods
and
and
pop
mov
icebp
pop
add
add
cld
pop
jbe
cld
es
sub
add
inc
sbb
or
and
sub
mov
mov
mov
lock
rclb
dec
enter
adc
dec
mov
lcall
inc
pop
mov
jge
icebp
out
test
jb
cmp
jne
movl
hlt
inc
mov
and
or
and
test
push
clc
int3
aam
add
ret
and
loopne
add
cld
lock
xor
mov
lea
mov
sub
dec
mov
cmp
xchg
mov
das
mov
xchg
inc
orb
imul
js
mov
jo
add
je
cli
in
jo
push
ja
sahf
jle
ret
xor
rol
dec
mov
push
xchg
adc
sub
stc
faddl
fstl
int3
fcomp
push
pop
shll
mov
inc
fildl
sub
mov
push
cmp
jl
add
lock
ret
out
pop
inc
sub
pop
cs
xchg
dec
inc
and
push
aad
leave
fsubrs
push
mov
add
push
add
inc
and
call
test
jo
mov
jp
xchg
mov
push
or
pop
or
int3
inc
xor
inc
inc
jnp
das
sbb
or
add
mov
add
mov
push
lret
test
jns
push
push
pop
pop
pusha
fs
push
cmp
cmp
stc
lea
ud2
xor
fmull
mov
sbb
sbb
push
pop
mov
sub
xchg
and
jle
push
dec
je
adc
roll
jne
push
mov
sbb
xor
sub
push
inc
push
jns
jne
xor
or
scas
mov
mov
add
out
test
daa
lods
pop
and
lret
xchg
sub
dec
sbb
or
loop
mov
pop
rclb
ret
addb
inc
add
je
inc
jle
and
push
icebp
add
cmp
inc
add
add
push
inc
rolb
add
jmp
aas
push
push
imul
jp
add
mov
cmc
pmulhuw
mov
sbb
jnp
por
or
nop
push
sub
inc
lcall
in
or
or
pop
out
loope
sub
ret
sub
dec
xchg
push
pop
fucomi
jae
cmp
push
jmp
fwait
cli
push
test
inc
push
mov
lret
adc
inc
aad
jbe
dec
or
nop
push
jno
or
jmp
into
xlat
pop
and
dec
lock
jmp
sub
or
inc
mov
pusha
movsb
add
and
aas
sbb
dec
or
xchg
cltd
or
adc
pop
jp
mov
fists
repz
sarb
add
push
jmp
pop
cld
in
xor
inc
call
and
sbb
loop
adc
in
cmp
in
inc
ljmp
daa
je
cmp
lock
xchg
subl
push
lods
rcrl
mov
xchg
faddl
jno
adc
jno
cmp
xor
xor
popf
and
add
fs
ficoml
add
add
dec
push
inc
jno
mov
jne
and
cmp
dec
into
andb
sbb
or
push
inc
fwait
xchg
fisttpl
and
mov
insl
insb
enter
pop
je
fwait
adc
loopne
xchg
cltd
clc
or
fs
jno
mov
inc
jo
lahf
adc
sub
decl
mov
arpl
mov
pop
jg
cmp
jno
imul
outsb
pusha
mov
inc
pop
cltd
dec
xor
pop
pop
pop
adc
outsb
push
sub
shll
sbb
std
loope
pop
push
insb
jmp
out
push
cmp
mov
adc
adc
loopne
dec
fdivrs
movsb
or
inc
jo
dec
pusha
mov
mov
push
xchg
adc
cmp
movl
jle
mov
sub
inc
jle
enter
jmp
adc
sub
inc
add
push
or
hlt
call
push
outsb
dec
sahf
sub
call
mov
sti
cld
pop
das
inc
hlt
pop
test
cli
movsb
xchg
arpl
mov
jl
addr16
hlt
jg
mov
sub
push
lea
js
cmp
or
aas
add
jmp
loope
lds
jl
push
andl
mov
mov
xor
or
cs
loopne
int
or
decb
push
jle
pusha
pop
mov
add
mov
add
mov
loopne
mov
repz
cmp
push
jg
mov
outsb
sbb
movsl
cmp
shrb
pop
test
mov
mov
adc
shrl
inc
add
adc
mov
aas
pop
or
jns
jb
test
push
or
rclb
add
add
jge
mov
mov
data16
mov
gs
jmp
adc
add
sub
sahf
push
mov
add
pop
in
push
ja
mov
inc
test
cmp
imul
push
cld
push
into
or
pop
xchg
push
mov
xor
adc
ret
jmp
sub
or
cmp
in
mov
add
adcb
and
jmp
popa
push
in
push
xchg
adc
mov
sub
jmp
add
adc
dec
mov
push
sub
repnz
or
inc
mov
movsb
dec
pop
or
cmc
xorb
xchg
push
push
adc
inc
dec
cmpl
shr
jmp
in
jnp
dec
add
iret
test
lea
test
mov
in
cs
push
inc
sbb
loope
sub
mov
divb
pop
sbb
and
inc
add
pop
sbb
add
in
dec
mov
or
bound
pop
jle
test
add
pusha
mov
dec
dec
sub
mov
movsb
add
push
push
js
fcomp
in
cmc
push
clc
stos
cmp
push
fldl
pop
push
push
fstpl
dec
push
add
repz
pop
out
sub
aaa
adc
adc
jne
jns
sahf
lahf
push
divb
or
jne
or
out
cli
jne
or
jecxz
loopne
fwait
shl
fldz
add
pop
andl
mov
fistpll
or
inc
in
or
pop
xchg
stos
dec
inc
lea
movq
push
xor
cmpxchg
test
aam
arpl
orl
jnp
fstl
jecxz
loop
mov
stos
mov
movsl
movsl
lea
movsl
mov
adcb
xor
scas
insb
mov
sbb
nop
mov
xchg
or
mov
push
lea
test
fidivrs
gs
sbb
aam
dec
popa
sub
lea
inc
ffree
jge
jne
mov
pushl
inc
inc
in
sub
mov
or
fimuls
movsl
cmpb
pminub
push
and
push
or
pop
sbb
daa
push
and
mov
shrb
push
test
dec
ja
or
add
fmull
push
push
fcomps
out
lods
sbb
push
cli
fnsave
test
jbe
sbb
adcl
push
mov
push
call
mov
mov
pop
lret
push
push
push
test
cmp
pop
addl
sub
popf
pusha
leave
mov
rcrb
pushf
sub
and
popa
call
in
andl
fadds
dec
sbb
call
mov
mov
adc
pop
js
sbb
pop
mov
stos
adc
cmp
mov
movsl
pop
mov
xchg
mov
mov
xchg
adc
addr16
or
adc
popa
push
dec
or
arpl
adc
adcb
cmp
inc
imull
or
fmulp
lods
push
fistps
mov
mov
push
lods
ret
jb
jb
fildll
xor
mov
add
dec
enter
add
xor
imul
fs
push
jns
pop
enter
or
jo
vmwrite
xor
cmpl
rolb
inc
push
ret
push
push
pusha
xor
fmuls
pop
rcrb
icebp
loopne
leave
enter
jo
loopne
adc
movsb
push
mov
in
call
lcall
push
add
add
pushf
mov
ror
enter
pushf
pushf
sarb
mov
test
gs
mov
stos
xchg
add
outsb
adc
jg
pop
aas
dec
rdtsc
push
jns
jl
and
lock
mov
or
popa
xor
push
ss
pop
push
mov
ret
cs
jecxz
mov
loopne
lahf
xor
cmp
jle
pushf
ret
xorb
cli
es
fisubrl
xchg
and
cmp
or
add
or
push
push
adc
call
orl
in
add
jno
lea
out
fs
add
cs
rolb
nop
pushw
shl
cmp
jbe
leave
jge
add
test
hlt
repnz
jl
xor
jge
add
into
fistps
dec
sbbb
roll
inc
or
xor
lock
push
jne
and
or
inc
push
pop
add
add
jo
clts
push
in
cltd
or
jle
shl
jmp
cmc
fists
sbb
inc
cmp
mov
inc
and
push
insb
adc
jo
cmc
sub
scas
mov
push
addb
in
pop
stos
adc
cmp
push
xchg
aad
in
mov
jp
adc
ret
cmp
loop
fsubrs
decl
loope
push
imulb
push
scas
lret
jl
jb
bound
and
adcb
mov
js
repnz
aas
xchg
inc
aaa
mov
pop
bswap
mov
pushf
lea
aad
push
scas
adc
out
or
cmpsb
rcrb
jge
xor
xlat
inc
adc
movlps
add
dec
out
jne
xor
xor
ret
mov
jnp
loopne
sbb
arpl
mov
mov
rol
jo
or
imul
outsl
loopne
mov
sbb
test
or
sbb
inc
ret
cmc
mov
adc
mov
sub
add
lret
loope
push
leave
cmp
pop
jle
pusha
fmuls
mov
lret
pop
sbb
lods
jbe
push
daa
in
dec
pop
sub
and
lret
out
or
andl
and
inc
popa
test
and
ret
mov
push
enter
inc
outsl
dec
mov
mull
pop
in
jg
or
stos
xor
jo
add
sti
daa
lcall
fcomps
ret
insl
lea
push
and
fisubl
jp
lea
add
pop
gs
sbb
sarb
std
add
movlps
mov
jb
fistpll
pusha
ret
lea
add
cld
sbb
push
das
push
popa
xchg
mov
mov
or
outsb
cmp
iret
pop
fmuls
lods
adc
int
sbb
cmp
push
jge
faddl
outsb
dec
clc
ja
in
imul
add
or
jo
cmp
and
inc
ljmp
pushf
push
sbb
sbb
push
mov
pop
js
mov
rcr
js
sbb
push
jo
mov
aam
pop
jb
or
jne
lret
xor
push
jle
cmc
dec
mov
and
pop
push
cmpsl
add
mov
add
leave
jge
jecxz
imul
mov
mov
mov
sbb
lods
mov
push
repnz
xchg
and
ljmp
adc
inc
push
stos
pop
and
lahf
add
push
sbbl
adc
lahf
fsubrs
add
pop
or
mov
enter
bound
pop
test
push
sbbl
fwait
push
nop
punpckhbw
dec
loope
fists
push
arpl
or
testl
sub
into
dec
push
out
jns
add
add
pop
dec
inc
and
inc
shr
cmpsl
xor
testl
notl
mov
loopne
xchg
and
mov
cmp
test
mov
push
mov
leave
popa
loopne
or
jp
add
popf
data16
and
addb
mov
outsl
in
ljmp
mov
sbb
aam
or
pop
mov
mov
andl
mov
xor
cmp
divb
addr16
sub
cmp
push
das
loop
mov
xlat
cmp
jns
in
add
adc
mov
adc
xor
and
jne
pusha
out
add
pushl
pop
movsl
pop
in
mov
jnp
pusha
movb
insl
mov
lods
les
jecxz
dec
into
insl
add
cmpsb
pushf
ret
adc
xor
psubq
mov
pop
lea
mov
fisttpll
sbb
mov
or
in
enter
cmp
dec
sbb
mov
jle
sub
dec
adc
add
mov
adc
and
pop
adc
andl
push
lcall
popa
xchg
cs
mov
adcb
ret
sbb
fsubrp
sbb
das
sub
add
les
lret
into
outsb
test
push
cmpsl
addr16
lock
push
dec
bound
aam
cmp
pusha
pop
loopne
or
add
jge
loop
lahf
lods
push
inc
test
das
popf
inc
push
push
push
or
add
dec
les
mov
outsb
mov
gs
rolb
inc
movsb
addr16
cltd
and
push
aad
das
enter
jl
fistpl
subb
pusha
push
and
inc
mov
rcll
testl
pcmpeqw
sub
popf
clc
jno
fimull
and
add
push
xchg
adc
ja
push
push
aas
mov
add
shlb
out
sub
leave
stos
push
rcrl
and
adc
int
adc
cltd
push
pop
addb
or
mov
jno
cmpsl
repnz
mov
push
mov
dec
add
jmp
test
insb
mov
mov
mov
push
inc
scas
lods
push
sbb
inc
inc
sbb
xor
mov
popa
dec
pop
test
or
or
add
push
jmp
cmp
sbb
in
cmp
push
in
add
shrb
sbb
dec
loope
sub
call
jmp
sti
jg
clc
or
pushl
sbb
dec
dec
dec
add
cmp
add
push
stos
test
jp
andl
jno
arpl
movsl
test
add
popf
ss
insl
fs
sbb
add
mov
adc
mov
clc
mov
push
xor
fisubrs
lods
add
test
roll
rorb
popa
popf
dec
push
mov
add
pop
jb
push
push
pushf
pop
pop
xor
in
test
in
imul
mov
push
cs
pop
enter
dec
adc
inc
sub
xchg
inc
stos
add
movsb
or
imul
or
cmpsb
xorl
cmpsb
andl
mov
dec
sahf
mov
xchg
cmp
sbb
iret
ss
popa
add
pop
test
sub
inc
and
xor
dec
ss
flds
cmp
sahf
mov
pop
and
mov
mov
or
push
push
add
testl
inc
dec
push
and
and
add
xor
cltd
insb
inc
mov
pop
adc
or
jne
xchg
or
push
or
adcb
je
jecxz
jb
shr
test
leave
push
cmp
push
ja
sub
push
pop
or
or
sbb
sbb
inc
movsb
adc
push
test
push
cwtl
iret
insb
in
sti
push
sub
sbb
movsb
ror
test
and
and
call
or
sbb
sarb
or
out
test
test
add
push
jmp
lock
sub
xchg
pop
sub
sbb
add
sbb
xchg
addb
pop
cmp
push
arpl
mov
push
adc
sbbl
jns
push
pop
jo
or
sbb
xor
cli
dec
push
push
mov
popa
mov
cmp
add
or
dec
xor
jge
negb
inc
test
jg
test
jo
leave
cmp
and
xchg
and
ss
lods
rcrl
xor
icebp
xchg
fldt
call
sub
mov
scas
push
or
or
jbe
movsl
nop
push
lea
fdivrl
sbb
xchg
test
add
inc
cmp
and
sbb
pop
paddb
inc
mov
imul
push
dec
xchg
push
ficoms
add
mov
sbb
repz
pop
pop
lock
fsubs
aaa
rcrb
push
subl
xchg
push
les
lret
xor
xchg
jnp
aas
cmp
push
orl
test
and
sbb
push
icebp
add
add
mov
add
sbb
inc
push
mov
arpl
bound
imull
lock
fstps
sbb
adc
arpl
divb
sbb
ret
pop
mov
and
sub
aaa
mov
mov
and
jle
xor
push
test
sbb
add
push
pop
fnstcw
in
mov
js
xor
pop
jne
and
xor
ja
lcall
mov
fisubs
shr
push
or
adc
lock
or
or
fnsave
pop
mov
andl
pop
clc
xor
lds
jmp
add
je,pt
and
or
push
dec
push
push
add
sbb
in
sbb
pop
gs
stos
dec
inc
mov
pop
pop
pushl
mov
inc
data16
push
subb
push
sbb
sub
jle,pt
ja
lods
push
es
mov
xor
push
orl
push
and
inc
insb
shll
rorb
nop
or
xor
xchg
data16
push
loop
fbstp
or
xchg
repz
cmp
push
aam
jae
sbbb
and
or
aam
mov
jmp
cmpsb
mov
jbe
xchg
adcb
sbb
jmp
bound
rorb
cwtl
or
xor
lret
inc
mov
test
push
scas
sub
imul
mov
or
jbe
push
cmp
mov
mov
les
jmp
shll
imul
in
inc
imulb
nop
sbbl
push
dec
pop
test
push
lcall
push
mov
dec
jmp
push
cmp
je
adc
mov
cmp
imul
xchg
sbb
es
jecxz
push
inc
inc
imul
adc
xor
pop
pusha
ds
add
xchg
and
adc
push
mov
adcl
inc
mov
test
rcrl
test
fucomi
lcall
adc
shlb
mov
xor
inc
mov
mov
ljmp
test
jl
cmp
je
clc
sub
xor
jmp
and
ja
add
pop
movsb
dec
mov
repz
mov
loope
scas
outsl
sbb
jmp
sub
add
ret
xor
add
adc
mov
mov
stos
jle
test
dec
mov
dec
inc
and
pushf
imul
pop
dec
and
test
sbb
cmc
stos
add
dec
cld
jno
arpl
shl
fld
mov
or
push
or
loop
decb
cmp
je
or
pop
dec
mov
aam
mov
js
push
popa
lret
xchg
and
jbe
ss
mov
stos
fldl
scas
int3
popa
push
sbb
add
in
cli
fnstsw
test
je
and
mov
jp
and
inc
push
scas
shrl
sbb
fldl
mov
cmp
sti
sti
ss
inc
popf
or
fsubrl
push
adc
fwait
mov
xor
mov
cmp
sar
mov
and
pop
fsub
pop
fsubrp
jmp
jge
sbb
mov
das
test
sub
lahf
sbb
mov
pop
add
and
xor
push
nop
mov
scas
add
idivl
lods
movb
cmp
je
add
push
adc
mov
sub
in
and
inc
push
ss
jae
daa
sub
pop
push
cmp
xlat
dec
scas
adc
xor
movsb
fisttps
loope
sbb
jmp
push
or
test
push
mov
push
sbb
dec
sub
out
xor
jne
xor
int
mov
xchg
mov
sbb
int
xchg
push
jae
push
cmp
push
into
push
jns
and
push
pop
xor
leave
lahf
ret
and
push
es
fwait
xchg
pop
adc
or
mov
adc
push
dec
dec
adc
xchg
xchg
adc
cld
and
xor
popa
das
rclb
and
stos
xor
sub
push
and
adc
and
adc
pop
js,pn
in
enter
lret
xor
add
fnsave
adc
inc
ficomps
sbb
das
rcll
pushf
pushf
mov
xor
sbb
test
in
sub
pop
lahf
xchg
int
jecxz
sub
pop
push
shll
ret
rclb
and
sbb
xorb
cld
xchg
gs
and
and
out
mov
cs
push
push
in
enter
xchg
or
push
mov
jo
movl
sets
xchg
inc
pop
adc
xor
loopne
adc
adc
pop
push
xor
fcomi
adc
sbb
ret
scas
shl
or
int
repnz
inc
and
push
lret
or
push
inc
push
push
scas
or
sbb
or
and
xor
push
push
lret
subb
jne
push
lret
xchg
adc
push
daa
test
incb
lds
pushf
test
loopne
adc
mov
rcrb
out
cmp
fisubrl
or
sahf
push
das
inc
push
bound
sahf
out
test
cmp
repz
iret
repz
push
data16
cltd
stos
cmp
repz
int3
fucomp
jns
cmpsl
stc
adc
out
sahf
out
jbe
cwtl
test
lret
mov
aad
dec
and
push
xchg
and
pop
push
in
ds
iret
imul
insb
sub
in
add
shrl
adc
mov
call
add
outsb
in
sub
sbb
mov
rcll
push
cmpsl
fiaddl
or
mov
popa
pop
cmpsl
pop
ret
cmp
xor
and
pop
addb
and
sbb
nop
aas
and
adc
mov
add
sub
or
push
push
lahf
js
fisubl
lds
nop
rolb
sub
adc
adc
add
sar
and
nop
sub
add
into
daa
push
mov
sub
ficoms
rclb
shrb
mov
push
enter
or
leave
xchg
push
or
add
repnz
sub
add
push
adc
inc
addl
aam
sub
add
mov
fnstenv
sbb
mov
or
pop
cmp
pop
jno
mov
add
add
cmpsb
cmp
cli
dec
test
jge
jbe
pop
jo
add
sbb
mov
dec
mov
jnp
shll
ja
push
fisttpll
or
sub
andb
push
test
inc
mov
and
adc
lods
andl
xchg
xchg
out
push
in
aad
pop
mov
popf
fwait
sahf
lea
or
loope
sub
xor
call
pop
test
add
loopne
and
test
and
cmc
jae
xor
popa
shlb
faddl
and
jae
pop
lahf
or
or
imul
or
test
or
push
lret
add
out
pusha
fmuls
adc
inc
enter
cmp
rorl
ficompl
sub
adc
das
and
popa
adc
cltd
pop
mov
andb
addr16
gs
adc
popa
mov
daa
inc
push
push
push
outsl
dec
push
push
jp
mov
add
pop
leave
xchg
xchg
add
pop
mov
xor
sbb
push
in
push
add
andl
add
mov
xchg
or
xchg
and
outsb
mov
fldt
and
repnz
orl
sbb
iret
lahf
mov
inc
cmpsb
adc
das
imul
add
add
into
in
mov
jg
sub
inc
sbb
aam
mov
in
sub
adc
xchg
andb
sbb
jns
rorl
mov
and
adc
adc
mov
and
sbb
sub
lgdtl
add
je
push
push
dec
adc
xchg
dec
fisubrl
flds
add
add
or
xchg
jne
fwait
dec
or
dec
or
lahf
inc
aam
test
adc
mov
cmc
xor
add
ret
push
sub
adc
movsb
inc
adc
jg
jg
add
or
sbb
sub
push
push
jge
lea
add
dec
or
sbb
add
xor
lcall
sbb
add
cmp
aam
push
adc
jae
stos
and
lea
fiaddl
push
cmc
or
xchg
ljmp
and
into
sahf
add
or
mov
add
xchg
xor
iret
sbb
call
testl
scas
adc
sbb
push
test
adc
add
sbb
addl
jb
adc
fwait
xor
adc
pop
xchg
xor
mov
and
jb
andb
mov
pop
inc
aad
adc
adc
sub
push
and
dec
es
add
or
mov
popf
xor
or
fs
sub
inc
add
cs
mov
popf
sub
push
adc
cli
sbb
jno
inc
or
test
pop
push
cmp
aaa
push
mov
les
ret
mov
or
outsl
pop
adc
adcb
aas
sub
ret
xor
and
add
lods
mov
mov
cwtl
cmp
sbb
pushf
repz
pop
lock
add
repz
outsl
mov
fstl
xor
or
jmp
mov
imulb
push
cmp
inc
mov
or
or
mov
dec
ret
push
and
pop
cwtl
lret
mov
mov
fs
mov
ret
adc
adc
fdivs
pusha
arpl
jge
xchg
je
xor
test
jnp
cmp
inc
add
mov
or
jmp
dec
mov
jns
lea
adc
rclb
push
add
dec
or
mov
cmp
mov
pop
adcb
cmp
je
xor
adc
add
divl
bound
push
arpl
test
and
adc
lock
sarl
ret
pop
ja
jno
fisubl
rcrl
imul
daa
ret
fcoms
xchg
pusha
lods
mov
pushf
shl
sub
jne
dec
insl
repz
add
mov
pop
imul
mov
fildl
sbb
cltd
add
adc
xor
add
pop
into
subl
push
jp
add
pop
push
insl
and
aaa
adc
push
adc
notl
clc
cwtl
stos
cltd
fiaddl
sbbb
push
and
movsl
test
sarb
movsl
test
out
testl
and
xor
movsl
add
nop
testl
push
mov
dec
call
adc
push
inc
sub
pop
in
push
adc
lret
dec
push
mov
push
adc
jle
pop
add
mov
add
jl
sbb
jl
mov
jb
ficompl
jb
outsl
push
push
arpl
push
push
jmp
in
insb
sbbb
out
jbe
mov
sbb
add
cwtl
mov
or
sub
push
cmp
sub
adc
dec
adc
xchg
sbb
lods
inc
inc
and
fldl
rclb
xor
repz
push
add
cmpb
mov
sub
inc
mov
adc
es
js
shlb
pop
lock
xor
lahf
inc
popa
test
add
xchg
fidivrs
mov
mov
aam
dec
jg
lcall
outsb
mov
xor
sub
cmp
mov
jl
shr
and
cli
inc
jl
pop
imul
jle
xor
sti
mov
shll
pop
mov
push
add
inc
jmp
movb
mov
mov
fs
pop
idiv
jl
sub
cmp
add
aad
aas
push
sbb
inc
lods
repnz
leave
push
dec
ret
mov
dec
js
cld
shrl
jp
jno
or
mov
cmpsl
push
test
ja
dec
lock
add
xchg
movzwl
lds
shr
add
or
dec
or
dec
dec
in
xor
lock
cmpsl
sarb
xchg
in
lods
mov
nop
sbb
mov
mov
mov
pop
push
sub
into
faddl
cmp
fidivrs
push
mov
mov
push
cmp
push
xorb
adc
fcmovne
xchg
test
pop
mov
rorb
cmpsl
dec
xchg
cmp
jnp
ret
ja
adc
mov
mov
jp
pop
adc
test
or
xor
pusha
fs
bound
lret
dec
test
adc
or
data16
mov
sub
add
xlat
or
shrb
and
mov
aam
jl
out
xchg
adc
add
enter
cmp
push
push
lods
sub
outsb
push
lods
push
xor
imul
pop
inc
dec
cmp
adc
push
push
mov
mov
jl
xchg
jp
sub
fbstp
push
subb
insl
scas
push
fdivrs
not
pop
jns
xor
stc
in
enterw
push
rorl
sbb
data16
push
or
lahf
dec
call
ss
inc
cwtl
iret
sbb
sbb
icebp
and
push
jo
enter
push
push
add
lods
sub
repnz
dec
jae
cwtl
and
push
not
sub
aam
in
xchg
jbe
out
mov
xor
in
sbb
imul
pop
loopne
and
add
ja
jbe
and
imul
in
mov
in
jmp
frstor
xor
mov
das
daa
jns
es
lock
ret
outsl
sub
sub
pop
inc
mov
adc
fisubs
es
mov
pusha
cwtl
dec
nop
dec
dec
cmp
inc
dec
outsb
push
xchg
or
js
fs
cmp
fnstcw
cmp
pushf
xchg
dec
jb
cmp
jno
xchg
int3
cmp
xor
ret
andb
bound
or
aaa
mov
test
push
gs
xchg
test
sub
lret
sbb
and
aaa
push
in
inc
cs
xchg
aaa
imul
das
mov
loope
sti
fadds
push
lcall
mov
mov
xchg
inc
mov
pop
push
push
sbb
fldz
outsb
and
outsb
mov
add
sbb
loopne
js,pn
adc
mov
aam
loope
mov
test
faddl
add
loopne
or
test
fisubs
rcrb
xchg
push
mov
fsubr
pop
xlat
mulb
jecxz
add
mov
ficompl
cmp
pop
enter
int3
out
sar
pop
xchg
jp
stos
mov
add
ror
in
das
push
or
or
adc
inc
rcl
push
lods
add
fcoms
mov
mov
mov
mov
or
xchg
mov
push
add
loop
call
insb
pop
nop
cmp
imul
xchg
cs
and
pop
nop
inc
mov
xchg
int3
push
adc
mov
xadd
adc
and
lock
lcall
loope
push
jne
and
push
rclb
jno
fcoms
cltd
pop
xor
inc
and
xchg
not
fwait
bound
mov
cmc
mov
dec
adc
jo
inc
push
dec
and
xor
mov
xor
sbb
xchg
push
cmp
addb
neg
sub
nop
sahf
orl
sub
lock
hlt
nop
adc
into
push
lcall
adc
sbb
pop
inc
and
pop
lcall
call
outsl
adc
add
jne
sub
xor
test
xor
sbb
sub
jecxz
out
imul
jmp
fwait
pop
fisubrs
hlt
dec
ror
cs
insb
or
pop
pop
test
and
mov
push
insl
or
test
cltd
fwait
loop
mov
and
add
stos
in
adc
push
movsl
mov
mov
push
mov
sub
adc
sahf
adcl
test
pop
adc
aas
or
xchg
add
outsl
sub
call
push
pop
mov
add
sbb
pushf
iret
mov
fwait
mov
sub
cmp
ja
fcomps
dec
or
aad
xor
iret
lods
jmp
push
push
stos
push
sub
mov
push
push
lds
aaa
pop
inc
test
cmpsb
clc
sub
icebp
sub
decl
inc
and
fistl
call
push
movsl
int3
cmp
aam
clc
cmp
shrb
imul
adc
cld
jo
pop
adc
incl
jl
movsl
add
test
lret
jb
fcmovb
and
mov
out
fdivrs
into
or
push
pop
lret
mov
scas
outsl
and
popf
xor
and
and
ror
in
push
or
or
push
cmp
mov
push
out
inc
or
fsubrl
push
pop
adc
flds
push
jmp
adc
xor
sti
bnd
imul
and
sbb
push
fwait
dec
repz
cli
or
adc
jge
call
or
sbb
push
xchg
sub
fidivrl
sub
loopne
outsb
add
in
inc
ss
nop
mov
sbb
loopne
push
je
or
mov
das
dec
call
aaa
pop
lcall
add
inc
jae
int3
adc
lods
push
lret
rolb
into
adc
inc
xor
aam
pop
xor
sub
popa
jmp
sub
movsl
push
and
or
mov
cli
adc
pop
mov
push
cltd
xchg
dec
pop
in
push
push
pushl
pushf
jo
push
mov
sbb
mov
sbb
xchg
call
sub
fwait
push
pop
add
mov
sub
pop
and
or
fcmovne
jl
add
leave
daa
stos
addl
add
mov
gs
inc
xor
xchg
inc
push
lret
repz
call
cs
dec
pop
sbb
mov
jbe
in
xchg
cmp
add
pop
sub
sbb
cmp
ffree
xchg
les
loopne
inc
cmp
jl
cmp
int
nop
loopne
movsl
addl
rorl
scas
pop
or
mov
repnz
pop
push
pop
push
lock
inc
jmp
and
xchg
lret
mov
movb
xor
mov
push
insb
aam
or
jae
pminub
jne
ja
sub
fsubr
pop
pop
dec
cmp
in
mov
adc
push
xchg
adc
or
pop
mov
gs
push
cmp
push
push
cmp
inc
cmp
in
cmp
sub
cmc
iret
sub
pop
cmp
adc
pop
dec
lret
adc
aam
fsubrl
mov
lock
add
and
dec
or
mov
add
pop
leave
or
ret
cmp
push
pop
data16
mov
sbb
test
das
cltd
sbbb
xor
push
ret
rolb
loopne
xor
pop
or
mov
or
and
add
jmp
inc
jl
cmp
dec
add
inc
movsb
sbb
and
dec
arpl
bound
pushf
imul
push
cmpsl
rol
or
out
xor
pop
lods
inc
xchg
andb
orb
xor
out
cmc
xchg
cld
push
adc
sub
fcomps
mov
pop
lods
or
adc
dec
pushf
dec
sub
add
add
outsb
xchg
fnstenv
add
pop
inc
push
push
lahf
mov
fldl
mov
ds
dec
push
mov
xchg
iret
add
push
sbb
cmp
inc
frstor
lret
lcall
test
call
inc
in
popa
into
mov
scas
dec
jl
lret
push
mov
les
or
ret
jo
nop
jne
mov
lock
sbb
pop
enter
jae
sbb
cwtl
or
lock
test
mov
xchg
pop
fcoms
ss
or
xchg
cmp
mov
clc
xchg
push
mov
mov
jnp
or
je
mov
movsl
mov
jg
sti
mov
aad
xor
mov
js
icebp
scas
push
test
pop
pop
movsl
cwtl
in
inc
int3
lock
call
push
jno
and
bound
shrb
xor
fsubr
addr16
es
fs
pop
add
ss
push
je
mov
jmp
aam
push
notb
sub
dec
push
pop
lret
inc
orl
add
bound
insl
fwait
lods
xchg
in
js
add
mov
lods
xor
lods
rorb
mov
inc
insl
popa
aad
aad
aam
jae
adc
adc
es
sbbb
enter
pop
test
repz
ljmp
or
nop
mov
push
sbb
jbe
and
call
add
xor
out
xor
insl
and
mov
in
aas
push
aaa
push
inc
sbb
popf
jo
es
jo
in
data16
xchg
or
daa
push
leave
dec
add
add
or
rorb
aad
push
mov
push
mov
pusha
rorl
or
dec
jmp
adc
cld
ss
mov
cmp
rolb
cmp
lods
mov
xor
xor
adc
fcompl
shll
push
jbe
decb
add
push
cltd
jb
or
or
je
push
clc
inc
lods
cmp
push
lods
cmpb
cmp
push
cmp
sti
ljmp
push
or
addl
ret
dec
jg
push
mov
test
xchg
xchg
adc
push
sub
mov
jne
sub
aas
incb
jae
mov
pop
cmp
stos
rcrl
sbb
mov
loope
mov
jmp
xchg
inc
sbb
jns
mov
pop
faddp
aam
fwait
jne
cltd
hlt
sahf
cli
push
daa
pop
add
fdivr
xchg
inc
push
fs
cmpb
scas
lahf
mov
adc
pop
pop
outsl
ud2
dec
sbb
mov
sub
lds
push
mov
and
and
and
movsl
dec
fisttpll
aam
add
ror
inc
leave
arpl
cmp
cmp
scas
and
js
adc
loope
pop
test
push
sub
inc
cmp
cmp
pop
push
idiv
pusha
dec
adc
out
pushf
rcrb
pop
and
mov
mov
push
jmp
ja
nop
cltd
or
sub
xchg
sub
inc
xor
dec
jns
inc
loope
fwait
and
xor
mov
push
hlt
movsb
adc
ss
bound
lret
inc
loopne
dec
add
and
and
xorb
inc
sbb
pop
roll
lods
movsl
add
cmp
and
into
imul
rol
inc
and
out
fistps
push
sub
inc
mov
or
addr16
pop
pop
test
andl
xor
adc
add
sub
mov
sub
addl
or
sbb
sahf
out
insb
ret
pop
adc
not
pmullw
ret
std
mov
lcall
mov
inc
iret
push
bound
filds
inc
push
push
add
xchg
test
adc
or
xchg
add
cmp
sub
lock
enter
and
or
shll
cmp
and
lods
xchg
test
ret
sub
pop
dec
dec
movsb
jg
int
mov
sub
je
fs
push
jge
xorb
imul
xchg
and
or
dec
or
pusha
sbb
movsb
or
cs
dec
push
mov
push
cmp
dec
inc
pop
lods
xor
mov
js
pop
push
bound
sbb
dec
pop
out
xor
iret
cmpl
movl
scas
add
pusha
leave
push
inc
inc
pop
clc
daa
int
pop
lock
test
pop
clc
push
add
incl
popa
shll
mov
fucomp
add
mov
in
shlb
rcrl
sbb
lcall
sub
cmp
dec
loop
lea
xchg
dec
and
add
int
pop
sub
call
dec
js
fs
test
jno,pn
mov
push
mov
dec
daa
pusha
mov
mov
pop
xchg
mov
mov
in
mov
cmp
xor
sub
testl
and
and
mov
movsb
pop
ss
test
adc
xchg
addl
mov
or
add
test
lea
or
jb
add
xchg
movsl
pop
lret
or
xor
out
repz
and
and
mov
test
inc
test
sub
mov
push
mov
sbb
bound
dec
pop
xor
push
xchg
sub
je
push
rclb
xor
pushf
mov
mov
mov
pop
xor
es
mov
jle
fisttpll
push
repz
stos
adc
inc
mov
jmp
outsb
mov
imull
jo
sbb
jmp
rcr
mov
imul
dec
sbb
es
rcll
ret
push
xchg
fcmovnb
or
mov
mov
or
lret
subb
cmp
scas
xchg
push
inc
sbb
leave
rcl
lahf
xor
push
lock
or
mov
inc
cwtl
insl
rcrl
adc
sbb
cmp
add
ss
mov
add
addb
rorb
xor
arpl
cmpsl
add
dec
je
inc
xor
pop
pop
mov
insb
aad
faddl
push
push
rolb
rorl
pusha
jno
gs
adc
and
loopne
ja
call
sbb
imul
xor
and
sbb
daa
fcoml
xor
and
faddl
test
shll
std
and
or
sub
loopne
nop
push
or
aad
bound
add
or
push
sub
fsubrl
sbb
xor
movsl
and
sub
orl
into
inc
add
outsb
sub
jbe
shll
mov
or
xor
mov
pop
and
rcrl
jns
jbe
xor
fisubrl
aad
sub
lds
sub
and
test
mov
leave
or
inc
fisubs
adc
punpckhbw
xor
stos
fcompl
sub
fwait
daa
enter
and
inc
sbb
push
dec
push
jl
pop
inc
loope
in
lods
cmp
inc
fsubp
push
push
popa
sbb
add
lret
shll
mov
xchg
je
push
or
xor
push
xor
test
pop
pusha
sub
sbb
testl
rcl
push
push
scas
pop
inc
scas
leave
pop
jbe
push
loop
jmp
sub
aad
adc
inc
pop
sub
or
mov
xor
inc
xor
enter
out
pop
and
shll
scas
cmpb
push
adc
loopne
out
jo
and
xor
adc
push
push
adc
stos
pop
pop
jb
imul
add
cmp
sbb
das
cmpsw
adc
push
add
add
adc
addl
ret
mov
popa
cmp
ljmp
add
add
push
sub
adc
fsubs
mov
mov
sbb
aam
push
fbstp
stos
dec
loopne
ret
push
push
cmpl
push
sahf
clc
mov
aaa
test
xor
and
lret
dec
dec
xchg
addr16
hlt
and
loope
jle
xor
add
xor
fisttpll
cmpsl
jno
arpl
push
add
adc
mulb
mov
or
cld
add
ljmp
cvtps2pi
das
or
scas
sub
xor
loope
add
mov
bound
shrl
add
out
popf
add
test
mov
ret
cmp
mov
lock
xor
sahf
cld
sbb
jl
adc
mov
or
inc
cmp
pop
aam
cmp
push
sbb
jbe
addb
pusha
push
dec
rcr
or
or
sub
fsubl
daa
dec
dec
adc
sbbb
push
cmp
or
push
lret
pop
pop
push
xchg
out
pop
push
mov
clc
je
inc
lock
xchg
ja
or
cld
cmp
je
jge
or
jl
mov
xor
adc
pop
enter
push
mov
pusha
shll
cmpb
push
leave
jo
mov
ret
dec
pop
pavgw
ja
shl
sub
pop
adc
sub
add
inc
pop
xor
add
jo
int
in
push
lcall
cmpsb
hlt
orl
xor
add
jle
xchg
insb
sahf
sub
in
cmp
xchg
jmp
mov
imull
out
fildl
rorl
pop
inc
add
sbbb
notl
jne
mov
mov
dec
or
or
inc
icebp
xchg
jmp
xor
dec
adc
inc
frstor
xor
pop
mov
xlat
inc
inc
imul
mov
push
or
push
and
or
jle
dec
mov
or
cmp
pushf
adcb
pusha
test
add
push
mov
test
push
das
dec
in
std
and
jae
jp
add
push
add
in
mov
subl
and
mov
mov
movsl
sub
ljmp
fs
sbb
push
xor
dec
dec
pushf
insb
pop
inc
push
pop
mov
std
cli
dec
mov
popa
inc
fwait
adc
test
push
xchg
add
call
jo
lods
sbb
lret
sahf
fildl
inc
dec
pop
call
jnp
add
ret
mov
pop
mov
mov
pop
xor
and
movsb
jmp
sbb
or
add
mov
add
push
push
hlt
dec
sbb
les
mov
push
add
sahf
add
inc
or
pop
dec
mov
icebp
frndint
ret
add
dec
aaa
push
mov
popa
add
in
mov
lock
repnz
dec
add
cli
sub
inc
pusha
pop
lret
mov
xchg
dec
jge
xlat
mov
add
mov
mov
jl
js
out
sbb
sub
ds
sbb
push
adc
call
shrl
int
js
push
jno
xor
inc
adc
add
lods
jnp
test
dec
jge
sbb
xchg
xchg
int3
xchg
mov
cmp
jb
sub
mov
cmp
lea
sub
dec
push
mov
mov
add
jmp
pop
xor
xchg
test
adc
cmp
and
cmpl
scas
orb
pushl
aad
jmp
pop
aam
jbe
and
sbb
int3
or
push
xlat
xchg
int3
mov
mov
push
sbb
cmp
dec
aad
add
dec
dec
cmp
pop
sbb
bound
and
ret
cmp
jae
inc
push
loope
inc
jmp
aam
or
pop
orb
das
sub
mov
fdivl
xor
loop
push
dec
mov
mov
mov
cmp
scas
or
or
mov
inc
mov
xlat
and
inc
clc
add
add
les
cmpl
dec
js
push
adc
mov
fwait
add
sub
xchg
loopne
and
add
and
loopne
or
test
jo
insl
arpl
or
loopne
movsb
sbb
jb
loopne
js
js
mov
or
xchg
inc
scas
lods
mov
add
call
add
int
les
or
lods
call
popa
sub
lods
mov
pop
xor
xchg
mov
push
dec
or
pushf
cmp
test
sub
std
adc
pusha
js
jnp
mov
xor
call
add
test
xchg
sbbb
sbb
out
xchg
add
popf
rclb
add
rorb
aam
arpl
inc
loop
adc
inc
pop
push
and
jl
int3
pusha
out
ret
ljmp
pushf
pop
mov
and
or
adc
and
ror
add
xchg
out
or
sahf
mov
xorb
push
outsl
xchg
add
xchg
or
data16
lock
popf
test
mov
cmp
jo
insl
add
xor
shl
lret
aam
pop
nop
cmpsl
movsb
xor
arpl
dec
dec
arpl
dec
add
cmp
adc
jne
fcomps
jns
pop
ljmp
adc
add
dec
test
lock
push
call
es
push
and
mov
pop
cmp
jbe
sub
pop
dec
or
imul
fadds
mov
aaa
inc
aas
lods
movsl
inc
dec
push
push
daa
movzbl
push
or
in
in
cmpsb
push
test
call
mov
out
loopne
faddl
cmp
jo
js
lea
or
nop
add
sub
add
aad
adc
imul
xchg
push
push
mov
add
cwtl
sbb
adc
daa
sbb
sbb
scas
outsl
xor
out
mov
and
mov
cmpsb
add
and
mov
add
movl
ret
and
stc
iret
xchg
mov
lea
jne
or
or
mov
imul
or
dec
or
mov
rcl
add
mov
cmpl
or
and
ljmp
xor
cmp
cmp
jbe
cmp
jbe
mov
mov
lret
lea
mov
in
insl
pusha
pusha
add
insl
add
ds
inc
loope
out
mov
sub
push
adc
add
push
lahf
sbb
adc
fisttps
push
or
add
push
adc
rcr
cmp
mov
pop
ffreep
jne
push
aad
out
fcmovnb
push
lds
decl
into
mov
mov
pop
mov
and
sub
adc
outsl
xchg
stc
scas
jmp
mov
cmp
jb
or
movsb
sbb
das
or
push
cmp
in
xchg
mov
adcl
pop
repnz
add
imul
pop
mov
test
push
mov
ds
aam
and
adc
and
sbb
loope
push
bound
mov
jbe
xor
jmp
xchg
lds
jo
dec
shll
and
data16
mov
mov
and
shrb
ret
inc
mov
xchg
xchg
push
and
sahf
or
inc
sub
test
adc
and
addl
adc
sub
outsb
or
js
xchg
nop
lahf
mov
add
in
loopne
call
aad
mov
dec
and
mov
mov
mov
add
pop
lret
or
pop
out
push
cs
insb
jnp
jmp
pop
xchg
lahf
lock
mov
nop
push
push
lock
mov
xchg
push
in
adc
mov
dec
mov
adc
or
and
pop
fbstp
sbb
jecxz
imul
push
sbb
pop
stos
lock
push
mov
cmp
ss
dec
cmp
loope
nop
sysret
add
adc
fs
sti
mov
sbb
test
shrl
and
in
and
mov
jae
add
ret
and
repnz
xchg
mov
popf
push
xor
jno
jns
hlt
jne
pop
clc
pop
rclb
mov
sbb
out
mov
cs
aam
andl
dec
shl
addb
xchg
fstpl
jle
xchg
jae
fcoml
lods
or
sbb
ss
jmp
lods
dec
push
adc
xor
shlb
xchg
nop
dec
lock
dec
subl
jmp
inc
xor
or
pop
or
arpl
loope
and
lea
add
dec
inc
shrb
jns
lret
dec
stos
in
jns
mov
or
mov
idivl
adc
or
inc
mov
movl
andl
mov
mov
inc
shlb
shrb
adc
lock
xchg
mov
mov
test
jmp
inc
add
and
sbb
sti
jnp
mov
xchg
dec
mov
jo
and
mov
mov
jnp
leave
in
pusha
add
test
add
or
xorb
aaa
movsb
adc
and
ret
xor
movsb
mov
pop
pop
fstpl
iret
lock
or
xchg
popf
andb
repnz
pop
adc
sub
mov
cmp
mov
sub
outsl
mov
es
pop
sbb
pop
inc
add
and
setns
mov
rclb
inc
imul
pop
pop
cltd
push
cld
mov
add
mov
ret
std
cmpsl
loope
pop
add
jae
pusha
mov
faddp
push
dec
adc
popf
mov
inc
push
or
ja
sub
adc
movb
lret
mov
mov
mov
mov
sbb
sub
lock
push
push
xchg
call
fld
insl
inc
and
push
andl
sub
and
add
sub
sub
mov
les
cmp
xlat
mov
mov
nop
xchg
jle
add
mov
mov
es
add
adc
push
sbb
sti
mov
cmp
cmp
sub
ret
jmp
push
out
push
inc
fistpll
adc
pop
clc
jne
loopne
je
sbb
idivb
mov
jge
adc
push
jg
and
mov
mov
daa
test
shrl
and
ds
movsb
mov
inc
lock
pop
clc
pop
frndint
jmp
clc
sbb
mov
out
adc
cmp
int3
push
cmpsl
loope
call
sbbl
cmp
xor
sbb
sbb
sub
cmp
push
inc
sbb
jb
ficomps
or
or
sarb
adc
push
and
xchg
mov
pop
hlt
and
push
pop
sbb
or
call
cmpsb
call
mov
xchg
push
or
cmp
jae
push
add
jle
or
inc
sub
and
aaa
add
sbb
pop
test
movsb
out
or
lea
movsb
pop
inc
fcoms
jmp
dec
or
pop
push
cmc
repnz
or
les
ds
test
jne
out
mov
aam
fcoml
stos
push
xchg
ja
mov
shr
xor
xor
cmp
mov
out
adc
lock
sarb
or
lods
arpl
jae
adc
int3
dec
jno
fildl
cwtl
push
push
jp
jns
cmpsb
mov
mov
aas
push
mov
push
jge
aam
jl
push
test
xchg
int3
mov
cs
ljmp
and
add
mov
in
sub
sub
pop
xchg
enter
adc
push
or
fidivrl
loope
push
aad
fmul
mov
dec
add
aam
bound
xor
cli
mov
adc
adc
addl
push
jl
cmp
loope
cmp
mov
rorl
mov
cmpsl
fidivs
or
push
jg
leave
pop
mov
push
cmp
or
std
mov
lret
or
sub
mov
hlt
mov
sbb
cmp
repnz
fcoml
daa
in
add
add
push
mov
jns
enter
cmp
sarb
popf
adc
arpl
cmpb
inc
push
stos
adc
fimull
idivl
enter
stc
sbb
inc
pop
sar
repnz
das
pushf
and
pop
add
scas
adc
subb
pop
mov
sbbl
mov
movsw
push
mov
movsb
mov
andl
adc
ljmp
out
inc
mov
inc
mov
adc
movb
fisttps
lea
cmpb
adc
out
add
in
push
rclb
sbb
ja
push
push
sarb
mov
mov
push
push
cmp
jb
and
push
sahf
mov
adc
lock
sbb
lods
dec
pop
mov
push
dec
imulb
js
jmp
cmpl
cmpsl
jmp
add
xor
dec
jae
lods
lods
and
push
lock
add
sub
or
sti
ss
xor
cmp
push
or
or
xlat
sbb
sbb
cmp
cmpsl
addr16
pop
xor
or
jecxz
inc
sub
les
jae
mov
and
cmpsb
add
cmp
push
add
xchg
js
add
mov
add
lcall
hlt
clc
dec
punpcklwd
add
inc
add
or
movb
inc
dec
fisubl
sub
add
dec
dec
dec
dec
add
push
pop
mov
dec
dec
or
or
jnp
or
jbe
aaa
aaa
aaa
or
jno
jmp
push
jmp
por
aaa
aaa
aaa
adc
pop
adc
pop
adc
push
adc
dec
aaa
aaa
aaa
aaa
adc
dec
adc
aas
pop
jmp
aaa
aaa
aaa
aaa
sbb
xor
jmp
sbb
es
aaa
aaa
aaa
sbb
and
pop
pop
jmp
aaa
aaa
aaa
aaa
and
or
jmp
and
gs
ffree
push
subb
pop
sbb
xchg
mov
pusha
xchg
push
jp
push
orb
lcall
repz
iret
repz
fneni(8087
in
out
lcall
add
or
out
or
out
sahf
out
sub
xor
sahf
aas
inc
sub
add
and
idiv
jg
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
sbb
or
mov
js
and
or
and
cmpl
add
and
divl
sbbl
cmpsb
cmpb
sbb
es
and
iret
and
hlt
insl
sub
cmpsl
mov
aaa
and
cld
push
lds
addb
pop
cmpsl
mov
cmp
add
xor
dec
jp
adc
jge
dec
mov
lret
push
in
add
and
jo
push
push
xchg
les
inc
sti
add
scas
xor
mov
xchg
jmp
scas
push
test
push
push
mov
add
jns
xor
mov
push
imul
je
mov
sbb
inc
pop
add
out
sub
adc
add
popf
add
jmp
mov
shll
and
add
inc
or
pop
dec
lds
or
push
insl
cmp
or
pop
xchg
bound
adc
adcb
sub
sti
adc
lock
jmp
mov
xchg
fiadds
or
xor
dec
adc
cmc
lret
push
xchg
push
jb
jge
shl
inc
mov
ficoml
cmp
cmc
mov
sub
arpl
ss
lds
sub
xlat
sbbl
add
or
fimuls
push
jne
jge
sti
push
push
push
pop
loopne
or
push
flds
or
push
pop
and
xchg
pop
hlt
and
pop
scas
add
sbb
mov
pop
test
jne
imul
jbe
rcrl
les
pop
and
mov
mov
or
rolb
out
pop
adc
lds
pushl
push
loope
test
inc
xchg
nop
ret
xor
sbb
insb
or
mov
cld
push
mov
jo
loope
je
fs
out
lock
jbe
rolb
or
adc
cmp
cmp
push
sub
daa
adc
add
adc
adc
lcall
sbb
pop
and
mov
inc
sahf
xchg
fnsave
xor
sub
and
cmpsb
lock
xchg
fsubs
aaa
jl
xchg
mov
dec
xchg
shl
add
push
xchg
jno
push
add
or
clc
int
and
mov
pop
shrb
insl
sahf
test
jl
loopne
xlat
mov
cmp
or
dec
insl
pusha
loopne
repz
sub
ja
gs
or
in
loop
ds
stos
cmp
sub
hlt
or
mov
xchg
cmpsb
loopne
bound
cmp
aam
cmp
les
add
es
cli
sub
scas
and
inc
add
les
roll
sbb
shll
sbb
popa
int3
cmpsb
imul
in
loopne
dec
imul
stc
mov
sbb
repz
add
js
and
inc
icebp
addl
shlb
aas
jno
sub
mov
fmull
xchg
xor
add
sbb
mov
cmp
clc
iret
cmp
jne
outsb
add
divb
int3
ret
cmp
int3
mov
mov
movsb
pop
push
repnz
inc
cmp
je
std
movsl
adc
aas
shll
add
dec
loop
je
insb
or
add
sbb
add
jne
sbb
mov
mov
push
inc
repnz
push
negb
lock
orl
loopne
loopne
push
xor
cmp
xor
add
and
out
push
enter
cwtl
cmp
or
div
add
sarl
sbb
leave
test
xor
loop
cmp
add
add
movsb
les
push
ljmp
cltd
push
xor
sbb
or
pop
push
push
mov
dec
pop
mov
rcl
jl
popf
push
mov
stos
outsl
adc
ret
inc
jo
es
xor
fldcw
dec
imul
repz
pop
xchg
mov
es
push
fwait
loope
aaa
inc
mov
outsl
adc
xor
shlb
push
or
dec
dec
fwait
andl
aas
jp
and
pop
adc
sarl
cmp
in
mov
push
inc
mov
fimuls
sbb
shl
mov
movsb
test
faddl
sbb
push
imul
add
or
dec
pop
ret
dec
and
cmc
add
inc
xchg
pusha
push
fndisi(8087
ja
cmpb
loope
in
jmp
movsb
pusha
daa
pop
iret
sub
cmpl
jge
fisttpll
leave
sbb
add
aas
sub
in
add
arpl
push
loope
xchg
xor
push
popf
movsb
les
sbb
inc
fimull
popa
outsl
loope
aam
mov
xor
fstpl
push
roll
in
xchg
daa
or
pop
add
sub
jae
push
cwtl
jb
dec
mov
fs
bound
mov
js
sbb
add
cmp
xor
cmp
mov
bound
add
xor
xchg
fcoms
mov
push
cltd
test
jb
and
sbbl
cmp
sbb
cwtl
andb
out
add
sbb
mov
pop
pop
jle
hlt
fcmovnbe
ja
pop
or
jne
push
jmp
cmp
je
push
inc
movsl
xor
insb
adc
fisubl
xchg
ss
lret
mov
xchg
push
aaa
subb
sub
cld
xor
and
push
in
or
jbe
lret
nop
ds
push
inc
or
inc
bnd
loope
shlb
test
inc
pop
add
into
sub
leave
mov
mov
push
add
mov
cmp
xchg
push
xlat
adc
mov
cwtl
sbb
pop
or
jl
mov
mov
cmp
rolb
rcrb
pop
faddl
add
pop
and
and
pop
sbbl
popl
js
pop
and
and
out
inc
mov
push
add
testb
jp
xor
daa
mov
inc
xor
push
cmc
sbb
adc
push
iret
pusha
inc
sub
mov
xor
jl
pusha
or
jp
in
or
test
sbb
or
sub
or
and
xor
sbb
leave
and
and
adc
mov
add
pop
mov
jmp
dec
loope
adc
in
call
inc
mov
popa
pop
daa
inc
in
orb
xor
shl
inc
add
pop
and
mov
in
pop
add
pop
lock
hlt
pop
enter
push
and
lock
insb
ja
pop
or
aas
or
icebp
sub
pop
adc
in
and
and
and
rcrb
and
fcoml
mov
es
pop
xor
xchg
push
es
dec
nop
xchg
dec
sub
push
bswap
clc
inc
adc
loope
push
sub
sbb
insl
bound
xor
or
mov
cmpb
inc
loop
les
dec
lea
xor
mov
test
stc
ret
in
iretw
insl
and
xchg
je
push
mov
and
and
incl
cmp
jl
sub
dec
sahf
f2xm1
lea
push
push
outsb
dec
jp
lea
out
inc
push
or
sbbl
fistpl
daa
push
fistpll
fldenv
dec
mov
lods
sub
inc
and
mov
sarb
xchg
pop
testb
hlt
push
pop
jl
jmp
out
push
inc
adc
or
pop
mov
xchg
sbb
les
shlb
sti
cmp
ret
mov
pop
jne
jge
and
dec
call
jecxz
add
rcrl
mov
in
inc
insl
adc
int3
sub
sahf
orl
xor
sub
bound
push
xchg
insb
je
js
ret
add
les
inc
sub
dec
sbb
push
fwait
xchg
int3
cmpsb
loop
imul
insl
leave
enter
call
rclb
cmpsb
push
jecxz
xchg
aaa
lcall
hlt
push
pop
cmp
in
fdivs
int3
cmp
jle
lock
es
repnz
add
mov
cli
outsl
push
fistpl
sbb
mov
adc
xor
xor
sarl
xchg
mov
sbb
pop
pop
sub
inc
xchg
sub
jg
add
repnz
mov
js
add
pop
jne
mov
add
inc
enter
push
cmpb
jb
fs
imul
push
mov
mov
or
add
xor
daa
std
cwtl
call
adc
pop
les
xor
and
and
add
fbld
cmpl
mov
std
rcrb
nop
testl
hlt
adc
mov
mov
lock
lret
jne
jl
jo
xor
sub
push
push
mov
adc
adc
or
jmp
mov
icebp
or
cmp
cmp
in
jp
sbb
fwait
adc
or
jnp
and
add
jae
les
scas
in
jge
ss
adc
sti
pop
jmp
xor
jne
push
rorb
adc
test
adc
pop
mov
xchg
jle
sub
jne
push
nop
add
mov
adc
std
insl
sbb
sub
mov
in
lcall
mov
inc
movsb
es
inc
shll
call
mov
or
fmull
pop
inc
insl
cmp
dec
sub
ja
push
push
imul
mov
or
adc
mov
sbb
mov
add
clc
or
mov
pusha
mov
or
and
nop
in
int
or
add
adc
jmp
inc
enter
cmp
pop
push
mov
rorl
lahf
or
jecxz
and
xchg
rolb
sub
cmpsl
dec
add
scas
mov
out
test
fdivl
mov
dec
sarb
aad
insb
int3
xor
push
xchg
int
sbb
lods
adc
ljmp
dec
pop
test
and
xchg
into
adc
xorl
xor
pop
fmull
fwait
rcl
or
stos
adc
movsl
mov
arpl
ss
test
dec
loop
dec
movsb
aam
pop
sbb
imul
xchg
push
push
fadds
and
nop
push
mov
xchg
jo
pop
clc
xchg
adc
jle
jne
mov
shll
je
push
mov
xor
lea
pusha
imul
push
xchg
jmp
sbb
in
lcall
xor
data16
sarl
jmp
icebp
adc
dec
lods
sbb
pop
xor
idivl
jp
es
xlat
sub
xor
jmp
xorb
sub
inc
push
push
inc
insl
in
popa
in
loopne
icebp
jmp
ljmp
mov
mov
adc
dec
mov
dec
std
aam
jae
insl
je
add
aam
lods
clc
cmp
add
mov
adc
xchg
mov
adc
stos
ffree
or
imul
popa
mov
push
mov
ret
or
push
adc
pop
xor
push
mov
or
xchg
loope
add
sub
add
pop
push
push
xor
xchg
in
pop
push
mov
adc
pop
mov
call
mov
outsl
adc
test
ljmp
sub
scas
in
mov
mov
or
cs
sbb
jns
push
rorb
xchg
icebp
push
xchg
add
cmp
add
inc
push
in
aad
test
loope
add
cmp
push
mov
jnp
movb
xorl
sbb
or
ret
cmp
jle
mov
cli
push
push
push
push
adc
jmp
call
or
lea
cmp
jae
sub
push
ficoms
jmp
inc
lods
sbb
pop
movsb
xchg
rcrl
add
dec
or
cmpb
and
and
clc
movsbl
mov
and
clc
push
loope
shlb
push
fcomp
add
push
adc
inc
loope
pop
add
imul
fstps
adc
hlt
leave
mov
add
sub
push
adc
xor
pusha
mov
lret
test
and
xchg
sbb
or
push
pop
insl
inc
jmp
or
mov
add
xor
mov
add
movsl
jb
lea
or
xchg
in
push
fs
mov
push
push
xor
add
xor
cmp
jns
and
fs
jns
sub
push
push
in
sarb
mov
cmpsl
cld
fsts
sbb
cmpsl
push
ret
xor
or
outsl
aas
push
xor
or
or
icebp
ljmp
and
adc
fldz
fcomp
fnstsw
cmp
imul
add
pop
fucomp
pop
fcoms
pop
faddp
xchg
fstpl
and
and
adc
call
fldcw
hlt
mov
bound
icebp
push
test
shlb
enter
push
leave
push
and
loopne
jb
xchg
sub
push
add
in
ljmp
inc
push
aam
push
das
sub
imul
cmp
add
cmpsb
cmp
cmp
fistpl
dec
jmp
sub
mov
and
fs
pop
aas
inc
cmp
pop
sub
fwait
cmp
ror
add
rorb
push
test
jge
push
repz
add
shrl
xor
mov
fstp
add
jcxz
rcll
or
push
jp
icebp
mov
push
or
pop
cmp
imul
xor
push
enter
xor
sbb
dec
repz
in
nop
loope
fisubrs
pop
jmp
sbb
add
push
leave
pop
dec
add
jb
mov
push
subb
push
jne
dec
jo
or
jmp
test
mov
sub
cmpsb
push
jmp
stos
mov
add
inc
or
xor
adc
cmp
pop
dec
ss
orb
ljmp
decl
imul
inc
cli
or
xor
jne
into
xchg
outsb
insl
shlb
test
push
popa
sbb
dec
sub
mov
ja
dec
jmp
or
inc
fidivrl
mov
sub
jecxz
pusha
rcll
xchg
add
jno
cmp
sbb
dec
fxtract
mov
mov
sti
inc
adc
es
xor
pop
sub
add
popa
xor
mov
mov
xchg
clc
add
or
aaa
add
je
push
cmp
jmp
cmp
popf
mov
cmp
mov
lcall
insb
or
repnz
jb
adc
or
push
lock
pop
pop
adc
popa
xor
jecxz
icebp
add
mov
dec
out
dec
mov
push
jecxz
test
sbb
insb
push
stos
sub
pusha
jmp
dec
js
sbb
jne
sbb
sub
push
movsl
imul
mov
pop
testl
or
inc
pusha
incl
push
loope
adc
mov
fs
or
js
sub
or
cwtl
push
scas
sbb
push
sbb
dec
in
jbe
add
and
inc
pop
loopne
push
jecxz,pn
popa
add
test
lock
push
and
es
hlt
dec
xchg
mov
pop
bts
cmp
jne
test
movsl
inc
js
mov
xor
inc
and
je
jae
andb
xchg
cmp
in
cmp
inc
jo
pop
aam
mov
sbb
lcall
aaa
cmp
aam
pushf
add
lods
mov
je
xor
push
jmp
cmp
call
test
movsb
cmp
mov
pop
push
cltd
inc
and
push
xchg
pop
mov
push
fstp
test
mov
adc
xchg
rcl
fcomp
test
fidivrl
push
pop
test
inc
add
and
fs
sbb
xor
push
dec
test
repz
or
je
cmp
jb
and
and
mov
xchg
outsb
popa
pop
jbe
and
es
push
dec
inc
cmp
cmpsl
dec
push
push
jno
test
andl
dec
inc
add
repnz
fisttpll
pop
xor
int
divl
push
inc
push
push
push
dec
mov
sub
push
dec
adc
xor
mov
sub
cmp
push
lret
sbb
push
aad
inc
rolb
cmp
jecxz
sub
add
cmpsl
dec
sub
in
scas
sbb
pop
insb
sub
sbb
push
pop
inc
ret
sahf
pop
jno
insl
pop
data16
mov
sub
and
add
ds
inc
scas
call
je
and
push
push
fs
pop
mov
rcr
inc
aam
xor
sar
enter
mov
add
or
inc
movb
jge
pop
aas
in
push
stos
mov
dec
mov
xor
es
pop
inc
push
popa
xor
call
xor
in
xchg
cmpsl
push
in
inc
in
lock
inc
fidivs
xor
jmp
mov
sub
cmpsl
adc
insl
popa
dec
add
sub
xor
xchg
lock
pop
add
add
loop
push
std
in
adc
inc
mov
mov
and
dec
pusha
in
sub
pop
adc
nop
sbb
pop
cmp
pop
jp
repz
clc
inc
fnsave
sbb
add
loope
xchg
jno
push
and
inc
pop
xor
call
sbb
mov
imul
push
loop
sbb
sbb
imul
or
add
fdivs
lret
sub
in
sub
and
xor
xchg
sti
or
inc
or
daa
lods
lcall
call
test
add
lods
sub
lea
mov
rcrb
xor
cmp
pop
or
call
movsl
xchg
jbe
shlb
add
addb
cmp
pop
les
add
cmp
cmpsb
pop
enter
push
dec
es
jge
push
xor
inc
sub
jbe
repnz
jmp
stc
inc
out
mov
mov
sahf
add
lock
sti
inc
push
xchg
je
das
sti
add
pop
inc
int3
in
movsb
jp
icebp
push
sbb
cmpsl
pop
add
or
add
jmp
ret
rol
adc
rolb
push
jecxz
loopne
aam
aaa
popf
mov
xor
mov
repnz
add
and
pop
inc
pop
pop
add
rorl
leave
xchg
mov
add
dec
mov
push
inc
dec
test
push
add
movsb
push
xor
pop
int
xchg
dec
or
and
xorb
nop
mov
nop
push
and
push
or
adc
andb
push
inc
mov
or
ficoml
push
je
and
jl
push
jno
push
dec
andl
test
cmpsb
xlat
mov
push
stc
push
testb
daa
shrb
arpl
mov
jo
mov
mov
mov
shll
decl
movsb
sub
mov
xor
mov
jb,pn
jg
jb
adc
add
es
or
xchg
pop
and
shlb
mov
in
cltd
movsl
adc
stc
adc
jo
sbb
icebp
inc
jle
lds
xchg
pop
incb
or
clc
hlt
xchg
add
inc
pushf
inc
xor
in
test
sbb
inc
movsl
sub
sbb
mov
add
dec
mov
lea
jne
and
stos
je
je
in
test
sub
push
ret
xor
test
or
loop
mov
mov
int
insb
xor
jo
adc
das
push
pop
aam
or
scas
jo
xor
mov
add
and
sub
out
push
in
push
xor
add
mov
sub
jmp
and
add
lret
aam
ficomps
repnz
inc
push
or
cltd
daa
loop
and
sbbl
adcb
ficompl
loope
sub
inc
test
mov
aaa
faddp
jns
xchg
jo
lock
or
adc
icebp
or
mov
test
mov
push
sbbl
mov
ret
pusha
push
dec
inc
mov
mov
test
mov
or
stos
je
add
jo
pop
subb
leave
mov
pop
push
sbb
and
inc
arpl
loopne
sbb
inc
sbb
pop
dec
bound
test
jo
dec
data16
add
add
insb
push
bound
in
pop
and
or
insl
jge
mov
dec
mov
jo
into
adc
insl
add
add
pop
mov
push
roll
add
adc
test
pop
jmp
inc
adc
inc
inc
adc
addl
aam
or
dec
or
cwtl
mov
add
or
cltd
push
movsb
imul
frstor
mov
fdivr
add
shl
pop
roll
mov
pop
push
out
push
add
push
movsb
test
ja
dec
cmp
adc
inc
enter
jne
inc
push
les
scas
xchg
enter
js
sbb
or
lcall
jmp
mov
repz
mov
imul
push
jge
push
sub
icebp
pop
les
mov
mov
pop
test
je
or
inc
push
and
popf
nop
mov
jne
repnz
sti
test
scas
mov
inc
cmp
testl
xchg
xchg
xor
inc
lea
fisubl
fs
cmp
loop
pop
adc
mov
pop
js
and
loopne
fsubr
nop
push
loopne
or
out
dec
push
push
ret
je
push
sub
test
or
mov
loopne
sub
aam
pop
fdivs
push
insb
or
or
cmp
sub
add
mov
std
sub
test
cmc
sub
xor
or
rorb
sbb
or
movsb
adc
inc
in
jb
sub
jl
mov
inc
push
fists
pop
pop
ja
dec
lea
adc
fwait
xchg
cltd
mov
push
rcll
mov
cmp
je
jle
lock
movzbl
hlt
add
pop
sub
rol
and
sbb
adc
add
pop
or
and
push
jl
mov
pusha
leave
adcb
subb
adc
or
pop
lock
add
sti
test
push
adc
pop
movsl
mov
jp
jo
aas
or
test
scas
clc
add
insb
and
adc
adc
imul
inc
test
add
mov
inc
pusha
dec
mov
dec
sub
push
imul
inc
data16
andb
inc
mov
lret
or
add
mov
bound
mov
cwtl
and
lea
outsb
push
dec
insl
pop
fwait
push
repnz
scas
sti
jp
jmp
push
aaa
push
mov
enter
jne
mov
testl
je
inc
adc
fmuls
divl
mov
outsb
das
cmp
fs
add
mov
clc
sub
mov
mov
aam
test
outsb
xchg
cmp
lea
dec
mov
test
cld
imul
loop
push
rcrb
add
cli
push
repnz
sti
sbb
icebp
sbb
adc
jg
and
cmc
dec
ja
dec
ffreep
sbb
cmpsb
xchg
aam
push
pop
mov
add
mov
cmp
pop
xchg
sbb
divb
std
pop
les
sbb
mov
arpl
pop
pop
and
shlb
iret
add
sub
jo
aam
mov
or
push
or
and
imul
xchg
pop
xchg
sub
xor
dec
lods
loopne
cmp
cmp
mov
xor
decb
testl
dec
cmp
pop
in
push
int3
cld
test
loopne
pop
lahf
dec
orb
lea
and
hlt
pusha
lahf
ds
and
aam
in
je
out
pop
loopne
ja
xor
pop
inc
stos
rolb
jae
ret
dec
push
mov
pusha
popf
mov
sbb
stc
add
or
mov
mov
dec
jp
clc
pop
mov
jmp
fbstp
rep
movsl
mov
cld
jne
cmp
sbb
or
adc
inc
inc
stos
loope
or
jp
or
or
xchg
add
mov
mov
fildll
sahf
xchg
mov
mov
adc
xor
xor
aam
aam
xor
inc
outsl
dec
mov
ja
xor
iret
call
sub
lret
sub
pop
mov
and
add
inc
fidivrl
lock
jne
jb
cmp
nop
pop
add
push
pushf
arpl
push
inc
ret
inc
jbe
cvtdq2ps
adc
shl
jmp
push
sbb
in
push
inc
xlat
sbb
test
or
leave
test
lea
addl
sub
or
sbb
fsubs
cmc
cwtl
ljmp
pop
int3
and
les
test
leave
or
cmp
xor
push
sub
mov
sarl
rcrb
icebp
loopne
sbb
jb
mov
push
xor
push
pop
cmp
lahf
or
lahf
push
push
popa
push
lock
enter
mov
imul
or
inc
push
sub
lock
out
outsl
pop
sbb
inc
call
nop
call
inc
imul
cs
mov
push
sbb
bound
test
imul
jns
sub
cmpsb
push
dec
test
in
adc
in
pop
add
ret
mov
sbb
popf
inc
test
lock
sbb
repnz
shrb
jns
push
sbb
jg
or
popa
loopne
push
dec
and
ret
dec
xchg
fistl
xchg
cli
mov
ret
jmp
push
pop
xor
addb
add
inc
fsubp
cli
call
mov
or
loope
add
adcb
dec
xor
lret
adc
or
fs
add
xor
imul
stc
mov
movntps
xchg
sub
fdivrl
xor
sub
cmp
jmp
cmp
push
sub
scas
and
push
add
cmpl
add
push
pop
xor
pop
test
lcall
push
push
loop
and
or
mov
test
and
out
sub
dec
and
add
mov
xor
adc
cmp
or
sub
xchg
dec
movups
mov
xchg
cmpsb
jne
and
test
lock
xor
clc
sbb
mov
or
pop
imul
mov
fcoml
sbb
cmp
xor
bound
inc
imul
xchg
sbb
lret
and
mov
js
hlt
and
lea
mov
sbb
mov
push
xchg
subb
xchg
or
je
push
adc
iret
dec
xchg
je
flds
mov
aad
ret
jg
pop
pop
inc
call
cmp
or
test
add
lea
hlt
adc
pop
cmpsl
mov
push
pusha
in
pop
adc
pop
je
xor
repnz
hlt
cmp
jge
test
mov
bswap
mov
mov
add
jle
shlb
xor
ret
push
or
mov
std
push
cmp
jne
inc
inc
inc
dec
sub
jmp
inc
fs
sub
test
mov
push
mov
push
add
xchg
divb
fisttpll
push
test
dec
div
in
dec
subb
or
push
sub
sahf
shll
cmpsl
jmp
push
mov
movsb
and
std
inc
or
setb
add
push
push
xchg
xor
ds
in
leave
inc
pop
adc
imul
sbb
les
paddq
lcall
lret
and
in
xchg
push
and
push
sbb
imul
aaa
mov
xchg
mov
push
xlat
lcall
pop
test
sbbb
pop
push
dec
sub
fs
in
or
pop
lods
repz
inc
sub
sahf
fsubrl
std
or
or
aam
int
sbb
adcl
mov
pop
xchg
mov
enter
sbb
inc
adc
in
aam
adc
jo
nop
rcl
repz
jnp
cmp
or
addb
pop
mov
es
dec
mov
nop
push
dec
clc
or
je
mov
mov
fisubrs
mov
insb
pop
lret
outsl
cli
jns
dec
lods
xchg
nop
dec
loope
nop
mov
ret
jp
imul
xor
add
in
and
cmpb
mov
orb
or
out
mov
and
sub
push
push
push
pop
push
adc
add
jmp
cwtl
inc
nop
push
add
cld
mov
jmp
test
arpl
adc
or
clc
add
dec
ret
insl
ss
addb
inc
in
xchg
xor
call
or
dec
fcom
add
roll
xchg
xchg
xchg
jne
cs
mov
repz
mov
es
jecxz
push
mov
fnstsw
subb
test
ja
push
gs
lock
cmpb
mov
incl
imul
cmc
mov
fisubrs
pop
ret
cmc
call
rclb
repnz
fdivrs
ret
inc
cs
or
xor
mov
ss
insb
in
lcall
cmp
mov
mov
dec
sahf
fistpl
push
cwtl
dec
pusha
sbb
adc
sub
imulb
dec
fmuls
mov
cmp
add
push
add
or
sub
inc
ret
insl
outsl
mov
in
test
cs
mov
or
cld
push
lods
aam
and
mov
fldt
jne
test
push
pop
out
jle
jnp
movsl
out
mov
lea
jb
scas
adc
lock
xlat
xchg
icebp
mov
test
fnstsw
mov
push
cmpsl
mov
nop
push
push
mov
ret
stos
sti
xor
mov
mov
shlb
xchg
jle
cli
shr
xor
adc
add
jp
not
mov
jl
mov
pushl
mov
shr
cmp
jbe
add
jmp
add
mov
mov
fadd
pop
and
das
stos
add
inc
dec
inc
xor
mov
frstor
popa
mov
movsb
sub
jns
shrb
or
ret
or
xor
fstpt
push
loopne
sbb
push
das
ret
mov
loop
fsubrl
sbb
cmc
adc
aaa
mov
stos
add
inc
cmp
mov
cmp
jo
lcall
add
fcmove
repz
ljmp
icebp
in
push
xchg
jnp
add
or
jb
outsl
xor
shrb
cmp
das
and
lods
cmp
movsb
stc
mov
bound
loopne
or
xor
add
push
push
daa
bound
inc
adc
sub
pop
imul
push
push
lahf
pop
mov
pop
inc
adc
add
mul
xor
and
outsl
inc
add
sbb
or
mov
sub
sbb
mov
cli
pop
sbb
push
lock
pushf
loop,pt
in
push
sbbb
or
lods
data16
daa
movsl
aas
in
popa
pop
push
div
inc
pop
rclb
jp
jmp
int
movsb
mov
cmp
jge
cmp
pushf
loop
push
adc
pop
test
or
int
rorb
gs
insl
and
in
sbb
mov
or
add
stos
shl
shrb
add
mov
fadds
mov
add
push
jecxz
mov
gs
and
test
mov
mov
add
xchg
add
ja
adc
sub
ss
sub
jns
push
nop
or
push
mov
lea
xchg
or
frstor
in
add
and
pusha
mov
xor
inc
sbb
addb
add
inc
lret
and
in
repnz
push
xor
lods
inc
es
sub
out
fidivs
lds
rolb
clc
mov
or
lods
js
xchg
into
repnz
add
mov
test
dec
or
aas
and
mov
mov
mov
add
orl
mov
ja
mov
or
xor
jl
mov
sbb
pushf
in
int
adc
je
xor
jmp
popa
clc
mov
jb
and
sbb
mov
fadds
ss
sub
jmp
addb
push
adc
movsb
adc
dec
aad
movsl
inc
push
arpl
popa
in
cmp
out
cmp
and
inc
shlb
push
push
sub
jp
and
sbb
mov
cmp
push
add
add
and
add
add
xor
or
push
arpl
movsb
mov
cmp
push
adc
fildll
cmp
jmp
inc
lods
mov
adc
sub
sbb
je
ficoms
adc
mov
ret
jp
sub
cwtl
lcall
cld
add
add
add
sbb
and
mov
cmpsb
sbb
jnp
add
sbb
xchg
add
mov
add
adc
xchg
add
inc
sub
mov
test
add
cli
shlb
and
sbb
rolb
xor
adc
push
rolb
sub
cmp
je
stos
fcompl
push
push
ret
jo
testb
cltd
sbb
xchg
andb
mov
push
push
lea
mov
mov
int3
mov
mov
sub
cwtl
sub
cltd
xchg
out
aas
jl
push
push
int3
mov
faddl
xchg
in
push
data16
call
int3
sub
mov
jnp
fstl
inc
jae
imul
repz
mov
mov
cmp
xchg
or
add
or
xchg
andb
push
inc
and
rolb
test
movsl
and
pop
push
jne
cmovne
sbb
add
push
and
inc
loop
push
dec
pop
nop
fmuls
push
or
bound
push
pop
xchg
adc
adc
pop
inc
mov
xor
cmp
rcrb
ja
es
pop
sbb
pop
leave
mov
sub
das
stos
xchg
or
push
pop
in
pop
scas
fldl
cmpsl
in
lods
cmp
dec
add
push
scas
sub
xchg
cmp
enter
loopne
pop
pop
xor
push
push
test
cmpsb
xchg
xchg
jp
xchg
shrb
pop
sub
inc
xor
xor
sbb
std
call
mov
and
inc
sarb
adc
pusha
loopne
mov
imul
inc
hlt
xchg
jg
sub
outsl
adc
jg
sub
and
ret
mov
dec
xor
lea
inc
lret
jmp
mov
movsl
pop
pop
and
movsb
je
rcr
and
lcall
push
push
add
pop
inc
mov
mov
dec
add
shl
or
pop
dec
push
dec
add
clc
inc
imul
imul
jo
andl
imul
xor
jbe
sbb
dec
mov
xchg
adcl
add
insb
int3
fs
dec
push
cmp
mov
pop
inc
jns
push
xchg
push
cmp
pop
lock
sarb
xchg
inc
repnz
xchg
popa
mov
sub
insb
fs
inc
sub
js
mov
jo
mov
dec
je
or
jne
push
mov
jecxz
je
lds
jb
mov
lret
cltd
nop
rorb
icebp
nop
jmp
sbb
sbb
push
mov
stc
cltd
inc
aas
cmpsb
inc
xor
mov
lea
ret
pop
insl
sub
repnz
pop
push
lds
movsl
push
inc
imul
fstpl
mov
enter
jno
stos
sbb
ret
push
cmp
mov
push
add
or
fimuls
push
xor
es
frstor
mov
or
ja
adc
adc
xchg
and
aam
sbbb
movsl
xchg
mov
test
orl
xchg
and
daa
pop
and
pop
pop
ret
dec
popa
push
sbb
push
push
add
xorl
push
push
push
adc
mov
add
dec
cli
xchg
hlt
rolb
fcoms
rorb
bound
mov
add
loope
pop
bound
mov
repnz
or
in
dec
es
push
add
push
xlat
push
nop
fdivrp
or
inc
lea
push
sub
push
add
inc
inc
jmp
adc
or
insl
loopne
test
and
aas
xor
sbb
stc
stc
fwait
enter
scas
test
adc
ret
push
mov
aaa
scas
add
aad
push
xchg
add
rcll
nop
mov
pop
adc
imul
push
xchg
push
adc
fidivrs
dec
decl
inc
adc
and
test
and
jl
pushf
adc
nop
movsb
sub
xchg
inc
inc
sbb
loope
mov
fnstenv
dec
mov
clc
js
push
add
and
stc
add
les
imul
adc
or
and
test
adc
xchg
push
repz
sbb
inc
mov
mov
push
test
mov
cmpsb
sbb
ret
std
xchg
pop
add
jo
popf
cltd
gs
sub
and
rolb
push
inc
pop
sbb
cmc
adc
js
jb
fistpll
nop
rcr
push
lds
push
call
popa
into
pop
pop
sbb
std
movsb
mov
stos
push
or
dec
andl
pop
mov
movsb
pushf
push
rolb
movsl
or
fs
push
push
push
xor
jmp
dec
mov
sbb
cmp
cld
pop
mov
xchg
push
dec
or
xor
push
and
hlt
push
lcall
movb
aad
test
and
pop
imul
into
pop
inc
mov
lahf
mov
sub
xor
and
push
push
dec
sub
cld
data16
sbb
cmp
cli
addr16
sub
sub
adc
cld
enter
lcall
mov
jg
push
je
sahf
loopne
ficoml
adc
xor
mov
mov
sbb
int
addps
daa
ja
pop
sub
pop
pop
cmp
pop
dec
jbe
and
outsl
fmulp
mov
je
push
lea
sbb
notl
mov
inc
push
mov
insb
aam
jb
aas
rcrl
xor
push
xor
adc
jbe
nop
test
push
les
mov
pusha
add
push
jno
add
ret
cmpb
arpl
jl
xor
jle
push
in
sbbl
inc
xchg
or
cwtl
xor
pusha
xor
add
je
push
xchg
xchg
addl
loope
or
add
sbb
jo
xchg
mov
shlb
adc
inc
jo
lods
jb
adc
daa
mov
test
dec
es
add
dec
cs
dec
mov
nop
sub
movsb
inc
aam
sti
sbb
jb
pop
cmp
ret
cmp
pop
rorb
adc
shrl
into
push
stc
movsb
or
pusha
or
or
dec
lret
icebp
dec
jl
call
mov
push
dec
sbb
cmp
iret
add
push
add
push
and
adc
mov
stos
roll
xchg
sbb
add
rolb
xchg
adc
inc
in
fadds
push
push
xchg
cld
push
out
push
mov
nop
popf
mov
jg
scas
push
add
call
push
and
adc
stos
xor
imul
cs
ffree
push
cmp
sbb
pop
inc
in
clc
jne
push
xchg
test
push
cmpsb
cmp
cmpsb
adc
inc
fmul
jp
sub
push
lea
pop
jl
push
mov
dec
mov
dec
bound
cmpsl
xchg
adc
jp
jns
fisubrl
xor
sub
add
jmp
cmp
push
fists
jmp
in
subl
cmc
movsb
lds
push
jge
movsb
inc
int
test
pop
mov
data16
sub
cmp
cmp
mov
cmc
ret
mov
dec
mov
ret
hlt
out
lea
jne
sub
mov
pop
mov
sar
cltd
data16
mov
adc
xor
das
cli
sbb
icebp
dec
test
outsb
shll
loopne
add
inc
xlat
cmp
fldt
or
add
andl
push
adc
jg
lods
les
jl
pushf
or
mov
adc
pop
aam
test
shlb
outsb
jmp
dec
pusha
mov
rol
mov
ror
xor
shr
xor
es
mov
rol
xor
shr
xor
add
sahf
or
add
dec
add
loopne
mov
fs
or
jae
and
and
not
and
xor
add
add
cmpsb
test
sub
jge
add
push
add
cwtl
repnz
mov
push
xor
add
xor
and
and
xchg
add
or
push
aam
adc
and
push
fs
sub
sub
fmull
push
push
or
xlat
ret
sbb
sub
rolb
testl
hlt
add
xor
fsubr
orl
in
or
push
xor
sub
jae
stc
ljmpw
ret
shr
xor
jae
add
push
xor
xchg
xchg
cmpsb
jb
loopne
push
xor
in
call
in
shl
in
add
cmp
bound
push
bound
add
adc
aaa
sbb
add
ret
test
call
loopne
push
nop
cmpsb
shl
call
mov
loopne
xor
pop
cmp
aam
cmp
push
xor
jo
lret
or
int3
fildl
push
fcomp
or
push
xor
and
and
loopne
or
lcall
xor
add
push
int3
push
test
js
adc
pop
inc
mov
jo
ret
push
jo
ficoms
add
mov
push
xor
shlb
inc
lds
lahf
adc
push
loop
mov
xchg
mov
cld
add
add
pop
jbe
std
push
and
fisubl
add
jo
testb
xlat
add
gs
fsubs
movsb
test
or
inc
call
cld
sbb
inc
mov
sub
xchg
clc
inc
jo
lods
jo
cli
stos
adcb
aam
aaa
cmp
xor
xor
sub
mov
jl
adc
out
rolb
inc
aaa
roll
xor
xor
movsb
test
rorb
cmpsb
imul
in
sbb
imul
add
push
and
dec
scas
dec
cs
test
cltd
add
xor
adc
in
mov
push
mov
xor
add
rolb
push
scas
dec
push
sbb
imul
nop
pop
cmp
stos
nop
mov
push
dec
in
movsl
add
or
xor
inc
pop
xchg
xor
and
rorb
pusha
inc
mov
xchg
pop
mov
rorb
and
sbb
adc
movsb
add
sub
in
subl
dec
rcll
dec
dec
dec
icebp
jl
inc
sub
stc
stc
mov
pop
or
xchg
inc
mov
aam
add
lcall
adc
adc
push
cmpsb
imul
adc
add
fsubrp
add
and
xchg
inc
les
ja
rolb
pushf
out
pop
add
lock
xor
fimuls
inc
add
lret
jb
aas
adc
aaa
sub
jnp
cld
sub
lea
pop
xor
pop
decl
jo
mov
decl
sub
test
test
mov
mov
xchg
or
mov
adc
mov
test
enter
mov
inc
sub
dec
xor
loopne
lea
jmp
aad
sub
sub
pop
add
ret
dec
or
mov
dec
jne
pop
clc
daa
push
cmpb
lock
jg
or
xchg
sub
mov
adc
clc
aaa
jbe
or
xor
sbb
adc
fldt
sbb
inc
add
jae
push
pop
fadds
rep
jle
xchg
add
pop
mov
dec
add
mov
sar
mov
outsl
pop
loopne
ror
mov
notl
ljmp
inc
pusha
pop
aam
fidivs
test
jecxz
pusha
test
jb
cmp
dec
mov
stos
sub
sbb
inc
jo
xor
aaa
popa
push
add
mov
push
inc
imul
lret
push
add
push
sbb
push
rcll
dec
sti
mov
push
inc
adc
xor
xor
add
jns
jnp
sub
rorb
adc
fdivrp
pop
push
jmp
je
mov
mov
imul
mov
cmp
je
or
push
add
gs
popa
cmp
jne
and
cmpsl
mov
neg
jg
push
dec
inc
lea
inc
mov
pop
dec
xor
push
in
fnsave
jmp
jl
je
testl
repnz
and
jle
or
pop
repz
cmp
fs
dec
inc
push
inc
and
or
mov
mov
mov
nop
pop
pop
mov
cwtl
mov
out
xor
mov
mov
mov
lea
enter
call
mov
hlt
and
decb
xorl
sahf
rcrb
cmp
imulb
sub
insb
jne
adc
je
add
fnsave
adc
sbb
or
ja
sbb
call
popf
ss
xor
xchg
push
fldcw
add
push
mov
lds
cs
lahf
xchg
cmpsb
inc
sub
mov
jne
mov
cmpsb
mov
inc
test
movzwl
xor
sbb
jb
jb
jae
sub
rol
outsb
xchg
aas
shl
add
jmp
cwtl
aas
les
mov
dec
hlt
xor
je
or
lock
jne
lods
and
pcmpgtb
push
test
incl
or
push
jae
mov
jmp
adc
mov
dec
shlb
mov
test
sub
jo
add
cmp
push
inc
call
arpl
push
sti
sbb
popf
lret
cmp
jg
or
jae
cmp
and
jle
es
fsubp
jg
sub
sub
and
pop
cmp
jl
pop
jle
pusha
add
inc
cmp
add
jp
orl
lahf
jb
jbe
mov
test
fwait
cld
cld
dec
jo
jne
or
je,pn
test
jne
je
xlat
add
pop
outsb
and
jb
cmp
sub
adc
movb
into
ds
inc
xchg
js
add
inc
clc
push
lahf
enter
push
push
push
and
inc
and
je
insb
mov
mov
jmp
mov
or
jae
add
inc
push
je
inc
es
jg
push
ss
lahf
nop
aaa
repnz
sub
push
add
push
mov
cmp
mov
sub
cwtl
mov
or
xor
mov
repz
ret
push
inc
cmp
adc
xchg
add
cli
jle
push
xchg
fidivl
xchg
cmp
jb
test
sub
xchg
add
pop
mov
inc
mov
aaa
popf
test
xor
inc
and
lea
sub
xor
dec
push
movsb
mov
pop
jb
adcl
mov
cmpl
aam
je
xor
add
imull
mov
or
xchg
sbb
mov
mov
pop
cwtl
xor
mov
sbb
stos
dec
daa
mov
add
fsubs
arpl
mov
addr16
inc
and
jae
push
cmpsb
movsb
xor
ret
lea
inc
cmp
je
test
adc
cli
mov
adc
push
fsts
sti
mov
mov
cmp
data16
pop
push
shlb
mov
dec
add
das
push
arpl
or
andl
fs
push
sbb
movb
push
mov
add
aam
lods
jg
mov
in
inc
inc
ljmp
mov
scas
jl
add
cmp
xchg
sbb
loop
data16
mov
jg
scas
push
or
push
movsl
inc
sahf
push
cmp
je
ret
xlat
xor
cld
popa
pop
pop
add
inc
xchg
xchg
push
inc
aaa
mov
sarl
das
mov
mov
ret
faddl
push
xorb
jmp
add
stos
inc
sarl
mov
ret
cmp
loopne
jae
add
inc
fisttpl
sub
or
iret
xor
mov
mov
stos
pushl
or
dec
insl
mov
cwtl
push
mov
push
outsb
lds
dec
mov
add
xor
add
cmp
push
clc
mov
xchg
jne
lahf
push
jb
jb
cwtl
addl
xchg
xchg
xor
out
push
out
pop
or
cmpb
mov
iret
push
leave
dec
xor
xchg
mov
mov
and
xchg
push
enter
inc
test
push
push
jle
mov
cmp
popa
inc
dec
test
call
mov
inc
out
sbb
xchg
dec
roll
add
aam
lock
push
xor
imul
push
testl
mov
dec
rolb
in
and
jo
test
add
push
fdivl
jmp
adc
movsl
add
das
mov
pop
test
sbb
bound
fadds
jmp
mov
imul
adc
inc
in
sub
loopne
lods
dec
mov
mov
cmp
fcomps
inc
cmovns
je
sbb
je
mov
cmp
mov
inc
inc
inc
mov
mov
xchg
loope,pn
jge
pop
and
mov
sbb
and
inc
mov
add
sub
cmp
ds
andl
inc
fsubr
cmp
ljmp
push
push
mov
inc
mov
and
jmp
orl
insb
jne
jl
sub
cmp
pushf
arpl
sbb
data16
stos
inc
pushl
sbb
rolb
xor
pop
incb
cmp
jne
les
aam
adc
loopne
pop
cmp
cmpsb
or
push
inc
jp
call
outsb
dec
mov
mov
push
jmp
test
movsb
push
adc
cltd
test
jge
test
lock
je
jl
mov
add
and
jae
xor
gs
add
inc
andb
add
sbb
sahf
movsb
lahf
push
ret
jns
mov
ret
push
lahf
loop
or
dec
popa
in
cmp
xchg
and
mov
and
shrl
pop
aaa
sub
add
jmp
insb
adc
add
jne
rcll
rolb
xchg
outsl
inc
pop
jb
sbb
mov
mov
adc
jg
sub
xor
mov
inc
mov
mov
mov
in
or
pop
insb
mov
push
cmp
mov
ficoml
loopne
mov
xchg
jmp
mov
rcll
imul
xchg
lret
mov
cmp
dec
xor
enter
add
in
jbe
and
fdiv
xor
or
push
or
dec
fadds
movsl
push
sub
xor
in
mov
cmp
cmp
cmp
out
sbb
pop
lahf
and
adc
xchg
test
clc
js,pt
jae
mov
lds
pop
xchg
imul
rcl
insl
inc
pop
les
and
aam
mov
outsl
xor
loopne
imul
mov
in
lock
dec
cmp
add
decb
jle
dec
xchg
sahf
push
int3
sbb
push
pop
xchg
jmp
pusha
or
adc
adc
inc
adc
push
sub
pushf
mov
inc
add
orl
les
add
outsl
lock
xlat
sahf
or
or
test
inc
or
popa
pop
ret
push
ret
cli
push
cmpl
push
cmpsl
sub
in
push
xor
test
pushl
sbb
notb
cli
xor
jne
sbb
dec
xchg
dec
push
and
xchg
mov
mov
jl
adc
xchg
push
je
push
movzwl
ds
fs
pop
test
cmp
mov
lods
pop
ud2
in
jnp
jne
jne
or
pop
clc
lret
xor
daa
punpckldq
cli
loop
clc
dec
add
mov
test
xor
cmpsl
js
jo
push
fistps
shll
les
sub
or
jmp
sub
cmp
inc
insl
cmp
sbb
dec
mov
add
add
adc
dec
es
data16
cltd
or
inc
loop
sub
scas
mov
pop
lods
mov
push
xchg
aad
xlat
and
push
orb
and
xchg
mov
nop
out
adc
push
stos
ss
sbb
sub
popf
notb
cmc
data16
mulb
dec
sbb
dec
push
jl
daa
clc
les
add
pop
jno
imul
sbb
sub
push
test
fwait
sahf
sbb
test
in
ret
or
xchg
adc
cmp
or
cmpsl
xchg
xchg
sbb
hlt
inc
inc
pop
push
jo
and
mov
in
rcr
add
xor
inc
cmp
pop
fisubs
movsb
sbb
lock
and
cld
or
lock
scas
mov
xchg
scas
dec
cld
les
notb
aaa
jbe
sahf
rcrb
jne
jbe
adc
sbb
sbb
sbb
jg
and
and
call
mov
mov
xchg
xchg
rcrl
or
inc
cli
dec
and
iret
mov
add
push
adc
dec
rcrl
dec
sbb
push
xor
cmp
inc
scas
inc
xor
dec
mov
mov
movl
hlt
cmc
imul
fsubl
sbb
ja
adc
popa
fimull
inc
add
dec
loop
int3
xor
mov
sbb
testl
sub
adc
repnz
cwtl
xchg
test
push
xchg
or
pop
pop
ret
dec
add
mov
rorb
mov
cmp
pop
lods
scas
or
push
pop
mov
or
mov
and
dec
push
or
icebp
outsb
or
or
dec
stos
sub
pop
fcmovb
mov
fstpt
imull
and
adc
add
mov
xchg
or
fisubl
addr16
add
dec
add
shll
xchg
lds
adc
ja
mov
inc
cs
movsb
dec
dec
adc
xchg
mov
test
sbb
dec
int3
fmuls
lods
sti
jns
pusha
ljmp
add
sub
dec
inc
shll
and
dec
fstps
sbb
and
mov
jecxz
dec
add
dec
test
js
adc
push
and
and
sub
cmp
das
dec
adc
lea
push
imul
js
dec
aas
mov
nop
cltd
and
scas
std
add
xorl
out
loopne
mov
cmp
lods
jp
daa
pop
mov
or
or
fiaddl
outsb
and
pop
ljmp
sbb
test
sub
incl
pop
push
xlat
push
and
adc
mov
xchg
dec
fsubs
jl
loopne
add
jle
es
inc
inc
inc
loope
mov
aam
push
mov
loope
add
pop
arpl
ja
insb
pusha
xlat
and
push
xbegin
mov
repnz
adc
test
std
or
push
pop
out
cmpl
mov
add
enter
mov
pop
fisubs
push
push
pop
sub
and
or
add
and
movb
mov
cmp
mov
push
clc
pop
ret
sub
and
mov
and
test
jb
test
and
xor
sarb
add
xchg
inc
cmpb
mov
push
jae
push
test
add
add
push
sub
adc
or
pop
inc
loop
enter
jb
xchg
xor
outsl
jg
adc
or
or
testb
and
jne
subl
or
add
inc
add
push
pop
push
bound
dec
insl
pushl
inc
cmp
inc
in
scas
inc
jmp
jge
pop
addl
enter
pushl
sub
lods
cli
and
testb
sub
movsb
sub
and
and
cwtl
inc
or
jmp
cmp
sbb
movb
cld
push
push
add
push
push
xor
adc
push
push
mov
inc
das
in
xor
sbb
imulb
adc
sub
sbb
imull
lock
sub
cmp
jne
jae
jbe
shll
lds
jbe
ja
fisttps
dec
xorl
xchg
enter
aad
loope
push
push
jp
in
leave
lahf
pop
or
xor
xorb
push
or
test
scas
jge
arpl
clc
repz
insb
mov
movsb
jmp
add
lret
push
pop
stc
sbb
mov
mov
insb
push
push
cwtl
les
add
rol
fists
or
fisubrs
mov
or
dec
add
or
push
add
sub
cmp
push
mov
cmp
push
cmp
fs
cmp
lcall
mov
adcb
jne
les
enter
and
pop
pop
mov
movsb
scas
pop
push
push
mov
sbb
xchg
inc
loop
mov
mov
cmp
sbb
and
sub
push
jae
nop
mov
dec
push
adc
cmp
jmp
aaa
xchg
cmp
movsb
xor
xor
push
pop
jnp
mov
popf
push
jo
loopne
jae
add
or
or
push
std
fcmovbe
dec
sub
xor
mov
mov
mov
ret
stos
add
adcl
fadd
or
mov
or
std
shl
cmp
and
es
call
cmp
jne
movsl
jecxz
and
pop
sbb
jbe
cmpsl
movsb
adc
icebp
popa
or
ficoms
or
scas
ljmp
ret
js
lods
mov
adc
or
sbb
mov
push
nopl
subl
add
inc
cmp
aaa
fcoms
mov
and
cmp
add
push
cli
jbe
sub
add
mov
mov
sub
pop
fsubrl
add
xlat
push
mov
fdiv
mov
js
cmp
adc
pop
jb
cmpsb
cmp
jb
std
fidivs
cmp
loop
inc
iret
ret
sub
enter
ret
add
addb
inc
push
lret
mov
xor
dec
xor
jp
pop
mov
or
xor
inc
dec
push
inc
cmp
mov
mov
call
add
pop
or
mov
mov
push
adc
or
add
repnz
orl
das
js
les
xor
cmpsb
cmp
push
add
xor
or
pop
inc
dec
loopne
cmp
lods
out
pop
rorb
hlt
dec
sub
pop
sub
lock
add
add
add
jb
adc
dec
add
jnp
adc
fs
inc
jl
push
sbb
push
shrb
add
or
push
and
fcomp
fcmovb
adc
ss
inc
das
sbb
ret
adc
pop
mov
dec
les
pop
push
jnp
popa
sub
mov
and
jbe
inc
add
inc
adc
cmp
shr
pusha
push
push
add
cmp
icebp
sub
xchg
in
mov
mov
outsl
cmp
or
daa
popa
mov
inc
cld
call
dec
mov
sbb
sbb
push
dec
shl
push
stos
cmp
dec
pop
scas
sub
outsl
adc
sbb
adc
ret
pop
inc
ss
cmp
add
stos
stc
ja
and
test
add
jne
fmul
jb
sbb
cmp
sbb
mov
pop
jne
mov
mov
inc
sub
add
mov
mov
pop
push
jmp
dec
les
sbb
rcl
cmp
inc
add
mov
inc
xchg
adc
sub
test
ret
test
rolb
push
xchg
lea
jbe
loope
negl
lahf
or
pop
add
dec
loop
adc
adc
or
xor
xchg
or
push
stos
loop
sahf
and
nop
jp
data16
push
xchg
shlb
scas
sbbb
or
jmp
add
aam
pop
sbb
lcall
push
call
insl
das
sub
test
sbbl
push
or
addl
cwtl
and
cmp
sbb
lds
cltd
mov
shlb
mov
and
rclb
fistps
xchg
call
cmp
jne
jbe
dec
cmp
lret
and
orb
mov
out
fnstenv
adc
mov
jb
pop
std
pop
stos
es
and
dec
mov
fdivs
push
popa
shr
or
adc
mov
loopne
sub
fs
mov
xor
mov
bnd
xor
gs
sarl
sbb
push
imul
popa
cmpsb
insb
and
and
loope
inc
das
push
and
insl
pop
ljmp
aas
popf
rorb
nop
push
pop
mov
mov
xchg
mov
rclb
mov
mov
adc
jmp
and
adc
mov
lcall
mov
mov
dec
mov
in
cmp
je
imul
add
lea
adc
outsl
test
cli
xor
mov
adcl
pop
jle
xor
inc
adc
loop
das
cmp
add
xor
ja
mov
cmp
loopne
ret
rcrb
sub
jecxz
ret
and
or
push
add
icebp
mov
and
js
cmp
jge
cmp
mov
mov
lods
push
adc
call
pop
or
test
push
xchg
pushf
push
outsl
jge
mov
out
adc
sbb
and
inc
adc
jg
test
jmp
push
adc
testl
test
jo
daa
ret
pop
fs
xchg
insb
adc
add
pop
pop
mov
dec
nop
cmp
mov
pop
mov
jl
inc
mov
lahf
movb
push
pushf
jmp
jge
cli
pusha
mov
and
xor
adc
je
push
cmp
lods
outsl
or
add
add
les
adc
pop
sarb
inc
add
lcall
and
rcrl
jo
or
jbe
push
inc
pop
js
dec
mov
push
fisubl
push
xor
add
push
lods
pop
pop
stc
adc
xor
or
pop
adc
adc
sub
stos
pop
pop
or
hlt
sub
mov
inc
shl
test
pop
ret
mov
scas
lret
add
sub
xchg
subl
fsubrp
inc
push
sbb
mov
mov
in
nop
mov
repz
nop
test
dec
call
lds
push
mov
mov
ret
inc
fs
movsl
or
mov
mov
orl
add
push
test
dec
mov
and
mov
jb
scas
scas
sti
mov
and
sbb
jmp
aaa
lret
mov
mov
mov
cs
scas
adc
mov
loopne
pop
jmp
test
bound
cmpsl
cmp
push
cld
movb
jmp
mov
testl
sub
stos
add
das
sbb
xor
ret
adc
or
add
inc
inc
bound
pusha
mov
and
xor
in
sbb
dec
add
sbb
leave
ret
pop
mov
xchg
mov
mov
or
in
in
sbb
or
lret
add
jg
inc
xor
dec
stos
int
inc
push
lock
xlat
and
test
jg
add
push
fildll
stc
cmp
cmp
xchg
and
xchg
lock
pop
cmp
lods
mov
pop
push
sub
aaa
lds
ss
mov
out
or
push
pop
sub
xlat
lea
cmovb
dec
popa
aam
rcll
add
test
and
int3
mov
xor
push
leave
xchg
icebp
mov
lock
or
lds
mov
sub
push
pop
dec
jb
add
mov
lods
hlt
fidivl
clc
jno
jl
ret
xchg
iret
adc
into
mov
test
push
in
push
int3
inc
mov
xor
mov
shl
popf
mov
dec
adc
outsl
fwait
mov
cmp
add
inc
mov
mov
adc
dec
xor
and
sbb
fdivs
or
sahf
mov
add
jecxz
pop
rcrl
test
pop
cmp
les
or
push
push
mov
int3
inc
pop
mov
inc
xchg
push
clc
dec
cmp
or
push
pop
pop
push
fsubl
add
test
sub
jle
jmp
lods
aad
push
sbb
sbb
add
in
pushf
jbe
jo
mov
ret
cmpsl
je
dec
je
dec
pop
or
out
rorl
sbb
orl
sub
mov
lods
daa
loop
mov
pop
mov
jae
jo
ja
adc
jmp
cmpl
and
movsb
adc
xor
mov
stc
hlt
jne
test
icebp
dec
cmp
shlb
call
decb
and
xchg
out
daa
and
sbb
or
sbbb
and
inc
mov
dec
adc
adc
jl
cmp
scas
inc
idivl
push
mov
xor
xorl
in
in
inc
xor
push
cmpsl
in
dec
add
ret
cmp
jg
scas
mov
and
mov
gs
inc
or
push
or
cmp
mov
or
sub
mov
push
lret
mov
inc
mov
add
shlb
pusha
call
push
dec
cs
imul
sbb
outsb
lock
mov
pop
add
lock
sbb
adc
xchg
repnz
xor
fcmovu
sbb
mov
fldl
test
push
pop
loope
push
jg
mov
push
sbbb
shll
xor
push
mov
js
cmp
add
ss
or
test
push
je
pusha
addb
or
in
jmp
sub
jl
xchg
add
mov
adc
shlb
pop
xchg
push
pop
add
adc
jbe
push
lods
adc
cmp
push
pop
or
ja
lds
cmp
imul
sbb
adc
inc
rorl
cld
rorl
std
call
pop
cmpsl
add
leave
inc
add
shrb
cmp
mov
add
imul
and
cs
push
pmulhuw
sbb
or
sbb
sbb
xchg
xor
fstl
ljmp
add
sbb
push
cs
or
ret
sbb
idiv
lea
sysexit
adc
jns
add
or
and
test
incl
xor
testb
in
mov
lret
or
imulb
or
jnp
scas
mov
jb
je
mov
andb
add
movsb
cmp
imul
fnstenv
in
insl
dec
dec
dec
clc
jne
mov
push
test
cmp
adc
ficoms
jbe
lea
cmp
shrl
pop
dec
sub
mov
or
sub
hlt
jns
and
iret
or
add
push
pop
pop
mov
cwtl
shlb
cmp
cmp
jae
insb
mov
inc
sbb
mov
hlt
jne
push
js
lret
inc
mov
loopne
pop
push
lock
jne
mov
out
leave
mov
xchg
add
or
pop
sbb
or
lock
add
pushl
inc
cmpsb
les
mov
add
rorl
sahf
mov
push
xchg
lret
in
cmp
xchg
mov
je
cmp
push
mov
mov
iret
and
rcrb
adc
lea
mov
pop
inc
ss
add
mov
add
push
push
pop
sub
or
adc
js
push
adc
data16
dec
or
cltd
imul
lea
add
cmpsl
pushf
inc
gs
mov
mov
icebp
inc
xchg
cmp
jbe
push
cmp
adc
jge
mov
into
pop
add
push
adc
test
bound
mov
lods
fcomps
fwait
data16
fsubr
jmp
pop
add
pop
mov
in
mov
rol
xchg
lea
mov
jl
aas
push
pop
ret
rolb
adc
ret
or
push
sub
and
in
xchg
adc
loopne
stos
mov
and
test
push
or
nop
nop
mov
xchg
int
sbb
or
leave
add
cld
fistpll
adc
and
dec
adc
sbb
cmpl
adc
mov
sahf
sbb
sbb
dec
adc
mov
cltd
and
lret
cli
jbe
ret
pop
rolb
frstor
jmp
rorb
es
sub
sub
in
mov
sbb
mov
mov
pop
mov
test
adc
sub
iret
sub
imul
outsb
hlt
mov
aas
addb
ret
or
je
lock
pop
pushl
test
insb
mov
dec
cmp
inc
mov
push
sub
dec
icebp
fnstsw
test
sarl
cmpb
push
cmp
adc
jge,pt
add
xor
jl
jmp
mov
mov
icebp
or
rorl
add
xor
test
aas
outsl
mov
ja
lret
adc
nop
sbb
xchg
ds
inc
push
lret
xor
shll
cmc
ret
imul
mov
mov
pop
jmp
icebp
fs
mov
adc
fcmovb
test
jns
xchg
push
xchg
xchg
push
aaa
xlat
add
jp
cmp
jmp
je
pop
fs
dec
mov
in
cmp
push
push
and
cmpb
pusha
in
adc
fs
clc
and
cs
aaa
mov
jp
cmp
mov
jb
push
jae
jnp
cmp
shr
js
nop
xor
mov
sbb
test
int
jo
mov
inc
inc
lcall
les
cwtl
mov
je
adc
add
ret
jo
aaa
and
and
push
loop
xor
mov
cmp
add
pushf
lcall
pop
xor
inc
adc
cmp
xchg
subl
outsl
or
jno
loopne
insb
pop
sbb
testb
mov
mov
loopne
rcrb
test
and
xor
or
cs
mov
mov
daa
push
xchg
xchg
loopne
push
movb
xchg
inc
push
mov
pop
inc
cmpl
adc
out
cli
insl
sub
sbb
lea
test
rcll
xchg
in
popf
push
add
inc
add
and
sub
addr16
push
mov
in
in
jl
jmp
lock
mov
movsb
std
adc
call
mov
xor
xor
dec
insl
or
sbb
sub
bound
test
testl
clc
add
clc
jno
scas
pusha
adc
or
shll
icebp
jns
pop
jo
div
jne
sbb
jno
add
pushf
ja
lcall
adcl
loopne
push
imul
ret
leave
inc
adc
jo
call
sbb
out
popf
rol
test
jmp
mov
adc
scas
adc
pcmpeqw
mov
push
dec
fmull
jl
add
shr
out
cmp
push
xchg
and
cltd
and
cld
inc
jle
cmp
add
inc
fsubr
sbb
xchg
and
inc
xor
psrlw
mov
mov
adc
rcrb
imul
int3
in
outsb
test
adc
std
pop
pushl
jmp
mov
cmp
aam
push
in
push
sbb
clc
mov
mov
lcall
ret
xchg
jecxz
imul
or
clc
gs
dec
pop
sti
xchg
mov
neg
sub
inc
fcompl
lret
push
dec
add
je
jo
inc
lea
cmp
fiadds
pop
iret
xchg
cmp
add
add
cltd
sub
inc
mov
jmp
lods
or
insb
mov
or
inc
je
dec
dec
dec
jge
rorl
lds
lea
add
mov
xor
dec
sub
cmp
sub
mov
dec
shlb
push
nop
rcll
xor
pop
imul
js
shll
adc
mov
xor
pop
mov
sub
out
popf
popa
jae
sub
push
push
cs
movsb
int3
sub
xor
clc
push
insb
and
push
adc
popa
ror
add
sarl
addb
cmpsb
js
fwait
addr16
idiv
dec
sub
pop
xor
sbb
fsubs
imul
cs
lock
jb
popf
sub
ja
lea
sbb
ljmp
in
xor
lock
imul
enter
adc
imul
xor
mov
jle
popa
lcall
rol
inc
mov
enter
cmpsl
or
ljmp
add
xor
outsb
lea
xor
mov
add
test
or
lea
pushf
dec
pop
jecxz
xchg
xchg
push
call
mov
int3
mov
sti
jle
pop
mov
inc
cmpl
xor
int3
adc
pop
imul
ljmp
add
div
or
outsb
aas
insb
insb
rclb
lea
add
add
mov
xor
mov
cmp
and
int3
push
fimuls
int
dec
jmp
int3
mov
mov
push
and
xor
imul
mov
cmp
sarl
jl
xchg
iret
bnd
xor
stos
or
or
icebp
mov
ljmp
push
sub
or
inc
sbb
mov
add
lea
stos
shll
add
adc
shlb
outsl
or
mov
fisubrl
or
sub
mov
fisubrs
std
add
cmp
fnstenv
inc
jmp
pop
jecxz
rcll
jp
sub
cmp
or
lea
jnp
and
cmp
mov
inc
mov
sbb
adc
fsub
sub
clc
dec
leave
push
jmp
insb
xor
push
mov
dec
mov
test
je
gs
and
pop
inc
push
jmp
push
push
in
andl
leave
sub
push
lret
or
cmp
add
xor
push
mov
sbb
xchg
punpcklwd
fidivs
mov
addb
push
insl
add
lock
sbb
mov
add
adc
sahf
inc
or
pop
js
jmp
pushf
and
mov
and
pushf
in
repnz
or
or
push
add
inc
xor
sbb
add
ret
test
cltd
roll
xchg
je
mov
cmp
bnd
pusha
cmp
imul
mov
pop
mov
xor
sbb
inc
mov
mov
lret
mov
mov
inc
sahf
ds
push
mov
add
adc
or
shlb
mov
mov
cmp
sub
push
inc
mov
add
jbe
loopne
mov
popa
xchg
and
dec
and
frstor
lods
stos
mov
jmp
mov
leave
mov
shlb
lea
cli
ja
cmpb
jb
inc
lods
out
aas
ret
push
enter
adc
movsb
adc
not
cmp
push
or
inc
cmp
bound
mov
sbb
adc
and
inc
jecxz
arpl
mov
mov
imul
imul
add
lea
aas
enter
xorl
and
cmp
sbb
arpl
mov
ret
or
movsb
mov
inc
push
out
enter
sub
mov
bound
ja
js
lock
out
aaa
push
and
mov
mov
aaa
leave
inc
sub
icebp
mov
inc
mov
mov
inc
aaa
inc
popa
popf
adc
movb
fsubs
loopne
incb
divb
fidivl
out
jns
ja
push
inc
sbb
jg
sub
lock
sbb
sbb
pop
icebp
adc
push
push
or
dec
sub
jp
nop
vorps
push
sbb
add
mov
or
imul
cmp
or
inc
dec
in
clc
movl
add
add
jo
adcb
cld
xor
fdivrs
dec
pusha
mov
jbe
jo
or
scas
and
pop
mov
mov
jns
mov
sbb
sahf
aas
mov
pop
or
jnp
ficomps
push
adc
cmpl
push
jle
pop
popa
dec
jmp
jbe
cmpl
mov
ret
scas
ljmp
push
pop
out
inc
dec
xor
adc
cmp
or
mov
movhps
scas
add
xor
adc
mov
mov
mov
rolb
out
add
mov
mov
call
xlat
or
or
pop
and
in
nopl
das
leave
aad
push
lret
fisttpl
and
fidivl
pop
pop
into
mov
sbb
decb
cmc
mov
pushl
and
lea
xor
cmc
ret
push
xchg
ja
mov
pop
into
cmpsb
push
mov
sub
sbb
cmp
aam
adc
mov
pop
sbb
pop
mov
repz
sub
fwait
mov
sbbl
adc
cmpsl
jo
lea
pop
test
outsb
dec
add
or
loop
cmp
and
mov
cmp
and
lret
pop
pop
mov
adc
pop
sub
push
js
jge
jo
add
inc
sbb
cli
dec
pop
mov
jo
lcall
add
pop
or
pusha
pushf
test
add
shll
inc
mov
test
stos
cmp
push
push
or
push
mov
icebp
push
outsl
adc
pushf
movsl
test
or
icebp
adcl
fs
roll
lea
insb
jle
dec
mov
ds
mov
mov
cmp
inc
fsubr
adc
sub
test
ljmp
cld
les
push
jmp
sbb
sbb
push
dec
fucom
add
jle
xchg
out
add
xor
push
or
or
mov
imul
push
ljmp
or
mov
aam
jae
mov
xor
mov
shlb
ret
sahf
add
sbb
add
rol
scas
add
cmp
jnp
imul
jle
adc
mov
mov
sbb
rolb
test
cmp
xchg
test
mov
push
mov
sub
out
xchg
sbbb
cwtl
xor
mov
add
xchg
nop
dec
mov
mov
add
mov
xchg
mov
ljmp
pop
xor
jl
popa
pop
add
dec
add
add
imul
xor
sub
inc
test
jge
mov
push
cld
sub
lock
cmp
pop
push
add
jge
xor
and
lahf
xor
inc
cmp
jl
pop
scas
sub
shll
outsb
or
jle
shlb
push
xor
test
add
lock
sbb
dec
stos
popa
out
or
xchg
jle
mov
outsl
shrl
xor
pop
ret
push
das
mov
ds
or
push
jl
mov
add
cmp
int3
push
loope
adc
outsl
sbb
das
add
add
inc
in
aaa
xchg
sbb
popf
mov
or
dec
ja
das
cs
rclb
xchg
sbb
cmp
sub
push
incl
cmp
arpl
dec
mov
je
or
bound
test
ljmp
push
inc
fildll
pop
or
adc
popf
aam
mov
mov
ss
inc
mov
push
in
std
outsl
in
das
jbe
loope
and
add
mov
enter
shl
add
loope
shl
lret
mov
mov
xchg
cmp
mov
sub
cmc
in
inc
or
adc
or
add
cmp
lock
lea
add
sub
add
outsl
leave
add
sub
push
dec
add
or
dec
push
sbb
and
adc
mov
jge
das
dec
dec
xor
daa
mov
dec
lock
nop
adc
add
test
daa
movsb
dec
loop
add
or
adc
les
lock
mov
fiadds
mov
xchg
je
pop
add
pop
imul
pop
imul
pop
lock
int3
adcb
fidivs
xor
jle
ret
lock
dec
pushf
cmp
stos
adc
ljmp
gs
mov
and
sub
mov
loopne
and
stos
add
ljmp
pop
xchg
add
adc
ret
mov
push
dec
popf
add
mov
mov
lods
or
add
sub
push
pop
cld
or
add
dec
dec
stos
mov
out
lods
pop
inc
push
or
out
in
jns
or
popa
xchg
sub
pop
in
jl
jo
mov
ficoms
shrl
mov
xchg
aad
pop
adc
popa
mov
inc
inc
mov
test
sarl
inc
mov
mov
dec
xor
and
scas
aam
pop
fsubl
xor
push
es
inc
adc
mov
ret
mov
loopne
jle
inc
pop
or
jg
sub
lods
cwtl
pop
push
mov
jmp
in
pop
fcoml
push
js
aam
mov
jmp
das
mov
sbb
sub
cmp
add
sbb
addb
sbb
or
mov
xchg
jge
sub
movsb
nop
pop
dec
test
cmp
in
push
dec
push
xchg
pop
mov
push
ret
mov
mov
add
cltd
outsw
loop
sub
mov
mov
sbb
out
jmp
sbb
in
mov
lahf
jae
lcall
insb
xor
pop
testb
mov
rolb
fiadds
clc
xchg
xor
movsb
mov
push
push
mov
mov
pop
pushw
sbb
mov
popa
outsb
xor
or
adc
pop
push
xor
push
pop
ret
mov
or
or
pop
jmp
imul
clc
rorb
push
or
nop
adc
pop
sarl
xchg
in
sub
xchg
dec
push
cmpsl
push
sbb
bound
add
or
push
cmpsb
push
sub
sub
mov
push
sub
dec
push
pop
lock
jb
cmp
and
or
aaa
repnz
or
ja
mov
into
sbb
push
aam
in
out
mov
stos
sbb
adc
cmp
push
lds
mov
inc
or
or
jmp
and
add
pop
inc
mov
mov
aam
adc
mov
gs
adc
lcall
out
inc
mov
and
rorb
or
enter
xor
pop
imul
xchg
mov
xchg
or
lods
pop
push
mov
fs
sbb
xor
xor
cmp
cmp
mov
cld
popa
insb
mov
mov
lret
add
push
push
push
xor
sub
push
cltd
dec
mov
sbb
sub
pop
jne
mov
inc
xor
daa
mov
test
sti
pop
push
incl
cmpsl
ret
fnstcw
mov
pop
jb
push
shrb
pop
push
push
push
adc
adc
push
add
test
dec
mov
inc
aaa
push
fdivrp
add
and
lods
test
sbb
pop
fsubs
adc
add
adc
sbb
push
add
inc
xchg
je
cld
pop
and
pusha
push
inc
add
sbb
and
dec
pop
xor
inc
das
xor
and
aas
jo
out
cmp
and
ret
sarb
push
and
ret
push
movsb
imul
cmp
in
mov
and
frstor
cmp
cmp
int3
sub
pop
or
or
adc
add
inc
fwait
stos
jno
jmp
or
add
pushf
add
test
xor
arpl
ret
dec
jge
dec
insb
mov
mov
or
orb
xor
inc
pusha
and
xor
mov
jo
rcrb
mov
add
or
fs
or
out
sub
inc
jo
jne
addl
pop
or
cmp
xlat
and
shl
xchg
andl
sahf
xchg
mov
mov
lahf
sbb
jne
mov
inc
inc
fiadds
movl
push
cmp
dec
xor
push
pop
pusha
mov
je
cmp
je
mov
cld
sub
aaa
sbb
add
pop
cmp
mov
or
add
sbb
sbbb
jmp
sub
ds
jnp
int3
aam
adc
add
add
out
mov
jne
pop
sub
flds
popa
dec
cltd
add
pop
push
xchg
je
in
push
cmc
inc
std
pop
iret
and
sbb
xor
es
add
sub
cmp
loopne
jae
dec
and
ret
pop
mov
cmp
sahf
aam
pop
sbb
adc
adcb
cmp
pop
jne
jg
add
sub
add
inc
dec
hlt
mov
inc
inc
xchg
inc
push
cmp
insl
inc
mov
jo
and
jmp
pop
push
test
addl
clc
jg
inc
hlt
push
add
push
push
mov
andb
icebp
inc
mov
flds
push
arpl
jno
dec
or
popf
xor
jbe
dec
cwtl
out
mov
push
lcall
and
add
stos
xlat
hlt
outsl
addr16
pop
mov
sbb
add
aaa
xlat
mov
ds
or
fst
lock
inc
sbb
sbb
pop
push
pop
add
repnz
roll
add
enter
cmpb
leave
jmp
lea
add
sub
dec
adc
and
xchg
and
or
imul
cmp
jno
popa
sbbb
or
xorl
add
jle
testb
dec
pop
pop
mov
pushf
mov
fsubl
sub
mov
jne
icebp
adc
dec
test
sbb
je
loopne
out
std
cwtl
inc
adc
cmpsb
push
add
add
push
pop
adc
fisubrl
addr16
out
dec
mov
fs
adc
sarb
jp
jne
cmp
testl
add
fs
xchg
fdivrl
scas
dec
sbb
nop
rclb
dec
mov
cmp
ret
aaa
les
xor
arpl
call
xchg
sub
pop
addl
fmuls
add
sbb
arpl
dec
mov
and
lret
shll
insb
mov
jmp
clc
jecxz
sub
dec
cmp
std
adc
pop
sbb
dec
push
ret
rorl
or
mov
mov
pop
popa
shlb
pop
jo
shll
push
pop
es
ds
or
popa
pop
fwait
mov
mov
addb
sub
icebp
cs
aad
and
pop
mov
jne
loopne
pop
adc
or
push
out
enter
xchg
add
adc
and
cmp
adc
dec
sbb
inc
mov
dec
xchg
orb
add
inc
push
xchg
xchg
or
add
or
scas
rorl
mov
sbb
fdivrs
xorb
and
popa
cmp
jae
f2xm1
ss
adc
cld
pusha
dec
adc
scas
clc
cmp
mov
adc
in
mov
movsb
add
and
cmpw
insl
loopne
lock
fadd
add
mov
dec
mov
push
inc
cmpsb
xor
cmp
cmpsb
fisttpl
sub
aad
sbb
xchg
dec
adc
jne
add
sbb
subb
mov
inc
and
lock
rcll
mov
pop
sarl
cmp
jbe
jns
cmp
cmc
jmp
ds
dec
jne
arpl
xor
pop
adc
je
movsb
inc
enter
adc
sbb
pop
adc
push
pop
add
mov
xor
aas
pop
cmp
loop
lods
pop
in
mov
ss
jle
xor
push
cwtl
jo
dec
pop
dec
in
pusha
push
orl
adc
or
pop
mov
push
add
fisubrs
addb
inc
clc
dec
push
and
mov
mov
inc
cmp
outsb
pusha
fsubs
je
cmp
dec
sti
je
xor
fs
pop
cmpl
mov
xchg
push
fisubrs
fisttps
ja
in
in
xor
loopne
dec
push
ds
jae
inc
xchg
icebp
adc
add
js
sti
jle
push
and
or
adc
bound
aas
nop
inc
je
sar
push
or
les
loopne
pop
mov
adc
sbb
repz
rcr
cmc
jo
ret
ss
and
dec
inc
dec
loopne
pop
cltd
daa
ficoms
ret
fisttpl
add
and
add
loope
sbb
jle
in
mov
sub
xor
add
jnp
sbb
cmp
mov
imul
jb
mov
push
cmpsl
or
shl
dec
xchg
cs
lea
lods
scas
pop
inc
rcl
pop
orb
push
xor
dec
pop
mov
out
jbe
rolb
sub
and
push
into
push
lret
loopne
insb
loopne
js
inc
ss
dec
repnz
movsb
jbe
test
mov
mov
mov
fisubrs
lcall
out
ljmp
pop
clc
das
cmp
add
lahf
loopne
shll
outsb
xor
jle
jo
shll
ret
mov
je
inc
call
ja
and
sbb
xchg
xor
push
cld
cmp
push
cld
xchg
pop
stos
ret
mov
and
and
cmp
imul
ja
insb
loopne
push
xor
jne
popa
and
ret
adc
sub
push
fucomip
xor
adc
dec
push
dec
adc
js
sbb
mov
movsl
or
cmp
and
jne
je
jmp
sbb
loope
or
push
dec
sub
loop
cmp
out
jns
sub
push
popa
adc
clc
and
js
pop
js
cmp
push
dec
push
cmp
mov
mov
sub
inc
ljmp
sbb
icebp
jnp
or
mov
cmp
mov
xchg
cld
sub
aaa
push
scas
cmpsb
ret
shll
push
mov
mov
loopne
inc
pop
pop
and
loopne
sbb
in
mov
push
mov
inc
sbb
and
inc
imul
ljmp
or
sti
and
movsb
sub
sbb
fsubrs
inc
adc
dec
mov
sbb
xchg
sub
cmp
imul
mov
xor
sub
inc
cld
sub
shll
out
cmp
lret
xchg
in
pushf
push
jge
xlat
mov
jl
dec
push
push
lock
ror
addr16
adc
data16
mov
mov
pop
cltd
adc
inc
add
jne
mov
mov
cmp
mov
fs
cmp
mov
cld
inc
loop
insl
cmp
inc
sub
xchg
sarb
xor
mull
pop
ja
sbb
mov
dec
je
xchg
jno
mov
adc
jo
dec
inc
xor
dec
sbb
faddl
lods
dec
adc
jecxz
nop
jmp
mov
or
je
movl
cmp
or
inc
push
ljmp
jne
mov
and
cmpl
pop
inc
js,pt
and
mov
add
fidivrl
sub
cmpl
add
fs
les
jg
sub
mov
stos
or
scas
pop
push
dec
jg
stos
and
fisttpl
cli
mov
and
sub
fwait
jg
jg
dec
test
loopne
mov
movq
movaps
xchg
push
clc
jae
xor
jle
xor
cli
test
test
mov
int
lods
inc
loop
and
lret
or
jg
std
in
push
adc
jnp
mov
pusha
add
insb
or
aam
ret
or
add
adc
test
cli
pop
add
ffree
roll
add
scas
std
imul
enter
mov
ficoml
sbb
sbb
mov
aad
xchg
and
cmp
sbb
ja
loop
adc
dec
sbb
fimull
xor
push
addl
pop
ds
jge
jbe
inc
rcll
pop
loop
dec
movsb
adc
dec
cld
mov
push
push
ret
jge
mov
ja
push
loop
ret
ja
pop
push
movsb
leave
or
xchg
add
xchg
xchg
loope
adcl
push
and
adc
shlb
andl
clc
daa
mov
adc
fildll
push
ljmp
mov
mov
and
lea
mov
jb
rcrl
push
mov
push
arpl
jbe
mov
push
mov
mov
cmp
in
jg
ret
pop
jmp
mov
mov
cmp
jmp
loope
jne
push
orl
sti
std
mov
cs
dec
adc
andb
in
push
push
js
mov
push
icebp
add
nop
cmp
pop
pop
mov
cmpsl
mov
mov
adc
push
sbb
call
xchg
pop
or
popf
sahf
jl
ljmp
or
lea
out
inc
mov
mov
or
lret
subl
xchg
jmp
push
sub
and
adc
sub
push
pop
daa
and
inc
js
inc
inc
mov
aas
mov
mov
stos
stc
jg
mov
mov
or
adc
jne
inc
cmp
inc
adc
inc
xor
xchg
les
clc
in
mov
aam
inc
popa
cmpsb
js
ljmp
jbe
mov
mov
das
out
mov
inc
arpl
inc
dec
lea
mov
mov
inc
inc
cmp
cmp
add
lahf
or
rcrb
lock
cmp
or
dec
adc
xchg
adc
cmp
lret
add
adc
es
or
loopne
xor
add
add
mov
mov
pop
cs
and
adc
bound
inc
hlt
cmp
jno
into
mov
repnz
cmpsb
mov
enter
mov
sahf
cmp
ret
jge
shl
or
or
dec
leave
sbb
xchg
or
inc
pop
cmp
mov
mov
std
add
loopne
rol
inc
inc
dec
adc
sarl
rcl
lret
jne
sbb
out
jg
dec
xchg
inc
ret
jmp
jnp
add
or
mov
push
sub
movsl
movl
sti
add
jp
pop
cs
call
push
and
xchg
ret
push
add
add
xlat
and
testb
cmp
or
orl
lock
push
mov
nop
push
dec
pop
mov
aad
dec
pop
push
mov
leave
and
fiaddl
fiaddl
outsl
push
jbe
inc
push
data16
jge
gs
mov
rcrl
pop
dec
loope
jp
or
jl
roll
or
arpl
pmaxub
mov
and
iret
add
add
idivb
cmp
cli
inc
dec
xchg
cs
mov
lods
inc
push
jle
sub
stos
mov
push
add
inc
rcll
inc
push
mov
shrb
and
mov
incl
sbb
je
or
inc
dec
pop
daa
or
xchg
inc
testb
add
lea
mov
push
xor
shrl
rcrb
icebp
push
jae
or
xchg
dec
inc
imul
je
cmc
xor
mov
xor
popf
xchg
add
or
adc
repz
push
mov
sub
push
outsl
outsb
rorl
jmp
add
rolb
pop
add
ficomps
ror
xorb
aaa
pop
pushl
dec
lds
jmp
shl
push
out
xchg
fwait
jle
push
fdivrs
xchg
cmc
loope
xchg
pop
decl
and
inc
sarb
adc
lock
call
lds
dec
inc
pusha
jb
sbb
ret
ss
ljmp
or
in
mov
cmp
sbb
fstpl
cmp
movsb
loopne
and
push
mov
clc
insb
fmull
ljmp
inc
push
adc
xchg
mov
push
dec
xchg
movsb
ss
inc
pop
lods
mov
in
scas
incb
dec
add
adc
xor
cs
sbb
add
jbe
mov
or
je
loopne
xor
pop
pop
fcomps
js
jo
fdivr
jnp
adc
push
cmp
jb
xor
sub
sbb
ss
jp
mov
xlat
test
sub
inc
mov
je
cmpsb
fsubr
ret
mov
mov
js
lahf
push
pop
pop
and
pop
or
xchg
push
int3
rol
clc
adc
fcmovb
mov
in
testb
divl
aas
jmp
add
mov
sub
sbb
pop
addl
pop
fldt
jno
or
addr16
and
mov
int
rcr
pop
jl
aas
push
and
fistpl
jne
or
cmp
je
and
loopne
hlt
mov
and
mov
sub
test
sbb
testb
inc
mov
adc
or
loopne
lret
sub
pusha
ret
sbb
or
daa
pushf
cli
pushf
push
aas
push
add
push
jmp
inc
clc
shlb
sbb
scas
addl
test
stos
lock
mov
push
clc
jp
ret
jmp
inc
loope
sbb
adc
push
or
or
cli
xor
orb
mov
add
scas
andb
ljmp
dec
jb
xchg
pop
cmpsb
lods
inc
insb
mov
mov
dec
inc
mov
jno
sub
add
adc
fwait
xor
in
jl
push
mov
lea
in
lock
les
mov
pop
ret
pop
or
xchg
addb
ljmp
push
ljmp
cmp
dec
mov
and
push
sbb
js
call
lret
cmpsb
pop
loopne
mov
sub
std
add
mov
pop
cmp
fstpt
dec
and
mov
add
sbb
inc
adc
sti
mov
repnz
inc
dec
or
stos
enter
add
push
in
ja
inc
pushf
testb
inc
imul
mov
enter
pushf
cmpsl
in
push
jl
sbb
pop
jne
pop
clc
sub
xchg
aam
push
sub
dec
or
sub
ret
sub
stos
jb
add
arpl
jmp
bound
dec
pop
fsubl
xchg
bound
mov
xor
rorb
pop
in
cmp
sbb
sbbb
in
mov
sbb
int
cwtl
dec
sbb
pusha
mov
cmp
push
pop
cwtl
add
cmp
je
push
mov
dec
xor
sub
bound
cmpb
ret
lea
repz
imul
ss
push
pop
add
and
enter
daa
sbb
repz
add
inc
cmp
adc
dec
add
mov
js
lcall
flds
add
sbb
mov
adcl
add
jae
sub
or
or
or
pop
enter
or
pop
jns
cmp
or
loop
cmpb
or
nop
ja
mov
cwtl
in
jns
push
push
ja
and
pusha
nopl
push
adc
in
lods
xor
pop
adc
fwait
sub
cmpb
lret
add
popa
adc
adc
add
adc
add
inc
fisubs
cltd
and
enter
adc
and
push
push
push
pop
lcall
sbb
lcall
sbb
call
pop
enter
push
sbb
push
push
and
jb
xor
sbb
jge
add
repz
roll
push
inc
push
pop
pop
mov
and
ret
sub
cmp
fdivrs
dec
movl
xchg
and
pop
or
and
jp
inc
cmp
decl
sub
cmp
je
lcall
sahf
cmpsl
jns
rol
lea
aad
cmp
add
cmp
mov
xor
dec
test
mov
add
call
adc
dec
dec
cwtl
jmp
and
sub
xor
jmp
jmp
and
out
in
in
in
cltd
add
cs
in
inc
in
sbb
iret
enter
jge
test
out
sbb
pop
add
lock
xchg
xor
icebp
bswap
add
sbb
repnz
std
test
repz
std
hlt
add
int3
test
hlt
fwait
jb
sahf
xchg
mov
and
enter
pop
notl
idivl
std
clc
in
or
adc
outsl
stc
inc
stc
lock
cli
ror
repnz
iret
sti
sbb
xchg
inc
enter
cld
cld
je
dec
sub
and
push
in
mov
mov
xor
sbb
nop
out
adc
loopne
add
ret
inc
or
nop
push
or
xor
sarl
dec
shl
ljmp
jecxz
ja
inc
xor
mov
push
inc
push
nop
in
icebp
xchg
stc
daa
nop
or
xchg
sti
out
out
and
insb
out
outsb
call
inc
dec
sti
sub
xor
and
mov
cltd
in
jns
cmp
add
push
adc
orb
inc
repnz
add
cli
cmp
push
cli
sbb
dec
push
repz
pop
and
sar
push
stc
loop
xor
sbb
stc
div
negl
mov
xor
add
and
adc
out
clc
xor
inc
or
lret
sti
sbb
pusha
cmp
mov
pop
enter
rcll
inc
pusha
sbb
cmp
and
shl
adc
cld
sub
mov
loop
cmp
mul
pop
sub
xchg
cmp
imull
xor
mul
sbb
sbb
pusha
and
out
xchg
cmp
pop
inc
mull
notl
sub
sti
imul
sbb
ret
jno
mulb
jns
mov
mov
sbb
pop
repnz
negb
jae
out
jno
adc
jb
negb
testb
sbb
repnz
scas
in
mov
pop
xlat
xchg
pop
leave
xchg
cmc
jae
pop
cs
in
dec
cmc
div
imulb
fwait
and
addl
clc
loopne
jns
hlt
stc
popa
cmp
mov
xlat
jb
jno
hlt
pop
pusha
leave
mov
jne
push
hlt
roll
push
data16
shr
cs
push
jo
loopne
fstps
sti
lahf
pusha
adc
das
xchg
push
or
test
loope
mov
push
and
jne
subl
mov
test
movsl
test
mov
inc
repz
inc
mov
inc
push
sbb
jmp
mov
mov
xchg
repnz
mov
sbb
sbb
in
jmp
jb
cmc
and
add
and
mov
arpl
test
mov
and
je
jo
icebp
sub
shll
icebp
test
rclb
cmp
xchg
sbb
cmc
add
cmpsl
cs
jecxz
ffree
lock
and
fcompl
stc
stc
cmc
jne
pop
daa
xchg
lock
lock
adc
xchg
lock
jl
mov
das
cmp
ret
repnz
outsb
sahf
add
sub
out
sbb
add
cmovno
cmpb
add
add
nop
add
test
jnp
cltd
or
adc
add
pop
shll
cmp
out
enter
add
sahf
and
ljmp
cmpsl
pop
add
mov
add
movsl
sbb
push
sbb
cmp
sahf
adc
jle
mov
cmpsl
fnstcw
pmaxsw
cli
sbb
stc
cmp
jg
pop
imul
data16
fcompl
std
push
popa
inc
out
lahf
out
outsb
rclb
mov
mov
fisttps
and
dec
adc
and
pop
add
roll
pop
outsl
mov
and
or
mov
and
call
and
mov
mov
add
add
add
ret
fs
outsl
mov
cld
jb
test
mov
sub
pop
int
or
jp
sub
adc
or
add
ret
push
add
add
in
mov
icebp
mov
push
shlb
hlt
nop
lock
clc
js
add
ret
xchg
mov
mov
add
loopne
pop
adc
or
je,pn
push
adc
sub
data16
push
sbb
or
adc
ret
adc
or
inc
sbb
push
fdivs
mov
cmp
xchg
fmuls
mov
testb
repz
sub
arpl
jl
xorl
sub
sbb
xchg
mov
and
sbb
fbld
xor
dec
pop
add
push
cmp
or
jg
lds
cmpl
pop
ds
sahf
or
xchg
cmpb
neg
fmuls
inc
test
rorl
push
add
outsb
xor
testb
adc
sbb
movsl
test
dec
je
rep
mov
dec
xor
pop
dec
adc
repnz
or
lea
or
lods
fdivrs
add
push
bswap
xchg
sub
in
inc
stc
add
inc
pop
les
adc
fsubp
dec
and
jns
es
jo
pop
mov
cld
add
push
push
jne
insl
addr16
movsb
test
jno
jne
push
inc
jb
imul
add
push
pop
and
inc
inc
xor
add
enter
xchg
insl
gs
mov
sub
mov
push
inc
and
gs
iret
push
mov
cmpsb
sbb
jno
or
push
sbb
imul
or
cmpsb
or
add
add
push
sti
push
shll
add
fmulp
push
or
inc
inc
pop
cmp
enter
sbb
jp
nop
stc
sbb
jmp
pop
ret
les
int
lds
sbb
add
adc
in
sbbl
add
sub
adc
or
jl
or
xor
lods
push
mov
push
lea
into
arpl
mov
mov
or
pushf
inc
out
out
xchg
mov
inc
mov
out
lea
cmp
jne
orl
add
xchg
add
xchg
mov
xchg
out
xor
adc
cmp
push
data16
dec
ja
mov
mov
push
cmp
and
or
adc
or
adc
aaa
fbstp
dec
add
add
lds
pop
ud0
xor
aad
add
or
div
push
mov
lret
cld
xor
sbb
je
mov
sub
push
ljmp
out
cmp
cs
and
adc
sbb
shll
enter
movsb
sbb
sbb
add
adc
sub
and
push
sbb
filds
mov
xor
inc
cld
imul
fsts
cmc
mov
sbb
or
repnz
cmp
pop
ja
lret
push
es
mulb
ljmp
add
stos
add
ds
bound
mov
test
pop
ret
xor
pop
pop
adcl
shl
and
cmp
loope
pop
and
lcall
aas
sub
or
popa
push
sub
lods
or
fisttpl
or
aas
xchg
sbb
push
cmp
jne
jnp
rolb
adc
outsb
pop
mov
loope
shlb
idivb
push
cmp
jne
mov
push
cmp
jne
jns
fwait
cmpsl
es
jne
call
inc
popf
push
lcall
add
push
or
cmc
jmp
iret
iret
repz
jmp
std
std
jmp
cld
cltd
and
push
sub
test
or
and
mov
adc
lods
sbb
je
or
add
stos
shr
repnz
add
pop
lock
test
mov
inc
fs
jo
lds
clc
test
ret
leave
jns
adc
pushf
ja
pop
inc
pusha
test
sbb
std
adc
xchg
or
push
leave
and
or
xor
push
add
adc
orl
aaa
in
inc
sahf
inc
pop
shr
dec
cmp
xchg
ja
mov
adc
xor
je
cmc
aaa
push
add
sbb
fimull
inc
and
jnp
xchg
add
repz
sub
xchg
sbb
xor
rcll
xchg
sbb
inc
push
fidivrl
je
push
jmp
mov
shr
push
pop
pushl
jne
or
inc
roll
push
push
jmp
sbb
lods
mov
outsb
out
jns
mov
dec
mov
cmp
scas
cmpsb
or
lcall
sbb
cwtl
inc
push
movb
pop
sbbb
add
roll
add
adc
call
dec
cmp
loopne
imul
inc
add
je
hlt
jae
ret
jmp
lret
xor
push
nop
jecxz
call
nop
push
jp
dec
stc
imul
jmp
add
testb
sahf
sub
mov
out
out
push
add
loopne
cltd
or
test
add
dec
jne
mov
mov
icebp
cmpsl
jns
inc
adc
ds
xor
sbb
mov
lods
xor
das
int3
add
push
add
lret
mov
rorb
cmp
andb
jmp
mov
pop
and
cmovs
scas
mov
pop
test
div
movl
adc
jb
rep
jmp
mov
mov
stos
mov
enter
push
sahf
mov
das
ds
aam
pop
call
es
cmp
and
fwait
push
mov
or
scas
adc
mov
dec
add
movl
pushf
inc
add
add
mov
cwtl
popa
push
mov
iret
repz
mov
mov
call
call
popf
out
sahf
hlt
hlt
clc
clc
cld
push
sub
or
add
iret
imul
push
call
je
inc
mov
mov
pop
sti
and
ret
push
andl
push
lea
jl
adc
or
into
mov
out
pusha
xor
fsts
inc
xchg
stc
sub
push
movsb
push
push
rcr
push
fldcw
jl
mov
add
sahf
inc
push
out
push
outsb
in
xchg
lret
nop
dec
dec
imul
add
mull
inc
push
je
adc
sbb
lahf
out
sahf
and
xor
inc
push
xor
jns
pop
aaa
sbb
sbb
sahf
out
sahf
adc
adc
or
inc
sahf
out
or
add
clc
mov
or
mov
aaa
push
add
and
daa
dec
sub
xorl
repnz
pop
mov
mov
xor
mov
mov
incl
inc
decl
adc
pop
pop
movsl
inc
in
or
or
push
cld
cmp
xor
test
pushl
push
cltd
pop
idiv
add
mov
pusha
or
sub
add
in
pop
cltd
sbb
dec
mov
mov
xor
popf
nop
aam
bnd
cmp
jae
dec
fcompl
add
mov
jae
pop
jbe
adc
inc
push
mov
dec
fsubr
call
add
sub
push
mov
pop
add
mov
push
jg
inc
filds
add
pop
call
or
sbb
sbb
dec
dec
je
push
push
or
sbb
inc
adc
mov
xchg
insb
adc
fidivrs
and
xor
pop
decb
out
or
push
mov
inc
daa
rcrb
and
cmp
das
mov
add
sub
xchg
sub
add
cwtd
push
inc
jmp
push
lods
ret
pop
and
addb
push
testb
xor
adc
insl
popa
movsb
jne
loopne
sbb
xchg
mov
inc
jmp
cmp
sbb
sub
sub
insl
loopne
fnstsw
or
aas
jge
mov
pop
idiv
pop
mov
sti
xor
xchg
inc
out
cmp
sbb
lcall
dec
mov
mov
add
inc
sub
push
shrb
enter
sar
adc
fs
jmp
jl
mov
or
insl
in
call
dec
lds
or
je
insb
sub
sbb
jecxz
repnz
sbb
xchg
jae
mov
sbb
inc
pop
incb
add
jns
adc
cmp
xor
dec
incl
pop
sti
cmp
rcrl
sbb
sbb
jp
push
rolb
call
jecxz
addl
pop
add
and
xchg
cld
or
les
jmp
xor
ja
jl
je
sbb
and
popl
jl
fs
sti
insb
mov
daa
das
jno
mov
mov
int
int3
dec
jo
sub
je
dec
inc
std
dec
jp
pop
jne
mov
shlb
add
inc
push
cmpsl
rorb
push
loop
lcall
pop
popl
mov
lods
xchg
and
jno
filds
push
in
or
pop
mov
push
aaa
cmpl
cltd
cmp
pop
stc
pop
adc
adc
lcall
pop
inc
jmp
push
pushf
iret
mov
mov
popf
into
mov
inc
and
lock
push
xchg
sub
push
je
mov
imul
shll
mov
mov
pusha
movsl
and
jge
loop
lock
or
push
hlt
mov
and
push
adc
push
adc
repz
ja
inc
adc
or
out
call
add
push
in
push
arpl
mov
out
mov
sbb
lods
dec
ljmp
cmp
ret
xchg
rorb
add
and
jg
push
insb
loope
pop
fdivs
cld
mov
sub
js
mov
adc
xchg
add
stos
hlt
adc
out
xor
icebp
mov
mov
add
decl
inc
jg
xor
in
clc
stc
xchg
mov
aam
stos
push
icebp
adc
lret
lock
cs
das
clc
mov
inc
inc
cmp
je
xchg
mov
sahf
fs
orb
imul
fadds
inc
fwait
dec
dec
mov
dec
je
and
mov
mov
push
adc
dec
push
jb
cld
inc
call
mov
incl
in
push
or
or
inc
jae
xchg
adc
lret
dec
push
sbb
lods
mov
sub
bound
mov
sbb
lret
mov
add
dec
push
sbb
hlt
dec
xor
movl
or
dec
std
fldt
test
adc
push
out
pop
test
cmp
cmp
je
mov
inc
sarl
or
shll
sub
inc
or
imul
orl
shll
push
add
frstor
sub
dec
movsb
jb
mov
hlt
leave
mov
popa
mov
inc
sbb
addl
or
jl
fildl
add
mov
ror
add
scas
mov
roll
shl
pop
bound
jne
jmp
inc
ds
dec
or
sub
pop
enter
jmp
das
dec
jmp
dec
pop
dec
mov
into
push
adc
add
adc
adc
and
mov
push
in
ss
or
clc
add
jno
mov
sub
call
sub
push
rolb
ret
cmpsl
pop
dec
pop
in
or
and
add
adc
hlt
cmp
mov
push
jne
jl
outsb
jns
and
stos
popa
pop
pop
nopl
adc
sbb
bound
mov
mov
repnz
pop
dec
sbb
je
pop
pop
and
inc
push
jmp
or
or
je
inc
or
clc
and
inc
inc
call
mov
inc
ss
cmpl
sub
push
imul
cltd
pop
stos
call
or
and
pop
jmp
mov
jmp
aas
rolb
lea
out
mov
test
jmp
add
mov
sbb
dec
enter
add
inc
jb
in
add
and
pop
pusha
leave
pop
fldz
dec
dec
jnp
push
xor
adc
adc
data16
push
or
mov
adc
push
arpl
movsl
sub
lcall
pop
or
inc
cltd
add
lock
xchg
addl
cmpb
pushf
outsb
mov
loopne
mov
es
iret
insl
ds
cld
jmp
pop
arpl
xchg
push
jno
sub
or
cmc
loop
fwait
clc
xor
inc
mov
scas
or
pusha
imul
inc
add
test
frstor
cmp
pop
inc
sbb
adc
cmp
xor
push
or
repnz
sub
pop
mov
inc
push
movsl
jbe
rorb
outsb
jbe
pop
repnz
rolb
jg
push
inc
and
cmpsl
add
pop
pop
mov
jecxz
push
xor
fcoml
addb
xor
pop
sbb
in
ret
lcall
pop
pop
add
and
gs
clc
lret
not
or
or
popf
sahf
dec
jnp
mov
xor
or
sarb
cmp
leave
push
push
mov
enter
mov
leave
or
jmp
mov
cmpsb
popa
or
xchg
adc
xchg
cwtl
dec
lcall
lock
inc
and
sbb
or
push
mov
xor
sbb
adc
adc
imul
rclb
or
das
sbb
cmpb
inc
jnp
mov
arpl
imul
lods
adc
fidivrl
xchg
shlb
sbb
sub
aaa
mov
imul
pop
pop
clc
xchg
inc
adc
jge
cmp
cmp
add
fiadds
rolb
mov
and
nop
inc
mov
sub
outsl
sbb
ja
jbe
adcl
subl
hlt
mov
fistl
sbb
ret
sub
push
dec
lahf
sub
dec
xchg
jle
mov
inc
inc
xchg
loope
add
outsl
sub
jg
adc
push
add
add
icebp
loopne
fldl
or
pop
sbb
mov
cltd
rol
mov
xor
cmpsb
andl
mov
in
nop
xor
mov
call
test
enter
or
or
incl
jle
ret
fs
push
push
or
mov
adc
adc
sbbb
sub
or
add
imul
and
xchg
mov
ret
xor
dec
aas
icebp
lock
add
dec
inc
adc
ret
inc
inc
or
mov
pop
rolb
add
jmp
sbb
incb
mov
lds
push
sub
mov
lock
mov
mov
cli
or
add
or
push
jmp
cmp
rolb
jbe
pop
cmp
jb
scas
andb
lahf
mov
dec
mov
mov
dec
dec
mov
inc
call
repnz
or
pop
push
mov
or
scas
xchg
add
arpl
jno
popa
aaa
es
cmp
add
mov
jne
adc
int
add
sarl
adc
lret
push
lods
imul
cmp
jg
add
mov
scas
in
in
and
pusha
add
xchg
in
sub
push
lcall
pop
shll
mov
out
sub
fdiv
sub
pop
jle
adcl
inc
les
xchg
sbb
dec
int3
add
jbe
loopne
nop
mov
shl
pop
push
clc
pop
ljmp
adc
mov
jl
sub
dec
and
cmp
and
mov
out
push
xor
cs
xor
and
aam
test
leave
adc
add
push
enter
dec
mov
nop
sar
dec
xor
cmp
nop
sub
div
lea
push
adc
push
pop
dec
ss
rolb
enter
or
js
add
mov
and
inc
ret
es
mov
ss
xchg
loope
push
xor
pop
addb
push
pop
push
in
xchg
or
imul
mov
push
add
inc
jmp
pop
inc
loopne
adc
fbstp
push
sub
jae
jo
and
xchg
dec
cmpsl
std
adc
mov
inc
call
xor
xchg
adc
and
mov
clc
mov
sbb
cmp
push
lcall
xor
subl
mov
and
xor
add
jo
mov
decb
or
sub
std
add
jecxz
jo
fists
add
sbb
repz
add
push
or
add
push
add
or
add
add
pop
fstl
rcrb
cmp
popa
shl
aaa
jb
add
inc
lahf
push
dec
insb
push
lea
loopne
add
jno
mov
cmpsl
aam
sbb
nop
or
inc
mov
pop
inc
xchg
fmul
add
or
lcall
push
and
xchg
adc
sbb
dec
stos
xor
jnp
je
add
les
add
iret
xor
push
dec
or
pop
mov
mov
pushf
testb
popf
xchg
pop
mov
mov
cmp
mov
sub
sbbb
add
dec
xchg
or
pop
or
rcrb
jo
decl
pop
out
int3
adc
test
jmp
pop
fdivrs
add
mov
add
push
cmp
filds
cmp
mov
jo
cmp
sub
adc
push
and
adc
push
sub
ret
popf
paddd
inc
cwtl
jae
sahf
das
and
mov
inc
ficompl
dec
testl
enter
mov
and
lock
cmp
or
push
lods
lret
test
test
les
sub
lock
or
push
sbb
and
mov
jle
or
sbb
sbb
cmp
sub
dec
push
lods
pop
inc
popf
mov
inc
mov
stos
mov
loopne
movl
cmp
xor
pop
pop
test
cmp
pushf
adc
stos
push
mov
pop
out
mov
mov
sbb
xchg
mov
es
and
adc
push
push
popf
call
inc
push
mov
pop
add
shll
sub
jl
icebp
test
or
add
lret
or
push
or
dec
jp
cmp
inc
xchg
les
shlb
std
add
icebp
push
rcll
mov
adc
stos
stos
add
sbb
into
pop
sub
mov
mov
mov
inc
dec
jne
lea
cmp
or
stc
popa
loopne
test
add
push
call
mov
fdivrl
jp
sti
mov
ljmp
test
push
movb
frstor
lea
sub
in
ja
sub
aam
and
cld
xchg
or
pop
pop
rorb
inc
sub
outsb
cmp
cld
cmp
repnz
push
jge
out
mov
mov
push
mov
lock
inc
inc
cld
scas
sbb
and
jo
cmpsb
mov
punpcklbw
orb
mov
aas
movsl
jb
je
and
xchg
dec
sbb
aam
or
mov
jge
fsubp
mov
mov
mov
add
mov
push
roll
jl
in
jae
ljmp
or
into
ret
scas
dec
popa
pop
lock
push
ja
mov
jne
jo
jg
lahf
rol
push
or
ja
test
and
add
or
mov
xor
pushl
lret
clc
in
imul
jno
shlb
push
sub
in
pop
insb
push
lock
cld
pop
outsl
jmp
lods
mov
mov
xorl
movl
cld
cmp
shll
push
sbb
aam
cmp
xchg
inc
cmp
std
jne
das
sarl
add
jmp
sub
stos
add
inc
enter
icebp
add
incb
jno
ret
popf
js,pt
adc
ret
push
test
and
fldl
lret
or
push
mov
popl
das
mov
shlb
lock
out
into
std
fidivl
add
jmp
push
adc
shrb
cmp
insl
and
and
xor
stos
mov
push
inc
rolb
pop
or
sub
call
and
clc
or
in
lea
mov
loop
pop
andl
inc
jne
movsb
jle
mov
imul
add
mov
sahf
or
sub
jmp
mov
xchg
push
loopne
adcb
loop
or
lcall
or
jne
outsb
mov
inc
xchg
jge
add
jb
mov
dec
add
push
inc
jnp
or
out
adc
mov
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
cmp
push
cs
mov
es
sbb
enter
jle
xchg
inc
cld
push
out
filds
mov
inc
dec
jne
pusha
out
test
push
or
es
add
cs
push
jmp
cmp
mov
mov
inc
jbe
push
dec
loopne
add
xorb
inc
vpsrad
jns
pop
push
ss
or
loop
push
lods
ljmp
dec
inc
mov
jo
sahf
xchg
xchg
sarb
lods
mov
jo
pop
insl
lcall
dec
int
scas
cmp
add
push
push
fstl
cli
repnz
imul
dec
cmpsb
or
stc
jb
sub
mov
mov
push
adc
pop
test
adc
push
mov
inc
jmp
xor
cmp
dec
sbb
mov
sub
out
dec
cmc
inc
xor
add
push
ss
sbb
ss
mul
jmp
loopne
or
xchg
jno
test
ljmp
aaa
xchg
xchg
inc
xchg
fs
inc
fs
cmp
es
sbb
lret
loop
leave
cmpl
and
mov
movl
imul
outsl
cmp
es
rclb
fisubs
pop
sub
mov
pop
adc
mov
scas
nop
pop
ds
push
inc
mov
fstpl
data16
mov
inc
sbb
sub
xor
dec
pop
sbb
sbb
sub
roll
cwtl
sub
outsl
outsl
mov
cmova
jnp
aaa
out
jle
out
rorb
push
push
cmpl
adc
lds
add
pop
cmp
xor
add
xchg
push
inc
or
or
sbb
or
in
pop
test
outsb
sub
xchg
notb
enter
mov
adcb
mov
mov
xchg
aaa
cmpl
push
pop
popf
jnp
rol
adc
movsl
sub
push
push
shrl
ret
out
xor
shrl
xor
jo
and
xor
je
push
push
rorb
mov
inc
fisubrl
adc
ret
inc
imul
inc
in
clc
xchg
pop
jbe
sahf
jo
mov
stos
in
ret
add
pushf
xor
insb
loope
enter
repnz
xor
cltd
inc
add
sub
mov
stos
jmp
push
ficomps
xor
push
push
in
inc
pop
mov
ja
inc
push
mov
shl
push
sbb
push
cmp
shrb
les
daa
mov
mov
in
cmc
mov
xchg
ja
sub
push
roll
out
add
push
rolb
cmc
or
leave
cld
test
out
fidivrl
adc
pop
sbb
cwtl
sbb
loopne
xor
inc
inc
jo
sub
ja
sub
inc
aas
push
cs
ds
jmp
cwtl
pop
add
jge
xchg
insb
or
dec
push
xchg
mov
add
rcrb
and
and
sbb
cmp
xchg
insb
push
cld
push
jo
lret
and
inc
or
rolb
mov
push
les
movsb
xchg
inc
repnz
cmpsb
jns
pop
mov
jae
imul
arpl
flds
outsl
adc
lea
dec
mov
inc
sub
lods
inc
ret
dec
push
sub
xor
push
sub
xor
push
movsb
pushf
xchg
cmpsl
pop
daa
add
jecxz
dec
mov
lock
mov
xor
sbb
out
xor
rol
adc
dec
iret
push
mov
ss
shlb
xor
mov
jge
sub
data16
inc
and
pop
sbb
sbb
inc
push
in
cmp
pmulhuw
inc
dec
pop
cmp
xchg
and
xor
pop
sarb
rclb
push
mov
ret
push
dec
dec
jns
inc
nop
mov
jbe
gs
std
cmc
and
pop
cmp
je
jle
jnp
cli
test
jmp
mov
lods
ret
push
xorl
sub
inc
pop
pushf
rol
loopne
add
mov
outsl
mov
test
mov
cwtl
into
mov
cmpl
popf
mov
push
cli
lods
movsl
imul
mov
daa
test
pop
sub
push
int3
dec
ja
add
cmpsb
xchg
mov
add
mov
imul
sub
inc
gs
lret
pop
pushf
cwtl
mov
pushf
loopne
aaa
dec
mov
mov
fwait
pop
inc
push
xchg
in
sbb
xor
and
and
add
ja
pop
dec
loopne
jns
fisubs
ja
movsb
jp
inc
sub
pop
rorb
andl
jle
lea
xlat
sbb
mov
das
mov
or
sbb
or
lea
xchg
fcomps
xchg
xchg
fistps
clc
or
test
lahf
xchg
xchg
les
popl
mov
sarl
xchg
call
adc
sub
cmp
ljmp
inc
or
test
lahf
lea
mov
sub
sub
movsb
mov
add
out
jmp
adc
loopne
es
jecxz
rorb
fists
shlb
mov
std
and
add
insb
or
jl
add
jmp
mov
mov
add
jae
mov
sar
js
dec
and
mov
pop
mov
sub
push
test
push
or
add
call
fstl
stos
je
xchg
repz
or
push
push
dec
inc
cmp
or
pop
iret
imul
push
cwtl
lods
repnz
sub
sbb
push
rcrb
pop
push
popa
jl
nop
and
dec
push
jo
pop
test
pusha
sahf
ja
pop
mov
push
int3
push
aam
sbb
hlt
pop
pusha
outsl
xchg
or
add
dec
pusha
pop
sub
adc
data16
cmpsb
pop
sbb
dec
je
push
push
cs
push
cmp
arpl
int
loop
sar
inc
jmp
inc
notl
adc
js
or
add
fmull
or
and
popa
mov
mov
cwtl
or
mulb
sbb
dec
cmp
jge
inc
mov
push
mov
call
int3
cwtl
push
pop
popf
mov
pop
inc
loopne
and
jno
and
adc
ror
andb
add
add
and
cld
jnp
jl
jle
ret
idivl
aas
dec
dec
inc
or
sbbb
fdiv
mov
mov
daa
int3
xor
sbb
add
daa
and
inc
enter
sbb
or
je
pop
or
and
dec
adc
inc
mov
pop
inc
push
mov
loopne
mov
movl
jge
jmp
orl
inc
rclb
xor
movl
add
jmp
adc
and
lock
cmp
push
cmp
adc
push
push
sbb
adc
hlt
xor
lock
mov
and
movsl
pop
push
iret
jge
push
and
shrb
cmp
or
xor
call
cwtl
outsl
push
or
mov
xor
mov
not
jle
test
ja
pop
adc
je
xor
xchg
sub
xchg
push
iret
pop
iret
push
mov
mov
outsl
fmull
jecxz
inc
pusha
xor
and
jnp
sbb
and
sub
lock
mov
testl
loop
pop
xchg
ud2
setbe
hlt
xor
fistl
scas
or
inc
sbb
loope
or
sub
loopne
add
add
pop
inc
test
xchg
add
lea
inc
lret
rolb
mov
mov
cwtl
add
pop
push
pop
std
xchg
test
add
push
push
add
push
inc
es
rolb
or
cmpsl
daa
jmp
imulb
mov
sarl
dec
shrb
test
shr
in
add
shrb
mov
lock
inc
mov
xor
lret
or
test
pusha
dec
or
mov
outsl
or
andb
dec
and
mov
mov
push
cmpsb
aam
je
test
xchg
and
inc
mov
push
mov
mov
out
jbe
push
inc
and
and
shrb
popa
fstl
inc
testl
adc
or
push
in
stos
js
lock
mov
into
sbb
clc
dec
xchg
loopne,pt
arpl
jle
push
push
jne
xchg
or
and
rcll
add
push
add
push
cmp
sub
pop
push
cli
add
add
inc
inc
push
or
mov
and
and
loop
jecxz
roll
ret
and
dec
dec
add
push
push
or
push
or
mov
or
mov
jo
inc
gs
dec
mov
add
cld
mov
sbbb
orl
mov
pop
imul
aaa
sbb
mov
cmpl
pop
adcb
out
pop
sbb
std
insl
pop
ss
jne
repnz
jmp
xchg
jb
sub
xchg
pop
negl
cmp
xor
mov
sub
xor
imul
add
adc
lea
sti
int3
rorb
popf
in
mov
clc
aam
fadd
pusha
not
mov
jne
xor
dec
jecxz
pop
push
je
jne
pop
mov
mov
inc
mov
loope
mull
repnz
mov
mov
test
in
or
call
rolb
test
xchg
pop
pop
xchg
and
pop
dec
cld
jle
mov
lea
jle
ja
and
mov
loopne
aam
sarl
test
push
clc
add
mov
ss
loope
loopne
jb
lea
cli
pop
or
aam
mov
fsubs
lret
ret
cmp
or
push
adc
scas
mov
pop
or
add
sbb
sbb
test
sub
dec
and
cld
adc
pop
fadd
cmp
mov
loopne
sub
push
imul
sub
ja
lret
or
ja
movsl
mov
adc
lods
add
jb
xchg
or
movsl
hlt
hlt
mov
cmp
push
or
inc
jo
cmpl
adc
fwait
dec
test
loopne
adc
adc
sbb
mov
push
xchg
ss
push
jb
fimuls
jle
xor
mov
mov
xor
movsl
jg
jns
movl
mov
pop
outsl
cmc
jne
cmpsl
sbb
js
pop
xlat
adc
mov
inc
test
sbb
push
dec
lret
pop
jae
push
shrl
or
sbb
sbb
inc
je
pop
push
or
ds
mov
ret
add
hlt
dec
cmpb
fdivr
dec
sub
test
out
in
and
jae
xor
test
pop
arpl
movb
popf
xchg
pop
das
mov
mov
add
xchg
loope
icebp
dec
and
in
aaa
imul
dec
sti
andl
in
sub
cmp
test
and
add
xlat
imul
inc
pop
add
push
insl
cmp
xchg
xor
out
int3
negl
cmc
add
hlt
dec
lret
xor
push
aam
cmpsl
add
fdivs
ljmp
sti
push
jmp
mov
movb
xor
icebp
cwtl
imul
pushf
mov
ja
setp
hlt
mov
inc
divb
inc
mov
dec
mov
pop
xchg
xor
cmpsb
cmp
jecxz
adc
sbb
mov
or
cmp
cmp
jns
push
rcrl
out
pop
loopne
gs
jb
sub
shrb
gs
into
add
addr16
sbb
push
outsb
je
jns
or
test
insl
pusha
outsb
cli
inc
xchg
je
aas
add
xor
ret
lock
je
data16
mov
loopne
movsb
or
adc
bound
ss
jecxz
push
stos
add
shlb
push
add
ret
pop
lods
out
xchg
not
jne
mov
jne
mov
jmp
cmp
cmpsl
cmp
jle
insl
cmpl
cmp
pop
repnz
mov
inc
add
int
lret
lcall
mov
inc
xchg
xor
adc
dec
sbb
mov
rcll
hlt
dec
sub
sbbl
sti
inc
mov
or
and
xchg
mov
imul
adc
cwtl
inc
call
aas
nop
imul
ds
push
out
inc
adcl
enter
push
outsb
mov
data16
addr16
decb
mov
dec
xor
daa
add
adc
push
xor
sbb
push
loope
ds
sub
lret
mov
test
adc
inc
orb
fbstp
inc
push
fiaddl
stos
mov
mov
xchg
cltd
jmp
aaa
int3
je
cltd
movsb
fidivs
je
push
sbb
hlt
jae
inc
test
lret
fidivl
nop
pop
fimull
addr16
or
sbb
dec
jg
cmp
lret
pop
mov
or
jne
mov
testl
sbb
mov
inc
and
sbbl
cltd
push
lods
sub
jg
enter
xor
xchg
clc
ja
call
sahf
add
mov
dec
jmp
pop
xchg
sub
inc
adc
mov
aas
pop
clc
adc
je
into
cmp
mov
fmuls
and
xor
ss
aaa
dec
pop
cmovl
and
xchg
mov
and
xor
cmp
sahf
mov
adc
test
call
push
xor
sub
add
sub
fwait
sbb
push
sub
push
test
dec
and
mov
call
sub
sub
pop
sub
shl
push
jp
push
in
ja
leave
cmp
lea
ds
adc
dec
pop
imul
adc
push
cs
popa
sbbl
jne
push
pusha
push
loopne
nop
aaa
cmp
call
in
fistps
rcll
xchg
add
lret
mov
mov
pop
jg
or
dec
xlat
push
lea
xchg
sti
sub
pusha
rcll
pop
icebp
pop
or
sarl
je
rcr
jp
adc
adc
mov
daa
adc
mov
cs
mov
sub
movsb
loope
sahf
pusha
cmp
ds
xor
add
sub
lock
mov
adc
cmp
cmpsl
push
subb
sbb
jb
sub
repz
xchg
mov
push
xchg
shrb
inc
movb
movsb
adc
xor
pop
cmpb
mov
xor
mov
pop
rcrb
clc
mov
lea
xor
pushf
setl
test
repnz
or
imul
rolb
lock
lcall
mov
mov
ret
xor
test
push
push
rcll
cmpb
js
inc
jl
push
pop
imul
jne
push
aas
arpl
test
repz
test
fdivl
and
fmuls
in
push
arpl
push
fcompl
xor
add
pop
popa
cmp
ss
mov
outsb
push
xor
jne
add
cmp
mov
push
push
add
and
lock
sbb
push
adc
pop
lret
or
imul
add
dec
or
cmp
jns
mov
in
push
lea
sub
shl
adc
push
data16
ss
loope
mov
push
mov
adc
imul
add
jmp
movsb
mov
pop
push
fmulp
fdivl
dec
insb
push
cmp
adc
aaa
lods
adc
or
and
icebp
out
add
inc
sub
cld
shr
mov
imul
rorl
mov
test
dec
or
sbb
clc
dec
or
xor
sbb
mov
or
dec
ja
mov
mov
ljmp
jne
sar
dec
cmp
jbe
scas
mov
pop
push
dec
or
fisttps
jae
mov
shr
lea
not
and
decb
jne
stos
es
adc
ficomps
pushf
mov
add
sub
dec
pop
add
add
cltd
gs
pop
and
push
or
dec
add
data16
jmp
add
jecxz
mov
idivb
jne
and
sti
add
mov
xor
dec
pop
cmp
mov
mov
imul
call
and
adc
dec
shll
mov
aaa
pop
mov
shr
not
and
add
stos
inc
and
xor
dec
loopne
iret
xchg
out
loopne
pop
xor
int3
movsl
add
mov
outsl
lret
xchg
inc
cmp
jb
mov
fiadds
dec
sub
mov
int3
pusha
ficomps
ljmp
jo
popa
push
adc
mov
mov
inc
mov
adc
or
mov
push
pop
lret
call
testl
dec
adc
push
mov
sub
icebp
outsl
or
jno
xchg
rolb
push
pause
mov
push
and
call
and
mov
lsl
gs
mov
scas
jp
push
call
aas
gs
orl
in
popa
frstor
dec
inc
adc
inc
test
mov
enter
and
pushl
push
push
mov
inc
dec
inc
add
or
int
push
mov
sbb
and
and
sub
and
add
adc
xorl
insb
das
mov
inc
out
pop
adc
imul
xor
and
dec
cwtl
outsl
push
std
je
xor
sarl
add
lea
les
xchg
lock
fcompl
or
push
jae
adc
scas
and
movsl
mov
dec
xor
adc
adc
cmp
test
int
jmp
orl
sbb
push
push
subb
movb
or
push
mov
cltd
shlb
rolb
ljmp
rorb
clc
incb
pop
add
cmpsl
stos
in
dec
jne
or
pop
push
cltd
out
xchg
cld
mov
popa
imul
and
shl
cmp
inc
sub
shr
jg
filds
inc
orl
orl
sti
lcall
xor
lock
push
add
sub
sbb
je
cmp
pop
xor
add
mov
pusha
fcoml
dec
jb
adc
fs
inc
call
mov
inc
mov
pop
incl
loopne
inc
jne
or
lds
ljmp
repz
dec
or
adc
xor
xlat
sub
pop
shr
add
ror
jb
cld
loop
pop
sub
shrb
lock
pushf
jle
pop
dec
pop
jl
sbb
cmp
ljmp
push
mov
addb
jmp
pop
dec
int
push
mov
iret
dec
in
cmp
add
sti
pop
add
cmp
nop
rcl
fdivrl
or
push
jns
push
or
into
add
mov
sub
adc
pushf
sar
fiaddl
mov
cs
fstpl
lea
cmp
jg
shll
mov
pop
cmpsb
repnz
pop
push
pop
adc
add
lcall
adc
and
js
push
ja
and
sub
adc
inc
insb
xor
out
insb
and
inc
pop
stos
inc
and
clc
jl
loope
jmp
mov
lea
mov
fisubrl
inc
dec
insb
pop
xor
push
sar
pop
or
orl
xor
jl
push
fidivrl
xor
cmp
out
push
mov
fists
push
or
mov
insb
rcr
fbstp
loopne
fnstenv
dec
ficoms
add
mov
ja
data16
dec
lea
mov
and
xchg
mov
adc
lods
push
cmp
lods
decb
into
mov
sub
into
rdmsr
xchg
sbb
mov
jns
dec
inc
insl
call
sbb
mov
jp
insb
mov
add
loope
icebp
mov
push
dec
push
push
push
jge
sub
cs
out
adc
and
inc
in
or
ret
shrl
mov
nop
cmp
and
decb
xlat
xchg
xor
call
int3
mov
jne
mov
or
fnstenv
jp
or
jae
fcmove
jae
xor
aaa
arpl
std
add
mov
and
cmp
push
sub
pop
lcall
insl
pop
mov
in
sbb
in
cli
aas
mov
and
inc
mov
orl
jne
inc
inc
shlb
xorl
cmp
sub
xchg
xor
cmc
fisubrl
jmp
cld
mov
and
jne
mov
push
pop
aaa
cmp
push
outsb
leave
inc
test
inc
push
pushf
mov
sub
mov
fdivrl
lahf
push
loope
loopne
xchg
push
popf
lcall
sbb
adc
cmp
jp
pop
mov
jmp
pcmpeqw
in
lock
jmp
push
out
fnstcw
mov
out
xor
jne
dec
push
and
push
clc
into
xor
dec
cmp
mov
out
sub
inc
mov
or
cltd
mov
das
pop
xor
sub
rclb
cmp
add
inc
aas
jge
push
or
dec
cld
or
pop
adc
inc
or
or
mov
aas
dec
or
out
or
nop
sbb
or
adc
sbb
push
shrl
push
lea
pop
or
sbb
sbb
push
push
hlt
xlat
sarb
and
add
loopne
pop
leave
cmp
sbb
xchg
hlt
neg
cmp
loopne
sbb
cmp
out
pop
jb
or
xorl
jp
xor
mov
add
xor
and
or
pop
loopne
fs
cmp
xor
add
shlb
or
pop
pusha
popa
or
test
inc
enter
and
mov
inc
mov
add
stc
std
jb
shlb
dec
mov
add
or
je
jnp
jle
roll
inc
cmp
cmp
sub
add
mov
rorl
mov
jmp
out
pop
sbb
test
repnz
adc
ss
push
push
iret
or
push
sub
popf
test
xchg
adc
adc
inc
loope
les
push
jnp
push
fmulp
adc
fsubr
mov
pop
mov
push
adc
mov
jge
div
leave
xor
pop
jne
push
in
adc
insl
and
sbb
std
pop
adc
dec
cmp
sbb
mov
stos
dec
cmp
push
jnp
clc
insb
pop
out
shl
js
push
or
pop
shlb
sub
jne
andb
jnp
pop
jl
and
jno
xchg
sbb
and
jl
mov
insb
int3
push
ror
mov
sbb
adcb
rorb
gs
adc
movsb
and
std
hlt
adc
cltd
mov
shr
daa
pop
xor
rol
mov
mov
cmp
cmc
mov
push
jmp
movzwl
sub
in
int3
test
in
test
into
je
cmp
mov
decl
rorl
subb
xchg
imul
test
enter
jo
fcoms
imul
lcall
mov
xchg
lret
or
aam
movsb
xor
xchg
mov
jp
and
jo,pt
inc
movsl
add
adc
add
xchg
or
rcll
add
aaa
lret
sbb
sbb
xchg
arpl
sub
push
push
pop
add
ja
rorb
ss
leave
mov
jp
and
hlt
ficomps
push
jo
fbld
in
push
sbb
pushf
add
insb
jne
jp
mov
adc
and
sbb
cmpw
lret
enter
cmp
xor
mov
add
cmp
notb
or
ljmp
jmp
int3
add
push
pop
std
and
xor
ret
jne
inc
and
in
jb
jns,pn
sub
ja
and
add
sbb
sub
jnp
lock
aaa
jnp
adc
sbb
sub
mov
dec
xchg
test
fcoms
fidivrl
testb
sub
lret
and
push
jns
scas
dec
leave
add
loopne
repz
push
pusha
repz
inc
push
mov
push
in
fwait
incl
fimuls
cld
jp
stc
rorb
std
push
test
xor
repz
enter
shr
inc
enter
mov
sahf
pop
in
ja
push
hlt
xchg
repz
lods
test
shrb
xchg
js
orb
call
push
in
inc
scas
in
add
mov
scas
inc
xchg
les
shlb
loop
in
pop
enter
in
and
les
test
popa
xchg
ret
fwait
mov
inc
test
jae
cmp
mov
sysret
mov
adc
or
xor
nop
out
lahf
or
movsb
test
addl
sub
add
xchg
sub
inc
jne
cmp
pop
jl
pop
push
stc
lea
xchg
add
lock
lret
push
imul
mov
jge
push
xor
xchg
ret
mov
pop
jne
pop
sarb
pop
lock
xor
movsb
adc
lret
or
test
and
sbb
or
or
leave
push
jg
mov
lods
inc
add
faddl
or
inc
xchg
mov
inc
mov
and
cmpsl
mov
rorl
jmp
call
gs
jg
jecxz
in
ret
mov
cmp
jne
mov
sbb
cmp
and
mov
cmp
ja
sarb
adc
push
lds
xchg
mov
loop
rcl
add
xchg
call
add
mov
push
add
add
out
xor
dec
loopne
push
call
testb
mov
mov
sub
or
adc
push
or
test
and
jne
dec
add
mov
or
out
aaa
inc
cld
push
ds
inc
push
add
hlt
add
adc
rclb
dec
test
push
stos
add
incb
shl
lret
sub
push
or
shll
enter
xchg
cmpsb
or
sbb
cmp
sub
sahf
cmpsb
imul
cli
sti
cmpsl
test
lcall
cwtl
ret
sbb
test
push
or
dec
cld
lret
clc
cmp
cmpsb
inc
lret
je
lret
dec
pop
push
sbb
add
in
shl
sub
insl
rorl
mov
ljmp
and
inc
push
or
cltd
fdivrs
mov
pop
loopne
fldl
or
fldl
or
add
push
mov
mov
test
imul
add
push
leave
pop
jle
sub
cmp
rorl
std
mov
sbb
pop
pop
cmp
das
in
mov
xchg
dec
je
add
or
je
or
sti
fnstenv
lcall
push
mov
sbb
pop
ret
outsb
imul
aas
dec
sub
xchg
add
inc
icebp
mov
add
test
jno
mov
jnp
sub
add
pushf
cld
rolb
jae
hlt
lock
adc
pop
popa
add
orps
rcr
cmp
push
push
push
aas
movsb
push
shl
push
ja
pop
icebp
inc
aaa
jne
das
and
inc
lock
mov
add
mov
xchg
cmp
sahf
movsb
lods
mov
dec
lret
jns
out
xor
xlat
loopne
divl
add
andl
adc
sahf
fnstcw
cmp
inc
in
inc
dec
cmp
inc
or
insb
cltd
insb
add
push
mov
xorb
mov
pop
xchg
in
or
push
jle
or
ja
pusha
and
inc
divb
dec
in
or
lods
jp
push
push
xchg
adc
fcompl
add
ja
mov
or
popa
push
jmp
push
insl
mov
loopne
lret
push
fmull
inc
iret
mov
push
inc
jp
cmp
sbb
pop
popa
call
adcl
mov
xor
inc
xor
mov
xchg
std
pop
mov
pusha
xchg
sub
adc
adc
pop
cmpsb
mov
xor
dec
jp
push
aad
add
stos
bound
add
lea
mov
test
sbb
shlb
das
cmp
mov
lods
std
nop
stc
jecxz
arpl
testb
pop
cmpsl
pop
mov
mov
clc
mov
pop
add
incb
cmp
or
inc
and
jne
dec
sbb
jg
adc
pop
sar
lea
ret
and
fisubl
add
fabs
mov
mov
mov
loopne
mov
xor
shll
push
sub
push
or
cmp
mov
ss
ja
movsbl
xchg
xchg
and
ret
push
sbb
jle
lea
pop
mov
int3
shl
fs
xchg
daa
mov
inc
sbb
push
pop
or
notb
add
xorl
add
sbb
cmp
pop
push
fcompl
stc
or
cli
and
and
jb
xor
fsubrs
jb
mov
mov
fcmovnbe
mov
push
or
inc
repnz
xor
cmp
lahf
repz
insb
jne
inc
sub
pop
pop
scas
pop
rcl
pop
and
pop
inc
and
jne
and
add
divb
cmp
inc
xor
into
push
movsl
hlt
inc
das
push
cmp
lcall
lds
pushf
cmpsb
rclb
pop
lods
add
sub
xchg
mov
movsl
cmp
push
leave
addl
test
pop
lock
sub
mov
jg
mov
movsb
mov
lea
inc
push
push
rorl
daa
iret
call
adcb
popa
sub
and
imul
adc
inc
jl
inc
cmp
in
cld
pop
popf
in
mov
cmc
cmc
aad
mov
fisubrl
mov
dec
mov
xor
xor
xchg
mov
push
adc
inc
xorl
adc
push
push
imul
add
cli
fidivrl
jns
daa
mov
mov
add
dec
lds
xor
and
or
and
mov
pop
enter
mov
sub
or
or
mov
pop
or
lods
mull
mov
lds
dec
or
pop
insb
rcr
scas
pop
orl
ret
in
xor
xchg
xchg
dec
sti
jecxz
xor
dec
lock
or
sbb
cmpl
daa
sub
lods
iret
das
lock
fcom
push
jnp
std
adc
sub
jno
add
mov
movsl
iret
cli
and
rcl
pop
pop
sbb
int3
xchg
or
jno
jb
sbb
sahf
adc
addr16
pop
shr
std
call
std
aas
mov
rol
mov
std
lcall
fsubs
sbb
jge
mulb
aam
push
xor
mov
ffree
pop
test
std
lds
sub
testl
xchg
test
xchg
mov
roll
into
rorb
push
cmp
and
push
push
xchg
cmp
sbb
cld
pop
out
xor
mov
std
repz
stos
cwtl
out
imul
add
movb
loop
ljmp
icebp
ret
je
dec
xor
roll
jns
lret
xor
mov
inc
mov
mov
scas
dec
and
in
xor
cmp
enter
call
std
fsubs
arpl
cmp
mov
mov
loopne
addr16
std
inc
repz
scas
out
shlb
daa
cmp
mov
push
fdivrp
or
fstpl
ds
cs
stos
mov
sub
test
test
jmp
popa
dec
jmp
dec
pop
movsb
jnp
push
add
dec
gs
sar
lock
cltd
cmc
adc
xor
push
sub
pop
mov
sbb
jmp
mov
jge
mov
or
hlt
shlb
enter
mov
pop
dec
xchg
lret
test
les
and
xchg
cmp
std
mov
cmpl
push
xor
fbstp
bound
mov
push
movsb
adc
dec
add
push
hlt
cwtl
inc
push
inc
or
lret
jne
cmp
xchg
sbb
cmovge
or
fwait
mov
das
rcll
jl
sbb
test
xchg
add
out
cmp
sub
adc
into
xchg
xchg
bswap
cmp
and
sbb
inc
xchg
push
dec
cmpsl
repz
jns
inc
cwtl
data16
hlt
test
jns
mov
dec
adc
orb
bound
in
inc
dec
test
es
loopne
inc
les
adc
incb
adc
cmp
fucom
pop
loope
fs
lret
movsb
nop
xchg
adcl
nop
sbb
and
cmp
es
and
loopne
lret
xor
xor
adc
sub
cmp
or
repnz
mov
or
jo
mov
sub
je
pop
pop
or
lods
add
ljmp
cs
lock
or
mov
or
sbb
aaa
xchg
add
xor
mov
pop
test
jb
sbb
pushf
roll
mov
es
mov
pop
leave
and
pushf
shll
in
pushf
rcl
arpl
or
pushf
rcrl
int3
les
imulb
lret
or
mov
mov
test
sbbl
xchg
push
cmpsb
outsb
movsb
and
pushf
inc
leave
and
mov
lods
test
fwait
add
es
cmp
xchg
es
cmp
icebp
jbe
adcb
ss
pop
push
sub
mov
loope
mov
jne
cmp
fwait
mov
sbb
test
movsl
int
cltd
dec
cmpsl
add
mov
mov
lcall
pop
inc
lea
dec
and
and
adc
rorb
mov
pushf
sbb
icebp
inc
and
mov
dec
xchg
loopne
mov
aaa
fs
lods
push
or
in
movsb
imul
dec
aaa
into
adc
or
inc
pop
inc
lcall
movsb
bound
xchg
push
aas
dec
push
nop
or
test
adc
leave
test
jb
dec
mov
pop
pushf
pushf
nop
and
jb
nop
pushf
jb
leave
adc
lods
lods
test
xchg
mov
push
jg
push
outsl
push
adc
stc
dec
xchg
rorb
dec
sti
push
sub
inc
add
mov
cmpsl
stc
cmp
add
cltd
movsb
inc
lret
fwait
inc
rcrb
push
pop
rcl
rclb
xchg
or
add
push
sub
pop
mov
pop
add
dec
jne
or
rcll
mov
xor
rcrb
pushf
ja
test
movb
ds
dec
add
in
mov
scas
rolb
push
or
push
inc
add
jne
push
and
sarb
fsubrs
dec
pop
xor
inc
fsubl
nop
push
xchg
loopne
nop
loope
inc
add
into
xchg
cmpsb
testl
movsb
sbb
inc
mov
jg
push
mov
aad
push
add
cwtl
outsl
aas
mov
decl
je
mov
xor
bound
ret
xor
push
sbb
add
adc
sbb
or
jle
xchg
and
jle
popa
add
inc
mov
sti
stos
clc
jge
mov
sbb
je
jmp
bound
mov
jb
xor
mov
add
ret
pop
les
dec
dec
and
les
cld
lods
scas
dec
loop
or
outsb
and
sub
sub
stc
movl
sub
pushf
xor
clc
cmpsb
sahf
add
lock
push
gs
dec
xchg
test
inc
mov
mov
orb
push
sar
and
cltd
and
lahf
and
push
call
pop
adc
fistpll
outsl
sahf
xchg
sbb
add
je
hlt
daa
fsts
push
inc
sbb
jae
sar
cmpsb
testl
addr16
or
repz
rorb
test
dec
mov
mov
add
xor
movsl
mov
jae
adc
add
cs
insl
and
ja
rorb
mov
jne
xchg
sbb
repnz
and
or
les
aas
lret
inc
stc
adc
into
lret
cwtl
mov
xor
sbb
sbb
dec
int
in
push
and
adc
push
rol
push
push
push
mov
sar
sbb
mov
mov
mov
inc
and
mov
inc
jmp
mov
nop
dec
xor
add
pop
sbb
and
sbb
push
lock
add
push
pop
xor
inc
adc
jmp
lea
jge
inc
push
mov
push
in
shll
movb
lods
orl
sbb
sbb
or
sbb
inc
rorb
mov
sti
loopne
enter
inc
cmp
push
lret
loopne
or
popf
lods
daa
test
sbb
fcompl
and
call
mov
lea
and
add
mov
mov
mov
or
jae
js
mov
push
stc
insb
inc
jb
out
test
lea
out
les
inc
mov
push
andl
hlt
ljmp
jb
dec
xor
mov
lret
inc
cmp
roll
pop
out
xor
imul
or
jne
jnp
insb
popa
insl
jg
inc
mov
inc
movsb
sub
push
push
cli
sbb
sbb
jp
add
mov
xor
jb
inc
pop
adc
push
clc
sub
adc
or
lahf
loop
inc
sub
cwtl
rclb
mov
loopne
cs
sbb
sbb
and
sub
sbb
push
mov
xchg
sti
insl
leave
push
inc
imul
jbe
jge
push
inc
and
push
push
lahf
lret
push
pop
mov
jo
ret
sub
push
fcomi
or
push
shr
push
push
out
imul
ret
fstpl
inc
pop
fadd
int3
pop
mov
in
cmpsb
test
ss
lods
int3
and
into
rcrb
or
adc
adc
movsb
adc
xor
test
sub
roll
xchg
jge
imul
in
pop
and
andl
cmp
dec
jmp
jl
imul
cmp
jae
stos
inc
sbbl
pop
adcl
cmp
test
cmp
sahf
lret
xchg
cmp
ror
push
jmp
mov
pop
leave
push
sbb
or
les
int3
jae
les
adc
push
push
negl
js
mov
push
add
pop
or
xor
imul
pusha
ret
push
in
hlt
add
push
mov
sbbl
addb
sub
inc
add
push
inc
dec
es
call
sti
or
fs
ss
sti
sbb
je
push
or
push
push
es
add
test
mov
pusha
stos
loop
jmp
pop
cmpsl
pop
add
add
ss
xchg
and
es
je
inc
or
scas
mov
jmp
out
scas
mov
mov
mov
push
or
push
sarb
sbb
fcompl
mov
inc
inc
or
fdivrs
push
pop
sub
push
in
or
lds
dec
add
repz
fimuls
or
add
mov
mov
jne,pn
sbb
inc
mov
cs
sub
adc
fstpl
jge
mov
mov
mov
rorb
adc
pushf
dec
push
mov
mov
jnp
pop
mov
sbb
push
push
adc
sbb
xchg
das
adc
xchg
add
inc
and
xor
push
adc
cmp
pop
add
sbb
rcrb
sub
xor
add
adc
xor
pop
addl
les
je
sbbb
pop
ret
cmp
popa
ja
fs
push
sbb
pop
orb
scas
es
ret
je
adc
loop
pop
iret
fldpi
or
and
shl
push
adc
loop
outsb
xor
lret
incb
icebp
inc
loop
xor
test
xor
aas
inc
insb
and
and
inc
sub
sub
out
adc
lods
jne
cmp
js
insb
inc
lret
cmpsb
out
cmp
je
out
cmp
pop
jb
adc
xchg
mov
outsb
or
cld
pop
movsb
sbb
decl
sbb
ret
mov
cwtl
out
pushf
or
sbb
sbb
cmp
test
popa
dec
aad
jle
pop
pop
cmpb
aas
movsb
mov
sbb
mov
adc
xchg
sbb
cmp
and
mov
mov
cmp
mov
sbb
and
iret
and
addr16
pusha
cmp
dec
inc
jae
push
add
mov
cli
xor
ja
add
add
lcall
mov
push
mov
popf
mov
inc
int
inc
pusha
mov
pop
test
imul
cmp
addr16
mov
push
sub
mov
add
clc
cs
imul
popf
mov
lret
adcl
popa
and
mov
cmp
xchg
jno
mov
push
xor
test
xor
xlat
hlt
adc
add
mov
je
jne
adc
daa
ret
push
cs
cmp
dec
add
scas
in
push
imul
mov
rcll
mov
add
inc
or
in
fsubrs
movsb
sbb
cmpsb
cld
mov
inc
and
inc
push
lock
call
lock
jb
push
mov
mov
fs
gs
movb
mov
loop
xchg
mov
push
sbb
mov
add
or
xchg
add
lret
outsl
or
loop
ja
cmp
and
jl
ss
jmp
xor
mov
les
pop
inc
inc
adc
add
lods
enter
pop
je
pop
fdivrs
inc
es
cwtl
xor
or
and
nop
test
inc
or
bound
cmp
pop
cld
pop
loopne
bound
icebp
xchg
xchg
cmp
add
je
repnz
loop
and
pusha
or
push
test
push
ror
inc
add
xor
jae
fimuls
pop
add
ret
scas
adc
ds
pop
sub
jb
inc
cwtl
rorl
cmp
pop
push
push
ja
mov
pop
lods
lds
mov
xorl
subb
cmpb
cmpsb
cli
add
inc
stos
scas
aas
jae
call
sahf
inc
nop
stos
push
mov
shl
jp
ss
jnp
pop
subb
ds
jge
push
push
orl
or
sbb
push
mov
jo
jle
es
push
pop
shrl
jl
sbb
adc
inc
inc
dec
add
sub
and
sub
jne
scas
sub
sahf
cmp
dec
inc
inc
or
jne
repnz
push
add
push
sar
push
add
inc
arpl
mov
dec
or
cli
int
push
clc
adc
insb
aam
dec
cmp
inc
inc
lahf
dec
cld
pusha
ret
jmp
jnp
xchg
andb
sub
jb
iret
xor
cmp
pop
sti
or
cmp
sbb
out
int
repz
pop
mov
inc
rolb
scas
pop
fwait
xchg
pusha
fisttpl
xor
int
push
dec
mov
pushf
xchg
push
or
push
pop
push
dec
push
sbb
jl
mov
pop
lock
add
insl
mov
or
or
push
and
push
cmp
inc
mov
pop
mov
js
into
mov
sbbb
push
add
cmp
scas
or
mov
mov
pop
pop
lods
and
push
xchg
loopne
aas
xor
sbb
and
repnz
dec
andb
inc
xadd
daa
adc
adc
fildl
inc
sar
sarb
jg
popf
mov
lock
adc
sub
insl
clc
stc
add
xchg
xor
mov
push
add
fmuls
lods
inc
push
mov
sbb
call
add
out
add
insb
xchg
push
sahf
inc
add
push
aaa
xchg
or
lea
push
adc
leave
lcall
mov
loopne
xchg
fs
ds
ret
xor
push
xorb
popf
xchg
mov
adc
add
ret
cmpsb
push
shrb
leave
inc
or
pop
cmp
aas
push
aaa
stos
insb
pop
cli
xor
ds
mov
jne
shr
mov
call
arpl
push
je
and
mov
add
mov
jbe
scas
pop
notb
movsb
adc
sub
add
clc
sub
out
mov
xor
adc
test
not
mov
push
xlat
cs
gs
mov
lcall
rcrb
dec
jns
mov
sti
sti
add
jmp
test
adc
rcr
hlt
loopne
or
xor
not
push
sarl
gs
sub
sbb
and
mov
and
jle
ret
enter
pop
xchg
dec
add
ret
sub
inc
into
cmp
or
pop
add
out
sarb
jg
jg
adc
and
inc
push
aad
rorb
lea
xor
xchg
call
or
sbb
loopne
sub
add
push
cmp
roll
ret
cmp
je
sub
or
loope
jo
addb
push
push
cmpsb
jge
jecxz
push
mov
rep
ss
neg
lods
shlb
lock
xor
push
ljmp
sahf
or
aad
rorb
xor
sub
lock
dec
ds
fs
fwait
in
mov
loop
and
pusha
insl
or
add
aad
and
push
mov
test
mov
pusha
pop
js
cltd
jecxz
mov
in
stos
test
add
xorb
add
ret
cld
xchg
push
lahf
jnp
leave
add
push
push
jae
lock
dec
popf
xor
add
xor
add
mov
std
and
sbb
outsb
movl
inc
adc
insb
addr16
cs
jae
rclb
pop
je
xor
sbb
sahf
lret
adc
adc
fistl
adc
cmp
or
hlt
mov
adc
adc
fnclex
mov
cmp
or
pop
aam
outsl
push
mov
dec
adc
push
and
jne
lahf
out
cmpsl
push
push
pop
outsl
inc
or
jbe
test
jo
outsl
ja
sbb
push
jg
test
sub
hlt
dec
call
ret
mov
jl
lret
sub
jo
loope
mov
ret
lcall
loope
call
or
sub
std
mov
push
push
or
dec
sub
ja
jnp
test
sub
lock
sub
leave
call
in
lock
rep
add
xor
in
push
fdivl
adc
ss
and
mov
ror
or
push
ret
add
sbb
add
pop
mov
test
dec
adc
insb
arpl
arpl
divb
pop
sbb
sbb
rcr
leave
mov
xchg
test
icebp
cmp
lahf
mov
xlat
sub
and
push
sub
clc
push
outsb
lcall
fsub
push
sub
insl
xchg
add
pop
dec
subb
xor
jnp
fdivl
and
imul
and
int3
sub
loopne
fs
decl
mov
sarb
adc
jl
pop
xor
xor
push
push
inc
fsubr
mov
jg
dec
push
xor
adc
push
mov
inc
pop
mov
dec
mov
xor
mov
aas
add
jmp
mov
or
or
or
push
mov
lret
xchg
sarb
sbb
fxch
fnstcw
add
sub
sub
adc
fcmovb
push
movsb
push
and
aas
sbb
leave
mov
test
nop
int3
sub
xchg
and
shrb
push
or
data16
mov
jmp
adc
outsl
jo
mov
mov
jae
adc
sub
inc
add
or
mov
int
inc
movsl
test
pushf
fsubrs
test
mov
shll
cmp
popa
movsb
lcall
xchg
cmpsb
push
jecxz
add
sub
or
cmp
call
pop
imul
cmp
cmp
clc
dec
and
pushl
jl
cmp
jg
inc
jmp
hlt
adc
ljmp
imul
add
shrb
nop
outsb
jge
aas
sbb
inc
cmp
dec
enter
js
cs
and
add
adc
js
push
jle
inc
push
mov
nop
mov
test
test
sbb
cmp
cli
lds
push
ja
cld
and
in
mov
pop
ret
mov
mov
add
sahf
or
enter
sub
roll
in
mov
mov
sub
push
jb
adcb
push
jb
xor
or
add
or
cmp
sbb
rol
jns
sarb
roll
push
inc
sub
push
adc
xchg
push
or
pop
cwtl
aas
inc
addr16
push
sbb
ljmp
shll
add
pop
or
push
shlb
xchg
aad
jbe
or
test
or
ret
push
andl
movsl
and
adc
xchg
addl
cltd
jns
and
sbb
pop
dec
push
sahf
push
cmp
xor
lahf
out
jp
add
jg
insb
jae
push
xor
mov
insl
dec
loope
imul
frstor
add
pop
pop
inc
pop
in
push
add
mov
or
mov
jae
mov
xchg
sbb
pushl
enter
gs
rcrb
sbb
cli
add
loopne
or
mov
mov
xchg
pop
push
add
push
in
ret
mov
cmp
loopne
stc
xor
pop
dec
adc
and
and
pop
inc
sbb
rolb
push
movsb
mov
sbb
sbb
dec
jmp
dec
xchg
lock
cmp
lret
aas
and
rcl
mov
jg
push
cs
add
cmp
loope
xor
lret
inc
jle
ret
dec
iret
add
sbb
cld
sub
jl
mov
or
add
add
jp
dec
push
dec
or
jg
add
push
pop
aas
sub
jb
daa
inc
sbb
pushf
pop
fisubl
sbb
les
xchg
sub
add
bound
rorl
push
inc
cli
cltd
cltd
mov
test
pop
add
add
addr16
adc
jl
xchg
push
dec
mov
sub
jb
movsb
dec
or
or
fstpl
hlt
mov
jecxz
cmpsb
call
and
pusha
ja
push
test
cli
fadds
inc
sbb
int3
adc
jle
inc
sbb
or
jle
and
iret
xor
cld
cs
mov
aaa
mov
in
adc
aaa
and
push
or
jmp
clc
add
push
jl
mov
xor
repnz
loop
outsl
mov
inc
insb
mov
pop
sbb
lods
jae
jle
dec
jle
or
cmp
jae
add
push
add
pop
js
inc
js
cmp
pop
stos
xchg
inc
dec
shlb
or
mov
insb
inc
mov
loopne
addr16
js
mov
xor
pop
mov
mov
rcl
cmpl
cmc
inc
cmpl
inc
push
and
inc
das
pop
cmp
movsb
ljmp
ret
ds
cmc
into
mov
fs
push
cmpsl
rorb
std
pop
xor
cmp
and
rorl
out
or
dec
imul
mov
mov
fmuls
sub
icebp
fwait
adc
movb
sbb
lret
pop
repnz
loope
sbb
hlt
adc
mov
je
ror
inc
pop
jnp
test
pop
je
into
nop
cltd
aam
push
sub
cmpl
add
jl
arpl
pushf
cmp
or
je
xchg
mov
push
mov
sbb
xor
rcrl
jmp
outsl
sub
icebp
and
sub
pop
add
imul
dec
and
push
leave
enter
adc
cmpsb
or
repnz
xchg
sbb
sbb
adc
adc
add
lock
leave
shrb
push
std
inc
jne
lock
inc
jo
ja
fcoms
mov
and
jmp
xor
inc
xor
or
subl
pop
sbb
std
jo
add
jne
add
aaa
leave
push
icebp
enter
adc
mov
pop
fsubl
or
mov
inc
sub
mov
leave
mov
adc
test
out
cmp
aas
mov
cli
filds
aas
sbb
dec
pop
je
pop
cmc
and
lods
dec
xchg
mov
rorb
ret
add
loopne
dec
mov
add
sbb
jb
xor
lahf
inc
cmp
jae
push
cmp
jl
pop
and
cmp
mov
adcb
add
ret
orb
fucomp
mov
inc
jne
clc
push
mov
sbb
ret
dec
addr16
push
ljmp
popa
orl
inc
add
popa
mov
or
jle
dec
dec
dec
mov
enter
insb
aad
mov
add
push
or
mov
xor
into
adc
xchg
mov
and
lods
adcb
sbb
mov
jl
xchg
mov
or
inc
add
xlat
cmc
jle
sbb
jne
jmp
fistpl
fadd
in
rcll
cmp
adc
mov
mov
mov
jo
dec
scas
pop
jle
xchg
inc
push
popa
xor
test
or
inc
add
addl
push
sbb
pop
or
sbb
add
nop
rol
add
xchg
fnstsw
jecxz
inc
push
lock
test
rolb
add
pusha
jg
popa
loope
sarb
hlt
outsb
add
or
sub
dec
in
adc
in
pusha
jbe
adc
inc
loopne
fldt
dec
in
adc
dec
jg
adc
icebp
fs
jmp
sub
cmp
pop
hlt
idivl
or
loopne
push
or
or
rolb
popf
nop
movsl
or
pop
fdivs
jne
inc
pop
pop
and
in
std
jb
mov
ja
pop
cwtl
lock
test
out
xor
cmp
notl
movsl
xlat
dec
ljmp
xchg
add
call
or
rcrb
jne
lock
out
lcall
lret
jmp
jp
mov
push
mov
inc
and
ljmp
mov
dec
dec
lret
mov
into
dec
jg
ss
and
nop
adc
xlat
je
sbb
aas
loopne
cli
repnz
shll
testb
icebp
dec
mov
data16
fists
movsb
add
adcl
jo
jge
push
jmp
mov
mov
inc
movb
test
jb
je
ret
jns
or
mov
jb
cmp
jbe
mov
push
or
and
push
adc
in
push
dec
mov
cmp
push
shrb
lret
push
call
and
ret
mov
cmp
mov
pop
add
push
push
sbb
push
bound
insl
insl
cmpl
icebp
or
fstp
pop
es
jmp
test
cmpsl
push
sub
pop
or
mov
xor
or
jnp
dec
adc
push
lock
popf
loope
cwtl
fs
shr
inc
push
pop
mov
push
inc
shr
rcr
shr
rcr
or
fnsave
out
fincstp
repz
dec
adc
inc
mul
pop
jb
cmp
idiv
decb
or
cmp
or
xor
and
iret
push
xor
or
fcmove
fidivrl
lret
iret
test
mov
adc
ret
push
mov
xor
mov
inc
in
jecxz
or
leave
jmp
jne
mov
lret
mov
fiaddl
lock
stos
inc
xor
rcrl
dec
jmp
xor
dec
test
push
cmova
dec
sbb
dec
dec
add
sahf
orb
xor
sbb
jbe
push
push
es
mov
add
push
and
mov
dec
pushf
mov
sub
test
ret
addr16
xor
and
cmp
adc
adc
rorb
adc
pushf
sbb
popa
loop
sub
sbb
push
pusha
lea
inc
nopl
inc
fsts
test
inc
mov
fdivrl
add
and
repnz
loop
subb
mov
inc
pop
push
push
jno
mov
out
adc
push
imul
push
xor
jg
les
fists
or
mov
clc
aam
or
je
xchg
cli
adc
in
das
mov
jbe
pop
mov
or
movsb
mov
mov
dec
push
xchg
insb
inc
cmc
mov
mov
mov
popl
cmp
mov
imul
jb
mov
push
xor
and
js
sbb
adc
insb
cmp
addr16
and
mov
hlt
push
inc
cmp
sub
add
sub
loope
and
loop
mov
clc
rcr
add
call
pop
orl
shrl
sub
sahf
mov
out
in
jmp
pop
adc
pop
faddl
pop
imul
adc
sub
sub
mov
inc
add
add
outsl
mov
or
mov
or
adc
jb
mov
sub
jb
sub
xor
cmpsb
movsb
jo
cmp
inc
in
jbe
and
inc
cmovs
in
push
push
pop
add
cmp
push
cmp
js
mov
or
sbb
xor
and
mov
xchg
cwtl
pushf
es
dec
xor
mov
sub
mov
je
add
mov
xchg
outsl
mov
and
imul
or
call
adc
in
adc
adc
dec
xor
hlt
sbb
clc
xor
int
and
and
dec
and
add
and
pop
pop
mov
mov
int3
mov
jg
push
leave
enter
sbb
stos
add
dec
jne
outsb
adc
add
mov
lret
sbb
aad
insb
loopne
fldcw
and
mov
lret
cli
mov
in
add
xor
add
dec
imul
push
push
add
fcompl
adc
inc
dec
int3
pop
sub
aam
repnz
xor
mov
mov
js
add
shl
or
xor
inc
push
add
fwait
cmp
inc
jecxz
fdivs
dec
and
pop
cmp
repnz
lea
je
sub
imul
push
xor
ret
shrl
and
fmuls
cmp
fmuls
leave
jp
in
push
popf
xchg
mov
sub
pushf
loopne
rcrl
inc
cwtl
daa
lock
cmp
push
rcrb
fcompl
rcr
aam
dec
pop
je
push
pushf
das
inc
sub
fnsave
sub
and
xlat
test
cltd
and
mov
scas
addb
mov
stos
mov
lret
mov
xor
adc
add
add
cmp
adc
xchg
and
int3
add
in
jle
mov
or
pushf
and
loopne
and
sarl
inc
adc
sbb
stos
adc
adc
or
jl
adc
adc
dec
lcall
mov
call
push
adc
jmp
push
mov
xor
or
cmp
xor
and
add
push
or
sarb
ljmp
outsb
push
cmc
in
sbbb
push
pop
cmovl
cmp
or
popf
test
pushl
push
mov
push
or
jo
das
jmp
enter
xchg
jl
sbb
inc
xor
mov
dec
xor
loope
addl
pop
mov
mulb
jno
notb
xor
dec
mov
and
jmp
fwait
mov
cmpsb
lcall
dec
mov
int
mov
ja
les
xchg
pop
in
mov
xor
push
cmp
adc
out
push
in
imul
push
jecxz
mov
shlb
jnp
push
push
sbb
std
push
lea
in
cmp
push
fisttps
dec
outsb
pop
and
fcmovnbe
sti
mov
or
mov
mov
mov
mov
and
fdivs
aad
insb
and
adcl
mov
push
adc
lcall
pop
inc
sbb
jmp
adc
test
sahf
push
addr16
xor
mov
jns
push
out
dec
pusha
dec
sub
pop
es
js
dec
inc
popf
pop
addl
pop
mov
jp
inc
mov
icebp
and
addr16
or
jmp
cmp
in
lods
mov
fisttps
sub
adc
push
hlt
mov
clc
add
subb
adc
addb
cmp
ja
sub
add
cmp
fsubs
mov
lret
xor
mov
out
add
cmp
adc
sbb
call
lea
push
rcrl
inc
mov
pushf
add
xor
cmp
fsubrs
pop
test
or
sub
pop
outsl
dec
sub
cmp
mov
mov
and
cmpsb
int
mov
insl
mov
test
subb
rolb
jno
add
cli
jecxz
mov
sarl
sbb
mov
pop
adc
ss
and
cmp
inc
int
shr
mov
inc
int
mov
sbb
dec
push
mov
out
test
push
jae
adc
dec
mov
lcall
push
dec
jg
dec
fisttps
cmp
in
mov
les
mov
inc
mov
sbb
xor
cmp
dec
add
xchg
xchg
fisttpl
adc
das
inc
outsb
lret
out
lock
cmp
xchg
mov
xor
movsl
aad
sub
fdivrp
jmp
cmp
cmp
mov
adc
cli
or
aas
movb
inc
mov
adc
pop
mov
adc
jb
mov
fsubrs
sub
and
sbb
adc
inc
add
mov
xchg
xchg
imul
add
lret
movsl
dec
add
nop
add
dec
icebp
int3
inc
cmp
mov
push
orl
pop
mov
shll
movsl
mov
and
adcl
movsb
jb
dec
bound
pop
add
inc
es
mov
aad
xchg
dec
dec
stc
pop
xchg
shr
movsb
cmp
add
enter
push
xchg
sub
adc
cmp
add
test
mov
hlt
push
jmp
and
out
sub
cmp
std
jno
adcb
jl
fisttpll
lret
test
add
push
jo
lret
jmp
or
bts
and
pop
mov
pushf
aas
lea
sbb
sbb
xor
cmpsb
cmp
inc
ja
loopne
mov
fdivrs
jne
ljmp
xchg
inc
jne
pop
push
fsts
xor
jnp
adc
filds
adc
cmp
sbb
movsb
cmc
ret
or
jae
jo
mov
jl
push
add
dec
cwtl
push
dec
leave
pop
mov
flds
cmp
aaa
push
icebp
movsb
je
xor
sahf
or
scas
add
sub
pop
js
cmpsl
and
pop
ljmp
add
pop
les
push
lcall
dec
or
xchg
fisubrs
adc
add
jno
add
xor
mov
outsb
dec
or
and
or
lock
push
sub
sbb
mov
xor
inc
add
inc
and
std
ficoms
xor
adc
pop
and
mov
mov
outsb
iret
xor
push
and
mov
and
cmp
scas
bound
scas
or
shll
stc
mov
mov
aas
out
push
pop
inc
xor
ret
inc
pop
or
into
push
or
xor
xchg
hlt
insb
js
std
into
and
adc
inc
jg
adc
cmpb
out
xchg
pushl
pop
mov
lock
sbb
cmp
into
sub
pop
or
pop
mov
orl
sbb
adcl
push
jl
aas
or
mov
and
sbb
gs
lock
sbb
dec
divw
rclb
xchg
pusha
sti
mov
jge
addr16
push
cwtl
adc
sbb
mov
fsubp
push
jne
jmp
flds
mov
lds
adcb
push
pop
lods
pop
pcmpgtw
int3
pop
pop
mov
hlt
and
jg
cmp
add
adc
ljmp
ljmp
inc
loopne
mov
lcall
mov
das
sub
jle
push
js
fidivl
fiadds
scas
dec
cmp
ret
ljmp
outsb
lahf
and
enter
jl
addr16
xor
inc
test
add
js
pop
sbb
mov
add
push
popa
add
icebp
xchg
xchg
jmp
inc
push
movsb
sbbb
cmp
mov
cs
xor
cmp
and
dec
add
mov
inc
test
dec
loope
xor
xchg
xchg
dec
jo
dec
lcall
lret
push
hlt
popa
dec
xchg
jecxz
add
cmp
add
mov
sub
jl
cli
xorb
push
cmpsb
push
or
pop
pop
cmc
cmp
ret
jb
cmp
inc
sbbb
push
leave
orb
lret
test
pop
loopne
rcrl
sbbb
cmp
aas
rol
push
addr16
sbb
ficomps
or
dec
pop
faddl
lret
cmp
rclb
pushf
add
insl
inc
sub
stc
sub
push
lock
lcall
daa
lock
mov
leave
gs
cs
push
dec
cmp
jge
mov
fcoml
push
nop
or
dec
cmp
js
adc
sbb
pop
sub
cmp
jno
mov
push
lret
fadds
dec
push
notb
flds
jbe
jbe
mov
test
sub
add
pop
nop
mov
imul
das
and
loope
leave
inc
add
pop
cmc
rorl
jl
hlt
sbb
or
or
adc
loopne
cmp
or
gs
adc
cmc
xor
inc
outsl
jae
inc
and
xor
popf
jne
or
movsl
sbb
je
hlt
add
jmp
add
add
dec
out
adc
adc
cmpsb
icebp
xchg
push
cmp
add
inc
fistps
and
pop
push
dec
or
ror
je
adc
push
rorb
and
xchg
std
jmp
fwait
jne
xchg
loopne
adc
or
ret
sbb
mov
mov
mov
xor
jg
popf
pushf
pop
sub
je
push
popf
ds
cmp
xchg
scas
mov
push
data16
pop
idiv
add
push
test
shlb
in
lods
adc
inc
jo
lretw
divb
inc
adc
or
iret
inc
jmp
push
or
and
xchg
or
pusha
jge
inc
mov
add
and
test
xor
rolb
and
lret
mov
adc
in
shl
not
xor
loope
xor
and
leave
and
shr
xchg
fcompl
in
shr
and
jno
and
and
and
lock
test
adc
or
add
shlb
push
mov
add
je
sbb
js
je
or
or
sub
inc
jmp
mov
fucomp
outsl
incb
jmp
sbb
lock
and
mov
les
and
aaa
jecxz
in
data16
jge
add
or
shll
sub
ljmp
fdivl
or
and
jge
mov
std
or
pusha
pusha
and
push
pop
adc
mov
pusha
loope
pop
sub
xchg
sbbb
and
adc
pop
imul
fucomp
aam
je
sbb
das
sbb
addr16
lods
test
xchg
jns
dec
in
or
add
add
test
fisttps
scas
fs
push
xor
cmp
movb
or
sub
sarb
sti
xor
xchg
aam
pop
testl
sbb
test
adc
dec
pop
sbb
jmp
push
and
inc
add
outsl
or
int
add
inc
flds
flds
mov
sbb
fisttpll
jecxz
sub
pop
jne
add
mov
pusha
out
cmpsb
ret
mov
or
test
insl
pop
sub
rol
push
fsubrp
mov
sbb
sbb
sti
lret
hlt
cs
or
cmp
aaa
ret
sbb
out
rcr
sbb
mov
roll
jl
add
sub
mov
outsb
pop
sub
jmp
sub
push
lcall
lcall
inc
test
int3
es
adc
div
add
repz
dec
jo
dec
xchg
insb
xor
jbe
rolb
sbb
mov
cli
mov
or
add
repz
adc
mov
inc
adc
add
dec
div
add
push
xchg
cmp
add
push
adc
xor
push
test
adc
lahf
enter
in
sbb
jp
dec
in
push
push
inc
cmp
out
pop
vpavgb
push
pop
xchg
in
add
test
and
mov
and
mov
out
js
orb
dec
add
cmp
jg
xchg
xchg
fwait
and
sbb
pop
lock
das
adc
add
mov
movsb
int
test
push
pop
movzbl
incl
pop
sub
mov
dec
faddl
popa
je
movsb
sbb
add
xchg
or
adc
inc
jnp
mov
sbb
hlt
adc
loopne
push
push
or
arpl
cmp
push
jle
mov
es
add
stos
pop
callw
pop
push
add
lods
fsubrp
fwait
jno
add
shr
dec
inc
je
mulb
inc
or
fs
xor
ficoms
loopne
daa
inc
pusha
jmp
insb
mov
pop
dec
imul
scas
adc
sarb
xchg
push
inc
ljmp
adc
cld
mov
jb
add
cmp
repnz
inc
sbb
or
jno
pop
jbe
sub
and
es
popf
cltd
mov
cmpsb
popa
jmp
sarl
mov
inc
adc
jns
add
in
rorb
dec
xor
sbb
jecxz
int3
movsb
sbb
or
inc
jecxz
loope
data16
mov
add
loope
add
sahf
push
movsb
icebp
stos
xchg
je
lock
or
in
ret
gs
gs
mov
xchg
mov
mov
ljmp
adc
cmp
ret
fadds
into
fsubrs
dec
adc
mov
hlt
sub
push
in
sbb
push
jl
push
xchg
lcall
pmulhw
or
dec
adc
sbb
shll
pusha
dec
mov
push
or
lods
inc
add
or
push
out
mov
add
and
adc
inc
push
xlat
cmpl
cmpsl
pop
jnp
jl
sbb
sub
shr
mov
incl
sub
dec
push
mov
push
fisttpll
andl
sbb
xor
fnclex
and
int3
or
mov
add
sbb
or
push
add
pop
mov
inc
adc
fldt
test
adc
fldl
fwait
sbb
les
adc
fld1
fdivp
jb
imul
xor
mov
fcomps
add
inc
je
sbb
add
ldmxcsr
mov
or
pop
test
and
pop
mov
clc
inc
outsl
push
repz
out
add
push
mov
lods
and
add
jbe
inc
inc
sbb
jmp
sub
popa
ret
int
fidivrs
iret
je
shlb
test
mov
mov
adc
pop
insl
mov
and
sub
and
adc
pop
pop
aaa
dec
das
ja
mov
jnp
nop
iret
sbb
add
pop
sbb
das
mov
add
adc
or
sbb
or
mov
test
js
test
mov
ret
inc
inc
addr16
cmp
psubq
xchg
shl
nop/reserved
out
aaa
inc
sbb
push
sbb
out
sub
pop
adc
enter
and
add
loope
or
inc
cmp
lods
inc
add
jne
inc
cs
xor
add
mov
dec
decl
rorb
cmpl
int
push
jle
inc
test
mov
dec
adc
loope
sub
adc
loopne
nop
jp
dec
or
imul
add
loopne
add
shrb
aas
daa
adc
cmp
push
mov
loope
sbb
add
scas
cwtl
pop
test
jne
fcomps
pop
push
add
cmc
pop
or
mov
stos
repnz
pop
pop
sti
ficoml
sbb
int3
jge
movsl
add
jle
add
cli
sbb
mov
cltd
and
add
xchg
pop
push
inc
mov
add
add
pop
lock
inc
shl
jb
fsubs
test
jmp
aam
loop
rolb
adcl
pop
outsb
mov
dec
cltd
insb
pop
cmpl
and
into
loopne
push
dec
imul
lea
xor
adc
or
jb
adc
clc
sbb
jnp
std
adc
jb
incb
jae
in
sbb
push
mov
je
pop
pop
mov
push
or
push
xchg
sbb
push
and
loopne
xorl
add
in
fsubl
xor
or
dec
stos
les
ds
repz
xor
aam
xor
xchg
push
or
mov
movsl
call
add
andl
je
out
roll
and
push
cld
not
rcrb
cmp
jge
mov
and
push
ds
push
or
fwait
fwait
enter
shl
mov
test
mov
jl
sbb
test
inc
shl
mov
sub
rcrb
adc
xchg
aam
mov
out
push
lds
pop
in
mov
or
hlt
test
gs
adc
or
push
lea
mov
out
and
or
jbe
mov
data16
outsb
push
mov
lcall
adc
jl
iret
dec
jns
sahf
inc
inc
sub
mov
push
ret
jecxz
add
inc
mov
jae
cmp
mov
jo
addl
mov
add
sbb
jl
pop
sbb
js
andl
xchg
push
cmpsb
into
out
outsl
xchg
pop
loop
lea
and
push
xchg
jae
sub
data16
ret
jge
xor
add
es
xchg
movsl
xchg
jle
shl
nop
or
sbb
add
or
xor
jae
aaa
add
and
jne
subb
pop
xchg
pushf
cli
pushf
inc
scas
mov
add
addl
and
aaa
inc
pop
adc
add
add
inc
push
jle
cli
fwait
cmp
fs
clc
or
addl
xchg
nop
add
add
or
mov
xchg
lds
cmc
mov
inc
mov
add
into
mov
push
lcall
movsb
mov
cmpsb
mov
sbb
add
xchg
cmc
int
add
lods
mov
or
aad
dec
or
cmp
loop
jne
inc
jmp
mov
sub
pop
shrb
or
xchg
add
test
dec
push
stos
pop
mov
sub
cmp
ja
adc
fcoml
jmp
fs
call
mov
into
add
fdivr
add
dec
flds
mov
add
adc
mov
lahf
std
add
dec
sbb
mov
jmp
or
sub
mov
or
push
adc
push
add
and
mov
mov
cmp
jle
cmp
push
xor
jg
int3
push
jmp
dec
push
xchg
xor
sar
push
jbe
lds
mov
cmp
fs
push
add
dec
push
outsb
sbb
ret
xchg
inc
mov
sbb
mov
pop
cmp
in
pop
testl
es
sti
lods
xchg
js
jae
imul
sbb
nop
or
jge
jmp
and
imul
outsb
mov
dec
loopne
mov
outsb
out
pop
sahf
sbb
push
sub
sahf
add
shlb
in
orl
andl
test
ret
sub
ds
sub
cmp
mov
xchg
cmp
jmp
je
inc
scas
call
pushl
mov
jge
gs
mov
fsin
pop
mov
leave
pop
cmp
adc
add
inc
testl
mov
jmp
fisubs
movsb
pop
repnz
mov
add
jle
jmp
cld
fdivrs
push
and
sub
pop
in
cmp
mov
std
add
jecxz
add
pushf
jmp
push
bound
xchg
movsl
cwtl
mov
icebp
add
xlat
shlb
aas
push
mov
dec
imul
pop
hlt
in
jne
inc
jmp
push
jbe
pushf
xor
lcall
jge
neg
add
mov
int
imul
pop
jge
les
mov
pusha
pushf
add
push
enter
in
into
outsb
jle
lock
xor
jne
add
lods
inc
cld
add
mov
sarl
add
dec
sub
and
cmp
mov
test
mov
jo
adc
mov
pop
push
sbbb
dec
or
mov
jecxz
add
mov
decb
mov
ret
and
rcrl
mov
adc
nop
sarb
dec
mov
mov
std
mov
sbb
ja
ja
mov
aad
lods
push
pop
mov
pop
es
sbb
daa
fiadds
inc
testl
add
les
test
jne
ss
into
jne
inc
or
cmp
mov
or
cmp
jne
hlt
int3
add
jne
and
ss
mov
cvtps2pi
test
rcrl
push
stos
stos
add
les
inc
mov
cmpsb
xor
push
les
scas
sbb
cld
jns
je
test
dec
lock
inc
loope
dec
ja
shr
aaa
mov
js
subl
lcall
data16
mov
stc
jg
cmp
lock
aaa
add
js
dec
sbb
adc
aam
ja
add
add
or
shr
lock
lods
adc
rcll
mov
bound
or
adc
and
clc
jge
mov
les
add
negb
je
jg
rclb
rcr
insl
fadd
loopne
shr
or
inc
dec
lods
jge
shl
call
and
jo
jne
insb
mov
push
das
int3
mov
mov
rolb
and
or
sub
enter
cmpsb
insl
xchg
cmp
add
ficompl
pop
and
cmp
sti
pop
lods
es
orl
jmp
call
mov
mov
sbb
jb
inc
push
fdivl
adc
sahf
nop
dec
or
out
orb
push
sbb
jmp
test
or
sub
add
lret
into
mov
lods
scas
pop
lcall
jae
jno
fcomp
xchg
mov
adc
rolb
add
es
sub
jnp
into
xchg
add
negb
mov
adc
les
bound
mov
add
rclb
mov
jge
add
push
daa
or
sahf
out
pop
lahf
xlat
jmp
or
xor
mov
lods
mov
add
push
rorb
hlt
je
lcall
xchg
test
pop
jne
xchg
mov
ret
inc
scas
add
push
mov
cmp
mov
test
pop
cmp
sub
or
pop
sbb
xchg
js
pop
sti
adc
inc
cs
or
pushl
stc
gs
or
out
mov
dec
cmpb
out
decl
je
mov
cmp
pop
jne
dec
mov
inc
inc
mov
push
lock
fldz
call
sbbb
jp
cmp
add
cmc
pop
pop
sub
jae
sbb
clc
sbb
mov
into
pop
or
shlb
or
ret
pop
popf
xor
mov
jge
cmpsb
faddl
pop
sub
sub
mull
mov
xlat
jmp
add
das
pop
lahf
testb
popa
call
fimull
gs
xchg
mov
push
mov
mov
jmp
fdivs
or
add
sub
inc
shr
das
mov
test
setg
sub
in
clc
add
mov
and
inc
gs
inc
test
sub
movb
movsl
hlt
add
lret
push
inc
add
push
fisubl
xorb
mov
es
sbb
loop
lock
push
add
lret
jmp
sub
add
mov
xchg
add
lea
add
test
mov
movsb
push
inc
push
inc
mov
push
jns
les
sub
les
negb
cld
xor
mov
or
sub
movsb
fiadds
add
add
push
sub
fidivs
dec
push
xor
inc
adc
mov
scas
adc
mov
mov
das
xorl
imul
xchg
rcl
aad
xor
adc
sbb
xchg
out
add
and
fadd
shl
inc
shlb
xchg
clc
dec
add
loope
adc
jge
mov
rcll
adc
in
cmp
xor
mov
add
xchg
pop
addb
sbb
mov
sub
pushf
inc
mov
mov
movsl
sbb
add
mov
sub
xchg
shrl
add
or
and
jecxz
imul
pop
xchg
mov
jmp
xchg
popa
decb
push
cmp
test
push
xchg
mov
adc
or
push
add
adc
and
push
and
dec
push
test
jmp
add
and
sar
lea
sub
add
xor
add
mov
inc
roll
push
ret
or
int
ret
pop
push
xor
adc
mov
sbb
add
jl
into
mov
push
pop
push
dec
inc
or
pop
xor
leave
and
add
cmpsb
movb
testl
gs
je
inc
fcmovb
mov
pop
jbe
sbb
inc
neg
sbb
jecxz
mov
loop
jg
ret
daa
xor
or
jne
pop
cmp
or
add
add
mov
or
xor
mov
aam
dec
loop
inc
adc
xor
and
or
insl
les
pusha
xor
sub
fdivrs
mov
push
sub
adc
inc
call
push
movswl
sar
shrl
loop
pop
sbb
outsw
cmp
adc
push
mov
outsl
cmpl
ret
mov
add
dec
shrd
int3
and
adc
jle
cmp
out
pop
pushf
ss
jl
cmpsl
outsb
mov
xor
incl
insl
ss
stc
inc
add
dec
jmp
test
cltd
pop
xchg
clc
sub
rolb
or
in
add
mov
push
or
pop
cmp
inc
adc
sub
adc
xor
jo
inc
sti
repnz
out
and
loopne
mov
push
pop
sbb
js
jg
mov
push
mov
inc
jmp
cmp
fisubrl
clc
lock
mov
lock
sti
cmc
xor
sbb
or
jl
lods
add
jbe
pop
dec
sbb
add
mov
lret
cmc
jne
jg
lods
jb
fs
pop
jnp
dec
dec
inc
dec
pop
or
jae
and
lcall
add
daa
subl
adc
add
cmpsb
stc
mov
jno
in
or
es
xorb
lea
or
or
jbe
fwait
sub
mov
scas
pop
mov
loop
call
push
push
or
mov
movsl
mov
pop
and
sub
add
rcrb
jmp
lods
add
inc
sub
xchg
mov
sarb
xchg
cmp
jge
mov
jne
jl
xor
popaw
push
or
add
mov
rolb
stos
rorb
ficompl
add
xchg
adcb
sbb
iret
cmp
pop
mov
and
push
je
adc
or
shl
jne
arpl
int
xchg
xor
lret
jbe
adc
xor
inc
test
lea
sbb
or
dec
fwait
sbb
enter
push
adc
insl
push
jmp
insl
cmp
cld
cld
jl
or
or
lock
sbb
loop
mov
pop
je
jge
std
add
pop
or
pop
jne
nop
mov
popf
mov
in
inc
popa
je
fsubrs
ss
je
dec
or
pop
leave
syscall
call
pop
or
call
or
mov
dec
stos
inc
inc
lods
push
repz
inc
mov
das
dec
aam
sbb
fldl
fdivl
fmull
insl
push
mov
in
pop
clc
fstps
or
add
and
jecxz
sbbb
xchg
shrl
dec
inc
ret
das
rolb
sahf
push
insb
pop
arpl
loopne
mov
xor
dec
push
pop
je
pop
cmpsl
push
add
ja
aad
sub
clc
jmp
arpl
mov
cmpb
jne
jp
or
sub
add
imul
sarl
xor
add
hlt
fwait
push
inc
dec
das
stos
adcb
pop
insl
cmp
adc
cmp
pop
je
xchg
je
loope
inc
jbe
cmp
push
dec
leave
cld
popa
mov
sbb
test
xlat
push
int3
rclb
inc
aaa
jmp
add
mov
aaa
sub
ljmp
adc
bnd
push
cmp
sub
jbe
sub
movsl
aaa
sub
mov
sub
xor
pop
inc
mov
adc
push
int
sub
dec
inc
xor
sbb
cmpl
pop
int3
and
fimuls
push
or
push
pop
inc
pop
jo
dec
push
mov
les
adc
push
rcl
cmp
push
jl
push
dec
mov
andb
cmp
inc
out
test
lret
pop
adc
dec
cmp
adc
je
mov
push
fdivs
jge
pusha
cmp
adc
mov
fidivrl
cmp
add
sbb
push
push
cmpsb
je
adc
sub
mov
mov
cmp
mov
mov
icebp
dec
and
pop
pop
mov
gs
add
xor
lock
and
sbb
lcall
or
adc
hlt
jmp
or
jmp
testb
je
push
ljmp
adc
addl
and
negl
lret
aad
add
and
stos
lea
cmp
sbb
mov
and
or
fdivrs
jno
add
add
mull
inc
add
es
lret
ss
fistpl
sbb
mov
adc
inc
adcl
popf
mov
sbb
enter
or
orl
or
jbe
xchg
push
stos
fdivrs
mov
mov
dec
push
add
adc
filds
mov
sub
push
inc
jecxz
mov
xor
add
in
addr16
cmc
addr16
mov
dec
dec
sub
add
or
inc
or
push
cld
mov
out
addb
orl
add
xor
jecxz
shll
ret
or
sbb
cmp
and
dec
and
sbb
aaa
mov
cmp
push
lret
loopne
sbb
ret
fiaddl
das
add
adc
sub
fiadds
arpl
mov
pushl
cmp
les
inc
jmp
mov
nop
xchg
add
mov
loope
ret
xor
stc
inc
inc
test
shlb
sub
aam
pop
mov
push
pop
xchg
mov
lahf
rorb
outsb
pop
push
addl
adc
pop
mov
add
decb
inc
mov
testl
loope
jmp
adc
rcrl
adcb
fiadds
inc
in
adc
repz
push
mov
addl
or
jge
jo
fwait
pop
imul
into
roll
je
pop
mov
inc
sbb
xor
movsb
cmp
dec
xchg
sbb
adc
daa
bound
cld
adc
and
xor
mov
ljmp
pop
icebp
add
adc
or
nop
or
fimuls
nop
adc
sbb
mov
sub
jo
nop
sub
xlat
cs
sbb
xor
push
or
xor
sbb
push
ljmp
sbb
sbbl
lret
ss
leave
js
loope
les
shll
loope
mov
jecxz
add
sub
jmp
mov
pop
mov
and
repz
adc
cs
dec
cmc
outsl
and
jge
adc
enter
jo
xchg
xor
push
pop
push
xchg
lock
icebp
xor
test
in
jo
popf
or
xchg
mov
adc
lret
pop
add
adc
mov
shr
add
or
xchg
fildll
fcmovb
jmp
shr
mov
loopne
or
mov
add
add
or
bound
scas
push
andl
or
add
shll
inc
or
outsb
daa
sbbl
outsb
adc
and
inc
shrb
or
dec
ds
add
enter
lea
mov
shr
cmp
mov
pop
inc
mov
adc
push
add
cs
jp
adc
pop
add
mov
xor
mov
push
iret
adc
arpl
jbe
out
clc
pop
jo
mov
dec
lret
daa
jle
in
mov
fsubrs
es
ficoms
add
adc
iret
shl
orl
push
mov
mov
mov
aad
test
add
decl
in
mov
cli
stos
imulb
or
sysret
xchg
test
test
adc
scas
subb
lret
je
dec
call
test
sbb
loop
xlat
cmp
test
sub
movsb
jecxz
push
cmp
push
adc
icebp
cli
filds
shlb
push
push
lods
pop
insb
lock
negb
add
xchg
adc
push
pop
enter
sub
jne
add
call
pusha
push
ljmp
and
dec
cmc
fwait
xchg
mov
cmc
inc
ljmp
shrb
sbb
and
inc
pushf
fstl
add
inc
inc
add
push
add
fld
ds
jle
mov
gs
cmp
nop
mov
mov
xor
dec
cmp
lock
jl
cmpb
jl
xor
cmpb
stos
xor
idiv
fdivl
push
sub
mov
xchg
push
or
xor
fsts
add
scas
cwtl
stos
push
adc
call
push
push
mov
push
push
fsubs
sbb
pop
popf
dec
mov
fnstcw
mov
jne
aam
pop
or
cmp
sub
inc
mov
adc
dec
enter
add
shr
dec
dec
add
jnp
mov
and
enter
add
inc
inc
out
or
test
jne
mov
flds
and
shll
add
je
mov
dec
jo
or
mov
xchg
xchg
sldt
push
adc
sahf
and
mov
fildl
xor
cmp
outsb
rorb
push
outsb
push
sbb
aam
xchg
cltd
lret
rclb
inc
push
sub
or
pop
int3
add
stos
rclb
fsubr
imul
jnp
jg
inc
push
neg
neg
sbb
sub
mov
sbb
fmul
sbb
sbb
aad
sbb
pop
fwait
xor
push
push
inc
and
fldenv
icebp
sbb
and
sbb
adc
sbb
cltd
lods
add
dec
jns
call
dec
jne
pop
pop
pop
mov
cmp
jae
or
jae
inc
pop
push
icebp
lods
rcl
ljmp
shr
mov
cbtw
mov
icebp
mov
jmp
mov
in
lock
je
pop
xchg
js
push
mov
or
add
test
addr16
mov
mov
mov
add
les
jge
push
xchg
adc
ss
shlb
push
add
gs
int
sbb
into
jbe
jns
aas
bound
adc
mov
ret
sbb
outsb
les
adc
and
iret
daa
push
or
adc
xchg
sub
jo
fwait
xchg
xor
adc
mov
or
sbb
sbb
mov
nop
dec
cmp
gs
dec
add
inc
inc
or
cmc
cs
fisubs
mov
test
dec
pushl
dec
daa
mov
and
and
mov
clc
add
and
jne
cmp
dec
sbb
lock
mov
leave
je
xor
pop
adc
mov
mov
mov
scas
es
mov
je
jmp
and
and
push
cmp
ja
hlt
iret
sti
add
out
adc
cmp
jne
inc
mov
xor
adc
mov
call
rcrl
adc
mov
sahf
fcmove
push
add
xchg
sbb
push
outsb
dec
inc
fbld
inc
jmp
inc
ljmp
les
mov
ret
jmp
imul
je
test
mov
fildll
push
aaa
enter
and
ss
shll
aam
adc
or
sbb
enter
or
lods
movsl
dec
shlb
push
sub
adc
cltd
or
fnstenv
in
xor
imul
mov
ljmp
sub
add
cmpsb
inc
sub
ljmp
sbb
cmp
push
xchg
pop
call
test
xchg
adc
xchg
sub
xchg
xchg
mov
and
in
mov
inc
or
sti
push
enter
add
cwtl
xor
xor
adcb
adc
adcb
sbb
nop
lret
imul
mov
push
shl
jns
out
rcl
aad
jns
xlat
fcomp
fstpt
jl
adc
shlb
aas
add
movb
jmp
or
and
into
data16
push
shll
push
dec
and
add
in
outsl
xchg
or
adc
push
clc
xor
or
out
adc
push
call
jle
mov
push
je
test
and
push
icebp
scas
sti
sbb
es
push
xor
jnp
sbb
push
push
push
add
popa
add
adcl
jmp
push
pop
push
lods
pop
add
pop
pusha
cld
mov
imul
or
sbb
dec
lea
sar
inc
or
mov
fadd
sbb
sbb
sbb
mov
out
loop
xorl
test
lock
out
push
cmp
sub
aaa
and
mov
adc
sti
add
add
cmc
stos
pushf
push
jp
mov
hlt
or
push
les
xor
out
push
or
fadds
hlt
adc
push
pop
ljmp
or
mov
and
lea
pop
sbb
int
adc
jae
dec
leave
js
xchg
js
mov
xchg
pop
mov
inc
divl
repnz
and
loopne
dec
mov
mov
inc
inc
or
dec
inc
popa
adc
rcl
add
sbb
and
mov
add
add
mov
and
sub
mov
ds
dec
xchg
mov
add
or
hlt
push
enter
cmp
cmp
inc
insb
lret
push
push
inc
data16
add
cwtl
mov
jge
jl
insl
test
and
rorb
inc
fmull
jle
jle
test
out
xor
rolb
shlb
inc
orl
pop
dec
jl
rorb
gs
push
lret
mov
inc
call
clc
clc
push
call
lods
ss
shrl
insl
add
out
mov
ret
adc
or
dec
push
dec
iret
and
add
lock
cmpsb
jb
repnz
sahf
lret
cli
cli
inc
cli
mul
add
repnz
xor
sbb
ljmp
sub
push
jnp
fcmovne
pop
pusha
sbb
adc
jns
lret
ret
and
aam
mov
or
in
shll
mov
xor
js
scas
fnstenv
xchg
mov
jp
idivb
sahf
out
inc
mov
test
xchg
mov
xor
or
inc
shll
clc
out
adc
xchg
mulb
test
inc
jb
lret
aaa
mov
add
inc
inc
adc
sub
sub
shlb
fdivrs
aam
fs
ss
inc
test
dec
ss
test
sbb
cmp
mov
pop
adc
dec
xor
call
or
xor
cld
inc
sub
lea
fcmovu
mov
push
lcall
lods
rolb
mov
mov
cltd
add
mov
clc
sbb
roll
sbb
imulb
iret
enter
test
stc
xchg
lret
jge
or
add
jge
es
sbb
sub
movsb
adc
cmp
jne
repnz
and
push
nop
push
movsb
in
orb
xchg
add
enter
jb
adc
jbe
stos
or
cwtl
sub
insb
sbb
movb
or
inc
inc
mov
push
add
push
nop
push
cmp
sbb
cmp
cmpsb
adc
call
sub
adc
sub
or
call
ljmp
inc
test
adc
fsubr
jle
jg
xor
fiadds
inc
imul
loop
call
mov
icebp
sub
fmuls
mov
and
add
and
and
mov
cmp
fnstenv
pop
cmp
out
loop
jae
sbb
and
aad
stos
cltd
xchg
mov
add
or
mov
add
mov
or
faddp
movsl
mov
into
or
rcrb
mov
pop
lcall
roll
inc
dec
enter
sti
scas
mov
cmp
push
shlb
add
pop
loopne
adcb
jne
xchg
mov
add
add
push
lahf
test
or
mov
inc
test
push
add
pop
in
dec
stos
hlt
jg
dec
mov
dec
cmp
jge
sub
cmpb
or
popf
xchg
pop
lock
dec
cmp
add
jb
mov
add
add
fadds
push
push
add
inc
pop
jp
jne
dec
mov
inc
push
or
jb
int
pushf
adc
imul
or
xchg
adc
mov
sahf
inc
jbe
dec
notb
xor
inc
or
cmpsb
rorb
add
add
add
push
cmpsb
scas
and
ret
into
adc
jmp
lret
roll
mov
movsl
popf
add
xor
cmp
or
out
or
jmp
sahf
mov
nop
push
or
add
aaa
insb
jl
or
cwtl
addr16
adc
int3
jae
and
mov
add
push
ret
pop
xchg
mov
sub
jae
push
xor
ret
mov
mov
inc
and
cmp
xor
into
add
jnp
clc
scas
into
mov
rcrl
loop
lock
xor
ret
jne
or
mov
mov
sahf
xor
shll
pop
jae
dec
movsl
test
add
add
add
sub
mov
lahf
add
or
mov
push
je
pop
pop
out
sbb
je
or
dec
pop
pop
ljmp
ja
sbb
pop
and
and
in
jo
and
test
lret
cmpxchg
data16
aam
pop
adc
push
sub
out
xchg
insl
cld
mov
cld
addb
sbb
mov
stos
jg
inc
jo
add
xchg
ret
dec
add
out
or
pop
inc
into
in
stmxcsr
add
inc
or
pop
test
inc
fcmove
or
add
or
jae
data16
adc
xchg
stc
mov
pusha
mov
cmp
out
and
sbb
inc
jg
into
aad
jb
into
into
mov
imul
pop
sub
push
pop
sarl
nop
pop
cwtl
pop
mov
nop
int3
or
shlb
les
rcl
pop
adc
lods
and
out
les
mov
clc
pop
lds
lcall
out
push
lahf
pop
test
xchg
addr16
add
add
inc
mov
addb
test
and
lcall
inc
dec
xchg
sub
cmp
loopne
sbb
sbb
loope
jb
lret
ret
push
stos
push
xor
xchg
decb
scas
sub
mov
add
inc
push
xchg
ret
cmp
mov
pop
fdiv
add
pop
lret
mov
mov
lods
push
cmp
adc
and
cmp
jno
sub
fwait
pop
movsb
cmovo
fisubrs
sahf
adc
sbb
lock
jle
and
daa
or
rorb
adc
jge
or
xor
inc
jl
or
lea
stc
dec
jecxz
xor
icebp
dec
inc
and
movsb
jno
sarl
jge
dec
sbb
xor
and
cmp
iret
fs
scas
les
sbb
dec
shlb
popa
xor
fmull
out
mov
add
dec
ds
je
lea
fdivl
pop
or
outsb
cmp
jbe
inc
inc
or
mov
fsubrp
jmp
pop
sbb
adc
negb
out
fdivrs
jo
jbe
adc
jmp
popf
or
in
clc
pop
inc
orl
test
cmp
add
rcll
test
xor
mov
ret
mov
pop
xchg
ret
popa
jnp
shlb
sub
aad
cmpsl
popf
inc
jge
mov
test
pop
sub
inc
and
pusha
scas
iret
mov
in
push
pusha
add
nop
jnp
inc
lcall
push
pushl
cmp
pop
test
push
xor
sbb
out
je
and
pop
addr16
popf
xchg
je
lret
push
loopne
pop
xchg
insb
cmp
pop
out
mov
sbb
push
mov
es
adc
sub
dec
test
je
mov
adc
push
hlt
xlat
xchg
push
pop
fmuls
imul
dec
pop
xchg
clc
cmp
sbbb
or
sub
pusha
push
jp
lret
push
imul
add
push
adc
test
xor
mov
push
shll
in
xor
xorb
or
std
adc
adc
and
repz
stos
jo
cs
or
jae
add
mov
cmp
jmp
push
push
xlat
movsl
inc
cltd
adc
fimull
inc
and
mov
fsts
add
sar
sub
fiaddl
sub
mov
and
dec
inc
push
test
pop
or
stos
movsl
inc
bound
push
inc
or
loopne
aas
lods
movsb
jo
pop
inc
adc
insb
insl
xchg
aaa
stc
ret
xor
mov
fisubrl
push
add
faddl
outsb
jb
aaa
xchg
push
dec
in
and
push
and
popa
ret
xchg
loop
pop
inc
inc
mov
outsb
mov
test
xchg
clc
mov
mov
add
or
mov
popf
mov
enter
cmp
xchg
je
shr
and
sub
pushf
test
mov
test
out
jle
fimuls
or
call
shl
or
mov
dec
cld
add
ss
rorb
cs
lea
ss
int3
xchg
js
mov
lret
shlb
dec
mov
pop
nop
jmp
inc
xchg
and
out
stos
loopne
jmp
nop
adc
jae
jmp
inc
add
ss
idivb
pop
cmp
push
js
push
xor
mov
rclb
jo
insb
mov
fwait
ljmp
outsb
mov
adc
pop
push
das
xchg
and
or
add
sub
add
loop
hlt
push
push
es
mov
rcll
ret
xor
stos
push
and
push
adc
sti
lock
cmpsb
inc
hlt
xor
sub
add
scas
subl
loopne
adc
push
mov
mov
adc
or
testb
add
xor
push
push
mov
nop
addr16
push
pop
pop
cs
xchg
nop
or
stos
add
sub
popf
ss
xor
scas
add
insl
or
xchg
mov
outsl
inc
sahf
add
fsubl
adc
mov
test
adc
scas
mov
mov
sub
sar
jle
data16
dec
shlb
add
aad
cmp
or
adc
adc
and
push
xchg
lds
ret
mov
and
push
push
mov
dec
ret
sbb
jmp
inc
xchg
pop
sub
mov
cvttsd2si
test
aaa
xchg
add
cmpsb
aam
and
pop
je
pop
popa
sbb
rcr
add
and
xorl
cmp
jmp
fstps
xchg
xor
inc
push
shrb
cltd
insl
mov
fcomp
addr16
scas
adc
test
cmpsb
pop
mov
pop
xchg
push
or
lds
dec
pop
in
arpl
lea
out
adc
les
imul
stc
loope
jl
mov
das
push
push
aad
jae
ljmp
out
sbb
ret
addr16
dec
enter
lock
cmp
gs
arpl
loopne
mov
subb
outsl
jg
push
in
aad
and
pop
outsl
push
mov
xor
push
inc
pop
xor
xchg
cmpsb
testb
ja
je
out
dec
add
out
inc
pushf
mov
sub
shlb
or
enter
call
in
test
cld
xchg
bound
inc
lock
pop
and
ss
xor
nop
in
fdivs
adc
add
mov
jbe
sbb
in
cmpsb
push
or
pop
cmc
inc
cmp
or
ret
or
in
maxps
add
mov
lahf
add
add
and
ret
inc
jne
aad
adcb
pop
mov
test
adc
sbb
jne
cmp
lret
insl
xchg
lret
cmpsb
dec
inc
inc
adc
clc
dec
pop
sub
sbb
gs
clc
mov
loopne
bound
inc
clc
pop
and
mov
mov
fsubrl
cmpsl
fcomp
aam
fcompl
or
popa
mov
mov
and
or
fwait
dec
pusha
sbb
sbb
xchg
mov
or
sub
pop
enter
cmpl
test
call
rcl
xchg
hlt
ds
movsb
gs
dec
mov
insl
cmp
in
xchg
in
xchg
ret
xor
or
mov
movups
fdivs
fadds
or
mov
cmpsb
in
dec
shlb
fdivrl
leave
insl
sbb
in
stos
push
adc
scas
xchg
in
push
aad
pop
hlt
add
push
andl
cmp
hlt
jne
ja
cmpsl
scas
outsl
push
cmpsb
arpl
cld
cmp
sub
mov
mov
push
mov
adc
scas
stos
push
push
fsubrs
xchg
arpl
insl
push
add
push
std
jmp
dec
cmp
xor
lock
sbb
dec
push
call
mov
dec
icebp
xor
adc
and
int3
fld
cltd
aam
enter
mov
shr
mov
xchg
or
pusha
xor
inc
out
shrb
cmp
sbb
leave
mov
add
adc
xchg
dec
adc
and
dec
xor
xor
cmp
dec
xor
and
dec
outsb
and
add
sub
lahf
movsb
je
sbb
mov
mov
in
pusha
add
sbbl
in
sbb
loopne
lret
or
dec
xor
hlt
mov
inc
jae
inc
cld
clc
mov
lock
mov
lock
mov
mov
addr16
and
add
cld
dec
movsb
jecxz
pop
test
mov
xchg
sub
movsl
int3
mov
xchg
xor
movl
insl
jb
push
push
bound
xor
sbb
inc
pushf
call
xor
rcrb
jno
in
mov
xchg
inc
sbb
adc
mov
sbb
or
addb
xor
rorl
imul
lock
dec
push
test
jl
jb
bound
imul
test
dec
pusha
rorb
das
sbbb
cltd
outsl
call
and
aad
in
jo
sbbb
mov
cltd
pop
imul
inc
pop
orb
cmp
mov
adc
adc
in
xor
nop
call
and
add
insb
addr16
insl
pop
adc
rcll
subb
cmp
pop
lods
insl
add
cs
in
cmp
dec
rcr
call
jns
mov
add
mov
movsb
pusha
pop
fdivrs
push
or
fs
or
sub
add
mov
insl
mov
leave
call
leave
adc
mov
outsl
mov
in
cmpsb
or
jno
xchg
push
pop
repz
movsb
outsl
mov
dec
cmp
xchg
data16
outsl
in
or
out
inc
push
and
dec
sbb
add
adc
pop
xchg
cli
popf
pop
fcoms
jo
dec
or
outsl
fcom
mov
repnz
mov
out
add
mov
out
cmp
adc
lcall
sbb
add
or
out
adc
push
adc
jno
jno
mov
mov
mov
iret
and
fcmovu
adc
jae
jnp
add
jb
lock
mov
call
shrd
mov
daa
daa
enter
sbb
repz
dec
inc
pop
push
movsb
adc
mov
sbb
cltd
scas
ret
sbb
xchg
lock
dec
add
rcll
mov
jae
push
adc
stos
push
dec
adc
das
xchg
jmp
sbb
dec
cmp
lock
sbb
push
or
mov
sbb
adc
cmpsb
ja
jne
or
push
mov
sbb
add
andl
or
mov
mov
unpcklps
mov
pop
cmp
sti
imull
sbb
cmp
push
mov
and
jbe
inc
gs
es
mov
mov
outsl
jb
xchg
pop
cmp
fstl
sti
ja
or
enter
sub
dec
inc
mov
add
test
inc
inc
sub
xchg
shll
push
movsb
dec
mov
outsl
mov
and
pop
in
pusha
sbbb
data16
lahf
add
mov
push
pop
inc
pusha
mov
add
push
jns
fsts
fists
mov
mov
dec
lcall
dec
fwait
ss
mov
pop
pop
cltd
pusha
inc
dec
fwait
in
add
js
mov
jl
adcb
inc
jns
push
adc
pop
test
jbe
fstl
cltd
add
scas
adc
dec
push
fdivrl
lea
enter
mov
inc
fdivs
xchg
push
adc
repz
in
lock
add
dec
jne
jo
mov
or
int3
test
outsl
sarl
lods
mov
dec
loop
lock
ja
push
dec
ret
dec
test
repnz
mov
push
xchg
push
test
push
sbb
lcall
sub
lock
sub
or
sbb
in
and
ds
xchg
gs
cld
mov
inc
imul
insl
or
enter
jmp
sbb
lcall
and
shlb
xchg
jnp
jge
sub
nop
sahf
sbb
mov
add
or
jb
adc
or
jb
and
and
cwtl
test
jb
and
pop
inc
sub
daa
mov
adc
aaa
push
loop
mov
clc
jle
mov
sub
mov
jbe
mov
push
pop
dec
adc
push
xor
int
shlb
mov
gs
loopnew
jo
and
aam
adcb
dec
cs
movsl
call
stos
sbb
loop
movsl
dec
rcrl
fsubl
lcall
imul
subl
nop
ja
inc
es
pop
andl
cwtl
add
enter
xchg
lods
insl
xchg
pop
mov
decb
popf
xchg
es
push
cmpsb
or
leave
pop
mov
pop
or
pop
dec
lock
and
inc
sarl
sbbb
cltd
je
inc
ficoml
add
inc
in
sub
invd
iret
fsubl
add
and
aam
adc
ret
mov
inc
push
les
xchg
iret
ret
xor
addl
std
int3
jae
outsl
enter
sti
movsl
or
xchg
in
lods
mov
xor
jmp
add
adc
mov
shrb
dec
jo
xchg
fildl
rorl
enter
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
cwtl
mov
pop
insb
nop
dec
outsl
movsb
cmpsl
push
roll
addb
adcb
addr16
into
pop
leave
or
xchg
mov
xchg
add
ret
aam
sbb
sub
fwait
pusha
outsl
js
and
adc
je
push
mov
sub
test
movsb
xchg
nop
mov
inc
push
int3
pop
pushf
pop
lds
push
movsb
cmp
sbb
push
mov
sbbl
dec
mov
jb
pop
mov
lock
or
jmp
push
xor
scas
inc
sub
adc
or
or
pop
mov
fcmovnu
mov
rol
or
inc
pop
push
loopne
push
call
mov
jb
push
sub
sub
push
jg
xchg
push
movsb
aas
sub
dec
hlt
mov
mov
jne
pushf
pop
dec
mov
test
fmull
mov
pop
aad
add
adc
inc
or
les
push
ret
push
repz
mov
movsl
sbb
or
repz
sub
ja
sbb
inc
pop
call
jbe
idivl
sbb
iret
in
xchg
inc
movsb
adc
in
and
mov
sbb
inc
test
stc
les
in
xor
inc
mov
pop
orl
jmp
fldl
inc
xchg
js
lea
add
mov
adc
lea
fisttpll
push
rol
mov
mov
arpl
negl
mov
nop
ss
jnp
mov
sbbb
mov
aas
pmulhw
cmp
mov
lds
aad
push
pushf
rcr
mov
mov
push
scas
sub
and
dec
fsubl
jns
inc
fdivs
lds
push
lods
xchg
sbb
stos
push
clc
shll
fadd
jg
xor
add
repz
fwait
out
xlat
and
mov
inc
or
setbe
mov
addl
push
orl
in
and
push
je
inc
xchg
ss
int3
test
in
test
sbbb
add
xor
nop
loop
das
push
and
mov
dec
pop
adc
iret
int3
cltd
enter
es
je
sarl
imul
adc
xchg
or
xor
test
sub
ds
stos
push
aas
fmuls
shrb
mov
push
xor
inc
icebp
in
xchg
inc
push
roll
movsb
pop
push
adc
inc
ss
addl
adc
gs
adc
jo
enter
gs
imul
push
aas
in
lahf
les
dec
outsl
push
mov
mov
movsb
fistps
iret
mov
out
fistps
adc
sti
dec
inc
sbb
jae
stos
push
mov
mov
mov
movsl
add
add
sar
icebp
adc
jb
xchg
popf
out
mov
jg
push
pop
and
mov
vandnps
sbb
add
push
sub
push
or
add
iret
in
inc
andb
cmp
fadds
pop
jmp
pop
rcrb
xor
mov
pusha
mov
inc
adc
lcall
fwait
movsb
adc
xchg
sub
and
mov
js
cltd
add
and
fwait
loope
mov
pop
mov
out
cmp
xchg
mov
adc
jo
out
fs
fisubrl
push
add
pusha
out
out
xchg
adcb
in
pop
dec
cmp
or
outsl
les
insb
and
pop
push
xor
push
rorb
nop
bound
loopne
ret
js
js
loop
pop
les
leave
mov
or
das
cs
xor
aam
xchg
inc
or
lea
xor
in
cmpsl
outsl
les
push
sbb
sbb
sub
dec
in
call
sbb
xor
lock
push
daa
je
popf
loope
sbb
fiaddl
gs
aam
push
mov
add
mov
or
jmp
mov
dec
inc
sbb
pusha
inc
xor
pop
insw
inc
nop
mov
and
push
push
scas
mov
mov
jecxz
psubq
mov
adc
jg
mov
mov
pop
das
movsb
jno
leave
lahf
call
enter
les
lret
mov
mov
ror
ja
dec
adc
test
rcrb
pop
xchg
mov
pop
jg
fadds
push
mov
jmp
mov
rol
mov
xor
loop
enter
pop
adc
or
or
jns
or
add
mov
jne
inc
dec
mov
mov
xlat
push
mov
push
mov
push
pop
jnp
fdivrl
int3
jmp
movsl
aam
int3
pushf
bound
ja
mov
jg
psubusb
roll
les
les
adc
outsl
sbb
sbb
clc
leave
enter
or
push
sbb
mov
mov
pop
adcl
bound
addr16
mov
xor
xchg
pop
enter
sub
das
mov
or
stos
arpl
test
sbb
outsl
addl
inc
orl
sub
sarl
mov
lods
and
movsb
mov
fdivrs
pop
les
xor
int
dec
mov
mov
popl
and
test
pop
les
in
ret
fucom
sub
pop
out
dec
adc
shll
cmp
cltd
add
xor
nop
popa
cmp
inc
es
movsb
inc
lcall
xchg
push
fs
das
ret
xor
ret
ret
inc
mov
xchg
mov
push
arpl
or
mov
add
enter
jb
sti
xchg
fwait
mov
pop
loopne,pn
iret
or
movsb
jb
negl
inc
out
andb
jl
and
mov
xchg
and
add
into
push
ret
cmpsl
ljmp
cmp
test
mov
fcompl
arpl
adc
sub
dec
je
dec
mov
and
xchg
jmp
orb
or
mov
push
and
enter
dec
dec
pop
or
jns
inc
pop
add
test
stc
in
inc
call
ss
loope
test
sbb
xchg
shlb
sub
mov
add
xchg
int3
sub
dec
imul
les
pop
leave
enter
and
es
cmp
xlat
push
in
xchg
fildl
dec
cmp
push
xor
inc
push
dec
push
fs
xchg
xor
scas
lock
and
andl
adc
fwait
mov
test
jmp
inc
xchg
or
adc
lds
ret
bound
sbb
lahf
lock
jno
arpl
mov
es
outsl
xor
std
add
cltd
nop
inc
sti
or
or
fs
adc
add
loope
and
xor
inc
inc
mov
or
xor
push
shll
or
in
mov
jl
vrcpps
fiaddl
add
in
push
in
cmp
add
fs
xchg
or
loopne
xchg
sbb
lea
cmpsb
loopne
xchg
fsubrs
adc
mov
popa
out
inc
in
addl
das
faddl
push
leave
cmpb
jg
and
stc
xchg
add
aam
in
fcmovu
cmp
xchg
pcmpgtd
mov
or
das
fildl
xchg
addr16
sti
or
ret
jo
lods
or
orb
lods
gs
out
xor
push
nop
cmp
or
jecxz
cmovae
xor
mov
and
subl
or
pusha
movsl
xchg
movsl
cwtl
xor
mov
cmp
inc
cld
adc
dec
lock
dec
add
call
push
adc
adcb
jb
add
cltd
mov
sbb
jae
rcll
sub
xchg
ret
sbb
sub
mov
push
shrb
add
fbstp
xor
in
dec
test
sbbb
stos
adc
xor
subl
xor
loopne
ret
fadds
aam
scas
inc
dec
repnz
or
mov
movsl
rorl
rorl
push
imul
call
adc
mov
test
and
cmp
test
mov
call
mov
bound
mov
gs
mov
xor
xor
adcb
mov
test
mov
test
cltd
jb
and
jne
mov
test
push
out
rcll
cmp
or
jne
popf
push
stos
lds
inc
adc
js
shll
mov
imul
andl
xchg
mov
mov
insb
dec
push
mov
push
call
or
lock
int
mov
lahf
xlat
imul
dec
add
dec
rcr
test
pop
cmp
mov
xor
push
outsl
fwait
mov
lods
mov
add
mov
jl
shll
cltd
push
dec
xor
hlt
pop
push
pusha
dec
xor
and
dec
inc
lret
add
jo
mov
mov
dec
clc
inc
fadds
fs
adc
rol
mov
mov
push
mov
les
in
inc
mov
mov
in
andb
subb
xchg
imul
dec
es
mov
inc
xchg
enter
pusha
mov
sbbb
xor
jecxz
mov
inc
cltd
sbb
push
fdivs
xor
jecxz
in
add
xor
dec
adc
sub
push
bnd
nop
int3
add
mov
sub
mov
jg
inc
cwtl
nop
mov
std
movsb
es
mov
nop
loopne
fbstp
pushf
movsb
repnz
jl
sbb
and
loopne
mov
mov
scas
es
ret
rorl
enter
outsl
mov
adc
pop
pop
adc
and
sarb
movsb
sub
es
mov
push
iret
iret
or
imul
mov
push
cmpsl
pop
xchg
in
mov
notb
cmp
adc
aam
rclb
pusha
shl
cmc
enter
insl
jb
fistl
add
mov
cltd
int3
inc
inc
sub
imul
lock
inc
insl
sub
sub
push
push
ljmp
rol
inc
pop
add
daa
int
or
add
or
arpl
push
cmp
in
insb
or
test
mov
lods
rclb
or
xchg
iret
js
sub
imul
xor
shrb
sbb
fdivrl
mov
or
insb
xchg
aas
mov
mov
das
add
les
enter
inc
movsb
repnz
ljmp
dec
jb
call
inc
mov
clc
aas
cld
aad
add
shll
lahf
adc
pusha
dec
adc
adc
test
dec
in
lock
lcall
cmp
jmp
mov
xchg
push
push
adc
mov
jecxz
lret
xor
cs
in
cld
cltd
sbb
cmp
cmp
or
push
add
nop
arpl
paddq
bound
aas
add
and
mov
or
in
nop
sti
insb
adc
movsb
or
sbb
enter
cli
mov
sti
cld
cli
scas
leave
and
sbb
pop
cmp
orb
cmp
mov
dec
hlt
add
adc
mov
lods
inc
mov
in
popf
pusha
sti
mov
and
mov
roll
adc
xchg
imul
pusha
mov
sbb
mov
test
sbb
rcll
shrl
call
dec
pop
mov
movsb
adc
enter
lods
lods
cmpsb
mov
mov
jb
shl
mov
nop
xchg
ror
add
xor
stc
les
inc
dec
mov
pop
and
and
push
sub
jno
mov
call
push
rolb
xorb
popl
repnz
sti
push
jp
mov
mov
test
lock
enter
and
xchg
add
sub
test
outsl
sub
xchg
dec
lahf
push
and
cmpb
rcrl
rcr
pop
dec
pop
mov
rclb
add
mov
xchg
xlat
push
std
jmp
xchg
and
add
jle
adc
jo
out
movb
int
and
fsubrs
mov
sub
sub
clc
enter
push
push
add
mov
jne
js
sub
xor
xchg
in
mov
xor
mov
dec
mov
out
add
rorb
int
cld
push
sbb
push
movsl
sbb
and
pop
imul
ja
lret
dec
sbb
dec
pop
adc
pop
sbb
clc
lcall
mov
fisubl
loopne
inc
xlat
jl
mov
mov
add
in
mov
add
out
fiaddl
mov
sub
shlb
adc
out
pop
adcb
adc
xlat
aas
cmp
inc
add
jb
imulb
xchg
push
pop
in
shl
mov
jmp
es
cs
mov
mov
ljmp
mov
fistpl
or
jnp
mov
add
scas
jns
jns
add
mov
push
nop
cmp
repz
mov
mov
inc
inc
inc
dec
dec
dec
dec
dec
dec
test
rorb
mov
push
lcall
popa
bound
gs
imul
jo
jb
je
jbe
ja
pushl
jns
xor
xor
xor
ss
cmp
sub
leave
adc
mov
rcll
xchg
adc
decl
or
push
or
cmp
rclb
cmpl
repz
push
push
mov
lcall
jge
jg
outsb
je
jb
outsl
arpl
fs
out
sbb
push
dec
imul
aaa
out
jg
dec
cmp
jb
gs
xor
cs
insb
push
and
std
bound
and
pop
popa
je
outsl
outsb
retw
into
insb
aaa
or
add
aas
rdpmc
pusha
scas
divb
incl
sub
cmpb
mov
inc
outsl
jb
js
je
fdivl
gs
cmp
or
outsl
movb
push
add
add
jl
add
xor
popa
mov
popa
jb
outsb
cmpsl
pop
sbb
outsb
dec
xor
xor
xchg
mov
insl
insl
cmp
add
dec
and
jns
add
jl
ja
das
das
adc
push
dec
push
inc
inc
gs
fstpl
push
push
insl
bound
daa
dec
outsl
jbe
dec
arpl
ret
push
fdivl
push
jo
sub
addr16
sbb
fldl
push
mov
stc
out
imul
bound
inc
jae
sahf
and
mov
out
xchg
popl
ja
cwtl
jae
addr16
push
jne
xor
mov
daa
push
sub
cmpsb
scas
clc
sbb
dec
js
out
sti
and
jbe
out
into
dec
inc
ds
popa
das
jo
or
test
push
pop
fcomip
mov
mov
lods
jge
or
and
pop
dec
fcoml
or
cmpsl
jmp
daa
sub
sub
sub
cs
movsl
cmp
inc
pushf
mov
aas
inc
das
pop
pop
hlt
cmpsl
test
push
pusha
cmp
jge
jg
add
outsl
inc
test
cs
and
push
pop
or
adc
cmpl
xor
inc
insb
jae
cmp
fs
mov
and
in
inc
mov
mov
ficomps
jo
insl
and
jb
fimull
dec
push
push
sbb
inc
sbb
fimuls
inc
and
add
xor
stos
int
sbb
push
jo
imul
lcall
popa
je,pn
insl
scas
lods
test
and
push
and
and
mov
sub
or
xorb
in
pop
xor
inc
popa
and
daa
mov
mov
sbb
xor
and
insl
push
push
sub
xchg
add
and
jne
dec
mov
jo
inc
lcallw
out
push
adcb
add
fidivrl
mov
xchg
or
imul
or
or
fs
gs
bound
adc
dec
in
adcl
mov
popf
add
jb
loopne
outsl
mov
jns
mov
dec
adc
dec
sub
arpl
cmp
xor
dec
popa
sub
fxch
pusha
mov
cmp
push
gs
insb
imul
lcall
push
push
lcall
popa
xor
xor
adc
mov
gs
push
sbb
push
mov
xor
shll
and
orl
cwtl
cmp
add
cmpsb
sub
outsl
outsl
ss
je
xor
jo
cli
jbe
add
inc
and
mov
xchg
push
mov
sbb
das
mov
or
xor
mov
out
je
int3
xchg
inc
jle
outsl
push
hlt
xchg
imul
arpl
lcall
bound
cmp
cmp
in
ljmp
imul
adc
outsb
popa
pop
or
in
inc
jno
xor
jecxz
push
push
leave
nop
pop
cmp
cmovb
jbe
fildll
xchg
sbb
cmp
xorl
in
xor
cltd
rclb
and
and
add
push
cmp
sbb
mov
xor
inc
jo
aad
pusha
jo
sub
test
ret
shrb
sub
lret
xchg
add
lock
sub
pop
dec
jmp
or
jo
and
vmovd
cmp
cwtl
ja
ds
inc
inc
mov
lods
and
dec
cmp
jg
ss
fisttpll
lcall
loopne
add
cmpb
rol
push
out
ret
das
lret
jno
icebp
pusha
inc
mov
clc
ret
pop
mov
jno
add
add
mov
push
loop
imul
ret
gs
popa
dec
add
inc
test
enter
popa
js
jae
stc
inc
jae
je
pop
dec
pop
add
ja
sub
addr16
imul
xchg
adc
jae
add
adc
add
add
add
add
xor
cmp
pop
or
aaa
ds
push
pop
xor
and
or
pusha
add
js
popf
cltd
testl
add
sbb
mov
addb
addb
mov
imul
and
adcb
pop
daa
push
addr16
mov
push
and
sub
jb
pusha
mov
jnp
push
jo
add
adc
ds
call
stos
int3
js
jo
mov
xor
int3
rorb
sbb
pushf
xchg
lea
mov
and
loopne
xchg
pop
xchg
xchg
push
les
mov
fldl
push
adc
test
dec
and
ds
sub
or
pushf
jo
adc
daa
pushf
jo
cs
pop
pushf
jo
or
adcb
andl
push
push
pop
int
in
ficomps
xorl
sub
cmp
dec
dec
add
test
cmp
xchg
dec
cs
adc
add
mov
addb
sbb
add
and
add
add
stos
pusha
dec
ja
ljmp
adc
rolb
mov
aaa
add
pop
insl
add
and
decl
add
addb
xchg
lea
call
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
pushl
mov
mov
mov
ret
enter
int3
int
iret
sar
call
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
xchg
push
repnz
cmc
div
clc
stc
cli
sti
cld
std
inc
inc
sbb
sub
add
shll
add
push
insb
aas
ljmp
or
add
ja
inc
mov
jae
jb
bound
dec
stos
xchg
jbe
cmpsl
inc
ss
popa
mov
repnz
lods
mov
lea
dec
in
fstpt
popa
addr16
outsl
js
push
push
inc
push
mov
rolb
and
insb
gs
jne
pop
addr16
dec
mov
daa
add
insb
divb
dec
imul
mov
jb
jo
ds
and
inc
test
les
daa
pop
mov
and
mov
addl
or
outsb
xchg
cmp
outsb
push
push
mov
sub
fstp
add
push
fdivrl
aad
push
lahf
fs
xor
or
xchg
mov
mov
or
gs
or
and
pusha
es
dec
dec
and
mov
pop
xchg
jae
push
cmp
pusha
ja
or
call
push
adc
das
outsb
gs
mov
adc
jbe
xchg
insb
inc
push
push
push
push
dec
testl
fnstenv
repnz
mov
pushf
mov
or
dec
jge
cmp
add
jg
imul
inc
call
inc
pandn
and
jae
inc
push
shll
xor
jg
popa
jl
mov
rcll
jne
adc
jns
pusha
push
or
stos
push
addr16
das
je
outsl
lods
jo
mov
xchg
daa
xchg
mov
cmpsl
cmp
pop
cmp
cmp
repz
repz
push
das
push
sub
divb
es
jle
sub
sub
mov
jnp
addr16
sub
sub
xchg
loopne
push
cmp
call
cmp
ficompl
pop
pop
cwtl
dec
adc
jb
sbb
push
jb
imul
jo
ss
lret
cmp
sbb
xor
es
sub
jo
sub
int
fisttpll
lahf
sub
or
inc
add
clc
loopne
cmp
repz
aam
shlb
in
adc
fildl
in
imul
loopne
shl
push
iret
repz
xchg
nop
loopne
mov
je
pusha
jmp
push
push
sub
pop
push
adc
dec
repz
xlat
fs
lock
push
in
or
out
jns
pop
pop
push
push
push
es
out
negl
push
dec
push
dec
mov
sahf
out
sahf
cmp
sub
and
sahf
out
and
add
fcomip
cmp
rcr
sarb
iret
pop
cmp
clc
fiadds
mov
cwtl
jo
inc
inc
cmpsl
stc
cmp
cmp
add
sahf
out
sahf
loopne
movsb
jl
sub
dec
repz
in
rcrb
sub
cmpsl
pop
aam
pop
pushf
mov
lcallw
jg
push
dec
jns
push
xor
add
and
cwtl
cmpsl
pop
push
outsl
pop
cmpsb
bound
fs
jns
sub
sbb
je
ljmp
dec
sti
push
lods
pcmpgtw
xor
add
jle
push
mov
cmp
inc
inc
dec
jae
insb
divl
pop
flds
mov
sbb
decl
push
dec
inc
dec
xor
inc
dec
dec
dec
push
push
and
xor
push
dec
inc
dec
add
pushl
stc
dec
dec
inc
add
adc
sub
push
pop
add
adc
or
popa
into
mov
mov
jnp
inc
loop
mov
pusha
mov
ds
pop
adc
clc
lret
sbb
stc
lcall
jge
arpl
cmp
adc
dec
scas
jp
mov
or
in
fstl
mov
and
in
pop
xchg
cmp
dec
imul
lret
add
int
incl
mov
mov
sub
fwait
ss
out
paddsb
int
jns
ds
xor
incb
int3
dec
decl
jns
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
call
shrl
pop
and
xchg
lret
sahf
icebp
mov
cld
or
incl
cmp
jle
inc
mov
xchg
push
pop
popa
push
or
scas
int
mov
ds
leave
loop
mov
xchg
dec
xchg
loope
sub
scas
lods
js
xor
andb
jle
into
or
icebp
pop
pop
repnz
jle
aas
and
es
sbb
xor
mov
mov
jg
ret
leave
or
mov
out
leave
ljmp
jg
fdivl
dec
test
push
push
inc
inc
or
outsb
jbe
dec
add
and
lock
mov
popf
pop
push
gs
jae
sahf
inc
es
out
jo
adc
dec
push
dec
push
sbb
sub
mov
push
inc
push
cmp
sub
add
inc
sbb
pop
push
and
cmp
add
inc
inc
and
jg
out
inc
add
sbb
or
dec
adc
add
sub
xor
sti
mov
imul
and
jno
jb
jbe
inc
pop
ss
in
jge
dec
dec
cmp
xchg
out
pop
inc
dec
push
inc
cmp
dec
sbb
idiv
out
pop
and
or
inc
or
and
push
sbb
xor
jg
dec
dec
ds
push
xor
add
and
lods
daa
push
pop
ret
push
insl
divb
dec
sbb
adc
ljmp
daa
sbb
dec
inc
sub
std
cmp
sub
adc
movhps
add
out
push
and
push
or
or
cmovno
sub
push
sbb
in
inc
xor
sub
or
push
das
adc
inc
adc
dec
pop
jge
rolb
ja
xchg
or
pop
jnp
pop
pop
aad
cmp
inc
or
sbb
dec
pop
daa
sub
cmp
add
mov
push
cmp
dec
cmp
xchg
or
pop
push
cmp
xor
or
pop
popa
lret
inc
inc
add
add
inc
inc
xor
fisubrl
sbb
xor
rorb
push
pop
cmp
push
dec
fadds
pop
mov
pop
sub
outsl
inc
jle,pn
call
push
mov
push
and
or
and
xchg
adc
js
ljmp
jle
rolb
xchg
shl
mov
mov
jb
cli
ja
pop
push
push
pop
push
gs
cld
cmp
xchg
sbb
dec
push
and
dec
xor
pop
adc
mov
push
pop
sub
sbbl
adc
cmp
pop
push
pop
or
ja
and
mov
insl
mov
adc
inc
pop
jne
call
fs
adc
dec
cwtl
in
push
cmp
xorb
pop
push
mov
iret
jnp
cmpsl
rol
loopne
adc
je
out
push
push
pusha
inc
or
outsl
jg
out
sahf
cmpsl
push
mov
lock
dec
stos
mov
dec
add
mov
notl
or
scas
sub
cwtl
xor
add
aad
clc
data16
push
popa
push
and
cmpb
jne
push
popa
inc
out
test
xor
imul
fs
outsl
icebp
cmp
sub
push
or
lock
dec
mov
inc
push
push
push
nop
push
push
mov
push
and
addb
sahf
out
loopne
ss
xor
out
mov
loopne
push
push
push
push
push
push
rep
scas
cmp
cmp
aas
pop
pusha
push
ss
arpl
adc
pushf
xor
cmpsb
lds
les
inc
push
pusha
inc
sub
cmp
cmp
and
push
or
notl
cmp
inc
sbb
push
or
jnp
xor
push
mov
in
out
ja
sbb
add
pop
inc
pop
pop
inc
dec
add
nop
or
xlat
repz
or
sahf
and
push
sub
pop
push
sbb
sub
push
jmp
fnsave
clc
sub
push
add
jb
add
cwtl
pop
push
push
insb
push
add
or
pop
sub
push
or
lods
sub
inc
pusha
sbb
fisubrs
adc
and
or
sub
and
and
push
in
mov
cmp
dec
cmp
pop
out
ja,pn
pop
sbb
ss
sbb
and
xor
out
loope
sbbl
adc
xor
scas
jge
xor
hlt
outsb
scas
sbb
pop
add
add
inc
test
mov
and
dec
ret
or
jl
push
cmp
in
xchg
cmp
pusha
sub
fwait
sub
and
push
push
jnp
aam
sub
push
cmp
cmp
push
daa
ss
jae
cmp
cs
and
adc
jecxz
inc
mov
cltd
and
popf
mov
push
sub
or
or
popa
xchg
daa
and
in
cmpsl
sbb
and
mov
negl
ds
dec
add
push
mov
inc
sarl
cld
push
sbb
adc
and
inc
or
mov
add
or
mov
lcall
pop
mov
push
stc
mov
enter
push
or
xchg
inc
inc
add
or
daa
pop
add
ja
and
imul
jnp
ret
inc
pusha
xor
xor
push
inc
dec
out
sub
cltd
into
loope
test
scas
daa
int
xor
in
push
mov
push
mov
cmp
add
popa
push
sbb
testb
xor
aaa
iret
sub
lcall
es
pop
inc
add
add
jmp
xchg
pop
daa
pop
lahf
psadbw
enter
in
adc
push
dec
cld
pop
or
fistl
daa
cmp
sbb
stos
add
aas
dec
ja
insb
jne
ss
xchg
dec
jbe
xchg
pop
stos
adc
xlat
dec
push
sbbl
adc
push
sarl
mov
cmp
and
idivl
outsb
inc
adc
lcall
movsl
ljmp
loopne
xor
rcrb
push
inc
jnp
inc
jo
inc
ss
xchg
jbe
aaa
xchg
inc
daa
ror
rcrb
stos
sub
sub
mov
sub
or
inc
or
jge
or
rorl
repnz
add
jnp
inc
xchg
sub
mov
inc
popa
push
je
and
lods
push
daa
sbb
int
roll
imul
loopne
sbb
pop
jbe
incl
and
push
add
push
fwait
dec
out
xlat
fbstp
add
daa
das
or
adc
pop
inc
out
call
sbb
inc
or
or
shrl
xor
lock
out
test
inc
push
mov
int3
js
sub
decb
ja,pt
and
imul
testb
iret
or
div
lds
xor
sub
pop
xor
loopne
inc
or
push
dec
inc
pop
or
enter
sbb
cmpsb
add
loopne
xorl
add
call
jb
aad
push
or
aad
mov
lcall
ds
adcl
pop
pop
xor
imul
ret
add
push
add
daa
dec
les
lcall
inc
lea
bound
inc
ja
lret
add
icebp
mov
xor
or
loope
mov
rorl
push
out
jp
cs
jmp
sbb
push
insb
outsl
jb
bound
xchg
adc
cmpl
je
and
jae
popa
mov
je
mov
xchg
mov
xor
jmp
mov
cs
and
xor
js
pop
cmp
add
addr16
jae
push
movsl
inc
pop
xor
xor
push
shl
aas
inc
push
mov
loopne
call
outsl
sbb
push
scas
inc
mov
fsubs
shlb
add
imul
sbb
and
push
and
adc
push
ficoml
incl
adc
adc
sbb
loopne
sub
inc
pop
and
fadds
pop
pop
je
xorb
or
movsb
xor
clc
fildl
mov
mov
pop
sub
cs
ret
mov
inc
jle
dec
fidivrs
cmpl
xor
xlat
push
mov
mov
loopne
mov
adc
ret
add
inc
leave
and
or
test
fwait
add
cwtl
dec
or
or
xchg
outsb
dec
mov
insb
xor
ja
xor
sbb
or
dec
ret
xor
and
or
cmpsl
jne
or
xchg
mov
mov
xor
or
imul
pop
add
inc
call
xchg
add
pop
mov
dec
je
pop
addb
lds
jo
adc
push
inc
dec
sbb
push
pop
nop
lahf
je
pop
sub
dec
inc
pop
sub
rorb
adc
inc
xchg
adc
int3
cmp
cmp
cmp
lea
push
loope
out
out
cmpsl
jo
push
nop
mov
movsl
mov
xlat
mov
inc
cli
push
xor
pop
fstps
daa
pusha
add
lods
mov
lret
mov
ljmp
push
in
push
jo
mov
jo
ret
push
add
sub
cmp
xchg
enter
mov
push
inc
push
add
push
cmp
sbb
sub
test
and
add
pusha
inc
cmpsb
test
sbb
das
and
dec
ljmp
and
ret
and
dec
js
lcall
jg
dec
lock
js
and
outsl
and
rolb
ds
inc
inc
sub
repz
adc
sbb
cmp
and
es
les
adc
and
inc
je
movsl
xor
or
and
push
pop
cmpsl
cmp
xor
and
ja
movq
in
cmp
and
in
inc
daa
xchg
and
pop
push
and
aaa
dec
sub
cwtl
imul
pop
pushf
push
mov
push
mov
inc
adcl
sbb
ss
int
or
push
inc
mov
iret
popa
iret
movb
sub
cli
pop
das
fstps
inc
jbe
fisubl
iret
inc
lods
xor
add
xor
ss
pushf
cmp
inc
sbb
dec
jno
fdivp
push
sbb
adc
push
inc
push
or
jbe
sub
sub
fs
leave
add
insb
or
jb
data16
jns
js
push
xchg
cmp
ds
adc
push
push
push
hlt
lock
and
or
inc
dec
or
aas
das
or
sub
ss
pop
mov
dec
xor
sub
dec
dec
sub
inc
push
and
add
cmp
inc
or
sbb
add
jo
jmp
sub
js
or
push
test
inc
add
sbb
xor
jg
fists
push
jns
jae
mov
cmp
hlt
pop
mov
pop
mov
fstpt
or
adc
dec
xchg
add
into
inc
add
adc
out
mov
fsub
daa
push
imul
stos
xchg
inc
arpl
pusha
add
sbbb
jbe
push
pop
imul
test
add
push
add
out
fistl
sub
rcrb
fidivs
xor
insl
xor
insb
mov
inc
sub
addb
and
shlb
fldl
fsubs
jmp
lds
out
and
mov
and
jo
sub
cwtl
out
sbb
lcall
dec
outsl
sbb
aad
lret
fs
xor
inc
and
dec
sahf
enter
insl
in
fisttpl
out
test
adc
roll
repz
ret
jle
movsb
adc
aaa
xorl
cwtl
or
jo
sub
movsb
push
loop
adc
das
out
movsb
jmp
inc
inc
pop
dec
lods
rorl
pop
cli
aas
loope
loop
cmp
dec
inc
sub
sub
cmp
xor
pop
cmp
mov
xor
sbb
cmpsb
xor
sbb
push
inc
sub
sbb
pop
ret
nop
xchg
sbb
and
or
xchg
insl
dec
cs
dec
xlat
ja
add
daa
dec
add
add
aaa
and
clc
cmp
shll
js
inc
inc
adc
dec
push
sbb
lock
sbb
mov
push
ljmp
sbb
das
icebp
add
inc
mov
pop
adc
dec
lods
sbb
imul
xchg
pop
adc
sbb
dec
add
jl
ja
push
inc
cmp
sbb
sub
and
xor
aam
inc
insb
and
or
push
icebp
aaa
jo
insl
or
sub
clc
push
add
inc
call
sub
insb
data16
ja
fs
push
int
gs
push
mov
test
inc
add
jp
adc
mov
sbb
add
jbe
inc
loopne
cmc
pop
inc
fidivl
lods
jb
outsb
inc
and
fildll
jecxz
lahf
out
push
adc
shlb
xor
jns
lcall
shlb
sahf
int
mov
flds
loopne
jo
repz
pusha
andb
in
cmp
push
out
cwtl
lds
mov
inc
testb
mov
add
push
dec
dec
das
cmpsb
rolb
insl
xchg
shlb
pop
add
aas
mov
mov
mov
mov
add
adc
mov
ja
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
insb
out
adc
cli
mov
sub
sub
out
inc
mov
mov
sbb
mov
ds
pop
sbb
xchg
jo
addb
fsubs
sbb
ljmp
test
xor
dec
xchg
pop
shl
dec
push
nop
mov
adc
adc
movsb
mov
aaa
test
push
dec
cmp
adc
dec
add
lods
mov
sub
dec
rcrb
inc
inc
jb
ret
ss
outsl
push
dec
imul
dec
addr16
out
mov
sub
in
xchg
sub
dec
test
cmp
cmp
sub
sahf
xchg
out
cmp
inc
clc
add
pushf
xor
call
lock
enter
insb
inc
js
pop
lret
cmp
dec
pop
add
mov
dec
pop
int3
repnz
ja
imul
pop
sbb
lcall
inc
leave
jnp
cmp
xor
sub
adc
inc
sbb
sub
xor
inc
push
xor
push
add
mov
lock
mov
outsb
add
pop
adc
test
add
xor
xor
xlat
insl
movsl
das
js
testb
lock
shrb
out
mov
out
jns
jp
cmpsl
cmp
push
push
jb
jo
das
sti
or
popa
dec
jne
cmp
popa
outsb
mov
inc
addl
push
rcrl
or
fsubl
mov
jnp
daa
sub
scas
sbb
icebp
pushaw
sbbl
das
mov
mov
mov
outsb
movsb
inc
cmp
out
add
push
enter
out
out
cmpsl
adc
and
aaa
or
push
add
out
mov
inc
adcb
inc
xchg
dec
jmp
jg
ss
cmp
inc
inc
inc
adc
xchg
pusha
adc
cmp
mov
addb
jbe
or
ja
and
stos
ss
dec
dec
xor
mov
inc
inc
xor
push
loope
or
pop
push
ds
aaa
mov
xchg
mov
adc
inc
das
or
rdtsc
nop
adc
cmp
das
das
pop
dec
popf
hlt
or
adc
repz
dec
mov
lods
add
scas
cmp
outsb
inc
add
outsl
pop
pop
inc
insb
es
push
outsb
jge
in
fwait
pop
sbb
sub
inc
outsl
pop
cmp
inc
mov
outsb
pop
cmpsl
jno
lods
outsl
fs
xchg
sub
jno
push
mov
xchg
out
jns
das
push
push
jo
inc
xchg
out
leave
mov
mov
pop
dec
inc
jge
xlat
insb
ds
popa
xor
inc
in
inc
jb
pop
mov
mov
sahf
pop
cwtl
mov
loopne
lcall
push
jne
or
sysret
sti
pop
add
and
imul
mov
nop
sarl
cmpsl
xor
ds
imul
push
idivb
cmpsl
cmpsb
test
mov
sarl
loope
cs
lret
ds
repz
mov
pop
add
jnp
out
xor
test
out
stos
inc
pop
insl
push
dec
sub
jge
push
sub
mov
insb
dec
fstl
push
sub
xchg
push
cwtl
leave
push
daa
iret
jnp
pop
pop
push
sub
push
mov
inc
cs
arpl
jne
xchg
ds
repz
loope
das
out
mov
cmp
pop
push
push
pop
testb
out
rcll
xchg
js
push
out
mov
fistps
sub
cmp
negl
ss
xor
dec
sarl
leave
test
pop
push
sbb
mov
inc
es
push
nopl
or
sti
cmp
cmpl
xor
sahf
idivb
inc
mov
xor
out
pop
enter
pop
out
cmp
jae
mov
add
jmp
add
je
jnp
repz
fwait
pop
loopne
icebp
mov
cmp
jl
push
push
inc
and
iret
test
and
test
cmp
sbb
inc
push
jl
sub
sahf
out
pop
aas
push
jb
fnstsw
out
into
imulb
jle
push
and
je
add
xchg
xchg
cli
and
jg
sbb
scas
sub
adc
and
and
rcrb
push
push
pop
jnp
decb
test
mov
pop
in
bound
sarb
loopne
mov
imul
int3
push
and
pop
sbb
enter
cld
cmp
adc
or
adc
repnz
or
add
pop
mov
or
je
inc
cli
mov
js
inc
add
outsb
push
outsb
outsl
mov
adc
popa
aas
jae
pop
mov
daa
out
adc
inc
sbb
mov
mov
aaa
push
mov
testb
push
xlat
outsl
jmp
das
inc
inc
sbb
mov
dec
lcall
je
push
ljmp
cmpsb
dec
add
push
aad
add
fwait
insb
pop
imul
push
dec
pop
je
jns
rcr
cmp
jp
das
cmp
xchg
outsb
push
out
sbb
ret
inc
imul
pop
pusha
pop
test
retw
dec
dec
js
fisttpll
jae
dec
mov
ja
je
loope
nop
dec
addr16
pusha
dec
dec
and
push
adc
jnp
leave
cmp
fimuls
push
ds
or
imul
jo
es
insb
je
sub
jns
addr16
jo
jae
es
outsl
and
ss
es
cmpb
sub
and
js
out
push
cmpsb
mov
test
jmp
xor
xor
xor
xor
xor
mov
mov
and
xor
push
xor
xor
cmp
push
ss
jbe
in
aas
or
inc
add
dec
push
jae
mov
aaa
cmp
push
inc
or
add
mov
add
or
mull
scas
xor
xchg
fadds
add
das
cmp
inc
xor
xchg
xor
sbb
test
lock
jp
add
dec
sbb
sub
movsl
mov
push
dec
inc
sub
mov
add
popf
cmc
dec
xorb
push
xor
add
and
rorb
xor
fdivs
lret
or
xor
inc
shrl
enter
mov
lock
cmp
js
mov
mov
movsl
cli
xor
mov
inc
or
daa
add
dec
pop
daa
nop
or
add
mov
pop
adc
test
adc
test
cmpb
jbe
aaa
lcall
sub
loopnew
push
cs
inc
js
mov
fidivl
subl
inc
mov
push
inc
xor
jg
arpl
inc
or
inc
sbbl
sbb
pop
testb
xor
xor
inc
add
test
inc
dec
repz
jnp
aaa
push
dec
inc
outsl
sbb
inc
pop
push
mov
stos
daa
push
push
jo
push
mov
lods
aaa
and
mov
push
pop
inc
insl
aaa
lahf
lea
mov
scas
ljmp
daa
and
mov
add
cs
or
mov
lods
testb
das
add
adc
aaa
iret
or
loop
add
stos
test
mov
adc
imul
sub
xchg
pop
mov
das
dec
pop
cmp
mov
test
and
movb
repnz
pop
sub
or
js
or
and
sbb
mov
imul
pop
scas
pop
lock
lock
daa
lahf
pop
shrl
push
xchg
outsb
popl
pusha
in
lods
dec
sbb
int
mov
push
andb
or
insb
es
sbb
movsl
push
dec
adc
add
push
fildl
xchg
pop
and
nop
cmp
in
mov
dec
mov
loope
xor
outsl
lret
loop
xor
and
mov
pop
adc
jae
sub
js,pn
or
jl
nop
js
jo
dec
xchg
imul
rclb
mov
lods
cmpl
ss
js
xchg
mov
mov
pop
xchg
aad
or
adc
ja
fistpl
shlb
mov
inc
push
dec
dec
js
inc
dec
scas
sbb
xchg
in
loop
repnz
pop
sbb
push
das
das
scas
jnp
repnz
add
sub
adcb
cwtl
dec
mov
sahf
or
mov
pop
daa
fdivrl
or
push
es
adc
and
test
es
addr16
addr16
call
data16
pop
jb
push
filds
dec
jns
inc
enter
adc
pop
adc
xchg
mov
rcrl
adc
ss
and
mov
adc
adc
add
push
push
pop
movsl
ret
les
xor
or
sbb
test
aaa
xchg
dec
and
icebp
inc
pop
mov
adc
scas
jb
cltd
xchg
cmp
inc
push
add
sub
lock
sbb
pop
lock
push
add
test
adc
add
xor
or
aas
les
gs
adc
pop
fidivrl
sbb
shr
add
adc
mov
adc
push
xorb
cmp
push
sbb
add
and
lods
push
cmp
jns
xchg
inc
lret
xchg
inc
ja
mov
dec
arpl
loopne
xor
and
pop
inc
xor
pop
adc
xchg
adc
sbb
ret
test
sbbb
sub
xor
pusha
adc
mov
push
inc
mov
xor
dec
in
xor
addr16
pop
dec
enter
dec
popa
jp
xor
cs
fisubl
push
xor
xor
test
adc
dec
orb
or
push
mov
hlt
mov
xor
rcrb
addr16
dec
test
loope
js
movl
sub
pop
pop
adc
or
test
add
inc
out
popf
push
loope
das
cmp
push
inc
or
mov
out
das
push
mov
rcll
repnz
or
sbb
inc
daa
lods
pop
adc
jmp
dec
in
adc
push
sahf
ja
test
adc
pop
sbb
and
repz
out
andl
ds
dec
cltd
or
xchg
popw
add
add
pop
or
fldcw
add
das
adc
repnz
jnp
mov
xor
inc
mov
out
cmp
adc
mov
mov
fisttpl
sbb
sub
int
mov
add
or
adc
mov
xor
pop
add
ss
int
add
dec
str
flds
cwtl
or
and
das
jmp
divl
idiv
aas
outsl
arpl
add
pop
and
jbe
or
and
xor
cwtl
sbb
add
inc
or
imul
hlt
cltd
cli
jb
jo
xchg
jo
mov
cmp
imul
shrb
xor
add
das
fsub
push
loopne
push
or
inc
push
pop
daa
clc
push
fistl
pop
push
flds
mov
add
inc
push
stos
push
pop
sbb
mov
add
sub
push
cs
pop
xor
rorb
and
ljmp
add
push
or
pop
push
inc
lcall
push
daa
and
dec
dec
adc
push
add
sub
push
inc
inc
or
sub
push
add
mov
push
dec
push
repnz
push
lret
lfs
sbb
ss
add
pop
and
ljmp
adc
adc
xor
cs
xchg
decl
push
xor
inc
dec
cmp
cmp
pop
xor
decl
push
xor
call
pop
cs
inc
push
adc
pop
add
push
inc
and
xlat
adc
loopne
sub
push
cmp
orl
fadds
daa
shrl
scas
add
and
push
mov
in
pop
push
xor
mov
xor
adc
push
sub
dec
lods
jge
xor
adcb
adc
jmp
push
mov
push
scas
or
iret
inc
lock
or
out
sub
pop
push
ffreep
dec
js
inc
sub
lods
or
loop,pn
cs
xchg
push
push
dec
mov
push
outsl
inc
jo
adc
mov
pop
mov
and
icebp
xchg
and
pop
pop
pusha
bound
add
ret
mov
mov
or
incb
jo
jb
shll
hlt
xchg
cld
push
push
add
add
inc
push
dec
inc
dec
push
dec
out
or
outsl
cmc
xor
inc
sub
or
into
pop
and
loope
sbb
sbb
and
sub
and
adc
das
mov
pushf
and
dec
jo
push
dec
pop
adc
xchg
push
andb
push
testb
nopl
jnp
pop
aaa
pop
inc
daa
pop
daa
push
pop
dec
push
pop
sbb
ja
sub
sub
icebp
out
inc
aaa
sbb
push
add
xor
fimuls
aaa
push
xor
inc
add
xor
xor
imulb
push
xor
jmp
inc
ds
aaa
aaa
inc
push
inc
xlat
in
or
cs
ss
sete
inc
add
pop
lahf
ss
mov
lcall
inc
aaa
jno
sti
shrb
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
ljmp
test
and
jge
push
je
mov
andb
lcall
shrl
xchg
out
popf
rorl
jmp
jg
outsl
sub
sub
fsubrl
stc
jbe
push
ds
insl
xor
mov
pop
mov
inc
xchg
cmpsl
aad
arpl
push
addr16
adc
or
cmp
sbb
cld
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
decl
sbb
mov
call
cltd
test
push
push
shll
insb
aaa
push
dec
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
ljmp
movsl
js
js
test
add
mov
mov
movsb
mull
jno
addr16
push
test
addr16
cmp
dec
movsl
jg
push
push
mov
jg
das
fs
flds
pop
xor
jae
or
jne
and
xchg
lods
jnp
push
dec
ss
cmp
dec
arpl
pop
inc
cmp
insl
push
insb
push
aaa
cmp
push
inc
ja
bound
push
popa
push
inc
jo
xor
and
jmp
jb
dec
jns
jno
je
push
inc
jbe
pop
pop
dec
jge
and
sub
push
daa
lahf
and
inc
or
test
mov
add
ret
mov
push
cmpsl
dec
sub
mov
nop
xor
add
addr16
adc
ffreep
pop
lahf
popf
inc
push
cmp
add
loop
push
mov
outsb
dec
faddl
adc
mov
pop
dec
mov
out
cmpsb
outsb
push
sbb
movsb
mov
lahf
and
add
shrb
sub
les
popf
insb
mov
sbb
dec
sub
mul
inc
js
push
loopne
int
loopne
or
xor
jb
outsl
cmpsl
add
je
lahf
mov
in
dec
push
and
in
rol
push
sbb
xchg
sub
faddl
sbb
mov
fadd
lods
mov
jle
add
pop
lock
mov
pusha
lock
adcl
sbb
pop
cmp
scas
out
cmp
pop
lretw
sbb
idivl
roll
ss
inc
orb
and
sbb
test
push
xchg
cmpl
aaa
and
adc
bound
push
push
adc
xorb
scas
pop
es
sti
flds
jmp
push
adc
stos
subl
icebp
icebp
adc
xor
insl
xor
pusha
add
enter
and
lods
enter
adc
iret
add
adc
adc
ret
daa
test
push
subl
jb
jbe
jg
outsb
je
xor
js
or
imul
pop
insl
gs
cmp
mov
into
movsl
popf
pop
mov
mov
mov
je
stos
pop
cs
sub
ret
out
dec
rolb
insb
add
popa
je
dec
sarb
mov
push
dec
mov
push
push
adc
adc
sub
and
pop
jmp
mov
pop
pop
and
inc
or
in
and
or
shl
scas
inc
cmp
mov
ret
push
add
lods
pop
cmp
cmp
adc
add
push
jg
mov
xor
add
and
or
push
jae
and
ffreep
inc
outsb
pop
cmp
push
dec
sub
mov
ds
inc
inc
stos
les
push
mov
mov
leave
fsubs
addr16
loopne
or
daa
sbb
push
inc
out
inc
pop
pop
mov
pusha
ss
and
push
iret
stos
mov
sub
out
rorb
inc
leave
fcom
mov
xchg
dec
rclb
push
into
ja
jb
pop
loopne
mov
jmp
movsl
jae
inc
jne
xchg
or
mov
mov
inc
cmp
push
adc
jp
fs
cmp
sbb
or
mov
sub
sbbb
adc
sub
fadds
adc
les
aam
sub
jo
xlat
inc
xchg
dec
xchg
loop
lds
sub
push
push
jbe
pop
lea
add
push
or
das
aaa
pop
adc
aas
push
add
mov
mov
das
scas
push
adc
add
sub
and
xchg
inc
push
and
push
xchg
jge
push
inc
aas
inc
push
inc
cmpsl
pop
inc
or
dec
cmp
mov
test
pop
inc
mov
or
sbb
push
scas
pop
mov
pop
sahf
dec
cmp
adc
sbb
pop
jge
jecxz
aad
adc
aam
cmpsl
sbb
or
dec
or
xchg
scas
pop
add
nop
outsl
cmc
pusha
lock
push
xor
outsl
jmp
xor
sahf
xor
je
imul
or
notl
inc
pop
add
add
inc
dec
mov
and
jne
dec
xor
or
call
lods
mov
pop
pop
pop
aas
cs
add
out
fwait
lods
mov
and
mov
scas
cmp
mov
sub
sbb
dec
pop
movsl
insl
outsl
mov
dec
dec
pop
repz
outsl
dec
addr16
aad
sub
and
and
test
push
std
xor
pop
imul
dec
push
addl
or
jbe
pop
mov
aas
add
sub
loopne
mov
or
inc
lret
mov
dec
and
dec
cmp
adc
jge
push
mov
aaa
add
jne
or
mov
gs
ja
les
std
movsl
jbe
test
and
addr16
xor
outsl
dec
sbb
jae
addr16
push
fs
inc
inc
scas
jp
imul
je
scas
mov
xchg
lods
add
sub
dec
push
pop
push
dec
notb
dec
sahf
xor
jb
gs
mov
adcb
pop
daa
dec
enter
push
dec
jb
xor
loopne
inc
aas
dec
mov
andb
xor
je
add
cmp
and
jo
rolb
add
push
cld
adc
test
sub
cwtl
out
addl
dec
ss
jb
mov
inc
mov
adc
push
test
or
lcall
inc
insl
fsub
push
in
and
pop
jae
sti
xor
push
adc
iret
cmp
test
inc
or
mov
notl
jns
ja
inc
fisubrs
add
nop
and
int
add
mov
jae
pop
xorb
and
fwait
pop
cmp
mov
mov
clc
sbb
mov
cmovl
rcrb
rcrb
or
xor
or
repnz
or
daa
inc
sub
push
out
add
cmp
pop
jb
push
sub
mov
dec
lds
ljmp
punpcklbw
mov
test
cmpsb
bound
jmp
cmp
adc
mov
andl
adc
loopne
les
cmp
pop
jge
or
or
dec
jl
cmc
pop
sub
or
test
call
push
lock
imul
sbb
lcall
arpl
xchg
mov
mov
adc
inc
cwtl
mov
jp
cmp
sub
mov
push
xlat
add
les
les
jo
fiaddl
ja
sbb
dec
add
xlat
inc
dec
sbb
in
outsl
xlat
outsl
or
je
sub
mov
dec
push
push
push
das
xor
xor
dec
addr16
into
push
sbb
sbb
inc
add
scas
push
mov
sub
inc
outsw
insl
pop
xor
add
pop
dec
and
xor
push
mov
push
push
push
inc
dec
dec
dec
inc
mov
add
nop
shrb
lods
push
imul
arpl
gs
cmp
or
dec
xchg
mov
push
sbb
push
jo
cmpsl
mov
fwait
in
sti
out
push
clc
cmpsb
cs
dec
jl
ret
in
jl
dec
push
lahf
sbb
inc
dec
xchg
dec
inc
xadd
mov
outsl
mov
inc
pop
jle
cmp
lock
mov
mov
cmp
mov
test
fistps
inc
dec
add
jno
pop
iret
push
mov
xor
xor
test
add
pushf
aas
add
jnp
mov
test
addr16
movsb
int3
daa
inc
mov
push
call
xorb
add
iret
sub
xor
add
imul
daa
test
pusha
jnp
add
jl
inc
sbb
or
outsl
pop
mov
aaa
jns
in
add
lods
add
dec
outsl
mov
xor
mov
cmp
mov
xchg
sub
rcrb
repz
shl
aas
push
aaa
push
mov
mov
movb
cmp
int
jns
js,pt
or
cmp
ds
cmp
mov
cmp
sahf
cmp
cmp
out
push
mov
movb
sarl
mov
int
ds
push
push
sbb
aaa
add
cmp
or
shll
adc
add
out
inc
xchg
fmuls
add
out
dec
cmp
add
int
or
or
out
mov
fcomps
insb
pop
lock
xor
mov
cmp
inc
mov
pop
add
sbb
mov
jg
mov
inc
push
jg
xchg
sub
xchg
jns
dec
outsl
int3
dec
inc
adcb
repnz
dec
mov
inc
das
or
dec
adc
outsl
leave
mov
or
filds
inc
inc
pop
or
inc
push
adc
outsl
add
insb
and
testb
cmp
cmp
dec
add
inc
icebp
dec
hlt
cmp
push
cmp
mov
pop
cmp
pop
popl
out
and
xor
test
or
daa
xor
cmp
xchg
xor
int3
adc
fmull
or
xor
sbb
pushl
xor
push
enter
xchg
cmp
cmp
enter
or
adc
add
call
fidivl
mov
or
scas
in
scas
jo
add
cmp
cmp
rolb
push
xchg
and
inc
lahf
mov
imul
jg
mov
and
out
inc
mov
shlb
repnz
xchg
sub
fwait
nop
pop
xor
and
xor
push
xor
add
jbe
ret
fbld
outsl
and
adc
nop
or
and
adc
aas
push
roll
xor
pop
cld
outsl
out
mov
or
mov
dec
jo
add
mov
adc
push
aaa
jb
add
aaa
mov
or
int3
scas
fs
push
aam
add
push
repnz
inc
add
inc
pop
scas
push
inc
inc
mov
push
rolb
or
jg
push
cwtl
in
dec
lcall
xchg
and
jle
fidivrs
and
sbb
add
call
jnp
ss
cld
divl
or
sub
inc
outsl
bts
mov
push
outsl
jg
add
outsl
test
or
push
insb
jecxz
insb
mov
push
int3
inc
faddl
sub
jns
test
je
xchg
push
or
call
mov
inc
mov
adc
or
dec
inc
inc
push
inc
lahf
in
xor
or
inc
push
mov
mov
add
mov
mov
xlat
or
xchg
clc
inc
push
jo
dec
jl
lods
inc
lahf
inc
jno
loopne
adc
adc
pop
inc
addb
cltd
mov
inc
outsl
and
iret
xchg
mov
cld
add
loopne
enter
push
ret
push
pop
mov
aaa
mov
mov
imul
add
xchg
mov
push
inc
outsl
add
shl
call
addl
sub
xchg
fmull
or
in
jg
add
inc
push
inc
ja
pop
leave
xor
pop
jg
dec
scas
or
or
in
pushf
movsb
nop
sbb
and
and
jb
jge
push
adc
fadds
outsl
add
jns
mov
push
insb
push
pop
adc
pop
jo
xor
sbb
ss
mov
dec
leave
adc
add
mov
mov
fsubs
add
scas
arpl
xlat
add
iret
daa
dec
in
scas
out
xchg
inc
daa
or
rorl
out
jns
xchg
movsb
pop
sbb
push
int3
dec
push
cmp
lcall
xchg
inc
mov
xchg
mov
in
inc
or
inc
cmpsl
push
jb
push
or
inc
pop
enter
pop
dec
popa
inc
lcall
nop
fwait
mov
add
or
cmpsb
or
int3
fdivl
pop
bnd
inc
pop
add
add
pop
leave
fwait
call
lahf
shll
pop
and
mov
add
movsb
outsl
out
inc
sub
orb
or
enter
pop
or
xchg
inc
scas
in
dec
and
daa
or
jl
pushf
xor
xchg
lods
push
in
push
mov
repnz
adc
and
jl
xlat
ss
jbe
mov
daa
sub
xor
jge
adc
inc
push
sbb
dec
adc
dec
nop
enter
inc
jo
push
mov
orb
fadd
lock
pop
mov
mov
outsb
in
or
scas
hlt
data16
xlat
lods
add
data16
fsubs
cmp
das
push
dec
dec
movl
push
pusha
daa
ds
lods
popa
or
addr16
push
mov
daa
nop
aas
ret
imul
mov
add
add
repz
out
and
sbbb
loopne
dec
inc
jl
out
sahf
lahf
mov
xor
repz
outsl
pushf
push
mov
repz
mov
add
repz
es
push
dec
push
movsb
sahf
cmpsl
stc
cmp
pop
push
inc
jo
cmp
out
mov
add
dec
out
ds
repz
cld
and
push
lods
iret
sarl
aad
push
dec
insb
pushf
sahf
cmpsl
stc
cmp
pop
push
aaa
bound
fimull
push
dec
cmpb
rep
fstpt
push
jns
repz
out
jecxz
pop
pop
xchg
imul
pop
pop
xchg
iret
sarl
aad
pop
push
rcrb
es
push
jg
cmp
repz
cs
xorb
push
pop
mov
jns
iret
repz
xlat
dec
pop
push
imul
pusha
ret
jns
ss
out
fmuls
arpl
shll
fs
stc
pop
gs
stc
mov
mov
add
jl
cmpsl
inc
xchg
bound
repz
out
imul
push
pop
imul
lahf
ja
iret
sbb
ljmp
repz
lcall
jo
int
ds
repz
data16
out
jl
mov
je
pop
jne
sarl
call
lcall
ja
sbb
stc
cmp
push
jns
frndint
stc
xor
jge
jp
push
cmp
dec
jl
jge
cmpsl
jne
lret
ss
jae
dec
repz
cwtl
jle
jmp
jg
int
imul
repz
repz
xor
jl
cmpsl
stc
or
adc
pushf
shr
xchg
repz
jo,pt
push
cmp
push
and
ds
sarl
pusha
test
or
outsl
cwtl
enter
dec
repz
sarl
pop
fstl
out
cmp
in
cmp
cmpsl
stc
cmp
cmp
iret
repz
mov
cmp
out
fwait
decb
test
xor
cmpsl
stc
sub
push
jns
iret
repz
adc
repz
cmpsb
cwtl
cmpsl
add
lahf
pop
push
jae
stos
rorl
lahf
data16
scas
push
scas
jecxz
mov
test
daa
std
pop
in
add
orb
mov
pop
add
push
daa
fucomp
push
fbld
stos
in
and
push
add
leave
out
mov
jo
adc
sbb
add
xchg
jl
push
dec
push
xlat
lods
nop
out
pop
add
pop
rcrb
pop
sub
and
jb
rclb
icebp
jbe
xchg
or
inc
ss
notrack
icebp
mov
daa
push
stc
bound
inc
pop
push
and
mov
movsb
push
inc
daa
out
lcall
nop
and
push
scas
inc
pop
enter
mov
and
inc
jo
mov
sub
ljmp
adc
inc
and
aas
cmp
ds
scas
push
aas
cs
inc
lock
inc
pop
fdivs
mov
mov
dec
push
movsb
je
filds
fcomps
sbbb
mov
dec
scas
mov
sti
mov
mov
iret
out
or
pop
mov
aas
and
mov
ja
aas
dec
and
fs
leave
jmp
mov
aas
sub
jmp
add
int3
push
push
rolb
mov
mov
jno
pop
xlat
aaa
pop
jl
inc
popl
push
daa
pushf
clc
inc
push
add
push
push
push
enter
fcom
inc
add
shll
push
inc
mov
jne,pt
lret
lahf
dec
push
je
dec
jb
push
test
daa
xlat
pushf
push
in
in
and
dec
jno
sub
outsb
dec
hlt
dec
adc
dec
idiv
adc
aas
pushf
and
mov
aas
int3
bound
pop
or
cmp
xor
shlb
in
inc
pop
add
sbb
pop
pop
fcoms
nop
or
xor
inc
lock
outsb
je
adc
das
or
inc
inc
roll
shrl
add
cmp
pop
and
inc
pop
in
push
push
mov
sub
mov
adc
cmpsb
bound
out
xchg
cmp
pop
mov
hlt
or
jg
push
loop
inc
mov
sti
dec
jns
pop
leave
insb
pop
and
push
add
push
out
pop
dec
xchg
mov
pop
fs
cmp
insb
je
mov
jae
xchg
push
add
pop
pushf
xchg
inc
sbb
sub
pop
pop
les
xchg
dec
push
mov
dec
push
mov
mov
scas
loopne
cmp
lock
mov
pop
cmp
ja
sub
daa
dec
scas
pop
jb
por
pop
test
mov
movsb
xchg
shl
addr16
xor
ds
sbb
mov
dec
inc
in
xor
lds
add
jl
test
pop
pop
mov
loopne
je
mov
add
sbbl
jmp
and
pushf
in
lock
cli
inc
out
pusha
pop
push
pop
enter
jo
xchg
sub
aaa
jb
ss
inc
dec
dec
push
add
sahf
out
add
add
sahf
out
pop
orl
dec
jl
repnz
xchg
or
fwait
in
sub
sbb
daa
cmp
jns
jbe
shrl
xchg
test
popa
out
in
inc
cmc
addr16
push
cmp
mov
add
dec
jno
inc
dec
pop
dec
dec
push
dec
and
and
add
out
in
in
lea
leave
repz
add
push
jo
pushf
pop
and
fsubp
xchg
pushf
pushf
pushf
out
idiv
les
inc
pop
and
dec
sub
jb
enter
dec
inc
dec
dec
dec
fstpl
insb
pcmpeqb
jl
test
mov
iret
in
pushf
mov
insb
mov
push
add
out
mov
jns
in
testl
movmskps
mov
cltd
xchg
add
and
bound
jl
insb
push
mov
push
iret
mov
mov
pop
addl
dec
bound
outsb
and
into
push
popf
daa
fisttps
daa
loopne
add
arpl
pusha
xchg
inc
pushf
arpl
lods
arpl
cmp
adc
inc
push
adc
sahf
pusha
js
push
out
push
pop
inc
lock
dec
repnz
fs
fs
cmp
aam
push
xchg
push
lahf
push
jb
and
dec
cmpsl
push
scas
push
pushf
fs
xchg
fildl
in
or
add
call
leave
pop
xor
add
dec
out
push
aas
loope
jb
gs
vmread
das
das
das
adcl
cltd
push
movsb
push
cs
das
das
scas
push
mov
repz
repz
or
or
or
repz
icebp
or
or
jns
push
adc
sbb
out
adc
adc
adc
jns
out
adc
adc
sahf
push
jne
sbbl
cmp
mov
sbb
in
shll
rclb
push
pop
leave
and
into
inc
jb
push
add
fs
mov
pop
cmpsl
lret
inc
icebp
cmpsb
out
add
pop
out
mov
insl
andl
jo
outsb
xor
ja
and
ljmp
add
cmp
jl
xchg
add
push
mov
sbb
adc
add
dec
and
push
xchg
push
pop
ja
xchg
xchg
push
add
cmp
test
and
daa
iret
add
mov
pop
shll
push
cmc
add
xchg
pop
xor
orb
sub
pop
ret
outsb
dec
dec
insb
int3
xchg
scas
mov
daa
fsubrl
cmp
xor
or
nop
push
mov
insb
push
push
aaa
in
inc
repnz
push
repz
sbb
and
add
leave
xor
cmpsl
scas
push
sysret
int3
mov
pop
pusha
push
sub
adc
and
mov
fcoms
imul
xchg
test
pop
and
lock
lret
inc
loopne
add
add
or
iret
sti
lahf
xchg
daa
iret
add
pop
insb
add
insb
inc
pop
and
push
mov
ja
inc
pop
dec
orps
jb
mov
mov
leave
jae
mov
in
pushf
sub
xor
push
cmp
jno
daa
inc
inc
mov
daa
js
loop
movsb
and
mov
pop
and
pop
inc
cld
xchg
cmp
test
outsb
mov
mov
push
iret
xchg
pushf
xchg
inc
jo
cwtl
outsb
mov
mov
dec
loopne,pn
pop
inc
cmovbe
cmp
or
mov
into
jno
jns
ja
in
mov
popf
cmp
mov
lahf
xchg
insl
daa
pop
jmp
addr16
fwait
jbe
pop
push
pop
iret
push
pop
addr16
iret
js
in
inc
pop
dec
xor
and
sbb
jo
nop
and
fs
jo
mov
add
outsl
xchg
rcrb
pop
call
in
pop
call
and
addr16
push
pop
xchg
mov
lret
pop
push
jb
out
jp
xchg
imul
pusha
xchg
popf
out
lods
jns
add
mov
sub
mov
lahf
idiv
pop
add
jb
lret
lret
lret
lret
and
pop
xor
pop
lret
lret
lret
lret
inc
pop
dec
pop
push
pop
pop
pop
mov
pop
imul
mov
mov
pop
cltd
pop
outsb
mov
test
xchg
xchg
xchg
xchg
femms
or
xchg
or
or
xchg
xchg
xchg
xchg
pop
push
add
xchg
add
add
pop
leave
out
xchg
jb
fisubrs
xchg
pop
fistps
stc
movl
cmp
inc
mov
dec
pop
push
repnz
pop
leave
inc
dec
repnz
pop
ja
mov
filds
mov
xchg
xor
cli
add
or
ja
mov
and
push
sub
dec
xor
or
or
inc
pop
fildl
mov
shlb
dec
and
add
add
lea
ja
push
mov
mov
iret
in
pop
bnd
adc
syscall
pusha
mov
pusha
dec
or
sub
in
or
movsb
dec
fidivrs
dec
and
aam
mov
mov
sahf
xor
mov
or
fwait
je
sysret
or
dec
xchg
adc
daa
cwtl
jb
inc
pop
jmp
das
push
aaa
jo
incl
iret
repz
pusha
leave
inc
incb
jg
pusha
call
pop
fucom
in
cmc
and
push
dec
std
pusha
pop
pop
ja
repnz
popa
cmp
out
fsubrp
dec
pop
push
cs
add
popa
imul
ds
in
mov
dec
cs
dec
rolb
xchg
xor
adc
dec
jo
push
bound
bound
push
js
sbb
sbb
sbb
sbb
bound
bound
sbb
sbb
bound
js
sbb
or
or
and
inc
arpl
cmp
enter
arpl
imul
arpl
mov
or
dec
ds
push
addr16
cs
out
int3
lock
enter
add
fs
ss
pop
fs
imul
sahf
fstpt
addl
xchg
out
cltd
mov
nop
andb
cmp
sub
fs
and
jb
gs
sub
gs
mov
mov
lock
sbbb
sahf
pushf
mov
cwtl
or
jnp
cs
push
lock
clc
add
fsts
data16
sbb
xchg
push
sbb
pushw
data16
mov
jnp
data16
mov
inc
nop
out
fwait
add
js
xchg
loopne
xchg
lock
jnp
dec
clc
xchg
xchg
pushf
loope
imull
addr16
ja
jnp
add
jg
xchg
xor
addr16
loopne
add
outsl
cmpsl
mov
sub
daa
push
push
jmp
pushf
add
push
push
sub
push
jno
dec
push
mov
sub
decl
cmp
sbb
cmp
cmp
aad
out
leave
out
cmp
or
or
jle
scas
test
imul
xchg
xchg
xchg
imul
imul
imul
cmp
arpl
movsl
imul
imul
repz
fwait
loopne
push
push
push
push
pop
mov
fildll
arpl
add
in
enter
xchg
stos
push
mov
iret
repz
cs
add
daa
fldt
jecxz
sub
incl
imul
imul
cs
dec
and
lahf
or
xchg
mov
aas
add
cmp
push
daa
dec
mov
testl
in
push
rcll
subl
jns
leave
dec
push
push
add
jb
cmpsl
dec
add
data16
outsb
insb
fwait
cmp
ss
jle
or
cmpsl
or
fwait
dec
sub
iret
jno
pop
jo
mov
pop
xorb
push
and
into
pop
sub
xor
insl
adc
fcmovb
ja
arpl
xor
cmpsb
incl
jo
pop
xor
inc
mov
shrl
rep
jg
xor
jb
insl
adc
mov
push
dec
outsb
pushl
xchg
and
imul
lock
aad
cmpsb
outsl
xchg
push
add
mov
add
iret
push
xlat
outsb
fildll
jno
pop
test
add
or
adc
outsl
and
xchg
xchg
xchg
xchg
outsl
xor
outsl
inc
outsl
dec
xchg
xchg
xchg
xchg
outsl
push
outsl
pop
outsl
bound
in
insl
xchg
outsl
jb
ud2
pop
or
in
in
or
push
in
in
add
jns
out
jp
sbbb
out
sahf
mov
sbb
out
mov
iret
jae
repnz
ret
in
repz
shlb
into
fisubrl
lods
nop
sub
leave
push
add
jo
test
dec
ja
cmp
inc
pop
fnsetpm(287
ret
jmp
bound
add
push
pop
dec
negb
jp
repz
xchg
add
add
leave
jae
mov
push
pushf
enter
mov
jno
mov
push
pop
mov
scas
and
sub
out
ficomps
cmp
or
outsb
cmp
dec
or
pop
pop
pmulhuw
sahf
punpcklbw
jo
repnz
lock
xchg
jecxz
jb
mov
ja
fmull
inc
push
mov
cmpb
push
aaa
hlt
adc
aaa
sbb
sbb
daa
sub
repnz
fbstp
jb
jb
fsubrp
xor
das
dec
push
add
jmp
pop
pop
jb
pusha
mov
cmpsb
mov
test
pop
mov
into
mov
stos
jo
cmpsb
daa
inc
push
andb
invd
cmpsl
sbb
sbb
enter
fisubs
pop
sbb
jb
add
sbb
add
jae
jae
jae
and
inc
das
jae
inc
jae
mov
jb
jae
jae
jae
jae
iret
repz
jl
or
inc
ds
jae
jae
test
mov
pushf
dec
and
pop
mov
jae
and
mov
jae
jae
mov
je
sub
in
ss
je
je
je
mov
sbb
je
pop
push
out
ss
enter
je
je
bswap
enter
or
push
pushf
pushf
pop
and
enter
mov
fadds
in
add
jne
jne
inc
mov
jne
jne
jne
cltd
dec
ds
mov
xor
cmp
inc
repnz
cwtl
cmpsl
push
mov
leave
leave
leave
ror
rcrb
jb
rcrb
loopne
mov
ret
or
or
inc
mov
jbe
jbe
jbe
dec
push
push
aaa
sub
and
sbb
cmp
out
test
call
cmp
xchg
jl
mov
push
xchg
pushf
in
ljmp
leave
xchg
mov
repnz
shr
daa
inc
decl
dec
lea
jns
xchg
and
jbe
add
aaa
repnz
repz
adc
sbb
add
ja
movsb
mov
inc
push
cmovg
cmpsl
in
in
pop
xchg
mov
mov
jg
ja
add
popf
daa
movsl
push
add
xchg
out
lods
add
sahf
xchg
aad
repz
xchg
fucom
pop
in
or
iret
push
std
divps
das
or
unpcklps
enter
mov
js
js
out
pop
pop
punpcklwd
imul
lret
xchg
dec
loope
mov
and
fwait
or
mov
sbb
push
mov
jae
fmuls
xor
std
popl
xchg
xchg
inc
cwtl
mov
sahf
out
xchg
jns
push
or
or
mov
js
into
dec
jns
nop
out
cmp
xlat
xchg
or
xchg
lods
test
cmp
mov
push
inc
pop
repnz
sarl
and
call
pop
jp
pop
jp
jp
stc
mov
jp
push
sub
bound
lahf
fstp
in
in
jb
jp
jb
pop
mov
or
pop
outsl
or
add
or
lahf
or
pop
rcrb
lret
je
out
ficompl
add
lar
inc
negb
jp
mov
fsts
or
adc
sub
mov
push
jle
jnp
push
xchg
jns
jne
push
jnp
push
add
in
in
outsb
pop
jbe
jle
mov
sysret
mov
cmp
or
or
or
mov
mov
jnp
jnp
and
xchg
adc
xchg
add
pop
pop
sbb
sub
leave
mov
jl
inc
jl
xchg
mov
into
leave
inc
gs
pop
setno
push
add
xchg
pop
and
sub
add
in
iret
daa
mov
sub
inc
jbe
xchg
js
mov
addr16
dec
dec
cmpsb
out
stc
add
mov
inc
and
leave
xor
xchg
repnz
sbb
pop
cmp
into
inc
nop
setnp
jae
mov
fcomps
jb
jge
loopne
call
repz
add
daa
das
push
out
jle
add
add
in
ficomps
jle
jle
in
in
jle
jle
jle
aas
in
jmp
or
iret
repz
pop
ds
pusha
pop
push
cmp
sbb
push
sbb
insl
cmp
mov
jns
mov
xchg
jl
loop
ja
in
xchg
fcoml
daa
cld
shlb
or
loopne
xchg
test
pop
jg
pusha
adc
inc
imul
cmp
pop
jg
jg
jg
jg
inc
inc
mov
cmpb
flds
jns
jg
sbb
popl
scas
lahf
loopne
scas
nop
xchg
lock
dec
rcr
mov
sub
jg
jg
cmp
shll
add
enter
sbb
jl
pop
xor
push
mov
push
xchg
out
jne
dec
call
popa
daa
iret
repz
push
orb
cwtl
sbbb
xchg
dec
out
fbld
wbinvd
xor
out
ss
cmpl
dec
cmc
test
add
dec
outsl
adcl
subl
psrld
and
iret
or
fstl
push
xlat
sbb
clts
enter
add
orl
and
cmp
jns
sahf
adc
adc
fimuls
out
push
bound
jb
dec
and
sbb
cmp
aaa
popf
push
pop
push
out
cmpb
nopl
enter
add
addb
call
or
and
mov
push
or
or
repnz
repz
sub
xor
adc
pop
inc
mov
andl
mov
add
sbb
xchg
xchg
xchg
lcall
push
stos
xorl
pop
enter
ret
sbb
sub
jmp
cmp
sahf
mov
pushf
inc
xchg
dec
out
push
loope
daa
mov
inc
push
inc
mov
fistps
sbb
jns
addl
ja
or
push
inc
daa
fucom
and
sub
test
popf
push
cmp
out
add
pusha
add
mov
mov
jbe
xchg
cmpsb
scas
cmpxchg8b
iret
popf
fildl
hlt
ljmp
pop
ja
sahf
dec
insl
xchg
xchg
mov
mov
insb
xchg
pushf
pop
mov
mov
mov
pushf
mov
mov
xchg
mov
or
sub
and
leave
repz
inc
push
add
mov
push
xchg
vpshaq
fisttps
jl
mov
loop,pt
xchg
addps
sbb
lahf
aad
inc
pop
adc
xchg
in
add
mov
stos
mov
jns
xchg
add
xchg
out
sahf
pusha
add
add
mov
or
repnz
cwtl
push
or
in
test
mov
push
iret
repz
ret
adc
adc
sbb
roll
xchg
and
or
daa
adc
ss
ss
in
dec
mov
and
fmulp
add
cwtl
mov
stos
push
add
or
jns
setle
das
ret
mov
mov
mov
pop
jmp
fcomip
mov
inc
mov
xchg
push
sbb
xorb
lods
ja
in
jmp
mov
push
xor
out
push
mov
push
rorl
xchg
xor
rorl
mov
mov
dec
stc
outsl
lmsw
jmp
or
adc
mov
adc
mov
push
mov
mov
sahf
xchg
xlat
lsl
cmp
mov
movsb
jle
fldt
mov
aam
scas
pop
mov
dec
xchg
fists
push
and
mov
mov
fmull
orb
in
jmp
movsl
mov
dec
es
push
pop
add
out
mov
add
xchg
xchg
out
arpl
imul
repnz
inc
push
or
out
jns
push
mov
rorl
or
dec
and
enter
daa
daa
pop
dec
call
cmp
mov
movups
push
cmp
shrl
add
dec
pop
daa
daa
daa
mov
divps
movsb
xchg
daa
daa
daa
ret
loop
mov
mov
xchg
or
dec
das
jo
repz
daa
mov
outsb
daa
iret
sbb
fmuls
cld
scas
push
cmp
in
push
and
cmp
jp
daa
iret
and
dec
pop
and
sahf
addr16
jo
xchg
jl
mov
int3
cmpsl
js
pop
xor
clc
jecxz
rclb
testb
pushf
lahf
nop
test
enter
aas
nop
inc
nop
dec
nop
fnstsw
in
nop
push
add
lahf
xchg
push
dec
dec
cs
ret
dec
dec
dec
fsubrp
cli
mov
jb
inc
repnz
xchg
sbb
cmp
das
push
xchg
mov
pop
xchg
xchg
outsb
push
repz
or
jle
frstor
and
xchg
xchg
sahf
and
cmpsb
pmaxub
dec
xor
fisttpl
fabs
pop
sub
jmp
jns
stc
pop
adc
xor
cmp
push
xchg
jns
jns
pop
xchg
xchg
outsb
xchg
jbe
fistpll
jns
xchg
xchg
lret
lret
lret
xchg
xchg
mov
push
sbb
cmp
repz
sbb
dec
jae
rcrl
xchg
pop
lock
ds
xchg
sti
xchg
and
xchg
push
out
sahf
testl
and
sub
xor
cmp
jns
out
inc
or
pop
cmp
dec
aaa
cvttps2pi
sub
pop
dec
jb
xor
jb
sub
mov
pop
mov
fistps
push
das
sbb
xchg
enter
pop
out
xchg
push
jmp
add
or
outsb
mov
xchg
pop
movntps
and
jns
insb
cs
stos
push
xchg
mov
adc
lods
xlat
iret
mov
leave
leave
add
bswap
xchg
xchg
xchg
mov
leave
leave
leave
leave
sbb
iret
leave
leave
jne
test
lea
leave
repz
pop
in
xchg
lgs
aaa
add
fstpt
jecxz
add
pop
cmp
dec
dec
outsb
mov
das
pop
punpcklbw
dec
sahf
out
and
xchg
leave
rep
filds
cmpxchg
sahf
outsb
daa
cmpsb
cmp
mov
mov
out
dec
ficomps
stc
add
push
sub
sahf
out
jns
push
outsl
xor
out
dec
jg
xchg
xor
sahf
xchg
aaa
lahf
cmpsl
imul
iret
sbb
sahf
cmp
mov
inc
pop
and
xchg
add
movsl
cwtl
incl
xchg
scas
jnp
xchg
cmp
cwtl
push
push
jbe
pusha
orl
mov
mov
inc
jnp
mov
pmulhuw
scas
ja
cmp
adc
test
cmp
add
cmp
daa
orl
pop
mov
jns
into
ud2
fxch
leave
leave
repz
out
cli
out
popf
jmp
lcall
xchg
sub
aas
dec
jns
xchg
out
push
pusha
sbb
sahf
out
imul
sbb
mov
out
jns
mov
add
fstps
jmp
lcall
xchg
scas
inc
fwait
mov
xchg
rorb
push
mov
jb
adcb
fwait
fwait
cmp
insl
push
cs
test
jns
out
mov
mov
in
aas
enter
fcomps
or
mov
push
ds
iret
lock
ror
rep
push
jg
movups
adc
pushf
out
mov
sub
je
adc
cmp
pop
dec
jmp
add
sbb
repnz
push
scas
mov
pop
in
jnp
adcl
mov
push
scas
xlat
mov
add
mov
cmpsl
push
or
mulb
add
movsl
hlt
adc
daa
mov
inc
cmp
inc
cmovl
imul
xchg
lods
jg
add
dec
xchg
jns
xchg
xchg
lahf
cmpsl
scas
push
mov
mov
cmp
clc
fimull
mov
loop
ja
pop
mov
mov
adc
pop
xchg
das
jmp
popf
fmull
addps
fdivl
mov
xchg
push
push
imul
mov
mov
mov
dec
sahf
out
add
out
push
and
leave
leave
out
testb
sbb
mov
xlat
sbb
mov
lahf
cmp
leave
inc
fwait
int3
cmpsl
fs
and
fcmovne
je
xchg
mov
mov
xchg
scas
mov
sahf
xchg
out
mov
cmp
mov
add
pushf
jmp
adc
sbb
jns
test
jg
push
add
pop
push
add
fsubrp
jbe
fbstp
jge
test
decb
mov
cmp
or
and
mov
outsb
mov
fcoms
mul
sti
add
sbb
and
outsb
mov
inc
xchg
add
xor
mov
or
lahf
jo
shr
movsb
jg
mov
mov
jbe
pop
int3
add
add
mov
mov
mov
je
xor
pop
inc
outsl
shll
cmp
dec
mov
xchg
leave
js
orb
daa
pop
sub
jne
leave
add
syscall
stc
dec
inc
jle
pop
mov
mov
sub
dec
mov
push
mov
jne
xchg
xchg
xchg
scas
filds
mov
xchg
mov
ret
xchg
xchg
xchg
xchg
mov
out
mov
xchg
mov
sbb
pop
nopl
aas
in
in
sbb
sbb
out
in
push
adc
jns
xor
sub
cmp
pop
push
xor
push
or
mov
outsb
mov
inc
cmp
in
mov
jge
push
cmp
cmp
cmp
cmp
mov
mov
iret
repz
inc
loopne
jmp
jns
repz
testb
inc
decb
ja
cmp
pop
dec
push
dec
pop
fucom
jns
fs
outsl
cmovge
jp
test
repz
cmpsb
push
mov
outsb
daa
iret
repz
fnstsw
dec
dec
call
cmp
repnz
into
sahf
pushf
pushf
sub
cmpsb
sub
mov
mov
cmpsb
jg
cmpsb
mov
out
and
sarb
outsl
fcomps
or
hlt
jbe
loopne
cmpsl
jg
cmpsl
in
cmp
cmpsl
cmpsl
xor
js
cmpsb
jg
mov
add
push
jns
ja
sbb
sbb
sbb
dec
sahf
out
sbb
inc
push
sbb
pushf
jmp
jg
cmpsl
nop
cmpsl
ljmp
mov
xchg
sahf
add
out
cmpsl
iret
repz
pop
fadds
add
call
fwait
inc
subb
mov
mov
adc
push
daa
int3
mov
test
test
cmp
push
sbb
popf
pushf
pushf
pushf
js
mov
out
or
loopne
gs
test
test
test
pop
movsb
xchg
int
or
push
cmp
clc
lea
test
loope
push
push
sbb
ja
cmp
inc
daa
dec
test
push
test
inc
repnz
mov
in
jbe
add
pop
scas
mov
test
shrb
xchg
xchg
test
cld
in
xor
pop
stos
adc
out
xor
adc
sahf
out
dec
push
pop
cs
cmp
sbbb
mov
repnz
repz
sbb
xchg
outsb
nopl
mov
cmp
in
and
fcomps
and
fwait
cmp
stc
add
outsl
femms
sbb
daa
iret
daa
sbb
and
sarb
jns
out
push
add
cmp
in
test
leave
push
repnz
testb
leave
leave
loopne
adc
add
xor
outsb
repnz
push
ds
inc
psubsw
xchg
add
dec
or
sbb
repnz
push
lods
pop
lods
data16
jno
cmp
mov
movups
or
mov
adc
cmp
mov
jns
out
sbb
sbb
jns
and
push
pop
fdiv
cmp
aaa
mov
and
pop
dec
sahf
ja
push
and
add
and
xor
or
daa
ficoms
iret
push
sub
and
das
jo
out
sub
add
cmpsb
stc
sub
jle
inc
add
sub
xchg
xchg
sub
das
pusha
ret
push
cmp
subb
jns
xchg
pop
mov
mov
stos
out
push
dec
lods
das
out
aaa
mov
push
jg
jns
enter
push
add
adc
jns
pop
cvtpi2ps
fistl
call
and
jo
sahf
out
ret
fistps
add
jns
add
add
cmp
xchg
je
out
fmuls
pop
jecxz
pushf
cmp
jle
out
idiv
enter
lahf
push
scas
call
scas
sbb
sbb
jb
daa
scas
xor
cmpsb
xchg
int
outsl
sbb
les
scas
scas
scas
jns
out
dec
cs
add
cmp
scas
jg
pand
or
pop
add
lds
pop
or
mov
in
sub
aaa
mov
dec
pop
cmp
in
invd
pop
arpl
or
cmp
repz
test
push
lcall
dec
or
mov
jns
stos
daa
shll
mov
iret
cmp
push
sbb
or
repz
and
out
ds
inc
and
fisttpll
out
and
movq
jns
out
and
xchg
out
sahf
mov
push
sbb
aad
mov
iret
mov
mov
mov
mov
mov
xchg
and
mov
mov
mov
repz
push
push
dec
pop
push
jbe
cmp
pop
or
bswap
leave
leave
in
jo
js
mov
cmp
repz
adc
mov
mov
mov
fucomi
ss
bswap
push
sbb
jae
rcl
sbb
sbb
sahf
outsb
repnz
push
lock
mov
jb
adc
add
jns
sahf
out
and
sub
repz
in
cmp
sub
cmp
leave
dec
push
push
sub
push
fsubrl
iret
sub
pop
pusha
fcmovne
repz
mov
nop
cwtl
bswap
in
lds
jne
push
xchg
repz
and
push
add
or
ds
add
aas
xchg
adc
sbb
mov
add
aas
inc
push
sbb
adc
sub
test
xchg
dec
or
aaa
sub
out
dec
add
inc
cmp
cmp
repz
sub
cmpsl
stc
cmp
sbb
clc
enter
jns
call
aam
sahf
out
ror
enter
leave
repz
mov
sahf
out
ficoms
insb
pusha
jns
out
push
push
dec
inc
sub
dec
shl
or
add
pop
cmpsb
nop
inc
lcall
mov
cmp
loop
mov
add
out
sbb
sahf
out
pop
or
or
aaa
or
mov
imul
daa
adc
adc
xchg
xchg
fisttpl
xor
push
addr16
das
push
xorps
loopne
insb
das
insl
push
and
pop
jo
jns
push
pop
andb
jo
mov
test
xchg
fcmovne
leave
repz
in
adcb
xlat
pop
sub
addr16
in
sbb
add
add
inc
and
xor
cwtl
cmp
dec
ljmp
fs
test
incb
add
movsb
add
in
lods
pusha
cmpb
cmpsb
fisttps
mov
sbbl
mov
xchg
inc
mov
popf
pop
rcrb
mov
sbb
out
ja
stc
in
call
adc
push
cmpsl
in
pop
fidivrl
xor
fcomp
loopne
jb
icebp
dec
les
inc
and
pop
push
subb
cmpsl
mov
inc
xor
push
fadds
fiaddl
fcomps
mov
xlat
incl
push
sub
xchg
mov
in
insb
and
das
aas
pop
loopne
mov
aas
xchg
push
and
pop
lock
cmp
repz
or
adc
cmpsl
stc
aam
adc
out
push
sbb
iret
repz
hlt
int
mov
iret
repz
push
cmp
sub
jbe
fmul
mov
or
jns
testl
jns
jp
cmp
jns
cld
cmp
inc
out
pop
xor
push
sub
call
mov
jle
aas
incl
add
jbe
rcrb
jg
and
push
dec
inc
mov
insb
jbe
jae
xorb
addr16
fwait
test
push
push
push
pop
inc
jg
dec
divl
inc
push
xchg
lea
aaa
push
aas
pop
pop
adc
pop
xor
fisubrs
fistl
sub
jg
mulb
and
inc
paddusw
cmp
sub
add
dec
pop
xor
push
push
shll
xchg
inc
xchg
es
inc
roll
iret
repz
push
sbb
sbb
rorl
jecxz
push
pop
fs
loop
or
push
sub
or
cwtl
or
pop
push
lock
outsl
sarb
mov
and
push
or
add
out
out
or
cld
adc
hlt
out
iret
repz
adc
rcrb
sahf
out
sahf
enter
mov
jns
and
sahf
out
movsb
es
xor
in
pop
clc
mov
nop
jg
movups
imul
push
test
xor
add
mov
mov
jns
out
cmp
pop
js
mov
xor
out
repz
xor
sahf
aaa
in
insl
add
push
pop
ja
testl
jae
das
push
stos
xorb
insb
addr16
add
inc
pop
enter
and
cli
or
or
ret
seto
repnz
adc
in
jl
mov
leave
sbb
into
sbb
sar
decl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
in
incl
inc
stc
mov
adc
mov
decl
js
inc
ljmp
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
jle
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
push
jmp
dec
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
lcall
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
jmp
std
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
lahf
flds
jmp
mov
push
pusha
les
add
sti
aas
jno
jg
or
mov
pop
fs
dec
lea
aas
ret
shrl
mov
call
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
jmp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
xchg
inc
push
cmp
int
mov
addr16
push
mov
xchg
aas
mov
mov
jp
popa
push
pop
sarl
jl
mov
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
incl
fstl
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
incl
adc
xor
push
scas
into
imul
faddp
jge
call
mov
lcall
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
fucom
fidivs
les
in
stos
pop
inc
inc
je
inc
inc
push
dec
movsl
jb
cmp
jnp
cmpsl
pushl
pop
ja
popa
push
out
mov
les
hlt
push
xor
jmp
mov
mov
push
movsb
mov
jmp
aad
mov
rclb
mov
sub
mov
sbb
dec
jno
mov
test
ficompl
jmp
mov
hlt
movl
imul
incl
mov
add
insb
push
arpl
psubd
or
outsb
cmp
call
imul
addr16
add
aam
dec
std
test
movsl
cli
test
xor
cwtl
mov
leave
mov
jecxz
fdivs
jne
scas
pushl
pop
iret
or
shrl
push
ficoms
push
xlat
enter
call
mov
and
mov
cltd
xchg
mov
mov
or
or
and
decl
mov
jl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
adc
call
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
fisttps
or
mov
cmp
fs
add
jmp
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
decl
cmc
fnstenv
adc
mov
mov
bound
ficoml
gs
jmp
sbb
aam
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
ljmp
shll
jmp
outsb
xor
mov
sarb
incl
in
add
pop
dec
or
cmp
add
daa
adc
or
and
ljmp
mov
outsl
and
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
orl
mov
in
mov
mov
add
inc
call
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
decl
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
test
ss
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fcomip
mov
mov
mov
aad
mov
call
xchg
shll
push
repnz
fbstp
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
decl
push
xchg
ja
int3
add
mov
das
es
lds
or
add
mov
cmpsl
call
ret
shlb
scas
fldcw
ret
es
pushf
mov
insl
add
ss
jmp
incl
push
add
adc
mov
jnp
sbb
xchg
or
pushl
or
rcl
xchg
aam
clc
mov
push
int
mov
idiv
jg
jmp
ja
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
jmp
clc
sar
imul
push
js
or
push
addl
mov
mov
incl
cmp
cmpsl
notl
pusha
rorb
imul
loop
push
scas
fcompl
fldenv
filds
aaa
mov
mov
sahf
mov
inc
jmp
push
repnz
lret
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
icebp
out
add
movsb
xchg
sbbb
push
pop
out
in
jo
pusha
push
mov
clc
xchg
inc
push
xlat
fcomps
fcmovu
fsubp
xchg
out
loop
in
sahf
out
sahf
call
in
jns
out
repz
cmc
div
jecxz
sahf
out
stc
cli
sti
cld
pop
inc
lret
adc
mov
inc
cmpsl
push
mov
or
pop
or
arpl
jnp
inc
push
addr16
orb
je
add
outsb
sub
roll
bound
inc
cmpb
xchg
pop
stos
std
popa
je
push
cltd
out
aam
das
aas
and
inc
dec
push
push
lods
sub
and
aas
pop
inc
cmp
pop
bound
xor
aaa
idiv
cmp
popa
arpl
cmp
arpl
or
xor
aam
xor
bound
popa
cli
shl
push
inc
jbe
pop
insb
imul
ds
gs
push
dec
in
mov
inc
mov
enter
inc
dec
push
hlt
fs
lock
pop
or
or
fs
gs
je
scas
or
push
jbe
and
inc
aas
mov
lds
and
jle
gs
inc
add
test
sub
sub
fldl
adc
xchg
insb
popa
jns
push
or
sahf
pop
dec
insb
fadd
cmp
jns
xchg
cmp
outsl
adc
aaa
aas
pusha
pop
push
cmovb
aas
rorl
or
sub
or
int
pop
and
jbe
aas
push
xor
pop
inc
inc
movl
jbe
xchg
je,pn
jo
inc
inc
add
in
adc
ds
mov
mov
cmp
ror
dec
push
dec
cmp
inc
pusha
stos
or
cmp
xchg
mov
xchg
addl
mov
dec
jge
out
stos
pop
xor
xor
test
mov
or
add
fidivrl
push
clc
xchg
into
pop
jo
mov
pushf
inc
adc
jg
cli
adc
dec
push
mov
add
rorl
pop
outsl
push
adc
mov
sbb
sbb
lahf
cmp
mov
pop
addr16
mov
or
and
add
and
pop
xor
jo
cmpsl
and
lahf
lahf
push
outsl
bound
sub
push
mov
jno
adc
dec
mov
pop
es
or
in
nop
test
pop
cmp
xor
out
arpl
andl
mov
rcll
adc
jo
sub
inc
addr16
xchg
jl
outsl
insb
jns
das
pop
push
add
inc
jb
push
notl
gs
inc
outsl
arpl
xor
xlat
mov
in
daa
inc
push
bound
ja
inc
jbe
push
xchg
xor
addr16
imul
ja
dec
xor
and
cmp
daa
fcoml
das
xor
addl
or
iret
gs
xchg
mov
xor
dec
pop
sub
jnp
inc
mov
daa
sbb
sbb
push
vpsllw
stc
inc
push
inc
dec
pop
bound
jle
push
jns
arpl
je
scas
xor
inc
pusha
in
orb
pusha
insl
mov
sub
jmp
sub
and
xlat
testl
sub
adc
enter
adcb
xor
and
cli
inc
xchg
xchg
decb
fdivr
loopne
adc
inc
shr
sbb
sbb
fstpt
add
add
or
add
pop
push
or
or
or
or
or
adc
adc
or
push
adc
push
add
pop
sbb
adc
fnsave
mov
add
or
adc
imul
add
rolb
pop
add
add
add
adc
xor
add
adc
push
inc
mov
mov
add
jge
ljmp
call
xor
adc
pop
and
xor
inc
mov
adc
pusha
or
jb
js
adc
clc
push
mov
xchg
sbbb
inc
or
and
add
jno
and
arpl
dec
inc
or
add
nop
cmpb
add
sub
addl
and
scas
pushf
into
add
out
scas
adc
sarb
adc
push
adc
pop
popa
xor
stc
out
adc
or
xchg
mov
lock
pop
stos
and
loope
icebp
mov
mov
push
xor
xorb
scas
fiaddl
or
fisttps
inc
mov
dec
mov
call
xchg
and
sub
std
cmpsb
xor
aas
imul
mov
cmp
inc
or
pop
les
fsts
dec
add
or
cmp
adc
ja
out
cmp
xor
mov
cmpsl
shll
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
stc
stos
pusha
inc
inc
xchg
pusha
add
std
or
ds
add
lds
cld
cli
and
popa
cld
pushl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
outsb
cli
mov
lahf
std
movsl
jecxz
pop
mov
leave
mov
mov
xchg
jg
or
insb
sub
push
addr16
out
or
push
push
xchg
add
repnz
inc
lock
scas
jle
pushl
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
fs
mulb
pop
adc
test
in
sar
decl
sti
ret
scas
adc
mov
xor
lods
scas
xchg
test
call
scas
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
decl
dec
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
mov
jp
push
out
or
push
sahf
pop
clc
sti
jg
lea
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
sti
cld
cltd
inc
sbb
ret
outsl
sahf
mov
mov
out
pop
jb
mov
mov
mov
sub
loope
fwait
sbbb
mov
dec
jp
push
gs
in
outsl
jmp
add
stc
loope
mov
sar
andl
aas
icebp
testb
mov
ljmp
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
sbb
mov
dec
adc
push
lock
lods
jp
testb
inc
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
andl
mov
ljmp
adc
aaa
xchg
in
add
inc
adc
loope
aaa
dec
outsl
mov
or
icebp
aas
std
cli
push
push
push
idivl
pushl
sub
inc
scas
inc
mov
jg
je,pn
sub
mov
mov
scas
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
add
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
pop
xor
jmp
in
stos
imul
hlt
sub
movsb
add
lahf
scas
decl
gs
std
xorb
jg
aad
adc
add
pushl
ret
das
pop
pop
pop
shlb
out
sarb
sbbl
call
jno
or
sarb
std
pop
les
cli
mov
mov
inc
arpl
ljmp
pop
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
ljmp
or
adc
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
ljmp
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
jle
call
xchg
or
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
pushl
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
clc
jg
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
outsl
incl
mov
mov
cmp
xchg
mov
cwtl
pop
xchg
ftst
pop
imul
inc
and
jae
shrb
mov
and
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
pop
mov
push
iret
adc
pop
cld
addl
adc
and
fnstenv
push
enter
jecxz
scas
sub
cld
aas
clc
aas
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
pop
std
fildll
idivb
add
jg
mov
aad
test
bound
xchg
movsb
mov
iret
push
push
std
mov
sbb
stos
icebp
pop
incb
jno
adc
mov
push
inc
jecxz
sbb
sarl
adc
loopne
fcmovb
mov
sar
adc
lahf
xor
jg
push
imul
dec
push
in
aas
mov
fisubl
cmp
fsubrl
lock
and
incl
sbb
clc
xchg
das
clc
jmp
or
and
mov
adc
mov
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
ret
lock
data16
pop
nop
mov
out
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
jmp
divb
iret
dec
xor
fsubr
fistps
lds
fidivrl
jg
pop
insb
insb
adc
dec
mov
sub
jge
xor
idivb
ja
lahf
les
sbb
sbb
cld
addl
icebp
decl
inc
sbb
mov
lahf
outsl
int3
push
sbb
push
test
sti
jle
xchg
popa
out
add
paddsw
pop
outsl
xchg
inc
test
in
jge
popa
push
test
outsl
clc
lcall
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
std
rolb
add
sub
shl
cld
mov
test
mov
pop
jg
pop
shrb
rcl
jg
adc
in
pushl
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
jecxz
lcall
lds
push
pop
adc
imul
or
ljmp
pop
xor
rorb
and
add
cmpsl
push
sbb
mov
pop
pushl
enter
mov
into
test
xchg
movsb
insb
or
and
xchg
jnp
movsb
fidivrs
clc
insb
test
cld
jg
aas
repz
outsl
lock
in
jmp
stc
out
mov
clc
push
std
call
jl
icebp
fs
mov
out
jne
or
cmc
mov
push
mov
fimuls
out
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rolb
outsb
cli
fucomi
pop
or
or
dec
ss
mulb
inc
lods
movsb
or
repnz
push
decb
mov
jl
call
pop
cmc
fisttpl
cmpsl
lret
pop
in
cmp
dec
filds
mov
pop
lock
jmp
hlt
dec
mov
push
mov
sbb
xlat
inc
aas
mov
jg
mov
loopne
fisttps
addr16
sbb
cld
daa
jp
std
adc
outsb
cmp
inc
cltd
or
mov
ret
nop
cmp
das
incb
adc
stos
imul
cmc
cld
idivl
mov
and
loope
jae
shll
je
jge
call
mov
jg
stc
add
out
f2xm1
aas
inc
icebp
mov
loope
mov
cmpsl
popf
lds
aaa
cld
sti
mov
fbstp
push
dec
outsl
das
jge
mov
inc
add
cmpsb
cmp
call
mov
iret
decb
adc
mov
inc
sbb
and
call
mov
pop
add
jg
push
mov
inc
add
nop
test
aaa
std
fisttps
fdivp
push
dec
inc
sbb
xchg
fimull
cmp
aas
icebp
ret
ror
sbb
jae
arpl
adc
jbe
mov
mov
pop
clc
loope
loope
mov
or
scas
sbbb
jg
mov
xchg
stos
jmp
xor
sarl
jne
push
cmp
repz
jno
pop
gs
imull
jg
pop
out
jg
jno
ret
xchg
xchg
cmp
mov
cwtl
arpl
out
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
ljmp
pop
outsl
jmp
std
mov
daa
jmp
faddl
add
inc
push
jae
push
pop
mov
pop
add
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
mov
add
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cli
jmp
pop
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
or
add
smsw
inc
xchg
int3
les
push
cmp
pop
mov
bsf
popf
int3
pop
iret
and
add
fld
adc
cwtl
jne
jo
adc
lret
lods
mov
lea
and
icebp
mov
xor
or
sbb
clc
push
mov
fcomp
add
fwait
pop
lds
mov
push
rclb
clc
and
mov
and
call
mov
mov
mov
out
repnz
add
push
xchg
cmpsl
std
sub
pushl
cmp
mov
addr16
mov
pushf
xchg
jmp
pop
mov
cli
and
stc
adc
push
jle
mov
hlt
cmp
scas
jecxz
push
pop
adc
jg
lods
loopne
lods
jmp
sub
mov
dec
inc
ja
je
jle
cmp
je
mov
lcall
xchg
es
jne
cltd
sbb
and
dec
inc
sahf
in
cmc
repz
or
pop
pop
or
hlt
jecxz
aad
aas
ljmp
sub
add
inc
pop
lcall
sub
fildl
sbb
push
xlat
aam
jg
insl
std
mov
adc
or
inc
sub
lcall
xor
out
inc
cmpsl
es
test
aas
jae
lea
jns
lahf
cld
mov
lret
jmp
insb
xor
lock
jge
lret
nop
push
push
mov
jno
push
loope
mov
sahf
jg
mov
call
xchg
sub
push
pop
lods
loop
jb
mov
and
dec
test
decl
jno
push
xor
aam
pop
jbe
pop
test
add
push
aas
rol
jmp
std
push
stos
pop
push
mov
push
imul
icebp
and
jge
in
lds
xchg
incl
add
jb
inc
scas
mov
fcmovnu
jnp
xchg
lret
es
pop
jae
mov
xchg
dec
out
jp
jg
or
mov
sbbl
mov
and
mov
fs
xor
jne
pushl
dec
pushl
inc
lret
stc
int3
icebp
jg
insb
repnz
daa
cmp
das
out
inc
popw
call
fsubs
and
loope
iret
std
es
lds
sbbb
sub
or
add
cmp
mov
sbb
inc
xacquire
dec
adc
cmp
gs
int
call
test
movsl
lea
push
ljmp
jno
cltd
aad
ds
mov
arpl
mov
dec
jmp
daa
sub
fcomps
cmp
cld
sub
ljmp
jge
lret
stos
ds
mov
pop
icebp
repnz
fs
jmp
dec
mov
pushl
cld
xor
divl
repz
push
loopne
jg
jb
add
shlb
cmp
adc
stos
xchg
cmpsb
sub
jns
out
imul
xchg
enter
and
sub
incl
stos
outsb
lock
push
xchg
pop
not
flds
fsubl
sbb
cmpsl
add
mov
dec
pushf
pmaxub
in
loope
loopew
add
jmp
mov
mov
lret
negl
sar
decl
push
imul
mov
push
xchg
mov
cmp
sbb
call
or
and
or
cmpsl
js
cmc
pusha
out
push
cmp
pop
loop
push
jno
repz
mov
xchg
inc
repz
ret
sti
xor
pop
scas
sub
mov
in
fs
sbb
mov
or
xor
std
imul
pop
out
jnp
xor
ds
mov
and
pop
mov
insl
sub
pushl
jns
inc
pusha
inc
aam
and
int
and
mov
cmp
sub
call
adc
xchg
push
mov
insb
and
inc
xor
addr16
jo
pop
jbe
jae
fcomip
incl
dec
addr16
pop
inc
inc
ret
clc
adc
js
adc
cmp
cmp
das
mov
incl
pushf
sub
and
or
jae
xlat
xchg
mov
imul
stos
fcomip
jmp
hlt
cmpsb
imul
addr16
ret
adc
out
dec
adc
data16
and
push
in
jmp
gs
push
dec
push
mov
cmp
pop
lods
cmpsl
push
sbb
incl
cmpsl
jle
mov
or
out
push
shlb
test
ret
clc
fistpl
repz
in
and
out
enter
adc
lret
in
dec
jp
imul
adc
fadds
aas
pop
fs
dec
xor
je
mov
push
imul
add
popf
movsl
insb
mov
fbstp
cmp
incl
imul
shlb
or
sub
call
inc
outsl
scas
mov
sarl
sti
add
repnz
xor
das
les
jl
mov
inc
jecxz
cmp
std
pop
pop
add
mov
addr16
and
pop
cmp
into
pop
pop
ret
and
in
movsb
fsubrp
pop
mov
fcomp
inc
push
mov
fwait
call
loopne
sahf
lock
pushf
and
mov
leave
xchg
lret
ss
pop
dec
inc
ljmp
in
mov
push
jmp
mov
lcall
div
inc
subl
jae
dec
mulb
fsubl
dec
hlt
hlt
adc
out
pop
pushl
clc
push
test
jecxz
dec
mov
sub
and
push
jle
decl
mov
push
sti
xlat
or
mov
ret
jns
nop
jnp
decb
push
outsl
leavew
rorl
jb
call
ret
pop
fs
ds
cltd
fcomi
jns
insb
or
outsl
push
and
loope
jmp
test
rcr
movsb
imul
out
cmp
and
dec
xchg
add
jne
jbe
daa
notb
jg
xchg
xchg
mov
fwait
lock
into
push
mov
xor
int
xor
enter
call
and
loopne
sbb
and
ficomps
ja
es
inc
dec
out
cmp
lods
pop
cltd
mov
test
jg
and
cmp
xor
addr16
mov
inc
in
sbb
fidivs
mov
sub
mov
je
sub
sti
cmp
sub
xlat
mov
xor
jl
shll
ljmp
mov
push
mov
imul
les
xchg
out
fmuls
mov
xor
arpl
and
cltd
jp
popf
das
sar
or
xchg
dec
insb
add
nop
icebp
mov
hlt
int3
cld
jmp
jg
jbe
xchg
push
fbld
or
add
fstps
xchg
lret
jl
mov
incl
cld
ljmp
dec
std
pushf
sbb
rorb
push
xchg
mov
mov
jmp
mov
addb
mov
jnp
bswap
test
pop
call
pop
sbb
push
dec
mov
add
mov
das
sub
push
or
nop
cmp
aam
hlt
ljmp
jg
insb
adc
fisubs
js
sar
loopne
push
pop
mov
aas
pop
lods
add
es
out
jb
lea
push
insb
cmp
mov
cmp
mov
cld
decl
xchg
sbb
jle
imul
or
call
ffreep
push
jg
call
push
add
mov
xor
cmpsb
mov
inc
lret
xchg
mov
xchg
bound
pushl
xchg
sti
dec
iret
cltd
dec
call
pop
aas
sahf
xchg
enter
sbb
jg
xor
and
mov
inc
call
sub
push
pusha
jbe
dec
lcall
mov
es
jns
push
in
add
push
mov
push
cld
incl
pop
addb
test
mov
outsb
inc
sbb
inc
cmc
xor
dec
or
push
xchg
dec
cmp
test
std
cltd
adc
into
mov
mov
mov
das
insb
call
cld
pop
inc
jl
pop
inc
stos
es
in
cmpsl
stc
mov
push
scas
or
sbb
pushl
mov
mov
cltd
jecxz
fidivl
mov
repz
aam
scas
fisubrl
movsl
jmp
repnz
adc
xchg
or
in
insl
rorb
sub
or
loope,pt
inc
add
cmp
into
dec
daa
or
data16
ret
mov
loop
lret
ljmp
or
aas
dec
push
in
xchg
or
imul
add
sbb
jge
push
cmpsl
mov
jmp
mov
ljmp
push
xor
add
xchg
cltd
push
nop
pop
mov
pop
inc
add
cmp
pusha
lcall
loop
mov
xor
cmpsb
das
adc
push
les
sbbl
outsb
addr16
cli
mov
pop
mov
outsl
pusha
sub
xchg
pop
adc
fstpt
in
adc
ljmp
sub
mov
ljmp
fs
mov
adc
sti
push
lea
lods
push
cmp
std
decl
scas
mov
inc
insb
bound
push
subl
arpl
lahf
sbb
int
pop
hlt
ljmp
scas
shll
lods
fs
jne
or
in
add
jle
jp
xchg
inc
aaa
lcall
out
dec
xor
and
adc
mov
push
cmovno
pushl
mov
movb
xchg
and
or
mov
or
xchg
inc
call
fwait
popa
into
mov
mov
mov
into
cmp
aaa
ljmp
mov
subl
inc
mov
repnz
jg
ja
jp
addl
ret
and
adc
rclb
xor
enter
ss
sub
enter
jae
arpl
add
testb
shrl
addb
cmp
push
sub
mov
mov
shlb
adc
push
and
xchg
push
loopne
pop
sbb
jns
lock
aas
xor
add
sbb
mov
pushl
xchg
mov
sbbl
dec
adc
jle
and
cltd
and
sti
jae
mov
decl
sarb
stc
aaa
add
push
scas
int
inc
xchg
cmp
dec
out
fbstp
out
fcompl
decl
mov
mov
xchg
lcall
pusha
mov
fldl
lea
add
pushl
stos
daa
out
stos
shll
es
bound
ds
push
mov
call
inc
fneni(8087
inc
push
dec
jns
repnz
xchg
lret
insb
jno
adc
jge
cld
sbb
outsb
add
loop
mov
testb
mov
xchg
ljmp
push
mov
pop
mov
mov
adc
sub
or
aad
inc
js
jno
cmpsb
xchg
bnd
sub
push
call
xor
dec
sub
mov
test
fcmove
mov
xor
push
xchg
imul
adc
adc
jge
iret
das
jle
add
or
addr16
in
nop
sbb
jno
inc
idivb
jbe
ret
bound
repz
jmp
fildll
sub
lahf
mov
call
mov
out
rcrb
mov
das
dec
das
xor
mov
cld
nop
in
jle
pushl
std
pushw
mov
addr16
add
out
or
test
mov
and
sti
push
sub
lcall
sub
fistps
aaa
jle
push
test
dec
cld
and
pop
insl
pop
lcall
jmp
cs
negb
cmp
push
test
jecxz
add
fisubl
test
std
or
testl
fwait
adc
cmc
mov
jb
adcb
push
dec
pushf
popa
sbbl
jno
cmp
mov
jno
icebp
decl
adc
repz
dec
jge
add
lcall
add
cmp
fiaddl
adc
sbb
pop
sarb
ja
xor
cmp
pop
xchg
out
es
sbb
out
addr16
mov
test
shrb
pop
jg
sar
or
cmp
jp
mov
fsubrl
cs
mov
push
sub
push
push
fisubrl
cmp
arpl
std
lahf
test
xchg
adc
dec
shll
clc
cli
push
xchg
xor
push
add
push
pop
imul
and
ljmp
add
fidivrs
and
mov
dec
setne
and
lret
pop
adc
jmp
in
loop
dec
in
pop
dec
stc
sbbl
dec
push
test
testb
ljmp
cmpsb
xor
adc
popa
test
clc
callw
add
lcall
jae
jnp
ret
push
stc
scas
xor
les
mov
and
stc
mov
data16
nop
sub
jle
test
xchg
movsl
mov
pop
cmp
call
inc
adc
add
push
call
push
and
out
push
dec
test
pop
jl
inc
addr16
cmpsl
pusha
push
xchg
sti
xchg
ret
jle
adc
clc
lods
add
fdivrp
jmp
mov
les
adc
lahf
das
adc
rclb
stos
ret
mov
mov
ret
mov
in
adc
insb
cld
mov
call
dec
push
out
sub
lea
stos
add
dec
cli
fidivrs
out
flds
dec
cmp
scas
cli
ljmp
mov
xchg
cmp
pop
sub
mov
hlt
sub
or
cmp
lcall
shr
mov
add
fsubs
daa
ret
pushl
ror
xor
or
pop
popf
adc
jo
jns
xor
xchg
or
cwtl
mov
rcl
mov
jmp
sarb
jecxz
and
scas
lret
mov
enter
incb
outsl
cmp
xor
mov
insl
mov
mov
incl
mov
fstpt
push
pop
xchg
mov
mov
punpcklwd
mov
ljmp
clc
pop
push
ret
lds
cmpb
outsb
and
lcall
movntps
into
arpl
mov
sub
fists
repnz
cvtdq2ps
mov
mov
dec
insb
push
xor
xor
scas
lea
aad
push
cltd
jecxz
outsl
sub
push
adc
jmp
test
sbb
jecxz
and
shrb
scas
xchg
int
dec
sbb
mov
nop
out
jp
adc
push
loopne
lret
insl
push
dec
je
fsubr
jg
mov
test
decl
out
push
ficompl
lret
clc
jne
mov
mov
jae
movsl
lret
outsb
es
imul
sbb
call
push
bnd
and
push
fildll
movsb
pop
sub
push
mov
pop
cld
sti
lcall
add
or
cltd
arpl
xchg
adc
xor
std
fcomip
sbb
push
stos
sti
push
mov
sbb
scas
push
cmp
dec
jne
sub
lock
es
or
ljmp
in
pop
lret
sbb
adc
pushl
dec
add
push
pop
subb
add
mov
popa
outsl
aaa
ret
pop
xlat
sbb
mov
out
inc
cmp
incl
out
stos
pop
inc
scas
aam
mov
loopne
aam
sbb
pop
or
insb
std
mov
out
lods
js
pushl
cmp
or
push
mov
test
cwtl
outsb
mov
pop
dec
lret
popa
into
sbb
adcb
into
cli
pop
and
adc
imul
sbb
inc
xchg
ljmp
xchg
into
nop
cmc
or
mov
lods
pop
push
lods
dec
mov
mov
lcall
call
xchg
mov
sbb
mov
lock
rep
mov
lcall
ss
repz
jb
int3
sub
jb
cmp
cwtl
ljmp
mov
dec
push
push
insb
subl
mov
out
inc
dec
mov
cs
decl
js
roll
mov
hlt
fstpl
hlt
pop
mov
cs
add
fbld
mov
aaa
and
test
dec
jae
lock
decl
add
jne
cmp
push
push
loope
mov
add
cmp
ffree
push
repz
push
cmpb
das
and
jg
insl
mov
out
and
adc
dec
jno
sar
in
mov
mov
lahf
fsubp
xchg
or
pop
jns
jo
inc
or
fcmove
in
jmp
xorb
cmpsl
jne
mov
lock
mov
lock
push
pop
cli
test
pusha
incl
cmp
or
xchg
mov
mov
in
test
andb
incl
xchg
rcl
mov
pop
mov
jb
imul
cwtl
cmpb
xchg
mov
fwait
or
add
jmp
call
rcr
adc
lahf
fs
das
adc
dec
and
pusha
ds
jmp
inc
cmp
cli
enter
mov
rcr
push
popa
cmp
add
push
xchg
scas
call
and
shrb
mov
jl
and
cmp
cs
dec
mov
sarb
fldcw
dec
ffree
in
adcl
cmp
cmp
push
lahf
fmull
mov
dec
add
inc
add
fs
mov
mov
in
cld
or
fisubrl
divl
mov
adc
aam
incl
cmpsb
stos
push
js
fsubrs
call
sub
dec
push
add
mov
sbb
incl
pop
lcall
iret
jnp
iret
popa
dec
add
dec
push
pop
adc
xchg
and
icebp
jmp
je
stc
sbb
dec
mov
ljmp
sbb
inc
pop
push
adc
das
and
xor
pop
es
xor
std
movsl
mov
std
or
icebp
out
pop
xchg
jmp
mov
mov
push
out
scas
in
test
mov
push
aas
mov
fsubp
dec
aad
call
fildl
dec
cltd
fcmovnb
mov
pop
dec
testb
and
out
call
jbe
dec
and
push
mov
xchg
lret
xchg
mov
shrl
lcall
mov
inc
or
arpl
adc
cld
mov
outsb
or
mov
lret
fnstenv
fstl
fbld
hlt
dec
int3
aam
and
jp
lret
rcl
jns
adcb
mov
dec
lcall
adc
loopne
dec
mov
pop
leave
movsl
and
in
dec
into
or
pusha
jecxz
cmp
ficomps
fldt
or
cmp
jb
mov
and
mov
push
push
jae
fistpl
sub
jnp
and
insl
loop
mov
pop
push
jmp
dec
stc
sub
add
dec
pop
push
hlt
jmp
cltd
xchg
mov
xor
mov
push
add
decl
sub
or
inc
aaa
movsl
pop
mov
enter
push
adc
and
ljmp
mov
add
shlb
pop
lock
xchg
adc
mov
jmp
jg
mov
arpl
mov
stc
repnz
adc
pushl
movsl
divl
in
insl
push
adc
sub
mov
jnp
pusha
mov
jnp
arpl
add
das
fwait
mov
jno
dec
push
roll
pop
iret
add
pop
lcall
fmuls
jg
mov
mul
or
cmp
daa
loop
in
scas
jbe
cmp
out
sbb
std
push
cli
xorb
scas
mov
or
nop
icebp
mov
fcmovnb
inc
out
shr
inc
jmp
mov
jb
pop
push
push
shlb
cs
out
fcmove
lock
leave
sarb
pushl
jmp
loop
scas
fisubs
ljmp
pop
in
jmp
adc
std
sub
adc
fwait
add
inc
out
in
mov
push
add
mov
ss
jns
jno
call
mov
je
jecxz
scas
test
mov
in
aam
into
rorl
sbb
insl
into
stc
decl
in
inc
test
inc
xor
jp
xchg
js
ja
rorb
pusha
cwtl
cmp
lcall
push
push
mov
cmp
sti
jbe
outsb
xor
xor
inc
cwtl
mov
fidivl
call
dec
adc
xor
lcall
stc
and
shll
push
nop
testb
in
dec
jmp
hlt
loopne
xor
xchg
shll
cltd
lahf
mov
jmp
push
or
ficompl
sbb
push
addl
sti
sbb
sub
jmp
and
fs
sbb
arpl
bound
ljmp
jp
sbb
inc
ret
mov
dec
xchg
pop
xlat
inc
xor
push
jb
pop
xor
lcall
cmpsb
adc
push
cmp
pusha
xchg
pop
dec
clc
mov
cmc
mov
dec
sbb
ljmp
lea
mov
addr16
mov
arpl
fmuls
loop
push
jg
cmc
and
xor
aas
inc
dec
or
inc
adc
sar
dec
sub
daa
das
inc
fstl
pop
addb
ljmp
inc
leave
jle
dec
mov
jns
shll
sub
jle
aaa
add
adc
fcomps
jg
lods
mov
xchg
add
dec
xchg
and
cmp
and
push
sbb
jg
data16
cmp
cmp
jo
jle
cs
pushf
ret
inc
mov
mov
hlt
jnp
push
jmp
inc
push
out
test
mov
mov
fistps
cmp
lcall
lock
mov
je
and
jne
dec
cwtl
lahf
rorb
or
mov
clc
mull
in
cld
push
pop
mov
inc
loop
dec
jnp
jecxz
cld
hlt
xchg
mov
inc
addb
mov
or
jl
mov
shrb
insb
mov
lcall
mov
idivb
mov
sub
sub
mov
imul
nop
sbb
push
test
das
paddusb
cli
xchg
clc
mov
push
xchg
or
jmp
mov
mov
jg
pop
inc
sahf
idivl
mov
and
jmp
push
fldt
pushl
jne
push
not
fcomps
nop
xchg
jmp
mov
or
pop
or
sub
adc
lret
jo
out
jne
jmp
cli
stos
in
cs
xchg
adc
and
jecxz
xchg
lea
fsts
jnp
rolb
cmp
inc
scas
push
int3
data16
mov
cmp
lcall
sub
push
push
iret
cld
mov
fadds
push
rclb
aad
xchg
dec
adc
inc
mov
pop
inc
mov
jl
dec
pop
call
repnz
out
jne
jg
mov
mov
sbb
subl
ljmp
jmp
or
xchg
out
ss
fnsave
aas
jge
ret
mov
das
pop
ss
mov
mov
fwait
leave
xchg
arpl
mov
inc
enter
mov
jmp
cmp
jnp
push
dec
push
or
mov
popa
dec
aam
inc
popa
jmp
call
sub
imul
xchg
dec
xchg
mov
xor
and
push
test
mov
push
sub
mov
mov
jbe
cmp
insl
fsub
adc
popf
mov
call
inc
fwait
aaa
pop
clc
sti
push
fwait
adc
ficomps
fidivl
ljmp
jo
jl
jg
cmpsb
dec
dec
pop
push
mov
jo
fisttps
mov
or
pop
je
push
mov
rol
mov
xchg
add
out
std
and
mov
add
adc
mov
incl
dec
aad
add
popf
dec
xchg
and
or
call
int3
lcall
jmp
jb
ror
lcall
cmp
into
das
movsl
outsb
inc
and
jns
jmp
nop
imul
sbb
jmp
adc
loopew
and
mov
ja
dec
push
adc
adc
lcall
pop
repz
add
and
dec
jae
cwtl
mov
push
pop
js
repz
push
daa
cmp
cmp
jae
sub
stc
sar
pushl
repnz
mov
mov
je
inc
pmaxsw
mov
in
sti
inc
mov
in
add
lcall
roll
xorl
and
xchg
pushf
jae
adcl
jno
pusha
mov
cli
cmp
ljmp
mov
out
dec
mov
or
divb
stos
fwait
aam
cmc
adc
or
xor
pop
xor
sub
decl
pop
sbb
push
adc
pop
in
bnd
ret
cltd
sub
mov
cmp
jecxz,pt
pop
jnp
mov
stc
jge
push
fistpl
lret
lcall
cmp
jnp
gs
stos
jp
movsb
movsb
cwtl
mov
lds
loop
pop
jno
adc
js
add
push
stc
or
outsb
aaa
movb
sub
pusha
mov
dec
cmp
pop
insl
inc
out
jb
jo
adc
push
das
and
jb
adc
xor
mov
cwtl
adc
lock
jo
push
idivb
mov
decl
insl
sub
cmp
hlt
dec
ds
dec
loopne
pushl
loop
std
incl
popf
mov
inc
out
fisttps
inc
cmp
sub
movsl
pop
fprem1
jg
cmp
xor
xchg
mov
das
pushf
inc
adc
lcall
inc
xchg
sbb
lds
sbb
mov
mov
adc
dec
fimull
notb
test
mov
sbb
add
xor
lods
cltd
inc
mov
in
mov
xor
inc
push
cli
out
dec
outsl
mov
ret
adc
push
insb
mov
mov
jno
in
sub
repz
incl
sub
imul
xor
in
stc
sbbl
pop
cld
loope
cmp
lcall
mov
data16
fstpt
push
mov
adc
add
xor
mov
xchg
out
adc
or
aas
imul
out
lcall
inc
js
sbb
pop
call
add
frstor
enter
out
or
push
jl
sbbl
decl
xchg
adc
lea
cmp
sbb
dec
addr16
jbe,pt
push
lcall
incl
imul
push
push
dec
mov
lahf
lock
pop
lahf
push
lds
ljmp
cltd
ljmp
and
jl
lahf
ljmp
adc
test
pop
call
sbb
lcall
pop
dec
dec
cmc
sbb
jge
add
cmp
fldt
pushf
mov
incl
clc
jb
mov
pusha
nop
xor
fisttpl
incl
daa
imul
lahf
adc
xchg
gs
js
pop
call
or
call
push
or
xchg
jb
ss
in
in
cmp
mov
bound
decl
xor
jnp
cmp
jle
xchg
add
aam
add
bound
testl
or
fildl
dec
mov
push
inc
mov
or
pop
push
int
cmp
lds
xchg
push
sbb
mov
add
pop
in
dec
adc
xor
lcall
incl
dec
mov
and
ss
imul
mov
mov
dec
icebp
movsl
cmc
test
or
jmp
or
stos
mov
sub
decl
test
mov
bound
xchg
dec
mov
jno
xor
push
inc
out
clc
lcall
shl
repnz
aaa
mov
cli
pop
ljmp
sub
dec
push
mov
sub
push
mov
push
or
mov
xchg
xor
dec
lahf
pop
mov
xor
push
movsb
push
arpl
xchg
lea
rorb
sbb
clc
push
imul
push
sbb
jmp
lret
sub
testl
test
mov
pop
ss
and
sub
outsl
nop
lods
fdivs
call
out
push
xor
sar
lret
xchg
lods
lods
xchg
pushf
jmp
bound
mov
pop
jb
icebp
js
mov
movsb
xchg
fcmovnu
int3
mov
imull
clc
adc
and
mov
lcall
je
mov
xor
leave
xor
icebp
imul
xor
cltd
clc
dec
adc
push
data16
mov
sub
rcrl
fwait
adc
push
dec
pop
call
int
arpl
mov
inc
addr16
movsb
xor
mov
fistps
addr16
call
scas
imul
push
or
hlt
push
and
mov
adc
xchg
rcrl
mov
jnp
sbbl
mov
mull
adc
inc
daa
or
pop
jg
mov
pop
cmpsl
mov
lea
jae
int3
lock
cwtl
not
inc
sub
call
in
mov
cltd
jmp
inc
cmp
pushf
jp
push
dec
jae
orl
xchg
cmpsl
lock
push
pop
cmp
jmp
mov
imul
fstpt
xor
pop
psrlw
push
incl
xlat
lods
js
jbe
lret
loopne
inc
shlb
push
out
inc
sbb
jns
push
inc
call
insb
inc
jae
push
in
sbbl
cmp
cmp
cmp
daa
adcb
sub
jmp
mov
shll
stos
shll
test
adc
enter
scas
in
mov
add
bound
movsb
adcb
mov
dec
xchg
xor
and
push
mov
decl
sti
pop
into
inc
and
iret
std
test
clc
fcompl
pop
mov
cltd
or
jmp
mov
mov
inc
repnz
xchg
faddl
sub
inc
push
sbb
std
aaa
cld
arpl
dec
lds
adc
pop
sub
imul
mov
push
bound
cli
in
sar
dec
hlt
fisubl
aas
jmp
push
out
jo
sub
xor
out
pop
and
jnp
roll
mov
cmc
dec
cmp
in
std
xor
push
dec
shrl
jnp
jnp
xchg
push
cmp
mov
rorl
out
mov
repz
mov
cmc
jns
pushl
int3
out
mov
fbld
mov
cmp
mov
inc
dec
jno
inc
add
dec
jl
pop
jge
jge
imul
mov
add
aaa
aad
loope
call
pop
stos
jmp
dec
test
daa
sub
loope
fdivl
test
xchg
add
sbb
pop
pop
movsb
cmp
jmp
push
jge
cmp
sbb
lcall
xchg
and
hlt
sahf
divb
imul
fdivr
ljmp
adc
mov
hlt
push
andb
mov
loope
push
lock
add
cmp
daa
orb
nop
add
push
mov
fisubs
scas
rol
add
and
push
out
insb
push
inc
or
adc
pushf
jg
push
xor
sub
push
stos
adcb
pop
rcrb
popa
and
mov
adc
and
in
pop
es
jo
imul
sbb
imul
jp
ds
add
adc
push
inc
test
add
xor
test
add
mov
or
jle
push
lds
pop
and
pop
iret
cmp
mov
sbb
in
push
inc
mov
mov
outsl
jg
outsl
outsl
insb
push
push
xchg
jo
push
nop
add
insl
and
gs
push
lods
insl
mov
push
sbb
mov
mov
jb
je
into
sbb
fisubrl
push
jnp
sub
inc
std
dec
jne
cmp
mov
js
stos
pop
inc
fists
fwait
dec
sub
mov
adc
sub
jae
ds
mov
push
push
or
es
nop
fisubrl
mov
or
and
outsl
insl
insl
sbb
xchg
adc
gs
pusha
rorb
add
adc
and
pop
out
int
repz
push
outsb
dec
xor
inc
imul
inc
and
pop
icebp
lock
push
adc
cmp
jp
adc
nopl
js
and
push
rcrb
cmp
sbb
out
adc
lds
ds
insb
jne
mov
jne
retw
add
push
push
xor
jl
pop
or
inc
mov
xor
push
fildl
mov
mov
fwait
bound
fcoml
push
out
popa
pop
sbb
xchg
dec
adc
mov
push
gs
lock
jns
cmpb
jae
jne
cmpb
lods
imul
push
movb
cs
arpl
xor
das
cmp
push
adc
jae
sub
adc
popa
pop
inc
ja
insb
rcll
movq
push
pop
mov
mov
inc
les
push
dec
inc
dec
sbb
sbb
je
insl
xchg
xchg
insb
pop
sbb
adc
lret
jg
mov
pop
add
pop
repnz
inc
repz
int3
push
xor
inc
in
les
mov
shrl
inc
or
lret
clc
outsl
popw
push
add
mov
cli
adc
push
push
inc
xchg
push
jne
dec
inc
cwtl
push
push
adc
daa
and
inc
inc
mov
dec
jae
enter
icebp
add
stos
xchg
dec
jmp
push
into
ret
mov
mov
mov
testb
gs
iret
lret
and
push
jecxz
pop
outsl
xchg
lods
aaa
mov
je
ja
mov
inc
xchg
jg
je
or
pop
push
pop
insb
or
ja
and
mov
and
inc
popa
es
ret
adc
aas
jp
ss
adcl
nop
popa
jge
mov
sbb
cmp
rcl
or
movnti
outsl
jns
add
add
int
push
fs
jmp
nop
cmp
sbb
pop
xlat
mov
inc
lock
xchg
inc
je
add
jp
push
inc
inc
iret
sti
shrl
addl
cli
mov
sub
and
and
jno
insl
adc
out
shl
or
clc
fidivrl
mov
add
insb
push
adc
jns
xchg
nop
outsl
push
stos
add
mov
xchg
fstpt
iret
loope
add
js
sbb
dec
sbb
pop
inc
fildl
iret
push
adc
test
mov
push
xchg
gs
in
cmp
push
jne
inc
in
inc
out
rolb
sbb
inc
inc
leave
jo
xor
jo
jae
xor
pop
andb
sbb
fmull
lea
adc
jo
mov
jecxz
orb
and
mov
cmp
adc
xor
jno
push
dec
inc
loop
in
inc
lods
cli
mov
icebp
repz
sub
rclb
outsl
pop
out
xor
xchg
mov
inc
mov
test
dec
adc
sub
add
mov
push
pop
jmp
les
mov
leave
push
mov
jo
mov
adc
pop
or
push
mov
or
stos
sarl
shlb
sub
arpl
xor
jb
fs
loop
rorb
cmp
xchg
add
jg
out
sub
inc
lahf
addr16
pop
pusha
test
inc
sbb
push
aaa
lret
into
loope
dec
adc
sarl
and
xor
sbb
pushf
or
mov
mov
add
scas
sub
jp
pop
and
add
mov
mov
out
ret
popa
fbld
shll
pop
fs
mov
mov
cmp
push
outsl
jns
popf
jbe
inc
jb
and
inc
lea
in
inc
push
into
jo
int
aam
inc
inc
lds
arpl
loope
std
inc
imul
sbb
add
mov
xor
push
js
insb
out
lock
insb
dec
xor
ja
out
punpckldq
inc
lcall
mov
jp
je
jae
jno
or
cmp
nop
lea
ret
loope
xchg
adc
leave
addr16
js
enter
and
dec
inc
cmp
sbb
push
mov
push
loopne
add
es
roll
and
xor
push
pop
xor
das
or
shlb
add
out
mov
push
push
adc
or
pop
and
push
icebp
ja
bound
je
insl
dec
outsb
dec
jno
or
stc
xor
mov
lcall
mov
imul
add
mov
xchg
cmpsb
imul
sub
lods
imul
cmpsb
xor
add
pop
adc
push
jmp
mov
push
pop
jecxz
mov
and
pop
outsl
inc
fs
in
jmp
jo
sbb
adc
incb
add
std
push
jb
inc
jae
jo
adc
ret
inc
jb
push
and
or
nop
fisubl
sbb
imul
cwtl
test
add
xchg
pushf
push
adc
sbb
js
xlat
adc
mov
and
mov
gs
xor
sbb
mov
aaa
cmpb
pop
lock
dec
loop
cmpsl
push
push
dec
data16
test
fstpl
pop
insl
pop
xchg
push
jo
faddl
scas
arpl
fidivl
cmp
lds
lcall
icebp
pop
scas
xor
mov
es
fildl
outsl
ljmp
test
jmp
adc
mov
xchg
cmpl
fnstsw
aaa
mov
mov
cmpsl
xchg
or
fwait
cld
popa
imul
dec
mov
xchg
mov
xor
push
adc
dec
push
hlt
and
jmp
enter
add
sub
fs
dec
sub
push
push
pop
xor
ja
push
imul
fs
imul
xchg
adcb
xorb
mov
pop
push
dec
mov
inc
std
imul
add
xor
fwait
loopne
loope
pop
inc
mov
or
sub
sub
dec
mov
add
push
push
xor
lds
adc
adcb
jbe
add
ret
mov
aad
icebp
pop
popf
cmpsl
inc
mov
mov
and
mov
push
mov
add
or
mov
arpl
push
inc
or
pop
rol
or
jo
lods
sub
bound
or
or
scas
push
cs
sbb
push
cmpsl
fisttpl
outsl
movsl
xor
dec
dec
adc
and
pop
mov
loop
add
mov
rcll
int
inc
mov
sub
cltd
inc
push
jns
mov
jnp
sub
push
push
inc
out
adc
data16
adc
incl
pop
push
cmp
testl
mov
mov
cmp
jne
mov
in
cmp
ffreep
jo
inc
jbe
pop
add
pop
icebp
jae
pop
inc
cmp
dec
es
imul
dec
xchg
nop
ret
imul
ss
push
mov
fs
and
adc
sbb
mov
lods
cmp
scas
gs
jmp
outsb
pop
xor
add
cli
pop
sarl
push
adcb
insb
pop
jg
xor
fcoml
pop
mov
and
insl
mov
and
dec
addb
cs
iret
cmpsb
add
and
add
and
jb,pn
insb
mov
sbb
add
push
lods
mov
pop
mulb
out
sbb
lret
lock
add
push
dec
rcrb
jb
push
xlat
out
pop
je
sbb
incb
ss
das
pusha
xchg
add
push
dec
incl
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
inc
add
add
