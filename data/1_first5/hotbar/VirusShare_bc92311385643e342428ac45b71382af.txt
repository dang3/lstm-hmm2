fcomp
decl
cwtl
pop
inc
add
mov
or
adc
pop
int3
add
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
mov
and
jbe
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
mov
mov
add
or
dec
and
sti
enter
push
hlt
js
pop
push
dec
lahf
xorb
sbb
les
insl
pop
push
push
push
xor
pop
fdivr
call
and
inc
add
shll
outsl
add
pop
cld
pop
nop
adc
incl
sbb
inc
push
mov
rcll
push
mov
je
push
push
push
mov
push
neg
mov
mov
inc
nop
jne
out
push
mov
pop
jg
mov
add
mov
inc
or
sti
jg
dec
push
xadd
dec
test
jg
add
mov
call
ret
pop
ret
testb
add
ljmp
jns
mov
mov
sahf
mov
les
mov
mov
xor
push
test
pop
mov
add
xor
das
dec
push
std
outsb
push
inc
fidivrs
or
sbb
aaa
push
xor
mov
adc
push
lea
push
ficoms
push
add
xchg
sub
bound
rclb
ffree
add
xchg
dec
add
jg
and
add
push
pop
sbb
int
jmp
inc
push
orb
xor
xor
push
or
cmp
mov
push
push
xchg
sbb
sbb
push
push
mov
cmp
xchg
push
adc
nop
sbb
mov
lea
xor
rcr
xor
lret
mov
xor
or
enter
and
fists
fisttpl
push
fldt
out
mov
mov
adc
lock
dec
mov
cmp
adcb
push
pop
imull
insb
mov
mov
enter
flds
pushf
xor
xchg
push
into
js
in
mov
dec
test
mov
pop
add
sarl
lcall
fdivrs
push
les
add
lret
test
xor
enter
mov
adc
and
push
mov
shll
add
mov
lcall
and
and
out
sbb
inc
aam
xor
push
daa
inc
and
lea
or
mov
dec
sub
mov
test
cs
dec
add
sbb
mov
push
sbb
pusha
sbb
stc
mov
cmpsl
and
dec
test
pop
int
pop
jo
pop
sub
pop
repnz
push
mov
and
mov
orl
xlat
rcll
pop
mov
clc
pop
jge
mov
stos
pop
pop
lods
mov
pop
ret
xor
push
iret
repz
push
inc
push
dec
dec
push
sub
push
insb
loope
push
sub
cmp
add
and
push
xchg
mov
mov
inc
les
icebp
or
movsl
cmp
ljmp
test
clc
mov
sub
mov
and
adc
jl
or
scas
insb
add
inc
lret
xor
add
and
inc
xor
push
jne
shl
xor
pusha
push
sbb
inc
repnz
add
sub
ja
mov
scas
out
jo
test
ficomps
jge
adc
out
pop
cmpl
dec
inc
jle
push
add
call
inc
mov
inc
cmp
addl
or
repnz
fwait
mov
cli
push
push
push
or
aas
sub
push
movsb
orps
ss
hlt
nop
test
cmp
mov
pop
add
dec
hlt
mov
dec
push
pop
enter
push
inc
push
add
mov
je
bnd
imul
mov
sub
notl
cld
loope
and
lea
cwtl
lret
test
push
cltd
or
push
cmc
dec
inc
xor
jge
dec
add
push
xorb
push
jg
mov
or
test
push
adc
addl
lock
add
popf
cltd
push
inc
sbb
insl
jns
pop
jbe
mov
xor
sbb
xchg
lret
pop
and
and
adc
jne
fmull
lods
mov
psubusw
push
es
or
mov
pop
roll
add
push
push
push
cmp
decb
mov
jbe
sbb
sete
leave
ret
leave
scas
test
test
and
sub
test
adcb
dec
into
push
push
pop
fs
xor
adc
add
pop
in
mov
and
push
cmp
movsl
add
inc
or
push
cmc
inc
stos
pusha
lds
punpckhbw
jne
mov
inc
cmp
das
inc
jne
push
jle
pop
dec
push
sub
jecxz
adc
test
and
or
sbbl
xchg
adc
adc
inc
enter
nop
orl
push
lcall
push
dec
xchg
out
jle
leave
inc
pop
push
push
and
std
sub
push
xor
cmpsb
jo
push
mov
jle
dec
add
push
ret
test
dec
and
add
cmpsl
sbb
push
inc
or
adc
in
in
mov
jmp
or
push
inc
pshufw
cmp
fdivrs
push
adc
loopne
cs
inc
sub
ret
jle
xorb
push
xchg
sbb
scas
cld
sti
mov
and
and
sbb
popf
dec
xchg
icebp
sbb
mov
incl
mov
fistpl
xor
nop
call
in
int
push
adc
call
leave
mov
mov
xor
test
adcl
or
xor
adc
pop
mov
add
mov
movsl
sub
push
sub
mov
popf
xchg
rolb
hlt
xlat
mov
cmp
mov
jge
jo
push
push
cmp
mov
pop
mov
inc
imul
jbe
mov
fs
or
loopne
ret
mov
pushf
push
or
ljmp
sub
mov
cmc
cmp
sub
cmpl
je
adc
adc
adc
sbb
outsb
push
xor
fcoml
push
push
sarb
icebp
add
mov
sub
popf
push
test
push
xor
incb
jp
jecxz
clc
push
xchg
ja
adc
adc
daa
add
adc
js
fnstcw
das
cltd
das
jg
xor
insb
or
mov
mov
jmp
adc
jl
lahf
mov
cmp
scas
inc
mov
sub
push
mov
adc
sub
ret
aaa
push
cmpl
enter
lea
pop
pop
icebp
jns
in
xchg
jmp
adc
inc
in
mov
push
test
push
push
pop
in
sub
int
movsl
clc
scas
lods
mov
adc
sub
in
jg
pop
mov
jmp
cmc
jmp
adc
loopne
cmpsb
pop
pop
and
add
jmp
or
xlat
and
push
push
xchg
xor
imul
dec
cmp
cmp
cld
test
es
in
jle
push
add
xorb
sbb
mov
cmp
or
cmp
inc
add
push
mov
incl
jle
jne
mov
dec
ret
daa
sbb
aam
popa
pop
rcrb
push
jmp
mov
mov
je
sub
cmp
je
or
pop
jmp
sub
or
and
push
or
mov
add
test
mov
add
rorl
mov
or
mov
add
inc
add
outsl
shrb
cwtl
into
push
mov
jo
push
push
push
call
call
xor
pop
lock
push
call
inc
cmp
jl
test
pusha
mov
sbb
jp
in
ret
xchg
mov
inc
subl
and
xor
mov
shll
notl
imul
addb
ljmp
xor
ret
jne
movzwl
clc
xchg
lea
les
sub
jle
imul
and
jmp
mov
lea
add
dec
add
jne
sub
push
push
inc
sbb
aam
or
xchg
adcb
inc
pop
jo
jg
pop
mov
mov
sbb
pop
jne
fs
dec
mov
sar
insb
jne
adc
jecxz
pop
mov
mov
lea
pop
jb
popa
pop
cmp
iret
cmp
call
jge
xor
mov
cmp
jl
jmp
cmp
repnz
cmp
insb
call
pop
ret
mov
ss
popf
fdivl
push
push
or
cmpl
sbb
mov
shll
movsl
lahf
jne
pop
mov
jno
rcrb
lahf
or
mov
or
shlb
rclb
push
loopne
fs
adc
lock
lods
pop
cmp
out
or
test
mov
std
mov
call
jge
push
call
test
scas
mov
or
clc
jle
mov
mov
jg
cmp
pop
mov
popa
fstpt
aam
push
cld
lea
push
or
cmp
stos
mov
jl
ds
ja
add
jmp
pop
cld
ret
fcoml
add
push
mov
mov
sub
jo
jg
mov
fcmovb
nop
sub
pop
pop
or
or
icebp
mov
mov
je
cmpl
pusha
pop
fs
insb
jge
sub
add
mul
mov
inc
hlt
mov
pop
ret
sub
xchg
cmp
inc
mov
xchg
push
dec
push
rclb
jo
xchg
les
jg
pop
pop
push
dec
jno
in
ds
jne
cwtl
lods
incb
ret
mov
notl
mov
das
xchg
repz
cmp
or
mov
mov
cmp
jmp
mov
mov
clc
push
add
dec
movsl
adcl
repz
shlb
lahf
dec
repz
mov
inc
rclb
add
mov
addr16
lods
push
push
filds
sbb
and
inc
das
ret
sbb
push
push
push
or
sti
inc
fldl
cmp
push
push
lea
sbb
outsb
test
pushf
and
je
push
sahf
aaa
or
or
inc
cmp
js
scas
sub
sbb
mov
sbb
pop
adc
mov
movsl
bound
cmp
add
add
sti
loop
or
scas
lds
call
test
sahf
dec
test
pop
jl
push
mov
out
clc
inc
sub
cmp
je
cmpl
lea
jl
mov
push
mov
call
call
int3
loope
add
rorb
sbbb
das
xorb
mov
daa
or
jno
push
adc
mov
dec
pusha
push
test
loop
jne
ret
push
dec
ret
or
aas
push
into
jno
js
pop
xlat
sub
sbb
or
mov
fmuls
adc
fcoms
or
roll
dec
and
aaa
xchg
jg
stc
or
inc
inc
or
shlb
adc
ret
pop
xchg
loope
xchg
adc
fsubl
inc
or
test
jne
pop
or
jle
into
aas
mov
sysret
cld
addb
fldt
fsub
dec
fldt
pop
push
push
sub
ret
test
cs
mov
hlt
jb
cmpsb
add
push
adc
out
lods
divl
push
je
xchg
sarl
jge
je
or
dec
adc
adc
or
add
push
or
add
adc
sub
ret
fiaddl
mov
or
cmp
data16
inc
add
or
jbe,pn
dec
or
ret
sbb
enter
or
es
fistpl
aam
ret
and
fisttps
aad
push
adc
push
scas
das
xor
sbb
movl
add
adc
adc
rorl
and
or
or
add
ret
push
jge
es
scas
aas
js
mov
push
or
out
adc
cmp
inc
rcrb
inc
pop
inc
pop
xor
pop
lahf
dec
lock
hlt
cmp
cli
lret
adc
mov
int3
rorb
rorl
add
repz
rcl
scas
dec
and
movsb
jb
xor
lock
loop
lods
mov
mov
push
add
xor
inc
mov
adc
imul
fists
imulb
or
and
test
mov
fwait
push
mov
jp
inc
pop
pop
push
xor
sub
mov
inc
jmp
pop
mov
add
sar
inc
cmp
jb
mov
pand
mov
pop
pop
mov
dec
mov
fstl
xchg
pop
pop
fidivs
pop
xor
inc
sub
cld
test
or
sub
push
fcomps
inc
xor
scas
mov
pop
insb
adc
pop
xor
incb
adc
cltd
mov
imull
sbbb
xchg
or
fcompl
inc
adc
adc
scas
loopne
cmp
cmp
jmp
and
int3
dec
xchg
push
test
inc
orl
pmuludq
negb
je
je
sbb
pop
int3
mov
ja
pop
xor
movsb
push
push
outsl
fidivrs
movsb
rclb
pop
sbb
mov
or
shlb
sbb
sub
mov
sti
jne
xor
push
push
dec
pop
outsb
or
loopne
dec
mov
repnz
push
lea
add
ret
cmpsb
shll
aad
inc
fisttps
in
cmp
jle
xchg
or
or
rcll
push
mov
push
dec
fmuls
push
call
pop
xchg
jg
and
adc
mov
mov
mov
mov
aas
and
pop
in
xchg
and
aas
and
dec
cs
pop
sbb
sbb
pop
ret
shll
lahf
add
lock
into
pop
sub
sbb
pop
pop
and
outsb
jae
loope,pn
ds
lahf
mov
pop
or
xchg
xor
cmp
loop
and
or
les
je
mov
femms
or
jne
push
jge
push
push
movsb
mov
push
or
ret
sub
jecxz
sub
pop
testb
cmp
push
push
sub
sbb
adc
ret
push
out
xlat
std
cmpl
and
jle
lock
out
adc
jg
dec
or
jmp
ret
pop
add
jne
mov
mov
add
cmp
fidivrs
repz
je
popa
stos
dec
jecxz
mov
mov
cmpb
inc
lods
call
fadds
ja
je
pop
cmpl
je
pop
cmp
rcrl
call
imul
mov
lock
divb
jno
add
or
sbb
or
iret
fwait
imul
adc
scas
shlb
pop
add
repnz
std
xchg
jmp
dec
divl
shll
shrl
rorb
std
jnp
xchg
clc
pop
push
mov
sub
mov
or
pushf
push
fstps
leave
and
mov
loop
cmp
shrb
jnp
fbstp
iret
pusha
rorb
jp
lods
stos
cmpsl
jg
push
lea
adc
flds
push
push
mov
sbb
adc
sbb
xor
stos
mov
loopne
std
fidivs
lds
mov
fldcw
sbb
xchg
fisubrs
jg
out
movl
xchg
push
push
int3
out
lret
mov
stc
sbb
lret
fnstcw
sub
fdivl
daa
je
xchg
jne
scas
dec
sbb
in
iret
repz
fnstenv
push
inc
cmp
test
add
inc
mov
mov
repz
in
popf
sub
or
cltd
xchg
sbb
addb
int
and
js,pn
rcrl
movsb
fstl
loope
dec
imul
push
adc
and
sahf
in
into
in
mov
adc
ja
pop
jnp
sbb
dec
ljmp
adc
xchg
bnd
loope
jle
push
dec
mov
mov
lea
push
ficoml
add
push
lea
cmc
ret
xlat
dec
cmp
sbb
iret
inc
push
dec
aam
cmp
mov
mov
sbb
pop
cltd
cs
popa
or
or
mov
adc
sbb
cwtl
add
push
je
aad
shrb
mov
add
fiaddl
mov
xchg
jge
pop
xchg
fists
test
nop
fildl
add
lock
push
addl
cwtl
movl
jl
cmc
pushf
andl
xchg
je
xchg
test
mov
sbbl
ljmp
mov
rorb
jle
inc
inc
and
or
cld
shl
and
stos
adc
das
lret
add
rolb
mov
lcall
inc
dec
or
in
jnp
pop
out
sbb
xchg
push
imul
inc
and
je
and
cmp
dec
sub
push
xor
mov
addb
fcomip
mov
cld
jmp
push
setne
push
loop
mov
dec
and
xor
repnz
loope
push
mov
mov
pop
dec
in
sub
push
push
push
inc
mov
mov
cmp
je
lea
add
add
add
in
ret
add
pushf
push
mov
loop
mov
sahf
lret
scas
pop
mov
test
mov
xchg
dec
xchg
pop
in
sbb
loopne
pop
in
lret
mov
xor
adc
xchg
packsswb
in
jge
add
add
lcall
inc
mov
push
lea
int
adc
or
xchg
pop
jmp
push
mov
mov
icebp
push
dec
insb
push
dec
dec
mov
push
push
xor
push
pop
adc
outsl
inc
dec
adcb
and
lahf
mov
rcrl
rcr
repz
mov
xor
dec
sub
data16
push
mov
add
sahf
inc
add
mov
cmp
icebp
add
xchg
ffree
and
cmp
es
push
push
inc
jbe
loop
mov
jbe
cmp
jge
cwtl
push
sbb
push
adc
xor
jl
repz
cmp
inc
or
mov
nop
inc
xor
cmp
aas
push
sub
push
push
arpl
inc
faddl
xchg
push
pop
xchg
xchg
pushf
inc
pop
icebp
ret
fistps
inc
and
add
push
mov
sbb
cmp
mov
insb
orl
adc
push
xor
outsb
or
adcb
mov
push
bound
cld
sub
pop
adc
cmpsl
push
add
adc
icebp
addb
mov
in
clc
cmc
inc
pop
repz
out
mov
and
pop
lock
lret
sub
mov
call
cmpsl
or
fsubl
and
and
inc
sbb
mov
push
std
add
or
je
mov
jmp
lret
xor
push
push
push
and
push
add
mov
aas
cs
jo
lret
push
and
cmp
xor
xor
or
loop
and
das
int3
mov
addb
loop
pop
xor
les
sbb
add
pusha
jne
adcl
aad
lahf
arpl
sbb
aad
loope
loope
sbb
jmp
pop
cld
stos
add
loop
cwtl
jb
ret
push
pop
cmpsl
adc
rclb
add
sbb
movb
inc
and
and
mov
sub
jb
dec
adc
xchg
xchg
push
sbb
scas
add
icebp
dec
adc
aaa
jo
add
inc
pop
cld
xchg
mov
or
cld
push
add
push
xchg
mov
add
loopne
xchg
idiv
push
jne
bnd
movsl
push
mov
inc
and
jecxz
sbb
adcb
or
mov
sbb
pop
push
fstpl
jecxz
and
orb
fucom
inc
lea
imul
repnz
stos
cmp
add
mov
or
enter
or
in
mov
mov
and
aam
sbb
cmp
pushf
and
popf
out
xor
mov
lds
dec
push
stos
push
dec
sbb
dec
dec
inc
inc
push
push
out
ds
sub
addb
or
inc
lahf
push
rclb
jo
test
push
pusha
neg
dec
jmp
test
push
push
push
mov
cmp
sub
push
push
lea
jo
pop
sarb
fs
push
js
pop
push
mov
push
loope
nop
jmp
bswap
ror
dec
addl
or
push
pop
dec
mov
add
inc
cmp
pusha
imul
xor
mov
dec
add
fwait
push
data16
add
or
lds
mov
add
and
inc
push
repnz
push
push
and
jo
push
cmp
leave
xor
xor
sub
adc
inc
ja
mov
bound
adc
sbb
test
aaa
faddl
aad
or
shrb
cwtl
imul
inc
pusha
fmull
shlb
mov
push
sub
outsl
inc
mov
pop
test
push
add
sbb
movsb
lock
imul
inc
loope
scas
addl
clc
and
inc
popa
mov
push
xor
dec
and
or
push
lds
pop
add
xchg
jp
and
daa
ja
cmp
or
dec
inc
push
or
sti
xor
pop
inc
ljmp
add
pop
add
push
and
push
ja
jp
loop
lock
dec
ret
pop
sbb
jb
pop
xchg
jbe
es
dec
adc
cmpsl
push
movsb
fs
add
test
cmp
jno
or
inc
xor
add
sub
stos
adc
enter
popa
mov
mov
ja
push
mov
inc
and
add
cmp
jecxz
push
push
lds
pop
mov
sbbl
cs
cld
add
jge
add
je
mov
cmp
jb
jge
xchg
lock
push
stos
test
sub
sub
push
xorb
push
pop
inc
test
mov
nop
cmpb
push
bound
push
mov
push
jecxz
adc
and
add
sub
iret
add
fsubl
cmp
shll
enter
adc
pop
mov
fmull
sbb
adc
mov
int3
int3
dec
push
push
xchg
jo
sbb
inc
push
push
movsl
mov
xor
push
mov
js
add
fstpl
sub
inc
push
sbb
mov
dec
pop
push
clc
movsl
mov
ret
pop
dec
mov
dec
xor
add
out
add
enter
jno
incl
leave
shlb
pop
sbb
xor
sbb
jno
xor
rorl
xor
sbb
decb
add
clc
or
loop
add
clc
or
enter
push
pop
adc
pusha
fwait
daa
jl
dec
add
add
xlat
adc
add
out
out
add
mov
dec
bound
imul
sar
mov
shr
add
arpl
testl
lahf
cmpl
adc
pushf
testb
mov
imul
jmp
enter
sahf
cmc
sub
mov
push
loop
test
add
fsubrp
add
push
push
enter
lea
decl
divl
jg
jmp
sub
cmp
cmp
jne
push
lahf
sbb
insl
nop
nop
adc
ret
ficomps
xor
jmp
pop
jo
clc
loopne
sti
lea
or
mov
push
lret
addr16
shrb
lea
or
and
out
lcall
push
dec
fs
dec
call
mov
cmpsl
sbb
sbb
jge
push
je
jnp
or
out
pushf
or
pusha
push
ljmp
daa
sub
sub
sbb
aad
jg
push
adc
fstpt
jo
cmp
cltd
idivl
push
aaa
aaa
sbb
and
push
mov
sbb
loope
add
mov
or
jnp
shll
adc
jle
cmp
xchg
mov
jb
mov
adc
sbb
iret
sbb
and
mov
ljmp
mov
mov
int
jno
jae
dec
sub
pop
jmp
jge
jmp
mov
pop
fistpl
xchg
cmp
nopl
faddl
add
fdivl
sub
xor
mov
stc
sti
and
fdivrp
shll
mov
test
sbb
std
push
decl
js
jns
inc
js
ret
adc
fcoms
jmp
popf
add
js
bound
mov
mov
je
js
out
fidivl
shll
mov
push
pop
repnz
or
jle
in
push
pop
movb
mov
mov
leave
jge
inc
stos
xchg
add
sbb
adc
loope
fcmovne
call
jbe
push
adc
je
jmp
test
ds
xchg
mov
call
inc
or
xchg
mov
lret
xor
mov
mov
xchg
xchg
enter
and
cmp
pop
xchg
xor
daa
fwait
push
dec
add
sub
adcl
movsl
jno
sbb
les
pop
imul
mov
push
jmp
and
daa
sbb
add
dec
and
invd
adc
sub
inc
testl
or
inc
push
sahf
or
outsb
jno
add
xchg
outsl
popa
ret
sbb
incl
cmpsb
jmp
jecxz
jmp
loope
cmp
add
or
xchg
adc
push
enter
nop
les
mov
into
add
mov
clc
mov
push
pop
cltd
mov
mov
cmp
pop
ret
pop
or
or
add
push
pop
orb
mov
je
rcll
xchg
push
jmp
mov
push
lahf
sub
push
push
pop
and
pop
xchg
or
pop
inc
jg
mov
cmpsb
jo
fstpl
push
rolb
or
dec
test
adc
and
jl
mov
sbb
add
mov
mov
sbb
sub
add
xlat
outsl
adc
sbb
cld
lock
fs
les
mov
jmp
pop
and
xchg
and
stc
lea
pop
add
sbb
lds
pop
sub
lods
loope
pusha
cvtdq2ps
adc
push
cmp
pop
mov
repnz
adc
pop
or
and
call
or
mov
pop
ret
lahf
or
xor
xchg
pop
or
cmp
data16
adc
xchg
shlb
add
repz
mov
clc
push
sub
clc
setb
mov
mov
sub
cmp
setae
lcall
adc
popa
xchg
js
lret
pusha
and
js
jle
or
xor
pop
push
add
dec
in
inc
push
je
shll
lock
push
adc
dec
jo
dec
rcll
push
es
pop
pop
out
and
jnp
rcrl
and
test
mov
dec
xor
push
pop
cmp
pusha
sub
fwait
dec
inc
push
mov
dec
mov
sbb
sbb
mov
or
mov
adc
push
push
inc
push
shrb
push
dec
push
cmp
inc
fsub
adc
mov
ljmp
inc
xor
iret
pushf
pop
jmp
std
adc
cmp
mov
filds
movzbl
cmpsl
shr
cmp
jno
adc
and
imul
jns
jmp
xchg
dec
ja
orl
adc
sub
add
sub
scas
ja
xchg
sub
xor
pop
lods
fucom
mov
inc
adc
in
lods
mov
jnp
sub
aas
or
adc
movl
adc
lea
push
dec
jmp
jmp
fs
movsl
dec
pusha
jmp
iret
sbb
adc
inc
adcb
xor
movsl
jg
lea
mov
sub
cmpsl
pop
pop
xchg
mov
add
pop
nop
push
enter
pop
pop
sbbl
sbb
sub
sub
and
inc
js
mov
mov
or
and
dec
dec
rorb
shlb
cmpl
sub
jecxz
stos
mov
sahf
add
mov
xor
pusha
dec
mov
sbb
xchg
jne
cmp
sbb
pop
call
jp
lea
sbb
adc
dec
or
nop
jns
lock
dec
insb
fdivl
push
ja
pop
push
jne
movsb
lea
jo
mov
jmp
cmp
inc
rcll
frstor
pop
dec
sahf
cs
dec
push
pop
mov
push
int
ljmp
dec
add
inc
pop
je
lea
lcall
sub
inc
popa
pop
ret
aaa
mov
jmp
sbb
call
sbb
je
xor
es
jnp
xchg
ror
mov
je
mov
nop
xor
or
mov
dec
jmp
std
sub
fstl
lock
push
movsb
and
inc
subb
cmpsb
std
mov
jg
and
adc
rorb
mov
xchg
pop
ljmp
push
or
adc
insl
cmp
mov
push
push
dec
mov
es
push
dec
subb
mov
pop
jg
xchg
fwait
mov
xorb
add
sbb
sbb
sbb
and
add
cmp
and
add
aas
les
push
push
test
push
jl
sbb
push
push
pop
pop
loopne
sub
lret
and
lcall
jecxz
push
or
int
test
jo
mov
sbb
push
add
push
fcomps
add
add
add
fcmovnu
int
or
fmuls
jl
iret
scas
dec
cs
push
lods
sbb
pop
push
fisttpl
inc
dec
lods
dec
stc
or
or
xchg
cs
adc
mov
inc
or
fldenv
cs
push
add
jne
adc
mov
dec
cmp
mov
fs
pop
call
inc
add
mov
adc
jno
and
mov
lods
mov
or
add
push
xlat
jae
movsb
mov
or
faddl
mov
push
adc
mov
mov
jg
loop
sbb
decl
ss
es
sarl
outsl
pop
movl
jne
roll
push
clc
sbb
icebp
add
leave
xchg
pop
das
data16
mov
pop
sub
stos
pop
pop
insl
add
fptan
push
add
cmc
fidivrs
cmp
jns
aam
adc
adc
sbb
pop
adc
dec
bound
scas
movsb
pop
push
mov
lcall
push
ret
jns
sbb
ljmp
pop
loopne
xor
adc
rcrb
dec
adc
push
inc
negl
icebp
xchg
mov
or
icebp
mov
lahf
push
dec
ljmp
jecxz
mov
mov
adc
insb
dec
sbb
insl
enter
push
and
cld
xor
ret
mov
popf
mov
xchg
push
mov
push
adc
sub
cmp
sub
push
popf
aam
sub
adc
mov
and
or
and
push
cmp
sub
cmpsl
out
mov
pop
inc
shr
pop
fisubs
popf
push
adc
and
lret
jp
adc
cltd
js
add
sbb
sub
rolb
das
mov
ja
and
int
jl
add
push
in
in
push
repnz
out
imull
cmp
xor
std
jmp
cmp
mov
jl
push
push
add
les
das
push
push
jg
xor
fiaddl
xchg
test
pop
jl
jne
es
pop
push
lret
rclb
out
push
sbb
pop
mov
xchg
pop
into
sub
add
xchg
pop
mov
adc
adc
stos
mov
test
shll
sbb
sub
mov
movsl
or
add
lahf
aas
pop
push
push
xor
xchg
add
sbb
xorb
pop
add
or
pop
insb
pop
jne
das
es
repnz
xor
push
push
mov
popa
xor
mov
sbb
or
test
je
mov
dec
sbb
push
ds
out
add
fwait
dec
nop
sub
shrl
dec
and
pop
aam
or
push
lahf
ret
mov
mov
push
inc
jb
ljmp
pushf
sbb
sub
mov
js
xchg
rclb
lret
jae
shrb
xor
popa
mov
add
mov
pop
out
lret
add
sbb
test
pusha
cltd
nop
iret
inc
and
and
mov
lahf
cmp
adc
push
pop
sbb
sub
and
aaa
pop
and
adc
shl
aad
mov
into
clc
rorl
sbb
xor
mov
sub
and
enter
pop
sbb
jne
xlat
pop
das
aam
add
cmp
shlb
jne
adc
xchg
xor
push
lods
and
mov
cmc
data16
adc
stc
or
mov
call
loope
xor
and
fs
and
xor
add
into
ja
mov
push
and
loop
and
lret
adc
mov
mov
jmp
pop
sbb
sub
lcall
fwait
and
inc
push
inc
xor
pushf
inc
pop
pop
ljmp
xorb
hlt
mov
unpckhps
std
fists
push
push
daa
nop
rolb
push
pop
sub
sbb
imul
lcall
xor
aaa
lea
jns
in
mov
repz
jp
xchg
test
push
and
clc
push
sub
cmp
cmc
add
fists
cli
cmp
add
mov
add
and
and
mov
xor
sub
lea
leave
adc
inc
rolb
lods
sub
inc
or
mov
lock
addr16
cli
add
push
push
mov
scas
addl
sbbb
jnp
add
push
add
les
sbb
cmp
xor
dec
ss
push
pop
cmp
xor
push
fnsave
in
cmp
std
add
xor
push
inc
jle
push
push
js
mov
mov
push
daa
mov
sub
xor
mov
adc
jl
jae
pop
add
sbb
ss
sbb
push
adc
push
push
pop
ljmp
dec
mov
pop
addl
lahf
inc
sahf
or
add
and
push
and
cmp
pop
xor
mov
pop
pop
adc
or
cmpsl
push
pop
pushf
sbb
sub
data16
cmp
bnd
xor
cld
fidivl
pop
cs
or
add
ficoml
xchg
cmp
andl
xor
add
nop
sub
adc
xchg
sbb
cmp
test
dec
jbe
inc
cmp
push
mov
stos
dec
cmp
lds
inc
loopne
cmp
adc
push
sub
xchg
adc
dec
mov
inc
test
sub
ret
xor
into
mov
push
loop
dec
mov
cmp
push
sbb
insl
lods
pop
push
mov
jge
push
or
or
cmp
or
jne
movl
enter
leave
xor
cmp
and
adc
ret
or
push
or
lea
decl
cwtl
jecxz
mov
add
stc
lods
pop
inc
sbb
inc
pusha
pop
add
xor
mov
push
hlt
push
ljmp
push
mov
add
push
lahf
add
and
inc
movb
ret
xor
cmp
imul
adc
mov
iret
outsb
add
xorl
sahf
jno
pop
out
popa
gs
mov
jae
jmp
jle
mov
sbb
and
add
adc
add
in
mov
stos
in
push
sub
add
sub
scas
ljmp
fdivrs
add
mov
dec
ret
dec
rorb
push
xchg
xor
mov
ljmp
add
jmp
hlt
push
inc
sbb
mov
mov
pushf
pop
fcomp
push
enter
sub
xchg
push
inc
xchg
inc
mov
fsubl
mov
je
jmp
xor
clc
mov
mov
jmp
fldl
repnz
push
into
cs
pop
imul
add
lock
xor
jae
inc
cmp
addr16
mov
pop
fwait
insb
out
insb
add
scas
pop
call
clc
testl
out
mov
mov
and
pusha
xchg
aam
pop
call
jecxz
pop
inc
lret
sub
pushf
outsl
and
sbb
or
rorb
sbb
test
jg
popf
or
push
rcrb
cli
jno
in
test
and
or
arpl
les
ret
add
into
and
mov
pop
pop
daa
in
pop
mov
leave
loopne
add
push
test
je
jne
pop
shrb
or
or
cmp
push
rolb
dec
dec
push
mov
pop
or
daa
xchg
sub
jo
fistpl
in
or
cmpsb
push
inc
mov
leave
mov
rorl
push
jge
pop
push
and
popa
int
adc
and
gs
test
gs
or
les
or
add
mov
sub
lret
in
dec
roll
dec
in
cmp
add
xchg
pop
mov
xchg
sbb
shlb
sbb
loopne
cmp
je
pushf
mov
sti
cld
adc
mov
jbe
in
sub
roll
jns
movsb
push
push
push
mov
dec
push
xor
cwtl
lods
or
sub
xor
sbb
xor
shlb
adc
sbb
shl
xor
dec
out
add
test
mov
adc
push
adc
pusha
jb
xor
and
fildll
in
adc
push
push
mov
in
inc
adc
test
sahf
cltd
scas
mov
pop
add
lcall
or
inc
cmc
insb
mov
pop
loope
pop
pusha
nop
xlat
pop
repnz
nop
adc
inc
dec
andl
sub
and
and
jno
cltd
add
cmpb
adc
push
ja
movsb
mov
add
ret
imul
andb
jns
adc
push
test
cmp
and
inc
add
cmp
pop
enter
push
push
jae
enter
xor
sub
add
enter
daa
sti
les
xor
push
push
insb
add
or
inc
sbb
pop
rorl
push
shl
mov
inc
and
pushf
mov
xorl
test
enter
lock
sub
sahf
divl
les
cmp
sbb
imul
add
sbb
cwtl
push
mov
sbb
dec
les
rcr
enter
mov
inc
jg,pt
ds
sub
mov
cmp
push
xor
mov
lahf
cmp
hlt
imul
sbb
sub
adc
cmp
push
jnp
add
push
aas
mov
cmp
lods
xchg
add
out
out
pop
rcrb
pop
fidivrs
or
adc
mov
xor
je
mov
cmp
and
adc
mov
aas
movsb
out
sbb
jae
or
outsl
xor
lahf
bsf
inc
out
pop
jmp
push
sarb
xor
dec
xchg
push
pop
enter
mov
les
std
cmp
sbb
sbb
inc
dec
mov
fs
add
data16
ret
pop
inc
je
fisttps
test
xor
or
mov
push
sbb
and
dec
inc
rcrb
mov
dec
fs
inc
roll
inc
and
dec
or
pusha
test
dec
xchg
jb
lret
mov
add
mov
push
and
rolb
das
pop
cs
mov
mov
pushf
dec
insb
je
jno
jnp
adc
iret
stos
mov
pop
frstor
xor
test
and
jp,pn
jg
jne
out
adc
daa
nop
xchg
inc
mov
sub
lea
je
aas
mov
and
jle
dec
clc
and
or
jge
push
adc
push
lock
fwait
mov
mov
dec
jmp
or
decl
jge
mov
bound
jg
stos
and
fidivrl
push
jnp
add
pop
je
rol
pop
push
jl
fucomi
shll
xor
jne
push
add
lea
jg
shr
outsb
mov
lea
inc
test
jmp
int3
mov
lret
inc
mov
out
cmp
out
adc
pop
nop
or
or
push
sub
push
push
or
lret
add
js
or
sbb
inc
pop
xor
jl
xor
aam
mov
rorl
dec
sub
adc
add
dec
int3
cld
jmp
and
cmp
nop
add
cli
push
jbe
push
cmp
or
adc
jp
bound
test
jle
sub
mov
out
mov
and
sub
xor
shll
and
adc
add
aas
aad
les
fdivrs
xor
cmpsl
xorl
mov
xchg
out
jns
add
and
add
push
leave
adc
aad
jmp
lods
add
es
jb
mov
push
dec
sbb
ss
shl
pusha
cmp
adc
or
loop
pop
add
ret
pusha
add
dec
and
jno
and
sub
cmc
dec
sbb
jmp
and
popa
ljmp
inc
repnz
pusha
or
inc
in
xchg
es
and
loope
jle
mov
dec
pop
js
xor
jne
je
movl
push
push
test
ss
scas
jae
jo,pt
pop
or
xchg
xlat
sbbl
jecxz
xlat
rorl
js
loope
add
xchg
fcomps
incb
jle
mov
mov
xor
call
in
push
xor
scas
aad
and
add
add
test
adcb
hlt
add
loopne
imul
jnp
adc
fs
or
out
add
outsb
jae
dec
aam
xor
pop
push
mov
push
add
mov
xor
cmp
movsl
sub
pop
jg
pop
or
or
inc
push
inc
push
xchg
fldenv
pusha
ja
push
add
rcll
jp
jle
aas
add
xor
js
mov
lock
pop
dec
cld
lea
sub
fs
dec
xchg
rol
jo
sbb
fimuls
in
jo
sbb
mov
data16
add
and
mov
aad
sbb
fsubrl
pop
and
xor
dec
sbb
movsl
icebp
cmpb
repnz
call
inc
add
scas
add
push
inc
test
pop
add
push
and
mov
jmp
jo
iret
cwtl
or
mov
xor
femms
aad
xor
test
stos
adcb
subl
mov
push
inc
mov
inc
leave
and
add
adcl
dec
loopne
es
icebp
xlat
adc
sub
pop
add
mov
arpl
das
dec
test
sbb
dec
fdiv
inc
add
dec
out
cmp
dec
add
inc
push
push
sti
xor
enter
fsubs
addl
or
pop
hlt
add
ret
je
pop
inc
cmpsl
aad
adc
push
iret
fldt
push
push
into
push
sub
pop
jmp
iret
fsubrs
push
cmp
test
push
add
push
adcb
or
mov
aam
cmp
fdivrp
xchg
hlt
mov
adc
add
ds
push
mov
sub
sub
and
sbb
mov
and
push
sbb
pop
and
xor
sub
or
dec
and
fdivs
sub
xchg
mov
popf
clc
js
sete
mov
out
lea
mov
outsb
adc
pop
test
cmp
adc
repnz
xchg
jmp
jno
int3
cmp
push
ret
push
xchg
inc
cmp
sub
add
and
xchg
daa
out
ret
jmp
test
sub
push
add
pusha
add
adc
arpl
push
jg
cmpb
pop
js
push
and
addr16
sub
inc
mov
pushf
jo
ret
mov
and
lcall
test
cmp
sbb
sbb
outsb
addr16
push
jg
lds
scas
add
lea
ficoms
fwait
insb
mov
or
cmp
and
in
lret
rorl
dec
inc
add
shl
mov
pusha
adc
push
mov
adc
enter
sub
add
pop
adc
rorl
xadd
mov
xchg
xchg
adcl
mov
cli
add
popf
shrb
push
imul
cmp
sbb
cmp
add
lock
jle
jl
or
adc
dec
enter
pop
adc
int
fcomps
inc
ret
icebp
inc
xor
and
scas
push
cmp
mov
or
lret
xorb
cmp
push
scas
test
loope
and
out
ret
lock
inc
or
jno
lock
and
and
mov
inc
pop
mov
add
je
pop
loope
les
mov
in
dec
sbb
rorb
xor
scas
xchg
sbb
jle
bound
stos
or
add
ja
rclb
xchg
mov
push
mov
pop
sbb
bound
mov
stos
call
roll
call
pop
or
pop
test
xor
enter
push
mov
pop
lea
cmpsb
xor
mov
stc
sbb
push
or
icebp
cmpl
mov
or
ja
hlt
je
push
leave
xchg
adc
orl
adc
xchg
inc
pop
cmp
inc
jle
sub
or
adc
push
add
mov
adc
cmp
pop
inc
leave
bound
outsl
or
sbb
mov
and
jbe
inc
nop
pop
lds
testl
dec
out
pop
in
loope
mov
mov
ret
push
push
mov
add
jl
or
aas
fnstsw
daa
mov
adc
and
mov
sub
sbb
push
fstpl
movzwl
push
sbbl
ret
xor
pop
push
cmpsl
fnstenv
icebp
push
mov
loopne
movsl
jns
loopne
mov
fwait
inc
cmp
inc
std
sub
add
shll
and
cmpsb
mov
leave
xor
add
ret
push
and
cmp
bound
add
mov
dec
push
dec
jnp
push
jg
mov
std
mov
hlt
cmp
jne
xchg
popf
sbb
inc
les
lock
test
mov
sub
push
push
shr
ret
fdivrs
aaa
mov
aas
daa
scas
sbb
mov
add
insb
sbbb
jbe
int
sbb
cwtl
sbb
and
pop
adc
xor
dec
lea
adc
add
sub
or
lea
cld
popf
mov
jge
push
push
push
imul
xor
jl
sub
add
pop
push
add
mov
adc
sub
jmp
add
lret
xlat
xor
rol
sti
pushl
mov
sub
lods
ljmp
stc
xor
and
mov
and
xor
mov
ss
lods
xchg
mov
xor
sbb
popf
push
out
and
or
mov
and
cwtl
pop
dec
cs
int
jb
inc
sbb
lds
adc
pop
rcr
adc
aam
sar
lret
pop
insb
inc
push
ja
test
hlt
cmpsb
xor
je
cmpb
pop
pop
shl
stos
add
lock
push
mov
push
mov
sti
sub
ja
pusha
jae
in
sub
mov
add
add
ret
cmp
push
cmp
loopne
pop
sti
mov
dec
hlt
jge
jae
cmp
or
inc
inc
xchg
iret
or
push
dec
mov
ret
movl
popf
aaa
pop
es
pop
jno
enter
inc
fsubrs
push
es
popa
adc
or
add
loopne
adc
sahf
jl
mov
push
jg
push
add
push
mov
add
push
ret
enter
push
aam
push
bound
orl
dec
add
mov
call
push
jo
push
icebp
adcl
hlt
sub
push
test
popa
inc
xchg
cwtl
dec
into
mov
adc
mov
cwtl
and
loopne
xor
loope
insb
test
imul
adc
lcall
adc
xchg
xchg
cmp
ret
jg
cmp
in
cmp
mov
cmp
mov
pop
outsl
shlb
nop
lods
gs
leave
add
mov
cmp
adc
push
subl
add
mov
fisubrs
cmp
sbb
stos
lea
jle
scas
pop
mov
add
lods
ret
filds
arpl
cmp
and
dec
xorl
jp
jo
push
xchg
lahf
pop
aas
inc
push
add
inc
loopne
pop
clc
popa
or
mov
mov
in
xchg
or
rep
popf
push
test
adc
adc
stc
dec
imulb
push
mov
mov
or
test
cmp
adc
adc
push
mov
sub
imulb
or
dec
adc
test
jl
loope
pop
mov
aaa
cmp
jle
lock
scas
add
add
cmp
jne
or
sub
jecxz
pusha
sahf
mov
push
push
data16
loopne
add
add
xchg
push
mov
sahf
cmpsl
push
jae
push
rorl
dec
xor
push
cltd
or
push
xchg
adc
aaa
mov
push
sub
add
and
out
dec
test
rcll
rcrl
mov
push
pop
mov
pop
hlt
push
rolb
jae
lea
jbe
or
mov
sbb
sub
std
imul
shrb
pop
mov
outsl
stos
jl
add
ret
pop
shrb
add
adc
sub
or
pushf
clc
test
inc
call
cmp
xchg
insl
pop
pop
mov
push
dec
cmp
sahf
sub
pop
adc
or
test
hlt
pop
pop
ret
inc
mov
sbb
or
or
lods
xor
push
jns
shl
jl
dec
and
fcoms
pop
scas
add
mov
push
mov
sti
mov
mov
insb
mov
lock
inc
or
add
sbbb
pop
cmp
repz
inc
mov
push
sbb
mov
rolb
push
or
push
mov
sbb
insb
sub
cld
sub
add
andl
sbb
push
add
or
mov
minps
xchg
ret
sub
je
jge
dec
dec
sub
cmp
xor
fs
push
test
dec
cwtl
and
xor
cmp
daa
or
repnz
andb
push
cli
inc
scas
mov
inc
cwtl
mov
mov
lods
fsubrs
mov
xchg
nop
test
and
and
push
lds
pop
jb
jmp
mov
fwait
inc
shll
mov
mov
daa
dec
sub
rorb
shrb
popf
out
sbb
rorb
sbb
mov
sub
mov
or
inc
sub
scas
or
icebp
add
jmp
cmp
add
out
xor
add
pop
push
and
mov
push
xor
iret
ret
mov
add
pop
lock
or
rolb
sbb
cwtl
adc
lgs
fnsave
mov
dec
test
mov
sub
cmp
and
inc
repz
push
dec
dec
xchg
lret
push
lahf
xor
inc
popa
lods
jle
mov
mov
clc
fisubrs
sub
pop
push
mov
mov
add
aam
ret
jne
mov
sbb
add
mov
jae
jne
push
or
loopne
pop
outsb
xor
loopne
and
mov
pop
dec
jae
movsl
mov
sbbl
adcb
add
xchg
ljmp
adcb
das
or
push
push
push
xchg
xchg
xchg
sbb
in
sti
addr16
loopne
mov
push
adc
dec
dec
stos
or
inc
pop
add
gs
xchg
and
notb
rcrb
mov
dec
dec
loope
sub
adc
jmp
mov
xchg
into
add
adc
sbb
ja
xchg
jmp
add
call
sti
cmp
push
dec
jge
lea
push
dec
lods
pop
cmpsl
jecxz
dec
jnp
cmp
xor
mov
inc
pusha
stos
sbbl
pop
and
out
add
rclb
je
add
xor
scas
movsb
cmp
xchg
or
cmp
add
pop
xor
xor
mov
and
mov
push
mov
andb
pop
pop
rcll
pop
lock
pop
or
and
sub
jo
cmp
mov
lret
inc
pusha
in
jecxz
mov
cwtl
pusha
clc
int
lahf
sub
lock
add
cli
and
push
inc
cmp
pop
adc
int3
push
cmc
int
sub
lds
lods
mov
dec
xchg
mov
mov
mov
dec
and
add
push
jecxz
or
movl
out
adc
pop
adc
add
xchg
or
ss
push
ficoml
lds
or
adc
enter
push
mov
stc
or
or
jo
xchg
pop
push
enter
cmp
sbb
fdivs
mov
pop
jle
in
xchg
xorl
mov
pause
push
loop
push
repnz
sbb
adc
and
rorl
mov
hlt
sub
adc
sub
sub
popa
aad
ret
orps
jns
into
pushf
in
mov
sbb
test
pusha
pop
lret
lea
leave
push
fldl
stos
xor
sbb
pop
lock
xorl
in
or
push
and
pop
cmp
imul
outsb
jecxz
gs
push
hlt
loope
pop
mov
push
cltd
dec
in
pop
lcall
add
and
and
add
add
mov
insl
sub
test
sub
fistps
pop
push
ret
ret
outsl
and
add
cmp
push
insl
sbb
pop
adc
cmp
pushf
fucom
and
or
dec
adc
call
subb
cs
mov
dec
jb
and
add
adc
icebp
cmp
frstor
and
test
xlat
arpl
ds
aas
mov
mov
xor
pop
jb
add
lgdtl
xor
out
adc
lock
outsb
and
pop
cmc
pop
or
add
pop
stos
movsb
adc
push
inc
adc
sbb
dec
inc
add
sbb
push
or
roll
or
movsb
test
inc
or
addb
push
dec
push
sar
jns
push
or
punpckhbw
xor
sbbb
xchg
mov
or
jno
mov
int
sti
jnp
inc
jmp
mov
jo
mov
mov
scas
add
test
sbb
aaa
fdivr
mov
sub
mov
js
xor
pusha
je,pn
add
add
ja
mov
ds
repnz
fsubp
mov
movsb
cmp
into
and
jp
addr16
dec
out
or
stc
and
std
jge
cmp
mov
test
addb
push
xchg
mov
or
nop
jns
mov
cmp
push
ja
adcb
in
pop
push
add
aaa
mov
or
push
sbb
add
lods
xor
and
loop
xor
shl
add
inc
adc
sub
dec
and
add
or
in
dec
ret
cmpl
push
xor
mov
jg
jne
ret
pop
leave
and
fldenv
xor
scas
xor
daa
es
ret
sbb
sbb
and
add
cli
lods
adc
inc
inc
mov
add
sbb
xchg
jecxz
call
mov
mov
sbb
xor
adc
or
inc
test
fsts
fistpl
aas
push
les
inc
sub
cmp
pop
mov
pop
pop
cwtl
jg
xchg
push
pop
pusha
lcall
cmp
shrb
push
inc
sub
dec
stos
add
aad
shlb
jb
mov
jle
mov
xchg
mov
mov
sub
imul
add
in
jg
mov
cmpb
clc
sub
jecxz
icebp
jge
lret
mov
or
out
out
push
jl
cmp
push
andl
pop
and
push
jge
addl
sti
es
lea
add
pop
push
push
push
push
mov
lds
push
mov
fidivrl
push
inc
and
test
lret
sub
add
add
push
lock
dec
fs
sbb
sub
jo
or
insb
sub
jb
int3
lret
fisttpll
pusha
mov
js
xchg
jle
jg
out
mov
sbb
test
incl
push
push
mov
sbb
mov
movsb
sbb
push
add
and
and
call
sub
mov
sbb
mov
roll
add
push
cltd
inc
xor
int
sbb
sbb
cltd
scas
lea
jmp
mov
sbb
dec
sub
mov
fidivs
rorl
ret
lock
popa
xchg
adcb
push
dec
or
push
lret
dec
je
gs
insl
add
sub
push
popa
lods
sbb
fdivrs
push
ss
push
inc
adc
movsl
sbb
cmpsl
ret
push
jo
iret
adc
test
outsl
sahf
push
xorl
pusha
cmp
int
jnp
fldenv
push
shr
or
pop
into
mov
call
outsl
push
sub
or
inc
add
out
add
pop
dec
add
or
push
or
add
cmp
dec
and
lock
add
notl
loopne
sub
sub
push
in
add
add
mov
loope
push
push
lcall
push
ds
or
push
es
push
and
and
sbb
roll
lock
pop
xor
es
push
add
jmp
jge
xor
shlb
mov
push
push
js
adc
addl
inc
mov
mov
dec
add
shll
add
sti
sahf
mov
xchg
les
fnsave
xor
sbb
cwtl
push
lcall
pusha
pop
rolb
enter
jae
mov
push
in
add
ja
sub
mov
sbb
pop
pop
adc
push
mov
push
addb
mov
xor
mul
jns
imul
sub
sbb
push
add
sub
and
out
jmp
push
adc
bound
int3
xor
sub
and
or
push
mulb
or
rclb
outsb
pusha
repnz
pop
shll
mov
add
or
loop
sbb
adc
pop
push
push
inc
les
inc
inc
out
orb
clc
xor
push
mov
xrelease
movl
lock
jle
xor
cmp
jbe
cwtl
ret
pop
add
push
in
and
dec
lock
jo
push
sar
aaa
xchg
faddp
stc
inc
dec
daa
lock
or
lret
and
sbb
lret
dec
rcrb
pop
fsts
inc
bound
add
std
or
jnp
jae
and
ret
test
or
fildl
movl
mov
dec
xorl
or
mov
pop
pushf
loopne
cmp
and
xor
jb
add
cmp
sub
mov
or
sbb
sub
movl
sbb
mov
ret
jge
shlb
movb
imul
and
xor
sub
cmpl
mov
cmp
lea
pop
adc
sub
push
push
push
push
imul
xorb
mov
dec
push
pop
loop
test
xchg
unpcklps
jo
jo
rcl
in
jae
movsb
les
pop
inc
cli
lcall
pusha
or
mov
mov
test
ret
ja
out
movl
inc
jae
pushf
jle
sbb
popa
jne
cmp
jl
mov
push
fstpl
nop
or
mov
unpcklps
insb
adc
in
push
dec
mov
imul
pop
dec
arpl
movb
lea
add
adc
push
cmp
fdiv
pop
inc
add
mov
adc
xchg
scas
add
dec
loopne
hlt
cmp
mov
test
mov
xor
xor
int
jmp
or
fdivs
pusha
mov
movb
or
sub
xor
xor
xchg
cmpsl
mov
pop
sub
loopne
add
adc
loope
call
pop
jecxz
and
sahf
loop
daa
inc
inc
or
sbb
push
jp
or
test
xchg
js
lds
mov
push
sbb
ja
push
cmpsb
sub
hlt
mov
dec
mov
dec
lods
push
loop
or
filds
and
push
push
loope
dec
popa
pop
es
in
loopne
mov
imulb
cmp
in
sub
xlat
xor
gs
ss
jge
dec
je
nop
dec
jo
and
roll
je
jo
lahf
sub
add
jl
in
cmp
cmp
jecxz
imul
je
add
or
push
adc
bound
and
adc
shr
sub
push
push
movsl
and
mov
inc
hlt
mov
add
jno
or
push
into
fidivrl
cmc
push
loope
inc
adc
add
dec
dec
mov
sub
mov
lcall
push
jmp
mov
and
pandn
inc
inc
sarl
cmp
cmp
mov
and
leave
xor
add
sbb
cmpsl
adc
xchg
mov
int
or
fisttpl
clc
or
xor
mov
or
dec
add
lret
add
sbb
jl
sbb
into
lahf
mov
nop
jl
mov
inc
mov
add
push
sbb
mov
jl
inc
cmp
es
push
lahf
cli
mov
lods
dec
and
cs
push
mov
xchg
sbb
add
pusha
pop
mov
mov
push
mov
sbb
or
push
orl
notb
pop
inc
mov
pop
aas
mov
push
cmp
jmp
or
je
add
push
out
or
jo
and
and
push
sub
adcb
leave
lds
pop
inc
add
sub
add
or
jmp
dec
rcl
push
repz
jnp,pt
push
movsl
or
stos
insb
int
clc
pop
xor
adc
cmc
pop
or
push
push
mov
call
sbb
in
adc
mov
rorb
cmp
push
inc
popf
adc
mov
call
inc
int
push
lea
shl
pop
cmp
ds
pop
je
sub
inc
xor
pop
xchg
fadd
outsb
ficompl
cmp
fwait
cmp
rolb
aas
mov
cmp
dec
jb
shll
and
xchg
nop
inc
xchg
adc
cmpsl
imul
sbb
adc
test
push
mov
fsubrs
jne
push
loopne
mov
lods
mov
mov
sbb
sub
lea
cmp
sarb
sub
push
sti
pushf
sbb
xchg
xchg
or
push
xchg
push
add
cli
or
adc
loope
inc
lock
jns
pop
inc
loope
in
outsl
adc
adcl
test
mov
icebp
or
add
cs
pusha
lock
clc
add
out
sbb
xor
aam
ret
xor
xchg
push
sbb
xchg
shr
mov
adc
repnz
test
push
adc
dec
mov
test
fidivrl
xchg
mov
icebp
sahf
dec
push
adc
push
pop
pop
push
cmc
lret
adc
sub
push
flds
mov
pop
cltd
clc
fiadds
in
inc
sbb
pop
fcoms
jmp
out
dec
adc
push
sbb
mov
sbb
ss
test
push
mov
push
test
mov
rcll
jmp
lds
fldl
jno
xor
adc
and
mov
pop
push
mov
cmp
mov
xor
inc
dec
lods
sahf
dec
xor
cmp
addb
dec
fbld
pusha
les
shlb
mov
push
testb
out
dec
shrb
dec
pop
jno
test
lea
shrb
sbb
and
push
fistl
sbb
jmp
push
xchg
pop
push
icebp
dec
or
call
pop
xchg
sbb
mov
jg
mov
push
xor
mov
stos
sti
cmp
mov
adc
lods
xor
push
pop
test
or
orl
cmp
add
mov
mov
cmp
scas
sahf
mov
dec
add
inc
dec
adc
mov
lret
or
mov
xor
lods
roll
dec
add
test
andl
bnd
push
je
out
test
and
xchg
imul
and
jmp
nop
xor
mov
mov
es
daa
inc
or
nop
pop
push
pxor
xor
mov
or
or
shlb
sbb
push
bound
or
cmp
xchg
push
and
adc
pop
push
mov
adc
jle
push
jmp
enter
ss
push
add
xchg
inc
pusha
sub
dec
loopne
loope
mov
sub
repnz
xchg
add
ret
push
scas
xchg
adcb
pop
aas
push
cltd
in
jmp
jne
fstpl
inc
mov
dec
push
mov
sub
pusha
ss
mov
cmc
mull
add
mov
nop
mov
mov
pusha
push
mov
jg
insb
push
and
sbb
enter
das
cmpsl
inc
inc
repz
aad
jl
inc
push
xlat
pop
add
mov
or
add
testb
sbb
xor
icebp
adc
cmpl
mov
mov
add
roll
pop
lcall
and
xor
inc
jle
xor
add
push
sahf
xchg
fcomp
je
mov
push
add
mov
ja
jo
inc
adc
movsb
sahf
inc
gs
jne
insb
adc
or
repnz
add
mov
and
xchg
mov
mov
dec
sub
and
clc
pusha
loope
test
cmp
add
sbb
aaa
bound
mov
adc
sahf
mov
pop
pop
push
mov
pop
mov
mov
arpl
sub
xor
cmpsb
mov
int3
mov
jmp
push
movsb
iret
and
test
and
addb
sub
shrl
mov
out
popw
xor
pop
mov
push
add
sahf
fdivrs
outsb
loope
es
dec
inc
enter
pusha
inc
push
xor
add
dec
xor
inc
add
mov
jecxz
lock
push
and
dec
mov
push
and
rcrb
cmp
or
mov
dec
add
roll
out
shrb
fcoms
add
sub
sbb
xor
rclb
inc
jne
or
popf
pop
add
arpl
or
icebp
cmp
rclb
test
sub
leave
xor
push
sbb
leave
sbb
jne
je
sub
scas
or
pop
add
xor
movsb
pop
push
addl
and
nop
push
imul
mov
shrb
adc
push
add
je
je
push
pop
pop
sahf
or
les
and
fs
pusha
or
mov
loopne
out
sbb
adc
jle
lock
pop
mov
lea
nop
repnz
inc
jmp
push
push
sarb
lret
xor
pop
or
or
add
ja
mov
aaa
je
add
xor
pop
push
clc
pop
sub
js
mov
add
mov
inc
fs
movsb
shrb
or
xlat
das
ret
push
insb
jmp
sub
push
push
xlat
test
or
jns
aad
push
xchg
pusha
sbb
or
mull
sbb
sbb
insb
lods
xor
nop
and
xor
das
or
je
int3
outsb
xchg
icebp
and
into
cmp
dec
arpl
std
test
pushf
test
and
aam
scas
jb
or
jl
jae
dec
add
fs
sub
fmuls
xlat
jo
jne
mov
push
mov
xchg
nop
lret
pop
adc
in
mov
pusha
cltd
stos
dec
or
add
pushf
xchg
pop
in
dec
sub
xchg
sub
bound
xor
xor
pop
dec
int3
mov
xchg
cmpsl
pop
repz
repnz
push
and
adcb
cltd
xor
adc
inc
cwtl
sahf
or
pop
add
loopne
ror
mov
cs
lock
bound
inc
push
lea
arpl
add
mov
pop
std
cmc
test
inc
cmp
aam
mov
pop
mov
push
and
add
test
jnp
fsubr
push
out
shll
orl
sbb
adc
add
jg
call
or
push
lea
clc
bound
scas
sbb
lea
cld
cmpl
add
out
adc
xor
addr16
aam
rorb
dec
mov
cmc
push
mov
jmp
lea
xchg
mov
popa
jo
jb
call
add
jne
mov
cmpb
je
push
push
andl
call
fiadds
sbb
test
in
mov
pop
fs
gs
orb
push
mov
ret
or
xchg
loopne
loope
add
dec
loopne
dec
mov
psraw
and
ret
pop
sub
cld
and
fnstsw
sbb
popa
nop
jmp
push
cmp
mov
jo
sbb
addr16
ret
pop
sub
jnp
mov
js
arpl
inc
into
and
sahf
inc
outsb
push
dec
adc
sub
movsb
repz
adc
add
cvtps2pd
sahf
sbb
push
imul
inc
adc
and
movsb
mov
sbb
and
adc
xor
and
sbbl
and
orl
dec
pop
mov
or
lds
imul
adc
lock
lcall
add
sarl
jae
sbb
dec
sub
cmp
xchg
adc
inc
pop
mov
inc
icebp
adc
seta
jb
xchg
xor
adc
xor
adc
mov
cmp
cmp
cmp
inc
dec
inc
or
fnstcw
inc
dec
pop
lahf
sub
ds
lea
xor
inc
xchg
pop
mov
adc
lock
fdiv
fidivs
push
popf
adc
mov
push
mov
rcrl
fucomi
or
enter
push
push
push
xchg
nop
mov
fs
orb
mov
rcll
inc
mov
xor
jne
lds
sub
outsl
and
cmp
sbb
mov
in
add
pop
xchg
push
popa
push
popf
push
adc
add
and
cld
mov
inc
push
or
and
sub
iret
cmp
shr
add
mov
add
dec
or
push
mov
push
mov
in
insl
roll
push
loop
jg
push
fs
cmp
jne
push
jno
mov
adc
jmp
and
cmc
ret
add
pop
adc
jmp
daa
jmp
xchg
or
cmp
pop
adc
insb
xchg
pop
add
jecxz
les
je
xchg
icebp
adc
inc
gs
sub
inc
out
mov
mov
test
cmp
jg
push
les
xchg
or
aad
add
push
fisubs
adc
mov
cmp
or
mov
cmp
je
xor
inc
cmp
inc
add
leave
mov
pop
adc
fadd
xor
push
daa
mov
push
or
mov
and
fbstp
mov
loop
fs
inc
mov
rclb
xchg
out
push
xlat
sbb
stos
decb
call
popa
jl
in
cmpsl
mov
pop
dec
aad
movsb
jle
movsb
xor
sbb
push
out
jl
shufps
mov
icebp
inc
daa
add
ret
push
fs
mov
sbb
cs
push
movb
je
call
lret
mov
inc
add
dec
or
ficoms
pop
inc
mov
incl
push
add
adc
push
inc
push
mov
push
and
xor
test
pop
pop
adc
lods
sbbb
fcmovb
xchg
and
mov
mov
or
inc
pop
mov
mov
mov
or
daa
cmp
aaa
add
add
xor
xor
xor
aas
xchg
aam
aam
in
pop
inc
hlt
and
neg
push
out
add
je
aad
in
sbb
dec
or
xor
sahf
adc
jmp
or
add
hlt
inc
das
adc
bnd
jge
loopne
push
jns
push
addr16
arpl
mov
or
pop
out
xchg
js
and
hlt
shlb
dec
hlt
mov
cld
mov
push
jg
cmpb
jne
inc
inc
xor
leave
sub
or
jne
cmpsb
imul
sbb
push
sbb
bound
imul
aaa
adc
movsl
lret
dec
inc
pop
sub
cwtl
or
pop
dec
aas
or
sbb
xor
xchg
jmp
pop
mov
xor
mov
aad
xor
push
cld
mov
xor
push
sbb
sbb
mov
insb
imul
lods
divb
lds
add
sbb
xchg
lds
rcll
test
xchg
and
in
inc
add
or
adc
or
fisubrs
pop
pop
and
mov
xchg
cld
mov
out
push
lea
out
andb
lcall
fdivs
mov
xor
mov
lods
or
and
jo
inc
mov
or
shr
aaa
push
inc
adc
lock
lahf
movsb
daa
out
or
push
repnz
push
lock
xor
gs
xor
push
add
mov
jns
pop
push
pop
sahf
push
scas
enter
sbb
push
call
addr16
sub
mov
jns
push
arpl
mov
cmp
inc
push
push
sahf
add
add
icebp
add
cmp
hlt
push
xor
lods
mov
in
mov
pop
fcoms
push
inc
or
mov
xchg
inc
rcl
adc
popa
sub
push
repz
dec
cmpsb
sub
sub
adc
push
or
push
dec
lcall
inc
popa
push
ljmp
push
addr16
push
cmp
cmp
mov
sbb
and
cmp
inc
pop
push
jb
or
pushf
inc
and
dec
add
xor
mov
mov
jmp
cmpsb
mov
inc
iret
cmp
jne
add
into
and
cmpsl
aam
sbb
aaa
push
mov
mov
mov
jmp
push
or
ret
adc
mov
push
dec
je
push
jmp
cwtl
inc
je
pop
les
shll
adc
dec
xor
mov
pop
cmpb
or
add
in
jl
loopne
sbb
pop
fisubs
dec
sbb
insb
inc
jecxz
or
movsb
repnz
adc
adc
iret
xchg
push
push
and
and
repnz
and
arpl
and
push
loopne
rclb
or
mov
cmp
test
mov
xchg
cmp
hlt
inc
mov
dec
cmp
leave
or
ret
pusha
ret
sbb
es
sub
mov
dec
and
int
cmc
add
jmp
sbbb
mov
lea
in
mov
pop
inc
dec
inc
ret
jne
lods
in
mov
xor
enter
adc
cmp
inc
push
push
mov
mov
sti
repz
mov
and
push
lods
add
inc
sub
icebp
and
shll
mov
daa
push
test
add
dec
xlat
int
push
mov
repnz
push
add
in
or
add
sbb
sbb
fmuls
sbb
pop
inc
adc
pop
inc
add
add
jge
sbb
enter
sbb
sub
or
push
fadds
add
jmp
pop
jl
mov
inc
hlt
pusha
add
in
jl
fs
les
sbb
aas
and
add
and
sbb
dec
pop
es
dec
into
sbb
andb
add
mov
lods
outsl
sub
out
sbb
loopne
loop
push
jbe
pop
sti
jp
dec
fisttps
inc
sbb
sbb
push
jp
dec
aad
cmp
fidivl
pop
aad
pop
add
dec
shr
inc
sahf
push
je
dec
pop
dec
sub
xlat
aas
or
mov
sbb
mov
ss
sub
xchg
and
push
hlt
adc
sarb
jb
mov
push
push
in
dec
insl
test
mov
xor
gs
movsb
pop
push
add
sub
xchg
mov
ja
mov
and
adc
ss
clc
andb
xchg
dec
push
or
sti
insl
fcomps
push
outsl
push
cli
sbb
pop
pop
and
adcb
sbbl
fistl
cltd
fucom
sbb
mov
xor
inc
pop
cltd
pusha
push
xchg
inc
pusha
add
dec
or
stc
adc
add
inc
popa
push
or
add
and
and
inc
add
insl
or
push
inc
add
push
push
pop
int3
mov
test
sbb
xchg
or
fisttps
xchg
and
jmp
inc
sbb
xorb
push
sahf
inc
mov
push
roll
xor
cs
adc
push
jnp
sbb
cmpb
sbb
xorl
pop
in
add
mov
pop
xor
push
ret
and
lea
push
push
aaa
xor
aad
sbb
mov
stos
sbb
addr16
inc
pop
xchg
scas
pop
rolb
inc
push
adc
xor
and
enter
mov
push
pop
pop
mov
imul
add
sub
dec
mov
or
fcoms
xchg
cwtl
mov
aad
fsubr
dec
outsl
xor
shll
push
xor
push
orb
hlt
mov
inc
lret
js
xchg
xchg
out
push
aam
sub
sbb
mov
dec
orl
pushf
inc
std
jmp
inc
sbb
or
xor
ret
testb
outsb
icebp
push
or
int3
imul
ret
mov
or
xor
mov
mov
loope
and
lods
jle
jg
lock
push
testl
mov
push
in
and
and
js
adc
inc
es
adc
sbb
mov
sbb
pop
sub
mov
add
rcrb
mov
push
aas
jl
inc
add
leave
xor
stos
outsl
xchg
sahf
lds
or
jmp
inc
push
jno
dec
js
mov
ret
daa
and
sbb
pop
mov
aaa
push
repz
cwtl
adc
sbbb
mov
add
adc
pop
lds
inc
inc
dec
push
push
cmp
aam
add
cmp
pop
pop
pop
mov
mov
add
lea
cmp
jne
cmp
lods
mov
divb
mov
nop
ror
push
lock
fisttps
xor
mov
inc
sbb
push
add
pusha
mov
loope
push
push
or
pusha
sbb
movsl
aas
adc
adc
ficomps
ja
fwait
test
lock
out
xchg
or
mov
adc
inc
push
add
mov
dec
xor
adc
push
cmp
mov
and
inc
pusha
cmp
je
inc
mov
fisttps
insb
cmp
jl
jmp
jge
addr16
out
outsb
jo
jo
icebp
in
ficoms
pop
and
jns
jo
pop
mov
add
jbe
add
sbb
xchg
sbb
add
fistps
jl
and
or
add
adc
clc
sbb
pop
push
ja
add
add
inc
mov
inc
add
adc
add
jge
sbb
arpl
dec
xor
fstl
push
push
das
push
mov
adc
lcall
push
xor
test
or
lock
jmp
fst
loope
andl
lea
xchg
ret
je
sub
add
fstl
mov
mov
cmp
sub
xor
outsb
xchg
inc
sbb
sbb
pop
cmp
mov
nop
inc
adc
out
mov
mov
or
push
and
sbb
adc
mov
lcall
dec
js
push
out
lcall
fcomi
mov
in
jns
mov
sub
xchg
fdivp
insb
or
xchg
xlat
ljmp
sbb
inc
push
xor
sbb
aam
es
xchg
mov
add
mov
and
cmp
hlt
pushf
hlt
jb
mov
xchg
sub
inc
inc
add
test
adc
jecxz
xlat
js
fildl
roll
cmpb
adc
or
push
mov
add
add
negb
xor
jg
test
rclb
xchg
lods
cmpsb
mov
mulb
pop
test
push
dec
pushf
lods
clc
inc
cmp
lcall
cmp
xor
xor
adc
cli
scas
pop
data16
scas
sbb
imul
push
push
cli
scas
pop
or
or
fsubrp
rorb
push
dec
bound
add
clc
and
loope
xchg
ja
xor
or
cmp
jo
dec
xor
mov
stos
adc
pop
cs
scas
sbb
mov
and
add
dec
xorb
ret
and
shll
sbb
or
pop
cmp
pop
adc
adc
cmp
inc
mov
cs
mov
nop
rcr
fistl
push
push
mov
sbb
xchg
lret
lahf
aam
inc
loope
push
add
sbb
mov
cli
or
shlb
sbb
jb
sbb
add
xor
js
cmp
jae
mov
dec
lea
jmp
xor
call
test
ja
push
push
or
jne
jecxz
xor
cwtl
push
aam
and
mov
lods
call
sbb
ret
sub
scas
add
xor
cmp
mov
fstpt
outsb
add
das
push
insb
insl
or
and
incl
cmp
jl
pop
ds
unpckhps
outsb
mov
pop
loopne
int3
hlt
xchg
or
adc
or
xor
lcall
mov
adc
sbbb
mov
cmp
in
stos
add
popf
or
mov
xor
mov
pop
sbbb
adc
inc
shrb
xchg
sub
mov
push
pop
stos
or
lahf
fisubrl
push
mov
loop
mov
and
xchg
adc
ret
stos
sbb
orb
je
and
or
sub
in
add
fstpt
xor
cs
or
or
inc
fiadds
rolb
push
and
push
js
jno
clc
mov
loop
pop
add
test
pop
mov
pushw
cwtl
fiadds
add
adc
ja
repz
cmp
jbe
sub
push
mov
and
mov
push
addb
pop
push
push
and
xchg
shl
out
adcl
insl
push
loope
hlt
inc
pop
in
dec
popa
and
scas
jo
mov
aas
inc
push
push
sbb
lahf
dec
or
mov
cmovle
pop
ds
jno
push
insb
decb
mov
mov
stos
add
fidivrl
add
mov
lock
xchg
in
jl
sbb
jge
stos
sbb
cltd
add
andps
push
xchg
addr16
adc
adc
pop
aas
add
loope
cltd
pop
pop
add
xor
lea
xchg
or
test
push
popf
es
popa
or
add
xchg
cmc
jo
sub
push
icebp
xor
mov
cmp
sbb
or
push
test
inc
out
nop
cmp
or
jb
lea
je
repz
loop
add
hlt
adc
lds
into
xor
cs
mov
sub
and
add
cwtl
cmp
sbb
orb
lea
xor
sbbl
je
ret
mov
lcall
je
inc
push
cmp
adc
adc
sbb
add
cmp
add
nop
dec
or
insb
mov
add
add
adc
enter
push
mov
sub
mov
inc
int
insl
lock
shl
sub
and
frstor
jnp
rclb
and
and
dec
adc
rclb
adc
inc
fwait
mov
ror
jmp
mov
mov
adc
inc
add
std
xor
push
dec
push
mov
jl
dec
mov
sub
jno
xchg
fidivrs
sub
add
xchg
mov
add
push
leave
and
xchg
cmp
add
das
pop
popa
mov
add
xchg
inc
out
sub
leave
roll
fistl
daa
jno
sbb
fbld
xor
cmp
or
in
push
push
add
mov
sbb
or
xor
nop
lret
add
movsb
xor
or
xchg
add
add
test
inc
sub
sub
xor
xor
xor
cmp
xchg
add
test
inc
sub
dec
pcmpgtb
dec
sub
push
and
add
mov
dec
sub
adc
dec
jo
jb
sar
enter
xor
int3
test
inc
rcl
popa
outsl
xor
js
add
dec
mov
or
in
imul
fsubrs
mov
mov
movl
sbb
sahf
sbb
cmpb
push
or
inc
and
sti
cmp
add
mov
and
pop
push
pop
ret
ret
add
mov
or
sbb
sbb
jnp
add
jge
mov
cmpsb
or
aam
xchg
out
imul
imul
mov
mov
push
dec
popa
push
jp
setne
dec
lcall
lcall
inc
mov
cmp
sbb
or
or
dec
lcall
mov
lcall
sbb
adc
sbb
add
add
dec
lcall
xor
aas
sub
test
adc
dec
cmp
and
cld
add
leave
dec
clc
add
add
lods
andl
inc
push
stc
sub
hlt
xor
mov
test
pop
loopne
daa
add
sbb
xor
les
add
sbb
sub
mov
pop
sub
mov
insl
movsl
sbb
loope
aam
or
orl
xor
inc
adc
icebp
push
stc
aad
add
jmp
cld
and
adc
lea
sub
es
cmp
inc
sbb
push
push
je
push
cmp
add
lahf
and
and
xchg
add
sub
mov
and
jecxz
cmp
loopne
push
push
cmpsl
add
xchg
pop
mov
xor
jmp
push
push
outsl
sub
aad
pop
add
bound
mov
xor
adc
cmp
sub
dec
sbb
aam
jecxz
loopne
adc
subb
jmp
rclb
sub
adc
mov
lea
loop
dec
sub
arpl
jb
mov
dec
adc
sbb
ror
lcall
dec
inc
push
cmp
lahf
jle
dec
pop
mov
push
or
push
mov
aam
aas
fidivl
dec
push
push
push
mov
adc
push
dec
enter
orl
mov
scas
js
mov
loopne
rolb
pusha
daa
or
or
jmp
cmp
push
adc
sub
push
push
mov
jp
loop
sub
test
in
cld
xchg
or
fstl
xchg
clc
add
mov
inc
sub
insb
outsb
jns
adc
div
add
xchg
sbb
sbb
shlb
cmp
push
in
sbb
mov
add
out
push
mov
test
scas
adc
jmp
adc
das
adc
in
lahf
sti
dec
and
xor
and
in
push
mov
lahf
mov
and
adc
cs
out
add
outsb
lds
cmc
je
jl
es
scas
sub
add
stc
fs
pop
call
clc
add
dec
mov
sbbb
mov
mov
and
jl
je
leave
pop
clc
xchg
or
hlt
jne
mov
dec
push
push
and
aas
cmp
aam
push
movsl
stos
in
adc
pop
mov
in
add
ret
repz
inc
cmp
shrb
mov
lea
jp
or
bound
or
nop
push
insl
push
inc
outsb
fucom
mov
push
movl
in
shlb
jg
fs
mov
cmp
lcall
pop
sub
add
or
jo
pusha
mov
sbb
mov
adc
inc
jo
adcl
jl
cld
add
or
mov
add
jno
push
mov
shl
rolb
add
mov
dec
in
xchg
fcoml
or
inc
loopne
adcl
leave
mov
push
inc
or
mov
fwait
cmpb
push
cmp
push
mov
loopne
mov
push
push
mov
les
das
dec
in
push
clc
sub
in
js
xchg
mov
shr
adc
icebp
push
popl
out
idiv
xlat
lea
add
ss
int3
push
inc
rol
xor
jge
sbb
int3
inc
sarb
mov
dec
inc
loopne
imul
inc
add
lods
mov
lret
pop
jno
push
pop
es
ljmp
and
mov
add
inc
push
cmpsb
sbb
iret
mov
sbb
push
lea
push
or
loop
pop
dec
pop
push
cmpb
push
and
mov
pop
fimull
cmc
adc
or
lea
nop
sub
lea
pop
inc
aas
adc
mov
sbbl
cmp
lahf
push
sub
inc
pop
sub
cmp
dec
inc
fidivrl
or
push
mov
lret
push
jle
inc
data16
mov
cmp
jae
push
adc
add
jmp
mov
pushf
test
add
push
sub
sbb
div
adc
repz
mov
or
and
push
movsl
lock
les
inc
stos
test
rclb
or
ljmp
push
xchg
and
pop
xor
push
xor
sub
imul
jne
pushf
dec
and
add
jo
push
push
lods
dec
mov
mov
inc
cli
add
xchg
ret
les
roll
movsl
clc
xchg
jae
inc
pop
mov
sub
pop
loopne
xchg
xchg
mov
or
or
lds
jb
adc
sub
jne
sbb
fsubl
cmp
jb
orl
push
or
stos
mov
dec
inc
xor
xchg
xchg
and
push
loope
enter
inc
push
addps
mov
dec
adc
adc
adc
bound
inc
pusha
rolb
lods
insb
je,pn
pop
dec
jle
ficoms
je
adc
mov
jo
out
push
test
fdivrl
xchg
sub
jl
xchg
ja
add
incb
or
stos
leave
and
inc
dec
xchg
nop
sbb
sarb
jo
xor
add
xor
in
or
insb
adc
push
cld
jo
or
adc
out
mov
or
add
and
aas
fs
shrl
add
test
js
mov
inc
pop
cmp
sub
movsb
iret
imul
pop
push
mov
pop
cmp
add
sbb
int
les
adc
jno
inc
pop
cmp
jl
push
les
add
xor
xchg
sbb
shll
pop
adc
leave
add
sbb
sahf
jno
sbb
push
dec
adc
push
xchg
dec
adc
movsb
adc
and
cmp
push
cmp
and
clc
sbb
sbb
jns
fcmovnb
jo
xorb
xor
sbb
pop
add
vpaddusw
pop
aaa
pop
pop
sbb
sbb
fsubs
jns
pushf
rcrl
inc
filds
inc
sub
mov
lret
out
inc
leave
sub
add
cmp
xor
cmp
xor
cwtl
in
and
add
push
leave
pop
adc
pop
ds
sbb
sbb
push
fnstcw
and
and
adc
push
mov
cmpsb
cmp
cli
cmp
and
add
push
xchg
je
test
enter
jo
sahf
pop
adc
adcl
mov
add
dec
mov
outsl
rclb
inc
ljmp
adc
insb
lods
jecxz
nop
inc
in
mov
mov
mov
sbb
or
inc
inc
mov
push
stos
jno
xchg
or
lea
push
repz
popf
sahf
sbb
cmp
mov
cs
arpl
dec
add
movsb
inc
test
adc
cmp
and
sub
stos
or
adc
mov
push
inc
adc
adc
fcomp
daa
push
xor
and
clc
jl
mov
add
xchg
lcall
movsl
and
stc
andl
inc
xor
pop
or
cmp
mov
adc
shlb
loop
imul
dec
pop
js
or
sbb
mov
cld
xor
adc
imul
pop
push
push
dec
pop
pop
adc
fisttps
movsb
js
mov
mov
cld
or
sbb
in
pop
dec
mov
dec
mov
stos
add
bound
shlb
add
lea
arpl
imul
nop
fsubrs
out
inc
insl
test
js
je
or
sub
cmp
ljmp
mov
ret
adc
in
sub
sub
cmp
imul
and
sub
push
sub
add
add
add
ret
mov
mov
xor
add
dec
fisubl
mov
and
sbb
xchg
add
sub
sub
fstpl
adc
inc
out
adcb
adc
cmpb
clc
lods
bound
cwtl
adcl
mov
push
adc
and
cmp
push
pop
sub
sbb
inc
test
and
xchg
inc
lcall
cmpsl
adcb
mov
sahf
jns
sbb
and
push
or
pop
sbb
sarb
je
popf
jo
inc
nop
sub
pop
push
sub
ss
insb
leave
push
jne
jg
orb
orl
nop
pop
dec
add
jg
or
jp
xchg
popf
push
sub
popl
lods
dec
sbb
cmp
sub
sbb
adc
loop
dec
jnp
jl
jnp
sbb
add
shr
adc
xchg
sub
and
or
xor
xor
jmp
stos
sub
pop
xor
stos
into
sub
iret
add
adc
pop
cmpsb
adc
xor
or
ljmp
sbb
push
adc
imul
sti
mov
xlat
or
pop
or
add
jne
mov
rolb
arpl
dec
test
das
sbb
out
push
and
mov
nop
jno
lock
sub
sbb
mov
loop
cmp
and
xor
jmp
xchg
pop
fwait
clc
add
sub
imul
mov
les
cld
std
xchg
mov
cmpsb
pushf
or
imul
sahf
xor
sbbl
lret
subb
inc
cmp
sbb
je
or
js
xor
test
inc
dec
les
mov
xchg
je
cmp
dec
jl
cli
and
cwtl
cmp
mov
pusha
imul
pop
jecxz
xchg
jo
push
lock
hlt
or
shrb
loopne
push
jg
cld
ret
fdivrl
adcl
mov
mov
xorl
mov
add
or
or
adc
sub
mov
add
adc
enter
add
xchg
dec
int3
push
mov
xor
je
push
cmpsb
inc
arpl
incb
sarb
les
inc
pop
repnz
addl
movsb
jb
push
push
jne
sub
test
add
add
movsb
cmp
nop
sbb
mov
jae
add
gs
js
sub
add
insb
pop
xor
pushf
fs
sbbl
inc
insb
sbb
adcb
shr
inc
xorl
mov
cmpsb
mov
sbb
push
and
sub
es
fiaddl
xor
shll
mov
sub
sarl
jo
add
stos
inc
cs
sub
push
js
mov
je
pushf
or
cmp
daa
inc
leave
xor
adc
je
xlat
inc
hlt
sub
xchg
mov
adc
ja
dec
jle
mov
and
sub
divl
ds
push
pop
jmp
sbb
lds
add
jo
cmpsl
add
lret
jl
in
scas
les
mov
and
je
mov
mov
push
jl
mov
and
dec
add
inc
add
test
or
mov
loope
mov
pushf
push
rolb
imul
inc
lds
mov
sub
subl
pop
push
and
or
or
push
push
mov
xor
loop
jne
mov
or
cmp
sbb
push
insl
popa
adc
xchg
add
mov
or
cmp
mov
insl
push
pop
sbbb
nop
adc
or
inc
sub
add
ret
mov
lahf
add
shll
pop
add
push
int
push
jmp
jne
loop
add
ljmp
add
ljmp
lret
mov
cmp
xchg
xor
imul
das
add
cmp
sbb
jno
aam
mov
sahf
sbb
pop
js
inc
dec
adc
or
mov
push
add
jo
jns
jno
ficoms
imul
and
sub
dec
jne
mov
rorl
shll
add
and
add
push
sbb
xchg
add
or
aad
cwtl
add
fs
pop
sub
popa
add
incb
lcall
sub
or
and
jo
jecxz
inc
jmp
lock
subb
xor
aaa
mov
out
test
add
dec
shrl
dec
or
adc
push
jns
movsb
pop
adc
jo
les
cwtl
add
dec
lods
mov
sbb
adc
adc
sbb
int3
pop
or
cmp
mov
mov
jb
pop
sbb
dec
inc
mov
ret
push
mov
testl
scas
xchg
clc
dec
add
inc
sahf
aaa
jne
push
fidivs
push
movsl
fldt
sub
test
movb
ret
invd
mov
sbb
sbb
push
stos
dec
add
stos
dec
popf
xor
sub
fimull
cs
push
xchg
cli
push
push
pop
cmpsb
into
mov
pop
adc
sbb
mov
xchg
inc
and
movsb
push
pop
mov
clc
inc
push
push
xor
sbb
or
and
into
sbb
movzbl
dec
sbb
adc
pop
subb
sub
arpl
pop
lods
mov
pop
push
inc
fs
leave
out
lcall
xor
in
xor
xchg
sub
jbe
or
push
and
add
jb
mov
or
push
mov
and
loope
sub
xor
loop
push
fistl
cmp
add
push
cmp
sub
add
gs
cmp
and
push
dec
dec
jg
cmpsb
add
cmpsb
pop
pop
inc
dec
dec
mov
lock
add
out
fldt
add
add
mov
push
push
push
lret
lock
das
hlt
pop
xor
inc
fistps
ljmp
jge
aaa
adc
ret
xor
mov
push
mov
call
daa
pop
and
sub
clc
rolb
icebp
cmp
je
mov
push
imull
push
es
add
and
cmp
testl
mull
ficomps
cmpsb
mov
cs
les
aad
movsl
imul
push
jb
jo
xor
add
cmp
stos
mov
lods
mov
bound
cmpsl
inc
fs
sub
cmp
jae
nop
leave
xor
sbb
sbb
add
fidivrs
and
lock
jecxz
adc
movsl
push
add
fnstcw
shlb
push
xchg
mov
push
cmp
jns
mov
or
jge
lea
push
push
sti
adc
mov
stos
add
push
inc
mov
sub
inc
mov
adc
shrl
add
cmp
push
call
pop
mov
jnp
adc
mov
push
push
push
fs
bound
jnp
push
loope
les
jne
mov
cmpsb
sub
or
adc
in
dec
rclb
xlat
aam
push
lds
or
xor
dec
add
sbb
inc
and
daa
adc
pop
and
cmp
int3
pusha
add
dec
inc
inc
sbb
in
push
push
sbb
pop
add
inc
push
push
cwtl
dec
push
push
pop
outsl
adc
inc
sub
adc
fwait
add
sub
push
lods
push
ret
dec
sbb
outsl
mov
in
mov
add
pusha
mov
setge
push
jecxz
data16
in
cmp
mov
iret
repnz
mov
shrb
pop
adc
adc
jmp
cmp
push
lock
xor
pop
cmp
jne
movsb
mov
leave
idivl
push
cmpsb
adc
mov
lret
enter
inc
pop
adc
nop
leave
dec
enter
push
push
mov
push
hlt
and
xor
outsl
mov
jp
jle
rorl
inc
xor
mov
addr16
push
adc
insb
leave
sbb
jge
xchg
sarl
mov
and
push
fcoml
sbb
add
adc
or
or
jge
jge
jl
mov
push
sbb
push
xor
hlt
xorl
push
sbb
sub
add
add
sbb
aas
mov
mov
mov
mov
jo
push
js
pop
push
in
push
pop
call
mov
push
push
les
jg
inc
std
mov
mov
dec
popa
push
pop
pop
adc
push
xchg
push
je
sub
sub
ret
xchg
mov
daa
loopne
ret
push
call
lret
and
push
add
popa
jno
in
cmpsb
mov
push
cmp
jae
loopne
mov
cmp
push
es
fdivrp
aaa
lea
icebp
or
nop
gs
add
sti
jbe
cwtl
jns
mov
test
pop
movsl
mov
pop
push
or
rol
orl
mov
push
inc
dec
cmp
jge
or
adc
push
sarb
cmc
and
ret
xor
push
test
ds
push
adc
test
cltd
mov
xor
or
mov
adc
xor
dec
or
mov
sub
test
xor
add
dec
sub
fcmove
inc
inc
enter
aad
mov
jb
mov
add
pop
gs
mov
add
ljmp
add
sbb
dec
movsb
push
and
mov
rcl
adc
dec
dec
outsb
jle
pusha
and
sbb
or
cmp
out
jge
movzbl
mov
inc
into
cmc
negb
mov
mov
fmull
jecxz
mov
push
repnz
pop
xchg
jecxz
inc
sbb
dec
push
in
movsl
mov
jnp
scas
or
shr
test
js
cmp
je
sub
ds
adc
int3
dec
int
andl
iret
push
mov
sub
push
mov
dec
xor
rcrb
sbb
aas
mov
cmp
jbe
jg
mov
jbe
sub
into
daa
jbe
jmp
loopne
ja
cmp
jle
pop
mov
push
pop
xchg
shr
sbb
outsl
push
scas
mov
in
inc
mov
mov
lcall
inc
pop
sub
mov
add
ret
add
sub
push
cmp
mov
mov
mov
subb
gs
jo
in
mov
nop
jmp
add
inc
icebp
movsb
and
pop
mov
cmp
jle
push
stc
adc
mov
jo
popa
or
jns
lcall
pop
aas
adc
outsb
jae
and
or
gs
ret
pop
xchg
rcl
ja
sub
js
lahf
sbb
inc
pop
mov
mov
pop
dec
pop
inc
sub
std
xor
add
push
push
mov
push
cmovae
push
add
sbbl
or
test
lock
push
mov
decl
and
add
das
sub
or
cmp
cmpsb
adc
inc
inc
daa
movsb
pop
icebp
lea
jno
add
cmpsb
imul
jns
fwait
cmp
dec
or
imul
xor
pop
lea
out
mov
fwait
popf
mov
sbb
mov
inc
ljmp
jle
nop
add
inc
lods
xchg
push
cmp
testb
and
and
packssdw
inc
push
and
shrb
fs
dec
sahf
jno
mov
lock
out
pop
inc
inc
add
adc
test
adc
pop
pop
pop
dec
mov
push
pop
inc
dec
ljmp
or
sub
push
cmc
dec
cmp
or
and
dec
or
mov
movsb
orb
jl
test
push
sbb
js
and
je
or
inc
rorb
insb
cmp
mov
ss
pusha
ret
push
inc
pop
es
ss
add
pop
inc
cs
or
insl
sub
int
sub
inc
and
fwait
or
add
push
xchg
mov
std
ss
inc
adc
mov
scas
jmp
or
xor
es
xor
adc
cmp
imul
cltd
nop
fwait
sub
shrb
add
mov
add
adc
add
or
dec
cmp
add
scas
les
das
std
wrmsr
cmp
jne
cmp
cmp
cmp
or
inc
and
dec
mov
outsb
mov
and
and
add
jmp
and
or
roll
mov
divb
xor
sub
mov
fwait
push
orps
sahf
fstps
and
in
mov
mov
cmp
jnp
push
mov
add
mov
mov
sbb
out
jno
and
es
mov
mov
lock
les
aad
jb
dec
popa
and
pop
sbb
and
lods
cmp
sbb
ds
inc
es
sub
mov
push
pop
push
sub
mov
dec
mov
push
or
movsb
cmp
repnz
and
int
jg
stos
decl
xor
hlt
dec
lea
xchg
push
adcb
mov
mov
push
push
cmc
cmp
add
movsl
or
or
pusha
cmp
daa
pop
enter
mov
adc
dec
pop
sbb
jno
adc
mov
pop
mov
pop
ljmp
daa
inc
mov
cmp
sub
gs
in
and
and
or
adc
cmpl
cmp
mov
insl
sbb
std
popa
addr16
adc
cmp
pop
fisubrs
xchg
add
jnp
adc
imul
outsl
dec
add
ret
adc
aad
pushf
push
and
inc
daa
mov
fimull
addl
xchg
inc
cmp
imul
dec
push
push
sbb
mov
inc
sbb
xchg
mov
test
movsb
xchg
xchg
pop
xchg
cmpsl
mov
sbb
cs
repnz
xchg
xor
adc
aam
mov
adc
dec
push
jle
or
push
shlb
push
mov
ret
aas
adc
fs
sbb
pop
lods
pop
and
or
sbb
pushf
push
cmp
inc
shrb
sub
je
push
jne
lea
cmp
sbb
add
mov
mov
or
push
add
jo
fs
xor
push
sbb
hlt
mov
and
cmp
push
push
mov
pop
mov
insb
cmpl
jp
js
mov
cmc
test
cmp
insb
sbb
mov
mov
xchg
ljmp
dec
imul
add
push
xor
pushf
test
sbb
clc
jle
or
ficomps
and
xor
adc
pop
add
sbb
sub
add
je
xlat
xchg
es
ja
in
pushf
and
jno
daa
push
mov
sbb
mov
xor
xchg
mov
add
addl
push
cmp
loop
cmpl
cmp
xchg
xchg
add
dec
fs
dec
sbb
dec
cwtl
dec
push
add
stc
call
jge
repnz
push
pop
std
cmp
cmpb
mov
out
cmp
hlt
inc
enter
push
cmp
push
sub
push
aaa
mov
jns
mov
adc
cwtl
nop
jmp
sbb
xor
inc
xchg
js
mov
jno
fs
mov
sbb
push
mov
dec
test
add
jle
fcmove
call
mov
cmp
test
test
addl
push
dec
pop
sub
push
jl
adc
mov
pop
cld
pop
xor
sahf
aaa
xchg
jo
push
je
popa
pusha
mov
or
es
or
rol
mov
mov
add
cs
cmp
push
sbb
or
xor
lock
fwait
iret
aaa
fistpll
sub
lahf
inc
nop
mov
lock
fcmovnb
push
ss
adc
cwtl
push
push
inc
xor
push
stc
loopne
aam
mov
mov
jo
xor
pop
pop
cmp
cmpl
ficomps
push
pop
dec
pop
je
jb
pop
movsl
repnz
out
mov
pusha
pop
rclb
pop
dec
in
sbb
leave
add
xchg
pop
push
stc
lcall
jle
rcrl
shll
nop
pop
inc
mov
jns
xorl
dec
and
bnd
lret
dec
pusha
adc
xor
dec
and
push
pop
add
xchg
or
and
or
push
and
rclb
add
ret
hlt
mov
push
pop
movl
adcl
sbb
mov
jb
test
aas
dec
or
inc
inc
add
dec
fnstcw
cmpb
or
jbe
sarl
sbbb
jb,pt
push
inc
mov
add
sbb
vmovq
mov
and
inc
inc
daa
insl
pop
jb
mov
leave
sbb
and
xchg
pop
cmpl
mov
repnz
xchg
cmp
orl
add
xor
and
dec
mov
xor
lods
sbb
add
sbb
and
hlt
or
sbb
or
add
scas
xchg
jno
jp
push
aam
das
sub
or
fsubrs
dec
in
test
ret
arpl
mov
mov
sub
pop
cs
cmpsb
sub
popf
bnd
inc
jne
int
es
push
push
push
enter
push
dec
push
jo
or
sub
push
sub
decl
add
inc
test
sub
or
jb
lods
orl
ret
insb
scas
pusha
shrl
dec
jne
stos
in
pusha
test
xor
mov
and
iret
xor
or
lcall
hlt
and
fimuls
adc
and
incb
lahf
xchg
xchg
xor
icebp
sbb
xor
jmp
outsb
mov
xor
pop
loope
cmp
mov
xor
add
add
adc
test
push
mov
adc
inc
test
sti
dec
fisubrs
inc
fsts
nop
mov
dec
add
xchg
add
add
adc
pop
adc
xor
or
xor
sub
icebp
xchg
idivb
lods
xchg
adc
inc
inc
call
or
mov
jge
jl
lcall
call
dec
sbb
inc
test
sbb
lea
js
orb
sub
and
movsb
inc
xchg
xor
test
push
mov
insb
leave
adc
cmp
add
sub
cmp
push
add
push
cmp
test
rcl
or
and
not
lods
sub
mov
dec
add
sub
adc
and
add
inc
add
mov
mov
pop
sbb
out
dec
data16
mov
cmpsb
fwait
sbb
rolb
or
mov
js
and
add
or
movaps
iret
or
xor
and
js
adc
pop
test
lcall
scas
adc
xchg
rorb
push
sub
inc
adc
fisubl
push
inc
jmp
popf
andl
je
mov
aam
outsb
sahf
and
nop
add
cmp
inc
mov
sub
test
mov
pop
xchg
and
fs
aam
pop
mov
lret
rol
sbb
xchg
inc
dec
add
scas
push
adc
xchg
imul
mov
sub
shrl
pop
lds
js
mov
push
mov
push
and
push
jb
mov
add
jns
dec
imul
shll
adc
aas
and
adc
add
xchg
cmp
push
pop
adc
enter
push
sahf
sbb
cmpsb
outsb
inc
cmpsb
lcall
sbb
push
aad
enter
mov
rcrb
test
fdivrp
cmpsl
and
sbb
or
add
insl
loop
imul
mov
sbb
adc
ss
movsb
and
cmp
xor
inc
cmp
pop
lret
push
push
adc
push
sbb
jmp
xor
xchg
adc
lcall
aad
nop
mov
inc
dec
cmp
lea
cmp
cmp
adc
jb
sub
pop
push
cmp
pop
add
lock
mov
inc
and
cs
bound
add
test
fmull
les
mulb
xchg
sbb
and
sub
push
cmpb
insb
add
sbb
cs
insb
pop
or
xlat
or
test
test
in
test
leave
jae
ret
shll
call
dec
push
inc
fs
popa
inc
pop
leave
jae
xor
jae
mov
or
sbb
pop
add
test
sbb
add
mov
mov
in
dec
push
loopne
inc
push
pop
inc
pop
adc
mov
rorb
mov
shrb
add
jne
lcall
fildl
or
mov
dec
outsb
ljmp
xor
mov
pop
jne
dec
shlb
xchg
lea
adc
sbb
shlb
cmp
xor
stc
fcomip
push
cmp
rclb
das
add
mov
pop
add
jb
mov
push
add
sbb
push
pop
push
add
pop
orb
xchg
mov
mov
popf
dec
fmuls
je
adc
dec
jl
fs
shlb
aam
sbb
pop
shlb
mov
and
push
insl
shl
pushf
stc
or
hlt
je
xlat
stc
pushf
not
jns
loop
or
push
or
out
std
imul
test
daa
adc
xchg
pop
dec
add
imul
mov
in
sbbb
sbb
mov
test
inc
or
movsb
push
cmc
je
repnz
cmpsb
pop
add
or
add
addb
xor
mov
nop
xchg
or
pop
inc
loop
inc
dec
or
adc
push
add
cltd
cmpsb
inc
sub
dec
adc
or
je
or
loope
loopne
mov
loope
cmp
aaa
push
or
jnp
or
xchg
xor
xor
adc
rcpps
cmp
mov
xchg
mov
xor
dec
sbb
adc
test
xchg
lea
push
fs
pusha
mov
sub
pop
scas
fidivl
jmp
stos
dec
rorb
xchg
cmp
or
xchg
cmp
or
or
xor
cmp
or
jno
rorl
dec
adc
inc
jl
pop
sub
adc
xchg
adc
test
xchg
lcall
pop
xchg
xchg
push
out
mov
mov
adc
test
push
push
sti
addl
in
xchg
push
xchg
mov
call
xchg
int3
dec
push
in
call
dec
arpl
sbb
fcom
sbb
cmpsb
es
enter
sbb
test
out
sbb
add
cli
jb
add
mov
pop
push
add
add
xchg
add
lcall
or
pushf
add
inc
and
addr16
cltd
and
or
add
sub
sub
sub
mov
sahf
or
mov
mov
sub
add
xor
and
leave
inc
xor
arpl
imul
pop
and
or
pop
jb
cmp
mov
lahf
pusha
pushf
sbb
jbe
dec
adc
movsb
cwtl
pusha
inc
cwtl
xchg
cmpsb
push
fsubrs
aam
test
sarb
clc
pop
xor
xchg
jne
sbb
enter
push
jl
sbb
xchg
out
and
cwtl
cs
cmpsb
adc
les
repz
lock
push
or
push
xchg
nop
mov
push
add
movl
xchg
sub
and
mov
pop
xchg
sbbl
mov
or
pop
sbb
xor
adc
jne
pop
sub
jl
shr
cmc
dec
cmp
jo
test
jno
xor
add
cmp
and
test
dec
mov
xchg
or
aas
push
cmp
sbb
je
hlt
inc
cld
sub
ss
fcomps
int
xchg
repz
or
inc
fstl
pop
sbb
mov
inc
imul
inc
xor
les
jmp
push
es
out
adc
test
mov
mul
int
test
cmp
pop
fs
stos
inc
dec
insl
xchg
addr16
movl
loopne
es
fiadds
rolb
in
add
sahf
or
lods
ss
inc
ds
dec
mov
dec
cmp
mov
push
movb
cmp
sbb
pusha
xchg
mov
or
mov
leave
dec
jge
inc
lea
xchg
cmp
mov
and
mov
xchg
jno
subb
sub
sahf
xchg
cs
or
ja
nop
mov
push
ret
jo
mov
inc
jl
xor
addl
xor
jno
adcl
jne
add
nop
inc
arpl
lea
shl
xchg
and
sbb
cld
imul
mov
sub
or
add
pop
jb
enter
ret
push
lods
mov
push
clc
and
popa
xchg
movb
lods
mov
mov
adc
mov
pusha
push
cmpsb
jo
je
dec
push
sbb
and
push
cli
push
lods
arpl
pushf
in
call
incb
cmc
in
jecxz
xorb
push
rcll
lcall
jb
push
push
push
das
push
push
mov
scas
lock
cltd
sbb
repz
xor
mov
adc
sub
sti
push
ret
lret
or
mov
shll
inc
leave
add
out
dec
mov
sbb
loopne
pop
xor
mov
and
mov
add
or
mov
ret
fmul
dec
jns
movsb
add
cmpb
add
scas
mov
clc
mov
stos
mov
push
and
lock
pop
inc
cmc
and
cld
and
dec
sbb
or
repz
and
dec
and
xchg
sbb
and
xor
push
enter
and
xor
and
push
call
jno
mov
stos
push
mov
sbb
or
push
std
or
and
cld
pop
dec
outsb
dec
cmp
js
outsb
sub
lods
push
cmp
scas
dec
dec
clc
jmp
mov
adc
add
sbb
mov
into
pop
inc
nop
int
jmp
mov
sub
inc
cmp
dec
sub
test
sbb
or
add
push
sbb
mov
push
mov
outsb
loope
pop
sbb
or
dec
sbb
push
sub
call
cltd
sbb
cmp
xchg
mov
cmp
push
mov
andb
xchg
adc
clc
push
mov
push
popf
push
push
cmc
lods
fcmovnu
in
pop
push
or
pusha
fiaddl
xor
mov
rcrl
nop
push
sbb
xor
pushf
adc
adc
cltd
xor
test
leave
push
lret
inc
xor
push
dec
mov
aam
push
pop
mov
in
add
sahf
mov
stc
and
clc
popl
and
xor
sbb
jmp
push
add
int3
and
sbb
jo
sti
mov
test
inc
and
jne
jle
leave
jne
mov
pop
imul
mov
shrl
or
pushf
pop
xchg
mov
pop
roll
sbbl
lret
ja
nop
pop
push
loopne
mov
rcrl
popa
adc
push
push
xchg
and
sbb
js
cmp
push
fs
xchg
test
insb
xchg
int3
mov
pushf
arpl
and
dec
insb
push
das
sub
jecxz
js
xchg
adc
fistl
pop
dec
mov
xor
xchg
cmp
sbb
dec
pop
loope
iret
add
push
cmp
adc
xchg
dec
add
cmp
mov
sub
adc
stos
xchg
nop
dec
sub
es
sahf
or
pop
dec
sahf
stos
jbe
dec
push
xor
cmp
push
stos
in
dec
add
jl
cmp
mov
leave
xchg
je
int3
mov
pop
cmpb
adc
jge
pop
mov
pusha
mov
or
push
rcrb
add
xchg
and
dec
adc
push
add
sbb
insl
mov
add
push
push
cmp
jae
pop
aam
sub
xor
cli
push
jns
in
jmp
mov
jmp
cmp
mov
add
popa
push
pop
inc
jne
mov
cmp
push
and
dec
adcb
pop
data16
push
leave
add
or
add
sbb
sub
fs
mov
ret
sbbl
cmpsl
repnz
or
test
xlat
pop
or
add
adc
adc
rclb
jecxz
jl
aas
add
inc
mov
push
jmp
sbb
jg
cmp
adc
jo
push
xor
imul
push
lea
scas
lahf
inc
rclb
push
or
and
dec
sub
cltd
xor
lock
push
push
adc
test
inc
ljmp
je
cld
xchg
sub
inc
fists
ds
xor
and
mov
add
dec
and
and
or
or
jp
dec
inc
inc
lock
adc
push
popa
add
or
pusha
xorb
imul
xchg
sbb
push
push
fptan
clc
cld
dec
iret
inc
fcoml
xchg
lea
fldenv
cmp
xchg
bound
jae
mov
mov
loop
xchg
test
lea
daa
testb
pop
mov
leave
push
pusha
adc
or
mov
nop
cmp
jae
mov
inc
into
mov
stos
mov
pop
inc
les
sub
xchg
dec
aaa
sarl
aaa
pop
sub
scas
inc
popa
call
xchg
repz
and
fmull
sub
and
dec
xorl
inc
mov
pushf
inc
sbb
ficoms
sub
pusha
lods
jge
push
es
mov
xor
pop
or
popa
adc
lahf
xchg
xor
or
push
push
mov
nop
ja
or
adc
fiadds
imul
movsb
or
mov
scas
cltd
imul
jl
ret
repnz
jmp
mov
add
ficompl
fimull
push
push
cmp
lahf
inc
sub
and
sbb
xchg
xchg
shrl
jmp
or
aam
push
xchg
cmp
insb
push
mov
sahf
push
add
add
sbb
inc
inc
inc
mov
mov
aas
and
sbb
and
or
pushf
pop
and
or
sbb
es
xchg
sbb
incl
inc
cmp
jae
mov
push
jo
xchg
jg
xor
xchg
push
mov
std
rol
sarl
push
rolb
pushl
xor
or
sub
addb
subb
inc
ja
or
mov
sbb
add
inc
mov
or
mov
insb
lods
fstl
push
mov
shrb
mov
aaa
xchg
add
sbb
mov
scas
mov
loopne
inc
fmull
test
roll
lahf
add
jb
ja
push
sub
cmp
jb
pop
shrl
add
fmull
push
mov
movsb
jg
adc
push
xor
push
pop
and
out
pop
dec
xchg
adc
sbb
add
leave
shll
push
mov
sbb
cmp
fdivs
mov
add
pop
adc
inc
inc
or
mov
push
push
test
imul
fisttpl
add
cmp
dec
les
ret
daa
add
inc
pop
add
add
add
dec
mov
mov
pop
push
pusha
flds
jo
ficompl
insb
fstps
sub
fwait
adc
pop
add
cwtl
xchg
xor
and
adc
cmp
xor
and
or
sub
rcrb
loopne
dec
push
add
push
enter
int3
mov
lods
cmp
sub
popf
xor
mov
or
xor
pusha
mov
divl
sbb
cmp
and
filds
and
cmpsb
sub
pop
pop
addb
jbe,pt
insb
adc
lods
cmp
mov
sub
push
lret
dec
insb
insb
mov
push
or
pop
fbstp
in
push
add
add
inc
and
scas
adc
outsb
rorl
mov
ret
test
cmp
js
push
lock
push
lea
sub
int
mov
test
pusha
xor
in
mov
loope
out
in
icebp
mov
sbb
jecxz
cld
adc
mov
js
imulb
push
popf
je
popa
cld
lock
xchg
hlt
sub
loopne
cmp
lea
pop
pop
and
xchg
cltd
dec
dec
imul
push
mov
insl
add
mov
jnp
sub
aam
les
jns
xor
addr16
sbb
fisttpl
push
int
fsubrl
in
pusha
outsb
adc
popa
lods
sub
inc
mov
movsb
nop
les
cmp
adc
add
cmp
aam
xor
test
or
add
lea
andl
xor
test
outsl
loope
loope
clc
dec
insb
rcrl
jp
pop
xor
rcrb
gs
fdivrl
mov
out
pushf
mov
mov
fldcw
push
stos
sub
test
sbb
adc
jg
mov
fsubs
popa
add
and
adc
xor
scas
push
mov
js
jp
add
in
mov
fsubr
cmp
cwtl
dec
inc
loopne
enter
dec
leave
add
mov
out
push
xor
add
mov
popa
adc
sub
add
shl
push
jbe
test
jne
push
mov
jge
ss
imul
pop
fildll
fdiv
mov
roll
cmp
je
mov
idiv
cmp
je
cmp
je
cmp
je
push
je
stos
dec
xchg
jmp
jnp
loopne,pn
jmp
das
rorl
adc
repnz
js
add
and
mov
int
leave
pop
mov
fdivrs
inc
hlt
cli
pusha
adc
adc
push
daa
or
dec
movb
mov
adc
inc
shlb
hlt
ja
lock
shl
rcrl
mov
mov
add
push
lea
lds
test
pop
pop
nop
jl
aam
xchg
out
xor
les
jl
and
sub
add
dec
mov
xchg
jns
enter
adc
add
in
jne
ljmp
jne
enter
lods
in
add
lock
push
push
inc
mov
or
xchg
orl
or
pop
jg
sub
add
add
adc
sub
add
jmp
pop
dec
xchg
jne
data16
ret
inc
fdiv
js
xchg
les
xor
adc
shlb
stc
int3
sbb
insb
mov
pushf
add
inc
jl
mov
or
clc
icebp
out
jne
and
mov
xchg
loope
test
sbb
mov
mov
mov
push
pop
lcall
call
fwait
push
sbb
pop
inc
push
mov
cmp
and
fs
pop
inc
pusha
test
adc
push
in
add
pop
inc
lods
xorb
jne
dec
mov
dec
inc
sahf
aam
pop
and
pop
pop
mov
jne
adc
xchg
test
inc
push
mov
and
mov
loope
int
jnp
mov
and
dec
push
int
jns
inc
push
push
xchg
and
int3
mov
sub
sarb
mov
repnz
sub
and
inc
inc
and
add
sti
add
fdivrl
and
adc
int3
rolb
in
xchg
fstl
scas
orb
rolb
dec
jbe
ss
ret
cmpb
int
pop
cmpsb
shlb
roll
xchg
inc
es
inc
sub
cwtl
popa
fcompl
cmpl
add
ss
add
test
jmp
and
and
and
sub
mov
inc
in
imul
adc
xchg
mov
mov
sar
aam
and
pop
pop
pop
push
or
movsb
sbb
test
cmpsb
sbb
adc
nop
and
xor
mov
mov
pop
dec
sub
cltd
dec
lcall
inc
mov
int
xchg
cltd
bound
cltd
fwait
js
data16
imul
add
jbe
add
push
mov
jge
mov
test
jp
or
inc
ret
out
clc
xchg
push
repz
imul
sbb
add
adcl
xor
int
fcomp
aam
mov
fmuls
xchg
inc
mov
add
mov
jne
and
fildl
inc
data16
inc
and
push
xorb
jge
lock
dec
fsubl
ret
repz
xchg
std
pushf
repz
push
cli
test
push
pop
mov
adc
pop
jo
and
out
mov
hlt
mov
shlb
lods
adc
faddl
fs
je
ror
stos
add
sbb
stos
rcl
pop
pushf
outsb
pusha
lcall
or
cmp
je
and
fmuls
sub
adc
leave
jl
inc
xchg
fcmovnbe
adc
ret
mov
scas
ror
cs
mov
adc
add
test
mov
push
push
jae
dec
out
sbb
inc
xor
sub
cmc
inc
inc
dec
ljmp
fimuls
jb
add
cmp
iret
inc
push
in
insl
sbb
sar
call
mov
push
cld
sub
sbb
add
pop
pop
outsb
pop
mov
xchg
dec
int3
subb
cmpb
movsb
fidivl
mov
and
add
sub
aas
add
lods
sub
mov
inc
inc
sub
rol
adcb
add
add
mov
ret
xor
sarl
test
pusha
mov
push
adc
mov
inc
xchg
sbb
lret
jmp
ljmp
rolb
je
test
cmpsl
ret
lods
push
sub
pop
and
sti
cmp
sbb
andl
adc
xchg
andb
test
or
mov
xor
mov
pop
push
inc
shlb
xor
adc
pop
test
cmp
ret
jl
movsb
cmpb
and
sub
cld
and
sbb
sar
sbb
fcoms
stc
push
outsb
add
cmpsl
insb
xchg
dec
repnz
mov
test
leave
test
fmull
mov
mov
cmpb
sub
and
out
insl
add
scas
and
cmp
jne
jmp
fdivrp
cmpsl
mov
sbb
pop
inc
cmpsl
sub
mov
pop
loope
jo
mov
jo
push
rcr
mov
ljmp
push
roll
cmp
pushf
daa
adc
repz
out
int3
add
push
jne
jnp
or
or
and
and
pop
jp
lcall
ret
mov
jnp
add
popa
cmp
mov
cs
roll
mov
jo
js
scas
psraw
stos
sub
and
pop
test
das
insl
lods
xchg
mov
add
add
lret
loope
or
addl
scas
push
mov
mov
pop
adc
ss
sbb
or
pushf
inc
shlb
shlb
mov
stos
push
stc
bound
loopne
mov
pop
cli
or
mov
sbb
sub
ret
mov
sbb
sbb
fwait
aas
test
cmpl
mov
ss
sub
push
sub
push
push
push
mov
mov
push
pop
cmp
push
inc
add
movb
pop
leave
rorb
and
lock
add
push
adc
add
mov
test
insb
sub
xchg
sbb
lcall
jmp
cmp
mov
add
inc
shrb
dec
andb
jecxz
add
dec
cli
jp
or
inc
dec
add
adc
and
or
xchg
mov
dec
cmp
enter
imul
sbb
cmc
add
fistps
or
movsb
adc
xchg
push
cmp
in
repnz
adc
add
es
faddl
stos
jb
cmp
jns
subl
push
fld
iret
hlt
testl
std
cmp
jo
and
jnp
sbb
inc
mov
test
rol
mov
ret
mov
iret
cmp
nop
cmp
xor
mov
jg
jo
cmp
sbb
adc
es
cmpsb
sub
hlt
add
and
sub
cltd
loopne
js
adc
inc
push
pop
mov
pop
add
xor
sbb
pop
out
add
frstor
or
inc
pusha
data16
das
dec
shlb
shrb
shlb
xchg
push
lock
lret
iret
push
jns
and
movsb
mov
rcll
hlt
and
mov
mov
jl
pop
jb
xchg
add
push
add
or
and
push
loope
fadds
pop
addl
dec
test
imul
mov
or
int
lcall
dec
push
add
or
sub
addr16
shrb
xor
mov
adc
jno
and
add
or
push
icebp
or
cli
mov
or
inc
pushf
add
lock
pusha
add
pushf
mov
and
and
cmpsl
inc
ret
std
add
xor
adc
test
mov
jmp
push
add
dec
nopl
mov
dec
shrl
dec
mov
adc
push
add
push
pop
xchg
push
xor
sbb
insl
or
or
jg
pop
andl
inc
aad
loope
mov
xchg
cmp
sbbb
xor
xchg
pop
xor
cmp
inc
adc
mov
dec
sbb
inc
push
push
push
mov
ret
xor
std
mov
daa
inc
lods
add
aas
xchg
ret
aas
cmp
pop
std
cmpsb
sbb
test
add
cmp
in
test
cmp
push
fadds
inc
mov
add
xor
rclb
fisttpl
mov
inc
mov
jne
movsl
loopne
or
es
add
push
aam
mov
push
mov
inc
pushf
pop
shl
inc
xor
push
pusha
push
insl
pop
dec
xor
cmp
sarb
and
loopne
loope
test
or
push
adc
mov
and
push
push
cmovae
pusha
jnp
mov
test
sub
sahf
icebp
sbb
push
push
or
xorb
mov
cmp
in
and
inc
into
imul
enter
psubb
mov
add
mov
push
push
push
push
leave
push
and
lahf
add
mov
mov
dec
scas
mov
adc
jecxz
lds
imul
pop
push
leave
out
sub
mov
iret
aas
out
ret
push
mov
outsl
decl
mov
jne
cmp
jb
sub
jmp
push
dec
movzwl
mov
pop
cmpl
push
setl
movzbl
push
imull
mov
cmpsl
jp
add
mov
cmp
les
leave
xor
orl
adc
inc
sbb
sub
in
in
or
add
dec
push
mov
mov
pusha
mov
push
addb
lahf
jmp
push
xchg
cmp
adc
pop
lea
push
dec
or
insb
lea
incb
repnz
sub
test
mov
cmp
inc
xchg
cli
mov
negl
push
xchg
cmp
lods
call
mov
push
mov
cmp
dec
es
push
inc
sub
cwtl
lahf
js
xchg
lods
fmuls
and
shrb
popf
and
into
adc
dec
pop
aas
xchg
dec
push
loope
push
push
jecxz
push
sub
aam
and
mov
imul
push
add
or
or
push
cmpsb
sbb
jo
mov
adc
dec
jmp
push
test
cwtl
push
lock
hlt
pop
xor
pop
test
lds
push
xchg
mov
or
das
push
leave
jl
cmp
and
push
push
cmc
xor
js
ja
mov
cmp
mov
xor
les
sub
pusha
mov
test
push
pop
mov
ss
sbb
inc
cmp
inc
xor
ret
shrl
cmp
pop
sbb
push
test
pop
push
jmp
pop
imul
xchg
sbb
aam
push
xor
dec
push
stos
xchg
dec
lahf
sub
and
push
push
movsb
mov
pop
fmuls
sbb
icebp
mov
dec
push
sbb
fistl
inc
inc
cmp
xor
and
pusha
and
or
mov
add
iret
push
rclb
into
adc
sbb
inc
cmp
or
mov
or
jnp
fistpll
jge
mov
mov
inc
data16
push
test
push
pop
xor
sbb
mov
adc
lods
ficompl
sti
dec
ss
dec
je
push
cmp
inc
jo
repnz
sub
and
inc
ret
jle
add
or
adc
mull
clc
mov
add
ret
pop
add
push
mov
jo
fistpll
cld
es
jmp
mov
inc
jo
js
sbb
dec
cwtl
inc
inc
leave
or
sahf
stc
xchg
aam
or
adc
adc
into
mov
cmp
xchg
cmp
push
dec
sarl
add
insl
adc
or
dec
hlt
jo
lea
push
mov
and
test
adc
adc
sbb
or
xor
mov
add
fistps
in
cmpsb
add
xor
popa
ljmp
push
push
mov
icebp
push
add
inc
sbb
test
cmp
add
and
pop
and
add
leave
adc
dec
inc
add
sbb
adc
inc
iret
sbb
inc
adc
sbb
cmp
xor
ret
orb
xchg
adc
test
enter
leave
sub
push
pop
sub
sub
sbb
dec
inc
push
rcll
push
nop
js
aam
jge
gs
rcl
je
push
fildl
rorb
inc
jmp
lahf
and
cmc
xchg
in
add
pop
dec
lds
js
test
adc
movsl
inc
adcb
adc
mov
sub
pop
fucomip
shlb
or
dec
push
dec
xor
push
ret
push
sub
push
mov
nop
lcall
and
nop
or
sbb
nop
push
push
dec
lahf
ret
sbb
pop
cmp
test
ss
enter
cmp
cld
cmpsb
pop
push
pop
dec
sub
jne
ljmp
and
pop
add
mov
nop
adc
jnp
rorl
mov
fsubrs
shrb
fmuls
popf
aas
push
imul
icebp
mov
sub
xor
fs
jo
adc
pop
sahf
nop
dec
or
push
adc
inc
lea
mov
add
push
js
aaa
push
add
leave
add
and
dec
push
test
lahf
inc
dec
and
mull
push
dec
adc
cli
mov
push
push
jl
js
sbb
loop
js
mov
adcl
cmp
jmp
mov
cmpsb
pop
and
push
jmp
fs
andl
and
and
push
sub
mov
mov
je
jl
js
dec
or
and
push
push
add
enter
inc
and
sbb
sbb
jecxz
xor
sub
jbe
sbb
dec
dec
xchg
jo
cmp
ja
inc
sub
enter
xor
dec
cwtl
dec
pop
test
or
xchg
insl
pop
push
or
ret
xchg
cltd
dec
mov
leave
pop
sub
dec
push
mov
cmp
test
popa
stc
push
lods
mov
inc
ja
sub
mov
ret
cmp
mov
mov
sbb
call
aad
std
sahf
inc
mov
dec
in
mov
dec
mov
dec
scas
add
xchg
sbb
dec
push
stos
movsb
pop
ret
xor
mov
adc
into
push
mov
test
pop
xchg
cmp
adc
jmp
fwait
pop
jb
pop
add
or
add
pusha
add
or
cltd
adc
nop
adc
inc
inc
add
daa
clc
pop
inc
mov
add
imul
push
hlt
sbb
loopne
push
addr16
cmp
sbb
dec
jmp
cmp
or
xor
repnz
pop
pop
or
imul
jmp
xor
cld
rcrl
sub
out
jl
sub
popa
das
mov
and
sbb
dec
bswap
andb
xchg
and
lea
add
mov
out
getsec
and
and
daa
pushf
out
decl
pusha
test
add
pusha
pop
stc
xchg
inc
adc
int3
mov
les
add
xor
icebp
addr16
jle
sbb
or
inc
insb
es
movsl
add
or
dec
daa
sbb
and
push
add
adc
stos
rclb
mov
jno
outsb
mov
dec
or
lods
fwait
addl
mov
int3
push
xchg
add
cmp
imul
rcll
mov
add
movsl
aad
jle
add
pop
enter
pop
out
xor
and
and
and
xor
inc
loopne
add
cmpsl
aaa
sub
dec
cwtl
test
adc
add
jmp
xor
xorb
loop
pop
sbb
add
loopne
nop
sub
adc
dec
mov
cmp
ret
and
push
pop
pop
adc
je
sbb
inc
cmpb
sbb
add
mov
adc
je,pn
or
les
cmc
jecxz
push
or
punpckhwd
xchg
pop
add
arpl
add
inc
sbb
cmp
push
into
and
adcl
inc
mov
mov
adcl
push
jle
mov
jg
cmp
fimuls
test
out
lret
pop
sub
add
rorb
fadds
jge
cmpl
aaa
xchg
add
xlat
sub
lock
or
cld
cmc
jl
lea
in
xchg
sahf
dec
xor
push
into
jne
adc
adc
cmp
add
jne
sarb
sti
je
cmpb
dec
push
mov
mov
js
es
fwait
dec
cmp
push
push
stos
push
inc
rcrl
pusha
adc
push
pop
fcomps
cli
push
sub
lahf
xor
pop
cmp
xchg
inc
es
repz
je
jmp
add
push
sbb
mov
inc
mov
xor
andb
pop
call
lret
ror
cmp
push
mov
call
ret
cld
push
nop
or
insb
sbb
push
push
adc
xchg
sahf
out
inc
es
xor
clc
jo
ret
div
jne
push
insl
ljmp
pop
mov
fbstp
out
test
inc
inc
or
cmp
int3
mov
or
imul
sub
mov
sub
push
xor
mov
adc
pusha
xor
nop
push
leave
orb
and
mov
mov
mov
das
adc
jl
les
add
sub
jno
aaa
test
or
mov
mov
adc
movlps
sahf
repnz
sbb
inc
dec
mov
pushf
push
sub
add
pop
bound
clc
or
jbe
push
into
int
push
mov
dec
cmp
sub
movsl
cmp
pop
cli
and
sbb
inc
jge
pusha
and
movswl
push
xchg
loopne
adc
adc
mov
mov
nop
shll
enter
adc
inc
jl
push
fildll
or
out
es
sahf
cwtl
jne
sub
ja
or
and
cmpsl
xchg
xchg
roll
and
adc
gs
dec
and
adc
or
sbb
dec
or
data16
mov
jae
or
lods
or
in
cli
test
and
stos
and
adc
xor
jp
push
in
pop
loope
sbb
xor
cmp
notl
jo
rcll
add
rclb
mov
push
inc
cmpsl
rolb
xor
mov
bound
add
mov
mov
and
repz
cmp
loope
bound
cmpb
jae
and
gs
mov
fstl
call
int
add
or
outsb
add
mov
in
dec
imul
data16
fldcw
movsb
or
stos
pop
add
add
mov
adc
and
cmp
or
sub
mov
fimuls
jne,pn
inc
and
adc
loope
pop
mov
cli
add
push
push
and
lods
scas
inc
loopne
cmpsb
test
cwtl
subl
loop
adc
fisubs
cs
sub
push
ss
sub
lods
jo
out
push
mov
rol
call
data16
adc
push
in
mov
adc
adc
movsb
or
dec
or
push
fcompl
mov
mov
dec
cmp
jbe
or
or
jne
out
out
subl
add
inc
in
flds
movsb
sub
or
and
push
mov
sub
inc
xor
pop
pop
pusha
pop
push
xchg
mov
test
mov
pop
cmp
testb
add
cmp
les
fmulp
xchg
iret
push
idivb
les
fldcw
fmuls
push
sbb
test
dec
inc
sbb
jae
adc
dec
add
xor
xor
add
imul
jae
jo
rclb
movl
outsl
cmp
cmp
fstpl
jae
cmp
jne
lcall
add
push
or
inc
sbb
xor
or
xchg
fmuls
popf
test
jb
je
pusha
sub
jg
jl
cmp
rorb
pop
nop
pop
and
pop
lcall
jo
test
cld
add
in
mov
dec
popa
pushf
rcr
add
add
sub
scas
or
dec
lock
mov
cmc
lret
sarb
aaa
rol
mov
cwtl
stos
add
addr16
insl
mov
lea
into
ss
push
andl
sub
sub
or
and
cmp
push
push
sbbb
adc
data16
push
push
and
adc
xor
movsb
push
cmp
pop
jo
popa
shrl
xor
adc
loope
xor
push
mov
push
pushl
idivl
lds
and
ds
and
cmc
sub
cmp
mov
inc
adc
mov
sti
test
push
mov
cld
xor
xor
jbe
or
cmp
push
ret
push
punpckhdq
lcall
lock
inc
push
push
aaa
xchg
xor
or
jmp
out
in
pop
je
push
dec
mov
xor
or
repnz
inc
pop
das
clc
lods
js
cmp
cld
mov
cmp
je
or
dec
add
cmp
push
or
add
lods
cmp
jg
into
not
sarb
dec
pop
outsl
aad
fimull
add
add
or
jl
jg
push
inc
dec
pop
jmp
jnp
scas
cwtl
popf
mov
jle
inc
out
push
add
push
roll
inc
idivl
dec
mov
cltd
sbb
jne
and
mov
mov
adc
test
jl
dec
test
lods
xor
mov
adc
push
push
dec
dec
cmp
add
jl
cmpl
mov
adc
inc
sbb
test
fcomip
ds
add
imul
or
mov
add
leave
ret
adc
mov
and
shll
call
das
pop
popa
cli
jmp
cmpl
push
cmp
xor
hlt
push
cmpl
xor
rorl
push
inc
push
lock
fstps
sarb
movb
push
scas
mov
xchg
sub
and
repnz
test
dec
rol
clc
out
push
popf
fmull
or
or
mov
popa
icebp
pop
pusha
push
gs
add
loopne
lea
push
push
divb
icebp
push
adc
ds
fists
cld
push
in
or
adc
adc
adc
int3
imul
or
adc
push
xlat
fisubl
leave
push
leave
inc
jb
jmp
sbb
or
xchg
xchg
mov
mov
out
push
je
mov
pop
out
daa
outsb
sub
jb
or
and
out
jo,pn
inc
scas
push
icebp
mov
add
push
mov
and
mov
ret
sbb
xchg
pop
cmpsl
inc
sti
incl
je
jmp
add
sub
push
sub
outsb
push
push
add
jle
je
andl
pop
xor
iret
ret
fcom
xor
sbb
push
call
mov
inc
repz
adcb
pop
xchg
push
xor
movl
dec
aam
cmp
stc
popa
ret
call
ds
ja
or
jmp
jp
adc
and
test
add
pop
rolb
jne
and
mov
test
and
sbb
jns
mov
and
aad
mov
cmc
push
addb
xor
ltr
push
jbe
nop
data16
lahf
mov
jp
in
mov
mov
dec
jne
xchg
add
cmp
lock
ljmp
xor
xor
mov
bnd
push
or
adc
aas
mov
push
inc
in
inc
cmp
and
mov
out
mov
loopne
fsubrp
add
push
push
icebp
cli
int3
stos
mov
fcoms
cmp
cmpl
cmp
mov
sub
cmpsl
inc
mov
push
inc
add
subl
mov
insl
movsb
lock
jb
sub
inc
adc
sub
sbbb
and
push
mov
sub
jne
mov
popf
call
shr
leave
std
add
shlb
ljmp
sub
shl
repz
add
mov
into
hlt
adc
mov
push
inc
cmp
nop
mov
shlb
in
repz
mov
mov
sub
mov
or
bound
movb
mov
cwtl
test
loopne
cmpsb
nop
sub
or
inc
lods
mov
add
add
ds
sub
fsubrs
mov
sub
aad
pop
push
push
adc
mov
cmp
pushf
inc
lods
ret
xlat
test
loopne
and
push
mov
add
pop
push
pop
xchg
pop
pop
ret
rcrl
nop
mov
rorl
push
shrl
and
inc
sbb
scas
ljmp
inc
mov
cmp
ret
into
jae
imulb
das
push
outsl
movsl
lret
add
bound
mov
aas
add
cmp
pusha
sbb
imul
and
je
add
cmp
sub
mov
add
pop
push
and
push
mov
dec
sub
idivb
mov
mov
mov
pushf
sub
dec
sub
imul
push
pop
push
pop
rol
adc
in
lods
fwait
ss
cmpsl
jbe
cs
push
daa
inc
dec
popf
rol
inc
mov
sbb
mov
mov
mov
jg
or
mul
xor
jl
push
xor
clc
jle
add
xchg
shlb
ja
or
push
adc
cltd
cli
sarl
je
adcb
mov
aaa
inc
mov
add
push
pop
stos
dec
inc
jne
pusha
jns
push
popa
jo
fucomp
or
ret
sbb
pop
cmpsb
mov
mov
clc
lret
insb
cmc
fsubl
push
aam
popa
xchg
mov
cmc
pusha
adc
scas
mov
push
inc
push
sbb
push
pop
and
add
lea
cmp
imul
sub
mov
sbb
push
rorl
sahf
mov
pop
mov
test
ljmp
sbb
push
xor
xchg
sbb
pop
cmp
push
jbe
and
cmp
push
jns
in
test
mov
ret
push
mov
data16
sbb
test
xchg
lea
aaa
dec
fisubs
mov
inc
adc
add
add
les
fidivl
push
dec
sub
push
popf
xchg
sbb
imul
inc
jmp
mov
add
dec
xchg
push
push
xchg
jnp
inc
shll
or
pop
cmp
jnp
mov
mov
leave
mov
out
sbbb
loopne
inc
loopne
adc
cmp
cmpsl
adc
ret
or
dec
xor
add
shlb
xlat
int3
fwait
mov
inc
lahf
push
jb
ret
arpl
inc
xchg
icebp
ret
jl
pop
lock
dec
push
dec
add
pop
pushf
js
sbb
adc
pop
cmp
jns
add
in
mov
cmp
push
jmp
insl
rorl
jp
pushl
push
rorl
pop
pop
test
xchg
dec
jo
orb
push
pop
xor
and
jl
and
mov
fmull
ds
mov
in
test
lods
or
aam
addl
rorl
jmp
mov
pop
stos
int3
xchg
addl
mov
sbb
add
ss
and
xchg
ja
xor
jmp
cmpl
cs
clc
aas
push
dec
fidivl
divl
movsl
test
xlat
dec
and
mov
js
and
test
scas
shlb
jne
mov
dec
lahf
pop
cli
repnz
rcr
bound
ds
ljmp
daa
clc
rcll
enter
dec
xor
insl
jne
cs
in
mov
jae
arpl
sahf
das
iret
repz
je
inc
or
in
xlat
jg
push
or
and
lahf
push
cmp
push
push
jne
or
inc
sbb
cmp
leave
jno
sarb
call
call
dec
push
mov
cmp
je
mov
test
mov
cmp
cmp
je
push
fidivs
xor
loope
sbb
cmp
push
push
push
mov
and
push
inc
mov
push
sub
movb
jmp
sbb
pop
mov
add
call
mov
inc
push
jb
push
push
push
call
xchg
rorb
dec
addr16
dec
inc
mov
push
push
outsl
aaa
cmp
sbb
adc
shlb
sub
sti
adc
xor
xor
cmp
push
sbb
faddl
xchg
ret
sbb
adc
stc
sbb
cmp
jne
decb
fwait
clc
les
fildl
mov
mov
pop
sbb
shlb
xchg
mov
cmp
mov
in
or
pop
push
fmull
adc
outsb
addr16
lock
imul
add
jecxz
or
popa
pop
mov
adc
mov
popf
push
dec
scas
sbb
xchg
testb
aad
lcall
adc
adc
les
repz
shll
sbb
push
pusha
xor
shll
push
xchg
sarb
fmul
iret
iret
movsl
or
call
cmpsb
cwtl
in
std
fldl
push
mov
inc
int3
fwait
cmp
mov
pop
shlb
scas
sub
push
cld
add
into
xchg
mov
dec
testl
loopne
add
out
rolb
xor
pusha
pushl
cmp
sub
inc
jl
add
and
js
jo
add
and
and
xor
dec
jae
add
sbb
testb
adc
mov
push
dec
add
jne
sbb
fdivrp
adc
and
idivb
sub
mov
jne
mov
xor
jno
add
scas
dec
inc
inc
mov
ret
cmpsl
pop
sahf
testl
ss
add
sub
xchg
fldcw
loope
push
dec
adc
fbld
std
add
jmp
cmp
sbb
adcb
sbb
xchg
lret
or
ret
dec
cmp
ja
fs
sub
pop
mov
out
rcrb
shll
mov
xchg
mov
jle
leave
lea
mov
xor
mov
bound
or
out
sbb
pop
sahf
adc
add
mov
stos
es
in
adc
sbbl
fsubl
mov
inc
shll
jo
push
pop
push
rol
ljmp
add
nop
and
inc
mov
jmp
add
mov
mov
repnz
add
or
adc
popf
push
push
das
lret
notb
lock
or
ret
inc
sbb
test
push
fdivrs
xor
dec
popf
loopne
adc
mov
mov
pop
mov
das
or
push
cs
incb
repnz
es
push
out
add
iret
andl
jle
stc
or
jg
imulb
in
stc
sarl
or
pop
mov
fnop
xchg
out
cmp
adc
fiaddl
sbb
pop
and
mov
and
pushf
lock
lods
xchg
loopne
je
icebp
jne
fwait
jl
cmpsl
xor
ja
fwait
jg
push
dec
pop
lahf
sub
adc
pop
dec
mov
add
push
mov
inc
outsb
cli
je
add
test
add
pop
or
fldcw
mov
dec
sbb
inc
add
mov
push
lret
clc
pop
imul
movsl
cmp
or
jp
stos
ljmp
js
sbb
mov
dec
xchg
aas
xor
popf
sbb
scas
dec
inc
cmp
adc
xchg
dec
jmp
mov
or
cld
pop
ret
cmp
pushf
or
pop
adc
push
inc
adc
shlb
or
jmp
clc
fidivrs
push
push
or
or
add
shl
pop
inc
sbbb
test
enter
inc
mov
and
mov
xchg
inc
add
test
push
adc
pusha
push
inc
or
add
int
mull
std
jo
pushl
fstl
sbb
sub
ljmp
add
ret
add
sbb
jnp
push
sbb
mov
add
nop
gs
je
push
cltd
test
fs
xchg
inc
insb
insb
push
push
dec
mov
insb
sbb
pop
lcall
pop
lret
sub
dec
jo
adc
je
cmp
je
mulb
add
mov
jbe
and
sbb
cmp
je
xor
push
xchg
lea
push
push
lds
imul
inc
pop
xchg
rorl
ds
lea
jae
repnz
dec
leave
rolb
nop
add
andps
cmp
jne
lock
adc
mov
lock
lock
mov
jmp
dec
in
pop
push
leave
push
push
adc
xlat
and
mov
add
jo
jp
dec
ss
jnp
out
dec
mov
jbe
mov
sar
leave
add
add
push
mov
fdivrp
sub
lea
mov
sub
cs
test
inc
xchg
leave
aam
adc
push
leave
inc
push
je
pushf
cmp
imul
push
arpl
sbbl
inc
sub
cmpl
add
mov
sub
lea
xlat
test
test
ljmp
sbb
adc
faddl
repz
pop
jo
subb
mov
inc
leave
pop
sbbl
bound
sbb
jns
insb
push
imul
jge
jne
xchg
andb
addb
pushw
mov
mov
cs
or
popa
fildll
jmp
cmp
adc
popf
divb
jl
clc
adcb
sub
aas
fistpl
data16
lock
cwtl
fidivrs
lret
xor
inc
movsb
and
loopne
loopne
sarb
fwait
sbb
add
cmp
push
cmp
outsl
and
dec
push
lea
sub
push
adc
add
xchg
add
lea
or
lret
push
or
mov
add
sbb
lods
add
adc
dec
cmp
xchg
fcoms
cli
les
es
mov
pop
xor
pop
xor
add
pop
popa
lock
and
push
adc
pmulhuw
and
sub
idivb
and
sbb
sbb
shrl
mov
add
lcall
rolb
and
lret
cmp
fs
push
mov
fistps
loope
movsl
aad
mov
sbb
pop
dec
dec
dec
out
sti
and
cmp
je
and
incb
inc
mov
push
enter
pop
jge,pn
sbb
jg
adc
lea
test
shlb
js
movsb
ret
pop
loopne
xchg
and
add
pusha
pop
filds
cmp
jne
or
mov
adc
orl
pop
jb
fs
push
or
push
or
leave
sarl
fcmovnb
xchg
loope
pop
into
jecxz
inc
and
pop
lock
mov
loopne
cmp
setne
lret
add
stc
xor
xchg
loopne
lret
cmpsb
add
bound
sar
jo
out
pop
add
cmpsb
cmp
cmp
xor
pusha
jno
sbb
or
mov
dec
mov
add
mov
cltd
cmpl
mov
repnz
test
push
jmp
pop
cltd
add
fwait
popa
aad
pop
shlb
sub
mov
jo
mov
clc
fistpl
pusha
shrb
ljmp
xchg
popf
pop
dec
pop
mov
movsl
add
idivb
je
mov
gs
adc
push
pop
pop
jo
pop
out
cmp
es
out
jo
push
js
or
sahf
cmpsl
mov
aas
lcall
xchg
movsl
xchg
xor
push
shl
test
aad
jbe
jb
mov
cmp
adc
mov
stos
xor
or
aaa
pop
popf
push
fadds
and
cli
cmp
or
test
inc
mov
xor
je
jae
add
jae
inc
lcall
sbb
dec
inc
or
movsl
lcall
or
adc
call
rcpps
je
repnz
push
sbb
jp
dec
add
out
enter
ficoml
or
add
pop
fcompl
out
adcl
and
les
push
pop
add
inc
dec
or
cs
or
adc
jmp
sbb
lods
enter
sub
addr16
add
fisubrl
add
jl
or
aaa
mov
addr16
add
test
sti
and
dec
scas
mov
jge
orb
ds
inc
sbb
sbb
inc
xchg
fldcw
lods
mov
push
push
cld
cmp
jns
push
jp
add
xorb
les
jne
ret
sub
loope
test
pop
mov
cld
roll
mov
call
mov
cs
add
xor
mov
sarb
aad
loope
jmp
mov
jp
adcb
adc
adc
mov
mov
or
jo
push
push
sub
bound
mov
test
rdtsc
xor
lret
sub
push
subb
test
sti
inc
push
and
xchg
aam
mov
mov
sub
mov
push
std
push
and
not
cmp
sbb
in
sub
sub
nop
jne
js
sti
neg
sbb
push
cmp
ret
xchg
jno
adc
and
push
pop
test
sbb
je
add
cmpl
insl
inc
insb
js
sbb
cmp
je
xor
lea
loope
or
sub
rcrb
or
push
and
inc
add
pop
inc
xchg
dec
daa
add
add
pop
sbb
xor
inc
outsb
jl
mov
sbb
inc
jmp
pushl
lods
mov
pop
mov
lock
inc
lea
sbb
out
ss
arpl
pop
mov
rcll
push
mov
sub
sbb
in
pop
jo
sti
adc
inc
idivb
test
pop
inc
push
loopne
insl
adc
mov
jl
andl
xchg
mov
jl
cld
and
cmpsb
cs
inc
cltd
ds
xor
inc
or
xor
ret
jecxz
fistpll
sub
adc
push
push
ret
xchg
dec
outsb
mov
cltd
cmp
mov
cmp
xor
dec
lods
dec
adc
dec
cmpsl
shr
adc
push
lds
lret
mov
or
and
inc
mov
mov
or
pop
fdivrl
inc
stc
pop
pushf
push
mov
push
push
mov
mov
jecxz
sbb
jo
repz
jl
or
push
shrb
adc
sbb
or
xchg
add
shr
pop
add
inc
dec
insb
dec
pop
aaa
cmp
dec
adc
pop
inc
push
and
sbb
push
loopne
xor
fdivs
xor
jmp
into
add
pop
pop
xor
aad
fnsave
mul
push
nop
or
or
xor
lock
movb
je
fwait
call
call
adc
cmp
mov
or
cmp
xchg
xor
add
add
imul
sbb
or
jle
jle
add
xchg
adc
mov
add
mov
jl
loope
xor
xchg
push
sbb
inc
inc
mov
mov
dec
gs
bound
push
adc
insb
push
xor
loopne
lret
out
inc
push
mov
dec
ds
outsl
sbb
add
insl
adc
dec
es
sub
mov
jge
fisttpll
mov
and
cmp
dec
add
fadds
shll
push
jb
jb
add
ret
push
add
sbb
jo
push
ja
ret
mov
test
ret
dec
xor
or
insb
scas
xchg
mov
stos
cs
cmp
fists
sbb
push
sbb
mov
cmpsb
hlt
or
pop
xor
pop
mov
call
movhps
jno
and
clc
aaa
loope
pop
out
movl
xor
push
data16
nop
test
fisttpl
push
mov
nop
jmp
xchg
test
jno
fildl
nop
callw
push
pushf
data16
mov
adc
aad
imul
movsb
test
rcl
mov
fdiv
fmuls
mov
adcl
and
add
pop
outsb
ja
mov
jg
push
jo
jmp
add
pop
ss
outsb
pop
push
push
pop
sub
cmpsb
jl
lods
mov
je
pop
mov
idiv
sub
cltd
mov
mov
pop
testl
xchg
add
rcrb
fcoms
out
sub
adc
jne
sbbb
xchg
jp
out
jb
sbb
or
leave
pushf
mov
push
icebp
enter
mov
xchg
mov
cmp
add
push
or
inc
pop
pop
enter
add
or
mov
xchg
je
out
gs
dec
lock
adc
call
add
ret
xchg
adc
int
fildl
pushl
rcl
xor
or
rolb
jl
jae
add
add
xchg
movsb
sbb
add
clc
pop
ds
lea
mov
lock
xchg
sub
inc
pop
movsl
jae
aam
scas
sub
add
mov
push
mov
enter
in
repz
mov
inc
cld
sbb
shrl
sub
pop
and
and
lea
test
jecxz
repnz
pop
test
sbb
cmp
in
push
or
jae
and
stc
cmpsb
bound
pusha
jo
dec
add
or
cmp
xor
mov
test
data16
imull
dec
push
push
jne
sbb
jmp
insb
add
movsl
inc
xor
cmp
imul
push
mov
cmp
orb
pop
fisubl
dec
jge
adc
sbb
dec
movb
cmp
loopne
xor
mov
cs
mov
xor
pop
push
call
inc
add
loop
sbb
imul
push
pop
pop
xor
and
sbb
xor
add
and
aas
sahf
mov
xchg
xchg
int
jbe
mov
adc
lock
andl
and
push
mov
rorb
cwtl
les
sbb
pop
adc
jno
aas
jbe
insb
shr
inc
add
outsl
adc
xchg
and
and
cmp
les
push
sahf
loope
xchg
sub
pusha
insb
std
mov
jg
mov
decb
adc
dec
inc
sbb
out
xlat
movsb
test
xor
inc
insb
jge
test
clc
add
mov
inc
fisubl
clc
inc
sub
dec
jnp
je
push
adc
pop
dec
cmp
les
sub
rcrb
xlat
out
xchg
jne
add
jns
cmpsl
inc
aam
cs
jnp
shl
mov
out
icebp
xchg
sbb
jle
push
push
cmpsl
add
rorl
mov
push
inc
sbb
push
fadd
push
jnp
sub
rcrb
and
jp
pop
cmp
loope
adc
imul
add
add
movsl
add
insb
insb
daa
adc
jno
jo
sbb
in
subb
aad
jg
call
mov
jns
add
movb
mov
push
xor
xor
je
sbb
ret
cmp
xor
mov
rorl
dec
add
and
movsb
add
xorb
push
aad
adc
push
mov
mov
lea
loopne
pop
mov
loopne
mov
mov
and
or
or
sub
sarl
push
sub
add
push
loopne
push
xchg
ds
addl
jb
dec
out
xor
lret
pusha
aas
lahf
or
mov
hlt
out
jmp
dec
dec
loope
mov
lcall
pop
or
inc
dec
adc
push
or
push
mov
shlb
adc
mov
push
movsb
push
mov
xchg
shrl
mov
and
pop
lret
stos
mov
pop
fnstcw
push
cs
cltd
mov
push
dec
nop
in
lea
jo
add
les
jb
out
stos
cmp
sbbl
pop
adc
dec
push
sahf
push
jb
push
call
and
jge
push
add
or
enter
or
rcll
out
fs
test
push
adc
push
mov
inc
pop
cwtl
push
jo
or
xor
test
ret
cld
cmp
insb
call
in
adc
cld
lock
jnp
bound
pop
mov
pop
popf
add
mov
in
loopne
pop
notl
mov
clc
add
in
addl
push
push
rorb
sahf
push
call
inc
test
adc
ljmp
or
xor
dec
ss
xchg
pop
and
push
push
inc
shll
sbb
xor
faddl
add
and
daa
xor
fldl
adc
sbb
lcall
loop
out
pop
ret
sar
lahf
shl
inc
mov
testl
mov
pop
lcall
frstor
mov
push
push
ret
mov
rorl
mov
and
addl
insl
cmpsb
add
loope
adc
adc
ret
fisubl
or
push
jl
push
inc
mov
ret
push
push
mov
cli
and
jae
movsb
mov
sbbl
sub
sbb
push
pushf
or
les
aas
mov
in
push
lret
sbb
mov
in
dec
mov
mov
sbb
test
mov
aas
outsl
ret
jle
fadds
jb
roll
mov
push
jp
mov
fnstenv
cmpl
mov
push
shlb
push
inc
subl
adc
mov
dec
ret
inc
and
dec
pop
lods
push
and
out
lods
xlat
add
ds
ds
mov
xor
shlb
push
push
jns
adc
cmp
xchg
or
sti
sub
xchg
add
xor
lret
imul
and
in
test
xchg
push
inc
imull
das
mov
in
mov
ds
mov
xor
or
loopne
or
push
push
out
or
lahf
rcr
mov
dec
cmp
pushl
push
push
xchg
mov
pcmpeqb
lret
mov
mov
inc
cld
fcmovnb
loopne
add
ret
testb
sbb
les
pop
cmp
or
inc
popf
adc
jno
lock
scas
xor
and
out
ret
outsl
adcb
fstpt
test
dec
ja
je
or
je
or
sub
sub
enter
rclb
xchg
scas
cmp
stos
jecxz
pop
fisubl
test
push
or
ds
sahf
test
ss
jne
inc
or
xor
outsb
inc
mov
cmp
stc
mov
push
adc
adc
imul
push
inc
push
iret
pusha
inc
inc
lds
mov
movzwl
dec
sub
bound
lods
rcrl
jp
inc
jb
mov
es
cld
sub
inc
call
gs
add
je
lds
mov
mov
or
mov
adc
push
ljmp
cltd
jp
rolb
and
fimull
xor
sbbl
push
movb
or
adc
mov
ret
push
mov
sti
aaa
clc
dec
je
sub
sub
sbb
add
incb
adc
add
mov
push
adc
ficomps
or
in
cmpsb
cmp
or
push
adc
sub
push
push
pop
jo
dec
inc
cwtl
insb
ds
mov
pop
xchg
add
ja
xor
xchg
jne
sbb
sub
sbb
in
pop
and
push
cltd
or
or
addb
inc
cli
sbb
rsqrtps
jmp
popf
add
gs
cmp
push
pop
cli
sbb
daa
sbb
hlt
xchg
pop
test
pop
fcoml
or
mov
mov
ret
adc
sti
je
dec
inc
bound
mov
push
inc
shll
clc
mov
sbb
into
jbe
add
fcomp
dec
in
sbb
enter
in
push
push
addb
in
push
repnz
fildl
cwtl
add
sub
xor
call
cmp
xchg
pushf
xchg
and
xor
mov
push
mov
mov
cwtl
cmpsl
das
adc
mov
xchg
lea
cmpl
mov
mov
imul
mov
sub
shrb
aas
push
dec
xor
repz
lcall
or
push
aas
push
pusha
nop
mov
push
fdivl
sbb
add
outsl
inc
cs
cmc
fnstsw
push
cmp
and
sbb
sub
in
push
xchg
mov
fcoml
inc
sahf
and
in
pop
xor
add
push
mov
out
cmpsb
shll
movsb
fcoms
cltd
and
mov
and
sbbb
push
sub
lods
add
jae
inc
xchg
push
adc
dec
inc
mov
inc
aaa
cwtl
idivl
sub
cmp
sbb
rorb
mov
clc
dec
fisubl
mov
sbb
xchg
pop
adc
in
add
shr
pushf
popa
mov
icebp
mov
adc
jns
rorb
pop
rclb
jmp
dec
ficoml
or
popa
add
cmp
bound
xchg
hlt
andl
scas
adc
or
mov
loop
xor
mov
push
mov
add
and
sbb
mov
xor
inc
enter
lret
adcl
jne
jle
or
sbb
lahf
mov
cmp
pop
in
cmp
pop
inc
cmpsb
shl
nop
push
cmp
add
aam
xlat
jle
mov
adc
push
jo
push
repnz
or
sub
loopne
sub
je
inc
and
je
and
fucomip
add
mov
iret
xor
or
xchg
xor
stc
repnz
jb
or
pop
out
mov
adc
mov
sbb
sbb
je
imul
and
insl
pop
call
clc
sub
xor
jo
xchg
rclb
xchg
js
std
mov
aam
fsubs
cmp
mov
fsubrs
shlb
push
cmp
push
js
cli
or
push
aas
pop
dec
movsl
cmp
call
xchg
jbe
adc
shl
call
iret
pusha
sbb
pop
incl
sub
pop
add
dec
stos
decl
out
inc
inc
cwtl
imul
push
cmp
lock
jmp
and
into
pop
jp
ret
pop
push
xor
popa
add
into
mov
rorl
xor
sub
inc
dec
rolb
insb
sbb
push
mov
into
pop
pop
push
add
cmp
inc
inc
adc
or
adc
fidivl
mov
mov
jne
scas
int3
push
add
mov
pusha
dec
cwtl
pop
fs
or
cmpsb
loopne
or
push
pop
jg
push
fisttpll
ss
mov
add
add
push
psubsb
sbb
inc
sarb
xchg
mov
icebp
or
or
nop
mov
jg
xlat
add
push
lock
mov
sti
andb
mov
or
stc
lods
adc
dec
or
data16
in
or
mov
andl
push
movsl
inc
psraw
fistpl
ja
push
pop
lret
xchg
movsb
jns
mov
push
cmp
andb
je
push
jg
jns
dec
imul
inc
lcall
push
pusha
mov
mov
xchg
shr
sbb
sbb
adc
add
xchg
add
and
add
insl
mov
aad
pop
pop
jecxz
dec
adc
and
fcmovnb
cmpl
sub
pop
into
pop
add
adc
jle
or
xor
movsl
mov
fisubl
sbb
sbbb
push
cmp
aad
aaa
pop
movb
sbb
fs
sbb
mov
adc
xchg
sub
jle
icebp
ds
lcall
jne
inc
cmpsb
sub
in
scas
mov
cmp
pop
mov
mov
jge
adc
data16
pop
pop
sbb
push
loope
push
dec
fs
mov
push
or
inc
xor
cmpsl
push
sub
loopne
cmp
xlat
pop
push
add
pusha
xchg
mov
xchg
add
cmp
or
cmp
les
repz
fxtract
sbb
pop
fidivrs
push
test
or
in
aaa
stos
hlt
cwtl
mov
clc
add
jge
aad
cwtl
pop
xchg
mov
es
mov
mov
movsl
or
sub
dec
addl
cli
call
jb
add
xor
fsts
adc
jnp
arpl
xor
jne
pop
shlb
adc
mov
movsl
test
jbe
pop
jo
fcoms
sbb
and
add
add
mov
subl
dec
dec
cli
add
pop
je
or
mov
cmp
test
shrb
adcl
sub
test
adc
sbb
jecxz
xchg
push
out
dec
adc
fs
push
or
add
pop
pusha
fst
or
fs
sbb
fldt
and
decb
cli
fiadds
and
adc
clc
dec
lcall
subb
xor
xlat
inc
cmp
dec
and
pushf
push
adc
and
add
stc
mov
pop
les
inc
adc
or
test
xor
inc
shl
pop
fs
ds
in
call
scas
sbbl
inc
and
out
inc
mov
pusha
mov
jecxz
jb
enter
sbb
or
sbb
add
pop
jno
cmp
push
dec
out
add
fs
adc
or
call
pop
push
inc
sbb
sbb
xchg
fadd
push
and
inc
push
cltd
add
push
loopne
sub
push
jns
sbb
xchg
or
pop
mov
inc
sub
sbb
xor
pop
push
sub
jge
add
lea
fbld
cmp
ja
jl
add
fsubl
or
inc
repnz
xor
sti
enter
adc
sbb
sub
xchg
loopne
xor
bnd
push
push
cmp
adc
or
push
data16
and
out
or
test
inc
ret
cmp
or
adc
jmp
insb
add
or
mov
jl
inc
xchg
dec
add
loopew
icebp
sub
push
dec
dec
in
insb
dec
xchg
adc
xor
xor
jmp
push
xchg
xchg
test
add
iret
js
push
mov
rol
imul
roll
sbb
repz
testb
sarb
stos
sbb
mov
fadd
dec
adc
xchg
cli
dec
cld
call
mov
imul
lret
mov
adc
adc
dec
or
sbb
mov
adc
or
jmp
scas
inc
arpl
jecxz
and
mov
lock
xor
pop
cmp
aaa
cmp
sbb
das
inc
add
and
push
movsl
sub
dec
dec
sbb
adc
stc
enter
pop
sbb
test
inc
mov
fmuls
in
inc
jecxz
popf
push
mov
xlat
mov
add
sub
adc
or
push
pop
xchg
ficoml
xchg
and
loopne
jl
arpl
out
loopne
filds
cs
inc
in
push
in
scas
in
dec
mov
call
repz
cmp
testb
or
jne
orl
jl
or
shlb
leave
xchg
fdivp
or
pop
adc
push
jno
mov
andl
or
push
jp
int3
mov
inc
daa
pop
push
lock
js
sub
jne
pop
add
push
enter
mov
cmp
repnz
cmp
lods
pop
or
lods
jnp
js
cmp
shl
mov
inc
mov
xchg
adc
add
and
or
add
aam
daa
es
mov
dec
or
rcll
jno
sub
imul
pop
add
dec
sub
adc
lods
jge
push
mov
sti
or
xchg
jg
add
add
add
lds
mulb
sbb
mov
mov
mov
aas
xor
jns
jne
push
into
lds
subb
aam
dec
push
add
xchg
or
addr16
adc
jno
cmp
mov
imul
mov
or
in
sub
inc
adc
stos
and
and
xor
rcl
or
jb
xchg
out
scas
or
push
push
jns
stc
jnp
jae
mov
push
sub
jbe
je
jno
jg
or
and
out
pop
cmp
jne
mov
adc
pop
cmp
push
hlt
jge
cmp
cmp
pop
pop
mov
fwait
or
and
fiaddl
lds
nop
push
stc
mov
add
in
or
sub
hlt
loopne
jl
repnz
push
inc
mov
sub
addl
lock
xchg
jg
ret
mov
sbb
sbb
inc
push
sbb
sahf
or
movsb
xlat
add
mov
loope
or
inc
aad
rolb
out
cwtl
and
xchg
cmp
movsl
xchg
push
dec
or
or
shlb
and
insl
subl
loopne
and
adc
loopne
cmpsl
pop
fwait
add
cld
js
and
push
mov
or
dec
pop
ret
mov
aam
pushf
aas
push
pop
or
jb
fcompl
jnp
mov
shlb
push
add
decl
sub
dec
inc
inc
or
pushf
nop
mov
aaa
sbb
dec
fdivl
jne
lods
daa
andl
imul
adc
sub
scas
sub
push
xorl
sbb
push
div
cmp
jns
add
rclb
sbb
sahf
mov
inc
jecxz
test
mov
add
sbb
cli
add
mov
push
xor
pop
mov
mov
dec
add
cmpb
fimull
inc
nop
popa
popa
or
pop
stos
inc
jno
mov
ret
lock
test
dec
xchg
dec
dec
pop
insb
pop
sbbb
dec
cmp
adc
push
pop
orb
mov
pusha
addr16
nop
pop
stc
outsb
inc
sub
jle
dec
dec
stc
add
test
mov
test
cmp
jbe
mov
cmp
push
sbb
push
pop
adc
jmp
arpl
add
pusha
test
inc
in
lods
jbe
mov
xor
cmp
jbe
xchg
lea
adc
jo
pop
mov
xorb
mov
ret
sbbb
cmpsb
in
mov
xchg
addr16
add
cmp
int
shlb
loope
xor
add
adc
push
pusha
sub
imul
push
inc
push
cmp
jb
subl
mov
scas
xor
inc
jmp
xor
js
cmp
add
ja
push
push
push
fstpl
mov
push
and
xchg
inc
sub
aam
mov
ret
add
xor
test
or
pop
addb
lods
loop
or
or
js
loopne
jmp
cwtl
adc
outsl
sti
daa
jo
jne
andl
push
xchg
jne
fsubrl
sbb
push
mov
or
lcall
out
mov
mov
adc
or
mov
sbb
aam
movsb
cmp
sub
daa
dec
lea
mov
popf
rorb
rcrb
inc
or
and
adcl
jno
es
xor
or
add
sbb
pusha
cmp
popa
sub
sub
sbb
or
in
or
nop
adc
add
adc
ret
add
sysret
mov
pop
ret
gs
imul
push
test
mov
dec
arpl
push
aam
mov
pop
and
or
lods
rclb
dec
add
inc
mov
cmpl
xor
sti
mov
ret
rcrl
cmpsb
dec
jmp
or
stos
push
add
nop
sarb
mov
mov
mov
inc
jmp
aam
jae
xchg
call
jb
dec
clc
icebp
int3
inc
pop
and
test
push
les
aad
scas
xor
lea
push
pop
mov
rep
mov
push
push
scas
pop
xor
or
add
inc
cmp
push
or
lea
pop
pop
test
mov
pop
jg
push
xor
or
xor
sbb
cmpsb
rorl
inc
lock
test
jge
add
icebp
xchg
mov
jno
adc
pushl
sbb
hlt
pop
ret
push
mov
sub
ja
sub
inc
insl
cmc
adc
xor
lahf
jne
test
or
dec
movsb
inc
in
dec
xchg
popf
pop
in
inc
add
data16
lods
lods
push
mov
adcb
jg
outsl
push
cmp
ret
andps
xor
add
add
xorl
pop
or
pusha
std
popa
add
test
push
adc
mov
lock
rcr
hlt
add
je
or
ret
or
and
mov
clc
rcll
push
mov
imulb
cld
or
ret
mov
clc
loopne
mov
adc
rolb
inc
inc
and
jbe
sub
lea
in
pop
sub
push
cmp
js
test
sbb
inc
outsb
sub
and
aaa
in
lea
and
adc
sub
or
lret
jmp
mov
or
inc
mov
sub
or
clc
inc
orb
inc
pop
dec
and
int3
push
cld
push
xchg
in
xor
in
neg
sbb
inc
je
push
cmpsl
hlt
jp
inc
pop
inc
mov
enter
vmread
ret
cltd
push
int3
jmp
jo
xchg
sbb
sbb
sbb
jecxz
sbb
test
sub
shrl
fstpt
dec
and
push
fsubr
mov
jl
test
stos
imul
rol
xor
push
ljmp
mov
mov
or
add
js
mov
call
jle
dec
add
jmp
arpl
xor
push
aas
cmp
out
sbb
lods
in
in
shll
push
xor
cli
pop
dec
scas
ss
push
ja
push
ja
sub
xor
dec
or
repnz
movsb
xor
or
cmp
repnz
test
mov
sbb
xchg
xor
in
push
addr16
cmp
andl
sbb
jno
inc
add
xchg
or
mov
mov
js
inc
ret
xor
decl
shlb
mov
or
cmc
adc
xchg
adc
lods
fimuls
enter
pop
rcrb
jmp
rol
or
outsb
push
mov
xchg
lea
mov
or
lods
ja
cmp
adc
dec
mov
jnp
sub
jmp
fistl
cmpb
or
and
inc
sbb
mov
push
ja
sbb
xchg
iret
lcall
jo
popa
and
iret
inc
sbb
adc
push
mov
ret
push
addr16
or
je
or
fstpt
je
cmp
cmp
push
sub
pop
add
adc
cmp
push
divb
mov
dec
sub
sahf
ss
push
or
adc
xor
xchg
mov
xchg
push
inc
jno
pop
cmp
sub
repz
push
sub
les
in
rep
bound
fcmovne
rorl
adc
jmp
sub
jae
mov
lock
ds
and
fadds
andl
adc
jnp
and
jne
push
push
aas
fidivl
push
inc
stc
and
add
scas
mov
adc
dec
adc
cmp
outsb
push
data16
inc
sub
test
inc
mov
adc
bound
jge
test
subl
cmp
and
cmpsb
inc
test
xor
add
inc
xchg
es
stc
rorb
xor
popl
xor
sub
and
adc
andl
inc
add
shll
fdivrs
or
xchg
inc
sub
xchg
push
and
iret
clc
push
mov
inc
rolb
fdivp
leave
mov
mov
cmp
sete
insb
adc
xchg
lds
mov
jl
push
ja
popa
inc
mov
and
add
cld
sub
inc
ds
mov
mov
push
cs
cmp
mov
push
cld
xor
cmc
xor
or
push
lret
add
ret
pusha
jnp
pop
adc
push
shlb
xchg
adc
call
lea
adc
and
push
sbb
test
je
ds
call
insl
mov
hlt
push
aad
fistps
orb
adc
sub
and
xchg
insl
add
mov
cvtps2pi
jno
incl
adc
mov
mov
sbb
lods
and
cmp
cwtl
push
in
mov
adc
arpl
lock
lods
repz
add
xor
or
adc
data16
out
cwtl
xor
imul
and
sarb
dec
jne
inc
inc
popa
aas
push
loopne
mov
lods
cmp
mov
push
cltd
add
sarl
dec
movsb
dec
xchg
jo
jmp
jno
push
push
std
lock
xor
push
es
adc
testl
or
jl
orb
adc
cmp
stos
or
push
inc
stos
jno
icebp
subb
stos
sub
mov
push
sbb
fldenv
adc
popa
xchg
cmp
mov
sbb
fndisi(8087
scas
add
dec
mov
call
call
xchg
sub
pop
or
adc
mov
pop
mov
rolb
dec
mov
sbb
inc
mov
adc
cmp
mov
sti
rol
jge
rolb
or
es
push
push
xchg
jns
push
gs
xor
fiaddl
cmc
or
inc
adc
scas
jle
and
add
mov
or
pushf
push
daa
cmp
out
insb
jnp
and
insl
insl
push
adc
movsb
dec
add
cli
and
dec
pop
cmp
adcl
dec
xchg
add
rolb
pop
and
jecxz
mov
or
test
out
adc
push
clc
add
clc
jbe
inc
dec
out
loopne
jb
mov
jmp
cmp
fcmovb
lret
dec
inc
popf
pusha
mov
or
adc
add
sub
outsb
jle
pushf
pop
jb
inc
xchg
push
repz
mov
and
clc
or
jmp
pop
pop
and
enter
nop
jb
vprotb
push
test
add
lock
lea
mov
lock
pop
dec
sub
cmp
sbb
xchg
push
push
cmpl
push
pop
shlb
pop
sub
xchg
in
mov
and
cmp
cs
lea
call
notb
add
inc
pop
testb
push
sbb
pop
sbb
inc
inc
popf
lods
xor
or
sub
inc
pusha
inc
pop
jae
mov
dec
pop
rcrl
pop
sbb
cwtl
inc
inc
or
call
or
call
and
jb
and
xor
jecxz
test
push
jnp
lods
ljmp
arpl
dec
push
mov
jne
sub
lea
add
int
pop
cmp
adc
or
push
cmp
jb
pushl
ja
inc
adc
sbbb
pop
jmp
xor
jae
push
add
push
adc
add
sbb
sbb
inc
adc
mov
adc
mov
or
int3
lods
xchg
jl
inc
add
popa
jne
push
es
lea
test
jbe
jmp
pop
mov
add
ret
jl
out
shrl
stc
push
sbb
or
pop
out
adcl
adc
test
mov
inc
or
ret
pop
lock
pop
hlt
sub
in
inc
sub
push
test
out
scas
movsb
xchg
xor
sbb
inc
and
push
mov
leave
enter
aam
jp
js
sbb
dec
cmpsb
loopne
test
mov
inc
jb
sbb
inc
cmp
pmulhuw
adc
sbb
pop
leave
push
sbb
movsl
sti
sub
stc
adc
fsubs
pop
jmp
and
movsb
repnz
or
insl
cmp
push
and
daa
pop
fidivs
sbbl
loopne
arpl
adc
add
pop
fcmovnu
in
enter
dec
mov
lahf
sbb
cmp
inc
mov
push
mov
jmp
fwait
daa
dec
sar
jl
pop
ret
fmull
clc
add
or
pusha
lock
push
aas
pushw
outsb
inc
mov
jne
xor
xor
stc
push
leave
or
test
lods
push
lock
mov
bound
add
pop
inc
dec
enter
push
mov
int
xchg
hlt
rcrb
pop
push
mov
mov
ss
add
dec
mov
xchg
inc
mov
ret
enter
pop
mov
inc
aas
and
add
and
or
cmp
sub
add
in
dec
and
insb
es
cmp
add
movsb
in
cmp
daa
aam
sbb
cmpb
sub
test
subb
push
fcomps
jnp
cmp
scas
sbb
push
pop
push
cwtl
xchg
pop
cmp
and
mov
xor
or
xor
mov
mov
mov
inc
mov
lea
leave
fildl
ffree
cmp
sbb
xchg
cld
or
fbld
jge
andl
ja
push
and
adc
xor
sbb
adc
adc
rclb
mov
popa
fimull
adc
add
or
dec
ret
adc
inc
adc
xchg
xor
sub
sub
or
in
dec
cmp
add
adc
insl
and
push
adc
daa
adc
adc
mov
je
lcall
ja
ja
ja
push
jo
pop
mov
pop
pop
fiaddl
out
cmp
dec
sub
xor
mov
mov
mov
out
pusha
mov
aas
imul
inc
xchg
dec
pop
xor
mov
mov
imul
and
inc
mov
push
cmp
sbb
jbe
int3
add
data16
add
push
cwtl
into
js
ret
cmpl
add
cmp
fsubrl
cmp
fmull
sub
ficompl
ss
lock
cld
fcmovnb
adc
pop
pop
or
loopne
sub
add
mov
push
add
fbstp
aam
aaa
lods
in
xor
or
bnd
mov
aad
mulb
out
xorb
stos
jns
pop
rorb
or
sahf
push
int3
add
pop
sub
das
inc
push
jge
mulb
add
jae
jne
sbb
sbb
outsb
and
repz
in
test
or
in
inc
call
pop
push
cmp
dec
adc
xor
mov
dec
sub
adc
dec
insb
or
mov
push
popa
push
scas
loope
jge
push
jae,pn
outsb
mov
int3
mov
and
scas
shl
iret
int
jg
cmp
fwait
xchg
and
jmp
jo
in
adc
frstor
lock
add
mov
jecxz
xor
add
clc
aaa
jecxz
sbb
mov
push
push
dec
cmp
sti
jg
jbe
xor
pop
cmp
push
jo
xor
push
out
adc
shrl
ss
push
int
push
push
outsb
cwtl
adc
mov
sti
in
call
pmulhuw
add
loop
rorl
mov
push
sub
loope
mov
jmp
cmp
outsl
xchg
adc
dec
or
adc
adcl
fadds
test
mov
mov
sbb
sub
cmp
xor
pop
add
pop
or
flds
loopne
test
push
pop
adc
dec
gs
push
sub
or
pop
or
pop
inc
ljmp
dec
xchg
or
inc
enter
adc
or
mov
or
in
sub
imul
cwtl
jmp
mov
fwait
repnz
stc
xor
inc
fsubl
cwtl
mov
pop
hlt
push
popa
mov
push
lods
mov
aas
inc
hlt
inc
mov
and
ret
push
es
lods
push
jl
clc
xor
xchg
inc
fidivrs
adc
int3
or
stos
test
lock
fwait
mov
mov
xchg
mov
inc
lahf
or
dec
dec
pushf
dec
push
lock
jmp
gs
ss
push
ret
into
aaa
and
or
popf
data16
push
or
and
lock
mov
mov
repz
in
imul
mov
js
psllq
add
sti
incl
pop
rorb
add
jl
cmp
jle
cmp
push
and
or
pop
inc
cmp
aas
lods
mov
jmp
inc
inc
pop
cmp
cs
jge
mov
pop
and
cmp
jl
lock
enter
adc
pop
sbb
mov
rorb
iret
jae
lods
mov
push
cs
pop
incb
add
fcompl
and
xor
testl
orl
pop
fisubrl
test
mov
mov
ss
push
cs
test
dec
mov
jmp
add
incl
clc
sbb
inc
cld
outsl
mov
pushl
and
iret
cmp
jne
movl
hlt
inc
mov
and
mov
add
mov
sbb
adcl
cmpsb
jmp
sub
lock
jge
lea
mov
mov
xchg
jl
loopne
or
into
push
jne
mov
add
add
mov
mov
es
mov
add
ja
cmp
sahf
jle
ret
inc
movsb
or
dec
mov
adc
incl
mov
add
add
jle
cmp
add
xchg
dec
mov
fcomp
push
pop
push
je
and
pop
mov
mov
repz
shrl
fs
fistps
subb
call
pop
sub
enter
or
cld
jo
sbb
leave
fdivs
adc
or
mov
fidivl
aas
pop
xchg
jecxz
aad
popl
call
in
pop
or
ljmp
add
mov
mov
inc
arpl
outsb
stos
sub
or
xcrypt-cbc
cmpsl
aad
loopne
cmove
inc
sarb
and
mov
sar
test
push
and
sbb
lock
imul
push
push
pop
pop
pusha
lea
or
jp
mull
sbb
push
mov
fwait
jo
cmp
mov
cmc
mov
enter
mov
or
add
adc
mov
imul
je
adc
leave
add
jne
push
xchg
out
jle
push
xor
cli
sub
push
jns
xorb
and
addl
add
popa
push
jge
ret
add
pop
insl
je
fsts
gs
je
sub
and
sub
pop
or
loop
and
scas
pop
rclb
ret
addb
inc
add
pop
inc
jle
and
iret
xlat
add
cmp
and
inc
imul
jno
mov
cmp
sub
popa
sbb
xor
add
sub
cli
jne
add
lock
push
cmovb
movsb
ret
jmp
sub
nop
cmpsb
sbb
add
sar
orl
in
pop
xchg
add
loope
xor
ret
icebp
mov
jecxz
dec
pop
fucomi
jae
and
popa
sarl
sbb
fsubrl
push
icebp
ss
inc
jae
stos
mov
or
outsb
cwtl
dec
mov
push
stos
jnp
mov
cmc
pop
adc
test
jmp
adc
jl
sub
out
adc
inc
add
loopne
add
mov
push
adc
mov
fwait
xchg
xorb
inc
repz
test
xchg
push
sbb
test
xor
inc
aad
pop
gs
and
jns
arpl
sbb
cld
outsl
lret
imul
or
mov
aam
in
add
je
cmp
insl
popl
push
fstpl
clc
add
push
aas
inc
lea
mov
rol
xchg
lods
dec
and
mov
cmp
arpl
and
mov
add
je
push
jle
adc
mov
and
jne
push
dec
mov
in
dec
into
mov
pusha
movsb
or
push
in
mov
mov
sub
pop
loopne
ret
jae
xor
jp
pop
je
fwait
adc
mov
or
fs
std
jns
inc
insl
inc
mov
pop
mov
add
fdivs
xchg
test
cmp
mov
xchg
and
adc
push
loop
mov
or
pop
mov
loopne
imul
inc
pop
adc
movb
mov
mov
insb
sub
movsl
or
cmp
ficomps
jmp
jbe
fsub
add
sbb
pusha
mov
adc
mov
cmpb
fildll
pop
or
jle
enter
push
mov
add
push
or
pop
sub
sbb
mov
inc
sahf
sub
pop
ret
cmpl
adc
xchg
jb
xchg
fwait
or
ret
in
or
push
push
hlt
jg
mov
sub
add
or
push
nop
gs
jmp
xor
sbb
ret
orps
push
lcall
in
xor
add
repnz
jbe
cmc
push
loopne
mov
stc
sub
lea
or
daa
inc
xor
mov
lret
pop
ret
dec
xchg
sub
loope
ficoms
mov
mov
pop
sub
cmp
gs
or
mov
clc
int
sub
dec
adc
shrl
rolb
add
clc
aam
mov
cmpb
dec
jns
jb
sbb
lock
scas
sub
dec
adc
pop
add
or
aad
add
or
add
jne
add
mov
add
gs
lret
pop
mov
sbb
cwtl
dec
push
mov
jne
in
push
ja
mov
add
sarb
aas
pop
add
shrd
push
dec
adcb
pushf
out
shlb
and
dec
clc
ret
jmp
test
mov
mov
pop
test
xor
lods
pusha
movsb
mov
pop
mov
icebp
sub
outsb
lret
inc
mov
rorb
in
xlat
jmp
bound
ss
adc
lea
add
push
or
cmp
push
lret
ret
pop
xor
cmc
xchg
push
push
adc
faddl
xchg
sub
shr
jmp
in
int3
lea
imul
jne
lds
sbb
jae
test
jae
dec
popf
lea
call
sub
jae
cmc
xchg
fimuls
cmp
xor
and
loope
xor
jbe
inc
add
xor
popa
data16
js
jb
mov
adc
inc
pushf
pop
jle
adc
push
dec
and
push
shlb
out
sub
fcomp
add
repz
push
fldl
pop
adcb
jge
push
fstpl
dec
cld
ss
pop
iret
outsl
pop
mov
jne
adc
adc
jne
push
repz
cmp
divb
or
jne
or
add
repz
jne
or
jecxz
shrl
out
add
pop
andl
push
inc
pop
in
loop
cld
rcrb
addb
push
pop
es
xchg
mov
and
syscall
jnp
push
fsubl
jg
fwait
adc
mov
andl
xchg
mov
jnp
fstl
jecxz
loop
inc
clc
int
jbe
je
movsl
lea
movsl
mov
mov
jnp
ss
inc
cmp
sbb
enter
mov
push
lea
inc
and
mov
xor
add
cmp
popa
imul
pushl
jns
test
inc
inc
in
sub
push
or
imul
ficomps
mov
or
pminub
mov
push
in
cwtl
les
push
and
outsl
sbb
mov
lods
test
nop
dec
add
or
mov
or
stc
adc
cmp
bnd
jmp
dec
sub
outsb
dec
fsubl
or
push
pop
fcmovbe
in
cmp
sbb
push
inc
jge
mov
lahf
aad
dec
mov
stos
pop
push
pop
push
push
add
sub
add
mov
ret
enter
adc
ljmp
mov
sub
out
cmp
push
xchg
cmp
adc
or
and
pop
jo
cmp
pop
nop
cmp
mov
invd
push
push
sbb
es
sbb
fdivrs
ret
les
and
push
leave
cmp
mov
push
rolb
test
push
inc
push
or
push
popa
test
pop
push
adc
lret
lods
push
loope
test
mov
add
or
pop
push
fcoms
mov
jno
inc
xchg
xchg
mov
nop
mov
add
lcall
cmpl
shll
add
stos
enter
fcmovnbe
fmull
int3
adc
mov
pop
shlb
cwtl
mov
fmuls
mov
or
mov
inc
jo
loopne
inc
or
push
xor
sub
jne
lcall
mov
aaa
add
pushf
pushf
mov
push
ror
enter
pushf
sarb
mov
test
in
imul
xor
pop
pop
sub
aas
xor
fsubrs
stc
hlt
inc
mov
add
adc
shrb
rep
nop
jp
imul
mov
test
ret
jecxz,pn
mov
add
ret
fimuls
push
popf
cmp
cmpsl
jo
loopne
test
dec
sbb
sbb
fmul
mov
or
insb
adc
ret
fisttpll
mov
pop
adc
jle
mov
testb
insl
push
lea
lods
testl
int3
push
cs
data16
sbb
jbe
aaa
loopne
clc
leave
jp
call
jl
ds
addb
xor
fs
and
push
loopne
popf
and
push
call
dec
aam
popf
push
insl
adcl
or
add
push
or
or
fdivs
or
mov
mov
mov
push
frstor
daa
pop
sbb
push
sub
mov
mov
call
pop
lret
xchg
push
mov
mov
cs
or
push
test
or
mov
jb
dec
jb
cmp
mov
test
insb
add
push
stos
add
ret
fnstenv
in
sub
push
pop
dec
mov
push
pop
std
mov
test
adcl
call
rdpmc
inc
dec
movsl
stos
call
loopne
scas
pop
adc
movlps
adcl
fadds
cmp
shlb
dec
mov
and
jl
negb
arpl
mov
cmp
rcrb
mov
rclb
or
adc
sub
push
inc
lock
loope
mov
xlat
mov
push
int3
and
adc
add
lea
or
or
lret
popf
add
lcall
cmp
push
shrl
pop
mov
je
and
and
inc
jmp
cli
and
push
dec
jno
cld
jno
inc
jg
adc
pop
push
mov
out
popa
les
push
push
inc
rorb
jb
mov
mov
je
scas
add
pop
add
jno
sti
daa
fisubl
and
test
mov
jge
je
fwait
ret
imul
push
iret
pop
rolb
movsl
sub
add
push
shlb
movaps
and
ds
rolb
xor
push
ret
call
pusha
ret
lea
sbb
xchg
popa
mov
daa
adc
mov
das
daa
je
test
loop
fstl
jne
ss
cmp
pop
lds
scas
push
rorb
mov
push
mov
cmp
or
xchg
sbbb
inc
inc
dec
jo
pop
nop
je
in
loop
andb
or
inc
fwait
xchg
sbb
adc
pop
outsl
dec
adc
or
adc
add
sub
cmp
push
pop
mov
push
jg
xcrypt-ctr
cmpsl
push
pop
push
cmpsl
xchg
jle
push
add
cmc
add
stc
jl
xchg
xor
imul
mov
push
or
pop
mov
add
sbb
inc
repz
dec
pushf
lahf
sti
inc
out
sub
subl
fstl
sub
rcll
stos
adcb
and
add
sbbl
add
lahf
adc
lahf
dec
xor
or
movsl
fiaddl
arpl
arpl
inc
shlb
lahf
inc
mov
mov
jne
enter
push
test
dec
movsl
mov
leave
mov
jbe
in
lock
cmpl
and
inc
das
jne
out
pop
mov
xchg
cmp
xor
mov
rcrb
mov
stos
call
test
notl
mov
ja
xor
add
jno
sbb
mov
rcr
icebp
mov
test
shlb
mov
push
test
and
adc
pop
jp
and
cmp
dec
inc
test
sbb
lods
mov
pop
in
sbb
sbb
orl
xchg
outsl
stos
push
sbb
psraw
je
mov
sbb
pop
sbb
sub
arpl
cmpsl
insb
adc
xor
addr16
das
sbb
cmp
cmp
cs
mov
xlat
mov
xchg
dec
cmp
movb
xor
outsl
popa
and
adc
add
sarl
movsb
add
jl
lods
mov
in
jmp
aaa
pop
adc
aas
mov
test
mov
mov
cmp
dec
or
aaa
add
push
adc
inc
sti
adc
add
int
cmc
jge
shrl
xor
fisubl
lahf
mov
testl
push
add
adc
pushf
pushf
push
mov
or
and
mov
dec
aaa
sub
dec
push
inc
add
and
dec
sarl
sub
jno
pop
adc
sbb
rorl
push
add
insb
pusha
or
ds
xor
add
inc
adc
ret
sbb
mov
or
in
add
add
mov
and
jmp
gs
jb
lock
out
cwtl
dec
aam
and
loopne
push
and
or
lds
lods
push
inc
test
das
popf
sub
add
dec
and
jns
adc
lods
outsl
and
lcall
movsb
inc
sub
dec
mov
aad
adc
aad
sarl
push
inc
xchg
js
neg
pusha
subl
fldt
mov
push
xor
or
xor
xchg
dec
dec
insl
test
addb
mov
pcmpeqw
clc
jno
fimull
and
add
dec
pop
push
mov
cltd
xor
push
xchg
and
jne
icebp
jne
inc
loop
test
mov
dec
pusha
cmp
adc
scas
cs
pop
pop
cmpsb
push
test
dec
or
add
mov
jno
jb
jmp
jnp
dec
ja
test
dec
add
jge
jne
xchg
stos
cs
mov
xchg
mov
jne
push
add
nop
out
inc
mov
push
scas
in
or
mov
and
push
adc
loop
ss
lock
sub
ljmp
dec
loope
jle
or
pushl
popaw
leave
frstor
sub
rclb
iret
mov
or
push
repnz
fimuls
dec
imul
and
cs
xor
mov
pop
loopne
and
addl
add
cmp
pop
cltd
jp
lret
test
outsb
cmp
mov
stos
mov
dec
pop
dec
popl
push
nop
adc
cmp
push
add
pushf
sti
dec
push
jns
push
pushf
pop
pop
cwtl
cmp
xchg
xor
lods
or
cmpb
and
movsb
inc
jmp
xchg
arpl
outsl
or
iret
dec
inc
movsb
or
or
mov
push
adc
sub
push
xor
and
and
repz
orl
pop
hlt
mov
and
push
scas
push
stos
in
stos
jo
dec
mov
add
adc
mov
and
and
adc
sub
adc
add
xchg
pop
or
pop
lret
cmp
mov
pusha
or
ja
nop
in
shlb
fs
and
lahf
bound
sub
lock
mov
pusha
sub
and
pusha
mov
xor
inc
dec
or
pop
popf
push
lock
addr16
fldl
and
sub
and
and
mov
or
pop
jge
push
and
in
test
pop
sbb
insb
push
sub
shrb
into
sub
in
shll
and
push
popa
adc
call
icebp
mov
shrb
test
push
sti
lret
cmp
jbe
out
and
pop
sub
and
dec
add
xchg
sbb
ret
add
orb
dec
cmp
scas
dec
and
pushf
popf
inc
outsl
add
fisubs
or
push
pop
fdivl
sbb
int3
and
and
cmpsl
mov
je
push
inc
addl
or
or
pop
dec
adcl
aam
and
add
dec
test
push
mov
addr16
movsb
outsb
in
ss
and
push
jns
cmovbe
dec
movsb
ret
xor
xor
add
inc
loop
mov
or
mov
or
pusha
pushf
mov
inc
sbb
mov
push
sub
xchg
or
pusha
push
lea
push
adcl
xchg
out
lar
in
rolb
out
loopne
pop
inc
and
fdivs
push
das
popa
je
fs
aad
push
adcb
sbb
xchg
ljmp
rorb
mov
movsb
adc
or
cld
je
add
add
loopne
addl
xor
xchg
fsts
lock
or
incb
pop
or
sub
sub
int3
xor
adc
dec
adc
fdivs
int3
lret
into
sbb
or
jns
inc
fidivrs
inc
je
pop
pop
add
daa
addr16
cli
xchg
aam
pushf
mov
daa
xor
add
callw
push
jnp
xor
test
sbb
pop
mov
jne
add
out
mov
fisubrl
leave
jp
push
pop
call
mov
cmpsl
out
mov
mov
les
test
rorl
pop
sarb
xor
push
xchg
les
and
mov
pushf
jbe
mov
mov
jb
call
add
or
xchg
xor
add
pop
add
jne
cmp
popa
outsl
jmp
inc
cmp
jae
fs
xor
inc
ljmp
inc
mov
dec
inc
and
gs
fbld
mov
mov
fildl
ja
es
fdivs
pop
test
or
pop
fimuls
sub
outsb
imul
push
mov
jmp
imul
movsbl
add
inc
mov
mov
pop
sbb
xchg
mov
fs
test
cmp
je
js
lock
pop
or
addl
scas
cmp
jne
mov
inc
cmp
xor
out
inc
cmp
sahf
test
imul
mov
jmp
fnsave
outsl
mov
fldl
loopne
les
hlt
and
and
jp
enter
or
roll
inc
sbb
add
adc
int
xor
lahf
ficomps
fbstp
sbb
fsubrl
push
negb
mov
in
addl
add
mov
mov
add
fsubrp
lea
sbb
adc
and
add
and
mov
add
outsb
add
shrb
dec
add
push
rcrb
scas
add
fiadds
int3
cmp
je
add
xor
pop
scas
fldcw
aam
adc
adc
repz
push
sahf
add
ss
cld
adc
push
push
push
push
sbb
pushf
inc
cld
rclb
mov
jbe
decb
int3
jo
push
orb
iret
dec
sub
inc
lcall
aam
aaa
sub
movsl
outsb
gs
mov
xchg
fimull
fisubs
mov
in
lcall
jne
and
push
in
stos
and
pushw
lea
movl
clc
subl
push
mov
and
in
and
repnz
nop
out
mov
add
push
repz
sahf
pop
adc
sub
or
jns
enter
sub
nop
daa
adc
jns
jns
test
or
push
mov
add
jl
iret
xor
push
or
aaa
xchg
daa
stc
sub
stos
push
jne
sub
gs
pop
push
jecxz
mov
pop
sub
ret
xchg
stc
xor
jno
adc
xor
xchg
push
push
push
cld
nop
movsb
or
and
dec
sahf
push
enter
fsubs
fisttps
jns
lret
sub
dec
repnz
or
dec
pop
sbb
cmp
fimuls
pop
adc
pop
cmp
enter
push
push
vmwrite
push
mov
sbb
gs
sbb
mov
punpckhbw
mov
push
pop
repnz
push
xchg
cmp
mov
popf
adcb
pop
inc
and
xchg
sbb
push
nop
push
push
cwtl
add
xchg
js
or
add
mov
insl
nop
insb
test
lahf
out
sahf
out
rcl
hlt
iret
repz
add
dec
cmpl
mov
jns
iret
repz
or
sahf
out
dec
pop
outsl
sbbb
mov
aad
cmp
repz
or
pop
repnz
dec
dec
dec
std
inc
ret
add
das
and
cmp
rclb
mov
inc
data16
cmp
rclb
mov
insl
dec
stc
mov
or
add
mov
adc
or
in
adc
sbb
lds
push
push
adc
test
call
popa
lods
mov
jl
add
add
jo
pop
push
xchg
pop
push
push
data16
popa
add
dec
into
stc
pop
imul
enter
pop
and
sbb
fildl
addl
cmp
and
jge
mov
sbb
test
imul
push
sub
mov
mov
sbb
inc
jo
fisubs
int
jns
test
add
cwtl
loopne
scas
mov
push
mov
sub
add
rcll
and
out
popf
out
test
or
pop
movsb
push
add
mov
aad
add
pop
rcll
and
xor
mov
adc
or
aam
inc
mov
xchg
pop
leave
filds
mov
sbb
push
in
jns
dec
pop
and
pop
popa
int3
inc
xor
gs
fisubs
mov
hlt
mov
cmp
xchg
cmc
add
enter
xor
push
push
xor
das
sub
in
jo
add
adc
mov
ja
xor
and
add
xchg
lret
call
arpl
and
scas
or
adc
add
or
dec
mov
dec
sbb
add
xchg
push
push
enter
popf
mov
jle
push
or
enter
add
mov
stc
or
cmp
inc
adc
popa
xor
mov
out
into
add
xor
out
popa
adc
jb
les
dec
xorl
les
sbb
inc
sbbl
out
xor
adc
testl
and
in
inc
or
sbb
and
repnz
or
xor
adc
sub
shlb
popf
fdiv
sarb
add
fld
push
sub
push
push
cmp
mov
movsl
ret
leave
jae
add
in
sbbl
add
add
push
in
add
es
out
push
sub
adc
mov
dec
test
add
cmpsb
xchg
add
hlt
mov
adc
leave
or
arpl
rorl
sbb
and
or
es
adc
lock
cmpsb
push
sub
sub
add
into
pusha
inc
movsb
mov
jg
cmpsb
push
xchg
add
fs
mov
xchg
out
add
adc
in
jns
arpl
jbe
sub
mov
sub
nop
adc
adc
shl
addr16
add
arpl
icebp
and
xor
xor
add
add
add
push
add
adc
xor
pop
sub
mov
adc
add
or
outsb
cs
pop
adc
or
gs
notl
xor
or
mov
test
mov
inc
mov
test
add
add
mov
imul
sbb
inc
sub
test
or
xchg
cmpl
and
adc
stos
dec
and
mov
sbb
sub
adc
add
push
jge
lea
add
cmpsb
adc
imul
and
add
ss
sbb
jne
push
std
cmp
xchg
ret
jae
dec
lods
mov
in
inc
push
cltd
or
cltd
stos
cmc
or
inc
and
iret
lods
add
pop
fwait
add
or
adcb
push
push
jg
lods
mov
call
fisttpl
scas
sub
and
adc
test
dec
mov
mov
or
cmp
add
sub
in
or
xor
xor
mov
mov
xorl
test
stos
cmp
aas
mov
adc
push
push
inc
sahf
and
or
xor
ret
mov
adc
or
inc
push
ret
or
addb
sub
test
xor
push
lds
inc
and
sbb
incl
or
or
cmp
pop
mov
aaa
or
jecxz
sbb
sbb
cmpl
insl
and
dec
jbe
dec
push
aas
adc
or
pop
adcl
or
or
add
add
and
outsb
ret
and
iret
xor
test
lret
icebp
enter
inc
mov
std
mov
cmp
sbb
pop
mov
jb
push
cmp
mov
or
loope
mov
mov
adc
ret
test
out
or
or
aad
fldcw
xchg
adc
pusha
pop
stos
lods
fldt
ljmp
je
movsb
loopne
xor
cld
xor
fmuls
adc
and
or
or
dec
sub
xchg
push
imul
sbb
jo
push
rcr
inc
inc
cmc
jb
pop
adc
mov
ret
ds
aad
dec
adcb
andl
cmp
or
or
lret
pop
lock
arpl
dec
sbb
pop
sbb
jl
js,pt
inc
nop
outsb
xor
shrb
fs
push
pop
pop
mov
mov
or
sbb
ljmp
or
js
pop
sbb
ficoml
mov
sub
jne
fldl
insl
jmp
push
mov
mov
out
out
sahf
or
fildl
sbb
push
dec
sbb
bnd
add
aam
jo
xchg
pop
jp
add
aaa
adc
push
jl
push
sub
nop
sub
cwtl
out
test
fbld
push
inc
dec
push
push
dec
rorb
adc
adc
cmp
bound
mov
push
testl
xchg
negb
arpl
sarb
outsl
add
mov
es
pushf
xor
loopne
push
movsl
in
lret
dec
push
xsave
xor
cld
add
jae
add
adc
mov
mov
xor
add
add
hlt
js
mov
mov
in
insl
rcl
mov
or
jmp
add
test
adc
cmp
or
movsl
push
push
fwait
push
cmp
xor
pushf
sbb
add
rorb
lock
add
mov
hlt
and
pusha
dec
stos
clc
xchg
xor
and
movb
xchg
sub
add
lds
ret
mov
lret
mov
sub
mov
or
xor
xor
or
stc
mov
cmpsb
aas
mov
outsb
mov
xor
sub
cmp
mov
jl
xor
jmp
cmp
push
inc
jl
or
sbb
popa
jp
adc
clc
scas
cmp
cmp
je
mov
mov
push
add
inc
jmp
movb
mov
call
fs
pop
idiv
daa
shrl
lret
stos
mov
aaa
ret
cwtl
inc
loop
xchg
movsb
in
stos
push
or
sbb
imul
test
cs
dec
push
or
sbb
xchg
inc
fcomps
pop
mov
test
xor
jmp
orl
dec
or
xor
cmp
lock
hlt
cltd
nop
cmpsl
rolb
stc
sub
iret
cmp
sub
in
mov
dec
fdivl
ficomps
add
mov
out
push
cmp
push
gs
movsb
shll
inc
sub
dec
aam
mov
imul
fisttpll
popf
dec
test
rolb
test
lea
mov
pop
adc
xchg
or
rcr
push
inc
test
xlat
addr16
mov
dec
jp
push
test
test
add
or
mov
call
or
mov
test
cmpsb
cmp
mov
dec
movsl
jns
xchg
adc
mov
pushf
mov
inc
enter
cmovae
mov
push
lods
scas
cmpsb
movsb
push
adc
or
sbb
push
push
push
adc
push
cmp
pop
and
movsb
pop
test
adc
mov
cmp
lock
mov
gs
sarl
daa
push
jl
lea
add
jns
movsb
sbb
cs
enter
cmp
sbb
dec
cltd
or
fs
sbb
push
stc
xchg
pop
adc
call
fs
in
sbb
inc
mov
sbb
jns
adcl
push
jns
jns
cltd
pop
les
punpckhbw
repnz
xor
pop
rorl
and
and
aam
daa
jbe
and
inc
fisubl
mov
dec
sarb
aam
mov
sbb
mov
test
and
ss
int3
push
jno
dec
in
in
jmp
mov
shll
ss
pop
jo
arpl
daa
jns
push
sub
dec
ret
cmc
es
insl
sub
sub
jbe
cmp
dec
dec
es
test
fs
xchg
dec
mov
cltd
in
nop
pop
mov
inc
or
xchg
dec
outsb
adc
dec
inc
int
shld
cmp
pushf
xchg
mov
jl
int3
inc
cwtl
xor
in
mov
xchg
dec
aaa
jns
fcoms
or
sub
movsl
fwait
sub
sbb
xor
add
sbb
xor
cmpsl
sub
shl
lods
xor
jecxz
xchg
stos
or
and
jp
jecxz
sbb
mov
inc
sti
fsubrs
dec
outsb
inc
pop
push
shlb
inc
add
add
or
mov
or
sbb
push
movsb
fcompl
adc
xor
inc
movsb
fmull
add
lock
push
sarb
mov
add
in
mov
xor
rclb
popa
add
arpl
mov
mov
lock
inc
and
inc
cmp
js
scas
pushf
mov
xchg
and
test
mov
popf
push
add
add
add
jnp
jmp
or
fimuls
repnz
in
add
push
insl
rol
insb
sbb
sbb
jae
in
sub
insl
sbb
mov
push
stc
or
inc
lds
out
test
mov
mov
addb
adc
mov
pushf
mov
cmpxchg
mov
or
xchg
cld
imul
lahf
jp
jb
or
stos
hlt
and
movsb
cmpsb
daa
iret
jbe
and
rcrb
or
mov
decb
sbb
jo
sbb
in
loope
add
pop
and
push
rolb
nop
mov
and
xchg
fstl
add
add
cmp
neg
sub
ds
loopne
and
ss
movsb
nop
rolb
js
xor
or
mov
add
pop
sbb
and
xor
sub
and
xchg
sub
or
out
mov
add
test
push
test
xor
jmp
cmc
cmp
xchg
jne
dec
inc
push
add
js
pushf
xor
in
psubsw
pop
fisubrs
hlt
addl
or
sbb
and
nop
jecxz
mov
imul
mov
mov
xchg
mov
das
add
dec
shlb
insb
xorb
xchg
sarb
fucomi
cmp
mov
and
dec
pop
adc
loope
pop
cmp
xchg
arpl
add
pop
stc
push
loopne
pusha
loop
out
adc
iret
fsubrs
into
lcall
fcomps
lods
add
rclb
xchg
lods
stos
test
sbb
mov
stos
iret
mov
mov
sub
bound
cmpsb
clc
js
mov
std
decl
sbb
outsb
inc
aam
mov
cld
jb
push
xchg
lock
js
xor
push
pop
daa
imul
xor
mov
call
sbb
pop
incl
addr16
or
push
sbb
test
lret
jecxz
into
or
pop
sub
ret
mov
mov
sbb
xchg
pop
andb
inc
daa
and
pushf
or
mov
mov
rolb
adc
or
je
pminub
cmp
in
je
push
loopne
push
sbb
test
adc
or
adcb
push
sbb
es
add
sbb
mov
repnz
je
bndldx
mov
mov
cmp
iret
push
push
data16
aam
cmp
inc
sahf
loopne
xor
stos
push
mov
cmpsl
lock
sar
lcall
js
inc
repnz
rcll
xor
fsubs
add
cmp
or
pop
push
jnp
movsb
icebp
jmp
cs
xlat
orl
shrl
xor
adc
pusha
loope
and
divb
xchg
ret
mov
inc
xor
push
pushl
fsubl
push
adc
adc
sbb
ret
lea
xchg
call
mov
scas
ret
adc
lcall
pop
mov
scas
fcomp
or
cwtl
fs
fmulp
mov
orb
popl
add
mov
rcrb
add
fwait
xchg
jns
scas
or
je
or
test
leave
bound
or
xlat
push
loop
adc
sub
loop
mov
xor
les
jge
and
inc
cmp
add
cmpsb
sub
and
xchg
mov
push
or
loopne
xor
dec
sub
adcl
in
or
ret
cmc
jae
pop
sbb
push
xor
mov
push
xchg
fcomps
push
mov
pminub
mov
insl
daa
add
dec
jmp
pop
lahf
popf
fiadds
test
test
adc
cmp
shrb
gs
sub
xlat
push
cmp
scas
pop
mov
inc
cmp
xor
ljmp
in
es
dec
stc
jns
sbb
adc
cmp
sub
jbe
fcoml
adc
sbb
jp
cmc
dec
or
pop
leave
lods
jno
mov
adc
rcrl
je
cmp
mov
sub
pop
push
xor
add
push
mov
popf
notl
adc
test
cli
out
inc
pop
rolb
mov
xor
pop
sub
aas
je
jl
cmp
adc
sub
push
dec
rcll
sub
and
cmp
push
jb
in
sub
push
adc
sub
addr16
cltd
add
stc
lods
sbb
or
xor
inc
and
pushf
jae
sbb
fmull
adc
cmp
imul
cmp
mov
push
or
xor
cmpsb
push
and
test
or
enter
cltd
dec
mov
outsb
ret
add
push
fs
cmp
fldl
mov
loopne
out
or
repnz
lock
lahf
or
mov
ljmp
push
pop
xorb
call
repz
xchg
add
testb
and
mov
iret
ret
loopne
push
lods
jne
mov
call
pop
cltd
or
out
sbb
cwtl
or
loope
cmp
xchg
jno
jle
xchg
mov
inc
xor
pusha
sbb
sbb
or
dec
xchg
push
loopne
push
ds
cmp
push
or
xchg
sub
jl
insl
sub
sub
aad
std
rcl
shll
mov
mov
icebp
scas
push
popf
sbb
pop
cwtl
push
push
test
adc
adc
jnp
inc
stos
jno
aam
mov
addr16
pop
add
in
xchg
ret
push
inc
jb
xchg
push
cmp
stos
add
push
and
repnz
popf
int3
add
out
std
xchg
xlat
lods
mov
in
add
outsl
add
xchg
xor
inc
add
inc
int
test
or
and
pop
es
dec
jbe
push
push
inc
pop
push
in
in
loop,pn
pop
scas
push
or
mov
mov
and
add
addb
loope
sbb
xorl
jnp
subb
je
ret
mov
lret
es
jo
sub
test
sub
rcrb
loopne
dec
add
addr16
push
or
in
nop
xchg
inc
inc
mov
xor
xor
aas
inc
pop
sbb
or
pop
jp
dec
call
push
cwtl
jp
rorb
push
ljmp
push
mov
ret
pop
lret
test
adc
xchg
pop
ja
jne
mov
into
shr
push
add
push
cltd
jb
or
and
add
pop
pop
and
cmpb
scas
fistpll
add
pushl
rorb
cmp
add
inc
cmp
adc
ret
dec
clc
stos
ljmp
or
or
ljmp
sub
xor
orb
cmp
jae
mov
pusha
mov
cmp
pop
dec
loopne
mov
add
jmp
xchg
cld
lahf
jl
pop
mov
imul
push
sbb
jne
daa
out
sub
or
push
fsubrl
test
inc
sub
cmp
push
cmpsb
or
pop
pop
out
xor
xorl
or
pop
pop
push
mov
and
and
and
push
mov
iret
leave
loope
push
dec
push
icebp
jb
cmp
inc
int
adc
push
jne
xor
add
push
mov
in
jecxz
notb
pusha
pop
push
push
aas
fsubrl
xor
sbb
mov
push
xor
cmp
rclb
fwait
sub
or
push
dec
or
and
push
mov
fs
sub
jo
pusha
or
orl
jne
sub
xorl
xor
sbb
or
pop
or
inc
xchg
add
xor
into
xchg
cmc
or
jnp
scas
insl
int
psubusb
inc
pop
push
fists
xchg
nop
fwait
jns
mov
push
cmp
push
add
mov
add
fstl
mov
jge
push
and
addb
and
jne
fidivl
test
jo
add
test
loopne
inc
mov
lods
xchg
out
pusha
xor
dec
push
sub
xor
xchg
jne
add
sub
scas
jnp
aam
add
dec
ficomps
sub
repz
outsl
jns
pop
cs
rorb
cmp
lock
js
ja
sbb
or
shll
cmp
jbe
or
imul
bound
or
das
push
cmpsl
sbb
scas
cs
mov
mov
ss
cmp
lods
xor
pop
int
inc
popl
insl
dec
orl
lcall
push
out
cmpsl
subl
inc
or
imul
add
pop
add
mov
mov
aam
out
sub
or
jmp
push
sub
sbb
add
mov
add
or
iret
pop
jo
jmp
out
test
pop
clc
push
add
incl
mov
test
dec
cs
xorl
mov
lods
mov
cs
shrb
xor
cs
cmp
fidivrs
mov
out
sar
and
add
add
stos
es
adc
and
adc
iret
push
popf
inc
push
add
sbb
es
enter
sbb
vpacksswb
ja
in
mov
jns
aad
inc
das
popa
jns
xlat
inc
and
dec
mov
jns
addr16
and
xchg
pop
inc
mov
push
xor
mov
arpl
popa
aas
jl
xor
loopne
insb
icebp
mov
mov
or
lea
or
xor
bound
and
sub
and
in
dec
into
and
or
xor
loop
dec
push
dec
cltd
inc
and
fildl
or
sub
mov
sub
outsl
add
cmp
inc
cmpsb
bound
dec
pop
xor
sahf
ja
dec
out
jl
movsb
xor
adc
sub
mov
add
or
add
adc
mov
test
xor
psrlw
mov
out
or
outsb
mov
xchg
add
sub
pop
jmp
fwait
jo
shl
punpckhbw
jns
sahf
xor
jl
dec
es
shrl
pop
and
add
loope
sbb
adc
mov
or
sbb
shll
scas
fnstsw
push
inc
sbb
insb
ret
xor
sbb
in
push
out
and
lcall
jae
push
xchg
dec
inc
pop
nop
insb
pushf
pushw
ss
rcl
sub
js
cmp
mov
test
xor
dec
ret
testl
inc
xor
inc
enter
push
fsubrs
addr16
lds
add
and
mov
in
or
iret
push
rcll
outsl
or
pop
pop
loop
xchg
mov
and
test
inc
sbb
or
daa
fcoml
pusha
adc
loopne
sub
inc
mov
and
sub
fldl
add
add
push
addb
mov
fsubrl
and
sub
imul
or
leave
adc
and
adc
hlt
sub
push
in
or
movsl
pop
and
and
rcrl
xor
mov
imul
lea
or
mov
ja
aad
jmp
lds
jecxz
pop
sub
stos
aaa
xor
fadds
pop
xchg
push
adc
jb
jns
mov
shll
and
fsts
pusha
jb
repz
xor
jl
mov
shl
pop
lods
jle,pn
or
push
mov
sub
inc
repz
add
aam
je
filds
mov
push
arpl
pop
sub
mov
and
sub
aam
mov
lods
sbb
add
inc
shl
decb
pop
dec
popa
cmp
jecxz
ret
or
xor
and
adc
pop
sahf
sbb
addb
mov
in
sbb
push
add
sub
scas
cmpb
stos
aad
inc
addr16
add
or
cmc
add
dec
les
pusha
adc
addl
test
lea
mov
mov
inc
jmp
push
jo
xor
dec
clc
fiaddl
pop
dec
mov
or
je
dec
add
pop
sarb
adcl
xchg
push
push
popa
jne
pop
add
inc
ret
lret
adc
and
clc
fxch
outsb
push
loopne
andb
mov
cmpsl
cmp
inc
stc
push
loopne
out
dec
sub
jne
mov
dec
and
push
add
sbb
and
addb
jmp
icebp
xor
leave
push
mov
aaa
jno
lods
cld
add
mov
mov
jmp
das
popf
sbb
movsl
testl
fnsave
rolb
push
and
scas
divb
mov
ret
iret
jo
mov
mov
sbb
mov
incl
jmp
nop
push
xor
sbb
roll
dec
xchg
adc
jbe
test
inc
cmp
jg
mov
pop
pop
push
rorl
in
test
jne
movsb
shrb
ffreep
in
push
or
repnz
decl
pop
push
ds
xchg
xor
test
sbb
jmp
xchg
shlb
mov
movsl
test
sub
pop
cs
xor
cmp
inc
ret
andl
or
mov
pop
or
dec
imul
loope
inc
jno
mov
sar
loope
sbb
push
sub
xor
mov
movsb
loopne
leave
fs
adc
push
pop
mov
psubw
dec
aaa
ja
push
sbb
add
xor
jmp
sub
jmp
adc
rcll
dec
shlb
orl
mov
cmpl
jle
mov
push
push
hlt
popa
xchg
lock
bound
mov
in
cmp
jb
incl
xchg
cmp
pusha
lcall
sarb
inc
pop
sub
mov
dec
jl
jne
mov
jg
push
mov
xchg
pop
repz
inc
adc
dec
sbb
aam
mov
push
xchg
add
lock
jns
xor
scas
sbb
jmp
mov
into
and
add
or
add
mov
push
and
fwait
loopne
cmp
dec
or
sub
hlt
cmp
jo
pusha
mov
xchg
jo
pop
clc
or
subl
xchg
insb
das
insl
cmpb
push
add
dec
dec
sub
andl
and
mov
outsl
inc
ljmp
ds
sub
inc
fmuls
mov
ret
and
mov
pop
mov
lea
cli
dec
push
adc
and
inc
inc
sub
inc
inc
and
jno
das
adc
add
sbb
jae
inc
imul
xchg
dec
pop
call
inc
or
ret
lcall
fistpll
pop
xor
sub
or
repz
and
add
lods
jb
jnp
add
push
push
hlt
dec
pop
leave
jae
mov
dec
sbb
fsubl
dec
push
jb
cs
pop
inc
mov
mov
lret
cld
sbb
movsl
ds
into
shr
rolb
xor
push
mov
leave
lret
ret
int3
jge
lock
xchg
mov
or
outsl
mov
inc
cmpsl
xor
aam
or
outsl
push
adc
adc
add
rorb
pop
jecxz
xchg
sub
das
lods
cmp
jb
add
fnstcw
dec
jnp
cmp
or
dec
mov
rorb
sub
imul
or
or
push
or
cmp
sub
sbb
adc
les
test
dec
shlb
inc
jmp
pop
xor
and
pop
mov
mov
adc
out
into
adc
sub
in
mov
ret
add
cmpps
inc
movsb
in
add
jl
in
pop
sbb
stos
and
jo
out
stos
je
sbb
jae
inc
cmp
push
test
cs
mov
push
jbe
push
cs
and
add
popw
mov
dec
outsb
inc
sub
lcall
in
notl
adc
mov
add
loop
mov
sub
test
test
ret
xor
push
mov
int3
inc
lods
xchg
dec
jns
push
add
sbb
or
loopne
pushf
mov
and
push
dec
in
or
pop
arpl
popa
addb
inc
mov
daa
es
in
loopne
and
rcll
or
inc
jmp
push
mov
add
outsl
and
inc
int3
xchg
push
pushf
pop
sbb
xor
adc
pop
es
fwait
mov
ret
xor
push
push
add
adc
nop
and
sbb
cmp
pop
fdivr
adc
adc
enter
cmp
mov
lcall
push
in
fwait
mov
pop
mov
pusha
or
adc
and
hlt
push
sbb
push
adc
fistps
sbb
call
mov
inc
pushl
xor
adc
lds
inc
and
xor
pop
mov
sub
mov
cmp
inc
inc
lock
dec
popa
jl
mov
or
push
inc
loope
xor
jge
jl
adc
cmp
push
jns
out
aaa
add
sbb
or
jmp
xchg
xlat
mov
inc
les
xor
jns
popa
pop
jo
stos
and
push
or
out
jo
mov
push
jl
push
pop
jne
inc
lahf
xor
test
popa
scas
or
and
and
fstl
or
insb
or
mov
lcall
das
jmp
mov
insl
jge
sbbb
sbb
inc
inc
push
push
sub
dec
out
push
or
in
in
cmpsb
push
test
call
mov
out
loopne
fmull
scas
push
lahf
lret
addr16
push
or
lds
xor
loop
scas
cli
inc
imul
add
xchg
sbb
mov
xor
and
insb
xor
outsl
loope
insl
push
xor
ret
dec
pop
adcb
stos
mul
sub
clc
andl
mov
insb
outsl
loope
adc
xchg
pop
xchg
adc
xchg
adcb
mov
mov
mov
or
mov
mov
mov
sbb
jmp
mov
or
mov
sub
clc
pop
lea
ds
popf
out
lcall
test
add
enter
iret
jbe
mov
cmp
jbe
lea
mov
add
popf
mov
xchg
sarb
mov
cmp
rclb
jge
imul
add
dec
mov
push
mov
call
pop
mov
push
mov
cld
cmp
push
pop
sbb
ffreep
jne
push
aad
xchg
call
in
mov
mov
xlat
jo
and
sub
pop
ret
push
jle
scas
jmp
xor
cmp
jb
push
sub
popa
movsb
sbb
rorb
push
cmp
mov
mov
stos
adc
inc
sub
lock
sub
jbe
and
sub
pusha
adc
pop
mov
sub
sbb
shl
cmpb
insb
push
lcall
aas
call
push
push
and
mov
adc
or
rcrb
and
mov
cmp
enter
and
adc
insl
and
fdivl
mov
xchg
lea
je
pop
inc
push
loope
mov
inc
push
andb
sahf
jo
add
or
outsb
mov
sbb
adc
shl
and
aad
dec
dec
mov
sub
or
pop
inc
inc
adc
stos
jge
push
and
dec
dec
push
and
fnstenv
movlps
sbb
cmp
jo
mov
add
pushf
mov
push
mov
mov
aam
and
inc
cmp
mov
dec
leave
sbb
pusha
xor
and
lret
xchg
test
or
fildl
jmp
xorb
adc
jns
and
stos
cmpsl
mov
adc
pusha
outsb
sub
in
out
popa
arpl
test
cmpsl
mov
test
in
icebp
adc
inc
xchg
into
out
mov
xor
mov
add
pushf
and
je
cmp
jne
mov
push
mov
sbb
or
pop
lods
add
lea
and
pop
push
adc
sub
fdivl
xor
or
add
in
rorl
add
sbb
fstps
test
mov
in
jl
add
rclb
test
insl
and
and
loope
test
dec
mov
sbb
mov
cmp
mov
popf
popf
addr16
xor
and
mov
clc
aam
or
enter
clc
cmp
xor
sbbl
enter
push
lea
rolb
xchg
cmpl
add
and
sti
jecxz
mov
gs
dec
xchg
adc
imul
mov
mov
dec
push
adc
fwait
push
cmpsb
push
push
xor
daa
dec
jnp
mov
xor
shlb
cmpsl
lock
sbb
add
add
xor
addr16
or
and
or
adc
inc
lea
sar
push
fiadds
lret
lret
add
mov
mov
sbb
mov
jg
adc
or
add
sub
mov
adc
out
adc
pop
mov
cwtl
push
pushf
insb
add
filds
add
clc
xchg
jbe
cwtl
sbb
pop
jns
mov
stos
add
ret
in
mov
data16
call
aas
dec
adcl
mov
jmp
ss
push
and
mov
push
pusha
pop
add
add
pop
inc
push
test
or
out
in
or
mov
popa
and
adc
xorl
addr16
inc
sbb
add
sub
dec
add
jge
or
neg
pop
sbb
pop
inc
fsubl
push
pop
push
xchg
dec
int
inc
lcall
aam
jge
xor
fwait
cmp
sub
pushl
pop
mov
jnp
jecxz
adc
push
shll
aas
push
or
mov
adc
cld
add
gs
sbb
iret
sbb
nop
test
insl
in
push
adc
add
shlb
divl
fistl
jg
inc
fisubs
xor
pop
pushl
shlb
inc
inc
sub
or
jmp
add
or
jmp
je
lock
cmp
push
mov
push
fsts
fs
jle
add
mov
adc
jmp
xor
sbb
arpl
jge
sarb
push
adc
adc
rclb
in
xchg
push
ss
jg
cmp
jne
loopne
lea
or
cmovno
adc
jge
push
mov
jp
frstor
pop
push
mov
pmaxub
shrb
sub
shlb
xchg
cmp
cs
mov
lods
ret
sub
scas
loope
or
in
rol
out
xor
pushf
rcrb
push
push
out
in
pushf
push
cmp
or
sub
movsl
das
lock
xor
int3
push
scas
sarb
pop
hlt
mov
call
cs
clc
xlat
push
imul
add
incb
sub
or
inc
call
call
sahf
mov
xor
andb
loop
dec
sub
hlt
outsb
inc
inc
rorb
mov
loopne
jp
test
pop
lret
test
adc
push
mov
add
lcall
pop
rcl
or
mov
push
notl
fstl
lea
imull
mov
insb
sub
pusha
mov
outsl
mov
push
shrb
push
push
xchg
cld
bound
popf
das
loopne
mov
lret
imul
or
aam
mov
pop
ljmp
shll
mov
aam
push
loopne
mov
push
jge
sti
mov
ror
test
xchg
int3
mov
mov
call
loopne
and
add
dec
imul
sub
pop
cmp
js
xchg
enter
nop
push
outsl
jecxz
and
out
popa
push
and
loope
push
aad
cmpl
dec
add
sbb
fwait
or
xor
cli
mov
fimuls
mov
inc
mov
inc
stos
cmp
out
cmp
cmpsl
frstor
mov
fcomps
mov
fidivrl
or
or
push
dec
mov
jne
push
cmp
mov
or
std
mov
lret
subl
fcmovbe
sub
jnp
dec
in
sub
xchg
add
sbb
lret
fcoml
daa
in
add
xor
jge
add
push
enter
cmp
or
jo
out
push
fadd
test
push
loop
hlt
or
and
adc
cmpb
xchg
sbb
mov
aad
pop
jl
mov
xlat
sbb
sti
add
cmp
adc
sub
or
add
int
fimuls
cwtl
mov
jno
jo
movsl
movsw
push
cld
movsb
pop
ret
mov
inc
xor
std
sar
or
mov
shr
mov
inc
mov
adc
and
jle
movb
sub
lock
mov
push
xorb
loope
loope
test
cmpsb
cmp
mov
lock
ss
push
fbld
adc
and
push
cld
xor
in
je
push
push
xchg
and
inc
ljmp
mov
imulb
les
inc
cmpl
cmpsl
pop
pop
pop
shlb
dec
jae
arpl
addr16
inc
add
sub
sub
dec
inc
dec
inc
sub
sub
mov
xor
cmp
push
sbbb
push
cmp
xlat
sbb
sbb
fadds
push
loope
movsl
cmpsl
xor
xor
push
rcrb
cmp
or
dec
mov
mov
adc
or
push
add
lods
push
or
leave
lods
nop
add
arpl
dec
sbb
mov
mov
inc
inc
and
aam
sbb
sub
add
dec
dec
dec
dec
add
push
pop
mov
dec
dec
or
or
jnp
or
jbe
aaa
aaa
aaa
or
jno
jmp
push
jmp
por
aaa
aaa
aaa
adc
pop
adc
pop
adc
push
adc
dec
aaa
aaa
aaa
aaa
adc
dec
adc
aas
pop
jmp
aaa
aaa
aaa
aaa
sbb
xor
jmp
sbb
es
aaa
aaa
aaa
sbb
and
pop
pop
jmp
aaa
aaa
aaa
aaa
and
or
jmp
and
fistps
push
out
test
movsl
push
rcrb
sbb
lret
sbb
or
fcomip
mov
negb
cmp
repz
inc
dec
push
pop
fs
cmp
repz
jns
orl
xchg
xchg
pushf
mov
cmpsb
stos
mov
mov
cmp
leave
into
rcr
repz
repz
out
icebp
iret
mov
add
and
or
or
decl
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
test
cmp
sbbb
sbb
sbb
dec
clc
xor
scas
lret
orl
cmp
mov
pusha
cmp
push
sbb
xor
cmp
jle
mov
imul
fidivrl
pop
mov
js
xor
push
sub
das
out
jae
sub
mov
xchg
and
lea
jb
add
xchg
shll
or
test
jbe
sub
xor
jle
jle
aaa
mov
inc
cmp
jbe
decb
das
push
nop
cmp
dec
and
push
mov
jns
pop
mov
fiaddl
push
dec
or
sub
sbbb
xchg
add
inc
mov
lds
sbb
inc
pop
mov
pop
pop
mov
movsl
loope
in
test
push
lock
test
add
mov
inc
sahf
push
pop
add
lret
aaa
sbb
dec
imul
inc
and
pop
push
mov
push
and
xchg
and
push
inc
sahf
in
sbb
xchg
pop
or
sub
push
enter
add
and
lahf
add
push
inc
int3
mov
nop
push
xchg
cmp
lock
das
jne
add
inc
cld
mov
xchg
and
int3
subl
mov
fnstsw
mov
mov
add
cmp
or
add
mov
jmp
stos
pop
loop
pop
add
push
mov
lds
mov
fnop
and
cmp
mov
dec
adc
xchg
in
arpl
adc
mov
mov
ret
fmuls
jg
jmp
adc
push
push
xchg
mov
and
or
insb
loopne
cli
rcpps
loopne
and
shlb
adc
ficompl
mov
ss
sub
and
xlat
sbbl
jne
mov
movsb
fmull
jne
or
pop
loopne
or
shrl
inc
inc
loopne
sbb
jno
xchg
pop
nop
or
pop
scas
add
sbb
mov
jne
imul
aas
inc
sti
xchg
pusha
dec
stos
les
jb
mov
mov
or
insb
loopne
test
jnp,pn
and
out
xchg
cmp
sub
ret
or
mov
jno
or
sbb
stc
nop
mov
or
and
xor
lret
aaa
imul
cmp
mov
cmp
push
fmull
push
sub
and
imull
scas
or
sbb
mov
loope
pop
dec
ljmp
pop
jnp
bound
pop
int3
jnp
enter
sarb
sub
sub
jmp
scas
adc
fbstp
cmp
add
xchg
mov
je
push
mov
mov
pop
mov
pop
push
push
cmpsb
mov
dec
cwtl
inc
push
xor
popf
xchg
or
incb
pusha
add
jl
loopne
xchg
shlb
lock
mov
dec
stos
adc
inc
test
repz
imul
ds
mov
and
dec
aas
mov
xchg
xchg
adc
aaa
jne
loop
inc
daa
inc
cltd
push
dec
shl
push
ret
call
out
sbb
add
mov
std
mov
icebp
cmpsl
shl
enter
leave
hlt
popa
int3
sbb
in
rcrb
int3
enter
nop
test
add
dec
or
mov
xor
and
filds
push
cmpsb
add
xor
and
loopne
je
or
push
add
popa
imul
inc
loopne
scas
pusha
dec
cmp
jne
outsb
outsb
imul
sbb
add
inc
cltd
sub
int3
mov
inc
and
repnz
inc
cmp
je
std
gs
dec
jmp
xor
decb
loop
je
in
or
add
pop
pop
add
jne
addb
mov
sbb
push
negb
lock
orl
loopne
loopne
push
xor
in
sti
testl
enter
in
add
or
movsb
add
sti
ret
notl
es
fsts
cmpb
mov
stos
les
inc
stos
or
jp
pop
add
pusha
xchg
pop
push
cltd
push
or
call
pop
push
push
mov
cmp
mov
push
outsl
fbstp
adc
jp
push
fiaddl
xlat
flds
sub
rorl
pop
or
sbb
in
cmpsb
add
popf
inc
arpl
movsl
mov
mov
sub
lcall
add
movsb
inc
lods
pop
fdivs
mov
mov
push
in
pop
jle
mov
pushf
push
cmp
popf
pop
nop
sbb
mov
mov
cmpsl
or
push
xor
je
daa
xor
cwtl
imul
loope
faddl
xor
mov
pop
pop
popa
xchg
addb
push
or
xor
adc
or
testl
pusha
or
push
mov
cmp
in
mov
sbb
insb
fcmovu
adc
ja
daa
in
add
cmp
pusha
imul
cld
inc
fldcw
pop
add
inc
popa
xchg
rorl
jl
sub
pop
leave
dec
mov
sbbb
push
frstor
roll
or
cmp
addr16
dec
or
jb
pop
call
scas
mov
sbb
jns
lret
jmp
bound
add
cmp
cmp
fdivs
xchg
and
and
xor
fsubr
adc
test
jb
subl
pop
sbb
inc
in
mov
cmpsb
add
pop
add
jle
xchg
movsl
lods
out
jo
or
pop
jne
xchg
shr
mov
sub
inc
dec
pop
out
pop
mov
fisubl
add
inc
sbb
push
add
mov
dec
xor
cld
int
xchg
testl
in
dec
inc
divb
shr
sbb
lock
push
iret
or
pop
adc
sub
cmp
and
cmpb
xor
mov
cltd
jne
fdivs
push
cmp
shl
lret
imul
and
push
int
test
mov
push
scas
xchg
jl
pop
movsl
sbbb
dec
xor
add
mov
ss
lock
and
rorb
and
push
lods
push
mov
and
mov
xor
sbb
xchg
dec
js
ret
sbb
sbb
mov
mov
movsl
clc
shrb
or
add
icebp
xchg
mov
xor
pop
jecxz
add
xor
divl
std
pusha
or
or
sub
ret
cmp
jb
and
sbb
outsl
cmp
and
xor
sbb
jmp
mov
push
in
sbb
or
adc
shrb
rol
dec
adc
push
mov
add
dec
popa
imul
pop
push
fistps
hlt
in
addb
or
or
xchg
mov
xor
jns
pop
pop
les
cmp
cmp
xor
add
inc
dec
dec
rcrb
aas
push
push
push
pop
pop
pop
jg
pop
pusha
sbb
inc
push
lock
and
sbb
and
jmp
jg
out
pop
mov
es
test
cltd
mov
jmp
adc
fwait
int3
test
mov
xcrypt-ecb
cmpsl
mov
clc
lahf
or
cmpb
mov
and
add
lea
push
xlat
fsubl
icebp
mov
test
jne
insl
xchg
das
cltd
cmp
xchg
je
jl
in
mov
and
mov
incl
cmp
jl
sub
mov
jns
lea
add
outsb
dec
jp
lea
popf
idivb
popf
push
icebp
subl
jns
add
andb
fildll
sbb
daa
mov
lods
sub
inc
and
cld
jne
aas
xchg
lods
jne
sbb
push
pop
jl
jmp
out
push
loope
add
js
jp
sbb
mov
popf
clc
sti
cmp
je
or
jge
and
bound
mov
adc
inc
mov
rcrl
mov
test
bound
inc
rcl
imul
and
pop
das
sub
pop
xorb
mov
dec
roll
jl
outsb
sbb
push
fwait
cmpsb
loop
sub
imul
sub
or
push
jno
insl
call
xchg
push
ret
aaa
jmp
pusha
hlt
push
pop
cmp
sub
in
dec
add
jle
mov
jle
es
repnz
ljmp
neg
pop
pop
sbb
mov
decb
pop
jno
ss
adc
lods
jle
mov
jnp
les
xchg
pop
add
pop
pop
sub
add
es
pusha
xchg
add
mov
mov
cmp
je
cmp
jne
push
inc
pop
inc
enter
rclb
sub
test
and
sbb
push
add
divb
cmp
cmp
loopne
and
shrl
mov
in
mov
mov
loop
or
sub
fsubs
add
ret
mov
loope
cltd
ret
std
subl
ja
adc
lods
and
sbb
lods
imul
jo
xor
or
pop
bound
push
jns
cmp
cmpsb
push
cwtl
clc
jmp
call
in
push
sub
jp
cmpsb
sbb
fwait
push
push
jnp
mov
jae
dec
fadd
mov
ss
adc
popa
push
cmp
call
add
or
xor
mov
cmpsb
test
push
xor
pop
addb
sub
jne
push
or
icebp
cmpsl
clc
adc
add
mov
scas
and
daa
pop
mov
daa
mov
push
jo
sbb
mov
dec
int
jle
mov
dec
loopne
mov
add
fidivl
and
xchg
ss
push
push
imul
out
cmp
jo
call
jne
cmpsl
test
adc
xor
mov
sbbl
clc
or
mov
fiadds
or
andb
or
mov
inc
sub
sub
icebp
xchg
rorl
pop
and
cmp
imul
xor
cwtl
push
xchg
subb
mov
dec
add
push
and
push
or
add
inc
add
jmp
add
rcrl
and
aad
insb
inc
sbb
xchg
int
cmpsb
push
mov
jne
sub
lods
adc
in
mov
cmpsb
pop
mov
and
inc
pop
pop
cmp
xchg
lock
sub
inc
jmp
call
ret
outsb
mov
add
mov
add
popa
cltd
mov
sub
sbb
push
movsb
inc
and
and
jle
call
xchg
addr16
aaa
cmp
mov
movzbl
mov
imul
imul
sub
xchg
and
xor
dec
xorb
pop
aas
and
cmp
js
out
pop
and
es
inc
mov
pop
xlat
sub
adc
mov
inc
mov
or
and
push
in
icebp
jmp
dec
es
mov
push
dec
movsl
dec
adc
mov
popa
into
adc
lahf
jle
leave
rorb
aam
jae
insl
in
push
movsb
pop
je
add
cmp
add
ljmp
jmp
adc
lds
pop
icebp
shlb
ss
xchg
push
sarl
pop
cmpl
popf
pop
push
mov
test
ret
xchg
mulb
loope
sbb
jecxz
push
push
rol
pusha
cmp
in
pop
xorb
test
pop
mov
cmp
adc
add
aas
adc
dec
repnz
icebp
adc
or
dec
inc
mov
inc
xchg
mov
mov
cs
sbb
jno
dec
rorb
pop
xchg
je
adc
add
or
vpsllq
add
fldcw
out
xorb
aam
into
lods
xchg
mov
adc
or
mov
add
jne
fs
sahf
pop
xor
xchg
fisubrl
fwait
jae
push
clc
and
jge
push
adc
jl
lods
test
adc
jb
and
loopne
and
and
shrl
push
jns
cli
add
inc
push
push
ret
dec
sbb
mov
inc
and
adc
xor
sbb
sub
pop
cmp
or
repnz
and
adc
in
aas
push
add
xor
adc
xchg
imul
mov
mov
push
fnsave
loopne
add
mov
and
adc
fldz
fcomp
fnstsw
mov
add
cmp
ss
fsubr
pop
faddp
inc
dec
cmc
add
fstpl
insb
xorb
add
or
push
or
hlt
mov
inc
aam
xchg
add
sub
jo
push
xchg
mov
fs
push
cmp
clc
or
sub
push
add
mov
mov
popf
mov
pop
jp
or
inc
mov
cmp
add
or
mov
fistpl
mov
jmp
or
arpl
into
sar
outsl
inc
clc
inc
or
pop
or
push
and
loop
sbb
scas
mov
aaa
ret
inc
pusha
addr16
sbb
or
fldl
cltd
sub
mov
hlt
xchg
hlt
fs
lea
sbb
out
iret
mov
sarl
out
in
icebp
sarl
int
fimuls
enter
dec
repz
dec
xor
loopne
in
push
fiadds
stos
lahf
or
xchg
scas
add
cmp
or
or
rolb
mov
inc
jmp
test
cltd
pop
lcall
push
jne
sub
loopne
adc
xchg
pop
aaa
mov
inc
adc
jno
pop
mov
xor
push
test
pushw
jge
push
daa
sub
fs
push
push
push
testb
mov
pop
inc
loop
or
push
decl
imul
mov
sbb
dec
push
cwtl
mov
and
fildl
movsl
enter
push
or
sbb
rolb
dec
pop
loope
mov
orb
notb
rol
lcall
ljmp
in
and
ss
xchg
pop
dec
imul
mov
pushf
rcr
fdivr
pop
clc
add
or
aaa
add
test
and
or
pop
push
jns
test
repnz
mov
scas
cld
add
push
or
repnz
jb
adc
or
sahf
test
dec
or
inc
in
nop
xor
xchg
mov
cmpl
mov
add
negl
aas
mov
push
popf
jmp
jno
ret
popa
testb
pusha
push
mov
fs
push
mov
hlt
mov
icebp
sub
inc
push
add
aad
lock
in
notl
movb
test
mov
inc
mov
enter
sbb
lock
jo
shll
pusha
push
mov
ret
lret
push
fs
pop
es
adc
and
sti
imul
fdivr
dec
xchg
or
gs
inc
sub
es
scas
pop
psubsw
std
push
test
adc
adc
mov
or
cwtl
lods
adc
push
add
inc
out
in
nop
jae
cmp
adc
xor
fsubrl
shlb
jne
sbb
xchg
aaa
cmp
xor
loope
or
pop
xor
lret
pop
push
jmp
cmp
lret
or
test
faddl
push
in
mov
outsb
xor
dec
xchg
push
or
pop
inc
popf
sub
aam
add
or
add
fsubs
and
push
popa
add
xor
inc
inc
loope
out
xchg
movl
repz
or
or
cmp
jb
jns
in
ds
jae
push
into
ja
outsb
popa
lods
sbb
pop
jbe
push
dec
out
imul
pop
addl
ret
inc
inc
add
cmp
into
rclb
cmp
pop
jge
repz
pop
ljmp
or
adc
jnp
dec
jle
push
and
inc
mov
push
aaa
jbe
jo
imul
push
test
xor
sbb
cmp
ss
hlt
imulb
inc
cli
repz
pop
rclb
push
push
pop
jno
sbb
pop
insl
jno
pop
mov
sbb
push
sbbb
call
adc
test
inc
inc
hlt
daa
push
imul
loopne
inc
jb
push
add
pop
ret
arpl
movsb
repz
mov
push
mov
dec
push
xchg
test
sbb
pop
ret
dec
sbb
and
dec
pop
and
adc
sub
mov
js
call
sub
xchg
stos
add
lahf
fldlg2
xchg
aad
pusha
iret
and
mull
xchg
ljmp
cmp
pop
or
push
add
sub
gs
lock
adc
push
enter
fwait
mov
imul
adc
addl
mov
out
jo
insl
cmpb
xchg
pop
jmp
pushw
push
sbb
push
or
aam
lea
pop
mov
enter
cmp
scas
cs
and
addr16
insb
rcrl
lock
inc
sub
and
daa
mov
outsb
mov
out
sbb
push
movsb
xchg
jo
icebp
cwtl
mov
and
add
loopne
fmuls
sbb
xlat
lret
xchg
dec
add
in
add
push
jle
pop
sub
or
mov
lret
insb
inc
or
xlat
cs
sub
jb
in
call
push
xchg
pop
add
xor
or
and
pop
jo
and
ja
add
cld
xchg
pop
sub
jo
or
aam
cmp
mov
add
sbbl
sbb
dec
add
xchg
mov
push
inc
or
jmp
mov
daa
stc
ds
cs
jge
dec
sub
or
sub
inc
or
daa
popf
int
mov
cmp
and
ds
push
jge
add
add
add
push
dec
cmp
cmpsb
jo
cmpsb
jb
daa
push
push
insb
xchg
cmpsb
or
call
sub
add
mov
mov
in
sub
jne
push
test
loopne
push
jg
sbb
lcall
in
out
lea
sbb
mov
add
in
sbb
andb
movsl
sbb
xchg
ffreep
add
sbb
mov
push
imul
pop
pusha
mov
movsb
sub
loop
xor
jno
mov
dec
or
subb
push
adc
movsl
movsl
pusha
enter
adc
adc
sbbl
push
push
sub
pop
add
mov
dec
aam
pusha
leave
add
iret
xchg
push
xor
arpl
aam
xor
xor
push
enter
jne
jp
inc
cmpsl
fimuls
dec
rcrl
test
sbb
inc
jle
mov
mov
push
outsl
aam
jns
add
jae
adc
nop
add
jnp
rcrb
mov
inc
ss
enter
cmpsb
mov
push
sub
jo
xor
ret
mov
inc
loopne
xchg
cld
inc
or
xor
mov
imul
insl
call
loopne
mov
loopne
test
rcrl
bound
mov
shr
imul
test
push
fmull
add
xchg
fisttpll
les
out
push
scas
or
lea
scas
sub
xchg
dec
inc
mov
and
xor
adc
cmp
ljmp
lret
hlt
outsb
inc
pushf
fistl
es
das
lods
sub
test
test
mov
icebp
jl
divl
push
xchg
call
test
shrb
pusha
dec
dec
or
es
fisubrs
enter
or
lret
pop
add
pop
hlt
or
fnstcw
pop
or
rolb
rcrb
fdivrs
nop
or
or
sub
mov
pop
lock
in
jbe
nop
adc
dec
cmp
je
pop
push
daa
mov
or
clc
test
jbe
ficomps
test
rorl
adc
dec
or
stos
sarb
dec
adc
or
sbb
mov
out
jge
or
adc
sbb
out
fsubs
or
jo
sub
and
pop
pusha
mov
pusha
add
mov
fs
mov
lcall
dec
and
daa
inc
jo
adc
inc
push
add
jo
xchg
jo
arpl
je
xchg
js
std
dec
cmp
test
push
push
adc
int
call
sbbb
outsl
movsl
std
xchg
aam
shl
or
dec
or
cwtl
inc
sub
or
lock
add
cmc
pop
mov
sbb
pop
rorl
push
cmp
int
pop
xor
dec
pop
or
out
push
add
add
test
ret
dec
enter
sub
test
mov
shrl
jge
shrl
inc
pop
mov
lret
in
shlb
and
fs
cli
orb
mov
mov
cwtl
mov
jne
mov
mov
push
or
hlt
inc
push
inc
sub
dec
sub
push
pusha
fadds
mov
jp
imul
mov
mov
sqrtps
pop
gs
lea
or
aas
cmp
add
aam
push
and
mov
fdivrs
add
call
push
fneni(8087
jbe
popa
xchg
test
dec
push
push
loopne
push
je
or
xor
add
mov
and
inc
inc
je
xor
in
sub
pop
mov
xor
and
dec
add
xor
movsb
mov
push
push
fdivr
cmp
je
popf
mov
push
cmp
or
lods
je
lea
sub
push
cs
shlb
push
jl
pop
test
flds
sub
mov
push
mov
addb
sbb
adc
mov
xchg
inc
or
pop
aam
push
je
cs
cmpb
test
inc
add
add
jmp
lds
faddl
mov
mov
push
jl
mov
lods
pop
test
sub
pop
or
push
push
mov
or
mov
inc
and
test
ds
ret
cmp
mov
aas
mov
inc
xor
dec
or
dec
add
shrb
loope
sub
pop
ja
inc
cmp
mov
dec
adc
mov
jbe
out
sub
push
sub
arpl
or
dec
jb
pushf
scas
stos
xchg
dec
or
sbb
or
popa
sbb
movsb
dec
insb
movsb
imul
mov
sub
and
shlb
cmp
cmp
xor
das
std
xchg
in
push
je
or
je
cmpsb
and
arpl
sub
jne
mov
fstpl
or
sti
add
mov
andb
jmp
repnz
mov
ret
imul
adc
adc
bnd
add
lcall
inc
stos
pop
mov
jo
add
loop
out
mov
shrl
dec
rcrb
mov
sbb
lock
mov
inc
sbb
in
les
xor
aam
push
mov
pop
out
xor
mov
shll
dec
fldt
xorl
js
sbb
arpl
pop
leave
sbb
icebp
push
arpl
cmp
jnp
imul
add
add
xor
jmp
mov
push
or
push
and
dec
movsb
mov
push
xchg
pop
ljmp
loopne
loopne
mov
cmp
out
ja
and
sbb
mov
sub
mov
sub
jle
sbb
jno
pop
or
lret
or
dec
dec
cld
test
aam
mov
xchg
add
stos
sbb
mov
inc
cmpsl
rolb
cwtl
dec
pushf
aam
in
je
int3
pop
mov
push
ja
xor
mov
stos
rolb
jae
xchg
mov
dec
not
jmp
out
or
add
adc
mov
movsb
ja
or
pop
mov
loop
sbb
xor
movsl
dec
sti
ret
pop
testl
or
dec
rorb
rolb
lret
xor
ret
jg
jl
or
lret
inc
mov
jnp
jl,pn
push
sahf
xchg
fucomi
idivl
pop
jg
adc
xor
shrl
cmp
mov
aam
aam
dec
mov
ja
xchg
or
xor
adc
sub
mov
dec
inc
mov
cmp
sbb
pusha
cmp
jb
cmp
enter
outsb
pushf
arpl
clc
add
xchg
shl
jmp
push
sbb
adc
addl
inc
add
insl
add
test
inc
fbstp
mov
mov
jle
pop
fwait
or
sbb
insb
push
cltd
cwtl
ljmp
pop
int3
and
push
cmpsb
add
inc
dec
or
push
lret
inc
popa
enter
mov
mov
push
mov
jecxz
mov
push
es
icebp
addr16
fs
dec
ficoms
xorl
leave
xor
cs
pop
sbb
enter
and
sub
lock
rorl
or
mov
sbb
jp
faddl
push
f2xm1
or
inc
in
add
fs
nop
outsl
pop
sbb
loope
in
call
fsubrp
mov
push
push
xchg
fdivl
cs
jo
adc
jp
mov
movsl
jns
add
fwait
shrb
in
xchg
out
jo
or
pop
inc
mov
mov
jo
stos
add
or
sub
jnp
inc
mov
xchg
in
and
and
popa
loope
xor
dec
adc
das
cmp
cli
sub
jne
repnz
xchg
dec
dec
enter
add
sub
lods
loopne
outsl
mov
fdivrl
sub
mov
adc
call
loopne
add
and
add
imul
clc
mov
add
adcb
adc
lret
pop
nop
mov
test
and
addr16
stc
mov
pop
rsm
orb
test
sbb
repz
inc
js
hlt
mov
filds
cmp
popf
dec
jne
dec
mov
ret
sub
out
incb
push
mov
mov
movsb
inc
pop
mov
cld
dec
movsb
pop
call
add
sbb
pop
sub
or
iret
cmpsb
ficomps
or
inc
xor
nop
push
adc
rcll
pop
jo
outsb
xchg
cmp
adc
test
xor
dec
mov
pop
adc
inc
into
imul
sbb
xor
pop
mov
movsb
inc
or
sub
adc
adcl
jns
outsl
xor
mov
inc
bound
movsb
fstpt
or
rcll
mov
sub
cmovo
pop
hlt
mov
or
sbb
comiss
cmp
cltd
out
std
mov
cld
movsb
or
inc
shufps
lock
inc
adc
loopne
jl
inc
push
insl
push
hlt
mov
jg
mov
rolb
lods
push
or
push
add
mov
lea
cmpsl
in
scas
jecxz
mov
pop
adc
sbb
xor
xor
ret
das
ljmp
out
dec
sbb
mov
sarb
cmpb
xor
pop
jmp
push
or
leave
std
push
arpl
sub
jne
inc
inc
jmp
inc
fs
dec
pop
cmp
sbb
cmp
xor
add
ds
push
ja
xchg
sbb
test
jle
adc
out
repnz
xchg
fbstp
or
push
sub
lcall
pop
js
mov
je
mov
lcall
sbb
mov
inc
add
aam
in
jecxz
les
add
imul
push
add
or
loope
and
negb
pop
aam
pop
int
xchg
lock
mov
xchg
xchg
mov
xor
cs
test
outsl
xor
int
cmpsb
jbe
fcoms
xchg
test
adcb
into
adcb
pop
push
cmpsb
xchg
fdivrs
jne
jb
xchg
out
mov
je
scas
fdivl
adcb
add
stc
cwtl
into
push
movb
mov
inc
stos
mov
pop
les
pop
sbb
enter
mov
and
adc
add
test
dec
call
and
add
mov
push
shlb
cmp
push
je
sub
shlb
rolb
or
outsl
mov
jle
dec
mov
pop
ret
loope
or
sbb
xor
jmp
push
cmc
push
mov
rolb
pop
push
fdivl
sbb
push
push
mov
jo
adc
adc
add
stos
lods
nop
inc
nop
data16
or
hlt
mov
sbb
bound
pop
ret
out
push
mov
pop
andb
add
in
inc
into
in
cwtl
push
sbb
pop
aaa
add
iret
sub
dec
aad
add
cmp
xchg
xchg
xchg
jne
pop
nop
sbb
push
ret
jmp
in
mov
xchg
addl
cmp
jecxz
fiaddl
or
pop
adc
sub
and
mov
fisubs
mov
cmc
call
adc
hlt
gs
in
or
aas
insb
ret
lahf
xchg
pop
or
fiaddl
push
xlat
movsb
inc
cmp
je
cltd
test
sti
arpl
xchg
bnd
das
mov
add
dec
sub
xchg
nop
inc
gs
sub
push
dec
shll
add
dec
mov
lock
jp
mov
fldl
push
add
andb
pop
mov
ljmp
add
xchg
jb
xchg
or
notb
jbe
push
ljmp
adc
jle
cli
sub
jecxz
cmpsl
lea
je
mov
xor
push
and
call
mov
cmp
add
xor
pop
jl,pn
mov
xchg
ss
or
adc
pop
sub
xchg
add
psubd
scas
fst
xor
shr
xor
adc
jns
shlb
sahf
in
jp
not
jmp
jbe
mov
out
movsl
loopne
push
mov
shr
cmp
jbe
mov
aaa
jmp
jo
out
pop
mov
lods
les
lcall
ret
mov
dec
push
adc
mov
in
xor
scas
inc
daa
popa
rclb
mov
and
loop
aad
mov
mov
or
mov
push
push
adc
arpl
pushf
shrl
subb
movb
sahf
add
add
adc
xchg
jl
loope
icebp
or
jne
or
or
jb
cs
cs
lods
test
leave
pop
mov
or
int
mov
cs
add
push
mov
ljmp
xchg
les
es
add
sub
mov
push
aaa
dec
imul
aam
repz
cmc
adc
fdivrl
xchg
or
or
icebp
loopne
nop
decb
pop
lcall
or
xor
fs
push
adc
inc
ret
pop
adc
pop
pop
add
pop
sbb
loopne
test
pusha
dec
xchg
outsb
and
in
pop
sbb
xchg
cld
push
pop
xchg
sbb
je
jge
les
jp
cld
push
mov
cmp
cmp
jge
cmp
fdivs
sti
sub
or
xor
fucomi
inc
xchg
xor
sub
pop
add
add
inc
sti
push
mov
push
push
in
push
add
test
repz
fcomps
push
push
or
pop
in
hlt
ret
ret
sbb
lea
add
cmp
mov
mov
cmp
jmp
mov
add
push
cmp
inc
arpl
or
clc
add
jno
pop
and
dec
pusha
lea
nop
pop
lcall
inc
or
xchg
add
push
pop
es
loopnew
jo
cmp
inc
jg
mov
test
dec
or
xor
mov
or
dec
enter
or
mov
and
push
cmp
xchg
dec
cmp
pop
or
lods
in
inc
loope
ds
push
xchg
mov
mov
ss
mov
sub
pop
je
or
mov
les
cmp
push
push
xor
sbb
adc
mov
jbe
mov
or
nop
lods
cmp
cmp
enter
add
mov
lret
rclb
mov
ret
cmp
push
mov
mov
or
inc
and
mov
dec
aad
loope
and
pop
aam
inc
lret
movsl
je
jbe
xchg
loope
jnp
adc
pop
jne
mov
mov
shlb
loop
addr16
loope
cmp
jns
and
add
and
sahf
or
and
loope
or
inc
or
push
add
and
lods
mov
dec
pop
xchg
push
cwtl
lock
aaa
jbe
test
and
sub
adc
je
push
je
xchg
sbb
rorb
dec
and
ret
les
add
daa
mov
in
add
push
jbe
add
or
subb
mov
add
call
incl
xchg
test
shld
push
or
loopne
sbb
add
and
fimuls
xchg
orb
push
imul
pop
adc
dec
jmp
inc
fsubrs
adc
mov
test
or
and
mov
and
les
sahf
xchg
pop
les
inc
sbb
push
sti
jns
or
inc
andb
or
xor
call
mov
insl
or
in
cmp
lods
pop
sahf
ret
daa
ds
dec
xchg
push
cwtl
sub
adc
pop
pushf
cltd
dec
xchg
lret
stos
fiaddl
pop
push
jle
xor
fisubl
push
fisubs
addr16
push
js
stos
fldenv
test
in
pop
lods
dec
adc
sahf
xchg
mov
fcmovnb
ficoms
mov
inc
stos
ss
xchg
mov
mov
cmp
mov
add
mov
xchg
or
xchg
mov
movsb
xor
and
fcmove
int3
les
add
out
shlb
and
ret
push
jne
dec
lock
push
cmp
loop
xor
loope
xorl
jg
pshufw
cmp
jae
sahf
shrb
adc
inc
adc
or
sub
push
push
roll
imul
xchg
sub
adc
jns
xlat
push
and
jne
mov
xchg
or
adc
push
pop
in
fstl
in
add
mov
sarb
mov
and
add
loopne
dec
mov
push
push
popa
and
cmpsb
mov
push
add
jmp
or
mov
add
lahf
adc
add
inc
clc
mov
pop
xor
cltd
in
jbe
adc
mov
inc
hlt
aad
add
sub
outsl
adc
insl
cld
out
lcall
or
mov
dec
cmp
fcompl
cmp
fdiv
and
pop
int
pusha
mov
fsubs
nop
xor
jmp
movsb
xchg
shl
jmp
xor
push
mov
rclb
xchg
bound
test
jo
sahf
add
adc
adc
sbb
outsb
adc
gs
dec
rolb
mov
push
add
cmp
sbb
adcl
jno
loope
mov
test
js
or
adc
adc
addr16
push
in
dec
push
inc
ret
int
sub
je
xchg
mov
or
add
into
push
pop
ljmp
popa
cmp
test
in
inc
imul
xchg
inc
repnz
pop
xchg
outsl
addr16
je
jno
das
push
insb
pusha
push
pushl
js
mov
sub
cld
arpl
ja
or
je
or
and
movsw
je
add
pop
lret
pushf
jecxz
jb
aad
cltd
nop
cmpsl
icebp
jl
rorb
sbb
sub
sbb
push
push
ret
cmpsb
inc
mov
lea
aas
xor
and
movsb
fcomp
out
add
xchg
insb
cmp
jne
push
movsb
fsubr
inc
and
push
fstpl
xchg
lds
inc
xchg
xadd
loope
sbb
inc
or
sbb
sbb
xchg
inc
push
or
adc
and
frstor
loope
add
push
or
dec
adc
lret
imul
movsl
inc
add
inc
popa
inc
fs
lret
push
addr16
inc
int3
in
adc
jbe
aam
push
pop
dec
test
push
xchg
jecxz
xor
xor
pop
sbb
push
fmuls
and
inc
sbb
add
adc
pop
adc
and
cmp
push
push
test
push
fsubl
pop
pop
push
leave
inc
xchg
lret
xor
inc
std
jbe
cmp
repnz
es
push
add
push
incl
xchg
sub
sub
inc
lea
push
cmc
dec
dec
outsl
sub
push
add
lahf
adc
jo
xchg
sarl
test
dec
dec
mov
rorb
test
xor
shlb
sti
or
xor
or
inc
jge
xor
outsl
inc
outsl
in
jne
stc
mov
pusha
sub
popf
mov
in
leave
adc
fsubl
mov
push
or
aas
jmp
jp
add
push
leave
push
cs
int3
insl
imul
mov
decl
inc
sbb
loopne
jne
fbstp
out
jl
xchg
mov
in
test
insb
ret
test
subb
sbb
dec
mov
cmp
or
rorb
pop
and
and
subb
sarb
jecxz
add
push
nop
bound
mov
movsl
xchg
push
aas
adc
dec
inc
and
test
enter
dec
push
in
dec
movsb
push
cmp
mov
dec
jb
clc
mov
jnp
data16
xchg
imul
sub
and
jmp
pop
push
adc
gs
pop
fimull
jecxz
add
imul
imul
mov
inc
mov
pop
insl
sub
scas
inc
jle
sahf
jmp
and
insb
test
cmp
pop
mov
inc
inc
sub
and
xor
push
rclb
mov
add
jo
iret
dec
add
repnz
xchg
pushf
push
rcrb
add
cld
add
add
hlt
push
cmp
push
movb
mov
bound
push
shrb
gs
add
pop
inc
mov
sbb
mov
mov
and
xlat
xchg
push
mov
inc
dec
xchg
cltd
mov
cli
addr16
adc
scas
xor
scas
clc
aad
and
ficoml
mov
pop
or
lea
adc
lret
xchg
sbb
sub
outsb
outsl
push
mov
int
jne
mov
push
push
bound
insb
fidivrs
lret
outsl
lret
je
lcall
add
ja
push
addr16
pop
push
outsl
push
je
push
rclb
loop
xor
add
lcall
inc
push
sbb
or
mov
push
pop
sbbb
mov
and
iret
push
dec
inc
loop
mov
sub
daa
ret
sub
push
jl
push
in
orl
cmpsb
imul
or
push
and
rolb
cmc
je
push
push
movsb
xor
aad
mov
xchg
sbb
push
or
adc
and
sar
add
inc
mov
mov
mov
daa
dec
pop
push
and
fwait
push
and
es
lret
sahf
dec
add
sub
pop
mov
dec
dec
mov
ja
js
cmp
adc
cs
xlat
movsb
adc
bound
xor
push
push
jbe
push
push
stc
pusha
or
xchg
repnz
mov
xchg
xor
xchg
xor
xchg
xor
cwtl
dec
test
jle
je
bound
jae
push
xor
std
call
push
add
mov
in
add
jmp
push
adc
xor
push
pushf
fcmovnb
mov
mov
icebp
lret
pusha
jg
add
mov
rcl
mov
adc
sub
jne
insl
subb
sbb
dec
leave
aaa
mov
outsl
pop
jb
pop
inc
in
pusha
jne
push
nop
test
push
rcl
sbb
cmpsb
stos
xchg
adc
test
cwtl
adc
into
jp
sbb
mov
mov
lds
pop
into
pop
movsb
push
mov
aad
jmp
pop
push
add
testl
add
xchg
test
in
sbb
rolb
shrb
in
push
sub
xchg
cmc
jge
fiadds
mov
int
lock
mov
enter
test
push
mov
imul
stos
hlt
mov
cmc
ret
test
fwait
int
inc
test
cli
xchg
mov
imul
ja
push
cwtl
jb
mov
ror
ret
ss
movsl
and
xchg
nop
sub
mov
fisubs
and
or
dec
xor
mov
xlat
cmp
ja
add
or
cmp
push
inc
pop
cld
jg,pn
add
popa
sbb
jmp
subb
pop
mov
repz
fldt
jecxz
aam
or
sar
incl
xor
in
xor
pusha
mov
rol
mov
ror
call
shr
xor
sub
jnp
xor
shr
xor
add
ret
cli
add
add
loopne
out
cmp
pop
ds
or
jae
std
mov
not
and
xor
add
add
and
sub
jge
add
int
scas
push
push
cwtl
repnz
cli
fisubrs
jl
iret
add
xor
and
and
xchg
push
aam
inc
or
xor
push
fs
gs
repnz
repnz
dec
imul
sub
fmull
pop
or
ja
push
or
xlat
ret
rorb
testl
hlt
add
xor
fsubr
iret
and
xchg
rcl
call
mov
dec
xor
ljmp
rol
rol
out
add
pop
and
push
xor
fmul
movsb
test
in
dec
shll
aam
in
mov
sub
in
lahf
in
xorl
data16
inc
push
bound
pop
sub
lock
les
mov
pop
xlat
rclb
fadd
cs
imul
xor
cwtl
loopne
and
in
loopne
ror
loopne
xor
pop
cmp
aam
rorl
xchg
cmp
loopne
aam
push
xor
in
push
xor
and
and
cmpsl
jge
push
loopne
or
mov
mov
xor
push
test
inc
mov
inc
adc
or
or
cmp
inc
scas
shlb
add
adc
or
pusha
test
xor
push
xor
lds
lahf
adc
push
loop
mov
xchg
mov
cld
add
add
pop
jbe
std
push
and
fisubl
add
jo
testb
xlat
add
gs
fsubs
movsb
test
or
inc
call
cld
sbb
lret
inc
mov
sub
xchg
clc
inc
jo
lods
jo
cli
stos
adcb
aam
aaa
cmp
xor
xor
sub
mov
in
adc
out
rolb
inc
aaa
roll
xor
xor
movsb
test
rorb
cmpsb
imul
in
sbb
imul
add
push
and
dec
scas
dec
cs
in
dec
push
movsb
cltd
add
xor
adc
in
lock
es
lcall
adc
sahf
push
hlt
dec
jae
xor
inc
and
add
pop
clc
test
pop
sub
add
sahf
push
add
sub
rol
push
or
or
mov
and
pop
adc
xchg
movsl
mov
mov
or
mov
rolb
dec
sahf
mov
xchg
fs
adcl
in
add
fs
lcall
stc
cmc
clc
mov
pop
add
xchg
inc
mov
dec
test
shll
adc
adc
adc
dec
sbb
jo
adc
push
jae
test
add
pop
popa
pop
sbb
mov
jo
test
outsb
pushf
out
pop
add
sub
mov
inc
clc
and
add
lret
jb
lcall
incl
sub
lea
sub
cmc
push
adc
cli
decl
sub
sarb
cld
pop
and
rol
and
mov
dec
insl
insl
fstl
jne
mov
cmpsb
pop
push
jae
mov
sub
lds
xor
aas
lea
scas
add
js
lea
push
sub
mov
add
or
mov
dec
jne
pop
repnz
xor
aas
lock
jl
in
xchg
sub
mov
cmp
jbe
or
adcl
inc
aam
lea
sub
jae
push
pop
mov
xchg
sub
sub
stos
or
sbb
cmp
scas
or
mov
mov
outsl
pop
loopne
ror
mov
mov
xchg
or
xchg
ljmp
adc
mov
adc
add
lar
xor
xor
inc
jmp
xor
cmp
ja
cmp
call
aaa
popa
sbb
ret
push
shrl
fildl
push
add
inc
dec
adc
mov
pop
or
push
inc
lcall
cmp
fildll
sbb
add
int
test
xchg
movsb
or
xchg
je
mov
mov
imul
das
je
or
popf
add
andb
push
lock
jne
add
outsl
pushl
or
push
dec
inc
lea
inc
mov
lret
fiadds
dec
xor
push
movsb
jne
jmp
rolb
push
cld
xorb
data16
out
or
sbb
cli
andb
mov
and
test
cmp
fs
dec
inc
jo
insb
adc
or
or
mov
sub
sbb
or
mov
add
out
lahf
sahf
jg
lock
cli
mov
pop
lea
sbb
pop
xor
add
fxtract
and
jp
sbb
outsb
je
sbb
pop
sahf
rcrb
cmp
in
mov
mov
push
sbbb
aam
test
test
fildl
add
add
xchg
in
ja
add
inc
xchg
sub
add
or
fwait
push
add
push
mov
mov
adc
adcl
out
jne
mov
cmpsb
add
add
inc
inc
jg
insb
mov
inc
fildl
cltd
jb
jb
cmp
rol
shl
add
jmp
cwtl
aas
je
jae
les
inc
orl
sbb
xor
je
fs
jne
xchg
adc
dec
shlb
lock
test
sub
dec
or
add
test
pop
push
jae
mov
jmp
dec
shlb
fisubrl
mov
or
push
cld
push
or
call
je
push
pop
mov
sbb
stc
inc
jg
aaa
aaa
mov
or
jge
and
jle
es
insl
aaa
aaa
sub
sub
and
pop
cmp
jl
pop
jle
shrb
adc
inc
test
cld
pop
mov
jbe
jp
jb
jbe
mov
add
clc
pop
popa
test
fwait
and
or
je,pn
test
iret
jne
je
outsb
and
add
je
xor
xchg
sti
adc
sahf
or
push
add
lcall
shlb
dec
push
push
mov
inc
and
je
and
xor
cmp
push
jae
add
inc
es
sub
add
jmp
add
push
pop
mov
cmp
xchg
cwtl
mov
pop
mov
push
jle
mov
jp
rol
mov
cmpsl
movsl
addb
out
fcmovu
mov
push
fisttps
out
add
int3
inc
ret
and
adc
mov
push
jo
roll
dec
inc
insl
fists
inc
and
jp
fwait
push
inc
lea
push
faddl
daa
push
add
pop
jb
call
in
adc
pop
cmp
mov
stos
push
mov
loopne
sti
sti
repnz
mov
or
xchg
sbb
pop
fidivl
ja
fldenv
mov
dec
in
rclb
add
inc
arpl
in
sbb
dec
fadds
inc
and
push
shlb
xor
pop
insl
and
cmp
je
test
adc
mov
jmp
sti
mov
pusha
and
push
call
jae
mov
dec
insb
pop
sub
add
arpl
or
add
and
sarl
cltd
in
adc
pop
cmp
lea
lods
nop
pop
cmp
sarb
xchg
add
mov
test
inc
fimull
add
cmp
fmull
sbb
push
lock
xchg
add
mov
scas
push
or
xchg
mov
sahf
push
pushl
sarl
fdiv
and
popa
hlt
stc
inc
pop
pop
add
inc
xchg
xchg
or
adc
sbb
push
or
xor
adc
push
scas
add
movsl
imul
andl
sti
pusha
jb
cs
or
fisttps
out
fsubs
jbe
add
inc
fisttpl
rolb
xchg
xchg
push
cltd
imul
outsb
cwtl
outsb
shrb
cwtl
and
xchg
pushf
push
mov
push
pop
pushf
outsb
jmp
in
push
call
jbe
dec
in
jmp
xchg
jne
insb
in
mov
add
daa
cmpsl
addb
xchg
xchg
xor
cmp
pop
add
pop
movsl
fldl
ds
push
leave
pusha
jb
add
cltd
rorl
or
nop
and
or
leave
test
sbb
and
test
stos
iret
add
idivb
faddp
call
in
mov
pop
xor
adc
in
inc
ret
or
push
xor
flds
dec
cli
clc
mov
xor
xchg
testl
jne
dec
sarb
outsl
ljmp
and
and
inc
adc
push
jmp
adc
xchg
add
das
adc
pop
test
sbb
bound
fcoms
and
cmpl
dec
adc
sbb
je
xchg
inc
cmpl
push
jl
dec
mov
mov
push
fcomp
sbb
clc
or
cmp
je
mov
jg
mov
mov
inc
inc
inc
xchg
test
inc
scas
loope
jge
pop
and
aaa
sbb
addl
das
lods
lock
xchg
or
cwtl
add
xchg
add
sub
add
xor
jmp
int
jnp
sub
rorb
push
andl
fsubp
subl
mov
jne
jl
insb
xor
sub
jge
cmp
inc
inc
xchg
fmuls
jae
inc
mov
xorl
inc
mov
or
mov
cmp
push
ret
jne
les
aam
adc
jmp
cmp
mov
or
loopne
cmp
call
pop
dec
and
push
jmp
in
jns
test
movsb
push
adc
cltd
test
jge
cmp
xchg
or
orl
jo
and
jae
sub
mov
fs
dec
and
rclb
test
add
popa
arpl
enter
lahf
fsubl
iret
xchg
ret
or
push
push
sbb
cmp
je
aad
and
mov
xchg
pop
aaa
insl
add
or
clc
adc
or
jne
arpl
add
mov
dec
cs
test
and
imul
sub
xor
aas
xchg
lret
cmp
inc
mov
mov
mov
in
or
fsts
incb
and
sbb
push
xor
xchg
ficoml
xchg
adc
das
mov
lock
mov
dec
lcall
outsb
imul
in
cmpsb
sbb
and
ret
fwait
pop
pop
and
mov
or
rcr
stos
push
sub
in
mov
mov
xor
cmp
fdivl
fisttps
sbb
aas
add
mov
xor
into
lret
dec
mov
or
data16
testl
mov
repz
xchg
in
insl
mov
hlt
and
aam
push
push
in
push
imul
psubusb
les
jno
add
add
push
push
arpl
in
mov
cs
sahf
push
int3
adc
or
rolb
xor
xor
leave
xchg
and
movsb
or
add
adc
inc
add
orl
push
scas
dec
fdivrl
sahf
cmp
or
or
add
dec
sbb
popa
pop
ret
add
adcl
and
xchg
subb
and
ss
in
add
jne
cmp
les
pop
nop
ss
nop
mov
or
xchg
js
or
push
je
and
dec
xchg
push
movzwl
sub
adc
fstpt
sarb
sbb
jnp
ds
std
in
clc
jne
lret
xor
sub
xchg
jbe
mov
hlt
mov
rcll
xchg
mov
xchg
js
pop
inc
shll
pop
add
test
push
imul
les
sbb
les
push
inc
jnp
cmp
mov
jnp
xor
ret
xchg
xchg
mov
es
mov
add
loop
pop
xchg
push
xchg
cmp
out
xchg
ja
xlat
aam
orb
dec
loopne
pop
push
jnp
rorb
xlat
mov
movsb
xor
or
sbb
lds
imul
cmpsl
mov
das
push
test
push
push
loope
lock
or
fimull
enter
ja
int
pushf
out
or
cmp
inc
ss
or
sahf
in
ret
les
push
movsb
or
cmp
nop
mov
cmp
daa
andb
pop
and
adc
hlt
inc
adcl
and
imul
or
shlb
iret
add
loopne
sbbl
frstor
lods
in
xorl
imul
repnz
xchg
sub
adc
adc
pop
or
jno
lock
scas
dec
hlt
idivb
aaa
notb
aaa
jbe
push
and
in
xchg
mov
adc
sub
sbb
rcrb
xchg
sbb
cmp
lret
mov
mov
jae
adc
mov
adc
sbb
xor
mov
mov
dec
sbb
push
shll
cmp
and
pop
hlt
inc
lret
sti
sbb
mov
inc
imul
jecxz
popf
mov
mov
adc
inc
and
loopne
add
dec
lea
sahf
sbb
mov
push
les
shll
pusha
int
cltd
lret
inc
push
mov
es
pop
jge
mov
push
test
cmp
mov
test
pop
pop
lods
scas
or
adc
mov
and
inc
outsl
lock
in
dec
inc
fldt
adc
push
mov
or
dec
adc
pop
or
imull
and
adc
jnp
rolb
fisubl
xchg
dec
or
add
dec
add
or
jae
adc
rol
cmp
sbb
xor
adc
inc
les
fcomps
call
jp
or
ljmp
xchg
cs
sub
and
pop
dec
fldcw
adc
in
testb
dec
add
jbe
movsl
clc
or
add
and
call
mov
jno
rorl
add
sbb
sub
rol
lahf
test
scas
mov
mov
mov
jo
out
sbb
lods
mov
rcrl
enter
inc
cmp
sub
xchg
push
jo
cmp
mov
fiadds
adc
test
sub
incl
cmp
cmpsb
and
adc
mov
xchg
dec
fsubs
loop
pop
xchg
add
jle
es
sub
inc
or
push
ss
dec
and
ja
add
adc
repnz
inc
in
and
mulb
imul
xor
cmpl
movsl
mov
jl
xor
push
push
outsl
sahf
arpl
sbb
push
icebp
dec
mov
jns
in
pop
js
loope
adc
and
pop
xchg
test
cs
mov
push
movhlps
xor
outsb
xor
call
ret
adc
popa
cld
xor
push
mov
and
mov
add
inc
sub
or
fwait
test
lcall
inc
or
push
sarb
mov
pop
mov
cmp
dec
test
push
jle
and
jge
repz
fnstsw
pop
inc
push
test
enter
scas
imul
testb
and
test
aam
jne
orl
sbb
and
stos
test
pop
push
cwtl
inc
std
or
pushl
push
test
push
dec
push
inc
jmp
jge
pop
cmpl
in
sub
adc
test
pushl
in
pusha
push
xchg
stc
mov
pop
stos
and
add
sub
lahf
jle
sub
mov
decl
je
cmp
push
push
add
add
repnz
or
and
sbb
push
inc
adc
add
mov
in
into
xor
xor
sub
adc
xchg
aad
sub
sbb
notl
lock
stos
inc
rcll
add
jne
jae
jbe
lds
in
jmp
jbe
dec
xorl
add
adc
ret
jp
popa
movsl
lcall
push
add
insb
sbb
test
mov
lret
jbe
cmpl
pop
clc
repz
popa
and
sbb
repz
inc
movsb
jle
jae
orl
or
push
adc
mov
dec
push
imul
jnp
sub
je
pop
mov
pop
pop
jmp
or
dec
add
push
add
sub
cmp
js
push
mov
cmp
push
cmp
fs
cmp
lcall
and
bound
int
and
fisubrs
lahf
and
jmp
shlb
pop
mov
pop
leave
sbb
movb
ret
inc
ret
inc
or
dec
out
jbe
daa
dec
fdivrl
sbb
push
js
test
jae
push
xor
mov
xor
jb
jmp
and
loop
pop
ss
in
push
add
enter
or
xor
and
out
adc
mov
xor
in
icebp
outsb
popf
mov
mov
lahf
push
add
push
out
jecxz
fldl
mov
sub
sub
fwait
cmp
pop
jne
jle
jae
int3
adc
movsb
jne
bound
mov
cmp
jne
inc
pop
dec
push
lcall
das
xor
or
orb
mov
pop
dec
mov
or
scas
mov
shrb
js
adc
lret
mov
sbb
adc
push
add
sub
inc
data16
shr
sti
pop
and
sub
cmp
sarb
lret
jbe
sub
add
add
sahf
push
sub
adc
test
mov
pop
xlat
push
mov
fdiv
fcoml
imul
rcrb
inc
js
mov
or
mov
mov
dec
pusha
cmp
jl
xchg
lret
and
mov
pop
mov
nop
xor
ret
lea
jbe
clc
daa
push
push
push
xor
inc
add
xor
jp
pop
test
cmp
je
xor
push
call
clc
add
stc
jle
xor
sub
add
pop
push
add
repnz
or
in
inc
test
js
and
cmpsb
cmp
push
add
dec
loopne
je
or
mov
cmpsl
in
mov
mov
dec
bound
pop
andb
aam
pop
popf
or
sub
add
cld
add
imul
and
sub
sbb
xor
xor
inc
jne,pt
inc
xchg
pavgb
es
mov
jle
orl
ret
add
pop
mov
lret
cmp
ljmp
mov
sbb
mov
or
dec
inc
add
inc
out
jb
dec
mov
ja
cmpsl
or
dec
pop
cmp
mov
cltd
xchg
inc
cld
movsl
mov
add
or
inc
inc
lahf
and
sbb
fsubrl
loop
push
dec
enter
mov
cmp
and
scas
sub
jl
mov
lcall
popf
and
mov
cmp
add
stc
ja
and
sub
daa
jae
ss
jb
loopne
mov
lods
insl
ret
cmp
jle
not
into
mov
inc
push
or
dec
ret
push
loope
sub
cmpsb
dec
and
out
mov
add
dec
mov
add
and
inc
data16
notl
xor
dec
and
add
out
inc
lea
scas
rclb
jno
aas
or
pop
add
add
xor
and
fbld
and
lret
pop
out
arpl
xchg
loop
sarb
mov
sub
rolb
or
xor
lcall
xlat
jmp
sbb
mov
lcall
aam
add
aad
mov
xor
lret
int
sub
imul
or
adc
adc
dec
sbb
push
or
or
cmp
shr
mov
mov
out
and
mov
lahf
ja
jo
push
adc
out
or
mov
xchg
pop
cmp
jne
jbe
sbb
add
and
mov
cmp
test
mov
mov
mov
cltd
push
lods
mov
ficomps
or
test
push
mov
lods
nop
into
xchg
fnstenv
mov
addr16
xor
arpl
call
push
test
xor
mov
fcomi
xchg
pop
inc
xor
or
or
mov
jo
cmpsb
insb
fcomps
pop
and
loope
rolb
push
ljmp
pushf
rolb
sub
push
mov
xchg
pusha
orl
test
dec
je
and
or
jmp
repz
pop
rclb
testl
repz
mov
or
es
push
xchg
imul
mov
movsb
push
dec
popa
push
adc
mov
js
pop
jnp
orl
mov
cmp
into
or
pop
cmp
sbb
push
adc
mov
jnp
pop
xchg
cmpsb
enter
adc
add
sub
push
or
sbb
inc
push
inc
add
mov
push
push
sarl
and
sbb
sbb
hlt
cmp
jge
adc
mov
sub
adc
loope
in
enter
insl
loope
imul
cmpsb
inc
or
mov
leave
enter
sbb
xchg
lock
jmp
push
adc
add
add
xchg
gs
mov
pop
and
test
or
ljmp
ret
in
pop
call
cmp
inc
movb
pop
jno
inc
push
pop
jmp
popf
dec
les
push
addb
adc
dec
push
cmp
sub
movsb
and
lea
add
sbb
push
add
jecxz
clc
pop
pop
inc
add
xchg
add
push
push
add
adc
dec
inc
pop
pop
aam
scas
xchg
in
or
movsl
ja
in
lea
mov
loopne
sbb
das
adc
ds
lds
xchg
les
jle
jbe
push
xor
add
mov
or
jno
repnz
inc
mov
add
pushl
popa
adc
sub
add
aas
pop
test
dec
and
mov
jmp
in
insl
sub
stc
jl
in
or
adc
rolb
cmp
mov
hlt
inc
xchg
xor
or
and
nop
mov
cmp
and
int3
leave
push
daa
push
adc
pop
das
xchg
es
jge
inc
push
sbb
push
mov
mov
rep
mov
mov
in
push
mov
xchg
sbb
rcll
subb
cltd
lods
dec
jne
pop
ret
mov
add
or
ret
xor
jl
mov
fistpl
test
xor
imul
mov
add
push
test
adc
clc
xor
sti
scas
mov
jns
jmp
test
inc
adc
jmp
aaa
lret
aas
pop
rol
gs
stos
ss
jmp
imull
adc
mov
fnsave
pusha
jmp
mov
sbb
ja
jmp
ret
sarb
xchg
mov
cmpsb
sbbl
mov
inc
push
or
lcall
pop
cmpsl
int3
test
jb
leave
sbb
popa
aas
mov
ret
pop
mov
dec
xor
mov
jle
pmulhuw
mov
add
add
loop
xchg
add
add
cmpsb
pop
lea
mov
cmp
aas
jge
cltd
xor
test
test
stc
cmp
add
wrmsr
and
xchg
and
mov
xchg
lock
pop
push
aaa
lds
mov
add
out
mov
dec
cmp
mov
inc
pop
lods
stos
xlat
lea
js
mov
fnstcw
pop
pop
mov
int3
jnp
sub
xor
int3
push
leave
inc
inc
xlat
cmp
xor
imul
sub
add
inc
imul
xchg
movhlps
sub
pop
sahf
mov
insl
add
je
jl
ret
imul
xchg
iret
adc
cwtl
push
mov
cmpsl
test
in
inc
mov
jge
push
mov
movsl
inc
sub
dec
cmp
into
jno
xor
push
add
inc
mov
jp
sbb
out
adc
sub
xchg
mov
aad
pop
ret
push
cmp
pushf
movsb
in
or
sub
cmpsl
or
inc
mov
popa
add
mov
jle
pop
sbb
ret
xor
cwtl
push
in
inc
orl
out
inc
add
push
sub
mov
aas
adc
add
cmp
or
lods
adc
cmp
lret
add
jmp
xchg
jbe
pop
cmp
pop
push
icebp
push
je
mov
push
mov
outsb
mov
and
jl
cmp
adc
lahf
sub
fistl
jno
add
mov
in
add
mov
sbb
mov
push
jg
mov
cmp
je
dec
je
dec
jmp
dec
popa
in
lods
repnz
pop
cmp
mov
jl
cmpsl
rclb
push
and
add
daa
mov
and
dec
lea
jmp
cmpl
or
inc
pop
repz
jne
stos
push
jo
aam
cmp
mov
inc
filds
mov
xlat
int
cmpsb
mov
sbb
movsb
mov
adc
mov
cli
and
adc
adc
pop
inc
fs
xchg
stos
insw
sbb
push
repz
sub
adc
mov
xor
push
jo
inc
decl
aas
and
sbb
js
or
push
setge
xchg
or
ss
out
or
or
sub
jg
lret
mov
jl
push
jae
mov
add
cltd
add
sub
aam
sub
add
add
push
loope
adc
ss
cs
out
stos
mov
cmpsl
pop
add
jl
inc
inc
inc
sbb
or
fstps
or
sbb
add
sahf
repz
ljmp
addb
sub
push
inc
hlt
jge
push
xor
and
imul
or
xor
test
sbb
dec
bound
das
ss
jnp
cmp
cmp
je
mov
or
fs
inc
nop
popa
scas
fldpi
adc
je
sbb
lea
cltd
push
jbe
cld
ret
add
mov
push
insl
popf
sub
or
cwtl
sub
imul
cmp
sbb
jb
pop
pushf
in
test
es
cs
scas
xchg
cld
push
adc
cmp
push
inc
or
adc
push
das
fs
adc
cmp
mov
popa
adc
push
test
dec
mov
and
or
pmulhuw
mov
rorl
jg
add
ljmp
inc
and
dec
mov
xchg
xorl
or
jp
clc
jle
adc
lea
jns
add
add
push
and
nop
push
push
cmp
mov
sbb
testb
sbb
push
lret
or
mov
loop
jnp
cmp
adc
lds
data16
pop
insb
movsb
cmp
into
jbe
dec
dec
imul
dec
dec
clc
jne
mov
int
push
push
test
cmp
dec
xchg
out
or
sub
insl
mov
sub
dec
xchg
sbb
xchg
mov
hlt
xor
or
jns
adc
orb
lods
or
pop
fimull
dec
push
cmp
jae
mov
xchg
sbb
lret
pop
lock
sub
shll
fistl
cld
loopne
sub
jne
mov
ja
mov
inc
fldenv
repz
add
or
or
lock
add
push
cld
clc
pushl
and
jecxz
repz
mov
mov
rolb
adc
fwait
enter
xor
xchg
push
xchg
in
xor
inc
movl
cmp
push
mov
shlb
repnz
loopne,pt
hlt
repnz
jl
adc
lea
mov
pop
and
in
dec
adc
out
adc
sbb
dec
pop
inc
adc
pop
call
sbb
test
add
int3
adc
lods
fldenv
jmp
jne
cltd
jae
pop
ret
dec
insl
popf
adc
add
and
sub
jne
cmp
sti
add
adc
jge
xorl
ret
sub
jne
dec
mov
dec
push
daa
cmp
push
lods
fdivs
or
jmp
inc
jbe
dec
add
iret
mov
test
es
mov
pop
fmuls
adc
push
xor
pop
mov
xlat
daa
add
dec
cmp
mov
add
mov
mov
push
and
call
or
aam
fsub
es
test
js
fstpl
mov
pop
js
scas
inc
les
rorb
push
cmp
rcrb
mov
adc
add
and
lods
sbb
jecxz
jne
xchg
jns
pop
jge
loopne
cmp
clc
cmp
mov
push
push
int
mov
inc
add
sub
cmp
icebp
mov
cmp
cs
push
mov
movsl
fwait
mov
aad
add
aas
cmpb
xor
or
cmp
je
xor
hlt
pop
cmpsl
imull
mov
daa
ljmp
mov
cmp
jb
aas
dec
push
pop
or
pop
xchg
mov
cmp
adc
call
mov
mov
shrb
test
data16
test
test
cltd
rclb
and
jnp
dec
cmp
loop
enter
test
sarl
cmpb
or
jg
push
cmpsb
mov
add
jmp
inc
cmc
and
lea
arpl
mov
add
mov
mov
sub
or
fwait
push
mov
cmpb
xor
sbb
insb
aas
push
cmp
add
clc
mov
add
stos
in
and
sbb
adc
cmp
or
or
jae
add
les
cmc
test
mov
dec
push
jbe
jb
addr16
cli
dec
mov
das
sub
adc
cmpl
mov
outsb
cmp
cltd
shl
or
pop
cs
cmp
mov
or
jb
push
jae
dec
loopne
cli
ret
int
mov
lret
mov
jo
addl
xor
shlb
scas
fbstp
inc
jmp
mov
mov
jne
pop
stos
pop
je
push
add
icebp
mov
and
sub
outsb
xor
and
adc
int
std
sahf
mov
mov
mov
lock
mov
push
bound
adc
jl
sbbb
outsl
cwtl
loopne
sbbl
mov
dec
jns
ret
and
push
pushf
lret
lods
inc
sbb
sbb
repz
push
pushf
notb
cmc
xor
or
rorl
push
shr
push
sahf
pop
add
enter
cmpsl
xchg
loopne
push
into
mov
loop
fimuls
or
adc
cmp
mov
mov
test
jge
dec
sbb
cmp
xor
and
sub
pushf
mov
lods
jmp
out
in
jl
cmpsb
testl
jnp
sbb
std
adc
push
call
mov
inc
shll
pop
insl
xor
popa
movsb
sub
bound
mov
or
xor
clc
add
clc
jno
mov
mov
addl
popf
pusha
shll
repz
lds
in
sbb
or
into
jo
addl
sbb
mov
pop
arpl
and
cmp
dec
sbb
pop
pop
pushf
lahf
fnstsw
movl
add
popf
loopne
or
inc
pushf
aam
test
jne
jecxz
ret
fcompl
push
filds
jo
adc
inc
divb
xchg
in
xchg
and
mov
cmc
adc
mov
inc
sti
fiadds
pop
sbb
hlt
ret
jo
mov
sahf
repnz
sub
push
lret
insb
loope
lea
adc
xor
test
cltd
imul
push
rol
aad
push
push
mov
mov
add
pop
ret
or
inc
imul
or
clc
gs
dec
pop
mov
xchg
mov
roll
lret
push
dec
add
je
jo
nop
lea
jge
test
pop
iret
xchg
cmp
add
add
cltd
sub
inc
mov
jmp
lods
adc
insb
mov
or
inc
je
dec
dec
loopne
cld
push
mov
icebp
inc
mov
mov
lea
add
push
push
pop
mov
mov
nop
shr
inc
jp
xchg
cltd
ret
rcrb
or
jo
imul
ret
js
sti
mov
ss
clc
stos
ror
cmovg
mov
lea
mov
fmulp
cmp
jae
sub
xchg
mov
int
xor
pop
or
enter
ljmp
xchg
mov
jecxz
push
popa
test
add
cmp
and
fwait
sti
daa
sbb
inc
inc
mov
or
cmp
mov
int3
xchg
pop
je
popa
repz
decl
xchg
lock
jb
in
mov
xor
inc
ja
rol
sbb
xchg
sbb
sub
add
mov
push
add
ret
and
mov
rol
or
adc
cld
pop
sub
rol
mov
add
cmp
lea
adc
add
push
mov
sbb
add
xor
cmp
xor
test
fsubrs
push
aaa
lea
in
jp
jecxz
mov
jecxz
xchg
pop
mov
jp
push
mov
sbb
ret
lcall
popa
inc
cmpl
popa
adc
adc
dec
jae
ja
or
not
push
jp
data16
xchg
inc
sbb
or
mov
lea
add
or
mov
leave
or
or
and
push
and
jb
js
int
xchg
jmp
inc
or
push
adc
add
pop
fdivl
add
loope
jle
fcoml
jno
jo
dec
push
mov
rol
jae
fisttpll
or
js
outsb
cmc
ret
push
jae
lea
push
sub
xchg
and
sbb
incb
shll
adc
movsb
shll
add
nop
orb
or
nop
aaa
pop
or
mov
imul
call
imul
loope
incb
cmp
fnstenv
inc
jmp
add
scas
jmp
sti
sub
shr
and
arpl
lea
out
ret
mov
test
add
dec
ljmp
sub
clc
subl
movsl
in
and
sbb
fcoml
imul
pop
cmp
adcb
push
push
pop
test
sub
rolb
dec
and
and
pop
lret
adc
cld
jle
add
or
incl
add
aaa
stos
push
push
cmc
subb
push
lret
mov
sbb
add
pop
pop
ret
shrb
inc
inc
push
mov
sbb
push
add
pop
mov
dec
or
mov
mov
dec
rorb
or
inc
dec
addb
xchg
stos
ss
and
jo
cltd
xchg
je
mov
clc
mov
std
dec
or
add
cmpb
push
xlat
insl
fisubrl
mov
xor
sbb
or
mov
add
jb
inc
mov
ds
push
cli
adc
cmp
unpcklps
xor
orb
jne
scas
cmp
sub
push
inc
or
add
push
adc
bnd
das
sbb
mov
fsubs
or
add
jmp
mov
adc
imul
lea
cli
ja
cmpb
out
aas
ret
push
enter
push
mov
adc
rcl
testl
and
push
data16
add
mov
add
xor
popf
push
addr16
mov
imul
imul
jbe
ret
push
mov
ja
scas
or
inc
inc
xchg
fmul
aam
xorl
repnz
cmp
jb
xor
push
dec
jle
xor
fs
dec
daa
inc
rcrb
mov
mov
inc
clc
or
mov
mov
push
adc
jmp
cmp
jp
xchg
jmp
push
xor
movsb
sbb
pusha
mov
push
or
dec
push
dec
imul
enter
outsb
pop
mov
inc
and
ja
ffree
insb
stc
and
dec
and
sub
mov
cmp
insb
arpl
inc
sub
icebp
mov
pusha
xchg
jecxz
or
out
dec
inc
pop
push
pop
aaa
add
icebp
add
xor
mov
inc
jl
ss
add
mov
loopne
sbb
inc
sbb
cmp
push
xlat
bound
loopne
xor
sar
sub
mov
ljmp
enter
adc
lea
add
jbe
push
mov
xchg
adcl
push
mov
movl
add
rcl
mov
fdivrl
sbb
and
or
adc
xor
mov
sub
push
stos
sbb
mov
adc
orl
rcll
jbe
cmpl
pop
int
mov
loope
arpl
popa
scas
push
insb
test
inc
dec
xor
push
cmp
addr16
and
xchg
or
and
add
inc
inc
sub
rorb
push
inc
test
xor
adc
mov
adc
jo
xor
push
cmp
add
repnz
sub
rorb
dec
adc
inc
mov
sbb
shl
sbb
leave
icebp
jp
push
adc
loop
sbbb
ss
jne
or
test
pushl
iret
orb
xchg
cmc
sbb
mov
push
pushf
shll
adc
fstps
fcoms
into
adc
cmc
mov
adc
in
fwait
pop
lret
sbb
pop
cmp
gs
sbb
lds
mov
sbbl
fstps
xchg
loopne
push
fldl
xor
or
sub
adc
jno
movsb
cltd
push
adc
mov
mov
and
les
mov
sub
insl
js
jge
jo
shrl
or
pop
fimull
dec
orb
add
cwtl
add
pusha
testl
inc
mov
jle
jne
jge
jne
cmp
cmp
lods
mov
xchg
pop
or
icebp
push
and
push
rol
add
xchg
lock
sbb
sub
movsb
inc
and
xorb
dec
mov
hlt
outsb
and
jmp
cmpl
flds
fadds
and
test
add
lcall
fmull
jmp
scas
lret
jbe
and
repz
or
daa
or
sub
iret
imul
stos
push
or
push
lret
imul
and
roll
lret
inc
adc
dec
adc
adc
add
sbb
jne
push
dec
hlt
sbb
jmp
insl
fs
mov
dec
mov
leave
mov
inc
dec
add
loope
and
icebp
add
shll
cld
xor
cmp
pop
mov
mov
movb
shl
sbb
cmp
test
cmp
inc
cli
push
ret
jns
push
lahf
in
ficoms
nop
sub
movzbl
test
mov
inc
dec
mov
jne
scas
and
shlb
imul
aas
push
incb
rorl
sbb
adc
adc
ja
sarb
pop
add
dec
mov
add
imul
ljmp
cmp
or
jo
mov
out
sarl
jle
push
mov
pop
and
xchg
push
jo
jnp
push
inc
cmp
jl
pop
jmp
imul
or
sbb
jbe
aaa
ret
push
xor
push
and
or
inc
insb
ret
adc
dec
es
je
cmp
out
or
jle
fimull
jle
pop
imul
mov
cmc
xor
pop
ret
push
dec
icebp
cltd
js
imul
and
shl
arpl
fs
rclb
movsl
inc
movsb
das
add
and
nop
mov
and
push
fimuls
jmp
lock
sub
pop
fldt
and
rcll
ja
mov
cmp
sbb
cmp
ret
lea
stos
dec
test
fisubrs
movntps
das
adc
jp
std
mov
inc
pop
cmp
pop
adc
sbb
xor
mov
lock
or
sbb
add
or
mov
mov
shl
and
add
mov
enter
fdivp
stos
cmc
shl
add
loope
shl
xor
dec
icebp
ficomps
inc
add
mov
mov
dec
or
xor
mov
fidivrs
sar
jge
inc
movsb
pop
mov
jecxz
rcll
lea
add
jo
cmpsb
adc
or
sbb
dec
mov
xchg
cmc
or
movsl
cmp
cmp
mov
mov
lds
mov
and
enter
cmp
mov
daa
je
loopne
push
add
sar
or
mov
sbb
aas
cmpsl
cmp
lret
pop
int3
dec
adc
sbb
xor
movsb
push
lods
xor
xchg
pop
hlt
mov
cmp
or
sub
lock
and
ret
and
jbe
cmp
mov
mov
cmp
and
jo
xor
mov
lret
jle
int
xor
cmp
stos
loope
test
adc
sub
jbe
fbstp
mov
icebp
cmp
push
ljmp
mov
adc
lock
mov
push
cmpsb
mov
and
stos
pop
test
je
and
dec
in
pop
pop
add
orl
sub
add
dec
xor
nop
xchg
inc
xchg
sbbb
or
outsb
in
test
pushf
mov
fimuls
js
pop
xchg
arpl
orl
jbe
mov
and
pop
dec
and
jmp
mov
dec
sbbl
adc
lcall
les
xor
aaa
inc
adc
sub
sub
mov
mov
adc
adc
push
fisubrs
pop
xchg
rcrb
sbb
ss
aas
mov
push
js
roll
xor
call
add
int
xor
inc
aaa
cmp
add
pop
mov
jb
add
adc
xchg
sbb
pop
push
xor
or
dec
push
add
add
cmp
mov
pop
push
ret
gs
retw
out
es
jecxz
int
sub
pusha
cmp
out
or
test
jmp
sbb
push
sub
andl
jae
lcall
mov
dec
inc
pop
add
push
fimuls
xchg
xor
inc
sbb
imul
or
pop
movsb
popa
and
adc
lods
pop
xlat
pop
pop
ret
mov
sbb
mov
jmp
nop
lock
adc
push
and
push
or
sarl
int
sub
scas
imul
imul
inc
bound
repnz
jge
cmpsb
push
sub
insb
and
inc
push
and
push
push
adc
mov
mov
mov
pusha
push
jo
pop
or
enter
or
shl
sub
fisttpll
shll
sbb
push
aam
scas
test
stos
mov
sub
aam
mov
iret
fwait
inc
xchg
or
inc
or
xchg
jecxz
cmpsl
or
push
and
cltd
push
push
sub
and
test
aam
adc
mov
mov
ret
adc
adc
bound
mov
ss
subb
test
lods
adc
andb
mov
sbb
xor
add
mov
xchg
mov
pop
and
push
mov
daa
test
jne
push
dec
stc
jbe
sbb
mov
or
pop
dec
push
push
add
movb
cmpsl
mov
dec
mov
das
cwtl
pop
cmp
insl
icebp
ret
loopne
push
pop
icebp
cmpl
testb
jl
inc
add
sbb
push
ljmp
cmpb
repnz
push
rcll
loope
xchg
jmp
or
bound
fs
loopne
push
fdivl
adc
rcll
aad
pop
mov
adc
add
push
and
lods
test
es
adcb
inc
adc
icebp
outsl
jmp
cmpl
jne
sbb
or
mov
movsl
repz
leave
add
push
inc
add
push
and
dec
and
ss
push
mull
inc
repz
jo
mov
xchg
cmp
jle
mov
push
sarl
xor
movsb
jb
testb
cmp
in
mov
inc
or
jmp
pop
pop
cmp
sbb
test
aad
jo
push
or
insl
pop
cmpsl
add
mov
push
pop
ja
jno
jmp
or
add
pushf
add
pop
cwtl
pop
nop
mov
sub
adc
insb
mov
sbb
mov
or
mov
insb
xor
pop
dec
pop
sub
or
jo
xor
inc
push
dec
xor
jge
add
pop
aas
or
call
cmp
add
addl
mov
add
mov
dec
add
imul
hlt
pop
pop
outsb
insl
fnstenv
mov
pop
pop
mov
sti
insl
cld
cmpl
mov
into
mov
inc
push
cmp
movsb
and
shrb
std
mov
imul
je
mov
outsb
sub
aaa
sbb
divb
adc
adc
push
cmp
sub
add
sub
jge
negb
out
push
adc
add
add
fisttpll
sub
push
xor
or
push
xlat
mov
je
in
push
cmpsl
inc
std
pop
pop
and
sbb
xor
es
add
sub
cmp
loopne
jae
dec
and
ret
cmpl
ret
lcall
dec
adc
xor
push
mov
pusha
bound
jne
jg
add
or
dec
hlt
or
xor
push
in
xchg
dec
cmp
insl
and
loopne
jbe
movsb
and
das
jmp
push
fs
clc
jg
dec
addl
inc
hlt
push
push
mov
jp
test
sbb
or
andb
mov
jo
xchg
es
jno
iret
outsb
sbb
dec
push
push
insl
sarb
mov
out
and
testl
shll
sub
xlat
pop
mov
cmp
scas
rcrl
std
add
loopne
lock
push
rorl
sbb
mov
push
es
add
repnz
icebp
jb
or
inc
fiaddl
pop
cmpb
cld
inc
outsb
pop
leave
jmp
lea
push
sbb
jne
adc
sub
test
aam
fldt
jnp
data16
pop
fsts
mov
jmp
jl
test
add
sbb
jmp
hlt
arpl
pop
xor
call
ss
sbb
ucomiss
cmpsl
loopne
cmp
ror
out
std
cwtl
nop
inc
pop
sbb
adc
xor
push
fildl
fisubrl
incb
cmp
push
inc
icebp
pop
push
in
mov
xchg
jp
jne
cmp
out
cmpsb
test
push
sub
loope
add
jmp
adc
adc
push
mov
inc
sbbl
adc
les
jae
ss
roll
out
lods
sbb
xor
mov
and
test
adc
xor
pop
add
sbb
pushf
test
sub
cmp
pop
sbb
sbb
scas
incl
loop
add
cmp
ja
inc
cmpsb
push
sub
insl
subl
inc
inc
das
lock
jmp
ja
and
test
ret
cmp
fs
pop
xor
jge
les
push
fistpll
lea
add
and
lock
adc
sub
sahf
stos
or
pop
cmp
dec
insl
lret
pop
sub
jne
fsubl
loopne
jmp
fcoml
or
repnz
mov
add
ffreep
or
inc
ja
inc
xor
dec
push
cltd
cmp
push
xchg
inc
inc
clc
sbb
sub
je
imul
mov
push
jge
mov
xchg
popf
dec
leave
inc
sbb
xchg
sub
jbe
mov
test
pusha
dec
adc
cmp
sub
mov
sub
adc
in
jno
dec
sbb
mov
cmpl
push
ljmp
fadd
push
push
outsl
sbb
dec
enter
enter
pushf
xor
cltd
sbb
aad
push
fsubrs
dec
sbb
sarl
sbb
mov
adc
dec
sub
cmpsl
xchg
adcb
scas
jl
scas
inc
sbb
mov
lods
or
test
test
jge
jbe
jns
push
outsl
sbb
ss
sub
fcomps
push
subl
cmp
mov
in
or
cmp
lcall
cmp
in
pop
add
loop
int
mov
lods
pop
in
jle
jo
mov
int3
dec
dec
pop
dec
orl
ficompl
xchg
cmp
in
mov
xor
push
rcrb
mov
fdivrs
in
popf
testl
popa
jnp
xchg
push
popa
mov
inc
cmp
dec
sti
inc
inc
and
inc
adc
or
cmp
fdivrp
pop
ds
testl
fisttps
mov
add
ja
lds
push
adc
sarb
adc
enter
mov
les
jnp
test
pop
repnz
sar
pop
pusha
in
xor
loopne
pop
mov
addl
arpl
scas
jno
ret
ret
and
je
inc
and
and
push
loopne
pop
xor
pop
pop
and
mov
fisttpl
call
jb
add
sbb
pop
call
loope
push
or
lahf
loope
test
jp
popa
dec
jnp
sarb
xor
pushf
gs
cmp
lea
inc
push
out
jb
dec
and
jmp
cs
and
inc
pushf
mov
lods
scas
pop
or
lds
inc
mov
lea
mov
add
pop
aam
add
push
and
shrb
mov
mov
inc
and
sub
cld
mov
mov
sbb
nop
or
inc
inc
loope
sbb
jb
cmp
sub
mov
push
shll
pop
ds
add
or
xlat
mov
loope
ret
jp
rcrb
jge
sahf
aas
inc
xchg
je
imul
add
cld
cmp
push
das
aas
push
ret
mov
add
int
push
nop
ss
repnz
adc
xchg
sub
js
in
push
mov
es
push
rol
aaa
pop
jmp
dec
push
dec
mov
xor
popa
insb
sbb
mov
mov
xchg
sub
jne
sbb
out
iret
jne
je
jmp
or
push
dec
push
movsb
ret
jno
push
dec
out
int
adc
jns
adc
sbb
jae
xchg
mov
jg
mov
push
aad
xor
clc
add
loop
ljmp
xor
icebp
fdivrl
push
jnp
mov
inc
cmp
mov
inc
pushf
sub
dec
sbb
and
pushf
es
push
sbb
outsb
cmp
pop
pop
and
pop
mov
gs
popa
adcb
sarl
and
cmp
imull
fiadds
cwtl
push
adc
sti
push
inc
sub
sub
push
and
in
addl
aad
dec
push
rol
add
data16
arpl
inc
ds
sub
or
ss
jb
adcb
sub
pushf
push
scas
add
jge
aam
push
sbb
mov
push
loope
push
jmp
cmpsl
and
imul
out
daa
outsb
sbb
inc
jne
cmp
leave
sbb
cmpsb
xor
mov
cmp
pop
rol
or
cmp
jne
and
lds
xor
sbb
adc
push
inc
sub
adc
adc
sbb
dec
or
jbe
adc
mov
mov
lcall
ljmp
dec
bound
cld
push
push
mov
inc
mov
jle
rcrb
js
and
dec
add
jae
xor
jne
sub
jle
sahf
jge
int3
add
dec
xchg
inc
in
mov
pop
xchg
lock
and
stmxcsr
jbe
ljmp
punpcklwd
inc
cmp
add
and
clc
jg
mov
and
pusha
jmp
movq
ficomps
cld
movapd
push
clc
jae
xor
repz
or
xor
cli
rcl
lret
or
test
dec
mov
ljmp
repz
or
jg
int3
lods
mov
ret
adc
jnp
mov
test
add
adc
stos
rcr
push
add
adc
lea
ja
add
mov
mulb
pusha
addsd
xchg
sub
xchg
cmpsl
mov
adc
dec
sbb
mov
fucomp
jb
push
cmp
and
ja
loop
adc
dec
sbb
adc
sub
xor
push
addl
pop
incl
rcll
pop
ljmp
pop
xor
mov
push
push
ret
jge
mov
jg
push
loop
ret
jg
pop
push
movsb
leave
or
jne
into
add
rclb
shlb
inc
jbe
adc
enter
mov
lock
mov
sbb
fistps
or
bound
jnp
fwait
pop
call
movsb
je
push
fs
test
stos
nop
mov
out
push
daa
or
push
mov
push
xchg
lea
jp
rolb
jmp
mov
mov
cmp
jne
push
push
and
mov
add
mov
mov
cmp
sub
sbb
fwait
add
mov
and
push
lcall
mov
cmp
in
add
mov
sub
call
pop
mov
jne
push
mov
loopne
hlt
enter
cmpsb
inc
lock
pop
push
jmp
rclb
das
shl
mov
hlt
fcomi
arpl
fcomps
sub
lods
sbb
pop
xchg
sbb
insb
loopne
jae
inc
mov
mov
xor
clc
push
loop
dec
movsl
jge
xchg
inc
lahf
xor
xor
aas
mov
xor
ja
test
adc
inc
cmp
jne
inc
cmp
out
dec
xor
loop
das
push
shr
dec
adc
loope
inc
inc
xor
or
adc
adc
and
mov
das
jmp
pop
mov
inc
aas
or
cmpsb
dec
pop
inc
inc
cmp
xchg
fwait
in
add
or
xchg
sahf
out
add
sbb
cs
fwait
dec
adc
cmp
lret
add
popa
aam
adc
mov
xor
add
or
in
pop
mov
pop
mov
cs
and
cmc
or
pop
adc
cmp
cmp
addr16
xor
push
rcrb
add
enter
pop
jg
cmp
ret
test
shl
sar
fiadds
or
dec
leave
sbb
or
dec
fisttpl
rolb
cmp
mov
mov
shl
rol
inc
fmull
pushf
rcl
lret
jne
pop
jmp
push
sbb
sbb
dec
cmp
jmp
jnp
mov
mov
cwtl
inc
test
add
movl
je
add
jmp
pop
call
add
mov
popf
inc
or
add
je
imull
scas
add
lock
orl
sub
xchg
stos
hlt
icebp
and
out
daa
jo
and
lret
cmp
daa
iret
aad
dec
dec
push
and
test
out
repnz
mov
fiaddl
incl
add
jge
stos
xchg
push
add
rcrl
push
jo
test
lock
fmuls
or
cmp
addr16
push
mulb
and
pop
loopne
jne
idivb
in
or
or
push
adc
adc
jle
and
push
or
inc
inc
inc
lcall
orb
scas
push
cwtl
pop
lods
mov
add
shrb
pop
add
xchg
dec
pop
bound
inc
push
sbb
inc
in
popa
insb
xor
inc
xor
mov
lret
jbe
push
xor
pop
div
or
pop
test
jae
or
les
inc
imul
jl
adc
jmp
or
push
lock
popf
push
inc
push
loopne
sbb
adc
repz
mov
push
sbbb
add
push
lahf
frstor
add
xchg
faddp
mov
mov
pop
fcmovne
add
outsb
pushw
popf
mov
push
and
das
jle
push
mov
push
add
repnz
icebp
jl
add
xor
lock
lock
xor
jo
push
fucomi
pusha
jb
and
shll
movups
rorl
in
insl
dec
outsb
test
mov
push
notl
loopne
and
ret
push
or
xor
inc
xchg
mov
shlb
push
inc
push
test
inc
pop
pop
or
ficoml
scas
xchg
pop
and
jnp
sub
aam
push
cwtl
cs
mov
sbb
and
mov
mov
mov
imul
mov
pop
fs
js
jo
inc
xchg
fisubrs
push
cmp
jb
xor
scas
shr
sbb
ss
jp
imul
sub
xchg
mov
je
cmpsb
fsubrl
ds
bnd
mov
lahf
push
push
add
or
add
ss
mov
hlt
repz
sub
mov
sub
out
inc
push
cmp
dec
pop
sbb
jmp
mov
mov
cwtl
mov
push
pop
sbb
sbbl
push
jbe
movsl
mov
and
jnp
sub
imul
push
shr
outsl
fistpl
add
and
je
hlt
mov
fs
add
xchg
js
lods
mov
testb
inc
mov
adc
popa
adc
mov
loopne
lret
das
and
sbb
add
je
inc
scas
je
test
cli
pushf
push
aas
push
and
push
jmp
inc
cmc
mov
mov
push
and
xor
stos
lock
andl
dec
push
dec
cld
xor
jmp
inc
loope
mov
push
or
add
sub
adc
add
or
and
loopne
and
std
outsb
ret
pop
mov
push
divb
out
lea
or
inc
mov
xor
push
or
add
mov
jl
push
fmull
adc
js
pop
in
pop
imull
add
inc
jne
mov
ljmp
daa
mov
sbb
mov
je
push
jbe
lret
push
js
call
add
out
in
cmpsb
pop
loopne
pop
pop
xor
popf
add
cmp
and
pop
cmp
adc
adc
lea
cwtl
pop
aaa
sti
test
cltd
stos
dec
mov
or
cmpsl
test
push
fisubl
or
repz
pop
push
inc
sub
and
test
sbb
mov
sub
add
pop
fldl
jne
pop
cmc
movsl
mov
push
movsl
xor
xor
dec
or
or
push
push
xchg
jbe
bound
gs
inc
pushf
or
adc
icebp
dec
pop
fsubl
imul
fwait
rol
rcrb
dec
pop
rorb
pop
ljmp
sarb
adc
add
adc
pusha
mov
xor
and
xchg
xor
xor
xor
nop
inc
je
sub
bound
cmc
adc
pop
sbb
adc
imul
pop
add
add
add
daa
add
adc
sbb
add
jno
nop
out
js
lcall
repnz
sbb
iret
push
push
xchg
pop
push
jns
sbb
pop
jb
or
inc
sahf
dec
or
or
add
sbb
or
sbb
inc
sahf
or
pop
or
loop
or
lret
add
pop
or
or
add
jb
mov
push
pop
and
enter
push
shld
adc
cmp
pop
adc
fwait
sub
mov
in
adc
adc
adc
pop
push
and
add
adc
dec
in
ret
adc
fmulp
add
lcall
sbb
inc
js
push
push
nop
addr16
push
pop
pop
out
rcrb
sbb
sbb
and
sbb
inc
sahf
lret
add
add
sbb
cmp
cmp
sbb
sbb
cmpsb
repnz
jb
sbb
sahf
xlat
test
sbb
inc
pusha
push
push
add
push
inc
push
pop
pop
push
adc
add
add
sub
cmp
push
sti
pop
shl
jl
add
cmp
xchg
pop
and
incb
inc
cmp
add
mov
sub
pop
sti
cmp
je
lcall
rol
lea
adc
aad
cmp
add
jns
mov
jns
fwait
out
push
cmpsb
pusha
pusha
and
add
insl
and
call
adc
fidivrs
cwtl
jmp
add
sbb
ljmp
sbb
out
in
jns
push
imul
inc
push
nop
ja
inc
in
sahf
out
pusha
in
jns
jge
xor
and
sbb
pop
lock
xor
icebp
iret
enter
pslld
repnz
push
and
std
repz
dec
in
leave
std
hlt
hlt
rorl
hlt
fwait
mov
div
inc
jg
idivb
cmp
idivl
nop
cmpsb
repnz
std
clc
clc
jns
pop
insb
clc
cltd
adc
inc
stc
nop
out
add
cld
cli
cli
inc
push
inc
push
iret
sti
sbb
sbb
cld
cld
je
cld
push
or
mov
xor
std
sbb
decb
mov
jmp
push
pop
pop
push
inc
or
fidivrl
xchg
xor
push
lahf
in
push
dec
mov
cmpsb
jb
es
jecxz
cmpb
in
mov
jb
icebp
inc
mov
stc
daa
xchg
sti
pusha
adcl
sbb
out
cmp
sbb
outsb
call
sub
xchg
sub
sbb
pop
jmp
jmp
adc
in
in
add
mov
mov
cmpsb
jb
sbb
pop
and
insb
out
cltd
push
lock
cli
push
cli
lcall
repz
push
mov
repz
sar
in
mov
adc
xchg
stc
fstpl
sarb
fwait
jns
xor
adc
bound
and
clc
cmp
lret
sti
sti
cltd
inc
fmulp
add
fistl
pusha
mov
mov
xchg
sar
cli
dec
dec
and
sub
xchg
sar
sub
pusha
loop
loop
fucom
adc
in
mul
pop
shl
mov
mov
mov
sbb
out
adc
enter
pop
pusha
leave
mov
inc
mull
notl
sti
imul
ljmp
negb
pop
leave
and
lret
adc
sbb
inc
pop
pop
jno
negb
mov
notb
xacquire
mov
dec
push
jno
pop
xchg
cmc
xchg
pop
dec
cmc
out
imul
fwait
sbb
pop
add
add
cltd
inc
clc
clc
jecxz
lret
scas
stc
popa
cmp
pop
lcall
mov
hlt
inc
add
pop
push
hlt
sbb
cmp
push
data16
hlt
test
push
jo
sti
mov
pusha
adc
jae
sbb
add
loope
lret
add
loope
repz
xchg
pop
leave
and
in
ret
test
lret
and
sub
inc
repz
xchg
inc
pop
andl
push
lret
and
fcompl
jmp
pop
daa
xchg
repnz
repnz
rcll
pop
lcall
daa
xchg
repnz
and
adc
xchg
icebp
sbb
dec
inc
icebp
js
divb
adc
add
mov
mov
cmp
sub
cmc
cmc
cmc
leave
mov
adc
jecxz
sub
jne
ffree
lock
sbb
xchg
sbb
cmc
jne
xchg
mov
xorl
imul
sbb
sbb
lret
adc
jle
dec
mov
cmpsb
add
sub
out
ret
test
or
cmovno
push
add
cmp
pop
int3
add
sbb
add
jp
and
and
push
jnp
or
inc
adc
jne
or
daa
cmp
cmp
dec
add
sahf
fs
xchg
dec
add
push
scas
shrb
and
pop
add
and
std
pop
lods
sti
adc
adc
push
int
repz
mov
imul
cld
sbb
aas
mov
jl
dec
insb
rorb
mov
mov
data16
inc
and
int
push
xchg
adc
adc
add
das
shlb
lahf
add
roll
inc
mov
rorl
and
scas
jge
movb
sub
sbb
jle
rolb
add
bound
push
add
xor
mov
push
je
into
or
int
lret
sub
xchg
inc
push
imul
adc
out
mov
add
add
sbb
js
test
lock
sbb
xor
stos
lock
aas
insl
add
hlt
mov
push
xor
neg
cmp
je
push
mov
int3
xor
add
add
std
push
or
adc
or
xor
sbb
lea
cmp
stos
jbe
fmuls
and
add
push
fwait
sub
push
enter
or
insl
pop
or
bndldx
fsubrl
clc
inc
inc
sbb
rcll
or
adc
xchg
sub
nop
cmp
or
push
cvtdq2ps
dec
jb
cmpl
adc
aam
jle
adc
pop
clc
sbb
neg
bound
rorl
aas
imul
shrl
lret
push
je
mov
stos
mov
dec
ljmp
outsl
inc
push
insl
sbb
inc
push
loopne
push
jge
inc
inc
mov
cmpsl
out
add
ss
adc
sub
in
inc
dec
jae
mov
adc
test
in
and
or
push
enter
inc
mov
xor
insl
and
jns
jne
inc
mov
jb
pop
ja
add
test
adc
pop
inc
inc
inc
inc
adc
add
sub
pop
cli
enter
jbe
dec
mov
imul
add
add
add
mov
cmpsb
and
fmul
rolb
jo
push
mov
push
pop
cmpl
or
jo
repnz
je
pop
shll
pop
mov
add
sbb
pop
cmp
and
notb
je
rolb
ffreep
lret
sub
cld
jmp
and
push
pop
ret
mov
add
mov
cld
inc
movsb
mov
add
or
push
sbbl
jg
lods
push
mov
push
or
push
lea
mov
adc
loope
add
fcompl
out
xchg
out
xor
jg
push
hlt
inc
lea
cmp
jne
orl
mov
sub
sub
gs
sub
repz
or
adc
cmp
test
ljmp
jmp
mov
in
mov
pop
and
mov
insb
adc
pop
jne
dec
add
add
lds
aad
mov
lock
dec
rcll
or
div
add
sub
cld
xor
sbb
lcall
mov
sub
cmp
cs
and
xor
jae
push
movsb
sub
add
mov
jle
ret
push
push
and
add
imul
pop
fmuls
scas
pop
negb
sbb
test
xchg
cmc
mov
cli
test
jne
test
cmp
mov
lods
fs
lds
dec
pop
lret
jbe
inc
push
pop
adc
mulb
loope
sbb
push
mov
mov
fdivl
dec
addr16
in
rcrb
sbb
xor
and
rcl
cmp
mov
push
xor
fistps
aas
sub
or
popa
push
sub
lods
or
dec
stc
cli
cld
fisttpl
or
aas
xchg
pop
sbb
sti
out
lea
rolb
adc
loope
sarl
push
insb
push
cmp
jne
mov
push
cmp
jne
jns
fwait
cmpsl
es
jne
call
inc
fstl
lcall
add
push
or
cmc
jmp
iret
iret
repz
jmp
std
std
jmp
cld
cltd
and
push
sub
test
push
jmp
jmp
inc
inc
sbb
je
or
add
stos
shr
repnz
add
pop
lock
xchg
mov
inc
fs
jo
lds
clc
test
ret
leave
jns
adc
pushf
ja
pop
inc
pusha
test
pop
and
push
xchg
or
or
dec
movsb
push
push
mov
jo
and
sub
pop
or
and
adcb
sahf
lea
lret
xchg
imul
sbb
or
outsl
and
push
add
sbb
or
push
fimull
inc
sahf
adc
testb
jne
jo
sub
dec
test
xor
xor
sub
xchg
aad
sti
mov
adc
stc
lock
ja
je
push
jmp
mov
rcll
sbb
ss
or
mov
icebp
fadds
sbb
push
out
pop
dec
outsb
out
jns
mov
dec
mov
dec
sbb
inc
xchg
add
pop
sub
lcall
sbb
cwtl
ja
subb
mov
add
dec
xor
or
and
xlat
and
call
mov
xchg
and
out
xchg
je
mov
testb
pop
movsl
sbb
pop
pop
jmp
pop
lret
clc
mov
mov
andb
movb
dec
stc
push
push
mov
add
testb
dec
loop
add
sahf
mov
xchg
lock
sbb
loopne
pop
nop
or
test
cmp
mov
mov
sbb
and
sub
add
add
movsl
icebp
imul
xor
das
int3
add
jp
sub
adc
sub
cmp
pop
or
andb
push
push
out
cmovs
sbb
pop
int
push
pop
test
test
or
mov
rep
jmp
pop
gs
mov
rcrb
or
add
in
fwait
mov
lea
pop
enter
sbb
and
inc
or
inc
add
add
cmp
int3
lea
xchg
lret
dec
add
movl
pop
inc
add
add
fwait
or
push
orb
jo
jg
out
pusha
pop
mov
mov
iret
repz
call
lock
repz
hlt
clc
clc
cld
jle
call
lock
iret
imul
push
enter
cmp
mov
mov
pop
sti
and
ret
push
andl
push
lea
jl
adc
or
pop
mov
out
inc
das
neg
fimuls
and
stc
sub
jbe
fistpl
push
push
js
mov
xchg
frstor
mov
add
sahf
inc
push
out
push
add
cs
je
cmpsb
lea
add
ljmp
mov
push
cld
push
add
out
lcall
das
out
sahf
pop
aaa
sbb
sbb
sahf
out
sahf
adc
adc
or
inc
sahf
out
or
add
clc
mov
or
push
adc
add
mov
icebp
pop
dec
add
sti
pop
mov
mov
xor
mov
mov
incl
inc
decl
adc
pop
pop
lods
inc
in
or
es
push
cld
cmp
xor
xchg
pushl
push
cltd
pop
idiv
add
mov
pusha
or
sub
add
in
ja
push
aaa
dec
mov
mov
xor
popf
nop
aam
bnd
cmp
jae
dec
fcompl
inc
cwtl
mov
jae
pop
jbe
push
hlt
inc
push
mov
dec
cld
jmp
pusha
add
sub
fldl
push
mov
pop
add
or
cwtl
push
jg
inc
jne
aaa
dec
sbb
add
pop
call
or
sbb
sbb
dec
dec
je
push
push
mov
sub
inc
adc
mov
xchg
insb
adc
fidivrs
and
jbe
xor
pop
decb
out
sub
push
scas
push
mov
inc
and
pop
inc
lcall
add
add
out
xchg
or
add
outsb
cltd
push
inc
jmp
adc
ret
pop
sub
addb
push
testb
xor
adc
insl
popa
movsb
jne
shlb
push
mov
inc
in
jmp
cmp
sbb
sub
sub
insl
loopne
fnstsw
or
aas
jge
pop
dec
add
pop
idiv
cwtl
mov
sti
xor
xchg
inc
out
cmp
sbb
mov
cmp
test
clc
int3
or
call
or
push
shrb
enter
sar
adc
fs
jmp
jl
mov
or
insl
in
call
dec
lds
or
je
insb
sub
sbb
jecxz
repnz
sbb
xchg
jae
mov
stos
sbb
pop
incb
add
jns
adc
cmp
xor
imul
add
sti
cmp
mov
sub
jp
mov
scas
add
cmp
jae
orl
cltd
popf
push
pop
add
and
xchg
cld
or
les
jmp
xor
ja
jl
je
sbb
and
popl
jl
fs
sti
insb
mov
and
jno
mov
mov
int
int3
dec
jo
sub
je
dec
inc
add
jge
hlt
jne
mov
mov
sub
push
mov
lcall
pop
popl
or
mov
pop
push
les
or
je
add
sub
jns
mov
pop
stc
pop
push
adc
loopne
or
jmp
pop
pop
subl
jmp
and
pop
movsl
and
inc
and
dec
lock
pop
sub
push
je
mov
outsb
and
movsb
xchg
popf
cmpl
sub
and
insl
mov
pusha
jge
loop
call
in
icebp
lahf
or
add
push
data16
and
or
adc
adc
or
out
call
test
fsubr
push
imul
pushl
sbb
dec
ljmp
insl
cmp
xchg
rorb
cmp
imul
add
fwait
push
fadds
cld
mov
and
les
sahf
mov
aam
add
out
xor
decl
inc
jg
jbe
cmc
dec
xor
mov
aam
push
xchg
mov
stos
and
jo
mov
iret
inc
inc
cmp
je
push
sub
jbe
gs
cli
orb
adc
add
fidivrl
dec
je
and
rorb
popa
mov
or
outsb
add
pushf
mov
push
mov
les
mov
incl
js
pusha
in
push
push
mov
push
inc
sbb
xchg
and
and
pop
sbb
lods
add
mov
sub
bound
dec
mov
sbb
or
xchg
pop
dec
jmp
dec
push
xchg
bound
rol
xor
sub
jg
and
or
mov
addr16
idiv
rorb
xchg
adc
test
incb
jg
sarl
pop
cmp
je
mov
add
add
andl
xor
mov
jmp
or
rcll
add
push
pop
inc
int
and
xor
roll
pop
add
inc
fdivr
frstor
lret
lods
sbb
dec
movsb
jb
xchg
add
and
daa
iret
es
mov
sub
pop
add
insb
fildl
fcom
into
adc
and
add
shll
jo
lea
bound
jne
jmp
dec
or
sub
das
cmp
push
dec
sbb
and
mov
inc
nop
stc
jecxz
adc
and
xor
or
or
test
ret
movsb
lds
cmp
es
mov
gs
sbb
movss
or
mov
xor
mov
jp
lahf
jge
outsb
jns
aam
lock
je
push
pop
movsl
push
jno
out
cmp
inc
je
inc
sbb
mov
mov
pop
jae
popa
sarb
or
jmp
cmp
cld
add
inc
or
inc
inc
pop
das
push
mov
outsl
inc
les
or
sbb
sub
cltd
pop
mov
sbb
fdivl
and
ja
inc
lcall
cli
xor
lea
les
pop
das
lea
daa
inc
decb
add
jne
and
inc
push
add
mov
pop
sbb
sbb
rcrb
leave
pop
movsl
mov
push
xor
adc
and
syscall
jns
jne
mov
push
xlat
rep
pop
inc
dec
js
pop
mov
jb
outsb
adc
mov
add
mov
iret
and
lock
xchg
or
cmp
test
lock
outsb
mov
fmuls
or
insl
ds
jmp
pop
arpl
xchg
push
xchg
mov
xor
fs
lret
clc
adc
mov
enter
cmp
push
movsb
les
outsb
adc
fs
adc
clc
fstpl
or
adc
jno
repnz
loopne
sbbl
xor
data16
in
inc
inc
loopne
sub
into
dec
sahf
push
cmp
nop
jbe
jbe
inc
or
js
adc
add
adcl
pop
and
dec
cmp
loopne
push
sub
outsb
fdivrl
sub
bound
rorl
inc
popa
sbb
in
call
xor
and
sub
jecxz
ret
gs
clc
inc
les
or
fcomps
mov
or
shlb
xchg
add
aam
xor
cmp
push
aam
pushf
enter
lret
sub
in
mov
jmp
mov
dec
shll
push
xchg
adc
dec
clc
ret
cmp
std
data16
push
into
inc
adc
inc
and
cmpsl
mov
enter
push
outsl
sbb
pusha
js
xchg
adc
adc
inc
inc
js
or
popa
jbe
sub
push
add
pop
sub
xchg
pop
sub
sbb
xor
jo
arpl
imul
cmp
cltd
mov
push
adc
loope
sub
sub
into
inc
mov
rclb
loopne
adc
das
dec
and
inc
or
dec
cmp
jo
mov
lret
scas
add
inc
mov
sbb
ja
insl
pop
orb
addl
js
add
popa
ret
mov
fildl
fcompl
mov
xorb
in
ret
or
repnz
inc
xchg
lea
xchg
xlat
inc
and
jg
adc
test
cmp
icebp
sbb
ror
mov
cmp
jmp
rcrb
rorl
cmp
add
rcr
mov
inc
mov
popa
movsl
xor
mov
adc
pusha
sbb
sbb
sub
and
push
incl
xorl
and
call
movsb
mov
test
mov
add
mov
lods
dec
cltd
out
jge
xchg
cs
inc
aas
icebp
push
es
outsb
sti
add
sub
das
test
fimull
ja
daa
pusha
pop
adc
inc
pop
rcrb
or
or
jmp
xor
orl
ja
js
dec
jo
pop
lcall
neg
mov
aam
insb
imul
ret
add
rclb
js
adc
test
add
or
push
cld
jb
push
sti
pop
add
jb
lahf
mov
dec
mov
mov
dec
subb
js
mov
inc
call
or
or
adc
or
jne
ret
pop
or
dec
dec
rol
andl
ret
cmp
xchg
dec
xchg
xchg
imul
pop
push
or
adc
loope
push
xor
add
cmp
mov
adc
lret
cmpb
push
cmp
jg
add
fcoms
rorb
xor
gs
or
xchg
cld
je
lret
or
and
es
sbb
adc
jae
pop
mov
sub
add
andl
aam
adc
sub
lock
cmp
mov
add
xor
clc
pop
ljmp
adc
loopne
or
hlt
test
inc
daa
sub
adc
sbb
dec
xor
or
adc
add
jb
or
jne
xor
inc
test
inc
testl
icebp
out
enter
cmpb
inc
mov
mov
cs
nop
sar
dec
xor
add
mov
sub
in
mov
jbe
push
adc
push
pop
dec
ss
push
or
pshufw
js
inc
in
xlat
scas
std
mov
ret
es
mov
add
or
xchg
loope
push
xor
pop
rolb
push
pop
push
hlt
jne
or
jno
rcrb
adc
inc
adc
aam
push
add
dec
jmp
pop
inc
loopne
adc
fbstp
push
sub
jae
jo
and
xchg
dec
leave
out
mov
mov
sbbl
cli
and
dec
loopne
ret
out
xor
and
mov
scas
test
mov
and
enter
push
add
xchg
adcb
rol
inc
mov
shrl
mov
adc
sub
mov
inc
mov
iret
dec
loopne
push
push
fldl
adc
sub
push
add
mov
adc
sarl
adc
lahf
sbb
or
xor
pop
js
mov
imul
push
lea
loopne
sbb
add
or
call
adc
popf
pushf
mov
sbb
inc
int3
add
imul
add
sbb
push
push
push
sbb
lods
push
adcb
mov
je
adc
test
or
push
dec
movb
testb
aam
mov
call
test
sti
push
pop
push
lea
dec
xchg
fmuls
mov
xchg
push
divb
clc
or
mov
repnz
inc
sub
lahf
pop
fdivrs
or
push
mov
popf
pop
cmp
or
stos
xlat
sbb
and
lock
mov
stc
mov
and
rcrl
pop
pop
fnstsw
sbb
das
and
sbb
lods
das
or
jne
xor
rorl
shrb
sete
or
mov
push
lods
lret
test
test
movsb
pop
sub
cmp
or
mov
sub
sub
push
or
or
sbb
sbb
adc
popl
frstor
ljmp
mov
sub
loopne
movl
cmp
es
rcl
js
cmp
daa
xchg
mov
fdivl
fdivr
or
fadd
mov
cmpsl
mov
mov
fsubrl
push
push
popf
es
loopne
sbbb
adc
loopne
inc
push
xor
sub
test
testb
pop
or
cmp
jl
add
adc
or
cmp
test
dec
mov
push
xchg
sub
shll
icebp
and
mov
adc
jle
shl
and
mov
mov
sub
mov
mov
dec
jne
lea
cld
cmp
or
popa
loopne
fbstp
inc
add
call
inc
lahf
aam
xor
sbb
add
and
out
push
movb
and
lea
mov
in
fldl
js
push
sub
xor
dec
aam
push
jno
push
test
cmp
cld
ficoml
push
push
out
xchg
les
test
or
mov
push
dec
sbb
inc
cld
popf
jo
cmpsb
scas
dec
and
int
decb
push
lcall
mov
jmp
and
je
and
or
push
mov
lret
aam
or
mov
jge
fiadds
lahf
lods
leave
sub
mov
mov
add
pushl
lret
add
jmp
jl
in
jae
ljmp
or
push
ret
das
pusha
sbb
xor
push
ja
mov
jge
jo
jg
lahf
rol
push
or
ja
test
and
or
or
mov
xor
pop
ss
in
or
aaa
jno
shlb
xlat
and
add
pop
insb
push
lock
clc
pop
cmp
mov
xorl
movl
cld
cmp
shll
push
sbb
int3
jb
jns
xchg
inc
cmp
std
jne
das
sarl
add
jmp
sub
stos
add
inc
enter
icebp
add
incb
jno
ret
and
xchg
test
and
cmp
pop
or
push
mov
push
add
out
pop
stos
loopne
shlb
lock
out
into
std
fidivl
add
jmp
push
adc
enter
daa
insl
es
push
and
xor
stos
mov
push
inc
rolb
pop
or
inc
rol
cmp
jbe
clc
cmp
in
lea
mov
add
pop
andl
inc
push
lea
movsb
jle
mov
imul
add
mov
sahf
or
sub
jmp
mov
xchg
push
loopne
adcb
loop
or
lcall
or
jne
outsb
mov
inc
pushf
jge
add
jb
add
mov
inc
mov
jnp
adc
or
adc
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
movsbl
inc
cmp
ds
jl
sbb
shl
divb
loopne
or
inc
or
inc
dec
jne
cmp
test
dec
add
int3
add
gs
lret
jnp
test
xor
test
int3
dec
jle
push
sbb
cmpsb
dec
dec
loopne
adc
addl
fisubrs
dec
mov
loop
push
jbe
pop
push
and
hlt
jp
add
js
mov
inc
sbb
gs
or
adcb
mov
cmpsb
scas
mov
lcall
cmpsb
bound
cmp
addl
jbe
call
cli
repnz
add
dec
dec
movsl
xor
and
das
mov
mov
mov
call
fsts
frstor
dec
enter
inc
pop
std
sti
sub
jmp
xor
dec
sbb
mov
inc
jne
gs
jmp
aad
out
ss
mul
jmp
ja
pop
sbb
es
push
pop
ljmp
xchg
out
xchg
cmp
imul
movl
leave
in
inc
jl
cmp
std
and
je
xchg
push
cltd
mov
mov
lret
mov
fdivr
mov
movsb
jne
ret
pop
sbb
pop
adc
mov
ds
ror
lret
xor
sarb
das
adc
fidivl
inc
inc
sbb
sub
inc
sub
sub
xorb
rclb
xchg
sbb
sub
cwtl
sub
mov
push
inc
leave
xlat
pop
lea
fildll
add
or
push
cmpl
cmp
pop
cmp
add
add
inc
or
decl
jne
sbb
push
xor
outsb
add
xchg
enter
notb
mov
or
lea
jnp
xchg
push
or
push
or
shll
add
popf
sub
lock
push
shrl
sub
int
test
js
cmp
sbb
rorb
mov
je
push
or
adc
pop
out
xor
xchg
inc
sub
pop
in
clc
jno
lahf
mov
pusha
jbe
and
xor
lock
lcall
jo
loope
and
add
dec
rclb
ds
ficomps
and
add
mov
rcll
or
or
mov
mov
and
mov
lock
rol
cmp
mov
bndldx
mov
adc
das
or
repnz
inc
mov
or
adc
rcrb
add
inc
sti
sbb
cld
pop
xlat
add
je
ror
loopne
pop
std
out
call
bndstx
cwtl
sbb
inc
or
add
roll
test
nop
notb
push
push
mov
outsb
ja
jmp
mov
mov
mov
inc
shlb
jge
dec
test
cmp
jo
ret
inc
fs
sbb
cwtl
and
sbb
jp
sti
lret
xchg
fmul
sbb
push
jo
mov
ret
pop
lret
inc
or
inc
mov
lods
add
test
movsb
or
mov
xchg
inc
shrb
sbb
out
je
shlb
cmp
fnstcw
adc
or
outsl
mov
dec
fldl
sub
icebp
movnti
adc
test
pop
xor
push
push
adc
xchg
rcrb
dec
mov
mov
or
xor
rol
inc
int
loopne
push
mov
xorb
xchg
inc
jmp
fs
pop
rcl
ja
sub
jb
pop
jb
inc
inc
mov
and
dec
pop
cmp
push
sbb
jle
adc
ud0
sbbb
scas
iret
jnp
aad
insb
and
shrb
sti
ljmp
test
fwait
mov
pop
sbb
add
xor
outsb
push
addl
popa
popa
pop
pop
add
in
push
dec
movsb
lret
mov
xchg
jle
mov
in
cmpl
xor
adcl
pushf
cmpsb
and
daa
mov
jmp
jno,pt
push
push
mov
ja
mov
out
mov
repz
fprem1
push
sub
inc
mov
in
cwtl
mov
adc
fldenv
cmp
mov
gs
xchg
mov
sub
nop
inc
xchg
add
cmp
fldl
das
rclb
dec
jp
ja
movsb
jp
inc
sub
or
mov
push
inc
lock
inc
pop
jae
into
sbb
mov
or
imul
fcoml
push
push
xchg
fcomps
int3
pop
pop
jle
data16
popf
enter
jg
pop
movsl
shrb
ficoml
test
lea
sarl
fistpl
aaa
dec
cld
adc
sub
jecxz
test
aam
xchg
cmp
sub
loopne
lahf
lea
mov
sub
xchg
add
out
mov
mov
inc
fcoms
js
jmp
jge
sbb
push
jo
iret
inc
mov
notb
or
cmp
icebp
mov
es
mov
push
inc
js
pop
cmp
push
pop
fs
call
push
enter
inc
popa
pop
push
pop
fisubrs
mov
or
repz
repz
xor
and
adc
pop
pop
fprem
mov
insb
push
js
pop
and
pop
jbe
and
mov
nop
add
adc
push
push
pop
pop
lock
enter
lock
cmp
jnp
mov
or
push
mov
les
mov
repz
aam
pop
pop
adc
ret
add
push
sbb
sub
pop
xchg
test
insl
push
mov
test
inc
cld
add
cmp
cs
push
jo
arpl
sbb
mov
sarl
jmp
jg
adcl
pop
les
and
xchg
adc
dec
mov
add
adc
xor
rorl
jge
inc
mov
pop
nop
test
sbb
rcrl
mov
cmpb
pop
xchg
adc
daa
sbb
add
and
std
or
mov
or
and
and
rcl
jecxz
and
ret
inc
aam
mov
lea
jbe
cwtl
test
hlt
fsubrs
ljmp
js
int3
mov
and
dec
loopne
fwait
fwait
xor
sbb
orl
or
inc
or
je
mov
mov
pop
dec
dec
adc
jo
jae
xchg
add
jl
dec
daa
int
or
pop
pusha
movsl
or
push
push
jge
jmp
push
add
cmpl
inc
rclb
xchg
data16
or
push
adc
push
pop
push
mov
ja
cwtl
loope
add
adc
and
jp
push
bound
arpl
or
aam
jo
push
or
mov
mov
inc
imulb
xor
out
push
and
or
ljmp
scas
mov
sbb
popa
sub
ret
loopne
mov
cmp
enter
das
and
je
movl
pusha
test
push
mov
cmp
shlb
mov
and
cmpsl
mov
push
inc
and
xlat
add
sbb
pop
adc
int
pusha
ljmp
mov
sub
inc
hlt
jmp
or
inc
sbb
nop
loopne
adc
and
or
sub
push
add
add
add
orb
enter
lock
inc
test
das
add
jns
inc
cmp
cs
sub
ficompl
pop
mov
xor
std
pop
sbb
imul
lsl
adc
dec
sub
daa
jmp
xchg
and
push
mov
js
pop
mov
and
movsb
mov
add
sub
mov
shrb
mov
fildl
data16
mov
mov
dec
clc
inc
or
test
mov
leave
xchg
rcrb
mov
cld
dec
xor
push
aaa
jecxz
inc
xor
test
dec
dec
sbb
fmull
and
mov
adc
jbe
sub
shrb
push
fprem1
in
cmpl
jle
js
xchg
pop
cmp
pop
divl
or
mov
in
jge
mov
addr16
ds
mov
dec
scas
xchg
inc
jle
push
push
jne
filds
push
adc
dec
loope
shrb
add
xchg
cmp
aas
or
outsb
inc
rorb
push
sub
pop
sub
mov
shl
add
test
add
and
adc
scas
xchg
icebp
scas
jno
shlb
and
addb
ljmp
xchg
push
push
add
bound
test
mov
nop
cs
lret
ret
mov
jbe
pop
or
lea
popf
in
mov
clc
aam
inc
out
fcoms
cmp
lea
std
aam
or
mov
cmp
pop
add
rorl
mov
test
in
or
call
or
outsl
pop
andl
das
lods
dec
rolb
lea
test
out
and
pop
ja
mov
movsbl
adc
adc
je
sbb
pop
shll
cmpsl
loopne
add
mov
popa
jecxz
cmp
mov
bound
rorb
les
pop
cs
clc
fsubrs
filds
sub
dec
or
je
sub
mov
adc
test
scas
pushf
pop
or
lret
and
add
sbb
jo
subb
inc
cmp
cmpsl
or
aam
mov
mov
mov
stos
and
rcrb
cltd
pusha
xchg
ja
movsl
mov
mov
jbe
xchg
or
out
sbb
hlt
hlt
stc
rcr
push
in
je
or
inc
insb
je
dec
and
xor
subb
loope
insb
nop
pusha
sub
mov
sbb
pop
and
pop
fdivrl
pop
or
xor
mov
add
xor
rcrb
pop
add
fnstcw
arpl
or
imul
jae
cmc
jne
js
rorl
and
and
xchg
clts
mov
xchg
push
pop
stos
fs
push
shrl
push
sbb
jle
jns
sbb
pop
push
or
movsb
jge
repnz
mov
and
inc
mov
fdivr
pop
inc
cmpb
loop
in
sub
and
out
inc
push
jae
push
pop
arpl
fwait
xchg
outsb
add
das
mov
mov
add
xchg
loope
icebp
dec
and
in
pop
imul
mov
shrl
sub
fildl
add
xlat
imul
inc
iret
add
push
insl
cmp
xchg
xor
push
xor
negl
aad
sbb
movsb
dec
lret
or
push
movsb
ss
adc
xor
test
sti
add
push
mov
movb
push
subl
jbe
daa
jge
lcall
mov
inc
mov
dec
mov
pop
xchg
mov
cmp
xor
ret
add
mov
cmp
pop
imul
push
sbb
cmp
or
add
add
into
add
addr16
mov
scas
push
outsb
je
setnp
push
test
insl
int3
dec
movaps
popa
aas
add
sbb
push
xor
arpl
xor
mov
pop
mov
push
pop
movsb
fimuls
adc
adc
pop
nop
sbb
pop
jo
lds
jecxz
push
stos
add
push
add
ret
pop
testl
mov
jne
mov
jmp
cmp
jecxz
popf
jmp
push
insl
cmpl
incl
mov
xor
int
gs
scas
or
mov
out
call
cld
adc
sti
hlt
cmc
mov
push
mov
add
popf
clc
push
xchg
mov
jecxz
lea
stc
xchg
mov
imul
adc
cwtl
inc
call
aas
nop
imul
ds
popa
stos
out
inc
adcl
sub
push
outsb
mov
bound
decb
mov
std
xor
inc
daa
add
adc
movsl
loope
mov
data16
push
loope
ds
sub
lret
mov
jne
push
mov
fbstp
inc
push
fildl
pop
mov
mov
fmull
cltd
jmp
aaa
int3
je
cltd
movsb
fidivs
je
push
or
movsb
jae
inc
test
mov
pop
fcoml
in
pop
fimull
addr16
or
sbb
dec
jg
cmp
lret
pop
mov
or
jne
mov
testl
sbb
fs
inc
and
sbbl
cltd
push
lods
sub
jg
lds
xor
xchg
clc
ja
call
sahf
add
mov
dec
jmp
pop
xchg
sub
inc
adc
mov
aas
pop
clc
sbb
je
into
cmp
mov
ret
and
xor
ss
aaa
dec
pop
cmovl
and
xchg
mov
push
or
repz
sahf
mov
adc
test
lcall
push
xor
sub
fwait
sbb
test
cli
and
mov
call
sub
sub
pop
sbb
shl
push
jp
outsb
mov
lcall
lea
cmp
fidivrs
cli
pop
sub
xchg
adc
push
jbe
dec
push
cs
popa
sbbl
jne
push
pusha
dec
cwtl
jno
aaa
cmp
call
in
fistps
rcll
xchg
add
lret
mov
sub
xor
pop
jg
or
dec
xlat
lea
jo
cmp
ficomps
jl
das
or
daa
testl
jnp
les
adc
aas
icebp
sti
ret
movsl
daa
pop
mov
or
test
mov
sub
movsb
cmp
ds
imul
jnp
sbb
push
nop
mov
bound
rcll
insb
ret
hlt
push
gs
stos
adc
clc
jns
add
in
packssdw
push
xchg
rcrb
lock
into
testb
orl
outsb
pop
add
or
mov
cmp
pop
clc
xor
aaa
hlt
add
lea
mov
shl
sbb
movsl
cltd
or
outsb
and
rorb
pusha
lock
and
andl
loopne
and
rclb
daa
adc
push
mov
ljmp
rcll
std
mov
cmp
fcoml
sbb
push
jne
push
sub
xor
aas
out
ret
cmpb
xor
pop
or
cli
nop
pusha
dec
adc
inc
mov
les
out
popa
cmp
ss
adc
and
sbb
add
cmovno
inc
mov
or
inc
add
push
adc
add
inc
repz
or
inc
xor
sub
adcb
and
mov
push
adc
push
cmp
fistl
lret
add
ss
adc
jmp
loop
das
jbe
push
or
adc
enter
sub
dec
into
jl
int
push
fcompl
adc
and
mov
mov
push
sarb
cld
shr
and
or
imul
jmp
add
push
dec
or
add
call
push
lea
mov
or
popa
outsl
adc
jg
dec
jne
sar
dec
cmp
jbe
push
pop
lock
cmp
jne
addb
pop
cmc
sbb
add
shll
pop
mov
js
stos
hlt
and
adc
mov
mov
push
pop
add
sbb
mov
add
add
icebp
cltd
push
add
push
or
push
fimull
sub
jmp
clc
and
jnp
add
jne
and
outsb
or
sar
xor
dec
pop
cmp
das
imul
imul
add
jl
out
sub
clc
jno
jno
mov
call
mov
shr
not
and
add
stos
imul
cltd
repnz
mov
dec
add
mov
bound
and
dec
pop
or
popf
loopne
test
rorl
jnp
push
adc
out
aas
insb
pusha
mov
mov
inc
mov
mov
test
jge
xchg
lods
push
or
pop
jbe
pop
lock
jmp
dec
adc
push
mov
or
pop
inc
xor
dec
repz
xchg
xlat
addr16
test
sbb
negb
inc
shl
add
scas
mov
push
push
call
aas
gs
push
or
nop
icebp
sbb
mov
mov
sub
dec
inc
adc
inc
xor
add
and
hlt
insb
dec
jge
jne
push
push
mov
push
adc
mov
lret
mov
add
mov
nop
popa
test
ret
sbb
jl
push
rorl
push
shrb
cmp
pop
or
mov
inc
xchg
mov
xorb
imul
xor
shl
inc
inc
cmpsl
cwtl
outsl
push
mov
dec
ja
or
adc
out
mov
les
and
imul
insl
xor
pop
mov
or
adc
sbb
inc
sahf
int
jmp
orl
or
add
sub
mov
or
push
mov
je
add
inc
dec
stc
ljmp
rorb
clc
incb
pop
mov
fwait
xchg
or
hlt
or
pop
push
cltd
out
dec
ret
push
sbb
popa
daa
or
inc
sub
cmp
inc
sub
inc
loope
sub
shr
jp
orl
les
loopne
mov
adc
adc
out
mov
cld
lock
call
stos
mov
lret
je
clc
add
clc
or
sub
insb
sub
adc
inc
fs
inc
arpl
pop
mov
mov
lock
nop
jecxz
pop
decl
jne
or
lds
not
and
sub
or
xor
int
xlat
sub
sarb
mov
fsubl
cld
dec
cmp
jo
bound
pop
adc
shrb
pushf
jle
pop
adc
call
fcmovnu
cmp
adc
lods
test
mov
int3
push
pop
dec
push
addb
pop
mov
dec
int
sbb
clc
rolb
sti
dec
in
es
add
cmp
jnp
add
lcall
add
push
jns
sub
add
inc
sub
rcr
mov
sar
dec
mov
ljmp
paddusw
lea
pop
int
lods
inc
jg
or
mov
dec
shll
pop
pop
push
pop
imul
mov
data16
pop
outsl
jmp
aaa
js
test
push
ja
sub
adc
and
push
adc
xchg
mov
pop
daa
xor
and
das
dec
push
mov
and
clc
subb
fisubrl
das
mov
dec
int3
sbbl
push
sar
dec
jp
mov
pop
mov
cmp
xor
push
jl
cmp
dec
mov
out
je
fisttps
mov
dec
push
adc
sbb
adc
in
loopne
adc
fimull
ret
ja
lea
mov
repnz
test
mov
ret
adc
push
lods
pop
sub
out
cmp
ret
mov
test
lods
test
xchg
sbb
jp
addb
sbb
mov
jp
insb
push
add
ret
lods
pop
and
inc
cmp
ss
mov
jge
mov
sbb
cmp
clc
in
or
rcrl
stos
dec
or
out
fldcw
push
nop
cmp
inc
cmp
and
decb
xlat
enter
adc
call
sbb
mov
jne
leave
jae
and
jnp
add
xor
cmp
fimull
aaa
arpl
cmp
std
fs
mov
and
clc
lret
or
mov
cmp
je
mov
dec
sbb
and
aas
mov
jl
and
pop
iret
jne
divl
inc
shlb
dec
mov
or
in
push
cmc
pop
push
jmp
dec
mov
cld
mov
enter
adc
outsb
adc
cmp
leave
inc
test
inc
push
pushf
mov
sub
jno
mov
jle
mov
push
rolb
xchg
dec
add
pop
xchg
sbb
iret
icebp
sub
pushf
push
repnz
cs
push
xor
pop
mov
sub
jne
fldl2t
push
push
jmp
jp
xor
test
jae
icebp
out
jne
dec
push
and
shll
xor
dec
jp
mov
js,pn
imul
pop
sbb
cmp
jge
lret
ret
jl
aas
push
or
dec
cld
or
push
hlt
pop
push
in
in
or
mov
das
dec
or
cld
mov
call
cmp
add
mov
push
iret
scas
and
lods
test
lea
ds
daa
faddl
into
fdivrl
add
and
and
add
hlt
loopne
jmp
test
notl
loopne
xchg
inc
sub
pop
jb
or
add
cmp
xorl
jp
adc
test
jbe
and
push
or
lock
cmc
xor
cmp
dec
ljmp
rolb
mov
loopne
or
fmull
or
inc
dec
shlb
mov
and
movb
push
shlb
push
add
je
push
orl
xchg
shrl
lahf
inc
inc
cmp
cmp
add
cmp
push
mov
xchg
sub
sbb
sbb
ja
adc
or
cwtl
push
lret
jmp
xchg
jl
aam
jbe
dec
push
cltd
bound
xchg
inc
fisubrs
lea
add
flds
xorl
mov
or
xor
lahf
pushl
clc
xchg
aam
adcl
imul
pop
lods
inc
push
lahf
jne
push
adc
adc
mov
sbb
ja
pop
icebp
and
pop
sub
cmc
push
aam
mov
inc
js
push
addl
out
push
jmp
and
inc
jge
cmpsl
pop
jl
fisubrs
repz
rcr
mov
insb
int3
push
imull
movsl
lahf
sbb
push
xchg
add
fistpl
ret
mov
lock
or
push
inc
inc
adc
ret
jb
loop
cmpl
pop
sbb
jbe
in
jg
xchg
stos
inc
mov
fnstcw
inc
xor
add
jmp
xchg
rcll
dec
insb
inc
mov
inc
inc
jns
adc
push
sub
roll
xor
jo
xor
int
sbb
and
rolb
lret
and
sbb
arpl
lret
lods
aam
aam
xor
mov
push
test
and
in
test
and
mov
jp
mov
addr16
call
jns
jns
in
int3
test
xchg
push
pop
push
in
je
cmp
dec
imul
mov
jle
cld
rorl
sbbb
test
cs
test
mov
pushf
mov
dec
mov
add
sbb
mov
fnsave
mov
push
and
movsb
mov
pop
out
and
orb
sarb
push
ret
in
lods
or
cmpsb
lods
outsl
pop
add
sbb
xchg
arpl
pop
push
mov
pop
sub
pusha
insl
rorb
ss
add
leave
jp
leave
jp
cmp
nop
fldt
repnz
sbb
hlt
hlt
sahf
imul
push
inc
jno
nop
inc
pushf
fistpll
insb
jne
sbb
or
pop
and
mov
pop
adc
out
inc
cmp
xor
sbb
inc
push
cmp
pushf
sbb
or
cmc
int
xor
jmp
int3
les
adc
and
int
push
stos
dec
xor
sahf
aaa
ret
in
shll
lea
inc
enter
jae
xor
sbb
adc
test
aaa
je
mov
add
inc
or
test
leave
enter
inc
mov
rorb
adc
js
test
mov
cmp
lret
and
xchg
scas
dec
outsl
shlb
push
cmp
mov
enter
xor
add
insb
fimuls
cld
ja
stc
aad
cmp
pop
mov
push
test
daa
xchg
lret
add
movsb
shr
and
mov
mov
and
hlt
aam
jns
xchg
iret
push
lods
in
movsb
xor
add
xchg
jne
call
call
and
mov
in
mov
xor
cltd
shl
xchg
in
add
sbb
pop
in
jb
or
test
inc
cmp
mov
mov
je
mov
cld
enter
cmp
call
sysret
inc
sub
mov
aaa
cli
test
addb
or
iret
popa
cmpsl
cmpsb
xor
imul
daa
cmp
push
flds
mov
psrld
jecxz
add
cmp
lret
mov
push
pop
js
add
mov
ret
xchg
xchg
lock
pop
jne
inc
jb
jmp
je
rcll
outsb
shll
in
xor
xchg
and
lret
or
cmpsl
pusha
movsb
inc
sbb
test
pop
cmp
inc
out
shrl
push
mov
xchg
xor
mov
out
add
les
jnp
adc
jp
out
jl
add
push
push
dec
shr
lds
mov
pop
test
aaa
cmp
add
add
push
cmp
add
mov
adc
xchg
cmp
sahf
ret
sub
add
mov
xchg
add
xor
xor
bound
mov
pop
lock
rolb
xchg
imul
je
add
push
fsubrl
add
movb
jnp
lds
add
add
add
shll
rorb
popa
or
pop
inc
add
adc
sbb
cmp
add
hlt
stos
ja
add
mov
aaa
inc
cld
push
ds
pop
inc
adc
inc
fldcw
mov
sbbb
dec
adc
aaa
push
adc
popa
test
das
test
adc
int3
add
jg
js
push
or
shll
enter
mov
jg
dec
sub
mov
sub
out
inc
clc
add
xor
shll
sti
cld
std
incb
enter
inc
dec
popa
xor
imul
cmpsb
and
je
pop
mov
sbb
add
in
rol
rcll
scas
sub
sbb
dec
xchg
xchg
mov
mov
ljmp
push
sti
je
dec
je
push
or
dec
imul
push
fmul
fcmovu
pusha
sbb
dec
fstpl
fstpl
push
xor
mov
fldl
or
fldl
or
xlat
push
mov
aad
cmp
repz
push
xchg
neg
mov
leave
pop
jmp
jo
fbld
in
push
dec
fisttpll
cmp
fs
jns
sub
das
sub
fstpl
jmp
je
add
and
sbb
imul
adc
fldt
xchg
insl
ljmp
sub
add
and
jbe
mov
add
add
push
sar
fwait
add
or
jmp
cmp
aaa
add
xchg
adc
rorb
test
push
in
in
xchg
loopne
adc
faddl
push
xor
inc
in
rcr
cmp
push
push
enter
shl
push
cmpsl
pusha
xchg
mov
and
inc
lock
nop
cmp
test
repz
lea
ds
repz
mov
leave
andl
sahf
loope
mov
loopne
fnstcw
data16
ljmp
xchg
cwtl
push
or
insl
cltd
insb
lock
push
dec
pop
mov
push
xchg
call
icebp
jle
push
jle
in
or
ja
and
inc
or
mov
jb
push
xchg
jmp
mov
cmp
inc
faddl
sti
ja
insb
or
popa
push
jmp
test
scas
cli
clc
push
fmull
jp
jp
inc
iret
mov
cmp
mov
jne
push
push
adcl
jbe
jle
testb
and
test
push
pop
add
sbb
cmp
or
pop
fldl
out
push
cltd
andl
pusha
out
andb
leave
aam
out
sub
mov
cmp
or
test
aas
in
xlat
lret
aad
add
xchg
mov
lea
mov
jb
pop
lock
call
lret
rcl
cld
xchg
and
mov
lods
std
mov
testb
xor
into
jne
pop
pop
mov
pop
mov
mov
sbb
inc
pop
add
incb
sub
or
mov
or
and
jne
dec
mov
adc
pop
sar
lea
ljmp
orb
cmp
xchg
mov
mov
mov
loopne
mov
sbb
loopne
pop
lock
mov
das
jp
enter
xor
ja
stos
push
inc
stos
or
cmp
or
jb
pop
xchg
std
cmp
jp
lods
inc
sahf
and
mov
ds
nop
leave
rorb
rcrb
xchg
lock
sbb
mov
push
pop
cs
int3
pop
or
add
subl
xor
mov
sbb
mov
dec
popf
lock
cmp
mov
stc
or
lods
and
pop
in
je
xor
lods
es
mov
call
mov
push
or
inc
pop
pop
cmpsb
pop
movsb
cmp
lahf
icebp
sar
mov
dec
cmp
inc
sub
lret
mov
pop
pop
aad
pop
and
jmp
jne
jnp
ret
ficoms
jne
cmp
inc
fcomps
in
movsl
cmpsb
inc
insl
xchg
stos
adc
imul
sub
jne
xchg
push
lcall
loopne
test
lods
out
ret
xor
arpl
lea
mov
jg
out
mov
in
movsb
fs
stc
lods
jno
push
or
add
loope
jns
popf
adcb
mov
or
pop
adcb
sti
push
inc
cmp
mov
popf
lea
pop
cmpsl
cmp
std
mov
mov
mov
inc
sets
dec
cmp
inc
dec
xchg
cmp
cmpsb
pop
es
xchg
stc
mov
push
adc
sbb
sub
mov
es
sub
lret
mov
xor
push
mull
jns
daa
mov
push
add
sahf
add
rolb
dec
test
hlt
or
cmp
in
sbbl
scas
jge
enter
mov
sub
frstor
inc
ss
or
pop
add
mov
fsubrl
je
divl
xor
or
imul
imul
cltd
mov
inc
repnz
jecxz
xor
mov
sbb
shll
aaa
addr16
lret
das
lock
fdivr
fdivl
xor
fdivrs
lret
lds
gs
mov
test
xor
inc
xchg
loope
xchg
gs
mov
pop
cmp
sub
aad
sbb
mov
add
cmp
pop
out
in
std
push
mov
lds
sbb
xor
daa
arpl
lods
xchg
cmp
nop
std
lds
das
push
fildll
lea
lock
cltd
sub
rorl
test
push
test
mov
rdpmc
cmp
mov
mov
std
mov
mov
test
mov
xor
subl
ljmp
test
xor
aad
test
inc
push
jns
xor
roll
jb
xchg
xor
push
jne
adc
repnz
cmp
xor
dec
and
sbb
call
std
mov
pop
xor
jp
rolb
jns
xchg
loopne
jp
leave
mov
dec
pop
frstor
push
popa
ficoms
fdivrp
or
ds
cs
push
inc
sbb
hlt
sub
test
jmp
popa
dec
jmp
dec
mov
add
xchg
lret
sar
lock
xor
sub
or
jmp
sbb
push
sub
or
sbb
jge
mov
lods
imul
popf
loopne
sub
subl
xchg
push
mov
dec
test
in
ss
aam
jns
xchg
jl
addr16
dec
cmpl
push
adc
fbstp
pop
push
aad
bound
mov
add
pop
into
movsb
adc
or
imul
inc
lret
inc
sub
sub
into
push
dec
dec
hlt
or
enter
fdivr
das
push
and
jno
push
and
xchg
je
mov
std
lods
and
loope
sub
xchg
push
enter
das
movsb
cld
add
cmp
mov
nop
push
xchg
inc
add
jns
iret
roll
and
xchg
aaa
jge
add
mov
and
pop
in
and
add
cmp
lea
jno
mov
into
inc
cmp
push
icebp
lcall
adc
sub
cmp
ja
sub
lods
inc
or
leave
sub
mov
or
add
mov
cmp
pop
push
stos
add
ljmp
ret
lret
lock
cltd
mov
push
add
xor
pop
pop
pop
xchg
arpl
cltd
mov
inc
xor
inc
dec
push
pop
cltd
mov
iret
movsl
call
loopne
pushf
mov
and
mov
pop
cltd
mov
ficoml
pop
and
jae
cmp
into
enter
les
imulb
sub
imul
stos
pop
mov
mov
movsb
jb
ja
sbbl
xchg
push
cltd
stos
xchg
outsl
popa
pushf
inc
and
jge
cmpb
xchg
loopne
inc
es
cmpsl
inc
push
test
sbb
pop
lcall
cwtl
push
pop
pop
push
test
push
cmc
loope
xor
mov
insl
and
pause
fwait
mov
jb
test
test
jmp
cmpsl
add
mov
mov
xchg
jecxz
and
xor
push
pop
xor
pop
repz
sbb
inc
mov
pushf
imul
addr16
sbb
push
orb
pop
xchg
inc
mov
xchg
xchg
stos
jno
push
mov
xchg
mov
imul
dec
aad
arpl
hlt
push
cltd
add
xchg
pop
pushf
inc
push
inc
movsb
bound
sbb
cmpsl
leave
inc
push
xor
call
test
adc
pop
jb
pushf
pushf
nop
orb
nop
pushf
enter
lods
lods
lods
sbb
cwtl
inc
cmp
dec
push
int
push
addb
mov
je
stc
xor
filds
popf
mov
lods
add
jns
data16
lahf
push
xor
and
mov
push
adc
adc
push
cmp
push
pop
rorb
pop
jne
xor
xor
and
push
fwait
dec
mov
dec
testb
add
mov
movsb
ja
decl
add
orb
add
aaa
nop
icebp
adc
xlat
in
mov
pop
call
mov
adc
add
addl
and
push
jno
fsubrs
dec
aaa
leave
add
xor
adc
mov
test
adc
jo
in
mov
dec
movb
sub
pop
lahf
mov
pop
mov
push
mov
dec
out
jg
test
test
je
mov
xor
lds
lods
mov
ret
cmpsl
mov
sbb
pusha
or
mov
scas
cltd
ret
fsubs
cli
sub
add
les
mov
push
mov
shll
fucomip
stos
ret
iret
bound
cmpsb
adc
pushf
cwtl
sbb
or
rcll
or
les
cld
addr16
cmp
lods
or
scas
jg
or
stc
add
pushf
cmp
es
push
icebp
dec
gs
adc
mov
pushl
stc
insl
mov
add
icebp
dec
and
mov
or
push
mov
out
lods
sub
push
mov
cmpl
add
je
hlt
daa
clc
inc
push
inc
and
pushl
testl
cmpsb
jmp
ss
sbbl
pop
inc
mov
inc
jp
pop
add
test
cs
cmp
movsl
test
inc
mov
cmpl
dec
lds
pmuludq
test
jge
jmp
loope
ljmp
add
pop
jmp
lret
inc
stc
lea
dec
or
mov
or
daa
push
rcl
orl
or
rclb
add
ret
push
push
jl
dec
scas
pop
mov
sub
push
mov
add
inc
dec
lcall
mov
mov
sbb
repnz
add
add
add
lret
movsl
pop
sbb
adc
in
or
stos
add
push
or
mov
and
cmpsl
imul
add
push
in
sarl
rol
sarl
sub
fisttpll
push
or
or
js
adc
mov
and
mov
cmp
dec
sub
leave
xor
push
pop
daa
jle
fcompl
mov
call
push
loopne
addr16
lea
gs
xchg
in
and
clc
nop
cld
add
push
mov
scas
stos
out
mov
jae
pop
fistl
jb
out
xchg
push
ds
adc
cmp
mov
sti
arpl
cmp
cmp
jb
jbe
pop
and
test
into
xchg
les
sbb
add
cmpl
pop
out
xor
or
pop
fstpt
jne
jnp
mov
pop
pop
sbb
xor
mov
or
push
aam
test
sbb
gs
out
dec
or
or
das
xchg
clc
sub
adc
int3
lahf
cs
or
and
dec
cmp
mov
xchg
movsb
je
push
xor
xchg
mov
and
push
sbb
xor
pop
jbe
and
nop
push
popa
mov
add
add
adc
popa
outsl
add
sub
in
add
lock
fiaddl
imul
ret
insb
add
or
aam
pop
and
int3
pop
mov
add
cmp
arpl
sti
add
shlb
outsb
and
xchg
dec
pusha
dec
add
movsb
adc
pop
add
mov
pop
daa
push
mov
or
dec
adc
and
leave
and
cmp
xor
sbb
cmp
jl
mov
mov
sbb
out
lret
in
out
sbbl
pop
orl
push
test
cmp
sbb
cs
popl
push
cmp
jne
xchg
and
dec
lock
pusha
jmp
leave
push
sbb
or
xchg
in
pusha
int3
sbb
fucom
or
dec
mov
push
adc
fstps
cs
push
cmp
xor
imul
aad
or
pusha
ret
or
add
pop
cltd
and
out
dec
cmp
add
add
dec
test
push
push
push
pop
add
test
jg
testl
faddp
je
push
dec
pop
insb
sahf
or
fsin
add
jne
dec
shlb
inc
mov
ja
rorb
lds
xchg
ss
xchg
sbbb
add
sub
sbb
fisttpll
mov
mov
dec
pop
dec
or
mov
xchg
xchg
xor
ret
fdivrs
push
les
push
in
add
scas
sub
fwait
add
or
je
mov
pop
fwait
js
dec
mov
mov
jne,pn
sbb
ja
rol
inc
mov
jbe
sti
popa
adc
cmp
jge
mov
insb
mov
push
adc
idivl
xchg
pop
mov
aas
mov
sbb
push
push
dec
jmp
mov
insb
mov
lock
add
xor
add
adc
and
dec
shlb
mov
add
sbbb
jo
push
ds
mov
das
xor
or
cmp
and
sbbb
mov
sbb
xlat
mov
push
je
lea
add
jbe
add
add
test
sbbb
inc
bound
mov
lahf
or
je
adc
outsb
fcomip
mov
jmp
fsubs
shl
push
adc
push
and
divl
lret
movups
loop
xor
test
les
iret
xor
and
mov
and
loope
mov
and
mov
ret
inc
rclb
das
cmpsb
out
cmp
je
out
repz
jb
adc
mov
pop
addr16
outsb
or
inc
lret
cld
incl
repnz
ret
stos
add
sbb
sbb
bound
xchg
pop
pop
orb
sbb
ja
push
mov
and
and
imul
pop
cmp
sub
hlt
mov
and
inc
iret
and
es
cmp
dec
aas
mov
xor
xchg
and
push
ja
mov
sbb
test
and
push
mov
stc
dec
insl
pushf
adc
roll
pop
clc
push
pop
inc
pop
cmc
mov
and
pop
test
mov
and
mov
jo
in
insb
cmp
jbe
push
pop
xorb
push
mov
sub
xchg
cli
clc
mov
sub
dec
adcl
popa
fsts
mov
inc
cmpb
pop
je
mov
ret
dec
jbe
ret
daa
xor
repz
jp
or
xor
js
and
insb
sub
pop
inc
mov
add
imul
popf
inc
dec
push
out
mov
add
adc
or
aad
mov
add
adc
fdivs
shrl
and
jmp
call
add
mov
sbb
stos
inc
mov
nop
cmp
or
xchg
mov
mov
mov
mov
xchg
mov
test
test
dec
pushf
or
xchg
add
lret
mov
inc
sub
ljmp
dec
jmp
xor
incb
sbb
inc
adc
add
lods
enter
pop
je
pop
es
ja
adc
pop
int
or
ret
scas
and
sbb
mov
mov
jmp
loop
stc
add
sbb
xchg
xchg
inc
call
add
je
repnz
loop
and
andl
fnsave
dec
into
inc
add
xor
inc
into
mov
push
pop
add
or
add
pop
mov
dec
insl
jge
sbb
pop
sbb
cmp
imul
sbb
xchg
mov
aaa
jmp
cli
inc
sub
mov
outsl
mov
add
ds
sbb
inc
jmp
mov
jae
mov
into
inc
dec
inc
stos
sbb
shl
sub
pop
ss
lret
lock
subb
scas
sti
les
push
push
orl
or
imul
sbb
jo
jle
cltd
xchg
inc
adcb
pushf
dec
icebp
lea
adc
inc
inc
cmp
test
mov
push
out
dec
and
scas
adc
sbb
sahf
insl
in
jmp
cmp
dec
inc
inc
or
jne
repnz
push
add
push
sar
cwtl
or
fadds
out
pop
lea
into
and
pop
aad
and
clc
adc
insb
aam
pop
inc
fstps
ret
sub
rcll
bound
nop
in
repnz
sub
jb
iret
xor
cmp
pop
sti
or
cmp
or
int
repz
pop
stos
pusha
ret
inc
rolb
stos
cmp
xchg
pusha
fisttpl
xor
sbb
mov
pushf
xchg
push
or
push
pop
push
dec
push
sbb
jl
mov
pop
lock
add
insl
mov
or
or
push
and
push
cmp
inc
mov
pop
mov
js
into
mov
sbbb
push
add
or
scas
or
mov
mov
pop
pop
sbb
jb
cmp
push
aas
xor
sbb
and
repnz
dec
andb
add
shll
sbb
je
inc
cmp
mov
popf
mov
push
loop
daa
add
lret
xor
or
mov
or
xor
dec
lcall
popa
cmp
sar
and
shl
cli
fs
loopne
xor
and
lods
aad
inc
add
and
mov
leave
inc
and
sti
lcall
test
adc
fs
xorl
stc
in
or
cmpb
dec
ret
xchg
adc
xchg
gs
ret
fwait
shl
add
xor
repz
in
push
aaa
xor
ds
mov
popa
push
add
ss
add
or
je
and
movl
jl
mov
loope
push
pop
or
xlat
adc
or
test
dec
mov
inc
or
xor
out
mov
mov
mov
inc
jmp
push
xlat
adc
push
xor
push
add
lock
rclb
rorl
mov
data16
sahf
mov
jbe
pop
fadds
adc
lock
not
sub
rol
add
mov
orl
les
jb
rcrl
inc
xchg
es
ret
sub
dec
jge
inc
pop
aam
or
jmp
push
movsl
sti
mov
jg
jg
adc
and
push
push
sub
lea
cmpsl
test
xchg
push
lods
adc
cltd
or
push
sbb
sub
add
add
jo
push
cmp
xor
cmc
roll
lret
sub
insb
or
push
jo
sub
add
sarb
test
cmpsb
jge
hlt
rep
ss
neg
cmpsb
jmp
sbb
lock
xchg
lock
push
insb
dec
aaa
mov
xchg
pop
sub
sbb
test
mov
and
movsl
dec
cmpsl
pop
adc
rcrl
xchg
add
adc
lods
fidivs
dec
data16
popa
push
mov
in
and
test
ret
cmp
cltd
loopne
push
dec
test
pop
incl
stc
add
jmp
cld
addr16
testb
add
dec
ljmp
push
mov
mov
lods
jae
add
out
das
outsb
movl
jns
lret
jae
inc
jo
addps
lret
xor
sbb
jo
test
cmp
sub
outsb
pop
pop
loope
sti
hlt
mov
pop
pop
add
mov
sub
mov
adc
sub
push
dec
sub
mov
pop
xor
push
out
std
push
pop
outsl
inc
or
jbe
sub
pushf
outsl
ja
jno
inc
imul
scas
sbb
hlt
orl
sbb
enter
push
mov
mov
in
sbb
shl
adc
ja
dec
test
into
and
call
or
sub
std
mov
dec
arpl
or
dec
ja
pop
imul
add
sub
stos
add
sub
lock
sub
lock
rep
add
jne
inc
adc
sbb
ss
and
or
ss
sbb
push
ret
and
sbb
ja
xchg
in
in
add
mov
hlt
push
mov
in
cwtl
insl
adc
mov
sub
sub
jno
inc
and
clc
lock
in
fdivrl
cmp
lods
xchg
test
lahf
mov
xlat
pop
and
sub
sub
shl
push
aam
outsb
lcall
pop
mov
jbe
faddl
mov
orb
xor
mov
fdiv
mov
ret
xor
nop
ror
sub
insl
lock
iretw
decl
mov
shlb
cmp
or
and
inc
push
jb
xor
xor
jnp
push
loope
push
fidivrl
push
xor
inc
jbe
movsb
int
pop
mov
fdivrs
push
mov
jmp
aas
add
or
ss
jmp
mov
or
and
and
push
popa
mov
scas
mov
mov
pop
lods
pop
add
aam
lcall
ret
and
mov
push
pop
lods
sub
and
sub
notl
nop
int3
push
movsb
push
or
and
jne,pn
js
imulb
jmp
adc
outsl
jo
repnz
addr16
jae
adc
outsb
movsl
or
imul
inc
or
mov
push
cmp
fdivrl
dec
mov
popf
mov
mov
cltd
mov
inc
test
inc
stos
aam
jno
jecxz
je
push
lock
sub
ret
fwait
cmpb
js
scas
es
cmp
mov
jl
cmp
adc
cld
cmp
inc
jmp
hlt
pop
punpcklwd
jne
imul
jl
push
shrb
add
cmp
mov
les
xor
rcl
and
add
xor
add
inc
push
mov
jo
ret
mov
adc
fs
push
idivb
xor
test
cld
and
or
incl
ret
mov
push
jle
sahf
or
enter
sbb
or
push
inc
mov
scas
cld
sub
xchg
sbb
cs
cs
or
add
rolb
inc
sbb
les
shll
sarb
pop
push
inc
sub
shl
mov
jns
xchg
nopl
inc
dec
push
dec
cmp
push
mov
sar
push
add
pop
or
aad
jbe
xor
or
test
or
mov
adcl
dec
dec
inc
loopne
sub
cwtl
ljmp
fs
sbb
and
outsl
push
out
add
xchg
rclb
and
pop
mov
jg
insb
jae
push
subb
sbb
loope
imul
frstor
add
aaa
pop
bound
mov
cltd
or
mov
cmc
adc
jmp
pushl
lds
lahf
mov
mov
cmp
add
jmp
jns
or
xlat
mov
dec
je
xchg
push
in
test
xor
dec
cmp
sarb
imul
cmp
push
push
jne
inc
sbb
movb
movsb
mov
addl
adc
dec
jmp
xor
popa
sbb
nop
sub
aam
aas
and
js
adc
lods
cltd
jg
outsb
inc
ffreep
push
sub
mov
push
push
push
cmp
cmpsb
lret
bound
sub
add
add
push
jl
push
subl
xor
or
add
add
dec
dec
and
rolb
sti
jg
aas
daa
inc
scas
push
jle
das
sbb
insb
inc
sbb
pushf
sbb
mov
and
sbb
pusha
bound
push
push
adc
test
mov
adc
pop
pop
jg
dec
or
lret
fs
push
imul
pop
jl
mov
leave
test
in
xchg
leave
xchg
or
fstl
sub
test
loopne
sarl
mov
jne
nop
sbb
sub
jb
int3
add
inc
inc
sbb
cmp
test
mov
imul
mov
add
aaa
and
push
clc
add
loopne
mov
das
das
mov
outsl
mov
es
gs
pop
insl
popf
arpl
cmpl
clc
dec
pop
adc
inc
or
sbb
or
and
ret
ret
jg
test
popa
mov
and
lea
inc
xchg
jbe
cmp
mov
sub
addr16
andl
popa
sub
fstpl
or
add
mov
ds
inc
cmpl
inc
adc
jp
push
pop
cmp
add
jne
aad
ret
mov
or
jno
cltd
mov
loope
inc
aaa
out
addr16
js
es
mov
or
or
test
sbb
mov
mov
dec
push
test
mov
insb
inc
js
outsl
push
ja
cwtl
stos
pop
ljmp
loope
push
dec
add
mov
pop
rcr
ret
mov
push
push
mov
addb
cmp
in
pop
je
cld
push
inc
aaa
pop
push
inc
cmpl
inc
rolb
shll
mov
jmp
cmp
or
ja
popa
xchg
je
mov
dec
jnp
sbbb
mov
sbb
sbbb
mulb
lock
les
add
inc
shrb
inc
cmpsb
dec
jge
cmc
add
jl
cltd
mov
cltd
xor
add
pop
adc
test
enter
leave
pop
mov
inc
adc
test
or
jnp
jno
push
adc
les
or
sbb
cmp
inc
xor
and
and
jbe
mov
mov
cmp
sbbl
hlt
dec
mov
push
icebp
xlat
hlt
sub
inc
fidivs
adc
fsubl
or
mov
push
test
jge
test
out
cmp
aas
mov
cli
filds
aas
sbb
dec
pop
je
pop
cmc
and
lods
dec
xchg
mov
rorb
ret
add
and
mov
add
pop
push
sbb
cs
filds
xor
push
cmp
jl
pop
and
fmull
mov
adcb
add
std
orb
fucomp
mov
inc
jne
clc
push
mov
sbb
mov
pop
push
ljmp
jno
or
jge
xor
or
or
pop
stos
repnz
dec
dec
dec
mov
adc
leave
mov
mov
stos
mov
mov
adcb
jg
pop
popf
js
into
adc
or
movsb
pushf
xor
xlat
push
repz
loopne,pt
test
or
push
xchg
xlat
sti
mov
sbb
jne
jmp
pop
xlat
in
rcll
pop
ss
jl
sbb
dec
lret
mov
and
dec
scas
pop
jle
xchg
xchg
push
cs
out
xor
inc
push
sub
or
das
subl
rcll
or
cmpsl
lea
aam
test
push
mov
push
jle
loopne
cmp
push
jbe
mov
call
lock
adcl
sbb
test
pop
repz
outsb
pop
shl
repz
aam
call
adc
in
js
add
lahf
loopne
cmpsb
ds
sbb
decl
adc
dec
out
js
insl
jg
adc
orl
sub
pop
hlt
sbb
pushw
cmp
ja
or
rolb
jge
in
or
push
sub
pop
and
jb
std
jb
lds
or
pop
dec
js
jne
es
cmp
notl
shr
movsb
ljmp
dec
add
call
or
lea
shl
fs
sbb
lret
stos
push
sbb
mov
push
mov
ljmp
dec
and
imul
mov
cmpl
mov
adc
incl
cmp
je
cmp
adc
cmp
jb
testb
lahf
movsb
js
testb
xor
adc
add
and
jge
push
inc
jnp
cmp
push
movb
in
test
pop
je
ret
jns
lods
clc
out
divb
cmp
jbe
mov
push
or
cmpsb
in
push
xor
les
pop
push
pop
xchg
mov
rcl
jmp
das
xor
push
sti
sarb
xor
push
push
mov
or
mov
push
sub
sbb
insl
js
inc
cmp
test
shlb
fstpl
jmp
dec
jecxz
adcl
outsl
or
push
imul
adc
sub
sbb
mov
or
adc
push
ret
jmp
mov
fsubs
sarb
repz
lsl
jmp
push
pop
push
push
inc
shr
fidivs
shr
rcr
or
div
pop
dec
adc
inc
std
std
mov
jb
cmp
or
cmp
or
lahf
cmpsl
add
xor
and
adc
or
push
sub
pop
lret
jo
jle
iret
lock
push
add
and
ret
adc
cld
jecxz
or
push
xor
jg
je
iret
jne
mov
mov
pop
xchg
fiaddl
daa
push
add
mov
xchg
dec
fistps
pop
pop
mov
cmp
inc
pop
dec
sbb
push
dec
add
sbb
test
push
cmp
xor
fiaddl
push
stc
in
sub
out
mov
inc
insl
push
mov
sub
test
ret
popa
cmp
test
push
cmp
adc
popf
out
inc
adc
adc
xor
les
add
rol
push
lea
sbb
inc
stos
push
lds
andl
dec
mov
push
mov
cld
sbb
les
sub
add
pusha
loop
inc
pop
push
mov
adc
stos
mov
adc
sub
in
xor
push
call
sahf
and
mov
sub
xor
std
push
pop
adc
sahf
je
xchg
cli
fcmovnu
inc
test
lea
lea
or
dec
cmp
popf
aam
mov
insb
inc
aad
out
btc
mov
popl
adc
or
sbb
shlb
inc
loop
enter
sbb
add
or
adc
xorl
mov
ret
mov
into
imul
sub
sbb
push
cmp
mov
and
adc
sbb
push
das
std
xor
rcrl
ljmp
push
inc
cmp
xor
out
cli
test
call
cmp
inc
lret
xor
mov
add
rorl
xor
outsl
pusha
in
mov
pop
mov
or
mov
enter
ss
daa
daa
daa
sub
xor
daa
daa
daa
sbb
cmp
daa
insl
dec
push
inc
and
inc
cmovs
dec
dec
dec
push
push
pop
xchg
xchg
xchg
or
xchg
xchg
xchg
push
rclb
xor
sbb
mov
xchg
cwtl
leave
and
dec
pushf
mov
xor
or
cmp
out
cmp
ss
sbb
pop
xor
stc
and
jle
or
dec
dec
fwait
nop
call
test
shl
sbb
rorb
sbb
clc
and
inc
inc
adc
std
jnp
mov
and
pop
fistl
mov
sub
xchg
adc
scas
xchg
mov
insb
jg
ret
sbb
xor
rorb
or
data16
and
es
push
mov
or
push
movsb
in
test
cmp
loopne
movb
mov
daa
movsl
dec
add
sbb
and
push
pop
movsb
mov
add
and
jp
inc
aam
pop
lock
aam
rcrb
pop
dec
xor
xchg
inc
js
cs
and
add
outsl
or
and
jo
xchg
dec
inc
pusha
lea
test
fcoms
rorb
pop
inc
lock
cmp
insl
push
lea
sbb
cmp
sbb
dec
ret
xor
in
arpl
ret
into
dec
movsl
mov
cli
cmp
gs
lea
push
jle
arpl
sbbl
jecxz
mov
ficompl
xor
dec
mov
mov
daa
push
fcompl
shlb
pop
inc
sub
sti
je
push
pushf
rcrb
mov
and
icebp
dec
cmp
xlat
test
and
or
scas
xor
dec
stos
mov
add
gs
jne
xor
repz
add
and
add
int3
and
in
iret
pop
iret
imul
pushf
and
loopne
and
mov
adc
sbb
stos
adc
adc
outsl
out
jl
adc
sub
dec
fiadds
mov
mov
jb
adc
mov
mov
mov
push
loopne
cmp
inc
movl
lcall
sub
decl
rorb
inc
imul
int3
push
lds
aam
pop
jo
sub
pusha
loop
sub
or
add
in
pushl
push
mov
push
mov
jmp
enter
imul
insl
xor
aad
ss
add
loope
test
sub
subl
out
pop
push
xor
aaa
jno
notb
xor
fisttpl
xor
sbb
mov
sub
mov
ja
rcrl
ret
mov
jne
clc
loopne
and
push
and
call
in
cmp
xor
punpckldq
fcomps
lcall
loopne
push
adcl
lock
inc
push
lea
xchg
sarb
out
mov
add
sar
xchg
out
cmpsl
mov
or
xchg
inc
sbb
negl
insb
js
in
jne
aad
adc
pop
ret
adc
adc
fsts
xchg
shll
jmp
dec
adc
test
fisttps
pushl
mov
xor
ds
pusha
dec
sub
je
test
ret
pop
sub
cmp
mov
pop
mov
xchg
inc
mov
fisttpll
pop
addb
jmp
cmp
sub
rcrb
sub
cld
out
imul
hlt
mov
lods
or
subb
cmp
add
pop
or
enter
push
lret
push
cmp
in
ficoms
sbb
cmp
dec
inc
lea
adc
leave
add
inc
push
sbb
inc
loop
lods
pop
lea
insb
jnp
mov
jo
fcoms
dec
adc
jl
rcll
adc
dec
sub
or
sarl
cmp
test
cmpl
fldenv
pop
out
lods
push
or
push
add
loopne
inc
mov
mov
sbbl
lock
rorl
add
add
inc
je
outsl
sub
push
push
jmp
inc
lods
lods
pop
add
lock
or
test
sbb
test
mov
aad
cmp
sbb
fistps
cmp
in
stos
xchg
adc
push
sysenter
sbb
xadd
inc
dec
add
mov
adc
repz
lret
ds
jmp
xchg
mov
cmc
mov
sub
sub
jg
fwait
test
jae
mov
adc
cld
shr
cli
or
inc
mov
inc
fmuls
mov
sub
mov
fsubrs
sub
subl
inc
pop
pop
add
mov
sbb
out
xor
daa
jmp
ss
or
pushl
rcll
lods
in
movsl
inc
cs
dec
add
sub
rclb
sub
lods
push
orl
pop
data16
loopne
cmp
and
nop
lret
mov
dec
leave
sub
pop
add
enter
jl
push
dec
dec
stc
pop
fdivrs
mov
mov
add
add
adc
cmp
sahf
pop
or
cmpb
mov
fstps
push
pop
lock
scas
mov
mov
sub
adc
mov
lods
xor
ret
sub
xor
addb
jo
lret
jmp
push
lock
repz
movsb
bts
fistpl
push
xorb
cmp
sbb
cltd
sub
mov
xchg
pop
mov
lcall
xor
fsts
scas
inc
jne
divl
fidivs
cmp
mov
adcl
inc
cmpb
ret
adc
and
sbb
xor
cmp
jmp
xor
push
pop
mov
push
push
test
test
sbb
cmp
leave
je
je
cmp
pop
scas
icebp
movsb
cmpsb
add
sub
cmpsl
or
and
or
js
sbb
les
jle
pop
adc
push
fisubrs
xor
add
sbb
mov
jno
mov
pop
ret
dec
jmp
unpckhps
and
repz
sbb
or
cmpsb
push
sbb
mov
cwtl
jp
xor
inc
add
ss
and
mov
adc
mov
ficoms
add
mov
mov
xor
push
and
mov
sbb
sbb
scas
scas
bound
and
out
fcmovnbe
stc
mov
push
pop
inc
xor
ret
mov
out
pushf
cli
sbb
or
inc
pop
mov
hlt
insb
out
into
fldl
mov
jl
js
std
into
inc
jg
xchg
and
aam
fwait
cmpb
out
jb
xor
cmpl
cmp
pop
repnz
into
sub
sub
orl
and
add
dec
ljmp
push
lret
push
loop
pushf
pop
mov
movsb
gs
xorb
push
gs
pop
fs
jle
cmp
sbb
lock
jl
shlb
adc
jbe
jge
jge
addr16
pop
mov
jne
std
or
adc
and
dec
cmpsb
ds
push
jne
mov
mov
in
ret
mov
lea
pop
pop
out
push
pop
lods
pop
int3
sarb
xchg
and
mov
and
cmp
mov
adc
xchg
add
xchg
xor
clc
je
add
add
dec
cmp
adc
lcall
pusha
in
mov
lock
nop
js
xchg
test
scas
dec
push
in
ljmp
shr
push
push
and
rcrl
inc
cmp
shlb
test
xor
js
pop
sbb
push
add
popf
popf
dec
sub
popa
add
bound
sub
add
pop
xchg
dec
cmp
xlat
adc
addl
shlb
mov
mov
or
inc
test
xor
dec
test
js
dec
sti
inc
jmp
xor
push
icebp
xor
jecxz
fdivl
xchg
mov
loop
jle
xor
adc
int
and
or
cmpsb
push
adc
or
xor
jb
cmp
add
out
push
inc
sbbb
fcoms
sbb
frstor
jnp
push
gs
lahf
loopne
sub
rclb
les
mov
shrl
inc
outsl
jbe
out
push
gs
xchg
sbb
sub
rorb
xchg
xchg
add
dec
int
adc
mov
jmp
or
lret
test
pop
dec
inc
xor
push
sbb
jno
xor
push
nop
dec
ja
mov
sbb
js
pop
es
sbb
sbb
adc
pop
sub
inc
arpl
sub
sbb
fadds
insl
push
notb
mov
lock
orl
dec
scas
xor
and
lahf
mov
pushf
cld
xchg
int3
or
rcr
roll
cli
aas
repnz
rcrb
ret
mov
adc
inc
mov
rorl
jl
xor
jle
mov
adc
data16
or
mov
pop
sbb
lods
mov
fiadds
or
sbb
or
cmp
inc
data16
jmp
inc
sbb
dec
int3
adc
push
lods
dec
adc
or
sbb
add
inc
mov
pop
call
dec
or
ror
jo
stos
adcb
or
sbb
jmp
fwait
stos
sub
dec
pop
inc
sbb
or
push
imul
sub
mov
mov
xor
dec
push
popf
pushf
pop
sub
je
push
popf
ds
cmp
add
adc
dec
mov
jmp
push
data16
pop
idiv
lret
mov
ds
or
lods
adc
dec
inc
dec
data16
adc
or
or
shll
lahf
sub
or
inc
jo
bound
push
mov
sti
mov
lret
and
and
or
iret
adc
aas
mov
shll
dec
xor
adc
or
cmp
jmp
loop
es
lret
and
xor
dec
fadds
test
aaa
cmp
test
adc
test
les
and
xlat
adc
mov
mov
xorb
or
xor
bound
mov
and
outsl
inc
mov
incb
jmp
sbb
pop
mov
and
mov
and
int3
mov
and
jecxz
jge
add
popa
lcall
sub
pop
push
and
or
cs
xor
mov
nop
pusha
and
sbb
add
fstps
aas
pusha
mov
pusha
loope
pop
sub
fadds
dec
and
mov
repnz
adc
fnstsw
sbb
pusha
insl
adc
push
addr16
in
adc
push
fimuls
es
adc
sti
add
fists
test
fisttps
or
mov
add
dec
jne
lods
stos
mov
jmp
push
mov
xor
adc
mull
dec
fsubrs
push
andb
mov
pop
xorb
sbb
jmp
push
and
mov
add
adc
icebp
cmpsb
xor
inc
push
flds
fisttpll
xor
pusha
fstpl
push
adcb
insl
jmp
stos
mov
std
out
mov
ret
inc
push
rcrb
cmp
lock
inc
fistpl
pop
sub
fsubp
imul
or
pusha
xor
lret
mov
mov
or
pop
xchg
push
push
jle
inc
aaa
sbb
out
fildl
dec
out
rcr
sbb
loopne
add
les
jnp
jmp
sub
sub
jmp
sub
sbbl
sub
fldcw
and
test
int3
adc
imulb
flds
add
pop
push
fadd
dec
jnp
sub
or
rclb
jmp
in
mov
add
jge
fnstsw
cmc
add
repz
xlat
xor
pop
mov
or
rorl
repnz
sbb
insb
jmp
mov
xchg
push
test
enter
aas
not
insl
in
sbb
jp
dec
in
sbb
sbb
shl
out
mov
jp
push
sahf
jmp
pop
cmovae
and
add
std
test
and
mov
and
mov
pop
sbbb
or
jbe
jle
push
add
xchg
sub
and
icebp
pop
sub
pop
or
inc
jno
ret
out
dec
fwait
pop
push
faddl
add
push
pop
movzbl
add
dec
mov
push
ljmp
sbb
movsb
sbb
or
or
adc
xor
push
adc
rcrb
lods
or
movl
jle
xor
test
cwtl
mov
add
mov
mov
add
lods
fsubrp
fwait
jno
mov
dec
inc
and
inc
cmp
sbbl
xor
inc
xchg
loope
ficoms
pusha
sub
or
imul
push
les
jg
idivl
fcompl
pop
inc
add
in
mov
imul
testb
add
and
outsb
or
sar
cmp
pusha
and
ja
mov
popa
out
mov
xor
inc
lock
mov
adc
and
mov
jg
jae
pop
ret
aad
fimull
nop
inc
int3
pop
cld
test
out
sbb
cs
loop
rolb
roll
push
cs
xchg
scas
shl
jne
jb
cmp
mov
gs
mov
ja
mov
out
cmp
mov
sbb
or
adc
push
clc
jecxz
ret
fadds
into
mov
mov
andl
in
pop
cwtl
jmp
xchg
cli
test
pmulhw
or
dec
adc
sbb
shll
pusha
dec
mov
push
or
lods
inc
add
or
push
out
mov
sbb
and
adc
inc
push
xlat
cmpl
cmpsl
pop
jnp
jl
sbb
sub
shr
mov
incl
sub
dec
push
mov
push
fisttpll
andl
sbb
xor
fnclex
and
int3
or
pop
shll
and
xor
jnp
sbb
or
push
add
pop
mov
inc
adc
fldt
test
adc
fldl
fwait
sbb
les
adc
fld1
fdivp
jb
out
xchg
pop
test
or
stos
mov
dec
roll
sti
imul
mov
rolb
adc
mov
push
repnz
and
mov
jmp
and
xchg
sub
shl
mov
sti
jbe
out
add
push
mov
lods
cmp
sbb
jmp
add
xchg
imul
data16
and
shlb
adc
pusha
das
lods
mov
adc
insl
faddl
lock
mov
test
jns
push
imul
jae
add
cmp
push
fcoml
dec
jae
adc
inc
js
test
jo
pop
nop
faddl
push
test
js
xchg
push
and
dec
cmpsl
test
xor
call
sti
jbe
push
push
xor
test
pop
mov
fbstp
mov
inc
xchg
adc
enter
insb
inc
adc
loope
or
mov
lods
inc
add
lods
stos
xor
push
nop
or
lea
mov
dec
cmpw
lcall
repz
pop
icebp
inc
inc
ret
adc
pop
and
loope
push
outsb
and
shlb
jp
insl
andl
loopne
stos
or
cmpsb
add
pop
sub
in
sub
push
xorb
push
mov
ret
sub
scas
cwtl
pop
test
jne
lret
cs
add
repnz
jp
jbe
stos
stos
repnz
pop
pop
loopne
and
push
push
jge
or
sub
xor
mov
dec
cmp
pop
add
mov
push
shrl
mov
dec
xchg
loopne
inc
insl
or
push
lock
inc
shl
les
sbb
test
fnstsw
aam
loop
rolb
adcl
sbbl
dec
cltd
insb
mov
and
mov
out
mov
inc
insl
push
lcall
lea
and
sbb
sub
cmp
sbb
out
cmp
enter
fldt
add
incb
jae
dec
mov
adc
mov
add
sub
movsb
push
and
or
or
add
test
push
out
inc
sub
in
shll
and
or
fwait
add
mov
sarl
mov
aam
or
movsl
cmp
mov
dec
sbb
sub
rorb
je
out
aas
pop
sub
sub
not
rcrb
cli
sbbb
iret
push
ds
mov
or
and
shl
mov
xor
and
adc
out
mov
in
lock
or
adc
xchg
lds
inc
int
jmp
loop
mov
add
xor
test
in
loop
push
test
add
mov
ja
pop
lea
mov
cli
pop
push
cmp
mov
data16
push
cmp
add
pop
mov
subl
ror
dec
jns
inc
lock
push
rorl
ret
popa
or
cmpsl
addl
jae
aas
lock
aaa
cmp
mov
ret
imul
xchg
mov
mov
jl
pop
andl
stos
stos
mov
into
out
mov
jl
mov
out
and
pop
dec
into
and
inc
lcall
rorl
es
dec
xchg
push
cli
scas
shl
nop
sub
rorb
or
mov
add
add
or
in
adc
push
xchg
mov
in
add
xchg
loop
stc
and
adc
mov
pop
xchg
repnz
pop
idivl
add
mov
in
notb
add
add
and
add
pop
stc
test
clc
add
inc
xchg
xchg
mov
or
jl
or
pop
mov
scas
inc
push
and
add
sbb
aam
add
sahf
xor
push
adc
lock
nop
into
mov
xchg
cmpsb
imul
mov
sbb
or
or
ja
push
lods
mov
or
scas
push
outsb
or
loop
jne
inc
jmp
mov
sub
inc
clc
addb
ja
cs
outsl
mov
jmp
ja
push
or
mov
fs
mov
push
cmp
into
add
ret
das
xchg
call
add
add
adc
mov
lahf
std
add
sbb
mov
jmp
or
sub
mov
or
push
adc
push
adc
cmp
jle
mov
cmp
push
xor
insl
jl
inc
popa
push
jmp
dec
push
cmp
nop
clc
jl
jbe
xor
iret
loopne
popf
dec
sub
cli
push
rolb
dec
push
fnstcw
jae
mov
ret
push
inc
sbb
inc
mov
mov
loop
pop
mov
fnsave
mov
nop
add
jne
out
mov
adc
jae
imul
sbb
or
jge
jmp
and
scas
inc
jno
add
outsb
mov
ficoms
scas
out
outsb
js
pop
push
sub
clc
inc
ja
gs
orl
imulb
and
push
sub
cmp
mov
sbb
push
jbe
sub
mov
ljmp
mov
in
jge
mov
mov
jg
xchg
xchg
or
js
adc
push
add
add
inc
testl
xchg
xchg
push
mov
repnz
mov
mov
mov
je
cli
and
sub
insl
popa
mov
stc
push
adc
notl
je
or
jecxz
add
pushf
jmp
fsts
ret
out
add
mov
xor
push
mov
dec
popf
popa
loop
loopne
daa
jne
and
add
shlb
push
cwtl
jge
neg
add
mov
orb
movsb
sub
cmp
mov
mov
mov
mov
sub
jp
cmp
fstp
in
xchg
push
enter
mov
xor
adc
push
adc
add
mov
test
mov
mov
sarl
push
add
dec
inc
mov
sbbl
movsb
adc
add
mov
dec
mov
cmpb
jl
rolb
mov
call
outsl
fs
mov
mov
ret
pop
xorl
out
mov
nop
shrb
pop
xor
mov
out
cmpsl
sbb
ja
stos
aad
mov
enter
clc
les
add
inc
int3
jne
mov
and
ss
shll
into
dec
push
inc
into
jne
inc
or
add
cmp
cmp
jne
hlt
add
dec
mov
add
jne
mov
mov
add
sub
or
add
adc
mov
add
mov
push
push
scas
sbb
push
or
dec
cld
mov
dec
sub
lock
ja
cmpsb
mov
push
data16
subl
call
dec
cmp
mov
pusha
or
xchg
add
dec
inc
xor
aaa
test
js
scas
push
inc
shll
add
xor
add
or
shr
or
mov
push
rcll
jg
idivl
mov
jg
or
adc
inc
mov
popf
test
push
add
idivb
push
pop
adc
out
ljmp
inc
loopne
shrl
shl
shr
or
mov
mov
adc
sahf
dec
arpl
jne
cltd
xchg
test
insb
mov
mov
push
push
ja
cmp
mov
sbb
sub
insl
add
or
jge
cmp
mov
pop
add
ficompl
rclb
test
aad
jg
fiadds
push
call
bound
mov
and
fs
leave
lcall
mov
popa
push
shr
dec
add
ja
jmp
test
or
sub
test
push
into
jmp
sbb
xchg
fldl
dec
and
les
adc
pop
or
pop
mov
rclb
jmp
sub
add
jo
fiadds
sub
data16
add
adc
les
bound
inc
push
pop
push
dec
rclb
xor
pop
pop
mov
inc
add
imul
lret
or
sub
out
test
mov
jns
push
iret
outsl
hlt
jmp
inc
incb
loope
test
pop
jne
cmp
dec
pop
pop
ret
inc
scas
xchg
push
mov
cmp
les
xchg
pop
sub
insb
pop
cmp
in
adc
or
push
inc
cwtl
dec
pop
sbb
xchg
adc
mov
cs
or
ss
clc
jg
sti
cmp
je
or
out
mov
dec
cmpb
je
mov
add
sbb
sbb
add
or
mov
shlb
out
add
out
call
test
gs
arpl
jae
lods
adc
je
out
clc
adc
cmp
orl
push
mov
xor
int3
popf
inc
loope
mov
sti
repz
mov
dec
mov
xor
sub
jno
xchg
xlat
mov
ljmp
pop
fsubrs
call
testb
sub
push
sbb
dec
xchg
mov
jmp
outsl
ret
add
fnsave
jbe
or
add
push
repnz
push
cmp
mov
shll
test
dec
setg
sub
in
clc
add
fdivr
inc
add
aam
scas
aas
sub
add
or
movb
xchg
jle
add
pop
iret
add
ficoml
dec
pop
xchg
jecxz
mov
es
sbb
pop
add
lcall
jmp
sub
xor
rcr
add
add
in
push
das
mov
xor
jg
pusha
sub
mov
dec
sub
mov
fisubrl
les
sub
adc
jl
negb
xchg
lret
cld
xor
push
or
bound
add
testb
addb
or
ja
add
ret
mov
dec
xor
sub
add
and
xor
icebp
aaa
or
dec
adc
mov
out
sbb
shlb
andl
mov
xchg
aam
sub
adc
fcoml
into
lahf
adc
mov
cmp
xor
mov
add
add
sbb
xchg
adcl
imul
inc
mov
jl
lods
add
add
cmp
push
mov
xor
mov
shr
jge
adc
jecxz
add
pop
or
fldl2t
call
movb
adc
je
jl
call
fcoml
sub
xchg
roll
dec
sbb
add
adc
sub
ret
lret
test
or
fwait
or
add
add
out
pop
loope
insb
or
add
xorb
dec
push
or
ret
push
pop
push
or
ss
pop
jo
in
push
xor
push
mov
push
loopne
js
icebp
pusha
test
cmc
mov
xor
leave
and
add
pop
pusha
fsubs
and
enter
mov
dec
jecxz
and
fwait
mov
fistpl
pop
aas
mov
jecxz
mov
jg
ret
daa
xor
or
jne
mov
cmp
sahf
movbe
mov
or
out
scas
test
xor
bswap
or
inc
popa
and
dec
and
push
add
or
xor
add
outsb
and
xchg
cltd
popf
sbb
sub
adc
es
popa
xchg
inc
movswl
les
rcll
xor
add
mov
ret
mov
add
mov
shrd
push
jle
loop
push
ss
ss
xor
push
cmpsl
clc
mov
imul
stc
xchg
stc
inc
into
in
add
dec
jmp
xchg
clc
sub
mov
mov
or
jmp
incb
adcl
push
add
or
add
into
xor
xor
jo
call
out
and
cld
xchg
mov
push
pop
sbb
js
jg
push
fildll
mov
inc
jmp
cmp
pop
shl
fidivrl
rorl
mov
out
inc
shll
mov
sbb
and
and
adc
xlat
sbb
lods
jb
in
lods
cmp
inc
dec
pop
add
jb
or
sbb
sarb
test
add
jae
stc
mov
or
sub
mov
push
popa
xor
pop
sub
aam
xor
sbb
and
mov
loop
call
mov
add
and
add
pop
rcrb
lods
add
push
lock
inc
sub
mov
cmp
and
jge
mov
jne
or
cmp
jl
popaw
inc
add
push
mov
pop
xor
shrb
or
mov
orb
jo
je
cmp
je
and
or
je
push
rolb
jne
cmp
clc
xchg
js
or
inc
lret
jbe
adc
xor
inc
test
lea
sbb
or
dec
fwait
sbb
enter
push
adc
insl
push
jmp
insl
cmp
cld
cld
jl
or
or
lock
les
sbb
loop
mov
pop
je
jge
std
add
pop
or
pop
outsb
loopne
mov
in
fs
sahf
add
je
inc
je
pusha
sbb
in
jmp
xor
enter
adc
dec
sub
add
push
or
or
cmp
pop
or
mov
movb
add
adc
mov
sti
mov
fdivl
fmull
insl
push
pop
clc
fstps
or
and
add
pop
push
rcll
add
jecxz
rol
ret
add
dec
add
adc
sbb
arpl
aaa
lods
sub
xor
dec
sbb
or
inc
add
cmp
add
cmp
jmp
inc
sub
jb
sbb
cmc
pop
test
cmpb
jne
jp
sbb
dec
inc
dec
add
dec
imul
inc
cltd
dec
mov
jmp
jmp
sbb
stos
adcb
push
cmp
fcompl
sahf
xchg
pop
mov
lahf
sub
cmpsb
mov
mov
lahf
dec
push
sub
je
out
fiadds
or
lcall
aaa
movsl
pop
cltd
sar
mov
aaa
sub
mov
nop
or
cmp
mov
jbe
sub
xchg
ficoms
sub
mov
mov
shrb
pop
inc
mov
adc
xor
jmp
insl
inc
cld
mov
mov
cmpl
pop
int3
movb
cmp
mov
ret
ljmp
test
and
inc
in
mov
push
jl
pop
mov
inc
dec
cmp
or
add
cmp
repz
test
lret
xchg
mov
or
mov
jb
mov
fdivs
jge
cmp
pusha
stc
loope
lcall
pushf
jecxz
rol
es
cmp
test
or
sub
mov
mov
xor
out
pop
cmp
out
pop
sbb
icebp
mov
sub
pop
nop
adc
sub
add
xor
xchg
subb
or
adc
push
or
cmc
jmp
testb
je
push
ljmp
adc
test
addb
sbb
jb
xor
and
adc
push
cmp
jne
pushf
aam
test
adc
add
mov
divl
sbb
mov
mov
dec
rcrb
sub
sub
test
in
inc
subl
outsl
mov
mov
popa
xor
sbb
push
popa
bound
push
dec
dec
movsl
movsl
adc
add
mov
adc
dec
push
add
lods
add
jg
mov
cmp
jecxz
push
push
mov
xchg
or
jle
addr16
jo
jne
cmc
iret
mov
cwtl
push
jp
jp
bound
fs
mov
rcrb
push
or
pop
subb
pop
je
dec
xchg
push
inc
xrelease
rolb
arpl
add
ret
inc
leave
dec
mov
or
jge
notl
mov
add
pop
mov
or
pop
sbb
xlat
sbb
das
add
jl
or
dec
fiadds
arpl
std
mov
xor
incb
push
inc
jmp
and
add
sub
test
push
and
ss
es
stc
inc
inc
test
push
sub
sub
push
cmp
movsb
add
orb
or
mov
jmp
mov
clc
insb
loopne
cld
jo
mov
sbb
and
filds
dec
sbb
pop
jmp
fs
rcrl
inc
divb
in
adc
repz
cmp
and
lock
lock
jmp
or
jge
jo
xor
jge
inc
cwtl
or
pop
mov
aaa
test
mov
pop
rorl
dec
movsb
cmp
sub
jmp
adc
leave
mov
add
xchg
test
rorb
std
test
data16
ljmp
ja
pop
push
jnp
jno
fcoml
xchg
fiadds
adc
or
cmp
adc
aad
push
inc
cmpsb
sbb
mov
adc
mov
sub
lea
cwtl
fwait
fs
daa
push
ljmp
filds
add
lret
xchg
shll
insb
loope
adc
into
loope
xor
adc
add
pop
xor
jmp
hlt
dec
inc
dec
pushf
pop
mov
and
repz
push
and
push
cs
daa
cmc
outsl
xchg
cmp
aaa
cmp
adc
and
cmp
inc
inc
pop
push
pop
ret
xor
test
mov
arpl
xchg
mov
xchg
mov
add
jg
dec
cmp
lea
or
xchg
adc
out
pop
add
or
pushf
sub
movsb
add
fcmovb
jmp
shr
or
mov
add
add
or
bound
scas
push
add
aad
in
stos
or
sbb
pop
push
or
popf
add
add
int3
cld
push
pop
pop
or
clc
fnstcw
xchg
shlb
enter
mov
lret
add
and
or
lea
mov
shr
cmp
mov
js
shll
lods
or
mov
mov
add
xor
and
cmp
nop
rorb
dec
cmp
mov
iret
adc
mov
fmuls
clc
inc
arpl
imul
pop
cmp
xor
es
ficoms
pop
cwtl
add
adc
iret
shl
xorl
push
mov
leave
cmp
test
add
ljmp
mov
or
stos
imulb
or
pop
cmp
sbb
xchg
or
mov
or
sub
or
cmp
adc
mov
in
ficoml
fdiv
idivl
mov
insb
inc
pop
mov
in
aaa
negb
add
xor
cmp
test
add
sub
jne
add
call
pusha
push
ljmp
adcl
xor
test
aaa
lret
mov
push
dec
mov
pop
cs
fstl
adc
inc
pop
add
push
add
jle
and
pop
cmp
nop
mov
lret
fidivl
pop
je
cmp
lock
mov
sbb
aas
xor
cmpb
stos
ret
fdivl
cld
inc
mov
addb
xchg
push
sub
fsts
adc
bound
mov
push
mov
push
push
fsubs
test
inc
adc
sarl
fxch
and
imul
mov
mov
sub
and
adcl
mov
in
add
dec
add
out
aad
stc
and
enter
add
pop
adc
into
jne
mov
pop
ja
add
shll
pop
inc
fisttps
test
je
mov
dec
jo
or
ljmp
pop
data16
or
cmp
or
add
mov
rclb
jne
outsl
or
push
sbb
ljmp
jp
push
popa
hlt
aam
xchg
fs
push
pop
and
add
or
sub
pop
int3
add
fldcw
fsubr
imul
inc
out
or
test
neg
neg
sbb
sub
repz
inc
sbb
fnstenv
pop
aad
adcl
insb
insl
into
jl
push
inc
and
fsts
fcomi
sbb
nop
int3
gs
sbb
jmp
xchg
daa
pop
pop
pop
mov
stc
inc
jae
or
jae
lods
rorb
jge
push
ret
loope
shr
mov
adc
mov
pop
idiv
and
cld
je
jp
loop
push
mov
or
rol
push
cld
add
adc
mov
pop
lds
inc
int
rcrb
into
pop
insb
add
jno
and
adc
ss
jne
xchg
cli
sbb
call
gs
int
add
into
jbe
jns
aas
jp
fistl
sbb
pop
xchg
cmp
dec
xchg
pushf
adc
push
or
adc
call
inc
or
jo
sub
xor
cmpxchg
fcoms
daa
push
adc
cwtl
subl
stos
mov
shr
gs
inc
orb
stos
or
push
iret
cs
fisubs
cltd
mov
ss
dec
pushl
mov
jb
out
ss
mov
xor
push
jge
pusha
test
adc
imul
cmp
testb
mov
mov
push
sub
leave
je
jmp
loope
mov
inc
mov
mov
scas
es
mov
outsl
cmpsb
inc
ret
test
mov
dec
mov
ja
add
cmp
adc
cmp
jne
xor
in
dec
xchg
xor
adc
mov
inc
jb
idivl
pop
jbe
loope
push
pop
add
ljmp
mov
inc
pop
pop
xchg
mov
adc
xor
in
testb
fbld
xchg
outsb
sbb
outsl
movsb
push
inc
or
cld
add
jmp
imul
sbb
je
fildll
push
xor
jl
adc
inc
ljmp
mov
pop
and
sarl
push
sbb
sub
testl
loopne
push
jo
int3
xor
fisttpll
xor
aad
add
sarl
clc
and
push
or
mov
jne
int
imul
femms
sub
pop
inc
push
adc
xchg
or
xchg
movsb
and
xchg
pop
imul
dec
int3
sub
pop
test
dec
sbb
xchg
mov
int3
lea
adc
sbb
nop
lret
inc
and
pop
nop
jg
mov
iret
repz
push
rcl
rcl
aad
cmp
repz
xlat
fcomp
dec
sub
adcl
in
data16
inc
add
jmp
or
repnz
inc
xchg
jl
aam
idivb
mov
or
adc
add
add
push
push
push
aam
loope
mov
lcall
adcl
xchg
mov
je
test
mov
push
icebp
adc
in
stc
mov
das
or
push
loopne
adc
inc
add
sub
push
sbb
test
sub
mov
imul
lahf
and
sbb
dec
lea
or
mov
inc
mov
mov
or
sbb
push
and
mov
mov
pushf
cmp
shlb
and
mov
imul
addr16
sbb
stos
pushf
push
jp
cmp
js
adc
les
outsb
or
or
dec
sub
fcmovne
dec
push
or
fsubrs
lock
pop
ljmp
or
icebp
fcmovu
popa
mov
and
lea
pop
sbb
movsb
subl
and
xchg
push
and
icebp
loope
and
imul
mov
divl
in
mov
dec
lods
loopne
and
mov
inc
or
mov
mov
mov
jne
mov
rcr
jne
add
sub
dec
rolb
push
mov
ds
mov
jl
loopne
dec
xchg
mov
mov
mov
cwtl
hlt
push
int
push
sub
andl
push
mov
ret
movsb
xor
inc
insb
sub
inc
xchg
cwtl
test
jge
jl
add
xor
inc
test
rol
add
or
jle
jle
jne
dec
inc
test
subl
rorb
dec
jl
cmp
cmp
or
gs
negl
push
lret
adc
xchg
fs
call
lods
jge
push
call
clc
out
push
mov
or
dec
xchg
add
adc
lock
iret
and
lock
cmpsb
repnz
cli
adc
sahf
lret
cli
div
jno
loopne
xchg
xchg
add
xor
sbb
dec
dec
loopne
lret
outsl
mov
adc
lcall
dec
aam
dec
inc
sbb
shll
ja
xchg
and
xor
mov
rolb
jecxz
clc
mov
mov
dec
rolb
pop
xor
mov
xchg
add
mov
out
stos
mov
sub
repnz
pushw
sub
cmpsb
or
clc
out
jge
les
mov
and
inc
lahf
nop
add
sbb
inc
xor
call
cmp
sub
add
cmp
ss
inc
test
nop
and
jge
mov
cmp
dec
xor
dec
sub
adc
xor
call
fisubs
xor
cld
lea
fiaddl
jns
mov
les
push
inc
push
je
adc
lods
lods
rolb
cltd
je
dec
les
mov
inc
sbb
mov
negb
movb
jns
test
mov
enter
out
or
jge
adc
xorl
lock
jecxz
jmp
add
and
sub
xorb
repz
mov
into
mov
adc
movsl
push
or
sub
insb
clc
adc
movb
pusha
mov
inc
inc
mov
push
add
push
nop
xor
adc
notb
adc
adc
cmpsl
sub
lods
pop
shr
nop
js
pop
or
or
scas
xchg
test
shll
test
jne
sbb
neg
and
insb
jle
inc
imul
clc
push
adc
jmp
loopne
loopnew
cvtdq2ps
add
rolb
adc
and
mov
jae
mov
out
sbb
dec
icebp
ret
sti
and
xchg
mov
fldenv
or
mov
add
sub
shl
dec
faddp
dec
into
or
pop
in
push
inc
sbb
mov
sub
dec
enter
pusha
pop
mov
cmp
push
shlb
test
dec
int3
pop
sub
dec
lock
add
add
icebp
dec
xorb
into
or
mov
inc
test
add
or
in
cli
aas
insl
leave
dec
nop
dec
mov
dec
cmp
jge
sub
cmpb
sub
push
bound
movb
dec
cmp
into
mov
add
dec
add
add
fadds
sub
movb
adc
jp
jne
dec
sub
sahf
mov
jb
int
pushf
adc
push
inc
ret
and
add
dec
inc
push
mov
jbe
sti
add
xchg
add
dec
push
imul
inc
push
lcall
ja
mov
mov
push
mov
push
orb
jne
jbe
adc
sub
loope
add
icebp
jns
push
or
add
or
pop
pop
scas
add
adc
int3
xchg
and
int3
cmp
xor
test
xchg
adc
or
enter
jae
test
inc
pop
mov
mov
iret
xor
push
xor
into
pusha
inc
jecxz
push
sub
mov
rcrl
pusha
iret
in
inc
xor
nop
ret
or
prefetchw
inc
inc
pop
and
ret
addl
ror
lock
pop
jae
or
or
test
xchg
adc
and
mov
test
push
inc
add
inc
or
mov
fcomps
pop
pop
mov
fs
jmp
or
dec
pop
scas
push
outsb
fs
test
ret
loope
mov
and
mov
inc
jge
cmp
mov
or
inc
pusha
popa
insb
in
pop
push
rsqrtps
inc
inc
fldcw
mov
movsb
dec
lcall
sahf
xchg
or
or
inc
sarl
sub
into
xchg
adc
pop
in
add
into
in
stmxcsr
and
bound
imul
ss
or
add
cltd
xchg
data16
or
adc
push
add
into
jle
loopne
out
pusha
mov
xor
inc
lret
repz
into
into
into
lods
rcll
pop
and
inc
pop
sub
sarb
push
pop
nop
pop
mov
push
out
cwtl
pop
mov
xchg
int3
or
shlb
or
pop
xchg
mov
jnp
sub
ret
je
pop
movsl
pop
lcall
add
leave
lahf
pop
test
pop
or
add
push
add
add
add
imul
and
scas
push
imul
cmp
dec
inc
sub
jmp
dec
in
jmp
inc
lods
xchg
lret
xor
sbb
cmp
scas
fiaddl
adc
add
push
cltd
add
loopne
sub
pop
rcll
cmpsb
loope
mov
pop
test
cmp
or
adc
shrl
sub
sbb
cmp
lret
addb
jle
outsl
xchg
ds
ret
fisubrs
jle
push
sbb
xlat
xor
jmp
jle
and
daa
or
and
aas
test
adc
jge
xor
cs
xchg
jl
or
lea
stc
add
icebp
cltd
mov
iret
dec
and
rolb
stos
jnp
dec
sbb
xor
lret
add
jmp
cwtl
leave
sbb
mov
inc
loopne
andb
and
movsb
mov
mov
fstpl
scas
add
dec
ds
je
sbb
rorb
or
outsb
cmp
jbe
inc
inc
sbb
aas
fsubrp
jmp
pop
sbb
and
in
cmp
out
mov
scas
or
mov
jo
jbe
pop
jns
jmp
cmp
jne
icebp
mov
push
or
aam
cmp
add
movsl
repz
push
cmpsl
xor
mov
test
and
ret
jnp
shlb
push
add
loopne
cmp
test
mov
mov
inc
inc
dec
testb
pusha
scas
sahf
inc
lea
rorb
nop
jnp
inc
mov
xchg
and
test
push
xor
cmp
push
fstpt
aam
inc
cmpb
pop
popf
xchg
fsubr
xor
or
sarl
pushf
out
jns
orb
add
mov
sub
je
lahf
or
fcoml
rolb
xchg
cmp
cmp
dec
inc
sbb
clc
cmp
inc
add
add
pop
jge
lea
or
hlt
adc
enter
sub
stos
and
mov
and
xor
pusha
lods
push
shl
push
enter
xor
imul
add
adc
inc
add
or
sub
jo
cs
sbb
adc
sbb
jae
jmp
push
push
xlat
movsl
test
and
inc
or
fnsave
icebp
sub
mov
popa
shrl
mov
mov
or
sub
sbb
dec
clc
popf
mov
dec
inc
aad
or
adc
notl
aas
adc
shlb
loopne
mov
adc
xchg
xor
lret
push
mov
fisubrl
shrb
push
and
push
mov
mov
outsb
in
outsb
inc
and
mov
inc
cltd
fsubs
test
lcall
inc
mov
add
pusha
sub
xchg
clc
mov
out
pop
lock
dec
or
lcall
enter
cmp
or
arpl
ja
test
mov
xchg
std
je
mov
jg
xor
xor
call
mov
rcll
sub
dec
sub
inc
pop
pop
jl
and
push
pop
cmpsb
mov
ss
int3
sbb
adc
imul
lock
dec
mov
xor
jle
push
iret
and
out
stos
loopne
jmp
and
or
dec
loop
out
rcrb
add
ss
mov
or
js
mov
adc
adc
movsb
or
mov
mov
aad
loopne
sbb
inc
js
pop
inc
inc
add
inc
movsb
jge
push
sar
fcompl
mov
cmp
in
ljmp
add
les
pop
movsb
sbb
pusha
pop
pusha
call
shrl
dec
or
stos
sub
xor
adc
ret
rcl
sub
and
sub
or
add
push
mov
lods
push
adc
sbb
data16
testb
push
push
inc
and
or
add
or
push
xchg
test
add
cmp
add
push
xor
in
sub
adc
xchg
mov
scas
insl
out
outsl
fcompl
scas
mov
cwtl
push
daa
add
test
mov
push
adc
cmp
sub
xor
mull
push
push
or
pop
cmp
or
aad
pop
inc
add
inc
mov
adc
cltd
bound
cwtl
xor
scas
mov
or
rcrl
aaa
adc
ljmp
div
cvttps2pi
dec
or
xchg
add
xor
je
loope
jmp
daa
ds
fldenv
mov
mov
push
fildll
jne
rclb
jecxz
enter
fsubrp
test
jns
fstps
aam
icebp
lahf
cmp
and
fistl
pop
xchg
jmp
cmp
fcomp
adc
mov
ret
fstps
shlb
xchg
mov
push
int
push
push
mov
loopne
popa
pusha
add
mov
pop
dec
ds
dec
in
stc
mov
mov
into
outsb
sub
push
scas
inc
cltd
dec
ljmp
mov
ret
fcoml
inc
dec
pop
mov
dec
sbb
or
call
icebp
leave
test
mov
call
adc
cmp
les
dec
push
imul
mov
xor
inc
cmpsb
loopne
in
add
in
add
dec
sub
jecxz
pop
add
orb
push
or
shlb
orb
jo
call
in
test
mov
inc
lock
or
pop
mov
cmpsb
mov
fs
enter
gs
adc
mov
adc
inc
pop
in
test
lock
in
ret
pop
add
dec
pop
es
cmp
pop
pop
incl
jle
dec
leave
dec
cmpl
cmp
dec
pop
cld
in
inc
push
rorl
cmp
fbstp
xor
pop
das
adc
and
sub
cmp
movsb
dec
cs
cs
inc
adc
repnz
dec
lock
mov
das
push
jmp
mov
pop
sbb
lea
add
push
add
rcll
rcr
or
and
inc
icebp
andb
add
fwait
imul
and
or
and
push
xchg
jbe
mov
xchg
stos
test
call
and
xchg
lods
les
inc
and
dec
into
aam
adc
xchg
in
xchg
in
pop
aam
and
add
pop
lcall
in
addl
push
xor
test
mov
imul
adcl
ficoml
aam
lock
or
add
bound
pop
bound
inc
or
lods
add
inc
mov
jmp
sbb
in
pop
add
jp
sbb
push
in
movsl
scas
and
add
in
arpl
and
movsb
dec
or
xchg
lock
shlb
xor
sarb
xor
adc
inc
push
pop
loopne
int3
fstps
cmpsb
dec
jl
aam
mov
test
shlb
sbb
sbb
inc
xchg
shrb
jle
dec
int3
xchg
add
cwtd
fs
imul
and
dec
es
sub
xor
es
cmp
es
fs
inc
dec
fs
jne
insb
add
cld
mov
push
dec
sbb
inc
add
mov
pop
enter
popa
add
sbb
sbbl
in
loopne
lret
clc
dec
or
dec
hlt
inc
inc
and
inc
jae
clc
sub
dec
xor
lock
mov
cwtl
cmpw
scas
jecxz
add
dec
push
add
push
sub
mov
jne
jmp
cmpsb
xchg
cld
test
test
aam
cmp
fsubl
int3
aad
orb
cld
pop
rcr
add
push
jmp
inc
and
orl
in
test
dec
pop
fwait
aam
cmp
shlb
inc
enter
push
and
out
fldl
cmpsl
pusha
ja
imul
bound
inc
fwait
fwait
lds
push
leave
inc
mov
or
add
jmp
addb
icebp
add
ja
and
pop
push
mov
shll
dec
mov
cmp
call
jns
pop
dec
imul
inc
xor
sbb
imul
push
cmpsb
popa
jb
adc
insb
imul
roll
lods
fadds
test
xchg
mov
sub
add
sahf
pop
xchg
add
aam
insl
orb
inc
call
inc
add
dec
xchg
cmp
sahf
call
or
push
mov
pop
xchg
mov
adc
dec
and
lock
mov
mov
mov
movq
mov
inc
fcoml
in
inc
fidivl
dec
adc
loop
and
sbb
test
outsl
and
test
fnstcw
sti
mov
out
sub
imul
sub
das
xor
mov
xchg
lock
dec
lods
imul
mov
sahf
fcom
or
jnp
mov
dec
imul
jb
jb
test
lods
mov
jb
jb
mov
jb
jb
int3
rcl
les
lret
stos
jno
adc
cmp
push
imul
stc
ds
sarb
ret
sbb
dec
ret
add
movb
jl
or
pusha
xlat
test
lcall
jb
mov
scas
call
push
test
mov
jae
das
nop
mov
imul
pop
aas
rsm
xchg
or
cmpsl
or
or
lahf
mov
clc
jae
cmp
je
sbb
call
jns
cmp
enter
je
or
push
test
or
aas
inc
adc
sbbl
nop
daa
ret
mov
mov
jne
xchg
push
arpl
stc
mov
rcl
xor
mov
movnti
outsb
xorb
cmp
fisttpll
sti
cmp
inc
inc
das
enter
mov
mov
xchg
test
in
ljmp
pop
fwait
and
mov
out
add
out
push
and
loop
push
mov
mov
jmp
pusha
mov
inc
push
and
add
pop
in
mov
sub
xchg
sub
pop
xchg
adc
jb
ss
cltd
pusha
inc
add
pusha
jo
xchg
dec
fwait
je
js
inc
fs
mov
adcb
ja
add
xchg
dec
adc
add
lock
data16
sub
lea
mov
mov
jo
dec
lods
adc
mov
push
and
fimull
cmp
pop
lock
push
mov
push
loopne
aas
lock
rcrl
mov
jns
mov
xlat
or
dec
out
inc
idiv
cmp
sub
add
sbb
dec
test
nop
add
push
jb
add
dec
mov
add
in
jne
pusha
rcrl
sbb
inc
int
lahf
sbb
pop
pop
call
in
add
leave
loopne
or
nop
fdivr
mov
xor
fistpll
out
or
lods
jnp
mov
pop
jmp
enter
and
sbb
cmp
sbbb
and
pusha
pop
jo
jo
mov
scas
je
cmp
fwait
loopne
push
jb
xchg
or
jnp
in
popa
movsl
or
or
nop
inc
push
or
or
or
mov
push
add
xchg
or
call
add
push
sub
push
out
arpl
enter
sbb
mov
jge
lea
mov
rclb
xchg
mov
and
leave
and
aam
je
dec
cmpsb
sub
push
leave
aas
in
xor
jle
movsl
inc
push
fstpl
xchg
push
jnp
jg
sar
movsb
imul
inc
jg
inc
dec
test
insb
cmpl
xor
pop
js
adc
int3
mov
pop
jb
sub
push
xchg
cwtl
arpl
lods
nop
decb
mov
std
sub
movsb
mov
pop
rclb
lock
je
inc
jno
sbbb
xchg
test
dec
loopne
rorl
mov
adcl
loopne
xchg
sub
loope
push
orl
or
nop
jno
sbb
mov
inc
loopne
or
adc
inc
orb
add
jnp
sbb
xlat
lods
dec
outsb
adc
enter
dec
sarb
mov
cwtl
test
pushf
adc
insb
mov
dec
outsl
movsb
xchg
dec
add
inc
lcall
push
inc
xchg
orl
adc
and
das
ret
adc
pop
lcall
ret
and
imul
insb
outsb
xchg
test
movsb
enter
xchg
nop
aam
pop
aaa
and
pushf
and
xchg
xlat
rorl
icebp
daa
mov
and
push
mov
mov
add
pop
popa
xchg
cwtl
test
mov
shlb
shll
add
pop
repz
adc
aas
mov
cmp
popa
adc
mov
in
pop
xor
or
pop
out
push
dec
mov
mov
cmpsb
bound
add
xor
mov
sbb
and
call
fsub
sti
inc
fsubl
inc
add
pop
loopne
mov
cmpsl
push
fsubs
mov
les
js
or
jbe
push
lahf
mov
enter
mov
aas
pextrw
cmc
mov
testl
in
push
imul
sbb
sbb
popf
pop
inc
or
sbb
sbb
add
adc
xchg
xchg
movsb
shrl
add
popa
sti
call
inc
jne
add
in
sbb
fs
mov
fdivrs
in
or
ret
xor
std
cmp
popa
xchg
ret
jae
inc
sti
xchg
sbb
or
dec
sahf
aaa
mov
dec
xchg
inc
mov
xlat
stos
clc
sub
data16
push
psubw
push
insb
in
pop
mov
int3
dec
mov
int3
and
and
mov
cs
or
dec
outsb
ret
mov
pop
ret
data16
ret
inc
lods
or
sbb
mov
lods
add
es
call
ss
fmuls
das
test
and
or
pop
jo
pop
push
leave
lock
mov
sub
aam
cmp
ss
mov
cs
dec
add
adc
sbb
and
sub
push
dec
inc
mov
adc
aam
les
push
shl
je
adc
adc
push
test
adc
mov
loope
push
dec
ficompl
fdivr
add
cmp
dec
sar
insb
jg
pusha
je
in
insl
mov
cwtl
push
pop
inc
ret
int
stos
inc
mov
and
dec
pop
into
enter
jnp
in
xchg
and
jne
jne
pushf
ficomps
popf
cwtl
jl
test
fdivl
das
fsubs
cmp
inc
int3
sub
movsb
loopne
inc
rclb
fidivs
or
aas
ficoml
adc
cmp
ret
stos
xchg
mov
ret
inc
out
loopne
add
sbb
mov
sbb
iret
scas
test
fildll
mov
dec
lahf
je
inc
pop
ret
stos
iret
mov
sbb
in
mov
je
or
ja
lods
push
andl
push
jnp
call
fstl
pop
cwtl
fadd
arpl
xchg
mov
popa
daa
jno
add
enter
adc
push
popf
ret
xchg
xor
push
adc
push
xchg
or
dec
in
lock
in
xchg
fsubl
xchg
hlt
test
sbb
lock
pop
push
pop
jo
repz
sbb
ret
gs
push
stos
pop
cwtl
pop
inc
arpl
das
adc
mov
fs
sub
jns
addr16
cwtl
mov
test
pop
inc
lea
aas
aam
adc
pop
jecxz
pop
or
cld
arpl
adcl
cltd
lret
dec
rcll
cmp
mov
pushl
lods
lods
daa
ret
dec
dec
push
mov
add
enter
push
or
test
lea
pusha
fsubs
xlat
add
bound
mull
movsb
and
add
cwtl
adc
fmull
mov
in
push
mov
data16
leave
fistpll
fwait
sbb
shlb
xor
dec
pop
mov
enter
or
or
popa
xchg
sub
or
and
dec
mov
scas
pushf
dec
mov
outsl
aaa
pop
in
push
lock
bound
enter
mov
test
adc
scas
and
pop
add
leave
or
call
mov
out
adc
sti
adc
adc
lods
movsb
push
cld
jns
out
out
popf
in
and
cwtl
pop
loopne
shrb
mov
pop
sub
shrl
les
ljmp
push
and
cltd
dec
push
int3
lcall
and
das
enter
sbb
addl
inc
pop
cmp
pop
pop
pop
adc
mov
btr
push
mov
dec
adc
call
push
push
test
in
adc
enter
outsl
pop
es
sub
pop
mov
mov
mov
mov
outsb
in
inc
xor
jb
imul
es
pop
or
and
xor
es
mov
das
loope,pn
jecxz
leave
les
mov
andb
xchg
aad
adc
insl
int3
xchg
mov
xchg
adc
xchg
popa
inc
cmp
test
mov
adc
jns
repz
xchg
mov
adc
das
fsubl
aad
fsubrl
aam
int3
and
movsb
dec
lods
movsb
sub
outsb
arpl
pop
aad
and
andl
mov
jne
dec
mov
pop
dec
or
jo
dec
int3
inc
xchg
je
fdivs
sub
les
inc
jb
in
xchg
mov
test
shl
mov
je
cmpsb
jge
insl
fucom
sub
scas
repnz
adc
in
testb
int
aam
mov
add
pop
mov
cmp
add
rolb
movsb
adc
or
adc
nop
and
scas
ret
inc
mov
cmp
sbb
les
divb
jg
dec
inc
add
dec
dec
in
mov
test
enter
xchg
or
xchg
jg
or
iret
or
and
mov
pop
out
andb
jl
and
outsl
je
cmp
cli
pop
enter
adcb
lods
mov
cmpsl
fists
dec
push
insl
push
fstpt
loopne
fmull
les
sub
sub
out
mov
mov
add
add
or
or
insl
and
sbb
sbb
test
mov
jo
ffree
sub
push
mov
mov
adc
pop
roll
xchg
dec
mov
xor
inc
int3
je
inc
roll
mov
pushf
pop
mov
jns
cmp
leave
mov
js
push
andb
mov
dec
dec
dec
cwtl
pusha
leave
xchg
or
fildl
dec
leave
xor
dec
push
fsubs
test
lock
cs
dec
stos
jno
push
or
repnz
mov
stos
inc
pop
adc
les
mov
test
mov
cmp
inc
mov
mov
pop
mov
scas
add
add
cltd
nop
std
add
nop
or
fs
adc
and
shll
fistpll
mov
inc
inc
outsl
and
xor
mov
inc
xor
jge
and
lea
ret
mov
mov
inc
jl
fdivs
add
mov
add
in
xchg
push
push
in
sti
add
push
mov
pusha
ja
das
or
add
xchg
cltd
sbb
adc
inc
nop
das
aam
in
andl
faddl
pusha
leave
cmpb
add
add
imul
cmp
dec
mov
xchg
invd
pop
add
add
sub
or
mov
and
add
or
in
gs
inc
scas
mov
xchg
cmpsb
push
sbb
and
fdivrs
push
adc
fs
mov
push
test
outsl
nop
pop
add
add
pushf
and
xor
scas
sub
add
push
xor
or
arpl
adc
lock
jbe
dec
call
int
adc
pusha
or
clc
mov
sub
inc
aad
add
or
sub
xchg
in
sub
jno
mov
popa
cmp
add
call
pop
mov
sbb
enter
inc
xlat
test
fists
adc
ss
loopne
sub
mov
pop
in
loopne
scas
les
sbb
push
pop
insl
pop
sub
push
dec
shll
cmp
inc
unpcklps
icebp
clc
test
and
test
add
and
adc
enter
mov
and
aad
insb
jne
pop
test
sarl
lds
or
xor
aam
sub
jo
dec
and
test
adc
mov
xor
lds
inc
mov
rcrb
adc
or
in
hlt
out
adc
test
xor
es
push
test
sub
and
addb
or
mov
jb
mov
arpl
in
rolb
add
mov
mov
jmp
pop
outsl
fwait
mov
push
and
pushf
adc
xchg
mov
xchg
dec
xor
insl
pop
insb
hlt
dec
xor
and
push
js
leave
and
push
dec
inc
sub
scas
mov
daa
imul
adc
nop
inc
push
or
rolb
and
out
push
in
mov
fcoml
addb
addb
pop
or
dec
addr16
fs
imul
int3
enter
xchg
xchg
lds
and
cmp
cmp
adc
cltd
je
mov
pop
cmp
jecxz
mov
dec
mov
fidivl
sub
dec
stos
push
push
cmp
push
mov
test
sbb
pop
xchg
mov
fadd
dec
push
mov
push
mov
jns
dec
enter
pop
nop
and
fists
sbb
dec
in
js
mov
lahf
aam
push
xor
dec
out
xor
aam
ret
add
popa
sub
mov
or
jns
mov
mov
pop
dec
adc
pop
pop
inc
jg
cmp
inc
shll
aas
fmull
out
jg
inc
add
mov
and
stos
popa
dec
lods
shrb
adc
aam
shl
movl
fistl
cmp
leave
mov
int3
inc
lock
xchg
data16
push
lock
sub
adc
test
push
movsl
stos
pop
and
pop
cmp
adc
loopne
push
pop
mov
loopne
lcall
inc
or
nop
in
and
mov
js
loopne
xchg
je
sbb
inc
pusha
int
cs
mov
movsl
add
sub
mov
enter
movsb
filds
xchg
jo
jnp
mov
xlat
int3
pop
call
aas
mov
test
xchg
fs
adc
dec
xor
lcall
push
push
ret
xor
clc
sub
aad
add
shll
lahf
adc
rol
adc
adc
nop
pop
dec
in
lock
aad
add
lcall
pop
add
in
jmp
divb
push
push
nop
or
lds
jno
ffreep
add
xchg
dec
or
sbb
adc
aam
jno
les
pop
enter
add
insb
bnd
push
lea
aam
in
jb
jo
fimull
je
sti
fwait
adc
cltd
or
sbb
jb
jo
cli
mov
sti
cld
cli
xor
and
scas
fs
cmp
and
add
and
hlt
add
adc
and
insb
inc
mov
cwtl
dec
pusha
sti
mov
and
imul
xor
mov
xor
and
push
mov
adc
mov
sbb
cs
shrl
and
cli
call
movsb
fisttps
movsb
mov
outsb
daa
test
es
rol
iret
mov
cmp
les
dec
ror
orb
pusha
stc
les
rolb
and
scas
and
das
decl
xchg
mov
mov
pushf
add
loop
mov
adc
lock
or
mov
ds
sti
mov
push
jo
fstpl
add
nop
orps
aas
nop
mov
pop
xor
sub
sbb
dec
and
adc
mov
cmpb
sbb
ret
jmp
or
xor
jnp
pop
mov
out
mov
mov
push
fwait
push
adc
mov
cmp
mov
jle
adc
add
mov
int
shlb
shll
aam
push
dec
ds
fldt
filds
jne
loop
mov
sub
adc
pop
mov
pop
adc
ror
and
cmp
ret
inc
and
xchg
lret
push
or
ljmp
je
mov
and
sbb
movsb
xor
faddp
out
nop
dec
sbb
pop
ret
loop
outsb
adc
fistpl
imul
add
lods
mov
test
pusha
add
scas
add
lcall
inc
mov
xorb
loopne
lock
push
sub
mov
ds
mov
sbb
mov
adc
mov
mov
cmc
cmp
push
mov
aas
and
ljmp
mov
mov
ljmp
add
fistpl
or
jnp
pop
repnz
mov
add
and
ror
lcall
push
nop
mov
jl
push
enter
inc
dec
dec
dec
dec
dec
dec
dec
dec
pop
popa
push
sbb
pop
popa
jmp
gs
imul
jo
jb
je
jbe
js
jp
xor
xor
jg
cmp
sub
leave
adc
mov
rcll
xchg
adc
push
or
mov
outsl
cmp
adc
adc
imulb
push
cmpsl
stc
cmp
inc
adcb
jns
mov
sub
outsb
je
jb
outsl
arpl
fnstenv
push
out
sbb
push
dec
imul
sarl
jae
cmp
jb
gs
xor
cs
insb
mov
bound
and
pop
popa
je
outsl
outsb
or
fldenv
mov
inc
push
aas
rdpmc
add
push
mov
jnp
add
pop
sub
mov
sahf
dec
lcall
lods
inc
outsl
jb
js
je
jb
jg
mov
xchg
insl
add
arpl
outsl
add
add
cmpb
je
push
je
shrl
jne
jb
mov
outsb
add
mov
xor
xor
out
stc
jns
cmp
cmp
dec
and
in
mov
add
das
das
adc
push
dec
push
inc
out
or
ds
gs
insl
bound
daa
dec
outsl
jbe
pmaxsw
pop
dec
arpl
push
jo
sub
out
lock
jne
jne
dec
jne
xchg
mov
inc
jo
imul
bound
dec
nop
or
into
mov
scas
cmpsl
xchg
popl
cmp
xchg
addr16
push
jne
lcall
mov
mov
push
fsubl
push
scas
clc
sbb
dec
jae
std
adc
and
jbe
out
pop
dec
inc
ds
popa
das
jo
xor
pop
insl
or
fbstp
mov
push
and
xchg
dec
out
push
add
pop
inc
mov
dec
test
adc
adc
sub
sub
cs
dec
push
std
shll
ds
inc
das
pop
pop
push
push
test
je
cmp
xchg
insl
cli
jl
jle
add
arpl
test
icebp
adc
subl
pop
or
out
ffree
inc
adc
push
sbb
insb
jae
cs
fs
cmp
xor
inc
mov
outsl
mov
out
jo
insl
and
addr16
jbe
dec
push
push
sbb
insl
in
dec
dec
inc
sbb
and
jp
data16
add
xor
sbb
push
jo
imul
push
pop
mov
je,pn
push
push
xor
jo
xchg
idivb
mov
sub
and
fs
adc
out
scas
mov
push
imulb
and
and
fmul
insb
mov
sbb
xor
and
imull
xchg
add
and
jne
sub
mov
rolb
les
shrl
mov
fldl
and
or
das
add
popa
add
or
ljmp
jb
bound
lods
mov
je
and
push
or
push
or
int3
fidivl
popf
jb
loopne
outsl
mov
faddl
fcmovu
push
daa
sub
dec
addb
das
arpl
cwtl
shlb
dec
popa
in
gs
sub
mov
fidivrs
test
out
add
inc
xchg
insb
imul
out
xor
int3
gs
rcl
push
cmp
push
lcall
mov
and
xor
gs
push
divl
push
fistps
push
adcb
aaa
xor
scas
or
fs
xor
rol
push
hlt
pop
dec
add
add
test
ja
outsl
and
and
outsl
ss
mov
lods
pop
xor
imul
ret
xchg
push
mov
xor
push
gs
or
lds
dec
add
inc
jle
lret
mov
mov
arpl
lret
jp
jo
bound
push
pop
repnz
cmp
insl
in
sarb
shr
or
or
xchg
imul
pop
or
lods
cli
jno
add
push
push
leave
push
mov
insl
imul
cmp
orl
popa
in
xor
pusha
or
and
push
mov
pop
push
cmp
addr16
jae
xor
loopne
or
fsubl
out
mov
jo
sub
popa
adcb
jb
push
sub
imul
dec
stos
mov
dec
jmp
jo
and
imul
inc
adc
lods
mov
and
dec
cmp
call
es
jg
lcall
loopne
cmpsl
popf
lock
sarb
fadd
ljmp
lret
jno
icebp
pusha
inc
mov
clc
sub
ret
movsl
add
xorl
fdivs
push
loop
imul
sbbb
gs
popa
dec
fwait
test
jecxz
enter
popa
js
scas
sub
je
pop
dec
pop
and
jno
add
add
xchg
testb
imul
xchg
adc
xchg
push
add
adc
add
add
add
add
xor
cmp
pop
or
aaa
ds
push
xchg
mov
addl
and
or
mov
adc
js
or
sub
sti
mov
xor
xor
sbb
addb
in
add
xchg
test
add
imul
pop
daa
push
cmpb
push
out
int3
sahf
and
sub
jb
int3
push
int3
mov
into
jo
add
rcl
mov
lods
inc
push
stos
int3
js
mov
pop
dec
rorb
sbb
add
lea
and
nop
xchg
pop
jb
xchg
xchg
xchg
xor
int
inc
pop
push
adc
mov
sub
test
dec
pop
pop
pushf
jo
or
and
or
cs
ret
pushf
pop
data16
stc
sahf
jo
nop
sahf
push
pop
outsl
lret
in
in
jp
mov
mov
and
sub
cmp
dec
dec
add
test
cmp
xchg
dec
cs
adc
add
mov
addb
sbb
add
add
add
add
add
add
mov
lods
sbb
add
add
shr
decl
insl
and
add
test
add
mov
xchg
xchg
xchg
xchg
xchg
cwtl
lcall
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fdivr
fcmovnu
fstp
fnstsw
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
xchg
sbb
cmc
stc
cli
sti
cld
cli
rcrl
sub
addb
sar
push
lds
lcall
push
insb
rol
aas
jmp
xor
mov
push
movsb
inc
cmp
jae
jb
bound
dec
jbe
cmpsl
mov
dec
popa
mov
lods
xchg
repnz
fstpt
lea
dec
mov
outsl
js
push
push
inc
push
insb
rolb
mov
inc
sahf
insb
fistpl
outsb
out
mov
dec
mov
daa
add
insb
in
dec
imul
idivb
inc
mov
imul
les
inc
jns
daa
pop
fsubrs
push
test
and
mov
aad
lcall
addr16
cmp
orl
sub
arpl
add
inc
jbe
cmp
fisubs
jns
and
data16
mov
inc
sbbb
xchg
sti
cmp
push
pop
or
mov
pusha
xor
es
dec
and
mov
pop
dec
cwtl
xchg
cmp
cmp
sub
sbb
cmp
call
ja
imul
ja
adc
adc
or
xchg
inc
push
push
push
push
dec
testl
repnz
mov
inc
mov
mov
dec
cmp
add
js
lods
mov
imul
call
and
outsl
inc
push
shll
fs
in
push
pop
mov
xchg
jg
popa
mov
shll
mov
pop
jns
pusha
push
pop
das
je
cmp
xchg
daa
xchg
cmpsl
cmp
popw
pop
cmp
repz
es
cmp
push
das
push
sub
sub
inc
jl
push
jle
sub
ds
sub
lret
loopne
imull
pop
push
cmp
push
ds
xchg
and
cmp
sbb
dec
pop
pop
adc
pushf
cwtl
jb
sbb
push
jb
mov
jmp
imul
push
lret
cmp
xchg
push
lods
sbb
and
sub
inc
jo
sub
push
addr16
lahf
sub
cld
loopne
add
push
sahf
out
sahf
call
mov
jns
cwtl
lcall
jl
cmpsl
push
aam
cwtl
nop
loopne
fidivrs
xor
insb
test
addb
jns
out
js
jo
pusha
scas
stc
xchg
push
jmp
pop
pop
or
inc
lcallw
push
out
lock
repz
push
jl
cmpsl
push
dec
dec
push
inc
mov
daa
addb
push
cmp
xor
cmp
repz
and
iret
repz
sbb
adc
add
sahf
out
lcall
repz
out
mov
inc
or
out
out
fiadds
test
pusha
inc
jl
out
xor
sub
hlt
cmp
shr
loopne
mov
cmpsl
stc
cmp
insb
inc
sbb
ret
out
sahf
mov
pusha
xor
fsubl
pop
aam
lcallw
shlb
jns
push
xor
mov
jb
add
adc
pop
push
push
lret
jae
fs
sbb
ljmp
push
shrd
sub
add
pop
loope
add
jle
push
insb
cmp
inc
inc
dec
jae
mov
test
mov
push
out
sbb
dec
inc
dec
xor
inc
dec
dec
xor
idiv
dec
push
push
and
xor
push
dec
inc
dec
add
dec
dec
inc
add
out
push
das
adc
sub
adc
lea
into
mov
mov
scas
xor
jnp
inc
loop
mov
ds
pop
adc
jnp
rcrl
lret
sbb
jb
xchg
jge
arpl
adc
pop
dec
scas
jp
adc
fdivp
das
in
scas
mov
mov
and
cmp
dec
imul
dec
cmpsb
iret
lret
add
inc
mov
mov
sub
fadds
pop
sahf
fwait
ss
sbb
pop
jns
ds
ljmp
xor
incb
int3
dec
dec
xor
dec
popf
pxor
xor
lret
das
cmp
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
and
pushl
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
popa
push
repz
lock
scas
int
mov
pop
leave
loop
mov
pop
nop
mov
scas
lods
cwtl
push
xor
cwtl
iret
adc
or
icebp
pop
pop
repnz
dec
enter
and
es
lahf
sbb
sbb
add
or
xchg
sub
pop
out
dec
mov
out
leave
ljmp
lahf
dec
test
push
les
mov
or
outsb
jbe
and
add
inc
push
adc
inc
xorl
mov
inc
loopne
jo
test
repz
sbb
dec
push
outsl
cmpsb
test
sub
mov
pushf
cmp
push
pop
std
std
and
push
sub
add
xor
and
pop
add
sub
inc
das
dec
sbb
push
adc
inc
sbb
pop
sub
sub
dec
add
push
push
xor
dec
sub
bound
mov
pop
jbe
out
lods
mov
or
cmp
add
sbb
fstl
dec
pop
xor
ds
push
push
sub
xor
push
dec
dec
ds
out
movsb
out
aas
and
push
pop
addb
fstp
cmp
cmp
ret
xor
movlps
js
fistpll
sub
cld
cmp
sbb
and
sbb
icebp
mov
push
add
push
and
push
xor
in
neg
es
xor
aaa
pop
sbb
pop
add
dec
xor
sbb
adc
xor
push
inc
loopne
sub
pop
dec
push
dec
push
ds
mov
cmp
shl
daa
inc
adc
push
cmp
daa
sbb
inc
push
je
lea
push
adc
inc
lock
adc
pop
daa
cmp
sub
or
in
inc
pop
and
dec
sub
inc
inc
sbb
and
dec
pop
fisubrl
sbb
mov
xchg
push
jo
pop
dec
push
add
and
ds
daa
pop
int3
adc
adc
and
xchg
mov
jle
xor
push
inc
sub
jo
jg
and
js
sub
add
cmp
mov
mov
jb
push
sbb
es
pop
push
gs
clc
pushl
xchg
dec
xor
adc
aaa
xor
or
and
xor
and
sub
cmp
inc
pop
pop
pop
push
pop
sbb
sub
pop
xor
mov
pop
pop
fildl
push
pop
movsl
pop
push
jnp
inc
pop
adc
mov
dec
nop
dec
cwtl
in
es
pop
adc
divl
xlat
inc
xor
xor
pusha
setle
cmp
push
jo
addb
popa
dec
repz
add
sahf
out
push
push
pusha
andb
mov
nop
pop
xor
push
and
ret
dec
sub
add
ds
mov
inc
cwtl
pop
mov
ds
xor
adc
push
popa
push
and
push
lahf
inc
popa
outsb
insb
scas
movsl
adc
popa
bound
add
imul
bound
sub
cvttps2pi
imul
push
and
nop
fcmovb
out
mov
ds
sbb
sahf
ja
adc
push
push
into
out
out
push
inc
push
push
mov
push
into
sti
push
and
push
push
and
ds
xor
pop
sarl
das
adc
pushf
aaa
sub
adc
and
push
pusha
dec
push
dec
cmc
call
cmp
cmp
xor
mov
cmp
sub
ss
adc
pop
js
inc
jbe
mov
jae
or
or
adc
and
inc
or
jmp
xor
mov
pop
and
push
dec
cmpsb
ds
sbb
fistpl
pop
fcoms
jb
adc
xor
add
jb
cmp
in
add
or
inc
push
insb
push
inc
rol
sub
xor
push
xor
pop
push
fildll
imull
sub
add
ds
inc
sarl
pop
xor
dec
push
mov
sub
mov
ja
push
xor
cmp
add
and
rclb
jae
ss
xor
ret
cld
xor
pop
sbb
fs
pop
cmp
jecxz
sub
mov
scas
btr
jge
add
cmp
outsb
jo
shll
pop
push
sbb
pop
test
cmp
fs
daa
and
pop
push
sbb
scas
out
jl
push
data16
sbb
jae
cmp
pusha
sub
fisubrl
cs
adc
sub
fmul
cmpsb
cmpsb
xor
das
push
cmp
push
daa
push
jae
shll
sahf
adc
inc
aaa
sub
lods
mov
pop
or
or
add
adc
stos
pop
pop
push
and
gs
pop
adc
mov
mov
cld
daa
sbb
push
jl
sub
outsl
dec
sub
and
mov
dec
lds
adc
inc
sbb
and
ds
or
in
adc
xchg
sub
and
adc
or
cmp
xor
aad
sbb
pop
in
adc
pusha
and
sub
es
push
imul
adc
aam
out
pop
loop
xlat
and
into
scas
daa
int
xor
or
in
push
mov
pushf
adc
mov
push
stos
popa
lock
ds
mov
xor
dec
iret
push
lret
cmp
lcall
xchg
sbb
dec
xchg
push
or
sbb
cmp
xchg
push
hlt
pop
or
pop
or
popa
add
and
stos
add
pop
push
aas
push
jg
add
and
jle
mov
adc
xlat
into
adc
andl
pop
stos
dec
ss
jbe
pop
mov
inc
shl
add
sbb
outsb
inc
lret
xchg
cs
int
inc
adc
pop
mov
addr16
sub
or
bound
and
test
mov
adc
popf
insl
andb
mov
shlb
adcl
xchg
sub
push
add
inc
daa
dec
or
test
jo
add
in
scas
out
adc
or
push
and
icebp
pop
ja
cmpsb
call
sub
addb
pop
and
fcmovnb
cltd
lcall
adcl
decb
or
dec
inc
or
sbb
ja
std
push
cmp
dec
add
or
imul
and
or
loopne
insb
and
mov
sarb
int3
js
sub
sub
int
push
ja,pt
and
mov
es
xor
aaa
jp
fwait
pop
inc
xor
pop
das
and
rcr
sbb
pop
pop
add
pop
xor
mov
push
dec
push
jle
arpl
sub
sub
push
rolb
mulb
pushf
sbb
testb
push
jp
cmc
jp
pop
xchg
push
cmp
in
scas
dec
popa
pop
adc
push
adc
pop
fiaddl
add
in
ss
bound
fistl
les
mov
mov
lea
mov
mov
jb
mov
sub
push
push
imul
push
pop
stos
add
jo
outsl
mov
push
pusha
add
push
mov
xchg
call
mov
pop
bound
bswap
lods
pop
pop
push
push
je
xlat
mov
daa
and
jae
popa
cwtl
dec
movl
mov
add
xor
jg
das
and
xor
js
fsubs
in
sbbl
xor
push
movsl
nop
ret
dec
ret
and
push
and
les
or
lds
pop
test
inc
add
rolb
gs
aas
push
pop
and
dec
push
and
dec
pop
adc
add
aaa
sbb
dec
jne
fimull
clc
das
mov
sub
daa
pop
sbb
fsubrs
sbb
dec
ds
je
andb
mov
mov
shlb
ret
jbe
mov
and
ret
mov
adc
push
sbb
xor
movsl
mov
bound
mov
mov
mov
xor
mov
leave
cli
daa
and
push
add
enter
fwait
add
cwtl
pop
inc
inc
cmp
or
dec
adc
or
mov
ja
add
scas
sbb
scas
pop
mov
mov
arpl
cmpsl
decl
and
jne
adc
gs
push
mov
inc
add
mov
sbb
mov
or
push
sbb
sub
lock
dec
fs
add
sub
and
ret
add
adc
test
mov
aas
inc
push
adc
sub
or
dec
aaa
adc
daa
dec
jno
sbbb
repnz
add
inc
sbb
xor
adc
ffree
out
fbld
in
repz
rolb
repnz
lods
mov
stc
dec
pop
cli
daa
nop
add
pop
mov
pop
pop
das
iret
stos
int3
test
nop
ljmp
psrad
fs
and
out
sub
clc
mov
xor
sbb
xor
mulb
jo
daa
inc
and
and
out
pop
pop
sbb
push
push
out
rolb
nop
add
test
add
add
ljmp
xor
ret
js
filds
xor
jl
dec
or
pop
lock
jns
jne
adc
pop
sbb
or
mov
loope
ja
loop
sub
cltd
repz
add
adc
fstl
insb
les
pop
inc
es
pop
aad
dec
cwtl
mov
inc
adc
pusha
or
and
and
dec
mov
xor
sub
xor
or
setge
leave
cmp
mov
mov
testb
xchg
or
push
and
inc
daa
or
dec
sub
or
inc
inc
sbb
xor
sub
aaa
mov
push
and
push
xchg
aaa
loop
je
outsl
and
iret
addr16
call
adc
ja
fiaddl
into
mov
and
dec
lods
adc
mov
sub
scas
pushf
cmp
test
dec
mulb
push
mov
dec
cmp
aaa
xor
dec
push
push
ds
pop
sub
lods
in
dec
sub
add
cmp
xor
insb
or
mov
pop
jns
xchg
aas
push
movsl
arpl
les
push
push
in
in
fucomip
daa
push
push
cmc
sbb
adc
add
adc
sbb
xor
inc
xor
faddl
inc
push
pop
xor
lods
loopne
sub
dec
pop
xor
push
cs
cmp
pop
jo
addb
sub
loope
add
icebp
mov
mov
jo
push
mov
push
push
xor
xor
mov
cmpsb
fimuls
pop
rcll
aaa
jg
fistps
jns
or
aaa
adc
inc
cmp
sahf
inc
mov
adc
lret
adc
inc
and
and
into
inc
add
in
jnp
adc
out
cmp
js
or
xchg
cltd
or
es
adc
push
ret
mov
rclb
sub
jnp
cmp
xor
movsl
xor
lods
testb
pop
xor
gs
add
movsl
ds
adc
jno
or
aam
push
lods
loop
out
adc
fisubrl
insl
mov
inc
xor
sbb
mov
daa
and
dec
pop
xchg
in
addl
xor
in
cmpsb
in
add
mov
xor
sbb
and
sarl
xor
pop
insl
shll
xor
xlat
pop
inc
mov
xchg
dec
scas
dec
ds
dec
and
or
es
sub
dec
inc
cmpsl
push
inc
push
arpl
lahf
lock
cmp
pop
pop
or
push
std
xor
pop
les
dec
pop
pop
outsl
add
test
ret
mov
data16
push
addl
and
push
ret
nop
rclb
push
lea
pusha
mov
jmp
pop
and
aaa
sbb
cmp
pop
mov
pop
jge
push
cld
lods
xlat
rorb
movsl
sbb
pusha
es
jge
ja
and
sbb
or
pop
and
sbb
fadds
xor
jno
dec
test
pop
sub
mov
mov
push
fdivrl
pop
sub
dec
jp
and
xor
xchg
adc
pop
decb
and
dec
shl
outsl
or
dec
and
xor
shll
sub
and
sub
icebp
aaa
mov
rorb
mov
aaa
negl
es
sub
sub
std
fisttps
insb
xchg
fs
push
hlt
sbb
push
lea
test
test
cmp
or
insb
push
dec
sbb
jecxz
mov
sbb
push
adc
sbb
repz
inc
push
cmpl
repz
cltd
ss
dec
repz
xchg
add
pop
push
add
pop
mov
outsb
adc
mov
insb
jns
and
sub
xor
inc
neg
mov
mov
mov
mov
mov
add
sbb
fldcw
sub
add
or
fwait
dec
mov
adc
pop
add
mov
insb
adc
push
push
dec
verw
int
mov
and
das
dec
sti
dec
xlat
incl
pushl
push
shlb
ja
enter
push
xor
lock
fnstcw
inc
fchs
fidivrl
jns
jo
fsubl
fiadds
pusha
or
sahf
out
mov
dec
out
sahf
push
in
mov
inc
add
cli
inc
push
pop
loop
xchg
dec
dec
jg
inc
or
push
aaa
shlb
mov
clc
aam
adc
and
mov
add
adc
fistpll
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
jg
pusha
or
mov
sub
sub
stc
imul
mov
sbb
pushf
ds
pop
sbb
and
or
pusha
pushl
fsubs
sbb
test
xor
dec
xchg
pop
shl
dec
push
in
pop
mov
push
sahf
pop
cmc
das
and
xor
aaa
xor
inc
push
dec
cmp
mov
dec
and
inc
pop
jb
insb
leave
dec
add
xchg
jb
push
fsubrs
fsubrs
dec
imul
dec
cmp
repnz
cmp
pop
sbb
or
add
dec
inc
cmp
iret
fdivs
pop
enter
xchg
out
cmp
sahf
dec
dec
mov
push
inc
mov
insb
inc
js
cmp
sbb
scas
pop
add
push
dec
pop
xchg
push
and
int3
xor
mov
js
push
dec
idiv
ljmp
xor
xor
sub
sub
mov
inc
sub
xor
inc
push
xor
dec
pop
lods
popa
push
outsl
add
cmp
insb
ficoml
clc
push
outsb
add
lret
scas
add
and
inc
bound
jne
insb
inc
adc
ffree
arpl
dec
jp
ret
sub
push
jb
jo
mov
bound
je
bound
imul
sbb
sbb
xchg
jnp
sub
dec
outsl
and
and
and
mov
clc
ret
dec
ja
add
push
adc
shrb
add
das
cmp
and
es
push
pop
loopne
test
out
inc
sbb
stos
es
loopne
mov
daa
mov
xchg
mov
or
cmp
add
aaa
das
and
sbb
or
cmp
sbb
or
pop
jbe
inc
pop
popa
and
xchg
ds
adc
dec
inc
sub
sub
adc
jns
stos
pop
adc
push
push
lret
lock
ja
xchg
add
mov
int3
mov
dec
dec
scas
sub
adc
in
das
dec
aas
add
and
ficoml
jns
inc
mov
out
add
push
sub
inc
loop
inc
mov
fwait
scas
cmp
push
imul
mov
dec
sti
cs
sub
inc
outsl
lock
inc
out
lahf
cmpsl
cmp
js
pop
ljmp
lea
test
pop
push
cmc
push
pop
out
dec
repnz
fcoml
outsl
stc
outsb
pop
sti
mov
outsl
pop
in
mov
xor
pop
es
arpl
pop
lock
pop
loope,pt
std
fwait
int
iret
push
rcrb
cmp
pop
cld
or
imulb
push
push
pop
negb
inc
scas
into
inc
dec
mov
clc
inc
cmpsb
dec
pop
push
popf
movsb
aas
dec
push
pop
shl
push
scas
gs
sahf
data16
jns
sub
ljmp
enter
dec
pop
js
and
cs
ja
or
push
cmp
jp
jns
cmpsl
stc
inc
sbb
stos
jmp
sbb
inc
sahf
push
scas
sub
lea
push
push
push
cmpsb
sub
add
push
imul
rcl
insb
push
mov
mov
repz
aas
sub
adc
pop
addr16
mov
ja
push
in
push
js
jl
out
fwait
lods
mov
jl
rcrl
ljmp
dec
sti
ds
mov
lock
xchg
push
ret
shr
aaa
mov
push
sub
outsl
fcoml
xor
add
push
or
sahf
idivl
enter
push
add
jnp
in
lds
push
pop
push
pop
mov
mov
out
push
push
push
xchg
mov
data16
xor
pop
cli
std
mov
repz
fmulp
sbb
push
dec
jns
out
xchg
jne
repz
inc
xchg
nop
push
add
cmp
ja
sub
sarl
ficoml
lods
cld
xchg
sarl
stc
mov
xchg
cmp
enter
xor
jns
subb
out
hlt
sbb
sub
out
sahf
out
xchg
mov
hlt
repz
push
daa
subb
addr16
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
pop
in
test
xor
adc
mov
jb
mov
xor
jmp
add
idivb
cmpsl
std
pop
mov
and
pop
sbb
enter
repnz
adc
or
adc
mov
mov
add
and
push
add
xor
pop
test
inc
fldt
cmp
aaa
sbb
push
outsb
mov
ljmp
call
push
negl
sbb
or
pop
loope
addr16
push
imul
xchg
jae
fisubl
mov
add
mov
fidivrs
xchg
dec
cmp
dec
popf
jbe
pop
je,pn
push
ljmp
cmpsb
dec
add
lods
xor
aam
inc
xlat
insb
pop
push
aam
pop
push
dec
pop
je
in
ffree
mov
aaa
push
fisttps
jp
das
add
sbb
rclb
mov
outsb
iret
push
xchg
ret
dec
test
or
mov
ja
mov
dec
stos
push
clc
dec
das
add
in
pop
insb
in
mov
dec
cmp
or
ds
xor
das
adc
mov
es
insl
jo
es
insb
je
notl
popa
jo
jae
es
outsl
insb
mov
scas
and
aas
cmpb
sub
mov
push
cmpsb
mov
mov
out
mov
xor
xor
xor
xor
cmp
cmp
stos
xor
xor
cmp
inc
push
sub
sbb
pop
daa
loop
scas
insl
mov
das
or
push
aas
inc
and
bound
iret
xor
jecxz
mov
inc
add
cs
xlat
adc
daa
nopl
test
pop
aam
push
pop
jne
daa
dec
cmp
or
inc
pop
dec
pushf
andl
push
mov
add
mov
pop
push
push
pop
out
push
testb
add
add
push
or
imul
adcb
pop
push
or
mov
mov
push
lock
or
or
jg
push
push
ds
adc
dec
push
inc
js
add
xor
mov
dec
imulb
pushf
cmpsb
daa
push
adc
xor
daa
add
mov
pop
adc
test
adc
or
or
jbe
xor
ds
push
call
push
cs
xor
push
ret
and
fidivl
add
and
and
cmpb
mov
aaa
inc
cmp
lods
test
add
xorl
sub
and
sbb
xor
xor
inc
imul
call
cmp
jbe
lret
daa
dec
inc
jo
outsb
popa
mov
int
and
mov
push
fildl
aaa
lahf
lea
mov
mov
lods
mov
push
mov
movl
pop
das
outsb
mov
or
daa
lods
shrl
shll
jge
lods
testb
das
add
adc
aaa
iret
or
loop
rorl
stos
test
fwait
int
ret
adc
imul
sub
xchg
and
cmp
mov
mov
and
push
dec
mov
xor
adc
or
inc
cmp
fnstcw
adc
and
dec
das
mov
imul
pop
scas
pop
lock
lock
daa
lahf
pop
shrl
push
xchg
outsb
popl
pusha
in
lods
dec
dec
pop
int
mov
push
andb
or
xor
sbb
push
outsl
pop
mov
xor
push
xchg
pop
and
xchg
cmp
in
mov
dec
mov
popa
dec
xor
outsl
lret
loop
xor
cmp
mov
ficoml
add
or
adc
jmp
jl
jl
xchg
js
mov
adc
add
shlb
mov
mov
and
push
cmp
out
dec
js
xchg
popa
mov
mov
pop
xchg
aad
or
adc
push
mov
fistpl
cmpsl
stc
dec
sub
in
push
sub
pop
inc
adc
sub
outsb
loope
xchg
and
pop
lock
sbb
push
das
das
imul
and
add
lahf
or
mov
iret
mov
sahf
or
or
pop
cmp
out
xor
or
sub
das
push
adc
jo
jp
sub
nop
js
pop
addr16
mov
dec
sub
adc
dec
sub
mov
xchg
sbb
and
push
xor
dec
gs
pop
pop
and
test
and
pop
push
pop
inc
cmp
jbe
mov
pop
add
xchg
or
mulb
push
cmc
or
adc
sub
push
or
icebp
adc
shlb
or
push
inc
sub
inc
fistps
sbb
cmp
dec
push
cmp
mov
xor
loopne
fiadds
adc
mov
into
adc
or
cmp
fwait
loopne
cmp
aas
test
add
es
fidivl
pusha
imul
cmp
out
popa
cli
cmp
push
or
push
push
pop
adc
jo
or
daa
imul
mov
mov
sbb
push
push
cmp
or
sub
cmpsl
rcrl
adc
push
mov
adc
cmp
push
add
adc
ds
loopne
popa
int
sbb
or
push
int3
dec
lods
xor
fcom
in
or
push
and
pushf
adc
rcll
adc
call
and
and
fisubl
push
push
inc
js
add
lret
mov
xchg
loopne
or
ret
dec
cmp
and
xchg
or
inc
push
pop
aas
xorb
mov
das
pop
outsl
sahf
cwtl
or
jg
aas
push
inc
pop
inc
sub
lahf
pusha
push
addr16
dec
sbb
std
xorb
or
sub
cmp
cmpsl
and
pop
adc
mov
out
sbb
lds
pop
rcrl
je
cmpl
and
xor
xchg
lods
mov
test
push
adc
pop
xchg
push
add
jg
sub
push
pop
or
push
arpl
das
pop
cs
pop
sub
fs
xchg
loop
ljmp
push
in
push
mov
xchg
push
xor
cmp
daa
imul
jo
and
push
mov
add
cs
pop
sub
inc
sbb
pop
fcmovnu
out
lret
xor
mov
clc
push
push
adc
and
pop
stos
inc
lret
dec
add
aaa
add
sbb
pop
and
incl
daa
inc
pop
pop
cmp
or
adc
dec
inc
adc
lcall
push
sub
sbb
inc
adc
cmp
xor
dec
add
sbb
and
pop
dec
and
sbb
adc
push
aam
xor
xor
adc
incl
pop
cmpsb
add
out
dec
adc
push
cmp
inc
sub
push
dec
cmp
mov
push
cmp
sbb
inc
sub
lock
cmc
sub
mov
dec
dec
adc
push
fists
xor
adc
sub
cmp
adc
sub
ds
sub
mov
jmp
inc
cmp
inc
sbb
adc
push
ss
sbb
pop
pop
xchg
mov
jb
xchg
or
arpl
and
dec
mov
in
aam
pop
push
lds
mov
mov
das
dec
dec
push
xor
adc
inc
pop
arpl
jg
inc
push
loop
add
inc
cmp
test
ds
add
cmp
dec
js
push
and
mov
dec
cli
stos
push
pop
loop
and
push
push
dec
cmpsb
mov
cs
inc
or
and
xor
dec
insb
jne
push
les
add
sbb
inc
pop
and
xlat
test
hlt
or
icebp
icebp
cmpsl
das
and
push
push
cmp
mov
push
dec
inc
dec
push
dec
add
xor
xor
into
outsl
ffree
addb
xchg
inc
sub
ljmp
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
lcall
fcomps
adc
jge
push
je
lcall
jb
mov
andb
fwait
rol
fwait
in
inc
mov
ud0
pop
pusha
enter
jmp
dec
fsubrl
stc
jbe
push
ds
cmp
ljmp
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
addr16
call
and
cs
insl
sub
adc
or
or
cs
ret
sub
call
dec
data16
mov
call
cltd
test
push
call
push
shll
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
fcomip
push
arpl
test
add
mov
mov
movsb
mull
stc
mov
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
fcos
sbbl
int
pop
xor
ja
mov
addr16
and
pop
sub
jnp
imul
bound
cmp
aaa
arpl
push
push
jne,pt
jb
gs
pop
dec
push
inc
aas
pop
icebp
cmp
jge
push
insl
popa
jp
outsb
and
and
jno
dec
inc
sub
imul
insb
push
push
sub
and
push
or
adc
sbb
inc
out
inc
xor
or
inc
add
idiv
pop
out
xor
aaa
and
dec
and
dec
dec
xor
xor
fcoms
stc
push
rcrb
and
rcrb
and
in
mov
lahf
iret
aaa
imul
mov
pop
daa
add
or
mov
xor
and
dec
popa
neg
cs
lsl
and
aaa
xor
jnp
aaa
push
xor
inc
add
xor
xor
pop
outsb
cmpsl
cmp
inc
add
inc
jnp
ret
inc
inc
xor
mov
inc
push
inc
cmpsb
inc
cmc
mov
scas
ss
cmovb
pop
ss
cmpsl
ss
mov
and
add
mov
into
orb
push
or
movsb
and
xor
outsb
cmpsl
rcll
adc
popa
sub
insb
scas
bound
sub
cmp
push
pop
push
jo
imul
and
out
sbb
mov
out
pop
mov
cwtl
xchg
cmp
out
push
or
pop
cmp
sbb
nop
fnstenv
cmp
xlat
inc
xchg
js
in
mov
bound
adc
shrb
adc
js
push
loopne
push
and
mov
adc
aaa
push
jb,pt
mov
and
orb
push
sbb
pop
rorl
adc
sbb
xchg
push
mov
cld
call
sbb
mov
cmp
cmpsb
sub
cmp
adc
mov
sub
pop
sub
daa
adc
sub
sbb
push
scas
out
pop
jge
sub
pop
xchg
out
jge
mov
push
mov
sub
jge
pop
xor
push
sub
cmpb
adcb
sbb
xchg
cs
mov
add
sbb
adc
lret
fidivrl
daa
push
mov
cmp
jno
cmp
inc
fcmovne
pop
sub
mov
fs
daa
adc
inc
lea
xor
inc
popa
in
push
sbb
out
inc
push
pop
popf
add
outsl
popl
sub
sbb
cwtl
rolb
inc
xchg
adc
adc
mov
test
insb
and
sbbb
mov
adc
rdmsr
stc
xchg
mov
pop
js
xor
jae
popa
loope
pushf
sbb
cmp
and
pop
inc
adc
and
xor
sbb
inc
aad
insb
pop
or
pushl
insl
loop
and
js
push
push
out
aaa
jecxz
stos
push
dec
mov
insb
stos
push
popa
je
or
push
outsb
cld
ret
xchg
or
les
add
and
negb
or
xor
add
push
gs
pop
sub
std
xchg
out
or
pop
sub
rorb
and
and
aaa
mov
push
test
int3
inc
adc
aam
add
insb
mull
add
add
fs
push
fildll
adc
andb
rcrb
xchg
push
pop
xor
dec
outsb
popf
mov
sbbl
ds
aaa
cmp
push
lds
cmp
push
add
adc
fnstcw
and
addb
push
mov
inc
aaa
add
addl
in
ds
popa
fbld
pop
push
ss
jb
pop
jg
xchg
pop
std
jae
inc
push
jb
xorb
and
mov
xor
cmp
add
mov
daa
mov
pop
or
rolb
repz
idivb
adc
sbbl
rcrl
push
sub
ficoml
sbbb
imul
xchg
or
push
outsl
imul
xchg
sub
push
ss
cmpsl
or
pop
inc
lgs
je
out
cmp
cmp
push
aas
in
mulb
xor
or
add
push
xor
and
cmc
add
mov
sub
push
xchg
inc
push
daa
sub
dec
call
sub
inc
sbb
ds
mov
addr16
jnp
adc
jge
sub
push
xlat
xchg
pop
push
push
test
pop
aaa
cmp
xchg
mov
cmp
pop
inc
sbb
ja
dec
sbb
pop
xchg
xor
and
into
cmp
fst
pop
or
mov
or
int
mov
sub
add
mov
movsb
mov
mov
rcrb
push
mov
scas
mov
aad
out
inc
and
out
pop
pop
mov
pop
sub
test
inc
cmp
dec
pop
sub
insl
das
dec
pop
movsl
and
push
fcmovnu
dec
pop
repz
test
je
insb
daa
jnp
lods
inc
aad
jno
cmc
mov
jnp
xor
call
add
inc
popf
xor
bound
scas
inc
pop
inc
roll
or
cmpb
adc
adc
add
sub
inc
dec
mov
sub
mov
and
sbb
in
or
add
cmp
add
fstl
dec
pop
aaa
jns
jne
xchg
add
adc
pop
gs
mov
std
movsl
ss
dec
and
addr16
popa
pop
pop
xor
sub
outsl
sbb
lods
push
and
cmovo
sbb
punpckhwd
orb
je
scas
pop
bswap
inc
lods
jbe
fwait
cmp
adcl
push
inc
sahf
adc
dec
inc
dec
inc
push
pop
pop
dec
xlat
jb
gs
mov
inc
xchg
adcb
gs
pop
daa
cmp
roll
pop
mov
enter
dec
pop
les
test
lcall
add
js
and
cmp
adc
jno
add
adc
std
loope,pn
lret
nop
mov
xorl
jns
jb
in
popf
adc
push
adc
push
fnstcw
movl
es
inc
sub
push
insl
jno
jae
fiadds
call
data16
lock
xchg
inc
fimuls
sub
push
push
iret
repz
cltd
xor
add
sub
movsb
stc
cmp
mov
imul
sbb
add
sub
pop
cmp
xor
dec
outsb
clc
sbb
dec
or
dec
mov
lcall
push
rolb
pop
cmp
cli
xchg
pop
push
out
push
cmp
lret
inc
add
dec
dec
pusha
xor
xchg
dec
push
push
dec
xlat
fimuls
add
pop
orb
cmpsb
adc
dec
lahf
push
inc
aas
or
xchg
sbb
pop
sbb
or
adc
fdivrs
loopne,pn
daa
jne
dec
mov
adc
out
adc
or
and
adc
sti
in
add
cmpsl
fcomps
lcall
arpl
add
dec
stos
mov
dec
cmp
push
add
pop
add
insl
xor
xlat
jbe
imul
scas
daa
push
xorl
lds
int
sbb
sub
mov
push
in
jne
je
sub
lcall
and
push
push
das
xor
xor
inc
je
ds
fisubrs
sub
fsub
xor
lahf
enter
and
inc
outsw
insl
pop
xor
mov
and
xor
push
mov
push
push
push
inc
dec
dec
dec
inc
mov
outsb
jg
xchg
imul
andb
rolb
cmp
or
dec
xchg
pushf
and
in
push
mov
push
adc
xchg
insb
mov
mov
sub
adc
leave
sub
orb
dec
xchg
dec
inc
adc
test
cmc
inc
lahf
in
mov
inc
popl
lock
pop
jnp
ljmp
aas
mov
sahf
mov
jo
sbb
sbb
ret
xor
in
les
xor
sbb
inc
jbe
out
add
xor
aaa
int
mov
lahf
and
sahf
outsl
dec
movsb
fs
cmp
mov
movsb
or
lods
in
outsl
ror
cmpb
repz
jg
daa
test
clc
pusha
fwait
insb
pop
or
shll
outsl
pop
mov
inc
add
mov
and
daa
aas
out
mov
jg
dec
outsl
mov
mov
daa
dec
inc
inc
and
xor
and
sub
and
fisttpl
sbb
mov
shrl
or
push
cmp
sbb
mov
ds
inc
cwtl
or
aam
jl
out
adc
hlt
cmp
stc
cmp
rorl
out
sahf
cmpsl
enter
cmp
cmp
jns
cmp
cmp
je
repz
out
and
or
out
out
lock
out
push
push
ja
and
add
js
adc
mov
stos
dec
inc
outsl
dec
rclb
add
iret
test
fmuls
add
cmp
add
dec
lcall
jae
mov
jo
push
mov
jge
enter
dec
inc
mov
push
add
mov
jg
in
pop
ja
in
and
ja
add
dec
xchg
dec
mov
dec
pop
in
dec
outsl
fs
inc
loopne
mov
dec
shll
das
mov
outsl
leave
mov
or
filds
inc
inc
pop
or
inc
add
mov
fwait
adc
cmp
outsl
xchg
or
leave
add
cmp
mov
cmp
dec
add
js
mov
dec
pushf
add
lods
sub
mov
loopne
fsubrs
and
mov
shlb
mov
cmp
xor
cmp
push
lock
cmp
scas
add
bound
fs
add
nop
pushf
pop
leave
xor
xor
enter
enter
test
sub
mov
outsl
sub
inc
call
xchg
dec
cmp
jns
sub
sub
jnp
xlat
les
aam
push
leave
mov
jl
inc
lahf
mov
pop
sbb
lods
or
out
push
push
cmp
ja
xchg
repnz
cs
sahf
dec
cs
mov
and
outsl
add
scas
fs
and
outsl
and
shl
test
nop
or
and
outsl
and
push
mov
leave
mov
pop
scas
add
insb
and
fildl
fsubs
add
call
xchg
cmpsl
adc
push
aaa
jb
add
aaa
push
rorl
aas
pop
xchg
or
fisubs
daa
add
dec
fimuls
ljmp
lahf
mov
out
es
push
push
rcr
aaa
dec
push
xor
mov
rcrb
inc
xchg
ficoms
pop
leave
xor
sbb
js
in
add
pop
cmp
test
xchg
inc
testl
or
pop
insb
shrb
push
outsl
add
add
push
and
daa
testl
push
add
push
fs
je
pop
divl
sub
or
push
ficoml
je
push
je
loope
dec
inc
mov
adc
or
roll
inc
in
inc
lahf
push
ret
adc
or
in
pushf
nop
inc
mov
daa
jl
stos
pop
xlat
or
nop
inc
add
adc
inc
inc
lahf
adc
or
adc
lods
inc
pop
add
rorb
inc
mov
add
and
pop
leave
fdivs
add
leave
add
scas
jo
jo
jnp
clc
push
test
mov
cwtl
push
xor
aaa
mov
lods
or
add
sub
xor
in
outsl
addr16
cmp
add
adc
cmp
inc
inc
out
and
xchg
je
jae
mov
add
xchg
pop
mov
les
movsb
leave
xchg
cmp
lock
pop
cmp
xor
das
and
xor
inc
outsb
rorb
dec
sub
inc
sub
inc
mov
mov
jo
das
outsl
lods
in
leave
add
cmp
adc
inc
pop
test
jecxz
inc
ss
cmp
sbb
and
add
in
andl
cmpsb
jo
ret
dec
cs
pushf
mov
popa
imul
popa
roll
scas
mov
dec
out
sub
daa
or
dec
scas
in
add
out
loope
inc
inc
push
mov
push
sarl
aam
push
mov
js
neg
ss
cmp
je
aas
add
and
or
test
aas
or
inc
movsb
dec
daa
add
push
dec
outsl
mov
pop
or
fistpll
addb
add
add
dec
ficoms
hlt
jge
pop
addr16
dec
dec
pop
add
sbb
scas
add
cmp
out
inc
sub
subb
enter
pop
or
sub
scas
in
dec
and
daa
or
jl
xor
mull
xchg
inc
push
test
push
das
push
fdivl
insb
outsl
add
addr16
xlat
sarb
sub
enter
pop
cmpsl
fcomps
mov
xchg
sub
aaa
push
inc
mov
dec
das
sbb
mov
mov
mov
dec
outsl
mov
adc
pop
enter
mov
xlat
sbb
loopne
data16
pop
iret
lds
push
jae
out
clc
aas
movl
addr16
sub
out
jo
mov
cmp
push
add
fsub
sbb
ds
movsb
iret
add
outsb
int
jns
xchg
mov
lock
dec
push
ds
repz
scas
shr
or
sahf
out
and
jg
repz
out
repnz
ds
mov
movb
lret
push
dec
xor
out
popa
mov
daa
dec
push
stc
cmp
repz
jns
cmpsl
cmp
or
repz
push
in
push
out
cmp
pop
jl
out
push
int
jns
inc
jb
ljmp
cmp
xchg
out
cmp
mov
int
jns
lcallw
ja
iret
repz
mov
ss
popa
xor
out
xchg
mov
jl
iret
repz
and
xlat
sub
rcll
mov
jl
cmpsl
xchg
mov
or
jns
iret
mov
pop
jno
pop
pop
push
sahf
out
into
sub
cmpsb
pop
pusha
cltd
sti
ds
sarl
pop
enter
cmp
out
js
add
cmpl
cwtl
jns
iret
repz
cmp
repz
addr16
fsubs
repz
cmpsl
stos
fisttpll
imul
lods
sbb
imul
jl
iret
pushl
shl
lcall
aas
outsl
cmpsl
stc
cmp
insl
mov
repz
sbb
shl
push
jb
imul
add
dec
repz
add
rorb
ds
jbe
sbb
and
out
lcall
push
mov
add
iret
repz
js
push
jl
ja
out
je
idivb
jge
mov
jl
xchg
jg
nop
mov
outsb
xor
adcl
adc
mov
sti
push
test
push
mov
test
iret
repz
jo
xchg
fdivr
int
imul
cmp
cmp
push
mov
mov
out
daa
lea
push
jns
jge
pusha
mov
xchg
stc
imul
jl
xchg
xchg
fdivrs
int
std
enter
outsb
mov
cmp
out
dec
lcall
out
fwait
cmpsb
loope
pushf
xchg
iret
cmp
cli
pushf
popf
push
mov
lahf
out
je
jmp
lahf
dec
shlb
or
push
jecxz
ret
mov
stos
cmpsl
into
xor
int3
cmp
int
stos
push
lods
push
scas
mov
out
dec
aas
add
pusha
inc
inc
jg
cmpsb
rolb
mov
enter
mov
xchg
fildl
dec
mov
mov
js
lods
fistpl
inc
daa
cs
ja
pop
leave
xor
fcomps
xor
adc
pop
cmpsl
mov
pop
or
pop
enter
aas
xchg
xlat
es
in
in
int3
mov
stc
out
inc
add
cmpsb
aas
jg
inc
dec
mov
pushl
testb
xor
adc
lahf
out
add
inc
pop
push
xchg
jns
test
aaa
test
push
cmpsb
lods
inc
pop
enter
repnz
add
mov
or
mov
lret
push
outsl
bound
or
daa
and
dec
aas
popf
dec
pop
insb
int3
jg
dec
mov
sbb
mov
pop
fmuls
bound
push
sahf
push
fucomip
aad
xchg
jo
pop
jle
sbb
clc
dec
mov
aas
imul
jbe
popf
mov
aas
sub
jno
in
sbb
inc
mov
fwait
xchg
pop
mov
push
mov
dec
mov
fs
inc
jbe
aas
aas
or
aaa
shrb
leave
push
push
mov
inc
hlt
push
mov
cltd
lret
inc
mov
push
jmp
comiss
inc
mov
fnsave
inc
push
daa
push
push
aaa
jb
and
inc
incb
dec
int3
dec
mov
into
cmp
mov
push
iret
ds
iret
outsl
enter
cmpsl
in
cmpsl
lahf
adc
cld
pop
aam
xchg
dec
pop
xor
mov
inc
jmp
sub
inc
shl
adc
cli
repnz
aas
cltd
fadds
decl
aas
int3
jbe
enter
pop
iret
mov
leave
and
or
inc
pop
add
adc
je
nop
in
bound
nop
or
xor
inc
sarl
leave
test
push
add
das
mov
mov
cmp
inc
dec
leave
xchg
xchg
cmp
pop
fcompl
pop
push
hlt
inc
dec
scas
mov
pushf
pushf
in
pop
xor
pop
scas
loopne
xor
aas
mov
cmpsb
mov
shr
loopne
inc
mov
lods
int3
scas
stc
test
movsl
rol
push
out
or
sbb
xor
out
xchg
aaa
push
add
jb
cmp
dec
xchg
insb
pop
jb
jb
jl
xchg
push
fcoms
and
mov
xchg
sbb
cmpsl
leave
flds
and
fwait
xor
mov
push
jb
xlat
cwtl
mov
mov
lock
xchg
dec
loopne
pop
ds
nop
pushf
xchg
cmp
xchg
xchg
pushf
or
je
fs
dec
push
mov
inc
or
mov
and
enter
dec
inc
movsb
dec
inc
enter
add
jg
pop
push
leave
xchg
iret
add
pop
inc
pop
push
rorl
mov
xchg
add
jns
mov
xchg
push
hlt
ljmp
in
testl
xor
jb
pop
xor
nop
xchg
imul
jb
pop
inc
popa
dec
insb
dec
ja
sahf
out
sahf
add
jns
out
push
mov
in
out
out
mov
xchg
scas
incb
pop
es
and
sub
dec
pop
std
xchg
iret
add
add
pop
inc
repnz
sub
mov
push
dec
push
pop
dec
fs
outsl
leave
inc
repnz
fmulp
leave
popf
movsl
lods
cmpsb
add
add
push
sub
pushf
pushf
dec
out
idiv
leave
and
sahf
push
dec
push
dec
jl
enter
dec
cmp
pop
jb
jb
dec
push
pop
rcr
mov
test
mov
cmpsl
movsb
pop
lods
mov
inc
repnz
pop
popa
iret
push
das
mov
pushl
add
cmovge
out
and
xchg
addr16
add
leave
clc
iret
repnz
inc
repnz
cmc
inc
xor
and
mov
inc
repnz
bound
add
pop
jl
mov
bound
xor
fidivs
cmp
fsubl
mov
arpl
inc
daa
cwtl
in
pop
push
arpl
fs
dec
dec
and
dec
pushf
arpl
push
enter
enter
dec
xchg
pop
inc
out
orb
fs
outsl
sbb
xchg
and
sbb
xchg
sbb
shrl
mov
es
fs
xchg
hlt
cld
and
sub
mov
adc
hlt
fs
and
fs
inc
out
dec
and
dec
pop
in
in
mov
dec
sahf
dec
test
in
dec
mov
dec
sahf
out
fsubp
push
or
or
or
cmp
jmp
push
push
or
or
iret
push
and
sub
repz
inc
adc
repz
repz
adc
adc
iret
push
test
xchg
sbb
sbb
imulb
dec
loopne
xlat
push
inc
xor
mov
push
nop
into
inc
jb
inc
mov
aam
inc
pop
out
movl
enter
addr16
scas
filds
add
and
call
mov
jl
stos
jbe
xor
iret
push
daa
xlat
push
ja
sub
outsb
fistps
jg
inc
ja
rcll
add
jns
rcrb
rsqrtps
adc
daa
and
aas
push
das
setb
bound
push
pushf
pop
mov
addr16
lea
scas
aaa
add
call
cwtl
adc
push
ljmp
leave
or
in
je
fcoms
scas
dec
cmpsb
in
or
mov
cs
xchg
mov
mov
xchg
jg
mov
xchg
pop
leave
arpl
or
das
lock
mov
push
mov
sahf
fildl
pop
inc
push
add
loopne
enter
mov
ds
aad
imul
and
inc
jle
xor
dec
aam
fmull
jns
imul
sbb
popa
xlat
ficoms
in
cltd
mov
add
das
xchg
xchg
out
hlt
push
push
fldt
adc
push
push
es
cs
add
ss
jg
mov
xchg
push
fs
pop
sub
mov
inc
enter
mov
incl
mov
int3
andl
push
ljmp
pop
leave
mov
push
xor
fs
pop
leave
pop
es
mov
cmp
mov
ja
push
mov
pop
jb
mov
mov
and
test
xchg
outsb
adc
decl
xchg
xchg
outsb
and
cs
filds
xchg
int
cwtl
outsb
push
xchg
mov
mov
add
icebp
xchg
xchg
outsl
scas
in
xchg
pusha
pop
inc
dec
outsl
cmp
jns
add
pop
outsl
aad
xchg
outsl
repnz
pop
or
addr16
and
pop
xchg
add
outsl
mov
nop
dec
and
mov
mov
push
fbstp
outsb
xchg
inc
repnz
test
enter
mov
mov
pop
fcoml
aas
addr16
lret
xlat
js
pop
dec
dec
pop
push
pop
lret
lret
lret
lret
pop
pop
addr16
outsl
pop
ja
lret
lret
lret
lret
jg
xchg
pop
xchg
pop
lret
lret
lret
lret
lahf
pop
cmpsl
pop
scas
pop
mov
jmp
pop
pop
iret
pop
cmp
cmp
or
cmp
or
or
xchg
xchg
xchg
lret
add
xchg
xchg
xchg
add
add
iret
and
jno
repnz
call
pop
jbe
dec
repnz
dec
cs
out
mov
xchg
int3
mov
pop
and
insl
mov
add
aam
repnz
xor
enter
adc
sbb
push
add
mov
pop
push
pop
pop
aas
arpl
repz
sahf
ja
push
push
jae
push
or
iret
orl
decl
lahf
jae
daa
cmp
mov
into
dec
fidivs
mov
add
sbb
rcll
mov
jg
xchg
and
pop
pop
daa
fstp
mov
imul
dec
or
cltd
or
cmp
cmp
or
pcmpeqb
jnp
test
dec
xchg
add
sahf
cmp
decb
mov
out
push
push
inc
aas
sbbb
or
or
jo
out
shll
or
je
jmp
test
in
mov
int3
aam
fnsave
loopne
in
psubd
fistpl
or
sbb
outsb
and
dec
sub
or
pop
sub
pop
pop
push
pop
inc
repnz
jbe
leave
leave
leave
nop
test
iret
repz
add
in
pop
loope
mov
adc
sbb
pop
mov
pop
xlat
inc
pop
dec
pop
shrl
das
xor
xor
pop
pop
pop
pop
xor
xor
pop
pop
pop
pop
xor
xor
pop
pop
pop
pop
dec
lock
pop
pop
sbb
in
repnz
addr16
es
iret
add
nop
fistl
push
js
loopne
iret
sbb
ret
stc
pop
smsw
push
add
in
outsb
daa
sbb
and
sub
and
or
pusha
cmp
cmp
cmovns
xchg
xchg
adcb
jns
jb
enter
enter
push
pusha
in
pusha
inc
xchg
jb
cmpsb
mov
push
push
add
sbb
jns
andb
cmp
mov
popa
cwtl
popa
mov
js
popa
iret
mov
mov
dec
jb
popa
call
mov
in
inc
fwait
in
bound
loopne
inc
xor
lea
add
mov
xchg
mov
jmp
ja
adc
sub
mov
and
cmp
addr16
adc
pop
popa
arpl
arpl
pop
dec
cmp
dec
sarb
les
push
daa
add
dec
test
enter
pop
loopne
jmp
mulb
cmp
add
sbb
cmp
xchg
jl
jl
decl
and
sbb
fs
imul
jg
mov
out
in
scas
push
or
or
ftst
mov
cmp
cli
add
xchg
and
gs
insb
loopne,pt
fisttps
sbb
vmwrite
gs
mov
leave
jae
push
add
mov
inc
shll
mov
fimuls
out
add
jle
mov
pushf
adc
invlpg
push
push
imul
xchg
xor
jae
jnp
subl
add
out
add
push
cbtw
xlat
pushfw
test
dec
jg
pop
addr16
mov
mov
xor
sbb
sarl
dec
pop
and
outsb
sub
test
aaa
nop
push
iret
mov
mov
push
dec
xchg
das
push
repnz
push
push
enter
verw
es
cs
or
cmp
aaa
ud2
dec
or
and
js
push
jbe
in
mov
adcl
dec
cs
int3
vpmullw
adc
dec
or
push
daa
inc
addr16
in
fldenv
imul
js
fmulp
leave
inc
pop
outsl
xchg
mov
cmp
add
push
mov
addr16
cmp
fdiv
enter
push
repnz
add
push
incl
push
and
cmp
push
adc
sbb
enter
push
push
push
add
sahf
out
dec
add
pop
push
cmp
sbb
push
in
in
jl
test
push
push
jne
in
push
pop
ud2
pop
or
cmp
cmp
or
push
cmp
cmp
add
sahf
out
sbb
sahf
out
sbb
sbb
sahf
push
aam
fmull
and
pushf
pushf
cmp
in
hlt
and
push
add
es
repnz
ret
pop
pop
sub
in
imul
test
dec
mov
mov
popf
add
out
dec
outsb
packssdw
pop
mov
or
iret
fcmovne
repz
xlat
xchg
add
testl
out
out
pop
cmpsl
inc
mov
and
xor
into
popf
fildl
inc
aas
dec
pop
pslld
mov
pop
or
pusha
insb
out
sahf
aaa
push
js
fisttpl
or
mov
jns
xchg
nop
cwtl
adc
jae,pt
adc
test
insb
jmp
insb
loopne
mov
adc
insl
insl
insl
mov
insl
mov
lea
out
pop
insl
out
or
test
cmpsb
mov
iret
mov
out
mov
cmpsb
repnz
test
jbe
inc
pop
inc
ss
xchg
or
mov
insl
call
pop
sbb
outsb
jl
daa
daa
outsb
outsb
xchg
xchg
xor
cmp
mov
cmp
outsb
push
out
mov
mov
pushf
sbb
mov
outsl
daa
outsl
test
and
outsl
aaa
outsl
mov
jl
btcl
nop
lahf
mov
adc
mov
jmp
pop
mov
out
and
iret
add
leave
subl
dec
add
jbe
cmp
inc
inc
xchg
dec
outsb
mov
in
hlt
fs
repz
add
in
sahf
out
or
and
cmp
in
sub
xor
cmp
repz
leave
inc
inc
adc
cmpsl
jmp
push
pop
jo
js
mov
jg
cwtl
jo
mov
pmaxsw
mov
scas
and
xchg
xchg
cmc
leave
pop
orb
mov
add
nop
mov
scas
lock
outsl
xchg
jno
or
add
popf
aaa
adc
mov
cltd
inc
jecxz
jno
mov
in
into
in
push
iret
pop
daa
data16
jg
jns
outsb
das
cwtl
push
add
mov
push
mov
lods
xor
push
orl
and
add
sub
aas
xchg
pop
pop
stos
repz
iret
xchg
push
jns
test
sub
jnp
fmuls
pushf
xchg
js
aas
push
leave
repz
sahf
add
dec
push
dec
mov
mov
repz
or
shll
bswap
mov
jb
push
leave
adc
or
out
repnz
and
sub
in
sahf
add
add
out
cmp
dec
push
or
repz
or
or
je
mov
jae
iret
adc
xchg
jae
adc
lea
ja
fadds
xchg
xchg
out
loopne
call
mov
mov
aam
je
sarl
jg
repnz
xchg
mov
add
jmp
imul
jmp
je
outsb
lea
xchg
push
out
out
fs
rcr
pushf
movsb
push
jl
cmp
fildll
mov
dec
push
stos
pop
jne
pop
adc
push
aas
into
stos
sarl
xchg
pushf
or
rep
adc
mov
push
iret
pop
fiadds
cmp
fmulp
data16
add
jne
jecxz
dec
jbe
leave
add
dec
and
mov
dec
push
daa
insb
adc
cmpsl
call
jne
jne
jne
jbe
and
cmp
jg
jbe
jbe
mov
jb
jbe
jbe
jbe
jbe
enter
popa
jbe
ja
push
cmp
ljmp
cwtl
jbe
mov
nop
incl
leave
and
shlb
adc
pusha
xchg
ja
dec
cmp
arpl
ja
dec
ja
ja
inc
mov
ja
ja
ja
cmpl
ja
xlat
mov
push
std
sbb
adc
iret
shlb
and
and
dec
out
ja
xchg
xchg
xchg
xchg
mov
rcr
stc
loop
xchg
loop
pop
push
pop
bnd
inc
mov
ja
js
movlps
and
push
scas
js
shld
inc
repnz
js
pop
leave
jae
ja
hlt
cmpb
pushf
mov
xor
dec
add
mov
xor
leave
repz
fdivrs
cmpl
test
inc
mov
cmpl
fnsave
or
push
xchg
pop
push
ds
out
aas
push
lcall
jns
push
call
dec
cmpsl
dec
push
cmp
in
push
push
pop
mov
pusha
fs
pushf
pop
cmp
or
in
mov
pushf
pushf
pop
and
xlat
filds
add
out
out
testl
inc
bndldx
loopne
and
jp
xor
cltd
push
xchg
ja
and
cmp
pop
xchg
pushf
pop
mov
xchg
repnz
mov
jp
loop
rclb
jp
jp
and
pop
decl
dec
mov
pop
xor
je
sbb
push
in
fstpl
js
popf
xchg
mov
and
in
in
mov
add
pop
fsubp
out
xchg
xor
psadbw
jnp
push
jl
popf
pushf
mov
or
push
jl
mov
xor
sbb
cmp
xchg
repnz
xchg
xchg
insb
iret
add
mov
leave
inc
xchg
cmpxchg
ja
cs
ja
fstpl
dec
fimuls
cmp
aas
cmp
jge
push
negl
mov
incl
jae
jns
mov
daa
test
rol
in
movsb
cmp
fninit
ja
xchg
js
lods
and
das
je
jle
push
movd
inc
ljmp
dec
leave
cmp
lsl
mov
and
pop
jle
jle
jle
and
pusha
fs
dec
jle,pt
jle
push
sahf
pop
out
rolb
shlb
repz
fsub
pop
lgdtl
scas
call
xchg
xchg
jle
jle
jg
jg
xchg
xchg
out
push
or
repz
sahf
adc
sub
push
xor
cmp
repz
sbb
dec
ret
xchg
out
push
push
sbb
jg
add
mov
and
repnz
daa
inc
fwait
adc
enter
xor
fwait
jg
das
xor
jg
push
add
mov
push
sbb
and
push
or
sahf
out
jns
cmp
or
enter
dec
rcpps
repnz
jecxz
sbbb
pushf
loopne
subb
push
addb
mov
outsl
repnz
bswap
push
or
or
outsb
fsub
outsl
and
jl
call
pushf
mov
fs
outsb
xchg
andl
ja
jo
push
add
fadds
enter
addl
dec
incl
pop
cmpb
mov
push
sbbb
sbb
mov
jp
jp
cmp
repz
lcall
leave
stos
clts
pop
add
or
or
iret
repz
mov
jae
cmp
rcr
adc
jbe
cmp
ljmp
int3
lock
and
and
ja
dec
and
add
sahf
push
pop
cmp
ret
out
daa
pusha
sbbl
sbb
sahf
aaa
push
add
out
sahf
out
or
out
sahf
movsb
or
je
or
lahf
in
mov
pop
and
in
out
xchg
adc
sbb
repnz
cmp
inc
fimuls
ds
dec
test
or
add
mov
or
out
push
jg
push
addr16
push
push
popf
push
fbstp
into
leave
inc
rcl
out
mov
jmp
addr16
daa
daa
adc
fsub
call
xchg
and
insl
sub
xor
pop
mov
mov
test
push
test
iret
les
outsb
test
repz
jmp
mov
stc
outsl
sidtl
dec
data16
adc
xchg
pop
and
adc
push
xchg
inc
out
xchg
lsl
dec
add
sahf
out
mov
iret
in
and
aam
add
dec
es
mov
and
xchg
incl
sub
xchg
or
push
add
mov
jnp
addl
and
pop
stos
ds
je
mov
pop
push
mov
dec
loopne
call
leave
dec
movsb
mov
daa
mov
and
mov
mov
push
and
inc
dec
call
pop
leave
repz
enter
repz
enter
push
mov
push
daa
enter
daa
mov
fmuls
loopne
xor
or
cmp
dec
lock
mov
dec
adc
push
repnz
js
inc
mov
orb
fmull
test
leave
in
jbe
pand
pmaxsw
fs
notb
in
in
xchg
cltd
mov
faddl
mov
in
sahf
ja
sbb
pusha
cmp
in
push
mov
push
in
daa
iret
and
lret
push
and
xchg
push
iret
in
fimuls
and
dec
and
daa
fsubs
dec
mov
push
push
pusha
in
sub
mov
mov
insl
xchg
das
pushf
xchg
add
mov
mov
jns
push
dec
push
add
or
and
push
pop
lea
inc
mov
inc
lea
push
lea
mov
xchg
and
jl
mov
cmp
lods
cmp
cmp
into
fsubp
imul
mov
lea
or
or
out
push
or
add
and
pmaxub
mov
fwait
dec
ds
test
fsubrl
and
pop
jno
cmp
repz
add
xlat
xchg
mov
mov
mov
mov
mov
mov
xchg
xchg
xchg
xchg
mov
mov
mov
mov
xchg
xchg
xchg
xchg
mov
push
push
push
mov
es
xor
jl
dec
inc
push
pop
iret
mov
insl
js
pop
cmpb
cmp
mov
xchg
and
cmp
repz
and
cmp
and
int3
cmp
repz
xlat
or
sub
outsb
repnz
mov
nop
xor
pop
imul
sbb
dec
pop
inc
nop
fists
syscall
ficoms
iret
or
stos
jnp
and
mov
nop
call
lods
pop
sgdtl
fiaddl
adc
mov
pop
stos
fisttps
dec
cmpsb
loopne
lock
jb
jae
mov
sbb
jb
jb
dec
fs
jb
jb
sahf
mov
cmp
jae
paddsw
cmc
outsb
and
add
neg
in
adc
aas
sahf
fcmovne
in
inc
punpcklwd
popf
sbb
xchg
out
movsl
sbb
repz
daa
enter
lahf
mov
iret
and
iret
adc
daa
ds
xchg
iret
jae
mov
inc
sub
jae
cmp
subl
xchg
repnz
iret
xor
cmp
jbe
movntq
xor
leave
repz
incl
xchg
jae
jns
pop
pop
xchg
pop
cmp
test
pop
xchg
pusha
xchg
ss
das
loopne
xchg
add
lods
leave
out
dec
iret
add
scas
outsb
daa
daa
adc
shl
jmp
addr16
xchg
add
jp
xchg
ljmp
das
xchg
pcmpeqb
pop
and
add
pushf
shl
iret
xor
jns
lock
sti
push
add
xchg
adc
cmp
jae
add
add
jbe
pop
dec
push
or
iret
rorl
or
je
cmp
cwtl
adc
jns
xchg
mov
jns
xchg
out
iret
ficoml
in
xchg
out
lock
mov
pop
into
push
xchg
adc
iret
jae
daa
xor
cmp
cmp
push
pop
add
into
imul
int
scas
sub
scas
leave
inc
repnz
repz
dec
js
mov
sbb
dec
and
add
sahf
outsb
repnz
push
inc
pop
jns
in
mov
iret
mov
cs
push
or
cmp
jmp
femms
js,pt
cmpb
repz
jmp
push
adc
lar
sahf
out
pop
mov
mov
mov
inc
mov
inc
sbb
jl
sbb
daa
fsubrs
push
adc
jecxz
iret
jns
cmp
push
mov
scas
xor
cltd
aas
sbb
or
repnz
push
mov
ud1
push
jl
in
jb
xchg
setns
xchg
out
ror
aam
popf
pushf
fmull
fsub
in
xchg
sbb
icebp
inc
dec
and
lcall
mov
aaa
addr16
dec
aas
push
movb
dec
dec
cs
push
mov
mov
xchg
xchg
popf
movsl
lods
mov
add
cltd
dec
or
jbe
call
out
repnz
add
iret
leave
repz
xor
inc
push
insl
cmp
call
pop
jbe
xchg
xchg
sahf
cmpsl
push
cld
in
in
ror
es
iret
in
flds
inc
dec
dec
add
adc
xchg
popf
in
pushf
xchg
mov
leave
sub
xchg
push
push
sub
pushf
xlat
inc
dec
sahf
out
pop
jg
jb
push
mov
mov
in
jbe
ffreep
pop
lret
iret
mov
pop
ljmp
daa
or
adc
negl
popf
and
mov
pop
pushl
jae
popf
pusha
punpckhbw
sbb
mov
in
in
stos
btr
or
push
mov
popf
pop
mov
mov
test
or
adc
mov
enter
xor
out
shl
cmp
pop
dec
add
and
or
cltd
dec
push
sbb
shrl
jl
ror
dec
js
pop
rolb
push
sahf
mov
add
inc
popa
in
pop
lahf
lahf
call
pusha
imul
repz
add
add
lahf
jns
jns
lods
lahf
mov
lahf
jbe
jns
fstps
cli
pop
xchg
xchg
scas
hlt
add
sbb
xchg
mov
inc
mov
xchg
mov
jae
jle
xchg
xchg
xchg
mov
lahf
mov
xchg
mov
sbb
in
jbe
aas
sbb
sbb
in
in
push
adc
out
shrb
iret
cmp
loope,pn
push
xor
or
cmpsl
xchg
outsb
mov
aas
mov
repz
mov
cmp
cmp
repz
and
cmp
cmp
inc
aas
dec
iret
repz
inc
pop
inc
gs
jo
fdivp
cmp
jnp
fiadds
in
enter
fdivp
mov
cmovnp
hlt
cmp
daa
iret
dec
decl
mov
cmp
repz
push
ss
outsb
daa
iret
push
inc
dec
pop
push
in
dec
dec
insl
js
sbbl
cltd
movsb
addr16
ffreep
mov
int
cmp
in
or
and
out
jns
add
add
mov
or
mov
push
pop
xadd
ja
cmp
mov
adc
cmp
repz
pusha
adc
jo
iret
leave
repz
adcb
iret
mov
mov
and
ret
sbb
pushf
jmp
mov
mov
nop
pop
and
mov
pop
xor
inc
push
add
and
cld
pop
push
movsb
pop
pop
pusha
movsb
adc
xchg
jl
push
cmp
pop
imul
dec
ja
daa
and
mov
pop
dec
dec
mov
mov
and
pop
clts
xor
in
loopne
and
ja
or
repnz
fimuls
movsl
adc
out
aas
adc
movsl
and
pop
adc
pop
movsl
movsl
movsl
pusha
in
and
inc
inc
ja
pop
mov
or
mov
fldt
mov
lret
rcr
mov
je
pop
pop
and
jg
cmpsb
in
fcmovne
adc
pop
pop
push
mov
cmpsb
das
pop
loope
xor
dec
cmpsb
push
cmpsb
mov
cmpsb
insb
emms
pop
cmpb
cmp
lea
xchg
out
mov
xchg
inc
cmp
lock
aaa
jb
dec
iret
sti
cmpsb
push
cmpsl
adc
out
fwait
mov
sbb
cmp
xchg
daa
xor
cmp
daa
iret
and
punpckhwd
out
outsl
jg
daa
mov
pop
cmpsl
sub
mov
call
push
in
daa
iret
add
sbb
add
icebp
sub
data16
daa
and
test
test
add
mov
fucom
jns
mov
add
outsb
mov
scas
test
sbb
jb
test
test
pop
vmwrite
adcb
jmp
test
and
or
repz
fcompl
and
sbb
mov
movhps
jmp
mov
leave
repz
sahf
and
and
repnz
fidivs
jl
fiadds
lahf
push
sub
xchg
ljmp
stos
add
incb
into
mov
jnp
inc
add
sub
out
movsb
sub
ret
das
mov
leave
inc
ret
mov
and
dec
stos
out
daa
xor
mov
cmovle
push
jg
stos
jl
test
push
inc
cmp
repz
setp
push
mov
add
adc
test
jns
jg
push
add
add
stos
stos
outsl
adc
out
outsb
mov
pop
daa
pop
xor
in
sahf
or
out
iret
and
push
jae
jns
movd
incl
stos
mov
iret
inc
sbb
lods
stos
mov
mov
iret
dec
add
lods
ljmp
add
es
cmp
xor
lods
jg
sub
int3
fimuls
dec
lods
out
or
in
jo
xchg
mov
aas
icebp
in
mov
pop
invd
enter
and
aas
fisubrs
xchg
aaa
cmp
lods
or
dec
dec
sahf
xchg
or
and
ss
pop
push
pop
push
fmull
ja
push
sbb
aas
xchg
cmp
repz
sbb
fmulp
cmpsl
mov
and
and
outsb
xchg
sub
aas
in
out
xchg
iret
repz
and
dec
fdivp
mov
sub
sub
xorl
mov
and
out
cwtl
lds
and
xor
lret
test
scas
scas
shufps
enter
pushf
pushf
fsubl
pavgb
lock
psllw
es
push
adc
adc
adc
jns
in
scas
cs
cmp
jbe
pabsd
inc
inc
fwait
cmp
repz
push
psllq
push
and
repnz
and
orb
nop
cwtl
mov
test
sub
cmp
rorb
enter
daa
daa
mov
loopne
sar
insl
pushw
jns
or
fs
loop
mov
ss
stos
or
rclb
and
adc
xor
or
cmp
inc
add
adc
sahf
mov
and
push
inc
push
xchg
ficompl
mov
inc
mov
imul
pusha
cmpsl
mov
aaa
iret
test
add
cmp
pop
xor
xor
sahf
out
sub
sbb
repz
out
cld
enter
iret
repz
fcom
ror
enter
repz
mov
in
sahf
out
movsb
cwtl
nop
mov
repz
addb
jo
pop
push
cmp
repz
inc
cmp
sbb
movsb
loopne
adc
add
add
addr16
enter
fmull
divl
push
push
add
repz
repz
pushf
cmp
pop
or
or
in
sub
or
fwait
mov
push
adc
and
leave
leave
in
xor
addr16
das
push
xorps
cmp
jae
insl
push
and
jb
cs
orl
mov
xchg
sub
in
in
sahf
mov
loope
shll
sbb
or
in
test
and
sbb
std
sub
jne
addb
adc
call
push
add
add
movsb
add
cmpb
cmpsb
fisttps
mov
cld
push
jg
sub
subb
mov
cmp
cld
decl
inc
mov
iret
mov
in
call
cmp
add
mov
repnz
xor
fcomp
loopne
jb
jle
clc
and
inc
and
and
scas
add
pop
add
test
pop
fdivr
inc
and
pop
sub
inc
fmuls
inc
pop
pop
jle
insb
sub
incl
xchg
insb
xor
das
mov
pop
adc
sbb
xlat
fisubs
xor
scas
loopne
mov
or
lods
test
mov
into
out
xchg
pxor
into
push
adc
out
sahf
adc
sbb
int
iret
repz
lods
sbb
cmp
repz
push
sub
fdivrs
outsb
enter
das
lret
mov
push
lcall
jns
imul
push
cld
cmp
ljmp
sbb
mov
sub
sub
popf
add
dec
sarl
aas
add
mulb
imul
dec
aam
fbld
add
cwtl
push
jae
xorb
mov
lock
rcpps
es
inc
jg
inc
movb
aas
pop
mov
xor
pop
xlat
fisttps
inc
pop
and
dec
fsubrs
sbb
add
mov
and
inc
sub
insl
push
roll
add
or
sbb
adc
xor
add
repz
sbb
sbb
clc
loop
lock
and
jp
repz
jns
repnz
sbb
cld
shl
ds
jnp
push
pop
adc
fsubl
das
push
fdivp
cmp
or
or
adc
iret
jnp
push
in
enter
out
sahf
rcrb
push
mov
jns
out
test
movsb
and
and
and
dec
popf
mov
clc
mov
cmp
mov
push
push
mov
adc
xor
aaa
test
xchg
xchg
xorb
fmulp
incl
xorl
jg
cmp
pop
js
jns
out
mov
repz
jns
ds
xor
add
push
pop
loopne
sahf
out
xchg
mov
repnz
out
iret
jae
das
push
dec
insb
push
loopne
sub
inc
pop
jb
pop
enter
inc
pushf
or
pop
repnz
mov
adc
enter
xchg
cwtl
push
and
sbb
push
mov
ret
inc
and
sahf
mov
sub
inc
rcrb
and
decl
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
aad
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
pushl
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
decl
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
loop
decl
pop
cmpsb
lock
mov
popa
sar
mov
lcall
sbb
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
insl
lock
les
add
sti
aas
jno
or
mov
ja
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
sar
decl
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
out
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
jmp
adc
lcall
cmp
push
mov
xchg
aas
ljmp
cmp
popa
mov
popa
push
pop
sarl
jl
mov
das
lea
mov
adc
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
mov
fmull
call
cmp
test
pop
mov
jne
fldt
cmp
jno
call
and
xor
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
ljmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
mov
mov
dec
dec
gs
std
orl
pop
ficomps
frstor
inc
dec
push
pop
inc
push
in
pop
inc
inc
je
inc
inc
push
dec
pop
sub
cmpsl
jnp
cmpsl
add
xor
popa
push
out
mov
les
hlt
push
xor
jmp
xor
fdivrl
jmp
rclb
mov
sub
jmp
xchg
sbb
mov
repnz
repz
test
ficompl
jmp
mov
push
movl
imul
std
in
leave
mov
add
insb
push
arpl
ud0
cli
cmc
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
shrb
or
insb
cwtl
mov
leave
mov
insb
fdivs
jne
filds
fcomip
dec
or
shrl
push
ficoms
push
xlat
enter
mov
jmp
and
mov
cltd
xchg
mov
mov
or
or
and
or
ljmp
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
pushl
mov
push
movsl
in
lahf
xor
mov
js
stc
decl
sbb
push
sub
insb
fs
add
hlt
push
imul
ljmp
popa
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
gs
jmp
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
std
jg
dec
into
pop
cmp
mov
inc
movsl
fisttps
fdivr
mov
sti
hlt
shrl
imul
mov
sarb
add
in
add
pop
dec
or
cmp
add
daa
mov
jg
xchg
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
shlb
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
pushl
je
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
ljmp
test
push
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
incl
push
inc
push
imul
xorb
sbb
push
imul
aam
loopne
rorl
ficoml
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
fcomip
fdivrs
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
lcall
or
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
decl
andl
shrb
rclb
or
add
mov
das
es
mov
or
add
mov
cmpsl
call
ret
shlb
scas
fldcw
ret
es
pushf
mov
insl
add
ljmp
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
lcall
mov
fdivrl
fisttpl
aam
roll
clc
mov
push
jg
dec
push
mov
mul
ja
outsl
ja
mov
out
cli
jo
ud0
cmp
jmp
or
adc
sahf
gs
clc
sar
imul
push
js
or
decl
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
lret
shrl
or
inc
mov
aaa
pusha
mov
fidivrs
mov
jmp
sub
repnz
lret
mov
cmpsb
mov
sarb
xchg
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
icebp
jmp
filds
sub
cmp
inc
add
pop
inc
jne
lahf
add
push
lock
jl
pop
pop
jle
aad
push
xlat
fsub
jns
out
fcmovu
mov
loop
in
out
sahf
out
jmp
out
sahf
in
repz
cmc
div
js
out
clc
stc
cli
sti
cld
add
or
add
jbe
adc
adc
mov
cs
push
mov
in
sbb
jnp
inc
push
pop
adc
jbe
cmp
fadds
xchg
inc
insl
cltd
aam
mov
xchg
push
ss
je
push
cltd
xor
and
inc
dec
mov
inc
jns
xor
pop
inc
cmp
pop
bound
fs
decl
inc
inc
bound
arpl
cmp
arpl
in
mov
sub
xor
xor
xor
scas
cmp
inc
jbe
pop
insb
imul
cmpsb
insb
gs
xor
inc
leave
aam
jae
add
push
inc
lret
nop
push
pop
out
call
or
adc
gs
mov
sbb
je
scas
ss
jbe
sbb
enter
or
inc
aas
icebp
inc
mov
add
or
mov
bound
test
js
arpl
and
aaa
sbb
or
popa
jns
mov
je
pop
dec
insb
dec
popa
sub
adcl
aaa
aas
inc
push
sti
or
push
inc
aas
or
push
adcb
inc
out
adc
xor
sbb
pop
inc
aas
mov
push
pop
inc
outsl
ss
enter
sbb
inc
pop
das
add
je
jo
mov
in
fiadds
add
ds
mov
scas
add
hlt
mov
int
push
dec
sbb
jb
xor
sbbl
jno
ja
outsb
jne
stos
insl
dec
or
lods
lods
jb
jge
insl
mov
fnsave
add
add
or
arpl
mov
push
clc
xchg
jb
mov
into
pop
jo
lea
lods
jge
mov
add
stc
xchg
cmc
sub
xor
inc
add
adcb
subb
lcall
push
mov
fwait
inc
ret
push
in
insl
mov
xlat
insb
inc
xorb
add
pusha
out
jb
adc
adc
addr16
mov
popa
jo
lahf
push
push
dec
inc
lahf
push
outsl
outsl
test
adc
xor
mov
jno
push
sbb
sub
lcall
push
nop
test
lods
cmp
inc
mov
and
sbb
sarl
jo
push
adc
push
outsl
insb
jns
add
inc
das
inc
jb
test
cmpsb
gs
je
insl
out
inc
outsl
arpl
insb
pminub
xlat
inc
push
bound
ja
sub
jbe
xor
rolb
push
pop
daa
inc
xchg
dec
xor
imul
les
das
xor
adc
decl
jp
sub
add
push
outsb
jg
xorb
iret
push
xchg
mov
dec
hlt
call
mov
mov
push
mov
sbb
pop
shrl
push
sbb
cli
adc
pop
bound
outsb
arpl
adc
stos
mov
insb
insl
pop
push
addb
mov
stos
loopne
pop
inc
xchg
mulb
xchg
fisttpl
xlat
push
add
stos
orb
adc
stos
fwait
push
push
add
push
dec
std
fwait
inc
xor
inc
repnz
fdivr
loopne
adc
xor
cmp
sub
fnsetpm(287
add
add
mov
iret
add
or
pop
pop
push
or
or
or
sbb
mov
or
or
adc
adc
push
mov
pushl
or
pop
sbb
adc
adc
adc
add
mov
or
adc
pop
adc
fildll
add
je
add
add
add
jge
pusha
mov
sahf
add
les
add
loopne
jno
mov
xorb
bnd
decl
out
sbb
jge
call
xor
adc
cmp
incl
and
xor
inc
mov
adc
xor
cmpb
js
pop
mov
addb
push
or
and
add
cmpsl
addl
add
or
and
adc
or
add
nop
cmpb
or
and
scas
pushf
cmp
or
into
add
shrl
ja
mov
inc
lods
push
adc
pop
popa
jno
and
adc
xchg
mov
or
xor
adc
loope
icebp
dec
inc
jo
mov
mov
rorl
adc
mov
adc
dec
fiaddl
or
js
call
adc
sub
rcr
push
ret
xchg
and
ljmp
std
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
loopne
mov
fsts
dec
sub
pop
mov
cmp
mov
xor
and
fistpl
jg
inc
cmc
iret
xchg
sbb
call
repnz
dec
or
adc
pop
inc
inc
xchg
add
sub
xchg
or
incl
cld
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
inc
mov
test
pop
lahf
mov
movsl
jecxz
pop
mov
push
cld
jmp
clc
cmpl
jg
or
push
push
addr16
out
or
push
push
xchg
add
repnz
inc
lock
call
xor
fdivrp
cmp
fisubrl
in
mov
orb
int3
lcall
std
aaa
cmp
mov
scas
mov
pop
pop
mov
popl
movb
call
adc
adc
mov
xor
lods
scas
xchg
test
aam
and
ljmp
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
stos
lahf
fdivs
aas
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
jmp
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
mov
jp
push
out
or
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
mov
sub
jp
lcall
jle
mov
jb
mov
mov
mov
sub
pop
add
arpl
dec
jp
push
gs
jg
jg
aas
stos
hlt
push
add
stc
loope
mov
sar
andl
aas
icebp
idivb
aad
or
mov
scas
fadds
jmp
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
ljmp
sbb
jb
adc
push
lock
lods
jp
testb
jmp
sbb
into
fcomps
sbb
sbbl
into
andl
aas
loopne
mov
adc
aaa
xchg
in
add
inc
adc
loope
fnstsw
out
aas
std
cli
push
push
push
idivl
mov
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
ljmp
mov
scas
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
pushl
inc
cmp
sti
punpckhbw
cmpsb
orb
mov
clc
xor
jmp
xchg
pop
clc
outsl
pop
dec
fistl
hlt
sub
movsb
add
lea
pushl
jg
gs
std
xorb
jg
aad
adc
ret
call
loopne
das
pop
pop
pop
shlb
out
sarb
sbbl
jno
or
mov
cmp
pop
les
cli
mov
mov
inc
arpl
stos
mov
lcall
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
jg
call
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
call
ss
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
lock
decl
pop
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
mov
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
lcall
into
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
add
incl
das
adc
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
add
cli
jb
and
jae
shrb
jmp
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
clc
mov
pop
cld
addl
adc
and
int3
mov
push
enter
jecxz
scas
sub
loop
sar
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
pop
jg
add
pop
iret
mov
jg
mov
aad
test
in
pop
mov
lock
mov
iret
push
jbe
lock
std
stos
icebp
pop
incb
jno
adc
push
inc
mov
jecxz
sbb
sarl
adc
loopne
sar
adc
jbe
mov
clc
sti
push
sti
imul
dec
push
in
aas
mov
shlb
loope
fsubrl
lock
and
pop
fadds
clc
xchg
pushf
mov
incl
in
or
and
mov
adc
inc
aas
inc
push
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
sub
pop
pop
nop
mov
inc
pushl
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
mov
decl
dec
xor
fsubr
fistps
lds
fidivrl
jg
jmp
stos
pop
add
dec
mov
sub
jge
xor
push
les
sbb
sbb
cld
addl
mov
jg
sbb
mov
lahf
outsl
int3
push
sbb
jg
xchg
pop
test
bound
pop
outsl
pop
loopne
push
in
jge
popa
push
test
jbe
jg
ljmp
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
or
out
lcall
sub
shl
cld
mov
in
mov
pop
jg
pop
shrb
rcl
jg
adc
xor
pushl
fisttpl
sub
jmp
lea
jp
jnp
jecxz
out
cld
adc
inc
lds
push
pop
adc
imul
or
inc
pop
mov
xor
rorb
and
add
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
lcall
iret
inc
mov
into
test
xchg
movsb
insb
or
and
xchg
fisubrs
lcall
test
aas
cld
out
fcomi
fistps
outsl
lock
in
jmp
stc
out
mov
clc
push
std
mov
jl
icebp
or
out
jne
or
cmc
mov
push
mov
fsubrp
dec
sahf
push
loop
dec
inc
push
pop
fcmovb
inc
adc
inc
loopne
test
out
rolb
pop
add
fisttps
mov
or
dec
ss
mov
leave
inc
lods
movsb
or
repnz
mov
cli
daa
pop
and
imul
cmpsl
lret
pop
in
cmp
cld
outsl
incb
mov
pop
lock
jmp
hlt
dec
mov
in
scas
sbb
xlat
inc
aas
mov
jg
mov
mov
addr16
sbb
cld
daa
jp
std
adc
cld
jbe
inc
cltd
or
mov
ret
nop
cmp
das
incb
add
pop
pop
div
cld
idivl
fcomi
add
stc
lahf
loope
jae
jmp
shrl
je
jge
std
scas
bound
jg
stc
add
out
leave
xchg
inc
icebp
mov
loope
mov
cmpsl
popf
sti
sub
mov
ja
push
outsl
das
jge
fwait
dec
das
add
cmpsb
cmp
call
std
add
decb
adc
mov
and
jo
adc
call
jo
testb
iret
or
add
cmp
int
add
push
enter
pop
aaa
std
fisttps
testb
cld
jg
xchg
fimull
cmp
aas
icebp
ret
ror
sbb
aaa
pushf
jecxz
and
adc
mov
mov
cld
push
sub
mov
pop
clc
loope
loope
mov
lahf
inc
push
dec
add
xlat
jmp
in
cwtl
pop
fbstp
xchg
fldenv
iret
movsb
or
xchg
lcall
decb
mov
loop
dec
and
out
jg
jno
ret
xchg
xor
jno
cmp
mov
sbb
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jmp
clc
pop
lds
jmp
std
mov
daa
jmp
faddl
or
inc
push
jae
mov
add
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
add
xchg
decl
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
sar
ljmp
pop
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
or
add
push
sti
pop
inc
dec
stos
fs
push
mov
push
cmp
mov
push
popf
int3
pop
iret
and
add
dec
aas
jecxz
dec
in
lods
rcr
and
aad
int3
nop
jnp
mov
pop
mov
repnz
ljmp
pop
inc
fdivrl
aas
mov
mov
imul
movsb
inc
cmpsl
sbb
xor
in
ljmp
lret
cmp
cli
pusha
shrl
add
sub
adc
sub
mov
pushl
push
nop
std
nop
scas
scas
data16
scas
int
mov
adc
rorl
nop
rclb
in
pop
mov
and
add
pop
mov
jnp
pop
adc
movsb
gs
or
pop
cmpl
je
and
test
incl
insb
xchg
push
and
data16
push
xlat
rcll
test
pop
mov
incl
sbb
bound
jp
push
rorb
jo
lahf
cld
jnp
mov
cmc
cs
cltd
das
inc
push
popf
mov
or
ljmp
nop
out
xor
cmp
js
std
cmp
jmp
dec
sub
mov
sbb
mov
jmp
imul
pop
mov
in
jbe
stos
push
add
lret
mov
adc
jg
aas
arpl
dec
into
dec
ret
repz
je
and
mov
push
jae
mov
cmp
or
pusha
adc
and
adc
scas
and
add
mov
fwait
cmc
insb
mov
addr16
add
or
subb
cwtl
incl
roll
sub
and
and
jp
or
call
or
repz
pop
test
out
ret
addr16
push
lods
ss
hlt
fnstcw
nop
mov
out
lcall
and
mov
out
bound
dec
push
cmp
ds
inc
fisubrl
incl
popa
repz
es
int
sub
push
aad
lods
pusha
stc
or
mov
xchg
mov
mov
sti
aam
insl
jb
mov
jle
dec
push
inc
xchg
dec
nop
imul
call
pop
mov
cmc
mov
mov
push
stos
andl
cmp
in
pop
add
or
add
adc
test
pop
cmpsb
pop
hlt
jl
push
repz
incl
loope
outsl
xor
mulb
cmp
xchg
mov
pop
imul
jmp
pop
pushf
mov
jb
xorl
sti
or
loop
add
lcall
inc
cmp
mov
jge
inc
push
into
popf
push
jno
jle
test
mov
ljmp
xor
mov
stos
sbb
pop
and
mov
push
mov
or
xor
cmp
or
fcmovnbe
lcall
mov
dec
fstpt
hlt
insl
cmp
xor
or
xor
mov
icebp
into
xchg
push
fldl
sbb
roll
mov
pop
in
cs
out
scas
idivl
sbb
and
and
add
sti
pop
or
scas
arpl
inc
out
sbb
dec
mov
pop
idiv
call
fldl
sub
dec
loop
adc
mov
scas
movsl
sbb
pop
xchg
bound
mov
dec
pop
add
adc
mov
out
and
fwait
inc
xchg
out
or
je
or
pushl
xchg
mov
and
xor
sub
jge
xor
icebp
je
das
or
pop
lock
jmp
insb
and
add
jmp
sarl
sbb
push
inc
sbb
leave
mov
push
push
je
mov
jg
decl
cmpsb
cmp
mov
mov
dec
fsubs
sub
inc
xchg
mov
and
sub
incl
out
pop
leave
fcmove
pop
insb
xlat
ficoml
nop
not
dec
mov
sbb
push
inc
sbb
jno
pop
sbb
aad
xchg
lahf
inc
leave
adc
pusha
out
xchg
cmp
insl
xchg
out
jp
dec
data16
inc
pop
sub
or
inc
loope
sti
sub
in
jo
loop
icebp
and
dec
in
test
icebp
xor
hlt
in
ljmp
rorb
divb
lahf
xor
push
jns
imul
es
xor
scas
cmp
leave
mov
test
xabort
jg
cmc
mov
hlt
es
pop
jle
push
jl
arpl
stos
lcall
in
ret
inc
jo
sub
cmp
push
push
push
cmpsb
add
stc
incl
pop
push
nop
out
cmp
rclb
dec
jae
lods
stos
inc
adc
mov
fimull
sbb
outsb
jo
pushf
daa
sub
xchg
nop
sbb
mov
enter
cs
mov
mov
pop
cwtl
add
pop
sub
pop
movsb
or
rol
ss
jg
stos
cmp
lcall
mov
sahf
mov
pusha
sub
fmul
inc
or
xor
jmp
mov
sti
cmpsb
es
mov
movsb
scas
sbb
mov
add
js
cmp
repnz
cmp
sub
pop
leave
mov
push
jecxz
ret
stos
add
inc
pop
xchg
or
lcall
lods
ret
nop
xchg
loopne
js
push
jle
data16
stos
std
outsb
mov
testl
lea
sbb
sbb
push
pop
lahf
mov
test
mov
cmc
scas
xchg
jle
out
cmpsl
xor
add
jmp
fcomi
jno
or
inc
dec
xlat
fwait
test
cwtl
jl
sub
call
cmp
xor
stc
sbb
es
cmpsb
popf
das
inc
call
call
lods
test
adc
inc
sbb
sbb
mov
iret
cmp
mov
movsl
sub
cs
incl
xchg
xchg
push
lods
and
cmp
mov
bound
movsb
popf
leave
cmp
incl
js
jnp
push
movsl
das
cwtl
or
lock
pop
mov
test
pmaxsw
aas
add
adc
push
notb
sub
and
and
stos
pop
cmp
xchg
out
sar
ljmp
pop
je
cli
sbb
mov
ja
jne
sbb
iret
and
int3
test
insb
ja
ljmp
jmp
out
insl
clc
mov
push
shl
sub
xor
xor
decl
subb
lock
cli
les
lahf
stc
or
xchg
cwtl
lcall
negl
dec
mov
pop
fildll
or
inc
add
push
loopne
or
mov
leave
jp
xor
fcomp
push
les
mov
pushl
mov
or
in
push
cltd
mov
mov
xchg
cmp
ficoml
lcall
and
das
xlat
mov
add
pop
pop
hlt
xchg
push
mov
nop
dec
jno
push
push
inc
pushl
sbb
or
fs
imull
dec
push
les
fdiv
or
pusha
fdivl
adc
call
lock
mov
in
dec
daa
sub
add
mov
inc
hlt
pop
dec
add
lock
mov
sub
pop
jb
daa
pop
mov
loopew
lcall
pop
aam
outsl
mov
scas
notl
ja
bound
ret
ljmp
data16
inc
pop
nop
pop
sbb
scas
and
pushl
loopne
addr16
mov
xchg
pop
movsb
data16
pop
mov
mov
push
into
dec
lret
lcall
and
stos
xor
cmp
cld
cmp
and
incl
push
jp
inc
push
jle
adc
xchg
mov
outsb
sub
sub
std
daa
cltd
push
int
jno
jg
or
mov
rclb
out
add
sbb
cmp
mov
rorb
push
push
mov
cwtl
pop
loop
dec
mov
and
jmp
xchg
xchg
leave
dec
inc
sbb
lods
cmp
pop
mov
repz
lock
and
and
ja
or
popa
sbb
cmp
push
ret
mov
lods
aam
out
jge
call
test
sub
decl
testb
in
div
idivb
sbb
xchg
push
mov
mov
cmc
aad
decl
adc
mov
ljmp
push
shld
cmp
out
call
jmp
sub
xor
pop
mov
syscall
jbe
fnstsw
jnp
addr16
popa
mov
or
fidivrl
enter
and
or
cmpl
jmp
stos
mov
sbb
jmp
add
fsubl
int
lock
sar
pusha
cmp
mov
in
sbb
mov
mov
sbb
shrb
push
or
add
mov
pushl
mov
out
arpl
or
fs
data16
fs
cwtl
jmp
xor
bound
jecxz
js
pop
and
mov
into
daa
ljmp
mov
popa
clc
cmp
jg
sub
hlt
lahf
and
aad
stos
scas
insl
mov
jne
pop
ljmp
xor
jnp
jg
fldenv
mov
gs
mov
mov
imul
mov
mov
fcomip
fistps
jne
dec
adc
pop
xchg
xchg
repnz
mulb
faddp
clc
xchg
lret
call
loopne
jl
cld
sub
jp
test
mov
es
insb
dec
mov
es
inc
push
xchg
xchg
les
test
decl
mov
push
xchg
in
pusha
push
test
popf
out
inc
imul
cli
add
cmp
decb
add
mov
cwtl
mov
notb
lcall
fnstsw
mov
insb
decb
cmp
inc
test
rcll
incl
movsb
add
es
movsl
ret
out
ret
xor
push
clc
adc
mov
xchg
rorb
ficomps
fcomps
mov
lds
sahf
dec
mov
or
fstpt
mov
mov
decl
imul
push
in
ljmp
xchg
inc
clc
out
pop
fdiv
icebp
sub
mov
mov
fldl2e
mov
mov
sub
jg
scas
pop
sbb
add
sbb
mov
cwtl
aad
lcall
lea
stc
dec
mov
push
cmpsb
mov
pop
fwait
cltd
movsl
and
mov
rolb
inc
rclb
mov
ds
mov
stos
cwtl
shl
mov
inc
sub
fadd
mov
pop
test
orb
insl
pop
aas
subl
ficomps
inc
mov
cmp
lcall
fincstp
clc
outsb
add
sti
push
stos
xchg
xchg
and
out
xor
adc
sbb
popf
shl
jg
xor
push
test
outsb
and
pop
cmpsl
ja
inc
sahf
jo
ljmp
inc
xchg
xor
pop
mov
pop
xchg
sub
mov
leave
rcr
lcall
call
jecxz
das
dec
arpl
add
push
xor
addr16
xlat
or
jae
sbbb
push
push
inc
dec
push
repnz
jmp
and
push
incl
xchg
out
div
mov
mov
pop
sbb
lods
jne
cmpsb
dec
and
stc
mov
fwait
push
shr
call
in
call
call
pop
dec
xlat
aad
cmpsl
pop
les
in
cmpb
cli
xor
sub
inc
or
in
pushl
jno
mov
xchg
sub
mov
cmc
test
fbstp
mov
popf
mov
incl
jmp
add
jae
xchg
aas
in
push
pop
shl
rcll
stos
sub
pushl
push
xchg
es
clc
cmp
pusha
inc
pusha
test
rep
lock
lea
out
add
jo
adc
and
dec
sub
push
cmp
xor
sbb
push
mov
push
mov
call
fsts
out
sub
mov
pop
rolb
or
mov
add
xor
lcall
sub
or
or
inc
jg
sbb
pop
sti
xor
or
push
dec
int3
push
dec
push
sub
xchg
pop
aas
jbe
adc
sub
ja
mov
push
ljmp
mov
mov
stc
add
xchg
out
or
lods
je
ljmp
adc
and
std
fcomi
and
lret
add
ds
sti
xor
dec
insb
xchg
cmp
jmp
xchg
gs
setp
pushl
scas
out
and
xchg
into
sar
cli
adc
aas
mov
dec
mov
xchg
ret
pop
sbb
movsb
repz
lods
dec
scas
mov
sub
std
dec
out
loop
out
and
dec
test
decl
xorl
mov
into
push
xorb
lret
ds
lcall
push
mov
addr16
scas
inc
mov
mov
ret
and
push
cli
incl
into
in
arpl
jne
push
cwtl
divl
mov
test
inc
cmp
pop
jle
push
pop
test
int
push
fisubs
mov
pusha
xchg
pushl
cld
orl
sub
mov
sar
inc
rcl
inc
dec
loop
mov
hlt
imul
mov
shlb
pop
aam
push
or
shlb
mov
cmp
cmp
mov
mov
imul
js
les
cld
decl
add
divb
jmp
mov
pop
sub
pushl
mov
fdivrl
add
out
add
inc
loopne
popf
and
lods
mov
or
mov
mov
hlt
sub
test
arpl
mov
addl
cmpsb
push
out
clc
decl
cmp
enter
xor
mov
xorl
jbe
sahf
inc
cmpsl
subl
xor
je
mov
sarb
sub
psubd
lahf
mov
pop
cmp
mov
inc
movsb
loope,pt
stc
decl
xor
pop
out
pop
sahf
fidivs
sti
pop
cmp
mov
cli
jmp
out
stos
dec
sub
mov
pop
jne
sbb
bound
push
push
ljmp
out
enter
adc
sbb
loope
cmp
pop
arpl
call
pop
add
lret
fistpl
ds
xchg
push
sbb
jge
in
ljmp
sbb
inc
cld
mov
cli
pop
bound
gs
jp
push
outsb
push
xor
je
fcoml
mov
call
add
push
insl
xchg
pop
jo
icebp
mov
sub
mov
push
push
xchg
out
push
mov
les
decl
cmpsb
enter
mov
lret
fdivrl
push
adc
pop
cmp
mov
push
arpl
in
dec
outsl
xchg
pushf
dec
stos
cmp
outsb
pop
mov
inc
or
adc
fidivl
dec
pcmpeqb
jmp
andb
idiv
push
loope
jno
movsl
xor
bound
cltd
test
out
pushf
xchg
bound
fdivs
cmpb
les
push
pop
int3
call
sbb
push
jbe
pop
xchg
or
mov
mov
insb
pop
stos
mov
push
pusha
repz
out
pop
jmp
scas
adc
cwtl
in
icebp
test
and
in
jp
mov
jl
sbb
cmpsb
ljmp
in
fwait
xchg
rcll
cmp
mov
insl
mov
outsl
cmp
and
mov
push
pop
fstp
call
es
loop
mov
adc
out
mov
or
mov
mov
pop
mov
cmpsl
sbb
sub
jp
cmp
jmp
ljmp
jno
arpl
mov
xchg
mov
dec
push
movsl
ja
popa
mov
push
push
mov
repz
jns
jnp
xchg
push
mov
pop
decb
sbb
push
data16
add
mov
sub
test
sbb
jnp
sub
push
cmp
cmp
hlt
lock
testl
test
sbb
jge
adc
daa
out
mov
add
ljmp
enter
or
mov
fisubl
in
xchg
jnp
mov
or
lock
incl
sti
fdiv
pop
jo
out
decb
aas
fwait
xorl
xchg
arpl
ljmp
lods
rolb
out
fwait
in
jbe
push
xor
cmp
jle
mov
mov
mov
pop
pushl
lcall
push
mov
add
ljmp
xorb
push
ja
mov
fsubrl
imul
stc
sbb
popa
pop
jno
jo
orb
lcall
mov
movsl
rsqrtps
push
add
mov
pop
movsl
ret
inc
mov
sbb
in
testb
sbb
ret
shlb
fldenv
js
mov
incl
lret
adc
xchg
mov
jg
fdivrs
decl
cli
push
pop
js
lcall
and
outsb
mov
pop
jle
mov
ds
incl
outsb
jmp
mov
in
leave
sbb
add
mov
mov
mov
jmp
nop
mov
fstpl
fmul
push
divl
aas
pop
cltd
fidivs
and
out
data16
inc
xor
push
jp
xchg
shll
mov
in
cmp
jae,pt
xor
inc
hlt
sub
xchg
cwtl
test
or
aas
test
mov
push
leave
mov
pushf
cmp
jae
cmp
add
and
xor
xorl
xchg
xchg
fdivrp
dec
adc
insl
shl
push
push
ret
aaa
enter
data16
cli
push
aam
jl
jns
movsl
repnz
cwtl
pop
into
stos
or
jns
or
dec
icebp
xchg
movsb
loope
fcomip
pushl
jnp
mov
or
out
jle
mov
leave
iret
test
fdiv
pop
in
jle
cli
enter
scas
sbb
pushl
jnp
fistpl
mov
scas
mov
sbb
xchg
mov
xchg
pop
jp
inc
dec
push
xrelease
lods
sub
cld
push
int3
push
push
jmp
sbb
clc
ljmp
int3
adc
xor
lcall
and
sahf
shlb
xor
pop
std
or
xchg
mov
aad
mov
adc
pushl
std
jmp
xorb
cltd
loopne
jle
leave
aas
cmpb
inc
dec
mull
cmp
jmp
in
setg
hlt
jns
repz
xor
dec
xor
inc
shrb
mov
call
movntq
dec
jns
cmc
sub
stos
xchg
insb
jo
adc
mov
lock
ljmp
mov
cmp
test
ljmp
mov
mov
pop
lret
out
mov
mov
push
test
test
stc
decl
jo
xor
shlb
and
dec
cmp
lahf
repnz
std
ljmp
sub
mov
in
or
aaa
loop
sub
or
lcall
pop
mov
jne
add
pushf
cmp
xchg
out
leave
testb
enter
ljmp
fidivrs
add
adcl
adc
push
mov
xlat
rorl
outsb
pop
lods
add
incl
or
xchg
and
pop
pop
push
jmp
movsb
push
inc
ja
jo
xor
or
dec
inc
mull
jg
lcall
or
nop
sbb
xchg
sub
insl
pop
inc
pop
adcb
sbb
push
xor
push
cli
filds
push
jecxz
add
xchg
enter
push
incl
mov
fistpl
icebp
lea
pusha
mov
stc
mov
sub
ljmp
sahf
push
mov
lcall
loop
in
nop
add
in
int3
in
adc
jg
xor
cmc
jmp
xor
mov
cmc
sbb
or
pop
movsl
loope
and
jle
add
repz
fistps
repz
jp
outsb
lds
inc
mov
fstl
xor
call
ljmp
sarb
icebp
pop
mov
inc
inc
xchg
push
jnp
mov
sti
out
andb
pop
pusha
es
inc
aaa
cmpsl
cmp
loopne
xor
test
lret
lcall
lret
sbb
mov
mov
imull
adc
fstl
xor
push
jb
testl
std
mov
mov
addb
cld
add
lcall
or
mov
and
push
daa
pushf
push
leave
mov
cmp
iret
xchg
int3
cld
cmp
mov
inc
negl
or
lahf
lret
cmp
icebp
cmp
jg
insl
je
xchg
les
cmc
adc
dec
arpl
inc
pusha
out
dec
pcmpeqw
sbb
lret
xchg
xor
ljmp
dec
mov
insl
sti
into
leave
dec
sahf
pop
and
arpl
mov
or
cmpsl
out
adc
push
push
das
sbb
add
outsl
lcall
jns
sub
bound
pop
mov
mov
imul
fbstp
ljmp
or
mov
add
lods
fidivrl
aaa
scas
lcall
cmp
incl
xor
test
push
xorl
sbb
push
ficomps
popa
jno
or
decl
icebp
fisttps
int3
add
outsb
loope
pop
fdivl
mov
int3
shlb
push
stc
nop
fildl
xchg
mov
and
pusha
decl
lret
rol
test
test
outsb
fsubl
and
les
in
incl
iret
in
aaa
mov
inc
testb
xchg
in
mov
push
leave
or
adc
je
add
lcall
inc
or
mov
mov
daa
xor
mov
inc
mov
xchg
es
incl
cld
mov
fs
mov
test
add
lcall
cli
push
mov
addl
push
sub
scas
clc
stos
and
subb
push
jae
lods
pusha
rcr
test
jg
or
shl
fldcw
pop
inc
cmpsl
and
sarl
decl
inc
arpl
aam
pop
xchg
dec
or
mov
out
test
push
dec
or
inc
test
popf
movsb
mov
out
and
sub
call
sbb
jb
adc
lret
jle
outsl
xor
sub
in
xchg
add
dec
jnp
decl
aad
adc
fmul
sub
pusha
mov
dec
testl
xor
mov
adcl
and
daa
cmpsb
pop
daa
fisubl
hlt
decl
out
adc
sti
jmp
addr16
movsb
repnz
fwait
clc
ljmp
or
cmpsb
push
mov
testb
adc
fbld
xor
mov
stos
loope
pop
mov
stos
scas
repnz
jg
sub
loopne
lea
rcr
scas
testl
mov
or
stos
mov
jg
addr16
jl
add
jnp
sbb
jecxz
or
stos
dec
add
pusha
ds
push
mov
popf
adc
push
jg
xor
outsl
adcb
pop
call
in
xor
and
mov
out
xchg
sub
jnp
sbb
imul
popf
cld
push
aas
add
jmp
dec
outsl
addr16
jmp
sbb
add
out
xchg
outsl
rolb
incl
dec
das
das
mov
mov
mov
lahf
mov
les
pushl
or
mov
or
push
mov
push
cmp
xchg
cmp
bnd
xchg
lahf
push
cs
call
outsb
repnz
lahf
fldt
mov
pop
jle
push
scas
ds
or
adc
loop
ljmp
int
jae
push
lods
mov
pop
push
jl
inc
ret
imul
inc
inc
sbb
push
pop
dec
lret
push
aas
es
das
or
mov
leave
jmp
jge
mov
rcrl
push
xor
cmpsb
push
aam
mov
adcl
scas
fcos
incl
cmp
testl
movsl
jmp
loopne
or
dec
dec
mov
cmpsl
nop
add
jb
sub
rorb
out
inc
mov
outsl
cli
incl
and
inc
imul
cmc
jnp
and
sub
jmp
incl
lcall
sbb
jge
push
jno
push
push
xor
or
arpl
push
ret
repz
lcall
les
xchg
pop
cwtl
sbb
sub
xchg
fstps
xchg
or
aaa
push
daa
mov
mov
sbb
sti
and
pushf
in
mov
dec
inc
enter
decl
mov
lret
insb
sbb
add
or
incl
stos
call
subb
out
mov
inc
inc
insl
adc
jae
incl
cmpsl
sub
andl
stos
gs
lret
jmp
sub
mov
cmp
jbe
imul
aad
int3
fchs
or
pushl
add
fcmove
ljmp
sub
imulb
dec
xchg
cmp
loop
xor
and
pushl
mov
int
aas
cmpl
ds
fstl
pop
aaa
jb
cmp
and
pushl
push
cmp
cmc
add
imul
mov
rclb
xchg
mov
jb
pop
in
call
cmp
hlt
out
xchg
mov
dec
fsubrs
mov
mov
sbb
jg
mov
jp
insl
adc
and
imul
dec
mov
sub
jmp
jge
mov
push
or
pop
cmp
mov
pop
int
sbb
pop
pop
scas
ljmp
cli
addb
ret
xchg
pop
adc
lcall
and
mov
adc
pushw
test
or
lods
pop
not
push
fcomip
pushl
lret
rcll
mov
mov
int3
pop
repnz
pop
push
imul
dec
pop
cmp
xor
repz
jl
sub
insb
aas
lods
loope
xchg
into
sbb
or
jo
jg
pop
dec
lcall
cmc
cmp
loopne
dec
cmpsb
mov
inc
clc
dec
pop
loopne
jle
movsl
jg
stos
les
filds
fildl
jmp
cmp
add
lcall
adc
mov
or
pop
js
aad
cmc
sub
push
pop
xor
pop
xchg
push
leave
mov
out
mov
fidivl
ljmp
sbb
hlt
data16
les
push
lret
scas
loope
or
outsl
mov
mov
incl
bound
int
jmp
xchg
fnsave
pop
shr
lds
sbb
jmp
add
xor
mov
xorl
and
sbb
mov
xchg
decl
int
push
or
and
dec
push
lcall
mov
fisttps
shrl
jmp
xor
cmp
rcrl
sub
imul
stos
fs
jnp
shrl
pop
pop
push
js
pop
xchg
out
incl
js
in
pop
fidivrl
pop
insb
andl
and
sbb
lock
incl
es
mov
mov
aas
xchg
nop
div
mov
jp
andl
clc
pop
cltd
jmp
and
push
aad
pop
subb
and
mov
mov
ficoms
out
clc
jmp
jle
mov
pusha
inc
in
jle
or
movsb
xchg
fcoms
int
icebp
add
shlb
lcall
push
icebp
lret
inc
xchg
sub
fdivs
add
lcall
hlt
pop
adc
xor
or
sar
and
das
sti
or
pop
fdivrp
call
push
pusha
xor
std
or
mov
pop
lods
xchg
inc
jle
lcall
std
incl
je
movsb
test
dec
dec
out
aam
sti
popf
and
ja
scas
call
into
mov
repnz
xor
shll
xor
add
add
cmp
call
data16
mov
test
jne
push
ss
dec
dec
mov
add
loopne
call
aam
and
cmp
dec
mov
jnp
mov
daa
and
mov
jns
icebp
out
xor
jbe
push
icebp
adc
and
inc
mov
inc
pminub
add
jmp
mov
shl
loope
push
outsb
push
lea
repnz
insl
mov
mov
insb
mov
sub
int3
fimull
shl
mov
call
fimuls
sbb
jge
cmp
mov
out
inc
add
into
mov
dec
jnp
dec
or
xchg
lods
int3
stc
add
xor
add
flds
adc
jo
outsb
xchg
jge
adc
cmp
lcall
adc
mov
cld
hlt
xchg
pop
fxch
pop
inc
cmc
pop
scas
sub
jl
fnsave
fwait
hlt
stc
mov
ljmp
lock
jp
sub
int3
add
shrl
std
mov
stos
in
test
fcmovnu
dec
test
ja
pusha
daa
arpl
sub
push
icebp
test
mov
inc
jge
orl
mov
mov
pop
xor
mov
sub
ret
scas
inc
subb
stos
inc
mov
pop
mov
mov
xor
mov
jno
mov
daa
decb
cvttps2pi
lock
mov
and
mov
shll
push
mov
pop
mov
lcall
into
gs
xchg
movsl
or
outsb
jl
into
cmp
lcall
cld
repz
jns
and
cld
in
inc
mov
push
jo
xchg
aas
incl
cmp
push
inc
in
dec
adc
and
mov
out
es
cwtl
add
pop
add
lcall
pop
adc
sub
fisttps
das
call
andl
ja
dec
xchg
dec
jmp
loop,pn
xchg
lcall
sub
nop
mov
xbegin
cwtl
or
lcall
inc
sbb
push
imul
rclb
adc
pop
pushl
and
repz
jne
mov
and
push
sub
orb
push
mov
add
mov
cmp
jmp
iret
int
mov
sbb
xlat
push
stos
dec
ss
mov
lcall
mov
inc
imul
bound
cmp
push
sbb
push
inc
ret
ljmp
mov
stos
ret
xor
mov
in
inc
aas
dec
lcall
lcall
nop
in
loope
jb
sub
mov
clc
dec
icebp
mulb
testl
inc
add
dec
inc
mov
jp
test
das
sbb
xchg
adc
sbb
clc
mov
fstpt
fimull
out
fwait
xor
adc
incl
sbb
fcomps
in
test
and
mov
js
notl
mov
incl
or
data16
les
call
outsb
lret
add
clc
adc
pop
cmpsb
and
test
xchg
jb
out
clc
add
lcall
mov
aas
jo
repnz
mov
and
jmp
div
in
das
sbb
ds
jns
push
out
jge
test
icebp
sbbb
scas
out
stos
in
idivl
je
xchg
arpl
call
inc
xor
out
fwait
es
fwait
ljmp
inc
lods
cli
ffreep
out
inc
popa
inc
stos
fsubrs
pop
xor
fcomi
lcall
adc
lea
inc
clc
mov
jae
dec
idiv
mov
jae
mov
loopne
mov
arpl
jns
movsl
jbe
dec
incl
scas
jmp
notb
and
cmp
test
xchg
push
fstpt
jmp
fimuls
push
out
inc
sahf
xchg
cwtl
cmc
xor
push
lcall
jl
cmpl
mov
std
and
add
push
je
dec
dec
push
dec
pop
push
adc
push
push
hlt
imul
pusha
idiv
mov
shlb
push
cmpl
mov
addl
outsl
call
js
dec
mov
adc
jne
test
mov
imul
dec
sub
roll
pop
test
dec
inc
pop
mov
adc
test
inc
into
mov
ja
xchg
xchg
es
jg
in
bound
mov
test
mov
jmp
jmp
das
sub
int
push
cmpsb
push
iret
xor
out
push
int
adc
pop
jg
sbb
ss
call
cmc
and
cli
fcoml
sbb
lock
out
clc
call
stc
sub
and
xlat
lahf
xorb
jnp
lods
pop
dec
addr16
dec
jmp
jo
mov
xchg
push
mov
lret
push
jnp
xor
cmp
adc
dec
loopne
xor
xchg
ljmp
fcmovbe
mov
mov
jnp
mov
dec
invd
mov
in
adc
add
mov
pop
push
xchg
push
dec
cmp
adc
repnz
or
das
jl
loopne
mulb
dec
pop
mov
xchg
loop
adc
clc
jne
push
xchg
or
dec
out
fimuls
pop
sub
mov
push
jmp
aaa
loopne
int
lods
pop
test
iret
adc
arpl
in
cmp
imul
push
test
stos
repnz
rcr
or
in
push
jae
cmp
cmp
dec
in
arpl
decl
mov
xchg
arpl
xchg
pop
pop
xlat
pushf
mov
mov
pusha
dec
daa
cmp
faddl
jmp
push
sub
mov
pop
add
add
cmp
cmp
fdivr
mov
jmp
push
mov
lret
pop
inc
xchg
mov
adc
cltd
sub
test
aas
xor
das
clc
mov
pusha
lock
jle
mov
or
and
scas
xor
scas
jmp
shrb
cmp
out
cmpsb
loope
ja
xor
out
inc
test
or
pop
test
in
lea
cmc
jg
cmp
loop
pushf
push
out
sub
in
xchg
testl
push
stc
mov
shl
dec
push
mov
lahf
jmp
mov
fsts
and
xchg
push
xor
and
insl
inc
cli
jl
jae
inc
or
les
in
inc
testb
pop
cltd
inc
xor
mov
sub
lcall
sub
mov
sbb
iret
cmp
fiadds
sbb
jmp
xlat
sarl
lcall
cmp
dec
enter
xor
shll
int3
rcrl
nop
cmpsb
lea
mov
mov
jg
cld
bnd
out
je,pt
lahf
adc
and
mov
jnp
adc
pushl
mov
jg
andb
xor
jp
loopne
icebp
or
sarl
jl
or
mov
sub
jmp
sub
out
es
out
fwait
out
popf
out
push
add
das
cli
dec
cld
fidivrs
push
test
push
push
enter
ljmp
or
jl
inc
inc
movsl
js
mov
push
in
lret
pop
dec
fistl
cmp
mov
lcall
lods
pop
jns
jne
push
out
repz
adcb
aam
mov
imul
ja
mov
push
xchg
mov
leave
arpl
test
mov
cmp
jns
push
pop
lret
xchg
mov
adc
xchg
rclb
cmp
fbld
mov
and
inc
jno
mov
call
cmp
xor
bound
faddl
mov
xchg
dec
aad
xchg
sarb
mov
mov
loope
jl
scas
xlat
lods
popa
popf
mov
std
jo
inc
mov
and
mov
pop
lods
clc
scas
ljmp
push
call
mov
cs
dec
hlt
add
mov
jbe
or
clc
jmp
cmp
mov
mov
test
push
fcoml
lret
cs
mov
push
fidivl
push
iret
sbb
adc
pop
sahf
call
jne
push
push
xchg
into
mov
sahf
sbb
xchg
inc
lds
andb
movsl
sub
jmp
cmp
or
inc
js
fsubs
std
jae
dec
sbb
jg
xor
cld
rcll
mov
sahf
inc
push
xchg
xlat
lret
sub
aad
ljmp
rcl
lcall
jmp
mov
dec
lock
sub
inc
push
add
faddl
ficompl
mov
ret
aaa
xchg
mov
sub
aas
lods
rol
ljmp
ret
jl
icebp
jg
fisubs
and
int
xor
sbb
pop
ljmp
push
sub
test
fildll
bound
add
cld
cmpsb
fwait
pop
pushl
in
cmpsl
cmp
cmc
mov
xlat
ficompl
repz
fidivs
out
aam
xor
incl
scas
cwtl
loope
pop
call
lret
fwait
sub
mov
pushl
cmp
std
out
imull
cmp
mov
aad
mov
mov
pop
adc
pop
in
iret
xlat
cmp
lahf
xchg
ret
xchg
jae
push
lods
clc
mov
or
dec
aas
mov
ret
sub
jno
fldl
push
scas
lds
movsb
dec
stos
sub
xchg
mov
cli
push
dec
das
lret
cmp
enter
jmp
hlt
jns
nop
inc
jecxz
out
lret
ljmp
xchg
jp
adc
inc
imul
or
cs
ljmp
dec
xor
push
movb
lcall
cwtl
std
sbb
frstor
xchg
inc
test
jge
fadds
mov
insb
sar
das
sarb
jne
lods
scas
mov
lahf
popa
pop
xchg
pop
repnz
jg
cli
lds
push
sti
leave
dec
cmp
add
icebp
mov
pop
sbb
xchg
jns
pop
ss
jecxz
mov
je
movsl
xor
cld
imul
popf
in
mov
dec
fucomi
add
mov
sahf
ret
insb
sub
inc
insl
mov
xor
shrb
cmc
jmp
es
fidivs
iret
pushl
shlb
xchg
shl
dec
sbb
shlb
dec
jmp
incl
or
or
les
sbb
adc
pop
jae
imul
ljmp
inc
sbbl
pop
data16
xchg
int3
sbb
add
leave
mov
adc
sbb
adc
incb
pushl
dec
int
scas
xor
arpl
add
mov
enter
jecxz
sahf
push
dec
cmpsl
call
mov
xor
dec
mov
mov
jle
mov
cmp
mov
inc
jl
sbb
inc
movsb
jo
ljmp
pop
out
cld
inc
xor
jmp
xchg
scas
jno
inc
xchg
fstpl
cs
movsl
int
sbb
sti
test
jp,pn
push
lcall
jmp
daa
popa
sub
add
adc
in
fsubrs
iret
testl
lret
ljmp
jae
xchg
and
fcoms
in
aaa
je
mov
push
jle
push
ljmp
or
mov
int3
cli
jae
cmp
jo
jg
mov
aaa
lods
inc
jge
mov
call
adc
cs
pop
or
push
pop
test
pop
stc
xlat
je
push
push
dec
and
std
clc
xor
fcomp
and
sub
ja
xor
dec
xor
clc
xchg
sbb
xchg
mov
sbb
pusha
fdivrp
dec
test
sbb
fstpt
and
xor
push
mov
push
notb
shlb
pop
sti
sarb
add
xchg
cli
fstps
test
xor
es
out
fiaddl
mov
jns
add
incl
sbb
xorl
in
fcoml
cmpsb
hlt
jmp
test
sarl
pop
xchg
leave
sbb
in
adcb
inc
mov
loop
mov
incl
bound
jae
mov
daa
mov
jno
scas
dec
mov
adc
cmp
ja
dec
outsb
enter
pop
arpl
out
jnp
ljmp
add
lcall
incl
popf
bsf
pop
xchg
sarb
stos
lret
les
std
jmp
or
xor
pop
lods
cld
mov
movsl
filds
dec
fists
pop
xchg
hlt
in
repnz
mov
mov
xchg
push
xchg
fs
mov
cltd
mov
gs
pop
je
sub
out
insb
sub
in
test
and
dec
dec
xchg
imul
and
pop
mov
push
lret
cmp
mov
xchg
xor
stos
cmp
jmp
mov
dec
add
stc
and
call
mov
adc
shlb
loope
xchg
aam
cmc
roll
andb
mov
incl
push
pop
inc
xchg
ja
xor
fstpl
int
adc
cwtl
ds
cmpps
jmp
push
adc
outsb
stos
dec
cmp
inc
repnz
xlat
sub
or
xchg
dec
sti
incl
xchg
adc
jge
push
scas
jno
ss
cmp
cwtl
jnp
and
cmp
jg
sub
sub
adc
cmp
rorb
sbb
mov
cld
pushf
outsb
inc
mov
sub
inc
leave
inc
int3
data16
dec
jge
call
or
jno
lret
dec
repz
cmp
sti
adc
mov
pop
nop
or
pushf
shll
dec
mov
xchg
call
mul
mov
out
out
leave
push
sbb
dec
repz
imul
push
add
pop
js
das
cli
jmp
jne
pop
out
mov
rcl
daa
ficoml
pop
fwait
pushf
pop
bound
incl
out
cmp
xchg
xor
mov
sbb
mov
cs
adc
sbb
pushl
and
inc
scas
mov
shlb
test
push
pop
enter
xchg
pop
inc
mull
lods
lods
popf
jb
mov
loop
rcll
out
mov
int3
fistpl
data16
sti
xlat
prefetcht2
cld
pop
jmp
fistpll
and
push
ret
sub
and
aad
incl
adc
into
mov
sub
mov
pushl
xor
lock
or
adc
cmpsb
and
add
lahf
imul
dec
jmp
icebp
pop
mov
loop
loope
jmp
mov
jbe
in
mov
call
nop
pop
jmp
adc
push
jge
add
insl
jge
or
cld
lcall
dec
rcrl
push
stos
jo
sbb
add
in
pop
ror
inc
movsl
test
ljmp
aad
call
aaa
cli
inc
andl
jle
js
test
cmp
test
cmp
mov
xchg
adc
adc
stc
mov
sub
fcoml
xchg
aaa
and
repnz
gs
mov
leave
pop
pop
sahf
mov
fucomp
js
jne
fld
ja
push
jae
mov
rcrb
inc
pop
jns
outsb
mov
sbb
rolb
and
incl
dec
aas
sub
xchg
adc
push
add
cwtl
scas
pushl
dec
cmpl
nop
or
jbe
push
dec
dec
out
je
stos
std
dec
xchg
inc
in
test
out
test
mov
icebp
adc
mov
lahf
mov
xor
mov
stc
mov
lcall
ljmp
dec
outsl
cmp
das
mov
rcll
stos
jg
scas
mov
call
cmp
adc
and
jne
or
add
xchg
jge
mov
add
cmc
jmp
cmp
stos
fadd
inc
xchg
insl
push
and
pop
arpl
fnstsw
call
pop
sub
jmp
addr16
adc
inc
mov
mov
ret
add
outsl
mov
jnp
loopne
push
jmp
or
mov
decl
repz
mov
hlt
xchg
pop
cmp
es
shlb
mov
ret
loop
push
pop
xor
ljmp
mov
xchg
inc
out
add
ret
aam
inc
daa
cltd
shl
pop
sub
cmp
lahf
ret
xchg
call
mov
xlat
test
icebp
test
sbb
pop
push
dec
push
shlb
scas
je
cltd
je
jno
repnz
pushl
push
mov
mov
jbe
das
fstp
sbb
gs
je
out
cmpsb
push
push
sar
call
mov
pop
das
cmp
hlt
daa
sbb
in
mov
jbe
mul
dec
movsl
jge
mov
decl
insb
aas
repz
cmp
sarb
inc
mov
xchg
sbb
pop
push
stos
sbb
push
lret
jg
decl
test
pop
push
mov
lods
nop
mov
jmp
pop
repnz
jbe
mov
push
sar
popf
mov
xchg
leave
ljmp
lret
mov
push
fistpll
lods
push
push
pop
and
mov
push
les
decl
sbb
push
and
ja
inc
push
jne
or
adc
xchg
mov
cmpsb
lret
mov
ljmp
push
cmp
mov
aad
sub
fsub
fdivs
popf
sbb
or
lcall
incb
repz
adc
dec
inc
jno
imul
addr16
lcall
jno
jle
dec
pusha
fisubl
out
shrb
sbb
ds
aad
sti
hlt
mov
sbb
fnstsw
inc
out
add
mov
or
leave
daa
xchg
outsl
mov
mov
lcall
ficoms
pop
jecxz
outsl
dec
dec
popa
enter
shll
dec
subb
push
jno
mov
movb
arpl
lock
insl
jne
mov
jp
pushl
ret
pop
movl
gs
dec
adc
test
lds
jno
cli
lret
lcall
inc
sub
xchg
test
pop
jne
in
jns
dec
sub
jmp
out
scas
xorb
in
clc
pop
sub
je
and
sahf
push
and
sti
cmpsb
jg
decl
xor
gs
jbe
push
daa
leave
pop
data16
in
mov
dec
jle
cs
xlat
push
jo
out
stos
in
xchg
cs
cmc
loopne
stos
mov
lds
mov
push
push
cmp
lahf
inc
les
lret
in
push
fcomip
lods
data16
fstpl
xchg
and
sub
mov
pushl
adc
sti
mov
fwait
xor
push
and
cmp
je
jne
aaa
ljmp
incl
cld
pop
push
scas
mov
xchg
das
repz
xchg
sahf
dec
stc
jp
aad
pushl
and
pop
mov
jne
pop
nop
jbe,pt
adc
aaa
sbb
out
imul
call
fs
mov
mov
mov
mov
testl
xchg
cs
call
lods
imulb
out
sti
jl
hlt
lret
dec
leave
pop
aad
cmpsl
push
cmpsb
xchg
mov
xor
mov
cmpsb
jae
jo
lock
inc
inc
push
fimuls
dec
adc
lcall
cmc
mov
sahf
sub
jmp
add
ret
mov
lds
mov
in
fwait
sbb
sbb
sub
clc
jmp
mov
mov
filds
mov
testb
addr16
in
pushf
in
repnz
push
lods
cwtl
das
jno
lret
es
negl
ror
in
mov
jp
xchg
jecxz
test
jge
jle
mov
inc
test
cld
incl
xor
jbe
push
stc
das
scas
rolb
stos
decl
pusha
inc
movsb
lock
xchg
cli
sub
es
aaa
jp
and
xchg
dec
dec
and
outsb
add
jmp
and
test
mov
clc
push
jmp
rcll
xor
or
out
or
jb
jecxz
jge
idivb
cmpsl
push
aas
jo
mov
insb
jb
lahf
pushl
sbb
jbe
imul
aaa
or
das
jne
xchg
xchg
outsl
dec
push
loopne
outsl
insl
adc
incl
jl
or
aad
sub
sub
fwait
mov
pushl
in
cld
jl
cmp
sbb
adc
xor
cmp
mov
cmc
shrl
push
je
popf
rolb
xorb
movsl
jne
push
fdivrs
cli
out
xchg
gs
jns
leave
inc
pop
xchg
icebp
fdivrl
hlt
sub
fdivrl
jg
jmp
mov
daa
repnz
ds
mov
lahf
jne
xor
daa
lcall
add
shr
dec
fisttpll
rcll
das
mov
in
mov
and
fcomip
sti
and
add
jne
cli
and
es
cli
mov
push
es
xlat
cmpsl
fmul
shrb
popf
jp
fdivrl
ret
test
mov
jge
cli
ljmp
fs
into
pop
icebp
lret
sub
stc
out
dec
pop
and
fdivs
and
loop
stos
inc
out
add
out
adc
xor
cmp
call
bound
xchg
je
cld
inc
lock
adc
mov
dec
sar
call
inc
rcll
mov
dec
push
aad
fists
rcl
dec
mov
adc
mov
call
jmp
or
test
je
je
push
cmc
fwait
incl
fsubl
jne
dec
bound
nop
sar
jno
dec
mov
and
and
hlt
inc
and
cmp
fxtract
ja
fdivrs
pop
lcall
pop
sbb
pop
cmp
inc
call
mov
stos
cmp
ds
push
ret
aam
pop
cli
bnd
xchg
repz
inc
and
add
mov
jle
jmp
fidivrl
inc
inc
inc
fsts
pushl
jns
add
inc
xlat
push
sub
dec
push
mov
adc
jmp
sub
gs
mov
jmp
xor
inc
dec
sub
inc
jecxz
incl
cmpsl
and
sbb
int3
je
rorb
lods
add
push
push
mov
sarb
call
jl
inc
lahf
mov
fsub
sub
mov
pop
lea
enter
decl
mov
stc
outsl
lock
aaa
mov
aas
aad
mov
mov
or
jg
stc
js
pop
jl
jmp
fildll
dec
or
lods
aam
push
testl
fsub
neg
cmc
or
add
shl
jnp
jg
insl
push
mov
lock
cmpsb
dec
add
fucomip
out
shr
loopne
xchg
mov
jnp
lret
icebp
xchg
add
incl
sbb
add
outsb
negl
fwait
outsl
ja
jg
repz
xchg
cmp
sub
sahf
stc
cli
and
jg
xlat
and
mov
mov
decl
mov
sbb
test
stos
sarb
insb
in
xchg
test
and
ljmp
jl
ss
aam
inc
icebp
jb
dec
or
xor
testl
into
imul
mov
xor
cli
scas
dec
repnz
inc
lret
cltd
lcall
and
outsl
fcoms
jp
aam
shrb
data16
push
cwtl
mov
aaa
fildll
jno
aad
pop
sarb
mov
adc
inc
and
dec
gs
jns
mov
popa
mov
mov
dec
push
dec
cmc
xor
mov
push
icebp
enter
ljmp
test
loopne
cmp
push
jl
xchg
pop
mov
mov
mov
xchg
lcall
sub
or
jbe
shlb
dec
shrb
fyl2x
adc
dec
loop
inc
ljmp
mov
push
push
jp
push
push
movsb
jb
loope
imul
fcompl
call
std
lret
fmull
jge
ss
pop
dec
push
pusha
xchg
pop
fbstp
push
add
xorl
and
lahf
cld
xor
inc
mov
mull
lcall
add
in
rorb
das
and
stos
cmpsl
shlb
aaa
std
es
sbb
ficomps
cld
shrl
incl
hlt
fnstenv
mov
fcoml
jge,pt
popa
cmp
sarb
hlt
push
and
xor
pushf
dec
mov
in
and
jg
inc
jnp
cmc
mov
mov
mov
cltd
das
pop
mov
cmpsl
pop
ljmp
add
add
jg
dec
cld
pop
mov
jecxz
out
or
ss
xor
ljmp
jmp
pusha
lea
ljmp
push
js
mov
jae
int3
scas
mov
idiv
call
lods
enter
dec
in
ja
lods
xlat
leave
cmp
ret
imul
pop
dec
fisttps
sub
cmp
pop
pop
pop
push
ds
jno
decl
insl
xchg
xchg
mov
inc
push
mov
je
pop
jo
scas
and
and
sbb
sub
scas
cli
inc
fwait
ret
data16
outsb
mov
jecxz,pn
fs
loopne
sbb
add
cmp
mov
jecxz
aam
sub
movsl
adcb
insl
clc
jb
aas
inc
movsb
lahf
sub
incl
jp
inc
fcoml
jbe
in
cmp
sar
jge
xchg
mov
or
add
cli
test
fsubrs
outsl
clc
jmp
lahf
xchg
je
cwtl
insb
mov
loop
insl
sub
pop
sub
cmp
pop
jmp
sar
repz
call
mov
shll
loop
mov
pop
dec
pop
movsl
and
call
mov
mov
sbb
sbb
jg
lcall
mov
lcall
std
imul
mov
jmp
jp
cmc
mov
ss
add
dec
jg
icebp
js
inc
xor
cmp
nop
cltd
lcall
decl
aad
xor
pop
pop
xorl
outsb
ljmp
mov
out
lods
inc
cmc
es
pop
cmp
cwtl
in
dec
inc
mov
jecxz
cmp
test
cli
js
loop
lock
call
xchg
sahf
inc
mov
rolb
inc
scas
ss
pop
mov
pop
test
ljmp
jae
mov
ret
mov
fisttpl
sbb
cmp
adcb
add
data16
xchg
adc
nop
inc
daa
mov
outsl
mov
decl
mov
pop
xchg
test
sbb
outsl
loopne
xchg
loop
or
mov
sbb
arpl
decl
ret
inc
scas
outsl
push
sbb
push
dec
mov
dec
ljmp
pop
mov
pushl
pusha
mov
mov
sub
hlt
out
mov
jns
ja
imul
adc
cmp
pushl
ljmp
rep
lods
lea
fwait
out
es
xchg
mov
leave
into
fdivrp
sbbb
iret
cmpsb
sub
aas
out
les
and
inc
loopne
lcall
ljmp
mov
jp
test
dec
cmp
adcb
xchg
dec
fmulp
outsl
mov
mov
nop
xlat
add
add
dec
and
repnz
xchg
gs
jp
and
dec
repz
xchg
iret
mov
lcall
push
or
or
xchg
cmpb
xchg
cmp
xchg
add
pusha
ljmp
sarl
pushf
into
and
rolb
movsb
adc
cmc
shlb
inc
add
inc
lods
pop
push
inc
pop
jnp
lahf
movsl
cltd
add
xchg
or
and
pop
incl
pop
sbb
cmpsl
xchg
or
add
xchg
jl
and
ficoml
cmp
pushl
push
cmp
push
xchg
dec
adc
loope
into
mov
loopne
lods
int3
decl
out
dec
lds
pop
ljmp
sub
sbb
mov
pushf
rcrl
jecxz
ljmp
clc
sbb
push
pop
iret
xchg
sbb
mov
mov
jnp
mov
sahf
movb
and
scas
call
call
inc
lar
sbb
inc
xor
and
pop
jno
std
dec
adc
mov
loope
stos
call
test
mov
xchg
inc
orl
call
jnp
fwait
jp
dec
fwait
jg
jmp
imul
or
mov
mov
cmp
movsl
mov
ljmp
adc
dec
push
inc
ds
sbb
jne
sbb
ret
push
dec
inc
push
lcall
pop
jns
and
pop
mov
cli
jo
sbb
mov
adc
xchg
repz
testb
push
ficoml
xchg
or
sub
pop
mov
out
pusha
subb
ljmp
mov
pop
aad
fucomi
clc
lock
loopne
pop
inc
into
mov
mov
cld
dec
cmpl
call
ljmp
sbb
sub
icebp
in
sarl
mov
mov
sub
mov
xor
xchg
and
sub
cmp
xchg
test
addr16
xor
jp
ljmp
loope
pop
test
jo
imul
nop
aam
sahf
sbb
cmp
lcall
or
mov
mov
rcr
inc
test
imul
pop
jb
gs
dec
loop
ljmp
movsb
scas
sbb
and
push
lods
dec
cmp
ljmp
arpl
sbb
push
sbb
jmp
pop
jno
mov
push
push
mov
decl
jns
movsb
fbstp
xchg
fwait
push
shrb
jg
sbb
int
hlt
fxch
out
sub
mov
cmp
mov
dec
xchg
adc
xchg
pop
mov
call
pushf
das
push
push
dec
dec
push
ret
out
test
lea
push
mov
xchg
test
and
xchg
or
fistpl
or
loopne
pop
mov
push
lds
out
subb
or
sar
mov
pop
push
add
sar
call
shll
out
ljmp
mov
adcl
mov
sar
stc
sar
jmp
addr16
psubusw
pusha
push
mov
xor
and
mov
push
mov
dec
pusha
xlat
add
dec
jp
jns
xor
in
jg
dec
pop
jbe
fisttps
mov
cmp
and
jo
orl
cli
aam
inc
cmp
pop
push
dec
incl
jno
pop
fnstsw
jns
movl
lock
imul
or
popf
fsubrl
pop
faddl
xchg
test
cmp
leave
and
leave
dec
mov
jle
jns
mov
jo
mov
shld
or
mov
lcall
lods
mov
push
push
icebp
pop
dec
negb
mov
test
fcomip
ret
fistps
ljmp
ja
mov
push
outsb
sbb
or
or
decl
out
xchg
ret
sbb
adc
mov
fs
lock
push
mov
mov
decl
lret
jl
pop
in
mov
imul
into
test
and
outsl
clc
cmp
jg
adc
adc
repz
cld
adc
mov
incl
adc
enter
jge
jg
lods
in
mov
sbb
bound
fdivrl
call
cld
cmp
orb
cld
pop
jecxz
fs
ss
sub
xlat
adc
incl
iret
or
jbe
mov
dec
push
sub
movsl
sbb
dec
push
add
loop
and
std
push
lcall
out
xor
sub
mov
ljmp
pop
or
sti
pop
cwtl
sub
jne
je
aad
pop
jecxz
add
sub
push
cmp
xlat
arpl
dec
mov
cli
jmp
pop
xor
dec
inc
cmp
test
insl
xor
xor
xchg
in
cwtl
inc
add
scas
int3
mov
in
sar
push
cld
lock
xchg
mov
push
imul
icebp
call
out
adc
test
roll
push
pop
xchg
lds
mov
ljmp
and
mov
mov
shlb
cld
xorb
add
lods
xor
imul
jg
or
movsb
das
test
jns
divb
mov
sub
mov
push
cs
lock
decb
rcll
clc
test
icebp
add
scas
mov
decl
std
mov
sbb
sbb
shrb
jl
ror
inc
mov
pushl
jb
dec
jl
mov
jg
movsb
lock
je
jne
and
mov
mov
movsb
ljmp
or
jnp
je
mov
fsubr
out
iret
mov
ljmp
out
sub
and
jmp
add
fidivs
stos
insl
std
lods
pushf
mov
sub
lods
mov
ljmp
cli
dec
aad
mov
les
stc
add
repnz
hlt
popf
movsl
mov
sti
mov
lret
mov
dec
out
push
jl
cltd
leave
jecxz
mov
pop
inc
mov
iret
add
dec
mov
fisubs
inc
scas
xchg
and
pop
xor
ljmp
push
cmp
inc
pop
jecxz
cmp
lcall
sti
cld
add
pop
or
xchg
mov
xor
outsl
gs
mov
push
mov
xor
push
stc
and
fimuls
arpl
repnz
inc
pusha
loopne
imul
dec
stc
mov
clc
sub
push
jecxz
call
sub
lahf
or
jne
aas
mov
inc
fbstp
mov
pushf
push
mov
fadds
jmp
add
popa
test
es
repz
in
xor
jnp
push
shrl
test
adc
ja
sarb
out
jnp
mov
jg
adc
ret
and
jge
popa
add
mov
or
rcrl
xchg
mov
push
push
jo
stos
mov
js
jmp
inc
je
lahf
stc
pop
mov
lret
dec
mov
cmpsb
jge
aad
push
push
clc
push
ds
pushl
rorl
add
dec
pop
imul
shlb
flds
mov
cmp
and
sar
mov
pop
sub
mov
dec
mov
pop
mov
insb
xor
pop
cmp
popf
jbe
hlt
jg
xchg
stos
pusha
sub
add
aam
mov
in
and
and
mov
push
add
jl
mov
pop
adcl
call
xor
dec
push
cmp
cmp
or
pusha
imul
pop
adc
out
adc
loopne
cmp
inc
add
rcll
dec
in
mov
ss
mov
decb
add
mov
pushl
or
movsl
xlat
dec
jb
push
popf
mov
scas
push
filds
add
scas
inc
stc
and
mov
sbb
arpl
inc
icebp
cld
cs
insl
mov
mov
mov
jmp
lea
pop
mov
push
mov
mov
adc
je
push
mov
fsubr
push
pop
pop
cmp
mov
repnz
xchg
loop
jo
mov
mov
loopne
ljmp
mov
dec
cmp
xchg
sbb
nop
fdivr
sarl
call
std
pop
adc
es
popa
ret
xchg
popa
inc
arpl
int3
dec
aam
fs
loop
dec
in
punpcklbw
fisubrs
jb
ss
xor
jne
sub
dec
cmp
fldcw
xor
inc
and
jl
xchg
dec
jnp
fwait
test
fiadds
das
repz
sti
jo
xchg
mov
push
jo
inc
xor
and
ljmp
cld
sbb
mov
pusha
push
push
pop
testb
mov
push
jmp
adc
or
cmp
sbb
cwtl
jbe
pop
jno
pop
cmc
mov
pusha
xchg
and
call
xor
xorb
std
mov
imul
lcall
in
fcomp
outsb
mov
jnp
mov
sub
xchg
add
xchg
mov
mov
shlb
mov
add
mov
xlat
xorl
das
bound
ljmp
cli
pushl
sahf
adc
sbb
jp
or
je
cld
xor
mov
fs
jmp
fistl
adc
outsb
adc
xor
xchg
mov
mov
fs
leave
inc
sub
sub
stos
js
test
mov
out
pop
and
xchg
shrb
ljmp
aas
adc
cwtl
and
dec
mov
aas
orb
or
mull
out
call
out
sbb
sub
ss
inc
test
add
push
lcall
decl
adc
loopne
mov
and
aas
lret
ret
add
mov
incl
pop
pop
imul
pop
xor
rorb
out
mov
sbbb
jmp
scas
jo
int3
lahf
scas
icebp
dec
cmpsl
push
mov
lcall
pop
push
mov
lcall
imul
mov
or
mov
popf
movsb
push
or
cmpsl
stos
ljmp
cmp
enter
in
and
cmp
cmp
les
mov
rcrb
add
subl
js
aaa
popa
dec
mov
add
loop
leave
jle
push
shlb
cmpl
dec
loope
ljmp
popa
lds
loopne
faddl
fucomip
shlb
mov
and
adc
sbb
xchg
lahf
mov
lret
idiv
mov
mov
mov
adc
pop
rorb
mov
pop
inc
add
or
outsl
mov
jge
mov
adc
xorl
cmp
lcall
movsl
push
cmp
popf
aaa
or
imulb
mov
xchg
jae
lret
mov
push
mov
mov
jle
pop
dec
xchg
outsl
ljmp
outsl
push
loopne
imul
cmp
pushl
fists
je
call
insl
jecxz
cmp
divl
push
push
in
fildll
inc
fistps
rclb
push
lds
pushl
and
das
inc
pop
inc
inc
and
in
fstps
lcall
loopne
movsb
mov
mov
sti
xor
push
hlt
mov
sub
xchg
dec
inc
cld
cltd
daa
xchg
mov
and
mov
mov
enter
daa
jns
pop
aas
push
aad
and
faddl
ljmp
incl
inc
jne
push
je
enter
adc
js
fs
dec
pop
jge
inc
call
repnz
pop
adc
rclb
inc
xor
mov
lret
pop
jecxz
out
mov
add
outsb
mov
sarb
out
add
cmp
sbb
js
sar
pop
sub
out
cmp
jg
fnsave
inc
add
ljmp
ficompl
out
pop
bound
pop
outsb
mov
fisttps
sub
fsts
js
lret
xor
mov
jg
or
sar
mov
pushf
sbb
arpl
in
sbb
mov
aas
jp
ficoms
test
data16
mov
sub
mov
aas
xor
xor
lods
lods
rcll
mov
and
jg
mov
lods
scas
test
mov
jg
xchg
push
loopne
das
test
dec
push
divb
leave
daa
push
mov
jecxz
lods
dec
mov
push
dec
mov
mov
add
cli
jns
leave
lcall
sbb
pusha
inc
pop
dec
aaa
push
fdivr
dec
mov
jae
mov
into
pop
mov
push
inc
mov
loope
dec
cmp
mov
mov
xchg
enter
insb
adc
stos
test
mov
xor
or
ljmp
sbb
rcrb
xor
int3
iret
mov
or
sbb
xchg
mov
pusha
incl
cmp
inc
xor
pop
adc
fwait
push
push
stos
pushf
stos
ret
cs
into
adc
lahf
cld
lcall
pop
mov
cld
inc
pop
push
pop
call
or
cmpsb
sti
jae
imulb
mov
sbb
mov
cmp
add
mov
test
ds
les
mov
test
ret
movsl
test
sbb
dec
mov
and
adc
iret
imul
inc
call
add
fwait
lds
dec
and
dec
cmp
dec
ret
pop
push
sbb
aaa
fldl
jmp
lcallw
xlat
adc
sahf
sarb
adc
nop
pop
addr16
mov
pushl
jmp
jp
pushf
lds
jle
outsb
imul
mov
notb
sub
inc
xchg
out
sbb
jno
stc
outsl
pop
jnp
mov
sahf
lahf
jns
pop
fimull
mov
pop
mov
lahf
inc
add
jmp
fwait
or
jle
jmp
fstl
imulb
mov
lds
aas
incl
cmp
sbb
js
xchg
dec
cmp
shlb
or
xor
cmp
ds
dec
addl
in
mov
lock
leave
test
outsb
jnp
mov
pushl
js
and
in
push
ja
inc
jp
xor
mov
mov
xor
stc
or
cmp
pop
lock
jno
cmpsl
scas
mov
inc
lret
xchg
cmp
call
add
mov
mov
dec
push
popa
and
lret
dec
cli
adc
das
mov
xor
call
clc
jb
dec
xchg
int
sbb
add
mov
jns
sarl
popf
dec
push
lahf
jb
cmp
decl
mov
mov
xor
imul
imul
mov
lcall
in
lock
ljmp
push
mov
pop
movsb
inc
mov
cmp
sti
mov
inc
pop
or
stos
mov
pusha
mov
test
mov
pushl
filds
sbb
popa
cld
mov
sub
mov
adc
fldcw
clc
mov
cmc
jle
push
pusha
pause
or
pop
cmpl
andl
add
pop
negb
or
inc
dec
inc
mov
dec
dec
leave
push
movsb
fistpll
loopne
jecxz
push
pop
inc
in
pushf
push
out
add
jle
mov
pushl
bound
xchg
int
rolb
and
out
jae
cwtl
sbb
jmp
in
add
decl
sub
in
shlb
and
std
repnz
shlb
cltd
scas
clc
inc
pop
fistpll
mov
xchg
and
dec
sahf
pop
dec
aad
mov
aaa
jg
dec
xchg
in
addr16
push
mov
andb
add
ret
cmp
cmp
jne
lods
test
xchg
sbb
lcall
sarl
lahf
hlt
popf
mov
cld
and
incl
lret
and
push
add
mov
lods
rcrb
pop
dec
out
mov
xchg
scas
xchg
pop
sar
out
ret
and
lret
ret
jmp
movsb
incl
test
ljmp
xor
pop
jle
stos
xchg
and
xchg
mov
fmul
sahf
lcall
js
icebp
push
add
dec
mov
push
add
sar
mov
rcll
insl
push
jmp
mov
stos
ljmp
outsl
lret
fnstenv
js
shlb
lcall
ljmp
sbb
fsubr
in
push
iret
mov
mov
pop
push
lret
repz
xchg
mov
mov
ja
dec
mov
sti
mov
mov
jmp
jmp
adc
enter
jmp
sbb
pusha
add
out
push
xchg
add
add
outsl
repnz
test
adc
mov
inc
idiv
das
imul
pop
lgs
inc
fcoms
nop
movsl
jns
popa
pop
out
mov
and
mov
xchg
fsubl
insb
push
popa
inc
cmp
decl
mov
lret
lds
je
mov
adc
aam
repnz
incl
mov
iret
test
mov
mov
jbe
xor
cs
sbb
fbld
int
pop
outsl
jae
add
mov
lret
mov
mov
cmpsl
adc
mov
fs
cltd
mov
inc
subb
loopne
lahf
xlat
ds
mov
push
sbb
aad
xchg
movd
fwait
test
insb
aas
es
pop
add
lret
mov
mov
out
pop
mov
lds
or
pushl
dec
jnp
into
pop
iret
push
cltd
aad
paddq
mov
mov
mov
push
push
inc
pop
cmc
and
fisttps
pop
jbe
inc
addl
jmp
and
mov
mov
and
testl
incl
dec
lock
jo
adc
dec
leave
mov
fldt
jl
lcall
movsl
xchg
mov
dec
fwait
scas
sbb
dec
pop
mov
ljmp
lret
out
mov
lea
inc
scas
inc
adc
out
push
xor
jmp
xchg
repnz
mov
outsl
dec
int
sahf
movsl
mov
dec
sbb
sub
jmp
and
daa
or
out
jb
inc
fsubr
cwtl
sbb
jbe
mov
repnz
pushl
pop
lds
sub
ficompl
or
cmpsb
push
icebp
jno
loope
popw
in
cmpsb
call
dec
mov
mov
or
dec
sbb
lahf
es
add
mov
dec
mov
mov
sbb
icebp
sub
sub
cmpl
ja
loop
or
inc
fistpll
daa
jp
and
test
hlt
icebp
cwtl
sbb
or
int
popf
mov
std
jmp
sub
jae
test
cltd
dec
mov
repz
jg
adc
cli
sbb
cmp
lea
out
daa
mov
xchg
xor
mov
shr
je
mulb
lods
testb
mov
lods
pop
xchg
pusha
jb
movl
imul
dec
loop
pop
add
mov
rcl
rcl
hlt
cmp
addr16
insl
stos
sbb
in
mov
lods
data16
xor
fdivl
ja
add
int3
add
ljmp
and
jmp
push
dec
sbb
ja
pop
inc
test
arpl
ret
add
add
jg
decl
out
fcoml
repz
mov
push
imul
mov
push
sbb
jge
dec
lods
dec
jno
jmp
and
add
dec
popa
imul
adc
mov
xor
out
cmp
test
lahf
jns
sub
jns
xchg
jmp
xlat
inc
sbb
inc
xlat
sub
xchg
daa
jno
rorl
pop
push
push
mov
addr16
incl
push
addr16
jmp
iret
testl
aas
inc
outsb
stos
mov
sahf
mov
sbb
sbb
ljmp
fisubrl
or
pusha
mov
pop
pop
cmp
xchg
xor
pop
mov
push
loopne
cmc
cmpsl
push
adcb
jg
lock
data16
imull
xchg
imul
or
clc
call
test
insl
pop
fisttpl
jecxz
mov
mov
dec
out
jo
ljmp
in
sbb
lock
push
jmp
cmp
mov
jl
out
inc
data16
shl
and
enter
xchg
fcomps
lcall
fadd
jge
add
jg
pusha
jmp
pop
imul
add
stos
xorl
ljmp
ljmp
add
pop
gs
pushl
inc
pop
shlb
loope
pop
shll
loope
dec
jg
mov
sub
es
push
idivb
push
incl
pop
je
sub
scas
or
cltd
in
lahf
arpl
es
mov
inc
testl
or
jae
dec
jbe
sti
pusha
cmp
adc
jne
mov
arpl
scas
addr16
decl
decl
hlt
orl
lahf
lahf
xor
push
cld
inc
test
rolb
jle
xchg
jbe
add
jle
cmp
mov
cld
ljmp
outsb
icebp
loope
aaa
xor
fcoml
jb
js
mov
imul
inc
inc
repnz
scas
aaa
std
pop
test
nop
xor
js
jne
inc
and
pushl
xchg
jno
test
call
xorl
in
jmp
sub
lcall
and
cli
stos
sbb
sbb
outsl
cmp
sbb
aam
cltd
test
dec
dec
lret
mov
clc
jle
dec
xchg
mov
push
iret
sbb
pop
mov
pop
adc
xor
jmp
push
jnp
cmpxchg
pop
cmp
jnp
lahf
jno
pop
loopne
jo
push
dec
ficoms
incl
adc
ljmp
scas
divb
test
lods
pop
std
cmc
flds
add
cli
lods
lock
frstor
dec
dec
rcll
shl
xor
pop
xchg
stos
ljmp
mov
inc
int
sbb
je
sti
into
dec
rep
mov
jmp
ljmp
adc
cmp
outsl
cmpsb
fidivrl
xor
in
mov
pushl
fidivrl
sub
adc
icebp
in
cltd
xchg
jmp
lods
and
mov
rcrl
pop
ljmp
dec
out
or
jno
scas
pop
imul
sbb
xchg
xchg
cmc
jbe
adc
push
xchg
mov
pop
subb
mov
xor
cltd
mov
rcrb
xlat
call
push
push
pop
jecxz
jg
loopne
lea
add
jmp
rcrl
pop
lahf
ret
mov
add
imul
or
aaa
test
loope
jne
decl
fmull
loope
call
jmp
fucomi
inc
mov
cmpsl
lret
fcompl
ljmp
fsubrs
pop
call
push
in
jns
or
fwait
es
add
aad
push
out
sub
incl
and
sub
imul
mov
rcrb
adc
shrb
add
and
cmpsl
test
decl
data16
inc
popf
xchg
out
icebp
or
scas
inc
pop
test
xchg
ljmp
mov
pusha
pop
cmpsb
mov
insb
and
incl
aaa
jmp
pushf
aas
ds
cltd
mov
stos
incb
pushf
sub
push
ret
push
loop
stos
fildl
mov
lahf
add
mov
or
ljmp
mov
push
test
mov
lds
pushl
mov
lcall
and
xchg
xchg
fistpl
push
mov
mov
imul
js
jns
inc
adc
inc
rcr
pop
outsw
pop
push
mov
ret
je
jbe
in
or
adc
mov
fmulp
fiaddl
aaa
push
sbb
in
mov
mul
or
mov
movsl
fdivs
shrb
jecxz
inc
pop
js
sbb
jecxz
call
cs
fs
stos
lods
push
jmp
add
inc
outsb
ret
js
push
pop
push
mov
push
sbb
push
icebp
inc
push
es
je
js
in
stos
cmp
aam
call
stos
sub
insb
in
ret
dec
fs
pop
das
jg
cmc
divl
in
icebp
cmpsb
pop
jge
jae
out
clc
xchg
insl
mov
add
cltd
emms
pop
loop
and
in
aad
hlt
jg
bound
sti
int3
xchg
fwait
xlat
test
pop
leave
movsl
xchg
mov
push
pushl
negb
mul
jl
test
mov
aas
or
nop
push
scas
call
hlt
push
push
ret
in
data16
shl
addl
push
and
insl
cld
push
lret
or
jmp
arpl
pushf
loope
rclb
sub
add
ja
mov
rcrb
jecxz
jg
adc
jno
sbb
or
aad
jo
jbe
scas
xor
sti
add
mov
fwait
imul
gs
sahf
add
jge
shll
scas
lcall
mov
fwait
add
ja
mov
mov
stos
out
push
adc
lods
test
decl
sarb
test
call
dec
test
and
dec
decl
rclb
add
or
dec
cs
adc
movsb
xchg
xchg
adc
push
sub
pushl
mov
fisubrl
divb
and
jl
push
adc
decl
icebp
cmc
xchg
leave
sbb
decl
insb
aam
ret
and
popf
mov
inc
xchg
sub
cmp
cltd
sti
or
xchg
and
mov
mov
mov
clc
incl
mov
cmp
dec
cmp
arpl
lcall
pushf
and
cmp
sub
jle
mov
or
adc
jbe
out
cld
lcall
and
mov
push
int
cmp
in
jp
subps
leave
pop
arpl
es
pushl
push
outsl
add
jmp
js
test
dec
addr16
movsb
rcrb
shrb
std
incl
sbbl
xchg
shrb
ret
rorl
in
xor
repnz
jge
pop
mov
xchg
mov
decl
stc
daa
mov
push
and
dec
xor
iret
incl
shr
or
jecxz
cmp
mov
aam
xchg
xor
mov
ljmp
cmpsb
sbb
cmpsb
sbb
push
es
out
push
andl
movsb
stos
decl
mov
fstpl
sub
int
push
mov
pop
pop
js
mov
xor
inc
xor
decl
xor
cld
add
aad
jbe
stos
push
fdivr
insl
mov
lock
mov
jp
pop
adc
xchg
sbbl
clc
add
in
adc
xor
jmp
fdivs
and
sbb
or
loopne
and
test
decl
out
mov
cmc
mov
pop
shll
jmp
call
fiaddl
inc
in
dec
xor
loop
imul
sarl
mov
std
idiv
and
call
jl
arpl
int
ja
adc
sbb
ljmp
mov
ror
sub
sti
imul
sub
cmp
jp
loopne
mov
jmp
test
mov
inc
sub
es
pop
ret
mov
dec
shll
std
sahf
insl
add
jg
cld
push
stc
adc
add
incl
add
jge
mov
add
dec
xchg
lock
push
push
mov
popl
push
xor
jno
lret
addb
inc
inc
mov
or
mov
adc
and
in
pop
es
jo
imul
sbb
imul
jp
ds
add
adc
push
inc
mov
andb
popa
sub
mov
mov
test
add
push
add
mov
push
in
add
adc
cmp
or
inc
adc
arpl
add
dec
pop
fwait
jge
sti
push
outsl
outsl
insb
push
push
xchg
jo
push
test
outsb
and
gs
push
mov
sbb
mov
shlb
and
sub
adc
and
add
pop
inc
sbb
std
dec
jne
js
call
pop
inc
fists
ret
inc
divb
cmp
mov
mov
es
mov
int
outsl
insl
insl
jo
xor
lock
pop
pop
inc
fwait
dec
push
pop
inc
dec
jb
cmpl
sub
and
jbe
and
jmp
pop
push
outsb
dec
repnz
mov
sub
sbb
cmp
add
rcll
roll
push
inc
ret
mov
jne
inc
cmp
clc
mov
mov
mov
nop
bound
jo
pop
insb
push
adc
ds
inc
icebp
inc
insb
jne
or
data16
add
clc
shrb
push
mov
dec
mov
add
or
inc
push
fildl
push
addl
lds
pop
and
jne
arpl
xchg
jo
pop
pop
push
gs
es
xchg
outsl
push
jns
sbbl
xor
mov
push
out
cmp
mov
dec
add
cs
adc
das
adc
in
jae
aad
push
lods
sbb
adc
inc
imul
roll
jo
packuswb
mov
dec
push
pop
mov
jo
popa
mov
cltd
push
dec
inc
dec
sbb
call
jmp
movsb
ljmp
jbe
mov
ret
fcomps
addr16
add
inc
push
xor
popa
inc
enter
push
loope
sub
loopne
pusha
pop
or
outsl
popw
mov
dec
mov
mov
inc
pop
cmp
fs
adc
popa
and
testl
adc
in
and
cmp
mov
sub
dec
jae
in
cmp
lock
ljmp
jmp
jns
notb
inc
mov
adcb
jb
or
pop
mov
arpl
cmp
fdivs
push
je
ja
mov
pop
jg
mov
pop
pop
push
dec
sub
mov
cmp
sbb
cmp
arpl
es
cwtl
ret
aas
jp
sbb
xchg
fcoms
xor
push
and
mov
shll
orb
popa
fcoms
mov
pop
int3
outsl
jns
pushf
pusha
mov
outsl
pop
js
insb
sbb
jmp
addr16
and
jne
mov
pop
repz
fisubrs
je
pusha
pop
outsl
adc
inc
inc
iret
fadds
nop
sti
dec
cltd
inc
sbb
push
mov
sub
and
imul
ret
sbb
push
es
add
fildl
inc
add
jns
adc
mov
icebp
andl
xor
cmp
roll
push
cmp
adc
xor
pusha
mov
rorb
or
stos
mov
sbb
daa
dec
leave
push
push
jne
inc
enter
sbb
xor
inc
sub
or
stos
leave
jo
jae
xor
sbb
mov
jno
adc
dec
mov
daa
mov
icebp
add
dec
sbb
fdivrs
inc
filds
cmp
pop
push
test
cs
xor
roll
repz
add
xchg
out
push
outsl
cs
push
or
sub
icebp
xchg
inc
daa
jbe
or
jl
cwtl
fstpl
cmp
fadds
adc
packuswb
test
and
jns
and
push
xchg
push
xor
or
fstpl
orl
mov
aad
add
pop
xchg
rcrb
push
mov
arpl
push
inc
pop
and
fs
int
inc
add
lock
xlat
loop
ss
and
add
sbb
in
sbb
mov
dec
xor
and
fadd
mov
or
out
and
rcrb
push
and
mov
inc
dec
sub
lcall
ret
loopne
mov
cmp
cs
lods
popa
fbld
jmp
fs
sub
inc
jns
int3
test
divl
out
push
adc
subl
adc
in
inc
sub
jo
inc
inc
inc
push
arpl
mov
inc
imul
pop
jns
loop
push
jecxz
sahf
fs
sbb
jb
subb
inc
insb
jle
punpckldq
repnz
xor
stos
mov
xchg
and
dec
jae
and
nop
lea
sub
inc
leave
jne
push
push
jl
js
enter
mov
pushf
push
and
sbb
adc
jle
lret
push
adc
sbb
loopne
roll
and
pushf
jge
dec
xor
push
pop
xor
and
fstps
adc
in
testl
sub
pop
and
adc
pop
jnp
or
dec
add
js
outsb
dec
fsts
dec
mov
lcall
dec
add
mov
mov
shrl
xchg
movsb
dec
adc
imul
dec
rcrl
add
push
add
into
cmpsl
mov
mov
add
jb
or
and
mov
and
and
in
add
ret
bound
ds
pop
inc
pusha
inc
jb
push
jb
inc
jae
mov
subb
inc
roll
movsb
ss
xchg
imul
iret
push
repz
jo
fs
scas
pusha
mov
imul
mov
xchg
lea
push
jns
push
bound
icebp
adc
loopne
cmp
and
dec
cmp
daa
test
mulb
push
aaa
addb
pop
mov
cs
imul
push
pmulhw
xchg
sub
insl
addr16
or
fldl
sbb
cs
jbe
add
or
inc
push
fsubrs
fildl
movsb
and
push
sbb
fs
sub
faddp
notb
dec
std
and
jb
inc
mov
fstl
js
or
in
ret
es
popa
imul
jge
adc
aad
movsb
dec
sub
xor
les
and
or
jmp
add
insb
adc
sub
pop
shlb
outsb
ja
push
inc
or
sub
mov
test
xchg
orb
loope
pop
lea
insl
pop
mov
dec
mov
cmp
and
pusha
mov
or
pop
insb
orb
addl
xor
sub
mov
push
jbe
inc
inc
cmp
vpunpcklbw
daa
outsb
arpl
xor
movhps
inc
sub
jbe
or
fsubr
xchg
icebp
aam
push
ret
sbbl
inc
outsb
mov
subl
call
xchg
pop
xor
mov
nop
lea
pop
adc
pop
imul
xchg
or
jo
mov
or
pop
jmp
lock
mov
jmp
je
js
inc
sbb
push
fs
sub
cmp
movb
sbbl
ret
addr16
push
mov
inc
mov
mov
out
jge
sub
jecxz
pop
xorb
sbb
mov
out
std
stos
subb
push
inc
out
adc
fwait
dec
fldt
repz
fs
ficoms
fidivrs
sbb
inc
mov
dec
mov
mov
data16
xchg
popa
mov
ffreep
jo
add
fnstenv
jae
pop
jnp
in
bound
ja
imul
dec
pop
inc
or
lods
sub
insb
sbb
loop
loopne
or
mov
dec
shl
mov
fsubs
add
pop
jp
int
mov
aad
fstl
or
pop
repnz
lods
lret
add
cmc
pop
adcb
mov
add
push
add
adc
cmp
aad
xor
ss
imul
pop
lock
mov
jo
xlat
add
and
jb,pn
add
scas
cmpsb
popa
inc
and
mov
out
inc
cs
xchg
int
flds
adcb
sub
into
push
add
ja
rcrb
out
sbb
rorl
clc
add
ss
iret
dec
xchg
test
inc
hlt
pop
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
inc
add
inc
add
add
