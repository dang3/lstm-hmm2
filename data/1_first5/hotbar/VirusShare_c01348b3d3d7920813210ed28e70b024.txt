divb
in
mov
mov
mov
inc
add
add
or
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
cld
add
jmp
test
jne
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
inc
push
adc
add
inc
js
fcmovnb
les
pushl
push
mov
xor
mov
mov
mov
call
data16
mov
pushl
test
enter
push
or
data16
jg
adc
je
push
lahf
scas
loope
jge
adc
pop
push
sub
mov
hlt
cs
add
insb
in
add
push
adc
xchg
xchg
cmp
xchg
mov
imul
add
loopne
or
data16
cltd
imul
mov
pop
shll
cmpsl
push
cmpsb
cmp
ret
data16
adc
push
push
add
xchg
cmp
add
pop
pop
pop
mov
sbb
inc
es
pop
data16
into
adc
adc
add
aaa
movsb
push
int3
push
mov
jbe
ret
cmp
add
ja
call
test
cmp
push
xchg
mov
inc
cmp
add
in
xchg
mov
and
add
dec
adc
pop
xlat
mov
add
and
add
loope
int3
pusha
push
or
push
ror
ljmp
push
scas
mov
push
aaa
fdivrs
sti
push
pop
pop
fs
push
sub
pop
add
sub
insl
sbb
jg
add
push
push
push
iret
bound
push
mov
aaa
jae
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
add
loopne
jge
gs
sti
mov
hlt
mov
xor
mov
pop
ret
arpl
es
and
push
pop
imul
mov
cli
pop
inc
sub
inc
clc
sub
mov
enter
push
push
ss
loopne
jmp
fs
xor
jne
pop
adc
fdivr
mov
adc
jg
mov
adc
int3
adc
adc
ret
shrl
jge
pop
add
lock
pop
outsl
jmp
in
sub
xchg
sbb
push
decl
push
mov
sar
xor
cmp
ja
adc
add
sub
add
push
movsb
aas
sub
mov
scas
and
addb
add
scas
cmp
loop
lds
iret
jle
mov
cmpl
lds
jle
push
filds
ret
add
jge
std
xlat
mov
sbb
or
jmp
cltd
sub
ja
fcmovb
shr
enter
mov
mov
sub
dec
push
add
cld
sbb
cmp
jl
cmp
jne
pop
mov
inc
pop
mov
mov
mov
push
jbe
mov
hlt
out
jne
rorl
mov
mov
or
adc
push
lea
cmpl
fld
push
xor
into
mov
mov
mov
cmpsl
sub
cmp
cmp
cmpsl
mov
in
scas
xor
fsubrs
mov
jg
cmpsl
rcrl
mov
mov
xchg
or
test
jle
dec
popa
outsl
or
push
call
sahf
mov
add
or
icebp
in
pop
pop
fwait
push
pop
sub
jg
decl
out
test
sbb
mov
vucomisd
inc
addr16
and
cmp
mov
sbb
andl
ret
and
mov
adc
sub
std
ds
hlt
jg
pusha
add
mov
mov
push
sbb
jnp
sti
push
xor
push
push
hlt
movlhps
hlt
cmp
fsubr
jle
mov
out
lock
lret
add
cmp
cmp
jae
add
lods
sub
sbb
andl
ret
add
sbb
cld
jb,pt
pop
add
xchg
pop
cli
in
das
push
leave
ret
lea
ljmp
xor
aaa
cmp
ret
push
push
shrb
mov
jmp
xchg
jmp
inc
or
mov
or
xchg
cld
pop
dec
jo
stos
jo
and
and
inc
sub
loope
jno
aad
aaa
stos
sar
out
orb
pop
pop
or
cmp
idiv
sub
das
xor
jno
cmp
jne
push
push
les
lock
push
adcb
mov
mov
or
pop
pop
pop
or
or
test
mov
jne
cmp
push
jge
movl
mov
nop
dec
sub
mov
jae
iret
mov
add
out
add
pop
fstpt
mov
add
mov
sbb
xchg
push
mov
pop
mov
sti
push
or
cwtl
push
dec
xchg
out
sti
imul
mov
loopne
in
dec
push
push
cmp
adc
mov
std
stos
or
or
je
push
or
loopne
test
push
sbb
sar
inc
inc
inc
or
or
fildll
lea
dec
push
xor
sbb
leave
mov
xchg
pop
push
out
cmovns
add
sbb
pop
jae
jae
push
add
sbb
inc
out
out
or
xchg
push
aas
into
popf
lea
push
add
cmp
inc
push
mov
cmp
pop
enter
push
daa
and
adc
jge
lds
push
pop
cmp
push
mov
test
push
cmp
push
inc
cmp
je
sbb
cmp
xchg
adc
imul
push
imul
out
sbb
cwtl
push
mov
adc
cltd
shrl
into
xor
mov
or
xor
gs
xor
lea
push
test
ret
lret
xchg
cmp
or
imul
fisubl
fbstp
cmp
or
adc
jge
xor
jnp
cmp
add
or
mov
int3
or
push
xor
popf
fstpl
sub
mov
dec
add
or
sub
adc
or
push
mov
mov
or
adc
mov
xchg
lock
outsb
adc
ret
mov
push
cmp
sbb
push
xchg
sbb
xchg
sub
sbb
out
lahf
scas
cmp
adcl
aad
test
adc
add
xor
mov
cmc
mov
inc
pop
inc
push
push
lahf
add
pop
test
mov
sbb
je
into
sti
out
dec
je
push
adc
or
adc
rorb
call
mov
push
adc
js
mov
sbb
mov
rcll
data16
ror
mov
in
push
push
mov
push
sti
xorb
int3
fiadds
mov
mov
and
and
pushf
add
andl
sbb
shl
test
mov
or
mov
jl
insl
stos
jae
jns
mov
sarb
ss
addr16
pop
sbb
and
scas
aad
jae
add
push
fidivrs
mov
add
sbb
or
or
sub
movzbl
cmp
adc
popa
add
mov
data16
je
out
fldl
pushl
movlps
fcomps
sar
inc
pop
xlat
cld
loope
adc
or
cmpb
jne
sbb
push
and
addb
cmp
pop
mov
pop
ds
idivl
test
das
adcl
out
imul
sbb
cmp
cmc
jl
test
pop
adc
lahf
and
pop
sbb
push
sbb
adc
aaa
outsl
cmp
mov
and
sub
in
insl
mov
xchg
ret
pop
adc
add
xorb
decb
mov
pop
aas
pop
mov
in
cld
cmp
jle
or
dec
jle
xchg
fimuls
movsl
cmp
xchg
xchg
addl
aam
or
daa
xchg
and
into
or
or
mov
je
dec
mov
icebp
into
scas
adc
movsb
or
add
enter
idivl
or
or
inc
add
rol
bound
roll
jo
mov
mov
in
sub
adc
adc
bound
and
cmp
xorl
xor
jno
jne
inc
jb
adc
push
push
mov
mov
xor
dec
sub
es
jl
push
inc
subl
or
xchg
xor
rolb
xchg
xchg
cmpsl
stc
sub
jmp
mov
js
dec
jl
dec
in
or
mov
mov
lock
data16
jmp
movsl
mov
test
sarb
call
push
push
pop
inc
lods
jo
fbstp
add
shlb
mov
adc
sbb
outsl
lea
insl
cmpsl
flds
add
in
jl
xor
in
jne
push
mov
mov
pop
repnz
je
or
push
mov
inc
and
add
mov
xor
loopne
jno
lret
sub
inc
mov
pop
pop
add
jne
xchg
aas
icebp
mov
aas
fabs
ret
push
xor
mov
mul
aam
jge
decl
inc
fs
je
mov
and
loopne
add
add
movl
push
cwtl
mov
pop
sub
jp
dec
mov
sbb
xchg
sbb
xchg
xor
mov
xchg
in
push
and
push
mov
and
add
add
fldt
pop
roll
xor
pop
je
in
incl
pop
push
movb
sbb
jbe
xor
cmovp
push
inc
inc
movsb
lret
sti
jmp
aad
sti
dec
test
mov
scas
sbb
cmp
push
and
jmp
les
ret
je
push
sbb
mov
sbb
mov
and
repnz
in
cwtl
or
inc
mov
mov
xchg
mov
dec
adc
imul
rcrl
nop
add
or
lock
push
xor
add
nop
lret
and
mov
lret
leave
mov
or
jp
inc
pop
fcoml
sbb
in
adc
jne
das
loopne
push
mov
in
mov
test
hlt
adc
sub
mov
sbb
mull
aas
stc
dec
out
dec
inc
fisubl
dec
rcrl
cmp
xlat
xchg
dec
repz
pop
mov
lock
push
mov
add
nop
adc
fs
movsb
adc
movsb
sahf
jecxz
inc
call
shl
xor
rol
aam
xchg
and
cmp
pushf
pushf
cmp
mov
pop
mov
xor
xchg
mov
xchg
xchg
and
cmp
xchg
xchg
xchg
out
lret
int3
sbb
inc
sub
cltd
int3
or
sbb
xchg
xchg
sbb
enter
leave
jae
rol
rol
inc
cs
cmp
xchg
mov
les
sbb
in
or
push
test
dec
roll
jmp
out
pop
leave
enter
and
fstl
pop
adc
mov
ljmp
sti
lods
cwtl
jl
push
mov
push
shlb
sbb
and
and
xchg
fisubrs
aaa
test
cld
or
xchg
ret
add
mov
jb
adc
sti
out
push
call
add
ret
cs
push
xor
je
push
jne
and
inc
push
inc
adc
inc
xchg
push
add
xor
adc
loopne
add
repnz
or
jle
mov
es
mov
je
sti
sub
lods
dec
cmp
sbb
add
inc
fwait
adc
out
jle
mov
pop
movsb
and
push
aaa
push
jp
ret
adc
dec
adc
and
orl
mov
fdivr
out
pop
test
push
jns
lea
mov
rcrl
pop
test
imul
push
xor
mov
dec
mov
adc
xor
or
je
cmp
add
inc
mov
lcall
xor
scas
jmp
orl
cmpb
ss
add
pop
push
jmp
push
xor
push
leave
xor
leave
mov
and
jecxz
arpl
or
or
adc
or
dec
or
dec
xorl
inc
imul
scas
cmp
mov
and
jl
mov
mov
add
add
btc
or
test
lret
adcl
pusha
fistps
jp
nop
aaa
adc
test
adc
inc
adc
leave
cmpb
or
cwtl
jno
sar
aad
imul
mov
leave
into
adc
fdivl
mov
cmp
inc
adc
repz
cmc
dec
push
stos
add
adc
lods
inc
pop
push
pop
xor
enter
iret
inc
inc
inc
sbb
test
mov
neg
xchg
jne
pop
adcl
jno
test
add
in
push
ds
add
xchg
popa
sbb
cmp
pop
cmp
cltd
pop
clc
popf
cmp
das
push
and
cmpb
add
push
sahf
les
rolb
and
nopl
xchg
adc
push
cmp
maskmovq
testl
pop
popf
sub
clc
add
xchg
mov
xor
rclb
cmp
or
loopne
test
insb
or
repnz
adc
subb
jo
add
adc
jg
add
leave
ret
or
rolb
sti
add
lods
mov
mov
aaa
cmp
in
xor
and
fstpt
sbb
out
test
hlt
je
push
cmp
add
push
pop
ljmp
xor
pusha
pusha
imul
hlt
mov
pusha
cld
clc
adc
and
shrl
pop
mov
pop
ljmp
imul
sub
mov
mov
and
xor
inc
call
and
insb
jno
cmp
and
ret
and
frstor
pop
fadds
rorb
into
add
dec
push
mov
cmpsl
and
xchg
movsb
std
daa
cmp
negb
aas
incb
push
or
xchg
mov
loope
and
rol
push
xchg
test
test
adc
lds
mov
cmp
scas
push
push
fisubrs
and
or
loopne
repnz
sub
inc
imul
cwtl
xor
mov
push
lret
stos
push
cmp
or
xor
mov
add
pushf
add
add
sbbb
xor
dec
jno
push
daa
or
cmp
pop
insb
adc
push
jo
mov
cmpsl
out
stc
test
test
iret
stos
out
push
fsubs
jne
and
sub
leave
pop
mov
inc
dec
lcall
pop
jecxz
sub
lret
dec
adc
fsubrs
xchg
cmp
outsl
xchg
sub
add
jle
add
rclb
in
push
jo
dec
cmp
ss
dec
push
push
mov
sti
lahf
mov
mov
mov
inc
pop
sbb
cmp
add
mov
push
loopne
sahf
inc
inc
add
cmp
into
xchg
pusha
icebp
jmp
pop
and
push
sub
sub
cvttps2pi
mov
push
enter
and
mov
idivl
das
daa
pop
mov
insb
pop
xchg
add
mov
xor
xor
or
mov
testb
and
cmp
xchg
dec
push
mov
cmp
push
movsb
shll
inc
xor
sub
cmp
inc
lds
es
and
mov
mulb
add
dec
xchg
xor
pop
addr16
xor
add
cmp
inc
jne
ret
pop
pop
rcll
adc
pusha
add
cmp
jne
and
cmp
and
mov
mov
sbb
or
daa
and
lret
adc
js
stos
clc
mov
int3
sbb
xchg
inc
inc
xchg
std
ds
mov
adc
sbb
mov
sub
push
adc
xchg
jno
loop,pn
xchg
les
and
mov
sbb
fs
scas
outsb
repz
int3
mov
loop
or
sub
inc
in
and
add
decl
movsb
push
add
push
je
nop
push
ss
out
adc
pop
mov
orb
or
push
je
pop
mov
cwtl
fisubrs
jp
adc
aad
je
mov
dec
rcrb
inc
add
lock
sub
push
mov
add
jne
push
sub
call
movsl
push
sub
lret
cmp
push
xorb
in
jo
pop
xor
in
das
cmp
clc
sbb
xor
or
jns
popa
lock
loopne
push
and
jmp
mov
stos
popa
rorl
lock
mov
orl
sbb
push
outsb
mov
js
scas
push
jne
add
inc
push
mov
fdivp
test
out
jge
orb
fadds
push
sub
xor
or
mov
cmp
sub
push
lods
mov
pop
or
ret
cmpb
mov
push
scas
jo
out
add
mov
into
daa
sbb
add
sub
mov
les
ds
dec
mov
jle
xchg
adcb
out
or
sub
push
sbb
pop
into
add
adc
pop
icebp
clc
push
mov
out
jne
or
je
sub
das
add
xor
cmp
loopne
jg
pop
subb
fcoml
adc
push
adc
sbbb
inc
cs
or
jo
pop
pop
test
sub
jo
mov
lods
mov
aad
into
fsubrp
out
jne
or
test
cmp
mov
call
pop
and
call
rolb
sub
fadds
je
jns
pop
shrb
sarb
inc
in
sbb
mov
pop
inc
fsub
push
out
inc
out
test
adc
je
push
add
or
mov
mov
or
js
lock
xor
jno
push
shrl
fwait
push
inc
outsb
dec
vrcpps
clc
jg
mov
scas
fdivl
or
cmpsl
aas
repnz
lods
inc
int3
add
mov
or
jle
andb
ficoml
fdivr
or
mov
sub
ds
in
rorl
call
movzwl
jnp
or
lock
jnp
inc
stc
dec
dec
je
sub
jmp
jle
cld
cmpl
je
inc
push
in
cmc
jbe
jmp
adc
add
adc
int3
mov
loope
test
mov
xlat
pop
xchg
subb
orb
xor
xchg
sbb
aam
xor
fldl
inc
imul
ja
push
fcmovb
fnsave
jge
mov
mov
xor
inc
mov
sarl
jl
lods
push
push
cmp
sbbb
push
aaa
arpl
into
push
pavgw
jle
in
icebp
jno
fwait
sbb
push
or
lock
loope
push
mov
orb
movl
cmp
loopne
fisttps
cmpsl
or
in
add
sarb
add
inc
sbb
sbb
imul
outsb
fadd
sbb
sbb
xchg
add
jmp
mov
scas
pop
lea
ds
jl
add
shlb
std
cmpl
pop
shlb
or
adc
xchg
shrb
into
in
mov
xchg
in
cld
xor
cltd
mov
xor
jns
loopne
pop
sahf
xchg
test
or
jno
xlat
insl
imul
sbb
jns
cld
fisttps
mov
test
add
mov
xor
dec
add
mulb
or
inc
cmp
mov
popa
xor
add
es
cmp
inc
movsb
repnz
nop
es
dec
call
push
cmp
or
fdivrl
xor
test
in
loopne
dec
js
lods
pop
cld
loopne
sbb
add
pop
jmp
dec
fcomps
call
dec
js
loope
aam
fmuls
loopne
aad
push
inc
arpl
test
sub
push
shrb
loopne
inc
jle
xchg
pop
mov
loopne
pop
pop
adc
imul
in
pushf
jo
xchg
or
sbb
stc
and
scas
xor
movsl
push
imul
in
sbb
aaa
and
add
js
movsl
pusha
sbb
loop
inc
je
sahf
pop
cmp
xchg
sbb
fsubr
icebp
shrl
jb
push
push
in
or
mov
rcll
add
insl
xor
fs
inc
shr
add
inc
fimuls
jg
jmp
call
push
inc
inc
mov
xorb
das
mov
cwtl
out
mov
iret
test
subb
cmpsb
loopne
jge
stc
test
xor
or
je
cmp
sarl
or
adc
in
xorb
xchg
mov
js
sub
adc
mov
pushf
xchg
xor
shlb
mov
sub
sub
jbe
rcll
enter
rclb
jns
jns
sbb
mov
adc
lods
loopne
xchg
xor
mov
std
fbstp
mov
pushl
call
in
fcom
mov
lea
ret
shr
movzbl
push
ffreep
cmpsb
je
or
ret
push
ret
jo
in
dec
stc
mov
loope
scas
add
je
cmpsl
jle
push
popf
cmp
jbe
dec
arpl
sbb
mov
loop
xchg
loopne
add
push
gs
pop
fsubrs
insl
cmp
mov
scas
xor
xor
xor
fidivrs
pop
or
mov
push
mov
test
xor
push
jmp
pop
add
push
add
inc
push
push
fwait
jmp
cmp
jg
mov
mov
loope
jecxz
jmp
jno
enter
xorl
pop
lcall
sbb
pop
adc
mov
mov
aas
test
mov
or
push
lea
xor
inc
jb
aaa
outsb
sub
in
sub
push
subl
sbb
push
shlb
and
pop
jg
mov
ret
push
pop
jmp
mov
push
inc
ret
fdivrl
add
ss
arpl
and
cmp
je
cmp
loop
add
imul
cmp
inc
adc
test
push
adc
lock
xor
inc
cmp
jae
add
inc
hlt
lea
ja
pop
dec
cmc
add
je
call
push
mov
fildl
js
je
add
fiaddl
insb
sub
fcomps
cmpsb
lock
fnsave
std
or
scas
pop
hlt
add
jl
in
and
lcall
push
lods
ljmp
pop
cmp
jecxz
xor
inc
adc
scas
popf
into
popa
nop
add
mov
rcrl
pop
xor
adc
cli
lea
ljmp
push
push
cli
or
xlat
leave
into
sub
test
xor
out
xchg
add
leave
add
xor
mov
mov
mov
mov
push
cmpsl
mov
dec
lahf
mov
aad
inc
js
jb
mov
fldenv
mov
xchg
cltd
mulb
leave
js
inc
dec
hlt
jg
hlt
or
clc
or
push
sub
pop
pop
push
enter
lock
mov
jb
add
inc
ss
mov
cbtw
scas
fdivrs
jmp
push
push
pop
add
fdivs
mov
cli
adc
sub
sub
jno
fdivp
add
adc
hlt
jl
repz
push
sub
push
lret
xlat
and
and
xor
ret
or
bound
mov
cwtl
fnstenv
lcall
cmp
push
xchg
fisttpl
adc
mov
add
xor
jne
jnp
xlat
jns
unpcklps
adc
push
pop
push
mov
push
jbe
scas
inc
je
aaa
mov
ret
je
mov
fdivrs
mov
jp
mov
xorb
dec
mov
pusha
cmp
push
dec
orb
into
lret
out
shr
mov
pop
pop
cmp
pushf
js
or
movb
jne
add
push
test
lcall
call
sbb
adc
jae
add
adc
adc
testb
mov
fadd
je
push
and
xor
or
lods
xchg
loopne
nop
rolb
movsl
xlat
lret
jae
jb
scas
lea
and
fcomps
sbb
gs
sub
jmp
icebp
jb
mov
mov
fs
jne
cmp
je
in
push
mov
inc
cmp
jmp
push
push
push
and
sub
inc
push
sub
lea
je
pop
adc
mov
sbb
xor
out
std
and
shlb
push
ret
and
sbb
inc
test
fisubl
adc
bound
pop
movsl
cmp
movsl
add
testb
pop
xchg
ljmp
inc
push
adc
inc
sbb
jg
jo
bswap
rcll
sbb
or
sbbb
push
adc
mov
into
add
inc
adc
inc
cmp
rcll
push
cmp
jle
jmp
icebp
test
loopne
jo
in
jmp
test
and
xchg
lock
fmull
cwtl
pushw
push
mov
fmull
jno
pusha
adc
mov
mov
sar
mov
imul
mov
push
movsb
sub
dec
out
out
pushl
dec
push
lock
test
push
roll
jne
es
add
sbb
push
push
push
clc
push
ret
nop
addl
inc
or
or
and
loopne
xchg
adc
inc
cmp
shlb
hlt
sub
cli
jge
outsl
fnstsw
or
sti
inc
adc
jbe
enter
lock
or
add
insb
cld
cmp
lea
jbe
jbe
mov
int3
push
push
test
push
or
sbb
inc
jno
add
push
rolb
mov
movl
js
fwait
movl
xchg
add
jmp
out
sub
pushf
sbb
push
sub
fimuls
cmp
jae
sub
xor
pop
cmp
dec
add
ret
xlat
and
xor
add
push
dec
mov
cmp
dec
or
sbb
fdivs
sbb
push
fdivrs
cmp
cmpsb
sbb
push
cmp
andl
shll
testb
imul
lods
xchg
mov
or
sub
jb
outsl
rcll
clc
sub
incl
pusha
ret
out
test
push
push
push
lock
pop
fldt
inc
inc
dec
inc
pushl
nop
jecxz
add
imul
sbbb
dec
test
dec
mov
stos
loop
or
cmp
xchg
cmp
nop
cmp
xor
adcl
mov
xchg
jno
add
call
lret
cmpsl
jns
pushf
xchg
fnstcw
push
pop
jno
mov
add
adcl
adc
movsb
imul
adc
or
enter
sbb
push
adc
push
mov
xchg
push
addr16
pop
mov
rcrl
mov
in
xor
or
inc
and
pusha
rolb
or
inc
jb
je
and
inc
push
je
adc
xchg
mov
sarl
dec
xchg
cmp
and
hlt
push
aam
mov
inc
mov
into
aam
dec
push
push
gs
hlt
sub
pop
sub
dec
jne
pop
mov
or
out
mov
and
mov
pop
dec
mov
and
sarb
push
adc
lods
imul
adc
add
pop
popa
inc
mov
xchg
loope
lret
cmp
push
pusha
mov
lock
int
cs
stos
lock
cmc
testb
xchg
mov
and
and
clc
inc
mov
add
in
or
sbb
fs
addr16
xor
push
lea
mov
add
or
mov
add
cltd
je
scas
adc
sbb
pop
sub
mov
iret
sbb
cltd
pusha
dec
jb
or
or
jns
add
pop
dec
fistps
adc
dec
cmp
lea
lods
mov
leave
cmp
sbb
or
movl
sub
and
and
cmp
sbb
inc
inc
cs
and
push
add
push
popl
push
movsl
xor
outsb
imul
imul
jle
cmp
mov
jg
rclb
sbbb
imul
stc
adc
cmp
popf
int
je
cmpl
cmp
push
mov
cmpsb
dec
in
shrl
pop
negl
add
push
adc
sarb
roll
jle
push
pusha
adc
sbb
clc
adc
push
pop
mov
jbe
subb
fdivrl
arpl
pop
stos
push
std
adc
test
adc
jmp
mov
pop
jl
sahf
nop
lret
bound
clc
mov
push
pop
dec
je
adc
in
jge
adc
es
test
ss
pop
enter
dec
mov
adc
mov
or
mov
mov
mov
or
leave
jmp
inc
orb
jecxz
jne
decl
add
ror
int3
push
add
push
mov
xor
outsb
cs
push
sbb
ljmp
add
push
movsb
addb
inc
xchg
pushf
fnstsw
sub
push
mov
sahf
jg
mov
mov
mov
add
loop
loopne
push
aaa
xchg
jl
mov
xor
push
push
sub
dec
lret
idiv
jo
js
sub
enter
dec
adc
pop
sub
mov
rorb
sbb
fucomi
jp
cmp
je
cmp
pop
lahf
jmp
shlb
leave
adc
cli
jge
lahf
mov
cmpsb
sbb
fstpl
imul
jmp
sbb
and
push
cmp
pop
cmp
sbb
je
arpl
or
ret
push
icebp
sbb
pop
bound
jnp
into
pop
push
aaa
push
inc
push
push
jo
repz
repz
adc
iret
pushf
cmpsl
stos
push
out
inc
sbb
mov
mov
add
pushw
and
clc
add
fldcw
pusha
lea
xor
lahf
inc
adc
sub
mov
setg
or
dec
movb
add
jae
push
or
xchg
xchg
pop
icebp
sub
movl
mov
mov
mov
pop
push
lea
jecxz
loop
pop
push
push
push
push
add
push
lea
jge
dec
cmp
xchg
ja
cmpsb
add
dec
mov
inc
test
cltd
lahf
enter
mov
push
push
lea
lea
movl
and
xor
movsb
xlat
sub
ja
adc
cmp
imul
insb
sbb
inc
xchg
push
mov
add
mov
jae
mov
aam
xor
mov
mov
and
inc
xor
add
stos
jne
bound
xchg
xchg
aas
adc
push
push
loopne
and
push
jecxz
loopne
mov
dec
les
loope
pop
or
xchg
xchg
call
cmpl
shrl
and
pop
xchg
popf
bound
pop
jo
popf
mov
fidivl
cwtl
or
aas
lds
outsl
adc
out
add
adc
or
push
in
sbb
mov
inc
inc
push
sti
adc
lcall
cld
fmuls
out
cmp
scas
cltd
mov
mov
in
inc
mov
shl
call
je
jno
add
cmp
sbbl
jge
xor
cld
push
mov
rolb
cmp
jns
jg
push
push
push
cmp
push
mov
mov
dec
cmp
jb
pop
rolb
mov
lea
ret
push
xor
adc
mov
jne
push
xchg
and
popa
rclb
sub
lock
pop
shlb
sub
lds
aam
das
in
push
or
add
push
jne
jno
lahf
ror
push
loope
mov
fcoml
loop
dec
fildl
cmp
loop
mov
jo
movsl
inc
add
mov
leave
fcompl
outsb
dec
ret
fdivr
ret
test
rorb
adc
data16
xor
adc
ja
enter
jne
push
sub
xor
or
js
mov
std
pop
shlb
or
je
lea
push
loopne
add
dec
mov
into
mov
mov
loope
or
push
sbb
cmp
jne
ljmp
adc
xlat
push
or
adc
lcall
or
rol
cmpsb
jns
or
sub
les
lock
ficomps
dec
lock
push
adc
pop
mov
dec
lea
dec
push
push
mov
push
cld
and
jge
fimuls
mov
cmp
in
dec
jmp
sub
pop
push
sub
in
fstpt
in
jmp
mov
add
mov
inc
adc
mov
cmp
xor
xor
sub
shlb
mov
popf
mov
and
lock
xor
out
fcomps
in
dec
mov
mov
into
mov
cmp
dec
fildl
testb
ficomps
jp
inc
out
adc
loop
pop
repnz
outsl
lcall
push
dec
dec
pop
divl
jl
adcb
push
negb
inc
push
scas
mov
mov
pushf
lock
cmpsb
push
fimull
leave
and
push
push
inc
pop
mov
sub
fbstp
cmp
mov
enter
cmp
ljmp
mov
adc
mov
aaa
add
je
push
mov
or
aaa
and
es
jecxz
testb
inc
mov
pop
jo,pt
outsb
mov
jnp
cmp
sbb
ljmp
pop
ret
loopne
mov
mov
adc
adc
ja
push
jo
sub
subl
je
mov
fadds
xchg
cwtl
popf
cld
adc
rcrl
dec
lcall
pop
les
bound
pop
xor
and
int3
push
inc
clc
pop
loopne
xor
cmp
je
cmp
mov
pushf
in
sti
sbb
repz
jo
jno
and
aad
adcb
mov
sbb
test
aam
stos
push
push
xor
sbb
sbb
pop
incl
jne
movb
jmp
cmp
jne
mov
adc
leave
push
loop
ret
cwtl
enter
jle
xor
adcb
repnz
mov
jp
cmp
mov
xchg
cmpb
hlt
sbb
mov
lock
pop
notl
and
test
cltd
jne
or
or
popf
sub
mov
mov
push
dec
or
adcb
bound
pop
fsubl
sub
inc
mov
push
adc
fcoml
mov
nop
pop
cmp
iret
push
adc
enter
lods
add
bound
lds
dec
or
test
ljmp
nop
add
xchg
scas
mov
mov
add
je
cmpsb
and
mov
cmp
add
dec
and
push
lea
and
mov
cmpb
jg
add
pop
push
call
push
and
push
push
lret
into
shr
mov
rcll
enter
xor
lea
and
jge
mov
xor
into
int
xor
clc
test
cmpb
xor
movsl
adc
adc
xlat
jg
inc
pusha
fmull
pop
and
jno
out
push
add
mov
push
push
aaa
movsl
adc
outsb
mov
pop
stos
sbb
out
mov
cli
loop
xor
es
ja
add
mov
mov
jno
insb
inc
cmp
xor
pop
into
popa
in
jne
icebp
in
push
shll
mov
adc
mov
stos
jo
adc
fmuls
sub
cli
repz
jo
dec
or
andb
cmc
jmp
jb
rclb
mov
adc
test
rorl
jbe
jo
xchg
xlat
push
adc
lea
aas
stc
icebp
cmpb
xor
je
push
pop
cmp
mov
sbb
cmp
jmp
jne
cs
sub
push
fnstsw
add
jmp
adc
sbb
push
iret
enter
insb
repz
mov
andl
push
fcoms
sbb
fidivrl
push
cli
or
push
pop
jo
popa
icebp
push
sub
push
or
push
in
or
jmp
fs
popa
push
sbb
lods
push
push
cltd
sub
push
jecxz
je
push
fbld
jl
xlat
sbb
fadd
orl
addl
pop
fadds
xor
mov
xchg
frstor
clc
mov
push
dec
push
ffree
pop
add
add
mov
cltd
mov
das
inc
and
lea
push
decl
or
adc
sbb
or
mov
jle
adc
jge
mov
test
jge
idiv
push
mov
mov
mov
jbe
dec
ret
xor
idiv
cs
sti
out
arpl
add
jg
mov
es
lods
push
mov
insl
push
out
jne
int
out
scas
mov
jge
pop
jmp
notb
jge
add
inc
cmp
outsb
sub
in
or
out
shlb
aas
outsb
fstpl
push
pop
insb
xor
cmpb
mov
sub
xor
dec
jg
push
sbb
mov
push
mov
jp
xor
movsl
fisttps
mov
daa
pusha
js
imull
sbb
dec
fs
or
xchg
dec
clc
sub
sub
mov
test
mov
stos
int
pop
lahf
xor
jnp
std
sbb
dec
lea
iret
sbb
xchg
mov
jmp
sub
cmp
or
or
fisttps
insb
mov
hlt
fildl
mov
hlt
mov
jns
faddl
call
std
sub
xor
mov
fdivrp
mov
sub
mov
clc
dec
ja
lea
test
mov
lahf
sub
pushf
cmp
popf
xchg
push
addl
lods
mov
insl
fildl
ret
and
clc
fidivl
jmp
addb
cli
sbb
jae
scas
push
pop
mov
pop
jne
lock
movb
push
adc
jo
cmpsl
outsb
mov
and
and
lcall
rorl
push
aad
ljmp
adc
pop
pop
cmc
clc
lea
pusha
fsubs
cmpsl
je
addr16
push
fstl
push
gs
bound
lcall
stos
scas
fs
test
jmp
out
ljmp
adc
push
pop
pop
into
pop
leave
sub
mov
pop
or
pusha
stos
sub
jnp
mov
add
imul
in
add
test
ret
xor
mov
sbb
xor
fs
sbb
sbb
loope
pop
iret
pusha
sbb
jns
sbb
mov
mov
inc
mov
jo
jne
sti
mov
push
inc
push
rol
loope
adc
push
in
push
mov
leave
pop
xor
pushf
jo
push
movsb
movsl
cmp
jo
push
mov
ret
std
sub
sbb
inc
mov
push
shlb
lea
sbb
fwait
dec
xchg
dec
sarl
or
or
add
orb
or
inc
adc
pop
and
dec
inc
rcr
aad
sub
fs
andl
add
xor
subl
dec
shrl
test
cli
sbb
pop
adc
sbb
cmp
cltd
in
push
sbb
cmc
in
mov
sub
push
adc
fs
jbe
int3
pop
push
pop
in
out
pop
jbe
sbb
movnti
lds
dec
and
mov
cli
and
movsb
mov
cmp
in
xchg
sbb
das
sbb
mov
pop
mov
and
mov
xor
xchg
or
adc
inc
mov
xchg
aas
jg
lock
dec
push
add
push
lock
lcall
clc
setb
test
ds
or
mov
sub
cmp
lcall
xor
dec
adc
data16
pop
or
pusha
pop
lock
aaa
addb
sub
or
push
fstps
negl
push
fldl
gs
cltd
pop
popf
push
add
xor
dec
mov
jecxz
les
xor
mov
sbb
mov
sub
mov
xchg
dec
scas
sbb
mov
lret
add
shrl
inc
adc
in
xlat
das
push
mov
inc
scas
pop
jb
pop
fwait
pop
add
popf
or
push
arpl
push
jo
pop
pop
sbb
pop
bound
mov
out
push
lock
pusha
sbb
bound
inc
add
pusha
out
sub
dec
add
jmp
test
clc
push
or
mov
jl
pop
adc
cld
adc
pop
push
xchg
add
cmp
clc
popa
sahf
dec
and
pop
lds
mov
adc
leave
jg
sbbl
dec
add
sbb
xchg
xchg
adc
mov
jo
add
jmp
xchg
hlt
js
mov
dec
std
int3
jnp
jnp
js
add
enter
fsubrs
sbb
or
and
cs
imul
mov
xor
in
add
das
push
add
out
mov
mov
mov
dec
pop
xchg
cmp
push
in
iret
and
or
dec
lcall
pushl
xchg
jb
insb
aam
pop
inc
dec
or
aam
inc
jb
or
aaa
pushl
dec
mov
add
jo
les
js
mov
popf
sbb
mov
sbb
xor
jmp
mov
add
in
lds
xor
mov
mov
fdivrl
iret
mov
add
addr16
ja
ficoml
and
push
pop
push
imul
jecxz
daa
ljmp
or
scas
insl
push
or
mov
faddl
lret
shlb
cmp
testb
push
push
jge
inc
repnz
outsl
push
hlt
jnp
adcb
pop
cmp
fimull
push
or
push
mov
add
pop
push
cld
dec
test
enter
mov
mov
cmpsl
inc
push
sbb
pop
mov
add
popf
movsb
aad
popf
xchg
lock
and
sti
jbe
mov
adc
adc
sarb
popl
xor
adc
inc
sbb
mov
dec
push
xchg
pop
pushl
cmpsl
loope
sbb
mov
mov
andl
dec
cmp
mov
sbb
ret
je
icebp
mov
mov
neg
shl
inc
or
loop
dec
mov
jmp
dec
mov
sub
and
mov
mov
jge
add
push
add
pusha
inc
xor
shlb
xchg
sub
mov
ljmp
jle
fmulp
js
cmp
jge
mov
mov
mov
cmp
addb
int
pop
or
cmp
jle
sahf
in
sub
pushl
inc
mov
push
pop
push
dec
cli
or
fsubr
dec
repz
sbb
popf
jns
fsubrs
call
mov
test
mov
andl
sbb
xor
lahf
add
mov
cmp
in
mov
clc
mov
jo
sub
inc
sete
adc
insl
add
sbb
loope
and
rolb
adcl
or
stos
push
or
fstps
jnp
mov
testb
mov
mov
jge
add
rclb
enter
sub
or
les
ret
iret
rolb
xchg
adc
shl
dec
add
sbb
fcompl
add
int3
pop
loop
inc
or
push
sbb
das
sbb
pop
cmp
jmp
push
dec
lock
add
jmp
ret
or
push
push
push
push
mov
mov
scas
pusha
or
adc
mov
iret
call
cld
dec
test
jns
fcoms
mov
std
insl
xchg
pop
sahf
fadd
or
dec
andl
into
sub
daa
push
xchg
push
mov
sub
or
int3
jg
roll
stc
inc
shll
pushf
inc
inc
push
fcoms
in
popf
imull
push
jne
hlt
nop
out
push
mov
pop
pop
mov
adc
clc
mov
pop
imul
mov
xchg
loope
jo
or
or
in
repz
in
repz
sahf
mov
ja
fsubs
mov
pop
or
pop
xor
pop
arpl
test
stos
and
in
adc
xchg
push
add
lock
sbb
in
enter
or
roll
jge
dec
js
sahf
adc
test
mov
loope
cmp
out
jmp
pop
dec
or
ret
sbb
popf
je
jb
xchg
and
xor
or
aaa
push
xchg
cmp
push
je
inc
outsb
dec
dec
mov
pop
popf
mov
clc
sub
insl
or
add
and
mov
rclb
add
inc
mov
test
clc
cmp
jp
dec
or
jle
adc
jle
adc
mov
clc
lock
and
add
clc
mov
jmp
outsb
xlat
lods
xchg
aaa
hlt
mov
out
mov
xchg
sub
add
into
push
push
add
push
outsl
or
and
or
in
out
lea
cmp
adc
add
in
not
push
inc
dec
xchg
mov
adc
test
inc
in
cli
xor
js
das
sub
jg
mov
cwtl
add
sbb
fdivl
mov
mov
aam
inc
cli
popa
shl
sub
mov
popa
loopne
shlb
mov
mov
xor
mov
sbb
pop
das
pop
sub
js
mov
adc
addps
push
xor
xor
mov
fs
jg
jbe
movzwl
sbb
xchg
adcl
je
cmp
lcall
lds
in
push
push
adc
hlt
mov
sub
mov
pop
stos
xchg
sbb
mov
adc
add
mov
dec
push
xchg
popa
xor
nop
add
flds
push
fisttps
in
addl
adc
nop
push
fs
push
loop
fimuls
dec
sub
pop
rcrb
mov
add
inc
inc
int
xchg
adc
pop
mov
push
retw
add
push
popf
lea
cld
mov
jne
xchg
xor
push
sub
shlb
popl
ljmp
cltd
mov
mov
push
xor
inc
arpl
and
sub
sub
sbb
lock
lea
andl
mov
jo
add
loopne
daa
shrb
rolb
push
push
mov
jno
movl
mov
inc
stc
xchg
dec
sub
adc
pop
and
sub
mov
hlt
push
xchg
arpl
dec
xor
data16
mov
mov
loopne,pn
cmpsb
mov
rolb
xchg
jp
or
pop
fbld
leave
or
iret
rclb
loope
cmp
rorl
test
add
lcall
fadd
inc
add
push
push
or
pop
push
sahf
int3
jmp
add
lock
adcb
add
jae
ss
add
jnp
shlb
test
insl
xchg
lea
mov
ljmp
inc
sbb
rcr
add
sbb
aam
inc
arpl
call
in
xchg
mov
sbb
inc
pop
jns
shll
aaa
adc
das
sub
and
sub
shrb
or
call
cmp
mov
push
adc
push
mov
lea
sbb
pop
test
lret
mov
add
or
jl,pn
jmp
lock
out
inc
loopne
push
jg
cmp
cmp
cmp
cmp
add
ljmp
fsubrl
shlb
scas
push
pop
and
xchg
or
lea
mov
push
stos
lcall
adc
inc
cwtl
movl
cmp
and
cmpsl
jge
popa
fidivrl
sbb
pop
mov
dec
pop
dec
cmp
pop
sarb
lea
insl
stc
xchg
mov
add
nop
fs
xlat
lret
add
out
scas
or
or
add
int
movsl
fmull
jns
jno
inc
sub
add
lahf
idivb
xchg
dec
sbb
fstps
push
add
rclb
xchg
cmp
sbb
mov
sbb
movl
add
sbb
sub
mov
add
mov
mov
lds
jmp
test
outsb
mov
iret
out
mov
lahf
add
lret
test
test
fcoml
cwtl
lret
loope
push
popl
push
or
dec
lea
xchg
inc
adc
xor
ffree
lock
aam
adc
pop
mov
ficoml
xchg
loopne
das
loope
sahf
std
xchg
movsl
dec
ret
dec
ljmp
cmp
rorl
add
icebp
aaa
lea
cs
pop
mov
jmp
dec
mov
lea
dec
sub
mov
or
adc
sbb
nop
or
out
add
mov
mov
sbb
add
ret
mov
rclb
mov
inc
int3
or
mov
filds
pusha
or
cmp
and
or
or
xor
adc
test
in
and
aas
mov
push
jmp
mov
jp
int
push
std
out
ret
aas
cmpl
clc
push
fwait
sbb
movsb
mov
ret
into
dec
and
nop
or
mov
add
scas
jne
add
sub
pop
js
bound
push
lds
and
negl
xor
push
mov
ljmp
add
and
push
or
mov
dec
sbb
sti
dec
sub
and
nop
in
cmp
pusha
pop
pop
notb
xchg
aam
dec
icebp
xchg
push
cwtl
cmpsl
mov
cmp
sub
mov
cs
or
pop
subb
cli
push
hlt
lea
in
fucomi
lea
loope
mov
ds
and
cmp
mov
push
sahf
push
mov
pop
js
xchg
pop
rcrb
adc
xchg
inc
nop
aas
mov
mov
movl
inc
dec
mov
add
xor
and
jecxz
dec
or
out
cltd
cmp
movsb
push
inc
or
push
add
add
mov
push
adc
mov
rcll
xchg
shr
dec
or
xor
fs
cwtl
or
cltd
nop
or
jg
adcl
inc
aas
add
sub
adc
jl
test
push
loopne
test
mov
inc
sbb
mov
cmp
or
fdivrl
jle
xor
add
bound
adc
sbb
in
movzwl
lret
mov
jmp
sti
aaa
dec
mov
xchg
int3
xchg
jbe
xor
cmp
sub
out
add
rcrl
pop
lret
push
addb
inc
push
dec
sahf
xchg
rorl
andl
fsts
fwait
scas
push
inc
mov
mov
adc
ret
sti
or
or
add
test
test
rcrb
testb
xchg
fs
lock
movsl
test
lock
push
add
addb
sarb
cmp
nop
iretw
enter
push
adcb
jl
popa
test
adc
xchg
and
fdivr
push
insl
movsl
jbe
loopne
mov
mov
mov
adc
hlt
cmpsl
xor
lea
fs
mov
ljmp
lea
push
mov
cmp
cltd
jo
in
and
aam
das
lcall
cli
pop
mov
mov
lock
mov
xchg
pop
lahf
loopne
pushf
out
xor
fdivr
insl
sub
xchg
xchg
mov
lock
inc
jae
ret
mov
inc
sub
and
orl
sub
push
or
push
xchg
xchg
inc
xchg
outsb
adc
clc
and
mov
add
inc
out
cmpl
dec
sub
push
popa
jo
leave
imul
lret
pop
or
and
rorb
and
test
xor
push
lret
pop
lret
xchg
xor
add
aas
mov
out
add
dec
or
push
enter
push
outsl
mov
mov
push
cs
add
xchg
scas
jo
xchg
shlb
cmpsl
or
pop
jg
sbb
lret
cmp
add
jns
push
jnp
orb
push
les
push
fbld
xor
rorb
cmp
lock
sub
loopne
lea
and
imul
and
movl
les
jl
js
fidivl
xor
dec
or
js
out
fimull
add
rolb
mov
add
adc
pop
roll
jae
les
pop
js
mov
adc
enter
or
mov
push
pop
add
mov
push
mov
adc
push
mov
jo
stos
jl
ror
sbb
in
xor
and
lods
xor
stos
xchg
push
inc
push
push
and
push
aaa
push
mov
add
xor
push
push
fwait
loopne
mov
daa
fadds
fisttpll
loopne
les
or
push
lret
sub
jne
pop
loope
xchg
shrb
stos
inc
icebp
mov
stos
loopne
jge
and
jo
sub
dec
fdivrs
mov
add
mov
aam
popl
stos
push
cmp
test
popf
mov
insl
je
enter
pop
pop
sub
xchg
inc
pop
jecxz
inc
hlt
mov
cmp
push
mov
or
or
bound
jmp
push
ljmp
hlt
push
xlat
cmp
xchg
sbb
jnp
test
sbb
inc
or
xchg
mov
sbb
xchg
xor
lds
rcrb
jno
scas
das
xchg
mov
jge
loopne
jne
push
pop
cmp
je
inc
or
fidivl
sti
mov
or
scas
or
test
mov
push
and
or
jns
jae
pop
cmp
push
test
lea
jge
jb
push
cmp
stc
and
call
jge
push
and
adc
or
es
add
mov
add
mov
es
loopne
sahf
xchg
sub
push
add
shrl
icebp
shll
mov
fsubrl
mov
pusha
adc
dec
invd
push
ret
xchg
xor
sbb
enter
xor
sub
fsts
cs
aam
sbb
outsb
push
daa
das
mov
xor
mov
add
sub
pop
rorl
xchg
ret
insl
into
int3
arpl
rorb
push
sbb
jnp
push
xchg
lds
jge
sub
mov
fdivr
cmp
or
shlb
xchg
or
rol
sbb
lcall
adc
loopne
pop
popf
call
add
das
xchg
aad
dec
call
rolb
jmp
add
pop
push
sub
sub
cmp
pop
fldl
mov
fildll
mov
sub
cmp
scas
cmp
add
cmp
in
leave
or
jmp
fs
sbb
pop
mov
ljmp
leave
les
push
mov
xor
push
sub
cld
push
add
rorl
adc
popa
les
push
push
lea
pop
and
fcomps
push
incl
inc
in
push
rorb
cmpb
out
inc
or
je
push
cwtl
lock
mov
xchg
cmp
xor
pop
or
leave
das
dec
jae
mov
fsubs
xlat
ss
movsb
xor
or
pop
or
and
jl
cmp
movsl
aam
add
popf
or
cmp
ljmp
lock
xchg
lock
inc
sub
or
bound
pop
and
jae
fisttpl
int3
jo
cmpl
aam
sub
scas
int3
pusha
pop
loope
adc
xchg
add
unpcklps
sbb
ficoml
das
push
add
aam
pop
cld
je
xchg
mov
out
fwait
push
pushw
mov
adc
icebp
mov
pop
xor
add
jne
test
xor
inc
add
dec
fcomps
je
loope
pop
pop
xchg
pusha
cmpb
pop
push
mov
mov
or
inc
inc
mov
shr
add
push
mov
loop
mov
push
roll
xor
in
mov
jno
cld
push
sub
mov
adc
jo
mov
clc
sbb
xor
mov
xchg
and
sbb
repz
sub
insb
add
pop
mov
arpl
sub
push
xor
int
add
lea
mov
inc
fisttpl
push
jbe
add
test
dec
xchg
push
ret
popa
push
push
out
add
stc
fildll
fadds
cwtl
out
outsb
mov
repnz
clc
cmpl
setp
fnstenv
add
adc
rcrl
dec
stos
into
faddp
xchg
imul
cmp
pop
push
and
movsb
clc
rorl
out
or
dec
jae
dec
push
cmp
or
into
rclb
push
outsb
or
push
add
push
notb
sbb
cmp
or
dec
in
subb
mov
int3
push
inc
push
add
icebp
scas
dec
mov
mov
sub
dec
jmp
push
add
sub
call
aam
aam
aam
gs
lock
fbld
xor
push
or
mov
sbb
mov
pop
pop
jp
enter
add
ret
movsl
dec
push
nop
pop
cs
add
ret
pop
data16
and
lock
pop
add
shlb
loop
je
cmpb
cmpsl
cmp
jmp
jnp
ja
and
dec
xorps
mov
push
add
dec
loope
clc
je
mov
clc
call
cmpl
stc
sub
lea
out
adc
push
lea
push
inc
push
add
imul
inc
lcall
insb
sbb
push
cmpsb
addr16
sbb
dec
in
fisttpl
lret
cmp
jl
cmp
dec
hlt
int3
xor
sarl
pop
sub
push
jle
in
cmp
jne
negl
sbb
push
add
xor
imul
sti
push
mov
movsl
push
out
test
scas
adc
out
inc
dec
cmp
je
sub
pushw
push
mov
into
jae
push
cmp
add
push
fstps
sti
pop
and
push
or
insl
pop
push
jns
pop
adc
fs
stc
xor
in
jnp
addr16
sub
lea
out
push
mov
shlb
or
in
out
xorl
mov
cmp
cmp
psubsb
jo
sbb
and
ss
ja
cmp
jl
mov
ficompl
cmp
push
lcall
push
mov
rcrb
mov
xchg
mov
test
cs
in
jbe
pop
clc
daa
push
add
cmp
std
or
lds
mov
or
jne
xchg
fwait
adc
mov
adc
inc
and
cmp
je
jle
jmp
sarl
jbe
push
out
mov
fbstp
jne
add
pop
jno
addb
add
ret
inc
or
pop
pushl
push
mov
mov
sbb
adc
jge
push
push
xchg
mov
into
outsl
cmp
cmp
and
ret
daa
add
cmpl
push
ss
cmpsb
dec
or
push
mov
pusha
mov
inc
cmpl
fmul
movsl
add
aad
add
mov
imul
mov
cmp
sbb
sub
sub
adc
xchg
xchg
sbb
adc
inc
sub
test
mov
lret
dec
mov
jg
inc
jnp
push
leave
push
cmp
je
xor
pop
add
mul
seto
in
neg
or
push
dec
aaa
scas
push
frstor
push
jmp
add
cmpsl
mov
push
xor
mov
lahf
push
or
movsb
inc
push
inc
or
test
out
add
out
xor
lret
add
pop
or
mov
mov
shlb
lods
fldl
jae
cmpl
loop
dec
lds
and
adc
sbb
clc
and
data16
daa
inc
add
push
or
mov
sub
dec
inc
fwait
add
pusha
ds
in
clc
test
cmp
cmp
mov
push
push
and
leave
add
adc
clc
or
in
xlat
inc
mov
mov
mov
sub
or
adc
push
je
sbbb
add
xor
push
cmp
je
lock
jne
and
sub
cmp
add
pop
xor
imul
movsb
adc
movsl
movb
inc
adc
inc
lods
xchg
faddp
jmp
ja
aas
jge
add
pop
push
test
aam
jmp
fidivs
jmp
jno
cmp
push
inc
cmp
jae
and
adcl
xor
les
inc
call
movsl
cmpl
jne
and
jl
inc
rclb
pop
int
loop
push
ss
push
inc
jmp
pop
je
mov
test
cmp
in
xor
loopne
lret
inc
add
stos
add
mov
push
lcall
push
pop
or
fdivl
mov
push
or
stos
xor
fmuls
int3
xlat
sub
mov
adc
cmp
pop
cmpl
cmp
insb
loop
and
ja
jp
xchg
cmpsb
mov
enter
roll
rorb
push
jle
add
ljmp
jns
mov
sbb
ljmp
inc
jae
je
nop
xchg
lock
ret
jae
in
and
jo
xlat
inc
adc
inc
or
mov
clc
xor
mov
or
mov
push
mov
dec
movsl
jmp
sbb
jg
sbb
adc
adc
xchg
test
jl
and
dec
sub
xor
mov
sub
fs
or
sub
lods
mov
mov
add
dec
jno
inc
cmc
mov
pusha
add
xchg
cmp
cmp
stos
add
add
push
punpcklwd
cmp
lea
push
jo
mov
jl
xlat
popa
cmp
int3
adc
mov
loopne
push
xchg
test
sti
xchg
push
push
dec
pop
cmpsl
inc
imul
jp
mov
sbb
inc
push
jl
lret
push
aam
sub
or
push
sbb
mov
stos
push
sub
adc
jle
sbb
inc
push
call
ds
adc
test
movsl
test
pop
ret
stos
xor
jbe
cs
and
scas
mov
js
sbb
jp
push
bound
mov
es
in
jb
mov
dec
aam
add
xor
js
jbe
nop
mov
neg
push
cmp
push
in
mov
ret
loop
cmp
or
out
or
out
jne
push
jge
mov
push
push
je
shrb
add
mov
int
repnz
divl
push
popf
sbb
cmpsb
add
test
test
cmpl
xor
or
out
sub
lds
loope
cli
shrb
sub
cmp
aad
out
mov
sub
fadd
mov
inc
mov
xchg
push
orb
cmp
xchg
fnstsw
pop
jnp
jno
nop
sbb
xor
sub
mov
inc
mov
or
or
rcrb
push
mov
inc
dec
lock
add
insb
xor
inc
cmp
mov
add
xchg
or
jle
outsl
arpl
pop
inc
adc
neg
cmp
pop
and
mov
es
jnp
inc
cmp
sub
orl
jmp
inc
push
or
insb
inc
inc
push
movsl
sbb
je
sbb
int3
mov
dec
js
jne
outsb
add
mov
mov
inc
loope
lahf
test
sbb
stos
inc
pop
lcall
cmp
mov
shlb
mov
dec
push
or
or
add
jne
or
fisttps
mov
push
or
xchg
xor
daa
push
je
jo
jb
and
pop
fs
lahf
cmp
sub
add
jmp
scas
pop
aaa
or
cmp
repnz
sbb
test
or
movsl
test
mov
pop
outsb
inc
js
fnstsw
sub
push
ljmp
orl
push
pop
mov
pop
xchg
mov
push
jmp
je
jp
sub
mov
dec
sbb
or
inc
pop
or
jne
xchg
sub
shrl
scas
inc
or
sbb
push
fld
data16
popf
dec
in
es
imul
mov
mov
ljmp
lock
stos
out
nop
adcl
test
sub
orl
aam
adc
jns
pop
ret
cld
lea
add
mov
lds
push
add
pop
movsl
xlat
push
inc
xchg
sub
adc
mov
sbb
dec
ret
test
add
sub
xchg
sbb
lds
nop
notl
sbb
dec
addr16
pop
adc
mov
pop
jl
lea
push
push
ja
or
ret
pop
repz
push
shr
popf
jg
or
outsl
and
or
cmp
mov
push
loopne
ss
cwtl
cmp
sbb
cld
out
cmc
sub
sub
repz
nop
xchg
nop
adc
push
in
add
xchg
lea
insb
xor
mov
loop
mov
loopnew
dec
mov
sub
dec
insb
shrl
or
adcl
lea
adcl
inc
ljmp
lock
clc
adc
fcomp
ljmp
dec
xor
and
sub
js
sub
fadds
push
cmp
aaa
cmp
jecxz
sbb
mov
jae
mov
pop
add
lods
sbb
sbb
pop
sub
icebp
aam
jg
mov
jmp
lcall
js
push
inc
jo
loopne
dec
push
dec
int3
mov
cltd
flds
stos
es
jo
repnz
popf
add
lea
push
lods
jae
cltd
adc
cmp
xchg
insl
aaa
cs
inc
xorb
mov
incb
pop
cmp
jns
jns
rolb
push
push
hlt
dec
and
inc
or
cltd
push
mov
insl
push
xchg
fnsave
sub
pop
and
mov
mov
add
loopne
test
into
rol
mov
push
sub
cmpb
push
push
pop
lcall
push
lock
jb
xorl
mov
sbb
sbb
in
outsb
sbb
stos
insb
stc
test
ljmp
lahf
aas
fdivr
faddp
nop
mov
mov
js
push
ret
fisttpl
test
pop
inc
inc
aas
add
mov
adc
add
cmp
and
xor
push
and
adc
xor
stc
mov
dec
pop
es
fmull
and
std
lods
add
shll
sbb
iret
sbb
adc
and
xor
aas
pop
jne
scas
cld
jmp
mov
sub
pop
push
cld
xchg
and
das
pushl
mov
outsl
inc
jb
repz
cmpsl
pop
add
hlt
add
popf
pop
movsl
inc
push
lret
cmpb
sbb
jno
inc
inc
pushf
inc
jno
push
pop
jb
mov
lods
and
xor
adc
mov
cmp
mov
ret
sbb
mov
pop
sub
dec
and
sarl
add
inc
ja
popa
dec
dec
lods
popa
sbb
in
adc
in
push
imul
in
test
add
shrb
ret
les
pop
aaa
lcall
je
sub
clc
js
adc
cli
outsb
and
jno
adc
sbb
cmpsl
inc
hlt
subb
sbb
jnp
leave
sub
xchg
jne
jmp
shrb
jge
push
fdivrs
and
add
push
imul
and
xchg
jo
sub
dec
push
in
pushl
lret
inc
and
add
push
jno
mov
icebp
decl
push
dec
scas
mulb
jmp
pop
sbb
ss
jmp
lret
mov
movsb
test
mov
jle
ljmp
cmp
pop
pusha
jo
inc
insb
pop
popf
cmpb
fimull
fdivr
push
xchg
add
mov
cmp
push
and
cs
inc
inc
push
mov
mov
or
adc
pop
ret
dec
add
loope
test
xchg
jecxz
sub
add
inc
mov
xchg
push
aam
pop
xor
loopne
or
or
dec
adc
or
mull
mov
or
int3
push
adc
adc
jmp
mov
dec
xchg
adc
mov
jo
mov
xchg
mov
int3
loope
mov
sbb
push
mov
jae
or
loop
out
ficompl
push
lea
jl
shrl
sbb
mov
cmp
cmp
inc
mov
mov
jns
pop
pop
push
pop
ret
rcll
mov
mov
popf
mov
out
inc
testl
test
ret
cmp
push
jmp
cmpsl
xchg
je
pop
ss
add
add
push
out
sar
xor
lahf
loop
inc
push
rcrb
popf
cli
test
push
pop
ficomps
mov
gs
ret
nop
lret
inc
fwait
cmpsb
pop
cld
stos
fcmovbe
call
push
or
lock
cmp
in
add
add
xchg
pop
cmp
mov
xor
fstp
sbb
addb
xor
mov
mov
sbb
mov
push
popa
das
lea
push
lds
sbb
cmpsb
les
add
inc
push
mov
popa
mov
dec
enter
insl
or
cltd
and
mov
push
out
mov
xchg
adcb
inc
pop
aad
test
mov
and
fidivs
loope
rcrl
mov
sbb
jno
les
test
jl
xor
add
dec
jmp
js
mov
cmpb
mov
daa
mov
or
push
fwait
out
jnp
orl
push
enter
or
bound
je
and
inc
mov
jbe
orl
cmp
or
mov
jne
push
add
inc
jge
jbe
lock
push
inc
cmp
adc
or
out
xor
int3
std
pop
and
test
pushl
add
andl
shrb
inc
dec
add
repnz
scas
push
pop
adc
icebp
add
mov
test
push
adcl
lcall
lds
adc
push
lods
inc
cmp
shrb
inc
sbb
jb
out
fwait
nop
or
push
fidivrl
fsubrs
mov
cmp
pushf
adc
jle
cmp
jae
or
push
jno
fmuls
enter
aam
out
shlb
push
cmp
jnp
mov
adc
pop
std
hlt
push
pop
dec
lcall
pop
sahf
out
add
test
ljmp
aas
dec
roll
xor
cmpsb
jge
rclb
dec
insb
push
push
push
sbb
bound
cmpl
dec
cmp
sbb
sahf
adc
or
xor
push
das
or
push
push
mov
push
je
int
xor
jp
mov
cmp
or
adc
pop
push
movsl
pop
push
adc
mov
sbb
das
pop
adc
and
incl
push
inc
push
mov
or
xor
fs
mov
cld
cmpsl
andl
ljmp
ficoml
nop
pop
sbb
and
adc
shll
inc
adc
mov
jp
mov
dec
pop
mov
mov
in
scas
imul
mov
xor
adcb
inc
sahf
call
mov
lcall
popl
orb
dec
mov
add
mov
les
pop
inc
sub
fistps
adc
imul
leave
and
mov
push
cmp
outsb
sub
push
push
shlb
inc
and
lods
mov
fs
dec
inc
aam
stos
pusha
lea
rolb
js
mov
jge
mov
add
insl
and
dec
add
inc
add
push
mov
addr16
lret
adc
fcompl
add
pop
inc
add
cmp
pusha
cmp
clc
scas
addr16
cmp
dec
in
jno
lea
lea
mov
mov
xchg
sbb
imul
mov
rclb
inc
loop
mov
test
inc
pop
rolb
aam
int3
push
pop
ljmp
cmp
mov
mov
in
cwtl
ret
cmp
loopne
xchg
je
orl
or
lods
loop
fcompl
je
pop
repz
out
lods
sub
xlat
adc
mov
scas
mov
sbb
incb
addl
rcr
jl
into
mov
leave
js
repz
cmp
sub
xor
pop
add
or
int3
inc
sbb
aaa
jp
mov
stc
popa
or
aaa
aaa
adc
xor
in
mov
adc
sub
and
adc
xchg
add
negl
sub
outsb
mov
and
lds
into
scas
sub
xor
push
mov
mov
pop
pop
fidivrl
rolb
dec
xlat
scas
sub
jecxz
clc
clc
popf
jb
adc
ja
xchg
push
pop
das
sbb
mov
xorl
jae
push
movl
stc
jo
inc
adc
dec
int3
dec
mov
in
xchg
aaa
in
or
ljmp
add
or
add
jge
pushf
mov
cwtl
add
xor
adc
scas
ja
jmp
aam
or
sbb
imull
rorl
scas
pop
pusha
and
arpl
push
and
rorb
push
dec
jne
sbb
lea
pusha
mov
pop
scas
mov
dec
xchg
shr
jo
mov
and
jmp
or
jecxz
sarl
cmpsl
pop
cmp
leave
sub
int3
pop
test
cmp
je
mov
in
mov
sbb
pop
push
xchg
add
and
sub
andl
cld
pusha
inc
insb
and
movl
xchg
daa
xor
divb
enter
push
lea
cli
jb
cltd
test
jae
roll
sub
pushf
or
and
lea
pop
das
sbb
shll
push
jns
jge
pop
ret
je
jp
push
pop
aas
add
and
mov
lock
xchg
loope
ja
push
cmp
push
pop
xacquire
or
addl
cmp
sbb
push
jge
sbb
repnz
cmpsb
shrl
jb
jg
movsl
frstor
cmp
testb
adc
add
int3
rorb
movsl
dec
lock
ds
je
mov
ret
hlt
dec
push
push
mov
sbb
and
les
sbb
cmp
or
mov
or
mov
adc
sub
pop
stc
cmpsl
sbb
push
test
nop
xlat
mov
dec
jns
sub
adc
cmp
push
std
jle
push
negb
push
lods
adc
enter
popa
aaa
push
arpl
cld
pop
cmc
jecxz
call
jmp
cmp
je
aaa
orl
add
mov
adc
lock
mov
add
scas
mov
sbb
dec
out
rolb
fistpl
jo
lea
inc
jmp
sbb
xor
popa
add
jnp
negb
jo
push
add
add
mov
daa
fnstcw
mov
addr16
pop
aaa
jne
sbb
mov
xor
dec
mov
rcll
push
loop
mov
fistl
cmp
bound
push
or
fneni(8087
adc
dec
inc
bound
dec
mov
stos
pop
ds
mov
sbb
lcall
scas
add
push
out
xor
adc
and
jge
mov
sbb
jbe
sbb
movl
push
mov
add
inc
adc
push
and
sub
cs
ret
xchg
pusha
daa
loope
lret
ja
mov
adc
pop
or
jae
fs
add
push
mov
pop
lods
in
test
add
lds
out
movsb
push
add
adc
pusha
rclb
jno
and
jg
ja
jge
test
movsl
mov
jno
sbbl
jl
aaa
test
adc
pop
adc
xorb
dec
add
gs
xor
test
fmuls
out
mov
mov
add
out
adcl
sti
dec
jo
enter
cld
mov
and
mov
mov
mov
add
xchg
or
dec
pusha
xor
xor
mov
dec
jo
insl
fstp
mov
mov
sbb
add
pop
test
ss
js
mov
fstpt
mov
jae
repnz
rorl
mov
dec
jo
lea
mov
pop
or
loopne
shlb
movsb
mov
adc
std
test
add
mov
ljmp
leave
mov
jnp
movsl
dec
sbb
and
push
xchg
cmpsb
mov
sub
lods
or
mov
dec
push
fdivrl
push
test
or
ret
call
fs
lcall
cli
lret
imul
cmp
inc
pop
mov
mov
and
mov
test
and
mov
sti
sub
pushl
fidivrl
dec
jno
pop
pop
mov
push
daa
pusha
or
inc
jmp
push
cmp
push
loopne
mov
dec
add
adcl
aam
jbe
mov
inc
dec
aaa
lods
aaa
test
push
mov
das
jl
sub
xor
push
and
inc
sub
pushf
in
fiadds
or
mov
loopne
cmpsb
mov
test
or
lret
lods
dec
mov
mov
pop
js
test
test
test
sbb
inc
pop
adc
out
adc
pop
lock
aam
push
je
incl
inc
sub
jno
stos
push
jns
mov
fsubs
cmp
sbb
xor
aam
dec
mov
inc
cli
dec
inc
or
xor
adc
scas
rcrb
sbb
cmp
lea
enter
and
sets
push
sub
fwait
jge
mov
dec
cmp
sbb
adc
pop
adc
sub
xor
rolb
lods
sub
sbb
outsl
ja
movsb
jb
xlat
push
pop
mov
and
mov
fiadds
daa
xor
mov
adc
fisttpl
int3
ja
push
push
adc
sbb
fsub
dec
pop
std
adc
rol
push
push
mov
mov
push
push
xchg
movsl
cmp
or
dec
cwtl
stos
mov
push
push
js
sub
inc
pop
sbb
mov
xchg
fisttps
mov
fstl
and
and
test
cli
insb
cmp
pop
mov
js
or
movsb
sub
add
mov
imull
push
pop
jl
push
out
cmp
jge
jp
or
cltd
mov
mov
cmp
stc
mov
lcall
push
and
cmp
imul
jl
daa
fbld
in
sbb
and
testb
sbb
test
add
mov
in
adc
fsts
jecxz
jne
add
inc
fidivrs
dec
out
pop
loopne
pop
sub
pop
adc
dec
mov
add
xor
sbb
xor
addb
push
fwait
movsb
pop
movsb
and
pop
mov
aaa
fistps
cmp
imul
int
mov
andb
sub
fwait
jmp
in
push
adc
xor
or
in
push
testl
push
mov
pop
cmpsb
loope
lret
std
aas
in
pushf
pop
pop
test
in
pop
mov
xchg
inc
push
or
cmpsb
cwtl
or
push
cmpsl
push
push
dec
and
pushf
subl
sub
dec
sbb
mov
add
mov
leave
arpl
adcb
enter
sub
xor
jl
xchg
inc
lcall
cmp
xlat
popa
pushl
in
dec
xchg
cld
pusha
mov
js
int3
js
pop
xchg
je
mov
cmp
daa
cmp
lea
or
aaa
pop
cmp
mov
pop
cmp
adc
in
movsb
mov
cmp
and
jge
fidivl
mov
sub
loopne
jo
mov
repnz
lret
jl
xchg
nop
out
les
rcll
sbb
xor
or
mov
xor
je
mov
lea
jb
xor
and
add
add
lret
popf
pop
popf
adc
mov
sbb
sbb
fs
ss
inc
sbb
leave
aaa
ss
and
xor
mov
cmp
mov
jmp
push
adc
jno
jmp
push
cmp
xchg
subl
or
aaa
cwtl
xlat
jae
les
sub
sarl
loop
cwtl
pop
add
movsb
outsl
jne
mov
cmp
cld
pusha
enter
xor
aad
xchg
jno
mov
inc
divl
or
sti
stos
je
icebp
adc
outsl
mov
mov
imul
push
cmp
loop
dec
roll
push
faddl
sub
sub
daa
dec
lea
dec
cmpsl
jne
cmc
lea
mov
lret
enter
push
adc
cmp
loopne
cmpsl
xor
jl
out
mov
cli
pop
inc
push
and
loopne
cmp
imul
mov
sbb
adc
adc
jbe
xlat
dec
mov
dec
testl
shll
xor
es
mov
adc
or
js
fcmovnu
jb
or
add
add
fldl
inc
icebp
mov
cmp
in
orb
sbb
out
mov
mov
aaa
sub
in
popl
jl
xor
gs
push
push
in
lea
xchg
sbb
inc
rol
mov
in
js
mov
sahf
xlat
test
pop
cmpsb
inc
pop
lahf
mov
call
sbb
data16
xchg
setg
sub
mov
cmp
mov
iret
xor
sbb
dec
scas
dec
dec
dec
test
or
add
add
jo
push
push
add
sbb
push
jne
aad
pop
mov
mov
adc
aam
pop
imul
adc
sbb
iret
and
and
mov
push
push
imull
cwtl
int3
jo
dec
in
and
popa
popa
sub
push
pusha
popa
mov
lret
popf
inc
xchg
xlat
ja
cwtl
cmp
sub
xchg
in
testb
jmp
xor
mov
adc
add
xchg
adc
xlat
push
mov
add
pop
mov
testl
xor
pop
in
push
or
or
cmpsl
ss
pop
mov
mov
cmpsl
cmpsb
jae
mov
pop
call
and
lret
mov
and
push
xor
ret
ljmp
sarl
dec
loop
cmp
or
jecxz
jno
push
push
sub
ret
cmp
jno
jo
lds
xchg
xorl
mov
xor
in
cmp
out
int3
xor
lea
mov
mov
int
leave
cmpb
inc
leave
and
push
sbb
nop
pop
inc
pop
xchg
inc
push
and
lock
and
jb
dec
and
mov
ss
iret
pop
fs
and
cmp
or
push
cmp
and
mov
xorl
leave
adc
rcrl
pop
pop
xchg
sub
daa
mov
sbb
stc
mov
sbb
inc
enter
pop
sub
inc
sub
test
pop
sub
sub
push
sbb
xchg
push
icebp
inc
mov
repnz
push
insb
pop
pop
mov
jl
fcomps
push
push
sbb
dec
rcll
sub
pop
pop
in
test
hlt
push
jae
dec
and
and
push
adc
test
add
jle
dec
rorb
mov
adc
push
pop
adc
mov
int
shlb
push
push
or
lcall
and
or
lea
movsb
jns
add
jbe
push
adc
test
shlb
and
sbb
and
add
adc
xor
imul
sub
testl
add
fstl
scas
push
inc
fimull
sbb
imul
cmp
or
ds
and
jb
lods
add
scas
in
sti
jo
pop
mov
je
add
push
cmc
or
and
cmc
or
cmp
jo
xchg
sbb
sbb
lock
js
mov
adc
and
pop
and
jmp
fisttps
adc
rcrb
mov
sbb
scas
pop
and
pop
push
loopne
add
push
jbe
sbb
into
xchg
inc
jo
or
jl
aam
fisubrl
mov
pop
adc
filds
stos
jne
test
test
push
out
or
sar
xchg
cwtl
mov
outsb
lock
out
mov
push
ja
imul
sub
mov
aaa
test
out
test
push
pop
push
xor
jo
dec
pop
or
sub
pop
test
adc
xor
les
cmpsb
aam
pop
dec
clc
pop
or
sbb
push
or
lods
rcll
or
jo
loop
mov
es
sbb
mov
add
in
adc
or
loopne
mov
add
movsb
cmp
push
hlt
lret
sbb
cmp
or
push
stc
std
add
push
pop
icebp
cmp
inc
mov
add
loop
repnz
add
daa
cltd
add
ja
dec
lahf
je
cmp
cmc
int3
stc
xor
inc
enter
fdivl
jae
xor
dec
lods
push
data16
cmp
addr16
dec
push
in
pop
fdivs
in
test
enter
push
adc
rol
popf
les
add
sub
push
fisubrl
sbb
je
push
ret
bnd
adc
sbb
cmp
mov
shlb
sarl
fs
pop
orl
std
mul
push
jl
sub
push
push
pushl
and
addr16
cmpb
cld
sbb
aam
push
adc
lock
cmp
and
imul
or
dec
sub
push
repnz
adc
xchg
mov
inc
push
xchg
jge
push
push
icebp
jne
inc
jne
push
loopne
pop
mov
mov
xor
mov
jge
mov
or
imul
mov
aaa
add
add
and
les
push
push
subb
push
andl
and
or
movl
mov
cmp
adc
movsl
out
lds
xor
add
adc
fisubrs
mov
lods
cmp
aad
adc
int
movsb
lret
lcall
fwait
add
adc
pop
push
mov
push
or
adc
mov
adc
mov
xor
sub
pusha
jle
cli
cs
sbb
adc
loop
mov
mov
or
mov
and
adc
add
ret
int
movsb
jmp
sbb
adc
or
sahf
cli
and
add
dec
pop
inc
in
mov
mov
dec
or
cmpl
imul
mov
push
inc
jmp
mov
cmp
sub
sahf
bound
xor
adc
lods
ret
push
loopew
out
adc
adcl
jmp
sub
pusha
pop
movsl
loope
push
inc
mov
mov
jg
mov
cs
inc
add
add
mov
popa
ja
inc
stos
mov
or
pop
pop
sar
repnz
enter
mov
sbb
mov
mov
xchg
rcrb
mov
mov
or
femms
data16
push
popf
or
or
adc
xor
or
les
adcb
pop
push
mov
loopne
out
roll
pop
lahf
add
cmp
test
out
or
aaa
mov
test
mov
mov
push
sbb
test
inc
jp
sahf
adc
mov
in
inc
and
sbb
jg
loop
enter
jae
inc
add
outsb
mov
loopne
outsb
loope
sbb
and
loopne
ret
sub
daa
cmp
sbb
roll
mov
faddl
outsl
fiadds
dec
mov
sub
add
jg
sbb
lret
jp
cltd
add
mov
ljmp
pop
js
add
inc
clc
add
scas
cmpsl
and
test
loopne
dec
sub
stc
mov
icebp
repnz
pop
inc
push
add
sub
cmpsl
mov
lods
add
push
rcrb
add
pop
push
push
jno
xor
mov
test
adc
dec
imul
sbb
into
lea
add
pop
enter
ret
dec
rcrb
pusha
add
fbld
out
push
add
inc
cld
jbe
add
jge
jp
pop
mov
add
push
movsl
push
pop
outsl
sub
insl
and
cmp
or
pop
lret
leave
inc
or
pop
insb
push
pusha
inc
or
cs
loopne
and
or
insb
sti
in
outsl
sub
push
add
lds
sub
adc
push
imul
dec
shr
push
gs
sbb
xchg
and
movsl
popa
xchg
inc
sbb
add
aaa
mov
xchg
dec
iret
inc
cmpsl
rcl
pop
out
mov
pusha
test
dec
dec
jmp
xor
loopne
dec
pop
pusha
fwait
sub
adc
aaa
cld
loopne
adc
add
inc
add
dec
adc
mov
inc
mov
jbe
scas
mov
sub
mov
inc
push
mull
xchg
and
inc
insb
daa
popl
daa
jecxz
add
test
out
inc
movsb
aam
mov
and
lock
xor
js
push
mov
push
lds
pop
sbb
pop
xor
adc
mov
inc
lea
inc
pop
dec
pusha
adc
pop
test
ja
ret
movsb
or
aas
popf
adc
daa
adc
push
xchg
lar
adc
pop
push
ficoml
fildl
popa
insl
lret
sub
push
movsl
inc
lods
mov
xchg
jo
cmove
push
xchg
mov
and
and
scas
loop
rcrb
mov
push
dec
loop
mov
dec
scas
or
push
pop
and
push
cmp
add
in
les
jae
pop
push
ljmp
cld
dec
mov
ret
sbb
push
daa
mov
sbb
fildll
je
sahf
incl
pop
fwait
test
inc
lds
cmp
movsl
scas
iret
leave
and
push
xor
fdivr
loope
andb
inc
sub
sbb
in
rorl
loop
lock
loope
adc
adc
or
xorl
push
rcrl
xor
xor
xchg
pop
dec
pop
push
sub
xor
sbb
inc
test
cmp
dec
and
sub
adc
lods
enter
or
fcomps
add
dec
jmp
adc
fwait
xor
loopne
pusha
jns
xor
mov
add
xor
data16
sarb
les
pusha
pop
or
frstor
mov
mov
add
and
loop
cli
dec
add
mov
js
sbb
fistpll
test
pop
sub
mov
inc
in
pop
ret
mov
stc
or
adc
xchg
ret
or
dec
adc
pop
lea
fistl
movsb
push
fsubrs
jl
cmc
push
testb
pop
js
cmp
adc
inc
repnz
icebp
pop
adc
sub
push
out
sbb
adc
mov
cs
xor
or
push
mov
das
adc
xor
adc
lods
add
or
ja
lret
rol
add
test
adc
pop
cmpsl
sbb
adc
or
add
stos
adc
pop
rclb
adcb
cwtl
sub
sub
xchg
outsb
popf
adcb
orb
enter
add
lcall
clc
sub
imul
or
mov
mov
add
cmp
mov
dec
inc
icebp
push
add
xchg
dec
add
add
fs
bound
pop
or
aaa
push
mov
push
fwait
lea
or
mov
pop
jbe
jmp
ss
add
push
pop
js
leave
mov
xchg
or
push
movl
cwtl
or
push
outsb
dec
sbb
rcr
subl
mov
cmp
push
shrb
xchg
push
add
xorl
xchg
push
insb
push
sbb
bound
shll
sbb
into
addl
and
pushf
mov
imul
fidivl
mov
xor
sti
adc
mov
mov
call
mov
cmp
cld
push
sbb
punpckhwd
mov
add
sbb
sahf
sbb
xchg
pushf
inc
lret
sbb
mov
jecxz
je
push
mov
dec
dec
fs
inc
lcall
dec
inc
lcall
or
or
cwtl
and
xor
adc
cmpsb
out
lods
lret
mulb
insb
mov
hlt
repnz
sbb
jbe
mov
fstl
loope
adc
xor
lcall
inc
in
out
inc
inc
xor
repz
mov
add
dec
rorb
add
jae
xchg
xor
jns
scas
and
dec
ja
dec
js
xchg
or
push
mov
mov
pop
adc
mov
cltd
nop
push
add
xor
or
mov
sub
scas
inc
shll
push
bound
imul
xlat
iret
test
addb
sbb
jmp
movl
sarl
or
mov
mov
daa
xor
subl
mov
jns
xchg
ss
adc
push
int3
cwtl
xchg
pop
push
and
or
lods
fldcw
mov
in
fsubrl
jo
mov
jge
cmpb
dec
push
sbb
cmp
and
in
pushf
jecxz
popa
mov
sbb
cmp
or
pushl
lods
mov
adc
jno
and
aaa
push
cs
ss
ret
scas
leave
push
adc
icebp
movsb
push
adc
imul
lret
jne
xor
push
mov
pop
adc
in
or
sbb
jl
xor
insb
mov
dec
lds
aam
mov
sub
movsl
jne
sbb
test
push
or
add
fildl
mov
mov
xchg
xor
cmpsb
sahf
rolb
mov
movsl
notl
pop
decl
and
sub
mov
sub
mov
std
sahf
pop
add
movsbw
mov
cmp
jne
and
dec
in
jbe
je
adc
fwait
dec
js
inc
mov
add
mov
xor
or
cmp
mov
in
jne
insl
hlt
push
inc
gs
push
jle
rolb
pop
dec
cmp
or
inc
je
push
lods
testb
sbb
aad
push
mov
adc
movl
cmpl
push
lret
xor
cltd
mov
xchg
aas
lea
fucomi
add
cmpsl
push
inc
dec
sahf
das
fwait
dec
lods
repnz
ret
mov
xor
and
and
cmp
pop
mov
mov
imul
inc
xchg
dec
cmp
jbe
cmpsb
inc
gs
scas
je
pop
je
push
sub
mov
dec
sbb
pop
and
lock
movsl
xor
and
inc
or
int3
dec
xchg
cmc
hlt
and
lods
cs
test
add
neg
out
mov
dec
mov
shr
in
ret
imul
ja
pop
xchg
pushl
push
push
cmp
int
mov
movsb
sbb
aad
sbb
movsl
adc
inc
lock
mov
shrl
ret
inc
push
sbb
mov
incl
xor
ret
push
std
jle
sbb
call
or
xor
fidivl
test
insb
fwait
aam
add
out
js
xchg
pop
mov
mov
imul
outsl
xor
dec
xchg
sbb
mov
mov
push
test
sbb
xchg
fistpl
aam
pusha
push
dec
sbb
inc
xchg
sbb
xor
xchg
adc
lcall
loop
mov
mov
insl
popa
cmp
dec
clc
and
hlt
jo
push
test
and
dec
adc
sbb
jns
clc
cmp
adc
jg
push
jo
mov
dec
mov
mov
jae
je
jl
jne,pn
movsl
cmp
scas
imul
insb
and
dec
or
push
in
jno
inc
cmp
mov
popa
stos
add
mov
mov
jle
mov
add
movl
cmp
xchg
lea
hlt
mov
gs
add
daa
lea
pusha
js
jmp
shll
mov
fbld
sbbb
lods
clc
push
push
push
push
xor
les
inc
cmp
out
push
test
jae
adcl
jno
cmp
xor
adc
inc
lahf
inc
xor
dec
xor
les
cwtl
mov
movl
cli
sbb
dec
inc
rolb
je
sbb
into
int3
xor
mov
rolb
pop
loope
arpl
xor
ret
movsb
sahf
pop
loopne
clc
cltd
aaa
fidivrs
pop
jl
jo
sbb
loope
test
jge
add
sub
cld
mov
outsb
inc
mulb
loopne
add
add
shll
or
dec
dec
or
or
inc
mov
aas
vmwrite
pusha
rcll
push
jae
test
and
add
add
in
sub
sub
adc
inc
loop
mov
fs
cmp
icebp
jg
clc
push
add
push
push
push
push
mov
insb
pop
xor
mov
xchg
ret
mov
add
jne
mov
mov
lock
fcmovnb
jg
push
push
cmp
jne
add
adc
fwait
mov
or
xchg
cmp
cltd
addb
cltd
loopne
loop
inc
and
les
imul
push
sub
or
sbb
sbb
mov
add
sbb
add
jmp
and
mov
mov
push
add
cld
jmp
push
sub
add
aam
xchg
js
cmp
cltd
dec
mov
lahf
pushf
jmp
cmp
cwtl
lcall
dec
rcl
adc
mov
into
mov
lea
in
push
sbb
fnstsw
mov
mov
scas
mov
push
pushf
cmp
jle
cmp
js
add
xor
jbe
jp
xchg
xchg
jbe
mov
mov
jb
enter
icebp
xchg
cmpb
inc
nop
pop
dec
std
fs
jnp
in
push
add
scas
xor
adc
iret
rol
addr16
ss
cmp
sub
xchg
popa
cmc
and
fwait
push
nop
jbe
rorb
lcall
add
sub
movsb
lret
push
nop
add
add
mov
int3
nop
scas
pop
rol
add
xchg
add
xor
outsl
xchg
cld
enter
pop
adc
icebp
jbe
push
xchg
mov
test
push
push
sbb
outsl
adc
and
jo
xchg
test
inc
in
addr16
xor
sarb
add
jb
cmp
add
push
cmp
adcb
or
int
inc
jne
movsb
clc
jo
or
cmp
jno
ja
aam
and
test
push
xor
mov
das
faddl
mov
sbb
mov
fmull
add
and
jne
ror
add
mov
inc
add
hlt
jg
push
es
sbb
push
jbe
pop
sub
imul
clc
mov
stos
or
es
shr
cld
jb
mov
mov
xor
jge
or
mov
rol
aas
mov
xchg
imul
xchg
dec
and
les
inc
in
push
pop
fdivs
adc
push
enter
or
pop
or
push
rcl
and
dec
stos
je
pop
movsb
adc
in
push
int3
incb
jl
test
out
inc
add
ljmp
in
add
adc
xor
shr
pop
dec
pop
hlt
jmp
cmp
rorb
jmp
lahf
and
rcrl
or
pop
int3
je
dec
push
out
mov
ror
push
aas
adc
xor
add
cmc
jmp
cmp
push
push
in
and
jne
and
adc
into
cltd
sub
mov
stc
popf
push
adc
mov
divb
add
or
fadds
sub
test
or
imul
sbb
loop
dec
pop
add
incb
pushw
add
adc
xor
jnp
jb
push
or
lods
xchg
adc
nop
lret
mov
lods
pop
mov
sbb
mov
test
mov
mov
dec
pop
add
repnz
rol
jp
and
outsl
xchg
into
lahf
sbb
sti
add
movl
push
scas
fsubrs
xchg
cmp
fchs
jmp
fadds
or
xchg
sub
cwtl
or
loopne
push
or
mov
jo
sub
ret
sbb
mov
loopne
fs
rolb
mov
jecxz
imul
out
mov
pusha
mov
mov
std
scas
and
mov
xor
jle
add
cmpw
xlat
add
sbb
cmpb
push
sbb
push
lret
lea
fistps
sub
mov
add
sar
lods
out
sub
jle
je
pop
mov
add
jns
adc
dec
inc
sub
pop
jns
stc
iret
orb
add
or
xchg
adc
inc
or
dec
mov
mov
clc
orl
testb
jl
sub
jmp
cmpsl
xlat
cld
lcall
xchg
decl
mov
pop
cmpl
push
adc
rorl
repz
xchg
jne
inc
inc
testb
icebp
cmp
sub
dec
cmp
sbb
mov
inc
ret
cmp
inc
shrb
inc
fwait
shr
xor
add
fwait
ret
shlb
add
jae
bswap
xor
ds
mov
pop
and
pop
and
enter
adc
cmp
jne
jb
xchg
dec
insl
inc
xlat
cmovg
pop
dec
pop
push
pop
push
fmuls
jo
pop
andl
and
lea
adc
xor
or
insl
add
faddp
pop
adc
sbb
mov
je
mov
movsl
adc
push
imul
and
push
push
icebp
and
or
and
sbb
mov
pop
or
cmpsb
imul
fisttpll
pusha
and
shll
mov
adc
adcb
pop
shrl
inc
add
push
ds
rclb
call
test
or
lock
test
dec
xchg
ss
adc
jo
rorl
or
mov
mov
mov
inc
iret
cmp
jns
mov
sbb
cmpsb
in
jp
pop
pushl
lods
or
cmpsb
sub
ja
push
cld
jmp
sub
add
js
mov
mov
xchg
arpl
or
shll
nop
and
lods
shll
in
call
and
in
out
dec
push
push
pop
sbb
jne
mov
add
call
pop
fmuls
pusha
push
pop
dec
daa
jp
cmpb
cmpl
pop
je
or
cmp
push
and
xchg
cs
dec
pop
adc
or
dec
sub
push
pop
cmpsl
and
sbb
add
js
add
test
mov
sub
inc
lea
mov
addr16
aam
mov
xchg
js
inc
dec
pop
jne
imul
test
or
inc
inc
jo
mov
push
and
and
cli
adc
push
adc
mov
and
jp
push
pop
adc
call
push
and
mov
fldl
test
idiv
incl
mov
push
nop
jp
addr16
inc
pop
push
cli
jmp
in
loopne
xchg
pop
inc
sbb
xchg
dec
mov
pop
shl
roll
ss
test
lea
psubw
mov
dec
cmp
and
cmp
pop
cli
dec
pop
fstps
inc
and
jo
jmp
xor
adc
in
dec
outsb
lahf
in
sub
in
adc
mov
mov
aad
loop
cltd
lods
push
adc
adc
or
dec
jmp
xor
or
jae
jae
sub
sub
xor
push
inc
aaa
mov
idivb
adc
sbb
push
push
das
ret
or
cmp
or
dec
jmp
les
adc
pop
adcb
mov
test
test
inc
sti
pop
adc
inc
imul
ds
and
adcl
push
adc
or
cmpsb
lcall
mov
mov
pop
stc
scas
mov
add
addr16
daa
cmpsb
or
or
mov
jns
and
movsl
lahf
stos
pop
aaa
adc
inc
mov
xor
push
cmp
pop
scas
aam
add
mov
push
push
push
dec
sub
aad
xchg
push
or
push
adc
nop
sbb
iret
xor
sbb
imul
push
sub
test
dec
mov
popa
addr16
sahf
add
pop
mov
jne
pop
ja
and
repz
jmp
jne
push
call
sbb
dec
inc
daa
jne
sub
cmpl
xchg
test
aaa
pop
inc
sub
in
pop
adc
mov
jl
fwait
jmp
mov
sub
shlb
test
push
dec
mov
fldcw
fdivrp
pop
push
or
push
sbbb
outsl
cmp
jae
mov
nop
hlt
insl
jle
jo
shl
nop
jl
add
push
rorb
fdivl
push
cmpsl
lock
add
pop
dec
int3
xchg
movsb
or
rclb
sub
ret
adc
test
fwait
push
inc
inc
add
mov
jo
xchg
adc
or
clc
push
rcrb
xlat
cmpl
adc
loope
movsl
inc
mov
inc
fucomip
in
repz
mov
dec
hlt
xchg
mov
push
hlt
mov
xlat
outsl
pop
sub
adc
mov
jno
adc
jmp
aam
pop
int3
enter
shlb
mov
aaa
push
jb
pop
movsb
rolb
xchg
push
shl
pop
mov
push
and
enter
dec
xchg
fists
push
addl
xor
std
fsts
cmp
or
jle
mov
push
inc
inc
out
jmp
add
xchg
inc
cmp
test
lea
cmpsb
xor
icebp
imul
pop
pop
jmp
fmuls
bound
adc
xchg
push
jne
cmp
jge
xor
push
and
mov
mov
sub
push
adc
pop
pop
shlb
jae
mov
hlt
test
das
sub
js
xor
adc
mov
push
lods
push
sub
pop
repz
adc
mov
adc
mov
cmp
mov
cmp
mov
push
adc
fs
push
adc
fcmovnu
lods
cmp
jmp
push
jg
lods
clc
repz
cmp
jb
dec
pop
movsl
push
or
pop
xchg
pop
push
movsb
push
out
push
push
mov
movsl
adc
pop
orb
or
and
jp
sub
stos
jmp
push
mov
adc
and
inc
wbinvd
add
ret
push
inc
sahf
adc
pushf
and
in
incb
daa
dec
pop
or
cmp
xor
pop
dec
lds
and
lock
cmp
pusha
dec
mov
outsb
insb
jecxz
outsl
or
bound
or
or
in
add
adc
dec
pushf
inc
nop
adc
add
imul
jns
push
cmpsl
aas
or
inc
or
gs
mov
adc
xlat
or
adc
inc
sbb
insb
xlat
or
dec
sub
sub
hlt
mov
or
enter
mov
lret
lea
xor
nop
jo
inc
push
cli
and
ja
mov
stc
addr16
cmp
or
dec
mov
xor
hlt
pusha
or
arpl
in
imul
dec
pop
sub
sbb
pop
add
shl
add
add
adc
cld
push
pop
rorl
in
in
cmpsl
addl
movb
inc
pop
sub
scas
sub
and
mov
or
mov
ret
shlb
aas
xchg
je
xchg
in
adc
mov
xchg
and
mov
adc
push
xor
pop
inc
add
enter
addr16
jae
ss
cmp
sub
dec
ret
and
push
shlb
push
mov
adc
dec
add
pusha
adc
mov
push
and
in
pop
pop
cmpb
or
fiaddl
popf
or
or
sbb
mov
dec
add
xor
fidivs
mov
xchg
add
push
int
hlt
jne
mov
sbb
insb
and
pushl
popa
xor
xor
pop
pusha
inc
pop
add
mov
push
push
cmp
xor
push
add
add
addl
arpl
ret
pop
dec
mov
xor
dec
adc
cmc
or
ret
or
add
add
into
das
and
push
loopne
cmp
jg
int3
insl
pusha
adc
or
adc
xor
mov
jb
insb
pusha
adc
popaw
inc
mov
call
pop
jae
xchg
xchg
mov
xchg
and
push
adc
popf
bound
push
inc
mov
lcall
push
pop
cmpsl
add
adc
loope
jne
push
or
sub
add
push
movsb
fs
movsb
sbb
cmp
ret
sbb
inc
sbbl
lea
push
test
ja
push
xor
lea
test
cltd
sbb
cmp
xor
cs
xchg
push
rcrb
faddl
and
sub
sub
lahf
adc
xchg
adc
movsl
pop
or
xchg
mov
sub
andl
sbb
imul
ss
fwait
mov
shll
cli
mov
lock
and
inc
dec
in
das
push
subl
and
in
push
repz
jl
ljmp
cltd
jns
scas
shll
jns
andl
mov
popf
loopne
dec
icebp
mov
dec
push
mov
push
mov
push
movsl
cmp
lcall
push
scas
test
flds
leave
add
imul
xchg
rorb
xor
sbbl
xchg
nop
pop
dec
test
js
push
pop
jmp
punpckldq
call
andl
jb
sub
or
push
add
mov
std
sti
cmp
arpl
cltd
add
inc
mov
fisttps
and
sarb
or
jnp
pushf
or
adc
jecxz
or
xchg
ficoms
add
es
pop
mov
inc
or
rorb
cmp
mov
sub
movsb
test
and
mov
ret
adc
dec
inc
pop
and
add
adc
push
cmp
dec
cs
cmp
mov
xchg
rcrl
adc
call
adc
xchg
jo
int3
lahf
mov
adc
or
sbb
cwtl
cmpsb
pushf
lock
inc
dec
add
popa
ret
push
xor
mov
aaa
mov
ret
arpl
icebp
inc
nop
and
lods
sti
push
test
sbb
jno
shll
mov
loopne
or
adc
mov
out
adc
cmp
clc
xor
xor
ret
inc
sbb
push
inc
lret
sti
inc
cmp
and
or
lsl
repnz
mov
xchg
dec
inc
or
or
sbb
cli
xchg
cmp
inc
cmp
insl
push
fs
jp
int
into
faddl
push
nop
loope
xchg
mov
mov
push
inc
add
cmc
sarb
pop
sbb
clc
dec
dec
adc
mov
movsl
push
ret
sahf
divl
ret
adc
roll
and
add
movzwl
add
or
es
dec
movsl
sbb
mov
ja
cmp
jae
aaa
or
or
mov
sarb
or
mov
push
sub
daa
add
cmp
fcompl
cmp
adc
mov
or
out
insl
inc
rcrl
scas
adc
imul
mov
xor
sub
lds
xchg
test
dec
xor
add
inc
push
mov
pushf
test
xor
test
sarb
jmp
or
mov
xchg
jmp
shll
xchg
insb
out
push
xchg
inc
sahf
cmpsl
mov
xor
sarl
dec
add
or
mov
cmp
mov
arpl
adc
inc
orl
jb
dec
dec
adcb
imul
adcb
clc
and
sub
xchg
sbb
pop
pop
jl
or
insl
adc
push
adc
or
add
les
aam
push
arpl
clc
es
push
mov
icebp
and
pop
pop
jo
or
mov
adc
fs
inc
push
mov
inc
mov
pop
lcall
mov
fimuls
push
and
or
ret
jecxz
push
iret
das
les
rcll
pop
jge
es
xor
mov
adc
mov
mov
push
xchg
dec
enter
push
lds
sbb
inc
lcall
mov
in
faddl
sbb
adc
sbb
adc
add
adc
vxorpd
cwtl
sbb
orl
inc
sbb
jmp
ds
adc
jbe
je
adc
scas
mov
dec
push
sub
mov
enter
scas
sub
scas
jns
das
rorl
fdiv
push
popa
iret
push
jl
mov
sbb
and
pop
push
mov
push
scas
popa
pop
or
sub
pushf
jl
or
ret
les
jno
mov
mov
or
shr
xor
mov
push
inc
es
sbbl
fsubl
push
ss
mov
aaa
rcrl
mov
or
xchg
sub
dec
adc
loope
add
xor
mov
aaa
sbb
push
fimull
jns
dec
inc
jge
clc
addl
xor
push
pusha
jp
pop
dec
or
sbb
cmp
push
out
mov
rcll
loope
jb
insl
subl
ja
adc
sub
dec
shrb
clc
jne
push
ret
and
push
or
addb
or
xchg
push
and
pop
adc
xchg
icebp
or
sbb
mov
mov
test
mov
pop
push
or
inc
loope
push
je
sti
jmp
lock
add
rcll
mov
jge
nop
adc
and
jns
jl
mov
xor
dec
movl
mov
mov
ja
lds
outsb
in
nop
imul
pop
sbb
sbb
roll
scas
jp
dec
jmp
push
and
push
cmp
jmp
scas
imul
aad
cmc
add
and
ret
add
andl
adc
jb
rclb
and
das
and
ss
and
cltd
sbb
insb
push
or
sti
add
push
xchg
add
test
adc
sub
cmp
orl
das
lock
add
inc
cmc
enter
adc
push
inc
shrb
stc
sub
outsb
adc
mov
cmp
sbb
xchg
ljmp
dec
mov
or
mov
jmp
out
mov
push
sahf
adc
mov
adc
in
adc
je
sbb
adc
add
fdivs
lcall
add
mov
les
jecxz
add
scas
or
mov
addl
test
sbb
and
jmp
shrl
aaa
pop
xchg
xchg
sbb
pusha
sbb
push
inc
xchg
test
lds
inc
std
dec
sub
push
iret
jmp
pop
cmp
inc
repz
sysret
out
daa
mov
push
das
jne
or
xor
sub
xor
lds
movsl
mov
adc
xlat
inc
ret
mov
rcll
and
push
jbe
sub
mov
pushf
ljmp
inc
loop
xor
push
mov
xchg
or
outsl
lock
or
xchg
inc
loope
fcmove
dec
inc
mov
adc
sub
loop
clc
imul
xor
daa
ret
xor
xchg
movsl
adc
xchg
rorb
adc
jns
pop
and
pop
jb
add
push
jle
jne
push
fcomps
fs
adc
lea
jbe
push
and
push
push
and
mov
and
incb
clc
fsts
int
push
mov
in
adc
fcmove
push
rcrb
call
je
loope
xorb
or
in
inc
fsubrs
cs
bound
add
lea
movsl
sub
sbb
mov
cmp
add
or
fldt
sub
or
lock
adc
sub
dec
push
pop
push
push
aaa
in
pop
lea
decl
push
sub
xchg
and
dec
push
push
fldenv
or
inc
cmpb
ja
mov
mov
pop
xchg
addr16
ret
js
jecxz
imul
mulb
scas
add
push
lahf
jbe,pt
mov
daa
push
test
xor
sbb
or
or
adc
lods
pop
xor
je
mov
jns
dec
test
mov
in
mov
add
sub
cmp
sbb
adc
adc
shrb
cs
mov
ss
das
mov
mov
mov
call
insb
clc
jg
inc
rcrb
xor
iret
push
sub
lea
push
push
cmp
mov
mov
push
inc
adc
push
loopne
push
and
popa
mov
int
xor
hlt
push
add
inc
or
add
mov
stos
push
ret
mov
jl
insb
mov
inc
xchg
add
rorl
ficoml
xlat
loopne
fcoml
fcom
rolb
inc
sub
outsl
adc
popa
orl
fwait
lret
and
pop
movsl
fisubs
inc
rcl
and
lret
and
cmp
pop
adc
faddl
lods
aad
inc
and
pop
frstor
inc
inc
push
ss
push
adc
insl
or
fisttpll
test
cli
jne
xchg
mov
push
rcll
xchg
and
pop
xor
sub
mov
pop
arpl
add
and
stos
in
add
dec
loop
leave
call
jae
inc
adc
aaa
sub
loop
push
pop
in
adc
jne
stos
pop
mov
or
mov
jns
clc
mov
mov
add
test
pusha
inc
and
shrl
or
adcl
cmp
fwait
adc
lret
pop
sub
incb
adc
mov
ja
inc
movl
ret
or
inc
adc
mov
mov
fldz
and
add
and
cmp
and
pop
sti
cmpsb
add
sub
pop
xor
cmp
ss
mov
push
xchg
mov
dec
leave
sbb
fiaddl
and
sbbl
popf
cmpsb
es
xchg
or
jb
adc
nop
push
and
sub
xor
pop
jl
adc
orb
mov
pop
movsb
pop
lods
inc
mov
fdivrs
and
lea
fisttpll
mov
aas
or
loopne
lea
adc
fsubs
rcr
add
mov
sbb
call
adc
adc
fcomp
xor
stc
cmp
icebp
outsb
scas
sbb
xsha256
cmpsb
push
jno
bound
loopne
jg
bound
mov
faddl
jg
jle
push
in
fidivl
fsts
add
cmpl
fucom
cli
adc
cmp
push
cmp
jle
cmp
jp
push
mov
xor
jle
cmp
mov
mov
push
add
inc
sbb
fs
les
add
ret
push
mov
mov
scas
ds
pop
and
dec
fwait
inc
or
fs
pop
idiv
call
fisubrl
and
adc
xor
inc
fidivl
aam
cmpsb
or
inc
mov
stc
mov
jecxz
push
test
mov
pop
mov
sub
add
add
dec
jno
push
arpl
inc
outsb
outsb
push
push
dec
cmp
push
imul
dec
mov
popw
sbb
xchg
mov
sub
pusha
pushf
rcr
dec
sbb
add
daa
mov
movsl
or
adc
and
adc
dec
sub
roll
lcall
push
and
adc
inc
outsl
pop
ret
push
sbb
push
test
andl
in
pop
add
and
sub
add
mov
cmp
lods
pusha
mov
push
dec
or
fs
pop
inc
lcall
push
enter
or
mov
or
in
sbb
add
add
xchg
add
enter
adc
rcrb
leave
push
shl
inc
insl
inc
jo
or
pop
popf
cmp
test
stos
outsl
inc
adc
mov
dec
es
mov
movsl
adc
fldt
cmp
xchg
add
push
insb
in
push
push
data16
push
inc
dec
or
adc
lock
and
fs
sbb
leave
and
mov
sarb
out
leave
push
js
sbb
es
or
dec
and
and
leave
adc
mov
popa
andb
enter
lods
inc
dec
pusha
popa
jge
xor
jmp
fildl
add
roll
mov
xor
in
lods
inc
xor
jo
sbb
adc
sub
xorl
sbb
outsb
sbb
mov
mov
adc
add
test
or
fsubl
jns
xchg
inc
sbb
stc
add
inc
mov
sub
add
xor
push
adc
push
pop
adcl
ljmp
mov
adc
adc
push
test
addr16
push
push
or
mov
adc
adc
sub
lcall
sbb
xor
cmp
jo
add
adc
movsl
cmp
jmp
leave
inc
add
sbb
mov
mov
loopne
aas
pop
add
orb
stos
pusha
mov
lods
or
insb
lea
xchg
or
loopne
fs
stos
rolb
clc
les
dec
mov
ret
in
or
mov
xchg
or
pop
xchg
push
xchg
jecxz
push
and
mov
adc
or
ret
pusha
enter
and
or
mov
cli
xor
sbb
adc
and
fcoml
sbb
sub
orb
loop
jne
lea
add
pusha
inc
sub
sbb
pop
jmp
mov
mov
and
jecxz
outsb
mov
pop
xor
add
cmpsl
in
pop
jp
inc
inc
outsl
inc
push
jl
orl
cli
inc
push
mov
mov
pop
pusha
mov
dec
aaa
lock
fadd
mov
push
xchg
fistl
adc
or
leave
adc
adc
icebp
add
or
aad
cmp
ljmp
and
nop
jae
in
mov
into
leave
test
sarb
sub
sbb
insl
sti
cli
push
popl
cmp
mov
inc
and
dec
jbe
sub
mov
and
and
mov
fsubs
inc
push
and
jae
mov
flds
adc
cmp
out
ss
push
ja
lock
add
loop
push
adc
cmp
xor
push
mov
addr16
inc
popa
stos
cmp
jne
mov
push
stos
xchg
test
popa
xchg
mov
sbb
into
add
push
add
xlat
inc
add
fildl
jb
cmpsb
rorl
mulb
push
dec
dec
push
push
decb
sarl
shlb
adc
orb
add
movsb
pusha
xchg
test
leave
push
jae
jnp
xor
loope
cmp
jg
or
jns
adc
lods
popa
push
pop
pusha
adc
arpl
inc
mov
pop
pop
pop
sub
or
dec
insl
and
adc
jnp
shlb
jno
adc
mov
pop
mov
stc
xchg
lea
ret
jo
ret
mov
ss
xor
jle
mov
jmp
ffreep
jecxz
add
sbb
adc
inc
jl,pt
push
clc
push
dec
sbb
fdivrl
cmp
or
adc
out
mov
xchg
inc
add
enter
iret
sahf
jbe
popf
pop
push
mov
xor
in
lods
addb
shl
movl
fcomps
sub
sbb
movsb
cmp
or
xchg
push
mov
dec
dec
mov
dec
fldl
incl
sbb
loopne
les
nop
fisubl
lret
jp
mov
loopne
fldl
push
sbb
dec
fildll
sbb
and
imul
mov
cmp
push
push
mov
mov
loopne
outsl
lahf
jo
jnp
xchg
add
and
loope
fsubrp
in
rcrb
test
lods
orb
push
xchg
int3
mov
or
and
cmp
in
ret
push
cs
leave
addl
adc
movl
dec
pop
lods
in
imulb
in
mov
mov
inc
fldl
pop
dec
mov
inc
inc
dec
and
nop
adc
or
shll
add
divb
loope
add
mov
jge
movsb
mov
fmuls
mov
fidivs
mov
adc
and
mov
adc
add
mov
push
push
adc
scas
dec
jnp
test
dec
cmp
xchg
mov
ja
push
mov
aaa
ret
push
sbb
and
xor
push
daa
lock
aaa
movsl
out
insl
andl
xchg
aad
gs
lods
xor
out
lock
in
mov
adc
jnp
mov
mov
call
xor
push
mov
lock
sbb
leave
shld
add
rorb
aam
sbb
jmp
ss
push
inc
add
push
add
push
je
xchg
or
ret
sbb
add
push
leave
adc
call
push
mov
push
jb
or
add
or
mov
sub
sbb
push
loop
dec
pop
pop
imul
add
pop
mov
sbb
sbb
ljmp
ret
popf
shlb
popl
sbb
push
push
push
and
push
add
ja
push
adc
sub
push
wrmsr
push
sbb
jle
mov
dec
inc
cmpw
jne
mov
and
jmp
inc
cld
cmp
dec
push
insb
mov
cwtl
mov
add
fcomip
lea
cmp
or
fildl
test
out
test
shrb
sarb
subb
pop
movsl
push
scas
jo
xchg
ret
xor
sub
sbb
test
dec
or
add
arpl
add
inc
cmp
les
jecxz
arpl
and
mov
dec
adc
add
mov
lods
xor
jnp
jo
inc
mov
pop
clc
or
jnp
push
rorb
roll
je
mov
dec
lcall
or
add
or
inc
mov
xorb
or
jo
loope
push
add
mov
xorl
mov
imul
jbe
cmp
mov
sub
movsb
std
arpl
fdivr
lock
dec
lods
lods
inc
xor
mov
sbb
pop
rolb
sub
push
ffreep
ret
sub
xchg
add
shl
int3
aaa
mov
jl
mov
or
lds
les
je
lret
cmp
or
add
adcl
inc
insl
add
mov
add
loopne
cwtl
push
xchg
imul
adc
xor
fstpt
add
pop
add
dec
cmpsb
add
add
add
shlb
jne
into
fstpt
adc
das
ds
push
mov
lahf
aaa
int3
cmc
dec
pop
fwait
cli
push
mov
hlt
fdivs
aad
ret
and
and
stos
or
or
jp
xchg
push
dec
inc
arpl
inc
sbbb
or
pop
or
push
adc
push
ljmp
cmpsl
sbb
mov
mov
imul
imul
pop
cmpsb
mov
int3
addb
in
decl
lret
loopne
popf
jno
iret
push
repz
add
ret
push
add
ret
dec
xchg
jo
xorl
push
jo
push
lahf
and
adc
mov
lds
add
add
stc
cwtl
add
mov
pop
es
lods
bound
ret
and
push
ja
cwtl
test
jecxz
test
into
fadds
xchg
mov
jmp
jge
ljmp
icebp
and
xor
mov
fs
inc
adc
add
sub
dec
sti
je
dec
je
add
sbb
dec
jne
rcrl
jmp
push
test
push
add
xchg
les
push
pop
stos
cld
or
pushf
cmp
push
sub
insb
sub
jns
push
ja
mov
push
scas
push
in
push
lcall
push
stos
xchg
clc
jp
test
inc
sbb
iret
insb
mov
hlt
push
or
adc
enter
mov
sbb
or
nop
inc
push
cmp
mov
call
xor
adcb
pop
mov
dec
push
jo
pushf
cmpl
shr
jge
sbb
enter
mov
and
mov
adc
jb
insb
test
and
lock
in
inc
inc
pop
jl
nop
inc
push
mov
orb
iret
repz
decl
stos
mov
iret
repz
enter
jns
iret
repz
add
push
cmp
jns
out
dec
push
pusha
push
out
sahf
je
mov
out
mov
into
fcom
jl
out
in
testb
or
repz
adc
sub
cmp
push
xchg
int
jge
roll
scas
popa
pop
push
popa
fstl
add
loopne
repz
or
mov
adc
inc
mov
gs
add
ss
nop
adc
push
les
outsl
andb
and
or
lea
mov
and
mov
jmp
loopne
sbb
ja
popa
add
sub
fldl
push
test
pusha
lods
pop
and
es
or
sbb
cmpsl
lock
cmc
inc
mov
push
sbb
decl
and
popf
cmp
fistl
nopl
movsb
push
sarb
hlt
scas
inc
xchg
test
xlat
std
xor
pop
xchg
add
lods
pop
add
je
add
inc
and
mov
cmpsl
xor
and
int
sbb
aas
mov
test
sbb
sub
dec
test
or
lea
shll
xchg
arpl
pop
mov
sbb
les
inc
cld
cmp
rorb
cmp
jge
cmp
pusha
pop
push
cmp
hlt
cmpsl
shll
push
xor
shl
add
and
push
std
dec
pop
add
scas
in
xchg
xchg
cli
cs
add
repnz
jl
mov
add
rolb
rclb
lea
or
sbb
mov
or
push
push
ret
or
insl
movsl
bound
cmc
enter
xchg
test
loope
mov
or
imul
sub
dec
adc
xchg
adc
ret
and
or
xor
xor
xchg
std
adc
inc
cld
rcll
add
adc
mov
hlt
add
test
mov
jae
pop
push
adc
mov
test
jne
xor
cmpsb
inc
push
or
or
sbb
aad
or
xor
xchg
jbe
add
push
inc
ret
enter
dec
adc
and
les
iret
loope
or
out
and
int
shl
adc
push
inc
cmp
les
test
or
nop
xchg
je
mov
mov
or
mov
xor
outsb
js
xchg
enter
int3
jnp
dec
inc
mov
sub
cmp
mov
shl
icebp
push
mov
ret
out
mov
jno
push
sbb
xchg
cwtl
fwait
cmpsb
xor
push
test
jl
cs
and
repz
jo
push
das
mov
jl
mov
pushf
adc
xor
ret
xor
mov
cmp
xorb
in
sub
xchg
dec
sbb
sub
out
ficompl
inc
and
mov
xor
sbb
xor
xor
das
insb
jo,pn
xchg
xor
sub
xchg
xor
sub
inc
xchg
sub
int3
add
in
ja
add
popa
mov
mov
cmp
jl
sub
adc
mov
test
xorl
xor
dec
cmp
mov
xlat
movsb
cmpsl
std
add
sbb
jnp
imul
mov
arpl
inc
or
js
xchg
mov
js
inc
movsb
or
push
jbe
push
lock
test
jae
orl
mov
sub
inc
imul
imul
gs
add
int3
xor
and
sbb
sbb
xchg
push
mov
movsb
add
mov
push
sbb
and
pop
and
dec
adc
addl
test
sub
es
icebp
loope
repnz
out
enter
add
or
in
inc
jne
adcl
stos
ficompl
ret
je
xchg
cs
mov
cmp
xor
jo
pop
push
imul
out
mov
inc
pop
xchg
or
mov
jle
aam
enter
addl
nop
imul
cld
test
cmp
rorl
sub
xchg
subb
add
cmc
sub
cmp
inc
enter
sub
xor
movsb
push
scas
pop
dec
aas
push
sbb
inc
push
and
pop
and
es
and
in
aaa
and
xchg
loope
mov
nop
mov
dec
inc
push
adc
daa
cmp
pop
sbb
sbb
inc
mov
inc
push
sbb
ret
mov
adc
lds
pop
lea
jo
jle
pop
scas
leave
outsl
popa
inc
and
imul
pusha
int
inc
shlb
test
mov
popa
dec
pop
mov
inc
pop
lock
rclb
nop
mov
pop
adc
jmp
push
sub
dec
mov
stos
repnz
jne
inc
pop
sub
lods
pop
dec
bound
lea
scas
adc
out
xchg
out
add
dec
dec
add
pop
jb
inc
sbb
xchg
add
or
mov
jae
mov
or
push
mov
jb
pop
dec
lods
insl
cmp
mov
mov
ds
and
inc
add
cmp
sub
test
jne
or
sar
out
cmp
inc
add
daa
push
jl
add
loopne
loopne
cmp
inc
pop
or
testb
xor
test
daa
repz
fiaddl
mov
cmp
les
out
add
sbb
loopne
repnz
inc
call
inc
xchg
pop
fs
cmp
mov
sahf
int
jb
adc
mov
push
pop
ds
cmpsl
popf
xchg
sbb
ja
add
shlb
sahf
lods
xor
outsb
inc
pop
leave
xor
sarb
dec
iret
mov
pop
jecxz
incb
jne
add
xor
enter
pop
mov
or
nop
jns,pn
jns
call
imul
lods
inc
xchg
push
inc
cmc
adc
lcall
dec
adc
xchg
lret
int
adc
adc
push
mov
cltd
adc
inc
push
stos
push
adc
push
scas
cmp
cwtl
push
inc
sbb
pop
adc
int
negl
lods
fsubrs
mov
inc
sbb
fisubrl
rcrb
enter
push
mov
enter
pusha
cmp
nop
pusha
and
push
inc
and
je
dec
lret
adc
dec
and
sahf
mov
mov
test
and
mov
rcrb
jmp
push
popl
and
sbb
pop
pop
push
inc
inc
popa
test
int3
jno
adcl
les
adc
dec
adc
test
jb
pushf
xchg
call
cmc
test
lea
dec
xor
int
je
insb
xor
rorb
pop
pop
xchg
popl
xchg
jge
push
xor
movl
icebp
or
mov
data16
cmp
test
xchg
pop
je
test
insl
pusha
and
or
lret
inc
xor
adc
push
xor
mov
xchg
loop
cltd
lea
dec
or
lea
jb
icebp
mov
jo
out
inc
pop
jns
add
dec
in
shr
test
xor
sub
inc
jbe
inc
cmpb
mov
test
cmp
loopne
or
lahf
movb
jb
add
jnp
xor
cmpb
add
xchg
fcoml
jo
jbe
aad
aam
add
loope
dec
adc
jge
xor
push
or
test
or
xchg
cs
or
push
mov
pusha
hlt
fisubl
test
push
js
or
icebp
and
and
push
mov
push
push
jnp
subl
adc
lods
sub
popa
or
push
xor
cmp
jbe
notb
ret
sbb
pop
xor
mov
adc
mov
jp
mov
cmp
mov
adc
mov
shl
cmp
pop
addr16
pop
inc
sub
add
jmp
pop
or
insl
fldl
sbb
fiaddl
or
les
push
mov
pusha
sbb
pushl
ds
add
xchg
dec
push
xchg
mov
cltd
aad
mov
jmp
jae
nop
imul
pop
dec
nop
push
sub
cwtl
fwait
and
inc
inc
mov
mov
cmpsb
les
popf
sub
insl
and
and
mov
sub
and
jl
rolb
mov
fisubrl
push
pop
es
xchg
dec
jae
pop
daa
push
ret
rorb
sub
sub
push
imul
or
loope
mov
data16
test
push
sbb
loopne
lea
mov
rcll
rorb
je
dec
js
fcompl
add
sub
jbe
mov
ficompl
pop
inc
push
cs
cli
sub
popa
xor
ja
loop
dec
popf
das
rep
add
inc
cs
dec
dec
movsb
sub
lcall
cltd
nop
data16
sub
inc
test
push
and
nop
inc
lcall
movsb
cltd
and
lcall
cltd
nop
nop
sbb
dec
add
rorb
sbb
mov
xor
sbb
pop
rol
or
and
nop
mov
imul
mov
add
test
cld
xchg
push
cmp
in
orl
pop
les
xor
fs
js
arpl
sbb
cs
stos
xchg
cmp
dec
test
int
test
icebp
fsubrs
clc
test
lds
or
sti
loopne
sbb
dec
or
xchg
push
ficompl
pop
jecxz
repnz
push
add
scas
aam
adc
pop
orl
sub
mov
pop
loopne
sbb
jge
pop
push
cmp
mov
movsb
or
push
test
lahf
jle
fiaddl
add
inc
popa
rcll
jo
xchg
inc
div
and
xchg
mov
adc
sbb
scas
ss
pop
lret
push
dec
cmp
daa
inc
or
add
test
add
push
jp
or
jl
jge
cmp
or
ficoms
daa
lea
das
stos
std
scas
mov
add
push
cmp
and
mov
sbb
push
test
push
rorl
ljmp
adc
sbb
inc
or
jbe
dec
cmp
pop
dec
lods
imul
popf
pop
adc
sarb
cmp
sub
dec
pop
cld
movsl
mov
mov
nop
movsl
aam
cmp
xor
std
mov
add
test
add
aad
or
mov
mov
mov
mov
hlt
adc
xor
xor
cmc
and
push
adc
inc
adc
out
dec
adc
jg
sbb
inc
adc
je
push
push
push
clc
push
sbb
loope
rclb
cmp
nop
pop
mov
call
xchg
adcb
mov
sub
mov
pusha
addr16
jb
adc
push
pop
xorb
xchg
ret
sbb
fs
adc
push
sbb
xlat
jbe
mov
sti
pusha
add
xchg
cmp
jne
inc
inc
ret
dec
inc
add
les
addb
hlt
subl
push
test
push
or
iret
jne
mov
inc
insb
outsl
movl
cmp
jae
inc
adc
inc
mov
or
or
iret
je
mov
dec
add
inc
cmp
mov
aas
dec
sbb
push
mov
inc
mov
pop
adc
mov
movzbl
and
loopne
add
xchg
inc
add
ljmpw
leave
addb
add
imul
add
fdivs
mov
xlat
aad
pop
inc
js
dec
or
call
mov
push
inc
sbb
incl
push
repz
mov
cmp
add
jne
ds
icebp
or
mov
or
dec
xor
cmp
xchg
inc
jbe
xchg
pop
push
fcompl
pop
test
cmpsb
sbb
jecxz
and
lret
ret
dec
and
add
subb
stos
leave
in
inc
add
orl
xor
imul
xchg
outsb
outsb
ljmp
inc
cmp
jmp
cmp
jl
or
je
loop
ljmp
je
mov
inc
jmp
movzbl
movb
movsbl
shr
mov
dec
test
push
add
pop
dec
add
mov
aaa
aam
jne
pop
xor
xchg
jbe
js
xchg
push
cmp
mov
dec
pusha
add
sbbb
lock
fxtract
sarb
mov
push
jmp
dec
push
mov
ja
xor
mov
dec
rorl
sub
add
test
mov
xor
add
sti
lods
enter
fwait
inc
js
enter
dec
sub
rolb
mov
push
dec
inc
mov
cmp
pop
xchg
xchg
je
dec
and
add
cmpsl
and
jmp
push
or
cmc
jmp
hlt
and
mov
mov
xchg
dec
test
or
or
xlat
or
mov
xor
adc
xor
pusha
push
aaa
je
test
push
cvtps2pi
pushf
fwait
clc
or
jp
fisubs
pop
icebp
dec
mov
pop
add
pop
nop
ss
adc
movsb
sub
dec
mov
nop
sbb
mov
outsl
ljmp
xlat
xchg
ficomps
divb
imul
jp
inc
push
add
xchg
imul
mov
pushf
xchg
adc
mov
stos
ss
cwtl
push
dec
loopne
push
inc
adc
push
xor
loopne
xor
mov
sbb
subl
test
out
push
mov
test
xor
mov
inc
push
out
mov
cmp
movsb
jle
call
mov
add
ss
out
fnstenv
ret
pop
lock
test
fcomps
in
in
dec
add
or
cmp
push
sub
and
mov
mov
xor
idiv
jg
notl
adc
nop
xor
and
jmp
cmp
pusha
mov
xor
add
push
adc
mov
lds
inc
adc
cmpsb
xchg
ror
leave
xor
mov
cmp
pusha
fildl
jecxz
fadds
jecxz
leave
addb
fwait
pusha
sub
adc
inc
cmp
add
testb
fadds
ror
push
xchg
cmp
xchg
inc
jg
inc
or
dec
lahf
or
sbbl
out
lret
andl
and
push
dec
loopne
jb
inc
push
adc
and
push
adc
fisubrs
sbb
lock
aam
rolb
add
cwtl
xor
fwait
lods
outsb
ds
sub
mov
xchg
popa
adc
mov
inc
sbb
add
lods
xchg
rolb
lods
add
ds
fdiv
sbb
adc
and
arpl
and
add
enter
call
add
mov
lret
jmp
test
add
or
in
add
dec
sbb
mov
dec
and
mov
scas
or
adc
mov
rolb
dec
or
lock
mov
sbb
rolb
jns
jecxz
xchg
insl
pop
testb
pop
adc
sub
sub
add
or
outsl
rolb
cs
fadd
lret
jl
ret
cltd
xchg
dec
fcoml
inc
adc
cld
jnp
bound
inc
or
dec
in
ret
mov
mov
push
inc
sbb
pop
xlat
add
rorl
mov
add
pusha
and
loope
ret
adc
movsl
lock
jnp
ljmp
enter
loopne
mov
aas
cmp
adc
pop
xchg
jl
icebp
add
out
mov
out
pop
or
sbb
subb
xchg
mov
cmpsb
add
sub
lahf
add
xor
add
jle
adc
cmp
fmuls
sbb
cmp
ret
or
inc
mov
lahf
rorl
inc
push
adc
xchg
push
popf
test
mov
sbb
pop
mov
loope
lods
fldl
pop
fdivs
mov
rcll
test
lock
push
dec
pop
add
nop
push
mov
sub
push
or
aad
xor
imul
cmp
je
push
les
addr16
je
add
adc
adc
shl
les
pusha
xchg
and
imul
add
mov
scas
test
jmp
repnz
add
addr16
js
dec
lea
test
add
je
in
jno
adc
or
cmp
jp
shl
mov
movsb
outsb
mov
xor
jne
je
inc
sub
das
push
ljmp
ss
test
js
pop
sbb
add
mov
sarb
les
add
fmul
test
iret
test
adc
add
push
sub
in
push
and
fdivrl
sub
pand
sub
adc
lods
push
mov
or
loop
les
fistl
push
lea
mov
xchg
mov
dec
mov
mov
pop
scas
add
mov
bound
arpl
fidivrl
xlat
in
mov
xor
les
xor
movsb
fisttpll
call
rdtsc
and
enter
fst
jo
call
or
mov
xor
lods
bnd
or
xor
jne
lret
fmuls
je
jge
lea
push
in
fnstsw
popa
out
pop
jnp
das
inc
or
cltd
mov
and
out
mov
cmp
sub
cmp
dec
shrl
cmp
xchg
jno
adc
xor
mov
sub
lock
sbb
inc
jmp
xchg
inc
push
lcall
movsb
mov
push
lea
add
sbb
sbb
push
lcall
je
cli
or
out
pushf
push
cmp
push
cmp
in
mov
imul
add
in
xlat
in
pop
repnz
push
cmp
dec
mov
add
add
fsubs
jne
ds
and
sbb
jmp
inc
add
inc
or
hlt
mov
xor
aam
sub
add
jp
or
or
ret
and
shl
out
jl
lock
ret
ret
fcom
mov
stc
shlb
sbb
pop
fists
jbe
leave
mov
int
pop
int3
push
fldl
dec
es
mov
fildl
hlt
cmp
adc
jne
out
jns
daa
bnd
adc
hlt
jne
or
sbb
out
jne
or
push
mov
mov
int
subb
mov
and
mov
aad
rorl
sub
mov
xchg
jnp
sbb
mov
xchg
adc
mov
push
jl
mov
lea
fstpl
lea
cmp
ja
mov
lcall
and
movsb
in
inc
mov
sahf
sub
mov
or
les
sbb
daa
lea
out
push
cwtl
mov
or
xchg
movsl
xor
lret
loopne
xchg
mov
push
out
rorl
fnstcw
fadds
clc
adc
in
dec
pushf
shll
repz
adc
sub
fcomp
mov
push
inc
lea
or
imul
adc
mov
add
xchg
xchg
test
cli
rdmsr
push
pushf
mov
ret
jne
push
ss
cmp
insl
sbb
cmovne
fmull
add
inc
xor
xchg
fidivrl
xor
insl
mov
pop
stos
call
pop
imul
pop
orl
repz
xchg
pusha
pusha
xchg
xchg
lea
mov
lcall
push
les
push
jne
imulb
js
xor
aaa
movups
dec
ficoml
mov
mov
ret
fwait
mov
mov
mov
push
cli
jmp
fisubrs
xchg
and
imul
icebp
and
jg
push
or
js
pop
movsb
jbe
clc
clc
or
add
rcrb
sub
fmuls
rorb
int3
or
std
add
ror
inc
subl
int
and
test
loopne
mov
xchg
and
add
sub
fsubl
loopne
ja
and
in
iret
movsb
leave
add
sbb
fs
push
mov
or
nop
mov
xor
pop
mov
mov
mov
fucom
xor
xchg
and
imul
and
cld
lods
dec
jge
xchg
xchg
push
pusha
ret
shll
push
xchg
cmp
sbb
mov
mov
ret
inc
jnp
lea
lods
movb
mov
mov
sbb
test
jne
xorl
popa
adc
ret
add
divb
sub
out
push
xchg
pusha
sbb
ror
leave
dec
or
or
je
dec
or
xchg
mov
hlt
push
mov
out
and
test
or
or
ret
and
push
ffreep
sub
fisttps
dec
xor
scas
or
cltd
nop
fldenv
sbb
dec
push
adc
add
dec
push
cltd
nop
adc
cmp
adc
in
nop
arpl
inc
adc
fs
push
sub
nop
cltd
xlat
leave
pop
xor
push
sbb
push
cltd
dec
sbb
nop
mov
adc
and
mov
inc
mov
push
fwait
pusha
push
or
dec
push
ret
cmp
and
jecxz
adc
sbb
push
xor
pop
rorb
es
nop
scas
mov
xor
out
mov
sbbb
in
test
daa
movsl
jae
add
jmp
mov
fldenv
stos
cs
dec
mov
les
punpckhbw
pusha
jno
ficomps
or
mov
insb
and
mov
lods
sbb
xor
out
push
lock
xchg
rorl
je
mov
mov
dec
xchg
mov
pop
push
aas
jo
or
or
or
push
add
iret
clc
and
mov
jle
dec
js
jg
push
lea
je
push
lcall
lea
adc
ficoms
aam
inc
sbb
fcompl
test
push
loopne
sbb
adc
pusha
xor
pusha
sub
pop
pop
lock
inc
jmp
xor
movsb
cwtl
mov
cmpl
lods
add
add
fs
mov
adc
xchg
jne
jp
adc
push
push
hlt
cs
test
les
pop
mov
xchg
call
pop
add
dec
push
jne
test
in
call
lods
add
add
mov
loopne
shlb
inc
popf
inc
adc
in
test
shl
sub
adc
adc
call
imul
in
push
in
add
dec
mov
in
sbb
std
xor
pop
mov
and
shrb
lods
sbb
mov
inc
loopne
mov
mov
daa
mov
and
push
call
dec
or
jnp
sbb
pcmpeqd
cmpsl
lds
xchg
pusha
clts
sub
xorl
adc
fsubl
jge
push
lret
inc
loopne
hlt
mov
and
push
mov
andl
sub
push
dec
shlb
je
orl
into
add
push
jne
pop
js
call
inc
movsb
popf
fcom
es
jne
mov
ror
test
ljmp
xor
bound
pusha
aam
out
inc
lret
icebp
adc
shlb
xor
bound
xor
mov
lock
push
fsubrp
lds
cmp
ret
daa
shlb
fdiv
pop
inc
lods
push
mov
or
adc
xchg
incl
cmp
clc
movsb
mov
cmp
xchg
mov
lcall
sti
push
je
adc
stos
cmp
mov
lock
mov
shl
adcl
lock
les
xorl
push
add
pop
xor
push
inc
xor
adc
pop
lcall
lods
inc
fcoml
inc
lds
loopne
bndstx
push
pop
call
jmp
xchg
xor
ds
dec
mov
lock
add
add
xchg
mov
fdivrl
and
es
loope
and
and
mov
mov
push
bound
push
fcomp
mov
sbb
imul
inc
xor
mov
pop
or
push
mov
cmpsl
mov
lcall
loopne
jmp
xor
out
addr16
fisttps
xchg
cwtl
rcrb
add
xchg
push
push
inc
sbb
push
and
rolb
sbbb
sbb
sbbb
cld
sbb
add
push
in
push
dec
loopne
jmp
aaa
add
aaa
movl
inc
test
aas
mov
xchg
sub
or
inc
or
or
test
add
pop
add
arpl
js
lea
sti
mov
in
and
jne
dec
sbb
fsubrs
and
xchg
push
and
mov
xchg
cmp
ja
or
scas
inc
xor
xor
cmp
je
dec
mov
dec
or
xchg
rolb
sbb
and
sete
inc
pop
jmp
aam
clc
mov
push
rcl
jecxz
cmpb
ret
add
jne
jae
movsbl
sbb
imul
jmp
sbb
lea
jmp
cmp
mov
hlt
in
pop
jmp
enter
ret
incl
call
addb
jmp
shl
or
add
inc
cmp
jl
cmpl
test
dec
mov
add
sar
add
pop
cmpsl
push
mov
pop
push
add
divb
ss
cmp
jecxz
sbb
stos
incb
lret
shr
xor
mov
push
xorb
out
inc
push
movb
xor
call
sbbb
push
jbe
cmp
stc
xor
lea
sub
pop
jbe
scas
mov
shld
lea
jb,pn
mov
add
orl
adcb
mov
sub
mov
or
jle
push
inc
mov
insb
aas
mov
fimuls
cmc
das
and
mov
jg
mov
add
dec
jne
stc
bound
mov
push
arpl
scas
test
loope
cmp
pop
aam
repnz
dec
repnz
xor
aaa
lahf
push
ret
or
loopne
movsb
lcall
jp
adc
lret
dec
scas
mov
inc
movsl
fs
lods
mov
push
orb
xchg
or
and
xor
push
dec
insl
pop
imul
jbe
cmpsl
push
xor
in
push
xor
aam
push
adc
cmp
sbb
inc
movsb
sbb
mov
mov
mov
push
repnz
sub
mov
je
and
add
inc
dec
insl
gs
je
add
aaa
dec
rorb
lock
aam
mov
out
or
test
push
sahf
pushf
push
or
push
cmp
xor
mov
pop
outsb
pop
mov
jmp
pop
add
jb
enter
push
in
jb
in
push
push
cld
fimull
pushf
push
add
push
nop
push
dec
mov
push
lea
rorl
mov
cmpl
lods
add
cmpsb
loop
jge
loopne
ss
jns
or
push
jnp
cmpsb
std
int3
sbb
loope
and
adc
int3
jae
aad
inc
jle
sub
sbb
in
mov
test
or
in
out
insl
sbb
leave
sub
mov
mov
iret
push
lahf
cmpsb
test
outsb
call
or
lds
decl
movsb
divl
popf
jnp
sub
push
fimull
or
rcll
adc
test
dec
jmp
mov
jnp
sub
mov
push
cmp
dec
or
ja
dec
push
jns
das
test
aam
and
mov
sti
add
int3
add
pop
fadds
mov
push
daa
xchg
pop
lret
je
or
or
pop
dec
addr16
push
shll
adc
aam
mov
and
xor
mov
enter
push
push
pop
aam
inc
jnp
stos
xor
mov
xorb
push
inc
cmpsb
jge
xorl
lds
aaa
mov
ds
mov
xlat
push
test
cmp
mov
pushf
mov
cmp
add
int3
int3
jno
bound
test
jno
sbb
cld
jecxz
mov
cmp
loopne
sbbl
xor
repz
je
or
cs
fdivr
adc
cmpsl
call
out
das
or
in
repnz
pop
dec
les
mov
mov
insb
cmp
mov
push
cmp
cmp
xchg
pop
and
mov
or
and
push
xchg
insb
test
add
aam
add
push
jle
rclb
rolb
add
cli
dec
aam
loope
mov
repnz
ret
cmp
jl
cwtl
loopne
fdivrl
inc
xchg
pop
pop
jge
sub
movsl
cltd
add
push
sbb
lea
sub
daa
movsbl
adc
add
ss
jg
stos
cli
decl
mov
sub
push
test
fsub
inc
jg
mov
test
sbb
lret
movb
les
push
test
addr16
inc
and
add
add
movsl
shlb
cmp
add
int
inc
dec
push
dec
sbb
nop
movsb
sti
rorb
roll
ja
inc
sub
xchg
sub
adc
fstps
jns
das
add
das
gs
inc
aas
cld
les
test
dec
dec
adc
mov
pop
adc
xchg
xor
or
jnp
inc
es
add
in
add
mov
rolb
inc
push
push
scas
inc
cmp
mov
or
pop
add
xor
shll
cmp
je
imull
and
push
pushl
pusha
mov
jnp
mov
clc
pop
mov
add
add
mov
inc
mov
movsb
pop
stos
mov
imul
inc
or
add
cmc
hlt
mov
mov
dec
mov
mov
mov
add
mov
add
movzbl
mov
inc
mov
push
call
or
aam
scas
dec
clc
sub
mov
xor
stc
sarb
sub
push
icebp
out
ja
mov
dec
xchg
add
pop
jnp
lods
add
push
mov
nop
adc
push
nop
add
or
cld
pop
push
cld
scas
push
leave
push
xor
mov
inc
call
jne
pop
xor
das
sbb
pop
mov
push
dec
call
pop
and
adc
mov
cltd
mov
test
les
jmp
jl
mov
sbb
inc
push
mov
test
add
in
dec
in
or
in
lea
xor
enter
fs
les
jle,pt
and
ret
or
pop
mov
mov
loopne
inc
push
enter
mov
aaa
fbstp
movsl
jle
lods
jae
cs
lret
push
scas
and
push
mov
mov
mov
stos
adc
mov
push
add
xor
sbb
xor
iret
into
cli
mov
jae
and
movsb
call
adcb
add
nop
xchg
and
push
push
movsb
sbb
mov
lea
mov
xlat
mov
je
in
pop
cmp
cli
mov
mov
push
jns
add
inc
mov
jbe
or
test
test
jb
cwtl
add
movsl
popa
mov
stc
sub
ss
outsl
shl
decl
enter
iret
jbe
xchg
aad
lret
subl
pop
pusha
mov
jle
add
repz
ret
stos
sbb
insl
mov
cmpsb
mov
mov
sbbb
shlb
add
inc
dec
xor
cs
push
test
push
inc
adc
nop
icebp
cmp
fwait
test
push
inc
push
and
scas
add
test
mov
ficoms
call
push
push
push
cmp
fucomi
and
scas
add
test
push
push
jmp
sbb
test
pop
ret
cmpl
enter
jno
sbb
mov
push
mov
test
mov
add
test
daa
push
or
pop
inc
call
xchg
xchg
pushf
mov
lea
sbb
mov
loop
push
push
xchg
sbb
sub
pushf
aaa
adcb
fldcw
insb
or
sbb
or
add
in
mov
into
jl
inc
inc
std
jnp
loop
cmp
xor
push
or
shll
push
sbb
or
popf
aas
mov
add
jb
movsl
sub
or
push
decl
or
add
xchg
fstps
mov
movswl
idivl
orl
inc
xchg
inc
adc
movsl
imul
and
das
sahf
lods
stos
loope
add
inc
jp
and
andb
cmpb
stos
orb
and
int3
icebp
mov
sbb
out
test
jo
mov
push
inc
enter
jo
pop
add
stos
and
inc
or
jle
movsb
ljmp
adc
rorb
push
and
xor
fstl
adc
cmp
xchg
jo
aam
enter
ss
fisubrl
push
loopne
mov
push
pusha
int3
dec
sti
test
add
lock
repz
cmpl
lods
cmp
test
scas
cmp
pop
inc
ret
mov
scas
add
push
loopne
lock
xchg
sarb
adc
mov
adc
adc
xchg
cmpsb
or
out
fdivl
mov
je
add
rdtsc
les
in
dec
jge
xchg
inc
movsl
imul
scas
jg
maxps
ds
push
ret
inc
out
mov
aas
cld
adc
dec
fwait
nop
or
pop
fidivrl
aaa
aas
push
dec
mov
jmp
in
xor
fwait
jecxz
aas
add
jne
ret
cmp
adc
inc
add
sbb
push
xchg
leave
adc
or
sub
add
and
pop
sub
and
je
jo
inc
sbb
mov
int3
push
insl
dec
and
test
xor
mov
testl
sti
dec
into
push
pop
lock
or
sbbb
into
xor
lea
mov
int3
or
adc
push
jmp
sti
mov
gs
imul
inc
loopne
or
jb
mov
nop
js
aad
dec
adcb
ret
sbb
fsub
jmp
push
aad
xchg
loopne
test
sbb
lcall
bound
push
push
add
clc
add
cmp
jne
push
xorl
mov
imul
pop
jo
mov
adc
xor
pushl
lret
call
cmp
pop
sub
loopne
testl
push
pop
push
sbb
cmp
fldt
add
sub
adc
add
cmp
push
and
cmpsl
or
cmpsb
nop
inc
rcrb
sub
bound
xor
daa
sbb
pop
clc
jne
mov
adc
outsb
adc
arpl
mov
inc
pop
leave
add
sub
pusha
pop
daa
add
rclb
or
adc
fistl
jmp
xlat
movb
push
loopne
scas
sub
adc
push
mov
xchg
push
push
call
cmp
sbb
dec
scas
dec
jmp
add
call
aaa
jecxz
ret
xchg
mov
add
rcrb
adc
sbbb
jo
or
dec
scas
push
es
jmp
add
inc
in
and
jge
aam
ret
xchg
push
push
xorb
xchg
les
or
lcall
mov
or
push
stc
sbb
cmpsl
xor
xchg
rcll
adc
and
push
push
dec
mov
dec
and
xor
xchg
lock
sub
fs
xor
jl
movb
or
dec
adcb
pop
add
scas
out
xchg
or
into
xor
arpl
imul
fldenv
push
jae
xor
xchg
out
mov
lea
repnz
pop
jmp
push
sub
in
enter
into
adc
sbb
fwait
adc
cmp
fidivl
xchg
fwait
or
jl
pop
jne
and
dec
loope
sahf
test
fcompl
mov
sub
xchg
inc
testl
push
pop
mov
or
adc
ret
sub
push
cs
or
dec
inc
add
push
or
adc
inc
mov
sub
sub
js
xor
cmpsb
dec
xor
loopne
xchg
push
movsl
sub
jae
and
inc
fiadds
and
ss
xor
add
sbb
and
lods
pop
sub
jnp
jbe
rorb
add
xor
scas
push
mov
mov
jmp
dec
fldt
push
sbb
and
popa
popa
jne
cltd
jno
and
push
ljmp
lret
aam
push
adc
aam
pop
insb
push
mov
daa
push
inc
mov
adc
or
and
jnp
mov
dec
adc
jmp
or
lahf
inc
dec
bound
popl
in
sub
sbb
or
sbb
inc
sbb
daa
ficomps
js
cmp
sub
imull
fcompl
dec
nop
sarl
call
ret
xchg
rcrl
aam
rorl
mov
in
ret
fisubs
fadds
push
lcall
xchg
push
pop
xlat
jp
push
dec
jmp
ret
ja
imul
nop
imul
jge
es
ja
lock
add
mov
lock
mov
sbb
ret
dec
mov
sub
adc
ror
rcl
call
test
ja
jb
lock
cltd
test
leave
ret
sti
push
push
je
jecxz
cli
popa
lahf
xchg
mov
push
fcompl
xor
mov
add
sub
mov
mov
jmp
add
roll
pop
add
ret
mov
and
ret
cmp
imul
gs
iret
push
rcl
sbb
lock
xchg
je
je
in
mov
push
mov
or
es
inc
clc
jo
movsl
rolb
xchg
in
pusha
cs
imul
and
inc
cmp
jb
cmp
adc
dec
inc
inc
aaa
popa
data16
rolb
xchg
rcrb
add
push
sbb
arpl
pop
cmp
dec
push
inc
adc
xchg
and
dec
inc
sub
push
add
subb
mov
in
xor
cmp
std
idiv
das
je
or
mov
cmp
addr16
je
cmp
jne
mov
or
out
or
pop
dec
lea
fdiv
jle
sarb
dec
xor
push
cmpsb
lock
ja
jmp
testb
je
testl
mov
cmp
jbe
decl
fsub
lea
stos
inc
cmp
je
sub
inc
jmp
inc
jb
mov
and
loop
xor
sbb
cltd
mov
pusha
inc
cwtl
lcall
clc
mov
jp
hlt
repnz
and
mov
add
jo
push
adc
into
or
test
mov
inc
int
push
xor
je
mov
loop
xor
cld
inc
pop
cmp
add
cmp
jne
hlt
cmpb
bound
adc
xlat
fs
les
or
jp
or
jb
mov
xchg
sub
nop
adc
gs
mov
push
push
lock
dec
mov
lea
shlb
ret
sbb
cmc
mov
xor
loopne
jne
ficoml
fsubr
popl
popl
mov
ljmpw
mov
add
jae
outsb
addl
movl
lock
shl
add
jmp
pushf
aas
insb
sti
and
dec
iret
sub
negb
jns
test
jne
xor
dec
push
cmp
adc
jg
push
call
cmp
push
fsubr
cmp
xor
cmpb
sub
andb
mov
push
add
loopne
xor
jmp
xor
jg
or
jge
jae
jae
fdivl
and
es
sub
inc
jae
jge
jle
jmp
or
jl
or
adc
pusha
xchg
test
inc
test
pop
lock
aad
aam
cmp
jbe
and
pop
arpl
outsb
xchg
and
add
je,pn
test
jne
adc
mov
or
add
push
push
and
and
jae
movb
inc
insl
loope
xor
adc
shlb
sbb
dec
sub
addr16
pop
mov
inc
rclb
data16
repz
jno
mov
inc
and
push
sbb
fiaddl
mov
shl
mov
loopne
add
daa
xchg
dec
mov
mov
cmp
mov
inc
cmpsl
mov
pushf
mov
mov
adc
lods
sbb
or
cmp
js
hlt
adc
mov
scas
out
aam
mov
push
cmp
push
sub
shll
leave
xchg
inc
int
and
stos
insb
cli
pop
ret
adc
mov
lods
sti
pop
shlb
cmpsb
mov
clc
and
mov
inc
sahf
rcl
and
movhps
adc
or
mov
test
xchg
mov
jg,pn
ja
pop
mov
in
and
and
jbe
push
sbbl
mov
out
ret
int
cli
jecxz
cltd
or
or
jp
cmp
rcrl
adc
push
mov
cmp
cmp
lret
xchg
mov
ret
inc
push
in
out
xor
mov
sarb
into
xchg
loopne
repz
jne
push
xchg
fs
je
pop
or
imul
push
andl
adcl
pop
pop
ret
nop
out
cltd
aaa
jp
inc
popa
jb
imul
sub
cmp
jecxz
inc
std
jg
mov
inc
pop
push
pop
push
movl
push
adc
dec
or
xor
mov
lahf
jbe
mov
or
add
add
cli
sub
loopne
sbb
mov
mov
mov
int3
add
aam
add
mov
ljmp
shrl
les
cmp
outsb
push
data16
outsb
je
pushl
je
push
mov
push
testl
jae
aaa
or
cmp
cmpsb
cmpl
push
nop
inc
add
cmp
int
jbe
pop
psubd
lea
inc
pop
dec
jb
pop
imul
out
sbb
xchg
pop
push
inc
fcmovbe
pop
ja
pop
mov
jbe
mov
jge
push
gs
add
inc
inc
fwait
cmp
add
xchg
pop
pop
getsec
mov
cmp
je
cmpsl
popf
push
push
popl
add
mov
stos
pop
and
add
xchg
sbb
mov
pop
je
test
dec
push
je
ficomps
inc
inc
jmp
xor
inc
xor
ror
sarb
bound
sub
add
jp
xor
push
dec
mov
inc
js
and
pop
push
sbb
push
fdivrs
adc
mov
pop
add
mov
lea
sbb
jbe
dec
pusha
addl
rol
and
adc
mov
push
pop
roll
add
sahf
rcl
iret
loopne
mov
push
aaa
les
shl
ret
add
push
add
add
pop
mov
mov
push
mov
cmp
dec
add
bound
sbb
add
pusha
sti
pusha
jb
loopne
cmp
mov
decl
shr
xchg
lret
jbe
movb
push
adcl
imul
push
flds
mov
mov
jp
sbb
push
fs
push
mull
out
inc
jo
aas
and
inc
test
sbb
js
clc
mov
mov
iret
xor
sti
sub
mulb
arpl
push
movb
push
popf
test
fndisi(8087
mov
addl
addb
xchg
xchg
add
xor
lea
ret
ds
scas
or
push
pop
insb
mov
fstpl
pusha
cmpsb
sbb
pop
or
cmp
les
in
mov
xor
push
push
xor
pushf
sbb
sub
faddp
push
cmp
daa
lret
movsl
popf
lods
data16
int3
lods
or
pop
scas
imul
orl
imul
ficomps
xchg
add
mov
and
mov
fldl
ds
cwtl
cmpl
dec
push
adc
ficompl
or
int3
push
push
lret
lods
jo
and
jne
sub
dec
imul
jge
adc
add
mov
fcmovbe
rcrl
and
js
inc
xchg
add
mov
imul
cmpsl
xor
add
inc
adc
mov
sub
fcmovu
cmpsb
andb
add
xchg
push
jmp
bound
and
push
cmp
mov
scas
addb
inc
mov
push
or
adc
jne
push
push
cmp
mov
sbb
jp
adc
add
xor
xor
test
test
dec
cmp
adc
push
adc
mov
push
repnz
mov
and
jnp
pop
mov
cmc
xchg
jne
mov
cmp
fmuls
icebp
cmpsl
lods
fwait
es
cmp
loopne
fsubrs
pop
imul
stc
filds
aas
je
cmp
push
pop
jne
xor
and
adc
push
imul
jne
sub
sbb
js
test
dec
mov
jle
push
gs
mov
and
sub
popf
xorl
adc
inc
popa
fsubrp
addr16
adc
pop
jmp
jnp
pop
orl
mov
repnz
in
sub
mov
push
sti
inc
ss
dec
lds
aam
testb
adc
int
sub
jg
add
jp
sbb
orl
xlat
in
testb
sub
decb
adc
lock
mov
and
pop
push
cmp
pop
xchg
bsf
jb
xor
sbb
pop
jmp
lret
in
pusha
push
mov
decb
insb
cmpb
or
or
ret
push
les
push
ret
mov
les
push
rclb
bound
mov
push
mov
or
adc
push
movsl
test
mov
add
inc
arpl
add
inc
mov
or
xchg
sub
fmuls
push
jno
xchg
rcll
push
push
jb
pop
cs
pop
pop
pop
sub
pusha
pusha
fs
addr16
ret
sub
adc
adc
outsl
xchg
cmp
add
lock
addb
xchg
or
stos
fs
push
add
mov
push
cmp
fbld
daa
xchg
lret
xchg
in
inc
push
cmp
jmp
push
rcll
lret
cmpb
mov
sbb
adc
push
enter
mov
push
or
inc
adc
dec
int3
push
outsb
push
lret
ljmp
in
or
push
insb
sar
pop
push
or
or
add
daa
mov
jp
dec
xor
lret
in
lock
popa
pop
outsb
scas
sbb
xbegin
pop
fidivs
xor
divps
sbb
inc
outsb
sbb
incb
or
or
mov
enter
std
pop
imul
sti
and
add
sbb
or
xchg
dec
enter
or
call
sbb
stos
jne
mov
mov
sub
test
lock
mov
ss
fstl
stc
sti
xor
sti
loopne
test
addr16
pop
push
mov
mov
inc
jae
sub
mov
dec
pop
xchg
cmpsl
xchg
inc
cmp
dec
inc
test
cmp
mov
cmp
je
or
and
push
mov
cmp
mov
dec
add
dec
add
ss
xor
dec
in
in
and
or
je
add
sbb
mov
adc
push
add
cmpb
sbb
sbb
sbb
mov
cmp
and
shl
je
push
pop
sahf
pop
bound
adcl
pushf
add
pop
sbb
pop
add
push
sbb
ret
cmp
rclb
in
mov
test
sbb
sub
sbb
adc
ds
xorb
push
xorb
cmpsb
imul
mov
mov
mov
cmp
jne
or
jl
push
rorb
mov
cmp
pop
lcall
sbb
loope
test
test
je
sub
out
or
daa
cs
jae
js
lods
fcmovnb
push
sbb
and
add
and
notb
adc
sbb
xchg
mov
ret
or
inc
push
nop
mov
xchg
out
cmp
mov
hlt
in
subb
or
add
insb
ret
mov
aam
push
cmpsl
inc
cltd
mov
jge
jge
je
divb
push
xor
jle
or
push
inc
add
or
adc
mov
push
add
push
cld
mov
xor
inc
cmp
lea
jns
adc
inc
hlt
mov
lock
add
cli
hlt
pop
je
mov
pusha
add
dec
mov
sti
cmpsl
lock
loop
inc
inc
mov
cmp
ljmp
hlt
mov
test
add
push
pop
jb
and
xor
add
arpl
and
cmc
add
nop
icebp
int3
mov
jge
in
xor
mov
and
int3
aas
mov
sbbb
insl
sub
clc
lock
popa
lea
jo
add
cmpsl
mov
jmp
outsl
cmpl
int
and
push
pop
sahf
insl
mov
js
jne
ficoml
add
push
push
rclb
hlt
adc
call
rolb
aam
das
je
mov
jle
out
pop
and
mov
mov
pusha
xchg
inc
push
scas
xchg
push
cmpb
sbb
mov
jns
popa
lcall
and
mov
sub
movsl
xchg
call
cmp
add
or
sbb
sbb
mov
es
jmp
imul
push
pop
sbb
dec
or
sub
repnz
pop
push
test
pusha
es
inc
jo
mov
je
adc
bound
adc
cmp
mov
and
dec
hlt
decb
jmp
sub
push
push
or
sti
in
arpl
jp
mov
push
loopne
add
adc
lods
in
dec
cmp
mov
adc
adc
and
pop
and
add
jo
in
and
insb
xchg
sti
out
inc
pop
push
dec
addr16
rcrl
mov
cmp
cmc
loop
or
dec
jne
jns
pushf
cmp
add
lea
sbb
daa
adcb
jg
jbe
push
loopne
adc
in
shr
mov
and
cmpl
and
aas
int
bound
adc
mov
in
shlb
and
jb
fdivrs
into
jae
dec
adc
and
sub
in
cmp
shlb
add
fldt
mov
add
push
scas
mov
jmp
roll
xor
xchg
arpl
rcrl
xlat
push
fistl
push
mov
fs
fs
sbb
cmc
daa
pop
adc
filds
test
das
pusha
inc
cmp
cmpsb
push
testb
loope
pop
pop
xchg
mov
inc
push
clc
sbb
add
and
mov
adc
mov
mov
repz
cmp
sti
pop
movl
sbb
sbb
xchg
sarl
mov
imul
subl
xchg
xor
lea
mov
push
out
jge
sub
jge
test
in
out
fmuls
stos
ret
imul
mov
add
cmp
and
sub
jmp
add
lods
dec
clc
inc
push
cmc
cmp
jns
and
inc
out
cs
test
push
push
xor
dec
jbe
mov
jne
mov
jmp
push
adc
out
mov
jne
or
add
cltd
pop
int3
or
mov
or
jl
and
sbb
mov
and
push
sbb
addr16
hlt
sub
sbb
mov
dec
aas
nop
xor
add
data16
sbb
lea
mov
out
inc
inc
pop
or
adc
inc
add
inc
rorl
stos
inc
call
jb
repnz
fstp
pop
cmp
xlat
mov
or
jae
enter
sbb
popa
pop
leave
sub
jmp
mov
cmp
mov
pop
push
push
cs
test
shrl
sahf
fdivs
jo
jns
imulb
mov
jo
inc
jnp
jmp
push
or
dec
test
adc
mov
cmp
call
fcoml
xor
inc
ss
jge
add
jle
jne
or
pop
xchg
aam
dec
nop
push
add
cmp
pop
or
push
mov
mov
mov
xchg
mov
inc
loop
aaa
test
ret
pushl
push
add
fcmove
loope
ja
cmpsl
mov
add
iret
add
clc
mov
repnz
dec
inc
pop
into
cmp
inc
stos
ds
loopne
push
pusha
xchg
mov
cmp
inc
data16
xchg
nop
add
add
stos
or
mov
mov
mov
dec
cmp
insl
mov
sbb
pop
movsl
lock
dec
loopne
ret
and
stos
or
inc
mov
dec
pop
pop
andb
aaa
or
decl
sbb
adc
lods
push
addb
cmp
or
in
xor
scas
sub
pop
out
or
bound
push
rolb
inc
push
mov
cld
sbb
mov
and
mov
stos
test
xor
movsb
shrb
das
mov
jbe
gs
loopne
xchg
or
jle
push
lds
add
xlat
data16
sub
loopne
push
hlt
push
leave
cld
adc
push
mov
sub
push
outsl
adcb
iret
or
cmpsb
inc
xor
pop
nop
push
cmp
jnp
test
add
popa
adc
pop
shll
dec
in
push
inc
imul
aaa
jbe
push
fcomp
ljmp
push
pop
sbb
adc
or
xchg
in
addl
lock
mov
pop
lea
mov
inc
sub
and
inc
fidivl
rclb
ret
add
xchg
bound
add
test
adc
dec
sbb
xor
stos
push
xor
cmp
and
or
xchg
pop
cmp
pop
bound
aam
push
add
push
inc
sbb
add
pop
xchg
mov
xor
and
add
and
imul
insb
inc
xor
add
rcrb
inc
add
pop
js
push
mov
jbe
cs
jne
loope
or
pop
push
lret
leave
or
or
ss
push
sbb
mov
pop
ret
cmp
push
scas
popf
or
loope
xor
mov
or
aam
add
xorb
pop
pop
or
xchg
and
mov
loop
jecxz
stos
outsl
xchg
nop
xlat
aam
xor
leave
xchg
mov
xor
mov
or
mov
scas
or
sbb
or
lret
rcrl
adc
push
roll
jge
insl
jecxz
or
dec
das
cmpsb
mov
pop
leave
mov
push
aam
imul
xchg
test
fsubr
and
icebp
pop
movl
and
rclb
lret
sub
push
mov
aad
movsl
test
scas
or
data16
inc
sbb
sbbb
mov
or
sbbb
push
inc
daa
pop
inc
movsl
imul
jmp
adc
xor
rolb
arpl
and
pushf
sub
or
xor
jp
ret
dec
and
in
dec
sbb
sub
outsb
call
fcomi
and
popf
and
add
fsts
fsubl
mov
inc
jnp
cmp
lret
addps
pop
aam
rolb
in
cltd
or
stos
imul
daa
in
or
jbe
scas
test
mulb
add
lret
lods
pop
push
sub
dec
aam
mov
pop
shrb
adc
aaa
push
aas
out
pop
dec
pop
jae
scas
push
push
adc
subl
sbb
adc
lea
sbb
gs
mov
pop
lret
filds
movsb
xor
mov
xor
adc
push
jmp
jmp
push
push
roll
add
fwait
lcall
pop
cmp
inc
pop
popf
repz
dec
enter
jge
fnstsw
loop
push
mov
test
stos
loope
adc
in
lea
les
sbb
lret
sbb
int
or
push
les
mov
outsb
cli
das
push
in
mov
cmpl
jne
adc
sbb
and
mov
insl
test
insb
and
sbb
pop
ss
pushf
dec
pop
pop
xchg
pusha
fs
cltd
cli
mov
inc
lods
add
dec
lods
or
fldcw
cmc
inc
shlb
lds
std
push
xor
or
test
cmp
hlt
nop
mov
cltd
jmp
and
lcall
and
push
fcompl
or
sub
loopne
pop
movsb
imul
sub
dec
fsubl
mov
or
or
or
adc
push
xchg
add
clc
adc
mov
lods
scas
jge
bound
xchg
mov
mov
adc
cmp
xchg
adc
rorb
mov
sbb
adc
rolb
or
ds
xchg
jmp
andb
std
insb
jle
pop
add
push
aas
jle
dec
cmp
inc
loopne
fisttps
inc
rcrb
bound
xor
fistpll
cmc
ror
aam
sahf
pop
jbe,pn
test
neg
jne
ret
mov
push
push
sarb
add
adc
mov
shll
shrl
add
mov
les
push
dec
adc
mov
cmp
orl
mov
cmp
jne
cmp
push
rcrb
adc
xchg
outsb
mov
or
adcl
sbb
mov
jge
add
sarl
push
cs
lds
outsb
imul
xorb
mov
js
mov
add
add
mov
sbb
xchg
dec
incl
cmp
and
aas
sbb
rcll
scas
push
add
jmp
mov
aaa
adc
fbstp
cwtl
pop
mov
pop
ja
xchg
add
push
mov
sbb
lods
sub
test
jo
popf
ret
mov
cltd
cltd
push
or
shlb
dec
and
sub
fsts
or
adc
mulb
pop
insb
cmp
mov
mov
pushf
mov
sbb
fs
bound
into
push
push
mov
lock
ret
mov
cmp
cmp
jp
je
test
leave
inc
addr16
and
and
jmp
int
ret
and
and
fldt
inc
leave
or
sbb
in
add
mov
mov
mov
inc
sub
inc
hlt
sar
stos
outsb
mov
sub
rcrb
jbe
sub
add
add
das
movsb
or
or
push
add
xor
ljmp
xchg
push
inc
push
sarb
dec
cmp
loop
jb
jnp
js
aam
or
je
rorl
push
or
rorb
jo
mov
in
mov
pop
gs
bound
cmp
push
pop
cwtl
add
hlt
pop
mov
ds
jne
mov
je
hlt
sub
add
jne
jne
out
xor
jp
fadds
mov
imul
pop
orl
dec
add
add
sbb
mov
jo
cmp
mov
or
sub
cli
or
out
orb
adc
inc
add
pop
push
sub
fsubs
add
inc
sbb
dec
add
adc
push
loope
imul
and
mov
push
enter
jae
leave
and
inc
pop
inc
shrb
xor
jns
sbb
jmp
fs
cld
and
mov
cmp
ss
ds
daa
inc
push
push
cs
dec
xchg
enter
lahf
or
aaa
push
inc
insl
js
clc
mov
mov
xor
dec
mov
adc
add
ficoms
adc
nop
adc
adc
xor
and
inc
es
adc
adc
push
adc
xchg
int3
sarb
add
aaa
icebp
jne
iret
mov
std
adcl
push
mov
cmpw
je
jnp
mov
shlb
mov
sbb
in
push
inc
or
or
test
leave
push
cmp
scas
fwait
out
add
int3
js
cmp
pop
mov
scas
jo
jo
inc
sub
xchg
add
les
inc
jo
test
in
popf
mov
cs
jmp
cmp
and
das
jmp
cmp
pop
add
mov
mov
cmp
bound
mov
cmp
push
movsb
andb
nop
push
mov
adc
mov
lea
popf
lea
mov
data16
add
fists
mov
mov
jmp
xchg
dec
mov
sub
andb
add
xor
add
adc
aaa
loopne
mov
xor
xor
sahf
mov
popf
push
stos
dec
adc
pop
into
push
ja
mov
addl
in
loope
jb
call
outsb
adc
dec
pushf
jmp
lods
ss
and
lea
aad
jb
add
popf
push
push
fdivl
leave
add
jmp
push
clc
push
sub
mov
rcll
call
mov
hlt
cld
mov
sbbl
out
lods
add
aam
mov
push
mov
cmp
clc
push
in
push
adc
pop
js
loope
lret
xor
dec
cmp
lea
cmpsb
pop
add
test
inc
and
jnp
ret
mov
sub
mov
popa
xor
rcl
and
lret
pop
cmp
fdivs
lods
std
mov
inc
test
in
arpl
ret
or
rcl
movsb
test
lock
or
iret
sub
sti
jmp
mov
mov
orl
xor
cs
lea
rcrl
ja
jecxz
cld
cmc
in
pop
xchg
repnz
pop
or
sub
dec
inc
or
or
dec
push
jns
push
push
inc
sbb
or
add
popf
mov
push
pop
pop
push
add
int3
cmc
adc
lea
or
pop
and
daa
arpl
jp
frstor
bound
pop
push
in
and
adc
fsin
xchg
mov
add
mov
notb
sti
insb
enter
push
addl
xchg
lcall
stos
iret
dec
test
lea
add
jbe
and
test
sbb
adc
xor
cmpsl
push
jae
pop
mov
popf
mov
jmp
movups
cmp
sub
pop
gs
cmp
fisttpl
jb
push
inc
or
jle
decb
int
xor
repnz
cmp
data16
add
popf
daa
add
pop
outsb
jno
or
inc
test
or
push
mov
adcl
in
sar
loope
dec
adc
roll
push
push
mov
cmpl
sbb
in
pop
push
mov
sbb
add
or
ds
sub
fdivrs
sbbb
dec
ret
gs
lret
pop
rorl
aad
adcb
push
int
pop
jmp
test
fs
aaa
les
mov
arpl
ljmp
out
adc
std
jbe
push
faddl
popa
dec
pop
lock
cmp
pop
add
xor
mov
jle
mov
pop
add
sbb
outsb
sbb
xor
in
mov
xor
and
cmpsl
dec
jne
test
or
pop
enter
lods
popf
leave
ret
sbb
ljmp
lds
add
sub
jne
add
inc
bound
push
pop
xor
jle
xor
mov
aam
addr16
icebp
fmuls
pop
inc
push
mov
mov
inc
test
shufps
call
mov
jge
outsb
pushl
mov
imul
stos
add
mov
mov
andl
lea
or
push
mov
imul
pop
cmp
loopne
push
adc
mov
aaa
rcl
iret
pushf
mov
xlat
mov
in
push
ds
sbb
push
adc
cmpsl
push
push
add
mov
mov
cmpsb
dec
inc
es
inc
sarl
add
imul
lock
push
mov
bound
add
dec
cld
test
pop
incl
hlt
ret
inc
mov
in
mov
stos
aaa
and
std
adc
mov
shll
rorl
hlt
push
fstpl
pop
xchg
mov
pop
bound
fs
or
incl
push
add
fwait
leave
rolb
pop
add
ret
mov
xorb
add
add
pop
and
pop
xor
add
cld
and
adc
lea
rolb
maxps
pop
movsl
inc
outsb
jmp
jmp
icebp
inc
cmp
sub
push
xchg
mov
nop
int3
movsb
in
add
mov
sub
jae
or
ljmp
mov
mov
loopne
jmp
enter
inc
orl
mov
shrb
das
ljmp
in
jp
mov
add
in
jae
lea
jmp
sbb
or
je
inc
cmp
jbe
mov
push
je
adc
dec
push
sbb
or
in
fmull
jbe
jmp
xchg
sbb
pusha
or
sbb
mov
loop
dec
or
fwait
shlb
adc
xchg
cmc
into
stos
mov
add
inc
fsts
xchg
jns
imul
pop
lcall
sbbb
pop
inc
xor
pusha
add
loopne
inc
inc
jo
pop
xchg
cmp
sti
adc
out
push
arpl
cmpsl
jns
das
jb
aaa
rol
pop
addr16
xor
popf
sbb
xor
es
cmp
sti
add
in
ret
dec
pusha
lods
or
inc
inc
xchg
add
mov
xor
call
mov
sbb
cmp
je
movsb
pop
mov
push
fnstsw
jge
add
cmc
nop
pop
int3
repz
mov
mov
sub
jne
and
mov
insb
cltd
jecxz
adc
inc
icebp
inc
sti
stos
or
addb
cwtl
out
icebp
inc
xchg
out
xchg
sbb
mov
mov
cmp
xchg
js
add
test
xchg
lds
lahf
pop
test
test
arpl
test
or
add
pop
adc
pop
mov
bound
xor
popa
mov
dec
jb
insl
cli
out
out
jmp
xor
add
fcmovnu
adc
or
jp
jno
or
and
inc
addl
jno
nop
mov
add
movsl
or
add
mov
std
cmp
leave
enter
adc
or
nop
add
and
mov
pop
pop
cmpl
int3
push
or
movsb
inc
fldenv
add
xor
xchg
push
pushf
sbb
mov
loop
hlt
push
xchg
dec
lret
lock
adc
adc
shll
mov
jmp
jns
inc
push
movsb
xchg
imul
das
add
push
test
jb
testb
adc
adc
lahf
xor
cwtl
aam
sbb
ja
pop
or
jnp
cmp
and
cmp
data16
jo
and
ss
cmp
insl
jbe
or
je
test
dec
mov
fimull
mov
push
test
dec
inc
lret
jle
add
aaa
sub
mov
cld
cmp
stos
adc
xchg
pusha
dec
and
dec
push
push
imul
mov
and
jns
loop
mov
lds
xor
mov
pop
mov
and
cmp
add
cmp
call
and
mov
bound
xor
test
adc
ucomiss
loopne
fnstenv
mov
sbb
fcmovu
adc
stc
repz
cld
fdivs
adc
jae
dec
inc
mov
mov
scas
out
or
fstl
pop
call
mov
loop
cmp
sub
in
jge
mov
outsl
or
dec
or
lock
pop
cs
test
or
pusha
pop
loope
pop
push
and
mov
push
hlt
neg
sbb
and
bnd
loop
idivb
mov
push
sub
push
adc
test
or
cmp
outsl
les
add
js
out
ljmp
jns
xchg
xor
shrb
sbb
sbb
mov
outsl
insl
pop
pop
in
insb
fistpl
adc
mov
in
mov
jb
add
cmp
jbe
or
hlt
ficomps
icebp
jne
push
lds
dec
add
and
pop
jle,pn
sti
jmp
std
gs
mov
jp
das
data16
push
out
push
fcmovnb
xchg
popa
inc
cmc
fwait
loopne
shr
mov
jno
or
add
icebp
loopne
inc
or
call
data16
jp
mov
cwtl
dec
sub
sbb
mov
sub
stc
jne
pop
loope
add
lea
push
cmovns
cmp
push
mov
pop
ljmp
or
popa
sub
add
and
sbb
lods
cltd
and
add
lea
push
pusha
mov
shl
outsl
shlb
gs
jnp
dec
sub
ret
jnp
ficoml
push
mov
and
rclb
fnstenv
inc
adc
inc
orb
sub
sub
lea
add
or
andl
leave
ret
jmp
dec
push
add
pop
sbb
inc
pop
pop
cmp
adc
xchg
shll
push
or
dec
xlat
aas
arpl
lods
movsb
loop
cmp
popf
add
div
jle
ljmp
pop
xor
or
lods
out
jbe
cmpl
xor
xor
dec
inc
pushf
mov
push
out
pop
cli
sbb
shr
hlt
sarl
mov
push
sub
sbb
xor
and
outsb
mov
and
cld
cmp
movsb
push
inc
call
push
inc
clc
aad
jmp
lahf
out
push
fcoms
adc
xchg
sbb
inc
ret
arpl
pusha
addr16
mov
jb
addr16
je
mov
push
cmp
cld
mov
shll
adc
mov
cmp
in
inc
scas
mov
or
mov
inc
in
jb
push
jae
pushf
insb
cmp
fsubrs
jbe
add
ret
fdivs
sbb
js
rcrl
int3
cmp
cmp
loopne
out
add
idivb
xchg
push
push
inc
jge
in
push
add
fsubrl
adc
cmp
lods
push
cmpsl
dec
lcall
xor
fadds
push
adcl
mov
popf
call
pushf
jmp
sbb
and
add
or
ds
mov
cltd
adc
mov
mov
jmp
push
jns
add
pushf
call
mov
fstps
addr16
mov
sarb
inc
cmp
repz
je
dec
add
jle
test
adc
fsubl
xchg
lea
dec
xor
popf
dec
call
lret
enter
roll
arpl
fdivl
or
scas
xor
and
lock
sbb
add
pop
xlat
cmp
aas
repz
loopne
ficoms
mov
push
call
mov
and
or
cmpb
popa
shl
mov
adc
or
xchg
push
adc
add
inc
sub
sbb
arpl
push
xchg
sbb
inc
mov
mov
fsin
mov
xchg
insl
je
mov
mov
rclb
add
sti
clc
cltd
pop
lods
xchg
in
xor
in
push
into
or
add
push
sahf
gs
pushf
aam
loopne
pop
mov
call
popf
sbb
fdivl
lea
jo
push
sbb
dec
jle
cltd
mov
pop
es
xchg
in
push
or
jno
xor
ds
or
cmp
orb
fucomi
mov
xchg
out
repnz
fdivrs
cmp
mov
cli
and
add
ret
jle
dec
pushl
dec
pop
jno
pop
mov
dec
sub
mov
or
sahf
rcll
and
xchg
add
fisttps
cmp
adc
mov
mov
jae
pop
jnp
sti
jb
mov
and
cmp
test
ret
enter
or
pop
call
xor
xor
add
pushf
xor
je
xor
mov
add
sub
cmp
mov
or
mov
js
adc
add
xor
inc
dec
ja
cmpb
jne
rcr
push
fidivl
dec
out
sar
movsl
gs
test
rolb
in
dec
call
out
fstps
pop
mov
lea
out
xor
sbb
push
fmulp
pop
push
dec
or
dec
mov
loope
xchg
lea
lea
push
mov
mov
jae
leave
jmp
push
inc
sub
and
push
add
sbb
mov
dec
shl
push
xchg
adc
sbb
push
adc
add
jo
mov
dec
pop
movsb
loope
push
add
push
pop
cmpsb
pop
xchg
ficoml
rclb
push
fwait
and
je
xor
dec
mov
sbb
mov
jae
adc
add
adc
fisubs
testb
mov
cli
adc
in
sub
inc
push
lods
inc
lods
dec
lods
push
add
xchg
scas
jne
lret
jge
sbb
push
lea
cmp
jle
movsl
mov
inc
or
add
xchg
imul
test
imul
or
fsub
add
or
add
add
xor
testl
jns
in
adc
lahf
mov
and
pop
add
sub
xor
push
jmp
mov
cld
sbb
mov
dec
or
sbb
mov
sub
jne
adc
pop
movsl
sbb
sbb
adcb
and
data16
xor
into
dec
cmp
aam
xor
fwait
add
rorb
adc
mov
loop
adc
mov
je
xchg
jne
imul
mov
orl
or
repz
incl
add
xchg
sbb
cld
jmp
sldt
mov
jne
dec
add
mov
outsl
sub
icebp
mov
add
pop
xor
pop
scas
adc
push
mov
daa
bnd
mov
jle
in
xchg
js
cmp
push
cmpb
ret
push
jae
rorb
push
sub
sbb
inc
push
test
stos
scas
inc
es
loope
or
pop
ret
mov
lcall
add
loopne
xor
lret
sbb
sbb
leave
pusha
loopne
popa
jmp
fdivl
cmpb
mov
cmp
jae
inc
jmp
push
cmp
cmp
sub
aam
leave
push
stos
scas
lea
adc
test
loope
test
sub
inc
cltd
mov
push
jge
outsb
lcall
ret
sub
or
add
adc
call
mov
mov
out
insb
testb
imul
mov
in
rorl
fs
push
push
sti
sbb
mov
push
pop
pop
out
dec
mov
and
pop
push
in
mov
push
test
xchg
push
adc
lock
lea
loope
ret
mov
lret
jecxz
lret
pushf
mov
adcl
mov
negb
mov
push
aad
xor
mov
sub
mov
insb
adc
cltd
add
push
push
sti
popa
xor
or
sbb
je
xor
xchg
cmp
pop
fdivrl
add
sub
lea
lret
mov
call
adc
cmc
andl
jo
hlt
fimull
adc
and
push
testb
or
add
add
and
adc
nop
xchg
pop
fbstp
or
xor
sbb
outsb
clc
jne
jno
and
push
es
imul
jbe
inc
add
test
add
stc
stos
push
add
cwtl
lret
addr16
imul
imul
imul
mov
add
sbb
call
js
rcrl
mov
add
in
lea
scas
dec
xor
sbb
inc
or
push
adc
xor
flds
jmp
lds
mov
rcll
jnp
dec
nop
sarl
dec
push
jge
and
scas
add
cmp
adc
push
add
jmp
xor
push
pop
sub
data16
and
mov
add
daa
dec
fisttpl
jo
loopne
cmp
hlt
in
mov
movaps
pop
add
cs
or
add
cmp
xchg
js
imull
jmp
nop
xchg
jbe
cmp
popa
daa
push
ret
mov
jle
std
dec
cmpl
pushl
orb
or
mov
jo
adcl
xchg
movsl
sub
andb
sbb
rorb
mov
pop
adc
add
jno
popl
call
jae
cmp
ret
sub
or
adc
or
aas
cmp
sub
mov
fsubrs
cli
lods
hlt
dec
std
cmpsl
mov
mov
sub
aam
or
add
mov
adc
test
and
in
dec
icebp
and
push
push
xchg
push
in
sub
dec
inc
dec
imul
scas
repz
adc
or
inc
lods
jns
mov
dec
sub
cmp
jmp
call
sub
daa
sbb
dec
inc
dec
ja
outsl
mov
adc
dec
and
and
xor
pop
sbb
push
sbb
loope
inc
ret
push
xchg
mov
inc
inc
ret
mov
push
insb
and
push
sub
xchg
out
mov
rolb
or
or
cmpsb
lret
push
dec
aad
mov
or
adc
sbb
es
loopne
add
jnp
sub
mov
sbb
loopne
add
add
jne
dec
xor
jne
aad
dec
dec
leave
lea
in
cwtl
rcl
outsb
or
xor
ja
pusha
jbe
rclb
inc
aad
stos
popf
add
jb
or
sti
add
or
push
loope
sub
stc
pop
es
jmp
movsb
cltd
cld
lcall
aam
pop
jno
fimuls
cmpl
jo
test
stos
adc
adc
test
adc
out
mov
push
or
sbb
add
jne
sbb
or
incl
lock
xchg
lcall
add
sub
xor
sbb
or
xor
test
xor
fs
jmp
mov
dec
xchg
add
xchg
adc
jae
cmp
mov
mov
mov
jmp
dec
jo
lcall
pushf
inc
dec
out
pop
adc
pop
fwait
ret
mov
popf
pushf
adcb
loope
push
out
mov
hlt
outsl
js
push
push
or
pop
nop
adc
dec
pushf
add
xabort
hlt
movzwl
test
je
test
dec
aas
or
nop
or
jo
loopne
loope
loop
pop
js
test
push
mov
xchg
dec
scas
imul
or
call
mov
add
pop
das
jmp
cmp
push
pushl
push
push
mov
mov
add
daa
fdivrl
sub
push
imul
adc
rorb
mov
cs
sbb
add
add
pop
xchg
and
push
shrb
mov
lock
dec
js
cmc
je
jo
and
fistpl
add
aad
push
push
add
inc
add
jne
xor
in
dec
inc
mov
xchg
rcrb
cmp
pop
xchg
adc
cs
mov
fnsave
addr16
adc
pop
jle
cmp
ds
mov
in
mov
xlat
int3
stos
sbb
jo
sbb
pop
sbb
push
nop
leave
popf
fsubrl
movsl
pusha
nop
lods
sub
or
test
push
jmp
sub
add
out
inc
jmp
push
cmp
xchg
fsubrp
stos
or
mov
outsl
sbb
je
jecxz
outsl
pusha
sub
test
movsl
test
test
push
xor
rorl
mov
repz
ud2
pop
add
cld
push
pop
loope
adc
cld
js
insb
push
negb
mov
add
sti
dec
sub
xor
xor
and
stos
addl
push
sub
imul
mov
mov
sbb
push
push
sbb
sub
clc
popa
mov
adc
push
xor
scas
cs
and
loopne
and
xorb
mov
cmp
sub
cmp
mov
mov
cmp
jmp
mov
cmpsl
loope
push
pop
jl
int3
mov
fldl
cmp
call
enter
testl
add
dec
add
test
and
sub
int
fmuls
cmp
mov
ja
xorl
sar
xor
sub
push
sub
push
stos
movsl
jg
push
dec
add
inc
or
mov
enter
arpl
or
mov
je
notl
subb
pop
call
repnz
xchg
les
mov
cwtl
dec
aaa
cltd
fiaddl
push
cli
push
push
dec
notb
adc
js
push
push
ljmp
add
test
outsl
orl
insb
test
loope
out
push
data16
mov
jmp
into
out
add
in
loope
roll
sbbb
xor
mov
push
cmp
xor
fwait
ret
push
and
mov
push
xor
add
and
inc
mov
xor
dec
test
and
jl
mov
leave
cwtl
test
es
pop
rorb
xor
into
ss
cmpsb
xor
pop
out
outsl
jecxz
cwtl
jmp
pop
adc
rolb
mov
sub
adc
fcomp
fsubs
inc
add
jmp
sub
add
dec
add
out
dec
push
xchg
rorl
dec
in
xor
or
cmp
adc
sub
pop
stos
and
iret
mov
or
pop
add
rcll
adc
sarb
in
xlat
sub
push
js
je
mov
les
outsb
sarb
xor
imul
xchg
xor
in
jb
add
push
push
and
sub
sub
leave
add
xchg
xchg
outsb
inc
in
sbb
dec
and
xchg
inc
xchg
add
js
loopne
push
lds
test
and
sbb
jo
xchg
lods
push
aad
lcall
cmp
in
mov
pushl
sub
lock
mov
push
ret
sbb
push
dec
inc
rorl
loopne
test
pusha
pop
xchg
sbb
xchg
xchg
inc
in
jmp
jnp
mov
in
aaa
dec
mov
inc
adc
cmp
jmp
loop
push
dec
enter
inc
aaa
dec
xchg
inc
dec
push
mov
insl
inc
adc
xor
mov
sbb
jle
pop
lods
pop
loop
and
or
aam
mov
mov
test
hlt
adc
jge
ffreep
test
add
cmc
int3
lret
lret
rcll
or
jge
mov
and
popf
push
mov
or
jl
fwait
pop
and
jne
adc
or
pop
xchg
shrb
or
pop
mov
pop
lods
or
jne
imul
pushl
jae
pushf
int3
enter
int3
daa
fsubp
sbb
popf
xor
fists
lahf
ja
lock
cmp
jle
lea
add
mov
lret
clc
push
mov
mov
mov
insl
repnz
cmpsl
mov
push
popa
inc
add
ficoms
or
daa
dec
aad
insl
lods
add
xchg
rorb
push
lock
mov
xchg
push
push
loopne
movsb
inc
mov
jge
push
mov
xchg
sub
mov
ja
lret
push
cmp
ficoml
push
mov
test
mov
inc
insb
imul
outsl
jp
or
mov
into
pop
mov
sbb
addr16
cmp
lcall
inc
test
ja
pop
or
aas
leave
rolb
jg
and
pop
sbb
sub
ret
pusha
pop
mov
loop
rcll
cmp
push
add
jmp
sbb
daa
adc
lret
cmp
sub
adc
mov
add
das
pop
xchg
hlt
push
xchg
and
aam
push
rolb
xchg
sbb
repnz
andb
andl
mov
sbb
rolb
push
jne
dec
push
fidivl
cli
or
pop
sub
sbb
jne
out
sarb
dec
push
arpl
xchg
push
je
xor
outsl
sbb
xor
insb
jne
data16
jne
scas
aaa
test
xchg
clc
sarb
inc
mov
jo
fisubrs
and
fdivs
jge
add
or
in
push
cmp
or
adc
popf
and
je
test
cld
sbb
add
cmp
rclb
jmp
loopne
fistl
aad
jnp
push
cmp
push
imul
idivb
jl
mov
mov
loope
cmp
lret
jae
mov
outsb
ficoms
sbb
mov
push
cmc
push
fs
lds
push
fcompl
and
sbb
jns
movsb
cmpsb
loopne
outsl
fdivl
dec
cmp
push
jecxz
outsb
stc
mov
loopne
adc
ja
mov
or
lock
jno
loopne
pop
movsl
stos
cmp
insb
push
xor
adc
dec
sub
add
dec
add
mov
fstps
lock
dec
repz
and
jl
es
add
cmpb
and
sbb
or
push
cltd
loopne
ja
jb
and
test
jb
mov
push
xor
cs
cmp
add
pop
push
pop
dec
mov
nop
dec
or
mov
inc
adc
adc
dec
lea
inc
adc
xor
imul
add
pusha
fs
insb
jo
js
mov
sarb
fisttpl
fsubr
push
or
inc
xchg
cmpsb
cwtl
add
andl
jo
sub
mov
dec
int3
mov
pop
jecxz
mov
sbbl
movl
mov
loopne
nop
in
cmp
std
jle
movb
sbb
xor
push
mov
sbb
xor
push
fadds
sbb
or
sbb
add
nop
je
insb
sbb
pusha
sbb
add
cmp
negb
jo
lret
adc
ret
pop
push
mov
loopne
dec
xor
cmp
add
pop
sbb
xchg
adc
adc
push
mov
dec
jo
lea
mov
sbb
mov
pushf
sub
xor
pop
adc
inc
xchg
mov
add
adcl
adc
inc
aam
add
mov
orl
clc
lea
xchg
andb
push
sub
cmp
xor
adc
inc
sbb
rorb
dec
cmp
and
sbb
xor
mov
ret
pushl
in
or
push
xchg
or
out
xor
pop
mov
test
loopne
repz
push
shld
mov
and
sub
and
inc
sub
loopne
sub
add
shl
ret
mov
add
rclb
mov
pusha
and
push
push
mov
xor
cs
jo
jne
das
xorl
out
clc
cmpsb
fildl
sub
lock
daa
inc
dec
adc
imul
lcall
test
mov
xchg
add
sti
mov
insl
add
das
pop
movsl
push
jns
stc
fldl
leave
dec
ja
sar
lds
add
lods
cmp
sub
sub
sub
mov
push
mov
les
mov
dec
negl
add
idiv
push
jne
mov
sub
mov
xchg
and
add
xchg
push
cmp
pop
adcb
xorl
inc
xchg
ja
fwait
mov
pop
adc
hlt
cld
dec
xlat
or
xchg
dec
mov
add
loope
and
jnp
adc
into
js
fwait
dec
ret
push
testb
xchg
mov
xchg
sbb
pop
repnz
add
dec
cmp
push
push
inc
push
dec
xor
shlb
jbe
push
scas
popf
lock
mov
xchg
xor
cli
out
fidivrs
and
adc
jnp
shlb
lods
pop
mov
pop
test
dec
ljmp
add
add
adc
push
push
pop
jns
push
add
pop
and
das
push
and
fdivrl
pop
xorl
pop
xor
fstps
sub
jb
rcrl
and
or
push
or
fisubl
cmp
sbb
sub
mov
jl
mov
mov
lock
sbb
lea
mov
mov
outsb
stos
jnp
jg
bound
pushl
and
pop
out
mov
mov
adc
outsb
or
dec
int3
lock
xchg
ret
lock
lock
jne
or
cmovle
mov
je
mov
or
fs
pusha
enter
insb
insb
push
push
jo
shl
xor
pop
pop
lds
idivl
adc
nop
clc
cwtl
push
xchg
imul
pop
cmp
je
popf
add
orb
or
lcall
pushf
roll
out
shlb
cmp
lea
lds
sti
push
sub
inc
and
adc
adc
jmp
push
jne
mov
dec
rcl
inc
xor
cmpsb
movsl
mov
lock
jb
rcll
lock
mov
push
dec
jmp
popf
push
test
push
push
pop
adc
adc
add
jg
xchg
sbb
clc
in
cmp
movsl
movswl
in
push
mov
xor
cli
add
add
push
and
rclb
sbbb
movsb
sub
mov
sbb
inc
rorl
push
flds
pop
adcl
push
push
test
sbb
mov
mov
mov
and
push
pop
and
and
dec
fadds
jl
sbb
cmpsl
mov
xorb
adc
xchg
add
nop
cmpsb
subl
jns
push
sbb
adcl
insb
lods
cmp
jne
push
test
popa
lahf
add
ficoml
and
mov
int3
cs
mov
mov
cmp
testl
aas
jne
outsb
fdivl
fldl
movsb
xor
shrb
loopne
cmp
mov
imulb
mov
xchg
pushf
cwtl
sbb
add
jg
sub
mov
cmp
adc
add
and
loopne
xchg
push
and
and
push
lea
push
or
fsub
add
push
or
xor
addr16
popfw
xchg
pusha
fdivp
adc
fs
xchg
jbe
xchg
or
and
les
mov
rol
add
push
pop
xor
fs
pop
or
std
sbb
mov
mov
loop
pop
arpl
mov
test
icebp
adc
popa
cmp
fdiv
jmp
cmp
or
push
jbe
jp
cmp
clc
pop
add
mov
dec
jmp
fdivrs
test
cmp
fdivs
movsl
sub
divb
add
push
ret
jge
int3
mov
lods
dec
sbb
add
mov
xor
jbe
and
push
mov
adc
or
mov
mov
inc
xor
mov
pop
out
ss
inc
jmp
pop
and
xchg
push
sub
iret
mov
add
pushf
cld
adc
imul
adc
xor
xor
in
adc
mov
and
dec
mov
and
push
sbb
sub
ret
dec
ficoml
mov
in
sub
dec
mov
cmp
ja
pop
push
adc
fiadds
mov
mov
cmpl
pop
push
inc
lods
out
add
cmpsl
movsl
dec
jno
mov
sbb
pushf
sbb
rolb
je
push
add
sub
xor
idivb
pop
and
mov
rcrb
and
pusha
mov
out
call
inc
xor
dec
fdivl
arpl
mov
movsl
add
outsb
mov
jl
mov
mov
sbb
and
sbb
sbb
push
adc
sbb
jmp
daa
loope
loopne
sbb
js
bound
cmc
add
add
mov
scas
ret
xor
mov
sbb
popa
aaa
pop
sbb
add
test
sbb
repnz
fdivp
sub
repz
test
ficompl
mov
xor
jae
test
and
roll
ja
and
divl
movsl
push
ss
and
cmpsl
pop
ljmp
lahf
orl
jne
adc
hlt
mov
movsb
rcll
push
xor
pushf
pop
and
adc
inc
inc
and
cmc
mov
or
inc
push
cmp
dec
fmull
push
push
and
mull
cmp
and
sub
jno
mov
push
sbb
pop
mov
push
inc
adc
popf
inc
jg
adc
cmp
xor
out
pop
cmp
adc
push
popf
shll
or
inc
or
sbb
xor
cs
stos
dec
jnp
out
nop
lods
jo
in
xchg
add
rorl
jnp
cmp
mov
push
cs
in
mov
push
loopne
outsb
in
and
ss
adc
leave
arpl
inc
xchg
pop
pop
cmp
jge
cmp
push
imul
or
adc
clc
sbb
addb
xor
call
call
sahf
push
mov
jge
pop
push
mov
pop
mov
xor
sub
imul
adc
fnsave
xchg
push
xor
adc
nop
or
sub
add
jbe
pop
out
rcll
lcall
pushf
adc
int3
add
push
shlb
lret
pop
jmp
add
sbb
or
jnp
xor
cwtl
xchg
add
repz
and
ss
inc
xor
cmp
mov
xchg
pop
pusha
adc
push
sbb
jg
add
push
or
cmp
xchg
cmp
mov
mov
dec
adc
das
and
js
loop
lret
push
push
push
push
in
xor
popa
push
push
inc
push
sbb
pushf
push
test
iret
in
shrb
sahf
std
incl
cmp
cmp
lods
add
dec
or
dec
xor
ret
lds
pop
sub
push
push
inc
in
jmp
inc
and
xchg
pusha
push
aaa
push
arpl
sub
stc
orl
mov
sbb
mov
pushl
add
aaa
call
pop
sub
lea
push
orb
jge
cmpsl
mov
inc
in
in
xor
and
mov
add
or
xchg
iret
into
xchg
mov
popa
pop
pop
mov
adc
sub
and
mov
mov
jl
gs
or
xchg
adc
ret
or
pop
or
cltd
faddl
sahf
les
inc
jae
push
leave
and
jecxz
cmp
pop
les
push
push
int3
lea
or
jo
cmp
inc
xor
ljmp
cmp
and
inc
mov
nop
jo
or
repnz
adc
push
jno
push
andl
adc
rcrb
mov
ret
push
pop
add
inc
and
add
pop
sub
xor
je
push
pop
ja
out
sub
sub
xor
addb
pop
jmp
and
sbb
jno
mov
das
pop
bound
or
or
add
add
inc
push
mov
push
or
in
pop
pop
sub
xor
xor
push
loopne
stos
and
add
rol
popf
push
sub
or
jle
cmp
cmp
add
ja
imul
push
fisttps
aaa
ret
inc
sbb
mov
fdivl
in
jmp
dec
or
dec
jl
loope
xor
push
sti
jmp
rcr
lret
jl
inc
and
or
jbe
push
xor
add
fisttps
fcoml
mov
leave
pop
adc
xchg
scas
xor
mov
testl
test
push
xchg
rolb
and
sub
nop
nop
mov
imul
mov
cmp
add
sarl
aaa
add
and
sbb
pusha
mov
mov
movsl
push
add
shll
loopne
or
or
jp
add
dec
add
cld
push
test
cmp
xchg
jb
push
stc
or
or
ds
push
push
sub
xchg
xchg
orb
sub
mov
int
sahf
xlat
cs
xchg
rcl
cmp
nop
inc
mov
ret
out
loop
xchg
sbb
fcoms
mov
add
jp
push
arpl
in
xchg
jo
cli
stos
or
cmc
sub
sub
pushf
mov
mov
fwait
lea
js
rcrb
push
push
inc
sub
cwtl
imul
cltd
idivl
push
addb
jbe
lds
cwtl
add
aad
rclb
sub
adc
push
rorl
pop
mov
add
mov
movsb
xor
sbb
data16
add
mov
push
push
shlb
addl
aas
movsl
add
xchg
and
xor
lods
fs
mov
xchg
js
add
rolb
pop
popf
or
xchg
push
add
adc
cmc
xchg
scas
es
lea
adc
jae
daa
js
jmp
movsb
sbb
test
jge
xlat
add
mov
adc
cmp
fistl
inc
pop
mov
pop
mov
lods
xor
outsb
movsl
or
mov
inc
aam
mov
dec
inc
adc
mov
push
mov
jns
xchg
test
cmp
popa
jp
cmp
arpl
pop
and
cli
lret
sub
pushf
xchg
cmpsb
sbb
push
mov
rcll
push
inc
outsl
push
mov
pop
jae
leave
push
js
fsts
fadd
push
insb
jmp
insb
call
cwtl
mov
sbb
andl
mov
adc
mov
je
mov
lds
or
add
pop
lcall
add
enter
mov
jge
adc
lea
mov
subb
icebp
inc
scas
jne
jle
pop
mov
xor
add
add
pop
sbb
jg
mov
jle
mov
and
push
sbb
and
xchg
xor
pusha
rcrb
jbe
push
jae
lods
or
cmpl
lahf
test
inc
cli
push
cld
std
movb
push
rorb
movl
add
inc
insb
shr
inc
add
mov
push
loopne
adc
cmp
xor
sub
jecxz
add
pusha
insb
std
pop
incb
and
in
xchg
cmp
add
jno
jns
bound
stc
test
xor
outsl
insl
out
in
sub
icebp
divl
popa
jae
movsl
mov
jo
mov
es
sbb
jne
mov
inc
rclb
arpl
pop
js
mov
adc
inc
lock
mov
int3
push
mov
add
lret
push
int
fucom
mov
dec
add
xor
hlt
push
adc
or
jns
js
push
orl
int3
xchg
nop
dec
js
push
sbb
arpl
inc
and
shrl
testb
inc
xchg
add
or
sub
adc
loope
out
mov
pop
adc
or
or
mov
mov
test
jno
adc
xchg
cli
push
popa
jo
inc
mov
jg
test
push
add
inc
frstor
movb
mov
lds
and
inc
scas
add
add
xor
je
jle
movsb
js
jae
dec
jg
add
sbb
cwtl
adc
push
iret
fcmovb
inc
add
jl
jmp
push
neg
aam
test
push
pop
mov
insb
push
out
xchg
clc
sub
adc
inc
pcmpgtb
inc
xor
addr16
and
sarl
int
sub
test
inc
sahf
fs
mov
out
repz
repz
data16
cltd
fisubl
xor
jge
adc
adc
inc
jo
into
cmp
add
inc
pop
and
inc
aas
push
mov
push
loopne
push
pop
cmp
in
jb
xchg
inc
adc
pop
and
fwait
daa
sbb
jecxz
dec
ret
sbb
inc
sbb
push
mov
mov
daa
adc
cmp
mov
cmp
jne
push
xor
outsb
push
test
ja
loopne
test
dec
int3
or
push
dec
rolb
nop
inc
in
jg
xorb
das
or
inc
mov
scas
xor
or
subb
pop
adc
add
sbb
mov
xor
rclb
lods
insl
pop
pusha
inc
cmp
jnp
inc
adc
jbe
mov
les
add
aam
test
mov
mov
pop
dec
push
pushf
fs
loopne
movsl
mov
in
repnz
pop
push
mov
ret
cmp
push
iret
jecxz
es
jbe
jb
add
dec
mov
mov
or
push
rolb
enter
push
push
je
ret
pop
pop
xchg
adc
jge
sbb
xor
jge
js
mov
add
and
dec
adc
push
les
cltd
and
into
mov
push
out
cmp
push
pushf
fldl
jo
int
adc
pop
cwtl
sub
pop
insl
loope
jge
xor
add
divps
pop
pop
jle
xor
shlb
or
ret
cmp
dec
xlat
dec
rcll
adc
mov
cmpsb
add
mov
dec
jne
imul
invlpg
xchg
pop
sub
orl
push
push
sbb
cmp
in
fsubrl
js
movl
fs
push
push
dec
or
adc
dec
jbe
clc
test
add
in
je
sbb
subb
js
cmp
sbb
mov
imul
aas
pushf
add
sahf
ljmp
cmp
push
sbb
xchg
cmp
cs
orb
or
add
ret
xchg
je
or
jo
andl
adc
popf
sbb
call
test
cmp
push
mov
xor
push
lret
mov
add
rcl
adc
sbb
and
mov
mov
mov
pushf
and
subl
add
jno
mov
or
rcr
das
in
daa
xchg
loopne
loop
in
pop
sbb
addr16
xor
pushf
push
or
lea
inc
fcomps
adc
push
push
sub
movsl
scas
test
rcrb
and
cld
push
sub
fs
je
jp
pop
add
shl
cmp
popa
ds
xor
ret
cmp
testb
je
bound
or
push
xchg
into
mov
and
nop
jp
test
andl
out
ret
outsl
mov
rcr
outsb
incl
je
or
je
or
sub
movsb
cld
xchg
scas
add
jno
or
push
cmc
movsl
jge
dec
adc
or
add
and
jne
sahf
enter
ja
cmpsb
mov
clc
add
jmp
cmp
adc
dec
movsl
stc
jbe
adc
inc
push
imul
rorb
sbb
xor
ja
iret
or
jle
or
push
dec
cmp
xorl
jmp
mov
movsb
push
cltd
in
rdmsr
and
adc
scas
cmpsb
or
add
inc
inc
or
repz
or
jp
std
dec
cmp
jmp
and
xlat
adc
dec
fmul
mov
xchg
andl
jnp
fcmovnbe
inc
push
inc
sbb
push
das
loopne
or
pushl
ret
insb
add
aaa
gs
je
sub
pop
add
or
aaa
ficoml
adc
mov
push
rorl
stos
mov
loop
mov
ret
push
adc
and
lds
jp
movsl
add
insb
adc
stc
push
inc
dec
pusha
les
mov
ljmp
cmp
or
test
jnp
push
rclb
push
frstor
jne
int3
or
xor
adc
or
and
aaa
mov
inc
pop
cmpsl
sbb
xor
push
popa
jne
cmp
mov
dec
or
ret
out
adc
data16
ds
pop
clc
or
pusha
mov
test
sub
or
push
and
xchg
inc
mov
outsb
or
xchg
inc
loopne
push
sbb
adc
push
pop
ret
adc
icebp
jb
xchg
push
or
dec
mov
arpl
pop
push
imul
xchg
inc
add
inc
mov
adc
fisubrs
xchg
add
and
inc
mov
enter
jo
and
cmp
enter
add
add
cmp
pop
push
dec
mov
pop
push
pop
and
jb
fsubr
or
and
pop
jge
shll
add
sbb
loope
jge
mov
mov
cmp
pop
cmp
js
lods
mov
add
sahf
push
mov
fsubrp
push
das
jno
inc
xor
int
fdivrl
pusha
push
ret
pop
cmc
fsubrs
mov
mov
adc
les
mov
pop
or
inc
inc
and
test
jl
mov
mov
addps
xchg
loopne
sbb
xlat
add
mov
stos
cmp
dec
sbb
sahf
jo
mov
in
xchg
push
push
adc
addl
inc
js
inc
sbb
mov
xor
sbb
orl
das
jns
stos
std
decl
or
mov
jmp
cmp
rcrb
or
dec
inc
sub
fidivl
lock
and
push
ljmp
movsl
or
push
out
adcb
jecxz
adc
cs
out
test
mov
sti
nop
mov
push
daa
inc
loope
dec
aad
xor
sub
xchg
mov
fcoml
xchg
in
call
sti
inc
mov
or
mov
cmpsb
pushaw
adc
mov
lds
jo
sbb
push
sub
or
adc
test
outsl
out
lea
mov
ss
lret
mov
scas
and
mov
dec
das
mov
js
or
cmp
adc
sub
lea
repz
xchg
movsl
sbb
xchg
push
dec
push
arpl
rorb
shl
add
add
jecxz
inc
aaa
mov
shll
andl
in
cs
js
or
cmp
subl
lods
scas
cmp
adc
dec
inc
ds
xor
fyl2xp1
cmp
mov
add
sub
shll
mov
scas
push
mov
je
data16
fcompl
inc
leave
je
rcl
sub
lret
fdivs
mov
cld
sahf
aam
sbb
test
xchg
push
sub
dec
sahf
data16
add
push
inc
xor
xor
aaa
divps
sbb
aaa
in
mov
rcll
xor
jg
pop
add
jb
inc
xor
mov
and
lret
push
add
pop
sub
es
ss
cmp
sbb
js
scas
add
mov
sahf
and
mov
outsl
push
sub
sbb
pop
aam
mov
decb
adc
cmp
adc
cmp
inc
and
add
pop
addb
mov
lock
and
adc
lock
mov
sub
test
jmp
xchg
popa
insl
ret
adc
pop
pusha
daa
inc
jne
cmpsl
add
xchg
sub
pop
adc
xor
je
add
leave
sub
ret
enter
jge
ret
cmp
or
rorb
cmp
dec
ret
xor
pushf
mov
or
sub
add
jg
lahf
xchg
pop
outsb
add
or
add
jmp
or
jne
xor
adc
in
movsl
roll
xchg
adc
adc
jecxz
push
xor
test
jne
lea
test
sub
arpl
cmp
and
mov
jno
adc
lock
cwtl
dec
fnstsw
sti
mov
sti
fimuls
outsl
sarb
sbb
xchg
mov
inc
fsubl
pushf
std
test
ret
shlb
adc
xlat
dec
dec
pop
iret
inc
movl
adc
and
popa
jne
sub
dec
cmp
push
xchg
pusha
and
loop
inc
push
lcall
push
add
or
mov
inc
sbb
add
ret
adc
pusha
popa
and
testb
jno
sub
adc
push
dec
into
jle
loop
daa
mov
and
rorb
in
cmp
lahf
mov
movsl
in
and
xchg
mov
cwtl
ret
push
test
inc
fsub
roll
or
adc
mov
sub
xor
and
mov
int
push
das
daa
inc
push
sbb
lock
push
mov
and
adc
sub
cmc
xchg
sbb
in
loopne
or
or
push
lods
mov
sbb
pop
pushf
mov
out
pop
dec
fnsave
int
in
addr16
popa
jmp
xchg
cmp
pop
and
shl
inc
lock
cmpsb
cmpsl
dec
loope
lock
adc
dec
mov
pop
mov
push
mov
add
dec
jg
cmp
xor
pop
cmp
pop
lock
add
xchg
mov
test
dec
cmpsb
jp
xchg
dec
or
shll
or
xchg
outsl
aaa
add
es
scas
mov
sbb
adc
push
adc
xchg
xchg
in
dec
and
mov
mov
outsl
dec
adc
push
or
lcall
gs
daa
loop
pop
gs
dec
stos
movsb
jg
push
repnz
pop
je
into
je
push
adc
jbe
pusha
sbb
push
hlt
xchg
cmpsb
nop
lahf
sti
mov
sarb
inc
in
push
push
cld
mov
inc
addr16
stos
adc
dec
jp
arpl
add
push
jmp
jmp
ja
stos
mov
mov
push
js
dec
lock
cmp
sti
add
xchg
dec
xor
pop
xchg
sub
jnp
cmpb
mov
or
inc
push
add
mov
pop
inc
test
cmp
dec
jp
pop
lcall
and
jo
test
outsl
adc
push
cld
push
test
inc
sarb
jl
lds
jmp
test
cltd
push
push
leave
orl
dec
or
incl
inc
and
adc
sbb
orl
mov
or
je
adc
mov
int
mov
nop
xor
lock
jne
pop
add
mov
fwait
and
sbb
shrb
in
movsb
leave
and
in
movsb
cltd
xlat
sub
sub
pop
add
lea
xchg
or
add
and
add
jge
int
in
adc
jl
and
xor
shll
add
mov
jle
subl
mov
cmp
mov
enter
jne
out
cmp
dec
out
ret
ret
sub
sbb
jns
inc
dec
fs
xchg
jno
pop
outsl
push
dec
adc
add
jmp
push
xchg
lods
jg
imul
and
pop
pop
popa
sub
jb
mov
jae
push
iret
push
or
inc
icebp
inc
pushf
out
jg
mov
adc
adc
call
jne
push
popf
pop
adc
and
inc
daa
and
std
mov
rclb
or
sbb
mov
repz
cs
or
stos
jo
sbb
pop
push
sub
add
push
js
pop
in
pop
jbe
or
pusha
test
fsubl
mov
sbbb
pop
xchg
inc
sbb
mov
sbb
push
scas
fbld
sub
outsb
jmp
mov
cld
and
les
sub
or
cmp
inc
xchg
fwait
popl
push
addb
xchg
dec
jecxz,pt
shll
mov
in
ljmp
data16
clc
add
icebp
inc
in
push
xchg
call
mov
stos
in
lahf
out
or
push
testb
mov
mov
sbb
push
roll
mov
adc
dec
loopne
mov
pusha
add
ffree
xor
xchg
cmp
shrl
jb
iret
push
mov
mov
jne
cmc
add
in
adc
pop
imul
xchg
inc
cltd
std
out
mov
push
sbb
or
inc
sahf
popf
add
sub
adc
cmpl
mov
inc
add
int3
dec
jne
cmp
arpl
jo
add
aaa
insl
xchg
add
add
add
mov
mov
int3
add
mov
and
mov
inc
int
jae
add
add
xlat
xor
mov
mov
push
pop
popf
cmpsl
jmp
or
jne
mov
testl
mov
jno
mov
mov
or
je
sub
push
adc
adc
mov
add
leave
arpl
lods
sub
sbb
cmp
add
ret
mov
xchg
lahf
adc
inc
adc
loopne
add
pop
xchg
dec
or
fstl
stc
add
lock
pop
enter
adc
jne
sbb
loope
and
push
jo
jnp
rclb
mov
and
xor
jmp
sub
add
sub
adc
add
mov
in
orl
and
lahf
ja
xchg
fisttpl
das
leave
sti
test
js
dec
sub
push
and
or
jmp
xor
inc
pop
cmc
mov
and
movsb
mov
outsb
cmp
jge
sti
sbb
imul
mov
jo
xchg
inc
lods
add
mov
sub
jo
mov
adc
push
mov
jo
dec
jns
gs
loopne
cmpsl
add
or
in
sub
jge
adc
jo
and
in
and
and
jecxz
adc
lret
popa
jo
jecxz
mov
roll
sbb
sub
notb
and
daa
adc
cs
and
inc
inc
cs
push
ja
xchg
sub
je
mov
mov
sub
dec
cmpsb
adc
cltd
cmp
push
sub
inc
ss
sub
xchg
pop
repnz
dec
lock
jge
push
xor
dec
sbb
pop
scas
xchg
dec
insl
shl
mov
mov
mov
cmp
jbe
mov
xor
leave
push
xor
das
sbb
daa
xchg
and
add
cmp
xchg
insb
pop
add
jno
mov
insl
jecxz
add
push
mov
mov
and
dec
mov
add
mov
sar
test
xchg
xchg
cltd
xchg
mov
and
sbb
lahf
add
xchg
xchg
push
or
cs
sbb
je
jne
dec
stc
add
test
push
insl
sbb
nop
sub
jo
adc
jge
add
dec
cmp
push
lds
pop
pop
jne
inc
mov
sub
orl
jmp
mov
mov
xchg
out
subl
sub
push
lea
cmpsl
nop
pop
push
add
nop
push
aad
sbb
and
pop
fildl
adc
fs
add
add
adc
cwtl
add
push
xchg
inc
sbb
xchg
mov
int3
and
push
pop
inc
pop
add
test
inc
cmp
cmp
mov
adc
and
or
dec
pop
ljmp
pop
pop
or
sbbb
jnp
rol
inc
mov
test
aam
pop
cld
dec
adc
ret
lret
xor
and
sbb
xorl
insb
sbb
and
push
dec
mov
sbb
or
jle
pop
add
jbe
push
fwait
sub
xor
ja
sub
push
sbbb
mov
adcl
clc
adc
lds
push
push
nop
and
adc
inc
loope
adcb
push
cmp
popf
push
nop
push
into
adc
enter
cmp
fnsave
rclb
lea
mov
into
rolb
mov
outsl
sbb
adc
arpl
or
ss
xchg
or
cmp
jg
or
inc
es
cmp
adc
orb
call
sarl
add
adc
and
lock
rcrb
sub
sbb
dec
fidivl
dec
stos
sub
lock
sbb
jge
jbe
stc
sbb
and
clc
dec
xchg
cmc
or
andl
adc
loopne
xchg
jge
mov
lock
adc
and
sbb
cmovbe
push
xchg
pop
adc
push
mov
mov
stc
add
add
std
test
push
faddl
andb
sub
cld
lret
stos
mov
sbb
push
adc
add
cmp
js
or
sub
aaa
decl
shrb
mov
orl
pop
ret
test
sbb
in
aaa
mov
mov
test
pusha
cwtl
mov
or
push
adc
sub
xchg
mov
dec
inc
jecxz
or
imul
jecxz
sbbl
push
hlt
test
in
mov
sbb
jne
or
out
jns
mov
je
inc
or
push
xchg
test
xor
mov
or
dec
mov
bound
push
mov
or
or
jmp
xchg
add
xchg
push
inc
add
jl
ja
cwtl
sub
call
adc
and
lea
mov
dec
fistl
jl
push
clc
shll
dec
jo
jge
cmp
cmc
cmp
adc
data16
sub
pop
push
mov
insb
push
pop
add
dec
loopne
pop
hlt
inc
and
lea
cltd
jp
jl
nop
xor
pusha
sti
rcrl
cmp
cmp
cmc
outsl
and
push
bnd
cmp
push
jne
mov
mov
jg
fcmovne
nop
mov
cmp
or
or
inc
push
mov
mov
sbb
rolb
or
or
xchg
jp
mov
ds
inc
push
fsubr
push
xor
sti
jl
test
imul
adc
loopne
or
sub
mov
and
pop
mov
ret
push
pop
clc
push
in
jno
jge
xchg
dec
add
jmp
pop
movsb
and
inc
push
pop
mov
jbe
jg
mov
out
adc
push
es
xor
cmpsb
jle
test
icebp
inc
sub
sbb
cld
mov
inc
or
xchg
mov
sub
lret
shlb
or
lret
lret
inc
cmp
dec
lods
pop
sbb
pusha
test
push
sti
stos
or
or
repnz
in
shl
movl
add
rcl
inc
add
lahf
scas
in
movsb
iret
jae
dec
mov
movsl
fs
inc
mov
xchg
decl
loopne
and
jno
jne
out
dec
jl
or
push
bound
inc
sub
cli
inc
jecxz
or
push
fstpl
mov
or
scas
mov
add
test
sub
inc
cwtl
pop
fstpt
out
lret
sub
push
or
nop
rcll
jns
jmp
fildl
adc
jle
fs
cltd
imul
nop
sub
lcall
and
andl
in
ja
pusha
call
mull
pop
lea
add
cmp
mov
pop
inc
adcl
cmp
out
pop
and
stos
out
cmp
daa
lcall
inc
call
mov
xchg
addr16
add
jp
jp
ja
idivb
dec
sub
lods
mov
popf
xchg
and
cmpb
xor
jge
je
ds
fnsave
cmp
jb
pop
mov
sbb
push
cmp
mov
rep
insl
inc
cmp
jl
xor
or
add
jmp
sub
jae
jae
out
sbb
call
xor
cmp
arpl
mov
outsl
jnp
and
jne
xchg
pushf
cltd
cmp
inc
push
push
mov
cmpsb
pop
pop
push
and
push
mov
xor
dec
adc
xor
data16
mov
push
sub
and
pop
adc
aas
mov
adc
popa
mov
pusha
inc
xor
adc
popa
mov
cmp
push
xor
sti
jno
and
ret
test
lock
orl
mov
dec
xchg
icebp
mov
inc
scas
push
iret
test
fbstp
shlb
repnz
jae
sbb
mov
push
push
arpl
shr
or
dec
subb
out
sbb
sbb
xchg
push
sbbl
push
int3
dec
roll
add
lock
adc
aas
mov
push
dec
sbb
out
push
loopne
sub
bound
mov
or
std
jo
adc
decl
insb
insl
fs
push
push
stos
or
dec
xchg
push
in
adc
sub
xor
xlat
mov
adc
sub
arpl
cmp
loopne
add
sbb
test
add
inc
sbb
orl
sbb
add
xor
cmp
rol
jge
loopne
mov
cmp
bound
adc
push
loope
pop
es
mov
mov
and
nop
popa
add
pusha
cmp
dec
ss
adc
aam
in
adcb
adc
inc
loop
push
xor
lea
mov
inc
dec
sbb
adc
ret
arpl
and
into
cmp
and
lcall
add
lea
push
rcrb
testb
dec
pop
rorl
lcall
inc
add
js
movsb
or
insb
or
push
sub
sbb
mov
nop
cmp
cmp
dec
loopne
adc
ror
out
dec
inc
cmp
xorb
test
or
inc
dec
test
adc
push
sub
sar
emms
add
or
or
add
rolb
cmp
fwait
jle
sbbb
ret
loope
hlt
and
sub
sub
bound
pop
jb
es
mov
sbb
mov
xchg
or
cmp
cli
jg
mov
mov
mov
ret
sahf
ja
test
push
inc
inc
mov
mov
test
mov
push
xchg
push
sahf
call
insl
cmp
dec
aas
adc
cmp
ud2
shl
adc
add
pop
dec
and
cmp
mov
mov
jecxz
sahf
or
inc
sbb
jl
ret
notb
je
push
add
pop
or
std
bnd
dec
xchg
or
push
je
mov
test
or
and
jbe
mov
aaa
icebp
xchg
fld
ja
pushf
sbb
mov
popa
in
inc
jmp
mov
popl
inc
pop
enter
into
xchg
mov
int
xchg
sbb
subl
adc
orb
mov
sub
in
fsubrs
incb
sbbl
mov
mov
rcr
mov
ror
push
iret
jmp
mov
hlt
jae
imul
add
pop
pushf
inc
sbbb
ret
mov
and
pop
icebp
jg
adc
popf
jl
arpl
in
push
loop
inc
inc
push
inc
and
push
loop
sbb
test
in
cmp
or
roll
adc
pop
dec
or
pop
push
sub
and
xlat
dec
std
into
jnp
mov
jne
leave
add
lcall
adcl
ss
dec
mov
gs
lods
cli
paddw
mov
push
xchg
jne
fdivs
or
add
pop
loopne
imul
out
jmp
sbb
call
sub
out
or
or
jbe
bnd
mov
imul
aaa
push
push
push
pop
sbb
insl
inc
ds
sub
ret
subl
pop
movsl
sti
jp,pn
adc
daa
or
cmp
fsubrs
cmp
add
mov
push
cmp
and
and
adc
es
mov
in
mov
adc
or
insb
cmpsl
lods
dec
mov
xchg
arpl
xchg
arpl
add
sbb
cmp
jnp
mov
es
jae
jmp
in
flds
adc
test
pop
xchg
nop
sbb
pusha
int
in
pop
stc
sub
or
adc
pop
adc
ret
cmp
out
add
xor
pop
je
xor
mov
dec
pop
loope
push
and
or
inc
fists
andl
and
ss
loop
push
sbb
push
jecxz
adc
mov
nop
dec
dec
and
mov
push
and
add
rcrb
add
lock
and
mov
cmp
es
add
add
inc
enter
daa
jo
jb
add
sub
es
add
test
or
call
cmp
xchg
add
pop
fdivrl
push
nop
sub
inc
push
and
xor
or
iret
cmp
xchg
xor
mov
mov
dec
movsb
sbb
lea
leave
fnstsw
cld
ss
and
in
pusha
adc
push
add
mov
inc
sbb
add
adc
sbb
js
mov
or
ljmp
subl
popa
xor
mov
mov
or
push
insb
cmc
mov
fnsave
mov
inc
imul
ja
test
cmp
mov
push
jnp
dec
sub
mov
mov
jns
dec
or
mov
in
loop
fimuls
enter
jle
sub
loopne
mov
aam
ret
dec
cld
mov
lock
and
lods
xchg
cwtl
insl
popa
shll
lret
cli
inc
or
je
and
hlt
mov
add
mov
cltd
inc
cli
loopne
hlt
push
and
add
adc
pushf
sbbb
sbb
xchg
mov
aaa
inc
mov
sbb
xchg
mov
adc
fwait
dec
push
push
mov
pop
add
adc
incb
jmp
and
jne
out
mov
out
cmp
pop
lock
insb
imul
mov
or
lods
or
divl
leave
or
mov
add
sbb
xor
lret
fs
cs
adc
sbb
inc
mov
xchg
cmpsl
mov
xor
nop
mov
add
dec
pusha
sub
cmovle
insl
push
dec
xchg
out
pop
add
xlat
repz
pop
xor
je
notl
or
rorb
push
add
loopne
and
mov
fbstp
aas
or
jne
push
mov
jmp
cmp
ja
fdivs
cmp
sti
into
xchg
sbb
test
xor
insb
dec
sub
lds
cmp
adc
iret
or
mov
out
adc
add
cs
popf
insb
test
xchg
ret
and
roll
pop
xchg
outsb
cmp
imul
call
sub
add
xorl
jb
and
xor
ja
jp
jb
je
bound
test
test
adc
inc
arpl
mov
jmp
stc
pop
add
mov
add
sub
lock
clc
lock
xchg
mov
lods
test
rcll
fsubrl
dec
das
or
add
or
jl
or
push
hlt
xchg
outsb
and
push
add
or
andb
pusha
sub
lcall
popa
leave
jge
and
adc
adc
ret
cmp
adc
loopne
or
sbb
sbb
or
push
mov
mov
aam
adc
xor
pop
bound
rclb
mov
nop
inc
stc
loop
pop
cli
push
sbb
lret
adc
jnp
dec
push
cltd
rclb
testb
inc
and
imul
push
cmp
cli
aam
xchg
stos
sarb
fcomp
fwait
addl
rcll
cmc
and
cmpsb
cmp
out
xlat
aad
mov
push
adc
in
js
push
jge
add
inc
cwtl
dec
ret
or
inc
sbb
jb
or
sti
sub
jl
mov
adc
adc
fisubs
jg
dec
adc
movb
cli
lahf
pop
outsl
or
xor
push
inc
js
mov
sbb
mov
loope
pop
nop
or
or
and
add
test
scas
dec
jmp
add
outsb
inc
fstl
push
mov
jo
push
pop
pusha
xchg
mov
inc
je
add
loopne
ret
add
push
pop
mov
push
xchg
lar
or
mov
jmp
jmp
icebp
xorl
gs
loopne
add
js
pop
rorb
in
nop
loope
loope
xchg
fwait
jg
and
prefetchwt1
add
xchg
pop
push
push
int3
jle
add
shll
outsb
or
dec
sti
xor
shrl
push
loopne
addl
xor
divl
or
adc
jb
push
push
adc
push
push
es
inc
or
push
sbb
mov
call
dec
dec
insb
mov
pop
xor
mov
push
dec
lds
int3
xchg
mov
add
fwait
cmpb
in
push
and
test
stc
add
adc
repz
push
mov
xchg
sub
pusha
lods
xchg
repnz
dec
sahf
push
test
mov
or
insl
lock
xchg
pusha
es
sbb
or
jmp
loopne
fs
or
cmp
add
int
dec
addl
shll
shll
push
mov
pop
pusha
ret
dec
xchg
call
hlt
mov
rolb
movsl
aam
fwait
adc
jns
rorl
imul
mov
insl
push
push
loope
inc
mov
movsl
push
test
js
insb
or
into
or
xor
into
push
add
leave
out
mov
lret
mov
xchg
adc
dec
xchg
movsb
jbe
ret
rolb
sahf
xchg
xchg
or
push
cmpsb
add
mov
mov
aam
movsb
push
cltd
movsb
out
or
dec
adcb
rcll
ret
or
enter
fadd
or
arpl
mov
inc
xor
loope
test
rolb
adc
dec
jno
xchg
test
addr16
push
sbb
js
and
insl
mov
mov
loopne
cmp
jbe
ljmp
push
mov
cmovle
push
pop
add
lock
xor
imul
or
mov
mov
xchg
rolb
pusha
jb
jp
das
and
movsb
adc
mov
push
cmpsl
add
xchg
jmp
push
pusha
mov
cmc
rcrl
test
cmp
aam
aas
or
adcb
push
popf
ret
dec
pusha
xor
loop
push
adc
inc
mov
jne
sub
stc
mov
es
and
inc
int3
call
push
test
addr16
subb
aad
push
ret
nop
aaa
cwtl
es
mov
mov
aad
or
addb
sbb
pushf
cmc
mov
xchg
push
dec
cmp
lock
cltd
fmuls
add
fisubs
or
sub
iret
mov
repz
mov
popa
push
movsl
push
adc
jo
inc
jnp
sub
pop
push
bound
add
xchg
mov
dec
and
mov
clc
cmp
roll
jne
cmp
or
xor
ss
push
xchg
or
rclb
mov
or
push
push
mov
fwait
or
jbe
inc
add
mov
insb
sub
lret
imul
mov
add
in
push
clc
stos
jmp
add
mov
jecxz
sbb
and
in
xlat
and
cs
mov
push
mov
and
xchg
sahf
pop
ss
les
xlat
fldl
lock
sbb
cmp
cwtl
shlb
ret
dec
popa
mov
sub
and
xchg
hlt
fwait
adc
aam
iret
test
clc
cmc
jle
xor
xchg
fwait
sub
ss
data16
push
push
sub
add
je
push
shrb
cmc
test
jecxz
test
cmp
mov
lods
sub
jb
mov
xchg
inc
inc
ret
rcrb
xchg
or
call
dec
sysret
push
pop
fdivrl
mov
sbb
push
xchg
adc
popa
rcrl
push
enter
and
cmp
or
movsb
jp
rcrb
inc
cmp
lods
inc
cmc
fcoml
xor
jo
sbb
sahf
push
into
call
push
mov
jg
jo
fdivrl
enter
loopne
jnp
or
rolb
jo
add
fcoms
inc
shr
ficomps
pop
or
push
mov
sub
add
adc
test
popf
jmp
or
push
add
pop
sbb
sbb
mov
push
cs
test
jno
pop
mov
cwtl
pushf
xor
mov
sbb
imulb
or
pop
add
sub
mov
jmp
cltd
mov
adc
adc
inc
push
in
lea
adc
adc
jae
or
mov
and
or
mov
jecxz
inc
rcr
pop
cmp
loope
xlat
push
sbb
xchg
add
mov
scas
icebp
fidivl
and
negb
add
cmp
jle
xchg
push
xchg
mov
cmp
cmp
jne
push
js
or
sahf
jnp
mov
or
jg
dec
mov
fistpll
mov
ljmp
scas
outsl
movsl
cmpsl
xchg
push
pop
mov
mov
popf
das
mov
mov
dec
add
and
cmpsl
mov
pop
pop
adc
xor
call
xor
inc
push
je
sub
mov
xchg
aaa
rcrb
sbb
push
push
mov
hlt
in
test
lahf
mov
sub
mov
pop
cmp
pop
add
andl
cmp
lea
xor
loope
and
dec
push
std
push
in
cmp
sarb
popf
lods
sub
xchg
lods
mov
or
loopne
sub
adc
notb
mov
fscale
addb
les
in
popa
sbb
call
push
pop
cmpsb
inc
or
push
jg
push
push
push
jns
and
call
repz
push
mov
jb
xor
je
shll
popf
xchg
ret
push
movsl
push
andb
add
or
mov
int3
jp
cmovne
dec
lods
mov
push
or
cmpl
add
movsl
insb
xlat
data16
push
xor
xlat
inc
cmp
adc
or
cmpsl
nop
fsubrs
mov
push
jo
push
test
sbb
inc
inc
fstpl
divl
je
ljmp
add
xchg
inc
popf
sbb
mov
ds
jge
lds
loope
insb
jmp
cmp
lret
sub
mov
in
or
inc
hlt
lea
dec
sbb
popl
push
gs
pop
inc
inc
inc
cmp
jl
sbbb
inc
stos
dec
mov
pop
call
stos
jmp
lds
add
xor
or
mov
mov
nop
cmpsl
cli
jge
inc
loopne
enter
dec
add
inc
divb
adc
test
or
dec
xchg
aam
fsubr
and
push
pushf
int
push
mov
mov
out
outsb
mov
mov
push
or
inc
push
xchg
andl
sti
test
clc
outsb
dec
and
je
stos
push
dec
das
push
add
jle
push
pop
ss
xor
loopne
hlt
add
jo
dec
lds
mov
hlt
lock
or
add
push
inc
aam
ret
hlt
cmpb
mov
je
push
stc
or
stc
pcmpeqw
cmpl
adc
es
add
stos
or
jbe
push
stc
sti
lea
iret
loopne
sub
je
mov
faddl
sbb
les
imul
cmp
aam
dec
dec
push
cmp
xlat
lret
mov
inc
loopne
popf
subb
sub
clc
xchg
inc
jp
call
pop
push
rorb
fcmovnu
cmp
in
imul
mov
adc
in
push
push
cmp
cmp
addb
mov
ss
in
ss
inc
es
fdiv
aaa
pop
insb
add
xor
or
dec
xor
mov
call
add
cmp
jae
push
and
js
pusha
movsb
fsub
fdivl
dec
lods
dec
loope
xchg
sbb
sbb
test
loopne
add
test
daa
sbb
pusha
loope
sarl
xchg
adc
not
add
add
cmp
sub
pop
mov
int3
mov
lcall
add
fadds
scas
add
xor
xor
pop
mov
dec
loopne
push
mov
or
dec
push
loopne
jo
movsl
jbe
popf
mov
das
and
mov
xorb
pop
dec
mov
cs
das
push
xchg
out
jge
call
sbb
aaa
or
loop
clc
lods
outsl
mov
ret
sbb
dec
cmp
sub
loop
in
mov
lods
adc
jmp
jge
pop
test
decb
stos
cmp
mov
aaa
add
mov
lock
cmp
and
dec
loopne
cmp
pop
js
lock
xor
jecxz
cmp
xor
or
or
add
inc
leave
sub
cmp
cmp
pushf
add
dec
mov
or
inc
adcl
cmp
iret
or
xor
lods
ret
cmp
je
adc
adc
std
add
data16
xchg
sbb
sub
jle
or
cmp
jg
outsb
adc
imul
fadds
outsb
add
fldt
jl
push
jge
push
jle
loopne
out
xchg
push
imul
push
cmp
lock
in
xor
andb
jge
lret
push
inc
xor
push
lock
scas
jmp
or
je
push
cmpsb
dec
cmp
xor
lock
sbb
xor
repnz
and
fs
inc
jmp
inc
jo
add
cs
addr16
and
jne
or
sbbb
sbb
adc
or
xchg
or
test
test
push
mov
and
adc
mov
idiv
lret
jmp
pop
cmpsb
xlat
mov
inc
int3
dec
or
push
mov
pop
je
mov
fcomps
mov
dec
and
in
inc
mov
pop
loopne
loopne
subb
xchg
push
dec
dec
mov
add
push
out
xchg
cmpsl
inc
rcrb
fcoml
jae
lret
add
out
movsl
jno
add
ljmp
lret
push
sub
jge
jo
xchg
les
aam
xchg
mov
fsubrs
jl
mov
sbb
add
dec
lods
ljmp
lock
inc
movsb
adc
lea
adc
add
stos
jle
push
sub
enter
jns
add
sahf
sbb
adc
fcomp
sbb
js
adc
add
mov
rolb
push
movsl
sbb
not
das
inc
xchg
faddl
imul
inc
sahf
xchg
es
in
or
xchg
rcr
or
inc
push
or
icebp
mov
rorb
adc
dec
push
jecxz
mov
divl
jo
pusha
add
xchg
sbb
ror
xchg
cmp
das
push
stc
push
cmp
cmp
sbb
lret
cwtl
adc
cltd
xchg
mov
clc
in
addr16
cmp
lea
inc
adc
jg
add
out
movl
outsl
gs
lcall
and
pop
outsl
push
sub
mov
push
jg
insb
test
adc
test
cmp
ret
adc
xchg
in
addb
in
jg
scas
ret
dec
add
sbb
mov
shlb
mov
jnp
test
xchg
mov
inc
xor
cmp
daa
lds
fwait
mov
add
cmpl
xchg
lret
enter
add
adc
js
mov
push
loopne
cwtl
add
pop
jg
dec
orb
xlat
ret
pop
or
movsl
pop
hlt
dec
sbb
cmc
pop
stos
inc
cwtl
or
push
and
push
rol
sbb
andb
push
sub
mov
scas
jge
test
push
jne
ss
jno
popf
inc
mov
inc
inc
adc
je
cltd
test
cmp
xchg
jle
fdivl
ret
fnsave
mov
sub
push
test
shld
popf
sub
mov
testl
or
xlat
push
jnp
inc
sbb
xor
roll
call
jp
add
sub
push
xlat
popa
rorb
xchg
dec
pop
jne
test
sub
xchg
and
pop
ficompl
mov
add
call
sub
mov
pop
ficomps
addb
cmp
dec
cmp
testl
cmp
insl
test
mov
outsb
movsl
add
std
xor
loop
add
adc
add
fcom
push
lret
ja
adc
mov
stos
xchg
adc
sub
notb
inc
push
dec
outsb
pop
cmp
decl
cmp
jbe
add
jmp
add
shl
test
sub
mov
push
inc
jns
dec
loopne
inc
inc
cwtl
or
sbb
sbb
cmpsl
and
xchg
inc
lcall
jecxz
push
imul
inc
mov
loop
mov
mov
add
ret
pop
push
in
jle
mov
nop
inc
adc
ret
and
imul
gs
add
shl
scas
aam
movb
inc
add
add
adc
jl
lock
mov
jl
shrb
add
add
lock
fdivs
rol
enter
jo
mov
imul
mov
or
xchg
call
jb
push
add
in
xor
sub
pop
sbb
jbe
cwtl
arpl
nop
out
subl
dec
and
stos
xlat
or
sahf
xor
je
leave
mov
leave
ret
pusha
test
scas
dec
into
add
rorl
sbb
and
xchg
sbb
mov
rorb
fwait
xor
hlt
outsb
stos
sbb
jo
sbb
movsl
mov
ljmp
mov
jmp
mov
add
sahf
sbb
xchg
jp
dec
cmp
and
je
aam
cwtl
je
adc
js
mov
add
jnp
imul
adc
mov
mov
loope
flds
jge
addl
mov
orl
or
push
int
push
add
and
inc
pop
dec
pop
mov
mov
cmc
dec
loopne
and
in
push
add
and
enter
push
and
insl
add
inc
sub
xor
mov
add
loop
sahf
add
lcall
cmp
fs
jno
ljmp
shlb
pop
ret
or
out
incb
ret
mov
nop
add
jne
es
xchg
pushf
mov
xchg
or
add
adc
fwait
mov
sub
divb
dec
aam
mov
scas
xchg
inc
adc
sub
ss
sub
or
push
fcompl
sbb
int
push
pop
lock
fwait
or
xchg
std
sub
imul
push
loopne
ds
mov
push
cmp
add
roll
push
nop
les
jp
hlt
test
mov
outsl
mov
or
hlt
pop
mov
xadd
movsl
mov
adc
fmuls
aam
in
inc
imul
jmp
cmp
mov
out
icebp
hlt
js
movsb
roll
mov
add
push
xorl
push
lods
adc
xchg
ret
jo
neg
mov
sub
xor
adc
popa
push
xor
and
pop
out
imul
rep
int
loope
loop
cmp
insb
mov
mov
hlt
cwtl
es
mov
add
insl
popa
fs
xor
inc
push
sbb
inc
jb
movsl
mov
adcb
sub
xor
mov
je
push
jno
push
xor
retw
pop
xor
mov
rcll
and
mov
repz
push
mov
sbb
cmp
add
cmp
std
sahf
xor
jns
pop
xchg
jecxz
aam
and
or
fisttpl
and
dec
outsl
fsubrs
push
sti
push
add
or
push
xor
sub
inc
push
push
push
ret
nop
rorb
push
inc
and
or
sahf
sbb
icebp
mov
push
add
lds
jmp
sub
push
ffreep
pushf
inc
or
inc
mov
lret
pop
xchg
push
aaa
push
adc
pop
jle
cli
inc
push
xor
jmp
mov
jb
mov
ja
sbb
test
outsb
mov
loopne
push
mov
test
lret
test
fistl
or
inc
xor
xor
insl
or
insl
add
sahf
add
cmp
insl
popf
insl
insb
daa
mov
shrb
adc
repnz
es
sbb
inc
fs
dec
adc
push
cli
loopne
dec
xor
push
in
push
jo
int3
inc
flds
xor
mov
lret
test
arpl
in
call
add
adcb
sub
cmp
lock
mov
adc
rorl
mov
or
lock
jecxz
cmp
ret
pop
dec
cmp
and
insb
pusha
f2xm1
cmp
sbb
jne
pop
lea
mov
sarl
mov
clc
push
cmpb
jp
inc
xor
hlt
nop
mov
bound
push
bound
sub
mov
adc
lds
sub
call
lea
sbb
repz
inc
add
add
push
add
je
inc
out
add
mov
cmovae
das
mov
sbb
jne
les
add
rcrb
or
lret
push
mov
xchg
pop
mov
adc
orb
loope
ja
or
mov
loop
stc
mov
movsl
mov
dec
push
adcb
mov
ds
push
lret
mov
jge
push
lods
or
lret
inc
mov
jb
fldl
push
xchg
mov
fcomps
pop
add
adc
rcll
xchg
loopne
xor
hlt
xchg
fmuls
lret
cmpl
hlt
jle
push
mov
dec
aaa
push
cmp
cmp
dec
jnp
jbe
push
mov
jp
mov
mov
test
inc
pop
imul
mov
stos
pop
xor
cmp
pop
pusha
leave
lret
dec
pusha
loopne
and
add
xor
sbb
jmp
push
imulb
fmull
leave
sbb
mov
dec
push
sub
push
mov
push
jo
mov
pop
mov
xchg
inc
cmp
and
lret
pop
aaa
std
mov
mov
cltd
inc
push
loopne
and
push
aaa
dec
jbe
inc
inc
aaa
jno
hlt
xor
pop
inc
pop
mov
and
add
addr16
mov
and
or
fistps
gs
inc
or
dec
sbb
and
iret
pop
inc
inc
add
cmp
adc
sbb
notl
das
pop
addl
movsl
add
inc
and
ret
mov
cwtl
out
imul
adc
test
mov
cmpl
jl
mov
dec
cmp
push
dec
nop
pop
mov
add
movsb
lods
mov
mov
mov
mov
das
das
das
das
les
dec
shlb
add
cmpl
pop
or
aaa
or
rcll
xchg
cmp
test
sbb
mov
jp
shlb
addb
in
sbb
mov
add
pop
jno
arpl
insl
sub
inc
mov
mov
inc
loopne
or
loopne
or
adc
inc
jns
push
cmp
inc
stos
and
out
or
push
mov
xchg
jl
shrb
leave
jl
mov
push
testb
jo
add
dec
es
js
pusha
ret
sub
sarb
lods
mov
mov
jmp
add
movsb
hlt
add
mov
add
pop
pop
inc
sub
fcmovnbe
dec
mov
or
movsb
cmpsb
or
push
xor
adc
sbb
testb
sbb
cmp
je
sbb
cmp
aas
cmp
jne
push
or
jle
mov
aad
jb
xor
sub
arpl
jmp
push
adc
sbb
pop
sub
fadds
es
add
sbb
or
bound
movsb
adc
pop
push
xchg
add
sbb
shl
push
clc
es
sarl
aaa
aaa
inc
cmp
cmp
aad
pop
movsb
sub
outsl
mov
or
lds
clc
cltd
or
lcall
cli
push
mov
jmp
xor
pop
rorb
and
loope
lea
call
mov
js
add
and
in
outsb
push
popa
ljmp
xchg
push
push
sbb
icebp
xor
movsb
cmp
clc
loopne
dec
test
jmp
pusha
rol
sub
dec
bound
lock
mov
dec
push
imul
sbb
gs
sbb
push
shrb
outsl
xlat
stos
cmp
andl
pusha
adc
test
mov
rcl
push
inc
fnstenv
mov
sbb
pop
adc
push
sub
or
test
popf
lods
es
sbb
or
dec
xchg
mov
dec
cltd
cmp
xor
jno
xor
mov
and
cltd
or
dec
mov
inc
icebp
add
pop
mov
mov
pop
mov
lock
stc
xchg
adc
ret
xchg
push
dec
xlat
sub
shrb
pop
sub
shll
xchg
ret
or
inc
sbb
mov
in
fildll
cmp
arpl
mov
and
mov
or
or
or
pop
lret
inc
sahf
loope
pusha
or
mov
jae
in
and
mov
dec
sbbl
add
and
push
mov
stos
imul
cli
in
sbb
filds
xor
inc
and
roll
insb
and
mov
pusha
mull
cmp
pop
orl
dec
dec
mov
pop
and
pop
fsubrp
jmp
xchg
outsb
dec
add
xchg
push
fdivl
mov
loop
rclb
inc
cli
repz
mov
inc
mov
or
lcall
adc
aam
pop
mov
jmp
fldl
clc
push
repz
push
cmpsb
push
pop
aam
ret
sbb
xor
shrl
icebp
lock
lahf
adc
and
dec
xchg
mov
movsl
push
push
movsl
mov
or
hlt
fstl
add
fcomp
fnstsw
sti
mov
jg
jb
fldl
pop
fsubr
pop
faddp
andl
sbb
insl
and
hlt
cmpb
dec
int
mov
cmpsl
test
jge,pn
mov
add
mov
add
inc
seta
sbb
test
faddp
add
pusha
sbb
or
mov
pop
fadds
push
ja
fdivrs
sub
adc
jmp
jnp
out
testb
add
je
mov
ja
test
and
or
jmp
add
into
push
daa
test
fistps
jno
in
loope
pop
ffree
test
es
sahf
or
or
movsb
dec
cmp
mov
int3
clc
aaa
je
dec
sbb
push
lock
push
sbbb
shrb
cltd
sub
mov
jne
pop
in
sub
cmc
push
add
mov
ljmp
lods
pusha
mov
jmp
mov
cmp
jge
daa
pop
xchg
and
xor
adc
test
mov
or
jo
pop
push
inc
push
fisubrs
orb
gs
scas
mov
add
mov
jne
jae
jnp
sub
cwtl
mov
test
icebp
mov
pop
pop
add
cmp
sub
push
mov
mov
pop
jmp
jne
jbe
or
imul
inc
add
xchg
xor
push
sbb
and
dec
jns
mov
mov
stos
adc
hlt
add
mov
bound
pop
aad
fstpt
pop
bound
or
xchg
movsl
leave
fmull
jne
mov
js
push
cmp
sbb
ja
sarl
adc
ljmp
xor
das
insb
aam
dec
or
jne
imul
xchg
push
dec
xchg
mov
dec
push
ret
mov
fsubrs
hlt
clc
mov
inc
pop
lcall
xor
push
mov
dec
call
test
dec
cs
pop
adc
mov
ja
mov
xor
or
imul
fstps
rcrl
or
and
clc
shlb
jle
mov
push
ret
or
add
or
dec
sub
mov
sub
dec
in
out
ret
adc
call
insl
mov
xor
fadds
mov
mov
mov
mov
inc
sahf
or
mov
dec
jo
insb
add
xchg
jbe
xor
cmpsl
mov
je
xchg
add
or
daa
test
adc
faddl
sbbb
mov
dec
sub
mov
cmp
std
mov
xor
ret
cs
push
or
add
nop
fisttps
sub
bound
bound
push
or
testl
jmp
push
add
sarl
sub
jmp
or
sub
mov
lcall
push
lea
push
xchg
sbb
clc
add
rep
add
cmp
and
lock
rcll
sbb
clc
mov
pop
pop
mov
gs
add
test
das
inc
call
mov
cmp
push
mov
mov
inc
mov
lock
mov
add
and
out
enter
jb
in
stos
sub
pop
out
mov
jne
leave
and
inc
sbb
push
aam
pusha
imul
les
aas
xchg
mov
sub
enter
mov
push
xchg
mov
xchg
or
sub
fmuls
movsb
jb
and
imul
sahf
pop
push
je
and
push
push
bound
pop
lods
jmp
popa
jb
neg
pop
ret
mov
add
repz
mov
mov
and
mov
xor
mov
inc
pop
add
or
iret
jmp
pop
outsl
scas
mov
pop
shr
adc
jecxz
ljmp
dec
das
adc
lods
adc
dec
mov
xor
adc
mov
cld
and
and
adc
mov
lea
rcll
push
ljmp
jecxz
orb
add
lods
ret
xchg
jne,pt
leave
cmp
in
sti
or
or
rorl
push
out
lods
push
dec
dec
or
cmp
ss
lods
xor
loopne
jo
adc
or
inc
xchg
push
and
xchg
dec
sbb
movb
and
xchg
xor
mov
push
cmpl
pop
push
mov
lods
add
cmp
xor
lahf
sub
push
sub
and
jmp
popa
add
sbb
sbb
pop
xor
inc
loop
mov
push
add
pop
add
inc
lea
loop
sbb
fadds
je
loopne
adc
adc
mov
test
enter
mov
and
or
rorb
cmp
fwait
push
test
ljmp
push
lcall
add
or
sub
or
dec
and
jo
push
xor
xlat
insb
cmp
mov
push
das
insb
or
mov
or
in
popa
or
movsl
aas
cmp
add
lock
sbb
push
cmp
xor
jne
jo
sub
or
lock
push
push
clc
xchg
adc
out
ret
pop
inc
rol
dec
adc
pop
and
pushf
inc
dec
lea
and
cmp
or
jnp
add
in
repnz
in
js
outsl
add
lret
repz
stc
push
shr
mov
xchg
adc
mov
pusha
lahf
dec
clc
sub
pop
lret
aam
les
inc
je
fistps
out
aam
into
dec
imul
enter
push
adc
xchg
push
fldt
test
ljmp
xchg
enter
pop
pop
add
mov
sbb
adc
jbe
sbb
int3
mov
add
jle
dec
or
xor
adc
jg
pop
icebp
jne
lcall
addl
shr
adc
and
enter
fadds
repnz
or
enter
adc
filds
lcall
inc
mov
mov
insb
je
stos
lock
jmp
fcom
lret
les
cmp
daa
pop
aas
loopne
clc
jl
dec
mov
imul
mov
loopne
mov
loopne
xor
dec
aam
add
inc
add
leave
leave
push
fwait
sbb
repnz
cmp
add
push
xchg
add
or
or
testl
sti
sbb
aam
lahf
jo
dec
cmp
std
lcall
movsl
mov
aaa
sarb
lods
xchg
inc
in
or
dec
add
stos
inc
repnz
pop
stc
and
roll
mov
inc
in
data16
pop
inc
leave
or
rorl
stc
cmc
adc
mov
in
popa
imul
insb
xlat
inc
cmp
sub
sbb
mov
push
mov
or
ret
push
jecxz
arpl
or
jp
outsb
ret
cmp
rcrb
lock
imul
hlt
jge
inc
sub
and
test
ja
add
js
je
pop
mov
call
clc
subl
mov
adc
cwtl
popa
out
or
lea
rorb
fcompl
in
in
loopne
pop
cmp
or
add
ret
roll
mov
dec
aam
pop
inc
xchg
mov
mov
mov
add
loopne
and
rcll
and
jp
sub
adc
shll
in
sbb
inc
in
jecxz
fld
xor
fcom
xchg
or
sub
lea
insl
sbb
sbb
or
mov
cmp
jl
jno
popa
cmp
xor
in
lds
dec
decl
es
jne
ja
sbb
mov
loope
subb
sbb
pop
loopne
dec
je
mov
call
sbb
push
sbb
xchg
lods
pusha
das
aas
mov
xor
jp
xor
jmp
cmp
push
test
add
xchg
int3
rcrb
loop
aaa
jle
adc
cltd
inc
sub
pop
jb
mov
ret
aaa
inc
shll
sub
dec
and
inc
adc
sbb
mov
push
nop
mov
xor
add
push
rcr
fistpll
test
pop
aaa
fs
mov
adc
fucomp
mov
data16
inc
inc
cmp
sbb
push
mov
xchg
nop
jp
les
sub
in
jge
mov
mov
and
cli
and
inc
nop
ja
pusha
sbb
xchg
jge
loop
jo
mov
data16
out
add
and
xchg
dec
rcrb
jae
lea
sti
sub
scas
pop
cmp
mov
xor
add
add
add
mov
mov
jl
push
inc
inc
dec
push
mov
pop
sub
mov
mov
xor
repnz
aas
lahf
push
pop
sbb
jbe
jl
sbb
inc
andl
dec
xchg
cs
pop
dec
xchg
and
fwait
pop
lea
fs
and
push
xor
adc
or
cwtl
shlb
aaa
fs
test
or
sbb
sbb
jecxz
movd
popf
dec
add
pop
adc
jno
call
addb
adc
sub
or
sti
fnstsw
idivl
or
or
jno
icebp
push
in
call
cli
std
scas
rcrl
jge
or
daa
xchg
inc
xor
or
jl
xor
push
sbb
hlt
in
cwtl
fdivs
sahf
adc
in
jns
or
add
xchg
jp
push
or
stos
and
cmp
inc
push
inc
and
xchg
jno
mov
fndisi(8087
fildll
or
add
pop
xorb
pop
or
xchg
aad
pop
data16
mov
stos
test
test
fdivs
test
aam
imul
add
mov
ljmp
and
sbb
sar
add
nop
scas
cmp
adc
cmc
lret
or
push
push
push
scas
dec
and
insl
push
sbb
dec
cmp
adc
nop
push
push
inc
mov
xor
xor
sub
and
or
mov
mov
movsb
stos
mov
adc
jge
cmp
adc
xor
bound
inc
add
xor
sub
push
xchg
push
pusha
pop
rolb
sbbb
pusha
lea
cmovnp
mov
and
and
je
sub
jl
je
orl
mov
jo
or
pop
cmp
jl
mov
cmp
into
push
inc
dec
pop
movsb
sbb
fcomps
push
pop
pop
test
mov
push
cmpb
psrlw
ja
into
jl
shrl
pop
enterw
es
sahf
loop
outsl
popa
lret
outsl
push
std
dec
mov
push
lret
fistpll
push
mov
cmp
xchg
mov
inc
lret
rcrl
jl
jmp
or
xor
addr16
dec
mov
mov
fldln2
sbb
je
or
jns
sahf
add
pop
sbb
cmp
in
jmp
push
sbb
fistpl
mov
dec
sub
dec
int
stos
lods
leave
loope
xor
jne
and
push
mov
bound
cmp
dec
push
jge
mov
ljmp
inc
sub
addr16
pusha
leave
mov
inc
add
xchg
sahf
xchg
adc
call
andb
pusha
sbb
cmp
sbb
pop
pop
rolb
fdivs
or
stc
mov
pop
push
pop
and
nop
xor
add
ss
add
in
push
dec
add
mov
cld
movsb
lock
push
xorl
stos
mov
push
clc
mov
and
test
mov
aad
mov
test
push
xchg
dec
call
mov
xor
cmp
das
sub
jge
add
lods
push
push
mov
loopne
shlb
sbb
shll
aaa
push
daa
out
aas
stc
xchg
pop
xor
aam
sub
adc
test
lahf
adc
leave
adc
mov
jp
pushf
out
dec
or
enter
cmpl
test
add
iret
push
or
fdiv
push
cmp
xchg
sbb
mov
cmp
shll
lods
dec
inc
adc
pusha
xor
jno
mov
fadds
add
xchg
adc
mov
dec
stos
or
push
xor
push
cmp
test
ret
mov
sbb
aas
jne
jb
mov
xchg
jo
jmp
daa
out
adcl
nop
stos
movsl
imul
scas
or
mov
ret
add
xor
pop
adc
inc
popa
or
nop
inc
subb
pop
mov
adcb
rclb
and
shrl
ss
pop
fdiv
je
inc
and
fiaddl
fimull
lock
add
sub
ss
adc
cmpb
jne
push
jmp
cmp
xchg
mov
dec
or
or
inc
bound
jp
add
rolb
mov
inc
push
bound
push
pop
xor
inc
adc
and
cltd
rorl
adc
jne
aad
pop
add
cmpsb
sarl
in
out
jl
jb
pop
push
push
dec
mov
sbb
xrelease
pop
les
mov
sarb
cltd
adc
dec
in
pusha
cmp
sbbb
imul
dec
shlb
fidivl
dec
movsl
test
dec
mov
and
mov
dec
call
pop
scas
inc
add
test
jne
push
fdivl
jecxz
imul
push
lea
call
mov
mov
scas
jns
ret
push
or
or
dec
loope
test
cmp
fwait
fwait
fs
lret
stos
lret
xchg
or
mov
or
int
cmpsl
or
addb
adc
pop
adc
subb
enterw
sbb
fwait
test
int3
mov
adc
or
lods
ljmp
sbb
push
dec
jp
jno
lea
pop
pop
and
pop
rcrb
imul
scas
add
xchg
add
and
push
sbb
ret
jne
aad
push
dec
mov
jbe
pop
mov
xor
push
mov
add
ljmp
sub
lahf
add
jge
hlt
pushf
orl
mov
rcrl
inc
adc
inc
lods
in
icebp
jo
stos
loopne
dec
push
inc
adc
or
add
dec
pusha
sub
inc
add
sub
cmp
popa
cwtl
dec
popa
jmp
in
lea
lock
ja
inc
mov
je
and
jno
mov
mov
fwait
add
add
outsl
pop
dec
pusha
jp
or
cs
jle
inc
or
andl
mov
add
clc
xor
xchg
sahf
fldl2t
adc
je
das
pop
cs
dec
xchg
or
inc
jle
call
add
lret
outsl
push
mov
or
inc
push
add
add
xorb
sub
adc
dec
or
sbb
fisubs
xor
popf
shrb
sbb
add
jno
jp
ja
pop
add
jl
add
ds
add
pusha
in
popa
push
es
ret
cmpl
lahf
sub
xchg
repz
jo
and
or
add
scas
scas
aas
cmpsb
adc
mov
test
sub
fdivrp
jmp
inc
lahf
mov
inc
adc
jmp
xchg
cmp
jl
push
push
push
ret
and
imul
push
adc
push
or
in
pop
cmp
fwait
sti
daa
xor
hlt
stos
stos
xchg
jo
cli
lea
sub
rcll
inc
push
cs
and
fs
add
adc
pop
lock
add
lret
in
in
out
inc
es
fildll
xchg
cmpsb
push
sahf
movsl
int
inc
mov
xor
or
das
add
or
or
dec
xchg
aam
sbb
cmp
aad
cmp
jne
xchg
pop
lods
inc
gs
insb
xchg
adc
out
xlat
repz
push
push
test
orb
es
mov
popa
je
sbb
les
fs
mov
mov
test
push
leave
push
adc
and
fisubl
rorb
imul
jbe
je
daa
stc
insl
mov
xor
call
and
sahf
and
roll
mov
fnsave
pop
adc
add
test
imul
sbb
xor
dec
or
test
mov
daa
mov
jge
repnz
mov
or
xchg
test
stc
into
add
sbb
lea
and
adc
or
pop
add
scas
in
or
mov
inc
add
mov
push
repnz
sti
add
push
push
push
xor
rolb
dec
arpl
jae
adc
ds
sbb
fsubs
mov
test
xor
insl
lret
adc
push
imul
mov
or
push
dec
sahf
sbb
add
push
push
xor
or
and
push
push
and
jb
cmpsl
add
insl
stos
inc
dec
cmpsb
pusha
sub
jno
or
push
add
or
or
jp
adcl
mov
pusha
add
push
dec
push
cli
ss
push
in
stos
adc
scas
in
cmp
pop
sbb
daa
mov
in
add
test
mov
jns
push
push
inc
scas
fs
mov
test
in
pop
cmc
shrb
pop
jae
add
aad
adc
xchg
rcrl
adc
mov
mov
ds
or
rcrb
loopne
or
mov
addb
mov
xor
push
ret
adc
clc
push
jb
push
adc
inc
loopne
icebp
jmp
push
int3
testl
xchg
mov
push
inc
mov
dec
pop
mov
addb
cmpl
cmp
add
es
add
jb
ja
add
sub
sbb
mov
mov
cmp
adc
in
dec
push
and
iret
sbb
xor
ret
sbb
jg
push
mov
and
daa
inc
jmp
jmp
push
add
stos
push
mov
imul
movsb
repnz
inc
cmp
dec
lock
push
cmp
add
jo
sub
add
pop
inc
les
jbe
jmp
or
push
push
in
push
lea
jb
pushf
mov
aam
and
add
xchg
push
cli
xor
add
sbb
int3
mov
and
dec
pop
mov
scas
or
push
jb
push
rolb
dec
aas
and
gs
aaa
inc
mov
ret
mov
cs
lret
fsubrl
push
sub
inc
fcoml
outsb
fdivrs
mov
jge
stos
hlt
xor
push
push
add
out
adc
ret
out
xchg
out
and
nop
movsb
dec
fsubl
jns
sub
in
les
xor
add
mov
jbe
dec
jmp
fsubs
xchg
adc
mov
and
jb
or
or
fmull
or
cmp
shl
cmp
rcrb
inc
jo
out
jl
xchg
pop
roll
add
push
push
fcom
sbb
gs
xor
sarl
pop
jbe
scas
loop
shll
xchg
push
or
in
mov
cld
les
push
push
xor
or
xor
repnz
aam
mov
dec
rorb
and
mov
mov
js
push
adc
xor
sbb
pushf
lds
sub
mov
test
mov
cld
or
mov
ret
pushl
cld
fisubrs
outsl
test
jne
or
nop
cmpl
in
lods
push
xadd
flds
push
shrb
ret
mov
push
pop
push
push
lock
rep
ds
cli
shll
sbb
and
lock
xchg
nop
jns
inc
test
push
xchg
xchg
sbb
push
shr
mov
mov
movsl
adc
mov
in
dec
bound
lods
stos
mov
mov
fiaddl
lret
mov
push
mov
push
enter
jbe
push
push
push
out
out
in
pop
push
and
shl
push
mov
loopne
loop
push
mov
adc
les
fcmovne
in
movzwl
cmp
data16
popa
sub
sbb
add
or
gs
sahf
test
jecxz
pop
mov
arpl
jl
dec
cmpsb
jbe
adc
nop
mov
int3
jg
ret
stos
iret
iret
mov
pop
inc
rolb
or
sub
sbb
stc
mov
fcoml
daa
in
js
jecxz
add
sbb
insb
dec
or
les
jp
js
rolb
movb
push
popf
hlt
or
cmpb
xor
clc
rcl
clc
leave
and
enter
sti
add
orl
int
stos
and
add
or
inc
iret
sbb
xchg
mov
push
mov
push
push
xchg
mov
movsb
xlat
or
or
or
rcrb
mov
cmp
or
or
mov
adc
jmp
cmpb
and
or
adc
push
movsb
mov
mov
dec
dec
testb
movsb
pop
or
mov
dec
sub
sub
xchg
pop
jge
clc
adc
jbe
sbb
paddb
push
sbb
out
mov
mov
das
pop
inc
dec
rorl
inc
jns
cmc
pusha
hlt
pop
imul
jae
push
adc
push
push
stc
fcompl
xchg
sub
rcrl
add
jo
cwtl
mov
mov
push
push
orl
gs
jo
negb
es
cmp
jl
cmp
xchg
testb
push
mov
in
je
sub
xchg
mov
dec
sbb
pop
test
adc
cmp
push
add
hlt
push
mov
xor
push
rcl
nop
fisubs
xchg
shrl
adc
sbb
fadds
std
repnz
leave
dec
adc
push
add
add
leave
leave
leave
add
out
leave
or
jmp
or
jmp
or
jno
out
out
jmp
push
jmp
por
jmp
out
out
adc
pop
adc
push
adc
dec
adc
dec
out
out
adc
aas
pop
jmp
sbb
xor
sbb
xor
jmp
sbb
es
and
out
out
jmp
push
jmp
pop
jmp
and
or
and
cmp
push
and
adcl
adc
mov
fisttps
push
fwait
dec
or
sbbb
addr16
repz
push
xor
inc
dec
cmp
repz
pop
pusha
push
repz
jg
mov
repz
mov
cmp
repz
mov
mov
repz
aam
xor
iret
fsubp
call
ljmp
enter
add
and
or
or
push
movups
adc
mov
call
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
push
mov
test
cmpsl
add
dec
dec
xchg
push
out
or
fld
insl
add
push
mov
adc
xor
push
mov
fstpt
xor
pop
les
dec
xchg
cmc
dec
sub
xor
int
pop
add
jae
lret
lcall
je
cmp
cmp
push
roll
mov
mov
mov
cmp
sbb
cmp
mov
std
dec
and
cmp
cmp
cld
mov
xchg
sbb
mov
xor
add
adc
mov
enter
jo
fdivrl
in
js
lods
cmp
mov
xchg
roll
cmpb
cmpl
loop
lods
or
sub
jmp
xchg
into
add
insb
xchg
mov
sbb
cltd
push
andl
subl
fstps
xor
lds
jns
mov
test
mov
dec
rclb
cmp
jae
sbb
ljmp
pop
das
inc
mov
inc
jge
push
adc
push
jg
inc
fcmovbe
pop
pop
xchg
push
shlb
pop
add
ret
inc
inc
cmp
xlat
xor
or
rcll
test
pushf
dec
fcoml
rclb
xor
stos
call
mov
ror
pop
inc
incl
xor
shr
xor
pushf
sarl
repz
mov
decl
xor
add
add
add
loopne
popf
cmp
pop
iret
or
insl
push
or
and
not
and
xor
add
add
fcmovnu
fcmovnbe
push
add
fsubr
add
or
mov
ror
mov
in
stc
lcall
jge
xor
and
and
mov
or
adc
shrb
leave
xor
sub
add
fs
fimull
sub
ljmp
ja
xchg
or
push
or
xlat
and
jbe
push
ror
add
add
xor
pop
out
add
cs
lret
aam
loopne
pop
cmp
xor
outsl
inc
push
scas
cmp
dec
xor
ljmp
push
lcall
add
cs
cmpsb
imul
push
loopne
test
add
call
in
shl
in
repnz
cmp
adc
xor
mov
push
add
and
mov
pop
cmp
aaa
fadd
xor
call
shlb
xchg
add
jo
and
lahf
cmp
and
cmp
aam
lock
pusha
xor
mov
mov
cmp
out
add
hlt
xor
sarl
jne
call
push
into
add
and
xor
or
sbbl
ret
add
mov
jge
adc
ret
push
jo
ficoms
or
les
pushf
into
aam
rcl
cmp
insl
cmp
add
imul
mov
and
sbb
mov
fadds
pop
fs
push
and
insl
and
fidivl
idiv
outsb
lret
push
clc
jl
push
and
add
dec
rol
jno
push
cmp
int
fs
call
adc
mov
inc
aam
xchg
ficompl
add
cli
mov
push
or
xchg
mov
lcall
nop
cmpsb
imul
inc
mov
add
scas
add
dec
cmp
ss
xor
push
xor
inc
es
lcall
movsb
imul
call
xor
subb
sub
cs
and
add
dec
push
dec
or
loopne
leave
push
push
pop
xor
pop
xor
cmp
push
int3
push
add
jae
push
pop
and
int
pop
rclb
push
leave
pop
ret
outsl
sub
add
rol
xor
loopne
and
scas
inc
pop
and
dec
xorb
fs
in
add
pusha
fsubs
test
pushf
mov
rcr
or
fiaddl
dec
scas
fs
xlat
jnp
push
cs
mov
fs
inc
sub
dec
dec
icebp
stc
stc
test
jl
stc
mov
int3
pop
mov
sbb
mov
jb
adc
fmul
xor
rorl
adc
adc
xchg
mulb
aam
add
adc
mov
sbb
xchg
adc
push
mov
xchg
add
xorl
dec
lds
lock
out
pop
add
sub
mov
mov
add
or
adc
lret
jb
dec
ljmp
sub
pop
cld
sub
mov
test
pop
xor
jmp
add
cmp
clc
ja
fsubrs
lret
mov
out
in
loop
incl
rol
and
sbb
stos
mov
jne
add
test
stos
gs
pop
sub
jae
stos
or
sub
shll
clc
das
add
push
hlt
lea
push
sub
lcall
ret
std
mov
jne
pop
cmp
add
sbb
std
mov
jl
sub
push
pop
push
sahf
enter
clc
aaa
jbe
or
pop
push
xchg
fs
adc
loopne
inc
add
jae
push
pop
rolb
sub
enter
add
outsb
mov
data16
xchg
sbb
lret
fs
pop
pandn
fcmovnu
not
iret
mov
hlt
push
shr
xchg
adc
shlb
pop
jmp
sub
lea
inc
or
mov
and
int3
movb
and
add
movl
or
xchg
xchg
mov
repnz
jbe
pop
aas
fcoml
sub
sbb
movups
pusha
fs
sarb
or
add
rorb
fwait
es
les
fsubrs
pusha
xor
sub
mov
daa
lea
imul
inc
std
rolb
cmp
ja
outsb
stos
mov
mov
mov
stos
mov
andl
pop
inc
or
out
adc
or
aaa
dec
pop
in
enter
adc
sbb
xchg
jbe
and
orl
mov
mov
packuswb
ret
add
and
mov
push
and
test
fcoml
icebp
pop
pop
mov
gs
push
mov
inc
adc
test
push
fadds
mov
sbb
stos
xchg
icebp
insl
adc
or
pop
insl
dec
sub
sub
mov
flds
add
ret
pop
or
jo,pn
and
mov
sti
adc
adc
adc
push
push
add
mov
mov
add
ret
sbb
add
sbb
push
mov
mov
adcb
out
out
fists
mov
inc
mov
xor
xorb
and
cltd
dec
inc
je
cmp
xchg
push
push
push
lret
pop
jb
repnz
movsb
ljmp
adc
add
and
and
dec
adc
xchg
pop
push
inc
lock
fmuls
mov
lea
clc
leave
addl
add
pop
adc
adc
pop
sbb
inc
adc
jl,pn
dec
adc
loop
and
in
sub
cld
or
pop
adc
jle
enter
add
cli
es
lea
cmp
insb
pop
and
aam
or
jne
or
js
pusha
xchg
and
or
popa
mov
loopne
push
cmpsb
cmc
inc
iret
aad
or
xor
cmpb
outsb
fucomp
pusha
outsl
or
icebp
jl
dec
jmp
push
sarb
test
jae
ds
xchg
dec
push
mov
pushf
in
imul
adc
and
movzbl
into
rcll
loopne
mov
add
adc
js
inc
adc
adc
inc
adc
xor
pop
push
inc
in
ss
adc
call
mov
jp
jecxz
les
and
lcall
jne
adc
je
fldl
ficomps
into
daa
add
or
icebp
fwait
and
mov
ret
jbe
add
push
add
cmpsb
xor
or
add
mov
add
pusha
mov
popf
and
and
add
pop
add
mov
jne
sbb
adc
test
fstpl
push
push
sbb
mov
pop
push
sub
adc
xor
bound
mov
adc
add
mov
sbb
lods
cmpsb
add
jo
cmp
inc
loopne
push
dec
rcll
mov
add
roll
lret
or
push
and
es
push
sub
push
mov
and
add
cmp
mov
or
mov
or
les
and
mov
int3
adc
outsb
add
adc
es
dec
enter
pop
xchg
leave
call
jno
sbb
adc
pop
mov
mov
rolb
xchg
add
sub
push
cmp
mov
iret
push
push
jmp
adc
dec
adc
jnp
js
adc
pop
jne
adc
pop
in
cmc
gs
sub
mov
and
je
ds
sub
dec
fdivl
mov
pop
popa
insb
ret
or
fdivrs
or
popf
dec
fcmovne
fimuls
jne
push
loope
hlt
out
repnz
cmp
push
ret
mul
inc
pop
fwait
push
or
sbb
outsb
sub
bound
jle
cld
ds
or
adc
push
mov
sub
mov
aam
mov
push
or
jge
in
jno
or
pop
xorb
sbb
repz
lea
lock
inc
fiaddl
xchg
pushf
push
add
lea
push
bound
mov
adc
pop
push
jb
dec
jo
lea
aam
jg
adc
adc
subl
mov
cli
push
fmull
dec
xchg
sub
addr16
push
andl
push
inc
inc
scas
into
hlt
out
inc
and
jnp
pop
mov
cmp
cmp
scas
pop
jmp
les
aad
insl
cwtl
add
adc
imul
or
dec
sub
xor
stc
push
ret
push
jbe
fstl
lds
in
inc
jg
jns
dec
cmpb
mov
leave
add
adc
jmp
les
cmp
and
add
mov
pop
add
rcl
ja
out
test
or
cmpsb
add
dec
push
xorb
cmpsb
imul
cmp
inc
ret
movsb
inc
rcrl
inc
rorl
int
pusha
cmp
sub
stc
push
cmp
lods
xchg
or
adc
aas
or
xor
push
xor
push
dec
fnstenv
das
push
les
icebp
jno
adc
xchg
call
call
xor
out
or
push
loope
and
pop
cltd
pushf
cmpsb
mov
cld
cmpl
push
adc
dec
arpl
pop
push
inc
xchg
dec
in
adc
pop
pop
add
dec
sbb
adc
in
fcmovne
sbb
push
pop
push
xchg
dec
clc
lock
sbb
xchg
mov
hlt
dec
pop
es
pop
bound
pop
cli
push
lock
clc
mov
in
nop
or
mov
pop
mov
ljmp
push
ret
arpl
pop
mov
imul
ljmp
clc
je
mov
fadds
xchg
mov
adc
lcall
and
ja
xor
dec
adc
xchg
jbe
pop
jae
add
xor
or
ret
and
pop
jnp
sub
add
mov
rolb
adc
mov
mov
orl
adc
jg
call
jb
js
inc
dec
inc
mov
ds
push
mov
sub
pusha
and
or
lock
ds
lds
mov
dec
mov
push
stos
sbb
mov
shll
pop
into
inc
and
loopne
mov
push
xor
sub
addb
insb
cmpsb
mov
les
sti
sub
mov
imul
shrb
dec
add
in
xchg
jl
push
xor
push
ss
xchg
jbe
xchg
mov
mov
push
out
push
sub
addb
cmp
sub
cmp
add
sub
and
icebp
mov
jg
mov
xor
and
imul
stc
and
scas
jb
ljmp
xor
outsl
shlb
das
push
movsl
lea
adc
adc
sbbl
dec
mov
pop
xchg
and
inc
and
adc
or
pop
dec
pop
dec
sbb
cs
and
jmp
sbb
andl
and
hlt
sbb
loopne
aas
xchg
in
cld
xchg
cmp
lcall
cmp
leave
arpl
xchg
outsb
leave
sbb
ret
mov
push
sbb
sub
push
dec
lock
cltd
or
out
mov
jle
mov
out
sbb
or
in
bound
jecxz
lea
pop
cmp
mov
jmp
pop
or
mov
and
in
pop
inc
fisttpll
push
movsb
scas
adc
xor
fildl
daa
call
fstl
sti
mov
loop
push
cld
mov
pop
jbe
loope
arpl
sbb
int
cmp
fisubs
cmpb
sbb
add
mov
les
cs
pop
cmp
je
and
xor
and
push
push
fld
dec
dec
inc
mov
fadd
andb
jle
jbe
out
fimull
sub
inc
ds
pushf
mov
aas
adc
scas
sub
outsl
andb
and
xchg
xchg
jp
mov
cld
jmp
mov
pop
push
shll
test
fsubl
cmp
jb
push
sub
and
in
pop
fidivrs
pop
mov
dec
rol
inc
lods
or
jo
lods
lods
addr16
fiaddl
js
sbb
lods
dec
stos
ss
pop
mov
lcall
xchg
and
sub
test
and
push
xor
movzbl
fisttpll
xorb
je
ds
loop
sbb
repnz
push
cmp
cmp
ret
or
add
add
dec
dec
jp
push
mov
push
les
inc
inc
incl
mov
lea
daa
das
adc
inc
cli
je
cmp
push
shrl
push
pusha
add
cld
cmp
jge
mov
clc
inc
inc
das
push
incl
lock
lea
jecxz
adc
mov
jecxz
jo
ret
clc
adc
and
mov
add
fisttpl
nop
sbb
or
lock
clc
pop
add
das
clc
cld
insl
enter
jae
movl
or
lret
add
add
das
inc
cmpsb
test
jg
jle
add
dec
je
add
adc
cmp
dec
or
mov
ret
incl
in
shr
sbb
loopne
lret
ljmp
inc
mov
shrl
lds
dec
or
mov
cli
and
pop
and
cli
out
add
or
jnp
je
push
add
loop
push
xor
shr
dec
mov
adc
add
lret
ljmp
in
add
push
add
inc
jnp
lds
sbb
adc
mov
push
cmp
je
add
xor
add
in
xor
mov
add
inc
subb
das
xchg
jmp
ret
cltd
idiv
inc
inc
imul
add
inc
mov
mov
add
cld
mov
cmp
test
sub
xchg
fcoml
mov
add
or
cmp
lods
sub
add
stc
push
or
out
and
adc
push
push
lock
test
dec
add
in
fisttpll
push
xor
ret
jmp
daa
js
xor
cmp
xchg
aaa
sarb
adc
add
fists
imul
jae
mov
lods
jmp
mov
sub
pop
mov
inc
sub
cmp
and
cmp
je
cmp
xchg
mov
sbb
je,pn
cmp
jne
inc
jne
mov
into
lods
or
or
push
push
inc
pop
cmpsb
icebp
inc
lods
inc
mov
out
jb
mov
je
ret
and
and
test
dec
add
dec
sub
aaa
rolb
dec
mov
outsl
mov
mov
sbb
add
sbb
orl
mov
mov
mov
jp
jl
or
jg
dec
sti
sub
mov
jmp
and
pop
outsb
scas
out
jmp
inc
push
and
mov
mov
std
push
jp
add
shl
dec
mov
sub
mov
call
mov
fscale
dec
xchg
ss
les
outsl
adc
iret
xchg
jg,pn
imul
and
inc
pop
xchg
inc
call
lcall
jge
or
sbb
or
push
pop
lcall
add
xor
aaa
sub
aad
fstpl
push
inc
orl
pusha
mov
jg
push
imul
cli
popa
fs
imul
mov
sbb
add
addr16
mov
xorb
cmpb
mov
dec
sub
or
xor
xor
mov
loope
roll
rcr
xor
fsubs
inc
cmpb
jmp
in
push
add
mov
ljmp
aaa
rolb
out
jmp
xor
inc
dec
bound
cs
mov
push
mov
xchg
scas
rolb
pop
shld
ss
pop
push
shrb
xchg
cmp
cmp
popa
pop
pop
sarl
rsqrtps
and
cmpsb
cmp
cmp
sahf
or
adc
jne
cmpsb
pcmpeqb
pop
lahf
or
add
test
insb
stos
pop
push
pop
clc
arpl
xor
adc
cld
stos
xor
bound
inc
mov
jb
imul
je
xor
sub
or
shll
into
rcll
inc
jp
test
xchg
js
add
mov
sbb
dec
adc
or
xchg
dec
test
scas
aaa
add
mov
dec
jl
push
or
dec
adc
xchg
pop
cwtl
mov
dec
jg
mov
mov
clc
inc
ss
in
lods
push
lock
sub
jge
jne
add
sub
add
add
sbb
add
add
and
outsb
adc
xchg
inc
fsubl
dec
jl
sub
and
fs
sub
and
lea
insl
test
rcr
xchg
call
jne
inc
push
std
imulb
push
adc
data16
xchg
sbbb
jmp
rolb
mov
dec
outsb
mov
dec
adc
pusha
out
rclb
ss
push
or
shl
adc
imul
xchg
lret
hlt
loopne
jl
lods
xchg
xor
jbe
adc
push
or
in
int
and
cmp
pop
jne
push
movb
add
sbb
cmp
std
notb
rol
addr16
inc
incl
cmc
add
cmp
pop
xor
and
repz
xchg
add
xchg
inc
mov
mov
sbb
push
sti
test
in
xor
pop
xchg
pop
rcrb
addl
push
leave
nop
add
inc
ds
xor
push
mov
pop
add
shrb
icebp
xor
movl
or
pop
rcll
es
imul
jbe
jb
jo
outsl
pushf
sub
mov
or
mov
lock
movb
jbe
pusha
enter
sbb
push
ret
push
jmp
je
jmp
and
cmpb
jne
mov
or
idivl
ret
add
sbb
mov
fstps
xlat
shlb
ret
sbb
adc
mov
popa
aam
aas
jle
add
lods
sub
mov
sbb
insl
mov
movsb
push
int
dec
cmp
jo
inc
jge
popf
xchg
test
imul
jg
sti
add
es
stos
sbb
push
adc
inc
add
push
scas
pcmpeqb
sub
addl
sbb
lahf
jb
pop
add
ljmp
sbb
cmp
insb
push
inc
jnp
adc
add
dec
repz
pop
mov
out
mov
rcr
in
mov
adc
lock
mov
dec
dec
and
sub
in
dec
xchg
xor
cmp
call
sub
cltd
dec
push
pop
data16
jb
loopne
or
cmp
je,pt
inc
or
pop
sbb
push
push
scas
or
add
data16
imul
push
inc
mov
js
xor
test
sub
or
add
xor
push
clc
push
mov
adc
jbe
adc
cmp
cmp
insb
sarb
jo
cmp
shll
aad
push
jo
lock
lock
or
sbb
das
and
in
shlb
adc
xchg
pop
pop
push
push
sub
nop
clc
cli
xchg
je
insl
or
lret
inc
or
xchg
loop
inc
push
sub
loope
xchg
push
addr16
test
and
and
mov
mov
sbb
add
dec
cltd
or
sbb
cltd
xor
aam
test
pop
pop
push
imul
aad
sahf
sub
lods
stc
push
jae
cmp
sbbb
in
jg
mov
lcall
xor
jge
lods
out
jmp
push
dec
lea
xor
aad
mov
inc
push
dec
ret
xor
sbb
mov
ss
push
or
or
movb
jo
arpl
inc
out
pop
mov
cmp
out
fistl
shlb
push
mov
dec
push
mov
cmpsb
dec
dec
lea
jne
and
cli
mov
pop
dec
adc
pop
out
inc
arpl
push
rolb
minps
mov
cmpb
add
inc
sub
push
imul
std
scas
push
inc
adcl
jg
jne
lret
pop
fdivl
dec
sbb
pop
in
and
add
add
mov
push
mov
sub
in
push
jecxz
mov
mov
dec
push
sbb
je
mov
and
and
or
test
inc
lds
in
pop
and
and
dec
aas
add
add
iret
adc
sbb
test
in
loope
aaa
movl
pop
stc
cmp
fsts
dec
pop
xchg
lock
jmp
cmp
jne
andl
xlat
or
add
push
lret
int3
cs
jle
adc
clc
movsl
xor
jno
bound
dec
sbb
data16
add
fdiv
sarl
je
mov
jecxz
pop
lds
jmp
mov
sub
sub
sbb
sbb
mov
push
test
jb
cmp
or
sbb
shl
and
rolb
shlb
push
in
sub
fsubr
push
dec
dec
inc
cmp
test
mov
add
out
ret
addr16
push
cs
stos
xchg
mov
xor
loope
jle
dec
inc
xor
jne
xor
in
sbb
and
or
or
jmp
into
cli
add
or
or
or
xchg
add
adcl
sbb
jns
mov
dec
lea
js
mov
pop
mov
mov
push
mov
xor
or
popa
pushf
fstpt
scas
cmp
push
sbb
cmpsl
lods
dec
xor
sbb
jns
pusha
and
in
into
or
push
pop
ret
inc
sahf
or
lock
or
pop
add
clc
jp
ret
mov
xchg
cmp
cmp
imul
dec
pop
adc
cmp
dec
dec
enter
ss
xor
dec
es
pop
push
pop
or
lds
lahf
push
sahf
insb
repz
into
xchg
cmpsb
pushf
aaa
movsb
xchg
movsb
push
out
or
aaa
fwait
mov
repnz
call
outsb
sbb
popf
cwtl
and
in
lock
push
cmp
sbb
pop
push
sbb
adc
and
add
movl
sbb
pop
adc
jmp
or
pop
inc
ret
mov
dec
or
aaa
sbb
pop
xor
and
inc
push
push
in
scas
test
adc
and
xchg
add
fwait
popa
sbb
or
pop
and
add
pop
leave
jno
add
jecxz
test
cs
pop
adc
add
cmp
mov
add
adc
adc
or
insl
mov
pop
stc
push
nop
or
add
pop
dec
push
or
inc
or
imul
call
dec
xchg
fcoml
imul
mov
add
add
mov
mov
and
pop
or
shlb
out
pop
mov
mov
fistpl
imul
adc
ss
pop
sub
push
xor
jecxz
adcl
pop
cwtl
cmp
cs
inc
add
ss
popa
dec
xor
fdivrs
adc
js
inc
mov
mov
push
or
mov
jmp
outsl
adc
hlt
fiaddl
and
pop
mov
cmp
inc
mov
pusha
or
rorb
or
jo
inc
sbb
inc
fs
imul
sbb
in
sub
pop
push
ret
outsl
mov
jno
std
ficompl
push
pusha
cmp
pop
pop
jb
adc
cmp
imul
add
aam
or
and
movsl
xor
pop
int3
xchg
test
fistpl
stos
jmp
inc
enter
leave
inc
mov
pop
jmp
rorb
lods
mov
insb
adc
or
push
in
xor
xchg
adc
cmp
and
lea
pop
mov
sbb
xlat
ss
inc
adc
adc
or
arpl
push
out
mov
adc
jo
dec
mov
cmp
inc
or
add
or
xchg
inc
sahf
outsl
or
or
in
outsb
in
cmp
sbb
insb
loopne
sub
push
sub
and
pop
ja
jns
mov
out
pop
adc
test
xor
repz
popl
cmp
xchg
fildl
push
cli
xchg
sbb
push
push
and
adc
xchg
adc
inc
mov
sbb
or
jl
jo
cld
cld
ss
jecxz
idivl
mov
push
out
rcrb
shll
push
push
lahf
sub
cltd
jnp
loopne
fimuls
jl
mov
ljmp
add
sub
enter
cmp
sub
inc
jne
pop
push
jae
or
mov
data16
js
or
jne
popf
and
push
add
push
or
lock
ds
pop
stos
divb
scas
xor
and
fmuls
jmp
rol
jbe
mov
mov
cmpsb
in
jne
das
and
cmp
lock
and
cmpl
sbb
bound
pusha
sbb
adc
or
or
cwtl
add
mov
xor
adc
inc
loopne
out
fsubrs
and
xchg
cmp
jge
ret
dec
pop
or
movzwl
add
es
sub
loopne
pushf
add
shr
xchg
pop
rcrl
adc
cmp
inc
test
movsb
push
dec
sub
jl,pt
shlb
leave
or
pop
jmp
sarb
or
or
daa
adc
cmp
clc
adc
pop
push
inc
add
lds
addr16
jae
cmp
pop
mov
jle
sub
jmp
xchg
or
adc
orb
push
hlt
sbb
fcoml
nop
pop
pop
jg
and
push
pop
add
mov
ret
xchg
loopne
push
pop
das
or
jle
inc
lret
sbbb
je
jp
fsubs
dec
mov
jbe
outsb
add
out
fsts
inc
rorb
and
xchg
cmp
rcrl
stos
push
loop
or
shr
add
inc
imul
and
movsl
fs
or
mov
dec
sbb
in
inc
add
xorb
jmp
pop
and
xchg
popf
dec
pop
mov
fcom
stos
pop
aaa
cltd
sub
inc
shr
push
sbb
rolb
sbb
dec
fcomps
addb
popf
cmp
ja
nop
rcrb
rorb
in
push
push
or
addr16
xchg
push
fwait
jo
add
dec
sti
xchg
bound
lods
and
es
pop
cmp
das
test
xor
pop
add
mov
jmp
inc
test
add
lods
and
push
pusha
ds
mov
add
adc
js
test
pop
xor
or
and
in
inc
add
or
notl
or
cmpl
je
jl
mov
ret
pop
xchg
nop
add
cmp
call
shrl
loop
imul
adc
inc
pusha
cmpsb
je
lock
into
mov
xchg
jg
and
add
inc
mov
push
push
pop
mov
sbb
sub
push
mov
inc
js
sbb
cmp
dec
push
ss
sbb
data16
loopne
or
cmpsb
ret
bound
add
xor
dec
ss
sbb
push
das
imul
mov
or
js
data16
cmp
add
and
cmp
iret
aas
pop
ret
sub
adc
add
lcall
or
bound
sub
mov
adc
push
push
jp
test
inc
jmp
adc
xor
mov
rcrb
mov
dec
push
clc
imull
mov
filds
inc
test
fstpt
and
clc
pusha
loop
mov
xor
lods
mov
adc
push
mov
sbbb
cld
sbb
add
cmpb
sub
ret
push
data16
jne
imul
mov
mov
dec
ret
cmpsb
out
cltd
adc
cwtl
add
les
dec
sub
shrd
loopne
inc
adc
ds
xor
je
sar
xor
mov
add
imulb
inc
insb
data16
cmp
sbb
int
cmpsb
pop
popa
push
jge
push
cmp
jp
jg
mov
mov
inc
lods
sbbb
out
cltd
lret
push
hlt
mov
inc
inc
sbbb
adc
movsb
mov
lock
add
inc
inc
jge
add
and
pop
enter
dec
push
dec
es
jl
push
inc
xchg
jl
adc
inc
mov
mov
or
sub
or
xchg
and
jmp
add
or
cmp
test
jb
adc
orl
clc
loopne
lret
push
popf
cmpb
loop
sbb
call
push
movl
add
inc
rolb
enter
popa
xlat
loopne
cltd
test
lock
pop
inc
sbb
cmp
or
push
add
into
fadds
and
inc
cli
and
inc
inc
call
std
add
jge
arpl
aas
inc
inc
xor
or
js
hlt
xchg
dec
jo
xor
add
mov
lds
add
adc
aas
xorl
sub
inc
jo
mov
add
subl
enter
xor
scas
loopne
lea
stos
pop
cmp
mov
push
mov
sbb
xchg
dec
cld
adc
sub
bound
lods
xchg
je
jb
data16
xchg
movsl
and
push
pop
sub
push
loopne
lea
or
dec
shll
mov
sbb
aam
adc
push
mov
out
mov
mov
lret
jne
mov
fiadds
cmp
jmp
in
inc
inc
push
xor
pop
div
adc
movsb
mov
lea
ja
inc
dec
jbe
ljmp
pop
jmp
lods
push
dec
push
addl
push
cmpsl
aaa
sbb
push
adc
dec
add
push
and
add
add
inc
loop
jmp
push
dec
imul
fldl
push
jo
lahf
sbb
movsb
subb
fdivl
andl
gs
in
jo
into
dec
sub
rolb
aam
outsb
sub
jne
or
movsb
or
data16
in
je
jbe
lahf
and
ret
jo
shlb
mov
outsl
mov
or
fidivl
bound
push
jns
out
adcb
lret
fisubrl
jle
int3
add
add
imul
jo
push
or
jb
cmpl
mov
mov
jb
neg
clc
in
aaa
inc
mov
rorl
jmp
mov
or
rorl
jnp
xchg
je
rep
mov
dec
ljmp
ret
or
jb
hlt
cmp
das
push
push
dec
add
shrb
lahf
ja
cmp
pop
je
mov
and
les
in
or
push
adc
sub
aad
xor
dec
xor
push
rcr
popf
cmp
add
mov
or
cwtl
scas
pop
push
js
outsb
aaa
pop
and
sbbb
psubusw
or
jae
cmp
and
clc
jg
fs
ljmp
pop
movapd
mov
add
enter
shlb
out
mov
jle
xor
cli
rcl
lret
inc
pop
mov
decl
pop
jge
repz
jae
push
or
ljmp
jg
jnp
mov
and
stos
out
mov
adc
push
adc
sbb
in
add
fadd
roll
jbe
and
mov
or
pop
enter
add
push
fdivrp
test
pusha
sbb
sbb
leave
pop
pop
pop
test
mov
and
shrw
fnstenv
orb
sti
pop
mov
aam
xor
xor
pop
add
add
xorl
dec
popa
divb
test
mov
lret
or
cmpsl
mov
lret
cmp
nop
jbe
rol
std
cld
sbb
shlb
imul
sarl
pop
repz
mov
lods
dec
and
or
dec
mov
shlb
lcall
adc
inc
clc
jmp
push
and
add
rclb
add
inc
fisttps
cmp
jmp
inc
cmp
jne
inc
cmpb
pop
rolb
push
hlt
adc
cld
pop
and
inc
and
adc
fistpl
jne
arpl
arpl
movsb
ret
daa
sbb
mov
dec
cmpsl
xor
scas
sbb
sbb
repz
mov
and
mov
xor
xchg
je
mov
xor
xlat
push
xor
sub
mov
cmp
xor
dec
call
dec
cmovo
cmp
outsb
mov
out
push
push
push
and
mov
push
sub
shr
push
jns,pn
and
sbb
push
mov
cmp
jne
inc
les
inc
push
enter
mov
adc
sbb
movb
rorb
cmp
insb
int
sbb
sbb
sbb
loope
or
and
aaa
xchg
adc
pop
inc
pop
into
sarb
movl
sub
mov
call
test
lods
gs
cmp
jmp
xchg
add
lds
pop
lods
fwait
scas
lahf
out
testb
sahf
mov
out
or
or
lcall
push
dec
push
push
xor
jle
push
loope
push
movhps
or
and
sbb
mov
adc
cmp
cmp
xchg
mov
arpl
cmp
pop
sbbb
int3
gs
jnp
sbb
push
pusha
xchg
add
cmp
cli
adc
sub
or
cmp
inc
jb
or
mov
or
sub
or
rorb
pop
add
out
gs
add
rol
pop
xor
in
mov
aad
loopne
pop
pop
mull
mov
jle
or
xorl
loopne
add
jecxz
and
fs
jne
pop
lock
cwtl
adc
xchg
pop
ret
add
jmp
xor
and
pop
stos
loop
icebp
mov
and
rolb
shrl
pop
or
shlb
jbe
jmp
gs
outsl
cwtl
xor
movups
inc
inc
mov
add
rorl
add
and
pop
cld
or
add
mov
jne
out
cld
mov
sbb
inc
xor
mov
cmp
clc
inc
or
es
loope
or
cmp
adc
loop
or
js
ss
xor
push
push
bound
lds
mov
push
loope
xor
rorl
push
pcmpeqw
push
pop
inc
cmpsl
daa
mov
dec
push
or
stos
inc
jle
or
xchg
mov
ss
adc
or
add
cmp
test
xor
push
ds
cmp
stc
xor
dec
fcoml
insb
pop
and
out
dec
pop
pop
jne
test
mov
pop
adc
cmp
stc
or
rep
jmp
mov
cmp
or
ss
mov
movsb
fs
mov
mov
loopne
add
and
ficoml
pop
mov
mov
or
and
in
lods
adc
sbb
push
dec
add
dec
cmpsb
nop
inc
xor
xchg
sbb
or
push
insb
repz
repz
fs
push
dec
inc
out
sahf
decl
inc
in
call
sahf
in
lock
hlt
clc
dec
add
jns
cld
push
pusha
sbb
mov
clc
sbb
loope
sahf
xlat
jmp
lock
inc
pop
sti
sbb
insl
and
push
fcompl
jbe
push
lea
jl
cld
pop
and
scas
loopne
or
sub
negl
mov
sbb
fsubl
stc
outsl
ja
sbb
xor
pop
nop
inc
push
fs
sbb
jns
mov
add
out
add
xchg
push
jbe
out
add
cmpsb
and
push
add
nop
dec
dec
addr16
mov
out
fs
mov
repz
es
call
iret
mov
jnp
or
adc
addr16
sbb
cmp
repz
sbb
adc
cmp
repz
or
fwait
and
iret
add
inc
cmp
mov
inc
push
push
push
js
lcall
adc
ja
fs
pop
cltd
push
xor
jbe
pop
sbb
xor
test
push
mov
fmuls
mov
pop
mov
adc
pop
and
adc
repz
add
push
fbstp
fcmovbe
out
add
scas
mov
mov
sub
cmpsb
mov
call
sbbb
xchg
and
add
test
fdivrl
add
and
aas
jge
cmp
pop
test
push
test
inc
shll
sbb
add
cs
cmp
adc
adc
push
cmp
test
ret
mov
inc
lds
pop
mov
je
and
aas
sarb
imul
orl
lret
pop
das
cltd
push
cmp
or
test
xor
mov
ret
mov
inc
and
xor
xor
pop
mov
add
ss
fnstcw
or
pushf
inc
cmp
cltd
pop
sbb
mov
push
sbb
lcall
pop
fstps
jle
mov
ss
fistl
push
fwait
lock
jmp
mov
mov
jle
cmp
pushf
mov
add
lea
cmp
push
lret
sub
mov
sbb
push
adc
or
jo
lahf
xor
mov
es
xchg
sbb
jno
jno
hlt
pop
cmp
cmp
xchg
rcrb
ds
mov
push
arpl
fs
fadds
push
jne
xchg
jne
lret
adc
jmp
pusha
inc
jp
jge
add
sbb
push
inc
pop
ljmp
inc
loopne
rcr
cmpl
sub
mov
cmp
call
cmp
push
jl
add
pop
mulps
mov
adc
imul
loope
fdivrp
xor
sbb
xor
ja
pop
mov
shlb
mov
stc
and
dec
or
fcmovnb
or
push
xchg
add
hlt
insb
loopne
inc
jl
inc
les
rorb
movsb
xchg
aad
add
sbb
xor
xor
add
mov
cmp
jne
xchg
mov
mov
cs
mov
mov
insl
fimull
mov
into
or
dec
inc
in
adc
pop
add
dec
pop
loope
in
lea
pop
cmp
xorb
inc
rorb
inc
mov
pop
outsb
out
or
or
add
jg
pusha
sbb
push
mov
mov
push
ljmp
or
adc
push
push
sub
adc
aam
sub
jbe
cmp
push
or
lds
or
xchg
jne
lea
sub
mov
fs
pop
gs
or
daa
test
sbb
js
mov
imull
dec
fcoms
push
mov
xorb
in
aaa
or
or
sbb
jp
jb
xorb
sbb
leave
push
sbb
dec
adc
cld
jb
push
clc
jbe
dec
jne
cmc
add
and
push
out
mov
sub
add
add
data16
jmp
cli
lret
test
jne
test
cmp
subl
jl
or
push
jnp
adc
divb
cld
xor
add
data16
pop
pop
add
cs
shlb
loope
hlt
negl
cld
out
enter
pop
scas
cmp
add
jo
inc
push
add
adc
jb
xor
addr16
rcl
jo
xchg
sbb
adc
adc
lcall
sub
xor
cmp
jne
jmp
and
jmp
mov
hlt
cmp
addb
add
pusha
insl
inc
sub
push
xchg
roll
xor
mov
or
jb
or
jl
ss
leave
inc
dec
push
rolb
push
test
and
repz
ret
or
fsubl
or
or
add
out
ror
ret
out
pop
test
inc
shl
push
adc
in
or
inc
push
cmpsb
bound
cltd
dec
fldl
rcl
sbb
mov
add
test
repnz
add
nop
les
xchg
das
daa
dec
jne
jmp
sub
mov
cld
repnz
pop
ret
sub
jne
mov
xorl
xor
xchg
and
add
call
pop
mov
dec
enter
adc
sub
mov
movsl
cmpl
insb
popa
int3
push
rorb
mov
push
outsb
into
pusha
or
fdivrl
push
cld
jne
mov
push
cmp
jne
cmp
int
es
jne
call
aas
jne
int
or
jmp
lcall
push
dec
mov
repz
repz
jmp
std
push
xor
cld
lahf
xor
sub
scas
adc
in
adc
xchg
add
inc
inc
inc
mov
pop
mov
add
pop
repnz
and
aaa
cwtl
mov
lcall
adc
dec
mov
das
push
push
subb
ret
dec
and
push
mov
push
int3
pop
inc
xor
popa
mov
add
add
add
adc
std
bound
push
xchg
and
or
test
pop
pop
pop
in
dec
pop
arpl
dec
stos
push
mov
ljmp
les
and
inc
dec
lahf
mov
xlat
push
mov
mov
cld
and
and
mov
je
mov
inc
sarb
clc
or
jg
add
mov
push
or
and
les
shlb
push
push
push
push
out
and
or
push
or
out
jae
out
sub
inc
mov
clc
loope
add
lea
pop
fcoml
fs
movsl
lds
mov
cmc
adc
inc
pop
xorb
clc
pop
xchg
and
aam
mov
mov
mov
and
xor
jecxz
push
add
mov
xchg
mov
push
xchg
fimuls
xchg
std
mov
push
fwait
inc
xor
rorb
es
leave
and
fstpt
xchg
mov
test
cs
hlt
mov
bound
pushf
pop
mov
es
sbb
ret
ljmp
cmpsb
push
and
lea
and
sub
fdivs
fistps
fmuls
lock
and
sub
sub
cmp
das
inc
cmp
xchg
ret
arpl
lock
mov
movsl
clc
adc
shl
push
xchg
sub
aam
adc
int
fs
jne
pop
mov
push
adc
rcrl
inc
or
sti
jg
sar
stc
and
mov
inc
je
mov
lea
neg
mov
mov
mov
sbb
or
add
jmp
or
mov
out
leave
nop
roll
into
loope
dec
pop
insb
sahf
sbb
scas
mov
pop
add
mov
inc
cmp
jb
jae
add
jo
push
inc
aaa
or
xchg
mov
adc
pushaw
pop
ret
gs
xor
ja
outsb
adc
or
ret
mov
pop
push
or
add
mov
sbb
hlt
pop
push
sub
or
cmpsb
shl
push
adc
xor
or
lret
lahf
add
inc
dec
stc
addl
xor
add
loope
jne
and
or
add
out
imul
cwtl
subl
cmp
test
loopne
sub
cmp
je
xor
iret
repz
adc
adc
pop
adc
jmp
pop
addr16
mov
sub
cld
sbb
orb
add
mov
or
and
out
xor
mov
or
lock
in
mov
in
inc
or
jl
mov
jg
loope
push
mov
lock
mov
pop
mov
bound
out
xor
xor
xor
in
lods
icebp
mov
mov
inc
jmp
cmp
sbb
jmp
adc
arpl
data16
sub
scas
lcall
inc
das
cmpb
adc
cmp
push
ss
mov
or
and
adc
lds
in
jne
pop
mov
jecxz
fmuls
sbb
loopne
mov
das
test
and
je
lock
sub
je
lea
jno
outsb
sbb
test
and
add
leave
mov
fwait
add
test
or
sbb
lods
push
test
jbe
push
add
scas
sbb
inc
cmpsb
sbb
and
dec
push
rcrb
movsb
in
mov
mov
adc
shl
cld
std
mov
add
xchg
stos
jno
adc
sub
mov
inc
xor
add
inc
rorb
push
cmp
ret
jmp
push
in
push
test
or
sbb
jmp
adc
aas
aaa
jne
mov
mull
or
add
repz
add
sbb
add
shufps
jb
add
imul
add
aas
imul
dec
mov
cwtl
mov
jmp
sub
cltd
nop
add
orl
sbb
int3
push
faddp
mov
mov
outsb
icebp
lock
shrl
sbb
pop
xor
loopne
loop
inc
bnd
add
or
jmp
test
mov
sbb
js
mov
add
nop
mov
outsl
mov
shlb
lea
push
adc
popf
jbe
js
pop
dec
ss
adc
mov
cmp
test
imul
clc
dec
rclb
scas
mov
insb
mov
in
dec
adc
and
mov
inc
add
push
data16
inc
pushf
rorl
or
jne
or
inc
sbb
jno
mov
or
cwtl
push
mov
test
or
inc
lods
in
lahf
dec
inc
enter
or
jbe
jp
std
jno
cmp
nop
shr
int3
push
cltd
in
aad
dec
ja
ss
daa
rorb
call
int3
cli
xorb
outsl
and
in
sub
xchg
rorb
es
push
out
gs
or
xchg
lock
and
out
or
mov
hlt
xchg
insb
cmc
adc
jecxz
mov
roll
xor
mov
add
fdiv
sub
pop
add
in
sub
mov
mov
inc
rclb
add
sub
sbb
or
fcomps
or
sti
or
gs
rcrb
cmp
cmp
icebp
adc
jne
adc
push
or
pop
cmp
and
jmp
xor
orb
dec
or
loopne
add
pop
sbb
inc
outsl
mov
jne
mov
pop
or
pop
add
mov
cmp
push
lods
das
dec
mov
pusha
lea
xor
or
add
shlb
in
or
sub
in
inc
cmp
in
add
mov
jecxz
clc
in
mov
je
push
insb
pop
aam
push
data16
cmp
addl
out
mov
cmp
pop
js
test
aas
stos
ja
hlt
cltd
pop
idiv
decl
mov
lock
push
adc
in
stos
mov
popa
push
mov
lcall
rcll
xor
rcll
mov
leave
jb
ficoml
dec
jne
subl
test
pop
push
pop
push
movsl
adc
aam
mov
mov
sub
and
mov
in
rorb
and
and
adc
add
adc
sbb
inc
adc
imul
mov
hlt
add
or
sahf
and
clc
into
push
testb
and
xchg
loopne
mov
js
popa
push
test
cs
push
push
imul
out
sub
mov
push
adc
loope
in
mov
adc
and
lods
add
addl
jmp
cmp
push
jb
sbb
fmuls
pop
iret
ud2
lea
adcb
out
mov
faddl
sbb
in
idiv
adc
sbb
or
fs
dec
jmp
daa
adc
or
es
loope
pop
test
call
daa
dec
or
aam
jmp
dec
je
adc
sbb
dec
jne
push
pop
jae
fidivrl
jmp
jno
jle
insl
sbb
xor
or
mov
push
mov
xchg
add
push
bound
push
push
ljmp
lea
push
test
je
ficoml
inc
mov
xor
jo
arpl
clc
shlb
lcall
mov
addr16
jne
mov
addr16
add
loopne,pn
orl
xchg
or
jb
push
movsl
imul
test
add
lock
je
cmp
and
iret
mov
loope
xchg
cmovp
add
push
or
xchg
pop
je
jg
mov
mov
dec
loopne
cld
sub
add
rol
add
push
dec
jmp
xchg
jbe
leave
add
rcr
xchg
pop
ja
out
pop
rorb
add
jl
pop
jns
jno
fildll
jmp
sub
push
and
inc
xor
dec
pop
push
mov
mov
loopne
fcoml
sub
xchg
push
add
icebp
mov
jo
inc
stos
sub
adc
and
jg
jmp
cmp
jae
pusha
push
mov
push
mov
push
mov
cmpsb
cmp
or
push
add
scas
or
mov
add
add
sub
fmuls
mov
sbb
mov
add
cmp
pop
mov
test
push
mov
ret
rcr
test
adc
clc
shrb
je
or
dec
and
sbb
shl
sti
repz
add
jle
fldl
push
pusha
ss
and
or
lea
dec
in
jnp
xchg
and
dec
ja
sbb
enter
addr16
sbb
loopne
pushf
push
pop
int
add
fs
mov
decl
das
pushl
shl
or
push
add
push
shlb
imul
dec
inc
ljmp
sub
add
test
cltd
push
push
push
dec
mov
in
outsl
ret
sub
imul
pop
into
cmp
lret
push
push
add
rcr
or
jmp
inc
lods
movsl
mov
sbb
mov
cli
insl
or
cmp
lahf
int
push
mov
jl
dec
and
add
mov
xchg
adc
add
aad
lea
cmp
stc
xchg
clc
push
jle
in
mov
stc
mov
mov
out
lret
mov
fs
in
push
insb
sbb
jge
insl
inc
sub
xchg
cs
call
inc
dec
in
bound
ret
add
add
xchg
fucomip
mov
add
and
imul
stos
cltd
pop
inc
mov
inc
add
aam
aaa
mov
loope
mov
and
sbb
dec
shrb
fsts
por
pop
sahf
insl
push
push
dec
into
in
stos
pop
sets
push
ficoml
orb
inc
push
mov
in
js
in
push
add
clc
js
js
aam
push
testb
inc
push
fwait
pusha
xor
movsb
lret
inc
dec
or
fwait
xchg
xorb
stos
lock
jne
pushf
out
test
js
pushf
add
pop
aad
sbb
orb
pushl
lea
mov
hlt
aaa
jb
rorl
add
or
cwtl
pop
orl
enter
mov
push
inc
cmc
rol
jg
jmp
popa
icebp
inc
in
dec
and
push
xchg
mov
mov
je
imul
mov
push
mov
mov
adc
xor
xor
adc
dec
add
in
movsb
sbb
mov
into
xchg
sub
leave
outsl
xor
jp
mov
aam
sbb
adc
movhlps
std
push
push
cwtl
mov
call
inc
push
and
jbe
in
dec
pop
jns
ljmp
xchg
lahf
test
mov
mov
fstps
mov
xor
and
stc
and
subb
cld
rcrb
push
mov
loopne
jp
or
aaa
or
and
subb
in
jo
subl
fwait
or
mov
add
pop
sbb
mov
dec
dec
call
daa
dec
inc
pop
add
mov
sbb
adc
popf
mov
out
jmp
pop
dec
movsb
sbb
rorb
xchg
stos
pop
or
cmp
sbb
mov
repnz
jle
mov
lock
sub
hlt
fsubrl
loop
clc
fmull
push
jmp
push
adc
in
adc
pop
or
into
je
pushf
insl
out
xchg
pop
jne
mov
les
jnp
das
in
es
jp
jnp
ret
inc
and
add
and
dec
fstpt
and
sub
es
cmp
xor
xchg
enter
mov
mov
jge
push
sarl
stc
push
aad
mov
sub
or
cmp
adc
jnp
seto
sar
adc
sub
mov
push
test
mov
decl
fidivrs
adc
pop
or
out
in
push
in
lahf
out
int3
les
lcall
jmp
sub
xor
mov
or
enter
pop
icebp
mov
pop
nop
rclb
push
or
mov
jno
mov
call
cmp
fstl
mov
or
push
jo
mov
fdiv
orb
push
adc
jns
mov
call
pop
add
push
sbb
sub
or
push
pop
cmp
lea
push
jmp
fs
push
or
je
mov
out
stos
mov
testb
jne
pop
lock
xor
dec
int
mov
not
sar
add
ss
mov
or
mov
add
mov
testb
jne
push
sbb
stc
das
and
add
mov
sub
mov
xor
repnz
inc
xchg
lock
adc
outsb
xchg
jbe
mov
xor
push
cmp
jmp
sbb
push
pop
or
or
jmp
mov
les
je
movsl
fidivs
cmc
loopne
scas
cld
lods
push
fstl
lods
adc
sti
jmp
inc
sbb
cmp
inc
out
data16
enter
or
lock
cmp
add
out
sbb
ret
mov
add
or
nop
popa
or
icebp
cmc
aas
nop
add
cmp
sub
push
shl
and
test
popa
and
push
add
xchg
adc
xor
sbb
jbe
aam
push
cli
and
pop
lcall
add
hlt
push
lock
pop
call
add
pop
add
js
inc
idivb
inc
loop
sub
bound
andb
add
or
cmp
pop
jmp
jo
in
je
xor
sub
std
add
mov
loopne
add
add
or
mov
or
stos
xchg
push
xchg
push
je
xchg
clc
mov
or
lea
or
repnz
test
lock
mov
dec
xor
and
and
jmp
mov
mov
ret
adc
xchg
xchg
xchg
xor
mov
xchg
xchg
xchg
lods
sbb
subb
pushf
popl
mov
cmp
jnp
loop
lods
movl
mov
inc
adc
jo
cmp
push
mov
adc
rcr
or
out
sub
dec
js
cld
fmulp
test
push
xor
cmp
adc
inc
xchg
arpl
andl
or
add
inc
mov
sti
inc
int
insb
stos
xchg
andl
jne
jbe
mov
loopne
pop
push
xor
lret
loopne
arpl
loopne
fmul
lret
xchg
fcomps
int3
pop
pop
jle
jle
clc
or
test
pop
movsl
shrb
out
imul
popf
mov
push
mov
cld
xor
jo
pusha
dec
inc
adc
adc
and
insl
js
in
xchg
data16
insl
push
jne
sub
pushf
push
repnz
jmp
cli
popf
or
mov
shlb
inc
test
int3
shl
adc
pushl
sub
add
add
rcr
int3
int3
add
xor
adc
add
inc
sub
xor
addb
jmp
clc
or
dec
or
xchg
xchg
dec
lods
sub
mov
adc
inc
fcoms
aam
adc
in
xor
mov
adc
jbe
push
jp
push
loopne
fisubrs
xor
scas
aam
lcall
inc
sbbb
outsl
movsb
jbe
add
push
adc
or
gs
push
inc
js
ds
mov
xchg
insl
cwtl
movsb
dec
sahf
dec
aaa
loopne
jbe
push
push
jne
push
pop
call
dec
ljmp
sbb
mov
shl
add
pop
mov
mov
addb
pop
mov
std
imul
mov
jge
cmp
and
pop
decb
jmp
mov
pop
and
push
add
mov
push
addb
push
sbb
mov
jbe
xor
pop
add
cmp
fistl
addb
sbb
xchg
out
or
mov
mov
pop
loopne
cs
test
jbe
jne
and
mov
xchg
je
xchg
push
inc
cmpsl
pop
sub
xchg
pop
xor
repnz
fimull
lcall
mov
roll
or
push
pop
add
cmpl
shr
les
mov
ja
push
es
or
mov
sbb
adc
push
sar
pop
lods
movsb
or
call
sbb
inc
out
add
call
pop
cs
mov
cmpl
lret
dec
push
test
outsb
or
je
or
test
in
fldpi
pop
or
add
cmp
in
sbb
sub
adc
sbb
dec
sti
mov
adc
js
or
mov
add
pop
cld
loopne
adc
push
imul
cs
lods
shrl
shlb
movsl
mov
mov
daa
adc
es
pop
or
in
sbb
jae
adc
je
or
inc
insb
sub
and
test
mov
xchg
inc
push
test
ficoms
insb
fsubl
adc
addr16
jbe
sbb
pop
and
jbe
jne
js
add
pusha
mov
xor
mov
ljmp
insl
shlb
insb
cmp
cs
mov
js
dec
jae
sbb
or
dec
sbb
inc
sub
mov
xchg
stos
mov
lea
or
mov
sbb
fidivs
je
pop
push
or
xor
pop
add
mov
daa
repz
adcl
je
js
mov
test
call
xchg
and
arpl
mov
inc
fisubrl
and
loop
es
mov
sbb
mov
and
push
cmpsb
add
in
push
loopne
js
jl
mov
mov
in
mov
mov
repz
divb
mov
add
push
xchg
pop
jne
cmp
fdivs
addr16
pushf
sub
js
test
sarl
repnz
add
mov
mov
test
push
cmp
xchg
mov
movb
popa
adcl
xor
sbb
in
mov
mov
inc
lods
xlat
mov
jmp
dec
cmp
mov
xor
mov
je
xchg
sbb
rclb
scas
loope
sbb
cs
mov
add
fldl
mov
jne
mov
add
insl
rorl
or
je
or
or
shll
test
insl
cli
sub
popa
xor
push
mov
mov
sbb
test
mov
pusha
and
dec
dec
shlb
adc
movsb
jb
xchg
sbb
or
pushf
jle
and
test
push
add
push
add
dec
sti
jmp
mov
mov
jne
mov
lds
cmp
jle
popa
mov
fnstsw
ds
pop
push
rclb
sub
jno
xchg
pop
sbb
incb
sbbl
and
push
insb
push
in
in
and
and
adc
and
mov
jmp
push
xchg
sub
inc
into
dec
dec
fstpl
push
dec
mov
xchg
repz
push
sbb
subb
adcl
adc
xor
call
jmp
aas
sub
inc
cwtl
push
mov
stos
push
das
repz
push
xor
mov
sbb
cld
pusha
cld
cmc
shrb
orl
jo
inc
daa
add
and
arpl
dec
test
out
push
push
push
into
xor
xlat
outsb
icebp
loop
cmpsb
jbe
mov
pop
mov
adc
aam
ret
inc
cld
jmp
or
or
sub
cltd
popa
inc
rcrl
dec
sbb
pop
jl
jae
idivl
neg
clc
mov
nop
xor
sbb
xchg
mov
xor
jge
sub
and
inc
dec
sbb
mov
mov
or
out
test
and
lea
pushf
mov
push
inc
lock
push
imul
pop
fisubrl
mov
cmp
loopne
icebp
push
dec
jmp
sub
sub
inc
cmp
sbb
lods
mov
dec
mov
shl
sbb
and
xor
aaa
dec
aad
in
mov
jmp
dec
cmp
sbb
dec
sbbb
std
jle
repnz
sar
ret
mov
xor
mov
pop
std
call
sub
mov
push
sub
call
fmuls
scas
sub
sub
cmp
jne
or
sar
in
cmp
sbb
cmpb
add
clc
or
push
pop
rolb
ficomps
xor
sbb
mov
adc
cltd
xchg
mov
in
rolb
jo
sub
aam
add
sub
pushf
jmp
ret
mov
jmp
lret
xor
jecxz
add
std
or
inc
xchg
jg
jmp
sub
xchg
cs
sub
sahf
pop
int
fldenv
pop
sub
cmpl
jo
arpl
push
add
filds
jnp
les
dec
movsl
daa
pop
mov
cli
mov
scas
xorl
std
mov
mov
cmc
bound
mov
pop
testl
imul
cmp
repz
cmpsl
push
ret
insb
js
pop
cmp
ss
mov
pop
sarb
mov
test
jmp
popa
mov
xor
lds
add
xor
jmp
or
int3
enter
int3
push
or
pop
ret
adc
xor
rcrb
mov
dec
or
sub
add
or
cltd
or
imul
ret
nop
bndldx
xor
push
xchg
cmp
cmp
loope
int
push
je
or
rcrl
dec
push
out
imul
aaa
or
inc
ret
les
pop
mov
or
mov
dec
jge
sahf
or
test
into
mov
dec
add
pushf
ret
add
sub
in
or
and
pop
sbb
in
hlt
test
and
int3
sbb
mov
and
mov
in
push
or
sbb
lahf
cmc
adc
pop
rclb
jo
sti
and
shlb
jge
inc
push
sbb
mov
mov
sbb
pushl
insl
insl
fdivrs
and
lahf
xchg
test
jp
outsb
inc
fdivr
add
push
mov
mov
adc
stos
cld
push
cmpl
push
stos
jae
xchg
mov
mov
jmp
inc
loopne
push
loopne
stos
mov
jb
loopne
test
out
sub
ljmp
imul
or
cld
add
or
pushf
or
sbb
call
sbb
push
adc
xchg
out
inc
add
adc
pushl
or
clc
pop
inc
mov
xchg
les
sbb
inc
inc
push
cld
add
push
movsl
inc
jbe
adc
xor
call
subb
adc
push
push
pop
and
mov
ret
mov
mov
and
cmp
xor
push
mov
clc
pop
push
xlat
push
mov
mov
lods
out
shlb
lock
mov
or
sti
cmp
push
mov
outsl
ss
add
cmpsl
jg
inc
loopne
lahf
jge
cmp
sub
lea
into
rorb
mov
sar
ret
sub
sahf
fbstp
out
adc
mov
sbb
xor
jne
clc
pusha
push
add
in
xchg
push
pop
call
push
enter
jge
pop
push
add
cmp
push
mov
sarb
jl
inc
xchg
or
sub
or
cmp
dec
jb
or
jnp
shl
test
std
and
mov
iret
ja
cmc
xchg
imul
jo
pop
leave
inc
sub
jecxz
ljmp
cltd
dec
add
icebp
add
mov
scas
sub
std
inc
out
out
mov
fstps
push
loopne
cmp
sahf
pop
push
ret
xchg
call
or
in
nop
jmp
xchg
dec
sub
lock
push
imul
test
sahf
mov
lea
loopne
xchg
pop
and
mov
es
lahf
mov
lock
push
mov
add
orl
shl
add
xor
adc
sub
xchg
iret
aas
dec
loope
add
add
pop
mov
loop
or
inc
sbb
or
push
push
sub
loopne
data16
dec
add
sbb
fs
cld
mov
leave
sti
fadds
sbbb
cld
dec
xchg
xchg
rclb
lret
lock
mov
scas
call
xlat
sarb
sub
lahf
xchg
push
push
into
iret
xchg
or
inc
and
add
sbb
hlt
mov
add
imul
cmp
jo
lock
cmp
push
push
jmp
add
pop
push
scas
aaa
mov
into
int3
das
and
and
fisubs
or
sub
testl
sub
push
daa
call
mov
lods
lret
test
jo
and
fnstenvs
add
jo
cld
jmp
inc
and
inc
mov
cltd
mov
imul
fs
cs
inc
xchg
and
lcall
jge
ds
xor
jne
push
cmp
aaa
or
nop
fnstenv
or
pop
outsb
lods
nop
and
jb
les
or
push
lcall
movsb
rcrb
fdivl
pop
jl
cmp
lods
sbb
and
cmpsl
lock
or
or
les
and
enter
pop
bound
mov
stc
data16
cli
pop
ja
push
orl
stos
les
daa
mov
adc
test
mov
and
add
mov
roll
push
pop
ja
and
dec
mov
cmc
jl
into
out
cmpsb
out
dec
xor
pop
inc
cmpsl
sub
adc
mov
aad
mov
push
mov
pop
add
xor
or
sub
adc
push
mov
nop
push
pusha
pop
outsb
leave
je
leave
jecxz
pop
xor
cmp
pop
repnz
pop
cmp
imul
mov
cmp
jbe
sbb
sub
stos
jge
jbe
mov
sbb
add
jl,pn
and
movsl
das
inc
cmp
xor
outsb
and
push
dec
cmp
cmp
inc
cmp
es
cmp
cmp
adc
xor
cltd
in
rcrl
or
xchg
xchg
mov
enter
xchg
mov
dec
push
mov
jge
outsl
adc
and
clc
adc
and
inc
mov
push
xchg
pop
pop
sbb
mov
and
call
test
add
or
mov
call
push
movsb
fisttpll
sahf
mov
std
add
jns
dec
dec
mov
add
push
mov
jo
call
sbb
fstpl
in
mov
cmpsl
xchg
xchg
inc
clc
mov
rorb
stc
outsb
pop
mov
sbb
call
sub
nop
mov
xor
mov
mov
adcl
and
fcompl
pop
mov
push
scas
xchg
lods
enter
inc
pop
ds
mov
in
call
or
or
ss
cmp
movb
pop
sbb
mov
adcb
fsubl
sbbb
in
outsb
jne
pop
lcall
aam
leave
movsl
push
fmul
in
or
mov
sbb
outsb
lods
inc
and
sbb
dec
in
aam
cltd
in
cmc
sti
sbb
in
sub
es
outsb
xchg
test
pop
subb
daa
pop
lods
cmp
mov
add
mov
adc
insb
lcall
call
nop
mov
inc
add
imul
xchg
fldl
add
aam
lods
inc
cltd
scas
sub
inc
sub
push
std
cmp
add
repz
lea
and
es
test
lret
cwtl
cmp
dec
inc
clc
xchg
lods
mov
sub
xchg
push
mov
mov
rcll
xor
push
jge
adc
mov
ret
sbb
std
loop
pop
movsb
push
das
mov
or
sub
and
cmp
rolb
adc
pop
add
pop
jns
rolb
cmc
sahf
in
jmp
mov
movsl
rorb
scas
mov
add
add
or
and
xchg
jns
xchg
ljmp
xchg
push
xchg
or
mov
and
jne
add
nop
sbb
rcll
ret
xchg
jnp
popf
das
sbb
add
cs
out
dec
add
mov
mov
movsb
je
loope
enter
or
add
ja
ret
push
or
or
cwtl
xor
push
or
cmp
rolb
enter
cmpb
add
adc
shll
sarb
sub
mov
sbb
adc
mov
inc
in
sbb
fiadds
daa
or
xor
in
in
add
nop
xchg
into
jl
pusha
pop
and
adc
add
mov
xchg
clc
hlt
mov
fsubrs
push
or
popf
out
and
mov
add
jp
add
ja
sub
insb
xor
or
push
inc
pop
pop
mov
xor
testb
pop
jbe
loopne
mov
in
ficoms
push
sub
into
cld
xchg
adc
iret
cs
mov
push
aaa
inc
inc
cld
xor
inc
mov
cmp
int
push
orb
std
push
sbb
lods
jmp
and
ss
push
cmp
push
push
outsb
lock
pop
mov
lea
cmc
inc
es
mov
out
leave
sub
mov
cmp
and
es
or
add
sbb
shll
add
jo
jnp
movsl
jb
nopl
pop
add
mov
das
inc
jo
jg
insl
jecxz
or
mov
cli
lret
sbb
jnp
daa
jmp
add
mov
dec
sbb
sahf
add
jno
jnp
sahf
test
mov
push
xor
cmpsl
jmp
mov
push
mov
cli
dec
cltd
mov
jne
movl
mov
mov
adc
jmp
sub
fstpt
lods
daa
or
jmp
orb
add
push
mov
sub
es
push
adc
push
push
icebp
test
sahf
jnp
xorl
aas
incl
xor
into
std
imul
jmp
lock
cli
and
xor
push
push
out
dec
imul
aaa
inc
pop
aad
or
aas
rolb
scas
cli
and
cmp
or
push
call
dec
ret
addr16
xchg
xor
lock
jle
js
mov
leave
inc
sub
lods
imul
add
xchg
bound
sub
enter
mov
jmp
loopne
cmpb
inc
cmp
xchg
aad
cs
inc
pop
shlb
inc
add
jge
add
jb
mov
xchg
mov
fs
fisubs
xor
aam
inc
nop
pop
inc
cmp
sub
aas
and
inc
out
dec
jne
mov
dec
or
hlt
pop
xor
cmp
fstl
lods
xor
outsl
jo
inc
jbe
mov
inc
dec
jne
fbstp
sarb
jmp
add
xor
scas
dec
push
jnp
cmpsl
cmp
or
enter
push
jo
mov
mov
orl
mov
in
mov
push
pop
cmp
adc
and
ljmp
cmpsb
pushf
in
or
xchg
sbb
sahf
enter
mov
xor
pop
pop
pop
jne
fistpl
insl
test
cmp
dec
std
pop
push
aam
xor
xlat
testb
insb
ljmp
add
roll
mov
das
mov
or
xor
clc
add
out
jg
out
ja
inc
cmp
inc
jmp
xor
dec
sbb
add
xor
add
sub
cmp
jo
add
adc
fcompl
scas
icebp
jmp
int3
les
and
sub
mov
or
add
cmpl
je
push
and
xor
mov
pop
add
xchg
ret
xor
jmp
and
rcrb
mov
xor
rorb
cld
push
sahf
cmpl
mov
cmpl
ret
ret
ret
adc
mov
rolb
add
xor
pusha
inc
sub
add
dec
rclb
ret
je
sahf
sbbl
arpl
pop
iret
dec
imul
adc
inc
out
adc
pushl
out
into
int3
adc
sbb
das
adc
data16
mov
sbb
sub
add
mov
rcl
xchg
clc
add
cmp
pop
push
mov
sbb
cwtl
daa
sbb
pminsw
inc
mov
and
jle
jg
call
or
imul
icebp
bound
mov
sub
inc
js
jns
scas
dec
jge
aaa
cmp
xor
adc
adc
inc
rolb
sub
dec
mov
adc
fdivrs
xlat
out
pop
and
leave
daa
or
lahf
xor
sbb
mov
nop
lock
aaa
adc
sub
xor
or
or
mov
insb
leave
mov
mov
lahf
cmp
mov
jmp
pop
push
fstps
ret
or
add
pushf
or
test
ljmp
mov
inc
mov
std
ss
mov
mov
mov
push
push
pusha
mov
jmp
or
aas
push
scas
jo
push
jl
cs
adc
imul
pop
xor
movl
add
or
pop
add
lea
dec
xor
inc
push
loope
sahf
xchg
mov
jl
adc
testl
push
push
bound
scas
movsl
pop
arpl
adc
imul
sbb
or
in
mov
loopne
or
ds
dec
inc
xor
xchg
push
dec
sbb
push
xchg
push
mov
adc
pusha
xor
iret
jnp
mov
or
xor
shl
pop
icebp
mov
mov
rorb
adc
mov
fs
and
mov
push
and
fwait
and
sub
sbb
rcrl
cmp
sbbl
sub
pop
cmp
les
sbb
cmpsl
bound
jmp
push
dec
mov
mov
es
add
and
pop
cmp
pop
adc
xchg
scas
popf
ficoms
nop
mov
outsb
adc
jge
or
jecxz
adcl
inc
adc
sub
push
in
push
mov
jo
les
fmul
gs
data16
movsb
in
sub
gs
jae
adc
pop
sahf
and
mov
mov
inc
xor
mov
js
mov
dec
cmc
ja
mov
pop
orl
stos
sub
add
inc
pop
fistpl
push
pop
xor
loop
push
or
pop
push
call
xlat
cmp
mov
xchg
js
adc
sbb
pop
mov
pop
pop
stos
mov
cltd
xchg
lea
push
add
loopne
jmp
mov
sub
int3
jp
add
js
or
mov
leave
fnstsw
out
cmp
lret
notl
adc
sub
mov
sub
lsl
sbb
or
pop
nop
arpl
pop
pxor
cmp
xchg
push
push
shrb
add
jg
call
push
jmp
add
inc
adc
and
ret
movsl
inc
push
pusha
jo
mov
dec
jne
shlb
imul
push
bnd
lea
or
xor
mov
xchg
les
je
xor
fldt
jne
adc
sub
jne
outsl
stos
and
or
inc
inc
cli
pop
pop
ret
mov
cmovno
sub
je
popf
fstpl
push
mov
bound
add
cli
shr
add
leave
inc
repz
pop
jb
push
sbb
jg
xor
js
popf
jecxz
notb
les
add
in
ss
test
add
dec
ret
adc
push
mov
push
pop
and
not
and
push
or
fimuls
mov
leave
push
clc
mov
aaa
push
xor
and
movsb
push
adc
ds
ja
add
cmpsb
out
pop
dec
mov
mov
lcall
negb
rclb
xor
lret
or
imul
rcll
xorl
dec
add
subb
dec
jecxz
mov
lock
loopne
xchg
pusha
push
xchg
adc
test
dec
push
call
lock
xchg
xlat
push
popf
pop
dec
fidivrs
bnd
xchg
mov
jno
xchg
js,pn
cmpl
out
fcmovnbe
es
inc
sbb
jnp
and
int3
sub
das
and
pop
mov
sbb
dec
add
and
repnz
add
sbb
adc
sbb
scas
mov
adc
ja
push
sahf
mov
loopne
fbld
je
call
jns
loopne
dec
cld
and
sbb
xor
or
mov
xchg
jmp
in
ficoms
decl
mov
mov
jge
in
fcomps
cvtpi2ps
js
and
fmull
fstl
mov
cmp
push
mov
dec
mov
and
stc
cmp
loopne
dec
out
out
clc
add
mov
nop
push
sbb
jno
push
and
cs
aaa
jge
andl
orb
mov
lods
pop
frstor
fsts
inc
push
cmp
pop
sub
andl
inc
loop
jge
jle
fidivs
sub
pusha
push
and
sbb
popf
divb
cltd
jmp
inc
faddl
and
call
jmp
test
xorb
inc
jp
push
clc
and
ret
and
push
push
test
cwtl
mov
jmp
add
cld
push
push
mov
adc
rolb
mov
add
mov
pop
cli
xchg
push
ret
in
push
mov
or
fnstenv
and
jle
mov
mov
sub
mov
sbb
add
jmp
bound
mov
cmp
xor
or
inc
scas
jns
add
gs
sbb
add
loope
call
mov
or
ret
inc
pop
mov
sub
mov
or
in
mov
mov
enter
std
cli
and
iret
push
jne
rorb
cli
adc
pop
mov
inc
sbb
rorb
inc
jl
add
dec
mov
fldt
call
lea
push
lea
sbb
fs
cmp
and
dec
mov
into
iret
mov
xchg
out
nop
mov
daa
sub
mov
andb
mov
mov
insl
popa
cwtl
pop
jecxz
in
cmp
fbld
int3
shl
inc
mul
mov
pop
pop
dec
sbb
xor
dec
jne
pop
cs
mov
add
test
in
add
ret
add
mov
or
mov
clc
fisubs
add
sub
loope
pop
in
sarb
xor
or
adc
shll
inc
mov
or
mov
shrl
xor
xor
test
dec
aas
insb
jne
inc
sub
jno
push
aad
pop
add
ss
or
jne
cmpb
movl
jl
cmp
inc
xor
popa
inc
inc
icebp
dec
movsl
sub
push
jmp
imul
in
jno
pop
leave
mov
andl
scas
push
ds
push
pop
enter
or
pop
cmp
loopne
pop
loopne,pt
sbb
orl
scas
jecxz
int
inc
push
clc
fs
ret
jns
push
scas
mov
sar
mov
pop
push
or
mov
sbbb
nop
call
inc
lea
hlt
std
shl
pushf
dec
mov
js
inc
mov
jl
mov
push
mov
dec
imull
jnp
cld
sub
cwtl
add
push
cmp
jne
xor
xor
fdivr
mov
js
mov
jne
xor
in
test
int
or
sub
or
sahf
mov
jns
daa
ljmp
loopne
out
add
xor
mov
cld
xor
sbb
xor
icebp
push
add
mov
in
xchg
mov
ficoml
mov
in
or
or
mov
or
add
sarb
push
xor
aaa
mov
jecxz
adc
adc
mov
sub
xor
dec
mov
lcall
std
and
sbbb
mov
insl
fidivs
sbb
rcll
leave
jae
sbb
hlt
lds
and
andl
cmp
lcall
jne
xorb
sbb
cmp
pop
adc
hlt
jno
cmp
inc
add
dec
jmp
inc
out
pop
mov
or
mov
xchg
mov
in
push
stos
rcll
dec
mov
out
add
loopne
xor
ja
adc
xchg
lea
inc
add
scas
and
and
cmpb
pop
inc
pop
cmpsl
inc
dec
dec
nop
pop
out
or
cmp
incb
pop
add
mov
pop
scas
test
mov
fstps
sahf
xor
lcall
xor
xor
push
dec
movsl
ret
in
call
inc
fistl
movsl
pusha
xor
or
sbbb
sbb
sbb
sbbb
sbb
xchg
adc
hlt
jp
sub
and
popa
fwait
pop
inc
repz
es
adc
into
sbb
cmc
push
fisubs
stos
adc
aas
dec
data16
shlb
or
mov
inc
push
push
mov
sub
incb
cmpsl
adc
mov
and
xor
pop
or
ds
cmpsl
push
sub
sbb
jmp
test
lahf
test
sbb
jg
int3
jl
divl
popf
loopne
sub
test
jne
jl
call
mov
dec
arpl
sbb
push
adc
xor
fisttps
cmp
loope
add
and
adc
mov
mov
dec
rorb
test
fstpt
sbb
mov
je
push
push
mov
pop
mov
in
int3
nop
dec
add
es
and
sub
inc
movsb
or
shr
lea
dec
jge
jmp
inc
mov
sbb
adc
cmovle
sub
xchg
scas
add
pop
and
adc
daa
pop
mov
mov
mov
adc
ret
lea
in
mov
push
push
dec
vcvtsd2ss
push
sub
out
sbb
shrb
jns
sub
jmp
bound
ret
es
aas
iret
scas
lcall
in
xor
adc
or
inc
mov
into
aas
mov
and
sbb
xchg
stos
mov
aaa
push
xchg
cmp
and
rcrb
inc
lods
pop
insb
xor
jb
popf
dec
inc
outsl
inc
out
movsl
rorl
or
dec
mov
push
pop
pop
mov
fs
outsb
enter
out
imul
int3
loope
jecxz
test
or
sahf
es
js
cmp
sbb
mov
outsl
pop
add
pop
mov
outsb
lods
adc
test
adc
pop
loop
movsl
pusha
outsl
scas
push
aaa
xor
imulb
scas
mov
push
aaa
fsubrp
jno
jno
add
jno
pop
sbb
call
inc
jno
movsb
sbb
data16
int
xchg
cmp
jae
or
xchg
jle
inc
push
es
sbbl
xchg
rcrb
stos
sbb
xchg
pop
roll
push
movsl
xor
jne
xchg
lret
loop
es
mov
pop
dec
jb
push
lods
cmp
daa
loopne
xor
fsubr
xchg
push
jmp
scas
lea
jns
xchg
ja
ljmp
cmp
sub
xor
clc
mov
shl
enter
lods
mov
inc
jb
mov
and
adc
dec
xor
lea
xchg
mov
mov
xchg
adc
sti
push
orb
pop
mov
arpl
dec
lea
repnz
imul
movsb
push
and
sbbb
lods
lods
lods
movsl
sbb
lret
mov
xor
or
arpl
xor
mov
cmp
push
pop
or
inc
add
faddl
cmp
iret
in
xor
gs
mov
movl
or
iret
inc
loop
mov
jno
mov
cmp
popa
je
jnp
movsl
xorl
inc
or
pop
loopne
lea
inc
cld
pop
pop
inc
or
pop
pop
adc
cmp
sbb
inc
and
aaa
jp
push
movb
xor
mov
jne
xor
negb
out
repz
jmp
repnz
pop
xchg
sti
cwtl
add
lret
outsb
scas
jmp
jnp
inc
mov
or
arpl
dec
cmc
inc
fst
ss
pop
mov
adc
in
movsl
xor
xchg
jb
push
testb
rorb
clc
and
ds
loope
lock
decb
cmp
sbb
fisubs
lods
sbb
test
fs
inc
lea
and
jo
inc
adc
or
xlat
adc
cmp
jb
lds
clc
mov
pop
je
inc
fwait
iret
idiv
and
outsl
push
push
dec
adc
push
and
imul
mov
inc
or
jbe
jle
jg
cmpsl
dec
dec
outsl
ja
jo
mov
outsb
inc
cmp
and
mov
pop
dec
in
push
pop
fistps
outsl
rorb
inc
out
mov
sub
shll
adc
pop
xor
dec
loopne
rclb
in
clc
mov
push
ljmp
ret
mov
adc
shrb
lret
ret
mov
sarl
mov
test
fadds
pop
add
mov
and
jl
add
jae
and
jmp
popf
jbe
add
or
insl
test
and
cld
popf
sub
dec
or
shr
pop
dec
leave
arpl
add
and
add
or
bts
jmp
jecxz
xor
je
cmpsb
stc
add
sbb
xor
ret
les
cmp
out
incl
js
add
inc
adc
and
cmp
arpl
push
cmp
sarb
testl
add
loope
test
pop
loope
pop
lock
imul
push
cmp
lret
xor
push
push
mov
divl
add
xor
mov
insb
shlb
fstpt
cli
add
mov
mov
rorb
pop
addb
test
jle
andl
or
stc
mov
jl
mov
adc
popa
aas
pop
es
cmpl
pop
subl
xchg
test
xchg
test
lret
dec
cmp
sub
cmp
je
lret
add
and
or
add
mov
pop
roll
sahf
pop
loop
mov
rorb
push
push
sub
mov
loopew
ja
mov
mov
sbb
sub
pop
xchg
mov
stos
lock
xchg
jmp
inc
or
push
push
addb
pop
ljmp
add
sub
dec
mov
movsl
adc
push
push
daa
and
or
mov
inc
add
adc
sbb
imul
xchg
jmp
outsl
mov
lret
xchg
xchg
mov
js
ds
sub
mov
rclb
arpl
lea
jo
lock
pop
add
incl
mov
les
pop
pop
add
out
dec
xlat
inc
jne
adc
int3
add
add
mov
adc
pop
sbb
or
rolb
push
cs
stos
add
xor
adc
push
push
pop
pop
sub
xchg
push
sbb
inc
cwtl
int3
gs
cmp
enter
xorb
or
dec
sbb
adc
jnp
add
imul
or
out
sub
fidivrl
test
mov
pop
pop
js
rcr
jmp
push
inc
cs
je
cmp
addb
jne
jnp
or
js
and
cmp
add
mov
jmp
enter
popa
push
pop
jle
push
add
aam
inc
jne
push
add
sbb
xor
push
mov
mulb
or
fcoml
xchg
add
xor
ds
and
sbb
std
jb
sbb
xor
sub
xor
and
cmp
add
out
sub
rorl
arpl
int3
mov
sahf
mov
sub
add
jb
xor
dec
jb
enter
aam
aas
lea
add
add
and
xchg
mov
xor
lret
lock
mov
orl
mov
in
rcrb
shlb
xorl
or
mov
into
js
push
je
lods
add
lock
sub
lea
adc
fstps
or
push
cmp
or
or
out
dec
mov
and
mov
mov
push
pop
push
int
sarl
loope
lea
daa
mov
or
dec
jg
out
mov
incl
or
movb
xor
out
xchg
pop
dec
inc
cmpsl
sbb
cmpl
push
push
mov
out
push
pop
call
imul
add
mov
push
fidivrs
or
fnstsw
sbb
movsb
or
aas
ss
push
or
add
arpl
scas
add
faddl
add
cmp
mov
xor
aas
cmp
or
rcrb
cli
roll
cmp
jb
scas
daa
les
out
nop
cmp
pminsw
jle
or
pop
add
or
push
or
fmuls
or
lock
push
stos
cmp
pop
ret
add
addr16
add
xor
mov
adc
pusha
data16
add
mov
cmp
clc
sbb
dec
pop
and
repz
addl
or
orb
jmp
mov
dec
push
pop
jmp
lea
dec
sub
push
sbb
loope
sub
push
aaa
mov
or
xor
mov
jne
out
pop
mov
add
or
mov
push
mov
movl
pushf
push
fwait
les
jmp
push
pop
sbb
adc
or
mov
and
movsb
rorb
cwtl
mov
gs
push
out
mov
loop
jmp
test
not
mov
jle
jmp
push
adc
shlb
and
je
inc
lock
push
sahf
lock
mov
sbb
cmp
je
mov
sub
mov
or
mov
inc
test
push
lret
push
mov
sti
hlt
test
test
hlt
xor
orb
add
pop
sub
pop
ret
mov
sbb
mov
repnz
push
sbb
leave
mov
orb
sub
inc
xchg
inc
jb
mov
mov
lea
daa
pop
pop
cltd
fs
mov
sbb
enter
push
popf
mov
add
rorb
pop
sbb
xor
test
imul
jb
mov
sbb
addr16
add
push
add
jnp
incb
xchg
frstor
and
fwait
dec
in
daa
jg
xor
xor
xor
out
loope
mov
or
shrb
mov
xor
push
xor
mov
inc
adc
idivl
mov
in
jl
inc
dec
inc
cmp
sub
jns
fists
mov
cmp
jecxz
adcl
add
loop
inc
pusha
inc
test
or
adc
and
les
and
arpl
adc
pop
mov
adc
jecxz
xchg
xor
inc
add
adc
lret
notl
imul
push
jo
das
sbb
push
xorl
mov
push
jmp
jmp
jb
sarb
mov
add
or
leave
push
clc
add
adc
stc
aad
sbb
push
pop
lea
ret
sbb
daa
push
insl
call
imul
lock
and
and
test
push
aad
adc
jmp
or
cmp
jle
lret
or
dec
cmp
pushf
ss
pusha
inc
not
cmp
or
add
sbb
call
inc
js
int
xchg
push
add
dec
push
mov
jbe
loop
add
push
sbb
idiv
sti
scas
adc
std
out
add
mov
ljmp
subb
lods
add
jo
mov
in
out
pop
jecxz
loopne
xor
sahf
es
sti
les
sahf
mov
scas
scas
pusha
dec
rcl
test
or
adc
mov
jo
inc
add
sti
jle
adc
sub
ss
ja
and
movsb
je
movl
sub
sbb
aad
cmc
adc
push
aas
clc
lock
loop
in
add
and
and
or
push
ret
cmpsl
dec
mov
or
cmp
adc
ljmp
out
pop
lea
adc
cwtl
and
xor
lock
add
push
xchg
test
push
je
jg
into
add
xchg
adc
enter
add
enter
add
jb
mov
pop
xchg
fdivs
inc
js
and
sub
sarb
pop
push
rorb
rcl
loope
sub
std
jnp
xlat
fcoms
or
lock
mull
out
int3
jnp
lsl
jmp
push
pop
push
push
inc
shr
rcr
and
push
cld
shr
rcr
or
mov
repz
dec
fucomip
xchg
and
pop
jb
cmp
or
pusha
out
out
jb
cmp
or
xor
and
test
or
fidivl
fidivrl
lret
iret
pop
ret
or
test
mov
call
xor
jmp
mov
add
mov
jmp
push
mov
insl
jecxz
cmp
sbb
jge
sub
out
or
xchg
dec
scas
fs
cmpb
mov
call
or
mov
popa
shr
push
cmp
cli
mov
xlat
sahf
stos
and
cld
sbbb
sub
mov
idiv
or
les
inc
or
cmp
mov
mov
fsts
stos
mov
push
push
btsl
jmp
insl
roll
xchg
push
push
sbb
cmp
sbb
insl
and
loop
mov
xchg
outsl
jmp
dec
and
insl
pop
ret
mov
jb
xchg
and
jmp
or
push
push
adc
iret
pop
call
aad
pop
nopl
imul
add
cmp
mov
sub
inc
loopne
xchg
popa
adc
jno
insb
std
sub
jne
xor
test
xchg
cmp
pop
inc
cmp
mov
add
lock
push
daa
add
test
cmp
mov
pop
test
push
orl
lea
loope
add
xchg
and
add
inc
add
pop
pop
or
mov
pop
mov
sub
data16
mov
rclb
pop
mov
sub
loopne
pop
pop
outsb
add
sbbb
cmpsb
jo
inc
in
jmp
jb
imul
lods
mov
inc
add
mov
in
popf
clc
xchg
adc
sub
mov
lock
cwtl
push
or
cmp
sub
fcomp
je
inc
je
mov
ret
mov
xchg
pop
rclb
push
xor
in
or
inc
xchg
mov
add
cmp
xor
dec
outsb
aas
ljmp
lds
xchg
jbe
push
add
add
adc
and
lret
or
sarb
les
cmp
aam
popa
divb
jnp
cmp
ret
push
je
mov
xchg
gs
sub
push
fildl
sbb
test
std
pusha
fwait
push
aaa
test
orl
psadbw
aad
in
pop
cmp
adc
outsl
push
jl
aaa
and
fdivs
adc
ret
and
adc
sbb
int
mov
inc
jmp
fcoml
fsubs
inc
jnp
xchg
in
cmc
nop
aam
adc
inc
inc
push
pop
popa
test
aaa
push
push
sbb
jp
mov
movb
sub
xor
inc
out
jg
pop
imul
mov
sub
jbe
jl
cmp
jg
inc
jmp
movl
lds
jbe
jne
imul
xchg
bound
push
jge
aas
sbb
sar
xchg
push
cmp
sbb
pop
jnp
push
jp
je
dec
cmp
je
mov
in
jbe
inc
lock
xor
jp
call
or
mov
arpl
fstp
hlt
jne
push
adc
and
add
sbb
lret
mov
stos
adc
sub
mov
bound
das
adc
push
adc
mov
incl
cmp
jge
mov
imul
repz
add
push
and
mov
bound
loopne
imul
loopne
add
sub
or
and
pop
iret
sti
idiv
xor
pop
inc
rclb
jmp
add
cli
and
shl
sbb
and
push
pop
pushf
or
add
sahf
cwtl
xchg
inc
js
mov
into
pop
cmpsb
ljmp
or
mov
or
in
xor
mov
sbb
cmp
daa
add
aam
divb
mov
sub
adc
jo
adc
orl
mov
sub
xchg
mov
or
adc
push
movsb
push
pop
dec
xchg
in
add
orl
das
mov
repz
add
cmp
or
xchg
bound
rcl
lock
ja
sti
fs
movsl
stc
loopne
adc
pop
and
push
sub
mov
addl
cmp
push
rolb
addr16
or
and
filds
ljmp
mov
jo
cmp
and
lea
lea
ljmp
cmp
out
mov
pushf
push
sbb
add
punpcklbw
mov
popl
imul
pop
mov
add
mov
adc
cmp
enter
loopne
shrb
jnp
loopne
adc
pop
inc
inc
dec
clc
rorl
mov
fisttps
pushl
add
jno
push
imul
push
loop
mov
push
stos
adc
movsb
pop
scas
adc
dec
ljmp
sti
push
inc
cmp
ds
fsub
lock
sub
imulb
pop
out
pusha
xor
popa
insb
enter
push
inc
adc
inc
add
or
sbb
lcall
test
rorl
subb
add
push
sub
add
stc
or
xchg
cmp
cmp
ljmp
jne
sub
lcall
mov
fs
pop
sbb
add
aas
scas
loop,pt
pop
or
or
dec
sub
cmp
les
jae
mov
jle
loopne
scas
call
test
data16
es
xchg
fistpl
jl
sbb
ss
push
sbb
test
sbbb
or
int3
insl
adc
into
push
xor
or
clc
movd
and
mov
jmp
mov
out
dec
lcall
cmpsb
sub
inc
jl
cmpsb
sub
repz
dec
addb
xor
cmp
dec
sbbl
inc
adc
cmp
pop
push
or
push
adc
inc
adc
inc
inc
cmp
lea
jae
cmp
sbb
pop
inc
jge
inc
inc
jo
rolb
cmc
mov
out
daa
add
push
sub
mov
test
clc
mov
push
push
sub
repz
push
or
inc
ljmp
mov
fwait
inc
fsubr
cltd
inc
aam
das
xor
test
push
mov
xor
leave
lock
ret
cmpps
loop
pop
cmp
or
add
bound
mov
sbb
adc
xlat
das
cmpsb
inc
mov
push
push
nop
pop
sub
push
dec
mov
cwtl
or
imul
sub
jecxz
sbb
add
call
and
push
or
push
or
fidivl
or
xchg
push
sbb
or
lea
and
pusha
add
push
bound
pop
dec
mov
add
push
inc
push
push
pusha
cmp
hlt
add
mov
sbb
push
arpl
xchg
add
jmp
andl
scas
loopne
push
jmp
mov
stos
popf
push
test
xor
scas
and
addl
test
cmp
jle
jle
sub
cmp
xor
add
outsl
or
jmp
dec
push
in
and
sbb
jbe
pushf
add
testl
fcomip
jmp
ret
test
sbb
sbb
mov
sub
insl
xorl
mov
pop
jge
cmp
add
movsb
fstpt
jg
add
enter
out
dec
jae
imul
sbb
sub
push
jmp
and
scas
shr
outsb
mov
dec
decb
lods
leave
pop
push
sub
and
cmp
dec
cwtl
in
fnstenv
es
push
hlt
out
push
and
or
pop
stc
sub
cmp
mov
push
movsl
jbe
sub
mov
jecxz
stos
loopne
je
mov
mov
jge
in
mov
movsl
mov
ja
push
lret
inc
inc
cmp
testl
testl
sbb
inc
jmp
sahf
dec
dec
or
cmp
xor
pop
es
repnz
and
or
insb
decl
stc
push
adc
jg
cmc
jecxz
ds
inc
jmp
cmp
xor
push
pusha
pop
xor
xchg
les
mov
dec
xchg
hlt
pop
mov
sub
jne
or
push
lods
jp
or
pushf
push
fsubrs
cwtl
jge
int
sub
add
mov
rorl
sbb
test
lock
es
adc
loopne
add
sbb
pop
popf
fstpl
call
inc
ret
sub
jnp
sbb
jle
jne
rcll
les
pushf
add
sarb
lods
sarl
add
and
and
sbb
sbb
mov
jb
ljmp
movsl
add
enter
jmp
xorb
out
or
jmp
sbb
into
mov
roll
stos
movsb
mov
or
nop
inc
mov
out
and
xlat
jae
jle
pop
mov
push
or
ret
mov
aas
into
ja
mov
add
in
inc
testl
ret
mov
jo
fwait
pop
movsl
jns
dec
into
stos
inc
jne
inc
or
cmp
sbb
cltd
pop
rclb
add
jmp
xchg
nop
jbe
int
adcb
add
out
mov
pushf
int3
push
lea
lcall
test
mov
adc
cld
xor
cld
sub
fwait
lods
lea
cmp
jb
fs
mov
inc
ja
dec
js
add
incw
cmpl
insl
mov
push
pushf
in
jg
out
shr
inc
or
sbb
sti
jg
add
add
rolb
loop
sub
lcall
pop
pusha
aaa
lcall
idivb
or
push
jge
adcb
into
xchg
or
sub
mov
addb
mov
lcall
or
fadd
loopne
insl
in
sti
pop
shr
or
mov
sahf
dec
mov
leave
and
outsb
mov
loop
test
ja
push
test
cli
sub
jne
sbb
xor
movsb
sub
rcr
fidivrs
mov
add
inc
jmp
push
jnp
dec
out
jmp
or
lods
mov
lods
pushw
and
mov
mov
xor
and
sbb
jmp
xchg
or
daa
mov
adc
push
dec
into
cmp
lods
add
jae
addr16
dec
and
pop
cmp
lods
add
or
and
sbb
sub
pop
jne
push
lret
das
sub
test
sbb
in
sbb
movups
inc
pushf
fs
pop
mov
inc
mov
inc
mov
mov
push
jns
iret
sti
ja
add
mov
sahf
out
push
fs
sub
push
mov
add
loope
adc
rcll
xchg
lock
incb
jne
testb
mov
testb
push
xor
movsb
icebp
push
clc
clc
addr16
sub
pop
and
jp
lret
daa
outsb
cld
sbb
mov
int
add
and
int3
test
lock
mov
pop
push
mov
xor
or
pop
mov
jne
add
push
xor
jnp
add
sbb
pop
jo
push
in
xchg
sbb
add
shrl
sbbl
push
or
mov
mov
pop
imulb
es
sub
mov
loopne
sbb
pop
shll
fwait
mov
push
pushl
mov
idiv
xchg
shrl
bound
ds
add
xchg
loope
insl
jnp
cmc
loopne
ret
int
or
sbb
jne
sbb
xlat
jmp
sar
addb
pop
sub
jno
fists
pop
test
iret
jmp
sbb
call
and
pop
xor
mov
cmp
dec
test
mov
inc
nop
incb
push
add
rorl
lea
cmp
loope
loop
xor
es
out
and
jmp
sub
mov
dec
push
or
jne
dec
stc
pop
imul
push
xchg
dec
mov
mov
pushf
out
inc
ljmp
push
dec
ret
add
add
enter
push
std
jmp
push
dec
lahf
loope
push
lea
add
leave
sbbb
sti
sar
mov
aas
or
loopne
or
testb
dec
adc
pop
or
sub
mov
cmp
adc
and
xor
push
imul
sbb
insb
add
or
dec
cli
and
test
icebp
lods
add
inc
pushl
mov
js
lcall
inc
or
and
ds
imul
sub
lock
xchg
push
sbb
sbb
mov
testl
mov
pop
mov
or
fs
push
add
or
lcall
xor
push
hlt
mov
andl
push
or
inc
push
dec
add
sbb
or
pop
mov
out
out
lret
add
mov
enter
sub
push
jo
test
or
and
lock
call
jmp
jo
xchg
cmp
dec
inc
outsb
insb
popa
shll
hlt
xor
or
lea
adc
jns
lcall
xchg
sub
add
lea
lods
inc
add
or
jns
pop
add
mov
loopne
dec
inc
mov
lods
rcll
incl
cmpsb
int
mov
xchg
add
test
jmp
shll
mov
xlat
or
mov
add
dec
or
xor
cltd
js
test
or
mov
cli
lock
push
push
jmp
sub
aad
js
mov
pusha
dec
iret
add
add
je
pop
dec
insl
lret
outsb
insb
pop
sbb
nop
rcrb
decl
fisttps
cmp
sub
mov
and
outsl
lahf
inc
mov
sbb
dec
mov
cmp
sbb
addr16
test
shr
stc
clc
shll
sbb
mov
push
cmpsb
insl
repz
jae
mov
adc
clc
cmp
jne
shufps
cmpsb
fdivrs
addl
xchg
pop
imul
lea
mov
add
jbe
xchg
mov
and
pop
loopne
sub
insb
jmp
push
mov
jbe
ret
inc
fs
pop
jns
xor
aaa
inc
adc
fiadds
into
jg
sbb
mov
fadds
pop
into
mov
add
test
sub
and
mov
add
add
jmp
lods
jp
movsl
jne
lea
mov
stc
cmp
xchg
inc
cmp
jmp
adc
push
mov
test
out
push
sar
push
or
adc
lock
lods
je
push
inc
mov
es
or
sub
je
fidivrs
sbb
add
js
mov
jp
fwait
jo
lret
jmp
inc
mov
lret
and
adc
clc
jb
sbb
jae
lcall
lods
cmp
cmpsl
sub
mov
add
adc
sub
negb
add
ret
mov
fidivrs
adcl
rdtsc
andb
cmp
lret
and
sbb
into
push
xchg
cmpsb
or
jmp
les
test
push
adc
mov
push
cmp
stos
lock
pop
test
icebp
and
icebp
mov
imul
xchg
xchg
call
and
or
xor
scas
cwtl
sbb
loopne
push
ss
xor
movhlps
lods
wrmsr
sub
test
cmpsb
adc
adc
push
repz
popa
rorl
adc
pop
and
shlb
mov
test
and
and
adc
pop
fcompl
decl
rolb
loop
mov
and
cmp
push
mov
or
pop
xchg
xor
xor
inc
push
loop
jmp
dec
loop
popf
inc
fmul
mov
xor
lock
decb
cli
inc
sub
cmp
movsb
ja
add
push
jmp
test
push
pop
imulb
cmp
rcl
jmp
and
and
or
out
inc
jmp
stos
popa
add
pop
addb
cmpsl
push
add
mov
test
mov
jb
adc
es
add
push
push
sbb
inc
lcall
adc
inc
ret
pop
adc
push
adc
add
xchg
test
leave
jno
add
inc
testb
push
pop
or
dec
inc
jmp
xor
xor
popa
jge
mov
sub
add
add
dec
or
ret
sbb
push
pop
mov
pop
inc
adc
mov
jb
cmp
ret
sub
data16
dec
xchg
mov
mov
mov
cmp
inc
rorb
push
fcomi
xor
shrb
aas
add
lock
pop
shl
mov
pop
loop
xor
les
adc
inc
scas
push
sbb
sbb
or
and
shll
das
push
sbb
andl
cmp
in
or
mov
sbb
mov
jle
jl
ss
jle
push
xor
mov
jo
cwtl
jl
push
pop
cwtl
imul
jne
push
aas
sarb
out
int
xor
pop
lcall
push
leave
lret
in
xor
lock
mov
pop
inc
inc
mov
xor
scas
push
sbb
sbb
insl
push
std
adc
ret
push
pop
cwtl
test
push
push
jnp
jne
add
movhps
jne
dec
sbb
out
or
mov
jmp
mov
or
es
mov
mov
ficoms
std
insl
pop
data16
lret
fbstp
mov
push
jmp
cwtl
clc
dec
cmp
mov
in
incb
mov
or
push
hlt
icebp
imul
add
or
dec
inc
cmpb
leave
sbb
pop
insb
in
test
movsl
pushl
movsl
jae
call
imul
or
cmp
fimuls
add
ror
or
out
push
jne
jge
push
push
dec
hlt
and
xor
and
jmp
push
mov
sub
or
push
mov
pusha
nop
je
pop
or
and
adc
mov
mov
push
mov
mov
cmpsl
or
push
pop
test
jno
or
mov
xlat
ret
aas
cmp
and
xchg
pop
and
sub
cwtl
es
xor
or
adc
inc
inc
mov
push
inc
pusha
je
dec
sti
jne,pn
sbb
inc
mov
xor
loopne
adc
jge
fwait
out
add
or
sbb
adc
push
mov
or
lds
cmp
pop
jmp
cwtl
and
dec
cwtl
les
inc
sahf
int3
add
sub
mov
push
adc
jl
lcall
pop
ret
jmp
lea
jle
sarl
cmp
roll
das
out
sub
dec
sbb
mov
in
cmp
addl
dec
bound
sbb
or
inc
arpl
pop
push
cs
dec
or
test
mov
jb
ljmp
mov
inc
stos
sub
call
test
lahf
push
push
or
inc
notl
inc
mov
xor
int3
clc
mov
addb
mov
jl
mov
sub
or
add
out
and
jg
loop
rcrb
mov
push
loopne
pop
nop
adcl
pop
or
popa
mov
push
ret
xchg
orb
test
jg
idivb
cmp
jne
push
int3
or
dec
pop
adc
fwait
pop
mov
push
jmp
loopne
mov
repnz
xor
and
mov
mov
pop
mov
cmpsl
mov
push
cmc
dec
imul
int3
in
push
je
inc
sub
clc
sbb
inc
in
ljmp
sbb
push
pop
test
es
bound
dec
cld
and
addb
cmp
mov
mov
in
ja
mov
or
mov
loope
lahf
daa
movb
jle
pop
addb
mov
sbb
inc
mov
push
sub
pop
fcoml
jne
stos
out
rcr
cmp
add
or
or
pop
dec
add
jle
mov
xchg
ljmp
xchg
cmp
je
into
enter
iret
and
adc
pushf
inc
sbb
adc
aas
jg
cmp
decl
jg
xor
cmp
je
or
mov
mov
inc
push
push
in
mov
xor
mov
or
pop
and
and
dec
ret
adc
rclb
mov
push
xchg
or
in
gs
push
or
fldt
in
sbb
sbb
xchg
xchg
and
sub
adcb
cmp
xchg
ss
mov
cmovs
daa
daa
daa
dec
push
push
pop
leave
leave
leave
add
leave
leave
leave
leave
push
push
jmp
cltd
movsb
cmp
mov
xchg
cwtl
fs
dec
es
mov
cltd
test
ror
xchg
dec
enter
andb
adc
xchg
fsub
in
and
dec
call
dec
xor
hlt
clc
dec
push
cmp
cld
add
add
imul
or
adc
adc
sbb
dec
xor
and
sub
leave
and
xor
xor
gs
fiaddl
push
xchg
dec
es
push
pop
pop
shrb
fs
sbb
push
push
dec
jmp
pop
bound
sbb
add
test
and
test
mov
stc
outsb
sbb
mov
xor
push
mov
imul
and
adc
sbb
rorb
sbb
and
int
xor
and
adc
dec
xor
mov
and
test
inc
adc
dec
dec
les
dec
scas
addb
xchg
in
mov
pop
xchg
adc
sub
mov
mov
movsb
push
push
ret
lcall
icebp
or
and
je
ret
outsb
xor
xchg
loope
pop
xchg
push
and
pusha
dec
or
and
hlt
sbb
pop
mov
xchg
ret
push
fisubs
pop
mov
and
and
movsl
or
test
and
add
into
and
adc
jb
outsb
out
or
shll
dec
xor
adc
jb
fcmovne
or
shr
dec
outsb
add
jmp
add
and
ljmp
add
out
adc
or
rorb
pop
push
and
and
je
inc
dec
fcmovnu
lea
or
and
xor
sub
icebp
addr16
add
sbb
lock
and
mov
and
divb
jl
and
jecxz
sbb
sbb
int
add
or
dec
das
inc
adc
and
std
shll
sub
aaa
jge
je
std
push
sbb
add
fstps
and
jge
aas
pusha
mov
pusha
loope
pop
sub
xor
cmpsb
adc
cwtl
inc
jecxz
pop
fnstsw
ds
pusha
fldl
jns
ljmp
pop
sub
sub
push
sub
xchg
push
or
adc
test
add
add
test
fistpll
pop
movsb
icebp
and
es
ret
out
and
mov
dec
jne
orl
mov
lcall
or
stos
push
fsubrs
push
andb
pop
jb
sbb
loop
es
push
and
or
outsl
inc
mov
flds
fstps
jmp
fisttpll
scas
push
fstpl
adc
mov
loope
orb
push
hlt
adc
jbe
fsubs
pop
sub
mov
cli
jbe
sbb
cmp
pop
adc
xor
andb
test
call
xchg
push
sbb
pop
dec
push
dec
cli
sbb
aaa
sbb
out
stos
pop
fiaddl
rolb
dec
jmp
sub
cmp
mov
sub
jmp
sub
push
jbe
lcall
inc
lcall
add
adc
xor
scas
mov
mov
cmpsl
adc
rorl
mov
and
and
outsb
les
fstpl
ret
pusha
or
cmp
xor
or
or
add
add
inc
rcl
sbb
ret
mov
repnz
cs
xchg
es
shrl
incb
orl
sbbb
loopne
pushf
or
jle
push
pop
jmp
ret
psubsw
cs
icebp
rorb
inc
xor
roll
or
mov
mov
xor
out
loopne
add
add
out
or
and
pop
or
lret
add
popa
mov
repnz
mov
outsl
sbb
ret
loop
mov
add
out
ret
push
or
cmp
xchg
mov
je
pop
sbb
outsl
add
pop
add
or
sbb
sbb
add
jp
inc
sub
xchg
js
sub
stos
xchg
rcrb
mov
ljmp
sbb
pop
fstpl
daa
mov
jmp
jno
fnstenv
inc
and
aaa
pushf
and
lock
add
aam
js
or
pusha
jne
mov
jo
loope
inc
add
scas
adc
cmpb
test
pop
iret
in
aam
mov
add
imul
add
loop
pop
aas
mov
sub
pushl
aam
out
mov
ss
jbe
push
das
cmp
mov
lea
cmp
arpl
mov
cmp
nop
mov
push
xchg
mov
jnp
jno
orb
rorb
or
inc
add
je
loopne
mov
mov
lret
into
sbb
cmp
mov
add
clc
or
sbb
xor
jbe
mov
shll
stos
lret
lock
or
sbb
pop
imul
push
mov
popf
loop
and
pop
mov
loopne
mov
jmp
mov
popa
adc
ret
lea
sub
enter
test
dec
out
fld
fucomp
pop
fnstcw
xchg
add
pop
out
mov
mov
leave
test
cvtpi2ps
and
mov
adc
sbb
shll
push
or
js
mov
pop
or
push
or
push
out
mov
sbbl
or
scas
addr16
aad
xor
push
and
jbe
dec
cld
es
sub
adc
mov
push
push
movsb
push
in
mov
sub
ljmp
adc
fnstsw
movswl
mov
loop
inc
fsts
cld
mov
popf
and
rclb
xchg
mov
fcoml
or
insl
or
push
mov
je
mov
or
xor
das
test
fsubs
outsb
fwait
pop
fsubrs
in
sbb
adc
repnz
rorl
call
movsb
xor
jmp
leave
mov
or
cmp
call
je
sbb
xorb
scas
xor
sub
mov
xchg
mov
cmpsl
mov
andl
or
mov
popf
out
jmp
and
insl
movsb
xor
sub
lock
cld
add
jnp
clc
xchg
adc
jbe
and
add
test
jl
push
lock
or
es
mov
mov
sbb
mov
cmp
and
adc
lds
jmp
and
and
mov
shrb
cmp
and
rorl
add
adc
cmp
add
xchg
xorl
add
nop
lret
je
dec
or
aam
mov
out
ficoml
cmpsl
push
sti
jbe
add
push
and
lock
push
adc
daa
xor
mov
enter
or
add
dec
enter
push
or
pop
lret
add
or
xor
xchg
mov
xchg
jmp
or
inc
cltd
mov
push
test
push
or
xchg
jle
pop
outsb
add
aas
cld
xor
sub
inc
push
and
daa
mul
pop
test
jbe
jl
cmc
mov
mov
lock
stos
jmp
stos
pop
pop
in
and
dec
insb
ljmp
sub
cmp
dec
es
sub
lods
lods
lret
adcl
scas
ret
dec
or
inc
lea
inc
cmp
inc
shrl
rorb
movb
pushl
not
test
add
rorb
rolb
repz
jl
mov
and
mov
out
mov
inc
insl
push
sbb
adc
iret
jbe,pt
dec
mov
and
cmp
cli
scas
or
or
cmp
sbb
or
cmp
sub
orl
jae
test
aam
adc
xchg
pusha
shrb
sarb
add
and
push
jge
lea
aaa
cmpl
or
mov
idivl
mov
inc
stos
inc
es
sub
or
sar
inc
aam
dec
xor
pop
or
xor
pop
rorl
mov
iret
sarl
shl
sub
sub
daa
push
adc
andl
into
and
push
ds
push
and
jne
shl
dec
cmp
movsb
sub
mov
sarb
xchg
dec
outsb
in
test
jno
sub
rcrb
push
and
ret
je
lahf
or
dec
xchg
dec
outsb
icebp
jns
mov
push
push
sbb
adc
add
jnp
lods
sbb
test
inc
imul
dec
clc
xchg
addl
into
loopne
cmp
add
rcrl
add
dec
xor
decb
cli
lods
add
and
pop
or
jb
test
xlat
sbb
push
incb
enter
test
fidivrs
and
test
cmc
hlt
push
aas
rcrl
loopne
or
mov
mov
xchg
bound
movsb
addr16
mov
xor
jl
mov
mov
arpl
add
sbb
sbb
add
add
lock
push
jo
mov
fwait
call
lea
out
and
in
or
or
xorb
in
xchg
jge
adcl
add
ss
pop
mov
inc
or
and
mov
and
push
int3
push
jnp
push
cmp
jmp
jne
and
sbb
nop
inc
shlb
xchg
mov
mov
cltd
dec
push
sub
xchg
pop
adc
dec
add
les
movsb
add
adcb
pop
add
inc
xor
leave
pop
adc
mov
ret
push
xor
aaa
xchg
ret
pop
jne
adc
adc
xchg
add
in
imul
push
inc
mov
mov
rorl
test
pop
adc
add
out
cmp
jb
sbb
sahf
mov
sub
adc
lret
cs
packssdw
xlat
or
ss
cmp
je
or
out
mov
incl
dec
cmpb
je
mov
cmp
pop
jne
dec
mov
inc
inc
mov
pop
add
inc
imulb
sbb
imul
fcompl
fistpll
push
dec
enter
sub
or
inc
test
push
std
mov
movsb
xchg
testb
adc
or
wrmsr
popl
loop
xchg
xchg
cs
or
es
cmpsl
popf
push
add
adc
out
push
pop
add
adc
xchg
sbb
leave
js
mov
and
jne
lds
push
rolb
movsl
sti
fdivs
push
dec
push
mov
subl
es
ret
push
pop
sbb
rolb
adc
and
sub
mov
popf
subb
sub
mov
jp
loop
loopne
sub
jle
sub
push
repnz
cld
mov
adc
or
add
add
add
lods
jmp
or
add
sbbl
push
lret
js
mov
or
push
loopne
inc
xchg
pop
cwtl
and
das
lock
mov
fadd
inc
add
or
fs
mov
sbb
or
add
push
or
add
mov
mov
or
inc
add
push
push
imul
sbb
jns
add
mov
aad
xchg
ret
mov
inc
pop
or
or
push
xor
pop
jmp
mov
adc
jmp
xchg
jmp
out
cwtl
xchg
jge
and
fmuls
xchg
sub
adc
mov
xchg
push
mov
cmp
xor
and
sbb
inc
stc
call
sbb
aam
mov
push
jmp
and
mov
lds
dec
outsl
lret
jno
pop
xor
and
push
fadds
mov
fadd
xor
add
jl
dec
push
cmp
into
jge
adc
sbb
cmovae
mov
clc
adc
daa
push
decl
jp
push
push
mov
enter
loopne
xchg
sahf
les
mov
je
add
js
mov
mov
adc
imul
mov
fdivl
in
jecxz
push
cmp
dec
mov
nop
push
xor
cmpb
jbe
sub
dec
sbb
test
enter
js
subb
stos
aad
bound
jl
xlat
inc
fstl
dec
sub
leave
and
add
insb
lahf
mov
push
xchg
outsl
and
adc
enter
inc
inc
mov
fistpl
fstpt
dec
and
adc
jg
ret
mov
or
jne
bound
xor
aam
es
icebp
sub
cli
in
call
xor
mov
mov
sbbb
je
fisubs
or
mov
xor
shlb
mov
push
hlt
nop
or
call
dec
push
and
pop
xchg
and
adcb
pushf
ret
ret
addb
lret
push
fs
cld
add
sub
push
or
shrd
sbb
add
dec
cmp
jge
shlb
push
movsl
clc
cwtl
xor
xor
xchg
cmc
pop
fucomip
inc
and
xor
out
and
xorb
sub
inc
mov
inc
mov
incb
push
adc
ficompl
dec
sbb
nop
mov
or
sbb
xor
jo
mov
in
and
inc
or
sarl
jg
out
xor
jmp
adc
pop
adc
neg
mov
cmp
sarl
aas
inc
mov
push
shll
shr
fsubs
xor
in
lock
sarl
or
add
imul
dec
dec
inc
dec
pop
or
sbb
imul
push
or
cmp
shrl
xchg
in
in
ja
ret
js
inc
adc
xor
or
jbe
sub
add
pop
sub
movw
sub
push
push
jle
in
in
jne
rclb
mov
jmp
add
inc
pop
mov
or
and
jns
neg
jmp
sahf
pop
and
or
aaa
push
lods
outsl
lea
pop
pop
xor
add
add
push
xchg
add
das
push
and
mov
or
add
jl
or
add
shll
xor
mov
add
inc
and
xor
jmp
add
xorb
adc
pop
push
divb
push
cmp
sarb
nop
aaa
es
pop
push
imul
stc
test
xor
enter
push
push
mov
fstps
push
out
ja
push
push
cld
jl
adc
dec
loopne
jge
inc
or
cs
mov
pusha
xor
outsl
xlat
add
popf
jmp
xor
movsb
add
pop
sahf
clc
gs
or
pop
data16
mov
imul
inc
popa
je
inc
je
dec
and
pusha
mov
xor
or
inc
sbb
movsl
cmp
mov
aaa
xor
je
xor
mov
ret
clc
push
popa
sti
push
or
mov
sbb
inc
adc
arpl
mov
fists
push
ret
clc
cmp
movsb
inc
push
ljmp
inc
lods
test
out
dec
and
ds
push
adc
cwtl
dec
cmpb
jne
out
ficoml
dec
out
lock
xchg
sarl
fadds
jmp
mov
dec
or
push
sub
cmp
cli
jge
cmp
aam
notl
cmp
je
mov
ja
mov
xor
or
jne
add
decl
aam
push
pop
inc
test
cwtl
mov
mov
loope
and
mov
fwait
push
sub
mov
pop
out
pop
nop
cmp
mov
pushl
shrl
cmpsb
sub
and
leave
xchg
and
stos
sub
ret
es
adc
mov
mov
mov
xchg
sub
fidivrs
inc
or
test
out
cmp
mov
push
push
sub
mov
nop
jp
mov
inc
mov
adc
dec
sbb
jmp
insl
fwait
lock
and
cmpl
pop
clc
cmp
das
mov
sbb
dec
push
mov
adc
push
push
xor
pop
push
nop
imul
pop
xorb
sbb
adc
lret
jl
cmp
push
dec
jp
icebp
dec
ja
jb,pn
pop
mov
xor
adc
xorb
sub
in
mov
dec
je
dec
push
push
jmp
or
jmp
insl
or
inc
inc
out
xlat
orl
pop
adc
xor
insl
push
adc
repz
pop
ret
fs
pusha
nop
rcl
sbb
or
movntps
or
int3
or
add
test
xchg
cs
xchg
leave
sbb
cmp
dec
xor
lock
sbb
jne
cmpsl
dec
or
adc
cmp
outsl
aaa
cmc
mov
and
mov
dec
mov
andl
subl
add
jle
stos
sbb
mov
call
enter
adc
inc
push
into
sub
or
mov
xor
xor
adc
adc
movsb
or
sbb
sbb
xchg
dec
or
pushf
js
test
pop
dec
push
sbb
add
cwtl
rclb
inc
rorl
pusha
adc
dec
mov
shrl
or
sbb
lret
and
les
gs
jge
shr
add
or
pushf
clc
outsl
cmp
leave
shr
or
mov
push
push
adc
jl
call
and
add
mov
imulb
or
add
mov
mov
out
jp
fidivrl
jbe
mov
leave
inc
jbe
add
jl
mov
loopne
in
sbb
cmp
or
dec
mov
imul
xchg
inc
test
cmpl
fisttpl
cmp
adc
bound
sub
mov
push
test
clc
xorb
dec
push
xchg
cmp
imul
test
int3
mov
push
pop
lcall
sbb
mov
and
xchg
mov
mov
cltd
xchg
or
shlb
inc
ficomps
adc
test
andb
fstpt
cwtl
loop
jle
insb
daa
sub
cli
jne
mov
fdivs
dec
roll
push
or
or
xchg
jp
pop
sub
pop
inc
mov
shll
inc
mov
aad
sub
popf
push
sti
andl
outsb
add
ret
nop
xorb
dec
sbb
add
or
xchg
push
std
je
xor
or
repnz
imul
clc
hlt
adc
mov
xor
loop
and
xor
dec
push
mov
mov
repnz
and
xor
jne
add
lret
jbe
incl
aas
inc
or
bound
push
cmp
or
jl
xchg
xor
add
ret
insl
adc
insl
mov
ret
and
in
mov
and
shrl
sbb
and
cmp
loope
jo
pop
test
pop
xchg
lcall
call
adc
push
pop
xor
pop
aad
mov
mov
outsb
add
add
leave
dec
sub
mov
inc
inc
xor
xor
adcb
lret
xor
or
or
sbb
fistpll
and
mov
scas
add
mov
aam
sbb
add
pop
je
sbb
mov
ret
sub
int3
and
add
fmull
mov
push
add
xor
hlt
jno
and
and
mov
negb
add
test
pop
call
and
jmp
out
cmpl
jmp
pusha
lea
imul
into
xor
or
cmp
dec
sbb
repnz
rcrl
iret
cmp
mov
add
test
scas
rclb
cmp
jle
andl
rolb
jp
inc
call
mov
test
push
fcomp
ds
sbb
sub
jmp
adc
cmpb
jl
xor
popa
add
incl
cmpb
aam
push
fstl
nop
scas
cltd
push
stc
push
hlt
sbb
xchg
inc
push
insb
jmp
jo
mov
mov
push
pop
push
or
orb
and
aaa
jne
cmpsb
je
or
loop
cmp
mov
cmc
ljmp
hlt
xlat
je
adc
lret
jne
push
inc
mov
jmp
dec
add
adc
xchg
jbe
into
adc
adc
or
rorb
push
cltd
or
adc
fprem
out
roll
leave
add
or
je
mov
iret
adc
pusha
adc
nop
mov
les
rolb
pop
pop
mov
mov
pop
sahf
jne
inc
cmpsl
pop
adcb
rcll
subb
adc
mov
lret
rorb
orb
rol
adc
add
xor
lea
or
push
jg
rorb
in
dec
jge
inc
jnp
jg
inc
push
neg
neg
sbb
sub
mov
sbb
fwait
inc
rcrb
sbb
mov
sbb
fcoms
adc
imul
mov
icebp
sbb
movsb
push
sbb
adc
and
and
sbb
xchg
add
leave
dec
jns
mov
loope
daa
pop
pop
pop
aam
pop
mov
mov
jae
or
jae
lods
rcl
ljmp
dec
and
shr
sub
adc
dec
adc
push
ret
cli
idiv
and
maskmovq
cld
lock
je
das
push
pop
inc
rolb
push
mov
loop
add
mov
dec
or
mov
outsb
into
add
orl
or
xor
enter
cmp
loopne
push
or
aad
mov
push
sarl
jbe
aas
mov
hlt
adc
test
sbb
shlb
je
movsb
dec
or
push
jnp
jnp
aaa
sub
adcb
movb
adc
cmp
paddusb
adc
and
mov
inc
pop
pop
aad
sbb
mov
xchg
mov
mov
jnp
pop
adc
rcrl
push
push
ljmp
cld
inc
ss
test
nop
aaa
dec
sub
addl
or
cld
into
and
xchg
mov
enter
rcl
mov
imul
lock
add
add
jmp
js
mov
mov
insl
ret
cmp
inc
sub
dec
fs
xchg
mov
dec
rcll
pop
mov
mov
es
mov
je
adc
jg
dec
and
jb
cmp
ja
add
cmp
adc
nop
hlt
iret
ret
cmp
jne
inc
shll
leave
call
outsb
mov
sbb
mov
je
inc
mov
adc
iret
and
jb
dec
lods
add
xchg
and
push
mov
add
cmp
xchg
aam
sti
aas
cs
push
pop
push
movb
jmp
or
test
inc
xlat
negl
xor
cmp
test
mov
loopne
xchg
ret
inc
push
inc
add
xor
mov
push
cmp
xchg
push
js
xor
pop
mov
and
push
adc
jp
movb
mov
cld
adc
mov
stc
inc
jb
enter
mov
push
and
or
cmp
push
add
push
add
cmp
mov
lret
dec
push
imul
call
sbb
push
add
imul
lea
sar
mov
push
lcall
movswl
xchg
fldt
es
ljmp
cwtl
out
andb
inc
ret
shlb
jns
call
rcrl
adc
movsb
sti
jmp
sub
addr16
xor
and
mov
push
loope
stos
or
jb
jl
pop
mov
decl
jle
repnz
xor
adc
adc
mov
mov
mov
and
scas
std
and
lea
inc
xor
lods
push
cmpsl
add
into
sahf
cmpb
sahf
inc
dec
js
cmp
dec
ds
xchg
mov
leave
out
mov
inc
call
jnp
ljmp
loope
rorl
add
and
lea
rolb
lods
xor
inc
mov
push
lea
shlb
enter
xchg
imul
or
push
adc
mov
or
ret
sahf
push
lods
shll
dec
insl
pusha
data16
lcall
mov
jl
shll
and
rolb
jne
add
andl
decl
popa
mov
shll
mov
add
shr
or
and
rorb
sbb
lods
sti
sub
push
lret
movsb
adc
inc
mov
adc
mov
jle
int3
shrl
loope
fdivrs
not
out
or
mov
dec
mov
cltd
rcrl
jp
mov
pop
jmp
adc
loope
test
repnz
add
cli
js
pop
sahf
div
mov
jbe
test
hlt
mov
fadds
shr
test
les
jnp
sbb
adc
faddl
fisubrl
dec
fimull
jmp
sbb
mov
push
fidivl
fldenv
enter
mov
and
pop
lcall
dec
shlb
enter
lock
in
fmuls
add
out
rcrb
stos
dec
outsb
inc
repnz
pushw
jmp
or
clc
out
jge
push
push
shr
test
mov
add
inc
adc
and
in
push
sbb
adc
mov
cli
or
dec
jno
xor
jae
jne
fdivrs
aam
adc
xor
and
jge
test
xchg
adc
shlb
dec
testb
adc
push
pop
or
fmull
or
in
jp
mov
sbb
fcmovu
add
mov
mov
cmpsb
arpl
loop
test
cli
mov
int3
jg
add
xchg
add
idiv
adc
xchg
shll
inc
adc
jg
or
adc
movsb
xor
enter
jge
fs
mov
mov
inc
add
jb
pop
nop
mov
movsb
jmp
add
add
jne
jne
lea
jae
xchg
fnsetpm(287
loopne
daa
and
nop
sbb
lret
pop
test
add
sbb
sub
xor
insb
sbb
idiv
mov
adc
inc
add
inc
mov
dec
es
inc
push
std
adc
pop
outsb
call
pop
jbe
rolb
mov
roll
shl
push
shrl
rcrb
adc
rcrl
lcall
and
mov
insl
call
mov
imul
call
or
fsubs
pop
add
iret
mov
xorb
push
in
pushf
pop
rcrb
out
pop
sti
fwait
aad
mov
add
andl
les
cli
mov
enter
mov
or
lea
push
shr
xabort
push
aad
dec
in
inc
dec
enter
sahf
mov
mov
jae
add
sub
test
shlb
xor
aas
test
rcrl
or
mov
inc
ljmp
sbb
cmp
jmp
dec
cli
rcr
xchg
inc
sub
jge
sub
cmpb
push
shrl
dec
cmp
cmp
add
dec
add
add
fadds
inc
inc
mov
call
ret
jp
jne
dec
sub
js
mov
jb
int
mov
popf
in
cld
pop
push
xchg
jbe
mov
lret
or
rcll
inc
mov
jp
ret
adc
xchg
idivb
or
adc
adc
movsl
add
test
mov
mov
stc
lret
mull
push
or
push
or
or
or
and
repz
dec
ljmp
jne
or
imull
scas
je,pt
push
xor
push
ret
sbb
adc
mov
out
cld
mov
ret
or
test
adc
or
jae
fmuls
inc
pop
push
cmp
mov
mov
iret
xor
xor
push
jns
pusha
inc
and
mov
cli
sub
and
pop
pop
push
jnp
or
mov
ret
loope
adc
inc
ret
arpl
or
or
xchg
mov
arpl
push
rolb
add
inc
adc
dec
movsl
popf
jne
or
or
add
push
imul
lret
push
sub
sar
insl
mov
mov
pop
je
fwait
jno
lcall
loopne
and
insl
add
adc
fidivrs
jne
and
mov
icebp
xchg
cmp
rorl
jle
fldl
cmp
ret
movsb
pop
inc
add
test
sub
movsb
dec
or
nop
clc
mov
sahf
xchg
or
test
sbb
inc
sub
or
scas
orl
adc
mov
sub
lods
xchg
xchg
add
ficompl
pushf
mov
out
or
andb
in
imul
test
adc
data16
sbb
add
jecxz
lds
mov
mov
sbb
and
sbb
inc
cmp
jns
jg
into
into
into
inc
leave
call
ljmp
sub
push
pop
nop
pop
fistpl
mov
outsl
mov
and
or
pop
stos
push
stos
cmp
inc
js
adc
mov
inc
sbb
leave
lahf
jns
cmpsl
inc
pop
xchg
out
adc
test
rcrl
movsl
movsb
cltd
mov
stos
sbb
into
mov
and
cltd
ret
inc
and
shll
sbb
sub
push
push
sub
sbb
mov
lret
fwait
pushf
lret
pop
jae
aad
xor
addb
pop
mov
cld
or
inc
adcl
add
xchg
add
add
clc
xchg
add
mov
into
lret
dec
gs
mov
scas
push
or
pop
and
jl
imul
add
lret
push
test
jns
je
adc
cmp
jo,pn
add
repz
sbb
ficompl
insb
lahf
dec
rorb
jno
jbe
inc
adc
mov
call
cmp
je
mov
scas
push
or
shl
mov
cmp
aas
or
jb
cmp
jbe
dec
sub
jmp
and
popa
movsl
pushf
xchg
int3
xchg
mov
ljmp
push
insl
dec
pusha
test
leave
mov
add
or
mov
aam
sbb
jle
adc
repz
or
pop
and
in
or
inc
popa
test
aam
jp
shrb
mov
nop
dec
adc
loopne
xor
js
pushl
addb
push
sbb
test
xor
mov
dec
les
pop
and
xor
or
cltd
fsub
xorb
fmul
push
jo
or
pop
mov
pop
jne
cmpsl
push
adcb
jae
push
push
rcl
test
pop
pop
push
adc
dec
aam
push
das
push
adc
loope
pushf
mov
xchg
aas
push
popf
sub
push
mov
popf
mov
mov
dec
mov
scas
push
xlat
xlat
scas
xor
or
pop
cmp
add
daa
jbe
xorb
add
popf
movsl
and
pop
jmp
cmc
push
cmc
push
mov
jecxz
sahf
mov
inc
fdivrs
mov
cmp
push
bound
dec
and
test
inc
sub
andl
aaa
cmc
dec
pop
push
test
shlb
add
je
and
push
ret
jbe
js
push
push
loopne
mov
xor
or
into
pop
jo
and
mov
mov
adc
mov
and
sub
mov
cmp
lods
sbb
sbb
mov
clc
cli
in
mov
lret
testl
sbb
xchg
arpl
sete
sub
insb
add
add
aad
popa
pop
call
pop
js
lea
aad
cmp
rclb
add
adc
paddd
add
lret
mov
push
mov
je
pop
test
outsl
cmpsb
loopne
jmp
dec
fs
movsb
fistpll
xor
shlb
cmp
mov
sub
js
push
adc
inc
xchg
jno
push
or
mov
sbb
or
dec
sbb
inc
movsl
xchg
cmp
push
fs
iret
mov
pushf
pop
dec
cmpsl
cmpsb
xor
push
mov
inc
nop
lock
sub
add
sbb
ds
pushf
ss
push
sbb
sbb
hlt
mov
push
pcmpeqb
jg
subl
aam
mov
jnp
ljmp
jbe
clc
inc
aam
pop
push
push
mov
pop
movsl
gs
pop
pop
rcrb
push
fimull
dec
lods
and
mov
mov
in
xacquire
mov
cld
and
jmp
and
lea
add
iret
xchg
sti
push
add
sbb
xchg
cmc
mov
mov
sub
cmp
push
mov
jge
les
loope
jmp
jo
xchg
hlt
loope
sub
mov
lret
add
lea
movsl
push
adc
push
push
xchg
movsb
adc
push
cmp
faddl
or
and
mov
jo
ss
outsb
pop
or
jno
mov
xor
mov
sub
enter
test
add
adc
push
xor
cltd
mov
push
add
jb
pushw
rcll
mov
clc
jbe
jo
xor
sbb
sub
push
and
dec
inc
jne
and
mov
sets
sub
rcrl
xchg
pop
rol
fabs
sub
and
and
loope
aas
mov
test
add
inc
pop
in
jecxz
adc
sub
inc
daa
push
sub
or
and
jo
es
or
jge
add
cmc
gs
add
ret
mov
sub
xchg
push
sub
jle
xchg
out
leave
int3
jmp
loopne
rol
pop
icebp
xchg
sbb
xchg
add
or
insl
cld
mov
loopne
je
pop
mov
test
fs
addb
sbb
push
push
adc
les
in
clc
sbb
ss
mov
xor
inc
add
cmp
cmp
lahf
test
out
scas
js
add
andl
cmp
xorb
push
sub
imul
or
into
inc
mov
and
adc
adc
cmp
and
cmp
mov
rolb
aas
add
or
fwait
pop
pop
stos
pop
mov
repnz
add
cmpsb
add
out
gs
xor
fisubrl
clc
pop
and
daa
and
pop
sbb
and
dec
push
sar
addb
testl
mov
subb
fwait
add
add
adc
inc
test
xchg
rclb
dec
or
mov
std
data16
xor
inc
and
pop
dec
push
add
push
popa
stc
sbb
jnp
xchg
js
mov
or
les
out
das
loop
mov
xchg
jo
arpl
imul
jle
dec
rcr
mov
rol
ja
mov
jmp
jb
daa
lock
jo
push
js
rclb
xchg
jge
cmp
outsl
mov
aas
or
movsl
jge
or
mov
adc
mov
sbb
cmp
ja
shlb
jge
mov
push
xlat
cwtl
movsb
cld
jp
xor
sbb
pop
out
push
inc
pop
xchg
ret
or
repnz
adc
test
jg
or
lock
lcall
adc
mov
call
icebp
cmp
push
pop
shlb
push
shlb
mov
aam
fwait
push
cs
inc
mov
cmc
cmp
dec
mov
pop
dec
adc
add
loope
jecxz
push
cmp
pop
push
sub
cmp
ret
pop
add
dec
jb
and
pusha
scas
lea
and
leave
jp
test
js
or
sbb
sub
push
add
pop
fs
popf
or
test
sbb
in
sub
or
mov
jl
xlat
xchg
fcoml
inc
loopne
pop
cmp
cmp
sbb
mov
lcall
xchg
fistpll
sbb
mov
bound
mov
add
xor
popf
mov
aam
xor
or
imul
cmp
icebp
mov
cmp
ja
cmc
shll
xor
push
jmp
dec
fldl
mov
scas
add
pushl
insl
mov
in
sbb
nop
shlb
and
mull
pop
dec
pop
out
rcrl
adc
in
ret
mov
cmp
jge
mov
adc
adc
and
inc
mov
cmpsl
and
inc
sbb
xor
mov
std
dec
sbb
add
aam
pop
and
inc
mov
cli
push
negb
lds
jl
sbb
sub
dec
cmp
popa
mov
xchg
leave
rcll
dec
jp
test
adc
jo
ret
jb
cld
test
movl
add
rol
jg
aas
jo
cmp
or
push
es
inc
mov
dec
sbb
pushf
sbb
push
adc
jne
loopne
mov
xor
push
push
add
or
aas
rcr
add
and
dec
add
fs
fs
jg
cmp
jl
testb
popa
jle
xchg
call
fstl
mov
mov
roll
adcb
lock
rolb
frndint
mov
xor
or
pop
shrb
pusha
pusha
push
les
add
lret
fsubrs
pop
sbb
addr16
loope
fdivs
cltd
xor
mov
inc
rclb
mov
arpl
arpl
dec
sub
andb
sub
jmp
mov
pop
adc
loopne
xorb
or
sbb
push
sbb
call
lret
cmp
jg
push
dec
rclb
add
fs
mov
sbb
ret
adc
popa
sbb
mov
cmpsl
cmp
inc
outsb
fcoms
push
pop
mov
rcrl
stos
ds
cmpl
int3
popa
sar
push
pop
cmp
movsl
and
movsb
push
xchg
inc
push
mov
push
inc
scas
neg
or
shll
repnz
sbb
xorl
and
dec
add
add
or
es
cmp
inc
xor
cli
jle
sub
pusha
sub
jbe
movsb
push
dec
inc
lcall
cmp
stc
repnz
and
or
push
es
fs
sbbb
mulb
mov
pop
je
bextr
inc
loopne
jg
push
lcall
in
xor
jg
jmp
cmp
or
je
xchg
pop
nop
mov
dec
xchg
sbb
nop
imul
sbb
iret
add
pop
add
xor
sub
inc
push
dec
jecxz
mov
add
push
cmp
rcll
sbb
and
jno
cmove
xchg
adc
or
xchg
pushl
dec
jne
push
orb
fcoms
inc
mov
jmp
xor
inc
xor
je
mov
push
mov
fcompl
jg
mov
jne
push
sub
daa
test
pushl
lds
push
shr
icebp
enter
in
cmp
cli
arpl
mov
add
xchg
push
adcb
repz
mov
or
push
addb
inc
push
faddl
test
dec
clc
test
or
repz
add
lods
xorb
fs
pop
je
inc
cmp
hlt
push
cli
push
jb
bound
scas
xchg
loop
loope
pop
popa
xchg
cmpsl
clc
push
lea
mov
inc
xorl
mov
xchg
push
pushaw
push
hlt
jle
cmpb
sub
add
callw
and
mov
int
jnp
add
mov
xchg
lret
loope
mov
stos
popa
insb
aas
pop
sbb
push
push
popa
lret
mov
push
push
add
jle
jl
enter
fwait
out
mov
mov
and
lret
sbb
xor
out
lret
subb
dec
insl
cmp
adc
sbb
adc
roll
xlat
add
test
xchg
loopne
rol
mov
adc
pusha
push
push
mov
xchg
and
fcomp
inc
orb
rcll
insl
push
add
adc
popf
aam
fs
scas
mov
lock
jle
sahf
dec
add
les
icebp
xor
inc
mov
cmp
jne
sbb
adc
sub
dec
je
mov
pop
add
sarb
in
jo
jg
jg
add
fwait
addb
xchg
push
push
jbe,pt
dec
adc
dec
imul
test
inc
sbb
lock
or
hlt
adc
cld
adcb
cmp
out
nop
lea
adc
in
mov
and
cmp
and
mov
pop
add
ret
add
dec
jg
adc
orl
jg
jmp
adc
dec
xchg
into
jge
or
and
nop
push
lods
add
push
or
add
and
test
push
dec
cmp
xchg
or
jb
or
cmpsl
jle
scas
gs
inc
pop
aaa
pop
pushf
and
jle
adc
jae
pop
mov
scas
or
pop
and
jns
mov
bound
or
lock
adc
and
inc
lret
mov
pop
adc
cmp
and
inc
test
rclb
sub
pop
fidivrl
rcrl
into
pop
mov
test
ret
enter
je
cmp
mov
and
cmp
jb
testb
inc
add
jle
testb
dec
loopne
js
ret
rorb
jge
push
jmp
inc
addr16
sbb
sbbl
je
cmp
mov
jb
cmp
imul
push
push
or
xchg
pop
dec
in
push
mov
push
and
call
jmp
das
xor
insb
xor
sbb
cli
add
add
push
mov
and
dec
mov
lods
outsl
mov
hlt
shlb
pop
es
les
inc
scas
sbbl
push
inc
pop
pop
sub
push
iret
mov
pusha
das
mov
mov
mov
mov
pushf
adc
sbbl
and
mov
xchg
pop
adcb
bound
sub
in
sbb
mov
cmp
fstps
daa
inc
push
sub
stc
add
xchg
adc
pop
nop
inc
push
jo
jne
and
push
in
adc
mov
popf
in
es
xor
pop
enter
jnp
dec
push
pusha
xor
adc
movsb
adc
push
sbb
add
das
bound
cmp
sub
push
pop
fdivs
aaa
aad
push
adc
out
and
lock
fsts
call
fildll
adc
rcr
outsb
cli
inc
cmp
jmp
cwtl
mov
xor
aaa
mov
mov
ret
sub
sbb
fcmovu
cmp
test
cmpsb
xor
filds
jb
add
pop
adc
in
in
add
jmp
or
sub
in
or
xor
inc
or
dec
in
sarl
xor
or
cmp
sub
rolb
mov
cmc
mov
in
mov
adc
cltd
fs
lock
pop
bound
lcall
mov
sub
jo
jb
cltd
jbe
int
sub
ret
or
mov
xor
in
add
add
imul
inc
push
in
and
cmp
lock
sbbl
inc
lock
int3
mov
cld
cld
jne
add
mov
inc
push
inc
sarb
xor
pushf
sub
pushf
push
and
push
scas
notb
sbb
pop
enter
repnz
xor
lcall
sub
roll
pushf
scas
rcrl
or
testb
add
inc
lahf
out
pop
cmp
sub
dec
in
sbb
fdivrs
inc
loopne
or
jne
in
mov
lock
push
and
adc
xor
loopne
mov
call
xor
rorl
pop
mov
dec
mov
fisubl
in
inc
dec
insb
xchg
outsl
adc
popl
adc
or
and
xchg
adc
push
cs
cs
popa
or
nop
stos
sbb
lods
mov
xor
pop
fdiv
sbb
enter
movsl
adc
xchg
cld
fs
push
push
movsb
jecxz
mov
fcomps
mov
mov
cmpb
enter
faddl
pop
scas
pop
cmp
enter
adc
jge
add
rorl
call
imul
roll
iret
nop
test
aam
nop
mov
mov
leave
insl
push
adc
in
unpcklps
cmc
adc
shll
jae
xchg
dec
mov
adc
cltd
fs
fs
je
jl
and
xchg
sbb
lods
mov
push
and
mov
outsl
cwtl
sub
test
lods
loopne
and
cs
adc
adc
or
rolb
add
and
std
ret
sub
adc
shr
mov
in
adc
mov
sub
arpl
mov
add
in
sti
gs
cmpsl
scas
and
stos
push
sub
inc
scas
push
xor
jne
dec
repnz
insl
adc
cmp
inc
loope
and
xor
ficoms
ret
sbb
addr16
dec
test
add
lahf
mov
mov
lods
loopne
sbb
jbe
mov
ja
js
lods
add
cmpl
arpl
ja
in
push
xchg
out
in
stos
loopne
repnz
sbb
iret
enter
jae
clc
or
ficoml
adc
inc
hlt
enter
nop
lods
pop
jb
sbb
lret
inc
sbb
push
repnz
adc
and
cmp
popf
lcall
sbb
icebp
xor
sbb
shll
xchg
cmpsl
xchg
pop
pop
sbb
loopne
xchg
inc
aam
mov
xor
adc
test
mov
add
cmp
or
dec
inc
xor
mov
pop
pushf
mov
sub
mov
add
enter
jbe
lock
add
aam
cmpsl
stos
arpl
push
test
xlat
dec
sbb
imul
fsubr
xor
xchg
push
lock
jecxz,pt
inc
pop
in
adc
sbb
xor
sbb
and
push
push
ret
ja
and
repz
push
cmpxchg
xchg
push
or
lea
push
mov
add
xor
push
xchg
push
rorb
adc
ret
xchg
or
add
add
cmpsl
push
call
dec
call
push
xor
pop
mov
adc
inc
and
pop
movsb
add
mov
pop
roll
and
int
or
adc
inc
inc
mov
xor
xor
ret
push
mov
scas
inc
lods
add
mov
inc
or
push
or
aad
or
ret
leave
and
and
add
fisubl
aam
push
push
and
push
jecxz
sbb
ljmp
imul
std
pop
adc
and
inc
add
inc
scas
mov
arpl
les
xor
cmpsb
cmp
xlat
lea
and
gs
add
pop
pop
cmp
lea
xchg
call
sbb
test
lret
cmp
push
fwait
and
sub
sbb
mov
mov
movsl
sbb
or
je
sub
test
dec
sbb
aam
popa
in
in
cmp
inc
icebp
or
call
pushf
or
adc
and
fcompl
ret
in
xlat
add
xlat
xchg
inc
repnz
or
in
clc
test
inc
repnz
xlat
or
nop
mov
jbe
push
push
in
in
dec
inc
stos
ret
paddusb
into
clc
or
sbb
mov
sub
jg
aam
test
push
and
dec
leave
adcb
sti
sbb
add
dec
movsb
sti
loopne
xchg
xchg
mov
or
fsubrs
add
adc
loope
stos
dec
cltd
sar
dec
es
sbb
or
je
sub
rcll
fs
sub
fdivrl
ret
mov
lcall
lock
movsl
leave
cmp
sub
sub
dec
mov
xor
and
sub
jb
test
or
enter
or
or
xchg
pop
jb
or
jne
pop
leave
or
pop
enter
fwait
sbb
inc
aam
xchg
add
adc
rcrb
test
ret
xchg
mov
out
sbb
push
sbb
or
nop
add
or
or
adc
mov
pop
scas
add
add
pushl
int
popa
adc
add
mov
mov
push
or
mov
fwait
pushf
sbb
mov
adc
cmp
pop
sub
rorl
pop
sbb
ret
sbb
shl
mov
inc
push
es
pop
push
or
fdivrl
sub
and
lcall
sub
test
call
and
iret
fisubrl
cmp
loopne
lea
push
adc
cmpsb
xchg
xchg
dec
add
mov
cld
sbb
stc
sbb
call
pop
pop
sub
fcomps
loop
and
call
mov
cmp
aam
sub
dec
inc
movsb
sub
xchg
xor
rorb
out
xchg
enter
mov
pop
cmp
comiss
push
ret
xor
lahf
pusha
push
mov
popa
test
sbb
psubsb
loopne
in
mov
ss
fs
adc
push
push
push
pop
or
lds
and
mov
mov
subb
inc
mov
loopne
adc
ja
call
popf
call
mov
sub
add
sbb
loopne
js
subb
rcrl
pop
push
les
sub
ret
addr16
xlat
dec
cmp
rclb
std
pusha
cmpl
inc
lock
xor
pop
adc
adc
adc
or
insb
adc
pushf
jne
and
add
adc
or
or
cmp
leave
xor
push
mov
lods
sub
shl
and
jne
xor
lret
xor
movsl
or
dec
imul
les
fidivrl
xchg
mov
fcoms
hlt
mov
lock
pusha
xchg
xchg
xor
mov
jne
fcmove
ja
dec
or
sbb
lock
test
xor
sbb
inc
xor
test
in
aad
sub
fwait
dec
mov
jbe
and
in
sub
or
or
nop
add
or
shrl
sub
xor
pop
push
mov
in
loopne
inc
fdivrs
lret
cmp
ret
push
rol
dec
lods
sahf
adc
xchg
out
mov
mov
add
rclb
mov
mov
sub
mov
mov
sub
jge
xor
jb
movsl
cwtl
stc
mov
mov
sti
loop
mov
mov
dec
mov
and
adc
ret
xchg
daa
nop
out
pusha
push
sub
push
or
and
and
les
cmp
int3
pinsrw
cmp
or
push
loope
pop
jnp
dec
pop
inc
int3
fistl
rorb
pop
aam
add
rcr
mov
enter
sub
nop
lret
orl
push
inc
cmpl
loopne
arpl
push
jp
out
inc
add
cmpb
cmp
subl
pusha
xlat
push
xlat
daa
fldl
in
and
aad
xlat
rorb
jmp
sarb
cmp
sub
push
cmc
jb
test
rcr
adc
loopne
sbb
std
mov
or
fs
add
sub
rcll
into
in
orb
int3
das
unpcklps
or
adc
ljmp
cmp
adc
xor
adc
jecxz
cmc
cltd
call
pusha
mov
in
aas
cmp
dec
fdivp
aam
lods
fwait
mov
jecxz
cwtl
adc
orb
out
int
adc
sub
inc
inc
adc
mov
lret
mov
enter
adc
mov
pop
lods
lods
aaa
dec
clc
aas
xor
movsl
cmp
mov
inc
insl
arpl
mov
pop
pop
mov
ja
sbb
popf
shrb
xor
movsb
fdivr
enter
loopne
xor
adc
sub
sub
mov
in
cmp
fsubs
xor
imul
cmp
mov
add
xchg
inc
orb
mull
aas
dec
stos
or
pop
xor
mov
xchg
je
lea
ja
aas
adc
push
or
mov
sbb
std
xor
jmp
sub
insb
lret
divl
adc
mov
or
sbb
mov
lcall
outsl
and
inc
add
mov
dec
int3
fldl
jl
mov
mov
dec
add
or
aaa
movsb
push
mov
sbb
push
and
inc
and
dec
popa
fdivr
jne
mov
notb
xchg
mov
xchg
xor
sbb
das
xor
add
adc
cmp
pop
xor
leave
mov
xor
ja
test
inc
fisttpl
sar
je
lret
cwtl
push
adc
mov
jmp
mov
push
xchg
imul
inc
stos
icebp
sub
pop
push
das
mov
xor
test
call
add
inc
mov
aam
in
rclb
dec
stc
or
lahf
test
push
pusha
add
std
icebp
add
and
or
xchg
cmp
push
fs
cmp
xchg
fistl
pop
xchg
jmp
cmc
pop
fmull
xor
cwtl
stos
mov
inc
shlb
loopne
or
push
inc
lds
mov
call
dec
in
and
fimull
shll
and
jl
inc
sbb
add
insb
inc
inc
icebp
dec
dec
adc
xchg
inc
xorb
cmp
mov
in
rcll
adc
inc
cmpsb
inc
aam
jnp
scas
inc
loope
enter
adc
push
aam
cmp
push
mov
jnp
dec
mov
in
mov
dec
xor
dec
repz
movsb
dec
xor
or
mov
inc
push
adc
jl
and
cwtl
sbb
imul
fcompl
test
nop
dec
xor
nop
ret
in
cwtl
orb
jne
outsb
sub
cmp
dec
add
rolb
add
pop
int3
gs
pop
nop
xchg
not
adc
addl
cltd
aam
sbb
sub
lea
aam
and
inc
mov
enter
inc
mov
pop
mov
adc
push
loope
add
je
and
cmp
push
icebp
nop
inc
sbb
call
add
in
je
pusha
fildl
test
dec
jle
fmul
dec
lret
mov
push
lock
dec
xchg
repnz
push
cmc
pusha
dec
adc
stos
push
push
enter
mov
sbb
cltd
or
dec
das
mov
aad
xor
sub
mov
cmp
aam
in
stos
jne
add
punpckhbw
sub
inc
dec
test
jne
dec
sbb
subb
jno
inc
xchg
aas
and
inc
add
pop
and
jne
lods
xchg
dec
sub
js
mov
sbb
leave
call
pop
popa
gs
mov
popf
fsubrl
add
mov
imul
test
rorb
enter
movsl
cmp
ljmp
dec
lods
mov
push
scas
jge
enter
cwtl
dec
cltd
orb
jo
sbb
add
mov
aas
mov
dec
mov
mov
fwait
clc
push
adc
orl
js
cmp
push
inc
xchg
push
xor
xor
imul
leave
adc
lock
or
dec
inc
cmp
sbb
mov
mov
adc
or
shlb
arpl
mov
lret
rcll
in
or
adc
mov
dec
nop
sub
push
insl
test
dec
push
es
mov
hlt
cmp
push
les
imul
and
mov
pcmpgtw
push
in
jo
dec
add
mov
sub
in
mov
int3
xchg
bound
sbb
adc
pop
xor
nop
push
mov
mov
push
imul
xchg
mov
in
add
pushf
sub
cmpl
and
push
das
repz
imul
jbe
test
mov
xlat
nop
mov
pop
orb
lcall
mov
jo
fdivs
push
xor
les
pop
in
sub
push
sbb
xchg
pop
add
loopne
push
cmpsb
addb
addl
adcb
mov
sub
cmp
inc
popf
mov
cli
dec
push
mov
cli
and
adc
push
ret
test
xchg
mov
imull
nop
imul
adc
inc
pop
repnz
stos
xor
pop
lea
and
movsl
sbb
inc
test
aas
ret
mov
mov
mov
and
dec
mov
adc
inc
imul
nop
and
sub
inc
cwtl
pop
fs
in
andb
xchg
xchg
xor
xor
jbe
pop
mov
insb
adc
fs
push
insl
addl
in
push
dec
xor
mov
adc
leave
and
and
sbb
and
dec
sbb
inc
and
dec
xor
inc
sub
dec
shrl
pop
cmp
sbb
fstp
xchg
push
xchg
fisubl
fiaddl
mov
xchg
jne
imul
test
mov
mov
aam
andl
je
or
call
shlb
ret
push
cmp
or
in
pop
and
and
pop
mov
xchg
int
or
fwait
inc
call
pop
xor
sub
pop
or
jne
xor
std
and
inc
or
pop
rcrl
ss
push
sti
push
cmp
mov
mov
test
cltd
nop
test
aam
mov
insl
lock
pusha
ficoml
xchg
dec
mov
push
rcrb
mov
fsubl
les
in
inc
int3
in
cltd
pushf
pop
enter
int3
rcl
addr16
jno
aam
jnp
bound
leave
mov
popa
xchg
dec
popa
cmpsb
sbb
pop
adc
dec
std
rcll
aam
xor
cltd
and
nop
fcom
smsw
shrb
enter
shll
inc
in
and
dec
inc
sub
fcoml
in
xor
fcoms
and
or
jl
je
sub
or
andps
lds
sbb
pushf
cltd
arpl
inc
aad
cmp
ja
sbb
in
aam
or
xchg
inc
add
add
sub
cwtl
test
int
fs
loopne
adc
mov
cmp
jo
mov
xchg
test
test
ret
push
outsb
jg
stos
test
cs
pushl
dec
push
mov
inc
out
xor
mov
lcall
pusha
subb
inc
pusha
sbb
xor
mov
jne
fiaddl
push
dec
popa
add
cmp
scas
adc
xchg
cmp
or
or
mov
sti
sub
sbb
in
cmpsl
mov
fmull
cwtl
int3
push
pop
push
cwtl
and
cmp
adcl
test
mov
daa
sub
push
bound
cmp
les
nop
imul
enter
dec
adc
add
xor
xchg
mov
shl
sub
inc
les
jno
jne
lods
rorb
adc
inc
dec
shll
imul
fidivrl
lea
mov
test
mov
loopne
add
jns
dec
cmp
call
ret
inc
imul
and
nop
sbbb
xchg
sub
inc
ja
sub
mov
int
xor
xor
lds
xor
insb
add
sbb
or
jg
sahf
pop
add
lock
mov
sub
popa
leave
and
inc
loopne
cmp
dec
mov
push
or
xor
inc
or
and
mov
not
push
mov
aam
fmul
or
loopne
mov
fiaddl
bound
aam
lea
dec
mov
pop
add
jg
sbb
test
cmp
mov
mov
add
mov
inc
gs
add
leave
scas
xor
leave
mov
xchg
test
lods
enter
mov
aaa
subb
push
das
xchg
cmpl
dec
adc
dec
adc
push
jne
mov
test
ja
ret
inc
or
sbb
rolb
pop
mov
arpl
add
sbb
xchg
dec
or
xor
dec
xor
enter
aam
les
pop
adcb
nop
sbb
and
xor
add
and
test
add
and
and
xor
orb
movsb
lods
dec
ss
inc
jecxz
adc
dec
pushf
insb
dec
es
lods
push
mov
cltd
fs
test
cltd
fs
dec
pop
je
fs
dec
mov
es
mov
inc
and
fs
aam
in
add
mov
jns
decb
jmp
lds
flds
in
shl
jns
xor
mov
fcoms
xchg
dec
enter
mov
or
mov
mov
pause
sbb
sbb
lcall
add
sbb
and
xor
enter
inc
test
mov
movsb
lods
xchg
enter
int3
not
fsubs
aam
dec
sub
cwtl
js
fdivs
adc
in
pusha
mov
leave
mov
mov
addb
pushf
std
and
pop
aam
int3
xchg
xchg
xchg
xchg
les
xchg
movsb
pushf
xchg
mov
test
adc
leave
and
pop
xchg
mov
adc
xor
in
fstl
push
pop
mov
in
push
nop
mov
enter
sub
inc
test
inc
aam
lods
sub
inc
sbb
mov
push
or
dec
xor
adcb
test
mov
push
xchg
popa
or
orb
cmp
nop
xchg
sbb
mov
mov
into
add
sub
fwait
call
and
jno
rcrb
sub
pop
sub
lods
in
jns
cmp
rclb
enter
and
addb
loopne
lock
jge
jle
jb
shll
add
inc
xor
sub
mov
cmp
cltd
movsb
add
sbb
fs
dec
es
push
imul
inc
or
cmp
rclb
out
add
cmp
dec
lcall
pop
sub
xchg
adc
shll
test
sub
sub
push
nop
pop
adc
push
insl
dec
add
sarl
jnp
imul
sub
or
shlb
mov
lcall
out
in
add
inc
inc
sbb
outsl
fadds
jno
mov
aam
rcl
loope
xor
inc
es
or
std
push
and
test
pop
sbb
bound
mov
cmc
or
mov
mov
test
mov
sbb
iret
sbb
mov
pop
ja
xchg
sbb
sbb
and
xor
sbb
sbb
cltd
mov
adc
and
rclb
fmul
les
mov
stc
les
or
mov
enter
test
add
and
fs
imul
ja
and
rolb
aas
xchg
xor
aas
mov
orb
inc
mov
scas
sub
dec
mov
or
pop
mov
ja
jle
fwait
sbb
stos
sub
and
movsb
add
imul
push
sbb
jg
in
nop
inc
add
mov
and
repz
sub
jno
adc
mov
das
insb
mov
imul
jl
or
jge
mov
xchg
nop
movsb
xor
cmp
ficompl
sub
dec
inc
or
pop
mov
std
push
das
inc
sarl
je
jo
es
mov
jmp
je
lret
mov
xorl
mov
and
mov
sbb
movsb
adc
and
dec
fwait
xor
in
adc
fisubrl
push
and
adc
insl
hlt
cltd
inc
clc
sub
sub
repz
insl
xchg
leave
leave
add
mov
adc
adc
dec
xor
sbb
sub
adcb
les
sbb
push
clc
mov
lea
pushf
in
cld
icebp
sar
or
mov
push
nop
ret
inc
insl
clc
icebp
adcb
xchg
jmp
int3
jbe
xor
in
mov
sub
enter
fs
xchg
inc
push
addb
sbb
rcr
sbb
pop
mov
xchg
rolb
daa
dec
in
call
call
sub
pop
frstor
push
insl
inc
subb
jno
lods
sub
aaa
mov
xor
out
mov
adc
out
sbb
jmp
stos
push
xor
mov
faddl
js
out
sub
add
push
inc
pop
lods
push
mov
test
outsb
or
dec
sub
sub
inc
xchg
dec
cmp
dec
stos
cltd
xchg
or
adc
mov
xor
xchg
pop
jmp
push
push
dec
and
adc
or
test
add
mov
adc
pop
icebp
int
insl
add
inc
movsl
dec
xor
inc
xchg
in
inc
outsb
insl
fwait
pop
mov
lea
push
inc
dec
and
dec
in
mov
dec
mov
or
jnp
or
mov
rcrl
lods
negl
and
mov
pop
sbb
addb
mov
ret
push
sbb
adc
mov
jbe
insl
adc
adc
or
inc
sub
mov
add
and
loopne
or
adc
push
sbb
push
add
imul
gs
mov
push
adc
pop
push
mov
jp
test
xchg
jge
adc
insb
adc
idivl
ret
xor
std
xorl
call
push
sarl
xchg
inc
iret
sub
movsb
xchg
aaa
sbbb
push
insl
mov
call
ret
xchg
movsb
jne
incb
bound
mov
mov
cli
imul
sub
push
adc
scas
and
je
sbbl
lods
cmp
inc
arpl
test
and
xchg
add
push
sbb
std
inc
ret
inc
and
fs
mov
imull
fcoms
cmpb
cmp
js
or
add
cmp
sbb
mov
cmpb
and
push
or
rolb
out
mov
inc
pop
cmp
xor
fwait
hlt
movsb
cs
and
loope
jo
stc
sub
add
movb
sub
sub
int
push
rcrb
stc
bound
sbb
sbb
nop
add
in
mov
and
inc
enter
outsb
and
push
fdivs
add
push
push
or
pop
or
rorb
adc
fsubs
jb
xor
test
or
inc
push
push
pop
xor
cltd
jbe
lods
adc
xchg
dec
mov
icebp
movsb
imul
lea
xchg
jmp
xorl
xchg
mov
test
dec
bswap
mov
sbb
mov
dec
xor
mov
and
push
cltd
mov
add
add
arpl
add
cmpsb
and
pushw
cmp
push
pop
mov
sub
xchg
pop
push
push
insl
mov
repnz
push
cld
inc
jb
inc
pop
sub
xchg
or
clc
sti
xchg
fs
cld
enter
movsb
adc
jo
inc
mov
jcxz,pt
sahf
or
lret
sahf
in
in
or
std
mov
mov
cmpl
push
ljmp
and
add
push
fcomps
movb
or
ljmp
push
aas
push
adc
jno
mov
push
in
jmp
and
mov
shrb
push
and
mov
popa
sub
push
push
les
and
mov
add
dec
push
std
and
nop
xor
and
mov
cmpsb
roll
rcrl
inc
xor
mov
push
mov
cmpsb
sub
and
rclb
push
sub
cmp
out
xchg
ss
inc
jmp
cmp
adc
icebp
sete
jmp
or
jle
dec
lds
ds
mov
jnp
subl
dec
in
mov
add
add
les
std
add
aam
push
adc
cmp
jmp
jg
cmpsl
mov
loopne
jns
out
add
pop
outsl
sahf
out
sahf
nop
cmpsb
rcr
adc
popf
notl
push
dec
add
push
fldcw
insb
rolb
leave
mov
fdivrp
inc
jecxz
sub
inc
mov
incl
inc
data16
and
push
rolb
clc
jnp
mov
std
mov
push
or
adc
mov
rcll
xchg
adc
or
pushl
decl
cmp
adc
mov
test
add
jle
fisubrs
in
pop
adc
test
dec
mulb
push
inc
push
jle
stc
cmp
repz
call
test
push
dec
adc
push
lock
paddd
psubusb
pop
sub
insl
mov
mov
pusha
data16
bound
and
insb
outsl
arpl
imul
cmp
scas
jb
sub
out
pushl
imul
jb
outsb
je
add
das
add
push
insl
adc
mov
fsubrl
out
lock
inc
outsl
adc
inc
js
je
jb
gs
add
or
add
repz
jb
add
add
add
jne
les
mov
and
jb
dec
push
add
sbbl
push
mov
mov
es
jnp
xchg
lcall
add
aas
popf
inc
icebp
add
ss
dec
add
sub
push
insl
xchg
je
pop
pop
out
push
je
and
jae
dec
fisttpl
xlat
loopne
mov
cmpsl
insl
push
push
xorb
or
bound
fisubl
push
jne
imul
jbe
aas
imul
ds
jp
outsl
or
mov
dec
fs
lret
fidivrs
out
outsl
jmp
jo
sbb
arpl
xor
sub
fwait
stos
insl
sub
push
imul
scas
cmp
jne
inc
sub
data16
scas
loope
outsb
dec
sub
jecxz
insb
jp
sub
insb
lcall
repz
lahf
sbb
xor
push
outsb
inc
imul
arpl
or
sbb
addl
das
cs
icebp
push
cmp
outsb
bound
sub
push
arpl
mov
xor
je
loope
mov
mov
gs
fcoms
das
jb
ret
inc
sbb
fidivrl
cs
add
xor
loope
loopne
outsl
andl
mov
fidivrl
jg
xchg
cmpsl
popa
sub
push
mov
lahf
aaa
jg
jmp
iret
lods
inc
push
pop
fbstp
xchg
dec
fbstp
jne
jbe
jb
jne
stos
aad
jae
jbe
test
xor
fisubrs
js
das
rcrl
pop
or
pop
cmpsl
ss
ljmp
pusha
fwait
stos
lahf
outsl
aas
or
movl
or
push
mov
mov
xlat
aaa
roll
imul
jb
fs
imul
shll
push
jl
popa
jnp
xor
outsl
pop
sub
das
xchg
mov
add
pop
das
mov
sub
xor
jge
je
scas
cmp
mov
jg
sbb
lea
out
pop
push
pop
jecxz
push
push
push
inc
sbb
sub
shlb
xor
dec
addr16
or
inc
int3
add
push
lods
insl
pushf
push
sub
push
inc
arpl
je
repz
adc
das
sbb
adc
adc
push
sbb
sbb
iret
repz
mov
sbb
out
cmpsl
stc
test
sbb
push
das
push
lahf
push
imul
clc
pop
jnp
cmpsl
xor
push
jns
jp
iret
sarl
cld
and
incl
dec
aaa
add
mov
lea
push
jp
adc
fimull
mov
jns
fcmovne
add
or
mov
cmp
pop
mov
imul
arpl
fidivl
push
ja
rol
cmp
dec
add
sbb
pop
outsb
fists
xor
jl
arpl
add
das
das
mov
bound
fdivr
push
mov
jbe
mov
inc
and
mov
rorb
inc
jmp
pop
jge
ret
dec
idivl
or
jl
aas
dec
inc
mov
mov
mov
push
mov
daa
outsl
dec
adcb
lods
and
das
lea
divl
iret
jns
out
out
loopne
mov
and
mov
pop
pop
rcl
out
jp
jae
push
and
stos
cmpl
dec
jne
dec
fbstp
push
ds
neg
insl
arpl
fmul
mov
test
mov
dec
cmp
cmp
add
jmp
lahf
fs
dec
and
jns
add
das
jg
cmpsl
imul
addr16
push
inc
inc
arpl
std
loop
bound
dec
outsl
jbe
dec
arpl
movd
add
je
inc
jne
jne
xor
das
mov
outsb
xchg
inc
jo
imul
bound
inc
popa
outsb
out
jae
adc
xchg
pushf
jae
cmp
ja
divb
ja
inc
popa
je
jb
xor
and
mov
push
gs
sbb
dec
outsl
outsb
pushf
jae
std
and
jbe
dec
cmp
dec
inc
aas
add
out
dec
ja
icebp
or
mov
cmp
push
push
inc
push
pop
call
jne
inc
inc
mov
mov
outsl
aas
lds
and
sub
sub
cs
xor
cld
pushl
xor
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
sub
push
push
jmp
sbb
pop
pop
pop
pop
pop
aam
popa
bound
incw
push
insl
outsb
outsl
jo
add
jbe
js
jp
jl
cltd
mov
dec
adc
lcall
loopne
or
and
add
cmp
mov
dec
rorb
ljmp
lret
jno
icebp
pusha
inc
mov
decl
pop
outsb
movsl
add
xorl
clc
shrb
outsl
imul
cs
das
cmp
fwait
cwtl
hlt
iret
dec
add
jo
xor
into
mov
addr16
dec
mov
popa
aad
sbb
out
ret
addr16
dec
ret
sub
jge
stos
mov
push
add
adc
add
add
add
adc
add
and
push
pop
push
add
xor
int
lahf
push
add
pusha
push
add
inc
fucomip
into
fiaddl
cmp
add
sbb
addb
addb
addb
add
and
adcb
pop
daa
push
cmpb
jnp
enter
lret
jb
int3
push
add
mov
mov
outsb
imul
push
and
jo
add
sbb
fcmovnb
xor
jo
add
pushf
cmp
sbb
xchg
pushf
cmp
mov
nop
xchg
xchg
xchg
cs
in
mov
mov
outsb
pusha
sub
sahf
or
xor
inc
je
popf
pushf
scas
mov
aad
out
add
lods
pop
lods
push
stos
mov
xlat
jmp
repnz
sbb
cwtl
xchg
cmp
mov
inc
sub
ss
jmp
push
dec
dec
inc
dec
inc
adc
notl
mov
je
fs
je
rcr
add
dec
dec
bound
je
outsb
data16
mov
insl
xor
ss
out
je
xor
outsl
push
add
push
xchg
daa
pop
inc
sti
iret
xchg
lea
mov
outsl
js
push
xchg
fstpt
xchg
das
cs
and
insl
jo
jo
and
ficoml
int
dec
xchg
shlb
aaa
insb
les
dec
imul
mov
xor
inc
cmp
dec
inc
jb
cmpsb
and
daa
pop
and
ss
jns
mov
insb
rcrb
arpl
je
and
inc
inc
imul
push
jbe
fisubs
jo
or
jb
and
fldt
je
xchg
pusha
inc
jbe
sbb
push
lahf
fs
adc
mov
lods
jp
ret
es
xchg
pushw
popl
mov
imul
pop
or
jo
sbb
pop
daa
mov
mov
mov
mov
push
outsb
mov
pop
pop
pop
push
push
jae
or
jno
mov
cmp
scas
add
call
push
sub
cmp
gs
mov
adc
jbe
mov
mov
dec
insb
inc
push
push
push
push
dec
testl
fnstenv
repnz
push
pop
or
filds
or
jge
inc
test
ds
jle
jb
shl
subl
inc
call
mov
or
cmp
push
jo
pusha
inc
in
xchg
xor
mov
gs
sbb
mov
stos
mov
or
ljmp
outsl
data16
test
mov
aaa
daa
xchg
mov
sti
cmp
mov
pop
pop
cmp
cmp
cmp
ds
and
sub
or
fst
inc
jl
push
addr16
jle
sahf
imul
add
out
stc
cmp
sub
pop
or
in
mov
push
jb
mov
aaa
and
push
mov
in
mov
xchg
xchg
imul
pop
pop
jne
stos
addr16
push
jbe
jmp
push
add
ss
xor
add
jb
addr16
xor
hlt
dec
sbb
sahf
cmp
pop
sub
popa
loope
mov
sub
iret
repz
daa
pop
cs
add
cmp
ds
repz
sbb
or
sub
lock
push
call
push
sahf
out
dec
push
aam
int3
enter
repnz
test
sahf
cmpsl
cmp
outsb
mov
jns
out
mov
mov
in
test
repz
jo
push
iret
repz
push
push
dec
inc
stc
cmp
repz
and
cld
sub
jns
cmpsl
call
dec
repz
dec
and
in
les
jo
fs
stc
cmp
repz
sbb
lock
jns
cmpsl
shrb
sahf
ja
adc
sub
push
pushf
jo
sub
inc
push
and
adc
sub
add
aaa
pusha
imul
fsubl
add
and
ret
push
dec
mov
mov
inc
addl
add
add
sbb
and
xchg
sub
push
add
pop
inc
add
add
push
adc
ja
cs
and
add
add
mov
adc
jnp
jnp
or
push
pop
mov
das
jle
cmp
inc
add
addb
xchg
decl
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
ljmp
scas
mov
mov
mov
mov
mov
mov
ret
enter
dec
lret
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
ljmp
icebp
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
xor
push
add
jno
push
sub
test
adc
outsb
gs
popa
data16
cmc
lods
je
pop
shrb
jns
push
xor
add
fisubl
fidivs
add
add
push
insb
sti
sub
arpl
inc
insb
fs
sbb
add
je
xor
mov
str
pushf
pushf
pcmpgtw
xor
push
inc
mov
dec
push
push
dec
and
xor
push
xor
dec
cmovns
cmove
cld
mov
imull
adc
rorl
mov
mov
out
xor
jnp
inc
loop
mov
ds
xchg
out
in
pop
adc
clc
lret
sbb
jb
in
xchg
jge
arpl
cmp
jg
adc
in
sbb
xchg
fisubrs
and
cmp
dec
jmp
iret
imul
lret
add
inc
mov
mov
notb
lret
sub
fwait
ss
sbb
pop
mov
ds
xor
incb
int3
dec
dec
xor
dec
popf
pxor
xor
decl
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
mov
adc
xchg
icebp
mov
cld
or
loopne
cmp
inc
mov
addr16
fcoml
mov
or
insb
mov
out
leave
ljmp
mov
dec
test
xor
jle
dec
add
scas
lods
daa
neg
decl
repz
xor
aas
mov
pop
pop
repnz
or
and
and
es
cld
mov
mov
fcompp
add
add
dec
inc
lds
or
aad
mov
int
fbstp
xlat
sbb
into
rorb
xor
or
sub
sti
add
push
into
mov
inc
loopne
mov
mov
das
outsl
jns
jl
out
movsl
pop
dec
xchg
pop
and
adc
or
sbb
mov
mov
jo
out
es
jae
jmp
dec
inc
popa
mov
popa
fistpl
jae
xlat
scas
mov
dec
roll
mull
test
jg
adc
add
pcmpeqw
loopne
idiv
or
ret
daa
sti
mov
daa
je
or
cmp
jmp
insb
stos
push
mov
mov
sti
jmp
xchg
clc
xchg
shlb
xchg
loop
addr16
testb
push
push
sub
push
out
mull
addb
inc
ja
daa
and
aad
outsl
mov
or
jae
jae
js
cmp
insl
jle
fs
sub
cmpsl
mov
inc
sub
or
ret
outsl
popa
lahf
arpl
adc
fisttps
pop
out
sarl
scas
cmp
push
mov
cmp
fildl
loope
daa
jnp
stos
bound
cmpsl
cmp
and
add
les
jae
pop
and
pop
jns
je
xor
xlat
jg,pn
mov
jmp
jne
adc
cmp
push
mov
jae
xchg
js
sub
pop
sub
aas
cmpsl
out
pop
mov
add
daa
loope
cmp
pop
pop
ret
cmp
fndisi(8087
adc
dec
jb
scas
jmp
imul
ret
pop
shll
push
es
sti
cmp
divl
fldl
sarb
pop
pusha
and
pop
mov
scas
dec
aaa
xchg
inc
arpl
xchg
nop
xorb
fildl
xchg
gs
ret
arpl
jp
xchg
ja
pop
jecxz
cmpsl
sbb
dec
sbb
sbbl
addr16
outsb
pop
lahf
out
xlat
addr16
je
inc
sbb
push
mov
mov
arpl
daa
pop
arpl
rorb
gs
jne
ret
dec
xor
and
jo
and
arpl
and
pop
stos
pop
pusha
fdivrs
insl
inc
add
mov
fldt
mov
jnp
stos
xchg
mov
push
push
das
push
xchg
lret
sub
inc
sub
push
adc
test
or
lock
add
mov
sarl
into
pop
pop
das
outsb
mov
je
jb
and
push
add
daa
pop
push
arpl
decl
adc
mov
pop
xchg
inc
push
ret
jae
pushw
jb
add
or
je
mov
xchg
outsb
jmp
out
add
adc
aaa
pop
cmp
fiadds
cwtl
ss
das
push
jno
push
and
ljmp
sub
or
inc
lods
cmp
dec
aas
jl
sti
sub
jne
or
add
dec
pop
xchg
mov
inc
cmpl
das
push
adc
jmp
ret
js
sub
movsl
addr16
inc
inc
jl
dec
xchg
jne
push
cmp
lock
inc
outsb
out
ljmp
ret
imul
fdivs
sub
icebp
fstpl
add
out
pop
push
fcmovbe
jnp
fiaddl
bound
jae
push
pop
mov
xlat
push
mov
addr16
sti
and
mov
scas
push
bound
or
and
sarl
pop
outsl
loope
adc
fadds
push
lahf
ja
push
adc
fsubs
jo
hlt
jno
jb
pop
mov
push
es
mov
sbb
rorl
std
call
sbb
getsec
jl
arpl
dec
insb
xchg
push
mov
dec
add
outsl
imul
mov
mov
aaa
mov
adc
shl
sbb
mov
pop
je
ds
mov
jmp
insb
jge
mov
aas
pop
rcrl
inc
pop
pop
mov
bound
outsl
mov
ja
fildl
xchg
inc
arpl
and
pop
pop
push
aas
adc
testl
push
cmpb
les
mov
pop
sqrtps
inc
pop
jl
imul
push
mov
ja
mov
lret
sbb
bound
das
mov
push
das
push
cmp
test
mov
fs
mov
out
xor
cmp
jns
sbb
jl
push
ret
mov
mov
jl
pop
jnp
sbb
cmc
js
repz
es
sbb
fidivrs
ja
add
out
push
mov
outsb
mov
ljmp
inc
push
and
jno
jl
pop
xchg
loopne
cmpb
sub
lret
jl
loopne
lock
bound
jns
shll
jnp
mov
inc
mov
mov
xchg
imul
iret
mov
imul
lcall
push
mov
xchg
ret
adc
in
pop
icebp
js
xor
aas
addr16
push
xor
pop
and
mov
test
call
mov
push
push
sahf
xchg
cmp
mov
testb
sbb
fisttpl
inc
idivl
or
inc
jns
push
in
dec
jae
jae
mov
dec
inc
pop
mov
dec
adc
push
stos
pop
jg
pop
cli
icebp
cmc
icebp
add
mov
jo
aaa
pop
pop
mov
xorl
pop
callw
sbb
push
ret
insb
roll
dec
sbb
aas
popa
mov
or
xchg
lods
in
ret
jnp
mov
ret
das
outsl
das
addr16
mov
mov
push
add
idivb
inc
add
inc
add
dec
push
sub
pop
lcall
fs
sub
push
inc
add
pop
inc
ss
push
data16
nop
or
insl
ds
push
cmpsb
dec
push
push
cmpsl
cs
add
fwait
iret
imul
mov
cmpsl
insl
mov
lea
push
push
js
mov
push
call
ds
sarl
add
push
push
jecxz
pop
stos
adc
add
aas
pop
jl
negb
out
pop
push
jnp
pop
sarl
out
adc
push
cltd
das
je
cmpsb
lahf
out
iret
mov
inc
cwtl
jns
xlat
mov
push
adc
out
inc
and
add
and
push
outsb
dec
and
dec
and
or
lods
test
outsl
inc
fisubrl
daa
data16
add
xchg
mov
push
push
xorl
dec
add
pop
xchg
add
cmovge
aas
pop
pop
jo
inc
popa
push
jae
fs
loop
nopl
loopne
gs
test
shll
push
popa
jne
or
and
push
dec
bound
xor
xlat
sub
and
jae
cmpsb
clc
push
outsb
rcll
xor
push
iret
repz
push
addl
sbb
jne
jne
jle
popl
xchg
cmpsl
stc
cmp
mov
hlt
sub
popf
in
repz
inc
xlat
push
or
bound
aas
add
shl
push
insb
into
aaa
es
lea
gs
xor
outsl
mov
ds
fwait
es
jo
jb
out
jb
cmp
sbb
and
jae
sbb
mov
and
and
and
arpl
xor
icebp
adc
fs
adc
add
add
mov
test
sbb
je
ss
cmp
pusha
add
data16
outsl
sub
daa
jbe
sbb
ja
adc
add
and
sbb
rcrl
xchg
aas
cmpl
or
jne
imul
cmpsl
xchg
dec
mov
push
scas
ja
or
sub
dec
push
add
mov
rolb
push
adc
cmpl
addl
pop
adc
mov
cmp
and
and
aaa
mov
mov
cmpsl
add
fwait
js
or
fmul
xor
decb
cmp
pop
add
mov
out
imul
sub
jbe
mov
subb
inc
mov
dec
and
sbb
push
push
out
or
daa
push
sbb
xor
and
inc
dec
pop
mov
sbb
push
outsl
rol
sub
and
scas
pop
cmp
sub
inc
fs
sub
xlat
mov
and
inc
or
push
pop
or
sub
dec
add
pop
add
jo
stos
inc
test
sahf
pop
push
rcl
outsl
or
lcall
pop
sbb
test
sub
lcall
mov
and
sub
mov
mov
mov
andl
adc
sbb
jnp
sbb
add
dec
lahf
mov
pop
push
mov
pop
add
cmpb
loopne
shl
add
scas
mov
cmp
aad
add
add
in
ret
adc
mov
sub
iret
adc
inc
imul
push
stos
mov
movsl
mov
arpl
test
add
dec
lods
xchg
adc
aaa
pop
bound
sbb
arpl
inc
lock
xchg
out
and
jb
xchg
push
jb
cltd
fsub
sbb
inc
jbe
jae
inc
aaa
aam
sbb
add
pusha
into
xchg
dec
jl
mov
push
stos
inc
lret
fistpl
lods
inc
ja
add
lcall
inc
fwait
mov
mov
test
in
add
jecxz
adc
jg
push
lret
inc
dec
jae,pt
adc
sub
adc
out
fsubs
outsb
test
xorb
je
out
add
cmp
out
ret
dec
adc
pop
or
push
inc
lock
pop
inc
jg
push
xor
aas
sbb
or
cmpsl
pop
inc
arpl
jmp
dec
mov
cwtl
push
and
movhps
mov
mov
sbb
outsl
jo
fwait
cmp
ja
jns
daa
push
and
jnp
xchg
hlt
test
out
mull
scas
movsb
xor
push
repz
xor
push
dec
xchg
in
test
dec
cmpsl
pop
sbb
outsl
and
sbb
mov
or
testl
pop
sub
push
cmc
push
cs
cmpsl
push
cs
dec
or
mov
add
scas
inc
xchg
inc
cmp
lea
push
mov
je
inc
imul
stos
jae
sbb
mov
sub
pusha
mov
and
push
or
les
xchg
push
mov
imul
test
imul
aas
add
inc
jae
adc
cmp
mov
ret
and
xchg
popa
int
outsl
pop
das
rolb
imul
shrl
pop
in
pop
ret
rolb
dec
xchg
je
push
push
cmp
shll
sub
mov
ret
fldt
dec
and
outsl
add
add
dec
cmp
ret
or
xchg
mov
jmp
adc
arpl
push
loope
insl
scas
mov
mov
pop
cmpsl
xchg
xlat
pop
mov
ds
dec
in
pop
pop
inc
outsb
loope
sub
fs
fiadds
push
xchg
xchg
out
or
push
mov
jbe
pop
jo
arpl
pop
add
mov
pop
cmp
mov
lcall
add
ljmp
push
cwtl
fcompl
cmp
inc
mov
add
out
addr16
xor
je
sbb
sub
lahf
aas
xor
mov
sub
fistpll
cmp
pop
rcl
daa
cmp
lea
xor
cmpsl
mov
jecxz
sub
or
mov
xlat
sbb
imul
stc
cmp
sbb
out
sbb
sub
add
mov
sbb
out
inc
cmc
sbb
fwait
cs
shrb
push
push
push
add
pop
icebp
push
mov
adc
arpl
hlt
test
fs
das
jmp
adc
imul
mov
in
sbb
inc
mov
sbb
outsl
sub
aaa
xor
push
push
in
loop
push
aas
das
outsl
push
inc
push
add
and
cmp
jne
sbb
das
add
dec
or
out
or
cmp
aam
sbb
push
andb
lcall
mov
sub
adc
push
mov
test
add
lret
cmp
push
mov
add
or
or
rorl
push
ljmp
test
mov
sub
push
cs
mov
push
lcall
adc
or
inc
sarl
int
cmp
adc
lods
mov
adc
in
xor
jae
and
les
pusha
test
pop
adc
add
dec
pop
pop
sub
cmp
xchg
mov
inc
addb
cmp
xorl
pop
fdivrl
and
dec
mov
ljmp
dec
adcl
jo
sbb
push
adcl
fisubs
jle
dec
mov
jmp
pop
repz
sbb
dec
push
mov
lods
inc
scas
iret
outsl
pop
cmp
nop
nop
outsb
loopne
ds
rcl
jp
pop
dec
in
mov
hlt
push
xor
insb
jnp
xor
movsb
lea
pop
scas
push
push
and
jbe
aas
cmp
out
aaa
stos
shlb
ja
xchg
or
das
mov
shl
std
push
or
int
stc
mov
or
insb
ds
xchg
ficoms
mov
cmp
cmpsl
stos
inc
push
pop
stos
push
pop
fnstcw
bound
sbb
ret
mov
inc
lcall
and
xlat
and
and
sbb
fstpl
inc
cs
push
mov
outsb
bound
xlat
stos
mov
cmp
xor
pop
add
call
sbb
and
arpl
xor
and
lret
mov
stos
sub
movlps
push
inc
divl
mov
out
jae
push
mov
pop
sub
push
test
adc
cmp
or
or
add
aam
inc
das
dec
lds
lods
subl
insb
movl
ja
mov
adc
mov
shufps
xchg
iret
xchg
pop
rol
jg
lret
mov
dec
jo
nop
dec
pop
sbb
aas
or
das
sbb
out
iret
loopne
sub
inc
les
xor
inc
ss
cld
das
and
pop
or
outsl
pop
xlat
or
stos
lods
cmp
xlat
dec
dec
sub
and
xchg
test
pop
das
aaa
and
stos
or
dec
jae
jbe
bound
mov
push
push
mov
repz
jnp
jno
and
fidivrs
xor
popa
pusha
sub
testb
cmpsb
add
jnp
jge
mov
popf
std
insl
out
push
and
fs
mov
mov
inc
add
outsb
sbb
lods
inc
cmp
inc
scas
loopne
jmp
insl
test
add
inc
sub
pop
fsubrl
push
push
insl
arpl
sbb
ja
clc
sub
push
sbb
inc
or
dec
cmpsl
pop
fwait
out
push
pop
ds
push
push
inc
sahf
inc
leave
push
sti
xor
int3
jecxz
jl
pop
and
stos
in
cltd
mov
and
cwtl
dec
sub
hlt
loopne
dec
scas
xchg
stos
push
add
xchg
mov
xchg
push
leave
or
mov
and
sbb
cltd
dec
pop
int3
fdivrl
leave
stos
in
aam
test
pop
and
stos
sub
in
xchg
test
in
fdivrs
lock
leave
push
xor
and
stos
in
cltd
pusha
or
and
adc
xchg
mov
xchg
stos
adc
rcll
xchg
dec
insb
sbb
sarb
xor
mov
call
movsl
sub
dec
mov
sbb
les
and
inc
shlb
lahf
inc
scas
adc
aam
xor
pop
push
pop
cmp
xchg
rorl
ret
je
inc
inc
fwait
add
shlb
loope
jmp
divl
je
or
inc
xlat
mov
sbb
iret
dec
daa
dec
test
fsubrs
inc
xlat
inc
lods
adc
adc
out
push
add
dec
pop
jno
imul
sub
push
sub
les
mov
aas
mov
adc
pop
inc
repz
sub
add
inc
cmpsl
sbb
xor
je
mov
cmpsl
inc
push
or
aas
mov
inc
pusha
orl
xchg
addl
push
push
inc
mov
out
inc
mov
adc
in
notb
addr16
rorl
inc
mov
aaa
xchg
mov
push
scas
addr16
stos
data16
imul
mov
inc
inc
scas
inc
scas
sub
adc
jg
movl
ss
dec
pop
inc
sub
xchg
ds
dec
push
subl
mov
mov
sbb
inc
push
ljmp
ret
mov
outsl
shl
inc
iret
aaa
vmovhps
scas
push
insb
andb
das
push
inc
mov
adc
rcrl
sbb
or
bound
gs
pop
and
sbb
popa
lods
pop
pushl
mov
jg
aaa
add
imul
mov
inc
adc
sbb
adc
ljmp
push
sbb
push
and
xor
cmp
andl
xor
les
adcb
xlat
push
pushl
addl
mov
jo
xlat
pop
out
add
add
popa
or
and
movsl
je
dec
pop
inc
inc
addr16
roll
pop
push
add
and
xor
lock
push
push
xchg
jb
in
sahf
sbbl
adc
lahf
cwtl
pop
ret
xor
negl
mov
cmp
addr16
insb
adc
je
or
dec
je
loopne
loop
lret
fisubs
mov
arpl
pusha
add
sub
es
jae
or
scas
aas
andb
push
addb
shll
ja
imul
cmp
mov
push
jbe
negl
mov
aaa
sbb
daa
rcr
jo
xor
mov
ds
in
ja
loopne
loopne
adc
sbb
jae
imul
dec
js
cmp
sti
push
sbb
mov
stos
jmp
inc
sub
sbb
jo
ret
add
bound
mov
shl
mov
testl
scas
jae
and
and
mov
and
jns
inc
push
xorl
out
rorl
dec
push
mov
xor
cltd
or
xchg
fwait
int
or
pop
or
insb
add
out
adc
jns
and
sub
xor
inc
mov
mov
cmp
lret
mov
popa
xchg
cltd
fldcw
shrb
ret
sub
lcall
xchg
pop
adc
ss
mov
pop
sbb
int
push
dec
str
mov
shlb
stc
das
incl
xor
jnp
orb
test
jns
mov
fs
mov
out
insl
ds
repz
adc
arpl
in
jns
mov
shll
out
lcall
mov
cwtl
iret
in
dec
pushf
push
inc
or
scas
and
pop
xor
jl
and
sub
cmpsl
pop
jb
mov
push
xor
mov
incb
pusha
xor
jmp
scas
pop
pop
sti
or
dec
jmp
lahf
push
cs
fsubrs
loop
push
iret
pop
adc
scas
inc
addr16
add
gs
out
mov
cmp
xor
stos
movsb
xor
xor
lock
out
mov
fwait
cmp
in
xchg
dec
cmovno
or
idivl
xlat
mov
out
add
xor
aas
add
mov
outsl
in
xorl
fiadds
aaa
cmp
xchg
movsb
inc
cmp
je
jne
xlat
fs
push
xchg
movsb
ss
and
cmp
jno
add
inc
lods
mov
mov
jae
push
imul
mov
mov
jecxz
xor
scas
push
insl
lock
loop
pop
sub
in
sahf
cs
cs
cmp
mov
push
sahf
push
xor
xchg
and
out
es
and
loopne
push
mov
and
in
fidivrs
inc
xchg
cmp
inc
pop
ret
cmp
jnp
fs
dec
sub
into
mov
jmp
jecxz
pop
pop
in
pop
scas
dec
shlb
or
inc
or
loopne
stos
jle
js
xor
fucom
jmp
inc
cmp
xchg
ficomps
dec
or
inc
push
mov
out
inc
adc
ss
push
dec
repz
push
fimull
pop
incb
mov
xor
ret
lds
mov
jb
loop
pop
mov
push
cmpsb
xchg
ja
pop
inc
jge
ret
pop
mov
fstpl
fidivs
mov
lcall
out
push
sub
cs
mov
cmp
xchg
daa
jge
fidivs
mov
scas
jnp
out
inc
bound
imul
jnp
sbb
push
sbb
dec
ss
outsb
jnp
fidivrs
daa
dec
jb
das
xor
pop
dec
es
das
add
pop
out
mov
and
or
xchg
jne
sysexit
mov
cs
sahf
xchg
push
push
mov
mov
push
scas
push
in
mov
insl
push
inc
ja,pn
xor
push
jns
lds
jp
jp
ds
fucomi
loope
fiaddl
jg
dec
das
xor
fisttps
jp
pop
fstpl
mov
dec
xor
loopne
push
into
xor
cmp
push
dec
cs
push
dec
jg
dec
mov
jecxz
add
lcall
jae
orb
inc
mov
imul
sbb
push
mov
jo
out
jnp
adc
imul
data16
and
jnp
clc
subb
push
inc
inc
fldt
aas
popf
cmp
adc
xchg
lods
hlt
mov
mov
push
xor
inc
mov
sub
adc
pop
sub
scas
xor
mov
sub
arpl
sbb
sbb
lret
xchg
mov
fs
adc
jne
mov
add
pop
arpl
mov
ret
xlat
stos
scas
daa
loopne
sub
sti
adc
mov
movsb
jp
and
push
adc
dec
daa
out
fimull
jmp
sti
lahf
mov
xchg
mov
jmp
mov
dec
or
ss
xor
dec
outsb
mov
movb
cmp
fimull
frstor
addr16
and
ret
mov
mov
xor
and
std
insb
outsl
popa
fs
outsl
lods
cwtl
mov
dec
pop
aas
rolb
xorl
mov
inc
ret
mov
add
mov
xlat
lcall
sbb
add
jge
dec
add
bound
sbb
gs
sbb
xor
xlat
push
mov
jp
bound
xor
mov
pop
xchg
pop
lds
xor
pop
xor
xchg
adc
add
adc
jl
sahf
out
cs
jo
mov
shlb
pop
dec
ja
mov
cmp
jne
jo
add
ss
pop
pop
sub
fdivr
ja
xor
xor
push
or
xchg
pop
inc
inc
popa
outsb
push
pop
jecxz
or
repz
test
les
jae
sbb
je
jae
xor
mov
or
lahf
inc
add
jecxz
dec
and
xchg
or
loopne
push
adc
das
push
sub
or
shll
pop
pop
outsl
fs
adcl
mov
test
fldpi
fildll
cmpsl
outsb
and
scas
movl
inc
das
scas
inc
ret
and
sub
test
mov
and
pop
cmc
push
xor
sti
and
push
das
mov
ret
stos
das
or
fwait
iret
push
nop
mov
inc
pop
test
cmp
push
fwait
repz
popf
pop
aaa
nop
jecxz
xor
pop
mov
ja
inc
inc
and
push
movl
ljmp
xor
mov
daa
iret
xchg
pop
rcll
popa
add
mov
outsb
ret
xor
xchg
add
sub
lea
mov
testb
outsl
aas
push
das
mov
xor
sarb
push
sub
push
fs
mov
add
or
incb
ds
fldt
pop
cmc
adc
jle
sub
pop
rolb
push
lgs
ja
dec
add
das
mov
ja
mov
inc
js
xor
sub
imul
sub
insl
fcmovnu
xlat
and
xchg
fsub
fimull
push
adc
ret
xadd
cli
outsl
clc
cmpsb
shr
fsubrs
cmpb
and
insb
call
inc
xchg
in
es
pop
add
nop
and
mov
ds
adc
and
mov
add
adc
fildl
xchg
mov
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
mov
test
pusha
or
mov
sub
sub
idiv
bound
mov
sbb
mov
ds
pop
sbb
addr16
pop
subb
mov
dec
fsubs
mov
pop
test
xor
dec
xchg
sarl
push
pop
adc
pop
in
bound
pop
push
ljmp
xor
mov
mov
aaa
mov
xchg
in
fs
push
add
push
xchg
mov
push
ss
jmp
and
xchg
rol
shrb
xchg
mov
cmp
dec
inc
xor
leave
jae
pop
and
adc
xchg
dec
jnp
add
fwait
das
push
in
in
cmp
les
sahf
xchg
cmp
cmp
and
outsl
rorb
pusha
xorb
xor
mov
decl
mov
lret
fmuls
hlt
inc
dec
cmpsl
loope
xchg
cmp
and
ret
shll
jnp
mov
call
xchg
cmp
sub
pop
xor
inc
adc
inc
push
shl
jl
push
inc
addr16
jecxz
scas
adc
inc
cwtl
adc
mov
cmp
lock
arpl
inc
test
data16
add
dec
cmpsl
push
incl
movsl
pop
xchg
imul
cmp
cmp
loopne
outsb
imul
das
xor
js
xchg
pop
sbb
add
push
lock
and
add
fwait
pop
aaa
push
push
cmp
jbe
or
jae
xlat
test
test
pop
pop
push
add
adc
inc
popa
aam
jnp
inc
andl
push
push
scas
pop
jmp
or
fisttpl
lods
aaa
pop
bswap
mov
pop
pop
aaa
xor
outsb
das
addr16
les
inc
dec
sbb
mov
test
aas
jge
add
call
add
rolb
xor
dec
mov
nop
inc
stos
test
fmuls
loopne
add
outsl
push
pop
jb
pop
push
add
test
lahf
dec
repz
ret
cmp
jne
movsb
dec
pop
cmpsl
mov
ljmp
jo
bound
scas
xor
mov
inc
aaa
outsl
dec
popf
aam
and
push
mov
cs
aaa
dec
inc
arpl
roll
cli
xlat
pushf
lods
fisubrl
notb
and
insb
addr16
inc
fwait
xchg
pop
arpl
in
repz
sub
push
inc
jg
xchg
pop
into
ds
js
ficompl
nop
xor
push
icebp
cltd
mov
std
lret
push
outsb
iret
fwait
in
cltd
or
popf
dec
pop
or
jbe
lcall
mov
push
mov
ds
cmp
fs
add
fldl
inc
addb
cs
jge
into
test
dec
nop
pop
dec
mov
cmp
sqrtps
xchg
flds
pop
cmp
scas
cld
sub
fisttpl
in
test
dec
daa
xchg
out
push
push
daa
xchg
inc
fldcw
es
push
sbb
cmp
sbb
push
in
cs
int
cmpsl
push
mov
mov
hlt
sbb
in
mov
inc
sub
pop
call
inc
mov
test
fidivrs
iret
call
dec
daa
ds
jge
out
ret
sti
push
cmp
mov
push
xchg
push
cmpsb
repz
out
call
sub
jns
iret
enter
push
push
insb
sbb
loope
push
inc
pop
jns
ret
mov
pop
pop
jge
and
pop
cmp
mov
xchg
xchg
mov
int
pop
xlat
or
mov
loope
fwait
iret
jnp
negb
dec
sti
sahf
divl
adc
imul
movsl
dec
jae
jb
cmpsb
es
xlat
xchg
xchg
negl
mov
dec
mov
fimuls
ss
inc
imul
dec
iret
repz
dec
push
push
jo
mov
jl
imul
dec
push
push
or
iret
repz
sahf
xor
xchg
out
jl
movsb
add
test
jns
dec
sub
test
jns
adc
pop
xchg
iret
repz
or
popa
push
mov
cmp
repz
loopne
push
sahf
out
sahf
and
pop
jne
mov
in
push
push
or
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
adc
bound
test
mov
fcomps
or
scas
int
mov
leave
loop
and
jmp
mov
add
idivb
dec
or
adc
mov
int3
push
and
pop
sbb
enter
adc
stc
repz
or
adc
daa
enter
or
add
push
test
insb
adc
cmp
test
jl
mov
cmp
mov
add
mov
std
iret
or
dec
push
add
ja
outsb
outsb
inc
mov
xor
push
js
cmpsb
mov
imul
cmp
xor
dec
push
adc
inc
ja
pop
mov
xchg
lods
xchg
pop
mov
fisubrl
add
dec
jo
js
rcrb
push
push
dec
pop
inc
outsl
xor
test
je
add
adc
fadds
popl
xchg
cmp
shrb
mov
out
pop
mov
fidivrs
pop
call
jb
pusha
xor
sbb
dec
cmpsl
addb
or
jno
xor
lahf
pop
sub
lods
fwait
xlat
mov
adc
cmp
addr16
loop
mov
pop
sbb
cmp
syscall
mov
xchg
jo
fwait
push
jo
inc
mov
mov
xchg
xchg
bound
inc
adc
mov
mov
jecxz
xor
testl
popa
imul
cmpsl
cmpsl
fs
js
pop
dec
pop
jb
add
rcr
divl
sub
testb
ljmp
data16
sahf
add
dec
inc
popf
test
mov
repz
add
and
mov
push
cmp
and
outsl
dec
icebp
movsb
jae
xor
daa
add
and
fcompl
xor
and
mov
pop
cmpsl
aaa
outsl
dec
addr16
sub
dec
popl
jbe
jo
xor
pop
fucomip
or
dec
bound
outsb
push
jnp
pusha
dec
sbb
add
inc
pusha
gs
sbb
insl
add
jg
adc
cmp
rol
addr16
jb
addr16
add
scas
push
inc
sub
mov
jmp
imull
push
shlb
push
shll
add
sbb
rol
inc
pop
test
add
testl
push
add
daa
loopne
aam
mov
das
lea
inc
push
sub
inc
jmp
adc
push
push
pop
mov
loopne
cmpb
addr16
arpl
mov
mov
iret
fs
or
das
push
mov
push
cmp
inc
cmp
sti
push
cmpb
ja
jo
pop
push
xchg
xor
pop
out
add
lret
dec
mov
mov
or
push
sub
pop
pop
dec
mov
mov
mov
out
test
daa
popw
outsl
imul
jne
aaa
xchg
add
xchg
mov
mov
das
testl
pop
mull
insb
adc
imul
popl
add
pop
dec
add
push
fisttpl
cmp
push
loopne
inc
addl
bound
ret
fidivrs
push
jecxz
out
inc
into
inc
add
adc
push
bound
cs
lahf
imul
add
cmp
xlat
dec
add
shl
sbb
push
repz
mov
roll
aad
push
dec
loopne
sahf
adc
pop
inc
add
fcmovbe
dec
mov
popa
cmpl
adcl
addl
pop
or
pop
pushf
add
push
pop
outsl
fwait
or
mov
sub
mulb
pop
addr16
mov
inc
inc
push
inc
daa
cs
sub
cmp
dec
push
pop
pop
out
or
adc
push
pop
pop
je
add
inc
jbe
mov
inc
aaa
push
mov
pop
bound
inc
push
pop
sub
and
lret
mov
dec
lock
fbstp
add
arpl
mov
cmpsl
push
decl
jg
push
ret
and
testl
pop
pop
inc
cmp
es
inc
jns
je
pop
and
outsb
out
mov
or
xchg
lret
outsl
das
adc
and
scas
or
jbe
dec
ja
popa
insl
jo
je
out
outsl
movsb
adc
addr16
jo
jae
daa
pop
ret
pop
jno
outsl
xor
push
out
push
bound
cmp
cwtl
pusha
or
pop
pop
mov
mov
jns
je
jne
or
or
cmp
test
scas
ja
pop
insb
xor
mov
jae
inc
adc
or
dec
ss
bound
mov
hlt
mov
nop
rolb
imul
arpl
sub
mov
iret
jbe
popa
sbb
retw
or
push
push
mov
testl
out
pop
stos
pusha
and
push
loop
sbb
bound
cmp
jnp
push
dec
mov
ret
sub
pop
adc
test
dec
les
mov
push
jmp
jo
push
pop
xchg
push
mov
cmpsl
pop
stos
add
xor
push
xchg
push
push
add
adc
emms
or
sub
jns
jb
sbb
adc
mov
movsl
ret
mov
xlat
mov
out
adc
fstpt
js
aaa
inc
insb
ret
xchg
push
sysret
daa
xor
mov
pop
pop
sub
and
jb
imul
mov
push
pop
das
and
pop
add
push
pop
and
mov
inc
dec
push
xchg
add
movsbl
fiadds
rcr
mov
or
jbe
add
cmp
xchg
pushf
add
sbb
sbb
add
repz
cwtl
das
mov
inc
aaa
pushl
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
cmp
call
mov
jge
push
je
mov
andb
fwait
rol
fwait
in
inc
mov
out
popf
rorl
mov
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
ljmp
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
ljmp
cld
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
data16
ljmp
mov
call
cltd
test
push
push
shll
lcall
dec
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
outsl
arpl
js
js
test
add
mov
mov
movsb
mull
jno
addr16
push
scas
addr16
mov
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
and
ret
js
popf
enter
mov
xor
add
fisubrl
ds
das
sbb
cmpsl
or
daa
ja
mov
sub
pop
inc
inc
inc
push
inc
pop
push
out
out
fisubs
pop
pop
or
aas
js
insb
cwtl
out
shrb
xchg
sbb
push
and
adcb
outsb
push
or
ret
ficompl
outsl
mov
push
and
insb
pop
gs
adc
scas
ds
push
xor
push
sbb
jbe
ja
aaa
push
cld
incb
es
add
push
or
cmp
or
sub
push
lods
mov
int
and
sub
cmp
dec
sub
cmp
fwait
int
push
pop
mov
inc
cmp
xchg
outsb
in
jnp
fiadds
push
xor
sbb
std
jns
push
aad
sbb
cmpsl
jge
ljmp
push
in
jle
xchg
lods
repnz
cmp
es
cmp
add
jecxz
or
icebp
mov
lahf
dec
pop
insb
push
adc
testl
scas
nop
xlat
add
sub
lcall
xor
sub
push
fbstp
ret
test
lods
push
dec
jb
dec
add
push
pop
adc
enter
inc
adc
fisubs
outsl
and
and
arpl
mov
sbb
je
insb
jns
fstp
xor
and
push
xchg
daa
adc
inc
cs
push
sub
sub
push
lock
pushw
icebp
xor
loop
dec
inc
mov
add
add
jne
push
test
outsl
fs
gs
jo
jns
adc
iret
inc
mov
ja
jo
pop
outsl
insl
jne
xchg
jbe
bound
pusha
push
add
or
addr16
icebp
bound
cmp
and
push
stos
mov
pop
gs
inc
insb
push
inc
cld
add
jbe
negb
adc
insb
mov
mov
jle
sbb
outsl
jo
popa
imul
in
sahf
dec
sub
xor
push
dec
fistpll
in
orb
inc
or
inc
xadd
pushf
cmp
sti
sbb
inc
cmovo
fcmovnb
adc
cmpb
aas
nop
jo
rdmsr
xchg
pop
pavgb
jp
ljmp
or
ud0
and
cmp
loopne
imul
out
add
mov
pop
mov
pop
aaa
cmp
ds
or
shlb
mov
daa
dec
and
daa
push
xor
mov
mov
inc
push
pop
das
inc
add
pop
pop
iret
js
ja
lahf
rcr
pop
add
daa
repnz
dec
repz
les
sbbl
dec
outsl
xchg
mov
mov
add
inc
sub
fs
fucomp
jns
push
mov
inc
dec
fsubl
addr16
scas
fisttps
inc
test
add
mov
adc
mov
jns
inc
push
pop
jle
push
xchg
sub
xchg
out
add
mov
lds
mov
and
xor
inc
push
dec
sub
jb
mov
outsl
or
faddl
pop
jnp
or
enter
in
and
notb
int3
inc
inc
add
jae
adc
and
xor
xchg
outsl
insl
orl
sahf
js
jo
mov
pusha
movsb
jns,pn
in
mov
mov
jo
jbe
addr16
aas
add
push
daa
clc
add
inc
int3
fdiv
fiadds
das
inc
bound
outsb
xchg
xor
fstl
aas
xor
fisubrl
daa
addr16
push
pop
repnz
enter
push
jge
jbe
aam
mov
int
mov
push
inc
push
nop
enter
stos
fmull
ja
in
nop
addr16
cmp
and
cs
jo
test
inc
adcl
sbbl
ds
cmp
inc
daa
lock
inc
enter
jmp
daa
testl
es
data16
shrb
add
pop
enter
push
jbe
adc
push
sub
push
imul
pop
push
jo
pop
push
scas
cmp
add
loopne
loopne
mov
out
sahf
mov
aam
cld
and
enter
aam
jnp
mov
and
xor
inc
push
test
bound
nop
fistl
cld
insb
sar
pop
add
scas
mov
jo
pop
in
sbb
int3
divl
cwtl
cld
rclb
or
ss
xor
sbb
dec
in
dec
add
cld
rorb
pop
repnz
pop
insb
rorb
pop
pop
ja
add
pushf
in
push
repnz
lods
mov
and
pushf
xor
nop
or
pop
cld
or
xor
out
cs
pusha
cmp
sbbl
pusha
inc
sahf
outsl
insl
ja
mov
lods
mov
jns
in
mov
sahf
in
cld
mov
fsub
sub
pop
mov
loopne
cmp
push
shl
fcoml
fisubrl
or
out
lcall
nop
or
cmpsl
push
cmpsl
cmpb
mov
scas
in
mov
fiadds
cmp
dec
pop
and
sti
push
dec
fisubs
out
cmpsl
mov
mov
mov
jns
in
mov
enter
loopne
nop
fbstp
in
and
cltd
fdiv
es
dec
push
xor
cmpsl
in
lcall
int3
js
sahf
out
mov
push
cmpsl
js
jl
or
fdiv
jl
and
enter
mull
in
js
xor
inc
push
fiaddl
cltd
fsubs
loop
js
xlat
lods
cmp
daa
test
insl
leave
xchg
dec
add
or
aam
add
filds
and
xor
imul
bound
imul
test
sbb
dec
lahf
fs
or
push
mov
aam
or
inc
push
mov
inc
icebp
mov
adc
sub
push
test
xorps
pop
repnz
jg
test
push
jl
addr16
pop
repnz
enter
mov
rcr
loopne
out
pop
lods
adc
add
mov
push
and
addr16
repnz
cmpsl
jg
cmpsb
push
fwait
lcall
inc
cmpsl
repnz
enter
test
xchg
scas
pop
addr16
ds
jb
add
sub
pushf
sub
or
sbb
jae
or
loopne
jl
in
ficompl
aas
cld
push
insb
cmpsl
jg
sbb
sub
pop
shlb
or
pusha
xchg
push
cmpsl
mov
pop
hlt
add
ds
test
pop
cmpsl
hlt
stc
es
nop
dec
fstpt
pop
sahf
push
sub
test
lahf
rcrb
and
ja
nop
iret
and
call
or
or
ja
out
sub
and
faddl
mov
inc
lahf
dec
inc
lock
fsubrs
fsubl
pushf
push
mov
pop
rcr
jo
inc
jg
stos
pop
enter
lock
mov
inc
loopne
sarl
xor
inc
push
push
push
movsb
inc
pop
pop
and
mov
mov
int3
test
addr16
lahf
xorl
inc
loop
and
lock
clc
fnsave
jo
push
lock
aam
and
fidivrs
ficomps
dec
inc
ja
push
mov
sar
fiadds
ljmp
jmp
loopne
add
rcl
fcompl
pop
enter
filds
daa
mov
xchg
cwtl
inc
mov
push
jg
int3
roll
dec
dec
fistps
push
ja
rolb
roll
iret
bound
mov
test
pushl
shl
loopne
lods
lods
add
inc
adc
fs
push
mov
in
js
fadds
inc
sahf
pop
imul
mov
enter
mov
mov
inc
jo
loopne
loope
mov
insl
jg
in
pop
daa
push
add
jmp
insb
lahf
in
inc
inc
lcall
lods
fsubrl
ret
shl
outsl
push
out
add
cmpsl
inc
cs
roll
inc
adc
lahf
dec
xor
add
pop
repnz
enter
fs
test
mov
mov
mov
jb
mov
out
add
adc
mov
lock
jecxz
nop
addr16
push
pusha
in
add
adc
nop
mov
out
mov
cmp
nop
inc
loopne
mov
inc
lock
in
inc
cli
pop
enter
xor
jb
sbb
inc
in
pop
pop
aad
outsl
aas
js
inc
pop
leave
jae
add
leave
jae
addr16
push
enter
fsubs
test
or
divb
add
jns
xchg
inc
outsl
inc
ds
sbb
dec
sahf
addr16
pusha
enter
mov
outsl
aas
mov
sbb
xlat
cs
xchg
jl
ror
pushf
nop
or
flds
cmp
repnz
out
add
fisttpl
test
adc
inc
mov
push
push
pop
in
push
sbb
addr16
dec
pop
mov
daa
pushf
jbe
pushf
mov
call
cs
scas
mov
mov
cli
adc
jl
adc
out
or
cmpsb
mov
mov
push
addb
aas
call
rorl
pusha
out
jo
ja
jbe
xor
outsb
mov
pop
add
dec
rep
xchg
cmp
jg
loopne
pop
enter
bound
out
insl
outsl
fisttps
call
daa
sbb
pop
int
addr16
or
pop
out
pop
shrb
lahf
ja
xchg
int
dec
daa
sbb
test
dec
mov
inc
cmp
mov
xchg
sub
orb
mov
add
mov
repz
mov
dec
push
xor
icebp
mov
mov
cmp
add
es
push
and
int
stc
shl
mov
out
mov
testl
repz
ds
push
push
out
in
movsb
mov
repz
je
pop
cmp
add
scas
inc
xor
jg
add
out
add
in
push
adc
in
dec
cmpsb
pop
loopne
inc
cld
xchg
aas
dec
movsb
stc
push
and
add
xor
adc
nop
add
xchg
jns
jmp
add
mov
out
or
xor
mov
sbb
filds
enter
add
inc
mov
adc
ja
nop
fiaddl
ja
add
popa
and
in
in
dec
outsl
xchg
sti
adc
inc
push
shl
jb
add
rcr
in
dec
mov
or
outsl
add
inc
pushf
pop
leave
inc
pushf
inc
sti
adc
cs
lcall
dec
in
fbstp
add
or
outsl
cmp
or
cmp
pop
and
pop
ret
lods
pop
scas
add
outsl
out
mov
xor
fnstsw
and
fbstp
cmp
add
aam
test
call
sbb
out
scas
add
sbb
ljmp
pusha
and
xor
xor
xchg
in
nop
out
out
out
outsl
xchg
popa
sub
add
sub
or
sub
xor
jbe
into
js
aaa
js
cwtl
repnz
repnz
mov
push
hlt
out
movl
sahf
sbb
lock
leave
add
dec
jg
or
ja
adc
jg
mov
sub
or
mov
or
repnz
cld
fimuls
icebp
outsl
add
mov
fbld
bound
and
mov
fiadds
and
insb
add
cwtl
pop
scas
sbb
push
xor
pop
outsl
js
ret
push
out
dec
fisubs
jae
pusha
cmpsl
or
daa
add
je
orb
cmpsl
in
or
xor
push
aaa
stc
out
pusha
xchg
sub
add
fwait
test
call
and
es
xorb
call
loopne
subb
mov
loope
fimuls
xchg
push
cwtl
aam
jg
push
adc
push
call
addr16
and
xor
aaa
inc
repz
push
xor
pop
sbb
loopne
xchg
mov
ss
js
test
or
repz
mov
pcmpeqd
mov
leave
xchg
lock
outsl
js
in
xchg
outsl
jg
sub
xchg
loop
hlt
jge
jne
daa
testl
cmpsl
jge
scas
push
movsb
clc
push
mov
hlt
scas
mov
testb
and
and
dec
cmpsl
bound
loope
adc
cmc
push
pusha
mov
dec
xlat
or
decl
idivb
add
pop
jne
daa
xlat
or
shl
pushf
xchg
dec
inc
divl
add
test
fdiv
add
fimull
xor
popa
xor
outsl
and
sub
push
mov
xchg
cmp
nop
imulb
mov
divb
subl
stos
pop
nop
divb
call
aaa
sbb
outsl
loopne
and
jecxz
and
pushf
pusha
divl
scas
es
pop
mov
add
mov
call
jg
hlt
ja
loop
fisttpl
sbb
and
jg
in
dec
scas
addr16
add
xchg
or
fs
add
sub
das
and
and
push
jb
jge
mov
inc
aad
lods
aaa
pop
in
jl
sub
sub
pop
cmp
ss
cmp
dec
stc
aaa
add
movsb
or
leave
test
mov
pop
iret
int3
xlat
jo
push
xor
sahf
iret
aad
sub
daa
loopne
xchg
pop
leave
in
pop
cli
daa
or
add
insb
repz
pop
cwtl
push
xchg
add
call
dec
int3
js
or
outsl
mov
xchg
aas
add
decb
cli
cmpsl
sbb
and
mov
decl
xlat
xchg
push
inc
sti
das
outsl
add
or
inc
cs
xchg
movsb
inc
outsb
rclb
push
test
mov
add
cld
push
xchg
mov
pop
andl
push
xor
outsl
out
add
or
inc
lcall
inc
dec
loopne
or
jb
arpl
out
daa
or
add
addb
cmp
std
addr16
or
negb
jl
aas
addr16
fisubs
daa
lods
int
lds
iret
movsb
in
sahf
aam
addr16
gs
in
hlt
std
push
mov
push
dec
divl
mov
push
inc
inc
add
decb
imul
incb
nop
decb
or
rol
pop
repnz
shl
rclb
adc
orl
lahf
fsubl
arpl
clc
out
mov
jl
les
clc
sub
xchg
or
clc
lods
push
mov
subb
cs
push
add
dec
mov
mov
jns
test
scas
fstl
xchg
repz
addr16
enter
cmpsl
stc
push
xchg
pop
andl
icebp
aaa
mov
cmpsl
stc
cmp
stos
mov
repz
mov
inc
jno
iret
repz
mov
repz
jns
loop
mov
dec
lea
stc
adc
testb
jns
cmpsl
stc
pop
xor
div
cmp
repz
out
lcall
jge
sahf
ja
rolb
test
xor
out
int
xchg
cmp
stc
cmp
popf
mov
iret
sarl
icebp
and
sahf
out
ds
mov
out
xchg
xor
out
or
cmp
repz
cltd
inc
je
sti
out
sahf
out
lcall
ds
fwait
lcall
cmp
add
sahf
int
jns
push
andl
mov
mov
repz
add
jb
mov
jns
adc
repz
push
jb
adc
sub
cmpsb
lcall
outsb
cmpsl
mov
fstpl
xchg
test
jns
leave
add
out
xchg
outsb
stos
loop
lods
test
out
int
lods
dec
int
insb
ds
repz
lcall
adc
cmp
repz
mov
jns
cmpsl
imul
fwait
jmp
mov
push
lods
jl
out
call
adc
sarl
pop
mov
mov
out
out
aaa
mov
cmp
cmpsl
shll
xchg
loop
mov
mov
ret
out
sahf
out
mov
out
cmp
xor
sub
dec
repz
test
sbbl
ret
ljmp
loopne
les
sahf
out
jl
cmp
sarl
test
and
je
dec
repz
or
inc
lcall
lret
lret
pop
jns
iret
repz
push
int
in
stc
cmp
repz
push
sarl
push
mov
out
ds
jbe
inc
sarl
cmpsl
stc
cmp
push
shlb
push
rcrl
fidivrs
lcall
out
stc
cmp
repz
xchg
sar
sub
stc
cmp
cmpsl
mov
xlat
mov
sahf
cmpsl
addr16
fstps
imul
fidivl
cmpsl
stc
cmp
pop
fnstsw
fnstcw
cli
inc
ficoms
jnp
data16
out
call
fldcw
push
in
or
fcomip
sub
fwait
or
leave
divb
data16
ss
sti
test
cld
add
xor
jns
add
add
lahf
int3
nopl
push
xor
aas
aam
pop
lods
pop
setle
jp
out
cmp
push
scas
sbb
xor
mov
cmpsl
or
or
aaa
pop
out
pop
or
mov
jg
cmp
jg
xchg
aas
test
stc
rcr
es
movsl
fsubrs
mov
cltd
bound
cli
test
bound
fcmovbe
mov
int3
or
das
cmc
mov
insb
inc
movsb
outsl
les
mov
dec
push
mov
data16
jb
cmp
hlt
std
iret
pop
and
add
push
mov
sub
out
cmpsb
or
pop
pop
sbb
outsl
pop
push
inc
das
repnz
repnz
sub
inc
sub
adc
aas
jnp
dec
dec
adc
xchg
xor
and
popf
out
jg
dec
aas
in
scas
mov
ss
inc
pop
daa
mov
jge
outsb
inc
daa
movq
adc
or
repz
add
aam
in
rolb
loop
add
ljmp
mov
mov
adc
mov
fcompl
cmp
cmp
and
push
xor
jbe
jb
cmp
jbe
or
mov
lcall
ja
push
or
jno
pop
push
jp
and
mov
outsl
mov
mov
or
xchg
xchg
scas
jo
les
cs
jg
aaa
add
mov
jmp
xchg
mov
inc
leave
or
shlb
dec
jmp
fcompl
aas
push
cmp
cmp
dec
repnz
hlt
jle
adc
ja
in
inc
lahf
xchg
test
inc
rcrl
ja
fisttpl
insl
iret
ja
shlb
and
lods
mov
filds
xchg
enter
xchg
in
xchg
pop
push
cltd
push
push
adcb
dec
cs
test
mov
xor
rcr
in
xchg
mov
test
enter
xchg
pop
push
xchg
scas
jecxz
and
cmpsl
push
arpl
cmp
pop
and
scas
aaa
push
push
push
xchg
xchg
sahf
rcl
mov
leave
xor
xchg
out
in
push
jns
pop
jb
adcl
push
daa
inc
out
and
or
adc
pop
mov
mov
notl
movsl
or
daa
jg
outsl
jne
scas
jg
scas
pop
sbb
add
inc
dec
add
xchg
adc
sbb
js
sub
push
mov
add
imul
sub
scas
rclb
pop
or
out
adc
push
xchg
dec
cs
xor
pusha
popf
xor
pop
push
out
sahf
xlat
pop
jae
add
mov
pop
xchg
cmpsl
push
mov
jns
push
cltd
sbb
leave
lock
adc
adc
orb
push
loop
fwait
in
ret
cmp
pop
or
in
inc
mov
leave
leave
leave
add
jmp
mov
adc
mov
cmpsl
push
je
cmp
fnsave
adc
ja
iret
push
jg
dec
sub
pop
leave
adc
add
sub
mov
mov
xchg
cmp
imul
jb
outsl
ja
mov
and
inc
xchg
xchg
xchg
fildl
mov
xchg
lret
test
fistpl
mov
insl
divb
adc
and
add
iret
pop
fdivrs
pop
addr16
xchg
adc
mov
test
add
popl
lcall
out
mov
mov
sahf
out
rorl
loopne
push
lea
lea
pushf
fsubrl
push
daa
sbb
ucomiss
pop
insb
or
mov
jno
daa
daa
addr16
jge
leave
repz
xchg
add
es
push
push
leave
add
push
es
out
push
mov
dec
add
leave
rclb
outsl
and
leave
and
or
clc
sbb
sbb
or
mov
cmp
inc
mov
pop
mov
cmp
enter
mov
and
xchg
in
jbe
jb
xlat
out
hlt
xchg
xor
pop
pop
nop
inc
repnz
sub
adc
daa
xor
pop
jb
pop
lea
add
sbb
popl
stos
scas
lcall
outsl
jo
jg
xlat
fnstsw
xchg
push
add
add
sub
mov
sbb
bound
pop
pop
aas
nop
daa
iret
enter
lock
sbb
or
out
in
stc
cmp
sbb
xchg
mov
mov
imul
xchg
dec
sbb
cmp
lahf
mov
xor
and
stos
cmp
jb
sbb
pop
cmp
mov
fsubrl
lock
stc
das
xor
js
dec
cmp
xchg
push
pusha
inc
xchg
push
xor
xchg
sbb
add
and
jmp
xchg
push
fcomps
rclb
call
shll
mov
scas
test
lahf
push
adc
jmp
and
xchg
in
cmc
std
xchg
add
bound
inc
inc
cmp
lea
lcall
outsl
gs
and
mov
outsl
dec
sbb
xor
pop
sbb
pop
pop
mov
jg
mov
or
cltd
xchg
xchg
in
pop
ret
or
mov
stos
jns
cmpsl
push
les
add
testl
scas
xchg
xchg
mov
mov
addr16
dec
dec
dec
add
jne
add
lock
movl
xchg
incl
and
js
pop
jns
pop
inc
dec
and
and
pop
mov
jb
scas
mov
xchg
outsb
rcl
inc
in
push
push
enter
sbb
add
mov
addr16
out
sahf
out
add
push
add
out
sahf
pusha
add
out
cmp
out
or
cmp
push
decl
inc
xlat
and
cmpsb
inc
lahf
in
and
adc
dec
orb
outsl
add
lods
dec
adcl
pusha
sahf
aam
aas
ja
ja
sbb
fdivrl
mov
lds
iret
pop
iret
cmpsl
push
fsubrl
mov
xor
push
mov
pop
insb
cmp
cs
loopne
fnstsw
add
and
xchg
inc
mov
mov
sub
pop
leave
insb
push
mov
cs
clc
movl
icebp
and
cwtl
push
fs
mov
pop
and
out
add
pop
and
pushf
popf
mov
in
popf
out
pxor
testl
pushf
lods
push
fbld
cltd
cs
push
insb
dec
inc
cs
fidivrl
mov
push
mov
scas
inc
fistpll
cmpsl
movsb
push
iret
int3
mov
and
fnsave
jne
add
daa
mov
or
testl
xchg
xchg
jl
insb
es
and
mov
lret
sbbl
out
out
addr16
jl
pushf
push
sbb
and
daa
iret
repz
dec
push
push
pop
sbb
jmp
daa
xchg
aam
rclb
xchg
push
enter
jg
adc
ret
adc
adc
in
out
xchg
cs
mov
aas
jb
shlb
out
pop
jo
push
scas
xchg
repnz
clts
pushf
adc
pop
push
xchg
pushf
in
and
fcom
ss
push
xlat
push
add
or
dec
xchg
push
scas
add
popf
xchg
pushf
sbb
ret
ds
and
clc
mov
ljmp
sub
dec
fsub
push
lahf
cmc
addr16
adc
aam
sub
mov
lods
push
pop
popf
fists
sub
pcmpeqw
sahf
fsubrs
scas
cmp
sbb
fildll
popf
cmp
mov
shr
add
fxch
or
sbb
xchg
das
xor
dec
dec
cs
add
dec
sahf
cmp
leave
and
jno
js
sbb
adc
pop
pushf
sahf
sub
add
repz
dec
syscall
lahf
das
jo
xor
push
icebp
sub
mov
scas
nop
lahf
mov
fwait
pop
cmpsb
daa
add
mov
cli
ja
out
sbb
jecxz
mov
mov
incl
movsb
cmp
sub
rcrl
in
lods
ja
ja
mov
fdivl
addr16
dec
ds
pop
hlt
mov
enter
movaps
out
iret
dec
pop
push
add
mov
push
pop
pop
test
lea
pop
mov
add
daa
iret
jae
push
das
lock
jns
sti
push
push
mov
outsl
adc
or
sbb
push
cmp
xchg
xor
xor
loope
ds
mov
ja
xchg
push
add
pop
xlat
cs
fistps
fsubrs
iret
adc
bnd
smsw
in
and
das
sub
inc
out
fdivrl
notl
pop
sahf
ja
mov
jne
pop
jge
and
dec
or
das
mov
push
fists
aad
popf
pop
das
into
fnstenv
call
das
or
xor
xchg
imul
push
push
push
movsb
ss
or
pop
movsb
bound
ljmp
add
movsb
pop
add
inc
aaa
call
jle
add
nop
inc
movsl
push
add
aaa
inc
xor
push
daa
push
incl
movsb
or
cwtl
aaa
cmpsl
lret
ret
leave
push
pop
int3
mov
push
sbb
push
mull
cmp
movsl
das
pop
movsl
pusha
movsl
adc
outsb
fisttpll
adcl
xchg
fwait
push
add
outsb
mov
movswl
or
in
pop
shl
movsl
call
cmpsb
aam
inc
pushf
call
in
frstor
push
add
repz
gs
add
ljmp
xor
lods
fisttpl
test
addr16
test
and
mov
stos
scas
xcrypt-ctr
cmpsl
sbb
cmp
fnstsw
push
ja
push
add
inc
mov
pop
cmpsl
pop
cmpsw
cmp
aam
das
lock
mov
push
xor
lds
outsb
daa
daa
int
xchg
xorb
dec
and
mov
rorl
scas
sbb
outsb
xchg
and
test
test
into
push
cmp
jbe
jle
dec
es
or
xor
jb
roll
das
int
out
jb
jmp
adc
fisubrl
fisubl
xlat
cmp
mov
repnz
daa
jbe
add
ja
into
inc
test
xchg
roll
mov
in
idivl
jb
leave
add
stos
jbe
cmp
push
mov
iret
jae
fisubrs
iret
orl
stos
iret
jb
inc
jb
aaa
scas
push
mov
cmp
jbe
pop
push
add
daa
iret
repz
push
out
mov
cmp
idiv
stos
jmp
pop
push
push
or
iret
leave
repz
push
push
push
es
repz
cmp
adc
cmp
fwait
cmp
unpckhps
push
push
jns
js
pop
stos
xlat
sbb
in
out
and
das
int3
in
mov
stos
xlat
das
stos
cmpsb
add
xchg
adc
out
dec
cmp
lods
dec
sub
aaa
cmovb
mov
decl
cs
stos
mov
sbb
cmc
paddw
icebp
add
mov
inc
dec
xor
mov
scas
lods
call
jne
lahf
dec
dec
mov
test
xlat
dec
or
popf
or
or
pextrw
das
mov
ljmp
add
inc
fs
jns
pop
aam
fadds
mov
inc
test
pop
dec
or
fwait
xor
aas
aaa
or
jmp
adc
adc
ja
mov
dec
adc
mov
rolb
inc
enter
cmp
cmp
add
push
push
mov
mov
and
cmp
add
mov
inc
cs
pop
cwtl
add
in
in
push
pop
addr16
jb
xlat
pop
pop
mov
ljmp
daa
sahf
cmp
outsl
decl
cmp
rcrb
cmp
mov
add
pop
xchg
add
rcr
dec
es
fwait
std
inc
decl
push
cmp
imul
fisttps
push
add
cmp
jns
add
gs
iret
jne
iret
dec
mov
or
or
scas
scas
or
rcll
cmp
cmp
sbb
mov
push
add
repz
repz
xchg
sbb
mov
or
sahf
out
or
add
aam
or
ror
mov
daa
push
mov
inc
lea
nop
xchg
or
in
daa
sbb
dec
push
fcmovu
testl
cmp
mov
mov
cs
xchg
xchg
push
mov
lods
mov
push
xchg
ds
inc
pushl
repnz
fstpl
add
jns
xlat
out
incl
les
leave
in
sbbl
cmpl
jno
aas
inc
mov
mov
clc
scas
jae
sbb
push
xchg
xchg
mov
aas
cmp
inc
mov
inc
addr16
out
data16
push
repnz
mov
roll
mov
ret
lcall
sahf
fcmovne
xchg
std
add
add
fisttps
jmp
outsl
loope
xchg
mov
mov
mov
mov
nop
int
fadds
popa
and
inc
xorb
mov
inc
add
inc
pop
ss
inc
test
movsl
sub
incl
jecxz
pop
enter
cmpsl
mov
dec
and
notl
lret
leave
mov
add
pop
dec
inc
outsl
sub
and
add
pop
xor
leave
cmp
das
or
ret
mov
mov
jns
mov
sbb
jne
and
into
add
push
aas
jecxz
jmp
sbb
adc
cwtl
ja
pop
xchg
mov
xchg
popa
aam
ljmp
mov
in
out
movsb
mov
inc
repnz
mov
pop
inc
xor
flds
or
inc
inc
idivl
ja
xor
imul
mov
pushf
pushf
jle
out
das
mov
add
shlb
pop
leave
lcall
prefetch
and
mov
mov
pop
and
add
jle
jb
cmp
xchg
xchg
out
loopne
shlb
loop
incl
sbb
roll
add
ror
daa
cs
jg
in
dec
js
jb
xchg
cmp
leave
xchg
lsl
xchg
pop
int3
bswap
stc
fmull
ftst
xchg
inc
add
jo
pop
mov
leave
sbb
mov
inc
mov
mov
pcmpgtw
add
xchg
movsb
fistpl
sldt
cs
or
iret
repz
or
mov
das
femms
sar
xchg
out
fsubrp
mov
sub
test
fs
add
sub
psllq
inc
pop
rcr
leave
dec
push
das
subps
pop
pusha
dec
pushl
jns
push
add
data16
mov
btc
add
jns
and
lahf
xor
cmp
pop
inc
or
dec
dec
repnz
xor
sbb
jle
mov
call
pushf
pop
mov
mov
or
xlat
xchg
mov
mov
inc
add
mov
mov
push
mov
imul
add
cmp
fcmovne
cltd
movsb
dec
scas
testl
xchg
loop
aam
movsb
add
push
mov
and
cvtps2pi
add
in
push
add
xchg
lcall
and
jo
push
mov
mov
pop
mov
push
cmp
pop
idivl
push
iret
mov
jbe
xchg
fsubp
pmaxsw
add
cmpsl
push
mov
orb
mov
ss
mov
inc
dec
xchg
mov
push
push
mov
jb
mov
das
fdivrl
mov
mov
leave
repz
rolb
sahf
loop
mov
addr16
xchg
loopne
mov
shl
in
push
add
sahf
pushf
dec
mov
xchg
push
pop
pusha
mov
pushl
sahf
xchg
fcmovne
mov
jb
mov
into
jns
jae
xchg
add
sbb
mov
add
xchg
movups
and
xchg
fs
dec
cs
dec
andps
cmp
insb
je
inc
xchg
out
jl
or
in
lahf
cmpsl
sar
mov
shlb
in
in
loop
add
sahf
faddl
add
sbb
roll
lcall
adc
dec
jae,pn
sar
ja
ficoml
sahf
xsha256
cmpsb
push
pop
pop
jmp
scas
filds
aas
pop
out
fcmovnbe
out
pxor
push
aad
sahf
xlat
xchg
push
add
clts
bound
roll
sbb
xchg
or
cmp
lods
in
ja
in
in
orl
sub
mov
xchg
rcr
loop
push
movsb
and
in
fwait
loope
call
stc
dec
icebp
in
cmp
aas
pop
rclb
insl
sub
orb
ret
xchg
push
add
xchg
pop
iret
scas
add
ret
ss
pushf
in
ret
and
push
loopne
shr
add
push
and
cmp
out
jb
push
daa
inc
cmovns
andb
repz
add
popa
out
jb
sub
mov
jbe
ja
rcpps
mov
fstpt
in
ret
fildl
les
outsl
dec
repnz
push
lds
les
dec
xor
sbb
mov
pop
movsb
out
jae
cmp
in
sysret
jle
or
or
icebp
pushf
rorb
lret
lds
es
insb
enter
push
ja
daa
sbb
pop
shll
fistps
jbe
addr16
mov
cmp
por
repz
push
add
repz
cmpsl
pop
scas
or
leave
repz
or
repnz
add
push
call
cmp
dec
pop
push
icebp
dec
dec
fiadds
push
outsl
jp
and
inc
outsl
mov
clc
push
mov
adc
push
inc
bsr
movlps
mov
push
in
mov
out
fcomip
leave
addl
push
lcall
enter
xor
push
jns
jl
decl
jp
sahf
out
add
inc
jb
xor
mov
push
loopne
in
mov
xchg
mov
addr16
cmp
cmp
mov
fninit
iret
dec
aaa
cmp
sgdtl
repz
xchg
daa
sti
add
pop
jo
in
loope
es
aas
leave
xchg
xchg
or
mov
shrb
pop
jp
sbbb
pop
pop
sbb
pushf
dec
and
mov
xchg
pop
loopne
lret
in
mov
pop
verw
pushf
add
lret
mov
or
cmp
repz
mov
in
and
push
test
out
into
popf
pop
add
fwait
dec
sub
addr16
icebp
psubw
lret
jg
das
rdtsc
jns
add
adc
sbb
adc
and
lcall
lret
testl
inc
dec
push
xchg
adc
in
push
add
in
pop
and
pop
test
addl
sbb
or
pop
mov
insb
and
fnsave
test
out
add
lret
lcall
cs
sbb
sbb
sub
iret
dec
lods
daa
mov
dec
int3
das
push
ja
cmp
add
push
sahf
out
sahf
or
sahf
out
jns
mov
sahf
out
push
ret
adc
jns
out
adc
adc
dec
repz
adc
adc
int
vmwrite
sbb
and
out
sbb
sbb
daa
daa
fisttpll
sbb
push
adc
adc
adc
daa
daa
daa
daa
adc
push
or
dec
sub
pop
cmp
outsb
or
mov
add
xchg
inc
or
xchg
xchg
jmp
mov
int3
jae
nop
fdiv
mov
xchg
out
cmp
inc
push
test
aam
fdivl
and
and
pop
daa
pop
xchg
repnz
call
mov
or
jne
cmp
pop
into
aas
cmc
and
xor
push
mov
in
mov
pop
dec
push
fildl
push
xlat
push
sbb
leave
mov
or
cs
dec
outsb
addr16
fnstenv
or
repnz
iret
cli
into
add
xchg
and
or
lahf
adc
sbb
and
iret
shlb
iret
add
xlat
leave
leave
inc
or
jo
mov
dec
fildl
lds
call
pushf
lock
iret
dec
xchg
pop
sub
shlb
push
out
pop
cmp
xchg
add
lods
pop
popw
mov
pushl
outsl
mov
xchg
cltd
out
mov
inc
rcll
int3
xchg
into
leave
leave
aam
in
iret
repz
add
or
xchg
rorl
aas
push
or
popf
cmp
adc
sbb
push
or
out
sahf
sub
xor
cmp
adc
adc
pop
push
add
rcr
dec
sahf
add
xchg
popa
daa
mov
or
lcall
jns
add
je
rolb
xor
ja
testb
pop
adc
rolb
das
sub
adc
sbb
ja
out
cvttps2pi
add
pop
sahf
fstpt
inc
or
dec
rorb
mov
xchg
cmp
cmpsl
repnz
pop
das
sub
ja
pushf
in
mov
push
daa
adc
ss
pushf
addr16
lcall
cmp
ror
pushf
or
insl
fdivrs
jbe
sahf
add
xchg
ja
insl
in
sarl
roll
dec
pop
leave
jae
jg
xchg
add
insb
daa
jns
outsl
arpl
addr16
das
cmp
push
adc
sub
addr16
jmp
and
aam
aam
fs
mov
mov
popl
cld
ret
aam
pop
adc
inc
loope
inc
and
jo
pop
jo
push
loope
xor
pop
mov
mov
nop
gs
mull
mov
add
aad
mov
daa
fucom
aam
pop
and
rorl
aad
or
sub
lret
xchg
cmp
iret
mov
outsl
push
aad
push
addr16
jmp
pop
add
mov
iret
leave
outsl
ja
jg
xor
loopne
xchg
mov
aad
ja
pop
leave
fdivs
in
jbe
mov
xchg
add
xchg
in
cmc
addr16
pop
int
packuswb
and
leave
and
add
inc
shrl
fbstp
sahf
cmp
mov
mov
pushf
pxor
push
xchg
push
add
jns
leave
rorl
push
fninit
cmp
cmp
in
cmc
incl
xlat
dec
dec
outsb
push
aas
nopl
sub
pushf
test
adc
dec
xlat
pop
es
fwait
jbe
pop
dec
leave
insl
mov
ja
hlt
mov
fwait
xchg
push
pop
mov
sbb
loope
pop
aam
fistps
pmulhw
ljmp
push
or
push
add
movd
aas
cvttps2pi
aas
add
iret
push
adc
inc
jp
fadds
ss
add
mov
xchg
fcomps
loopne
push
imul
pop
add
pop
lds
push
push
sarb
decl
xchg
dec
enter
xchg
push
daa
sbb
mov
out
or
or
push
mov
imul
xor
decl
fsts
dec
push
leave
insl
xchg
out
movl
fistl
push
aam
or
das
pop
xchg
fldenv
mov
mov
sub
iret
xlat
adc
xchg
imul
ficompl
pop
call
fisubl
pop
and
pushf
dec
aam
rorb
mov
fcmovu
mov
mov
popl
pop
push
loop
ficompl
mov
fimuls
add
xchg
out
mov
and
push
add
cmp
jmp
add
aad
or
push
fisttpl
push
push
push
jns
mov
adc
fwait
lret
dec
loopne
fistl
insb
pop
pop
push
and
fistl
pop
fcmovnu
push
xchg
dec
insl
jl
xchg
repz
jg
push
add
jns
leave
lods
clts
mov
test
int
test
fisttpl
insl
cmp
jb
fisttpl
add
or
pop
adc
in
in
xchg
ret
pop
pop
pusha
punpckhbw
ljmp
js
andb
in
jg
dec
and
sub
outsb
xor
push
inc
fmul
repz
dec
out
push
adc
in
fwait
cmp
movups
jb
jb
nop
pop
cwtl
mov
jae
sbb
cmp
leave
ror
rorb
repnz
loopne
and
addr16
jbe
dec
clc
cmp
sahf
out
mov
adc
repz
jns
sub
sub
iret
repz
sub
inc
pop
add
dec
movmskps
dec
xor
subl
pop
leave
jae
sub
dec
pop
inc
sub
ja
out
int3
es
xchg
push
pop
fst
cmp
push
inc
xchg
fstpl
pop
sahf
fstp
pushl
sub
leave
xchg
in
loop
xchg
ficoms
cmpsb
daa
daa
das
cmp
aas
add
test
adc
outsl
pop
add
imul
inc
inc
add
ficomps
push
leave
repz
jns
mov
mov
mov
or
loope
out
cld
fdivrp
aaa
jns
in
fbstp
adc
aas
bswap
repz
adc
adc
iret
repz
insl
sbb
repz
xrelease
xchg
sbb
sbb
sbb
iret
repz
shll
loopne
stc
cmp
repz
and
and
loopne
jns
cmpsl
and
and
jns
cs
cmp
dec
sub
out
push
sub
outsl
out
sahf
out
jl
mov
xchg
out
sahf
xchg
das
mov
outsb
mov
aas
pop
sarl
lahf
out
fwait
loopne
jbe
decl
loope
adc
sahf
out
fisubs
push
push
and
sahf
out
and
and
out
sahf
out
and
imul
sbb
sahf
out
sbb
jns
out
pop
mov
jns
dec
into
dec
sahf
out
dec
out
dec
cld
dec
in
fcomip
or
sqrtps
push
dec
fmull
out
and
dec
iret
repz
pushf
adc
sub
cmp
inc
das
push
dec
pop
push
push
sbb
loop
xchg
cmp
outsl
mov
clc
iret
leave
in
jbe
outsl
mov
add
repz
add
add
mov
jecxz
push
pop
adc
iret
repz
pop
or
cmp
pop
iret
repz
or
or
jns
jecxz
adc
sahf
out
adc
jns
out
adc
adc
sahf
push
mov
rcrl
jns
out
sbb
sbb
sbb
js
out
sbb
sbb
sahf
out
adc
pop
sbb
daa
outsb
mov
out
xor
das
inc
dec
dec
into
into
into
fisubrs
in
pop
in
data16
outsb
in
sahf
out
out
jns
sbb
sahf
out
xchg
push
lahf
adc
cmpsl
adc
adc
jns
adc
adc
out
sahf
out
xlat
push
fisttps
out
out
or
or
add
or
push
sahf
push
pop
outsb
and
push
in
es
ds
xchg
jecxz
dec
das
push
in
sbb
je
mov
outsl
sbbb
xchg
pop
pmaxub
jns
mov
das
push
add
cmp
jg
cmp
fs
mov
and
in
bswap
repz
fcoms
loopne
call
lock
movntq
out
jbe
or
pop
sbb
inc
dec
sahf
sbb
out
sbb
enter
jbe
out
ja
add
jne
das
push
add
jns
mov
add
jb
jb
fsubp
out
data16
jb
incb
out
adc
ds
push
adc
in
repnz
leave
leave
leave
leave
push
pop
gs
leave
leave
leave
leave
jne
test
xchg
pop
mov
pop
iret
mov
out
mov
in
dec
and
xchg
xchg
out
add
cld
add
out
jns
or
push
adc
pop
in
mov
es
push
or
out
cmp
inc
dec
push
push
in
mov
push
pop
dec
pushw
adc
loopne
in
jbe
jle
call
push
bnd
call
fnstsw
push
add
add
jns
in
push
cli
out
dec
add
sbb
repz
sahf
or
pop
push
or
iret
repz
xor
cmovns
fcmovne
repz
adc
paddsw
mov
mov
repz
mov
ret
repz
cmp
fcomps
jecxz
sbb
stc
add
aas
pminsw
sbb
xchg
out
and
xchg
out
inc
and
jb
jns
jb
jge
iret
jae
jb
sahf
test
repnz
mov
sarl
xchg
jl
jns
ljmp
jmp
and
jns
pop
jns
jmp
push
cmp
out
or
mov
xchg
out
cmp
insl
push
or
xchg
xchg
xchg
xchg
jge
lea
popf
movsl
adc
iret
jae
push
repz
sbb
fstpl
loope
mov
in
push
test
cmc
jmp
cmpb
xchg
out
sbb
inc
rdmsr
cmp
xchg
xchg
dec
push
pop
fs
dec
mov
in
je
jg
xchg
cltd
dec
adc
or
jl
mov
mov
rol
fsubr
rcll
in
mov
cmp
push
or
or
prefetch
inc
dec
pop
pop
jg
fucomi
in
arpl
lahf
outsb
in
mov
adc
cmp
repz
adc
icebp
in
mov
mov
iret
repz
push
sbb
scas
sbb
sbb
cmp
aad
and
loop
jnp
popf
in
pop
clc
jg
out
lahf
push
out
mov
sbb
lret
psrad
jnp
mov
jg
sub
sub
jns
out
push
sub
das
out
sahf
out
xor
xor
out
sahf
xor
pop
xor
data16
cmp
repz
jno
ss
mov
xchg
cmpsb
repnz
cmp
cmp
out
aas
inc
push
cmp
cmp
out
ds
cmp
or
lahf
iret
repz
inc
stos
inc
mov
out
outsb
daa
shrl
fmull
push
adc
sarb
repnz
push
jmp
out
dec
jle
jae
pop
mov
jge
mov
push
cmp
lret
es
mov
repz
pop
lock
push
add
imul
out
fimuls
mov
scas
pop
mov
cmp
repz
loope
out
adc
push
icebp
adc
adc
daa
iret
repz
adc
in
in
sbb
push
punpcklbw
cmp
xchg
insl
js
test
ja
push
and
adc
jmp
repnz
call
repnz
insb
dec
repnz
repnz
add
mov
push
add
jnp
sahf
repnz
sahf
ja
pop
cmpsl
dec
or
jns
enter
fimuls
out
por
lmsw
fucom
mov
adc
pop
unpckhps
out
push
and
sub
xchg
out
inc
dec
sbb
jns
iret
sbb
sbb
in
test
nop
and
and
sahf
ja
mov
shrb
fimuls
out
sub
repz
hlt
adcl
loopne
mov
fbstp
js
pop
hlt
jns
in
iret
push
hlt
push
add
jns
out
xchg
add
cltd
push
mov
in
shr
lahf
rorl
and
cmp
in
aas
adc
stc
pop
add
outsl
pmaddwd
leave
repz
push
and
repz
or
sahf
out
jle
mov
setg
stos
adc
ret
out
sahf
negl
fcoms
jecxz
sahf
xchg
out
xchg
out
sbb
test
stc
sbb
jns
repz
push
sbb
adc
sahf
push
sub
ss
out
sahf
out
and
fs
in
sahf
and
and
fucomi
xchg
test
out
mov
mov
rdtscp
push
inc
jg
cmpsl
es
sub
sbbl
lahf
out
lea
testl
in
jns
add
xor
test
jns
pop
dec
or
sub
and
or
neg
leave
repz
or
dec
push
loopne
cmpsb
adc
sahf
out
adc
adc
loope
outsw
daa
iret
adc
clc
prefetch
sbb
cs
mov
push
push
test
cmp
fwait
outsb
pop
add
clc
out
mov
mov
clc
scas
push
pop
mov
cmp
vmptrst
out
daa
iret
or
xlat
push
or
sahf
push
out
aas
std
syscall
stc
out
mov
das
or
adc
add
dec
sahf
adc
stc
repz
pop
sbb
push
sbb
leave
repz
sbb
outsb
stc
cmp
repz
push
pop
jle
xchg
sbb
lock
stc
and
in
jmp
mov
dec
ret
lods
mov
pop
fmuls
in
lock
xchg
xchg
xchg
stc
sti
stc
cli
adc
sahf
out
test
or
fucom
jns
cmp
cmp
repz
divps
imul
jg
mov
das
mov
repz
stos
sbb
cmp
sbb
sbb
popf
in
pop
out
cli
and
mov
mov
sti
push
and
cmp
es
in
in
cmp
rsqrtps
jp
mov
pop
sub
enter
sub
sbb
pop
dec
and
inc
cmp
mov
push
cmp
sti
inc
mov
inc
sar
ljmp
xor
cld
in
xchg
and
cld
push
mov
cld
cmp
insl
inc
pop
syscall
push
pop
pop
repnz
jae
or
jle
adcl
fldt
bswap
pop
xlat
dec
sahf
out
adc
adc
clc
imull
aas
jo
add
pop
push
pop
push
out
jns
data16
sbb
repz
sbb
sbb
daa
mov
aad
negl
decb
pop
das
jns
xchg
out
cmp
push
aaa
jns
out
pop
sub
jns
fisttpl
pop
das
sub
sub
jl
push
das
xchg
xor
dec
mov
xor
test
jns
iret
xor
mov
inc
iret
in
aam
notb
ds
std
out
cmp
sbb
or
das
push
cmp
cmp
scas
push
std
inc
jae
dec
rorb
jmp
xor
dec
call
mov
bound
insl
mov
jne
jns
xchg
out
cmpsb
mov
mov
leave
das
aam
fistps
adc
pop
or
adc
mov
mov
nop/reserved
and
cs
pop
mov
out
cmp
inc
dec
subps
dec
outsb
pop
addr16
push
cmp
in
in
xchg
push
and
syscall
add
repnz
adc
push
sahf
out
sahf
sub
sub
sub
fwait
jnp
mov
cs
das
int3
xlat
push
xor
iret
jae
loop
xor
inc
fucomi
in
push
xor
setbe
mov
add
sbb
push
shl
xchg
mov
or
cmpsb
inc
pop
add
shrb
push
add
pop
push
push
pop
pop
popa
out
push
xchg
imul
jae
mov
das
btc
dec
movsl
mov
jb
lods
incl
and
aaa
in
dec
sbb
les
dec
inc
sbb
push
loopne
imul
fucomip
aaa
ret
aaa
lock
mov
fistl
daa
adc
mov
ret
and
movq
xchg
sbb
add
add
and
adc
or
aaa
mov
pop
add
aas
inc
push
or
fisubl
bound
ljmp
outsb
pop
inc
sbbl
add
and
push
das
iret
shr
mov
add
or
in
jb
or
or
or
mov
or
daa
daa
mov
and
das
and
pop
inc
inc
push
addr16
fucomi
jbe
das
push
xorps
in
sahf
subl
jo
jb
jbe
in
push
pop
andb
cmpb
mov
xchg
push
sub
mov
fsubrl
cmp
sbb
and
or
cmp
cld
mov
sbb
sub
adc
adc
bound
dec
add
or
sbb
loop
imul
pop
fs
xchg
and
sahf
jl
add
movsb
add
pusha
cmpb
cmpsb
fisttps
mov
inc
sbbl
mov
fisubl
inc
mov
pop
inc
mov
iret
mov
jmp
call
adc
lahf
xchg
das
clc
push
ficompl
push
pop
fisubrl
xor
fcomp
loopne
dec
inc
mov
jb
jle
cmp
sbb
xchg
repz
pause
mov
cmp
je
pusha
push
dec
inc
cmp
repz
cmp
sub
cmp
repz
sbb
cmpsl
stc
cmp
adc
or
and
sahf
out
fldlg2
and
push
faddl
aam
sarb
jns
test
mov
out
je
add
jns
repz
push
pop
push
dec
mov
out
cmp
cmp
sbb
clc
and
out
push
aam
mov
sahf
out
cwtl
nop
mov
js
jo
pusha
push
cmp
fmulp
repz
push
or
and
ds
shr
fadd
mov
xchg
push
pushf
push
je
pusha
and
icebp
xchg
add
xor
dec
jnp
or
push
cmpb
ss
js
clc
mulb
mov
incl
dec
hlt
xor
aas
sbb
es
push
or
lock
orb
cltd
mov
rcrb
lock
xorb
call
push
daa
push
push
push
inc
jg
mov
mov
jmp
pop
pop
pop
dec
inc
xchg
pop
roll
push
adc
jg
loopne
inc
mov
inc
xor
xchg
mov
sbb
xchg
mov
add
rorl
push
imull
das
outsl
mov
iret
mov
pop
testb
stc
pop
mov
test
add
pop
pop
ds
out
repnz
add
add
out
xchg
es
adc
push
xor
and
and
jns
iret
pop
push
jnp
repz
pop
push
sbb
iret
jnp
out
and
dec
push
repz
jns
fcoms
push
aam
rcr
repz
or
or
adc
iret
jnp
push
fcompl
cmp
sahf
out
sahf
xor
sub
and
repz
push
push
and
adc
or
add
xchg
int3
and
aaa
inc
out
cmp
out
pop
imul
movups
xor
xchg
cld
orb
inc
cmp
sbbl
iret
jmp
fistl
cmp
pop
js
out
cmp
repz
xor
dec
out
sarl
insl
add
push
pop
ja
loopne
sahf
xchg
mov
bnd
das
or
dec
enter
pop
pop
mov
daa
jns
add
or
repnz
push
ret
mov
adc
mov
dec
or
pop
and
pop
add
leave
sbb
into
sbb
rorl
and
sahf
mov
sub
lods
lds
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
incl
adc
mov
decl
js
inc
outsl
loopne
jmp
call
imul
divl
jl
mov
popf
sti
jmp
stos
push
inc
mov
push
sub
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
dec
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
pushl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
incl
pop
mov
xchg
clc
repz
mov
subb
fwait
xchg
and
leave
aam
les
add
int3
add
out
aas
sti
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
sar
ljmp
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
jmp
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
mov
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
inc
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
pushl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
jmp
push
ja
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
dec
aam
fmull
call
test
incl
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
jmp
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
sti
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
leave
adc
ficomps
frstor
nopl
jo
and
push
jo
inc
xlat
and
pop
add
inc
je
inc
mov
push
dec
addr16
pop
and
dec
dec
gs
std
inc
push
dec
inc
aaa
xor
jg
or
insl
fwait
jp
cmp
roll
inc
pop
push
inc
dec
inc
jo
inc
popa
push
outsb
jbe
push
stos
insl
imul
insl
bound
aas
inc
es
insb
imul
pop
sub
cmp
pusha
mov
icebp
or
rcl
dec
push
inc
dec
push
mov
pusha
push
and
addr16
push
and
inc
test
out
dec
inc
gs
gs
mov
ds
les
arpl
mov
fwait
inc
or
bound
outsl
push
dec
pop
sbb
push
push
jmp
xchg
out
arpl
mov
popf
lcall
insb
and
push
das
sub
rorb
fs
and
pop
cmpsl
aas
dec
sbb
or
inc
dec
daa
fbstp
jae
imul
xor
sub
inc
inc
jg
inc
jns
dec
loopne
dec
mov
push
push
les
imul
push
cmp
xor
je
dec
xor
adc
push
or
je
or
jb
add
inc
out
dec
push
dec
dec
sbb
lds
jae
jbe
dec
dec
scas
movsl
cmpsb
test
sub
xchg
int
movsl
cwtl
or
cli
adc
jne
arpl
inc
cmp
outsl
dec
dec
add
push
bound
push
mov
int3
xchg
fld
pop
mov
or
mov
sbb
sbb
inc
xchg
push
inc
mov
js
cli
dec
test
mov
adcb
pop
pop
inc
fisubl
loope
mov
idivl
push
push
push
notl
imul
mov
push
dec
outsl
push
jb
addr16
lds
das
push
xor
push
clc
jp
nop
stos
inc
mov
dec
adc
jp
jg
push
cmp
and
cmc
mov
outsl
push
inc
arpl
push
nop
push
push
push
cmpsl
repz
push
pushf
pusha
out
mov
sub
jg
or
movsl
add
pop
xchg
shll
shlb
add
cmpsl
or
pusha
pop
xchg
lea
pop
fisttpl
ja
mov
pusha
inc
arpl
les
pop
pop
pop
sbb
aam
push
stc
lahf
push
jl
add
ja
shll
scas
std
push
push
mov
cmpsl
push
dec
dec
je
mov
xlat
dec
push
xchg
aad
lahf
inc
inc
sub
add
in
sub
stos
orb
mov
adc
jg
adc
pop
ret
stos
leave
or
sub
push
nop
lods
mov
mov
or
or
orl
push
dec
push
test
dec
push
dec
movsb
daa
or
pop
cli
dec
dec
idivb
mov
aaa
cwtl
xchg
jae
inc
in
cmp
pop
inc
push
mov
imul
dec
push
pop
push
jne
les
inc
stos
andb
sbb
rolb
imul
dec
outsl
addr16
sbb
push
iret
inc
xchg
les
push
cmp
andb
xchg
inc
out
and
cmpsb
push
test
repz
push
xor
jns
cmpsl
stc
call
test
jge
out
xor
les
inc
repnz
cwtl
inc
je
add
xor
iret
jae
cwtl
push
and
lahf
mov
pusha
jne
add
incl
ja
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
mov
sub
mov
sbb
pushl
repz
test
ficompl
jmp
mov
hlt
movl
ljmp
jp
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
ljmp
in
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
xor
pushl
fildl
mov
xor
mov
fcompl
shrl
cmp
ficoms
push
xlat
enter
mov
and
pop
clc
pushl
iret
shld
sub
mov
incl
lods
or
adc
stos
sbb
data16
inc
fdivl
jno
fildl
mov
adc
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
lcall
pop
dec
test
xchg
sbb
push
sub
ljmp
xchg
insb
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
incl
sbb
hlt
or
fnstenv
adc
mov
mov
bound
lcall
ficoml
gs
aam
pop
popa
mov
into
pop
cmp
mov
inc
mov
xlat
xchg
fadd
shll
jmp
outsb
xor
mov
sarb
fidivl
add
in
add
pop
dec
or
cmp
add
daa
adc
or
dec
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
inc
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
pushl
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
or
jp
iret
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
decl
ljmp
push
test
ss
sbb
push
imul
aam
loopne
rorl
ficoml
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
fdivrs
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
incl
ss
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
sar
ljmp
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
pushl
cmpsl
call
ret
shlb
sbb
ret
es
pushf
mov
push
or
or
addr16
jb
push
hlt
orb
adc
jp
loop
sub
or
mov
xchg
or
out
fdivrl
fisttpl
aam
roll
jmp
aam
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
hlt
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
lcall
insb
push
js
or
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
ja
ds
push
scas
fcompl
fldenv
fistps
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
mov
call
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
lcall
sub
aaa
mov
or
sbb
add
add
jp
loop
lret
push
mov
ds
outsl
inc
cmp
je
mov
imul
dec
je
push
insb
imul
push
pop
filds
sti
call
pop
inc
jbe
push
jns
arpl
arpl
pusha
cmpsl
lods
sbb
mov
shll
pop
inc
jne
outsl
insl
fadds
xchg
int3
inc
imul
popf
and
adc
and
ret
jne
adc
addr16
dec
inc
js
add
inc
cmp
bound
ret
mov
inc
popa
or
lahf
push
dec
sbbl
mov
inc
jno
xor
pop
inc
insl
ljmp
inc
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
or
or
xor
bound
scas
cmp
inc
jbe
pop
sbb
inc
add
cmpsb
fs
icebp
xor
add
inc
jp
inc
or
ror
inc
rcl
xchg
test
mov
xor
lcall
popa
stos
pop
or
push
jbe
arpl
popl
rcpps
xchg
mov
bound
push
dec
push
rcl
js
sbb
aaa
push
jne
sbbl
xor
push
dec
insb
nop
pusha
add
popa
xchg
cmp
cmp
push
push
je
aaa
aas
inc
push
add
xchg
pusha
lds
add
and
dec
mov
jae
dec
popf
int
pop
ret
ljmp
sahf
bound
aaa
inc
jnp
adc
sbb
inc
pop
adc
and
or
inc
inc
add
ds
mov
int
and
aas
int
push
dec
dec
lea
add
fists
inc
mov
mov
xchg
mov
insl
adc
fidivrl
pop
aad
xor
xor
or
aad
arpl
add
addr16
pusha
repz
push
push
jns
ds
or
imull
aaa
or
dec
out
imul
add
mov
or
pop
sbb
adc
mov
xor
jo
and
mov
jmp
pop
addr16
push
scas
xlat
mov
adc
movb
and
cmp
inc
jb
addr16
loope
popa
adc
jo
or
and
js
outsl
outsl
test
dec
sbbl
add
mov
in
pop
xchg
add
sub
test
pop
cmp
jecxz
add
adc
push
adc
push
cmp
mov
or
push
stos
shlb
jns
aad
inc
xor
inc
pusha
push
push
xchg
rcl
popa
jb
stos
cmp
adc
mov
syscall
loopne
sub
inc
push
bound
cmp
xor
mov
and
shll
jae
adc
popf
xor
aam
pop
mov
inc
or
add
sub
adc
push
and
pop
push
pop
xor
es
inc
orb
js
add
testb
ret
pop
and
mov
xchg
sahf
test
push
in
add
aaa
xor
aaa
mov
jbe
in
push
loop
je
pop
cs
push
outsb
inc
aaa
jno
cwtl
mov
adc
daa
aas
pop
inc
mov
push
add
add
mov
add
fs
push
mov
add
pop
add
inc
xor
es
jp
pop
nop
xchg
or
or
repnz
std
clc
or
pop
mov
nop
sar
or
and
and
xchg
cld
adc
je
jb
xchg
xchg
add
inc
dec
push
and
mov
push
cs
cmpsb
dec
shrd
popa
incl
lea
out
lret
mov
iret
jmp
jmp
jmp
repnz
in
push
pusha
ljmp
mov
idivb
lret
cli
push
cld
push
pop
xor
out
imul
in
pop
in
es
add
dec
loopne
add
or
or
mov
daa
aam
cmp
add
mov
test
and
testl
imul
in
mov
prefetch
pop
xor
sahf
and
js
test
mov
stos
and
push
mov
subb
adc
mov
push
loop
and
test
push
add
pop
add
clc
xor
dec
lea
and
ds
cs
lods
add
jb,pn
rcrl
mulb
inc
outsl
and
inc
cmp
mov
xor
dec
rcr
fs
rcrb
in
add
lahf
testl
push
dec
andb
sahf
sbbb
inc
mov
orb
cmpsb
icebp
addb
push
jecxz
and
clc
pop
das
and
sub
lea
fldt
outsl
fsubr
dec
or
or
dec
jne
mov
inc
mov
inc
lret
addr16
cmp
mov
fdivrs
jbe
mov
xor
pop
xchg
ljmp
dec
add
inc
xor
sbb
ja
jne
jmp
mov
lahf
xchg
cmpsb
cmc
and
mov
or
call
xchg
mov
sbb
and
adc
mov
mov
imul
mov
sti
xor
hlt
jl
imul
test
enter
xchg
mov
push
push
pop
cwtl
xor
jnp
jnp
push
lock
jp
popa
jecxz
sub
fimull
mov
aad
rcll
fidivl
movzbl
or
rcll
fidivrl
and
les
pop
mov
mov
fisubrl
cmp
jbe
mov
adcl
pop
outsl
add
push
pusha
cld
inc
nop
adc
shlb
nop
aad
push
mov
inc
inc
outsb
pop
and
subb
and
xor
movsl
mov
loopne
call
mov
xor
add
outsb
jmp
ds
sarb
insb
call
sbb
add
xor
popf
divl
imul
add
adc
push
xor
subl
outsb
push
rolb
dec
sub
or
and
jne
jbe
add
push
insb
push
adc
adc
mov
xchg
roll
addr16
xchg
add
jl
ss
ret
mov
rol
cmp
sbb
leave
fs
pop
das
or
adc
push
push
sub
pop
xchg
ret
push
or
into
ja
dec
in
push
leave
push
out
enter
pop
mov
nop
je
pop
add
pop
cmpsb
hlt
out
or
push
push
ret
pop
push
popf
sahf
nop
xchg
sub
push
push
jl
je
sahf
jp
jo
shlb
push
ret
es
mov
or
dec
sub
nop
sbb
bound
movsb
sahf
lea
fisubrl
and
sbb
push
ljmp
rcr
arpl
test
push
mov
pop
sub
es
push
aam
div
pop
hlt
je
inc
test
movb
dec
adc
inc
fdiv
mov
jb
push
mov
aam
lea
outsb
out
or
lds
sbb
xor
push
add
xor
loopne
inc
mov
mov
in
mov
je
or
in
imul
and
or
pop
cmp
mov
pop
inc
cmp
ret
rclb
push
xlat
hlt
or
mov
ljmp
cmpsl
sbb
incl
mov
and
dec
jge
inc
call
imul
push
aas
adc
push
nop
xchg
ret
xchg
popf
cmp
cmp
push
dec
and
repz
or
ljmp
imul
pop
je
call
fneni(8087
inc
push
push
insb
fdiv
sub
add
inc
sub
mov
lahf
push
mov
mov
sub
sbb
fcoml
pop
mov
add
or
insb
dec
push
add
jl
pop
mov
fcompl
jnp
int
lcall
push
sbb
jp
lods
xchg
test
lea
push
mov
jp
es
add
call
dec
pop
jno
loop
mull
push
gs
xchg
sbb
test
ja
lock
and
mov
rolb
mov
and
call
xor
push
jnp
int
pop
dec
push
xor
addr16
xor
jle
push
ret
mov
movsb
add
and
add
in
add
and
cmp
stos
pop
xchg
mov
insb
and
xchg
fsubrl
jecxz
outsl
fcmovb
sub
lret
adc
xor
inc
xlat
sub
enter
test
and
or
mov
dec
call
movsl
repnz
or
call
test
dec
xchg
lea
xor
mov
dec
xor
cmp
scas
push
cld
nop
mov
add
dec
jecxz
sbb
jmp
les
sarb
inc
lock
add
mov
pop
xchg
aad
add
dec
adc
pusha
orb
shrb
jge
mov
bound
out
lods
or
ja
pop
mov
or
loopne
xchg
xchg
cmc
push
lahf
sti
push
sbb
dec
call
js
in
dec
push
jnp
nop
inc
mov
xor
add
add
cmovle
mov
cs
dec
cmp
adc
in
sbb
mov
mov
shr
xchg
sub
lock
rcr
xchg
push
pop
jp
pop
inc
push
xor
clc
sbb
mov
or
sbb
inc
sub
sbb
mov
push
push
jecxz
inc
movzbl
push
push
add
rdrand
mov
outsl
mov
fsubs
adc
xchg
sbb
ficompl
aas
les
fldcw
rorb
pop
lds
mov
sbb
pop
lahf
mov
movsl
xchg
or
pop
gs
pop
jbe
adc
call
jbe
bound
or
dec
mov
push
hlt
push
add
inc
sub
lret
push
adc
pop
loop
xchg
and
les
jne
push
jecxz
cmpsl
sbbl
sbb
lret
push
pop
insb
sbb
xor
test
mov
xchg
ja
sti
jno
xor
ds
pop
ret
jnp
sbb
push
sbb
sbb
sbb
pusha
loop
fdivr
rolb
inc
jecxz
and
cltd
movsl
insl
lahf
xor
push
push
push
dec
fmul
sbb
push
lock
sbb
jo
lcall
rclb
int3
call
orl
jge
cmp
mov
cmp
insl
jmp
ja
fdivs
cmp
data16
pushf
xchg
adc
or
popf
or
rcr
push
jb
call
or
xchg
xor
test
in
testl
addr16
xchg
loope
cmp
test
jne
add
out
lea
jno
fcmovnb
adc
inc
jbe
and
add
and
mov
dec
call
mov
add
sub
daa
rclb
shrl
fildl
or
shll
xchg
add
out
mov
repnz
jle
rolb
call
jb
hlt
fdivrp
xor
fdivr
rcl
into
mov
ret
push
inc
sbb
xor
jecxz
ss
decb
fsubl
stos
pop
mov
push
xchg
jl
or
ds
sbb
pop
hlt
cltd
loopne
or
mov
pop
mov
mov
mov
mov
mov
add
mov
pop
aas
jl
les
adc
pop
mov
pop
mov
lea
sub
icebp
add
mov
rep
dec
or
mov
and
pushf
rep
push
fs
and
pop
jmp
shll
jle
rcll
mov
mov
cmp
jne
mov
adc
add
sub
sub
mov
pop
cmpsl
outsl
mov
lds
mov
femms
inc
or
cmpl
shlb
sub
js
sbb
rolb
or
addb
xor
add
push
push
das
outsl
push
jb
je
ljmp
ljmp
pop
pop
stos
je
nop
add
fsubs
adc
cltd
out
addr16
fistl
sbb
je
mov
cmp
scas
sbb
or
fstpt
sub
scas
pop
insb
or
mov
lret
stos
push
xor
push
sub
xchg
add
ss
shrl
imul
into
xor
fiaddl
mov
xchg
mov
push
pop
subl
cmpsl
cmp
scas
rcll
jb
stos
aas
js
mov
ss
sub
adc
or
mov
mov
add
push
or
add
mov
dec
adc
rol
adc
add
sbb
xchg
sbb
adc
cmp
lock
jle
sbb
adc
cmc
jbe
pop
dec
pushl
push
pop
add
andl
push
mov
in
push
add
outsl
imul
pop
adc
cmp
inc
scas
adc
ficomps
and
xor
loopne
or
cli
call
jne
push
or
nop
dec
in
lret
or
cmp
add
mov
or
jno
inc
xchg
push
insb
cmp
hlt
call
sub
mov
into
or
lods
inc
rcr
in
ss
adc
mov
pop
mov
loopne
aas
stos
repnz
sbb
popf
sbb
mov
mov
aas
push
mov
mov
in
lret
xchg
and
in
in
push
sbb
ret
push
mov
mov
jge
and
ret
sbb
mov
aad
cmp
sub
adc
pop
bound
rcrb
mov
in
aas
push
fists
push
xchg
sub
out
adc
mov
mov
sbb
jne
lods
lods
push
movb
cmp
faddp
jo
and
push
or
ds
out
pop
sub
mov
xchg
dec
int3
mov
xor
xchg
cmpsb
adc
jmp
inc
leave
push
mov
sbb
je
test
inc
enter
inc
or
fcoms
push
mov
or
cmp
les
ret
pushf
lcall
aad
mov
lods
dec
xlat
push
push
mov
jecxz
repz
mov
mov
cmp
lea
add
push
push
call
xchg
cmp
push
add
in
dec
ror
cmpsb
xchg
adc
or
and
sbb
adc
inc
and
rclb
and
jne
jl
push
xor
les
cld
and
add
add
cmpb
pop
in
push
adc
js
adc
jne
and
imul
mov
add
mov
sahf
icebp
or
pusha
ljmp
push
add
add
out
enter
cmp
cmp
and
inc
dec
mov
mov
inc
addr16
jbe
clc
mov
into
mov
ss
inc
and
pop
cmp
lret
inc
dec
pop
fstpl
je
or
or
je
mov
dec
test
jmp
adc
or
loopne
outsb
adc
inc
test
cld
inc
test
and
lret
jmp
push
adc
or
mov
lods
cmc
inc
lods
pop
loopne
mov
adc
lods
xchg
xor
sbb
mov
aaa
inc
out
push
cld
lcall
mov
popf
rorl
add
test
out
mov
mov
push
mov
sbb
add
sub
mov
xor
push
adc
test
mov
mov
push
add
xchg
inc
test
icebp
mov
fnstsw
fistpll
cmp
push
mov
adc
push
mov
insl
jge
mov
inc
shlb
rolb
hlt
repnz
adc
push
push
testb
std
add
ljmp
add
out
push
out
pushw
or
jnp
mov
inc
out
ss
stos
std
pop
bswap
jo
dec
push
xor
and
loopne
fdivr
add
inc
sbb
inc
rol
mov
ror
cmp
call
sub
lea
or
mov
movsb
repnz
push
add
mov
inc
adc
xchg
setb
adc
pop
push
in
cld
sub
mov
pop
dec
adc
std
adc
push
ds
xor
push
lahf
cmp
scas
or
loope
mov
jne
rcl
cmp
bound
add
mov
cmovge
cmp
mov
inc
and
and
rolb
xor
imul
out
xchg
mov
sbb
out
add
subl
push
aaa
shlb
pop
add
int
mov
mov
sub
orb
jmp
dec
cmp
push
xor
daa
loopne
push
mov
jae
add
lods
xchg
inc
mov
or
sbb
add
inc
push
push
jge
cwtl
cmpsb
xor
pop
hlt
pop
mov
adc
pop
cmp
inc
xlat
out
push
and
push
adc
push
insl
push
mov
xor
outsl
or
cwtl
inc
jecxz
push
mov
imul
push
push
call
pop
loope
lcall
cmc
in
jbe
dec
xlat
mov
lea
decb
sbb
xchg
popf
push
xchg
sbb
xchg
jge
mov
mov
mov
out
daa
push
or
enter
or
lret
jne
xor
fucomip
std
jmp
and
xor
and
int
add
in
int
mov
sub
js
xor
xchg
mov
and
xorl
xor
jp
jl
pop
add
pushf
adc
inc
sahf
push
inc
cmp
fs
ret
and
sub
es
sub
or
mov
push
or
in
test
dec
xor
adc
pop
lret
xchg
pop
push
jl
pop
push
or
sbb
jae
leave
sbb
adc
jne
mov
jmp
imul
or
mov
inc
sbb
or
pusha
cwtl
mov
inc
dec
adc
lods
lahf
dec
addb
fsubr
test
push
sarb
sbb
push
adcl
mov
push
sbb
inc
sbb
xor
ja
test
or
push
cmp
pop
loope
xchg
ljmp
sbb
push
call
add
out
mov
sub
ss
mov
outsb
add
call
nop
jbe
inc
cmpsb
aam
dec
je
sub
aam
inc
mov
xor
mov
add
push
mov
lea
bound
push
out
stos
push
filds
pop
in
out
call
cmp
jbe
and
xchg
jne
xchg
inc
push
add
mov
fdivrs
std
pop
lods
and
inc
jbe
mov
fsubl
pop
mov
inc
push
in
scas
loope
dec
xchg
mov
pushf
cli
adc
jecxz
fadd
and
xor
pushf
loop
addl
shr
je
adc
cld
imul
pop
xor
fwait
add
imul
xchg
scas
jb
clc
cld
fmuls
or
mov
or
paddb
adc
fimuls
aaa
push
mov
cmp
mov
adc
adc
sbb
xchg
loopne
ficoms
in
mov
into
pop
gs
cmp
lds
lods
sbb
mov
fildl
push
inc
adc
or
lods
les
sti
push
sbb
enter
and
test
mov
aad
addb
xor
xor
test
xor
lock
test
js
pop
push
jl
adcb
insb
and
pop
and
mov
push
adc
jno
xchg
aam
xor
jecxz
test
int
push
cs
push
push
cmpsb
aam
in
loop
dec
mov
inc
cmp
cwtl
sbb
clc
popa
fsubrl
call
xchg
or
je
jmp
mov
push
dec
sbb
push
add
pop
scas
mov
je
jae
js
push
push
movsb
mov
and
lahf
lods
inc
dec
add
add
dec
or
push
repnz
or
cmp
loopne
jg
mov
sbb
mov
mov
insl
rcll
popf
imul
mulb
mov
jmp
xchg
sbb
add
std
xchg
mov
mov
push
sub
frstor
sarb
push
lock
dec
push
hlt
insb
pop
mov
fsubrs
adc
mov
inc
aas
iret
mov
jne
clc
and
cmp
push
sbb
push
add
test
movsb
mov
or
jmp
sub
and
aam
pop
and
add
sub
jbe
lock
or
cmpps
cmpsb
and
pop
mov
push
pop
mov
out
sbb
ja
xorl
push
push
imul
and
outsb
arpl
addr16
sbb
sbb
sbb
idivl
into
cmp
daa
add
ss
cmp
jne
xlat
pop
mov
push
pop
and
or
je
sbb
rol
int3
jecxz
decb
adc
aaa
lock
sub
jmp
nop
xor
dec
sahf
jae
icebp
pop
inc
or
cmp
lds
lds
add
mov
xchg
cmp
cld
push
mov
mov
adc
push
js
xchg
mov
int
jmp
repnz
sbb
call
ljmp
ret
cs
adc
push
stos
push
negb
sahf
mov
push
dec
xor
fnstcw
dec
pusha
mov
jmp
pop
xorb
jmp
mov
inc
or
mov
xor
push
pusha
movl
push
jno
sbb
fadds
inc
ret
fldl
out
out
std
jmp
xchg
jne
add
push
call
jb
sbb
in
movsb
jmp
js
sbb
aad
test
or
aad
mov
sbbl
push
xor
call
int3
jbe
clc
xor
adc
mov
add
mov
addl
bound
push
cld
outsb
je
push
stc
sub
pusha
push
aad
sbb
std
push
add
or
add
lahf
xor
jo
or
fisttps
cwtl
or
popf
pushf
or
cmp
add
call
and
rolb
push
fs
inc
mov
mov
lock
loopne
repnz
cmp
jg
push
or
mov
je
or
mov
pop
mov
orb
sbb
mov
xor
mov
icebp
mov
insb
adc
and
nop
push
push
scas
clc
dec
or
mov
cmp
fadds
dec
jne
movzbl
add
push
push
adc
xor
movsb
nop
lret
cmp
mov
mov
inc
fmull
pusha
test
sbb
lea
out
or
add
rorl
xchg
rolb
gs
lock
in
jmp
fistpl
add
cli
mov
push
cli
sub
pushf
jecxz
test
xor
or
and
ja
mov
mov
lea
inc
xor
and
mov
inc
pop
rorb
xchg
push
mov
lret
shlb
xor
sbb
sbb
in
add
dec
sbb
mov
daa
sahf
sbb
inc
movsb
jb
xchg
pop
push
lock
fstl
popa
es
xchg
add
jp
outsb
sbb
movb
push
dec
test
test
stos
inc
je
jmp
stos
icebp
clc
cmp
mov
push
jmp
pop
aas
dec
dec
mov
xor
inc
test
enter
add
aad
pop
adc
mov
lock
adc
xor
xchg
jae
sarb
jmp
mov
adc
mov
add
adc
adc
and
lods
out
add
inc
push
addb
jno
and
or
and
add
adc
adc
xor
pop
roll
nop
jno
test
inc
ljmp
adcb
sub
hlt
cmpsb
adc
add
pop
add
adc
dec
movsl
roll
adc
daa
and
addb
test
fbld
xor
sbb
test
adc
sar
pop
pop
popa
sub
push
nop
dec
sbb
and
clc
mov
mov
xchg
cli
or
or
jp
jle
addr16
ljmp
aas
pop
call
jg
jmp
call
mov
imull
and
cwtl
inc
push
jns
insl
adc
lahf
cmp
call
sub
xlat
mov
pop
dec
fists
xchg
mov
movsb
dec
pop
leave
loope
cmp
das
jle
decl
inc
out
mov
call
call
enter
aad
out
clc
scas
pop
jmp
out
dec
jp
xchg
jno
std
xchg
pushl
cmp
jmp
sub
push
lahf
lret
sbb
pushf
test
mov
mov
adc
add
push
xchg
iret
gs
addr16
mov
je
push
into
cmp
test
fimull
jmp
sub
subb
ltr
and
ss
cmp
jne
sbb
add
sbb
idivl
xchg
repnz
insb
or
adc
iret
dec
xor
push
mov
mov
inc
xrelease
pop
negl
and
inc
loop
jne
shlb
sub
popf
notb
adc
push
es
outsb
cwtl
and
add
loopne
cmpsb
cld
aad
es
into
idiv
mov
decl
pusha
mov
imul
push
es
les
or
movb
jno
shrb
dec
push
dec
cld
add
inc
push
or
in
xor
loope
ficomps
cltd
adc
loope
jo
fwait
xchg
push
mov
sub
xchg
js
sbb
xchg
add
js
xor
cmp
cs
sbb
imull
push
xor
xchg
cmpsb
sbb
dec
sbb
je
enter
rorb
jbe
push
sbb
xchg
popl
outsl
pop
aaa
scas
bound
inc
and
test
cltd
push
movsl
adc
popa
inc
pop
add
dec
enter
in
inc
and
lret
xor
test
adc
xchg
pop
rcrb
loope
popa
inc
add
rcll
adc
pop
int3
cmpsb
fildl
aaa
and
les
pop
jb
ret
das
xor
or
xor
xchg
and
sub
je
es
ss
add
adc
dec
sub
in
adc
mov
lret
addr16
test
lods
lret
call
loope
jmp
adcl
cmpsl
or
push
inc
dec
fldlg2
aad
cmpsl
fs
cs
pusha
cmp
jge
nop
push
in
nop
je
mov
add
mov
cmpsl
dec
fisttpl
jns
out
inc
or
push
sub
sbb
add
sbb
sbb
jmp
repz
je
or
mov
dec
inc
aaa
aaa
cmpsl
pushf
adc
mov
inc
daa
pop
nop
add
mov
push
dec
cmpsl
or
leave
add
jb
push
cmpsl
out
mov
or
push
mov
out
sahf
mov
sbb
add
cmp
inc
cld
or
push
adc
sbb
add
int3
add
fwait
shlb
pop
xor
lahf
pop
push
andb
nop
adcb
jge
pop
dec
jmp
dec
mov
add
enter
cltd
adc
dec
cmpb
pop
jmp
cmp
je
lret
xchg
mov
add
sub
or
lahf
ret
frstor
add
call
sbb
add
pop
add
scas
in
in
add
add
cmpsb
mov
paddusw
jo,pt
cmp
je
xchg
add
and
add
add
xchg
sub
sbb
mov
or
xchg
or
or
cld
add
or
push
mov
sahf
or
add
or
xchg
or
jb
jb
or
xchg
cmp
push
push
push
mov
rdmsr
adc
push
movsl
adc
pop
adc
adc
cmp
mov
int
push
adc
jns
stos
add
ror
mov
adc
leave
adc
cmp
push
inc
pop
pop
jns
out
and
sbb
xchg
sbb
jns
sub
mov
jns
scas
fcompl
sbb
nop
adcl
add
rep
sub
je
push
sbb
in
lds
ja
sbb
cmpsb
pop
push
push
inc
incb
enter
pop
jne
add
add
sub
mov
shlb
testb
movl
xchg
jp
cld
jmp
cwtl
xchg
push
in
xchg
mov
repz
in
imul
rcl
ret
test
xor
xor
out
mov
out
sub
fmulp
dec
call
adcb
or
loop
jmp
jmp
xchg
jmp
push
inc
scas
push
jmp
jmp
mov
or
cs
ss
in
in
xchg
aad
in
cmp
push
repnz
mov
out
enter
xchg
out
or
push
imul
lock
fmulp
aad
dec
icebp
cmp
pop
add
repnz
mov
repz
std
mov
dec
dec
hlt
hlt
imul
fidivl
std
cmc
cmc
cmp
sbb
testb
sbb
gs
clc
in
sbb
mov
and
jns
scas
in
add
sti
in
repnz
cld
cld
cld
je
fdivrp
or
nop
shlb
mov
xor
xchg
cmp
dec
sbb
jmp
add
sbb
shll
jmp
repnz
popf
insl
enter
pop
jmp
sbb
jecxz
jecxz
xchg
push
repnz
xor
push
xlat
aad
and
or
stos
mov
aam
push
xor
or
out
xchg
repnz
call
push
mov
cltd
and
orb
mov
in
cltd
sub
nop
mov
rclb
or
stos
xchg
stos
or
cltd
xchg
pop
leave
or
lret
add
or
jb
inc
repz
sbb
leave
add
xchg
push
cli
stc
frstpm(287
add
xchg
stc
imul
mov
in
aad
xchg
clc
cltd
jb
andb
push
stc
sbb
xor
sti
sti
sti
xchg
scas
in
pop
or
cmp
jmp
xchg
stos
pop
sub
pop
add
test
dec
or
pop
mov
xabort
xor
stos
mov
loop
stos
xchg
stos
or
loope
pop
leave
or
clc
shl
add
dec
add
or
dec
out
xchg
fdiv
out
and
test
mov
adc
or
push
xor
ljmp
jmp
idivl
inc
mov
pop
testl
xchg
in
aad
into
mul
scas
testb
or
insl
repnz
mov
repz
notb
jns
or
mov
out
div
notb
xchg
mov
sahf
fldenv
repnz
stc
jmp
adc
xchg
leave
or
sbb
add
xchg
pop
cli
hlt
or
xlat
inc
lock
popf
out
test
push
jo
adc
stos
mov
xlat
ss
loope
push
jnp
loope
jp
setb
pop
cvtdq2ps
cmp
lret
and
pop
pop
lcall
mov
repz
push
mov
or
xchg
repz
and
insb
repz
repz
andb
mov
xchg
or
in
mov
in
repnz
andb
xchg
cmpsb
movl
push
pop
adc
and
repnz
repnz
cmpsb
jb
sbb
and
icebp
pop
dec
adc
push
cwtl
icebp
cs
add
or
arpl
mov
sbb
adc
scas
adc
or
inc
jb
mov
test
and
imul
aaa
lret
mov
push
push
sub
ffreep
xchg
stos
test
push
inc
insb
loope
xor
scas
inc
cmp
cmp
pop
leave
add
testl
or
mov
xor
and
in
add
movsb
xchg
dec
add
jmp
pop
inc
mov
and
icebp
push
add
int3
dec
push
nop
push
dec
imul
jns
adc
aaa
or
imul
dec
adcl
jp
sub
push
jecxz
repz
repz
mov
xlat
insb
mov
sbb
push
push
aad
in
xchg
jns
repz
or
mov
push
inc
rolb
cmovne
pop
cmpsl
cld
dec
mov
inc
dec
imul
sbb
lea
inc
cmp
and
push
adc
lret
test
mov
fldl
xlat
inc
or
mov
adc
leave
jle
jmp
push
mov
mov
adc
dec
dec
cmp
sub
xchg
or
mov
push
push
xor
in
ficoms
cmp
xor
xchg
add
sbb
push
mov
jbe
xlat
pop
adc
sbb
pusha
mov
add
sbb
and
push
sbb
add
imul
xor
in
jmp
adc
pop
add
je
xchg
xchg
push
push
stc
and
es
and
mov
cmpsb
mov
pop
insl
adc
arpl
adc
dec
mov
insb
mov
adc
mov
sub
popa
movsl
mov
cmp
popf
adc
sub
mov
das
mov
xor
stos
adc
sub
ret
and
adc
jmp
aas
cmp
jmp
sub
jmp
push
sbb
inc
in
cmp
jmp
add
add
inc
add
push
lret
xchg
push
loop
dec
loop
adc
and
cmp
outsb
xchg
pop
xchg
pop
jo
movsb
xor
cmpsl
js
shll
and
or
jne
dec
xor
inc
adc
adc
inc
dec
dec
loope
jno
mov
jno
sbb
and
pop
jno
adc
adc
add
inc
das
loop
inc
pusha
push
add
mov
or
pop
xorb
inc
xor
pop
rolb
pusha
subb
in
sbb
jno
jno
pusha
inc
add
dec
je
cltd
xchg
orl
lods
clc
add
mov
movsl
or
jno
or
cmp
jecxz
fs
mov
iret
adc
mov
inc
sub
pop
inc
inc
mov
xlat
loop
fs
adc
les
pop
test
inc
jb
pop
aas
xchg
or
mov
mov
and
and
sbb
andb
xchg
push
movsb
roll
pop
in
adc
cltd
and
int
call
add
mov
jmp
imul
fwait
push
pop
adc
and
and
inc
xor
out
outsb
sbb
ss
sbb
mov
push
inc
sub
outsb
or
adc
adc
out
pusha
mov
aam
or
test
jl
outsb
sbb
pushf
pop
and
nop
cmpsb
or
or
daa
test
xor
daa
daa
daa
sub
sbb
and
push
and
inc
test
and
xor
es
mov
push
pop
dec
push
dec
add
sub
inc
sub
adc
or
inc
mov
sub
pop
inc
ds
sbb
pop
cmp
je
inc
pop
cmc
add
aam
lahf
xchg
push
mov
pop
adc
rcrb
movsb
mov
inc
cwtl
add
adc
push
xor
pop
xorb
sub
movl
lods
sub
sub
add
adc
lds
cmp
pop
or
pop
or
pop
andb
push
mov
test
mov
mov
dec
mov
and
outsb
inc
xor
pop
test
popf
add
or
or
or
mov
jecxz
sub
mov
mov
inc
scas
mov
fcom
inc
mov
test
xchg
sbb
xchg
adc
lock
mov
movsl
adcb
jb
movsl
adc
mov
inc
inc
jb
adc
data16
data16
loope
rcrb
dec
adc
adc
dec
pop
orb
or
out
cmp
cmp
sbb
add
xchg
int
dec
je
sub
shlb
pop
dec
xchg
stc
add
xor
shl
stc
xchg
and
xor
xchg
nop
out
inc
adc
cmp
cwtl
or
sbb
sbb
dec
xchg
int3
stc
add
dec
jmp
lds
push
daa
dec
mov
sbb
inc
stc
xor
and
movsb
scas
jb
mov
inc
dec
pop
sbb
push
jae
dec
mov
and
movsb
mov
and
xor
or
mov
and
andb
mov
and
add
mov
loope
xchg
or
subl
sbb
cmp
push
or
sbb
loopne
dec
add
or
sbb
and
fcom
dec
or
push
pusha
inc
or
inc
pusha
inc
aaa
mov
or
jmp
cmp
add
cltd
loopne
mov
mov
xchg
dec
scas
sbb
lahf
call
jmp
or
or
cmp
or
lods
push
popl
decb
jl
getsec
mov
xlat
mov
mov
mov
add
cmp
shr
je
or
pop
std
je
aam
sbb
pop
add
adc
inc
nop
or
xchg
mov
pop
add
jb
or
or
pusha
inc
subl
fs
add
mov
xchg
rclb
xor
or
jae
sub
inc
pusha
inc
jbe
leave
loopne
inc
out
pop
test
mov
shrb
sbb
mov
mov
mov
imul
or
nop
xchg
cmpsb
add
or
and
or
insb
call
orl
ljmp
sarl
add
or
or
hlt
lcall
sbb
stos
aaa
push
pusha
inc
or
or
sbb
mov
add
orl
push
cmp
sub
push
or
mov
or
dec
je
orl
mov
xor
or
sbb
mov
cmp
adc
jno
sbb
add
or
sbb
pop
movsl
test
or
push
ds
mov
or
rcrb
and
shrb
sub
push
insb
enter
pusha
and
in
or
push
call
mov
inc
or
insb
or
or
subl
cmp
aam
or
orl
mov
dec
cmp
or
inc
sbb
mov
das
sbb
add
cld
sub
or
and
or
and
adc
and
mov
dec
cmp
aam
insb
call
ss
nop
mov
adc
dec
or
inc
aaa
imul
add
je
or
fcoms
out
ret
call
add
sbb
jae
or
out
push
loopne
test
orl
insb
or
or
bound
add
ss
lcall
pop
orl
popf
jbe
dec
xor
or
call
add
mov
insb
or
pusha
inc
lret
jo
inc
imul
mov
pop
imul
or
ror
out
je
cs
xchg
adc
add
sti
lret
dec
movsl
cmc
inc
jb
mov
xchg
and
sub
shl
stos
cmp
pop
jo
xchg
and
sbb
pop
in
or
or
ret
imul
rol
jmp
jp
out
dec
push
add
push
orl
push
pop
lods
fisubl
test
or
js
dec
and
call
ss
rorb
inc
pusha
inc
aaa
jg
or
xor
sub
dec
jae
sbb
xor
enter
cmp
inc
enter
push
pop
dec
xchg
into
loop
dec
pop
cmp
sbb
pop
lcall
call
adc
sbb
or
popa
jo
jo
mov
lods
cli
cmp
cmp
daa
adc
xchg
push
pop
pusha
or
jno
pop
out
and
call
leave
ja
or
jge
aaa
imul
xor
insb
les
xchg
icebp
rcrl
repnz
pop
imul
popa
push
pushf
xchg
mov
movsb
and
xlat
or
inc
out
push
mov
adc
fsub
dec
pop
ret
outsb
bsf
push
in
mov
push
cmp
adc
jbe
lods
add
jb
ret
mov
sbb
in
iret
pusha
orl
test
sub
ja
mov
or
push
pusha
in
add
jl
sbb
fs
dec
inc
pop
and
scas
add
xchg
push
mov
in
push
xchg
rolb
jb
jnp
add
test
xlat
jae
mov
or
push
ss
pop
add
sub
or
sub
ds
and
add
or
fldcw
lcall
pop
stc
adc
or
jns
sbb
push
sub
rorb
orb
sbb
add
js
jmp
push
mov
shlb
cmp
cmpsl
popf
push
sbb
push
or
mov
aaa
mov
sbb
faddl
push
jae
pop
ljmp
cwtl
stos
mov
cmp
inc
dec
push
xchg
push
leave
ret
dec
sbb
out
nop
xchg
xchg
or
call
pop
dec
rolb
rolb
pop
cmp
in
jl
sub
inc
mov
sbb
test
add
imul
movsb
imul
das
test
sub
hlt
scas
or
leave
xchg
test
or
and
fwait
roll
sbb
push
pop
jl
mov
out
or
rcl
add
and
xor
xorb
add
adc
xor
cli
testb
pop
sbb
xor
popa
dec
or
sub
add
push
inc
fsubr
and
call
rclb
mov
pop
call
jge
jbe
fimuls
call
jmp
and
inc
sar
insb
inc
mov
rcrb
mov
cwtl
and
in
ds
shll
sbb
cwtl
mov
inc
xchg
ret
divb
inc
xchg
fwait
mov
mov
imul
and
push
mov
popa
andb
out
fildl
dec
mov
mov
sbb
or
and
es
mov
and
sub
mov
sbb
push
add
mov
popf
filds
xor
loopne
adc
sbb
mov
loope
add
push
mov
imul
mov
cs
call
jmp
xchg
mov
pop
dec
call
imul
xchg
rolb
js
mov
jno
xchg
xchg
dec
enter
andb
xor
mov
jo,pn
cmc
inc
pusha
mov
jb
mov
test
adc
fisttpll
inc
or
call
loop
cmc
stos
outsb
adc
cmc
out
fwait
test
adc
inc
cmc
nop
lods
outsb
adc
fs
adc
or
jmp
fisttpll
mov
inc
ja
cmpsb
cmc
loopne
and
sbb
xor
inc
das
push
test
push
mov
jp
ss
mov
mov
and
push
or
call
push
je
adc
add
dec
loop
rcl
push
add
fwait
stc
dec
daa
movsb
add
incl
push
scas
dec
out
jl
je
add
sbb
jle
rclb
cmp
je
cmp
shl
test
inc
push
addr16
daa
ljmp
test
in
fld
jmp
sbb
adcl
pusha
or
or
scas
fwait
xchg
mov
lret
fidivrl
push
cmp
xor
inc
jp
inc
sub
repz
lock
call
adc
push
stos
pusha
arpl
mov
adc
xchg
adc
out
push
add
push
test
ljmp
cmpsl
rolb
push
add
and
sbb
mov
nop
inc
and
cmp
pop
or
mov
mov
mov
xor
push
inc
call
jecxz
inc
pop
inc
rcl
mov
ss
call
add
fsubl
add
test
fwait
rorl
push
movb
cmp
std
insl
imul
insb
cmp
add
cmp
inc
jmp
dec
jmp
push
pop
sbb
xor
push
inc
inc
dec
adc
adc
mov
jmp
inc
inc
inc
pop
je
pop
es
ret
mov
mov
mov
add
shll
xchg
jmp
fs
stc
add
mov
adcl
xchg
xorb
add
dec
push
int
je
cmp
clc
xor
and
cmp
leave
or
sarl
sbb
jae
fsubrp
inc
jmp
add
lret
cli
enter
push
popf
pop
pop
push
or
std
adc
loope
or
sbb
add
sbb
mov
add
add
loop
pusha
popa
roll
and
int3
xchg
push
fiaddl
lock
rol
ds
mov
sbb
mov
addl
inc
inc
shl
dec
sbb
jb
cmp
repz
fisubrs
jge
sti
add
push
push
or
inc
jecxz
sbb
es
fs
fadds
cmp
sub
mov
xor
adc
add
mov
sub
push
sar
inc
push
adc
dec
fidivrl
adc
xchg
ss
push
xor
or
fcoml
fcomip
inc
fimull
out
cmp
pop
dec
cmp
adc
mov
and
sbb
xchg
movsb
fwait
and
sbb
dec
sbb
rcrl
out
sbb
ret
loopne
sbb
pop
inc
scas
or
sbb
add
pop
pop
or
in
popa
add
inc
dec
push
movsb
icebp
xchg
mov
jo
add
sahf
in
popa
mov
je
mov
outsl
out
dec
push
push
outsl
jp
lock
jnp
movups
adc
loopne
mov
sbb
outsb
lret
cmp
jmp
fs
xchg
les
xor
mov
les
mov
movsb
cmc
adc
push
ds
jp
pusha
xchg
aad
mov
add
adc
stos
loopne
push
push
and
sub
fadd
add
adc
les
mov
sbb
adc
cmp
add
adc
add
lea
or
in
leave
daa
ja
add
inc
xchg
adc
xor
xchg
push
out
jmp
add
mov
dec
cmpsb
mov
jbe
pop
sbb
pop
repnz
pop
add
push
cmp
fwait
dec
mov
aaa
xchg
sub
inc
adc
loopne
mov
dec
ja
pushf
jmp
push
call
or
jns
pop
push
mov
rorb
lahf
lcall
xorb
adc
fmuls
lahf
dec
pop
and
inc
pop
je
rcrb
rolb
cli
mov
dec
pusha
sahf
adc
inc
inc
inc
inc
ljmp
inc
lret
add
adc
in
aad
adc
popf
addl
sti
and
xor
adc
mov
jmp
nop
pop
inc
and
or
or
jns
push
inc
add
adc
adc
xchg
dec
or
or
nop
les
mov
cwtl
or
fbstp
movsb
sti
in
dec
fbld
ljmp
add
inc
add
inc
xchg
adc
inc
sbb
adc
shl
or
xchg
sbb
mov
adc
adc
and
movsb
adc
sbb
sbb
sub
movsb
adc
add
lods
xor
inc
test
add
pop
adc
mov
dec
xchg
xor
dec
test
add
inc
add
push
jne
inc
inc
xchg
sbb
insl
sub
add
adc
xor
fs
push
mov
push
pushf
lcall
push
sbb
dec
mov
sbb
cmp
inc
sbb
lahf
dec
hlt
call
in
adc
jmp
adc
push
dec
call
add
adc
nop
out
inc
adc
test
inc
push
mov
adc
adc
lods
loopw
mov
out
push
adc
je
push
mov
lret
jns
mov
mov
xchg
or
cmpsl
out
pop
sbb
add
push
sbb
inc
gs
cmpsl
mov
push
cmpsl
push
es
ds
xchg
or
add
xor
pop
cmp
cmp
push
call
add
push
mov
mov
or
out
sub
pshufw
or
inc
and
xchg
jnp
mov
out
push
xor
mov
xor
aad
inc
sub
adc
ret
inc
or
mov
jno
jge
outsb
sub
popf
mov
push
xchg
jge
movsl
mov
xchg
inc
dec
adc
stos
pushf
mov
xchg
xchg
rclb
mov
push
mov
mov
jl
ss
imulb
inc
out
sbb
or
mov
roll
mov
repnz
push
call
rclb
push
or
xchg
ffree
inc
pop
or
aas
addb
pop
adc
addr16
push
xchg
decb
loopne
in
fnstsw
add
adc
and
xor
ja
mov
aam
push
aaa
xor
inc
push
aam
jnp
or
mov
jp
add
xchg
and
or
and
inc
sub
imul
add
lods
and
mov
cmpsl
mov
dec
adc
or
rsm
cmp
or
mov
dec
mov
dec
call
mov
aad
xchg
and
or
mov
outsb
dec
push
call
xchg
test
or
and
mov
cli
or
int
lods
and
inc
and
add
xchg
mov
std
out
sub
lds
nop
add
adc
adc
add
mov
xor
int
shlb
or
inc
mov
adc
dec
jecxz
into
jo
fxch
mov
test
mov
xchg
fcmovb
mov
ds
mov
xchg
nop
inc
mov
jp
mov
mov
nop
popf
hlt
mov
push
jp
mov
inc
xchg
dec
mov
test
je
mov
mov
dec
inc
dec
push
dec
enter
sbb
sub
and
and
mov
lcall
test
pop
push
mov
adcb
sub
push
mov
xor
and
and
sub
inc
das
push
and
inc
dec
inc
mov
inc
mov
aaa
inc
mov
adc
and
push
mov
test
sbb
rorl
xchg
mov
fldt
add
push
popf
sbb
imul
sbb
mov
outsb
and
imul
or
and
aam
in
dec
inc
inc
test
or
call
iret
lds
dec
mov
xor
ficomps
les
mov
in
mov
mov
jo
inc
sbb
js
xor
call
test
lret
inc
dec
inc
push
or
mov
and
add
push
xchg
fwait
xor
push
inc
ljmp
sbb
in
inc
sub
nop
dec
movsl
or
scas
lret
lret
xchg
push
fwait
sbb
mov
inc
movsl
or
lods
fwait
cmp
or
js
mov
pushf
fwait
pop
and
cmp
insb
mov
or
jns
adcb
xchg
and
gs
cmp
fwait
xchg
xor
dec
fwait
dec
sbb
pop
cwtl
cmp
sub
je
xchg
lods
gs
sbb
xor
dec
fwait
or
jge
xchg
cmp
fiaddl
push
lret
pop
fwait
cmp
inc
mov
or
call
fwait
jae
lcall
bound
inc
pop
cs
aas
jnp
rorl
push
push
push
sbb
jns
in
das
xchg
pop
dec
cmp
movsl
mov
roll
repz
leave
mov
dec
add
inc
xchg
push
shlb
dec
enter
mov
inc
dec
inc
outsl
cmc
and
ss
aad
inc
dec
inc
scas
test
test
push
outsl
jle
decl
mov
subl
bound
flds
sbb
inc
mov
or
fldl
xor
mov
jp
adc
adc
and
daa
add
cld
dec
jae
dec
adc
mov
dec
pop
cmp
rcrb
xor
push
and
sbb
or
mov
nop
pop
add
inc
push
nop
mov
and
mov
jno
add
hlt
mov
push
pop
and
pop
repnz
sbb
fcmovbe
xor
and
jl
jbe
mov
int
sub
and
pop
xor
pop
inc
inc
pop
sub
shl
or
sbbl
mov
inc
addl
adc
jnp
roll
loopne
pop
leave
inc
xchg
cld
pop
in
mov
pop
mov
lock
jmp
dec
sbb
push
test
mov
in
or
sub
xchg
inc
adc
rcrb
jnp
xchg
stos
dec
xchg
push
pop
adc
mov
daa
xchg
cmpsb
pop
gs
dec
rclb
pop
and
sub
jp
xchg
aas
xchg
xchg
sub
iret
sub
adc
test
pop
xor
xchg
add
bound
adc
push
bound
call
jo
in
outsl
nop
inc
cs
or
gs
dec
sub
push
mov
push
xchg
pop
adc
push
xchg
seto
cli
pop
xchg
aad
je
fnstenv
aaa
push
cltd
xchg
mov
pop
repz
xchg
stos
sub
dec
mov
adc
adc
mov
pop
ss
inc
adc
dec
xchg
lret
in
aam
or
inc
or
aas
xor
or
call
ss
cli
sbb
call
xchg
sub
xor
clc
lret
xor
lock
repz
call
cmp
fdivr
data16
int
inc
call
mov
dec
call
push
call
mov
call
fs
repnz
call
insb
call
cmp
jl
call
jl
push
mov
inc
adc
lret
test
test
nop
sbb
cwtl
add
push
cs
mov
jl
rclb
unpckhps
lret
test
fldl
mov
xchg
movsl
jb
cs
pop
sub
push
test
test
aam
lock
es
sbb
jb
pop
sub
add
add
mov
leave
or
leave
gs
push
frstor
adc
dec
in
mov
mov
stos
and
sub
sub
xor
mov
cmp
xchg
dec
in
pop
inc
push
inc
adcl
inc
dec
cmp
lret
je
cs
adc
sub
add
test
pusha
divl
sub
dec
cmp
or
aam
dec
xor
cmp
jo
daa
int
mov
cwtl
sahf
into
fbld
or
and
mov
mov
inc
dec
fcmove
data16
js
adc
sbb
imul
in
sbb
push
imul
and
in
mov
mov
data16
inc
test
imul
mov
cli
mov
dec
or
repnz
mov
movl
push
daa
lods
and
inc
mov
cmpsl
xchg
and
repz
xchg
je
repz
jne
lcall
pop
dec
je
push
pop
fs
mov
sub
pop
mov
mov
aam
jo
mov
je
mov
pop
push
jmp
ja
imul
add
or
je
mov
pop
xorb
dec
push
or
pop
and
sbb
sbb
scas
test
fcomp
adc
mov
lret
inc
into
mov
lds
adc
or
inc
cld
out
mov
rcrb
adc
call
imul
sbb
fsubrs
lds
adc
push
fsubrp
subb
and
pop
cmp
adc
adc
bound
push
shrb
mov
or
jne
adc
or
mov
pop
xor
mov
adc
ss
add
out
andb
inc
mov
pop
or
mov
ljmp
mov
nop
jae
or
inc
dec
mov
mov
fadds
add
adc
or
rcll
xchg
pushf
adc
xchg
add
cmpsb
lock
sbb
pop
or
mov
movsb
adc
fs
or
lds
sbb
push
ret
sub
pusha
xorl
dec
push
stos
inc
mov
cmpsl
pop
sub
outsb
push
out
push
jne
sub
fld1
lea
in
inc
cmp
ljmp
popf
mov
mov
jp
fildl
mov
cli
inc
xchg
lds
pop
lds
push
arpl
repnz
in
push
mov
mov
dec
mov
or
pop
jg
add
fwait
cmp
jg
push
cmp
mov
xchg
or
lods
pushf
and
fwait
and
sub
xchg
popf
or
je
cs
jo
push
call
inc
push
jg
xor
pusha
cmovge
dec
push
cmp
cli
ret
jg
andb
dec
lock
or
inc
push
cmp
xor
sti
sbb
add
sub
inc
push
mov
jg
xor
inc
mov
or
sub
cs
cs
push
jg
daa
xor
test
jle
push
jns
rclb
xchg
into
push
lcall
cmp
adc
pushf
inc
mov
mov
sbb
push
jg
paddsw
mov
and
test
sbb
fwait
shlb
and
lcall
dec
call
rorl
or
pop
insl
test
adc
jns
call
rolb
push
test
jno
and
jnp
and
mov
mov
or
push
pop
pop
or
js
jmp
and
jnp
push
je
das
leave
lods
and
jnp
xchg
shll
movsb
ret
add
nop
xchg
xchg
ret
add
or
fistps
inc
push
mov
ficoml
inc
xchg
mov
xchg
mov
mov
mov
pop
nop
or
push
sub
mov
or
test
or
lods
loopne
add
and
mov
add
and
mov
mov
or
mulb
andb
add
xchg
or
adc
out
xchg
lea
mov
pop
adc
jge
inc
inc
gs
test
lods
and
pop
inc
lods
mov
xor
call
inc
popf
subb
pop
scas
sbb
xor
sarb
and
dec
movsl
pushf
fildl
or
test
and
ja
sub
fstl
lret
mov
ja
cmpsb
outsb
or
ja
push
ret
cmpsb
popa
pop
mov
xchg
push
inc
cmp
nop
inc
mov
or
pop
ja
mov
idivb
push
fstl
in
ja
jmp
mov
call
ja
fildl
inc
outsb
or
ja
shll
aam
mov
or
imul
arpl
jo
ret
stc
push
cmp
frndint
add
cld
sub
negb
sub
cld
jb
cmp
sbb
int
out
rcrb
xor
cmovge
mov
subps
je
test
adc
jo
jno
dec
inc
and
test
and
and
adc
push
mov
rol
mov
and
bnd
or
sbb
fstl
or
movsb
pop
andb
jmp
mov
into
jle
call
and
jp
popf
addl
incb
dec
xchg
xcrypt-cbc
cmpsl
adc
jmp
or
cmpsl
inc
add
jo
cmpsl
dec
xor
das
xor
cmpsl
or
jno
sub
cmpsl
adc
xchg
ret
push
inc
cmp
adc
and
push
inc
pusha
shrb
mov
pop
mov
inc
pop
cmp
pop
sahf
cmp
mov
sbb
pop
fldl
in
jmp
adc
dec
mov
pop
insl
inc
dec
loop
mov
movsl
inc
pop
nop
mov
push
fs
mov
pop
shll
fldl
imul
pop
mov
mov
xchg
leave
mov
cli
push
pop
or
sbb
xchg
adc
mov
and
clc
mov
push
out
cmp
pushw
pop
adc
sub
pop
movsb
mov
jg
push
mov
je
arpl
and
dec
and
test
pop
aas
push
je
shlb
push
add
pop
xchg
cmp
inc
add
xor
xlat
sub
xor
mov
xor
pop
and
or
mov
lock
or
mov
mov
cmp
jge
push
xor
xor
nop
inc
pop
xor
sbb
sbb
xor
push
add
xor
pop
sbb
cmp
sbb
xor
or
inc
out
stos
lock
mov
stos
sahf
and
sub
mov
sbb
jmp
hlt
mov
mov
mov
fwait
jg
xor
or
pop
shrb
or
es
popf
popa
push
popf
sub
mov
adc
and
out
call
mul
loop
mov
xor
aam
pop
out
pop
pop
scas
lret
xchg
adc
or
stos
pop
inc
or
rolb
out
adc
cld
push
xor
adc
jb
ljmp
adc
fistpl
inc
fstpl
adc
add
add
lock
call
mov
jmp
add
sub
add
sti
fwait
repz
adc
stos
add
sbb
aaa
insb
repnz
xlat
fwait
push
jnp
xchg
mov
jo
jmp
dec
mov
xor
and
lea
call
clc
sbbl
test
insl
adc
sub
push
rolb
mov
jo
shl
jge
adc
sub
mov
sbb
mov
stos
cwtl
or
inc
frstor
ret
inc
sub
leave
and
scas
test
mov
add
mov
adc
repz
mov
lret
imul
loope
add
add
or
adc
xchg
mov
int
mov
test
dec
mov
push
cs
inc
push
and
xchg
and
loop
xorb
cmp
adcl
mov
sbb
or
jmp
dec
movl
cs
or
sbb
push
or
adc
fwait
dec
mov
adc
iret
pop
repz
inc
cmp
add
and
or
jns
out
sbb
ret
sahf
out
sahf
mov
push
ds
int
jns
or
sbb
aam
fcmovnu
repz
push
mov
pushf
pop
push
lods
push
mov
int3
loop
push
inc
push
push
mov
jns
sub
push
nop
movsb
push
push
xchg
repz
repz
push
inc
ss
repz
pop
dec
cmp
ds
repz
repnz
fsubrp
jns
out
mov
ret
out
jnp
pop
into
sbb
incb
add
es
lcall
sbb
sahf
out
mov
repz
pusha
sbb
pushf
scas
lret
repz
cld
or
and
sahf
out
inc
pop
data16
out
sahf
out
sahf
lods
mov
jns
jns
fsubrp
decb
ss
inc
xor
out
shr
jb
data16
ja
jle
sahf
mov
daa
rol
loop
sti
fdivp
push
clc
adc
sub
cmp
aaa
je
jns
ja
fs
push
cmp
adc
fidivrl
pop
daa
pop
mov
jbe
add
jae
jbe
push
cwtl
cmpsl
insl
mov
xchg
out
iret
dec
test
outsl
cwtl
imul
fnstcw
test
scas
test
les
push
mov
imulb
jne
fwait
add
mov
bound
xchg
ss
jle
sub
inc
xchg
sub
push
leave
and
xlat
or
dec
push
je
mov
stos
push
inc
mov
push
ja
ret
aaa
mov
inc
lahf
mov
lret
and
daa
xor
pusha
enter
jae
mov
ss
xor
add
inc
pop
js
bound
add
push
xor
jns
fstpl
sub
pop
xlat
adc
dec
cmp
mov
outsb
aas
das
cmp
xchg
aaa
or
mov
out
mov
sbb
mov
jae
add
jnp
les
test
in
sarl
push
pcmpeqd
cmp
sbb
or
movsl
inc
insb
jmp
dec
and
sub
mov
stos
fisubs
cmpl
pop
bound
mov
daa
add
sti
test
sbb
mov
jg
or
ret
je
aad
add
arpl
gs
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
push
push
out
rorb
inc
loop
pop
inc
xorb
dec
jp
cli
or
xor
jae
ficomps
imul
cmpsb
jo
inc
jne
outsb
je
shlb
in
jae
inc
js
fcmovnu
scas
les
jnp
inc
xor
sub
sub
inc
sti
in
sub
inc
inc
xor
xor
xor
jge
mov
fstpt
xor
cmp
inc
stos
xor
ss
xor
cmp
fsubl
mov
xor
clc
inc
inc
xor
mov
aam
incl
xchg
lret
out
inc
cwtl
jne
test
sbb
cmp
cmp
xor
push
in
jg
in
xor
or
push
and
inc
aaa
adc
les
inc
pop
dec
adc
or
mov
push
popa
out
aaa
cld
stos
xor
dec
and
cmp
ss
inc
pusha
mov
pushf
xor
add
aam
cmp
mov
dec
pop
xor
ds
in
scas
push
push
sub
hlt
imul
aaa
test
pop
push
out
pop
mov
jle
out
inc
out
adc
push
sub
out
popf
out
push
das
jmp
divb
add
movd
fsubr
cmpsb
push
hlt
adc
dec
iret
dec
jo
addr16
add
jg
push
mov
and
jo
ss
insb
outsl
xor
imul
fs
inc
je
push
push
jns
rclb
mov
push
inc
cmp
add
jbe
in
cmp
sbb
xchg
xchg
test
and
xor
mov
mov
call
std
inc
arpl
sbb
insb
mov
xchg
and
outsb
ret
lcall
cltd
js
add
dec
or
xor
or
pop
sysenter
adc
cmp
sbbl
pop
xorb
repz
mov
cwtl
mov
push
jp
ficoml
out
dec
mov
dec
popa
jae
push
je
and
inc
push
imul
test
jne
add
loopne
jns
mov
pop
subl
mov
gs
cmp
ret
ss
popa
fs
jo
movsl
dec
cmp
repz
add
sub
mov
movsb
jmp
pop
dec
jae
outsl
push
pop
arpl
mov
cs
push
push
push
add
rcll
je
dec
sub
outsb
outsl
push
popa
imul
outsb
popa
incb
sbb
fadd
lods
cwtl
add
push
xor
incl
inc
mov
adc
pop
and
es
sbb
rolb
push
push
adc
adc
or
aas
xchg
inc
or
and
xchg
adc
adc
les
jg
sub
and
adc
inc
cmpsl
push
mov
fs
ret
pop
add
jp
jns
or
fadds
adc
adc
sahf
out
sub
loopne
adc
jae
mov
das
push
adc
cmp
jae
xchg
adc
push
sbb
sbb
stc
enter
sbb
std
iret
jae
rcrl
push
das
push
pop
nop
imul
cmp
js
imul
push
jns
stc
jp
push
cld
popa
pushf
out
fdivr
mov
cmpsl
xor
inc
dec
or
mov
pop
aad
pop
mov
and
mov
es
arpl
test
xchg
cwtl
add
aaa
push
adc
ja
push
lds
push
dec
sbb
or
iret
lods
ret
adc
push
cld
sahf
out
lcall
insb
pushf
out
mov
repz
xor
mov
cmp
repz
mov
cmp
insb
push
pop
jns
out
push
push
dec
dec
inc
iret
repz
out
cmp
xor
sub
iret
repz
and
sbb
repz
repz
or
add
jns
iret
add
or
hlt
call
enter
jl
out
jo
xor
lock
repz
ror
mov
insb
inc
out
cmp
sub
adc
cld
push
sahf
out
sahf
fcom
les
jns
sub
aam
mov
xchg
jo
sbb
add
sahf
mull
call
cwtl
jl
pop
dec
iret
inc
gs
or
pop
jne
les
pop
dec
sbb
pushf
mov
xchg
mov
mov
scas
and
inc
dec
adc
jnp
mov
sub
inc
inc
add
adc
or
fldl
cmp
daa
outsb
cltd
js
negb
fwait
adc
fisubl
inc
adc
sbb
pusha
popl
jecxz
add
sbb
push
shll
mov
pop
and
mov
dec
xor
bound
sbb
lds
and
daa
xor
dec
mov
adc
sbb
jmp
jae
and
push
jbe
adc
ljmp
jnp
js
shrb
mov
pushf
addb
jmp
sub
inc
mov
dec
ret
jns
rcll
pop
push
out
and
sbb
push
push
push
inc
push
xor
xchg
rolb
inc
mov
jnp
out
jnp
je
jae
insb
add
pop
stc
sbb
xor
mov
push
je
imul
inc
pop
push
fidivs
arpl
decl
outsl
mov
jo
push
adc
xor
jp
jo,pn
bound
pop
jne
mov
cmp
xor
mov
ja
filds
push
insb
das
inc
adc
mov
jns
add
mov
jg
das
cmp
sbb
loopne
xchg
loopne
sbb
push
test
rorb
add
in
test
mov
insb
test
jg
fs
pop
enter
aam
sub
ret
sete
pop
enter
data16
data16
ljmp
and
fcomps
and
xlat
jns
pop
in
pop
rcr
xorb
sti
cltd
ss
lcall
jmp
push
test
adc
or
push
popf
jl
and
xchg
loope
lds
lahf
jg
cmpsb
jg
adc
loop
xor
xchg
pop
xor
mov
aam
aas
vmptrst
daa
cmp
enter
in
shr
outsl
pinsrw
adc
mov
shlb
dec
jbe
in
jp
push
push
aam
insb
adc
fs
fisubrl
dec
mov
repz
loopne
daa
mov
dec
lock
enter
mov
loope
xchg
imul
test
lea
movsl
inc
sub
iret
test
push
and
imul
xchg
add
iret
stos
push
jb
push
lcall
mov
push
and
notb
dec
add
push
push
add
push
outsl
ja
pop
pop
test
add
mov
xchg
sub
add
pop
fadds
fsubrp
daa
movsb
pop
arpl
add
adc
lods
ja
push
xor
xor
aaa
andl
bound
xor
xor
dec
push
jb
and
mov
adc
inc
add
push
outsb
nop
arpl
add
outsb
push
add
imul
xchg
dec
add
divl
ret
in
xchg
add
push
mov
imulb
jae
push
jae
push
xchg
push
adc
jae
xchg
hlt
push
push
push
enter
sub
inc
mov
cmpl
cmpsl
fs
push
inc
sbb
addb
add
and
add
add
mov
inc
push
jo
push
mov
pop
das
push
mov
dec
or
cmp
push
jo
xchg
jns
imul
sbb
jnp
mov
roll
push
push
lods
cmpsl
imul
call
sbb
imulb
cmp
xchg
push
aaa
ja
dec
jnp
inc
popa
jge
and
inc
pusha
inc
and
pop
inc
cmpsl
and
inc
imul
jge
or
fimull
xchg
xor
call
add
push
xchg
ja
adc
inc
inc
add
fbld
jne
in
cmp
inc
or
popf
cmp
subb
mov
insl
jp
push
cs
sbb
xchg
pop
push
or
or
scas
xchg
and
xchg
fs
dec
jmp
sbb
leave
push
nop
pop
ja,pt
inc
cmp
fs
lahf
xor
push
dec
xor
dec
pop
nop
jo
icebp
ss
pushf
cltd
or
call
loope
ds
fidivrl
inc
loope
jle
inc
inc
push
call
dec
jo
rcrl
int3
xor
ret
lods
loopne
and
add
sbb
aas
das
pop
outsl
loop
faddl
mov
rorb
add
stc
add
push
lcall
orb
mov
sbbb
xor
mulb
pop
addr16
inc
jns
inc
mov
xchg
fs
lds
sbb
mov
in
mov
outsl
inc
push
outsl
cmp
xchg
mov
dec
xchg
dec
and
pop
or
inc
push
popa
adc
add
or
xor
loopne
push
push
lock
cwtl
lret
adc
mov
rolb
push
sub
mov
out
jb
add
add
add
sbb
jp
mov
fnsave
or
push
shlb
fidivl
dec
inc
dec
pop
or
and
cmc
lods
inc
xchg
popa
push
sbb
jnp
inc
sbb
push
stos
enter
je
push
xor
lcall
inc
mov
mov
shrb
iret
add
jo
add
add
pop
add
outsl
inc
or
fs
and
push
jo
sub
je
ds
xor
dec
pusha
push
jo
jno
pop
cmp
repz
mov
arpl
sahf
into
pop
roll
in
xchg
loope
or
adc
sbb
sbb
jo
mov
add
pop
cwtl
jnp
fcmove
pop
add
lret
add
into
out
jnp
test
add
push
mov
pop
pop
cmpsl
mov
fsub
addb
jns
test
inc
jae
add
add
je
ja
sbb
mov
add
xor
and
add
xor
adc
or
lods
pop
sarb
into
int3
add
push
add
mov
inc
andl
xor
jecxz
cmp
jmp
xlat
fwait
rclb
ficomps
mov
push
popa
inc
mov
push
jnp
adc
and
inc
ss
jmp
cwtl
aam
push
jecxz
cmp
pop
in
or
jo
aam
lret
or
add
jae
mov
add
pop
add
pop
pop
push
insb
push
andb
hlt
pop
push
xchg
push
punpcklbw
popf
cs
and
addb
or
dec
pop
std
jns
or
and
xlat
cs
add
adc
rorb
gs
cmp
stos
les
sti
fsubrl
adc
ljmp
inc
pusha
jmp
pop
jns
rclb
push
jo
add
rcl
push
mov
adc
add
daa
and
and
or
push
add
mov
daa
sbb
adc
adc
add
dec
repz
clc
out
lock
repz
mov
cmp
mov
test
pop
mov
jns
xchg
nop
mov
jo
pusha
push
pop
iret
repz
push
inc
cmp
and
pushf
out
cmp
adc
in
lock
pop
mov
loopne
fdivrs
repz
enter
repz
repz
mov
iret
repz
cmp
sub
sbb
sahf
out
cmp
add
in
hlt
in
jns
out
in
int3
mov
mulb
mov
js
cmp
jnp
push
inc
sub
and
or
jmp
es
inc
mov
xor
adc
add
vandnps
divl
push
mov
push
mov
in
mov
stos
dec
add
out
divl
sbbb
lock
push
nop
push
repnz
andb
add
aaa
addr16
adc
fisubs
push
aaa
maskmovq
negl
lret
jbe
inc
and
add
outsl
add
or
dec
pop
jg
fs
inc
dec
pop
sbb
add
mov
mov
xchg
addb
imull
pop
inc
push
mov
xchg
dec
sbb
dec
inc
aaa
inc
inc
jne
jecxz
mov
sahf
inc
xorb
add
out
les
dec
push
pop
jo
add
pop
add
in
cmp
adc
inc
pop
push
and
and
movsb
outsb
jbe
xchg
or
jae
push
pop
cmpsl
lret
sub
mov
and
jbe
and
xchg
or
popa
cmpsl
lahf
mov
loop
xor
xor
ds
je
flds
xor
xchg
or
jae
pop
and
xor
rcrb
mov
sbb
cmp
inc
js
and
sub
or
and
pop
or
adc
pop
jne
popa
fadds
jae
popaw
insb
into
dec
pop
mov
sub
stc
das
mov
ss
sbb
jmp
push
inc
push
fcmovnu
aad
inc
add
inc
pop
pop
adc
fistps
and
aam
add
xor
xor
sbb
bound
loopne
sbb
pushl
das
xor
xorb
xor
xor
xor
xor
xor
xor
movsb
xor
xor
pushl
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xchg
pushl
sub
inc
ss
ss
es
dec
aaa
push
aaa
mov
iret
aaa
call
mov
adc
dec
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
cmp
lock
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
ret
add
push
lea
clc
aas
lock
idivl
or
add
and
dec
xor
xor
outsb
xor
popf
xor
xor
xor
jmp
xor
xor
xor
mov
xor
xor
xor
xor
push
decl
out
xor
xor
xor
xor
xor
xor
fidivl
decl
mov
les
fnsave
out
xor
mov
ss
cltd
ss
ss
ss
aaa
sbb
jno
mov
aaa
lods
aaa
mov
cmp
ljmp
sub
inc
cmp
loopne
jmp
cmp
cmp
cmp
cmp
push
cmp
ud0
cmp
cmp
cmp
cmp
cmp
push
adc
cmp
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
cmp
fisttps
ds
jo,pt
test
mov
aas
adc
xor
inc
shr
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
cmp
pop
xor
xorb
xor
fdivs
fnsave
ljmp
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
ljmp
pushl
aam
jmp
hlt
xor
xor
xor
xor
xor
pop
xor
jo
xchg
xor
imul
aam
add
xor
xor
aaa
cld
lcall
xor
xor
xor
push
aaa
push
sub
ss
clc
loop
call
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
xchg
cmp
hlt
cmp
cmp
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
pop
or
push
pusha
pop
push
or
aas
clc
decl
arpl
push
xor
xor
xor
pop
cmp
xor
xor
xor
xor
ret
xor
xor
push
incl
lcall
clc
xor
xor
test
mov
mov
pop
cld
pushl
nop
xor
out
in
xor
scas
clc
xor
cmp
jmp
pop
lods
cmp
cmp
cmp
cmp
mov
sarl
aad
fnstcw
fnstsw
loope
in
in
cmp
cmp
pop
sub
std
cmp
cmp
push
lcall
pop
mov
cmpb
ds
aas
jmp
punpckhbw
and
cmp
ss
sbb
pushl
sbb
xchg
cmp
cmp
mov
mov
mov
inc
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
das
pop
sbb
cmp
dec
aas
push
mov
cmpb
aas
sarl
shlb
lret
aas
in
out
out
jo
and
loop
xor
xor
xor
xor
incl
jg
xor
xor
xor
loop
xor
xor
xor
mov
xor
xor
scas
std
xor
cmpsb
data16
ss
std
pushl
cli
add
or
aaa
and
aaa
dec
aaa
dec
loope
pushl
push
aaa
pop
aaa
imul
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
mov
cmp
test
popf
cmp
xor
pusha
cmp
mov
cmp
cmp
mov
cmp
cmp
inc
cmp
dec
cmp
popa
cmp
xchg
xchg
cmpb
cmp
push
stos
cmp
cmp
or
call
cmp
cmp
cmp
cmp
repnz
jg
mov
sub
xor
cmp
cmp
dec
cmp
push
cmp
insl
cmp
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
and
xor
cmp
pop
cmp
aas
mov
xchg
cmp
mov
jp
jg
cwtl
ds
ds
loope
jg
jecxz
out
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
jns
into
or
push
xor
insl
stos
aas
sbb
sahf
xchg
les
fidivl
in
pushl
jl
xor
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
mov
jl
lock
xor
xor
xor
scas
jno
xchg
xor
xor
xor
mov
xor
xor
xor
mov
ret
aaa
xchg
call
xlat
xlat
aaa
fwait
sahf
cmpsb
mov
bound
scas
cmp
ss
scas
jp
cmp
fdivl
mov
out
cmp
cmp
mov
shl
pop
fimull
nop
cmp
cmp
cmp
fnsave
mov
jle
ljmp
xor
cmp
bound
data16
push
outsb
aaa
jb
jbe
pushl
shlb
ja
js
jge
cmp
cmp
cmp
cmp
cmp
pop
cmp
outsb
cmp
mov
call
out
sbb
ds
xor
xchg
aas
push
mov
xor
inc
xor
mov
xor
xor
ja
xor
push
ss
fiadds
clc
cltd
aaa
mov
ret
aaa
jmp
repnz
or
lcall
cmp
cmp
pop
cmp
jge
mov
cmp
cmp
jbe
xchg
cmp
pop
cmp
cmp
cmp
cld
cmp
mov
and
cmp
popf
mov
cmp
fdivrs
push
aas
jne
mov
or
pop
ss
mov
fwait
xor
xor
dec
or
repnz
aas
xor
divl
pop
xor
jg
or
xor
es
dec
ss
outsb
fcomip
lcall
notb
ss
in
and
cmp
cmp
jo
ljmp
cmp
orl
inc
pop
push
imul
cmc
add
jo
jne
test
mov
ret
cmp
dec
cmp
call
cmp
jae
aam
fnstsw
jecxz
imul
mov
cmp
cmpl
inc
cmp
cmp
inc
pop
mov
pop
and
push
cmpb
cmpsl
ds
ds
ret
ds
ds
sbb
addr16
loope
rcr
pop
pop
lds
in
xor
incl
cld
xor
aad
out
cmp
or
xor
xor
xor
xor
xor
incl
xor
inc
ss
lcall
ds
add
xchg
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
ljmp
cmp
mov
cmp
cmp
cmp
cmp
lock
pop
cmp
cmp
cmp
cmp
cmp
adc
clc
pushl
cmpl
cmp
cmp
adc
and
pusha
aas
cmpb
inc
mov
test
fdivrl
loop
out
out
pop
rclb
jg
mov
push
adc
xor
jae
cmp
jne
jg
dec
dec
pushl
xchg
xor
xor
xor
mov
or
jne
inc
ljmp
inc
adc
adc
sbb
sbb
sub
sub
nop
cmp
mov
cmp
test
enter
sarb
aam
in
ljmp
out
scas
xor
aaa
dec
test
das
into
cmp
inc
xor
xor
lcall
decb
lods
xor
mov
mov
xor
xor
cld
mov
xor
cmp
sub
sub
xor
icebp
decl
cmp
inc
cmp
cmp
cmp
mov
cmp
fidivs
cmp
add
mov
inc
aad
inc
lahf
push
mov
jl
cs
cmp
mov
cmp
cmp
mov
mov
call
dec
cld
push
add
pop
lods
ds
or
adc
sbb
and
and
sub
sub
jg
add
xor
cmp
inc
cmp
lock
cmp
pop
cmp
cmp
insb
cmp
je
ja
psubd
cmp
mov
mov
sub
xor
inc
pop
ljmp
dec
aas
push
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
shrb
xchg
jg
aas
fdivrs
loopne
clc
jbe
push
or
xor
pop
clc
cmpsl
pop
bound
clc
xor
xor
inc
xor
pushl
push
xor
xor
enter
outsb
ret
cmp
mov
sbb
inc
xor
andb
adc
cmpsb
and
fimuls
xor
ss
shlb
sahf
int3
shlb
aam
fdivs
fdivl
loopne
in
call
mov
clc
ss
add
add
or
or
adc
adc
aaa
call
aaa
and
and
sub
sub
xor
cmp
cmp
inc
aaa
inc
aaa
dec
clc
pushl
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
cmp
inc
push
nop
aaa
xchg
aaa
cwtl
into
mov
mov
aaa
mov
mov
aaa
enter
shlb
aam
inc
bound
aaa
fcompl
in
out
adc
sub
aaa
hlt
xor
aaa
hlt
add
or
arpl
mov
cmp
out
mov
ret
jbe
mov
mov
cmp
das
ret
sahf
jl
cwtl
cmp
cmp
sub
cmp
cmp
cmp
cmp
push
cmp
incl
pop
lcall
pushf
cmp
test
lods
cmp
ret
cmp
sarb
and
mov
add
ljmp
out
xchg
xchg
mov
jne
call
sahf
repnz
paddd
repnz
es
add
jmp
xorb
push
insl
es
icebp
addb
fistps
ret
pop
push
add
dec
lret
push
sbbb
loop
add
fisubrs
fsubs
pusha
cmp
inc
pmaxub
jne
xor
xor
inc
dec
add
or
int3
sub
sub
inc
sub
outsb
xchg
cmp
jnp
sbb
or
jns
add
add
pusha
lods
in
fistps
adc
mov
dec
fists
inc
inc
and
dec
and
shrl
sbb
push
adc
je
push
sub
sbb
clc
inc
push
and
add
dec
popf
push
gs
je
sbb
sub
and
popf
jbe
push
and
cmc
and
out
lock
dec
pop
aad
xor
lea
repnz
add
xchg
lea
and
or
pop
xorb
sbb
jne
push
mov
xor
lods
jle
pop
and
sub
add
les
mov
fs
mov
enter
out
loopne
adc
and
push
cmp
jo
add
xor
inc
insb
add
dec
test
adcl
rol
nop
jge
push
and
pop
addl
push
xchg
arpl
mov
adc
stos
dec
addr16
cwtl
mov
inc
sbb
xlat
ds
mov
and
and
xor
cmp
and
push
sbb
dec
xchg
add
sub
and
test
fadds
loope
add
addl
cmp
loopne
sub
mov
xor
bound
insb
idiv
idivb
or
jb
lea
call
pusha
or
adc
mov
cmp
pop
inc
lahf
xchg
fildl
add
sbb
jnp
mov
cwtl
mov
mov
adc
outsb
push
push
loope
mov
or
testb
adc
lea
push
push
cmp
movsb
mov
jb
cmpb
jl
outsb
inc
push
jp
js
call
fidivl
or
inc
add
push
call
sbb
movsl
xor
cmp
dec
stos
mov
push
mov
add
fisubrl
lahf
xor
and
fidivs
addl
inc
jle
ret
and
cmp
js
or
mov
adc
or
mov
mov
mov
mov
enter
xor
and
jge
inc
and
mov
pop
outsb
xchg
call
push
cmp
lret
inc
lret
jmp
lret
inc
and
aam
mov
mov
aam
int3
mov
mov
ljmp
lock
cs
adc
push
push
loop
cld
das
inc
push
adcl
adc
es
dec
int
jg
pop
add
cs
fmuls
push
adc
or
push
ja
mov
jnp
cmc
test
sub
sub
or
jge
xor
push
mov
cmp
xchg
or
sbbb
xchg
xor
xchg
sbb
adc
pop
repnz
ljmp
cmp
call
aad
add
sub
or
mov
shr
cli
jno
lea
out
fildl
shrb
loop
or
and
clc
pop
adc
comiss
pop
inc
hlt
das
add
pop
pop
jbe
fsubp
or
or
leave
mov
or
sahf
dec
add
add
insb
push
int
dec
mov
popf
jnp
sbb
xchg
push
loope
and
fsubs
pusha
xor
loope
vmovsd
aaa
adc
or
jge
out
adc
cmp
pop
mov
dec
cmp
sub
xor
add
push
dec
push
push
jbe
mov
dec
clc
push
sbb
inc
lcall
dec
xchg
push
imul
and
pusha
push
jno
or
loop
or
cmc
xchg
pop
push
ret
lcall
cwtl
push
push
adc
pop
pop
hlt
sub
dec
push
push
fs
mov
adc
push
test
pop
sub
inc
jl
pop
insb
ljmp
dec
repnz
mov
jmp
mov
lret
mov
mov
pop
cmp
xor
or
mov
pop
test
outsl
pop
mov
test
adc
fnstcw
or
pushf
loopnew
or
cmp
out
idiv
dec
pushf
jg
add
mov
xchg
cltd
shll
mov
xor
negb
push
adc
ljmp
mov
mov
shr
roll
int
xchg
cmpsb
mov
mov
lods
xlat
call
mov
jnp
ficompl
fisubs
roll
rolb
ljmp
adc
push
ja
fcompl
sub
dec
and
add
loopne
cmp
movsl
adc
addl
add
pop
push
in
negl
ss
sub
add
add
push
and
xor
add
pushf
insb
or
or
adc
push
and
mov
shr
sub
mov
push
sub
dec
bound
sbb
mov
and
mov
sbb
cmp
inc
imul
cmp
adc
sarl
dec
mov
pop
repnz
inc
jo
test
push
dec
xor
dec
adc
jne
xor
dec
adc
cmp
mov
add
jae
add
inc
dec
cmp
or
adc
pop
inc
inc
dec
shll
ret
inc
push
test
enter
adc
movsb
sub
test
imul
cmpsb
sub
repnz
inc
movb
inc
mov
cmp
lods
arpl
rorb
ret
mov
push
js
out
sub
mov
addb
fadds
pop
mov
add
shll
shll
or
mov
pusha
and
xchg
mov
loope
xchg
push
or
pop
pop
mov
push
jns
subl
fsubl
outsb
sarb
push
sahf
adc
dec
pop
ja
inc
mov
push
push
xchg
fadd
and
scas
xchg
xchg
jne
add
pop
or
cmp
nop
outsb
mov
scas
outsb
addb
or
cwtl
ret
pop
das
adc
adc
pop
add
lret
inc
push
mov
xchg
push
cmpsb
subb
inc
sbb
in
xchg
mov
pop
sbb
jge
sub
or
outsb
mov
xor
bound
push
jl
adc
sbb
call
in
push
insb
lahf
mov
fcoml
dec
mov
or
xchg
outsl
mov
mov
orb
dec
jo
xchg
lods
cmpsl
lahf
push
and
inc
pop
call
lcall
stos
push
imul
pop
inc
sub
push
call
out
mov
xchg
movl
inc
and
add
push
pop
xor
sti
test
push
add
cmp
and
and
inc
mov
inc
inc
xor
inc
push
mov
stc
inc
sbb
inc
or
sbb
test
or
movsl
or
mov
push
inc
xor
das
or
sbb
sbb
cmpb
mov
add
mov
or
jbe
adc
sub
je
push
or
repnz
sbb
mov
je
cs
inc
je
mov
mov
push
sbb
adc
imul
dec
inc
push
mov
dec
mov
inc
adc
orb
jge
andb
ds
fwait
fs
pop
call
mov
pop
or
ffree
dec
call
call
dec
adc
dec
xchg
movsl
pop
mov
mov
es
enter
inc
ss
pop
mov
shll
jae
xchg
pop
add
adc
jbe
pop
xchg
and
cmp
nop
nop
push
mov
jnp
adc
rolb
hlt
pop
aaa
add
mov
pop
dec
imull
cs
xchg
fs
sahf
out
sahf
pop
push
dec
inc
cmp
add
gs
iret
imul
sbb
jmp
sub
lret
xor
sti
or
popf
sbb
lret
and
fldl
sub
xor
out
fldl
nop
xor
push
push
jl
jne
cs
pop
lret
mov
sbbl
pop
mov
push
cmp
push
loopne
lock
add
adc
pop
iret
jnp
and
sub
xor
inc
pop
add
lret
xor
adc
pop
out
mov
jns
jb
int3
ds
stc
mov
jns
xor
rcrb
adc
dec
mov
mov
push
sbb
xor
cmpb
and
lahf
and
adc
inc
push
call
pop
adc
pusha
mov
pop
or
pusha
hlt
push
hlt
jno
test
test
cmpsl
fisubl
mov
add
sub
mov
lcall
add
xor
enter
sub
xor
jb
sub
imul
lcall
dec
push
sbb
sub
sub
and
nop
xor
sub
inc
enter
sub
xchg
cmpsb
sub
sub
xchg
sub
shll
sub
lret
dec
sub
sub
movsb
imul
sbb
cmp
movsl
push
filds
push
cmovns
jo
aam
in
sbb
pop
inc
jp
add
sbb
jns
mov
repnz
adc
jo
pop
lds
out
push
inc
fistl
stc
push
inc
push
jge
or
push
lret
ss
or
insb
push
sahf
sbb
stc
or
addr16
add
nop
mov
call
push
movsb
fwait
and
inc
shrb
inc
sub
xor
sbb
push
lods
out
sub
and
rolb
mov
mov
add
inc
adc
push
inc
sub
les
hlt
ds
pop
xchg
lds
je
or
inc
nop
adc
mov
push
inc
rolb
and
lods
pop
inc
shll
add
subb
inc
aas
and
mov
xchg
test
xor
mov
or
sub
cld
push
cmp
cmp
xor
inc
jmp
test
sub
push
xor
test
es
mov
cmp
pop
es
jae
mov
rcrb
nop
add
cs
push
ja
imul
xchg
cmp
mov
mov
cmpsl
cmpsl
cld
add
and
add
pop
push
and
xor
adc
jnp
jns
mov
jns
sbb
loope
pop
add
loop
in
js
xor
mov
inc
js
roll
jno
inc
jns
adc
jmp
lcall
add
xor
xchg
mov
js
adc
pop
jns
sbbb
and
outsl
sbb
les
jns
sbb
inc
loop
into
daa
jns
leave
mov
jbe
sub
sbb
rclb
andb
les
sbb
outsl
and
scas
jns
xchg
jns
ljmp
icebp
sbb
xchg
pop
jns
subb
scas
icebp
sub
popa
sub
aam
popf
push
adc
cmpsl
fbstp
push
add
adc
cmpsl
push
add
xchg
jmp
inc
add
outsb
cmpsl
cmpsl
pop
add
cmpsl
mov
inc
cmpsl
test
inc
dec
or
les
cmpsl
add
out
dec
cmp
dec
addb
sbb
cmpsl
aam
les
andb
adc
enter
sbb
pop
mov
add
mov
lcall
push
add
add
loopne
les
fisubs
adc
cmpsl
mov
movsb
outsb
fsubs
sub
jbe
push
in
push
add
cwtl
dec
adc
jl
push
dec
xor
dec
sbbb
inc
pop
enter
cmpsl
fisttpll
daa
fmuls
add
inc
call
nop
mov
nop
pop
push
add
xchg
mov
and
mov
xchg
nop
shrl
movsb
inc
ret
push
dec
pop
test
cmpsl
sbbb
adc
xor
mov
or
xchg
dec
cmpsl
das
sub
xor
nop
cmpsl
adc
mov
inc
into
or
or
sub
jnp
ret
jnp
movsb
rorl
mov
mov
mull
dec
cmpsl
mov
nop
xchg
arpl
inc
movsb
outsb
xorb
sbb
fmuls
test
jmp
es
xor
sub
xor
push
push
imul
mov
pop
ss
mov
inc
mov
or
es
ja
xorb
inc
mov
je
test
fisubl
sbb
and
mov
pop
mov
lahf
and
movl
mov
lock
pop
push
ds
xor
mov
sub
cmp
loope
xor
rorb
cwtl
and
cmp
mov
xor
adc
enter
arpl
cmp
inc
cmp
enter
sub
and
dec
and
xchg
sub
mov
or
dec
mov
movsb
pop
mov
mov
lock
test
jg
push
cmp
adc
pop
fisttpll
jno
xchg
mov
or
and
call
addl
jo
add
cmp
inc
aam
jl
int3
jo
mov
test
xorb
inc
in
dec
and
and
adc
aad
inc
nop
pushf
dec
aad
jbe
pushf
test
cmp
ja
mov
jae
addr16
adc
lock
cltd
aad
add
xor
test
fistpl
adc
pushf
push
aam
mov
sbb
xor
mov
inc
lahf
movsb
test
enter
mov
aad
cld
xchg
mov
xlat
add
or
cltd
mov
dec
lahf
sbbb
sbb
cmpsb
xchg
add
pop
fidivrs
cmpsb
dec
push
mov
enter
mov
mov
dec
jo
ret
xor
mov
adc
mov
das
mov
hlt
or
or
add
jns
xchg
mov
add
jb
lods
lret
xor
pusha
fucomp
mov
cs
inc
xor
dec
call
lcall
and
push
mov
and
mov
lock
xchg
cmp
mov
mov
int3
test
mov
sbb
bound
test
and
add
fistpl
psrad
pop
mov
push
rolb
pusha
ds
xchg
pop
jp
pop
hlt
push
dec
loope
and
cmp
lahf
pop
mov
jnp
das
rclb
jnp
sbb
xor
out
sbb
loopne
cmp
xchg
fsubr
jp
sbb
xchg
push
add
fildl
push
and
cwtl
pop
xchg
xchg
in
mov
xchg
js
and
mov
mov
adc
mov
adc
ret
xchg
xor
push
sti
dec
mov
daa
leave
mov
fcom
js
cmp
mov
fcoml
sbb
stc
aas
stc
or
shrl
sar
adc
loopne
stc
stc
inc
sbb
mov
call
xchg
call
mov
and
fstp
stc
cld
mov
xlat
test
inc
dec
leave
sub
mov
ljmp
imul
sub
bound
jmp
lret
and
pusha
xchg
movsb
aas
push
sbbl
lret
push
ret
pop
jmp
jmp
xor
jne
sub
pushf
aaa
jne
mov
add
je
add
and
jae
adc
or
enter
or
push
mov
lock
sbb
out
repz
sbb
adc
and
iret
aam
cmp
adc
push
inc
adc
call
lahf
ret
insb
mov
jecxz
lds
pop
mov
gs
cmp
mov
inc
repnz
pop
and
adc
frstor
out
ret
call
dec
mov
and
fdiv
je
mov
and
sarb
test
jb
imul
js
jl
aam
je
addb
mov
ss
inc
and
inc
push
and
in
aam
shrl
inc
mov
stos
rol
aad
subb
sarb
lret
or
or
jno
and
enter
ljmp
pushf
rcrl
notl
add
and
imul
stc
sub
or
sbb
dec
add
mov
sbb
pop
nop
inc
mov
and
xor
sub
test
adc
sub
add
xchg
and
dec
push
sbb
adc
imul
pop
inc
lods
adc
adc
adc
repz
sbb
hlt
xchg
pushf
mov
adc
fdivl
daa
mov
xchg
or
loope
pusha
cmp
in
adc
or
je
pop
xor
sbb
sub
sbb
sahf
add
push
aaa
inc
pop
into
cmpb
adc
fxch
and
rcll
pop
rcll
dec
dec
sbb
arpl
xchg
shrb
or
movsl
shlb
mov
add
push
add
adc
pop
mov
or
addb
sbb
sbb
insl
or
incl
pop
mov
hlt
dec
movhlps
enter
inc
mov
outsb
fcmovb
das
mov
je
lcall
xchg
mov
xchg
cmp
pusha
shrb
sub
js
push
inc
and
xor
fldl
jmp
movsl
fwait
sub
fisttpl
adc
push
push
pop
adc
mov
orb
push
call
sub
adc
xchg
out
shrb
rcr
mov
int3
or
bound
dec
fimuls
dec
mov
adc
push
mov
dec
jb
mov
ret
ret
stos
push
jne
dec
fcoml
push
dec
inc
or
pop
adc
rcll
jb
ss
push
xor
push
add
inc
sahf
iret
inc
aaa
and
dec
in
adc
fisubrl
test
dec
cmp
cmp
dec
pusha
xor
out
xchg
cmp
das
lcall
lods
inc
dec
pop
insb
push
mov
dec
dec
out
scas
outsb
pop
inc
mov
call
cmp
rcr
les
lds
fdivl
mov
adc
xlat
push
pop
sub
pop
dec
in
test
roll
pop
adc
mov
les
mov
mov
pop
test
not
lds
gs
sbb
add
lods
push
xor
outsb
and
sbb
pop
aam
outsb
push
das
sub
cli
pop
push
aaa
test
fcoml
inc
and
pop
iret
pop
outsb
ret
fsubl
in
fisubs
pop
inc
lods
cs
push
xchg
sub
push
or
xchg
aaa
pop
pop
cmp
ret
or
shl
push
pop
test
mov
sbb
mov
mov
jge
mov
mov
lods
sub
loopne
jne
enter
jecxz
ficompl
jns
ja
subb
daa
pop
push
aaa
sub
lcall
push
push
cmc
add
adc
push
and
outsl
mov
jecxz
loopne
mov
push
pop
and
dec
sub
pop
inc
inc
mov
push
scas
enter
jle
add
inc
pop
dec
or
iret
rolb
jo
mov
xchg
sub
dec
mov
insb
pop
pop
sbb
and
pop
mov
mov
jmp
adc
jo
js
in
dec
leave
in
sbb
push
xchg
leave
add
int3
stc
sbb
in
xchg
mov
adc
dec
pop
or
mov
mov
push
mov
dec
mov
xor
sub
adc
or
lock
xchg
xchg
xchg
mov
fdivrs
xchg
mov
mov
xchg
xchg
mov
cwtl
mov
xchg
mov
js
enter
push
pop
mov
pop
cmp
ds
sbbl
sbb
enter
mov
sbb
and
out
fstpt
xchg
add
mov
lods
mov
mov
mov
cmpb
jb
mov
and
cmp
dec
mov
xchg
sbbl
mov
enter
add
stc
mov
pop
cmp
mov
jb
sbbl
mov
lods
mov
mov
mov
cmpb
xchg
sbbl
mov
enter
xor
and
mov
inc
or
mov
data16
or
rcll
and
or
out
in
mov
mov
scas
nop
mov
xchg
data16
add
adc
inc
dec
lcall
movsb
sbb
imul
data16
and
sbb
cmp
or
in
mov
xor
adcb
dec
cli
dec
lcall
cmp
mov
or
inc
or
lock
mov
inc
call
inc
and
mov
jo
xor
mov
xor
adc
add
sbb
and
adc
xor
sub
xchg
cmp
stc
mov
test
mov
push
sbbl
ret
rol
push
repnz
mov
mov
sti
testl
or
aas
pop
scas
sub
xor
inc
sub
add
pushl
aam
out
mov
add
push
and
inc
vandps
aam
ss
xadd
cmp
mov
rorb
push
iret
test
inc
add
dec
dec
add
inc
xchg
jo
inc
iret
test
mov
adcl
addr16
hlt
jns
sbb
adc
mov
iret
xor
push
iret
push
pop
mov
js
mov
mov
aam
iret
jl
push
add
rclb
push
pop
mov
jb
inc
dec
imul
mov
leave
sarb
push
pop
mov
iret
sbb
xchg
jmp
xlat
inc
dec
out
outsb
pop
iret
pop
inc
or
je
iret
xor
push
iret
mov
iret
xor
inc
iret
push
pop
cld
sbb
iret
js
jmp
xor
fldenv
mov
xchg
or
pop
iret
push
pop
pop
and
or
iret
scas
dec
xlat
test
iret
mov
mov
inc
inc
adc
sbb
or
andb
or
iret
lret
and
pop
push
fcmove
or
pop
mov
pop
adc
nop
scas
iret
push
mov
cmpsl
cmp
sarb
imul
pop
add
sbb
xor
mov
je
iret
mov
int
iret
mov
inc
fwait
and
outsb
and
roll
stos
push
adcl
iret
cmp
inc
ret
iret
add
iret
mov
cmp
jns
and
dec
dec
loopne
int3
fcomp
mov
inc
push
mov
cld
sub
adc
inc
dec
imull
sub
cmpsl
dec
xchg
mov
ror
push
dec
testl
rolb
mov
adcl
hlt
mov
dec
sbb
aaa
test
adc
aam
dec
iret
fldcw
loope
xchg
rorb
addb
in
iret
adc
inc
jae
dec
nop
dec
pop
loop
or
movsl
shr
xor
mov
sbb
mov
iret
and
add
dec
sbb
aam
mov
call
insl
xlat
inc
iret
cmp
sbb
push
add
in
xlat
roll
and
lret
xor
outsl
arpl
fadds
rcl
inc
dec
iret
cmp
or
mov
sarb
ja
popa
nop
test
iret
pop
sbb
in
add
outsl
mov
jno
push
sbb
rclb
dec
popa
ja
iret
sub
push
decb
mov
std
ds
dec
roll
test
xor
ror
cmpsb
jg
orl
xchg
popa
xchg
sbb
mov
xchg
pusha
or
add
pop
xor
cmpsb
push
pop
mov
jmp
iret
mov
push
pop
sbb
outsb
mov
iret
rorb
and
iret
pop
push
add
add
cmp
iret
dec
sbb
adc
mov
inc
xchg
dec
aad
iret
ljmp
cltd
lock
add
or
pop
cmp
iret
or
xchg
mov
sahf
adcl
mov
rcrb
iret
inc
cmp
jp
add
sbb
sub
or
push
call
into
cmp
mov
cmp
sahf
int3
cmpsl
push
add
nop
mov
addl
fisttpll
inc
scas
adcl
test
test
jg
mov
iret
push
sub
pop
sbb
sbb
adcb
sub
iret
stc
xor
dec
roll
inc
dec
addr16
xchg
xchg
mov
or
sbb
adc
fimuls
iret
push
mov
jo
jmp
mov
push
loopne
lahf
loope
adc
ja
dec
dec
pop
clc
jb
rcl
iret
inc
out
lods
and
iret
shll
iret
xor
shl
jp
iret
push
and
into
sub
out
fldl
movl
movl
int
in
sbb
into
dec
adc
test
and
lods
mov
push
xorb
cmpsb
push
xchg
shrb
sbbb
lods
iret
mov
jb
in
mov
xor
popf
inc
dec
and
les
lea
push
jmp
loopne
sarb
push
ds
movsb
mov
push
pop
loope
or
fldt
cld
jmp
cmp
aaa
cwtl
adc
shlb
popf
in
mov
test
pop
clc
andb
lahf
push
cltd
movsl
test
cmpsl
test
gs
and
mov
mov
mov
repnz
push
xchg
jmp
cmp
js
mov
add
xor
sbb
pusha
repz
out
ret
add
iret
repz
adc
push
bound
cmp
repz
xchg
cmpsb
mov
repz
add
sahf
out
fs
cwtl
lahf
out
sahf
cmpsb
mov
fdiv
or
cmp
repz
sub
dec
pop
repz
repz
cwtl
scas
cmpsl
stc
cmp
loopne
push
stos
and
inc
push
pusha
insb
jbe
sahf
out
adcb
inc
nop
mov
dec
repnz
lea
cmp
daa
adc
adc
push
int
sbb
nop
shlb
adc
movsb
sbb
push
fcoms
sbb
mov
push
outsb
cmp
jl
push
lea
mov
mov
add
jno
aaa
add
bound
out
or
mov
or
add
test
fnsave
imul
adc
xchg
out
push
sbb
sbb
xchg
repz
or
mov
dec
push
push
pop
sahf
mov
and
out
push
and
js
jns
xor
out
jp
cmp
iret
call
out
xchg
adc
aas
inc
popa
inc
sub
and
inc
mov
dec
sbb
addr16
adc
push
mov
add
int3
or
xor
sbb
jns
out
add
xchg
hlt
call
out
aam
enter
jns
sarb
out
mov
out
sahf
out
mov
sahf
js
jo
push
jns
pop
pop
push
push
out
sahf
out
dec
inc
inc
cmp
out
sahf
cmp
sub
sbb
int
jns
or
nop
in
repz
repz
jne
and
inc
popl
shlb
pop
dec
dec
inc
xor
xor
out
add
mov
int3
iret
repz
lods
test
in
lahf
out
lcall
lea
push
add
in
mov
mov
or
das
sub
pop
push
pop
adc
test
test
add
mov
aaa
xor
push
push
add
adc
cmovo
xor
sub
mov
push
adc
ja
pop
shrb
adc
ss
add
inc
xchg
loopne
or
sbb
xchg
popa
out
daa
add
and
xchg
int
fdivrl
xchg
add
push
daa
cmp
push
jo
aad
in
push
mov
inc
add
and
mov
insl
add
das
xor
inc
push
pop
pop
adc
mov
and
adcb
cmp
je
push
jl
mov
add
push
ja
aas
in
dec
enter
mov
sbb
inc
fsubrs
inc
pop
jge
xchg
inc
in
dec
xor
cmp
pushf
bound
inc
int
push
sub
inc
aas
sbb
cmpsl
fmuls
dec
jg
dec
push
dec
pop
je
aas
pop
enter
push
int3
xchg
pop
sub
cmp
cmpsl
mov
fsubl
aaa
or
test
inc
mov
mov
fcmovne
pop
or
unpcklps
xchg
add
imul
adc
xchg
nop
imul
xchg
jne
fldl
insl
inc
dec
les
push
test
jo
push
add
sbb
mov
and
pop
sti
fiadds
iret
jb
cs
in
adc
jbe
ud2
jno
cli
cmp
fldcw
push
xchg
movsl
add
sbb
addr16
pop
leave
in
add
mov
jle
pop
push
sbb
jp
adcb
push
xor
and
pop
aam
push
pop
inc
adc
inc
sbb
jl
xor
scas
outsl
jne
push
push
arpl
cmpsl
mov
and
pop
inc
cmp
loop
pusha
dec
fldt
adcl
inc
movsl
mov
inc
jecxz
xor
sbb
rorb
xor
add
inc
xor
lret
sbb
push
sbb
aaa
arpl
pop
outsl
xchg
mov
add
xor
sbb
and
dec
push
pop
sub
arpl
adc
lea
and
dec
xor
aaa
lea
push
xlat
pop
add
arpl
shll
inc
xor
fbld
sbb
jmp
rcrb
jno
cmpsl
and
sbb
inc
and
jo
sbb
xchg
fcomps
inc
arpl
dec
inc
inc
inc
and
shl
sbb
fmuls
rcrl
xor
movlhps
pop
jno
xlat
popa
arpl
push
dec
and
inc
xor
pop
jo
pop
inc
incl
sub
es
je
cwtl
xchg
aaa
add
xorb
jbe
sbb
add
dec
and
mov
aam
pop
push
inc
or
lahf
popa
add
cmp
pop
incb
inc
cmp
or
testb
cwtl
repz
repz
nop
mov
je
pop
push
pop
dec
inc
jns
out
inc
cmp
xor
out
sahf
out
sub
sbb
repz
sbb
add
xchg
hlt
xchg
sahf
out
outsl
in
push
in
enter
out
mov
test
mov
dec
je
mov
push
fs
push
dec
mov
out
sahf
cmpsl
push
and
add
in
xchg
jns
out
push
enter
test
jns
out
cwtl
nop
mov
js
jo
pop
inc
cmp
repnz
push
adc
lock
repz
shl
int3
mov
cmp
xchg
insb
pop
add
and
xchg
add
dec
pop
dec
jnp
lret
mov
and
or
xor
stos
and
stos
sbb
add
add
push
push
inc
sbb
add
bound
insl
stos
insl
leave
pop
jg
in
pop
enter
nop
bound
jbe
inc
pushf
testb
stos
lcall
cs
mov
push
daa
aas
inc
aam
mov
push
iret
sbb
cwtl
mov
incl
inc
mov
cmp
add
enter
pop
xor
xor
xor
xor
mov
dec
jnp
iret
xor
xor
sahf
xor
push
sbb
sub
push
xor
xor
xor
aaa
fbstp
arpl
fisttps
jecxz
sub
cmp
cmp
cmp
popf
xor
jno
andb
mov
cmp
mov
add
jg
cmp
sahf
fdivrs
bound
cmp
or
jp
xchg
lahf
cmp
mov
das
test
push
and
pop
ds
ljmpw
push
mov
aas
imul
aas
jecxz
call
aas
icebp
xchg
mov
adc
jg
and
sub
xor
or
loopne
mov
shll
out
nop
shl
loope
out
xor
pushl
xor
xor
and
daa
xor
cmp
inc
xor
push
xor
imul
xor
lea
xchg
xor
xor
xor
jg
mov
push
test
mov
xchg
xor
xor
adc
sbb
sbb
gs
inc
mov
sub
sub
xor
xorb
pushl
xor
xor
xor
xor
xor
xor
xor
jg
push
mov
mov
mov
xor
xor
xor
xor
xor
and
pusha
cld
pushl
mov
xorl
out
ss
fbld
jecxz
ss
jp
aaa
cmp
insb
cmp
mov
popa
xchg
leave
jbe
xchg
jg
cmp
sbb
sbb
and
and
sub
xor
xor
test
mov
mov
repnz
cmp
mov
dec
cmp
test
sbb
arpl
jg
ss
dec
cmp
cmp
cmp
inc
mov
xor
idivb
cmp
cmp
add
pop
xor
jbe
cmp
mov
add
cmp
ds
ds
ds
cmp
mov
xchg
xchg
cmpsb
lds
wrmsr
and
cmp
inc
xor
xchg
jle
scas
test
xor
jle
xor
sub
xchg
dec
xor
aam
test
fisttps
xor
xor
cmpsl
repz
xor
ss
push
add
ss
pop
aaa
mov
cmp
lret
outsb
pop
xchg
sub
xor
push
cmp
inc
js
jle
xchg
push
rorl
cmp
loope
into
in
adc
call
dec
ss
cmp
nop
mov
dec
idivb
xchg
jb
cmp
cmp
inc
and
mov
cmp
subb
cmp
push
movsb
push
std
cmp
adc
cmp
mov
loopne
in
jmp
lock
stos
pusha
fsubl
xchg
xor
jp
push
sti
mov
mov
cmp
cmp
cmp
sub
ds
cmp
push
ds
ds
clc
es
sbbb
call
and
dec
aas
push
aas
or
xchg
mov
bound
outsb
xor
jno
test
ret
fnsave
out
xor
inc
daa
lret
sbb
push
xor
icebp
pop
es
cmc
xor
xor
shlb
cmp
fwait
jle
xor
insl
xor
test
cli
xor
sub
push
sbb
popf
xor
ffreep
loope
xor
aaa
jnp
mov
ret
aaa
add
or
cmp
int
lcall
bound
nop
icebp
xchg
cmp
cmp
lret
sahf
inc
cmp
outsl
clc
stos
inc
push
mov
mov
pop
cmp
outsl
jle
xchg
inc
sub
jno
ja
jecxz
psadbw
cmp
cmp
cmp
cmp
cmp
cmp
nop
icebp
dec
push
scas
push
addr16
cmpb
and
out
pop
cltd
cmp
cmp
cmp
sbbb
mov
mov
inc
outsl
daa
mov
dec
xor
lock
xor
adc
pop
push
cmpsb
xor
xor
mov
xor
xor
mov
mov
decl
sbb
das
ss
mov
mov
aaa
pop
out
xchg
jno
dec
pop
cmp
push
mov
lret
lea
fdivp
cmp
cmp
cmp
decl
fisubl
imul
cmp
cmpsb
cld
pop
cmp
cmp
cmp
test
lahf
cmp
aas
iret
aas
loope
push
gs
pusha
add
sbb
sub
cmp
xor
test
xchg
mov
mov
xor
push
push
hlt
push
roll
mov
hlt
xor
filds
ss
aaa
gs
cmp
cmp
cmp
cmp
cmp
and
jle
jmp
out
mov
xor
out
adc
fs
ret
popf
xor
cmp
xchg
into
dec
inc
sub
cmp
jb
pop
sub
mov
lcall
sahf
xor
dec
pusha
or
or
adc
and
je
add
or
jl
sbbb
ja
icebp
cwtl
xor
aaa
mov
insb
lcall
mov
movsb
jle
lret
call
data16
mov
push
add
stc
push
and
test
out
pusha
sbb
sub
push
sub
add
and
test
sub
mov
fcmovb
xor
int3
xor
nop
push
and
mov
lret
sub
call
lock
test
xor
xor
adc
xor
pop
jne
dec
cmp
inc
xor
xor
push
cmp
push
xor
pop
fs
icebp
xor
insb
push
je
pop
push
je
jl
nop
xor
jg
icebp
cmpsb
movsb
xor
rclb
ret
shr
rorb
fsubs
lods
sbb
ja
divb
je
xor
lcall
xchg
cmp
push
inc
jecxz
xor
push
ret
jbe
mov
int3
xor
cmp
dec
add
clts
sbb
jb
pop
daa
dec
pop
cmp
cwtl
out
fsubrs
xor
inc
loopne
mov
push
xchg
xor
xor
mov
shl
add
jecxz
xor
pusha
xorb
push
xor
pop
fiadds
xor
push
and
pop
stos
sbb
daa
jno
push
ret
pop
fmull
mov
push
std
out
xor
dec
xor
data16
jg
jo
sub
xor
jb
xor
jo
gs
cmp
inc
xchg
dec
xlat
pop
jl
xchg
push
lcall
insb
xor
jp
js
js
jl
xorb
mov
xor
xchg
rcrb
test
lods
and
xor
clc
addl
xchg
xlat
mov
arpl
mov
pop
jo
nop
test
and
stc
inc
inc
add
pushl
xchg
aam
incl
inc
call
pop
pusha
fcoml
push
jo
add
add
add
add
or
pop
pop
push
or
or
or
or
or
fistl
adc
adc
adc
push
adc
outsb
xlat
dec
les
or
pop
sbb
adc
adc
adc
add
inc
mov
shll
or
pop
lock
or
xchg
add
add
adc
aam
push
add
pop
xchg
mov
sub
adc
imul
ljmp
sub
adc
xor
adc
pop
and
jmp
jno
xor
inc
mov
adc
xor
cmpb
jb
dec
xor
and
aaa
sbbl
shlb
mov
test
mov
xchg
xchg
mov
sbb
xor
test
add
scas
pushf
into
add
adc
pop
testl
adc
push
adc
adc
cld
push
pop
popa
jno
and
adc
mov
or
xor
lock
stos
and
loope
icebp
mov
dec
inc
jo
mov
mov
rorl
mov
fiaddl
or
adc
stos
js
jg
in
push
jo
or
add
lds
cld
fcomip
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
test
pop
or
lcall
std
movsl
jecxz
cli
pop
mov
mov
clc
cmpl
jg
or
insb
sub
addr16
out
or
push
push
xchg
jmp
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
ja
jmp
orb
int3
lcall
mov
push
pop
mov
pop
pop
fbstp
movb
xchg
sbb
scas
adc
mov
xor
lods
ljmp
movsb
cltd
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
ss
cmp
push
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
mov
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
pop
cwtl
int
arpl
push
out
or
arpl
push
sahf
pop
clc
sti
jg
jno
lock
jg
sti
fildl
xchg
std
sarl
xor
hlt
and
xchg
jmp
sbb
hlt
add
mov
out
pop
jb
mov
incl
or
push
mov
sub
pop
mov
jl
rorl
adc
push
gs
jg
hlt
push
add
jbe
sti
loope
mov
sar
andl
aas
icebp
testb
mov
mov
fadds
in
sub
jno
push
lcall
jg
jg
scas
cld
or
push
inc
sbb
paddb
jg
mov
dec
adc
push
lock
lods
jp
testb
sbb
into
fcomps
jg
lcall
lock
jae
cmp
test
loopne
cli
adc
aaa
xchg
fwait
in
imul
in
add
inc
adc
loope
fisttpll
out
aas
insl
ror
sar
cli
push
push
push
idivl
cmp
sub
pushl
mov
jg
je,pn
sub
jg
imul
mov
mov
incl
jne
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
sar
scas
cmpsb
orb
mov
cmp
mov
das
jmp
xchg
pop
clc
pop
hlt
lret
jg
push
add
lea
jg
gs
std
xorb
cmpsl
jmp
imul
outsl
adc
ret
das
pop
pop
pop
shlb
push
mov
sbbl
jno
or
sarb
std
lcall
push
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
lcall
leave
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
sbb
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
and
fadd
or
mov
nop
enter
add
cld
call
js
cmp
incl
outsl
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
in
sbbb
lahf
ret
fcmovu
ds
cmpsl
scas
popa
in
pop
or
call
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
call
adc
adc
push
jo
pusha
imul
add
mov
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
add
jae
inc
test
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
call
adc
pop
cld
addl
adc
and
insl
rcll
fmull
enter
jecxz
scas
decl
dec
sub
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
testl
mov
jg
mov
aad
test
inc
mov
mov
iret
push
inc
ljmp
jbe
push
sbb
stos
icebp
pop
incb
jno
idivl
push
inc
jecxz
sbb
sarl
adc
loopne
pop
cmp
add
mov
mov
stos
jge
and
cmp
dec
push
lock
mov
aas
mov
fsubrl
lock
incl
insb
push
ret
push
clc
xchg
incl
in
or
and
mov
adc
bound
mov
loope
aas
push
rcrl
rolb
pop
inc
jb
push
sti
or
fistpl
adc
call
jno
pop
lcall
addr16
scas
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
incl
js
aas
divb
iret
dec
xor
fsubr
fistps
lds
fidivrl
mov
lds
jg
stos
pop
add
dec
mov
repz
jmp
sub
jge
xor
lahf
les
sbb
sbb
cld
add
aas
mov
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
pop
dec
shrl
lock
mov
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
lcall
fsubs
shl
dec
jp,pn
adc
sub
mov
or
out
lcall
jg
jg
shl
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
decl
mov
popf
pop
rcr
dec
mov
gs
pushf
lea
jp
cmp
jnp
jecxz
adc
inc
lds
push
pop
adc
imul
aam
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
ljmp
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
and
sbb
cwtl
inc
mov
insb
sar
mov
fists
sbb
lock
in
jmp
pop
jle
out
sbb
aaa
clc
push
std
mov
mov
test
out
xchg
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
fucomp
outsl
sub
hlt
out
rolb
pop
or
or
jnp
adc
lods
leave
inc
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
shrl
cmpsl
lret
pop
in
cmp
out
scas
mov
fidivs
clc
adc
jmp
hlt
dec
sar
ret
mov
sbb
xlat
inc
decl
jo
aas
mov
jg
mov
sub
addr16
sbb
outsl
mov
out
daa
jp
std
adc
cltd
or
mov
ret
mov
das
nop
cmp
das
incb
lock
pop
pop
div
cld
idivl
adc
push
js
fs
loope
xor
shrl
ljmp
cmpsb
loopne
jg
mov
jg
stc
insb
clc
pop
fiaddl
into
out
icebp
mov
loope
mov
cmpsl
popf
nop
sbb
sti
mov
fbstp
inc
dec
cmpsb
bound
outsl
das
fxtract
mov
cmpsb
cmp
pop
lock
data16
decb
adc
aaa
pusha
xlat
xlat
mov
and
call
scas
and
in
loope
mov
or
xchg
inc
add
push
pop
aaa
std
fisttps
dec
inc
sbb
lock
jg
xchg
fimull
ret
ror
cmp
rcrl
aaa
inc
adc
adc
mov
sub
mov
pop
clc
loope
sub
ja
and
dec
add
sbb
rcrl
mov
iret
fdivrl
xchg
lcall
decb
js
pop
imull
sarl
pop
out
xchg
xchg
cld
jno
ret
cmp
arpl
out
inc
incl
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
or
imul
sub
adc
sbb
mov
daa
jmp
faddl
mov
push
jae
outsl
xchg
sub
push
imul
push
lock
stc
push
dec
out
fstpt
mov
enter
repz
pop
add
fsts
dec
adcb
cs
sti
pop
inc
add
inc
mov
nop
mov
lcall
insl
test
and
add
sti
sbb
mov
fwait
jmp
jnp
call
inc
stc
push
lds
stos
jecxz
mov
pop
push
pop
ljmp
pushl
xor
dec
addr16
inc
out
outsl
test
data16
cmpsl
sbbb
sub
lcall
adc
stos
in
icebp
shll
push
clc
je
adc
inc
dec
sub
call
std
xchg
dec
rcrl
pop
jmp
mov
dec
lods
xor
xor
test
movsb
std
das
int3
pop
call
imul
in
or
push
or
loopne
or
xor
add
ljmp
xchg
mov
imul
or
lcall
sub
push
xchg
add
jo
mov
jl
scas
dec
inc
cwtl
loope
push
test
pop
loopne
cmp
stc
push
je
push
or
mov
push
or
aam
shll
in
and
sahf
mov
jno
add
cmpsl
and
xor
lcall
mov
cs
push
arpl
add
xchg
pop
mov
push
inc
or
lcall
xchg
pusha
stc
mov
in
dec
loopne
ja
sub
sub
xlat
test
pushl
sbb
pop
pop
push
pop
or
cs
sub
rol
xor
ljmp
sub
jnp
mov
filds
je
push
cwtl
cld
pushf
jg
fmull
inc
inc
sub
sub
mov
pushl
push
int3
in
mov
jecxz
lret
lock
jl
xchg
or
dec
ljmp
ret
push
push
lret
jmp
dec
add
mov
pop
loope
imul
dec
outsl
out
pop
fmull
inc
es
incl
icebp
cltd
or
cwtl
dec
pop
incl
mov
enter
mov
inc
lock
test
add
pop
ret
adc
xchg
sub
push
ret
lret
mov
shr
loope
loope
xchg
ss
mov
addb
inc
jnp
cmp
jle
cli
clc
xchg
push
scas
insl
sub
cwtl
stc
inc
inc
call
test
gs
cli
dec
jecxz
nop
mov
inc
jecxz
cmp
jmp
dec
jp
incl
jge
jge
js
xlat
sub
mov
jns
dec
lcall
repnz
enter
mov
mov
xlat
xor
xchg
cld
cmp
je
mov
into
sub
in
add
ss
cmc
insl
adc
fildll
sub
jae
pop
mov
fbld
ss
dec
daa
jp
inc
mov
ljmp
mov
inc
outsl
ss
jbe
mov
loop
pushf
and
mov
mov
mov
mov
xor
hlt
cmpl
jo
cmp
ljmp
and
arpl
pop
push
icebp
jb
jo
push
fbstp
imul
sbb
in
in
mov
inc
push
fdivr
xorl
ja
adc
mov
push
stc
sbb
pop
lahf
fstps
pop
imul
lcall
lods
pop
push
les
dec
inc
repnz
lds
fs
push
fsub
in
dec
call
lcall
sbb
mov
xchg
and
addr16
xchg
mov
outsb
incl
aam
mov
mov
rcrl
xchg
mov
leave
mov
and
push
sub
jb
jns
ret
sub
sahf
mov
cmp
mov
pop
pusha
scas
jg
xor
add
call
pop
lcall
mov
test
jge
fldcw
push
jecxz
incb
cmpsb
jle
mov
and
and
pop
mov
push
push
jp
insl
push
jmp
cmp
inc
adc
mov
inc
xchg
in
test
popf
pop
cld
lret
jmp
pushl
lcall
mov
mov
inc
mov
pop
sbb
out
pop
or
mov
pop
movsb
mov
scas
sub
lods
outsl
std
xchg
stos
sub
sbb
cmpsl
incl
mov
out
sahf
push
stos
aas
mov
nop
enter
incl
or
cwtl
jo
loope
mov
pop
inc
or
add
sub
push
mov
jg
ret
push
in
push
pop
pop
sbb
insb
leave
push
test
aam
ljmp
ficompl
out
aam
push
xchg
add
mov
in
and
clc
mov
ffree
std
xor
and
sahf
mov
bound
stc
add
imul
push
gs
jo
movsl
test
jl
jnp
mov
jo
sub
fcomip
add
pop
or
pop
dec
mov
add
repnz
mov
test
and
adcb
rorb
sahf
es
pop
mov
iret
cmp
push
out
pop
jle
and
add
push
icebp
leave
adc
inc
xchg
mov
mov
jmp
aam
in
ljmp
sub
adc
in
mov
xchg
cli
popa
lret
mov
push
ret
sahf
cmp
lods
inc
xor
jo
fidivl
mov
cmc
adc
cmp
jp
push
jecxz
sbb
sub
sahf
sbb
mov
add
pusha
inc
lcall
pop
in
mov
lea
out
pop
stos
inc
outsl
ljmp
shrb
inc
xchg
sbb
hlt
jg
fsubp
test
jmp
add
dec
out
lret
jmp
pop
call
cmp
sub
add
gs
bound
xor
rcll
nop
subl
aaa
std
in
jp
cmc
sub
repnz
insb
shlb
out
sub
add
or
aam
stc
add
hlt
incl
lret
fsubrs
pop
jo
jo
test
jb
cmp
add
sbb
lret
mov
psubq
xchg
shlb
andb
mov
pop
push
jbe
cmp
mov
pop
push
adc
jmp
cwtl
sbb
cs
outsb
mov
mov
iret
pop
sub
pop
add
sub
jmp
pushl
xor
push
mov
movsl
push
rcll
addr16
fcomp
pop
ljmp
scas
sub
pop
mov
int3
out
push
push
rclb
and
mov
fcomip
incl
jmp
add
shlb
pop
lret
shll
ds
mov
pop
adc
divl
adc
lahf
pop
fsubl
and
dec
movsb
mov
inc
or
shlb
addr16
dec
lea
add
sub
rcl
les
pop
in
out
xor
out
sub
pop
sub
int3
push
cmp
sub
fcomip
sti
pushl
out
push
repnz
movsb
cmp
mov
rol
jmp
stc
ret
roll
incl
jb
xchg
jbe
data16
pop
out
push
popf
inc
into
mov
out
loope
adc
int
stos
subl
cmp
xor
mov
jle
fdivr
ljmp
cltd
test
xchg
mov
bound
es
dec
hlt
sbb
jmp
stos
cmp
movb
int
mov
xchg
cmp
fldcw
sbb
mov
es
decl
dec
jl
lcall
mov
mov
mov
push
incl
outsb
insb
and
out
add
cltd
or
xor
lcall
jg
cmpsl
adc
dec
xor
adcb
mov
xchg
lcall
shlb
repz
cmpsl
cmp
stos
outsl
loope
pop
mov
dec
dec
jecxz
stos
and
push
add
call
adc
xchg
inc
popa
xor
adc
cwtl
inc
pop
sub
insb
mov
or
pop
jne
enter
ljmp
out
pop
or
dec
aam
insb
inc
jo
inc
loopne
push
loopne
mov
cltd
aad
call
loop
or
adc
inc
jg
repz
push
mov
adc
cmp
inc
je
out
gs
out
jb
jmp
insl
cmp
rcrb
or
iret
xor
ss
test
and
out
or
adc
clc
jmp
sbb
in
and
shll
mov
sub
icebp
ljmp
sbb
test
mov
pushl
fmuls
lea
cltd
mov
gs
aad
scas
shrb
fcompl
xlat
adc
in
jmp
imul
loop
dec
ds
xchg
sbb
xlat
stos
dec
es
addr16
pop
mov
xchg
ss
mov
pop
inc
and
mov
push
mov
popa
pop
xor
dec
lock
or
and
hlt
lea
rclb
dec
push
xor
xchg
daa
insb
add
int3
dec
push
xchg
into
pop
cld
sbb
sub
adc
jno
cld
movsb
pop
or
push
insl
call
adc
loopne
add
das
pop
lock
incl
mov
fnsave
movsl
fisubrl
adc
xchg
ljmp
fs
add
sub
popf
inc
or
sbbl
mov
int3
mov
inc
rol
ds
push
cmpsl
cli
fadd
mov
push
dec
cmc
and
incl
lds
gs
xchg
fsubs
or
mov
subl
push
pop
add
mov
lcall
dec
adc
dec
jl
sbb
jg
xchg
inc
sub
test
add
ljmp
clc
inc
mov
cli
dec
jge
aam
fnstcw
jae
mov
mov
cld
cmp
mov
ja
call
mov
xchg
scas
jne
adc
mov
inc
jbe
add
pop
push
jns
adc
mov
sub
xor
or
in
cmpb
inc
mov
push
std
ljmp
lods
mov
fsubr
bound
pop
inc
les
mov
mov
jg
pop
cmp
ds
dec
loopne
inc
and
cmp
sarl
fistps
lahf
stos
or
and
in
or
xchg
hlt
test
pop
cld
ljmp
xor
and
xchg
pop
jne
js
lcall
and
lcall
pop
scas
inc
sub
and
ret
mov
mov
xor
sahf
movsl
insb
jge
cmp
rcrl
xchg
add
xchg
sub
jg
lock
pop
mov
insl
push
dec
test
add
dec
imul
dec
adc
stos
xor
fwait
ljmp
mov
outsl
jae
jnp
incl
movsl
inc
dec
std
cmp
sub
mov
sbb
sub
cmp
cmp
or
int3
or
sbb
aam
je
sbb
es
movsb
push
mov
mov
mov
pop
out
lcall
pop
inc
xchg
sub
test
orl
scas
jo
jo
inc
insb
lcall
nop
pop
or
mov
inc
jns
cld
add
cmp
je
outsl
fdivrl
mov
inc
push
mov
push
orb
jns
mov
fwait
inc
dec
lock
lds
mov
mov
push
fidivs
dec
lcall
stos
or
inc
pop
push
lods
mov
inc
jbe
sub
xor
pop
jecxz
ljmp
mov
sbb
add
xor
popf
lea
cmpsb
inc
or
push
nop
jmp
out
sarl
dec
shl
mov
in
hlt
testl
dec
mov
mov
aam
add
push
xchg
and
movsb
sbb
pop
and
decl
pop
rorb
mov
scas
subb
je
movsb
add
mov
ret
sbb
adc
jo
and
lcall
call
cmp
icebp
lock
ffree
js
jns
call
pop
scas
test
incl
push
jmp
xchg
mov
xchg
mov
mov
rolb
lcall
ljmp
cmpsb
push
dec
ds
movsb
popf
pushw
or
mov
ret
test
dec
mov
push
mov
jle
lcall
push
outsb
jns
lcall
fldcw
loop
fidivs
sbb
outsb
add
mov
repnz
sbb
in
test
cwtl
mov
iret
repnz
mov
mov
add
pop
and
dec
and
shrb
decl
add
add
jns
cltd
popw
jne
jle
jae
push
ss
outsl
scas
shll
int
sti
cs
les
mov
ja
and
xchg
out
fdiv
cmp
jp
call
adc
inc
repnz
into
pop
mov
cld
mov
cmp
inc
adc
int
jl
push
mov
mov
push
aam
or
leave
lea
inc
and
push
xor
roll
cmovp
bound
add
ds
pop
aaa
int
nop
mov
adc
pop
adc
cltd
mov
jns
div
fwait
xchg
call
pop
std
enter
push
stos
bound
iret
push
dec
jle
dec
lret
popa
bound
hlt
lcall
lcall
lcall
push
lock
sahf
mov
ja
das
daa
outsb
adc
daa
dec
arpl
xchg
popa
mov
sbb
add
andl
xchg
xor
xchg
scas
sub
imul
or
add
fisubrs
mov
lcall
dec
addr16
lcall
pmaxub
daa
and
inc
iret
dec
jmp
jmp
cvttps2pi
sti
fdivr
jmp
sub
pop
pop
xchg
jge
add
insb
shll
gs
shll
mov
sbb
jmp
inc
nop
dec
lret
popa
cli
icebp
test
shll
ja
and
pop
nop
dec
decl
inc
lock
test
lods
dec
lahf
fdivrl
cmp
mov
jnp
sbb
jbe
add
jg
incl
das
push
stos
add
inc
mov
movsl
xor
and
ss
sub
incl
push
fstps
mov
or
add
adc
pop
in
or
scas
sbb
pop
call
cld
data16
popf
mov
xor
inc
cmpsb
jg
scas
testb
add
dec
les
decl
ljmp
dec
mov
testb
and
sarb
loope
pop
test
call
mov
clc
push
inc
mov
out
push
fidivl
scas
dec
loopne
inc
push
mov
sbb
mov
sbb
nop
data16
xchg
outsb
icebp
fisubrl
int3
pop
or
mov
fwait
mov
loopne
call
xchg
andb
cli
mov
sbb
pushl
jns
pushf
inc
in
lret
inc
ud1
jnp
mov
outsl
xor
cli
ljmp
xor
jp
adc
shlb
je
mov
cmpsb
dec
decl
clc
jno
lret
mov
push
or
scas
inc
aas
xor
fsubrs
dec
mov
pop
in
pop
cmp
idiv
in
fldcw
cld
jle
subl
add
ss
inc
jb
jb
lock
pushl
jnp
inc
push
cmp
aad
jno
sahf
jecxz
test
aas
clc
dec
dec
outsl
lods
outsl
out
movsl
xchg
aam
jno
xchg
sbb
mov
xor
outsb
xlat
rcrb
pop
cmp
scas
clc
jo
pop
popa
xor
stc
ret
sbb
mov
or
pop
fsubrs
decl
or
addb
aaa
out
outsb
psllw
ljmp
jmp
int3
lcall
sub
das
repnz
mov
outsb
cmc
insl
daa
pushf
pop
or
std
filds
pop
cmp
out
sbb
jmp
add
out
or
out
lahf
jl
sbb
movsl
fwait
ret
jecxz
mov
pushl
lods
aas
ja
inc
stc
mov
dec
repz
pop
cld
jno
add
fisttps
mov
pusha
and
flds
pushf
mov
scas
cltd
mov
jg
cmp
inc
inc
jnp
lea
jnp
imul
push
xor
pop
idiv
jmp
xor
cwtl
popa
stos
or
sti
gs
test
mov
xchg
adc
jmp
push
ljmp
push
push
push
mov
aas
aaa
lret
loopne
out
das
roll
or
sbb
add
ret
pop
mov
scas
jmp
sbb
test
incl
sub
ror
into
sbb
pop
stos
loopne
add
inc
sbb
pop
cs
sbb
ljmp
andb
cs
xchg
sbbl
adc
mov
pop
aas
mov
or
decl
xchg
xchg
jecxz
lock
dec
ds
mov
xchg
dec
test
push
incl
imul
xchg
imul
pop
inc
mov
pop
add
cmp
jmp
lcall
sub
cltd
inc
int
ret
notl
cmp
in
cld
xchg
call
cld
mov
mov
or
mov
stos
xlat
mov
pop
hlt
jmp
outsb
int3
mov
mov
push
sub
xlat
adc
rcrb
repnz
ret
push
idivl
call
outsb
inc
frstor
popf
mov
mov
cs
adc
inc
cmovb
push
cmpsl
push
sub
insb
add
cltd
leave
fmul
add
push
incl
xchg
adc
xorb
aad
cmp
push
dec
xlat
addr16
ss
stos
sbb
sahf
mov
pop
pop
popa
pusha
dec
adc
daa
mov
mov
sbb
fistpl
pushaw
push
jb
ret
xchg
cmc
lods
scas
fcom
jmp
cmp
stos
imul
adc
lret
lcall
mov
ret
clc
rcll
bound
xor
call
cmpsl
add
xor
xchg
jnp
pop
xchg
mov
dec
sti
push
sarb
push
xchg
jmp
pop
arpl
jnp
jge
jmp
add
popa
mov
flds
mov
xchg
arpl
cmp
inc
insl
scas
fldenv
test
andb
aaa
in
clc
mov
xchg
pop
dec
insl
lahf
fdivr
jge
push
out
jmp
jno
xor
mov
rcr
ret
out
sbb
mov
pop
fucomip
aad
xchg
das
es
cmp
cmpsl
jg
shl
mov
adc
mov
cld
adc
pop
arpl
loope
or
outsb
dec
push
mov
pop
xchg
scas
or
xchg
or
fldl
pop
popf
bound
or
pop
fdivrl
xor
push
divb
adc
ss
mov
lahf
loop
adc
out
mov
lods
mov
cld
mov
lcall
add
dec
lcall
mov
arpl
mov
mov
in
mov
jl
jl
jmp
shll
sub
add
gs
mov
xchg
push
cmp
lcall
mov
xchg
pop
popa
and
push
orb
shrl
call
in
imul
pop
pop
lret
jmp
xchg
aas
sub
add
stc
add
jg
ljmp
jmp
stos
bound
pop
push
mov
xchg
aam
sbb
pusha
gs
sub
cld
rol
jg
lcall
shl
lods
leave
sub
and
ficoml
xorb
incl
sub
sub
rcll
mov
mov
call
jmp
lahf
fstl
jle
ss
dec
ficomps
inc
mov
or
xchg
decb
int
pop
mov
lea
lcall
leave
add
dec
sub
rcrb
lret
fistpll
or
aas
mov
push
push
punpckhdq
fisubs
mov
das
cmp
sub
mov
xchg
dec
in
pusha
xor
out
sub
dec
mov
rclw
mov
call
in
fcomp
adc
jae
push
or
jge
mov
cltd
lcall
xor
mov
inc
mov
pop
sti
jmp
neg
ja
sbb
lcall
and
aas
insl
xchg
push
sub
inc
incl
dec
ret
icebp
popa
mov
jae
int3
and
pop
jp
aam
leave
je
std
cmp
pop
pop
cmp
lea
inc
test
decl
sbb
adc
pop
inc
xor
in
inc
inc
jne
xor
sbb
scas
mov
mov
pop
jbe
mov
ja
and
pop
jbe
push
out
in
bound
xor
call
push
pushf
inc
mov
push
fwait
adc
xchg
rolb
outsl
repnz
call
mov
js
clc
in
sahf
add
bnd
xchg
in
loop
jp
sub
in
dec
inc
add
scas
cli
dec
and
ret
movsl
call
pop
inc
roll
test
mov
or
decl
sbb
sbb
pop
and
and
cmp
fprem
or
sub
ljmp
decb
dec
lds
inc
icebp
mov
in
cmpsb
pop
data16
outsl
push
decl
rcrl
fsubs
bound
inc
mov
sub
fildl
pop
cli
incl
cmp
test
fstpl
push
es
imul
ja
call
cs
and
fisubrs
fimuls
dec
dec
push
jecxz
shll
in
ja
leave
xor
xor
cmp
lea
lcall
orb
mov
adc
xchg
lcall
outsb
xchg
clc
aaa
stc
dec
pop
pop
xor
adc
daa
ljmp
es
dec
es
pusha
pop
cmp
pop
cli
ret
repnz
push
fisubrl
mov
arpl
or
outsl
ja
insb
out
hlt
das
cmp
xchg
mov
ds
adc
dec
call
incl
outsl
xchg
loopne
adc
mov
xor
insb
aaa
bnd
je
vpavgw
add
jmp
push
jmp
cli
fiaddl
or
scas
loope
fdivrs
xchg
shrb
mov
loope
dec
loope
and
pop
cs
fcomip
xchg
add
imul
ret
xchg
cltd
jnp
mov
push
pop
dec
push
push
inc
ds
call
xchg
mov
or
or
daa
movb
lods
sbb
mov
scas
stos
sub
sub
dec
imul
testb
mov
sbb
jb
movsl
inc
mov
call
cmp
insl
test
sar
int3
fistpll
mov
js
mov
shlb
inc
add
clc
ljmp
sub
and
adc
enter
push
arpl
and
in
mov
ljmp
mov
pop
vpmacsww
and
mov
xchg
loope
cmp
pop
inc
and
mov
sub
stos
cmp
inc
add
mov
movsb
aad
inc
jl
aas
xchg
orb
add
dec
cmp
add
xchg
and
das
in
outsl
mov
pop
sub
call
cmpb
lods
lret
dec
rorl
jl
jmp
adc
pop
inc
cwtl
ljmp
sti
pop
mov
pushl
out
push
sub
enter
jae
push
cmc
xchg
loopne
test
or
mov
ffreep
and
jle
mov
sbb
out
jmp
aam
add
jg
movsl
sbb
out
clc
or
mov
out
test
int3
push
jo
gs
pop
leave
or
mov
pop
dec
push
aam
ljmp
int3
sub
cmpsb
or
cmpsl
jae
jno
rolb
sub
loop
add
int
call
or
jge
push
add
aas
jbe
ljmp
adc
das
sbb
fidivrl
mov
test
pushl
jbe
add
popf
or
jl
aaa
sahf
rorl
or
inc
in
sbb
out
ss
dec
leave
popf
je
pushf
pop
sbb
mov
incl
les
rorb
xchg
mov
cmp
cmp
pushf
xlat
mov
stos
leave
inc
mov
xor
push
inc
cli
mov
sub
aam
ljmp
test
jbe
jp
jae
test
test
xchg
cmp
push
fwait
jmp
jb
jne
out
idiv
ret
cmpsb
popa
lret
clc
pushf
rcrb
cltd
mov
and
push
jl
adc
hlt
lods
les
int
mov
lods
faddp
decl
mov
inc
dec
xor
out
rcrl
jg
lods
popf
xlat
jp
ljmp
shlb
mov
dec
cmp
sbb
push
add
push
mov
call
xor
test
adcb
sbb
sahf
xor
aaa
ljmp
call
ljmp
add
in
ja
test
xor
adc
pushl
int
add
jecxz
lods
xchg
es
add
scas
ds
ljmp
sbb
adc
popf
clc
call
movsl
in
dec
adc
jp
lahf
decl
jg
std
mov
jl
jecxz
xlat
sub
js
dec
repnz
call
or
rcr
xchg
ds
test
cmpsl
sbb
dec
pop
cltd
out
out
rcrl
xor
fbstp
push
sbb
sub
push
bound
mov
rorl
sbb
jmp
xchg
imul
gs
jb
push
xchg
sub
jge
add
arpl
inc
shlb
call
push
mov
nop
rolb
push
pop
jno
popf
and
push
xchg
sbb
test
inc
adc
stc
aas
sub
sub
ret
ret
fimull
mov
fwait
ret
mov
ds
clc
cmp
jg
inc
jno
into
cld
mov
std
adc
shll
mov
or
popf
and
fistpl
push
fcomip
jmp
sbb
popf
push
mov
imul
push
incl
cltd
into
mov
imul
or
mov
push
push
lcall
pushl
pop
mov
xor
inc
aam
and
mov
mov
fsubr
fiaddl
stos
inc
push
and
jns
push
icebp
xchg
mov
xor
ljmp
cmp
mov
inc
add
scas
mov
push
nop
jg
mov
fisubrl
adc
and
cmp
add
jmp
pop
dec
aam
lcall
fcoms
mov
hlt
mov
push
xchg
js
enter
cmpsl
dec
stos
dec
test
decl
xchg
insb
sub
in
pop
cmp
adc
mov
pop
inc
sbb
scas
fs
dec
xlat
lcall
xchg
out
or
xchg
sar
and
mov
jp
ljmp
inc
add
dec
lods
mov
lods
in
cmpsl
sbb
mov
and
out
incl
pop
es
sbb
leave
pop
xor
inc
dec
mov
cli
dec
popa
jecxz
fyl2xp1
sbb
movsl
xchg
stos
lret
das
sarb
add
add
stos
subb
push
lcall
xor
cmc
hlt
push
orl
test
arpl
adc
inc
pushl
sbb
arpl
sahf
cmp
test
das
popf
std
mov
xchg
mov
push
push
inc
inc
ljmp
mov
iret
mov
jg
xchg
cli
ret
and
pop
inc
lds
push
mov
jb,pt
psubsw
jmp
add
lcall
jecxz
in
in
jno
xor
aam
out
xor
loope
idiv
decl
bound
push
test
adc
sbb
cltd
insl
sbb
push
ja
push
mov
and
ljmp
xor
sarb
int3
ficoml
ds
aaa
imul
test
sub
jge
lret
add
or
movsl
xor
repz
adcb
xchg
js
data16
clc
bound
test
scas
mov
jbe
sar
push
xor
pop
mov
mov
adc
ja
mov
movsb
dec
popa
mov
addb
cld
mov
jecxz
incl
pushf
mov
xchg
pop
jecxz
xor
mov
xchg
addr16
inc
lahf
xchg
test
rorb
cmpsl
out
js
dec
addb
outsb
inc
fists
movsb
mov
call
psrld
adc
push
jl
inc
loope
jns
jp
das
mov
mov
lea
push
ljmp
imul
out
or
inc
lret
cmc
cmp
fstpl
js
cmp
repnz
jg
and
js
and
movsb
test
sub
testb
jmp
int
aam
cmp
cmpsl
add
pop
dec
xor
xchg
test
jns
push
fnop
mov
jmp
xorl
push
xchg
sbbb
jmp
dec
js
js
mov
dec
pop
fs
lret
out
out
sbb
sub
mov
cs
jg
inc
and
cwtl
cmp
lcall
test
mov
pop
pop
or
sub
sub
jmp
cmp
incl
xchg
test
add
jb
jle
inc
xlat
test
inc
mov
jmp
int
lcall
push
and
add
fstp
fisubrl
mov
lea
mov
lcall
xor
xchg
repz
das
xchg
shrl
jns
jbe
ds
push
incl
jp
xor
xor
js
sbb
dec
sbb
inc
mov
call
jne
call
add
fistpll
mulb
je
ret
out
sar
jmp
ljmp
out
cwtl
xor
add
mov
repnz
cmp
or
incl
rcll
cli
rcr
inc
jnp
lcall
pop
leave
mov
sahf
sahf
nop
jae
fisttpll
pop
inc
fstl
pushf
sti
daa
sbb
sahf
mov
outsb
push
mov
popf
or
mov
popf
sub
fisubrl
ljmp
mov
jb
arpl
scas
xchg
lock
loope
push
shrb
jns
add
push
out
mov
cmp
aas
ror
mov
popa
push
sub
imul
or
xor
je
dec
jno
mov
push
add
in
pusha
mov
sar
stc
inc
out
add
cmp
mov
jge
cmp
jecxz
ret
test
pop
inc
iret
cmp
fldl
dec
xor
shlb
cmpsl
fistpll
xchg
std
mov
push
scas
cmpsb
mov
xchg
push
bound
xor
decl
mov
dec
and
out
cmp
mov
mov
sub
xor
lods
mov
sbb
cmp
pop
sbb
pop
jno
fidivrl
or
int
jecxz
dec
cwtl
xchg
test
mov
fs
inc
and
inc
adc
pop
test
out
test
lret
decl
leave
fldt
nop
pusha
mov
inc
aaa
sbb
mov
scas
jmp
cmp
ljmp
add
out
sub
in
xor
pop
cmp
call
add
loope
clc
fldcw
cmp
pushw
push
push
lret
xlat
subl
jmp
push
fcomip
mov
push
std
notl
xchg
sub
in
adc
add
jmp
dec
popf
sbb
mov
test
xlat
fdivrl
cmp
fisttpll
lret
push
loop
loop
mov
lcall
decl
xor
add
inc
cmpsb
call
fisubl
sub
jnp
test
lcall
lcall
jb
lcall
xor
ror
jb
lods
cmp
stc
shl
push
sarl
inc
jge
cmp
add
adc
scas
fstpl
call
inc
jge
mov
inc
les
fisttps
sahf
push
out
cltd
repnz
cmpsl
add
hlt
mov
cwtl
and
mov
sahf
arpl
adc
clc
shll
xchg
push
sub
inc
jb
imul
scas
shrl
mov
cmp
pop
xchg
outsl
mov
xchg
in
lcall
jbe
push
cmp
mov
push
lea
lock
es
mov
xchg
sbb
cmp
cmp
push
mov
mov
dec
ret
push
and
add
xor
mov
jg
adc
mov
in
addr16
pop
add
shll
jbe
rol
aas
outsl
or
or
mov
pop
xchg
call
or
xchg
cs
xchg
dec
jmp
sbbl
sbb
sub
jmp
in
cmp
mov
cmc
add
jno
or
cmp
dec
iret
jg
mov
sbb
dec
add
enter
lock
inc
pop
ret
mov
lcall
or
pop
xor
push
push
imul
pushl
stc
subb
jmp
push
fwait
dec
loop
in
mov
lods
sbb
mov
dec
icebp
mov
loope
xchg
ljmp
movsl
mov
add
jmp
or
decl
nop
xor
pop
aad
adc
cmp
pop
inc
sub
ljmp
xor
push
mov
mov
xlat
pop
je
pop
xor
lcall
cmpxchg8b
jmp
mov
sti
xchg
aas
xor
das
add
mov
mov
call
sbb
xor
mov
ror
adc
fsubrs
test
call
jnp
dec
cltd
dec
nop
stos
xor
xchg
fsubrs
pop
cmpsb
add
loope
and
sub
lcall
fisubrs
jg
push
mov
movsb
dec
add
xor
cli
and
imul
xchg
or
cmpsl
xchg
dec
and
stos
shl
pusha
and
fldenv
lahf
lock
call
inc
xchg
push
into
push
aam
popf
cltd
jecxz
aad
stc
mov
mov
pop
rcr
inc
not
test
jmp
mov
or
mov
pop
out
data16
ret
loopne
getsec
leave
sub
jne
jne
inc
or
sti
es
dec
test
mov
ret
mov
pop
ret
and
pop
pop
mov
cmp
fisttps
movsb
pop
popa
decl
adc
dec
std
fs
mov
aas
aad
pop
outsl
popf
xchg
mov
shll
mov
lods
or
clc
or
testl
lret
cs
movsb
mov
add
out
call
sahf
mov
mov
jmp
jnp
push
dec
leave
dec
push
cmp
xor
pusha
pop
andl
sub
shlb
dec
lds
mov
adc
decl
push
or
dec
lahf
mov
fstps
cmp
cmpsl
outsl
dec
and
fwait
and
inc
movsl
out
lods
movsb
jne
pop
jae
ss
decl
push
out
pop
jno
pop
nop
inc
and
jge
ja
icebp
stos
push
lock
call
imul
sbb
jmp
sarl
xor
add
mov
rcll
cwtl
mov
adc
rcrl
movsb
push
outsb
outsb
adc
call
sbb
int3
nop
pop
jge
outsb
add
aas
fiaddl
or
sbb
ljmp
fistl
and
repz
icebp
mov
pop
mov
or
dec
shlb
ljmp
fists
dec
mov
iret
mov
lcall
dec
leave
push
lcall
inc
adc
inc
push
cmp
nop
ficomps
xchg
pmuludq
sub
incl
sub
cmp
pushf
jl
fwait
mov
cmp
dec
lea
mov
call
pop
pop
push
movsb
mov
imul
push
sbb
shll
add
xchg
cwtl
push
mov
fwait
sbb
shll
mov
js
ljmp
add
incl
testl
fisttpll
out
clc
xchg
sbb
mov
ret
arpl
sub
push
je
repz
in
std
int3
sar
ljmp
pop
inc
imul
nop
nop
mov
lret
mov
lods
push
nop
outsb
pop
sub
jb
jmp
fs
pop
mov
decl
jne
push
xchg
cld
mov
push
push
and
js
call
mov
mov
leave
pushl
mov
std
cwtl
in
insb
mov
inc
sbb
push
lea
sbb
ljmp
andb
mov
les
aam
cwtl
sub
lods
cmp
addr16
dec
inc
mov
sbb
mov
xchg
or
ret
into
insb
sub
mov
je
int3
cld
inc
cmc
pop
movsb
pop
sbb
cs
xor
loope
rcl
or
lods
jno
mov
lods
lods
mov
incl
in
mov
cltd
in
add
ljmp
add
sbb
push
push
test
ljmp
clc
inc
mov
xor
mov
jge
inc
popf
mov
out
mov
mov
mov
call
in
ficompl
mov
nop
ret
loopne
jne
arpl
inc
pop
les
and
xchg
cmp
sub
pop
pushf
psadbw
daa
pop
push
fwait
adcb
inc
call
ss
fdivrp
lds
rcl
jecxz
icebp
std
popa
mov
or
sub
add
xor
sub
lods
jmp
add
push
lcall
imul
ficomps
pop
sub
in
add
mov
fstpt
call
mov
push
adc
mov
test
jge
clc
ret
iret
jge
fldcw
lods
sbb
incl
push
push
push
subb
cli
ljmp
inc
fldenv
imul
lock
std
out
mov
neg
popa
mov
arpl
mov
push
dec
movsl
sbb
xor
inc
dec
mov
mov
lretw
clc
jae
jb
je
fidivrs
inc
out
add
mov
fwait
add
adc
movsb
leave
sbb
lods
loop
mov
xor
call
push
sub
pop
add
sbb
dec
mov
xchg
sbb
cmp
call
imul
xchg
fstpl
jle
bound
mov
inc
cmp
call
outsl
outsb
fisttpl
mov
lahf
int3
int3
fsubl
jmp
loop
push
mov
and
test
pop
cld
fcomi
nop
push
adc
sbb
call
aad
fcompl
call
jo
lds
adc
movsb
mov
in
inc
data16
jno
mov
pushl
dec
push
js
mov
xchg
add
cli
pushl
stos
and
into
stc
sub
or
push
inc
sti
jl
lcall
inc
js
pushf
loop
xchg
dec
mov
sub
add
dec
xlat
xor
xor
mov
ljmp
iret
aas
cmp
mov
sub
popa
sbb
outsl
out
popf
push
jg
out
cmpsl
mull
cwtl
lea
inc
inc
jae
add
int
xchg
xor
pop
jno
push
xchg
sub
incl
test
xor
add
cmp
andl
jnp
in
xor
incl
rcll
sbb
sub
sbb
daa
std
negl
stc
andl
sub
mov
and
pop
ficoms
outsb
popf
mov
test
pop
mov
cwtl
stos
cmpsl
repz
cmp
call
imul
aaa
outsb
repz
imul
ds
frstor
push
inc
xor
push
adc
sbb
cmpsb
and
stos
mov
mov
call
imul
push
fs
dec
out
out
rcr
pop
repnz
lret
xchg
cli
repnz
pushl
jne
repz
fldl
das
cld
out
aam
shlb
aam
loop
mov
jmp
sbb
sahf
rcr
repz
shll
mov
repnz
sub
dec
adc
or
sub
aad
lods
popa
sub
pop
das
shrb
and
push
mov
bound
std
pop
jecxz
jne
cmpb
or
and
mov
out
jg
jmp
pop
cmc
decl
dec
fbld
mov
mov
cli
hlt
ss
decl
les
imul
push
inc
cmpsb
loopne
addl
jns
pop
ljmp
push
aam
or
jmp
xchg
mov
inc
push
imul
test
xchg
rcrb
and
jbe
sub
repnz
gs
subl
pushl
push
rorb
lods
push
fisttps
or
cmc
das
mov
or
mov
adc
xor
xchg
jae
mov
ja
popf
xor
mov
ret
out
lret
or
iret
pop
dec
adc
push
inc
ss
inc
or
and
mov
inc
adc
mov
sub
js
push
xchg
pushl
mov
cmp
pop
out
test
stos
fwait
in
mov
push
mov
shrb
pop
xchg
mov
mov
or
mov
jmp
push
subl
ret
prefetch
or
mov
decl
outsl
cmp
sub
lcall
push
and
cwtl
xchg
adc
leave
clc
cmc
stos
lcall
out
leave
jne
pop
sub
out
sar
jmp
jns
add
mov
lods
out
fidivrl
pop
mov
or
ja
mov
mov
ret
ljmp
das
adcb
fwait
loop
sarb
pushl
test
cmp
sub
ret
xor
popa
sub
fldenv
lcall
mov
xchg
sbb
jmp
cmp
push
js
leave
mov
fwait
inc
jge
mov
pusha
cmp
sbb
mov
enter
push
xchg
jmp
sub
std
sbbl
popf
loopne
repnz
push
jo
and
xor
rcrl
je
into
push
mov
stos
sarb
arpl
jmp
inc
int3
icebp
push
mov
loope
stos
or
sub
ljmp
in
ret
mov
xchg
pop
sbb
xchg
mov
push
adc
fcomps
dec
push
jne
loop
push
dec
cs
fcoms
shll
test
jno
sti
jmp
out
cli
lcall
sub
cmp
int3
jae
and
mov
or
sbb
or
repnz
bswap
push
icebp
in
xchg
mov
cltd
and
das
sub
out
sarb
lcall
cwtl
inc
iret
arpl
or
call
fnstenv
pusha
cmp
test
pop
cwtl
cld
mov
push
aaa
mov
cltd
pop
adc
data16
sbb
pop
jmp
decl
mov
fs
xor
divl
test
xor
jl,pt
xor
add
fwait
dec
sarl
scas
js
or
out
out
lcall
ljmp
inc
add
paddb
xchg
cwtl
ljmp
push
and
adc
mov
xlat
inc
test
cmpb
sar
jmp
jl
hlt
ret
lea
push
mov
mov
sbb
mov
lods
sub
mov
fcomip
in
sub
data16
inc
cwtl
insb
into
mov
mov
or
mov
call
dec
shll
xor
dec
dec
in
mov
inc
add
or
push
call
int
or
push
mov
movsl
scas
mov
push
clc
jae
jbe
mov
mov
pushl
jmp
adc
cmp
arpl
movsl
xchg
icebp
mov
sbb
cmp
adc
mov
fisubrs
sti
mov
mov
add
xchg
add
out
mov
stos
mov
decl
xchg
imul
dec
fs
and
stc
int3
mov
je
lcall
ljmp
clc
lret
andb
lea
imul
xor
or
pop
repz
pushl
jo
xor
in
sub
fistl
pushf
idivb
cmp
ss
add
pop
outsl
sbb
incl
loop
test
mov
push
nop
mov
mov
mov
cmpsb
mov
cmp
lea
jne
mov
xor
fidivrl
lcall
push
mov
out
and
shrb
add
jmp
inc
cmp
shl
dec
addb
mov
outsl
inc
jne
lods
and
ret
cmp
cli
lret
pop
xchg
add
jg
mov
push
xchg
stos
mov
cs
bound
cltd
lods
sti
scas
cli
call
pop
inc
das
mov
push
cmp
push
push
add
sub
call
jp
push
push
gs
stos
push
lds
xchg
jg
arpl
test
js
lcall
xor
sub
call
or
repnz
push
push
sub
push
adc
xor
ss
jmp
fucomip
repz
pushf
xchg
sahf
adc
aam
pop
outsb
andb
mov
dec
xchg
pop
xchg
sbb
or
ljmp
outsb
dec
pop
pop
loope
imul
fucomp
mov
data16
incl
cld
sub
test
dec
lea
ret
aam
xor
adc
into
cmp
ljmp
lock
xchg
push
sbb
sarb
adc
mov
ss
add
ljmp
rorb
adc
cmpsb
rcrl
push
loope
gs
jecxz
out
mov
aaa
std
mov
sbb
jle
cmp
cmovbe
cwtl
adc
aaa
jg
or
fcmovbe
inc
and
pop
call
in
dec
mov
adc
call
xchg
loop
mov
mov
cmc
inc
fs
mov
insl
subb
sahf
shlb
push
call
mov
mov
add
ljmp
ds
sbb
mov
ss
mov
lock
icebp
xor
rclb
stos
in
ss
push
mov
push
mov
mov
lahf
and
jnp
fcompl
xor
popf
jne
out
outsl
or
sub
inc
decl
ja
xor
sub
test
ljmp
sbb
xchg
loop
imulb
outsl
dec
xor
and
call
inc
out
out
clc
decl
scas
jg,pn
mov
iret
ds
pop
rorl
sar
incl
test
stc
aaa
mov
data16
dec
jo
test
sahf
dec
push
mov
insb
mov
aaa
cld
add
or
scas
call
mov
add
sub
sbb
mov
sarb
incl
sbb
jge
andb
push
dec
inc
ss
fldt
and
lcall
insl
lock
inc
push
in
pop
sahf
sbb
and
fistps
adc
fsubl
in
inc
ja
adc
jp
mov
add
lock
push
push
push
mov
imul
cli
and
pop
sbb
or
sub
and
push
add
stos
lcall
jmp
or
sub
mov
scas
aas
xchg
sub
leave
mov
and
cs
fcomip
mov
push
das
ficompl
push
lock
sub
je
push
pop
out
lods
pop
insb
fdivr
mov
or
mov
sti
mov
push
gs
loopne
enter
pop
xchg
aad
jno
fcomip
dec
sti
and
shll
push
xchg
push
adc
dec
add
cwtl
dec
push
incl
adcb
dec
ficomps
push
in
faddl
mov
mov
cltd
push
adc
push
dec
mov
lret
rcll
js
movsl
sub
mov
sahf
outsl
lcall
jns
push
aas
pop
and
jecxz
xchg
icebp
mov
sub
call
std
sahf
stos
cltd
pop
cmc
jge
bound
pop
mov
dec
aaa
sbb
adc
pushl
push
adc
mov
xchg
into
mov
out
fdivs
je
incl
dec
fstl
test
jo
lods
sub
sub
jnp
sub
jne
ja
dec
push
ljmp
es
or
jb
jno
mov
xor
mov
decl
xor
cmp
dec
in
fbstp
hlt
or
repz
nop
fs
decl
push
adc
movsl
add
fwait
pusha
push
dec
jg
dec
movl
and
ljmp
push
push
out
stc
add
push
sub
adc
push
and
pop
imul
add
sar
in
jle
mov
gs
jecxz
jmp
ss
ficompl
or
add
out
jmp
xor
push
dec
dec
pop
push
daa
idivb
jmp
ds
outsl
out
js
hlt
ds
in
inc
and
xchg
inc
test
mov
cmp
push
or
aas
roll
bound
mov
repz
cli
dec
jge
jnp
shr
jmp
into
dec
cs
pop
mov
mov
enter
jp
or
das
mov
repz
pop
jno
aaa
std
pushl
push
push
or
cmp
xorl
pop
inc
dec
aaa
incl
loopne
pop
sub
iret
sbb
jge
int3
mov
fistl
dec
rorl
test
mov
jg
jmp
xchg
fidivrs
mov
push
cmp
mull
int3
inc
decl
pop
xlat
fiaddl
ds
fs
and
mov
movsb
push
mov
fiaddl
es
and
pop
stc
mov
sub
call
fadd
jae
outsb
or
int3
cmp
and
stc
push
mov
stos
push
ljmp
pop
iret
data16
cmp
mov
push
imul
aaa
ficompl
cld
imul
mov
add
jl
mov
lock
mov
iret
ss
cli
ss
fldt
cld
cli
ljmp
movsl
jmp
sti
hlt
xchg
lcall
movsb
pop
xor
mov
pop
inc
loop
mov
ljmp
and
ret
pop
or
mov
test
mov
xchg
push
push
jnp
xchg
sbb
movsb
mov
inc
fbld
out
shrb
rorb
loope
dec
dec
pop
and
mov
outsl
pop
xorb
ficompl
mov
adc
xchg
mov
out
sub
mov
insb
ret
mov
lcall
fcmovu
or
push
mov
jnp
cmp
decl
mov
and
dec
dec
pop
cmp
cmovp
test
push
mov
pushl
cwtl
dec
out
lods
push
xor
icebp
cmp
mov
pop
fmulp
jnp
or
insb
cld
push
popf
or
add
mov
adc
jmp
jle
mov
hlt
pop
loop
rcrb
sub
ret
insb
roll
xchg
dec
add
mov
push
insl
mov
insl
or
inc
std
shll
dec
mov
data16
add
mov
push
fdivrl
inc
leave
adc
cmp
call
das
or
pop
sbb
or
cmp
inc
test
sbb
cmp
push
push
jmp
sub
pop
jne
push
iret
xor
push
clc
add
mov
insb
aaa
icebp
test
mull
jae
mov
lock
cmp
or
in
stos
mov
mov
push
xchg
popa
dec
or
xchg
or
cli
pusha
cmp
fisubrs
mov
sbb
ljmp
push
jg
mov
add
lcall
sbb
or
dec
cltd
cmp
sbb
jl
jb
out
jmp
fcmovnbe
int
xchg
add
cld
ds
jp
in
test
mov
cmpsl
mov
ror
popf
mov
push
pop
into
xor
ficoml
jmp
daa
and
lahf
testw
cs
fistl
insl
out
in
aas
stc
imul
dec
sbb
sbb
jp
jns
xlat
les
in
mov
adc
rcl
lcall
push
add
cwtl
or
mov
sub
sarb
out
rclb
sbb
cmp
jg
in
stos
mov
test
pop
xor
jne
out
mov
cmp
adc
pushl
mov
out
jns
inc
stc
push
mov
sbb
jnp
push
inc
jne
mov
clc
dec
int3
test
sarl
push
mov
loop
ljmp
ljmp
push
aam
pop
lcall
lret
mov
jne
lods
in
ljmp
pop
push
inc
xchg
xor
sahf
push
movsl
lret
xlat
add
in
popf
iret
mov
pop
push
inc
arpl
popl
mov
incl
lahf
in
pushw
in
inc
scas
dec
aad
test
mov
sbb
decl
ljmp
fsts
test
inc
mov
dec
pop
jbe
mov
incl
adc
and
gs
lcall
int
mov
mov
in
fwait
loopne
xchg
bound
push
mov
fstpl
jg
orb
jne
mov
add
aad
lods
cld
inc
pushl
cld
fwait
push
inc
in
push
fwait
push
ud0
and
ja
xchg
aaa
jge
jmp
hlt
int
add
in
push
xchg
lds
das
or
test
dec
xor
lret
push
lret
stos
add
jmp
data16
out
jecxz
pop
mov
std
mov
sbb
mov
mov
lcall
jmp
xor
cmp
sbb
inc
imul
sar
jmp
cmpsb
or
jmp
shl
pop
cmp
scas
xchg
lcall
push
mov
in
cmp
jg
shl
sub
shrl
adc
sbb
mov
lcall
clc
mov
xor
jnp
sbbb
mov
sahf
fstpt
ljmp
pop
lods
push
cli
adc
mov
cmp
ljmp
cmp
daa
js
repnz
sbb
repz
mov
sub
call
gs
mov
push
test
and
cld
shlb
sub
and
je
inc
add
mov
cmp
pop
stos
adc
daa
cli
mov
fcomip
lcall
or
mov
icebp
xchg
sub
push
pop
arpl
andl
jmp
mov
xor
sbb
pushl
cs
jmp
stos
xor
xchg
repnz
int
out
cmp
fimull
xchg
ret
fwait
fs
inc
clc
rol
stc
ljmp
cmpsl
scas
stos
xorl
idiv
call
xchg
insl
sbb
lock
mov
jg
and
gs
dec
mov
fistpl
inc
je
lock
mov
ret
nop
sarl
push
mov
std
jnp
repnz
dec
jmp
jl
fisttpl
sub
in
hlt
cmp
cmpsl
mov
mov
clc
aam
incl
or
xchg
cs
pusha
xchg
fcompl
mov
xlat
imul
mov
fimull
fwait
out
mov
dec
adc
fimull
mov
leave
pop
or
leave
out
xorl
fnstcw
mov
es
fstpt
add
aaa
cmp
fstps
ds
ljmp
lret
cmpsl
leave
mov
pusha
jmp
xchg
xor
jno
pusha
addr16
dec
ja
add
stc
cs
imul
xchg
inc
hlt
punpckhbw
inc
push
mov
dec
cmc
pop
pop
mov
push
xchg
sbb
inc
divb
push
mov
insl
xor
cmp
into
or
and
cltd
ficoms
sub
push
and
mov
clc
nop
push
inc
arpl
popf
movsb
test
pusha
jns
jb
bound
insl
lea
sar
dec
inc
push
xor
push
sub
pusha
loop
xchg
stos
nopl
jge
mov
das
jnp
add
sbb
icebp
out
or
sub
stc
inc
adc
mov
and
push
mov
call
mov
mov
int3
adc
or
arpl
push
insl
or
pushl
pop
inc
rcr
add
push
test
cmc
push
xor
jmp
pop
test
test
lcall
xor
sbb
sub
pop
sar
ljmp
jbe
pop
xchg
mov
sahf
xchg
int3
lods
xor
fstpl
dec
loop
dec
hlt
cwtl
aad
test
in
lock
pop
dec
xor
dec
rolb
std
jl
lea
ss
decl
pop
adc
mov
outsb
mov
fidivl
or
shll
push
fwait
div
push
inc
sbb
sub
dec
shrl
mov
mov
pop
mov
arpl
fidivrl
jns
mov
push
test
inc
call
repnz
push
inc
lahf
cmp
mov
les
cltd
jns
in
pusha
inc
lcall
mov
xor
imul
out
andl
movl
out
xchg
ss
jns
xor
imulb
pop
mov
inc
lcall
shrl
in
cmp
push
cmp
arpl
push
adc
das
xchg
test
inc
cld
mov
adc
jl
pushl
rol
xchg
popa
or
mov
pop
je
sbb
outsl
lods
imul
cmp
and
cmp
jp
add
lret
mov
ficomps
stos
sbb
dec
out
xor
lcall
push
sub
popf
incl
push
outsb
mov
lock
add
shr
mov
aaa
push
iret
dec
sub
repz
sar
dec
leave
push
or
scas
pop
mov
xchg
mov
jl
pop
push
sub
inc
lock
jl
scas
cmpsl
or
ljmp
dec
dec
aad
add
jne
pop
inc
idiv
aam
push
mov
clc
mov
push
cld
jg
ljmp
gs
aaa
mov
sti
lahf
push
lods
and
test
call
fiadds
sahf
ret
fdivs
xchg
jge
out
adc
sbb
decl
xchg
sbb
and
fcoml
or
mov
or
decl
xchg
clc
pop
stos
scas
rorb
push
ss
and
add
loopne
add
xrelease
jg
lcall
xchg
pushf
into
inc
cmc
jne
push
addr16
sahf
pop
or
jecxz
push
and
ljmp
adc
sub
out
inc
ljmp
out
mov
adc
dec
ljmp
xchg
cmpl
inc
loopne
and
xchg
into
hlt
dec
mov
ret
out
cmc
test
ljmp
and
add
push
aam
jbe
sub
cmp
mov
jp
pop
test
or
mov
add
imul
and
sti
xor
jnp
int3
test
jns
or
mov
mov
js
mov
daa
movsl
in
push
xor
idiv
mov
fisttps
xchg
jae
dec
push
pop
mov
adc
fidivl
lcall
mov
mov
cli
shl
stos
jne
push
jecxz
hlt
int
fisubs
jge
dec
jmp
xchg
mov
adc
push
lods
int
jne
fistps
fcos
decl
imul
push
push
mov
cmp
and
fcomi
inc
mov
incl
enter
dec
adc
out
cmpsb
icebp
bound
testb
call
fcmove
inc
cmc
mov
xchg
sbb
imul
and
pop
adc
decl
out
adc
stc
fwait
xor
icebp
shlb
aas
mov
pop
and
fcomip
lcall
pop
mov
mov
add
mov
call
pushl
hlt
pop
arpl
xor
mov
sub
fildll
mov
pop
or
push
rcll
mov
pop
lock
add
incl
rolb
adc
int
and
lea
pop
xchg
or
mov
mov
jno
xor
dec
add
bound
lods
push
jae
in
jg
inc
imul
arpl
stos
sbb
or
lret
outsl
jno
inc
sub
fstl
xchg
mov
andl
incl
adc
xchg
btr
leave
dec
sahf
fs
sbb
testb
push
inc
bound
pushl
push
inc
push
leave
enter
push
dec
jns
push
jmp
call
jns
dec
mov
inc
jp
insl
fsts
enter
push
xchg
inc
mov
cmc
adc
pop
lcall
rcrl
xlat
in
pop
div
les
lret
outsb
pop
pop
mov
daa
insl
cli
ljmp
les
push
repz
push
sub
xchg
xchg
jnp
lcall
mov
cmp
mov
and
add
and
call
cld
ljmp
js
loope
test
push
lret
dec
dec
les
pop
orl
loopne
mov
incl
mov
mov
aam
push
loopne
aad
out
ljmp
outsl
sub
push
insb
hlt
mov
mov
outsl
jo
negl
pop
in
sbb
mov
fcoms
repnz
fiadds
stos
std
andb
movb
push
xor
shlb
fwait
lcall
and
lret
pop
lahf
cmpsl
stos
sub
gs
int3
or
pop
mov
cltd
mov
adc
das
inc
jmp
adc
adc
push
mov
mov
mov
test
mov
ljmp
daa
and
lcall
int3
in
push
or
inc
and
stos
gs
decl
cwtl
xchg
jecxz
outsb
shrl
xchg
shrb
aas
jo
pushl
inc
cmp
in
cmp
jno
in
icebp
dec
dec
icebp
rcrl
xchg
ret
xchg
outsb
mov
outsb
and
mov
xchg
and
jbe
push
movsl
xchg
dec
mov
push
sbb
aas
xor
fbld
clc
jae
mov
clc
cmp
fmul
mov
repz
jmp
fnstsw
add
jge
lods
sub
ss
push
inc
jno
xchg
fdiv
mov
movsl
aaa
pushl
std
ljmp
ret
lcall
fbstp
jl
mov
je
xchg
adc
call
rolb
jge
ret
sbb
jbe
repz
pop
or
lods
ret
mov
call
cld
jge
pop
inc
xlat
xor
xchg
or
jbe
ret
dec
dec
lea
xchg
shrb
jb
dec
mov
mov
adc
cltd
mov
xorl
dec
pusha
cs
pop
stos
dec
je
adc
fs
mov
lcall
xor
kaddw
out
mov
lret
pop
inc
testl
sub
ret
add
sbb
shlb
into
push
mov
mov
dec
mov
cli
mov
push
adc
divb
ljmp
xor
jnp
push
xchg
xchg
fisttpll
add
xlat
xchg
xchg
cmp
dec
loopne
std
push
jg
xchg
insb
push
sbb
add
and
add
ds
cltd
mov
ret
inc
push
jmp
jle
pushl
or
sbb
mov
mov
fdivl
test
fs
ds
pop
and
std
incl
sub
pop
das
outsl
mov
cmc
scas
xchg
xchg
jmp
jb
pop
mov
pop
filds
int3
jno
mov
jle
insl
pusha
mov
je
lcall
fldenv
mov
js
or
cmp
orb
cmp
adc
decl
test
jmp
popf
sbb
jl
xlat
stos
mov
lcall
les
cmp
pop
ss
cmpsl
fcoms
xor
shrb
test
stos
push
xor
fidivs
push
testl
jmp
aam
test
cmp
mov
pop
in
adc
data16
rcll
fbstp
incb
pop
sub
xor
push
loope
stos
push
sub
push
dec
sbb
pop
lock
or
or
stos
xor
mov
lds
cli
lods
adc
fisubs
jnp
mov
mov
jmp
outsb
inc
and
push
or
sbbb
movsl
dec
shrb
rcr
pop
sbb
incl
jno
lahf
imul
pushf
inc
mov
ljmp
jbe
sbb
lcall
mov
outsl
stc
xchg
dec
rcr
push
jno
and
jb
jnp
sbb
cmp
jl
add
fs
das
jbe
cmp
add
test
das
repz
jmp
xchg
or
pop
daa
sahf
mov
sbb
cmp
push
cmpsl
sub
sahf
fwait
mov
ret
or
cmp
sahf
adc
xchg
fbstp
xchg
mov
cmp
test
orb
fdiv
inc
fldt
iret
shr
dec
addr16
jl
xchg
cmp
hlt
enter
cmp
cld
stos
ret
sub
push
das
sbb
je
cmp
in
scas
hlt
jnp
cs
xor
call
lock
add
in
push
lcall
in
imulb
in
mov
sub
ljmp
in
jb
xor
stos
es
xlat
dec
popa
xchg
jmp
decl
and
jnp
dec
xlat
mov
fidivrs
inc
sahf
pop
sbb
mov
jmp
leave
pop
iret
addb
ljmp
inc
pop
or
cmp
aaa
pop
cltd
mov
inc
jno
imul
push
jle
jle
mov
dec
lcall
lcall
in
jbe
xor
mov
ror
lret
mov
and
jmp
in
inc
adc
imul
dec
dec
mov
outsb
rolb
mov
cmp
sbb
push
loop
mov
jae
in
cmpb
dec
xchg
push
inc
sub
inc
inc
dec
pop
ljmp
inc
in
mov
mov
rorb
sti
xchg
test
lea
or
xlat
mov
dec
lcall
or
jmp
movsw
rolb
xchg
cmc
decl
insl
sbb
mov
int
mov
dec
sahf
adc
pushf
mov
jno
cmp
pushl
in
mov
dec
hlt
pop
lods
int3
out
sub
fisubrs
fwait
jmp
mov
dec
std
mov
and
pop
pop
in
std
push
sbb
mov
inc
jl
cmp
xor
pushl
mov
push
leave
fdivrl
ret
cmp
je
and
aaa
inc
mov
sar
sti
lcall
cmp
jg
jo
cwtl
shrb
fs
pop
dec
xchg
incl
outsb
lretw
scas
js
inc
shlb
bound
adc
call
scas
je
fdivl
aam
adc
push
push
mov
sbb
je
lahf
cli
push
scas
adc
adc
dec
inc
decl
xchg
cmpsl
dec
ret
dec
pop
adc
enter
repnz
loope
outsl
sbb
pop
cmp
fimull
ljmp
rorb
ret
dec
and
loopne
addl
push
pop
ljmp
pop
mov
call
pushf
lcall
sub
or
pop
jno
sbb
push
push
sar
cmp
push
jns
push
sbb
dec
push
out
repnz
mov
mov
inc
inc
push
scas
jmp
inc
or
test
push
pop
add
and
mov
add
iret
cmp
idiv
pop
jp
lret
test
out
in
add
pushl
lcall
xlat
stc
jne
mov
test
das
stc
sbb
cmp
and
decl
xchg
sub
mov
push
mov
add
in
test
decl
sbb
xor
push
lcall
dec
and
das
mov
jl
scas
pushl
sti
xor
out
push
pop
pop
adcl
or
out
out
je
fcoms
fmull
ljmp
fdivrl
test
dec
jbe
or
fisttpll
ss
pusha
xor
mov
and
push
sti
pop
xor
mov
jae
xchg
mov
lea
outsl
and
fistps
xor
or
icebp
push
loopne
adc
rcl
das
adc
pop
hlt
inc
jge
inc
leave
rorb
or
jo
lods
icebp
mov
xor
fdivr
ljmp
xor
sub
mov
rorl
inc
inc
add
mov
call
psubq
mov
fnsave
daa
mov
mov
subl
jnp
or
mov
incl
mov
jge
subw
nop
adc
jmp
xorb
jb
cmp
pop
leave
xor
cld
ljmp
mov
mov
lahf
inc
in
push
or
lods
ljmp
and
insl
jp
nop
and
xchg
add
jmp
pop
sbb
xor
stos
pop
filds
inc
adc
out
sti
jne
insl
sbbl
hlt
push
push
pop
mov
sbb
decl
enter
movsl
in
push
mov
fdivrs
xchg
lcall
fdivr
jmp
repnz
add
mov
sti
incb
jo
push
out
jnp
ret
mov
push
xchg
iret
sub
decl
cltd
mov
insl
inc
xchg
ss
dec
addr16
pop
mov
mov
xchg
sbb
cmp
cmp
aas
loop
jmp
cmp
call
pop
dec
xchg
cmp
xchg
stc
ds
sbb
xchg
int3
cs
pop
out
cltd
sub
jmp
inc
addb
cmpsl
daa
mov
and
leave
lds
ret
ret
fcomps
jb
filds
jg
inc
sahf
in
jnp
ljmpw
xchg
movsl
xorl
imul
xor
lcall
in
add
xchg
imul
lret
mov
dec
fndisi(8087
adc
jle
ja
jmp
pop
pop
ja
fmul
mov
sub
push
mov
mov
pusha
mov
sahf
and
adc
push
cmp
and
aas
pop
sahf
push
xor
adc
jg
mov
mov
ljmp
out
jmp
push
cmp
gs
incl
or
out
bound
sbb
inc
jns
lods
ljmp
adc
pop
stos
mov
push
mov
fs
stc
xchg
xor
in
push
mov
push
sahf
pop
mov
je
sub
je
cmc
jnp
mov
sbb
adc
xchg
mov
mov
lods
sbb
data16
mov
stos
es
pop
ret
call
inc
xor
pushf
push
hlt
in
aas
jno
lods
call
cmp
insl
pop
push
out
bnd
faddl
mov
shrb
cmp
ljmp
xor
and
inc
cmpsb
cld
pop
fsubrl
fisttpll
jnp
int
loope
test
mov
jb
cld
jl
call
jo
popf
test
mov
fidivs
push
xor
cmp
icebp
ljmp
jmp
and
cmp
aas
stc
mov
cmp
enter
jno
stc
inc
mov
or
add
dec
lock
xor
icebp
jmp
sahf
daa
push
xchg
xchg
cli
nop
lock
roll
out
lret
jae
in
sahf
jecxz
mov
in
or
shl
jg
into
sahf
sub
mov
fwait
das
push
adcl
jge
addb
mov
pop
mov
push
mov
fdivs
call
ret
mov
dec
push
or
sbb
pop
xchg
rcrb
les
jmp
and
call
cmc
cmc
sub
lahf
or
jbe
pusha
push
jmp
gs
add
jae
bound
mov
push
sbb
lcall
lods
xchg
push
shlb
lods
std
jbe
and
das
daa
sbb
mov
aas
mov
call
in
jl
xchg
dec
cltd
push
lods
push
mov
push
dec
in
fiadds
mov
pop
jbe
cltd
enter
xchg
popf
or
ret
push
lods
lret
jo
cli
and
aas
adc
sbb
lcall
or
flds
jge
push
dec
pop
andl
add
adc
ficompl
sub
pop
adc
lds
pushw
adc
jg
sbb
cs
shrb
add
add
in
repnz
mov
sbb
stc
jle
sub
call
dec
ss
mov
mov
ror
or
in
mov
lock
lock
call
sub
jo
sti
jecxz
pop
sbb
mov
js
pushf
inc
in
shr
and
jl
or
loop
pop
adc
in
inc
dec
dec
push
int3
test
or
aaa
pop
insl
or
mov
lret
add
jle
sar
pushl
sbb
out
dec
jmp
in
add
pop
push
fcomip
pop
int
sbb
ljmp
adc
cmpsl
int
aas
mov
sti
sbb
daa
xorb
arpl
lea
in
in
aam
push
sbb
dec
xchg
xchg
aaa
insb
movsl
lret
xorl
out
paddq
decl
push
inc
shrb
sbb
ss
and
shlb
out
or
jmp
fdivrp
call
loope
insl
ljmp
mov
xchg
and
cltd
add
test
ljmp
cli
arpl
push
mov
fsubl
push
lds
pop
gs
jg
mov
pushl
sbb
mov
imul
inc
mov
testb
xlat
mov
mov
lock
xlat
notl
shlb
dec
insb
stos
jecxz
xor
jmp
mov
movsb
lds
in
inc
mov
idivb
jne
mov
clc
dec
pop
les
cmpsl
sbb
jle
sbb
cmpl
and
cwtl
pusha
jge
movsb
xor
sub
aaa
jns
lret
xchg
imul
jecxz
push
les
cmpb
dec
pop
mov
bound
push
aad
pop
stos
pusha
sbb
dec
mov
pop
icebp
mov
xchg
jle
in
jle
and
shr
into
push
je
pop
out
cmc
fwait
cmp
decl
mov
dec
jnp
and
pop
mov
nop
cmp
inc
das
insb
das
mov
stos
jge
and
and
jbe
push
mov
mov
jae
movsb
adc
ljmp
sbb
dec
mov
pushf
mov
cmp
outsl
xchg
lahf
mov
scas
inc
daa
shll
mov
incl
jp
sahf
dec
jecxz
mov
pop
aad
dec
xchg
jno
mov
sbb
out
or
mov
push
test
xchg
negl
push
addb
dec
fsubr
repnz
decl
cld
lea
xchg
nop
sub
push
lock
sbb
mov
pushl
ret
mov
xor
out
fildl
ror
lea
pusha
xor
push
test
call
mov
aad
adc
xlat
pop
mov
lock
pop
sub
imul
ljmp
xlat
shrb
or
repz
mov
filds
jo
pop
call
fs
int
mov
lret
sbb
fistpl
or
pop
push
dec
push
sub
mov
loope
ljmp
push
add
dec
ret
scas
mov
xchg
dec
ss
sub
ja
add
dec
add
cmp
push
stos
in
mov
push
loopne
lahf
aad
scas
loopne
sub
incl
inc
repz
pop
out
adc
stc
and
mov
ror
std
lcall
or
inc
jbe
into
mov
jg
sahf
fadds
lock
or
outsl
repnz
pop
xchg
push
addb
or
aam
inc
inc
shrl
call
out
lret
pop
lcall
dec
push
mov
mov
loope
and
int
push
lods
cmp
pop
ljmp
push
pop
xor
xor
xor
loopne
stos
fstpt
popf
jo
les
jl
rcl
dec
add
mov
add
mov
xchg
std
jmp
mov
cmp
dec
xchg
pop
jle
fidivs
fimull
push
in
sub
pop
or
mov
lret
adc
push
shll
rorl
cmp
cmp
call
imul
insb
insl
mov
pop
mov
imul
popf
pop
inc
inc
or
and
mov
inc
js
int
ficoml
incl
dec
cli
subl
xchg
gs
or
popa
fldl2e
dec
inc
lcall
sub
sub
das
push
out
fidivrs
mov
ljmp
jp
or
pusha
fldenv
movsl
and
mov
sbb
xor
idivb
sub
popa
movsb
sub
mov
hlt
sbbb
mov
repnz
inc
outsl
arpl
lcall
mov
pop
into
and
test
mov
jg
and
jg
mov
add
adc
in
shrl
in
mov
push
int
icebp
lcall
outsl
jae
clc
add
out
push
add
in
in
mov
fsubrs
mov
and
or
call
aas
jl
int3
push
pushf
jg
fdivrp
xchg
outsb
cltd
pushf
sub
mov
adc
dec
cld
sbb
pop
dec
in
popf
and
ja
mov
jmp
adc
adc
push
push
xchg
sub
ljmp
jg
stos
or
cmp
lock
sarb
mov
aad
add
sub
imul
jmp
add
je
sub
and
bound
stc
insb
inc
xchg
stos
mov
or
cmp
fadds
jns
xchg
iret
sbb
repnz
int3
push
nop
loopne
nop
cmpb
pop
adc
cwtl
dec
insl
movsb
in
xchg
xchg
or
int3
nop
shrl
or
mov
adc
inc
shrl
jg
popf
popf
mov
movsb
rcrb
mov
or
jnp
mov
imul
mov
cs
loop
test
xchg
nop
into
push
movsb
inc
push
incl
sbb
enter
mov
out
cmc
push
test
daa
or
stos
jg
xor
and
mov
aaa
lcall
xor
xor
hlt
ljmp
dec
mov
sbb
arpl
sub
stos
cmp
jg
int3
pop
fs
add
ja
jmp
mov
mov
sti
insl
loop,pn
pop
push
pop
and
bound
dec
sbb
ja
lds
jl
popf
pop
xor
rorb
pushf
fsubp
clc
fcomip
jmp
pop
push
or
sbb
dec
stos
inc
mov
rorl
jbe
and
cmc
scas
out
mov
enter
adc
mov
lret
add
or
sub
test
xor
in
jg
xor
mov
fmul
fwait
or
jb
adc
dec
add
je
mov
call
push
mov
jmp
jg
xchg
mov
int3
pop
cmp
cld
test
jge
pop
mov
mov
out
pop
jno
mov
pop
fwait
int3
out
push
dec
daa
xchg
mov
rcl
jmp
push
or
leave
pop
or
pop
imul
cli
stc
jl
or
jg
arpl
and
lods
add
mov
mov
fsubrl
jmp
data16
jg
lods
mov
js
inc
jle
int3
xor
out
loopne
out
cs
lods
push
int
filds
push
scas
xor
pop
cmp
scas
lock
clc
iretw
or
push
mov
sti
push
es
ljmp
fmull
aam
cmc
icebp
out
std
outsl
jmp
jmp
jmp
xlat
push
sbb
das
xchg
dec
scas
cwtl
add
ljmp
fucomip
jmp
add
insb
idiv
outsl
stos
dec
je
ljmp
orl
jmp
cmp
ret
jmp
hlt
loop
push
mov
sub
lock
pop
roll
mov
cmp
mov
mov
in
hlt
hlt
gs
outsb
and
repnz
add
arpl
incl
add
scas
inc
loopne
jno
out
or
cmp
mov
or
inc
add
call
lds
lcall
sub
inc
lea
dec
nop
add
jmp
push
daa
das
add
je
fwait
in
adc
gs
out
js
dec
xchg
inc
fdivrp
xchg
lret
out
mov
ret
das
cmp
jl
jo
push
test
jmp
mov
sub
mov
push
fisttps
jge
sub
inc
cmc
lods
mov
inc
lea
and
dec
pop
mov
enter
mov
cmp
dec
nop
lods
xchg
mov
cld
xor
adc
mov
lea
push
popf
call
enter
jmp
rcll
mov
cmp
insb
test
lds
fstpt
ljmp
pop
std
mov
mov
mov
and
in
push
fsubrp
stc
outsb
js
loop
push
add
ds
sub
decb
out
int
xorl
mov
les
jns
test
sub
incl
movsb
test
jo
sub
ret
sti
sbb
mov
or
mov
mov
out
movsl
popl
pop
cmc
xchg
mov
push
mov
mov
out
call
jg
pop
ret
lds
imul
mov
subb
jmp
or
push
sbb
je
outsb
cmp
loope
mov
pop
xor
cltd
jmp
fbstp
fadds
adc
and
mov
ljmp
aam
push
mov
ljmp
adc
pop
mov
repz
mov
adc
lods
dec
decl
aas
aaa
inc
sbb
das
sub
mov
push
sbb
jne
adc
sbb
cld
je
arpl
jmp
cli
fidivrl
push
test
jp
sub
xchg
and
decl
dec
int3
jecxz
cmp
dec
mov
fldl
rclb
addr16
mov
call
sarb
nop
mov
dec
fwait
insb
shrb
jns
jae
jg
fwait
mov
cmpsl
mov
push
pop
add
sbb
fdivrl
dec
test
idivb
jne
dec
mov
lret
xchg
hlt
test
or
mov
call
cltd
and
mov
lea
test
cltd
push
jle
and
movsb
xor
decl
sub
test
mov
das
je
sub
jecxz
sti
jne
jge
sbb
pop
sub
sbbb
mov
aam
ljmp
mov
fs
aaa
lahf
cmpsb
out
insb
fcomip
lcall
dec
cmp
arpl
pop
insl
pop
pop
fwait
adc
and
mov
mov
xor
cmpsb
push
fisubrl
push
enter
dec
adc
ljmp
in
stos
pop
leave
sbb
push
pop
sub
cwtl
insb
lock
pop
out
cli
sub
jae
divl
dec
rorl
ds
jge
aas
mov
ss
fists
movsb
pop
xchg
pop
movb
neg
sbb
fnsave
aas
mov
ja
sbb
jo
pop
ficoml
es
push
add
aaa
popa
add
jg
lcall
sarl
sbb
adc
cmp
js
imul
call
lea
xchg
jae
je
ds
xor
jne
dec
lret
push
lcall
jmp
mov
push
xchg
mov
hlt
dec
imulb
xor
inc
decl
jmp
add
mov
dec
and
pop
mov
push
mov
iret
sub
std
and
dec
push
mov
call
ret
outsb
shll
push
fcmovbe
test
xchg
pushl
sbb
dec
test
call
pop
sahf
rcrb
jns
test
mov
cmp
call
mov
add
loope
cmc
jns
cmpsb
dec
dec
cmp
addl
jae
ror
pop
fwait
push
mov
out
dec
xchg
lahf
loop
adc
or
incl
std
push
out
das
repz
jbe
adc
lcall
mov
xchg
jb
aas
shlb
pusha
jp
pop
cmovp
ds
push
dec
int
das
cli
push
sub
les
or
fiaddl
mov
xchg
xor
inc
mov
inc
cmp
ljmp
fidivs
bound
sub
jb
outsb
cmc
mov
stos
inc
push
xchg
movsb
jns
ljmp
dec
shl
mov
jmp
test
dec
sbb
incl
inc
mov
int
jbe
fsubs
inc
ret
push
mov
cli
insb
fldcw
and
jae
in
mov
inc
ss
mov
dec
jmp
mov
mov
ds
lret
mov
lcall
movsl
cmp
push
push
sub
or
mov
mov
bnd
pushf
jle
shll
out
jns
scas
sbb
loopne
push
in
aam
repz
push
xlat
repz
add
mov
jb
movsw
inc
cmpsl
inc
jmp
or
cmpb
std
mov
les
scas
jbe
and
adc
int3
lock
dec
pushl
imul
xchg
pop
popf
fdiv
pop
inc
pushf
push
shll
inc
stos
xchg
jle
clc
mov
jle
mov
push
in
xchg
dec
mov
out
insl
mov
incb
out
sahf
es
lea
cltd
push
adc
inc
cmc
mov
add
mov
dec
ror
or
es
add
dec
adc
sub
adc
shrb
aam
cltd
or
js
sahf
inc
mov
dec
das
shl
mov
sub
lret
mov
lock
dec
dec
iret
add
pop
shll
pushf
sbb
cmp
out
jmp
in
jmp
loopne
push
xchg
xchg
and
jns
mov
shrl
hlt
dec
fildl
jp
les
xchg
pop
pop
idivl
push
mov
loope
jg
mov
or
pop
adc
sub
push
outsl
pop
ljmp
and
jae
call
imul
dec
or
xlat
jecxz
jg
cmp
les
imul
nop
pop
insl
xchg
sub
xor
xchg
ljmp
sub
or
mov
das
int3
cmpb
xor
sub
add
jge
loope
adc
cmp
fs
stc
push
sar
jnp
imul
and
je
ljmp
push
cmp
clc
stos
xor
mov
jmp
push
in
lods
adc
fs
jnp
or
push
adc
sub
leave
repz
lcall
ret
dec
xor
ja
jns
cmpsl
xor
xor
xor
call
rolb
cmp
push
lds
imul
sar
pushl
out
stos
xor
ret
sub
xchg
push
lods
pop
mov
jecxz
mov
ljmp
sbbl
sarl
scas
hlt
pop
aad
push
jo
push
in
jns
ljmp
cmp
out
and
and
lods
jne
pop
and
jg,pn
sub
incl
jle
sbbb
hlt
and
or
cmp
popf
xchg
repz
fisubl
mov
outsl
incl
adc
pop
imul
jne
sahf
pop
mov
insl
aam
les
push
mov
jmp
lret
fsubl
push
shlb
xchg
xor
and
adc
lock
decl
fnstenv
lock
push
dec
xchg
lea
jmp
mov
inc
popf
dec
mov
mov
jnp
push
adc
mov
shll
cld
pmaxsw
repnz
xchg
jns
xchg
jo
sub
sub
aaa
std
mov
push
mov
push
call
mov
add
lcall
cmp
in
push
pop
fnstsw
mov
and
add
aaa
inc
mov
mov
push
fmul
mov
mov
ficoms
fildll
lods
test
inc
adc
fcomps
dec
lret
fnstenv
xor
cwtl
pop
cmp
jnp
jl
lods
popa
jb
repz
mov
clc
mov
mov
mov
neg
xchg
and
xchg
add
lahf
adc
call
sub
in
xchg
sbb
adc
sbb
in
push
cmp
xchg
mov
add
pop
push
inc
and
aam
pop
jg
xrelease
or
dec
mov
incl
insl
mov
jecxz
addr16
popf
jae
sub
movb
inc
loope
xchg
ljmp
pop
orb
aad
mov
arpl
js
pop
jno
pop
jmp
ljmp
pusha
jecxz
mov
cmp
jb
pushf
dec
das
sub
int3
mov
pop
xor
jmp
dec
sti
fsubrl
into
int3
enter
sub
push
pusha
lahf
test
int3
push
insb
mov
xor
jnp
out
xor
test
imul
sbb
mov
sub
lcall
ja
lcall
inc
jnp
sbb
push
push
sub
push
addr16
sub
lock
jmp
setbe
mov
lahf
in
rcrb
cmpsb
push
das
sub
sub
add
les
jl
add
pushl
call
test
fs
je
test
xchg
and
mov
lcall
pop
gs
mov
stos
daa
imul
mov
es
mov
call
jmp
xchg
pop
rcrl
ds
cmp
pop
cld
stos
lcall
jmp
inc
stos
pop
out
ret
xchg
pop
es
or
mov
sbb
jl
or
incl
loopne
lock
fsubrl
lcall
sahf
and
mov
lcall
mov
insb
testb
ror
ret
sahf
xor
jp
cmp
pop
jp
movsb
imul
jp
movsb
or
mov
repz
iret
jp
mov
jle,pn
ljmp
mov
cmp
or
adcb
jmp
sahf
and
add
in
push
jo
xlat
and
xor
inc
mov
mov
rolb
and
or
divb
scas
xchg
int
adc
ljmp
int3
aam
add
pop
and
mov
ljmp
cmc
and
inc
dec
cmp
jo
pop
test
cltd
or
incb
popf
sbb
mov
push
cmp
mov
mov
mov
dec
adc
fcomip
lcall
jmp
cmpsl
inc
movsl
xchg
sbb
pop
and
jmp
movsb
jp
scas
jge
icebp
repz
dec
push
adc
pushl
clc
scas
aaa
xor
outsb
cwtl
mov
shlb
xchg
in
ljmp
mov
pop
xchg
test
int
outsb
shrb
mov
es
nop
cmpsl
lahf
sbb
decl
bound
adc
push
fs
jmp
pop
pop
enter
jp
lock
mov
mov
push
sub
test
dec
jb
jbe
mov
mov
jmp
ljmp
mov
hlt
ljmp
out
imul
loope
inc
in
sar
ss
cmp
ss
jae
adc
ds
roll
imul
mov
jge
daa
cltd
mov
sub
test
and
outsb
aad
pop
cld
jle
loop
shlb
jecxz
sbb
ljmp
stos
jg
or
mov
xchg
rcr
sar
cmp
sub
mov
inc
cli
or
cmp
add
xchg
add
rorl
pushf
das
dec
in
jbe
inc
call
les
push
push
jb
lcall
adc
dec
fwait
std
cmpsl
pop
lods
sub
pop
fst
adc
sbb
popf
arpl
jae
fdivrl
cmc
pop
push
ljmp
lods
sbb
hlt
push
pop
xor
lret
fcmovnbe
and
test
push
lds
add
mov
js
decl
imul
push
jae
scas
das
mov
movsb
dec
inc
ficoms
lret
add
fisttpl
cli
cmp
inc
mov
leave
aas
sub
orl
je
stc
jle
cmpsb
ljmp
mov
sub
and
add
mov
dec
sbb
sbb
fnstsw
call
in
pusha
pop
add
js
add
dec
das
push
in
mov
cli
lahf
pop
sub
call
sbb
icebp
push
sbb
mov
jmp
mov
data16
push
sub
xlat
mov
sub
decl
lock
das
mov
inc
sbb
ljmp
ja
test
sbb
jnp
popa
jno
mov
dec
push
aaa
push
jno
sarl
sbb
inc
shrb
mov
scas
mov
int3
push
lret
and
fs
scas
mov
pop
or
lock
pop
out
push
mov
pop
mov
xrelease
and
pushf
inc
sub
incl
fnsave
lea
ret
mov
daa
cwtl
cltd
das
add
inc
cmp
xchg
call
ljmp
cli
ret
xchg
inc
das
jbe
inc
mov
das
dec
cltd
xchg
jp
dec
cld
or
aaa
subl
and
xchg
out
cmp
push
std
mov
cwtl
inc
stos
sbb
stos
dec
push
les
fxch
push
lods
test
mov
inc
pop
mov
xchg
adc
hlt
outsl
mov
inc
push
sub
fisttpll
dec
imul
lcall
ret
pushf
mov
std
cmp
stc
scas
bound
fyl2xp1
adc
outsl
cmp
insb
or
lret
dec
clc
mov
pushl
cmc
ret
repz
xchg
inc
sbb
xchg
mov
jmp
in
negl
jne
inc
adcl
gs
cmp
push
mov
mov
pushf
shrb
jle
arpl
decl
cmpsb
xchg
aad
out
and
dec
mov
scas
ljmp
sub
cmpsb
mov
pop
xchg
xchg
xlat
dec
shl
jno
rcl
pop
sbb
loop
dec
pop
aam
scas
les
add
and
aaa
cld
add
fmull
mov
adc
lods
jp
pushl
add
mov
sbb
adc
and
lahf
cltd
or
pop
push
xor
dec
mov
out
sbb
mov
or
idivb
sahf
cmc
mov
pop
sub
popa
inc
sub
or
jl
rcll
xor
and
lret
lods
aas
mov
sub
pop
mov
inc
ds
mov
orl
scas
addb
mov
push
xchg
call
test
sbb
fwait
lcall
sti
fistpll
jg
in
mov
into
out
jmp
xchg
push
push
xor
pop
into
pop
cld
cli
movsb
xchg
fucomi
sbb
decl
jp
ret
adcb
push
loop
mov
frstor
arpl
xor
loop
inc
ljmp
xor
test
and
sub
insb
adc
xchg
sub
aam
push
mov
push
push
pushl
cwtl
mov
or
gs
push
ret
sbbl
adc
jns
push
xor
mov
out
lods
sub
push
jne
cwtl
fdiv
sbb
or
and
out
das
mov
jg
pushl
arpl
lret
xchg
add
fidivl
stos
int
adc
lods
push
mov
sbb
daa
fdivr
ljmp
jmp
sarb
xchg
jo
dec
repz
loopne
xor
mov
add
pop
pop
sbb
mov
mov
cmc
sahf
pushf
and
sub
int
movsl
sbb
icebp
jecxz
call
or
sahf
dec
pop
dec
inc
fs
out
adc
out
cmc
push
imul
das
inc
insb
push
push
test
push
fnstcw
loop
adc
lcall
aam
jmp
mov
insl
out
push
out
pushf
out
dec
lcall
and
sbb
dec
pushl
call
jo
mov
popf
and
and
mov
fisttpll
movsl
push
mov
lods
in
xchg
sbb
xor
or
lcall
jbe
push
dec
in
or
rorb
and
out
scas
mov
sub
dec
in
cmpsl
mov
mov
out
push
or
dec
lcall
aas
ret
fdivp
cmp
loop,pt
xor
mov
sub
mov
push
mov
jge
les
sub
push
call
movsl
inc
pop
incl
stos
adc
lcall
cmp
je
bound
ret
inc
sarl
mov
inc
das
mov
repnz
push
popa
ljmp
inc
clc
cmpsb
insl
ja
mov
pop
test
ret
in
test
lcall
push
fwait
data16
mov
xchg
mov
pop
cmpl
pop
sub
ljmp
addr16
adc
push
dec
repz
decl
inc
pop
sbb
push
dec
or
or
pushl
loop
test
xchg
push
out
loope
testl
pushf
out
or
cmp
std
jmp
pop
pop
pop
outsb
dec
cltd
sbb
call
bound
push
stc
dec
mov
push
arpl
mov
pushf
xor
sub
pop
push
mov
call
jl
adc
adc
inc
pop
stos
xchg
cmp
pusha
jp
lahf
insb
push
push
sti
insl
jb
mov
pushl
shrb
leave
int3
cmp
mov
jne
push
mov
or
fxch
cmc
std
scas
push
mov
mov
mov
scas
mov
in
aam
pop
in
push
insb
insb
shrb
pushl
ret
mov
adc
mov
ror
push
mov
pusha
rclb
add
push
xor
pop
dec
add
jp
pop
sub
jmp
cmovs
es
cmp
in
out
mov
insb
movsb
push
xor
cwtl
jle
addr16
shll
lcall
jnp
adc
sub
xlat
ljmp
pop
cmpsl
das
pop
cltd
clc
xchg
sub
incl
popf
pop
lds
aas
jge
jg
adc
mov
and
test
pop
addr16
inc
pop
incl
mov
mov
jns
mov
xor
aad
shlb
sarl
stc
decl
sbb
andl
fistpll
mov
adc
mov
mov
inc
popf
sbb
or
cwtl
imul
fiaddl
mov
shrb
pushl
add
push
sbb
xor
or
sub
js
movsl
sub
subb
call
add
fists
cmc
xor
in
stc
or
adc
pushf
insl
push
jle
int3
sarb
jg
scas
jb
fcoms
push
aaa
jge
int
sbb
mov
leave
xor
test
jae
jnp
sahf
push
xor
pushf
cmp
shlb
jle
icebp
sbb
push
pop
add
jg
cmp
cs
xchg
arpl
mov
xor
inc
pop
arpl
cmp
fbld
jo
outsb
cmp
xlat
aam
aam
pusha
test
aam
jp
and
popa
ss
lock
pushl
data16
cmp
into
shll
lret
mov
xlat
mov
mov
arpl
std
decl
clc
jge
mov
fimull
adc
fnstsw
pop
mov
fnstcw
xchg
xlat
mov
popf
nop
push
imul
scas
push
push
sub
push
popf
decl
and
and
imul
imul
xchg
adc
jmp
cli
push
sbb
xchg
les
pop
jae
mov
xlat
pop
lock
std
scas
iret
add
adc
add
sbb
xchg
inc
mov
cmp
insb
adcb
fdivl
addr16
daa
mov
xorl
and
jmp
or
andl
fcmovu
ret
push
jge
lret
push
and
dec
inc
and
xorl
pop
sbbb
mov
inc
xchg
push
incl
fdivl
leave
lods
sbb
xor
mov
and
and
shll
loop
or
out
leave
outsl
adc
lds
in
inc
and
xchg
sti
inc
mov
xchg
lds
or
push
dec
pop
and
fwait
mov
mov
in
cld
lcall
inc
or
scas
mov
out
xor
lret
je
cs
xor
loope
xor
movsb
lahf
xor
arpl
stos
lods
jge
pop
popf
xchg
call
mov
pushf
les
xor
jl
cmc
jp
cmp
cmpsb
test
je
mov
lcall
fmull
sub
andb
stos
adc
mov
movsb
push
cwtl
sbb
mov
mov
dec
bound
mov
lods
push
sbb
incl
adc
sbb
pop
sub
pop
inc
push
insb
fs
mov
fstps
adc
sub
and
jmp
mov
clc
add
jl
shrb
cli
mov
cmp
push
sbb
bnd
push
repnz
push
mov
jge
lret
push
or
sub
fcmovnbe
mov
xor
pusha
testb
cmp
inc
xor
nop
pop
mov
jmp
gs
pushf
pop
es
push
sahf
rcrb
jb
jnp
lcall
sti
fwait
inc
incb
push
je
xchg
push
in
movsl
xchg
hlt
jbe
xchg
or
cmp
daa
push
jg
mov
push
fsts
inc
or
or
shlb
test
int
pop
sbb
push
pop
inc
or
sub
xor
repz
jns
lods
cld
incl
xrelease
test
lcall
mov
inc
adc
lret
fisubrl
clc
pop
std
ja
and
psrad
sbb
andb
adc
push
adc
ja
sbb
bound
loop
test
xchg
mov
or
hlt
sti
decl
pop
cmp
gs
sub
pop
lods
and
or
fisubrl
rolb
cmp
lea
push
adc
xchg
inc
int3
add
mov
scas
adc
aas
pop
insl
mov
std
cmp
mov
pop
mov
fnstcw
mov
and
arpl
ljmp
out
xchg
test
mov
sub
out
lea
ljmp
xchg
imul
jne
out
sub
sbb
pop
fisubrs
push
lods
test
mov
cmp
sbb
les
ss
loop
call
pushl
push
fwait
das
jle
push
je
and
pop
sub
pop
mov
decl
lret
test
arpl
sbb
or
adc
loopne
call
sub
fcomip
scas
jl
sub
call
test
cmp
or
xor
mov
jmp
lea
jno
sti
cmpl
pushl
lods
lret
mov
inc
push
in
jmp
dec
nop
ds
xor
es
aas
insb
mov
insb
out
pop
xorl
sbb
xlat
pop
loopne
jl
andl
inc
mov
mov
movsl
rolb
push
fcompl
jmp
sti
stc
sbb
popf
aaa
jns
jno
shlb
jns
push
xchg
dec
xchg
cmpsl
mov
push
popa
pop
pop
sbb
scas
out
cmp
cld
decl
hlt
movsl
int
sbb
js
addr16
lods
out
pop
push
push
pop
in
pop
loopne
out
jo
mov
xor
hlt
test
and
cwtl
clc
jnp
movsb
data16
decl
in
call
mov
out
jmp
cli
pop
movsl
dec
sub
mov
mov
push
ja
ljmp
stos
inc
ret
or
rorl
sti
xchg
push
sbb
mov
mov
jmp
sub
push
and
into
adc
loopne
push
das
lret
push
shlb
push
adc
sar
mov
movl
mov
add
xor
gs
mov
call
xor
mov
adc
lods
decl
jb
push
and
mov
icebp
pop
std
scas
adcl
scas
inc
mov
std
dec
jbe
push
stos
test
adc
cmp
test
and
push
push
adc
inc
sbb
cmp
out
mov
out
mov
and
jmp
push
jmp
mov
bound
out
jp
sarb
sbb
sub
test
xchg
mov
ljmp
push
call
pop
jbe
jmp
push
sti
aam
inc
je
inc
cmp
sbb
cli
in
push
pop
divb
clc
xor
sbb
mov
or
popf
cmpsb
pop
call
loopne
dec
or
mov
push
jbe
filds
in
mov
decl
jnp
xchg
xchg
out
mov
xchg
fdivrl
xchg
adc
jp
aad
decl
adc
mov
sub
xchg
lods
clc
mov
sbb
out
movsb
test
xchg
cmp
mov
stc
ret
sbb
xor
aad
addr16
pushf
xorb
repz
insb
pop
jg
lret
lret
or
mul
push
jo
pop
dec
test
std
imul
lret
loope
fildl
lcall
fincstp
out
stos
test
test
xchg
adc
dec
push
sarl
cmpsb
mov
out
out
call
xor
lock
ffree
cli
jmp
cmp
gs
in
shlb
dec
das
xchg
lods
decl
mov
lret
sub
lcall
fcmovnbe
xor
mov
mov
cmpsl
sub
es
cltd
out
cli
ficoml
imul
push
std
jp
mov
jne
xchg
mov
inc
incl
pop
lea
sahf
push
pushf
gs
mov
jb
lds
pushl
fisubs
push
imul
idivb
inc
dec
xor
cmp
xor
mov
pop
call
fldl
push
pop
movsl
mov
rcll
sar
aaa
jle
das
xchg
shrb
jl
addr16
sbb
jecxz
lahf
lret
mov
pop
jne
inc
or
lcall
orb
or
andb
insb
stos
mov
les
into
inc
mov
lret
aad
jg
mov
outsb
js
dec
pusha
fisubrs
inc
notb
das
sar
xor
and
scas
clc
es
mov
jge
pop
rcrl
xor
sub
pushl
mov
mov
in
test
cmp
cmp
fildl
mov
ja
decl
out
xchg
hlt
cmp
data16
jmp
mov
jbe
add
and
mov
mov
pushl
std
cli
pop
cmc
outsb
insl
subl
out
vmulss
adc
fldl
gs
jmp
dec
das
cmpsl
push
loop
test
lcall
xchg
aam
xor
in
data16
nop
sbb
call
sub
imul
ja
std
aas
cmpsl
sbb
enter
aaa
into
push
bound
push
aam
scas
lret
or
fnstcw
or
xchg
mov
dec
push
pop
lea
data16
gs
mov
out
mov
mov
insl
mov
push
cwtl
sub
dec
cmp
sahf
int3
call
loopne
jmp
out
and
mov
mov
sbb
jg
pop
jle
mov
call
scas
dec
insl
pop
movsb
cwtl
cwtl
aam
push
pop
fistps
ja
int3
xlat
lods
dec
xchg
cmp
js
mov
mov
pop
ds
lcall
mov
push
adc
xchg
inc
cli
mull
adc
movsl
push
es
pop
cmp
ficoml
push
ljmp
icebp
scas
into
inc
jae
pop
pop
fcoms
dec
xor
ljmp
mov
out
jmp
in
push
mov
xchg
cltd
dec
sub
fcomip
fsubs
xchg
xchg
int
sub
lret
test
sub
mov
dec
and
inc
scas
test
lret
and
xchg
or
mov
decl
out
add
lock
loopne
mov
icebp
fwait
out
add
sbbb
mov
cmp
push
or
or
mov
inc
out
push
or
aam
inc
mov
jbe
in
add
loop
mov
jg
int3
cli
mov
xchg
scas
push
stc
out
out
sub
dec
movsl
fists
addb
inc
sub
mov
aaa
and
jb
xchg
ljmp
cmp
cli
stc
aam
sarl
nop
dec
test
mov
test
or
mov
cmpsb
je
imul
jns
ljmp
lahf
pop
test
pushl
jae
sbb
cmp
cmc
push
lahf
or
add
pop
jle
ljmp
pop
subl
xchg
lret
mov
jp
xchg
out
push
leave
adc
imul
aaa
fwait
push
pop
sub
test
scas
add
jge
xor
movsb
sub
mov
lea
mov
xor
fisttps
mov
hlt
clc
inc
sub
loope
shlb
pusha
out
mov
gs
aam
test
cld
std
ljmp
jl
das
mov
add
or
pop
cmp
fidivl
dec
dec
loopne
mov
adc
leave
ljmp
mov
or
push
jle
cli
sub
int3
out
stc
lret
inc
pop
inc
dec
cld
lcall
cmpsb
push
scas
icebp
rcll
push
adc
add
lret
roll
cmp
int
negl
dec
jb
or
inc
xchg
mov
call
incl
jge
lea
push
or
rcrb
adc
data16
shrb
jmp
mov
mov
push
bound
xor
jns
cmp
lcall
fidivl
pusha
iret
sahf
jnp
addr16
mov
xorb
loope
je
outsb
inc
lret
cmp
rcrl
repnz
mov
insl
add
jg
in
pop
lcall
mov
push
jno
jb
sahf
hlt
mov
fmull
mov
call
cltd
repz
stos
mov
pop
xchg
xor
dec
rclb
xor
jmp
cmp
arpl
sub
imul
adc
inc
sub
and
pushl
nop
int3
or
daa
sbb
sbb
repnz
mov
shlb
mov
iret
xor
ljmp
aam
xor
movsl
mov
mov
test
adc
push
dec
call
sub
jmp
test
mov
ficomps
sbb
mov
cli
sbb
pop
not
lods
or
jmp
repz
fwait
adc
dec
mov
nop
in
mov
xchg
lods
push
outsl
arpl
stos
sahf
cmp
cmp
inc
jns
mov
push
jle
adc
push
push
outsl
mov
jmp
call
sidtl
mov
jp
push
pusha
popa
push
inc
hlt
push
cmp
pop
pop
add
dec
jecxz
decl
mov
hlt
xor
fsts
mov
jl
es
sbb
push
js
pushl
xchg
test
lcall
add
or
mov
jg
movsb
in
icebp
xor
jecxz
imul
test
xor
hlt
int3
stos
and
add
adc
lcall
xchg
sbb
cmpsl
jae
cmp
loopne
fcom
pop
flds
decl
dec
mov
sub
jmp
jne
sbb
sub
fcomps
in
xchg
mov
pop
jl
inc
inc
mov
mov
and
add
pop
decl
cmp
jo
repnz
ror
jae
and
icebp
sbb
jmp
decl
icebp
mul
push
dec
shl
cmp
pushf
mov
xchg
ret
and
mov
push
mov
mov
cmp
frstor
lahf
pushf
int3
addr16
jmp
aad
and
xor
lcall
pusha
andb
xadd
out
data16
ror
rcr
imul
call
ljmp
idivb
repnz
cmp
hlt
jnp
dec
lods
cmp
add
xchg
pop
adcb
pop
mov
nop
xor
push
xor
xchg
decl
loop
aad
add
clc
push
cwtl
loopne
pop
or
push
cli
mov
ljmp
scas
xor
lock
dec
test
leave
lods
jmp
xor
pop
sbb
iret
pop
adc
pop
lods
out
movsb
hlt
pop
aas
ret
scas
insl
pop
mov
sahf
sub
clc
pop
faddp
push
ljmp
iret
outsl
cmp
dec
gs
or
add
ds
pop
sbb
in
gs
or
inc
xchg
cmp
and
loope
imul
shrb
std
pop
lahf
data16
inc
call
call
in
scas
lods
fadds
shl
pop
stos
xor
adc
loopne,pt
push
adc
lock
popa
mov
or
sub
aad
mov
dec
add
rcrl
out
mov
or
mov
stc
es
hlt
cmpsl
addr16
xchg
cwtl
jg
movsb
pop
mov
int3
xchg
pushl
adc
add
push
adc
mov
xchg
jne
push
rcll
jmp
jmp
orb
in
sbb
aad
lods
xor
repz
sbb
fadds
pop
inc
popa
lods
inc
mov
adc
out
xchg
adc
and
sar
mov
cmpsb
inc
sbb
pop
test
mov
repnz
call
cmp
gs
daa
inc
jno
pusha
movsb
add
imul
test
and
daa
pushf
test
int3
sub
sbb
int3
shlb
xchg
addr16
incl
into
aaa
dec
fs
sub
push
add
pop
mov
xor
mov
cld
stos
adc
lret
popf
fdivs
add
pushl
dec
out
fildll
dec
pushf
ljmp
dec
dec
dec
test
rorl
adc
mov
jmp
cmp
ja
jno
pushf
out
adc
int3
stos
leave
and
mov
lcall
and
adcb
popf
mov
test
jno
dec
out
stos
imulb
cwtl
sbb
xchg
stos
and
incl
add
ljmp
popa
xor
add
jl
lret
filds
fistpll
maxps
insb
and
push
pushl
std
int
mov
sbb
dec
ficomps
push
jmp
jnp
js
xlat
incl
mov
mov
gs
daa
xor
xor
std
sbbl
push
jbe
mov
subl
in
jne
push
add
ljmp
inc
xor
in
pushf
pop
pop
add
sub
pop
orb
cltd
scas
xor
insb
push
or
cmpsb
int
and
ljmp
add
pop
icebp
mov
sti
xchg
jns
lds
push
xor
ret
cmc
ret
enter
in
call
jns
imul
leave
out
inc
sub
in
or
cmp
hlt
js
lock
mov
lcall
jle
pusha
std
and
ss
lods
inc
adc
cmp
push
sahf
repnz
or
mov
jg
incl
outsb
mov
push
dec
nop
inc
out
sbb
mov
jl
mov
jge
inc
sahf
shlb
pushf
dec
int
lret
cs
outsb
dec
or
inc
int
mov
out
incl
fildl
pop
sub
xor
mov
nop
xchg
mov
scas
push
ficoml
ljmp
imul
mov
jp
inc
test
push
push
lcall
sbb
inc
pop
pop
int3
pusha
test
lods
lea
fwait
movsb
push
mov
sbb
push
outsl
jmp
mov
jno
sub
fsubl
sub
xorb
je
ljmp
popf
icebp
div
icebp
ret
mov
sub
test
je,pn
mov
insl
xchg
fnstsw
adc
insl
js
jg
xchg
adc
jecxz
jnp
fdivrl
rcll
in
fdivrl
sbb
sar
mov
sbb
in
mov
mov
fisubrl
sub
stos
in
pop
cwtl
dec
fistpl
xor
cli
lcall
incl
xchg
sahf
mov
cmp
sti
pusha
mov
out
int
popa
jb
ds
mov
ficoml
pop
repnz
mov
mov
ljmp
push
fdivrs
xor
frstor
dec
or
lcall
xchg
pop
rorb
decl
cmp
inc
mov
sbb
mov
aad
repnz
pushl
cmpsb
add
lods
pop
and
inc
sbb
xchg
jns
add
std
add
sub
push
sbb
cmp
testb
dec
lock
invd
sbb
pushl
repnz
cs
into
adc
lcall
mov
adc
in
call
dec
xchg
in
inc
lock
xchg
fldz
inc
mov
arpl
lea
call
xchg
push
adc
in
or
outsl
pop
imul
sbb
movsb
cmp
incl
adc
pop
sub
ja
push
add
inc
mov
fistpl
and
and
add
jmp
mov
pop
dec
shll
lcall
sbb
das
cmp
mov
imul
jmp
lds
sbb
xor
mov
addr16
pop
dec
mov
mov
imul
inc
mov
xor
xchg
jmp
shr
or
gs
inc
cmp
idiv
out
rolb
stos
cmpsb
adc
in
repnz
jmp
mov
or
adc
mov
fnstsw
ds
iret
decl
mov
mov
add
pop
fdivs
add
adc
mov
call
shl
cs
js
shll
in
ss
out
jle
cmpsb
xor
xchg
pushl
mov
xchg
in
push
icebp
sti
sti
leave
sbb
jge
cmp
sahf
or
sahf
mov
lcall
test
mov
fs
sub
int
movsl
jb
out
ljmp
je
outsl
shll
jb
inc
in
mov
repnz
insl
xchg
pusha
and
call
cli
ss
push
adc
in
jne
test
cmp
jns
sbb
inc
lcall
out
loopne
inc
imul
pop
adc
push
mov
push
popf
decl
push
gs
xor
push
dec
mov
jae
outsb
and
aam
push
push
ljmp
shll
dec
in
pop
loop
lcall
mov
mov
call
cmpl
xor
iret
push
mov
out
push
mov
mov
clc
sbb
clc
int
enter
icebp
out
inc
dec
dec
iret
gs
lret
ljmp
aas
push
aas
js
sbb
sub
push
scas
test
xchg
out
subl
ljmp
pusha
cld
mov
or
daa
xchg
mov
jb
imul
lret
gs
testl
cmpsb
jg
lret
cli
pushf
push
push
lock
dec
xor
dec
push
inc
hlt
xor
or
clc
cmpsl
popa
adc
dec
call
aad
inc
dec
decl
or
jae
adc
fdivrp
sub
ds
fdivrs
add
push
dec
jl
push
push
sbb
sahf
lret
jge
ljmp
int
pop
sub
dec
fdiv
ljmp
orb
dec
push
notb
test
jg
dec
adc
cwtl
ljmp
inc
jmp
ljmp
fistpl
call
dec
mov
jae
add
repz
jno
daa
ds
lret
mov
xchg
cmp
ja
lods
cmp
mov
stos
subb
xchg
inc
fcmovb
push
inc
enter
decl
jg
sahf
mov
add
imul
and
sub
stos
dec
push
adc
idiv
push
fsts
sahf
inc
sbb
bound
mov
mov
xlat
or
xchg
clc
dec
or
pushl
out
les
xchg
nop
hlt
push
outsl
push
js
pushf
or
aad
aaa
arpl
out
jbe
jl
in
inc
jmp
ljmp
adc
clc
cmp
push
mov
adc
push
int3
mov
pop
cmp
push
cmp
dec
dec
ficompl
std
fistpll
fwait
pop
inc
cmpsb
test
cwtl
mov
ljmp
aam
in
pop
js
in
push
data16
cmp
cs
pop
fcomip
sbb
ret
cli
stc
clc
stc
fdivrp
xor
jne
mov
cmp
popa
fs
ret
pushl
std
or
ret
push
inc
pop
aas
and
in
pop
mov
or
jg
int
dec
stos
cld
les
test
mov
fldt
mov
decl
test
fcomps
stc
dec
movsl
out
inc
dec
add
push
or
mov
loop
in
push
orb
nop/reserved
insl
cli
pusha
inc
adc
hlt
lcall
ljmp
addr16
push
jle
pop
inc
test
imul
lcall
pop
xchg
enter
out
dec
addl
mov
decl
cmp
sbb
int3
mov
aas
hlt
sbb
std
adc
into
add
mov
xchg
pop
adc
das
push
cmp
punpckhwd
mov
imul
mov
xor
arpl
jge
stos
std
testb
mov
scas
icebp
xchg
les
mov
mov
jmp
push
mov
pop
add
cmp
mov
push
mov
cmpsb
cmp
pushl
mov
hlt
sbb
jno
insb
xor
push
mov
out
nop
inc
xchg
test
call
mov
fcmovb
loopne
mov
mov
fyl2xp1
inc
dec
jmp
out
hlt
inc
xchg
add
jp
shrl
loopne
leave
hlt
xchg
cwtl
icebp
in
bound
incl
imul
int3
lret
jmp
lods
pushf
rolb
xlat
pop
cmp
ljmp
clc
mov
mov
jl
cltd
insl
push
or
mov
jb
in
adc
lock
decl
push
out
xchg
in
out
push
sbb
in
in
mov
lcall
jmp
daa
and
mov
ja
hlt
pop
mov
jns
lret
hlt
jb
fnstenv
push
dec
push
push
aaa
cmp
std
cmc
outsl
or
ljmp
cmp
add
es
rcr
cmp
push
jb
enter
push
sbb
xchg
fmuls
lret
js
inc
f2xm1
mov
fimull
mov
jo
sub
xchg
mov
or
mov
stc
jno
jmp
add
insb
adc
push
adc
jno
clc
sub
ret
jle
cmc
adc
push
shr
mov
and
push
pop
pushl
insb
jecxz
xchg
incl
inc
mull
jae
xchg
in
inc
testb
rcl
inc
lock
int3
sbb
and
hlt
jmp
sub
cmp
mov
test
xchg
inc
adc
ljmp
imul
sub
dec
jb
es
pop
mov
jg
inc
mov
mov
or
or
mov
fxch
push
mov
test
pushl
pop
pop
mov
loope
xchg
addr16
cmp
fdivrs
xor
fbld
in
call
inc
xchg
fisubl
mov
pop
lds
jg
int
dec
xor
les
or
decl
sbb
inc
or
popa
andl
fwait
or
cmp
inc
and
mov
mov
jmp
cld
adc
inc
pop
pusha
sbb
icebp
xor
mov
cmp
push
sar
aas
push
mov
add
push
incl
mov
les
out
rcrb
adc
into
shlb
hlt
ljmp
enter
xchg
sbb
mov
mov
ljmp
inc
lret
pushf
pop
mov
push
dec
cmp
aaa
add
xchg
cmpsb
add
in
aaa
incl
inc
das
insl
push
dec
in
test
pop
imul
decl
sub
aas
inc
mov
jp
xchg
adcb
dec
mov
jge
stos
icebp
aas
xor
call
cld
pushl
pop
dec
xchg
jecxz
mov
mov
pop
subb
sub
ljmp
inc
mov
jge
push
sbb
and
aad
xchg
sarb
mov
push
cmp
ss
ljmp
shrb
dec
jge
pushf
enter
dec
inc
in
hlt
into
loopne
insb
jbe
lahf
adc
and
or
ljmp
cmp
lcall
jae
xchg
pushf
faddp
std
stc
cmp
mov
stos
lea
popa
into
lahf
adc
lods
icebp
and
sarl
add
pushl
push
lahf
push
push
add
shlb
lahf
repz
mov
loop
push
inc
decl
mov
shrb
std
insb
add
jb
ror
cmp
sbb
cmp
iret
ljmp
cmp
mov
fs
mov
mov
xor
inc
push
mov
call
dec
jb
xchg
lret
incb
inc
push
or
ja
out
cmp
icebp
decl
add
pushf
adc
or
sub
and
lods
ja
inc
arpl
jbe
nop
lret
jg
mov
popf
leave
jnp
nop
inc
mov
mov
sub
dec
mov
aad
fcoms
outsb
add
or
out
loop
xchg
aad
adc
es
xchg
or
ljmp
clc
jmp
xchg
inc
inc
loopne
idivb
jecxz
shrb
imul
push
std
lret
jp
dec
sub
sti
adc
dec
cmpsl
pushf
outsl
xchg
pop
clc
incl
and
push
xor
cmp
mov
rol
pop
add
adc
ljmp
fs
or
ret
push
dec
mov
pop
push
loopne
das
sbb
xchg
jmp
inc
lret
testb
setl
mov
and
add
sbb
inc
adc
sub
call
sbb
sbb
jecxz
sbbb
fbstp
adcb
pop
fldenv
jmp
pop
incl
inc
dec
mov
fidivrl
xchg
out
or
call
jbe
jnp
call
mov
sti
js
ds
in
lahf
in
aaa
mov
xchg
pushf
xchg
jmp
ljmp
inc
loope
movsb
in
sbb
lods
sub
mov
push
push
std
xchg
mov
call
jno
les
gs
repnz
fistps
mov
cmp
push
shl
out
fsubrl
sbb
dec
ljmp
pop
dec
jp
insb
xchg
fsubr
shlb
pop
scas
push
and
push
jge
and
add
pushl
je
sarb
mov
dec
adc
ja
jl
popf
inc
add
inc
dec
pop
cmp
push
mov
push
sub
std
lods
rcl
in
inc
in
lods
icebp
dec
adc
jp
mov
cmp
decl
arpl
adc
sub
dec
hlt
dec
fldcw
insl
imul
stc
dec
lret
push
mov
mov
mov
pop
or
sub
loop
add
mov
push
scas
das
clc
decl
xchg
push
test
es
inc
sub
es
dec
adc
rclb
mov
xchg
insl
dec
pop
lahf
jmp
int3
lods
jnp
repz
jno
sbb
into
lcall
leave
xor
adc
in
daa
pop
xor
lods
cli
cld
xchg
lcall
sbb
insb
aam
push
jmp
and
clc
fsubl
cmp
and
js
call
ret
mov
fs
push
xchg
cli
gs
jae
cmpsb
mov
test
cmp
ret
cld
pop
adc
sti
fstl
and
in
add
jmp
clc
xchg
adc
adc
dec
sti
sbb
push
dec
movsl
cli
out
dec
loop
movaps
inc
and
inc
not
mov
addb
addr16
cmc
mov
mov
stos
repz
push
aas
jecxz
pop
and
fists
xchg
mov
leave
sti
mov
mov
sahf
xlat
shlb
lcall
lret
jbe
jb
lahf
mov
adc
add
movsb
xlat
pop
mov
sbb
jg
jnp
mov
call
pushl
outsl
int
inc
in
rol
leave
mov
incl
xor
lret
xor
xlat
lds
mov
movsl
mov
jmp
pop
sub
pop
scas
cmp
out
clc
ljmp
js
int3
cs
adc
push
push
icebp
ret
cmp
mov
lea
call
jl
mov
mov
ficompl
and
leave
dec
or
pinsrw
cld
adc
test
cld
cli
das
rcrb
pop
dec
dec
xchg
jo
or
rcr
push
stc
dec
add
incb
mov
jo
cmp
out
xchg
ficoml
incl
or
xor
aam
out
dec
aad
movl
or
mov
pop
les
lcall
mov
adc
xor
ljmp
pop
jo
xchg
cli
push
pop
ljmp
dec
jecxz
mov
mov
adc
lret
imul
lcall
sti
outsb
xchg
iret
hlt
xchg
fnsetpm(287
aad
mov
jns
stc
push
jle
inc
add
jg
fstps
and
and
aad
xchg
cmp
and
or
add
insb
cmp
incl
or
out
lret
ret
bound
sbb
lods
mov
es
mov
ljmp
mov
mov
pop
push
mov
xchg
xchg
out
dec
mov
sbb
add
cli
xor
and
inc
adc
rcll
dec
add
mov
fisttpl
cmpsb
jp
repnz
es
jmp
das
movsb
sti
andl
push
inc
movsb
std
scas
cwtl
cld
push
lds
fcomps
dec
fcoml
xor
pushl
dec
dec
adc
cs
jnp
push
xchg
loopne
gs
pop
mov
dec
push
bound
lcall
or
jbe
jnp
pop
data16
xchg
lcall
std
stos
lds
mov
xchg
pop
mov
test
jmp
mov
lret
ds
sub
mov
xchg
cmc
movsl
stos
jecxz
mov
xor
push
xor
js
out
mov
mov
je
jbe
fisubs
in
fcomip
int3
cmp
push
pop
xchg
jp
mov
std
xor
aad
adc
popa
fidivrs
decl
lock
lret
or
xchg
jl
mov
stos
pop
mov
fcoms
popf
call
sbb
xor
imul
pop
mov
xor
sarb
or
test
pusha
or
push
inc
cs
dec
jne
mov
mov
mov
pop
ljmp
out
loop
lcall
mov
pop
fstps
pop
xorb
inc
shl
mov
and
push
xor
call
add
pusha
pop
aas
mov
sarl
inc
adc
mov
xchg
push
aam
fstpl
jb
mov
lcall
adc
mov
pop
xchg
cld
add
shll
adc
mov
sub
lods
ret
cld
jmp
xor
shr
stos
movb
js
popa
mov
jg
mov
add
loope
jl
pop
movsl
inc
jecxz
mov
pushl
pop
imul
lods
or
out
push
xchg
into
sahf
paddusw
and
mov
daa
ss
ret
xor
repz
sti
adc
inc
dec
mov
movsb
mov
adc
sub
add
dec
mov
jle
insb
les
int
cmpsb
dec
cli
inc
decl
rcl
stc
sarb
ljmp
arpl
inc
mov
ljmp
mov
les
enter
xorl
lahf
push
incl
outsb
dec
icebp
pop
mov
jle
fbstp
adc
ret
mov
lea
cld
call
test
mov
out
pop
xchg
mov
pop
loopne
cmp
aas
mov
jecxz
movsb
jg
jns
xor
inc
ret
mov
push
dec
cs
incl
push
push
add
decl
xchg
dec
shrb
dec
xchg
or
mov
mov
outsl
and
push
filds
mov
gs
jp
xor
ret
sbb
or
add
adc
loope
lods
ficoml
in
scas
mov
pushl
subb
movsb
mov
xchg
test
clc
xchg
jo
xlat
aaa
std
decl
push
daa
xchg
sbb
jl
sub
sbb
mov
jmp
cwtl
ss
jle
add
push
cld
fisubs
mov
nop
lods
out
sub
test
addr16
call
lea
push
mov
repz
shlb
push
repz
mov
cmp
jmp
aaa
mov
cltd
push
adc
mov
mov
dec
jmp
adc
xchg
push
lock
jo
mov
push
jecxz
or
pop
and
lcall
xchg
std
pop
add
popf
mov
pop
mov
xchg
add
movsb
inc
add
iret
std
shr
dec
push
push
sub
test
or
add
dec
je
addr16
jbe
imull
adc
into
ret
inc
movl
ljmp
xchg
clc
or
mov
or
pop
push
push
les
fimuls
xchg
mov
mov
cmpsb
push
lds
pop
mov
test
jp
sahf
sbb
inc
mov
adc
xchg
cltd
cli
outsb
inc
pop
shlb
pop
cld
call
inc
cld
hlt
aad
out
jp
hlt
add
pop
mov
lahf
dec
pop
fcomi
imul
push
xchg
adc
adcl
lcall
inc
xchg
out
inc
xor
jbe
lods
push
cld
push
neg
inc
inc
stos
xlat
xor
gs
or
call
pushf
aad
shll
jmp
cltd
mov
mov
test
insl
cld
jg
in
dec
push
enter
in
je
mov
xor
mov
cli
xor
mov
iretw
arpl
mov
and
ljmp
imul
repnz
rcl
into
inc
cld
call
out
pop
xor
call
inc
mov
jbe
popf
mov
ds
flds
or
lcall
jmp
jne
mov
sub
sub
xchg
dec
mov
add
inc
rcl
xchg
aaa
decl
outsb
ds
repz
pop
inc
mov
out
scas
xchg
mov
sub
mov
call
stc
inc
pop
xor
dec
std
inc
hlt
cld
cmp
xchg
push
cmp
push
push
pop
xor
data16
mov
dec
inc
inc
adc
and
iret
dec
xchg
lds
cmp
scas
jne
pop
ja
insl
jecxz
push
dec
jp
lret
jns
ljmp
std
cwtl
push
add
jecxz
jno
pop
stos
adc
enter
sbb
outsb
repz
pushl
and
and
ja
mov
scas
mov
sub
int
aam
push
pop
push
xchg
fwait
sub
fdivl
shrb
xor
fcmovu
lods
cmp
jmp
stos
mov
cmp
lcall
sahf
repz
push
sarb
scas
cmp
push
xor
add
or
icebp
push
inc
dec
xor
imul
cmpsl
mov
in
adc
mov
mov
fimuls
adc
add
in
incl
insl
pop
and
aad
je
fwait
pop
dec
fsts
in
clc
insb
cmp
mov
push
ljmp
jo
jge
mov
push
sub
cmc
pop
out
mov
and
stos
mov
fs
rcrl
nop
lret
jnp
sar
in
jnp
insb
mov
icebp
test
xchg
mov
fmul
adc
lret
sti
and
cmpsb
jmp
test
or
leave
or
clc
test
ja
xchg
xchg
in
pushf
call
cmova
add
call
cmp
jnp
loop
xor
mov
mov
ljmp
jle
loop
cmp
mov
push
xchg
sbb
jno
inc
ss
and
decl
mov
mov
loopne
jno
push
pop
sub
jl
fcomip
mov
sbb
js
ss
and
nop
xor
mov
jecxz
and
xchg
ljmp
push
aam
adc
decl
xchg
cmp
notb
fsubrp
shlb
pop
or
movl
mov
mov
pop
mov
shll
and
mov
add
enter
sti
mov
jns
xor
sti
out
aaa
orl
sti
mov
push
cmp
mov
xor
out
decl
test
mov
nop
andb
mov
clc
je
push
or
mov
xor
cmp
and
sub
popa
leave
gs
stc
ret
ret
clc
pop
add
fwait
lret
test
jmp
and
ja
pop
sub
dec
jle
pop
mov
mov
stc
adc
add
inc
push
mov
mov
mov
inc
scas
and
lcall
or
or
mov
imul
nop
jge
jle
shl
xor
jmp
repz
into
pop
dec
int
xor
aam
pop
in
aas
xor
or
dec
push
or
mov
xchg
mov
inc
push
push
adc
xchg
xor
mov
mov
jg
aas
std
decl
lock
aam
sub
cmp
sarb
push
inc
loope
call
jbe
imul
aam
outsb
aad
mov
cmp
ljmp
fsub
mov
dec
mov
dec
fimuls
popf
inc
insl
stos
push
int
or
stc
xchg
icebp
ljmp
inc
xor
xor
xchg
or
xchg
sbb
sbb
ljmp
add
lret
ja
xorl
insl
repz
cmp
out
roll
dec
in
pop
mov
inc
hlt
ficomps
jmp
push
enter
clc
les
xchg
jnp
or
das
jle
test
pop
xor
inc
pop
rorl
fsqrt
lds
ja
and
mov
loopne
mov
xchg
aas
idivb
arpl
lcall
xchg
jl
inc
inc
jmp
into
fdivr
cltd
call
dec
scas
jnp
call
jo
dec
add
add
sub
sub
jg
neg
mov
call
dec
mov
mov
jbe
fsts
pminsw
dec
ds
push
cmp
lcall
mov
xor
sbb
inc
mov
sbb
ja
xorb
sub
pop
or
and
cmp
mov
cmp
push
loopne
das
and
out
mov
lea
outsl
pop
jo
inc
mov
xor
pushl
inc
xor
cmpsl
loope
push
int
push
lahf
bound
add
div
in
dec
jp
dec
imul
lcall
xor
notb
negl
mov
cmp
adc
mov
ret
mov
adc
sub
dec
pushf
adc
pop
pop
jnp
lods
jg
xor
dec
out
jbe
adc
adc
fwait
pop
into
or
mov
decl
mov
mov
xchg
aad
cmp
enter
in
test
mov
mov
mov
cmp
xor
test
int3
or
popa
out
movsl
aad
rcll
outsl
jmp
push
jg
xor
cwtl
mov
in
jge
pop
ficomps
das
mov
inc
mov
mov
sbb
mov
mov
inc
fbstp
imul
fdiv
mulb
push
lock
in
sub
test
inc
hlt
rorb
add
sbb
mov
decl
sahf
dec
push
sbb
sub
mov
mov
pop
loope
inc
sub
data16
faddl
cli
dec
mov
adcb
adc
push
gs
sbb
ret
nop
enter
out
xchg
aam
sub
incl
add
sub
loope
aam
cmpb
push
aas
ljmp
cs
add
fisubrl
lods
push
ja
adc
fucomip
mov
call
stc
jbe
xlat
sbb
mov
push
out
subb
pop
fdivl
out
insb
and
cmp
dec
dec
sbb
mov
mov
imul
mov
push
sub
xor
aaa
push
and
loope
movsb
ss
mov
inc
inc
cmp
gs
lahf
out
mov
mov
call
scas
mov
and
mov
cld
lret
inc
pop
sbb
pushf
pop
mov
sub
sub
sub
xchg
push
cmp
jmp
call
and
cli
sbb
mov
hlt
nop
jae
test
insl
jo
enter
cld
jg
pop
test
sbb
mov
mov
push
fisubl
lcall
mov
out
fadds
ja
and
mov
nop
and
loopne
loop
push
sub
movsb
pop
cmpsl
cmpsl
and
sub
or
shll
mov
and
movb
lret
pushf
add
test
push
int3
xor
ret
cmp
cmp
insb
pop
pop
popa
inc
sub
cmp
push
push
nop
push
std
scas
test
cld
cmp
dec
les
out
fucomp
or
mov
push
iret
ret
cmpsl
mov
lcall
ljmp
sub
insl
rcl
xchg
lea
call
cmp
inc
lods
xchg
add
mov
pusha
data16
ror
mov
add
pop
enter
jle
jmp
cli
hlt
popl
sahf
int3
pushf
jp
mov
mov
jne
inc
cmp
faddl
sahf
cmp
arpl
adc
mov
push
mov
mov
sub
int3
xchg
mov
cld
inc
fmuls
mov
mov
or
lds
cmp
clc
and
lret
fbld
decl
ret
adc
adc
sub
cltd
call
lea
and
aas
push
jg
sub
fildl
cmp
imul
add
fnclex
decl
push
xchg
in
test
lahf
and
cmp
fcmovb
outsb
int
ljmp
loop
mov
jnp
jl
or
das
decl
stos
jge
or
ret
cld
lods
inc
inc
popa
sub
fildl
es
sbb
mov
xchg
mov
push
repnz
pushf
jbe
ds
sbb
lcall
xlat
or
sbb
dec
cmp
jne
cmpsb
bound
dec
sbb
cmp
mov
xlat
fwait
sub
pop
cmp
lds
fdivl
or
pushl
fcoms
xchg
dec
or
bound
mov
jl
sub
or
push
and
adc
jnp
add
arpl
or
roll
jl
decl
rorl
mov
dec
pop
xchg
call
adc
mov
push
insl
inc
cmp
mov
and
fwait
movsl
inc
jl
mov
rorb
shll
and
xchg
sti
mov
arpl
xchg
cltd
dec
in
mov
and
fucomi
stos
in
xor
jno
pop
cmove
fs
jl
sti
icebp
jp
mov
stc
loop
out
jmp
cmp
jno
push
and
or
mov
call
jecxz
cli
or
or
gs
or
jg
lds
decl
mov
fs
ss
movsl
mov
daa
mov
lahf
orb
nop
dec
jle
call
push
xchg
sub
mov
dec
dec
shl
xor
push
xchg
mov
xor
into
icebp
loopne
dec
xchg
fwait
mov
loopne
lcall
in
mov
into
xchg
xor
pop
fstpl
stos
jg
cwtl
mov
pop
shr
fidivrs
scas
cs
icebp
sub
dec
push
das
sbb
xchg
scas
lcall
or
jl
adc
pop
fucomp
scas
sub
push
pop
fs
lcall
cmp
hlt
mov
mov
dec
sbb
pop
sub
add
jg
decl
inc
mov
or
lods
fstps
mov
xchg
pop
push
dec
js
sti
cmp
xchg
inc
mov
arpl
call
cs
add
add
jmp
or
mov
jmp
stos
ja
mov
sub
call
and
and
lcall
and
stc
xchg
jl
test
push
fwait
and
pop
mov
js
test
loop
aaa
out
loop
xor
mov
bound
ljmp
xchg
and
in
or
jmp
popf
es
add
jns
push
into
movsb
int3
sub
sbb
mov
mov
movsl
pop
aam
mov
daa
insb
std
arpl
and
cmpsl
mov
mov
ljmp
cmp
in
rcr
sub
pmuludq
psubusb
les
fdivrl
pushl
aad
fistps
cs
rcr
inc
iret
int
cmp
imul
sar
decl
mov
ret
xchg
insl
ficompl
xor
mov
call
sahf
stos
inc
ret
ret
dec
add
andb
sbb
fs
and
clc
ficoms
mov
pop
dec
loop
mov
iret
insb
dec
repz
cmp
push
and
jmp
xor
rcrb
mov
pop
mov
das
es
jae
cmp
in
sar
decl
sarb
dec
out
mov
adcb
negl
mov
arpl
mov
sti
call
lret
les
addr16
jae
sbb
int3
ret
dec
sub
cltd
jmp
incl
push
dec
mov
and
push
andb
mov
mov
mov
mov
shll
jmp
sti
jae
add
call
nop
rclb
shll
pop
jns
adc
mov
test
cld
add
cld
jg
mov
js
jl
jne
movsl
inc
repnz
insl
orb
leave
xchg
mov
clc
filds
push
int
mov
pushf
xchg
push
push
sbb
pop
mov
xor
pop
hlt
decl
sub
pop
movsb
lods
fdivl
adc
cmp
jo
lcall
jle
mov
mov
aad
add
add
popf
pop
inc
pop
pop
call
fnsave
sub
sub
inc
outsl
dec
jnp
push
icebp
int3
mov
outsb
mov
insl
xor
jg
dec
fcompl
fisubl
adc
shlb
fdivl
jns
pop
sub
subb
lcall
in
and
mov
mov
xchg
sti
cltd
fisttps
test
and
clc
xchg
sub
dec
loope
jmp
mov
push
add
loopne
push
loop
dec
std
pop
sub
fst
andl
in
cs
out
xchg
sti
test
mov
ret
ja
or
inc
sbb
call
mov
adc
mov
icebp
jl
idivl
testw
pop
push
fsubs
push
shll
sub
dec
aas
xchg
call
into
popa
cmp
js
incl
ret
and
ljmp
sub
jb
dec
repnz
jg
inc
ljmp
xor
add
push
bound
mov
mov
test
das
fwait
in
lcall
add
mov
adc
aaa
cmp
inc
call
cltd
and
stos
fcomip
lea
pushf
pop
fdivrs
rolb
cmp
adc
mov
ljmp
adc
inc
sti
push
les
mov
mov
and
stc
iret
shlb
mov
add
fldcw
push
loop
or
insl
fnstsw
imul
pushf
ljmp
ret
clc
xchg
add
push
cmpb
ret
adc
jmp
adc
xchg
sahf
fimull
jbe
and
hlt
dec
mov
gs
ljmp
aam
out
mov
cmp
push
outsb
xor
push
cmpsb
cmp
sbb
call
cs
or
test
mov
mov
mov
les
xor
push
jmp
pop
std
dec
pop
cmp
out
andb
ficoml
pushf
xor
mov
imul
fdivp
mov
lahf
stos
jo
inc
jae
pushf
jp
pop
jae
jg
js
std
hlt
repz
loopne
sbb
stc
inc
fidivrs
lock
jp
xlat
lea
inc
mov
call
repz
lea
inc
idivb
mov
jecxz
and
aam
imul
add
mov
jmp
je
jae
xor
mov
and
nop
and
divb
lcall
scas
cli
jmp
mov
xchg
cmp
mov
test
sbb
xor
dec
push
add
mov
mov
ljmp
and
es
loop
fistl
xor
mov
and
repnz
sub
movsb
xchg
mov
xor
idivb
je
les
iret
test
dec
sbb
cmp
aaa
clc
bound
call
lret
cmpsl
mov
cmpsl
sub
lock
pop
pushf
js
mov
incl
mov
lcall
mov
out
icebp
pop
testl
icebp
call
inc
or
in
xor
xor
inc
cltd
es
clc
mov
sahf
insl
jbe
inc
nop
cwtl
ss
bound
shrb
xchg
fdivs
in
scas
or
inc
sub
test
push
in
arpl
call
movsl
scas
or
lret
loop
xchg
jns
mov
pusha
lods
lods
dec
inc
sbb
incl
adc
pop
cmp
xchg
movsl
out
enter
push
xor
mov
push
and
data16
sbb
es
jg
popa
call
xlat
sbb
adc
aaa
lcall
in
jo
lret
push
pushl
pop
cmpsl
repz
daa
cld
mov
xchg
adc
jmp
ljmp
imul
xor
outsl
inc
cli
xchg
mov
jno
fs
push
mov
mov
push
loopne
lret
dec
pop
popa
das
xlat
ret
sub
jecxz
sub
scas
cmpb
jle
sbb
jl
xchg
jns
stc
jb
jbe
jne
sar
fldln2
jg
aad
and
jo
jnp
inc
orb
pop
pop
into
sbb
cmp
pushl
or
sub
and
inc
or
movsb
jno
push
das
ficoms
xchg
xor
inc
incl
and
fldcw
popf
push
cld
jmp
fwait
arpl
mov
mov
and
in
xorl
pop
fwait
lea
lcall
subl
fiadds
xor
mov
sti
int3
jmp
jb
and
imul
push
or
pushl
es
test
data16
sbb
xorl
push
mov
sbb
call
dec
mov
push
das
outsb
push
jnp
or
pop
insb
or
adc
pop
test
lcall
out
imul
add
lret
inc
cmp
popa
jmp
js
enter
inc
xlat
add
push
enter
movsb
mov
push
adcb
push
and
ljmp
pop
call
jge
sbb
and
pop
fisubrs
in
mov
jecxz
pushl
mov
adc
sti
push
cmp
mov
inc
sbb
into
int
xchg
test
pushf
add
jo
adc
shlb
jnp
pop
daa
fs
cmc
xchg
mov
jg
push
adc
mov
out
push
xor
jge
sbb
dec
inc
and
lea
ficomps
cmp
xor
dec
xor
push
icebp
jmp
or
leave
jmp
xchg
ljmp
icebp
sti
jp
mov
pushl
mov
mov
dec
repz
mov
add
lcall
stc
pop
icebp
cmpb
xor
es
cmp
sub
aad
inc
fdivr
mov
mov
lods
das
push
addr16
mov
testl
xor
push
sub
mov
adc
mov
into
addb
dec
ja
cmpl
cmp
call
popf
mov
insb
push
sti
jno
sahf
std
in
jge
or
aam
inc
fcompl
incl
mov
pop
lahf
in
xor
sub
inc
push
add
inc
sub
iret
shl
fld
aas
adc
cmp
xor
add
incl
jno
cltd
sub
jne
aad
pop
ljmp
xchg
into
mov
dec
out
push
scas
fnstsw
into
dec
scas
push
mov
jnp
xchg
add
test
cmp
jmp
roll
rcrb
pop
cwtl
lret
arpl
mov
inc
lret
daa
scas
jmp
clc
pushl
xchg
sbb
dec
xor
or
xor
jae
jg
jmp
sahf
inc
add
push
mov
cwtl
sub
push
repz
xchg
dec
mov
push
and
incl
cmp
in
jae
mov
insb
int
inc
ret
push
inc
mov
mov
adc
decl
xor
lcall
mov
and
adc
lds
lock
or
sbb
js
and
ja
call
mov
inc
or
mov
addb
shld
leave
pop
jp
ja
in
sub
ss
sub
xchg
faddl
mov
jg
loopne
xor
xchg
test
dec
lahf
xor
rolb
jo
pop
jne
inc
ljmp
sarb
js
or
mov
sahf
in
fs
in
lcall
decl
push
jne
mov
mov
jmp
or
call
add
lret
cltd
icebp
int3
in
xchg
mov
pushf
push
jl
mov
aam
jg
jmp
add
outsb
aas
lret
sub
jns
jle
xchg
cmp
jno
add
scas
inc
mov
ss
and
or
pop
insl
hlt
pushl
sbb
popf
scas
mov
mov
and
test
iret
ljmp
adc
xchg
adc
imul
in
in
mov
or
clc
nop
imul
cmc
je
jmp
lods
ret
mov
ret
pop
adc
stc
xor
loop
adc
push
lcall
repz
aam
cmp
fimuls
ljmp
xchg
pop
cmp
fcomip
pushl
mov
in
out
shll
enter
fistl
out
cli
mov
fdivr
push
insl
divb
daa
loopne
roll
jo
and
sub
in
and
jle
call
jns
or
add
in
mov
add
outsl
in
sbb
sti
jmp
mov
dec
inc
dec
lret
cmp
leave
push
call
notl
out
jp
fucomip
sub
jg
mov
inc
sti
sti
mov
add
push
add
jmp
repz
mov
fs
push
mov
lods
rorb
pop
pop
repz
int3
jg
outsl
clc
ds
pop
cmpsl
cmp
lret
add
cmp
sahf
add
ljmp
push
pop
dec
cmp
gs
sbb
ja
insb
sub
call
fwait
mov
mov
loope
inc
nop
jno
add
jg
repz
scas
and
adc
aaa
dec
push
lret
lret
movlps
mov
xchg
mov
push
mov
stos
test
arpl
push
pop
sbb
cmp
insl
stos
out
jecxz
push
jmp
pop
sbb
call
adc
push
push
sbb
push
xor
add
data16
mov
cmp
lcall
adc
inc
mov
ljmp
cmpl
jge
lock
ds
and
pushl
shrb
rorl
cs
das
inc
fadds
sbb
xchg
pop
fs
incl
sbb
inc
dec
xor
pop
les
lea
int3
ud0
lcall
mov
mov
cmp
rolb
jl
and
aas
inc
inc
mov
jmp
in
push
sub
add
aad
mov
push
sahf
push
out
mov
pop
decl
pop
shlb
arpl
cmpsl
jp
es
bound
jge
xchg
jp
scas
jecxz
ljmp
inc
pop
sbb
loopne
js
mov
mov
jecxz
adc
dec
negb
inc
in
incl
cld
ja
std
cmpsl
fisttps
cli
jg
cmp
pop
aam
in
mov
insb
js
shlb
jmp
test
cltd
sti
jmp
loope
repnz
pop
inc
and
jnp
cmp
sbb
decl
popa
insl
imul
or
mov
lahf
add
xchg
outsb
and
cmp
adcl
das
sar
adc
movsl
mov
dec
mov
lret
jg
sub
or
nop
xor
mov
repnz
test
and
jle
push
test
adc
insb
dec
roll
arpl
cmc
jbe
arpl
ja
aam
pushl
testb
lcall
cmp
xchg
jno
addr16
pop
not
aas
add
jmp
test
outsb
icebp
imull
pushf
adc
je
or
sbb
or
decl
push
iret
jo
xor
add
and
stos
pop
lcall
mov
cwtl
mov
jg
or
and
aas
dec
dec
cmpsl
jl
add
in
pushl
lahf
rcll
inc
ficompl
call
xchg
fs
loope
jmp
out
incl
mov
mov
or
adc
jne
fisubs
dec
lods
push
mov
fstl
mov
jg
loope
inc
xchg
mov
daa
xchg
push
mov
sub
insl
add
add
pushl
out
xchg
aad
jo
rclb
shlb
icebp
and
test
cli
jmp
fstps
out
xor
jle
decl
adc
and
mov
inc
fdivrp
lcall
sub
sub
nop
push
xchg
jno
sub
pushl
std
outsb
ljmp
lcall
jmp
inc
cltd
cltd
inc
dec
jecxz
mov
xchg
das
adc
mov
fidivrs
inc
sti
cmp
sub
pop
jae
push
outsl
sbb
or
cmp
ja
lcall
sbb
fstl
pop
aas
lret
test
mov
fidivrl
lret
inc
mov
sahf
int3
das
cli
jg
in
pop
lods
sbb
and
enter
scas
xlat
adc
dec
jecxz
jmp
dec
ljmp
outsb
loope
or
cmc
insb
pop
lods
mov
in
pop
add
mov
sub
lock
xchg
fucom
mov
decl
cmp
add
xchg
in
ss
xchg
mov
inc
xor
daa
in
idiv
jmp
dec
arpl
mov
or
push
sbb
cmp
jle
mov
fsts
decl
lahf
jmp
bound
mov
dec
mov
xor
or
pop
fdivrp
mov
push
adcl
loope
ficoms
mov
add
and
sub
decl
test
je
outsb
ja
or
movsb
test
sub
pop
cmp
call
adc
sub
xchg
mov
jecxz,pt
xchg
or
outsl
mov
mov
or
clc
bound
mov
inc
fstl
push
push
ds
test
movsb
xchg
mov
xchg
mov
addl
push
mov
or
jmp
arpl
cmp
fstps
loop
or
adc
ljmp
scas
sbb
mov
mov
fnstcw
imul
dec
stc
mov
test
incl
or
fwait
pop
xchg
xor
mov
jge
push
sti
lcall
xchg
lea
lcall
es
adc
push
jo
out
mov
mov
popa
inc
dec
aaa
cmp
mov
pushl
mov
inc
movsb
daa
insl
adc
sbb
dec
jge
sub
imul
call
fnstenv
lcall
sub
fidivrs
sub
outsl
xchg
shlb
ss
nop
ret
xlat
imul
fstpt
adc
cmp
call
test
ret
je
cwtl
sub
mov
mov
jnp
dec
andb
outsb
or
stos
movsl
stc
lret
sbb
stc
or
bnd
inc
lods
pop
std
dec
and
idiv
call
fimull
sti
jbe
ret
roll
and
or
mov
cltd
jno
orb
sbb
push
pop
mov
cmp
cmp
jle
sbb
pop
cmp
push
adc
rorl
mov
loope
jl
roll
repz
cli
and
cmp
dec
lock
test
sbb
das
push
jl
or
fildll
fcomip
mov
testl
call
dec
out
mov
scas
loop
dec
inc
xor
mov
sti
adc
jno
in
fistpll
daa
in
mov
ret
mov
and
xchg
out
jp
rcll
pusha
ficoms
jg
xor
pop
aaa
cmp
popf
mov
push
call
inc
arpl
flds
ficompl
outsl
in
pop
xor
pop
and
fmull
sub
decl
xor
pop
inc
pop
aas
call
sub
xor
scas
pop
add
sub
pusha
mov
xchg
scas
inc
outsl
xor
imul
mov
mov
stc
cmp
pop
jg
or
inc
xchg
jno
lods
xchg
rcrb
and
cmpsb
int
popf
and
fnstsw
mov
jo
sbb
rol
mov
xchg
jb
adc
xchg
and
sub
push
sbbl
icebp
inc
enter
cmp
xor
mull
jp
cmp
out
loop
jmp
repnz
out
ret
cmp
mov
ss
das
jg
xchg
ret
cmp
push
fbld
sub
adc
out
push
js
out
dec
cld
jmp
cmc
in
push
mov
data16
aas
jno
out
movb
enter
fs
ljmp
icebp
mov
lcall
das
push
inc
pop
es
jmp
es
mov
adc
mov
jae
jne
mov
mov
arpl
dec
sbb
jge
xor
dec
mov
lock
decl
in
mov
enter
jmp
arpl
aad
test
sub
test
jg
pop
xchg
cli
stos
leave
aam
pop
push
and
pop
mov
rol
xchg
jp
adc
push
lock
mov
cmc
mov
icebp
je
jl
jg
into
push
jo
xor
data16
adc
incl
arpl
add
icebp
in
pushf
ss
adc
sahf
jne
xchg
ret
jno
loopne
or
push
pop
pop
adc
pop
hlt
fists
fimuls
inc
inc
inc
push
iret
xor
jmp
stc
mov
dec
push
jl
jno
jmp
aas
enter
decb
test
mov
jmp
ret
jae
add
or
lret
icebp
jp
mov
xchg
mov
int3
adcl
push
cmc
mov
xchg
jnp
ljmp
lahf
test
add
es
jae
push
enter
cmpsl
mov
pusha
cli
mov
call
mov
and
sbb
fstps
and
dec
sub
or
decl
inc
fadds
xor
jle
add
mov
sbb
incl
movsl
movsb
jbe
add
imulb
mov
pop
dec
sub
sahf
or
insl
push
mov
push
push
decl
xchg
sbb
int
mov
add
sbb
cmp
cmp
int3
mov
aas
test
jge
rorb
jecxz
ljmp
hlt
decl
dec
shrb
adc
mov
outsb
movsb
leave
mov
jbe
and
ja
sub
cmpsl
stos
add
ss
cmpsb
int3
dec
dec
push
push
fcmovbe
sbb
out
loop
fcmovnu
xor
insb
fcomi
iret
out
jb
and
lea
dec
mov
jg
leave
xchg
ret
or
sbb
fdivl
xchg
inc
lcall
call
xchg
adc
cwtl
push
insb
mov
pop
scas
int
cmc
and
lock
jmp
xchg
add
jp
in
sbb
test
inc
fistpll
int3
inc
in
repnz
adc
gs
ljmp
loopne
popa
imul
or
xchg
sbbl
movsl
jnp
mov
std
push
or
push
insl
push
fisubs
fdivrs
arpl
push
fwait
call
or
pushf
sahf
das
nop
lock
cli
dec
inc
insb
imul
int3
push
outsl
mov
call
std
pop
or
or
mov
adc
test
icebp
dec
adc
lods
mov
xchg
mov
dec
in
mov
movsb
lock
jg
cld
cli
push
insb
lock
outsl
adc
push
lcall
ja
iret
rclb
xchg
movsl
or
mov
lret
and
outsb
jo
xor
sbb
int3
cmpsb
mov
xor
lcall
adc
js
ds
decl
xchg
out
nop
addr16
test
mov
iret
xchg
cli
call
loopne
das
mov
decl
pop
xor
andb
pop
dec
adc
push
call
mov
mov
cmp
cwtl
push
pushf
inc
popa
cmp
aaa
out
or
dec
push
daa
and
call
pop
push
addb
push
mov
call
and
dec
and
xchg
call
inc
mov
mov
lods
in
jne
andl
call
clc
pop
push
loop
fdiv
xor
mov
jmp
insl
xchg
dec
lcall
or
and
xchg
sar
jg
ljmp
mov
aam
xchg
std
pop
pop
mov
loope
cltd
pushf
sbbl
jmp
xor
insl
test
dec
sub
movsb
loope
adc
mov
pop
aaa
mov
inc
xor
cmove
mov
into
mov
jb
fstpl
mov
out
call
ss
or
sbb
incl
sbb
scas
insb
inc
loopne
inc
lea
adc
leave
insb
or
mov
dec
xchg
sti
adc
jg
add
xor
in
pop
lret
out
fcomp
mov
decl
xchg
mov
sub
inc
push
and
inc
mov
dec
xchg
sbb
jmp
mov
mov
dec
js
pop
shlb
xor
mov
pop
dec
movsb
test
loopne
mov
or
notl
call
and
sub
mov
mov
mov
imul
dec
push
jns
pushl
adc
jp
jp
mov
sbb
arpl
andl
pushf
cmp
or
sub
pop
lcall
mov
cmpsb
xchg
clc
stc
push
sahf
xchg
mov
repz
out
xlat
xchg
push
and
inc
mov
jnp
mov
js
pop
push
xchg
stos
mov
incl
sahf
sarb
mov
push
sub
sbb
loop
cmp
mov
push
push
xor
loope
xlat
mov
decl
lock
or
rol
movsb
loopne
and
cmp
insl
cmp
ljmp
fidivs
sbbl
in
dec
addr16
scas
jns
in
adc
xlat
pop
pop
lret
push
packsswb
cmp
adc
xor
xchg
imul
mulb
push
std
test
fdivrp
je
roll
or
mov
mov
inc
and
lret
pop
inc
leave
xor
dec
test
out
push
mov
mov
lods
or
fistps
icebp
inc
test
decl
add
pop
ljmp
ja
mov
bound
sub
insl
push
adc
jecxz
les
add
test
pop
cmc
loope
mov
xchg
pushl
repz
or
add
in
repnz
lcall
push
repnz
ljmp
xor
lea
xor
in
mov
popa
mov
push
sbb
cmp
jmp
gs
int3
out
dec
bound
in
sbb
xchg
movsl
xlat
bound
mov
outsl
xchg
inc
imul
mov
outsl
js
and
and
add
decl
push
lret
lods
mov
icebp
arpl
aaa
add
sbbb
jmp
dec
mov
lcall
xchg
adc
cmp
insl
rolb
mov
and
xorl
mov
decl
and
insl
xchg
sbb
xchg
xlat
icebp
shrl
mull
lcall
cld
decl
rcrl
sub
test
ss
mov
cmpsb
sub
adc
push
add
pushl
push
push
jl
push
sub
xor
imul
out
pop
cmp
cmp
test
call
call
movl
sahf
aam
push
loope
xchg
test
mov
imul
fmuls
test
and
into
jno
iret
popa
jge
xor
aas
adc
inc
cwtl
adc
call
inc
mov
imul
std
inc
in
outsl
push
push
popf
inc
std
push
out
jae
cmpsb
scas
push
sti
sbb
jnp
lcall
push
outsl
xchg
cli
inc
jp
scas
clc
mov
jnp
adc
inc
and
dec
jo
out
cwtl
jb
lea
jnp
pop
xchg
cmp
out
cmp
mov
mov
xchg
mov
mov
push
inc
out
xchg
stc
jp
ljmp
mov
imul
cmpsl
lcall
inc
movsl
pop
xor
out
xchg
mov
pop
mov
sarl
lcall
shlb
out
mov
icebp
cmpb
lret
jg
sti
idivl
in
mov
dec
or
xchg
add
mov
jg
sbb
ljmp
or
mov
dec
popf
jmp
mov
loopne
dec
cmp
inc
mov
dec
aam
xchg
sbb
pop
mov
sbb
fimuls
mov
jp
out
inc
sbb
popf
jecxz
lcall
lods
and
fcmovne
ret
lods
mov
shlb
testl
out
daa
mov
push
jae
hlt
ljmp
call
jle
lods
adc
mov
je
jmp
jns
sub
stos
and
dec
and
dec
inc
xchg
out
xchg
ja
cmp
inc
jns
das
push
fmull
js
imul
loopne
sbb
pushl
add
pslld
sub
mov
sbb
lcall
mov
sahf
xchg
gs
jbe
lret
fbld
cld
call
adc
jp
push
outsb
movsl
mov
mov
mov
ss
pop
sahf
jbe
jmp
dec
insl
adc
call
jnp
shlb
push
xchg
pop
or
dec
test
jl
insb
pop
sub
mov
dec
xor
data16
lcall
xchg
sti
xchg
out
mov
sbb
xchg
push
mov
cmpsl
mov
sbb
jle
xchg
or
std
test
cmp
cwtl
call
loopne
movsl
mov
ret
mov
aad
pop
cmp
pop
shrb
lcall
flds
sub
dec
aas
call
ret
mov
std
incl
insb
scas
ja
add
dec
dec
test
xor
call
pop
pusha
icebp
mov
in
dec
fdivp
dec
sub
fwait
test
rcll
pushf
lock
aas
cmp
cs
fsubs
push
and
jno
sub
pushf
xchg
int
sbb
add
jmp
daa
sub
sbb
rorl
testb
push
xor
insb
jnp
adc
jno
xchg
call
pop
mov
mov
cld
cld
jb
lahf
int
mov
frstor
or
fsubs
incb
loope
cli
lret
dec
insb
test
insb
cmp
inc
jle
call
enter
cmp
in
xor
adc
and
ds
lcall
lcall
and
xchg
fildl
popf
aas
movsb
dec
xor
aad
jmp
jne
pop
fnstcw
adc
mov
cltd
aas
dec
adc
test
outsb
and
push
mov
adc
xchg
out
sarb
jno
repz
insl
cmp
sbb
pop
pop
cmp
add
sbb
dec
sbb
mov
jbe
repz
push
pop
mov
inc
inc
cmp
pop
mov
inc
xchg
decb
push
push
mov
jp
push
mov
mov
rol
add
mov
pop
mov
and
sbb
call
dec
hlt
shrb
sbb
lahf
dec
inc
xor
dec
test
mov
jo,pt
xchg
push
imul
adc
xchg
enter
fcmove
mov
test
mov
incl
xchg
mov
mov
mov
repnz
and
jl
testl
mov
push
out
ret
push
pop
hlt
xchg
fdivl
fs
mov
ljmp
orb
adc
mov
outsl
add
jge
sub
push
adc
aaa
jne
das
adc
pushl
fmull
sub
hlt
cmp
fldcw
dec
test
lcall
sub
xchg
or
push
xchg
sar
xchg
adc
xor
pop
or
lcall
mov
push
sub
les
hlt
jecxz
jb
ret
pop
sub
ljmp
add
push
sbb
movsb
jb
xor
jp
cmpl
mov
fisubl
fcmovu
pop
cmp
fisubs
add
add
mov
lret
mov
cmc
sbb
fsts
pop
mov
repz
dec
inc
repz
stos
and
fsts
lcall
push
or
sub
pushf
fidivs
inc
fs
sbb
addb
je
incl
jo
xchg
adc
inc
sub
lds
mov
lcall
shll
popf
push
pop
ja
dec
stos
push
loop
mov
push
sbb
cli
lcall
outsb
add
mov
out
popa
scas
iret
movsl
loope
adc
or
insl
cltd
fldt
js
add
mov
mov
andl
loope
dec
cld
in
sbb
jae
pop
xor
push
jns
mov
mov
xchg
dec
add
sbb
sub
int
push
push
mov
js
pop
ljmp
pop
jb
push
gs
aam
xor
ljmp
cld
pushl
mov
sub
push
cmp
mov
popa
mov
lods
lods
insl
or
dec
inc
outsb
test
dec
divb
dec
ret
jp
mov
test
and
test
adc
adcl
addr16
mov
inc
and
lcall
ds
cmc
and
inc
mov
jae
cld
mov
xor
mov
xor
adc
dec
cmpb
mov
push
inc
mov
xchg
imul
in
push
lahf
lahf
pop
gs
lcall
subl
push
popf
pop
sub
pop
fldenv
inc
push
enter
stos
nop
mov
xchg
ret
and
loopne
ret
cs
inc
push
sub
pop
nop
mov
out
pop
jp
in
and
fiadds
lcall
hlt
inc
test
mov
mov
xor
addl
loop
in
jae
adcb
rorb
ljmp
mov
xcrypt-ctr
cmpsl
sahf
lahf
lods
fwait
mulb
dec
inc
xchg
push
daa
inc
inc
sub
dec
in
pusha
loope
pop
lock
cmp
iret
das
and
cwtl
fidivrs
pushw
lea
into
push
mov
inc
jbe
or
mov
and
and
and
xchg
outsb
mov
jmp
decl
add
aaa
push
pusha
xor
inc
xor
inc
ret
imul
pop
negb
jns
jb
xlat
push
fs
adc
cld
leave
cmpsl
aaa
sub
mov
mov
cmp
nop
xor
dec
and
mov
test
jmp
test
into
imul
jne
decl
insb
fwait
lods
and
xchg
scas
jle
loop
lret
xchg
in
ds
aas
sbb
out
jg
int3
adc
sbb
or
int
inc
jnp
push
jmp
ret
xlat
fwait
mov
fidivrl
dec
add
pop
mov
mov
aaa
cld
add
int3
push
mov
loope
pop
push
lahf
add
cltd
mov
stc
fsubl
daa
icebp
out
cs
xchg
and
movsl
int3
ds
and
add
ljmp
pop
sbb
mov
xchg
pop
int3
mov
xchg
fstpl
jae
xor
das
jae
inc
xchg
pushf
scas
stos
outsl
lret
cli
cli
shl
subb
xchg
dec
xchg
icebp
cmp
cmp
sahf
xchg
sbb
ljmp
jg
mov
and
xchg
mov
scas
in
stc
push
data16
jg
and
lds
push
inc
das
push
aaa
cld
dec
pop
push
add
pushl
stos
push
sub
xor
lea
mov
cmp
dec
or
into
inc
add
out
fldl
leave
add
dec
mov
ss
aaa
std
cmpl
fidivrs
sbb
out
and
insl
mov
xchg
in
icebp
in
xchg
popf
push
test
fsubrl
xor
xor
jl
imul
mov
cmp
jmp
vpackuswb
fsubr
jb
inc
sbb
movb
subl
jae
push
pop
lret
scas
pop
push
lock
xchg
in
sarb
arpl
rcll
sub
or
js
mov
insb
mov
mov
aam
ss
cmp
imul
mov
test
pop
sbb
mov
push
outsl
sarb
ffree
adc
fisttpll
xchg
stos
iret
lea
mov
cmp
xchg
inc
push
fstpl
push
repnz
scas
ficoml
push
and
mov
insl
mov
mov
fnstcw
pop
cmp
lods
cmp
jbe
out
call
movsl
sarw
outsb
jle
stos
lret
cmp
add
dec
nop
inc
cwtl
pop
test
adc
shlb
mov
cmp
bound
nop
scas
cmp
add
sbb
hlt
pushf
mov
mov
and
jl
push
jge
das
sbb
cmp
insl
ret
and
lret
and
pop
leave
aam
aas
jae
ljmp
xchg
daa
xchg
push
aam
mov
sub
aad
mov
and
imul
cmp
and
pop
mov
inc
sbb
ljmp
and
insb
push
imul
mov
mov
sub
inc
bound
lcall
sbb
or
push
cmp
jecxz
scas
cli
or
movsb
xchg
mov
inc
cltd
cs
adc
dec
rcr
sbb
decl
shll
arpl
pop
adc
popa
popf
sub
push
lods
pushf
cmpl
push
fmuls
inc
pusha
frstor
inc
inc
xchg
lods
cld
lahf
cmp
mov
cs
sarl
jmp
lret
dec
or
dec
js
mov
cld
mov
movsb
daa
fs
mov
xchg
mov
or
push
pushl
fisubl
cmp
mov
mov
scas
rclb
push
mov
xchg
adc
dec
or
stos
pop
clc
cmp
pushl
or
outsb
add
fmull
add
gs
adc
sbb
pushl
das
add
rcrb
hlt
cli
mov
pop
loopne
cmp
lahf
mov
adc
aaa
std
inc
add
popa
jecxz
jp
ret
cwtl
fcoms
push
leave
jle
jg
test
pop
enter
adc
leave
loope
pop
sbb
iret
dec
push
mov
add
sti
idivb
mov
scas
dec
xchg
jne
pop
xor
dec
call
add
fists
add
nop
dec
xor
int
mov
xchg
scas
lods
test
lcall
jne
lret
data16
das
cmp
add
jmp
adc
xor
decl
sub
mov
adc
jb
jbe
xchg
insb
std
lahf
inc
rcll
ret
jbe
imul
pushf
and
pushf
jnp
cmp
sahf
js
test
std
lret
adc
lcall
fcomps
push
ret
addl
dec
clc
ret
xchg
lods
push
jmp
mov
mov
jg
and
mov
aad
sub
dec
xor
leave
imul
stc
xor
popf
or
dec
and
push
pop
pop
sahf
ret
mov
out
xchg
mov
lods
xchg
out
mov
jmp
jns
popa
push
pop
inc
test
sti
lock
inc
in
jno
testb
insb
fnstcw
fistpll
push
mov
xchg
repnz
hlt
leave
and
or
loop
incl
add
pop
idivb
jge
cmc
mov
in
jecxz
pop
xchg
jmp
inc
mov
fbld
add
hlt
add
mov
mov
into
pop
ljmp
and
shrb
xchg
adc
mov
mov
ljmp
inc
int
xor
inc
pop
inc
or
xchg
push
and
fsub
lods
cli
adc
fcoml
cwtl
lcall
mov
movsl
into
mov
cmc
shrl
cli
push
lds
dec
cmp
je
jp
cld
pushl
mov
pop
push
sbb
je
or
pop
push
jnp
not
jl
mov
call
pushl
cwtl
adc
fnsave
rorl
loopne
sub
aam
test
lcall
xchg
popf
and
inc
sbb
jnp
mov
mov
push
rorl
jg
repnz
jl
hlt
enter
mov
sbb
and
cmpsl
mov
mov
or
fcos
out
sbb
jns
push
orb
pop
inc
loop
movsl
inc
jmp
xor
dec
pop
or
sar
jno
imul
xor
cmp
call
xor
push
or
bound
neg
dec
lods
in
inc
lock
and
jp
cli
out
cli
inc
dec
sbb
xchg
pop
sub
insl
ljmp
push
push
fmull
lds
jp
test
lret
ds
sbb
mov
cmpsl
sub
out
clc
decl
scas
rolb
push
dec
cltd
fs
std
lods
dec
sub
fimuls
sub
das
mov
aas
push
push
inc
in
out
shr
decl
aas
mov
xchg
lods
xchg
subb
imul
mov
fst
xlat
push
jle
jnp
mov
mov
add
mov
jne
stos
sbb
hlt
loopne
jmp
adc
inc
xrelease
push
leave
mov
or
add
popa
cmpl
andnps
push
ds
add
push
je
gs
incl
push
clc
or
js
ljmp
fldcw
push
jecxz
dec
push
dec
jns
call
sbb
xor
sti
jge
inc
mov
leave
out
lods
xor
or
call
cld
hlt
mov
imul
add
xchg
cmpsb
dec
adc
subl
bswap
mov
lods
sub
xor
mov
sub
loope
jbe
inc
out
mov
xchg
pop
mov
mov
add
shlb
pop
dec
fistl
cltd
daa
add
lds
ljmp
jnp
testl
stc
mov
cmp
stos
cmp
adc
nop
jmp
iret
fwait
cmp
ljmp
add
insb
stc
leave
aad
xchg
or
xlat
ret
cltd
stc
pop
dec
fisttps
lea
aaa
sti
add
cld
popa
out
incl
popf
sub
pop
pop
adc
push
aaa
movsl
mov
mov
push
mov
idivl
out
dec
mov
inc
stc
cmpsl
repz
push
dec
xchg
mov
cmp
sbb
clc
mov
jmp
decl
xchg
jns
lcall
mov
adc
mov
adc
stc
dec
mov
iret
xlat
inc
decl
std
cltd
insb
jecxz
sub
ret
sbb
ljmp
imul
or
mov
das
push
push
mov
push
mov
dec
mov
stc
popf
mov
sti
sub
lods
in
in
push
add
insb
xor
imul
push
rcrb
jg
jg
cld
mov
xor
xchg
pop
outsb
in
sub
leave
inc
jne
ljmp
push
jbe
and
jo
ret
sahf
fisttps
xor
xlat
incl
mov
and
mov
test
adc
jp
or
repnz
or
decl
cmpsl
push
and
cwtl
dec
xchg
stc
lcall
cmp
je
cmpl
jmp
test
jg
stos
sub
icebp
cmpl
mov
jnp
dec
in
jp
jmp
call
lahf
ret
insb
jp
shll
sbb
pop
fdivrp
dec
or
pop
sbb
sbb
cli
jmp
add
mov
cmp
push
shrl
and
lcall
loopne
in
mov
popf
add
addr16
mov
test
rcl
clc
jge
stc
dec
pop
test
scas
push
push
out
aad
pusha
xchg
pop
loope
aaa
dec
dec
or
mov
loop
push
ljmp
mov
pop
push
lahf
ror
test
sbb
dec
repz
test
decl
ljmp
pop
mov
subb
mov
sbb
inc
dec
incl
pop
xchg
push
sbb
mov
and
or
out
mov
jp
addr16
fcomip
pusha
sbb
xchg
pop
mov
shrb
mov
jns
dec
xchg
pop
cmp
cmp
addr16
clc
jmp
xor
cmpsb
jl
push
inc
dec
or
fstl
inc
push
pop
push
inc
adc
mov
js
xlat
mov
jb
mov
insb
fs
mov
aaa
int
push
cmp
ljmp
repnz
push
mov
sub
in
pop
xor
mov
shrl
jmp
pushl
adc
in
insl
pop
in
lods
push
leave
mov
imul
and
fmull
mov
and
jno
cwtl
xchg
decb
lahf
inc
clts
sub
mov
lock
push
int
jecxz
pop
jl
push
lods
mov
aad
add
xor
lods
jo
pop
sbb
sbb
movsl
xchg
add
stos
cmp
outsb
int
pop
loop
lcall
mov
jp
mov
adc
out
mov
jnp
call
mov
icebp
push
push
adc
mov
xor
es
xor
ljmp
cmp
or
dec
push
mov
push
xchg
popa
adc
incl
mov
lcall
sarb
test
cltd
and
mov
popl
test
divl
adc
sbb
into
push
push
les
jmp
decb
in
xchg
lcall
jg
mov
push
mov
or
imul
aaa
dec
lret
lcall
cwtl
je
cmp
js
aaa
jl
sahf
adc
cli
dec
jno
sar
decl
into
xor
clc
pop
daa
xor
fisttpl
test
call
pushf
jno
dec
je
lret
mov
fdivr
xchg
and
fisttps
clc
stos
sti
mov
jne
push
lods
loope
cmp
jno
dec
ret
cli
push
imul
loop
fisttpl
inc
or
out
loopne
les
daa
dec
daa
fists
repnz
add
push
push
sub
adc
mov
xor
push
pop
add
mov
mov
sbb
test
fildl
lock
push
jg
int
icebp
xchg
in
mov
iret
mov
mov
popa
lcall
inc
cmp
mov
sarl
pusha
cld
lcall
orb
aam
fs
cmpsb
addr16
ss
insb
hlt
aas
das
mov
ljmp
arpl
jl
inc
xchg
test
insl
jo
or
mov
lds
add
das
test
sahf
dec
inc
mov
inc
stos
mov
and
xlat
or
xchg
mov
sar
jmp
xor
ja
inc
push
sub
xchg
mov
xchg
das
rcr
je
stos
cmp
xor
sub
sbbl
and
pushl
jmp
bound
nop
jecxz
mov
outsl
dec
jb
mov
test
rcll
push
xor
add
stos
sahf
loopne
cmpsl
pop
mov
adc
cs
jmp
dec
aam
imul
rol
jl
daa
cld
mov
cwtl
cmpsb
add
movsb
cmpsb
add
lock
jmp
pop
pop
sti
xor
xor
dec
inc
and
stos
xchg
adc
movsb
stos
stc
dec
lret
int3
dec
incl
ljmp
xchg
stc
add
adcb
pop
sub
jne
jg
scas
popa
jno
sarb
and
dec
cli
push
jbe
sub
stc
int
imul
test
ret
pop
stc
sbb
popa
jmp
mov
outsl
mov
adc
mov
stos
xor
push
nop
mul
lods
mov
mov
fistpll
push
sbb
mov
lods
jecxz
xchg
in
pop
mov
push
dec
add
pop
and
sbb
in
cmp
inc
iret
bndldx
mov
jge
xor
jnp
xchg
pushl
mov
lret
push
sub
mov
fisttpl
push
push
jo
call
ret
call
popa
mov
pushf
add
pop
jae
xchg
and
lahf
push
jae
xchg
sbb
filds
add
mov
xor
jg
sti
das
idivl
scas
popf
push
stos
nop
pop
mov
xor
sbb
int
incl
fstpl
insl
inc
jns
and
push
mov
push
rclb
cmp
cld
jge
lods
cmp
xchg
gs
jnp
fcoml
xor
pusha
jb
fdiv
loope
jmp
mulb
sub
lods
mov
and
dec
add
lods
add
push
jg
mov
mov
mov
adc
fs
scas
xor
std
shrb
sbb
decl
xor
in
mov
repz
movsl
outsb
jmp
sbb
fstp
lock
jne
cwtl
incl
scas
bound
ja
sub
clc
inc
mov
sub
inc
cmp
lea
loope
aam
push
cwtl
loope
or
insb
in
ljmp
lock
mov
dec
and
outsb
or
idiv
decl
and
push
push
fstp
dec
jno
mov
imul
push
dec
mov
jmp
mov
sub
pop
add
push
xor
dec
sahf
in
inc
sbb
pushf
add
jg
push
xlat
je
stos
sub
or
idivl
in
call
push
cwtl
repz
ljmp
pop
scas
mov
lret
dec
dec
insl
adc
aad
add
add
add
mov
cld
cmp
push
imul
push
scas
jecxz
pop
icebp
jg
clc
jge
push
hlt
mov
rorl
pop
add
fimuls
adc
test
lcall
lcall
push
ds
inc
aad
cmp
ja
push
icebp
lods
dec
add
jg
lcall
sahf
cmp
icebp
push
push
repz
les
popa
adc
jp
add
decl
adc
shll
ret
movb
test
push
imulb
incl
cli
shrl
mov
sarb
mov
cwtl
pop
stos
dec
hlt
inc
cmc
mov
fistl
push
cmp
jl
cmp
sub
jns
pushf
lods
or
incl
out
sub
loopne
sbb
sbb
ret
gs
lcall
testl
pop
repnz
aas
cmp
or
pop
enter
fistpll
sub
fisubs
lret
js
cmp
leave
mov
aas
fisubrl
mov
ret
insb
push
leave
jle
ss
mov
pop
cmc
ljmp
inc
loopne
and
push
sbb
test
test
mov
adcb
xchg
bound
jo
pop
mov
lds
inc
inc
nop
pop
bound
incl
mov
imull
pop
add
or
cmc
test
push
notl
add
sub
cs
adc
push
lret
jb
stos
in
ja
jmp
sbb
cld
inc
xor
xor
and
data16
mov
mov
into
rcrl
adc
testb
mov
jne
add
nop
outsb
add
inc
aam
pop
push
mov
pop
out
mov
jg
adc
pushl
xor
test
jnp
jo
mov
push
xchg
inc
push
mov
into
movsb
into
pop
pop
or
call
out
inc
dec
ss
fildll
cs
push
cmp
adc
ja
cmpsl
shll
cli
mov
mov
sbbl
xor
lea
sbb
out
andb
mov
mov
jne
mov
inc
sbb
call
jnp
push
sub
xchg
decl
dec
repz
jns
cmp
hlt
xchg
cmp
jae
cmp
jnp
dec
xorb
cmp
fsubl
mov
cmp
inc
into
daa
pop
or
imul
xchg
xor
xchg
cwtl
imulb
pop
ljmp
rclb
hlt
cmp
fcmovb
cli
mov
and
dec
pushf
or
orl
lret
or
cmp
add
add
cmp
inc
mov
sub
lahf
sahf
sbb
xor
pushl
repnz
out
dec
insl
jg
ret
or
mov
inc
testl
sub
mov
push
inc
sarb
fcmovu
add
inc
arpl
push
sbb
mov
cmp
fcomip
not
cmc
lahf
loop
fwait
lret
sbb
and
dec
addb
incl
xor
inc
cmp
and
xchg
push
mov
xchg
in
fisttpll
adc
in
test
jmp
adc
lock
loopne
stos
jecxz
xchg
or
or
pop
jmp
cs
mov
jg
mov
mov
adc
test
sub
jmp
ljmp
clc
pop
lods
call
pop
std
test
and
mov
cmp
repnz
jp
and
pushf
ret
lods
mov
xchg
mov
cmpsl
icebp
andb
cli
cwtl
and
incl
jl
lods
push
iret
mov
dec
sub
orb
push
mov
das
sbb
arpl
cmp
mov
ds
mov
jecxz
popf
xchg
leave
adc
cli
out
ficomps
xor
pushl
mov
cmp
xlat
insb
fdivr
sub
aad
iret
xchg
arpl
mov
in
mov
call
out
mov
cmc
and
push
xchg
jo
bound
rcll
clc
xchg
test
jmp
push
inc
cmpsb
adc
xor
scas
xor
and
mov
xchg
adc
cmp
inc
fs
pop
clc
scas
jmp
pusha
pushl
daa
jno
jae
mov
lret
inc
dec
dec
in
push
ret
dec
popa
aam
adc
scas
sahf
addr16
jg
flds
fsts
lods
push
pop
test
pushf
pop
fwait
int3
mov
fcoml
add
lcall
loopne
inc
out
int3
cmp
mov
iret
sarb
jg
call
pop
popa
adc
mov
inc
dec
out
adc
lcall
jmp
or
fdivrp
data16
addr16
cmc
data16
cmpsl
ror
nop
adc
pop
test
movsl
inc
ja
jo
ljmp
add
rorb
mov
out
outsb
jg
lock
jmp
mov
push
cwtl
idiv
ja
sub
xchg
mov
and
movsl
and
jmp
outsb
mov
pop
jp
pushl
jp
mov
cmp
xor
cmp
xchg
call
mov
sbb
call
pop
popf
jmp
scas
or
pop
xchg
mov
sahf
int
xlat
and
mov
mov
push
mov
loopne
fstl
outsb
es
aaa
cmp
insl
fidivrl
aad
mov
test
mov
ds
fcmove
cmc
es
mov
fists
cmp
xchg
bound
mov
loop
push
mov
mov
repz
xchg
mov
sar
jmp
shrl
mov
aas
pop
jmp
in
xchg
test
mov
imul
mov
filds
jle
add
out
loop
push
sahf
testb
mov
repz
adc
fisttpl
mov
mov
jg
hlt
movsl
pop
xchg
dec
pop
push
fsubs
inc
in
std
adc
testl
mov
lcall
movsb
mov
cmpsl
aam
dec
jl
cwtl
insl
insb
cmpsl
push
dec
test
pop
imul
clc
jb
out
sub
les
fsts
test
incl
inc
inc
mov
inc
testl
xor
pcmpgtd
in
jg
decl
pop
scas
or
mov
lods
sub
mov
add
and
decl
push
das
sbb
decl
cli
mov
xchg
sbb
out
xor
lret
lods
into
int
mov
pop
jo
std
rorb
aam
sub
dec
insl
mov
add
xor
rolb
incl
scas
pop
xchg
jecxz
add
pop
test
and
sub
call
xchg
dec
js
movsb
xchg
inc
mov
pop
cmpsb
loope
adc
out
loope
into
int3
jbe
dec
popa
loop
push
sbb
pop
fs
movsl
lods
pcmpgtw
stc
in
and
aaa
std
mov
cmp
int3
cmp
jge
iret
inc
cmp
add
decl
loopne
and
test
mov
jle
xlat
pop
test
ljmp
jae
add
in
sbb
test
push
push
fdiv
out
movsl
jp
shlb
fisttpl
movl
mov
cli
adc
mov
pop
jl
jnp
adc
fwait
xchg
shl
call
jp
popa
and
or
repnz
test
mov
jo
or
pop
dec
lds
jb
sub
mov
pop
lods
repz
dec
repz
sbb
and
into
xor
div
loope
and
add
ljmp
cmp
jbe
movsl
jne
add
dec
into
insb
adc
filds
loope
xchg
out
pop
xlat
in
test
pop
sbbb
int3
mov
mov
mov
lcall
sub
sbb
fimull
mov
aam
push
ficompl
vmovd
stos
push
std
pop
mov
fadd
jbe
jmp
cld
sbb
adc
push
xor
dec
hlt
call
pop
fisubl
clc
mov
and
stos
add
scas
sbb
push
adc
adc
loopne
pushl
dec
mov
js
mov
aas
int3
sarb
adc
cs
fcomip
pushl
lahf
lock
bound
push
rcrl
cmpsb
jb
pop
out
or
ljmp
dec
mov
sbb
xor
add
and
add
lock
sub
dec
dec
bound
cmp
call
lods
faddl
iret
jnp
lret
pusha
cld
fdivs
jle
mov
xor
mov
stos
or
stos
xchg
call
and
scas
clc
incl
pop
icebp
aaa
imul
xchg
add
lcall
incl
mov
sub
xor
les
and
stos
lret
pop
fsubs
lds
std
in
xor
push
sbb
push
cmp
sbb
test
in
mov
in
pop
mov
pushf
dec
or
bound
ret
mov
repz
xchg
mov
ljmp
push
aas
and
fs
loopne
xchg
fwait
leave
mov
or
inc
jmp
sbb
lcall
jecxz
in
pop
add
shlb
sti
sub
cltd
lret
sbb
fs
lcall
dec
mov
jno
aaa
test
mov
pop
mov
cmp
push
jmp
cs
dec
pop
cmp
hlt
sub
inc
jl
mov
imulb
inc
addl
pop
daa
in
lcall
sub
jns
xlat
sti
imul
sbb
add
push
cmp
cmpsb
fwait
mov
jmp
pause
aaa
jbe
or
in
jge
adc
adc
in
test
jl
dec
pop
mov
and
cs
incl
pop
pop
int
jmp
mov
jne
jmp
inc
inc
int3
jne
hlt
inc
pop
pop
es
fwait
stos
enter
pop
adc
aad
dec
cmpl
cmp
sub
cltd
out
jo
das
cli
incl
sti
adcl
mov
pop
jmp
stos
mov
hlt
gs
rorl
cld
fld
dec
cli
fldl
in
cmp
int3
in
cmpsl
test
outsb
mov
sub
mov
xchg
jae
cs
mov
loop
sub
stos
cmpsb
fnstenv
fbstp
into
inc
dec
dec
cld
jmp
sub
shl
pop
movb
dec
inc
push
ljmp
repnz
std
or
and
mov
ss
push
icebp
decl
and
int3
movsb
roll
adc
pop
rol
xchg
gs
stc
lods
int3
and
fdivr
ljmp
or
stos
sbb
sarl
je
jecxz
mov
push
push
mov
fsub
arpl
lcall
xchg
cwtl
inc
into
sub
mov
and
add
imul
or
pop
incl
sbb
dec
fnstenv
scas
lods
stc
ljmp
loopne
das
loop
sub
jnp
inc
sub
push
xchg
scas
movsl
js
sub
sub
xor
bound
insl
cmc
aad
mull
out
dec
mov
pop
or
jcxz
push
ficompl
fsubs
mov
hlt
rcpps
pushf
jbe
mov
xchg
mov
mov
and
inc
das
ds
mov
and
push
sub
cmpsb
jecxz
jg
lock
mov
ret
incb
jo
push
push
les
cmp
sbb
cmpsb
jmp
adcb
call
out
movsl
lret
ficoml
fistps
test
scas
push
dec
inc
push
sbb
jmp
stos
not
cwtl
sub
mov
incl
push
lock
cmpsl
add
sbb
aaa
sub
out
lahf
enter
stc
jno
sahf
pop
sub
decl
cltd
adc
aad
pop
les
pusha
sub
or
mov
lcall
push
aaa
cmp
es
cwtl
xchg
mov
mov
xchg
adcl
call
jecxz
repz
pop
mov
xchg
icebp
loop
inc
push
cli
cmp
nop
xchg
decl
sahf
dec
sbb
stos
xchg
xor
ret
mov
loope
or
or
rorb
lcall
inc
mov
dec
sub
testl
out
fldenv
xor
cmp
decl
cmp
xchg
dec
or
clc
jns
dec
mov
ja
pop
sbb
pusha
jmp
xor
movsb
faddp
add
and
xchg
int3
inc
loopne
inc
sub
insl
mov
sub
fstp
std
add
ss
sbb
popl
pop
out
outsl
cmc
out
clc
jmp
mov
adc
mov
loopne
ss
dec
shl
cmp
nop
inc
enter
lock
mov
cltd
xor
xlat
aas
in
sbb
jmp
scas
lcall
dec
outsb
sub
and
cmpsb
bound
cmp
cmc
adc
jg
jmp
push
std
push
scas
xchg
sub
scas
mov
xor
pop
call
rorb
mov
xchg
dec
xor
mov
les
outsb
jp
mov
in
jmp
lds
vpminsw
mov
xchg
das
jg
icebp
in
data16
jmp
movsb
daa
add
jne
lahf
add
mov
cmc
cmp
fwait
mov
push
cmp
mov
clc
jmp
ss
xor
sbb
and
arpl
mov
pop
mov
mov
lcall
bound
mov
sub
js
or
mov
or
mov
in
push
sbb
mov
add
jo
push
or
xor
jge
push
in
je
subl
incl
es
ret
test
jbe
jbe
and
out
inc
pop
and
and
mov
decl
in
shl
adc
jo
sbb
in
xor
ljmp
iret
bound
arpl
sti
rorb
fmull
mov
pop
inc
mov
xor
cmp
lret
decl
incb
pop
outsb
dec
mov
lock
mov
push
xchg
cld
mov
ljmp
cmpsl
adc
cmpl
sbb
or
cmp
push
push
loope
movsb
pop
adc
int3
in
outsb
lcall
xor
or
pop
daa
add
out
sbb
in
jne
into
das
out
add
cld
filds
pop
push
lcall
ja
mov
stc
pop
and
gs
out
sahf
outsl
lcall
mov
aad
cmp
test
stc
test
or
sbb
test
shlb
popa
jmp
data16
mov
mov
pop
int3
gs
xor
lcall
jae
xor
out
sub
cwtl
push
cmp
add
xor
mov
fs
pushl
mov
test
incl
and
jbe
test
orl
mov
jns
fsubl
in
sbb
iret
inc
inc
ret
cmp
incl
push
mov
jne
inc
pop
scas
jnp
ds
jns
push
scas
loopne
sub
lcall
fldcw
adc
jns
cwtl
mov
loop
fimull
icebp
ljmp
mov
adc
int
jecxz
push
xor
fcmovb
cmp
push
adc
mov
mov
xchg
jl
decl
lods
cmpsb
or
sbb
inc
lret
pop
ss
arpl
xchg
or
push
jmp
cli
bound
mov
fwait
inc
pop
popf
ficompl
lods
lcall
and
jbe
insl
mov
rcrb
cmp
push
jg
lods
ljmp
jp
fnsave
cmp
lods
xor
mov
mov
inc
push
push
and
or
imul
call
xchg
jo
xchg
push
and
enter
xor
aas
leave
test
xchg
cli
ljmp
fcomi
add
shl
mov
out
insb
xor
fwait
decl
xor
xchg
sti
pop
push
insl
sbb
ret
or
ss
ljmp
xor
movaps
mulb
cmp
sbb
push
dec
mov
jg
movsb
imul
jmp
push
insl
scas
or
pop
xchg
int
filds
mov
je
pushl
fwait
xchg
inc
mov
mov
mov
ret
cmp
add
xchg
sub
decl
and
je
outsl
dec
cmpsl
in
incl
lea
data16
ror
popa
jmp
sbb
cmp
pop
fldcw
inc
lcall
insl
push
cmp
aaa
lock
mov
jmp
xchg
pop
mov
ror
mov
and
mov
in
dec
and
jbe
push
call
xchg
outsl
shlb
testl
pop
xor
push
fmull
lret
pop
arpl
jbe
js
aam
out
mov
push
or
stos
pop
and
aas
nop
pop
daa
xchg
push
xor
mov
arpl
jb
or
mov
in
stos
das
push
xor
jp
mov
adc
fisubrs
out
mov
mov
test
mov
mov
fnstcw
and
clc
cmpsl
fistpl
pop
xor
lods
add
lcall
incl
aad
or
addr16
jl
fisttpll
inc
pushl
inc
pop
jp
pop
dec
xchg
stos
adc
inc
imull
push
mov
decl
or
out
cs
mov
cli
test
cmp
ljmp
subb
add
fwait
xchg
lret
jle
mov
aad
lods
xor
decl
mov
bound
loopne
xchg
pusha
xchg
inc
xchg
lods
fidivrs
andb
sbb
push
loopne
mov
addr16
data16
xchg
fstl
mov
imul
sub
ret
movsl
call
push
cmp
sub
div
insl
jnp
shlb
data16
cmp
mov
cmc
js
mov
xor
push
outsb
stos
add
rol
call
or
add
enter
call
dec
negb
sbb
mov
adc
jge
inc
bswap
xchg
mov
in
pop
hlt
dec
xchg
pusha
fs
test
cmp
jbe
cmc
repnz
mov
cwtl
ljmp
incl
or
out
fimull
or
int3
sbb
out
lock
jl
jg
in
rorl
movsl
shrl
in
scas
jle
aad
popf
sbb
outsl
push
mov
fs
jno
movsl
add
cmp
das
push
test
or
or
aaa
mov
mov
mov
add
sbb
hlt
or
data16
jmp
aas
out
adc
mov
fists
inc
cld
and
jbe
call
add
xor
mov
xchg
shrl
pop
inc
lcall
lock
inc
jg
lcall
aaa
stc
adc
mov
inc
loop
scas
adc
scas
push
push
pushl
jmp
push
mov
adc
jecxz
cltd
and
test
xchg
stos
mov
push
negb
incl
jmp
ds
aad
or
cbtw
jne
jle
test
aas
sbbl
incl
mov
adc
jae
scas
stos
orb
xchg
and
xchg
icebp
call
fdivrs
dec
sub
shr
mov
scas
pop
push
adc
data16
mov
inc
scas
sar
dec
jns
sub
or
add
push
cli
cmp
mov
outsb
xor
xchg
ljmp
sar
pop
clc
mov
popl
data16
mov
sub
lret
mov
insb
dec
inc
scas
inc
orb
pushl
push
arpl
popa
add
mov
insb
loope
pop
ret
fsubrp
pushl
mov
icebp
sbb
sbbl
popf
sbb
out
lret
lock
mov
shlb
mov
in
cmp
popf
push
xchg
mov
xor
mov
mov
ljmp
mov
cli
lcall
js
or
dec
xchg
jmp
aam
cmpsb
imul
sub
aam
ret
call
scas
mov
pop
sbbb
mov
cmp
pslld
int
in
ljmp
and
mov
cmpsl
xchg
jb
es
push
aad
sbb
mov
lea
xchg
and
test
shlb
push
push
jb
ret
les
insl
mov
push
add
xor
and
ljmp
push
ss
jbe
enter
cmp
decb
add
aas
aad
jmp
mov
rorb
mov
incl
lahf
lret
sahf
lea
les
rcr
push
cmp
mov
in
repz
push
lcall
ficoml
inc
sub
fs
mov
sub
ljmp
xchg
mov
out
test
mov
ja
jne
cmpsb
jge
fcompl
ja
add
lcall
and
add
mov
repz
lock
push
cld
lcall
loopne
lods
mov
cmp
xor
xchg
and
incl
sub
add
fbld
cmp
mov
push
dec
and
loope
pushf
jg
loope
mov
sbb
mov
lds
repz
mov
mov
and
adc
pop
stc
mov
popa
in
push
in
and
mov
fsubrs
clc
sbb
pop
incb
fwait
adc
ljmp
lret
cmp
or
push
jp
clc
adc
shll
das
cmp
pop
ljmp
ja
push
xor
gs
sbb
xchg
bound
mov
inc
cmpsb
ja
mov
mov
and
or
jae
xor
xor
adc
lcall
pop
sarb
pusha
adc
arpl
idivl
roll
push
fdivl
pushl
sbb
shl
dec
bound
jp
leave
pop
aad
add
xchg
xchg
dec
decb
ljmp
pop
dec
scas
test
mov
push
inc
jmp
ret
cmpsb
mov
mov
mov
and
jmp
cli
inc
jo
scas
pop
sub
push
aaa
and
scas
and
fnstenv
fwait
or
push
test
adc
xchg
mov
sub
ret
mov
cmp
cmc
pop
push
add
jecxz
clc
jg
mov
dec
or
xor
fs
shrl
sub
push
and
out
pop
loopne
lret
add
inc
in
in
test
xor
sub
je
lcall
std
out
adc
xor
jle
in
sahf
loope
fstl
loope
mov
push
pop
jb,pt
mov
nop
inc
inc
pop
test
mov
into
xchg
dec
jo
add
dec
repz
aad
pop
fs
push
cmp
sbb
into
iret
and
jmp
cltd
mov
mov
pop
outsb
lcall
mov
cmp
mov
decl
inc
pop
or
fsubrl
cmp
or
in
rcrb
mov
sahf
add
lcall
mov
xchg
xchg
mov
movsb
nop
or
dec
push
stc
fmul
hlt
adc
loope
mov
ljmp
in
dec
lret
push
mov
inc
pop
pusha
sbb
jg
inc
inc
push
pushf
sub
sub
push
aad
mov
push
pusha
stc
test
call
pushl
iret
hlt
insb
pop
cltd
test
mov
xchg
je
push
movsb
in
cwtl
cmc
je
test
test
lcall
clc
sbb
inc
add
lret
cmp
xchg
cmp
sbb
mov
jg
outsb
mov
cmp
pop
movsb
and
notl
out
add
call
imul
sbb
stc
cmp
cmp
lea
in
add
adc
in
sbb
repnz
lret
mov
sbb
ljmp
and
jmp
data16
fdivrp
mov
add
sarl
jg
add
add
jmp
adc
mov
ljmp
and
divl
pop
mov
lock
in
fcmovnbe
lea
sub
out
je
adc
xchg
enter
xchg
adc
mov
or
sbb
call
movsb
dec
sti
mov
fidivs
loopne
jg
fstp
sbb
es
cmpsl
test
push
int3
fdivrl
out
mov
sbb
dec
lret
call
jg
push
mov
or
cwtl
dec
sub
pop
mov
leave
loope
ret
adc
add
ljmp
push
jle
js
out
xchg
add
xchg
stc
stos
push
incl
test
shlb
test
jb
mov
lahf
pmaddwd
test
lret
lods
ja
push
lret
scas
mov
dec
das
scas
sub
mov
adc
mov
cmp
ret
sbb
push
movsb
imul
ja
lret
push
std
aas
std
xchg
inc
add
pushf
int3
cs
cltd
jecxz
aam
je
dec
vunpcklps
mov
jno
test
jne
cmp
dec
xor
js
pminsw
outsb
lcall
out
jmp
push
add
sub
sbb
fldcw
jne
cld
jecxz
incl
pop
daa
rolb
mov
aaa
mov
out
outsl
pushf
pop
push
into
adcb
or
pop
jmp
push
aam
add
adc
outsl
or
dec
push
pop
test
outsb
cmp
test
lods
fcoms
mov
sbb
xor
sbb
test
jmp
sbb
adc
push
mov
dec
push
lea
and
mov
int
inc
inc
cld
sbb
or
pushl
push
fs
das
add
cltd
stos
je
sbb
dec
loope
mov
loopne
inc
cmp
mov
test
call
mov
test
xlat
test
jns
movsb
push
hlt
bound
cmp
fwait
sbb
decb
jle
and
loopne
ljmp
xor
xchg
leave
shll
mov
nop
movsl
js
push
incl
es
sub
mov
pop
push
jno
or
daa
add
mov
pushl
push
sbb
clc
shl
inc
andb
pusha
mov
mov
stos
std
dec
mov
xchg
into
nop
into
inc
mov
filds
mov
and
push
sub
ss
mov
je
jo
jg
sub
sbb
push
stos
adc
dec
inc
out
sub
fstpl
xor
idiv
aas
mov
adc
rorb
adc
mov
xor
and
push
std
mov
fcoms
ljmp
mov
add
add
cs
iret
xor
push
mov
loop
and
xchg
jmp
xor
mov
fstps
cmp
xor
inc
insb
jmp
in
xor
repz
jmp
dec
popa
out
inc
insb
xchg
scas
and
test
je
and
dec
push
cmp
test
jmp
sub
cwtl
testb
mov
je
mov
dec
nop
xchg
or
cmp
rcrb
jbe
push
std
decl
inc
xchg
mov
cmpsl
ss
and
imul
push
add
cmpsl
inc
pop
cmp
xchg
icebp
lcall
flds
sti
jl
fs
mov
in
mov
sar
leave
and
fsubs
repnz
sbb
mov
enter
fistps
ret
vmovaps
or
or
dec
popa
push
in
out
push
mov
jmp
imul
sub
int3
push
fs
jmp
int
lret
jno
jmp
sub
inc
jl
or
sti
insl
jp
jne
ds
inc
mov
call
add
add
pop
xchg
out
xor
push
pop
and
jmp
cld
pushl
xlat
mov
gs
push
adcl
movsl
fwait
lods
jg
out
movsb
cmp
xchg
jae
ficoml
sub
sarl
xchg
mov
imul
lcall
mov
inc
imul
hlt
loopne
in
loope
jae
mov
int3
arpl
loopne
lock
jecxz
int3
dec
xor
dec
sbb
xor
jbe
mov
clc
cmp
les
xor
lret
sub
xchg
jg
adc
jo
js
push
arpl
push
fnstenv
orl
jl
pop
icebp
cmp
xlat
stos
inc
fstl
sbb
xchg
mov
pop
push
cmp
pop
loop
pushl
pop
mov
call
pusha
xchg
push
call
jb
shrb
cmc
mov
add
xchg
ret
das
xlat
ret
cmpsb
push
dec
push
mov
sbb
sbb
cmc
pop
aaa
mov
cltd
jg
or
divl
pop
push
mov
out
push
sarb
ret
fldcw
iret
mov
lret
stc
and
lret
in
jbe
lds
inc
cmpl
cmp
hlt
jg
jle
xor
fnsave
push
pop
in
sbb
cmp
lods
mov
imul
mov
cmpsb
mov
dec
cmpb
pop
inc
sbb
cmpsl
js
mov
adc
mov
sti
jne
clc
cld
cltd
sbb
adc
stos
jbe
dec
push
shll
mov
mov
xchg
xor
repz
jmp
movsb
add
ss
xchg
loop
push
int
inc
push
mov
cmpsb
repnz
or
incl
pop
es
mov
data16
lahf
mov
pop
xlat
and
jle
cmp
dec
jmp
loopne
fwait
cmp
out
fwait
out
push
jne
stos
imul
lcall
sbb
lcall
jae
fists
dec
stc
sbb
sbb
mov
ss
adc
ss
dec
or
fsubrs
sub
cli
sub
mov
jb
clc
xchg
addl
push
adc
or
jo
adc
scas
jbe
jg
pushl
sbb
pop
rol
jnp
mov
pop
sbb
push
xchg
enter
jmp
add
mov
and
fistl
mov
rclb
lock
fcomip
decl
mov
sub
aaa
and
loope
or
dec
movsl
sub
pushl
xchg
addr16
outsl
push
pop
jmp
das
lret
inc
mov
push
popf
orb
fsubrs
push
sbbb
incl
pop
cli
shll
xor
cmc
cmc
cmp
cmpsb
data16
shrb
rcrb
in
out
mov
popf
std
fs
jnp
mov
adc
lret
add
push
sti
inc
je
lcall
ret
lods
stos
fisttpll
shrl
push
pop
push
adc
dec
dec
cmpb
jmp
inc
mov
out
mov
outsl
out
das
cmc
xchg
lds
jl
add
add
call
out
fs
hlt
and
xchg
and
lret
lcall
fwait
sbb
cmp
popf
lock
pop
hlt
pop
cmp
pop
lahf
xor
icebp
int3
leave
push
jmp
aad
insb
cld
call
mov
in
rcl
inc
mov
jp
into
push
repz
lea
xchg
in
push
loop
jg
inc
push
inc
pop
or
pop
dec
and
inc
in
fcomip
fldenv
flds
int
cwtl
dec
pop
xor
xor
and
pushl
xchg
mov
stc
push
loopne
lock
jge
or
inc
xchg
addb
std
mov
inc
jb
push
sub
jmp
jge
addb
pop
and
lock
fistpl
les
ljmp
sub
adc
lcall
xor
mov
xchg
sub
push
out
idivl
sbb
cmp
or
ljmp
in
mov
fsub
aad
aad
pop
push
jle
mov
mov
out
repz
push
lret
cmp
lock
mov
outsl
jge
adc
xchg
adc
outsb
xchg
insb
andb
std
inc
xor
jge
pushl
and
mov
mov
xor
arpl
fists
and
cwtl
pop
ljmp
test
mov
mov
out
push
lret
lods
call
mov
and
daa
dec
sbb
and
jo
je
decl
fimull
popf
xchg
test
cmp
mov
jl
movsl
or
mov
and
add
mov
mov
lea
mov
decl
or
xchg
sub
mov
mov
loope
iret
sub
cwtl
mov
jb
cmp
hlt
dec
subl
popa
jmp
loop
jg
lcall
mov
mov
stc
cmp
mov
cmp
js
push
cmp
testl
ds
or
push
cmpsb
xchg
ds
incl
xchg
lret
movsl
sbb
dec
jnp
mov
mov
push
push
inc
into
sahf
sbb
sti
sar
jmp
inc
mov
dec
ficoml
fs
out
adc
jmp
inc
outsb
push
cmpsb
ret
fdivr
call
hlt
and
cmp
loop
adc
cmp
or
sahf
imul
scas
mov
aam
fadds
cmp
stos
add
ljmp
mov
push
fsubr
xor
lahf
call
ss
pushl
adc
cmp
hlt
jns
pop
fidivrl
decl
sbb
jg
lods
arpl
out
inc
jecxz
inc
xchg
pushl
jecxz
rcll
iret
cli
cmp
and
fisubrl
push
leave
icebp
jecxz
sub
fmull
dec
mov
rcr
out
pop
xlat
mov
jns
repz
adcb
scas
decl
add
lods
adc
inc
push
loop
mov
push
xchg
scas
cli
mov
jmp
pop
cld
ds
ljmp
mov
enter
subl
aad
mov
pushl
lret
cli
adc
and
int3
mov
test
js
inc
and
push
jne
jg
clc
sbb
mov
aam
adc
sub
sbb
inc
push
pop
mov
pop
js
incl
add
es
jg
mov
jbe
cltd
mov
and
and
movsl
cmpsl
mov
inc
mov
call
push
cmp
lret
ds
les
ljmp
sti
ljmp
jl
push
scas
ds
dec
into
lahf
lock
psubsb
jg
fistps
sahf
sub
xor
popf
xor
xchg
push
mov
pop
addb
xor
decl
dec
into
push
lock
jae
mov
mov
cmc
push
or
fstpl
push
sbb
test
test
decl
or
mov
inc
aaa
sub
sub
xchg
push
xchg
sarl
dec
xchg
add
mov
mov
mov
fwait
sub
popf
test
cmc
ljmp
mov
push
mov
jge
in
decl
dec
lods
dec
mov
cwtl
or
cmpsb
dec
jmp
inc
xchg
test
jmp
out
hlt
inc
xchg
mov
sub
mov
imul
into
and
hlt
stos
sub
xchg
push
mov
loopne
orb
and
dec
sub
pushl
ljmp
jns
data16
push
add
xor
mov
push
insb
hlt
filds
test
repz
mov
cmp
push
ljmp
mov
scas
hlt
add
fcoms
and
jmp
lcall
stos
cmp
cmpsb
cmp
jg
cli
push
dec
mov
mov
lcall
jns
pop
out
popf
xchg
imul
gs
mov
sbb
mov
es
mov
jle
mov
mov
jp
jg
aad
inc
sub
push
jno
mov
and
dec
cmpsb
ds
push
cwtl
fs
ljmp
xchg
in
aad
mov
cmp
fucomip
add
cmp
into
clc
jg
dec
cld
out
das
xchg
push
sbb
add
add
fsubrl
dec
arpl
dec
clc
mov
loopne
in
pop
lods
xor
dec
out
dec
lods
sub
pusha
loop
sbb
add
mov
push
stc
call
cli
fnstsw
es
dec
add
inc
mov
xchg
dec
adc
xor
add
pusha
movsl
lcall
inc
repnz
cld
lret
outsl
sub
jp
inc
xchg
xchg
leave
jmp
shlb
loopne
scas
fisubrs
rorb
add
inc
mov
push
mov
fadds
inc
in
out
ds
sahf
loop
pop
sbb
test
loop
call
loopne
rcrl
xor
xchg
fcoms
pusha
push
rorb
lret
das
xlat
fistps
mov
ficomps
mov
push
ja
js
arpl
cwtl
negl
ffree
mov
adc
sub
fwait
sub
icebp
icebp
pop
lea
iret
test
pop
push
or
or
ljmp
mov
push
nop
jge
loop
sbb
test
rcrl
js
pop
clc
call
outsb
adc
cltd
push
xor
xchg
sbb
adc
xor
xchg
cmp
and
add
incl
push
andl
ds
adc
mov
inc
inc
lret
adc
or
jg
incl
or
sbb
dec
dec
pop
sub
cmp
adc
js
mov
ja
iret
inc
das
lcall
ds
andl
insl
mov
adc
ljmp
loop
xor
cmp
adc
call
dec
sbb
jmp
xlat
sub
jb
mov
jae
or
pusha
jl
nop
ss
incl
das
out
rcll
pop
fstpl
mov
inc
mov
bound
bound
jecxz
cmp
enter
adc
pop
hlt
jmp
pop
dec
sti
into
jle
xchg
mov
call
pop
dec
adc
sar
and
and
jb
push
call
dec
jl
leave
lcall
gs
mov
mov
int
mov
mov
fsubl
cwtl
and
push
lea
xor
decl
pop
mov
cli
call
fisttps
or
mov
fwait
loopne
and
decl
fwait
cmp
rol
stos
mov
inc
add
lds
rolb
sbb
sub
leave
pushl
loop
xchg
pop
jg
push
ss
or
bound
cmp
cmp
mov
sar
es
sub
push
sbb
andb
mov
sahf
aam
ret
or
aaa
inc
pushf
jns
int3
out
int3
mov
cld
ficomps
fldt
add
lahf
or
mov
and
rorl
cmp
cmp
mov
mov
lcall
lcall
ficomps
enter
scas
push
leave
add
test
fisttpl
daa
lds
aad
jl
xchg
decl
arpl
neg
mov
test
mov
cmp
lods
dec
push
in
das
test
incl
ja
jle
push
in
jmp
ror
pop
xor
call
std
and
mov
scas
cmp
jne
jle
and
cmp
pop
sti
add
add
lods
es
push
cmpsb
xor
stc
inc
stc
movsb
jg
fcmovnb
sbb
or
call
and
cmp
cld
ja
pop
mov
or
into
mov
mov
pop
push
jbe
mov
mov
xchg
mov
shlb
jb
sar
outsl
cli
push
dec
cmc
add
cmp
pop
shrl
push
dec
cmc
cmp
mov
dec
jmp
fildll
and
fs
cltd
add
sub
mov
in
test
movsb
mov
pop
adc
push
fldln2
imul
les
aad
lcall
inc
movsb
outsb
add
stos
cmpsl
and
aaa
or
cltd
sarb
out
pop
js
call
rclb
cmpsl
jp
sub
bound
or
jmp
push
push
sub
in
push
dec
shrl
and
mov
push
gs
lcall
xor
rcrl
push
mov
cmp
insl
mov
fucomp
cmc
data16
sbb
cmp
aam
inc
fistpll
dec
add
repnz
flds
addr16
inc
test
rclb
ljmp
lret
loopne
push
cmp
push
sub
stos
sub
sub
ret
pop
decl
cli
dec
cmp
cmpsb
shlb
jmp
cmp
outsl
jle
popf
aaa
shrl
mov
or
xchg
inc
jb
jo
stc
lcall
xbegin
fstpl
dec
xchg
adc
fistps
or
sbb
fists
dec
mov
icebp
cwtl
mov
push
push
mov
incl
cld
popa
idiv
mov
xor
test
sahf
mov
dec
push
adc
enter
jl
ljmp
mov
rcr
pop
add
adc
adc
lds
xchg
or
mov
mov
pushl
ljmp
rcrb
inc
xor
pop
sub
xor
xor
pop
jbe
bound
or
jle
jp
decl
xor
push
iret
in
cmp
ret
outsl
sti
push
fwait
lret
mov
xor
jb
xchg
add
aam
push
jns
ljmp
lcall
dec
mov
mov
sbb
jecxz,pt
mov
cmp
test
ret
mov
je
cmp
mov
sbb
scas
and
lods
scas
mov
jbe
lret
sub
ljmp
movsl
xchg
or
and
or
in
adc
sbb
pop
add
add
or
mov
orl
test
lcall
push
pop
imul
test
mov
aas
punpckhbw
incl
ret
cmpsb
aad
faddl
mov
in
enter
stos
loop
push
add
sub
push
cmp
aaa
std
mov
xchg
fmuls
and
iret
dec
and
iret
loop
lcall
push
mov
test
lock
fbld
sbb
jmp
cmp
and
cmc
inc
jns
adc
test
cmpsl
aas
xlat
scas
push
aam
movsb
call
mov
mov
xchg
xchg
mov
aas
dec
cmp
jge
push
out
jo
xor
jle
es
sbb
ds
pushf
push
cmc
jl
mov
gs
xor
mov
rcll
pop
and
lcall
inc
mov
cmp
sarb
push
sub
cmp
pusha
dec
ljmp
cmc
dec
lods
clc
test
notl
jbe
sbb
mov
imul
inc
push
in
ret
psraw
adc
hlt
cmp
push
mov
fcomip
mov
inc
rcrb
inc
insb
pop
push
sbb
lds
movsl
jg
call
xchg
and
int3
mov
icebp
rol
cwtl
leave
clc
leave
decl
mov
repnz
pushl
adc
pop
mov
jnp
mov
and
or
mov
mov
aad
xor
lock
pushl
add
add
cltd
lahf
pop
xchg
push
fs
push
decl
mov
dec
repz
jb
mov
xlat
push
pop
jne
loope
mov
push
add
or
or
leave
arpl
mov
jb
xor
cmp
adc
xchg
mov
lcall
cmp
jmp
lahf
shrb
mov
dec
out
lods
push
xchg
jmp
xchg
xchg
jmp
sti
imul
ret
fs
pop
cmc
mov
xor
inc
fcomip
jmp
or
mov
ja
loopne
xchg
xchg
xor
scas
jno
mov
cmp
sbb
ljmp
rcrb
mov
in
shlb
jnp
and
shr
iret
stc
jmp
cmp
dec
pop
outsb
or
fcompl
lret
pusha
mov
sbb
xchg
pushf
sbb
lock
decl
lea
call
mov
inc
inc
mov
jnp
pop
mov
pushl
cmc
pop
lea
ffree
dec
xor
add
outsb
lret
mov
iret
jmp
ljmp
movsb
jb
jbe
and
add
movsb
in
xchg
das
xchg
cmpsl
mov
dec
cli
sbb
or
stc
mov
iret
cmpsl
movsb
shll
lcall
imul
rcll
mov
push
cmpsb
inc
arpl
mov
sbb
xchg
xchg
ljmp
into
inc
adc
or
adc
cmp
js
das
lret
or
negl
pushl
movsl
cmp
call
dec
shlb
sub
cmc
mov
pop
bound
mov
pushl
movsl
or
clc
push
imul
inc
loope,pn
stc
push
mov
mov
push
and
ss
movsl
or
lea
aaa
in
mov
lcall
sar
mov
ljmp
cmp
dec
mov
inc
xchg
or
fisubl
add
in
arpl
stos
push
xchg
lock
lcall
adc
pop
or
movsb
sub
scas
ret
imul
nop
out
mov
loope
pusha
out
xchg
cwtl
pusha
imul
sti
iret
andb
inc
sahf
mov
mov
push
movsb
adc
push
jno
ljmp
inc
mov
xor
pop
pop
jae
pop
mov
mov
pop
pop
ljmp
test
out
mov
fcmovb
iret
aaa
mov
clc
incl
or
jle
aaa
sbb
subl
jg
ja
dec
orl
leave
lods
push
pop
sbb
inc
dec
arpl
mov
jmp
sbb
movsb
cmp
and
and
ds
push
mov
cmpsb
incl
bound
pop
movsb
mov
rcrb
in
jl
jmp
sub
jg
test
or
adc
lret
or
jg
call
roll
aad
dec
lock
aad
mov
pop
scas
xchg
xor
aam
or
out
enter
idiv
mov
decl
clc
sarl
dec
dec
bound
push
push
push
mov
lcall
ljmp
jp
pop
xor
ljmp
push
cltd
mov
or
sbb
pushl
rcll
test
mov
pop
call
addr16
ljmp
lock
ljmp
ss
mov
divl
xchg
xchg
stos
dec
out
push
jp
xor
jmp
add
es
jmp
mov
vpaddq
call
pop
dec
jo
loope
xor
imul
sbb
add
cs
add
addr16
mov
in
rol
gs
gs
pusha
ret
pushl
sahf
pop
mov
sbbl
in
cmp
jne
daa
mov
cmp
fcomps
and
pushl
lods
xchg
ficoms
cmpsl
dec
mov
or
pop
mov
scas
mov
jle
sbb
cs
cltd
add
sbb
jmp
push
test
sub
cmpsl
cwtl
xchg
jne
pop
outsb
inc
cld
lcall
xchg
incl
sbb
mov
adc
jns
in
jo
and
sub
xchg
push
incl
xlat
add
cmpsb
sbb
dec
out
jl
aam
ret
jle
dec
lock
cmp
lahf
icebp
scas
add
and
add
mov
inc
lret
cmp
aas
adc
data16
clc
jg
mov
pop
insl
sub
aaa
sbb
jmp
mov
ds
clc
jnp
fdivr
add
js
push
jl
adc
mov
pusha
mov
aam
mov
sahf
imul
mov
lock
jmp
insb
dec
pushf
mov
push
xorl
fmuls
mov
pop
dec
or
or
add
ljmp
sahf
cmc
sub
and
or
push
mov
cmp
das
outsl
pslld
pushl
rclb
je
xchg
loop
test
addr16
sub
in
clc
fisttpl
xchg
push
dec
sub
pop
mov
push
mov
fsubrl
loopne
cli
call
shl
test
in
test
mov
fs
mov
mov
inc
lea
ljmp
mov
lea
or
stc
cmpsb
mov
push
arpl
decl
out
aaa
mov
lret
add
pop
adc
enter
cs
pop
ljmp
jnp
cltd
cmp
cwtl
cmp
repnz
shrb
xchg
pop
sbb
mov
cmpb
decl
and
and
or
push
insl
mov
je
dec
pop
or
jmp
add
jmp
into
outsb
loope
dec
lret
push
lcall
sbb
out
incl
sbb
in
ss
lds
test
push
pop
sub
hlt
call
mov
push
fiadds
out
dec
sub
subb
jmp
out
nop
fisubrl
mov
or
and
testl
js
adc
and
and
int
inc
pop
mov
xchg
add
insb
repz
gs
jmp
and
or
pop
les
cmp
and
or
cld
lds
jle
ljmp
pop
inc
leave
xchg
cld
int
hlt
cmp
stos
out
loopne
fisubrs
inc
faddl
lock
out
pop
sub
ljmp
dec
mov
pop
loop
push
adc
mov
movsb
and
cmp
or
repz
out
out
sbb
daa
in
lahf
lcall
mov
push
push
add
enter
jno
pushf
adc
sub
mov
decl
fisubl
das
xlat
stc
inc
inc
lds
push
imul
in
call
xchg
or
ljmp
call
xor
cmp
cwtl
jae
xchg
mov
movsl
dec
outsb
mov
push
or
or
push
in
pop
dec
sar
mov
add
testl
outsb
xor
sbb
push
icebp
insb
adc
roll
adc
call
bound
mov
pop
enter
mov
inc
dec
xchg
xchg
lock
int
lods
xchg
adc
shl
cmpb
out
dec
xchg
add
pushl
dec
jns
mov
add
jne
push
lock
mov
std
fcomp
fs
jno
ljmp
xchg
or
ds
cltd
mov
popa
jo
test
stos
xor
push
in
fcoml
dec
jle
jne
xor
xor
cmp
adc
mov
xchg
sub
incl
sub
mov
in
mov
sbb
mov
dec
jae
test
imul
mov
dec
push
movups
fwait
or
decl
leave
pushf
das
push
sub
test
jg
pusha
mov
pushf
movsb
cs
adc
sub
adc
mov
cli
outsl
jmp
fdivr
xchg
sub
add
ret
cwtl
dec
xchg
ljmp
in
in
pop
fldt
jnp
insb
and
mov
imul
enter
clc
add
shlb
push
xor
xor
scas
mov
js
test
jae
mov
dec
gs
das
cld
mov
cmp
push
jnp
pop
push
dec
gs
rcrl
jne
out
lret
loope
mov
or
cmpsb
mov
lods
mov
add
fldcw
enter
xchg
dec
push
inc
dec
std
orl
incl
sub
or
jecxz
or
push
dec
lea
lock
push
cs
decl
xor
push
mul
mov
cmp
push
fstpt
mov
nop
xchg
cmp
sbb
out
push
cld
inc
inc
cli
push
xor
out
mov
pop
adc
push
jmp
pop
lock
cmp
sbb
jp
ljmp
cli
push
gs
nop
fldcw
mov
pop
mov
cmp
sub
jg
or
adc
lret
out
jb
add
cmp
mov
push
mov
hlt
pop
inc
cltd
xor
mov
sub
mov
jae
cmp
ljmp
cmp
inc
adc
xchg
push
in
mov
arpl
les
or
jmp
mov
mov
mov
pop
mov
lcall
mov
in
jb
push
push
dec
add
jmp
inc
xchg
pop
mov
iret
or
jg
add
jmp
ss
sbb
add
cltd
js
decb
testl
je
in
sti
and
ljmp
jo
jb
cmpsb
push
mov
pop
push
sub
mov
mov
jecxz
fildll
add
jmp
fistpl
xchg
test
imul
addb
xor
mov
repnz
in
stos
and
decb
lock
aas
jae
dec
mov
andb
incl
cmp
cmpsb
icebp
xchg
adc
add
cmp
shl
pusha
cmc
dec
out
out
js
jmp
inc
jns
jae
cmp
shll
int3
data16
int
mov
hlt
xor
leave
in
inc
popa
fisttps
mov
dec
push
pop
xchg
xor
hlt
cmp
test
mov
mov
mov
inc
pusha
xchg
mov
sub
xor
mov
lret
fildll
cmpsb
or
add
mov
sti
je
sbb
enter
js
scas
aam
lret
cmp
call
cmp
fidivl
addb
loop
mov
sub
mov
out
dec
lahf
add
idiv
ret
enter
pop
cmp
push
dec
mov
lcall
pop
jg
pop
lret
push
cltd
pop
sbb
mov
jae
cmp
mov
cmp
jmp
and
xchg
pushf
xor
xchg
push
cmp
incb
dec
mov
loopne
push
sub
ret
stos
sub
or
cmp
dec
psraw
and
mov
pusha
pop
hlt
lcall
mov
cli
shl
ljmp
in
outsl
sti
scas
push
jmp
xchg
xchg
sbb
fisubl
addr16
insl
mov
pushf
dec
rcrl
mov
bound
pop
incl
push
gs
xchg
test
xor
xchg
cmp
int
incl
or
cmp
lret
test
add
in
or
int
adc
daa
incl
dec
pushf
push
jae
mov
out
dec
push
xlat
sbb
jb
stos
mov
cltd
stos
filds
popf
pop
cmp
cmpsl
sbb
jecxz
xor
pop
outsl
clc
call
aas
mov
rcrl
cmpsb
imulb
cmp
popf
fsub
jo
cmp
mov
ljmp
xchg
js
xor
adc
xchg
xor
ljmp
jns
fisubrl
clc
scas
cmp
inc
jmp
pusha
jmp
out
in
aam
jge
lods
sbb
pop
cmc
addr16
faddl
mov
ficompl
divb
incl
imul
lahf
dec
nop
mov
lret
xchg
aaa
cmp
lock
xor
dec
call
call
cmp
push
xor
cmp
push
add
or
nop
outsl
push
ljmp
adc
data16
jle
btr
cmp
mov
mov
or
xchg
jecxz
decl
pop
or
adc
and
fists
mov
sub
cmp
imull
loop
jae
loop
cmpsb
push
mov
call
stos
cld
and
sub
out
xor
jecxz
add
pop
xor
cmp
icebp
cmp
add
mov
lods
cmc
sub
mov
sub
xchg
stos
in
cmp
incl
popl
adcl
shll
xor
pop
test
js
subl
cmp
sbb
dec
cltd
or
cmc
xchg
push
mov
sbb
incl
int
lcall
pushf
xlat
jbe
pop
sub
popa
pop
imul
fisttpl
in
ljmp
ret
jbe
mov
adc
ret
or
mov
mov
xchg
push
inc
adc
dec
gs
lcall
and
jns
insb
dec
adc
pop
xchg
pushf
and
pusha
adc
call
pop
pop
mov
nop
cwtl
inc
ljmp
aas
ja,pn
sbb
out
cltd
push
orb
cmpsb
cmp
mov
pop
xchg
movsl
gs
cld
sahf
jmp
fdivp
pop
ret
jne
sub
push
xchg
ljmp
in
jb
out
data16
dec
pop
and
push
out
ljmp
mov
mov
cmc
xor
repnz
pop
lock
decl
jns
sahf
call
rolb
pop
inc
push
dec
jl
in
sub
dec
cmpsl
es
out
lcall
lds
dec
xor
fsubr
cmp
dec
test
adc
imul
inc
scas
push
enter
cmpsl
cli
lods
xchg
xor
jne
into
inc
mov
lret
loope
es
push
add
incl
fs
je
incb
in
adc
hlt
loope
xchg
out
outsb
xchg
iret
jo
jg
in
sub
jecxz
outsb
imul
lahf
mov
mov
aad
inc
repz
mov
call
xchg
jl
jp
rclb
xor
sti
es
jo
fdiv
fidivrs
pop
push
cld
insl
out
clc
ljmp
and
inc
rep
cmp
dec
aaa
push
ret
div
add
aas
loopne
ljmp
mov
mov
in
sub
int
sub
roll
jle
loopne
mov
jg
call
cmp
dec
adc
and
sbb
push
clc
cli
fnstcw
insb
ljmp
mov
pop
outsb
frstor
stc
subl
inc
pusha
add
nop
jno
subb
mov
pushl
jo
shrb
cmpsb
ret
jae
sbb
add
fisttpll
insb
push
movsb
sbb
loop
test
or
mov
sbb
or
data16
mov
sarl
enter
jl
pop
adc
sbb
dec
jne
scas
mov
out
sub
jo
push
pop
push
push
mov
inc
hlt
out
cli
ljmp
mov
repz
mov
sbb
inc
out
popa
dec
addr16
and
xor
pop
mov
arpl
filds
int
fs
sub
dec
call
js
inc
adc
stos
fwait
xchg
push
les
inc
dec
xlat
pop
and
jmp
lods
ss
jg
pop
jl
repnz
pop
in
mov
clc
repz
jg
pop
mov
lods
arpl
cmp
into
lea
inc
fldz
lock
cld
jg
jno
adc
dec
and
lock
mov
test
js
int
ljmp
ret
imull
push
pop
arpl
sub
cmp
jmp
cli
lcall
adc
iret
mov
nop
jae
ret
sub
jg
rol
std
fdivs
ljmp
in
xchg
loop
pusha
push
mov
mov
lods
pushl
js
ficoms
lret
mov
sbb
jb
lcall
push
mov
cmpb
mov
mov
push
lea
jbe
jae
cli
pushl
jb
movsl
push
sarb
push
or
mov
add
or
mov
out
aaa
cld
cmp
lret
in
lcall
cmpsl
aad
or
mov
adc
fcomip
push
jge
add
inc
ja
mull
daa
aaa
xlat
outsl
adc
sub
icebp
xor
jmp
icebp
push
int3
test
dec
data16
xchg
loope
cmp
mov
push
sub
in
adc
call
sbb
mov
mov
sub
lret
cwtl
adc
xchg
loope
push
sbbl
and
add
call
imul
fstpt
inc
mov
mov
aaa
cld
ljmp
push
clc
and
lods
insb
add
push
add
or
pop
dec
pushl
mov
ret
pop
mov
mov
jge
cld
addr16
std
pop
push
test
cli
or
and
or
int
aaa
cmpsl
xchg
stos
jb
push
jmp
jnp
sub
sub
ljmp
add
ljmp
fimull
movsb
addr16
pop
pushf
pop
push
icebp
rep
les
stos
cmp
fwait
clc
stos
scas
or
in
ret
inc
leave
fisubrs
addr16
loope
inc
xor
dec
decl
sbb
adc
scas
std
mov
leave
push
clc
jge
sub
mov
pushf
jl
enter
push
incl
loopne
jge
push
lret
cmpsb
lret
mov
jns
out
add
call
cld
ljmp
movsb
outsl
iret
dec
xchg
push
stos
fcoml
rcrb
rcll
insb
mov
inc
push
push
push
hlt
data16
xor
fs
aam
jo
cmp
xlat
scas
push
ljmp
ss
jb
sahf
lea
mov
xchg
pusha
cmp
push
jo
pusha
sub
lcall
add
ret
jbe
jno
notl
jne
nop
das
sub
mov
ljmp
stos
mov
les
hlt
push
out
xor
mov
pushl
xor
cld
ljmp
sahf
insb
in
out
insl
loope
inc
inc
mov
dec
mov
incl
sbb
mov
loope
xchg
sbb
ja
adcb
shlb
push
lret
mov
xlat
ds
inc
sub
adc
lds
arpl
decl
lods
aaa
stos
dec
pop
jno
and
or
je
add
xchg
cmpsl
sub
adc
cld
ja
lret
mov
jge
xor
sub
cmp
sti
pop
or
xchg
mov
jns
mov
jne
and
shl
loope
mov
les
sub
stc
pop
popf
push
adc
add
dec
jg
rolb
test
shrb
or
jmp
test
lret
fwait
lret
mov
ss
mov
or
cmpsl
movl
add
mov
lods
out
cmp
ljmp
push
ljmp
test
in
xchg
cmp
gs
sub
sub
cltd
clc
xchg
or
cmp
and
jg
push
hlt
into
xor
xchg
call
jmp
or
mov
xchg
dec
imul
ss
pop
decl
adc
jp
mov
aad
xor
mov
ljmp
jae
mov
fbld
movsl
popa
subb
fimuls
in
mov
popf
subl
inc
std
pop
icebp
scas
daa
or
gs
lahf
push
pop
popa
movsb
ret
inc
pushl
or
data16
jmp
inc
jo
adc
mov
cwtl
xchg
repz
mov
add
mov
xchg
inc
mov
push
mov
ror
mov
push
dec
out
jbe
jp
in
test
std
xorb
addb
sub
in
aaa
mov
and
pushl
fbstp
or
ror
test
mov
adc
enter
jnp
call
pusha
sahf
pop
pusha
pushf
pusha
mov
dec
mov
mov
cmp
imul
ds
lahf
stos
mov
divl
xor
dec
leave
mov
jo
loope
sbb
mov
lcall
lret
movsl
xlat
xor
pop
cmc
orl
and
decl
fwait
mov
cltd
mov
mov
jae
je
addr16
inc
push
jbe
call
pop
sbbb
pushf
or
add
jns
mov
lret
dec
adc
movsb
sbb
gs
ljmp
fcmovbe
sub
pop
jbe
sbb
push
test
outsb
imul
lcall
pop
lock
jb
inc
jne
inc
jbe
enter
jae
mov
add
mov
call
pop
loope
incl
arpl
xor
xchg
insb
les
aas
dec
mov
cwtl
imul
jg
mov
nop
ds
add
mov
test
lcall
test
cld
mov
lahf
jmp
loope
inc
mov
push
les
mov
sbb
mov
adc
lret
push
imul
cmpsb
cmp
pop
cmc
fisttpll
cmpsl
cli
push
daa
sub
insl
out
fdiv
cmp
cs
sub
loopne
mov
adc
mov
in
push
mov
clc
rol
xchg
pop
call
inc
dec
inc
pop
and
push
xchg
mov
ja
push
and
sub
lds
ljmp
sbb
or
pop
fists
hlt
int3
insb
jnp
or
jb
jle
test
cmpsl
fildll
cli
and
dec
and
jns
adc
stos
and
out
and
pop
movsl
incl
or
adc
imul
push
dec
push
daa
and
jae
push
xchg
repz
insb
js
pop
cmp
pop
mov
inc
stc
inc
outsl
jp
xchg
repz
and
ds
sar
out
adc
fstpt
mov
into
ja
cmpb
stos
pop
cli
cs
jmp
sbb
ljmp
jmp
aad
push
add
aas
mov
inc
shlb
je
jg
or
lods
xchg
add
adc
rcll
ret
out
pop
in
rcrl
and
lret
or
incl
fldl
arpl
lods
xchg
sub
cmp
dec
shrb
bound
mov
cmp
mov
popa
mov
fnstsw
loope
or
cmp
leave
jb
daa
icebp
sbb
adc
arpl
mov
mov
int3
lock
insb
mov
adc
push
mov
cld
call
sti
push
pusha
hlt
xor
stos
test
sbb
orb
jbe
jne
add
pop
sbb
xor
in
pop
push
cmpsb
xchg
pop
add
mov
sub
pop
das
jp
ljmp
cltd
ljmp
sub
scas
and
cmp
std
aaa
push
jp
sub
xchg
cld
rorb
sti
loopne
call
inc
push
icebp
xchg
icebp
cwtl
negb
adc
out
jns
push
mov
das
adc
or
mov
ja
mov
jmp
adc
mov
push
sub
lds
jnp
in
and
jg
sub
icebp
hlt
jecxz
ror
imul
mov
xchg
lret
pushl
fsubrp
in
ja
pop
add
xor
mov
fdiv
cmp
imul
jmp
ljmp
fisttps
mov
repnz
adc
clc
xor
imul
leave
push
hlt
pusha
adc
rolb
sub
cmp
push
pop
cltd
insb
insl
add
orb
lds
jge
daa
addr16
outsb
loopne
lcall
xchg
cmpl
enter
xor
ljmp
fwait
ss
dec
call
stos
and
incl
imul
jno
ds
dec
mov
cmpsl
cmpsb
dec
in
sbb
mov
jmp
push
pop
sub
pushf
mov
idivb
pop
ljmp
aam
pop
gs
sub
mov
sub
jo
fsubl
in
lcall
mov
ret
stos
xchg
mov
cld
inc
jnp
rol
aas
mov
cs
decl
bound
or
fldl
jg
dec
dec
or
mov
push
sarb
cmp
lahf
pop
sbbb
lcall
sbb
movsl
call
lret
js
call
push
movsb
pop
in
fnstenv
pushf
mov
hlt
mov
jecxz
push
rol
call
push
lods
mov
adc
lods
cmp
and
cli
pop
aad
sbb
mov
ljmp
sbb
divb
outsb
fdivrs
xlat
sub
stos
testb
dec
loopne
mov
fnstsw
scas
xor
and
sbb
aam
lahf
push
or
xchg
inc
mov
fbld
jae
pop
dec
push
adc
aas
rorb
mov
aas
loope
dec
mov
mov
xlat
jecxz
fnstenv
mov
mov
icebp
push
pushl
mov
pop
cmp
and
shr
dec
stos
mov
adc
dec
ja
call
xchg
or
and
cwtl
test
lods
ljmp
push
mov
push
je
pushf
jge
into
dec
mov
jg
stos
decl
decl
notb
pushf
pop
lea
push
push
out
into
cli
mov
xor
decl
ja
push
inc
aam
ret
shlb
rclb
sarl
or
xor
pop
ja
ljmp
int
or
pop
sub
sub
fdiv
xchg
jge
xor
ret
and
sbb
mov
ljmp
jmp
inc
leavew
out
sahf
subl
cltd
pushl
lods
loope
shlb
and
filds
stos
xchg
and
inc
or
fdivrp
call
movsb
add
jmp
mov
push
add
mov
or
jo
psubw
pop
lock
andb
dec
roll
mov
test
and
fnstenv
push
cwtl
lds
cli
incl
cmpsl
scas
sub
jmp
add
sbb
sbb
rcrl
call
in
filds
retw
outsl
mov
call
scas
sarl
mov
xchg
fstpt
mov
dec
and
orb
mov
pop
mov
dec
sbb
fildll
sub
loop
jbe
jg
xchg
imul
or
or
mov
orl
decl
std
aaa
lea
fsubrs
xor
or
pop
mov
jmp
xorb
cltd
mov
push
mov
cmpl
cwtl
pop
std
faddl
push
test
sub
cld
iret
inc
jge
xorb
pop
outsb
mov
cmp
movsb
push
dec
pushf
cli
cmp
push
and
mov
lcall
ja
das
imul
shll
push
gs
sahf
in
cmp
jae
data16
cld
cmp
inc
ljmp
lret
inc
sbb
or
push
or
lods
rolb
sti
adc
mov
call
dec
mov
sbb
mov
mov
cmpl
mov
inc
sti
incl
in
sub
ds
daa
fbstp
mov
mov
jae
dec
mov
sbb
lcall
fs
call
cli
loopne
sub
inc
loop
jmp
out
clc
fists
js
lcall
in
mov
and
jecxz
mov
or
dec
jmp
lods
mov
enter
fwait
mov
xchg
mov
jmp
jl
jo
int
and
enter
pop
stc
mov
adc
xorb
pop
int3
dec
popa
pushl
std
mov
mov
cmc
mov
mov
cmp
sbb
cmp
ror
les
add
jnp
dec
ficompl
scas
cs
loopne
fisubs
dec
fstl
ret
lods
add
ds
imul
aas
in
jns
movsb
lods
lcall
dec
std
addl
adc
dec
decb
mov
cmpsb
ljmp
es
stos
and
pop
push
push
int
imul
and
test
xchg
and
and
imul
inc
shl
pop
sar
pushl
mov
mov
xchg
shll
inc
or
test
call
dec
scas
xor
cli
inc
lods
aas
cmp
xor
inc
fcoms
add
sarb
push
or
std
call
mov
lea
daa
mov
scas
xchg
adc
mov
std
incl
jp
and
lahf
mov
cwtl
test
cmp
daa
mov
push
and
and
jge
inc
ja
fistps
mov
imul
loopne
push
jmp
dec
in
adc
sub
cld
std
inc
in
xor
jg
fs
mov
cli
rolb
cltd
pop
mov
sar
dec
imul
adc
mov
and
mov
mov
jg
rol
xor
xchg
clc
mov
sub
pop
sbb
clc
std
js
popa
sub
sti
out
clc
push
rcll
push
cmc
push
jle,pn
cwtl
xlat
movsl
dec
xor
iret
mov
das
mov
decl
in
in
cmc
push
push
test
rorb
mov
mov
mov
push
in
call
push
mov
movsl
xor
pop
jo
aad
mov
fildll
pop
xor
incl
outsb
leave
arpl
dec
mov
and
fistpl
xchg
stc
sub
daa
lock
call
es
adc
dec
jp
adc
fidivs
stos
mov
into
adc
mov
orl
sbb
mov
cmp
ljmp
int
sbb
hlt
xlat
and
movsl
faddl
or
dec
fsubrs
jg
lods
incl
pop
fldcw
rcrb
test
xor
in
jg
cmc
xor
cmp
repz
lods
cld
loopne
sub
inc
icebp
pushl
inc
jle
xor
subl
shr
mov
xor
les
arpl
dec
or
push
adc
insl
iret
xchg
add
lds
adc
fistl
jo
mov
sub
xchg
fdivp
mov
popl
pop
push
jle
incl
adc
sbb
ss
data16
jmp
test
push
imull
fcmovnu
xchg
test
stc
orl
ljmp
jnp
and
cld
mov
ja
int
out
imul
subb
into
mov
push
mov
gs
xor
gs
push
scas
inc
cmp
push
dec
mov
je
pushl
xor
int
into
in
xchg
cli
ja
shll
lds
add
imul
jne
jmp
movsl
or
leave
and
ljmp
inc
addps
push
rol
test
cmp
cmp
pop
jns
test
add
idiv
xor
std
fdivrs
repz
sbb
icebp
out
sbb
push
adc
push
cwtl
sti
pop
jns
mov
inc
stos
and
aaa
and
inc
test
sub
adc
pop
hlt
ljmp
xchg
out
mov
popa
or
adc
lods
mov
inc
fisttpll
pushl
pop
add
push
xorl
shlb
lods
add
pushl
movl
mov
scas
sar
repz
fwait
jns
clc
inc
mov
xchg
push
jecxz
std
jmp
shlb
adc
dec
jle
push
jmp
mov
sbb
adc
sbb
dec
jl
mov
mov
jnp
stos
daa
mov
insb
dec
cmc
flds
cmp
lcall
xchg
xchg
mov
add
sbb
xchg
xchg
lea
jmp
out
dec
shr
sub
inc
bound
cmp
mov
decl
scas
cli
inc
aam
mov
adc
fisubrs
xchg
scas
adc
pop
xor
loop
add
clc
mov
int3
cltd
orl
add
ljmp
or
inc
fst
stos
jp
push
addr16
inc
sbb
das
pop
lock
push
mov
cmp
and
mov
push
mov
dec
loopne
mov
sub
cmp
xorb
lds
xor
scas
push
dec
pushl
dec
lcall
loopne
cmp
hlt
mov
cmpsl
mov
mov
mov
adc
cli
out
jge
jb
add
xor
push
pop
hlt
sbb
fucomi
mov
cmp
mov
pushl
loope
ljmp
pop
pop
push
and
test
xchg
call
mov
mov
pusha
loope
mov
insb
jge
movsb
mov
mov
pop
sbb
outsl
or
call
mov
xor
dec
sub
pop
sbb
xchg
mov
jmp
or
ss
sarl
sbb
mov
adc
rcrl
adcb
mov
das
push
jmp
mov
cmp
lcall
sub
aaa
mov
into
call
mov
mov
arpl
into
cld
pop
push
lret
rol
mov
js
xchg
pop
test
and
out
xor
cmp
cli
outsb
test
pop
inc
std
sub
sub
sub
jg
imul
rcll
mov
mov
adc
fisttps
clc
out
fsubs
das
pop
pop
xchg
daa
outsl
ljmp
add
cli
cwtl
pop
ret
stos
pop
mov
push
mov
dec
inc
sbb
push
dec
xchg
cmp
rcr
les
fldl
cli
call
std
movsl
call
sarb
cs
inc
in
mov
les
cmp
out
inc
outsb
xor
sbb
ret
mov
icebp
iret
imul
in
fdivs
add
mov
inc
xor
mov
sbbl
adc
fwait
adc
lcall
shll
xor
icebp
add
cmc
push
in
dec
mov
rcrl
ljmp
sar
incl
pop
inc
insb
scas
mov
pop
sbbb
mov
mov
lcall
aaa
ljmp
mov
or
out
js
aam
arpl
pop
sub
pushl
cmp
mov
xchg
outsw
jno
popw
and
lret
jl
cmp
lahf
dec
cmova
test
jne
cmp
pop
aaa
mov
imul
xchg
addr16
mov
test
mov
into
sbb
clc
inc
insb
shlb
hlt
mov
cwtl
sub
fwait
inc
sub
negl
hlt
mov
push
testb
cmp
lea
add
cmp
xor
scas
clc
add
aaa
out
data16
push
pop
aas
loope
scas
clc
xchg
mov
jo
js
push
popf
dec
out
jecxz
jmp
cmp
fs
inc
call
and
mov
je
lcall
mov
adc
call
jl
inc
hlt
push
mov
stc
push
push
negl
adc
and
jae
jl
lret
push
js
jmp
les
scas
xchg
xchg
shl
or
arpl
sub
call
out
imul
push
mov
adcb
inc
loope
in
call
mov
xchg
fisubl
fwait
aad
dec
movsb
rcrb
orl
pop
ljmp
push
int3
adc
xchg
sahf
xor
dec
cltd
and
xor
fildll
lock
cmp
xor
in
in
mov
idiv
out
mov
inc
ja
mov
sti
push
ret
add
es
cmc
mov
mov
jle
scas
jmp
xchg
enter
nop
mov
mov
mov
incl
lret
dec
lock
xchg
mov
inc
sti
sarb
aaa
jns
cmpb
jecxz
cwtl
ljmp
pop
cmpsl
jg
cmp
cltd
sbb
cmp
inc
sarl
dec
dec
movsl
outsb
or
inc
jne
ljmp
call
mov
xchg
dec
ficoml
fcomps
xor
inc
xor
mov
mov
in
jp
gs
outsb
int
iret
repz
add
call
subb
fsubs
dec
in
push
sub
repnz
movsb
xor
dec
lahf
sbb
inc
pop
cli
das
outsl
call
aaa
mov
movsl
insb
mov
sub
add
in
xchg
mov
push
jle
test
jmp
pop
xchg
out
pop
xchg
and
cltd
leave
aaa
jae
pushf
xchg
in
xchg
dec
pusha
jno
out
pushl
sub
jne
lcall
and
mov
aas
lods
pop
dec
leave
push
and
call
xlat
lret
push
adcl
nop
and
xchg
pop
mov
fildll
fisubrs
adc
lock
pop
cmp
push
and
je
mov
xchg
jl
xchg
mov
shr
pop
daa
push
sub
jo
xorl
sbb
jne
mov
pushl
lret
xchg
inc
sub
scas
mov
fimuls
xor
stos
divb
test
and
clc
pushl
mov
lret
jge
mov
push
and
xchg
xor
adc
fistps
xor
mov
pushl
mov
repnz
std
dec
mov
or
mov
xchg
mov
mov
fwait
adc
add
pop
jmp
sti
test
pushl
mov
mov
sub
in
xor
mov
test
incl
leave
mov
xchg
clc
fisubl
mov
adc
pop
cli
inc
loope
into
jle
in
cmp
in
mov
dec
bound
mov
or
pop
add
incl
xchg
push
shlb
mov
and
inc
push
clc
jno
aad
stos
push
mov
sub
sti
pushl
xor
sbb
cltd
jo
ror
sub
negl
stos
jbe
daa
push
lcall
xchg
pushf
mov
sar
dec
adc
cld
mov
lods
sbb
lock
mov
ljmp
xchg
addr16
inc
sbb
adc
pop
inc
std
mov
ss
mov
fldl
push
std
fcoms
fisttpll
lds
push
cltd
cmovbe
fnstcw
pop
push
lcall
testl
loope
dec
cwtl
cmpl
ljmp
dec
inc
enter
xor
or
mov
ret
out
sti
das
adc
fdivr
decl
jp
fstpt
es
hlt
push
test
sbb
and
pop
lea
out
jmp
or
push
ljmp
data16
or
lret
loopne
push
and
lock
into
arpl
ficoms
jle
mov
int
xchg
push
data16
jg
decl
ja
sbb
adc
int3
jae
or
jmp
mov
or
add
and
jmp
adc
iret
xchg
ljmp
fisttps
cmp
cmp
or
in
nop
push
jle
sub
jb
jecxz
decl
add
sti
es
aad
orb
sub
cmpsl
lea
and
jmp
lret
test
fisttpll
stc
movsl
pop
or
xor
jne
clc
ljmp
cmp
jecxz
sahf
cmp
fisttps
dec
pusha
mov
mov
mov
popa
fistl
dec
call
cmpsl
ljmp
lcall
pop
es
add
cltd
xchg
jmp
lcall
test
scas
fsts
mov
adc
sbb
push
or
add
push
push
test
jmp
jns
fstpt
js
jg
outsl
push
mov
ljmp
aaa
push
lods
insl
rcrb
sti
push
outsl
in
add
inc
leave
sbb
jg
jb
push
push
adc
cmp
sbb
mov
xor
jmp
mov
xchg
les
es
jl
mov
push
lock
mov
pop
xchg
sbb
pop
xor
in
cmp
mov
popf
cmc
ffree
std
sbb
jg
loopne
or
leave
arpl
jbe
shll
aas
ret
push
mov
aad
call
loopne
push
mov
jo
imul
pop
out
or
out
je
call
ljmp
sub
inc
cwtl
xchg
roll
mov
jp
addr16
sbb
cmp
dec
jmp
out
ss
in
mov
mov
jg
sbb
adc
rolb
repnz
and
lds
lret
popa
movsl
xchg
lea
jo
lcall
pop
je
aas
mov
popf
sub
lcall
mov
outsb
xchg
in
lret
jno
xchg
or
std
xor
cli
jg
or
push
addl
aaa
in
mov
lods
sub
ljmp
orl
pop
sbb
and
push
and
and
rcr
dec
lods
inc
adc
in
pop
pop
insb
cmp
sub
xor
cltd
cli
mov
xlat
mov
jg
pop
mov
std
mov
mov
sub
pop
cmp
cmp
jp
lcall
jne
jg
lret
ret
test
aas
aas
mov
rcll
xlat
fcomip
cmpsl
pop
jae
pop
and
aas
jnp
fisttps
mov
ja
jg
in
scas
lcall
cmp
fistpll
sub
incl
fists
dec
mov
fistpl
xor
mov
adc
inc
or
sbb
addr16
push
xor
daa
fcoms
shll
stc
mov
push
or
testb
sbb
int
int
xchg
lcall
mov
sub
andb
incl
push
jl
mov
aam
sub
outsb
call
out
rclb
dec
ret
dec
fstl
jbe
jmp
pushf
sub
pop
mov
orl
and
in
loope
jge
xor
cmp
mov
jbe
fsubr
dec
leave
mov
and
ja
rcl
in
pushl
and
add
call
dec
int3
icebp
jo
imul
aaa
sub
cwtl
subps
xor
nopl
jno
lcall
dec
mov
ret
mov
sub
test
ret
pop
mov
and
ja
dec
loopne
xlat
sbb
arpl
mov
lcall
sbb
int
pop
repz
and
pop
dec
or
or
test
inc
adc
call
scas
mov
hlt
rorb
mov
jmp
or
fldcw
cs
in
loopne
clc
pushf
cmc
lret
ret
sbb
and
pop
lods
incl
sahf
jp
pop
inc
mov
scas
ss
jmp
popf
fistps
movsl
mov
dec
sti
jmp
dec
iret
mov
fcomps
xchg
mov
cmp
das
mov
jg
aam
imul
xchg
sahf
mov
scas
inc
je
and
in
jmp
mov
cs
scas
cli
lcall
aam
mov
xchg
dec
mov
jmp
stos
push
cmp
adc
out
add
rcll
stos
fbld
push
mov
lods
into
in
or
xchg
icebp
aad
push
mov
pushl
jb
fdivr
sub
jp
push
xchg
sbb
add
test
cmp
fs
sub
jnp
mov
lock
or
pop
xchg
adc
inc
jne
inc
adc
leave
xchg
fcmovu
push
call
sbb
vpaddsw
mov
je
sub
cmp
jns
nop
xorl
dec
pop
iret
jg
xor
or
test
xlat
adc
mov
lcall
mov
inc
mov
sbb
pop
jg
hlt
jg
pop
mov
push
adc
cltd
cmp
pop
mov
adc
mov
pop
sub
jl,pn
cld
xchg
incl
loop
xor
xchg
hlt
cld
pop
js
cmpsb
mov
jno
push
cmpsl
incl
decl
pop
fstp
jnp
sti
adc
mov
pop
in
shld
dec
std
sub
dec
push
cmc
jae
or
jg
adc
fidivl
dec
mov
mov
mov
xchg
out
out
clc
cld
pusha
mov
add
mov
stos
repz
scas
mov
and
adc
sbb
decl
inc
mov
ret
movb
cmp
xchg
lock
mov
hlt
adc
call
dec
adc
iret
adc
xchg
lods
loop
mov
push
hlt
outsl
outsl
incl
sub
dec
or
mov
mov
push
inc
ljmp
sbbb
xor
icebp
xor
lods
loop
mov
lcall
jo
lret
dec
loopne
dec
bound
sahf
call
push
cmp
stc
sub
pop
sarl
or
les
scas
adc
lret
push
cld
out
outsl
add
mov
or
pop
repnz
into
xor
ljmp
cli
lcall
syscall
jg
ret
stos
cmp
lods
cld
out
sub
add
xchg
add
jmp
cmpsl
addr16
and
push
ret
pop
add
sub
sub
add
xchg
pop
stc
pusha
or
and
lret
push
jg
pop
pop
or
adc
sbb
imul
dec
mov
js
sbb
out
decl
or
mov
and
push
adc
enter
add
cld
mov
into
mov
sti
lcall
add
or
cmp
popa
pop
sbb
test
aam
cmpsb
fwait
sbb
lcall
rol
ds
adc
leave
adc
pop
inc
xor
jp
sbb
out
xor
jmp
test
enter
std
mov
scas
rcrl
les
gs
mov
int
jae
scas
xchg
mov
or
bound
outsb
push
jne
jbe
cmp
lcall
mov
stos
fisubrl
cli
fdivrl
jo
mov
das
xor
or
mov
pop
push
lret
flds
push
push
out
pushf
dec
test
andb
push
int
sub
xchg
fstl
xchg
mov
add
push
push
push
inc
cld
jle
lds
inc
mov
fildl
mov
and
inc
clc
cmp
push
or
out
pop
cwtl
int
inc
mov
mov
mov
mov
ljmp
ret
daa
addl
mov
sub
pop
and
int3
ds
dec
pushl
arpl
xor
pop
mov
add
shlb
divb
pushl
das
rorl
pop
fsubr
out
lock
test
sti
inc
sub
negl
push
xchg
jl
lret
in
push
adc
lcall
insb
stos
pop
xchg
popf
mov
test
bound
and
bnd
es
je
out
xor
xlat
data16
decl
mov
sub
fs
rcl
pushf
movsb
lea
ljmp
cmc
decl
aaa
pop
pop
cmp
ja
and
push
test
jg
call
loopne
push
daa
and
jp
xchg
jmp
cmp
mov
push
add
ret
in
mov
ret
jmp
imul
in
gs
push
cmp
mov
ret
add
icebp
xchg
pop
mov
testb
clc
and
je
mov
mov
sahf
cmp
or
push
movsl
js
sub
insl
test
movsl
pushl
sub
mov
jg
dec
adc
add
add
mov
in
test
decl
pop
cmp
mov
push
nop
lods
mov
xor
xchg
jae
decl
sbb
cs
push
sbb
and
daa
add
jge
jle
push
mov
dec
outsb
pop
lock
decl
jl
frstor
jnp
mov
or
icebp
outsb
and
xor
mov
decl
addr16
in
push
inc
adc
in
ss
lahf
leave
fmuls
shr
call
cmp
inc
ds
cmp
push
out
or
and
daa
or
hlt
push
sti
incl
inc
mov
inc
int
cld
or
cld
movsb
xchg
aad
cli
push
clc
into
and
fiaddl
push
add
movsl
dec
cmp
adc
dec
pop
or
mov
popf
idiv
mov
jmp
adc
pusha
push
ja
jbe
enter
lds
cld
out
stos
push
mov
xlat
incl
and
jne
inc
mov
loop
pop
call
cmp
mov
mov
aad
pop
cmpsb
dec
das
adc
mov
mov
inc
xchg
jmp
dec
stos
sbb
dec
pop
cli
fs
mov
dec
xchg
imul
jg
mov
cmp
call
push
add
dec
mov
mov
mov
jo
sub
jno
xor
jbe
jle
sbb
mov
pop
pop
mov
cmp
cmp
rcrl
pushf
mov
xor
jmp
enter
mov
call
dec
mov
mov
mov
xor
les
dec
cmc
mov
out
push
orb
fistpl
jmp
sub
pop
hlt
add
icebp
sub
cmc
jg
call
cmp
popa
xor
lret
pop
sub
repnz
mov
adc
jmp
dec
jmp
in
pop
pmovmskb
pop
pushl
or
pop
and
je
pop
je
cmp
and
out
pop
or
loopne
outsl
ss
xor
cmpsw
movsb
testl
or
mov
pushl
or
outsb
dec
dec
mov
arpl
or
jmp
sar
inc
pop
stos
jbe
not
out
jb
ss
sbb
inc
scas
mov
jle
stc
mov
inc
pop
ret
js
sbb
sbbl
sbb
pop
jecxz
xor
jo
dec
jle
cltd
fnstcw
idiv
imul
outsb
dec
lret
test
mov
dec
jns
aas
cs
mov
jns
lret
dec
mov
pop
inc
pop
cmpsb
push
mov
sbb
insb
pop
jle
call
xor
jne
sarb
cmpsl
sub
in
and
andb
xor
pop
xlat
sub
jmp
sub
mov
pop
in
stos
xor
mov
mov
fcos
lcall
pusha
shrb
loop
jecxz
mov
sub
sub
aas
pop
jno
mov
out
dec
sti
cld
lock
in
adc
cmpsb
or
mov
out
clc
push
std
iret
call
xor
mov
sub
pusha
and
dec
mov
push
mov
or
push
addr16
and
dec
setno
aam
xlat
xorl
jno
pop
jl
shll
outsb
lcall
cld
imull
push
jg
mov
je
mov
jle
mov
cvttps2pi
push
inc
imul
fcomip
inc
mov
jecxz
inc
or
cltd
jnp
int
dec
aas
cmc
cmp
mov
test
sbb
sbb
test
mulb
adc
mov
nop
cmp
cs
pusha
jno
mov
inc
and
xor
andl
cli
jp
inc
and
sub
enter
add
lods
iret
nop
test
mov
lcall
dec
mov
sbb
cmp
jb
cmp
fsts
pop
mov
lcall
push
sub
loop
jp
test
and
mov
and
pop
or
cmpsl
pop
sar
idiv
lcall
test
repnz
dec
out
loopne
shl
lahf
dec
push
and
iret
stos
mov
call
mov
popf
adc
dec
inc
lea
ficomps
mov
adc
cld
call
xlat
xchg
jl
pop
das
sub
pop
ljmp
inc
ljmp
pop
ret
in
dec
nop
fnstcw
pop
adc
sub
dec
out
jg
push
shl
fmuls
jg
es
or
push
shlb
dec
pop
xlat
cld
mov
push
icebp
divl
xor
push
jp
lock
push
daa
test
push
call
cli
sbb
mov
fldenv
xchg
clc
fmull
jmp
fimuls
xchg
dec
and
lret
mov
rorl
jg
push
cmp
push
jnp
addl
js
scas
xchg
std
mov
pop
mov
lret
js
mov
jg
and
movb
rcll
std
in
pop
std
out
insb
scas
popf
movsl
push
rolb
and
test
incl
inc
ret
in
mov
negb
mov
adc
into
aad
dec
fistpll
inc
call
xchg
xchg
xchg
js
pop
cmp
add
lret
inc
cwtl
pop
loop
lock
pop
fdivrl
cmpsb
push
pop
mov
pop
adc
sbb
mov
imulb
xchg
sar
inc
cmc
dec
and
xor
mov
dec
dec
outsb
dec
push
xor
push
out
ljmp
mov
xor
jp
loopne
je
fldenv
fsubl
lods
xchg
xchg
mov
mov
cld
jp
enter
inc
out
push
pop
adc
das
xor
inc
jp
dec
push
rorb
cmp
cmp
mov
inc
xlat
loop
call
mov
lock
pop
pop
movsb
sub
jg
or
lcall
xor
jg
mov
notb
ljmp
leave
stos
mov
mov
fs
jne
ljmp
mov
add
inc
adc
inc
std
mov
cmp
jg
repnz
fcmovnb
sahf
push
mov
or
dec
xchg
cmpsl
outsb
jmp
mov
pop
cld
push
adc
shr
jg
and
dec
jmp
lahf
bound
inc
xorb
and
and
xor
and
mov
mov
sub
and
das
mov
cmp
jae
pusha
ss
mov
outsb
loop
ret
je
xchg
xchg
push
mov
decl
fdivp
in
leave
test
inc
ret
mov
hlt
sbb
xor
outsb
mov
leave
cli
jg
into
mov
aaa
xchg
cmp
js
jne
cmp
sub
fs
dec
inc
push
mov
mov
xor
mov
lcall
xor
inc
arpl
dec
call
dec
enter
pop
fstpl
lret
leave
imul
pop
std
call
or
mov
jae
add
xchg
cmp
fs
sub
fiaddl
bound
mov
mov
pop
jecxz,pn
mov
stc
sub
mul
repnz
xor
pop
ret
aad
daa
fwait
cmp
add
icebp
and
call
xor
in
addr16
in
and
aaa
lret
xchg
add
mov
pop
mov
notb
aaa
std
ficoms
mov
pop
jp
inc
pop
cmp
cmc
out
sub
xlat
movsl
ja
fldt
push
cmp
sub
cmp
sub
mov
sub
add
icebp
cmp
mov
xchg
jae
icebp
or
nop
into
inc
sbb
sahf
mov
mov
mov
pusha
add
lret
movsl
insl
xchg
xor
mov
pop
sbb
sbb
ds
cmp
mov
xchg
sub
dec
mov
and
pop
jmp
subb
loopne
lods
push
dec
sub
hlt
inc
sbb
in
adcb
cmpsl
jmp
cwtl
or
cmpsb
cli
cmp
jmp
inc
in
mov
mov
jmp
shrl
xor
out
lea
lock
jmp
and
test
mov
repnz
das
inc
mov
mov
jp
mov
movsb
lods
sub
es
dec
adc
int3
leave
and
and
daa
clc
gs
es
mov
push
stos
sub
popa
push
add
int3
call
or
movsb
ljmp
aam
lret
mov
cmp
les
push
into
das
inc
lcall
jo
jno
jecxz
ljmp
out
nop
push
xorl
aaa
aaa
mov
jp
cmpsl
add
adc
dec
inc
push
dec
call
pop
das
or
or
cmp
sahf
push
inc
and
stos
aaa
pop
adc
subb
mulb
or
pop
add
addb
addb
or
add
dec
mov
incl
and
fisubl
mov
add
insl
sbb
js
push
jg
add
pop
sbb
test
inc
fcoms
ficompl
jg
orb
mov
pop
mov
sub
and
popa
adc
fidivl
lock
sub
scas
cmpsl
adc
aas
bound
push
add
xchg
fdivrs
daa
add
xchg
dec
and
and
and
movsb
push
movsb
jle
dec
jge
scas
push
stos
push
and
mov
and
imul
cld
scas
loop
push
inc
pop
pop
add
mov
pop
sbb
mov
mov
sbb
inc
mov
pusha
sbb
mov
sarl
pop
les
push
adc
fs
mov
dec
repz
insb
or
lret
imul
imul
imul
into
mov
jbe
fnstenv
fdivs
mov
stos
pop
pop
popa
add
mov
sbb
mov
aam
push
mov
push
shll
add
outsl
push
shll
adc
insl
push
fidivrl
iret
outsb
pop
push
insl
ja
ret
je
fidivrs
out
jge
push
pop
fisttps
add
fwait
inc
ds
in
movsb
push
add
fcmovnbe
clc
mov
sbbl
push
mov
adc
push
push
add
jne
mov
aam
push
ret
add
mov
lods
pop
add
push
pop
dec
add
out
mov
cmp
data16
inc
iret
mov
aaa
add
push
push
shlb
push
lret
stos
aas
add
ja
mov
jge
push
push
xlat
jne
add
ja
insb
jae
jo
aad
push
xlat
ja
js
push
lahf
fnsave
push
jp
jp
inc
push
fidivrl
adc
jns
ja
fldl
push
ret
jmp
ljmp
push
xchg
sub
xchg
in
xchg
sub
scas
mov
push
xchg
push
setbe
xor
dec
fisttpl
push
lcall
sti
push
cltd
cmp
cmp
pushf
cmp
popf
mov
popf
aas
push
sahf
inc
push
lahf
inc
lahf
jg
pop
mov
push
mov
push
imulb
movl
cld
out
out
push
hlt
clc
out
sahf
out
cli
sti
cld
std
mov
clc
lahf
incb
jecxz
arpl
inc
jae
add
xchg
fldcw
add
add
pop
data16
insb
add
pop
add
pop
or
mov
add
repnz
add
add
or
add
cmpb
or
in
lods
stos
test
test
or
test
mov
add
pop
adc
pop
adc
lods
fnstsw
xor
femms
lods
lods
cmp
sbbb
pop
push
scas
add
mov
insl
scas
scas
insl
lods
pop
pop
adc
pusha
in
add
lods
adc
sbb
sub
scas
scas
scas
inc
and
scas
sbb
mov
mov
lcall
mov
push
sbbb
mov
push
mov
push
and
aaa
xor
and
mov
test
pop
and
ficoms
pop
sub
pop
sub
mov
stc
or
popa
pop
sub
ret
and
mov
or
sub
es
mov
adc
pop
cmp
scas
pusha
fstpt
pop
aaa
cmpsb
add
mov
pop
xor
mov
push
pop
pop
or
or
add
pop
insl
pop
pop
xor
mov
pop
das
push
cs
xor
outsl
outsl
add
xor
das
pop
push
push
xor
adc
pop
push
cs
decl
das
inc
inc
xor
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
cltd
add
add
xor
pushw
dec
decl
jnp
dec
jo
mov
inc
xorl
mov
xchg
xchg
xchg
popf
pushf
fwait
lcall
xchg
mov
test
xchg
xchg
sub
xchg
lret
dec
ja
jns
dec
push
bound
js
loope
insl
adc
xor
jne
je
mov
pusha
push
jg
mov
push
lret
jo
lock
pop
pop
scas
push
lods
mov
aas
outsl
push
adc
xchg
pop
push
dec
add
jle
add
and
jge
fwait
mov
movsb
push
sub
js
xor
xor
ja
push
ja
jb
adc
fildl
es
xor
mov
pop
mov
addl
sbb
cmp
outsb
and
mov
xchg
jo
loopne
sti
pop
push
inc
mov
cmp
mov
inc
add
jae
xchg
outsl
push
mov
inc
push
popf
inc
mov
aaa
add
xchg
jno
lret
mov
in
addr16
bound
mov
mov
push
into
inc
push
sahf
mov
insb
add
outsb
fcmovu
mov
add
xchg
xchg
pop
push
test
cmpsb
dec
push
dec
push
movsb
addb
add
jb
shll
outsl
pop
lahf
loopne
call
pushf
push
rorb
add
lcall
outsb
mov
jns
dec
mov
add
ja
sahf
jbe
fistpl
push
imul
fildll
stos
push
add
and
es
js
out
mov
gs
mov
shrl
insb
pop
mov
push
outsl
ror
push
ds
rorl
sbb
push
mov
pop
jg
fiadds
call
lock
mov
in
loopne
dec
xchg
add
test
sbb
loopne
iret
sahf
mov
xchg
out
in
push
jle
or
jecxz
into
out
orb
aad
push
xchg
out
lods
divb
fildl
adc
push
adcl
addb
sbb
test
test
sbb
test
in
mov
push
xchg
int
in
insb
nop
and
out
xchg
in
xchg
lock
rcr
sub
sub
imulb
in
out
xchg
das
push
xchg
repnz
xor
cwtl
push
cmc
sahf
xor
ficompl
icebp
fwait
cmpsb
pop
cmp
mov
aam
jle
add
scas
jo
test
sahf
dec
imul
pop
jbe
stos
into
shll
mov
lgs
int
mov
mov
rcll
mov
sarl
push
aad
jle
data16
add
add
adc
push
dec
inc
sbb
cmp
je
dec
daa
xor
add
add
mov
movzwl
inc
fimuls
or
or
or
es
push
add
nop
mov
add
adc
lods
inc
sbb
ds
add
ret
mov
xor
ds
inc
mov
mov
mov
std
push
testb
mov
add
and
fsubrs
ds
mov
pop
sar
push
aas
and
xor
xor
or
pop
and
insb
aas
aas
cmp
sub
adc
js
pop
adc
mov
sbb
inc
jbe
popf
mov
sub
inc
or
fidivrl
cmp
dec
mov
scas
ds
jle
aas
jbe
jge
adc
ds
xor
dec
inc
test
mov
scas
add
sub
mov
mov
addr16
mov
mov
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
in
ljmp
mov
sahf
ds
xor
sub
sub
sub
sub
or
sub
dec
and
sti
and
inc
mov
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
insl
outsl
jmp
xchg
jns
jle
addl
xor
jae
jo
outsb
pushf
sti
lds
loopne
shl
adc
push
addb
add
add
roll
aas
sub
push
push
add
cmc
repz
dec
xor
push
incl
aas
add
xchg
pop
cmp
test
add
mov
add
jmp
mov
mov
fnstsw
fwait
push
repnz
fdivrp
in
cs
add
pushf
add
mov
xchg
divb
lcall
or
mov
test
sahf
or
ljmp
mov
into
xchg
add
mov
mov
fistpll
loopne
test
scas
xchg
js
and
out
lods
mov
mov
sub
mov
fnstcw
push
nop
sub
xchg
xor
mov
fucomi
xchg
xor
xchg
outsb
lcall
leave
jbe
data16
cmp
fidivrl
shlb
iret
adc
repz
lret
loopne
push
std
into
pop
inc
sub
fdivrp
neg
insb
mov
out
xchg
add
test
jg
jle
inc
add
add
and
adc
xchg
dec
dec
dec
dec
dec
add
pop
add
outsl
xchg
incl
push
dec
or
adc
cmp
adc
dec
or
add
fsubr
dec
dec
push
adc
add
or
pop
pop
mov
add
cmovg
inc
push
dec
sbb
fscale
dec
sti
inc
adc
inc
inc
adc
sbb
dec
add
or
cmp
inc
ds
cmp
cmp
cmp
jmp
daa
and
sbb
sbb
and
add
dec
ss
xor
sub
sub
sub
cmpsb
notb
mov
addb
mov
pop
mov
mov
push
add
outsb
mov
or
mov
outsl
add
push
mov
sbb
add
mov
cmpsl
mov
and
jbe
add
pop
nop
or
adc
jmp
ret
sbb
incl
add
push
outsb
sysret
mov
es
xor
andl
ja
cmpsb
pop
stc
sysret
in
jo
leave
leave
lock
hlt
sbbl
jg
sbbl
mov
xor
add
or
jg
lahf
test
add
into
jg
cli
shlb
add
inc
test
mov
jg
sub
repnz
push
xor
add
xchg
jg
mov
mov
roll
das
sti
mov
jle
push
leave
scas
inc
dec
sbb
pop
jo
jg
xchg
orl
push
add
loope
idivb
mov
cld
jg
mov
and
jle
cmpsb
std
bound
adc
jg
bound
into
jg
mov
nop
pop
jg
xor
and
and
add
add
data16
arpl
movb
sar
inc
or
lods
call
js
push
dec
xor
or
dec
adc
mov
orb
jg
rcrl
inc
add
adc
jg,pt
adc
jbe
inc
bound
adc
and
sbb
scas
incl
add
enter
jmp
lods
jle
lret
imul
dec
add
add
add
adc
push
test
add
mov
push
lods
inc
addr16
add
add
popa
jbe
scas
inc
and
add
jg
test
jo
jg
and
inc
lret
outsb
jg
mov
inc
cmpsb
and
xor
es
jg
les
adc
pop
mov
lods
cmpb
mov
fdivrp
cmpsb
ljmp
in
popf
notb
add
daa
rcl
mov
aas
aaa
pop
pop
in
push
pop
xor
pop
jle
xor
pop
inc
push
add
test
mov
jle
sbb
decl
push
or
push
dec
xchg
push
fnstsw
je
add
mov
insl
iret
lods
comiss
daa
push
arpl
das
les
aam
insl
xchg
arpl
out
push
xchg
push
and
hlt
dec
and
lcall
jae
lds
ljmp
or
or
jle
push
and
mov
push
dec
fidivrs
inc
idiv
fnstenv
add
push
jne
dec
out
jl
pop
push
jbe
or
es
push
jnp
push
jp
ja
dec
decb
js
dec
jbe
pop
add
jne
mov
mov
mov
jbe
call
and
or
ljmp
jle
aam
cmp
test
scas
jmp
call
and
mov
jns
fiadds
insl
and
push
mov
outsl
inc
call
inc
out
mov
xchg
cs
aas
popf
inc
push
pushf
cmp
test
cwtd
fstpt
cmpsb
mov
xchg
xor
xchg
xor
sub
sub
jns
insl
push
nop
daa
ss
cs
enter
mov
xor
lcall
cmpsl
sbbl
jg
dec
test
cli
pop
fnsave
xor
inc
int
sbb
push
jbe
data16
ss
rcl
push
cs
add
mov
aam
ja
dec
test
xchg
movb
inc
mov
pop
ja
testb
pusha
add
add
dec
in
adc
fs
sub
sub
dec
dec
push
insl
outsl
mov
mov
jns
or
add
push
adc
add
push
orl
lea
jmp
or
xchg
inc
and
cmp
lock
push
jmp
xor
pop
cmp
std
cmovb
icebp
imul
add
sub
lcall
out
pop
sahf
jbe
xor
jmp
mov
pop
call
push
sbb
xor
inc
push
mov
push
negl
std
call
jmp
syscall
mov
sub
xchg
mov
or
call
sbb
add
mov
daa
cld
pop
das
pop
stos
mov
incw
js
xchg
adc
add
push
jbe
lcall
or
sub
sti
psubusw
test
ds
fcompl
adc
ljmp
test
inc
push
sahf
test
call
decb
sbb
inc
cmpsb
decl
mov
lcallw
sub
ljmp
cmp
add
adc
mov
enter
bswap
xor
data16
adc
inc
sti
mov
stos
insl
out
setno
incb
add
push
inc
dec
inc
sub
nop
sysret
arpl
add
mov
outsb
push
sub
dec
arpl
push
sub
pop
sti
and
call
imul
call
mov
jbe
xor
pop
stc
bswap
arpl
leave
add
call
jg
push
inc
test
cli
dec
dec
mov
test
push
imul
push
sbb
imul
rcll
ficoms
push
pop
inc
stos
nop
into
aaa
mov
jecxz
fwait
push
shll
roll
imul
ret
lcall
call
adc
jmp
ljmp
dec
push
mov
push
inc
insb
insl
fidivl
mov
fildll
sahf
movsb
dec
push
stos
push
popf
inc
xchg
fidivs
inc
cs
dec
mov
and
push
add
push
out
push
shrb
rcl
lea
outsb
shrb
es
add
sub
repnz
push
iret
insl
pop
xchg
dec
ja
daa
outsl
pop
imul
push
push
push
push
xchg
push
ljmp
jmp
lcall
xlat
ds
pop
add
repnz
fwait
dec
push
jmp
pushf
cmp
xchg
hlt
push
aas
decb
cwtl
xor
and
push
xchg
hlt
push
push
aaa
push
lcall
ss
xchg
push
xchg
es
xchg
xchg
dec
notb
sub
test
mov
scas
sub
lcallw
xchg
dec
fimuls
jg
add
xor
fcmovbe
js
std
faddl
inc
fstpt
push
jnp
jp
outsb
lcall
or
jl
sbb
movq
es
jbe
int
jle
adc
fidivrl
push
dec
push
dec
repnz
repnz
jae
outsl
mov
jns
push
mov
jnp
jge
hlt
test
imul
jl
cli
int3
outsb
nop
negl
adc
mov
mov
mov
nop
xlat
lods
cmp
iret
mov
int
push
addb
jnp
lahf
dec
es
mov
in
inc
and
orb
jl
hlt
jg
and
xchg
out
push
sub
iret
out
mov
cli
cmp
aaa
aam
jbe
clc
push
idiv
out
ds
test
inc
sub
jg
mov
icebp
push
dec
mov
dec
pop
cld
loope
out
push
daa
jno
sub
jg
mov
icebp
fistl
xorb
xchg
mov
xchg
ja
bnd
repnz
xchg
cld
jp
sub
adc
in
xchg
aaa
or
out
cmp
jge
and
sbb
in
sar
jg
dec
in
rclb
ja
iret
lock
mov
icebp
test
idiv
push
lcall
je
lea
fsub
pop
push
stos
nop
test
int3
decl
inc
jle
mov
fidivrl
arpl
clc
popa
and
decl
into
and
pop
or
push
xchg
and
pop
dec
inc
ds
lcall
push
pop
insb
mov
jns
mov
push
mov
jmp
mov
in
sbb
in
sbb
xchg
mov
pop
mov
jmp
adcb
xchg
sub
loope
sub
sar
in
lret
jg
out
mov
or
add
cmp
push
add
ja
cmp
or
bndldx
inc
and
mov
insl
mov
or
push
ret
fcmovb
add
loopne
and
add
add
xor
sti
mov
inc
lahf
lret
push
lock
adc
mov
adc
sbb
xchg
push
pop
iret
test
mov
pop
push
sbb
push
sbb
xchg
cmpsb
cmp
or
and
ja
inc
or
push
jne
add
incl
or
mov
adcb
adc
imul
inc
or
add
outsb
xchg
cmpsb
jno
icebp
inc
icebp
add
lock
gs
jo
add
push
pop
add
std
xor
dec
add
and
jo
xlat
add
mov
ss
push
loopne
fs
aaa
xchg
scas
add
dec
test
add
rcrl
movsb
xchg
inc
testb
into
sbb
testb
popa
imul
fdivl
push
orl
loop
lret
add
fisubrs
or
jno
mov
pusha
jecxz
xor
xor
add
mov
push
add
jbe
adc
shlb
sub
cmp
add
xor
jo
outsb
ret
ljmp
xorl
shlb
xor
sarl
lea
jecxz
jae
or
mov
inc
ss
push
fadds
add
add
mov
or
or
mov
adcb
dec
push
push
xor
repz
addl
les
lcall
lahf
add
add
pop
add
sti
xchg
jo
xor
dec
push
ret
xchg
outsl
loop
and
cmp
pop
sub
sbb
fwait
nop
lea
loop
jnp
pop
dec
insb
out
or
inc
imul
outsb
sbb
add
pusha
pop
in
insb
test
loop
jne
addr16
in
aam
adc
fwait
add
shrb
lds
sbb
or
movb
xchg
inc
insb
test
mov
orl
lea
arpl
test
add
add
fiaddl
jmp
sti
popf
xchg
push
ds
popa
add
subl
inc
bound
cwtl
stos
or
cmp
subl
sbb
lret
arpl
cmp
dec
in
adc
mov
xchg
sbb
sbb
push
lahf
push
lods
add
xchg
dec
sub
and
push
jbe
dec
outsl
and
jecxz
cmp
adc
jb
or
push
xor
dec
push
test
pop
sub
xor
push
push
jb
inc
or
jmp
mov
ret
or
shl
inc
je
mov
pusha
fisubl
inc
iret
or
mov
mov
cmp
cltd
sub
imul
xchg
pop
shrl
mov
inc
sub
pop
dec
jbe
lds
loopne
push
addr16
and
xor
add
sbb
xchg
fsubr
mov
stos
sub
in
xor
sub
dec
sbb
pop
push
dec
dec
jo
jp
jo
jae
xor
push
cltd
or
lea
and
pop
nopl
adc
ss
mov
jge
push
ss
pusha
insb
test
pop
sbb
inc
jg
adc
or
sbb
sahf
popa
adc
push
jne
inc
scas
test
pop
mov
outsl
or
add
outsl
ret
xlat
push
push
mov
mov
xchg
clc
add
mov
es
mov
fldenv
pop
fisubs
imul
inc
arpl
mov
call
sub
aas
sub
xchg
pop
movsl
lods
add
sub
mov
cmp
lret
sbb
sti
inc
movsl
insb
insb
cmpl
dec
std
and
aaa
push
pop
xchg
mov
fldcw
xchg
mov
into
arpl
jo
jae
movsb
mov
test
push
ss
add
push
or
cmpb
pop
xlat
and
inc
jbe
imul
mov
fnstcw
mov
xchg
sbb
or
fs
or
mov
popa
rcpps
js
mov
push
jb
inc
inc
xchg
ljmp
sub
jmp
imul
les
jne
insb
push
sbb
push
xorl
fdivs
push
cld
sub
mov
add
inc
cmpsb
in
push
mov
jno
jno
add
inc
add
xchg
add
push
cmpsl
out
push
jg
mov
sarl
lock
push
mov
xorl
or
push
and
jb
adc
xor
ficomps
pop
xor
mov
adc
popa
or
xchg
mov
lret
xchg
sbb
pusha
mov
and
icebp
aaa
ret
inc
je
insl
dec
outsb
dec
std
invd
lea
xor
das
xor
inc
sub
fcmovu
out
push
js
add
pop
add
add
sbb
mov
add
sbb
movsb
dec
adc
shll
add
movlhps
xor
rcll
mov
xlat
xor
mov
push
loope
repz
nop
push
in
enter
movsb
outsl
xorl
and
lods
sub
inc
outsl
inc
mov
inc
jo
fs
test
insb
sbb
out
test
sbb
and
popf
mov
daa
es
out
dec
adc
into
loope
inc
cwtl
mov
mov
jmp
inc
insb
scas
cli
test
push
mov
outsb
xorl
sbb
out
xchg
les
inc
loopne
or
sbb
add
subl
xchg
pusha
push
mov
mov
movsb
add
and
lods
andb
je
outsw
cmp
in
sbb
jge
les
mov
shlb
push
xor
lods
or
hlt
and
ret
push
jbe
xchg
sbb
push
push
pop
pop
jle
mov
xlat
inc
inc
xor
mov
cmp
sub
adc
lea
ret
mov
popw
xlat
add
xor
loopne
mov
xor
dec
adc
inc
test
or
and
sbb
je
outsl
and
mov
push
cmpsl
inc
ret
push
mov
in
lods
outsb
jbe
cmpsl
mov
aas
push
adc
sub
and
mov
in
mov
xchg
xchg
pop
xchg
dec
insl
dec
inc
push
mov
sub
fs
rol
pop
shll
cld
xchg
ret
push
addr16
mov
sub
test
pop
test
popa
push
xor
jmp
arpl
mov
inc
cmc
inc
sbb
mov
inc
push
mov
fistpl
xchg
mov
cmp
jns
sbb
and
inc
xchg
push
out
push
mov
cmp
daa
outsb
pop
pusha
push
popa
fistps
fildl
inc
cwtl
sub
pop
add
lods
mov
xchg
jbe
enter
and
add
adc
cmc
push
mov
outsl
cmp
sbb
push
inc
jecxz
xchg
xor
incl
sub
xchg
xor
sbb
rclb
or
cmp
jo
pop
dec
push
sub
outsl
out
inc
test
dec
dec
ja
imul
pop
xor
jo
aaa
sub
loope
mov
sub
sbb
cmp
ss
mov
cmp
leave
pop
push
arpl
out
add
push
ja
insb
add
adc
pop
adc
addl
jge
dec
loopne
mov
add
movb
gs
loopne
push
sub
movl
add
ja
shl
testb
or
add
pushf
push
cld
xlat
add
enter
je
mov
cmp
cwtl
sub
cwtl
push
xlat
pop
and
dec
cmp
ja
jp
fidivl
js
push
push
mov
dec
inc
and
jg
or
test
dec
xchg
incl
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
