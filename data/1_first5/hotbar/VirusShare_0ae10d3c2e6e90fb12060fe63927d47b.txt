divb
in
mov
mov
add
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
out
divl
jne
mov
or
call
xchg
push
pop
aas
in
adc
and
movl
dec
in
mov
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
pop
pop
mov
das
js
and
call
push
push
rcll
mov
mov
jp,pt
add
fistps
pop
push
push
push
push
xor
mov
push
mov
scas
and
movl
add
jmp
test
jne
pushf
or
push
jle
repz
adc
push
xchg
mov
add
iret
xchg
push
sbb
out
mov
jne
inc
sub
ret
mov
jmp
pushl
ja
cmp
jecxz
ret
lea
or
lock
dec
test
jg
add
pop
xor
sub
push
add
outsb
xchg
add
test
out
inc
push
adc
and
and
imulb
push
rol
jo
xor
mov
fistl
dec
mov
mov
mov
call
pushl
mov
cwtl
pop
mov
or
data16
cmpl
mov
movsb
mov
lahf
add
andl
sbb
cld
push
sub
mov
hlt
cs
jo
rcrb
adc
mov
mov
rcrb
add
pop
and
or
mov
or
scas
hlt
or
pop
cmpsl
lret
mov
sbb
sbb
cmpsb
cmp
lea
or
int
push
call
sub
xlat
or
pop
pop
loopne
std
mov
ret
add
in
sbb
into
lahf
mov
adc
adc
inc
push
sub
or
mov
mov
jbe
ret
ja
enter
or
xchg
adc
jl
inc
cmp
cwtl
pop
addb
das
push
in
popa
and
add
inc
dec
push
mov
aaa
sub
jmp
or
sbb
push
and
add
push
dec
dec
cmp
je
out
push
out
jmp
mov
lahf
push
pop
pop
fs
pop
lods
mov
aad
add
mov
push
sub
mov
pop
push
insl
sbb
add
shl
push
push
push
iret
bound
pop
sub
inc
pop
pop
ljmp
ss
xor
push
mov
cmp
or
jge
dec
add
gs
sti
mov
mov
xor
mov
xchg
jmp
arpl
rcrl
js
push
pop
imul
sar
sub
inc
sub
inc
clc
sub
enter
xorl
ss
shll
inc
jmp
fs
pop
xchg
xor
movsl
push
xorl
fdivrs
mov
cmp
jg
mov
into
in
add
inc
ret
in
ja
lds
pop
orl
inc
jo
jmp
cmpsb
sub
mov
inc
call
sub
push
mov
sar
dec
lea
push
cmp
clc
stos
in
cld
ja
adc
cmp
clc
add
push
mov
out
sub
adc
ret
inc
test
push
cmp
lcall
or
clc
icebp
loop
lds
iret
jle
ret
pop
pop
cmc
mov
cmpl
or
push
int3
jmp
sbb
add
sub
stc
or
or
mov
adc
jmp
cltd
sub
shr
enter
mov
mov
lcall
outsb
clc
aaa
je
push
fdivrs
add
push
jne
insb
mov
inc
insb
mov
jmp
mov
push
jbe
mov
fisttpll
fs
rcll
inc
add
lea
push
and
or
adc
lea
orl
push
xor
into
pop
in
icebp
out
mov
aam
cli
cmpsl
lret
out
sbb
cmp
cmpsl
mov
mov
fsubrs
fcomip
imul
jge
mov
cmpsb
or
test
push
fcomps
jle
cmp
mov
inc
sahf
mov
lret
loopne
mov
bound
mov
icebp
add
jo
scas
push
push
push
or
lock
lcall
daa
jns
iret
jmp
push
repnz
inc
addr16
js
xor
or
mov
loopne
es
and
or
cmpsl
hlt
adcb
xor
aaa
and
cmp
or
jg
xchg
pop
cmp
notb
jbe
cmp
push
adc
cmp
jle
mov
rorl
cmpl
xchg
add
cmp
cmp
jae
push
cmp
call
xchg
pop
lret
ja
inc
mov
andl
ret
add
jb
pop
xchg
loop
mov
pop
leave
je
outsl
jg
fcoms
jnp
ljmp
loopne
cmp
outsl
scas
sbb
push
push
push
push
rcrb
or
adc
xchg
call
insb
or
cmpsb
imul
subl
test
and
and
jno
jo
inc
sub
aad
scas
pop
loope
aaa
mov
in
aad
pop
pop
or
cmp
push
mov
lea
mov
jne,pt
push
stos
sbb
lock
push
add
adc
jge
mov
pusha
js
push
mov
mov
or
add
fcompl
out
test
pop
cmpsl
int3
mov
jne
ss
ret
mov
je
add
adc
loope
adc
movsb
dec
call
fidivrs
mov
push
lret
nop
lret
add
sbb
mov
fiadds
pop
fistpl
cwtl
mov
sbb
jmp
push
mov
mov
testb
mov
js
xlat
std
push
pusha
xchg
mov
mov
movsb
lret
rol
dec
test
cwtl
out
pop
out
loop
mov
or
je
push
or
pusha
mov
push
movl
repz
inc
in
bound
sahf
fildll
cmovb
xchg
add
push
push
sbb
xor
pop
dec
mov
mov
add
add
mov
pop
add
sti
adc
js
lea
push
add
shl
mov
popf
push
jns
testl
fadds
xchg
ret
xchg
ret
xor
inc
xchg
jbe
lds
sub
nop
push
jl
jbe
cs
sbb
push
scas
push
aad
flds
push
call
jo
lahf
cmp
push
dec
cmp
je
rcr
dec
xchg
adc
or
jne
imul
arpl
mov
jl
fcoms
mov
call
setae
shlb
leave
jb
cmp
cmp
scas
add
gs
pop
mov
cmc
sti
inc
in
mov
aam
push
inc
imul
dec
or
movsl
mov
mov
mov
or
adc
in
jle
jge
xor
xor
xchg
out
in
sub
jg
inc
fisttpll
jbe
out
or
rsqrtps
leave
xlat
inc
je
jo
add
or
pop
ret
mov
mov
shrl
push
adc
or
mov
sub
or
jle
mov
mov
push
xor
or
xchg
repz
out
mov
sbb
lahf
push
insl
jecxz
xchg
push
cmp
or
ret
jno
or
iret
xlat
faddl
mov
out
push
dec
adc
inc
xor
mov
mov
push
xor
sub
call
stos
pop
or
loopne
xor
mov
lahf
add
out
sub
mov
js
or
ret
je
dec
je
loope
jg
push
adc
or
adc
das
int
xchg
inc
shll
or
adc
sub
data16
rcll
and
mov
clc
push
rcrb
fs
push
sub
fstl
mov
adc
add
fadds
mov
pop
andl
popa
jl
sub
mov
and
sub
shl
xchg
mov
xchg
add
popf
leave
js
or
pop
mov
mov
fs
mov
rcl
add
cli
push
mov
insl
xchg
add
sub
lret
ljmp
jg
lea
movsl
or
dec
in
insl
movsl
repnz
sub
js
and
adc
mov
scas
das
pop
add
outsb
in
dec
fadd
add
enter
pushl
jmp
add
fcomps
sar
inc
pop
xlat
andb
loope
pop
or
cmpb
lea
sbb
mov
sbb
cmpb
adc
inc
adc
mov
pop
jno,pt
das
orl
sub
xchg
adc
pop
js
jecxz
or
call
xchg
lahf
cmp
loopne
rcrb
add
pop
sbb
sub
add
movsl
mov
mov
mov
xchg
ret
pop
adc
adc
inc
ja
mov
push
aas
pop
mov
jnp
stos
jl
js
or
dec
js
mov
push
lock
popa
fstl
push
movsl
cmp
repnz
repnz
movsb
sub
and
push
in
sbb
or
dec
mov
loopne
mov
je
mov
or
addl
sbb
orl
out
lret
mov
pop
pop
pushf
sub
out
andb
ret
fadds
cmp
cwtl
sub
jmp
inc
xor
mov
push
jae
cmpl
sub
pop
in
leave
and
cmp
imull
xor
jno
nop
mov
insl
push
push
or
mov
cs
jl
sbb
sub
lea
call
mov
push
xchg
xor
out
bnd
ss
sbb
sbb
cs
repz
jl
dec
adc
or
cmpxchg
test
sahf
mov
scas
paddd
xor
mov
inc
call
push
xor
xor
cs
pop
std
mov
imul
push
add
in
jno
loope
push
mov
out
xor
rclb
add
push
jae
dec
outsl
mov
adc
mov
push
fcmovu
in
ret
jmp
repnz
je
ss
push
xlat
or
inc
mov
shlb
xchg
xor
xlat
mov
mov
in
cmp
mov
loop
lahf
in
push
in
push
movsb
push
addl
jmp
xor
ret
push
xor
rorl
aas
mov
mov
decl
in
sti
sbb
adc
and
fsubr
out
add
ret
inc
add
fiaddl
pop
movl
sahf
out
cwtl
xchg
push
loopne
aam
lods
shlb
outsb
cltd
xor
xchg
mov
cmpl
mov
or
loop
call
insb
pop
xchg
add
fstl
loopne
mov
push
and
add
add
fldt
pop
sub
testb
xchg
in
repz
js
sbb
pop
data16
push
adc
lcall
xor
movsb
std
sub
pop
dec
and
sbb
movsb
imul
mov
les
push
sbb
pop
neg
xor
mov
les
ret
je
arpl
jmp
pop
xchg
loope
jmp
nop
outsb
ret
mov
xchg
out
mov
lcall
push
cmp
xchg
sub
mov
dec
or
push
nop
sub
xor
maskmovq
divl
repz
lods
or
cltd
lods
add
push
mov
or
daa
mov
loopne
repz
loopne
je
adc
adc
lock
adc
shll
sub
mov
mov
xchg
dec
inc
fidivrl
out
jge
push
mov
shrb
out
aad
cmp
lcall
stos
dec
movsl
rcrb
faddl
enter
adc
shl
cmp
xchg
and
shll
sbb
enter
fcoms
mov
sbb
mov
int3
sbb
ret
xchg
mov
int3
xchg
pop
cltd
xchg
out
enter
enter
add
fadd
sbb
sbb
rol
mov
sbb
xor
nop
mov
jmp
sbb
xchg
sub
sbb
cmp
enter
jmp
cld
sub
lods
into
add
addl
sub
sbb
adc
push
mov
pop
iret
pop
loopne
xor
xorl
es
inc
mov
insb
add
add
add
xor
jae
sbb
xchg
and
mov
xor
sbb
dec
inc
push
inc
adc
add
leave
daa
pop
loope
lock
mov
xor
sub
scas
inc
add
in
sbbb
and
inc
nop
and
cwtl
and
cli
sbb
adc
aas
lock
dec
dec
movsb
and
push
ficoml
push
notl
xor
imul
in
add
xchg
popf
lea
fsubl
xor
nop
test
pop
mov
adc
sti
es
xchg
fcoms
mov
and
dec
jns
rclb
adc
push
add
je
inc
andb
lcall
or
xor
das
cltd
jl
scas
jmp
lcall
jne
mov
in
es
fcmovne
push
pop
repnz
jecxz
push
jmp
enter
dec
ret
sub
or
rorl
std
adc
jecxz
dec
cwtl
pop
mov
test
inc
or
adc
cltd
add
clc
dec
or
or
insl
mov
into
push
sbb
and
dec
ds
lea
aas
int
push
imul
cmp
lret
lret
movsl
cs
adc
mov
mov
xchg
je
cmp
rcrb
lds
mov
adc
lret
jl
movsl
or
rcrl
aad
imul
xor
into
adc
jo
mov
adc
mov
inc
adc
sbb
push
hlt
sub
mov
jne
push
adc
imul
xor
sub
aas
sub
and
fwait
loop
loope
fcomps
mov
neg
pop
dec
jne
cmp
shlb
test
in
jmp
aas
sbb
sbb
push
aad
xchg
xbegin
add
or
je
mov
sahf
add
inc
rol
mov
inc
fbld
loopne
outsb
iret
pushf
pop
nopl
pop
xchg
sub
fs
testl
sub
clc
add
mov
mov
xor
push
push
data16
subb
andb
or
movsb
in
inc
pop
cmp
in
xchg
adc
push
adc
and
xlat
or
add
shr
push
roll
pop
mov
in
and
jl
cmp
cmp
xor
rorb
js
and
fldt
idiv
sbb
aaa
push
push
pop
and
lock
pop
sbb
test
subb
pusha
lock
pop
mov
sub
int3
cmp
cmp
leave
dec
test
adc
jg
push
pop
mov
jne
data16
push
sahf
sub
lock
cmp
and
shl
and
cltd
add
test
inc
mov
and
and
pop
add
sahf
add
jle
pop
push
jbe
push
xorl
xorl
adc
and
add
and
add
mulb
incb
and
jp
mov
sub
jb
and
push
es
or
js
add
fnstcw
cmp
push
add
scas
sub
pop
sub
push
ljmp
sub
push
xchg
adc
jecxz
adc
jno
xor
xchg
ret
inc
lret
ret
test
lret
xchg
push
or
jmp
je
cmp
push
stos
add
adc
and
outsl
mov
clc
push
insb
push
daa
and
mov
ss
pusha
insb
adc
mov
sbb
int
fsubp
xchg
data16
stos
mov
jne
and
adc
mov
or
int
nop
out
cmp
inc
inc
sarb
ror
xchg
sbb
das
sub
cmpsl
add
mov
add
jg
push
jg
add
rclb
call
mov
inc
in
inc
dec
push
push
push
out
push
mov
and
cmp
jo
shlb
decl
fcomps
in
sub
das
outsb
orb
sub
push
xchg
stos
dec
mov
mov
dec
enter
negl
pop
pop
or
push
pop
xchg
xchg
or
test
lods
inc
out
xor
xor
xchg
dec
push
ret
xlat
cmp
call
gs
fimull
push
bound
sub
lods
outsl
loopne
cmp
and
and
xor
stc
pop
inc
jb
and
xor
fmull
adc
sbb
cmp
mov
cmp
add
cmpsb
daa
inc
mov
and
cmp
cmp
cmp
repnz
and
or
xor
sbb
inc
mov
sbb
in
js
rorb
leave
je
js
pop
lds
pop
mov
test
inc
cmpsl
insb
test
std
movsl
popf
in
rclb
js
mov
and
xchg
mov
minps
or
push
pushl
cmp
push
sbb
cwtl
mov
rorb
lahf
faddl
shlb
jae
jnp
xchg
jbe
ret
push
je
jnp
xor
mov
sub
pop
jo
cltd
nop
jbe
xor
frstor
icebp
push
je
push
fists
call
cmp
jne
mov
add
cs
add
pop
call
cmp
jne
push
sub
das
pop
pushf
adc
arpl
ljmp
movd
arpl
movsl
jmp
cmp
jnp
pop
adcb
lds
nop
nop
cmpsl
incl
or
loope
mov
jmp
mov
xchg
lock
shl
subb
push
stos
jp
sbb
addb
add
sarb
adc
add
add
scas
pop
mov
call
loope
repz
nop
mov
icebp
scas
outsb
cmp
add
push
pushf
lods
cs
mov
mov
pop
mov
outsl
test
test
mov
lock
loop
loopne
add
arpl
sbb
adc
das
xchg
setne
or
in
or
mov
mov
pop
negb
adc
pop
out
jne
or
in
out
je
sub
cmpb
add
jg
fadds
xor
xor
or
das
sbb
faddl
adc
cltd
dec
push
add
pop
pop
push
ret
xorb
out
fsubp
test
jne
or
xchg
cmp
xchg
sub
or
pop
pusha
xor
call
scas
pop
loop
rolb
sub
repz
push
inc
packsswb
shlb
or
jge
std
push
fsubrs
shl
out
inc
out
add
inc
adc
inc
sbb
call
loopne
xchg
mov
mov
jecxz
xor
lock
test
gs
push
jns
dec
mov
push
cmp
and
sub
push
data16
sarb
push
or
cmpsb
sub
add
or
aad
pop
pop
call
add
mov
or
rcrb
call
loopne
shrb
in
xchg
sub
test
mov
jnp
and
lock
out
mov
ss
jmp
jge
imul
push
jmp
pop
jae
mov
ret
push
xchg
add
dec
add
adc
add
and
and
and
fsub
pop
push
adc
or
aam
xor
lcall
stos
mov
jno
je
lock
testl
hlt
xor
inc
mov
xor
lock
jle
push
sub
dec
cmp
ja
daa
push
aaa
add
ret
jle
rcl
popf
mov
loope
loop
mov
push
push
add
lods
xchg
ds
pop
mov
ds
jns
in
paddusb
cmp
pop
mov
sbbb
shl
fiaddl
jl
push
xchg
pop
das
orb
add
cmp
pop
adc
pop
xchg
pop
mov
jo
stos
add
inc
or
fcmovnbe
das
mov
fmul
jne
sbb
sti
xor
pop
lea
loopne,pt
call
sbb
loope
jo
lahf
cmpl
lahf
inc
inc
add
cmp
and
into
in
pop
add
mov
sbb
dec
call
cld
xor
cs
xchg
es
rclb
lods
push
imul
or
ss
add
cmp
mov
add
xchg
jmp
inc
add
add
or
outsl
jns
flds
sub
stos
and
mov
scas
ret
roll
nop
or
or
adc
and
jb
and
or
sub
rolb
mov
jg
in
loopne
pop
cld
loopne
sbbb
pop
fidivs
add
fcomps
add
loopne
inc
ja
dec
rcrb
or
cwtl
push
dec
xorl
inc
fimull
stos
sbbb
push
sub
jp
pop
ret
jns
push
mov
ret
sub
daa
in
sub
mov
dec
rcll
xchg
xor
movsl
push
imul
in
sbb
mull
xchg
add
jecxz
mov
sbb
nop
adc
sbb
pop
sahf
pop
cmp
jne
mov
rorb
mov
mov
push
sbb
push
call
or
jb
rcll
add
insl
xor
fs
inc
shr
stc
add
popl
adc
pop
call
push
inc
inc
popf
or
jge
out
mov
inc
mov
orb
sbbb
aas
xchg
sbb
jo
adc
cmp
lds
or
or
mov
push
adc
cmovns
loopne
test
jl
xor
push
and
jbe
xchg
fwait
jns
ficoms
jg
mov
adc
cs
xor
mov
ficomps
mov
mov
daa
inc
mov
ror
dec
insb
and
rclb
sbb
fnstcw
int
fcoms
fsubl
pop
ret
in
mov
add
or
push
xor
cmpb
les
ret
rcll
aaa
movsl
sti
ja
ret
shr
movzbl
push
adc
push
ret
push
push
loopne
mov
inc
xor
movsb
mov
pop
add
lods
mov
pop
xchg
xchg
lods
mov
pop
sbb
popf
cmp
xchg
ss
sub
das
mov
shll
xor
cmp
push
jo
gs
lods
daa
sahf
push
xor
xor
mov
or
add
mov
inc
addr16
inc
jmp
insb
lahf
mov
jle
cld
aaa
mov
cmpsb
incl
jg
mov
jmp
mov
mov
xchg
test
pop
sbb
inc
add
inc
dec
repnz
mov
mov
dec
enter
fcmovu
mov
xchg
pop
sbb
insb
lret
pop
ret
mov
pop
rcrb
adc
mov
subl
sbb
sub
xor
pop
jno
ret
push
pop
jmp
mov
push
cmp
adc
int
and
cmp
je
add
or
add
sub
jne
xor
enter
mov
push
sbb
lock
add
sbb
inc
hlt
les
cmp
jae
loopne
or
xor
ja
xor
fldcw
xchg
mov
call
push
mov
xorb
push
insb
mov
adc
add
jnp
pop
hlt
add
jo
in
cmp
cltd
lea
sarl
push
push
jnp
pop
aad
js
mov
cmp
imul
shll
into
add
popa
nop
add
mov
sub
hlt
mov
adc
cli
lea
ljmp
lock
daa
push
test
adc
jbe
cmp
stos
clc
or
mov
fcmove
add
mov
lea
adc
mov
mov
dec
lahf
inc
sub
call
adcb
out
mov
mov
jmp
cli
jae
or
je
test
js
lock
imul
sbb
or
push
je
sub
pop
movb
gs
inc
inc
sbb
jo
sti
xchg
add
inc
lea
lock
push
push
adc
xchg
mov
push
push
add
rclb
push
cmp
movb
add
inc
add
idiv
cmp
jl
adc
mov
push
xor
sbb
lea
lret
je
xor
and
and
outsb
in
sbb
xor
shlb
aaa
leave
mov
fnsave
or
xchg
dec
cwtl
sub
or
xlat
push
jge
or
adc
mov
adc
push
mov
or
dec
cmp
push
push
aaa
mov
ret
je
mov
or
mov
fcmovb
mov
lock
cmp
push
mov
sbb
into
cmp
mov
stc
or
mov
clc
pop
cpuid
or
or
hlt
add
add
pop
enter
loopne
mov
imull
ss
jae
dec
fs
cmp
cmp
aaa
mov
insb
add
inc
outsb
mov
push
adc
jge
add
cmp
fistpl
pop
es
lret
jae
and
add
idivb
sbb
adc
sub
sbb
pop
lcall
pop
mov
fs
jne
cmp
je
xchg
cli
adc
inc
cmp
or
jbe
shlb
mov
popa
or
movb
or
int3
dec
jo
pop
repnz
out
aas
dec
fwait
push
shlb
mov
shll
and
loope
adc
dec
mov
push
sbb
bound
test
mov
mov
push
push
adc
pop
js,pt
push
movl
into
hlt
sbbb
fmuls
dec
xor
or
jmp
add
ds
inc
adc
mov
lcall
jp
js
push
jmp
loop
cmp
or
inc
in
jmp
or
or
popa
xchg
sbb
lock
data16
loopne
and
mov
mov
adc
mov
ja
das
xlat
js
decl
scas
cmpsb
or
xor
dec
push
rolb
adc
add
in
push
pop
pushf
into
xor
dec
nop
mov
stc
add
es
add
push
ja
xor
inc
dec
or
lahf
dec
and
pop
sub
roll
dec
jecxz,pt
push
shlb
xor
jg
mov
sub
hlt
sti
outsl
inc
sar
or
mov
mov
enter
loope
or
add
insb
cld
cmp
lea
jbe
lods
test
dec
or
push
push
test
push
or
test
inc
xor
xchg
movl
scas
add
add
xor
or
ret
xchg
popf
iret
jp
jecxz
dec
add
mov
dec
arpl
jb
outsl
arpl
repz
cmp
es
inc
fcomps
pop
add
mov
or
and
cld
jle
push
sbb
scas
cmpsl
pop
dec
or
push
ds
enter
mov
rcll
push
mov
cmpsb
sbb
push
loopne
inc
daa
insb
and
add
or
lods
inc
and
call
xchg
mov
xchg
lods
test
jecxz
cmp
sub
ljmp
push
inc
test
push
ds
sub
fcmovne
test
aas
sbb
inc
sub
add
jb
or
push
add
push
xor
inc
in
jb
cmp
inc
sub
vpsrlq
stc
or
dec
xchg
call
jbe
mov
adcl
cmpsl
test
mov
xchg
add
call
sbb
fnstcw
dec
and
add
inc
enter
xlat
or
and
je
or
jge
nop
xchg
add
clc
addl
push
jg
jo
inc
inc
mov
xchg
push
sbb
mov
lods
popa
mov
cmp
mov
and
jb
inc
clc
mov
ljmp
in
add
outsl
and
das
mov
pusha
les
cmp
movsl
imul
mov
dec
or
repz
les
arpl
mov
cs
adc
add
and
and
inc
lcall
mov
jg
subl
push
adc
xchg
inc
sbb
or
aaa
mov
xabort
test
cmp
icebp
repnz
and
lods
cmpsb
push
stos
lock
xor
into
pop
inc
sbb
in
inc
cmp
inc
add
and
clc
cmp
test
dec
mov
adc
sbb
test
mov
push
lea
jg
sti
push
mov
add
or
and
loope
inc
xor
push
pop
sub
js
fldl
pop
pop
sub
xchg
int3
jg
and
insb
outsb
jns
add
xorl
js
lret
mov
out
mov
mov
mov
xchg
or
push
inc
sub
repnz
movl
sbb
cwtl
sbb
sbb
mov
push
lods
add
lea
push
pop
pop
pop
shll
and
xor
push
sub
add
pop
jmp
xchg
xor
cmp
adc
je
jl
and
stc
adc
cmp
popf
cmpl
in
or
lock
in
sarl
sti
push
cltd
pop
negl
mov
add
cmp
je
pop
add
cwtl
jmp
fmull
sbb
ds
mov
pop
dec
adc
jge
adc
cmp
cmp
push
jbe
jg
fists
cmp
cmp
sbb
outsb
ja
dec
jmp
sub
dec
je
adc
outsl
mull
sub
push
push
das
dec
das
movsb
mov
dec
pop
shl
idivl
jmp
mov
mov
adc
in
std
loopne
pop
leave
jmp
jl
jecxz
jne
pushl
insl
add
popa
adcb
jg
call
lahf
test
push
or
lea
fwait
outsb
or
mov
mov
fildl
sub
and
add
into
out
fildll
pop
push
mov
mov
data16
idivl
dec
jg
add
pushl
cld
ret
loopne
push
or
xor
push
push
xchg
out
outsl
or
pop
pushl
js
mov
lea
mov
int
int3
sub
mov
clc
mov
xchg
lock
cmp
je
cmp
xor
sub
stc
leave
aas
jg
imul
andl
out
sti
jbe
cmp
jmp
sbb
dec
xchg
jmp
and
loop
cmp
xchg
sbb
mov
xchg
push
pop
iret
out
sahf
decb
inc
cmp
repz
jp
pop
sub
lea
lock
push
mov
pop
and
pushw
and
sub
imul
fstl
lea
mov
add
sub
inc
fsubs
or
dec
movb
add
ja
push
or
xchg
xchg
pop
jge
loop
lret
daa
jg
pop
jg
mov
mov
repnz
push
pop
push
lea
jg
pop
push
push
push
push
add
push
lea
cli
mov
dec
cmp
and
cmp
inc
stc
and
lahf
leave
into
sbb
lds
inc
dec
pop
test
cmpsb
add
pop
pusha
push
hlt
mov
sbb
sbb
adc
sbb
insb
sbb
and
js
je
xchg
xchg
sbb
push
ret
ljmp
jg
mov
push
inc
xor
add
daa
push
pop
pop
sub
stc
add
loop
fstps
shll
aaa
mov
dec
adc
mov
in
sub
les
xlat
jnp
sbb
jno
jle
notl
push
and
pop
or
xchg
mov
inc
push
add
push
sub
or
movsl
add
aas
imul
jne
push
add
shll
or
pop
inc
rorl
mov
xchg
lcall
sbb
cmp
shrb
es
cs
xchg
in
addr16
emms
je
mov
xor
arpl
popa
subb
arpl
sbb
add
mov
sbb
push
add
pop
sub
add
push
cmp
in
sarb
mov
pushf
jl
sbb
pop
fmull
add
popa
test
sbb
sub
mov
inc
fldenv
xor
cmp
mov
icebp
push
xchg
xor
popa
rclb
lds
sub
pop
mov
aam
inc
sub
fsubrl
in
lahf
push
or
add
int3
push
jae
adc
add
aam
mov
adc
dec
fildl
mov
jle
add
xchg
jo
inc
add
ret
ret
sahf
inc
and
fdivrl
std
ret
outsb
dec
aam
jns
lods
test
adc
mov
xor
mov
cmp
jne
push
sub
xor
sbb
js
jg
mov
shlb
shr
iret
je
lea
push
outsl
inc
inc
imul
add
mov
jo
lock
push
sbb
cmp
push
nop
push
pushl
call
push
or
adc
adc
or
lcall
shrb
les
inc
push
mov
lock
div
dec
jl
push
dec
je
dec
push
push
jo
adc
jge
fisubrs
inc
dec
add
pop
jmp
or
in
dec
jmp
sub
daa
push
sub
in
mov
pushf
in
jmp
mov
add
mov
inc
adc
lcall
pop
mov
cwtl
pop
xor
lods
dec
loope
lds
push
mov
cmp
cmp
aaa
push
or
cli
sub
aaa
mov
xchg
add
jecxz
fistps
push
neg
sbb
fwait
add
arpl
lods
enter
adc
cmp
dec
scas
into
lock
rcll
addl
and
dec
jbe
xor
loop
adcb
push
roll
xchg
push
es
in
xor
adc
fimull
leave
and
push
in
mov
cmp
or
adc
pushf
mov
test
test
jmp
push
push
pusha
enter
cmpsb
mov
mov
loope
mov
adc
mov
adc
punpckhdq
jnp
mov
jmp
fs
or
pop
push
jmp
jg
test
test
xchg
jo
mov
lods
mov
and
mov
cmp
andb
divps
mov
mov
mov
mov
jge
add
pushl
push
push
dec
jnp
dec
sbb
push
cs
mov
adc
xorl
les
mov
scas
dec
push
mov
xchg
add
fmuls
dec
sub
add
adc
push
clc
ret
addr16
inc
adc
cmp
cmp
mov
outsl
loope
cmp
repz
sbb
add
mov
addb
or
or
test
xchg
xor
sub
xor
clc
xor
sbb
push
jne
movb
sbb
ja
jmp
cmp
jne
popf
movsl
dec
and
clc
fldz
xor
push
jl
enter
adcb
daa
addr16
dec
aas
mov
xor
xchg
xchg
out
xchg
scas
lea
mov
sub
test
push
test
sub
jg
mov
jo
test
lods
imul
push
dec
or
jne
and
sbb
sub
dec
push
leave
push
inc
aad
add
push
nop
xor
fistpl
cmp
iret
push
adc
enter
sahf
and
ja
add
pusha
push
xchg
imull
cltd
mov
or
or
outsl
imul
shlb
pop
xor
xor
cmp
mov
sbb
add
push
push
lea
rolb
adc
test
insb
sub
clc
mov
dec
jae
add
sbb
sbb
dec
inc
cmp
dec
jl
cmp
dec
rcll
test
mov
inc
rorb
mov
jecxz
mov
jecxz
fmull
test
or
sbb
rcrl
imul
adc
fsubrl
xchg
test
push
push
mov
dec
out
dec
push
xchg
push
add
mov
push
push
aaa
movsl
adc
outsb
mov
push
stos
sbb
out
mov
cli
loop
xor
es
ja
add
adc
mov
xor
add
sbb
int
out
negl
popa
in
adc
cmp
ja
lea
pop
pop
or
sbb
out
fadd
adc
mov
xchg
xor
adc
fmuls
rorl
repz
or
or
test
inc
xchg
mov
fs
test
xchg
xlat
push
adc
lea
jo
push
jle
add
fdivs
cmp
cmp
mov
cli
pop
push
sbb
jmp
inc
shlb
cs
sub
push
push
mov
mov
adc
sbb
and
cmc
mov
insb
repz
mov
adc
push
xchg
rolb
xor
test
mov
and
or
push
push
fnstenv
adc
adc
pop
push
xchg
xchg
stc
pop
popa
push
sbb
sub
sub
fbld
cmp
sbb
add
out
push
mov
outsl
jecxz
xorb
ss
xchg
jg
push
dec
mov
fidivrl
shr
incl
xor
pop
jl
mov
cltd
mov
lea
addr16
clc
fnstcw
orl
popf
sbb
out
pop
cmp
mov
fcomip
cmp
jge
adc
idiv
push
mov
push
push
mov
outsb
lea
dec
ret
xor
idiv
sub
in
cli
mov
or
test
jg
adc
lock
sbbb
ret
push
ljmp
sarb
test
in
dec
test
xor
mov
jge
add
movsl
inc
push
push
lock
inc
cld
in
or
out
push
fstpl
push
pop
jg
clc
mov
sub
clc
je
xchg
and
push
sbb
mov
mov
xor
pop
outsb
das
adc
sti
ds
ja
mov
sbb
dec
fs
lock
mov
sbb
mov
cmp
mov
lahf
xor
cli
mov
sbb
cmp
dec
lea
xor
mov
lahf
ds
xchg
sub
cmp
or
sbb
jge
jmp
mov
ljmp
hlt
mov
test
jns
faddl
or
adc
test
enter
fdivrp
mov
sub
ja
movsl
mov
int3
mov
mov
xchg
jmp
movsb
cmp
dec
add
add
push
in
and
jge
je
into
clc
fidivl
jmp
rolb
push
xchg
cli
cmc
cmp
stos
push
pop
mov
pop
sbb
fstp
jne
pop
pop
movb
push
bound
mov
insb
sub
push
fiaddl
mov
and
aam
fiaddl
lea
mov
adcb
je
addr16
sub
sbb
in
int
xchg
je
or
jb
and
adc
jmp
sbb
test
push
movsl
stos
dec
out
push
pop
pop
and
and
out
setl
push
sub
sub
data16
imul
in
add
mov
mov
repnz
xor
fs
sbb
sbb
loope
pop
iret
pusha
sbb
jns
sbb
mov
mov
test
jne
sti
mov
sub
xchg
adc
push
psubq
push
leave
pusha
pop
leave
pop
xor
pusha
xor
add
int
push
dec
jne
mov
lea
push
mov
push
jmp
sub
xchg
or
inc
in
lea
adc
shlb
jne
shll
out
mov
lea
push
push
adc
inc
roll
addr16
and
inc
adc
sub
dec
stos
shl
pop
cmpsb
jle
add
add
js
imul
mov
or
sbb
cmp
cltd
in
push
sbb
cmc
in
mov
sub
push
adc
fs
cmpl
out
pop
and
or
popf
dec
sbb
loopne
mov
imul
dec
and
inc
xchg
mov
inc
push
lock
sub
fbstp
mov
pop
mov
orb
and
stc
mov
mov
sbb
cmp
data16
pop
icebp
pop
incb
inc
inc
push
add
push
test
clc
push
sub
clc
setb
test
mov
cmp
dec
xor
dec
adc
orb
push
lea
push
lods
aaa
cmpb
cld
add
mov
je
push
fstps
shlb
out
sbb
adc
call
xor
push
jo
dec
xchg
inc
dec
or
mov
mov
hlt
or
mov
inc
push
fs
lret
out
or
add
shrl
in
mov
inc
sub
das
push
scas
pop
js
scas
push
pop
xchg
icebp
data16
leave
and
adc
push
jo
das
imul
repz
lods
orb
or
les
sub
pusha
sbb
push
fidivrl
mov
push
add
add
xlat
add
aaa
pop
in
adc
test
jmp
test
gs
sub
jl
pop
sti
lods
jl
add
inc
and
xor
js
and
pop
lds
or
push
xor
js
pop
jle
leave
cld
icebp
inc
push
pusha
or
int3
das
inc
xor
and
adc
adc
xchg
dec
dec
adc
andl
add
jmp
test
int
cld
pop
js
ds
add
inc
fdivl
pop
adc
jmp
push
jb
test
mov
call
pop
les
stos
xlat
dec
add
mov
sub
cmp
sbbl
push
push
jns,pn
in
enter
cmp
fmuls
sbb
adcb
adc
rclb
jns
pop
add
out
add
nop
fdivr
xor
int3
add
and
pop
bound
les
ror
arpl
fidivs
sbb
pop
dec
mov
les
push
push
test
mov
add
mov
jle
dec
jns
pop
in
sub
fidivrs
sbb
and
lahf
dec
pop
xlat
push
pop
pop
je
cld
pop
test
jne
daa
pusha
das
lcall
cs
in
cs
pop
xchg
push
or
ret
insl
test
and
or
mov
movsb
jnp
push
push
jnp
scas
in
test
jnp
adc
adc
sarb
pop
push
sbb
adc
ffree
sub
stos
mov
sbb
pop
mov
add
fdivrl
dec
mov
xchg
jmp
and
in
aad
test
and
stc
jo
mov
adc
sbb
clc
push
xchg
mov
pop
pushl
push
lret
mov
shl
jmp
or
fbstp
arpl
dec
cmp
mov
sbb
enter
fs
je
call
sbb
mov
push
dec
mov
jmp
dec
mov
sub
and
mov
lcall
dec
add
xchg
inc
pusha
inc
xor
movsl
imul
shlb
mov
or
fmulp
js
out
std
cmp
jge
mov
mov
mov
cmp
sbbb
push
add
or
push
pusha
jle
call
call
and
push
js
fsubr
sbb
repz
pushf
pop
sbb
push
fucomp
inc
std
out
jnp
xchg
sbb
enter
sbb
push
lea
inc
out
shlb
enter
jbe
mov
cmp
in
mov
add
sub
incl
inc
sete
adc
loope
loopne
lea
sbb
adcl
mov
nop
arpl
add
or
das
or
mov
cwtl
insl
dec
out
mov
add
sbb
and
inc
sub
ljmp
dec
shll
ret
jmp
or
fcompl
add
mov
ds
gs
pop
push
loopne
clc
es
js
and
lock
lock
pop
lock
imul
sti
push
dec
lock
pusha
pusha
pop
mov
sub
adc
insb
mov
push
mov
pop
lods
sbb
test
or
test
pop
insb
or
push
jge
jnp
insb
ss
sub
push
iret
or
aad
xchg
mov
shlb
mov
daa
push
xchg
pop
push
fwait
jle
sarb
mov
mov
cmpb
test
dec
inc
outsl
mov
jne
out
push
imul
nop
pop
adc
imul
pusha
fcoml
dec
adc
ret
and
cmp
daa
fsubl
in
call
rcrl
in
and
popa
ffreep
fdivs
xor
mov
inc
pop
pop
arpl
pop
or
mov
movsb
inc
sub
add
lock
sahf
add
lcall
popf
add
xchg
jle
adc
add
adc
bound
mov
adc
xchg
or
cmpl
imul
cmc
xchg
in
mov
or
ss
sub
add
add
cmp
pop
rclb
lcall
nop
dec
clc
clc
sub
das
xchg
push
daa
inc
xchg
lret
xchg
mov
movsl
test
add
hlt
add
sbb
lock
dec
clc
call
xor
lea
fimuls
add
lret
das
mov
pop
clc
lock
test
mov
movsl
jg
jge
cmp
jmp
das
hlt
mov
fistl
call
sub
add
into
push
push
outsb
loopne
out
add
push
outsl
or
sbb
or
mov
jp
andb
movb
notb
pop
or
lods
xor
insl
inc
jle
loopne
inc
in
jb
sbb
mov
pop
clc
jg
mov
pop
push
ds
cwtl
add
jb
fucomp
inc
push
leave
outsl
mov
popa
dec
dec
pop
sbb
ss
fsubrs
clc
pop
sbb
nop
aaa
rorb
adc
mov
jno
add
sub
sbb
pop
movsl
sbbl
incb
push
dec
push
adc
push
xor
xor
pop
sbb
test
jg
jbe
gs
push
movzwl
push
test
push
push
sub
push
jmp
insb
push
cmp
je
inc
icebp
pop
hlt
lea
push
mov
ror
push
rcll
cmp
jbe
pop
push
mov
add
in
jo
mov
pop
mov
xorl
mov
int
xchg
add
pop
out
bndstx
push
ffreep
jmp
add
push
add
repnz
movsb
adcl
pop
mov
or
lret
mov
inc
cmp
adc
shlb
push
add
aad
mov
inc
inc
push
imull
cld
xchg
add
sahf
mov
pusha
xor
push
sub
xchg
jle
mov
call
xor
push
leave
ret
xchg
push
pop
push
test
cmpb
aaa
sbb
sub
fimull
add
add
jl
mov
xchg
loop
or
pop
push
test
mov
sub
addr16
movl
lock
lret
stc
xchg
dec
cmpsl
inc
jle
sub
jmp
imul
xor
push
mov
hlt
push
xchg
arpl
xor
sub
inc
push
cmp
lret
xchg
mov
enter
inc
andl
mov
rorb
dec
inc
add
jb
push
hlt
jle
aas
mov
jp
pop
or
pop
xchg
xchg
or
adc
xchg
cmpsb
sub
inc
add
add
pop
add
lds
int3
jmp
mov
or
or
scas
jbe
pop
or
push
xchg
mov
add
add
mov
push
pop
test
aam
fnstcw
mov
ljmp
pop
add
shl
sub
aam
cmovb
sub
xor
push
inc
sbb
xchg
mov
pop
sbb
and
pushf
xorb
mov
aas
xor
js
in
or
dec
lret
xchg
mov
sub
ljmp
insb
rorb
adc
fs
mov
fnstcw
push
jnp
mov
adc
mov
rorb
mov
or
cmp
and
push
mov
mov
push
adc
mov
mov
and
and
imul
or
jle
sbb
lods
sub
movl
mov
lea
xor
pop
dec
jge
inc
adc
push
in
jle
jp
lea
xor
addl
mov
push
push
fadds
jecxz
jb
in
lea
loopne
movsb
adc
xchg
filds
orl
fstps
pop
les
rclb
rorb
inc
mov
adc
sbb
sub
add
push
sub
arpl
cwtl
push
popf
mov
pop
jg
rorl
movb
or
movsl
test
add
cmpl
scas
mov
xchg
or
pop
mov
dec
ljmp
lret
sub
jno
out
js
iret
nop
lea
xor
xchg
data16
and
or
mov
test
mov
jle
jne
xchg
aam
das
aaa
cmp
ja
mov
or
or
mov
aaa
orb
push
or
pushf
add
push
pop
or
adc
xchg
dec
nop
mov
icebp
inc
rol
test
push
das
movsb
xor
pusha
enter
lea
popa
or
add
or
dec
es
push
popa
add
orb
mov
cmpsl
pop
mov
dec
mov
addr16
lock
mov
int
mov
js
testl
push
or
adc
push
nop
aam
fwait
pusha
mov
xor
ss
cmp
mov
dec
xchg
mov
js
or
jnp
movsb
fwait
roll
adc
mov
pop
sbb
rcl
dec
movsl
in
lods
call
nop
jne
repz
and
push
ja
into
lods
cmpsb
cmp
add
sti
sti
mov
mov
call
push
daa
mov
fsub
push
in
mov
jl
push
pop
xor
pushl
fs
test
and
sub
cwtl
call
iret
insl
inc
popa
repz
addr16
inc
xchg
sbbb
sub
adc
stos
xor
sti
in
adc
movsb
ret
int
sbb
add
adc
inc
inc
push
cld
cs
xchg
or
and
adc
sbb
jl
xchg
inc
or
es
pop
pop
push
cmp
pop
xor
in
sub
add
addb
sbb
js
fwait
and
xor
leave
xor
mov
pop
adc
push
int3
dec
mov
mov
push
xor
push
data16
sbb
mov
inc
and
jle
xor
add
cli
jle
add
adc
js
sahf
sbb
movzwl
push
mov
pop
pop
mov
jns
or
fwait
imul
adc
inc
cmp
cwtl
jne
push
xor
test
push
mov
mov
mov
rorl
or
lock
insl
mov
mul
fdivrs
mov
stos
addr16
mov
cwtl
add
test
cld
imul
arpl
pop
data16
pop
pop
lcall
jae
and
add
mov
ret
scas
ret
subb
mov
pushf
mov
cmp
in
add
repnz
push
adcb
rolb
dec
in
adc
xchg
jbe
and
fdivr
ret
jne
cmp
push
xlat
and
push
mov
sbb
mov
mov
push
jg
clc
inc
adc
sub
add
in
mov
es
in
fisttpll
lahf
roll
lahf
aam
aaa
mov
lahf
mov
mov
imul
cmc
mov
inc
mov
addr16
inc
inc
fsubrl
fdivr
lods
and
insl
sub
xchg
bound
add
and
add
add
shrl
loop
ficomps
fs
dec
out
sbb
or
stos
xchg
pop
nop
jp
in
jnp
dec
jbe
mov
add
xchg
or
lods
dec
clc
jecxz
inc
inc
add
inc
out
cmp
ss
and
sbb
aam
add
xchg
mov
jne
jo
imul
fcoms
pop
xchg
loop
inc
loope
jbe
in
xchg
idivl
mov
and
rcrb
aas
lea
fcom
dec
repz
jnp
out
ror
out
lret
test
fistl
mov
or
fs
jp
enter
and
adc
andl
sbb
int
or
jns
inc
lret
add
xchg
cmc
movq
mov
jl
and
push
fucomip
outsb
and
dec
aaa
cwtl
popa
pop
fidivs
ror
sbb
mov
movsl
std
jno
and
sahf
aaa
mov
pop
xorl
sldt
xchg
pushf
loopne
dec
cmp
jo
repz
add
jns
or
mov
dec
sahf
outsl
ret
outsl
jmp
or
adc
sbb
jns
mov
out
jae
loope
in
push
xor
sahf
push
add
outsl
gs
jne
or
shlb
mov
adc
mov
push
repnz
ficoml
sub
push
test
xor
and
inc
jecxz
fs
fcomp
roll
push
cmp
push
push
add
cmp
mov
mov
daa
fadds
push
or
inc
xchg
add
xchg
and
jbe
popf
sub
add
hlt
add
pop
or
and
je
pop
or
lds
or
and
icebp
sbb
pop
and
dec
dec
popa
div
cmpsl
or
int
out
icebp
pusha
dec
loopne
pusha
insl
je
int3
and
or
pop
pop
dec
ret
cmpsl
pop
push
inc
dec
push
mov
pop
sbb
xchg
adc
jmp
test
sbb
or
pop
push
xor
lods
fistpl
aad
lcall
or
sbb
ret
xor
jmp
or
rol
mov
xor
jno
cld
jg
cmc
cmpl
push
push
pop
cmp
je
push
mov
mov
movsb
jno
add
ljmp
push
and
popf
orl
xchg
xor
and
and
pop
repnz
pop
pop
addb
test
nop
or
clc
adc
and
fisttpll
stc
and
and
das
cmp
mov
pop
or
mov
setb
cmp
scas
ja
sub
nop
iret
add
adc
sub
or
and
lods
mov
sbb
shlb
jge
sub
testl
insl
sub
push
mov
push
cs
aam
lods
daa
das
call
test
xor
lcall
sbb
fs
dec
cmp
sbb
pop
pusha
jns
rcll
into
int3
xor
aaa
push
rorb
sahf
mov
sbb
push
scas
xchg
mov
cmc
push
xor
sub
jns
jns
pop
insl
fdivr
rcrb
mov
lds
jae
fsubrl
enter
jl
popf
call
shr
cmp
lods
testb
call
mov
lock
aad
cli
pop
xor
es
adc
loope
xor
xor
mov
xchg
adc
ja
mov
sub
pop
scas
inc
loopne
and
dec
syscall
and
add
sbb
mov
and
sub
xor
mov
out
adc
adc
pop
push
pop
aas
mov
and
loopne
fcompl
cmp
cs
rorb
inc
in
push
mov
add
xchg
out
mov
inc
or
lock
push
scas
sub
adc
lock
or
push
movsb
dec
pop
push
or
jae
inc
or
sarl
ja
popa
ss
dec
pop
or
mov
pop
outsl
add
ret
ljmp
push
mov
xor
cli
jbe
in
inc
lock
jnp
out
push
or
and
ja
xchg
in
fisttpl
jge
cmp
pusha
push
scas
int3
pop
sub
xor
lret
xchg
jl
mov
push
push
jae
pop
mov
mov
pop
adc
and
in
pop
push
push
data16
add
mov
das
add
repnz
xor
hlt
mov
mov
enter
add
je
daa
or
test
xor
pusha
cmpb
push
mov
mov
and
dec
cmp
push
scas
lods
das
cmp
imul
sub
call
mov
sub
mov
mov
push
and
adc
js
ds
xorb
cmp
mov
mov
incb
js
dec
hlt
sub
push
movsl
sarb
jo
add
inc
mov
pop
jb
push
shll
sbbl
cli
push
ss
mov
sbb
or
popa
sub
push
push
imul
clc
hlt
sub
fnstenv
add
and
or
adc
add
notb
push
inc
xchg
into
push
xchg
cmp
lock
jp
adc
sti
loope
clc
out
or
lcall
bound
mov
test
xchg
ret
xchg
repnz
or
mov
fidivs
in
and
cmp
jg
mov
or
dec
in
sbbb
add
adcb
inc
inc
ret
push
push
jae
imul
xchg
add
insl
movsl
enter
movsb
nop
pop
iret
sbb
ja
mov
rcrb
test
inc
outsl
mov
xchg
in
push
add
mov
mov
jecxz
push
push
pop
jp
xorb
ret
daa
sarb
dec
push
nop
insl
add
lock
ret
mov
push
shlb
and
sbb
add
mov
cmpb
addr16
push
cmpsl
cmp
jmp
jnp
ja
push
cmp
and
arpl
push
add
clc
je
cmp
clc
inc
call
pop
push
loopne
stc
sub
lea
push
lea
push
inc
push
inc
out
adc
imul
cmp
cwtl
lcall
sbb
push
cmpsb
addr16
daa
dec
lret
cmp
jl
mov
mov
int3
xor
sarl
pop
sub
push
add
mov
cmp
jne
pushf
negl
push
aad
mov
push
mov
fcomps
out
or
cmp
je
sub
jo
xor
mov
fucom
jbe
out
fbstp
movl
jo
fstps
sti
imul
ret
repnz
sub
in
pop
popa
fidivl
or
repnz
leave
loope
lock
in
sub
lea
out
push
dec
or
loopne
mov
jmp
dec
inc
mov
orb
sub
push
fwait
test
fsubrs
mov
or
inc
adc
add
call
adc
or
adc
or
xchg
imul
adc
call
outsb
jmp
lock
inc
add
xchg
inc
add
les
pop
bound
icebp
mov
or
add
cmp
subb
in
or
ret
or
adc
shll
cltd
lock
jo
popa
add
mov
sarb
cmp
je
sbb
jbe
push
mov
mov
cmp
je
sti
mov
xchg
jnp
mov
dec
mov
push
movb
mov
inc
or
pop
pushl
sub
lea
xor
and
out
pop
xor
inc
push
pop
xchg
add
and
outsl
cmp
decl
call
cmpl
out
dec
or
push
or
pusha
shl
in
sbbl
mov
dec
jb
xchg
add
sbb
push
or
xchg
aaa
mov
shrl
add
cwtl
mov
jns
cmp
sbb
popa
adc
in
or
insl
mov
mov
stc
jae
sub
cmp
popa
cld
dec
clc
push
ret
or
fs
das
leave
push
cmp
je
xor
sbb
mul
seto
fwait
test
nop
neg
or
push
add
divl
jmp
cmpsl
rol
cmpsb
loop
loopne
jle
xor
addb
jbe
sbb
iret
shl
cmp
inc
or
outsb
push
sub
push
add
jns
fcomps
clc
push
sbb
pop
sarb
or
je
pop
mov
mov
cmp
mov
mov
je
ror
or
ret
push
test
adc
sub
inc
or
mov
mov
jae
xorl
test
adc
andl
sarl
les
sub
add
fdivrp
xchg
push
add
xchg
mov
les
mov
aam
xorl
lret
inc
add
fsubrp
or
rorb
add
cmpsb
fwait
mov
shr
push
xor
adc
add
and
inc
inc
scas
aam
callw
mov
loope
mov
mov
pop
push
scas
adc
push
je
adc
or
bound
aam
lock
pop
cs
lock
jbe
add
ds
sub
push
mov
inc
shlb
mul
icebp
sub
sub
adc
or
cli
aam
out
addr16
dec
lods
sub
faddp
jmp
jl
jne
lock
ret
out
push
test
je
cli
jmp
ds
sbb
ss
or
negb
inc
cmp
jae
pop
mov
subl
inc
xor
ljmp
sbb
or
outsl
pop
cmp
jne
and
adc
out
adc
lcall
cmpsb
adc
push
push
fucomi
sub
call
subb
inc
cltd
arpl
cmp
int3
and
xchg
mov
in
lcall
std
mov
or
pop
push
xor
lcall
lret
je
add
push
rcrb
mov
mov
jecxz
or
mov
imul
pop
or
adc
jmp
mov
gs
or
lds
adc
and
decl
add
sub
aad
pop
leave
lcall
mov
loopne
add
inc
arpl
lea
push
mov
movsb
inc
roll
mov
jecxz
repz
jmp
or
lea
pop
xchg
push
and
adc
mov
outsb
jl
fwait
js
adc
push
jge
stc
lock
xlat
push
sub
cmp
test
popa
daa
jbe
or
pop
in
xor
push
mov
fisubs
jecxz
shr
adc
or
imul
ret
push
mov
sub
add
and
aaa
andl
jmp
daa
add
in
mov
xor
icebp
bound
js
add
mov
imul
cmp
ret
out
push
cmp
icebp
mov
loopne
pop
out
jne
mov
add
and
inc
jmp
jmp
mov
int
mov
pop
push
fwait
stc
or
or
lcall
sbb
dec
add
add
xorl
xchg
nop
mov
xchg
add
addl
adc
lods
jno
iret
lods
pop
loop
xchg
pushf
or
call
mov
adc
or
mov
or
xor
jle
jno
cs
fdivs
sbbl
pop
add
and
or
or
cmp
fdivrl
dec
lock
sub
push
or
fwait
jp
sub
xor
inc
add
push
lods
xchg
jae
push
or
sub
xchg
pop
inc
adc
mul
sub
js
mov
cmp
dec
xchg
pusha
mov
dec
jmp
insb
xor
bound
sbb
mov
js
arpl
negb
mov
push
xor
in
or
out
lds
stos
cld
adc
push
add
mov
inc
pop
jg
pop
in
daa
and
decl
imul
or
xchg
pop
sub
enter
push
je
jo
imul
in
dec
lahf
jb
mov
sub
sub
nop
jmp
lea
push
mov
or
outsb
loopne
loopne
mov
push
or
leave
test
dec
pop
jecxz
lea
push
adc
cmp
js
test
sub
push
push
push
cmpsb
push
stos
je
orl
cmpsl
fbld
hlt
dec
rcll
or
cmp
in
mov
cmpsl
inc
jle
mov
sbb
jns
dec
cmp
mov
cmp
pop
sub
inc
in
popl
clc
adc
dec
test
mov
dec
mov
rcl
add
cmp
xor
sbbb
cmpsb
scas
jno
out
sbb
nop
xor
insb
lods
mov
sub
fimull
xor
iret
or
cld
lea
cwtl
popf
mov
imul
sub
sbb
dec
js
mov
xor
push
and
es
sub
adc
inc
mov
add
cmp
adc
dec
push
fcom
dec
sub
inc
push
push
mov
rcll
jne
lds
mov
push
roll
imul
push
cmp
mov
xchg
or
inc
xlat
ljmp
mov
loopne
xchg
loope
xchg
or
lods
cmc
dec
jno
fidivl
repz
adc
push
imul
pop
insb
xor
mov
and
aad
mov
sub
push
and
push
mov
shrl
mov
push
daa
leave
lea
push
or
test
adc
enter
lret
pop
pop
fldl
loop
add
loopne
inc
pop
or
sub
sub
add
cmp
sbb
movsl
add
sbb
pop
sbb
hlt
dec
rcll
jae
mov
addr16
xorl
mov
inc
mov
sbb
mov
jmp
sarl
cmp
jge
add
out
or
pop
dec
push
and
mov
cltd
push
mov
stos
mov
hlt
lea
test
cmpsb
sbb
cltd
inc
nop
or
push
nop
loopne
iret
inc
mov
adcb
loop
mov
rolb
enter
dec
and
inc
or
push
or
fnsave
sub
pop
and
mov
inc
and
add
lea
push
rol
push
push
push
stos
scas
mov
aas
mov
xchg
jmp
pop
sbb
and
loopne
sbb
push
es
cmp
sub
pushf
mov
sbb
jb
or
inc
add
jo
ljmp
ret
sti
faddp
shl
xor
mov
dec
sub
push
ret
fldt
loope
or
inc
inc
pop
jbe
inc
xchg
cmpsb
sub
outsb
mov
add
and
sub
and
adc
lret
enter
sub
sarb
daa
std
xor
sbb
and
jo
cmc
and
adc
add
ret
dec
adc
repnz
or
test
push
and
cld
mov
cld
jmp
mov
mov
cld
or
and
mov
jb
pushl
mov
push
adc
xor
push
mov
cmp
and
dec
fsubrs
sahf
addl
mov
xor
inc
dec
or
out
adc
sub
inc
adc
sarl
fld
xchg
nop
add
push
cmc
imul
mov
lahf
adc
ja
lods
arpl
adcl
mov
in
push
lods
inc
sub
call
sbb
mov
js
push
sub
add
mov
ficomps
fcoml
sub
clc
js
loop
ja
sub
fdiv
repnz
adc
movaps
lea
ss
pop
mov
pop
mov
jne
adc
jg
rol
push
shrl
out
fadd
push
imul
push
jnp
or
sarl
xchg
add
or
or
push
and
movsl
sbb
add
or
cwtl
movsl
scas
lds
lea
add
jmp
xor
jl
dec
sub
lea
aad
or
jmp
cmp
jnp
pusha
jo
inc
insb
pop
outsl
jg
movsb
movl
add
movb
mov
add
inc
jbe
adc
mov
inc
push
mov
mov
lret
fsubs
mov
aad
add
jo
std
add
int
in
dec
sbb
mov
cwtl
cmp
cmpsb
in
sub
push
loopne
or
mov
roll
arpl
xchg
inc
or
push
test
adc
lock
jmp
mov
mov
pop
hlt
lock
insb
popf
xor
add
xchg
xchg
pop
int3
mov
rclb
jae
inc
sbb
jae
and
ss
push
das
out
mov
jae
jge
lea
mov
sbb
pusha
cmp
inc
mov
dec
dec
fstpl
rcrb
test
inc
mov
sub
or
ds
mov
popa
jne
xor
cltd
and
sbb
mov
loope
and
int3
add
xchg
inc
das
pop
mov
or
out
data16
cld
inc
pushf
sub
outsl
or
pushf
fidivl
sbb
mov
or
gs
orl
xchg
or
adc
je
xchg
movsl
in
add
dec
das
sbb
add
jo
imul
cli
adc
ffree
add
fs
iret
push
fadds
mov
popa
xchg
pusha
dec
and
repz
xchg
adc
lods
fcmovnb
push
dec
mov
lea
add
xor
and
mov
or
adc
inc
add
rep
and
enter
mov
xchg
inc
bound
mov
leave
shlb
and
and
lods
pop
xchg
enter
pop
pop
cs
rcrl
xchg
and
dec
ficoml
test
neg
xchg
clc
mov
pop
adc
int
cmp
xor
cmpb
jb
push
add
je
ret
lret
cs
jnp
orl
push
push
sbb
insb
or
je
lea
pop
push
pop
add
ss
pop
cmp
or
lods
pop
clc
mov
jne
cmp
add
cmpl
cmp
mov
rclb
or
out
xor
int3
ror
pop
dec
jo
aas
test
xchg
jne
ret
pop
cmp
lea
xchg
sub
add
dec
sub
mov
andl
mov
adc
inc
lds
inc
and
adc
mov
add
pop
cmp
sbb
movsb
ret
aas
fsubrs
push
inc
cmp
aad
sbb
cmp
jae
jo
and
leave
push
jno
fsubr
aam
add
push
fsubr
shlb
mov
sub
pop
mov
adc
pop
inc
repnz
cmc
sub
fs
lahf
push
jle
adc
add
test
jmp
fadd
xor
adc
aas
and
adc
cmp
dec
cli
fwait
testb
push
mov
insb
push
push
push
jo
nop
mov
cmp
cmp
inc
adc
shll
loopne
xor
ljmp
ja
enter
and
xor
jp
mov
cmp
aas
and
push
pushl
push
sub
pop
sbb
sub
adc
roll
and
add
mov
or
inc
mov
and
sub
lods
out
or
xchg
mov
je
add
cld
ljmp
ds
sbb
dec
adc
add
enter
and
pop
lahf
sub
dec
pop
mov
fnsave
dec
je
enter
ss
sub
jo
scas
mov
sub
xor
fcoml
cmp
dec
cmp
mov
xchg
mov
out
mov
add
pop
mov
jmp
mov
inc
cmp
cmp
sbb
inc
popf
fdiv
sbb
xchg
pop
rcrb
fcompl
out
push
jp
dec
push
cmp
and
push
callw
mov
jmp
inc
aam
cmp
sub
js
ljmp
hlt
mov
or
cltd
in
rclb
ret
dec
add
inc
add
push
jnp
jmp
out
push
lret
adc
test
or
xlat
pop
and
call
push
int
mov
clc
scas
pop
xchg
xlat
dec
in
jno
lea
lea
mov
and
adc
mov
bound
pushf
imul
mov
jl
lock
jbe
adc
pop
enter
int3
push
inc
out
ds
mov
test
ficoms
andl
xor
mov
xchg
sbb
loopne
sahf
cmp
leave
mov
les
nop
lock
inc
mov
sbb
lods
subb
xchg
dec
jo
scas
mov
shlb
faddl
vandnps
test
paddusw
mov
aad
mov
push
add
test
or
call
and
daa
int3
inc
insl
addr16
push
mov
je
stc
popa
or
jae
xchg
xor
fcomps
mov
fdivrl
pop
nop
xor
cmp
popa
push
ud0
mov
loopne
js
loope
call
lds
iret
adc
jmp
sub
pop
rolb
or
imul
mov
dec
cmp
dec
xlat
scas
sub
popf
icebp
lock
jb
adc
ja
sub
or
sahf
lods
dec
mov
add
pop
ljmpw
adc
lret
add
jne
add
aaa
sarb
mov
in
cmp
popa
add
subl
push
lock
and
add
push
xor
push
loopne
cmp
je
andl
movsb
sbb
aad
std
sahf
test
mov
or
inc
adc
les
add
mov
inc
test
fistps
je
dec
jne
pusha
mov
xor
clc
adc
xchg
shr
and
jmp
nop
pop
push
pop
pop
jp
mov
mov
aam
aam
mov
int3
pop
add
sub
je
aaa
mov
mov
js
mov
sbb
mov
xchg
test
iret
andl
icebp
ret
sbb
push
inc
lcall
jbe
xor
lds
lea
cmp
jb
adc
or
xlat
test
loope
or
outsb
push
rolb
and
jge
dec
sub
daa
xchg
fcom
fsubrs
sbb
rolb
push
pop
and
test
add
insl
enter
lret
jge
fldl
sub
sbb
mov
adc
insl
bound
adc
aas
inc
push
sbb
xchg
jle
add
jb
xor
and
cmp
testb
and
push
int
movsb
xor
cmp
icebp
or
out
je
xchg
rorb
mov
shlb
push
sub
mov
dec
rorb
insl
push
xor
sub
sarl
adc
lock
insb
or
call
loop
aas
jns
inc
lea
push
jnp
scas
add
cmp
pop
cmpsl
or
xchg
call
cmp
mov
push
dec
sbb
loopne
movsb
push
cmp
aaa
push
and
cld
aad
std
sub
shr
and
push
je
aaa
fiadds
cs
test
inc
loope
and
dec
ljmp
adc
mov
in
sbb
jecxz
xchg
pop
sbb
dec
iret
jmp
inc
testl
add
add
or
xor
mov
rcrl
fcoml
adc
mov
xorb
xor
and
lea
iret
dec
pop
mov
test
xchg
push
lock
sub
inc
shlb
lods
outsl
bound
push
push
adc
mov
rclb
fdecstp
and
or
nop
sbb
or
cmp
push
and
cli
sub
sub
dec
daa
mov
sub
les
scas
fsubl
xchg
faddl
sub
inc
adc
inc
addb
or
cmpsb
mov
add
inc
adc
push
and
sub
push
push
andl
sbbb
adc
inc
dec
push
pop
mov
mov
mov
pop
ja
dec
mov
ljmp
popa
loope
add
mov
and
aam
outsl
into
jg
ja
jge
outsb
divb
or
jno
inc
cmp
jl
notb
movl
or
dec
lods
inc
nop
out
inc
ret
jno
jno
and
mov
icebp
xorl
lahf
lods
pushf
mov
aam
mov
jnp
dec
jo
enter
insb
mov
mov
dec
adc
adc
push
add
mov
dec
in
scas
fnstcw
xchg
jl
mov
loope
test
or
ss
add
sbb
mov
adcb
or
ja
daa
fistpll
popf
inc
repz
add
aad
xchg
mov
sbb
in
push
jg
fisttps
inc
cmp
push
in
call
add
mov
or
es
dec
int
cmp
movsl
dec
dec
inc
movsl
jo
lcall
sub
lods
or
arpl
xor
fdivrl
sbb
call
cli
pop
or
leave
xorb
or
mov
cmc
xchg
test
add
xchg
jbe
shlb
pusha
sub
cmpl
add
inc
fidivrs
xchg
es
jo
lret
mov
aas
rclb
aad
adc
repz
push
mov
push
add
das
lods
push
jae
push
and
orl
cmp
sbb
add
pusha
cmpsl
test
jl
insl
xor
pop
sub
das
inc
leave
int3
adc
fistpl
in
push
mov
ret
loopne
test
cmpsb
mov
pushf
lret
lods
call
cmp
sbb
leave
je
adc
xor
jo
test
test
sbb
icebp
sahf
lods
mov
dec
je
mov
inc
into
push
sbb
add
inc
outsb
stos
add
jns
mov
test
cmp
lcall
aam
movsl
sub
cli
dec
inc
or
cwtl
sbb
sbb
push
js
adc
test
xchg
mov
sbb
mov
add
sub
out
and
cli
sbb
sbb
adc
pop
adc
sub
sbb
xor
xor
lods
sub
inc
dec
or
outsl
ja
add
pushf
xlat
sub
mov
or
mov
push
dec
cmp
cmp
bound
sbb
mov
test
fbld
lahf
adc
dec
mov
pop
std
in
add
push
popa
push
mov
addb
add
xchg
mov
push
popf
or
aas
dec
cwtl
call
ds
push
jg
lret
mov
or
inc
outsb
leave
xor
rorb
nop
inc
fstl
orl
cltd
filds
dec
pop
and
push
ret
cmp
pop
mov
imul
mov
nop
inc
sub
add
mov
scas
pop
jge
jl
push
out
cmp
shld
fisttpll
cmp
movsb
lea
cmp
pop
cmp
aaa
xchg
cmp
stc
subb
add
dec
and
sbb
sbb
cmp
xchg
ss
and
pop
in
test
int
fcomip
inc
sub
add
add
mov
in
adc
fsts
jecxz
jne
add
inc
fidivrs
dec
out
pop
loopne
pop
sbb
dec
mov
add
xor
sbb
add
addl
pusha
cmp
adc
adc
add
add
jo
xchg
sub
pop
or
xchg
push
dec
add
lret
mov
and
or
mov
nop
popf
mov
xchg
inc
sahf
inc
or
xchg
dec
pop
add
sti
movsb
jb
and
xchg
std
aas
movl
jns
inc
pop
mov
xorb
xchg
inc
push
lcall
es
dec
shrl
xchg
or
or
jb
gs
push
imul
movsb
arpl
pop
push
sub
or
insl
aad
and
push
mov
test
add
sub
in
jns
add
add
mov
mov
or
cmp
scas
sti
and
daa
jge
jmp
aaa
sub
or
mov
add
imul
push
cmp
cmovns
and
sub
jge
mov
cmp
and
mov
jmp
mov
nop
out
and
adc
dec
rorl
in
mov
loopne
rorb
je
mov
and
lea
xor
xor
xor
and
sarl
popf
pop
enter
popf
adc
add
push
sbb
xchg
daa
pushf
inc
aaa
ss
ret
ljmp
and
cmp
xchg
dec
data16
mov
mov
adc
jno
sbb
pop
jno
stos
adc
inc
push
test
es
cmp
cwtl
xlat
dec
xchg
setle
and
or
pop
loope
cmpsb
mov
movsb
outsl
movsl
and
add
mov
icebp
orb
push
ret
or
inc
inc
inc
divl
sti
xor
adc
adc
xchg
outsl
mov
rorb
sub
or
sub
mov
adc
xchg
testb
leave
dec
repz
sbb
sub
mov
nopl
lea
imul
xor
push
iret
jmp
cmp
mov
or
pop
pop
inc
push
and
or
sub
cltd
xor
imul
mov
sbb
or
mov
or
rorb
or
add
sub
fwait
adc
adc
sbb
cmp
push
mov
inc
frstor
sahf
mov
shll
cmp
cmp
ljmp
flds
jl
daa
xchg
popa
xor
ficoms
lea
xchg
shl
or
xchg
adc
scas
lock
fildl
divb
pop
or
sbb
test
iret
push
add
jnp
sub
mov
adc
pop
mov
xor
mov
dec
push
dec
push
movsb
in
or
and
stos
jp
adc
inc
je
and
cmpl
aad
push
inc
cmp
mov
dec
push
push
cmp
dec
or
push
adc
sbb
movsb
movsl
sbbb
and
fnsave
je
jae
divl
cltd
cwtl
sbb
add
mov
pop
sbb
add
push
lods
dec
cmp
push
sub
adc
xlat
sub
mov
jne
sbb
xor
stos
adc
pusha
push
negl
mov
cmp
jge
lea
and
jae
mov
cs
push
cmpsb
imul
inc
adc
mov
jae
mov
inc
push
hlt
dec
das
mov
icebp
jno
and
xchg
lret
mov
ret
outsb
popf
xchg
loopne
sub
lea
test
or
mov
and
sbb
push
fidivl
push
push
or
xchg
loopne
test
repz
das
lds
cmpsl
jle
enter
dec
mov
int3
xor
mov
out
lea
dec
mov
mov
pop
dec
dec
in
adc
int
call
sbb
and
sub
hlt
pop
orb
and
xor
nop
or
cld
and
enter
repnz
iret
das
or
nop
dec
and
adc
ss
push
jne
inc
dec
mov
movsb
and
and
scas
inc
sub
sub
popf
push
xchg
daa
or
dec
sub
stos
mov
sub
push
pop
push
pop
cmpsb
popa
and
and
sub
pop
leave
sub
adc
lds
nop
and
jo
das
sbb
insb
cmpsb
sbb
push
mov
mov
imul
sbb
dec
pop
dec
inc
dec
pop
fdivs
rcrb
leave
and
lods
jae
mov
and
mov
and
jmp
pop
loopne
and
outsl
jle
int
mov
adc
mov
mov
push
push
or
or
inc
lcall
inc
lcall
fadds
adc
xor
insl
add
xor
rorb
add
sbb
xor
dec
loopne
add
inc
testl
or
sub
lods
or
sbb
fwait
sbb
loope
scas
in
or
adcl
jecxz
movsl
pop
push
and
inc
add
mov
iret
adc
je
or
scas
and
call
lcall
lods
daa
lock
xor
sub
sbb
mov
jl
loopne
stos
andl
xchg
sub
sahf
aaa
or
mov
and
push
sbb
mov
stos
mov
sbb
into
fdivl
pop
push
inc
dec
sub
push
cmpsl
imul
adc
cmpsb
adc
xorl
mov
push
out
insl
rcrb
lock
test
add
mov
int3
loopne
imul
sub
xchg
lock
imul
mov
clc
popf
fsubrl
pop
push
xor
jo
push
movaps
dec
daa
sub
les
data16
decl
or
adc
aam
clc
arpl
pop
fwait
les
leave
test
push
push
clc
dec
cwtl
xor
fstps
sub
js
es
lock
push
push
in
mov
faddl
cmpl
jbe
push
inc
fbld
add
lods
xlat
adc
hlt
pushf
pop
rolb
sbb
inc
movsb
ret
jno
jmp
push
add
int3
push
sbb
dec
cmp
push
arpl
mov
sbbb
loop
mov
mov
inc
or
mov
imul
push
int3
stc
xor
xor
enter
in
jae
inc
dec
lods
jp
insb
lods
xlat
les
cmp
jmp
mov
xlat
aad
test
adcl
xchg
or
sub
je
jmp
mov
enter
push
les
fcomp
add
mov
ja
stos
shr
push
pushl
fistpl
or
ffreep
cmp
inc
aas
jecxz
dec
nop
push
pushl
and
lahf
pop
outsl
mov
inc
pop
fdivs
push
subb
inc
adc
pop
mov
sbb
jno
mov
maxps
push
fadds
repnz
mov
xchg
sub
and
xor
jne
pop
adc
adc
punpckhdq
loopne
shlb
leave
mov
jge
mov
mov
negl
clc
imul
shrl
mov
add
aaa
je
push
fs
push
inc
sbb
es
and
faddl
call
pop
movl
mov
xor
sbb
mov
cmp
adc
mov
lods
jge
hlt
ror
xchg
add
adc
pop
in
mov
lods
adc
adc
inc
add
dec
daa
xchg
int3
adc
or
push
mov
cmp
lods
sbb
pop
inc
mov
nop
dec
xor
jl
fistpll
jae
jle
xor
int3
sbb
adc
scas
mov
lea
lods
sbb
mov
mov
push
repnz
js
add
xchg
imul
fbstp
push
scas
in
fsubs
adc
insb
pop
cmpsb
push
adc
inc
in
jl
xor
dec
or
cmpl
out
jo
push
inc
dec
push
inc
jmp
mov
imul
dec
insb
notb
add
xor
adc
sbb
mov
inc
jle
fistl
orl
movl
pop
cmp
test
fs
sbb
jno
es
mov
inc
add
inc
jb
push
add
and
stos
mov
lock
std
sbbb
mov
nop
out
dec
sbb
mov
mov
xor
sbb
shll
dec
sbb
femms
popf
and
nop
test
sbb
or
push
add
inc
les
sbb
ja
pop
push
mov
lods
fwait
push
sub
inc
add
push
in
testl
pop
mov
test
inc
popa
pop
or
fiaddl
fisttps
in
inc
and
or
cmp
jle
cld
jae
inc
add
outsb
mov
or
mov
fcomps
xor
loopne
and
sbb
mov
pop
pop
mov
cmpb
jo
aaa
xchg
mov
out
xor
mov
inc
lret
les
mov
jl
add
adc
lock
cmp
int
cmpsl
and
addb
cmc
icebp
dec
sbb
daa
stc
add
repnz
add
add
inc
push
push
dec
sub
mov
in
add
daa
fistpl
mov
stos
xor
push
lods
cmp
mov
stos
lret
lar
cltd
cmp
dec
or
mov
outsl
cmp
arpl
js
adc
inc
out
or
hlt
movsl
push
lods
test
add
aam
movsb
or
idivl
pop
mov
add
mov
dec
cmp
mov
or
add
pusha
pop
or
sbb
shll
test
and
sti
in
push
add
inc
loopne
lea
xor
or
push
pop
xor
add
push
add
sub
jge
andl
push
add
mov
xchg
dec
iret
inc
mov
into
mov
loopne
dec
pop
add
pop
dec
call
inc
rolb
into
inc
pusha
and
idiv
rorb
loopne
inc
dec
lock
inc
dec
adc
mov
inc
mov
jbe
scas
cmp
imul
push
jp
push
out
inc
cs
xor
inc
fmuls
add
sub
mov
xor
ja
addb
mov
stos
inc
inc
mov
fs
pop
xor
adc
add
pusha
rcll
inc
lea
mov
pop
or
adc
popa
push
xchg
popf
adc
adc
push
imul
imull
or
push
push
push
inc
loopne
ss
lret
adc
inc
lods
sbb
adcb
dec
cmp
and
int3
xor
lds
in
and
jmp
scas
cld
test
mov
pusha
dec
dec
pop
dec
mov
dec
sub
pop
xor
push
leave
sbbb
lea
movsl
jle
int
push
push
xor
mov
es
pop
adc
out
push
daa
mov
sbb
mov
ret
je
jo
pop
clc
sahf
incl
das
inc
rol
pop
lds
xor
push
fdivr
mov
cmp
adc
mov
cmp
mov
adc
ret
add
mov
or
or
pop
mov
add
pop
aam
repnz
sub
fcoms
and
sub
add
sub
dec
adc
jmp
jecxz
jbe
lods
ret
jne
inc
cmp
rclb
pop
add
or
faddl
cmp
xchg
pop
pop
call
add
es
or
or
cmp
and
add
pop
pop
mov
nop
fisttpll
mov
out
aas
add
push
mov
js
cmc
cmp
push
aam
les
add
movsl
push
sub
out
sbb
imul
div
adc
jne
sub
lea
add
xchg
sub
stos
or
ljmp
push
add
push
cli
cmp
adc
mov
lcall
ret
or
sbb
xor
pop
adcl
cld
push
sahf
test
pusha
adc
clc
mov
sbb
dec
insl
xchg
inc
push
ss
and
incb
repz
ds
rclb
pop
xor
mov
add
mov
jp
adc
inc
pop
sbb
js
and
xor
insb
gs
mov
pop
cmp
sub
pop
jo
sbbl
adc
or
orb
xchg
shrl
test
mov
inc
inc
push
mov
add
cmp
out
mov
popa
add
inc
icebp
push
add
xorl
dec
add
pop
add
pop
inc
not
inc
fdivs
stc
enter
fdivl
fwait
sub
push
xchg
pop
jecxz
orl
cmp
js
repnz
xor
cmp
or
push
movl
arpl
fiadds
add
mov
stos
subl
loop
arpl
xchg
pmuludq
cmp
in
dec
xlat
loopne
mov
add
and
pop
adc
fmul
aas
sbb
or
push
mov
add
push
or
icebp
in
hlt
pop
and
lds
jns
push
mov
pop
call
mov
aaa
adc
test
push
add
call
mov
cmp
ret
out
push
push
sbb
mov
rclb
addr16
repnz
xchg
sbb
adc
stos
pop
test
jle
sub
outsb
adc
jbe
in
add
dec
add
xchg
dec
add
inc
xchg
inc
add
push
sbbl
xchg
cs
mov
xor
repnz
mov
movsl
in
sbb
fistps
addl
pop
pusha
xchg
aam
stos
leave
mov
xchg
or
repz
xchg
aad
adc
notl
dec
add
jae
dec
rorl
mov
jno
mov
mov
inc
xlat
inc
xor
inc
test
clc
mov
mov
inc
add
mov
enter
imul
bound
ret
cld
pop
loope
jbe
add
mov
loopne
js
js
or
in
or
mov
pop
arpl
lret
jp
movb
mov
add
loope
mov
in
add
inc
push
and
xor
or
shrd
push
fsincos
add
cs
mov
jge
add
mov
pop
pop
push
jno
mov
cmp
adc
test
lret
mov
int3
xchg
enter
pop
inc
cmp
jmp
xor
insb
out
xchg
and
xor
push
stos
sub
add
mov
mov
sub
lret
push
imul
call
adc
adcl
xchg
ret
sbb
add
adc
pop
adc
adc
rol
popa
test
and
dec
pop
inc
fisubl
sbb
mov
stos
push
xor
add
out
cmp
in
xor
pop
xor
sub
sub
push
adc
sub
pop
decl
lods
dec
mov
arpl
jne
inc
mov
js
movsbl
movzwl
or
jne
and
or
push
outsb
outsb
adc
fwait
dec
inc
push
push
sti
adc
mov
mov
cmp
mov
hlt
push
inc
push
jle
mov
mov
pop
dec
cmp
adc
jle
js
je
lret
mov
adc
sbb
arpl
ret
xor
sub
lods
sub
xor
or
cli
push
jg
test
lea
add
add
push
jecxz
add
inc
dec
sub
fwait
push
imul
insl
ret
mov
push
xor
push
adc
scas
iret
adc
push
shlb
cmp
mov
sbb
push
xor
pop
bound
jecxz
gs
fwait
and
mov
xchg
cmp
jnp
dec
sbb
andl
lock
xchg
popa
lcall
xor
and
inc
mov
push
and
push
imul
fidivs
sarb
in
call
cmpl
or
push
pop
mov
in
cmc
mov
ret
mov
push
jne
cmp
hlt
and
inc
jmp
fcomps
and
and
call
dec
cmp
mov
sbb
and
ret
push
dec
or
add
popa
xlat
push
and
mov
cmp
hlt
push
fimuls
inc
inc
push
jmp
sub
xlat
mov
sbb
xchg
das
push
fisubs
and
mov
scas
mov
clc
dec
mov
notl
add
repz
and
mov
xor
jo
mov
push
lea
inc
sbb
push
or
or
jb
and
sub
leave
daa
or
sbbl
dec
xor
sbb
add
xor
lret
or
xor
push
sub
cld
cmp
xchg
imul
les
push
loope
pop
lods
dec
fldenv
shrb
in
loope
jnp
arpl
aad
and
fmuls
mov
push
in
lret
xchg
push
or
mov
lea
mov
mov
add
lods
adc
movl
ret
xchg
mov
mov
gs
sbb
mov
aad
inc
pop
popa
nop
pop
ficoml
lods
mov
mov
lea
test
clc
inc
enter
mov
adc
testb
inc
cmp
adc
dec
sarb
and
leave
clc
insb
add
aas
pop
test
je
inc
xor
jne
or
mov
hlt
es
movl
das
mov
inc
dec
inc
pop
inc
dec
add
lods
mov
ljmp
cmc
sbb
xchg
mov
jb
int
adc
push
sahf
jae
push
sbb
adc
jbe
shlb
in
into
into
dec
xor
sbb
dec
xor
loopne
in
in
adc
outsb
dec
loope
bound
movsl
add
roll
add
shrl
or
mov
addb
mov
aas
unpcklps
and
scas
dec
mov
hlt
mov
sub
sub
repnz
clc
sub
aam
add
push
add
push
push
push
push
popa
in
popa
repnz
mov
gs
xchg
adc
icebp
xlat
or
add
xchg
mov
mov
cmp
inc
lret
aas
and
push
cmp
jne
add
adc
test
mov
andb
add
xchg
test
xor
add
and
daa
xor
shlb
loope
push
push
dec
inc
xor
xchg
repnz
push
nop
test
nop
pushf
mov
push
adc
adc
sti
dec
fldt
cs
jge
sub
scas
test
pop
xor
sub
ds
sahf
inc
pop
adc
cmpb
mov
imul
das
pushf
lahf
pushf
jmp
push
inc
cwtl
lcall
orl
hlt
adc
lds
sub
lea
in
lret
pop
pop
dec
popa
lods
fnstsw
mov
pop
cmp
cmp
jle
cmp
jnp
imul
out
add
xor
loope
jp
xchg
xchg
jbe
loop
popa
bound
xchg
cmpb
xchg
je
cld
inc
aam
cmpl
and
xchg
mov
add
pop
sbb
adc
ret
ss
lahf
movsl
mov
cmp
pushf
mov
les
ret
add
nop
rcr
ret
push
addr16
mov
mov
bound
in
cltd
js
pop
add
add
cli
imul
enter
add
dec
scas
jo
add
push
sub
xchg
enterw
adc
sub
cmp
inc
jne
adc
rorb
push
popa
pushf
sbb
push
pop
movsb
adc
mov
fldt
add
adc
pop
mov
in
shll
frstor
std
sub
cmp
fwait
cmp
adc
push
outsb
inc
jne
bound
loop
clc
jo
or
jnp
add
fmul
rorb
dec
aam
mov
jecxz
push
jno
add
loopne
xor
out
test
or
xchg
daa
into
add
nop
mov
jne
push
push
fmul
outsl
mov
push
out
jg
sbb
add
push
push
les
mov
jo
xor
sbb
add
scas
pop
xchg
insb
fmull
je
negb
mov
and
fcomps
xchg
xchg
in
das
cmp
packsswb
rclb
xchg
inc
and
clc
xchg
fidivrs
xchg
in
push
jg
scas
cld
mov
adc
mov
or
es
push
rcl
and
dec
movsb
je
das
movsb
adc
in
push
int3
push
mov
push
or
adc
ss
hlt
jae
xchg
add
pop
in
rcl
loop
shr
in
dec
pop
pop
jmp
cmp
rorb
jmp
xchg
and
rcrl
or
pop
int3
je
and
or
push
fcoml
in
adc
pop
mov
std
adc
push
notb
pop
jmp
popf
je
xchg
arpl
int
xor
push
inc
mov
adc
test
xchg
and
xchg
dec
stos
and
xchg
fstpl
sahf
push
stos
add
jbe
rclb
push
xor
pop
cmp
add
or
jge
mov
jge
jecxz
bound
xchg
xchg
adc
pushf
inc
mov
test
add
jge
or
pusha
or
and
xchg
ret
mov
rcll
lods
sbb
push
add
lret
and
sbb
lods
and
icebp
ljmp
les
add
pop
in
mov
mov
rcll
into
sbb
ret
add
push
rcr
call
cmp
and
fchs
jmp
mov
xchg
push
loopne
push
lock
xor
push
inc
loopne
movsb
adc
scas
int
pushf
bound
imul
insb
lea
lret
into
imul
and
push
cmpsl
xor
mov
out
mov
inc
imul
mov
adc
mov
jle
add
cmpw
sbb
cmpb
sub
xchg
push
push
add
jg
das
or
pop
push
pop
mov
add
sar
push
cli
adc
je
out
mov
mov
jns
mov
push
jns
adc
xchg
add
js
cmp
inc
stos
or
add
sbb
iret
inc
shlb
cs
pusha
jne
sbb
cld
dec
dec
push
sub
jl
sub
and
shr
aad
scas
lcall
dec
cmovae
pushl
pop
add
pop
or
sbb
pop
add
add
pop
xchg
adc
cmp
add
pop
pop
add
cmp
gs
cmpxchg
mov
fwait
or
aad
stos
leave
push
jge
fs
push
jns
loopne
push
icebp
aad
cmp
shlb
mov
adc
or
aas
inc
ss
adc
dec
cmp
hlt
jne
jb
fs
push
cmovg
add
enter
pop
push
pop
push
dec
xor
aad
mov
jo
cmp
lock
jle
jo
daa
mov
lret
adc
out
lock
xor
adc
adc
jns
orb
pushf
push
jno
shlb
loope
jge
push
and
add
sbb
bound
inc
sub
sub
stos
push
jo
sub
movsl
push
mov
imul
dec
scas
enter
xorl
jns
and
or
add
fsubrl
add
call
inc
or
pop
or
sub
mov
test
jb
xor
adc
jns
and
arpl
mov
test
mov
iret
mov
cmp
sbb
or
jmp
cmp
adc
arpl
sar
orb
loope
sub
inc
pop
push
mov
and
dec
scas
or
arpl
shll
lods
pusha
or
sbb
sbb
enter
fwait
mov
mov
rclb
nop
lret
cmp
sub
sbb
pusha
loope
lods
add
cld
in
inc
pusha
inc
jl
sar
dec
inc
adc
cld
pop
ret
push
pop
dec
daa
mov
cmpl
rcrb
es
je
or
mov
jmp
and
lds
adc
pop
stos
cmp
mov
mov
and
lock
dec
mov
jl
add
push
imul
ja
sub
hlt
dec
inc
lea
inc
add
mov
lods
mov
pushf
and
jne
imul
push
sub
mov
scas
add
ret
in
push
and
mov
mov
inc
adc
or
test
cmp
jnp
out
call
and
add
dec
idiv
incl
pusha
loopne
in
in
mov
icebp
jmp
sbb
push
or
fstp
mov
shrb
rolb
xchg
add
out
dec
or
sbb
dec
or
roll
psubw
pop
lods
gs
push
loop
push
incl
incl
sarl
jge
sub
jge
dec
addl
mov
push
cmp
nop
fcoml
in
push
or
mov
in
cmp
repz
mov
jnp
and
mov
mov
mov
sahf
jno
jae
sub
cmp
stos
outsb
sub
mov
rclb
aaa
jg
pop
adc
mov
jmp
adc
in
sub
pop
push
adc
mull
or
xor
push
mov
push
test
fucomip
inc
les
test
pop
in
push
adc
push
or
add
adc
push
pusha
andl
rorl
xchg
inc
add
js
inc
fstpl
bnd
sbb
cmp
daa
dec
sbb
mov
or
mov
repnz
mov
dec
lahf
stos
pop
aaa
adc
jno
lods
inc
mov
push
sbb
and
add
inc
push
mov
dec
clc
data16
pop
push
dec
sub
or
jae
frstor
or
popa
adc
outsb
xor
iret
dec
inc
inc
jmp
mov
sbb
pop
sub
and
mov
or
addr16
sahf
dec
inc
inc
dec
jnp
pop
in
jne
mov
dec
aaa
repz
add
push
call
sbb
and
or
sub
xchg
sbb
loop
imul
inc
inc
inc
xchg
push
ret
icebp
mov
mov
and
rcrl
xor
mov
inc
fimuls
popa
pop
call
pop
pop
sub
lods
pop
movsb
xor
adc
fwait
xor
cmp
or
add
nop
call
sbb
mov
aaa
lret
in
jmp
inc
int3
into
rorb
and
push
add
ja
or
pusha
mov
ret
adc
xchg
add
in
push
add
pop
clc
dec
arpl
repnz
cli
cmpl
movsl
inc
mov
mov
call
insl
dec
fldl
lret
aam
fadds
cli
les
outsl
lods
xchg
and
adc
or
mov
jmp
enter
xor
mov
sahf
inc
movsl
cmp
and
sbb
addl
pusha
shlb
lods
xor
enter
add
fxch
pop
int3
mov
movsb
shl
dec
xchg
popa
xor
add
clc
iret
and
ret
dec
lock
jmp
add
inc
inc
sbb
adc
les
leave
js
pushf
dec
dec
lahf
pop
pop
mov
mov
sub
sub
add
out
or
jae
push
and
xor
out
out
clc
xor
test
pop
sub
cmp
insb
repz
mov
es
cld
hlt
xor
leave
test
dec
and
xor
adc
fsts
jne
in
jno
mov
bound
push
push
pop
test
adc
mov
adc
and
filds
mov
adc
lods
ret
push
mov
daa
or
jmp
outsl
xchg
adc
cmp
jmp
push
jg
lods
js
insl
aaa
clc
repz
cmp
out
pop
test
iret
or
or
pop
cwtl
push
push
jge
xor
cwtl
pop
sub
sbb
or
pop
pop
mov
jle
idivl
pop
stos
mov
outsb
testl
call
jmp
cmp
jne
xor
enter
or
out
scas
jmp
dec
push
inc
push
mov
cwtl
call
loopne
mov
sbb
xchg
mov
sub
mov
sahf
es
incb
loopne
jbe
data16
push
movsb
movntps
adc
push
add
sbb
fiaddl
dec
push
imul
or
pop
or
and
loope
pop
dec
adc
fldenv
loope
or
insb
xor
frstor
xor
jne
jl
and
orl
sbbb
lods
dec
mov
add
lods
xor
clc
lea
dec
rcr
sub
jo
sbb
mov
mov
stos
repz
cmp
sbb
pushf
inc
lods
lock
push
add
cmp
and
jmp
inc
or
incl
pusha
jl
fs
or
mov
push
orl
add
and
push
stc
subl
add
dec
sub
in
add
aas
loop
add
bnd
lret
or
dec
nop
jo
add
rcrl
and
cld
loopne
and
fildl
fxch
inc
cmpb
fdivrl
sub
hlt
sbb
push
sbb
mov
add
sbb
and
jmp
push
pop
addr16
or
pop
imull
add
xor
clc
or
fs
pushf
out
in
insb
pusha
cmp
pop
inc
arpl
sbb
imul
inc
or
bound
sub
das
mov
sub
or
xchg
pop
and
ss
js
cmpsl
sub
jns
outsb
sti
dec
scas
sub
sub
fmull
daa
lea
mov
push
lret
add
adc
and
sti
dec
or
lea
adc
test
and
pop
inc
and
sub
dec
fbstp
dec
push
pop
sub
xor
and
and
push
mov
cmp
movsl
lock
add
pusha
pop
mov
mov
xchg
xchg
cmp
push
and
mov
jo
aaa
or
imul
sub
mov
popf
or
push
or
enter
mov
pushf
or
daa
int
popf
add
jno
and
pop
mov
adc
add
xor
xchg
and
push
or
mov
push
sbb
mov
ret
shrl
lea
mov
xor
loop
arpl
pop
xchg
cwtl
adc
pushf
mov
sbbb
iret
mov
mov
or
xchg
add
or
in
negb
push
ret
shll
stos
and
cmp
and
inc
or
addl
or
cmp
orl
xchg
mov
cs
adc
sbb
sub
cld
jbe
addr16
pop
shrl
cmpsb
sbb
loope
sbb
cli
repnz
mov
orl
inc
mov
sbb
adc
cmp
jno
inc
les
jecxz
push
test
jmp
sub
dec
data16
pop
and
imull
add
inc
mulb
xchg
cmp
sbb
xor
and
jecxz
nop
xchg
dec
movaps
out
cwtl
rolb
xor
mov
lea
cmpsb
je
mov
cmp
movsl
pop
cmpsl
pop
and
fs
jecxz
mov
lods
stos
pop
sub
in
and
pop
mov
push
lock
push
lahf
mov
push
cli
andb
sti
sub
andl
repnz
or
lret
and
sbb
stos
fwait
mov
cmp
push
outsl
test
insb
out
and
ss
push
fimuls
and
enter
xor
push
and
inc
pop
mov
push
xchg
sarb
push
jl
es
aad
and
int
add
xchg
mov
cmp
ja
cli
mov
add
dec
repnz
hlt
inc
and
js
sub
cmp
mov
data16
xchg
mov
inc
pop
test
xchg
sub
or
ret
sbb
and
bound
jmp
add
flds
icebp
add
or
xchg
or
gs
xor
or
rolb
imul
mov
rorl
and
repnz
lds
mov
or
sbb
or
xchg
fisubs
mov
mov
push
xchg
enter
in
mov
lea
add
pop
lea
push
mov
push
lret
or
test
les
test
and
in
std
addb
push
adc
scas
in
cmp
mov
fwait
or
fadd
call
int3
xchg
movsl
mov
sahf
adc
mov
cmpsb
push
mov
verr
iret
jns
imul
nop
push
sub
dec
mov
test
or
pop
mov
jo
push
pop
dec
mov
xor
add
or
mov
mov
dec
or
adc
aad
aaa
movsb
xor
sbb
push
dec
cmp
pop
pop
xchg
add
lret
sti
das
aaa
popa
adc
push
pop
and
sar
pextrw
xchg
xchg
es
push
cmp
out
and
test
mov
push
or
jno
cmp
mov
cmp
nop
push
xor
faddl
mov
jno
inc
fcoms
lods
jbe
fs
mov
cmc
cs
push
xchg
or
jnp
xor
imul
pop
lock
adc
fwait
mov
loope
add
pusha
push
loope
movzwl
add
push
sub
pop
pop
sbb
mov
mov
rolb
push
filds
int
push
push
inc
sbb
inc
nop
in
mov
or
pushl
shrb
pop
xchg
xchg
inc
cmp
or
pop
mov
mov
push
sub
daa
jne
inc
pop
sbb
pop
jge
insb
push
jp
lock
je
or
inc
imul
cltd
push
cmp
jecxz
dec
sbb
xor
fisttpl
jb
sbb
dec
xor
cmpsl
shlb
and
jg
or
xor
mov
push
test
les
xor
mov
ja
out
xor
stos
push
xor
shrl
jmp
sbb
add
mov
fs
push
ret
add
jo
sar
repnz
nop
add
andb
fs
iret
jle
js,pt
nop
push
add
sub
clc
and
sub
xchg
or
insl
adc
xchg
ret
push
adc
mov
cmp
les
sbb
mov
inc
pop
shrb
add
loop
pop
adc
loopne
sbb
pop
mov
mov
and
xor
jo
stos
and
pop
test
pop
add
ficomps
outsb
xlat
or
test
adc
mov
pop
jae
cmp
and
sbb
in
aam
dec
mov
lods
es
jae
movsl
test
stc
xor
adc
and
js
add
adc
sbb
inc
decl
add
push
add
sbb
mov
add
dec
push
mov
insb
dec
jo
and
aaa
mov
sbb
dec
push
sbb
adc
adc
sub
dec
add
sub
and
pop
es
jmp
and
inc
das
icebp
pop
xor
cmp
pop
pop
fdivs
adc
sub
shll
test
push
inc
sub
sub
stc
arpl
pop
xchg
xor
cmp
jno
jno
pop
mov
xor
sbb
mov
cmp
pop
pushf
jb
push
and
aaa
mov
aaa
or
jmp
sub
lret
orl
jne
addr16
xorb
pop
test
ret
sub
es
inc
jge
or
rcrb
dec
sbb
jmp
aad
xor
cmp
scas
dec
ss
push
ja
jmp
rorl
test
int3
jmp
and
lea
cmp
dec
aam
mov
adc
xchg
rcl
and
push
push
jns
mov
push
and
sbb
adc
or
lea
cmpsb
inc
sbb
jecxz
cmp
test
or
sub
inc
ja
movsb
mov
pop
sahf
xchg
je
add
das
and
mov
jge
or
add
push
add
hlt
push
mov
or
jb
jmp
and
test
ja
lds
mov
xlat
out
and
movsl
add
jmpw
and
jne
push
cmp
aad
and
ret
cmp
inc
loope
sbb
xchg
pushf
add
adc
adc
dec
dec
test
and
xchg
out
mov
push
sbb
or
fs
inc
sbb
imul
sub
dec
test
ss
sub
test
sbb
add
mov
xchg
push
lahf
add
sarb
lods
add
push
sbb
dec
insl
icebp
jp
or
sub
pop
adc
or
pop
hlt
dec
sub
scas
inc
cmp
push
jbe
pop
ds
aam
out
pmovmskb
in
je
sbb
adc
push
or
cwtl
sti
jg
test
push
cmpb
adc
fisttpl
mov
push
push
arpl
add
fmull
cmpsb
lea
mov
push
ds
adc
into
push
inc
jl
or
jl
jmp
sub
sub
sbb
pusha
sbb
or
fdivrs
sub
adc
jecxz
sub
movsl
fdivrp
inc
adcb
lock
pusha
xchg
test
fsubrl
sbb
or
pop
fisttpll
lea
movntps
cmp
stos
mov
arpl
push
mov
mov
adc
sbb
es
xor
ljmp
out
sub
popf
push
mov
add
and
lods
fs
or
pushf
ret
out
subl
into
push
scas
lods
pop
adc
add
sub
nop
pop
pop
popa
mov
mov
sub
adc
je
xor
sbb
or
pop
add
push
jle
jne
cmp
lds
fcomps
sbb
jo
jae
adc
and
gs
push
rorl
outsl
jg
push
es
sub
pop
dec
js
lock
mov
sbb
call
adc
jne
mov
adc
sub
ss
leave
sbb
push
je
sub
inc
sub
pop
xor
addb
adc
iret
jp
xchg
cmpl
faddl
mov
mov
out
or
cmp
or
add
movl
iret
push
pop
push
push
adc
test
and
adc
adc
fldenv
lret
pop
cmpsb
sbb
mov
xchg
dec
bound
dec
pop
lods
test
jecxz
lret
add
imul
jmp
push
jnp
arpl
je
push
inc
cmp
aas
jb
sub
test
xchg
mov
xor
sub
and
jecxz
mov
jns
sbb
std
and
xchg
mov
in
mov
mov
movsl
ja
inc
dec
push
call
mov
cs
xor
mov
mov
test
pop
pop
out
inc
mov
enter
pop
ja
pop
xor
push
sub
lea
push
popa
insl
addb
mov
inc
inc
cmp
loop
adc
in
add
sbb
push
sbb
inc
hlt
fs
cmp
sub
push
xor
and
mov
sbb
fwait
and
or
sub
xchg
leave
mov
cwtl
loopne
fcoml
xor
xor
adc
test
sbbl
test
mov
mov
dec
popf
int
and
pop
loopne
arpl
xor
fistpll
int
and
xor
adc
addr16
aad
adc
and
popa
cmc
dec
hlt
ss
pop
imul
push
mov
push
dec
push
jo
cli
jne
les
push
cmp
mov
xor
push
pop
mov
push
aad
lcall
and
mov
call
aaa
icebp
xor
push
pop
or
fdivl
lret
pop
adc
sub
cld
clc
es
inc
iret
jecxz
cmpsb
ret
pop
insl
mov
leave
pop
and
pop
adc
int
mov
jl
inc
loopne
cltd
lock
cmc
and
sub
ljmp
inc
adc
or
loope
push
aas
les
dec
xor
lods
inc
adc
fldz
mov
lcall
es
and
sub
loope
fildll
cmp
or
push
cmp
rcl
xor
push
add
sbb
clc
inc
xchg
cmpsb
mov
sbb
mov
leave
dec
push
xchg
mov
add
mov
leave
enter
adc
inc
xchg
mov
pop
push
mov
mov
push
movsb
stos
add
les
shlb
sarl
fmuls
mov
out
push
xchg
data16
bound
xor
fsubs
mov
inc
add
in
sbb
call
lea
xor
add
push
add
jns
pop
jge
mov
in
adc
add
push
jo
test
pop
cltd
pop
sub
insb
add
lahf
jg
mov
cmp
jle
cmp
jp
push
cmp
cmp
jg
mov
inc
add
add
inc
jmp
int3
xor
daa
ss
movw
rcrl
xchg
and
pop
addr16
push
pop
iret
clc
iret
movsl
inc
or
fs
pop
idiv
repnz
roll
mov
lock
insl
push
adc
mov
pusha
and
jnp
mov
jne
sbb
mov
jo
add
cmp
add
sbb
push
hlt
xlat
adc
mov
mov
dec
mov
ret
cmpsl
xchg
mov
xchg
and
xor
dec
inc
cmpsl
imul
fcom
sbb
and
movsl
or
adc
and
adc
or
mov
and
cmp
add
sub
imull
sbb
call
inc
lods
mov
push
or
nop
mov
nop
sub
ror
inc
or
nop
stos
mov
iret
xor
and
mov
dec
jle
pop
push
pop
aas
or
mov
addl
pop
pop
pop
pop
les
or
adc
push
js
add
add
add
pusha
mulb
rol
sbb
insl
or
sbb
cmpsl
inc
or
sbb
pop
lcall
shll
pop
adc
adc
popf
add
sub
sbb
push
adc
add
adc
stos
pusha
push
enter
pushf
sbb
aas
adc
add
adc
sbb
inc
dec
jecxz
aas
and
shll
movsb
inc
or
mov
add
push
jb
sub
inc
inc
mov
adc
mov
cmc
xor
add
inc
push
push
pop
dec
xchg
daa
inc
inc
jo
sub
clc
sub
sub
mov
inc
push
cmp
mov
sbb
sbb
push
and
add
shlb
sbb
mov
inc
insl
mov
cmp
and
sub
pop
dec
int
rclb
sub
xor
push
pop
adcl
ljmp
movsl
or
inc
xor
mov
sbb
push
cmp
mov
mov
stos
test
adc
xchg
dec
mov
add
inc
dec
xchg
aas
push
and
xor
add
push
add
adc
jmp
or
lea
or
adc
adc
pop
rcll
cltd
lods
aas
pop
add
xlat
xor
hlt
inc
add
sub
mov
push
enter
int3
fwait
lds
sub
adc
shlb
inc
nop
jmp
cmp
icebp
mov
cmp
inc
and
fdivl
dec
repz
aas
pusha
or
push
sbb
push
in
cs
lahf
loope
mov
xchg
mov
fnstenv
pop
out
rorb
push
vmovd
add
push
xor
cmp
pop
out
pop
ret
nop
inc
jo
inc
add
xchg
icebp
enter
or
add
aaa
je
adc
or
sbb
and
add
js
repnz
xor
push
add
stos
inc
fs
inc
or
movb
add
mov
stos
stos
in
sbbl
orl
in
cltd
xchg
add
movsb
pusha
mov
inc
add
fadd
push
pop
aaa
hlt
mov
popa
test
fists
sbb
pop
sub
adc
push
arpl
icebp
lods
jns
dec
and
mov
adc
popf
ljmp
add
mov
add
add
xor
sub
sub
cli
pushf
adc
push
lea
push
push
inc
and
mov
pop
and
push
inc
add
and
std
add
pop
sub
insl
orb
flds
adc
stos
imul
dec
cmp
push
lret
inc
icebp
sub
pop
les
or
lods
aad
mov
sbb
push
popa
ret
jne
push
sbb
in
std
lea
push
pop
gs
mov
sbb
push
cmp
shl
in
pop
or
push
fildl
add
mov
pop
loopne
inc
add
es
jne
dec
adc
lods
in
insb
add
cmp
add
repz
or
mov
jmp
jae
lods
sub
cmpsl
mov
push
jg
adc
pop
xor
and
lods
popa
add
rorl
adcb
stos
push
mov
xchg
and
xchg
jge
ja
xchg
inc
push
cli
jno
mov
addb
es
rolb
and
jo
ret
addr16
iret
jmp
sbb
std
ffreep
jecxz
add
sbb
adc
jl
push
fsts
fbld
mov
cmp
mov
jle
inc
pop
ret
movsl
gs
inc
push
mov
jecxz
sahf
jbe
mov
xor
in
orb
or
out
mov
cmp
mov
je
dec
or
arpl
fisttpll
cwtl
fcompl
fnstsw
test
je
sbb
shlb
push
add
xchg
cmp
sti
inc
lods
push
fldl
push
sbb
dec
push
add
jle
dec
sbb
and
pop
jmp
pop
mov
fstpl
or
mov
fcompl
mov
jo
jnp
lock
pushf
and
loope
fsubrp
addr16
sub
or
xor
notb
mov
movl
pop
xchg
loop,pt
mov
fildl
mov
inc
mov
inc
pushf
and
scas
sub
sub
sbb
shll
push
adc
cwtl
dec
ret
adc
stc
jge
loopne
sbb
or
orb
out
add
pop
add
es
push
adc
sub
iret
dec
mov
fcmovne
sub
jnp
ja
pop
xor
push
mov
mov
jo
and
mov
std
lock
xor
sbb
aaa
movsl
adc
andl
xlat
push
leave
jmp
loopne
push
jle
mov
fisttpl
dec
mov
mov
xor
rolb
sub
mov
icebp
dec
inc
stos
cmp
jb
stos
xor
shld
mov
xor
sbb
aas
or
lea
push
push
and
dec
jbe
je
cld
or
ret
cmp
add
push
leave
adc
pop
inc
add
mov
push
rclb
inc
sub
mov
jle
or
cli
or
mov
push
dec
movsb
data16
add
pop
pop
mov
or
dec
mov
adc
ficompl
push
mov
test
dec
jbe
bound
or
lods
mov
test
push
sarl
ret
ja
push
adc
mov
es
das
or
push
sub
inc
cmpw
jne
mov
cld
scas
sahf
adc
inc
inc
cld
cmp
sti
xchg
push
jge
mov
outsb
sti
fildll
lea
cmp
or
inc
subl
leave
out
data16
scas
push
mov
push
xchg
and
inc
push
push
sarb
mov
scas
mov
fbstp
nop
add
jge
or
or
in
das
add
add
adc
cltd
insl
jl
push
sbb
pop
int3
lods
imul
xor
pop
scas
in
sahf
mov
or
mov
jnp
int
mov
stos
push
rorb
xchg
movsl
add
adc
imul
mov
push
rclb
mov
or
pop
shll
das
mov
cmp
test
shrb
cmp
inc
or
pushf
rolb
sbb
or
movsb
std
subl
adc
push
les
int
in
xor
lret
or
insl
cltd
out
pusha
inc
push
jl
adc
add
imul
addb
out
xor
gs
mov
or
out
or
pop
xchg
and
push
mov
pop
pop
ljmp
or
lds
sbb
or
xchg
je
cmp
sbb
xchg
push
pop
je
imul
jbe
cmp
pop
ret
pop
add
and
mov
push
pop
inc
push
aam
icebp
outsb
or
push
xor
sub
add
add
daa
jne
ret
and
inc
jl
test
push
andl
xchg
push
leave
add
sub
pop
push
or
or
lret
fidivrs
or
or
push
adc
and
or
cmc
ret
and
mov
insb
adc
pop
inc
dec
adc
aam
loopne
sbb
add
movsl
cltd
jne
cmc
sub
jmp
dec
cs
push
cwtl
adcb
or
xor
or
jp
cmp
fsubrl
cmp
stos
movsb
dec
mov
lcall
adc
xchg
ret
lds
xchg
add
pop
inc
inc
jge
es
add
es
add
and
ret
push
ja
sub
or
rcrb
mov
adc
sub
jge
add
insl
icebp
std
add
jne
shlb
mov
faddl
fs
jb
sti
mov
mov
dec
je
add
sbb
rcl
push
dec
jne
jmp
movntps
or
jmp
add
xchg
xor
or
cld
sub
push
lods
jmp
test
out
sub
enter
insb
jmp
or
pop
sbb
mov
cld
jmp
or
jmp
movsl
or
out
aaa
nop
jmp
lea
jmp
dec
add
loopne
cmp
push
xlat
adc
dec
add
jb
and
and
add
pusha
nop
movsl
pusha
cmp
aam
pop
and
and
push
pop
outsb
push
hlt
xchg
in
dec
sbb
inc
push
and
orl
pop
in
inc
push
je
mov
inc
push
cmp
hlt
dec
adc
xchg
sub
push
mov
stos
and
adc
push
js
adc
xor
or
jns
ja
push
add
popa
imul
sahf
out
mov
jns
mov
push
add
repz
pop
and
xor
aas
dec
push
pop
addr16
repz
jno
test
repz
mov
lret
aad
cmp
repz
repz
push
pop
pop
push
mov
push
dec
mov
mov
push
mov
fucom
flds
mov
xor
jbe
add
add
adc
rcl
rorb
cmpsl
adc
out
in
and
sub
add
jnp
jno
cmpl
mov
ret
cmp
or
jmp
fwait
jmp
jl
mov
pop
xor
pop
lock
mov
inc
mov
push
fisttps
pop
push
iret
ljmp
addl
cmp
in
std
das
jmp
nop
faddl
xor
xlat
jne
outsl
mov
fsubl
call
icebp
mov
push
sub
sbb
inc
jb
int3
loope
sub
call
dec
sub
leave
jge
lret
push
dec
test
movsl
mov
adc
inc
xchg
xchg
arpl
push
out
imul
ja
rorb
cmp
out
sbb
loope
lea
push
das
lea
and
lock
pop
push
xchg
pushf
add
cmpsl
xchg
mov
push
and
xchg
daa
cmc
fldl
or
jae
pop
in
stc
fisubs
ja
add
imul
jbe
or
push
pusha
mov
mov
lea
push
gs
xor
clc
lea
push
roll
loope
test
inc
mov
lret
inc
pop
pop
mov
inc
adc
sub
cmpsb
cwtl
pop
or
popa
mov
mov
and
js
jg
jmp
push
pop
mov
popa
add
sbb
adc
mov
cld
add
test
pop
sub
pop
fwait
xor
pop
mov
inc
out
sti
mov
xor
sbb
push
or
daa
add
mov
cmpsl
and
cwtl
scas
push
sbb
xchg
movhps
lock
lahf
adc
repnz
shll
push
or
lea
cwtl
sbb
mov
mov
cmp
jnp
sub
mov
mov
ss
mov
push
mov
jae
int3
cmc
inc
fs
pop
push
dec
add
mov
mov
sub
mov
sarb
icebp
push
jecxz
dec
jp
push
mov
cmp
stos
sbb
xor
in
mov
pop
mov
faddp
xor
push
mov
fldt
fwait
push
das
mov
inc
cs
push
pop
inc
sub
xor
xor
mov
xorb
inc
mov
xor
arpl
jle
icebp
xor
and
xor
pop
xor
sbb
xchg
out
shrb
insb
xchg
out
out
jo
jl
out
out
cwtl
sub
sub
inc
es
in
ja
pop
push
sbbb
mov
mov
je
int3
jl
bound
cmp
adc
and
lret
inc
fimuls
das
cmp
mov
mov
add
bound
loop
push
jbe
sbbl
inc
or
jl
inc
mov
push
nop
out
pop
adc
ljmp
pop
inc
mov
loopne
dec
push
push
mov
imul
gs
add
int3
xchg
inc
scas
add
int3
nop
and
fs
xchg
mov
xor
cmp
xchg
and
loopne
pop
mov
and
and
sbb
and
test
es
inc
mov
jo
xchg
sub
mov
dec
pusha
mov
shrb
movsb
push
mov
cmp
mov
push
fnstsw
mov
cmp
rcll
cwtl
xchg
orl
popf
mov
cld
test
cmp
and
xchg
imul
add
fmul
cwtl
xchg
orb
outsl
cmpsl
xchg
xor
sub
movsb
lret
push
dec
pop
movsb
aas
mov
mov
cmpsb
dec
mov
inc
push
aas
xchg
pop
cltd
or
sub
cwtl
nop
or
in
aaa
push
loopne
or
mov
repnz
nop
mov
movsb
or
adc
into
cmp
in
mov
add
push
scas
ret
push
je
push
in
adc
aas
sub
xchg
jo
dec
xchg
nop
add
jnp
jno
mov
imul
cwtl
adc
inc
arpl
mov
or
and
popa
dec
adc
inc
adc
mov
sub
adc
sbb
sub
outsl
and
aaa
xor
and
jne
inc
pop
sub
sbb
adc
cmp
adc
imul
dec
dec
add
mov
adc
xchg
sub
mov
mov
inc
out
lahf
cmpl
mov
jl
je
push
adc
mov
cmp
adc
inc
ja
jbe
mov
push
cltd
bound
pop
add
pop
mov
mov
and
push
pop
nop
lods
and
add
fcmovnb
pop
nop
jecxz
mov
loopne
dec
sbb
adc
sub
mov
in
call
inc
mov
mov
push
push
adc
jbe
xchg
pop
cmp
movsb
jns
sahf
ret
fnclex
je
js
pusha
or
pop
lcall
add
sbb
xchg
pop
mov
cmp
push
cwtl
int3
xchg
cmp
cmp
fsubl
and
pop
push
adc
sahf
inc
cmp
icebp
rcll
mov
movsl
adcl
pop
sahf
lcall
orl
rcrb
push
int3
add
imul
mov
fcoms
je
sbb
dec
movsl
stos
aam
sbb
sbb
or
xor
sbb
jl
lods
push
scas
dec
sub
mov
push
pop
pop
mov
inc
jmp
xchg
lock
pop
inc
adc
lods
jno
inc
mov
test
leave
sub
jae
lods
inc
sbb
shrl
adc
movsb
cmp
idivl
inc
lcall
xor
test
loope
adc
rolb
and
adc
push
dec
loope
xchg
adc
lods
adc
mov
or
inc
mov
inc
sbb
addl
jo
or
or
pusha
rclb
dec
repnz
in
xchg
cmp
sub
ret
and
or
insb
in
inc
aas
pushl
leave
add
or
xor
ret
push
fisubl
or
or
xor
aad
leave
sub
vmread
mov
enter
adc
mov
add
xchg
mov
mov
lods
push
cltd
add
lods
inc
arpl
fmull
add
add
sbb
mov
or
add
in
repz
xchg
call
and
nop
xchg
sbb
stos
jnp
jmp
cld
cs
rclb
push
stos
punpckhbw
inc
adc
inc
cwtl
push
sbb
ljmp
push
das
insl
mov
pop
mov
jg
or
lea
mov
and
cmpsl
and
addr16
xchg
int
adc
adc
int
or
push
adc
in
inc
pop
enter
pushl
rorb
cmp
jmp
inc
stos
pop
push
shr
mov
mov
adc
or
aam
mov
xlat
mov
sbb
push
lock
sbb
call
mov
imul
jae
test
sbb
cmp
xchg
push
inc
scas
push
pushf
in
push
push
cmp
push
mov
shlb
int3
xor
or
pop
push
xchg
xchg
je
mov
and
inc
daa
inc
aas
pushf
push
lock
xchg
lods
mov
lret
add
daa
lods
push
push
cmp
ret
sub
pop
xor
mov
stos
sub
rcrb
inc
lods
je
mov
inc
jl
jbe
pop
add
push
icebp
push
loopne
and
cmp
sub
aam
cmpl
and
ret
inc
cmp
jo
mov
jbe
pop
push
in
mov
and
xor
pop
and
jno
and
cmp
pop
push
add
nop
add
nop
sbb
sbb
addb
sbb
cmp
push
adc
adc
sub
sub
dec
jne
push
cmp
aas
add
jns
jmp
and
or
in
test
clc
pop
inc
cmpsl
add
inc
stc
and
or
add
fcom
aaa
inc
or
ficompl
imul
fmuls
push
jle
jb
jmp
lock
clc
cmp
push
adc
daa
lea
inc
movsl
jmp
ud1
or
xchg
mov
add
add
stos
sub
aam
or
jo
mov
fsubrl
dec
mov
mov
lea
mov
jnp
cmp
hlt
sub
cmp
jbe
testb
outsb
mov
push
push
push
jmp
cltd
inc
xchg
inc
and
dec
cmp
scas
push
mov
ja
aad
xor
pop
jl
fcoms
mov
xor
or
movsl
adc
inc
inc
jl
mov
in
adc
sarb
xchg
mov
cmp
mov
inc
je
push
push
inc
ret
clc
sbb
lret
inc
lret
push
outsb
movaps
jb
mov
imul
js
mov
mov
js
addl
nop
push
adc
add
ss
dec
js
aaa
push
cmp
aam
cmp
mov
ret
push
sbb
xlat
cli
dec
adc
dec
add
xchg
cmp
jne
inc
add
jb
dec
sub
cmpb
or
push
push
hlt
andl
or
or
iret
jne
pop
fistl
enter
jae
inc
lods
adc
fwait
add
nop
cmp
repnz
iret
hlt
push
test
rorl
jo
add
jmp
adc
decb
and
push
inc
and
xor
sbb
pop
mov
popa
inc
insl
mov
loopne
sub
fadd
loopne
es
or
inc
sub
push
ret
gs
cwtl
adc
dec
jo
lods
dec
or
add
insb
mov
xchg
push
lock
jb
or
imul
lods
insl
rolb
stc
cwtl
mov
jne
test
les
cmpsl
jge
or
sbb
nop
es
inc
ds
add
pushl
push
jno
xor
push
sbb
pop
jo
loop
jns
sub
sub
fdivs
sbb
aaa
add
add
test
jmp
dec
pusha
adc
add
jg
xor
cmp
jl
fmull
jg
je
cmp
or
and
mov
movb
stos
test
and
ljmp
push
add
shrl
pop
dec
add
leave
jne
pop
add
dec
dec
push
dec
add
pop
adc
data16
repnz
lock
adc
cmp
dec
jae
mov
out
fs
add
jno
lret
fs
sub
dec
jns
adc
lret
mov
xchg
or
test
push
push
xor
pop
xchg
pop
xor
call
dec
movsl
lea
mov
xchg
nop
inc
sbb
cmp
es
dec
and
aam
and
fldenv
inc
into
vpmaddwd
cmp
jo
cmc
jmp
pop
push
dec
pop
inc
movsl
mov
add
mov
xor
and
add
pop
push
mov
test
pop
in
adc
stc
dec
and
and
dec
mov
loopne
cmpsl
ja
jb
dec
enter
mov
add
pop
fadd
adc
adc
repnz
test
jl
imul
shrb
inc
sub
jo
add
stos
sbb
das
inc
outsl
addr16
sub
dec
loopne
sbb
add
push
xchg
xchg
lcall
sbb
insl
xchg
sub
insl
daa
mov
mov
push
and
push
shll
bound
leave
inc
dec
stos
scas
jmp
aam
adc
or
inc
jnp
push
push
lods
popf
shll
mov
shlb
mov
push
sbb
mov
xor
push
and
pop
js
jbe
mov
repnz
push
cmp
push
jne
or
push
push
add
mov
mov
mov
cmpsl
nop
push
movsb
scas
pop
dec
and
insl
nop
xchg
xchg
mov
xchg
push
or
push
pusha
inc
xchg
inc
ja
push
fistl
fistps
dec
into
test
jle
jmp
xchg
mov
or
test
stos
fsts
push
cli
out
jnp
rolb
popa
lock
cltd
inc
or
test
fcmovb
or
or
or
pop
sbb
inc
sbb
pop
or
fmul
dec
xor
mov
mov
push
pop
js
pop
ljmp
enter
imul
mov
pop
enter
push
ret
push
cs
mov
test
and
xor
xchg
add
sbb
aad
cmp
enter
add
push
rcrb
sub
cmp
sbb
sbb
cmp
xchg
out
xor
xor
or
sbbl
pusha
push
jmp
lods
or
adc
cs
outsl
dec
in
dec
cmpsb
mov
ret
daa
cmp
mov
adc
insl
mov
lock
push
dec
pop
fsubrs
outsl
cmp
je
mov
sub
dec
xor
push
mov
cmp
xchg
cmp
shll
les
iret
pop
ljmp
sub
dec
sbb
jmp
in
sbb
inc
hlt
popa
dec
in
inc
jnp
cmc
push
es
pop
add
push
sub
pop
shrb
xchg
add
lds
mov
cwtl
sbb
xchg
or
jge
add
je
in
mov
movsb
scas
lods
mov
mov
mov
dec
push
xor
jne
je
inc
testl
jl
mov
sarb
pop
adc
mov
add
sub
mov
pop
int3
movsl
push
or
fcoms
mov
les
popf
cmp
jnp
add
adcl
fcmovbe
addl
push
enter
decb
lret
xor
xor
pop
adc
mov
add
sbb
mov
lea
mov
dec
mov
lods
test
lods
inc
jne
in
orb
pop
sub
mov
xor
and
call
xlat
jne
fdivs
les
jbe
or
and
popf
rdtsc
xor
rcrl
sbb
mov
ret
imul
pop
lods
xor
lods
xor
cmp
or
inc
lahf
fs
scas
das
je
jge
lea
inc
jne
push
bound
ret
ret
jns
outsl
das
adc
and
sahf
fsub
out
cs
out
imul
sti
jne
es
loopne
out
lret
and
jne
jno
pushf
xchg
pop
lock
sbb
cmp
mov
add
dec
cmpsb
rorl
call
mov
rcrb
pop
sub
add
cmp
sbb
jno
xor
sbb
ss
fmuls
out
lret
call
les
or
mov
clc
imul
add
outsb
mov
jle
push
cmp
dec
sbb
cmp
jle
test
adc
mov
add
mov
sub
inc
add
inc
or
pop
and
cmp
push
dec
jl
jne
sub
dec
inc
pop
cwtl
inc
sbb
inc
add
sbb
mov
jle
adc
pop
ret
ret
mov
or
inc
push
outsb
ds
xchg
jge
push
push
mov
enter
call
fldl
hlt
or
inc
sbb
inc
data16
cmp
popf
filds
adc
jne
daa
bnd
adc
js
lahf
out
jne
or
jne
or
push
mov
or
int
js
and
pop
lds
ret
pop
xchg
sub
inc
sbb
ds
test
icebp
out
sahf
movsb
sbb
pop
sub
push
jl
mov
lea
repnz
cli
pop
hlt
lea
sti
lea
mov
sbb
fstl
or
inc
add
cmpb
ja
add
cmpb
pop
fcoml
mov
sub
sbb
xchg
inc
cmp
out
mov
xlat
or
cmc
int3
xor
mov
gs
push
mov
sbb
xlat
xor
fnstenv
clc
adc
divl
or
jne
fstl
fsubrs
loopne
rorb
adc
sbb
in
adc
mov
jne
push
jl
outsb
loop
pop
cmp
push
sbb
push
ss
jl
cmp
xor
das
mov
movsl
cmp
cmp
sbb
xchg
insl
mov
fdivrs
call
and
orl
jb
data16
pusha
sets
or
or
imul
add
pushf
push
jne
mov
mov
lods
and
fisttps
fmul
fs
dec
ficoml
mov
je
push
pop
add
icebp
add
fimuls
push
lea
xchg
test
cwtl
pusha
cmp
insb
iret
inc
shlb
jg
data16
pop
nop
data16
add
mov
shlb
or
fmuls
add
out
inc
rorb
int3
or
into
inc
mov
int
sbb
inc
andb
xor
jl
popa
insl
int
add
add
inc
hlt
insl
cmpb
xchg
cmp
addr16
insb
add
cwtl
mov
lock
or
sbb
mov
inc
imul
mov
push
add
mov
scas
int
push
pushl
push
and
insb
dec
mov
mov
adc
lea
or
lret
rcrl
sbb
xchg
decl
sbb
jno
fidivrl
cmc
scas
inc
in
imul
addl
pop
and
push
xorl
mov
or
mov
sub
je
mov
ror
mov
dec
or
movsl
pop
mov
mov
dec
xorl
out
and
mov
sbbl
dec
lea
xor
mov
add
in
mov
sbb
hlt
pop
daa
xchg
sbb
and
test
outsb
mov
sbb
jb
adc
and
adc
cmp
adc
sub
fcoml
repz
ss
pop
xor
push
leave
and
xor
dec
sbb
inc
scas
outsl
push
adc
adc
sbb
xor
imul
inc
test
and
cwtl
nop
inc
and
cmp
out
sub
push
sub
and
sub
mov
sbb
pop
inc
inc
dec
cmp
inc
in
xor
pop
push
pushf
test
jae
pop
je
leave
add
push
push
loopne
pop
or
adc
push
jge
jno
fcom
aad
push
je
insb
and
movsb
cltd
add
add
sbb
sahf
cmpsb
adc
xchg
inc
mov
sti
xor
and
jo
lcall
xchg
jo
je
jo
and
sub
pop
adc
test
mov
js
cld
xchg
jg
je
push
outsb
xchg
and
add
outsl
push
inc
sbb
fdivrl
push
add
lock
mov
xorl
mov
jne
movsb
test
cmpsl
scas
or
addr16
leave
mov
add
mov
shll
push
or
add
sahf
push
push
pop
loopne
daa
add
add
addb
mov
fsubrl
jbe
xchg
add
xchg
and
sub
and
xchg
idivb
jmp
adc
jno
in
push
or
add
and
push
test
mov
cmp
xchg
test
inc
add
lahf
lea
jge
jecxz
insl
imul
fldl
jo
add
fmull
mov
std
xor
andb
fldenv
mov
loopne
je
xchg
xorb
adc
dec
xor
add
and
ficoml
adc
lahf
cmc
xlat
loop
or
xchg
xchg
shrb
add
sub
mov
sub
cmpl
ret
jnp
mov
fadd
test
pop
dec
ret
adc
insl
aaa
push
filds
int
inc
xchg
mov
test
adc
mov
je
cs
push
popf
xchg
subb
arpl
repnz
cmpl
stos
mov
add
push
jne
sub
pop
nop
aam
push
ljmp
xor
add
add
and
dec
dec
adc
or
cmp
mull
push
xor
shll
and
cmp
push
lret
add
adc
ret
daa
fdivl
adc
dec
mov
insl
sub
mov
push
test
mov
dec
loope
mov
sti
add
mov
lcall
push
sti
push
xor
stos
cmp
mov
rolb
adc
outsb
cmpsl
jg
mov
jnp
mov
or
enter
inc
ret
push
or
jecxz
imull
shl
shl
mov
dec
cmpsl
fstps
xchg
lds
xchg
bndstx
aam
out
hlt
call
jmp
out
je
shlb
call
adc
fisubrl
mov
pusha
inc
lret
sbb
add
addl
test
or
add
add
adc
pop
pop
repnz
repz
ret
mov
inc
inc
rolb
pop
mov
lea
daa
rcll
dec
adcb
stc
add
pushf
fsts
or
pop
shlb
or
sbb
popa
pop
push
rcrl
add
rcrl
or
mov
fldt
push
test
sbb
push
mov
fisttpl
fldt
or
testb
adc
test
roll
xchg
std
add
push
aas
stos
inc
and
xchg
movsl
in
or
js
cs
aas
mul
pop
add
jge
shrl
mov
shrl
sbb
sub
jno
stos
movsb
ret
jo
and
mov
mov
lock
push
je
movsl
ja
jne
nop
int3
or
or
je
or
aas
inc
mov
jb
rolb
sbb
sete
sbb
mov
and
pop
dec
cld
inc
and
ds
add
cmp
hlt
jae
movsbl
in
xchg
cli
sbb
inc
mov
mov
jmp
rorb
add
sbb
mov
jmp
enter
ret
popl
loopne
dec
inc
add
or
jecxz
or
adc
movl
mov
ljmp
and
add
sar
add
mov
fcomip
pop
cmpsl
xor
ss
cmp
jecxz
iret
push
add
add
or
enter
adc
or
jne
add
pop
pop
dec
ret
sahf
lods
sbb
and
xor
cmp
sbb
aad
jbe
mov
add
test
xor
cli
scas
jo
shld
lea
mov
ret
add
sbbl
or
idivb
stos
imul
jl
inc
jecxz
and
mov
ss
shrb
mov
mov
adc
add
dec
jne
and
add
cltd
aas
arpl
rolb
shl
dec
sahf
xchg
out
mov
jl
icebp
push
ret
or
xchg
adc
or
outsl
adc
mov
pop
pop
enter
xor
loope
and
nop
imul
pop
mov
mov
sbb
mov
push
xor
push
add
lcall
or
mov
xchg
fsubrl
mov
mov
inc
cmp
sub
and
jb
or
add
nop
je
add
shlb
xor
loop
cmp
xchg
addb
xchg
push
jmp
aam
fistps
cld
and
or
ret
int3
insl
push
dec
out
fcomps
pop
pop
and
fildll
lock
cmpsb
jnp
jnp
sbb
add
pop
adc
add
add
add
or
sbb
dec
mov
add
add
test
xchg
sbb
pop
jle
js
or
js
ss
push
sbb
pop
cmp
push
jno
jns
push
push
xchg
mov
jo
lods
add
sub
xchg
pop
shrb
ret
mov
xchg
xor
adc
or
lret
xor
push
and
rcrl
hlt
in
notl
push
pushl
dec
fcompl
push
cmp
xchg
mov
cmp
cmp
mov
jmp
rolb
fstpt
in
sbb
mov
cmp
test
lcall
jp
and
sub
je
cmp
je
add
and
dec
pop
xchg
repz
and
push
movsl
mov
cmp
jecxz
pop
dec
ja
xchg
add
push
scas
add
int3
add
push
push
jmp
dec
add
sub
xchg
or
inc
fwait
inc
mov
adc
mov
imul
mov
scas
shrl
jl
fisubl
push
arpl
aam
cltd
xchg
inc
sbb
mov
mov
xorb
push
lds
or
mov
jle
aaa
mov
adc
xlat
push
and
cmp
jmp
cmp
cmpsb
mov
loope
and
in
add
int3
int3
add
loop
mov
add
adc
outsl
cmp
lcall
cmp
mov
push
pop
lock
sbb
cmpsb
je
dec
fcoms
test
enter
cmpsl
ljmp
test
pop
fld
rorb
bound
and
adcl
fcoms
xchg
sahf
xchg
aaa
and
and
mov
inc
inc
adc
jge
imul
and
add
test
dec
push
pusha
aam
scas
inc
dec
es
mov
adc
cwtl
loopne
push
lea
inc
sub
nop
xchg
rorl
sbb
sbb
je
cmp
daa
movsbl
push
xor
add
add
ss
push
test
cli
decl
mov
mov
clc
or
mov
test
sbb
lret
mov
add
mov
push
jns
or
add
mov
or
mov
sub
mov
cmp
add
mov
and
leave
dec
push
roll
sahf
sbb
push
pop
and
add
popa
ljmp
dec
mov
inc
aas
cld
pop
push
jp
les
mov
mov
loope
popf
ds
pusha
inc
cmp
leave
jge
mov
xor
test
call
add
pusha
rorb
adc
add
es
inc
xchg
or
imul
dec
and
pusha
imul
out
aad
pushl
mov
xchg
mov
mov
clc
pop
mov
jle
jne
sbb
add
mov
clc
push
xorb
push
repz
test
pop
les
ss
sbb
mov
xchg
pop
push
push
add
mov
mov
mov
pushl
xor
decl
mov
mov
inc
mov
mov
cmp
sbb
clc
addl
int
mov
das
sarb
sub
push
icebp
or
out
std
scas
mov
or
mov
pop
or
lods
add
push
mov
nop
and
push
nop
add
or
cld
push
leave
or
mov
push
xor
mov
inc
call
jne
pop
das
mov
icebp
dec
lea
fwait
aam
fsts
ret
mov
mov
mov
inc
dec
loop
insb
into
push
jb
shlb
add
inc
fs
push
mov
add
jl
xchg
add
in
and
in
mov
ret
push
je
hlt
test
les
sub
adc
inc
sahf
and
inc
push
enter
fisubrs
and
ja
and
xor
adc
lock
movb
mov
les
fs
imul
push
mov
jo
movd
test
xor
into
cli
ret
xor
movsb
call
adc
add
pop
or
or
push
and
xchg
push
xor
cmp
dec
daa
lret
push
or
or
je
in
movsl
das
jl
mov
rcrb
mov
mov
xchg
cmp
mov
test
hlt
ja
adc
shll
jb
cwtl
mov
dec
pusha
aaa
pushf
stc
sub
ss
lea
cmp
jbe
cmp
jbe
cmpsb
fsubp
mov
sbb
or
mov
into
xchg
mov
sub
mov
xchg
lods
xchg
sub
sbb
adc
ficomps
incl
mov
aad
xchg
pusha
test
orl
loope
or
push
cmp
cmpxchg
mov
jne
push
fsubs
sahf
mov
rcll
push
cmp
shrb
adc
and
pop
mov
xchg
jl
mov
and
sbb
test
pop
ret
and
dec
dec
addr16
enter
mov
or
mov
mov
test
sub
adc
mov
leave
call
inc
cmpsl
mov
je
lea
cmp
push
sarb
loop
add
fwait
add
xcrypt-cfb
cmpsl
movsl
adc
data16
pop
mov
xor
imul
add
dec
jmp
in
mov
and
ja
or
xchg
pop
int
daa
test
mov
mov
mov
pop
fcomps
cmc
lock
or
add
xor
pushf
jmp
add
lret
scas
add
adc
sbb
mov
sbb
inc
mov
call
adc
scas
push
xchg
cmpsb
adc
and
loope
mov
add
add
js
mov
and
aad
and
mov
outsl
cmc
pop
pop
and
jo
fisttps
out
test
jmp
push
leave
rclb
inc
enter
cmp
add
imul
and
xor
xchg
roll
mov
push
dec
ss
push
mov
adc
nop
mov
mov
popf
mov
add
enter
push
ficoml
mov
int3
outsl
dec
sti
dec
stos
les
lock
scas
dec
cmpl
inc
push
test
sbb
stos
pop
inc
mov
fmuls
scas
add
push
popa
aas
push
aam
ja
xchg
rcr
adc
sbb
xchg
or
adc
int3
lahf
cwtl
je
xchg
daa
add
loope
mov
dec
lea
mov
je
sbb
adcb
add
and
jbe
xor
mov
and
ret
clc
xor
leave
mov
or
push
adc
cmpl
jmp
lea
push
push
dec
fwait
movl
fldcw
ljmp
adc
rclb
insl
test
movsb
lahf
pop
xchg
add
lods
int
fdivl
adc
sub
fsubr
inc
add
adc
push
insb
or
sub
add
in
or
cmp
dec
adc
ret
add
repnz
sbb
mov
ljmp
in
pop
test
aam
ret
lods
popf
mov
testb
sub
movb
pop
popa
popa
mov
daa
pop
fs
rcrl
pop
outsb
out
push
sbb
or
xchg
dec
ljmp
jge
test
sub
sub
loopne
cwtl
clc
gs
jecxz
incl
movsl
rcrl
and
mov
clc
mov
mov
inc
aad
push
decl
ret
fldenv
push
ja
and
mov
scas
push
or
es
loopne
or
xchg
xchg
xor
push
mov
lods
jp
push
rorb
cltd
jne
jne
push
aaa
enter
test
lahf
imul
sti
jo
stos
ret
push
jmp
fld
ja
pop
call
jp
cmp
pop
sub
cmp
sub
cmp
pop
push
sbb
add
cmp
add
fisubl
inc
inc
ds
cmpsl
lcall
push
jmp
clc
bound
repnz
jg
xor
jmp
cmp
jne
mov
loopne
outsb
adc
std
or
loopne
pop
mov
leave
inc
mov
xchg
xchg
cld
mov
adc
sub
je
pop
cmp
call
mov
xchg
cmp
mov
dec
ss
adc
and
stos
lret
call
cmp
sbb
lea
and
in
add
mov
jmp
rcrl
lods
pop
pop
dec
adc
cmp
add
add
lret
inc
sarl
jae
inc
jmp
or
push
shl
mov
dec
jbe
adc
or
or
or
popa
fmull
add
cmp
add
nop
dec
or
xor
and
repz
in
bound
inc
test
shrl
dec
test
cmp
xorl
jns
dec
or
inc
pop
push
fs
mov
and
and
sbb
addl
cs
cmpsl
sub
daa
jns
fisttpll
mov
xor
sbb
and
sub
push
jge
jae
rclb
cmp
fildll
sbb
pop
jmp
cmp
test
cmp
into
adc
adc
xchg
ret
sub
mov
sbb
mov
push
and
ss
or
insb
in
movsl
inc
xchg
mov
loope
sahf
test
mov
dec
or
lock
jne
rcrl
push
push
cmp
das
or
jl
push
cs
or
aaa
rolb
push
or
adc
sbb
test
sub
cmpsb
cmp
sub
icebp
sub
imul
sbb
mov
and
push
sub
nop
dec
or
pop
fmuls
lods
inc
sbb
sub
or
or
dec
rcl
add
cmp
or
pop
jg
test
cltd
dec
sub
sahf
stos
or
aam
outsb
shlb
enter
jne
jmp
xchg
bound
test
dec
cmc
testl
mov
lret
iret
aam
push
mov
inc
ret
cmp
add
xor
aam
add
jnp
mov
pop
adc
scas
add
test
mov
mov
pop
les
loope
xchg
add
push
sbb
mov
nop
shlb
aaa
push
jns
nop
dec
call
jno
popa
jnp
cmp
and
icebp
lods
jb
mov
mov
sub
push
jmp
dec
jnp
icebp
and
fwait
call
and
inc
movhps
imul
data16
xchg
fcom
inc
mov
mov
int
push
pop
imul
stc
ja
add
push
lret
lahf
cwtl
in
ret
or
adc
pop
or
mov
push
inc
lret
push
add
cs
inc
xchg
lock
or
xor
addr16
or
aaa
push
in
and
pusha
roll
shl
adc
int3
add
shlb
sbb
fiadds
stc
pushl
xchg
sub
and
mov
mov
jp
cli
js
sbb
add
xchg
in
sub
jbe
inc
or
add
mov
fimuls
inc
add
jmp
pushf
in
add
leave
cmp
ret
jp
js
xor
xor
outsb
xlat
outsb
mov
lea
iret
xchg
dec
nop
subb
lock
lock
pop
push
dec
mov
push
stos
or
adc
push
adc
jo
movsl
mov
push
xchg
xor
out
mov
mov
movb
jmp
xchg
int
cmp
jb
cmp
inc
mov
jae
mov
inc
inc
aaa
popa
data16
push
test
imul
sbb
aad
rolb
add
push
pop
push
inc
adc
add
hlt
sbb
dec
je
aad
dec
es
js
xorl
mov
mov
mov
mov
das
je
or
mov
cmp
addr16
je
cmp
jne
mov
pop
jns
or
pop
dec
lea
out
es
mov
pop
dec
xor
or
out
mov
cmpsb
mov
sub
inc
adc
je
testl
lods
sub
in
cmp
jbe
lahf
inc
mov
add
inc
cmp
je
and
incl
sub
inc
jmp
inc
and
test
ficomps
shlb
mov
add
xchg
loop
out
out
pop
mov
mov
mov
cmp
je
aam
mov
inc
pop
addb
push
adc
into
inc
jmp
loop
inc
pop
push
xor
in
xchg
sub
test
push
cld
inc
xchg
cmp
add
cmp
jne
outsb
hlt
cmpb
bound
pop
fstl
lock
cli
mov
rol
pop
sub
xchg
push
mov
jb
fdivs
js
sub
push
nop
adc
xor
push
jge
adc
jp
and
dec
jns
cmp
pop
mov
add
jmp
inc
jmp
loopne
jne
inc
push
pushf
dec
mov
aam
insl
mov
cmc
movzwl
data16
add
je
inc
add
out
js
jae
movl
insb
sub
pop
shl
add
jmp
pushf
aas
insb
sti
and
cmpsb
hlt
or
cmpsb
and
mov
adc
fs
jne
xor
fcoml
push
cmp
adc
mov
push
mov
or
push
test
jae
mov
jmp
dec
rorb
fsubrl
pop
adc
adc
jmp
pusha
shrl
add
rorl
int3
push
shr
pop
dec
lret
int3
inc
jg
or
jge
mov
xor
and
es
mov
jle
sub
and
pop
or
jl
or
adc
ret
pusha
cwtl
inc
test
mov
pop
lea
cmp
jbe
push
hlt
pop
arpl
aaa
xchg
and
add
je,pn
test
jne
mov
push
add
add
sub
clc
add
sub
xor
adc
movb
inc
mov
es
push
sub
adc
dec
icebp
pop
inc
push
or
add
mov
inc
and
push
push
adc
inc
jae
out
mov
mov
adc
jae
add
add
inc
daa
sbb
mov
inc
push
lcall
es
push
xor
je
push
mov
or
cmp
ret
stos
mov
jb
mov
mov
mov
push
push
roll
leave
xlat
inc
adc
push
test
dec
es
inc
fistps
xchg
scas
repnz
jne
cwtl
mov
add
inc
sahf
pop
pop
insb
xor
push
imul
aam
test
xchg
mov
pop
arpl
ss
mov
jg
sahf
fistpll
in
cmp
mov
in
lods
test
stos
bound
addr16
dec
and
int
pushf
mov
push
adcl
and
add
orl
shlb
and
popf
out
and
or
jne
and
mov
sbb
cmpsb
loop
mov
cmp
sbb
fs
roll
xchg
cmp
sub
mov
push
andl
sub
push
or
pop
cltd
aaa
jp
sbb
mov
hlt
or
adc
cmp
roll
pop
imul
push
pop
push
jno
sbb
xchg
mov
push
adc
cld
jmp
pop
mov
xor
push
lahf
inc
orb
mov
push
insb
cli
fucomip
adc
incb
push
mov
mov
add
int3
add
add
xor
cmp
loopne
shrb
sbb
cmp
ds
js
push
sbb
push
pushl
cmp
pop
ja
mov
mov
cmp
outsb
fsubr
pfcmpeq
filds
pop
push
fiaddl
roll
add
lcall
pop
psubd
push
pop
fisttps
xchg
xor
or
mov
rcrb
mov
and
pop
push
inc
adc
jl
rcrb
fbld
jbe
popf
mov
das
push
cmpl
stc
gs
add
inc
inc
fwait
cmp
movsb
or
or
nop
push
out
es
test
aas
cmpsl
popf
mov
push
or
cmc
sub
out
and
mov
push
movsl
xchg
scas
rorl
add
xchg
imull
mov
scas
cmp
pop
je
test
aaa
push
ret
jae
push
inc
inc
jmp
and
push
fs
mov
shll
adc
xorb
loopne
sbb
push
push
lea
cmp
or
adc
inc
test
icebp
in
clc
mov
jbe
mov
push
sar
dec
lea
sbb
add
xor
stc
push
sbb
inc
push
add
mov
loop
hlt
xor
mov
and
je
push
dec
mov
je
les
add
push
add
pop
or
push
or
les
push
scas
lret
mov
enter
arpl
jp
and
sti
pusha
jb
pop
cmp
into
push
or
lea
adc
xchg
jns
rol
add
fmuls
daa
push
adcl
in
xchg
mov
jmp
dec
mov
ffree
jmp
gs
xor
inc
inc
push
roll
and
inc
mov
js
add
popa
ret
arpl
push
sub
sti
ret
outsl
in
es
push
push
popf
test
mov
addl
shl
and
es
dec
andl
inc
lea
or
movsb
sub
push
fisttpll
push
frstor
dec
leave
xor
or
xchg
adc
xchg
fs
push
fsubrs
xchg
push
mov
test
cmc
call
outsb
and
cmp
movb
pop
fimull
or
int3
fstl
mov
into
test
push
xchg
push
andb
add
dec
push
cmp
dec
cmpsl
fstl
sbb
jne
mull
mov
dec
test
rcrb
xor
xor
pushf
neg
add
lret
adc
xor
or
mov
sti
out
add
mov
jnp
das
movl
add
js
mov
into
cmpl
movsb
fimull
andl
aas
sub
inc
xor
dec
fcmovu
add
adc
cmpsb
or
xchg
xchg
out
jno
jl
inc
je
fstps
cmp
mov
push
add
inc
mov
or
jne
adc
popf
jne
push
push
cmp
mov
jp
rclb
stos
fidivs
pop
mov
push
orl
test
test
dec
cmp
jbe
rcrb
push
adc
mov
mov
jg
out
mov
fistpl
dec
cmc
xchg
jne
mov
mov
or
icebp
cmpsl
lods
ds
ss
leave
loopne
fsubs
mov
mov
xlat
push
aas
je
cmp
pusha
sub
sbb
aam
scas
and
lea
inc
pop
test
push
pop
call
test
clc
push
test
jbe
in
in
xor
xchg
outsl
idivl
adc
jne
jmp
sbb
sbb
add
sub
mov
mov
sbb
mov
xor
cli
dec
add
jmp
jnp
jge
outsb
mov
sbb
cs
add
je
pop
in
or
pop
in
stc
mov
fsts
mov
imul
repz
fistl
imul
adc
int
sub
jg
add
mov
daa
add
push
mov
xlat
fstpt
inc
es
mov
sub
decb
pop
dec
push
mov
add
cmpl
lock
xchg
bound
and
rcr
pop
sbb
pop
cs
lret
pop
fs
push
lods
or
inc
decb
out
cmpb
or
or
jmp
mov
push
add
push
adc
adc
or
push
cmp
std
rolb
std
push
mov
adc
mov
repz
push
popa
fildll
movsl
aas
add
inc
arpl
mov
pop
xchg
sub
mov
push
pop
push
push
lock
xchg
jb
pop
push
push
pop
pop
pop
cs
lret
pop
pop
pusha
pusha
fs
pop
or
adc
pop
and
fildl
xor
or
push
add
dec
inc
sbb
psubb
push
inc
daa
add
scas
mov
lods
fisttpll
outsb
sti
cmp
sub
lock
sbb
jmp
push
rcrl
adc
push
mov
sbb
add
push
xor
push
or
inc
adc
popa
dec
jns
xlat
int3
adc
pusha
sbb
mov
les
stos
add
cs
add
daa
mov
or
leave
sbb
xor
divb
jo
cs
sbb
ljmp
cld
sbb
inc
push
jge
inc
mov
or
es
mov
stc
sub
enter
or
or
and
add
push
sbb
lea
adc
or
add
sbb
push
pop
loope
je
lock
test
mov
mov
imul
iret
push
xor
sti
push
inc
ss
sti
push
addr16
pop
push
mov
mov
inc
jae
sub
js
rep
inc
or
test
sbb
sahf
xchg
cmp
inc
fucomp
push
data16
je
adc
loope
in
and
push
mov
push
jo
jg
adc
add
ss
push
lock
in
sbb
out
pop
inc
push
ljmp
xor
xor
jg
mov
adc
or
mov
jae
nop
mov
cmp
je
mov
pop
mov
mov
inc
pushf
add
pop
sbb
xor
push
lret
push
sbb
test
cmp
adc
fisubl
mov
sbb
pop
je
jnp
sbb
adc
ds
add
push
jae
add
dec
adc
dec
sarl
call
mov
lock
cmp
jne
or
clc
adc
in
dec
insb
jecxz
pop
jbe
jo
mov
adc
sbb
dec
ret
movsl
test
test
je
or
iret
or
daa
jp,pn
mov
add
cmp
sub
js
pop
xchg
je
or
sbb
in
incl
cmp
inc
test
cmp
push
adc
hlt
sub
mov
push
xor
jbe
mov
jne
mov
or
mov
add
hlt
cmpsl
add
out
pop
in
je
divb
call
sub
mov
hlt
jle
or
push
inc
add
add
in
data16
shlb
test
add
sub
jge
jb
xor
or
imull
rorl
inc
hlt
or
mov
mov
lock
hlt
cltd
inc
adc
or
push
mov
sub
inc
inc
mov
jp
decb
ljmp
loope
pop
enter
pop
out
xor
enter
sahf
test
mov
sahf
sbb
pop
call
pop
lods
outsb
outsl
mov
and
je
pusha
xor
push
adcb
pop
xchg
jg
fcoms
xchg
or
xlat
lea
add
pop
mov
or
cmp
rclb
pop
xchg
add
mov
je
in
rclb
hlt
test
mov
ljmp
add
stos
call
pop
add
mov
fmuls
test
inc
pusha
scas
xchg
push
orb
lds
gs
jns
add
mov
lds
lock
and
mov
movsl
movsw
lret
push
adc
addb
sub
sbb
scas
enter
int3
test
inc
push
push
in
adc
pop
add
stos
mov
sbb
push
adc
pop
push
test
pusha
es
icebp
adc
jb
jae
inc
push
popa
mov
mov
arpl
mov
es
clc
jmp
sub
pop
in
push
push
orl
sbb
inc
add
mov
mov
loopne
sbb
out
adc
mov
add
push
jmp
mov
imul
clc
and
mov
loop
sbb
inc
pop
push
fadd
lret
dec
sbb
mov
push
adc
xor
or
dec
mov
shll
jns
shll
cmc
rcrb
jmp
in
and
enter
pop
inc
and
lds
in
shr
pop
mov
jle
jmp
xchg
cmp
push
sub
adc
dec
and
pop
push
fimuls
xor
mov
cmp
inc
fimull
lret
xor
sub
mov
call
push
mov
stc
lods
loop
out
push
sub
push
pop
aam
and
addl
sbbl
sbb
in
or
dec
pop
pushf
fiadds
cmp
jbe
push
mov
in
test
aaa
xchg
inc
mov
test
jl
jmp
sbb
test
inc
mov
jmp
mov
sbb
add
add
loop
ret
or
stos
and
into
mov
and
mov
cli
cmp
out
imul
jne
adc
stc
mov
jne
push
jne
xor
imul
sbb
dec
pop
sbb
and
test
daa
sbb
lret
sbb
stos
push
rep
clc
int3
add
mov
add
cmp
push
jmp
aaa
cmovno
dec
clc
inc
push
xor
dec
pop
out
mov
and
inc
ds
inc
call
jg
push
xor
clc
lods
or
jmp
push
fs
cmp
loope
mov
add
pop
mov
dec
add
pop
or
leave
push
in
js
ret
or
or
loope
dec
je
sbb
dec
loope
or
hlt
push
cmp
out
or
out
add
aas
add
rolb
push
int3
push
sbb
sbb
out
cmp
movsb
jecxz
inc
inc
mov
inc
push
mov
jle
cld
es
inc
inc
rol
and
mov
xlat
mov
sbb
and
sbb
popa
pop
leave
sub
movsb
mov
stc
cmp
fstps
xchg
lock
push
fs
adc
inc
xchg
dec
fdivs
rorl
add
push
lcall
pop
jmp
push
push
clc
add
mov
inc
dec
cmp
repnz
or
xor
sbb
pop
jge
jne
pop
lock
jle
jne
test
xorb
add
push
push
push
add
mov
mov
fnsave
test
testb
adc
iret
mov
and
cmpsl
jo
pop
push
je
inc
iret
add
jo
rcrb
repz
inc
cmp
call
stos
xchg
clc
loop
fadd
daa
push
lcall
test
inc
addr16
in
fimull
push
mov
mov
mov
adcl
dec
xor
sbb
sub
jp
or
dec
loopne
jmp
jnp
in
stos
or
cmp
inc
adc
mov
mov
inc
jle
enter
add
xchg
or
mov
in
xor
rorb
outsb
enter
or
jecxz
or
bound
lret
addr16
mov
mov
mov
int3
and
fmuls
push
cmpsl
and
stos
icebp
sahf
cmpsb
xchg
add
or
mov
jmp
jo
add
pop
mov
and
stos
popa
jle
push
lds
lock
xlat
data16
dec
cld
jl
push
leave
mov
xor
push
subl
push
outsb
loopne
nop
sub
and
pop
stos
push
pop
adc
test
add
popa
sbb
or
dec
sahf
jnp
divps
int3
incl
adc
ja
cmc
pushf
loopne
push
and
xlat
mov
push
sbb
jl
pop
sbb
jb
inc
xor
adc
leave
aas
mov
jge
cmp
cmpb
mov
pop
movl
test
adc
push
mov
add
and
adc
enter
push
mov
cmp
and
sub
xchg
inc
and
add
cmpsl
or
aam
inc
sbb
pusha
pusha
cmp
ljmp
arpl
add
cmp
sbb
jnp
inc
xor
add
jo
push
fidivl
or
pushf
nop
sbb
mov
or
lds
lret
mov
ds
xor
dec
mov
cmp
mov
iret
push
stos
xlat
and
and
ret
shrl
xchg
xchg
or
or
shrl
aam
add
js
shlb
sbb
cmp
sbb
dec
scas
test
imul
mov
sbb
sub
mov
fdivrl
mov
and
stos
or
push
sub
test
inc
or
or
jge
in
fs
add
popa
into
xor
cmpsl
pop
leave
mov
clc
or
sub
add
sub
adc
inc
push
and
dec
dec
andl
push
or
inc
jnp
subl
dec
or
and
inc
sbb
mov
adc
js
sbb
lock
rorl
pop
inc
js
xchg
cmpsb
rcr
fwait
into
cs
and
or
addr16
and
jnp
aaa
push
inc
mov
or
clc
loopne
inc
sbb
or
add
and
and
sub
pop
add
mov
dec
adc
dec
push
cltd
mov
mov
loope
push
lcall
mov
xor
adc
sub
ret
test
lcall
inc
ret
push
scas
test
lods
imul
in
movsb
cmp
xchg
shlb
mulb
dec
cld
jge
push
sub
dec
pop
test
and
push
xchg
mov
add
push
pop
jne
inc
hlt
jnp
lods
in
push
adc
js
les
dec
mov
sbb
dec
cltd
jcxz
inc
fwait
jl
add
mov
mov
sbb
mov
cmp
shrb
sbbl
mov
or
jmp
xchg
lods
and
or
add
bound
les
mov
lds
inc
outsl
mov
loopne
mov
roll
test
aad
jp
jo
add
and
loope
cmpl
ja
adc
and
fsubrl
cmpb
dec
jbe
pushf
js
cmpl
sbb
pop
shll
adc
and
imul
dec
test
movsb
xor
pop
sarl
test
mov
inc
lods
add
jg
fwait
cwtl
dec
lods
or
push
mov
xor
mov
inc
loope
sbb
inc
sub
push
pusha
mov
or
dec
cltd
jmp
sbb
rclb
push
add
mov
push
sub
movlhps
into
nop
sub
movsl
pop
or
out
insl
lock
or
pop
jmp
adc
push
sub
fcoms
js
xchg
lods
scas
jge
out
in
mov
push
sub
xchg
lcall
cmp
inc
push
lock
fcoms
inc
arpl
int
and
clc
jmp
inc
jbe
adc
jbe
dec
data16
jle
pop
add
jecxz
adc
cmp
inc
loopne
sub
cmpsb
mov
add
bound
sub
pop
push
nop
fmul
sub
sbb
pop
jbe,pn
fdivl
ret
mov
mov
mov
dec
sbb
mov
je
mov
jo
adc
push
pusha
push
dec
mov
pop
mov
mov
mov
jno
enter
mov
inc
sbb
jne
cmp
push
fsubr
adc
std
nop
outsb
mov
jmp
dec
bound
loopne
movsb
sarb
jno
pop
test
mov
shrb
inc
mov
xchg
xchg
add
in
pusha
xchg
mov
stos
mov
js
add
adc
push
sub
pop
js
push
cmp
pop
jle
loopne
icebp
test
or
adc
add
jb
lea
ss
adc
addr16
sbb
and
pop
add
xchg
js
mov
push
cltd
arpl
daa
insb
pop
sbb
sub
lahf
dec
loop
cltd
push
shlb
ret
push
sub
mov
dec
or
xor
adc
or
fbstp
dec
adc
jo
aas
lds
int3
pushf
mov
nop
fisubrl
sbb
fs
test
xchg
lock
pusha
xor
sub
xchg
mov
decl
pop
imul
inc
and
jne
mov
popf
cmp
arpl
stos
sub
outsb
popl
xor
and
cmp
js
mov
push
mov
pop
or
sarl
sub
sub
cmp
rcrb
add
roll
cmp
mov
das
inc
jno
movsl
movsb
push
pop
or
add
fstl
ljmp
cmp
inc
push
shlb
xchg
mov
jb
mov
mov
inc
push
rcrb
fstl
adc
aad
add
mov
mov
cmp
pushf
push
test
fldcw
mov
inc
addr16
addb
ret
xchg
scas
xchg
push
jp
jne
or
hlt
sub
add
out
xor
loopnew
add
xor
shlb
push
pop
mull
mov
dec
mov
sbb
fdivs
sbb
and
imul
xchg
out
loop
mov
push
in
add
out
ret
repz
push
cwtl
xor
andb
xchg
pop
adc
mov
add
inc
mov
arpl
add
je
fistl
inc
dec
and
in
adc
adc
adc
fistl
or
dec
pop
aaa
enter
cli
push
in
add
out
mov
pop
mov
lods
cld
jmp
push
ds
cmp
and
fst
neg
sbb
inc
push
leave
clc
outsb
pop
pop
jp
cmp
mov
enter
push
out
pushl
jmp
mov
mov
or
dec
dec
lods
enter
or
add
jge
lea
in
adc
add
aam
push
sbb
arpl
into
and
add
stos
cmp
popf
xchg
pop
adc
jae
dec
xchg
adc
orb
dec
sub
jb
adc
es
adc
enter
adc
adc
clc
and
adc
mov
rorl
cmpw
je
sbb
lret
aas
mov
out
mov
lret
pop
lret
dec
dec
or
xor
pop
xchg
orb
mov
inc
loop
repz
jo
aad
into
shl
nop
mov
les
test
mov
mov
jg
in
outsl
imul
cmp
jl
inc
and
das
jmp
cmp
mov
sub
dec
sti
jge
cld
cmp
bound
rorb
or
sahf
scas
push
mov
movsl
pusha
es
mov
js
rorb
in
mov
mov
and
cwtl
push
rcrw
or
stos
sbb
xorl
call
xchg
push
pushf
out
gs
fldenv
sub
lods
sub
xor
sbb
ficomps
xor
mov
dec
nop
xor
lods
popf
cmp
sbb
test
pop
mov
addl
xor
and
mov
test
sbb
dec
pushf
out
push
inc
aas
add
lea
jne
mov
push
push
push
xchg
imul
aam
clc
push
sub
mov
loope
mov
rorl
bound
scas
out
lods
add
mov
and
mov
cmp
and
pushf
leave
jno
mov
mov
testb
mov
lods
cmpsb
test
mov
cmp
inc
and
cmpb
faddp
mov
lret
adc
sbb
je
mov
pop
and
daa
ss
call
decb
mov
jmp
aad
out
aas
pop
or
and
out
dec
andl
ret
mov
xor
fistps
sub
cmp
cmp
into
sbb
and
or
pop
add
ja
lea
icebp
xlat
sbb
jmp
cmp
sub
ds
or
or
inc
stos
jb
dec
push
pop
pop
mov
jno
or
jl
sbb
fdiv
push
out
bound
xor
cmpb
push
and
mov
into
pop
test
sub
ret
pop
lock
in
pop
and
stos
push
add
xor
and
sarb
pop
add
xorb
lock
xor
mov
adc
pop
adc
mov
lock
push
lds
pop
adc
or
and
add
loopne
in
xor
push
and
and
dec
pop
test
mov
cmp
push
mov
push
jge
lahf
rorb
scas
and
movsb
test
hlt
add
xchg
push
lcall
sbb
pop
inc
stc
shll
xor
call
mov
adc
push
pop
jnp
test
push
inc
arpl
inc
arpl
iret
jo
aad
inc
adc
stc
rorl
int
push
pop
cmp
sahf
popa
lea
or
dec
mov
pop
inc
sbb
add
stos
into
sbb
pop
adc
xchg
repz
add
decb
lcall
test
je
push
push
mov
cmpl
pusha
xlat
lcall
inc
sbb
adc
or
cs
out
insl
sub
add
lock
inc
rorl
and
rorl
cmc
iret
inc
push
into
or
sub
add
clc
das
jmp
stc
or
push
cmp
xorl
insl
and
adc
call
push
fdivrp
pminsw
hlt
jbe
stc
xor
popa
add
sub
xor
dec
xlat
sbb
rorl
mov
ljmp
std
outsb
cs
push
sbb
pop
and
jne
mov
add
or
ror
ret
pushf
imul
push
jns
sbb
sub
lods
add
sub
add
popa
bnd
test
sbb
mov
jmp
in
bound
sbbl
dec
orl
mov
push
scas
or
sbb
xor
cli
pop
mov
adc
dec
fsubl
andl
mov
sub
lea
mov
lea
test
dec
mov
and
ret
fisttpll
aas
mov
add
mov
dec
fisttps
popa
pop
xor
in
push
cmpsl
popa
stc
mov
cmp
xor
push
mov
in
xchg
jns
es
push
push
inc
push
inc
call
test
mov
out
adc
inc
test
xchg
dec
or
add
pop
xor
dec
xchg
push
jne
enter
lcall
jl
sub
in
test
sub
dec
aas
or
std
adc
insb
stos
cmp
aaa
in
movsl
adc
out
sub
out
dec
sbb
shrb
xor
push
pop
pop
pop
adc
ljmp
add
adc
cmp
loope
xor
add
pop
add
push
jecxz
inc
sbb
jne
add
jmp
xlat
xor
add
aad
xor
lcall
and
sbb
mov
fcmovnbe
cmp
xchg
iret
fs
jmp
or
inc
or
ds
dec
adc
inc
add
push
fstps
pusha
xor
insb
xlat
ret
sub
dec
je
dec
xor
pop
rorl
dec
das
sbb
shr
enter
inc
orl
jl
pop
push
inc
cmc
xchg
add
cltd
lds
divl
jae
lea
outsl
call
cld
jmp
cmpl
sub
shll
and
test
nop
mov
jnp
imul
clc
fmull
out
adc
sbb
dec
cmp
sahf
mov
pop
test
cltd
or
inc
test
fs
or
xchg
xchg
lock
ficoml
incb
add
add
popf
gs
jl
xlat
or
push
sbb
sub
sbb
scas
adc
pop
pusha
cmpsb
sub
push
push
and
pop
xchg
lock
sub
loopne
jo
pop
std
ds
jnp
jb
adc
or
add
xor
popf
sbb
pusha
add
cmp
sti
add
or
in
inc
ljmp
mov
repz
repnz
jp
lea
pushf
mov
popa
xor
cmp
and
mov
lret
mov
in
pop
notl
add
mov
daa
aam
push
sub
shrl
stc
push
mov
and
fistpl
mov
push
push
push
inc
icebp
sub
movsl
push
je
test
rcrb
jmp
pop
dec
sub
jmp
cmp
mov
cwtl
iret
xchg
js
add
push
stc
xchg
test
and
outsb
or
rclb
pushl
xchg
dec
test
pop
add
fiadds
stc
push
test
fisubrl
dec
imul
test
fldl
dec
sbb
cmp
fistps
cmp
je
cmp
sbb
leave
lods
packuswb
or
scas
jno
mov
orl
and
cli
decb
sti
cmp
leave
and
add
cmp
pop
sbb
add
inc
push
nop
or
push
imul
adc
mov
ror
push
or
daa
lea
xchg
push
pushf
lds
imul
push
xchg
sub
sub
outsl
adcb
jno
lea
sub
jmp
in
testl
aas
mov
xlat
sbb
xor
mulb
shlb
inc
adc
lahf
imul
sbb
sbb
ja
sti
outsb
dec
pop
or
jb
je
push
loop
or
and
mov
data16
jbe
add
pusha
or
cmp
cld
je
test
xor
push
jns
fdivr
jne
mov
push
test
cmp
dec
or
pop
rorl
je
cld
cmp
addb
stos
add
pop
test
cmc
dec
xor
pop
daa
call
mov
dec
mov
hlt
hlt
iret
popa
in
jns
or
adc
or
pop
cmp
add
add
mov
cmp
call
or
inc
sbb
fsts
mov
push
js
fistl
dec
rorl
cld
loopne
fnstenv
mov
sbb
rcr
jbe
repz
adc
adc
fmuls
xor
mov
out
fcoml
xchg
or
ja
push
cmp
mov
adc
adc
fstpl
or
jne
lea
ret
pop
inc
mov
pop
lock
cs
pop
pusha
push
mov
xchg
insb
push
mov
hlt
neg
sbb
and
bnd
sti
mov
nop
push
sub
push
adc
insb
les
jo
mov
test
test
js
inc
or
inc
jae
sub
xor
pslld
jg
add
sbbb
sbb
daa
xchg
outsl
insl
push
inc
into
out
insb
fcmovnu
arpl
aad
mov
cmpl
jne
cmp
jbe
or
jne
add
mov
fimuls
cld
sub
jle
aaa
hlt
dec
add
push
add
in
ds
data16
push
xchg
shr
push
fwait
popa
inc
cmc
jmp
add
jl
add
or
cmp
cmp
or
sbb
fbstp
jp
ja
cwtl
sbb
dec
sub
cs
pop
mov
cmp
or
push
out
lea
push
mov
dec
dec
pop
pop
xchg
ljmp
cwtl
jg
pop
cmpsb
js
xor
pop
popa
sub
imulb
cltd
addb
rcl
jno
jo
or
punpcklbw
gs
add
mov
add
add
jnp
sti
scas
ret
add
add
or
movsl
clc
and
pop
inc
dec
pop
or
mov
sbb
test
mov
aas
out
ds
pusha
adcb
mov
dec
outsb
inc
sbb
popf
mov
fisttpl
cmpl
xor
push
mov
insb
xor
push
mov
mov
and
out
push
les
rcl
adc
xlat
fdivr
push
imul
mov
and
sub
or
mov
mov
push
movsb
push
inc
insb
lock
clc
jmp
and
pop
add
test
and
addl
sbb
jno
pusha
addr16
mov
jb
addr16
je
mov
push
cmp
cld
mov
inc
xor
or
sbb
loop
cmp
sbb
mov
or
mov
dec
lcall
mov
in
or
add
add
and
dec
cmp
ficompl
pop
mov
add
or
cmp
cmp
loopne
out
add
mov
mov
push
incl
or
push
xor
mov
lea
mov
sbb
mov
scas
add
or
mov
std
sbb
sbb
mov
test
outsl
lods
and
fsubrs
out
pusha
and
sbb
aam
add
outsl
mov
xor
dec
aas
pop
mov
jbe
jp
mov
dec
ds
icebp
enter
pushl
negb
and
jmp
push
sahf
add
mov
imul
js
hlt
adc
cmp
xor
adc
lods
hlt
pop
sbb
test
pop
movsl
rcrl
pusha
jbe
jge
dec
cmpsl
dec
mull
call
dec
dec
push
packsswb
mov
mov
je
or
orl
out
xor
inc
scas
xor
and
sbbl
xchg
add
pop
fcmovbe
cmovge
ja
addr16
xor
je
mov
pop
jl
push
and
mov
sub
mov
mov
pop
mov
adc
lea
shll
pushf
xchg
lock
mov
pop
roll
and
push
jecxz
push
leave
and
pusha
pop
loope
faddl
push
jno
or
adc
push
inc
jg
jp
or
in
out
lods
mov
mov
add
les
out
push
aam
mov
sbb
fsubs
popf
dec
add
fsub
dec
xchg
rclb
loope
or
sahf
in
hlt
xchg
ds
data16
adc
and
mov
mov
push
jge
mov
lea
mov
dec
jae
mov
jle
cmp
inc
jle
push
push
add
push
cmp
dec
mul
push
sbb
or
lea
std
mov
test
sbb
std
add
or
rcl
ret
mov
push
or
xchg
rcrl
sub
sti
jb
mov
int3
mov
sub
or
test
cwtl
cli
fcomps
or
pop
jo
into
mov
test
sbb
jno
mov
pushf
xor
je
adc
push
xor
sub
cmp
xchg
and
or
je
dec
adc
mov
jae
lea
pop
imul
ja
cmpb
jne
fidivl
clc
out
or
lea
sbb
fcoms
test
jae
call
push
in
inc
sbb
test
add
pop
mov
lea
sti
push
lcall
popf
sub
ret
out
out
pop
add
je
xor
jno
shl
dec
mov
scas
xor
push
add
jmp
push
inc
sub
dec
out
push
adc
enter
push
xchg
xor
add
sbb
push
adc
sarl
add
mov
xchg
xor
dec
addr16
ds
ret
add
mov
cmpsb
pop
push
sbb
adc
out
and
sbb
shrl
je
mov
rol
mov
adc
add
adc
jne
adc
inc
mov
call
das
dec
and
sub
and
lods
pop
push
sbb
addl
fmul
mov
jl
lea
cmp
jle
movsl
sub
lds
ja
inc
add
pop
adc
into
sahf
fimuls
mov
cmp
adc
fsub
add
dec
or
add
lods
add
xor
push
inc
pop
in
data16
ret
dec
adc
daa
mov
lret
roll
mov
scas
imul
add
sbb
mov
mov
or
jmp
inc
cmpl
adc
outsl
fs
sub
xchg
xorw
je
inc
and
data16
sbb
shlb
jg
push
pop
rolb
jns
push
ret
inc
inc
adc
mov
jmp
push
je
dec
add
jbe
add
jmp
dec
add
or
xchg
clc
std
incl
mov
sbb
jae
mov
xchg
movsb
and
fistps
add
mov
dec
subb
push
mov
push
mov
mov
rcrl
stc
cmp
mov
add
jb
push
jae
lea
push
sub
mov
dec
and
push
pusha
cmp
stos
or
pusha
xchg
inc
ja
sbb
jmp
ret
andb
jle
ret
test
fdiv
loopne
jge
pop
cmpsl
imul
add
cmpb
xor
fnstenv
inc
jmp
xchg
rcrb
push
cmp
cmp
sub
pop
jne
ss
pop
lea
xor
lods
sub
dec
sti
movb
mov
lcall
fdivs
sub
sub
out
push
dec
arpl
jo
inc
aad
out
test
xchg
cmc
insb
idiv
call
pop
cltd
idiv
add
leave
out
push
cmc
dec
in
sti
sbb
dec
pop
add
or
jae
push
sub
dec
mov
xchg
addb
push
sub
loope
xor
add
pop
push
subb
adc
push
lea
loope
ret
mov
lret
and
push
test
xlat
push
mov
negb
mov
push
aad
xor
mov
sub
mov
insb
adc
cltd
push
movsl
xchg
imul
cltd
xchg
int
or
je
xor
jge
cmp
cmp
adc
test
lahf
mov
sub
lret
inc
outsb
cmpb
dec
insl
xor
movzbl
jge
or
push
mov
cmp
sub
push
inc
or
add
stos
adc
es
lock
movsb
xor
int
or
sahf
dec
sub
or
adc
dec
mov
jae
cmc
imul
add
sbb
test
imul
addr16
ja
sbb
push
add
pop
fdivs
adc
outsl
or
cmp
in
addb
loopne
imul
add
dec
sbb
dec
adc
push
cmp
sar
add
aad
gs
mov
add
scas
fcoml
movsl
xor
leave
sbb
mov
cmp
repz
cmp
mov
sub
cld
cmp
cmp
sub
add
rolb
adc
sub
test
les
jmp
add
decl
jmp
sbb
cmp
decl
pop
or
mov
xor
xor
lret
or
jle
pop
in
dec
or
jb
dec
into
jne
into
sub
mov
adc
mov
rorb
sbb
dec
and
inc
shrb
add
bound
ds
or
and
add
jno
sbb
xor
inc
sbb
adcl
repnz
or
incl
sub
sbb
push
mov
sub
shlb
cmp
xchg
fs
xchg
into
dec
cmpl
pushl
imul
sbb
adc
pushf
mov
pusha
jo
adcl
sbb
and
icebp
hlt
sbb
sub
movsl
pop
adc
add
lea
push
loopne
popl
andl
cli
sub
rclb
ss
popa
mov
icebp
fildl
sbb
jmp
cmc
popa
in
push
adc
into
adcb
xchg
or
adc
orl
inc
inc
push
cli
nop
pop
pop
adc
dec
test
outsl
or
mov
dec
sub
inc
lods
push
mov
mov
pop
stc
mov
xor
and
std
sbb
test
inc
leave
enter
push
pop
das
mov
add
sbb
mov
xchg
mov
xor
jo
rcrl
add
jecxz
lret
in
mov
rclb
jae
out
mov
out
fimull
sub
push
dec
xor
sub
jno
jge
adc
jge
leave
je
jne
or
or
ljmp
inc
mov
mov
or
sti
mov
scas
jle
jne
adc
jne
xchg
push
jb
daa
lea
inc
adc
sub
cwtl
and
js
mov
mov
xchg
add
xchg
inc
add
fmuls
daa
shrl
pop
inc
gs
sti
jo
shrb
add
inc
testb
out
std
push
repnz
test
and
cmp
cmpl
push
and
sbbb
cmp
and
lcall
push
or
mov
pop
sub
cmp
jne
mov
mov
or
outsb
mov
push
pop
cmp
push
in
leave
ret
inc
jecxz
rolb
sub
or
dec
xchg
mov
addr16
sub
out
or
loope
xor
jge
jge
sarb
adc
push
test
pop
fldl
push
fisubs
mov
or
in
lock
mov
mov
push
add
dec
movsb
or
push
into
fs
rcrl
stc
stos
push
aaa
popf
and
pop
fwait
into
rcrl
ret
adc
ljmp
cmp
int3
pop
call
and
scas
sbb
mov
add
mov
jp
or
hlt
or
jo
out
sbbl
test
push
mov
xchg
dec
idivb
or
cmpl
icebp
lcall
and
adc
std
or
sbb
aas
push
clc
push
xor
adc
pop
stos
daa
fdivrl
sub
push
jecxz
push
ficoms
sub
popa
add
cmp
mov
jmp
pusha
in
push
shll
or
leave
lds
jmp
enter
jecxz
test
lea
scas
mov
je
mov
ss
push
fstl
and
cmpsb
add
mov
xor
add
push
xor
xchg
rorb
xlat
js
adc
pop
aam
xchg
ds
add
push
add
mov
inc
out
inc
mov
pop
jle
mov
xchg
adc
pusha
ljmp
imul
or
jmp
add
sub
adc
lds
xor
pop
movl
push
mov
lea
push
cmova
enter
ja
cmp
test
ret
and
das
pop
push
inc
dec
mov
setg
cltd
mov
sub
pop
dec
inc
sbb
repz
mov
xchg
test
add
jnp
jmp
js
mov
xchg
dec
ss
add
sti
dec
jb
add
clc
xor
add
push
mov
aad
push
jmp
add
lods
add
fsub
loope
push
mov
pop
add
fs
cmc
push
and
mov
popa
lretw
dec
sbb
wbinvd
mov
mov
pop
loop
jle
jl
ret
and
daa
cmp
mov
loope
mov
jp
xchg
addr16
cmp
mov
mov
jae
ja
xchg
inc
subl
xor
adc
into
sbb
fisttpll
and
gs
push
lea
and
add
xlat
jo
and
movsl
fimull
jecxz
jg
sub
jnp
xchg
and
add
push
pop
mov
movl
xor
or
mov
dec
mov
shl
dec
call
and
jbe
sbbb
fcomps
xchg
jb
push
xlat
fsubrs
nop
mov
je
xchg
push
dec
push
cmp
xchg
jae
inc
fadds
jp
adc
cld
mov
push
pop
popf
faddl
movsb
sub
test
mov
data16
jmp
into
out
push
loope
inc
add
shll
xorb
div
pop
int
or
cmp
mov
je
adc
sbb
je
call
add
inc
jg
mov
adc
sahf
jl
mov
inc
mov
imul
push
jne
test
rcrb
and
in
ss
mull
sub
dec
dec
jns
sbb
jae
iret
push
shrb
testb
sub
imul
mov
add
jmp
push
pop
and
and
adc
xorl
mov
push
rorl
lods
xchg
mov
cmp
cs
je
inc
js
xchg
xor
add
ret
fisubl
shll
dec
mov
popa
mov
mov
out
add
xchg
or
sbb
add
aam
push
xchg
js
push
jo
xor
in
sub
or
sbb
mov
mov
and
push
sub
push
cmpsl
mov
sbb
jo
subl
push
and
imul
lock
xor
adc
push
test
push
and
xsha256
cmpsb
adc
and
je
add
sbb
push
xor
call
add
mov
pop
mov
lods
add
fcompl
dec
js
inc
push
dec
outsb
roll
push
cmp
and
xchg
inc
in
mov
jnp
mov
mov
pop
loope
roll
push
push
push
dec
enter
out
pusha
dec
xchg
sub
push
mov
cmpb
add
cmp
mov
inc
dec
sbb
or
lods
pop
loop
push
shrb
xor
enter
rol
or
mov
mov
movb
xchg
addr16
jne
cld
in
loope
add
cmp
and
mov
cmp
sbb
push
jne
es
cmpsl
jl
push
leave
js
jne
adc
aaa
or
or
jmp
xchg
jne
or
jne
clc
mov
xchg
decl
add
dec
cmp
mov
int3
xor
insb
popf
xor
lahf
fcompl
sub
sub
sbb
push
add
xlat
rolb
lret
fsubs
sbb
jo
out
ret
repnz
cld
shrb
notb
popa
inc
add
mov
xor
daa
dec
add
jo
cmp
jmp
xchg
clc
ja
hlt
adc
out
inc
mov
jge
push
dec
push
jnp
sub
xor
cmp
sub
mov
in
in
mov
in
mov
mov
in
or
push
xor
fldt
inc
movsl
loopne
sbb
lods
or
mov
out
push
push
sbb
into
into
cmpl
adc
sarl
mov
inc
jo
out
pusha
das
adc
aas
and
mov
and
adc
xchg
pop
mov
lds
pop
push
cmp
push
pop
cmp
mov
push
inc
dec
jl
and
sub
insl
cmp
sbb
js
pop
and
fldenv
and
xchg
sub
adc
mov
lock
ret
dec
aam
push
rorb
sub
and
dec
andb
xor
adc
andl
mov
cmpsb
cli
rolb
push
jne
dec
scas
mov
cmpsb
cli
or
pop
sub
sbb
jne
int
movsl
jns
dec
push
jns
sahf
sub
or
sbb
es
js
dec
insb
jne
ds
loop
jne
scas
ss
popf
test
inc
jns
mov
outsl
dec
cmp
and
fs
test
cmp
je
add
orl
jne
subb
xorl
push
rcl
adc
mov
imul
data16
scas
xchg
cmpb
cmp
inc
fists
jnp
push
inc
addr16
cmp
cmp
fsubl
mov
cmp
jl
mov
mov
loope
divl
and
mov
fidivs
int3
ds
sbb
pop
sbb
in
adc
cmp
dec
fisttpll
pop
fsubrs
adc
jns
pop
push
push
or
jmp
inc
inc
sbb
out
stc
mov
loopne
adc
or
lea
dec
loope
or
inc
loopne
pop
int
mov
out
xor
push
mov
add
and
sahf
jge
add
dec
or
mov
or
add
shl
repnz
add
inc
add
in
pusha
into
es
movsl
adc
jge
jg
dec
push
fwait
jb
mov
pop
fisttpl
jl
add
dec
pop
push
cmpb
movb
addb
sub
vpcmpgtw
mov
subb
test
sbb
xchg
sbb
add
cmpsb
imul
outsl
je
jle
jl
inc
cmpsb
cs
or
call
subl
push
loope
push
sti
or
add
dec
int3
lahf
imul
mov
scas
sbb
shrb
and
adc
push
idivb
or
movb
sbb
test
int
mov
sbb
xchg
xchg
jae
jbe
pop
push
fadds
sbb
push
fs
je
fs
push
fs
push
push
pusha
push
cmp
mov
jp
mov
adc
sub
sbb
stos
rolb
inc
push
insb
sbb
dec
pop
pop
mov
dec
pop
clc
cs
sbbb
dec
adc
push
mov
sbb
inc
in
aam
jne
cmp
lret
daa
inc
xor
pop
adc
push
cltd
add
out
or
adc
addb
pop
test
mov
pop
pop
lea
add
inc
xor
clc
add
pop
add
jne
pop
and
mov
and
dec
sbb
dec
nop
push
ret
pushl
add
or
adc
adc
jl
jl
sbb
pop
add
in
push
fldt
pop
push
or
cmp
jo
push
mov
and
test
and
nop
and
mov
in
xchg
es
and
jp
cmp
or
je
sub
jnp
cmpsb
cwtl
and
das
xorl
or
fldl
pop
jne
orl
cmpl
pop
stos
jmp
and
pop
add
sti
xchg
inc
xchg
mov
xchg
inc
daa
incl
dec
xchg
dec
in
mov
stc
fldl
frstor
outsl
pop
sar
lds
add
lods
cmp
in
fisttps
sub
xor
in
je
int
xchg
les
mov
ja
sbb
adc
sub
push
jne
mov
sub
adc
dec
jne
cmp
mov
data16
cmp
or
xor
mov
cmpsl
jge
xor
ja
fwait
repnz
push
lahf
jo
cld
pop
and
fs
dec
das
push
js
mov
imul
cmp
daa
shll
movsl
adc
invd
add
fidivrl
rcr
add
sub
sbb
into
dec
push
stos
fbld
mov
add
xchg
or
sbb
push
ljmp
in
aam
aas
push
or
cli
push
mov
cmc
out
fidivrs
addr16
lods
pop
mov
sub
nop
inc
fwait
pop
sub
nop
push
roll
mov
orb
dec
dec
adc
xchg
xor
or
inc
pop
jbe
aad
mov
inc
xor
fsubl
pop
cmp
push
or
xlat
insl
adc
test
lret
or
roll
dec
adc
test
push
roll
sub
enter
shr
sbb
cmpsb
or
mov
sub
test
je
and
sbbb
push
lea
add
bound
loopne
jo
pushl
and
mov
jno
orb
lods
adc
push
int3
lock
inc
inc
outsl
sti
sbb
inc
lock
adc
inc
cmc
and
or
adc
or
nop
mov
pusha
mulb
sub
fs
enter
insb
push
mov
insb
push
adc
out
movsb
xor
dec
cmp
jnp
pop
pop
lds
mov
testl
je
cmp
cmp
imul
jne
or
adc
arpl
or
sbb
adc
pop
mov
hlt
sti
push
shrb
mov
inc
and
jo
push
jne
andl
xor
add
push
movsb
subl
adc
jnp
lock
xchg
or
lock
lock
push
mov
mov
movsb
dec
mov
mull
push
push
pop
xor
xor
mov
push
sbb
aam
cmp
jae
cmpl
in
push
mov
lcall
leave
add
add
push
and
orb
test
sub
xor
push
lods
popf
movsb
cmp
xor
aas
or
or
pop
lods
sbb
test
push
xchg
mov
inc
fcoms
sbb
sbb
or
cmp
idivl
and
and
test
jno
or
aas
jbe
push
jne
inc
cmp
pushf
xchg
xchg
out
sbbl
adc
mov
insb
lret
inc
push
mov
push
test
popa
in
loope
in
xchg
and
push
arpl
sub
call
adc
xor
test
xchg
mov
je,pn
push
add
mov
mov
push
cmp
cmp
jbe
imul
fidivrs
test
sub
pcmpgtd
cmpb
fwait
sbb
addl
jle
cmp
sti
imul
xchg
fisubl
pop
cwtl
push
out
adc
sub
cmp
push
or
add
enter
fisubl
adc
pop
fcoms
push
notl
mov
orb
fdivl
add
lret
int3
push
dec
icebp
adcl
jb
nop
sbb
sub
fimuls
pop
cmp
sbb
fcmovnb
inc
shlb
add
cmp
mov
mov
fcompl
pop
pop
sub
cmp
dec
pop
add
mov
or
sub
sub
or
ss
ret
sub
add
lods
dec
addr16
mov
int3
mov
stos
ficoms
add
or
cmp
and
jbe
and
cmp
mov
pop
xchg
adc
or
addb
mov
or
pop
out
xchg
test
out
inc
or
jmp
and
jmp
divl
je
pop
pushf
sub
and
adc
xor
inc
lcall
xchg
or
sbb
lea
mov
and
mov
sub
js
cmp
hlt
xchg
dec
das
inc
xor
in
sub
sub
push
push
or
ja
sub
fiadds
mov
mov
sub
add
cltd
push
mov
fmuls
pop
adc
xchg
in
js
cmpsl
dec
imul
inc
aam
cmc
je
push
fs
testl
pop
pop
xor
push
push
push
push
stos
sub
sbb
xor
xor
jge
xchg
dec
pusha
xor
mov
movsl
in
xchg
add
jl
sub
add
sbb
shl
shll
insb
lea
push
adc
jo
adc
jmp
daa
pop
add
xchg
add
cmp
cmpl
push
lods
das
mov
mov
and
jmp
xor
cmp
movsl
stos
push
sbb
int3
mov
cmp
and
dec
sbb
fisubrs
add
repnz
fdivp
sub
int
xchg
xor
fisubrl
fimuls
and
movsl
xchg
out
xor
push
imul
not
mov
and
popf
test
fidivl
or
jl
repnz
ret
aam
xchg
sub
dec
sbb
push
xchg
xor
mov
inc
jnp
adc
and
aaa
rcr
je
adc
fsubl
sub
adc
pop
mov
sbbb
inc
sub
rcr
ss
fwait
les
cmp
test
arpl
test
int
rcrl
call
adc
call
jo
jl
mov
or
cmp
push
mov
dec
jnp
out
or
pop
fs
out
mull
pop
add
jp
push
add
jecxz
xchg
pop
or
stos
mov
fwait
push
and
daa
addl
xor
push
push
xchg
pop
pop
in
and
cmp
cmp
push
loopne
mov
imul
and
inc
and
les
call
add
sahf
push
mov
push
mov
daa
loopne
dec
xor
sub
mov
test
and
push
xor
push
or
add
inc
xor
push
push
push
dec
sub
xchg
push
mov
xor
adc
add
push
cltd
xchg
or
sbb
lods
add
jg
add
aam
fldt
sbb
xchg
jnp
push
nop
sub
add
test
and
push
pop
ss
int
xchg
push
inc
xor
xor
push
xor
inc
sub
movq
lock
add
fwait
xchg
cmp
cmp
aaa
push
mov
jg
lock
dec
adc
js
loope
or
xchg
les
push
push
push
inc
push
hlt
sub
xor
aad
jle
loopne
sarl
std
call
and
js
ljmp
test
add
push
incb
jno
pop
rol
cmp
test
inc
or
inc
in
and
addr16
push
sbb
inc
pop
jo
je
mov
cmc
js
aas
pop
dec
cmp
jmp
pushl
mov
stos
fucomip
mov
pop
add
ret
sub
rol
fmull
shlb
loope
sub
pop
filds
jb
xchg
test
cwtl
mov
cwtl
mov
je
pop
mov
popa
mov
mov
sub
mov
jl
andl
mov
mov
mov
sbb
ret
sub
loopne
stos
in
push
dec
xlat
pop
add
jae
sahf
dec
xor
jecxz
cmp
int3
cmp
repnz
jo
push
movsb
pop
ret
adc
cmpsb
or
jbe
inc
xor
sbb
ss
push
mov
scas
test
mov
adc
idivl
xchg
cmpsb
shlb
sbb
push
mov
mov
jl
and
or
adc
stc
xor
icebp
jne
je
push
fisubrs
mov
shll
js
push
add
inc
push
jbe
pop
ljmp
aaa
cmp
das
pop
bound
xor
or
daa
or
test
add
or
push
mov
xchg
movsb
add
jns
sub
pop
pop
xor
push
sbb
pop
lock
insb
adc
push
mov
mov
and
and
jbe
ret
aas
jle
inc
cmp
cmp
jne
lock
mov
xor
add
jl
fadd
pop
testb
je
xor
jbe
fdivl
cmp
dec
or
dec
jl
loope
xor
push
test
jne
fistl
pop
or
add
mov
fisttps
xchg
push
leave
or
xchg
cmc
xor
or
cmpsl
jnp
sub
add
cmp
inc
mov
aas
mov
add
push
add
xor
xchg
inc
push
xchg
sbb
mov
dec
addr16
sarl
aaa
add
mov
sub
push
or
outsl
jle
out
push
jecxz
movsl
push
push
lock
add
pop
shll
inc
ds
or
adc
and
je
push
les
lock
test
arpl
fisttpll
push
jg
mov
mov
aam
sub
pusha
mov
data16
scas
sbb
mov
xchg
mov
mov
pop
and
add
neg
adc
pop
push
clc
jmp
pushf
inc
daa
lock
nop
or
mov
lret
sub
jl
dec
jbe
add
add
push
push
inc
jbe
sub
cld
or
cltd
idivl
push
clc
ja
or
adc
lds
and
in
fisubrs
stos
xorl
mov
and
or
roll
mov
popa
add
pop
or
out
addr16
pop
add
mov
adc
movsl
dec
and
and
push
repnz
inc
add
pop
leave
inc
sbb
add
fidivrl
fmuls
dec
pop
stos
pop
aas
add
es
or
inc
sbb
js
xor
adc
cmpsb
shrb
xor
mov
push
dec
outsl
pop
mov
add
pop
add
test
mov
xor
xchg
fimuls
mov
push
int3
xor
adc
jns
jb
or
sub
sub
push
test
test
cli
inc
sub
scas
xchg
sbb
aaa
pop
stos
inc
mov
xor
inc
jle
push
or
jae
mov
test
lock
mov
insb
adc
xor
insl
rclb
add
andl
nop
dec
negb
pop
fs
xor
add
add
mov
mov
or
ds
adc
sbb
adc
inc
cmp
adc
sbb
push
xor
add
and
jp
adc
mov
xor
add
iret
test
sub
cmp
mov
sub
push
jl
add
or
and
data16
and
aas
pop
jmp
and
mov
mov
add
cli
jae
dec
inc
int3
and
cli
push
cld
dec
push
in
adc
pop
cli
test
sbb
pop
adc
inc
fcoms
call
out
push
loope
fnstenv
rorb
or
adc
repnz
add
aam
sbb
mov
mov
std
jg
fimull
adc
mov
repz
or
stc
pop
add
mov
insl
out
in
sbb
and
movsl
mov
hlt
xchg
or
push
sbb
push
mov
sub
adc
mov
push
push
pop
add
inc
lock
inc
mov
in
inc
sbb
adc
push
int
sub
push
ja
add
xor
or
push
adc
mov
orl
add
and
add
inc
mov
not
bound
and
cmp
mov
xor
rol
adc
and
and
add
push
adc
insb
insb
sub
xor
ret
mov
movsb
sub
inc
lret
cmpb
add
or
adc
int
jg
and
xor
or
inc
movsb
xor
je
loop
pop
pusha
repnz
adc
int
xchg
jne
aaa
addb
add
pop
rorb
rorb
rcrb
and
push
push
imul
inc
mov
mov
enter
jecxz
popf
jg
mov
jle
push
push
cld
addb
movb
addr16
add
dec
cmp
push
mov
roll
daa
pop
push
mov
loopne
fs
mov
push
push
dec
jo
sbb
xor
jbe
gs
inc
jo
mov
dec
sbb
dec
inc
and
mov
jb
pushf
push
dec
or
pop
push
push
popa
sub
int3
loope
xchg
and
mov
in
ret
push
cmp
xor
mov
inc
cmp
inc
call
mov
addr16
add
dec
js
mov
fcoml
nop
movsl
cmp
sbb
pop
adc
push
jae
rclb
jl
and
jns
sbb
scas
pusha
test
andb
inc
cmpsb
fs
sbb
insl
cld
dec
sbb
dec
dec
mov
lds
cmp
sub
testb
jbe
mov
les
push
std
jnp
aad
cmc
pop
xchg
ficoml
cmp
fs
loope
adcb
testl
jle
aas
mov
lock
dec
es
hlt
sbb
and
call
test
sbb
dec
or
imul
pop
or
pusha
mov
std
ret
pusha
in
jle,pt
add
ja
loope
and
andb
or
add
scas
add
jbe
push
negl
inc
pusha
pushf
jnp
test
sbb
add
outsb
arpl
inc
test
add
testb
jle
loopne
jle
xor
or
jl
neg
ret
sub
scas
ret
rorl
adc
mov
je
xchg
and
lock
loope
scas
shll
adc
jno
ja
add
xchg
pop
add
ret
inc
push
cwtl
pop
movsb
cmp
fs
movl
pop
pop
push
push
lock
in
or
adc
fwait
dec
dec
pop
xor
inc
das
sbb
mov
xchg
jmp
adc
shll
dec
aam
ficoml
cmp
loop
pop
xchg
insl
cmp
testl
xorl
lret
test
jo
mov
push
pop
xchg
pusha
mov
pop
loope
adcl
or
mov
inc
adc
dec
push
mov
cmp
push
sbb
rcr
cwtl
add
lret
mov
cmp
push
inc
sbb
ret
adc
fiaddl
das
mov
push
and
subl
add
jno
lods
push
add
cmpsb
jmp
xchg
rcr
das
in
daa
xchg
pusha
dec
loop
in
dec
sbb
addr16
xor
adcb
fimull
lcall
in
cmp
push
adc
sti
pop
sbb
inc
rorl
inc
mov
push
adc
mulb
cmpsl
adc
adc
xor
ret
lahf
adc
fs
push
inc
jo
sub
nop
clc
push
xchg
pop
pop
push
aam
nop
push
or
andl
lahf
adc
nop
repz
ja
je
or
pop
adc
sub
sub
mov
xchg
scas
cmp
mov
andb
or
jo
mov
xchg
adc
push
push
fistpll
jne
sahf
addr16
add
mov
sub
jmp
cmp
enter
adc
adc
push
xor
inc
imul
inc
mov
cmp
loop
ja
inc
data16
mov
cmp
jbe
mov
addr16
cmp
push
mov
or
and
test
sub
cmp
js
inc
add
sub
daa
mov
adc
pop
sbb
sbb
in
dec
ret
or
adc
mov
test
pop
test
test
imul
loopne
xor
xor
dec
or
decl
pop
test
push
and
aas
or
jp
adcl
mov
loope
or
add
adc
sbb
cltd
and
inc
rol
jbe
daa
or
ret
push
adc
inc
inc
mov
imul
ret
aas
in
test
imul
dec
or
ja
cmc
mov
sbb
js
pop
dec
mov
push
jmp
or
movsl
cmp
cmp
nop
roll
push
push
push
testb
or
and
shl
inc
push
push
fadds
sar
test
fsubl
pop
shrb
xor
out
je
push
inc
and
inc
das
adc
lcall
movsl
push
bound
add
push
and
jmp
out
loopne
push
and
push
inc
mov
dec
xchg
push
jecxz
push
or
cmp
lcall
mov
rolb
adc
les
mov
inc
and
dec
push
dec
rdtsc
mov
inc
pusha
lea
bound
and
les
adc
in
cmp
xor
adc
sub
pop
add
and
pop
dec
jnp
leave
test
in
adc
or
in
movsb
fmul
inc
cmovns
in
add
inc
jge
adc
and
insl
lods
jecxz
dec
push
xchg
sub
js
lods
cmp
add
fcoml
cmpsl
ret
push
fmuls
outsb
xor
int
xchg
push
testl
fmuls
xor
mov
xor
or
or
mov
mov
icebp
bound
call
sahf
mov
sub
iret
ret
in
push
mov
mov
xchg
movsl
cmpl
and
adc
orb
aam
nop
es
mov
jo
rcrl
fucomp
xchg
push
xchg
mov
inc
sbb
and
inc
cli
sub
lods
or
sbb
dec
loopne
or
cmp
sar
scas
std
decl
or
mov
scas
mov
mov
sbb
or
xchg
out
movsl
push
adc
stos
fidivl
mov
call
jl
mov
dec
pop
xor
adc
mov
cs
pop
dec
push
clc
xchg
into
sub
jns
mov
xor
push
xor
addl
mov
aam
xchg
jge
addr16
sbb
in
sub
hlt
or
test
mov
je
icebp
jo
inc
pop
mov
arpl
sbb
push
or
pop
imul
cmpsl
nop
subl
dec
add
or
inc
je
daa
dec
cmpsb
roll
add
push
adc
push
dec
sub
xchg
insb
jb
clc
or
add
xor
mov
jae
ret
mov
lock
jnp
sbb
cmp
push
imul
and
sub
or
and
mov
or
sbb
inc
inc
add
jne
xchg
cmp
adcb
cmp
addr16
pop
xchg
mov
ds
popa
or
fdivs
fsts
xorb
int3
pop
cmp
cmpsb
rcrl
in
inc
cmpsl
sbb
scas
push
gs
mov
pop
fwait
adc
leave
je
rcl
add
js
fcomps
lahf
adc
cmp
ljmp
push
push
xchg
push
sub
sahf
sub
dec
xor
loop
add
call
inc
xor
rol
lods
mov
pop
aaa
loopne
or
in
mov
push
hlt
les
adc
xor
jmp
pop
lret
lcall
pop
and
adc
aaa
sarl
nop
cmp
sbb
adc
mov
leave
push
jo
add
call
push
out
sbb
shl
scas
or
pop
adc
or
stos
test
mov
fidivrs
add
dec
cmp
cmp
out
pop
lock
movsb
push
stos
mov
jmp
sbb
cmp
xor
mov
push
mov
cmpsl
lret
test
xchg
xor
mov
or
outsb
adc
loope
pop
loope
mov
inc
fdivrs
cs
popa
jbe
or
fsubs
xor
dec
or
js
xchg
stos
or
sub
add
xchg
add
add
dec
movsl
or
outsl
test
pop
jne
xor
adc
movsb
pop
les
fstps
dec
mov
rclb
and
xchg
sbb
repnz
imul
movsl
xor
sbb
inc
aad
adc
loope
push
js
je
cwtl
cmp
push
int3
fwait
adc
arpl
sub
sarb
sbb
cwtl
call
push
pop
or
inc
xchg
jmp
dec
cmp
std
and
adc
ffree
mov
iret
inc
xor
aad
dec
adc
and
add
sub
test
int
adc
pop
cmp
add
cld
or
cld
cmp
cmpsb
pop
add
sahf
xor
cmp
add
cld
das
shl
add
inc
and
xchg
adc
and
neg
or
das
ja
jno
sub
loope
push
push
into
jle
movsb
jno
ljmp
pop
lmsw
jnp
jbe
mov
sbb
movsl
in
or
aam
push
mov
mov
pusha
sbb
xchg
ret
sbb
adc
cmp
std
cmp
or
xor
pop
or
xchg
sbb
push
das
adc
fadds
dec
and
push
enter
ret
ds
adc
or
adc
mov
add
mov
add
mov
in
mov
test
sub
pop
adc
and
loop
push
mov
pop
cmp
fstl
addr16
fdivrs
mov
mov
mov
repz
lock
mov
sub
loope
lock
push
cmpsl
sarl
jmp
xchg
inc
fcomp
std
ds
jg
cmp
cmp
test
je
pop
add
push
inc
cmp
roll
cmc
jns
or
inc
and
rol
arpl
scas
icebp
or
out
or
xlat
cmpsb
lock
push
inc
push
lret
cmp
je
xchg
push
jge
notb
push
mov
popf
adc
in
dec
aaa
and
es
mov
dec
adc
push
or
sti
and
daa
lcall
test
js
dec
dec
push
bnd
movsb
jg
jmp
je
cmp
pop
mov
daa
add
cwtl
inc
test
mov
mov
push
fsubs
cld
cmc
call
inc
bound
rcll
sbbb
sbb
sbb
cltd
leave
ljmp
add
fldl
rcrb
push
sub
dec
and
cmp
sti
xor
clc
or
pusha
cmpb
pop
mov
data16
mov
pop
mov
lret
sub
jp
cld
xor
sbb
jo
outsl
xchg
aad
outsb
pushf
adc
push
cld
sarb
or
popf
std
push
sbbb
jl
push
mov
jmp
cltd
push
pop
pop
orl
add
or
dec
gs
mov
jb
adc
movsl
std
xchg
mov
xchg
xchg
dec
or
bnd
insl
je
adc
sub
fcompl
jne
or
jb
pop
mov
and
in
add
jne
sub
add
and
dec
xor
mov
sub
adc
ja
add
lea
xchg
test
mov
enter
push
adc
sub
jb
lcall
cmp
nop
add
add
cmp
mov
jae
or
imul
cmp
sub
lret
add
inc
dec
rcrl
ret
loope
fs
in
pop
dec
imul
cmpsl
jnp
dec
jmp
outsl
je
gs
jmp
int
bound
fs
push
push
cmpsb
add
cmpsl
xchg
and
fildl
lret
add
repz
fs
adc
in
cmpl
popf
aam
mov
loop
and
test
pop
mov
sub
jne
push
and
inc
loopne
test
orb
push
and
std
sub
pop
adc
dec
or
add
pop
adc
lcall
push
test
pop
push
sub
imul
mov
pop
jbe
mov
sub
add
fsubl
push
xor
xlat
nop
rclb
movsl
push
movsl
jb
sbb
andl
gs
push
loope
clc
dec
push
test
mov
popl
jmp
sub
data16
sbb
dec
fcoml
in
or
and
adc
je
cltd
fsubl
iret
js
inc
in
pop
push
call
and
in
ljmp
mov
rorb
and
xchg
lahf
out
push
testb
cmp
or
pop
dec
cmp
push
jmp
or
loopne
js
push
pusha
add
mov
xchg
loopne
loop
or
push
rorl
or
xchg
fld
jbe
mov
incl
jne
cmc
add
nop
ret
inc
cmp
imul
xchg
and
push
and
pop
sub
or
test
and
adc
add
mov
pop
leave
push
int3
cmp
fisubl
jne
adc
sbbb
pop
fs
mov
aaa
add
ret
lret
loopne
and
adcl
add
pop
int3
add
inc
cmp
ja
cmp
aaa
mov
pop
test
test
jecxz
outsb
je
sbb
cmpsb
add
mov
or
lds
add
push
sahf
aam
fst
dec
xorb
sbb
loopne
push
in
or
je
ja
mov
fmuls
xchg
add
cltd
pop
add
or
arpl
push
cmp
add
mov
aaa
push
lahf
push
jecxz
rorl
jl
lcall
dec
or
or
mov
add
clc
cmp
jne
sbb
mov
and
xchg
pop
shlb
rclb
mov
add
sub
enter
rolb
adc
push
dec
cwtl
mov
rcrb
andb
xor
stos
pop
nop
stos
pusha
or
jne
shlb
cli
popa
or
pop
lret
ret
xchg
js
dec
sub
jb
out
call
cwtl
or
jmp
and
movsb
xor
sbb
in
or
adc
mov
fsubr
mov
sbb
imul
out
repz
les
mov
lds
jb
push
rcrb
add
push
pop
jns
sub
ja
jbe
daa
clc
sub
jge
cmp
sbb
sbb
push
push
jb
cmpsl
push
mov
dec
jecxz
xor
inc
sahf
adc
lds
sub
dec
lahf
adc
ret
loop
sbb
mov
rcrb
and
pop
popf
xchg
cld
ja
pop
js
imul
inc
call
mov
dec
das
or
xor
sti
popa
xor
sub
nop
add
cwtl
sub
outsl
lds
push
cmp
add
add
pusha
lock
xor
or
mov
adc
mov
sar
in
cmp
jbe
shll
push
shll
stc
leave
push
xor
or
cmp
cwtl
and
aam
fnstcw
adc
aad
lea
mov
mov
xor
inc
lock
add
adc
add
mov
jnp
sub
inc
sbb
push
enter
xor
push
and
test
dec
inc
and
jne
dec
stc
and
add
test
push
rcll
shrb
lea
add
mov
cmp
push
cmp
push
pop
pop
xchg
shr
cmpsb
push
loope
adc
pop
test
test
imul
or
pop
mov
mov
jno
lea
cmpsl
inc
pop
push
or
push
lret
fs
adc
mov
fildl
and
sbb
fs
repnz
sub
mov
or
and
lock
shlb
xlat
and
xor
inc
sti
xchg
std
fs
mov
das
push
pop
add
adc
or
push
adc
adc
mov
lock
add
loopne
xchg
js
jne
andl
mov
mov
pop
sub
or
pop
or
jnp
cmp
movl
jnp
or
aaa
sar
je
dec
jbe
cld
scas
xor
loopne
xchg
mov
sti
loopne
sarl
cmp
cmp
xor
repnz
mov
sub
xchg
jl
jle
dec
jp
jbe
mov
pusha
xor
and
icebp
push
sbbb
pop
push
nop
add
pop
imul
mov
or
sub
ret
adc
int3
sbb
adc
loope
mov
mov
insb
cmp
inc
push
call
adc
sub
dec
inc
sahf
enter
cld
insl
int
cmp
test
xchg
mov
lea
mov
cmp
mov
mov
and
dec
arpl
or
ss
xchg
cmp
lcall
adc
cmp
push
sub
sub
xchg
sub
pusha
or
sub
mov
lret
sbb
sbb
or
rcrb
xchg
aas
aad
push
sarb
arpl
stos
adc
dec
stos
push
dec
dec
adc
sbb
mov
lock
dec
rcrb
jae
into
or
cld
movsl
ret
push
scas
rorb
dec
add
xchg
shlb
scas
mov
aam
adc
and
cmp
xor
jmp
lods
das
lods
mov
or
mov
xchg
call
lahf
inc
pop
xchg
insb
xchg
insb
adc
add
sbbl
popa
dec
fmull
add
nop
bound
mov
in
adc
dec
or
push
adc
xor
or
adc
sbb
cmp
xchg
sbb
or
pop
mov
sarb
in
sub
jae
sbb
sbbb
or
push
sbb
jge
jp
pusha
dec
cwtl
rorb
or
sbb
dec
outsl
pushl
mov
push
pop
sub
call
push
clc
push
lret
pop
xorl
shr
sbb
notl
xchg
adc
add
rolb
jno
jge
push
jnp
andb
or
dec
push
jl
xor
lret
push
adc
lsl
sub
addr16
js
je
adc
push
jb
cmp
or
and
adc
nop
mov
test
dec
mov
add
jbe
jl
push
clc
rol
repz
sbb
ljmp
cld
push
fsub
mov
cld
sub
pop
nop
mov
cld
dec
add
repz
insl
daa
les
sub
lea
loopne
dec
mov
mov
cmp
or
or
jne
mov
divl
imul
sub
leave
nop
sbb
cmp
lods
push
rorb
mov
sbb
inc
jnp
add
rcrb
and
inc
xor
mov
inc
stos
push
add
inc
push
inc
fstps
mov
dec
sti
jl
test
sahf
or
sahf
jg
shlb
imul
mov
sub
mov
dec
or
pop
mov
adc
sahf
jo
incb
aas
sub
jle
dec
add
jmp
mov
imul
push
lods
test
out
lock
es
jnp
in
xor
push
notb
movsb
mov
loop
add
push
ficoms
pop
push
mov
in
je
sarl
sub
xor
imul
cmp
inc
repz
repz
push
dec
je
xor
dec
les
mov
add
jl
add
imul
jmp
sbb
jg
or
inc
add
sub
andb
jae
jnp
repnz
incl
add
adc
into
cmpsb
arpl
lock
jne
out
or
push
xchg
push
xor
je
and
pusha
xor
jno
leave
pushf
push
mov
cmp
dec
jecxz
rcrl
push
dec
pop
cmp
xchg
scas
insl
flds
mov
and
cwtl
xchg
leave
nop
repz
jnp
pop
xor
inc
dec
jne
jmp
inc
outsb
adc
fildl
icebp
fs
enter
sbbb
lret
leave
dec
adc
call
push
or
shrl
dec
imul
push
mov
mov
dec
inc
mov
add
nop
and
add
xchg
subl
out
incb
test
cmp
js
imul
test
cmpsb
push
mov
int3
into
mov
dec
and
sub
idivb
dec
sub
sarl
sbb
rclb
jp
push
ja
mov
xor
jge
je
pop
cmp
icebp
jge
mov
dec
movsb
and
mov
test
cmpsl
rorb
push
sti
rep
jns
mov
ds
xor
or
sbb
add
or
sbb
cmp
jae
lahf
shlb
and
das
mov
mov
shl
andl
jb
or
jne
push
imulb
lea
push
push
jle
mov
mov
cmpsb
xlat
push
and
push
mov
sub
pop
loopne
adc
test
outsl
nop
data16
dec
outsb
xor
loop
push
xor
and
lods
push
add
pop
adc
push
push
and
or
imulb
push
mov
data16
rol
dec
cmpsb
ja
fsts
loop,pn
fildl
es
xor
mov
xchg
into
adc
std
popf
repnz
sub
dec
fadds
sub
lods
scas
push
iret
test
in
pop
push
jae
add
in
and
pop
adc
push
push
adc
sub
rorl
je
push
rcrb
mov
and
push
xor
aaa
add
push
insb
inc
cltd
cltd
cmpsb
add
lock
into
and
jle
mov
push
dec
push
push
aam
into
sbb
outsb
movsl
inc
push
xchg
test
xchg
jo
cmp
adc
jno
call
lods
fcomp
pop
push
push
mov
and
push
aam
call
xlat
mov
adc
mov
push
adc
cmp
xchg
mov
inc
adc
sub
insl
rolb
xor
xor
cmp
adc
loopne
mov
jmp
bound
adc
push
test
inc
sbb
jnp
pop
add
dec
push
mov
ss
mov
xchg
sbb
les
movups
mov
xchg
sub
dec
sub
js
dec
loop
sub
inc
clc
adc
inc
fadds
add
sbb
cmp
xchg
pop
and
sub
jns
add
test
int
fiadds
lret
xchg
testb
test
adc
jnp
xor
mov
cwtl
sub
push
or
cmp
leave
cmc
cld
push
and
xor
dec
adc
add
cmp
xorb
test
cmpsl
icebp
xor
je
push
adcb
and
shr
mov
sar
push
out
add
int3
clc
or
add
rolb
cmp
adcl
mov
lds
xchg
sub
jecxz
fs
sbb
in
jbe
mov
xorb
push
pushf
hlt
or
loope
js
movsb
sarb
ret
sub
pop
push
outsb
cmp
sahf
ja
test
subb
adc
fisttpll
cmp
push
cltd
jo
or
shr
rol
insl
cmp
and
push
ret
pop
or
xor
ret
adc
cmpsb
ret
and
shlb
xor
bound
and
dec
js
inc
mov
cmp
js
cmpsl
mov
pop
divb
push
pop
fists
je
push
mov
add
sub
or
and
and
jp
sub
lea
mov
push
add
jle
out
sbb
icebp
inc
push
jbe
pop
repz
jne
pushf
sbb
sub
pop
jmp
dec
pop
inc
pop
dec
xor
adcl
add
inc
adc
dec
inc
jmp
dec
ss
mov
sbb
dec
add
jne
sub
cltd
dec
add
outsb
sar
xchg
jp
pop
xor
pop
cmp
fnstcw
jae
jb
jae
ror
jns
and
push
adc
es
sub
nop
nop
jae
test
and
je
in
call
add
pusha
jns
xchg
add
push
adc
add
ja
add
inc
push
lahf
sbb
repz
les
cmp
jo
push
cmp
jmp
pop
add
mov
pop
jb
in
mov
sub
inc
push
nop
rclb
pushf
imul
adc
inc
movsl
sbb
add
rcl
mov
mov
ret
cltd
jle
xor
test
add
movsb
ffree
adc
in
jb
cmp
dec
xor
daa
jg
sbb
adcb
sbb
push
push
mov
cli
pmullw
js
gs
add
pop
dec
or
fs
adc
adc
ret
pop
data16
sbb
call
rolb
jbe
adc
adc
shll
add
pop
fbstp
push
jbe
sbb
loopne
mov
add
nop
int
daa
cs
add
and
into
ret
subl
mov
xlat
adc
daa
or
mov
cmp
dec
ljmp
add
mov
mov
arpl
or
sbb
nop
inc
or
adc
push
cmp
and
adc
bound
lahf
dec
arpl
fists
cmp
int
fwait
pop
adc
and
adc
mov
xorb
shrl
ja
cs
or
lods
outsl
cmp
sub
js
xchg
lcall
jo,pt
mov
push
jnp
in
sub
or
je
and
fmuls
into
jo
pop
pop
add
inc
xchg
jo
sahf
or
stc
pop
mov
dec
pop
and
xchg
js
rolb
adc
or
xor
pop
aas
and
movl
lock
or
jl
ja
aas
and
add
xor
or
xor
and
in
and
daa
add
and
dec
pop
xor
cmpb
xchg
je
das
jmp
cmp
xor
aam
mov
cmp
movsl
xor
and
idivb
pop
jne
cmp
pop
movsb
xlat
cmp
mov
mov
xor
leave
jmp
cmp
cld
or
ss
or
pusha
adc
in
push
std
ss
lret
mov
daa
adc
adc
sbb
dec
jo
mov
push
push
mov
test
outsb
jl
mov
sahf
adc
cmp
sbb
sti
aad
push
add
add
xchg
pop
sub
pop
cmpl
out
xchg
or
dec
mov
fldl
mov
outsl
add
push
loop
mov
pop
mov
mov
xchg
addl
xor
repz
mov
std
mov
fimuls
enter
iret
sarl
shr
aam
cwtl
adc
xchg
mov
dec
mov
jl
ret
or
lock
gs
jns
add
hlt
mov
aas
test
int3
nop
pop
movsb
push
mov
sbb
pusha
dec
loope
vcvtsd2ss
mov
mov
adc
mov
xor
imul
push
mov
pop
ficoml
cmovl
stc
subl
pushf
jne
pop
call
adc
inc
bound
or
arpl
inc
stos
lock
jno
mov
or
mov
dec
mov
push
adc
xchg
jno
aad
inc
insl
jmp
stc
enter
lock
aas
aaa
js
jecxz
mov
xor
jl
call
push
mov
or
jne
or
adc
faddl
ret
xor
sahf
xor
mov
adc
push
adc
push
add
adc
andb
jecxz
int
jbe
or
jbe
js
jmp
cmp
jne
sbb
daa
mov
add
movsb
jmp
add
addr16
fstpl
jmp
or
dec
xor
jb
and
pop
or
jmp
or
adc
inc
loopne
push
int
jne
or
enter
jl
ret
and
inc
sbb
enter
or
popf
add
xor
sbb
add
sbb
jne
inc
cmp
cmp
mov
scas
sti
pop
add
xchg
mov
inc
cld
scas
push
in
xchg
adc
test
and
push
or
or
mov
push
lret
sbb
sbb
sti
mov
xchg
jl
jmp
adc
loop
fcmove
pusha
test
xor
fcmovnbe
mov
mov
nop
mov
mov
rorl
push
sbb
lcall
pop
rcrb
add
cltd
inc
xor
aam
popf
push
xor
in
pop
rorb
dec
movsl
call
das
mov
and
push
cmp
ficoml
lcall
mov
call
push
or
push
pop
jbe
arpl
mov
jp
sbb
mov
add
mov
sbb
pop
jp
sbb
jns
xchg
data16
daa
and
es
mov
mov
cmc
adc
fsubs
push
and
mov
jge
mov
mov
jecxz
insb
sub
adc
push
js
jno
push
cwtl
or
inc
dec
sub
xchg
movsl
adc
or
push
xor
clc
jl
mov
adc
push
dec
dec
xchg
cli
adc
aas
loopne
jmp
test
test
loope
inc
mov
add
imul
fsubl
pop
loopne
scas
shr
jle
add
inc
push
testl
xor
sbb
push
ret
add
mov
mov
in
mov
add
fnstenv
push
and
rolb
aad
gs
add
inc
data16
pop
sbb
or
fmul
adc
and
lret
xchg
jp
arpl
div
add
call
je
lea
push
push
mov
pushf
push
dec
stos
mov
add
or
mov
inc
or
dec
pop
je
je
pop
sbbb
fdivl
movsl
mov
sub
and
dec
push
push
sub
call
js
mov
dec
clc
push
aas
insl
pop
clc
mov
xchg
mov
xchg
ljmp
daa
in
lock
dec
popf
sahf
mov
add
lret
sub
loope
popa
es
ret
and
add
adc
pop
pushl
pop
or
lock
test
jne
mov
push
ljmp
or
or
add
push
push
mov
int
loopne
mov
mov
and
or
mov
push
push
sub
push
daa
ss
adc
mov
test
stos
push
dec
lcall
rclb
mov
stos
mov
test
push
xchg
bound
clc
cmp
loopne
push
lea
rorb
pushf
pop
rcll
mov
incb
mov
jmp
sub
fldl
loope
pusha
pop
fwait
test
ror
and
bound
dec
fmull
add
mov
and
int3
or
xchg
sub
loopew
sub
negl
xchg
dec
xor
sbb
fs
arpl
inc
xchg
aam
aad
push
or
pop
cmp
in
pushf
xchg
add
in
ret
rcrb
nop
aas
icebp
enter
fwait
loopne
cmpsl
sub
cltd
cmp
lods
xchg
js
mov
xchg
stos
jmp
xor
jbe
fnsave
xchg
in
adc
ss
lock
push
outsl
das
dec
loopne
loopne
sbb
outsl
push
testl
inc
aas
fdivl
jne
and
inc
cmpsb
cltd
scas
test
push
das
hlt
and
xchg
or
or
sub
xor
lods
int3
mov
sbb
add
xchg
adc
sub
push
icebp
pusha
and
sbb
je
mov
xchg
lds
mov
or
xchg
xor
enter
mov
dec
push
lahf
adc
and
xchg
mov
pusha
push
in
loope
loope
out
jnp
mov
popl
or
push
loopne
clc
sbb
and
repz
push
sahf
lods
push
push
adc
scas
adc
loopne
push
js
pop
push
adc
lods
lahf
mov
dec
push
dec
enter
pusha
ret
loop
or
adc
and
xchg
jnp
mov
addl
mov
test
lods
mov
cmp
inc
and
mov
pop
sbb
test
or
loopne
mov
into
ljmp
xchg
or
hlt
inc
pop
fld
push
xchg
push
push
push
mov
adcb
add
pop
shll
cmp
jge
xor
mov
std
cmp
dec
mov
add
add
aas
adc
inc
mov
loopne
cli
fcmovbe
shl
rclb
cmp
dec
in
lods
push
cltd
mov
mov
push
cmp
rorl
bound
mov
lods
cmp
gs
movb
imul
mov
and
dec
data16
jle
xor
xchg
xchg
lods
mov
mov
push
add
sahf
mov
adcb
mov
nop
les
add
xlat
lea
cmp
or
mov
sub
fcoms
iret
pop
or
call
mov
sbb
pop
sbb
movsl
test
adc
and
push
call
jb
test
ss
push
push
push
xchg
pop
testb
jbe
adc
and
xor
hlt
movb
bound
inc
push
add
push
or
add
adc
outsb
xchg
enter
loopne
jnp
or
rolb
jo
add
push
inc
shr
fisubrs
pop
or
push
mov
es
das
stc
int3
mov
xchg
lock
dec
je
adc
loop
fidivl
push
call
je
pop
push
fmull
adc
test
mov
nop
pop
and
xchg
xchg
cwtl
pushf
mov
mov
inc
bound
mov
adc
or
imul
xor
sub
lock
mov
fs
dec
popf
ss
divl
mov
sbbb
sbbb
out
loopne
rclb
mov
mov
and
pushf
or
add
jmp
inc
nop
rcrb
mov
mov
fidivl
pop
lea
and
cmp
rolb
in
mov
mov
pop
rcl
jge
mov
push
js
jae
lock
inc
mov
fmuls
adc
dec
mov
add
mov
cmp
mov
ljmp
movsb
outsl
push
cmp
mov
cwtl
cltd
mov
iret
adc
jge
mov
dec
xor
out
mov
pop
fwait
int
pop
mov
mov
cli
jge
xor
push
idivb
xor
sub
xchg
inc
push
je
or
add
jne
mov
mov
hlt
fwait
sbb
sub
mov
inc
roll
pop
add
fwait
lahf
sub
rol
jp
or
dec
in
je
jle
cmp
sub
cmp
loopne
add
adc
addr16
adc
adcb
je
andl
pop
dec
les
in
loope
idivl
mov
mov
fwait
les
inc
daa
pop
jo
push
push
jns
outsl
xlat
push
xchg
or
push
repz
mov
push
inc
arpl
ss
je
rorl
push
rcr
fiadds
daa
and
or
flds
repnz
inc
addl
sub
add
movsl
insb
xlat
xor
stc
filds
or
push
outsl
push
test
std
add
push
adc
cmc
pushf
mov
adc
mov
add
inc
subb
xor
popa
arpl
jo
jl
iret
into
lock
pop
test
inc
outsb
sub
add
pusha
addb
dec
aaa
cld
iret
xor
or
fidivrs
cmp
sub
lods
adc
loope
inc
and
lahf
dec
rorb
incl
imul
inc
inc
inc
push
jl
lcall
daa
cwtl
cmc
adc
outsl
dec
pop
pop
pop
sub
into
mov
sbb
pop
lock
sbb
sub
push
fs
hlt
jge
movsb
pop
sub
jmp
pop
and
loope
mov
mov
push
add
push
push
dec
ror
out
shll
mov
pop
push
mov
inc
lret
push
sbb
orb
jp
mov
add
call
sub
push
lahf
sub
push
dec
mov
test
call
jnp
push
cmp
rorb
xlat
mov
inc
xor
aad
add
mov
aad
xchg
add
ret
lahf
mov
cltd
xchg
add
test
std
add
dec
popf
or
movsl
add
or
push
hlt
emms
jb
jge
cmp
jle
jl
sub
fisubrl
fs
jmp
outsb
lock
push
enter
dec
loopne
cmp
mov
shrl
jp
jno
adcl
mov
out
cltd
mov
cmp
push
inc
hlt
mov
sbb
pop
mov
or
popa
inc
jle
push
cmpsl
test
movaps
cmp
mov
xchg
lock
pusha
std
faddl
mov
adc
je
pop
dec
dec
pop
and
in
sub
aam
mov
shrl
ret
jg
outsb
adc
xchg
fnsave
jbe
or
inc
sub
jge
out
push
inc
adc
jle
xchg
mov
fstpt
jp
loopne
sbb
pop
imull
jmp
mov
jge
jo
xor
push
jbe
inc
rcll
je
mov
jmp
or
jge
jo
sub
cmpsb
dec
cmp
aad
shlb
jp
sbb
aas
mov
fs
inc
jmp
inc
jo
xchg
daa
xchg
addr16
addr16
mov
mov
inc
pop
dec
inc
insb
inc
lock
cmp
push
jp
push
or
add
pushf
pop
sbb
test
or
iret
jne
lods
lret
jmp
pop
push
pop
movsl
mov
jp
xchg
mov
push
fists
fildll
or
adc
lea
jle
incl
add
push
push
dec
cmp
mov
test
xchg
cmpsb
rcrb
dec
call
dec
lock
out
dec
push
rcrb
fsubrl
mov
jl
addr16
dec
shrb
pop
xchg
mov
push
in
fdivl
pop
ja
je
loop
aam
test
cmpb
fmuls
test
sbbl
xchg
mov
mov
stos
nop
xchg
enter
imul
jns
arpl
in
ret
imul
fcomps
or
clc
scas
jecxz
js
hlt
cmp
test
stos
add
les
ret
inc
xchg
faddl
imul
inc
sahf
xchg
add
or
popa
pop
push
inc
sarb
imul
ret
fcoml
rcll
sub
jno
sub
add
mov
add
loope
into
jecxz
rcr
xchg
je
out
jae
das
stos
std
xorb
add
mov
icebp
pusha
xorl
sub
std
popa
dec
push
cwtl
jno
test
sub
pop
cmp
xor
out
fbstp
jle
inc
inc
lcall
and
pop
outsl
mov
xor
mov
sbb
mov
movsb
jnp
fsts
orl
and
push
pop
mov
pop
push
sarl
nop
movsb
sub
rorl
inc
or
outsb
jmp
mov
pop
lds
add
mov
dec
pushf
mov
xchg
rol
mov
mov
xchg
or
cmpsb
or
mov
add
mov
push
aas
mov
test
mov
inc
pusha
pop
rcrl
es
inc
lods
and
pop
add
inc
or
ss
call
cmp
mov
adc
lods
push
adc
add
ret
or
mov
cmp
inc
int3
std
ret
dec
push
xor
xor
jns
out
je
cltd
test
les
pop
dec
pop
cmp
mov
call
sub
mov
inc
add
jl
sub
gs
inc
push
stos
push
add
inc
lea
cmp
jl
inc
js
loope
xor
cmp
sub
jnp
cmp
aaa
mov
je
xor
push
pusha
adc
push
jae
addr16
movsl
xor
push
xchg
mov
inc
xor
in
xor
xor
jle
add
dec
fldl
mov
stc
mov
call
nop
bound
adc
aad
cmp
add
cmp
jl
sub
loopne
mov
push
movsl
add
mulb
sbb
mov
xor
loop
fwait
aaa
sub
xchg
xor
shr
xchg
sbb
jl,pn
mov
loope
rorb
ja
add
add
mov
ret
shr
movsb
loopne
add
or
add
jmp
add
pop
shr
int
sub
and
dec
fdivrl
inc
dec
loopne
jl
mov
add
mov
and
sub
sub
xor
mov
jg
popa
les
or
xchg
mov
test
cmpl
sbb
mov
bnd
xchg
rolb
sub
mov
nop
mov
or
outsb
xchg
mov
aad
mov
in
or
sarb
test
rcll
jge
imul
rorb
test
shlb
push
adc
loopne
xchg
add
dec
add
mull
pop
mov
lret
jl
aam
pop
dec
inc
add
aam
xchg
ljmp
add
jmp
pop
or
mov
adcb
out
lea
rorb
call
push
pop
out
jb
testl
rcr
push
push
xor
enter
cwtl
arpl
inc
fisubrl
lahf
sbb
adcl
ljmp
add
mov
jmp
mov
mov
add
pop
cld
test
mov
fnsave
lret
jne
in
and
xor
sbb
jp
cli
inc
push
ret
mov
inc
sub
les
add
add
call
and
sbb
testb
lcall
hlt
jge
sub
cmp
add
or
mov
or
int3
lahf
xchg
pop
cwtl
pop
add
mov
nop
mov
sub
xor
call
add
mov
or
xchg
das
repz
adc
testl
loopne
pop
movsl
mov
in
push
add
fstps
adc
fnsave
call
or
icebp
jl
dec
jmp
insl
add
stc
int3
push
sub
jne
xchg
xor
add
mov
and
fldl
pop
mov
fdivl
adc
addr16
std
ljmp
jge
jns
cmp
pusha
je
dec
xor
xchg
or
push
int3
outsb
add
or
jo
inc
push
fs
femms
lods
test
gs
xchg
loope
popa
push
push
nop
outsb
dec
lds
adc
jmp
fs
shlb
push
mov
adc
push
inc
jns
mov
adc
test
out
cmp
push
pop
faddl
fcoms
xchg
lods
adc
pop
xchg
inc
pusha
push
cmp
aas
mov
mov
push
test
pop
dec
scas
fs
inc
mov
rol
ja
inc
ja
fmul
rcrb
pusha
daa
into
aam
push
int3
adc
shrb
movsb
cltd
movsl
mov
and
xor
shrl
hlt
ret
test
adc
mov
mov
insb
fwait
ljmp
add
mov
adc
inc
es
inc
loopne
adc
je
xchg
loopne
int3
insl
mov
je
pop
jg
lcall
out
mov
and
push
xor
faddp
sub
and
fiadds
pop
pop
sbb
iret
adc
ror
or
add
cwtl
es
dec
nop
mov
push
mov
mov
push
push
inc
inc
js
cmpsl
mov
dec
loop
mov
stos
jp
add
je
push
cmpsl
lock
iret
roll
jecxz
out
pop
jmp
jno
mov
mov
push
ret
pop
sub
add
cmpsb
or
or
or
pop
notb
fcomi
or
xchg
repz
add
push
add
sbb
movsb
or
mov
iret
cmp
push
fisubrs
lret
or
dec
or
sbb
dec
pop
push
sar
jge
cltd
pop
inc
fidivs
push
sti
push
add
xor
sbb
pop
mov
ret
aam
mov
push
inc
enter
orb
jmp
ret
lret
push
add
lds
mov
jne
jmp
cltd
dec
and
pop
fiadds
mov
popa
subl
dec
push
xchg
pop
imul
cwtl
sub
pushf
add
and
enter
stc
mov
xchg
js
dec
add
mov
out
dec
sbb
push
pushf
imul
add
les
adc
int3
sub
inc
faddl
xor
cmc
jo
clc
add
cmp
inc
sbb
push
mov
adc
out
push
lock
inc
push
mov
sub
push
outsb
dec
mov
sub
iret
add
pushl
mov
adc
mov
adc
cmc
xor
sbb
cli
jb
orb
lret
lods
ret
add
mov
sbb
sti
mov
cwtl
addl
or
xchg
nop
push
mov
xchg
jl
sub
cltd
movsb
sbb
adc
popf
push
add
add
push
mov
push
jmp
les
sub
inc
fadds
mov
sbb
les
inc
nop
or
push
out
ret
inc
fwait
xor
push
cmp
popa
rorl
sbb
sub
ret
push
or
dec
xadd
je
hlt
fnsave
dec
std
push
jmp
jne
push
mov
repz
sbb
xlat
sbbl
pop
xchg
jo
shl
xor
shr
sub
loop
mov
push
shll
ss
bound
push
push
orb
and
stos
mov
mov
icebp
mov
dec
cmp
or
mov
cmp
mov
mov
jl
lds
aaa
movsb
mov
mov
fs
pop
and
into
mov
les
or
movsl
cmp
xor
xchg
push
rsm
insb
mov
test
adcl
dec
xor
dec
ljmp
test
and
jo
fiaddl
pop
imul
ret
pmaxsw
sahf
sub
or
loopne
jge
push
iret
rcrl
adc
cmp
icebp
les
cmp
scas
out
inc
js
imul
adc
mov
aam
aaa
push
push
lds
into
mov
jmp
xlat
dec
repnz
lods
pop
add
test
mov
les
rclb
jbe
dec
sub
mov
adc
sbbl
ja
icebp
sub
xchg
bound
xor
lods
mov
adc
pop
loop
pusha
loop
xchg
bound
mov
xchg
and
inc
dec
pushf
subb
mov
and
lods
pop
mov
jge
push
popa
and
jecxz
mov
cmpb
push
jns
daa
xlat
inc
ret
adc
inc
popl
xchg
mov
or
addr16
or
pop
rorb
or
mov
ret
and
jg
aad
inc
mov
es
or
je
cltd
and
jo
pop
mov
lds
or
adc
push
pop
addr16
mov
sahf
leave
in
repz
adc
insb
jp
inc
sbb
adcb
mov
inc
dec
leave
jne
lret
mov
stos
cli
subl
xlat
pop
or
rcll
sub
add
adc
mov
add
scas
or
enter
adc
cld
call
lahf
add
xor
aad
adc
inc
in
and
lcall
add
mov
sub
bound
inc
cmp
mov
add
add
jmp
dec
or
pop
push
push
jl
inc
ud2
adc
xor
sbb
frstor
jle
movsl
push
push
movsl
das
faddl
fstl
lock
mov
loopne
lods
in
ljmp
insb
fldl
pop
fsubr
pop
faddp
andl
sbb
or
add
fwait
adc
push
test
or
les
mov
inc
add
ja
xchg
lods
and
xor
sbb
data16
xor
cmp
mov
or
imul
test
jge
add
in
and
insb
fdivrs
sub
mov
clc
xor
out
je
add
fbstp
sub
sub
add
sbb
push
or
pusha
daa
hlt
popa
sub
sub
push
xchg
outsb
mov
mov
mov
pop
push
cwtl
jo
sahf
out
nop
mov
std
mov
fiaddl
nop
cmp
dec
mov
int3
dec
sbb
loope
enter
outsb
push
jb
fs
popa
cmp
xor
jne
jg
es
in
sub
mov
and
rcl
cld
pop
push
jmp
mov
cmp
jge
and
push
gs
cmp
fs
pop
xchg
cmpsl
cwtl
cmp
adc
shrb
or
add
test
pop
push
dec
loope
stos
mov
stc
popf
in
push
test
insb
mov
icebp
push
pop
ja
jg
mov
jne
push
push
pop
fldl
xchg
adc
lret
adc
lea
fildl
into
inc
add
xchg
xlat
orb
or
jns
mov
dec
sub
and
mov
shlb
pop
mov
sbb
sbb
mov
jmp
aaa
mov
ss
js
push
pop
mov
inc
das
stc
add
ja
lcall
adc
cmp
pop
ret
mov
std
inc
jnp
mov
decl
inc
adc
movsl
nop
js
std
mov
pop
xchg
lret
mov
inc
pop
inc
xor
xchg
sti
cld
adc
adc
shll
mov
mov
shrl
jne
adc
mov
jecxz
dec
icebp
mov
aad
add
xor
mov
and
dec
ret
in
enter
cmp
sbb
cmpb
sub
sbb
shrb
shl
push
bound
dec
mov
pusha
add
mov
inc
xor
lods
ret
adc
xor
mov
or
fcoms
mov
or
push
mov
add
inc
js
cmp
or
addb
add
cmpb
insl
popa
nop
aam
adc
les
add
fsubl
ljmp
ret
stos
add
sub
push
lds
push
inc
mov
mov
fadd
jle
pop
enter
mov
xorl
xor
sbbb
xor
and
arpl
sbb
ret
jmp
push
xor
add
int3
and
movsl
and
cmp
mov
fs
jp
cmpsl
push
lret
mov
mov
lea
xchg
clc
pushf
or
sub
pop
stos
shll
pop
lods
in
and
lock
divb
or
repz
rolb
pop
sub
cmpsb
test
movsl
test
sahf
sub
or
mov
add
and
pop
sbb
aaa
jne
mov
xchg
dec
insl
mov
movl
in
movsl
push
inc
adc
arpl
jno
or
pop
leave
shlb
push
dec
xchg
mov
push
adc
enter
sub
mov
in
subl
sbb
xchg
ja
xchg
add
in
ja
mov
in
inc
inc
xchg
movsb
jb
subb
mov
cmp
lods
jmp
jg
fstl
loope
mov
add
lret
or
add
fmuls
mov
jnp
push
add
add
es
add
int
outsl
lcall
in
mov
leave
jno
xor
pushf
cmp
fisttpl
leave
lods
aam
mov
dec
mov
or
loopne
sub
jecxz
lods
js
popf
push
cmp
daa
jne
stos
mov
sbb
add
dec
sub
dec
xor
test
push
arpl
fstl
jb
pop
addr16
cmp
sub
pop
or
sbbb
jg
lods
push
fimuls
js
rorl
pop
lods
xor
loopne
loopne
and
bound
push
adc
and
sub
testl
movb
and
in
sbb
dec
iret
jmp
cmpl
or
mov
pop
pop
xor
push
push
hlt
fldl
enter
cli
into
adc
push
mov
push
jmp
jmp
jo
rcr
adc
jmp
xor
mov
or
stos
push
or
and
enter
fs
xor
dec
pop
dec
test
je
sub
mov
add
scas
enter
mov
inc
lock
jbe
push
mov
push
pusha
fwait
ljmp
mov
call
mov
cmp
iret
mov
sub
lock
hlt
push
movlps
push
inc
ds
stc
xor
add
test
push
push
dec
test
cmpsb
pop
mov
xchg
lret
xlat
xor
aas
mov
cmp
push
in
cmp
orb
inc
push
shll
aas
repz
movsb
adc
clc
jne
and
push
jbe
fs
clc
push
pop
fstps
jb
ret
pop
add
or
sbb
push
sysexit
cmp
pushf
or
and
jnp
test
mov
dec
rolb
scas
add
fwait
leave
lock
mov
xchg
push
inc
add
rcl
cmp
and
xchg
adc
push
stos
outsl
loope
mov
out
lahf
into
jb
jle
daa
mov
xchg
jnp
cmp
in
add
fistps
adc
fnstsw
enter
push
xchg
add
loope
stc
or
stos
or
test
mov
sahf
add
mov
test
inc
mov
sbb
jbe
and
ret
mov
add
clc
out
mov
cmp
jne
mov
ds
cmp
adc
test
mov
stos
and
dec
enter
jo
adcb
bnd
add
test
jns
or
test
ror
mov
outsb
repz
push
stos
mov
dec
jmp
xchg
mov
pop
mov
lock
pop
clc
jl
pushf
mov
rorb
dec
sbb
sbb
sub
sbb
loopne
cwtl
xchg
out
rolb
xchg
dec
leave
loopne
nop
dec
sub
inc
dec
fwait
sbb
nop
out
les
and
mov
testl
sti
sbb
incl
ss
lcall
or
dec
aaa
rolb
jl
loope
sub
push
mov
aad
ds
jp
inc
xor
mov
data16
pop
push
pop
cmc
in
imul
adc
stos
push
stc
cmc
bound
mov
sub
pop
neg
push
adc
fsubrs
dec
sbb
leave
or
jp
or
int3
lods
idivl
push
mov
cmp
add
cmpb
sub
cmp
pop
xchg
push
inc
mov
rolb
push
add
push
hlt
jge
inc
rcll
xchg
les
cmp
xor
push
lahf
out
or
inc
pusha
sbb
push
lods
call
pop
push
or
fmulp
xorl
push
in
movsb
or
in
jno
shr
push
nop
loope
faddl
lock
sbb
jecxz
cmovno
or
add
add
push
dec
subl
push
scas
mov
adc
push
sti
add
xor
sbb
imul
xchg
mov
sbb
fldenv
out
test
mov
inc
push
in
scas
jecxz
push
cmp
pusha
insl
imul
pop
outsb
psubusw
sub
sbb
pusha
xor
scas
std
inc
jns
clc
imul
fwait
xor
cmp
pop
test
sub
rcrl
stos
xchg
sub
lahf
loopne
ja
in
cli
mov
xchg
je
sub
addb
into
mov
mov
jns
cmp
push
xor
cmp
push
and
jg
lds
std
add
adc
add
sub
pop
push
dec
sbb
add
lcall
sbb
icebp
push
push
pop
mov
imul
mov
push
sbb
nop
push
push
enter
mov
test
pop
mov
push
mov
inc
jmp
adc
inc
inc
cmp
sbb
push
cs
pop
mov
mov
leave
repnz
pop
push
push
xchg
xor
or
sbb
xchg
jge
loop
jge
mov
or
and
clc
adc
xor
add
dec
out
lea
pop
inc
mov
and
out
sub
push
xor
add
cmp
add
push
dec
jl
push
inc
inc
dec
push
add
cmp
mov
mov
sbb
iret
and
jbe
inc
subl
andl
push
dec
call
sub
add
inc
mov
gs
pusha
pop
nop
mov
lret
sub
adc
xlat
pop
xchg
lods
adc
pop
or
inc
add
pop
xor
mov
jmp
cmc
sub
rclb
sub
sbb
and
add
aas
xorb
scas
insb
fsubrp
adc
jo
cmp
mov
outsl
rcr
loop
aam
push
add
mov
or
int
push
inc
xor
in
or
std
sub
push
cmp
cmp
in
in
jl
xor
push
xor
fdivs
and
repz
adc
add
xchg
pop
or
or
ret
jb
or
sub
add
xchg
jl
or
and
mov
cmp
dec
lds
add
sub
cmpsb
mov
je
rol
adc
jo
fldcw
xlat
add
pushf
iret
jo
flds
inc
popf
test
inc
mov
pop
jg
fisubrl
and
push
sar
add
jg
faddl
inc
pop
adc
test
dec
dec
or
adc
and
cmp
into
push
nop
push
push
inc
nop
push
add
dec
sub
addl
jo
fs
mov
add
push
xchg
sti
cmp
mov
or
or
ss
dec
adcl
add
jo,pt
imul
pop
rclb
cmp
outsb
jl
pusha
lea
mov
add
repnz
sub
fcmove
pop
xor
jo
push
mov
jg
jne
incl
cmp
jl
xor
lret
into
lret
sbb
inc
dec
fdivs
cmp
pop
jns
dec
xor
xor
cmpb
es
push
jl
shrl
pop
jge
mov
enter
xor
cltd
or
in
fnsave
pop
je
push
mov
cmp
adc
les
cmp
or
push
xor
xchg
xor
push
testb
cltd
inc
and
dec
shl
pop
jne
jns
pop
sbb
imul
jmp
push
sbb
jb
je
sub
dec
int
lock
ss
xor
lock
jne
jl
test
mov
dec
cltd
js
mov
jge
lret
xor
sub
lea
shrl
fs
loope
sub
xor
sahf
mov
popa
push
inc
push
js
mov
shr
sbb
pop
jecxz
in
xchg
int3
xor
or
stc
pop
adc
inc
xor
or
sbb
das
dec
mov
adc
js
add
mov
jns
adc
jns
push
test
and
dec
cmc
inc
cld
mov
je
push
lods
cld
add
fs
add
xchg
stos
or
push
clc
mov
sub
popa
test
test
push
and
scas
sbb
shl
or
pop
add
cmp
sub
das
addr16
mov
mov
dec
add
mov
outsl
sbbb
jle,pn
or
inc
ss
inc
sub
aas
sahf
and
inc
cmp
xor
out
or
sub
mov
or
xchg
popf
dec
jp
inc
dec
mull
lret
mov
jg
fcmovnu
shlb
mov
push
or
out
jp
xor
insl
popa
rorl
out
shl
adc
jge
cmp
lods
dec
add
call
and
xchg
fs
cmp
inc
mov
fs
negb
push
or
push
xor
push
cmp
adc
mov
insw
add
testl
mov
rcr
or
jmp
mov
les
pop
mov
push
stos
movsl
imul
cmp
aas
push
or
push
xchg
call
add
or
imul
push
xchg
test
adc
es
push
pop
fdiv
je
push
cmp
sti
cmp
fadds
add
sub
sub
outsb
cmp
jnp
leave
jne
push
jmp
cmp
pop
dec
fstl
pop
aad
adc
mov
dec
add
or
fstpt
push
sub
push
sbb
test
and
xor
xchg
xorl
and
dec
gs
mov
shrl
add
sub
pop
sub
push
rcrb
mov
jne
mov
inc
jl
outsl
out
out
nop
xchg
mov
mov
loop
cmp
jge
pop
push
rorb
daa
rcll
add
or
int
sbb
cmp
rclb
push
jbe
fiaddl
mov
mov
nop
call
lea
shrb
orb
mov
or
xchg
shlb
jne
lods
nop
data16
test
pop
and
xor
or
xor
pop
add
dec
push
movsb
xorb
scas
insl
adc
sub
xchg
mov
push
inc
or
mov
loopne
rcrl
sti
stos
scas
or
inc
mov
dec
loopne
pop
popa
add
sbb
pop
xchg
xchg
cmp
scas
test
pop
dec
insl
orb
popf
sti
ss
mov
or
ficoms
test
int3
and
in
fiaddl
dec
and
mov
dec
shr
test
pop
sbb
xor
call
push
adc
mov
push
push
ret
dec
push
mov
and
notb
or
push
xchg
dec
sbb
add
mov
popa
inc
sub
jo
lahf
jg
sbb
scas
sti
inc
or
jb
icebp
push
in
mov
lods
vunpcklps
aad
in
inc
stos
loopne
mov
in
adc
add
inc
inc
rcll
inc
pushf
jo
or
sub
sub
pop
xchg
jmp
or
adc
ficompl
xchg
lds
ret
jno
ret
out
mov
mov
lea
add
aam
xchg
xor
mov
or
test
or
mov
xchg
sub
jmp
fldl2t
adc
jge
pop
outsb
inc
sbb
or
inc
jle
call
add
lret
pop
push
mov
sub
jne
rolb
pop
sarb
pop
xor
and
adc
sub
dec
or
jg
cmpl
popf
shrb
pop
and
pop
xor
adc
test
dec
pop
add
jl
adc
nop
jecxz
addl
add
inc
push
inc
popa
ret
and
jnp
ds
xchg
sub
repz
add
jmp
add
add
mov
inc
icebp
adc
orb
clc
clc
jnp
int
jmp
inc
lahf
mov
mov
sbb
sbb
decb
hlt
jl
push
push
push
and
hlt
enter
add
push
in
jg
les
loope
jl
add
xchg
and
adc
test
cli
ret
stos
xchg
std
mov
rclb
shll
scas
xor
dec
in
pusha
adc
and
sahf
and
hlt
mov
mov
in
ficoml
pop
dec
rorb
imul
shlb
add
jp
push
jg
je
rolb
and
test
or
cmp
enter
mov
adc
jecxz
push
out
scas
addb
add
mov
pop
je
lret
inc
mov
and
inc
cwtl
sub
in
jne
add
test
scas
cmp
push
fs
sub
pop
movsb
xor
pusha
push
push
cltd
js
lds
or
pop
add
or
rol
add
mov
adc
push
fxch
inc
rol
or
ljmp
sub
or
push
sbb
aaa
mov
push
sbb
jge
test
push
and
es
cwtl
mov
jg
rolb
mov
mov
pushf
shrb
add
jno
pop
dec
and
in
sbb
imul
mov
xchg
aam
loopne
nop
mov
popa
mov
outsl
mov
sbb
lea
jmp
xor
mov
xchg
loop
scas
in
mov
inc
add
and
xchg
add
push
push
repnz
lods
nop
sub
enter
mov
pop
sbb
pop
push
adc
dec
fsubs
mov
test
or
jae
lret
dec
popa
shrl
push
push
out
testb
push
push
push
xor
or
rcll
in
or
adc
jo
or
or
sbb
or
pusha
sbbl
add
ljmp
jg
pop
fs
mov
sub
push
lret
ret
adcl
sarl
adc
fs
or
xor
pop
sbb
mov
pop
hlt
call
testl
or
xchg
shrb
add
inc
scas
jbe
jae
add
inc
xchg
test
adc
sbbl
ds
or
inc
pusha
pushf
or
add
adc
js
and
lahf
push
xor
inc
push
inc
in
js
or
adc
fs
fcoms
adc
push
and
popf
or
adc
jge
inc
addb
sarb
mov
add
push
cmpsl
inc
lds
data16
es
inc
mov
mov
int
iret
adc
jp
sbb
add
mov
mov
mov
mov
je
xchg
test
lods
into
lcall
or
xor
pop
push
push
push
add
adc
movsb
lea
dec
cmp
stos
cmp
xchg
rorb
call
jo
sub
test
mov
lods
push
inc
push
jmp
in
push
in
insl
and
jl
test
push
push
in
loopne
imul
or
pop
jmp
aaa
pop
movsl
fs
mov
mov
sbb
loopne
add
lcall
scas
fmul
dec
or
add
push
xor
xlat
insb
movsb
ds
mov
push
jns
fadd
dec
fsubs
jmp
pop
lret
fcoml
xchg
jmp
fadds
dec
jmp
xor
inc
int
sti
or
or
nop
push
cmp
imul
add
mov
jl
rclb
mov
ljmp
out
xchg
out
xchg
add
cmp
xchg
sub
inc
pushf
data16
shll
fs
dec
shl
leave
inc
pushf
sbb
cs
and
adc
adc
jmp
cmp
sarb
sub
fistl
cmp
rolb
push
jo
out
xchg
fwait
or
pop
jmp
cmp
push
and
push
cmp
shll
fimuls
cmp
scas
mov
sub
inc
sub
or
cs
push
fiaddl
push
xor
or
mov
adc
push
mov
pop
push
rorl
addl
sub
fdivl
lock
imul
xchg
jae
mov
ja
sub
adc
sub
sub
ja
inc
sarb
push
cmp
xor
and
js
ficomps
add
sbb
out
test
sbbl
mov
add
mov
adc
push
data16
cmp
stos
ds
pop
push
sub
adc
jb
addb
xchg
lret
in
adc
pop
and
push
out
xchg
jge
aaa
fmuls
push
pop
mov
and
and
add
outsl
adc
lods
stos
mov
push
xchg
loopne
mov
cmp
and
push
mov
push
enter
andl
or
push
cmp
loope
mov
push
add
and
movl
inc
and
movzwl
and
cwtl
cmp
fldl
jmp
xchg
test
ja
jmp
jecxz
fwait
pusha
sbb
pop
mov
sbb
sbb
inc
adc
mov
mov
push
adc
push
cmp
pop
fdivrs
sub
lods
or
cmp
lret
sbb
imull
lahf
fcoml
daa
cmp
js
jae
movl
mov
or
rolb
movb
push
popf
hlt
or
cmpb
ret
add
sarb
leave
enter
inc
cmp
ja
jecxz
adc
mov
pop
mov
jg
or
inc
jmp
into
test
pop
movsb
repz
push
je
jo
and
cld
movsb
das
add
shlb
and
fcoml
shr
mov
mov
push
add
push
mov
fsubrp
or
addb
adc
push
mov
fs
jge
mov
jnp
xor
jne
movsbl
push
fnstenv
repnz
out
mov
adc
and
je
popa
loop
shrl
mov
sbb
adc
test
test
int3
push
xchg
arpl
movsb
rcll
cmp
xchg
sbb
adc
rorl
sarl
inc
add
jle
fdiv
or
sarb
pop
dec
cmp
jo
push
push
mov
ficoml
push
cmp
jl
push
sub
sbb
cmc
add
add
dec
lods
and
or
lahf
mov
in
dec
push
mov
call
lret
add
hlt
out
add
mov
sub
push
dec
ja
jecxz
push
add
mov
repz
enter
cmp
repnz
push
add
in
in
add
push
sti
in
in
or
or
jnp
jae
jae
or
jbe
jmp
or
addr16
jae
por
jmp
adc
pop
adc
push
jae
jae
adc
dec
adc
dec
adc
aas
jae
jae
pop
jmp
sbb
xor
jmp
jae
jae
sbb
es
and
pop
sub
jae
jmp
and
or
mov
and
test
rol
lret
ljmp
mov
mov
cld
add
incl
add
repnz
repz
inc
dec
push
pop
pusha
push
jo
addb
xchg
cltd
sahf
mov
test
mov
mov
cmp
lret
rcl
cmp
repz
jmp
pop
iret
clc
std
pop
add
add
and
decl
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
mov
addb
in
shrb
cmp
loopne
cmp
popf
mov
cwtl
push
xor
int3
movsb
pusha
inc
test
pop
xor
add
sti
fisubrl
pushf
les
into
in
shl
sub
test
lea
aam
add
pop
mov
int
push
or
or
xchg
je
std
push
jo
mov
ljmp
cmp
push
rdpmc
jne
sbb
subb
pop
sub
sub
or
or
pop
xchg
nop
cmpb
lea
push
fcoml
xlat
mov
js
mov
lret
lods
jo,pn
mov
adc
fdivr
xor
into
mov
lods
cmp
mov
xchg
rcr
and
aas
mov
cmp
je
faddl
and
mov
xchg
sbb
add
icebp
push
imul
flds
sub
push
push
xor
fcompl
pushf
fsubs
test
clc
jae
sub
je
cmp
jae
sbb
mov
sbb
inc
fstpl
inc
mov
inc
jge
dec
pop
push
add
add
fidivrl
cmpsl
inc
push
cmp
fcomip
or
pop
push
adc
pop
xchg
call
push
pusha
loop
mov
push
movb
clc
cwtl
pop
mov
ret
movl
mov
add
cmp
mov
or
inc
mov
mov
daa
add
rorb
xchg
pop
inc
mov
mov
push
jmp
push
mov
stc
ja
lea
imul
testb
clc
stos
mov
insl
mov
stos
mov
leave
inc
shrb
sbb
lock
or
notl
xor
push
jb
add
inc
sub
add
shll
cli
scas
xor
fadds
add
and
mov
push
and
pop
in
addl
push
rcrl
adc
inc
pop
stos
xchg
orl
fld
outsb
out
insl
jg
popf
nop
mov
jmp
pop
lds
les
jno
fcomi
cmp
lcall
add
pop
push
push
cmp
fcmovnbe
inc
bound
mov
add
add
sbb
add
sbb
push
mov
pop
lret
test
stc
xor
sbb
pop
test
cltd
stos
mov
xchg
rorb
push
and
adc
cmp
add
les
imul
test
inc
cs
inc
xor
movl
pop
bound
push
sub
add
sub
xchg
or
push
inc
jmp
add
in
adcl
clc
shrl
cmp
adc
mov
jl
mov
nop
and
and
pop
adc
arpl
cmp
add
add
mov
jne
lea
cmp
fdivrl
xchg
lock
jne
or
js
cs
cmp
or
sbb
and
mov
or
jmp
pop
outsl
or
icebp
jl
dec
xchg
sahf
cmp
push
insl
pop
dec
fcmovu
mov
test
jae
ds
nop
jmp
imul
mov
test
cmp
jae
movzbl
ret
jp
mov
sti
adc
sbb
js
jl
orl
jmp
mov
add
adc
pop
push
mov
in
ss
xor
mov
hlt
mov
leave
sbbb
data16
mov
sbb
pop
je
push
clc
mov
cltd
ja
jmp
in
cmp
nop
jbe
add
xchg
mov
fwait
and
jo
push
shll
les
mov
insb
enter
or
or
insl
dec
loope
fidivs
insl
add
sbb
pop
and
outsl
ja
adc
sub
jle
fcomps
adc
push
xor
push
adc
cli
mov
ficoml
ss
mov
dec
sti
js
adc
push
jmp
data16
add
add
pop
and
fbstp
xor
xchg
add
add
adc
pop
test
inc
adc
xor
inc
jl
roll
and
xor
sti
out
enter
cmc
movl
ljmp
mov
adc
lea
stos
sbb
inc
jl
fimull
sbb
sbb
add
fistl
xchg
or
push
cmc
and
imul
incb
mov
pop
xchg
cmp
cmp
jno
cwtl
cltd
inc
inc
testl
pop
jge
sbb
or
add
ja
cwtl
sbb
imul
rolb
jp
jmp
mov
jmp
sbb
inc
testl
jne
mov
pop
pop
sarb
or
and
xchg
mov
and
jmp
daa
jmp
xor
pop
call
nop
inc
fwait
inc
or
pop
fistpl
movsb
jne
push
pushf
push
out
fwait
push
push
inc
xchg
sbb
pop
add
xchg
push
ret
sbbl
sub
jmp
cmp
mov
sub
imul
test
mov
push
push
lock
loopne
fwait
pop
in
mov
jo
in
pushf
push
or
loope
dec
sbb
xor
cli
inc
int3
jo
je
inc
popa
add
inc
adc
pop
adc
adc
sub
inc
aad
ljmp
popa
sbb
cmp
push
ja
xchg
lds
dec
shlb
js
lret
xchg
addl
dec
aaa
mov
cmp
push
xchg
sub
sahf
adc
cmpps
or
rcrl
and
jnp
call
mov
push
scas
pop
mov
leave
jecxz
fwait
dec
popa
dec
or
test
adc
sbb
mov
nop
pop
fisttps
adc
jg
leave
dec
add
pop
loope
and
mov
jp
loopne
nop
stos
mov
xchg
push
cmp
and
je
adc
ljmp
and
jge
test
popa
aad
mov
sub
jae
adc
pop
call
cmpsb
imul
inc
pop
inc
xlat
xor
rolb
int
dec
sbb
daa
stc
push
add
or
adc
adc
add
add
dec
xchg
pushf
lcall
jb
xchg
inc
jae
sbb
mov
pop
mov
xor
xor
push
orl
jae
inc
movsl
in
repz
xchg
cld
cmpl
test
xchg
pop
push
adc
out
or
inc
dec
pop
les
dec
dec
sub
rcl
shrb
pop
adc
cli
test
mov
pop
push
jl
mov
xchg
sbb
clc
es
je
inc
mov
data16
hlt
add
sub
xchg
bound
push
pop
in
je
cmp
add
xor
test
cmpsl
sbb
or
call
inc
push
push
mov
mov
insb
dec
dec
sub
jmp
jmp
push
fs
ss
or
lcall
sub
imul
popa
rorb
jl
mov
jle
out
shlb
sbb
dec
sbb
xchg
and
pop
jnp
sub
mov
ds
pop
sbb
lock
adc
xchg
jecxz
mov
or
leave
cmpsl
add
sbbb
les
lret
mov
inc
int3
inc
loope
dec
jmp
mov
cmp
stc
xchg
aaa
rclb
leave
adc
cmpsb
pusha
and
ds
lds
shlb
mov
xor
lcall
ja
arpl
cmp
jle
pop
add
mov
push
xor
mov
or
inc
inc
mov
mov
insb
mov
dec
popl
imul
xor
mov
clc
imul
xor
jbe
sbb
xchg
sub
push
push
adc
pop
rorl
adc
movsb
hlt
push
out
push
push
lods
add
sub
jbe
pop
and
and
jno
push
aas
jg
mov
xor
xchg
xchg
sub
imul
stc
and
scas
punpckhwd
or
and
dec
xor
das
push
dec
in
dec
inc
lea
nop
mov
adc
inc
enter
mov
mov
fs
daa
sbb
mov
sub
lcall
push
cs
and
and
andl
hlt
ret
lock
and
sarl
sbb
sbb
mov
add
pop
fcmovne
leave
sbb
mov
xchg
aad
cld
bound
and
jle
lock
xlat
out
mov
bound
shr
inc
sbb
js
jle
or
in
jecxz
lea
inc
pop
cmp
jbe
jb
pop
lea
push
mov
sbb
jo
xchg
push
mov
ljmp
push
adc
fpatan
fildl
daa
xchg
or
push
fstl
sti
push
or
dec
data16
mov
addr16
dec
dec
sbb
sbb
fistpl
js
mov
fsubs
mov
les
sar
adc
pop
cmp
je
cmp
add
xchg
push
inc
push
xchg
or
lret
push
mov
fnstsw
pushf
sbb
xchg
and
outsl
pop
mov
mov
mov
adc
mov
jo
sbb
cmpb
xchg
shrb
or
bound
popa
outsl
and
xchg
inc
fstpl
fisubrl
push
shll
or
loope
jns
mov
sub
mov
pop
fidivrs
push
sub
stos
stc
cmp
xor
inc
lods
push
nop
fisubrs
pop
lods
addr16
xchg
push
pop
pop
jnp
pusha
xchg
jo
repnz
nop
push
xor
add
xlat
and
aaa
rol
cmp
mov
add
subb
je
or
inc
dec
dec
mov
sbb
cmp
cs
pusha
cmp
mov
mov
andb
nop
inc
mov
mov
pushf
les
pop
jb
js
mov
lea
das
insb
adc
daa
adc
adc
shrl
push
cmp
jge
mov
mov
inc
inc
hlt
mov
add
xchg
cmc
cs
fildl
xor
add
sbb
or
dec
loopne
mov
lock
clc
clc
cld
pop
add
dec
aas
jae
movl
sbb
push
add
add
add
ret
xor
lret
and
inc
add
add
dec
je
add
adc
cmp
in
das
cli
mov
and
cmp
orb
mov
rol
decl
mov
or
mov
sub
adc
mov
rorl
lds
addl
push
jle
mov
sub
xor
or
jnp
je
push
add
jb
jecxz
int
sbb
out
xchg
repz
add
add
jmp
sub
in
add
push
add
add
je
cmp
jne
sbb
adc
mov
pushf
cmp
cmp
bound
ja
inc
add
xor
add
bound
add
xor
inc
addb
pop
cmpsb
ret
sbb
cltd
idiv
inc
inc
mov
dec
loopne
scas
mov
sbb
xchg
in
out
inc
add
pop
xor
mov
mov
push
add
fwait
sbbb
aas
cmp
mov
stc
mov
lods
add
push
movb
lock
cmp
mov
je
cmpsl
ss
jbe
inc
test
jmp
inc
test
imul
rol
cmp
sarb
cmp
ljmp
pop
outsb
gs
jae
lea
inc
lods
dec
jmp
mov
sub
pop
jne
mov
inc
sub
jle
in
adc
cmp
je
cmp
push
mov
je
cmp
jne
inc
jne
dec
into
push
mov
flds
sub
pop
or
cmp
scas
insb
sub
jb
mov
je
ret
cmp
in
pusha
loopne
jne
add
sarb
loop
cmp
arpl
mov
cmp
push
jg
lods
add
push
push
fmuls
add
popa
imul
mov
jp
jl
or
jg
mov
jmp
and
pop
outsb
outsb
ds
jmp
inc
jl
inc
jg
aaa
mov
std
push
jp
add
shl
dec
mov
sub
mov
call
mov
fscale
fiadds
outsl
adc
push
xchg
jg
imul
and
je
insl
insb
jno
add
push
leave
pop
les
mov
xor
stos
push
out
movsl
or
scas
and
push
ror
sar
aaa
add
inc
idiv
scas
push
inc
cmp
pusha
mov
jg
scas
jmp
sub
rolb
add
lcall
inc
les
aaa
lcall
xor
dec
sub
sbb
cmp
inc
xor
or
push
pop
in
rcrb
push
xor
fsubs
inc
je
adc
cmpb
mov
jo
nop
adc
cmp
sbb
add
in
inc
inc
push
out
jmp
xor
xor
js
jnp
or
and
push
xchg
push
rolb
scas
addr16
pop
fsubr
mov
inc
or
adc
push
cmp
addb
mov
or
cmp
ret
fnsave
je
and
cmpsb
pcmpeqb
clc
iret
or
cmovno
pop
xlat
mov
jnp
test
mov
add
sbb
add
imul
mov
mov
pop
cmp
sub
inc
dec
mov
add
imul
pop
adc
cmp
mov
xchg
or
push
mov
xchg
mov
addb
adc
or
daa
arpl
add
pop
call
sbb
and
pop
dec
sbb
xor
jmp
mov
and
cmp
add
dec
xchg
sar
cwtl
popf
add
dec
jecxz
dec
cmp
and
xchg
mov
lock
sub
jge
jne
stos
add
and
add
xor
sbb
pop
push
or
and
inc
adc
xor
inc
mov
or
adc
pop
sub
into
dec
or
rclb
xchg
jmp
fcoml
or
mov
or
or
mov
mov
inc
popl
push
adc
ljmp
icebp
jmp
push
outsb
insb
adc
rolb
test
pusha
or
out
xchg
in
and
sbb
les
push
lock
adc
sub
sbb
scas
or
jl
aam
xor
pop
shrb
out
or
mov
test
sbb
jne
push
movb
lock
data16
mov
orl
decl
rclb
xor
cs
pop
or
leave
dec
and
test
pop
jo
call
movsb
dec
mov
push
rcll
push
add
in
xor
pop
mov
push
sub
cmp
inc
push
imul
inc
xchg
and
out
cmp
outsb
add
xor
movl
or
les
dec
stos
inc
sub
les
add
pop
lea
fs
xor
sbb
movb
jbe
xchg
push
xor
nop
and
push
pop
add
inc
jmp
inc
pop
incl
adc
cmpb
jne
imul
mull
jno
jnp
test
mov
jmp
mov
ja
dec
ret
sbb
and
sbb
mov
aas
add
lods
rolb
mov
adcb
inc
inc
push
xor
aam
popa
ja
cli
push
xchg
test
adc
cld
mov
pop
add
lods
jb
loope
in
adc
inc
add
cmp
popf
cmp
sub
inc
sbb
push
inc
adc
aas
sbb
pop
repnz
addl
pop
push
adc
ss
push
addb
rcll
call
push
cmpsb
mov
dec
aam
push
mov
mov
movsl
or
push
dec
dec
and
data16
les
les
xchg
push
dec
into
push
call
push
and
mov
popa
xor
ret
pop
in
and
xor
es
push
scas
and
aaa
cs
add
xor
pop
sbb
inc
push
sbbl
push
orl
out
cmp
bound
pop
pop
test
int3
fildll
sbb
imul
xchg
inc
lock
clc
add
mov
add
adc
add
jne
hlt
push
fnstenv
mov
lock
sbb
mov
jl
or
repz
and
push
push
push
lret
add
rclb
rcr
push
push
adc
sbb
jnp
dec
nop
xchg
sub
cwtl
mov
inc
push
push
ja
je
stos
push
addr16
mov
ficoml
push
and
ljmp
mov
add
movq
sub
jge
insl
rol
mov
test
sub
sahf
sbb
bound
std
push
or
xchg
lock
jbe
in
jg
mov
lcall
xor
jge
lods
out
jmp
push
lds
scas
or
push
mov
xchg
or
jo
je
ret
mov
sbb
test
shl
imul
mov
add
mov
and
xor
movl
mov
xchg
adcl
mov
lahf
sub
add
push
mov
mov
dec
jne
and
nop
sbb
xor
mov
cmc
dec
adc
addr16
jne
xchg
mov
push
test
pop
push
adc
cmp
inc
push
or
push
adc
xlat
lods
jb
inc
push
scas
push
inc
addl
pop
jg
fdivl
dec
sbb
or
adc
sbb
inc
call
xchg
add
push
mov
shrb
push
jecxz
add
cmpl
or
jmp
push
adc
adc
mov
je
and
xchg
jo
dec
push
or
cltd
mov
cmc
or
add
call
lds
jnp
popf
in
pop
inc
jb
add
add
push
mov
loop
add
test
xor
sbb
aaa
adc
outsb
sub
mov
mov
jl
xlat
addb
dec
pop
xchg
dec
shrb
sti
mov
and
sbb
push
cltd
fldenv
outsl
jle
loop
jg
sbb
jno
xor
sbb
dec
sbb
add
bound
out
pusha
fildl
mov
mov
into
je
mov
enter
and
pop
ja
jmp
mov
sub
xor
sbb
sbb
xchg
adc
and
test
push
xchg
sub
fisubrl
cmp
sub
movsl
nop
push
ja
fwait
es
stos
push
pop
fsub
xchg
push
cmp
imul
das
je
xor
mov
and
stos
xchg
jo
mov
jle
dec
arpl
jb
xor
mov
push
cmc
jno
je
outsb
into
or
into
sub
mov
push
mov
or
or
movsb
or
cmpl
sub
fisttpll
or
shl
and
adc
jno
in
dec
mov
xor
xor
shll
sub
mov
or
push
jecxz
sub
xchg
xor
pushf
fstpt
lods
and
push
dec
xor
pop
pop
daa
scas
and
mov
mov
pusha
into
xor
sahf
or
adc
jo
ret
inc
push
loop
cli
ret
push
jmp
clc
jp
sub
mov
inc
push
push
and
push
add
rorb
pusha
ret
loopne
ret
jo
sbb
or
mov
mov
in
fs
pop
dec
pushf
repz
aaa
cmp
xor
xchg
movsb
push
out
push
xor
imul
cmp
fdivl
adc
adcb
cwtl
and
test
jp
push
push
sbb
mov
and
add
movl
shlb
or
adc
lahf
mov
xchg
dec
ret
mov
push
or
or
add
xor
aaa
mov
out
xor
and
ja
out
add
shll
adc
or
adc
js
jg
shrb
jno
fcmove
xchg
xchg
cmp
sbbl
inc
mov
pusha
lock
in
jo
loopne
in
jb
test
shll
or
xorb
pop
and
mov
cmp
or
or
adcb
es
leave
call
cmpl
add
pop
pop
js
xchg
insl
push
push
fldenv
shll
rorb
inc
add
ret
sbb
mov
mov
fstpl
imul
fistpl
add
inc
or
out
sti
push
es
cwtl
and
mov
xor
and
mov
mov
js
es
jbe
adc
fs
and
jg
jb
dec
xor
jmp
inc
pop
test
cltd
dec
adc
outsb
or
call
adc
adc
cmp
cmp
ja
fsubrs
imul
out
inc
in
ret
imul
jns
cmp
shr
mov
ret
outsl
in
sti
or
dec
jno
daa
cwtl
jecxz
sub
test
lods
adc
test
add
dec
adc
mov
inc
pop
dec
subl
and
adc
lods
cmpsb
adc
and
jne
pop
inc
clc
sbbb
mov
rorb
mov
rorl
push
or
sbb
je
in
add
adc
xchg
icebp
dec
hlt
push
mov
subl
cmp
adc
inc
test
jo
dec
and
xchg
mov
cmp
inc
or
mov
or
cmp
enter
adc
and
mov
lea
sub
imul
mov
in
adc
ja
call
fsubs
jo
jo
pop
test
inc
imul
or
push
or
sbb
sub
pop
das
and
or
inc
or
mov
mov
inc
mov
sbb
jo
std
les
cmp
sarl
cmp
ja
or
sub
in
or
sub
mov
aam
test
xor
pop
mov
cmp
cmpl
push
pop
out
and
outsl
pop
push
nop
ret
jae
cmp
jmp
sbbb
jp
cld
sbbl
adc
and
ds
cli
push
sub
sbb
fnstenv
dec
jae
icebp
es
jmp
lea
data16
daa
repnz
xchg
shrb
pop
dec
push
pop
mov
or
adc
sbb
pop
jne
add
in
arpl
push
ret
adc
xor
add
fwait
dec
mov
popa
popa
addr16
xor
pop
and
scas
push
cmp
adc
loopne
mov
js
mov
push
inc
sub
loopne
scas
xchg
nop
sarb
mov
movsl
sbb
shll
dec
movsl
jecxz
je
es
push
dec
sub
es
jl
jp
pop
jmp
sarb
or
or
rcl
xchg
loope
push
inc
pop
cli
mull
adc
pop
or
insl
jno
sub
mov
lea
cmp
pop
mov
mov
ficoms
cmp
gs
stos
hlt
pop
adc
add
cmp
mov
jg
add
pop
pop
mov
mov
xchg
xor
xchg
push
repnz
test
inc
add
jbe
clc
je
jp
xlat
bound
and
mov
add
daa
jge
out
lods
addr16
adc
out
or
stos
ret
ret
cmpsl
or
shr
add
data16
adc
fs
pop
rcrb
dec
sbb
in
inc
add
or
gs
or
les
sbb
ja
and
cmc
pop
mov
mov
cltd
sub
inc
mov
push
push
jae
js
mov
fcomp
push
les
sti
loopne
outsl
in
popf
dec
scas
shlb
inc
jg
push
xchg
sbb
or
inc
push
pop
outsl
xor
ret
arpl
pop
ret
cs
pop
loopne
dec
sbb
loopne
test
cmpb
jmp
add
push
or
add
inc
popa
sub
ja
loop
andb
fwait
lods
or
adc
ret
out
and
dec
lahf
inc
push
imul
push
imulb
or
imul
push
loopne
adc
mov
jae
ds
xlat
push
pop
clc
adc
ret
jg
and
adc
sub
sub
pop
sbb
inc
sarl
dec
in
xchg
scas
add
fisttpl
sub
aad
add
cmp
inc
xchg
jnp
rorl
lcall
mov
imul
adc
mov
aam
int3
mov
das
cmpsl
xor
cmp
dec
adc
mov
mov
or
je
fs
add
xor
sbb
rclb
pusha
push
mov
inc
xchg
das
sub
push
divb
pop
insb
inc
ret
or
cmp
and
pusha
or
add
and
movsl
pop
cmp
dec
std
pop
lcall
xchg
sub
enter
mov
adc
pop
xchg
inc
and
mov
jmp
insl
dec
adc
sbbl
sub
dec
add
cmpsb
pop
shlb
mov
clc
imull
and
mov
popa
sub
outsb
jmp
sbbb
clc
dec
rcrl
add
xor
or
xchg
hlt
mov
pshufw
add
push
add
out
cmp
sub
pop
loopne
xchg
jb
and
addr16
push
iret
lret
aam
or
dec
inc
adc
enter
cwtl
add
les
pop
xchg
cmp
fiaddl
sub
pop
repnz
je
sar
aaa
mov
loope
mov
mov
sub
push
das
hlt
lock
fdivrs
adc
push
pop
ds
ljmp
sbb
ss
xchg
ret
mov
cmp
dec
loope
out
jne
mov
xor
sub
movsb
mov
imul
je
pop
movsb
mov
push
shrb
mov
push
and
add
leave
les
inc
xchg
push
inc
mov
mov
or
sub
or
rclb
jmp
es
mov
rcll
mov
cmp
jbe
push
rorb
popf
jl
cmpb
mov
lret
fwait
nop
sub
rorl
mov
inc
enter
cltd
test
loope
nop
jl
cli
pop
inc
mov
or
cmpsb
data16
and
out
ljmp
sub
icebp
in
bound
mov
and
pushf
shll
dec
inc
add
insb
xchg
or
sbb
mov
xchg
xchg
jo
lret
js
jne
lcall
adc
inc
cmp
sub
inc
or
add
subl
enter
cwtl
mov
push
jo
lea
xor
xchg
push
mov
adc
xchg
xor
addr16
jp
inc
pop
xor
data16
push
or
pop
in
cmp
sbb
mov
add
or
pop
fldenv
ja
shll
mov
sbb
in
xchg
mov
daa
jmp
clc
mov
mov
or
pop
mov
in
xchg
sub
cmp
das
test
inc
push
xor
pop
div
adc
push
mov
jb
lea
andb
mov
lock
je
or
push
cmp
adc
jp
xchg
xor
sub
adc
jne
mov
sub
cmp
mov
gs
add
aam
fsubr
bound
fstl
cmp
xchg
push
add
popa
cmpb
pop
and
stc
add
roll
dec
movsl
imul
xchg
and
or
fiaddl
es
push
insl
ss
xchg
loopne
je
mov
sub
sub
jo
shlb
std
cmpsb
imul
movntps
sub
jne
bound
adc
out
adc
outsb
add
xor
inc
lret
and
hlt
ret
jle
int3
add
mov
add
imul
call
das
mov
push
int3
loope
das
push
adcb
call
inc
cmp
jb
neg
and
je
sub
mov
mov
sub
jne
lahf
out
lds
into
loopne
add
or
out
mov
or
add
stos
mov
dec
ljmp
ret
or
popa
les
hlt
sub
add
shrb
les
mov
mov
outsl
and
mov
lret
push
sub
push
mov
adc
xor
push
sub
adc
clc
or
add
mov
mov
lods
jno
cwtl
scas
pop
push
mov
sbb
and
sbbb
jne
fnstcw
es
aaa
mov
push
and
clc
jg
fs
shr
xor
jmp
movq
movaps
mov
enter
jns
clc
jae
xor
jle
xor
jmp
push
ror
test
decl
xor
mov
js
and
lret
or
jg
lods
mov
adc
jnp
mov
mov
aam
ret
or
out
xchg
adc
sbb
fldl
ret
mov
jbe
and
mov
mov
loopne
ret
rolb
adc
cmp
scas
mov
test
subb
rcrw
and
orb
lcall
jle
aam
xor
xor
pop
add
add
xorl
inc
cld
jb
test
mov
or
adc
es
fmuls
int3
jmp
nop
inc
ficompl
ret
adc
std
loopne
shl
cld
jmp
hlt
jp
sub
movsl
cmp
mov
std
sub
and
xor
lret
inc
dec
pusha
cmpl
xchg
adc
testb
add
jg
or
mov
push
mov
push
sub
jge
cs
inc
sub
clc
ja
mov
jbe
lahf
mov
fidivl
adc
jne
inc
addb
push
fstpt
repnz
cmpb
push
lock
add
mov
inc
inc
and
insb
addr16
inc
adc
mov
arpl
ret
xchg
ljmp
sub
dec
jl
ret
loope
imul
mov
mov
sub
bound
scas
inc
xor
add
mov
repz
push
addb
mov
jno
andb
or
ss
test
jno
mov
inc
adc
fmuls
sbb
mov
int
mov
adc
jge
jns,pn
and
lds
sub
pop
or
inc
push
jne
xchg
mov
addr16
inc
pop
in
push
xchg
add
sbb
mov
xchg
movb
loope
arpl
pushf
pop
addr16
lods
in
or
adc
ficompl
and
xor
adc
cmpsb
pop
inc
in
lret
jnp
mov
call
dec
xlat
pop
sbb
cmp
loopne
adc
nop
jmp
inc
jnp
std
or
mov
pop
mov
or
in
outsl
mov
hlt
push
aaa
mov
pop
cmp
ret
loope
mov
out
mov
test
fs
scas
or
dec
mov
inc
cmp
test
xor
pop
arpl
arpl
add
call
sbb
pop
fists
push
lock
add
jbe
adc
inc
sub
fdivrl
bound
or
ret
nop
pushf
sub
es
mov
sub
sub
lock
or
sub
data16
mov
sub
add
xor
add
data16
xorb
mov
add
je
jae
enter
pushf
sbb
jl
sub
je
fiaddl
add
cmc
xchg
sbb
and
shr
arpl
in
inc
cwtl
loop
icebp
mov
movsb
jns
add
call
rcl
mov
dec
jbe
adc
xor
scas
mov
clc
add
pop
inc
inc
test
les
mov
sbb
or
and
cmp
jmp
ret
fsubrl
test
cmp
mov
jmp
jp
inc
xor
sub
adc
shll
stos
adc
clc
loope
or
cmp
jne
dec
jmp
sar
ret
fcoml
mov
lret
inc
bound
mov
mov
push
loope
rorl
push
sbb
mov
jno
cmpsl
cmpsl
ss
pop
pop
shrb
or
add
js
not
inc
xchg
mov
scas
shll
cmp
cmpsl
fs
loop
or
mov
pop
and
out
dec
pop
pop
jne
jp
lahf
dec
rolb
ljmp
or
rep
jmp
jo
mov
mov
shlb
add
test
mov
lea
les
and
inc
cld
movsb
and
mov
scas
sbb
inc
add
add
repnz
mov
push
nop
into
enter
xchg
dec
cmpsb
push
lcall
xchg
mov
daa
push
adc
add
lahf
imull
hlt
push
in
in
inc
mov
mov
sahf
out
call
out
sahf
out
hlt
hlt
clc
clc
iret
mov
pushf
cld
xchg
sbb
add
sbb
jmp
cmp
push
push
mov
pop
xor
sti
and
push
andl
sbb
lea
into
jl
cld
pop
and
std
adc
mov
enter
jl,pt
daa
stc
sub
jnp
in
cmp
push
loopne
add
sub
add
sbb
out
add
and
xchg
sahf
inc
push
out
pop
mov
mov
fwait
mov
mov
data16
push
mov
addb
cmp
repz
cwtl
mov
jae
ret
ss
sbb
repz
repz
adc
or
repz
or
or
jno
jae
inc
or
push
in
adc
or
push
add
mov
icebp
xchg
pop
mov
cltd
push
and
sbb
jl
mov
inc
movups
or
int3
add
or
mov
cmpsl
icebp
mov
test
adc
repz
mov
push
int
xchg
sbb
cmp
andb
sbb
push
jae
xor
incl
dec
adc
sbb
orb
ds
cltd
adc
sub
aas
jge
das
ret
cmp
js
push
shll
sbb
pop
into
int
cmp
ret
iret
push
cmp
push
inc
pop
jmp
mov
or
push
pop
mov
dec
pop
add
sub
inc
mov
mov
nop
and
mov
out
iret
xchg
sub
lock
dec
js
jp
mov
inc
cmp
mov
movsl
cltd
inc
inc
pop
and
or
mov
dec
jecxz
loop
popf
cltd
inc
mov
sbb
push
loope
cmp
lcall
dec
js
push
jle
mov
icebp
popa
adc
add
jbe
sub
inc
aaa
insb
inc
mov
adc
add
lea
cmp
pop
test
gs
lret
sub
xor
mov
aam
adc
or
add
cmpb
sbb
jno
fcompl
je
jne
sbb
pop
sub
clc
pushf
inc
inc
or
lret
add
ljmp
pop
incb
les
pusha
inc
loope
xchg
mov
push
inc
inc
jo
push
xor
mov
pusha
push
and
popf
adc
je
jbe
pop
mov
and
test
mov
or
mov
scas
pop
and
xor
sub
stc
dec
xor
cmp
push
cld
jge
pop
adc
xchg
out
repnz
and
enter
or
cwtl
lods
push
sub
jmp
les
dec
dec
pusha
inc
gs
mov
gs
cs
mov
jne
pop
mov
loope
cs
rolb
xor
mov
push
push
xchg
orb
adc
movsb
sbbb
insl
rcrb
push
xchg
xor
cmp
fistpl
or
fildl
sbbb
mov
addl
or
std
mov
scas
adc
or
jl
and
xor
jg
sub
pop
xchg
sub
push
ljmp
in
xor
cltd
notl
jmp
push
sub
jecxz
pop
ljmp
mov
or
lds
or
out
mov
sub
adc
mov
gs
call
pop
sbb
add
es
mov
shl
mov
cmp
push
lock
push
or
pop
gs
jbe
lea
adc
sbb
jp
inc
daa
cmpsb
adc
leave
sub
xor
push
sbb
cld
jb
mov
clc
jbe
add
subb
and
and
add
orl
mov
addb
jmp
test
jne
jmp
lock
loopne
rolb
lock
or
lods
cld
jbe
lgs
int
mov
xor
fwait
jnp
and
pushf
pop
or
mov
xchg
ret
lret
hlt
negl
mov
loopne
out
not
xorl
dec
cmp
add
cmp
pop
ss
mov
jbe
pusha
mov
ret
ds
push
xor
cmp
pop
iret
and
movsl
inc
inc
push
jmp
mov
or
or
push
popl
mov
sbb
insl
adc
add
inc
js
insl
adc
mov
rcll
dec
fs
mov
or
rolb
sahf
out
sbb
test
shl
push
sub
dec
sbb
lods
cmp
pop
push
js
ljmp
add
out
push
out
inc
out
add
xor
mov
int
jge
push
sbb
push
add
gs
rcrl
jns
aaa
jne
frstor
push
and
sarb
cs
fsubs
mov
add
and
in
add
dec
jne
jmp
cs
dec
mov
lock
out
mov
dec
jne
mov
mov
adc
lahf
or
pop
lods
sbb
enter
rcl
lds
and
or
ja
testb
dec
sub
shlb
scas
or
outsb
into
into
and
pop
jae
stos
and
cmp
jne
mov
push
cmp
jne
repz
dec
es
jne
call
clc
movsb
and
aam
cmp
jb
imul
mov
dec
or
adc
jmp
std
push
xor
sbb
iret
cld
cld
jmp
fldt
mov
jg
adc
adc
inc
inc
inc
or
inc
adc
pop
lahf
and
or
repnz
mov
and
jle
pusha
add
inc
in
jmp
or
adc
stos
repnz
and
sub
xor
sub
cmp
inc
cmp
mov
lea
and
or
xchg
push
adc
add
adc
ficompl
mov
orl
jb
ds
pop
jo
nop
mov
pop
bound
xchg
sub
mov
pop
ror
dec
inc
or
sbb
pop
mov
jecxz
mov
mov
or
jg
or
loopne
add
inc
bound
rclb
jnp
cmp
movb
jmp
add
hlt
xchg
aaa
add
je
mov
sbb
cmp
xchg
inc
and
jg
add
mov
inc
mov
scas
test
mov
pop
inc
or
add
push
push
push
push
mov
in
push
inc
iret
mov
outsb
jne
daa
rorb
push
out
jae
out
mov
cmpsb
enter
loop
jle
jb
lea
in
jmp
and
sbb
leave
mov
push
adc
jmp
push
add
aaa
dec
xorb
clc
pop
push
mov
pop
jl
jne,pn
outsl
sub
pop
cmp
xchg
jecxz
pop
call
fldenv
adc
dec
xchg
insb
or
dec
push
xchg
adc
or
push
fsubs
push
inc
loopne
bound
jb
and
js
cld
adc
in
mov
inc
insb
insb
dec
xor
push
push
push
add
ljmp
push
push
xor
ljmp
clc
or
popa
ret
mov
sbb
add
fisttps
push
loop
add
ljmp
and
push
inc
insb
hlt
sub
mov
pop
les
pop
rol
sarb
push
rol
fistl
sub
call
xchg
sub
jo
lock
adc
sub
push
ja
sbb
dec
jne
pop
inc
jae
arpl
inc
or
jmp
mov
and
mov
inc
je
fs
or
lea
mov
clc
neg
xchg
sbb
or
add
jmp
or
mov
inc
inc
rcrl
xor
loope
sbb
scas
mov
pop
add
mov
inc
insb
cld
pop
inc
cmp
jb
popa
jae
dec
rolb
in
test
mov
ret
jb
or
orb
dec
nop
fdivr
into
rorb
adc
add
subb
sub
cmpb
jmp
fcoms
mov
mov
into
and
xor
divb
and
stc
addl
xor
jo
out
loopnew
and
or
add
jne
das
popa
ret
push
and
stos
sub
cmp
je
xor
sti
jns
cmpsl
sbb
xchg
pop
movsb
push
imul
inc
mov
and
sbb
les
push
xorb
add
jno,pn
out
xor
adc
mov
xor
mov
jl
mov
jg
iret
mov
sub
cmpsb
hlt
mov
adcl
cwtl
or
inc
test
xchg
xor
inc
outsl
lea
inc
jmp
cmp
sbb
jmp
pop
xor
outsb
adc
jne
sub
hlt
pop
ret
in
lret
xlat
cmp
adc
cmp
push
push
xor
cmpsl
call
pop
and
sub
push
in
jne
pop
mov
dec
add
mov
pop
sbbb
mov
xor
mov
and
je
inc
icebp
je
lret
sbb
je
lea
sbb
push
sub
jmp
lahf
and
sbb
inc
outsl
xchg
sbb
add
test
rorb
and
dec
movsb
and
nop
jo
movsb
shll
push
movsb
push
adc
shl
cld
xchg
sub
sbb
sbb
adc
mov
and
xor
dec
in
outsl
popa
sbb
sbb
xchg
push
push
mov
pop
fidivl
rolb
sub
or
sub
and
imul
mov
mov
insl
cmpsl
mov
or
mov
les
cld
fs
add
std
sbb
add
pop
pop
push
xchg
add
or
add
loop
test
sbb
xchg
xlat
lds
push
movsb
add
lahf
push
inc
adc
addl
pop
push
or
cmp
cmpsb
pop
call
dec
or
jecxz
xor
es
mov
adc
xchg
nop
add
and
loopne
jne
xor
or
ret
imul
fsubrs
fdivl
add
mov
aaa
or
je
inc
fdivrs
icebp
lea
push
adc
or
cmp
rcll
add
cmp
inc
cwtl
xor
clc
out
mulb
mov
es
fs
les
add
call
pushf
push
fs
daa
test
or
fistl
xor
mov
jmp
jnp
xchg
or
xchg
dec
ret
push
xor
enter
sub
mov
inc
sub
in
fsts
adcb
push
testb
call
out
jmp
mov
lods
setl
push
outsl
mov
rcrl
clc
mov
sub
add
jmp
mov
xor
loopne
stos
mov
jae
or
push
addl
and
push
xchg
jmp
jecxz
inc
lods
inc
mov
dec
jmp
add
ret
testl
add
incl
dec
es
mov
dec
fisubs
mov
push
test
or
sti
or
gs
push
adc
mov
adc
lock
inc
mov
or
push
test
push
jmp
xor
data16
or
sub
fimuls
out
mov
les
ja
mov
xor
push
fsubrs
jne
push
rcrl
rcrl
cld
add
addl
dec
shrb
outsb
inc
mov
inc
repz
orps
adc
in
push
fmull
bnd
push
insb
push
data16
mov
addl
jle
sub
decl
cmp
pop
rcrb
in
scas
mov
jbe
clc
push
mov
idiv
decl
mov
subb
add
pop
pop
aad
xchg
sbb
popa
push
mov
cmp
push
stos
pusha
adc
rcll
xor
ret
mov
mov
enter
dec
loopne
cmp
mov
movsl
popf
mov
pop
push
pop
jne
popf
lock
mov
movsl
pushf
mov
mov
dec
pop
insl
fmull
add
jbe
dec
jo
push
in
sbb
jnp
add
adc
or
repnz
mov
cmp
add
or
pop
cli
push
testb
and
xchg
loopne
mov
out
adc
inc
add
js
stos
enter
arpl
push
push
push
sahf
xor
sub
mov
loopne
mov
adc
jo
lods
add
addl
scas
and
pop
cmp
daa
fdivs
pop
mov
jle
je
adc
mov
mov
faddl
mov
clc
adc
fs
push
mov
popf
inc
je
pop
dec
sbb
movsb
sbb
popa
jnp
dec
sbb
jbe
fidivrl
jmp
dec
je
add
or
fisttpll
sti
shrl
pop
pop
lods
push
or
negl
push
sbb
add
jmp
sub
dec
add
mov
and
adc
ja
add
sub
loop
int
push
ljmp
test
and
mov
in
dec
push
add
jo
jo
xchg
lcall
push
push
addr16
jne
mov
repnz
add
dec
leave
add
jo
xchg
inc
jne
push
mov
fldcw
repnz
movsl
imul
jbe
and
jns
in
imul
pop
mov
mov
mov
mov
push
mov
cmpsl
xor
add
add
popf
push
iret
mov
lock
jmp
xchg
jbe
leave
add
scas
cmp
shll
jmp
rorb
add
std
lret
orl
in
jg
push
jmp
sub
aas
lcall
stos
push
pop
or
inc
and
loopne
fcoml
insl
loope
sbbl
add
cmp
sbb
imul
xorl
lock
jmp
cmp
jae
imulb
sub
adc
sbb
pop
subb
test
add
lcall
mul
mov
add
add
shlb
pop
sub
inc
sbb
dec
or
lcall
test
gs
test
adc
dec
or
je
or
dec
addb
mov
aas
rcll
add
jle
or
cwtl
pop
aas
push
jb
movsl
cmp
xchg
cli
or
lea
mov
xchg
and
dec
pop
xchg
sbb
mov
aam
add
and
mov
or
sahf
pushl
adc
dec
sub
xor
pop
insl
sbb
pop
scas
std
dec
inc
sub
jmp
push
pop
sub
or
mov
cmpb
sbb
xchg
xchg
out
jo
leave
test
sbb
inc
imul
dec
into
cmp
lret
push
fidivrl
subl
sub
stos
sbb
in
fidivrl
or
cmp
adc
pop
and
js
rcl
jl
inc
inc
adcl
data16
fisttps
cmp
pop
cltd
fsts
stc
push
in
aad
clc
push
mov
stc
mov
or
cs
cmc
mov
rclb
add
cwtl
jmp
loopne
inc
xchg
cs
in
call
movsl
bound
shlb
lock
sbb
cmp
xchg
lods
les
mov
inc
fucomip
and
testb
imul
sbb
leave
dec
sbb
mov
sbb
pop
dec
loope
shrb
lret
push
jmp
or
inc
jb
mov
push
popf
fsts
into
dec
pop
sets
lods
or
lods
push
jne
inc
icebp
jecxz
mov
push
mov
jg
lock
inc
into
add
aam
enter
rcrl
mov
inc
fdivrs
mov
lret
inc
dec
ss
jo
add
lret
test
pushf
mov
aad
pop
sarl
sarl
cwtl
jge
orb
fs
mov
pushl
daa
xchg
xchg
clc
repnz
jb
and
inc
gs
cmp
cwtl
pusha
enter
sbb
add
and
jmp
cmp
push
dec
jbe
hlt
mov
mov
mov
mov
lret
rorb
subb
and
icebp
mov
adc
adc
outsl
lcall
movsb
add
xchg
adc
ret
fmul
push
aad
sub
push
out
fs
pop
cltd
or
popa
jo
mov
cmpb
inc
shlb
in
jl
pop
imul
adcb
add
jmp
shll
inc
stos
ret
lahf
or
sub
out
idivb
xchg
enter
rol
stc
and
mov
out
or
dec
cld
jmp
adcb
inc
add
int
xor
subb
mov
dec
add
scas
sub
inc
dec
push
ja
or
mov
cmpb
xlat
adc
cmp
call
in
rclb
add
jne
push
dec
movsl
adc
push
sbb
jmp
pop
mov
lea
dec
sub
pop
or
loopne
int
stc
xlat
repnz
jle
fnsave
or
clc
inc
call
loopne
clc
xor
movsb
push
jmp
mov
es
xor
into
je
fcmovne
lea
fisttpl
leave
arpl
enter
popa
jp
lea
pop
arpl
dec
pop
popf
xchg
popa
jmp
popa
arpl
scas
orb
dec
and
sbb
mov
xchg
repnz
push
jne
mov
mov
and
jbe
add
cmp
arpl
jmp
jnp
push
push
les
nop
cmove
loopne
fiadds
push
and
ret
test
sub
incl
jns
out
mov
loop,pn
lcall
pushf
addr16
jmp
enter
jmp
lcall
push
pop
nop
call
pusha
push
test
pop
fisubs
cs
mov
jns
out
les
or
sbb
orb
cmp
cmp
sahf
pop
push
fs
add
icebp
mov
push
sub
push
add
push
add
cmp
add
je
insl
arpl
scas
push
or
je
mov
xor
inc
inc
xlat
sti
push
testb
sbb
pop
fcomp
mov
jb
in
sar
xor
xchg
ficompl
loope
mov
or
outsb
jmp
mov
pusha
jmp
dec
mov
jne
stos
add
xchg
stc
inc
ss
add
loopne
lea
inc
and
cmp
outsb
cmpsl
popa
add
outsb
jne
out
loopne
rcr
add
xchg
cwtl
ljmp
pop
call
push
sahf
and
mov
fsubrs
sbb
mov
push
dec
sub
aad
cltd
or
jmp
idivb
jbe
fidivs
fldt
popf
in
push
mulb
pop
cmp
add
cmpb
sbb
or
sahf
test
data16
or
xchg
adc
jo
xchg
mov
fs
or
add
test
mov
push
icebp
pop
lock
mov
cwtl
jmp
lods
push
push
push
add
in
pop
dec
sbb
mov
jns
cld
lock
aam
add
push
shll
xor
std
call
xor
rcrb
mov
dec
das
loopne
lods
movsb
cmpb
lock
dec
aad
call
test
mov
rcrl
test
adc
and
xchg
lods
mov
test
pop
std
movb
jmp
mov
jno
insl
xor
jnp
add
addb
subb
or
mov
mov
xor
inc
or
dec
stc
or
or
inc
bnd
sub
adc
and
and
jns
cmp
sub
mov
mov
jl
adc
lea
dec
cwtl
mov
insb
data16
cwtl
or
xor
jmp
mov
push
mov
dec
repz
sub
clc
lods
mov
sub
test
add
adc
mov
sbb
popf
int3
mov
fists
cmp
mov
adc
adc
inc
popf
xchg
fs
dec
rcll
cmpb
in
pop
xchg
push
xor
aam
sbb
add
inc
outsb
inc
push
xchg
dec
cmp
or
sub
aaa
mov
push
xchg
jno
sti
shl
inc
cwtl
xchg
andl
pop
call
adc
xchg
arpl
sub
fcoml
cmp
sub
xchg
clc
jns
jns
or
test
movsl
rcrb
jns
mov
mov
mov
test
fbld
aam
aaa
dec
cld
xor
inc
loope
mov
adc
pop
in
int3
push
lea
test
push
jne
repnz
and
scas
jmp
xchg
xchg
int
mov
pop
mov
imulb
add
mov
dec
cmpsl
pushf
inc
sbb
cltd
orl
int3
sbb
sbb
add
and
adcb
jne
and
inc
push
cld
test
or
xchg
adc
test
cltd
jecxz
test
and
push
sbb
daa
jbe
test
jge
mov
push
mov
adc
movsb
sub
jbe
push
inc
fisubrs
enter
and
das
leave
fcompl
lcall
add
sub
push
dec
pop
fstl
or
imul
adc
mov
dec
mov
sbb
ja
mov
jmp
cmpsl
ljmp
pusha
ret
mov
rcrl
jp
adc
inc
and
add
addb
pop
clc
push
push
pop
mov
movsb
mov
shlb
push
mov
fstp
jo
test
jbe
jmp
popl
add
push
testb
loope
or
jp
pop
sbbb
lock
pop
push
daa
jne
xor
inc
clc
or
sub
andl
push
sub
jg
mov
add
shlb
push
push
packsswb
mov
mov
lods
pop
or
loopne
mov
mov
aam
pop
mov
pushf
mov
popf
jne
pop
inc
mov
jo
push
xor
mov
mov
cmp
movsl
in
jl
shrb
aaa
test
insb
or
mov
add
pop
add
cmpl
imull
inc
loopne
sub
pop
ja
or
mov
inc
mov
test
sbb
push
das
xchg
clc
pop
sar
pop
or
in
xor
and
jp
xor
dec
pusha
orl
lret
in
or
loopne
or
popa
mov
mov
je
or
je
or
sub
jne
popa
or
enter
idivb
pop
or
add
setg
jb
jae
or
sub
adc
pusha
dec
mov
cld
adc
lds
mov
push
add
sub
pop
fbld
push
imul
cmp
dec
lock
ja
movsl
mov
mov
leave
test
adc
movsl
hlt
hlt
stc
rcr
ss
push
sbb
xor
test
insl
and
adc
test
test
ds
bound
adc
fsubrl
sbb
pop
and
fnsave
jne
js
add
movb
inc
xor
cmpl
movsl
hlt
incl
imul
jae
cs
and
push
lcall
add
mov
xchg
mov
test
rcrl
scas
add
mov
mov
or
sbb
jle
inc
je
pop
push
mov
imul
filds
cwtl
inc
adc
mov
inc
movsb
popf
or
cs
int3
or
lcall
out
in
scas
jge
push
arpl
jo
shll
sub
mov
xchg
aaa
lcall
jnp
add
icebp
jge
testb
in
loope
and
push
add
rcrl
jl
mov
jo
fsubl
les
out
add
adc
test
or
or
mov
jl
xor
mov
cmp
int3
cmc
pushf
sub
dec
pop
add
into
dec
sub
bnd
cwtl
int3
cmp
mov
test
push
std
dec
insl
or
mov
test
rorb
jno
and
aad
imul
jmp
mov
fdivrl
inc
lods
xlat
mov
rcrb
dec
rol
movsl
cmc
test
dec
shlb
stos
mov
movswl
adc
jns
push
sbb
pop
mov
push
mov
dec
shl
sub
add
xchg
cmpsl
sbb
mov
inc
inc
addr16
js
je
or
ret
insl
je
je
arpl
fcomps
scas
je
xor
sub
in
xor
mov
mov
enter
push
dec
shlb
adc
movsb
jb
jp
sbb
or
pushf
jle
test
test
or
push
add
mov
daa
in
scas
ljmp
addr16
xchg
hlt
jmp
ja
fists
pop
jle
imul
aaa
andb
pop
push
mov
adc
xchg
addb
or
pop
or
mov
nop
cmp
pop
pop
push
or
adc
mov
loope
pop
xor
nop
push
push
es
aad
and
jne
movsl
push
cmp
xchg
repnz
push
pushf
iret
sbb
inc
es
inc
push
cmpb
jne
or
mov
mov
sub
mov
hlt
mov
push
push
and
jae
imul
pushf
mov
jo
inc
daa
in
inc
sub
add
jle
insb
sbb
cmp
gs
push
pop
test
push
into
xor
fdivs
dec
mov
lock
xchg
and
or
test
jle
cltd
jmp
xchg
sub
mov
mov
jl
jae
add
mov
mov
fidivrl
xor
movsl
cli
jp
jnp
lock
mov
adc
lahf
cmp
lahf
daa
mov
or
addr16
sub
popa
lea
cmp
sbb
add
inc
clc
add
push
push
push
loope
hlt
iret
adc
sub
shll
jl
in
idivb
repnz
sahf
add
jmp
sub
sub
inc
cmp
push
dec
in
push
pop
add
cmp
je
jge
or
and
dec
push
jmp
xchg
data16
in
movsb
aas
add
lret
shll
xor
aas
sar
int
or
ljmp
add
sub
roll
jmp
push
lock
xor
sub
push
or
pop
outsl
adc
test
pushf
mov
sub
jmp
cmc
out
test
jne
jmp
and
lahf
js
and
pusha
jg
jns
pop
scas
je
fisubs
mov
pop
mov
in
jne
jae
or
das
adc
push
iret
mov
mov
dec
ror
sarb
insl
lfs
in
or
push
mov
movsb
inc
popa
add
aaa
dec
stc
daa
push
and
xor
cltd
fst
add
mov
lea
inc
pop
jo
jp
jmp
jge
push
lock
daa
add
pop
mov
das
cmp
je
gs
cmpsl
jp
sbb
notl
push
mov
daa
arpl
mov
or
xchg
mov
loopne
cld
jo
jae
mov
add
pop
add
pop
xor
stc
add
ret
inc
jb
mov
mov
push
jo
movsl
jno
dec
pop
push
call
push
inc
adc
movsb
xlat
enter
xchg
daa
je
mov
xor
test
in
js
adc
es
add
call
jnp
pop
adc
int3
sub
jnp
lahf
repz
ret
adc
cmpsb
int3
cmpsl
inc
or
nop
mov
sub
imul
jbe
mov
add
mov
push
rorb
and
jb
inc
xchg
les
imul
pop
pop
push
or
xor
mov
xor
data16
inc
div
push
cmp
fmuls
mov
jp
mov
addr16
mov
mov
insb
jb
test
mov
jb
int
jbe
pop
xchg
aam
adc
nopl
repnz
jo
pop
nop
and
cmp
pop
pop
and
dec
testb
or
call
push
int3
fimuls
lods
imul
inc
shlb
inc
shlb
pop
mov
and
and
inc
jge
or
sub
lock
jmp
out
xchg
add
in
sbb
pushl
insl
and
mov
call
lahf
and
add
testl
xchg
stos
mov
adc
adc
stos
enter
jge
insb
xorl
adc
int3
rcrl
in
or
cltd
movsb
loopne
fnstcw
cmpl
jmp
cmp
popa
sub
imul
add
and
or
sbb
call
sbb
push
lea
jge
add
mov
push
js
or
cwtl
out
and
ljmp
out
xchg
add
faddl
add
pushf
cltd
cld
add
sbb
pop
cld
clc
dec
add
add
call
add
pop
sbb
clc
stc
pop
lret
pop
and
xchg
addb
insb
cmp
mov
cmp
or
cmp
fcoms
sbb
pusha
push
sbb
xor
or
adc
ss
adc
dec
lock
fdivl
mov
pop
pop
leave
jmp
sti
loopne
sub
sub
lea
pop
mov
sub
inc
sar
in
outsl
mov
sub
daa
adc
mov
aam
sub
pop
xor
loopne
movsl
int3
in
xchg
mov
aam
push
sub
out
add
jmp
popf
lods
pop
arpl
loopne
mov
je
or
mov
mov
inc
cmp
loope
call
cmp
aaa
fs
out
adcb
or
jo
mov
pop
and
jl
cmpsl
mov
les
add
ret
xor
psllw
inc
ja
imul
inc
lock
push
ret
dec
je
add
mov
in
int
jl
jmp
mov
fwait
jl
or
mov
push
inc
push
jmp
pop
xchg
andl
dec
in
mov
sub
add
cmpsl
xor
xor
cmpsl
mov
inc
mov
lock
lock
push
loope
out
push
inc
xchg
movsl
test
jnp
add
pop
call
xor
and
mov
mov
lahf
inc
loope
adc
iret
xor
ret
pop
mov
dec
sbb
call
cs
dec
add
rclb
mov
mov
sti
sbbb
inc
ficoms
dec
xchg
xor
push
pop
xchg
mov
rclb
and
mov
ds
call
push
flds
xchg
add
adc
and
add
push
cmp
imul
jmp
or
add
sub
cmp
jle
sub
or
scas
push
rorb
sub
push
mov
outsb
cs
mov
or
dec
ljmp
jge
and
rol
sub
mov
lcall
dec
add
jae
mov
lds
lods
lret
test
xchg
movsl
inc
ret
mov
xor
mov
je
pop
out
adc
or
add
pop
fwait
lahf
mov
push
xor
push
and
rcrb
shlb
in
lods
lods
aad
movsb
clc
hlt
jecxz
stos
push
loop
fwait
mov
rol
pop
push
test
jae
adc
pop
cli
in
push
call
xchg
mov
push
mov
jp
out
mull
inc
mov
in
ret
jo
xchg
xor
xor
nop
push
shlb
iret
nop
mov
ja
or
in
mov
fdivr
icebp
pop
jmp
arpl
ret
pop
dec
je
jp
sub
push
jbe
push
or
mov
imul
inc
push
cmp
mov
test
push
sbb
adc
mov
or
aas
pop
lret
sbb
mov
enter
mov
mov
enter
push
inc
int3
mov
out
push
fistpll
insb
jne
jp
pop
and
pop
scas
sbb
adc
jno
cmp
imul
xchg
xor
push
xchg
inc
cmp
pushf
pushf
and
aam
jo
dec
push
rcrb
sahf
xchg
dec
mov
xor
jmp
add
or
mov
ss
ret
cmc
lock
mov
mov
mov
mov
and
ror
dec
in
push
xchg
mov
dec
sub
cmc
mov
adc
iret
imul
push
imul
lret
mov
scas
jne
rorl
xchg
pop
hlt
pushf
sarl
ror
push
lods
add
xchg
sub
popa
adc
popf
or
lds
sarb
mov
popf
in
out
pop
enter
sbb
cwtl
push
jno
bound
push
mov
sbb
test
add
mov
aam
mov
loopne
out
jb
xchg
cltd
add
mov
mov
push
jg
mov
jp
jne
stos
mov
jnp
bound
mov
adc
test
lea
enter
test
add
inc
mov
xor
cld
ja
dec
cs
mov
popf
push
ja
and
mov
inc
ja
pop
inc
dec
xor
movsl
mov
jg
fcoms
call
pushf
ja
sbb
inc
sub
or
mov
push
xor
dec
xchg
mov
sbb
inc
aas
fcomps
inc
pop
aaa
sub
jne
xchg
dec
sub
lahf
fsub
pop
orb
xchg
loop
sahf
pop
aad
rorb
dec
push
add
push
jmp
add
mov
fcomps
adc
mov
fsubl
push
and
inc
push
lea
scas
mov
aam
cmpb
enter
mov
in
nop
das
test
daa
mov
imul
in
jne
push
jecxz
dec
sbb
pop
jnp
and
sahf
sub
mov
cmc
pop
sub
add
cmc
adc
cmp
mov
mov
xchg
add
cmp
adc
shrl
mov
jbe
dec
inc
clc
xchg
cmp
xchg
test
mov
and
lret
cltd
mov
clc
jp
cltd
adcb
lret
sub
add
adc
fucom
adc
adc
fadds
push
jno
jne
add
mov
add
xchg
mov
rolb
mov
push
xchg
inc
push
inc
add
cmp
lds
or
outsb
mov
cmp
jne
or
pop
dec
fists
and
ljmp
cs
mov
xchg
popa
xor
xor
rolb
pop
sub
lea
sbb
rorl
xchg
push
add
sbb
je
movsl
mov
add
mov
mov
and
fildll
lods
pop
or
pop
xor
je
dec
mov
lods
or
push
or
rcll
insb
mov
mov
sbb
lret
sahf
and
or
mov
mov
pusha
xor
or
in
inc
xchg
add
sub
mov
jno
adc
mov
inc
in
sbb
addr16
or
nop
ja
sbb
sbb
mov
cli
lret
sub
outsl
mov
add
add
xchg
gs
inc
hlt
mov
rol
cmp
popf
out
cli
addl
add
ljmp
shrl
or
jmp
push
pop
mov
dec
xchg
xchg
xor
bound
ja
mov
loopne
ficoms
push
push
add
jge
pop
pop
sub
cmp
mov
cld
inc
pop
jae
mov
in
jge
js
orb
mov
sbb
lods
jmp
and
insb
fsubs
mov
push
pop
mov
lea
mov
out
out
jle
mov
cmp
and
ficoml
adc
or
fst
push
and
cld
jmp
xor
mov
add
clc
mov
mov
sbb
insb
loope
sbb
ljmp
push
xchg
xchg
jnp
pusha
xchg
imul
cmpsb
in
cmpsl
dec
sbb
unpckhps
dec
mov
andb
in
fisubrs
pop
insb
push
insb
test
jmp
rcrl
xor
testl
jne
movl
jbe
cmc
loop
and
std
jne
dec
shll
jmp
dec
imul
cmp
les
mov
add
jno
jmp
push
pop
xchg
lret
add
adc
adcl
mov
sbb
sub
mov
cld
add
hlt
xor
dec
mov
mov
push
les
test
adc
mov
push
pop
push
ret
jl
shlb
mov
push
dec
push
aas
rolb
cli
stos
ds
jnp
jae
cmp
jbe
lret
sti
rcll
jne
addr16
insb
sbb
cmp
rcll
leave
inc
xchg
lret
xlat
adc
subb
rorl
adc
enter
cwtl
jmp
out
fisttps
fs
cmpb
or
lcall
sub
mov
lds
dec
shlb
inc
movsb
test
add
jb
mov
add
inc
add
push
clc
sahf
sub
nop
inc
pop
add
nop
add
out
mov
out
dec
jne
mov
dec
xchg
nop
rolb
xchg
jns
add
sbb
xor
cld
push
mov
push
mov
inc
dec
jne
fs
cmp
mov
jmp
pop
adcb
addr16
mov
lret
cmpsl
cmp
mov
icebp
push
mov
sbb
loopne
sbb
dec
add
sbb
mov
rol
sbb
in
cmp
stos
push
popa
loop
push
and
push
lar
fs
mov
mov
and
dec
push
loope
cmpsl
xchg
inc
rorb
pop
push
dec
popa
dec
pop
pop
push
or
dec
sbb
aam
xor
xlat
testb
jno
add
add
push
mov
pop
and
sub
or
xor
mov
outsl
andl
dec
out
or
sub
mov
out
inc
jmp
xor
dec
sbb
mov
test
sbb
add
jo
fnstcw
aaa
test
out
imul
inc
insl
adc
stos
shlb
xlat
mov
popf
mulb
push
jmp
push
and
scas
fwait
inc
popa
add
push
pop
pop
movsl
or
fstpt
and
xor
movsb
pop
pop
add
xchg
ret
xor
jmp
and
rcrb
mov
es
xor
lea
or
clc
push
xchg
cmpl
mov
cmpl
ret
ret
ret
adc
mov
rolb
sub
jo
sub
add
sub
push
and
cmp
inc
dec
push
ret
je
sbbb
je
arpl
pop
adc
dec
imul
sbb
cltd
inc
out
pushl
inc
mov
into
int3
sub
sbb
jnp
jno
inc
inc
sbb
leave
inc
data16
sub
xchg
cmp
rcrb
inc
inc
nop
mov
sar
lret
les
push
test
cwtl
and
add
daa
sbb
pop
ljmp
jle
jg
pop
mov
or
pop
cld
js
bound
mov
add
add
adc
mov
adc
mov
bound
enter
cmp
call
ja
test
pop
or
mov
push
mov
cmp
aad
lock
jle
adc
sub
fildll
or
mov
insb
leave
lcall
lcall
std
add
pusha
push
dec
jb
clc
ret
out
cmp
test
test
mov
sbbl
xor
jne
xchg
inc
and
jnp
dec
mov
scas
push
pop
or
repnz
aam
imul
cs
test
loope
inc
pop
xorb
daa
add
mov
cmp
xchg
inc
or
or
inc
push
ss
lahf
xchg
pushf
inc
pop
flds
inc
mov
xor
push
bound
imul
arpl
in
test
sbb
imul
or
jl
pop
shlb
adc
pop
dec
mov
add
and
xchg
cmp
aas
cmp
test
fwait
movsb
and
adc
mov
out
push
not
call
ja,pn
iret
lret
or
jmp
andb
stc
clc
push
add
fwait
and
sub
sbb
rcrl
cmp
sbbl
sub
pop
cmp
les
sbb
cmpsl
bound
jmp
push
dec
sahf
add
mov
jg
and
pop
cmp
pop
adc
xchg
mov
xchg
nop
mov
insl
jg
pop
test
popf
jge
subl
jmp
push
mov
inc
or
fwait
addr16
subl
pmulhuw
jnp
mov
nop
xor
movsb
cmp
cmp
cmp
iret
aam
sub
inc
push
daa
fimull
scas
cs
and
fisttpll
fnsave
test
push
divl
ja
mov
jae
or
or
nop
mov
sub
add
pop
xor
mov
arpl
lret
mov
fwait
push
shlb
nop
stos
lahf
xor
xchg
sbb
pop
mov
pop
pop
stos
mov
adc
pusha
jne
rcr
mov
sub
push
add
nop
rorb
js
adcb
ja
mov
jmp
lds
lods
popf
fnstsw
out
lods
inc
add
ret
cmp
fs
hlt
leave
inc
or
sub
pop
add
add
sbb
or
and
cld
sub
sub
aas
and
out
rclb
out
add
ss
loop
shr
pop
inc
jmp
je
mov
inc
adc
and
inc
push
pusha
imul
jo
mov
dec
jne
shlb
and
mov
lcall
divb
xor
loopne
sbb
adc
sbb
add
jne
ss
fidivs
or
inc
inc
cli
pop
pop
ret
out
cmp
rcrl
push
mov
bound
add
out
outsb
dec
cli
shr
add
cmp
cmc
xchg
jb
push
adc
jae
pop
pop
hlt
shl
adc
adc
mov
xchg
outsb
sub
daa
test
ret
push
int
fldt
adc
loopne
test
mov
idivl
push
or
shll
enter
or
inc
sub
jp
ret
inc
add
les
cli
push
cli
fnstcw
add
add
cmpsb
push
cmp
mov
mov
lcall
pop
mov
push
pop
sub
test
rcrl
imul
rcll
xorl
dec
fs
enter
enter
rcr
nop
arpl
sbb
and
cmp
call
lock
push
rcl
adc
fnstcw
fs
add
cmp
or
xchg
out
mov
pusha
mov
fcmovu
inc
sbb
sbb
add
inc
ja
mov
das
add
pop
pop
fstpl
push
dec
add
and
sbb
pop
orb
adc
jmp
adc
jmp
add
push
lahf
mov
fwait
pushaw
iret
adc
nop
push
dec
and
inc
sbb
sbb
fmull
mov
je
stc
cmpsl
xor
movsb
and
fwait
xchg
jmp
decl
jns
jmp
adc
out
pop
les
mov
ret
xadd
mov
mov
fmull
fstl
mov
subl
adc
pop
icebp
lds
and
adc
jge
xchg
jns
out
cwtl
mov
jns
mov
xlat
test
sbb
mov
popa
ja
sbb
pop
int3
push
mov
push
cmp
lock
inc
stc
or
sub
bnd
inc
push
int
or
sbb
sbb
test
push
and
inc
mov
inc
jl
add
insl
push
je
push
cltd
popa
aam
out
jmp
inc
faddl
out
movb
and
or
inc
test
mov
clc
mov
fidivrl
divb
mov
push
xchg
jb
jnp
and
ret
and
push
push
test
jmp
arpl
push
mov
inc
decl
push
mov
adc
fldl
in
outsl
mov
test
mov
divl
adc
push
ret
dec
shlb
mov
sbb
iret
push
in
sub
and
sub
cld
lea
mov
mov
les
scas
jecxz
mov
sbb
je
jmp
bound
mov
out
and
sub
sbb
sbb
stos
imul
adc
add
inc
push
or
mov
or
add
push
xchg
mov
ds
mov
sbb
enter
movsl
ret
sbb
insl
dec
shlb
push
mov
sub
pop
dec
daa
adc
push
bound
adc
movsb
cmp
or
lret
lock
in
sub
std
jns
std
mov
std
lods
std
mov
cli
adc
xor
in
mov
repnz
rclb
cwtl
mov
incb
xchg
mov
mov
in
fwait
push
inc
inc
shl
stc
mov
dec
ret
jno
fs
add
cmp
jmp
adc
xchg
testb
fdivrs
arpl
cmp
movsl
push
ds
cmp
movsl
pop
mov
cmp
sbb
rcrl
xchg
xor
rol
popa
or
and
inc
stos
cmpsl
fcoml
mov
mov
call
push
mov
sub
daa
es
dec
lret
mov
pop
or
add
lret
mov
xchg
sbbl
rolb
or
sbb
pop
pop
iret
pop
or
insb
mov
sahf
test
sbb
adc
bswap
leave
test
adc
and
dec
cmpsb
push
int3
dec
data16
inc
push
or
push
or
sub
dec
cmp
inc
sub
adc
aad
pop
dec
sar
in
mov
cmp
jne
cmpb
ret
in
and
xor
lods
cmp
inc
cmpsb
rorb
sbb
push
outsl
movsl
test
js,pn
in
cmp
push
mov
and
xlat
mov
add
test
mov
sub
pop
rolb
lods
loopne
fisttps
sbb
inc
push
dec
sahf
scas
test
add
movsl
pop
xor
adc
mov
stos
push
xor
aad
adcb
push
scas
jle
out
xchg
lods
shl
iret
cmpsl
mov
add
stos
sub
add
xor
dec
sarl
and
shr
adc
std
sar
mov
mov
and
xchg
mov
cwtl
mov
rorl
jnp
or
jg
orb
mov
cmp
addb
lock
test
pop
sti
movsb
cmp
jmp
mov
inc
subb
jno
push
push
cmpsl
add
dec
daa
and
or
and
adcl
pop
adc
ret
sub
int3
addb
add
fdivl
pop
sbb
jns
sub
inc
xor
loope
aas
pushf
pusha
addl
pop
js
nop
jo
cmpl
cmp
adcl
jns
jecxz
sahf
mov
dec
and
loopne
fldcw
je
jno
pop
sarl
mov
ja
js
push
sub
adc
and
dec
push
cmp
lock
mov
lcall
subl
add
out
pop
cmp
mov
xor
mov
test
popa
fistpll
mov
int
sub
je
mov
sub
imul
subb
mov
mov
dec
mov
outsb
subb
cmpsb
mov
xor
ljmp
imulb
sbbb
outsb
dec
or
cs
mov
dec
sub
popl
inc
xor
sbb
ljmp
es
mov
mov
mov
or
neg
adc
notl
hlt
xchg
sbb
cmpsl
mov
cmp
jmp
das
loopne
enter
lea
inc
pop
clc
jb
xchg
push
inc
xor
xor
adc
daa
call
stos
aad
adc
cmpsl
xchg
fcomp
or
loope
or
cmp
rorb
movb
mov
dec
cs
leave
pusha
xchg
cmp
mov
adc
enter
jmp
dec
xchg
inc
fisubrs
cli
add
sbb
add
mov
fldl
push
pop
or
sub
inc
clc
mov
sbb
jmp
dec
adc
pop
and
aam
mov
es
sti
mov
sub
mov
pusha
jp
sbb
notb
lahf
fwait
mov
incl
sahf
xchg
or
mov
sub
mov
lret
add
mov
mov
sbb
lea
add
jne
cltd
inc
aad
jno
adc
xchg
lea
push
rorb
test
fdivp
in
sbb
add
cmp
hlt
push
nop
rcr
cs
ficoml
cld
jne
jmp
sbbl
insl
pop
cmp
lods
pop
dec
push
add
je
push
or
push
out
pop
sbb
xor
rcll
lods
xor
pop
mov
mov
fidivrl
loope
std
rorb
pop
mov
rolb
test
fstps
xchg
test
test
out
iret
push
shrl
stos
aaa
fs
loopne,pn
lods
test
push
nop
andl
jecxz
sub
fsubrl
and
fsubrs
mov
leave
rcll
dec
in
loope
lea
or
sub
outsb
mov
mov
xchg
mov
mov
lock
adc
or
lods
lret
aaa
ret
dec
leave
lock
aas
jmp
xor
add
add
xchg
arpl
pushf
movsl
pop
aas
pop
loop
pusha
aas
scas
movsl
push
fcoml
xor
inc
scas
adc
xchg
loopne
inc
mov
inc
fs
loopne
sub
imul
pop
and
fnsave
mov
inc
inc
cmp
mov
cmp
sbb
subb
lods
inc
xchg
in
jbe
push
inc
mov
daa
adc
test
push
jb
jns
repz
push
cmp
jb
mov
mov
movsb
in
dec
cmpl
cmc
push
lea
xor
sbb
jmp
add
js
jecxz
rorb
push
jb
movsb
mov
push
fucom
decb
cld
push
sbb
inc
les
mov
cwtl
lods
mov
cwtl
cmpsl
inc
cs
lods
lods
mov
orb
or
test
adc
xor
dec
and
jno
cmp
and
test
xchg
cwtl
test
leave
and
arpl
dec
xchg
outsl
insb
xchg
popf
ds
nop
and
pushf
cwtl
mov
nop
mov
add
and
pushf
pushf
pop
orb
push
sbb
popa
xor
movsl
in
divb
mov
js
or
cmpsb
pop
cld
hlt
lds
jno
cmp
mov
mov
mov
loop
hlt
out
sub
inc
mov
div
mov
push
icebp
addl
or
xor
sbb
xor
add
or
sub
je
xlat
sbb
inc
test
or
test
sbb
loop
push
or
pop
pop
push
xor
pop
addl
mov
mov
rcrb
fwait
push
sbb
push
pop
push
mov
sbb
or
sbb
jns
clc
jge
iret
push
jmp
add
mov
add
push
inc
loope
aaa
jg
mov
rcl
sbb
inc
arpl
dec
or
jge
jp
or
idivl
add
xor
movsl
and
adc
xchg
or
add
rolb
cltd
add
jno
movsb
push
adc
sub
and
loop
inc
xchg
or
push
sbb
or
adc
and
dec
inc
dec
out
test
movsl
add
add
inc
rorl
rcrb
das
inc
dec
sub
lret
cltd
push
loope
shr
je
inc
add
pop
dec
clc
jl
outsl
push
push
dec
adc
push
and
mov
pop
dec
push
pop
outsl
inc
or
push
jbe
jle
cmpsb
addr16
out
outsl
ja
jo
jle
ja
or
jge
jne
mulb
jo
in
lods
pop
filds
std
mov
lea
lea
inc
out
in
sub
dec
dec
rorl
add
add
add
sub
fldt
inc
inc
push
negl
ret
mov
mov
shrb
lret
ret
mov
shr
test
rclb
adc
or
mov
pop
push
clc
push
add
inc
push
mov
sbb
mov
lea
pusha
fsubl
sub
push
ret
push
dec
or
roll
mov
js
pusha
movsb
incb
std
inc
mov
bts
jmp
lea
leave
sbb
sbb
mov
push
or
and
sbb
jne
cmpl
jne
inc
adc
and
cmp
dec
sub
bound
sahf
dec
pop
adc
adc
add
ss
inc
addr16
sub
sbb
dec
pop
add
push
cmp
dec
and
mov
jb
scas
xor
out
add
xor
inc
mov
or
jne
outsb
and
aaa
add
add
jg
clc
mov
mov
es
push
xor
test
vmovq
cmp
ljmp
stc
mov
fs
pop
inc
incb
cmpl
pop
mov
outsb
cmp
xchg
lret
push
test
lea
ds
xchg
mov
cmp
mov
mov
je
pop
mov
add
cmp
push
add
rcll
pop
das
or
sbbb
movsb
xor
adc
hlt
sub
ja
adc
mov
sbb
and
push
sub
fsubl
and
out
push
mov
jne
adc
xor
ljmp
cmp
outsb
adc
inc
lods
cmp
inc
push
and
cmc
fcomps
mov
mov
xchg
jmp
outsl
mov
jbe
add
jge
xchg
gs
jle
mov
sub
mov
jle
add
incl
frstor
mov
sarb
dec
out
or
add
in
sbb
add
add
pop
addl
mov
stos
add
xor
adc
push
push
pop
pop
imul
add
dec
adc
sbb
sbb
xchg
sarl
cld
or
outsl
xchg
xchg
je
or
jne
dec
mov
dec
scas
shrb
mov
addr16
add
sub
fisubl
icebp
sub
aas
movsl
adc
jl
ss
add
inc
cs
je
cmp
mov
pusha
pusha
pop
fistpl
mov
and
shlb
orb
jb
add
ljmp
add
jle
in
popf
addl
and
cld
add
sbb
mov
or
push
inc
cwtl
mov
or
aad
adc
gs
add
ds
and
ljmp
cli
cmc
les
xor
or
pop
sbb
push
sbb
add
das
clc
mov
adc
lea
int3
dec
fcom
cltd
rol
rcrb
shrb
and
jae
ljmp
in
and
jae
lea
add
add
imul
dec
lock
daa
orl
or
dec
pop
jp
pop
loope
adc
xor
cmc
mov
neg
or
mov
fisttps
mov
sub
scas
call
push
fnstcw
xor
mov
loop
test
dec
std
lahf
pop
popa
popf
dec
in
push
push
pop
push
aas
sbb
push
int
sarl
cmp
lea
or
jae
lock
mov
movw
mov
adc
movb
mov
std
sbb
mov
xchg
pop
dec
inc
or
add
int
push
pop
add
mov
out
push
ja
mov
mov
lret
sbb
faddp
addr16
out
add
mov
fiadds
xorl
cmp
or
inc
aas
shlb
or
add
arpl
in
ja
push
add
andb
push
xor
cmp
or
rorb
es
push
and
into
sub
shll
xor
xor
or
mov
cmp
pop
aam
in
add
or
add
push
mov
in
mov
fmuls
gs
or
cld
out
cli
cmp
xchg
mov
push
add
jmp
push
pushf
inc
push
mov
push
or
push
andb
clc
sbb
dec
mov
add
or
push
test
push
orb
inc
sti
add
jmp
mov
jmp
lea
add
cmc
cmpsl
loop
shll
ds
aaa
mov
add
test
jne
sbb
or
adc
mov
shll
dec
movl
cld
call
sbbb
jmp
lods
push
xor
pop
negb
adc
cmp
or
int
dec
inc
mov
sbbl
jns
clc
bound
dec
out
mov
push
pop
lcall
and
nop
addb
je
adc
lea
xor
pop
sbb
lock
lcall
lock
xchg
ss
xor
and
testl
repz
add
xchg
or
or
adc
cmp
add
dec
arpl
or
sbb
mov
jae
popl
clc
and
mov
push
pop
mov
push
pusha
push
jnp
lods
int3
sbb
pop
push
nop
popa
out
sub
push
lock
jecxz
or
sub
lea
daa
pop
inc
sbb
movsl
xchg
enter
in
sub
push
and
or
xlat
xchg
test
fisubl
push
and
in
jb
pop
sbb
addr16
lret
add
push
add
jnp
fs
enter
cmp
cmpsb
push
cmp
adc
sarb
xor
add
stos
in
shrb
add
enter
in
adc
mov
fmuls
adc
iret
in
insb
push
mov
iret
gs
inc
xor
mov
jae
jl
push
adc
push
cmp
int3
sbb
or
push
movsb
fisubrs
fnclex
mov
out
add
fnsave
add
or
mov
lock
inc
or
add
sub
imul
push
clc
stc
rclb
inc
xor
ret
jne
mov
lea
aas
cld
xchg
and
pop
in
hlt
xor
sub
push
and
lock
xor
js
addb
or
or
and
test
adc
daa
jecxz
pop
out
out
pop
push
and
inc
add
daa
mov
cmp
mov
test
leave
add
fwait
and
and
sbb
pop
add
jle
lret
sbb
popf
add
test
xchg
mov
jge
inc
push
es
cmp
jne
xor
nop
cltd
arpl
mov
hlt
je
or
add
sbb
aad
and
add
insb
push
addr16
aad
sti
std
iret
movsb
fs
adc
aas
pop
dec
inc
or
hlt
stos
rol
jmp
pop
out
jo
mov
out
fcmovnbe
push
xor
shl
lea
sbb
inc
pop
les
pop
pop
mov
sarl
and
cmp
cwtl
dec
push
orl
sbb
outsl
mov
testb
jns
dec
ja
lock
sbb
mov
movsl
xor
cmp
arpl
in
push
aas
clc
lock
jb
add
adc
and
or
push
and
or
xchg
add
xor
arpl
out
pop
lea
push
or
dec
imul
jne
xorl
and
sbb
sbb
jb
sub
or
les
add
jb
mov
pop
xchg
fadds
ret
pop
notl
jmp
mov
rcrb
fimuls
push
or
fnstsw
or
lock
mull
ud0
mov
inc
push
pop
push
push
inc
shr
rcr
shr
rcr
inc
loop
rorl
mov
repz
dec
test
fnstsw
pop
lock
pop
jb
cmp
or
cmp
add
push
jbe
dec
sub
sbb
mov
or
fiaddl
mov
pop
fxch
pop
ret
adc
inc
je
jmp
inc
xor
adcl
adc
push
add
dec
testl
or
push
insb
ret
and
mov
mov
cwtl
jbe
push
mov
xchg
or
inc
outsb
xor
mov
cmp
leave
sbb
or
cmp
inc
xor
clc
add
inc
daa
adc
mov
xor
mov
dec
pushf
add
inc
and
mov
mov
inc
mov
mov
movsb
test
in
push
iret
mov
push
sbb
mov
rol
cmp
xor
xchg
add
insl
adc
push
push
xor
pusha
add
pop
hlt
dec
jmp
insl
and
ret
and
jmp
dec
and
int
ret
dec
or
push
mov
mov
or
js
and
rcrl
sbb
add
mov
movsb
mov
sbb
add
sarl
sbb
addl
jnp
push
inc
adc
xlat
add
rol
divl
jb
js
sbb
pop
adc
jmp
inc
cmp
mov
pusha
inc
test
push
mov
adc
sar
pcmpeqb
hlt
fiadds
mov
fadds
dec
and
adcb
mov
xchg
mov
mov
pop
xor
jb
or
mov
leave
or
add
and
test
sub
xor
call
push
addr16
jns
add
in
sarl
mulb
or
mov
push
js
out
sub
cmp
adc
adc
mov
cwtl
into
clc
adc
push
xchg
icebp
sbb
jne
lcall
mov
addl
sub
fiaddl
inc
mov
mov
cmp
adc
dec
cs
and
dec
push
add
stos
or
test
popa
inc
repnz
loop
pop
ret
mov
cmp
imul
cmpsb
jo
negb
mov
imul
add
sub
cli
je
mov
fstp
dec
sub
push
fildl
aas
jmp
out
push
sub
cld
push
mov
add
into
jne
ss
pop
add
mov
jmp
adc
outsl
sub
jae
popf
or
and
nop
mov
outsb
adc
and
cmp
faddl
fdivs
icebp
inc
nop
aam
aam
adc
inc
inc
fidivl
inc
add
aad
mov
or
mov
sub
iret
enter
popf
pop
imul
into
adc
sub
ljmp
sbb
xor
cmp
inc
jmp
das
call
lds
push
ret
cmp
imul
imul
sub
enter
push
js
enter
or
je
dec
jg
add
or
or
pusha
addl
icebp
xor
icebp
xchg
shlb
je
sub
adc
out
outsb
outsl
pop
xchg
push
adc
and
add
sbb
sbb
push
cmpsl
iret
mov
loopne
push
adc
sbb
mov
or
push
cmp
jb
aam
jge
mov
and
dec
push
inc
bound
inc
xor
inc
cmpsb
cwtl
sbb
scas
and
jo
add
sub
mov
or
sbb
mov
push
mov
inc
pop
ret
dec
in
jmp
pop
shl
sbb
sbb
popa
mov
jl
jns
and
cmpsb
mov
adc
clc
int3
push
cmpsb
cmp
mov
sub
pusha
pop
lret
mov
pusha
and
lea
ja
mov
sub
pop
outsb
mov
orl
loop
mov
push
je
mov
adc
stos
and
pop
int3
orl
inc
xchg
and
arpl
push
call
cmp
or
or
rcl
or
in
lock
ja
mov
fcomps
movsl
stc
loopne
addr16
rorb
nop
adc
adc
pusha
and
in
push
lock
push
jbe
push
fldenv
das
or
outsl
mov
pop
or
xor
mov
add
mov
shlb
xor
cli
adc
fcmovnu
popa
mov
lea
or
add
xchg
push
test
sbb
and
xchg
mov
adc
add
popl
or
mov
test
xor
loopne
pop
add
xor
cmove
or
push
mov
xchg
ja
test
inc
sub
rorl
mov
fisttps
pushl
add
jno
push
imul
pop
loop
mov
push
ljmp
pusha
pop
out
adc
stos
ljmp
sti
push
inc
cmp
ds
test
push
sub
inc
push
ds
ss
fwait
xchg
scas
insb
enter
lock
adc
loop
cwtl
or
out
mov
jl
sub
rcr
mov
jne
insb
inc
sub
test
pop
dec
mov
cmp
and
mov
sub
sub
xor
mov
shrb
mov
pop
filds
mov
push
ds
and
addb
rol
sbb
jns
pop
ds
mov
scas
je
imul
mov
clc
data16
rcrb
pop
inc
ret
adc
cmpb
test
movsb
fldl
push
faddl
or
mov
push
dec
clc
outsl
and
outsb
test
and
mov
jmp
or
lret
lcall
cmp
pusha
stos
jl
jp
xor
or
fiadds
and
clc
das
xor
lock
mov
gs
adc
add
loopne
loop
push
push
lock
sub
dec
lods
jp
pop
and
and
add
ret
and
mov
or
mov
outsb
push
lea
or
dec
push
jbe
test
jl
mov
or
das
mov
push
pop
adc
mov
push
add
sub
inc
fisttpl
xor
dec
insl
jmp
jmp
cmp
push
mov
xor
leave
stos
ret
cmpps
adc
cwtl
cltd
mov
add
bound
adc
cmp
shlb
or
xlat
inc
hlt
inc
mov
push
push
nop
pop
sub
dec
lods
dec
mov
cwtl
or
imul
inc
adc
pop
and
incl
push
lods
mov
cmp
mov
or
or
push
mov
cs
dec
or
push
or
xchg
scas
jecxz
lea
iret
and
cmp
pop
dec
and
cwtl
inc
es
adc
ss
cmp
hlt
add
nop
leave
sti
sub
pop
call
jl
dec
and
into
incb
testb
jmp
andl
jmp
mov
pop
test
jbe
popf
add
ss
push
push
scas
and
lock
std
push
or
cmp
jle
jle
sub
push
sarl
and
mov
or
or
cmp
xchg
xchg
push
mov
sub
incl
add
adcb
out
fistpll
adc
sbb
adc
sbb
mov
push
scas
mov
sub
mov
add
insl
sbb
pop
jge
out
jge
sarl
iret
jbe
nop
out
mov
fldl
jne
out
dec
jae
imul
sbb
or
push
jmp
add
fs
push
icebp
dec
rclb
bound
jns
js
lahf
and
cmp
dec
or
dec
cwtl
cld
pop
ds
and
push
and
stc
sub
mov
mov
movsl
jbe
sub
mov
cmp
loopne
shlb
je
mov
data16
sbb
les
nop
mov
add
cmp
cmp
fadd
mov
jl
incb
dec
mov
push
icebp
xor
inc
jmp
push
sbb
push
push
mov
push
cmp
out
and
repnz
fdiv
lea
cmp
inc
cwtl
pusha
jg
cmc
jecxz
push
jmp
inc
jmp
cmp
pop
mov
icebp
sub
ds
div
jmp
xchg
shrl
pop
cmc
push
adc
cs
jge
lcall
mov
cmpsb
push
sbb
test
or
dec
jl
cmp
adc
or
and
loopne
jmp
mov
add
sub
or
mov
inc
xor
jne
inc
mov
pushf
add
xor
call
add
adcb
and
mov
mov
jb
icebp
add
movsl
add
enter
enter
xor
push
loop
out
or
xchg
sub
mov
roll
ja
sbb
test
loop
jae
mov
std
mov
cld
cmp
sbb
or
cli
xor
mull
or
pop
inc
testl
test
jne
rol
push
imul
lret
out
jne
inc
or
cmp
sahf
es
loopne
and
cmpsl
dec
lock
xchg
pop
dec
xchg
nop
clc
sbb
push
jb
cwtl
inc
pop
fsubrs
test
push
pushf
and
lea
lcall
add
movlps
push
dec
std
test
scas
ret
xor
cmp
jb
lods
push
sub
cmp
mov
in
sbb
lcall
test
sub
subl
pushf
mov
test
jg
insb
sbb
push
mov
nop
add
xchg
or
xlat
xorb
shll
shr
mov
mov
dec
std
add
or
shr
aas
or
push
ds
rorl
mov
shrb
jmp
dec
sub
inc
mov
mov
add
negb
push
lods
jl
idiv
pop
push
shrl
shl
shr
or
mov
sahf
dec
mov
lock
jne
outsb
mov
inc
shll
aam
sub
push
aam
loop
cmp
mov
push
lcall
push
rcr
fiaddl
mov
sbb
pushf
ljmp
jmp
out
jmp
or
lods
sbb
push
mov
xorl
sbb
mov
jl
fiadds
int3
jmp
xchg
or
xchg
mov
lea
mov
loop
lret
into
jmp
lods
out
add
sar
and
mov
or
push
and
mov
adc
xorb
lret
push
in
loop
das
sub
mov
sbb
mov
mov
movups
les
aam
sbb
or
call
xchg
adc
add
fimuls
mov
fstl
cmpsl
repnz
fidivs
mov
loope
iret
clc
jne
push
mov
mov
cmp
adc
pusha
push
mov
or
orb
mov
in
adc
sbb
mov
xor
push
or
push
inc
clc
imul
sbb
pop
xchg
lret
ficomps
cmp
mov
movb
or
inc
int
pop
clc
push
test
adc
push
cmp
pop
pop
pop
add
in
cmpl
aad
xlat
jne
push
movsb
mov
inc
add
jno
in
push
push
inc
or
sbb
mov
test
dec
in
sub
add
rorb
or
sbb
mov
imul
imulb
es
mov
mov
inc
xchg
sbb
pop
jmp
inc
add
mov
rorl
sbb
push
gs
cld
dec
sbb
mov
xor
ret
jo
fmull
int
mov
pop
adc
inc
test
roll
xor
jne
sbb
pop
aaa
cwtl
inc
xlat
jmp
sar
push
or
mov
jb
adc
sbb
pop
push
sbb
pop
bound
xchg
mov
push
adc
mov
pop
stc
sbb
or
push
out
rclb
add
mov
push
lock
sbb
rorb
adc
aad
and
jmp
ret
jmp
gs
out
stc
pop
dec
inc
sub
dec
mov
inc
pop
cltd
cld
add
mov
in
push
pop
jo
cmp
xor
in
xchg
movsl
push
std
push
enter
cmp
repnz
lahf
loope
loope
push
lea
add
idiv
decl
leave
sar
mov
aas
or
or
and
or
popf
or
nopl
mov
jne
push
or
ret
adc
mov
addr16
cltd
lods
loop
pop
ret
shrb
imull
adc
and
clc
icebp
lods
add
inc
pushl
mov
jns
xor
fimull
pop
pusha
cmp
or
mov
sbb
data16
inc
call
or
dec
pushf
sub
xchg
add
jge
push
inc
mov
lock
add
mov
cmp
mov
mov
add
sar
enter
push
xor
push
hlt
mov
andl
mov
cwtl
outsb
jmp
and
scas
mov
lea
pop
jge
out
lods
nop
loope
lret
add
mov
enter
sahf
add
sbb
icebp
jmp
pop
push
inc
cmp
adc
pusha
inc
call
jmp
outsb
dec
imul
sub
outsb
test
fcmovb
mov
inc
lea
pusha
popa
or
lods
jnp
and
cmpl
pusha
in
push
or
hlt
lea
cmp
mov
je
test
jnp
data16
pop
add
lea
cmp
sbb
aam
incl
cmpsb
int
lods
pop
sbb
test
loopne
out
sbb
mov
inc
mov
idivb
adc
add
xor
rol
xchg
insl
loopne
mov
mov
out
int
push
push
jmp
push
daa
and
cs
pusha
dec
iret
adc
pop
lock
into
aad
mov
pop
add
adc
out
or
stc
sarl
mov
mov
inc
mov
sbb
fldt
cmp
idivb
xchg
inc
or
lret
ss
loope
out
fs
xor
jae
subb
mov
cmp
jne
bts
jno
add
mov
jo
aad
gs
xchg
and
pop
lahf
dec
add
loopne
ja
cmp
ret
sub
sub
add
add
add
insb
dec
dec
int
shlb
jbe
fs
jl
or
pop
jns
adc
fiadds
into
sub
adc
sbb
mov
pop
pushfw
std
faddl
test
sub
and
pushf
xchg
inc
and
popa
add
mov
cmp
shll
or
mov
stc
cmp
sub
push
adc
mov
test
arpl
js
enter
sbb
inc
push
lock
shlb
es
and
pop
mov
adc
push
rclb
ficomps
pusha
mov
test
adc
mov
call
lret
jmp
inc
mov
nop
sub
rcrl
outsl
fucom
lret
icebp
sbb
jae
push
imul
lods
cmp
cmpsl
sub
in
into
xchg
lcall
je
inc
test
add
or
cmp
add
je
xor
rcrb
and
sbb
cmp
cmpsb
or
jmp
adc
outsl
rcll
adc
add
gs
push
mov
cmp
movsl
inc
movsb
sub
pop
test
pmaxsw
jno
addr16
xchg
cld
inc
clc
add
inc
ss
pop
and
sbb
insb
fcompl
das
inc
ret
adc
add
or
and
aaa
int
int
scas
mov
jns
or
sub
adc
xchg
add
inc
fists
out
dec
push
dec
mov
mov
and
roll
fsubrl
dec
pop
aam
push
pop
xor
mov
and
cmp
cmc
jns
rcrb
add
ret
and
loop
and
or
mov
xor
inc
fisttps
push
js
cmp
push
cmp
add
jmp
test
push
sbb
popf
jecxz
enter
jl
or
fcos
jmp
addl
js
pop
sbb
clc
mov
or
ficoms
xor
xchg
sub
ljmp
or
cmp
ljmp
jb
or
add
and
dec
dec
and
arpl
and
and
test
imul
adc
push
cwtl
adcb
add
inc
mulb
push
dec
pop
adc
scas
repnz
dec
stos
inc
jmp
cmpsb
dec
push
popa
jge
popf
sub
jo
mov
daa
or
loope
es
xchg
ret
push
pop
std
mov
mov
pop
movsb
adc
mov
jb
cmp
adc
data16
dec
xchg
mov
mov
mov
cmp
or
das
mov
add
icebp
mov
and
inc
stos
es
pop
into
rcrb
shl
mov
cmc
les
sub
add
pop
mov
xchg
ljmp
push
xor
jl
sbb
ret
gs
fiadds
add
mov
mov
xor
incb
orb
push
sti
daa
lock
js
fcoml
aaa
nop
jecxz
cwtl
push
jne
push
ds
xor
out
int
xor
inc
shlb
and
inc
ss
inc
mov
cmp
mov
mov
xor
std
pusha
ret
sub
add
sbb
jne
and
push
mov
push
jnp
xor
jne
pop
push
pcmpeqw
lret
pop
dec
add
test
lock
mov
mov
jmp
cmp
push
lock
mov
and
outsb
arpl
lea
ficoms
std
mov
xor
aas
aaa
adc
shrb
xchg
outsb
enter
addb
add
int3
push
cmp
addl
testb
pop
mov
in
imul
dec
or
xchg
ret
pushl
xchg
xchg
scas
or
cmp
lds
fmuls
jg
cmpb
pop
imul
push
jne
adc
push
mov
cmc
push
shrb
mov
sbb
jb
in
repz
pop
popa
xchg
in
push
nop
popl
add
je
and
dec
dec
mull
je
jae
mov
xchg
out
sub
pop
jl
jmp
test
push
jno
fwait
or
add
insl
scas
aas
cmp
push
pop
inc
in
xchg
sub
add
cld
cwtl
mov
mov
dec
idiv
add
jne
sbb
out
fwait
fs
inc
mov
aaa
fildll
fcoml
les
sbb
or
xchg
cli
mov
xchg
jmp
mov
icebp
out
adc
add
test
sbb
subb
or
inc
daa
push
adc
or
movl
lea
sbbb
mov
dec
cld
inc
cmp
roll
fadds
push
popa
movsl
fs
add
dec
clc
inc
mov
cmpsb
push
loop
jno
pop
pop
add
and
push
or
sbb
dec
mov
jb
mov
fstps
and
in
jp
fcmove
lahf
push
cltd
mov
cs
imul
sar
add
xor
add
pop
nop
popa
ffree
gs
int3
push
cs
cmp
or
inc
and
add
out
in
out
push
add
add
pop
imul
shl
push
je
je
push
cwtl
stos
add
sub
in
lret
loope
addl
cmp
jne
or
iret
bound
inc
push
lahf
and
add
xor
cmp
xor
outsb
out
cmp
insb
xchg
push
dec
mov
mov
jbe
cmp
pushf
mov
sub
ret
aad
outsb
jle
cmp
rcl
orb
push
jb
sub
rcll
sbb
or
jmp
mov
imulb
mov
mov
mov
and
xchg
cmp
and
adc
xor
negl
cmp
nop
daa
sti
sbb
mov
add
test
jle
or
and
test
sbb
jmp
or
out
rorl
pusha
jns
mov
movl
clc
ficoml
mov
add
test
cltd
mov
idivl
and
arpl
push
adc
jno
sbbl
push
jns
and
sbb
mov
jle
or
lock
outsl
test
lods
push
lds
push
movsb
sahf
loop
jo
push
in
mov
sbb
jl
pop
sbb
inc
push
clc
subb
leave
je
shr
and
test
cmp
stos
test
jecxz
inc
inc
int
jb
shlb
iret
push
or
in
ss
adc
ss
leave
leave
and
sub
ror
leave
xor
cmp
dec
fwait
push
sbb
inc
inc
setae
push
push
in
in
pop
add
in
in
insb
jo
xor
in
jl
xchg
dec
rcrb
mov
and
xchg
cwtl
xor
and
pushf
mov
dec
test
shlb
enter
xor
sarb
xchg
dec
fsub
in
xchg
dec
es
es
lock
clc
and
pushf
fs
add
add
mov
loopne
add
xor
adc
adc
sbb
cltd
fs
and
sub
fs
dec
xor
cltd
orb
inc
gs
xor
inc
es
dec
mov
and
dec
push
pop
pop
loopne
dec
xor
pop
jg
xor
or
cmpsb
push
rorb
cs
pop
or
dec
dec
mov
mov
pop
mov
inc
shll
iret
xchg
fists
repnz
adc
nop
adc
cs
pop
sbb
xchg
dec
and
xchg
movsb
cmp
jns
mov
xchg
dec
les
adc
int3
dec
clc
push
sar
mov
pop
notb
mov
sub
loope
test
push
test
es
or
dec
adc
popf
in
je
mov
mov
or
dec
push
or
pop
push
aaa
and
icebp
or
rcr
dec
daa
lods
test
fdivp
inc
mov
ds
and
mov
pop
dec
xchg
add
or
or
adc
sub
lahf
fstpl
xchg
not
xor
loope
xor
and
mov
and
shr
add
xchg
fcompl
shr
and
cli
sarb
test
js
add
fcoms
adc
xchg
test
dec
cmp
fcmovbe
push
mov
mulb
shll
mov
or
sub
adc
mov
mov
clc
mov
xchg
clc
incb
sbb
testl
and
mov
and
jae
cmp
aaa
jecxz
sbb
add
or
sbb
out
xchg
and
dec
pop
mov
or
fdivrp
shll
sub
aaa
jge
je
std
push
sbb
add
fstps
and
jge
aas
pusha
mov
pusha
loope
pop
sub
xor
cmpsb
adc
out
jecxz
pop
fnstsw
ds
pusha
fldl
xchg
mov
or
xchg
pop
dec
jmp
push
pop
and
inc
or
jns
dec
in
or
add
add
movsb
hlt
pop
out
test
fisttps
mov
adc
pop
fadd
das
rorl
dec
jne
orl
scas
jmp
push
and
imul
stos
add
imull
imulb
push
orb
push
pop
sbb
cltd
js
es
push
and
or
fwait
adc
jnp
inc
flds
fstps
jmp
frstor
pop
jno
add
adc
loope
jp
subb
test
mov
or
inc
inc
pop
sub
jmp
dec
push
cmp
lret
adc
and
xchg
sti
test
adc
inc
cmp
loope
or
call
jle
inc
aaa
sbb
out
push
xor
cmp
fstl
lods
lock
sub
pushf
sbb
pop
sub
jmp
sub
push
mov
lret
orl
lods
sbb
sarb
into
adc
mov
scas
cwtl
bound
and
mov
mov
jnp
enter
sbb
mov
cli
adc
dec
and
cmp
test
or
dec
and
repz
push
cmp
andb
scas
inc
roll
dec
sbb
enter
jle
repnz
xchg
mov
cli
shrl
push
clc
add
and
orl
push
outsb
or
push
push
pop
jmp
pop
sub
ucomiss
icebp
xchg
or
test
mov
adc
daa
outsb
mov
pop
cwtl
add
shrb
loopne
adc
jg
jns
out
or
pop
mov
lret
add
jmp
popa
mov
and
test
dec
nop
rcll
pushf
mov
les
sbb
add
fsubrl
or
clc
cmp
je
mov
jl
js
rorl
xchg
imul
cmp
hlt
pop
daa
adc
cltd
and
dec
xor
dec
pushf
sub
movsl
push
fdivr
stos
or
mov
in
mov
push
inc
or
insb
pop
fstpl
fcomp
add
jmp
jno
and
inc
and
xchg
add
popa
orb
or
fisttpll
stc
and
or
sbb
mov
or
mov
pop
shl
ss
push
lret
lods
in
push
mov
add
js
cmpsb
add
jae
insb
pusha
inc
push
hlt
or
add
mov
jbe
push
das
adc
aaa
add
and
mov
lcall
enter
add
mov
int3
jnp
mov
inc
lock
jl
push
jnp
and
dec
add
or
rorb
data16
je
xchg
inc
add
loopne
jecxz
push
mov
into
sbb
and
dec
mov
cmp
pop
xor
sbb
hlt
or
mov
pop
mov
jne
sbb
je
and
add
ja
add
push
mov
and
loopne
cmpsl
sbbb
add
in
popa
addr16
sbb
test
adc
inc
test
inc
enter
add
fucomp
pop
gs
mov
xor
test
xchg
orl
adc
cmpsl
mov
daa
aam
sbb
or
mov
mov
jp
add
or
cmpl
mov
push
addr16
mov
pop
je
aad
xor
mulb
push
mov
sub
sub
push
push
hlt
mov
inc
test
pop
dec
ljmp
adc
fnstsw
lgs
or
mov
loop
mov
and
xchg
xor
fdivrl
mov
xor
push
push
mov
mov
sub
lock
fsubs
fmull
mov
sbb
adc
dec
lock
pop
repnz
sbb
push
outsb
adc
cld
or
adc
rcrb
xlat
scas
mov
lret
dec
sbb
adc
scas
xsaveopt
jg
push
inc
xchg
cmp
or
sbb
mov
pop
out
jmp
and
insl
inc
adc
or
adc
das
mov
add
pop
jnp
jo
test
jg
mov
cld
stos
loop
or
jne
jl
pop
shlb
je
or
sbb
arpl
xor
and
ja
dec
pop
mov
lds
adc
push
mov
push
pushf
add
int3
pop
mov
inc
xor
add
test
es
jno
jo
aas
pusha
jmp
lods
push
nop
lret
je
dec
or
aam
mov
out
push
push
push
sti
jbe
add
push
and
sbb
mov
or
push
or
jle
or
or
add
loope
push
or
or
int
add
or
jge
add
pop
std
cmp
inc
xchg
jmp
or
inc
cltd
mov
push
test
push
or
xchg
jle
pop
outsb
add
aas
cld
mov
xor
sti
add
icebp
inc
push
and
daa
mul
pop
test
pusha
adc
jbe
jl
sub
pinsrw
stos
cmp
hlt
jbe
stos
pop
pop
xor
inc
push
pop
cmp
in
nop
jle
aam
cmp
mov
or
add
add
sub
sti
aas
es
ret
dec
or
inc
lea
icebp
lea
cmp
lret
mov
xorb
push
mov
xor
call
loop
rolb
cmpl
add
outsb
out
inc
sbbb
and
mov
out
mov
inc
fistl
adc
iret
jbe,pt
dec
imul
fsub
or
or
and
clc
sbb
lods
dec
call
mul
shrl
es
aas
mov
addb
repnz
sahf
jns
or
adc
lock
mov
mov
sqrtps
out
mov
sub
es
fildl
inc
in
xchg
xor
rcl
mov
pop
or
pop
cmp
jg
dec
ljmp
jl
push
mov
movsl
fiaddl
ss
ljmp
iret
fmul
shl
sub
sub
negl
inc
sbb
jb
mov
and
push
ds
push
or
faddp
scas
and
aam
out
push
sub
or
and
dec
cs
mov
pop
sub
loope
sub
sbb
mov
or
das
adc
adc
dec
lea
push
shlb
faddl
icebp
add
jnp
out
test
cmp
rol
add
clc
xchg
out
or
inc
rcrl
dec
xor
push
cli
or
cmp
mov
pop
push
push
jb
test
add
inc
repnz
incb
enter
movsl
loop
jns
cmp
and
shlb
hlt
push
aas
mov
shrl
push
xor
inc
sbb
fldl
dec
mov
movsb
addr16
das
dec
xchg
mov
xchg
jb
ret
jno
xor
rclb
arpl
pop
pop
stos
popa
mov
mov
sbb
lock
out
pop
add
and
js
pop
stos
iret
and
mov
and
mov
mov
in
xchg
or
nop
data16
sarb
adc
test
jle
ss
dec
or
sbb
loop
fildl
pop
lock
adc
push
cwtl
cmp
jle
push
and
aam
jmp
dec
clc
pop
lock
and
xor
mov
orb
cmpsb
mov
add
pop
add
push
adc
adc
dec
add
in
dec
je
inc
cmpsb
or
cmp
push
and
jne
lret
rolb
mov
or
or
pop
les
cmp
and
or
jb
mov
jle
inc
mov
mov
rorl
arpl
test
pushf
repz
rolb
icebp
out
fidivs
addr16
mov
adc
inc
cs
mov
or
ss
cmp
je
or
out
adc
mov
dec
repnz
mov
sti
decl
jne
dec
mov
inc
inc
mov
int
inc
lock
add
call
movsb
sbb
jp
aaa
pushf
lret
add
or
sub
js
nop
inc
into
orps
lahf
imul
or
mov
wrmsr
xchg
add
xchg
add
je
dec
test
push
add
adc
fs
pop
jno
adc
fdivrs
push
push
shll
mov
addl
and
pop
push
pop
dec
xor
test
sub
jbe
or
add
ja
cmp
push
pushf
outsb
mov
je
and
or
aas
and
adc
sub
mov
popf
rolb
sub
adc
add
sub
daa
movsl
xchg
and
ret
mov
inc
or
int
mov
faddl
lock
sbb
lods
xor
sahf
mov
and
add
movsl
push
xchg
jb
mov
je
add
mov
inc
mov
jns
neg
movb
mov
add
fs
cltd
push
dec
push
mov
pop
sub
add
add
shl
push
enter
into
add
add
pusha
pop
push
daa
test
jbe
jns
push
je
push
add
add
or
pop
lea
add
rclb
pusha
sub
std
dec
xchg
mov
iret
ret
jmp
daa
pop
clc
dec
and
pusha
push
or
sub
loope
popa
lret
adc
adc
test
cmp
xor
add
ljmp
xchg
sbb
cmp
or
and
xorb
adcb
jno
pushf
insl
push
xchg
iret
pop
sbb
lock
and
push
fadd
xor
add
adc
cmp
jge
movl
mov
cs
sbb
mov
jbe
pop
or
mov
enter
addl
mov
icebp
push
and
or
jne
mov
add
lods
push
insl
test
incb
stc
xor
sbb
ret
inc
or
or
aaa
addl
xor
dec
sbb
test
enter
js
push
sbbb
lahf
int3
mov
push
js
sub
leave
and
addr16
loopne
shll
inc
push
xchg
mov
daa
mov
out
ds
mov
fistpl
fstpt
xchg
and
adc
jg
fwait
sub
nop
ret
cmp
shll
jne
or
xor
xor
cwtl
gs
subb
cmp
mov
and
call
arpl
jnp
mov
jb
pusha
inc
adc
faddp
lcall
or
mov
insb
ja
mov
sarl
jmp
ret
inc
push
gs
adc
mov
and
sub
sbb
mov
addr16
rol
fsubrs
sub
rclb
xor
dec
fwait
aam
insl
cld
add
pop
icebp
xchg
or
shrd
sbb
sti
push
daa
xor
cmp
jge
sbb
push
movsl
clc
cwtl
xor
mov
cmp
add
dec
jmp
mov
add
enter
or
jl
inc
mov
incb
push
adc
rol
push
sbb
clc
and
leave
shlb
jo
aam
cmp
nop
in
and
push
dec
clc
popf
in
sbb
js
jg
jb
jns
popa
mov
adc
cwtl
shl
fimull
clc
pop
sbb
jl
insl
push
shll
jg
pop
clc
xchg
sub
pop
push
or
in
lock
in
adc
jl
jg
mov
mov
push
dec
dec
inc
dec
pop
movsb
xchg
cmp
or
or
sbb
cmp
sar
or
in
in
ja
test
mov
sbb
add
sbb
and
sbb
add
pop
mov
mov
sub
aaa
pop
popa
loopne
fcmovu
sbb
jo
sbb
push
sbb
sbb
push
jmp
lock
movsb
adcl
mov
test
xchg
inc
or
js
sahf
jl
cli
ret
aaa
push
pop
or
rolb
lea
and
pop
xor
pop
push
or
add
je
das
push
repnz
je
add
and
jbe
rolb
jl
into
shll
rorb
mov
push
sbb
cmp
movsb
add
and
adcl
sbbb
jp
xor
jne
push
cmp
nop
pop
jbe
imul
jbe
pop
push
or
xchg
cmp
mov
add
leave
xor
enter
shrl
push
push
push
push
out
dec
out
les
xchg
cli
cld
jl
loopne
jge
lock
or
or
mov
sub
test
push
add
jp
in
adc
movb
je
ds
fnstcw
clc
gs
or
pop
data16
xlat
add
imul
inc
popa
je
inc
je
dec
in
in
pop
push
xchg
jmp
xor
pop
jmp
mov
lods
pop
popf
sbb
shlb
sbb
push
rorl
clc
push
popa
dec
adc
or
mov
pop
shl
insb
lea
mov
arpl
cmp
mov
das
movsb
das
mov
aad
test
and
out
inc
pop
push
loopne
daa
push
adc
pop
aaa
sub
inc
hlt
cmpb
jne
inc
mov
int3
fidivrs
testl
fiadds
xchg
sarl
push
clc
insb
cmp
jmp
ja
sbb
mov
movsb
push
popf
sbb
cmp
cli
jge
mov
adc
or
mov
inc
mov
inc
ja
sub
add
or
pop
cs
or
jge
or
aaa
jno
lea
add
dec
add
mov
jl
int3
int3
add
mov
mov
and
pop
inc
ljmp
xor
push
cld
dec
inc
mov
push
sub
and
leave
loope
push
ret
in
les
push
leave
xchg
test
mov
add
mov
into
sub
movb
or
cmp
dec
add
or
mov
das
test
inc
mov
pop
inc
mov
xchg
jmp
insl
sub
sahf
or
push
sub
cmpl
and
push
push
or
push
mov
mov
push
mov
mov
jmp
adc
xor
jecxz
add
mov
pop
jp
mov
dec
pusha
out
dec
dec
mov
cmp
sbb
test
jb
dec
ja
test
data16
in
das
push
mov
lret
je
dec
je
dec
or
mov
jmp
or
jmp
call
mov
xchg
call
jmp
repz
add
icebp
pop
ret
shll
or
aad
sahf
andb
data16
movsb
imul
add
das
or
sbb
das
add
xor
gs
sbb
cmp
adc
aas
and
cmp
je
mov
rcr
dec
mov
xor
mov
sbb
jbe
pop
rorb
fs
xor
mov
mov
xor
cmp
xchg
into
sub
nop
lcall
rolb
pop
bound
sbb
inc
jl
repnz
cmpl
xchg
cmp
or
and
pusha
inc
add
pop
sbb
dec
jmp
inc
add
add
call
rorl
or
ljmp
add
ja
mov
pop
mov
lods
cmp
push
shr
or
mov
push
push
adc
cmp
add
shr
lret
add
mov
notb
mov
inc
or
add
mov
mov
mov
fdivrl
cmp
in
outsb
imul
inc
jbe
add
jl
in
bound
cmp
or
dec
push
lret
shlb
pusha
inc
jae
repnz
loopne
inc
fisttpl
cmp
loopne
sub
push
jno
push
xor
push
jns
sbb
mov
add
mov
lea
or
loopne
shll
cli
add
call
push
and
xchg
in
and
adc
cmp
pop
aam
cmpsb
and
xchg
add
mov
mov
and
int3
lock
lods
or
icebp
sbb
mov
xor
push
loope
pusha
jbe
mov
add
push
xlat
shl
cli
jne
dec
push
addb
xchg
or
cmp
mov
shll
in
jne
pop
data16
popf
push
ja
mov
outsb
xchg
xor
mov
je
xor
mov
mov
repnz
nop
sub
lret
sbb
cmpsl
xchg
fwait
push
sub
cmpsb
mov
pop
and
lea
add
sub
pop
or
in
subl
lods
test
lret
test
and
jo
xchg
xlat
xor
adc
dec
xchg
fldcw
add
mov
add
push
stos
add
sbb
or
mov
and
pop
jmp
ja
sbb
fs
inc
inc
imul
jle
cli
add
shll
rorb
pop
adc
shlb
leave
shrb
pop
pop
add
aad
outsl
xor
inc
push
xor
and
pop
dec
jecxz
or
inc
lcall
dec
mov
xor
fbld
adc
pop
inc
test
repnz
cmpb
add
add
sbb
mov
add
pop
aam
xchg
sub
xor
xchg
lods
xor
cmpsl
push
lock
mov
sbb
fadd
and
jno
movsl
fldt
negb
add
rorl
and
cmp
and
pop
in
push
shr
push
sbb
add
call
pusha
push
ljmp
leave
imul
push
adc
add
jp
sbbl
shlb
cmp
xor
jo
dec
jb
in
mov
and
xor
rolb
rcrb
rolb
shlb
pop
cmpsb
sbb
ss
adc
pop
jge
xchg
or
jmp
fcoml
xor
add
xor
pushf
xor
insl
pop
push
incl
adc
push
jmp
adc
mulps
mov
movsb
push
pop
inc
push
push
lea
cmp
push
fidivl
add
imul
mov
ds
mov
inc
and
adcb
xor
pop
xchg
sub
jmp
or
jne
cmp
jne
sbb
popa
rcl
jmp
dec
add
gs
add
fiadds
loopne
or
or
cltd
mov
add
mov
roll
leave
add
jl
cs
je
mov
iret
adc
adc
adc
mov
imul
js
mov
in
imul
bound
add
movsw
sub
fstpl
adc
sub
or
fldl
mov
and
sbb
mov
mov
and
lea
add
rol
push
scas
in
clc
xlat
clc
pop
dec
jge
inc
inc
push
neg
neg
sbb
iret
mov
sbb
sbb
inc
sbb
add
xchg
sbb
mov
sbb
sbb
sbb
sbb
fcoms
adc
addl
mov
xchg
inc
sub
or
xchg
adc
sbb
mov
inc
shlb
dec
jns
mov
dec
jne
pop
pop
pop
aam
pop
insl
mov
push
jae
or
jae
lods
rcl
jbe
orb
loope
shr
sub
xor
mov
adc
lock
jmp
enter
cld
lock
je
mov
add
add
outsl
andl
lods
fwait
into
add
loopne
lods
jae
adc
adc
sbb
mov
push
or
aad
mov
cmp
jbe
das
jge
lods
aas
xor
dec
ljmp
shlb
lods
imul
or
adc
roll
outsb
add
cmpb
inc
pusha
enter
mov
cs
pop
jne
dec
add
mov
popa
add
or
xor
inc
cwtl
sub
dec
sahf
cs
out
imul
inc
ss
add
aaa
dec
sub
cmpsb
jnp
jmp
inc
jns
cmp
dec
rcrb
jne
arpl
inc
add
sub
add
mov
pop
sbb
mov
scas
mov
dec
sbb
push
add
add
xchg
mov
adc
adc
jg
cs
mov
je
adc
out
incl
jl
out
push
cmp
ja
add
cmp
adc
sti
dec
sarb
cmp
jne
cmpsb
shll
leave
adc
scas
mov
outsb
mov
jl
enter
pop
pop
je
sbb
cmc
cmc
xor
sbb
add
dec
lea
push
and
push
mov
add
cmp
xchg
aam
sti
aas
cs
push
pop
push
movb
jmp
or
test
inc
pop
cld
aaa
push
or
pop
jle
cmp
push
adc
push
test
jp
mov
inc
fdivrs
add
movl
add
sbb
add
mov
enter
mov
dec
testb
sbb
cmp
sub
sti
or
mov
fdivr
inc
jb
stos
je
out
mov
dec
js
push
andb
sbb
fisttpl
cmpsb
add
sbb
push
fwait
mov
dec
pushw
imul
std
subl
lret
jg
imul
lea
sar
sarl
movswl
mov
insb
mov
es
ljmp
mov
cmp
dec
lcall
testb
mov
adc
insb
mov
push
push
sti
add
dec
cmpsl
cmp
dec
loopne
sub
or
pop
and
jl
add
mov
decl
jle
repnz
sub
mov
mov
pop
loop
or
and
lea
inc
je
cltd
js
and
cmpsl
add
into
lea
aad
cmpb
inc
cmp
or
ret
cmp
and
jae
inc
testl
mov
loop
fs
inc
mov
cmp
aas
mov
jne
lea
das
jbe
cwtl
rolb
add
sahf
inc
mov
or
mov
lea
pushf
sbb
mov
xchg
les
or
cmpsl
jo
movsb
cmp
mov
ret
movsb
sbb
mov
mov
pusha
aad
dec
lret
data16
xchg
mov
mov
or
cmpsl
insb
jl
push
lods
dec
jmp
imul
jae
loope
lock
jle
cmp
clc
mov
shll
mov
add
shr
or
and
rorb
dec
jmp
dec
sbb
push
lret
test
xor
inc
mov
test
gs
mov
jle
cwtl
shrl
loope
shll
or
mov
dec
mov
xor
imul
ja
dec
and
jnp
repnz
in
add
cli
divb
mov
repnz
jne
subl
and
notb
jge
mov
adc
mov
pop
fisubrl
cwtl
fimull
xlat
pushl
and
sbb
fidivl
fldenv
enter
ret
pusha
and
mov
divb
lcall
sbb
shrb
enter
sbb
cmp
repnz
pushw
rcl
xor
sbb
loop
out
jge
icebp
adc
test
mov
inc
push
ja
push
xchg
stos
cmp
aam
daa
inc
imul
mulb
inc
shlb
fsubrs
pusha
hlt
cmp
sub
jbe
orl
sbb
pop
cmpsl
or
add
test
adc
ret
hlt
adc
test
mov
xchg
lret
fcmovu
mov
les
add
dec
adc
mov
sbb
add
add
add
into
clc
adc
xchg
adc
jg
or
xchg
mov
lock
jge
or
dec
add
enter
and
jge
lock
or
cmp
jne
jne
inc
sub
add
inc
out
nop
sbb
lret
push
mov
pusha
add
sbb
popa
mov
dec
sub
mov
aas
and
negb
inc
add
inc
mov
xor
call
pop
outsb
call
cmpsl
lods
out
xor
and
or
sub
in
mov
cli
pop
inc
roll
lcall
adc
neg
and
je
add
imul
jmp
loopne
vcvtsd2ss
loopne
fsubrs
cmp
or
push
and
mov
push
in
pop
loopne
movsl
out
into
mov
pop
pop
sti
add
lock
sar
sub
mov
pop
inc
les
enter
es
dec
inc
es
dec
dec
je
sbb
movb
lahf
dec
ljmp
stos
ljmp
adc
sahf
mov
aam
shlb
add
sub
test
fisttps
push
call
add
add
loopne
inc
sbb
or
mov
inc
ljmp
jmp
addb
dec
inc
stos
hlt
mov
sub
cmp
jge
sub
cmpb
or
mov
lock
dec
cmp
add
dec
ja
jb
add
add
fadds
add
cmp
ret
fidivrs
jne
dec
mov
jb
int
rolb
je
aad
test
popf
in
jbe
xor
lret
or
loopne
adc
jp
ret
adc
inc
or
pop
imul
add
test
lcall
stc
stos
inc
inc
call
and
add
push
test
rclb
clc
or
adcb
or
add
repz
add
stos
jb
cli
pop
jne
or
push
pop
scas
cmp
je
push
ret
sbb
adc
mov
and
push
ret
or
xchg
adc
and
push
sub
add
fimuls
ss
mov
mov
or
pop
cmp
xor
into
pusha
mov
mov
aam
sub
and
pop
pop
dec
mov
ret
prefetch
mull
mov
adc
fcomps
push
rolb
scas
rolb
adc
in
jne
or
or
push
add
add
add
cmpl
push
or
add
mov
pop
jle
lret
pop
or
adc
xlat
push
pop
sub
ja
mov
jle
jne
fs
lahf
out
and
mov
shll
inc
jl
jge
out
and
xor
or
ret
les
les
cmp
addb
jle
nop
clc
mov
test
push
andl
or
push
scas
or
adc
orl
mov
test
xchg
rclb
dec
push
out
or
in
clflush
ds
test
data16
sbb
add
or
lret
xchg
adc
xchg
into
ja
shl
mov
mov
sbb
xor
jns
mov
lret
into
into
ret
cmp
mov
mov
hlt
inc
pop
sub
push
pop
sbb
pop
mov
aam
sub
shlb
or
sbb
stos
cmp
sti
add
arpl
push
adc
lock
add
leave
jge
sbb
cltd
push
pop
addr16
add
movsl
movsb
adc
adc
outsl
pop
test
mov
and
movl
inc
shl
or
cmp
pusha
sub
sbb
mov
push
outsb
jb
lret
int3
popa
push
sub
xor
pop
sbb
fmuls
jno
add
out
les
aas
mov
mov
push
push
mov
and
xlat
xor
add
clc
shr
xor
sbb
inc
or
sub
lock
scas
mov
roll
in
hlt
push
jge
nop
flds
jne
add
je
in
mov
mov
cmp
jl,pn
andl
add
sbb
pop
inc
jno
push
fimuls
sbb
je
dec
sub
mov
into
cmp
je
mov
inc
and
hlt
mov
inc
pop
icebp
or
or
lret
dec
cmpl
in
mov
pushf
xchg
mov
or
fisubrl
pusha
test
ljmp
das
inc
pushw
or
mov
sbb
pusha
and
inc
pop
adc
mov
popa
cmp
and
pop
aam
scas
mov
adc
and
loopne
cmp
xor
xor
lds
adcb
push
push
mov
aaa
sbb
test
add
xor
cltd
in
dec
xor
fmul
or
test
push
pop
jne
cmpb
xchg
cmp
cmpsl
xor
or
inc
lods
push
xor
dec
dec
sub
xor
adc
sub
aas
cmp
inc
push
imul
push
aaa
sbb
dec
mov
cs
xlat
or
ret
lret
pop
cmp
add
into
push
adc
xchg
mov
test
mov
sbb
and
adc
add
push
scas
test
inc
cmp
jl
fstpl
fmull
in
sub
lahf
inc
mov
inc
test
rorb
and
test
call
push
outsb
ss
fwait
js
je
mov
or
cmp
cwtl
call
insb
cmp
lods
inc
mov
mov
cmp
add
fsubl
pusha
gs
sbb
lds
dec
in
mov
adc
cli
mov
add
cmp
jae
jg
xor
xchg
sar
das
or
mov
fldcw
scas
pop
call
mov
mov
loop
enter
jle
add
inc
testl
insl
lock
dec
mov
jae
divl
subl
mov
push
jmp
dec
and
movsb
fbstp
xor
test
out
cmp
subl
push
js
inc
sub
xor
test
aas
jp
mov
ljmp
insl
and
mov
or
mov
pushf
xor
xchg
sub
xor
mov
xor
inc
add
push
jno
mov
lods
add
sbb
hlt
pop
loope
arpl
je
adc
scas
sbb
fsubrs
idivl
push
pop
jbe
pop
cmp
jbe
popl
test
inc
add
push
mov
sub
pop
rorb
mov
jns
push
sbb
mov
in
repnz
aas
add
dec
repz
mov
or
push
fmuls
sub
mov
pop
push
push
fs
cmp
cld
cmp
sbb
iret
les
pop
dec
pop
test
pop
xor
push
sub
sbb
in
mov
cs
xchg
xlat
rcll
push
and
pusha
imul
push
and
loopne
push
push
xchg
cmp
clc
outsb
push
pusha
push
inc
xchg
enter
leave
movsl
dec
in
pusha
or
adc
popl
and
pop
mov
sub
mov
push
xor
cltd
mov
push
add
or
jnp
mov
sar
xor
sbb
dec
pop
push
inc
push
pop
and
and
inc
cwtl
pop
movd
mov
pop
rol
jbe
dec
imul
or
cmp
mov
cmpsl
and
lods
rcrb
sub
adc
push
out
xor
xor
nop
push
in
jecxz
les
jbe
jo
mov
mulb
es
pop
add
stc
inc
push
inc
loope
dec
and
cmp
push
pushf
ret
scas
dec
pushf
into
icebp
push
add
test
cld
ror
mov
jmp
add
add
sbb
and
add
sahf
inc
rclb
arpl
mov
push
loopne
pop
pop
xchg
cmpsl
test
loopne
fs
mov
sbb
xor
mov
les
movsb
iret
clc
add
outsb
adc
mov
sbbl
add
xor
mov
data16
nop
cmp
scas
cld
adc
es
or
imul
inc
int
adc
xor
and
mov
pop
mov
xchg
xor
jns
adc
or
cld
cmp
push
sahf
and
adc
dec
loope
mov
scas
dec
push
xchg
jne
add
fwait
mov
xor
stos
xor
push
cmpsb
add
push
adc
shlb
adc
clc
pop
push
xor
inc
popf
movsl
cmpsl
mov
test
lahf
push
sar
addb
or
adc
xor
aam
pop
pushf
enter
push
bound
add
push
popa
sub
or
push
fisttps
btc
xor
std
xchg
shr
je
xor
inc
and
jo
mov
push
add
or
loope
pop
gs
push
inc
js
dec
or
xor
jne
or
pop
pop
pop
xchg
push
jmp
xor
arpl
pop
sub
imul
fidivrl
or
ja
mov
jmp
add
push
jo
mov
in
into
imul
add
jb
xchg
jge
cmp
sub
loopne
movsb
sbb
jg
sub
inc
mov
sbb
cmp
ja
jbe
inc
pusha
or
jge
inc
push
aaa
pop
lds
xlat
cwtl
or
xchg
pop
add
mov
jge
pop
adc
add
jmp
out
jp
repnz
std
fidivrs
jg
adc
in
sahf
sub
lock
xchg
add
icebp
imul
icebp
cmp
add
inc
jmp
mov
popa
inc
movsl
inc
add
call
mov
adc
ss
mov
mov
xchg
add
test
pop
adc
repnz
in
and
dec
mov
and
add
inc
lea
orb
xor
sbb
test
sub
push
pop
sbb
add
pop
repnz
sbb
in
sub
mov
push
inc
sbb
clc
incb
je
cmp
cmp
aas
jns
mov
mov
jle
sbb
mov
adc
adc
test
dec
cmpl
push
or
mov
lret
jne
imul
je
bound
jp
adc
ja
xor
cmc
push
fsubrl
cmpl
pusha
fwait
or
faddl
and
mov
dec
jmp
dec
mov
and
add
cltd
and
jae
testl
mov
sub
ret
xchg
inc
dec
inc
cmp
pop
imul
fldl
push
and
push
or
jne
inc
sbb
pop
cld
or
xor
stc
sbbb
or
js
mov
jmp
loop
adc
lds
test
sbb
outsb
jae
xchg
adc
repnz
inc
and
add
les
add
mov
dec
sub
xchg
jle
test
push
add
add
sbb
adc
orb
out
loopne
std
adcl
cmp
jle
push
cmpsb
fwait
cmp
add
sbb
adc
and
push
push
push
jg
das
call
push
and
dec
test
repnz
sub
inc
hlt
addl
add
cmp
jl
in
mov
mov
pop
cmpl
inc
mov
adc
mov
adc
or
call
sbb
sbb
cwtl
fnstenv
repnz
and
xor
inc
mov
les
add
sbb
movsl
mov
in
mov
jmp
ret
fsts
fdivs
ja
scas
mov
sub
jge
and
xchg
adc
lods
cli
loope
out
outsl
jbe
cmpsl
adc
dec
rcl
adc
aam
cmpl
dec
pushf
pop
adc
cmp
jae
cmp
scas
mov
lret
cmp
jg
dec
dec
rolb
sbb
mov
test
mov
ret
clc
insl
or
pop
add
test
popa
jmp
and
cwtl
or
cmp
pop
outsb
pop
mov
das
inc
lret
adc
inc
or
rcrl
enter
pop
cmp
inc
xchg
ds
jp
lods
inc
rorl
add
jbe
scas
xlat
sarb
ficompl
and
or
dec
cmp
cwtl
jbe
or
test
andb
mov
add
or
and
add
add
inc
push
ja
and
adc
jge
shlb
orb
dec
or
int3
test
inc
xorb
cmp
test
je
cmp
aam
jb
shrb
and
dec
rolb
aas
ss
jmp
cmp
add
jae
fidivl
je
mov
and
push
mov
cmp
jle
inc
xor
cli
testb
imul
dec
mov
ss
add
scas
cmpsb
or
gs
mov
or
jbe
test
push
xchg
adc
jg
cmp
dec
je
dec
addb
jne
push
jmp
jno
std
jne
fcoms
jmp
xor
loopne
inc
xor
mov
je
adcl
push
jns
or
jne
test
push
sub
cmp
daa
mov
cmp
inc
cs
mov
dec
or
dec
pop
clc
mov
xchg
jns
push
in
jo
mov
dec
cli
mov
pop
loope
inc
add
cmp
and
mov
push
push
stos
and
sbb
mov
add
push
inc
sbb
hlt
push
lock
test
fstl
in
fwait
add
and
addr16
add
sbb
lods
xchg
xor
inc
cwtl
inc
mov
xor
hlt
imul
cmpb
sub
add
and
frstor
xchg
pop
out
push
out
into
mov
ficoml
mov
lret
pop
mov
pop
sbb
inc
push
aaa
js
xchg
cmp
adc
or
nop
je
jl
enter
mov
mov
ret
xlat
add
mov
inc
mov
xor
gs
orl
push
sbb
adc
ror
sbb
jecxz
rorl
stc
sbb
std
js
mov
hlt
jne
adc
fildl
or
push
gs
mov
mov
and
fimuls
fs
pop
pop
icebp
sbb
sbb
ja
cld
mov
lcall
add
nop
or
scas
sub
je
dec
push
dec
pop
add
cld
or
loop
jne
jg
add
test
je
addb
dec
loopne
mov
xchg
addr16
inc
adc
xor
into
add
movsb
cmpsb
adc
jp
lock
or
hlt
rolb
imul
add
jb
orb
fcmovu
push
mov
ret
push
mov
sbb
out
add
dec
outsl
shll
call
je
jp
mov
fsubrs
adc
call
and
pop
and
cmp
dec
cmp
cmp
inc
jae
jb
or
sub
cmpsl
push
fcmovb
jnp
and
aaa
pop
pushf
pop
xchg
call
sbb
icebp
jne
jae
scas
push
sub
mov
add
push
inc
bound
inc
pusha
jmp
test
or
or
push
and
jne
mov
or
pusha
jbe
inc
lret
cmp
sti
push
inc
test
ja
push
and
insb
push
lods
sbb
jns
and
jo
pusha
mov
adc
xlat
je
xchg
pop
loopne
cli
es
mov
and
mov
js
sub
testb
xchg
testb
pop
mov
nop
adcb
mov
sbbb
cwtl
and
bound
jb
je
cmp
push
xlat
pop
aam
jns
jb
cmp
jbe
clc
push
add
movsb
in
sub
pop
push
xchg
push
shlb
call
and
aaa
out
pop
push
cmpb
test
fiaddl
test
xor
xor
lods
and
lcall
shr
mov
pop
es
jmp
scas
add
sub
pop
pop
and
aam
fistl
pusha
and
sub
mov
mov
pushf
adc
xchg
push
popa
mov
inc
lods
stos
ret
and
mov
xchg
mov
hlt
iret
mov
adc
push
push
xchg
jne
dec
jns
mov
sbb
add
add
cmpsb
lahf
or
movsb
fidivl
xor
rolb
add
std
and
incb
dec
push
mov
xchg
lock
rcll
xchg
cmp
outsb
imul
movups
push
xchg
cmpsl
add
stos
inc
outsl
sub
adc
ljmp
sbbb
xchg
add
pushl
popa
mov
fld
fldcw
xorb
insb
or
xor
fsubrp
cmp
mov
fstps
icebp
pop
js
cmp
xor
mov
sub
das
fcoms
cmp
test
lea
leave
sbbb
pop
int
in
cmp
push
dec
cmpl
or
dec
or
sub
dec
or
inc
or
dec
in
mov
inc
adc
mov
xor
push
and
rolb
add
dec
sahf
mov
das
or
pop
jno
shlb
lock
add
nop
lock
jbe
leave
and
int
fwait
inc
fidivs
jl
or
adc
mov
xor
mov
sbb
dec
ret
dec
fimull
xchg
call
fimull
in
lock
insl
jb
in
inc
dec
and
add
and
pop
cld
enter
mov
add
leave
add
mov
fistpl
lret
dec
xor
cmp
sub
xchg
sbb
mov
xchg
ja
movsl
aam
loope
fisubl
fsubrl
pop
jmp
roll
roll
and
mov
clc
xchg
jne
sti
popf
add
into
jo
mov
pop
fcomp
icebp
dec
in
leave
jno
jbe
test
fnstsw
mov
or
adc
lret
dec
repz
and
insb
add
xor
fucomp
pop
push
mov
das
or
ficoms
fucomip
sbb
dec
mov
pusha
shlb
in
inc
or
les
stc
xchg
inc
adc
inc
jo
call
inc
lock
mov
push
mov
popa
inc
lods
xor
movsb
testb
sub
xorb
pop
pop
insl
push
inc
dec
or
mov
sbb
nop
pop
sbb
nop
mov
outsb
in
cmp
loopne
nop
jbe
cmp
js
cld
cmp
fldcw
mov
cs
and
jne
add
mov
imul
loopne
les
int
incb
andb
and
cltd
adc
pop
fiaddl
adc
mov
pusha
rcll
cmp
outsb
dec
push
jno
pusha
dec
es
fs
xchg
jo
js
mov
addl
or
fsubr
adc
push
loop
lea
xor
test
lea
imulb
popa
cld
xor
jge
xchg
adc
adc
shlb
jo
aad
je
fs
or
sbb
pop
push
in
in
sti
xor
loop
jecxz
jecxz
rclb
and
pusha
enter
mov
into
popa
adc
es
sub
dec
dec
ret
sbb
sarb
mov
rorl
jecxz
mov
out
dec
mov
jl
add
scas
cmp
sbb
call
add
repnz
imul
in
xchg
add
xchg
mov
pop
inc
dec
in
inc
lret
cmpsl
add
push
mov
cmpb
dec
adc
xchg
add
es
aam
sbb
add
adc
sahf
movsb
pusha
inc
in
or
out
mov
popa
pop
ret
push
inc
popf
lock
cwtl
mov
lock
pop
in
daa
cmp
scas
xor
movsb
xchg
push
cltd
adc
adc
dec
addl
xchg
mov
mov
xchg
cmpsb
push
out
and
daa
insl
adc
jmp
scas
out
out
jnp
push
cmp
loop
mov
pop
dec
call
mov
or
in
jno
nop
add
fdivrl
aam
pop
pop
shrl
sub
sub
mov
in
loope
xor
aam
or
cmp
mov
lret
mov
dec
mov
popa
dec
insb
dec
adc
mov
bound
jmp
push
push
jno
jmp
in
xchg
stos
sbb
call
pop
mov
inc
fiaddl
jne
push
adc
je
sbb
cs
adc
mov
or
orl
inc
jne
jmp
sub
xchg
fistps
lahf
stos
inc
jmp
lods
add
mov
push
call
jl
lahf
in
imul
gs
rcr
jmp
dec
cld
jnp
dec
pop
xor
sbb
mov
adc
dec
mov
pop
inc
mov
xchg
dec
dec
or
orl
wbinvd
mov
xchg
in
inc
or
push
inc
adcb
inc
test
je
addr16
popf
stos
dec
mov
or
rolb
scas
or
xchg
cmp
dec
pop
imul
mov
add
sarl
dec
add
aaa
sbb
andb
out
call
or
lahf
pop
and
in
out
adc
or
in
or
jns
call
jo
in
mov
adc
aad
sbb
push
mov
or
or
lock
mov
movsb
pusha
sub
fldcw
xor
adc
cmpl
push
inc
sbb
nop
popf
xchg
je
lock
add
subl
jno
push
loopne
lock
in
dec
leave
in
call
jbe
call
xor
es
push
inc
xlat
adc
popa
cmc
adc
sbb
out
loopne
xor
and
xacquire
clc
aad
lds
push
sbb
push
adc
mov
icebp
setl
in
in
fdivs
addr16
or
or
or
nop
mov
or
repnz
test
push
leave
pop
aaa
sbb
sti
dec
pop
lcall
mov
lds
fisubrs
mov
sbb
adc
or
adcl
test
aam
jne
pop
sub
lock
and
sti
mov
xchg
shl
in
cmp
mov
pop
inc
test
rorb
hlt
pushf
push
or
cmp
xchg
or
or
mov
or
mov
or
or
leave
imul
and
nop
and
cmc
cmp
int
es
adc
mov
in
test
cltd
inc
daa
nop
out
cmc
lods
dec
or
nop
add
or
or
or
mov
sub
inc
sbb
mulb
or
mov
addr16
push
or
rcll
xchg
arpl
fwait
push
and
adc
cmpsb
sbb
pop
bound
mov
xor
popa
fcomi
or
test
movsl
sub
aaa
notl
xor
std
inc
in
add
push
testl
es
fadds
loopne
inc
or
pop
sti
call
add
or
iret
je
mov
aaa
fists
jns
sub
inc
or
rorb
inc
clc
mov
std
ret
sbb
mov
mov
mov
out
dec
or
scas
aam
cld
mov
aaa
call
enter
or
ret
adc
sbbl
fs
ret
push
lods
or
pop
push
mov
imul
call
mov
adc
rorb
fsubs
adc
push
sbb
mov
push
push
insl
sub
mov
cli
fmuls
mov
das
mov
imul
push
call
push
xor
dec
loope
je
bound
lret
jo
cmp
jge
sbb
enter
cmpleps
dec
loopne
cld
sub
sub
jns
mov
jno
shlb
sbb
in
inc
nop
inc
cwtl
inc
dec
lock
iret
xchg
or
or
add
fisttpl
adcl
push
push
std
idiv
enter
dec
pop
and
mov
les
fdivs
lock
fidivs
lock
pusha
imul
xchg
mov
loopne
enter
aam
hlt
fstp
push
je
pop
dec
jmp
push
es
or
nop
xor
inc
adc
xchg
dec
pop
or
es
in
pop
mov
mov
sbb
roll
sub
fwait
mov
xchg
sub
push
jecxz
sub
or
adc
in
stos
add
add
or
or
mov
cltd
mov
cmp
push
mov
lods
das
sub
add
insl
nop
adc
stc
mov
mov
dec
andb
adc
lahf
std
mov
rolb
mov
sbb
gs
adc
fwait
add
orb
jmp
and
sub
inc
cltd
fadds
push
jae
mov
cs
mov
pinsrw
in
mov
pop
movsl
dec
pop
inc
int3
dec
mov
add
aam
insl
lea
mov
mov
mov
pop
push
fs
add
rclb
sbbb
sbb
test
rcr
mov
sbb
dec
cs
xor
inc
pop
xchg
std
add
insb
repnz
xlat
or
shrl
xlat
stos
sbb
dec
test
mov
push
subb
fcomp
loopne
sbb
aam
imul
stc
pop
inc
sbb
add
enter
add
shrb
sbb
pop
adc
sbb
xchg
js
push
js
or
mov
int3
das
unpcklps
sub
aam
adc
subb
aas
in
xchg
inc
pushf
pop
and
lds
cmp
pop
ljmp
cmc
call
xor
adc
cmc
daa
outsl
and
lcall
out
sub
jns
enter
test
fwait
mov
test
add
insb
in
xchg
cltd
js
jbe
sub
add
test
fidivs
loope
xchg
jb
cmp
loope
inc
in
mov
pop
fisttpl
insl
mov
ja
sbb
dec
mov
ljmp
movsb
fdivr
enter
cmp
movsb
or
js
mov
adc
inc
dec
push
xchg
cmp
push
or
aam
jbe
sub
imul
xchg
int3
or
les
and
test
sub
fcoml
gs
adc
inc
fimull
hlt
jmp
test
inc
dec
dec
int
sub
adc
xchg
sahf
xor
mov
jmp
pop
inc
add
xor
xchg
or
inc
push
subb
mov
bnd
fidivs
xlat
pop
arpl
dec
prefetchwt1
lods
adc
mov
lods
or
test
mov
stos
jecxz
dec
dec
out
pusha
mov
sahf
pop
cmp
sub
mov
mov
loopne
cmp
push
cmp
popf
or
or
andb
add
cli
add
fcmovnb
notb
xchg
xor
loope
push
cmp
das
adc
dec
adc
imul
inc
cltd
pop
rcll
jmp
and
or
int3
iret
mov
mov
adc
movsl
mov
es
xchg
mov
aad
in
int3
and
pop
sub
push
adc
mov
in
jne
mov
lock
jecxz
push
mov
sbb
xlat
scas
call
xor
subl
std
int3
ss
add
out
add
xor
xchg
or
mov
xchg
ret
jge
and
mov
es
ss
mov
pop
or
int
add
cmc
cmp
fmull
mov
clc
shlb
lock
add
push
adc
cmpsb
lock
call
fimull
rclb
out
cmpsl
in
sbb
pop
jo
xchg
je
or
adc
jo
insb
adc
sub
ret
je
adc
inc
mov
dec
mov
add
inc
imul
or
aam
xchg
sbb
add
pushf
adc
sub
inc
dec
call
inc
in
sub
mov
notl
mov
jmp
cltd
push
imul
cwtl
xchg
pop
daa
push
sub
test
fadds
add
and
mov
cmp
xchg
xchg
sbb
cmp
sbb
ja
shrb
pushf
je
xchg
adc
bound
sbb
add
mov
pop
pop
in
sbb
sub
add
jb
not
adc
dec
mov
loope
out
jno
push
xchg
shrl
int
stos
mov
mov
cmp
scas
mov
push
adc
mov
mov
fcomps
in
ret
loop
sub
call
mov
inc
pop
test
jno
pop
pusha
out
pop
cwtl
adc
sbbl
add
pop
in
xchg
ja
fmuls
push
sbb
inc
pop
mov
push
pop
pop
enter
and
test
cmpsb
imul
popa
aad
add
adc
sub
stos
inc
pop
sbb
push
adc
sbb
movups
lock
lcall
sub
sub
pop
adc
or
lds
aas
push
les
adc
or
adc
sbb
push
rclb
sbb
or
sbb
inc
call
pop
dec
push
pusha
jb
enter
dec
int3
mov
in
add
mov
lcall
xor
dec
fs
sbb
mov
xor
je
sbb
mov
xlat
mov
scas
cmp
xor
popf
sbb
test
popf
jmp
dec
lcall
cmpsb
stos
pushf
mov
or
and
mov
dec
xchg
jl
rolb
xchg
cld
push
jmp
push
or
lods
sub
xchg
int
mov
mov
and
xchg
sbbl
or
out
add
data16
js
xchg
dec
cmpsb
jns
inc
addb
mov
push
out
xchg
sbb
jl
lods
lods
or
jbe
scas
ret
nop
adc
xchg
jo
mov
addl
and
jge
call
dec
cmp
mov
push
mov
lods
mov
sub
add
mov
lods
in
aaa
nop
sbb
es
xchg
test
and
mov
mov
jb
pop
or
mov
lods
sub
fdivl
push
and
in
jne
sbb
fistps
jb
sbb
call
adcb
je
jo
mov
aaa
jno
lods
and
inc
adc
outsb
popa
rcr
test
clc
cltd
mov
inc
test
push
and
fdivr
sub
loopne
add
lock
stos
pop
aam
sbb
test
xor
lret
mov
fwait
test
xor
and
call
jge
jecxz
rorb
shll
pop
push
test
add
add
sbb
dec
adc
sbb
clc
loope
cltd
fnstcw
push
add
mov
dec
mov
push
jb
dec
sbb
and
jp
idivl
es
movsb
mov
pop
aaa
insb
dec
cmp
fs
sub
pop
mov
insl
mov
jbe
or
push
pusha
adc
es
es
cmp
sbb
cltd
and
cwtl
fs
inc
sub
inc
mov
push
fadd
jb
movsl
cli
movsl
daa
mov
movsb
inc
repz
shr
shlb
adc
decl
enter
movsb
add
movsb
sub
das
repnz
sbb
pop
sub
mov
popa
jge
and
xchg
test
in
sub
orl
aaa
push
mov
add
mov
add
or
aam
mov
and
int
xchg
jne
xor
mov
orb
xor
cmp
sub
sub
push
js
test
mov
or
ficompl
xchg
clc
xlat
jne
lcall
gs
push
cmpsb
js
xorb
mov
xchg
mov
imul
dec
in
mov
pop
push
sbb
das
mov
xor
mov
lock
fldt
call
adc
or
mov
inc
int3
sbb
mov
les
rcrb
in
and
ror
aam
push
sbb
loope
sub
stos
sub
in
pop
imul
sub
out
pop
pop
adc
push
xor
inc
jb
inc
ljmp
or
cmpsb
rorb
lods
movsb
int
push
pop
aas
out
mov
adc
xchg
dec
gs
sbb
inc
mov
mov
jl
rorb
ror
adc
lods
mov
insb
in
inc
lods
inc
pushf
cs
inc
int
mov
das
cmp
repnz
das
insb
sub
or
mov
inc
mov
xchg
mov
xchg
in
add
dec
rcrb
sbb
mov
and
stos
ret
or
ljmp
test
test
dec
rol
movsb
and
mov
push
inc
jnp
addb
jecxz
adc
fstl
fnstsw
mov
int3
mov
clc
or
mov
push
jecxz
or
loopne
mov
jecxz
movsl
aad
lcall
stos
mov
nop
add
test
mov
xor
in
adc
fcoml
stos
and
xor
pop
aad
xor
push
pop
sbb
daa
jmp
loope
imul
dec
xchg
icebp
push
notl
sub
enter
pop
adc
sbb
xchg
test
in
scas
sbb
in
int3
mov
dec
push
xchg
cmp
and
cmpsl
sbb
pop
xor
xchg
cwtl
mov
jns
xor
lahf
or
int3
rorb
sbb
push
js
adc
movsl
adc
adc
test
sarb
cld
pop
adc
shll
in
and
ja
adc
sub
subb
getsec
test
data16
test
sub
mov
pop
add
aaa
jg
mov
test
imulb
call
arpl
testl
jbe
lret
out
les
cmp
add
aam
pop
aad
rorb
jb
mov
aam
mov
shrl
out
mov
cltd
insb
fildll
arpl
pusha
mov
jg
mov
aad
jne
sub
jg
push
inc
rcrb
in
push
dec
pushf
push
cmp
scas
test
cmp
mov
mov
repz
add
dec
fdivrl
sbb
cmp
imul
xchg
xchg
mov
and
fsubl
sub
ret
popa
loop
vmovntpd
sbb
lahf
pop
pop
sbb
jnp
sbb
imul
orb
jo
cmp
movsb
and
and
push
cwtl
adc
jb
mov
jne
int3
adc
push
pushf
rcrb
nop
inc
push
movsb
insb
lods
fidivl
or
test
mov
fsubrl
dec
sbb
test
lods
daa
mov
mov
pushf
xchg
pop
xchg
bswap
xchg
xchg
xchg
xchg
enter
daa
daa
mov
test
lds
sub
or
sub
pop
pusha
aam
sbb
leave
aaa
sub
jnp
dec
es
cltd
pushf
pushf
sbb
subb
mov
mov
lret
inc
mov
push
shll
js
test
jmp
push
aam
out
push
jae
aam
sbb
sbb
and
mov
and
or
add
mov
sub
sbb
adc
sub
inc
push
popa
pop
push
inc
lret
orl
push
nop
mov
rcrl
enter
nop
test
dec
pop
lods
aam
mov
es
scas
mov
movsl
mov
repz
data16
add
inc
sbb
inc
and
cmp
mov
test
movsb
sbb
orb
jmp
sbb
mov
mov
scas
fwait
or
insb
push
pop
dec
inc
rolb
pop
and
mov
add
xor
or
loope
in
cmp
leave
imul
in
mov
lods
loopne
jmp
sbb
sub
pop
aam
push
addl
movsb
pop
cmp
inc
xor
pop
fisubl
cmp
cmp
dec
adc
imul
fs
and
push
pusha
mull
or
push
dec
mov
movsb
imul
or
jnp
sub
mov
and
sub
xchg
and
or
xor
in
inc
test
adc
pop
scas
sub
push
and
mov
add
mov
sub
leave
pop
inc
shrb
stos
inc
mov
in
stc
rolb
sbb
in
pop
pop
jnp
invd
shll
or
pop
aas
fwait
or
mov
fsubrs
or
shr
fs
push
inc
adc
or
jmp
fidivrl
test
dec
or
add
nop
mov
inc
or
cwtl
pop
xor
sarb
xchg
adc
mov
enter
rolb
mov
das
xchg
sbb
xor
orb
pushf
mov
mov
adc
orb
scas
shrb
xor
xor
stc
les
mov
mov
adc
imul
jl
fs
imul
or
es
pushf
xchg
ja
sub
xchg
rcrb
aas
xchg
pop
adc
mov
dec
jb
int3
pushf
mov
scas
popa
sub
inc
sub
aad
jo
leave
jle
sbb
subl
fwait
movsb
inc
imul
leave
xor
push
mov
sahf
mov
repnz
repnz
repz
and
scas
lods
sub
insl
lcall
das
shrb
pop
cwtl
das
and
rcrb
jl
mov
xchg
dec
push
nop
movsb
push
xchg
ds
mov
xchg
lods
pop
inc
pusha
mov
dec
or
stos
push
push
jo
jo
sbb
xor
mov
adcb
iret
or
jecxz
pop
dec
repnz
enter
dec
test
call
mov
insl
push
fwait
test
or
or
sub
repnz
imul
and
adc
insl
hlt
cltd
inc
xchg
sub
movsl
in
loop
repz
insl
mov
xor
in
sti
leave
and
add
fists
adc
add
leave
and
sub
mov
push
mov
movsb
les
bound
pop
clc
mov
jbe
scas
cltd
push
fwait
jo
add
icebp
sar
xor
or
or
jb
test
fmuls
jecxz
mov
popa
xor
xchg
in
popa
sub
jbe
in
enter
sub
sarl
jb
shll
push
roll
add
xor
inc
in
shrb
shrl
adc
ret
inc
pop
jle
pop
xor
sub
push
mov
jp
jg
cmp
cmp
mov
mov
mov
rcll
aas
out
and
add
nop
jmp
mov
add
xor
loope
fld1
pusha
add
xchg
sahf
and
imul
popa
das
lret
leave
nop
push
test
notl
ss
dec
std
into
push
cmp
inc
cmp
imul
dec
test
dec
push
jbe
and
sbb
push
lods
dec
jno
imul
inc
dec
pop
sbb
and
inc
es
pop
mov
adc
sub
inc
imul
arpl
notl
mov
movsl
push
aaa
xchg
adc
lcall
mov
test
insb
shrb
pop
adcl
fiaddl
in
pop
or
or
lods
negl
adc
cmp
in
mov
lods
imul
or
push
adc
adc
mov
scas
insl
aad
or
scas
or
xlat
aam
dec
pushf
sub
mov
dec
das
adc
lods
in
mov
mov
sbb
or
gs
fldt
dec
sarl
loopne
cmp
gs
mov
xor
mov
add
sub
aas
ret
in
sbb
xorl
cmp
pop
cmp
jno
dec
imul
movsb
mov
fs
sub
jb
mov
in
insl
mov
lods
jbe
push
popf
mov
sbb
jns
and
cli
inc
fidivrl
inc
lcall
fs
mov
shlb
scas
test
mov
jns
cwtl
add
pop
cmpsb
fldt
test
adc
nop
cmp
add
nop
popa
push
push
inc
mov
xchg
cs
mov
mov
loopne
pusha
cmp
cmp
or
sbb
cmp
dec
clc
mov
inc
ret
add
and
inc
adc
mov
lea
sbb
fidivs
add
xchg
mov
jg
js
ret
add
fdivr
mov
cmp
inc
int
mov
push
mov
xchg
mov
bound
shrb
or
je
lds
mov
ds
adc
sbb
ret
test
push
adc
ret
scas
pusha
inc
xchg
std
push
ret
fsubrs
test
leave
vunpckhps
test
lods
shrb
orb
pop
xor
adc
dec
cmpsb
pop
lods
adc
fwait
fs
icebp
movsb
pop
pop
inc
jno
jge
mov
and
mov
xchg
inc
lcall
test
adc
mov
aam
xchg
mov
seto
cmp
push
mov
pop
hlt
push
ja
orb
and
orl
or
dec
jmp
mov
test
adc
in
mov
pop
mov
lret
rcrb
jge
push
push
or
loope
je
fcoms
imul
cmp
aam
pushf
push
mov
jecxz
mov
mov
xor
inc
out
mov
sub
orl
fstpt
clc
fsub
pusha
mov
shll
addb
xchg
iret
and
and
sub
xor
xorb
sbb
push
dec
loopne
jo
mov
push
xchg
dec
in
daa
adc
insb
push
and
and
popf
leave
testb
pusha
pop
fcoml
iret
pop
push
and
jecxz
and
dec
inc
lret
icebp
push
movsb
or
sub
inc
push
fs
aam
rol
pop
fs
adc
push
sar
fwait
je
add
sbb
notb
movsb
in
mov
add
in
push
xchg
and
mov
jl
pop
push
or
scas
jmp
loope
push
jb
push
jno
pop
popf
sub
iret
mov
aaa
int3
test
in
jae
pop
xchg
mov
add
or
push
dec
repz
cltd
add
cmp
data16
fsubs
js
mov
rcl
dec
or
daa
xchg
iret
repz
arpl
add
fldcw
push
xchg
into
mov
cs
jge
ret
add
pop
filds
and
rolb
clc
jnp
mov
decl
xor
adc
mov
rcll
xchg
adc
or
cmp
sti
jg
rclb
cmpl
test
add
nop
add
into
pop
adc
test
out
fnstcw
and
daa
ds
shll
cmp
and
xchg
add
cli
pop
jbe
push
pop
out
xchg
mov
jge
aas
mov
sbb
add
pop
sub
xorb
bound
aam
jmp
insb
insb
outsl
arpl
imul
fbstp
xor
sub
popa
arpl
jne
jb
outsb
je
add
das
add
sarb
push
insl
adc
out
in
lcall
push
rolb
jb
js
je
jb
gs
add
mov
xor
jb
add
add
in
outsb
filds
push
jne
les
inc
and
jb
popf
loopne
mov
add
add
ja
addl
dec
add
inc
xor
inc
push
add
xor
push
pusha
aas
push
add
pop
dec
add
sub
push
insl
xchg
mul
loopne
je
je
and
jae
dec
fucomi
sti
sbb
dec
adc
insl
push
sub
subl
adc
jae
bound
jns
push
jne
imul
andl
xchg
aas
imul
ds
jp
outsl
or
insl
xchg
imull
dec
fs
fnstsw
cmpsl
lret
aas
and
outsl
jmp
jo
ja
ja
mov
lret
jo
jnp
stos
insl
sub
push
imul
scas
cmp
jne
add
push
data16
xor
sub
idivl
insb
jp
sub
insb
lcall
repz
addl
sbbl
arpl
or
cmpl
daa
dec
jbe
fistpll
fisubs
inc
xor
je
lds
loope
jnp
sbb
jo
arpl
mov
xchg
mov
mov
fbld
sbb
push
das
jb
mov
shll
aas
cs
pusha
xor
xor
movsb
daa
outsl
andl
xor
fidivrl
jg
push
sub
jno
in
call
aaa
xor
pop
push
jg
dec
iret
push
enter
ss
or
dec
fbstp
jne
jbe
jb
inc
mov
xchg
jne
pop
stos
nop
mov
jbe
xor
cmc
mov
js
das
rcrl
stos
popa
mov
push
adc
push
jo
insb
push
cmc
fistps
pop
mov
iret
arpl
inc
sbb
add
mov
insl
lret
imul
stos
fs
imul
shll
orb
popa
jnp
xor
jle
pop
cmpsl
outsl
pop
sub
das
xchg
rcll
cmp
pop
add
lds
pop
addr16
cmpsb
mov
mov
cmp
lock
popa
mov
mov
push
jg
scas
popw
inc
stos
pop
jecxz
push
push
ret
or
sbb
cmp
xor
sub
dec
addr16
in
mov
add
js
and
mov
enter
sub
in
enter
and
adc
sbb
mov
in
sbb
clc
sbb
das
inc
mov
and
enter
xchg
lahf
sbb
jp
popa
or
cmp
lcall
lock
add
add
jp
fwait
sbb
out
sub
push
push
mov
sbb
fcmovne
or
pop
ja
pop
mov
pop
mov
imul
arpl
fidivl
push
out
mov
rcrl
sbb
in
cmp
push
xor
jbe
negb
and
jns
add
push
dec
insb
xchg
das
das
and
adc
jbe
ja
or
dec
inc
and
push
sbb
or
dec
inc
jmp
stos
out
adc
je
dec
idivl
and
inc
mov
js
andl
mov
clc
adc
mov
daa
outsl
dec
xor
inc
mov
and
pop
pop
divl
iret
jns
out
out
pushf
fidivs
iret
and
ss
arpl
pop
js
cmp
push
and
outsl
xor
sub
pop
dec
mov
fwait
jbe
addr16
ds
imull
sbb
mov
clc
aaa
lods
mov
push
cmp
cmp
repz
sub
fs
dec
and
jns
mov
push
das
das
jns
push
dec
push
inc
aas
testb
insl
bound
dec
outsl
jbe
dec
arpl
popa
or
jo
sub
addr16
clc
mov
xor
insb
xchg
outsb
xchg
inc
jo
imul
popa
jb
jg
bound
inc
jae
fnstsw
popa
outsb
adc
xchg
into
mov
outsb
jns
jg
iret
fdivrl
addr16
popa
je
jb
xor
push
push
gs
sbb
into
fdecstp
jnp
outsl
outsb
and
jbe
pushf
jae
dec
inc
aas
add
jge
imul
or
mov
filds
fildll
push
push
mov
push
popa
insb
jne
inc
inc
mov
outsb
mov
adc
and
and
sub
ljmp
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
test
mov
dec
dec
push
push
mov
xor
pop
pop
pop
pop
pop
hlt
pusha
popa
sbb
jmp
fs
imul
jo
add
jbe
divb
jp
jl
jle
dec
adc
lcall
insb
adc
fs
pop
add
ret
mov
rorb
ljmp
lret
jno
icebp
repz
inc
mov
clc
ret
movsl
add
xorl
outsl
shrb
outsl
imul
xor
outsl
das
cmp
sarb
daa
push
add
jo
xor
popa
js
addl
test
dec
pop
sbb
out
shl
rol
sub
je
xchg
rcrb
push
imul
push
push
add
add
add
lds
push
pop
push
add
xor
addr16
inc
mov
hlt
and
add
pusha
push
mov
js
or
cmp
add
sti
mov
add
addb
add
xchg
adcb
test
add
orb
daa
push
cmpb
push
and
sub
jb
int3
push
jo
movsl
or
add
add
xchg
add
cld
push
push
outsb
imul
jo
and
xchg
or
mov
out
mov
and
sbb
add
lea
cs
nop
xchg
mov
xchg
mov
pop
fisubs
or
dec
cmpsl
rorl
int3
subb
popf
fsub
hlt
add
lods
mov
lods
push
in
add
mov
sub
pop
ljmp
push
push
inc
sub
dec
mov
pop
dec
dec
inc
dec
inc
adc
divl
lret
push
nop
fs
je
pop
loopne
mov
push
jae
dec
bound
je
outsb
cmp
jge
xor
push
jbe
dec
out
je
mov
imul
daa
in
aas
push
xchg
pop
lea
mov
outsl
js
push
decl
pop
inc
cs
and
insl
jo
imul
jo
and
and
daa
aaa
jle
loopne
insb
les
dec
imul
fcmovbe
shlb
ds
cmp
dec
fwait
xchg
fdiv
inc
jb
jns
daa
pop
and
ss
jns
mov
ljmp
in
and
addr16
add
cmp
outsb
jle
fwait
outsb
rcrb
jbe
mov
jo
or
outsl
mov
outsl
jb
and
xor
add
jbe
push
push
lahf
dec
xorl
imulb
push
jp
lret
out
cwtl
add
pushw
popl
andb
inc
imul
pusha
gs
push
daa
xchg
push
sarl
and
popa
push
outsb
mov
divb
mov
push
jae
mov
dec
or
cmp
add
hlt
clc
jo
sbb
outsb
gs
inc
pusha
adc
mov
das
mov
xchg
inc
push
push
push
push
dec
negl
dec
push
jne
repnz
push
jbe
enter
fbstp
mov
dec
jge
mov
jle
dec
ret
pop
xorb
imul
call
xor
jg
jae
and
xor
das
gs
sbb
pusha
rcll
outsb
bound
subl
push
or
pop
das
je
scas
idivb
daa
xchg
mov
mov
mov
cmp
out
mov
cmp
or
ds
and
sub
dec
imull
inc
jl
push
addr16
jle
cmpsb
or
sub
sub
add
repz
add
sub
pop
loope
negl
das
push
jb
xor
aaa
and
push
sbb
mov
mov
xchg
xchg
dec
pop
pop
jne
stos
addr16
push
lods
xor
sbb
sbb
jo
mov
push
gs
imul
or
frstor
dec
sbb
pop
or
sahf
inc
pop
sub
and
divl
sub
out
das
pusha
xchg
fs
cmp
xor
iret
repz
sbb
add
clc
adc
mov
fiadds
push
enter
sahf
out
fidivrs
test
sahf
out
pushf
cwtl
xchg
nop
mov
idivl
mov
ja
push
adc
push
je
into
cmp
jo
insb
pop
dec
aas
cmp
repz
dec
dec
inc
repz
repz
cmp
xor
int
cmp
sub
adc
add
sahf
out
sahf
call
push
dec
sub
call
rep
jl
push
dec
addr16
inc
xor
or
cld
sahf
out
sahf
in
shlb
ja
ja
stc
lock
int3
stc
xchg
stc
jnp
into
lock
xor
stc
and
fdivrp
inc
clc
jle
stos
inc
loope
mov
and
sub
in
push
lods
nop
adc
test
mov
lods
inc
addl
add
loopne
mov
ja
add
leave
sbb
dec
cmpsb
push
sbb
fadds
add
mov
inc
cmpsb
add
ja
push
lret
jbe
push
add
lea
or
in
and
push
pop
fbld
loope
das
jle
add
out
filds
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
rol
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
pop
or
loopne
loop
in
out
ljmp
std
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
fs
or
and
and
mov
test
sub
popa
stos
add
and
movsl
mov
gs
popa
data16
pop
sar
pop
add
xor
add
mov
add
add
push
les
dec
arpl
inc
insb
fs
jne
insl
aas
sbb
mov
mov
cmp
or
fstps
pushf
pcmpgtw
xor
add
dec
push
push
inc
fdivrp
xlat
dec
and
xor
push
dec
inc
dec
cmovns
add
jg
das
push
adc
sub
adc
orb
mov
mov
out
xor
jnp
inc
loop
mov
ds
pop
and
aas
fcoms
inc
pop
clc
lret
sbb
jb
mov
pop
arpl
cmp
jg
adc
jg
fstl
mov
and
cmp
dec
imul
inc
sahf
push
cmpsb
iret
lret
add
inc
mov
mov
shr
test
sub
fwait
ss
sbb
pop
jg
jns
ds
xor
incb
int3
dec
dec
xor
dec
popf
pxor
xor
mov
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
jg
insl
xor
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
dec
xchg
xchg
push
pop
xchg
sub
pop
mov
out
leave
ljmp
repz
adc
adc
xchg
dec
add
scas
lods
dec
dec
in
mov
xor
aas
mov
pop
pop
repnz
adc
xor
and
es
les
outsl
mov
fcompp
add
add
dec
xchg
lods
and
insb
dec
das
mov
xorb
dec
daa
int3
and
inc
jmp
clc
bswap
or
add
push
into
mov
or
xchg
mov
pop
cmovg
loopne
jbe
out
xchg
pop
and
xchg
nop
outsb
pop
fwait
imul
outsb
addr16
mov
push
jae
lret
push
push
jp
out
and
notb
xlat
scas
addl
or
test
arpl
bound
js
and
jg
mov
fs
pcmpeqw
mov
or
loopne
push
daa
fistpl
test
add
je
dec
mov
insb
pop
mov
movsl
add
mov
fucomi
push
xchg
lret
ret
sahf
xchg
ret
fldl
inc
jb
xor
xlat
ret
pop
sbb
sbb
add
or
jl
and
divl
jae
insl
ret
mov
fs
pop
outsb
popa
rcr
mov
and
jmp
push
jle
jg
sub
dec
mov
jnp
fimull
mov
clc
jno
rcll
jg
inc
ret
roll
mov
jnp
cmpsl
pop
adc
ret
ret
xor
inc
jecxz
and
cmpl
loope
shrl
cmpsb
sbb
jg
adc
jmp
cmpsl
js
sub
fnstenv
jmp
sarl
cwtl
arpl
jne
pop
mov
bound
cmpsl
out
cmp
adc
add
sub
idivl
pop
pop
mov
ret
push
adc
pop
jne
pmaxsw
imul
pop
out
mov
push
es
sti
cmp
divl
cmp
out
and
lds
mov
arpl
mov
dec
mov
aas
xchg
gs
push
scas
sbb
dec
jp
xchg
je
scas
aas
ja
pop
jecxz
scas
ds
jnp
mov
dec
fsubs
sbb
or
pop
inc
addr16
jne
lahf
out
xlat
addr16
je
sbb
call
mov
or
pop
arpl
add
gs
jne
stc
adc
mov
lret
xchg
adc
inc
pop
mov
pop
stos
pop
inc
pop
ret
out
sbb
add
or
mov
imul
add
adc
aas
arpl
push
cmpl
lret
sub
inc
sub
test
xlat
loope
fsubl
scas
or
testb
aas
mov
cmp
js
push
jecxz
addr16
push
sbb
adc
add
cmp
push
arpl
call
mov
arpl
mov
clc
mov
push
dec
popa
jae
adc
inc
jnp
out
nop
and
jo
cld
xor
sub
bound
ja
out
dec
pop
inc
push
nop
mov
dec
aaa
pop
mov
testl
jo
pop
mov
scas
ljmp
sub
shll
push
or
std
push
and
divl
je
cmp
add
dec
es
jle
pop
aas
dec
imul
sbb
call
lds
xchg
mov
pop
pop
or
arpl
rolb
mov
outsb
stos
pop
adc
shll
sub
rcrb
sbb
ja
rcr
and
jle
pop
dec
out
mov
bound
jae
jp
jnp
push
pop
mov
addr16
lret
and
icebp
mov
insb
pop
scas
outsl
inc
outsb
loop
jo
and
mov
or
pop
add
and
addl
add
aas
ja
push
jge
cs
xlat
pop
mov
ja
es
insl
mov
add
loop
mov
sbb
or
inc
sub
xchg
push
out
lcall
aas
lea
mov
fadds
jnp
ss
mov
inc
xor
inc
ret
out
loop
push
pop
je
dec
pop
out
jmp
pop
por
pop
sub
mov
sbbl
push
in
js
addr16
outsl
mov
ja
fneni(8087
shrl
inc
arpl
add
hlt
aas
pop
pop
push
pop
adc
testl
adc
mov
mov
mov
out
testb
jl
adc
adc
jl
imul
push
arpl
fstp
insl
cmp
and
addr16
bound
das
repz
mov
adc
out
jp
jl
cmp
bnd
xchg
jl
xor
ss
jecxz
scas
loopne
out
pop
jl
pop
jnp
js
sahf
icebp
sbb
jmp
es
mov
inc
mov
mov
imull
outsb
filds
mov
cs
pop
arpl
xor
and
lahf
les
xchg
imul
lret
jl
cmp
cmp
jo
bound
jns
lock
jnp
mov
adc
mov
aaa
mov
pop
sub
iret
imul
push
xchg
jl
bound
repnz
and
out
adc
push
cmp
jl
xor
aas
addr16
or
push
imul
lock
and
sub
add
in
sub
dec
xchg
add
push
fstpt
jge
cmpsl
aaa
sbb
loop
mov
pop
dec
jp
xor
or
push
jns
add
jae
inc
inc
sub
inc
adc
dec
adc
sbb
pop
lret
arpl
das
mov
fsubl
pop
pop
scas
stos
pop
stos
iret
xorl
pop
cmp
divw
push
xchg
insb
mov
push
or
popa
in
or
insb
xchg
imul
loop
lock
addr16
bound
push
add
sub
dec
daa
push
les
or
roll
in
int
les
sub
xor
aaa
inc
fdivrs
lret
add
xor
pop
pusha
mov
inc
inc
imul
fisubrs
inc
fucomi
inc
push
ljmp
ds
mov
jnp
jp
inc
ds
je
jns
in
in
cmp
sub
fisubs
dec
repz
ds
dec
push
push
mov
addr16
adc
dec
inc
adc
add
bound
aaa
pop
xchg
in
js
jg
xchg
push
mov
add
dec
ficoml
sbb
dec
sub
xor
in
insl
fdivp
push
pop
jge
mov
out
ficomps
dec
iret
out
mov
dec
sahf
adc
dec
iret
pop
or
dec
and
jg
movsl
rcrb
jae
out
ret
outsl
jo
jns
shlb
mov
movb
jge
cmpsb
push
and
arpl
add
lret
out
push
sub
jae
push
lcall
mov
add
les
outsb
arpl
push
gs
insl
pusha
jge
or
push
popa
jne
or
and
dec
bound
xor
loop
in
and
arpl
fisubrs
push
mov
fcmovu
repz
mov
or
cmp
cmp
rcrl
cmp
inc
jle
mov
or
out
insb
ss
popa
xchg
push
cwtl
push
int
dec
sbb
pop
pop
xor
jb
jno
je
cmp
outsl
inc
inc
sub
push
jo
jb
outsl
add
sahf
jb
jb
and
mov
ss
sbb
and
sti
sti
incb
jae
imul
pop
and
outsl
adc
mov
ds
and
outsb
je
ss
cmp
insl
orl
outsw
sub
jae
data16
aam
imul
or
jae
movsl
frstor
xor
xchg
aas
push
ljmp
pop
jne
inc
mov
imull
push
mov
lea
push
loop
xchg
adc
adc
pop
push
ja
push
verr
js
loopne
dec
fcoms
push
sub
xorl
and
add
mov
dec
aam
ss
and
push
cmp
cmpsl
sbb
jecxz
add
into
shlb
adc
add
js
outsb
xchg
add
mov
cmp
push
add
push
sbb
ja
pop
or
outsb
push
les
dec
call
or
test
cmp
sub
mov
push
stos
add
loop,pn
and
inc
fs
bound
sahf
in
jo
call
adc
sub
pop
mov
mov
shlb
loopne
arpl
rcll
sub
loopne
sub
es
addl
jnp
lods
adc
add
sahf
push
or
insb
test
sbb
or
ljmp
adc
mov
cli
test
lcall
orl
lods
mov
sti
dec
sub
outsb
adcb
outsl
shlb
pop
pop
repz
sbb
iret
inc
bound
adcl
and
pop
inc
add
fisubrl
push
shll
mov
add
pop
andb
mov
je
pop
mov
sbb
and
xor
mov
add
mov
stos
sub
aaa
frstor
xor
dec
sub
add
packssdw
imul
jp
xchg
imulb
inc
jp
arpl
sbb
add
dec
mov
fimuls
aaa
pop
bound
je
adc
xor
inc
ret
xchg
subl
clc
jb
fs
bound
add
dec
inc
fsts
imul
repz
and
iret
repz
push
andl
into
shr
dec
push
cltd
or
xchg
fsubs
lret
push
sub
or
mov
add
push
add
adc
jns
and
sub
xor
inc
mov
mov
insl
jo
out
mov
mov
popa
xchg
add
shrb
xor
shrb
xchg
pop
fwait
dec
mov
adc
pop
add
aaa
pop
sbb
lret
ss
int
str
add
inc
pop
add
incl
inc
fwait
adc
ja
andl
push
mov
mov
mov
sub
repz
cmpsb
inc
out
pop
cmpsl
mov
js
and
les
roll
rorl
aas
das
sub
verw
push
repnz
dec
mov
test
adc
sub
push
mov
mov
sti
scas
add
mov
cmc
ds
inc
outsl
mov
addr16
push
and
push
fsubrl
sbb
add
dec
inc
cmp
pop
daa
fbstp
mov
stos
pushl
dec
inc
mov
scas
mov
outsl
jo
dec
sbb
movsb
outsb
jge
addr16
outsl
dec
popf
push
and
lcall
and
daa
jmp
movsl
aaa
inc
xchg
push
jmp
jbe
imul
scas
adc
movsb
add
jo
pop
icebp
or
out
adc
sub
loope
shll
xlat
das
and
loope
add
cmpsl
push
cs
and
jp
push
stos
cmpsl
push
sahf
inc
imul
and
aaa
sub
mov
add
lock
je
inc
imul
ss
pop
imul
pop
and
pop
in
inc
repz
xchg
arpl
stos
imul
push
inc
or
imul
aas
xor
rcll
jae
push
add
mov
aaa
jnp
fisttps
and
cmp
outsl
dec
mov
pop
das
ret
mov
adc
das
shlb
pop
inc
push
in
pop
ret
and
xchg
cmp
je
push
push
roll
and
fstpt
outsl
ret
add
or
ja
out
imul
mov
and
scas
and
loop
jp
xchg
ds
mov
xchg
xlat
mov
xor
pop
jmp
mov
mov
loope
andl
pop
loope
loop
push
xchg
popf
fimuls
out
shl
daa
lock
push
mov
jbe
pop
jo
arpl
pop
pop
or
mov
inc
push
pop
sbb
push
or
stos
jnp
jb
xlat
pop
push
fisubs
jno
push
inc
inc
cmp
pop
daa
jg
dec
xor
add
loop
adc
fbld
jo
cmp
xor
je
imul
aas
xor
in
cli
push
push
push
sub
es
jb
push
cmp
push
sbb
pop
daa
sub
xor
push
les
or
pop
xlat
sbb
ret
imul
jmp
dec
outsb
mov
insb
shrl
dec
iret
mov
cmpsb
adc
test
adc
and
mov
add
mov
stos
inc
mov
stos
xchg
pop
inc
and
cmpsl
jle
jnp
loopne
push
arpl
imul
push
fs
pop
mov
cmp
movsl
dec
push
pop
mov
jo
push
inc
mov
sbb
daa
sub
mov
xchg
sub
pop
xlat
mov
aas
das
outsl
push
fwait
mov
daa
add
cmp
ss
add
or
mov
mov
mov
scas
push
xor
or
das
pusha
stos
adcl
sub
mov
xor
loopne
dec
das
outsb
push
xorb
insl
lret
push
sbb
orl
popa
xchg
decl
or
add
or
pop
dec
cmp
test
mov
mov
push
cs
mov
dec
rclb
adc
test
inc
cwtl
adc
cmp
inc
push
cmp
lods
mov
ja
bound
insb
adc
jmp
xchg
arpl
out
pop
xchg
es
xor
addr16
dec
aaa
adc
sub
xchg
dec
sub
inc
in
loope
mov
orl
sub
fsubrs
mov
mov
rsm
fcomps
jb
mov
inc
mov
mov
pop
minps
aas
push
adcl
rcrl
jle
dec
mov
jmp
pop
pop
jecxz
insl
repz
push
mov
mov
daa
jo
stos
scas
add
mull
ret
cs
pop
push
mov
jp
fdivs
jp
dec
add
bound
bound
sbb
adc
lret
pop
scas
sub
and
inc
in
sub
pop
add
push
daa
ja
pop
aam
pop
cmp
or
or
fadds
clc
dec
data16
addr16
stc
cs
cld
sbb
mov
aas
push
push
je
rep
mov
push
add
aas
jns
negl
push
pop
mov
mov
mov
cmp
addl
sbb
and
mov
push
and
es
jmp
xchg
mov
adc
dec
inc
push
jbe
push
pop
dec
or
dec
sbb
xchg
xchg
arpl
jecxz
inc
pop
mov
push
sbb
jmp
scas
mov
jo
jo
and
push
fbstp
movsl
push
adcl
push
ljmp
es
adc
data16
js
sbb
or
add
test
mov
aas
mov
adc
mov
mov
daa
dec
jo
out
cmp
pop
icebp
mov
lea
bound
imul
mov
sub
add
jo
and
sti
bound
jecxz
out
sbb
cmpsl
iret
aad
and
xor
stos
mov
lret
xor
sbb
or
iret
pop
sub
imul
pop
fcomi
mov
arpl
das
or
push
push
pop
xlat
and
xchg
xor
jmp
sbb
mov
xor
jg
and
pop
push
mov
fidivrs
sub
lahf
push
add
or
push
out
xchg
pand
in
cmpb
pusha
mov
addl
icebp
add
jae
xor
fs
rcrl
das
outsb
sbb
push
pop
aaa
lahf
add
sahf
nop
push
jg
insl
dec
cwtl
or
pop
sbb
mov
ljmp
xor
jmp
in
lds
push
push
insl
arpl
bound
roll
fsub
lea
sarb
xor
inc
mov
push
jb
cmp
in
dec
scas
xchg
stos
pushf
dec
push
jb
pushf
scas
cld
lods
dec
and
lods
mov
sub
push
leave
test
cmp
cmpsl
xchg
stos
in
and
aam
xchg
pop
and
rcll
test
test
test
inc
pop
and
mov
pop
cmpsb
clc
inc
cmpsb
movsb
push
push
leave
push
push
add
xchg
pop
and
in
jnp
add
movsb
mov
push
lods
xchg
pusha
fbld
mov
stos
push
leave
test
mov
rolb
xlat
push
jb
jl
mov
and
mov
aad
lahf
fmuls
mov
and
cwtl
fistps
dec
popf
popf
test
imul
es
test
add
inc
inc
mov
pop
sub
push
loop
jg
das
js
sub
xor
inc
loop
pop
pop
mov
dec
mov
je
pop
inc
dec
push
inc
fisubl
jmp
mov
add
push
inc
mov
dec
inc
inc
xchg
dec
pop
mov
push
inc
shrl
sub
insl
add
mov
outsb
inc
or
sbb
mov
xor
push
or
dec
sbb
fistps
mov
das
dec
inc
fldt
stos
adcl
inc
push
xor
mov
or
cvtps2pi
adcl
inc
push
inc
xlat
and
out
fisttpll
xchg
mov
rcl
adcb
xchg
add
sti
fs
sbb
push
scas
fisubl
int3
aas
xchg
push
mov
fists
fmuls
inc
addl
fiaddl
pop
pop
inc
sub
aaa
and
pop
adc
push
jb
xor
jp
cmp
jmp
xchg
test
sbb
insl
push
ljmp
bound
mov
out
aaa
fucomip
sub
aaa
lods
sbb
mov
orb
test
sbb
outsl
fmuls
add
lahf
test
sti
push
aas
add
gs
lods
adc
mov
pop
lods
mov
or
jbe
mov
jg
aaa
add
in
xor
mov
or
cmc
out
jp
inc
pop
push
sbb
xchg
nop
pop
ret
cli
cmp
push
push
outsl
lcall
inc
shrb
fmuls
and
add
bound
lock
add
popa
add
sbb
xor
mov
in
pop
cmp
pop
inc
inc
pop
sbb
loopne
pusha
sub
jnp
pop
mov
add
or
pop
sub
adc
and
into
push
xchg
add
shlb
es
and
dec
lods
loope
xchg
aas
fmull
xor
pop
jne
test
mov
adc
out
test
je
or
negb
push
cs
sub
out
sbb
push
add
ret
dec
sti
into
mov
xchg
mov
inc
add
push
pop
les
rcrb
jnp
ss
cmp
int3
fimuls
imul
dec
js
icebp
into
mov
cmovs
mov
xchg
imul
push
mov
add
sub
and
mov
adc
shlb
adcl
add
push
or
xor
adc
push
push
out
sahf
out
inc
and
xorb
loopne
es
push
add
cmp
xchg
xchg
push
jg
nop
lods
mov
push
daa
push
ljmp
dec
dec
mov
sbb
loopne,pn
add
xchg
loopne
xchg
jb
add
add
push
inc
pop
ret
jbe
xchg
imul
push
jbe
mov
ret
ljmp
dec
pop
xlat
pop
mov
inc
push
pop
push
jo
push
adc
dec
movsl
aaa
scas
xor
movb
inc
adc
das
into
jl
mov
out
btc
dec
shr
roll
dec
movzbl
add
rol
cmpsb
add
cmp
adc
pop
and
es
xor
or
rorl
aam
adc
push
jns
nop
mov
mov
add
sub
add
add
jg
test
fwait
xchg
adcl
fimull
fistpll
ret
push
bound
pop
adc
loope
push
adc
mov
aas
fwait
xchg
sbb
mov
fistl
clc
lea
xorl
clc
push
sub
stos
push
sbb
loop
sub
out
mov
push
sahf
push
cs
cmp
xor
out
mov
aaa
out
es
add
inc
cmp
adc
insl
xchg
jmp
sbb
loop
xchg
inc
xchg
pop
mov
jns
xor
jae
fs
paddsw
dec
sub
into
xor
jbe
jmp
jecxz
pop
out
shrb
out
lds
or
inc
or
or
jle
js
xor
inc
inc
js
stc
cmp
xchg
mov
into
dec
or
inc
push
jbe
fdivrp
bnd
ss
push
dec
mov
icebp
mov
xor
xor
js
daa
ret
xor
cs
lret
jno
xchg
outsb
jb
loop
push
faddp
loop
cmpsb
xchg
ja
retw
xlat
dec
pop
sbbl
data16
cmp
fidivs
jp
sarb
adc
mov
arpl
fs
addw
cmp
xchg
dec
dec
daa
jns
mov
push
mov
cs
fucomip
xchg
shlb
packssdw
inc
pop
pop
out
fidivrs
mov
push
es
ss
outsb
pop
clc
push
mov
daa
dec
jb
das
inc
insb
or
es
das
add
jge
sarl
jns
inc
pop
push
sysexit
loopne
jge
mov
cs
sahf
push
out
loope
mov
push
neg
imul
mov
push
scas
push
insl
mov
out
mov
ja
xor
push
jp,pt
ficomps
push
jp
ds
shl
jnp
inc
scas
jg
dec
das
xor
loop
xchg
jp
pop
outsl
js
push
out
pop
outsl
dec
xor
push
xor
into
xor
mov
imul
add
shll
jo
sub
aaa
push
test
popa
mov
sbb
inc
mov
xchg
fimull
lahf
pop
fldl
fwait
jg
movsl
push
pop
sub
jnp
orl
sub
add
xor
xor
push
nop
add
fistl
push
xor
mov
and
add
imul
pop
imul
cwtl
lds
or
roll
xchg
mov
dec
fcomps
adc
popf
sti
mov
pop
fsubs
je
lret
dec
pushf
les
xchg
xchg
and
rcl
aam
sti
test
cmp
arpl
sbbl
pop
and
adc
scas
repz
popw
fstpt
inc
insb
add
push
push
mov
daa
push
sub
inc
inc
mov
fwait
jmp
adc
push
dec
insl
mov
pop
sbb
mov
add
pop
adc
mov
or
push
addr16
xorl
mov
mov
rolb
cli
xchg
into
insb
outsl
popa
fs
outsl
jl
sub
addb
adc
add
fwait
out
mov
sub
cmpsl
addb
xchg
inc
shrb
movsb
sbb
lds
movsb
mulb
out
and
add
dec
dec
pop
sub
addr16
imul
mov
shlb
mov
pop
pop
pop
ja
repz
outsl
in
cwtl
ja
pop
mov
push
xor
idivb
mov
mov
or
pop
xchg
out
jae
push
inc
xchg
add
repnz
mov
pop
jo
mov
push
pop
cmp
jne
jo
push
cli
cmpsb
repnz
xor
pop
push
or
pop
ja
xor
xor
push
adc
movsl
or
inc
into
adc
inc
pop
mov
xor
or
jg
adc
je
jae
sbb
dec
adc
xor
push
pop
mov
lods
add
fcoms
cs
iret
das
push
sub
pop
inc
sbb
outsl
add
cltd
js
lock
lahf
jmp
xlat
jmp
fildll
pop
inc
jl
outsl
cmpsl
add
addl
adc
sbb
sbbl
dec
movsl
es
scas
lods
push
and
cmp
mov
insl
das
push
inc
stos
or
and
and
sti
dec
cmp
outsl
popa
fldt
shl
or
iret
mov
and
cmp
xchg
pop
out
loop
inc
pop
and
adc
mov
iret
jecxz
fst
inc
mov
dec
stos
push
xchg
push
scas
add
lock
inc
push
insb
inc
iret
fbld
dec
insb
push
xchg
dec
push
dec
arpl
jae
daa
jbe
shrb
dec
imul
outsl
andps
cmp
das
repz
lods
add
xlat
aaa
mov
push
fs
cmp
inc
push
mov
add
sub
dec
mov
dec
cmp
adcb
push
xlat
popl
fiadds
dec
pop
sbb
add
das
mov
mov
mov
inc
aas
addb
push
not
outsb
imul
sbb
imul
sub
mov
add
into
cwtl
xchg
pusha
pop
into
ficomps
push
in
outsb
push
shll
orl
xchg
das
mov
jmp
mov
dec
mov
add
sbb
adc
adc
jmp
shlb
mov
mov
ljmp
aaa
pop
sbb
ljmp
mov
mov
mov
lods
pop
dec
jmp
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
mov
fnstcw
sub
mov
sbb
in
pop
enter
ds
pop
sbb
xor
mov
add
lahf
jo
fsubs
sbb
mov
xor
dec
xchg
jecxz
dec
push
mov
pop
add
adc
adc
jb
and
lahf
in
stos
arpl
xchg
push
in
or
addr16
pop
jl
insl
enter
inc
lods
fists
lods
daa
arpl
jo
ret
cmpsl
and
push
bound
push
or
dec
pop
and
dec
dec
jb
xchg
cmp
sub
sbb
leave
and
cld
xor
xchg
xchg
in
xor
cmp
inc
pop
xor
dec
mov
addb
dec
mov
add
popf
rolb
xor
or
js
adc
decl
pusha
mov
jae
xchg
shr
cmc
cmp
xchg
arpl
pop
jnp
pop
imul
cs
lods
jnp
cmp
ss
cmp
sub
adc
filds
ja
inc
push
push
inc
fsubrp
add
addr16
addl
cmp
xor
aad
clc
or
inc
popa
dec
add
lock
daa
dec
inc
jmp
xchg
imul
cmp
popa
outsb
imul
add
sbb
das
xchg
pop
mov
inc
add
mov
daa
xor
pop
push
push
cmp
fisttpl
xor
cmp
rolb
cmp
pop
bound
mov
xlat
push
shl
or
push
jp
xorb
inc
imul
aaa
out
adc
loopne
iret
pop
stos
adc
bndstx
adc
inc
inc
dec
dec
fbstp
push
mov
aam
das
popa
inc
jne
andl
xchg
adc
sahf
push
es
pushw
add
cmp
mov
out
inc
mov
add
pop
jb
pop
scas
popa
mov
fimull
jnp
repz
add
mov
mov
sbb
mov
stos
cmpsb
je
add
jbe
outsl
cmc
xchg
dec
xor
push
lret
outsl
orb
aas
pusha
rolb
cmpsl
jl
fisttpl
cs
adc
in
enter
es
hlt
subl
push
inc
jecxz
pop
inc
outsl
insb
mov
sbb
fpatan
addr16
xchg
and
push
pop
pop
bound
push
push
test
sbb
xchg
int3
testl
into
and
add
push
dec
fsubrs
xchg
jbe
es
loop
jb
insl
pop
insb
fwait
ja
add
fadds
jo
mov
inc
jne
fnsave
in
loopne
daa
aaa
fstl
sar
imul
jae
es
out
in
add
push
pop
mov
jnp
push
jl
push
jne
sti
mov
cmpsb
cmp
mov
mov
jbe
mov
sarl
sbb
out
push
enter
addr16
fsubrl
adc
push
pop
or
fistl
or
cmp
dec
movsl
ret
daa
xchg
mov
cmp
ret
repnz
ss
mov
adcb
jnp
mov
add
mov
inc
out
inc
dec
inc
jo
test
lcall
fiadds
push
jbe
pop
inc
xchg
mul
lock
repz
incl
cld
jno
pop
inc
jmp
pop
jecxz
iret
out
push
lahf
xor
mov
ss
push
ja
cmp
negl
mov
push
int
mov
negl
es
in
xchg
pop
push
inc
inc
add
pop
addr16
roll
insl
dec
adc
push
xor
xor
push
fs
mov
cmp
out
stc
xor
ret
dec
sti
js
push
xor
sti
out
sahf
push
cmp
loope
outsb
ret
das
sahf
out
insb
aaa
cmp
push
jnp
cmp
out
iret
repnz
pop
addr16
repz
jge
cmp
cmp
repz
repz
pop
jg
push
into
sti
into
or
daa
cwtl
xor
mov
out
clc
mov
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
fcomps
imul
pop
mov
popa
push
or
scas
int
mov
leave
loop
and
mov
pop
mov
fsubs
out
adc
aas
in
mov
hlt
pop
sbb
enter
adc
cld
mov
xchg
or
adc
daa
dec
add
or
in
pop
add
xchg
push
test
insb
aaa
dec
orl
sub
stc
xorb
leave
cld
mov
add
adcb
repnz
lock
leave
shl
clc
adc
lcall
push
push
js
xor
imul
inc
stos
lods
xchg
cmp
rolb
add
aam
mov
xchg
aam
outsb
lods
fildll
adc
jo
add
adc
add
push
dec
subl
les
popa
je
push
sbb
and
adc
mov
xor
cmp
fmulp
push
xchg
sysret
push
ficoml
imul
mov
lret
es
movsb
sub
stos
push
sub
dec
lea
inc
or
push
add
xor
mov
loope
push
out
frstor
movsl
call
in
adc
ret
xor
or
rcrb
pop
outsl
dec
cli
and
mov
push
jo
inc
adc
xor
sbb
cmp
pusha
jno
outsb
insl
xchg
pop
sbb
stos
jmp
iret
dec
pop
mov
push
sbb
aaa
fs
out
mov
ret
xchg
idivl
mov
and
jbe
add
xchg
push
in
sub
push
imul
dec
mov
les
insl
outsl
dec
std
aas
jno
incl
addr16
jo
xor
fcoml
inc
push
mov
imul
jnp
test
inc
xchg
fisttps
subb
and
xor
dec
and
inc
das
jb
lock
pop
pop
or
pop
pop
sub
push
or
xor
jns
pop
lahf
pop
xlat
aam
loope
sbb
or
insl
dec
aas
sbb
ds
mov
push
loopne
pop
out
iret
inc
add
adc
sbb
outsb
xor
or
add
cmpsl
mov
xchg
inc
xor
cwtl
add
out
inc
insb
pop
pop
addr16
mov
mov
aam
jae
fs
adc
inc
dec
mov
popa
lods
or
cmp
jnp
dec
pop
emms
pshufw
shlb
xchg
rolb
mov
fildl
sub
pop
pop
mov
jbe
pandn
sub
push
aaa
imul
mov
aam
add
xchg
das
testl
iret
xchg
and
popa
das
push
xor
push
pop
sbb
mov
push
jg
das
lods
sub
xchg
lds
or
xchg
inc
dec
add
xor
push
pop
inc
jecxz
push
sub
pop
jecxz
cmp
push
add
add
mov
push
inc
mov
and
and
xor
dec
aas
add
or
nopl
add
loopne
pusha
jo
xrelease
stos
ret
incl
cs
aas
cwtl
sub
push
push
arpl
loope
add
jge
adc
pop
or
or
outsl
xlat
inc
lds
add
pop
loop
nop
ss
outsl
jmp
rcl
ja
add
mov
loope
cli
jg
pop
stos
mov
push
inc
mov
jns
mov
or
fwait
mov
cmp
xlat
jb
sbb
cmp
pop
fimull
push
sti
add
into
pslld
xor
sbb
scas
and
addr16
pop
adc
loop
xchg
inc
pop
lahf
out
fs
insb
inc
dec
inc
xor
or
add
pop
aad
inc
cmpsl
push
call
add
pop
mov
loopnew
add
inc
iret
pop
pop
mov
xchg
cmp
inc
or
xor
test
lods
nop
es
inc
jecxz
xchg
adc
popa
sbb
xor
lret
je
xlat
or
es
insl
jo
je
add
addr16
ds
jo
jae
daa
pop
jno
outsl
xor
push
loopne
cwtl
test
rcll
les
pop
call
sbb
sub
cmpsb
jns
je
jne
test
pusha
or
jmp
push
add
mov
das
dec
out
push
push
mov
addr16
mov
mov
dec
pop
inc
addl
les
adc
imul
push
and
lea
gs
mov
jp
daa
inc
sti
inc
dec
pop
test
jecxz
das
shlb
into
push
neg
bound
sub
outsl
popa
adcb
sbb
subb
push
movsl
inc
push
mov
adc
pop
push
mov
sbb
push
xchg
push
xchg
pop
lock
jmp
dec
lods
and
push
dec
cmpsl
adc
adc
pop
pop
jmp
fwait
add
lds
adc
pmuludq
inc
fsubl
aam
jns
jb
rclb
jo
mov
adcl
and
or
xlat
insb
sti
mov
fsubr
inc
outsl
outsb
or
aaa
push
dec
push
call
pop
insb
jp
das
daa
test
or
pop
cmpsb
jb
test
push
mov
push
pop
add
push
cmp
ja
pop
outsl
inc
push
dec
inc
dec
push
xchg
add
adc
nop
add
fidivrl
sub
movl
add
adcb
and
inc
push
add
fstl
ja
jnp
and
es
push
xor
fidivl
rorb
push
das
sbb
imul
or
daa
daa
lcall
and
push
pop
inc
inc
inc
push
inc
cmp
pop
pop
or
aas
js
insb
cwtl
mov
sbb
push
and
outsb
les
adc
insb
lods
adc
gs
add
inc
sbb
ds
push
or
add
sbb
rcrb
mov
sub
push
std
out
jp
sbb
adc
adc
cmpb
mov
repz
push
add
xor
pop
lahf
outsb
repz
fidivrs
loope
sbb
inc
mov
lock
out
lahf
add
rolw
push
pop
sub
push
push
sub
subb
jle
and
pop
cmp
sub
scas
push
test
xchg
xchg
add
cmp
clc
fwait
aaa
add
pop
lea
ss
fnstsw
pop
outsl
xlat
cmp
jbe
or
cmpsl
push
inc
mov
pop
or
mov
pop
xchg
mov
test
fimull
rorl
pop
or
jmp
or
jb
fildl
adc
ja
out
push
imul
inc
outsl
arpl
popa
push
testb
outsl
and
and
arpl
mov
into
sub
je
push
inc
fsubrl
xchg
je
and
je
mov
popa
stos
orl
nop
dec
cs
inc
fcompl
and
xor
and
mov
jo
mov
dec
inc
dec
sbb
xor
and
push
push
pop
jbe
add
outsl
fs
gs
jo
or
mov
mov
push
andl
jne
imul
das
dec
pop
adc
add
or
addr16
and
push
mov
pop
gs
inc
and
adc
lock
lock
jns,pn
insb
mov
mov
into
aaa
pop
sbb
insl
xor
pop
pop
jnp
shlb
gs
mov
adc
or
inc
pmulhuw
sbb
inc
cmovo
idivb
cmpb
aas
nop
jo
mov
jbe
maxps
loopne
dec
mov
sti
push
push
or
xor
incl
pop
xchg
sbb
mov
mov
add
push
sbbb
sbb
test
mov
add
jnp
pusha
mov
or
in
inc
hlt
push
dec
mov
pop
xchg
push
xchg
sbb
add
in
pop
xchg
cmp
imul
rcrb
cmp
cmp
daa
xchg
les
xchg
mov
inc
daa
insl
jns
fwait
outsl
inc
xchg
xchg
mov
lods
pop
xchg
outsl
call
and
sahf
out
pusha
pushf
aam
addr16
pop
push
scas
fists
inc
test
fnstenv
cmp
add
adc
insb
mov
mov
jl
movsb
mov
xor
insl
xor
jg
enter
and
cmpsb
lock
xchg
pop
or
push
push
or
lock
add
or
lahf
push
pop
mov
cmpsl
pop
jns
xorb
mov
enter
cwtl
rolb
xchg
mov
repnz
dec
aam
lock
dec
aam
out
fidivrs
and
xchg
mov
outsl
xchg
movsb
jns,pn
in
jl
movsb
sahf
or
ficoms
enter
mov
add
mov
popf
nop
add
inc
cmpsb
insl
or
dec
fisubl
js
daa
mov
or
dec
daa
push
xchg
mov
xchg
mov
out
es
add
loopne
cltd
push
lcall
fcomps
loopne
cmp
lahf
lcall
mov
mov
xchg
outsb
jl
outsl
push
lock
adc
scas
jbe
movsl
and
pop
enter
mov
cld
fwait
add
dec
enter
in
cwtl
inc
jnp
inc
lock
fwait
daa
mov
cmp
jne
negl
imul
sbb
out
setle
jns
xchg
shl
call
aas
rorb
sbb
bound
addr16
mov
jns
xchg
pushf
jo
jl
pop
movsb
and
aam
iret
test
mov
adc
lods
cltd
and
jns
in
popf
add
inc
adc
cld
popf
sub
data16
add
es
add
hlt
jnp
in
jo
je
mov
mov
je
cwtl
insb
fimuls
int3
push
fdivl
testb
lahf
mov
rcrb
sub
adc
lds
pop
repnz
jl
or
xchg
dec
lahf
pop
jns
in
xor
mov
or
in
fwait
nop
out
cld
lahf
mov
sbbl
jnp
dec
lahf
pop
insb
sub
ja
enter
mov
jb
pop
mov
dec
cmp
pop
lahf
cld
cmpsb
mov
fldcw
jge
add
fwait
data16
cmp
mov
cmpsl
jns
imul
test
movsb
mov
pop
enter
fsubs
xchg
mov
in
mov
cmp
idivb
cmpsl
mov
dec
and
mov
out
pop
enter
mov
jb
push
cmpsl
mov
ss
repnz
in
in
mov
jns
in
in
mov
inc
pushf
and
cmpsl
mov
rcr
lods
cwtl
push
cmpsl
enter
jg
dec
mov
fs
pushf
mov
cmp
sahf
or
and
out
lock
add
ljmp
push
lahf
mov
add
mov
and
test
xchg
movsb
pop
enter
test
test
repnz
hlt
cmp
pop
enter
and
mov
movsb
xor
inc
lahf
adc
dec
lahf
ja
push
test
bnd
xchg
bound
pop
enter
mov
les
cltd
pusha
sub
sarl
and
sub
cmp
rclb
int3
push
push
cmpsl
jg
pop
repnz
jb
sub
addr16
cmpsl
insb
out
sahf
adc
cwtl
movsl
cmpsb
in
push
cmpsl
rorb
inc
inc
cmpsb
adc
and
mov
hlt
push
cmp
cmpsl
push
cmp
mov
cmpsl
insb
push
cmp
insb
out
pop
nop
xchg
ja
movsb
mov
enter
add
mov
lds
and
mov
cmpsl
jg
lahf
jg
icebp
pop
lods
pusha
cmpsl
jo
aas
pop
enter
cmpsl
pusha
pop
push
cmp
repnz
fdivrs
pop
jb
sub
cmpsl
mov
in
popf
nop
adc
sbb
sub
nop
aas
ja
repnz
enter
push
pop
rcrb
add
lock
test
push
int3
dec
mov
or
add
test
xchg
fisubrl
lahf
cld
fisttpll
fiadds
lahf
pop
orl
mov
jg
js
or
lahf
js
cmp
movsb
and
mov
pop
adc
pop
jb
pusha
push
inc
lock
xchg
je
js
inc
inc
lahf
push
shll
ja
lock
cmp
inc
movsb
mov
push
mov
repz
sbb
clc
enter
lahf
dec
add
pop
inc
jbe
stos
dec
push
add
movsl
scas
pop
call
adc
mov
cmpsl
jo
inc
inc
jo
insl
sahf
pushf
jo
in
and
cmp
sub
pushf
xchg
and
add
push
inc
fsubrl
push
ja
jbe
sahf
inc
notb
adc
xlat
ja
iret
mov
inc
lods
nop
movsb
stos
mov
fbld
xorb
and
ficompl
insb
cs
pusha
lods
and
mov
push
dec
das
push
test
dec
xchg
mov
jo
js
sahf
mov
sub
js
in
inc
mov
add
sbb
inc
mov
enter
scas
das
inc
jo
sub
in
inc
ja
and
imul
lea
mov
push
add
insb
inc
inc
rolb
pop
rcrb
pop
enter
adc
enter
and
xor
shlb
mov
pop
enter
mov
enter
mov
pop
and
repnz
test
and
inc
testb
lahf
in
out
fnsave
lahf
pusha
jb
ficoms
iret
test
inc
mov
jb
inc
mov
je
divl
mov
sub
cmp
dec
sub
jbe
arpl
aas
loopne
nop
or
mov
push
inc
ja
adc
mov
cmp
push
and
pusha
xchg
outsl
add
push
dec
jmp
pop
mov
cs
add
jo
in
adc
sarb
js
popl
xchg
movsb
loopne
es
sbb
mov
push
sbb
and
addr16
daa
sbb
ja
pop
push
pushf
push
scas
pop
in
test
xchg
addr16
lods
lea
cltd
or
daa
mov
mov
jnp
mov
enter
js
ss
dec
jo
mov
pushl
cmpl
pop
outsb
insb
push
dec
dec
dec
xchg
pop
push
jns
data16
lods
xlat
xchg
out
xchg
ss
pop
popf
nop
ja
xchg
or
adc
adc
sbb
inc
sbb
pop
in
add
inc
out
lahf
ss
fldl
clc
mov
pop
leave
xchg
push
dec
inc
inc
xchg
pop
leave
xchg
cmp
xchg
pop
leave
xor
pop
leave
xchg
pop
and
jo
scas
push
pop
aaa
add
fidivs
mov
lock
mov
dec
mov
les
sbb
pop
out
cmp
mov
mov
ja
pusha
inc
xchg
jge
idivl
mov
mov
out
mov
sarb
mov
loopne
add
pushf
scas
fsubs
lock
es
inc
mov
mov
mov
inc
add
and
and
dec
add
jl
add
or
out
sahf
out
hlt
js
out
add
enter
add
push
enter
ja
inc
aad
pushl
jo
adcl
enter
and
aaa
add
enter
push
inc
in
cmp
lods
pusha
inc
inc
mov
ud1
add
in
inc
filds
inc
dec
mov
pop
enter
pop
or
jl
je
enter
outsl
cmp
out
xchg
mov
cmp
inc
sub
aam
dec
sub
scas
add
enter
xor
xor
xchg
sahf
and
fbstp
lods
aas
popf
or
push
enter
push
pushf
fs
scas
add
or
outsb
nop
xchg
push
out
inc
xor
cmp
xor
mov
ljmp
mov
sub
xchg
je
mov
outsl
sub
int3
cmpsb
pop
cmpb
aaa
mov
fcmovbe
jns
clc
inc
aaa
mov
mov
les
out
enter
lahf
mov
mov
adc
jns
add
mov
aad
jle
daa
nop
sub
rolb
out
dec
adc
lods
ja
mov
add
mov
add
and
dec
aaa
and
add
cmp
lcall
call
jbe
pop
scas
outsl
add
outsb
test
sub
out
cmp
xchg
push
adc
sub
daa
add
fdivrs
dec
scas
push
xchg
jl
mov
push
mov
outsl
mov
incl
pop
push
push
pop
addr16
push
jb
ss
testb
out
test
repz
and
pop
jg
ror
fdivs
push
xchg
jg
cmp
and
scas
jne
adc
clc
add
xchg
mov
dec
in
jecxz
mov
aaa
lds
ja
jmp
sbb
divl
cmp
enter
outsb
shlb
lock
push
push
out
pop
stos
cmp
mov
aaa
or
and
hlt
bound
dec
push
mov
lock
sbb
ret
xchg
fmuls
and
jo
andb
scas
bound
and
and
fcoml
adc
add
clc
or
dec
mov
push
stos
sub
ret
or
test
dec
push
ret
xchg
pushf
les
push
mov
lds
addb
pushf
pop
ret
adc
xchg
mov
outsl
and
inc
ds
dec
add
sbb
push
scas
ret
pusha
push
call
je
mov
xchg
mov
mov
addr16
aaa
mov
test
add
jno
cmpsb
mov
les
js
mov
les
scas
mov
cld
xchg
dec
jnp
jle
mov
fwait
je
pop
jg
mov
les
les
sbb
jg
lock
add
dec
dec
lds
leave
rcr
and
sub
add
push
enter
aaa
mov
inc
nop
push
pushf
xchg
imul
aaa
lds
pop
call
push
xabort
push
sub
xor
add
adc
aad
inc
xchg
push
push
xchg
adc
sbb
pop
repnz
iret
mov
addr16
loopne
mov
adc
daa
out
es
push
jb
xchg
sbb
add
das
and
aas
push
sub
push
jno
pop
movsb
push
push
push
push
enter
sahf
out
mov
sbb
enter
jns
push
mov
or
je
mov
lea
sbb
lea
or
push
daa
bound
hlt
xor
push
push
pop
outsl
add
xchg
push
pop
or
fs
rorb
xchg
add
add
push
jnp
mov
aaa
enter
adc
enter
pop
adc
add
outsb
sub
adc
push
mov
repnz
out
andb
bound
dec
inc
rorb
sbb
rcrl
xchg
mov
dec
scas
add
jnp
shll
xor
cmp
xchg
and
das
addr16
arpl
arpl
es
inc
xchg
addr16
mov
shrl
popf
imul
dec
ss
add
ja
adc
test
sarl
dec
inc
push
push
aaa
test
dec
and
mov
adcb
and
jae
loopne
mov
shlb
repz
aam
int3
dec
xor
cmp
add
fadds
cmp
xchg
hlt
jmp
cwtl
sub
insb
pusha
insb
mov
adcb
jp
pop
push
or
flds
sbb
rcll
cmpsl
int
outsl
out
sahf
cmpsl
sub
sahf
ror
xor
out
jo
push
lcall
push
jno
pop
cmpb
jb
mov
iret
repz
jmp
lahf
out
cld
dec
je
jne
sarl
mov
imul
ja
pop
iret
sarl
cli
es
jne
sahf
out
cmp
loop
jns
pop
out
out
add
iret
sarl
loope
jnp
aaa
fs
out
cmp
roll
jl
dec
cmp
out
jne
xor
mov
iret
repz
int
call
jle
imul
orb
fidivrs
mov
push
into
sbb
imul
push
or
xor
sbb
lcall
sub
jns
stos
fists
dec
jns
iret
repz
sbb
int
xor
stos
lahf
out
out
adc
adc
mov
lahf
out
mov
imul
pushf
hlt
stc
cmp
repz
xchg
stc
cmp
cmpsl
inc
sbb
xchg
repz
cmpsl
jle
adc
out
xchg
cmp
repz
mov
cld
cwtl
push
inc
cmpsl
stc
cmp
jl
in
cltd
pop
jns
jge
xchg
flds
es
xorb
fwait
inc
imul
cmpsl
xor
iret
add
iret
jo
dec
sahf
jb
out
xor
mov
or
dec
jl
mov
sarl
daa
mov
repz
movsb
lcall
cmpsl
stc
cmp
adc
push
mov
ds
sarl
dec
cmpsb
rorl
jns
out
inc
jp
enter
dec
repz
test
xchg
sti
cmp
repz
adc
mov
jns
in
lcall
out
sub
jns
adc
fiadds
mov
int
mov
je
mov
mov
stc
cmp
insl
mov
or
sahf
mov
sub
out
ds
mov
int3
pop
mov
cmp
outsl
mov
mov
mov
cmp
imul
mov
cmp
and
mov
repz
pop
mov
dec
repz
inc
sbb
rcrl
cmpsl
stc
cmp
push
ret
ret
jl
repz
les
and
imul
ror
cmp
fstps
outsb
inc
shrb
rolb
jp
ss
dec
mov
xlat
fwait
pushf
fnstcw
fiaddl
data16
insb
ret
fstl
loopne
loope
sahf
inc
lahf
mov
out
mov
pop
int3
icebp
outsl
int3
pcmpgtb
outsl
pop
add
roll
aas
aam
dec
ss
sub
and
mov
add
push
fsubr
cmp
pop
adc
mov
push
enter
push
pop
pop
popf
dec
push
leave
rclb
push
mov
jb
fdivrs
addb
mov
inc
jno
popf
nop
jbe
xchg
ret
lahf
adcb
outsl
jg
xchg
fwait
sbb
xlat
jle
aas
pushf
inc
pop
push
dec
and
scas
popf
sahf
push
pop
adc
mov
jo
jns
inc
xlat
pop
lahf
sub
movhps
adc
out
outsl
out
adc
mov
cmc
adc
nop
jns
jmp
aas
in
xor
or
push
out
add
jne
xchg
insb
cmpl
jp
in
in
inc
movl
add
add
cmp
test
aas
inc
ss
nop
subb
jl
cltd
cmp
adc
add
push
inc
fidivs
sub
dec
rorb
dec
xor
push
in
lahf
dec
dec
xlat
cmp
sbbb
dec
xlat
pop
mov
mov
add
sbb
push
sti
pop
push
sbb
add
imul
pop
pushf
mov
dec
and
fmuls
nop
cmp
fcomps
xchg
les
stc
aaa
fisttpll
push
in
add
xchg
jmp
add
pop
push
addr16
inc
lret
add
popa
or
addr16
and
add
push
ret
sub
mov
daa
insl
stc
or
mov
rorl
inc
mov
add
fistpll
mov
and
jb
dec
fnstenv
cmp
mov
dec
fldenv
dec
cmp
lahf
push
xchg
mov
aam
jb
lock
jl
call
lock
xchg
jb
lea
fistps
mov
push
inc
pushf
or
out
sub
mov
push
dec
inc
aam
outsb
xchg
xchg
fistl
push
mov
pop
fsubrl
enter
cwtl
inc
pusha
and
test
dec
push
nop
xorl
jno
jbe
or
inc
mov
pusha
outsl
pusha
ja
andb
mov
testl
push
fwait
andb
jl
add
iret
push
push
pop
xchg
daa
les
mov
loop
adc
loope
stos
ja
cld
daa
and
push
add
push
inc
pop
out
xor
mov
push
lds
or
add
scas
ja
inc
xlat
jbe
fnsave
or
fimuls
sbb
ficomps
mov
rolb
shrb
inc
lret
pop
cmpsb
push
les
pusha
cmp
loopne
mov
ficomps
inc
jno
punpckldq
and
and
push
add
dec
or
cmpsl
fistps
and
jle
inc
push
cmpsl
loope
out
andb
push
fnstsw
pop
mov
adc
ffreep
pop
fildll
lods
jg
testl
arpl
sbb
or
arpl
arpl
push
fidivl
push
xchg
insb
jb
jb
orl
xchg
pop
fildl
rolb
xchg
xchg
xchg
xchg
aam
in
andl
hlt
xor
fs
nopl
aaa
inc
mov
inc
mov
pop
imulb
push
mov
jb
add
out
jb
movsb
mov
test
inc
mov
or
or
or
movsl
kmovw
in
or
aaa
push
pushf
lods
mov
loope
gs
mov
repnz
sub
dec
pushf
dec
pop
jp
add
push
push
test
jge
xchg
pushf
mov
les
in
cmp
or
rorl
mul
sbb
cmp
iret
push
pop
mov
aaa
push
cmc
jb
enter
add
or
mov
and
dec
or
and
or
dec
dec
into
dec
data16
data16
fcompl
scas
aas
jecxz
and
xor
data16
scas
pushf
sbb
xor
arpl
mov
in
daa
mov
xchg
cltd
pop
scas
shll
int3
mov
xchg
cmp
jmp
push
push
xchg
mov
push
inc
outsl
cmp
iret
push
addl
mov
add
add
rorl
int3
xlat
push
pop
pop
loopne
cmp
pop
aas
pop
rolb
jo
rorb
repnz
or
mov
nopl
xor
in
xchg
inc
dec
push
insl
daa
pushf
mov
leave
lcall
push
call
cld
daa
and
and
mov
in
shr
out
daa
jl
push
aaa
inc
mov
imul
leave
loopne
and
push
pop
js
xor
imul
jno
call
popf
call
jb
enter
movsb
add
or
mov
pushf
pushf
mov
jmp
add
sbb
xchg
inc
popf
in
icebp
add
jmp
cltd
pusha
mov
push
dec
outsb
daa
in
dec
push
pop
movq
adc
dec
xorb
or
in
popf
and
inc
ljmp
push
pop
ja
fisttpll
stos
imul
push
ljmp
xor
dec
mov
scas
pushf
mov
jb
jmp
dec
xor
cs
daa
adc
imul
cmpsb
fisttpll
pop
addr16
rorb
fs
imul
xchg
jb
add
push
movsl
and
call
and
cmc
clc
xlat
dec
sahf
cmp
insb
sbb
scas
es
adc
add
dec
aad
lahf
in
push
pop
in
sub
mov
adc
in
in
in
add
fcmovu
insb
push
inc
fbstp
in
and
in
dec
ret
xchg
insb
lret
insb
mov
loope
push
testl
pop
sbb
out
or
jb
lea
insl
push
insl
dec
es
xlat
addr16
out
in
push
or
enter
inc
mulb
outsl
xlat
in
movlps
imul
out
jl
outsb
cmpsw
mov
pop
pop
add
inc
dec
push
test
addr16
mov
outsb
js
out
or
lods
and
loopne
daa
sub
xchg
dec
cs
nop
sub
mov
pushf
in
jbe
sbb
cmp
popa
mov
mov
xchg
dec
les
xchg
dec
dec
jo
test
dec
cs
dec
aam
imul
ja
scas
frstor
push
mov
cmp
pop
inc
rclb
jnp
adc
vmwrite
adcl
fiaddl
repnz
aaa
adc
lcall
repnz
repnz
pusha
mov
jb
push
aas
add
ja
mov
xchg
push
repnz
repnz
aam
addl
jp
outsb
daa
cmp
daa
dec
dec
cs
mov
inc
xchg
out
in
jb
in
in
add
cmc
add
add
sahf
mov
adc
or
adc
inc
cmp
or
mov
add
jae
in
test
inc
pop
add
es
daa
jb
ret
push
add
fs
sbb
hlt
sub
pcmpeqb
jae
in
xchg
and
jae
jae
jns
xor
ret
add
pop
push
daa
cmp
repz
hlt
shrb
loop
adc
dec
or
push
aad
and
insb
add
jo
cmp
mov
pop
cmc
mov
pusha
daa
dec
outsb
mov
stos
add
je
ud1
enter
movsb
fldln2
mov
pcmpeqw
mov
notb
jne
ficompl
and
imul
in
cmp
push
daa
mov
nop
das
lcall
cs
xchg
or
xor
jne
testb
jnp
jbe
negl
adc
cwtl
addb
jbe
mov
mov
jo
pop
jb
scas
mov
fmull
xchg
cli
xlat
ja
subl
push
add
mov
jb
ja
clc
push
arpl
mov
xchg
daa
mov
and
outsb
mov
daa
loopne
add
lock
clc
dec
je
lcall
fiaddl
and
pcmpgtw
push
mov
xor
testb
add
mov
cmpsb
mov
pop
or
add
enter
or
and
shrl
cmp
push
pop
pop
data16
sahf
mov
add
xchg
push
popf
cld
add
mov
jns
daa
mov
out
cs
aam
pop
fucomip
test
cmc
jp
mov
or
push
adc
cs
mov
push
cli
push
add
xchg
mov
xchg
mov
sti
xor
mov
cmp
repnz
clc
jnp
or
add
mov
iret
mov
dec
add
enter
das
fs
mov
or
dec
dec
fcmovbe
lahf
stos
mov
lcall
call
jb
mov
mov
inc
and
add
add
ljmp
out
mov
imul
inc
cld
je
jo
enter
and
pop
outsl
dec
cmp
add
jns
std
movsb
in
ret
mov
jns
mov
scas
lods
jo
jle
xchg
cld
in
daa
fadd
jbe
call
leave
enter
inc
lcall
and
sub
cmp
ja
popf
int3
cmovae
push
maxps
je
leave
dec
or
jb
mov
movsl
lcall
repnz
pop
jge
inc
fidivl
jge
std
jle
add
or
add
jle
out
dec
adc
decl
jle
popaw
mov
mov
and
cmp
cmpsl
add
mov
rolb
pop
lcall
out
jg
movq
jg
fstpl
fldcw
inc
cmp
jnp
pop
dec
xchg
addr16
jb
sbb
mov
nop
xchg
out
in
mov
add
jb
pop
movq
sub
sub
fimull
mov
sbb
and
xor
outsb
daa
sbbb
ja
xchg
jo
mov
dec
dec
fwait
cmpsb
dec
dec
fisubl
fcompl
fimull
adc
incl
dec
adc
add
andl
daa
in
pop
push
xor
iret
add
int3
sahf
push
sbbl
inc
mov
test
xchg
push
xchg
popf
or
lods
or
inc
sahf
mov
in
and
in
adc
cmc
adc
adc
addb
xor
mov
pop
into
rorl
lahf
push
jo
cmpb
lret
xchg
cmpsl
gs
add
mov
xchg
lods
mov
jnp
dec
andl
out
xor
xchg
sbb
dec
outsb
jbe
add
in
and
and
pop
add
adc
fmull
cmp
inc
dec
out
pop
insl
subl
jnp
jbe
pop
rorb
subb
inc
add
add
rolb
rcr
dec
or
and
call
or
jne
pmullw
popa
lods
xor
xchg
mov
out
iret
add
aas
push
fimull
mov
pop
pop
fwait
mov
sbb
or
push
imul
xchg
pxor
addb
pop
cmp
push
cmp
pop
test
mov
or
jne
inc
xchg
fcomps
mov
subl
xor
cmp
pop
and
xor
jg
jns
lahf
ja
sbb
test
cmp
mov
pop
js
in
shll
outsl
mov
fucomi
rcrb
fisttpll
call
je
popf
shrb
sub
lock
cmp
inc
into
mov
sbb
cmp
outsb
mov
pop
cmp
inc
call
leave
xchg
test
jo
mul
in
jp
cwtl
add
cmp
cmpsb
mov
cmpps
sbb
pop
lock
or
xchg
or
pop
or
enter
outsl
xchg
pop
add
cmp
imul
add
mov
mov
or
xchg
and
or
or
or
stc
cmp
clc
mov
push
pushf
mov
mov
aaa
daa
cwtl
dec
add
mov
stc
mov
in
add
or
imul
daa
cmp
bound
sahf
out
jb
leave
xchg
pushf
je
fs
inc
xchg
add
sbb
in
add
mov
sbb
in
cmp
sub
mov
inc
outsl
mov
pcmpeqd
jb
pop
sysret
cmpsl
inc
daa
cmpsb
ljmp
xor
push
add
imul
daa
or
iret
mov
pop
sbb
ror
shll
dec
fimull
push
cld
in
mov
mov
dec
fisubl
mov
in
enter
pusha
add
add
cmp
daa
cmp
int3
sahf
pushf
pop
fabs
jmp
mov
push
outsl
cmp
and
cld
pop
pop
xor
lea
or
jg
xchg
sbb
in
and
daa
xlat
outsb
daa
or
mov
arpl
in
mov
mov
pushf
add
inc
mov
psubusw
out
push
jbe
in
jmp
add
mov
or
mov
mov
sysenter
lahf
mov
cmp
popa
add
fisttpll
cmpsl
jno,pt
cmpsl
push
pusha
popf
pushf
pop
and
mov
shlb
mov
stos
jno
leave
repnz
lock
jge,pn
das
xor
mov
je
mov
xchg
pusha
push
in
adc
lahf
mov
ja
lods
sarl
jecxz
setg
inc
into
nopl
fildll
and
and
pop
and
jo
and
pop
mov
repz
and
rorl
fildl
jecxz
dec
cwtl
mov
or
adc
imul
popf
aaa
xchg
add
sbb
in
leave
inc
fwait
jnp
jae
mov
jo
xchg
push
pushf
pop
and
pusha
iret
call
outsl
push
add
mov
das
adcb
sub
inc
xlat
cmpsb
loop
popf
adc
xchg
sbb
nop
jb
leave
cmp
rolb
jbe
lret
lret
aas
lret
pop
das
or
cmp
in
testl
mov
mov
lret
ficoms
adc
cmpsb
xchg
addr16
popa
add
insl
add
push
add
xchg
xchg
daa
daa
orl
mov
mov
fnsave
fimuls
in
in
xchg
push
xchg
add
mov
xor
dec
xchg
mov
xchg
add
add
push
enter
addb
mov
push
xor
fs
xchg
or
mov
add
mov
inc
sub
test
xchg
push
add
adc
sbb
xchg
ret
adc
rclb
add
int3
fisubrs
sbb
sets
mov
dec
inc
sahf
mov
pop
fidivrs
fmull
dec
hlt
aas
push
sub
shrb
fists
movsb
pop
punpckldq
push
xchg
xchg
daa
jb
jp
add
xchg
mov
jb
mov
pop
cmp
sbb
jbe
push
clc
clc
aas
clc
add
xchg
addl
pop
push
xchg
xchg
push
sub
add
cmp
mov
jbe
cmpsl
dec
dec
pushf
pushf
mov
cmpsb
outsb
jbe
pop
in
je
xchg
pusha
xchg
mov
push
sahf
mov
push
fists
adc
hlt
add
cmp
or
or
xchg
das
ja
xlat
push
aas
add
dec
ja
inc
dec
xchg
add
pop
jb
ja
add
xchg
mov
leave
dec
in
mov
mov
daa
pop
loopne
inc
push
jo
notl
jge
push
outsl
xchg
push
sub
in
xchg
inc
daa
daa
pop
leave
sbb
outsb
jbe
cmp
mov
test
sahf
or
out
in
ror
add
pop
sub
mov
push
hlt
add
out
add
cmp
dec
adc
cwtl
femms
das
and
popf
pushf
aaa
aas
xchg
sub
cmp
jb
xchg
fildl
jo
addr16
add
pop
and
lods
rclb
fildl
loopne
por
aaa
shll
xor
sbb
fcompl
push
push
pop
push
sbb
mov
aas
push
add
add
add
inc
mov
or
in
sbb
jbe
jbe
pop
roll
shl
into
daa
adc
aas
jb
jb
lcall
push
je,pt
dec
push
sbb
dec
push
add
daa
daa
jae
pop
in
push
xchg
inc
mov
lcall
rolb
paddusw
call
cmp
add
fwait
dec
xor
xchg
push
sbb
xchg
sbb
lcall
fwait
gs
push
jle
xchg
in
add
cmpsb
out
push
orb
add
fisttpl
push
mov
pushf
add
or
push
pop
and
pushf
cmp
cmp
pop
sahf
int3
sahf
mov
or
outsl
or
addr16
inc
jp
or
xchg
xchg
daa
daa
lods
mov
xchg
adc
out
lahf
repnz
jns
std
pop
outsl
popf
or
pop
dec
xlat
in
inc
popf
cmp
inc
scas
and
push
jno
addr16
and
lcall
xchg
pop
jnp
xchg
sbb
les
fistps
ja
pop
mov
add
add
pop
add
enter
pop
sysret
pop
or
or
enter
das
getsec
or
mov
push
imul
loopne
fwait
cmp
mov
leave
in
add
xlat
call
jg
divb
movl
xor
mov
daa
fcomps
mov
adc
fistps
cvtps2pi
xchg
xchg
and
cmp
adc
dec
push
mov
and
lahf
inc
jb
xchg
and
pop
lahf
mov
add
ficomps
jg
mov
popa
and
mov
mov
sbb
inc
enter
dec
add
push
add
fs
in
add
push
insl
adcb
or
rclb
jo
push
push
jmp
in
jb
pop
paddsb
hlt
paddb
cmp
and
in
movsb
or
aas
das
mov
and
xchg
in
movsb
pop
push
pop
xor
fs
add
mov
xchg
xor
xchg
jbe
lcall
out
add
add
dec
out
shrl
adc
inc
repnz
pop
and
enter
push
xor
invd
outsl
dec
inc
sub
pushf
jno
daa
sbb
sub
aam
sbb
shll
pop
mov
push
addb
mov
inc
fimuls
mov
pop
lret
add
loopne
jmp
or
mov
add
or
pop
or
inc
mov
sub
cmovle
in
xchg
and
adc
mov
jb
adc
adc
enter
cmpsb
sbb
in
in
sbb
pop
push
in
in
adc
in
in
adc
push
push
movsb
ret
in
fildll
jg
inc
int
pop
mov
and
movsb
add
out
dec
push
add
push
xchg
aam
movsb
daa
in
mov
xor
testl
add
lds
insb
cmpsl
ljmp
and
pop
mov
add
lahf
mov
je
pushf
xor
mov
push
aam
filds
je
out
out
mov
out
add
push
repnz
movsl
cltd
push
aas
add
enter
add
push
add
xor
jb
add
or
mov
xchg
stos
in
mov
jb
and
insl
push
inc
dec
sub
inc
inc
rcll
int3
sahf
mov
jno
add
add
in
sbb
divb
daa
daa
pop
leave
shl
out
mull
jne
outsb
pop
call
sub
shr
inc
cmpsl
cmpsl
sub
xor
sub
cmpsl
push
jg
add
xchg
and
imul
das
aas
popa
in
add
cmpsl
mov
sub
pushf
pushf
out
idiv
test
xchg
and
syscall
pop
push
pop
add
add
or
or
sbb
jb
aas
or
inc
or
jno,pt
push
aas
push
pop
adc
mov
nop
push
jp
addb
test
dec
sub
mov
mov
xchg
xchg
adc
add
add
add
ja
lret
mov
sub
daa
movsl
push
pop
inc
scas
xchg
push
daa
add
add
add
scas
enter
add
and
push
pop
or
or
or
nop
outsl
mull
adc
fildl
and
cs
or
fs
xlat
mov
in
xlat
push
lds
outsl
push
frstor
xchg
outsl
sub
jnp
stos
dec
push
adc
stos
push
inc
popf
pushf
pop
mov
ja
pop
popa
jmp
pop
stos
jno
add
fisubrl
adc
ss
dec
das
pop
data16
aad
xchg
sarb
outsl
push
decl
dec
inc
mov
add
rorl
mov
or
jbe
xchg
lods
pandn
loopne
mov
fcoms
inc
push
add
cmp
mov
daa
stos
lock
add
mov
insb
pop
cmc
push
inc
addr16
pop
das
or
int3
movsb
daa
iret
or
js
loopne
sbb
daa
daa
in
pop
push
adc
inc
or
xor
ljmp
js
enter
lods
mov
out
pushf
add
jb
leave
cmpsb
scas
add
add
cmp
mov
add
inc
into
sahf
mov
or
fiadds
push
sahf
xor
out
out
outsb
adc
test
sbb
dec
lods
lods
sbb
xchg
pushf
pop
mov
addr16
mov
sahf
pop
and
addb
cltd
in
sbb
in
fistps
push
out
out
add
jns
mov
push
lcall
adc
and
inc
sahf
sub
cmp
dec
dec
lahf
xor
scas
xlat
scas
scas
movsb
add
jbe
dec
xlat
in
in
mov
mov
test
outsl
in
scas
out
data16
scas
fildll
mov
syscall
push
push
pop
pop
cwtl
mov
mov
inc
push
mov
mov
scas
xorl
loope
fistpl
mov
mov
pop
xor
lahf
mov
scas
scas
jg
jmp
aam
hlt
mov
addr16
mulb
jb
aas
push
dec
shl
aas
dec
xor
ja
out
or
or
cmpsl
xor
enter
mov
push
add
enter
mov
sbb
mov
imul
outsb
daa
add
pop
shlb
pop
in
or
test
repz
pop
cmp
in
movsl
jb
mov
addr16
add
and
xchg
xchg
mov
push
mov
mov
movswl
push
pop
dec
jb
aaa
mov
xchg
fucomi
mov
lahf
repnz
cli
mov
in
mov
push
mov
adc
mov
add
mov
cmp
or
or
daa
inc
cmp
push
test
aaa
xchg
xchg
insl
nop
out
add
and
mov
enter
mov
add
jb
in
add
add
or
icebp
or
xchg
xchg
pop
mov
shlb
add
mov
push
sub
popf
mov
add
jl
xor
divb
lods
jg
lods
inc
cmovl
daa
in
loop
push
push
femms
pop
fs
enter
adc
adc
jb
adc
mov
mov
int3
aam
xchg
xchg
daa
fcompl
repnz
push
and
mov
and
cmp
ss
adc
sbb
and
mov
sub
cmp
in
xchg
and
sub
xor
das
fs
pcmpeqb
test
mov
pmulhuw
notl
pop
daa
inc
aam
inc
dec
cmp
jbe
and
es
pop
adc
push
stos
inc
lret
ror
je
mov
ret
outsb
das
xchg
sub
cmp
push
dec
cmc
add
imul
push
inc
adc
pushf
pushf
dec
push
pop
xchg
jmp
sub
mov
outsl
and
pop
pop
addr16
xchg
add
cmp
jb
add
or
popf
mov
rorb
mov
fimull
prefetcht1
enter
and
sub
xor
sbb
jb
cmp
push
fs
xchg
and
outsb
sbb
sbbb
jb
enter
sbb
sbb
mov
pop
mov
jb
enter
and
and
and
sti
es
daa
adc
sbb
mov
xchg
and
sub
cmp
inc
inc
into
fisubrs
dec
jg
and
and
enter
and
test
mov
jb
pop
xchg
push
pushf
sbb
pop
inc
sub
mov
mov
and
sbb
push
aam
mov
jb
adc
adc
adc
mov
pushf
add
cmp
les
ds
cmp
popa
mov
ds
idivl
jg
jno
jns
sbb
jb
addl
mov
mov
or
jb
enter
push
call
inc
mov
push
adc
adc
jb
enter
adc
inc
mov
inc
sbb
pop
sbb
in
xchg
and
jge
mov
cmp
cmp
pop
mov
mov
in
jbe
dec
lds
fsubrs
outsb
iret
jmp
negb
paddd
mov
xchg
and
adc
mov
jb
adc
cmp
inc
bswap
xchg
and
push
push
or
jb
or
or
xchg
and
mov
xchg
push
mov
enter
add
mov
das
push
mov
mov
std
jo
enter
mov
nopl
push
adc
leave
sbb
sub
jb
or
mov
inc
or
pop
adc
and
adc
adc
outsb
daa
and
or
and
sbb
jl
sbb
mov
adc
add
stc
and
add
inc
mov
add
cmp
fmull
rcpps
arpl
cmp
cmp
jnp
dec
inc
mov
setbe
mov
dec
popw
mov
cmpxchg8b
iret
pushf
pushf
pushf
pushf
xlat
out
and
mov
xchg
mov
push
sbb
in
mov
push
and
mov
ss
pop
add
pop
jbe
dec
inc
sahf
jle
xchg
outsl
daa
mov
add
mov
outsb
daa
mov
rorb
adc
loopne
and
scas
push
inc
cmpb
jge
mov
xor
and
sbb
add
push
add
xchg
push
insb
pop
ja
or
jnp
jb
or
inc
mov
movsl
push
mov
mov
outsl
daa
and
repnz
adc
or
adc
pop
sub
fs
enter
dec
sbb
jns
repnz
sbb
inc
sahf
mov
and
daa
and
and
daa
mov
ftst
pxor
shl
xchg
xchg
add
das
repnz
xor
xor
mov
push
shrb
add
and
add
movsl
push
scas
pop
mov
stc
mov
or
or
fisttps
pushf
pushf
int3
movntq
out
idiv
and
mov
pop
movhps
pop
and
daa
pop
das
push
aaa
sbb
stc
cs
push
inc
adc
dec
sbb
inc
dec
mov
sbb
xchg
xchg
push
dec
and
rorl
movsb
lods
mov
in
in
into
dec
pop
mov
cs
mov
cmp
cli
push
out
dec
ret
cltd
cmp
add
inc
dec
inc
mov
pop
popw
jae
sbbb
xchg
cltd
iret
ret
or
cmpsl
or
jg
fucomi
jbe
lahf
loopne
jmp
notb
add
and
cmp
repnz
sbb
sbb
and
inc
mov
inc
and
outsb
daa
and
push
jne
in
jbe
lahf
cmpb
sbb
jb
push
sub
push
jne
xchg
and
subb
jb
enter
xor
pushf
cmp
fsub
ss
aaa
xchg
and
sti
cmp
xchg
cmp
mov
aas
les
iret
xor
jb
aas
in
adc
mov
sbb
sub
xchg
xchg
inc
ss
das
dec
dec
pop
adc
add
pcmpgtb
outsl
dec
rcrb
jg
insl
movsb
shll
lahf
dec
xor
shlb
fucomip
ret
mov
sub
insb
pop
outsl
lds
sbb
push
ret
add
add
xchg
mov
or
or
enter
adc
pop
sub
cmp
sbb
jb
inc
rcpps
pusha
adc
insb
cwtl
mov
push
nop
adc
fwait
cmpsb
mov
pop
mov
psrld
fucomip
sbb
test
pop
sbb
cmp
daa
xchg
lret
es
jg
xor
xchg
jle
xchg
push
dec
push
dec
int3
jbe
enter
ror
add
in
in
add
or
jns
push
pop
sbb
and
or
insb
fisttps
push
bswap
fimuls
pop
push
jle
xchg
and
mov
fs
lahf
pop
stos
sbb
jnp
jb
sbb
loope
paddsb
leave
jo
and
inc
sbb
and
cs
mov
jnp
daa
das
inc
sub
pop
inc
mov
xchg
xchg
lods
pop
pusha
xchg
fidivs
dec
or
les
out
in
xchg
add
add
add
add
or
pop
adc
aas
and
sarb
lret
xor
outsl
mov
leave
dec
mov
sbb
pusha
add
imul
xchg
mov
xchg
mov
jb
in
mov
or
in
iret
rclb
lret
add
pushf
mov
push
aas
xor
sbb
mov
add
jb
enter
punpcklwd
in
cmp
sahf
mov
repnz
and
dec
inc
aad
in
iret
clc
out
push
mov
cmp
xorl
sbb
dec
scas
fisttpl
mov
daa
mov
xchg
cmp
scas
imul
sbb
xchg
int3
push
mov
xchg
add
and
pushf
lods
mov
inc
in
xchg
or
or
or
mov
jg
add
mov
in
xchg
and
adc
adc
in
mulb
adc
leave
enter
jp
mov
lods
push
dec
call
int
push
repz
mov
push
adc
sbb
xchg
and
push
and
sub
xor
xchg
fsts
or
dec
xchg
xchg
in
push
out
push
pop
push
fs
outsw
mov
aas
jp
adcb
mov
setp
mov
in
xchg
and
sbb
sbb
sbb
jnp
jb
sbb
jmp
psllq
es
mov
add
or
push
push
stc
push
and
xor
imul
dec
push
pmulhuw
divb
dec
insl
add
xor
pop
mov
pushf
pushf
cmp
pextrw
or
xchg
and
rorb
fistl
out
in
lret
xchg
icebp
cld
adc
pop
adc
jbe
jb
sbb
aas
mov
jb
sbb
sbb
dec
sbb
push
popa
pop
pop
insb
ja
enter
dec
addb
and
in
and
pslld
loope
sub
push
inc
push
fs
add
les
pusha
cmp
push
pop
push
mov
ja
inc
insl
call
lds
jb
pop
mov
pop
sub
dec
stc
orb
cmpb
inc
push
push
mov
scas
fcompl
les
syscall
inc
sahf
pushf
mov
or
or
or
leave
enter
sbb
daa
cmovns
push
adc
push
jb
enter
push
fcoms
jecxz
mov
sbb
add
nopl
sbb
leave
in
leave
enter
xchg
and
mov
lods
and
ret
daa
mov
sub
jecxz
jecxz
mov
das
sub
sub
fimuls
wrmsr
pop
sbb
aas
sbb
dec
inc
into
das
and
pop
inc
mov
fmull
das
mov
setbe
mov
pop
mov
int
inc
push
push
aam
dec
aam
movsb
pop
imul
mov
enter
das
ljmp
cmp
jns
or
or
mov
das
push
subps
pop
cltd
cmp
jb
adc
mov
jbe
xchg
das
mov
mov
in
jbe
ror
ftst
sbb
repnz
cld
push
pop
pop
adc
mov
sbb
inc
ficomps
xor
sub
sub
insl
in
sbb
cs
ds
repnz
xor
pop
push
in
divb
jne
les
outsb
mov
psllw
jg
movlps
cs
or
mov
mov
or
ret
fadds
ja
nop
mov
add
into
fistl
fsubrp
pop
rol
outsb
mov
pop
lock
lidtl
fcom
in
sbb
aaa
adc
in
pop
mov
jnp
daa
pop
data16
pop
orl
mov
ret
xchg
pop
js
xor
int3
daa
cwtl
mov
pop
imul
stos
add
add
xor
fildl
push
xorb
sbbb
aam
add
cs
inc
push
dec
pop
pop
add
inc
mov
lea
mov
pop
inc
pushf
push
add
aaa
mov
add
pop
aaa
xlat
test
add
push
iret
repz
sbb
cmp
or
or
sub
or
or
jbe
fisubrs
adc
jbe
mov
and
in
inc
push
addr16
das
mov
xorps
insl
dec
sahf
out
push
and
jb
fsubrl
fcompl
orl
cmp
pushf
test
xchg
sub
mov
imul
xlat
sbb
data16
pop
dec
sub
mov
mov
push
sub
and
and
nop
addb
or
mov
and
adc
push
sbb
test
adc
cmp
add
movsb
add
lret
sahf
cmpsb
fisttps
mov
cld
adc
inc
jle
test
shll
leave
in
cmp
and
mov
iret
mov
in
call
std
dec
jle
adc
push
ficompl
push
pop
fisubrl
adc
aas
mov
pop
rcr
fsubp
stc
xor
testl
out
sahf
js
jo
push
jns
push
dec
inc
xor
jns
out
and
adc
out
sahf
adc
add
repz
out
sahf
out
clc
hlt
lock
sahf
aam
pop
repz
mov
repz
xchg
mov
je
push
or
aas
mov
xor
fistpll
sub
sbb
repnz
push
in
out
sahf
out
les
sahf
nop
mov
repz
repz
pop
push
dec
inc
cmp
cmp
xor
add
clc
push
iret
repz
in
fmul
mov
sub
push
mov
mov
add
xor
xchg
or
and
mov
cmpsl
data16
rolb
add
cmp
mov
mov
add
je
bound
cmpsl
aas
sbb
and
aad
and
daa
orb
sbb
or
iret
dec
lock
jo
lock
call
push
and
punpckhdq
dec
loopne
push
mov
push
sbb
push
out
rolb
add
pusha
loope
add
sahf
pop
je
movl
test
addb
cmp
pop
mov
leave
imul
pop
divb
das
outsl
push
pop
ror
iret
lds
adcl
leave
ss
add
mov
pop
jl
pop
out
pusha
mov
add
out
fnstcw
movsb
enter
testb
adc
add
add
add
or
and
jbe
in
cmc
clc
or
adc
xor
jbe
push
das
mov
mov
into
into
mov
or
adc
mov
inc
sbb
movups
or
cmp
lret
add
pop
clc
and
and
and
inc
mov
and
loope
sbb
clc
shr
push
sbb
insb
pop
imul
daa
xor
xchg
in
adc
dec
jp
pop
inc
cmp
xorl
fistl
cmp
cmp
repz
pop
js
mov
negl
enter
insl
add
repz
pop
ja
mov
addr16
bnd
das
push
dec
sbb
lock
dec
cmp
arpl
inc
enter
nop
xchg
cli
or
or
ret
enter
mov
adc
repnz
and
sbb
into
sbb
call
dec
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
idiv
decl
add
inc
stc
mov
adc
mov
decl
js
lcall
ss
mov
test
call
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
incl
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
jmp
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
lcall
lds
mov
cmpsb
lock
mov
popa
sar
mov
fsubs
cmpsb
jmp
xchg
clc
repz
mov
subb
fwait
xchg
and
lcall
int
add
aas
jno
or
mov
ja
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
sar
decl
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
out
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
incl
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
mov
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
ljmp
mov
inc
rcr
push
arpl
int3
and
call
cmp
lcall
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
aaa
push
cmp
movb
aaa
fldt
cmp
jno
shlb
pushl
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
jmp
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
xor
std
jmp
sbb
gs
std
orl
pop
ficomps
frstor
xor
rcr
add
notb
fcompl
add
clc
nop
mov
inc
inc
push
dec
aam
filds
pop
dec
dec
inc
push
dec
inc
aaa
xor
mov
mov
jg
sbb
fildll
lds
pop
push
inc
aad
mov
jo
popa
push
outsb
jbe
imul
mov
sub
outsl
mov
aas
dec
insb
imul
push
fsubs
add
iret
rolb
xchg
xor
adcl
push
inc
dec
push
mov
inc
add
jo
jb
push
inc
push
or
inc
inc
test
loopne
dec
inc
gs
gs
daa
inc
mov
adc
ds
arpl
sbbl
sub
fcomp
aaa
bound
outsl
push
dec
pop
mov
test
xchg
xchg
add
out
xorb
movsl
push
xchg
xchg
push
cld
dec
add
cmp
fcomps
push
fs
push
mov
shlb
aas
push
xor
dec
imul
xor
dec
daa
daa
dec
jae
sarl
jne
push
and
inc
inc
inc
jg
iret
lock
inc
jns
dec
lahf
push
lods
shll
les
push
cmp
pop
outsl
xchg
data16
jns
or
bound
cli
inc
push
adc
es
dec
in
inc
jl
call
out
dec
push
dec
dec
pop
sti
mov
jae
jbe
pop
dec
mov
dec
test
dec
push
mov
xor
addb
cmpsb
dec
add
dec
iret
imul
hlt
daa
dec
popa
jne
arpl
outsl
sub
jo
dec
dec
pop
xlat
cwtl
and
or
jns
adc
xor
pusha
push
ja
inc
xchg
push
scas
fidivl
add
push
js
pop
pop
mov
dec
sub
mov
mov
adcl
mov
add
ret
push
divl
cmp
addr16
arpl
outsl
push
jb
sub
lds
das
loopne
and
xlat
push
xorl
clc
jp
lock
push
push
adc
gs
pop
adc
xchg
jo
outsl
push
push
lods
inc
arpl
push
push
mov
pusha
out
adc
lea
fldt
pop
sub
xchg
addb
add
and
outsb
data16
test
pusha
loope
outsl
dec
mov
or
ja
sbb
mov
ja
adc
das
ja
shlb
push
popa
push
pop
loop
add
or
cmp
lahf
roll
icebp
ja
sub
lea
pusha
stos
stos
dec
scas
test
dec
lahf
push
test
inc
dec
push
push
sub
add
jne
adc
and
pop
lds
add
call
lahf
push
adc
pop
mov
subl
adc
cmpsl
mov
push
sbb
xchg
push
mov
sub
push
outsb
sbb
jbe
fcoms
push
popf
arpl
inc
mov
push
mov
mov
outsb
push
dec
push
pop
push
add
jo
gs
addb
mov
or
outsl
addr16
or
call
adc
ret
pop
les
push
add
lea
cmpxchg
add
out
push
pop
inc
sub
xchg
lock
repz
test
js
fnstcw
pop
inc
or
hlt
cwtl
cmp
xor
jl
push
add
pusha
sub
pop
insb
daa
ljmp
pop
ja
popa
push
out
mov
les
decl
movsl
arpl
mov
mov
push
movsb
mov
aad
mov
rclb
mov
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
incl
cmp
or
pop
adc
in
pusha
aad
jno
jmp
inc
aam
dec
std
test
movsl
cli
test
xor
leave
mov
ljmp
pop
filds
or
shrl
cmp
ficoms
push
xlat
enter
lock
mov
and
mov
cltd
xchg
mov
mov
or
or
incl
xchg
adc
stos
sbb
data16
pushl
push
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
call
xor
cmp
or
jmp
mov
cmp
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
push
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
pop
cmp
jg
mov
aam
movsl
fisttps
xchg
fadd
shll
jmp
outsb
xor
incl
lods
sarb
add
in
add
pop
dec
or
cmp
add
daa
call
adc
mov
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
jmp
cwtl
shlb
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
decl
mov
lcall
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
ljmp
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
call
jle
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
fmuls
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
dec
sbb
outsl
and
xchg
ja
int3
add
mov
das
es
inc
sub
mov
sub
mov
cmpsl
call
ret
shlb
sbb
ret
lcall
pushf
mov
insl
add
ss
jmp
addr16
jb
push
mov
xchg
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
fcomip
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
mov
mov
loop
mov
push
addl
mov
cmp
cmpsl
push
push
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
inc
sahf
mov
inc
jmp
repnz
lret
mov
cmpsb
mov
sarb
xchg
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
and
mov
fnstsw
out
add
cs
dec
push
mov
shl
mov
jmp
ljmp
push
mov
ja
imul
je
push
insb
imul
aas
les
push
jns
arpl
arpl
fsubrs
push
ja
push
inc
insl
in
inc
mov
jns
inc
jne
outsl
xchg
pusha
test
xchg
adc
lcall
push
rorl
pop
out
and
push
cmp
dec
cmp
daa
cmovns
cltd
inc
ja
clc
inc
insl
bound
xor
or
inc
add
popa
adc
inc
js
push
dec
subl
jbe
dec
sbb
and
in
in
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
in
mov
sub
xor
xor
xor
mov
xor
popa
push
inc
jbe
pop
mov
cmpsb
fs
mov
push
jnp
sbb
inc
or
ror
fwait
cmp
and
sub
test
outsb
imul
ss
jbe
arpl
bound
inc
aas
in
gs
xor
leave
and
jp
sub
sbb
aaa
movsb
out
and
lcall
sbb
dec
insb
push
dec
pusha
lods
and
cmp
xchg
aaa
aas
inc
add
adcl
inc
add
imul
mov
dec
sbb
push
aad
dec
dec
push
inc
aaa
outsl
ss
enter
sbb
inc
add
es
jbe
jae
inc
inc
inc
add
cmpb
add
stos
pop
shlb
iret
pop
je
inc
int
push
dec
dec
lea
xchg
sbb
mov
inc
aam
inc
outsb
jne
push
sti
fisubrl
mov
mov
pop
aad
xor
xor
or
aad
arpl
add
addr16
pusha
repz
push
push
jns
ds
or
imull
aaa
or
dec
out
imul
add
mov
or
pop
sbb
adc
mov
xor
jo
and
mov
jmp
pop
addr16
push
scas
xlat
mov
add
inc
xchg
daa
and
cmp
inc
jb
addr16
loope
popa
adc
jo
or
xchg
and
js
outsl
outsl
test
dec
sub
push
jno
adcb
xchg
pop
xor
loop
in
jb
and
pop
in
nop
pusha
lds
jne
leave
cmp
pop
arpl
sbb
push
cmp
movsb
lcall
je
jo
push
adc
push
outsl
insb
jns
sbb
mov
inc
sub
fstpt
sahf
addr16
or
mov
stos
inc
clc
insb
cld
add
iret
inc
push
bound
inc
ret
arpl
addr16
testl
or
movb
in
movsl
add
sbb
push
add
sub
add
ret
addr16
hlt
push
testb
push
in
mov
movsb
adc
outsl
aad
movsb
push
pop
sahf
aas
and
jg
add
inc
ljmp
test
add
and
aaa
push
outsb
mov
jb
pop
add
add
dec
aas
pop
inc
or
push
and
or
add
inc
push
add
inc
inc
sub
divl
cmpsl
adc
push
sub
nop
inc
shlb
rdmsr
cmp
jg
or
pop
mov
int
mov
and
push
sahf
and
add
and
popa
insl
sub
scas
add
and
jne
movsl
ljmp
and
and
cs
or
dec
shrd
popa
incl
lea
repz
or
bswap
mov
out
ud0
lahf
jge
jmp
repnz
in
push
pusha
ljmp
lret
cli
cmp
sub
arpl
dec
xor
or
ret
loop
dec
daa
cmpsl
mov
or
or
pop
mov
mov
daa
aam
cmp
add
pop
add
dec
xor
arpl
out
mov
add
inc
sbb
add
prefetch
pop
xor
push
test
stos
and
mov
mov
insl
cwtl
mov
subb
or
loop
pop
test
add
push
enter
add
cs
add
les
lods
add
or
enter
xor
and
dec
lret
out
dec
xor
cs
mov
in
dec
or
rcrb
jo
push
xlat
out
add
xorb
gs
sbb
repz
push
inc
jne
les
andl
jg
mov
sbb
push
mov
es
jl
mov
inc
enter
jmp
add
mov
addb
lods
or
dec
and
decl
sub
imul
js
insl
push
scas
or
sarl
or
inc
fnstenv
push
ja
xor
negl
xor
call
sbb
sub
movsl
imul
jns
ja
jne
jmp
mov
clc
mov
push
call
push
sbb
or
mov
jmp
adc
bound
jecxz
and
enter
adc
add
invd
hlt
jl
les
out
jo
out
xor
push
adc
push
push
pop
or
sub
lret
xchg
stc
fisttpl
or
in
sub
xchg
dec
mov
mov
aad
rcll
sbb
mov
call
nop
fadds
lods
xchg
inc
lea
fcmovu
jbe
les
sub
adc
mov
push
mov
adc
mov
icebp
adc
jne
push
sub
pop
adc
popa
push
xor
mov
cmc
mov
push
push
push
pusha
arpl
or
push
ret
jle
inc
dec
inc
and
mov
jbe
call
sub
adc
and
sbbb
push
jb
pop
outsb
pop
pop
cli
push
or
imul
pushf
and
aad
insl
imul
push
inc
dec
pop
out
imul
add
adc
mov
xchg
int3
jo
test
arpl
subb
xor
add
cmp
and
and
jne
push
sub
insb
push
inc
adc
sarl
ret
int
xchg
rol
mov
adc
inc
invd
jle
mov
push
les
add
adc
sub
mov
push
push
push
mov
mov
sti
push
or
mov
orl
leave
push
pop
int3
fcoml
or
pop
add
mov
mov
fisttpll
push
push
pop
test
cmp
sub
push
sbb
sahf
jp
dec
pop
mov
jo
push
ret
push
adc
dec
mov
sbb
sti
lds
push
lea
popa
jg
mov
push
add
push
test
push
mov
jo
sbb
aam
sti
clc
das
jp
pop
inc
test
movb
dec
adc
and
add
push
mov
aam
fldt
xchg
jo
out
out
or
pop
mov
imul
leave
adcl
test
icebp
add
andb
add
dec
adc
adc
shll
jecxz
imul
dec
lock
or
adc
add
popf
and
repnz
jmp
xlat
hlt
or
loope
dec
stc
mov
lods
push
pop
movsl
mulb
push
xchg
xor
pop
jne
pop
rcl
mov
in
push
sub
jae
aas
adc
xchg
icebp
jne
out
push
dec
and
mov
mov
imul
sub
je
call
rcll
inc
push
push
insb
faddl
sub
scas
lahf
push
mov
imul
pop
mov
sbb
fcoml
inc
jno
and
cmc
push
add
movl
jl
sbb
lcall
or
stc
jp
mov
push
out
pop
sbb
mov
pusha
cmc
scas
push
in
cmpsb
xlat
pop
jp
push
or
inc
or
sub
shl
and
pop
xchg
sbb
inc
and
push
test
ja
mov
rolb
rcr
inc
call
jnp
lcall
pop
cmp
ret
sub
xor
fdivs
out
lea
inc
ljmp
pop
sub
and
inc
aam
pop
add
fldt
sub
and
in
sti
scas
pop
es
sbb
sbb
lret
push
rclb
leave
mov
enter
jl
test
clc
lret
push
add
cli
call
jle
pop
push
call
xchg
std
or
call
lret
dec
pop
jne
xchg
lea
xor
mov
stos
xor
or
xchg
ret
lahf
push
mov
mov
out
hlt
jmp
int
sbb
add
lock
sbb
call
gs
bndstx
pop
pop
mov
dec
adc
call
shrb
cmp
or
clc
mov
pop
mov
xchg
xchg
mov
push
sbb
mov
call
in
dec
or
nop
mov
inc
cmp
dec
or
or
imul
aad
add
mov
cs
cmp
dec
sbb
sbb
mov
repz
and
mov
pop
fdivrs
jmp
mov
and
sbb
pop
andl
repz
jle
mov
sbb
xchg
or
sbb
sahf
or
add
rcrb
or
xlat
jle
rorl
mov
inc
movzbl
rol
inc
imul
mov
add
add
mov
push
fstps
aas
mov
sub
sub
or
stos
lds
and
push
pop
lahf
mov
sbb
mov
movsl
gs
jbe
xchg
je
test
ljmp
bound
fbld
hlt
push
insb
inc
cmp
push
pop
ret
jns
push
adc
and
push
jo
int3
add
cmpsl
add
pop
ss
pop
dec
sbb
lret
xor
mov
ds
cmp
sbb
popa
and
jne
ds
jnp
xchg
xchg
sbb
push
sbb
sbb
popa
subps
xlat
fadds
loope
inc
jecxz
and
pop
insl
dec
es
test
push
cmp
push
movsl
dec
fdiv
or
xchg
into
loopne
inc
pop
rclb
int3
call
push
push
jmp
mov
jmp
pop
dec
fwait
aas
or
jb
add
add
xchg
add
xor
push
sbb
fcompl
jb
call
sahf
les
lds
daa
xchg
xlat
rolb
addr16
xchg
sbb
mov
xchg
test
in
xchg
sbb
push
lea
adc
xor
inc
jbe
ret
push
cmp
dec
or
push
xchg
dec
pop
leave
shll
mov
mov
push
add
fisubs
rolb
fildl
or
cmp
faddl
ljmp
negb
insb
hlt
mov
pop
xlat
call
lock
hlt
fdivrp
xor
loop
mov
xor
pop
loop
arpl
pop
sub
sbb
add
cmpb
gs
mov
jecxz
cmpb
xchg
psubsw
push
dec
leave
xchg
subl
push
stc
mov
aas
xor
call
or
mov
int3
mov
mov
mov
mov
xchg
push
imul
or
jno
ret
mov
adc
pop
mov
pop
xchg
jnp
xor
out
adcb
fisttps
int3
add
mov
inc
aad
xrelease
out
movsb
push
addr16
xor
sub
push
ss
pop
push
mov
sub
nop
aas
mov
or
adc
cmpsb
inc
xchg
fsts
add
stos
movsb
movsb
out
sub
fcoms
pop
cmpsl
sarb
rep
push
pop
lahf
mov
or
aad
shlb
xor
mov
xchg
cld
mov
inc
cwtl
sbb
insb
mov
arpl
outsb
js
jb
je
ljmp
ljmp
push
or
add
add
push
cmpl
dec
mov
je
and
andb
rcr
sbb
call
add
pop
insb
or
xchg
loope
sbbl
popa
push
xor
stos
adc
aad
imul
in
data16
sbb
ljmp
lcall
add
xor
lret
push
sbb
loopne
pop
cmpsl
cmp
mov
inc
adc
and
aas
js
mov
int3
cmp
mov
std
sub
xor
pop
push
enter
push
adc
fs
add
push
mov
sub
jo
dec
adc
hlt
jno
lea
push
rol
push
dec
xchg
sbb
adc
dec
dec
add
and
cmp
or
pop
jmp
adc
mov
pushl
push
push
and
pop
and
mov
in
push
scas
lret
pop
lcall
dec
cs
add
cmp
inc
imul
and
int3
pop
imull
in
xor
jp,pt
cmp
or
dec
in
lret
or
cmp
add
mov
or
jno
inc
xchg
push
insb
cmp
hlt
call
sub
mov
xchg
or
lods
inc
rcr
in
ss
adc
mov
pop
mov
loopne
aas
stos
repnz
or
mov
popf
sbb
mov
mov
aas
push
mov
mov
in
lret
xchg
and
in
in
lcall
repz
mov
mov
jge
adc
ret
sbb
mov
aad
cmp
sub
xchg
push
imul
pop
bound
rcrb
mov
in
aas
push
fists
push
test
sub
out
adc
cmc
xor
inc
sbb
jne
lods
lods
push
movb
cmp
faddp
jo
and
push
adc
rolb
add
ficompl
mov
shl
scas
xor
jmp
adc
push
mov
mov
push
ljmp
sbb
jo
sbb
mov
movswl
pop
lcall
aad
mov
mov
dec
xlat
push
push
mov
jecxz
sbb
lea
mov
push
jg
insl
mov
call
inc
cmpsb
lcall
mov
or
and
add
cmp
loope
add
and
add
and
jle
jne
jl
jnp
sahf
icebp
push
test
jo
mov
cld
jb
add
daa
add
sbb
xchg
pusha
inc
jp
in
adc
fdivrs
sbb
or
sbb
push
xor
icebp
or
add
mov
mov
jne
push
add
add
out
enter
or
outsb
lds
add
push
jecxz
xchg
push
xorl
into
sub
arpl
jmp
jbe
ss
inc
and
out
in
inc
xchg
add
dec
pop
mov
add
add
or
je
mov
xchg
test
jmp
adc
or
loopne
outsb
sub
add
or
inc
and
shl
aaa
xchg
jge
jmp
push
and
ss
jmp
pop
pop
loopne
mov
adc
cli
push
push
sbb
imul
cld
lcall
jl
out
xchg
add
cltd
insb
cld
pop
jp
hlt
adc
test
fnsave
lods
push
mov
push
mov
xor
adc
add
mov
sub
mov
xor
lods
sub
push
xorl
xor
inc
jnp
jge
nop
push
add
aaa
or
test
inc
test
sub
jne
jne
push
loopne
or
lea
and
lods
sti
mov
inc
sub
pop
rolb
hlt
bnd
adc
aam
testb
cli
fbstp
jbe
add
jl
or
jnp
sbb
ss
stos
std
mov
scas
push
xor
inc
nop
cld
cmp
cli
ret
xor
xchg
mov
pop
inc
sbb
or
enter
mov
dec
in
push
add
sbb
pop
adc
sub
push
and
mov
jo
cld
pop
xchg
lret
sub
sbb
lock
adc
repz
and
push
push
loop,pt
push
xchg
cmpsl
cmp
movups
insb
ret
cli
ljmp
jbe
test
mov
mov
add
cmp
mov
mov
mov
pop
sbb
jl
mov
mov
cmp
cmp
sbb
test
subl
push
add
lock
pop
add
int
or
mov
or
pop
rclb
mov
mov
scas
sti
jmp
les
xor
xchg
jmp
or
jae,pt
cltd
mov
or
sbb
cltd
sbb
push
shlb
fucomp
add
pop
xchg
adc
cmp
out
cmp
push
ret
xor
subb
mov
jg
fwait
shlb
cwtl
inc
jecxz
push
mov
pushf
enter
call
lret
ds
arpl
popa
adc
mov
lea
decb
mov
mov
sbb
xor
xchg
sarb
jmp
push
inc
push
mov
and
jne
xor
mov
std
jmp
and
xor
mov
jb
add
in
push
popa
les
or
or
mov
mov
insb
addr16
or
cmpl
jl
sbb
dec
push
adc
inc
and
ret
ss
cmp
fs
pop
add
outsb
sarb
sub
rolb
mov
push
mov
in
test
dec
add
add
dec
sbb
sbb
ret
mov
mov
cmp
loopne
inc
xor
sbb
cmp
jl
pop
jne
add
std
or
or
mov
xchg
mov
cmp
or
add
add
push
or
or
push
lods
mov
push
cmp
xor
jne
loope
cmp
mov
add
push
adcl
mov
adc
addb
add
call
out
fst
into
jne
loope
xchg
ljmp
sbb
enter
shll
mov
or
push
push
mov
nop
add
call
nop
sbb
adc
fldl
mov
mov
mov
sub
inc
imul
mov
lea
stos
fs
adc
fwait
test
xchg
stos
push
filds
sti
jnp
cmp
je
cmp
jbe
dec
pop
xor
movsb
xchg
jne
and
mov
push
jbe
adc
clc
push
and
std
pop
sub
jo
jbe
adc
lock
sbb
push
in
imul
dec
xchg
out
inc
rclb
add
hlt
pushf
cli
adc
jo
sub
and
ret
loop
test
add
loopne
inc
jmp
rolb
xor
lea
stos
fwait
add
xchg
loope
je
test
inc
xchg
clc
mov
mov
rorl
xchg
mov
xor
test
push
aaa
jbe
jbe
fwait
jmp
jl
mov
push
mov
mov
in
fsubr
jo
push
sbb
test
pusha
and
cmp
decl
fsts
or
cmp
push
inc
adc
add
mov
lods
stos
loopne
sti
xor
je
xchg
push
or
lea
xor
dec
jle
test
and
insb
in
aad
cmpsb
mul
stc
push
jl
push
imull
sub
pop
push
lea
or
and
pop
xorb
push
xchg
das
mov
xor
int
mov
cmp
lods
dec
pop
aam
in
aas
mov
cmp
cwtl
popa
fsubrl
call
pop
subl
rep
dec
adc
push
mov
push
pop
fsubs
sbb
jbe
in
lcall
jae
js
xor
dec
push
push
cmpsb
popa
inc
push
fnstenv
mov
movsb
dec
add
or
push
xchg
inc
orl
adc
insl
sub
cmpl
cs
or
xchg
cmpb
mov
int
shrl
cmp
mulb
mov
jmp
outsl
enter
scas
pop
mov
mov
and
cli
mov
jecxz
ja
sbb
pop
test
mov
sub
arpl
jp
hlt
pop
push
adc
mov
pop
add
mov
ss
clc
push
add
and
cmp
sbb
push
fmull
mov
or
mov
jmp
adc
and
and
add
sub
pop
sub
cmp
fs
or
lock
add
push
xorl
dec
mov
mov
lock
push
fdivrl
lea
mov
pop
insb
and
outsb
jne
addr16
imul
push
idivl
dec
cld
jne
into
cmp
addr16
ss
pop
mov
add
push
adc
xlat
pop
and
or
je
int3
jecxz
adc
or
jns
inc
sub
jmp
test
nop
xor
add
pop
lds
sarl
icebp
call
adc
call
inc
shlb
mov
pop
cld
test
jmp
dec
setb
cmp
fdivrs
mov
jle
and
add
movsb
sbb
push
lea
sbb
jne
push
lcall
adc
negb
xlat
js
lret
push
dec
add
fnsave
fxtract
jmp
cmpsl
jae
dec
pop
xorb
movsb
inc
or
lods
popa
pop
outsb
mov
movsl
mov
pusha
movl
ret
in
mov
adc
add
mov
fcompl
lret
and
add
jne
add
push
in
jnp
call
in
movsb
jmp
js
das
xchg
add
stos
into
popf
test
or
dec
push
call
int3
sbbl
cmp
and
icebp
mov
mov
jge
mov
sub
and
sub
je
push
stc
sub
or
fcompl
xor
push
pusha
inc
rolb
mov
fdivl
fdivl
push
or
mov
cwtl
or
popf
clc
jbe
popf
pushf
or
cmp
test
mov
rolb
inc
loopne
hlt
xchg
inc
imul
sbb
mov
inc
mov
aad
addl
add
lock
push
dec
lea
js
mov
pop
mov
orb
push
jbe
jbe
test
aas
mov
icebp
mov
sarb
push
bound
or
mov
mov
inc
inc
dec
jne
movzbl
add
je
mov
pop
xor
loop
push
mov
test
push
mov
rorl
incl
nop
sbb
sahf
test
sub
sahf
shr
flds
and
adc
sbb
fmull
cli
sub
sbb
mov
cmp
and
in
mov
mov
adc
inc
xor
and
xchg
mov
push
nop
mov
arpl
js
shll
add
imul
push
ret
call
jae
xchg
xchg
nop
xor
sbb
add
sub
sub
xchg
add
sub
popa
es
add
or
sarb
test
dec
add
mov
and
stos
inc
je
clc
pop
daa
push
lea
push
mov
push
dec
mull
dec
sbb
std
push
and
mov
xor
enter
insb
arpl
or
jae
xchg
xchg
insl
jae
xor
lret
cmp
mov
mov
jae
or
add
cli
mov
cwtl
js
push
fnstenv
in
push
xchg
insl
jae
inc
push
adc
mov
cmpsb
jae
js
adc
insl
sbb
jae
sbb
xchg
inc
jae
mov
or
je
loopne
or
jae
cmpsb
sub
sbb
jae
jno
mov
xorl
xchg
insl
lods
pop
jae
add
dec
jae
inc
movsl
rorl
and
jae
push
xchg
xchg
aas
in
adc
and
and
rorb
jmp
cli
int3
xchg
pop
popa
pusha
rcll
dec
mov
and
xchg
cli
or
or
xor
out
call
mov
call
xorl
jmp
jmp
mov
dec
aam
inc
out
iret
cmpsb
sti
adc
cmp
call
je
sti
js
call
int3
pop
cmpsl
outsl
sub
xchg
mov
movsb
dec
pop
leave
movsl
pop
cmp
das
jle
decl
inc
push
out
jne
sub
psubsb
add
call
nop
pushf
xchg
ss
imulb
pushl
cmp
push
jge
jmp
sub
sbb
outsb
mov
push
mov
sarb
adc
shlb
pop
cld
test
jo
enter
pop
push
bound
push
sub
fisubl
jmp
sub
inc
jmp
inc
xor
push
add
push
ljmp
push
xlat
xchg
sbb
push
adc
cmp
or
adc
leave
test
adcb
add
push
loope
mov
push
add
or
pop
add
and
inc
fiadds
push
je
arpl
incb
jne
push
push
es
cmpsb
add
xorl
fs
orb
jns
into
ss
out
cltd
shll
xchg
xorb
movsl
loope
push
es
and
inc
lds
xchg
filds
dec
push
les
call
test
rcrb
push
and
int3
xchg
sbb
enter
das
js
pusha
sub
imul
push
imull
push
lcall
sbb
and
cmp
push
shlb
pop
adc
push
aas
push
jns
push
xchg
pop
aaa
and
sub
mov
movsl
adc
add
cmpsl
int3
scas
adc
or
in
call
test
add
cmp
scas
pop
push
push
pop
pop
or
mov
or
nop
rorb
pop
rcrl
outsb
pop
pop
je
pop
aaa
and
push
adc
fwait
les
pop
pop
cmp
and
shl
xor
pop
jge
push
xchg
push
ss
nop
shrb
dec
nop
shlb
sub
push
adc
jb
sar
sahf
and
xor
sbb
shl
push
pop
xor
shrb
or
idivl
cmp
pusha
nop
push
in
nop
je
or
mov
add
jb
mov
mov
outsb
and
sub
je
out
sbb
or
popa
add
addr16
imul
jmp
xor
fldl
hlt
mov
addr16
adc
add
or
repz
daa
pop
nop
add
and
dec
and
sub
and
or
mov
out
sahf
testl
enter
sahf
shl
addr16
fwait
popa
add
or
push
adc
push
add
add
add
ljmp
dec
inc
daa
or
add
sbb
add
mov
loop
or
insb
and
adc
dec
pushf
push
pop
jmp
add
xor
xor
xor
sub
and
xchg
or
lahf
ret
lea
adc
add
pop
add
or
add
add
repz
add
jae
inc
lret
in
pushl
cmp
je
xchg
add
mov
add
xor
pop
push
push
gs
imul
or
sbb
or
or
pop
pop
leave
or
add
or
cmp
push
fisttpll
or
movsl
test
or
pusha
in
fimuls
or
or
push
or
sahf
xchg
sub
pmaxub
mov
adc
iret
enter
adc
cmp
in
add
adc
repnz
adc
adc
cmpsb
adc
adc
adc
xchg
adcl
inc
scas
in
push
push
inc
pop
int
add
and
sbb
xchg
sbb
xchg
adc
sbb
and
mov
sbb
pop
push
sbb
out
sbb
push
sbb
dec
leave
repz
xor
sbb
repz
push
inc
negb
dec
std
seto
jne
add
add
sub
aas
inc
imul
add
addr16
iret
cmp
xchg
and
lods
pop
out
hlt
add
cwtl
xchg
push
in
push
in
imul
adc
repnz
ret
dec
ficoms
in
in
sahf
addr16
sahf
out
mov
roll
in
call
mov
adc
and
mov
cmp
pop
leave
xor
ljmp
jmp
jmp
nop
cmpsb
inc
mov
in
in
in
pop
insl
in
xchg
aad
in
cmp
sub
scas
mov
out
cs
adcl
stos
or
lock
enter
dec
icebp
cmp
das
sbb
or
or
repz
std
hlt
hlt
repnz
pushf
imul
std
xor
out
cmc
cmp
pop
leave
testb
jns
gs
clc
clc
iret
enter
or
xor
and
cli
add
sti
sti
fmul
dec
in
cld
cld
cld
je
cld
push
xchg
mov
shlb
mov
xor
xchg
sub
xor
loop
jmp
dec
sbb
jb
nop
adc
lahf
shll
xchg
or
fwait
or
jecxz
add
jecxz
xor
pop
in
in
push
scas
stos
pop
cmpl
aam
or
enter
out
xchg
scas
and
aad
cltd
sti
add
stos
adc
cltd
or
dec
jmp
jmp
jns
xor
or
and
and
cli
or
cli
out
out
out
xchg
pop
push
and
lock
addl
xor
or
repz
xchg
sbb
add
stc
lcall
div
xchg
stos
pop
pop
divl
or
push
in
ret
xchg
stc
sbb
and
sti
sti
xchg
or
leave
sbb
cmp
jmp
scas
and
mov
cli
or
inc
push
popf
adc
xabort
sbb
dec
loop
loop
pop
push
and
jecxz
inc
andb
dec
nop
cmpsb
rorl
clc
or
pop
insl
out
fdiv
out
xchg
cmp
pop
mov
sub
or
aad
aad
ljmp
in
notl
mull
hlt
imul
in
adc
testb
or
lret
add
xchg
testb
repnz
inc
and
xor
pushf
mov
mov
movsl
test
xchg
mov
stos
mov
cmp
cmp
cmp
sbbl
or
sub
cmp
setb
push
loope
cmc
cli
hlt
mov
xlat
inc
scas
push
cmpsb
add
lock
inc
test
mov
push
mov
pop
lcall
loope
loope
inc
scas
mul
jp
cmovnp
and
pop
hlt
cmp
xor
adc
sbb
in
sub
repz
pop
jo
aam
mov
sub
or
dec
push
arpl
mov
sbb
cs
or
arpl
mov
sbb
cmpsl
repnz
adc
or
mov
icebp
das
xchg
leave
and
repnz
xchg
pop
pop
repnz
cld
icebp
cmc
cmc
mov
icebp
mov
xchg
mov
cwtl
icebp
rcrb
or
pushf
mov
xchg
cmp
cmp
icebp
movups
push
daa
or
or
add
jmp
shrl
andb
push
sub
ffreep
push
inc
pop
das
push
or
inc
cmp
xchg
addr16
cmp
stos
adc
add
pop
pop
out
mov
pop
rol
pcmpeqw
addr16
pop
xor
jmp
xchg
inc
and
jmp
fs
cmc
jmp
mov
loop
dec
int3
dec
push
nop
push
jns
jl
and
dec
push
aaa
or
push
ds
roll
scas
dec
adcl
repz
repz
mov
dec
jae
insb
sbb
push
jns
fldcw
push
in
xchg
gs
dec
movsb
repz
out
or
mov
add
pop
add
dec
mov
add
ror
fistps
lea
inc
cmp
and
and
sub
lret
test
and
frstor
shlb
aaa
or
xchg
mov
outsb
xchg
lods
jle
cmp
dec
jmp
je
sbb
push
xorb
xchg
inc
jmp
mov
or
arpl
inc
sub
push
sub
and
cmp
inc
inc
lock
sub
adc
sub
xlat
pop
mov
mov
stos
pop
sub
add
sbb
push
lock
call
xlat
es
add
mov
adc
imul
jmp
xchg
xor
add
loope
imul
inc
ds
call
test
jmp
jno
pusha
cmp
pop
insl
adc
jmp
adc
xchg
movsb
ret
inc
or
arpl
pop
inc
sub
push
jo
adc
popf
adc
mov
das
pop
xor
loop
andl
adc
adc
adc
popa
in
add
shrl
dec
cli
aas
cmp
inc
sub
push
cmp
int
jb
sbbl
push
cmp
movb
jg
shr
inc
add
ror
xchg
push
enter
nop
inc
add
xchg
pop
push
pop
leave
sub
sub
add
data16
arpl
add
je
inc
arpl
popa
dec
xor
inc
test
nop
les
adc
xchg
push
mov
fstpl
pop
inc
or
inc
dec
mov
add
pop
xor
pusha
push
add
pusha
lods
adc
cmp
inc
and
xor
adcb
int3
inc
xor
or
sbb
and
pop
inc
or
je
cmp
sarb
andl
rcll
mov
clc
add
pop
cmpsb
push
fimuls
pop
movsl
xchg
outsl
adc
mov
add
cmp
mov
ss
push
inc
in
push
pop
loop
push
and
popf
addr16
inc
enter
pop
inc
je
push
sub
sti
iret
sbb
add
add
dec
push
push
push
add
dec
leave
xor
scas
and
push
or
rcl
add
push
sahf
sbb
adc
test
xchg
add
sbb
jnp
mov
xchg
push
mov
in
adc
rcrb
arpl
add
mov
xor
ds
test
aaa
lcall
rcll
push
in
inc
jb
outsl
pop
and
rcl
stc
out
xor
pop
xchg
ss
hlt
mov
sbb
sbb
out
or
and
and
inc
or
lds
push
pop
inc
inc
aaa
test
mov
pop
and
nop
push
and
fstl
push
adc
in
in
push
cmp
sub
jb
in
sbb
movsb
push
dec
lret
xchg
cld
push
out
or
jecxz
es
mov
cmp
push
or
mov
repz
dec
ja
push
mov
inc
push
sbb
add
dec
adc
xchg
push
push
adc
xor
orl
pop
fwait
and
push
fbstp
push
inc
sub
and
scas
inc
inc
ds
cmp
push
cmp
and
mov
jmp
int
jg
push
jmp
in
mov
aam
nop
or
and
add
sub
movsb
adc
ret
in
cmpsb
loopne
adc
lods
dec
push
or
push
push
xchg
push
loopne
ja
add
dec
inc
mov
inc
add
mov
nop
ds
inc
ds
xlat
std
dec
sbb
push
dec
inc
adcb
xor
push
or
inc
ljmp
mov
xor
cmp
cmp
jmp
dec
sti
push
popf
push
push
cmp
mov
inc
jmp
cmp
mov
leave
adc
shrb
xor
mov
push
xor
loopne
ds
add
and
in
test
ficoml
mov
or
inc
fcomps
xor
and
add
in
and
clc
mov
call
jns
adc
push
inc
pop
jns
cmc
pop
nop
orl
inc
inc
add
nop
inc
inc
pop
scas
sub
or
decl
dec
sarl
scas
sti
hlt
jo
add
jle
add
add
and
push
cmc
cs
or
add
xor
insb
psubusb
jle
and
or
je
enter
loop
and
movsb
cmpsl
dec
pop
aam
add
jle
cmp
imul
out
push
dec
or
add
and
add
nop
jb
movsl
adc
and
pop
push
xor
loopne
pop
lret
movsb
sti
shr
data16
sqrtpd
ds
sub
pop
or
or
enter
pop
pop
iret
dec
fisubrl
bound
pusha
push
cmp
in
aaa
popa
aas
shlb
shlb
sbb
xchg
insb
scas
popa
je
sub
xchg
out
stos
and
add
mov
or
inc
loopne
inc
aaa
push
test
cmp
movl
mov
into
dec
dec
pop
adc
or
daa
dec
mov
pop
es
sub
cmp
xchg
movsb
daa
mov
push
dec
shl
and
xor
rcrb
xor
and
xor
or
mov
loop
sub
xchg
and
mov
sub
leave
adc
nop
cmp
add
adc
leave
rcl
rorl
adc
push
loopne
pusha
or
leave
push
test
adc
leave
and
addb
jb
leave
or
sbb
sbb
repz
mov
js
je
loopne
mov
mov
xor
ja
sbb
lahf
call
pop
pop
enter
repnz
fs
jno
movsl
jp
mov
bsr
or
pop
les
push
loope
rcl
je
addb
ljmp
cmp
or
adc
adc
stos
addb
popf
pop
leave
push
add
push
inc
inc
mov
addl
or
mov
xor
or
mov
jae
sub
push
inc
inc
leave
inc
leave
loopne
mov
addb
inc
inc
addl
aaa
inc
leave
mov
push
leave
imul
leave
les
leave
xlat
ss
sbb
adc
adc
popl
sbb
xchg
dec
adc
shrb
rol
rolb
sbb
leave
rcrb
dec
inc
leave
jno
and
stos
mov
mov
push
dec
adc
dec
sbb
adc
nop
add
leave
addl
inc
inc
push
cmp
sub
add
mov
xchg
xchg
fstpt
or
dec
sbb
sub
fldl
add
mov
xor
out
add
leave
mov
imul
sbb
jno
or
daa
leave
andl
dec
iret
pop
dec
add
leave
imul
jbe
push
ds
pop
mov
daa
rcl
cmpl
sub
in
and
jb
add
leave
push
mov
mov
add
je
leave
add
shlb
sub
leave
or
aam
rolb
popa
cs
pushf
add
add
inc
fnsave
das
sbb
or
xor
sbb
jmp
and
rcl
dec
adc
leave
sub
leave
xor
sub
dec
cmp
aam
sbb
add
mov
push
add
orb
fwait
or
imul
mov
leave
push
aad
xor
bswap
out
adc
or
cmp
jae
repz
add
loopne
test
sbb
lock
xor
or
jo
jb
or
int
jl
cmp
ss
movsl
xor
xchg
ja
pop
mov
cmp
ret
or
lods
xchg
insb
jecxz
sbb
leave
push
nop
jb
ss
sbb
ror
pop
push
inc
pop
ror
pop
imul
cmc
mov
or
xor
sub
add
cld
add
sub
outsb
sbb
mov
je
and
or
add
cmp
jmp
add
cmp
in
push
push
xor
mov
arpl
imul
jp
out
dec
push
call
push
push
les
mov
leave
push
add
add
add
add
inc
or
xchg
mov
rcrb
mov
rolb
mov
mov
sub
leave
mov
inc
inc
inc
inc
xor
cmp
inc
inc
inc
inc
inc
push
pop
push
inc
inc
inc
dec
dec
pop
cmp
je
cmp
adc
enter
push
call
inc
add
lods
mov
rolb
daa
adc
loop
sbb
leave
sub
ss
xorl
jno
addr16
leave
jmp
xor
xor
insb
ja
push
les
xor
xor
daa
icebp
mov
repz
mov
in
pop
xchg
movsb
and
jle
nop
leave
mov
out
push
mov
xor
shlb
fimull
ret
sub
in
outsb
push
mov
inc
push
xchg
adc
jmp
jbe
sbb
or
ret
mov
pop
movsb
push
movsl
pusha
add
outsl
cmpsl
iret
popf
test
jbe
ljmp
mov
ja
addr16
int3
add
push
fs
ret
jl
dec
inc
pop
inc
scas
add
pop
push
nop
add
push
mov
movsl
gs
xchg
sbbb
xchg
add
fs
test
jae
mov
test
les
sbb
or
pop
or
mov
mov
mov
and
jo
pushf
pop
fldcw
fmull
sbb
inc
rcrb
pop
enter
jns
or
add
inc
sarb
dec
enter
inc
rorb
je
add
js
mov
jmp
mov
add
popf
mov
es
leave
insb
cmp
aam
xor
sbb
fdivrl
lcall
das
ljmp
push
daa
pop
cwtl
xchg
inc
inc
sub
cmp
mov
mov
ret
out
or
or
leave
xchg
call
mov
adc
jl
rolb
movsl
aam
in
cli
fs
sbb
add
stc
jmp
rorb
rclb
jmp
jo
dec
xlat
adc
test
xchg
pop
jmp
jmp
jae
pop
leave
xchg
es
or
sub
add
add
adc
cs
fwait
shrl
fadd
nop
ss
hlt
out
rcll
cmp
adc
ds
clc
add
negb
and
lcall
push
jl
sbb
dec
in
dec
or
sub
mov
stc
push
movsb
xorl
call
popa
xor
and
rcl
ja
jbe
fimuls
call
xor
stc
jmp
and
inc
mov
repz
movsb
mov
xor
mov
and
cmc
pusha
mov
add
mov
stc
rcrb
lret
stc
sarb
mov
sbb
dec
mov
stc
inc
pop
xor
shrb
xor
rclb
push
stc
jnp
add
mov
lahf
xchg
aam
dec
flds
jo
push
clc
xor
sbb
or
xor
or
cld
inc
loopne
stc
and
leave
pusha
cmp
inc
imul
stc
push
mov
xchg
sbb
shll
xlat
pusha
dec
ja
xchg
int
mov
dec
call
rolb
sub
mov
dec
push
int3
sub
push
adc
inc
push
and
jae
nop
or
push
inc
sub
mov
mov
and
inc
jne
frstor
insb
jo
push
inc
or
call
push
and
in
jne
push
lea
jb
and
shlb
outsb
push
nop
fs
push
jmp
push
mov
sub
mov
mov
push
aaa
pusha
add
or
mov
sub
push
test
jmp
les
mov
sbb
jae
lea
push
roll
fstl
inc
add
push
mov
call
xchg
mov
movsb
add
incl
jl
enter
je
add
dec
data16
or
addl
pop
inc
push
push
adc
xchg
push
das
adc
jp
lds
mov
sbb
adcl
pusha
addl
pop
push
ja
dec
xchg
pop
push
jns
push
cmpl
pop
inc
sub
cmp
rolb
repz
out
call
cmp
and
add
cmc
xchg
nop
pop
dec
adc
cmc
adc
out
mov
push
ljmp
sub
inc
pop
adc
push
fwait
add
cs
mov
add
xlat
push
cmp
pop
aam
mov
inc
mov
sbb
jge
xor
push
inc
call
sbb
jle
sbb
add
add
jne
mov
dec
aad
cmp
dec
jge
fisttpll
or
push
movb
mov
jmp
pop
cmp
add
cmp
inc
jmp
dec
jmp
xor
jb
ret
inc
inc
pop
arpl
jmp
mov
inc
inc
pop
je
pop
es
push
adc
sbb
cmp
or
jbe
mov
shr
fs
stc
add
adc
pop
mov
push
push
mov
or
je
loope
cwtl
inc
cmp
and
or
sarl
leave
or
fistl
jp
into
call
push
test
jmp
add
enter
popa
adc
push
popf
pop
pop
and
cwtl
or
and
dec
cmp
jp
sbb
cmp
aas
dec
popf
enter
sbb
int3
add
aaa
or
add
mov
add
dec
xorl
loop
cld
mov
sahf
call
adc
test
xchg
shll
inc
inc
fwait
lcall
pop
jb
pop
rorl
sbb
ficomps
negl
jge
push
push
or
inc
cmp
je
cwtl
xchg
aam
pop
xor
and
or
outsb
cld
jmp
cmp
xor
or
push
adc
push
add
ret
push
sar
inc
push
xchg
mov
adcl
jae
cmp
shlb
hlt
dec
sub
inc
fistps
inc
adc
sub
or
mov
pop
cmp
popf
nop
mov
mov
dec
aaa
dec
nop
sbb
xor
fadds
push
xor
xor
inc
pop
pop
or
and
test
stos
lret
cmc
mov
mov
xor
ret
xchg
mov
cwtl
add
sahf
lods
ret
adc
in
push
or
call
call
out
shlb
dec
iret
or
popl
push
xchg
iret
jp
imul
adc
inc
dec
inc
out
iret
dec
adc
or
into
fnop
ret
jo
ror
dec
adc
xor
js
dec
xor
mov
je
rol
push
inc
add
mov
sbb
push
cmp
iret
mov
orl
dec
inc
pop
xchg
aas
xchg
xchg
or
cs
lret
lret
test
jae
pop
sarb
rcrl
fldcw
xlat
cmc
fists
xchg
in
mov
mov
push
cmp
push
xor
xchg
es
pop
cmpsw
or
sub
loopne
sbb
pop
movsb
mov
or
les
push
xchg
daa
or
xchg
ret
pop
cmp
xchg
push
lea
repnz
sahf
fcoml
or
jge
xchg
insb
ss
adc
divl
pop
inc
out
ds
pop
add
push
out
shrl
mov
xor
cld
sub
ret
add
xchg
xchg
and
jno
push
lret
sbb
dec
or
pop
loop
xor
jae
mul
or
xor
sarl
mov
jo
shlb
shlb
pop
jae
aas
mov
sti
and
pop
jmp
jle
mov
pop
and
inc
mov
idivl
add
je
mov
and
movl
rclb
mov
punpckhwd
outsl
loop
xor
cmpsb
jne
js
add
popa
xor
xchg
mov
rorl
xor
jmp
cmovb
push
sbb
stc
rcl
mov
or
cmp
orl
sti
and
ja
shlb
and
repnz
in
dec
sbb
add
push
push
jb
mov
movsl
rol
push
sub
and
rorb
sbb
and
test
push
pusha
nop
add
js
fsubp
sub
orb
xchg
and
shll
and
scas
shl
and
cmp
test
push
pop
inc
cs
or
push
fs
pop
inc
pusha
or
xor
push
test
rcl
xor
add
xchg
in
cmp
loopne
mov
fisubs
clc
and
push
jmp
nop
cmp
jns
mov
incb
adc
inc
xor
or
addr16
add
cmp
in
ret
inc
add
enter
add
add
jbe
sbb
adc
ss
xor
fs
mov
in
or
pushf
clc
add
repnz
xor
mov
nop
xor
mov
lea
fcom
bound
lret
jecxz
rcrl
sbb
inc
sarl
pop
mov
jmp
push
lret
mov
xchg
and
nop
sbb
push
mov
jb
jo
sbb
dec
pop
push
adcb
movsb
push
mov
dec
add
xor
pop
lcall
lock
lods
in
xor
mov
and
fwait
pop
xchg
adc
ss
ret
loopne
in
sub
in
pop
movsb
sbb
ret
aad
and
mov
in
and
in
in
orb
jle
jo
test
mov
jmp
pop
or
jne
adc
divl
popf
loopne
sub
rol
mov
and
sarb
test
jb
fldt
mov
lret
call
mov
scas
stos
insb
call
cmpl
dec
call
add
fstpt
dec
mov
addb
scas
cmp
push
dec
mov
dec
dec
dec
sub
or
cmp
clc
adc
dec
hlt
call
popf
xor
mov
and
dec
call
inc
out
push
cs
mov
addb
pop
and
ja
mov
aam
lods
jo
test
jbe
pop
sub
fldenv
lahf
xor
pop
adc
or
cmpl
cli
cltd
js
push
xchg
mov
lahf
cmpsl
insl
rolb
je
push
mov
adc
mov
jmp
adc
mov
mov
add
sbb
pop
xchg
nop
or
jo
pop
ds
mov
push
xchg
push
add
pop
sbb
xchg
shr
pop
mov
jb
aas
sub
call
xchg
pop
mov
mov
adc
xchg
addl
rorb
add
or
ljmp
call
lods
inc
adc
pop
daa
push
xor
push
cwtl
test
insl
or
mov
mov
scas
data16
push
and
fnstsw
shlb
cmp
sub
stos
mov
lods
movsl
push
les
adc
jl
ss
push
mov
test
mov
jno
push
mov
int3
outsb
xchg
mov
push
cmpsl
and
call
pop
push
push
push
lret
mov
in
scas
movl
lret
dec
pop
adc
or
xor
dec
and
cmp
mov
mov
mov
lret
push
test
es
aam
add
inc
push
pop
fisttps
pop
lret
dec
hlt
push
ret
xchg
and
ret
mov
sbb
pop
and
mov
mov
test
sbb
nop
xchg
mov
cmpsl
sub
pop
sbb
push
int3
sbb
cmp
sub
negb
dec
mov
cs
roll
adc
aad
xor
lret
xchg
ud1
sbb
dec
push
call
adc
xor
sbb
push
pop
rcll
push
mov
mov
sbb
and
test
shlb
sbb
or
xchg
lds
mov
inc
es
mov
aaa
call
push
sbb
imul
ss
mov
test
push
inc
sub
fxch
shrb
fdivrs
sbb
sbb
xchg
adc
mov
sbb
sub
pushf
pop
inc
ja
sub
mov
sub
hlt
loop
dec
adc
push
push
sub
jp
inc
sub
cs
sbb
test
add
movsb
xor
add
dec
lea
inc
sbb
sub
xchg
sbb
jbe
adc
adc
mov
jl
sbb
pop
add
dec
adc
sbb
shl
and
pusha
push
mov
arpl
sub
mov
sbb
sbb
adc
inc
call
inc
enter
mov
sbb
mov
outsb
sub
adc
jmp
out
test
test
lahf
jg
adc
xchg
sbb
sbb
xchg
sbb
add
and
fwait
adc
sbb
adc
imul
sbb
ret
fistpl
dec
shrl
int3
lds
sbb
jmp
call
in
xor
sub
outsb
scas
adc
mov
movsl
or
jbe
or
or
ficomps
subl
mov
adc
mov
and
inc
and
ret
push
int
cmp
dec
lret
and
sbb
dec
sbb
cwtl
mov
adc
cs
loopne
fdivl
dec
inc
nop
cmp
push
sbb
mov
call
or
scas
popa
call
inc
add
sti
sbb
rcr
or
test
adc
or
mov
dec
les
into
sti
pop
and
cmp
imulb
andb
sub
ret
sbb
pcmpeqb
cmp
pop
dec
cmp
xor
cwtl
cmp
sub
lods
inc
sbb
arpl
sti
pop
lea
je
sti
or
or
idivb
xchg
mov
fiaddl
pop
xchg
addr16
cmp
or
mov
in
call
popa
jae
les
iret
mov
mov
dec
cs
aas
sbbl
push
push
jns
test
and
fs
pop
jae
pop
enter
mov
sbb
add
cmpsl
or
hlt
add
push
xor
mov
push
cmp
mov
pop
test
xor
sti
mov
insl
sbb
xchg
lcall
xor
fwait
mov
fcoml
xor
xor
test
push
push
bound
cmp
mov
adc
adc
adc
iret
push
neg
or
and
add
gs
cwtl
insb
dec
pop
add
or
jb
jae
rcl
imul
and
push
jno
sbbb
fwait
jle
inc
enter
pop
xor
rclb
add
and
add
mov
xchg
push
mov
repnz
xor
ljmp
sbb
pop
xor
push
jl
mov
xchg
mov
xor
movsl
inc
pop
mov
call
or
inc
mov
cmp
mov
inc
xor
shlb
inc
popa
fcomps
pop
mov
imul
pop
cltd
push
repnz
in
mov
adc
xchg
rorb
dec
sbb
and
cmp
lock
test
testb
inc
div
inc
adc
adc
xor
cwtl
dec
enter
or
mov
adc
cmpsb
rclb
aaa
xchg
mull
push
fcoml
push
mov
mov
push
ret
push
and
mov
test
rolb
inc
add
or
icebp
mov
mov
adc
jmp
nop
mull
testl
testl
and
negl
or
mov
mov
call
add
sbb
sbb
xor
dec
and
iret
stos
sub
testl
adc
frstor
cmp
xor
je
ss
fistpl
push
or
inc
or
jg
lret
call
adc
das
dec
cmc
fstl
call
movd
repnz
call
sub
add
call
das
push
xor
lock
call
sub
cmp
fcomps
std
and
dec
call
mov
lods
andps
movsl
pop
call
lret
xchg
das
pop
pusha
call
push
repnz
call
je
gs
pop
test
je
jl
push
popf
in
imul
mov
dec
xor
push
mov
pop
sub
mov
jb
in
fxam
push
stc
mov
adc
cs
dec
mov
lret
mov
xchg
mov
dec
in
jle
jae
in
mov
call
push
in
inc
aam
dec
in
mov
mov
sbb
adc
add
in
add
mov
leave
gs
loope
adc
pop
adc
sbb
pop
sub
stos
and
movsl
jb
lahf
sub
mov
jle
jae
lret
cmp
pop
inc
pop
sbb
inc
gs
dec
ja
push
test
push
adc
and
or
pop
add
adcb
jo
scas
adc
inc
in
push
test
xchg
xchg
data16
xor
sahf
pushf
mov
and
mov
je
data16
js
rorb
int
dec
xor
xorb
test
mov
jns
mov
cli
cmp
int
dec
mov
mov
inc
push
xor
lods
mov
cli
mov
dec
jae
mov
movl
rcrb
je
pop
mov
pop
pop
xchg
and
xorb
xchg
les
mov
test
test
or
and
dec
push
mov
inc
pop
pop
mov
aaa
or
sbb
dec
and
sbb
pop
sbb
inc
lods
and
into
jp
mov
adc
sbb
pop
test
sbb
jmp
dec
movsb
adc
or
inc
xor
add
add
pop
add
fmuls
and
jae
inc
sbb
cmp
xchg
push
adc
sbbb
adcb
sbb
inc
cld
fstl
rcrb
or
lret
inc
jae
xlat
or
stos
mov
pop
sbb
pop
adc
das
inc
sub
and
shlb
call
sub
js
adc
adc
les
dec
dec
mov
push
jmp
push
or
mov
cs
jo
jge
mov
insb
push
mov
jne
sub
add
pop
gs
scas
mov
sub
sbb
aam
mov
stc
mov
mov
and
jge
je
pop
test
pop
or
dec
mov
jne
sbb
push
mov
xchg
or
cs
and
scas
xchg
or
add
sbb
loope
mov
es
fildll
adc
adc
fs
or
jmp
fs
ret
push
addb
mov
stos
xchg
adc
or
mov
sbb
jne
push
push
push
mov
outsb
mov
and
ljmp
sub
lret
cmp
aam
sbb
mov
mov
cmc
pop
mov
mov
cli
mov
mov
ljmp
adc
cltd
jecxz
pop
mov
xchg
adc
mov
movl
movl
sub
and
lods
pushf
dec
outsb
and
fwait
and
push
jp
sub
and
je
je,pn
cmp
jo
push
call
test
push
xchg
stos
dec
push
ja
movsb
hlt
ret
movl
mov
or
test
divl
cmp
je
cmp
pop
dec
dec
mov
pop
xchg
shrb
adc
movsb
movl
dec
call
nop
xchg
or
jns
and
sbb
sub
mov
cmp
cwtl
xor
cmp
xor
and
in
pop
ja
sub
and
or
sbb
fwait
shlb
dec
or
inc
jmp
mov
out
rcrb
stos
rorl
je
and
push
pavgb
adc
sti
call
adc
scas
mov
and
adc
and
shlb
adc
imul
mov
or
push
mov
dec
js
jmp
cs
xchg
sub
adc
lods
je
jecxz
out
testb
sub
ret
adc
scas
int
nop
out
cmp
mov
add
jl
dec
sahf
adc
sbb
add
rcrb
sbb
push
and
mov
inc
and
add
inc
xor
leave
push
dec
stos
test
and
pop
push
pusha
int
pusha
mov
add
nop
test
cmc
lods
add
xor
cmc
mov
sbb
mov
mov
or
cmc
adc
repz
sbb
in
or
cmc
mov
int
sbb
jge
adc
dec
cmpsl
gs
and
mov
popl
jns
jno
mov
negl
call
add
lea
adc
stos
xor
mov
or
mov
or
lods
test
mov
push
xchg
nop
test
xlat
rol
stos
cmpsb
mov
mov
xlat
add
aad
je
xlat
nop
cmpsb
sub
xchg
cwtl
adc
or
test
jl
popa
mov
adc
pop
mov
xchg
pop
inc
cmp
push
mov
xor
inc
xlat
mov
mov
push
push
nop
dec
imul
xor
orb
dec
push
mov
xlat
test
xlat
push
sbb
aam
mov
add
jmp
arpl
or
adc
stc
dec
inc
retw
push
cld
add
and
and
mov
bound
insb
movsb
pop
int
push
pop
shr
out
push
outsl
dec
sub
jp
push
outsl
mov
xchg
nop
mov
nop
dec
mov
imul
test
inc
push
hlt
push
cltd
and
and
mov
mov
push
cs
pop
outsl
mov
cmp
add
call
sub
sbb
fisttpll
pop
and
add
test
pop
lea
fmuls
inc
pop
pop
and
loopne
sbb
repnz
jp
cwtl
xchg
inc
cmp
pop
fwait
and
adc
pop
pop
lea
pop
inc
dec
andl
aaa
roll
das
xor
pop
les
push
inc
pop
adc
rcrb
mov
ret
add
cmpsl
cmp
pop
and
push
cmp
pop
scas
push
lcall
data16
loopne
push
mov
cmp
push
xor
pusha
pusha
mov
dec
push
xor
rcrb
sbb
sub
es
xchg
adc
push
adc
nop
mov
push
pusha
pusha
nop
popa
jnp
add
jo
pusha
cmpsb
and
call
lods
rcll
mov
fildl
push
or
daa
pop
in
fldcw
test
mov
jecxz
mov
ficoml
cmp
adc
mov
movsb
sbb
sbb
sahf
jg
sbb
mov
and
jmp
jp
inc
sub
xchg
xchg
push
add
push
and
pop
xchg
enter
inc
dec
xor
sbb
push
cs
mov
mov
pop
and
out
and
mov
xor
or
daa
mov
fs
mov
out
inc
xchg
and
push
xchg
pop
nop
roll
push
enter
mov
insb
xchg
cmp
pop
fdivl
pop
dec
push
xchg
out
xor
aam
stos
imul
sahf
sbb
adc
inc
or
dec
push
add
hlt
enter
push
mov
dec
aaa
jg
sub
jg
fiadds
es
mov
iret
jle
mov
popa
push
popf
push
xchg
adc
and
mov
out
call
pop
pop
sub
mov
push
mov
scas
movsb
in
jno
pop
fstl
dec
ja
pop
ret
or
inc
ret
inc
loope
js
adc
insb
movsl
hlt
add
jb
adc
mov
dec
aam
dec
ja
cmp
jne
fistpl
adc
adc
mov
gs
stos
inc
ss
test
or
movsl
roll
stos
and
loope
mov
sub
add
sub
xchg
sub
sahf
adc
mov
jo
repnz
xlat
fwait
push
int3
xor
add
stos
clc
dec
rdtsc
mov
mov
lea
call
mov
movsb
cmp
les
insl
adc
inc
and
sub
push
sbb
shl
or
xchg
and
sbb
ret
fcoms
sbb
lcall
adc
xlat
ret
test
icebp
test
stos
daa
inc
add
imul
mov
or
add
mov
enter
mov
cmp
dec
mov
or
xchg
add
mov
int
fildl
test
mov
xorb
push
daa
add
mov
enter
daa
cmp
add
daa
adc
dec
daa
stos
roll
mov
or
or
jbe
sar
push
mov
or
add
iret
sbb
sbb
cmp
mov
push
sbb
out
sahf
out
sbb
ret
sahf
out
sahf
mov
push
ds
int
jns
or
sbb
aam
inc
loopne
push
sbb
cmp
loop
sahf
out
out
push
inc
push
push
sub
push
nop
repz
sti
movsb
push
push
xchg
jl
push
cmp
cmp
je,pt
push
repz
cmp
sbb
out
sahf
out
push
fmulp
mov
sahf
xchg
mov
ret
into
sbb
incb
add
cmp
cmp
loop
sbb
out
aam
mov
sahf
mov
sbb
pushf
ds
repz
lret
or
jns
out
and
pop
out
sahf
out
test
jns
mov
fsubrp
decb
sarb
test
shl
jns
adc
jb
jle
sahf
mov
daa
out
cmp
loop
clc
adc
sub
cmp
jns
mov
aaa
je
fs
push
cmp
mov
push
daa
pop
mov
jbe
aad
popf
mov
lahf
jae
jbe
push
cwtl
imul
cmpsl
insl
mov
iret
dec
test
aad
repz
add
jbe
push
scas
test
pusha
loope
and
ss
add
sbb
ret
jo
mov
xchg
push
cmpsb
pop
pop
jle
sub
inc
push
jge
xor
or
dec
push
dec
ja
lcall
mov
push
outsl
push
push
ja
pop
xor
pop
loop
mov
lahf
xlat
imul
js
stos
dec
jb
xor
xor
pop
or
aaa
outsl
ss
xor
lds
scas
add
notb
sub
add
xchg
cmp
mov
sbb
ficoml
cmp
testl
repnz
cmp
lahf
mov
ret
fwait
and
sub
pusha
add
mov
dec
scas
cmp
push
pcmpeqd
push
cmpl
or
mov
sub
or
sti
aaa
je
les
adc
outsl
rcrl
and
fisubs
add
mov
mov
fidivl
aaa
pushf
mov
aas
ret
je
cmp
nop
sbb
arpl
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
popa
lret
add
dec
fcoml
push
cwtl
repnz
rorl
xor
sar
rcrl
lods
pop
dec
imul
adc
call
mov
inc
jne
outsb
je
fiaddl
js
jg
jnp
inc
xor
sub
sub
std
cmp
sub
inc
inc
xor
xor
xor
jge
idivb
scas
xor
xor
inc
xor
xor
ss
xor
cmp
sub
mov
fdivl
cmp
xor
clc
inc
inc
xor
mov
adc
lahf
shlb
ret
cmp
test
push
jo
or
lock
xchg
inc
inc
movsb
ss
outsl
mov
push
xor
or
push
and
inc
aaa
inc
push
push
mov
inc
pop
dec
addb
subl
dec
sbb
arpl
xchg
mov
inc
push
dec
and
cmp
ss
in
mov
add
xor
and
dec
cltd
cmp
dec
outsl
mov
dec
dec
add
loopne
ret
pop
adc
push
fwait
popa
pop
inc
dec
hlt
imul
jne
dec
pop
push
imul
jle
out
inc
out
adc
push
sub
out
cmp
in
gs
ds
lods
sahf
add
psraw
fsubr
cmpsb
push
hlt
mov
dec
mov
or
jb
adc
or
lds
fiadds
insb
outsl
xor
imul
lods
insb
loop
movsb
inc
je
push
push
mov
and
inc
cmp
add
dec
xchg
sbb
xchg
mov
mov
ljmp
mov
xchg
pop
imul
syscall
insb
insb
mov
xchg
and
outsb
ret
pop
js
les
jmp
adc
inc
and
inc
adc
jle
or
pop
clts
mov
roll
xchg
lock
gs
add
xchg
sbb
pop
inc
sbb
or
inc
out
xlat
pusha
push
and
mov
daa
and
inc
push
test
cmpsb
push
imul
add
jp
mov
scas
je
dec
fs
push
jo
mov
nop
gs
cmp
insb
ret
data16
popa
fs
jo
mov
pop
pop
jmp
dec
subb
mov
dec
movsb
jmp
pop
dec
jae
outsl
push
pop
arpl
inc
cs
push
push
push
add
lcall
je
or
push
popa
push
ss
imul
pusha
mov
nop
mov
mov
pop
add
or
aas
rorb
aas
inc
mov
push
add
inc
add
inc
rolb
add
ret
add
push
and
sbb
mov
cmovbe
mov
xchg
pushf
add
sbb
push
mov
cmpsl
or
sbb
dec
push
nop
sub
sbb
add
dec
adc
push
loope
fadds
adc
sbbb
or
add
cmpb
mov
das
push
adc
out
scas
xchg
xchg
adc
push
sbb
iret
repz
sbb
sbb
call
std
sbb
push
das
push
pop
int
pop
pause
cld
and
cli
js
int
sub
jns
stc
jp
push
mov
cmp
cld
fdivr
mov
out
ret
enter
xchg
popf
sbb
mov
mov
and
push
aad
popa
scas
lods
test
xor
dec
xchg
sbbb
repz
cmp
mov
ret
scas
es
xor
or
out
sahf
out
or
in
int3
sbb
jns
les
add
pushf
push
xchg
call
repz
cmpb
iret
rep
push
sahf
out
sahf
pop
push
push
dec
dec
inc
repz
jns
cmp
xor
iret
repz
sub
and
sbb
cmp
repz
adc
add
sahf
out
add
or
hlt
call
enter
out
sahf
nop
jo
xor
lock
cmp
repz
mov
insb
inc
stc
cmp
repz
adc
cld
push
out
sahf
cmpsl
fcom
les
js
sub
aam
mov
xchg
jo
sbb
add
out
sbb
push
int3
push
mov
adc
inc
cltd
les
pop
or
pop
sbb
in
mov
inc
jb
add
cmp
xor
sub
fidivs
sub
inc
inc
add
adc
mov
push
inc
dec
cmp
testl
sub
sub
mov
adc
inc
or
out
popl
jecxz
sbb
inc
sub
cmpsb
xor
push
sub
adc
out
pop
sbb
xchg
dec
mov
pop
sbb
xchg
es
dec
push
ja
push
mov
xlat
adc
adc
jae
push
shrb
add
adc
dec
insl
jae
cmpl
jbe
or
ljmp
shrb
mov
pushf
andb
add
ljmp
rolb
ret
jns
data16
andb
sar
mov
mov
push
xor
xchg
cld
inc
inc
mov
pop
subb
jnp
out
mov
inc
cmp
pop
jne
pop
andb
stc
sbb
lahf
xchg
jne
imul
mov
pop
dec
les
ret
arpl
imul
cmp
jo
push
or
and
mov
pusha
inc
push
mov
xadd
pop
filds
push
insb
das
inc
pop
mov
inc
dec
outsl
jl
add
cmpsl
ja
lahf
js
cs
jg
das
loopne
es
lds
xchg
loopne
ret
push
in
ds
push
inc
sub
mov
mov
mov
xor
and
mov
insb
pop
xor
das
sarb
jg
fsubrs
cltd
nop
pop
push
cmp
mov
mov
mov
ret
sete
dec
mov
xor
data16
ljmp
add
leave
and
xlat
jns
pop
cmpsl
nop
pop
mov
sti
cltd
or
push
lcall
inc
cmp
dec
lret
les
mov
stos
lea
pop
push
popf
jl
jno
shll
pushf
push
cmpsb
jg
mov
xchg
mov
dec
shlb
adc
aas
vmptrst
mov
aas
mov
cmp
iret
adc
inc
jb
shlb
sbb
mov
push
aam
lea
loope
adc
fs
loopne
fidivrs
movsb
dec
adc
cmp
lea
loopne
daa
cmpsl
jno
cmp
push
dec
and
loope
cmpsb
in
push
xor
push
and
imul
xor
inc
je
dec
imul
inc
aaa
xor
testb
arpl
notl
insb
push
lcall
fs
dec
dec
loop
xor
push
push
add
push
outsl
ja
xor
push
push
jle
jb
cmp
push
sub
add
faddl
daa
movsb
and
rcr
xchg
and
add
add
orl
daa
dec
jmp
pop
outsb
inc
lods
and
outsl
neg
ljmp
mov
add
mov
cmpsb
dec
push
jb
clc
mulb
insb
jae
arpl
scas
mov
pop
outsb
push
add
push
imul
int
push
mov
jae
mov
jae
push
test
adcb
push
or
sub
popa
adc
add
mov
out
pop
pusha
das
mov
push
sub
push
inc
into
sub
or
repz
lds
push
add
and
fs
loopne
add
fsubl
dec
mov
inc
push
mov
test
das
push
mov
sub
cmp
push
jo
jb
xchg
loope
mov
sub
push
fisubl
movsb
sbb
int3
sahf
notb
lods
cmpsl
xor
in
mov
dec
imulb
push
into
xchg
jno
ja
popf
adc
and
mov
pusha
inc
and
adc
out
push
inc
mov
fimull
and
xchg
xor
mov
mov
fcoms
cmp
inc
add
push
fbld
jne
lods
gs
or
pop
addr16
test
subb
and
stos
outsb
lea
pop
push
or
xchg
and
sbb
push
pushf
jne
nop
pop
ds
rcrl
inc
lahf
xor
arpl
jecxz
ret
sub
push
cmp
inc
cs
pop
bound
adc
jle
and
fcoml
lea
pop
adc
je
adc
lahf
outsb
xor
insl
add
and
sub
inc
sbb
jne
xchg
pop
sarl
pop
outsl
lods
js
aaa
mov
shrb
inc
add
push
add
push
lcall
orb
mov
pusha
xorl
push
dec
dec
dec
mov
add
inc
jns
mov
and
lds
mov
mov
lret
imul
outsl
inc
push
outsl
jl
xchg
sti
gs
dec
and
add
add
push
inc
sbb
add
sbb
cmp
add
sbb
lock
mov
out
mov
rolb
push
xchg
lret
out
jb
jecxz
sbbl
outsl
subb
xchg
jp
mov
inc
jmp
pop
ja
add
das
push
in
scas
je
aaa
dec
inc
dec
pop
or
inc
dec
lret
dec
aas
inc
cmc
in
or
out
mov
push
jmp
sbb
add
and
xor
mov
cmpsb
add
jne
sbb
and
jo
add
add
push
push
add
inc
xchg
add
pop
mov
fs
sub
pushf
sub
adc
int3
or
push
dec
pusha
push
jo
jno
test
push
cmp
add
jae
and
into
pop
rcll
and
test
inc
cmp
imul
add
rol
add
iret
pop
add
lret
xchg
sub
in
jmp
cmpsl
add
push
mov
rol
mov
push
adc
mov
jns
insb
bound
loope
pop
cld
inc
jae
adc
add
insb
inc
add
testb
add
cmp
push
add
or
xor
push
stos
mov
mov
addl
insb
jae,pn
bound
push
add
lods
out
das
sub
sbb
xor
sbb
cmp
fbld
lret
fbld
int3
cmc
pop
ficomps
mov
push
popa
popa
shrb
xchg
addb
and
inc
cwtl
aam
dec
cld
cli
jg
jecxz
testl
push
pop
in
hlt
addb
aam
lret
jae
ret
fisttps
sti
jbe
pop
pop
push
insb
push
sbbb
sbb
xchg
push
punpcklbw
out
scas
sbbb
or
hlt
add
push
dec
pop
xor
mov
test
or
jns
sub
and
mov
push
shrb
inc
dec
add
mov
mov
inc
cmp
inc
xor
sti
adc
insb
dec
jns
lods
sub
fs
pusha
inc
stos
ljmp
inc
pop
hlt
fadd
jns
mov
and
add
mov
adc
daa
fs
and
inc
sub
fs
mov
out
or
sbb
out
sahf
or
add
clc
out
lock
repz
enter
iret
repz
sahf
out
fisubs
nop
jns
out
mov
iret
cmp
pop
push
inc
cmp
repz
xor
sbb
cld
test
jo
in
lock
iret
repz
push
fcom
enter
repz
test
mov
iret
repz
push
cmp
sub
repz
and
adc
add
sahf
out
lcall
mov
lods
mov
mov
jns
out
js
push
inc
sub
and
out
cmp
or
jmp
and
adc
dec
pusha
arpl
adc
add
push
add
mov
jmp
mov
push
mov
ja
lcall
pmuludq
outsb
jno
cs
lock
push
xchg
add
add
data16
sarb
and
xorps
dec
imull
add
pusha
mov
and
xchg
negb
inc
dec
pop
jg
add
dec
pop
mov
push
push
addl
mull
add
and
pushl
inc
inc
xchg
iret
jae
inc
mov
addl
sub
cmpb
dec
sahf
add
mov
push
add
out
jo
add
in
cmp
cs
sub
push
mov
mov
addb
cmpsl
jbe
cmp
insl
xor
aaa
sub
jbe,pn
and
or
sbb
lahf
xor
xor
ds
je
in
add
mov
xchg
or
xor
jae
pop
xor
gs
push
imul
imul
adc
js
and
fmull
or
pop
mov
adc
or
adc
jne
fadds
movups
jae
popaw
insb
into
pop
mov
popa
mov
mov
sti
ss
push
mov
push
sbb
ds
inc
add
inc
pop
pop
adc
fistps
and
aam
add
xor
xor
pushl
sbb
bound
loopne
sbb
das
xor
xorb
xor
xor
xor
xor
xor
xor
movsb
pushl
shlb
adc
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pushl
test
enter
ljmp
ss
es
dec
aaa
push
mov
aaa
iret
aaa
call
aaa
adc
dec
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
lea
clc
ffreep
sarb
aas
push
lock
idivl
or
push
add
adc
and
dec
xor
xor
outsb
xor
popf
xor
xor
incl
inc
xor
push
xor
xor
xor
xor
decl
jae
xor
out
xor
xor
xor
xor
xor
xor
decl
push
fidivl
scas
xor
shlb
jecxz
call
mov
mov
ss
ss
ss
lods
pop
cld
pushl
push
aaa
sbb
jno
mov
aaa
loopne
add
or
ljmp
xchg
cmp
outsb
cmp
cmp
cmp
cmp
or
cmp
ud0
cmp
cmp
push
cmp
jl
cmpl
mov
cmp
push
adc
cmp
insb
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
cmp
fildll
test
jo
test
mov
or
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
jmp
andl
xor
pushl
fdivs
fnsave
ljmp
xor
xor
xor
xor
xor
pop
xor
outsl
clc
pushl
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
lcall
pop
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
bound
push
sub
ss
clc
loop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
fcomip
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
pusha
mov
or
pop
push
or
cmp
aas
clc
lcall
arpl
push
xor
xor
xor
xor
xor
xor
xor
call
cmp
cmpsb
push
xor
xor
lcall
out
xor
xor
xor
xor
test
mov
mov
nop
xor
cli
pop
cld
xor
xor
xor
scas
clc
xor
cmp
jmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
das
mov
cmp
jp
cmp
cmp
std
cmp
cmp
sub
xchg
adc
sbb
push
das
cmp
ds
fidivrl
jmp
jg
movd
and
cmp
ss
ss
xchg
cmp
cmp
cmp
iret
cmp
mov
cmp
cmp
cmp
lcall
cmp
cmp
cmp
cmp
cmp
cmp
adc
dec
aas
push
mov
cli
js
cmpb
aas
sarl
aas
in
out
out
jo
loop
call
movsb
xor
add
jmp
incl
jg
mov
scas
xor
xor
xor
loop
xor
xor
xor
push
xor
mov
xor
xor
scas
std
xor
cmpsb
push
xorb
ss
add
or
aaa
and
fnstsw
cmp
aaa
push
aaa
pop
aaa
imul
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
outsl
cmp
xor
pusha
cmp
mov
cmp
cmp
sbb
push
cmp
inc
cmp
dec
cmp
popa
cmp
xchg
sbb
cmp
push
stos
cmp
cmp
call
fstpt
loopne
in
jmp
out
cmp
bnd
mov
cmp
cmp
cmp
adc
inc
cmp
push
cmp
call
pop
cmp
jb
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmc
cmp
cmp
cmp
sbb
cmp
dec
cmp
cld
cmp
jae
mov
cltd
cmp
jp
jg
cwtl
ds
jg
ds
jecxz,pt
out
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
aas
or
push
xor
insl
aas
sbb
push
sahf
xchg
les
pop
pop
xor
sub
xor
xor
xor
xor
xor
decl
mov
xor
xor
xor
xor
xor
xor
filds
jl
cmpsl
xor
xor
scas
jno
xchg
xor
mov
scas
xor
cmpsb
pushl
xor
xor
xlat
xlat
pushl
xorb
aaa
fwait
sahf
cmpsb
mov
inc
cmp
bound
scas
cmp
pushf
mov
sub
cmp
cmp
mov
mov
data16
dec
cmp
cmp
cmp
lea
pop
nop
sbb
add
or
xor
cmp
bound
pushw
sar
push
outsb
aaa
jb
jbe
xchg
ja
js
jge
cmp
xchg
inc
cmp
cmp
cmp
cmp
cmp
jle
mov
call
adc
sbb
ds
xor
xchg
aas
or
ljmp
xor
mov
ja
xor
xor
xor
xor
jl
fdivp
sbb
cltd
aaa
mov
ret
aaa
jmp
repnz
lcall
dec
or
cmp
pop
cmp
jge
mov
cmp
call
cmp
jbe
xchg
cmp
cmp
cmp
mov
and
cmp
cmp
fdivrs
push
aas
jne
mov
cmc
call
popf
or
mov
fwait
xor
xor
rclb
dec
or
repnz
aas
xor
hlt
or
pop
xor
fsub
adc
es
lcall
std
ss
ss
outsb
notb
ss
in
and
cmp
ljmp
cmp
mov
cvtpi2ps
sbb
cmp
pop
cmc
add
mov
cmp
jne
test
mov
ret
call
dec
cmp
push
cmp
pusha
data16
aam
fnstsw
jecxz
imul
cmp
cmp
cmp
cmp
pop
sarb
inc
cmp
incl
addl
and
push
cmpb
ds
ds
ds
ret
idivl
add
sbb
addr16
loope
pop
pop
add
add
pop
cmp
xor
xor
pop
xor
xor
cmp
or
xor
xor
call
xor
xor
xor
mov
xor
push
lcall
add
xor
ds
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
ljmp
cmp
cmp
mov
cmp
fstpt
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
clc
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
lcall
and
pusha
aas
cmpb
aas
fdivrl
loop
out
out
pop
rclb
adc
jne
adc
xor
sub
jg
xor
xor
jg
xchg
xor
xor
xor
jne
inc
pop
sbb
xor
xor
ljmp
inc
rcrb
xor
xor
sub
sub
nop
cmp
lcall
test
enter
sarb
aam
in
ljmp
push
out
xor
aaa
test
das
and
cmp
inc
xor
xor
or
lcall
inc
clc
lcall
mov
mov
mov
xor
xor
mov
int3
xor
cmp
sub
sub
xor
decl
push
sarb
inc
cmp
cmp
cmp
or
pop
xor
add
js
jl
cmpb
cmp
inc
add
jl
cs
rcr
cmp
mov
cmp
cmp
mov
in
call
dec
cld
pop
lods
ds
cmp
pop
stos
sbb
and
add
cmp
sub
sub
xor
cmp
inc
cmp
pop
xchg
dec
cmp
pop
cmp
cmp
insb
ja
cmp
je
jl
cmpb
push
mov
nop
mov
cwtl
mov
sub
xor
ljmp
aas
inc
mov
push
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
rolb
aas
fdivrs
loopne
clc
jbe
pop
clc
cmpsl
fists
xor
xchg
xor
cld
pushl
sbb
and
inc
xor
xor
cwtl
xor
xor
xor
xor
ret
cmpsb
cmp
sbb
fadds
add
xor
pusha
xor
pusha
cmpsb
and
fimuls
xor
jg
dec
ss
sahf
int3
shlb
aam
fdivs
fdivl
loopne
clc
jmp
lock
ss
ss
add
add
or
or
adc
adc
mov
sbb
and
and
sub
sub
xor
cmp
cmp
inc
aaa
call
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
jl
cmp
inc
clc
xorb
aaa
mov
nop
aaa
xchg
aaa
cwtl
into
mov
loopne
aaa
test
mov
mov
mov
aaa
bound
enter
shlb
aam
fdivs
fcompl
in
pop
sub
inc
out
aaa
hlt
xor
aaa
hlt
add
or
mov
adc
sbb
cmp
into
ret
fdivrl
call
das
ret
cmp
pop
sahf
jl
cwtl
cmp
cmp
loopne
lcall
cmp
cmp
cmp
cmp
push
cmp
jne
jl
test
mov
mov
jmp
mov
mov
mov
cmp
and
mov
add
ljmp
pusha
cltd
mov
sti
popa
jmp
idivb
or
or
cld
sti
mov
mov
ljmp
mov
or
mov
pop
shr
xor
leave
sub
mov
lcall
roll
add
add
pusha
mov
mov
add
out
adc
fsubs
lods
inc
daa
out
sbb
or
loop
leave
or
addb
and
test
push
sub
lods
or
sub
outsb
out
das
sbb
sbb
or
xorb
cmp
rcrb
cmp
add
pop
mov
pusha
dec
out
xchg
jo
and
jb
lods
aas
shrl
inc
and
inc
lret
and
push
sub
mov
clc
inc
xchg
add
inc
jb
orb
pop
xchg
lea
or
and
test
or
out
dec
or
lock
dec
fs
mov
push
push
lock
pop
in
push
mov
pop
sbb
jne
push
mov
push
lods
push
xor
mov
in
lret
fstpt
jl
add
xchg
fisubl
xor
xchg
mov
jae
loopne
adc
cmp
je
xor
jb
xor
dec
ror
mov
ret
jge
push
fadds
mov
mov
sbb
pop
inc
sbb
xchg
popa
sbb
jne
insl
movsl
and
andl
and
and
mov
mov
sbb
dec
subl
pop
pop
je
cmp
outsb
int3
test
lcall
inc
jp
add
mov
or
xor
bound
insb
idiv
idivb
or
jb
lea
call
pusha
or
adc
mov
cmp
pop
inc
lahf
xchg
fildl
add
sbb
jnp
push
lahf
mov
dec
or
push
mov
push
or
adc
lea
push
push
pop
jbe
dec
outsl
jb
cmpb
jl
lret
mov
adc
xor
or
in
mov
call
inc
push
push
call
aaa
and
lcall
add
and
aas
enter
pop
add
fisubrl
dec
fimull
push
lahf
fidivs
inc
cmp
andb
call
xchg
add
xchg
cmp
js
adc
je
and
addr16
in
cmp
mov
mov
test
add
xor
and
cli
imul
xchg
call
lods
mov
inc
pop
inc
loopne
jmp
lret
xlat
or
sti
mov
and
adc
add
or
cmpsl
lock
dec
stos
push
xor
push
push
loop
sbb
inc
cld
adc
add
adc
es
jg
pop
add
fmuls
push
adc
andl
pop
adc
arpl
sub
ja
cwtl
jg
dec
cld
sub
or
jge
fnstsw
add
in
and
xchg
or
xchg
inc
mov
xchg
mov
adc
ret
lock
pop
mov
mov
or
push
aad
or
pop
ficompl
jno
lea
out
fcmovnu
or
or
and
clc
ret
add
lret
dec
add
inc
hlt
das
add
cmp
leave
inc
or
leave
adc
push
mov
or
adc
add
jbe
pop
dec
popf
jnp
adc
sbb
sbb
and
pop
outsl
or
loope
push
xchg
test
or
jge
xchg
out
ds
call
push
sbb
loope
sbb
xor
mov
push
rcrb
push
mov
push
sbb
inc
mov
and
pushf
push
movlps
imul
dec
or
or
mov
loop
adc
xchg
pop
inc
adc
push
add
adc
adc
pop
pop
hlt
sub
push
stos
mov
shl
sbb
inc
js
push
push
xchg
rorb
mov
popf
pusha
or
push
adc
dec
imulb
insb
jo
pop
call
pop
add
and
sub
fisttps
push
mov
add
or
mov
pop
popa
aam
fistl
mov
test
adc
gs
cmp
loopne
add
pushf
or
cmp
cmp
clc
idiv
dec
mov
xchg
xchg
pop
xor
shll
mov
jl
add
inc
cmp
adc
mov
shr
pop
mov
push
mov
mov
add
jmp
scas
add
jno
cmpsb
xchg
push
mov
jo
xlat
call
add
sbb
add
ficompl
roll
rolb
and
loope
adc
push
ja
adc
pop
fwait
bound
dec
and
add
movsl
adc
out
lods
or
cmc
mov
daa
and
testl
dec
jecxz
push
in
imull
xor
add
add
push
add
pop
add
cmpsl
mov
fs
or
clc
lahf
sub
push
xchg
sub
std
pop
rcrb
add
sub
mov
pusha
add
dec
adc
std
sbb
pop
push
cmp
fisttpl
cmp
cmp
fiadds
pop
std
pop
int3
mov
push
std
sarb
push
or
in
or
ror
sbb
inc
jmp
std
jo
std
mov
mov
xor
std
and
sarb
or
mov
mov
or
fildl
and
sub
mov
std
loop
lods
and
add
iret
popa
test
enter
push
and
dec
mov
dec
add
sarb
mov
cwtl
repnz
sarb
dec
rolb
push
or
js
cmp
sbb
mov
cmp
dec
pop
sub
sub
iret
ss
or
popa
fadds
mov
ds
mov
dec
popa
or
push
call
sub
mov
xor
mov
xchg
mov
sbb
sbb
sbb
cmp
adc
sbb
clc
push
inc
add
sbb
daa
out
add
push
xchg
mov
scas
xchg
or
notb
and
mov
mov
sbb
out
scas
outsb
orb
sub
mov
test
pop
das
adc
adc
adc
adc
das
dec
imul
sub
lret
jge
cmp
addl
das
sbb
nop
jne
je,pn
fstl
jno
and
sbb
outsl
aas
add
call
call
fs
sbb
mov
adc
insb
mul
push
adc
sbb
call
mov
push
dec
scas
fcoml
dec
mov
add
jl
call
nop
in
das
mov
hlt
fidivrs
orb
dec
jo
push
call
or
sbb
or
sahf
add
pop
inc
pop
test
pop
ret
call
ds
xchg
notl
xchg
sub
sbb
adc
imul
test
push
add
jns
adc
and
sbb
inc
inc
rorl
push
mov
stc
inc
sbb
push
push
or
or
dec
test
popl
das
insl
inc
jg
inc
test
lods
sbbl
js
or
or
sbb
adc
mov
adc
mov
cmp
or
xor
and
pop
and
or
xchg
xchg
and
adc
call
or
mov
mov
add
dec
push
mov
dec
inc
mov
mov
mov
mov
add
inc
jns
add
mov
push
shr
andb
ds
or
push
pop
inc
inc
notl
nop
mov
loopne
mov
leave
call
dec
ret
rorl
cltd
rolb
xchg
movsl
pop
ss
test
jo
mov
and
ja
mov
mov
rorb
jae
inc
pop
test
xchg
pop
pop
test
addl
and
cmp
nop
nop
push
adc
jne
stos
movsb
rolb
hlt
add
mov
pop
dec
pop
sahf
imull
xchg
fs
pop
push
jne
out
dec
inc
cmp
lsl
add
aam
pop
cmp
cwtl
push
movsb
mov
pop
sbb
lret
incb
pop
int3
and
outsl
ja
rcrl
inc
pop
nop
xor
push
mov
jl
add
pop
pop
cmpl
repz
outsb
mov
push
fadds
loopne
lock
xchg
jo
inc
sub
xor
pop
out
push
inc
pop
pushf
mov
pop
out
fidivl
mov
adc
ds
stc
je
sub
xchg
cmp
push
xor
addb
and
sbb
hlt
sbb
push
addr16
xor
in
test
aaa
loopne
xchg
push
mov
dec
mov
pop
pusha
mov
pop
in
popa
loope
pop
pusha
hlt
mov
push
jb
hlt
test
xchg
xchg
sub
pop
push
cmpsl
subl
add
sub
sbb
repz
sub
sub
pop
and
sub
mov
sub
cmpsb
imul
inc
lcall
shll
sub
jb
sbb
sub
sub
imul
in
sub
xor
sub
sub
sub
shlb
lcall
sub
inc
adc
and
cmc
nop
les
sbb
cs
or
mov
add
dec
dec
push
aaa
jp
mov
cmp
mov
das
psubb
and
adcl
inc
into
arpl
js
inc
fistl
mov
out
stc
push
scas
or
push
adc
dec
movsb
lret
ret
insb
push
xor
mov
jle
addr16
inc
adc
inc
adc
fstpl
nop
inc
psubsb
push
inc
mov
rolb
adc
sub
or
aad
push
les
cmp
inc
repz
pop
sarb
mov
movl
daa
mov
sub
sub
hlt
pop
sub
movsl
ds
inc
iret
push
mov
lds
in
mov
adc
mov
push
cmp
mov
adc
repnz
bound
sub
jnp
sub
and
sahf
xchg
test
sub
inc
xor
sub
push
inc
xor
cmp
inc
loopne
or
adc
inc
jmp
out
addb
cmp
sub
call
add
mov
adcb
aad
sub
imul
dec
fisttps
roll
push
mov
adc
mov
xchg
add
outsb
xchg
jae
pop
push
daa
jns
mov
mov
cwtl
and
jmp
add
and
jb
lret
jno
jge
rol
inc
test
mov
cmpsb
lcall
mov
xchg
cmp
xor
setns
pop
sbb
adc
or
and
addr16
jns
sbb
fiadds
sbb
mov
jns
pusha
sub
in
bound
js
or
mov
dec
jns
xchg
mov
sbb
icebp
sbb
lcall
mov
icebp
test
int3
or
xchg
mov
fbstp
push
stos
test
inc
mov
popf
mov
test
xchg
jmp
outsb
cmpsl
jne
test
push
fs
ja
push
pop
mov
popa
pop
test
call
les
pop
sbb
xchg
jbe
adc
dec
gs
adc
stos
or
mov
popa
push
inc
adc
rol
cmc
adc
adc
mov
sub
pop
mov
aad
pop
lcall
push
mov
sbb
pop
les
filds
test
xchg
add
fcoms
jne
pop
mov
stos
mov
jnp
in
fiadds
fisttpll
insl
jl
daa
sbb
mov
lret
sub
mov
jo
push
je
pop
mov
dec
enter
add
xchg
nop
or
inc
call
and
inc
inc
lea
or
inc
inc
mov
and
sbb
mov
sub
push
pop
mov
xchg
rolb
lret
pusha
and
aaa
mov
sbb
sbb
cmpsl
cmp
push
nop
nop
jmp
inc
pop
add
mov
cmpl
xor
jnp
and
pushf
mov
inc
cmp
add
icebp
mov
pop
mov
movsb
add
mov
dec
fnsave
inc
jb
push
mov
adc
xor
sub
nop
or
xchg
repnz
push
ret
mov
into
xchg
cmp
mov
mov
dec
or
mov
inc
add
es
je
dec
dec
int
in
fidivl
test
mov
cmp
mov
adc
xor
add
and
xor
and
xchg
push
ds
mov
sub
mov
loope
xor
shlb
mov
js
pop
in
xor
mov
sbb
inc
inc
inc
inc
xor
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
dec
sbb
add
je
or
mov
fs
cmp
and
adc
popf
lods
sti
adc
cmp
enter
fwait
and
data16
sbb
xchg
mov
or
and
cmp
push
out
or
xor
jo
inc
push
mov
bt
jo
gs
sbb
adc
cmpsl
dec
sub
mov
mov
cmp
mov
sbb
cmp
mov
cmpsb
test
jae
and
or
addr16
out
mov
jl
and
or
inc
pop
sub
pop
call
mov
aam
push
nop
fidivs
aad
in
inc
xor
lahf
enter
mov
and
adc
xchg
std
sub
dec
andb
cs
cmpsb
xor
sbb
fidivs
ficoms
add
mov
repnz
mov
lcall
or
sub
pop
xchg
inc
add
pusha
sub
inc
add
aaa
leave
or
add
sahf
and
xor
mov
xor
push
aad
out
loope
mov
pop
enter
dec
inc
pop
les
lock
movsb
push
mov
dec
lock
pop
inc
out
dec
enter
sub
dec
dec
push
cmp
adc
mov
nop
mov
dec
out
dec
add
fimuls
fs
add
xor
mov
sub
fs
jp
pop
faddl
loope
and
call
pcmpeqd
das
shl
jnp
imul
leave
sti
loopne
push
sub
xor
inc
cmp
xor
adc
push
mov
shl
xchg
push
xchg
add
xor
dec
cs
nop
push
xchg
pop
nop
dec
or
add
dec
push
push
test
pop
stc
loopne
or
adc
pop
xor
pop
stc
adc
stc
mov
stc
sbb
or
or
mov
xchg
inc
push
fdivs
mov
ljmp
pop
pop
xor
pop
inc
icebp
sub
xchg
and
push
stc
xor
mov
lods
mov
in
dec
push
call
xchg
inc
stc
xchg
call
mov
fldl
inc
sub
xchg
push
repnz
clc
adc
frstor
ret
pusha
sbbl
ljmp
jmp
daa
fnstsw
icebp
and
pop
xchg
fdivl
jne
sub
pop
jmp
xchg
lahf
gs
jmp
sbb
mov
sub
xorb
je
add
fcmovnu
fstpt
jno
jae
call
add
mov
mov
adc
mov
lock
loopne
inc
nop
stc
xchg
xchg
sbb
iret
aam
xchg
pushf
push
outsl
adc
inc
test
mov
push
ds
dec
popa
add
pop
or
sbb
lods
mov
add
cmc
sub
negl
das
jmp
sbb
ret
call
and
push
in
and
fdiv
je
mov
lret
jge
mov
inc
cld
push
iret
adc
xchg
js
jl
adcb
push
test
sbbb
lods
sarl
cwtl
andb
inc
or
sbb
hlt
shll
repnz
lock
mov
lret
rol
sub
fldl
dec
push
sarb
mov
stos
shll
add
shrl
cli
lret
cmp
pop
pushf
pop
xchg
pop
rcrl
sbb
shrl
stc
shl
mov
mov
sbb
cmp
or
fld
jne
xchg
or
mov
or
inc
or
push
push
test
dec
mov
pop
pusha
xor
sub
sbb
xchg
sbb
and
sbb
xchg
pop
imul
fcomps
add
xorl
adc
repz
repnz
dec
adc
add
sbb
fdivl
shlb
daa
mov
cmp
mov
ret
in
loope
adc
adc
xor
jo
adc
xor
jo
adc
adc
add
cmp
aam
fptan
in
leave
sub
in
roll
fldenv
dec
dec
push
pop
rcrl
daa
xor
fst
xorb
insb
out
or
movsl
shrb
mov
jmp
xchg
add
pop
dec
loopne
movsb
adcb
sbb
dec
push
pop
adc
mov
sub
jp
add
adc
mov
fiadds
push
dec
aaa
insl
fs
das
mov
dec
adc
push
adc
imul
xchg
xchg
push
inc
adc
adc
add
sub
adc
adc
xchg
outsb
and
or
rcl
sub
sub
sub
pop
sbb
fcoms
pop
mov
mov
xchg
test
inc
mov
inc
cli
dec
dec
ja
adc
sub
ja
add
sub
movsl
and
dec
dec
daa
and
mov
jnp
in
addb
inc
mov
push
cmpl
jb
inc
or
dec
lea
nop
push
push
lret
pop
inc
mov
mov
dec
or
cmpsb
in
ds
lahf
lea
cmpsl
inc
aaa
and
dec
in
orl
daa
jp
fisubrl
mov
movsb
lods
push
jbe
dec
sarb
pushf
rorb
fistps
dec
pop
cmp
fisubrs
mov
jp
dec
dec
out
mov
lds
cmpsl
rol
cmp
mov
lods
addl
mov
sub
lds
xlat
aam
outsb
pop
lds
in
test
outsb
push
inc
mov
inc
popf
addb
mov
pop
inc
loopne
jb
sbb
xorl
pop
rcll
xor
divb
adc
test
call
sbbl
pop
repz
or
call
inc
pop
aam
dec
dec
rorb
jne
mov
inc
sub
mov
iret
leave
mov
ret
int3
or
in
mov
or
push
sbb
ljmp
mov
pop
jns
pop
cmp
ret
fbld
or
xor
mov
mov
jo
mov
mov
inc
popf
rcrb
out
add
test
enter
adc
mov
out
lock
pop
jns
adc
jno
sbb
ljmp
je
imul
push
frstor
pop
dec
jecxz
ljmp
in
pop
and
add
dec
cmpsl
adc
pop
mov
pop
jle
dec
or
dec
test
iret
shlb
xchg
xchg
lea
ret
and
pop
fdivs
and
cs
adc
dec
adc
pop
call
sbb
dec
leave
in
loopne
mov
xchg
leave
jecxz
and
push
or
xchg
mov
lret
pop
xchg
xchg
pop
pop
or
push
bound
pop
mov
inc
xchg
xchg
xchg
xchg
mov
sub
xchg
mov
or
xchg
mov
call
repnz
fdivrs
repnz
mov
mov
mov
repnz
pop
cmp
pop
mov
nop
sbbl
mov
enter
sbb
mov
cld
mov
jb
sbbl
sarb
inc
pop
mov
lods
mov
and
xchg
mov
push
jb
xorl
mov
enter
dec
mov
in
xor
pop
jb
mov
and
cmp
stc
mov
nop
sbbl
mov
enter
mov
lods
mov
pop
cmp
mov
jne
push
pop
mov
push
mov
sbb
and
xor
cmp
test
fmull
or
mov
inc
xor
clc
shll
and
or
mov
shlb
or
xchg
mov
add
jb
int3
and
sbb
int
dec
or
or
mov
and
xor
adc
cmp
xchg
daa
int
or
stc
mov
xor
out
xor
push
xor
dec
cli
cmp
mov
dec
cmp
mov
addl
loopne
call
add
adc
shrb
inc
and
pop
push
dec
movl
sbb
push
and
sbbl
xor
sub
mov
and
sub
push
or
movl
inc
leave
sub
push
mov
packssdw
sti
notl
jb
push
mov
and
pop
fst
arpl
inc
and
sub
shrb
lea
adc
popl
pop
xchg
aam
movsb
and
pusha
and
imul
and
das
test
scas
into
ss
and
into
movsb
addb
nop
movsl
cmpsl
inc
push
xchg
dec
mov
addr16
jo
shll
das
in
orb
subl
bound
fs
lea
xor
sbb
js
mov
das
sbb
cmpsb
das
nop
movsl
add
push
mov
push
das
and
jb
dec
aam
das
fbld
das
leave
shlb
or
je
das
mov
dec
das
cmpsb
sub
push
subl
dec
leave
pop
subl
pop
xchg
out
sbb
and
loopne
inc
das
xor
enter
or
inc
or
imul
sbb
jmp
mov
int
xor
mov
inc
sub
das
mov
das
and
scas
push
outsl
nop
and
sbb
jno
sbb
fs
sbb
lcall
adc
inc
or
mov
or
subb
sub
das
mov
xchg
dec
jnp
sarb
aaa
enter
push
pop
das
xor
or
and
sub
and
das
in
jbe
push
inc
subl
inc
fwait
and
shlb
das
pop
dec
aaa
add
shlb
push
vcomiss
sbb
js
dec
sub
call
pop
les
loopw
je
push
das
and
fcoms
ror
fnclex
mov
mov
clc
push
call
push
mov
cld
sbb
call
addl
or
out
subl
movsl
nop
mov
das
enter
pop
sbb
das
bound
out
push
sbb
inc
je
rcl
mov
or
cmp
das
out
pop
cmp
mov
add
das
mov
xor
xchg
or
adc
sbb
dec
inc
xchg
inc
pop
mov
push
das
fdivl
call
push
xor
push
mov
fs
pop
mov
mov
mov
add
dec
aaa
pusha
nop
movsl
push
ret
dec
das
push
xorl
fcmovnb
and
das
and
aad
das
icebp
int
enter
jmp
lea
clc
or
lcall
mov
ja
pop
cmp
je
nop
sahf
das
fsubrl
scas
sbb
in
push
sbb
inc
xchg
das
jae
sub
enter
das
pop
pop
or
xchg
sbb
cmp
imul
jbe
movsl
jmp
scas
push
jmp
test
jp
sbb
stos
jg
mov
add
xchg
out
add
xor
inc
pusha
xor
or
xchg
fldl
subl
push
je
subl
nop
add
mov
inc
subl
aad
or
adc
movsb
das
sub
subb
int3
and
subl
sbb
or
enter
push
inc
fs
push
xor
clc
aad
xchg
push
sbb
das
sahf
out
push
xor
das
stos
shrb
aad
dec
xorl
push
pop
cmp
das
sbb
in
das
xlat
and
xlat
sbb
addr16
inc
mov
push
cmp
push
xlat
and
call
fs
adc
enter
das
pop
sahf
leave
jl
xor
shrb
das
fmul
addl
loop
hlt
sbb
mov
dec
lret
test
xchg
dec
sub
mov
inc
xor
das
pop
stos
andl
dec
mov
dec
add
ret
dec
shrl
xor
push
push
das
dec
mov
cmp
pop
das
xchg
repnz
dec
aaa
push
fmuls
les
adc
xor
and
jecxz
subl
das
pop
jmp
das
addr16
pop
xor
das
lahf
loope
or
ja
xchg
pop
jb
das
cmp
mov
das
fsubr
push
pop
lds
das
jg
mov
fisubl
dec
sbb
pop
daa
jns
subl
daa
sub
daa
adc
fmull
pushf
mov
nop
int
into
xchg
add
mov
xchg
out
cmpsb
add
test
enter
cli
lods
xchg
shr
jnp
mov
xor
scas
push
mov
pop
scas
and
imul
fs
std
push
jmp
push
ds
movsb
mov
add
data16
mov
mov
inc
daa
lcall
dec
in
xchg
or
adc
fimull
lods
in
mov
xor
clc
cld
inc
loopne
xchg
inc
add
xor
xchg
aam
pop
xchg
adc
and
and
add
sti
mov
movb
popf
dec
fldenv
cmpsb
xchg
cmpsb
inc
lahf
bound
in
js
mov
fisubl
bound
jns,pn
out
ds
pusha
jo
repz
out
in
add
adc
iret
repz
push
bound
mov
mov
sahf
cmpsl
stc
add
out
sahf
out
test
jns
ret
or
push
sub
iret
repz
dec
pop
data16
cmp
xrelease
jns
iret
lock
stos
and
sahf
out
sahf
push
pusha
insb
jbe
xchg
sbb
movsb
mov
arpl
pop
or
adc
jge
or
adc
adc
push
int
xor
add
xor
loop
movsb
sbb
push
iret
jnp
iret
fcoms
sbb
aad
outsb
cmp
jl
push
clc
mov
imul
mov
adc
cmp
add
clc
mov
jns
sar
mov
repz
test
adc
adc
push
adc
xchg
sbb
cmp
repz
call
cmpsl
xor
repz
mov
dec
imul
cmpb
imul
cmp
repz
cmp
adc
add
push
push
inc
push
pushf
xor
mov
add
in
aas
xor
push
sbb
xchg
or
iret
repz
xor
sbb
add
sahf
out
lcall
jns
out
int3
enter
out
sahf
out
mov
movsb
mov
pushf
cwtl
xchg
nop
mov
test
jns
out
insb
push
jns
pop
pop
push
push
dec
dec
jns
out
inc
inc
cmp
xor
jns
out
sub
sbb
iret
repz
or
nop
in
les
fs
and
out
sahf
inc
popl
shlb
sahf
dec
dec
inc
xor
cmp
sarl
call
ds
repz
xor
in
enter
out
js
xor
out
jnp
add
in
mov
mov
subl
or
or
push
xlat
add
mov
adc
sbb
test
aaa
xor
push
push
add
inc
fcomps
xor
sub
cltd
nop
fldcw
push
ja
enter
shlb
js
xor
adc
fisubs
loopne
or
iret
lds
sbb
daa
add
and
aas
icebp
xchg
insb
xchg
ffreep
ficoml
fs
jne
jnp
jo
mov
inc
add
outsl
mov
iret
test
fidivrl
das
aad
fdivp
xor
adc
dec
inc
xchg
hlt
enter
shll
and
test
add
add
add
and
or
shl
dec
enter
outsb
cmp
and
fdivrs
jge
xor
lds
adc
cmp
pop
pop
inc
fists
push
cmp
inc
out
aas
sbb
sbb
jg
xor
dec
stos
dec
mov
nop
or
sarl
cmp
xor
mov
adc
stos
xorb
push
clc
xchg
sar
dec
sbb
iret
jg
mov
mov
lock
cli
ud0
xchg
lea
das
adc
in
add
push
nop
imul
jbe
adc
push
mov
test
aaa
les
outsl
andb
in
and
sbb
fildll
in
adc
jbe
jo
jno
clts
jno
or
push
xchg
movsl
add
mov
mov
jne
mov
push
adc
test
pop
jl
pop
hlt
xor
scas
cld
subb
test
lods
pop
inc
sub
xor
stc
mov
outsl
jne
push
push
arpl
dec
sbb
mov
mov
and
mov
je
add
pop
ror
cmp
pop
and
sbb
movsb
dec
inc
jecxz
bound
cmp
or
pusha
or
xor
push
stos
xchg
push
aaa
mov
inc
scas
pop
or
dec
cwtl
push
xchg
imul
sub
mov
mov
mov
iret
outsb
sbb
or
add
mov
fbld
xor
xor
shll
aas
mov
mov
loopne
xor
mov
xchg
mov
adcb
shl
xor
mov
imul
mov
loop
xlat
ret
push
mov
push
loopne
mov
incl
sub
dec
or
xchg
mov
aaa
add
add
pushf
mov
cs
dec
inc
push
inc
push
push
mov
inc
pop
mov
ret
add
pop
incb
inc
xchg
jns
sbb
xchg
testb
cwtl
out
sahf
out
nop
mov
je
pop
push
pop
dec
inc
repz
repz
cmp
xor
iret
repz
sub
and
sbb
enter
adc
xchg
hlt
xchg
cmp
repz
push
in
enter
iret
repz
test
mov
xor
jl
je
jns
repz
push
dec
mov
into
idivl
push
and
add
in
xchg
repz
repz
enter
test
repz
mov
js
sahf
out
pop
jo
pop
inc
cmp
cmp
in
and
adc
lock
out
sahf
cmpsl
loopne
mov
jns
xchg
insb
pop
or
inc
mov
sub
insb
dec
pop
pushf
imulb
xchg
dec
lock
dec
js
into
xor
mov
inc
insb
or
push
pop
xor
add
add
inc
test
mov
incl
cs
call
leave
pop
jg
in
pop
enter
and
pop
jbe
mov
in
add
lods
xchg
xor
popa
pop
aad
daa
aas
lods
test
and
sub
andb
add
add
icebp
pop
loopne
xor
xor
ret
clc
mov
mov
dec
jnp
iret
xor
xor
sahf
xor
or
push
xor
xor
xor
aaa
fbstp
arpl
fistpll
sti
cmp
cmp
cmp
daa
notb
cmp
lea
cmp
mov
add
fwait
cmp
cmp
dec
cmp
mov
loop
cmp
mov
pop
or
push
and
pop
ds
ds
mov
scas
mov
aas
fs
imul
aas
jecxz
call
paddd
mov
and
sub
xor
push
push
push
ret
push
xor
push
rorl
sbb
xor
loope
sti
fisttps
out
xor
repnz
xor
xor
and
daa
xor
popa
cld
jg
xor
push
xor
xor
jno
ja
lea
xchg
xor
adc
xor
xor
xor
push
test
mov
xchg
xor
or
pop
add
sbb
sbb
and
sub
sub
xor
mov
test
mov
mov
repnz
ss
xor
xor
xor
aaa
enter
dec
xor
push
mov
mov
mov
xor
pushl
xor
xor
xor
and
sub
insb
ss
xorl
or
aad
push
jp
cwtl
adc
pushl
cmp
insb
cmp
leave
sbb
push
ret
jbe
cmp
sbb
sbb
and
and
jg
push
sub
xor
jp
test
mov
mov
repnz
ss
dec
or
pop
pop
dec
cmp
test
stos
push
arpl
mov
cmpxchg
mov
ss
dec
cmp
cmp
cmp
and
scas
test
cmp
cmp
cmp
pop
xor
cmp
mov
jecxz
cmp
int3
cmp
popa
cld
jg
ds
ds
ds
cmp
dec
xchg
jecxz
aas
leave
mov
aas
repnz
inc
jg
and
inc
xor
xchg
aaa
mov
xor
xor
jle
pop
add
repnz
xor
aam
ficompl
decl
dec
xor
cmpsl
pop
ret
clc
dec
repz
outsl
test
lret
push
add
mov
push
xor
aaa
in
loope
mov
cmp
cmp
pop
cmp
js
jle
xchg
aas
mov
cmp
cmp
push
sub
aad
in
adc
pextrw
xor
ss
cmp
sbb
gs
idivb
xchg
xor
clc
push
jb
cmp
cmp
dec
push
ret
popa
cmp
jne
jnp
sub
pushl
cs
cmp
cmp
adc
cmp
or
es
pop
xor
in
jmp
lock
ljmp
or
sbb
js
pop
insb
cmp
cmp
cmp
cmp
cmp
ljmp
out
sub
ds
ds
ds
clc
and
mov
adc
and
dec
aas
push
aas
or
fwait
cs
sbb
pop
fmull
xor
outsl
mov
inc
daa
loop
jg
mov
mov
es
cmc
xor
xor
sarb
sub
xor
mov
test
jecxz
xor
cli
xor
adc
popf
xor
loope
xor
aaa
jnp
and
aaa
add
or
cs
dec
cmp
inc
push
sbb
faddl
xchg
cmp
xchg
sub
push
sahf
inc
cmp
mov
mov
or
pop
cmp
outsl
ss
sub
mov
cmp
or
cmp
cmp
cmp
cmp
cmp
fbstp
ja
cmpb
decb
sbb
cmp
cmp
cmp
cmp
dec
sbbb
sub
pushf
mov
pushf
xor
mov
or
js
lock
xor
outsb
sbb
adc
xor
push
fwait
push
enter
mov
icebp
add
xor
clc
ljmp
xor
mov
out
push
adc
sbb
das
ss
mov
mov
clc
shlb
inc
aaa
pop
dec
pop
cmp
fisttps
jecxz
push
mov
lret
cmp
cmp
or
mov
bound
imul
cmp
cmpsb
cmp
cmp
cmp
test
lahf
cmp
jp
aas
mov
scas
pusha
add
pushl
sub
cmp
xor
test
xchg
and
mov
xor
adc
push
push
mov
clc
dec
pop
mov
xor
ss
aaa
mov
sarl
icebp
cmp
cmp
cmp
cmp
jo
pop
loopne
out
test
fsubp
xor
xor
xor
ss
clc
xchg
popa
jle
cmp
fiaddl
xor
pop
inc
cmp
push
inc
dec
adc
loopne
ljmp
mov
lock
or
or
adc
and
lock
sub
jo
je
jl
xorb
rcrb
cwtl
xor
test
pop
mov
xchg
adc
popa
mov
movsb
xor
lret
aam
outsb
sbb
data16
hlt
pushf
shlb
push
add
stc
int3
out
xor
fs
pusha
scas
push
xchg
jo
js
jl
sbb
or
test
mov
add
add
xor
fs
clc
int3
xor
out
sbb
out
call
pop
sub
or
adc
sbb
adc
filds
stos
cmp
inc
xor
push
xor
xor
xor
insb
orb
push
je
jl
push
std
ret
pop
nop
xor
movsb
xor
clc
call
mov
or
xor
ret
shlb
outsb
sbb
mul
or
je
xor
xchg
sahf
add
jle
jp
fcoml
push
cmp
xor
cmp
push
push
shlb
ret
jle
int3
xor
cmp
dec
pusha
jo
lock
mov
pop
pop
daa
cwtl
out
fsubrs
cld
stos
xor
xor
inc
xor
xor
inc
or
inc
xchg
xor
xor
jnp
push
add
lret
mov
xor
cwtl
les
inc
shlb
ror
pop
push
or
daa
pop
and
ucomiss
dec
in
call
dec
aaa
leave
mov
xor
sub
xor
push
testb
jb
xor
cld
cmp
pop
pop
pop
mov
xchg
push
lcall
pusha
mov
jo
js
jl
xorb
mov
lock
pushf
xlat
test
lods
cmp
js
and
xor
push
fiaddl
xchg
xlat
mov
sbb
push
and
sbbl
nop
ljmp
dec
jge
inc
fdivr
sbb
shrb
add
inc
dec
inc
cmp
jo
add
add
or
pop
pop
hlt
mov
incl
or
or
or
or
or
adc
adc
push
adc
in
filds
pop
sbb
adc
adc
adc
aaa
in
jbe
add
data16
or
add
add
or
xchg
add
adc
inc
mov
add
mov
inc
mov
out
sbb
cmp
mov
adc
xor
adc
pop
and
xor
incl
inc
mov
adc
xor
cmpb
and
mov
inc
inc
inc
arpl
aaa
push
mov
add
xchg
icebp
or
add
xor
nop
ret
mov
stos
lahf
xor
sbb
scas
pushf
into
add
adc
xorl
adc
push
adc
pop
popa
jno
add
int
and
adc
mov
or
xor
adc
shrl
icebp
mov
inc
roll
xorb
scas
fiaddl
or
and
inc
stos
js
jo
pop
les
or
add
lds
cld
cli
and
mov
decl
test
jge
ficompl
cmpsl
xor
mov
lcall
or
mov
movsl
jecxz
cli
pop
mov
fwait
push
push
push
stc
or
xchg
jg
or
insb
sub
jmp
out
or
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
in
jg
fs
push
pop
mov
pop
pop
mov
popl
movb
xchg
sbb
ljmp
sbb
lods
scas
xchg
test
aam
and
sbb
sarl
xor
gs
roll
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
decl
push
out
outsl
loope
loope
rorl
mov
int
arpl
push
out
or
js
push
sahf
mov
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
inc
pop
mov
jmp
sbb
add
dec
out
pop
jb
mov
or
push
mov
sub
subb
pop
mov
jl
rorl
adc
mov
std
lahf
stos
hlt
push
add
stc
loope
mov
sar
andl
aas
icebp
aas
stos
push
testb
mov
scas
fdivr
incl
in
sub
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
jne
subl
jb
adc
push
lock
lods
jp
testb
call
gs
sbb
into
fcomps
sbb
sbbl
into
andl
aas
outsb
jmp
pop
cli
adc
aaa
xchg
in
add
inc
adc
loope
fstp
cmp
leave
or
icebp
aas
std
cli
push
push
push
idivl
fists
inc
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
call
imul
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
icebp
jae
inc
cmp
sti
punpckhbw
cmpsb
orb
mov
jl
cmp
cmp
js
jmp
xchg
pop
mov
cmpsb
in
clc
pop
hlt
lret
movsb
add
lea
mov
leave
gs
std
xorb
jg
aad
adc
ret
decl
lock
das
pop
pop
pop
shlb
out
sarb
sbbl
jno
lcall
or
sarb
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
mov
jb
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
mov
push
pop
jns
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
inc
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
call
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
clc
add
pop
mov
stos
dec
lods
xor
jg,pn
cmpsl
addr16
fildll
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
inc
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
add
mov
xor
cmp
xchg
mov
cwtl
pop
xchg
ftst
jbe
decl
inc
and
jae
shrb
jle
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
jl
adc
pop
cld
addl
adc
and
data16
cmp
fmull
enter
jecxz
scas
sub
icebp
jmp
decl
hlt
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
pop
jg
idivb
fadds
jg
mov
aad
test
mov
incb
xchg
movsb
mov
iret
push
aas
js
pushl
push
sbb
stos
icebp
pop
incb
jno
adc
push
jo
inc
jecxz
sbb
sarl
adc
loopne
jbe
jecxz
and
clc
xorl
and
scas
fiaddl
dec
push
in
aas
mov
iret
rorl
push
and
aas
rolb
clc
xchg
or
aas
sub
jne
push
and
mov
adc
div
jg
inc
aas
push
rcrl
rolb
pop
inc
jb
fistpl
adc
outsl
mov
lock
jno
pop
nop
mov
addr16
scas
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
cld
jg
imul
xor
dec
xor
fsubr
fistps
lds
fidivrl
jg
pop
sbb
stos
pop
add
dec
mov
sub
jge
cmp
pop
ja
lahf
les
sbb
sbb
cld
addl
cld
incl
sbb
mov
lahf
outsl
int3
push
sbb
xorl
mov
jle
xchg
popa
add
inc
sti
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
sbb
mov
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
pop
fadds
cld
or
out
lcall
shl
cld
clc
mov
mov
test
mov
pop
jg
pop
shrb
rcl
jg
adc
mov
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
mov
adc
inc
lds
push
pop
adc
imul
dec
or
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
push
pushl
enter
mov
into
test
xchg
movsb
insb
or
and
xchg
das
cld
cwtl
inc
mov
insb
test
cld
outsl
scas
jo
aas
repz
sbb
lock
in
jmp
cmp
mov
sbb
aaa
clc
push
std
mov
subb
or
mov
xchg
decl
aad
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rcrb
out
pop
or
or
dec
ss
aas
lods
leave
inc
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
fistps
jno
lret
pop
in
cmp
or
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
and
aas
mov
mov
out
cmp
or
addr16
sbb
cld
daa
jp
cld
jbe
adc
cltd
or
mov
ret
nop
xchg
clc
push
std
cmp
das
incb
lock
pop
pop
div
cld
idivl
cmc
add
scas
stc
lahf
loope
add
lahf
jmp
std
scas
bound
jge
fbstp
out
xchg
add
leave
xchg
mov
mov
loope
mov
cmpsl
popf
push
mov
cmp
ja
push
daa
outsl
das
fwait
dec
das
push
add
cmpsb
cmp
call
ret
data16
decb
adc
mov
jo
jbe
and
call
lock
jg
push
sbb
mov
inc
add
pop
out
mov
aaa
std
lock
cltd
dec
dec
inc
sbb
xchg
jmp
mov
aas
icebp
ret
ror
sbb
inc
adc
mov
mov
sub
mov
pop
clc
loope
in
scas
xorb
mov
lahf
jp
dec
add
xlat
or
sbb
and
cld
pop
inc
iret
fdivrl
xchg
lcall
decb
dec
mov
dec
or
sarl
pop
out
jg
jno
sub
out
cmp
sub
arpl
out
inc
jg
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
mov
add
push
jmp
std
mov
daa
jmp
faddl
bound
or
mov
jmp
mov
add
pop
stc
inc
dec
cli
lcall
dec
out
fstpt
mov
enter
aas
das
pop
add
fsts
dec
adc
shrb
popf
dec
sti
push
sti
pop
inc
and
xchg
lcall
mov
mov
iret
and
add
ljmp
inc
lds
repz
in
scas
aas
and
pop
push
push
mov
sarl
xor
pop
sti
stc
adc
inc
push
pop
xor
sub
jmp
leave
inc
je
adc
add
shrl
jmp
jl
mov
stc
rorl
xchg
or
sbb
lds
aad
push
lret
cli
pop
xchg
pop
test
push
lea
fisttps
jno
mov
xor
idivb
mov
incl
adc
cmp
sbb
jnp
call
jge
fbld
push
hlt
in
ret
xchg
mov
pushl
aam
push
jle
mov
and
xchg
mov
or
in
loope
ljmp
jno
and
dec
mov
sub
pop
out
stos
push
aad
nop
sbb
push
inc
js
add
out
mov
imulb
mov
pushf
mov
cmp
xchg
cs
cmp
push
pop
inc
xchg
jae
das
lcall
lods
nop
repz
in
sub
pop
mov
out
sahf
dec
popf
push
mov
jge
into
pop
div
pushf
aam
out
sub
pop
jge
ljmp
push
adc
push
dec
or
dec
push
mov
and
inc
sub
mov
sbb
pop
pop
add
cmp
push
lret
dec
rorb
lcall
subl
mov
iret
mov
push
mov
enter
sbb
sarb
incl
cltd
loopne
andl
mov
aad
sbb
frstor
pop
jne
stos
jmp
mov
sbb
popf
out
sub
push
cmp
jbe
mov
out
mov
std
adc
packuswb
ljmp
xlat
sub
daa
ffreep
dec
mov
fwait
jp
nop
push
out
xor
fcomi
test
and
push
jnp
jb
call
jle
jmpw
es
fdiv
jne
xor
jle
cmc
ret
inc
mov
in
cmp
cmpsl
cmp
jno
jno
inc
or
fcoms
sbb
pop
mull
pushf
cmc
fsubr
cmpsl
sbb
scas
test
jg
gs
inc
or
or
cli
xchg
mov
or
es
sbb
sahf
fstpt
pop
jmp
jmp
mov
cs
stos
sbb
and
adc
adc
add
xor
push
decl
sti
outsl
xor
pop
outsl
push
add
dec
movb
test
or
adc
call
push
inc
cmc
mov
and
nop
ficoml
push
inc
cli
pop
arpl
cmp
push
jb
call
fisubs
jmp
iret
gs
enter
mov
ljmp
mov
popf
es
sar
lcall
mov
inc
out
mov
ljmp
jae
cwtl
pop
aaa
aam
scas
cmp
jg
int
insb
pop
push
adc
pop
xchg
mov
in
and
xchg
mov
leave
dec
push
call
std
or
pop
mov
dec
nop
aaa
sbb
xchg
jno
push
dec
xlat
and
call
cld
and
stc
push
std
pop
ja
mov
movsl
shlb
or
mov
adcb
pop
xchg
jl
xor
out
pop
pop
adc
incl
inc
sub
lods
pop
out
fisttpll
pushl
fsubr
add
jle
fdivr
aam
xchg
mov
test
push
push
jns
dec
push
dec
xchg
jmp
pop
orb
pop
or
and
pop
xchg
jo
jge
dec
ret
push
enter
loop
push
mov
out
mov
shll
jl
test
clc
and
jmp
out
ljmp
leave
sub
imul
or
and
imul
call
out
mov
pop
adc
ja
lcall
push
mov
dec
call
push
mov
pop
mov
inc
sbb
in
dec
dec
fcompl
adc
ret
insl
out
jl
loopne
lcall
lea
adc
mov
lahf
add
addr16
cltd
repnz
dec
in
lods
adc
adc
pushw
mov
dec
movsl
and
sub
mov
imul
xchg
daa
xchg
sub
dec
mov
push
mov
xlat
push
mov
fldcw
push
jmp
movsb
pushf
call
add
ljmp
mov
sbb
stos
sahf
loop
ror
jle
adc
jl
jge
sub
jmp
xor
test
dec
lods
xchg
cmp
sub
jb
inc
out
lahf
ljmp
fbld
ja
or
mov
sbbl
pushl
sub
xchg
jecxz
xor
ret
sub
dec
lahf
dec
dec
cld
xor
fwait
shl
lret
repnz
xchg
incl
mov
lods
sbb
add
popa
int3
test
and
xlat
pop
mov
or
xchg
jg
adc
mov
mov
pop
nop
or
imul
xlat
lcall
insb
and
sub
xchg
or
dec
inc
popf
pop
cmp
fdivrs
arpl
xchg
dec
dec
out
dec
xchg
incl
cmp
fcompl
mov
adcb
mov
aaa
mov
fdivr
decl
test
rorb
inc
and
loopne
xor
scas
ret
push
lcall
popf
adc
jg
incl
push
aas
adc
add
gs
sbb
push
add
pusha
push
jg
ljmp
ret
mov
pop
fwait
mov
test
push
xor
cmp
call
inc
outsb
shrb
mov
mov
lahf
data16
inc
cmc
dec
push
popa
jae
icebp
dec
mov
dec
jnp
xor
fsubl
lret
sub
clc
pop
sar
incl
push
negl
mov
cmp
sub
xchg
ss
incl
int
clc
gs
xor
xchg
outsl
pop
cmpsb
lods
mov
push
incl
dec
int
dec
int3
stos
inc
in
enter
out
pop
dec
daa
lret
push
shll
cmp
ljmp
fucomip
lcall
xor
stos
ds
pop
shl
cmp
addr16
imull
int
cmc
inc
or
js
mov
cmpsb
dec
mov
dec
enter
les
stos
mov
leave
mov
pop
ss
pop
leave
push
jne
mov
push
mov
add
fimuls
rcrl
fstl
ss
ljmp
into
scas
call
lret
pop
push
pop
dec
jg
movsl
fisttpll
xor
out
sbbl
lcall
and
or
adc
insl
and
jo
adc
int3
into
xchg
mov
jl
and
cmpsb
pop
sub
push
dec
lcall
popa
xchg
cwtl
movl
imul
add
mov
mov
xchg
jmp
mov
fcomip
jmp
sbbb
call
xchg
xchg
adc
inc
mov
dec
push
imul
sti
dec
xchg
xchg
add
scas
mov
aas
mov
inc
adc
insb
ret
in
jecxz
mov
clc
loope
add
ja
lcall
mov
lret
js
add
fimuls
jl
fistpll
mov
inc
cs
insl
jg
jecxz
mov
mov
stc
pushf
dec
scas
test
das
mov
lcall
imulb
fdiv
notl
mov
jnp
sub
loopne
jle
loopne
and
shll
sbb
mov
cli
pop
out
rol
xchg
popl
hlt
pop
int
mov
incl
add
cld
mov
push
jge
decl
out
push
bound
fldl
jp
mov
sarl
jl
nop
jle
out
xchg
inc
out
divb
push
test
xor
sub
incl
mov
fstsw
mov
rcll
cmp
pop
icebp
rorl
loopne
and
iret
pop
xchg
sahf
call
lret
test
sbb
mov
test
ljmp
iret
arpl
fdivr
pop
cmc
lcall
push
mov
and
sbb
loopne,pt
nop
gs
ja
xor
jno
inc
pop
mov
ljmp
cltd
and
in
ja
xorl
aas
or
aaa
sbb
clts
push
push
mov
mov
dec
sti
pop
decl
push
xor
jmp
int
fwait
insb
cwtl
mov
mov
roll
cmp
lahf
or
cmp
es
jo
sbb
add
aad
enter
pop
xchg
lods
mov
push
pop
rclb
cmp
and
decl
fldl
fninit
adc
mov
out
sbb
inc
cmp
pop
adc
jle
decl
mov
or
das
or
cmpb
add
jmp
aad
sub
std
jl
and
push
pop
stos
shl
adc
xchg
cmpsb
sbbb
inc
repz
fists
cli
sti
data16
lcall
aad
cmp
cli
jmp
inc
sbb
sarb
add
in
mov
test
jo
decl
mov
loopne
xchg
push
orl
out
fldl
xor
ljmp
push
fsubs
mov
xchg
or
mov
pop
adc
in
ljmp
loope
lds
int
std
pop
rorb
in
sub
nop
push
call
icebp
push
imul
sarb
sbb
jmp
enter
inc
jmp
add
mov
and
push
add
and
mov
in
push
cmp
cmc
loope
mov
out
and
and
insb
mov
mov
xchg
sbb
or
push
mov
fcomip
decl
jne
sub
aaa
mov
mov
fistpll
inc
lcall
mov
inc
daa
cmp
jb
mov
sti
les
ds
ret
or
jnp
jmp
add
ss
addb
stos
mov
inc
cwtl
repnz
call
repz
fmul
loop
xchg
fisubl
cmc
adc
or
or
pop
bound
add
jmp
aad
xchg
and
push
push
jbe
into
or
mov
jb
and
pushl
stc
inc
mov
shl
cmp
jbe
xor
mov
loope
push
decl
movsb
and
shll
sbb
jnp
mov
test
ror
shrl
jg
mov
movsl
shrb
mov
lret
es
cmp
out
xchg
jg
mov
leave
sbb
jmp
xchg
and
jae
stos
or
movsb
adc
call
push
enter
daa
inc
mov
cmpsb
sarb
test
repz
testb
nop
lock
cmp
adc
lods
dec
xchg
adc
adcb
loop
pop
cwtl
xchg
inc
and
cwtl
decl
mov
int
adc
mov
jmp
cmpsl
xchg
sbb
cmp
ljmp
icebp
sbb
ret
sub
leave
data16
pushf
mov
loop
cmp
pop
lock
int
leave
leave
add
or
fcmovb
add
sti
and
or
pushl
add
je
inc
push
sbb
es
lock
add
mov
shl
sub
cmp
push
les
and
call
cmp
and
roll
loope
lcall
mov
mov
and
incl
cmp
pop
popa
cld
or
sub
sbb
dec
xchg
addr16
dec
dec
mov
sub
lcall
or
mov
and
dec
fldt
mov
das
test
jmp
int
cld
loop
add
enter
or
jns
aad
pop
int3
aaa
insb
scas
jns
in
clc
adc
lcall
sub
mov
adc
in
lds
negl
test
jmp
push
loopne
mov
lret
mov
inc
and
cwtl
pop
xor
fwait
add
lret
inc
and
cld
cmp
iret
jb
mov
ljmp
fisttpll
lret
dec
pusha
dec
in
dec
fucomi
cmc
cli
addb
jmp
sub
inc
pop
push
fcoml
push
fists
mov
jg
incl
orb
sub
mov
push
sbb
pushf
sbb
push
xlat
jmp
in
jne
dec
fs
xor
in
mov
jb
cmp
dec
call
std
push
dec
pop
pop
xchg
in
popa
dec
pop
pop
loopne
or
out
push
out
xorb
xor
cmp
mov
fistl
mov
cs
data16
xchg
dec
hlt
fisubrs
mov
and
jnp
cs
mov
clc
imul
cmp
out
pop
popa
mov
lcall
decb
cmp
mov
sbb
les
insl
subb
mov
ljmp
pop
mov
not
pop
xchg
pop
lcall
sub
mov
adc
jne
std
inc
inc
push
pop
fsin
clc
jl
pushf
cmp
push
jbe
sbb
add
fcoms
pop
push
ud0
mov
inc
xchg
stos
and
mov
popf
arpl
adc
ljmp
ss
dec
les
push
js
xor
push
jge
fwait
add
insl
inc
adc
insl
mov
cmp
dec
lcall
cmpsb
inc
repnz
push
rorl
repz
sarb
pop
mov
incl
cld
cwtl
movsl
jp
jg
sbb
mov
js
sar
call
lret
add
push
push
daa
xchg
mov
cmp
mov
add
cwtl
push
test
cli
outsl
int
push
int3
gs
or
inc
inc
push
push
cltd
push
fistl
call
dec
push
in
xchg
jge
sub
ror
jnp
pop
xchg
or
push
rclb
lret
jg
aaa
push
dec
sbb
rorl
pushf
fiadds
cli
or
filds
decl
ja
dec
popf
fcmovnb
mov
mov
call
xor
cmpsl
iret
pop
cmp
jl
mov
test
jae
popf
loop
lahf
xor
ficompl
pushf
dec
xchg
and
nop
mov
pusha
xor
push
jle
ss
or
sub
mov
outsb
fwait
dec
mov
sub
inc
mov
scas
dec
loope
dec
lcall
rolb
mov
mov
test
adc
push
imul
jg
adc
lea
outsb
jb
jge
push
aas
lock
bswap
jecxz
cltd
jbe
xchg
incl
test
loop
cli
scas
outsb
xor
add
lea
xor
aad
cwtl
stos
call
push
sbbb
mov
push
xor
aad
into
add
out
add
lcall
jecxz
pop
aaa
fisubrl
fdivrs
mov
jge
stc
call
dec
dec
cld
imull
cmp
aam
add
shlb
mov
ss
lcall
cmp
ret
fcoml
push
pop
mov
inc
out
cld
mov
pushl
mov
sti
je
stos
scas
pop
jnp
or
sahf
mov
jg
push
scas
ljmp
sbb
scas
jnp
push
testb
enter
rcr
ror
fdiv
jnp
adc
pushl
push
fdivrp
stos
sbb
mov
in
push
push
adc
xor
mov
aam
loope
lcall
or
mov
out
iret
cmp
lea
mov
xchg
jecxz
xchg
in
and
xor
inc
data16
cld
mov
divl
ret
mov
insb
test
inc
scas
and
out
movsb
decb
push
inc
lahf
lock
clc
mov
cmpsb
pushf
pop
fbld
jp
mov
jp
sbb
push
fimull
lcall
pop
mov
sbb
xchg
addb
arpl
es
lea
sar
ret
cwtl
xchg
outsl
insb
enter
pusha
ficoml
jge
lcall
enter
fisttps
in
mov
pop
cmpsl
jae
lock
add
or
ret
out
and
lcall
or
mov
xor
ret
cli
jbe
sbb
mov
pop
leave
in
lcall
cmp
loop
xor
inc
fwait
test
mov
test
out
pop
pop
pop
repnz
jns
icebp
push
cwtl
jo
in
mov
hlt
mov
das
mov
or
loop
mov
ljmp
pop
loopne
push
rolb
clc
lods
nop
adc
pop
push
pop
xchg
inc
pop
int
out
out
adcl
jnp
filds
sbb
inc
add
sub
lret
inc
mov
jne
jmp
jmp
addr16
negb
sub
les
cli
shl
decl
rclb
sahf
pop
push
and
mov
cltd
mov
int
loope
idiv
lcall
std
aam
jns
mov
and
fmul
lret
pop
or
inc
jns
aad
xchg
and
std
mov
mov
xchg
jmp
rcl
jbe
xchg
loope,pt
dec
dec
loope
fsubrl
pushl
mov
dec
clc
dec
jg
sbb
cmpsl
call
movsl
jns
adc
push
sub
lcall
mov
sub
daa
jnp
lret
fwait
hlt
mov
fcmovu
ret
adc
ret
incl
xor
inc
std
mov
adc
add
addb
mov
lds
mov
out
mov
cmp
adc
enter
aad
outsb
lret
mov
pushl
xchg
cmp
out
push
mov
xchg
fisubl
cmp
les
mov
movsb
pop
mov
jle
xor
mov
push
les
mov
mov
or
popa
pushf
shll
inc
in
incl
popa
dec
ds
les
fisttpll
bound
aam
mov
jns
push
call
movsl
imul
in
outsb
sti
out
negl
cltd
pop
leave
push
sbb
pop
ds
mov
dec
cltd
ds
xchg
mov
xorb
push
mov
cmp
push
xchg
sbb
mov
mov
dec
ljmp
cmpsl
pop
pop
mov
fiaddl
lock
call
push
ret
jecxz
test
cmpsl
ljmp
sub
mov
hlt
out
lds
pop
jns
repnz
or
mov
jbe
incl
sti
in
adc
push
nop
or
mov
enter
rclb
dec
cld
into
pop
pop
ljmp
jge
pop
sub
cmp
sub
mov
push
dec
jle
dec
roll
lock
lcall
lahf
int3
adc
fcoml
inc
or
ss
sbb
jo
icebp
jg
lcall
inc
cmpsb
dec
xchg
inc
mov
nop
and
sbb
jmp
and
jnp
test
stos
push
addr16
arpl
jno
jno
outsl
cmp
lcall
lods
arpl
loop
inc
aaa
std
xor
sub
pop
push
orl
xchg
inc
push
jg
cld
dec
aad
nop
fisubrs
mov
add
adc
add
cwtl
ss
lcall
jne
push
cmp
mov
adc
notl
jge
jmp
shrl
int3
mov
in
mov
lcall
xchg
sbb
mov
mov
xchg
lret
jge
movsl
mov
aam
lock
cmpb
stos
push
mov
stos
mov
xchg
lock
imulb
pop
in
lods
mov
mov
adc
fbld
or
in
rcrb
shlb
pop
negl
jne
pusha
jmp
ret
pop
aas
stc
push
data16
cmpsb
xor
fisttpl
mov
ja
enter
xor
jo
jmp
push
ljmp
inc
push
pop
adc
mov
or
repz
mov
int3
push
int
cltd
call
test
pop
and
insb
outsl
jle
std
incb
push
dec
insb
gs
dec
cmp
or
ljmp
je
and
and
xlat
pop
xchg
mov
add
push
mov
xor
call
push
mov
xor
mov
xor
add
lock
stos
jbe
mov
cmp
mov
and
mov
loop
mov
int
gs
decl
sti
in
shll
xchg
shl
psrlq
mov
daa
outsl
push
jo
mov
stos
popa
sbb
in
xchg
sbb
xor
incl
push
sbb
or
pop
or
pop
add
das
gs
popa
fs
jns
and
inc
add
inc
xor
ret
and
shr
cmp
repz
fsubrl
pushl
pop
mov
fistps
xor
addr16
add
push
inc
addb
std
mov
push
dec
mov
fdivl
xchg
std
pusha
call
pop
test
sbb
adc
scas
das
jnp
roll
mov
shrb
into
jae
test
mov
mov
lcall
mov
add
or
inc
fcom
clc
inc
and
sbb
iret
xor
stos
dec
mov
mov
cld
fildll
loopne
sbb
out
push
adc
jo
shl
nop
fs
sti
incl
adc
dec
mov
mov
adc
pop
xchg
mov
adcl
jg
pop
fsts
inc
int
sub
mov
popf
cmpsl
jno
inc
mov
pushl
hlt
test
rorl
jno
stc
sbb
sub
icebp
loope
pop
xchg
pop
lret
sub
sar
aas
sub
scas
push
pop
push
jp
mov
add
fwait
dec
das
iret
std
pop
movsb
cmpsl
notb
cli
sbb
xlat
in
cld
jge
pushf
cmc
mov
push
in
inc
mov
call
xor
call
fwait
inc
iret
mov
sahf
xchg
push
ss
shr
or
ret
ret
jbe
shll
addb
call
clc
hlt
movsb
in
mov
mulb
js
xor
imul
cmp
add
jecxz
lret
ljmp
push
ret
inc
testl
adc
xor
pop
rcll
pop
inc
enter
push
dec
mov
out
popf
xor
in
mov
push
hlt
sub
outsb
add
mov
add
xchg
testb
sub
test
cmpsb
and
cli
and
ja
fstps
mov
rclb
xchg
adc
inc
dec
lods
rcll
mov
mov
mov
hlt
bound
cmp
xor
popf
inc
pusha
sti
and
lock
mov
jmp
cld
insb
pop
push
ror
imul
cltd
xchg
orb
xchg
insl
push
push
addr16
decl
test
pop
adc
adc
inc
mov
sarb
aam
sub
pushl
pop
xchg
nop
push
fcomps
mov
mov
inc
mov
shrl
nop
jecxz
div
stos
add
ljmp
and
in
lahf
inc
xchg
jl
and
lcall
clc
loop
lret
add
addr16
leave
mov
pop
pop
inc
xchg
xchg
pop
push
incl
dec
rcll
insb
mov
subl
push
mov
shlb
push
sub
decl
push
push
outsl
push
stos
repz
js
push
mov
mov
inc
and
scas
jb
sar
mov
jmp
sbb
pop
adc
mov
xor
sub
sbb
fwait
ja
pop
decl
loopne
pop
cld
adc
lcall
xchg
sub
lods
add
enter
incl
jae
bound
cmpsl
mov
jl
xchg
je
sub
xor
jae
xchg
pop
lock
call
inc
adc
cmp
or
and
test
sbb
mov
mov
call
mov
insl
or
adc
cmp
sahf
lret
inc
rcll
ljmp
push
mov
mov
mov
and
cld
push
pop
movsl
lret
cmpsl
test
pop
cmp
or
add
iret
xchg
jmp
mov
mov
outsl
out
bound
cli
ja
pop
aas
test
in
fsubrl
mov
jne
incl
aaa
cld
jbe
cmpb
add
and
jmp
mov
mov
sub
faddl
lcall
ss
and
pop
cli
ds
xor
fdivl
addb
clc
pop
inc
ss
sbb
ljmp
cli
jmp
xchg
adc
xor
mov
in
push
push
lcall
push
aam
cld
jmp
xchg
add
movsb
dec
out
scas
popa
sub
pop
out
out
jge
pop
mov
xchg
or
xchg
sub
cmp
cmp
jle
xchg
mov
push
ficoml
sbb
mov
movsb
mov
les
cmp
imul
lahf
dec
mov
adc
pop
xchg
out
adc
hlt
xor
cmp
aad
and
test
mov
add
mov
add
fldl2e
sbb
sub
jp
add
sahf
or
je
xlat
hlt
mov
popa
xor
dec
inc
or
aad
cmc
call
jbe
data16
jecxz
aam
bound
andl
aad
inc
fwait
scas
mov
cs
int3
mov
repz
in
fwait
push
fwait
test
xlat
das
test
lcall
subb
jle
pushf
cmp
pop
push
add
pop
fstpt
and
call
loope
cmp
test
inc
in
or
fxch
lcall
mov
adcb
pop
pushl
aam
pop
jp
and
cmp
rclb
pop
ds
mov
out
in
and
jmp
pop
ret
in
dec
dec
iret
mov
subb
jnp
stos
lock
jg
add
xchg
ljmp
jb
fimuls
push
jbe
iret
repz
jno
aas
fcos
jmp
inc
shll
cmp
mov
or
int3
and
or
push
xchg
scas
dec
call
adcb
and
outsl
push
add
adc
lods
adc
leave
mov
cmp
hlt
pop
and
popf
addr16
push
cmp
push
sbb
data16
adc
jmp
imul
mov
pop
adc
xchg
mov
int3
xor
mov
xor
sub
or
add
add
das
cmpsb
lods
jmp
lret
rorb
and
ljmp
sti
xchg
mov
inc
pop
mov
faddl
mov
cmp
cmpsb
jg
mov
sbb
decb
mov
sahf
cmp
clc
jmp
add
or
push
enter
lret
into
test
mov
outsl
dec
mov
mov
popa
fwait
dec
or
andl
fwait
out
sti
adc
lcall
xchg
pushl
cmp
in
cmp
imul
pop
mov
mov
push
mov
loop
bound
faddl
mov
es
in
movsl
push
inc
loope
repnz
decl
fdivs
mov
or
cmp
cmp
and
pushl
cmpsl
repz
inc
cmpsb
cmpl
int
call
outsb
stos
aaa
add
fisttpl
jnp
inc
mov
push
sub
shl
xor
rcrl
jg
out
push
add
xchg
movsl
sti
mov
mov
dec
jne
and
fistpl
inc
mov
and
mov
jb
jno
clc
push
adc
decb
hlt
mov
mov
add
push
fwait
lods
imul
mov
push
ja
lcall
push
fsubrs
test
pop
pop
push
xor
mov
enter
repz
mov
mov
jb
fcoml
dec
in
aas
fnstsw
push
sub
push
pop
aaa
rorb
mov
dec
lcall
pop
div
add
push
notb
inc
xor
ljmp
rorl
jg
mov
add
arpl
jns
push
sub
jg
and
hlt
and
cmp
jae
or
fdivrp
xor
sub
push
subl
xlat
shrl
and
call
arpl
xor
sub
nop
cmc
mov
jge
jle
cmp
push
shlb
xchg
mul
dec
dec
mov
cmp
inc
test
pop
test
imul
insl
ljmp
adc
push
inc
popa
xchg
dec
pop
into
lock
pop
mov
and
or
adcb
inc
es
inc
stos
addl
cmc
cwtl
or
scas
and
inc
push
stos
jbe
ret
call
mov
mov
iret
add
mov
pushf
cmp
jg
jo
rorb
in
pop
shr
test
scas
je
loop
add
mov
lret
mov
jmp
scas
fsubl
lahf
jmp
push
mov
push
mov
imul
adc
add
fistl
pushl
enter
add
sbb
mov
mov
xor
xlat
in
sub
sti
xor
pop
pop
push
ja
lahf
or
jbe
aam
add
push
pushl
push
cltd
sbb
daa
mov
mov
out
and
outsl
inc
adc
sub
dec
dec
out
js
xchg
and
cmpsb
int3
sub
pusha
inc
int3
jle
sbb
lcall
add
fxam
rcll
jmp
stos
pop
int3
sti
nop
lods
mov
icebp
pop
cld
fwait
push
je
and
test
and
or
fnstsw
repnz
into
sub
push
out
repnz
fadd
sbb
push
fwait
arpl
cmpb
fcoms
aas
shr
insb
mov
jmp
jmp
outsb
dec
xchg
sub
xchg
ljmp
and
xor
cmpsb
mov
fiaddl
xchg
out
movsl
pop
lea
lods
push
loopne
in
in
addr16
cmp
sbbb
and
mov
mov
mov
shlb
iret
incb
adc
xchg
popf
cmpsb
addr16
lcall
add
in
aam
imulb
jno
mov
mov
syscall
jmp
hlt
pop
mov
sbb
ljmp
dec
pop
sub
xor
decl
popf
imul
jo
iret
dec
das
dec
and
sub
fcompl
lods
push
xchg
adc
in
call
loopne
pop
pop
sub
ja
mov
jo
mull
gs
adc
dec
and
pop
clc
in
lods
jmp
out
scas
adc
repnz
imul
pushl
sti
imul
addb
sub
pop
cmc
dec
sub
ja
sarl
int3
mov
xchg
test
pop
xchg
cmp
shlb
ja
sub
incl
mov
test
jle
pusha
ja
in
mov
mov
mov
shll
hlt
ja
push
xor
popf
cltd
fcomps
dec
add
out
cmp
dec
adc
cwtl
jo
mov
or
inc
ret
stos
scas
mov
lahf
cmp
test
inc
mov
jecxz
dec
push
jae
das
xor
les
cmp
rorl
mov
scas
xor
popf
jmp
aaa
sbb
call
nop
xlat
pop
mov
movsb
lcall
in
mov
inc
inc
pop
pop
lods
hlt
cwtl
cmpsb
xchg
dec
shll
push
mov
jns
data16
ljmp
scas
outsl
das
sbbl
jge
add
pop
mov
push
lods
addb
inc
call
mov
cmpsl
stc
cwtl
jl
movsb
addr16
add
xchg
in
pop
popf
adc
or
dec
stos
sub
xor
lods
push
or
dec
cltd
jno
das
aam
mov
in
xchg
inc
xchg
hlt
idivl
movsb
ds
gs
ljmp
pop
jmp
push
xor
mov
cmpsl
mov
xor
adc
push
sub
mov
cmpsb
pop
dec
push
loopne
push
inc
mov
dec
test
jmp
push
and
in
sti
and
mov
pop
inc
adc
cmp
push
test
ljmp
xchg
test
enter
mov
sti
push
js
jmp
fstps
adc
call
sub
fimull
jnp
jb
shll
pushf
outsb
mov
std
mov
call
stos
stos
sbb
outsb
mov
cli
lret
pop
fwait
cs
imul
cmp
push
outsb
mov
scas
repnz
lods
mov
jb
push
mov
mov
and
pop
cmpsl
je
lods
pusha
mov
decl
push
and
dec
arpl
adc
xor
jle
lret
test
or
icebp
fcomip
incl
mov
je
xor
adc
stc
xchg
pushl
pminub
adc
push
ljmp
push
jo
xchg
data16
ret
and
xchg
push
jmp
adc
shll
xchg
cmpsb
cmp
adc
rorl
sti
xor
pushl
adc
jbe
add
dec
cld
mov
xchg
or
and
out
ror
call
nop
outsl
aaa
cmpsb
xor
mov
sbb
xchg
or
aad
cmp
mov
cmp
fildl
add
xchg
and
mov
push
scas
pusha
std
ja
jl
add
or
lds
jecxz
inc
imul
imul
imul
add
cmp
out
dec
sub
cmp
pushf
decl
loopne
mov
lds
dec
adc
inc
xor
add
mov
dec
mov
js
or
test
loop
xor
arpl
dec
mov
mov
inc
push
pushl
push
popa
jne
jge
cltd
and
jbe
inc
pop
inc
movb
push
popf
popa
sbb
int3
cld
mov
jmp
ja
adc
mov
mov
popa
lcall
jb
ljmp
cmp
jmp
fistpll
popf
add
aas
js
adc
imul
repz
mov
call
and
dec
mov
dec
testb
push
add
mov
ds
mov
or
mov
push
xchg
mov
call
mov
mov
aam
cmp
sub
jb
xchg
sub
incl
mov
mov
xchg
shrl
push
inc
mov
fstps
cmp
fmuls
repz
andb
shr
jmp
dec
sar
mov
or
mov
fildl
shll
cmp
dec
stc
sub
lret
outsl
jl
xor
ret
add
cltd
and
sub
push
dec
and
jbe
jle
jg
leave
dec
xchg
add
fs
mov
jp
repnz
imul
call
lcall
adc
mov
loope
pop
cmc
scas
aam
adc
fimull
mov
xchg
and
mov
testl
call
xchg
pop
pop
jmp
xor
sub
lds
cli
push
push
out
mov
push
mov
jb
dec
dec
lea
jge
pushf
jne
psrld
leave
mov
out
inc
bt
decl
xor
mov
mov
adcl
bound
ljmp
nop
out
push
js
bound
and
repnz
jae
scas
sahf
out
jns
sbb
mov
pop
aad
jecxz
cmpsb
int
xor
ljmp
orl
inc
xor
ljmp
sarb
push
or
add
mov
pop
inc
fldt
mov
call
mov
lods
and
cs
lret
pop
sbb
fistpl
in
mov
call
cmp
mov
pushf
dec
cmc
and
fildll
mov
jle
and
ljmp
fnstcw
loop
rcr
xor
xor
mov
adc
lcall
data16
fdivrl
add
fstp
mov
loopne
mov
sahf
xchg
mov
dec
sbb
clc
lock
jl
loopne
js
and
push
mov
fstl
lea
nop
pop
or
pop
rorl
fwait
push
incl
inc
movsl
dec
jecxz
xchg
add
or
dec
shl
mov
lret
dec
pop
mov
hlt
ljmp
pop
xlat
pop
imul
int
push
js
loop
add
in
push
sbb
fcomip
cmc
cmc
xchg
dec
xchg
std
lcall
xchg
pop
arpl
icebp
jle
test
ljmp
cli
call
orb
imul
and
idiv
ljmp
ja
mov
mov
out
push
cli
dec
aad
jge
add
cld
or
push
das
cli
dec
insl
dec
inc
inc
pop
int3
lds
inc
stos
mov
and
sbb
scas
shll
int
adc
lret
adc
xchg
mov
xorl
stos
jp
push
fstpl
decl
pop
das
leave
adc
pushf
add
in
add
sub
jl
repnz
jg
or
into
cmp
cmp
cmc
in
pop
test
mov
mov
repz
sti
xchg
cli
dec
add
jg
jg
or
into
push
jg
insb
addr16
incl
mov
adc
push
std
sarb
cwtl
fdivrp
repnz
fsts
jl
popl
or
jg
pushl
push
mov
ret
mov
xor
push
cmc
push
sub
enter
pushl
or
push
xor
pop
into
push
popa
xor
ja
mov
and
out
cli
mov
daa
mull
push
std
lea
insb
add
adc
ret
fbld
and
add
cmp
iret
rolb
adc
jo
pop
dec
jae
cli
or
int3
cs
ucomiss
add
icebp
out
mov
jg
jg
dec
mov
pop
ljmp
jbe
adc
xor
push
mov
inc
xchg
and
sbb
sti
das
data16
ljmp
inc
imul
decl
add
pop
ja
sbb
xorb
sub
out
pop
push
rcrb
and
and
pop
rcll
les
cmp
stos
jecxz
sub
pushl
sub
std
add
mov
fistl
xor
fbstp
jp
cmp
loopne
mov
jno
nop
pop
test
pop
jno
movsb
les
mov
inc
mov
push
dec
push
call
cli
add
repz
pop
mov
jne
pusha
pusha
fsts
in
xor
lods
or
push
mov
lock
cmp
adc
inc
cltd
mov
call
mov
sub
repz
call
xor
ror
daa
add
push
dec
leave
cmp
pop
add
cmpsb
stos
jno
pop
lock
inc
adc
fisttpl
xchg
sbb
pop
sbb
ljmp
mov
adc
pusha
and
test
mov
pop
repnz
lcall
jmp
mov
and
bound
lock
fbld
inc
daa
mov
pushl
orl
lahf
mov
jle
aaa
iret
xchg
jle
call
jno
jnp
mov
shlb
mov
cmp
push
cmpsl
hlt
pusha
xlat
sti
or
pushf
xchg
incl
xlat
sarb
mov
out
out
nop
mov
mov
negl
jo
pop
mov
and
push
mov
inc
stc
scas
outsl
jbe
adc
scas
and
cmpsl
incl
in
mov
je
adc
and
pushf
jmp
mov
pop
push
fistl
jb
mov
dec
mov
mov
lds
hlt
sub
push
mov
cmp
ljmp
out
stc
out
dec
xchg
xor
jle
hlt
jae
shlb
lcall
mov
in
xchg
jb
repnz
xor
mov
mov
jp
jg
xchg
dec
shr
or
mov
dec
sub
cwtl
addr16
pop
jecxz
fsubrs
clc
pop
and
js
xchg
pop
fnstsw
mov
sub
pop
sti
lcall
pop
cmc
insb
dec
in
inc
jecxz
sub
negb
into
nop
daa
inc
rol
sbb
jg
sub
es
out
or
mov
or
pop
subb
inc
ja
lcall
and
stc
jecxz
clc
out
repnz
cmp
mov
ljmp
add
or
ds
sub
es
orl
std
ja
push
fdivrl
sar
lcall
fcmovb
pop
push
aaa
js
test
dec
push
lret
or
addr16
mov
pop
shlb
ja
inc
imul
lea
sti
cltd
stc
jl
bound
aaa
pushl
pusha
jae
aad
xlat
adc
subl
fadd
mov
pop
pop
jae
aas
inc
push
jmp
es
mov
xor
loop
repnz
pop
in
loopne
push
idivb
negb
out
mov
movsb
cmp
movsl
and
xchg
cs
mov
sbb
push
adc
jmp
sbbl
dec
int
jno
mov
push
adc
inc
repnz
call
or
sbb
pop
sti
jns
xchg
popf
mov
adc
ljmp
cmpsb
add
xor
xchg
pcmpeqb
xor
mov
pusha
dec
mov
pushl
inc
push
adc
inc
mov
push
sbb
mov
lcall
mulb
inc
roll
xor
mov
mov
sahf
cmp
fisubrs
jbe
cmp
pop
fadd
js
loopne
and
std
pushl
mov
push
loope
xor
adc
push
nop
mov
mov
sahf
or
dec
mov
and
push
lock
dec
mov
pusha
pop
cs
push
nop
les
inc
sub
xchg
push
in
decl
jb
loopne
push
leave
adc
mov
push
popa
cli
stc
add
jnp
pop
fsubs
push
cmpsb
add
jmp
and
jno
or
enter
jne
or
sub
test
leave
or
inc
pop
adc
cmp
xchg
mov
jmp
sbb
xlat
jo
sbb
xchg
add
decl
adc
dec
jle
imul
gs
inc
jmp
mov
loopne
cmp
add
out
out
sub
or
and
loop
rcl
push
mov
inc
jns
mov
push
in
cmp
daa
ud0
jo
loop
add
adc
inc
test
aad
mov
fs
jmp
inc
rolb
sbb
pop
fwait
je
sahf
cmpsb
jg
es
sti
push
shll
push
pop
sbb
pop
dec
mov
pop
or
jl
xchg
adc
loop
xchg
mov
out
push
add
incl
sbb
cli
mov
repnz
add
leave
iret
pop
lock
iret
repnz
jmp
in
test
addr16
or
and
loop
or
fwait
sub
imul
fidivrl
sbb
cmp
cmp
sbb
dec
jne
adc
pop
test
push
loop
push
stos
cmpsl
and
out
jecxz
loope
or
pushl
out
xor
add
in
mov
pushf
jmp
pop
arpl
ljmp
push
pop
popf
sub
std
jge
fcomi
fisubrl
jecxz
int
dec
stos
insb
sub
decl
fs
push
xchg
jo
jl
fstpt
out
pop
pusha
cltd
jno
enter
out
loope
or
dec
pavgb
js
or
movsb
out
ss
movswl
ljmp
and
in
repnz
mov
and
idivb
hlt
add
lds
ficoml
shlb
dec
sti
and
jg
jg
and
insl
addl
int3
fsubrs
inc
sti
or
rolb
mov
mov
ret
xchg
stos
bound
stc
push
mov
in
inc
dec
test
mov
jmp
jmp
cbtw
ss
adc
dec
xchg
jge
push
std
dec
mov
inc
pop
int3
adc
inc
arpl
cmp
in
ret
push
add
rclb
enter
xchg
jmp
fbstp
rorl
nop
data16
or
sbb
dec
and
hlt
fisubrs
enter
lcall
pop
rorb
subb
jnp
scas
mov
int3
or
ss
incl
mov
push
lahf
lret
xchg
jecxz
inc
jae
rcrl
loope
lret
cmpsb
xor
cmp
call
lock
insb
add
push
cmpsb
jno
mov
out
adc
inc
test
sub
addr16
sarb
and
xchg
scas
lret
popa
cld
fwait
mov
cmp
add
repz
xorb
mov
decl
jb
stos
sbb
idiv
jbe
pop
pop
cltd
dec
and
inc
lods
cld
rolb
out
sub
inc
xchg
shr
jne
popf
popa
adc
jle
ss
rcr
nop
fcmovne
mov
stos
cmc
daa
call
jns
aaa
mov
cli
adc
fs
push
cld
test
dec
shll
pop
add
out
adc
sbb
repnz
xor
push
mov
jmp
cmp
inc
inc
in
fstl
xor
lea
cli
xor
lcall
jmp
mov
mov
lret
inc
pop
mov
scas
gs
shr
mov
arpl
or
cli
pushl
imul
hlt
test
mov
mov
sti
cld
ljmp
push
cmpsb
add
xor
jle
adc
cli
dec
jnp
cmpsl
stos
into
incl
push
cli
jecxz
ficoms
lcall
xor
les
jg
jae
cld
lcall
popa
stos
adcl
icebp
repz
mov
add
push
dec
movsl
push
decl
cmpsl
dec
sub
add
push
xchg
jns
daa
push
sub
jns
inc
jnp
lock
pop
cmp
cmp
movsl
jmp
and
jmp
dec
and
ljmp
inc
cmp
arpl
in
je
add
push
push
pop
push
out
mov
lcall
outsb
rcrl
sahf
adc
pushf
pop
ljmp
xchg
xor
inc
pop
mov
jmp
fldenv
mov
addr16
fstps
aaa
bound
mov
stc
push
dec
pop
notb
incl
dec
pop
jge
jbe
push
pop
shrl
push
jns
sub
xchg
lret
push
pop
jl
mov
add
jmp
bound
aaa
nop
outsl
stos
lock
leave
mov
loopne
adcb
fwait
xchg
dec
in
decl
push
or
push
pop
mov
inc
sti
or
lcall
xchg
js
hlt
jmp
mov
inc
cmpsb
pusha
lahf
lret
fdivrs
push
add
pop
sbb
addb
push
std
incl
jmp
addr16
and
inc
and
jb
fcomip
call
push
je
mov
jmp
mov
repnz
or
lods
adc
sti
dec
inc
mov
ret
push
mov
mov
xchg
cmp
fwait
insb
jecxz
pop
inc
sub
incb
push
jnp
cmp
ja
lods
shr
inc
movsb
sub
pop
xchg
arpl
push
leave
sbb
dec
pushw
pop
push
xchg
fldenv
loop
insb
adc
jg
incl
ss
adc
loop
xor
sbb
pop
hlt
call
cwtl
jmp
imul
jg
dec
push
inc
mov
jnp
lea
add
cmc
mov
push
popa
icebp
sub
mov
xor
hlt
push
repnz
shrb
insl
je
adc
xor
bswap
pop
and
call
xchg
push
outsl
movsl
push
mov
mov
insb
call
movsb
mov
loope
in
out
xor
xchg
or
inc
push
inc
jge
addr16
or
stos
mov
mov
lahf
lcall
cmp
mov
fstpt
bnd
mov
shlb
call
sahf
pop
adc
pushl
jne
xchg
and
pushf
movl
daa
fcomps
adc
push
mov
xor
sub
fists
xor
js
decl
cmc
leave
cmp
in
cmp
sbb
and
dec
into
xchg
sub
mov
mov
sub
out
clc
std
jb
inc
jb
mov
and
adcl
cld
inc
int
mov
sub
mov
lods
mov
icebp
jb
add
push
shlw
or
test
fbstp
insb
in
pushf
sbb
jbe
int3
ljmp
divl
icebp
and
xor
fstps
adc
or
movsl
jmp
or
mov
mov
lret
cs
addr16
fs
and
rcrb
popf
je
jecxz
mov
stos
lret
movsl
inc
lods
dec
or
call
push
lcall
ror
or
sbb
xchg
mov
xchg
cmp
jmp
push
and
das
pusha
and
lea
loop
mov
cld
sbb
push
outsl
ljmp
jmp
mov
mov
cmp
popf
jle
mov
test
jnp
daa
loope
lretw
adc
lcall
adc
cmp
sbb
add
in
jae
fs
push
sub
ret
imul
add
iret
xlat
pop
pusha
cmp
repz
jns
xor
mov
es
and
and
rolb
negl
mov
jg
insl
bound
mov
std
stos
addb
imul
adc
pushf
cmpsb
test
out
sar
decl
inc
push
push
insl
xchg
scas
les
cmp
inc
sbb
lods
lahf
dec
jg
call
sbb
mov
jne
mov
gs
jg
call
fbld
lcall
lods
jb
sbb
leave
in
add
or
jmp
sar
mov
outsl
loop
aaa
xchg
sbb
mov
jmp
sub
fwait
mov
fimuls
ja
insb
scas
lahf
lock
sti
pop
fs
sbb
xchg
cmpsb
sub
lock
ret
pop
decl
sbb
lret
lock
add
movsb
mov
mov
cmpsb
cld
jae
pop
jmp
pop
cs
xchg
cltd
sub
or
in
int3
inc
lods
lock
mov
and
push
lods
jmp
call
sub
dec
pmuludq
enter
push
cmp
loopne
imulb
sub
pushl
unpcklps
sbb
push
push
ret
inc
inc
and
fcomip
pop
adc
pop
int3
repz
and
mov
sub
xor
pushl
fstp
inc
ja
xchg
pop
std
mov
push
lock
ljmp
mov
mov
int3
push
xchg
sti
ret
out
push
inc
xlat
xchg
jp
sahf
add
pop
clc
fs
mov
ljmp
mov
ds
jno
dec
andb
imul
icebp
ljmp
lock
aad
addl
cs
cwtl
stos
mov
push
lahf
add
or
scas
cli
jmp
xor
shl
xor
xchg
sbb
mov
and
push
jmp
in
bound
push
jb
mov
pop
icebp
adc
fsubrs
jo
call
out
nop
loopne
xor
outsl
call
cmc
or
push
dec
sub
decl
fwait
into
clc
test
nop
insl
dec
repz
push
sbb
and
xor
ljmp
push
jmp
pop
mov
aad
and
and
lcall
in
dec
mov
aaa
insl
dec
mov
pop
xor
aam
insl
fucomip
stc
and
mov
das
popf
sbb
les
jmp
mov
cltd
adcb
dec
sbb
mov
pop
add
repnz
push
xor
ficoms
lods
fcmovu
nop
or
incl
in
cli
mov
and
cmp
ds
adc
xor
ffreep
cltd
adc
jecxz
xchg
sub
xor
mov
dec
movsb
les
jnp
decl
stos
ret
bound
or
cmp
adcb
push
push
cmpsl
push
pop
popa
jle
mov
test
popa
pop
add
dec
push
sahf
sar
rorl
out
in
jp
std
call
shll
negl
out
out
cmpl
push
les
mov
jl
cli
cmp
flds
mov
jge
fsubr
popf
or
inc
adc
mov
repz
aam
rorl
mov
decl
push
adc
mov
add
leave
inc
mov
outsl
arpl
pop
sub
fcmove
push
cmc
push
mov
or
mov
lds
call
call
insb
test
mov
sub
stc
or
arpl
idivl
jmp
add
testb
inc
stos
cmp
enter
fnstsw
mov
mov
scas
imul
xchg
iret
enter
jg
rcl
xor
idiv
ljmp
mov
fldl
sub
ds
xor
or
pop
add
lea
ret
mov
inc
test
je
inc
mov
scas
stc
into
rorl
scas
decl
xchg
mov
sbbl
test
mulb
sub
mov
popa
adc
lcall
adc
int3
sbb
push
inc
sub
stos
addr16
fdivr
add
inc
dec
adc
dec
lods
cmp
and
jle
imul
or
inc
rorb
jmp
inc
xchg
lret
mov
xchg
in
xchg
sbb
xchg
scas
sti
pop
loope
insb
sbb
dec
sbb
mov
fcomip
mov
xchg
jb
mov
jne
add
daa
sub
shr
imul
outsb
fsqrt
loope
in
in
adc
sarb
pusha
in
ficoml
jle
xor
lock
jg
pop
aam
in
and
push
pop
inc
es
adc
frstor
aaa
jp
leave
cmp
mov
out
stos
xor
add
mov
fists
xchg
data16
and
cltd
ret
jl
cmpsb
jmp
addr16
shrb
call
adc
mov
sub
xor
pop
and
lcall
lods
sbb
pop
xchg
fcoml
ds
dec
cmc
movsl
enter
dec
push
in
or
call
pop
cmc
ljmp
call
mov
out
not
nop
bound
mov
sub
jl
cli
cmp
bound
push
xchg
pop
ss
sbb
push
sub
inc
mov
xchg
mov
or
es
lock
mov
sub
inc
sub
sti
push
add
pushl
popa
xor
jns
cli
cltd
mov
pop
ror
out
repz
ss
arpl
sbb
pop
sub
aad
idiv
mov
xor
je
rcll
mov
mov
pushl
lods
fsts
daa
jle
jmp
and
pop
nop
xchg
dec
push
inc
loopne
or
ja
call
movsl
xchg
mov
outsl
mov
imul
or
cvtdq2ps
mov
cmp
and
cmpsl
push
mov
lret
xchg
jecxz
xchg
lret
ss
mov
inc
inc
and
push
std
ret
imul
sahf
dec
pop
cld
ljmp
add
inc
jmp
std
mov
and
inc
dec
push
xchg
fwait
xor
dec
xchg
push
xchg
cmc
mov
ds
pushl
imul
or
xchg
cltd
and
push
js
jae
test
mov
bound
inc
or
sub
arpl
jle
inc
ljmp
pushl
mov
lcall
movsb
sub
mov
cmp
sub
addr16
fcomip
sbb
int3
xor
xlat
fmuls
mov
movsb
out
push
rcll
jmp
or
shrl
jnp
insb
mov
push
sti
fiadds
lahf
enter
mov
jl
and
xor
ret
adc
loop
loop
inc
push
push
jmp
gs
stc
xlat
bound
js
and
stos
incl
pop
inc
add
sub
pop
inc
or
add
add
cli
sbb
leave
mov
popa
ja
add
adc
mov
inc
or
pop
mov
jmp
fcmovb
int3
out
cmp
inc
data16
insl
fnstenv
insb
dec
icebp
or
std
fildll
xor
inc
cld
pop
shll
aas
pop
pop
call
push
pop
xorb
shll
pop
lret
mov
addr16
pop
imul
cli
mov
or
hlt
hlt
sub
popa
xor
inc
add
sti
fpatan
push
xlat
xchg
outsl
jmp
cmpb
out
cmpsb
and
lret
cli
dec
pop
adcl
mov
movsb
jne
lcall
cmp
movsb
ret
push
push
incl
popf
outsb
iret
movsb
add
mov
pop
lods
jmp
mov
ljmp
xchg
mov
dec
test
sbbl
xorb
sub
or
hlt
fldl
pop
fidivs
decl
mov
jb
scas
jecxz
outsl
je
sub
pop
sub
hlt
jbe
arpl
aaa
cld
inc
dec
or
mov
sbb
outsb
addr16
or
add
jmp
xchg
xor
in
or
sub
inc
test
and
mov
jl
lcall
sbb
insb
jae
dec
dec
or
adc
testb
mov
mov
shll
ljmp
clc
inc
cld
aad
push
push
xchg
adc
rcl
lret
popf
push
ljmp
xchg
add
push
xchg
insb
arpl
sbb
arpl
out
inc
adc
fisttps
and
cmpsb
mov
incl
adc
xor
or
mov
or
push
jle
add
clc
or
push
pop
std
ja
lcall
mov
imul
ljmp
push
mov
dec
sbb
xchg
pop
and
fwait
jnp
xor
and
mov
decl
rcrb
push
or
insb
aam
call
sub
xlat
int3
sub
xchg
ljmp
mov
inc
or
add
nop
push
test
or
jns
jnp
inc
out
clc
jmp
jns
rcll
pop
test
mov
xchg
fnsave
push
pop
cmp
mov
loope
push
inc
dec
bound
ret
fcoms
mov
gs
hlt
xchg
inc
jmp
stos
cli
mov
out
sub
or
lahf
test
fiaddl
mov
mov
incl
jo
xchg
ret
ljmp
xor
add
jmp
jmp
jmp
pop
std
cmc
and
imul
add
cltd
cltd
iret
fists
inc
ljmp
jmp
or
aad
add
dec
sub
xor
repnz
das
mov
xchg
mov
or
mov
inc
jb
shlb
cli
inc
pop
aam
xchg
cmp
sbb
jp
out
cmp
jmp
lds
jl
sub
iret
cmp
cli
push
add
call
inc
cmp
stos
lcall
add
sbb
push
rol
pop
rcll
pop
xlat
add
inc
mov
jmp
fistpll
pop
rclb
lds
aam
xchg
xor
fsubs
fidivrs
mov
ja
mov
sbb
lods
pop
mov
mov
mov
in
rol
cli
xchg
ljmp
xlat
ret
mov
repnz
pop
imul
push
out
cli
das
pop
jecxz
dec
adc
popf
xor
mov
sbbl
or
ja
ret
and
lods
leave
inc
push
mov
push
rolb
add
cli
shlb
jns
push
and
push
cli
adcl
out
jp
adc
add
lock
adc
and
daa
adc
mov
int
fxam
insb
add
rclb
sub
cmpsl
or
pop
incl
push
lahf
push
dec
in
xchg
jo
notl
out
mov
lods
sub
add
decl
out
sbb
into
and
loop
pop
cmpsl
jmp
stc
cmpsl
incl
std
lds
lcall
sbb
inc
gs
out
jne
pop
jl
int3
test
loope
ljmp
in
dec
shlb
or
sbb
and
cmp
shrb
out
imulb
fcomip
pop
aam
push
or
push
ds
lahf
lods
rol
push
adc
incl
lds
enter
test
jle
xchg
loopne
push
ds
dec
mov
mov
call
clc
fdivs
ds
mov
pusha
bound
push
insl
stos
mov
mov
cld
adc
add
sub
nop
lds
xchg
jp
flds
push
adcl
into
scas
in
push
mov
lcall
pop
add
jecxz
cmp
popf
mov
insb
add
and
mov
popf
jg
je
jne
fnstcw
and
ljmp
dec
mov
dec
sbb
popa
sub
js
fcmovnu
adc
or
or
ljmp
imul
out
and
inc
dec
or
arpl
dec
out
insb
mov
push
fists
cs
sbb
mov
idivl
push
mov
jno
xchg
call
cmpsb
incl
iret
test
pop
xor
mov
mov
insb
loop
jg
nop
xor
mov
jge
lret
aad
adc
mov
push
arpl
test
shll
add
mov
push
aaa
sbb
cmp
sub
xchg
cwtl
cmc
sbb
bound
repz
pop
jb
daa
sbb
dec
mov
lock
fs
fistps
mov
fmull
call
mov
mov
push
popa
xchg
xchg
pop
enter
xor
mov
pop
adc
xor
or
addl
mov
jmp
mov
jno
pop
ss
xchg
lods
jns
push
jmp
fistpl
lret
rcl
sbb
sub
push
shrb
std
cmp
mov
jecxz
lock
mov
mov
aam
lcall
ret
jnp
mov
lods
xor
addr16
inc
xor
xchg
movsl
pop
or
cmc
jge
dec
sbbb
dec
je
sub
dec
js
sub
cmp
and
mov
shlb
or
mov
ljmp
inc
xor
inc
ljmp
cltd
into
xchg
int3
and
test
inc
inc
fbld
popf
cli
mov
jno
hlt
lret
out
aam
lods
sbb
add
decl
pop
cmpsl
test
cld
jnp
pusha
cmpl
xor
mov
sbb
lret
jmp
cli
jge
or
outsl
adc
imul
jo
shll
imul
mov
adc
incb
mov
call
sbb
nop
daa
xor
fwait
dec
push
ret
push
in
jmp
cmp
popf
mov
dec
in
adc
pop
pop
divl
cmp
and
inc
in
dec
mov
add
mov
dec
scas
cltd
add
decl
push
mov
xor
subl
cwtl
push
shll
adc
insb
jl
pop
hlt
fcoml
mov
inc
pop
xor
es
pop
jno
cwtl
mov
mov
lahf
loope
test
add
popf
pop
fdivrp
fs
hlt
ljmp
cmp
mov
lods
call
dec
ljmp
incb
xor
addb
lret
xchg
mov
repnz
or
jmp
lock
xor
andb
jmp
lods
cmp
in
add
int3
test
bound
mov
out
in
xchg
ljmp
nop
pop
jb
xchg
pop
push
jbe
pop
fnstsw
pop
and
sub
in
fwait
mov
mov
inc
addl
dec
fidivl
xchg
fwait
mov
inc
scas
xor
pop
cmc
lcall
add
out
jle
mov
int3
ret
mov
sub
cmp
fidivl
sbb
decl
add
push
out
cmp
out
std
imul
sbb
jg
mov
std
cmpsb
pushf
es
in
into
xchg
inc
pop
jle
mov
call
out
outsb
adc
cmp
inc
xchg
push
daa
aaa
sub
aad
jecxz
jne
fidivrl
fisttps
lcall
insl
jne
loopne
test
sub
incl
popf
leave
mov
and
push
ja
lods
and
push
xchg
dec
movsl
adc
push
dec
lcall
sub
dec
pop
sbb
movb
mov
loopne
fsubrl
mov
aas
shrb
adc
sbb
pop
jp
jl
sub
loopne
imul
mov
cmpb
mov
sub
push
out
or
lds
fwait
ljmp
sbb
repnz
mov
popf
in
sub
mov
fsubs
insb
outsl
mov
jmp
pop
adcl
icebp
ret
cmp
out
lds
leave
jg
push
std
pushl
adc
shlb
test
sub
es
lcall
in
or
mov
test
cmp
or
cmp
pushf
or
incl
icebp
mov
adc
clc
sar
xor
jl
mov
test
mov
int
jo
and
js
out
pop
testb
cld
inc
loope
inc
xor
sbb
pop
les
sbb
jg
ds
movsb
lock
push
adc
jecxz
lods
stos
add
in
mov
jmp
inc
pop
pop
push
pusha
rcrl
subl
xlat
test
xchg
mov
repz
adc
out
std
pushl
add
sub
inc
popa
dec
lods
divb
lea
enter
jmp
pusha
test
cli
mov
cli
int3
sub
test
sub
fcomip
stc
cs
sub
push
int3
mov
xchg
rcrb
pushl
jg
mov
cmp
repz
sub
xchg
mov
popf
jecxz
sub
mov
jmp
push
xchg
popf
jbe
divb
cmp
xlat
bound
pop
movsl
aad
popa
in
or
pop
pop
hlt
scas
jle
add
jg
ljmp
mov
ss
and
nop
jnp
add
loopne
xchg
arpl
dec
aaa
std
ljmp
test
jno
std
das
mov
pusha
jo
ret
add
int3
sbb
ljmp
jecxz
sub
repz
dec
mov
pop
jbe
decl
adc
addl
add
das
fwait
mov
repz
mov
add
incl
fimuls
cmpsl
and
rorb
lea
shlb
fnstcw
jle
and
jg
fmul
pushf
add
add
fisttps
mov
mov
jnp
icebp
dec
arpl
call
stc
dec
mov
pop
int
inc
repnz
fidivrl
insl
cmp
shrl
lds
adc
movsl
int
jecxz
aam
push
jns
inc
xor
and
out
mov
cltd
ret
xchg
jne
mov
cwtl
in
sub
decl
outsb
imul
sbb
rcll
pop
xchg
fcomps
pushl
adc
fisubs
and
xor
leave
xlat
lcall
inc
dec
mov
xor
and
dec
sbb
sti
pop
jg
popl
adc
call
or
pop
nop
inc
sub
ljmp
cmp
shl
cld
sub
mov
and
inc
jmp
and
sti
inc
cmp
in
push
in
pop
clc
test
ret
sbb
sbb
xor
in
mov
adc
push
cmpsb
dec
addr16
subb
ret
jp
js
cmpsb
fcompl
decl
xchg
in
or
jle
inc
add
mov
or
inc
dec
decl
jbe
test
sub
imul
adc
xchg
decl
cs
push
ja
adc
pop
rcrl
rclb
in
add
lcall
mov
insl
fsub
pop
icebp
push
mov
les
pop
xor
arpl
aad
fistl
or
lods
and
inc
xchg
xchg
fistpll
js
shl
fwait
je
divb
movsl
push
cmpsl
aaa
lret
add
icebp
call
lods
lock
sbb
fs
aad
mov
ljmp
mov
mov
pop
jecxz
enter
adc
lds
movsl
jg
aad
cmp
out
inc
lahf
or
cmpsb
lods
inc
pop
xor
push
clc
dec
arpl
addr16
stc
repz
sbb
lods
xor
lods
lcall
fwait
pop
decl
movsl
push
mov
das
jb
loopne
std
inc
rcll
pushf
lcall
orl
imul
mov
mov
daa
int
pop
mov
into
lcall
cli
out
or
sarb
jne
jp
push
mov
xor
mov
stos
int
pop
pop
inc
mov
inc
in
jae
aaa
cld
fisubs
and
pushl
jb
test
pusha
repz
xchg
das
adc
rol
imul
fistpl
dec
xchg
jne
mov
mov
rcrl
adc
mov
sar
call
xchg
jnp
mov
imul
in
push
clc
pop
imul
sbb
dec
stos
dec
mov
xor
adc
xor
loope
and
push
cmpsl
decl
out
xchg
gs
xor
stos
das
loope
les
pop
adc
sub
dec
mov
stos
dec
or
and
int3
mov
mov
mov
adc
movsb
mov
aaa
jmp
sbb
cmpsb
scas
out
mov
shll
into
aaa
add
push
pushl
dec
push
mov
lahf
btr
clc
ret
je
adc
cld
popa
icebp
dec
js
int
inc
test
add
ret
xchg
mov
arpl
adc
add
stc
popa
push
lcall
xchg
sbb
mov
pop
ret
cmp
jno
cmpsl
dec
add
in
dec
mov
pop
pop
pop
sbb
in
cmpsl
stos
inc
jae
lods
and
in
inc
cmpsb
push
ds
adc
ljmp
pop
or
or
shlb
dec
xchg
mov
fwait
jne
push
mov
lcall
mov
sbb
negb
or
jns
sbb
pop
icebp
gs
lcall
fcmovnu
sbb
xor
int
cmpsl
clc
jnp
jl
stos
outsl
lea
add
adc
pushl
inc
dec
popa
lcall
daa
pop
mov
mov
mulb
jne
lcall
dec
mov
add
cmp
addb
xor
std
ljmp
xor
cmp
jmp
mov
fwait
xor
daa
push
push
call
xchg
test
daa
scas
icebp
inc
mov
scas
or
movsb
cmp
jns
enter
fstpt
inc
movb
add
in
je
or
ljmp
mov
mov
sarb
pop
testb
add
jle
pop
pop
sti
movsb
daa
push
or
popa
cmpsb
add
jmp
dec
rorl
jb
data16
fimull
dec
out
test
xchg
pop
imul
add
incl
out
ret
idivb
push
test
daa
outsl
dec
ja
dec
test
cmp
loop
push
fistps
xchg
shr
sub
fwait
xchg
xchg
stc
jno
mov
mov
in
push
mov
in
shrl
les
ret
and
ja
ds
xor
in
sbb
xor
pushl
lcall
cpuid
dec
add
cwtl
into
sbb
add
in
sbb
pushl
xor
xor
orl
dec
push
jns
fld
pop
out
and
repz
inc
lret
xor
lahf
cmpsb
movq
in
cmp
ljmp
loope
mov
hlt
xor
mov
iret
out
scas
mov
mov
cmp
int
ss
mov
xorl
inc
call
sub
pop
add
or
lock
add
lahf
daa
stc
stos
gs
add
decl
inc
add
aad
fs
neg
cmp
dec
jnp
es
mov
popa
jnp
xor
cmp
inc
adc
repnz
bound
filds
xchg
out
mov
inc
push
stos
xchg
pop
lods
mov
sub
inc
aam
std
mov
sbb
xchg
fidivrs
or
dec
movsb
mov
ja
jg
out
sbb
mov
sbb
sub
and
rcll
call
aaa
pop
push
xchg
or
leave
cwtl
jp
push
mov
fwait
loop
jno
lahf
adc
jbe
loopne
pop
aam
pushl
inc
mov
pop
mov
lret
xor
cmc
repz
cltd
stc
xchg
sbb
js
mov
sub
ljmp
cli
icebp
jl
imul
das
fwait
rcr
inc
lret
mov
mov
fcmovnb
sbb
incl
test
xor
and
jae
rcll
cmp
xor
into
xchg
lret
push
sub
push
lods
push
cmpsl
inc
lock
mov
fstpl
outsb
jl
sarl
dec
push
loope
in
sbb
pop
push
pop
dec
mov
outsl
pmaxsw
and
stc
shlb
mov
ret
repz
ljmp
xchg
stc
mov
in
xor
fcmovbe
xor
adc
int
cli
cs
aaa
push
or
sub
imul
xchg
inc
lds
inc
das
iret
mov
sub
push
jbe
push
in
jmp
incl
sbb
pop
popf
int3
sub
loope
mov
in
cmpsl
leave
outsl
loope
pop
cmc
lcall
push
mov
jo
lcall
mov
jmp
arpl
ljmp
stos
popa
adc
mov
sahf
ljmp
std
inc
stc
clc
out
imul
sahf
pop
daa
xchg
lret
dec
xor
push
push
outsb
or
jmp
mov
pushl
pop
call
jl
mov
push
adc
mov
sbb
fimull
in
mov
mov
jge
ljmp
loop
adc
idivb
pusha
mov
fs
aam
fwait
aaa
jg
push
mov
lcall
pop
cli
mov
and
cli
jle
sbb
adc
pop
adc
xchg
pop
movsb
xor
xor
dec
push
fldt
decl
jle
mov
inc
test
pop
sbb
ss
push
xchg
cmp
decl
in
sub
pop
enter
pop
adc
dec
stos
cwtl
xchg
into
push
cli
jnp
bnd
sar
decl
sbb
fbstp
in
ret
mov
dec
test
add
add
fcmovne
mov
lcall
dec
data16
or
pop
mov
sub
lahf
push
cld
loopne
mov
xor
jg
sub
clc
mov
push
xchg
clc
jge
ds
pushl
mov
imul
xlat
sbb
aad
sub
outsl
cltd
or
add
ds
push
dec
pushf
add
outsb
movsl
mov
pusha
lcall
cwtl
jns
add
sub
adc
scas
daa
je
or
pandn
dec
and
cltd
fsubr
mov
push
rolb
sub
mov
ljmp
je
movsl
shlb
shl
add
ss
adc
jg
adc
in
gs
test
movsb
ret
call
das
pushf
aas
pop
cs
sbb
jl
fdivp
dec
in
sti
arpl
mov
and
mov
int3
lock
shlb
xlat
and
leave
clc
lcall
std
lock
ret
pop
cltd
aam
insb
incl
gs
sub
nop
incb
std
aaa
sub
mov
dec
cmp
sbb
call
pop
mov
aad
xchg
or
cwtl
call
movsb
push
ds
out
cmpb
in
aad
lcall
sub
mov
sbb
fnstsw
push
fs
decl
imul
enter
inc
mov
sbb
aas
stc
dec
arpl
decl
inc
jge
cmp
loopne
jl
inc
test
pop
mov
pushl
mov
mov
out
sbb
pop
push
in
sub
push
je
pop
sub
fiaddl
std
mov
and
and
push
loopne
push
jg
xor
cwtl
int3
insl
pop
es
jg
je
xor
sub
fsub
add
ljmp
cmpb
testb
cmp
in
xor
inc
or
mov
push
sub
pop
roll
aam
push
adc
lret
mov
mov
test
mov
movsb
mov
mov
incl
mov
inc
and
jg
mov
decl
lods
imul
cwtl
inc
dec
xor
pop
mov
insb
ja
push
sub
iret
addb
jmp
loopne
test
in
cld
mov
and
add
mov
jge
jns
jmp
pushl
xor
and
pushl
cld
movsl
call
sbb
jmp
loopne
les
sahf
ret
xchg
xchg
sub
call
hlt
pop
dec
ds
test
es
mov
sahf
add
mov
jne,pt
ljmp
adc
out
xchg
add
and
and
addr16
js
ret
dec
mov
mov
ja
ljmp
rcrl
in
stc
in
test
stc
out
mov
mov
bnd
jmp
outsb
loopne
add
loopne
adc
xor
insb
push
shl
inc
add
imul
sbb
mov
lods
and
push
js
ljmp
popf
fisubrs
cmp
or
lcall
cltd
popa
dec
sbb
xor
rorl
inc
jg
sbbl
xor
push
push
add
test
cmp
inc
cmpsl
roll
arpl
lcall
inc
sbb
incl
and
iret
and
adc
ja
cmp
incl
dec
jmp
movsl
pop
jl
ret
mov
mov
gs
adc
jmp
shlb
sahf
out
sub
mov
mov
arpl
in
pushl
cmp
xchg
jbe
push
insl
repz
xchg
fs
sarb
push
stos
jno
inc
lcall
nop
out
add
ljmp
stc
add
dec
push
jmp
mov
ljmp
loopne
dec
add
cmpl
push
xchg
xchg
push
inc
stos
inc
xchg
push
jg
sbb
fcoml
fdivrl
inc
and
or
out
push
sbb
xlat
push
mov
psubb
sub
roll
into
fadds
jg
mov
pop
jae
icebp
jge
cltd
jnp
xlat
pushl
dec
je
fstl
dec
enter
sbb
in
sti
ret
jg
call
cli
xor
jecxz
nop
and
xor
adc
jg
add
jnp
mov
xchg
shlb
rol
add
jbe
mov
adc
dec
sub
popa
fs
mov
mov
ret
lcall
xchg
std
mov
cmp
mov
ret
cmp
jl
popa
cmpsl
push
dec
hlt
jb
xchg
xchg
inc
cmp
call
imul
movsb
xor
js
outsb
and
hlt
into
stc
subb
mov
dec
movsl
and
int
cmp
stos
repz
test
jb
nop
cmp
jne
adc
inc
xor
imul
std
fs
mov
ja
xchg
sub
mov
jns
out
or
out
mov
or
bound
mov
xor
xchg
inc
pop
pop
scas
in
repz
mov
or
jecxz
int
dec
ss
jb
adc
sbb
popf
insb
int
cmp
pop
sub
jne
mov
mov
std
ljmp
jns
jno
or
xchg
lcall
ficoml
lock
jmp
sub
sub
add
push
test
xor
nop
addl
fbstp
aad
lock
lea
jne
xchg
mov
movsb
and
dec
test
cld
push
mov
out
push
movsb
mov
orb
adc
push
cmp
incl
es
mov
push
ja
repnz
rolb
mov
add
call
lret
mov
scas
movl
inc
push
stc
movsl
rcr
sub
sbb
push
cli
insl
test
insb
mov
jle
mov
addr16
mov
xchg
decl
ja
rclb
in
and
inc
movl
lcall
test
xlat
sbb
lock
data16
lret
rcll
aaa
fcomps
ljmp
cmp
lods
outsl
cmc
cwtl
les
jecxz
lret
nop
xlat
mov
xchg
mov
aas
decl
lock
fildll
sbb
mov
jb
pop
inc
cmp
and
inc
inc
rcr
stos
or
inc
cmp
jns
pop
mov
in
outsb
mov
jg
ljmp
repnz
xchg
add
aaa
mov
daa
sarl
scas
cmp
mov
decl
jno
enter
jne
mov
adc
notb
or
je
lcall
test
hlt
stc
mov
bound
push
and
pusha
mov
into
arpl
jmp
adc
xor
lock
pop
or
mov
sahf
add
add
or
adc
xchg
add
pushl
cmp
out
scas
dec
jg
push
inc
jg
iret
mov
xchg
push
pushf
or
jl
lock
in
mov
add
mov
in
push
ret
les
cltd
sahf
test
cmp
push
std
pushl
bound
addr16
dec
outsl
out
cs
jne
inc
pop
sti
inc
cmp
fldcw
call
inc
clc
push
mov
xchg
push
call
dec
cmc
mov
sbb
fistps
call
add
jp
loope
in
lret
sbb
xor
or
ljmp
ret
mov
loopne
ret
les
jg
ljmp
lods
mov
movsl
mov
stos
cwtl
loope
lods
jne
faddl
lret
lahf
pop
mov
stos
jecxz
mov
mov
addr16
loope
sub
test
pusha
rolb
jl
and
daa
ficoms
out
adc
lcall
mov
inc
out
push
std
push
out
in
je
ss
in
pop
out
jp
pop
stc
mov
jbe
adc
cli
outsl
pop
hlt
movsb
cmp
ds
push
inc
add
andb
icebp
xor
call
xchg
push
ficoml
pusha
jl
jmp
arpl
mov
add
jbe
sub
cmp
or
sub
sti
push
jmp
icebp
mov
lea
mov
pop
call
ss
imul
xchg
mov
inc
call
sbb
xor
and
jecxz
mov
xchg
sbb
or
out
pop
sahf
dec
adc
pop
add
ds
sbb
dec
fildll
mov
and
popa
call
stc
push
push
lods
jge
jmp
lods
mov
xchg
add
out
cmc
pop
in
mov
lret
ljmp
jmp
dec
cmp
cs
fwait
xor
fisubs
push
mov
popl
addr16
and
jmp
leave
lret
dec
fucomi
daa
imul
mov
loopne
and
jecxz
incl
mov
mov
inc
sar
call
mov
push
cmp
mov
pop
aaa
ljmp
mov
push
pop
lcall
dec
push
dec
xor
mov
push
into
xchg
lcall
orb
lds
addb
subl
xor
nop
xchg
cmpsb
outsl
cs
xor
insb
ret
jge
xchg
decl
sbb
mov
arpl
movsl
and
dec
jmp
repz
cmp
ljmp
and
je
mov
ja
je
inc
and
jnp
push
xchg
push
call
loopne
outsb
inc
out
mov
cmpl
imul
dec
inc
jmp
daa
or
in
sti
lds
int3
hlt
cs
mov
mov
aaa
decl
jnp
fmull
sub
inc
sti
out
lods
dec
mov
xor
adc
cmp
push
sbb
cli
testb
incl
rcll
std
loopne
fsubs
js
xchg
stc
pop
lahf
jo
push
fcom
lret
or
test
fcompl
xchg
inc
int3
jo
inc
dec
popa
sbb
hlt
mov
test
not
in
std
mov
mov
test
fwait
daa
jg
dec
xchg
dec
push
loopne
jae
fwait
dec
mov
lcall
jmp
aad
inc
test
jb
push
movsb
sbb
aam
mov
ljmp
lea
dec
jbe
sarb
adc
fldt
xor
call
cmp
push
fdivrl
push
cmpsl
incl
sub
xchg
incl
mov
addl
stc
shr
adc
xor
movsb
mov
fdivl
lcall
mov
leave
mov
das
hlt
lock
test
aam
es
sub
xor
cld
ljmp
inc
mov
loop
add
adc
mov
popf
jo
lcall
cmpsb
inc
mov
inc
loopne
add
mov
dec
xlat
fiadds
ljmp
les
mov
fildll
dec
psubb
inc
xor
insb
xor
jb
fs
jbe
arpl
xor
ljmp
sub
rcrb
mov
inc
xor
or
dec
imul
pop
xor
in
dec
inc
fdivl
sar
sar
jge
das
outsl
dec
mov
pushf
mov
and
or
xorb
pop
es
push
lret
das
or
test
insb
insb
leave
outsb
pusha
inc
call
bound
push
scas
data16
mov
insl
mov
out
addr16
and
repz
repnz
or
cli
call
scas
out
loope
imul
lret
jo
adc
mov
divl
cmpsb
lcall
ret
int
add
lahf
sahf
mov
ds
ja
fdiv
fs
ljmp
push
cld
shrl
js
add
clc
xchg
bnd
jl
insl
xchg
cld
cmp
jg
shl
out
cmp
ds
ret
sti
push
adc
out
jecxz
pop
cmp
push
aas
xor
inc
mov
inc
sbb
sbb
mov
dec
aad
dec
and
and
inc
andl
and
fisubrs
fidivl
imul
dec
daa
xor
mov
rclb
pusha
dec
lcall
jl
data16
fxch
and
pop
fs
out
xor
mov
xchg
add
xor
int3
in
addl
jg
les
pop
test
dec
xlat
xchg
cmpsb
sbb
repz
add
jmp
jno
arpl
pushf
out
add
call
adc
and
and
imul
jo
lods
imul
dec
clc
decl
mov
scas
dec
mov
fistps
jle
sahf
mov
rorl
jecxz
clc
incl
xchg
cmpsl
push
push
push
inc
xchg
gs
xor
xor
lds
mov
scas
sub
jb
dec
cmpsl
push
mov
add
adc
cltd
popa
xchg
stc
xchg
lcall
mull
xchg
ffreep
aam
shl
rol
xor
cmc
dec
inc
popf
sbb
push
pop
lods
fs
mov
add
das
dec
mov
sbb
cltd
cmp
incl
cmp
imul
out
dec
add
xor
xor
aaa
shlb
mov
or
std
mov
mov
pusha
rolb
jo
ss
xchg
or
ljmp
sub
or
xchg
adcb
out
sub
sub
jmp
jmp
mov
in
ret
push
jecxz
mov
enter
or
fmull
push
leave
ja
stc
and
sbb
lods
mov
pop
les
pusha
movsl
adc
ror
mov
mov
pop
notl
jmp
cmpsb
jg
dec
lcall
js
push
sbb
jo
adc
mov
cmp
nop
loope
push
jp
fsts
rcrl
sbb
sbb
inc
add
mov
mov
test
sub
call
lds
in
add
je,pn
xor
mov
call
lock
test
fbld
shll
loopne
inc
repz
push
loope
jg
inc
push
repz
jg
cli
jg
cmpsb
ds
mov
push
cmp
mov
cmp
mov
adc
es
cmp
mov
insl
in
icebp
add
xor
nop
xor
jg
mov
enter
push
mov
pop
aad
lock
icebp
xchg
add
insb
jg
push
rcrb
scas
xchg
dec
sub
mov
leave
outsl
clc
dec
rcr
in
add
fdivs
sbb
lahf
ret
cmp
jmp
clc
sahf
add
push
and
dec
mov
nop
mov
mov
cmp
mov
jne
jge
out
cli
mov
dec
push
push
dec
or
insb
jo
adc
jge
lcall
xchg
mov
adc
mov
fcmovnbe
and
shll
mov
incl
cwtl
mov
push
shll
sub
fcoml
outsl
popf
es
jmp
push
jmp
or
out
inc
rdmsr
inc
cmp
mov
sbb
xchg
or
fbld
inc
std
adc
adc
cwtl
out
pop
pop
pop
add
sti
push
adc
test
inc
fwait
rolb
or
or
jmp
inc
cwtl
cld
push
xor
mov
pushl
xor
push
ror
loop
mov
aam
cmp
jmp
mov
flds
data16
jne
test
pop
dec
jp
mov
ljmp
cli
data16
sub
dec
mov
mov
popl
or
mov
out
hlt
in
jo
pop
iret
cmp
xor
arpl
inc
or
lock
xchg
stos
lods
into
testb
aaa
inc
or
pushf
xor
jbe
inc
lcall
jno
sbb
mov
sub
lea
mov
lret
mov
les
call
pop
loop
add
add
insl
push
lahf
loop,pt
xchg
into
mov
push
aam
sahf
es
lcall
iret
sub
scas
dec
cvtpi2ps
xlat
adc
pop
sbb
mov
movsb
lcall
cli
data16
cs
clc
and
push
rcrb
push
mov
cmc
decl
cs
scas
jo
jb
mov
aam
clc
imul
jge
insl
incl
jne
sub
dec
cmp
inc
repnz
movsb
add
movsb
xor
inc
loope
cmp
dec
sbb
push
mov
adc
push
inc
lret
lock
mov
add
scas
lret
out
adc
enter
lcall
mov
fistpll
mov
xor
mov
sub
cmpsb
pop
loopne
ljmp
rorb
out
lret
xchg
repnz
test
sub
add
or
jmp
andb
mov
aaa
lods
xchg
xor
arpl
xchg
icebp
inc
jb
xor
sbb
sti
pop
push
shll
mov
sbb
add
hlt
xchg
dec
sub
in
inc
incl
scas
cmp
xchg
dec
cld
cmp
stos
int3
mov
mov
sti
sbb
in
out
subb
jge
ja
sbb
fsub
sbb
gs
out
scas
pop
in
clc
cmpsb
jmp
jg
ljmp
push
or
nop
outsb
cmp
insb
sbb
or
cmp
cwtl
mov
lock
mov
and
ss
incl
pop
and
dec
mov
jns
stos
xchg
and
repnz
hlt
inc
lods
int3
xchg
enter
mov
outsl
insb
int
fisubrs
push
rcrb
inc
shrb
pushl
cmp
fwait
adc
out
int
add
sbb
pop
sbb
xlat
push
cmp
std
or
lcall
lcall
mov
xor
shlb
add
enter
lret
ret
jmp
fsubrl
test
out
int
push
pop
shrl
repnz
rclb
jmp
fsubrl
push
jo
pop
sub
ja
jmp
nop
mov
cmp
adc
fistps
and
push
pop
decl
push
push
mov
fadds
or
jno
dec
movb
add
test
inc
pushl
daa
int
pop
mov
mov
jmp
mov
ljmp
stc
scas
pop
pop
call
or
rorl
push
shlb
inc
xor
jmp
adc
cmp
add
sub
aas
pop
mov
pop
sti
movsb
aaa
adc
std
cwtl
jg
fiadds
mov
mov
mov
inc
mov
idivl
repnz
lcall
jle
adc
bound
mov
lds
lcall
pop
cwtl
aaa
stos
mov
repnz
jno
push
jmp
mov
fcomi
jno
and
test
outsb
cld
shrd
sbb
sub
dec
ja
inc
mov
test
in
jb
icebp
cwtl
pop
aas
test
subb
xchg
out
push
pushl
dec
in
iret
mov
pop
sbb
or
insl
jg
push
xchg
and
hlt
out
lcall
imul
pop
orb
or
pop
jmp
fldt
popa
sub
ljmp
pop
mov
inc
hlt
inc
dec
addb
addl
xor
or
decl
nop
stc
jb
jns
ja
cmp
sbb
call
xchg
push
sub
lds
jb
cmpsb
and
xor
mov
or
iret
push
jg
icebp
push
bound
dec
lahf
mov
jo
or
add
call
and
fdiv
xchg
ds
std
sub
mov
adc
mov
popa
inc
clc
jp
jae
mov
mov
sub
mov
mov
mov
cs
jmp
sub
lcall
outsb
sbb
std
lahf
call
rcrl
adc
dec
xchg
shrl
xchg
mov
cmp
decl
push
test
aam
cltd
pushf
rcl
enter
jnp
frstor
cwtl
jae
and
add
ljmp
into
movsb
test
ret
mov
push
xchg
jle
fsubrs
decl
adc
jnp
mov
outsb
jg
and
dec
pop
inc
test
stos
push
cld
jne
jmp
outsl
stos
and
out
fwait
je
dec
filds
into
jge
mov
mov
inc
jge
int3
pop
jnp
inc
or
in
push
xor
test
mov
repz
cmpsl
stc
jnp
push
mov
and
out
jl
ljmp
xor
in
das
jl
mov
mov
push
sub
mov
pop
sbb
fdivr
mov
mov
lock
test
pusha
fstl
lret
cmpl
push
ljmp
stc
adc
shll
call
ja
sub
dec
mov
mov
adc
lahf
xor
sub
xchg
cmpsb
repnz
dec
and
out
ret
in
pusha
adc
mov
xchg
aam
decl
xchg
scas
pop
pop
cmp
inc
shlb
test
sub
out
xchg
ljmp
enter
arpl
mov
mov
jne
mov
mov
sbb
mov
dec
test
lcall
or
dec
jle
loop
jg
sub
dec
ret
loope
das
jne
into
sti
dec
out
shll
js
les
lcall
cmp
sub
rorl
adc
stos
jne
xor
dec
jno
push
loop
fsubr
notb
test
dec
scas
int3
pop
mov
in
loope
fdivl
inc
adc
push
movlps
and
lret
test
in
inc
inc
push
add
loope
fldl
sub
fdivr
ret
outsb
icebp
addr16
addb
mov
movsl
cld
jns
inc
sbb
sarl
pushl
hlt
or
dec
push
jno
mov
mov
pushl
insl
mov
pop
dec
xor
fdivs
pop
enter
jmp
inc
js
scas
outsb
dec
test
loope
mov
ja
sub
imul
cmpsl
inc
dec
fmuls
in
shlb
pushf
aam
lahf
out
cmpl
sarl
sahf
dec
mov
out
incl
arpl
fwait
daa
addr16
sub
stc
adc
hlt
imul
or
addr16
call
sub
outsl
int
cli
punpcklbw
jb
hlt
pop
push
icebp
cmc
jl
lds
xor
or
mov
dec
push
mov
incl
xchg
cltd
mov
fcoms
and
lds
mov
js
out
pushl
pushl
shrb
jle
mov
mov
orb
jg
mov
jno
sub
rcrb
sbb
pop
sub
adc
and
mov
lret
xchg
out
add
mov
pop
xchg
loopne
adc
cmpsl
enter
lods
loopne
push
cld
jmp
les
or
es
nop
cmp
pusha
push
sub
sub
inc
push
loope
sti
or
data16
pushl
pop
movsl
fwait
scas
scas
inc
inc
js
add
es
bound
sub
idiv
inc
inc
cmp
into
cs
repnz
icebp
sub
jecxz,pn
pushf
in
scas
scas
push
xlat
add
nop
popf
inc
dec
sti
aam
mov
loop
daa
sbb
xor
dec
and
ds
fsubr
pop
hlt
dec
adc
clc
call
mov
mull
out
pop
mov
add
xchg
pop
sbb
fmul
add
clc
call
loopne
xchg
int3
jnp
push
ret
sub
daa
mov
pushf
ljmp
ret
mov
mov
movsb
std
add
and
sahf
adc
aam
jecxz
add
jae
rorb
repnz
jno
push
imul
jp
or
cwtl
xchg
xchg
and
inc
xor
inc
mov
lea
out
inc
mov
mov
push
leave
jno
lock
pushl
cld
lcall
sub
push
pop
rcll
idiv
decl
cwtl
enter
testb
data16
xor
testb
xchg
mov
scas
mov
add
call
jl
outsl
arpl
xor
xor
ljmp
sarb
xor
test
scas
loop
fbld
outsl
and
lods
mov
call
mov
mov
sahf
sahf
pop
in
test
mov
sbb
pop
jg
out
in
cltd
and
pushf
rcll
xor
push
stos
scas
push
dec
sbb
mov
fwait
xchg
add
loope
push
fisubrs
cmpsl
xor
mov
popf
pushf
jg
mov
in
sarl
int
les
mov
push
sbb
decl
into
stos
and
inc
pop
push
into
test
mov
lcall
fisubrl
gs
stc
mov
add
je
lahf
or
mov
inc
rcrb
pop
pop
fcos
decl
stc
or
xchg
mov
xor
xchg
pop
rolb
push
adc
xor
sub
inc
cmp
cli
lcall
cwtl
pusha
lock
adc
jnp
dec
sahf
je
push
push
int
in
or
dec
fdivrp
dec
rorb
mov
or
mov
cmp
fdivp
adc
mov
test
outsb
pop
lcall
stc
sti
push
sub
xchg
adc
clc
mov
cmc
dec
mov
xchg
add
dec
or
ljmp
data16
fisubrl
out
cld
push
xor
call
leave
inc
xchg
jns
call
add
jl
or
pushf
scas
aas
iret
subl
out
jnp
decl
push
hlt
adc
aaa
scas
mov
cmp
sub
es
push
cmp
mov
insl
loopne
jmp
mov
fidivrs
aas
es
into
xchg
pop
mov
std
sbb
push
jnp
dec
xlat
jb
lahf
out
ja
out
pop
dec
xchg
inc
or
pop
inc
dec
mov
stos
incl
jne
mov
loope
and
incl
xor
ficompl
mov
imul
push
jge
rolb
outsb
test
jns
sbb
mov
jg
fcmovnb
out
add
dec
popa
addl
or
sbb
cwtl
in
incl
mov
fwait
adc
xchg
stos
jb
fistl
in
pop
lods
les
pop
daa
movsb
mov
mov
xchg
push
in
inc
xchg
adc
mov
dec
xor
push
sbb
incl
cld
movsl
dec
mov
push
bound
lret
mov
xor
pop
cmp
sbb
call
std
cmp
inc
mov
ret
jno
js
xor
into
xorb
imul
pushl
lret
jmp
arpl
jno
fistpll
repz
sahf
sub
sbb
scas
int
js
adc
aaa
jle
ljmp
mov
jns
cmp
sub
into
jge
pusha
mov
mov
incl
cmp
cmovp
cmp
nop
cwtl
dec
mov
sub
mov
call
adc
xchg
addr16
in
sub
or
gs
decl
dec
rcrl
jle
ja
and
aam
sub
sbb
fs
ljmp
jp
adcl
lahf
in
call
pop
stc
cmp
int3
lcall
ss
push
push
or
pop
bound
inc
or
decl
lock
shll
cmp
push
or
xor
dec
scas
and
es
lock
or
or
xchg
enter
jecxz
ret
pop
ljmp
lea
aam
dec
out
and
ss
mov
lcall
nop
pusha
lods
lock
adcl
rorl
cld
jg
dec
mov
add
pop
imul
fmull
cmp
test
popa
mov
call
fildl
xchg
fs
add
mov
mov
repz
jmp
sbb
cmc
outsl
lods
inc
xchg
mov
out
js
jae
and
ja
xor
sub
adc
push
jb
into
fcompl
dec
push
xor
cltd
cmpl
inc
fimuls
call
ja
fs
xchg
fld
dec
push
adc
data16
push
mov
dec
mov
out
es
ljmp
stos
lds
cli
xor
sbb
mov
jg
out
pop
dec
dec
adc
decl
cmpsb
xchg
dec
cwtl
inc
push
xor
xchg
orl
ret
mov
test
and
xchg
dec
movsb
xor
addr16
inc
lock
incl
int3
xchg
test
test
cmpsb
or
sbb
push
push
fimuls
aas
shl
push
loop
int3
aaa
decl
shr
mov
int
jg
mov
adcl
clc
sbb
out
xchg
cld
jmp
pop
in
or
or
mov
pop
cltd
divb
or
mov
jle
and
add
push
jmp
push
xor
rcrb
xchg
xor
lcall
pusha
clc
cli
jbe
mov
mov
cmc
jne
into
loopne
or
adc
ds
jmp
jb
sbb
int3
xchg
test
mov
les
and
push
dec
xor
setb
inc
jecxz
call
imul
mov
fldcw
pop
fs
bound
ja
mov
in
push
mov
or
push
in
imul
arpl
lahf
inc
mov
mov
inc
aam
pop
or
mov
pop
jae
fsubl
add
push
jl
cmpl
fadds
xor
popf
push
or
movsl
and
fs
sbb
sarl
pushl
arpl
aad
mov
pusha
outsl
xchg
fiadds
mov
fcmovb
sahf
jmp
jmp
adc
jmp
sti
xorb
mov
les
xchg
mov
mov
cmp
les
inc
or
jmp
pusha
lahf
call
or
incl
sahf
rcr
add
popf
pop
lods
and
xchg
sbb
dec
jge
sahf
mov
sbb
mov
jle
aam
adcb
add
xchg
adc
pushl
adc
mull
mov
mov
fsubs
or
mov
mov
fsubl
in
sti
aad
gs
add
notl
dec
xor
inc
adc
xchg
pop
test
jne
push
jle
lcall
movsl
sbbl
jnp
icebp
and
sbb
jg
repz
out
cld
mov
xchg
pop
push
xchg
int3
popa
testb
in
ret
ds
cmp
cmp
mov
pop
xchg
movsb
mov
cwtl
imull
push
js
jmp
pop
pop
mov
out
js
fwait
mov
pop
mov
lcall
push
and
js
fnsave
cmp
and
cltd
gs
xor
or
dec
xor
icebp
xchg
cli
decl
scas
int3
stos
mov
popa
xchg
pop
xor
sbb
inc
cld
loopne
inc
imul
pop
cmp
ljmp
cmp
imul
jmp
cli
push
aaa
call
mov
cmp
jne
jmp
popf
or
and
imul
cld
call
bound
test
add
arpl
pop
push
lahf
sbb
lret
push
out
mov
fsub
int3
jb
jp
cs
add
sub
cld
ret
sub
repnz
sahf
ljmp
les
movsb
mov
adc
pop
adc
xor
mov
mov
mulb
cmc
jo
cmpsl
pop
iret
sub
adc
cmp
pushf
popf
imul
clc
push
and
cmc
test
cmpsl
xchg
stc
lds
loopne
outsb
into
loop
hlt
inc
aam
pusha
arpl
jnp
sub
das
xchg
add
sub
ljmp
mov
sbb
or
jns
aad
in
loope
xchg
negl
mov
push
repz
sbb
sub
mov
mov
mov
mov
dec
dec
push
xor
pusha
xchg
int3
cli
push
enter
sbb
adc
loopne
filds
cli
and
out
and
jp
outsl
inc
sub
orb
mov
decl
xor
fdivrl
adc
aad
jb
loopne
pop
push
cmp
mov
movsb
incl
loope
sti
cmp
mov
fstps
loop
fs
dec
xlat
or
std
cmc
insb
lret
push
inc
sti
mov
mov
and
xchg
cmp
push
mov
std
mov
jbe
mov
insl
pusha
dec
bound
mov
ljmp
sub
sub
mov
cmpsb
clc
mov
popa
sbb
jge
lret
jl
pop
aas
cmp
rclb
xchg
sub
cmpb
movsl
sub
push
push
pusha
int3
gs
sahf
dec
add
aaa
cld
jmp
xor
shr
lock
pop
es
dec
stos
push
xchg
mov
mov
adc
std
inc
and
mov
lret
push
rcrl
xor
inc
mov
mov
outsb
sub
add
mov
inc
lock
sbb
pop
notb
fdivr
mov
jmp
fldenv
cmp
stos
popf
rcr
dec
add
lret
adc
push
fistl
xor
incl
cmp
inc
dec
mov
clc
orl
das
pop
daa
lcall
fcos
fcomip
call
mov
adc
or
fdivl
rcrb
out
mov
jmp
dec
jae
push
movsl
int3
popf
sahf
enter
lcall
xchg
push
rol
mov
das
idiv
lcall
pop
cmp
and
or
inc
xchg
sub
xchg
mov
cmp
xchg
out
adc
incl
shlb
and
mov
pop
in
jle
jmp
jmp
sbb
enter
popa
pop
stos
and
pop
add
out
xor
scas
adc
test
push
stc
sbb
adc
jge
mov
lea
dec
popf
outsl
push
divl
sbb
fistpl
add
sbb
fidivrl
arpl
fcomps
inc
arpl
cmp
xor
decl
lock
aas
outsb
cld
jge
mov
test
out
into
enter
pop
jns
cltd
enter
pop
pop
sub
xchg
cmp
adc
stc
test
xchg
mov
inc
call
orb
into
loopne
lods
mov
daa
xchg
lea
aas
pushl
cmpsb
imul
jno
inc
leave
ljmp
cwtl
rclb
mov
arpl
and
lcall
std
jecxz
adc
xchg
and
decl
push
push
cmp
adc
stos
mov
dec
jle
jge
push
fs
ds
fidivl
mov
cld
mov
pushf
fcompl
mov
fmuls
ficoml
xorl
mulb
adc
pop
jnp
filds
test
xchg
inc
bound
mov
incl
sbb
outsb
outsl
jg
inc
cwtl
add
jns
ss
fsubs
fucomi
insl
push
out
pop
and
incl
xor
cmp
test
pop
testl
aas
sub
push
cmc
insl
shlb
lock
jo
cmp
into
into
js
xlat
jle
imul
xor
data16
adc
out
clc
call
inc
cmpsl
xor
or
leave
out
xchg
xchg
addb
jmp
mov
mov
pop
sbb
ss
add
xchg
cmp
jne
xchg
mov
cmp
inc
lcall
push
cmp
pop
repnz
mov
cwtl
cmp
push
sbb
mov
int
xor
leave
fmuls
jmp
mov
xor
adc
fimull
test
push
ja
pop
pushf
cmp
sbb
in
clc
lcall
aaa
xchg
jns
movsb
test
stos
decl
fiadds
pop
push
fucomip
pop
repz
mov
jmp
mov
jl
jge
jne
lcall
test
lcall
sub
push
cmpl
arpl
insl
push
jmp
aaa
jg
mov
cltd
incl
push
push
push
inc
pop
mov
or
out
or
leave
inc
push
xor
add
out
xor
push
pushl
jecxz
inc
mov
or
loope
lds
outsb
lret
mov
mov
sahf
dec
fidivs
mov
or
fcoml
or
mov
clc
jl
lahf
lret
jle
insb
cmc
dec
movsb
jbe,pn
into
xor
in
jg
jmp
jno
daa
out
test
ret
sub
jle
mov
lret
add
inc
lea
mov
rorb
fsubs
or
inc
subb
xlat
mov
fcomip
test
iret
fildll
negb
or
adc
aad
cmp
popf
jg
movsb
call
inc
push
and
mov
fbstp
jns
andl
pop
jne
or
mov
stos
sbb
pop
jmp
lahf
mov
sub
cmpsb
sbb
movsb
ds
push
xor
or
mov
sub
inc
js
sahf
xor
lcall
fidivl
xchg
xor
fldenv
push
dec
movsl
or
push
in
or
fcoms
inc
in
fwait
call
std
add
fldl
cmp
add
inc
push
pop
mov
mov
ljmp
std
ja
outsl
pop
jmp
pop
pop
mov
and
xlat
lret
das
xor
clc
incl
xchg
dec
call
es
mov
fs
add
addb
aam
lock
jmp
jne
jns
sbb
repnz
jno
xchg
and
sar
ljmp
lcall
aas
jne
insb
movsb
out
push
lods
imul
les
dec
pop
dec
out
push
stos
cmpsb
int
adc
in
je
ja
sub
adc
inc
fucomp
addr16
sahf
loopne
call
call
test
lret
scas
or
mov
push
out
dec
out
sub
insb
incl
push
dec
call
jnp
fdiv
adc
sbb
jnp
mov
sbb
jmp
and
mov
gs
into
in
jecxz
in
pop
dec
popa
xor
xchg
daa
cld
mov
mov
and
jp
cmp
mov
incl
aas
bound
xlat
dec
movsb
fisttpl
xchg
fidivs
dec
pop
lret
inc
decl
rcrb
sti
push
add
lcall
mov
xchg
pop
mov
push
out
inc
pop
dec
cmpb
int3
imul
pop
mov
mov
icebp
daa
dec
cli
inc
xor
pushl
repnz
mov
or
sbb
mov
mov
sbbl
rcrb
jle
sbb
imul
xchg
les
mov
movsl
mov
xlat
mov
cmp
std
incl
lods
das
mov
popf
aas
jb
and
push
mov
mov
stos
mov
xlat
daa
xor
inc
decl
jbe
addr16
ljmp
or
or
cmp
pop
iret
icebp
das
mov
cmp
out
jne
adc
punpcklbw
cld
fnstenv
in
and
adc
push
insb
cld
fisubrs
test
fdivr
jmp
data16
fs
mov
es
leave
dec
lcall
xchg
fimull
push
mov
lods
testb
sbb
cmp
lds
repnz
mov
sbb
mov
imul
mov
pop
mov
aaa
xchg
out
jae
lcall
aam
scas
mov
pop
adc
pop
dec
fisubs
cwtl
cltd
mov
pushf
inc
jne
mulb
cmp
fsubr
sbb
add
testl
loopne
inc
push
pop
mov
lods
jle
adcb
outsl
test
fwait
into
xchg
stos
movsl
jns
decl
push
jbe
lahf
xorl
pop
push
dec
pop
mov
aaa
or
fidivs
loop
ret
add
mov
sahf
jmp
add
cltd
dec
sbb
jnp
dec
shr
and
dec
add
andl
mov
imul
test
cmp
loope
lea
cmpsb
test
iret
ret
inc
xor
mov
ja
rcrl
repnz
outsl
pop
enter
add
xchg
cmp
out
adc
jno
andl
mov
mov
rorb
add
inc
sar
call
dec
aaa
push
in
js
pop
jnp
xor
add
rolb
lock
out
shll
lea
sub
clc
xor
push
loope
jae
int3
fsts
scas
ljmp
fxch
fsubs
enter
fscale
lock
mov
decl
call
mov
or
adc
lea
xor
pushaw
es
dec
ljmp
out
roll
test
cli
testb
je
lea
pushf
sub
mov
sbb
ljmp
js
jae
add
loop
mov
or
push
xchg
test
jo
sbb
lds
xchg
out
imul
test
in
add
inc
ss
pop
push
xor
jg
into
shr
jge
leave
cltd
aam
adc
mov
fwait
mov
stc
adc
in
push
fists
lcall
xchg
xchg
aaa
xchg
rcr
aaa
scas
or
stos
xorl
inc
adc
ja
repnz
ds
pushf
push
enter
or
jg
sub
sbb
mov
and
fdivr
decl
call
mov
jge
and
sub
add
test
popa
mov
stos
call
cltd
push
arpl
rol
gs
loope
mov
adc
test
xlat
and
lret
and
dec
and
loop
mov
push
adc
or
insb
dec
dec
data16
ds
ret
xchg
jl
sahf
mov
or
fistpll
adc
push
fdivrs
and
test
pop
fnstcw
mov
pop
cmp
movsb
inc
shlb
push
fwait
daa
mov
mov
test
aaa
loopne
int
lods
lahf
lock
dec
inc
bound
lcall
roll
jge
popa
inc
mov
decl
adc
aam
idivl
jmp
je
push
mov
hlt
or
mov
inc
decl
push
test
xchg
aas
and
fisttpl
or
jge
jmp
pop
pushf
stc
rol
test
imul
push
loopne
scas
cli
jne
andl
mov
xor
xchg
push
mov
add
mov
cmp
outsb
das
das
insb
xor
push
dec
cli
jno
stc
adc
and
ljmp
aaa
push
sub
shlb
xchg
cltd
data16
ds
jno
push
jmp
push
sbb
loop
sar
add
push
or
cwtl
ret
sub
lahf
sbb
jmp
jno
mov
cmp
fnsave
jmp
mov
xchg
mov
nop
aad
cld
call
jmp
mov
adc
adcb
sbb
mov
das
cltd
mov
incl
add
shl
daa
inc
cltd
mov
in
shll
mov
xchg
out
jle
clc
aaa
les
cld
sub
insb
lcall
pushl
mov
dec
cmpsb
cmpsl
mov
shlb
jns
daa
ficoms
mov
or
inc
lods
imul
ficoms
xor
cmp
outsb
les
or
sub
dec
sbb
mov
add
enter
add
pop
cmp
les
shl
in
loop
dec
jne
inc
and
out
dec
adc
sub
sti
in
sub
movsb
out
repnz
mov
decl
and
inc
cmpsb
mov
movsl
xor
pushf
lea
fnstsw
jg
dec
call
fildl
sub
push
outsb
xlat
call
mov
fs
dec
sub
inc
adc
mov
int
dec
ret
pushl
pop
sub
mov
leave
jge
inc
and
pop
aaa
mov
pushf
repz
out
decl
test
stos
dec
pop
jo
and
cmove
bound
mov
xlat
xchg
jmp
push
imul
cmp
lret
lahf
push
xor
addr16
lcall
push
mov
jl
mov
adc
mov
aaa
sub
shll
mov
cmp
jmp
fwait
xor
or
testb
scas
in
xchg
ret
add
into
int3
xor
push
ficompl
in
jg
and
dec
daa
add
cltd
std
fdivrl
push
xchg
fstps
cmp
imul
sub
call
stos
or
aad
cwtl
daa
xchg
pop
and
nop
add
test
pop
add
decl
inc
mov
into
jecxz
insb
mov
sarb
inc
cmpsb
loop
inc
incl
negb
mov
pop
cltd
push
sbbl
xchg
mov
shlb
inc
inc
xchg
mov
xchg
jnp
cmp
xchg
or
dec
loop
ja
push
inc
lock
add
cld
pop
andl
pop
outsl
in
rcrb
popa
mov
add
mov
aam
xor
add
push
js
cmp
mov
clc
ljmp
mov
mov
int
pop
cli
lock
push
push
bound
pushf
clc
mov
cld
mull
sti
addr16
pushf
sbbl
jns
xor
cs
dec
or
jo
out
ljmp
fldenv
or
mov
loope
lahf
mov
mov
xor
mov
aad
lcall
leave
sub
mov
cld
das
and
dec
popf
sub
rclb
stos
loopne
lcall
pop
movsb
insb
test
mov
mov
stc
movsl
mov
sbb
sbb
fidivs
jmp
mov
jecxz
je
mov
roll
test
shlb
cmp
loopne
call
sti
lods
mov
addr16
dec
or
mov
ja
mov
popf
mov
into
inc
lret
imulb
pop
loope
or
lahf
adc
iret
xchg
push
mov
je
lcall
xchg
std
push
movsl
popf
push
dec
mov
test
mov
gs
pushl
jmp
popf
add
adc
pop
or
out
ret
sbb
fnstcw
mov
arpl
ror
incl
rorl
inc
call
add
mov
insb
jp
push
cmpsb
into
add
clc
jne
cmp
cmpsb
push
je
scas
fchs
repz
pop
cwtl
mov
sbb
arpl
or
popa
rcr
pop
int
outsb
push
xchg
push
sahf
clc
call
cld
mov
cmp
pop
cwtl
movsb
push
decb
lahf
mov
rol
pop
adc
push
mov
lahf
jg
inc
xchg
lret
mov
jns
stos
test
inc
nop
cwtl
out
add
decl
mov
in
or
add
xchg
sbb
mov
or
xchg
sbb
sar
mov
inc
scas
add
and
xchg
or
xor
cmpsb
jo
mov
add
sub
adc
cmpsl
jmp
push
insl
cmp
dec
loop
lcall
idiv
dec
ds
addb
out
dec
xchg
adc
popf
test
decl
fisubrs
push
dec
adc
push
sub
sub
dec
and
arpl
popf
xchg
test
lahf
jecxz
jge
imul
cld
push
xchg
rorb
push
mov
mov
adc
inc
jns
mov
sti
or
and
fcmovnu
sahf
mov
incl
clc
lret
xchg
les
scas
cmp
push
mov
jmp
out
cmp
dec
pop
fwait
inc
inc
mov
jb
ljmp
inc
icebp
iret
xlat
ljmp
and
das
data16
stc
inc
loopne
inc
stos
inc
and
adc
rcrb
adc
add
push
shl
mov
pop
fwait
mov
lcall
xchg
in
push
mov
cs
or
xchg
push
lahf
jmp
outsb
iret
cltd
dec
inc
sti
movsl
and
pop
dec
shll
int
pop
pop
ret
sbb
jns
mov
jg
call
loope
in
xor
leave
mov
cmp
cwtl
push
cmp
dec
mov
decl
push
or
pop
ret
jecxz
daa
mov
lods
mov
dec
xchg
mov
cmp
je
es
ljmp
or
fsubs
mov
cld
mov
mov
and
xor
stos
sbb
lock
dec
mov
inc
scas
jl
rorl
or
call
daa
iret
pop
cmpsl
not
mov
test
decl
arpl
mov
leave
fstps
xchg
call
data16
jmp
xchg
cmp
sbb
ret
nop
jb
leave
add
test
mov
lret
imul
mov
ret
ds
push
cmp
std
mov
sub
orb
dec
in
and
mov
in
and
incl
dec
cmp
fwait
mov
lds
rcr
aam
dec
in
incl
cmp
jmp
mov
cmpsl
or
div
add
lcall
lea
aam
arpl
mov
or
cli
push
jae
mov
stc
inc
dec
mov
loop
test
loop
jp
pop
add
rorl
sub
enter
dec
in
lret
push
shll
lret
mov
jecxz
or
test
mov
cmp
das
ljmp
rcr
mov
add
jmp
mov
sahf
pop
popf
or
pop
sbb
std
cmp
cld
call
sbb
sbb
cltd
mov
movsb
cmpsb
inc
inc
mov
sbb
push
jb
dec
xchg
jb
mov
cli
les
cwtl
push
jg
adc
or
pop
xchg
popf
lcall
jp
pop
mov
pop
jbe
mov
adc
rcll
add
iret
and
sbb
out
xor
cmp
clc
sbb
jecxz
outsl
mov
adc
and
jmp
push
mov
ljmp
lret
cmp
cmp
push
pop
stos
sbb
adc
pop
rorb
fbld
lcall
push
add
push
inc
aas
adc
jecxz
mov
cmp
scas
cmc
pop
sub
in
jno
xor
jnp
lret
cltd
ljmp
inc
lcall
add
mov
xchg
or
cld
pushf
repnz
jo
cli
push
out
jecxz
ljmp
lret
sbb
out
sbb
sub
dec
in
dec
out
mov
push
fwait
in
call
mov
mov
mov
push
jmp
mov
aam
call
pop
mov
cmpsl
in
lds
leave
pop
fcompl
jg
stos
mov
inc
arpl
rep
mov
sbb
jb
scas
inc
mov
rol
mov
pop
sahf
ret
sub
movsl
add
aaa
cld
jg
and
sbb
jb
and
cmpsb
ss
sbbb
incl
bound
mov
xor
mov
xchg
xchg
dec
xlat
in
sbb
add
test
mov
idiv
mov
js
out
pop
loop
and
and
cmp
outsb
pop
push
lcall
in
push
push
int
shll
and
repnz
cmpsl
je
pop
jo
add
jns
dec
into
lcall
popa
insl
add
in
cmp
mov
andl
push
cwtd
enter
ljmp
ljmp
bound
mov
jp
mov
mov
cmp
mov
push
adc
push
adc
mov
jae
sub
add
lcall
jbe
cwtl
jle
dec
stos
adc
mov
fisubrl
notb
jecxz
into
popf
hlt
fimuls
cmc
fidivrl
sub
loop
movsb
inc
jp
push
test
icebp
mov
cmp
add
mov
or
shll
das
push
or
mov
or
gs
pushl
xchg
stos
pop
mov
fimull
jne
mov
data16
out
in
cmc
out
repnz
fcoml
call
sbb
push
mov
xchg
loop
mov
mov
pop
out
cmp
cltd
mov
mov
pop
call
xor
dec
mov
dec
jge
stc
sahf
pushf
push
inc
std
add
sbb
mov
int
cmp
mov
xor
popf
dec
xchg
ds
dec
rclb
imul
out
scas
stc
adc
xor
dec
mov
jnp
test
jle
cmp
ljmp
fnstcw
out
push
aaa
cmpl
or
lea
jmp
loopne
dec
sbbl
shl
jle
js
test
mov
push
mov
cs
das
test
mov
int3
mov
pop
roll
test
inc
scas
divl
mov
hlt
mov
incl
cmp
xchg
mov
out
and
lcall
sahf
shl
jbe
lock
in
mov
decl
lock
lret
loopne
mov
sbb
mov
out
arpl
lcall
mov
cmp
ret
sub
push
xchg
decl
cld
or
fdivr
in
or
loope
cwtl
outsb
test
cmp
mov
popa
push
jl
in
xchg
pusha
pushf
sbb
mov
add
jecxz
pop
leave
test
cmp
lcall
es
ljmp
pop
jae
fs
jp
xorb
incl
aas
pop
lods
jecxz
cli
jp
roll
aam
int
push
xchg
xchg
push
call
movsb
dec
sbb
push
test
scas
ja
movsl
adc
cmp
ljmp
hlt
or
cs
arpl
pushf
sub
cld
addr16
mov
sub
jmp
mov
xor
test
pop
rclb
mov
xchg
call
std
in
shrl
fisubl
inc
mov
adcl
ds
call
cld
decl
xor
mov
sub
mov
xor
sub
aad
pushl
sbb
xor
fimull
fiaddl
movsb
movsb
push
fdivrs
mov
sub
fidivl
pushl
and
jle
loop
movsb
mov
jae
xchg
push
out
in
arpl
mov
adc
test
xadd
rol
adcb
pop
or
stos
xor
lea
jo
js
adc
scas
movntps
inc
imul
gs
inc
fcomip
mov
cwtl
jmp
ljmp
pusha
push
cmp
fistpll
je
mov
jp
adc
mov
dec
pop
inc
scas
inc
or
cmp
outsb
sar
jmp
sub
leave
xchg
test
iret
dec
mov
jg
push
scas
cmc
hlt
std
mov
outsb
shrb
ret
insl
pop
addr16
mov
mov
movsl
push
adc
xchg
jle
or
pushf
es
mov
sbb
fcomip
pushl
inc
push
call
repnz
xorb
sbb
push
cld
lcall
xchg
mov
and
sarb
ljmp
lcall
jbe
cmpsb
fisubrl
mov
int3
fstl
cli
mov
xchg
inc
xchg
adc
adc
jmp
pop
sbbb
pop
inc
inc
ret
lods
and
jmp
sub
shrb
pop
test
xchg
lods
decl
mov
push
xor
push
pop
sub
aas
xchg
das
pop
pop
dec
mov
inc
ja
pushl
mov
fildll
les
stos
loope
mov
cli
push
call
loopne
test
push
mov
subl
mov
pop
dec
sub
pushl
mov
pushf
cmp
movsl
mov
jmp
jp
mov
int
test
ljmp
fiadds
stos
xchg
or
mov
xchg
repz
decl
in
lret
lods
cli
push
rorb
add
cmp
dec
cmp
xchg
add
dec
aad
xchg
sub
das
jnp
jge
lods
pop
adc
gs
clc
lahf
ljmp
std
push
repnz
out
sub
fnstsw
or
imul
jmp
fwait
mov
cmp
push
into
ret
mov
lods
sti
icebp
inc
jle
push
mov
inc
or
pop
das
xchg
mov
adc
pop
pop
std
std
insl
sbb
ret
mov
bound
jmp
jo
pop
stos
pop
loope
in
pop
mov
fldl
adc
mov
sub
clc
pushl
in
cmovg
cmpsb
mov
cmc
dec
dec
push
ja
stos
mov
std
call
insb
adc
mov
pusha
insl
adc
push
inc
jg
mov
xor
es
xorl
ljmp
cmp
and
adc
ret
cmpsb
or
clc
cli
mov
xchg
stc
int
testl
ljmp
add
add
mov
stos
inc
jecxz
mov
arpl
cwtl
push
push
lods
mov
rcrb
cs
sar
decl
ja
mov
dec
add
cli
xor
inc
cmpsl
and
out
dec
ss
xchg
lcall
pop
loop
aas
pop
ret
out
inc
mov
cmpsb
mov
movsb
jmp
add
aaa
add
mov
jo
popf
cmp
jg
and
shll
or
into
roll
add
rcrl
inc
or
jecxz
je
mov
inc
jl
test
sbb
and
xchg
jg
pushl
loop
loopne
xchg
inc
sub
xchg
sub
in
dec
aaa
adcb
test
pusha
outsb
cmc
call
leave
ss
enter
add
addl
repz
inc
jne
cmp
adc
popa
das
dec
mov
mov
fstl
xchg
imul
adc
xchg
pop
orl
lahf
xor
pushf
sti
dec
out
jmp
mov
xchg
jo
or
push
adc
jmp
mov
je
dec
xlat
enter
dec
jo
decl
sbb
jecxz
cmp
arpl
mov
sub
movsb
and
add
sbb
cmp
jl
call
je
cwtl
nop
sbb
or
and
test
xchg
incl
mov
dec
subb
xchg
sbb
xchg
leave
and
sbb
cmp
incl
lahf
popa
mov
std
push
dec
subl
clc
gs
mov
mov
addl
stos
xor
aam
push
and
lds
out
in
xchg
jg
hlt
and
jmp
add
filds
xchg
xor
push
enter
ja
or
cmp
lds
pop
sbbl
icebp
xlat
pop
shl
or
fidivl
jmp
adc
xor
decl
fsubrl
mov
mov
xchg
mov
pop
jnp
inc
xchg
lods
lret
pop
dec
or
ret
jl
mov
jmp
adc
imul
mov
mov
js
ds
inc
pop
icebp
add
xchg
std
test
xor
mov
stos
xor
cs
das
lds
or
inc
ss
inc
xchg
dec
jmp
or
stc
sub
lret
sbb
sub
push
fisttpl
fistpll
repz
outsl
cli
inc
adc
shl
and
xchg
cmpsl
mov
push
jno
and
rorl
lcall
flds
add
sub
or
inc
adc
or
xchg
push
out
push
dec
mov
inc
mov
mov
lsl
xchg
push
push
aam
xlat
mov
xchg
push
lcall
lock
pop
adc
outsl
add
js
imul
jp
cmp
inc
stc
test
call
testl
adc
pop
das
aaa
shll
popa
mov
cmpsb
lock
insb
stos
or
cmpsb
jmp
mov
pop
stos
imul
leave
add
mov
jl
lcall
adc
popf
dec
cwtl
outsl
arpl
sahf
aaa
cmc
ds
cmp
mov
fldl
push
inc
jo
incl
js
ret
cmp
xor
cmp
or
dec
sbb
pop
lcall
sbb
lds
dec
and
add
mov
or
jmp
and
pop
inc
aas
std
sub
jns
cltd
cmp
movsl
ja
mov
and
jb,pt
pop
lock
scas
push
sarl
cmp
decl
xor
push
sub
rcrb
test
sbb
cmp
pand
mov
push
stos
aas
movzwl
sahf
or
inc
les
cmp
sub
les
mov
filds
pop
pop
stos
pop
dec
jg
xchg
fs
jmp
mov
roll
cmc
lcall
jecxz
lret
jae
push
and
pop
xchg
xor
pushl
fcmovne
ret
lahf
aas
sub
or
scas
jne
or
ljmp
pop
push
jae
dec
mov
xlat
jo
pop
adc
jns
and
and
movsl
xchg
dec
adc
mov
inc
jmp
push
rclb
mov
and
decl
lret
out
mov
fstl
outsb
push
loope
outsl
jnp
test
mov
rcll
lds
aam
xchg
xchg
ljmp
fisttps
and
adc
pop
and
clc
push
pop
adc
cltd
outsb
mov
mov
outsl
clc
push
pusha
sub
out
call
nop
jnp
dec
fs
test
and
ds
decl
lock
sbb
xchg
dec
int
or
and
insb
data16
lods
inc
xchg
pop
test
ljmp
fimull
sub
mov
aas
or
mov
adc
rcrl
cmp
mov
int
cld
into
lret
daa
xor
pop
lods
pop
mov
inc
xchg
enter
test
mov
pusha
and
jmp
mov
add
push
stos
push
andb
cltd
fistpll
cmpsl
fwait
repz
nop
stc
xchg
lret
insl
push
pop
pusha
aam
mov
ds
into
rclb
addb
movsb
neg
add
jge
push
loopne
sub
fmuls
push
push
sub
mov
mov
xchg
or
mov
arpl
sahf
or
push
lret
aas
mov
ds
add
xchg
adc
jmp
enter
leave
sbb
movsb
push
add
xchg
jo
sbb
cwtl
adc
push
mov
decl
lock
test
and
mov
adc
subb
fsubs
dec
ljmp
das
jbe
inc
cmp
sub
int
and
push
jmp
lock
fcmovbe
stos
call
and
test
inc
xchg
inc
xchg
cs
mov
insb
mov
ljmp
jae
insl
jl
pop
inc
xchg
scas
shrb
xor
stos
push
push
aam
outsl
and
inc
ret
ret
loope
icebp
push
push
out
std
movsb
mov
rcll
out
call
sar
lcall
js
add
push
or
and
fnstcw
iret
loop
pop
push
jecxz
insb
inc
dec
dec
std
sahf
adc
inc
mov
cmp
mov
and
xlat
loop
cld
and
jge
es
mov
mov
lods
and
lcall
cli
rcll
lret
add
jecxz
cwtl
push
lret
sbb
xor
push
jg
or
dec
lcall
call
or
mov
inc
clc
icebp
inc
inc
es
and
inc
push
clc
mov
je
push
sbb
sbb
inc
and
pushl
sub
out
shl
inc
cs
cmpsl
xor
mov
and
aaa
ja
add
jmp
std
push
jbe
inc
xchg
jb
cltd
mov
xchg
jmp
into
ds
nop
dec
mov
call
jge
mov
jne
fimuls
loopw
call
das
xor
out
adc
lods
sub
mov
fcompl
pop
lea
sub
mov
out
clc
into
push
fcoml
pushl
aam
loop
and
pop
mov
fsubl
adcb
sub
jg
cmp
gs
jmp
xchg
imul
inc
lcall
cmc
stos
nop
scas
imul
adc
ljmp
cli
test
dec
roll
lret
ja
ds
int
cmp
lret
lret
adc
mov
push
jne
data16
lahf
cli
push
mov
mov
sbb
xor
add
flds
cmc
mov
adc
cmp
sub
repnz
mov
call
pop
ds
fmulp
ret
sbb
jp
push
jno
sub
dec
lcall
dec
push
lods
push
aaa
jns
mov
loopne
out
add
fcmovnu
imul
dec
inc
push
rorb
jbe
push
lcall
imul
jno
sub
movl
mov
push
xor
jge
pushl
xchg
adc
and
ljmp
push
xor
mov
push
sub
call
sub
mov
push
mov
adc
dec
popf
jg,pt
bound
aam
xchg
lock
stc
sbb
ljmp
push
cmp
lods
test
shll
sarl
mov
call
ljmp
dec
push
loop
inc
dec
push
push
xchg
xchg
mov
mov
icebp
std
push
sub
ljmp
mov
scas
add
iret
sbb
or
lods
cmp
mov
sub
outsb
movsl
maxps
push
es
cld
xchg
pusha
cltd
lea
push
lea
inc
call
push
imul
pushf
or
pop
push
aas
push
jle
leave
insl
repz
jge
cmp
or
or
mov
cld
call
ret
or
xor
mov
pop
push
xor
pushl
data16
mov
cmp
jp
hlt
mov
pop
cmp
ljmp
jg
sahf
cmp
add
mov
aaa
mov
sti
xchg
sub
jnp
incl
xor
fimull
mov
push
xchg
mov
cltd
mov
jno
incl
sub
cli
push
movsl
pop
std
inc
sahf
hlt
cld
xor
inc
xchg
sbb
cmp
jmp
or
fwait
or
xor
push
lahf
loopne
rcrb
gs
jg
call
fs
mov
and
mov
jg
push
test
mov
and
jo
gs
mov
adc
jecxz
and
push
cwtl
xchg
imul
out
imul
ljmp
mov
mov
jp,pt
test
push
mov
inc
pop
ficoms
stos
movsb
sub
dec
xor
lds
mov
cmp
xchg
rcrb
and
dec
mov
push
mov
incl
jl
sbb
sbb
mov
xchg
pop
into
out
aas
mov
mov
jmp
add
push
imul
cmpsl
cmc
out
mov
sbb
jg
pushl
mov
sub
repnz
and
int
lret
and
incl
jge
mov
push
lahf
rolb
or
call
dec
int3
cld
popf
jo
adc
dec
addb
mov
dec
push
mov
inc
aam
inc
loop
daa
inc
ret
pop
sub
cld
mov
hlt
sbb
ljmp
xchg
jmp
pop
sub
out
mov
addr16
out
dec
cwtl
mov
ljmp
cli
mov
addr16
or
adc
rcll
and
out
jge
xchg
mov
cmp
add
sub
out
rorl
negb
push
push
loope
push
jp
push
lds
adc
mov
mov
pusha
pop
test
xchg
push
xor
arpl
test
addl
fisttps
xchg
lcall
insb
push
int
mov
pop
in
insb
imul
cs
out
movsl
out
xchg
decl
push
push
adc
dec
or
pop
inc
xor
hlt
fmuls
jbe
jne
mov
decl
xchg
stos
dec
out
mov
stos
pop
popa
gs
fidivl
jnp
xchg
dec
sub
add
dec
adc
cmp
outsl
jle
jmp
xlat
sbb
filds
dec
mov
mul
xor
arpl
in
dec
mov
add
nop
inc
jbe
xlat
dec
mov
pusha
mov
mov
mov
ret
test
aam
out
je
xchg
imul
repz
rorl
aad
push
adc
push
icebp
fld
mov
fcoml
shlb
push
fs
jg
inc
push
mov
mov
data16
out
sbb
lods
mov
sbb
and
dec
fdivr
pushl
sbb
adc
dec
cmp
fistl
add
or
mov
inc
icebp
decl
dec
clc
pop
lods
push
nop
sub
ret
xchg
out
fwait
jge
stos
dec
sti
add
pop
or
int
push
cmc
push
xor
enter
sahf
adc
jns
jbe
adcl
or
jnp
push
ret
lds
std
dec
inc
lret
pop
ss
dec
pop
mov
or
mov
xchg
pop
mov
mov
ljmp
out
aaa
cmp
cmpsl
mov
mov
mov
cmp
decl
mov
imul
push
scas
cli
mov
add
jg
insb
pop
jmp
xor
lock
dec
add
adc
ljmp
mov
pop
popa
jae
outsb
mov
xchg
cmp
xor
cmp
fldenv
mov
stc
negb
lods
iret
cmp
push
sbb
das
repz
cmpsb
je
adc
xor
sub
pop
lock
dec
xor
std
and
test
lods
dec
shll
fsubrl
fmull
add
sbb
or
ds
std
jge
cmpsb
nop
or
adc
pop
movsl
jg
jg
jne
cmc
fxtract
lret
cltd
mov
in
std
data16
popl
push
add
push
push
stos
ja
das
sub
lcall
out
cmp
test
mov
xchg
cmp
cmp
mov
in
clc
mov
sar
and
sub
adc
jne
aas
xchg
shll
pushl
movsb
jbe
push
xor
lcall
adcl
push
pop
push
stos
sub
cli
lret
sub
sbb
jle
ljmp
stos
inc
ds
xchg
add
mov
fldenv
jo
xor
gs
repnz
cld
stc
lods
inc
decl
pop
jmp
pop
mov
clc
jb
mov
mov
stos
fisttpll
xchg
mov
push
popf
or
insb
cs
fucom
dec
xchg
jb
ret
pop
lret
icebp
fwait
dec
mov
out
mov
jge
mov
sub
sbb
xchg
mov
inc
cmovge
lds
mov
lcall
js
push
inc
lret
cmp
lcall
gs
outsb
jno
sub
scas
outsb
loop
popa
in
sbb
cmp
mov
cmp
sbb
push
cmp
out
push
push
pop
inc
pop
mov
ljmp
inc
push
add
pmulhw
fisubs
scas
add
xchg
mov
es
test
sbb
leave
insl
jae
test
dec
decl
lock
and
mov
jge
pop
cmp
sbb
push
daa
das
push
icebp
lcall
in
and
xchg
adc
fisubl
add
pushl
sbb
cld
push
mov
xchg
jge
jae
call
push
xchg
xchg
cmpsb
call
test
xchg
mov
inc
sub
jl
lahf
cli
xchg
or
adc
jno
inc
and
lcall
mov
test
cwtl
xor
cmp
xchg
xchg
cmp
mov
adcb
sbb
push
sti
pop
sbb
or
pop
imul
jp
arpl
fists
xor
rclb
adc
or
push
mov
jns
fimuls
out
push
enter
push
pop
sbb
xchg
adc
sbb
xor
lahf
dec
push
imul
mov
lcall
cmpsb
jecxz
decl
idivl
sbb
std
test
cmpsl
je
in
outsb
rol
imul
sbb
outsb
in
into
mov
or
pop
add
repz
imul
mov
fistpll
adc
dec
dec
inc
inc
addb
movsl
dec
mov
push
ret
jl
dec
inc
jg
incl
imul
inc
gs
sbb
push
ds
jecxz
push
mov
decl
adc
mov
pop
sbb
sub
negl
add
jb
out
add
call
mov
add
push
xchg
inc
adc
sarl
mov
mov
sbb
mov
call
adc
jns
push
imul
dec
mov
push
incl
xchg
fs
jmp
push
test
mov
push
add
fwait
lret
xchg
mov
pop
pop
mov
push
xor
sbb
ljmp
adc
xchg
inc
lahf
cmp
push
insb
push
adcb
push
fdivs
loopne
cmp
lcall
inc
imul
or
push
nop
mov
xor
imul
mov
popa
jg
jmp
test
dec
int
inc
mov
fcmovb
jl
in
jl
cld
cmp
push
and
dec
out
in
sbb
inc
jge
scas
cmp
pushl
lret
push
iret
push
hlt
and
cld
or
sbb
decl
hlt
add
cltd
mov
aas
mov
test
ljmp
pop
or
rolb
dec
adc
inc
popa
or
xchg
cmc
push
sub
incl
loop
out
mov
sbb
adc
push
ror
dec
cmp
dec
adc
decl
sbb
fucomp
mov
fwait
cmp
lahf
js
mov
push
sbb
fildl
into
cmp
test
rcl
mov
dec
ss
cmp
lcall
sbb
data16
pop
clc
or
jns
ja
leave
cs
inc
xchg
std
adc
jmp
jb
cmp
lock
fs
mov
ret
lcall
in
lret
jp
clc
incl
popl
lea
stos
leave
push
or
pushf
xchg
sub
jg
out
adc
jnp
pop
loopne
mov
or
icebp
mov
inc
loope
hlt
fstpl
jne
fsubs
fdivs
add
aad
mov
push
ss
push
cmp
sahf
sbb
ljmp
std
cmpxchg
loope
pop
mov
out
mov
sbb
js
rdseed
aaa
cld
addr16
shlb
nop
lret
mov
or
add
iret
mov
scas
mov
scas
dec
xchg
adcb
jns
inc
stc
jns
call
xor
lods
dec
leave
and
cli
and
xchg
push
ja
faddl
jne
mov
jmp
imulb
push
mov
push
mov
lcall
jge
dec
and
dec
add
and
mov
adc
mov
decl
clc
xchg
jo
fldt
jns
jno
lret
stos
dec
hlt
insl
cmpsl
in
sarb
lcall
sti
jmp
add
and
movsb
int
mov
mov
popa
cmp
popa
inc
mov
dec
cli
cmpsb
and
ljmp
xor
subl
sbb
jg
addr16
lret
mov
inc
push
cmp
in
ljmp
aad
ds
and
je
cltd
lret
cmp
fs
lcall
mov
decb
or
add
push
mov
in
or
sbb
sbb
inc
inc
leave
dec
xchg
testl
push
fsubs
movsl
dec
xor
lcall
bound
stc
fsubrs
call
int
into
push
pop
sahf
adc
loop
pushl
pop
stc
add
pusha
pushf
dec
test
mov
sbb
cli
cmp
mov
lcall
std
mov
mov
cltd
inc
xchg
jne
in
repnz
cmc
pop
mov
das
push
or
xchg
add
push
sub
mov
lds
inc
shlb
xchg
adc
jmp
into
lcall
pop
cld
rcll
cs
mov
std
call
std
and
dec
mov
subb
pop
je,pt
cwtd
or
mov
je
push
dec
data16
pop
push
mov
add
push
or
push
mov
fwait
cltd
xchg
add
popf
nop
lcall
or
mov
sub
push
cmpsl
jb
fs
test
out
push
add
mov
pop
subb
cmp
pop
jae
arpl
int
dec
jge
sub
sbbb
incl
mov
lret
and
mov
imul
xchg
scas
outsl
clc
imul
xor
push
into
lds
push
test
push
mov
inc
sti
ljmp
sbb
and
jo
insb
ficoml
add
hlt
js
add
das
cli
nop
in
inc
ret
mov
mov
cld
cwtl
jmp
pop
lahf
add
decl
and
xor
insb
dec
or
xchg
pusha
pop
sub
pop
jge
lcall
mov
das
add
xchg
mov
dec
dec
jno
and
divb
icebp
int3
inc
mov
ljmp
adc
cli
icebp
cmp
filds
pop
int3
sub
or
dec
decl
into
sti
test
mov
cmp
push
adc
jmp
sub
cmp
mov
jecxz
imul
sub
add
gs
mov
mov
es
pop
cmp
std
or
ss
loope
scas
add
ja
cmp
push
aas
fstps
inc
dec
incl
sbb
imul
sbb
mul
mov
sub
add
arpl
test
sar
pushl
out
sbb
rcrl
cwtl
xchg
pop
pushl
dec
adc
sbb
mov
inc
jae
push
or
or
mov
or
xchg
ja
inc
sub
aad
std
sbb
jmp
movsb
cld
push
cmp
ljmp
in
fwait
push
sti
push
mov
adc
add
shrb
add
pop
and
scas
in
inc
jecxz
pushf
mov
xlat
fistpll
mov
dec
ss
mov
iret
xor
mov
pop
push
rolb
stos
xchg
fcomip
call
pop
xchg
or
xor
pusha
inc
std
or
mov
cmpsl
jl
dec
movsb
movsl
cmpsl
pushf
pushl
sub
cmp
dec
scas
mov
dec
jns
shrb
sub
pop
stos
ret
fimuls
pushl
dec
pop
adc
clc
icebp
cmovg
xchg
jb
cmp
mov
ret
rolb
xor
call
in
push
cwtl
aam
aam
gs
xchg
imull
out
pop
push
lcall
pop
pop
push
std
push
jecxz
negl
frstor
add
inc
int
loope
jecxz
adc
decl
jg,pt
lods
push
adc
cltd
xchg
add
pushf
jp
insl
sub
push
cwtl
jmp
inc
pop
pop
push
mov
loope
cs
xchg
lock
cmp
in
cli
fidivs
add
add
testl
push
mov
pop
je
out
jl
and
push
or
in
lret
or
ljmp
sbb
xchg
cmp
xchg
dec
sbb
xchg
inc
pop
xor
jmp
adc
push
bound
cmp
fldt
sar
sub
int3
je
mov
mov
pop
cltd
popf
push
cmp
xor
lods
push
lock
incl
test
fwait
loope
inc
stos
push
adcb
cld
cltd
jns
dec
or
xor
ljmp
scas
mov
jg
lret
cmpsb
insb
testb
push
jo
cmp
test
out
mov
mov
lds
repnz
push
aaa
xchg
or
sub
cmp
ljmp
loope
and
xor
cmp
insb
dec
sbb
jbe
shl
jmp
call
sub
ja
aam
pop
pop
out
js
adc
add
lods
jge
shlb
jmp
adc
mov
inc
sub
mov
dec
mov
pushf
fs
jmp
cmp
sarb
movsl
push
xchg
jecxz
das
daa
enter
movsb
inc
pop
sti
xor
sarb
mov
sar
pushl
test
add
jp
fistps
push
and
mov
das
stos
pop
push
jp
jge
in
cmc
push
fmul
mov
das
dec
or
sbb
in
cmp
sbb
and
clc
adc
pop
mov
lcall
cmp
out
or
or
dec
test
lods
xor
in
jae
xor
out
xlat
mov
decl
lret
xchg
xor
sbb
lods
pop
andb
in
push
std
ljmp
fchs
xchg
cmp
out
cmp
and
jb
stos
sar
dec
idivl
out
cmpb
sbb
jnp
cmpsb
dec
pop
xor
dec
bound
mov
adc
jmp
sub
insb
mov
int
xlat
jmp
stos
push
inc
pop
fs
sbb
loopne
lods
out
clc
jg
daa
and
dec
pop
pop
pop
cltd
jecxz
adc
adc
subb
scas
bound
fcomi
iret
push
ljmp
or
pop
dec
shrb
nop
ret
xchg
mov
mov
cwtl
shl
iret
repz
mov
mov
mov
xlat
scas
in
cmp
and
jmp
clc
ficoms
out
cmp
mov
arpl
cltd
lods
in
daa
out
add
lock
das
sbb
xchg
call
std
add
mov
ss
pushf
stos
insb
push
fimull
in
cmp
pop
cmp
lret
popf
arpl
sarb
add
jg
dec
outsl
testb
stos
mov
xchg
xchg
test
mov
adc
das
ds
cmc
xchg
and
xor
mov
fbstp
adc
sbb
ljmp
sbb
jno
push
popa
push
rsm
insl
fs
aad
nop
aaa
into
fidivs
test
mov
adc
retw
into
and
mov
xor
xchg
pushf
push
dec
ffree
mov
int
jl
push
cld
mov
mov
outsb
in
xor
cmc
xor
sar
decl
adc
jo
dec
out
out
popa
sbb
shlb
and
stos
add
or
ljmp
in
jecxz
inc
ror
sbbl
pop
fsubrl
push
ret
mov
fbld
rorl
fisubs
andb
sub
fidivs
ret
cmpsb
mov
push
cmpl
lcall
iret
lock
mov
fpatan
adc
test
xor
sub
inc
scas
imul
push
cld
decl
sub
adc
jle
mov
xor
xchg
cmp
iret
int3
fdivr
mov
and
add
mov
mov
add
jmp
rclb
jae
sbb
jne
mov
xor
sub
scas
sbb
call
jp
lcall
jae
fwait
and
push
js
out
jb
mov
incl
rorb
xchg
pop
jb
shlb
xchg
shr
js
jp
dec
pushl
dec
pop
addr16
enter
cmp
lods
push
cmp
das
mov
mov
ljmp
adc
int
jns
cmpsb
loope
push
in
or
mov
xlat
add
xchg
xor
incl
fistps
and
lods
rcrb
loope
pop
sbb
jle
ja
pop
xchg
insl
ficoml
jle
out
dec
js
sbb
mov
sbb
mov
dec
mov
mov
cld
jmp
stos
mov
sub
pop
xchg
jmp
inc
add
test
jmp
add
movsb
out
or
mov
je
loop
dec
and
sub
fstpl
cmc
jmp
adc
dec
xchg
sbb
pop
lds
jbe
repz
xor
xor
into
xlat
es
mov
jmp
aaa
bound
mov
cmpsl
nop
cmp
rcll
stos
jno
addr16
ljmp
xor
sub
sub
fnstenv
fs
jne
lcall
pushl
cmp
nop
sbbl
sar
sub
lret
inc
leave
inc
push
or
push
decl
lock
stos
push
int3
les
cmp
jp
cmp
fidivrs
cld
vcmppd
sahf
inc
mov
inc
and
xchg
icebp
out
ret
mov
jg
cli
cmp
jb
imul
add
push
or
loop
inc
mov
push
insb
loope
pushl
and
xchg
mov
push
hlt
stc
dec
cmp
xor
je
cmp
mov
inc
sbb
inc
cmpl
jns
dec
jmp
cwtl
push
sbb
std
push
mov
pop
loop
dec
push
cld
and
adc
int
in
ret
outsb
add
pushl
ss
outsb
or
test
dec
fsubs
pop
stc
sbb
sbb
call
adc
mov
jg
mov
add
gs
sub
dec
inc
sub
incl
cmpsb
mov
jp
inc
mov
cmp
push
xchg
mov
xchg
movsb
sub
sti
in
shll
dec
icebp
mov
push
out
dec
sbb
push
jp
imul
mov
push
mov
mov
inc
inc
xchg
add
ret
xchg
in
je
cmpsb
lods
pop
sbb
repnz
jnp
dec
dec
aad
pop
and
js
xchg
out
pop
sarb
or
cmp
mov
inc
call
test
ljmp
adc
sbb
int3
push
push
push
pop
pop
out
xchg
stc
sbb
cmc
jge
push
inc
mov
jmp
lcall
xchg
fwait
cwtl
jbe
bound
scas
call
jae
mov
repz
lea
mov
ljmp
or
jg
int3
mov
or
push
movsl
sub
call
jo
jle
shl
xchg
push
adc
out
pop
add
or
and
jmp
pop
test
cmp
xlat
xor
cmp
mov
and
xor
and
and
incl
jecxz
incl
stos
mov
clc
adc
mov
in
fstps
mov
mov
lods
xchg
xchg
shll
mov
inc
hlt
xchg
lahf
adc
sub
fld
jne
and
call
dec
push
adc
push
or
sub
xor
int3
in
cmp
in
and
mov
stc
adc
xor
aad
sub
mov
xor
mov
hlt
fcoml
std
das
rolb
mov
cmpsl
fcomp
ret
fsubs
incl
mov
mov
sub
xchg
push
subb
mov
jle
mov
decl
sbb
mov
test
pop
push
dec
dec
rcrb
pop
jg
xor
xor
pop
jns
jle
inc
and
fmul
hlt
mov
in
xchg
cld
mov
adc
fildll
call
movsl
pusha
testl
xchg
mov
adc
xchg
mov
mov
je
in
lret
jg
mov
inc
fistps
push
mov
add
fldt
andl
inc
dec
jecxz
and
daa
inc
movsl
loop
push
int
cmp
ret
stc
clc
inc
aaa
push
mov
insb
lcall
cmpl
mov
mov
mov
xor
and
jecxz
xor
sub
test
lret
dec
adc
cmpsb
mov
popf
cmp
add
xchg
or
loop
sbb
imul
ljmp
shrb
imul
pop
inc
and
lea
lahf
adcl
push
loopne
mov
push
in
repnz
call
enter
mov
jb
cmp
fcomps
sub
ljmp
cmpsl
pop
sbb
inc
dec
push
pop
or
or
inc
inc
xchg
sbb
bound
pushl
push
xchg
lea
mov
mov
es
test
ficomps
or
mov
cs
fdivp
push
lcall
and
hlt
or
or
call
mov
mov
sub
inc
stos
mov
xchg
pop
addl
adc
pushl
push
insb
sub
ret
test
mov
add
icebp
decl
ljmp
call
cli
and
icebp
pushf
popf
xor
push
cmp
sahf
mov
jns
xchg
clc
rolb
test
add
jg
icebp
jmp
xchg
aam
xor
daa
mov
sti
jecxz
mov
sbb
incl
xchg
out
insb
mov
mov
rol
inc
add
lods
pop
mov
xchg
xor
pop
lret
cmp
lcall
xchg
and
fbstp
incl
out
cmp
mov
das
push
clc
and
adc
fstpl
popf
nop
add
cmp
incl
shl
mov
int
faddl
and
push
lret
cmp
out
lcall
jg
cld
xchg
mov
jge
fwait
inc
cmpsb
imul
movsl
pushl
jnp
push
insl
inc
cmpsb
push
xlat
popa
inc
xlat
pop
es
shlb
dec
fcomip
stos
pusha
rcll
nop
xor
xor
sbb
pop
push
lods
insb
or
lea
mov
sub
sahf
iret
adc
clc
xchg
mov
add
jb
xor
pop
lock
clc
aad
dec
imul
out
and
fcomp
push
jbe
and
jmp
sbb
push
push
or
xor
mov
rorb
jp
dec
jbe
pop
pop
mov
xor
loop
or
mov
adc
xchg
sub
dec
repz
ret
push
inc
sub
mov
decl
dec
cmp
addl
ret
imul
sub
icebp
dec
iret
lcall
push
and
jmp
pop
xor
inc
rclb
fstps
mov
in
push
mov
jno
cli
sub
shrb
lods
loopne
jmp
xchg
sbb
ret
inc
dec
push
xor
xor
push
ljmp
or
add
pop
push
into
inc
out
outsb
lret
test
xchg
out
inc
sbbb
cmp
incl
cmp
bound
into
pop
int3
movsb
dec
cmpsl
xorb
test
xor
jmp
sahf
mov
pop
sub
xor
scas
pushw
push
popa
adcl
xchg
test
pop
dec
fdivrl
inc
push
out
add
pop
adc
shll
icebp
cli
fisubrs
clc
sub
and
cmp
fldl
test
or
xor
sarb
cli
ljmp
dec
add
or
lret
inc
and
mov
inc
pop
or
out
in
sahf
dec
fwait
adc
or
xchg
or
je
icebp
and
sub
xchg
roll
arpl
incl
push
mov
xor
sbb
das
dec
daa
test
xchg
jb
mov
lds
mov
inc
outsb
insb
jb
incb
bound
mov
or
mov
addr16
ds
aaa
push
mov
icebp
jns
pop
stc
xchg
mov
cltd
sbb
sub
insb
cmp
out
decl
cmpsb
ds
rclb
push
fdivs
and
jne
inc
lcall
xor
mov
dec
adc
loope
out
jne
cmpsb
repnz
inc
mov
ljmp
icebp
sub
mov
icebp
jbe
dec
mov
push
fbld
call
loopne
mov
lods
lahf
je
jbe
movsb
add
push
pop
mov
fucomp
int
je
popf
mov
pop
cmp
jns
push
mov
cmp
jl
ficoml
decl
mov
or
fst
daa
mov
ret
lcall
cmpsl
jmp
adc
shrl
mov
push
cmp
cltd
push
les
jmp
jge
mov
fildl
mov
jb
lods
xchg
mov
pop
push
mov
pop
inc
mov
lret
adc
jmp
call
pushf
mov
push
or
call
divl
shrl
stc
and
sti
lcall
and
xchg
iret
xor
mov
sbbb
xchg
mov
stos
mov
push
mov
jl
mov
jg
loop
sub
jno
pusha
push
sub
mov
les
adc
leave
pop
sub
stos
cs
lea
jne
hlt
enter
test
daa
js
ds
decl
std
jnp
xchg
test
cmpl
push
ret
sbb
cmp
add
push
call
inc
adc
pop
push
jp
mov
mov
add
out
pop
push
mov
add
inc
sbbb
mov
pop
cmp
bound
dec
loopne
repnz
cmp
addr16
loop
pop
orl
out
jmp
incl
mov
lcall
push
and
dec
and
push
lock
adc
js
mov
fnstsw
push
or
sbbb
lcall
std
les
sub
dec
mov
jge
hlt
xchg
int3
gs
fstpt
lret
lret
or
jmp
inc
pop
dec
cwtl
andb
xchg
lea
push
push
lcall
xor
ficoml
pop
cmp
cmpsl
lret
cmpsl
dec
add
mov
pushf
pop
jge
fdivl
mov
mov
mov
insl
jg
in
fisubl
enter
insb
out
andb
add
repz
nop
stc
cmp
fwait
insl
and
cmp
pop
sar
decl
push
mov
xchg
les
rcr
mov
dec
call
push
dec
lcall
popa
adc
int3
adc
push
cmp
and
adc
lcall
xor
inc
test
adc
and
mov
adc
xor
xchg
cs
decl
aas
xor
int
or
popa
mov
std
repz
cltd
cld
mov
ljmp
mov
jg
mov
rcr
stc
pop
push
adc
sbb
in
ret
xor
es
jmp
or
lahf
popf
gs
inc
xor
cld
lock
test
sbb
call
or
decl
aas
mov
cmp
and
xchg
inc
sbb
push
push
or
int3
jnp
sub
jl
outsl
sbb
dec
pop
xchg
call
loopne
cld
sahf
xor
fidivl
mov
ljmp
fsubrs
cmp
sub
xor
cltd
or
addr16
pop
aad
fimull
rcrl
pushl
jns
insb
test
xchg
rorl
and
pop
cmpsl
lods
dec
push
mov
push
decl
add
cmpsl
push
cmc
mov
or
jp
adc
cs
cmp
loope
faddp
into
or
inc
xor
outsl
repnz
call
shl
pop
in
or
decl
gs
cmp
into
das
push
imul
sahf
cmp
cs
dec
adc
sbb
pushf
mov
jmp
jp
lcall
in
decb
sbb
fdivl
inc
dec
mov
data16
clc
jmp
loopne
in
mov
sahf
rol
or
sub
sub
lret
cmpsl
mov
stc
incl
xor
and
imul
cmp
gs
inc
pop
test
into
xor
mov
mov
xchg
fwait
loope,pt
ret
aam
incl
cmp
movl
sarb
push
es
outsl
cli
mov
xchg
xchg
sbb
mov
mov
icebp
decl
sarb
xchg
adc
loopne
dec
xchg
je
scas
sbb
push
or
sbb
je
inc
push
mov
mov
add
popf
fildl
mov
decl
lods
int
xchg
xchg
mov
out
stc
jp
fstpl
movsl
call
pop
pop
adc
fmuls
loope
push
ljmp
insl
push
and
dec
xchg
cld
scas
jo
xor
dec
stos
push
sub
ljmp
and
mov
add
sbb
pushf
dec
mov
mov
shrb
push
decl
push
insl
fbstp
or
int3
push
sbb
std
lcall
insl
adc
enter
push
dec
jp
inc
dec
jg
pushf
cmpsb
incl
fwait
popl
stos
scas
xchg
mov
out
das
aam
loopne
mov
incl
lods
test
cs
lock
stos
cmp
bound
ljmp
mov
xor
inc
inc
out
daa
cmp
xchg
mov
jbe
adc
add
ss
mov
push
call
scas
cli
and
jl
sub
aas
xor
xchg
mov
decl
clc
shrb
outsb
mov
ret
aad
sbb
sahf
adc
cmp
sbb
jg
call
mov
je
mov
jb
mov
cmp
jns
ret
decl
subb
ss
and
data16
in
fwait
popa
ret
push
sahf
cld
mov
rcrb
ret
shl
push
pop
fsubrs
frstor
jmp
or
push
cs
xlat
pusha
lods
ljmp
clc
aam
mov
push
jg
dec
insb
push
mov
lahf
fmul
fwait
pushl
mull
sub
enter
lds
jns
subl
add
inc
inc
popa
cmpsb
and
addr16
cld
arpl
gs
jge
je
and
sbb
ljmp
mov
fwait
mov
out
into
jne
fstpt
xor
add
in
cmp
loop
pushl
inc
in
pop
scas
aaa
rolb
add
mov
adc
cmp
fidivs
hlt
das
sarb
jae
or
lods
test
jp
cld
add
popa
mov
xor
jmp
xchg
sub
jecxz
cmp
cmp
dec
xor
jl
cmp
lea
adc
mov
dec
outsl
mov
aad
jnp
aaa
sbb
push
cmpsl
mov
xor
mov
jbe
add
xlat
outsl
mov
xchg
dec
or
in
ja
pop
sub
pop
icebp
cmp
ret
lea
aad
iret
rorl
ret
jle
fwait
mov
dec
lods
stc
mov
aas
add
lea
fisttpl
mov
adc
lcall
scas
push
sti
cmc
xor
test
jp
cmpsl
inc
sub
pushl
mov
fcomi
cmc
lods
inc
mov
push
xor
daa
int
mov
js
lcall
clc
pushl
sbb
ficompl
mov
adcb
or
lcall
int3
imul
stos
jp
xchg
enter
jmp
cltd
push
es
ljmp
clc
cs
cmc
in
mov
push
pop
fcmovnu
les
cmp
jge
lahf
xchg
push
push
push
dec
cld
dec
inc
and
sbb
cmc
je
jae
mov
mov
jnp
mov
incl
flds
sub
imul
call
mov
stos
push
sbb
ud0
incl
pop
xor
lret
ja
mov
pushfw
test
pusha
sbb
decl
pop
stc
fildl
sbb
clc
sarb
sub
mov
int3
test
das
or
dec
decl
dec
lcall
call
xor
adc
add
ret
jl
jno
add
dec
push
push
std
incl
jo
in
outsl
inc
int3
rclb
iret
mov
cmp
xor
jmp
jmp
icebp
mov
xor
sub
cmp
andb
push
sub
ret
pushl
sbb
aaa
mov
ss
jne
les
mov
aad
mov
jns
cli
sbb
and
push
imul
jg
sub
lcall
daa
add
div
sub
push
cmp
jo
imul
jmp
shlb
mov
adc
fwait
cmp
mov
loop
jbe
stos
in
mov
sbbl
iret
movsl
popf
inc
or
imul
lods
dec
loop
mov
jae
rcrl
clc
cli
pop
jno
js
adc
leave
mov
lods
mov
sbb
in
or
ficompl
cwtl
lods
fucom
push
pop
and
inc
aaa
and
lcall
pop
sbb
push
repnz
inc
pushf
add
xchg
pop
ljmp
inc
pop
mov
lods
in
dec
jnp
shlb
shlb
pop
in
mov
stos
test
fistps
cli
jmp
xor
lcall
pop
inc
nop
xchg
dec
popf
push
decl
mov
mov
or
lds
pushl
pop
test
lock
lods
imul
stos
mov
mull
int
lock
push
ljmp
pusha
add
dec
xor
or
imul
xchg
inc
imul
push
jl
faddl
push
jmp
inc
aas
jmp
in
xor
pop
lret
sub
sarl
jmp
xchg
xor
mov
incl
inc
xchg
imul
sub
nop
not
call
int3
loopne
fistpll
jmp
sub
push
dec
in
pop
mov
cwtl
xchg
xor
jne
ljmp
mov
pusha
pop
imul
mov
and
out
fidivrs
xor
loope
cltd
pop
jge
jns
ljmp
aam
fidivrs
xchg
movsl
sbb
decl
sbb
xchg
test
lahf
sub
addr16
pop
xor
jnp
ss
inc
or
ljmp
cld
jg
xor
fimuls
hlt
ja
pop
sahf
pop
sub
es
insl
nop
cli
ljmp
dec
js
xor
movsb
or
aad
sub
xor
addr16
pop
jno
dec
jbe
ficompl
mov
dec
adc
divb
push
or
hlt
ljmp
pushl
xor
call
mov
lahf
ret
jns
insb
or
mov
call
pop
xor
mov
xor
and
push
push
sahf
sub
out
or
mov
repnz
sub
loope
pop
pop
repz
xchg
sbb
notb
sbb
lcall
push
inc
sub
adc
in
cmp
xchg
xchg
popf
xchg
sti
sahf
lea
lcall
sub
sbb
mov
mov
jge
int
fistpl
mov
pop
jle
stc
add
jecxz
or
add
pop
iret
das
lods
mov
ffreep
jmp
imul
ret
cmp
incl
shlb
and
adc
addr16
clc
sbb
xor
adc
call
cli
mov
inc
call
stos
jmp
mov
sbb
xchg
push
mov
std
in
insl
and
mov
xchg
inc
or
or
mov
scas
cmp
mov
xchg
insl
pusha
adc
sbbl
and
cmp
sub
cmp
scas
cli
dec
adc
sti
xlat
int
lock
mov
les
gs
out
clc
ljmp
rorl
in
out
xor
mov
popf
xor
ljmp
sub
cmpl
push
mov
ljmp
adc
nop
jmp
lahf
iret
insl
jle
das
pop
dec
sub
pop
into
fistpl
test
aaa
push
call
icebp
lods
push
push
xchg
insl
sbb
jg
cwtl
in
in
jmp
adc
popf
repnz
decl
outsl
icebp
jle
outsb
jbe
xor
imul
xor
fcomip
fiaddl
pop
push
fidivrs
rorb
mov
add
stos
mov
mov
cmp
xchg
ja
mov
xor
add
cmp
dec
clc
outsl
cmpsb
cmpb
int
int
inc
ljmp
or
ret
pop
jg
loope
cwtl
imul
or
imul
fsubrs
push
pushl
jg
and
imul
sbb
sub
or
lods
push
out
mov
inc
scas
sahf
aas
mov
rolb
mov
lcall
or
pushf
adc
jle
or
pop
jno
pop
fildll
jbe
jne
pop
sub
aas
pop
xor
call
subb
jg
push
inc
xchg
jmp
aaa
lock
sbb
and
jnp
js
scas
enter
mov
ljmp
push
add
cli
mov
loope
jno
push
test
std
and
out
hlt
es
hlt
lcall
dec
hlt
or
lret
jns
inc
xchg
aas
dec
push
inc
fdiv
int3
mov
ret
push
or
ljmp
pop
stc
test
int3
cmpsl
pop
pusha
adc
lahf
or
cmp
insl
and
int
dec
divb
jmp
ljmp
cld
and
ja
and
int
pop
imul
xchg
push
mov
ljmp
jno
notl
sub
lds
pop
sbb
repz
mov
adc
jg
fisubrs
lret
jne
fsubrs
sbb
mov
jmp
inc
fisubs
roll
mov
sbb
icebp
or
sub
pop
dec
rclb
jae
clc
decl
sbbb
inc
fsubrp
sub
or
sar
mov
mov
decl
cmp
inc
stc
dec
inc
xchg
cmpsb
jnp
jns
aam
gs
push
rcrl
call
into
or
mov
xchg
test
in
idivl
push
outsl
hlt
popf
lret
lcall
ja
daa
mov
outsl
add
addb
cwtl
add
push
or
jg
dec
dec
add
push
fs
outsb
dec
scas
mov
popf
fwait
jg
leave
rclb
sub
jae
into
mov
fs
ljmp
xchg
push
sub
lock
out
jge
pop
bound
mov
notb
pop
xor
sub
pop
pop
addr16
div
lcall
add
fistpll
dec
mov
adc
into
dec
cmp
out
mov
decl
mov
cmp
hlt
jecxz
push
pushf
jl
pop
or
incl
loopne
pop
or
add
jg
xchg
incl
or
cmp
mov
xchg
inc
inc
sub
ret
into
dec
mov
pusha
pop
out
pop
pushl
mov
sbb
jmp
out
insb
lds
hlt
and
xchg
jns
mov
roll
pushf
jb
pop
repnz
jmp
sub
xchg
iret
cmp
aad
std
icebp
hlt
ret
inc
or
dec
push
cmc
neg
repz
cmp
stos
mov
push
jg
std
and
ljmp
mov
out
jne
cmp
xchg
and
and
incl
sub
xor
fcmovne
icebp
fcompl
in
add
cmc
push
xor
gs
jb
lock
mov
pop
icebp
push
add
rcl
push
outsl
pop
aad
or
in
lret
add
push
add
loop
xchg
mov
push
sbb
imul
fwait
pop
popw
jg
cmpsb
cmpsb
int3
mov
cwtl
adc
inc
cmp
fsubs
addr16
ficomps
ljmp
adc
jecxz
xor
adc
dec
cmp
cmp
sti
insb
pop
scas
add
mov
mov
jo
cld
inc
repnz
cmc
loop
mov
es
fstpl
pop
adcl
decl
dec
testb
gs
movsl
popf
jae
hlt
sahf
incl
cld
jg
sub
popf
cltd
xchg
adcl
inc
ljmp
mov
jmp
mov
xchg
into
push
test
cltd
pop
ficomps
cmp
inc
lcall
jp
fldl
cmp
aas
adc
sub
push
inc
mov
adc
cmpsb
jg
ror
mov
icebp
pop
jmp
or
inc
sub
leave
insb
sbbl
pop
cmp
push
nop
repnz
sub
je
movsb
xor
xor
or
mov
push
repz
cwtl
xchg
mov
clc
or
pushf
ja
outsl
stc
mov
daa
adcl
adc
push
jmp
out
mov
jmp
xchg
mov
jnp
sub
scas
pop
cmp
pop
fldenv
daa
cli
loopne
sub
decl
cmp
jno
ficompl
out
and
xchg
sahf
mov
sub
jl
pop
outsl
pushl
jecxz
and
das
xchg
popa
xchg
jmp
inc
lds
orl
add
decl
mov
bound
sbb
hlt
mov
cmc
mov
pop
into
stos
cmp
std
inc
and
rclb
mov
movsb
lds
jno
lcall
adcl
inc
jmp
sbb
scas
push
pop
cmp
jbe
popa
mov
lcall
out
xchg
xor
mov
gs
xlat
int
fcomi
mov
cltd
aam
and
call
jmp
cwtl
ds
xchg
pop
insb
mov
xchg
lret
lahf
add
jecxz
mov
jle
inc
mov
ljmp
lods
mov
inc
test
mov
and
mov
lret
not
das
dec
aaa
cmpsb
ljmp
gs
mov
scas
pop
mov
aaa
mov
sub
insb
loopne
mov
ret
cmp
incb
ret
pop
push
inc
pop
das
clc
jmp
mov
lahf
scas
inc
push
mov
mov
pop
jnp
outsb
adc
jmp
push
jl
dec
pusha
cmp
cli
movsb
ficoml
aas
cmp
ret
out
out
sub
popa
lcall
lods
and
xchg
lods
xchg
rorl
ljmp
stc
and
ljmp
in
clc
js
mov
les
shrb
lret
push
mov
aad
xchg
pushl
xor
sub
sti
and
clc
hlt
xchg
push
in
mov
sub
pop
jae
add
push
sub
cmp
inc
or
or
fmuls
push
adc
outsb
mov
fdivr
loopne
out
clc
lcall
xchg
int3
mov
xorb
mov
in
sub
pop
out
pop
sbb
push
std
incl
xorl
inc
stc
cmp
adc
leave
fistps
fcmove
insb
inc
add
jg
or
adc
push
jnp
into
inc
inc
out
fsubl
adc
jnp
pop
cwtl
mov
cli
sti
insl
cmp
or
mov
sub
loopne
inc
js
inc
in
pop
sub
pushl
or
add
push
in
loope
andb
call
adc
sub
push
inc
push
and
sarl
test
push
mov
push
outsl
int
sub
shl
aas
cmpsl
fnstsw
xchg
ret
aad
adc
add
jecxz
sub
adc
cmpsl
dec
dec
icebp
in
rorl
int
mov
push
mov
test
popf
rorb
xchg
test
or
pop
into
sub
lods
daa
lds
adc
jl
sub
es
add
sbb
incl
lock
adc
xor
das
push
push
adc
std
nop
mov
cmp
and
mov
add
sbb
scas
and
xchg
mov
fisttps
es
ret
adc
test
add
test
mov
in
xchg
incl
push
mov
mov
and
fwait
pop
test
scas
inc
and
xor
loop
lcall
mov
inc
cmp
mov
add
cmpsb
rclb
imul
inc
xor
dec
xor
jle
sub
mov
push
cltd
lret
pslld
ljmp
sbb
pop
in
jb
jp
insb
shl
bound
push
inc
test
scas
mov
add
ljmp
inc
cmpsb
cmpsl
cli
sbb
push
pop
mov
jbe
rclb
mov
sbb
int
movsl
push
nop
enter
dec
adc
cmp
pop
adc
sub
sbb
push
jle
dec
outsb
mov
push
popa
jns
js
cli
incl
jl
sbb
pop
out
ror
out
and
mov
fwait
movsl
pop
mov
inc
mov
call
mov
push
loope
cmp
loop
sbb
mov
jle
add
outsl
call
fmull
lods
cmp
enter
rep
out
lahf
sar
lcall
shrb
js
pop
sub
ret
scas
faddl
data16
scas
into
xchg
mov
push
push
mov
rol
jecxz
outsl
lcall
xchg
xchg
incl
xlat
jge
mov
cmc
jo
shrl
jg
jae
push
mov
aam
adc
xor
inc
pop
cmpsl
jne
loopne
lret
mov
cmp
mov
dec
mov
shlb
fwait
lcall
mov
sub
into
cmc
add
xor
pop
cli
fsubrl
jg
lods
nop
pusha
adc
iret
mov
test
mov
cmp
fwait
cmp
cwtl
lcall
mov
xchg
inc
push
jmp
dec
ljmp
clc
jmp
pop
dec
xchg
mov
jb
cltd
mov
test
outsb
push
aad
adc
call
sub
xchg
inc
or
mov
pop
or
hlt
in
outsb
mov
orl
jg
cmp
sti
scas
loopne
mov
jo
push
sarb
jecxz
add
jmp
push
shll
adc
out
dec
test
fcmovnb
jns
xchg
xlat
daa
testl
and
jmp
jns
es
inc
negb
lds
nop
add
pop
iret
stos
cmp
or
fmul
push
jb
cbtw
cli
cmpsb
or
and
push
std
sub
into
dec
sahf
mov
sbb
xchg
push
xchg
fs
ds
shl
cmp
mov
jmp
xchg
adc
push
sti
pushf
push
faddl
and
aam
mov
jg
cmp
cs
clc
fadd
cmp
mov
mov
fildl
sahf
push
repz
decl
mov
insl
jne
inc
and
repnz
add
subb
sbb
pop
push
pop
mov
das
pop
popa
test
jnp
push
or
cmpsb
xor
addr16
pusha
das
rcrb
call
jl
dec
and
pushf
out
repnz
out
in
ljmp
test
mov
sar
das
sbb
jg
int3
cmpsb
in
in
into
gs
pop
sbb
clc
in
inc
jb
adc
xchg
dec
dec
add
das
cli
pop
sub
shll
jb
test
bound
orb
jg
jge
xchg
popf
dec
jp
pusha
push
xor
repnz
scas
xchg
xchg
test
lock
in
add
mov
and
push
push
or
dec
hlt
fcomip
decl
pop
stos
xor
push
mov
pop
ficompl
das
insl
filds
call
dec
sbb
leave
push
and
enter
pop
ljmp
rclb
pushf
inc
mov
divb
inc
push
xchg
jnp
jo
inc
adcb
lret
inc
ljmp
pop
dec
add
jmp
inc
jno
push
jnp
dec
popa
push
mov
pushl
ficoms
mov
adc
and
fsubrs
push
test
fnstsw
rcr
push
mov
push
push
shr
cmp
in
leave
jecxz
cmc
mov
lods
lods
imul
cmc
in
scas
jle
subl
pushl
fadds
ja
xchg
jns
mov
add
push
test
addr16
jmp
js
ret
add
test
mov
lret
jnp
mov
dec
loope
mov
jp
mov
enter
call
push
xor
fstpt
mov
mov
nop
cmp
aam
jnp
aad
dec
bound
andl
js
lea
inc
pop
pop
loop
mov
outsl
lcall
loop
sti
lods
mov
mov
jge
lea
and
lcall
sbb
mov
jbe
lcall
jmp
inc
daa
push
jno,pn
andl
xchg
stc
push
jae
aas
movb
loopne
out
cmp
call
pushl
and
decl
lds
hlt
daa
xchg
jp
imul
push
es
pushl
outsb
sub
adc
mov
loopne
jp
mov
or
xor
in
cmp
pop
mov
push
mov
xchg
and
hlt
fcomp
inc
add
xchg
call
pop
jbe
xorl
dec
subb
cmp
out
inc
add
mov
out
or
leave
push
repz
jne
inc
lds
adc
push
sub
fcmove
cwtl
loop
mov
mov
xchg
shll
sub
sub
sub
roll
loop
adc
hlt
pop
push
xchg
pushl
xor
or
mov
xor
sub
pop
jnp
sbb
jne
into
outsl
inc
add
add
leave
mov
mov
mov
fsubrl
movsb
pushf
xchg
jb
sar
push
mov
push
pop
pop
sub
pushf
rol
cmp
scas
mov
and
pop
dec
push
lods
inc
addr16
push
je
shld
mov
push
test
push
mov
sub
cs
cmp
mov
push
adc
je
inc
inc
xchg
test
mov
pushl
inc
pop
sahf
mov
push
sbbl
push
iret
test
dec
mov
push
cmpsb
adc
cmp
data16
call
sub
and
shrl
adc
sub
jle
inc
xor
js
and
mov
pushl
hlt
mov
lea
gs
repnz
frstor
lret
xchg
or
insb
lcall
sarl
fdivrs
leave
sahf
mov
add
std
xchg
jecxz
cld
iret
push
rorb
pop
sbb
mov
lcall
dec
mov
and
sbb
dec
xchg
cmpb
fisttps
adc
jecxz
cld
pop
clc
cmpsb
aaa
inc
mov
xchg
pop
leave
mull
repnz
dec
and
stc
sbb
pop
add
pushf
sub
xor
jg
jge
test
jae
pop
decl
ss
xchg
mov
inc
sbb
xchg
xor
ds
xchg
call
ret
pop
or
sbb
push
lret
and
jns
xor
iret
xlat
bound
mov
and
test
aaa
rol
jl
iret
sub
mov
mov
fwait
pop
stos
cltd
gs
jg
stos
sub
lea
pop
and
jp
data16
lea
fwait
ja
jae
into
inc
sub
inc
fisttpll
out
pushl
mov
mov
sub
hlt
cmp
inc
cs
clc
add
xor
incl
xchg
clc
fcoml
dec
clc
sarl
push
nop
sbb
cwtl
gs
jecxz
lods
call
jno
mov
adcl
decl
test
imul
jle
mov
sbb
in
mov
pop
out
xchg
push
xchg
and
push
or
std
call
loopne
mov
imul
iret
loopne
sbb
call
pushf
rolb
pop
or
xchg
les
mov
push
das
pop
xor
addr16
loop
mov
incl
inc
out
fistpll
ret
fistl
stos
xchg
pop
mulb
test
fcomip
in
out
je
mov
int3
in
aaa
push
xor
sub
dec
aad
push
dec
inc
pop
shlb
inc
sub
sub
mov
sbb
jle
jns
pop
dec
mov
xchg
decl
xchg
int3
loopne
push
mov
sarb
out
arpl
shlb
ljmp
hlt
stos
out
fldcw
faddl
stos
sub
jge
clc
js
jno
adc
mov
mov
call
sbb
or
stos
arpl
dec
cli
ss
stos
fisttpl
stc
xchg
sti
out
adc
sbb
inc
mov
dec
xchg
inc
mov
je
mov
ss
adc
push
test
push
cmp
cmp
pushl
adc
pop
into
or
es
pop
jo
mov
or
es
xor
and
popf
call
dec
addl
or
inc
cmp
ja
add
xor
imul
sub
pop
or
add
call
pop
fnstcw
stc
inc
xchg
outsb
rclb
jle
ret
filds
and
push
xchg
mov
sbb
ljmp
shr
xchg
xor
in
popf
mov
add
int3
arpl
decl
pop
pop
xchg
imul
or
jg
cwtl
outsl
addr16
test
scas
test
iret
dec
adc
fisttps
mov
lock
jno
dec
lock
cmp
out
adc
repnz
add
rorl
sub
mov
xchg
mov
ljmp
call
std
pushl
ret
call
jl
and
inc
xchg
or
fsubrs
or
dec
lods
fidivl
dec
rolb
pop
xchg
mov
mov
jb
cli
outsl
daa
xor
inc
dec
push
or
decl
stos
mov
dec
mov
pop
xlat
js
ja
aas
in
or
sbb
mov
push
cmp
cmp
cmp
adc
inc
loop
push
jmp
mov
fwait
mov
repnz
lock
inc
sub
movsb
lock
outsl
int
sub
cmpsb
fwait
pop
cld
das
lods
mov
js
jo
js
sbb
mov
daa
mov
mov
imul
jbe
and
mov
dec
loope
lret
pop
cmp
das
pop
in
ja
dec
mov
xchg
js
mov
hlt
jnp
xlat
and
sub
add
in
mov
sub
sub
les
fwait
or
lea
fidivrl
pusha
xchg
and
ljmp
test
inc
jp
dec
mov
add
fistpl
push
roll
movsl
cld
incl
lcall
lret
xchg
jl
cmp
push
mov
pushl
push
inc
stos
mov
subl
mov
jno
lret
jge
jmp
sub
mov
sub
mov
fs
xchg
push
and
fimuls
cmp
adc
ljmp
jno
int
mov
lcall
dec
xchg
push
in
sub
shl
mov
rcrl
repnz
lea
fs
mov
xchg
clc
lret
pop
mov
adcb
sbb
or
sbb
clc
decl
or
mov
test
push
xchg
push
iret
mov
je
incl
inc
fst
xlat
mov
cmp
xchg
fcomip
adc
cmp
in
add
jecxz
js
incl
inc
int3
dec
push
mov
insb
les
inc
pop
mov
mov
sub
aam
fimuls
movsl
and
imul
xor
hlt
lcall
mov
sbb
adc
lods
outsl
xor
push
popf
sub
fildll
push
leave
cli
xchg
fildl
iret
mov
mov
mov
mov
push
adc
push
adc
hlt
fstpt
pop
inc
or
incl
jne
push
pop
mov
ljmp
aas
sti
cs
push
sub
fsubrp
ret
fs
fxch
and
jb
lods
leave
sbb
cmp
std
or
call
push
dec
mov
aad
and
sbb
test
inc
jmp
lock
jae
adc
xchg
stc
sbb
jb
mov
or
cmp
incl
pushl
adc
xchg
jo
pop
jne
sti
pop
les
lcall
ljmp
icebp
sbb
fistpll
or
or
push
cwtl
pushf
rolb
aaa
std
icebp
adc
ss
xor
xor
sub
jo
mov
insl
cli
or
pop
push
fdivrp
jg
jg
push
inc
sbb
pushf
lods
rcr
sbb
pop
cmp
enter
decl
jbe
xor
cmp
inc
or
pushf
insl
dec
xchg
rcrb
sbb
movsl
loope
mov
add
jno
shrl
popf
jle
test
jg
ja
call
cld
lret
lock
fiadds
adc
mov
and
out
dec
mov
repnz
inc
pop
out
sbb
std
cmp
jae
or
fcomip
mov
lods
out
pop
outsl
outsb
push
cmpb
sub
ss
popf
or
jmp
sar
sbb
dec
enter
inc
sub
and
sub
out
pop
loopne
call
add
and
les
mov
pop
popa
stos
push
lret
dec
cld
mov
sbb
or
inc
lcall
jg
adc
push
xchg
cwtl
dec
xor
sub
push
test
jmp
imul
pushl
jnp
aam
repnz
adc
mov
pop
sub
sbb
mov
jmp
dec
pop
pop
mov
pop
test
push
jb
sbb
cwtl
adc
xchg
aas
pusha
xchg
data16
sub
cltd
aad
inc
iret
out
cmp
jmp
and
mov
test
sbb
decl
stos
dec
mov
pop
clc
sbbb
sbb
addr16
lret
stos
mov
mov
stc
adc
ljmp
shll
test
out
dec
int
xchg
sbb
adc
jns
xchg
js
or
mov
jmp
pop
loopne
jg
fdivl
out
ljmp
jp
pushf
push
iret
cs
mov
incl
adc
popa
mov
imul
cmpb
scas
call
mov
fiaddl
dec
arpl
rcrl
adc
es
addr16
scas
xchg
push
mov
fdivs
push
ss
data16
mulb
push
mov
xchg
cltd
shrb
fs
push
and
inc
pushl
mov
xor
pop
cmp
call
dec
jo
ret
xor
pop
cs
pop
push
ficompl
aam
out
fbstp
loopne
decl
xor
sub
leave
jnp
cmp
das
push
test
sub
and
xchg
xchg
pop
popf
es
call
jg
aam
jl
outsb
ret
xlat
inc
mov
lcall
outsb
std
subl
rolb
lods
pop
ds
mov
int
cmpsl
sbb
incl
fwait
xor
push
xor
in
test
push
ljmp
lret
jns
jb
fstps
or
xor
cld
aas
jmp
cmpsb
data16
cmpsl
lods
repz
cmp
addr16
popa
cmp
icebp
pop
dec
inc
mov
jle
add
inc
insb
cmpsl
push
jns
lret
fsubr
aaa
gs
dec
leave
ja
outsl
clc
fcomip
mov
testb
in
inc
ja
test
or
mov
inc
sbb
adc
push
add
movsl
mov
loope
pop
comiss
aam
mov
xor
arpl
jmp
mov
sti
or
or
incl
sbb
push
cmpsl
mov
sbb
and
into
out
out
push
add
sbb
xor
inc
xor
test
sbb
stos
js
and
out
mov
decl
cmpb
mov
sbb
ljmp
insb
push
or
clc
bound
adc
mov
push
data16
mov
inc
sbbl
pop
pushl
lock
psubb
cmp
pop
add
fs
sti
dec
fmull
push
mov
and
ljmp
xchg
xchg
sbb
push
mov
inc
sbb
inc
stos
sarl
addr16
enter
jg
jmp
jo
xchg
cld
push
and
jns
cmpsl
adc
aad
xchg
fwait
popa
mov
mov
sub
inc
or
xchg
pop
cmp
mov
and
int3
decl
in
jl
mov
pop
and
andb
sub
jb
xor
mov
or
ljmp
jne
movl
cmp
xor
nop
cmpsb
out
jle
xchg
mov
fbld
add
bound
jmp
mov
out
jecxz
loop,pn
mov
popf
mov
decl
push
mov
cmpsl
xlat
test
add
jnp
jbe
push
pushl
lcall
jo
xchg
sub
movsb
rol
xchg
in
into
outsb
dec
call
jmp
mov
sahf
dec
pop
xchg
push
inc
and
in
mov
lds
xor
je
sahf
and
decl
shlb
inc
jns
sbb
adc
outsb
cmp
jp
fmuls
ret
jmp
sub
mov
outsl
test
outsb
add
mov
and
dec
add
cltd
ret
pushl
cmp
lahf
aaa
pop
out
lcall
ret
scas
sbb
mov
cmp
jg
dec
shll
push
jae
subb
and
sbb
push
aas
icebp
pop
dec
mov
ret
decl
push
jo
loop
enter
pop
jmp
arpl
cltd
pop
sahf
mov
stos
outsl
push
push
imul
ljmp
leave
cmp
mov
push
sub
mov
fisubl
mov
dec
lahf
dec
cmp
int
rcrl
pop
roll
stos
int3
jmp
xchg
and
adc
dec
pushl
call
lods
lret
movsl
sbb
xchg
loopne
stc
adc
fs
decl
cmp
inc
lods
nop
pop
jl
outsb
pop
pop
cltd
lcall
jno
adc
xchg
and
pushl
xchg
mov
mov
in
mov
scas
cli
mov
ss
jne
sbb
fisubrs
push
lock
call
push
call
or
inc
bound
or
lea
shll
decl
jnp
aad
push
xor
aaa
xor
mov
xchg
lea
fbstp
aam
lret
add
rclb
lcall
das
xor
in
aaa
dec
jp
mov
in
push
lcall
sub
sub
aad
xchg
stos
out
clc
hlt
lret
clc
jl
ss
sbb
lret
add
add
and
mov
push
cmp
fadds
push
jnp
fisttps
mov
or
mov
xor
cmp
out
aas
pop
lock
icebp
jae
adc
test
mov
sbb
cli
xor
mov
decl
inc
test
mov
and
rolb
mov
in
mov
cli
adc
aam
pop
xchg
sub
and
ljmp
outsl
lret
push
popa
xchg
cmp
ror
inc
or
push
sar
push
test
xor
clc
xchg
jbe
nop
cmp
sbb
lret
pop
inc
fs
push
or
ljmp
insb
aas
jecxz
add
out
popf
xlat
mov
adc
icebp
movsb
dec
lcall
xor
dec
sbb
lods
popf
outsl
enter
mov
enter
push
jns
jmp
or
jb
pop
test
outsb
outsl
sarb
sbb
push
cmp
rcl
movsb
mov
popf
or
out
inc
pop
dec
mov
jbe
jl
xchg
mov
sbb
mov
or
jmp
incl
jno
xor
and
les
push
fistpll
pushf
lret
dec
in
fsubrs
and
call
adc
inc
push
loope
xchg
scas
adc
out
enter
mov
mov
inc
repz
shll
inc
dec
loopne
insb
xor
cmp
jbe
inc
add
incl
rcll
gs
movsb
pop
and
stos
fwait
xor
xlat
mov
repz
xchg
xor
imul
popa
cmp
fists
repz
or
in
dec
push
jle
jne
loope
into
push
iret
pop
mov
arpl
push
negl
mov
inc
mov
stos
roll
add
jl
dec
loop
test
repz
mov
lock
int3
out
jg
sub
push
mov
daa
clc
lea
rorl
mov
or
orb
mov
movsb
sbb
loope
xchg
clc
aas
pop
and
lea
icebp
dec
adc
mov
test
inc
or
out
adc
ret
jmp
pop
sahf
pop
adc
inc
mov
xchg
arpl
out
and
jne
xchg
mov
ret
pushf
lea
cmp
movsl
pusha
in
and
call
dec
adc
or
dec
out
outsb
xor
popf
aaa
int3
sbb
movsl
int3
or
cmp
cli
jl
sub
test
jo
cli
push
or
les
sarb
hlt
mov
mov
add
idiv
jg
jmp
pavgw
movsl
inc
loope
cld
inc
hlt
jmp
cltd
test
incl
or
test
scas
jp
mov
or
jb
setp
jecxz
ret
test
mov
pop
pop
jno
rcrl
cmp
in
jp
in
imul
or
leave
addb
jecxz
out
sbb
mov
cld
repnz
inc
and
fistl
xchg
or
xchg
sub
pushl
add
mov
comiss
mov
cmp
bound
ds
mov
cmpsb
call
fs
pop
xchg
add
rorl
jne
adc
push
lcall
dec
clc
call
pop
int
in
adc
rol
xor
jb,pn
stc
sbb
incl
and
mov
push
jg
pop
test
xchg
dec
das
sub
sbb
js
decl
insl
clc
negl
scas
adcb
mov
mov
xchg
cs
lods
push
scas
push
add
xor
icebp
movsl
test
insl
jb
add
or
push
mov
jge
mov
pop
dec
add
aad
xchg
repnz
das
or
bound
or
sti
nop
sbbl
sbb
jne
sub
pop
aas
mov
test
pushf
imul
mov
daa
sbb
loop
incl
sahf
push
sbb
jbe
aaa
ret
icebp
mov
daa
mov
mov
out
mov
inc
outsb
mov
cmpl
ja
aas
ljmp
inc
ret
cmc
mov
inc
lods
xchg
push
pop
or
and
das
movsb
dec
mov
push
pop
scas
jmp
push
cmp
aaa
push
ds
ja
scas
push
icebp
cmp
mov
in
pop
jmp
decl
faddl
xchg
adc
scas
je
fcoms
jmp
fwait
mov
pushl
std
inc
popa
icebp
loopne
and
push
dec
jge
aad
lods
arpl
dec
mov
cli
fs
imul
and
push
jg
push
mov
xchg
das
sub
decl
test
test
pop
mov
add
dec
aas
imul
nop
es
jecxz
inc
mov
stc
cmpsb
bound
lds
jg
out
les
cmp
xchg
mov
hlt
inc
mov
sbb
in
push
cmp
cli
lcall
cmpb
cmpsl
xor
lcall
call
push
in
adc
dec
push
and
pop
or
insb
or
gs
int
sub
loop
cs
clc
fsubs
and
ja
xor
rolb
pushf
xchg
psllw
mov
sub
lds
rol
cmp
xchg
ret
push
fwait
inc
cmp
pop
ret
add
cld
mov
movsl
iret
mov
push
mov
push
stos
sub
push
loopne
lcall
mov
outsl
fcompl
adc
or
popf
jg
xchg
repz
dec
jecxz
and
lcall
testl
cwtl
in
adc
imul
imul
sub
add
push
jg
movsb
mov
lcall
in
shll
js
ja
imul
mov
lea
inc
setl
mov
sub
cvtdq2ps
call
ljmp
cmp
push
sti
cmp
sbb
sub
mov
mov
lea
movsl
jno
ja
decl
fistl
or
into
jb
xchg
adc
mov
insl
loop
jmp
xchg
cmp
xor
mov
and
cmp
insl
adc
xchg
inc
and
cmpsl
jp
icebp
cmpsb
mov
scas
mov
mov
icebp
xchg
aaa
scas
xor
sar
fists
imulb
lea
jo
add
gs
push
imul
jg
jle
frstor
push
mov
mov
mov
lahf
incl
lea
ds
dec
dec
loope
decl
test
or
sub
repnz
fbld
xchg
sbb
jbe
mov
cmp
dec
insl
xlat
ret
ljmp
hlt
jmp
scas
add
cmpsb
movsl
insl
add
add
int
lcall
xor
test
sub
out
dec
mov
and
popf
std
xchg
repz
in
xchg
pop
xchg
in
mov
ss
ljmp
dec
mov
lods
jne
dec
pop
adc
dec
mov
aaa
mov
dec
cld
stos
mov
or
jp
add
add
xchg
dec
xor
mov
ret
lcall
push
cmpsb
push
cwtl
rcl
dec
sbb
pusha
jecxz
ficoms
js
fdivrl
pop
mov
stos
in
outsl
mov
cltd
movsl
hlt
sub
push
cmp
mov
xchg
out
xor
mov
or
push
in
ja
adc
lds
cli
sbb
rol
inc
mov
pushl
sahf
dec
int
push
mov
scas
lock
and
xchg
mov
sarb
push
sbb
ljmp
jg
cmc
adc
pop
or
ss
fnstcw
in
arpl
lret
dec
stc
outsl
xlat
scas
jg
jmp
fistpll
xchg
stos
loopne
xchg
fwait
push
adc
mov
pop
outsb
jmp
sbb
cmpsl
jo
lret
ljmp
mov
jg
push
push
mov
cmp
incl
inc
push
jg
lret
roll
mov
jb
sub
mov
xor
ljmp
xor
jge
jne
jle
mov
sub
sbb
loop
popf
lods
lods
decl
sbb
sbb
xchg
lahf
adc
iret
addr16
out
fdivrs
jge
adc
lock
xor
pop
mov
jne
ljmp
and
jg
or
xor
mov
inc
es
decl
and
sbb
push
dec
dec
popf
iret
sar
adc
sub
xor
pushl
fs
mov
test
add
addr16
push
aam
and
cwtl
xchg
jmp
jg
test
aad
and
and
mov
arpl
mov
sbb
cs
cli
outsb
loope
rorl
ss
jae
subl
push
stos
sbb
imul
xlat
decl
jo
cmp
jbe
xor
add
cmp
push
cld
ljmp
sbb
mov
iret
loope
aam
lea
jp
les
call
push
mov
in
pop
push
mov
mov
icebp
enter
mov
insb
xor
call
mov
mov
ret
sub
enter
int3
lret
inc
insb
sbb
jb
into
cmc
test
adc
xor
xchg
leave
test
inc
clc
imul
add
xchg
scas
lea
jae
mov
jbe
cmp
xor
scas
cli
incl
xor
xchg
mov
xchg
lcall
mov
fstpt
sbb
addr16
test
xchg
aam
jmp
xor
push
jne
divb
cli
mov
data16
mov
stos
mov
or
jecxz
test
pusha
mov
aam
fcomip
jmp
and
sbb
mov
repnz
stos
jmp
cwtl
xchg
push
insb
jnp
sub
pop
stc
fidivl
addr16
lock
cld
cltd
addl
mov
adc
call
mov
fdivs
cmp
icebp
js
jno
or
les
mov
adc
xor
mov
pop
in
hlt
insb
negl
push
or
sub
cmp
imul
add
cmp
cmp
into
push
cmp
or
mov
ds
cmp
pop
addr16
xchg
decl
incb
pop
adc
inc
arpl
ljmp
push
or
adc
call
out
ss
dec
pushf
and
push
xchg
xchg
subl
loope
insl
adcl
push
adc
es
fwait
loope
mov
fisttpll
jecxz
inc
push
jns
push
call
lret
adc
cmc
mov
in
jmp
inc
dec
enter
jg
lret
andl
jp
xlat
and
cld
xor
jp
mov
cmpsb
test
dec
daa
sbb
decl
adc
push
cmp
jo
test
scas
mov
adc
outsb
repz
or
icebp
cmp
pop
push
ret
js
ljmp
sar
dec
ss
push
push
jl
pop
imulb
and
rorl
pop
add
sbb
adc
ret
ja
repz
pop
jb
pushl
ret
out
inc
cmpsb
cmp
xor
js
je
xor
and
ljmp
push
push
mov
push
in
les
std
and
adc
jns
mov
pcmpeqw
xlat
inc
inc
scas
jg
push
sub
ljmp
and
sub
ret
nop
iret
dec
mov
movl
mov
xor
mov
jne
inc
lock
cmp
push
pop
mov
call
inc
in
xor
pop
ret
pop
lock
lcall
call
das
inc
cmp
dec
jae
std
jmp
dec
push
test
movsl
je
and
ljmp
js
es
xchg
pop
int3
adc
pop
sahf
hlt
out
in
cmp
jmp
inc
stos
scas
psubsb
xchg
ljmp
shr
ja
push
std
and
xchg
stc
pop
dec
out
pop
mov
sbb
std
ljmp
lods
sti
mov
shr
mov
sbb
xlat
push
sar
jmp
inc
lods
add
xchg
mov
dec
cld
adcb
jg,pt
adc
ror
and
cmc
arpl
xchg
mov
arpl
adc
int3
add
cmp
mov
inc
xchg
dec
idivl
lret
push
dec
xlat
fdivrl
and
mov
std
fisubrs
jnp
push
sub
js
inc
leave
fwait
xor
bound
pop
jo
jg
loope
addb
cmpsb
jp
mov
jb
mov
inc
cwtl
fisubrs
call
sub
pop
mov
lods
sbb
adc
mov
cmpsb
xlat
mov
cli
outsl
mov
sbb
dec
repz
mov
call
lcall
sub
in
pop
cmc
iret
adc
nop
and
mov
jg
std
jmp
imul
repz
mov
cmp
lret
out
clc
inc
jae
mov
call
dec
jp
leave
call
incl
xchg
icebp
dec
inc
nop
mov
fs
es
sbbl
inc
lret
ss
out
dec
call
push
jmp
ficompl
leave
mov
loope
mov
mov
sbb
dec
push
incl
or
inc
inc
aaa
ror
jmp
jo
add
mov
adc
loopne
fs
jg
lcall
sub
push
xor
push
pop
jl
aaa
jecxz
cmpsb
dec
fisttps
call
les
cmpsl
xchg
push
addr16
jle
scas
xor
adc
push
inc
mov
fldenv
fprem
xchg
push
call
mov
loopne
in
adc
out
xchg
inc
mov
insl
pop
dec
mov
sahf
jbe
mov
push
in
mov
decl
js
jb
fwait
xor
dec
or
scas
sti
loopne
mov
push
test
jg
call
out
lock
xchg
scas
shrl
adc
scas
adc
push
push
sub
dec
xlat
mov
adc
gs
into
sbb
add
add
incl
cli
fisubrl
out
loop
jnp
lea
inc
lock
inc
pop
ljmp
and
sub
clc
insl
in
aad
and
leave
lods
or
insb
ljmp
cs
or
lock
push
fs
mov
sub
lret
fsub
cmp
call
or
xchg
aam
lds
xlat
mov
in
mov
test
scas
mov
test
mov
inc
sbb
ljmp
inc
push
jb
rolb
xor
mov
movsb
jl
jo
loop
mov
inc
sar
jbe
sub
mov
or
in
inc
push
xchg
mov
mov
aaa
xor
xchg
push
mov
out
sub
mov
mov
shrl
push
jl
mov
imul
aaa
adc
int3
pop
mov
jecxz
push
adc
mov
mov
fsubrl
mov
mov
and
add
mov
dec
aaa
mov
in
or
sub
je
mov
and
ss
subb
mov
dec
dec
call
outsb
jae
dec
sbb
push
xchg
mov
in
pop
pop
xchg
std
mov
ja
aam
ja
fs
mov
dec
lea
cli
lcall
lods
sahf
mov
test
call
push
daa
daa
stos
lret
or
imul
lcall
add
mov
stos
mov
jb
notl
xchg
adc
pushl
je
dec
daa
sub
xchg
sbb
lret
mov
push
pop
dec
incl
sbb
mov
sbb
jae
or
cltd
pop
rcl
mov
decl
loope
dec
inc
insl
xchg
lods
mov
mov
or
xchg
mov
popa
sar
xor
fsts
jge
mov
stc
inc
aam
mov
cwtl
jo
fdivp
xor
mov
loop
sbb
jg
ret
xor
xchg
idivl
pop
mov
icebp
icebp
cwtl
xor
xchg
testb
nop
mov
lahf
fwait
inc
xor
or
gs
dec
dec
sahf
push
or
fdivrl
rol
inc
or
dec
outsl
pushl
fdivrl
inc
rorb
fsubs
test
mov
filds
cpuid
test
shl
adcb
sbb
ljmp
loopne
adc
inc
lcall
or
daa
push
call
loopne
lcall
sub
xchg
pop
cmp
add
push
lock
lds
cmp
mulb
xchg
mov
cwtl
rcr
jo
jge
sbb
jecxz
stos
and
inc
jmp
data16
imul
lds
stc
cmp
fisttpl
out
call
decl
or
adc
ret
mov
out
and
clc
fnstenv
mov
jg
into
scas
ljmp
inc
in
push
out
sahf
push
mov
ljmp
aas
lcall
jg
out
outsl
mov
adc
cmp
jns
jmp
sub
xor
sub
dec
cmp
mov
das
nop
or
xor
rol
nop
in
int3
shll
xchg
xor
das
jnp
incl
in
cmpsb
mov
repz
popf
in
adc
out
in
pushl
es
sbb
fsts
out
mov
mov
and
out
filds
imul
push
sub
lcall
pushf
pop
pop
clc
jl
mov
xchg
lods
imul
lods
incl
or
xchg
pop
lret
test
pop
nop
loopne
ret
xor
pop
shl
mov
je
xchg
int
ljmp
xor
les
pop
repz
inc
gs
test
mov
sbb
bound
stc
mov
repz
into
sub
jno
push
xor
xchg
adc
out
dec
fbstp
repz
fimull
in
js
mov
jo
add
sbb
stos
loopne
and
add
push
pushf
jae
push
fcmovnb
add
test
fistpl
cmp
cmpsl
push
fs
dec
inc
sbb
mov
fwait
mov
cmpsl
sbb
pushl
mov
or
test
mov
aaa
ss
mov
je
mov
jg
cld
mov
adc
into
and
sub
addr16
jp
pop
mov
add
inc
fistl
sbb
push
fnstsw
in
xor
sub
lcall
dec
nop
xchg
lds
mov
shll
bound
cmp
lock
insb
cmc
xchg
jg
sahf
leave
xchg
je
pop
loope
fnsave
mov
dec
in
data16
cmp
in
pop
mov
arpl
mov
loop
in
jmp
outsb
inc
adc
mov
jle
inc
pop
mov
push
inc
jb
or
je
mov
call
mov
xchg
push
rorb
scas
aam
xor
je
das
pushf
or
lods
in
test
xchg
fcoml
incl
shr
and
jb
dec
pop
incl
insb
push
lods
push
in
popa
out
loopne
pushl
push
iret
jne
sub
pushl
loop
and
in
subps
xchg
call
loopne
jb
inc
mov
push
push
mov
sti
roll
mov
jp
push
jbe
mov
jbe
adc
or
dec
clc
or
test
inc
xor
inc
test
sub
aas
loopne
push
jle
sub
push
decl
mulb
movsb
push
mov
pop
xlat
sub
and
xchg
sti
scas
insl
mov
jmp
cmp
iret
mov
xchg
push
dec
rcl
jbe
push
pushl
lods
in
lea
int3
or
scas
stos
rcrb
lods
jae
dec
fmull
mov
push
push
sbb
pop
push
pop
pushf
mov
gs
imul
cmp
cltd
rcll
lcall
pushl
clc
xchg
mov
mov
lret
call
dec
pop
xchg
int
scas
inc
in
ljmp
or
cmp
or
xor
jns
arpl
xor
jg
cwtl
les
test
ljmp
movsb
mov
mov
mov
mov
loopne
cld
fmul
jecxz
movd
divb
and
mov
and
cltd
mov
jno
testl
mov
sub
lcall
lock
ja
test
ret
subb
clc
dec
pop
cmp
push
add
pushl
xchg
fnstcw
ss
mov
movsl
mov
rorl
pop
xor
mov
or
test
cli
add
lods
xchg
xor
pushl
sbb
and
insl
and
xchg
cmp
mov
dec
cmpsb
sub
dec
arpl
xchg
nop
sub
adc
outsl
inc
push
sbbb
sahf
imul
push
movsb
int
push
out
cmp
ja
decl
test
cld
dec
fcoms
loopne
sbb
cmpsl
cmp
stc
jne
jns
ljmp
dec
leave
adc
stos
mov
jbe
sbb
adc
adc
fwait
add
out
add
shlb
incl
scas
nop
orl
push
dec
push
mov
inc
mov
dec
and
std
std
xor
out
adc
mov
rcl
std
arpl
xor
stos
jg
sbb
lret
pop
insb
std
adc
pop
and
popf
iret
xchg
add
pop
adc
decl
mov
xor
jae
xchg
cmc
shrb
jmp
adc
cmpsb
into
jle
enter
out
ds
fstpt
aaa
idiv
and
loope
jmp
cmp
jecxz
ljmp
hlt
je
inc
mov
sar
mov
js
inc
cmp
mov
fwait
cmp
jmp
dec
pop
lcall
jo
pop
jne
add
cs
decl
push
addr16
push
cmp
andb
rcl
decl
out
push
outsb
int3
mov
xlat
dec
xchg
adcl
mov
or
pusha
fs
push
ja
frstor
jmp
mov
into
mov
xchg
mov
imul
js
and
jg
sub
leave
outsl
and
dec
adc
mov
addr16
call
push
xchg
xor
rorb
inc
add
or
stos
lcall
dec
loopne
cmp
push
jae
repnz
jmp
fs
fld1
dec
clc
ds
sbb
fiadds
ret
sbb
cli
push
and
adc
jmp
rolb
mov
ljmp
xchg
cmp
jno,pt
iret
adc
jmp
js
test
mov
lds
fistpl
imul
gs
jo
push
or
jecxz
pop
cmp
notl
xor
cs
lcall
cmp
pushw
into
mov
jge
int
xchg
gs
cmpsb
inc
cmpsb
icebp
gs
test
push
inc
jmp
insb
dec
mov
or
fistpl
jo
xlat
nop
push
inc
or
push
movsb
mov
lcall
test
repz
fwait
pop
sub
pop
pop
inc
pusha
std
test
imul
push
loopne
sahf
std
or
call
stc
push
enter
jl
test
mov
jmp
inc
movsb
push
js
push
imul
dec
outsl
xor
mov
cwtl
mov
xchg
fs
push
xor
inc
cmp
or
xchg
xor
shlb
popa
pop
sub
jmp
test
gs
xor
ret
dec
sbb
lret
cmpl
inc
sub
mov
bound
mov
jns
mov
sahf
in
and
and
fbstp
test
outsl
stc
adc
xor
mov
mov
or
jb
gs
fstps
aam
inc
enter
xor
stc
sbbb
mov
inc
mov
fbstp
out
mov
mov
ret
cmp
dec
movsl
or
call
adc
mov
lret
stc
jp
inc
dec
add
js
je
and
sbb
lret
cmp
xor
adc
adc
call
cld
out
lahf
pop
mov
call
movsb
mov
loop
idiv
in
mov
scas
js
mov
popf
push
pop
push
sahf
jecxz
lcall
cltd
pop
hlt
js
add
pushf
mov
testb
sub
jg
mov
sbb
cmc
fprem
push
mov
xchg
dec
aam
mov
ror
mov
insb
lods
push
xchg
ds
aam
jg
das
out
gs
lret
repz
in
sbb
add
stc
loope
sub
sbb
mov
add
inc
pop
xlat
aaa
ds
cmp
cs
in
fdivr
ljmp
push
in
arpl
je
xchg
sbb
loope
add
and
into
das
jmp
ja
sub
cmpsb
xor
xchg
cmp
push
aas
xor
sub
mov
sbb
mov
pop
sbbl
std
inc
inc
outsb
addb
std
xchg
push
enter
jbe
int3
adc
jge
jmp
adc
mov
xor
xor
adc
cmc
dec
jo
add
jno
orl
jg
jns
mov
data16
movsl
push
repz
mov
ljmp
cs
jne
jae
cmc
das
icebp
push
sbb
int3
sub
loopne
mov
or
clc
decl
xchg
dec
mov
adc
push
subb
pushl
cmp
iret
xchg
fsubrs
js
sbb
fisubrs
call
cli
ljmp
and
test
pusha
pop
mov
imul
mov
push
fcmovnbe
decl
lock
in
jne
jae
push
scas
insl
cld
lahf
adc
sbb
inc
pop
dec
movsl
lcall
inc
mov
add
out
or
xchg
in
stos
xor
push
inc
rcr
and
or
mov
or
scas
call
or
and
fldcw
xor
jmp
icebp
fdivrs
push
push
jecxz
into
push
adc
cmp
jae
mov
or
mov
call
mov
div
push
push
dec
adc
aaa
test
inc
xchg
xchg
mov
mov
jmp
int
cmpsl
add
jbe
in
orl
xlat
mov
mov
cltd
push
or
pop
aad
test
add
ljmp
sub
mov
push
cli
rcl
addr16
xor
add
adc
adc
xchg
cmp
ljmp
pop
xor
mov
mov
in
jmp
movsb
mov
rorl
enter
sub
orb
pop
mov
xor
stos
xor
cmc
jmp
inc
inc
push
cld
inc
loop
decl
sub
pushf
push
sti
pop
loope
mov
pop
ljmp
jecxz
outsb
xchg
dec
xor
out
lds
hlt
ds
insl
xor
sar
jmp
mov
push
mov
push
xchg
jmp
je
in
ljmp
movsb
loope
xorl
lods
arpl
cmp
and
xchg
or
jmp
ror
pushf
pop
cmpsb
push
popf
sbb
cmp
xor
dec
mov
push
ljmp
mov
jno
push
les
inc
ror
sbb
pushf
dec
decl
lock
push
out
push
add
fwait
cmp
or
cmp
pusha
es
ljmp
mov
outsl
adc
pop
lea
dec
in
movsl
add
sbb
or
divb
mov
jmp
inc
xchg
sbb
sbb
or
ja
cltd
movsl
jno
insb
push
jecxz
xchg
addl
imul
decl
movsb
mov
push
mov
addr16
aas
dec
ljmp
push
lret
cld
or
popa
pusha
push
mov
push
mov
imul
mov
cmp
mov
jns
ret
insl
xchg
mov
add
das
jmp
lods
leave
lcall
mov
push
in
xchg
mov
jbe
cmpsb
leave
lock
mov
pop
xorb
pushl
pop
fnsave
cmp
out
nop
or
xchg
push
jp
pop
inc
push
stos
dec
sbb
mov
push
pop
nop
sbb
adc
rolb
xchg
mov
mov
sarl
xchg
int3
scas
outsb
mov
push
popf
rcl
push
cmp
xchg
leave
xchg
jg
mov
or
aaa
fdivrl
or
fst
cmp
xchg
enter
incl
cmp
jae
add
inc
enter
pop
popa
mov
dec
mov
js
aas
enter
cli
ljmp
mov
jle
jg
lahf
fistl
dec
xchg
add
mov
insb
ss
addl
js
adcb
dec
ret
push
and
sbb
or
imul
mov
int
dec
leave
mov
out
loope
xbegin
mov
or
sarb
movsl
or
ret
ror
mov
sti
or
jno
dec
gs
adc
or
test
mov
movsb
gs
imul
ljmp
inc
mov
or
cltd
outsl
cmpsl
or
insb
pushf
xchg
mov
arpl
or
ljmp
cmp
xchg
jl
mov
shl
push
adc
out
or
push
aaa
movswl
xor
mov
dec
lods
pop
cmpsl
lods
or
xchg
and
in
fdivs
int
arpl
shrb
and
aaa
cltd
shl
hlt
or
sbb
pop
dec
ljmp
jbe
inc
add
repz
jae
xchg
cltd
adc
jl
dec
lock
adc
lcall
cmp
sbb
lret
xchg
mov
test
ud0
std
and
repz
inc
stos
pushl
or
pop
cmpsl
mov
arpl
xorl
ljmp
fucomp
addr16
jecxz
push
cmp
imul
in
dec
xor
mov
sub
incl
out
inc
sbb
dec
pop
nop
jmp
ljmp
and
in
or
rcr
mov
jecxz
sbb
popf
cmc
mov
pop
lret
incl
test
das
lret
fimuls
repnz
ljmp
sbb
test
adc
jbe
and
push
pop
push
in
pop
movl
mov
push
bound
repnz
adc
test
jl
xor
and
cld
jbe
cmp
pop
jecxz
lock
mov
push
fisttpll
push
dec
sbbb
insl
add
in
mov
push
subl
pop
stos
sbb
iret
rorl
cmp
and
cmpsb
cmp
call
in
adc
aad
mov
loopne
xlat
addb
cltd
mov
mov
sub
mov
cmp
mov
and
add
negl
cmp
in
ljmp
cmpsb
xor
or
or
lret
sub
idiv
fbstp
xchg
xor
lock
aaa
sahf
mov
xchg
f2xm1
jnp
push
fildl
jp
popf
jb
popa
jno
jmp
mov
xchg
adc
ljmp
loop
pop
insb
dec
xchg
sti
leave
push
sbb
sarl
push
mov
ja
cmp
mov
stc
push
lds
loop
loop
sub
xor
jb
imul
imul
or
ljmp
dec
cs
inc
test
jmp
repz
rcrl
dec
sub
in
nop
emms
lahf
jae
push
sbb
leave
mov
or
or
cmp
fisttps
dec
imul
sar
call
pop
imul
and
adc
aas
scas
dec
pop
add
jg
andb
call
test
push
cmp
xchg
adc
mov
jmp
sbb
sub
mov
push
mov
xchg
mov
lods
clc
in
xor
lods
ljmp
fadds
decl
jg
jo
push
mov
ds
dec
addr16
and
jp
pop
shrl
bound
ljmp
and
mov
xchg
sbb
mov
pop
inc
dec
dec
sbb
stc
cmc
aas
in
lds
cmp
dec
sbb
sub
movsb
inc
data16
dec
data16
sub
cmp
loop
cwtl
push
insb
lock
incl
or
lods
push
sub
aad
jb
mull
call
cwtl
cmp
ljmp
sub
sti
or
dec
popa
hlt
sbbl
sti
in
push
and
pop
in
xor
decl
dec
imul
sbb
sub
bound
inc
lock
dec
lahf
test
notb
jb
push
std
fnstsw
movsb
pop
sub
mov
push
sub
and
cmovge
lcall
lahf
mov
and
popf
adc
dec
push
add
sahf
nop
lock
imul
cld
add
int
leave
lret
je
lcall
mov
test
mov
and
cs
arpl
sub
pop
xor
jmp
sbb
sub
adc
pop
mov
mov
ljmp
jmp
inc
sbb
jg
std
arpl
add
int3
pop
inc
add
negl
jmp
add
jae
or
dec
sbb
fbld
inc
ret
cwtl
cmp
ss
push
stc
lcall
rclb
in
jle
outsb
sbb
pushf
push
push
lods
mov
or
add
jmp
dec
pop
test
add
cwtl
jmp
fidivrs
loope
mov
lret
ljmp
mov
sub
dec
inc
lea
shll
pop
icebp
sbb
mov
mov
mov
popa
into
and
push
imul
mov
xchg
pushf
and
aas
mov
xchg
rcrl
pusha
or
and
pushl
mov
jno,pt
mov
shlb
gs
jg
xor
data16
pushl
stos
sbb
lret
push
sbbb
cmp
lcall
mov
sub
call
inc
push
cmc
cmc
jb
rcrl
out
loope
fsubp
imul
loop
inc
mov
fistpll
mov
add
cltd
mov
into
ss
stos
inc
fs
fnstenv
popf
push
in
sarl
cli
mov
incl
rcrb
mov
sbb
xchg
inc
or
jno
jae
pop
flds
mov
xor
dec
push
int3
lods
enter
jl
aas
mov
loop
push
icebp
lock
jg
or
adc
sub
fsubs
or
mov
call
les
cmpsb
ja
fmul
sub
mov
lret
out
enter
mov
insb
pushl
cld
pushf
mov
or
lods
in
idiv
stc
fwait
mov
aas
and
sub
mov
jge
pop
fnstcw
inc
push
inc
pop
cmpsl
push
arpl
mov
or
lahf
push
lcall
jge
bound
ljmp
pop
dec
imul
pop
inc
scas
jno
dec
adc
sar
sbbb
lcall
ret
test
sub
lcall
sbbl
xlat
lcall
cmp
mov
inc
rorl
scas
divl
into
xchg
xor
mov
out
mov
add
rorl
movsb
in
data16
call
mov
ljmp
cmp
es
enter
and
jb
test
out
and
imul
std
lcall
aam
movb
push
test
dec
movsb
or
mov
fsubs
inc
loop
test
clc
popf
jmp
ds
sti
or
inc
out
pop
dec
sbb
sub
adc
or
call
in
scas
aad
in
push
jbe
aas
mov
cmp
xchg
fwait
stc
jo
pop
outsl
pushl
pop
sub
or
mov
jmp
push
movsb
sub
imul
fcomip
pop
mov
or
mov
in
pop
je
or
mov
fistpll
scas
push
incb
stc
pop
sub
rorl
std
sub
ljmp
jmp
sub
call
xor
sbb
or
sti
push
or
inc
sbb
test
push
cld
ljmp
fidivrl
test
dec
mov
jp
push
out
sub
popf
daa
and
xchg
inc
jmp
adc
mov
mov
test
mov
stos
mov
testl
clc
call
push
stos
rcrl
xchg
dec
jge
ljmp
lcall
add
cmpsb
daa
push
insb
lods
push
sbb
pop
and
adc
aaa
in
shrl
dec
jne
leave
cmc
sbb
add
fwait
inc
sub
xchg
stos
pushf
cmp
aas
lcall
mov
lcall
leave
aam
inc
fisttps
dec
clc
jmp
adc
shlb
mov
rorl
stos
mov
test
ss
cmp
in
xor
mov
les
sub
jmp
or
xchg
and
add
jg
fisubrs
test
pop
jne
mov
mov
cmp
sahf
fldenv
xor
call
je
data16
pop
xchg
and
outsb
pushf
push
mov
and
pop
jno
roll
movsl
xor
ljmp
cli
addb
dec
iret
pop
test
popa
xchg
in
popa
or
faddl
mov
decl
orl
or
push
leave
mov
cmp
add
mov
clc
push
push
stos
mov
out
ret
outsl
mov
cld
out
arpl
cli
cmp
incl
xchg
push
cmp
xor
or
rcr
jno
and
pushf
push
mov
inc
jge
decl
sub
jmp
xor
cmpsl
xor
popa
aad
pop
dec
push
jg
mov
jg
mov
ljmp
mov
add
lcall
out
pop
test
jnp
in
adc
insl
cs
push
and
call
push
repnz
xchg
lock
or
jno
cmp
pop
mov
mov
addr16
push
es
fs
cmp
scas
jo
adc
call
xor
adc
decl
or
push
sbb
repnz
add
pushl
or
shrb
mov
pop
sbb
sbb
mov
in
imul
xor
xor
mov
stc
dec
xlat
add
fiaddl
or
aam
mov
pop
or
and
pop
test
outsl
adc
mov
and
lods
xchg
cmp
pop
lret
xor
decl
aaa
cmp
mov
fsub
and
aam
and
pop
mov
mov
jg
mov
mov
ficoml
mov
dec
add
jb
daa
push
sub
decl
cmc
js
jnp
outsl
out
and
xchg
fdivr
and
fnclex
out
ret
cmp
xchg
test
ret
arpl
push
push
ja
add
xchg
sbb
in
inc
pop
in
ja
sub
ljmp
int
push
bound
insb
lock
and
add
cli
sbb
test
sub
stc
stos
or
call
pop
repnz
loopne
and
dec
and
cmp
jp
push
aaa
sub
or
aad
ret
inc
ds
aad
test
cli
jle
pushl
mov
loopne
loopne
shr
arpl
jp
and
gs
mov
imul
idivb
inc
push
xchg
pop
ss
and
movsb
pop
incl
cmpsl
ret
sar
sbb
jl
cwtl
jbe
add
inc
stos
jne
mov
imul
ljmp
jl
addr16
cwtl
pop
idivb
mov
xchg
test
jg
lahf
jb
cli
xor
pop
inc
xchg
xchg
mov
inc
lea
pop
cmp
pop
mov
jge
lods
mov
and
movb
push
pop
cltd
ret
or
decl
sub
xor
iret
jp
add
pusha
add
and
call
stc
push
adc
xor
push
xor
mov
cmp
and
jnp
mov
ljmp
pop
aad
sub
mov
pushf
sbb
mov
jne
add
addb
call
cli
pushl
fnsave
ljmp
sbb
and
loopne
bound
cmp
and
push
cwtl
cmc
dec
jp
pop
sarb
xor
outsb
scas
adc
sub
ja
mov
push
loopne
and
lea
shrb
imul
inc
and
iret
sub
repz
out
push
dec
add
xor
test
negl
ret
ja
gs
inc
sbb
and
lods
repz
jl
jecxz
scas
or
xchg
mov
mov
xlat
mov
aaa
incl
pusha
fdivrl
jne
lcall
inc
lea
cmp
inc
xor
iret
aam
enter
xchg
loope
sbbl
mov
loope
enter
xor
ljmp
xchg
cld
sti
jnp
sbb
dec
push
sbb
mov
push
xchg
sbb
pop
xchg
gs
std
mov
pushl
jb
pop
jecxz
jge
push
pop
fcoms
das
mov
mov
xlat
add
std
mov
mov
or
popa
jne
jne
pushf
pushl
adc
jle
adc
or
icebp
je
adc
pop
fdivrs
mov
clc
pushl
mov
xchg
imul
inc
mov
imul
in
pop
movsl
and
scas
dec
add
cmpsb
dec
ss
push
icebp
int3
push
dec
cmp
add
or
int
out
xor
inc
and
dec
ljmp
xor
push
mov
lret
xor
dec
xor
enter
scas
roll
pop
dec
pop
into
or
mov
and
call
cwtl
inc
inc
imul
xchg
push
dec
cmp
mov
in
lret
jg
add
lcall
es
mov
dec
addl
aad
dec
lahf
xchg
into
or
frstor
repz
adc
mov
jnp
cmp
jmp
sbb
fidivs
jg
test
cmpsb
outsl
mov
xlat
into
sbb
sbb
call
xor
jecxz
jmp
fwait
ljmp
push
rclb
popf
aas
orb
sbb
cli
mov
xor
add
aad
pop
mov
and
xlat
in
in
inc
es
mov
mov
das
lea
leave
xchg
cmp
adc
jno
jge
push
rclb
decl
insl
imul
sarl
inc
xchg
add
or
push
cmp
scas
and
dec
mov
jne
lret
pop
test
xchg
push
stos
lds
push
mov
lods
incl
data16
mov
xchg
add
mov
imull
lret
dec
jno
lock
jl
outsl
rcrl
cmpsl
jno
adc
imul
loopne
mov
or
sbb
ljmp
and
jo
rorb
sti
das
dec
cmpb
adc
jl
mov
inc
cmp
xor
inc
jbe
faddl
insb
pop
mov
jb
repnz
mov
mov
cmp
fistpll
inc
push
jb
jmp
mov
iret
push
and
cmp
inc
loop
lcall
ljmp
fsubrs
or
outsb
jo
cmp
mov
ljmp
mov
and
shl
in
movsb
lahf
fxch
adc
test
xchg
dec
insl
jp
or
jmp
dec
sar
jl
arpl
notl
xor
rolb
pop
in
xor
and
adc
push
sar
incl
sarl
orl
sbb
xchg
mov
imul
mov
or
ljmp
mov
imul
lret
dec
push
out
add
mov
es
in
and
insl
fs
shll
popa
call
incl
movsb
fcmovu
xchg
xchg
popf
mov
adc
cmp
pushf
loope
ljmp
fcompl
call
add
add
xchg
jb
les
mov
xchg
push
pop
rcll
xor
push
jbe
or
into
nop
mov
inc
test
fdivs
jp
mov
les
add
lret
cmp
ljmp
out
push
add
incl
addr16
loopne
adc
jmp
mov
jmp
jmp
rcll
adc
lcall
or
in
hlt
cmp
mov
add
lods
sub
push
mov
call
push
mov
pop
dec
fiadds
roll
jl
mov
stos
sub
popf
mov
jb
leave
mov
mov
arpl
inc
add
int3
pop
push
xchg
push
dec
xchg
xchg
xchg
es
dec
mov
inc
sarl
push
mov
mov
xor
sub
call
ds
aas
pop
sbb
jmp
ja
cmp
loope
nop
lods
inc
jb
push
fbld
adc
inc
test
dec
inc
cmp
lcall
mov
inc
int3
jne
in
push
cmp
jne
xlat
push
ljmp
das
movsl
aas
ret
lcall
out
in
inc
fdivrs
repz
insl
sub
data16
dec
pop
mov
jno
in
adc
rcr
fisubl
pop
scas
sbb
aam
add
or
inc
xor
ljmp
call
rorl
or
in
ds
cmp
ret
push
xchg
call
cld
call
gs
xor
mov
adcb
sub
pop
enter
add
cmp
push
jmp
inc
sub
movsl
jnp
pop
or
mov
jb
push
loop
pop
stc
push
mov
lret
popa
mov
jmp
ret
sarb
jbe
xchg
jae
xchg
jnp
lds
jae
ss
lcall
inc
jae
std
fadds
add
inc
or
insb
mov
das
inc
pop
es
pushf
call
std
mov
cmc
jb
fldl
jnp
loope
jb
in
fsubrs
mov
iret
aam
ljmp
adcl
push
in
scas
or
mov
add
js
adc
and
jg
dec
insl
mov
mov
stos
sub
cltd
jns
and
pcmpeqb
adc
pop
jp
pushf
pop
jmp
int
inc
dec
push
fidivrl
popa
loopne
mov
fwait
push
cli
lea
jmp
adc
clc
test
mov
sub
leave
inc
sti
repz
or
mov
lcall
jecxz
repnz
sti
and
adc
jle
test
inc
mov
ja
fcomi
sbb
incl
loopne
testl
icebp
cmpsb
mov
cmp
dec
int3
js
in
lcall
mov
mov
fcompl
test
xchg
inc
testb
adc
xor
pop
jns
clc
mov
or
mov
std
add
mov
dec
ror
add
subb
ljmp
js
mov
loope
movsl
popa
adc
das
xor
mov
addr16
or
testb
ds
xor
pop
or
ret
adc
jl
arpl
push
stc
mov
add
xor
out
testl
out
das
jo
pop
xor
xchg
pushf
fwait
xor
xor
orb
cmp
popf
mov
mov
push
adc
lcall
and
mov
xchg
int
xor
out
scas
push
and
in
sbb
mov
fcomps
addb
leave
xchg
jg,pt
shl
push
ss
jmp
enter
daa
mov
push
jge
lds
add
out
and
xchg
jl
or
push
mov
jmp
sub
lods
sbb
mov
mov
adc
les
and
push
pop
cwtl
inc
adc
or
and
mov
das
mov
int3
js
inc
sbb
xchg
jl
jo
nop
repnz
incl
pop
in
mov
inc
subl
mov
mov
mov
repz
mov
push
movsl
mull
or
dec
or
pop
mov
ds
jg
popl
mov
in
mov
mov
xchg
arpl
and
daa
adc
mov
call
rcr
sbb
das
data16
scas
push
dec
in
out
imul
sti
mov
cs
enter
aas
jl
mov
cs
outsl
pop
cmp
and
mov
and
jo
xor
decl
mov
sbb
mov
mov
lcall
popa
negb
daa
jns
jle
lock
mov
loope
ja
inc
rorb
test
xlat
cmp
fidivrs
ja
cmp
sub
jmp
push
in
or
clc
cltd
push
test
xchg
in
adc
lret
rol
js
sub
call
push
cmpb
bound
pop
sub
pop
mov
pop
dec
cmpsl
ljmp
jp
lcall
jg
cmp
cmc
out
les
push
inc
test
ret
outsl
jno
cmp
call
incl
cmp
or
xchg
bound
xchg
int3
sbb
xchg
and
or
or
and
inc
stos
mov
test
shl
popf
inc
mov
adcb
and
test
rorb
push
ret
sbb
scas
clc
pop
fadd
shlb
test
aas
jbe
mov
mov
adc
lcall
lahf
jbe
cwtl
or
nop
xchg
outsl
mov
xchg
push
jno
daa
jp
xor
movsl
and
jmp
test
out
push
mov
out
cld
es
push
adc
test
outsl
lds
push
pushl
outsb
je
jmp
push
push
mov
jl
iret
mov
xchg
mov
mov
mov
pop
adc
ljmp
push
jp
jecxz
lret
faddl
jo
gs
sub
and
fiaddl
mov
cmp
ret
mov
mov
rclb
int3
imul
icebp
loop
sti
out
mov
mov
add
movsb
pop
aad
stc
jno
xchg
fcmovu
in
sbb
aas
call
adc
mov
xchg
subl
sbb
faddp
mov
ja
cmp
ljmp
inc
pusha
jne
stos
jl
cs
sbb
pop
push
pop
fimuls
pop
xchg
mov
decl
es
pop
inc
imul
incb
push
add
xchg
mov
cmpsb
lods
addr16
es
add
incl
imulb
cwtl
stos
sub
jnp
push
jmp
xchg
roll
jg
push
sbb
pop
and
loope
aas
rol
mov
popf
fcmove
call
faddl
jg
mov
push
push
icebp
mov
xchg
lds
mov
test
jp
incl
xchg
jecxz
xor
cs
xorl
push
pushf
push
xor
push
lahf
fdivs
mov
jb
repz
cld
sahf
jne
jmp
popa
or
xchg
push
scas
pop
fs
shl
outsl
cli
mov
push
xchg
mov
aad
push
mov
clc
dec
insb
fldenv
cmp
incl
mov
mov
imul
dec
xor
es
decl
data16
inc
jg
frstor
xchg
xchg
push
push
sbb
and
inc
dec
push
lods
aad
iret
in
pop
call
jno
cmp
jl
jg
testl
xchg
adc
repz
mov
xchg
dec
xor
dec
mov
pop
and
lea
mov
dec
lods
out
jl
cmpl
pop
mov
dec
lcall
jo
push
dec
in
cld
rcrl
jns
addr16
and
dec
movsb
dec
out
es
decl
pop
adc
test
pop
push
outsl
outsl
outsb
ficoms
popa
dec
add
jg
mov
faddl
adc
mov
push
idivl
imul
into
xchg
decl
leave
pop
std
shr
mov
jecxz
bound
daa
ljmp
clc
inc
stos
inc
dec
xchg
mov
lcall
xor
int3
push
adc
inc
test
test
gs
out
jo
add
and
pop
popa
or
add
sub
sar
jl
iret
shrl
cld
mov
jbe
outsl
lods
aad
or
mov
ror
outsb
and
sbb
stos
cld
aam
jne
lcall
push
pushf
lods
jl
sub
and
fcmovnb
sbb
sub
jle
lcall
xor
push
lahf
inc
and
add
mov
mov
cltd
adc
inc
mov
aaa
stos
push
aaa
std
fildll
jb
icebp
stos
cmp
outsb
push
mov
push
fcomip
push
out
in
dec
lret
nop
mov
ss
push
jmp
jp
push
decl
fisubl
push
inc
fdivrs
sub
lods
pushf
fcmovb
stos
in
cmp
subl
cltd
pop
dec
fwait
mov
out
cli
pushl
mov
push
repz
push
xor
mov
mov
repnz
mov
pushl
je
jmp
rcl
hlt
inc
and
sahf
pop
adcb
adc
shr
jge
push
in
jmp
sbb
pop
xchg
addr16
hlt
or
push
dec
sbb
iret
sti
pushf
ss
ljmp
jns
pop
aad
xchg
fwait
inc
push
fmuls
push
add
clc
out
add
adc
ret
adc
mov
jmp
mov
jl
inc
add
mov
rcrb
mov
xor
push
out
mov
adc
cli
call
movsb
jns
or
xchg
mov
fcmovu
xchg
mov
ret
cli
jae
ljmp
jle
cmp
dec
ds
push
pop
cwtl
loopne
dec
sbb
icebp
rcrb
in
xor
lcall
and
cltd
leave
ljmp
lock
mov
loope
or
call
sbb
add
out
dec
arpl
loope
pop
xor
or
mov
add
cmp
stos
mov
rcr
adc
adc
add
fcmove
cld
inc
ret
inc
repz
push
aas
js
mov
adc
sarl
cmp
int
out
xchg
pop
cld
jo
lea
mov
pop
cld
jg
loopne
xchg
pop
mov
mov
jne
fcoms
fldcw
ljmp
ss
outsb
xor
or
fcmovb
jmp
xchg
ss
cli
clc
mov
cld
pushl
into
pop
loop
aad
pop
jo
adc
inc
or
insl
bound
mov
inc
add
fs
movsb
dec
and
fildll
mov
mov
and
lcall
std
hlt
scas
scas
mov
adc
dec
mov
xchg
mov
xchg
pushl
jg
dec
jge
or
mov
mov
sub
addr16
es
pushl
push
mov
mov
sub
out
sub
mov
cwtl
push
jmp
ljmp
fmull
and
inc
lods
lea
cltd
jbe
rolb
loope
stc
in
push
jmp
sbbb
stos
mov
add
mov
movsb
ss
push
xchg
or
negl
incl
cltd
sub
int
mov
mov
out
cltd
lahf
ljmp
mov
mov
inc
adc
add
cmpsb
fmull
pop
jb
push
xor
sbb
pop
loopne
and
sahf
xchg
cmpsl
mov
clc
test
cli
decb
incl
out
and
cmc
add
in
mov
mov
in
cmp
fimull
mov
jp
loop
xchg
pop
bound
adc
rorl
hlt
cmp
decl
xchg
scas
pop
inc
xchg
xor
sbb
outsb
push
lret
inc
sub
divb
mov
jl
fs
imul
fmul
cmp
lahf
xor
xor
aam
mov
sub
mov
outsl
mov
inc
add
shlb
test
cmp
add
imull
pop
iret
gs
in
mov
adc
ljmp
mull
outsl
test
inc
repnz
xchg
cmc
pushf
sub
mov
add
ljmp
hlt
je
mov
pop
out
and
cmp
or
mov
repnz
jnp
addr16
jne
jmp
sbbb
ljmp
shrl
stos
push
std
inc
cmp
cld
dec
cmp
sub
lods
arpl
xlat
pop
mov
decl
or
pop
ss
add
subl
rcl
lahf
sbb
and
mov
insb
add
icebp
and
neg
iret
lcall
jne
xor
push
lcall
lea
pushl
mov
or
xchg
ret
ljmp
mov
mov
xchg
imul
lahf
add
pushl
mov
mov
loopne
shr
js
loop
adcb
into
lock
inc
inc
mov
aad
jmp
inc
or
mov
mov
mulb
jecxz
cmp
xor
stos
aas
mov
jg
aad
jno
lahf
test
xor
add
mov
lea
daa
in
aaa
adc
das
cli
fsubr
or
pusha
sbb
and
mov
data16
fs
or
push
lds
sahf
xchg
imul
stos
xchg
adc
hlt
lahf
clc
ja
add
ljmp
mov
sub
pop
and
cld
jl
call
and
mov
mov
sarb
jg
or
rcll
loopne
mov
jmp
stc
mov
mov
das
dec
push
pop
sub
mov
and
pop
popl
cmp
stc
data16
sar
push
shll
xor
imul
fidivs
mov
dec
xchg
and
add
adc
decl
je
repz
gs
fwait
pop
mov
inc
xchg
push
jg
mov
mov
mov
xchg
hlt
loop
push
jle
int
test
fiaddl
cli
jg
testb
cmp
mov
popa
call
xor
mov
aas
imul
hlt
cmpb
lds
dec
sub
dec
sarl
pushf
and
cmpsl
loopne
adc
and
cld
sub
fcos
inc
incl
dec
popf
xorl
addb
je
adc
insl
xchg
add
dec
rcrl
ljmp
das
pop
pop
clc
mov
adc
stos
ror
out
rcll
decb
jp
test
imul
stos
push
negb
div
orl
pop
aaa
fnsave
pop
es
decb
cmp
fmulp
je
jmp
js
scas
inc
and
inc
jnp
push
xor
mov
jb
rcl
inc
jne
and
lcall
ret
pop
std
dec
sub
cmp
mov
mov
je
jbe
add
std
incl
sub
push
popa
cmpsb
pop
and
clc
dec
imul
fldt
fldenv
pushl
push
lret
subl
out
fdivs
pop
jle
lret
inc
adc
inc
mov
ljmp
incb
fists
stc
mov
movsb
in
mov
mov
bound
loopne
lock
mov
cwtl
loopne
shl
lcall
pushf
es
or
jb
das
loop
xor
fistl
mov
inc
push
cmp
push
and
clc
loopne
mov
mov
lea
outsb
mov
sar
jp
lcall
aas
call
adc
jnp
jns
pop
daa
gs
dec
fldl
inc
stos
pushl
xor
or
shrb
push
add
insl
sbb
dec
out
imul
jnp
jno
stos
mov
mov
or
inc
adc
int
sbb
lahf
mov
xchg
jns
sbb
adcl
fisubrs
sti
dec
cmp
in
xlat
insl
pop
es
dec
gs
push
insb
outsb
mov
insl
and
dec
sbb
fisubrs
sub
outsb
hlt
sub
jge
andb
lcall
inc
sub
jecxz
jmp
call
and
jecxz
add
mov
pop
insl
loopne
and
shlb
call
loope
push
test
jae
jnp
jl
push
sub
push
cmp
inc
jg
mov
adc
cli
incl
sbb
cmp
ss
stos
mov
clc
jb
cwtl
mov
xlat
add
in
stc
jb
sbb
movb
out
push
push
loopne
cld
xchg
cmpsb
std
sub
or
mov
scas
adc
repnz
sub
jmp
mov
lcall
xchg
sbb
jge
sub
into
mov
and
dec
sbb
mov
mov
stos
dec
in
test
sub
xor
jb
xchg
and
jns
jl
nop
cmp
int
div
leave
inc
and
push
mov
cmpsl
sub
push
popf
inc
aad
imull
jmp
sbb
jg
cs
pusha
clc
scas
enter
mov
andl
inc
cwtl
fsubs
jmp
not
test
or
mov
repz
jg
jge
aam
orb
mov
jns
cmpl
ret
dec
mov
dec
add
pop
push
push
and
pushf
sahf
jecxz
imul
pop
hlt
ljmp
lods
rorl
xor
test
mov
mov
ret
mov
push
or
outsl
incl
fnstcw
fs
lods
lods
arpl
pushf
sub
xchg
sbb
mov
mov
fistl
fimull
inc
int3
xchg
js
pop
or
xor
lock
xor
xchg
insl
pop
jnp
sub
lcall
add
push
pop
aaa
movsl
jb
ljmp
js
cmp
ret
sub
mov
pop
xor
aaa
aam
pop
fcompl
cli
repz
adc
sub
pop
mov
leave
mov
and
adc
es
pushl
sub
roll
push
pop
mov
cli
mov
lds
and
cmp
imul
sub
negb
repnz
jecxz
mov
incl
cli
inc
sbb
dec
lcall
int3
les
add
ds
push
mov
jo
mov
dec
stos
outsb
aam
sti
out
lea
add
mov
mov
adc
jne
pop
xor
pop
ret
cld
or
lret
xor
fs
scas
and
and
pop
pop
int
lret
xor
cwtl
jle
xor
lcall
cmp
jmp
pop
ja
lret
inc
jecxz
adc
andb
clc
mov
jmp
aad
lock
jb
inc
pop
sti
aaa
imul
out
push
add
mov
jecxz
daa
pop
iret
jg
mov
ds
mov
or
push
or
decl
adc
inc
xchg
stos
scas
pop
and
scas
subb
stos
fbstp
nop
lds
mov
incl
sbb
les
imul
mov
mul
push
pop
or
ljmp
data16
fnstsw
push
jl
inc
xorl
lcall
mov
subl
stc
out
lcall
decl
dec
movsb
test
fidivl
push
sub
inc
mov
inc
jnp
pop
loop
jmp
jl
out
lds
iret
sbb
loop
sbb
fmull
decl
pusha
data16
mov
jbe
dec
shlb
sub
mov
lret
pop
jmp
mov
cmp
les
pop
push
cmc
or
mov
pop
lock
mov
in
mov
xchg
rorl
mov
sbb
adcl
loope
sub
dec
call
jle
adc
jno
cmp
pushf
sub
and
push
bound
iret
sti
inc
xchg
jb
xor
enter
aas
pop
ljmp
les
mov
arpl
pop
in
xchg
push
cmp
mov
lcall
push
lock
pop
repnz
lret
dec
addl
ja
stos
je
cmp
mov
mov
addb
lods
pop
je
push
sbb
xor
ds
push
inc
jmp
cltd
jge
jbe
add
push
sub
or
adc
imull
fildll
cmc
icebp
mov
sub
mov
or
push
push
int
inc
add
fldenv
jg
lcall
sbb
push
push
cmpsb
neg
mov
decl
scas
into
outsb
and
xchg
out
sbb
adc
sub
out
mov
cmpsl
nop
gs
movsl
lcall
insl
mov
sub
cmp
loopne
xor
mov
jnp
mov
xchg
mov
push
mov
sti
mov
xlat
popf
pop
and
ljmp
add
fisttps
repz
jg
ja
movsl
adc
aam
and
fsubs
pushl
in
or
dec
fbstp
into
bound
and
adc
enter
insb
adc
pushl
jno
pushf
dec
mov
sub
xor
or
mov
and
or
and
add
dec
nop
scas
push
inc
jle
loop
mov
fmulp
lods
in
out
mov
adc
or
cmp
ljmp
lds
rol
jnp
loope
push
adc
mov
push
add
insl
ds
test
aas
fidivrs
jecxz
in
dec
outsb
xor
fs
xchg
jbe
xor
nop
or
add
lcall
scas
jo
mov
aas
addr16
jle
ljmp
neg
mov
aas
xchg
sahf
pop
and
mov
loop
repz
mov
dec
inc
call
incl
xchg
je
jmp
call
js
xchg
stos
orb
add
jmp
aad
aas
dec
dec
fdivl
arpl
mov
mov
test
decl
arpl
aam
jo
mov
sbb
sub
aas
add
lods
in
lret
rcll
and
lret
xchg
adc
pop
js
pop
shrl
mov
ljmp
push
and
and
rcll
jg,pn
ret
sbb
and
push
sub
sar
lds
xchg
jo
jb
test
inc
int3
push
ss
in
jb
cld
dec
jp
pop
fisubrl
mov
out
ljmp
daa
cmpsb
jns
mov
xor
fmul
testl
aas
lock
in
in
xchg
rcr
call
pop
dec
lea
jne
jle
int3
jns
push
jne
mov
loope
in
dec
dec
xchg
cmpsl
mov
or
ljmp
mov
push
cmpsl
stc
mov
gs
dec
enter
mov
or
dec
jmp
jbe
push
mov
pop
pop
ds
xchg
mov
addr16
push
pop
push
stos
or
jmp
test
cmpsb
cmp
ljmp
rcrb
sarb
xchg
pop
pushl
adc
push
add
add
popa
inc
jbe
outsl
sbb
scas
dec
push
and
or
mov
or
xchg
jno
out
ret
data16
mov
mov
xor
nop
pushl
fwait
icebp
mov
pop
stos
and
mov
pop
nop
sub
bnd
sahf
mov
out
out
clc
sbb
inc
dec
push
lcall
push
ret
inc
and
lock
mul
sbb
cmovns
dec
repnz
and
je
fidivs
mov
sbb
jg
inc
jno
lcall
ljmp
xor
aaa
cmp
repz
sbb
push
mov
incl
jp
sub
xchg
leave
testl
data16
gs
lods
aas
adc
jo
push
fcomip
lcall
enter
icebp
iret
mov
pop
lcall
xor
aad
jmp
sbb
inc
push
out
jno
mov
mov
aam
sar
jmp
std
jmp
and
bound
pusha
sar
insl
and
or
call
jae
lcall
aaa
push
mov
out
lahf
aam
adc
cmpsl
jo
fs
aam
jne
aas
mov
adc
jmp
shll
addr16
imul
mov
std
ljmp
cs
dec
lods
push
shlb
lahf
je
cmc
cmp
icebp
pushl
repz
repz
xor
lds
repz
adc
push
shll
lcall
shlb
sub
outsl
mov
add
dec
aad
dec
test
arpl
decl
test
mov
fiadds
cmp
push
mov
iret
sub
ret
xchg
cmp
ljmp
jp
test
jns
and
inc
sub
arpl
xchg
ja
mov
lods
xor
sub
out
test
dec
test
int3
xchg
mov
sahf
call
and
aam
mov
lea
ds
loop
cld
pop
or
sahf
das
fdivrp
push
sar
data16
mov
adc
mov
ss
pop
cmpsb
jmp
jge
cli
and
shll
cli
shl
jne
les
rol
inc
decl
imul
xor
fmull
cmpsl
sbb
push
cmp
sub
mov
cli
pop
mov
add
xchg
test
mov
add
addb
addb
or
add
jae
rcr
incl
or
xchg
ja
pop
fildl
bnd
mov
jg
add
pop
inc
sub
adc
and
pop
jmp
enter
mov
addb
lahf
push
adc
inc
pop
mov
add
and
jle
dec
sbb
add
cmpsl
inc
jno
nopl
scas
push
inc
xor
inc
in
repnz
or
jnp
xchg
repz
fstpt
mov
xchg
dec
and
cmpsl
push
and
pop
rcr
and
movsb
push
movsb
inc
scas
push
repz
push
and
stos
push
and
push
test
and
imul
mov
sbb
pop
add
mov
stc
sbb
mov
sbb
add
mov
pusha
sbb
cmpsb
flds
mov
adc
fs
add
fcmove
imul
push
push
leave
push
fsubrp
aaa
movsb
sub
lret
mov
jbe
fldenv
inc
sbb
jae
mov
xor
int
pop
stos
mov
jbe
jb
ss
jo
pop
sub
insl
mov
push
roll
outsl
lods
loopne
insl
push
shll
fidivrl
iret
outsb
or
push
ss
mov
sbb
jns
out
jge
stos
test
sub
xorb
ljmp
dec
mov
push
insb
pop
mov
push
jae
shlb
mov
lcall
add
jne
shr
data16
push
aam
push
ret
add
mov
lods
pop
add
push
pop
dec
add
mov
push
data16
inc
ds
scas
cmp
push
push
shlb
mov
outsb
outsl
stos
aas
add
ja
fstpl
fldl
push
xlat
jne
add
ja
mov
insl
rcll
aad
push
xlat
ja
js
push
jl
sarl
jns
push
jp
jp
inc
push
fidivrl
push
insb
push
out
sarl
ja
fldl
rorl
jmp
ljmp
ficoml
xchg
sub
push
xor
xchg
push
setbe
xor
dec
fisttpl
push
lcall
insb
out
cltd
cmp
cmp
pushf
cmp
popf
xchg
ds
popf
aas
push
sahf
inc
push
lahf
inc
lahf
mov
out
mov
push
jecxz
push
imulb
movl
sbb
lock
hlt
clc
sahf
out
sahf
stc
cli
sti
cld
std
fstps
loope
inc
jo
add
mov
jae
add
dec
data16
imul
pop
cltd
int
mov
pop
add
pop
add
add
xchg
push
mov
mov
add
ja
inc
push
add
or
add
add
outsb
add
outsl
or
or
xlat
ds
cld
test
test
or
push
lods
sbb
add
pop
adc
rcll
adc
lods
add
fwait
pop
mov
pop
stos
femms
lods
lods
pop
insl
addr16
mov
add
scas
loopne
imulb
adc
add
lods
adc
sbb
mov
scas
scas
scas
out
in
scas
sbb
mov
mov
dec
repz
and
mov
nop
inc
and
cmpsl
and
or
xchg
mov
and
pop
and
pop
mov
inc
jo
fsubs
pop
sub
pop
sub
mov
pop
and
mov
cld
and
mov
jns
push
mov
aaa
pop
aas
cmp
subb
pop
cmp
pop
idiv
adc
inc
mov
xor
xor
fstps
push
or
add
mov
pop
xor
mov
pop
das
push
cs
xor
add
dec
jnp
push
xor
das
pop
push
push
xor
adc
pop
push
cs
dec
inc
das
inc
inc
ret
pushl
sub
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
jno
aas
push
lret
xor
pushw
dec
dec
cmpb
stc
pushl
mov
inc
xorl
mov
xchg
xchg
xchg
popf
pushf
fwait
lcall
xchg
mov
test
xchg
xchg
sub
dec
ja
insl
push
stc
in
je
push
bound
js
imul
xor
jne
je
add
sub
andb
sbb
jae
rorb
xor
or
pop
pop
scas
rorb
sti
mov
xchg
pop
push
dec
add
push
outsl
jg
iret
mov
cmpsb
push
mov
xor
xor
ja
jg
mov
push
ja
jb
cs
xor
mov
add
stos
test
pop
jbe
dec
sbb
and
mov
xchg
jo
push
notb
cld
outsl
inc
mov
cmp
mov
inc
add
jae
xchg
jp
int3
dec
addb
inc
mov
aaa
add
xchg
jno
lret
jns
lods
std
push
bound
mov
mov
inc
movsl
jg
push
sahf
mov
insb
add
mov
and
leave
xchg
xchg
pop
push
data16
sti
or
cmpsb
dec
push
dec
push
movsb
jae
add
addb
jo
mov
push
cli
cmp
ds
add
fwait
imul
jns
loopne
xor
cltd
insl
outsb
mov
cmp
test
sub
ja
fistpl
imul
stos
push
add
jnp
jp
add
js
mov
scas
cmp
data16
shrl
insb
pop
outsb
push
outsl
mov
iret
push
ds
pop
roll
aam
sbb
jg
fiadds
fisttpll
lock
mov
in
mov
push
es
bound
out
arpl
mov
jge
push
loopne
iret
sahf
mov
jb
shrb
xchg
xchg
in
push
jle
or
jecxz
or
fiadds
fnstcw
aad
push
divb
add
adcb
adcl
sti
sbbl
sbb
sbbl
test
test
insb
mov
pop
sbb
test
in
mov
push
xchg
nop
and
int
in
push
out
xchg
in
xchg
lock
sub
sub
add
rcrb
scas
outsb
out
xchg
das
push
xchg
fidivl
aaa
repnz
xor
cwtl
push
cmc
sahf
xor
lcall
fwait
cmpsb
pop
cmp
mov
es
aam
jle
push
push
and
mov
test
sahf
stos
pop
clc
out
jle
jbe
stos
into
shll
lgs
int
rcll
shll
rcr
rolb
mov
ret
data16
adc
into
add
addr16
dec
sbb
cmp
out
je
dec
rolb
inc
daa
add
mov
inc
fisubrs
add
or
pop
nop
mov
pop
push
adc
push
add
add
in
or
ds
add
mov
mov
ret
ds
mov
mov
mov
mov
fsubrs
mov
add
and
push
imul
scas
mov
rcrb
aas
and
aas
insb
xor
or
aas
repnz
and
aas
cmp
cmp
sub
adc
js
pop
mov
sbb
inc
jbe
sbb
mov
incl
jle
cmp
scas
xor
dec
mov
idivl
dec
jle
aas
adc
cmp
jge
dec
xor
dec
inc
test
fidivs
scas
add
mov
xor
pop
mov
ds
lods
stos
inc
clc
std
test
cmpsl
cmpsl
cmpsb
cmpsl
add
test
mov
in
lods
lcall
sub
sub
add
add
mov
sub
dec
and
inc
mov
jg
pop
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
jmp
nop
cltd
mov
mov
nop
test
insl
popf
mov
je
xchg
jns
jle
addl
jo
outsb
pushf
pop
mov
xor
scas
adc
push
rolb
sub
dec
adc
mov
incl
sub
roll
aas
jl
push
add
cmc
repz
dec
xor
aas
add
xor
mov
xchg
pop
cmp
test
mov
add
incl
fstpt
push
mov
fnstsw
repnz
outsl
mov
addr16
add
pushf
add
mov
push
in
lcall
or
mov
mov
push
dec
lret
js
idiv
add
add
mov
mov
mov
mov
test
scas
xchg
js
in
out
xlat
mov
mov
nop
sub
sub
xchg
push
push
nop
sub
xchg
xor
xchg
xor
outsb
lcall
leave
jbe
insb
mov
mov
shlb
iret
push
lret
sub
iret
insb
loopne
push
std
into
decb
stos
or
divl
fwait
int
out
xchg
add
test
jg
jle
jge
or
or
jg
call
add
pop
add
push
dec
or
mov
cmp
adc
dec
or
add
fcomps
mov
add
or
pop
pop
cmovg
aas
jl
inc
push
dec
sbb
inc
adc
ljmp
inc
inc
inc
adc
sbb
dec
add
dec
adc
inc
jg
ds
cmp
cmp
cmp
daa
and
sbb
sbb
and
add
dec
inc
mov
pushl
xor
xor
sub
sub
push
adc
lcall
nop
insl
mov
mov
mov
mov
mov
adc
cmp
push
outsb
mov
push
jo,pt
push
and
inc
adc
add
pusha
addb
add
mov
pusha
pop
adcb
into
incl
roll
push
inc
push
clc
sbb
sbb
xor
scas
push
incl
outsb
sysret
adcb
mov
add
testb
stc
sysret
and
jns
in
lock
or
or
or
adc
jg
adcb
sub
aaa
outsl
and
mov
data16
jg
test
inc
or
mov
into
jg
lods
pusha
mov
cli
mov
cli
les
mov
and
jg
repnz
inc
jle
cli
add
sub
xchg
pusha
add
add
sti
inc
lock
mov
das
sti
mov
leave
roll
scas
pop
jo
push
inc
dec
sti
jg
pop
add
orl
xchg
loope
cmp
mulb
xor
jg
cld
and
sbb
adc
cmpsb
std
ja
jg
inc
bound
into
jg
pop
inc
out
jg
and
pop
add
jle
push
and
incb
add
data16
shlb
lcall
lods
inc
add
addr16
or
dec
dec
adc
decb
jg
inc
or
inc
orb
adc
adc
push
jbe
insl
adc
int
bound
jle
enter
and
sbb
sar
add
jmp
lods
dec
add
pop
jle
lret
imul
push
loop
add
push
add
scas
jle
mov
test
dec
lods
inc
pop
test
addr16
add
popa
orb
jbe
sbb
add
and
jg
lret
fisubrl
adc
cmpsb
pushl
inc
mov
stos
mov
incl
pop
add
jg
jle
push
pop
aam
fdivrp
cmpsb
pushl
push
stos
pop
stos
pop
pop
mov
arpl
pop
add
daa
aas
aaa
pop
ficoml
pop
cmp
imul
sbb
cli
test
push
mov
inc
test
jle
push
dec
imul
sldt
mov
into
mov
daa
and
addr16
pop
push
mov
mov
jmp
mov
lcall
xchg
mov
xchg
popa
cwtl
adc
sub
jle,pt
sbb
lcall
mov
push
fnstenv
out
out
jne
push
push
jne
pop
push
jbe
and
push
jnp
push
jp
insl
inc
sub
push
js
dec
jbe
jmp
in
mov
mov
mov
jbe
es
push
dec
test
mov
ljmp
dec
call
iret
dec
or
cmp
inc
dec
and
scas
ljmp
jmp
dec
ja
xchg
adc
push
sub
and
fiadds
mov
xor
mov
mov
jbe
in
mov
jns
inc
out
mov
xchg
cs
aas
popf
inc
push
pushf
cmp
pushf
ds
cmp
and
xor
xchg
xor
cmp
fisubrs
sub
nop
daa
ss
cs
cmpsl
test
in
mov
xor
jbe
outsb
inc
push
and
incl
int
aas
or
ja
xor
call
sahf
xor
movb
es
mov
xor
cs
add
xchg
ja
jnp
push
push
hlt
dec
mov
pop
ja
sbb
sbbl
add
add
mull
inc
bound
adc
and
subb
add
outsl
add
push
add
pop
or
add
cmpsb
push
adc
pop
push
orl
lea
aas
outsl
sub
popf
push
imul
stc
jmp
xchg
mov
sbb
test
push
lock
cmp
adc
pop
cmp
icebp
push
inc
out
jg
xor
in
add
mov
push
pop
aam
decl
sub
idiv
mov
dec
push
mov
sarb
push
sbb
push
push
mov
xor
inc
cli
push
idiv
xchg
cmp
jmp
sbb
add
mov
mov
add
pop
out
fwait
mov
sbb
add
inc
xchg
daa
cld
pop
insl
pop
les
pop
cld
dec
mov
add
ds
std
out
mov
inc
xchg
lss
lcall
or
or
mov
cmovb
insb
push
ds
adc
push
incl
incl
loope
das
jmp
sub
incl
adc
sub
and
insb
lcall
adc
pushl
lcall
sub
inc
push
inc
scas
decl
fwait
adc
or
mov
or
jmp
clts
add
inc
test
fidivl
inc
outsb
iret
jle
adc
push
insl
fwait
sbb
out
bndldx
xlat
adc
incl
inc
lcall
push
lods
decl
pop
mov
lret
mov
add
mov
xlat
and
rolb
fmul
sbb
pop
sti
push
std
jmp
adc
subb
sbb
call
adc
cld
pop
sbb
fdivr
lgdtl
adc
es
call
jg
jmp
idiv
loop
inc
and
adc
ljmp
cmp
push
test
pop
fcmovbe
pop
mov
dec
pop
pop
inc
cmovb
pop
jnp
pop
aaa
mov
test
shll
mov
mov
roll
dec
fisubrs
movsb
sbb
call
adc
pushl
ljmp
lahf
inc
imul
inc
inc
pop
inc
pop
jge
mov
mov
movsb
dec
jns
data16
stos
push
popf
inc
cmpsb
dec
dec
inc
pop
rcll
push
dec
mov
movsb
into
add
and
mov
mov
out
push
shrb
rcl
outsb
shrb
xor
shll
push
push
jb
enter
imulb
push
iret
insl
fstpl
outsl
pop
imul
push
dec
push
xchg
imul
aam
push
cs
lcall
decl
pop
add
test
push
jmp
popfw
cmp
aas
xchg
lods
cwtl
xor
iret
and
xchg
push
push
aaa
push
lcall
ss
xchg
push
xchg
es
iret
and
pop
xchg
xchg
es
pushl
ljmp
cs
bound
sbb
add
scas
xchg
dec
or
std
faddl
jge
sahf
in
fldcw
or
jl
or
fdivrl
jge
jg
xor
add
jle
repnz
push
dec
push
ss
sti
aaa
dec
repnz
repnz
jae
pop
fidivrl
push
mov
mov
out
add
in
add
int3
outsb
nop
testl
and
inc
stc
sbbb
lcall
xchg
lahf
push
lods
inc
pop
adc
adc
int
cmpb
push
addb
jnp
lahf
dec
es
addl
orb
jmp
and
xchg
out
push
sub
iret
fstl
fucom
jo
mov
cli
pushl
mov
repnz
push
fldl
mov
fnstsw
mov
icebp
dec
pop
cld
mov
jno
sub
pop
inc
test
outsb
push
jg
je
daa
jg
mov
push
enter
dec
loope
xchg
push
in
iret
cld
jp
es
xchg
mov
incb
out
mov
and
dec
jo
orb
jg
ret
push
push
pop
ja
dec
and
aam
cmp
decl
rclb
lcall
push
fsub
pop
cli
adc
add
sti
or
decl
xchg
and
jbe
mov
push
pop
push
pop
push
xchg
scas
jmp
notrack
jle
into
lcall
push
jns
sti
pop
mov
mov
push
mov
jmp
xchg
jmp
mov
push
xchg
out
int3
mov
loop
adc
xchg
out
sbb
loope
sbb
decl
xor
mov
or
add
pop
aad
fisubrs
add
ja
sahf
std
movsb
ds
or
jne
and
pop
push
and
xchg
mov
mov
add
sbb
loope
push
pop
stos
fldt
ret
push
call
add
dec
jmp
add
inc
sub
push
inc
lahf
lret
or
fwait
call
xchg
adc
sbb
xchg
push
mov
xor
inc
test
jle
mov
pop
push
sbb
push
sbb
es
jae
push
or
and
out
sbb
push
sbb
outsb
or
ljmp
push
inc
addl
add
test
adc
push
and
or
xorb
sub
aaa
ret
add
vpcomuq
insl
jo
add
inc
and
pop
add
ret
dec
sbb
add
gs
mov
or
jae
dec
arpl
icebp
or
xchg
scas
mov
sbb
xor
mov
movsb
xchg
dec
rcrb
inc
jmp
insb
jo
das
fstpl
test
jecxz
ret
add
imul
outsl
jb
xchg
jge
cmp
adc
iret
push
test
loop
scas
add
lods
inc
and
sbb
add
add
addb
inc
cmc
add
push
mov
and
sbb
and
adc
cmpl
jo
lods
push
xor
imul
jne
popa
shlb
jbe
lea
inc
xchg
jb
pop
and
xorb
outsb
jae
lds
orl
lea
dec
filds
pop
dec
xor
mov
and
dec
jecxz
dec
addl
pop
test
add
repz
adc
add
les
push
movsb
xor
jno
mov
sub
outsl
shrb
jo
xor
dec
imul
loop
and
rcr
aaa
xor
pop
sub
inc
sub
bound
mov
pop
pop
dec
insb
out
xor
jg
inc
imul
sbbl
inc
adc
mov
and
addr16
inc
sub
arpl
and
or
sbb
movsb
mov
or
pop
add
or
inc
shlb
adc
je
adc
mov
push
xor
dec
mov
mov
insl
mov
xchg
jecxz
adc
push
mov
xchg
aad
cmp
clc
cmp
sbb
push
ret
mov
imulb
add
data16
pop
es
je
push
dec
in
xchg
xchg
sbb
roll
push
lahf
aad
pusha
stos
mov
ret
popa
cmp
and
adc
orb
jecxz
add
push
xchg
sub
push
xor
dec
dec
add
xchg
adc
push
add
cs
and
jmp
mov
adcb
sti
pop
push
shll
scas
jg
mov
push
lods
jge
cmp
pusha
and
pop
jbe
sub
mov
mov
xchg
xchg
imul
les
inc
sub
sub
and
mov
in
jae
xor
test
mov
push
dec
push
push
mov
lods
pop
test
mov
insb
sub
sbb
adc
mov
fcompl
push
cmc
test
pop
inc
incl
cmpb
mov
cmp
adc
push
jne
imul
gs
gs
aam
les
xor
add
fxch
js
iret
mov
arpl
add
jne
or
adc
and
sub
jae
and
insl
cltd
leave
pop
sub
mov
and
push
aad
adc
xor
imul
std
inc
mov
jno
mov
sbb
mov
inc
mov
testl
cmpsl
imul
and
fs
xchg
inc
sbb
dec
arpl
mov
inc
dec
inc
insb
push
sub
rcpps
jb
js
or
jb
inc
inc
jno
inc
shll
add
fsts
ds
inc
imul
jge
insb
push
sbb
push
aaa
dec
insb
sahf
daa
push
push
loope
cmpsb
fs
push
outsl
jo
jb
aad
cmp
adc
fwait
jl
mov
dec
inc
jno
add
and
imul
push
movsl
ret
sub
shll
hlt
cwtl
imul
push
mov
and
push
les
jae
test
std
adc
jb
add
fbld
inc
inc
ret
ficomps
pop
xor
mov
adc
out
or
ds
inc
jo
sbb
pop
sbb
pop
and
pop
inc
je
insl
dec
outsb
dec
stc
add
mov
cwtl
dec
arpl
push
pop
jnp
jl
int3
loop
pop
add
add
sbb
mov
dec
rcrl
sub
xor
cltd
or
or
push
adc
xor
mov
xchg
test
add
es
enter
cmp
insb
inc
arpl
push
fisttps
xorl
imul
sbb
inc
jo
sbb
popa
es
lret
lods
test
jns
lcall
ret
cmp
push
imul
push
jo
dec
jg
pop
adc
lods
add
movsb
lret
cmp
push
mov
or
mov
adc
sbb
or
xchg
nop
jns
sub
jo
inc
sbb
push
push
dec
in
add
sarb
sbb
and
push
sbb
into
jno
scas
dec
out
xchg
cmp
cmp
dec
mov
shlb
sbb
sub
cld
loope
push
adc
imul
and
inc
test
ret
push
dec
sbb
sub
ud2
outsl
inc
inc
xor
fsubr
xchg
dec
pop
lret
inc
lock
mov
push
hlt
mov
andb
mov
popw
xlat
adc
or
or
test
xor
fdivrs
addb
xor
inc
mov
enter
out
push
imul
xorb
and
cmp
cmp
mov
push
arpl
mov
pop
pop
sub
cmpsl
adc
rclb
add
push
insb
lret
push
pop
loope
cs
dec
insl
jmp
inc
push
xchg
mov
sub
push
push
xor
or
dec
cld
addr16
adc
arpl
xchg
pop
imul
jne
pop
xor
int3
movsl
lds
push
add
sbb
cwtl
jb
int3
pusha
adc
inc
sbb
fs
mov
cmp
jns
stos
int3
js
cwtl
dec
and
cmp
cmp
icebp
nop
movsl
jg
out
cmc
bound
xchg
cmp
adc
stc
shrl
and
mov
or
jne
xor
pop
mov
mov
mov
mov
or
loopne
add
out
stos
and
pop
movsl
pop
mov
inc
push
push
inc
sbb
sbb
sub
jmp
lea
pop
push
or
mov
dec
or
cmp
ficomps
out
or
int3
inc
test
imul
push
clc
xchg
jae
xor
jo
or
xchg
aaa
sub
jb
and
sub
inc
and
cmp
test
dec
sub
push
push
or
inc
and
cmp
or
sbb
add
add
xor
call
and
fisubrl
or
and
adc
add
push
add
addr16
push
add
adc
mov
sbb
sub
in
in
incl
xor
add
or
adc
in
jg
es
push
adc
push
inc
pop
adc
sbb
push
sub
push
pop
aam
outsl
push
inc
sbb
sbb
cs
divl
and
lea
bndldx
add
xor
ljmp
sbb
aas
push
add
add
adc
cmp
loopne
add
add
and
xor
data16
adc
or
push
or
mov
add
adc
ss
sbb
subps
inc
pop
sbb
push
jg
in
imull
or
and
sbb
or
sbb
add
xor
xor
dec
adc
and
adc
adc
sbb
push
pusha
movsb
adcb
loop
and
jg
push
and
xor
sbbb
push
and
daa
push
or
xor
or
or
sti
lcall
or
add
dec
mov
xor
push
das
clc
cmp
and
sub
pop
mov
in
sbb
lds
movsb
adc
push
dec
pop
pusha
mov
mov
fistl
fmull
xchg
push
adc
js
cwtl
and
sti
out
incl
add
or
daa
add
push
xor
xor
or
cmp
cs
xor
aas
and
sub
push
ljmp
or
cmp
es
xor
dec
sbb
das
push
bswap
add
incl
or
das
adc
adc
or
push
push
lods
adc
pushl
pop
xor
fs
sub
push
push
or
pop
aaa
adc
loopne
and
inc
adc
or
lcall
xor
push
sbb
and
es
mov
xchg
daa
cmp
xor
and
push
or
inc
and
or
add
mov
and
or
cmp
push
xor
cmpsb
pop
dec
adc
or
pop
adc
pop
and
or
or
call
sbb
lock
jbe
pop
push
hlt
out
sub
sub
jg
lock
ds
shll
mov
ss
inc
sbb
xor
das
test
add
mov
lock
ljmp
dec
sub
sbb
les
push
push
push
adc
add
inc
nop
push
inc
adc
or
cmp
sub
mov
or
bound
jo
or
or
sbb
pushl
addb
aas
push
sbb
xchg
jb
sub
ret
cli
xor
adc
sub
push
pushl
jp
cmp
adc
sub
lock
add
cmp
incl
adc
lock
loopne
pop
fistps
adc
push
jge
cmp
lcall
pop
out
clc
sarl
push
ss
or
adc
and
loope
and
idivb
mov
lds
js
dec
adc
mov
lea
sub
fisttpl
repnz
push
gs
pop
cwtl
jnp
pop
adc
sbb
inc
dec
outsl
and
xor
ljmp
lock
push
push
and
inc
sbb
pop
lock
ficoml
and
dec
sub
inc
mov
add
ljmp
inc
lcall
xor
sub
and
cmpsl
or
dec
inc
outsb
faddl
shll
xor
bound
adc
testb
outsl
jg
clc
add
insl
fmull
and
xor
ljmp
push
or
cmp
adc
adc
ja
fdivr
push
and
push
fcoms
psubsb
sub
adc
adc
jno
xor
adc
fists
and
push
mov
push
lock
or
or
call
adc
jb
pop
inc
addr16
aas
dec
pop
pop
imul
lods
xor
sub
decb
xchg
add
push
adc
call
pusha
push
inc
dec
push
scas
adc
andb
jno
sub
outsl
stos
aaa
insb
pop
pusha
dec
mov
lock
sbb
mov
sbb
sbb
jg
cmp
adc
xor
xor
daa
push
sbb
femms
push
sbb
and
lcall
pop
adc
aaa
and
or
aaa
and
cmpb
outsl
clc
lock
adc
hlt
cwtl
or
adc
cmp
dec
jnp
jne
and
xor
mov
adc
arpl
sub
jmp
and
sbb
adc
adc
paddsw
cmp
dec
add
scas
dec
dec
push
pop
cmp
pushl
push
sbb
adc
xor
push
pop
pop
and
dec
adc
add
sub
add
inc
jg
adc
ljmp
or
rolb
test
cmpb
and
add
add
stos
add
js
sbb
cmp
sub
xchg
decl
xchg
jle
adc
push
inc
cmp
inc
daa
insb
ss
cs
rorl
xor
and
add
push
or
mov
push
xor
mov
pop
sub
call
jp
xor
push
pop
adc
and
push
in
outsb
movsb
push
xor
adc
dec
inc
and
fisttpl
push
and
sbb
and
pop
psubb
loopne
adc
lret
in
mulps
pop
cs
clc
jmp
fs
sub
adc
ljmp
scas
adcb
movsb
mov
push
jne
dec
sbb
daa
inc
adc
push
or
sbb
sub
add
dec
pop
add
add
inc
sbb
add
sbb
push
jo
dec
pop
inc
and
lcall
movsl
or
lock
sti
add
sbb
sbb
dec
add
cmp
jae
es
adc
adc
adc
lock
call
sub
push
add
inc
push
mov
sub
sub
and
add
es
adc
aaa
jge
lock
pop
adc
cld
lret
adc
adc
aaa
dec
or
rcr
ljmp
jae
sub
push
adc
cmpsb
das
je
xchg
daa
sbbb
ds
push
jg
push
adc
jg
popf
and
fistpl
imul
or
dec
pop
cmp
test
or
dec
mov
lock
xor
push
dec
ss
add
adc
pop
sbb
add
lock
add
sbb
addr16
pushf
sbb
mov
push
pushf
nopl
sbb
push
movhps
sbb
sub
out
push
jbe
sbb
and
lock
or
outsl
decl
sub
sub
xor
push
or
pop
inc
adc
cmp
inc
inc
push
lock
call
js
mov
or
scas
mov
xor
pop
inc
and
lcall
dec
aas
scas
xor
xor
sbb
pop
add
push
push
pop
push
sbb
or
push
adc
pop
aaa
and
fisttps
push
add
aas
enter
inc
cs
pop
sbb
sbb
sub
call
push
adc
lock
std
add
lock
add
add
pop
or
mov
add
jl
add
or
sbbb
sbb
das
mulb
cmp
adc
pop
or
and
call
lcall
push
sbb
cmp
unpcklps
cmp
push
sub
or
and
or
ret
sbb
adc
daa
adc
push
dec
sub
or
sbb
adc
xor
aas
adc
push
push
sub
adc
pop
sbb
pop
hlt
pop
mov
pushf
pop
and
mov
mov
dec
test
ret
push
call
sbb
outsb
jo
loop
icebp
mov
dec
lea
lret
xchg
pop
sbb
leave
add
mov
adc
pop
sbb
add
and
mov
fbstp
push
pop
push
jb
pop
sub
aaa
outsl
and
push
dec
cmp
mov
fs
lahf
dec
in
movswl
scas
inc
add
mov
cld
add
add
and
pop
std
leave
add
pusha
sbbl
or
pop
mov
decl
sub
push
pop
adc
adc
push
and
sbb
jne
jg
loop
sub
push
sub
movsb
adc
pop
int3
pop
sub
sbb
inc
push
cs
popa
js
inc
or
push
cmp
and
and
adc
sub
cwtl
pop
invd
or
daa
push
cs
sub
mov
push
sbb
or
adc
call
daa
or
dec
prefetch
lock
and
pop
push
xchg
movsl
adc
pop
sub
sbb
cli
push
push
sbb
or
js
or
xor
adc
push
or
adc
in
push
fisttps
lcall
lock
or
pusha
or
add
and
wbinvd
push
mov
adc
out
push
dec
xor
inc
adc
sub
jg
sub
sbb
nop
pop
or
sbb
sub
inc
ja
pop
hlt
inc
inc
cmp
test
adc
cmp
mov
xor
popa
or
sbb
out
arpl
testb
dec
adc
xor
and
sbb
inc
cmp
addl
mov
dec
cmpsb
les
pop
pop
push
or
push
les
mov
xchg
adc
or
mov
ss
pop
pop
push
xor
and
inc
mov
loopne
sub
inc
xor
jp
sbb
incl
or
xor
inc
mov
mov
sbb
sub
jle
jmp
cmp
ds
aas
push
cmpsb
push
inc
pop
adc
pop
jo
add
or
loopne
inc
push
pop
dec
sbb
cmp
lock
pop
pop
pop
mov
lock
or
das
sbb
add
or
sbb
jo
cs
or
or
sub
es
and
or
xor
or
clc
fisttps
push
sub
or
adc
sbb
pop
sub
data16
pop
xor
push
pop
add
sbb
or
or
sbb
adc
adc
push
sub
dec
dec
add
bnd
jbe
add
sub
cltd
rolb
push
aaa
dec
lock
add
out
and
add
xor
adc
push
inc
inc
sub
das
sbb
call
add
and
xor
bswap
test
cmp
adc
cmpb
dec
adc
cwtl
pop
ds
outsl
adc
push
mov
pop
pop
cmp
and
sbb
in
aaa
or
or
dec
pop
sub
xor
adc
add
incl
mov
sbb
or
sbb
fldt
test
shlb
ds
adc
das
sar
push
pop
adc
or
add
push
adc
sub
negb
xor
dec
rclb
pop
sbb
lock
inc
dec
jge
mov
adc
sbb
push
adc
push
or
and
jmp
sbb
or
inc
and
add
xor
push
inc
xchg
add
xor
cmp
mov
and
cmp
jg
sti
pop
cmp
jp
or
or
inc
or
xchg
loop
scas
push
arpl
inc
push
pusha
adc
inc
int3
jl
or
sbb
call
std
arpl
insb
fdivrs
ss
mov
adc
or
pusha
ljmp
repnz
push
arpl
sbb
sbb
pop
lock
idiv
add
dec
cmp
adc
or
bndldx
inc
or
adc
add
jo
andl
xchg
sbb
ds
sbb
and
push
dec
fmuls
pop
ds
rorb
xchg
or
sub
and
sub
stos
outsl
call
add
or
adc
mov
jmp
fildl
xor
cmp
aam
inc
or
or
push
adc
adc
lock
add
nop
aaa
popa
push
sub
dec
pop
mov
add
inc
adc
sbb
inc
add
das
pop
popa
lahf
pop
sub
mov
adc
daa
sbb
decl
and
pop
inc
adc
pop
icebp
or
sbb
sbb
add
cmp
incl
cmp
jo
cmp
orb
in
popf
js
test
out
es
and
incl
data16
xor
adc
dec
pop
and
lahf
loop
add
inc
push
aaa
cmpsb
add
jmp
cmp
daa
inc
add
pop
adc
sbb
pop
and
out
imul
mov
icebp
lcall
or
sub
and
inc
pop
adc
sbb
pop
cmp
adc
notb
ret
incb
and
push
cmp
bound
sub
push
sbb
add
mov
xor
pusha
lock
dec
nop
cmp
and
cwtl
mov
add
outsl
dec
dec
sub
push
sub
sbb
cmp
add
outsb
xor
decl
loop
push
pop
cli
dec
and
sysexit
cmp
je
or
sbb
pop
xor
es
scas
sbb
adc
pop
mov
mov
les
ja
inc
clts
dec
lock
push
or
sbb
push
push
pop
adc
pop
or
xor
add
sbb
les
das
push
pcmpgtw
or
aam
cmc
lock
add
jo
paddsb
fsubrl
pushf
aaa
push
xchg
or
push
std
inc
incl
pop
push
jo
sbb
mov
xor
jo
fldenv
lock
pop
pop
jl
add
sbb
shrb
es
pop
repnz
fisttpll
les
sub
sub
js
cmp
insb
add
fldl
mov
or
add
add
or
push
lock
add
and
or
or
sbb
sbb
dec
and
das
inc
pop
dec
add
sbb
lock
sbb
adc
push
pop
fcoml
lock
lock
add
dec
into
hlt
aas
bound
pop
aad
lea
xchg
add
add
or
xchg
mov
loopne
or
ja
push
lock
pop
int3
jmp
lock
add
inc
lock
jne
xchg
ljmp
jne
adc
push
add
push
test
cmp
nop
imulb
mov
or
dec
xor
adc
daa
pop
sbb
dec
or
test
push
fcmove
sbb
dec
jmp
and
mov
jmp
imul
add
mov
sbb
into
xor
cmp
cmp
pop
into
or
or
or
and
xor
outsl
pop
je
add
or
sbb
sub
sub
mov
push
ret
js,pn
push
xchg
int3
inc
pusha
xlat
into
add
or
adc
popa
incl
push
sub
sbb
jp
or
or
sbb
lahf
inc
sahf
sub
or
adc
loopne
xor
and
shll
and
sbb
adc
inc
xchg
or
cmp
pop
sub
popf
add
pop
aam
sbb
outsl
subl
add
andl
adc
and
inc
jo
pop
fistl
ds
notl
aas
sbb
cs
sbb
aas
cmp
cmp
or
or
add
push
mov
cmpsb
inc
push
int3
sub
push
sbb
mov
adc
and
add
jnp
cmp
into
sub
add
and
and
or
cltd
shl
les
dec
cmpsb
mov
lock
add
shll
hlt
sbb
pop
sbb
adc
or
and
xor
es
adc
sbb
cmpsb
sahf
add
aas
fnsave
fidivs
femms
das
dec
or
bound
lock
or
dec
dec
xor
add
add
sbb
lcall
xchg
pop
mov
dec
push
sub
fcmovbe
xor
popfw
jg
pop
outsl
ss
and
adc
mov
adc
movsb
outsb
das
pop
or
pop
push
push
and
sbb
faddl
and
stos
push
adc
push
lods
push
mov
push
push
xor
cmpsl
fildll
or
sbb
mov
jle
cltd
dec
add
add
adc
pusha
ret
and
movsb
sbb
push
or
jl
adc
jo
insb
dec
lock
dec
or
push
fadds
adcb
loope
push
mov
sbb
lock
push
inc
lock
add
or
adc
or
and
push
sub
sbb
xor
sbb
push
sub
cs
sub
ss
cmp
or
fistl
mov
test
push
out
clc
add
mov
jl
sub
sbb
dec
adc
inc
movsl
add
outsl
mov
adc
push
sysenter
add
pop
cmp
pop
mov
jg
push
jg
pop
or
push
adc
and
xor
push
mov
and
jle
cld
cmp
into
lock
xor
lock
das
add
pusha
sbb
lock
ret
xor
outsl
jb
ja
xchg
push
push
xchg
sbb
cmp
outsl
fistps
outsb
add
cmp
sbb
xor
sbb
out
xor
pop
sbb
push
sub
dec
icebp
fildll
push
mov
push
sub
and
sub
and
and
dec
inc
sbb
and
sub
dec
and
mov
fcomip
cmp
xor
arpl
xchg
sub
dec
and
imul
dec
inc
inc
fwait
xchg
stos
push
and
pop
sti
push
je
dec
inc
xor
ds
xor
push
and
insl
sti
adc
cmp
cmp
cmp
je
jp
ljmp
cmp
and
cmp
fildl
dec
cmp
dec
pop
pop
shl
xor
and
cmp
sub
push
ds
dec
xor
dec
xchg
andb
or
decl
push
and
jl
xchg
cmp
movsl
xor
mov
arpl
jg
outsb
or
inc
pop
cmp
lock
aas
dec
jne
and
add
sbb
sbb
lods
cmpl
xor
cmpsb
dec
lods
ds
add
sahf
mov
es
sub
sti
int
fs
xchg
cmp
and
inc
dec
dec
cmp
cmp
test
fcmovnu
outsl
cmp
xor
cmp
xorl
lock
xchg
mov
andl
add
mov
push
add
push
push
roll
jle
add
aaa
rclb
xor
subb
into
aam
lock
add
shll
cltd
jle
fldt
add
push
mov
cwtl
dec
push
adc
sbb
or
push
push
add
or
lret
inc
sub
xlat
push
xor
sub
lock
test
insb
test
add
push
push
add
xchg
pop
push
enter
or
inc
roll
lock
add
sub
mov
lock
adc
push
add
sub
test
les
aam
mov
in
mov
lock
cmc
lock
jne
mov
mov
add
mov
mov
inc
bound
cmp
cwtl
mov
add
mov
or
push
jno
cmp
shl
movsb
sub
sub
ss
dec
lcall
adc
fnstsw
adc
or
adc
sbb
adc
adc
or
bound
or
xchg
pop
dec
lret
mov
push
insl
adc
movb
mov
add
icebp
insb
and
loop
inc
or
mov
mov
aam
iret
jae
or
fldl
data16
add
jno
rcl
or
push
insb
xchg
popa
or
adc
sbbl
mov
gs
and
dec
cmp
scas
movsl
push
sbb
fisubrl
push
mov
adc
sub
pop
cmc
adc
pop
sar
xchg
iret
sbb
fcomps
testl
add
mov
jecxz
lock
adc
repz
subb
or
ds
or
and
insb
pusha
adc
or
fst
data16
xor
cmp
pop
adc
and
add
jge
adc
or
add
aaa
cmp
into
fscale
sub
adc
pop
xor
imul
insl
fisttpl
dec
mov
stos
jne
pop
jnp
or
in
fnsave
sbb
mov
mov
sbb
fidivrl
dec
pop
sbb
lahf
fstpl
dec
fadds
fstps
das
insl
add
ljmp
jnp
and
add
shll
test
loopne
sbb
mov
lods
sbb
aad
lds
sbb
jnp
sysret
push
sub
inc
add
xor
mov
rcr
outsl
xor
popa
imul
sub
call
out
sub
ret
or
outsb
add
inc
pusha
xchg
and
mov
xchg
pop
lea
ja
sar
fimuls
push
hlt
scas
testl
pop
adc
fcmovnu
sbb
add
sbb
jmp
ret
mov
pop
bound
xchg
mov
xlat
stos
xor
mov
push
sub
sub
xlat
mov
pop
dec
inc
and
push
dec
or
dec
dec
mov
arpl
repz
pop
xchg
shr
jns
pusha
add
mov
fstenv
sbb
adcb
aad
movsb
add
adc
sub
test
aas
push
stos
sub
mov
aaa
cmp
sbb
cmpsl
imul
and
sbb
cmpb
and
and
lods
adc
adc
mov
pop
imul
push
nop
adc
xlat
add
fwait
cmp
cwtl
leave
adcb
adc
push
outsl
adc
adc
mov
push
mov
ja
adc
inc
in
popa
andl
or
adc
add
and
lock
mov
sub
sbb
pusha
int3
outsl
test
shlb
add
js
movsb
pop
imul
imul
sub
lods
mov
pushf
xor
and
add
xor
dec
mov
sbb
and
sub
sub
cmp
xor
mov
pushf
mov
sub
or
or
jnp
fsts
add
repnz
sbb
xor
addr16
sub
dec
sub
inc
mov
enter
sub
push
sbb
mov
pusha
cmp
inc
sub
pop
push
xchg
inc
cmp
adc
test
mov
or
jg
sub
cmp
add
insb
fmull
pop
lock
in
adc
push
inc
lods
lcall
push
and
into
dec
adc
add
jno
movb
rolb
mov
adc
fld
pop
shll
dec
inc
sbb
mov
add
dec
pop
fildl
dec
lock
add
xchg
push
fmuls
push
loopne
push
lea
test
mov
nop
repnz
jbe
push
out
mov
rol
and
push
xor
dec
xchg
push
sbb
ficoms
jle
xor
sti
xchg
add
test
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
xchg
inc
add
add
