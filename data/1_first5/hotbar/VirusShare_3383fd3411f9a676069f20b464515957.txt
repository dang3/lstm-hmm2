sti
pushl
rorb
jbe
add
jmp
or
ret
push
push
mov
push
push
call
add
mov
pop
ret
push
push
and
cmp
testb
idiv
adc
sub
add
ret
mov
std
decl
add
rorb
rorb
rolb
add
mov
orl
dec
in
ficoms
test
je
sub
pop
mov
fwait
loopne
jmp
andl
lea
ja
or
or
scas
pop
sar
mov
or
or
daa
sub
sub
sub
andl
div
insl
cmpb
or
inc
or
xchg
add
dec
lahf
imul
mov
push
lods
testl
push
lock
pop
rol
or
mov
sti
in
lret
jle
or
ss
mov
pop
mov
mov
test
orl
dec
sub
pop
pop
movsl
cmp
jbe
sti
notl
cmp
or
mov
ret
and
popf
or
push
andl
pop
pop
pop
loope
lock
cmp
jge
mov
lea
push
imull
loope
push
int3
cmpl
jb
mov
idivb
push
lea
mov
rcll
in
push
cmpl
filds
mov
jne
mov
imul
cmp
push
jae
sub
cmp
ja
xor
inc
sub
add
mov
add
mov
or
jmp
adc
decl
or
das
xor
mov
sub
lea
lea
fistpll
xor
xor
mov
ss
roll
pop
leave
ret
pop
shrb
cld
cmpl
add
or
mov
sub
jmp
xor
sbb
aas
insb
mov
adc
add
adc
pop
or
cmp
jae
mov
mov
sti
fadds
push
fstps
lret
icebp
loopne
ja
ret
inc
or
add
push
in
mov
scas
pop
jne
cmp
lock
cmpsl
push
cmp
cmp
add
ret
and
xor
lret
dec
cmp
inc
push
xor
cmp
stc
and
and
pop
and
mov
subl
lret
mov
xor
aas
jl
pop
sub
out
lea
cmp
xor
dec
pop
push
lret
shrl
sub
iret
jecxz
jle
mov
mov
or
enter
fdivrl
movsl
or
lds
adc
mov
stc
lea
xor
cmp
jne
push
sub
adc
ja
push
adc
xchg
cmp
sbb
cmp
jle
mov
lea
pushl
incl
mov
inc
or
cmpb
jne
mov
jmp
push
push
push
outsl
push
fdiv
iret
and
cmp
mov
mov
dec
mov
pop
or
push
push
mov
pushf
push
push
icebp
or
pop
jecxz
shll
test
sub
mov
dec
lds
dec
xor
add
mov
and
out
jmp
sti
lock
mov
cmp
push
es
ret
sti
je
out
adc
enter
and
jne
pop
sub
cmpsl
and
sub
cmp
outsb
adc
cld
ret
mov
sub
sbb
cwtl
push
imul
js
push
add
loopne
test
sti
xlat
jae
mov
cmc
mov
cmp
add
dec
adc
sbb
or
fsin
mov
add
push
push
add
push
jl
fsubrl
mov
repnz
add
mov
inc
rolb
cmp
xchg
rorl
adc
in
outsb
lock
nop
xchg
aas
pop
xchg
aad
push
sbb
add
pop
jae
or
inc
mov
or
jae
mov
insl
push
pusha
jns
add
add
jnp
pusha
cmp
sub
out
clc
or
push
ret
mov
pusha
sub
fmull
aad
jecxz
jge
mov
into
packsswb
jbe
jg
scas
mov
dec
sbb
in
shrl
jge
push
pop
pop
std
incl
cmp
jae
push
pop
sub
cmp
ja
xor
inc
sub
gs
add
pop
xlat
mov
fcomip
call
or
inc
xor
dec
push
fadd
sbb
add
fsubp
fidivrs
sbb
popf
test
popf
addb
js
call
jnp
into
jle
mov
mov
mov
inc
and
dec
hlt
mov
pop
in
mov
xor
push
pop
dec
in
ret
or
add
jg
sub
enter
cmp
push
sbb
sarl
sbb
add
aaa
ficompl
repnz
add
pop
push
mov
ret
fimuls
or
push
enter
les
sub
fstpl
adc
adc
sub
neg
sbb
and
jae
pushf
sbb
push
mov
cld
inc
mov
jge
movb
pushl
mov
faddl
and
pusha
sbb
sub
mov
fwait
xor
decb
movsl
add
push
pusha
fwait
push
fwait
test
mov
cmp
addr16
sbb
popf
sbb
jne
or
into
jmp
data16
mov
sbb
jae
inc
cmp
and
addr16
dec
push
jmp
fnsave
xorb
inc
sbbl
ss
test
pop
and
lret
adc
clc
js
fcmovnu
add
xor
addr16
sub
pop
hlt
jle
xchg
jle
add
cmpsl
pop
out
rorb
add
ljmp
push
xor
push
push
pop
testl
add
fucomi
sahf
mov
cmp
iret
mov
mov
test
inc
mov
xor
dec
or
jnp
mov
inc
adc
jge
rcll
js
ja
jbe
sbb
loop
dec
ret
xchg
cmpl
ret
add
cmp
lahf
xor
add
test
add
or
xchg
notb
inc
sub
ja
cs
ffreep
or
mov
jne
push
add
bound
mov
lret
mov
jmp
sahf
xchg
das
pop
mov
xor
jg
loopne
sbb
inc
inc
push
add
enter
and
sbb
iret
xchg
pusha
adc
push
das
and
sub
push
jno
hlt
or
or
pop
js
mov
pop
sub
add
inc
or
xchg
or
xor
fs
imul
in
add
scas
je
mov
pop
lock
xchg
dec
or
mov
insb
add
stos
leave
mov
enter
add
and
inc
out
andb
or
jo
rcr
add
push
add
mov
fiaddl
sub
decl
inc
fsubr
or
clc
icebp
mov
push
xlat
push
insl
or
sahf
xor
jle
dec
add
es
insb
jnp
adc
and
in
pushf
fs
and
adc
fnsave
stc
fucomi
out
or
sub
push
lea
cmp
push
sti
pop
pop
cld
loopne
inc
add
sti
pop
add
xchg
push
push
add
push
push
add
xchg
pop
pop
xchg
jnp
imul
in
dec
jg
shlb
loope
in
mov
cmp
decl
jl
cmp
jg
sub
jmp
cmp
sbb
jmp
cmp
jl
cmp
js
outsl
lret
jg
aaa
dec
mov
mov
xchg
push
push
push
daa
or
mov
mov
in
daa
aam
adc
mov
mov
rorl
dec
mov
push
mov
sbb
js
addr16
sbb
nop
insb
adc
negb
nop
xor
push
pop
iret
jle
hlt
lcall
pop
call
out
push
xor
add
dec
push
or
push
faddl
push
inc
mov
jns
sbb
insl
popa
or
mov
jecxz
mov
mov
adc
fisttps
add
dec
loopne
inc
clc
das
shr
pop
dec
lods
and
push
xchg
jle
not
add
lea
mov
mov
xchg
shr
adc
pop
gs
icebp
jmp
mov
loopne
movzbl
pop
cltd
idiv
inc
push
call
stos
filds
fwait
jb
pop
insb
andb
enter
or
test
lock
and
push
push
jo
lock
mov
xchg
sbb
inc
add
or
xlat
xor
clc
fdiv
pop
adc
cld
and
add
mov
jle
ret
jae
mov
add
clc
in
cmc
clc
ds
xor
mov
shl
icebp
loope
iret
sub
fdivr
mov
push
pushf
lock
inc
xchg
adc
xor
ret
scas
inc
or
nop
push
out
test
push
shrl
sbb
jbe
int3
jnp
loope
jae
mov
inc
or
in
mov
jns
int
cmp
and
jbe
les
add
pop
aad
sub
xchg
in
cld
iret
sete
and
sbb
outsl
sub
ret
scas
pmaxsw
and
js
lret
outsl
mov
sbb
les
add
cmp
pop
pusha
mov
iret
repz
or
mov
or
jp
inc
xchg
push
xchg
and
jnp
sub
dec
pop
inc
xor
jmp
mov
call
cmp
adc
popf
enter
add
push
insb
adc
mov
movsl
cmp
jbe
cmp
je
daa
cld
out
cs
call
xor
cmp
clc
jb
adc
inc
test
push
in
adc
mov
out
cmpsl
movsb
or
and
jnp
cmp
insb
push
das
xchg
out
andl
popf
pushf
xchg
pop
sub
sbb
mov
test
jne
xchg
mov
loope
add
jnp
dec
push
dec
pop
sub
cmp
pop
push
xor
cs
push
pushf
adc
pop
xlat
lcall
xlat
mov
jne
push
mov
add
inc
imul
hlt
shrb
jle
inc
pop
sub
pushf
fsts
mov
push
push
push
push
push
and
sbb
mov
sub
mov
and
push
popa
js
testl
lea
add
add
sbb
lret
dec
push
fsubl
sbb
add
push
pop
sbb
dec
fwait
adc
cmpsl
mov
or
in
scas
and
push
and
ss
jb
adc
push
sub
sbb
loope
mov
pop
dec
movsb
mov
into
call
insb
and
aas
jl
or
sar
push
pop
mov
ljmp
sbb
mov
shr
in
add
std
sbb
pop
adc
pop
faddl
sbb
lock
cmp
call
push
ss
jb
sbb
adc
mov
mov
sbb
lods
push
fldpi
sub
push
pop
pop
fwait
test
ds
cmp
divl
lds
mov
inc
mov
cmp
adc
loop
push
and
test
hlt
ss
loope
ficoms
sbb
ljmp
mov
fs
mov
loopne
and
push
fcomp
jge
cmpb
test
popa
mov
pop
adc
decb
test
jbe
lods
pusha
xor
adc
jns
push
stos
push
insb
push
cwtl
fists
mov
cmpb
push
stc
cmpl
add
addr16
bound
and
mov
push
dec
enter
jo
mov
xchg
pop
cvtdq2ps
or
jo
pop
nop
mov
pop
push
cmp
mov
dec
sbb
jo
enter
mov
inc
mov
shlb
add
lahf
aad
pushf
in
push
clc
cwtl
cmp
pop
inc
jmp
jl
adc
es
shlb
icebp
add
add
test
aad
frstor
jbe
insb
hlt
jp
pop
cmp
out
sbb
jecxz
sbb
xlat
and
jb
iret
inc
or
push
xor
popa
mov
cmp
dec
push
push
push
mov
inc
inc
rolb
cmp
inc
inc
shlb
jo
imul
push
shrb
cmp
popa
inc
jbe
and
hlt
ret
mov
jl
loop
push
sub
fisubs
adc
adc
in
sbbb
or
insl
xor
xor
inc
sarl
pop
xchg
inc
ficomps
repnz
cld
shll
dec
data16
mov
inc
fadds
pop
inc
jns
int
fcoms
mov
dec
rclb
ja
inc
loopne
mov
lock
jmp
push
je
sub
and
sub
loope
loope
mov
lods
stos
fwait
xchg
mov
push
mov
test
add
clc
push
lods
pop
test
push
dec
mov
xchg
aad
in
lock
nop
fldt
stos
xchg
sti
pop
dec
pushf
cli
add
lret
mov
add
sbbb
fcompl
jo
mov
push
popf
inc
mov
pop
cmp
mov
je
aaa
in
in
xchg
add
sub
and
in
dec
adc
xlat
dec
and
pop
add
sub
mov
sbb
int3
in
nop
std
and
loopne
fsubp
adc
cmc
add
aas
or
cmp
sete
mov
push
push
jge
or
pop
stos
cmp
je
or
pushf
xor
or
cmp
cmp
call
and
xor
lahf
nop
iret
shl
push
int
ljmp
sbb
sub
into
or
xchg
pop
pusha
cwtl
icebp
js
jbe
outsl
addr16
inc
xchg
lds
sbb
rol
mov
and
sub
push
ljmp
in
fisttpl
xor
lock
mov
and
je
outsb
xchg
mov
inc
mov
fld
pop
xchg
sbb
lea
cmpl
stc
sub
cwtl
xor
pop
aas
cwtl
push
push
pop
push
adc
loop
sbb
jae
dec
inc
pushf
mov
inc
cld
jo,pt
popf
popf
pop
mov
or
outsb
leave
mov
jo
sahf
sbb
cmp
xor
cbtw
in
add
bound
xlat
add
aad
inc
push
in
aam
jge
sbb
stos
or
inc
enter
stos
les
cld
std
add
in
es
pop
or
or
and
xor
mov
in
outsb
pop
mov
mov
jo
inc
loopne
cwtl
test
mov
insb
pop
jb
sti
sbb
ss
pop
in
std
dec
or
cli
fs
jnp
xor
xchg
mov
sub
push
push
jmp
jns
popa
out
fs
scas
sbb
jae
std
nop
or
sub
mov
leave
and
popa
nop
sbb
jb
sti
and
inc
sti
cmp
and
push
test
rorl
sub
mov
enter
andb
jb
mov
cs
cmp
cld
movsb
das
mov
cmpsl
in
je
cmp
nop
pop
repnz
cld
pusha
sti
cmp
mov
pusha
fimull
dec
sbb
les
aaa
xchg
pusha
mov
mov
mov
popf
sbb
xor
sbb
adc
mov
push
sbb
es
arpl
ja
adc
lods
xor
std
cmc
push
and
rolb
push
hlt
in
mov
fwait
jbe
fldt
or
cld
add
aaa
pushf
mov
leave
cmp
hlt
add
xchg
sbb
xchg
cmp
in
pop
in
aam
and
cld
leave
xchg
sbb
in
xchg
cld
and
xchg
hlt
xchg
cld
xchg
cld
add
and
dec
sahf
jno
cmpsl
push
fadds
sbb
arpl
xchg
dec
stos
lahf
jmp
jg
leave
pushl
push
cmpsl
mov
jne
mov
xor
mov
mov
enter
in
xor
test
pop
push
jns
bound
pop
jl
lea
jbe
and
in
inc
test
in
jmp
cs
push
push
gs
pslld
loopne
int3
push
pusha
sbb
cmc
rclb
cld
fs
fstpt
lret
stc
inc
sbb
push
xchg
xchg
imul
and
inc
fsubrl
fwait
or
clc
mov
out
adc
adc
repnz
jecxz
dec
pop
ljmp
dec
sbb
mov
jb
cmp
adc
adc
cmp
js
nop
pop
mov
or
and
xchg
rcrb
and
rclb
sub
and
out
shll
push
mov
pop
shlb
cmpsl
fmull
xor
test
icebp
clc
sub
adc
cld
pop
test
jne
push
sbb
push
cmp
cmp
js
cmp
clc
lret
or
rcr
pop
imul
push
pusha
outsb
sub
sbb
mov
mov
mov
lds
mov
add
sbb
movsl
or
or
aad
push
lods
in
or
push
cmp
cmp
pop
je
dec
cmpsl
shrl
inc
sbb
insl
pop
xchg
and
xchg
push
push
xor
adc
xchg
js
jg
clc
push
push
js
imul
sti
mov
test
mov
mov
adc
mov
mov
daa
jne
test
jne
push
jl
lock
pop
lock
push
pop
in
gs
xor
stos
and
ret
adc
dec
outsl
ficoms
adc
mov
cltd
notb
in
inc
dec
test
push
cmpsl
push
mov
icebp
aaa
xchg
loop
push
ja
call
fucomi
mov
call
push
push
pop
or
xor
rcl
jmp
push
idivb
add
xor
mov
ud1
jmp
cmpb
test
jg
fidivrs
rcll
pop
mov
leave
mov
repnz
rorl
loopne
or
dec
lods
push
push
lahf
pop
negl
or
cmpb
je
mov
pop
mov
dec
adc
or
cmovg
push
add
sbb
out
push
or
in
sub
jmp
push
pop
leave
test
test
popa
inc
test
cmp
pop
cld
testl
rcrb
adc
loopne
loope
rcr
pushl
fcomps
xor
jne
push
mov
jno
lcall
and
or
push
insb
add
movsl
add
negb
fisttpll
cmpl
je
loopne
jmp
push
mov
cmpl
jne
mov
pop
push
jmp
push
add
mov
add
xor
nop
ja
cmpb
push
mov
ja
fcmovne
inc
jmp
jl
sub
cmp
push
inc
sar
in
aas
xorb
loopne
pop
jp
mov
sahf
push
aaa
add
xchg
pop
pop
pushl
jbe
call
mov
inc
iret
dec
divl
pop
addl
mov
cmp
fsubrs
push
sbb
inc
lock
jmp
jg
mov
mov
fs
roll
roll
ret
lcall
cmp
mov
jne
xor
jmp
lea
repz
hlt
push
push
lds
or
pusha
pushf
jge
or
jle
jo
jg
and
adc
mov
and
mov
jmp
sub
jne
mov
sbbl
jle
sub
into
testb
mov
mull
ret
inc
adc
daa
add
sti
add
fstps
sub
cmp
je
jmp
pop
push
or
repnz
push
mov
gs
push
xchg
jne,pt
arpl
and
add
adc
or
sbb
sub
shlb
xchg
push
hlt
cmp
je
dec
sub
push
xchg
xor
push
mov
or
xchg
mov
gs
ret
in
push
pop
test
inc
add
mov
lea
and
cltd
nop
out
hlt
test
push
push
pmaxsw
inc
test
mov
mov
or
push
add
lock
xor
jge
push
pop
lods
aaa
pop
sbbl
cmp
cs
addl
push
mov
or
lock
call
or
inc
pop
fwait
cmp
dec
in
push
jge
add
jmp
xchg
ret
pop
cmp
fcomps
js
jo
push
push
pusha
or
lcall
jnp
rcll
pop
sarb
cs
push
sub
inc
loopne
pop
mov
or
insb
icebp
cld
cmp
push
inc
cmp
inc
xchg
push
ss
push
sahf
inc
jae
cmp
xchg
jmp
aas
fdivrs
push
mulb
jmp
push
test
subl
xor
adc
sbb
or
test
xor
mov
or
push
cmpl
test
sbb
je
aaa
enter
je
and
insb
cmp
xor
pop
sbb
ja
addl
and
loop
pop
cmp
lods
dec
mov
divb
ss
dec
pop
fmul
mov
hlt
loopne
push
test
cmp
adc
push
jge
push
push
es
sub
sar
mov
mov
dec
sbb
sub
adc
mov
call
shll
push
loope
lea
jmp
push
dec
push
fdivrl
push
jmp
sarb
fcompl
push
pop
mov
sbb
cld
jo
jbe
or
cmp
jne
or
adc
jmp
aad
sbb
add
pop
or
jne
pop
mov
iret
push
in
push
dec
adc
daa
les
xor
ljmp
decb
or
scas
push
push
xor
adc
mov
or
or
ss
jmp
cmp
jne
mov
fcoms
and
inc
lea
cmp
pop
push
test
ret
add
and
data16
jg
xor
jmp
lea
dec
xor
jl
push
loopne
andl
lea
je
andw
adc
adc
mov
hlt
fwait
xchg
sub
and
cmp
icebp
pusha
stc
or
xor
shlb
pusha
subl
pop
xchg
cs
cltd
cmp
cmpsl
xchg
je
inc
jmp
popa
and
or
rcrl
mov
fucomip
mov
movw
mov
rorl
or
sub
sbb
push
xchg
fisubs
add
or
push
jl
data16
popf
leave
mov
pop
sbb
jge
cmp
je
dec
test
or
pop
jmp
insl
mov
addr16
sub
cmp
jne
out
inc
lea
pushf
loope
sbb
sub
loope
shl
gs
jmp
jns
mov
xor
and
push
push
mov
ja
xor
sbb
es
mov
sti
clc
and
test
test
pop
xor
xchg
imul
or
inc
mov
mov
lea
sub
cmp
mov
pop
mov
add
subl
or
push
mov
movsb
xchg
rorl
enter
mov
mov
lea
inc
pop
movsb
subb
push
lds
and
pop
rorl
xor
in
mov
data16
cli
lock
xchg
inc
inc
add
cli
std
jge
add
add
inc
inc
jmp
and
add
xor
movsb
cmp
and
fmull
clc
ss
es
add
xor
and
scas
pop
pop
loope
add
mov
sub
xor
jge
jns
xor
in
pop
inc
push
jle
pop
jge
js
aad
in
xlat
pop
inc
inc
pop
jl
icebp
mov
ret
shlb
push
inc
adc
ss
add
pop
fiadds
jg
jge
je
lds
arpl
in
rorl
sbb
sub
jmp
lea
cmp
sub
push
daa
lea
and
jno
mov
push
jae
mov
or
mov
sub
xchg
pop
cmp
and
repnz
clc
jg
fs
xchg
mov
xor
dec
mov
inc
pop
add
adc
add
or
mov
sub
jecxz
pop
hlt
xchg
clts
mov
mov
popa
xor
pop
jbe
ret
shll
cltd
jl
lods
sarb
rcl
js
cld
mov
jb
outsb
das
push
jle
inc
xchg
or
hlt
rclb
clc
mov
jecxz
adc
fistl
push
mov
jne
push
mov
mov
or
pop
setge
and
push
xor
js
insb
jno
cmp
sbb
xor
shlb
enter
aas
test
shll
mov
stos
andl
jno
push
int
imul
inc
rcrl
add
mov
add
xchg
adc
out
pop
or
cmpl
xchg
data16
push
je
stc
add
nop
push
cld
jmp
lea
mov
ret
sbb
js
cmp
ret
add
push
fcoml
mov
pushf
mov
not
adc
hlt
xor
jl
mov
push
repnz
xor
sbb
push
das
dec
cs
mov
jmp
out
movl
je
jno
sub
jb
mov
shll
call
push
cmc
add
in
mov
jmp
cmp
add
sub
in
sub
sub
clc
mov
xor
lock
dec
je
add
inc
sbb
or
hlt
fiaddl
adc
sub
lods
sbb
stos
push
sub
insb
sbb
add
cmp
rorb
cmp
ret
xchg
js
jmp
push
xchg
loope
psrlq
cmpb
jle
push
rcrl
orps
xchg
in
dec
outsl
and
loope
sub
clc
or
jbe
push
bswap
jmp
mov
mov
dec
jne
movl
and
sti
testb
adc
sbb
xor
nop
sbb
adc
push
sub
push
lea
mov
and
rolb
sub
sub
add
sbb
mov
fdivr
xchg
inc
cmp
sub
mov
mov
addl
sbb
push
mov
test
lods
mov
adc
and
mov
inc
dec
pop
rorb
mov
xchg
lcall
dec
ds
pop
fadds
popa
sti
jl
sub
push
ror
adc
xor
pop
mov
add
mov
inc
cmpb
daa
cmp
mov
push
pushf
add
inc
insb
add
cs
cs
cmp
inc
xor
sub
lock
cmpsl
add
in
mov
jmp
mov
stos
xor
sarb
cmp
jo
lcall
fstps
in
mov
neg
and
jl
or
jle
or
xchg
loope
jne
xchg
shlb
jmp
pop
outsl
test
mov
hlt
push
fisttpll
mov
pop
daa
push
push
add
fstpl
cmp
inc
dec
gs
pop
loopne
dec
xchg
aas
push
daa
jne
xor
add
and
out
jle
dec
lea
cmp
das
jae
cmp
clc
in
add
mov
inc
inc
cmp
jb
ret
jne
or
push
jl
lcall
outsl
or
cmp
pop
ss
xor
pop
push
sahf
mov
and
or
in
pop
mov
inc
cmpsl
ds
lock
pop
rorb
repnz
push
addb
je
inc
xor
dec
es
mov
lock
popf
jne
add
pop
add
push
unpckhps
shll
rorl
lock
stos
xor
cmp
jne
push
fwait
bound
movsb
mov
cmp
ret
inc
int
inc
pop
cmp
ja
jge
ds
fmuls
sub
nop
add
and
lret
std
out
loope
and
clc
mov
add
mov
xor
push
roll
mov
mov
or
sti
decl
loop
push
mov
sub
cmp
jg
inc
ds
rclb
mov
inc
or
adc
or
xor
mov
lods
emms
xchg
cmp
jne
aam
dec
mulb
in
rolb
or
mov
fs
dec
mov
jge
mov
negl
leave
out
xor
inc
daa
sub
faddl
sub
out
push
fcoml
lea
cmp
and
mov
pusha
cwtl
cmp
lea
out
movsl
or
loope
add
xchg
adc
add
and
and
add
ficomps
adc
outsl
xchg
je
call
mov
jg
mov
add
jmp
inc
xchg
add
xchg
pushf
sarb
mov
cmpsb
ret
or
ja
push
inc
sub
jl
mov
lds
jne
fbld
test
sbb
inc
bound
ret
icebp
pusha
and
push
push
ret
enter
gs
cld
add
and
xorb
loopne
lock
punpckhbw
sbb
arpl
or
push
or
mov
jmp
nop
sub
add
sbb
fldt
and
fistl
sbb
xor
or
fs
mov
sbb
cmp
jg
mov
movzbl
lcall
ret
push
gs
out
jmp
adc
and
mov
inc
push
aaa
mov
add
push
cmp
xor
test
fmull
mov
addl
lods
adc
je
lret
pop
xchg
or
jnp
cmp
rcll
jnp
cld
xchg
fsts
inc
insb
outsl
add
jmp
xlat
xchg
data16
popa
insl
xor
sbb
inc
jnp
jne
jle
xchg
sbb
fwait
lret
imul
pop
pop
sahf
push
shr
add
nop
or
or
je
inc
dec
sbb
fadds
pop
fdivrs
cmp
insl
or
mov
jecxz
arpl
jne
or
je
push
nop
or
pop
inc
roll
or
in
mov
ret
adc
leave
push
add
lcall
ffreep
ret
imul
jno
fnstenv
nop
loopne
cmp
or
mov
push
push
rol
mov
mov
sbb
cmpsl
insl
sarl
repz
inc
xor
sarl
cld
cld
mov
test
lea
jmp
fdivs
sub
jae
sub
loope
add
push
sub
cmp
in
pop
mov
sub
test
pusha
push
cmp
xchg
mov
dec
inc
fisubrl
stc
inc
and
pop
loop
dec
jb
xor
mov
enter
adc
xchg
and
sbb
mov
negl
dec
add
mov
sub
xchg
ret
pop
sbb
lock
lods
int3
mov
daa
out
mov
insl
fisubs
adc
ret
test
lea
fdivrp
hlt
pushl
push
push
and
ret
jnp
imul
call
dec
outsb
in
call
lds
cmp
push
sub
lods
cld
in
cmpsl
pusha
adc
push
insl
jns
mov
mov
out
jno
leave
or
adc
int
movsb
int
xor
xchg
cli
mov
cmpl
jmp
cmp
and
and
shr
mov
movsb
xchg
mov
mov
rorb
cltd
leave
je
push
mov
aam
imul
mov
push
cmp
or
adc
inc
push
test
movsl
cmp
push
leave
dec
push
stc
loopne
sub
fimuls
push
and
mov
inc
or
push
jne
fmuls
daa
aad
adc
mov
lock
xor
push
sbb
add
pop
add
cmp
sub
or
data16
add
pop
xsha256
cmpsb
adc
jne
ja
add
movsl
cmp
jno
fbstp
das
cmp
push
sub
je
sbb
push
jl
add
in
lcall
cmc
sbb
push
jbe
xor
pop
sub
jecxz
test
popa
push
mov
lock
xlat
xchg
mov
mov
out
jbe
pop
mov
pop
cmp
jge
jnp
movl
inc
sbb
xchg
shl
mov
dec
lea
insl
fidivrs
movzwl
call
in
pop
adc
mov
aam
xorl
aas
inc
test
ss
adc
into
inc
inc
cmp
cmp
pop
lcall
mov
test
mov
xor
hlt
je
daa
add
rorl
es
cmpb
jne
movb
push
inc
and
cltd
sbb
mov
mov
fisubl
push
inc
inc
sbb
aad
push
scas
pop
sti
jne
push
call
popf
inc
in
fsubrs
push
sti
cmp
or
mov
pop
xchg
insl
mov
mov
lods
and
shrb
mov
out
push
cmp
loopne
insb
idivb
add
add
repnz
je
js
xor
sub
jmp
mov
stos
pop
and
nop
and
scas
test
mov
sbb
add
dec
cltd
sub
mov
sar
mov
or
jne
daa
aaa
adc
add
mov
push
mov
mov
fldl
sbb
sub
movq
jle
daa
orl
lock
test
dec
cli
xlat
mov
iret
and
popa
mov
pop
cld
adc
pop
sub
shl
or
cwtl
loope
push
hlt
mov
mov
or
adc
add
mov
sbb
xchg
push
lea
push
fucomip
adc
jl
pop
ss
scas
xor
push
lea
pop
mov
adc
fcomps
mov
sub
inc
cmp
dec
sbb
mov
and
mov
mov
inc
push
orl
shl
mov
sub
and
dec
mov
mov
cmp
inc
and
inc
dec
xchg
dec
das
sub
out
movsb
xchg
mov
enter
mov
fucomi
paddq
lods
ret
into
xor
in
cmp
xchg
hlt
mov
push
inc
jle
cmp
jle
jmp
ret
pop
add
in
sbb
cmp
repnz
xor
ret
je
addl
pop
add
and
movl
xor
push
inc
sbb
xor
sub
dec
jb
ret
push
sub
clc
inc
lea
aas
jg
mov
neg
sbb
and
push
xchg
sti
inc
rcll
enter
mov
notb
sub
sub
sbb
fists
ds
push
jae
repz
and
jmp
push
push
and
notl
sbb
mov
test
mov
test
inc
jb
adc
imul
push
imul
xor
add
daa
cld
mov
push
mov
and
arpl
test
mov
push
xchg
mov
and
and
push
cmpsl
add
imul
and
repz
push
mul
gs
sub
xor
cli
rep
stos
stos
pop
push
cwtl
lods
dec
dec
add
xchg
mov
mov
push
sub
sub
in
ds
nop
or
lea
hlt
dec
push
clc
sub
popa
push
loope
or
jl
or
jb
pop
xor
xor
pop
jo
push
dec
mov
rclb
shrb
repz
dec
loope
or
push
xor
call
and
mov
add
cmp
cmp
imul
cltd
xor
dec
pop
sbb
aaa
sbb
fs
lock
push
or
cmp
sbb
in
lea
sbb
pop
sti
cwtl
popf
add
inc
pop
mov
xchg
jno
cmp
rolb
aam
pushf
push
mov
or
push
xchg
ja
ss
movsl
mov
or
rcrl
mov
inc
daa
daa
aaa
adc
push
push
sbb
aad
andb
aas
inc
daa
fs
pop
repnz
sbb
inc
jo
sub
popa
add
fmul
out
js
push
jne
pusha
les
push
subb
setne
pop
xchg
mov
into
fucomip
leave
pop
cmp
insb
popf
xor
psubq
jne
pop
pop
jmpw
mov
pop
shr
sub
stos
ss
cmp
mov
push
gs
and
fiadds
rcll
adcb
pop
adc
enter
push
cmp
enter
inc
xchg
mov
fidivs
test
stos
jno
lds
and
xor
push
or
dec
or
add
adc
nop
mov
int
test
ret
lods
test
mov
xorb
mov
icebp
and
add
dec
mov
add
into
and
and
lock
adcl
push
cmp
test
mov
push
ss
adc
adc
cmp
push
jl
mov
adc
dec
add
fistpll
sahf
dec
rolb
inc
sub
add
pop
jmp
test
mov
inc
mov
out
add
rcrl
test
push
mov
add
in
cmpb
cwtl
rcrl
lret
inc
in
out
adc
sub
sbb
ret
jne
and
je
fstpl
aas
and
data16
lds
xor
add
lea
mov
inc
mov
scas
clc
test
pop
xor
sarb
push
xor
jg
mov
jmp
test
push
cwtl
inc
jmp
repnz
les
test
inc
mov
xor
and
test
mov
enter
pop
dec
mov
dec
rolb
mov
mov
idivb
movsw
movsb
jnp
popa
fbld
dec
cmp
adc
imul
aam
inc
or
jl
inc
cli
xchg
shlb
inc
setne
rol
data16
imul
fcompl
rcll
sub
mov
push
movsl
pop
cmc
icebp
inc
sti
push
mov
xchg
pop
add
loop
nop
dec
pop
sbb
or
ljmp
adc
mov
imulb
cmp
inc
fsubp
xchg
cmpl
enter
test
add
jl
sahf
dec
mov
push
je
mov
shll
sub
cmp
loope
lret
jns
xchg
jg,pn
mov
xchg
xlat
mov
mov
jo
roll
stos
and
outsl
cmpsb
jp
bound
jo
mov
inc
repnz
inc
jbe
dec
out
push
repz
cmp
fsub
iret
mov
mov
sub
fwait
aas
adc
nop
mov
adc
or
adc
inc
mov
inc
push
adc
movsb
bound
or
hlt
dec
pop
in
negb
lods
and
in
cli
xchg
push
enter
and
cmp
sub
jne
cmp
jne
jge
mov
jae
loopne
mov
cwtl
add
cld
pop
test
sbb
sbb
mov
and
dec
sbb
jge
push
push
call
add
mov
mov
jbe
jnp
fiadds
lret
imul
nop
add
jo
and
fdivs
push
fcomps
sarb
mov
push
rorl
mov
out
ja
xor
daa
mov
enter
je
jne
push
xor
inc
orl
cmp
rcl
add
or
mov
sbb
stos
jo
nop
popa
adc
std
mov
pop
adcb
incb
inc
jmp
inc
xor
call
testb
je
andl
push
push
cmc
and
lahf
xchg
ss
sti
pop
xor
iret
enter
add
je
loopne
cmp
xchg
int3
sbb
add
out
jmp
cmp
pop
sub
jae
outsb
sbb
pusha
in
inc
js
ljmp
shll
lods
sbb
in
into
xchg
push
lods
js
mov
cmp
push
and
das
xor
aam
lcall
movsb
add
les
dec
jns
adc
sbb
fadds
iret
pop
lods
adc
pop
lods
mov
pop
mov
and
push
mov
mov
out
enter
loope
lods
xchg
stos
test
sbb
cmc
sub
mov
and
dec
stc
push
push
movsb
jo
add
inc
xchg
aaa
mov
xchg
pushf
scas
inc
nop
and
push
jb
test
pop
jno
cld
out
cmpsl
aad
mov
bswap
mov
cmc
mov
inc
xchg
add
pop
adc
f2xm1
je
or
mov
rclb
loopne
adc
push
dec
sub
insb
adcl
outsl
jecxz
add
adc
sub
hlt
fistpl
ds
popf
mov
lods
adcl
jecxz
sbbl
faddl
stc
dec
js
add
sub
sub
adc
jne
pop
pop
sbb
inc
shl
sub
push
sub
push
movl
dec
push
stc
fimuls
jmp
xor
adc
add
fidivrs
xor
fadd
dec
sti
stos
or
add
loopne
mov
ds
fimull
or
push
sub
xchg
stc
loopne
icebp
jno
dec
repnz
add
mov
test
aad
loope
jne
push
clc
sub
push
cltd
pop
idiv
ret
add
or
xor
test
mov
or
sub
icebp
adc
push
and
add
dec
jne
push
pop
push
cld
push
cmpw
aas
adc
fadd
imul
ret
mov
inc
xor
lds
scas
mov
lea
mov
jmp
movlps
push
pop
add
stos
jmp
mov
add
data16
mov
divb
xor
adc
roll
frstor
inc
push
repz
xchg
leave
div
xor
push
inc
sbb
stos
pop
sub
and
xor
pop
je
xchg
jne
add
xor
lea
fwait
aaa
lahf
mov
dec
mov
sub
popa
lcall
or
sub
jns
lea
jecxz
mov
in
jle
mov
ret
push
ss
push
pop
mov
or
or
sarl
lock
or
sub
add
dec
clc
lds
stc
js
add
jns
push
in
les
pop
cmp
mov
add
in
lock
mov
test
hlt
pop
mov
rclb
adc
lea
cmp
call
sbb
xchg
mov
out
or
hlt
popf
in
jne
dec
sub
sar
or
mov
fnstcw
rcrb
outsl
popa
adc
insb
mov
jle
or
loopne
mov
mov
jb
gs
pushf
das
add
jmp
inc
ret
clc
sarl
clc
jl
sahf
cmc
add
or
sub
push
or
test
push
in
or
lock
adcl
push
movsl
push
aas
mov
lods
jge
out
jbe
ss
xchg
js
pop
ja
mov
and
or
mov
jmp
jbe
retw
sub
or
jmp
dec
or
adc
jle
xor
mov
inc
mov
push
push
add
pop
or
notb
xor
sub
jne
lret
jp,pt
adc
cmp
jne
dec
or
xlat
add
push
mov
aaa
mov
enter
pop
cmp
fmuls
push
add
or
or
shll
enter
adc
scas
pop
inc
add
add
jecxz
idivl
mov
in
add
cmpb
jl
or
mov
movb
cmp
ja
xor
push
loope
adc
inc
shlb
mov
lahf
adc
dec
rolb
mov
fs
loop
push
dec
add
out
dec
mov
cmp
add
push
subb
jo
and
lea
jne
fistl
mov
and
sbb
and
push
push
call
inc
or
inc
sub
fsubs
pop
loopne
dec
mov
adc
push
icebp
push
inc
cmp
jb
enter
cmp
push
push
ja
inc
lds
sub
dec
enter
sbb
lea
lea
or
pop
rorb
jmp
jo
adcl
adc
cmp
je
dec
jmp
and
aad
xor
notl
add
rorb
push
pop
add
aas
inc
stos
test
push
out
cmp
jne
or
aaa
push
bound
cmp
jno
ret
jmp
cld
cli
xor
push
cmp
mov
or
mov
in
int
loopne
testb
sarl
ljmp
adc
shlb
or
in
mov
push
movsl
movl
je
ja
push
cmp
cmp
je
cltd
icebp
movl
push
mov
sbb
pop
enter
mov
aad
xchg
cmp
add
pushf
data16
test
or
gs
xchg
push
push
xchg
push
fucomp
ficoms
jno
bound
leave
scas
psubsw
jmp
test
add
mul
cmp
mov
jns
pop
push
hlt
out
lock
sub
rcll
xchg
xchg
inc
or
sysexit
icebp
sbb
or
push
add
sub
lock
dec
mov
jnp
repnz
ficomps
or
add
dec
jl
xchg
dec
xor
pusha
inc
sub
jbe
adc
add
cli
xor
push
cmp
mov
xchg
mov
call
fisttpll
jno
imul
jne
rcrl
push
or
adc
mov
popf
imul
jne
clc
cmp
enter
mov
adc
testl
aad
int
mov
mulb
cmp
cmpl
inc
adc
lea
addb
das
pushl
mov
push
movsl
pop
jnp
das
pop
fadds
sbb
pop
jb
je
jb
pop
jb
push
pop
pusha
push
cmp
movl
xorl
outsl
add
addb
adc
or
dec
hlt
push
jp
sub
and
sub
outsl
loope
push
out
adcb
insl
movsl
cmp
jns
sub
adc
and
add
fildl
xchg
inc
jecxz
dec
push
or
mov
mov
int
dec
ja
lock
dec
in
adc
jge
xchg
rorl
das
push
gs
add
ja
sub
jmp
femms
clc
mov
fmull
das
sbb
mov
xor
or
imul
adc
cmp
je
cmp
jb
or
jbe
add
je
cmp
sti
xchg
je
dec
sarl
ja
inc
adc
jp
mov
jmp
into
pop
pop
jmp
lock
or
cmpb
xchg
lock
test
sbb
and
sahf
jecxz
and
push
mov
jle
adc
shlb
inc
sbb
stc
adcb
insl
mov
add
cmpl
movsb
aas
jne
mov
push
add
pushl
inc
and
notb
in
in
xor
pop
arpl
cmpb
loopne
and
and
pushf
pop
sbb
inc
or
stos
push
stos
pop
xor
xor
adc
push
test
pop
or
push
clc
push
push
pushl
mov
pop
adc
cmp
pop
dec
mov
or
stc
mov
loopne
adc
cmp
sub
repnz
in
add
push
das
lret
mov
je
jl
mov
repnz
call
cmpsb
cwtl
mov
std
inc
shrb
enter
sub
mov
add
idivl
scas
sub
push
jle
adc
and
movl
int
adc
and
jns
add
add
add
add
cmp
movsl
inc
and
or
js
push
xchg
and
xor
cmp
inc
adc
out
lock
dec
test
sbb
inc
xchg
jmp
add
sbb
rcrl
fwait
sub
add
pop
sbb
inc
sub
sbb
pop
pop
sbb
rolb
js
mov
xor
and
arpl
push
jmp
mov
out
test
or
mov
jno
or
sub
dec
jl
loope
sbb
inc
neg
sbb
mov
push
mov
aas
test
or
dec
leave
add
inc
add
aaa
rolb
arpl
and
push
add
xchg
scas
fsubrs
popf
cmpsb
clc
mov
add
cmp
jge
add
dec
inc
inc
inc
mov
xchg
add
cs
or
daa
push
cmp
xor
dec
scas
xchg
mulps
cltd
jecxz
push
mov
pushf
jne
or
pop
cmp
mov
movb
xor
inc
dec
sti
jbe
mov
sub
std
cmpl
rcrb
jnp
mov
insb
shr
and
jp
push
adc
pushl
test
xor
or
pop
outsl
sbb
lds
addl
insb
data16
clc
cmp
push
aam
xlat
jge
cld
inc
jno
lret
xchg
jg
add
push
movsb
es
in
xor
sar
inc
adc
movb
js
xor
repnz
lock
je
push
rolb
mov
jg
enter
inc
hlt
push
push
sub
push
jb
add
jne
mov
shlb
adc
arpl
ja
rolb
loopne
sar
sbb
add
mov
pop
rolb
in
frstor
hlt
call
mov
movsl
jae
sub
cmpb
xor
je
cmp
dec
cmp
int3
lret
and
pop
sub
lock
or
push
xor
mov
inc
sub
test
les
adc
dec
adc
in
xor
push
pop
roll
sub
push
mov
pop
fs
jp
fs
or
inc
dec
cmpsl
js
enter
enter
je
mov
rol
mov
add
push
call
jmp
and
add
sti
or
add
sbb
xchg
ja
add
mov
adc
imul
inc
push
ret
subl
jbe
adc
and
xchg
adc
cmp
or
dec
xor
or
xchg
dec
xor
or
adc
dec
xor
and
adc
cltd
in
sahf
jmp
sbb
leave
mov
es
cmp
and
dec
xor
and
xchg
dec
xor
and
sub
adc
pop
insb
mov
rclb
pop
out
stc
push
call
and
add
pop
xor
pop
stos
loopne
stos
mov
divb
lea
jmp
shll
mulb
sub
hlt
lds
jbe
push
sbb
pop
jno
mov
sbb
imul
push
je
mov
jge
push
or
cmc
ret
mov
adc
xchg
in
or
adcb
add
mov
push
sbb
or
jl
or
push
mov
push
dec
addr16
and
xor
mov
sub
xchg
fstpt
cwtl
add
ficompl
rclb
xor
or
mov
mov
pop
add
stos
ret
lods
or
inc
inc
inc
xchg
cmpl
orb
sbb
mov
movsl
jns
cmp
insl
fucomip
xor
call
inc
jmp
mov
xchg
jle
push
push
imul
sbb
pop
xor
push
xor
js
mov
inc
cmp
xchg
jnp
mov
dec
xor
sbb
incl
inc
cmp
jl
cmp
jne
mov
cmp
xchg
xor
hlt
pop
fidivs
xchg
sub
test
mov
mov
mov
mov
cli
addb
pop
push
xlat
or
mov
cmp
xor
pop
pop
push
dec
out
pop
add
sbb
xor
push
mov
add
and
ja
push
dec
adc
sub
les
sbb
jg
sbb
bound
jp
gs
loop
scas
punpcklwd
mov
adc
sub
push
mov
inc
xlat
lcall
inc
push
adc
xor
sarl
xlat
sti
push
push
sbb
push
in
push
in
add
push
cmpsl
sbb
jg
addr16
cmpsb
pop
jl
cld
and
mov
push
aas
dec
sbb
jecxz
dec
or
mov
sti
leave
loop
push
push
je
push
add
pop
inc
scas
js
stc
icebp
fsubl
inc
add
js
adcl
jne
push
popa
xchg
cmp
lods
pop
xchg
mov
or
mov
out
push
test
or
jbe
or
les
hlt
or
add
test
ljmp
iret
sbb
adc
push
push
or
aam
xchg
fsubrl
ja
icebp
sbb
dec
pop
mov
push
push
inc
call
add
clc
cld
or
cltd
testl
pop
mov
in
sbb
jp
aaa
enter
dec
aas
fs
movsb
or
gs
lahf
stos
shrl
add
xchg
xor
loope
and
add
jl
jmp
call
or
push
pusha
shlb
and
testl
pop
mov
rorl
mov
adc
push
daa
fxch
ret
xchg
rorb
push
mov
in
fisttpl
push
push
pushf
jge
push
lea
nop
cmpl
imul
pop
clc
xor
cmp
adc
sub
je
mov
mov
testl
das
add
push
or
jae
push
jmp
scas
add
cmp
sub
andl
icebp
add
push
push
or
hlt
je
lahf
dec
or
adc
out
pop
mov
lods
aaa
mov
lds
mov
lods
in
rorb
lret
xor
adc
jo
cmp
cltd
notb
sbbl
push
sbb
or
cwtl
push
and
loopne
push
sub
jo
mov
rcrb
jbe
xor
adc
lds
xor
movsb
add
stos
sarb
dec
test
and
inc
repz
add
loope
push
jb
mov
mov
leave
adc
adc
or
mov
jp
pmulhuw
adc
mov
test
lods
aam
mov
and
adc
in
sbb
scas
and
push
push
push
and
add
mov
addr16
cmp
pushf
cmp
arpl
mov
sbb
into
push
push
jmp
pop
stos
pop
lods
mov
jecxz
or
add
and
push
shlb
push
insl
daa
jnp
mov
movsb
aaa
sbb
jge
popa
and
jbe
cltd
push
pop
and
adc
mov
ret
mov
iret
mov
adc
dec
stos
dec
push
loope
cs
int3
xorl
and
imul
mov
inc
mov
dec
fstps
call
xor
fildl
mull
push
aad
je
pop
and
call
push
aam
jno
fcoml
jge
movsl
jo
inc
sub
out
lock
jo
popf
loopne
daa
cmp
inc
pusha
push
or
pop
jnp
jne
sub
jbe
aam
jp
xchg
push
nop
push
sahf
adc
xorl
lock
mov
and
xchg
ret
mov
aas
hlt
dec
loope
push
xor
fs
mov
stc
mov
mov
push
cmp
push
cmp
iret
lds
or
jno
cmp
add
xchg
movsl
mov
xor
cmp
daa
jmp
jne
ljmp
push
pop
cmp
sub
mov
jmp
cld
mov
je
arpl
cmp
insl
adc
pop
push
xchg
inc
stos
push
movsb
mov
pop
in
orb
mov
dec
test
je
divb
in
or
inc
sbb
aaa
mov
jmp
xlat
lds
hlt
shr
sbb
lds
xchg
jecxz
push
or
or
mov
xchg
rorl
mov
xor
jge
add
mov
int3
mov
pop
cld
in
push
or
push
sbb
or
das
mov
add
mov
shr
and
test
pop
stc
test
daa
xchg
pop
or
int3
or
notl
enter
add
mov
cmp
add
sub
push
mov
dec
data16
pop
jne
push
dec
inc
dec
or
test
inc
out
loopne
loopne
data16
jne
mov
add
or
push
lods
pop
cwtl
cmpl
push
mov
xchg
cmp
es
or
pop
std
adc
add
add
bnd
adc
mov
pop
jo
adc
jne
push
movsb
mov
mov
rolb
cmp
fdiv
mov
and
push
es
mov
std
repz
cmp
repnz
xchg
or
cmp
sti
std
repnz
add
in
add
test
push
jmp
pop
mov
or
and
sub
movsl
imul
setno
adc
or
sub
pop
push
std
imul
inc
fcomps
shll
or
lret
stos
cmpsl
inc
or
cmp
jg
add
mov
add
lea
cmp
push
sub
push
mov
inc
int3
or
cwtl
mov
insb
pop
or
iret
rorb
add
inc
xchg
cmp
sbb
or
push
add
cli
dec
shl
xchg
or
sbb
pop
andl
sub
daa
sbb
popa
push
lock
push
or
and
sbb
inc
fmuls
imul
call
xor
in
cmp
pushf
flds
add
jae
sbb
out
and
iret
call
sub
dec
xor
js
mov
cmp
mov
sub
push
rcll
adc
cmp
xchg
cmp
adcl
sbb
and
adc
and
and
in
pop
push
shll
sub
mov
aad
push
lock
ret
sbb
fisubrs
shlb
filds
mov
ja
xchg
inc
data16
or
test
mov
adc
mov
mov
mov
xchg
inc
stc
sub
rcrl
sub
call
inc
fmulp
icebp
dec
je
fiadds
jecxz
or
hlt
je
aaa
and
je
int3
aam
dec
or
shl
clc
icebp
lods
inc
jo
push
push
pop
mov
adc
into
and
jbe
sbb
adc
push
fxtract
stc
push
xor
pusha
fnsave
xor
cmp
loope
adc
enter
ds
pushl
test
xchg
adc
inc
mov
movsl
and
sub
xchg
and
addr16
test
jne
xchg
fs
test
jne
xchg
fildl
psubw
fcomip
cwtl
push
cltd
mov
inc
mov
ret
sub
outsb
push
sub
push
or
add
inc
jmp
rcl
aad
int3
les
xor
lea
popf
enter
or
rol
dec
fiadds
mov
je
sbb
jle
out
adc
pusha
add
aad
ljmp
inc
rol
daa
mov
and
aad
jge
push
push
lret
sbb
mov
data16
cmp
jo
mov
es
pop
cs
mov
pop
je
push
or
fwait
gs
das
push
sbb
nop
lret
or
icebp
shlb
iret
pop
xchg
and
cs
sbb
out
xor
clc
mov
xchg
cmpsl
xor
sbb
nop
fldt
cmp
in
pusha
pusha
insb
insb
and
push
dec
adc
push
ss
jecxz
sub
mov
outsb
adc
pop
cmp
test
repz
movsl
leave
adc
imul
int
lcall
xchg
movsb
cmp
sbb
add
xchg
mov
popa
ja
xchg
fucomip
pop
je
sbb
je
or
sub
jmp
xchg
cmp
push
and
add
ja
ds
mov
add
add
xchg
shll
mov
jns
ret
jmp
cmp
adc
sub
mov
inc
adc
pop
or
cmp
mov
jle
xchg
lea
fimull
or
and
test
pop
jle
cmp
inc
mov
sub
add
push
insb
adc
imul
adc
insl
add
ja
dec
or
jmp
push
xor
andl
xor
add
pop
xlat
mov
or
xor
jb
push
add
inc
nop
cmpsl
xchg
jno
jno
and
inc
xor
mov
pop
cmp
mov
pop
xor
aad
or
adc
mov
leave
add
aaa
adc
xor
jae
push
jmp
lea
dec
fsub
add
fnsave
inc
lea
aaa
arpl
inc
loopne
sbb
cmp
movb
cmp
push
inc
xor
dec
test
popl
push
adc
imul
shl
lea
push
and
xor
pop
faddl
or
daa
sbb
sbb
loopne
int
or
ret
jge
pop
fldenv
or
or
pushl
repnz
push
js
cs
fstps
jne
mov
jnp
pop
sbb
push
xchg
dec
add
inc
andl
pop
sub
xor
cmp
mov
cmp
sub
sub
arpl
aaa
insl
jne
cmp
jne
test
push
rcll
push
xchg
int3
xchg
jo
pop
or
cmpsl
and
sbb
cmp
cmp
xchg
dec
jge
pop
sub
lods
adc
cmp
ret
sub
jmp
rclb
push
jne
aad
rcrb
xor
sub
sbb
pop
testb
je
outsb
add
or
es
test
jno
add
jg
or
jo
add
adc
popa
pop
pop
mov
push
js
je
or
andb
xchg
lcall
adc
push
inc
mov
adc
jmp
repnz
shlb
xchg
je
hlt
sbb
enter
xchg
je
pop
mov
loope
sbb
jg
in
testb
mov
sahf
je
mov
dec
andl
push
add
sbb
mov
fs
inc
adc
xchg
in
enter
jne
and
dec
es
or
xchg
aas
pop
addl
push
push
inc
sub
xor
push
inc
or
xchg
pop
jb
outsb
pop
pop
push
push
inc
or
xor
clc
push
aaa
clc
xor
int3
push
xchg
pop
ret
adc
jne,pn
pop
push
jne
dec
xchg
and
sbb
xchg
cmpsb
push
add
call
inc
mov
mov
add
sarb
mov
movsb
push
jns
ret
pop
dec
movsb
and
fsubs
pop
xchg
push
das
fstps
dec
repz
mov
into
sub
adc
outsb
in
add
add
test
sbb
mov
mov
lods
ret
sub
cmp
push
jmp
xor
inc
pop
pop
clc
add
cmpsb
outsb
lock
ss
mov
outsb
inc
lock
xor
add
xlat
fisubrl
xchg
sbb
sbb
cltd
sar
out
xor
xor
sbb
lret
std
sbb
or
rorb
add
jno
jne
pop
pop
push
jg
movb
lock
loopne
push
inc
sbb
mov
sbb
iret
test
stos
sar
and
or
add
iret
and
sbb
incb
or
xchg
push
jb
push
les
scas
mov
or
fisubrs
out
mov
sbb
add
aas
pop
pop
fs
aaa
adc
add
or
adc
sbb
inc
pusha
imul
shl
rcrl
movsl
add
mov
jl
into
je
or
cmpsl
hlt
and
in
or
cmp
sbb
push
or
aaa
lds
xchg
jle
inc
pop
add
sbb
sub
rol
mov
ss
jecxz
mov
mov
mov
and
lods
push
mov
aaa
pop
cmp
sbb
test
sbb
sbb
cmp
sbb
xchg
cmp
or
negl
and
sbb
lcall
xchg
in
aas
push
push
je
xchg
fcmovnb
dec
or
call
add
clc
ds
mov
jecxz
jp
gs
inc
test
mov
and
clc
push
add
push
popf
xchg
outsb
or
insl
hlt
sub
ljmp
orb
sub
and
adc
add
aaa
jo
and
sbb
and
loop
add
or
lea
cmp
jne
rcrl
add
mov
popf
call
push
push
inc
push
jge
push
fcomps
sub
push
jl
imul
cltd
out
dec
mov
mov
sbb
adc
jno
je
fsubp
cmp
dec
shlb
cmp
andb
push
xchg
fisubl
outsb
adc
lods
loopne
add
in
or
enter
mov
push
ds
add
or
mov
sbb
mov
daa
push
mov
add
ret
push
sub
mov
loop
or
movw
mov
sbb
test
inc
imul
pop
add
nop
or
daa
adc
dec
xchg
rolb
adc
and
mov
mov
pop
lcall
fiadds
add
mov
dec
popf
rclb
push
fwait
xchg
add
dec
je
jns
lahf
push
jne
fs
ss
inc
push
jae
insl
xor
das
push
push
lcall
xor
dec
lahf
fwait
pop
push
jne
movd
or
cmc
pop
imul
lock
adc
add
and
xchg
sbb
test
fsubs
jmp
and
inc
xchg
imul
dec
adc
add
adc
xchg
test
jge
pop
lea
push
repz
and
push
cmp
popa
cmp
inc
push
ja
cld
pusha
push
pusha
mov
dec
cmp
lock
mov
in
in
xor
clc
dec
push
push
dec
pusha
and
cmp
add
pop
rcrb
and
adc
fs
push
lret
fadds
cmpsb
je
inc
andl
and
sbb
inc
dec
or
cmp
cmp
ja
xchg
shlb
aam
sub
dec
or
movb
int3
scas
add
je
jo
es
mov
mov
dec
adc
jge
rolb
and
sub
loopne
loope
inc
iret
add
pop
decl
inc
jne
ret
into
xchg
mov
pop
pop
push
aaa
push
mov
cmp
mov
adc
pop
push
or
rol
pavgw
outsl
ja
inc
je
cmpsl
inc
in
xchg
iret
cmp
je
inc
pusha
mov
dec
jmp
mov
dec
mov
rolb
clc
out
ljmp
shlb
or
or
cmp
ret
mov
out
or
dec
fsubs
ja
sub
mov
and
clc
movl
or
add
mov
adc
jg
adc
xor
lock
lea
push
add
mov
setne
jne
in
add
lods
add
pop
js
in
jne
decl
add
out
push
mov
addb
scas
clc
add
dec
add
mov
cmp
jne
cltd
loop
mov
push
or
adc
mov
sub
movsl
xchg
sub
and
lret
push
ret
aaa
das
ficoms
cli
cwtl
add
adc
or
in
gs
mov
jle
mov
mov
adc
pusha
idivl
fcomps
aaa
mov
imul
adc
mov
adc
inc
je
sbb
movsl
push
xor
aas
mov
adc
mov
pop
jne
jns
shll
insl
sub
and
arpl
inc
cmp
add
sub
add
push
xchg
inc
mov
test
les
add
jne
popa
loopne
mov
mov
dec
fsubs
dec
in
mov
jae
xor
sub
and
and
xor
add
aas
or
mov
jle
notb
ret
cmp
xchg
push
rcrl
jle
in
cwtl
add
or
pop
nopl
scas
push
out
orb
or
test
pusha
or
lahf
scas
cmpsl
test
sti
sub
cmpl
imul
lret
cmpsb
or
push
mov
add
pop
xchg
or
or
adc
or
sahf
inc
ret
mov
add
fcmovne
dec
inc
sti
or
test
jp
out
add
mov
or
lods
and
int3
ret
and
sbb
ret
dec
xchg
xchg
les
sbbw
daa
out
call
mov
jle
xor
in
lret
mov
test
movnti
scas
add
or
and
add
xchg
dec
xchg
dec
xor
int
or
or
inc
fwait
test
sbb
jmp
sbb
aam
stos
jb
loope
ret
mov
mov
add
cld
jl
jmp
test
ss
push
pusha
or
add
jl
test
aas
pop
xor
push
lock
push
inc
inc
lea
jb
stos
xor
lret
cmpb
shlb
push
sarl
fsts
leave
push
enter
mov
pop
jnp
or
hlt
rcrl
jge
int3
data16
cmp
dec
or
or
push
dec
push
out
test
lahf
sbbb
or
jne
mov
jnp
xor
lea
jp
out
xor
dec
pop
and
ds
ds
int
push
inc
pop
pop
call
adc
pop
inc
dec
cmp
inc
cld
or
jg
lahf
in
movzwl
push
orl
je
shll
or
adc
inc
cld
jg
fbstp
push
push
mov
and
xchg
jmp
xorl
push
add
dec
stc
mov
cmp
das
jg
add
mov
mov
mov
jl
sub
hlt
or
jnp
imul
push
xor
xchg
insb
loope
xor
xor
add
das
or
lock
clc
push
jmp
mov
dec
cmp
sbb
cld
xor
adc
adc
sbb
andw
sar
daa
dec
xchg
loope
adc
lret
dec
leave
fisttps
rep
movsl
sub
adc
xchg
push
mov
or
inc
dec
push
or
or
or
movsb
mov
or
add
add
dec
dec
test
sbb
push
loopne
xchg
int3
dec
insb
inc
mov
sti
cmp
pusha
movsl
push
add
repz
add
push
mov
ret
add
pop
xor
cmpsl
dec
bound
cld
das
lret
js
lea
shl
test
dec
add
add
icebp
adc
push
or
sub
test
lea
jge
mov
dec
or
dec
mov
jnp
orl
jge
out
push
roll
ljmp
and
movsl
out
push
jg
mov
pop
inc
cmp
adc
jo
and
mov
inc
inc
add
ret
repnz
popf
cmp
lahf
sub
out
sbb
push
lahf
nop
popa
into
mov
shrb
cmp
and
or
imul
std
and
sbb
add
sti
dec
sub
fimull
aad
inc
stc
push
in
jno
xor
or
sahf
in
cmp
out
xchg
mov
loope
inc
cmp
sub
jne
es
jmp
lods
add
pushf
add
cmp
add
mov
jae
or
xor
xor
addl
sbb
push
in
or
and
nop
and
addr16
sub
outsb
dec
shll
add
or
rolb
jle
imul
lret
loope
movsl
dec
sub
adc
jne
cmp
or
repz
cmpl
dec
pop
pusha
jl
push
push
push
push
push
sub
daa
mov
mov
add
movsl
ret
or
add
iret
inc
add
adc
push
pop
arpl
push
pop
lea
roll
and
jno
adc
or
fincstp
pop
pop
cmp
sbb
movzbl
ss
pop
mov
sbb
xor
sbb
mov
shrb
cmp
mov
mov
cmp
jge
xlat
orb
outsl
add
pop
popf
std
lar
jne
pop
je
cmpl
es
aam
bound
mov
pop
adc
mov
push
aas
int3
mov
add
mov
jo
leave
push
mov
pop
fmul
and
movl
mov
xor
push
jno
lods
sti
jmp
inc
push
cmp
cmp
rol
xorb
fstl
insb
subl
aam
scas
push
or
and
adc
inc
push
mov
cmpsb
les
mov
mov
je
mov
pop
fwait
lahf
sub
pop
fs
add
js
mov
lods
add
push
mov
push
jecxz
mov
jecxz
ss
and
and
inc
bound
lret
and
mov
pusha
add
push
loope
xor
dec
dec
push
or
mov
push
mov
leave
adc
fcoml
mov
or
adc
push
jmp
push
add
and
push
push
fbld
jle
jbe
add
push
mov
jl
filds
or
sbb
ret
jae
je
or
lds
jp
dec
clc
sbb
sbb
hlt
and
loop
mov
or
push
push
cltd
xchg
roll
pop
cmp
arpl
ret
pop
xchg
add
xor
add
sub
jbe
and
adc
adcb
xlat
out
mov
scas
fistps
cltd
push
test
sub
dec
pushw
fidivl
fdivr
jae
push
mov
je
adc
add
push
or
adcb
pop
out
jbe
bswap
rolb
std
xor
out
lods
push
and
subl
adc
cmp
loop
or
das
pop
push
inc
pop
aad
jg
and
adc
sbb
pop
push
std
or
notb
hlt
sbb
adc
jo
adc
cmp
push
mov
es
xchg
push
add
jg
dec
lea
movsb
jns
dec
js
lods
rcll
mov
in
mov
pushf
lods
movsl
daa
xor
jle
mov
out
adc
sahf
mov
pop
add
push
or
adc
push
aaa
sahf
cwtl
mov
lcall
pop
or
adc
jl
icebp
aaa
mov
adc
inc
insb
shr
add
mov
push
ja
pop
jns
adc
inc
mov
sbb
mov
dec
test
sbb
shld
and
and
shrb
sub
xor
pop
and
cmp
sbb
jo
sub
push
clc
jne
lea
sti
add
aas
add
fnstsw
nop
ja
mov
sub
push
js
sbbb
scas
mov
push
pop
adc
push
andl
cwtl
fmuls
loope
dec
mov
leave
rcrb
mov
or
mov
scas
mov
adc
rcrb
daa
jmp
dec
xor
add
es
sub
push
cmpsl
add
push
dec
lock
sub
jmp
pop
mov
and
fcmovb
loope
pop
sub
test
je
xor
mov
adc
or
das
or
ja
mov
es
in
or
and
dec
dec
jmp
jg
push
and
or
sub
mov
lods
jp
out
faddl
movb
add
loopne
cmc
push
xor
pop
lea
inc
out
enter
incl
pop
and
repnz
out
jmp
rorl
bound
add
out
push
xchg
push
testb
cmp
lahf
push
adc
jnp
or
sbb
push
push
popa
inc
adc
data16
aaa
or
test
jl
and
and
push
push
xor
cmpps
outsb
sbb
and
inc
add
enter
push
mov
outsl
sub
gs
insl
into
add
xor
dec
dec
xchg
fmuls
and
cmp
push
mov
and
xor
mov
test
dec
cmpsb
mov
sbb
mov
add
cmp
push
lds
cmpsl
or
adc
ret
and
dec
dec
shrl
and
int
in
sub
adc
xchg
jne
jo
gs
push
jmp
imul
addr16
jge
mov
pop
ss
push
inc
ds
repz
mov
rol
jo
xor
and
push
lea
lods
enter
and
mov
lods
enter
and
and
enter
mov
adc
mov
dec
and
aaa
pop
subl
jmp
inc
scas
pusha
mov
dec
in
nop
inc
clc
pusha
inc
cmpb
xor
in
addb
mov
jmp
rorb
call
pop
jg
adc
pop
add
pop
aas
and
lahf
cmp
je
dec
dec
push
movsl
fwait
pop
ja
add
movsb
dec
roll
add
shrl
xchg
nop
andb
pop
clc
mov
mov
and
jae
dec
out
aam
lahf
pop
lock
ret
mov
jge
mov
mov
inc
fwait
out
hlt
clc
cld
push
pop
add
imulb
adc
lock
iret
es
fimuls
push
icebp
cld
inc
arpl
jb
cmp
decb
ja
cmp
jbe
stos
jmp
lods
add
in
in
fcomp
clc
or
scas
jecxz
sub
dec
jbe
adc
aam
or
adc
cwtl
xor
pop
adc
mov
sbb
icebp
out
push
and
cld
dec
push
movsb
arpl
int3
and
sub
in
sbb
cld
or
xchg
add
les
inc
push
mov
and
mov
sbb
pop
rol
test
jmp
mov
rcrl
test
movb
testl
mov
leave
idivb
je
andb
dec
cmp
mov
mov
sub
test
fcomip
mov
sbb
out
loopne
repnz
testl
sarb
repnz
or
cld
rcl
adc
jae
inc
sbb
iret
xor
xor
push
fsubrl
lret
push
sub
adc
mov
andb
rcrb
mov
cmp
mov
mov
cmp
leave
xchg
mov
or
xor
jge
xor
push
push
imul
inc
je
fstpt
inc
or
mov
and
fildll
sbb
jne
push
jmp
sub
call
xchg
insb
mov
add
push
leave
add
adc
shrl
or
sbb
xchg
sub
into
sbb
enter
xor
sbb
mov
pop
lds
frndint
or
inc
jno
ret
sbb
push
xor
lahf
fwait
xlat
jb
cmp
lods
sub
and
ret
jmp
fcmovne
push
add
sbb
or
mov
push
or
cmp
pop
jae
push
sbb
jmp
rcll
imul
add
dec
xchg
push
popa
sbb
movl
push
push
or
iret
addl
in
or
pop
fwait
mov
push
mov
add
das
aam
xchg
addr16
push
cmp
dec
or
fists
pop
xor
jns
sbb
or
testl
clc
data16
and
push
push
cmp
jne
xor
lock
pop
in
add
xchg
mov
mov
jbe
inc
push
push
mov
mov
inc
push
cmp
xor
aaa
shrb
mov
xchg
adc
mov
das
sbb
loop
jmp
inc
sbb
mov
pop
stos
jmp
mov
sbb
out
pop
mov
clc
aas
add
pop
test
jnp
jne
cmp
or
push
mov
roll
pop
push
or
stc
and
fisubrs
icebp
push
imul
test
orl
push
or
vsqrtsd
dec
push
cld
jl
and
enter
add
push
inc
loope
movsl
test
out
xor
testb
je
mov
jns
jg
push
xchg
mov
dec
add
push
inc
stc
cmp
clc
movl
dec
lods
nop
ss
and
jo
insl
rcl
dec
outsl
and
cmp
add
dec
xor
jle
je
lea
sub
jo
imul
push
into
lock
rorb
xchg
outsb
push
inc
outsl
or
push
js
pop
and
js
fisubl
neg
aam
push
mov
lea
push
push
push
and
add
sbb
inc
mov
incl
xlat
pop
lea
mov
rep
out
mov
xchg
mov
cmp
sub
out
test
clc
imul
test
sbb
sbb
lea
add
xor
adc
cmpl
das
push
sbb
loop
inc
mov
ja
fisttpll
push
nop
push
mov
lea
int3
sub
inc
ret
incb
mov
push
inc
data16
mov
lea
xchg
fbld
stc
xor
xor
pop
lea
push
cmc
scas
mov
or
sbb
adc
movsl
cwtl
dec
mov
int3
shrl
or
xchg
ret
rcll
add
jl
add
and
add
mov
dec
sbb
data16
add
cmp
mov
pop
and
repnz
in
xor
xor
shr
inc
xor
jo
mov
ljmp
adc
add
jle
pop
or
scas
in
cwtl
sub
jl
push
addr16
hlt
dec
jne
or
sbb
sbb
mov
inc
imul
mov
xor
adc
or
jns
jle
sbb
sub
clc
jne
or
cld
sbb
popf
push
rorb
push
fs
and
push
mov
cs
xlat
shll
or
int
pop
add
xchg
fimull
dec
shrb
das
mov
jecxz
test
pushl
dec
int3
jne
ljmp
sarl
jmp
cmp
xchg
mov
fstpl
add
mov
push
enter
dec
stc
add
aad
sub
in
push
or
mov
pop
xchg
add
rolb
pop
and
xchg
fldenv
pusha
arpl
movsb
addb
pop
and
ss
pop
push
push
and
or
jecxz
xchg
jle
jp
icebp
ss
sub
mov
xchg
inc
pop
inc
inc
adc
or
dec
mov
add
push
or
push
push
inc
mov
and
xor
jne
orl
fcoms
cmpsl
adc
das
out
or
push
cmp
push
push
xlat
bound
sub
adc
sti
rcrl
add
adc
and
or
sbb
sub
out
cmpsl
sub
jne
and
adc
das
mov
test
addb
mov
bound
out
push
js
jg
xor
mov
cwtl
add
rolb
or
mov
clc
xchg
mov
cmp
xorb
lds
push
dec
xchg
inc
movsb
shlb
aad
mov
in
inc
mov
nop
aam
pop
cs
in
pop
in
lret
inc
lea
nop
pop
and
dec
aam
mov
in
push
aad
sbb
stos
inc
les
bound
cmpsl
lcall
in
loopne
jge
add
mov
pop
les
dec
dec
cmpsl
mov
mov
inc
push
std
sbb
aam
movhlps
adc
pusha
sbb
and
hlt
std
aam
cmp
push
gs
sahf
sbb
test
mov
ss
inc
or
stos
shlb
sub
les
imul
mov
add
xchg
adc
jae
cmp
in
dec
shl
mov
inc
or
push
ss
mov
sub
dec
out
into
push
or
mov
xchg
pop
pusha
rclb
jb
mov
pushf
adc
xor
cwtl
sub
mov
adc
pop
pushf
addb
mov
and
in
pushf
in
add
xlat
addb
mov
mov
jbe
mov
test
or
mov
sbb
inc
dec
enter
std
sub
dec
pop
push
nop
cmp
arpl
sub
leave
mov
dec
cmc
fadds
push
les
jae
jo
or
mov
xor
mov
xor
xor
adcl
scas
jb
push
push
xor
insb
inc
out
xor
cmp
stos
outsl
insb
lcall
pusha
dec
iret
inc
pop
lds
mov
dec
xor
pop
imul
jl
pop
dec
sbb
es
jl
adc
or
lods
hlt
js
jl
popf
or
aaa
addl
das
jo
addl
ror
cmc
adc
push
cmp
jg
mov
adc
in
or
xor
sub
nop
or
push
mov
sub
dec
mov
sbb
imul
mov
cs
mov
add
push
loope
jbe
mov
lock
or
jmp
and
jge
or
pushf
les
xchg
clc
sti
mov
dec
jl
push
xchg
push
leave
pop
sti
repnz
cmp
pop
addb
or
push
push
cmpsl
add
add
xchg
mov
lea
and
sbb
dec
inc
jbe
ljmp
and
adc
enter
movsb
sub
ret
les
cmpsl
popf
push
mov
dec
add
je
jns
pop
cmp
fs
push
pop
pusha
push
add
int3
sub
inc
je
push
push
pop
test
lahf
out
xchg
mov
movsb
cmp
enter
je
push
add
addr16
les
add
inc
pusha
imul
js
add
dec
push
adc
or
sbb
mov
into
add
repz
add
imul
mov
fnsetpm(287
aam
and
leave
push
inc
xchg
and
in
mov
push
dec
push
xchg
adcb
push
in
inc
mov
pop
fwait
repnz
mov
leave
clc
add
fistl
and
mov
sar
movsb
add
es
push
ret
inc
nop
mov
pop
pop
add
add
cmp
in
jbe
add
mov
push
push
js
add
popa
fdivrs
jb
and
fdivs
pop
xor
outsb
push
pop
inc
loopne
dec
adc
pop
movsb
std
insb
arpl
and
je
dec
inc
cmpsb
jmp
cmp
sbb
jl
call
xor
hlt
push
gs
jns
and
adc
dec
and
mov
adc
mov
movsb
sbb
call
nop
dec
mov
adc
mov
xor
shrb
les
mov
addr16
or
sbb
push
xchg
aaa
mov
dec
xchg
mov
addr16
lret
xchg
cmp
test
pop
mov
sbb
hlt
insb
std
adc
vmwrite
popa
fcompl
xchg
xchg
or
or
faddl
adc
fsubs
pop
in
dec
enter
test
add
xor
xor
in
sbb
sbb
xor
sbb
in
push
mov
and
clc
std
push
stc
push
loope
dec
mov
adc
lods
pusha
call
imul
icebp
call
rorb
cmp
aaa
nop
mov
push
adc
push
sub
xchg
rorb
inc
aas
adc
pop
xchg
dec
push
cmp
int3
inc
or
in
xor
jo
xor
lock
fs
stos
sahf
sub
adc
stos
xor
push
in
notl
int
cwtl
pop
aam
push
add
repnz
jo
out
cs
or
in
fcoml
mov
rcl
rcrb
pop
sbb
push
push
int3
mov
jb
dec
ret
mov
jb
aam
in
xchg
inc
jb
push
dec
or
lcall
in
rcrl
rcll
cmp
jge
add
int3
mov
mov
dec
inc
les
push
adc
rcrb
push
jecxz
mov
scas
pop
or
push
cmpl
pop
push
int3
daa
adc
push
push
push
cmp
push
jnp
ret
push
xchg
aaa
inc
push
int3
push
and
and
pop
dec
inc
mov
pusha
movl
mov
fadd
sbb
roll
jecxz
cmp
aaa
lea
mov
test
inc
mov
xchg
aam
outsl
mov
xor
mov
inc
push
js
nop
xchg
dec
fiaddl
jle
add
dec
inc
es
add
cmp
cmp
pop
mov
out
ja
push
and
and
pushf
or
enter
push
cltd
out
cmp
iret
dec
or
loope
sub
mov
aas
cmpsb
jg
mov
push
sbb
dec
fcomps
test
enter
xchg
aam
jb
lods
leave
rcrb
sbb
sub
cmp
addr16
nop
cmp
jo
nop
pop
lods
pop
or
lock
dec
loope
lret
loopne
or
pop
mov
push
aaa
jo
pop
dec
mov
pop
mov
testb
pop
imul
mov
dec
or
jecxz
inc
aad
orl
and
push
xor
push
sbbb
jne
add
or
or
lds
subb
es
mov
adc
mov
loopne
loopne
les
dec
lock
cld
pop
inc
aam
adc
iret
mov
push
pop
cwtl
test
lock
mov
stc
imul
cld
push
outsl
out
inc
adc
addr16
imul
pop
mov
cwtl
and
cmc
and
sbb
cmp
jecxz
xor
jge
add
cltd
dec
and
adcl
and
shlb
push
imul
ret
pop
ret
jmp
in
add
jle
outsl
pusha
xchg
lds
fdivrs
push
cmp
je
sub
movsl
push
inc
in
negl
mov
rcl
xchg
imul
sbb
in
in
or
push
adc
dec
pop
imulb
fucomi
push
pop
jo
push
stc
push
mov
sbb
inc
xor
dec
jl
sahf
push
cmp
xor
test
and
negb
add
mov
push
sub
mov
aam
lret
mov
or
inc
push
mov
jb
xor
push
movlps
pusha
and
fcoml
insl
bound
mov
jmp
daa
jge
popf
outsb
xchg
adc
add
loop
dec
adcb
inc
sbb
sub
orb
rorb
dec
rcrl
dec
adc
dec
inc
aaa
adc
sbb
scas
adc
mov
mov
in
fucomp
fcoml
xchg
das
xchg
xor
test
in
mov
mov
rorb
loope
push
xor
xlat
or
fmuls
inc
xchg
hlt
push
push
push
push
jb
sub
loope
push
cwtl
jmp
pop
hlt
lock
sub
cwtl
jg
lods
movsl
fs
cmp
pop
ss
pop
je
in
je
mov
sbb
pop
pop
xor
dec
add
test
mov
or
xor
dec
adc
adc
mov
jmp
mov
push
pushf
test
cmpsb
sub
arpl
imul
push
mov
outsl
xor
or
xor
xor
inc
lods
addl
pop
and
loope
ret
fisubrs
xchg
inc
mov
das
les
mov
inc
push
push
out
cld
push
mov
test
fbld
adc
mov
inc
sbb
sarl
jno
cmp
xchg
jne
mov
cwtl
repnz
popa
push
data16
lods
mov
movsb
inc
lret
adc
mov
sub
adc
cmp
cmp
mov
cs
test
inc
add
cmp
in
int3
jge
push
es
xchg
ret
les
add
xor
shrl
push
and
je
or
jecxz
pop
add
cld
cmp
sub
popa
lods
adc
cmp
cmp
mov
mov
sbb
outsb
adc
xor
loop
call
sbb
mov
into
in
add
xor
repnz
imul
pop
jge
mov
sbb
jle
ret
fdivr
sysret
sbb
jecxz
xor
icebp
inc
and
lret
addr16
dec
xchg
inc
sarl
js
add
daa
push
push
or
or
or
aas
mov
jbe
fnstenv
fdivs
sbb
insb
pop
inc
testl
add
test
pop
add
jp
sahf
push
cli
mov
mov
adc
adc
cmpsl
push
mov
mov
adc
out
pop
std
stos
mov
lret
inc
jae
jne
cmpl
push
sub
loopne
clc
movsl
push
into
push
movzbl
push
insb
xor
daa
out
push
int3
or
sbb
dec
sub
and
ffreep
testb
jecxz
sbb
cld
leave
mov
jl
test
adc
ja
clc
sbb
lea
inc
cmp
pop
mov
std
jl
push
lea
sbb
xor
jl
or
jl
cmp
and
cmp
outsb
add
int
je
push
mov
orl
outsb
lock
jnp
jmp
dec
ret
pop
jo
push
shrl
push
arpl
and
aas
jmp
icebp
loopne
and
lock
pop
movsl
xor
inc
inc
pop
loopne
dec
mov
jl
jo
icebp
cmp
xchg
mov
loope
inc
fnstenv
push
int
lahf
adc
into
push
jmp
xchg
outsl
inc
lods
mov
fs
adc
and
sahf
xchg
adc
sbb
popa
insb
test
dec
pop
mov
ljmp
and
shll
pushf
and
jle
jmp
push
std
xor
or
push
mov
js
inc
repnz
sub
xor
sti
push
mov
sarb
xorb
mov
or
stos
and
inc
popa
inc
cwtl
cli
daa
fs
lcall
out
in
push
daa
in
dec
xchg
and
sub
cmp
pop
jae
or
cmpsl
sub
lahf
clc
mov
xchg
ret
shr
dec
lret
jae
xor
add
ret
into
dec
jae
sbb
sbb
test
jnp
loope
add
call
cmpsb
in
push
ficompl
lret
or
push
push
push
pop
jecxz
push
ret
fimuls
mov
clc
cmc
inc
mov
add
rolb
add
imul
add
dec
pop
adc
out
xor
in
call
inc
popa
push
popa
cmp
add
dec
ret
cltd
push
xchg
loopne
loope
cmp
fildl
faddl
test
sbb
and
and
fisubrl
imul
sbb
es
xchg
sbb
dec
pop
shll
mov
lret
sti
push
rol
dec
or
enter
jno
mov
popf
ds
add
orb
rcl
incb
mov
sbb
push
add
shlb
mov
or
mov
add
cmp
test
cmp
sar
adc
cli
scas
inc
aad
cmpb
loope
xor
rolb
mov
stos
xchg
fistps
jb
jg
inc
and
lea
jge
inc
in
xchg
bswap
sub
push
mov
jo
ja
inc
iret
sar
and
notb
sub
xor
shrb
js
bound
and
xchg
les
sub
add
mov
std
mov
push
je
jg
inc
js
adc
inc
jle
pop
sub
rol
push
pop
cmp
and
sbb
bound
stos
pop
sub
cmp
add
pusha
lahf
test
push
push
jne
icebp
mov
cmp
addr16
inc
push
cmp
adc
xchg
js
or
gs
int3
lods
sbb
lea
mov
dec
adc
and
aaa
mov
sbb
and
dec
add
or
push
adc
pop
jo
adc
mov
pop
adc
fldenv
ret
inc
nop
sbb
bound
and
lret
push
stos
movsb
push
inc
fimuls
xchg
mov
xchg
pop
mov
cmp
xor
adc
push
loope
inc
pop
pop
sbb
lods
adc
nop
sbb
mov
sbb
clc
pop
loopne
repz
push
push
push
out
or
mov
pop
in
push
call
or
adc
jne
push
enter
rorb
add
push
mov
mov
rol
mov
addr16
sbb
push
ljmp
adc
dec
in
cmpl
mov
inc
test
jbe
in
fnstcw
filds
push
je
movb
jmp
adc
cmpsl
mov
push
fcoms
mov
repnz
repz
dec
mov
push
std
mov
icebp
sub
pop
gs
inc
mov
inc
push
add
add
dec
clc
cmp
jne
dec
jbe
xor
out
xor
into
bound
call
clc
pop
add
mov
pushf
testb
fsts
jnp
cmpb
xor
adc
loop
sub
push
stos
cli
sub
cld
xor
inc
inc
je
in
movl
xchg
push
cmp
dec
sub
sbb
add
sti
add
xchg
pop
popa
sbb
mov
sbb
repnz
cmp
mov
cmp
enter
jne
mov
repnz
xor
push
push
movsl
xchg
in
lods
push
jne
js
pop
push
jmp
adc
mov
arpl
mov
add
shlb
or
cmc
sub
add
and
je
add
jo
in
or
add
mov
jg
testb
xchg
rorl
sbb
xor
roll
jb
cmp
ficompl
xlat
lea
fldenv
jge
mov
or
mov
inc
or
add
cli
adc
je
sbbb
in
pop
add
xor
mov
jmp
xor
mov
aam
jno
fmuls
sbb
jae
mov
pop
lods
dec
shll
xchg
xor
ss
inc
inc
loopne
add
cs
enter
mov
push
and
scas
bound
cmp
icebp
push
sbb
adc
jne
xor
xor
call
sbb
lea
or
je
dec
push
xor
mov
out
lahf
cwtl
add
pop
in
push
repnz
and
inc
adc
pusha
sub
dec
inc
xchg
es
mov
out
js
xchg
xor
addr16
adc
inc
mov
or
xor
pop
popa
repnz
inc
add
inc
and
push
movsb
stos
and
cmp
and
mov
mov
fs
push
adc
icebp
push
pop
push
roll
ss
sub
inc
cmp
je
js
adc
adc
lea
popf
or
dec
rcll
sub
pop
push
push
push
sub
bound
mov
mov
movsl
sbb
inc
jb
push
inc
add
push
jne
xchg
cmp
xchg
out
mov
inc
mov
mov
mov
mov
lods
stos
int
jmp
add
mov
imul
loopne
mov
in
push
mov
add
fisubrl
sbbl
sub
in
and
adc
inc
mov
and
mov
xor
sbb
push
or
nop
add
inc
mov
leave
ret
test
pop
mov
sbbb
stos
mov
enter
gs
dec
jns
jge
mov
xor
add
add
mov
sub
inc
push
and
insb
add
ja
pop
or
in
out
fisubl
or
bound
mov
pop
cmc
push
cmp
push
push
xor
sbb
shr
aam
and
rorl
dec
push
nop
and
popf
jl
fdivl
cld
aam
fcomps
fadds
mov
je
push
adc
mov
int
mov
or
cmp
jo
xorps
sbb
sbb
lahf
or
out
pusha
push
inc
mov
add
cmp
jle
xor
mov
or
mov
add
in
adc
pop
and
fistl
push
cmp
sar
or
pop
testb
push
insl
addr16
lcall
ficoml
xchg
pop
insl
inc
pop
cmp
and
dec
mov
xor
aaa
xor
mov
lret
fadd
push
xchg
js
dec
push
mov
clc
in
pshufw
add
lahf
ret
jbe
shll
jmp
orl
stos
push
imul
lock
gs
shlb
fprem
clc
hlt
and
push
dec
mov
push
add
inc
in
add
inc
push
dec
mov
hlt
sarl
dec
repz
hlt
call
xor
pushf
inc
add
mov
clc
testl
je
sbb
mov
sbb
in
aaa
xor
mov
daa
push
or
fisubrs
in
dec
int3
adc
rolb
jp
push
out
int3
sub
push
mov
xor
stc
addb
cmp
daa
push
push
adc
mov
pop
inc
or
jp
inc
adcl
add
jns
push
out
idiv
xor
je
pop
adc
push
imul
or
push
clc
push
push
xor
mov
orl
adc
in
fldl
push
inc
dec
lock
mov
jmp
push
inc
jbe
sub
pushf
lods
ret
mov
test
out
pop
cmpsl
add
push
jmp
mov
push
jmp
repz
inc
fadds
xor
test
test
push
cmp
repz
popa
add
jge
negl
inc
inc
or
sbb
dec
clc
ret
inc
jae
inc
cmp
xchg
icebp
or
inc
or
mov
cmp
add
js
je
fs
pop
sbb
lea
jmp
mov
inc
sbb
cs
sbb
or
push
push
push
inc
sub
xor
aam
adc
leave
pop
mov
lsl
add
pop
in
cli
daa
lds
aad
and
sbb
or
adcb
test
mov
cmp
fisttps
dec
adc
dec
clc
mov
insb
and
outsb
xchg
add
wbinvd
cmpb
clc
sbb
or
sbb
addl
rcr
std
aam
pusha
lock
push
mov
out
xor
ss
push
inc
mov
sbb
or
xchg
pop
sub
push
imul
inc
cmp
add
sbb
and
in
in
test
pusha
jcxz
je
dec
push
push
xor
cli
loop
mov
sub
in
clc
jge
shlb
or
jo
pop
incb
inc
sahf
adc
pusha
fs
jg
mov
push
push
iret
daa
inc
push
jae
nop
mov
cmp
cmc
test
push
pop
mov
xor
test
add
adc
imul
ret
incb
mov
add
sti
mov
push
nop
xlat
movsl
xchg
sbb
dec
push
in
dec
adc
es
test
pusha
shlb
add
mov
add
mov
stc
clc
dec
setl
lods
lea
push
imul
roll
jmp
clc
les
dec
xor
push
adc
aam
aas
mov
out
cltd
test
pop
mov
mov
adc
add
inc
sub
mov
pop
sbb
insb
cmp
test
push
leave
xlat
add
pop
repnz
add
insb
adcb
js
les
sbb
jl
sbb
cmc
push
mov
or
ja
push
sub
xor
cltd
test
dec
and
sub
xorl
add
pop
and
and
add
adcl
cld
mov
push
inc
lret
sub
ja
xchg
les
addb
nop
test
mov
sbb
jb
mov
test
es
cmp
test
dec
sbb
cltd
jp
test
mov
sbb
jmp
jecxz
iret
jmp
mov
flds
nop/reserved
xor
ret
pop
cwtl
mov
sti
data16
pop
ja
mov
gs
jb
fnsave
jo
outsl
or
add
mov
push
lea
mov
bound
sahf
push
adc
out
xchg
jmp
cli
add
jbe
outsl
out
setge
or
jne
je
aad
jge
adc
push
lret
mov
das
push
inc
sub
sldt
pop
addb
pusha
push
loope
xchg
jae,pn
in
jmp
cmpsl
int3
ds
call
inc
push
cltd
and
test
movsb
and
xchg
bound
lods
adc
cs
pop
gs
jbe
jno
sub
sahf
scas
adc
pop
sbb
and
adcb
loop
cwtl
add
mov
add
pop
add
mov
mov
jmp
pushf
mov
and
je
std
push
pop
mov
in
pop
push
inc
jmp
push
rorl
iret
xchg
mov
adc
lock
adc
push
dec
jmp
xor
pusha
dec
dec
or
ret
jo
test
push
sbb
in
lret
fcoms
imul
add
movsl
cmp
sbb
adc
call
mov
test
mov
inc
bnd
adc
movsl
add
sub
iret
jno
mov
xchg
mov
pusha
aas
mov
and
or
imul
jnp
jmp
dec
add
nop
add
aaa
cs
add
push
mov
xchg
mov
mov
xorb
push
std
shrb
push
insl
outsb
xor
xor
or
movsb
add
testb
sbb
enter
addr16
xchg
cs
es
sarl
add
in
or
and
bound
movl
and
inc
jnp
dec
out
dec
fs
addr16
int
shlb
xchg
out
test
jo
or
and
lcallw
lcall
xlat
jns
add
lock
jmp
sbb
les
loopne
subl
add
adc
std
mov
je
adc
les
sbbl
out
inc
cmp
add
xchg
or
push
lea
or
movsl
test
loopne
mov
mov
enter
aas
cmp
ret
jge
xchg
cmc
incl
loop
sbb
cli
jae
lea
or
inc
call
lods
in
movsb
scas
and
push
jne
enter
test
repnz
pop
add
sar
xchg
mov
jmp
cmp
or
xor
mov
sbb
in
pop
xorl
xor
cmpb
add
jb
jo
mov
pop
jecxz
xchg
scas
jge
mov
shrl
fildll
inc
add
jg
sahf
or
xor
cmp
xchg
fdivp
adc
mov
pop
nop/reserved
and
testl
mov
stc
sub
mov
push
mov
jg
sub
sbb
pop
push
cld
lret
or
daa
mov
test
jae
in
lret
xchg
cmp
jbe
push
cmp
in
sub
in
inc
xor
xlat
inc
lea
mov
stos
dec
adc
insl
push
or
loope
cltd
and
push
int
push
pop
hlt
push
push
xor
test
loope
aad
and
adc
push
mov
std
mov
sub
fcoms
sbb
mov
push
xchg
mov
and
fnstsw
mov
andl
test
lock
mov
pop
or
cmp
dec
adcl
ror
pop
fwait
and
loopne
ret
add
sub
and
lret
pop
inc
lcall
add
inc
adc
mov
pop
call
xor
push
push
add
sbb
dec
cmp
stos
fidivl
fs
outsl
adc
jge
jl
es
add
add
or
dec
or
sahf
sub
pop
int3
sbb
add
sbb
test
addr16
dec
inc
mov
sbb
movsb
fildll
fnstenv
jns
add
inc
inc
push
jnp
or
inc
inc
lods
in
cmp
test
nop
stos
adc
in
inc
fs
scas
pop
lods
nop
xchg
and
xchg
xor
lcall
xchg
outsl
and
sub
xorb
pusha
adc
lds
pop
jl
xchg
pop
mov
xor
adc
lea
add
jnp
lret
xchg
xchg
es
clc
push
stos
loopne
mov
fs
mov
and
cmpb
xor
pop
push
cmpb
daa
test
adc
jmp
adc
jmp
jbe
jae
adcb
aas
loope
xchg
cmp
pusha
js
arpl
or
test
jnp
mov
jle
cmp
jne
pop
loopne
adc
mov
jmp
repnz
xor
sub
dec
cmp
ficomps
jnp
adc
dec
loop
outsl
dec
add
loope
aam
fimuls
or
dec
es
inc
sbb
jo
fsubp
popf
adc
dec
or
negb
sbbl
inc
push
sub
mov
iret
sahf
and
adc
loope
lea
add
jnp
add
or
mov
lock
push
or
rcll
push
movb
sub
sub
pop
popf
xor
pushf
adc
push
xor
inc
mov
push
je
add
cmc
sub
mov
or
movsl
jmp
shrl
xor
fs
iret
adc
jbe
loope
test
decb
or
fdivs
push
add
push
add
incl
movb
mov
and
insb
inc
in
jp
out
or
nop
xchg
mov
rorb
xchg
cld
push
aaa
mov
in
les
and
loopne
jb
dec
js
inc
fwait
cmp
or
adc
jmp
mov
xchg
push
test
ja
ds
or
jl
mov
lea
sbb
sbb
mov
ret
pop
add
test
adc
push
mov
sub
fcmovnbe
nop
push
pop
pop
jo
cmpb
test
mov
jge
and
fldl
mov
inc
inc
xchg
add
cmpl
xor
add
mov
mov
add
adc
mov
mov
push
gs
and
mov
push
or
and
adc
and
sbb
fcoms
cmp
mov
push
or
bound
push
jmp
pop
cs
bswap
pop
push
lea
or
enter
push
mov
in
dec
pusha
imul
add
cmp
add
xor
addl
fwait
jge
push
rolb
loopne
push
or
xor
xchg
in
mov
lahf
shlb
cmp
rcrb
cmp
jno
outsb
xor
inc
loope
js
cmp
or
sbb
stc
dec
fs
xchg
jl
rol
add
aas
lea
pop
mov
adc
xor
inc
fimull
loope
or
test
adc
lods
sbb
je
xor
vmread
push
nop
or
or
pop
sbb
mov
xchg
jmp
xchg
hlt
mov
cmp
jmp
hlt
pop
and
sbb
fsubrs
enter
xlat
inc
cmp
pop
jmp
sbb
add
nop
or
jecxz
loopne
in
push
jmp
inc
and
add
dec
fwait
test
adc
js
or
jo
mov
jb
aas
rorl
add
sbb
addr16
sbb
in
add
lds
iret
push
pushf
or
and
les
inc
or
inc
and
mov
xor
sbb
push
inc
adc
call
loopne
and
dec
push
adc
mov
aaa
in
imull
xchg
add
inc
push
jg
sub
aad
fs
addb
push
mov
sub
lret
cli
outsl
mov
scas
cmp
mov
cmp
mov
mov
in
scas
sub
adc
push
repz
mov
js
sub
imul
add
mov
push
push
cmp
jne
push
or
sbb
jl
adc
icebp
into
mov
test
sahf
sbb
cltd
je
pop
popf
lods
add
out
inc
or
pop
repnz
or
or
and
dec
movsl
lds
daa
jbe
dec
add
andb
hlt
push
jge
and
fnsave
rcrb
add
pop
jp
or
xor
mov
rol
mov
xchg
and
mov
scas
push
sub
sbb
lahf
push
nop
and
dec
lods
fcom
mov
outsb
push
cmp
nop
sbb
pop
push
jo
push
sub
jg
int
cmc
mov
int
in
cmp
push
shlw
insl
sbb
push
inc
sbb
add
loop
adc
adc
movsl
ss
daa
lods
dec
ds
jo
jnp
pop
rclb
jmp
push
cmp
push
faddl
nop
mov
push
dec
dec
sub
jbe
and
xchg
adc
sbb
jmp
cmpsb
xlat
pop
xchg
mov
rclb
sub
or
adc
call
fstps
inc
lret
arpl
push
insb
lock
sbb
cmp
adc
sbb
shl
es
inc
adc
pop
jb
mov
mov
push
es
mov
mov
pop
dec
cwtl
push
clc
inc
xchg
int3
push
or
je
test
bound
fsubr
push
lea
lock
pop
or
leave
inc
popf
xchg
dec
cmp
cli
push
or
mov
repz
out
rorb
addl
mov
dec
loopne
jge
add
ret
loopne
jp
gs
cld
mov
movl
cmpl
ret
insl
ss
xchg
mov
dec
mov
xchg
insl
mov
loopne
sbbl
xchg
add
dec
les
mov
pop
pop
js
cld
xchg
inc
or
mov
adc
cmp
hlt
mov
push
cmp
in
add
xor
loope
jbe
loopne
xor
xor
clc
xor
pop
sbb
mov
add
pop
jo
iret
cmc
push
jne
push
xchg
lahf
ja
push
add
icebp
cmp
enter
xchg
sti
fdivrs
or
sbb
aas
sub
add
add
xor
aas
in
popa
imul
imul
xchg
inc
leave
pop
movl
xchg
mov
nop
call
push
xor
pop
sub
loop
mov
inc
mov
jae
pop
pop
aad
jmp
dec
jb
test
push
pop
and
push
xchg
cmp
and
pushf
gs
sbb
je,pn
pusha
cld
jns
stc
pusha
push
push
pusha
lea
popa
and
xchg
jns
xor
push
inc
popa
adcb
jb
xor
test
jle
movsb
jecxz
mov
sbb
aam
jecxz
pop
aam
clc
int3
mov
inc
lret
mov
push
push
xor
es
mov
dec
insl
ret
test
sbb
add
add
test
jl
mov
stos
xor
cmp
in
insb
push
sub
mov
jg
mov
and
leave
jo
push
sub
push
aad
sub
hlt
jae
xchg
jno
in
mov
dec
movsb
les
sarb
sarl
mov
cltd
add
aam
sub
jecxz
sub
movsb
add
xchg
mov
and
fnstsw
shlb
movsl
xchg
nop
jl
pop
mov
inc
rolb
aaa
leave
sub
jl
mov
push
cmp
mov
inc
dec
xchg
and
dec
rcrl
inc
or
push
rol
dec
test
mov
xor
or
es
pop
jo
mov
addb
lret
gs
les
jecxz
sub
lock
xor
pop
push
mov
rolb
and
stc
xor
int
mov
adc
pop
pop
popa
or
push
ret
aad
inc
inc
pusha
xchg
cs
or
insl
pop
jb
insl
dec
shlb
repz
sub
xor
fucomip
idivb
je
xor
ds
in
jo
outsb
add
dec
xchg
jmp
inc
jl
je
mov
xor
dec
xchg
movsb
mov
adc
andb
out
sub
test
sar
push
mov
jb
out
xchg
insb
cwtl
jl
dec
xchg
xchg
movsl
aam
adc
mov
or
push
mov
movsl
sbb
leave
adc
push
jb
mov
mov
movsl
cmp
add
adc
nop
cltd
add
mov
mov
push
adc
pop
stos
add
fs
cmp
mov
or
pop
iret
mov
mov
cmpsl
jns
or
sbb
ret
add
pop
insb
or
aas
inc
out
enter
inc
or
jl
inc
jmp
inc
movsl
xor
dec
ja
jl
dec
pop
mov
or
orl
dec
add
and
and
mov
leave
xor
aaa
and
stos
push
push
sub
and
xor
sub
test
les
xchg
pop
movsb
dec
pop
mov
sbb
hlt
fnclex
cltd
push
mov
lret
in
dec
repz
call
mov
sbb
cs
xchg
rorb
or
add
xor
xor
jb
call
clc
pop
fs
idivb
mov
adc
mov
sbb
mov
int3
push
test
mov
sub
mov
int3
mov
or
fisttpl
adc
je
fdiv
inc
mov
sbb
sbb
nop
js
push
loopne
inc
nop
adc
xchg
rorl
xchg
out
mov
pop
add
dec
sarb
push
add
dec
test
insb
stos
xchg
cmp
test
push
movsb
pop
pop
push
sbb
rol
loopne
jno
and
xchg
das
cmp
stos
jns
adc
xor
sbb
jmp
push
pusha
imull
jo
xor
lahf
loope
loop
mov
or
lahf
test
shrb
adc
loope
add
int3
lea
cmp
into
pop
cs
sbb
add
daa
pusha
stc
push
mov
sbb
lahf
lods
int
sub
dec
aaa
inc
sarb
inc
loopne
push
push
fsubrl
pushf
push
nop
gs
mov
xchg
mov
stos
imul
stos
cltd
sub
jmp
ja,pt
jge
push
cmc
xor
int
xchg
and
push
jnp
inc
ja
sub
adc
int3
xor
lock
jne
cwtl
and
pop
xchg
jl
pop
add
jo
aad
daa
and
inc
stc
icebp
cmp
imul
rcrb
add
push
jecxz
ljmp
or
xorb
cmp
sbb
xchg
and
xchg
and
inc
enter
mov
mov
arpl
imul
push
and
xor
and
fs
push
add
rclb
xchg
cmpsb
sub
popa
sbb
icebp
or
data16
enter
or
rclb
push
cli
pop
sbb
pop
xor
xor
jl,pn
stos
movsb
sub
mov
dec
popf
push
cmp
mov
dec
cmp
fnsave
cld
jmp
xorps
lods
cmp
je
rorl
lahf
or
pop
in
mov
cwtl
test
sub
inc
repnz
mov
dec
in
add
les
test
pop
pusha
enter
sbb
nop
sub
mov
inc
std
push
dec
mov
lea
push
inc
les
orl
add
adc
outsl
add
mov
pop
pop
mov
or
cmp
pop
push
add
inc
js
loope
pop
xchg
mov
fstl
cmp
test
imul
or
dec
mov
fsubrs
dec
inc
inc
add
pop
mov
adc
add
mov
sub
int3
push
dec
inc
dec
scas
mov
cmpsb
push
shll
pop
in
pop
inc
jl
adc
fisubrl
push
lret
adc
pop
xor
arpl
jo
add
pop
and
and
cmp
imul
insl
adc
add
scas
sub
fists
aaa
jne
fadds
cs
inc
imul
rcll
cwtl
popa
inc
jbe
sahf
test
push
sub
daa
sar
int
outsl
lahf
xor
xor
lock
mov
mov
and
inc
je
push
ss
sti
divl
jne
sub
push
mov
sbb
add
jmp
ljmp
movsb
lock
sub
adc
push
clc
cmp
cmpb
test
inc
pop
jle
orb
popa
cmp
add
imul
jmp
pop
adc
adc
add
sahf
adc
mov
jmp
pushf
je
cmp
rolb
shlb
addr16
or
pop
lahf
pop
inc
loope
adc
xchg
loopne
xchg
mov
addb
aaa
cmp
cld
fwait
add
jle
je
push
mov
dec
shrl
pop
paddb
add
mov
jne
pop
pop
gs
enter
imul
pop
add
jle
ss
xor
dec
xchg
and
clc
xchg
sbb
push
lahf
xadd
outsl
leave
pop
insb
push
sbb
sbbl
loopne
jnp
cmpsb
pop
push
jmp
and
or
xor
loopne
movsl
push
fs
cmp
push
push
add
mov
xchg
jg
repz
mov
or
pop
mov
dec
mov
dec
mov
adc
inc
or
stos
scas
test
shll
cmp
lds
xchg
add
cmp
mov
and
jb
sub
dec
sbb
jmp
nop
mov
jns
je
add
lds
movsb
popa
gs
and
stc
adc
inc
jl
insb
les
movsl
or
or
hlt
inc
push
jmp
xor
ret
ds
push
scas
fcoml
inc
add
pusha
inc
inc
cmp
nop
jg
jle
jmp
push
jmp
push
lcall
push
fcoms
push
stos
adc
mov
dec
divb
xchg
push
push
pop
cmp
xor
adc
aam
int
push
jne
and
inc
and
cltd
sbb
dec
in
inc
popa
sbb
xchg
push
sub
mov
and
nop
add
shll
jbe
fsts
or
and
mov
daa
lcall
inc
rol
mov
rep
jl
or
loop
mov
fcoml
call
xor
cs
jne
push
addr16
testl
lock
jne
fwait
adc
mov
les
call
lock
mov
or
jae
cld
adc
xor
or
dec
add
mov
dec
inc
sub
lods
push
in
cmp
cwtl
or
js
scas
test
push
ss
xchg
pop
push
pop
pop
pop
inc
mov
inc
call
testb
in
and
insb
adc
inc
call
inc
popf
imul
mov
push
xor
jns
adc
jbe
mov
das
xchg
or
push
mov
sub
push
aas
mov
push
outsl
cmpsl
or
mov
call
in
sbb
mov
ret
out
dec
popa
fninit
cmp
mov
pop
inc
fcoms
imul
icebp
cmp
mov
mov
pop
mov
mov
hlt
push
adc
scas
out
icebp
sbb
sub
dec
add
js
jge
xchg
or
movsl
clc
setb
orb
add
ret
and
scas
jg
or
inc
add
cmp
jno
test
aaa
add
and
xor
out
jp
jne
add
das
inc
push
or
in
sub
dec
pop
lock
or
adc
arpl
jns
scas
push
and
daa
outsl
bound
sbbb
adc
pop
jo
rolb
cs
test
sahf
xor
dec
adc
mov
daa
xor
roll
and
nop
mov
jmp
cmp
in
loop
les
insl
jmp
jo
gs
and
sub
cmp
pop
cmp
push
movsb
inc
sub
jle
popf
pop
sbb
xor
imul
loop
test
xchg
repnz
nop
mov
stos
inc
sbb
outsb
iret
cmp
rcrb
repz
jo
jno
test
ss
jb
pop
xchg
adc
mov
rolb
jmp
shlb
push
and
fisttps
das
pop
lahf
shlb
mov
addl
addl
nop
in
mov
cmc
push
dec
stos
ds
push
fidivrs
inc
cmp
xor
add
add
scas
sub
arpl
adc
or
or
or
dec
clc
or
or
mov
or
or
pushf
in
lods
popa
pop
sub
clc
enter
in
inc
pop
dec
iret
mov
mov
xor
out
mov
pusha
and
push
cmp
movsl
adc
lret
test
jne
dec
pushf
es
lods
add
mov
icebp
push
test
mov
lahf
out
xor
sub
movl
add
push
stos
add
and
xchg
adc
pop
add
lods
cli
mov
adc
xor
dec
test
test
cmpb
mov
in
xlat
cmp
inc
push
xchg
dec
mov
test
fisttpl
fstpt
mov
int
test
cld
and
and
clc
xchg
cli
rclb
pop
adc
push
cmp
test
mov
mov
pop
data16
xor
cs
or
dec
pop
lock
pop
xchg
mov
jns
push
pop
icebp
test
and
incl
or
fwait
enter
pop
push
call
insb
std
dec
clc
cmp
outsl
adcb
outsb
lcall
shrl
sbb
and
sahf
jns
pop
mov
sbb
cmp
lea
jl
mov
stc
or
daa
inc
arpl
push
movb
jmp
cwtl
sbb
andl
js
dec
mov
cmp
loope
lea
add
cmpb
je
add
ret
sbb
sub
pop
mov
cltd
adc
daa
rclb
pop
add
pop
xor
stc
and
add
pop
je
pop
push
jno
and
or
jg
in
cmp
adc
dec
pop
mov
rclb
push
adc
outsb
push
mov
push
cs
incl
mov
pop
pop
jne
jns
test
mov
cmp
loope
imul
mov
ret
test
fimuls
fs
aad
push
ret
outsb
andb
das
sub
test
xchg
pop
pop
loopne
sti
xor
xchg
or
scas
les
sbb
add
mov
movsb
les
jne
push
lret
je
xchg
incl
js
movsl
cmpsb
add
int3
inc
pop
int
jo
sbb
movb
add
cltd
incl
es
or
inc
push
imul
jo
sarb
jmp
adc
cmp
clc
aam
loope
or
add
add
cmp
cltd
adc
pop
adc
cmovns
dec
jnp
inc
je
insl
and
push
test
cwtl
xor
or
mov
adcl
sub
loop
adc
mov
mov
das
sbb
pop
bnd
xsha1
cmpsb
lret
push
pop
cmp
arpl
jb
push
mov
test
xrelease
sub
shlb
leave
and
pop
pop
adc
mov
pop
sub
and
testl
sbb
sbb
fldcw
mov
fwait
xchg
xchg
sbb
and
cltd
jne
inc
rorl
and
fs
mov
adc
and
mov
mov
jns
cld
adc
push
pop
outsl
sbb
inc
mov
jmp
sbb
mov
lret
aas
in
push
push
inc
or
cmp
xchg
dec
je
xchg
in
jns
addl
test
sub
jo
push
push
jge
jne
cmp
je
mov
insl
popf
push
movsb
mov
and
add
add
adc
mov
jne
arpl
add
leave
pop
jnp
icebp
jbe
aam
insl
dec
mov
inc
sbb
fs
fwait
imul
in
cld
and
pop
cmp
mov
mov
pop
inc
sbb
loop
ret
inc
push
insb
pop
inc
repz
dec
add
and
push
insb
in
or
idivb
push
inc
movl
lods
mov
and
or
mov
nop
lods
push
xchg
out
mov
push
mov
mov
push
sbb
sbb
not
sub
add
cli
or
mov
sbb
push
xor
xchg
dec
sub
inc
cmc
push
loop
pop
jmp
dec
fimull
std
add
push
push
ret
fs
pop
push
mov
xorl
push
pop
adc
push
enter
push
and
lods
lods
int3
inc
jae
movsb
addl
movsb
adc
pop
mov
sub
sbb
sub
jb
inc
mov
lea
and
test
lods
pop
xor
repnz
pop
mov
or
mov
adc
sarl
lods
inc
bound
push
mov
and
and
pop
ficoml
pushl
rclb
pop
mov
sbb
add
sub
mov
and
lea
in
pop
hlt
aaa
or
in
inc
inc
fcoml
pop
test
or
inc
sub
xchg
inc
cmp
jbe
mov
fwait
or
mov
or
mov
mov
mov
add
sub
inc
sahf
add
data16
xchg
sbb
mov
movsl
sub
sub
dec
mov
pop
pushf
xchg
dec
add
or
cmpsl
dec
mov
pop
clc
cmp
fs
sarl
shl
dec
int3
push
jno
and
dec
sti
jns
sahf
pop
nop
xor
enter
jge
mov
out
adc
adc
test
sahf
push
aam
jns
mov
iret
inc
ror
out
sbb
cmp
shr
shlb
pop
dec
rclb
mov
pop
or
scas
movsl
dec
add
mov
mov
adc
in
pop
and
xchg
dec
push
add
dec
mov
push
and
adc
das
repnz
mov
add
inc
mov
inc
sub
out
pusha
adc
mov
shl
aas
sbb
iret
push
jecxz
stos
aam
pop
jns
push
push
jbe
adc
aad
imul
dec
mov
cltd
sub
lock
pop
mov
sbbl
das
push
xor
andb
xlat
out
mov
inc
mov
push
leave
mov
adc
or
daa
jns
pop
pusha
push
dec
cmpsl
pusha
push
sub
or
dec
aas
shl
ja
outsl
jg
add
in
mov
mov
and
aad
mov
dec
xor
ret
add
or
out
jmp
cmp
lea
mov
and
pushl
or
sbb
sbb
rclb
dec
fs
push
lods
sub
and
jnp
sub
push
pop
leave
int
add
push
ret
nop
mov
test
inc
xchg
andb
dec
cmp
repz
xorb
xor
sub
nop
outsl
dec
in
fldl2e
add
add
sub
adc
add
jecxz
movsb
hlt
pop
sar
jge
push
mov
jnp
rcll
in
push
faddl
shr
pop
mov
adc
or
in
in
fs
push
clc
inc
mov
mov
and
pop
add
adc
nop
repz
ret
imul
push
xchg
dec
jl
cmpsb
pop
loope
cmpsl
cmpl
mov
mov
push
xchg
add
xchg
idivb
das
pop
ficomps
add
pushf
mov
aaa
cmc
jl
inc
scas
add
scas
std
and
xchg
jbe
pop
das
inc
xor
sub
push
add
xorb
test
mov
pop
sub
cmp
bound
xor
lea
mov
or
push
add
xchg
into
push
ja
and
add
int3
test
int
or
pop
xor
loopne
sub
inc
mov
inc
jmp
fs
inc
popa
add
or
mov
sbb
add
xchg
addr16
push
add
sub
mov
repnz
xor
pop
push
pop
js
in
jmp
andl
or
add
mov
sti
es
std
jo
push
xor
jp
lods
call
xor
sub
lds
mov
pop
jl
jb
jne
jo
das
pop
jbe
movsl
push
and
pop
sub
sbb
xchg
push
push
loope
out
cmp
lock
pop
cmp
sbb
adc
jo
gs
movsb
add
add
jp
mov
jg
or
rcll
lock
jle
pop
clc
cmp
adc
mov
push
pop
fs
jle
sub
rorb
push
pop
fbstp
jmp
add
push
xor
into
pushf
subl
inc
inc
xchg
xchg
loope
pop
mov
and
push
push
sbb
lea
clc
ds
or
pop
sti
adc
xchg
push
xor
cmpl
sub
popa
shll
hlt
pop
xor
inc
inc
bound
aad
movsl
fldl
pop
enter
sbb
or
mov
nop/reserved
adc
lods
pop
sbb
std
push
push
test
pop
dec
repnz
xchg
or
inc
inc
cmc
fs
js
push
xor
jmp
jp
sub
mov
or
add
pop
dec
mov
mov
jl
nop
sbb
mov
dec
or
cltd
jbe
cmp
jb
aam
shll
out
in
movsb
cmp
pop
mov
pusha
ret
jo
scas
inc
cmp
mov
fidivrs
and
sub
push
sub
jo
cmp
jb
es
push
test
cmp
incb
es
pop
jno
ss
fadd
jle
fs
icebp
xor
and
jo
cmp
int
iret
sbb
ja
ficoml
adc
punpcklbw
xchg
hlt
or
add
or
push
aam
call
jg
cmpl
push
clc
cmp
inc
lods
in
jg
es
jle
test
xor
push
inc
inc
sub
pop
fiadds
push
cli
or
repz
int
xor
inc
inc
lock
mov
push
xchg
pop
and
shrl
xchg
pushf
xchg
dec
in
outsl
pop
sub
std
repz
call
adc
sub
aas
nop
loope
xchg
push
mov
jmp
push
fmuls
inc
push
pop
daa
jg
in
or
fidivrl
rcrb
sahf
push
sahf
mov
gs
rorb
test
add
fs
pop
das
or
fnstcw
inc
push
inc
pushf
imul
loop
push
and
mov
mov
xor
mov
jno
or
push
test
and
push
mov
mov
push
in
adc
add
sbbl
leave
xchg
out
loopne
lods
dec
in
add
push
out
js
popa
add
pusha
xchg
stos
mov
pop
outsl
in
in
enter
fwait
add
pop
loope
xor
ret
in
push
adc
adc
cmp
xor
adc
sti
push
and
jo
or
and
xchg
adc
push
push
add
sbb
imul
pop
cmp
mov
loop
in
lods
xchg
and
push
jo
jmp
push
es
jb
aam
movsb
dec
push
call
push
in
jmp
sbbl
sub
aam
lock
dec
push
xchg
inc
mov
adcb
adc
inc
mov
pop
fs
add
jecxz
shll
dec
inc
aam
pushl
jle
jo
iret
push
rcrb
fsub
xchg
in
out
je
lahf
push
push
and
inc
jmp
and
inc
xchg
in
xchg
jne
inc
shll
call
dec
jmp
pushf
jge
fiaddl
or
jmp
mov
sub
add
pop
mov
push
sbb
dec
and
cltd
jg
rcll
lcall
test
sbb
orl
outsw
or
cmp
jbe
scas
leave
ret
incl
ss
das
mov
push
xchg
je
scas
stos
or
and
push
push
stos
imul
pop
pop
addr16
call
push
lahf
mov
rcl
pusha
xor
hlt
push
cmp
in
cwtl
in
sub
scas
dec
insb
adc
aad
cmpsl
mov
fs
imul
xor
mov
push
mov
or
pusha
popa
mov
dec
xor
in
test
jl
sub
mov
add
mov
lahf
and
out
mov
and
mov
pop
les
lahf
or
push
out
ds
push
xchg
or
push
dec
and
sub
pop
xor
les
scas
push
ja
les
jbe
jmp
out
mov
xlat
inc
mov
test
dec
aam
xchg
sub
adc
sub
aas
sbb
jno
shr
mov
shr
dec
stos
lcall
imul
add
outsl
or
and
cltd
pop
push
arpl
clc
cmpl
mov
sub
jns
lea
jge
sub
mov
ja
push
enter
mov
xor
or
fimull
sbb
int
push
mov
xor
popa
mov
jae
andl
dec
or
lock
bound
mov
testl
rclb
fbld
or
rcrl
sbb
lock
add
inc
or
in
mov
cmp
push
xchg
push
jnp
test
sub
dec
add
test
je
icebp
inc
ret
ret
inc
dec
mov
xchg
fsubrs
imul
rorl
mov
cltd
and
lods
sbb
xor
or
es
pop
and
or
sub
fistpll
mov
ret
xor
xor
imul
les
mov
mov
les
or
jb
ffree
nop
pop
lods
enter
and
ljmp
adc
mov
inc
jl
scas
mov
jo
add
and
lds
bound
rorb
sbb
mov
insb
adc
cmp
sbbl
and
xchg
and
pop
inc
xchg
sub
sbb
inc
rorl
in
fsubrs
loopne
ljmp
pop
test
dec
mov
movsb
fcoms
sbb
call
lea
in
les
push
add
insl
insb
jne
pop
mov
push
xchg
pop
jo
mov
or
xchg
pop
js
insb
pop
push
or
dec
pushf
ss
dec
loop
orb
dec
jb
out
adc
pop
enter
xchg
push
mov
in
push
add
leave
sub
add
fcoml
nop
mov
inc
mov
sub
push
and
ret
fdivs
push
mov
icebp
fsubrl
loope
fcomps
dec
int3
or
cld
stc
imul
orb
adc
mov
sahf
pusha
sbb
xor
pop
fdivrs
pusha
sub
mov
adc
push
outsb
xorb
out
mov
test
int3
mov
or
push
lods
sbb
sbb
push
jo
bound
or
or
mov
push
pop
mov
test
int3
movsb
dec
mov
jmp
push
repz
ret
mov
or
popf
movsb
rorb
mov
arpl
adc
push
fnstcw
jne
lock
jnp
add
jl
dec
enter
or
popa
sub
xchg
cmp
push
and
repnz
arpl
xor
inc
cmp
inc
dec
das
xchg
sarl
shrb
xchg
xor
dec
lock
pop
dec
add
adc
or
cmp
jle
jne
mov
or
jp
add
pushf
data16
shlb
cmp
aam
jecxz
or
xor
scas
add
dec
andl
add
movsb
mov
add
pop
jmp
push
inc
mov
je
push
xchg
xlat
rcr
ss
pusha
push
add
push
pop
lods
inc
or
dec
cmp
pop
mov
dec
sub
movb
adc
or
push
fbstp
test
push
push
mov
push
aam
jle
fs
xchg
fs
pop
pop
mov
roll
es
sub
in
add
push
repz
mov
lea
push
scas
add
cmc
add
enter
sbb
or
cmp
or
add
jns
pop
push
test
imul
lock
pusha
sti
lods
pusha
xchg
comiss
mov
imul
push
dec
dec
andb
pop
mov
cmp
and
nop
push
or
les
jo
bound
and
mov
xchg
xchg
es
xor
inc
inc
xor
insl
imul
sbb
roll
inc
test
imul
mov
and
sbb
mov
add
add
push
inc
add
pop
mov
mov
sbb
mov
pop
adc
loopne
push
or
pop
in
push
enter
mov
cmp
pop
mov
add
loop
adc
xchg
dec
or
insl
cmp
jno
push
and
mov
imul
add
insl
sub
and
cld
insb
xorl
cmp
jno
cmp
ja
mov
mov
push
mov
push
push
and
inc
je
daa
xor
cmp
cmp
xchg
addl
jo
aam
jo
pusha
mov
je
stc
adcb
iret
add
add
fldcw
push
ja
jl
icebp
fildll
sub
mov
add
push
sub
out
push
add
das
add
jmp
push
out
iret
out
pop
adc
add
insl
in
inc
xor
pop
loope
mov
lret
add
cmpl
mov
and
loop
inc
orl
mov
add
and
arpl
ret
sbb
and
sub
sbb
push
stos
sub
rcrb
sub
mov
dec
xor
loopne
mov
lahf
dec
jle
enter
xor
sbb
loopne
pop
fs
or
dec
jne
mov
gs
add
fimuls
outsl
cmp
adc
xor
push
icebp
sub
test
outsb
pushf
in
inc
push
fdivs
ret
push
adc
adc
or
or
fcoml
and
add
push
cld
add
clc
movsb
mov
jnp
je
xchg
aaa
or
and
add
add
jns
out
cmp
aas
mov
xor
push
xchg
or
pop
aam
ret
gs
xor
les
aaa
fsubs
inc
rcl
inc
subl
aaa
mov
add
pop
imul
in
add
ds
cmp
sbb
rcrl
jbe
and
je
and
rclb
lea
test
dec
mov
pusha
lds
faddl
xor
push
movsl
test
icebp
lods
or
mov
sbb
inc
mov
aaa
mov
mov
xchg
mov
push
push
out
add
icebp
xchg
js
push
add
jnp
and
mov
sbb
addl
or
jne
andb
dec
xchg
push
xchg
xchg
mov
cmp
cmpl
add
leave
andb
pushf
and
xchg
lea
in
popa
lahf
andb
pusha
pushf
popa
mov
mov
in
and
cmpsb
test
ljmp
jb
fidivs
cmp
test
dec
mov
aas
pusha
add
shl
pushf
test
ja
adc
ss
mov
adc
pop
jle
adcl
mov
sahf
or
xor
mov
dec
mov
xchg
movsl
in
loopne
pushf
or
enter
fcoml
sbb
xchg
push
fcoms
andb
mov
fildll
popf
xchg
adc
jge
js
imul
or
sub
mov
not
adc
sarl
ja
outsb
lret
pop
pushf
push
jle
mov
pop
cmp
cmpsl
rcrl
mov
cmp
pop
rorb
jo
es
les
add
mov
add
cld
out
push
add
add
shl
mov
sub
mov
or
aas
mov
lea
fcmovnbe
mov
jo
cmp
adc
clc
ret
adc
popa
fwait
cmp
rclb
pop
mov
jbe
jne
imul
mov
jle
sar
push
mov
jae
mov
aas
ret
cld
sti
add
push
cld
sbb
sub
sub
mov
cmp
addr16
lock
scas
mov
hlt
jmp
and
orb
jge
fldenv
adc
sbb
roll
pop
in
insl
sbb
sbb
add
pop
dec
xor
push
inc
mov
cltd
add
into
out
dec
sub
ja
push
das
mov
pop
sti
ja
mov
ja
rcr
bound
xchg
mov
mov
sub
push
xchg
jl
sub
push
push
jnp
xor
inc
jg
push
push
fadds
xchg
add
cmp
push
ret
mov
stos
scas
cltd
mov
push
xchg
das
mov
imul
inc
or
popa
sar
mov
dec
add
lahf
mov
cwtl
shlb
cwtl
cmpsb
mov
adc
push
inc
into
je
xor
dec
frstor
es
clc
gs
pop
sbb
sbb
aas
sbb
subb
dec
and
jne
movsl
icebp
and
xlat
popf
mov
lea
push
pop
iret
sbb
jnp
xor
loop
pop
sub
sbb
outsb
js
fcmovnb
mov
nop
push
lea
or
pop
rolb
pop
xorb
cmp
jae
mov
ficomps
jge
add
insl
mov
js
repnz
mov
mov
inc
mov
int
inc
inc
jp
add
hlt
filds
gs
add
pop
xchg
pop
lret
jae
incl
test
lods
jns
enter
push
sub
icebp
stos
scas
lds
mov
mov
je
addl
sar
fwait
inc
cmp
in
insb
adc
sbb
popa
lret
cmpsl
insl
or
lret
push
jb
iret
inc
adc
add
test
sbb
cmp
cld
das
mov
icebp
jle
lea
add
lods
xchg
push
loope
movsl
inc
add
pop
jmp
pop
nop
xchg
rcrl
cld
and
jmp
aam
fs
lcall
xchg
fs
aas
or
mov
iret
adc
popa
int3
lret
and
aam
ror
and
and
sbbl
and
or
sub
dec
xor
push
add
test
adc
and
pop
enter
add
add
mov
scas
and
pop
and
jp
jnp
lea
sbb
jmp
inc
int
ss
push
pop
negl
ss
dec
repnz
cmp
std
daa
fs
pop
fstpl
leave
add
dec
pusha
out
lock
or
icebp
ret
inc
dec
inc
pusha
mov
mov
mov
jmp
fldl
fcoml
inc
jp
pop
add
push
jmp
xchg
ret
mov
outsb
add
shlb
xor
inc
add
add
pop
dec
and
fwait
jns
push
or
in
and
mov
sub
ja
and
dec
mov
movsb
mov
pop
push
lea
in
pop
rolb
or
add
or
push
adc
and
ds
arpl
xlat
dec
test
or
sub
je
and
dec
pusha
mov
pop
push
lea
sbb
lret
fsubrs
push
dec
mov
imulb
xor
inc
dec
jns
xor
outsb
fcomps
movsb
or
mov
xlat
outsb
mov
out
sbb
push
sbb
movsb
push
sbb
push
mov
mov
mov
pop
jbe
or
xchg
cmp
pop
and
jle
cmp
dec
mov
in
icebp
sbbb
mov
xor
sti
add
fldl
cmp
clc
clc
popa
sub
mov
adc
das
cmp
jmp
xor
loope
adc
loopne
pusha
xor
push
cmpsl
movsl
dec
ret
mov
xor
cltd
inc
sub
jle
sti
jmp
push
shrl
std
inc
push
adc
dec
add
cmp
mov
mov
add
loope
sbb
jne
sarl
lret
sub
push
inc
popa
leave
mov
rorb
scas
mov
loope
arpl
add
repnz
daa
clc
mov
pushf
jne
mov
mov
mov
push
js
cmpl
mov
jb
mov
or
inc
push
jne
or
addb
loopne
out
mov
cmp
mov
js
shlb
add
dec
dec
xchg
iret
or
or
pop
lds
lfence
notb
adc
fdivrs
jno
popa
xor
lcall
push
adcb
cmp
fs
cltd
movsl
pop
fsts
or
div
adc
and
sbb
and
sbb
shlb
mov
inc
and
cmpsl
ss
addb
and
rorb
and
cld
out
and
add
xor
add
test
xchg
movb
dec
mov
cltd
das
movb
in
mov
add
iret
aam
pop
loopne
imul
push
loopne
inc
inc
std
fcom
cmp
in
inc
add
or
imul
lea
lock
lahf
sub
and
inc
or
mov
pop
adc
and
mov
lods
cltd
lods
jg
add
inc
pusha
jo
adc
test
cmp
sbb
lcall
adc
xchg
rclb
xor
pop
je
push
push
lods
enter
dec
jo
scas
xor
inc
insb
mov
jmp
inc
shrb
inc
pop
inc
enter
mov
jne
push
mov
push
cmp
jl
insl
or
dec
movsl
cwtl
imul
fs
andl
cmp
inc
push
inc
adc
add
dec
jnp
orl
and
imul
in
lds
xchg
or
outsl
jmp
jmp
inc
pop
shlb
mov
mov
pop
or
jmp
push
dec
and
dec
push
sbb
or
je
xlat
and
and
in
test
add
popa
fstpt
iret
orl
into
push
mov
scas
sub
dec
sub
test
fldcw
push
jo
add
fadds
sbb
in
push
lea
fisubrl
data16
push
push
push
inc
cmp
in
pop
mov
movsl
bndldx
sbb
mov
mov
adc
gs
adc
inc
shll
int
rorb
cwtl
dec
xchg
push
leave
out
xor
orb
sub
sub
dec
dec
lret
cmp
lea
les
xor
xor
dec
cwtl
xchg
in
sub
icebp
aam
jns
in
mov
mov
enter
or
push
loope
rclb
push
push
xchg
sbb
loope
or
dec
dec
loopne
or
andl
and
mov
outsl
push
pop
int3
push
pop
push
mov
lods
pop
lcall
inc
push
loopne
mov
aam
fsubl
and
adc
and
cs
cs
inc
adc
xchg
fdivrl
jle
jne
iret
pop
push
popa
and
push
pushf
or
push
or
rolb
and
cmp
frstor
xchg
cmp
push
xchg
clc
push
mov
mov
pop
push
cmpsb
xchg
repz
sbb
fsubl
and
call
lcall
xchg
in
loopne
or
adcb
mov
mov
enter
lret
jl
rorb
orb
xchg
aam
lods
push
mov
lcall
imul
pop
add
adc
lods
loop
shrb
gs
push
jb
mov
iret
popf
pop
leave
inc
enter
sbb
inc
adc
lea
fnop
sub
popf
mov
fs
jae
subl
fildl
adc
add
jg
aam
loope
push
xchg
ss
and
pop
lods
cmp
dec
push
mov
mov
andb
mov
pusha
push
pop
cmp
fdivl
cmp
cmp
pushf
outsl
cmp
outsb
xor
cmp
repz
pop
sub
addr16
push
sarb
add
test
mov
imul
adc
sub
push
mov
cmp
sbb
mov
or
push
pop
jle
fadds
popa
push
jmp
and
iret
orb
dec
xor
je
sbb
cmp
dec
adc
xchg
test
or
dec
mov
sub
jmp
push
orl
data16
rclb
mov
mov
mov
nop
add
add
aaa
push
add
xchg
loop
dec
adcl
insb
jecxz
or
aas
fstpl
inc
or
test
stc
movsb
fsts
andl
mov
test
mov
fidivl
jnp
dec
cmp
es
mov
add
adc
jg
ret
push
jns
add
aam
dec
leave
sti
and
ja
xor
mov
lods
jbe
mov
pop
cmpsl
scas
pusha
mov
fisttps
orl
jl
pop
sub
pop
cmp
inc
pop
test
xchg
sbb
push
push
loop
movsl
push
or
or
test
sbb
insb
ret
or
mov
sahf
dec
push
mov
push
jo
xor
lcall
inc
add
jo
rclb
sbb
pop
push
ja
push
mov
iret
arpl
bnd
jl
pop
jle
mov
daa
cmp
inc
sub
or
adc
xchg
xor
fmul
add
je
clc
vaddsubpd
cli
lea
push
mov
enter
adc
aad
inc
dec
pop
daa
test
dec
bound
pop
mov
arpl
sub
les
sub
dec
mov
je
daa
and
je
and
cltd
addr16
push
dec
in
out
cmp
pcmpeqb
shlb
jae
bound
xor
icebp
add
push
inc
loopne
xor
cld
outsl
rcl
outsl
sbb
cmp
inc
movsb
add
cwtl
in
sbb
jmp
or
jmp
mov
xchg
jns
add
fwait
or
addr16
pop
adcb
mov
enter
out
jns
cpuid
dec
mov
sbb
aaa
pop
inc
add
unpckhps
push
hlt
xchg
jmp
sbb
outsb
inc
into
xor
push
xchg
adc
das
jge
inc
mov
outsb
arpl
push
ret
scas
sub
test
add
add
aad
push
push
or
push
add
fcoml
int
sub
push
cmpsb
push
enter
enter
arpl
insb
pop
add
sub
xchg
aad
jg
je
jg
cmp
cmpsl
mulb
inc
xor
and
shrl
in
cmp
xchg
add
mov
mov
pop
cmp
push
or
push
pop
ret
add
test
imul
mov
cmp
mov
rcrb
and
add
stos
insb
add
or
cmp
jno
movsl
push
std
adc
nop
add
jo
mov
and
movsb
inc
adc
or
add
mov
push
aad
mov
jl
cwtl
xchg
cmp
nop
or
adc
fimull
sub
jo
imul
mov
adc
push
pop
push
lock
and
in
xor
pop
or
cmp
mov
add
lea
cmp
nop
push
or
add
js
push
push
insl
fwait
or
and
add
xchg
or
add
push
inc
or
cmp
jp
jo
push
sbbl
add
and
mov
pop
lret
bound
cmp
imul
daa
jae
rclb
add
sbb
xor
or
mov
dec
push
nop
outsb
test
das
stc
add
add
inc
add
and
shll
add
and
in
xchg
lcall
lea
enter
aas
xor
roll
push
out
jmp
jl
jns,pn
jmp
xor
and
xchg
mov
add
insl
sub
iret
pop
add
lcall
orl
ror
push
nop
dec
add
adc
xchg
shlb
or
sbb
add
mov
and
mov
test
lea
dec
arpl
pop
aas
in
sub
lret
or
dec
leave
sbb
cmp
pop
push
push
push
loope
add
dec
jl
enter
sahf
push
or
xchg
push
adc
mov
sbb
sar
aam
or
mov
push
adc
adc
inc
movsb
push
call
push
hlt
sub
and
repz
jb
jmp
mov
push
inc
scas
xorb
rcrl
mov
shrd
cmp
nop
cs
dec
lock
add
inc
and
add
cmp
dec
cmp
loop
imul
loope
cmp
adc
adc
adc
mov
test
mov
mov
addr16
adc
fs
sub
mov
imul
pusha
pop
call
sub
push
add
cmpl
in
push
lods
or
and
jns
aam
inc
rcrb
pop
jb
clc
sbb
mov
js
pop
and
push
inc
mov
push
dec
inc
xchg
and
test
js
xchg
sub
sub
dec
push
fsubs
andnps
pop
aaa
xchg
xchg
xchg
imulb
jle
dec
inc
cld
or
pushl
imul
xlat
mov
xchg
jbe
push
mov
dec
iret
jno
and
rolb
fnsave
sahf
mov
fwait
add
cltd
adc
inc
xor
std
or
inc
idiv
insb
cmp
mov
add
in
cltd
fmull
pop
dec
mov
xor
and
shrb
xor
repz
or
aaa
popl
xchg
adcb
push
push
and
lods
xor
push
imul
dec
xchg
jbe
xchg
or
sbb
and
add
cmc
jbe
or
sub
fstps
ffreep
test
lcall
rorb
add
xchg
push
testl
ret
psrad
xchg
cmc
scas
insb
gs
mov
movl
sti
jle
mov
mov
mov
fs
jmp
enter
inc
insb
insb
insb
sti
rol
subb
push
or
mov
in
cmp
cmp
mov
cs
stc
push
imulb
sub
jle
cli
or
les
push
test
push
fs
pusha
pusha
cmp
nop
in
aaa
push
into
cmc
pop
push
or
je
fsubrp
adc
daa
mov
testl
inc
test
dec
dec
sbb
and
cmpsl
lret
push
pop
setnp
out
and
dec
sahf
test
mov
daa
mov
or
es
mov
rorb
stos
ja
push
sbb
jne
jl
pop
lods
add
jbe
push
addr16
jg
ret
rorl
rcrl
movsb
dec
mov
sbb
or
nop
pop
scas
mov
mov
push
adc
push
add
cli
add
mov
mov
jne
cmp
push
add
sub
sti
add
xor
jmp
push
dec
repnz
dec
adc
sbb
lcall
push
incl
sub
mov
outsb
stc
xchg
inc
jbe
jge
movsl
sbb
push
push
jb
imul
xchg
insb
into
add
imul
add
mov
aad
arpl
clc
adc
mov
sub
xchg
mov
or
inc
pop
leave
cmp
push
cs
mov
jecxz
fdivrs
push
scas
mov
iret
cmp
adcb
in
jp
add
orb
or
mov
or
push
jnp
rolb
adc
cli
jne
push
mov
adc
mov
sbb
or
xor
ds
jmp
xchg
cmp
aam
jo
dec
cltd
fstpt
mov
mov
pop
movsl
cmp
in
lcall
test
pop
popf
fistpl
enter
jns
sbb
mov
xor
icebp
lods
push
sbb
mov
push
xchg
inc
pop
dec
gs
enter
imul
js
and
repz
mov
cmp
test
jmp
jns
add
mov
popf
loope
xchg
inc
cs
pop
add
sahf
test
xor
add
inc
adc
daa
aaa
pop
dec
push
push
and
xchg
fisttpll
pop
push
or
xor
repnz
cwtl
rcrb
clc
sbb
retw
pushf
inc
dec
push
dec
push
add
and
cmp
ds
nop
jo
mov
and
insl
pop
xor
mov
adc
shlb
xor
stos
popa
in
ss
mov
daa
sub
sarl
push
push
push
push
push
or
loopne
pop
sbb
add
loop
fsubs
inc
inc
js
or
jecxz
sub
in
adc
xchg
mov
or
ret
push
je
jno
cmc
divb
and
and
mov
xor
daa
mov
movsb
sub
push
arpl
enter
mov
enter
mov
sub
sub
xor
mov
call
ret
loope
inc
jecxz
and
add
popa
notb
adc
dec
lret
scas
sbb
sar
outsl
sub
jmp
out
stc
cmpl
movsl
test
mov
inc
rcll
mov
xor
js
xchg
push
cli
js
push
imul
add
insl
mov
dec
jg
mov
mov
aam
sahf
mov
push
iret
sbb
inc
lcall
cmp
popa
push
rcrl
cli
push
mov
sbbl
xorb
sub
repz
sahf
or
mov
sbb
xor
inc
daa
pop
in
iret
pop
sbb
arpl
xchg
jl,pn
xchg
shrb
rorb
and
adcb
gs
pop
leave
or
inc
push
sub
cld
jp
push
repnz
xchg
sub
push
insb
in
push
in
insb
xchg
dec
cmpsb
lods
push
enter
test
mov
or
sbb
in
scas
add
pop
loopne
inc
add
nop
cltd
or
and
inc
test
jmp
stos
inc
push
imul
mov
adc
pop
imul
push
rorb
xor
mov
sub
sub
and
xchg
mov
inc
mov
and
hlt
push
cmp
xor
sub
lods
sbb
pop
jmp
sbb
adc
push
add
imul
dec
adc
aam
inc
add
jle
clc
adc
inc
add
add
xor
pushf
in
inc
or
push
not
xchg
dec
repnz
and
add
je,pt
or
rcr
test
add
cmc
addb
pop
and
sbb
adc
repnz
bound
inc
and
sub
popf
nop
out
add
les
leave
aam
or
mov
inc
les
sbb
leave
inc
sbb
addl
inc
mov
lret
cmp
add
mov
mov
rcrb
orb
insl
jae
xor
stos
jno
adc
xchg
and
aaa
push
cmp
jo
mov
adc
enter
cmp
movsb
insb
mov
mov
mov
push
mov
push
imul
adc
clc
mov
pushf
insb
mov
insb
push
cmp
push
imul
nop
or
lret
mov
pop
or
dec
jo
add
add
into
pop
movzwl
repz
pop
or
clc
lock
inc
cmp
shll
lods
xor
movsb
and
cmp
dec
sub
jg
add
inc
sbb
or
push
sbb
adc
or
test
and
jbe
sbb
sarl
add
pop
mov
out
xchg
mov
mov
je
adc
inc
inc
pop
lea
scas
pushf
mov
dec
jecxz
fisubl
into
push
push
scas
pop
mov
shll
push
push
mov
shl
jne
aas
mov
test
lods
mov
pop
inc
jne,pt
mov
pop
xchg
xor
lds
xchg
xor
mov
sub
sti
call
jle
add
js
mov
mov
adc
inc
inc
dec
fcompl
pusha
insl
jae
jmp
cmp
add
jnp
pusha
cmp
cmp
xchg
loope
mov
int3
cmp
or
jne
xchg
sbb
imul
mov
mov
in
add
stos
insl
xor
mov
lea
rcr
rolb
in
inc
jne
in
pusha
movsb
addr16
or
int3
pop
sbb
sbb
aas
inc
enter
insl
inc
divb
inc
jne
rol
ficompl
sbb
jmp
and
push
rol
mov
leave
aam
int3
shl
or
xor
add
mov
adc
lcall
ud1
enter
adc
adc
fwait
mov
sub
leave
adc
lahf
xchg
mov
sbbb
xchg
popf
and
enter
sub
push
sbb
adc
add
jne
bt
or
add
cmp
sbb
xor
push
enter
mov
sub
rcll
push
push
push
js
sub
and
arpl
cmp
jge
sti
fistpl
adc
ljmp
jne
and
aas
or
je
pushl
sbb
lock
pop
pop
enter
jno
mov
and
pop
rcrb
jno
add
insl
mov
fisttps
xchg
push
xor
add
mov
mov
xor
xor
push
sbb
push
push
xchg
pop
notb
into
ljmp
add
dec
out
push
mov
xchg
adc
je
shll
mov
push
mov
loopne
popf
fs
loopne
inc
lea
ss
inc
push
flds
sbb
jp
daa
hlt
xchg
push
ret
cmp
rolb
lret
sbb
jmp
push
and
shrb
inc
ret
mov
rcll
fsubrs
data16
iret
or
jne
mov
pop
xor
loopne
pop
add
ja
cld
in
rolb
mov
mov
xchg
xchg
pop
pop
pop
ret
cmp
cld
sbb
jno
push
mov
into
cwtl
add
daa
pop
mov
cs
sbb
popa
pop
xorb
popa
pop
aaa
cmp
add
enter
mov
popf
pop
pop
mov
xchg
add
call
cltd
int3
push
mov
ret
call
rcll
and
or
imul
add
inc
pop
cmp
nop
xchg
and
add
xor
int3
adc
aaa
pop
leave
add
leave
mov
and
and
in
push
insb
aaa
call
add
push
pusha
aaa
jae
repnz
add
dec
pusha
daa
int3
movsl
and
rorb
and
and
loope
xor
lds
pop
sub
add
xchg
add
and
sbb
rclb
cmp
and
les
pop
rcll
xor
xor
sbb
xchg
xor
adcl
push
les
leave
xchg
xchg
xchg
cld
lods
loopne
or
nop
dec
cld
cld
inc
push
push
shrb
add
repnz
or
nop
pushf
sub
dec
and
push
gs
adc
inc
mov
add
xor
test
test
inc
arpl
and
adc
jnp
in
sbb
dec
rcll
incl
inc
mov
mov
int3
stos
lahf
or
adcb
xchg
xchg
mov
dec
popf
lea
add
ljmp
mov
add
push
add
push
inc
js
rcr
lea
and
xorb
or
mov
and
mov
push
je
push
rorl
or
mov
ja
mov
adc
mov
test
xchg
and
or
pop
ljmp
int3
mov
sub
cmp
pop
or
test
xor
shrb
push
and
pop
mov
jmp
ret
jge
loop
or
add
push
loope
test
iret
and
cmpsb
je
push
push
or
dec
scas
sub
pop
sub
jne
cmp
or
cmp
in
add
movsb
sbb
pop
ret
push
and
xchg
sbb
ss
test
and
dec
jb
adcb
mov
cmpb
jo
pop
inc
add
add
aad
xor
or
push
pop
or
dec
sub
and
push
mov
out
movsb
lock
outsl
or
add
subl
push
shlb
push
out
dec
loopne
repnz
jbe
sub
imul
out
mov
adc
pop
or
fnstcw
mov
aam
push
push
mov
inc
jbe
cmp
push
xor
jg
shlb
addb
mov
and
pop
inc
push
inc
push
dec
inc
les
mov
push
cmc
dec
mov
jl
jl
js
jbe
push
lret
add
or
clc
clc
sbb
pop
or
pop
scas
mov
jo
cmp
leave
jno
loopne
into
jp
shlb
adc
or
add
ja
sbb
fisttps
sbb
inc
push
jb
push
test
dec
pop
in
cli
jae
jae
cltd
cmp
imul
jne
push
jo
scas
push
es
inc
enter
mov
add
filds
in
jl
je
clc
lock
loopne
push
push
adc
adc
adc
add
push
mov
xor
xchg
mov
xor
jb
pusha
pop
hlt
or
hlt
or
insb
lods
fsubs
iret
dec
jae
dec
push
fcoms
sub
cmp
fs
mov
sub
dec
pop
insl
inc
mov
rorl
shll
test
outsl
push
or
fldl
xchg
sub
dec
les
dec
dec
mov
fiaddl
dec
jne
pusha
mov
push
or
mov
pop
dec
push
and
dec
fstpl
jl
lcall
lock
aaa
jns
push
fsubrl
and
insb
jl
les
enter
sub
lret
push
jb
call
loope
cmp
pusha
dec
dec
mov
inc
in
xor
add
cmp
ret
inc
inc
pop
outsl
dec
xchg
out
dec
sub
dec
es
adc
dec
sub
nop
sahf
dec
fwait
mov
imul
add
dec
sub
add
test
nop
mov
rol
adc
add
adc
push
push
sbb
test
pop
mov
dec
fdivrs
and
dec
nop
sbb
aaa
dec
insb
es
lea
cmp
sbb
jl
inc
jo
sbb
in
les
jmp
sub
lods
dec
mov
cmpsb
fisttpll
xor
push
jecxz
jno
and
mov
jo
fmull
add
pop
lea
pop
lock
ss
mov
push
jae
adc
push
roll
fmuls
cmp
out
push
push
mov
or
lret
push
pusha
pop
fstl
or
cli
shll
outsl
test
out
inc
cmp
rorb
pusha
xor
nop
xchg
lret
cld
outsl
rclb
add
jae
and
int
jg
incl
loopne
test
fidivrs
adc
inc
xor
xorl
mov
ja
movsl
ret
xchg
lods
add
lret
mov
fiaddl
mov
mov
push
leave
shlb
sbb
mov
pop
fildl
or
jmp
fildll
rcrl
and
icebp
xchg
addb
roll
in
dec
jb
and
sti
loopne
cwtl
and
dec
and
js
add
test
adc
inc
std
int3
xor
adc
jl
fdivl
subl
lret
xchg
xchg
sub
lods
pop
cmp
sarl
outsl
aas
push
jbe
dec
mov
or
add
in
dec
mov
cmp
jecxz
cmp
adc
cmpsl
pop
inc
push
cs
sbb
sub
rcr
rclb
and
test
lea
pusha
outsl
pop
jecxz
fbld
push
testb
add
pop
movsl
mov
pop
and
xor
int
mov
je
cmpl
xor
enter
repz
lahf
mov
sahf
sbb
cld
jo
lods
mov
jne
xor
pop
repnz
push
sbb
data16
adcb
adc
mov
xchg
or
cmpb
xchg
mov
jne
xor
inc
sbb
sbb
idivl
inc
les
sub
add
push
sbb
aam
sbb
popa
pop
adc
lahf
cwtl
sub
pop
mov
fwait
pop
sub
adc
sbb
mov
inc
inc
pop
add
mov
xchg
and
add
test
pop
hlt
inc
pusha
bt
xor
lcall
adc
mov
stc
pop
mov
jg
inc
dec
popa
push
cwtl
mov
shrb
scas
fwait
add
mov
dec
xor
adc
mov
movl
pop
pusha
inc
lcall
lods
rol
pop
jo
outsb
add
rcl
pop
sub
and
mov
je
es
or
or
and
mov
cmp
fsubl
inc
out
cmp
xor
add
cmp
lods
and
add
push
in
sbbb
inc
popa
add
mov
add
rol
outsb
cmp
or
jae
fdivrp
rorl
cmpsl
and
fsubrp
pop
cmp
jb
xchg
ja
divl
fistpl
mov
and
xor
xchg
add
jno
roll
sub
outsb
and
inc
rcrl
push
fsubrs
and
mov
mov
inc
lods
xor
lret
hlt
or
jne
jne
sub
cmpsl
hlt
sbb
and
mov
sbbl
outsl
pop
adc
push
jmp
icebp
add
inc
jnp
jns
sub
adc
push
pusha
jl
inc
inc
mov
jle
out
pusha
mov
ss
xor
out
mov
add
dec
and
ret
mov
xorb
dec
or
int
popa
adc
incb
inc
cmp
push
nop
pop
pop
and
test
andl
mov
pushf
sbb
loope
shrl
aam
icebp
jno
sbb
pop
ret
popf
addr16
cmpl
push
add
cmp
es
push
adc
adc
or
add
popa
aad
fisttpl
shr
mov
adc
and
inc
pusha
dec
sbb
push
stc
adc
sbb
mov
bound
repnz
sub
cmp
outsb
popa
inc
cs
inc
sub
xor
add
push
cwtl
xor
jae
sub
cmp
or
xor
inc
or
mov
subb
nop
in
subb
pop
inc
or
mov
enter
in
pop
push
movsb
sbb
push
enter
in
ss
cli
jns
dec
xchg
push
sub
andl
movsl
pop
or
adc
push
push
pop
pop
enter
out
cmp
push
or
jns
int
xor
enter
sub
xor
lods
mov
fs
mov
mov
sahf
jl
pop
push
adcb
stc
jmp
loop
pop
and
jne
xchg
jns
jno
lods
mov
mov
cmp
pushf
andb
and
xor
inc
nop
aaa
sub
das
loop
lods
in
ret
int3
les
adc
xchg
andb
lods
lods
sub
dec
and
push
scas
out
xor
iret
dec
imul
je
jne
inc
mov
and
xor
add
gs
dec
hlt
jo
pop
and
dec
or
push
je
bound
popf
mov
cmp
ja
loope
fldcw
or
loope
rcll
loop
dec
mov
cmp
push
popf
js
jg
jmp
adc
adc
and
and
dec
stc
cmp
loopne
and
mov
sbb
dec
sahf
cmp
mov
dec
or
shrl
cmp
dec
dec
mov
movsb
nop
scas
add
rcl
xchg
lret
pop
push
and
daa
add
adc
adc
jne
inc
inc
lods
in
aas
inc
and
push
add
push
sbb
imul
inc
daa
fwait
insb
and
seta
orl
add
or
jl
and
out
dec
cli
pop
mov
or
dec
adc
or
cmpb
nop
or
shlb
or
idivl
push
scas
jae
faddl
add
mov
aas
loopne
pop
outsb
adc
iret
mov
push
push
mov
push
lods
xchg
stos
jne
jl
mov
pushf
mov
xor
dec
test
in
adc
xlat
jmp
jmp
jmp
dec
or
adc
and
jmp
pop
test
jmp
aam
insb
nop
sbb
clc
sti
mov
test
orb
pop
aaa
or
andl
mov
add
pusha
add
add
pusha
add
add
jae
cmp
mov
or
ret
push
fists
push
std
mov
aas
in
sbb
test
cs
jne
fs
dec
xor
push
fwait
pop
repnz
imul
cmpsb
push
cwtl
sub
sbb
mov
ret
lds
xor
xor
cwtl
adc
and
arpl
mov
push
sbb
push
jmp
push
xchg
mov
sbb
sbb
je
push
pusha
and
jno
push
pop
push
jne
enter
dec
test
push
dec
push
sub
lock
xor
mov
mov
jl
cmp
mov
sub
shrb
roll
mov
imul
dec
or
pop
add
lods
push
push
pusha
mov
or
test
adc
add
cmpsl
adc
stos
add
or
mov
scas
and
xor
mov
or
xchg
lock
push
adc
xor
popf
inc
mov
ret
outsl
nop
add
inc
dec
pop
fs
pop
xor
and
mov
add
scas
nop
sbb
add
outsb
and
jo
push
sbb
in
aad
mov
dec
xlat
cmp
sub
fsubrl
cmp
jb
test
jle
pop
in
jo
xor
jae
ret
inc
cmp
call
cmpsl
addl
sbb
loope
mov
inc
and
pusha
sub
jnp
jns
sbb
add
insb
ret
mov
test
mov
and
jp
in
scas
jne
insb
or
xchg
push
and
lea
and
notl
cmp
adc
cmp
sbb
add
inc
add
movb
shrl
call
adcb
add
cmp
adc
sbb
shl
jns
push
jmp
jmp
xor
push
mov
lcallw
and
rclb
sbb
in
pop
out
out
mov
fidivs
imul
dec
iret
or
jge
cmpsl
add
jae
push
push
push
incb
push
pop
cmp
mov
mov
mov
call
jne
inc
pop
pop
cmp
jbe
xor
jne
add
cmp
xor
cmpl
mov
inc
inc
insb
test
xorl
push
bound
divb
adc
cltd
inc
cmp
push
mov
sbb
daa
or
mov
dec
jne
cmpsb
dec
les
testb
push
je
dec
mov
adc
cwtl
jmp
lock
cltd
mov
test
dec
push
sbb
add
roll
push
jbe
jecxz
jne
or
ret
sub
add
mov
lret
jo
xor
ds
mov
lahf
mov
xor
mov
ss
xchg
addb
or
or
push
mov
pop
mov
push
add
lock
mov
loopne
movsl
inc
sub
inc
cmp
lods
add
xor
lds
push
xchg
cmc
insb
mov
mov
jne
mov
cmp
mov
pop
add
cmpsb
loopne
mov
fnstsw
andl
push
imul
sbb
push
jmp
mov
leave
push
ljmp
lret
in
pop
mov
cmp
repz
lea
mov
mov
xor
stc
mov
xchg
sub
add
mov
mov
in
out
and
pop
hlt
decl
ja
push
jmp
add
cmp
ja
jno
ret
inc
mov
mov
pop
lea
push
xor
js
jbe
ret
roll
add
push
push
sahf
xor
popa
dec
repz
jne
insl
sub
push
lock
mov
mov
jb
enter
and
iret
add
pop
inc
inc
scas
and
mov
dec
push
cs
mov
cmp
dec
mov
sub
jge
pushf
and
xor
fisubrl
sahf
mov
xor
mov
xor
jb
stc
movzwl
sub
loopne
popl
sahf
mov
call
pop
inc
sbb
call
xor
push
fcoms
inc
js
jge
enter
movsl
xorb
jb
aas
mov
shrb
jb
sbb
sbb
incb
push
adc
or
or
addl
adc
jle
ds
loopne
mov
and
cmp
mov
fmull
pop
jle
or
adc
repnz
push
mov
jmp
push
cmpb
jae
push
pusha
jnp
and
jecxz
push
loopne
pop
cmpsl
dec
add
inc
xor
jl
jge
lds
mov
ja
push
ja
pop
rcll
lds
adcl
push
xor
dec
push
ficompl
inc
inc
loopne
xor
pop
sub
mov
sub
and
fwait
cld
jne
sub
enter
call
in
xchg
jno
imul
lock
push
push
addr16
pop
in
sub
push
and
pop
jne
pop
insl
idivl
lcall
jle
add
or
jo
mov
movsl
sarl
or
add
or
hlt
sbb
add
loopne
addb
mov
push
cmpsl
push
es
cmp
add
push
outsb
mov
push
iret
enter
sbb
push
and
es
addl
test
andl
xchg
out
xchg
add
jge
lret
pop
adc
cmp
jo
fnstenv
xor
jecxz
je
ja
loop
mov
push
shll
lahf
mov
xlat
or
push
ret
push
jno
ret
je
push
test
and
mov
int
ret
push
xor
add
data16
push
push
mov
or
sbb
stos
push
sbb
mov
enter
push
call
mov
or
aaa
jne
sbbw
jp
jnp
mov
movsl
adc
or
sbb
pop
fwait
jl
sub
jl
lods
and
add
ret
adc
cmp
push
pop
sbb
je
add
lods
js
pop
mov
rolb
jbe
adc
mov
dec
push
cmp
mov
imul
jnp
fldenv
mov
inc
and
mov
je
push
jp
add
xchg
pop
std
or
rorb
or
pop
ja
les
in
jo
pushf
xor
adc
mov
pusha
je
icebp
sub
imul
iret
adc
sbb
push
mov
in
lret
mov
add
mov
js
jnp
out
insb
jne
testb
pcmpeqd
jecxz
mov
adcl
test
jb
pop
jne
test
jge
adc
push
loope,pn
loopne
xchg
sub
push
das
lret
scas
in
dec
mov
xchg
cmp
xor
je
fwait
js
sbb
lock
jo
jne
mov
les
repnz
rorl
push
mov
mov
and
roll
push
dec
cmp
mov
sub
mov
or
adc
add
mov
or
scas
pop
jge
sbbb
push
and
jo
arpl
sub
ret
pop
push
pop
adc
add
sbb
xor
pushf
or
push
pop
pop
push
jp
call
daa
rol
cmp
subb
enter
out
aam
push
repz
xor
fwait
icebp
adc
enter
or
push
lods
mov
loope
mov
sahf
push
push
in
push
adc
inc
xor
enter
iret
mov
add
sar
mov
jne
xor
xlat
out
and
or
stos
add
xor
insl
lock
out
xchg
mov
popa
pop
js
in
bnd
enter
out
out
push
xchg
adc
out
xchg
pop
mov
cltd
sub
adc
add
testl
or
push
push
xlat
repnz
xor
leave
inc
loopne
xchg
dec
cmp
jge
push
shl
sti
fildl
je
or
push
push
je
clc
adc
inc
cld
movsb
lock
pop
cmp
rcrl
sti
xchg
int3
leave
cmp
sti
cli
insl
cmovge
adc
cmpl
iret
jb
ljmp
fisubrs
icebp
pusha
mov
cld
inc
call
push
and
lea
jnp
mov
sub
adc
fnstsw
or
cmp
or
or
roll
or
clc
outsl
inc
lcall
add
lock
push
add
imul
dec
jbe
dec
imul
or
add
xor
xor
rclb
lods
pop
aas
mov
push
xchg
cwtl
add
mov
xchg
pop
pop
les
and
add
push
roll
sbb
jo
inc
inc
cmp
jmp
add
call
pop
or
cmpsl
xor
mov
pop
fidivrs
mov
je
pop
add
rorl
pop
clc
insb
mov
dec
cmp
stos
sub
cmp
jne
inc
lods
ret
out
das
push
or
orb
mov
loope
insl
jns
push
and
idiv
push
jns
inc
dec
dec
std
pop
xchg
push
cmc
les
sbb
xorl
sbb
rorl
dec
or
decb
inc
inc
and
ss
aad
or
xchg
sub
mov
and
dec
sbb
jno
stc
and
mov
or
mov
std
inc
push
jecxz
mov
adc
ja
mov
mov
xlat
sub
cmp
je
aas
dec
jb
pop
pop
adc
std
add
push
loopne
lret
popa
mov
jmp
push
lcall
leave
push
pop
ret
jo
push
movsl
adc
fs
cmpl
xchg
lahf
cmp
or
push
loop
fdivs
inc
jg
and
xor
dec
xchg
arpl
sti
push
push
pop
or
bound
cmp
pop
push
inc
push
push
popf
ret
cld
and
stc
incl
add
sub
add
cmp
cmp
inc
push
clc
jno
imul
out
add
push
or
push
sbb
data16
jmp
sbb
xlat
cmp
rolb
int3
cmpsl
sub
pop
and
cmp
loope
add
push
jp
push
and
xor
decl
std
inc
jo
pop
sbb
daa
aas
lock
std
sbb
xor
or
shlb
push
and
fldcw
pop
jne
xchg
fsubrs
push
scas
call
mov
pusha
popa
gs
mov
dec
cmp
scas
popa
xchg
cmp
push
push
and
rorl
movsl
popa
mov
lds
iret
push
inc
repz
push
lock
add
mov
dec
int3
repnz
outsb
popa
or
pop
sbb
dec
es
and
pop
dec
xor
xchg
mov
jae
inc
jbe
adc
push
out
int
loopne
mov
add
cmp
emms
jge
mov
adc
sbbb
js
sbb
fldl
pusha
jbe
mov
cmovbe
fwait
dec
mov
adc
sbb
mov
int3
pop
and
and
or
ljmp
mov
add
xchg
mov
cmpb
mov
pushf
iret
repz
and
mov
add
sbb
mov
mov
or
mov
sbb
push
icebp
sub
in
rorl
mov
push
add
in
stos
mov
mov
pushl
roll
fnstenv
fcmovnbe
test
push
gs
insl
cmpb
push
cmp
outsl
sbbb
cmpl
mov
fistpll
out
jmp
jbe
adc
pop
mov
in
add
and
sbb
mov
andb
dec
pop
fnstcw
add
mov
movsl
adc
pop
mov
shr
lock
dec
cwtl
add
push
rcl
shrl
or
fwait
xor
or
push
pop
xchg
adc
push
or
orb
xchg
test
aaa
in
lea
lds
cwtl
ds
rclb
mov
add
rorb
dec
mov
mov
sub
js
and
adc
int3
mov
notl
je
ljmp
es
jmp
xchg
call
sub
sbb
xor
rcll
incb
pusha
popf
and
xor
aaa
shlb
ss
cmpsl
movsb
pop
add
mov
jb
sbb
js
or
cmp
xor
or
pop
dec
xchg
les
and
lds
or
orb
lcall
call
jmp
mov
pop
sarb
sbb
sub
or
push
fidivl
das
lret
and
shlb
fisttps
orb
sarb
fwait
rolb
loopne
push
push
loopne
js
push
adc
fs
push
jle
push
mov
dec
leave
ret
inc
fistpl
mov
insl
cwtl
add
xchg
mov
pushf
es
aad
push
fwait
xchg
lret
jl
sbb
sub
bound
push
lock
jne
push
xchg
mov
and
mov
sbb
push
push
test
addr16
rol
in
pop
mov
rcr
inc
add
mov
adc
jne
repz
test
adc
fcoms
sub
cmpsb
jno
ficoml
sar
arpl
cmp
repnz
jo
das
push
enter
sti
out
insb
push
and
xorl
cmpsb
aas
push
pop
sbb
mov
adc
cmp
pop
jnp
xor
and
rcrb
xor
and
add
cltd
mov
sti
dec
adc
adc
fstpt
mov
in
pop
lret
sub
inc
cmpb
shlb
aam
jmp
fcomps
add
roll
ss
js
add
mov
inc
inc
hlt
adc
cmpsb
or
dec
mov
hlt
sti
ss
in
dec
sbb
push
add
mov
xor
lea
mov
xchg
std
dec
xor
dec
in
rolb
sbb
pop
testb
xor
arpl
pop
push
sbb
sub
push
pmulhuw
les
pop
adc
adc
dec
test
mov
cld
adc
es
xchg
or
lea
inc
bound
push
ds
cmp
push
je
pop
jl
fbstp
nop
cli
outsb
sahf
sbb
add
xchg
add
out
jmp
add
push
push
jge
sbb
add
sarb
pop
jns
sbb
cmpsl
stos
adc
ficomps
sbb
movsl
jl
enter
add
jae
lmsw
clc
push
sahf
divl
cld
nop
rolb
adc
mov
lds
insb
insb
jo
pusha
shl
adc
jne
nop
pop
dec
lock
test
imul
xchg
push
lea
push
push
or
je
std
leave
xor
test
push
jno
mov
mov
pop
bound
ret
ss
fs
inc
add
or
insb
and
std
clc
xorb
mov
mov
mov
jo
mov
pop
jge
jecxz
mov
jp
rcl
je
js
js
push
sbb
xchg
mov
rolb
mov
cld
sarb
ja
mov
je
cld
cld
fimuls
cmp
add
cmp
cld
adc
mov
pop
cmpsl
add
or
jnp
lahf
xchg
and
cmp
sbb
repz
cmp
or
mov
enter
or
mov
iret
nop
mov
dec
lea
sidtl
lea
sbb
jl
push
xchg
xchg
inc
xor
or
popf
pop
in
ja
fsubs
and
sbb
sub
int
mov
in
sub
cmpsb
mov
stc
incl
dec
rcll
pop
sbb
push
fs
loopne
pop
aas
call
push
mov
add
testb
insb
cmp
pop
sub
clc
loope
imul
clc
add
rcrb
lea
cmp
pop
fadd
mov
mov
add
ljmp
icebp
cmp
jb
add
cmp
jbe
and
rorl
sarb
jb
int3
mov
and
dec
inc
sbb
icebp
mov
js
cmp
or
push
mov
xor
push
mov
loope
adc
adc
cmc
jo
mov
inc
xchg
inc
sbb
mov
push
jns
int
addb
jp
insb
inc
sub
jmp
push
cmp
xchg
inc
or
xlat
leave
inc
push
jg
sbb
daa
test
jne
jnp
push
cmp
jbe
push
push
push
xorb
mov
pop
jmp
jmp
popa
daa
jne
push
divl
jae
scas
cmpl
add
leave
push
sbb
imul
cmp
aam
pop
imul
or
push
xchg
les
add
pop
adc
ret
mov
hlt
add
xchg
imul
out
pop
mov
xlat
outsl
lods
movb
flds
sbb
inc
add
icebp
scas
cmp
adc
jne
and
pshufw
push
jp
mov
jmp
int
outsl
jo
cmp
mov
mov
xor
into
jg
je
jge
mov
jmp
push
push
sbb
movsb
push
out
int3
xlat
aaa
out
mov
adc
push
push
clc
test
xor
and
push
repz
adc
clc
mov
iret
mov
xchg
in
mov
fdivrl
push
test
rolb
in
cmp
hlt
adc
pusha
das
or
jecxz
daa
push
jecxz
push
push
jg
je
sub
pop
jnp
outsb
sub
mov
or
das
mov
outsl
movsb
popf
xchg
test
mov
xor
sub
push
add
test
mov
jp
push
and
pop
enter
test
call
inc
sbb
insl
inc
pop
gs
jle
or
mov
push
push
add
dec
adc
repnz
popf
sbb
aam
mov
insl
test
call
cwtl
jne
jmp
je
pushf
add
pushf
ror
leave
push
add
inc
je
mov
cmp
roll
fs
shll
les
pop
sbbb
add
nop
cmpl
inc
or
mov
jp
xchg
cmpsb
jmp
xchg
ss
inc
pop
jno
shrb
xor
loope
lock
mov
jno
lock
jp
pushl
stos
ss
insl
push
or
lahf
ss
push
subb
xchg
fs
pop
jbe
xor
insb
xor
pop
adc
cltd
mov
insl
popa
arpl
dec
inc
add
pop
or
enter
test
movsb
pop
ficoml
lret
inc
sbb
xor
xor
or
xor
les
enter
sbb
cwtl
adc
add
push
rcl
dec
cmpl
sarl
xorps
push
jnp
mov
sub
and
or
sub
jnp
in
loope
sti
jmp
push
push
jae
adc
push
pop
pop
mov
inc
push
push
sbb
sub
mov
add
daa
dec
push
outsl
pop
add
icebp
mov
and
push
rolb
cmp
addl
jns
inc
movsb
sbb
push
loop
fcmovu
mov
pop
inc
pop
je
jmp
pop
push
fcoml
inc
into
add
mov
ret
mov
and
call
mov
or
mov
mov
mov
cmp
leave
arpl
ret
jp
jl
adc
or
js
and
xchg
or
es
sti
mov
push
fcoml
loopne
or
in
in
add
mov
xchg
push
ret
notl
xchg
ja
inc
push
js
add
adc
xor
inc
add
sub
and
fadd
popa
pop
adc
mov
repz
movl
push
sbb
push
sbb
data16
or
iret
push
add
jmp
add
dec
or
and
sbb
rcl
xchg
jne
mov
jns
or
or
sub
subb
leave
sub
or
or
sub
inc
dec
cmpsb
roll
push
fcomps
inc
push
ret
ja
jmp
adc
add
push
push
fdivs
push
or
sub
dec
adc
or
arpl
scas
adc
fsubrl
lods
xchg
push
xchg
or
les
rclb
add
je
das
sbb
and
and
cmpsl
imul
push
dec
add
stos
xchg
inc
ja
enter
jno
dec
fmuls
jns
add
and
jge
push
clc
sub
push
sub
xchg
ret
mov
mov
add
loop
inc
push
xchg
mov
push
or
movsl
adcb
adc
xlat
dec
loope
outsb
xor
mov
mov
add
call
pop
xchg
cmp
sub
push
aad
or
adc
push
test
add
mov
or
xchg
push
push
andb
push
mov
lock
int3
mov
movsl
sub
in
test
ret
les
sbb
add
iret
lods
add
ja
cmp
push
scas
enter
mov
pop
jb
cld
sub
inc
cwtl
rorl
int3
imul
mov
loopne
rcll
add
inc
dec
scas
test
add
inc
adc
sub
xchg
push
les
and
or
sub
push
push
ret
shll
mov
daa
sub
insl
das
push
sbb
repz
add
mov
jbe
adc
sbb
push
daa
pop
sub
sub
pop
rcrb
inc
ss
lods
les
ljmp
xchg
push
mov
pop
mov
sbb
pushf
and
cs
sarl
mov
jnp
add
push
jo
pop
jne
in
adc
cmp
fcomi
rolb
adc
xchg
mulb
lods
je
xchg
xor
les
mov
or
sbb
out
pushl
pop
adc
xchg
out
test
adc
jo
enter
add
adc
test
ret
sbbl
xor
xor
or
xchg
sbb
jl
jmp
adc
mov
adc
inc
bound
sbb
or
adc
leave
lcall
pop
das
xlat
les
in
aas
aaa
js
bound
mov
jg
in
movsl
fwait
push
push
stos
pop
cmp
in
pop
adc
jmp
mov
lods
push
xchg
out
fs
sbb
sbb
jo
ja
push
xchg
arpl
pop
rorb
ds
ficomps
cmp
push
sbb
adc
sbb
jne
negb
sbb
add
lea
jne
mov
scas
loope
lahf
std
xchg
jg
ja
mov
dec
dec
xor
jne
inc
jne
pop
pop
sub
pop
sti
mov
orl
pop
cmpsl
mov
repz
rep
stos
movzwl
push
pop
inc
add
add
les
insb
jge
add
adc
das
sbb
and
push
stos
daa
xorb
cs
pop
mov
dec
and
shl
out
xor
inc
mov
push
jnp
mov
adc
mov
movsl
mov
loopne
js
movl
add
vpmacsdql
pusha
stc
ret
mov
pop
cmp
ss
sbb
cmpl
push
sti
shll
ret
lea
mov
dec
lea
lods
stc
sbb
or
cs
popa
xchg
sub
out
push
xchg
jp
inc
pop
mov
les
xor
cmp
and
and
pop
roll
bound
sbb
adc
pop
inc
je
inc
lahf
and
or
std
pop
pop
rolb
mov
fmulp
mov
movb
test
pop
push
cmp
rorl
orb
jp
pop
mov
add
push
mov
push
nop
pop
ss
aad
xor
sub
je
cli
sub
or
push
into
mov
data16
push
pop
addr16
inc
decl
loope
xor
pushl
cmp
sbb
inc
adc
jne
inc
inc
inc
inc
or
add
test
inc
mov
in
cmp
and
pop
add
add
es
enter
push
lahf
jle
mov
rol
pop
xor
mov
add
lds
xor
loop
sti
sti
decl
jl
cmp
jg
add
jmp
adc
jl
jg
test
jle
mov
inc
shrl
out
aad
leave
sarl
lea
dec
jmp
mov
mov
mov
mov
dec
inc
cmp
ja
cmp
xor
pop
sbb
jne
movsb
push
lea
sti
lods
pushl
neg
jl
lret
cltd
std
inc
ljmp
fisubs
xchg
ja
scas
sbb
cmp
jbe
mov
fcmovnu
push
mov
test
xchg
add
jno
adc
jle
jmp
and
movsl
xchg
fcomps
xchg
xor
div
lock
sub
and
xor
xor
aam
js
jle
push
pop
pop
rcrl
cmp
sti
jnp
cmp
or
xchg
cmpl
inc
lahf
addl
test
cwtl
loope
xor
push
push
push
dec
aad
enter
leave
jle
inc
or
push
xchg
cmp
sub
aad
mov
andb
or
add
or
add
rolb
push
or
dec
or
cmp
sub
aas
loope
jmp
test
xchg
clc
add
and
ret
shrb
mov
aas
ja
movsl
xchg
dec
adc
xchg
xchg
mov
cmp
sub
jmp
and
mov
inc
jbe
call
je
popf
sub
sar
or
sub
add
repz
adc
inc
insl
sbb
cltd
divb
rorl
xchg
aaa
mov
jmp
inc
or
add
scas
pop
pushf
rorb
test
cwtl
outsb
xorl
popa
rcrl
popa
jl
xchg
sti
or
adc
inc
pop
jle
or
jl
cmp
cmpsl
and
jl
jmp
dec
pop
xor
sbb
loope
addb
or
mov
stc
add
or
nop
inc
sub
xlat
imul
dec
jecxz
lea
or
fimull
sbb
ret
lea
dec
in
xchg
and
mov
rcl
gs
inc
push
push
add
cmp
cmpsb
lock
js
or
jae
loop
or
cmpsb
inc
mov
sbb
rcll
pop
push
push
push
inc
nop
in
mov
mov
jo
outsb
mov
xor
xor
push
stc
inc
push
mov
pop
nop
mov
mov
and
lods
sbb
xor
js
loope
lock
out
fbld
ljmp
xor
or
mov
push
xchg
cmp
sub
push
jnp
mov
add
sbb
adc
js
jmp
rolb
add
shll
pop
cmp
orb
movl
loopne
lock
shl
push
enter
or
shrb
cwtl
and
sub
mov
inc
int3
mov
dec
inc
mov
fxch
mov
jo
pop
push
cmp
or
sub
ss
dec
sbb
andb
add
mov
lea
imul
lock
movsb
sti
mov
fisubl
or
dec
test
inc
add
inc
push
cmp
add
inc
and
je
js
rcrl
int3
mov
and
and
cmp
push
mov
cmp
fdivrs
mov
pusha
adcl
add
cs
push
pop
pop
xchg
dec
push
in
aam
or
inc
adc
mov
ror
mov
mov
js
cmpsb
enter
inc
add
ds
movsb
jne
push
mov
pop
lods
inc
add
js
pop
mov
inc
ret
cltd
add
cmp
movsb
push
mov
jl
pop
xor
sub
imul
mov
add
mov
jns
xchg
sti
mov
rcl
lea
mov
aam
push
cmpsb
loopne
pushf
push
xchg
xor
iret
pop
pop
sub
nop
fistpl
or
test
das
ljmp
inc
aaa
xor
push
push
jne
movsb
xchg
ja
inc
adc
out
aaa
inc
pop
ja
xchg
jne
or
or
pop
pop
repz
add
xor
loopne
mov
jecxz
shll
add
arpl
or
rcrb
lea
jo
insl
ficoml
jns
cltd
rcrb
mov
and
aad
xchg
mov
int3
cltd
mov
push
fs
mov
inc
and
push
cmp
jmp
pop
aaa
mov
mov
add
adc
dec
sbb
push
aam
cltd
pop
imul
lea
ret
or
push
xor
jne
jo
inc
xor
sub
jb
das
cmpb
movsl
xor
push
ljmp
inc
jmp
lods
rol
inc
xchg
rclb
mov
loopne
imul
push
ja
or
xchg
mov
or
jle
les
add
sbb
push
mov
nop
jle
jo
cli
mov
loope
rol
jns
mov
sub
leave
add
ja
mov
or
mov
rcll
push
mov
push
cs
sub
icebp
adc
cmc
and
sbb
sbb
or
adc
pop
or
cld
incb
push
push
pushf
jge
pop
push
push
or
test
add
mov
lods
cmp
in
sarb
and
mov
faddl
xchg
clc
mov
push
pushf
xor
mov
or
cld
lods
xchg
and
dec
sbb
out
loop
xchg
and
imul
out
cmp
mov
push
jb
sbb
or
pop
mov
ljmp
mov
addb
loop
jecxz
push
push
ret
add
lea
arpl
push
mov
jnp
xchg
test
sbb
adc
mov
cmpsb
popa
add
jno
rcll
mov
inc
mov
loop
and
imul
jle
in
xor
adc
mov
shlb
jo
xchg
mov
ret
jg
add
jp
adc
inc
or
jmp
xchg
xchg
addb
out
add
in
adc
ljmp
fisttpl
or
stos
adc
fdivrs
push
sbb
rorb
and
pop
push
xor
adc
adc
xor
testl
jae
dec
pushf
mov
pop
pop
shl
je
push
jb
out
adc
mov
jg
or
pop
pop
add
punpckhdq
jge
adc
push
or
jg
imul
fs
and
in
lock
cmpl
pop
arpl
sbb
outsb
mov
mov
sbb
or
push
pop
mov
push
and
and
xor
push
test
jb
jnp
jle
sbb
or
jno
cmp
xchg
mov
xchg
add
sbb
scas
dec
es
in
fcmovb
cmpb
or
pop
cmpsb
ja
test
and
cwtl
dec
cmp
das
nop
das
add
pop
mov
sbb
insl
adc
in
shl
jne
push
dec
add
inc
in
jp
bound
mov
adc
inc
xor
xor
arpl
adc
insl
das
fidivs
gs
js
icebp
dec
mov
push
jnp
cmp
movsb
inc
ret
js
je
push
leave
xor
push
iret
pusha
cmp
mov
lock
xor
popf
sarb
and
push
sarb
add
push
push
pop
xor
add
add
mov
inc
inc
dec
push
add
arpl
adc
push
xchg
mov
inc
mov
dec
and
loopne
imul
lahf
pop
sub
hlt
rcrb
pop
iret
dec
aad
inc
or
sub
mov
and
mov
add
lret
pop
push
sub
pop
iret
aam
subl
mov
sarb
mov
dec
mov
mov
add
push
insl
sub
jl
or
push
inc
jns
add
dec
aas
sub
pop
pop
jbe
push
pusha
pop
mov
push
mov
mov
sbb
xchg
lcall
sub
adc
enter
xchg
sti
and
cmp
divl
and
and
xchg
mov
and
dec
or
xor
pop
xchg
xor
lea
dec
cmpb
mov
movb
jne
pop
ja
xor
jl
je
mov
jns
repz
inc
sub
cltd
or
mov
add
mov
add
sbb
stc
and
push
lock
aam
and
das
xor
les
pop
lods
push
in
add
lock
in
lock
cmp
lock
xchg
lock
in
lock
sub
sarl
mov
pop
ss
sti
and
fdivr
cmp
xor
adc
pop
jp
add
repnz
leave
xor
ret
cmpsb
negb
inc
movsb
scas
push
adcl
push
add
mov
aaa
xchg
mov
mov
fnstsw
dec
loopne
test
movl
jge
fistpl
popa
jno
mov
inc
xor
sub
stos
lods
mov
cmpb
dec
xorb
int3
add
test
insb
inc
xchg
sbb
mov
push
adc
in
inc
adc
enter
popf
cmp
sub
sbb
mov
mov
dec
sbb
adc
je
dec
mov
mov
aas
stos
or
mov
lock
pop
inc
cmp
add
rol
loope
jo
or
xchg
mov
sbb
or
mov
add
fimull
adc
in
cmp
inc
lcall
adc
and
and
mov
imul
cmovge
loop
insl
push
pop
gs
in
push
ret
shr
lea
ljmp
test
sub
and
push
pop
mov
adc
jmp
fimuls
andl
popf
popf
jbe
or
jnp
and
xchg
ljmp
aad
stos
mov
mov
sbb
adc
orl
adc
xchg
lods
push
mov
andl
adc
mov
push
xor
mov
pop
fwait
mov
pop
mov
adc
pop
notl
inc
sub
andl
sub
adc
jne
or
and
sbb
js
cmp
loopne
mov
stc
repnz
pop
test
add
enter
cmp
pop
nop
enter
enter
or
movsl
sbb
stos
fadds
aaa
out
add
adc
adc
jo
inc
or
xchg
xchg
xor
cmp
inc
pop
inc
pop
sbb
jg
pop
sub
jno
push
sbb
mov
push
mov
or
out
movntps
sub
mulb
sub
add
or
dec
pop
pushl
pusha
push
mov
and
dec
sub
test
mov
jo
or
call
aaa
mov
ss
sbb
and
in
and
popa
into
popa
push
pop
add
cmp
iret
and
je
push
sti
dec
pop
add
add
adc
and
adc
neg
mov
sbb
dec
inc
call
dec
cmp
pusha
xor
jp
ret
out
or
shrb
xor
push
xchg
enter
inc
pop
mov
pop
jl
push
or
xor
loope
test
add
aas
mov
je
mov
inc
and
push
andl
lock
or
or
aas
loop
scas
push
lret
pop
push
sub
push
test
pop
ret
adc
mov
cmpsb
inc
enter
fs
inc
into
or
xchg
xor
sub
iret
push
or
mov
dec
push
jbe
push
inc
daa
sbb
jnp
mov
pop
or
nop
push
jbe
mov
sti
mov
push
dec
mov
iret
dec
andl
inc
cmp
dec
add
jb
fsubr
cltd
inc
dec
and
dec
pop
pusha
jmp
push
and
subb
adc
mov
push
sub
pop
jecxz
sbbl
xor
test
xor
and
jle
cmp
lock
add
cmp
and
outsl
jg
and
jne
cmp
xor
inc
add
mov
and
mov
js
gs
mov
mov
pusha
in
loope
mov
push
add
jb
mov
push
cmp
dec
add
cmovs
pop
inc
data16
and
mov
mov
pop
sarl
push
jns
add
orb
dec
bound
pop
mov
xchg
decl
inc
sub
data16
inc
cmp
outsl
lds
fisubl
mov
mov
push
mov
adc
lret
dec
adc
jns
pop
push
nop
test
mov
jno
inc
inc
adc
push
lock
or
inc
inc
lock
clc
sbb
xor
adc
xchg
pop
sub
adc
mov
movl
orw
sbb
lds
inc
xor
mov
pushf
push
enter
sbb
lret
pop
xchg
xor
inc
in
cmp
inc
sub
mov
cmpsl
adcl
in
test
push
sbb
pushf
sub
and
or
lcall
adc
adc
out
xchg
jne
push
push
addb
fildll
push
std
or
enter
xor
xor
ret
adc
lods
mov
mov
sbb
lods
out
sbb
cld
mov
cmp
fwait
jge
mov
adc
add
push
add
push
mov
push
push
es
notb
push
jo
add
cmp
or
andl
add
sub
push
loop
shlb
cld
push
pop
data16
sub
daa
inc
adc
cmpsb
pop
fiaddl
or
inc
add
or
or
mov
or
add
push
dec
xor
pop
xchg
repnz
add
shr
add
xor
lcall
and
and
loopne
push
fwait
and
ret
movsl
data16
sti
call
enter
shll
cmp
js
addb
pop
gs
xchg
out
add
lret
out
icebp
sbb
ds
jo
dec
push
call
xchg
addl
xchg
test
hlt
or
imul
test
mov
test
unpcklps
insb
or
inc
mov
cmp
or
pop
or
jbe
push
or
cmp
sub
mov
inc
sub
aad
rorl
addr16
mov
jnp
jo
and
lcall
clc
dec
mov
ja
mov
aad
add
iret
adc
lea
ljmp
mov
pop
add
cs
lret
xchg
stos
adc
pop
jmp
add
inc
sbb
mov
sbb
fisubrs
inc
mov
or
int3
inc
fs
loopne
or
push
and
jne
xchg
ja
cmc
mov
cmp
mov
cmc
addr16
mov
pop
adc
or
add
loope
push
outsl
popf
mov
dec
dec
adc
xchg
xchg
idivl
in
movl
je
push
dec
js
lret
pop
push
pop
js
sub
ss
cli
mov
loopne
xchg
or
nop
negl
insl
mov
add
aam
clc
mov
inc
jecxz
mov
or
and
or
sbb
jne
push
rolb
adc
pop
clc
sarl
es
pop
arpl
cld
and
pop
add
mov
mov
in
mov
rorb
mov
cwtl
adc
in
push
dec
adc
pushf
sub
xchg
jmp
sbb
cmpsl
mov
inc
icebp
xor
mov
push
lods
or
add
cmp
push
push
sbb
or
lea
fld
sbb
and
xor
push
pop
std
cmp
or
adcb
and
into
or
push
icebp
adc
push
jno
insl
adc
cmp
rcrl
mov
mov
ss
fnstsw
cmpb
mov
das
stc
or
cmp
push
loopne
adc
mov
jno
or
sbb
sbb
add
jae
or
outsb
bound
mov
xchg
push
push
mov
and
sbb
dec
jecxz
or
sbb
mov
and
push
adc
add
std
les
dec
add
mov
add
pusha
lea
lcall
test
or
or
mov
dec
push
pop
pop
aam
nop
data16
inc
or
cmp
imul
rorl
push
xor
dec
push
dec
push
fsubs
mov
imul
adc
xchg
jno
mov
xchg
xchg
das
sub
dec
dec
sub
rorb
iret
test
sub
adc
nop
addr16
fs
dec
daa
les
out
push
pop
lock
sbb
jo
cmp
aaa
adc
mov
dec
nop
xchg
out
mov
dec
pusha
add
mov
add
adc
xor
pop
cltd
lea
cmp
pop
into
sub
fcmovu
loope
pop
aad
or
nop
roll
jo
in
push
pushf
addr16
movsb
dec
les
ret
fdivl
jbe
jnp
addl
and
movsb
cmp
nop
cltd
add
int3
stos
adc
cmp
jmp
nop
adc
adc
out
push
mov
jge
jno
mov
outsl
or
sbb
pushf
cmc
and
xchg
xor
push
je
call
add
sub
sbb
jp
stos
push
push
mov
outsl
xor
sub
xor
cmp
cmpsl
movsl
adc
and
int
or
adc
sbb
daa
shrb
xor
aam
loop
add
pop
pop
add
push
adc
inc
hlt
add
ja
pop
daa
mov
lods
sub
je
int
je
bound
jl
dec
mov
es
xchg
in
inc
data16
popa
cwtl
dec
dec
invd
xchg
xchg
enter
add
jge
adc
or
sbb
sub
cld
imul
mov
movsb
pop
fs
lea
add
addr16
mov
sbb
std
test
idivl
idivl
mov
jno
mov
adc
fs
sub
lds
daa
push
rcll
jl
or
leave
enter
inc
mov
dec
adcl
int
adc
or
enter
cmpb
adc
in
push
add
jmp
sbbl
bound
and
push
leave
lods
mov
or
fs
mov
push
sbb
sbb
sbb
imul
lret
adc
inc
enter
mov
sbb
xor
add
das
loope
rorb
add
pop
cmp
dec
lods
add
and
fwait
hlt
mov
fwait
mov
jb
in
pop
xor
rorb
push
out
add
in
xchg
jmp
and
fldl
cmp
or
pop
inc
jecxz
jb
inc
mov
inc
addb
xor
inc
test
testb
mov
push
imul
lock
pusha
inc
pop
cmpsl
push
and
xchg
adc
aaa
pop
push
cmpsb
add
and
and
push
lret
ret
jmp
mov
pushf
jbe
jmp
add
adcb
jg
jmp
cwtl
xchg
jbe
cmp
aaa
push
mov
add
out
adc
sbb
and
pop
push
cs
sbb
mov
push
mov
mov
shr
adc
aam
arpl
sub
pop
xchg
sbb
sbb
fcomps
push
pop
or
push
mov
pop
movl
cmpsl
out
cwtl
rcl
out
clc
sahf
movb
shlb
bound
test
sbb
or
xor
xchg
lret
cmp
loop
dec
jmp
rcr
inc
jo
sbb
push
jbe
es
jmp
and
jne
mov
inc
xchg
scas
push
insb
or
ror
lods
push
sub
push
push
pop
push
je
push
ja
mov
xchg
lret
adc
sbb
sub
inc
ret
sbb
pop
shlb
lods
cmp
aam
and
aas
pusha
rorb
sbb
fiadds
rolb
jle
addl
mov
sbb
push
mov
pop
push
or
push
jo
jmp
nop
dec
add
push
or
jecxz
and
push
aam
or
adc
mov
pop
adc
pushl
in
imul
rolb
sti
inc
and
stos
and
pop
inc
or
and
and
xorb
pop
cli
repnz
push
sbb
push
lods
or
sarl
popa
pop
cmp
jo
addb
dec
or
dec
inc
sub
pop
adc
push
fs
jl
push
or
leave
cld
add
add
push
sub
nop
in
popa
int3
mov
adc
int
shrl
or
mov
mov
pop
shl
push
inc
loopne
dec
xlat
je
add
xchg
or
sbb
adc
and
sub
xor
lock
mov
sub
and
mov
and
ss
sbb
int3
aas
insb
sbb
adc
xchg
rol
add
push
push
dec
loopne
lea
mov
adc
pushf
dec
or
adc
in
lock
sbb
mov
jp
lret
and
roll
mov
jb
inc
orl
pop
add
lcall
mov
sub
sbb
mov
add
jmp
lock
mov
lods
sbbl
sub
push
or
add
dec
xlat
push
fiaddl
inc
sub
lahf
test
push
mov
loope
aaa
add
or
and
jb
inc
add
sti
dec
sub
adcl
adc
imull
arpl
add
and
push
jnp
pop
cmp
call
xor
dec
test
xchg
pusha
ds
push
cmp
fs
push
in
add
out
cltd
and
inc
inc
jmp
push
faddl
setb
push
sub
gs
inc
jge
or
push
sub
jle
inc
and
xor
and
nop
cmp
mov
cmp
mov
push
sbb
es
xor
lods
call
repz
xchg
sub
sbb
lret
out
loope
adc
push
dec
or
dec
push
cs
ficompl
pushf
add
add
les
lods
test
cs
iret
mov
push
cmp
jne
data16
idivb
test
mov
testb
fcompl
add
cmp
mov
int3
loope
jb
add
lock
mov
and
int3
inc
push
cmp
jno
jl
fidivs
outsl
mov
pop
add
shrl
insl
insl
dec
lods
dec
sub
lret
push
push
cs
inc
mov
adc
out
jno
mov
and
mov
cmp
xchg
pusha
orl
jmp
daa
inc
push
enter
in
jmp
jle
mov
mov
add
mov
mov
shl
xchg
jmp
mov
dec
pop
pop
jecxz
dec
repnz
lcall
or
incb
mov
cmp
subb
cmc
mov
pop
out
xor
les
aad
aam
fimuls
test
shl
mov
cwtl
jb
sub
xor
addb
inc
add
test
bound
in
pushf
lea
pop
xchg
ret
sub
loope
xchg
adc
jns
mov
xor
or
icebp
pop
jne
jmp
inc
mov
dec
je
hlt
pusha
rorb
sub
cmp
insb
mov
js,pn
mov
mov
daa
aas
inc
push
mov
mov
add
add
push
push
je
aad
sub
sbb
js
sbb
ja
xchg
rorb
inc
clc
popa
sbb
ss
xchg
bound
fucom
adc
sbb
in
mov
add
int3
and
out
int
mov
sub
sub
outsl
pushl
push
lock
xchg
bound
xor
cld
push
push
xorl
out
out
test
je
jo
or
adc
or
pop
adc
add
mov
or
rcll
mov
xchg
dec
test
jle
mov
popa
mov
sbb
mov
insl
jno
cmp
hlt
adc
xor
dec
mov
sub
mov
aaa
pop
fucomi
adc
xor
inc
sub
or
sbb
and
enter
pop
adc
or
dec
ljmp
rcrl
mov
add
out
ljmp
rcrb
add
pop
outsb
inc
flds
dec
pop
data16
xor
sub
or
mov
dec
roll
adc
xor
es
adc
in
adcb
aam
add
test
out
jmp
mov
nop
mov
sub
dec
mov
test
pushf
inc
push
xchg
push
lock
xchg
pop
fadds
jno
lods
inc
adc
test
add
das
add
div
jmp
jo
jne
lds
mov
push
push
mov
rorl
adc
and
hlt
cmp
dec
fcomps
sbb
mov
push
ljmp
xchg
mov
outsb
js
xor
cmp
je
mov
cltd
popa
cltd
lds
call
or
dec
mov
sbb
fstps
js
shll
push
add
mov
mov
xor
mov
pop
mov
cmp
push
adc
add
cmpb
shll
popa
sub
dec
xor
jg
or
jne
cmp
sbb
arpl
fs
insb
iret
and
in
jbe
cmp
ss
insb
dec
bound
or
test
add
cmpsb
xor
pusha
mov
push
incb
loopne
sub
inc
xchg
sbb
jmp
xor
jbe
nop
or
inc
jbe
loop
cmpsl
and
nop
cltd
inc
enter
dec
sub
subb
sbb
fs
jge
sbb
xchg
add
movsb
lea
insb
dec
xlat
fs
and
or
push
pusha
dec
jae
or
mov
imul
or
cmpsl
mov
push
dec
out
and
je
jnp
add
mov
andl
xchg
xchg
push
lock
cmc
inc
mov
imul
imul
loopne
xchg
ret
xor
sbb
xchg
pop
adc
pop
and
lahf
pushf
inc
enter
pushf
jb
jb
adc
cmpsl
and
add
lods
cmpb
js
out
inc
inc
push
daa
mov
add
stc
xchg
and
adc
inc
xor
rolb
push
sahf
sbb
and
les
push
mov
rclb
lcall
xchg
and
add
test
or
sub
aaa
mov
push
daa
mov
ret
pop
or
leave
test
cmp
and
cmp
mov
test
xor
xchg
sbb
shl
adc
push
sub
in
add
pop
in
ret
mov
pop
in
lahf
adc
pop
adcl
jb
sar
adc
lds
mov
and
sbb
xor
jne
cmc
cld
xchg
adc
mov
adc
jne
mov
sbb
aad
fsts
adcl
lock
lock
test
push
pushl
mov
pop
dec
adc
jecxz
adc
dec
push
mov
frstor
dec
xchg
aad
sbb
pop
pop
jnp
and
inc
scas
aam
lea
xor
dec
sti
addl
lea
adc
pushf
push
dec
cmpsl
test
jl
adc
sub
or
repnz
fcomps
jp
insl
jns
insb
cmp
iret
cltd
in
bound
fwait
adc
pop
fisubs
int3
insb
cmp
es
jnp
add
add
xor
int3
pop
push
aaa
or
sub
sahf
xchg
inc
push
add
jle
nop
inc
leave
adc
or
cmp
or
jle
adc
jae
fildl
jns
pop
fisubs
faddl
sbbb
inc
inc
inc
pop
pop
pop
sbb
xchg
and
xor
push
lock
mov
and
repnz
jne,pt
imul
add
daa
movsb
sti
jmp
decb
popf
pop
xchg
stos
dec
testb
jne
or
jo
cmp
inc
adc
inc
jbe
cmpl
loope
dec
xchg
cmp
sbb
jmp
cwtl
imul
cmp
sbb
or
sub
js
cmp
mulb
test
pop
cmp
filds
enter
mov
push
fs
jne
mov
xchg
inc
fxch
mov
jmp
pop
and
aad
test
and
or
fsubrs
push
or
inc
adc
pop
nop
jmp
in
push
popf
fildll
and
xchg
pop
ja
inc
cmp
and
in
jecxz
adc
push
push
jmp
push
sbb
and
int3
cld
sub
or
push
stos
and
sbb
pop
jno
pusha
loope
scas
imul
add
lea
push
or
xchg
movsb
lods
push
or
sbb
inc
or
pop
movsb
push
inc
les
add
aad
dec
ret
sarl
movsb
add
or
inc
insb
call
pop
add
push
push
test
fstp
pop
dec
out
add
mov
xlat
dec
or
inc
mov
jo
mov
pusha
cmp
mov
dec
jbe
aas
or
cmp
xor
xor
sbb
add
in
lea
fcomps
les
lcall
mov
jo
pusha
lcall
xor
inc
lcall
popa
and
ss
and
adc
mov
lea
jl
enter
sbb
test
shr
ljmp
xchg
mov
leave
mov
add
xchg
push
lods
call
sub
fists
or
dec
shl
or
movsb
jo,pn
pop
pop
insb
mov
int3
push
inc
fs
push
inc
inc
push
cmp
mov
iret
mov
or
js
faddl
mov
add
pop
push
je
pop
je
or
clc
out
mov
push
mov
add
pop
idiv
loope
enter
fs
cltd
mov
loop
or
fwait
inc
sbb
sub
pop
adc
adc
lea
or
cmp
jl
pop
test
sub
mov
fisttps
or
sub
dec
fbld
jne
push
rolb
and
add
unpcklps
cmp
add
jns
mov
adc
ret
insb
pop
lea
pop
ret
dec
mov
and
pop
cmpsl
jae
ret
jle
pop
jle
and
push
icebp
test
or
fdiv
mov
and
stc
sbb
aam
movsl
popa
pop
inc
pop
pop
jg
sub
aam
ss
sbb
cltd
pop
and
les
insl
add
daa
arpl
xorl
hlt
inc
dec
adc
mov
test
sub
pop
or
adc
xor
imul
adc
jne
sbb
daa
push
icebp
jg
or
mov
add
cltd
fs
add
push
mov
push
dec
add
xor
shll
jmp
inc
adc
push
push
pushf
insb
test
rorl
dec
xor
stos
cltd
pop
test
pop
je
cmpb
cmpsl
jne
sbb
jl
fists
cmp
sbbb
ret
push
or
inc
pusha
nop
mov
cmpsb
jmp
lods
ljmp
jo
outsb
pop
inc
add
sbb
or
in
add
mov
test
adc
cmpb
push
mov
out
push
mov
mov
aad
mov
sub
js
add
ss
inc
in
push
ret
mov
faddl
add
and
mov
data16
mov
shlb
xchg
push
sub
mov
add
push
push
nop
mov
mov
dec
shlb
jo
aam
xchg
and
jae
xchg
xor
push
sarl
mov
adc
ret
test
dec
ja
js
sub
ss
mov
or
sbb
jne
subb
inc
jnp
pushf
inc
jle
add
cmp
mov
pushf
and
andb
daa
addr16
lock
sbb
insb
stc
mov
sbb
add
dec
sub
fdivl
aaa
adc
add
lods
or
sbb
adc
jmp
and
mov
add
adc
xor
and
ret
icebp
fsubl
mov
sub
or
sbb
orb
add
enter
add
mov
mov
pop
and
xor
sbb
lret
pop
jo
iret
std
push
add
pop
loopne
mov
inc
js
shl
add
or
pop
cmpsb
dec
les
pop
cmp
and
xor
mov
test
aas
insl
mov
adc
jne
sbbl
in
jne
push
cmp
push
scas
inc
pop
sub
inc
push
mov
movsb
xchg
shlb
movsl
enter
stos
rolb
xchg
push
fdivp
sbb
orl
popa
inc
inc
xchg
sbb
sub
pusha
push
and
add
push
cmpsb
sbb
and
adc
inc
cmpsb
dec
xor
and
sub
pop
pop
stc
jge
jne
push
ror
imul
in
xchg
fbld
adc
dec
ja
xchg
jmp
push
adc
mov
test
mov
icebp
mov
cld
stos
add
add
cmp
sbb
aad
es
ja
out
push
js
adc
jae
cltd
add
lcall
sbb
orb
add
repnz
mov
adc
xchg
cmp
dec
push
mov
jl
and
jne
shrb
sbb
addb
xor
ja
dec
adc
jnp
push
inc
dec
jl
iret
and
int3
and
sub
jne
sub
insb
or
sbb
xchg
maskmovq
imull
jmp
test
push
sub
inc
jbe
movsb
inc
push
sub
out
add
rcrb
call
adc
inc
cmpsb
sbb
xor
fisubl
shrb
xchg
movsl
inc
cmpsl
sbb
add
jne
sbb
xor
test
enter
push
add
js
xchg
insl
add
and
cs
mov
mov
test
or
scas
insb
orl
and
shlb
jno
lods
xchg
cmp
inc
sbb
leave
orl
push
jb
pop
or
and
xchg
adc
ja
mov
adc
dec
xchg
or
je
pop
adc
jmp
mov
imul
outsb
and
roll
mov
movsb
into
inc
adc
push
push
and
test
addr16
pop
push
mov
jno
pop
in
movsb
jno
and
xor
ret
cmp
insb
aam
nop
or
lcall
or
fwait
push
xchg
mov
adc
xchg
pushf
mov
int3
add
nop
push
nop
push
xor
int3
adc
push
mov
dec
mov
loope
cmp
mov
cmp
xchg
dec
enter
shlb
add
sub
pop
clc
xchg
enter
nop
sbb
int3
fsts
push
nop
fstl
smsw
insl
xchg
adc
xchg
fcmovb
mov
sbb
adc
sub
cmp
out
or
scas
xchg
repz
cmp
mov
pusha
or
sbbb
xchg
repnz
daa
adc
add
das
sbb
test
adc
xchg
insl
ret
fs
pushf
mov
imul
test
ret
je
push
pusha
dec
xor
push
test
and
sahf
mov
aas
push
cmp
push
xorl
mov
and
and
loope
nop
repnz
xor
js
clc
jp
popa
jb
int3
xor
addr16
sbb
rolb
mov
and
ss
push
ljmp
jmp
andl
ret
xchg
orb
pushf
pop
or
jge
sbbb
loopne
pop
sub
imul
cltd
movsb
insl
xor
fdivrs
push
pop
adc
les
pushf
mov
icebp
sbb
xorb
movsb
lds
sbb
or
inc
cmp
mov
mov
inc
adc
jg
mov
jne
jne
fidivrl
shlb
ret
jo
aam
loop
xchg
fs
push
pop
loopne
push
repz
jge
adc
nop
or
dec
negl
add
sub
pop
and
popf
idivl
or
or
dec
shrl
imul
dec
and
add
imul
add
adc
push
loopw
push
mov
nop
sub
mov
subl
xchg
jle
mov
jnp
mov
sub
adc
sarl
test
cltd
adc
or
pop
mov
test
jge
cltd
add
adc
jns
adc
mov
popf
xchg
cs
cwtl
xor
popa
add
std
dec
push
dec
shl
insb
xchg
and
shll
jne
nop
dec
and
push
xorb
dec
jno
pop
and
mov
xchg
movsb
mov
test
adcb
test
mov
data16
shlb
cmp
fstl
push
push
stos
push
inc
inc
bound
sbb
inc
dec
sub
fistpl
sub
add
rcl
jno
addb
rclb
sbb
out
fwait
xor
addr16
and
dec
adc
leave
loope
sub
and
push
sbb
rol
mov
mov
or
xchg
mov
fisubrs
flds
fsubrp
jne
or
rcr
mov
add
shlb
and
jmp
add
rorb
add
lea
es
clc
dec
cmp
fists
fidivs
cs
ss
xor
stos
push
lock
dec
mov
lods
add
in
mov
push
jecxz
pop
cs
cs
fs
dec
jb
xchg
or
pop
sbb
mov
dec
fdivl
movsl
mov
push
mov
aaa
sub
cmc
cmp
push
mov
add
and
lock
cmp
pop
les
and
and
xchg
fbld
inc
jb
in
inc
pusha
jb
jb
mov
jb
jb
das
xchg
sbb
mov
jnp
out
cmp
jb
jb
xchg
inc
pop
roll
les
pushf
adc
push
push
cmp
aam
pop
and
mov
iret
mov
jno
add
mov
icebp
jle
mov
jmp
nop
scas
rcll
mov
lock
mov
loope
lock
dec
inc
or
push
mov
fdivl
rcrl
sbb
test
mov
adc
or
xor
add
cltd
mov
call
loope
daa
or
idivl
sbbl
cmp
or
popf
push
push
shlb
test
add
sub
sub
add
push
aaa
adc
xor
lock
mov
inc
loop
dec
cli
test
jb
push
adc
cltd
ret
je
in
push
ss
sbb
sbb
repnz
push
add
add
and
jb
lods
nop
and
dec
cmp
adc
add
xor
and
loop
cltd
das
hlt
in
test
sub
pop
jns
jmp
dec
rclb
loopne
js
aaa
imul
cmp
inc
in
or
mov
pop
add
in
inc
and
or
add
inc
push
inc
cmpsb
pop
xchg
nop
sub
scas
nop
lea
xchg
add
test
xchg
push
lods
mov
or
jmp
cmp
dec
or
aas
pop
push
xchg
xchg
gs
jb
imul
ja
add
dec
fs
aas
pop
movsb
xor
fsubl
clc
sbb
enter
add
xor
fwait
xchg
out
dec
testl
sbb
andl
leave
and
sbb
dec
push
add
pop
rolb
mov
cltd
jecxz
jae
or
fwait
adc
int
or
int3
push
mov
pop
mov
iret
scas
cmp
jecxz
scas
fsubrs
dec
push
fldl
push
fnstsw
dec
jecxz
shll
fs
pop
cmpsw
and
int3
ss
sub
or
mov
sub
int
int
cmovno
and
mov
xchg
adc
and
xchg
dec
adc
inc
mov
and
inc
dec
and
add
dec
sbb
sub
push
pop
sbb
inc
push
or
add
mov
leave
push
jb
jmp
cmp
sbb
adc
and
xchg
xchg
or
pop
stos
mov
mov
sar
sub
inc
leave
add
cs
add
or
xor
cmp
enter
cwtl
xor
adc
cmp
outsb
pop
and
fsts
std
and
mov
cmp
mov
outsb
inc
fiadds
cmp
and
jmp
pusha
loopne
cmpsl
pop
aas
popf
je
out
mov
adc
add
push
cmp
inc
inc
inc
sahf
xor
inc
inc
sbb
or
in
cltd
lea
pop
jo
add
enter
call
xchg
xchg
out
rclb
cmp
mov
xor
lea
sbb
inc
push
in
decb
pop
xor
subps
or
nop
add
nop
incb
nop
add
mov
pusha
jle
or
mov
lods
pop
push
adc
mov
and
lcall
imul
and
mov
outsb
xor
lcall
fwait
add
fs
xchg
push
lock
das
xchg
sub
int3
mov
mov
pop
and
addb
decl
dec
dec
rcrb
add
inc
test
jb
inc
xor
and
or
xchg
sub
jns
jmp
dec
dec
je,pn
push
rcrb
dec
sub
call
aam
lcall
add
adc
sbb
test
fs
xchg
mov
sub
outsl
fsubs
pop
inc
inc
fwait
cmp
sub
and
sub
xchg
mov
ds
decl
push
mov
dec
dec
stos
mov
negb
push
xchg
xchg
lret
mov
xor
or
daa
andl
lea
dec
cmp
mov
iret
sbb
nop
in
or
or
or
push
dec
and
sahf
or
js
aam
sahf
flds
shll
pop
pop
mov
shlb
bound
lods
add
nop
add
and
cmpsb
aam
pop
leave
adc
xchg
aad
xor
inc
scas
in
add
fs
and
cmpsb
nop
and
cmp
adc
fcoml
add
mov
iret
cltd
xor
mov
cmp
sbb
jmp
push
mov
mov
mov
cmp
cmpl
leave
or
enter
xchg
xchg
add
sbb
popa
orb
mov
fs
or
movsl
sbb
add
aam
dec
and
andl
push
out
rclb
pop
pop
aam
movsb
orl
mov
movsb
cmpsb
mov
jo
les
xchg
lock
inc
pushf
adc
add
and
imul
mov
or
mov
sbb
dec
inc
lcall
and
and
pop
fs
inc
add
push
shll
sbb
and
and
orl
je
es
scas
xchg
sbb
mov
pop
lea
test
daa
add
inc
and
in
and
nop
and
push
inc
add
sub
mov
xor
mov
sub
sub
or
sub
nop
or
and
and
xor
jb
cs
inc
enter
sbb
dec
sbbb
adc
cmp
adc
sub
xor
dec
scas
or
or
lods
inc
xor
pop
cmp
ja
inc
cmc
add
sahf
and
jne
test
cmp
sub
adc
ss
mov
movsb
mov
mov
push
adc
jne
cmp
aaa
mov
aam
add
mov
fxch
shlb
test
adcb
mov
mov
xor
inc
pushf
mov
dec
cmp
xor
cmp
popf
es
adc
test
mov
adc
jle
push
inc
inc
cmp
lret
dec
add
and
cmpl
sbb
or
jo
js
xor
pop
pop
pop
pop
movsl
mov
sbb
sbb
enter
enter
sbb
repz
sahf
cmp
mov
pop
xor
repz
inc
pop
cmp
pop
dec
add
push
add
inc
pop
and
pusha
in
cmp
jnp
push
dec
cli
and
sbb
out
adc
ret
minps
scas
in
cmp
dec
xchg
test
out
cltd
xor
sbb
add
lret
clc
sub
cmp
lea
xchg
mov
sub
stc
ficompl
aas
sbb
jecxz
jmp
cmp
loope
sbb
lret
mov
mov
nop
sub
mov
fcoms
mov
movsl
mov
pop
mov
jne
mov
jo
pusha
push
sbb
aaa
adc
fisubs
mov
add
bnd
adc
or
add
sbb
sub
and
ds
add
sbb
cmp
sbb
nop
push
jo
sbb
nop
xchg
test
loopne
in
iret
add
pushl
pushl
pop
pop
fs
mov
inc
enter
fs
cld
xlat
mov
inc
orb
es
or
or
mov
stos
adc
push
and
movsb
fnstenv
mov
push
sub
push
sbb
jecxz
sub
push
insl
lsl
mov
scas
fsubr
icebp
inc
insb
or
data16
mov
or
or
inc
add
ss
pop
test
or
sbb
rcrl
out
mov
xchg
mov
adc
scas
jmp
fdivl
insb
or
pop
outsb
mov
push
sub
cmp
pop
dec
cs
outsb
push
add
mov
cs
and
cmpsl
add
pop
sbb
je
pushf
pop
mov
pop
les
pop
dec
es
cld
cs
dec
cs
or
sub
add
cmpsl
or
adc
and
push
sub
icebp
mov
inc
or
sbb
jns
cmpsl
xorl
std
nop
push
dec
enter
and
add
pushf
or
xchg
mov
je
sbb
leave
add
jbe
sahf
loopne
sbb
cmp
leave
subb
xor
lahf
call
int3
test
add
call
je
lods
cmp
int3
cld
les
mov
test
push
cmp
in
dec
sbb
lcall
add
add
dec
movsb
pop
aaa
jl
add
pop
test
jmp
loop
mov
and
mov
and
cltd
mov
cltd
cmp
push
cltd
mov
mov
mov
lea
ret
cld
inc
test
adc
adc
mov
add
outsl
cmp
and
add
mov
sub
xchg
sbb
and
add
xor
stos
mov
in
or
enter
in
xor
jo
xchg
sbb
scas
test
jns
scas
in
pushl
mov
mov
enter
rorb
push
enter
das
mov
in
dec
mov
lods
sbb
inc
push
enter
loopne
in
push
fs
cmp
repnz
push
add
std
nop
or
and
add
jno
call
cwtl
cmp
mov
push
loopne
push
jp
jmp
jp
test
sub
jo
test
popf
or
adc
fsubrs
test
mov
pushf
je
add
jecxz
leave
movsl
hlt
stos
movsb
and
jnp
jl
sub
push
xchg
xchg
les
ret
adc
iret
inc
add
cmc
lods
pushf
sbb
lock
pop
push
orl
and
pushf
out
sub
cli
repz
imul
add
lea
push
add
mov
and
fdivrs
sub
sbb
mov
adc
stc
rorb
movl
push
fadds
dec
lock
add
repnz
xchg
mov
or
lods
xor
sbb
insl
mov
xorl
push
or
cs
add
or
jbe
adc
sub
adc
xor
ret
add
mulps
shll
mov
adcb
dec
pop
and
fcoml
add
sub
nop
xchg
adc
fldl
xchg
adc
add
inc
xchg
stos
pop
pop
cmc
sbb
sub
push
jmp
sbb
rcrl
in
pop
shrl
in
and
and
addl
push
xlat
sbb
lods
push
outsb
add
rclb
pop
dec
sbb
xchg
xchg
xchg
subb
mov
dec
or
in
mov
pusha
enter
testb
inc
push
hlt
stc
xor
mov
pop
push
pop
mov
or
popa
ss
mov
adc
push
xor
cwtl
lea
jmp
shll
jns
xor
adc
mov
and
mov
jg
pop
add
add
mov
inc
sbb
out
sti
mov
jne
push
pop
xchg
dec
nop
popf
mov
lods
bound
xchg
cwtl
mov
insl
adc
je
inc
mov
inc
push
mov
in
pop
rol
add
dec
push
aad
cmp
stc
mov
lea
sbb
lahf
in
mov
mov
andl
outsb
and
or
pop
and
xor
in
or
or
push
std
and
pop
pop
rolb
mov
or
add
cmp
or
sbb
je
nop
inc
lar
out
push
leave
and
jb
pop
adc
bound
testl
adc
push
inc
orl
and
sbb
cmp
and
sbb
dec
out
xor
xor
xor
push
sbb
cmp
pop
sub
orl
mov
add
sti
mov
and
std
push
jb
add
xchg
loopne
leave
and
or
cmp
xchg
add
sub
aad
adc
sub
xor
push
sub
leave
insb
insl
or
dec
scas
cwtl
jo
leave
int
pop
adc
mov
xor
leave
sbb
aaa
dec
mov
push
add
push
xchg
sbb
jecxz
xor
dec
lock
mov
call
xchg
add
fcomps
subl
in
or
pop
faddl
sub
fiaddl
mov
js
add
test
pop
cmp
pop
lea
insb
lahf
lahf
shlb
and
in
pop
les
mov
mov
rolb
leave
and
pop
or
or
adc
or
cwtl
and
push
xor
in
shrb
push
pop
leave
leave
xchg
xchg
js
dec
cmpsb
nop
sub
pop
mov
xchg
mov
pop
in
addl
mov
push
imul
cmp
lahf
cmc
sub
jmp
mov
jmp
sub
fs
mov
sbb
push
sarl
inc
fisttps
cwtl
or
mov
or
sub
pushf
insb
fwait
or
inc
sbb
adc
vpminsw
call
movsb
imul
mov
lret
jmp
orl
dec
mov
adc
enter
jmp
jo
sbb
adc
jb
xchg
pop
push
adc
inc
pop
dec
pop
and
xor
sbb
inc
cmpsb
pop
xchg
inc
loope
sub
dec
push
fs
cmp
pop
es
and
and
fs
sub
and
es
in
es
sub
xchg
sub
and
in
es
inc
mov
in
stc
aam
movb
xor
cmp
xor
push
adc
shrb
push
jecxz
sahf
sub
movsb
inc
add
inc
adc
xor
rolb
and
jno
adc
test
addl
sbb
sahf
das
in
xor
inc
dec
jge
addl
add
lcall
fs
xchg
add
fdivs
sub
andl
jge
subl
pop
and
xchg
jne,pn
jne
push
or
imul
mov
bound
orb
xor
mov
dec
test
xor
sbb
mov
insb
movsb
and
xor
decl
jnp
mov
mov
loopne
jne
or
cwtl
mov
push
push
mov
mov
or
and
push
jle
xchg
mov
mov
loope
adc
adc
xor
or
sahf
xchg
add
fisubs
sbb
pop
test
mov
add
mov
mov
mov
pop
rcrb
imul
dec
cmp
leave
add
or
add
imul
loopne
fwait
lock
mov
aas
scas
add
ss
push
mov
mov
add
xor
or
mov
in
push
add
nop
push
mov
adc
or
inc
or
sbb
call
pop
push
inc
mov
data16
js
in
out
lock
mov
xor
imul
and
inc
xchg
mov
push
push
cwtl
js
and
dec
dec
mov
mov
das
inc
fnstsw
jmp
xchg
push
push
mov
or
push
mov
imul
push
inc
dec
inc
or
add
sbb
dec
inc
or
xor
xor
push
inc
mov
dec
mov
jge
inc
xchg
push
push
clc
test
rorb
jmp
or
or
and
popf
add
jb
mov
int3
jmp
adcl
jo
or
insb
cli
wbinvd
or
jbe
jns
add
cmp
inc
add
aam
mov
sbb
andl
mov
xchg
jmp
es
idivb
add
adc
bswap
dec
sti
dec
out
mov
aaa
dec
sbb
jo
push
cmp
mov
dec
sbb
sub
mov
out
mov
add
or
outsl
inc
movd
out
mov
stos
inc
sbb
scas
dec
ret
in
shll
nop
test
push
cmc
inc
sbb
in
std
add
in
and
je
push
adc
or
into
testb
inc
add
cmpsb
je
into
dec
sbb
gs
gs
lret
add
cmpb
fnstenv
cmp
adc
divl
arpl
inc
mov
adc
std
cwtl
inc
xchg
dec
or
pop
inc
add
and
sbb
sub
inc
push
fldenv
dec
add
mov
jle
ja
cld
jmp
sbbb
adc
das
or
jle
or
or
neg
mov
int
sarl
jg
xor
or
aas
cli
jecxz
jecxz
not
push
and
loopne
aas
adc
mov
inc
cmp
fdiv
jge
jne
mov
push
xchg
mov
pop
xor
in
cli
pop
or
psadbw
fbstp
adc
push
or
push
cltd
aad
adc
sbb
popa
adc
sti
pop
jne
fildll
mov
pop
sub
loop
jmp
cmp
scas
add
repz
xchg
cmp
adc
loopne
mov
dec
add
xchg
movsbl
in
push
add
sti
je
mov
pop
mov
mov
push
cmp
jmp
das
leave
cmp
jbe
je
mov
lods
or
or
shl
push
add
js
test
sbbl
pop
pop
mov
sub
psadbw
and
fwait
dec
nop
cmp
add
mov
dec
pusha
mov
pop
inc
out
dec
xor
lods
out
lret
and
std
jne
adc
or
daa
push
gs
lea
sti
mov
cltd
push
xor
push
jb
push
pop
js
and
pop
push
jns
outsl
and
int3
add
and
jg
push
or
stos
pop
or
or
lahf
push
push
push
or
loope
push
jb
adc
dec
pop
or
and
sbb
or
dec
mov
and
xor
or
mov
add
jl
add
lds
xchg
adc
jge
push
xor
mov
in
xor
add
sub
push
ret
mov
dec
es
shlb
sub
js
daa
dec
xor
shlb
insb
adc
ja
shrl
jle
popf
std
aam
and
std
pop
js
fst
fnstenv
lods
aad
xor
xor
jb
icebp
lahf
int3
stc
and
loop
leave
lcall
dec
clc
clc
push
pop
popa
cmp
jbe
stc
and
adc
sub
aaa
push
jle
jmp
testl
sub
sub
or
xchg
mov
dec
inc
push
pop
ja
lock
push
xor
adc
mov
mov
icebp
negl
hlt
sub
ds
movsb
mov
rorl
add
mov
mov
addb
inc
in
mov
mov
mov
or
jb
insl
clc
add
pop
xor
call
cmpb
jno
add
mov
lods
lahf
test
inc
lcall
mov
cmp
dec
shlb
adc
add
ret
jmp
inc
inc
mov
inc
cmp
jne
sysenter
orl
sub
sbb
ljmp
enter
shll
mov
sub
cli
rol
push
cmp
lea
or
adc
mov
jge
lea
mov
push
jl
jno
and
lock
sbb
pop
add
dec
lock
adc
push
mov
jecxz
cmp
mov
test
ret
xchg
ret
hlt
adc
outsl
fwait
clc
mov
mov
pop
nop
ret
mov
or
scas
or
inc
clc
jmp
rcl
add
xchg
jmp
mov
test
jge
pop
dec
or
sbb
push
lea
add
inc
cmp
push
out
or
repnz
jg
sub
xlat
sbb
not
and
dec
mov
jne
cld
fwait
lahf
idivl
mov
cmp
iret
sbb
not
and
dec
es
mov
add
mov
xchg
icebp
inc
inc
mov
add
dec
add
cs
adc
or
and
cwtl
fisubs
das
mov
sub
mov
mov
sbb
ret
xchg
cmp
repz
add
ja
aaa
xor
jbe
roll
sub
inc
movsl
inc
and
or
icebp
jle
xorl
cs
lea
test
adc
mov
cmp
add
shll
dec
sbb
mov
loope
xchg
xor
pop
cmpsb
pop
mov
dec
or
pop
jno
ret
xchg
xor
shr
push
cmpsl
mov
add
in
ret
mulb
sbb
xchg
add
push
push
hlt
ret
or
or
aaa
sub
dec
mov
aad
jl
adc
lret
or
adc
divl
adc
aaa
push
cld
les
loop
cmpsl
cmp
inc
push
daa
push
xchg
shrl
inc
cmp
jb
popf
test
xchg
adc
xor
push
andl
bound
je
movsb
xorl
cmp
in
in
daa
mov
popf
mov
xlat
mov
jne
pop
jp
or
rorb
mov
out
jmp
or
pop
xor
or
add
call
and
mov
cmp
and
or
ret
cs
dec
adc
mov
sbb
cmpl
sub
mov
mov
push
pop
cmp
pop
sbb
inc
mov
cmp
or
mov
sbb
mov
jecxz
cmc
push
imul
stos
js,pt
jne
xor
pop
std
in
in
mov
inc
sub
sub
sti
out
mull
dec
nop
mov
incl
subl
mov
pop
loopne
push
lea
add
sti
out
mov
divl
cmp
cld
jge
mov
shr
push
scas
inc
dec
test
lock
mov
cmp
sub
jmp
pop
sub
cmp
mov
push
lcall
and
inc
add
and
shl
xor
movsb
loope
inc
pop
sub
push
push
mov
lods
jne
jmp
add
ficomps
jge
pop
add
jmp
dec
mov
mov
pushf
and
cs
dec
or
push
enter
cmpsb
mov
rorl
mov
test
nop
sbb
test
inc
hlt
pop
adc
add
popa
or
imul
enter
addl
add
leave
and
scas
jmp
push
cmp
mov
jae
pop
xor
sbb
inc
ja
cmp
add
lds
sbb
jnp
fcompl
dec
jo
push
cmp
mov
je
sbb
in
fdivrl
sub
cmp
scas
xchg
push
pop
hlt
andl
adc
testb
ja
mov
mov
dec
sbb
xchg
dec
jno
fisubrl
sti
lea
rcl
or
adc
divl
push
rorb
jo
and
sub
add
mov
lock
and
ja
iret
inc
pop
add
jne
cmc
pusha
mov
mov
add
dec
repz
cwtl
sub
push
rcrb
lods
pop
and
push
push
fadds
cmp
mov
jnp
or
jge
cmpsl
rcrl
add
push
xchg
xor
sub
xchg
push
es
in
adc
jle
lock
movsl
fsubl
ljmp
sbb
xor
dec
sub
adc
jno
lods
cmp
sub
adc
fwait
out
mov
cmp
mov
push
pop
fildll
jne
push
sub
xor
call
or
and
insl
mov
je
cmpsb
or
ja
pop
je
mov
sub
add
pop
ret
aas
ds
pop
outsb
jns
inc
adc
repz
cmp
andl
jp
and
call
sub
adc
in
push
push
dec
movsb
inc
pop
add
xchg
es
imul
gs
insl
sub
arpl
push
std
and
dec
push
mov
pop
sub
test
add
sbb
fcmovnbe
add
inc
sub
int
inc
cmp
mov
pop
int
test
ret
push
xor
mov
pop
adc
or
cli
inc
ret
mov
or
cmp
or
or
enter
sub
or
test
sub
js
and
adc
add
lock
sub
mov
loope
clc
jecxz
jnp
xor
push
mov
into
add
insb
sbb
test
add
sbb
fdivp
je
push
decl
lret
or
fisttpll
lock
or
fld
and
std
addb
sub
dec
sub
mov
ds
je
pop
mov
dec
iret
add
push
rol
sbb
push
and
sub
xor
shr
xchg
add
xor
sub
and
cld
mov
or
ret
movsb
loopne
push
nop
push
xchg
xorb
daa
xor
and
pop
pop
out
or
adc
notb
adc
mov
mov
xor
xchg
mov
mov
push
loope
or
call
pop
insb
cltd
rcrl
cld
cmp
add
rcll
stc
and
xchg
or
shr
xchg
and
or
add
sub
lods
add
js
mov
mov
lret
test
pop
mov
sub
and
shrl
je
mov
lds
mov
imul
or
and
push
push
cltd
mov
xor
add
mov
mov
sub
xchg
jge
dec
jnp
lock
jne
add
adc
cmp
fisttps
enter
push
inc
pop
pop
jp
rorl
flds
adc
pop
inc
cwtl
js
cmp
mov
addr16
or
incb
fsubrs
loopne
push
ljmp
adc
popf
lods
add
in
loope
push
sbb
pop
or
data16
and
daa
enter
and
sbb
movsl
push
test
push
push
xlat
enter
mov
push
ss
jmp
jae
sbb
movsl
sub
add
mov
push
daa
pop
lock
js
and
or
pop
lods
jno
bnd
jmp
pop
add
dec
jle
adc
shlb
dec
inc
jo
xchg
jbe
ja
les
mov
and
add
repz
and
jle
or
repnz
or
subb
jb
out
push
pop
inc
add
pop
int3
icebp
xchg
test
push
dec
add
sbb
inc
insb
scas
in
jae
sarl
sub
inc
idivb
pop
adc
cmp
xchg
add
inc
adc
or
adc
repnz
sbb
lea
js
add
add
lea
push
aam
pop
xlat
roll
outsb
enter
ret
in
aas
add
add
jae
js
fwait
xchg
pop
mov
mov
lock
daa
xchg
inc
jne
add
rcpps
test
inc
mov
sti
or
sti
js
testb
testl
xchg
loope
adc
roll
cli
cmp
nop
inc
mov
sub
jbe
mov
push
lock
push
add
jb
pop
shl
add
push
sbb
or
dec
stc
sbb
mov
sub
and
enter
xchg
push
rcl
scas
fsts
dec
mov
es
add
leave
xor
rcrl
rcrl
jge
adc
repnz
inc
movsb
clc
mov
mov
mov
push
shrl
lret
enter
scas
outsl
clc
jae
dec
jmp
sub
xor
ficoml
pop
cmp
call
rolb
cwtl
add
mov
es
getsec
shr
adc
add
jmp
iret
and
push
add
movsb
icebp
inc
or
mov
sbb
fucomip
enter
into
jne
andl
adcb
push
xor
push
in
cmp
jns
push
or
dec
loope
adc
gs
dec
dec
lret
sub
cmpsl
xchg
test
push
push
xchg
xor
and
outsl
icebp
cmc
add
inc
add
inc
add
push
nop
add
pop
add
add
int
shrl
sbb
sbb
sbb
push
es
ret
in
xchg
adc
and
or
add
push
add
divl
jmp
iret
imul
adc
xor
mov
loop
test
mov
je
sahf
scas
stos
out
or
add
test
sarl
push
cmp
jecxz
add
std
sbb
repz
add
decb
add
orl
add
push
pop
or
enter
or
enter
or
cmpb
or
sysret
xor
xchg
sti
add
inc
sub
pop
in
adc
ret
imul
jnp
mov
inc
repnz
cmc
add
cli
cmpsl
aam
jl
mov
ret
xor
mov
push
or
lea
pop
popa
xor
mov
inc
mov
imull
das
add
adc
pmulhuw
mov
and
mov
test
movw
add
jle
scas
dec
xchg
mov
push
cmpsl
nop
dec
adc
add
cmp
ja
andb
mov
mov
in
fistps
pop
adc
cmp
jb
jne
mov
cmp
mov
add
push
jns
mov
jne,pn
and
pop
push
sbb
std
repnz
aas
clc
jns
shl
add
pop
pop
insb
cmp
sub
mov
loop
dec
sub
fcomp
sub
fmull
test
call
mov
stos
mov
stos
lea
mov
add
cmpl
add
cmp
adc
jge
cmp
add
mov
scas
mov
add
iret
adc
jp
mov
dec
lahf
ds
movzwl
or
cmp
adc
cmpb
mov
in
dec
pop
add
incw
add
sub
cmp
xor
inc
fdivrs
add
push
sbbb
jnp
icebp
ja
imul
add
jge
adc
dec
push
jg
lock
iret
add
pusha
inc
mov
shll
pop
add
aas
mov
adc
push
clc
mov
adc
dec
data16
test
insl
push
idivb
fldl
add
push
dec
xchg
or
or
fcmovnu
mov
push
in
je
cld
jo
sti
push
mov
test
jg
lea
inc
out
pop
fsub
jno
fwait
popa
push
subl
std
push
pop
inc
cmpsl
and
mov
addr16
decl
push
add
lods
dec
adc
lock
mov
inc
loopne
pop
push
lcall
test
jmp
jmp
add
dec
mov
sarl
xchg
xchg
add
push
out
mov
inc
cld
inc
mov
jge
inc
arpl
fbld
mov
add
jmp
enter
inc
cmpb
mov
incl
or
sti
or
sbb
pop
adc
loopne
out
sub
gs
pop
addps
mov
orl
add
inc
dec
jne
add
jns
loop
loopne
push
subb
or
pop
mov
pop
add
jae
test
lahf
push
inc
ret
hlt
add
or
xchg
sbb
fisubrs
jae
pop
sarl
outsl
lea
lea
inc
mov
mov
dec
pop
mov
mov
je
lahf
sbb
rcl
loop
or
cwtl
dec
das
push
jg
mov
mov
repnz
mov
test
mov
adc
lret
out
lea
lock
mov
divb
sbb
lods
cmp
loope
fs
fnsave
mov
or
loope
sbb
notrack
dec
test
xchg
pop
mov
mov
ds
jno
mov
mov
and
shl
xchg
dec
inc
inc
mov
mov
jnp
cltd
lret
cmp
or
push
mov
xlat
jnp
sbb
sbb
daa
jle
in
fcomp
inc
js
in
ret
shll
xchg
repnz
xchg
shl
jge
mov
jle
popl
push
add
or
mov
or
or
push
repz
sbbb
xor
sti
add
nop
adc
mov
dec
adc
or
pop
addb
adc
jb
mov
jb
sub
pop
pop
hlt
fwait
gs
pop
call
inc
xchg
or
push
pop
dec
lret
pop
pop
add
or
adc
adcb
sbb
xchg
sub
pmullw
cld
and
cmp
sbb
sbb
mov
or
add
pop
dec
sti
sub
push
or
icebp
or
add
cmpsl
inc
jae
out
hlt
push
or
pop
adc
add
push
mov
sar
jo
add
or
movzbl
pop
sbb
cmp
repz
dec
inc
xchg
mov
pop
stos
sub
mov
pushf
test
inc
dec
outsl
mov
jno
xor
sub
popa
pusha
mov
jno
push
mov
int3
inc
dec
pop
movsl
or
dec
adc
add
or
stc
mov
jne
add
xlat
test
out
adc
adc
adc
or
adc
jmp
push
lds
fs
add
adc
fmuls
lret
mov
popa
rorl
sbbb
mov
clc
or
adc
add
adc
inc
sbb
out
js
int3
rorl
pmuludq
sbb
xchg
add
bound
pop
xchg
mov
ja
mov
jb
mov
mov
xor
fidivrl
inc
fnsave
sbb
push
xorb
cmp
push
push
push
sbb
mov
add
lahf
in
or
lea
or
rcll
and
sub
xor
add
clc
cmpsb
adc
or
loope
adc
popa
fcomip
imul
test
mov
pop
sub
cmp
push
sub
adc
hlt
cmpsl
addr16
adc
mov
js
mov
pusha
xor
adc
addb
cmc
xchg
add
cmovae
pop
sbb
add
and
and
in
jo
push
or
xor
lds
adc
outsl
push
sbb
stos
das
sub
mov
inc
sbb
sti
ds
pop
sar
push
dec
fwait
sbb
daa
test
dec
add
push
sahf
push
das
xor
cmpsl
imul
mov
dec
icebp
and
pop
ret
jno
push
jle
stos
es
mov
sbb
pop
jl
movsl
xor
enter
or
pop
and
adc
out
mov
andl
inc
pop
push
ret
icebp
push
push
cli
mov
shlb
mov
mov
jbe
shlb
jne
cmp
fisubrs
mov
mov
not
fistl
stc
es
and
pop
sub
inc
sbb
jnp
insb
arpl
aad
test
inc
dec
jne
pop
pop
pop
and
add
xchg
pop
lea
test
jg
shrb
push
dec
je
loopne
add
shl
mov
jmp
dec
loopne
xchg
scas
hlt
jnp
imul
sub
inc
push
loopne
and
inc
scas
addb
or
clc
fdivrp
shr
shl
dec
inc
jg
call
cmp
leave
jb
add
addl
inc
add
dec
or
sub
mov
mov
lcall
sbb
inc
les
cmp
movsb
iret
xchg
loope
test
test
rolb
dec
es
aas
leave
les
inc
xchg
cmc
jl
jmp
ljmp
in
incl
pop
sub
aam
jnp
loope
xchg
mov
pop
lods
std
mov
outsb
leave
clc
sar
mov
pop
cli
inc
sbb
sub
jl
fcoml
enter
add
xchg
push
jmp
std
addl
sti
add
pop
push
fldt
movsl
mov
push
mov
pop
out
dec
enter
cmp
or
xor
lea
lds
push
push
mov
cmp
mov
pop
shll
jo
imul
mov
fdivs
mov
jmp
hlt
movsl
int
les
into
fisttpl
inc
pop
push
or
pop
test
sarl
adcl
fisttps
shrl
lahf
xchg
movsb
xchg
js
mov
jp
lods
fildll
pop
je
sbb
lods
sub
mov
and
out
xchg
out
pop
inc
ret
popf
xchg
adc
mov
inc
test
mov
add
ljmp
cmp
lds
xor
cld
adc
push
nop
adc
pop
jo
inc
popa
pop
pop
jmp
test
push
push
xchg
mov
dec
psrld
je
cmp
outsl
movsb
mov
dec
cmpb
jne
push
into
inc
and
add
pop
sbb
adc
popa
lock
xchg
movsb
xor
ret
inc
push
call
or
add
jmp
xchg
cld
adc
dec
add
fidivl
mov
sbb
lock
and
fstl
push
add
pop
xorl
rolb
insb
sbb
dec
mov
es
xchg
mov
pushf
xchg
jno
sahf
inc
pop
inc
sbb
repnz
mov
xchg
inc
add
inc
call
sbb
lock
loopne
xchg
push
mov
add
or
push
mov
jbe
add
and
pop
add
jle
fnstcw
or
dec
dec
xchg
xchg
sub
sahf
xchg
je
xchg
inc
loop
inc
push
pop
dec
fisubs
lods
push
adc
dec
sbb
mov
sub
add
imull
hlt
pop
pop
je
pop
pop
jmp
repnz
loope
push
int
sub
push
je
mov
xchg
and
imul
adc
icebp
mov
jne
movsb
cmpsb
mov
jp
push
push
xor
pop
xchg
mov
addb
or
or
push
loop
movsb
in
ficoms
jge
sub
adc
inc
adc
lock
and
add
mov
push
loope
lock
xchg
out
mov
hlt
inc
lret
push
push
add
in
sarl
adc
push
push
adc
xor
stos
add
adc
addb
sbb
subl
lret
xchg
dec
cmp
sub
add
pushf
scas
mov
insb
cld
push
fmull
or
add
lret
pop
dec
add
test
add
inc
and
add
or
out
fstpl
xchg
aad
insl
cmp
cld
cmp
shrl
adc
pop
adcb
add
sub
or
dec
insb
movsb
call
inc
add
cld
cltd
mov
test
mov
loope
mov
or
fptan
fnstsw
xor
inc
sahf
cmp
and
push
leave
add
push
add
add
push
ljmp
adc
add
add
mov
mov
in
shl
mov
bswap
pmulhuw
add
sub
shl
int3
aam
xor
jae
xor
adc
scas
mov
shr
inc
sub
mov
push
adc
faddl
add
push
jmp
xor
sbb
jnp
mov
popa
and
push
popa
dec
jge
push
rorb
sbb
inc
lock
add
push
push
sbb
arpl
xchg
jo
call
popf
test
pop
mov
fisubrl
fcoml
or
lahf
xor
mov
mov
inc
or
fistpl
cmp
jbe
dec
js
les
stc
pusha
add
sub
push
mov
js
clc
mov
or
scas
adc
ret
inc
das
daa
shrl
pop
xor
repz
pop
add
fdivs
fwait
imul
pushf
movsl
arpl
jmp
and
xchg
or
loop
sysret
jbe
subl
outsl
push
inc
rorl
push
xor
in
add
jge
dec
sbb
mov
in
or
clc
push
mov
add
stos
shrb
jmp
sbb
lret
out
out
sbb
into
hlt
enter
in
daa
sti
and
push
add
sub
ret
fisubrl
test
adc
pop
sbb
sub
sbb
mov
lret
mov
call
mov
lret
clc
cld
add
or
loopne
sub
cmpsl
roll
inc
test
incl
hlt
repnz
mov
inc
jo
cmp
and
stos
sub
push
pop
push
in
cli
jmp
lea
inc
and
cmp
xchg
testl
sub
movsl
shll
test
jg
stos
push
pop
mov
shl
jmp
sub
mov
iret
les
sti
out
dec
aaa
out
jg
xchg
dec
xor
rorl
add
mov
sbb
pushl
add
mov
add
ja
setl
enter
or
pop
je
or
xor
sbb
pop
addr16
and
or
inc
cmp
sbb
in
inc
xor
dec
dec
pusha
subl
dec
fisttpll
pop
dec
neg
cmp
xor
ret
xor
cwtl
jg
mov
notl
sub
inc
jg
inc
testl
filds
sahf
sub
std
bound
cmp
lret
sub
xor
in
call
shlb
xor
inc
dec
xchg
lret
repz
xchg
sbb
push
sbb
repnz
dec
cmp
jmp
jecxz
cmp
jbe
or
sub
popa
shl
testl
pop
inc
sbb
push
inc
fiadds
or
in
inc
cmp
xor
sbb
and
sbb
cmp
sub
ja
ret
mov
lock
lea
mov
dec
test
jne
mov
mov
cmp
add
cmp
sub
lods
dec
inc
cld
push
or
add
shll
adc
mov
in
sar
add
sbb
sbb
les
xchg
dec
pusha
sub
mov
pop
pavgw
pop
jb
cmp
aas
imul
jae
into
setb
std
sar
and
fsubr
sbb
sub
lock
dec
mov
add
add
cmpl
xchg
daa
inc
cmp
xor
inc
shl
out
mov
lea
sub
shr
es
inc
inc
sub
inc
loop
ret
shl
iret
lret
adc
jb
sbb
mov
std
inc
pop
inc
jmp
xor
test
jne
mov
push
mov
dec
and
enter
jnp
push
sti
je
pop
movl
int
dec
and
dec
cmp
push
cs
add
insl
enter
dec
adc
sub
add
enter
nop
sub
adc
push
mov
adc
fcomi
adc
cmp
adc
adc
shlb
pop
jmp
dec
mov
dec
inc
mov
mov
xor
adc
lods
sti
std
jne
push
cmp
pop
sbb
or
icebp
sti
je
insb
loop
int
cmc
sbb
sbb
add
es
shll
sub
repz
xor
sub
pop
and
rclb
les
test
adc
or
pusha
pusha
fisubrs
push
push
sub
add
and
push
mov
dec
pop
cmpsb
mov
sub
sub
jbe
fstpl
or
sbb
sbb
or
ja
in
pop
jl
dec
cmp
call
lcall
es
push
shll
sbb
jns
or
sub
test
sub
stc
add
push
or
out
or
add
sub
push
push
inc
arpl
cmp
jecxz
aas
pop
or
add
pop
dec
in
in
sub
mov
sbb
sub
push
outsb
lret
js
inc
cmp
add
pop
add
add
sub
mov
lcall
or
call
loop
pusha
pop
or
and
pusha
out
push
js
pop
movsl
sub
cld
xor
fstl
dec
in
sub
hlt
adc
inc
ror
fsubrs
out
or
or
imul
push
push
sbb
push
or
faddl
sbb
ret
scas
dec
shl
fisubl
or
sub
push
mov
ds
pop
jge
sub
ret
adc
ja
mov
pop
mov
in
lock
js
leave
jmp
sub
cmovle
imul
mov
or
shrb
jmp
sbb
movsl
ror
into
adc
insb
cmp
dec
inc
fists
and
sbb
pop
cmp
jb
sbbl
pop
call
mov
test
or
fadds
popf
mov
gs
out
dec
sti
dec
imul
jecxz
jns
sarb
mov
or
test
loop
lock
js
pop
test
pop
sbb
enter
sbb
or
fistpll
sbb
or
sub
ror
shll
sbb
sub
in
ds
ficompl
push
or
mov
and
addb
clc
xchg
inc
add
sbb
jbe
call
cmpl
or
mov
pushf
lahf
and
orb
cmp
jno
jmp
sub
and
aaa
fcmovnu
enter
je
push
ja
inc
fadds
and
xor
ret
sub
fld
jecxz
iret
add
dec
loope
test
push
mov
adc
inc
dec
push
jne
xchg
ja
push
int3
and
enter
adc
sbb
aaa
jno
aam
sarb
xchg
fdivs
fiadds
rcrl
add
test
dec
mov
fstpl
jg
je
sbb
sbb
movsb
mov
or
xchg
jl
push
and
adc
cmp
test
loopne
xchg
popa
fsubrl
pop
popf
mov
popa
mov
lcall
adc
push
outsb
inc
sbb
adc
dec
or
pop
inc
andl
adc
mov
pop
mov
push
mov
outsb
lret
imul
icebp
pop
push
push
pop
xchg
pop
or
and
cmp
jp
sbb
ss
jne
add
add
pop
in
movb
fcos
mov
push
xor
mov
mov
sbb
mov
push
es
add
push
add
in
call
or
sub
in
nop
sbb
mov
int3
jg
jns
pop
mov
rorl
jg
mov
enter
push
nop
mov
and
gs
cmp
dec
cmp
testb
hlt
push
mov
or
sub
loopne
mov
aaa
xchg
push
sub
je
dec
loope
mov
sub
and
mov
mov
sub
dec
add
push
test
xor
dec
arpl
loopne
out
add
dec
icebp
inc
add
cmp
pop
dec
or
test
add
bound
inc
ret
dec
inc
or
pushf
sarb
mov
xchg
sub
cmp
sarb
dec
test
adc
inc
push
fmull
and
mov
lret
push
sub
outsl
fadds
icebp
mov
jmp
rcr
push
hlt
xor
jle
stos
push
xor
or
inc
jl
or
mov
push
cmp
or
push
inc
xorb
inc
pop
adc
and
sub
shrb
mov
addr16
test
mov
pop
mov
and
mov
jns
inc
push
pop
pop
dec
mov
lea
aaa
xor
xlat
movsb
push
adc
rcrb
mov
push
pop
xor
mov
mov
lods
dec
xchg
adc
xchg
or
in
cmpsb
adc
mov
mov
icebp
hlt
out
or
leave
pop
cmpsl
inc
sub
push
daa
and
jge
xor
mov
xor
popl
or
cmp
pop
adc
mov
mov
add
movsb
adc
push
jle
and
ljmp
add
mov
dec
imul
sbb
into
cmp
mov
daa
insl
mov
xor
or
insb
andl
sbb
mov
pushf
adcl
or
les
pop
sbb
jmp
imul
adc
aam
push
je
lock
mov
xor
flds
push
cmpsb
mov
sub
jne
lods
popa
loope
loopnew
mov
adc
and
add
rep
push
dec
ljmp
sbb
mov
pop
popf
xor
sub
pop
push
and
xchg
cld
add
or
mov
adc
jg
dec
push
ret
push
inc
xor
pop
inc
xor
mov
fisttps
or
testl
push
inc
stos
xchg
fdivrl
pop
gs
or
push
mov
sub
mov
jbe
push
pop
push
push
lea
movsb
cmc
daa
divl
leave
xor
jp
rcrb
lcall
js
ja
jo
push
aas
fidivl
jle
add
fldenv
add
sub
js
sbb
dec
xor
jmp
mov
mov
das
cld
sub
mov
movsl
pop
xor
pop
sub
test
inc
sbb
pop
sbb
pop
sbb
inc
cmpsb
aam
or
repnz
aam
stos
or
xor
jl
mov
push
cmp
jne
add
cmp
nopl
mov
cmp
out
mov
shll
mov
mov
adc
xor
aas
add
sub
icebp
ss
cmp
scas
fildl
cmpsl
sub
push
cld
dec
adc
sub
arpl
cmc
jne
sub
add
pop
add
fdivr
imul
sha1msg2
lret
out
jne
adc
and
movb
mov
leave
sub
div
shr
aam
add
mov
add
das
lock
add
mov
mov
call
jle
rolb
xor
je
inc
sub
xor
or
iret
and
addl
inc
dec
sub
ret
xchg
dec
es
std
cld
add
aas
push
add
leave
roll
cmp
jbe
jb
je
xor
hlt
jmp
adc
rep
jmp
mov
cmp
or
add
das
test
pop
repz
xor
lea
shlb
adc
lods
or
cmp
bound
add
add
fimull
mov
dec
fwait
in
xchg
add
add
fidivrs
movb
mov
or
push
sbb
or
mov
xor
lahf
mov
mov
in
call
shll
clc
clc
mov
popf
dec
cld
fnstcw
cmp
sbb
sbb
nop
ret
call
and
loopne
shlb
and
pop
xor
and
arpl
lea
jl
xchg
or
cmp
pop
and
std
repz
fdivs
jae
lea
xchg
daa
stc
sub
xor
pop
nop
in
push
adc
push
fistpl
jge
mov
add
sahf
inc
push
out
push
in
push
add
movsl
loop
addr16
add
in
bound
jl
push
fidivs
lcall
mov
dec
rorl
ss
sbb
sbb
xor
shll
adc
adc
xor
rorl
or
mov
sbb
inc
call
aaa
mov
sub
aaa
adc
pop
add
pusha
mov
pop
or
adc
ja
push
filds
cwtl
add
push
pop
mov
ret
call
mov
add
xor
je
sub
sub
xchg
cs
jne
sbb
adc
rcrl
xchg
mul
or
fisttps
jmp
pop
pushl
fistps
repnz
ret
push
in
or
lret
mov
pop
stc
xor
jnp
shlb
pop
and
jmp
sbb
jg
es
adc
add
pop
lea
jnp
cltd
xchg
testl
cld
fbld
das
nop
add
inc
cmp
xchg
int
cmp
cmp
jl
mov
inc
sub
sub
lea
adc
or
clc
cmp
call
add
fildll
call
inc
push
push
fs
cmp
js
int3
cmp
nop
fmull
adc
cmp
nop
inc
and
cmpsb
mov
mov
push
mov
cmpsb
imul
outsb
sbb
inc
fmuls
loopne
xor
fwait
lock
fucomip
in
cmp
test
outsl
adc
adc
pushl
je
js
loopne
jb
pusha
adc
icebp
jo
sub
addl
fs
icebp
xor
punpcklbw
shlb
jmp
insl
aad
push
mov
test
xchg
fld
ja
rolb
cwtl
jmp
test
les
add
add
mov
insl
mov
or
pop
pop
xchg
pop
xchg
cmp
push
jae
xor
pusha
clc
clc
push
add
adc
inc
icebp
push
in
jge
fldl
add
imul
cmp
fldcw
orb
into
xor
push
mov
arpl
push
scas
pushf
es
mov
sbb
or
adc
xor
clc
lcall
dec
or
jo
or
add
push
sbbl
jne
mov
js
rol
push
ss
fcompl
xchg
icebp
xchg
sbb
sbb
rclb
inc
lcall
clc
test
pop
mov
push
jl
mov
add
sub
mov
jp
jecxz
rcrb
imul
enter
mov
pop
sbb
mov
xchg
arpl
sbbl
adc
add
pop
movsb
call
ds
add
loopne
je
pop
movl
cmp
push
cmp
or
ret
int3
jo
hlt
adc
lahf
mov
and
fldl
inc
cmpsl
loop
push
cmp
pop
out
inc
gs
loopne
sbb
sub
and
arpl
pop
ja
pop
outsl
jl
loopne
mov
ds
nop
insb
jb
dec
push
das
push
pushf
sub
mov
call
cmp
jge
mov
int3
dec
adc
mov
cmp
repz
pop
xchg
lock
jg
push
imul
cltd
rol
sbb
cmp
ror
jmp
jecxz
xchg
icebp
pop
fistpl
xchg
cmp
popa
fmull
push
and
push
add
js
cmp
cmc
inc
jge
push
test
mov
cmp
arpl
mov
fs
lock
inc
shlb
inc
add
push
cmp
push
mov
jb
test
pop
cmp
popa
fmuls
lods
out
gs
sbb
dec
aad
adc
pop
mov
xor
test
inc
hlt
in
push
push
leave
xchg
aas
mov
mov
push
push
sti
mov
dec
fistl
sbb
inc
push
adc
cmp
and
add
and
mov
push
adc
das
jl
fidivrs
add
vandps
jmp
fs
es
mov
loope
lahf
and
or
lock
adc
movsb
jge
or
jo
out
out
push
push
mov
test
add
imul
cwtl
or
or
dec
mov
lea
push
dec
jp
sub
js
or
sub
dec
push
ret
rep
rorb
movsl
cmpsl
test
test
dec
jbe
adc
push
test
sbb
and
inc
push
adc
test
or
inc
ds
add
mov
int3
cmp
lret
loope
push
sub
xchg
mov
pusha
clc
and
sar
xchg
mov
shr
mov
pop
lods
or
int3
aam
mov
mov
bound
pop
mov
push
insl
hlt
pop
fsubrl
mov
mov
pop
jno
push
gs
in
dec
mov
mov
mov
or
dec
cld
sbb
shrl
sarb
mov
cwtl
cltd
jae
mov
add
push
push
xchg
mov
test
rol
ss
subl
loopne
fwait
pusha
xchg
sub
jbe
mov
mov
addl
xchg
push
lret
lods
idivb
in
cmp
sub
mov
mov
mov
adc
pop
mov
ret
add
pushl
jns
pop
ficomps
pop
add
inc
ret
mov
fisttps
push
mov
test
imul
imul
fcoms
ja
in
pop
lret
add
add
and
jo
or
or
roll
outsb
mov
push
and
ja
cmp
loope
daa
xchg
jb
fildl
xchg
stc
add
cmpsl
fsubp
xchg
sbb
fisubl
fstpt
cmc
xor
push
lea
lds
incb
aas
ret
push
out
cmpl
test
dec
in
or
sbb
pop
les
cmp
jmp
aam
push
cmp
push
sarb
ja
cmp
add
add
dec
mov
icebp
mov
xlat
and
sub
xor
jg
and
shl
fists
imul
add
cmp
jl
sub
inc
ja
pop
sub
pop
mov
dec
arpl
test
jmp
or
add
fadds
dec
adc
inc
jnp
pop
sub
sub
adc
cmp
aaa
inc
add
xor
dec
dec
push
es
mov
icebp
fadds
dec
inc
xor
test
dec
mov
pusha
aaa
mov
push
pusha
and
adc
jo
sbb
pop
jno
xor
fcmovnbe
pshufw
mov
ja
xor
adc
add
movsb
cmp
and
dec
dec
out
add
fdivrl
insl
pop
mov
inc
jns
fadd
jb
add
xchg
push
rclb
dec
mov
adc
mov
dec
cmp
sbb
stos
adc
and
cmp
cwtl
add
in
lcall
add
sbb
cmp
mov
hlt
je
inc
inc
dec
or
pop
rolb
inc
mov
push
jge
jno
ja
mov
rolb
mov
test
addr16
mov
xor
jg
sarb
add
sahf
es
adc
mov
pusha
shrl
jg
aad
push
cmp
xor
mov
dec
add
adc
add
rorb
ja
push
xor
test
and
pop
hlt
aas
cltd
mov
mov
testb
je
inc
mov
lahf
xor
mov
lods
iret
sarb
repz
or
mov
loope
sbb
and
repnz
aaa
adc
jbe
movsl
adc
ret
popf
or
pop
sub
clc
pop
sti
js
das
xor
icebp
cmpb
loop
dec
gs
lea
cmp
cmc
xor
add
add
push
or
or
js
pusha
push
jp
sub
pusha
mov
jle
inc
mov
jmp
imul
movsbl
pop
js
jl
fsubs
mull
orl
xchg
or
jae
mov
loopne
pop
and
and
jo
adc
leave
aaa
and
insb
leave
pop
and
or
add
inc
push
mov
sub
es
or
pop
sbb
inc
add
inc
cmpsl
sub
add
arpl
pop
ret
jno
and
and
lcall
gs
and
test
sbbl
inc
inc
call
popf
sbb
push
ja
xchg
mov
mov
cmp
movsb
sub
adc
dec
jge
inc
inc
and
test
or
mov
fisubs
je
lds
push
mov
ljmp
mov
jle
push
mov
xchg
adc
lret
inc
mov
jmp
stos
mov
stc
sub
sub
push
scas
cmp
movsl
pop
and
subl
sbbb
call
divl
mov
inc
jmp
addl
jne
cltd
pop
sub
addl
and
adc
add
jo
stc
and
cs
call
or
or
lahf
lret
push
mul
enter
in
mov
cmp
fs
add
loope
rcrl
mov
mov
adcl
cmpsb
inc
adc
cmpsl
mov
cmpsl
insb
rclb
cmp
jge
lret
jb
and
call
test
sbb
jb
adc
jge
sbb
add
shrb
xor
pop
jl
mov
arpl
inc
jnp
pop
push
je
pushfw
insl
sub
push
inc
sti
cld
rorb
add
push
adc
mov
push
nop
aaa
rol
adcl
jbe
inc
je
adc
or
rol
sahf
xchg
xor
and
cmp
in
mov
adcl
sarl
or
jecxz
test
ret
add
jle
lods
in
jns
sbb
bound
mov
decl
mov
mov
insl
adc
mov
into
sbb
mov
leave
inc
sarl
scas
in
int
rol
or
and
aaa
jb
or
jp
mov
sbb
js
jbe
cmp
outsb
sbb
aas
scas
pop
inc
imul
ljmp
leave
sbb
dec
dec
call
push
dec
jnp
fstl
arpl
xor
and
mov
mov
push
hlt
jne
pop
repnz
jg
push
addl
pop
push
icebp
dec
divl
js
pop
sbb
push
lret
inc
mov
popa
mov
mov
popa
mov
and
adc
push
ret
mov
stos
cmp
jne
leave
popa
sbb
outsl
cmp
and
loopne
adc
inc
icebp
push
scas
lods
movsb
xchg
jne
push
sbb
lock
push
jmp
add
lds
xchg
ljmp
sub
in
inc
test
sahf
push
mov
mov
add
cmp
pushf
cmp
test
das
cmp
popa
ret
in
xor
adc
sub
sbb
imul
cmpb
test
insl
incl
insb
push
mov
mov
push
mov
cmp
jne
sub
dec
jnp
jnp
neg
mov
sarl
cmp
sub
adc
ja
add
jmp
push
daa
hlt
int
push
jb
and
ja
sbb
sbb
mov
ret
test
inc
sbb
mov
sbb
sbb
xor
sbb
xchg
popf
je
out
loopne
mov
push
in
cld
jmp
cld
inc
call
pop
dec
cld
dec
dec
nop
xchg
xchg
xchg
dec
dec
dec
cld
in
push
push
cld
push
cmp
jne
iret
cmp
lret
cld
add
push
loope
add
add
hlt
test
dec
in
hlt
fildl
cmp
sbb
mov
mov
sub
ret
and
cmpsb
or
test
shl
push
hlt
add
push
imul
or
push
or
jmp
bound
add
aaa
sbb
addl
mov
or
dec
ljmp
dec
test
jle
add
ds
dec
lods
pop
das
or
test
call
xor
xor
pop
xlat
xchg
push
jnp
add
inc
es
mov
insb
shr
sbb
and
pop
lock
jo
popf
xchg
mov
jno
and
clc
inc
or
rcr
sub
push
jmp
and
out
xlat
sbbl
enter
aas
mov
xchg
lcall
ret
push
imul
add
popa
imul
mov
and
ret
mov
jg
cmp
mov
leave
imul
filds
jge
jmp
cmp
cmp
push
insb
mov
sti
mov
test
cli
jl
jl
outsl
test
or
cmp
mov
mov
fistps
xchg
js
loope
push
xchg
cwtl
pop
jge
jno
adc
inc
dec
jg
cmp
test
test
add
xchg
nop
adc
inc
fadds
les
xchg
dec
clts
movb
inc
neg
push
aam
mov
orl
in
jbe
int
mov
mov
out
inc
popf
cmc
push
std
icebp
jb
movsb
cmpb
sbb
or
push
les
inc
sbb
sub
add
std
divb
jne
mov
push
sbb
mov
adc
or
push
cmp
jo
lods
cmp
adc
adc
dec
xor
inc
push
push
rol
sbb
inc
loop,pn
and
mov
push
cltd
sbb
or
icebp
jle
in
push
rcll
out
pop
mov
cmp
xor
test
mov
and
mov
loopne
dec
mov
pushf
call
xor
imul
insb
mov
cmpl
call
cmp
add
mov
and
jbe
push
mov
sahf
negl
jns
pop
loop
push
arpl
push
into
xchg
sub
mov
data16
pop
or
and
mov
inc
sub
mov
xor
pop
push
adc
mov
ret
adc
inc
mov
enter
and
cwtl
dec
jmp
or
pop
sub
mov
lock
xor
scas
scas
sbb
test
dec
testb
pop
pop
sbb
std
sbb
pushf
jo
add
addl
rcl
fistpl
test
outsl
xor
jmp
in
mov
xor
push
push
pop
lods
jno
add
mov
pop
xchg
mov
jae
mov
popa
fs
or
mov
std
xlat
bnd
push
inc
test
add
mov
pushl
inc
xchg
icebp
add
or
in
jmp
ljmp
pop
aam
sbb
aaa
jbe
movsl
push
ret
push
pop
or
adc
movsl
add
aaa
dec
mov
mov
xor
or
lock
cmp
jae
dec
lea
jnp
add
fistl
jae
pop
jbe
mov
dec
aas
or
jmpw
add
push
sbb
dec
mov
icebp
icebp
clc
pop
insl
dec
jl
clc
stc
jg
jg
clts
dec
jg
je
sub
je
or
inc
dec
je
clts
je
add
lods
and
and
or
and
stos
cltd
xlat
mov
xchg
rcll
push
mov
cwtl
push
pop
jle
xchg
dec
cmpsl
shll
test
loope
jge
repnz
add
pop
decl
add
add
lret
push
jnp
int
or
gs
push
add
xchg
scas
add
pop
push
dec
js
add
or
pop
sbb
inc
adc
push
out
sub
adc
push
int
icebp
call
inc
outsl
or
icebp
inc
jecxz
inc
mov
pop
jmp
fstpt
mov
pop
dec
sbb
dec
sbb
pop
aas
sahf
test
push
cltd
pop
idiv
push
mov
les
js
pop
push
stc
jl
sub
xchg
xor
lahf
add
mov
inc
add
pop
hlt
pop
push
dec
subps
insb
and
or
sbb
add
dec
je
imul
test
cmp
dec
adc
pusha
out
jmp
add
adc
sbb
out
in
inc
adc
int
jo
pop
or
je
dec
iret
adc
sbb
outsb
sarb
cli
mov
mov
dec
add
shlb
mov
jmp
aas
sub
scas
or
hlt
push
faddp
sbb
sarl
or
jg
xchg
cwtl
cs
xchg
insb
setl
xor
inc
inc
rorb
mov
jno
or
cmp
dec
adc
out
cmpsl
jno
test
shld
stos
sbb
mov
out
pop
and
mov
ljmp
rclb
jo
or
adc
ret
in
pop
data16
sbb
inc
adc
cmpsb
push
mov
out
dec
cmc
mov
or
pop
jne
loopne
lea
or
sarl
push
rolb
mov
sbb
int3
xor
push
jbe
stos
enter
cmc
add
sar
mov
jmp
adc
in
mov
mov
pusha
je
fstpl
xor
jnp
mov
mov
push
rorb
jle
ret
imul
cmc
pop
pusha
cmc
xchg
jbe
leave
jmp
cmp
fucomip
inc
jne
push
dec
stc
out
add
into
mov
xchg
cli
mov
out
shll
rolb
adc
mov
aam
adc
daa
adc
inc
cmp
xchg
fdivr
ljmp
or
loope
cmp
out
mov
sbb
daa
adc
out
inc
je
or
pop
dec
je
popa
mov
pop
add
sub
das
add
push
jl
pop
stos
and
ret
add
dec
je
add
sub
xchg
test
ss
or
bound
insl
data16
xchg
sub
int
ficompl
push
add
ds
add
dec
jo
push
loopne
ret
xor
rolb
addl
daa
je
movzbl
jb
mov
push
add
imul
push
shll
cmp
scas
adcb
mov
dec
sar
dec
push
mov
mov
adc
icebp
and
and
mov
pop
movnti
enter
inc
popa
mov
cltd
test
adc
ljmp
xchg
mov
add
add
jge
xchg
cmpl
jo
imul
inc
loop
jmp
jl
pop
cmpl
inc
cmpb
ret
xor
and
scas
lret
add
jmp
jb
outsl
mov
jle
xchg
adc
sbb
or
xor
xor
sub
push
jmp
sub
jnp
and
dec
mov
test
rorb
popf
pop
mov
loop
mov
jne
and
test
add
je
fsubl
popa
push
cmp
popl
adc
mov
test
orb
cmpsb
jle
add
add
ss
sahf
aam
imul
xchg
leave
add
add
mov
enter
push
pop
dec
jge
cmc
adc
cmp
scas
je
push
mov
arpl
aas
movsl
push
sbb
jmp
test
mov
jne
inc
inc
clc
add
jecxz
pop
pop
sbb
cmp
sbb
pop
fsubrl
ja
or
cmp
mov
cltd
jmp
ret
loopne
dec
shrl
inc
out
aaa
mov
dec
in
pop
push
loope
shlb
mov
popa
xchg
pop
pop
dec
inc
mov
add
and
sub
pop
adc
mov
mov
push
pop
popf
pop
jge
mov
movb
pop
clc
or
int
or
idiv
add
imul
jecxz
rorl
sbb
inc
mov
and
ficoms
add
pop
adc
push
sbb
jmp
repz
clc
mov
pop
int3
jne
sbb
loope
imul
shll
in
int
fldt
paddsb
dec
mov
imul
and
ret
mov
dec
mov
push
jmp
inc
shlb
jo
pop
xor
mov
or
cmp
xchg
pop
sub
add
and
jmp
xchg
or
dec
sbb
int
xor
fwait
add
jmp
dec
push
jge
mov
popa
fcoml
dec
sub
or
loopne
std
jmp
inc
xor
rol
pushf
jno
add
ja
mov
cmpl
jne
push
sbb
jge
fsubrl
adc
jmp
insb
cmp
lock
add
imul
cmp
or
sub
mov
in
dec
shr
pop
test
dec
xchg
test
fisttpl
cwtl
mov
cmpsl
mov
mov
mov
imul
inc
inc
daa
pop
jbe
xchg
ret
push
xor
mov
xor
sbb
or
mov
test
dec
mov
add
and
jo
mov
ret
repnz
loopne
lods
push
int3
xor
ja
xor
inc
and
inc
and
jmp
sbb
sbb
and
add
mov
mov
jne
sarl
insl
test
imul
xchg
add
iret
rcl
and
xor
mov
jbe
push
push
xchg
mov
out
cwtl
pusha
test
cmp
outsb
pop
mov
and
sarl
sbb
cld
and
or
mov
jne
es
rorb
xchg
popa
cmp
add
pop
or
sbb
add
mov
mov
movb
push
mov
das
add
sbb
push
sbb
or
mov
scas
les
or
iret
add
aaa
sub
inc
xor
je
mov
aas
mov
cmp
jbe
jg
lahf
js
jge
stos
jb
insl
inc
cmp
push
sbb
inc
mov
and
pushw
ss
mov
cmp
and
sub
bound
lock
xchg
lock
pusha
enter
dec
clc
inc
jno
lcall
cmpsb
testb
je
mov
cmpw
mov
jmp
cmpsb
cld
in
xchg
inc
popf
aaa
js
or
sub
data16
mov
dec
push
add
jbe
jb
mov
add
cmp
movsl
test
fidivl
testb
jne
sbb
lods
inc
test
in
and
mov
or
pop
icebp
sarl
dec
sbb
cmp
add
lcall
xchg
test
sub
imul
or
xorl
dec
xchg
lods
mov
inc
mov
cmp
adc
add
mov
jbe
jo
add
mov
xor
inc
adc
or
sub
mov
pop
jl
sub
xorb
inc
mov
imul
inc
imul
cli
pop
roll
xor
decl
fcompp
nop
dec
adc
inc
sarb
add
jo
dec
out
and
pop
inc
ljmp
je
push
mov
sti
jmp
jne
push
lcall
sbb
mov
test
mov
pop
add
cmp
in
add
cmc
loopne
pop
sub
pop
inc
push
sbb
aad
push
sarb
and
rolb
sbb
push
inc
icebp
ss
xchg
push
push
mov
jne
cmp
cmpl
fcmovnb
rcll
int
psubsb
or
inc
jl
push
pop
lods
cld
push
and
or
add
sti
ljmpw
pushl
mov
adc
mov
xor
cmp
shl
jne
push
sbb
sub
jo
mov
aas
push
fdivrs
mov
add
mulb
inc
gs
ljmp
jecxz
stos
loopne
pop
dec
gs
jo
add
jmp
outsl
mov
mov
mov
fsubrl
adc
ss
jle
adc
stc
push
inc
sub
mov
gs
and
scas
sbb
or
ret
or
push
mov
ljmp
aam
dec
xchg
mov
mov
addr16
push
or
cli
add
rolb
std
ljmp
call
cli
push
js
sbb
sub
cld
shr
aaa
dec
mov
add
mov
inc
xor
push
dec
cmpsl
inc
add
clc
add
push
or
mov
std
xchg
out
jae
adc
or
je
cli
add
adc
pop
sbb
push
pop
imul
or
pop
add
sahf
xorb
mov
adc
not
and
or
sahf
imul
addb
sbb
aad
loopne
pushf
mov
int
cmp
pop
add
push
inc
stos
mov
add
sub
int
and
push
or
mov
and
hlt
jo
out
inc
sub
and
sti
add
jnp
sarb
mov
jg
clc
imul
jnp
andb
cmc
je
inc
jle
js
jno
jno
cmp
mov
nop
and
not
and
jo
insl
mov
add
loopne
mov
xor
adc
inc
sub
mov
xchg
std
push
or
rol
enter
out
cltd
lcall
lea
mov
pop
or
or
or
mov
mov
inc
mov
jge
jbe
lock
ror
cmpsl
imul
rorl
sbb
mov
jmp
dec
mov
int3
xor
lods
dec
push
mov
ljmp
gs
js
or
arpl
sbb
mov
test
faddl
pop
mov
adc
stc
sub
inc
shl
add
scas
lret
mov
dec
jp
aas
gs
add
wbinvd
push
or
mov
fadds
sub
dec
inc
adc
adc
mov
or
and
arpl
mov
in
scas
add
and
adc
popf
sub
leave
mov
push
orb
push
sub
adcl
push
faddl
movsb
or
fistpll
add
adc
pop
subl
mov
pop
outsb
mov
adcb
jne
mov
pop
outsb
push
rcll
pop
pusha
pop
ret
addl
pop
pop
stos
arpl
mov
and
xor
mov
add
jmp
or
inc
push
lods
inc
das
mov
mov
fmull
adcb
rolb
dec
sbb
xchg
and
pop
sbb
push
inc
mov
add
push
sub
shl
inc
pop
stc
mov
imul
popf
test
adc
pop
mov
xchg
add
lcall
out
inc
jo
jns
push
fwait
dec
mov
xchg
add
loopne
cmp
inc
mov
or
inc
orl
pop
cmp
incl
nop
inc
pusha
adc
ds
push
out
int
cld
lock
add
sub
push
mov
into
dec
jne
xchg
clc
add
dec
insb
hlt
andb
cmp
push
sub
lds
jo
inc
inc
mov
add
jg
dec
inc
jne
or
xlat
ss
or
jge
test
adc
sub
loopne
sub
pop
shr
lahf
js
orl
add
add
push
rcll
sbb
mov
inc
insl
inc
add
ja
scas
mov
cli
push
sar
dec
cmp
cmp
jbe
xchg
pop
push
mov
inc
pop
push
int
inc
cmp
fmul
xor
clc
iret
add
jecxz
adcl
and
adc
movlps
adc
into
add
add
repz
push
mov
push
lods
incl
cmp
xor
ljmp
lea
lods
mov
adc
push
sub
mov
cltd
pop
dec
pop
pop
push
mov
dec
mov
adc
pop
sbb
push
loope
xchg
xchg
mov
or
fisttpll
xor
adc
inc
pop
mov
sub
icebp
out
inc
cmc
add
js
ret
icebp
cwtl
pop
lds
lea
xor
mov
inc
dec
insl
pop
xor
push
sar
add
xor
movsb
andb
pop
sub
in
cmpl
fcmovne
dec
scas
dec
je
sbb
je
fisttps
scas
loope
or
dec
push
cmp
cmp
ja
dec
in
add
fisttpl
lock
mov
xchg
mov
dec
add
xchg
shrl
incb
bswap
mov
out
cmp
setb
fdivs
cmp
dec
mov
test
pop
add
mov
mov
lods
mov
push
push
roll
push
push
cmp
lea
xchg
xchg
arpl
adc
out
push
jmp
hlt
nop
add
and
not
pop
mov
lea
mov
fistpll
and
decb
iret
jne
ret
adc
mov
jb
push
test
jmp
fidivs
mov
inc
or
inc
call
add
mov
subl
push
sbb
jl
jno
mov
loopne
iret
and
dec
mov
and
xor
add
cld
push
testb
test
fadd
stos
ljmp
je
dec
imul
mov
into
jne
lret
ret
pop
jmp
dec
jo
pop
addl
inc
test
andb
xor
or
adc
pop
cs
mov
push
sbb
pop
aad
jecxz
por
xchg
cmpl
loopne
push
shl
inc
test
cltd
cli
mov
icebp
inc
push
rorl
imul
push
shl
hlt
sub
pop
cmp
call
iret
jle
rcr
mov
and
mov
decb
jne
data16
addl
loope
pusha
pop
mov
bound
sub
xchg
fisttpll
jns
xchg
add
popa
sarl
pop
inc
mov
or
loop
pop
or
and
rcrl
insl
push
ret
and
out
or
ja
or
movsb
inc
or
push
pushf
adc
outsl
mov
out
or
mov
add
jl
adc
lret
push
fsubl
fcompl
lea
or
pop
sbb
adc
icebp
pop
jne
lea
testl
push
daa
cmp
je
push
shll
xor
icebp
insl
or
testb
je
testb
mov
test
sbb
test
or
repnz
or
jne
jmp
push
jne
push
and
mov
xchg
cmp
mov
in
add
dec
incl
notl
cmp
sarl
cmp
jl
roll
mov
popa
test
add
mov
in
cmp
mov
and
pushl
jle
not
not
jmp
xchg
sbb
mov
lret
mov
popa
out
iret
xchg
in
rcll
mov
movsb
inc
add
pop
sarb
dec
mov
add
sub
inc
dec
adc
push
pop
aam
push
mov
iret
test
xchg
movsl
xchg
rcrb
orb
mov
cmpsb
mov
mov
movsl
sahf
lods
push
ja
fldl
loopne
or
sbb
ljmp
mov
mov
sbb
xorl
fstpt
inc
mov
jo
sub
mov
dec
movsl
xchg
adc
xchg
pop
jns
or
iret
das
test
push
arpl
outsb
xchg
jne
sti
mov
js
sub
js
and
pop
sbb
insb
jae
jne
inc
sbb
dec
aam
and
sub
inc
jl
jo
outsb
repnz
add
dec
lods
aam
adc
cmp
and
loope
ffreep
xor
or
pop
das
ret
jle
jge
das
imul
push
push
insl
add
xchg
ret
adc
add
rcrb
xor
addb
sbbl
enter
push
cs
push
xchg
rorb
dec
lock
cmp
adc
ret
pop
cmp
jmp
push
or
cmpsb
icebp
cld
add
pop
or
xor
push
push
dec
repnz
push
bound
dec
clc
icebp
lret
icebp
push
add
cli
mov
dec
outsl
inc
push
popa
mov
lahf
cmp
movq
testb
and
push
js
sahf
cmc
mov
or
add
and
mov
xor
lods
or
incl
repnz
push
fadd
sbb
pop
inc
adc
shrb
inc
jae
lods
sarl
mov
jbe
enter
add
and
jmp
inc
xchg
in
pcmpeqd
add
xchg
je
je
cmpsl
int
data16
push
std
push
cltd
jmp
outsl
cwtl
nop
imul
cmpl
pop
jbe
mov
int
xchg
push
xchg
jmp
and
cwtl
push
lea
inc
push
aad
imul
fsubl
mov
dec
sbb
shrb
hlt
aaa
out
pushl
or
adc
push
popf
fwait
push
inc
push
pop
iret
or
mov
inc
movb
or
gs
cmp
push
outsl
mov
pop
dec
dec
icebp
loope
cld
add
insl
jne
je
inc
cltd
js
int
subb
shlb
adc
sbb
push
push
push
lcall
or
aaa
jae
push
cmp
jl
mov
jg
pop
dec
clc
inc
cmp
fisttpl
pop
push
xorb
jne
fcomps
test
in
xor
shrl
lret
test
out
mov
ss
lods
and
call
xchg
into
jl
cmp
hlt
popa
test
je
and
xor
jmp
and
xor
lret
cmp
jnp
jae
jl
pop
add
push
in
sbb
sub
add
loop
add
lret
fidivrs
sub
fmuls
aam
pop
sub
popa
inc
inc
add
xchg
cmpl
or
in
int
xor
in
loopne
popf
add
dec
hlt
loopne
clc
mov
in
call
add
jg
mov
lcall
pop
push
aas
inc
sbb
sub
in
push
or
lock
ds
jle
lock
push
jmp
cmp
sbb
inc
pusha
movb
out
insl
sbb
add
push
fwait
clc
aas
jg
loop
lds
lods
pop
leave
data16
jmp
jbe
sbb
add
dec
mov
test
out
mov
movl
inc
rolb
andb
and
bound
mov
stc
in
push
data16
push
popa
add
rclb
xor
popa
andl
pop
scas
bound
enter
shlb
sahf
imul
lcall
shl
or
cmp
repnz
or
push
adc
pop
xchg
sub
adc
das
xor
add
cmpsb
movb
std
js
fs
cwtl
mov
push
fwait
je
les
or
out
jnp
movsb
push
sub
xor
mov
jle
inc
mov
mov
outsl
sti
add
inc
and
sub
mov
push
dec
bound
es
xchg
push
aam
mov
les
xchg
fs
push
sub
fs
lea
and
or
inc
popa
sbb
or
mov
or
and
les
loopne
or
jne
pusha
push
adc
mov
aaa
pusha
insl
pusha
push
dec
cmp
pop
test
cmp
popa
out
fs
stc
mov
je
sub
or
iret
repz
xor
xor
inc
inc
and
ret
sub
dec
sbb
insl
adc
cmp
xchg
popf
rolb
xor
mov
or
push
or
das
xor
pop
xor
mov
mov
push
adc
add
dec
movsb
sub
push
mov
mov
and
cmpl
ja
clc
jne
mov
push
adc
or
lahf
popf
cmc
jl
movl
pop
sbb
mov
dec
push
in
addl
xor
shll
mov
mov
pusha
mov
dec
insb
ret
sbb
or
insb
daa
popw
rclb
mov
jnp
jo
or
adc
inc
cmp
ret
pop
sub
push
and
sub
idivl
insl
cld
pop
cmp
ds
add
pop
es
add
adc
jne
mov
lods
push
inc
pop
pop
add
repnz
or
lret
sbb
adcl
sub
cmp
adc
enter
mov
les
sub
pop
push
insl
sar
jl
sbb
lods
fstpt
ret
aam
rorb
pop
dec
xchg
cmpsl
sbb
call
or
and
dec
sti
daa
lahf
cmp
jne
sub
and
ror
xor
in
rorb
rcl
stc
add
xchg
inc
jge
sbb
iret
jle
jnp
push
mov
mov
xor
lds
sbb
lds
add
jle,pt
xor
imul
sarl
add
mov
add
mov
cmp
adc
add
loop
dec
mov
ror
cmc
and
sub
sbb
xor
sub
cmpsb
or
xchg
cmp
cmp
fs
clc
and
mov
dec
or
push
fs
inc
and
add
and
adc
mov
pop
and
shll
mov
arpl
loopne
pop
and
xchg
pusha
adc
js
sbb
xchg
pop
jle
loope
int3
cmp
in
jmp
lea
ficoms
add
rcrl
cmpsb
pop
int
sub
xchg
pop
ficomps
or
or
daa
sbb
and
pop
loop
je
or
push
pop
or
ja
and
les
sub
jle
pop
call
or
dec
pusha
loopne
inc
mov
cmp
cmp
or
insl
sbb
pop
mov
clc
lea
mov
shrb
outsb
adc
xor
add
adcb
arpl
add
imul
out
cld
xor
mov
xor
and
mov
es
dec
cmp
jge
movb
lea
push
movzbl
add
push
sbb
fldenv
gs
mov
lret
inc
pop
push
js
rep
outsl
inc
lock
add
pop
mov
lea
shlb
repz
xorb
shlb
insl
push
cmp
sbb
rolb
add
orb
push
mov
call
cmp
jle
scas
and
orb
add
mov
sbb
mov
je
and
cmp
loop
pop
sbb
mov
jb
xchg
fsubrs
ja
mov
add
test
sti
sbb
std
xor
adc
jp
push
cmp
and
loopne
add
push
add
cwtl
vprotb
add
xor
pusha
cmp
xor
incl
sbb
mov
in
mov
push
jno
or
inc
add
sub
pop
mov
sbb
cmp
push
mov
aam
jg
rorb
sbb
lods
scas
cmp
add
jl
jecxz
jb
cmp
daa
and
clc
add
cmc
ret
pop
mov
xchg
or
xchg
out
mov
test
mov
pop
mov
push
inc
incl
xorb
cmpb
decl
add
stos
lea
mov
mov
pop
sub
cmp
outsl
es
fdivrs
test
xchg
adc
or
mov
inc
add
sar
jne
rolb
je
jmp
dec
clc
or
add
scas
lea
icebp
sbb
pop
sub
mov
ret
inc
inc
cmpb
dec
ret
outsl
inc
aad
leave
lahf
sarl
inc
cmp
mov
icebp
scas
xchg
jne
or
xchg
lcall
jp
clc
jmp
cmp
push
cmp
cmpsb
mov
cmp
mov
push
mov
in
outsb
inc
cmp
jne
jns
scas
leave
shlb
jmp
sub
or
jne
xchg
mov
adc
push
add
adc
ds
jbe
mov
das
and
push
call
fiaddl
std
jne
mov
mov
sub
or
loope
icebp
in
add
add
shufps
pop
jmp
xor
push
jge
mov
sbb
ficompl
jmp
mov
mov
add
mov
adc
or
mov
xchg
adc
iret
in
sub
jb
fdivrs
leave
test
and
pop
std
adc
pop
test
mov
or
lods
mov
ret
or
push
sbb
and
jecxz
subl
int
mov
cmp
jb
dec
xor
xchg
flds
jle
mov
insb
or
js
cmc
icebp
cmp
call
jp
add
out
je
notl
add
jbe
and
push
mov
add
mov
jae
rcrl
mov
popa
scas
movsb
shlb
pop
out
add
jnp
sbb
mov
mov
arpl
mov
cmp
or
imul
ret
mov
subb
std
sub
mov
je
inc
loope
js
repnz
xchg
pop
push
frstor
test
ret
mov
cli
movsb
sub
shl
or
jge
in
nop
or
jne
pop
mov
add
add
imul
cmp
dec
fwait
mov
xchg
mov
or
xor
xor
pusha
cmp
pop
adc
or
jne
inc
or
dec
pop
adc
arpl
dec
xor
mov
shrb
shr
inc
sti
pop
xor
mov
fcmovnbe
ljmp
div
cmpsl
mov
sbb
mul
add
jb
cmp
or
cmp
add
xor
adc
roll
fisubrs
gs
jmp
faddl
loope
aas
pop
pop
inc
and
adc
daa
mov
ja
std
inc
fcoms
ret
add
mov
lods
pushl
xor
add
in
xor
dec
cmp
sbb
or
roll
and
out
jne
shrl
adc
inc
cld
cmp
je
pop
out
cmp
je
dec
sbb
add
out
and
fsubl
mov
xor
aam
xchg
pop
cmp
xchg
data16
or
cld
lea
jns
call
mov
inc
push
cmp
mov
js
xor
leave
pop
adc
sub
sbb
movsb
jg
movsl
dec
cmp
pop
inc
cmp
jne
jl
std
add
mov
mov
cmp
dec
aam
dec
in
js
pop
aam
mov
sbb
xchg
and
push
and
pop
and
or
rorb
repz
ret
adcb
inc
sbb
sub
sub
sbb
in
mov
pusha
pusha
test
enter
add
sub
inc
ss
mov
mov
mov
sti
cmp
add
sub
stos
and
jge
scas
lock
jp
and
push
lcall
pop
loopne
scas
jbe
movsl
icebp
orb
inc
add
push
les
mov
add
jmp
xor
sbb
pusha
adc
testl
xchg
mov
sarl
fwait
pop
or
aad
jecxz
movsb
xchg
dec
mov
dec
jmp
cmp
enter
jae
push
into
pop
sbb
add
inc
aam
cmp
lock
push
lea
push
push
ss
ret
and
jmp
imul
sbb
mov
cmp
imul
sbb
xor
popa
ret
add
sub
dec
in
dec
and
fildl
cmp
xchg
ss
fdivrl
sbb
inc
movsb
bound
jg
ret
inc
sahf
xchg
scas
mov
mov
loopne
dec
aam
outsb
add
push
add
adc
ds
xchg
sbb
jns
pop
pop
pop
jle
jmp
std
jmp
cld
mov
jns
push
sbb
data16
jnp
sbb
aas
shr
mov
cmpsb
sbb
in
mov
flds
fsubs
test
test
mov
jno
pop
fucompp
insl
adc
inc
add
adc
pcmpgtb
ret
mov
mov
setns
js
jl
gs
data16
cs
dec
or
test
sub
movsb
push
jo
inc
xchg
add
jge
add
or
and
or
cmp
or
or
push
pop
aad
jecxz
rcrb
push
or
push
je
inc
add
lea
push
push
sub
add
mov
push
outsl
call
stos
mov
lds
xor
jmp
stc
add
sub
ret
or
add
inc
cmpl
and
popa
loopne
jge
mov
mov
adc
sub
dec
pop
or
dec
jg
pop
je
push
adc
loopne
mov
imul
sahf
testb
mov
and
ret
inc
rclb
jmp
call
push
jmp
mov
cmpsl
aad
push
push
cmp
ret
incl
jmp
lea
xchg
adcb
mov
les
decl
fsub
pop
lods
inc
push
int
icebp
ljmp
fiaddl
mov
lcall
iret
mov
hlt
imul
insb
xor
cli
xchg
cmp
movsb
arpl
add
movsb
sarb
mov
shrb
add
push
mov
xchg
mov
add
mov
movsb
push
or
hlt
clc
cs
inc
imul
notl
add
inc
jl
and
pusha
test
loopne
jg
cltd
ret
add
jae
push
rcll
xchg
clc
add
and
add
xchg
inc
mov
sbb
add
xchg
test
les
xchg
ffreep
sub
cmp
add
push
mov
sbb
push
add
or
add
sub
andb
gs
add
sub
add
or
out
lea
add
pop
test
mov
mov
fucomip
inc
inc
rolb
rolb
cwtl
loopne
pop
rclb
ffreep
push
fs
dec
je
or
outsb
xchg
setbe
insb
cltd
cmp
sbb
dec
lds
adc
sar
jg
and
jne
cmpb
jne
inc
inc
push
cmpb
cmp
xor
cmp
jno
ja
imul
outsl
mov
test
js
pop
cltd
ret
nop
stos
mov
adc
lcall
add
jl
xor
jne
mov
lahf
mov
inc
lret
les
push
jg
or
xchg
or
adc
call
loope
sub
ja
decl
pop
stos
repnz
xor
sbb
dec
or
shl
test
xor
adc
in
and
xchg
inc
mov
mov
test
add
icebp
pusha
inc
or
pop
xchg
adcb
ret
ret
and
enter
push
fbstp
stc
push
rolb
orb
xchg
pop
xchg
cltd
mov
test
pusha
jge
ret
pushf
jmp
std
xchg
or
ficomps
loop
mov
mov
les
add
add
js
add
or
sub
ror
jge
test
mov
mov
push
fdivs
sbb
js
sub
clc
xchg
je
testb
sbb
loope
mov
adc
adc
jl
push
fcoms
jne
ja
mov
inc
cmp
jle
jbe
mov
push
mov
and
scas
adc
imul
push
lret
rcrb
test
cmp
aaa
test
mov
mov
add
pop
and
xchg
or
out
push
int
push
pop
push
fcoml
mov
sub
push
sbb
inc
pop
jns
ret
and
pop
movsl
call
orb
cmp
cmp
push
arpl
inc
sbbb
clc
mov
inc
dec
adcw
fiadds
inc
inc
sbb
sub
pop
stos
xchg
xchg
mov
orb
inc
pop
scas
inc
ret
pop
rcrb
xor
test
pop
mov
icebp
mov
jnp
xchg
popa
dec
ljmp
mov
std
mov
aam
push
or
flds
or
mov
cmp
xchg
pop
movsl
inc
mov
jge
inc
sbb
cltd
jmp
int
adc
or
jne
xor
ss
ret
adc
or
fsubrs
je
clc
adc
neg
pushf
les
cli
icebp
loop
add
add
jno
push
or
outsl
dec
cmp
ret
or
lods
adc
movl
and
adc
mov
xchg
push
ss
aam
inc
inc
cli
std
pxor
push
dec
jmp
lea
outsl
inc
popa
sub
cwtl
roll
inc
test
shrb
add
adc
outsl
inc
fwait
jne,pt
cmp
pushf
mov
lea
test
das
fucomip
sub
sub
or
je
and
adc
aam
test
jne
adc
adc
add
mov
inc
xor
les
jns
daa
movsb
cmp
dec
mov
pop
or
movb
xchg
push
xor
or
imul
or
jle
enter
add
pop
push
mov
add
jge
cmp
inc
sub
sub
mov
roll
imul
and
dec
enter
out
je
jecxz
lods
xchg
arpl
jns
dec
mull
pop
mov
mov
adc
clc
lods
xor
das
jns
sbb
mov
sti
nop
inc
add
pop
mov
sub
push
pop
cmp
adc
dec
in
sub
mov
mov
mov
push
push
mov
dec
mov
and
add
dec
fmul
xchg
or
imul
out
mov
std
add
add
xor
popa
push
rol
shlb
popa
sbb
xor
fdivs
pop
pop
mov
cld
inc
sub
cmp
sbb
sbb
rclb
jnp
dec
and
leave
jnp
sbbl
xor
and
mov
adc
sub
push
push
inc
pop
int3
push
js
push
imul
sub
int3
js
sub
sbb
cmp
push
into
ret
rcll
daa
outsl
lock
cli
mov
pop
push
movsl
sbb
sbb
loopne
lds
incl
xor
xor
mov
mov
mov
pop
cmp
lcall
or
leave
xor
xor
repz
adc
adcb
cmp
scas
rcll
push
or
jle
push
ja
loopne
hlt
and
popf
rolb
sbb
sbb
inc
and
mov
xchg
ljmp
or
and
xchg
ret
mov
cmp
cmpsb
mov
pusha
or
push
pop
cltd
fxch
int
mov
loop
dec
adc
mov
in
sub
lods
or
push
add
lea
fadds
outsl
push
inc
sbb
add
jne
cmpsb
or
mov
cmp
sbb
pushf
mov
sbbl
xor
mov
and
pusha
pushf
cltd
testl
repnz
insb
in
dec
je
pop
or
jb
subl
imul
add
inc
jmp
iret
enter
insl
test
add
and
add
lea
sub
imulb
sti
cltd
mov
sub
inc
sbb
fsts
scas
arpl
scas
test
repz
add
sbb
dec
clc
stos
fiaddl
pop
jmp
pop
and
or
je
pop
jle
push
and
or
dec
outsl
je
js
inc
add
mov
jmp
mov
movsl
sbb
orl
orl
jnp
decb
sti
cmpb
fstpl
sbb
pushf
ret
pop
pop
rcl
adc
insl
lods
jmp
out
xor
xchg
and
pop
jnp
mov
cmp
jns
inc
pop
insl
das
insl
fwait
jmp
mov
and
je
or
xchg
rclb
popa
and
icebp
cmp
cld
dec
mov
lea
icebp
mov
xchg
mov
in
test
fs
jle
iret
sbb
jg
add
cltd
adc
mov
loopne
mov
push
cmp
pusha
inc
adc
sbb
negl
sbb
sub
mull
fildl
jo
jne
mov
inc
jne
mov
js
test
and
add
fmuls
xorl
data16
idivb
movl
push
xor
out
push
inc
lods
cmpsl
mov
xorl
sbb
aam
insl
push
dec
insl
inc
mov
lods
jmp
rcll
xor
or
xchg
adc
inc
push
lret
je
inc
sbb
pop
jns
push
gs
add
or
inc
outsl
jne
and
mov
mov
xchg
push
pusha
les
sbb
or
fisubrs
or
int3
cltd
cmp
mov
add
push
aad
mov
movsbl
faddl
mov
jmp
rcll
cmpsb
add
in
cmpsb
inc
dec
adc
arpl
sbb
add
push
push
ss
jae
adc
add
xlat
fmull
add
sbb
lea
cmp
cmp
xor
push
cltd
imul
into
push
and
sbb
jle
jmp
inc
mov
xor
pop
push
inc
or
aam
inc
add
test
mov
pop
rcr
mov
mov
and
xor
scas
cmpl
inc
cmp
inc
nop
xchg
sub
movsl
outsb
lret
iret
shrl
lock
or
pop
pop
jne
mov
jl
incl
inc
or
jmp
inc
cmp
dec
fwait
inc
mov
std
xchg
add
pop
inc
cmp
jae
mov
jmp
ret
cmp
ja
and
shrl
push
lock
pop
push
clc
pop
add
lcall
adc
lea
xchg
xor
jmp
mov
sub
rorl
xchg
xor
sti
mov
ret
adc
mov
xor
fs
cmp
jne
dec
andb
je
dec
push
rcll
mov
in
xlat
jecxz
mov
pop
jge
add
fwait
lret
decl
jae
jae
or
add
nop
rcll
enter
push
adc
mov
adc
jp
iret
test
xchg
fs
mov
push
pop
das
dec
and
push
repnz
mov
cwtl
dec
mov
cmpsb
popa
pmaxub
xorb
popf
jnp
xor
dec
scas
push
cld
insb
mov
mov
inc
inc
loopne
dec
pop
sub
adc
in
mov
dec
add
adc
sub
xor
cmp
mov
pop
in
sti
pop
je
xor
daa
pop
vmovlpd
push
roll
pop
or
nop
subl
xor
mov
cmp
rcrl
arpl
rolb
add
js
cmpsb
mov
xor
add
inc
or
and
sbb
push
es
mov
or
xchg
push
sub
pushf
sub
and
push
popa
and
adc
xchg
xchg
xchg
imul
lret
cmpsb
loope
ret
shr
test
add
sbb
mov
icebp
pushl
popa
xor
xchg
mov
int
scas
pusha
or
test
lea
inc
inc
push
movsb
roll
push
test
mov
and
or
aam
popf
or
or
les
pop
inc
xchg
inc
rcrl
xor
push
orl
jmp
jmp
jle
pushf
inc
gs
lret
lea
cltd
add
cmpsb
loop
adc
dec
inc
sub
les
lock
jno
imul
or
sbb
adc
neg
imul
mov
jecxz
ret
dec
je
mov
jge
shll
add
ds
rcll
pop
sub
in
sbb
sub
inc
sbb
xchg
sub
incl
popf
jge
je
negl
es
jo
movsl
jb
call
xchg
negl
cmp
je
cmpsl
jnp
dec
sarb
pop
xor
insl
jae
jp
fs
and
jno
aaa
faddp
adc
add
push
or
in
push
popf
ret
inc
shrl
je
addr16
aaa
xchg
inc
rclb
repz
add
aas
mov
or
jns
ret
push
repz
mov
inc
fldt
daa
xor
pusha
lds
insb
or
xchg
jne
sub
sbb
dec
in
mov
pushf
xchg
xor
add
cmp
jmp
inc
sbb
out
push
icebp
rcrb
sub
lea
cli
ficoms
sbb
or
cmc
pop
dec
pushf
dec
fists
mov
adc
inc
test
jg
fdivp
or
sub
or
or
inc
shlb
jg
aas
lea
je
cmp
jne
dec
mov
inc
inc
sub
xchg
fldl
fcompl
popf
or
push
push
mov
shrb
adc
pop
add
sbb
fs
add
ret
xor
inc
mov
pop
es
add
push
sbb
sbb
adc
enter
call
lock
setg
jg
sub
ret
mov
pop
xchg
mov
xorl
movb
mov
aam
adc
push
inc
xor
mov
cmp
push
push
aam
xchg
add
push
cmp
lds
ficomps
mov
xchg
inc
add
mov
jns
or
stos
add
mov
aam
or
out
dec
cmp
or
and
pop
pop
movsl
sub
int3
inc
inc
xchg
in
and
mov
fldl
int
push
pop
or
or
or
loopne
adcl
ret
cmp
sub
sti
mov
xchg
orl
test
push
add
pop
pop
ret
ret
loopne
dec
inc
push
icebp
add
push
mov
cmc
movb
mov
xchg
cmp
bound
jg
cltd
ja
jge
mov
xor
or
cmp
push
push
sub
std
jbe
inc
push
shl
jae
neg
enter
ret
sarl
and
adc
push
push
pop
push
prefetch
loope
daa
fsubr
or
sti
sbb
roll
cli
cwtl
shlb
sbb
sti
rcll
ss
inc
dec
push
fsubs
rorb
cmp
push
push
leave
clc
cld
push
andl
jge
cli
inc
push
jl
lahf
push
mov
xor
in
inc
or
mov
sub
inc
jno
sbb
push
xchg
cmp
lods
xor
cmp
shll
push
test
dec
fsts
dec
xor
xchg
popa
cltd
pop
pop
inc
repz
aaa
insl
sub
dec
sbb
lret
pusha
mov
int3
cmp
mov
into
repz
fiadds
dec
dec
fldl
clc
adc
sti
incb
fldl
fdivl
fmull
insl
lock
and
cmp
add
mull
addb
xor
adcb
rcrl
and
mov
sar
incb
mov
and
in
sub
lds
sbb
pop
test
bound
and
iret
test
imul
pop
clc
add
push
cmp
out
test
inc
mov
add
xor
lahf
dec
pop
adc
push
add
mov
fcomps
fsubrs
push
or
lea
daa
ljmp
xor
in
cmp
rolb
or
and
xchg
or
in
pop
pushf
push
mov
and
cmp
into
jg
dec
adc
inc
adc
sub
aaa
mov
or
or
data16
sti
jnp
push
sub
cmp
push
pop
push
mov
leave
and
cmp
cmp
jne
jmp
or
movsl
inc
sub
pop
sub
daa
push
push
or
and
inc
iret
lar
packsswb
adc
test
mov
xlat
pop
data16
cwtl
add
push
pmaddwd
add
cmp
jecxz
inc
or
cwtl
popf
rolb
lret
add
adc
mov
leave
mov
stos
loopne
xchg
or
cmp
pop
xadd
jae
ds
pop
pop
call
push
xor
ret
outsl
sub
frstor
sbb
dec
clc
ljmp
lret
push
cmp
sbb
popa
lods
fwait
sbb
imul
out
popf
cwtl
inc
jmp
and
sahf
xor
mov
lahf
adc
xchg
loop
outsl
ss
les
test
add
pusha
cmp
jo
lock
pop
jne
rcrb
clc
ds
jmp
cmp
jge
out
xor
loopne
pop
mov
push
jbe
shlb
and
xchg
fnsave
or
mov
enter
mov
ljmp
dec
pusha
ds
dec
adc
fdivrs
mov
sar
xor
shl
loope
xchg
add
sub
jg
orl
and
cli
cmp
rorl
adc
pop
mov
push
aas
hlt
add
aas
ret
inc
outsl
pop
sbb
cmp
sub
rolb
sub
in
push
inc
pop
pop
jnp
mov
cmp
add
in
push
mov
fnstsw
inc
sub
jno
rorb
or
mov
stos
cmp
pop
in
and
std
jle
jb
or
pop
dec
mov
add
or
inc
cltd
dec
mov
int
movsb
push
bswap
ja
pop
sub
insl
leave
or
push
jecxz
push
mov
popf
or
pop
sar
cmc
and
push
lds
es
pop
addb
cs
sbb
xor
popf
ret
inc
addl
adc
pop
mov
lahf
mov
ret
jmp
rcrl
test
ss
sbb
clc
inc
mov
jne
add
inc
cltd
inc
nopl
push
sbb
in
daa
add
inc
subl
lock
test
sub
fucomip
mull
cmp
push
jae
sub
popa
addr16
clc
scas
dec
jl
scas
fdivrp
sti
loopne
add
aaa
sbb
push
jecxz
sub
inc
test
sub
dec
xchg
inc
lret
clc
inc
cmp
jb
clc
in
or
test
js
test
adc
sub
mov
sarl
dec
bound
and
xor
ret
and
mov
out
sahf
pushf
mov
mov
push
mov
sbbb
xor
xchg
cmp
jmp
cmpb
or
imul
xchg
rcl
and
xor
cld
arpl
lock
or
inc
inc
add
inc
sbb
add
sbb
sbb
sub
lcall
add
cmc
add
inc
or
add
sub
xor
loop
add
or
addl
hlt
jbe
movsl
icebp
push
dec
pusha
sub
fs
inc
xor
xor
test
rclb
aas
push
test
stc
lock
sar
cmp
jecxz
incb
pushf
mov
loope
cmp
pop
subl
cmpl
mov
inc
pusha
mov
lds
or
jbe
dec
pop
xor
movups
imul
or
sub
or
cmp
sbb
sbb
je
cmp
aas
icebp
push
sbb
gs
icebp
into
add
js
jmp
mov
cmp
cmp
inc
fcmovb
push
xchg
push
jg
je
sub
je
or
je
push
repz
mov
adc
xor
and
jne
push
adc
adc
add
jns
loope,pn
cmc
pop
loope
jne
pop
add
gs
arpl
or
loope
add
cmp
bound
ud2
push
shl
mov
jne
pop
dec
inc
loope
add
inc
sub
pop
jle
clc
jne
clc
xchg
cmp
and
aaa
shlb
in
fsubr
sbb
into
push
or
lret
test
inc
pop
cmp
push
stos
xchg
orb
xchg
xor
mov
jge
rol
pop
fs
add
or
out
adc
or
outsb
nop
jle
push
pop
loope
sbb
push
sbb
adc
rol
push
xchg
pop
jle
or
aaa
rclb
dec
test
jnp
add
outsb
jb
ret
inc
dec
insb
mov
popa
mov
cmp
and
fiaddl
filds
pop
push
mov
jecxz
mov
aaa
cmp
fldcw
imul
sbb
mov
push
mov
lret
mov
or
decb
sbb
dec
adc
movsl
lahf
push
sbb
dec
jl
add
cmp
arpl
mov
adc
xor
popf
xlat
sbb
inc
stos
js
mov
jae
fptan
add
sbb
inc
sbb
inc
mov
ds
and
je
sbb
pop
or
rorl
mov
xchg
lcall
lods
cmpsb
mov
cmpsl
lods
push
lods
add
push
and
popa
pop
nop
add
mov
cmp
aas
cs
mov
jmp
cmpb
je
cmp
and
mov
call
add
jo
mov
sub
push
cmp
cmovg
lahf
xor
iret
test
ljmp
pop
cmp
push
mov
lods
add
lock
scas
insl
and
dec
add
std
jmp
lds
pop
dec
mov
std
frstor
insl
rorl
or
adc
and
jno
dec
daa
imul
dec
stc
and
popa
jnp
cmpsl
add
shlb
jecxz
daa
ret
jecxz
rorb
adc
inc
out
xor
ret
adc
rclb
jmp
sub
mov
mov
movsl
or
rclb
inc
repz
inc
aaa
lock
stc
mov
dec
push
movb
xor
mov
jmp
cmp
jnp
inc
or
mov
popa
push
inc
repz
jnp
pop
add
je
enter
jb
mov
je
add
or
jne
inc
stos
jo
mov
enter
mov
fwait
xchg
les
adc
nop
xor
mov
aad
test
mov
test
pop
sub
sti
add
bnd
mov
and
in
mov
pushl
out
xlat
cmp
pusha
pop
ds
int
mov
jbe
push
cwtl
mov
lea
lea
nop
cmp
dec
jae
mov
decl
adc
cli
or
inc
test
or
adc
adcl
jl
or
sub
inc
adcb
enter
add
je
test
jno
and
sar
dec
in
clc
repz
test
jmp
jg
cmpl
shll
jge
mov
cmp
jne
push
mov
ret
imul
fisttpl
inc
pushf
notb
mov
mov
mov
sub
add
jecxz
jne
cwtl
fs
rcrl
mov
les
inc
js
cmp
cmp
push
mov
add
test
stos
add
xchg
xor
fbld
push
adc
adc
pusha
cmp
lock
mov
sub
jmp
cld
push
push
mov
std
adc
popa
cmp
adc
dec
sti
mov
cmp
dec
sub
sbb
or
add
neg
mov
dec
adc
fxch
and
je
or
popa
outsb
inc
xchg
test
js
dec
push
fisttps
add
clc
adc
shl
mov
or
and
adc
xchg
and
fbld
add
lods
adc
lods
hlt
stc
cld
or
dec
ljmp
xchg
xchg
sub
dec
adc
push
or
jge
flds
pop
pop
cltd
mov
mulb
jbe
sbb
cmp
clc
nop
xor
fs
ljmp
sahf
and
cmp
aas
lea
pop
test
xchg
pop
push
or
dec
push
sub
adc
dec
add
call
sub
sub
test
cmp
ss
push
push
outsl
push
or
movsl
mov
dec
fs
fwait
mov
shll
jns
add
or
inc
sub
mov
mov
push
adc
ljmp
outsb
add
xchg
shlb
jmp
fmull
cmp
andnps
or
lcall
add
aaa
mov
xor
es
add
sbb
loop
sub
push
subl
popa
or
cmp
scas
shlb
insb
in
pop
sub
scas
inc
mov
sti
push
dec
arpl
loopne
les
add
andl
daa
lret
push
cld
ds
aaa
push
jle
andl
cmp
add
sub
jl
fimull
or
pop
adc
repz
fs
nop
and
push
xchg
test
lret
jae
xchg
test
lea
sub
andb
xchg
pop
push
int
xchg
pop
mov
add
loop
xchg
mov
sbb
pop
mov
or
sbb
and
in
sub
movsl
mov
out
test
xor
jl
add
push
pop
and
dec
jecxz
out
test
cmp
adc
ret
out
mov
xchg
stc
or
mov
fldcw
add
jmp
push
into
push
out
mov
fisttpll
push
mov
mov
and
repz
jmp
push
adc
xor
js
sti
in
add
ret
jne
ret
mov
es
clc
jne
clc
je
jle
test
sub
push
jl
mov
cmp
push
pop
add
sbbl
je
mov
xor
jne
ljmp
call
sbb
add
insb
cmp
pop
xchg
xor
lock
in
sbb
int3
push
mov
cmc
leave
and
mov
mov
cmp
xor
rolb
shll
push
bound
lds
inc
xchg
pop
loopne
inc
testb
mov
fisttpl
mov
xor
mov
and
or
jne
cmp
movb
xor
mov
sub
dec
jmp
pusha
lods
xorl
sbbl
mov
sbb
inc
inc
inc
pop
je
cmp
sub
pop
push
xchg
jo
lods
inc
sub
inc
fs
mov
ds
shr
cmovp
pop
pop
incl
dec
jne
out
dec
push
add
dec
ds
cmp
je
movsl
pop
push
jo
movl
into
inc
gs
jle
add
daa
xor
testb
sub
fdivl
xor
ljmp
mov
subl
pop
aas
and
jne
mov
sbb
add
mov
or
xor
xor
mov
mov
popf
clc
xchg
incb
stc
mov
add
mov
jle
or
stos
and
fs
dec
xchg
outsl
and
mov
or
pusha
daa
or
mov
je
aam
adc
xchg
push
pop
jne
xlat
pop
jecxz
pop
outsb
or
inc
sub
sub
mov
mov
or
add
cmpsb
jge
or
fnstsw
pop
jmp
lds
sbb
or
rol
pushf
push
add
push
sar
in
rol
fistl
pushl
mov
jno
push
jge
mov
je
cmp
dec
and
dec
and
daa
ret
dec
cwtl
xlat
mov
pop
lods
fdivrs
je
push
jmp
sub
adc
sbb
rcrb
aad
out
popf
sti
or
icebp
inc
xlat
push
sbb
orb
xchg
or
mov
xlat
and
loopne
inc
addb
mov
mov
sbb
add
inc
divl
pop
and
jle
add
mov
dec
mov
xchg
scas
roll
add
xchg
sarl
inc
sbbb
ficomps
sbb
data16
subl
arpl
inc
cmp
test
clc
jl
fbld
adc
in
mov
lahf
adc
adc
push
push
push
add
mov
lea
lds
push
aam
cmp
inc
sbb
bound
jno
inc
mov
dec
push
cmp
insl
arpl
jmp
and
jle
inc
jmp
pusha
push
inc
add
movsl
mov
in
dec
add
inc
mov
xchg
fildll
fstpt
jne
adc
jae
mov
inc
push
negb
nop
jns
add
cmc
rorl
shl
call
je
push
sbb
push
orb
lea
add
or
test
test
add
mov
xor
cmp
arpl
popl
or
into
pop
orl
jae
adc
jp
push
add
jnp
in
loop
add
aad
xchg
cmp
es
and
or
push
push
shlb
jne
mov
xor
rcr
out
arpl
fnstcw
popf
adc
shl
scas
out
jbe
and
insl
aad
stos
test
jnp
addl
push
bound
sbb
mov
push
cmp
mov
or
sbb
sbb
mov
add
add
test
inc
push
dec
lret
dec
and
lahf
stos
bound
xor
je
mov
or
scas
cmp
jg
out
or
out
cmp
enter
popa
push
cmpsl
pop
or
mov
lahf
mov
out
mov
mov
out
fists
add
xor
pop
mov
fcmovnu
push
jnp
sub
out
out
stos
dec
or
sub
sbb
or
push
push
iret
test
cmp
mov
push
mov
add
shr
testb
or
jb
mov
enter
enter
xor
js
sbb
push
pusha
rcrl
test
pusha
add
scas
jmp
jnp
nop
cltd
jge
mov
sbb
cmc
loopne
or
jge
lds
shlb
xchg
mov
nop
or
cmp
popf
aam
and
rol
and
cld
jbe
push
pop
jne
and
or
mov
incl
test
push
sbb
pop
sahf
clc
daa
xchg
xor
call
push
aam
pushl
mov
std
cmp
je
sub
cmp
sbb
mov
inc
sbb
add
add
xchg
sbb
cmp
sbb
pop
rorb
dec
adc
daa
and
jno
adc
repnz
neg
insl
arpl
popf
dec
repz
incl
jecxz
jnp
inc
pushl
popf
jmp
and
jne
push
cmp
pusha
mov
sbb
cmp
sbb
lock
xchg
mov
cmpl
insb
pop
sub
sbb
and
sub
lock
inc
push
stc
xor
or
jo
cmp
imul
add
sbb
enter
pop
or
add
cmp
fs
or
sbb
or
enter
xchg
or
mov
enter
jle
or
jb
or
jbe
inc
or
push
pop
pop
pop
push
jb
mov
and
inc
add
cmp
mov
mov
dec
adc
mov
jge
and
pop
jb
mov
adc
pop
mov
sbb
jmp
or
xor
popa
lods
jg
jo
mov
data16
add
cs
cmp
add
jae
pop
sbb
push
or
mov
mov
adc
jns
sarb
xor
aam
and
adc
push
jmp
and
mov
pushf
push
xchg
xor
push
gs
rolb
mov
sbb
fidivrs
mov
adc
adc
stos
decl
adc
imul
mov
psubsw
test
outsl
mov
out
sub
negl
js
call
je
test
lsl
int
mov
jg
popf
and
jle
mov
test
je
add
jne
mov
push
mov
les
fucomip
stos
push
mov
ss
lea
movsl
and
or
xor
jne
push
loopne
push
push
push
sbb
jne
jns
or
xor
call
aaa
les
xor
and
js
fimuls
pushf
pop
cltd
sbb
test
mov
or
mov
mov
mov
pop
out
mov
mov
out
jb
je
mov
test
mov
int
aas
dec
cmp
mov
mov
mov
test
or
cli
mov
popf
sbb
cmc
movsl
cltd
or
jbe
and
fcomps
xor
fmul
add
push
addr16
mov
or
je
int
mov
cmp
inc
adc
mov
pop
test
jl
sub
cs
dec
add
gs
sbb
test
or
aaa
add
push
jns
lods
sarl
test
mov
int
sbb
add
inc
test
dec
mov
ja
flds
and
jnp
push
into
xor
or
cs
out
add
sub
orb
gs
or
mov
push
and
push
dec
fcoml
ret
movb
push
mov
add
or
inc
cli
fidivs
leave
adc
outsb
or
push
push
hlt
xor
cmp
adc
pop
int3
pop
sysenter
pusha
adc
leave
js
les
ret
mov
cld
adc
icebp
push
cld
xor
loope
or
cmp
and
aad
enter
cmp
pusha
sub
mov
adc
lock
into
cmc
dec
xchg
enter
push
adc
mov
cmpsb
insb
int
ds
pop
push
ljmp
ljmp
or
test
xor
mov
jne
push
fdivrs
cmp
pusha
push
test
or
subl
add
pop
mov
je
xor
test
stos
xorl
mov
push
add
addb
add
aaa
pop
sti
aas
xor
dec
daa
call
int3
inc
jge
adc
add
imul
shlb
mov
cmp
adc
cmp
rcll
adc
inc
or
dec
or
jnp
pop
ret
xchg
jmp
sbb
dec
mov
addl
cmp
sbb
inc
jmp
jb
push
test
jnp
dec
jecxz
shrl
sub
clc
rclb
and
arpl
jne
bound
inc
jl
fnstenv
mov
jmp
and
lods
ret
pop
jno
sub
push
or
xchg
jmp
je
scas
adc
inc
je
sbb
adc
jnp
inc
mov
rorl
xchg
mov
invd
or
or
enter
ss
sbb
and
xor
daa
xor
sbb
mov
pop
inc
and
sbb
dec
push
push
sbb
pop
add
inc
push
fs
sbb
js
dec
cwtl
fs
movsb
sbb
test
in
xchg
cwtl
cs
movsb
test
ss
imulb
mov
loope
inc
sbb
add
inc
add
popa
dec
popf
aaa
inc
add
xor
int
inc
ja
aaa
jo
xor
xchg
push
mov
pop
or
enter
out
adc
adc
nop
or
adc
sbb
mov
sbb
cmp
inc
push
mov
and
sahf
inc
cs
and
push
and
inc
mov
adc
pop
push
ljmp
imul
adc
bts
jmp
leave
ljmp
push
xchg
cs
mov
xor
cmpl
pop
dec
push
pop
and
aam
adc
das
fnstenv
test
ljmp
dec
adc
daa
jp
push
mov
mov
fwait
adc
push
jne
ljmp
and
je
dec
inc
aaa
sub
jne
push
xlat
adc
cltd
aaa
jbe
push
mov
cwtl
sub
dec
je
insb
mulb
fimuls
lahf
in
inc
add
push
add
mov
xchg
sub
or
rcll
ja
sbb
nop
sub
stos
outsb
imul
jmp
cmp
out
pop
xor
int3
add
mov
xor
icebp
or
or
pop
push
dec
jae
jl
ret
push
je
rcll
js
sbb
cmp
xor
cmc
orl
inc
cmp
push
pop
cwtl
lcall
dec
loope
push
adc
je
in
das
lret
or
inc
ret
mov
mov
mov
movsb
dec
push
cli
and
cs
ret
jecxz
adcl
mov
je
inc
cmpsl
lock
adc
shrb
xorl
lods
data16
icebp
cmp
jne
sbbl
cmp
jbe
push
sbb
mov
add
and
sbb
and
rorl
push
pop
push
lods
iret
inc
sbb
or
mov
pop
mov
fwait
pop
sbb
or
jns
pop
xchg
sbb
mov
scas
pop
fmuls
push
push
rclb
dec
add
mov
mov
push
cmpsl
inc
cld
adc
jg
xchg
sub
pop
cmp
xchg
fwait
loopne
aaa
pop
or
push
jno
and
dec
arpl
pop
add
repnz
inc
or
adc
or
xchg
fld
xchg
outsb
or
ret
jb
or
push
jns
adc
mov
push
xchg
jmp
sbb
dec
std
ret
gs
xchg
cmp
inc
jl
pop
pusha
addl
les
jae
sub
mov
and
pop
add
or
cmp
shl
rcl
adc
or
fmuls
test
popa
testl
jl
andb
js
mov
or
mov
push
jnp
push
mov
lock
or
sbb
cmp
rorl
push
in
push
mov
sub
xchg
mov
adc
mov
dec
stos
insl
sub
popf
pushf
mov
addb
cwtl
adc
js
mov
xor
ja
pop
push
xchg
jb
mov
loopne
out
ret
bound
and
cmp
jge
lcall
add
insl
rep
xor
jl
inc
pop
sub
rol
inc
pop
outsb
xor
cmp
pop
call
movsb
rcrl
lock
add
lock
cltd
hlt
pop
rolb
lock
not
dec
dec
loopne
push
xor
inc
and
int3
xor
dec
add
and
jne
shl
inc
inc
pop
jne
mov
fildl
sbb
jnp
cmp
adc
or
add
or
mov
pop
jge
lahf
fwait
or
or
or
stc
incl
jno
dec
push
int3
dec
add
jl
jne
adc
aas
or
add
jle
push
jecxz
aaa
inc
push
jne
xor
lods
insl
je
imul
push
jge
stos
add
add
lret
pop
pop
ds
or
enter
je
in
inc
push
sub
loopne
lret
jge
shll
decb
adc
clc
jg
sub
mov
je
xor
adc
xorb
cmpsb
inc
inc
adcb
test
ds
jl
mov
dec
or
inc
mov
jo
mov
push
push
andb
ss
cmp
jecxz
xchg
loop
jnp
adc
add
loope
adc
sub
or
or
cmp
data16
add
jle
fisttpl
and
mov
scas
push
jl
mov
xchg
std
sub
adc
call
inc
int3
filds
xor
adc
pop
lret
push
shlb
inc
mov
iret
jns
imul
dec
or
pusha
and
jae
ret
inc
clc
cmc
add
push
xor
pop
mov
addb
repnz
jp
lods
mov
jmp
jl
cmpb
pop
call
aaa
mov
cmp
xor
adc
sub
dec
push
xchg
adc
xor
sub
imul
inc
push
out
jg
inc
outsl
add
movsl
inc
mov
add
mov
movaps
or
dec
cmp
adc
add
sbb
fwait
mov
jno
loopne
sbb
and
adc
rorl
mov
mov
jmp
dec
add
jg
adc
or
shl
test
mov
add
andb
loop
jg
mul
pop
or
and
mov
mov
je
movsb
fidivrl
mov
leave
xchg
test
int3
jb
fs
imul
adc
movsl
movsw
and
cmp
aad
jbe
jno
mull
xchg
inc
mov
mov
ss
fdivs
push
sub
loope
adc
mov
add
jns
pop
pop
sbb
adc
add
enter
xchg
or
adc
and
push
add
movsl
outsl
rcrl
xchg
add
sub
cmp
outsb
and
add
movb
dec
adc
or
or
lcall
pop
xlat
je
cmp
sub
sbb
outsb
test
pop
push
mov
in
mov
inc
paddb
or
add
adc
and
ret
lock
push
inc
mov
mov
mov
or
fcmove
jne
or
push
jmp
or
inc
sbb
in
pop
or
jne
or
or
lods
cmp
add
test
sbbl
mov
int
and
or
xor
or
idiv
unpckhps
mov
dec
dec
push
jecxz
cwtl
or
in
add
pop
cmpl
test
xor
fbld
sbb
sti
add
test
mov
or
mov
aam
cmc
jmp
neg
insb
pop
xor
inc
pop
pop
push
or
xchg
push
ret
mov
push
enter
pop
push
cmp
add
xor
jo
in
mov
enter
jns
push
push
push
orl
std
inc
jae
divb
add
in
jo
mov
test
inc
lods
fisubrl
mov
iret
xorb
cmp
lock
and
inc
cltd
js
xchg
push
sub
add
stc
mov
adc
pop
outsb
mov
sbb
fdivl
add
jge
inc
mov
data16
or
push
in
ret
cmp
adc
scas
add
outsb
sbb
enter
loopne
je
xchg
and
leave
incl
mov
inc
jge
jb
inc
test
fiaddl
sahf
or
add
lds
xchg
add
popf
dec
enter
sub
dec
fs
dec
rcll
or
rcll
mov
sub
dec
movsb
popa
loopne
aam
pop
mov
sub
cltd
push
adc
pushf
adc
dec
loope
mov
fcmovnbe
push
rol
and
inc
insb
xor
outsb
push
push
or
or
inc
cmp
push
mov
adc
test
or
ret
mov
mov
out
inc
jo
stos
stos
loope
out
adc
inc
ljmp
mov
jp
popa
push
inc
mov
nop
enter
leave
inc
pop
pop
insl
xor
into
arpl
xchg
mov
in
dec
hlt
pop
inc
je
jg
mov
daa
cwtl
mov
and
xor
xchg
xor
enter
arpl
insl
int
pop
fs
outsb
jge
mov
sbb
popa
or
inc
loopne
add
cmovb
cmp
xor
pop
sub
adc
sub
xor
out
push
xor
jo
popa
clc
inc
jmp
lods
rcl
add
adc
add
imul
jns
or
push
adc
or
adc
in
cmpsl
dec
imul
add
cmc
inc
mov
lahf
roll
sub
mov
pop
and
mov
sbb
jne
leave
mov
jnp
lock
jmp
in
push
ret
je
or
je
in
loop
xor
je
call
cmp
pop
xchg
xchg
jb
jmp
rcll
popa
repz
jmp
adc
cmpsl
mov
fistpll
js
ret
push
xorl
or
mov
pop
cmp
mov
stos
jne
mov
repz
sbb
add
mov
jmp
dec
add
cs
cmpl
push
fldcw
adc
lods
movl
mov
xor
dec
sbb
and
mov
sar
xor
xchg
lods
xchg
pop
sar
add
les
pop
inc
div
add
imull
test
jo
jnp
push
pop
adc
ja
mov
sbb
and
imul
hlt
mov
cmpl
cltd
add
inc
stos
lock
adc
int3
adcl
sbb
jmp
sub
or
call
leave
or
adc
xlat
insl
mov
pop
lock
popf
or
cld
pop
mov
andb
mov
dec
adc
lock
divb
add
xchg
sbb
jle
jp
sahf
mov
cmpl
inc
inc
pop
and
cvtps2pd
lea
adc
jo
es
push
pop
push
dec
jl
jl
sbb
add
out
stc
adc
rolb
cmp
aad
movsl
push
test
aad
jae
sbb
hlt
pop
mov
cmp
sbb
sbb
fcmovu
imul
aad
add
cmp
ja
leave
inc
std
paddusw
fwait
mov
and
es
mov
je
jae
mov
cmp
jb
cmp
ja
add
cmp
adc
cmp
jnp
sub
sti
dec
shl
popf
ret
jb
neg
mov
adc
sub
fbstp
andl
mov
push
lahf
adc
fldl
jne
loope
or
test
xlat
jmp
outsl
push
aam
rorb
push
xchg
fcoms
cmp
mov
or
lahf
test
and
dec
sbb
pusha
pusha
adc
mov
pop
je
push
insb
push
pop
lock
mov
fists
enter
cwtl
or
push
sbb
or
rorb
sbb
pop
roll
push
div
add
jbe
jne
fldl
or
mov
and
das
xor
jb
iret
mov
inc
add
testb
nop
and
daa
sbb
add
jl
sub
adc
sahf
test
xor
and
and
les
push
sub
add
in
inc
jns
stc
mov
ret
dec
sub
sbb
test
push
xchg
cmp
or
dec
inc
adc
mov
mov
pop
inc
ss
fmuls
jne
add
fdivl
mov
cmp
dec
push
sub
inc
inc
in
ficomps
mov
dec
or
or
ret
pop
push
ret
jmp
push
push
rol
jnp
out
pushf
call
push
xor
ja
jo
fwait
adc
pop
mov
jbe
fcmovnu
mov
add
fbld
add
add
add
mov
loopne
popf
mov
fcoml
out
sub
lods
add
rorb
mov
pop
sub
cmp
inc
popa
dec
pop
add
fmul
rorl
sbb
lsl
adc
lea
push
clc
mov
xor
push
xor
gs
mov
sbbb
mov
scas
push
ret
inc
sbb
stc
jnp
push
fsub
jecxz
loopne
adc
adc
outsl
movb
sbb
add
jnp
xchg
dec
loopne
xor
orw
dec
sub
or
pusha
mov
dec
int3
xor
mov
out
adc
cwtl
rcrl
mov
lock
adc
rcrb
fcoml
rclb
mov
ret
jo
sarl
mov
mov
jl
mov
rcrl
cmp
leave
and
ret
je
outsl
in
add
push
xor
push
inc
out
inc
das
call
adc
clc
lea
mov
sbb
inc
mov
mov
inc
lods
sub
fmull
push
push
mov
fninit
mov
jo
mov
cmp
inc
loopne
mov
mov
js
push
enter
stc
gs
jo
pop
cmp
jmp
subl
clc
stos
in
nop
dec
or
je
add
insl
pop
inc
js
pop
sbb
cmp
daa
lock
pop
rol
inc
pop
pop
and
mov
fcoms
cmp
lret
test
adc
mov
mov
jecxz
clc
inc
fimuls
xor
sub
pushl
xlat
pop
xor
aaa
inc
std
sbb
mov
jne
add
sbb
jo
pusha
std
xchg
adc
xor
inc
loope
movsl
icebp
sbb
xor
clc
jmp
jae
lock
adc
push
mov
stos
jg
int3
fisttpll
cmp
orl
add
push
and
push
sub
das
jnp
dec
xor
or
cld
dec
out
fwait
les
test
js
cli
call
xor
or
and
push
xlat
shr
shl
or
pop
mov
and
dec
mov
daa
and
shl
or
mov
out
jmp
pop
inc
mov
add
mov
adc
push
jecxz
or
lds
dec
inc
cwtl
lods
mov
push
mov
or
xchg
cli
xchg
push
push
js
insb
lahf
inc
push
or
adc
stos
pop
dec
adc
inc
dec
ret
inc
lods
mov
inc
add
pop
mov
mov
lock
xor
jnp
adc
stos
sbb
lahf
lea
and
add
outsl
dec
add
mov
add
xchg
mov
push
jecxz
cmpsb
insl
shrl
pop
test
in
scas
or
xor
das
outsl
or
pop
shlb
rclb
lea
shrl
sbb
sub
cmpsl
rorb
xchg
sti
mov
ret
adc
add
adc
or
mov
out
push
dec
rcrb
dec
repz
inc
lods
mov
pushl
jl
or
mov
cmp
add
loop
sub
add
pop
jnp
lret
pop
add
pop
fistpl
mov
lcall
xor
jle
mov
add
popf
xor
xor
out
je
adc
inc
jle
adc
inc
jle
sbb
addr16
adc
gs
push
or
or
js
movsl
enter
dec
mov
cwtl
cmp
add
popa
fistps
pop
jge
sbb
mov
sub
xor
fcoms
xor
sbb
xchg
aam
jns
fistl
mov
push
shl
add
lcall
fs
out
jnp
les
lahf
or
pusha
push
shrb
mov
sub
dec
adc
fdivrs
sub
loop
and
add
lock
leave
rol
mov
fimuls
or
pop
xlat
xchg
push
fs
xchg
outsl
mov
dec
clc
nop
add
aam
push
pusha
popa
mov
lcall
aas
movsb
sbb
jge
adc
add
inc
out
stc
js
ror
jbe
cmp
jp,pt
decb
push
pop
dec
movsl
mov
sbb
jmp
pop
mov
xor
je
aaa
inc
pusha
mov
pushl
xchg
jge
aas
pop
dec
mov
pop
pop
jb
jge
rol
into
xchg
es
adc
cmpl
loopne
fstl
mov
rolb
mov
mov
xor
call
xor
mov
pop
mov
sub
pop
and
mov
insl
enter
pop
clc
or
and
cmp
mov
add
movsb
dec
flds
cmp
lock
ds
xchg
ljmp
sbb
iret
repnz
das
rolb
imul
sub
pop
addl
jbe
out
aad
loopne
cltd
jno
mov
repz
or
jp
adc
scas
cmp
lock
fs
xchg
dec
shrl
iret
jp
repnz
fs
xor
popa
adc
push
cli
push
add
sbb
and
mov
inc
in
pop
dec
shll
jmp
xor
in
in
out
sti
out
aas
loopne
inc
push
outsl
pusha
rcl
imul
jg
add
xchg
rorb
mov
cmp
cmp
pavgw
jne
add
clc
data16
movsl
ror
jne
loop
test
clc
add
inc
or
jmp
and
test
lret
fisubs
outsl
jne
and
pop
popa
popa
jl
in
add
sarb
cmp
into
push
loope
mov
sub
cltd
or
push
cmp
cmpsl
mov
xor
shr
dec
imul
lea
or
mov
lock
loop
add
inc
sub
pop
cli
mov
mov
lahf
test
cwtl
psubd
sarb
cmp
call
add
pop
xor
add
sub
scas
sub
loop
test
adc
or
mov
or
add
pop
stc
fistl
or
xchg
neg
jbe
sub
or
and
mov
mov
adc
sub
pop
in
lea
movsl
movsl
dec
adc
dec
dec
jnp
inc
fsubs
adc
inc
int
add
shrb
xchg
add
and
sbb
or
stc
xor
rorb
aam
movq
xor
int3
sbb
incw
add
ret
sub
mov
icebp
movb
stos
inc
push
rorb
repz
cmc
out
xor
sbb
movsl
xchg
add
adcb
xchg
mov
pop
ret
push
xchg
jb
hlt
gs
test
out
push
sti
je
sub
ss
popf
movsl
pop
call
jno
jnp
push
pop
lea
js
jp
ljmp
or
cmp
pop
inc
fistl
xchg
jle
inc
lcall
sbb
push
dec
sbb
or
fstp
cmpsl
mov
xor
inc
jmp
mov
iret
dec
loopne
mov
pop
dec
cmp
inc
mov
or
shr
gs
mov
sub
out
jmp
and
stos
std
xchg
pop
bsr
sub
jo
movlps
test
enter
jmp
pop
mov
xchg
xor
pusha
lods
or
push
cmp
mov
fs
cmpsb
cmpl
dec
mov
out
sbb
dec
mov
je
xor
jno,pn
jecxz
pop
call
out
xchg
adcb
push
or
or
cmpb
jne
rorl
in
sbb
shr
mov
jl
or
les
outsl
in
fdivl
std
movsl
add
and
sbb
mov
and
xor
and
and
pop
sbb
cmpl
cmp
std
mov
aad
jl
aas
ja
cmp
sarb
dec
or
push
fmull
lcall
cmp
ljmp
mov
push
cmp
mov
add
cmp
out
mov
dec
dec
xor
in
mov
xor
jnp
pop
addb
dec
add
es
inc
test
aam
fcoml
pop
or
inc
fisttpl
scas
rorl
xor
push
ret
outsl
or
loopne
out
out
jge
fdivs
sbb
adc
pushf
subl
shlb
sbb
mov
cmp
cmp
flds
jg
sub
fisttps
stos
push
add
jnp
add
jmp
ljmp
aaa
cli
adc
mov
and
pop
cmp
repnz
repnz
negb
testb
pop
or
sbb
out
ucomiss
test
in
dec
jae
negl
stos
dec
repnz
or
and
push
or
and
xor
mov
mov
adc
pop
arpl
jle
icebp
fs
in
arpl
mov
sub
jns
pusha
cmp
xor
jge
testl
insb
filds
testb
or
pop
nop
push
xchg
xchg
add
xchg
ss
pop
jno
or
sbb
ret
aaa
mov
movsl
fcomi
in
push
fdivs
sti
faddp
jp
rorb
add
push
or
sub
xchg
jmp
cmpb
push
movsb
adc
or
mov
lods
icebp
movsl
into
aaa
stc
or
shlb
cmp
pop
push
test
and
enter
adc
sbb
mov
or
xor
movsb
xchg
adcl
xor
jno
push
dec
decb
cli
js
sbb
add
mov
push
mov
push
cs
aad
stc
fidivrl
jle
pushl
inc
bnd
or
push
lods
jle
push
daa
sbb
outsl
inc
or
bound
pop
lahf
mov
or
cmp
iret
rdtsc
into
jae
push
or
bt
xchg
or
xchg
mov
cmpsb
pushf
test
clc
inc
ret
ret
popf
add
jne
in
rclb
pop
sub
and
enter
mov
or
lock
jge
sub
adc
aam
cmp
jb
cmp
jbe
fildll
bound
pop
sbb
mov
jb,pt
xor
gs
xchg
outsl
adc
loope
rorb
xchg
fisttpll
aam
pushf
flds
xor
rcrl
imul
movsl
adc
int3
and
pusha
pusha
cwtl
and
push
insb
sahf
sbb
lods
adc
in
mul
out
push
push
repz
icebp
inc
inc
sub
fs
sub
pushl
je
sbb
shll
mov
popa
sub
lret
insb
push
jmp
push
sbb
sbb
mov
push
cmc
movsl
add
popf
sbb
add
inc
cmp
lcall
stos
ret
roll
lods
jb
xor
js
mov
cmpsl
test
je
clc
ret
addl
dec
jae
dec
fnsave
or
cmpsl
cmp
loop
adc
aas
bound
outsl
test
pop
xor
pop
mov
fistpl
push
movsb
arpl
xchg
inc
cmp
mov
xorb
jmp
sbb
cmp
fcoms
push
xor
clc
bound
clc
aam
inc
mov
and
aas
sub
shrb
push
mov
push
ret
sub
fdivrp
mov
dec
das
test
or
add
test
lret
in
dec
jmp
es
popa
call
xchg
xchg
inc
jp
movsl
es
leave
xlat
popa
inc
xchg
subb
pushf
je
push
push
dec
pop
add
je
sbb
pop
arpl
jnp
pop
add
dec
cmc
cmp
fsubrl
jl
clc
cli
xor
xor
mov
mov
in
mov
je
ret
movlps
scas
test
push
je
outsb
push
fcomp
mov
imul
pop
dec
jbe
sahf
psrld
jl
icebp
roll
push
aas
lea
xor
mov
push
sbb
bound
jno
or
push
jne
stos
mov
cmp
sahf
mov
les
cmp
inc
aad
sbb
sti
mov
fbld
inc
dec
test
mov
adc
dec
sbb
in
clc
xchg
inc
das
inc
inc
mov
mov
add
clc
xchg
mov
cmpsl
xor
mov
inc
clc
mull
loopnew
push
mov
dec
mov
mov
imul
mov
sbb
and
inc
dec
aas
mov
xchg
dec
sti
sub
mov
shlb
pushf
in
js
call
pop
ror
cmp
dec
push
cmp
mov
jl
xchg
jbe
int3
sbb
mov
sbb
sub
or
out
adc
sbb
push
fmuls
cwtl
dec
es
or
js
inc
dec
jb
insb
fcmovnu
dec
fcoml
sub
mov
xchg
fbstp
cmp
and
adc
es
or
xchg
xor
pop
and
add
adc
enter
lea
mov
jns
pop
stc
xchg
push
lahf
das
repnz
jl
add
xchg
add
call
xor
xor
les
in
pop
push
and
mov
mov
mov
mov
xor
pop
hlt
mov
leave
adc
jo
fcmovne
pop
insb
xor
cmovae
add
aam
ret
xchg
fcoms
mov
sbb
outsb
sbbb
inc
push
pushf
mov
xchg
add
cmc
lcall
sub
pusha
or
add
arpl
jns
gs
xor
push
sahf
push
mov
sbb
in
sub
push
dec
repnz
in
sub
xor
jl
xchg
imul
xchg
in
cmpsb
inc
in
pop
jb
or
mov
lods
mov
mov
pusha
sbb
cmpl
cmpl
inc
dec
pop
lea
sahf
loop
sbb
mov
cmp
in
push
subl
shl
and
loop
add
inc
cmpsb
sub
popa
insb
stc
mov
nop
inc
push
and
repz
xor
int3
jmp
sbb
lcall
test
push
push
test
jmp
imul
jne
xchg
dec
pop
test
or
leave
dec
inc
jg
fdivl
add
in
sbb
das
mov
ljmp
adc
lods
jnp
sbb
arpl
jne
pop
cmc
add
xor
call
nop
daa
push
pop
aam
jmp
popa
or
dec
sub
mov
cmp
and
mov
lds
in
stc
sarl
in
cmp
shr
enter
or
in
dec
mov
lret
mov
pop
dec
dec
pop
xor
out
inc
adc
lods
popa
push
test
or
push
mov
pop
inc
and
out
sbb
aam
pusha
insl
leave
sbb
push
cwtl
jo
mov
sub
mov
xor
lock
lods
loopne
or
dec
sub
mov
dec
orb
fs
dec
in
adc
rolb
cmp
mov
fldt
mov
and
in
rolb
fisubrl
inc
and
dec
sbb
pop
mov
push
mov
push
and
mov
js
cmc
mov
fistpll
add
pop
push
jae
cmc
xchg
out
or
xor
and
pop
xor
in
pop
mov
mov
imul
jo
or
fistl
push
add
in
cmpsb
cmp
fwait
ja
jo
in
rolb
mov
and
std
xchg
cmp
mov
mov
and
dec
test
push
adc
sbb
dec
inc
cs
jne
mov
mov
test
fs
xchg
mov
push
cwtl
mov
xor
cltd
in
mov
int
stc
push
jb
stos
mov
jl
leave
sbb
jae
xchg
push
and
pop
or
dec
push
pop
dec
mov
push
nop
seta
filds
push
lock
dec
std
push
push
test
inc
jge
mov
dec
fwait
mov
in
sbb
sti
daa
inc
sbb
inc
sbb
test
xchg
pushf
xor
sub
pushf
and
and
fsubrl
sub
jns
push
enter
cld
cmp
mov
enter
and
and
int3
sbb
std
shll
mov
inc
add
xor
lea
jecxz
pusha
enter
mov
mov
xchg
dec
inc
push
int3
std
leave
sub
xor
adc
jb
pop
inc
es
sbb
in
add
xor
adc
push
je
and
or
in
daa
inc
pusha
xchg
dec
adc
cmpsb
in
cmp
mov
push
in
pop
dec
xchg
repnz
sub
or
xchg
sub
inc
pop
call
inc
mov
jno
imul
adc
jmp
inc
jg
popa
jmp
and
pop
je
insl
sbb
inc
jb
inc
enter
and
xchg
add
cmp
nop
test
inc
and
fdivrs
das
inc
inc
and
inc
ds
add
mov
nop
enter
jb
and
jo
push
and
jbe
and
lds
dec
scas
pop
mov
inc
push
js
mov
adc
fisubl
mov
pop
mov
je
cs
in
int3
cld
cld
lods
push
leave
dec
add
call
add
jbe
dec
push
ja
mov
mov
aas
sbb
xor
fadds
pusha
sub
sub
loope
daa
and
das
mov
enter
adc
mov
mov
mov
stos
pop
aas
das
imul
mov
fwait
mov
push
adc
push
pand
int
or
adc
scas
dec
pop
je
data16
mov
xlat
and
imul
add
lea
das
mov
incl
jle
lock
mov
inc
adc
push
mov
fldt
sti
mov
cli
mov
cs
push
pop
ret
in
xchg
and
pop
sub
sub
adcl
xor
and
notb
cmp
imul
inc
push
or
nop
popa
inc
insl
add
scas
hlt
push
cmpsl
cmp
nop
mov
lahf
insl
loopne
add
push
in
outsb
adc
push
lock
lock
popa
int3
sub
rcrl
es
in
call
jbe
jno
jnp
push
daa
xchg
cld
add
mov
sbb
lods
mov
jmp
fstpt
mov
sub
sbb
push
movsl
mov
dec
rorl
ss
insl
jmp
mov
and
mov
pushf
insb
xchg
add
adc
mov
bound
in
sbb
xor
icebp
sub
mov
xor
clc
lock
sbb
or
testl
fucomip
xchg
movsl
daa
fsubr
and
mov
es
lcall
push
fmuls
jns
add
inc
jb
jno
inc
xchg
or
xor
jmp
push
push
sahf
cmpsb
mov
sbb
lahf
push
test
popf
add
adc
stos
or
inc
adc
push
push
push
outsb
imul
incl
ljmp
gs
outsl
jb
xor
xor
dec
inc
imul
mov
xor
and
addr16
bound
and
jae
addr16
sti
jbe
outsl
jo
inc
cmp
dec
dec
inc
sub
sbb
and
arpl
imul
outsl
dec
inc
bound
xor
jge
mov
add
xor
cmp
xor
xor
xor
cs
lcall
push
cmp
jo
pop
inc
pop
inc
inc
push
push
dec
dec
dec
and
sub
cs
in
idiv
add
sub
imul
inc
outsb
mulb
dec
dec
and
arpl
daa
fs
jb
pop
cmp
fdivr
sarl
jae
jne
pop
cmp
jge
mov
and
jg
cmp
push
ja
dec
gs
dec
outsb
je
or
push
popa
jbe
lods
frstor
sti
repnz
fs
mov
fs
jb
cmpb
dec
outsl
popa
fs
sbb
fiaddl
xchg
xor
ja
out
bound
insl
pop
mov
push
pop
jmp
jnp
jno
mov
je
insb
insb
popa
mov
mul
std
mov
es
bound
and
sub
outsb
pop
pushw
sbb
jne
fs
arpl
fiadds
punpckhwd
arpl
sub
adc
je
popa
dec
divl
lock
cmp
mov
jb
sbb
xor
roll
fsub
add
push
xchg
push
inc
es
adc
push
dec
inc
push
push
inc
push
inc
pop
cmp
dec
jnp
inc
mov
mov
sub
mov
and
addl
pop
push
push
jae
adc
inc
mull
jecxz
mov
in
pop
mov
and
fs
sub
xchg
adc
popaw
imul
inc
jae
arpl
out
imul
pop
clc
xorb
dec
std
jo
mov
dec
popa
sbb
inc
add
xor
outsb
imul
jo
out
xchg
ret
data16
mov
push
cmpl
insl
and
arpl
and
and
push
popl
inc
dec
dec
sti
jnp
roll
jle
push
xchg
push
push
dec
push
push
mov
push
push
jmp
mov
sti
mov
ret
dec
push
inc
push
dec
and
mov
lret
jae
loope
cmp
lahf
lods
and
imul
xchg
mov
push
bts
add
sub
popa
in
insb
imul
out
js
ja
sub
pop
insb
inc
nop
jmp
mov
or
je
popa
jb
mov
mov
cmc
pop
aad
mov
loopne
jmp
iret
out
ret
inc
mov
add
cmp
push
xor
shll
sub
adc
imul
pop
push
lock
movzwl
leave
inc
dec
push
inc
inc
push
cmc
push
pop
daa
inc
fmul
mov
fisttps
push
js
add
lods
xchg
iret
arpl
inc
loop
add
ficompl
arpl
pop
xor
ret
adc
push
inc
jnp
xlat
imul
dec
mov
sahf
rol
mov
lcall
jge
pop
fldl
push
dec
outsl
int
jbe
or
fwait
xlat
inc
mov
gs
mov
addr16
inc
dec
push
cs
enter
inc
inc
inc
js
dec
inc
jne
mov
imul
imul
and
pop
das
fiaddl
stos
jno
arpl
popa
cmpsl
sbb
imul
mov
push
push
push
and
add
adc
pop
das
pop
mov
push
cmp
data16
lock
add
add
je
inc
fildl
mov
adc
popa
aas
inc
add
jg,pt
pmaddwd
pop
pop
mov
push
dec
aas
inc
std
pop
sbb
loop
bound
jae
mov
push
xchg
sub
inc
test
ljmp
push
imul
mov
imul
aas
or
xor
outsb
cmpsl
sbb
imul
shlb
out
or
add
pop
pop
andb
das
outsb
cs
jb
push
pusha
adc
and
mov
mov
pop
dec
inc
push
outsl
imul
insb
add
lods
xchg
arpl
sbb
daa
aaa
mov
add
xchg
daa
sbb
inc
lcall
xchg
and
in
ds
xor
popf
sub
pop
pop
sub
mov
movsl
or
inc
push
push
mov
jbe
cmp
inc
push
xlat
push
push
pop
cs
jnp
mulb
imul
adc
ja
sahf
and
mov
inc
pop
ss
pop
orl
dec
bound
sarl
dec
inc
pop
pop
adc
std
pop
dec
push
cmovg
dec
inc
daa
inc
pop
dec
pop
inc
push
inc
mov
dec
mov
push
inc
push
inc
dec
push
dec
inc
dec
fwait
das
das
jg
cmp
xor
dec
dec
inc
inc
dec
pop
inc
dec
dec
frstor
dec
insl
mov
fnstenv
push
inc
push
sbb
dec
push
daa
inc
inc
add
leave
ss
push
push
push
dec
dec
mov
or
mov
dec
xorb
movsb
add
rcrl
fs
popa
dec
add
nop
inc
push
sbb
sbb
adc
add
lds
and
push
jo
jb
ror
roll
jne,pt
inc
and
dec
inc
inc
mov
mov
sub
pusha
and
inc
mov
imul
jne
and
dec
push
xchg
mov
sbb
gs
aas
inc
pop
pop
test
pusha
in
shrl
arpl
xlat
movzwl
mov
jae
sub
jnp
push
orb
and
sti
and
or
push
push
dec
cmp
xorb
cbtw
inc
inc
xchg
inc
pop
jl
clc
inc
std
pop
push
dec
dec
inc
inc
addr16
dec
dec
dec
ret
mov
xor
dec
aaa
xor
dec
sub
sbb
sbb
fwait
js
xchg
jbe
pop
xor
sahf
jl
loopne
inc
pop
jge
fidivrs
push
jle
mov
jge
add
pop
lret
ja
mov
pop
cli
test
fs
xor
inc
xchg
pavgw
add
repz
pop
xchg
push
outsb
xor
mov
mov
shll
sub
mov
ss
test
sbb
sub
dec
cmp
addr16
cmpsb
imul
jb
sub
imul
push
or
push
pop
cwtl
test
sbb
xchg
testl
lcall
fnstenv
push
mov
mov
mov
xchg
push
lahf
xchg
adc
mov
jg
jae
insl
ja,pt
leave
imul
pop
cmp
sqrtps
jbe
ss
pop
pushw
rorb
push
dec
ficomps
inc
mov
push
xchg
int
imul
pop
insb
xchg
test
test
arpl
jbe
lods
ficomps
arpl
aas
jnp
dec
imul
in
addr16
imul
push
sub
in
mov
mov
inc
jg
push
dec
xchg
idivb
mov
stos
roll
adc
je
adc
cli
sbb
adc
int3
push
and
pop
sbb
pop
cmp
add
push
push
pop
rcr
jl
mov
pushl
pop
pop
outsl
decb
leave
sbb
sub
adc
test
and
ss
cmc
decl
ja
pop
pop
jg
xchg
xchg
inc
repnz
xor
popf
iret
pop
xlat
jle
xacquire
dec
scas
sub
adc
out
call
aas
popa
push
or
scas
int
adc
loop
and
xor
aaa
std
mov
inc
popa
stc
push
mov
xor
or
imul
mov
and
cmpb
shlb
add
pop
lods
push
mov
pop
ret
lock
mov
loope
mov
inc
in
adc
insb
add
lods
pop
dec
movsl
enter
push
push
jno
inc
lds
dec
mov
fistps
lcall
sub
and
mov
cld
jg
mov
jbe
into
sbb
ljmp
mov
popa
sub
or
out
mov
and
lahf
mov
dec
fsubs
loopne
rcrl
mov
pop
dec
xchg
mov
mov
fisttps
xchg
inc
fiadds
inc
pop
and
imul
fisubrs
inc
sub
sub
or
orb
movsb
lcall
je
lcall
cmp
pop
roll
pop
test
nop
mov
je
xor
inc
pop
test
push
add
pop
and
lods
rolb
fisubrs
sti
das
jo
jb
sub
cmp
insl
insb
push
jae
outsb
test
add
adc
jo
fnstsw
nop
sub
daa
mov
fs
xchg
jb
push
cmp
jge
arpl
inc
rorb
or
aam
es
outsl
jb
pop
imul
lahf
push
push
pop
inc
dec
scas
sub
les
inc
push
dec
sbb
inc
lahf
jae
fwait
jge
das
fsub
lea
and
xor
arpl
fimuls
cmc
inc
ljmp
cmp
ja
lret
sub
push
enter
xor
xor
cs
pop
cmp
xor
mov
adc
xchg
mov
bound
push
mov
xchg
outsl
add
mov
add
out
jne
jmp
sub
fldl
btc
sti
dec
xchg
jae
arpl
mov
mov
add
in
pop
cli
out
test
pop
jo
lret
scas
popa
data16
add
data16
imul
xchg
cmp
pop
cmp
adcl
mov
mov
hlt
lret
sbb
cmp
inc
mov
je
sbb
cltd
out
pop
jb
add
or
lsl
jo
mov
dec
fnsave
addr16
and
shr
nop
and
xor
push
mov
mov
mov
push
cmp
mov
and
or
dec
and
push
rcrb
fcmovb
inc
push
inc
pop
shlb
shrb
shlb
bound
mov
mov
pop
arpl
pop
xchg
sbb
jnp
and
adc
pusha
in
mov
push
dec
cmp
add
push
dec
cmp
inc
cmpsb
and
xor
cmp
insb
jo
jg
loopne
jbe
aaa
cs
inc
pop
push
pop
sbb
cld
les
movsl
xlat
daa
dec
inc
insb
addr16
incb
fsubrs
xchg
call
push
mov
sbb
test
sbb
fcoms
cmp
cs
shrb
inc
inc
rol
and
sbb
mov
add
outsl
insb
test
cmp
cmp
add
dec
stos
bound
imul
pop
cmp
orl
push
jno
fwait
imul
xchg
sub
test
sbb
iret
push
ja
pop
push
repz
mov
loop
data16
fdivl
inc
mov
into
cmc
aas
js
jecxz
inc
pop
mov
arpl
jle
mov
sbb
xchg
inc
jo
test
js
out
xor
and
imul
add
int
fs
cmp
fstpt
in
testb
jbe
xchg
pop
push
cs
sub
sub
cmp
stos
out
adc
jbe
ljmp
in
es
in
test
add
out
pop
scas
fisubrl
xorl
shl
outsl
jmp
sbb
addr16
in
fidivl
inc
addr16
jmp
inc
dec
dec
inc
pop
push
dec
inc
dec
push
push
mov
inc
dec
inc
inc
dec
sahf
push
dec
pop
test
push
aaa
aaa
mov
dec
dec
daa
dec
dec
jae
jl
dec
inc
cmp
cwtl
add
pusha
add
mov
sub
add
int3
or
fiadds
inc
pop
add
dec
jb
into
add
fdivs
inc
outsw
imul
jbe
aad
xor
notb
lret
cmpsb
ja
imul
dec
je
inc
cltd
or
add
stos
add
add
dec
imul
fistl
outsl
popa
bound
push
adc
inc
cs
lock
adc
xchg
outsl
pop
bound
ss
fptan
stos
adc
pop
sub
movsl
scas
and
imul
jae
mov
jbe
test
push
pusha
dec
scas
outsb
fs
insb
outsl
cmp
ss
xchg
mov
test
mov
add
dec
jae
je,pn
inc
or
add
dec
outsb
sub
icebp
outsb
sbb
packuswb
mov
push
ja
or
add
movsb
add
cmp
dec
les
sbb
adc
xor
adc
adcl
adc
cmpsl
les
psubsw
fisubl
xchg
jmp
testl
pop
loop
insl
call
dec
and
mov
sub
ret
mov
inc
comiss
imul
insb
pop
inc
inc
inc
dec
dec
pop
dec
push
inc
or
sub
mov
push
adc
lret
sub
or
push
lret
clc
ret
adc
pop
inc
jp
xor
iret
or
ss
pop
mov
cmpsl
inc
pusha
pop
mov
cmp
cmp
and
and
xor
xor
cmp
cmp
add
and
das
sub
adc
dec
mov
gs
push
shrb
cltd
cwtl
sbb
sbbb
mov
mulb
js
push
js
test
push
add
push
outsb
pop
sbb
add
add
and
sub
and
pop
popa
mov
cmp
and
and
js
mov
addb
cs
jb
cld
insb
dec
inc
pop
sub
iret
aad
pop
push
pop
test
dec
pop
lds
clc
ret
inc
fs
orb
adc
xchg
imul
jae
and
xchg
dec
inc
outsl
and
pop
call
push
data16
sbb
pop
ret
insl
pop
adc
popa
cs
insb
inc
inc
and
cmp
xor
dec
ja
aaa
adc
ss
or
mov
inc
jo
lods
ret
test
das
dec
adc
inc
test
push
gs
push
and
lock
fnstenv
xchg
and
jne
outsl
xor
mov
add
out
jp
xorb
sub
loop
cmp
mov
loope
push
dec
scas
std
daa
cmp
sub
add
pop
jbe
xchg
or
movsl
mov
push
pop
aad
pop
pop
or
cmc
adc
outsb
or
add
push
insb
jne
shrb
inc
push
dec
push
inc
rorb
cld
dec
and
jns
insl
test
adc
sbb
dec
insl
mov
sahf
sbb
imul
mov
add
push
and
ja
outsl
fcmovnu
adc
dec
push
fbld
stos
pusha
movsl
rorl
aaa
or
pop
ret
fiaddl
adc
imul
or
dec
fisttps
inc
xchg
and
nop
pop
jmp
pop
xor
xchg
xor
xor
sub
out
in
pop
ss
pop
cli
push
iret
push
push
daa
adc
mov
push
dec
inc
daa
inc
mov
xor
stos
jne
cmp
arpl
pop
mov
mov
jae
or
andb
pop
jae
inc
xor
inc
mov
xchg
insb
aad
xchg
push
fisubs
ret
xor
mov
pop
fwait
pusha
rorb
pop
push
fmuls
js
imul
imul
imul
out
pop
in
pop
push
dec
inc
adc
fs
loopne
lods
mov
push
push
dec
inc
push
inc
pop
dec
inc
inc
cmp
pop
dec
add
dec
cli
push
fsubp
repnz
mov
imul
dec
shrb
cmp
roll
imul
xor
sbb
popa
or
les
in
xchg
xchg
mov
inc
cmp
add
bound
pusha
pop
mov
and
push
add
mov
test
pop
test
or
cmp
lds
divb
xor
xor
inc
pusha
mov
adc
add
fs
sbb
insl
pop
mov
xor
sub
pop
imul
jae
jb
subb
pop
adc
xor
iret
or
loopne
sbb
faddl
mov
loop
outsl
inc
xbegin
adc
mov
js
dec
stos
adc
push
and
lret
xor
aaa
xor
icebp
sahf
inc
inc
push
out
push
mov
in
cmp
dec
popf
in
je
push
aaa
xor
sbb
sub
xchg
cmpsb
or
and
inc
inc
loopne
aad
bound
inc
and
pusha
xchg
mov
adc
outsb
adc
imul
das
lods
pop
and
or
push
dec
outsl
jnp
sbb
iret
inc
push
jne
jno
aaa
ret
push
ret
aam
or
ret
xor
push
pop
movl
push
and
sbb
push
add
and
mov
and
push
outsb
lret
push
push
and
mov
sub
ja
inc
inc
mov
rcrb
cld
ret
int
xchg
inc
adc
push
mov
pop
mov
cmc
inc
insl
test
insb
sahf
aaa
xchg
xorb
xor
mov
add
aaa
and
dec
js
cmp
cmpsl
aam
subb
imul
gs
ljmp
ss
scas
inc
loope
test
xlat
test
and
adc
movsl
jl
mov
sub
fisubrl
scas
fs
popl
push
mov
test
and
mov
out
insb
sbb
or
int
push
pop
pusha
sub
outsb
adcb
sarl
sbb
das
or
and
cs
notl
xchg
mov
stos
cmp
dec
cmp
pop
divb
dec
add
push
add
imul
push
or
clts
icebp
xchg
paddq
pop
clc
xchg
inc
pop
dec
sub
inc
xchg
pop
rcll
insb
lret
aad
mov
xchg
je
popa
nop
and
sbbl
lods
sbb
xchg
je
push
insb
mov
push
adc
mov
sti
outsl
inc
jne
push
in
ja
mov
in
das
outsl
adc
push
fnsave
jae
xor
loope
ja
xchg
pop
fs
dec
mov
adc
inc
out
das
sub
or
int
and
fsts
jo
jno
fsubr
or
xor
pop
sbb
xor
outsb
and
out
cmp
add
rolb
pop
daa
lds
shrl
jp
inc
or
xlat
sub
pop
je
hlt
and
nop
das
lock
xchg
sahf
pop
cmp
inc
pop
inc
movsl
mov
bound
and
mov
insl
push
inc
js
xchg
addr16
sbb
out
jno
insb
rorb
lods
nop
sbb
lcall
mov
les
xor
push
push
dec
adc
sub
mov
inc
pop
inc
push
inc
add
xor
fucomip
or
pusha
adc
fst
xchg
movsl
addr16
jae
shll
in
or
add
add
xor
movsl
pop
cbtw
negl
cmpsb
pop
xchg
out
loopne
repnz
sbb
inc
add
mov
jae
inc
jb
jae
repnz
sub
sbb
fwait
insb
rolb
insl
xor
ja
xchg
out
inc
push
gs
xor
rcr
inc
sahf
jbe
jnp
or
scas
outsl
mov
clc
pop
decl
adcl
lcall
mov
xchg
or
xor
or
ja,pn
dec
mov
push
xchg
jge
mov
dec
or
sub
jecxz
sbb
dec
pop
pop
push
cs
push
dec
push
dec
inc
adc
gs
push
jp
push
scas
scas
outsb
ret
mov
js
dec
add
aas
je
jae
das
lahf
lret
jmp
arpl
das
jno
push
add
jb
pop
roll
inc
popa
jae
das
dec
fucomip
scas
mov
decl
adc
das
pop
inc
or
aaa
cmpsb
rcrb
aaa
aaa
xchg
fdivs
aas
scas
or
adc
test
sub
mov
pop
icebp
xor
cmp
mov
aad
out
jne
bound
cmp
add
inc
jae
jno
stos
sub
mov
inc
pop
xor
xor
pop
sub
mov
test
in
in
sub
in
jb
and
or
pusha
out
dec
and
mov
xor
xor
dec
les
loope
adc
jg
ss
inc
jmp
push
jecxz
inc
dec
popf
mov
mov
and
push
add
ret
jne
data16
or
dec
test
sbb
icebp
pop
test
jge
imul
ss
fnstenv
push
ds
cmp
push
add
xchg
mov
ss
insb
fadds
pop
inc
pop
sbb
adc
add
jae
jmp
pop
jl
cmp
rcll
pop
in
mov
add
dec
inc
stos
dec
add
xor
shrb
test
jns
arpl
fwait
xor
add
fs
or
fmul
cmp
and
or
add
push
sub
fimull
pop
dec
and
les
pop
sbb
jb
mov
xchg
sbb
aas
or
arpl
and
in
jb
addr16
adc
bound
into
xchg
bound
inc
fcoms
mov
jne
push
mov
popf
ret
push
jno
shrb
ja
bound
pop
shrl
or
sub
xchg
es
inc
idivl
or
popa
in
push
nop
fstpl
or
insl
idivb
sub
sub
pop
das
dec
inc
push
dec
inc
ds
js
or
inc
fildll
xchg
mov
cmp
dec
push
push
pop
lods
add
xor
pop
idivl
sbb
push
push
gs
loope
arpl
pop
lahf
jae
pop
test
push
xor
cmp
int3
jo
notb
mov
dec
outsl
pop
cmpl
adc
cmpsb
insl
pop
add
xor
xor
xor
xor
pop
mov
and
push
incl
add
sbb
cs
js
in
scas
add
pop
insb
pop
inc
in
push
or
mov
pop
pop
pushf
pop
clc
pop
push
push
inc
inc
inc
push
push
das
add
ss
ret
jo
addr16
subl
jo
push
mov
xchg
jmp
mov
inc
mov
subl
mov
std
imul
push
test
fsubrs
ja
push
push
and
scas
and
add
pop
andl
test
cltd
daa
mov
cmp
push
xchg
and
movsb
sub
fs
out
adc
pop
jnp
xor
cmp
aaa
inc
sub
mov
cmp
sub
sub
sbb
inc
inc
ss
jge
dec
enter
push
cmp
insl
jnp
xor
orl
stc
std
sub
jnp
arpl
cmp
xor
inc
and
movsb
sbb
inc
sub
push
or
insl
adc
orb
mov
jnp
sbb
int3
xchg
addr16
aaa
inc
mov
push
out
aas
cmp
xor
pusha
les
outsl
adc
mov
sbb
mov
mov
xor
add
clc
mov
dec
dec
dec
insb
add
xchg
pop
xor
imul
insb
add
aam
jl
dec
pop
pushf
or
add
mov
shll
xor
ja
mov
clc
dec
xor
dec
pop
jecxz
pop
in
mov
inc
lods
ja
addl
icebp
jae
push
adc
pop
adc
imul
add
and
dec
pusha
in
cmpsb
into
popa
gs
pop
lret
mov
jno
add
mov
pop
push
insb
lods
inc
imul
lods
daa
imull
add
add
inc
push
out
dec
mov
daa
lret
inc
clc
pop
into
stc
adc
inc
pop
inc
mov
dec
and
dec
cmp
mov
rclb
push
fadds
add
test
xchg
sub
or
add
sbbl
push
inc
pop
push
lcall
je
mov
push
dec
cmpsl
ja
pop
cwtl
jecxz
or
cmp
daa
mov
push
mov
int
ja
and
testb
push
das
xor
xor
sub
dec
sbb
js
insl
cwtl
popa
sub
std
bnd
bound
cmp
dec
push
add
orb
addr16
rcll
movsl
push
stc
add
addr16
ja
es
push
push
call
cmpsb
sub
out
call
xchg
enter
mov
ja
ret
jbe
or
hlt
or
dec
add
jbe
rcll
add
and
and
push
call
orb
dec
fdivp
xchg
mov
sub
pop
mov
mov
dec
xchg
sub
cmp
test
inc
pop
inc
dec
insb
inc
add
cmp
psubw
outsl
ret
insl
outsb
cld
inc
inc
inc
push
inc
xchg
sti
sub
sub
and
xor
or
add
pop
dec
cld
sub
mov
inc
inc
dec
inc
cmp
lret
cwtl
adc
bound
dec
stos
mov
lea
in
jle
xor
mov
xorb
sub
jge
xchg
adc
jbe
inc
inc
lds
push
pop
inc
pop
icebp
and
push
arpl
out
push
dec
push
inc
push
inc
adc
inc
push
outsl
rcr
mov
dec
and
sahf
cli
inc
pop
inc
pop
int
mov
jge
inc
dec
push
mov
cs
cmp
xchg
push
mov
cmc
out
xlat
mov
push
into
fldcw
mov
pop
jae
ret
push
push
sbb
mov
dec
sbbl
dec
inc
fisubs
mov
mov
dec
sbb
cmpsl
and
and
jp
lea
or
sub
inc
dec
mov
int
inc
repz
xchg
mov
push
inc
and
add
cs
push
pop
push
cmp
mov
ret
sbb
dec
mov
ja
jnp
testb
xor
rolb
push
fisttps
pop
pop
cmp
cmp
or
cmp
mov
lods
cld
lds
imul
push
int
ja
inc
dec
xor
fcomp
popa
incl
dec
test
in
inc
and
inc
cmp
push
stc
scas
push
lahf
lret
pop
insb
movsb
mov
mov
test
insb
mov
lods
daa
sbb
pusha
push
pop
bound
xchg
add
mov
inc
test
pop
cmp
cmp
add
mov
imul
jbe
cltd
lods
xchg
mov
dec
sbb
inc
insl
mov
pop
or
sarb
cmp
xchg
xor
setbe
jmp
pusha
push
jne
test
outsb
inc
inc
mov
cmp
xor
dec
dec
pop
dec
dec
ds
jno
push
sbb
mov
and
es
and
lea
popa
push
fadd
mov
cmp
mov
pop
andl
int
je
js
imul
push
mov
sbb
fcmovb
inc
mov
push
adc
inc
adc
pop
jns
inc
inc
push
cmp
push
rcr
mov
inc
ss
ror
fistl
inc
inc
dec
or
jb
imul
and
stos
popa
ret
inc
xchg
inc
sbb
daa
movsb
arpl
int
inc
or
jbe
xor
mov
pop
mov
test
in
test
insb
mov
and
inc
inc
ret
dec
es
or
and
xor
gs
push
sub
sub
add
out
adc
aaa
xor
or
or
add
xor
fbstp
mov
mov
mov
lea
lcall
inc
insb
ja
jns
imul
mov
into
dec
sub
sbb
add
and
and
xlat
cmp
lock
jge
les
dec
jae
dec
cmp
inc
test
test
add
shll
bound
enter
lds
xchg
out
sbb
orb
imul
lahf
push
jae
mov
in
leave
xor
or
xlat
push
mov
or
arpl
inc
jb
out
into
or
bound
sbb
xchg
push
bound
xor
xorb
out
xchg
pusha
notl
inc
adc
push
add
addr16
outsb
popf
inc
jnp
mov
jnp
test
inc
add
and
fsts
pop
popa
inc
mov
jl
repz
add
add
ja
jne
mov
out
dec
inc
xlat
rorl
pop
or
cmpsl
lret
subl
jmp
test
xlat
push
jo
cmpsl
push
fwait
dec
xchg
mov
inc
sub
adc
arpl
andb
push
mov
aas
jle
aad
sarl
mov
aas
cmpsb
ficoml
loopne
aam
xchg
dec
add
loope
jae
jo
or
sub
add
aad
fidivl
fiaddl
shlb
out
addr16
loopne
add
inc
outsl
popa
xor
arpl
popf
add
jne
es
sbb
int
and
pop
movsb
inc
stos
xchg
and
dec
add
in
add
pop
es
orl
aas
adc
rolb
imul
mov
push
and
push
sub
mov
jmp
adc
movsl
mov
out
pop
and
dec
cmp
imul
push
imull
push
xorl
mov
push
mov
inc
jle
subb
and
lret
shll
ret
jmp
je
imul
movsb
and
push
push
dec
bound
jae
xchg
pushl
mov
sub
outsb
mov
out
fs
mov
pushf
sbb
mov
popa
adc
push
and
adc
sbb
pop
insl
and
xlat
in
pop
mov
dec
in
test
in
cmovge
outsb
push
pop
pop
imul
push
daa
test
mov
jnp
es
adc
clc
push
jae
jo
jp
cmpsl
nop
pop
pop
pop
dec
push
pop
xor
xor
sbb
push
jl
jl
mov
sbb
pop
jl
xor
adc
sbb
xor
ret
mov
pop
imul
les
bound
jns
popa
sub
inc
and
cs
fistpl
jo
add
and
push
popf
pop
xor
les
xor
fs
ret
push
xor
add
or
mov
and
pop
mov
lds
cltd
sbbb
addr16
dec
insb
lods
insl
shl
je
lds
or
rolb
data16
or
and
ss
andl
mov
jl
out
xor
and
add
xor
rclb
mov
xchg
add
sbb
jae
and
jle
cwtl
add
out
pop
push
addr16
hlt
push
xor
sub
push
push
cmpsb
or
sub
clc
dec
cmp
jno
jge
adc
push
imul
or
outsb
sbb
movsl
pop
cmpb
adc
pop
xlat
rorb
push
mov
mov
mov
or
mov
xorl
push
stc
cltd
addr16
ja
das
je
insl
add
add
popf
lea
inc
push
iret
and
jne
adc
fadds
mov
add
mov
or
xlat
scas
cmp
daa
add
mov
add
les
sbb
xchg
add
xlat
adc
dec
pop
in
mov
sbb
xchg
pushw
mov
xchg
adc
out
loopne
sbb
arpl
stos
pop
pop
sub
je
pop
lock
test
mov
fistps
test
mov
jg
pop
mov
aaa
cli
test
push
addl
pusha
sbb
fmuls
lret
mov
sbb
aas
mov
lock
push
add
js
in
xchg
gs
and
jge
aam
or
xor
inc
jb
orl
ss
xor
popa
test
comiss
inc
js
pushf
and
test
mov
dec
mov
or
rcr
ja
and
adc
adc
mov
sub
pop
daa
inc
add
and
xchg
cmp
test
cmpsb
mov
dec
ja
ret
scas
cmp
pop
test
dec
mov
sub
mov
arpl
lds
jae
pop
sub
std
lock
scas
mov
dec
jnp
xor
xor
cmp
test
test
xor
inc
getsec
inc
xor
xor
inc
inc
inc
cmp
inc
jge
cmpsl
and
or
fdivr
pop
cmp
inc
inc
xor
xor
call
ret
inc
xor
inc
cmp
inc
aaa
inc
cmp
dec
inc
sahf
xchg
mov
dec
aaa
xor
cld
idivb
sub
std
push
cmp
xor
cmp
cmp
ss
jnp
dec
inc
xor
xor
inc
inc
xor
lahf
inc
pop
xor
ret
ret
daa
cmp
inc
push
outsl
testb
aaa
dec
aaa
ja
mov
pop
adc
inc
loope
in
and
push
pusha
gs
pop
rcrb
cmp
pop
iret
add
sbb
fistl
filds
or
scas
xor
in
mov
lods
pop
pop
cmp
scas
fwait
daa
and
adc
sub
push
outsl
rolb
inc
jecxz
jbe
or
daa
lock
or
int
add
sub
pop
mov
insb
sub
lcall
mov
cmp
inc
jne
xchg
inc
mov
stc
outsl
imul
xchg
nop
popa
adc
test
test
addl
or
rol
jecxz
dec
repz
aaa
nop
pop
aad
add
mov
je
sbb
pop
add
rorb
jbe
dec
ja
movsl
or
xor
dec
or
shrb
lahf
jne
ror
sbb
mov
dec
das
popa
daa
or
or
daa
imul
test
cmp
xor
pop
push
popa
jb
in
mov
mov
xor
mov
mov
adc
xorb
sub
and
mov
rcrl
mov
mov
pusha
inc
pop
mov
inc
push
push
scas
or
xchg
xchg
and
sbb
jne
dec
outsb
inc
pop
push
sbb
push
inc
xchg
fdivrs
dec
inc
xor
shrl
xchg
and
pop
push
jg
mov
outsl
fisubl
mov
add
push
mov
loopne
push
mov
out
pop
pop
sub
sub
aas
pusha
adc
sub
mov
xor
sbb
mov
sub
add
imul
and
sub
movsl
pusha
outsl
fsubs
adc
pop
outsl
xlat
inc
mov
inc
cmp
adc
test
pop
xor
add
cmpl
xor
xor
cmp
enter
xor
xor
lahf
mov
or
xor
das
and
xchg
bound
in
adc
mov
push
cmp
push
xor
pop
and
xor
in
sub
xchg
clc
jne
push
stc
mov
add
lods
add
jne
mov
ja
pop
arpl
add
arpl
xor
dec
pop
sub
and
pushf
cmp
push
ljmp
aad
lahf
inc
pop
dec
push
xorb
push
and
push
or
roll
pop
add
xchg
adc
mov
pusha
movsb
fdivs
stos
aas
push
or
and
insb
dec
lahf
push
enter
inc
fs
add
or
mov
gs
or
test
add
sbb
push
arpl
shr
sbb
ljmp
std
std
jge
lahf
jae
dec
mov
inc
push
or
inc
mov
inc
sbb
mov
or
ret
cmpsl
mov
lcall
adc
ficoml
imul
sbb
adc
push
and
xchg
mov
inc
push
push
push
aas
dec
inc
outsl
add
enter
sbb
fisubrs
push
adc
movsb
sbb
fiaddl
or
inc
xor
xor
mov
jo
push
or
adc
out
jae
jno
jno
cwtl
mov
lcall
les
leave
test
inc
sub
pop
add
popa
std
or
cmp
inc
inc
inc
dec
or
testb
jae
and
cmp
sub
dec
pop
sub
add
add
pop
jae
imul
pminub
inc
add
in
mov
jmp
inc
adc
fs
jb
dec
nop
dec
fsubl
das
dec
scas
pushl
sarb
in
cwtl
fcmovbe
pop
loopne
fildl
test
incl
sqrtps
add
add
cli
mov
dec
mov
idiv
icebp
jmp
out
sub
xchg
xor
pusha
in
inc
cmpsl
mov
add
mov
or
pop
incl
xchg
sbb
lea
mov
mov
cmp
imul
lcall
inc
mov
xchg
mov
mov
adc
cmpsb
xchg
mov
mov
jne
mov
pop
fcmovbe
xchg
mov
push
or
aas
mov
or
shlb
decl
movsl
xchg
dec
fwait
jge
es
rcrb
pop
cld
lret
mov
ljmp
aad
imul
or
mov
or
mov
lods
fcos
or
pushf
cltd
xchg
icebp
xchg
push
push
mov
mov
mov
jmp
je
andb
iret
and
mov
dec
inc
jae
jo
add
lods
adc
lcall
sub
iret
inc
xchg
jno
nop
stos
sti
lock
adc
jbe
mov
stos
fdivrs
ljmp
xor
push
fwait
jno
sar
pop
divb
adc
pop
call
fwait
aam
gs
jp
mov
andl
mov
pop
shll
neg
pop
jle
cmpl
fsubrs
sbb
mov
jge
pop
dec
mov
pop
es
sahf
enter
xor
push
sbb
xchg
cltd
jbe
pop
mov
mov
inc
xchg
cmp
adc
add
mov
jmp
xchg
cld
dec
cmp
xchg
adc
adc
sub
cli
hlt
dec
outsb
sbb
dec
jmp
lea
or
mov
adcb
mov
jmp
mov
jmp
add
cld
das
sahf
fcoml
jne
lahf
sub
call
xchg
adc
xchg
dec
or
sub
out
adc
push
jmp
jo
mov
cmp
minps
inc
mov
rcrb
mov
incl
xor
leave
inc
sbbl
cwtl
pop
jnp
xchg
stos
mov
lods
pop
imul
sti
mov
les
hlt
mov
inc
xchg
rorb
scas
push
dec
ljmp
push
fistpl
decl
les
sub
ljmp
push
xor
aam
xchg
cmp
das
out
push
push
out
sbb
ja
inc
lea
adc
lds
shrb
xor
or
push
inc
lret
fisttps
jmp
sub
mov
pop
das
push
into
xor
ja
pop
xor
nop
pop
add
inc
adc
out
push
add
mov
mov
mov
cmp
mov
dec
invd
cmp
dec
gs
insb
push
les
int
inc
pop
sub
add
push
lods
notl
fnsave
pop
push
mov
add
add
pop
cli
inc
cmp
cs
int
cmpsb
pop
addb
and
add
xor
notl
add
imul
imul
cmpsb
imul
imul
adc
pusha
insl
lea
jge
add
add
popa
fcos
ss
pop
sub
imul
ret
test
sbb
cmp
es
add
add
push
bound
popa
xchg
jbe
and
shrb
pop
pusha
insl
outsl
push
or
push
ret
push
insl
pop
pop
push
add
sbb
add
sbb
lea
push
scas
or
enter
pop
or
xor
and
push
fwait
or
add
imul
aaa
notb
adc
pop
loope
add
shll
add
sbb
xor
sub
insb
in
sbb
xor
shll
fdivrl
jl
xor
sar
add
xor
and
xor
shll
shlb
mov
shll
dec
lret
xor
sub
xor
shll
fidivrl
mov
sar
push
xchg
dec
shll
push
xchg
xor
shll
ss
shll
dec
into
dec
shll
push
sahf
xor
shll
fidivrs
mov
sar
add
xor
and
xor
shll
shll
mov
shll
dec
leave
dec
shll
sbb
pop
fnstcw
mov
sar
add
shll
adc
xor
aad
mov
shll
dec
int
shll
sbb
xor
fnstsw
jb
std
adc
or
xchg
push
xchg
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
xchg
imul
pusha
cmpsb
imul
imul
cmpsb
imul
imul
push
inc
ret
and
jecxz
pop
or
xor
sbb
or
add
sbb
push
shll
adc
dec
shll
sbb
xor
or
pop
pop
nop
cmpsb
std
iret
jno
add
add
or
or
mov
or
push
seto
adc
adc
adc
fs
sbb
mov
sbb
sbb
sti
pop
loop
xchg
adc
adc
fs
inc
adc
adc
sbb
sub
xchg
pop
sbb
ret
mov
sub
add
pop
push
jno
dec
or
push
gs
xchg
adc
sbb
xchg
gs
xchg
sub
cmp
pusha
pop
xchg
gs
jo
mov
pusha
sub
out
fstp
fstp
into
mov
xchg
pop
mov
in
js
xorl
jl
not
lods
cmpsl
pop
rcll
das
dec
jbe
fstpt
mov
imul
in
les
iret
xor
shll
pop
sbb
xor
rcrl
and
xor
dec
shll
andl
jecxz
inc
rorl
inc
sbb
pop
cmpsl
lahf
imul
sbb
xor
imul
lcall
add
or
adc
and
dec
push
xor
cli
pop
mov
jns
popa
insl
imul
jae
jae
cmp
imul
mov
push
orb
fmull
insb
insl
adc
push
dec
sub
aas
add
xchg
adc
test
inc
dec
adc
in
pushl
mov
rcll
xchg
xor
push
or
cmp
rclb
cmpl
cmc
jp
mov
scas
jnp
push
push
popf
xchg
daa
pop
aam
pop
mov
inc
test
mov
outsl
shlb
push
xchg
imul
inc
pop
push
int3
jge
dec
pop
xchg
or
rcl
fisubrs
shrb
dec
mov
sti
mov
push
jne
pop
cld
test
fldl
das
cmp
pop
lock
add
inc
nop
pop
repnz
jge
add
lcall
int3
dec
inc
dec
dec
cmpsl
mov
outsl
aad
or
insl
jg
dec
pop
dec
pop
push
leave
test
lret
or
and
mov
movsb
filds
dec
dec
cmp
cmp
dec
insb
jns
xor
add
das
das
adc
pusha
pop
pop
push
dec
pop
inc
xor
bound
int3
test
dec
lea
mov
inc
jne
jne
dec
jne
adc
insb
xchg
outsb
cmpsl
ret
and
cwtl
dec
pushf
out
inc
fsubs
jb
pop
inc
sub
xlat
out
out
out
mov
xchg
xchg
jbe
inc
scas
fs
mov
adc
out
stc
sbb
push
jne
inc
or
fnstsw
lods
jle
xchg
outsb
stc
pop
dec
inc
ds
popa
das
jo
or
vpcomb
pop
or
rcrl
aas
sbbb
jbe
aad
aaa
pusha
pop
fldt
jns
popa
push
push
push
popa
aas
insl
pop
cmp
gs
in
stos
push
mov
cmp
and
dec
cmp
add
mov
mov
popf
jne
jne
jp
in
cmp
pop
inc
inc
insb
jae
inc
push
in
adc
or
cmp
pop
imul
xor
scas
and
xchg
out
data16
push
xchg
push
xchg
in
test
sarl
aad
stc
sbbl
faddl
push
ljmp
and
dec
push
outsl
jno
fnstcw
test
pop
ja
pop
jnp
push
lock
push
je
js
inc
mov
mov
scas
or
push
add
faddl
clts
add
add
add
das
dec
lahf
add
and
cmp
pop
or
xchg
jle
xor
pop
xor
add
pusha
push
xor
js
or
jno
addr16
add
outsb
imul
adc
add
xlat
sub
dec
push
adc
add
and
sbb
and
adc
xor
pusha
and
xchg
add
jg
add
add
push
xor
lcall
call
adc
sbb
sbb
push
pop
and
and
and
jmp
daa
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
test
dec
clc
inc
inc
dec
dec
dec
pop
dec
dec
incl
push
mov
pop
pop
pop
incl
clc
aad
pop
adc
bound
addr16
clc
dec
clc
insl
outsb
outsl
jo
jge
jbe
js
jp
jl
jle
insb
jns
jmp
lahf
pusha
push
jecxz
repnz
sub
sbb
aas
mov
lret
jle
push
inc
add
inc
dec
jae
ja
aam
xor
gs
sbb
mov
sbb
dec
inc
dec
and
popf
aas
aas
pop
lods
pop
in
mov
xchg
push
dec
mov
das
mov
add
add
in
add
dec
dec
push
push
sbb
popf
orl
dec
inc
and
sti
push
xor
cmp
sub
frstor
rcrl
ror
call
test
out
ja
sbb
clc
add
das
or
mov
outsb
jg
daa
add
pushf
shll
shrl
out
fistl
cwtl
jb
cmp
or
xchg
cmp
push
pop
pop
pop
nop
dec
add
cwtl
sarb
test
lret
add
outsl
xor
fs
jo
daa
imul
dec
jg
ret
xor
pop
aaa
add
add
das
mov
mov
imul
mov
xorl
fsubs
cmp
xor
sbb
pop
rorb
loope
cmc
cmp
sub
test
pop
add
dec
and
sbb
pop
cli
xor
popa
sti
out
lret
push
cmp
adcb
add
xorb
xchg
loop
push
xor
hlt
adc
push
cmp
test
add
jae
xor
aad
je
ret
bound
jecxz
shl
add
xor
sub
cmovl
pop
outsb
or
sbb
or
push
and
ljmp
add
cmp
in
adc
jae
dec
popa
dec
adc
pop
dec
jae
sahf
movsl
pop
push
pop
pushf
mov
mov
and
and
and
out
xchg
pop
bound
bound
and
bswap
movl
xchg
inc
cmp
mov
shll
push
je
mov
push
cmp
cs
xor
or
adc
adc
dec
andb
cmp
out
jae
lret
insb
jns
pop
jne
call
aas
lods
jne
jle
xchg
cmp
aad
lods
add
inc
mov
cmp
and
jle
sub
popa
mov
lods
jne
inc
push
or
or
mov
adc
add
add
test
mov
enter
push
sub
mov
push
sub
inc
rcll
mov
add
add
clts
pop
lods
iret
mov
add
pushw
add
sub
leave
push
mov
add
adc
orl
arpl
stos
sbb
mov
add
jbe
rcrl
add
cs
pop
pop
add
jg
aam
shll
add
fucom
dec
dec
jb
jle
fsubp
sbb
loop
and
outsl
pop
or
mov
fldenv
and
mov
and
test
dec
jecxz
roll
ss
add
jne
mov
pop
daa
xor
aaa
inc
outsl
testl
mov
pop
shl
mov
das
jmp
dec
in
in
in
pop
xor
push
dec
inc
dec
add
dec
dec
inc
add
shrl
cs
paddw
std
test
push
lods
push
dec
shrl
stos
ret
scas
xor
fwait
scas
add
call
inc
push
xchg
xlat
xchg
mov
or
and
inc
dec
test
repz
dec
jecxz
push
push
push
std
xlat
setno
jns
jo
bound
xor
adc
inc
das
sub
pusha
add
push
iret
mov
push
mov
push
insb
daa
add
das
jle
es
mov
pushf
and
add
xchg
add
les
call
add
xchg
add
mov
xchg
pop
mov
or
dec
jle
push
mov
jl
xchg
or
daa
jbe
xchg
pop
pop
dec
push
nop
rcr
loopne
repnz
int3
bnd
cs
or
xchg
xor
push
cmp
pop
cmp
xchg
aas
addb
add
lcall
fidivl
out
clc
add
or
shll
ds
xor
shll
pop
data16
shll
mov
dec
mov
lret
call
repnz
push
add
and
lcall
out
xor
cmpsb
cld
adc
cmp
pop
ss
jg
add
lcall
push
and
lcall
sub
xor
cmp
add
sub
mov
dec
shrl
bound
pop
ss
shll
adc
dec
jbe
shll
sub
jmp
or
pop
or
cmpsb
imul
mov
repnz
push
ds
shll
fsubr
cmpsb
imul
mov
lcall
sbb
cmpsb
imul
dec
shll
cwtl
mov
fisubl
adc
xchg
lret
in
jge
popf
sbb
sub
cmpsb
imul
and
decl
add
add
rorb
movb
insb
leave
int3
into
daa
faddl
in
or
cli
lods
push
pop
in
dec
pop
mov
push
inc
or
mov
mov
aaa
call
sti
outsb
in
and
pop
out
iret
xor
addr16
jo,pn
fists
ss
ss
loopne
ss
or
and
mov
sbbb
mov
dec
jo
jno
rclb
rclb
lcall
add
andb
lods
cmpsl
or
roll
sub
leave
ss
into
insb
lret
dec
aaa
insl
jns
push
xchg
mov
shr
into
rclb
mov
xlat
popa
addr16
xchg
dec
push
stos
int3
push
roll
inc
ss
leave
xchg
shll
loope
jns
fwait
dec
in
push
aam
aam
xor
aam
mov
fsub
scas
in
insb
stc
fmul
fstl
push
repnz
add
inc
rolb
loop
inc
scas
in
jecxz
je
sbb
sbb
fstps
out
out
enter
in
sarl
das
and
lahf
push
dec
dec
pop
push
shll
dec
in
adc
inc
fbld
shlb
shrl
movsb
aas
in
xchg
mov
inc
loopne
adc
and
adc
cmp
jl
repnz
aam
aam
sbb
sbb
xchg
test
cwtl
mov
idiv
cmp
add
or
pop
cmp
rcll
cmp
add
mov
bound
add
cmp
or
xchg
faddl
shrl
and
aaa
test
notl
and
je
mov
les
add
in
repnz
add
inc
xor
and
das
cmp
and
jb
test
cmp
sbb
sbb
pop
aas
sahf
mov
and
inc
xlat
jb
das
inc
lods
inc
test
leave
and
je
jae
out
lahf
int3
push
push
call
dec
push
adc
add
push
fadds
add
push
fcomp
fwait
stos
scas
inc
fdivs
and
mov
jg
pop
sbb
xchg
filds
rolb
pop
leave
or
jno
inc
jb
flds
nop
dec
hlt
xor
fistps
dec
pop
imul
pop
and
outsb
adcl
enter
fbstp
mov
or
xor
or
fisubl
test
test
and
in
fcmovb
ficoml
aam
cwtl
jmp
xchg
pop
mov
int3
and
xchg
mov
pop
fcomi
inc
ss
enter
xchg
filds
jb
das
sbb
adc
and
xor
popa
cltd
sub
or
clc
cmp
out
test
negl
in
pop
in
fwait
js
fcoml
stos
pushf
scas
in
mov
call
fcomps
fldl
pop
jnp
lret
inc
push
call
push
mov
scas
addr16
fisttpll
pop
repnz
loopne
mov
dec
pop
leave
fidivl
fwait
stos
in
jno
mov
mov
cwtl
mov
fiadds
nop
xchg
xchg
cmp
jl
pop
enter
pop
push
fbld
in
enter
sbb
sbb
movsb
dec
icebp
dec
enter
fsubs
loop
loop
dec
jb
sub
sbb
pop
fistps
in
lahf
adc
and
mov
in
fdivrl
sbb
inc
ss
in
mulb
inc
mov
das
xchg
push
and
xor
push
cs
imul
inc
jbe
dec
add
sbb
imul
imul
lahf
and
push
mov
nop
add
lods
dec
xlat
or
nop
inc
fistpll
mov
popa
icebp
out
movsb
inc
enter
and
add
dec
cmp
or
sahf
sub
push
xor
and
imul
pusha
inc
push
inc
xor
push
jns
dec
push
add
test
outsl
emms
inc
xchg
dec
cmp
xchg
add
cltd
add
xchg
lods
or
int
add
and
nop
cmpsb
or
push
leave
xchg
pop
enter
add
insl
fsubs
cvtpi2ps
add
cmp
cmpsb
imul
movsb
cmp
lcall
test
fs
and
mov
cwtl
cs
int
popa
subl
repnz
and
add
fs
push
outsb
mov
xchg
cmpsl
jo
mov
inc
push
sbb
data16
out
xchg
data16
add
mov
pop
and
enter
clc
in
in
in
imul
push
or
add
inc
inc
movsb
or
pusha
xchg
packsswb
imul
jnp
ss
mov
fs
and
or
mov
add
nop
cmpsb
sbb
ret
aad
pusha
or
pop
out
sbb
add
or
fisubl
and
aam
in
roll
out
xor
mov
xor
xor
inc
int3
lock
call
or
iret
pop
xor
inc
insb
pop
lahf
jae
orl
and
mov
ja
lods
enter
jmp
add
loope
or
leave
xchg
daa
dec
adc
sbb
and
sbb
add
jmp
ret
push
inc
cmovle
inc
lcall
and
or
insb
nop
cltd
xchg
addr16
or
adc
fsubl
or
aam
insb
xchg
xor
sahf
cmp
andl
or
dec
rorl
add
test
dec
add
ss
adcb
lock
movlhps
ljmp
outsb
mov
jb
test
sarl
aas
jbe
or
add
jmp
inc
js
ret
xor
sbb
add
dec
ret
lret
insl
subl
mov
dec
inc
mov
mov
push
xchg
pop
jbe
inc
aaa
add
or
add
push
cmpsb
dec
dec
mov
pop
into
in
iret
xchg
dec
xor
xor
mov
jg
fadds
jb
xchg
add
and
sbb
sbb
in
pop
orb
or
add
fdivr
pop
and
fs
inc
enter
or
push
xor
push
test
xchg
cmpsb
or
add
mov
push
dec
push
fs
enter
xchg
fninit
sbb
sbbb
daa
outsl
outsl
pop
or
xchg
test
aaa
push
daa
ja
imul
fs
bound
add
xor
jb
jp
xchg
push
sbb
push
aam
mov
stos
mov
push
xor
and
enter
xor
or
jmp
testb
or
or
das
nop
int
adc
push
and
sub
push
test
push
or
ja
sbb
push
add
popa
or
pop
insb
or
add
xchg
push
lods
add
cwtl
add
loopne
push
jb
add
sub
add
add
adc
add
or
fcoml
repz
add
dec
insb
add
add
mov
enter
cld
mov
pop
and
out
in
pop
fmuls
and
mov
inc
xchg
mov
fdivr
leave
or
addb
push
or
and
xor
fldln2
and
xor
fsubs
inc
dec
insb
dec
push
mov
add
nop
push
pop
jp
add
add
jbe
rcll
xor
nop
and
ficoml
or
fs
mov
mov
xor
ror
sbb
pusha
inc
in
loop
push
leave
add
divl
outsl
cld
pop
jb
sbb
shll
push
divl
adc
push
in
out
cmp
inc
push
ja
push
jno
jnp
xchg
push
jns
or
xchg
or
enter
aaa
in
and
dec
addr16
add
into
addr16
test
push
call
fmull
xor
add
adc
loopne
sbb
scas
loopne
sbb
sbb
aaa
getsec
aas
divps
inc
add
push
or
subl
and
sbb
mov
pop
pop
or
in
mov
adc
push
sbb
mov
enter
ss
rcll
pusha
pop
adcb
out
and
xchg
daa
pop
mov
adc
es
inc
das
inc
add
enter
test
or
add
addl
adc
adc
shrl
insb
nop
popa
xorl
bound
notb
xchg
sbb
out
div
testb
or
pop
adc
push
mov
fiadds
adc
addr16
jg
adc
xor
push
add
dec
inc
dec
xor
push
push
mov
clc
data16
and
add
sbb
add
adc
push
jmp
enter
stos
mov
xor
and
int3
aam
iret
push
add
das
call
xchg
addr16
addr16
cmp
in
and
adc
sbb
daa
and
nop
and
push
push
pop
adc
movsb
sbb
adc
lods
sbb
jle
xchg
sbb
lahf
ja
mov
dec
roll
ret
push
push
roll
xor
rorl
in
or
or
xchg
and
adc
out
push
call
cmp
cmp
dec
push
cs
add
pop
pusha
adc
das
imul
sbbl
adc
jle
das
imul
inc
lcall
cmpsb
imul
lcall
imul
lcall
lcall
mov
inc
lcall
or
and
and
lcall
sub
sub
imul
sub
cmpsb
imul
xor
pop
push
imul
push
imul
cmp
imul
cmp
test
fstps
inc
je
mov
jns
adc
adc
adc
adc
leave
xchg
daa
add
adc
cmp
repnz
adc
push
cmpsb
imul
cs
lcall
cmpsb
imul
nop
ficoms
sbb
lcall
push
sbb
sbb
rorl
cs
es
cs
shll
xor
and
int
dec
and
and
dec
xor
and
rorl
xor
jle
sub
xor
mov
xchg
sahf
sub
cmpsb
cs
mov
xor
xor
xor
into
or
xor
out
fs
cmpsb
push
ss
stc
add
xchg
adc
cmp
adc
daa
daa
nop
fwait
cmp
add
pop
sub
in
xchg
pop
ss
inc
pop
dec
pop
dec
sahf
cmp
push
pop
bound
insl
pop
js
in
xchg
daa
adcl
pop
cltd
pop
popf
cmp
repnz
pop
scas
pop
mov
imul
dec
xor
adc
push
adc
out
push
stc
pop
testb
dec
rorl
push
sbb
sbb
sbb
sbb
sbb
inc
push
push
pop
pop
and
fnop
xor
and
sbb
in
in
mov
add
in
cmp
das
daa
dec
fidivs
sbb
sbb
sbb
xor
mov
sbb
das
fisttpll
in
xor
or
cmc
or
xor
add
adc
adc
sbb
imul
cmpsb
inc
pop
dec
push
sbb
cmpsb
imul
imul
xchg
aaa
lea
xchg
sbb
pop
enter
sbb
dec
sbb
sbb
das
popa
xorl
das
nop
cmpsb
imul
jo
sbb
push
or
adc
lcall
imul
cmpsb
sbb
push
adc
push
gs
insl
sbb
imul
nop
lea
cmpsb
sbb
cmpsb
imul
int
lcall
in
insl
nop
cmpsb
daa
in
cmc
push
sub
mov
fnop
sub
add
jns
in
pop
sbb
sbb
cmp
das
cmp
shlb
pop
push
xor
rorl
or
imul
xorl
or
and
shll
adc
dec
mov
adc
or
lret
rcrl
fistpl
shll
xor
jmp
repz
sti
add
or
shll
pop
pop
adc
and
xor
and
sub
and
dec
xor
and
rorl
xor
pop
arpl
imul
int
mov
sbb
jo
ret
cs
push
popf
inc
add
ret
sahf
mov
cmpps
mov
lret
xor
pusha
inc
fdivrl
adc
and
add
push
dec
pop
push
ret
mov
imul
or
es
sbb
pushf
xchg
setb
das
inc
or
xor
xchg
push
es
enter
lahf
cmpsl
adc
xor
fwait
cmp
test
inc
jbe
mov
and
inc
add
sub
lret
inc
jo
pushf
xor
enter
lcall
popa
ja
sahf
out
repnz
imul
test
xor
xchg
lods
dec
jge
subl
pop
das
pop
adcb
jbe
xlat
mov
cs
inc
push
pop
fimull
add
mov
aaa
add
xor
je
jne
sbb
stc
dec
inc
mov
jnp
cmp
inc
push
inc
sub
dec
mov
mov
lods
sub
lea
and
or
aas
cs
mov
inc
xor
or
test
or
add
iret
outsb
rcrl
inc
into
add
adc
out
in
dec
repnz
je
outsl
pop
jb
outsb
addr16
inc
push
js
cmpsb
imul
cwtl
imul
ja
popa
push
out
mov
ljmp
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
pushl
jle
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
incl
adc
insb
push
arpl
psubd
or
outsb
cmp
imul
addr16
incl
cmp
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
aas
addb
inc
iret
or
lods
xor
fldenv
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
lods
incl
sub
mov
aaa
or
adc
decl
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
cmp
movsl
in
lahf
xor
mov
js
stc
jg
test
xchg
sbb
push
sub
insb
fs
add
hlt
push
imul
or
test
insb
jnp
add
inc
hlt
or
fnstenv
adc
mov
mov
bound
ficoml
repz
mov
aam
pop
popa
mov
into
pop
cmp
mov
inc
movsl
push
dec
xlat
xchg
fadd
shll
jmp
outsb
xor
mov
sarb
ljmp
add
pop
dec
or
cmp
add
daa
adc
or
and
mov
push
mov
outsl
and
aam
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
incl
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
dec
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
add
inc
push
imul
test
insb
sbb
push
imul
aam
loopne
aas
cmpsb
pop
pop
jp
adc
dec
frstor
fistpll
mov
mov
call
mov
jle
shll
push
repnz
addr16
cmpsb
fldl
mov
decl
mov
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
ljmp
es
lds
or
sub
mov
cmpsl
call
ret
shlb
lcall
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
call
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivrl
jmp
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
outsl
add
inc
mov
out
sti
jo
aas
cli
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
push
js
loope
decl
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
mov
shrl
or
inc
decl
mov
fidivrs
mov
jmp
repnz
inc
mov
push
cmpsb
mov
sarb
sub
push
mov
jp
mov
loopne
decl
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
and
mov
decl
or
adc
add
cmp
movsb
shlb
lahf
sub
insb
dec
in
jmp
and
inc
ja
sarb
iret
push
mov
mov
lods
rcr
jl
mov
test
pop
or
clc
push
xchg
sbb
jns
cmpsb
or
shrl
std
das
mov
sbb
in
scas
loope
xchg
decl
lret
nop
jl
cltd
jg
icebp
inc
cltd
mov
mov
push
decb
cld
mov
call
mov
cmp
xchg
or
pop
int
jno
dec
adc
jnp
pop
loopne
lcall
cmp
xor
mov
pusha
sub
jns
lret
fstpt
pop
inc
mov
sbb
pusha
mov
sahf
insb
mov
mov
ja
xlat
daa
dec
xor
pusha
pop
jmp
repz
push
stos
bound
call
push
mov
stos
sub
int3
mov
call
inc
adc
jmp
out
mov
mov
test
jg
cmp
xchg
xchg
pop
iret
and
adcl
xchg
fists
scas
mov
mov
int3
or
popa
xchg
test
sti
pusha
lods
jl
xor
out
mov
test
add
fmull
mov
ljmp
inc
hlt
addl
test
fwait
pop
sahf
inc
push
es
ljmp
popa
pushf
or
lock
stos
rcrb
push
das
push
fsubrs
cmpsl
setbe
or
outsb
in
jp
push
or
push
sti
jle
gs
mov
ds
lret
push
inc
sbbb
out
mov
aas
inc
movsl
test
pop
mov
outsl
loopne
and
test
push
push
bound
call
jb
sbb
xlat
shlb
dec
adc
rcl
ljmp
push
dec
leave
jb
pop
jnp
cltd
sbb
aam
neg
call
jecxz
dec
jns
mov
push
ud0
inc
add
dec
test
inc
ret
pop
arpl
sbb
push
aad
inc
pushl
push
cmp
push
cld
insl
sub
xor
mov
jecxz
decl
fiadds
sub
add
sbb
lret
rorb
enter
or
sar
mov
or
pusha
sbb
add
inc
and
pop
sti
clc
jmp
xor
fists
jne
adc
push
das
stos
push
add
pop
xchg
std
decl
xor
filds
ds
mov
cs
xchg
fldt
fcomip
test
aad
jle
inc
xor
jae
dec
mov
pop
lret
mov
lock
mov
aad
ljmp
dec
pop
rcl
sub
gs
clc
mov
dec
mov
jmp
xor
movsb
inc
adc
call
lret
add
sahf
jle
mov
icebp
sub
call
jno
lods
ljmp
mov
loopne
scas
das
pop
cmp
mov
jne
sti
loop
cld
decl
adc
or
dec
sbb
iret
shrl
incl
sbb
ja
push
mov
mov
int3
mov
mov
rep
lcall
cltd
loop
into
loopne
test
mov
adc
cmpl
lods
shlb
pop
push
add
jae
inc
call
and
cmc
inc
push
iret
xor
int
mov
jnp,pt
sbb
dec
jle
scas
sub
mov
aas
cli
aas
stos
push
push
fwait
ss
mov
arpl
cmpsb
fistps
add
incl
js
push
pop
fldenv
mov
jg
test
sbb
adc
jae
lret
mov
test
push
sbb
jg
aas
push
in
fwait
mov
add
mov
mov
push
imul
repnz
jg
adc
arpl
cs
test
pop
sub
lahf
lahf
out
test
pop
test
jo
dec
inc
sub
fildl
pushl
fbld
pushf
data16
jno
stos
in
call
lcall
lock
jg
mov
movsl
add
sbb
dec
pop
inc
adc
cmp
in
cwtl
push
aas
gs
inc
pop
jg
imul
negl
cmc
xor
out
out
sub
lock
fisttpll
jo
incl
int3
push
add
imul
out
mov
cmp
jo
imul
ljmp
pushf
mov
pop
push
stos
sbb
pop
xchg
scas
fidivrs
inc
jge
mov
repnz
push
aaa
fidivrl
mov
or
add
pop
pushl
or
ljmp
pop
jp
and
stc
adc
jl
inc
xor
in
cmp
fcmovb
aaa
xor
mov
cmpsl
lcall
rorb
ds
enter
jne
cltd
int
cld
jmp
das
push
ljmp
mov
sbb
mov
mov
inc
outsl
mov
jg
sub
jl
and
mov
push
scas
mov
ficoms
or
mov
aas
cmp
dec
fcompl
jb
push
and
imul
xchg
test
call
fimull
je
lcall
cmp
jp
cli
sbb
or
ret
les
sbb
decl
fsts
fstl
mov
mov
sub
add
sahf
clc
fbstp
call
xor
ja
sbbl
mov
cmp
movsl
and
in
out
repnz
jmp
xchg
sub
mov
jo
jecxz
mov
jmp
xchg
jmp
pop
sbb
inc
cli
push
cmp
sub
sbb
andb
push
js
dec
cs
adc
ljmp
hlt
sub
div
cmp
sub
sbb
ret
cmpsl
and
adc
imull
lods
jmp
pop
ret
ljmp
popa
mov
cmpsb
shll
jg
sub
mov
out
fnsave
jecxz
incl
push
pop
insb
mov
add
into
out
cmp
decl
sub
and
jne
fucomp
adc
int3
adc
lcall
xor
iret
arpl
stos
nop
pop
jae
cmp
sahf
aad
fisubrs
out
cmpsl
sub
pusha
ljmp
test
mov
push
mov
mov
mov
xor
inc
mov
sub
call
jmp
and
sbb
push
fwait
cltd
mov
notl
lcall
xchg
lcall
in
adc
mov
mov
mov
cmc
push
arpl
sbb
inc
sbbl
or
push
in
out
bnd
ljmp
jmp
sub
jae
jl
fsts
pop
jecxz
fs
lods
and
incl
stos
stos
mov
rorb
cli
inc
hlt
inc
mov
push
sbb
and
inc
sahf
jns
fadd
dec
test
push
bound
iret
inc
lea
orl
ret
and
jg
je
imul
mov
push
add
sbb
add
andb
lea
jg
cmc
push
or
hlt
lods
sbb
xchg
lock
inc
jle
icebp
in
pop
fstpt
and
pushl
fidivrs
out
lret
cmpsl
repnz
xor
test
clc
sbb
out
call
stos
jmp
or
cld
stos
add
fmul
or
test
std
leave
sahf
push
push
sarl
int
push
adc
pop
addr16
inc
jcxz
xor
jno,pt
sub
and
insl
icebp
out
ds
sub
sbb
pop
cmp
xchg
sbb
dec
idiv
call
pushl
imul
hlt
mov
jno
or
push
and
pushl
mov
mov
scas
popa
add
idivb
push
inc
inc
and
je
and
mov
dec
scas
xchg
mov
cli
jg
xchg
rcr
hlt
xor
or
insl
lods
jg
call
test
lds
jmp
inc
cmp
push
out
and
stos
and
sub
jg
fiaddl
mov
sub
int
dec
xlat
movsb
rorb
out
lea
aas
dec
mov
mov
jl
into
stos
in
pop
aaa
rcrl
sub
xor
sahf
and
xlat
cmp
mov
cmp
cli
leave
sbb
xor
es
jecxz
je
xchg
cli
outsb
cmp
inc
pop
out
push
dec
cmc
xchg
mov
fsubrs
add
dec
les
pop
aas
sbb
decb
xchg
sarb
adc
int3
xor
loope
push
scas
decl
cmpsb
stc
and
hlt
pop
jl
sub
jo
daa
add
adc
jmp
sub
add
and
in
adc
dec
faddl
stc
pop
nopl
movsb
jns
inc
jg
les
outsb
cmp
rcrb
sti
jmp
inc
xor
jnp
pusha
pushf
sub
fistps
insb
arpl
ret
push
sahf
xor
add
dec
decl
adc
xchg
and
xchg
xor
and
mov
mov
cltd
decl
jb
sub
mov
sar
xchg
mov
bound
jge
lock
int3
out
mov
decl
xchg
std
popf
ret
push
lea
repz
arpl
je
cs
stos
outsb
outsl
cmp
std
clc
hlt
pusha
fcoml
test
pop
std
fucomp
mov
imul
push
jnp
aaa
sub
insl
cmp
gs
call
fadd
or
add
xchg
mov
in
punpckhwd
lahf
jnp
pushf
jge
into
or
xchg
mov
call
mov
mov
cmp
cmp
jns
call
int3
xchg
loop
subb
inc
push
int3
dec
jne
sbb
js,pn
inc
adc
push
call
push
push
arpl
dec
sbb
imul
in
lret
mov
loope
pop
push
inc
inc
xchg
lcall
in
or
sub
fs
test
fimull
ret
in
push
incl
div
clc
jnp
pusha
dec
pusha
add
cmp
mov
cmp
add
inc
ja
cld
xlat
xor
ljmp
xorl
lock
mov
pop
add
push
mov
mov
popa
cs
mov
push
pop
dec
mov
out
je
ret
xchg
stc
push
je
mov
push
bnd
mov
jmp
jmp
test
sbb
test
xchg
pop
xchg
mov
inc
jo
mov
xchg
push
aad
dec
fiadds
leave
loope
ljmp
mov
sahf
test
jg
or
test
xor
les
lcall
pop
call
and
outsb
sbb
fbld
mov
cmp
fidivl
push
fwait
into
loop
push
jg
dec
add
push
cli
addl
les
out
daa
decl
ja
dec
pusha
ret
mov
test
sub
lock
cmc
shrb
fdivl
xlat
cli
push
lcall
cmp
xchg
ffree
push
xor
ret
cmc
mov
mov
push
jbe
pop
into
or
add
dec
cmp
jmp
xchg
jl
jb
xchg
pop
rcrl
mov
push
in
mov
cld
or
jl
fdivr
inc
shrd
out
push
push
clc
out
mov
test
out
aad
inc
dec
loope
into
mov
fnsave
lcall
cli
push
loopnew
pusha
inc
aaa
into
cmp
dec
cmc
cli
shll
ja
stos
sbb
mov
inc
aaa
mov
sarl
mov
aad
cmp
adc
sbb
jnp
add
imul
mov
cmp
mov
outsb
ss
ljmp
stos
dec
push
jns
xchg
mov
enter
out
clc
rcpps
lea
or
dec
sar
ud0
dec
fstpt
mov
lods
add
pop
xchg
aad
mov
loop
add
out
arpl
out
xchg
imulb
and
stos
add
movsl
movsb
shl
pushf
mov
add
adc
fs
loope
mov
xchg
test
shr
das
push
imull
add
pop
or
ja
call
xchg
fwait
xchg
in
cmp
nop
jmp
fnstenv
sub
ud0
cmp
add
ds
shrl
sub
lahf
pop
fwait
mov
lcall
cmc
mov
lods
sub
out
sbb
std
lods
mov
fwait
cli
xchg
in
shr
int3
push
cmp
sub
decl
clc
sub
adc
add
pusha
jne
inc
push
xchg
testl
mov
popa
mov
sbb
nop
cmp
sbb
xchg
sub
cmp
loopne
jg
cmc
and
sti
stos
cmc
sbb
fdivrl
xor
lcall
std
mov
xor
add
ja
sub
ret
int3
stos
pop
xchg
lods
int3
push
pop
jmp
call
bound
aaa
xchg
stc
and
into
jnp
sti
fs
and
mov
mov
inc
cmp
fimuls
out
adc
scas
mov
std
sub
loopne
jmp
pop
or
inc
lcall
fisubrs
enter
mov
decl
ror
mov
push
decl
inc
or
mov
mov
adc
inc
outsl
cmp
arpl
fwait
rcrb
pop
das
push
sbb
scas
jo
dec
testb
pop
out
push
jb
pop
jge
scas
incl
clc
decl
lret
inc
inc
int3
loop
dec
push
shlb
arpl
sub
loope
cmp
pushl
outsb
into
cmpb
outsl
subb
add
daa
jb
mov
adc
out
push
sub
mov
cmp
push
mov
xor
leave
mov
sbb
jmp
not
mov
stos
call
sbb
sarb
fimull
aad
ret
cmp
mov
ss
jl
stc
lea
mov
mov
sahf
notl
aad
incb
daa
sub
xchg
xchg
cld
out
jno
xchg
adc
inc
cli
jmp
mov
pop
fs
shrl
shll
jecxz
push
rclb
inc
movsb
add
push
icebp
loopne
fistpl
dec
fs
std
jmp
pop
lahf
fists
mov
mov
or
ud0
and
jbe
lea
cltd
fwait
aaa
or
sbb
fimull
jmp
xchg
fcomp
push
iret
jns
into
outsl
jle
int
mov
push
add
rorb
notb
and
push
and
cmpsb
xor
int3
push
bound
jne
xchg
ss
outsb
int3
jae
mov
dec
mov
dec
adc
jno
mov
xor
shl
inc
lcall
aas
cli
dec
add
test
loop
and
xor
and
add
push
lret
mov
pushf
jg
jbe
sarb
push
jmp
push
pusha
mov
inc
and
jbe
inc
test
mov
and
lret
test
call
jp
stos
stc
dec
pop
ret
decl
ret
add
loope
imul
pop
cmpsb
sub
out
ret
dec
mov
add
lcall
ja
jecxz
push
out
ret
cmp
xor
int
insl
push
jl
pmullw
jo
push
push
mov
xor
aaa
fsubrs
insl
mov
jns
push
pop
lods
das
add
daa
add
ret
fiadds
js
adc
mov
and
in
dec
add
movups
das
jo
push
imul
ds
or
insb
nop
inc
and
or
jle
inc
loopne
sbb
aas
pop
sbb
push
cmp
or
xor
rclb
push
sub
or
dec
lock
or
lods
jecxz
sub
xor
and
or
andl
leave
and
orl
aas
pop
aas
sbb
orl
push
push
jl
adc
incl
sub
or
xor
and
addl
adc
and
and
or
and
addb
enter
pop
sbb
and
and
adc
sub
mov
xor
and
enter
add
jbe
and
and
lods
orl
push
xchg
or
enter
push
xor
and
and
aas
ret
push
sbb
mov
nop
popa
aas
mov
inc
xchg
call
adc
pushl
nop
inc
xchg
and
sbb
addl
pop
inc
xchg
xchg
jns
xchg
shrb
sbb
mov
mov
repnz
test
add
nop
or
enter
orl
gs
enter
ljmp
lcall
fimull
enter
mov
or
nop
or
push
adc
enter
jae
xor
nop
or
arpl
enter
cmpsb
add
inc
out
enter
sbb
xor
imul
or
sub
enter
enter
push
pop
ja
nop
or
aaa
into
and
daa
scas
pop
nop
or
enter
nop
or
enter
nop
or
enter
pusha
sbb
aas
das
mov
cmpsb
aas
aas
dec
mov
shll
xchg
and
mov
mov
dec
cs
test
in
fnstcw
stc
lds
in
dec
cs
xchg
aad
in
in
cmc
int
cs
mov
mov
cs
mov
mov
cs
mov
mov
mov
lret
stos
jmp
and
leave
nop
sub
sti
pop
and
and
jb
out
xchg
pop
and
xlat
mov
jb
jb
iret
pop
and
leave
scas
out
lahf
leave
inc
jb
fistpll
incb
in
fcmovu
push
adc
push
add
pop
add
inc
pop
data16
in
inc
jg
push
pop
add
jns
and
or
lcall
pusha
jmp
orl
sbbl
sbb
push
popa
daa
xchg
jb
leave
and
or
jb
fistps
clts
pop
aas
jg
cmpsb
imul
insb
lcall
into
mov
lahf
pop
push
outsb
mov
mov
mov
popl
subb
pop
enter
dec
or
sub
mov
or
jae
jmp
fildll
add
inc
fwait
xchg
lret
cli
fs
and
imul
adc
or
int
imul
shll
sarb
mov
pop
test
imul
insl
nop
cmpsb
jl
insb
push
fs
shll
xor
shlb
or
and
and
or
pop
mov
adc
aas
pop
push
mov
push
aas
add
or
pop
stc
in
add
add
movsb
add
jns
and
outsl
pop
movsl
sbbl
insl
test
shll
decb
enter
inc
mov
inc
sub
pushl
mov
iret
mov
in
call
push
fnstcw
adc
push
ficompl
mov
xor
into
notl
fcomp
loopne
jae
jle
jl
mov
push
inc
push
add
test
dec
xor
les
mov
inc
mov
stos
push
mov
xchg
pusha
dec
add
pusha
cwtl
jbe
inc
lmsw
scas
add
add
add
adc
dec
repz
push
cs
push
add
add
or
popa
orl
or
aaa
mov
pop
nop
or
fnstsw
popa
fcoml
movl
and
insb
fsubs
push
addr16
das
push
movnti
pop
imull
pop
xchg
arpl
xchg
jo
sbb
andb
addb
cmpb
test
fs
cmpsb
sbb
orl
fbld
sbb
into
aas
xlat
pop
sbb
shll
out
sub
cmpsb
pop
ss
add
push
mov
lcall
mov
sbb
dec
shll
in
mov
lcall
jns
cld
mov
jp
call
mov
rolb
push
add
or
and
lea
mov
nop
xchg
daa
xchg
or
xchg
xchg
iret
inc
or
lahf
or
leave
stos
mov
lock
pop
jns
xchg
cld
push
push
push
jg
ss
mov
lahf
arpl
les
daa
aas
ss
push
lock
out
cmp
push
int
imul
inc
xlat
ss
add
mov
rcrl
dec
das
test
imul
or
pop
jbe
movb
scas
xor
jg
xor
mov
pop
or
xor
dec
cmpsb
incl
andl
xchg
adc
xchg
mov
or
or
enter
ret
mov
adc
jg
inc
and
sbb
dec
into
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
call
add
inc
stc
mov
adc
mov
decl
js
jg
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
fdivrp
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
incl
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
push
mov
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
cmpb
ljmp
leave
fwait
xchg
and
sbb
int3
add
mov
sti
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
jmp
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
testl
movsl
daa
ljmp
mov
inc
rcr
push
ds
jnp
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
decl
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
push
popa
jecxz
andl
dec
dec
gs
std
orl
clc
lcall
lahf
into
ror
add
cmpsb
fmuls
das
inc
test
add
add
mov
mov
adc
movsl
cmp
dec
xor
sahf
lea
and
dec
sbb
inc
push
inc
and
pop
bound
or
mov
xor
adc
dec
push
dec
cmp
or
mov
push
ja
sub
jmp
cwtl
inc
lea
adc
cmp
mov
sub
push
sub
dec
cmp
cmp
xchg
sbb
hlt
xlat
push
imul
outsb
lods
push
xchg
mov
push
sub
jne
push
inc
inc
sub
and
add
ja
and
test
testb
rcl
pop
addb
rolb
fcmovnu
mov
addb
or
leave
cmpsl
jbe
add
add
xor
push
add
andb
stos
in
sbb
and
sbb
imul
push
jg
jg
cmp
in
xor
push
mov
add
add
pop
pushl
sub
add
sub
add
cmc
add
add
push
sti
add
adc
add
gs
das
dec
lahf
lods
add
and
jmp
loopne
aas
dec
pop
in
cli
add
xlat
add
pop
sub
sub
hlt
incl
in
das
sbb
xor
add
pop
add
jge
add
lret
out
add
push
jg
fcoml
jmp
fiaddl
test
mov
mov
jmp
add
cmp
aad
ds
add
daa
xchg
lcall
adc
add
and
add
add
pop
pop
add
or
add
arpl
add
repnz
enter
aaa
xor
testl
cmp
fcmovu
add
or
sub
sbb
cmp
pop
push
push
aas
in
aam
hlt
mov
pop
add
fcoml
int
mov
scas
pop
push
pop
cmp
pmaxsw
xchg
sbb
loopne
iret
cltd
add
jg
mov
add
sbb
movsb
int
pop
push
add
cmp
mov
pop
fs
jae
call
pop
out
test
out
sarb
add
fmull
bound
ja
mov
mov
sarb
jno
add
gs
jmp
data16
add
in
in
xchg
jle
sub
shlb
cmp
add
ja
mov
mov
push
cmp
clc
int3
lods
aam
pop
jnp
jg
inc
ja
pushf
insl
outsl
aam
add
adc
rcrl
fsubrl
je
cmpsb
aam
hlt
in
add
inc
and
fdivl
lods
pop
cld
sbbl
push
shlb
pop
push
test
psubusw
pop
loope
shr
push
lcall
fmul
xchg
or
js
pop
xchg
in
cld
loop
test
push
addl
pop
hlt
inc
jecxz
mov
pop
pop
fdivr
xor
sub
nop
xchg
mov
push
pop
pop
int
imul
mull
sbb
in
mov
pop
fidivrl
xchg
dec
jl
push
es
xchg
in
cld
sub
mov
aaa
sar
filds
cmpsb
mov
dec
jae
xchg
inc
mov
sub
aaa
les
cld
push
std
imul
dec
movsl
jnp
xlat
mull
adc
pop
lret
les
push
pop
pop
cmp
loope
sbb
das
xlat
sbb
test
inc
shrl
push
cmp
into
fisttps
loopne
out
mov
hlt
push
mov
xchg
jp
mov
daa
mov
ja
lock
lock
mov
cmpsl
mov
pop
xor
xchg
pop
leave
inc
mov
inc
in
pop
insl
out
push
dec
jle
cmp
popa
inc
les
jg
cmp
xchg
fdivl
int3
add
push
jle,pn
mov
xor
lea
test
call
insl
jno
xchg
scas
jmp
jne
addr16
mov
mov
push
push
lret
mov
xor
loopne
pop
fs
inc
pop
mov
inc
dec
pop
lds
outsb
test
xchg
xchg
fwait
push
rol
xchg
mov
lahf
sbb
dec
add
rcl
repnz
pop
inc
test
loope
rcr
push
cld
es
ficoms
add
add
add
push
xchg
pop
add
sbb
in
sbb
sti
sahf
adc
sidtl
adc
or
inc
cmpl
adc
cld
out
jmp
jnp
adc
adc
adc
cli
fdivrp
jb
divl
or
push
sbb
cli
cli
hlt
std
or
or
cli
cld
in
fldln2
push
mov
mov
aad
or
dec
out
sti
cli
push
xor
enter
lahf
inc
jo
cld
sti
sub
xchg
sti
dec
stos
jbe
pop
call
jae
shll
cmc
adc
and
adc
out
mov
jbe
insl
or
mov
sbb
icebp
and
or
ds
mov
or
pmaxsw
pop
push
je
or
or
xor
jbe
fistl
out
mov
fwait
bound
jmp
add
mov
xor
cli
adc
enter
ret
iret
out
or
cmc
or
fsubrl
or
adc
ljmp
icebp
decl
push
sbb
jbe
sbb
scas
stos
out
ret
repnz
cli
cli
inc
pop
mov
fsubrs
aad
add
repnz
int
fsubrl
out
iret
or
out
inc
or
pop
cli
adc
and
lahf
out
pop
fdivs
add
or
mov
roll
iret
cmc
pop
shll
mov
jl
xchg
push
push
adc
idivb
ja
adc
in
adc
or
jmp
or
clc
outsl
mov
push
cmc
mov
adc
jmp
add
push
mov
out
out
mov
or
out
out
repnz
mov
mov
add
mov
sub
out
dec
cmpsb
adc
dec
fcoms
mov
pop
cli
out
or
mov
dec
add
push
add
in
test
test
imul
fiaddl
int3
es
fisttps
in
adc
adc
sub
testl
adc
add
adc
in
loope
mov
jo
adc
cmp
or
icebp
cli
lock
es
cmp
sub
adc
push
shrl
add
adc
mov
in
test
or
jl
or
adc
cmc
out
mov
adcl
mov
mov
out
push
pop
adc
or
stos
adc
rorb
xlat
inc
xor
ror
jae
sbb
fistpll
rolb
in
lods
add
xlat
push
insb
adc
add
dec
movsl
mov
mov
enter
add
sbb
in
or
repnz
popa
pop
jae
jnp
clc
aam
shrl
add
mov
inc
test
push
xor
cs
data16
jne
leave
enter
pop
outsl
add
add
arpl
sbb
test
hlt
add
and
into
add
push
fidivrl
sti
cs
pop
cmove
cs
mov
xchg
lret
addr16
nop
add
bound
inc
or
pusha
and
scas
xchg
ds
mov
mov
daa
bound
push
mov
cmp
pusha
in
pop
add
sub
push
dec
add
das
xchg
xor
addl
mov
lods
and
add
xchg
arpl
subb
in
mov
add
cmp
pop
mov
mov
add
add
sbb
arpl
jo
dec
jmp
add
add
xor
into
pusha
sub
or
mov
cmpsl
xorb
mov
cmp
stos
cwtl
loope
aas
add
pop
add
jg
push
leave
fs
and
push
inc
loop
push
ljmp
mov
es
repnz
inc
rorb
lods
add
mov
push
and
pop
or
push
dec
aaa
fadd
jbe
pop
arpl
cmpsb
or
imul
divb
mov
push
ja
pop
push
mov
pop
mov
add
lcall
or
sub
adc
mov
pop
pop
push
es
or
rolb
xchg
push
in
sub
imul
inc
pop
ja
orb
fcmovb
inc
xor
push
xchg
cs
cmp
and
push
loope
lods
popf
imul
fidivl
out
jb
gs
pop
adc
mov
push
inc
icebp
push
xchg
adcb
jp
xchg
jo
insb
and
lcall
insb
outsl
out
sub
xor
outsl
push
push
bound
test
xor
inc
aaa
fsubs
arpl
es
push
arpl
dec
mov
inc
pop
lahf
push
andl
hlt
and
push
outsb
jg
pop
gs
nop
ja
dec
arpl
push
or
and
aaa
mov
adc
loopne
push
mov
sahf
push
popa
out
mov
mov
test
aas
data16
pusha
ret
dec
inc
outsb
pop
sub
mov
cli
sub
in
outsb
add
add
pop
pop
and
mov
loop
xchg
bound
xchg
jecxz
mov
pop
sub
mov
ret
arpl
inc
pop
xchg
fsubrp
lock
inc
sub
imul
dec
or
jbe
dec
jb
je
movsb
pop
jae
rclb
sbb
mov
adc
aaa
scas
xchg
rcrb
push
or
movl
mov
imul
push
ljmp
or
mov
mov
xor
movsb
and
add
popa
ss
jmp
repz
push
out
fisubrs
mov
ljmp
mov
fdivl
ret
sbb
jbe
push
mov
scas
and
or
sti
scas
daa
sub
inc
push
insl
cs
jnp
sbbb
ja
and
jo
xchg
xchg
je
ficompl
cmp
ret
insl
mov
add
push
add
ss
bound
jno
inc
ret
movsb
pop
imul
ret
add
cmpsl
xlat
jb
fwait
mov
repnz
outsl
bound
mov
xchg
xlat
ret
jbe
dec
cmpsb
dec
scas
mov
mov
add
push
jp
mov
xor
out
pop
jo
movsb
imul
imul
pop
push
mov
mov
mov
add
push
or
or
push
mov
mov
aas
add
cmp
or
aad
mov
pop
pop
loopne
in
and
xor
sbb
mov
add
loop
cmp
jae
les
dec
out
jns
mov
mov
cltd
mov
popa
sub
adc
pop
scas
loopne
add
dec
fisubrs
loopne
mov
or
pop
addl
add
bound
push
add
mov
and
xchg
cmpsl
cmp
je
mov
pop
mov
cmp
xchg
adc
mov
jo
and
and
add
ja
jmp
add
mov
jecxz
add
sarl
fwait
push
insl
mov
das
cmpsl
push
jne
add
push
aas
sub
pushf
xchg
cli
mov
data16
dec
add
adc
mov
shrb
jg
roll
inc
imul
add
imul
push
dec
inc
pop
aaa
inc
lcall
insb
mov
mov
inc
add
es
fisubrs
dec
jg
addr16
aad
lcall
add
mov
cmp
dec
ja
or
int3
add
pop
fs
sub
mov
dec
shlb
pop
daa
arpl
mov
fimull
loop
adc
push
fdivs
inc
out
cmp
mov
inc
out
pop
pop
insl
pop
rol
arpl
aad
inc
xor
xor
push
bound
xor
inc
adc
dec
arpl
insb
jecxz
pop
mov
les
ret
fwait
dec
inc
mov
jae
add
jo
inc
cmp
push
mov
adc
inc
pop
mov
ja
push
dec
push
dec
inc
xchg
setae
inc
push
dec
push
push
and
ja
shlb
push
jbe
dec
addr16
and
cmp
lods
movl
push
fcom
dec
and
cmp
pop
cmpsb
orb
gs
inc
jb
popa
jns
fadds
or
pop
adc
sbb
push
and
sti
decb
and
push
push
or
dec
add
jae
arpl
sub
pop
fistpl
sub
outsb
outsl
cs
push
jge
test
mov
pop
add
mov
push
pop
push
jb
and
imul
dec
scas
mov
cmp
lock
imul
or
and
pop
imul
push
mov
inc
mov
test
sub
arpl
insb
mov
movsb
lahf
inc
cmp
adcl
sub
inc
and
mov
push
dec
lahf
pop
mov
cmp
bound
cmp
dec
and
sbb
imul
pusha
sub
inc
std
xchg
inc
imul
ret
push
push
mov
dec
xor
mov
cmp
nop
sub
lds
and
std
sbb
sbb
cmp
dec
and
outsl
cmp
pop
sbb
sub
or
cmp
xchg
cmp
das
mov
sarl
addl
out
sub
cwtl
push
loope
mov
cmp
jne
ljmp
add
das
lahf
cmp
dec
inc
pop
fdivl
addr16
cmp
sbb
aam
adc
imul
lret
pop
sbb
add
aaa
and
jo
push
into
and
test
xor
and
negl
push
push
xchg
mov
mov
and
sbb
ss
lods
nop
mov
push
push
popa
fs
ficompl
rclb
adc
mov
mov
divl
dec
pop
sub
in
fdivs
push
push
sbb
or
inc
xchg
scas
loopne
aad
into
insl
test
dec
gs
fwait
cmc
out
pop
shlb
mov
dec
pop
inc
cmp
xor
jo
and
lods
dec
push
and
add
xor
sarl
dec
dec
dec
pop
sub
add
push
lret
or
lods
ljmp
insl
mov
push
add
jecxz
inc
or
xchg
add
jae
mov
dec
push
outsb
push
or
out
aad
dec
gs
jns
movsl
cmp
outsl
cmp
fcomps
pop
divb
mov
adc
pop
ret
cmp
sbb
push
mov
and
inc
js
bound
and
and
and
loopne
add
shl
push
mov
sub
mov
add
daa
cmp
or
jae
jo
push
dec
dec
push
push
pop
pop
jo
jmp
js
dec
inc
jns
mov
arpl
arpl
add
cmc
stos
xchg
and
add
bound
cmp
push
mov
stos
push
push
push
gs
test
adc
je
in
dec
push
incl
ret
dec
push
lcall
mov
push
pop
roll
inc
jecxz
les
shll
mov
sbb
jno
mov
and
imul
pop
cmp
pop
inc
pop
jnp
stos
push
mov
inc
jns
les
sub
fwait
outsl
jbe
ret
push
mov
sbb
adc
and
cmp
jo
add
xchg
les
cmp
ds
pop
pop
add
sbb
inc
inc
sbb
clc
sub
mov
fs
jns
outsl
fdivrs
and
mov
movsl
fstpl
sub
nop
mov
shrb
pop
xchg
scas
insl
lret
sbb
outsb
jmp
pop
imul
jae
inc
inc
push
dec
gs
bound
and
mov
pop
sbb
dec
sub
lods
or
xchg
mov
push
sub
inc
push
insb
fildll
xchg
xchg
jnp
add
dec
fs
xchg
adc
les
out
add
ret
mov
loopne
sub
fildll
pop
or
jns
sbb
fcmove
sub
fildl
and
sub
xor
xor
pop
fbstp
sbb
imul
orb
nop
loop
mov
jbe
mov
dec
or
loope
int
push
sbb
inc
add
mov
inc
addl
fstpt
push
fsubrs
imul
movsl
lods
insb
int
loope
push
lods
bound
fisttpl
aaa
mov
add
js
jns
pop
lret
repnz
add
add
mov
in
mov
es
lea
jo
push
sbb
pop
mov
imul
jbe
ljmp
dec
repnz
test
inc
sub
rclb
push
xchg
inc
add
or
lret
je
divl
xchg
bound
push
test
mov
jmp
cmpsb
add
sbb
arpl
in
ficomps
sub
add
stc
push
cmp
push
sbb
fistpl
mov
mov
jo
and
sbb
repnz
sbbb
sbb
test
dec
jmp
jnp
loopne
and
jmp
cmp
sbb
enter
dec
dec
sub
rclb
jae
mov
mov
jnp
int
fs
add
int3
sbb
adc
mov
movsl
mov
adc
adc
pop
aaa
int
push
insl
fstps
inc
lds
rolb
lods
xorl
insb
xor
mov
mov
in
jbe
and
dec
inc
dec
mov
sbb
add
adc
sti
push
push
fiadds
dec
inc
dec
sbb
xor
fisttpl
int3
jg
inc
cmp
in
jmp
xchg
out
scas
sub
lea
dec
lds
adcl
and
inc
jae
cli
loope
pop
or
dec
push
cmp
add
sbb
jecxz
je
or
xor
mov
pushf
test
addb
dec
outsb
mov
sub
popf
cwtl
pop
pop
ss
push
les
xor
mov
and
mov
pop
ret
mov
adc
adc
mov
aas
test
lret
shrb
les
daa
push
std
bound
shr
setno
insb
mov
sub
lcall
mov
push
push
cmp
push
je
bound
fstl
movl
mov
dec
dec
imul
cltd
or
sbb
or
fwait
xchg
movsb
inc
xchg
cmp
and
jecxz
ja
imul
cmpxchg
fnstenv
jae
rcl
add
lahf
jmp
lcall
xchg
mov
sbb
call
jecxz
inc
arpl
sbb
inc
shl
dec
arpl
mov
das
push
ss
sbb
ja
inc
push
push
mov
leave
scas
insl
in
roll
outsl
xor
inc
jb
jns
daa
cmp
or
cmp
in
mov
popf
and
add
or
fwait
dec
fmuls
dec
icebp
pop
into
nop
mov
outsb
outsb
and
jp
push
filds
sub
pop
xor
pusha
fnstsw
aad
jle
jbe
add
dec
lcall
push
sbb
insl
push
pop
cmp
pop
and
and
and
push
inc
jne
loop
push
and
sub
add
mov
and
inc
pusha
andl
sbb
add
xorb
pop
ret
push
fldenv
lret
imul
adc
sub
mov
pop
movsb
or
mov
mov
scas
sti
hlt
jo
dec
add
shrl
addr16
cmpsl
jns
rcr
out
or
xchg
inc
das
int3
out
cmc
mov
lods
adc
sbb
cmp
clc
sbb
xchg
rcrb
adc
dec
sbb
jp
dec
mov
pop
and
mov
in
fstps
push
popfw
mov
pushf
je
jb
mov
adc
std
jae
lea
testb
mov
cwtl
aam
mov
popa
sub
sub
mov
push
fwait
pusha
mov
push
xorl
inc
aas
outsb
jmp
into
mov
push
adc
push
fs
sbb
adc
movsl
sub
sti
push
push
lock
cmp
sub
ljmp
js
pop
mov
xor
dec
inc
lds
insl
adc
mov
fisubl
lods
add
pop
dec
inc
imul
movsl
pop
adc
or
dec
sbb
mov
gs
shlb
mov
mov
push
push
and
push
fwait
cs
test
shrl
sbb
xor
daa
mov
or
jg
mov
and
lret
mov
cmp
adc
xchg
adc
jae
push
mov
push
idivl
xchg
pop
xchg
insb
rcll
popf
mov
ja
mov
xor
arpl
sbb
cmp
mov
jmp
loop
or
dec
loopne
and
jg
sti
inc
pop
pop
xlat
jbe
push
outsb
sbb
shlb
stos
jbe
mov
inc
inc
jo
sub
cmp
mov
mov
out
xchg
add
sub
mov
test
sbb
inc
mov
inc
subb
adc
cmp
out
sbb
in
xor
cmp
inc
or
dec
loopne
test
add
or
add
push
add
inc
mov
push
push
sbb
rolb
push
sbb
push
fiadds
cmp
les
sets
repnz
aas
nop
leave
adc
xor
add
add
push
xchg
add
and
lods
dec
int3
inc
fldenv
jb
ret
mov
add
iret
xchg
xor
dec
dec
push
push
rcrb
loopne
xlat
nop
dec
jo
xchg
mov
ucomiss
and
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
