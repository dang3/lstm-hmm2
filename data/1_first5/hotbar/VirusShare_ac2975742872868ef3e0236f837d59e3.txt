divb
in
mov
mov
mov
inc
add
add
sahf
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shrl
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movsl
std
in
pop
scas
cmp
inc
add
cmp
pushf
or
push
rcrb
sahf
push
mov
push
xor
fidivl
fcoms
cmp
adc
mov
ret
mov
jmp
jmp
pushl
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
ret
std
imul
xchg
add
mov
pop
inc
push
adc
add
inc
fcoms
rol
jo
mov
push
mov
xor
sbb
add
push
add
aaa
fwait
mov
mov
or
data16
sbbl
sarl
push
lahf
add
xchg
notl
andl
mov
push
sub
mov
hlt
cs
jbe
xor
sbb
adc
cwtl
mov
lock
pop
imull
dec
shl
in
or
jo
mov
xor
hlt
or
pop
cmpsl
push
repnz
in
cmpsb
cmp
lea
fwait
popa
xor
push
call
sub
add
out
push
sbb
push
loopne
xor
test
mov
lea
mov
adc
daa
mov
push
dec
or
add
iret
jbe
ret
ja
pop
xchg
sbb
fdivrs
xchg
sub
ret
test
push
xchg
mov
call
addb
das
or
push
dec
and
add
xchg
es
pop
xlat
push
sbb
test
or
sbb
push
and
add
push
dec
dec
cmp
je
out
push
out
jmp
mov
mov
pop
pop
fs
pop
lods
mov
aad
add
mov
push
sub
mov
pop
push
insl
and
orb
add
push
iret
bound
fidivrl
inc
pop
pop
ljmp
inc
lock
push
mov
cmp
or
jge
outsl
push
rolb
js
sti
mov
mov
xor
mov
pop
ret
arpl
xor
stos
pop
roll
pop
imul
rcrl
sar
pop
inc
sub
inc
clc
sub
pop
or
xchg
es
cmpl
adcl
xorl
sbb
pop
cmp
cli
js
mov
cmp
jg
mov
pop
and
adc
ret
pop
dec
add
mov
pop
and
jmp
enter
xchg
das
pop
push
sub
push
mov
sar
imul
lea
push
cmp
ja
adc
pop
dec
clc
add
push
mov
inc
loope
adc
in
inc
jno
xchg
adc
in
outsb
int3
clc
scas
cmp
jle
mov
cmpl
or
clc
loope
incl
shr
sub
or
cmp
push
inc
jle
add
pop
cltd
sub
rcl
enter
shrl
iret
mov
movsb
pop
cmp
orb
sub
cli
cmp
mov
push
jne
js
incb
add
xor
pop
mov
jle
add
call
jo
add
testl
inc
add
adc
lea
adc
stc
std
mov
and
xor
into
mov
adc
cmpsl
push
cmpsl
inc
cmp
mov
cmpsl
mov
cld
fisubrs
xlat
ja
lods
lea
stos
mov
clc
cmp
roll
mov
mov
jge
test
jle
insb
or
cmp
mov
inc
mov
stos
pop
pop
inc
insl
cmp
loope
or
push
push
cmp
adc
outsl
add
sub
repz
push
jmp
push
lea
lea
inc
push
inc
add
pop
sub
in
pop
push
cli
push
andl
ret
and
sbb
outsb
hlt
adcb
or
jbe
inc
and
cmp
mov
cmp
and
xor
push
push
sti
rcrl
hlt
das
push
out
cmp
jle
mov
inc
or
xor
cmpl
je
push
cmp
cmp
jae
push
cmp
inc
and
adc
cs
or
or
add
jb
pop
adc
pop
adc
pop
leave
fwait
jle
mov
fcoms
jnp
ljmp
in
aaa
cmp
lock
loop
push
push
push
rcrb
sbb
or
adc
or
cmpsb
push
loope
add
jne
pop
nop
out
loop
loopne
cmp
jo
inc
sub
add
aaa
lret
shll
mov
inc
or
pop
or
cmp
add
add
xor
jno
cmp
jne
push
push
push
push
xor
push
test
push
mov
mov
or
pusha
pop
pop
jle
sbb
xor
mov
daa
in
rcr
jne
cmp
lret
xchg
and
add
sub
xor
frstor
insb
mov
lock
mov
cld
pop
stc
add
out
add
sbb
fstpt
mov
add
repz
testl
xchg
pop
mov
and
push
je
xchg
sbb
test
cwtl
ds
xchg
loopne
in
dec
out
mov
ja
stos
or
dec
adc
je
push
adc
aas
clc
pusha
mov
push
repz
inc
xor
push
ss
push
incb
sbb
out
lea
dec
push
xor
adc
lahf
testb
lea
out
jae
pop
shlb
fldcw
add
add
add
jge
repnz
lea
push
dec
pop
xchg
push
cld
fists
mov
fistps
add
push
mov
jb
push
outsl
dec
xor
mov
push
out
fsubrl
adc
and
push
scas
push
inc
sti
add
or
test
cmp
iret
insb
push
cmp
push
push
cmp
je
shll
adc
or
loopne
jne
imul
mov
imul
adc
fwait
or
xor
jb
ja
adc
inc
fsubl
shlb
xchg
cmp
mov
xchg
paddq
mov
aaa
movsl
iret
xlat
mov
mov
mov
or
mov
call
arpl
cs
jno
lods
imulb
xor
sub
jg
inc
dec
mov
or
cwtl
in
cmp
mov
add
andl
or
sub
in
mov
shrl
ss
push
mov
mov
push
adc
lock
lcall
sbb
int3
ret
mov
push
testl
jae
and
mov
aas
pop
loopne
push
loopne
pushl
push
cmp
icebp
add
daa
lret
call
sub
adc
pop
inc
lods
or
enter
add
sbb
je
dec
je
push
xor
push
pop
jmp
push
adc
inc
pop
loop
sbb
movsb
call
add
mov
inc
adcb
push
rcll
jg
int
mov
push
mov
insb
sbb
mov
sbb
mov
inc
and
mov
jae
mov
aam
and
pushaw
pushf
pop
cmc
subl
sub
and
sub
add
xor
aam
test
pop
jle
or
mov
mov
sarb
pop
or
pop
rorl
xchg
and
loop
xlat
sub
lret
ljmp
out
shr
sbb
fisttpl
or
sub
js
and
adc
arpl
loope
popa
add
jle
in
dec
xchg
ds
and
sbb
sar
inc
pop
xlat
andb
je
or
cmpb
lea
mov
fldcw
mov
sbb
pop
movsl
push
negl
pop
ds
das
adcl
pop
dec
sub
adc
mov
push
sbb
or
sbb
push
adc
lahf
cmp
sbb
adc
fists
cwtl
add
pop
sbb
and
add
js
xor
in
js
jl
ret
adc
jb
pop
adc
test
mov
mov
mov
cld
cmp
jg
jne
dec
sbbb
push
cmp
enter
movsl
cmp
les
or
andl
nop
into
or
mov
je
inc
mov
icebp
into
scas
mov
dec
or
or
push
data16
sbb
dec
mov
pop
pop
pushf
sub
pushf
sbb
pop
aas
push
and
inc
and
or
push
jo
int
in
jae
bound
cltd
adc
out
in
sahf
adc
je
scas
jnp
mov
adc
lahf
xor
jbe
pop
ret
lahf
mov
insl
jnp
pop
aaa
push
push
or
mov
xor
dec
sub
fmuls
subl
popa
xor
xchg
xor
data16
push
divb
lcall
orl
je
and
mov
out
scas
mov
int3
sbbb
ljmp
mov
mov
pusha
push
lcall
jo
jne
push
ret
das
pop
add
pusha
add
and
in
aaa
sbb
push
dec
mov
lods
mov
jnp
add
pusha
jp
push
in
mov
adc
insb
movsl
sbb
pop
repnz
je
jbe
in
sub
in
rolb
daa
jo
scas
and
orb
xchg
xor
test
lds
repnz
ds
pop
pop
jmp
sub
popa
jmp
mov
xchg
mov
push
xor
mov
pop
aas
aam
jge
decl
inc
and
fisubl
xchg
xchg
je
out
out
add
push
push
add
insl
cmp
jb
lock
bswap
scas
mov
scas
adc
mov
mov
and
push
je
icebp
bound
adc
xchg
in
push
and
push
filds
or
frstor
add
add
add
fldt
pusha
mov
testb
mov
incb
or
and
test
add
in
sbb
jo
xor
or
push
mov
jmp
ljmp
sub
mov
push
lock
pop
push
sbb
neg
sbb
pop
les
ret
je
push
inc
out
loop
in
and
mov
gs
sub
mov
enter
cwtl
sahf
inc
and
fs
mov
dec
mov
mov
imul
loopne
xor
in
pop
push
add
adc
push
jb
or
sbb
add
mov
cmp
xchg
pop
mov
add
jge
pop
incb
jecxz
dec
inc
outsl
mov
in
das
sarb
sbb
sub
xor
sbb
sub
mov
test
fcoml
dec
jo
xchg
mul
mov
shlb
loopne
jo
cmp
movsb
sarb
js
mov
adc
pop
adc
push
mov
xorl
cmp
cmp
rclb
xchg
rcl
ret
les
pushf
pushf
leave
jae
gs
mov
mov
xchg
dec
mov
xchg
sbb
xchg
xchg
sbb
push
test
mov
xchg
int3
clc
arpl
ret
sbb
leave
enter
ror
cmp
sbb
shlb
sub
ret
sbb
dec
jnp
mov
mov
dec
leave
jae
mov
sub
test
push
test
add
test
jle
pop
pop
pusha
inc
xor
and
insl
inc
ja
and
cmp
testl
loope
hlt
shrb
add
mov
inc
iret
and
cwtl
sub
jo
inc
sbb
call
test
push
or
dec
pop
mov
es
push
ficompl
push
loop
jnp
and
cs
push
xor
sbb
and
add
ret
xor
add
lcall
pop
add
enter
or
jle
lahf
cmp
mov
in
addb
test
and
outsb
and
ficompl
inc
sbb
movsb
and
push
aaa
adc
dec
sbb
orl
pop
push
mov
mov
mov
jae
or
cld
sarl
sbb
ret
lods
pop
test
cwtl
sub
lret
xchg
and
std
and
adc
adc
popl
daa
add
sbb
fsubl
adc
addb
cwtl
mov
mov
cmpl
and
push
pop
push
jmp
popa
mov
ret
push
or
mov
fiaddl
adc
or
sbb
adc
movsb
adc
xor
mov
insl
pop
sbb
push
sbb
fstl
scas
and
jl
and
enter
or
adc
sbb
jecxz
pop
dec
push
dec
mov
in
mov
nop
aaa
xchg
xchg
add
adc
test
sbb
inc
adc
adc
movsl
jno
mov
stc
loope
add
inc
xchg
mov
adc
cmp
aaa
pop
inc
adc
xchg
adc
sub
push
cmc
mov
push
sbb
push
nop
imul
lret
xor
push
and
iret
sbb
sbb
aas
loop
add
inc
jne
shlb
jno
jb
mov
test
enter
sbb
movsb
dec
out
lcall
xchg
mov
loopne
dec
jo
lea
mov
sbb
lcall
fbld
das
jne
push
pushf
pop
nopl
pop
xlat
sbb
shrd
popa
testl
outsl
jg
cmp
je
or
je
xor
push
push
or
push
mov
adc
xchg
mov
pushw
mov
mov
xchg
inc
xchg
and
pop
loopne
das
jecxz
daa
add
inc
ret
or
inc
pop
add
mov
mov
add
test
mov
dec
in
lret
xorb
and
sbb
lock
cmp
add
sti
cmp
je
push
push
pop
ljmp
test
xchg
add
mov
sub
inc
mov
mov
clc
adc
and
shrl
pop
mov
xorb
jmp
dec
cmp
sub
mov
mov
xchg
insb
push
sar
and
stc
sahf
sub
sub
or
bound
inc
xlat
in
add
popa
and
sub
sub
pushf
fstps
add
movsb
std
div
faddl
cmp
negb
aas
rcrl
inc
incb
xchg
inc
mov
cmc
pusha
shrb
test
sbb
loopne
push
fdivl
jns
inc
stc
scas
sub
pop
bswap
pop
test
sub
sub
pop
leave
aam
inc
imul
cwtl
lods
jno
ss
je
sbb
inc
lret
ret
test
cmp
cmp
or
mov
fstpt
cmp
push
stos
add
adc
jb
pop
add
xor
clc
push
insb
push
daa
movsb
xor
test
pop
insb
adc
push
lods
mov
mov
sub
pop
stos
jo
fsubs
jne
jo
out
pop
and
pop
xor
xchg
lahf
mov
inc
sbb
arpl
dec
adc
inc
ret
jecxz
lret
push
push
or
sub
pop
adcb
push
add
test
test
adc
mov
mov
enter
push
push
cld
sbb
sti
lahf
mov
adc
add
pop
cmp
add
or
adc
xor
push
sahf
xor
and
add
mov
hlt
sbbl
sub
nop
negl
inc
mov
jo
push
enter
int3
ds
lds
lea
pop
xchg
add
sub
pushl
jnp
fidivs
dec
xlat
test
xor
dec
push
mov
fsubs
roll
aad
imul
sub
inc
repnz
cmp
mov
and
xor
stc
pop
pop
and
dec
dec
xor
ficoml
cmpl
cmpsb
cmp
mov
repnz
sub
rcll
and
sbb
jne
and
enter
and
xor
andl
lods
rclb
nop
inc
in
xchg
or
ds
cmp
push
jl
jne
bound
pushf
dec
inc
inc
adc
ds
popf
fstpt
rorb
dec
mov
mov
push
or
xchg
pop
icebp
pop
dec
les
adc
dec
stos
xchg
adc
pushl
push
mov
sub
mov
loop
add
in
and
adc
sub
ret
push
je
nop
sub
adc
les
rcll
cmpl
add
iret
sbb
push
mov
mov
dec
sbb
outsb
loopne
sbb
fld
sti
cmpb
jae
jne
push
sub
xlat
ret
call
sub
fisttpll
jne
inc
adc
or
in
gs
orb
jmp
cmp
push
mov
nop
out
adc
pusha
cmp
loope
nop
sbb
mov
jmp
mov
clc
cmpb
daa
fs
push
loopne
and
push
shrb
push
outsb
scas
push
dec
lret
add
inc
das
xchg
sti
sub
inc
repz
out
jge
and
xchg
orb
enter
or
lret
jo
inc
mov
cmp
mov
test
pusha
xchg
push
les
jge
jo
and
cmp
out
jo
xor
daa
dec
rcll
sbb
mov
xor
mul
dec
xchg
jo
inc
xchg
add
pop
or
setne
or
dec
or
mov
rcrb
into
add
icebp
aaa
arpl
adc
pop
out
jne
or
je
sub
fadd
mov
in
sti
loopne
je
loope
jg
inc
das
adc
mov
or
in
sbbb
push
inc
faddl
jl
test
dec
push
pop
pop
sub
jo
test
mov
lods
cmp
lock
fsubrp
out
xchg
or
xchg
cmp
fsubs
add
call
neg
test
imul
sub
repz
je
cli
pop
ror
dec
sarb
inc
mov
pop
jns
sbb
fsub
push
out
inc
out
loopne
cld
inc
test
and
or
nop
inc
aas
fnstenv
imul
lock
or
loopne
lods
sbb
cld
or
mov
push
pop
or
push
or
jg
scas
fdivl
add
or
enter
add
int3
add
mov
or
es
fisubrl
jle
push
fdivr
or
sub
call
dec
xchg
call
mov
add
mov
jnp
lock
dec
inc
sbb
je
sub
jle
cld
out
jmp
jge
imul
cmc
jbe
push
xor
jmp
mov
xorb
int3
int
mov
mov
xchg
int3
test
push
sbb
in
icebp
inc
xorb
xor
fstl
inc
sbb
mov
lea
rolb
mov
mov
inc
hlt
xor
inc
mov
mov
jle
push
dec
cmp
adcb
push
pavgw
ret
jle
call
in
sbb
lock
push
mov
orb
mov
shll
in
paddusb
cmp
pop
filds
mov
push
push
add
pmulhw
mov
jbe
pop
clc
add
inc
sbb
sbb
movsb
adc
fcomps
sub
mov
stos
insl
std
adc
sbb
dec
test
pop
lea
roll
sub
or
cmpl
push
push
jne
aaa
or
rcrb
pop
dec
xor
mov
in
inc
xchg
in
cmp
inc
ficomps
cld
test
sbb
or
mov
imul
or
sbb
add
mov
or
xor
push
push
add
pop
ljmp
or
inc
pop
or
cmp
std
popa
xor
add
mov
das
jle
popa
cmp
inc
nop
es
dec
xorb
push
imul
pop
fmull
jp
fcompl
movsb
adc
add
pop
sar
in
loopne
pop
cld
loopne
orb
add
test
lds
lahf
call
into
sarl
aam
enter
test
or
rcrb
push
nop
or
push
cmove
or
cmp
push
push
in
addb
cmp
sbb
mov
cmp
cli
in
mov
push
rorb
mov
ret
or
in
adc
scas
in
mov
push
push
in
sbb
inc
mov
scas
sbb
or
jno
testl
nop
adc
and
add
cmp
test
shrd
rcr
jb
push
pop
push
push
call
and
fistl
rorl
test
mov
mov
pop
daa
mulb
mov
rcll
dec
or
cmpb
jge
out
clc
sub
mov
mov
out
or
push
jge
in
arpl
and
pop
arpl
xor
pop
or
sbb
pop
lock
loopne
mov
cmp
addb
and
and
das
subl
adc
mov
mov
jbe
in
mov
int3
pop
cmp
fxch
rclb
sbb
jl
adc
pushf
xor
in
mov
fbstp
rolb
je
inc
in
fdivr
pushl
call
mov
inc
shr
movzbl
push
adc
push
ret
push
jo
ffreep
push
es
add
je
loope
cmpsl
jle
jbe
dec
testl
gs
nop
sbb
inc
add
push
mov
push
or
gs
or
jg
sub
jb
xor
int
out
push
loopne
pop
or
add
mov
push
sbb
xor
fisubs
push
jmp
scas
sti
jle
push
add
lahf
nop
lods
adc
push
push
mov
cmp
jg
mov
xchg
icebp
int
adc
jae
enter
cmpl
std
sbb
scas
mov
aad
js
pop
and
test
xor
fldt
xchg
jno
outsl
ds
lea
andl
outsb
sub
sbb
subl
call
mov
push
jne
inc
sub
loop
jo
push
ret
push
pop
jmp
mov
popa
xor
lods
push
cmp
mov
and
cmp
je
stos
mov
in
in
add
fcompl
shrb
cld
jne
fdivrl
push
push
test
adc
lock
sbb
or
xor
clc
add
inc
cmp
jae
mov
hlt
lea
movsb
jp
dec
ja
dec
add
sub
je
push
mov
je
add
mov
outsl
push
sub
fcomps
hlt
sub
imul
add
adcb
ret
jl
in
cmp
jg
push
push
push
inc
js
push
pop
cmp
inc
and
jbe
xlat
sar
into
popa
nop
add
mov
loopne
push
pop
xor
adc
call
lea
ljmp
cmp
loopne
sub
add
xor
jo
fnstcw
jb
mov
mov
roll
mov
mov
push
sub
inc
js
or
cli
xchg
adcb
out
ret
cmp
cmpsb
hlt
pop
pop
xor
inc
xchg
je
test
js
inc
dec
hlt
aaa
cmp
fidivrl
hlt
or
and
sub
pop
movb
dec
push
inc
inc
dec
rclb
jge
jmp
dec
inc
cmp
push
mov
insb
sbb
in
out
fdivs
pop
push
push
mov
sbb
xor
cwtl
dec
mov
insb
sbb
fdivp
add
pop
push
push
mov
idiv
cmp
jl
repz
jmp
or
and
pop
cmp
xlat
das
xor
ret
inc
mov
inc
or
cmp
jbe
mov
mov
test
pop
or
xchg
bound
xlat
push
sub
mov
push
stc
jns
lods
sarl
push
mov
push
and
add
or
jle
ret
je
mov
imul
lock
aaa
ljmp
xor
movsb
push
dec
fidivrl
sbb
or
fstps
pop
cmp
mov
or
add
jne
or
sbb
sub
jle
push
call
jl
xchg
jecxz
sti
test
dec
sbb
mov
mov
sbb
ret
je
push
pop
pop
and
xor
mov
mov
jae
jb
jmp
mov
ret
and
adc
mov
xchg
jmp
or
jbe
jb
mov
icebp
scas
fs
jne
cmp
je
jbe
movb
xor
lods
std
or
or
and
sbb
icebp
addb
cmp
test
addl
out
les
xlat
imul
daa
push
pop
and
setne
shrb
ret
jne
pop
jo
pop
in
xchg
cld
add
fiaddl
jne
adc
js,pt
aam
add
jo
jg
jo
prefetch
xchg
das
or
es
into
push
cmc
jmp
test
or
sbb
push
adc
add
sub
jp
shll
aad
mov
js
push
leave
inc
lret
jmp
call
bnd
rorl
cmp
jmp
mov
dec
adc
daa
sahf
jmp
cmp
push
test
mov
imul
cld
ficoms
sub
push
push
jmp
sbb
pop
sti
adc
rolb
pop
rolb
add
scas
sbb
inc
push
mov
lock
pop
nop
mov
sub
inc
mov
add
lcall
je
das
test
push
xchg
dec
jno
mov
loopne
enter
jl
add
insb
cld
cmp
ret
dec
push
add
push
test
lds
pop
push
dec
cld
rorb
push
pop
popf
mov
enter
add
std
push
movl
call
sub
dec
enter
movsb
xchg
xor
sub
imull
push
and
cmp
fld
mov
sahf
fsubs
sbb
pop
push
adc
pop
enter
xlat
jecxz
sbb
insb
icebp
inc
roll
shlb
in
shl
mov
cmp
jp
fdivs
push
adc
shr
pop
sbb
push
push
imul
sub
push
add
aas
lods
pusha
lods
xchg
dec
ret
outsl
dec
mov
adc
lods
sbbl
inc
mov
lds
sbb
mov
in
push
sub
les
push
ss
sub
push
in
insl
fldt
lods
sub
mov
xlat
and
enter
mov
and
aad
jo
es
sub
insb
xlat
push
jno
cmovl
pop
dec
scas
jecxz
dec
xchg
call
sbb
cmpsl
jb
sbb
fsubrs
enter
cld
jo
add
mov
dec
leave
inc
jo
fnstcw
into
or
adcl
jb
leave
mov
ficoml
imul
test
stos
out
or
mov
push
sbb
xchg
xor
pop
and
xlat
or
sbb
add
xchg
sub
stos
push
pop
cmpl
jmp
je
add
ljmp
in
adc
pop
inc
pop
je
dec
ds
fisttps
mov
cmpsl
leave
mov
push
enter
jecxz
and
pop
movl
cmpsb
and
push
sub
xlat
push
jae
sub
mov
jne
pop
add
jmp
sbbb
cld
sub
sub
adc
pusha
pop
and
in
jmp
or
mov
enter
test
sarl
stc
loope
lret
cmp
les
mov
and
push
xlat
cs
stos
lock
cmc
pop
je
xor
mov
sbb
and
clc
mov
jae
jg
adc
lret
adc
dec
add
dec
into
aam
jb
push
inc
xchg
imul
sub
push
mov
add
or
or
dec
clc
and
adc
rcrl
add
pop
pop
cmpsb
mov
mov
mov
in
sbb
add
or
jns
fdivs
daa
js
adc
mov
lea
addr16
or
xchg
andl
shll
mov
push
and
xlat
push
shll
and
sbb
xorb
ret
jne
je
cmp
mov
pop
push
fildll
sbb
cli
push
or
arpl
mov
xchg
js
adc
ja
das
in
cmpsl
outsb
stc
movups
and
test
add
inc
pop
sbb
cmp
mov
or
push
mov
push
cltd
pop
lock
mov
lcall
adc
sarb
roll
jno
add
push
xchg
jmp
loope
add
mov
lods
dec
add
xchg
dec
xor
pop
lods
push
xchg
pushf
push
jbe
fs
shr
cmp
cmp
mov
mov
add
push
pop
dec
je
mov
adc
in
jge
adc
sbb
popa
dec
ss
dec
cli
decb
jmp
mov
mov
mov
rcr
push
and
movsb
fwait
mov
add
pop
jne
out
popa
hlt
sbb
jmp
push
add
push
mov
xor
aas
adc
and
cld
pop
inc
add
mov
mov
inc
loopne
mov
add
push
mov
pop
addr16
mov
fmuls
mov
mov
dec
mov
loop
loopne
push
or
push
shl
std
lea
pop
pushl
js
sub
lea
mov
push
movsb
int3
sub
mov
rolb
push
shr
jmp
cmp
je
cmp
mov
imul
jmp
inc
sbb
leave
adc
out
out
xor
mov
sbb
fstpl
insl
fistpll
jmp
sbb
into
jle
push
and
jmp
and
jmp
push
mov
sbb
sti
mov
incl
into
pop
push
aaa
push
inc
push
push
iret
repz
jo
mov
into
repz
pushf
cmpsl
mov
mov
sbb
mov
mov
add
inc
scas
ja
push
and
sub
or
or
lea
adc
sub
fistps
aaa
sub
or
cmpl
fcmovne
rcrl
lahf
push
push
or
xchg
dec
stc
icebp
cs
pop
jge
cld
out
dec
jl
and
inc
push
mov
mov
pop
push
lea
push
lea
push
push
push
push
add
push
lea
enter
cmp
jnp
inc
cmpsb
add
dec
mov
inc
test
pop
add
aas
cltd
lahf
aam
popf
sbb
lea
lea
movl
orl
or
sbb
sbb
jmp
sbb
addr16
push
je
lea
test
sbb
push
or
pop
push
push
add
jl
inc
xor
add
popf
push
js
in
test
xor
je
push
inc
xchg
outsb
lods
fidivs
jno
jo
cmpsb
addl
mov
push
sbb
push
push
je
mov
xchg
mov
push
clc
pop
dec
notb
jmp
mov
pusha
and
mov
mov
movl
dec
add
pop
jne
mov
jne,pt
push
add
test
repnz
jae
adc
or
push
pause
xchg
imul
dec
jae
popf
mov
call
in
in
ret
mov
xchg
inc
or
ret
or
repz
mov
inc
xor
movsl
push
cmc
lds
push
mov
fcoms
aad
cmp
xor
push
push
cmp
xor
xor
pushf
jl
sub
in
and
adc
rolb
mov
lea
jl
lcall
es
mov
ret
or
sbb
xor
popa
mov
push
xchg
pop
mov
popa
aam
push
aam
das
in
in
sbb
cmp
inc
jl
jne
int3
push
mov
and
fcoml
bound
dec
fildl
cmp
rcr
shr
addl
or
fdivrl
fdivr
ret
mov
rcll
mov
push
mov
inc
scas
xor
adc
fdivr
and
adc
push
push
or
mov
js
notb
sub
je
lea
push
loopne
es
rolb
mov
jo
xchg
add
ds
mov
mov
aam
xlat
push
or
adc
ljmp
in
or
rcrb
shrb
les
inc
push
mov
lock
push
pop
pop
fmull
push
dec
lea
dec
push
push
aaa
dec
icebp
pop
cmpsb
and
jge
fidivrs
cmpsb
mov
sub
in
dec
jmp
sub
mov
dec
cmp
sub
insl
sti
int
in
cmp
push
mov
add
mov
test
inc
inc
dec
cmp
pop
daa
icebp
cltd
adc
xor
mov
iret
mov
mov
and
or
jecxz
or
les
mov
fcomps
in
dec
cmp
cmp
push
sbb
and
loopne
sbb
out
movsb
adc
jp
dec
pop
inc
leave
mov
lock
fisubl
mov
in
and
dec
fstp
cmpsb
imul
adcb
push
roll
inc
push
bound
lcall
neg
sbb
and
pop
in
mov
cmp
iret
leave
out
add
adc
out
jl
enter
pusha
nop
test
js
mov
push
inc
scas
daa
or
add
dec
sub
je
push
negb
adc
aaa
and
lods
out
push
ret
test
icebp
dec
or
addl
rolb
test
dec
pop
cmp
mov
mov
mov
or
mov
loop
dec
aaa
enter
cmpl
jne
pushl
ffree
subl
push
sbb
test
adc
xorl
jbe
outsl
cld
adc
aam
mov
adc
cmpsb
push
inc
inc
dec
insl
dec
adc
std
xchg
xor
push
inc
sub
sti
je
cmp
mov
ja
sti
sbb
jb
stc
ret
popl
or
pop
and
pop
inc
or
aad
xchg
or
popa
in
xchg
mov
jg
xor
sbb
sbb
pop
incl
jne
movb
jmp
cmp
jne
mov
adc
leave
push
loop
ret
cwtl
enter
jle
xor
adcb
repnz
mov
jp
cmp
pop
mov
mov
xor
ja
xchg
test
sbb
lock
pop
notl
and
test
cltd
jne
or
or
popf
sub
mov
mov
push
dec
or
adcb
bound
pop
fsubl
push
push
cmp
push
adc
fcoml
mov
nop
pop
cmp
iret
push
adc
enter
lods
add
test
lds
dec
out
mov
mov
ljmp
nop
add
xchg
scas
mov
mov
add
je
cmpsb
and
mov
cmp
add
dec
and
push
lea
and
mov
cmpb
jg
add
pop
push
call
push
and
push
push
lret
into
shr
mov
rcll
enter
xor
imul
mov
push
mov
xor
int
xor
clc
test
cmpb
xor
movsl
adc
pop
cmc
xlat
jg
inc
pusha
fmull
insb
decb
jno
out
push
add
mov
push
push
aaa
movsl
adc
outsb
mov
push
stos
sbb
out
mov
cli
loop
xor
es
ja
add
mov
mov
jno
insb
inc
cmp
xor
pop
into
popa
in
jne
icebp
in
push
shll
mov
adc
mov
stos
jo
adc
fmuls
sub
cli
repz
jo
dec
or
andb
cmc
jmp
jb
rclb
mov
adc
test
rorl
jbe
jo
xchg
xlat
push
adc
lea
aas
stc
icebp
cmpb
xor
je
push
pop
cmp
mov
negb
push
decl
repnz
push
jne
cs
sub
push
fnstsw
add
jmp
adc
sbb
push
iret
enter
insb
repz
mov
andl
push
fcoms
sbb
fidivrl
push
cli
or
push
pop
jo
popa
icebp
push
sub
cs
push
in
or
jmp
fs
popa
push
sbb
lods
push
push
cltd
sub
push
jecxz
je
push
fbld
jl
xlat
sbb
fadd
orl
addl
pop
fadds
xor
xchg
add
jae
adc
xchg
push
sbb
pop
push
sub
jo
mov
jl
mov
mov
cltd
mov
lea
push
div
sar
orl
movsb
push
xor
ret
pop
mov
pop
mov
jge
mov
shlb
mov
idiv
push
mov
mov
jecxz
test
mov
ret
xor
idiv
out
and
cs
testl
es
sti
fstpt
mov
add
push
int
dec
add
mov
cmpsl
jne
pusha
scas
mov
push
dec
xor
push
pop
jg
jge
add
sub
mov
adc
dec
fstpl
push
pop
push
mov
fdivr
sub
cmpb
jge
je
out
sbb
mov
dec
push
into
jp
xor
popa
xchg
movsl
daa
pusha
js
or
popa
jg
sub
scas
fs
or
xchg
arpl
mov
clc
jle
cmp
xor
sub
negl
pushf
movb
scas
xchg
jnp
aas
dec
lea
jl,pn
sbb
ds
xchg
sub
cmp
shrl
nop
or
out
jp
into
test
std
outsb
mov
fildl
mov
test
jns
fdivr
std
jnp
add
xor
xor
mov
fdivrp
dec
ja
and
dec
sub
mov
shr
clc
int3
mov
mov
inc
les
xorl
cmp
add
push
lods
mov
cmpb
pusha
clc
insl
je
into
clc
fidivl
jmp
push
xchg
jae
addb
mov
ret
pop
jne
pop
pop
movb
xor
dec
ljmp
cmp
mov
jo
leave
xchg
mov
mov
add
shr
hlt
lcall
cmc
push
aad
cld
inc
hlt
adc
lea
add
and
cmpsl
je
addr16
pusha
fdivs
push
gs
lds
imul
fadds
and
stos
scas
cmp
sbb
loopne
push
pop
stos
ljmp
pop
pop
mov
pop
leave
jecxz
dec
sub
inc
push
cmp
or
mov
sub
rcrl
and
cltd
add
cwtl
cmp
test
sbb
or
aam
xor
adc
int
sbb
loope
xorb
mov
dec
jns
and
cmp
ret
sbb
sti
push
rorb
mov
push
les
jmp
punpckhdq
leave
adc
jo
in
push
pop
xor
rolb
jo
pushf
scas
sbb
push
mov
lea
push
mov
push
ret
inc
mov
pop
in
fwait
dec
add
lea
pop
or
jno
sarl
and
push
push
adc
and
cmp
lahf
icebp
inc
and
pop
dec
enter
add
sub
pop
cmpsb
jle
add
add
cmp
sub
bound
xchg
incl
add
xchg
fsubrl
mov
inc
and
jl
nop
adc
fs
hlt
xchg
int3
push
push
pop
in
out
shll
pop
popf
dec
dec
add
repnz
stc
lock
nop
je
mov
pop
or
inc
cli
and
loop
leave
push
cmp
sti
and
pop
daa
sbb
mov
pop
mov
and
in
dec
or
cmc
stos
mov
andl
dec
cmp
sub
call
or
push
add
mov
shrb
test
clc
setb
test
dec
add
add
cmp
jo
pop
dec
mov
dec
adc
data16
pop
or
sbb
jl
aaa
adcb
jle
and
and
pop
pop
out
inc
mov
scas
sbb
add
push
xor
ret
icebp
dec
mov
jo
adc
mov
add
cmp
add
imul
adc
add
push
scas
and
int
xchg
popf
cmp
or
repz
mov
add
jo
xor
mov
in
pop
or
mov
pop
jmp
dec
sti
lret
sub
bound
mov
mov
sub
push
in
aas
jmp
test
stos
sbb
jl
pop
daa
ds
icebp
adc
dec
push
mov
lock
clc
add
pop
je
and
jp
or
loopne
jne
pop
adc
inc
cltd
mov
add
adc
xor
adc
push
add
push
mov
jle
add
jmp
add
out
mov
testl
mov
out
divl
push
push
and
test
adc
sub
call
add
cmc
xchg
cmpsb
add
push
out
and
inc
xchg
push
push
shlb
icebp
and
pop
push
in
sub
hlt
dec
dec
sahf
fmuls
sbb
cmp
mov
xor
xor
sbb
lret
lock
adc
aam
mov
hlt
add
mov
out
shrb
inc
mov
sbb
stos
shll
push
stos
xchg
lret
mov
push
nop
in
call
cmp
inc
and
mov
in
mov
push
iret
mov
lods
imul
pushf
adc
push
sbb
mov
push
push
mov
pusha
das
call
loopne
arpl
push
ret
cmp
sub
insl
test
and
jo
cmp
fsubrl
leave
imull
pop
push
push
outsl
sbb
add
xchg
jnp
imul
imul
cmc
nop
or
push
cmpsl
pop
enter
push
in
dec
cmpsl
adc
cmp
mov
decb
ficompl
jae
inc
out
popf
jae
cmp
sbb
xchg
pop
xor
sti
cmp
enter
jnp
adc
jne
mov
fstpl
push
out
dec
rcrl
push
lods
sbb
pushl
push
lret
push
cmpsl
loope
scas
mov
dec
nop
cmp
add
decl
iret
clc
and
test
je
shll
mov
je
stc
jge
neg
loop
dec
mov
jmp
dec
mov
sub
and
add
mov
jae
mov
add
jo
pusha
inc
xor
dec
push
add
sub
push
sbb
mov
sub
leave
js
cmp
dec
sti
dec
jge
mov
mov
mov
cmp
sbbb
lods
add
cmp
jle
call
push
dec
setle
push
or
cmp
std
fsubr
sbb
popf
fwait
inc
push
mov
out
je
xchg
int
inc
cs
sbb
aam
xor
mov
push
test
into
cmp
mov
lahf
add
pop
jo
sub
dec
clc
cmp
sete
adc
loope
add
insl
andb
je
sbb
adcl
push
test
sbb
shlb
insb
jp
jno
dec
movsb
pop
lds
mov
pusha
loop
sbb
and
pop
or
and
dec
mov
inc
movsl
repnz
dec
add
sbb
jno
pop
lea
das
arpl
push
push
rolb
lods
pop
lods
fwait
adcb
jae
add
lock
jne
or
sub
lea
add
add
mov
push
sbb
imul
mov
mov
movsb
bound
mov
jge
mov
sub
push
iret
ss
imul
or
and
cmp
inc
push
xchg
push
or
popa
fcmovnb
fwait
mov
sbb
or
jmp
das
adc
mov
sub
outsl
mov
nop
lret
pop
in
cmpsb
add
outsb
sbb
pop
pop
adc
rolb
pusha
fmull
je
in
adc
mov
or
lock
in
aaa
ret
in
repz
in
call
ja
fdiv
in
aaa
xor
cmpsb
and
push
jns
popf
push
fdivs
pop
pop
arpl
add
jbe
push
mov
dec
shrl
test
andl
testb
jmp
or
ja
sbb
je
adc
mov
mov
dec
push
adc
or
jg
sub
xchg
je
jecxz
aam
jb
xchg
or
inc
bound
in
push
mov
scas
sbb
dec
and
clc
clc
and
clc
inc
addl
dec
cmp
pop
xor
xor
hlt
add
dec
or
push
mov
in
dec
clc
pushl
xor
mov
mov
dec
call
jle
cmp
pop
clc
lahf
sub
in
jnp
adc
clc
pop
jmp
in
jmp
das
hlt
fwait
loopne
fnstsw
out
or
sti
add
into
push
push
add
push
outsl
or
sbb
rcll
clc
adc
xchg
nop
mov
mov
pop
mov
add
ds
inc
inc
in
jb
mov
fstpt
das
sub
jg
mov
iret
push
insb
cwtl
add
jb
nop
inc
xacquire
enter
inc
lahf
cmp
clc
xor
in
jp
xchg
mov
cmp
add
clc
sbb
sbb
daa
pop
push
mov
js
mov
adc
test
add
push
xor
xor
push
jg
loop
sbb
push
movzwl
adc
push
gs
cmc
rsqrtps
jo
lea
push
jl
inc
icebp
and
push
push
shll
fcmovb
lret
cmp
insb
jbe
jbe
pop
push
mov
call
jo
call
jo
pop
mov
gs
inc
fucomi
mov
sbb
adc
mulb
inc
push
push
fisttps
in
pop
popa
loopne
sbb
in
push
mov
movsb
add
adc
ss
xchg
movsb
xor
ret
inc
cmp
mov
adc
pop
mov
movsl
int3
ret
add
sbb
and
mov
or
add
cld
mov
jmp
adc
xor
mov
push
test
add
and
cmp
sbb
push
ss
mov
ja
add
jl
andl
mov
and
scas
movl
jle
or
pop
dec
push
es
jo
addr16
movl
dec
pop
jp
cmp
sub
xchg
push
sub
mov
add
hlt
push
mov
cltd
inc
xchg
arpl
dec
xor
mov
push
cmp
cmpsb
rolb
cltd
push
push
cmp
inc
sbbl
and
xchg
pop
outsb
jns
popf
lcall
push
mov
sbb
mov
or
popa
xchg
mov
arpl
pusha
dec
loopne
or
push
push
loopne
mov
mov
jb
icebp
push
jg
dec
fs
add
cli
cs
aam
jecxz
add
add
sbb
sahf
idivb
mov
pop
xchg
sub
aad
inc
sbb
shrl
add
roll
cwtl
iret
push
pusha
sub
add
dec
fistl
sbb
jecxz
xchg
adc
sbb
jnp
aaa
adc
mov
pop
fidivrl
xor
jns
cmp
jmp
mov
xchg
sub
mov
xor
mov
adc
sub
pop
push
lcall
sub
adc
pop
test
xlat
jl,pn
jmp
add
or
lock
jg
sub
loopne
leave
cmp
loopne
fwait
add
cmp
shlb
cvtdq2ps
arpl
sub
sbb
add
pop
and
test
or
inc
mov
pop
mov
jmp
inc
sahf
mov
or
cwtl
movl
mov
lea
cmpsl
add
mov
inc
adc
lret
shll
sbb
mov
mov
dec
add
nop
add
push
repz
scas
or
add
lea
push
daa
cmp
mov
or
out
jp
orl
pop
or
cld
mov
fdivs
sub
add
add
adc
inc
or
lcall
mov
sub
mov
cwtl
push
or
xchg
xor
dec
js
sub
lea
test
pop
adc
mov
faddl
dec
cwtl
adc
xchg
push
add
scas
push
add
mov
sbb
cld
dec
js
lock
mov
mov
adc
mov
pushf
push
setne
dec
xchg
cmpb
add
lahf
pop
int
lret
fs
push
push
jbe
push
jne
and
cltd
sub
xchg
mov
jg
sbbb
mov
fcoml
pop
push
and
loop
leave
lea
or
or
sbb
add
pop
movsl
and
ret
mull
pop
imul
stos
stos
add
xchg
ja
lods
and
inc
xor
push
or
loopne
rorl
jg
notb
sub
sbb
sti
scas
pop
stos
push
add
mov
imul
xor
push
cmp
loopne
ret
or
dec
and
sbb
test
repz
in
sbb
dec
cmp
cmc
push
mov
and
dec
jmp
orl
sbb
dec
pop
int3
imul
mov
call
scas
das
mov
gs
in
aas
mov
call
cmp
jmp
scas
mov
outsl
jns
sbb
lret
sub
xor
mov
pop
or
jmp
push
shr
mov
adc
loope
pusha
inc
xchg
fstpt
mov
lret
or
repz
add
fildl
pop
pop
cltd
xchg
mov
push
pushf
and
inc
js
mov
jns
dec
add
inc
jb
pop
mov
popf
lret
fisubrs
add
jmp
fcoms
push
inc
mov
imul
dec
push
loope
dec
or
push
fisttpll
outsb
pop
xor
push
sbb
mov
add
sub
aad
dec
or
pop
enter
or
xchg
or
push
and
dec
cmp
les
add
divl
mov
daa
fwait
xor
xchg
inc
int
subb
stc
in
mov
inc
or
xor
add
pop
fidivs
fimuls
mov
adc
outsl
jbe
add
mov
ss
jo
xchg
mov
mov
jl
outsb
int3
lods
xor
cmp
adc
fiadds
push
jp
add
ror
push
mov
orb
leave
sahf
xchg
rorl
sahf
lods
rolb
xchg
mov
push
and
push
push
repnz
mov
loopne
out
dec
jae
pop
sbb
test
test
faddp
add
fs
data16
xchg
or
push
lock
dec
push
sub
xchg
adc
lock
xchg
ret
push
add
sti
addb
dec
imul
aas
movsb
fdivrs
fucomip
add
cmp
push
sbb
dec
adc
xchg
mov
fdivr
inc
insl
movsl
jbe
and
lds
sbb
mov
xchg
xchg
pushfw
mov
push
add
lea
fs
mov
mov
lea
push
mov
call
in
push
arpl
add
clc
aam
jnp
aaa
pop
mov
mov
lock
mov
xchg
je
je
ds
mov
inc
mov
sbb
xor
fdivr
insl
jo
xchg
sub
xchg
mov
mov
insb
shll
jbe
js
mov
test
adc
and
fs
inc
adc
in
xchg
dec
mov
jnp
dec
jbe
mov
adc
inc
insb
push
mov
mov
xchg
inc
out
cwtl
das
ss
in
inc
aas
das
aam
gs
popl
cmp
dec
pop
lret
jmp
xchg
jne
jo
hlt
nop
push
add
repnz
add
lods
mov
push
push
push
sarl
sbb
pop
ja
addl
data16
add
dec
loop
negb
out
lret
test
mov
fnsave
ljmp
aaa
sbb
rolb
add
daa
nop
jnp
inc
lret
repz
jns
cmpsl
add
lods
pandn
push
arpl
xor
inc
and
fcmove
pop
push
gs
xchg
fiaddl
push
rolb
cmpsl
mov
push
lock
les
sldt
xchg
out
pusha
imul
popf
xchg
xor
mov
shl
add
dec
loopne
pushf
cmpsl
or
ficoms
js
jecxz
mov
cmpsl
cmc
adc
sub
nop
push
notb
jmp
aaa
inc
pop
push
or
add
push
push
stos
andb
mov
roll
cmp
xorl
push
mov
adc
add
ret
or
xchg
aam
dec
rcrl
add
xlat
push
jecxz
mov
add
jae
jno
loopne
sbb
mov
insb
fxch
mov
loopne
sahf
xchg
movsl
popf
add
movl
push
mov
jne
pop
loope
or
loopne
jge
orb
ja
sub
push
adc
cmpsb
sub
daa
pop
sbb
pop
idivl
xchg
fldenv
mov
inc
and
cmp
shl
js
test
imul
sub
imul
rcll
mov
and
je
adc
aas
sub
jmp
push
lods
jb
add
popa
push
leave
inc
xlat
sbb
push
cmp
inc
leave
push
dec
xor
icebp
sbb
sbb
stc
xor
enter
or
rcrb
xlat
pop
ret
bound
cmpl
mov
push
pop
cmp
je
cwtl
push
in
mov
xor
pop
pop
adc
or
sbb
cmpsl
adcb
cwtl
dec
xor
rorb
sti
push
xor
jns
push
pop
andb
lea
push
push
push
add
fiaddl
and
lea
cmp
jge
inc
and
add
add
add
cmp
mov
and
jge
mov
stos
in
sbb
jne
xchg
push
inc
add
rclb
mov
test
fsubrl
mov
sahf
int3
sub
jl
pusha
and
mov
mov
or
mov
sbbl
sub
loopne
sub
dec
psubusb
aas
aam
outsb
push
or
test
addr16
xor
xlat
jns,pn
icebp
inc
fcmovb
and
sbb
push
xchg
ret
jo
insl
mov
int3
xor
dec
push
sbb
arpl
ja
push
fadd
scas
ja
rcrb
push
xor
sub
mov
insl
faddl
or
pop
rorb
rol
dec
mov
lcall
adc
add
popf
call
add
repz
mov
mov
add
sahf
add
es
imul
sub
add
xchg
fldl
mov
stos
mov
fldl
add
add
gs
cmp
fistpll
add
mov
fdivl
mov
ljmp
leave
adc
pop
enter
sub
jl
lock
mov
push
mov
addl
pushf
popa
les
push
push
lea
pop
and
fcomps
push
incl
inc
in
push
aas
rorb
cmpb
out
dec
or
je
push
cwtl
lock
mov
xchg
cmp
xor
dec
jae
mov
fsubs
shll
inc
movsb
xor
or
pop
or
inc
pop
fdivrs
sbb
std
or
cmp
ljmp
lock
xchg
lock
dec
sub
or
les
test
and
jae
cli
fisttpl
cwtl
loope
cmpl
scas
test
mov
lods
push
stos
xchg
test
ret
push
cmp
ficoml
pop
push
cld
je
or
xchg
inc
daa
push
inc
in
sti
pushw
mov
roll
icebp
mov
xorl
adcb
inc
xor
test
add
mov
xchg
pusha
cmpb
pop
push
mov
rolb
bound
adc
xchg
add
test
out
mov
pop
callw
push
sub
in
mov
mov
cmp
loopne
scas
and
jl
xchg
pop
in
lret
hlt
inc
out
pusha
add
cltd
popf
outsl
mov
ret
add
inc
mov
jl
mov
sub
push
arpl
rorl
js
push
loopne
mov
add
pop
add
movsl
mov
rol
push
xchg
test
ret
popa
sbb
std
mov
sub
sbbb
jmp
push
push
iret
scas
and
xor
setle
fnstenv
mov
pusha
rolb
fcoms
push
add
inc
test
xchg
mov
or
mov
sbb
sub
out
or
stos
sub
bound
mov
or
xor
push
lea
cwtl
push
xor
pop
sub
push
pop
fdivr
cmp
stos
mov
mov
or
dec
in
subb
push
int3
push
inc
inc
pop
adc
pop
mov
rcrl
cltd
xchg
loopne
mov
sub
enter
pop
or
sbb
call
ficoms
push
mov
gs
lock
and
imul
hlt
lea
pop
push
xor
add
sub
sti
push
rorb
jmp
adc
cwtl
sbb
inc
pop
xor
jnp
or
pop
pop
adc
rolb
fs
dec
or
leave
test
adc
add
or
mov
ret
scas
fsubrs
ja
mov
cmpb
addr16
popf
cmpsb
dec
ret
push
mov
js
dec
sub
clc
je
push
add
xchg
push
sub
push
add
adc
push
inc
push
xchg
mov
icebp
dec
fwait
push
pmulhuw
fadd
xlat
xor
xor
fcmovnu
fwait
jle
dec
outsl
xchg
lret
cmp
jl
test
mov
int3
xor
sarl
pop
sub
lcall
xor
cmp
jne
lret
out
xor
ret
cmp
push
push
shll
fcomps
out
push
or
cmp
je
sub
out
jo
push
push
stc
push
popf
fcomi
loopne
pushf
fistpll
add
flds
adc
push
sar
repz
or
xchg
and
sbb
bound
in
pop
adc
push
mov
lahf
in
xor
das
in
sub
jo
clc
fisttps
js
dec
or
in
xor
mov
out
xorl
jge
mov
mov
pop
call
push
cwtl
pop
imul
ja
adcl
and
pop
mov
add
ret
fidivrl
lcall
loope
out
inc
add
sarl
or
orb
dec
mov
popa
adc
add
cmp
outsl
adc
dec
or
mov
icebp
rorl
fwait
xor
int
jg
cmp
inc
and
cmp
je
sbb
jbe
outsb
clc
pop
mov
mov
fbstp
mov
mov
lods
mov
push
das
mov
push
add
inc
or
pop
pushl
test
mov
pop
ljmp
push
mov
push
dec
or
push
sbb
xorb
push
sub
dec
and
cmpl
cmpsb
dec
or
xchg
push
or
rclb
or
fmul
pop
movsb
mov
add
loopne
mov
and
mov
dec
add
sbb
aad
in
scas
cltd
or
jne
loope
fcoms
popa
adc
test
mov
dec
xchg
inc
cli
mov
add
js
or
xchg
icebp
mov
adc
leave
je
mul
seto
push
out
add
enter
imul
jmp
jnp
cmpsl
push
cmp
fmull
pop
lock
sub
test
shlb
cmp
shl
cltd
sub
and
cmpsb
inc
cs
dec
inc
add
inc
sbb
dec
pop
popa
sub
cmp
clc
fldl
mov
adc
icebp
pusha
cmpsl
sbb
and
data16
cs
inc
daa
or
add
inc
adc
in
pop
dec
test
mov
mov
sbb
test
pop
sub
lahf
add
xor
xchg
sbb
cmp
push
fdivrl
push
push
and
leave
add
nop
popf
push
sbb
push
in
pop
mov
test
lds
add
push
pop
sbb
cmp
je
sbbb
mov
xor
pushf
cmp
je
pop
xor
xchg
and
cmp
jne
ds
adc
dec
cmp
add
pop
mov
sub
lock
subl
sub
mov
mov
pushf
xchg
lods
xchg
faddp
jmp
jl
ret
dec
mov
test
je
cli
jmp
mov
inc
jno
lock
inc
cmp
jae
add
ss
mov
inc
xor
sbb
pop
jbe
mov
sub
push
and
sbb
jl
adcb
test
push
push
ss
mov
inc
jmp
stc
arpl
mov
test
cmp
bound
shl
push
std
cmp
mov
shlb
adc
mov
xchg
pop
or
push
loop
or
or
outsb
push
movsl
or
xlat
dec
enter
adc
or
ss
push
pop
cmpl
cmp
add
ja
lea
cld
ret
rorl
cmp
mov
adc
lea
jmp
push
jle
addl
mov
pusha
jo
add
mov
pop
cmp
out
lods
dec
or
push
inc
push
clc
dec
or
and
popl
rcrb
adc
inc
or
fnstsw
mov
or
mov
push
mov
and
inc
sbb
jg
push
imul
sub
adc
push
push
or
and
lock
insl
aad
push
cmp
mov
fwait
or
mov
mov
adc
add
and
hlt
add
pop
mov
sub
xchg
add
mov
mov
push
movsl
or
add
cld
adc
push
mov
jl
push
sbb
xlat
inc
orl
stos
xor
int
sti
xchg
jmp
or
mov
ret
and
sbb
dec
test
js
sbb
inc
out
sbbl
adcb
mov
push
test
sub
out
push
clc
aam
xchg
sub
push
push
out
sub
sub
adc
movsl
xor
test
test
pop
ret
call
mov
add
and
add
rol
inc
jp
aam
xor
push
bound
in
cmpsl
mov
dec
mov
rolb
push
jbe
fmuls
popf
ficoml
add
sub
or
sbb
jnp
out
jne
test
mov
push
push
lods
or
push
add
mov
sub
ror
pop
inc
xor
cmpsb
add
popf
cmp
add
adc
insb
lods
sub
add
ljmp
adc
pop
ret
or
jmp
in
and
mov
and
outsl
xchg
popf
dec
pop
mov
mov
push
adc
mov
jbe
push
orb
xchg
xchg
movsl
int3
jbe
and
jnp
jno
int3
ret
lods
mov
pop
add
jmp
jg
mov
shlb
xchg
add
sub
lock
add
loope
and
movl
and
add
mov
or
cmp
clc
and
inc
adc
imulb
mov
mov
pop
and
mov
in
pop
add
pusha
or
aam
mov
int
add
cwtl
fmull
sbb
je
outsl
test
sbb
aam
mov
icebp
xor
enter
sub
lahf
mov
push
add
imul
movl
jg
pop
inc
or
mov
push
or
xchg
pop
sub
sbb
enter
pop
cs
in
dec
lahf
or
mov
fmull
sub
into
addr16
jmp
inc
push
scas
leave
ret
cmp
mov
mov
sbb
mov
or
test
mov
cmp
js
mov
and
ljmp
pop
je
orl
push
mov
test
dec
rcll
sub
movsl
or
push
mov
jp
jle
mov
sbb
sbb
sub
mov
jnp
mov
ljmp
push
addb
add
dec
sub
movsb
repnz
popf
dec
fisttpl
push
push
add
inc
rcll
sub
orl
shll
loope
pop
inc
mov
insl
lods
mov
pop
and
mov
pop
popf
xchg
or
mov
xchg
adc
cld
lea
push
fnstcw
sub
sub
or
sbbl
sub
daa
sub
xor
add
cmp
adc
rcrb
dec
outsb
adc
clc
pop
fisttps
cmp
jbe
push
pop
cmp
inc
ret
pop
addl
mov
mov
test
mov
iret
mov
adc
mov
pop
xchg
out
inc
jo
arpl
out
cmc
mov
repz
in
cmp
push
push
sti
add
lea
pop
insb
lahf
cmc
and
fsub
in
rorb
push
xlat
sbb
into
pop
push
cltd
fsub
call
pop
push
daa
pop
leave
lea
cmpsl
adc
mov
in
push
loopne
hlt
enter
clc
adc
aad
push
iret
enter
push
dec
outsb
inc
les
sub
sbb
add
cmp
cmp
jp
sbb
adc
and
jae
mov
push
push
pop
inc
xor
test
adc
and
int
sbb
mov
jmp
mov
jecxz
aaa
push
sahf
js
push
rolb
jp
ret
loopne
mov
loop
push
in
or
popf
add
mov
sub
lods
mov
adc
sbb
daa
aaa
inc
inc
mov
jb
mov
loop
mov
bound
xor
cmpl
and
inc
or
aad
pop
andb
push
stc
pop
xor
pop
and
lahf
adc
and
sub
sbb
fwait
addl
pushf
out
sbb
jg
push
cs
push
pop
fwait
aas
pop
pop
push
movsb
loopne
cmp
in
pop
xor
fimuls
and
sbb
sbb
in
sub
test
ljmp
lahf
push
fdivr
faddp
nop
mov
mov
js
push
ret
fisttpl
test
pop
inc
inc
das
add
mov
pop
sbb
mov
pop
hlt
push
dec
aad
mov
rolb
mov
xchg
and
outsb
cmpb
and
std
lods
es
cmp
cmpsl
and
xor
mov
dec
ret
dec
adc
into
and
cmp
scas
mov
stos
dec
or
rolb
mov
call
clc
adc
das
pushl
mov
sub
test
hlt
mov
adc
add
mov
push
push
adc
sbb
xchg
xchg
enter
mov
sbb
or
test
pop
lods
sbb
add
cmp
jl
test
jno
xor
xchg
sub
test
inc
mov
addr16
jmp
adc
pop
xchg
pop
ja
xchg
fiaddl
popa
xor
push
in
push
push
mov
in
test
push
fcoml
scas
and
test
pop
dec
push
std
lods
mov
mov
dec
sar
js
loop
out
push
push
push
in
mov
mov
lret
hlt
cwtl
or
or
add
xlat
cltd
or
mov
pop
mov
cs
push
add
push
insl
inc
test
mov
dec
hlt
add
push
imul
ret
jo
shll
ss
xor
dec
lcall
jno
orl
stos
nop
or
or
mov
sbb
imul
push
inc
dec
jmp
mov
lods
test
out
dec
push
sub
adc
jmp
jae
loopne
movsl
pusha
jo
inc
insb
pop
mov
and
loopne
fmull
in
movb
add
mov
inc
pop
ret
sbb
cmp
inc
push
popf
idivb
loopne
mov
xchg
mov
add
add
cmpsl
adc
in
test
add
pop
sarb
ljmp
inc
or
inc
jno
mov
mov
xchg
inc
or
or
jg
loope
mov
jne
pop
xchg
je
popa
push
push
lock
xchg
fstpt
mov
or
jbe
ljmp
xor
jle
xor
in
sarb
test
fmuls
rcrb
jnp
jl
rorb
pop
cmp
inc
mov
gs
insl
test
push
imul
inc
xchg
mov
push
icebp
adc
enter
out
jle
sbb
add
xor
cltd
xor
sbb
mov
loope
shll
add
cltd
inc
sbb
adc
fists
clc
cld
outsl
mov
clc
inc
push
sahf
sbb
fadds
or
sbb
mov
cmpsb
adc
fmuls
xchg
loope
shl
or
mov
xlat
shlb
cli
inc
lock
daa
in
add
add
xchg
push
popl
or
repz
neg
test
inc
or
cld
sub
mov
mov
xchg
cmp
sbb
xor
stos
jle
push
into
dec
xor
inc
incl
scas
es
add
xchg
push
js
inc
push
pushf
pusha
out
or
mov
mov
cmp
js
lds
and
xchg
rcrl
repnz
sbb
adc
fucomip
in
and
daa
and
jno
or
outsb
adc
icebp
xchg
clc
aas
dec
add
add
xorl
xor
add
or
imul
dec
sbb
or
sahf
xchg
cmp
sub
lahf
sbb
cmpb
pop
or
loope
push
adc
cld
mov
out
jnp
orl
push
push
lock
push
jp
inc
je
out
xor
or
push
outsl
adc
cmp
or
shlb
add
dec
loope
add
mov
or
dec
dec
rorb
xor
xchg
cmpb
out
lods
jnp
dec
pop
jne
push
mov
mov
push
inc
or
add
rorl
scas
and
imul
push
data16
fstpl
adc
cmp
jbe
sbb
inc
outsl
aas
sbb
sbb
adc
mov
xchg
stc
jae
cmp
jb
cmp
dec
mov
dec
adc
rcrb
mov
add
incl
cmp
lcall
adc
inc
je
ret
add
cmpsb
sbb
addb
dec
call
enter
andb
fildl
insb
pushf
add
pushf
inc
and
inc
xchg
push
cmp
dec
pop
or
push
push
or
out
add
push
aas
adc
push
push
fdivrs
aaa
push
addl
add
sbb
mov
adc
push
aas
ret
aam
out
and
add
shlb
push
test
sbb
jmp
test
mov
pop
xchg
mov
imul
js
inc
sub
fld
mov
pop
faddl
adc
pusha
dec
xlat
push
loopne
jmp
dec
incb
lods
dec
insb
push
push
push
lea
sbb
ja
arpl
push
jbe
lea
jmp
adc
adc
sub
stos
pop
add
pop
mov
adc
in
insl
lea
push
test
sub
js
pop
push
pop
mov
adc
add
sbb
or
test
incl
adc
dec
fdiv
scas
sub
cmp
xchg
pusha
lret
push
sbb
add
or
mov
rol
adc
sbb
sbb
mov
pop
push
nop
ljmp
adc
pop
imul
mov
mov
jbe
je
fnsave
and
sbb
lods
add
dec
mov
sbb
push
inc
sahf
call
ret
dec
cmp
sbb
jle
sbb
adc
pushl
add
dec
jmp
or
orb
dec
inc
cmpsb
pop
fbld
push
cmp
sbb
loop
jnp
sbb
dec
and
rolb
and
pusha
cmpsb
dec
call
cwtl
jle
inc
or
push
cmp
pusha
xchg
popa
movsl
icebp
sub
js
mov
jge
sbbl
or
mov
dec
add
inc
add
fldl
insb
sub
dec
xchg
shlb
sbb
xlat
and
bound
add
cmp
popa
sbb
jg
cmp
dec
in
jno
lea
lea
mov
mov
or
mov
imul
imul
mov
daa
fimuls
mov
pop
adc
push
lods
lret
int3
cs
adc
mov
loopne
mov
adc
and
mov
and
dec
dec
adcl
xor
or
test
sub
add
bound
movsl
sub
sbb
mov
sarb
pusha
and
sub
jo
cmc
and
mov
popf
jmp
in
popf
fiadds
mov
out
cmp
je
rcrb
int
daa
nop
inc
andb
outsb
mov
mov
push
xor
out
loopne
repnz
loope
sub
mov
ret
outsb
xchg
lret
adc
inc
idivb
je
sub
mov
div
aas
mov
cmp
cmp
jb
xchg
lret
mov
or
mov
rclb
add
xchg
add
mov
mov
orb
or
xor
xchg
cwtl
por
pop
add
fwait
mov
add
jge
pushf
mov
cwtl
add
xor
rclb
sarb
andl
ja
jmp
aam
sub
pop
call
orl
sub
incl
aam
aas
push
xchg
xor
dec
push
je
dec
jne
cmp
lea
mov
or
xor
adc
mov
and
das
lahf
xor
pop
jmp
add
insl
inc
leave
mov
in
int3
pop
cli
inc
and
es
sbb
mov
adc
add
rorb
aad
andl
cld
nop
dec
lret
movl
outsb
daa
xor
outsb
jg
gs
mov
lea
cli
jb
adc
jo
dec
push
inc
jle
xchg
ret
mov
adc
decb
mov
inc
arpl
loopne
ja
xchg
pop
sbb
insl
je
movsb
mov
mov
push
lret
mov
inc
adc
test
xor
aam
cmp
dec
fdiv
xor
adc
or
dec
or
sti
push
push
dec
lods
mov
dec
inc
ret
lcall
into
filds
xchg
push
frstor
push
ret
push
and
lahf
loopne
cld
xor
ds
je
iret
sub
cmp
mov
xor
cmp
or
subb
mov
loop
test
jg
sub
in
shll
lea
push
adc
inc
cmp
push
adc
movntq
pop
cmp
push
jne
cmp
jbe
sub
add
popa
enter
inc
sub
pop
into
jmp
sbb
in
sub
xor
clc
nop
mov
imul
roll
mov
mov
insl
clc
jb
fists
loopew
adc
ret
test
es
push
pop
or
or
xor
xchg
ret
sahf
or
jno
push
imulb
sbb
loopne
push
push
lods
adc
pop
aaa
push
fsubs
and
rcll
cmc
shr
and
je,pn
aaa
js
mov
orl
rcll
outsb
adc
sbb
mov
mov
stos
xchg
adc
ret
pop
pop
dec
push
jmp
je
fs
fcompl
test
sbb
fs
cmpsl
sbb
popa
add
xor
push
icebp
in
xorb
inc
cmp
cmp
mov
mov
xchg
dec
or
pusha
pop
ljmp
adc
mov
sbb
push
js
in
mov
mov
push
mov
adc
jno
divb
adc
aad
sbb
idivl
push
mov
fimuls
stos
icebp
inc
inc
cli
mov
cmp
xor
mov
jnp
adc
push
lds
sbb
stos
or
lods
fucomp
jo
add
inc
adc
push
and
sub
xor
adc
les
sbb
popa
mov
cwtl
sbb
scas
stc
adc
js
lcall
push
mov
pop
popa
and
adc
push
das
push
es
ss
mov
adc
lods
loopne
cmp
nop
sbb
sbb
cmp
jge
sub
mov
or
mov
or
adc
add
mov
in
ret
test
inc
pop
gs
xor
sbb
dec
add
or
test
fmuls
mov
lds
adc
dec
add
mov
rol
pusha
jo
enter
insb
in
mov
mov
lea
call
in
sbb
popa
xor
popf
mov
faddl
sbb
add
jbe
xlat
sub
or
arpl
jne
push
scas
mov
mov
push
fistpl
or
out
les
add
out
loop
out
in
xchg
add
imul
cwtl
mov
xchg
cmpb
insb
hlt
cmp
je
push
pop
imul
pop
add
xchg
and
mov
shrl
or
dec
push
xchg
movsb
fdivrl
mov
push
inc
or
ret
arpl
or
xchg
ret
and
cmp
lods
mov
mov
and
and
xor
lret
sti
sub
push
lods
and
mov
jae
into
and
rorl
ljmp
lret
push
or
push
add
lahf
jne
div
mov
cs
push
ss
add
mov
rorl
mov
das
jl
fisubl
mov
mov
xchg
cltd
daa
xchg
cltd
and
in
push
mov
xchg
sti
test
cmpsb
mov
fs
subl
cmc
int3
push
faddl
test
test
sbb
mov
dec
je
mov
jno
jae
sbb
add
inc
enter
jns
mov
test
cmp
or
inc
orb
jmp
and
dec
cmp
or
sbb
push
cwtl
mov
pop
push
test
notb
sbb
mov
and
loopne
inc
mov
sub
mov
aas
mov
in
cmp
sbb
and
sbb
cld
pop
or
shrb
push
dec
xor
in
pop
push
push
and
ja
pop
mov
xlat
cmp
daa
xchg
pop
mov
fistpl
lds
daa
iret
mov
xor
ds
cmp
into
test
es
adc
sbb
dec
mov
push
mov
enter
sub
movsl
loope
cmp
push
xchg
jg,pt
popf
or
aas
mov
mov
dec
cwtl
stos
ds
xchg
mov
mov
push
lret
js
mov
push
sbb
mov
mov
jp
fstl
pop
and
and
aas
mov
cmp
jo
dec
pop
xor
push
add
add
test
pop
cmp
mov
lret
push
out
cmp
jge
dec
stos
cs
movsb
jp
cmpsb
dec
push
mov
fsts
insl
out
sbb
mov
push
dec
and
sbb
cmp
sbb
lods
sarl
leave
aaa
inc
in
push
inc
xor
jl
sub
push
pusha
leave
xchg
jl
mov
mov
pop
xchg
fistl
push
mov
jecxz
mov
add
jecxz
dec
fwait
push
xor
movsl
sbbl
adc
xchg
jmp
or
adc
andb
add
inc
js
outsl
xchg
pop
xchg
and
insl
mov
fistps
out
cmpsl
or
mov
je
mov
out
sub
mov
and
sbb
adc
push
adc
xor
or
dec
pop
add
pop
jb
mov
pop
add
std
aas
xchg
add
pop
test
or
push
or
push
sti
push
cmp
and
and
ja
fs
sbb
mov
sbb
push
imul
or
sub
cltd
mov
and
and
imul
xor
xor
lods
push
mov
or
scas
xchg
pop
xchg
mov
xchg
add
js
pop
sub
xor
xlat
lea
xchg
xlat
jge
or
aaa
sub
push
add
inc
cld
pop
mov
out
pop
cltd
adcl
jo
cmp
xchg
xchg
add
sbb
sub
push
sbb
pop
mov
cmp
inc
pop
out
int3
mov
xchg
pop
dec
es
das
adc
add
lods
xor
xor
xorb
sbb
inc
mov
mov
xor
and
and
stos
rorl
popf
add
loopne
popf
adc
enter
sbb
pushf
or
pushf
inc
aaa
or
jmp
jnp
arpl
je
pop
es
adc
mov
jae
adc
jno
jge
loop
jno
stos
or
movsb
jb
mov
shll
xlat
call
xchg
inc
dec
dec
cmp
jecxz
cwtl
movsb
xchg
cwtl
outsl
jne
lea
lock
xchg
cmp
inc
push
andb
push
xor
add
inc
pop
mov
inc
divl
or
icebp
out
stos
shrb
pop
outsl
mov
cs
sub
andb
jg
cmp
mov
rcll
add
ja
push
adc
sub
inc
sub
mov
mov
xor
lret
inc
popf
pop
lea
orl
add
and
cmp
push
adc
cmp
or
xor
cli
pop
inc
push
and
sbb
pushf
jge
shrl
imul
shr
mov
out
cltd
pop
loop
push
mov
jbe
pop
and
rorb
or
cmp
xor
push
sub
roll
mov
clc
pop
enter
add
add
pop
mov
in
mov
out
icebp
dec
adc
mov
insl
ret
mov
nop
aaa
sub
fdivr
push
push
sub
leave
out
xchg
mov
or
mov
jno
imul
mov
sub
rolb
fildl
not
mov
xchg
or
cltd
adc
xchg
ud0
addl
pop
popf
pop
xlat
lods
sbb
sahf
fwait
lret
jp
cmp
xor
sbb
dec
or
mov
xor
jl
push
mov
jo
push
push
xchg
rcr
add
mov
jne
aad
cmp
ja
push
inc
dec
add
jo
or
mov
fldenv
and
sarb
or
cmp
push
mull
icebp
push
dec
cltd
cwtl
in
jo
dec
movsl
pop
sub
lock
pop
sbb
lret
popa
fs
popf
push
popa
mov
fistl
xlat
ja
sub
in
divb
mov
jmp
fnsave
adc
adc
addl
fcomps
pop
push
pop
jge
call
add
cmc
xorl
in
pop
int3
push
cmpsb
or
jo
cmpsw
ss
adc
mov
jae
xchg
pop
inc
cmpsl
mov
in
pop
call
jno
lret
mov
push
xor
cmp
sub
test
out
fsub
loop
cmp
mov
iret
cmp
stos
jno
push
dec
push
xchg
mov
std
add
jp
sub
cmpsl
jno
pop
sti
sbb
in
pusha
fcoms
fidivrl
mov
pop
inc
sub
pop
or
add
and
push
inc
push
and
sbb
in
pop
and
fcoms
nop
sbb
xor
and
mov
fcoms
inc
and
and
xor
fdivs
mov
and
call
lds
je
negl
push
xchg
daa
push
jno
jp
sub
daa
stc
imul
and
sub
sub
pop
sub
inc
or
inc
leave
adc
test
or
sbb
out
pop
push
les
add
fnstsw
push
jnp
negl
mov
push
push
sbb
pop
arpl
dec
adc
add
or
sbbl
movl
int
outsl
jne
mov
and
mov
jle
dec
mov
mov
and
xor
imul
rcll
pop
cmp
dec
add
or
inc
or
pusha
lea
fildll
sarb
and
inc
lcall
cltd
nop
sbb
adc
cwtl
mov
or
daa
xchg
sub
testl
xchg
dec
adc
or
ret
sbb
adc
and
add
add
and
dec
clc
movsb
push
inc
in
out
inc
add
je
iret
jo
inc
or
and
inc
or
cmp
int3
shrb
ret
js
lock
js
lea
popf
push
rclb
sub
scas
shrb
and
mov
daa
adc
rcrb
daa
or
sub
pop
pusha
loopne
add
push
jbe
sbb
into
faddl
push
or
jl
outsb
stc
fisubrl
mov
pop
adc
mov
loopne
dec
jne
test
xchg
push
out
or
aam
xor
test
out
mov
push
ja
imul
sub
adcl
inc
adc
lock
or
scas
xchg
scas
pop
pusha
push
pop
push
xor
loopne
push
dec
pop
or
in
and
repnz
adc
xor
les
rorb
cmp
xor
jge
sbb
test
or
lods
rcll
or
lock
push
dec
and
pop
lock
mov
mov
adc
or
loopne
mov
add
cmpsb
stos
sub
fs
add
je
imul
push
int3
bswap
push
icebp
mov
bound
mov
sub
repnz
add
push
adc
lea
push
mov
nop
sbb
and
fld
movsl
jge
popa
call
pusha
xor
dec
ffree
in
imul
cmp
shll
push
push
mov
sub
sbb
or
inc
inc
sub
rol
push
adc
add
enter
imul
dec
cmp
lea
jo
lahf
mov
and
pop
call
adc
mul
dec
push
pusha
cmp
stos
ficoms
and
decb
jge
add
faddp
cmpsl
adc
sbb
addr16
hlt
pop
test
and
cmc
jnp
push
repnz
loopne
out
adc
stos
dec
sub
es
pop
repnz
adc
cmp
lcall
idivb
inc
jne
push
loopne
sarb
mov
jge
mov
mov
loope
dec
fldcw
or
add
add
aaa
add
mov
dec
movsb
cltd
clc
push
push
shr
add
andl
pop
movl
pmulhuw
sbb
adc
push
adc
mov
sub
std
xor
mov
shl
xor
jns
mov
lods
adc
mov
adc
nop
push
cmpsl
inc
stos
jge
es
movsl
jae
aam
sub
sub
mov
popf
jae
sbb
mov
xor
add
mov
or
jecxz
mov
clc
or
js
lea
pop
inc
pop
nop
add
xchg
test
and
iret
xor
orl
cmpsb
adc
and
rcr
dec
dec
addb
jmp
rorl
addl
dec
push
inc
jmp
mov
xor
scas
arpl
xchg
bound
mov
subl
mov
cmpsl
or
pop
fistl
add
jmp
sub
popa
lds
jbe
addl
add
mov
or
add
and
in
add
movsb
inc
stos
mov
lock
mov
std
mov
mov
sbb
leave
mov
cmp
adc
mov
mov
push
mov
dec
sbb
sub
movnti
inc
or
bound
std
test
or
jae
aas
ret
aam
pop
push
push
or
push
mov
movsl
fidivrl
pusha
cmp
xchg
add
add
sub
pop
or
or
les
ret
cmpsl
mov
out
in
inc
mov
dec
fsub
cmp
jle
loope
clc
jg
jae
inc
add
outsb
mov
fcomps
cmp
subb
cmp
mov
cmp
mov
pop
pop
or
xchg
faddl
sub
xor
sbb
pop
gs
paddusb
mov
sbb
mov
lret
popf
les
jp
cltd
add
or
addb
lock
pusha
enter
jne
or
adc
sbb
daa
stc
add
test
sbb
add
pop
inc
push
push
dec
mov
in
sub
add
fistpl
pop
cwtl
ficoms
inc
daa
sub
stos
xor
xor
mov
sbb
adc
sbb
imul
enter
cmp
dec
rorb
mov
lea
mov
mov
out
insl
mov
movl
jp
inc
cltd
push
enter
ljmp
cld
lea
js,pn
dec
cmp
dec
dec
outsb
pop
or
jae
or
pop
or
push
hlt
bound
sub
loopne
insb
sti
adc
or
push
add
shlb
insb
ret
inc
xchg
inc
sbb
lcall
movl
adc
add
popa
scas
add
dec
sub
sarb
add
cmp
lock
cmp
or
dec
sbb
add
insl
pop
lea
jmp
arpl
adcb
or
cltd
inc
push
add
popf
pop
adc
add
mov
jp
add
add
dec
adc
dec
rolb
das
test
shlb
scas
jne
or
xchg
mov
add
sbb
adc
or
inc
movl
sub
popf
mov
mov
outsl
inc
sti
out
xor
cs
mov
addl
or
add
push
mov
add
mov
add
js
inc
lea
clc
cmp
dec
popa
inc
ja
mov
loope
aas
popf
cwtl
je
dec
adc
and
imul
mov
es
js
inc
or
add
or
mov
lods
xchg
add
imul
clc
inc
adc
adc
inc
loop
adc
outsl
popf
cs
xchg
cwtl
bound
and
scas
push
mull
cmpsl
push
jb
rcrb
cmp
lea
pop
push
push
xor
in
dec
mov
out
push
daa
push
xor
sbb
jb
aas
sbb
int
out
aad
je
sahf
incl
das
rolb
pop
cwtl
add
iret
leave
push
fdivl
add
das
subl
cmp
mov
dec
cmp
movsb
fcmovnb
inc
outsb
mov
jp
cmpsl
push
nop
inc
sbb
movsl
adc
decl
rcrl
or
inc
pop
jns
in
push
sub
dec
dec
xor
inc
xchg
pop
rorb
adc
xchg
sub
es
and
insl
pusha
push
mov
rcrb
sub
dec
in
pop
rol
adc
adc
enter
adc
sarb
add
add
mov
data16
sarb
test
orl
xor
fdivs
out
shlb
xchg
mov
js
push
test
sbb
inc
test
xchg
pop
sub
push
lock
jg
pusha
faddl
push
dec
inc
or
sub
lahf
adc
mov
lea
dec
and
mov
adc
jbe
fsubrs
cld
sbb
cmp
dec
inc
mov
sbb
adc
xor
inc
repnz
xor
shrl
sbb
mov
mov
mov
xchg
mov
mull
add
data16
push
or
les
add
mov
adc
sbb
enter
test
aas
push
lods
mov
clc
xlat
hlt
add
adc
and
test
pop
cmp
add
dec
jb
add
roll
arpl
xchg
repnz
scas
push
lcall
lret
cmovb
jge
call
subb
adc
push
movl
push
inc
inc
mov
sub
into
jg
inc
ud2
dec
sti
inc
push
mov
add
cmp
nop
out
xchg
dec
dec
inc
icebp
push
add
xchg
data16
add
xchg
and
pop
mov
push
jge
lea
insb
jo
fwait
and
or
jmp
inc
cmp
ss
into
push
sahf
cltd
jae
mov
in
mov
or
push
movl
cwtl
or
push
insb
or
subl
mov
dec
sbb
icebp
cmp
lods
push
pop
ror
push
mov
cmpl
mov
in
mov
push
jmp
pop
negb
add
sbb
xchg
addl
cmpsl
add
inc
popa
mov
mov
xchg
jns
push
ficompl
arpl
shr
addr16
sbb
gs
push
fdivs
mov
pop
cmp
insb
adcb
shlb
jo
mov
cmp
fimuls
sbb
adcl
shrb
mov
jl
add
dec
dec
fs
mov
pop
add
dec
add
xorl
inc
add
pop
xor
popa
lock
xor
clc
xchg
mov
sbb
stos
jnp
repnz
andl
pop
popf
cmp
add
pop
cltd
inc
dec
out
repz
pop
in
add
mov
add
inc
jnp
push
in
jge
lea
movsb
mov
shll
mov
mov
clc
mov
adc
add
test
rorl
fistpll
cmp
xor
xchg
jl
fisubl
add
xchg
sbb
jg
out
movl
addb
adc
syscall
rcl
mov
mov
dec
subl
mov
cmp
test
add
stos
lods
rol
out
push
push
dec
shrd
push
fsincos
add
mov
jge
or
jnp
mov
movsb
bound
and
xchg
cltd
lods
lock
mov
or
sub
sub
mov
jo
and
inc
sbb
pop
bound
or
imul
inc
bound
addr16
fdivs
sbb
cltd
pop
mov
xchg
mov
pop
dec
jo
jae
call
push
ja
sti
adc
adc
mov
fcoms
jno
mov
or
out
push
push
xor
xchg
pop
inc
andl
and
mov
xchg
mov
lcall
imul
shlb
in
mov
xchg
sbb
or
js
loopne
xchg
push
enter
addl
js
movsbl
mov
ss
pop
jno
jne
and
mov
je
adc
fwait
dec
fisubs
adc
adc
mov
pushf
mov
cmp
sbb
gs
mov
hlt
push
inc
test
rolb
pop
dec
cmp
lock
mov
lret
mov
sbb
pop
js
je
lret
jbe
mov
cld
adc
xor
in
jnp
jne
mov
xor
xor
jecxz
std
addl
lea
stc
lock
fwait
push
bnd
hlt
pop
dec
lods
repnz
dec
push
xor
addb
arpl
mov
mov
arpl
pop
lcall
gs
jno
xchg
fwait
and
shrb
sub
dec
nopl
repz
sbb
jns
std
lock
and
xor
jno
or
sub
and
mov
push
and
cmp
faddl
out
out
fsubrp
or
push
add
es
adc
add
int3
add
in
jmp
add
das
ret
xchg
mov
mov
hlt
and
inc
loope
pop
mov
dec
push
mov
shrl
push
pop
sub
push
push
jg
bound
sbb
and
popa
inc
xchg
mov
sub
mov
popa
and
imul
and
je
insb
fiadds
jmp
cmp
scas
sbb
jno
xor
das
push
mov
and
add
mov
test
sbb
xchg
fstl
or
aam
mov
dec
into
sbb
inc
xor
out
add
ret
mov
mov
or
push
mov
mov
shrb
cld
leave
daa
or
or
inc
das
lret
andb
mov
aaa
lea
rcrb
lret
or
pop
pop
cmp
xchg
clc
imul
jl
popa
je
mov
ret
test
fstps
shrb
in
loope
jnp
jns
mov
push
cmp
in
mov
add
sarb
icebp
lret
mov
popa
sbb
cmp
ja
mov
mov
mov
movl
mov
jl
or
mov
gs
pop
mov
test
cmp
add
push
stos
and
aam
pop
clc
adcb
and
rclb
mov
adc
call
adc
arpl
push
imul
insb
insb
add
jno
lock
clc
adc
mov
pop
enter
adc
mov
add
test
popa
cmc
mov
cmp
cmovbe
pop
inc
aaa
add
scas
mov
shrb
push
int3
shr
xor
pop
int
sub
jno
sbb
xor
mov
pop
mov
inc
pop
arpl
sub
and
movsl
jo
in
in
adc
pop
bound
movsl
movsb
pop
popa
add
add
rcll
inc
add
mov
mov
inc
aas
inc
popl
push
and
aam
jbe
aam
hlt
fsubrl
sub
insb
fldl
or
push
clc
sub
clc
jmp
jno
stc
sub
push
add
push
push
push
push
push
inc
jl
mov
xor
and
pop
popf
lds
sub
or
icebp
insb
jne
mov
call
sub
mov
inc
push
jne
dec
fmuls
adc
or
out
jns
adc
int3
lods
xchg
ror
push
pop
or
sbb
adc
xorl
pushw
push
adc
repnz
xchg
nop
imul
mov
mov
das
adc
xor
sub
adc
sbb
loopne
mov
add
add
sub
test
js
imul
pop
sti
xor
lahf
pushf
jmp
push
inc
cwtl
lcall
orl
hlt
adc
mov
adc
sti
push
pop
add
lret
pop
or
mov
orb
or
cmp
jmp
sti
or
cmp
js
add
xor
sbb
xchg
jbe
scas
or
inc
dec
popf
enter
adc
push
inc
lret
adc
add
add
cmp
add
ss
cmp
mov
mov
inc
sbb
jne
nop
push
and
subl
jno
movsb
nop
movb
sub
add
sbb
dec
sub
cmp
imul
adc
sub
nop
xor
outsl
cwtl
mov
mov
aad
mov
xchg
push
mov
jg
push
push
rcl
xchg
mov
adc
movsb
adc
jbe
pop
insw
xchg
addr16
jmp
mov
lock
inc
mull
jbe
cmp
push
cmp
or
jne
sbb
in
pop
int3
clc
jo
or
jnp
add
lret
adc
aam
cmp
nop
dec
jno
cmp
mov
sbb
jno
push
xor
enter
in
adc
enter
mov
lods
jne
mov
push
out
jg
outsl
adc
inc
cwtl
in
push
push
jo
xlat
mov
mov
loop
adc
jecxz
mov
mov
dec
test
mov
adc
add
and
sub
mov
xchg
mov
arpl
rorb
jp
inc
inc
mov
hlt
popa
jecxz
dec
in
mov
dec
in
ret
cmp
bound
inc
pop
por
and
dec
mov
fwait
push
je
jge
mov
lock
pop
add
xchg
cmp
cmpl
ss
mov
xchg
fdivrs
lret
pop
into
pop
dec
pop
rcl
adc
cmp
js
rolb
jmp
sbb
rcl
decb
pop
int3
je
ds
int3
pop
push
mov
xchg
les
andl
jmp
dec
in
push
fists
fs
xchg
mov
and
clc
mov
and
insb
divl
aad
mov
dec
mov
jle
insb
xor
pop
cmp
in
inc
dec
dec
jge
push
rorl
loope
fs
cwtl
mov
or
sbb
pop
add
and
adc
jge
push
test
daa
aas
fstpt
daa
pusha
in
mov
sbb
lret
test
mov
ja
xor
in
sbb
xlat
lcall
ret
jns
pop
fmuls
sbbl
push
mov
mov
shll
ss
mov
std
flds
cli
aas
push
lea
push
xor
or
scas
push
lock
loopne
int
dec
mov
xchg
sbb
pushl
push
pop
dec
fidivrl
mov
jns
movsb
fnstenv
sub
imul
cmp
inc
dec
mov
rcrb
adc
cmp
pop
nop
stc
jle
add
cmpw
sbb
cmpb
scas
or
push
cld
mov
pop
push
pop
mov
add
sar
sub
mov
push
repz
pop
mov
jns
les
pusha
adc
pop
jns
sbb
add
lock
add
xor
xorb
add
iret
inc
pop
lock
in
mov
dec
push
subb
sub
jl
sub
jmp
mov
pop
sti
lcall
dec
movzwl
cmpl
push
adc
and
or
test
sub
inc
ret
sbb
cs
add
cmp
add
mov
subb
ss
xor
adc
mov
jae
outsl
push
sbb
xor
addr16
inc
add
mov
push
fs
push
je
xchg
mov
insl
sysret
in
sub
xchg
pop
and
pop
and
push
adc
sbb
push
and
out
lcall
jb
fs
push
cmp
dec
and
add
and
pop
aas
pop
dec
pop
push
pop
push
dec
push
arpl
jb
jo
cmp
add
shl
and
test
pop
divps
adc
adc
mov
inc
fadds
push
and
roll
push
imul
icebp
and
cwtl
stos
out
inc
add
add
add
and
nop
pop
aaa
pop
mov
popa
sub
add
orb
scas
sub
adc
add
rolb
mov
pop
shlb
cmpsl
add
jp
inc
adc
call
and
aam
or
lock
call
mov
fwait
jle
adc
pop
adc
shr
push
mov
sbb
pop
fwait
int
mov
pop
dec
inc
iret
mov
cmp
sbb
and
fucomp
and
add
sub
push
or
mov
pop
adc
cmp
sub
js
mov
add
add
pop
adc
pop
jl
xor
push
shll
mov
dec
orl
test
test
inc
adc
orl
repnz
push
or
or
jne
pop
add
add
pop
lods
or
inc
push
pop
dec
daa
outsb
inc
jp
cmc
push
cmpl
pop
je
or
adc
adc
leave
or
mov
mov
faddl
in
and
sbb
arpl
jl
add
or
jne
or
test
hlt
ds
lea
mov
mov
sbbb
inc
mov
into
adc
inc
dec
pop
jne
imul
sub
inc
add
loope
push
and
xchg
les
aaa
scas
push
je
and
hlt
and
aas
or
xchg
push
out
mov
call
push
and
fldl
sbb
pop
sbb
iret
hlt
lcall
ja
out
fnsave
jno
sbb
rcrb
sbb
in
loopne
mov
xchg
inc
lods
sub
roll
mov
dec
fdiv
aas
sbb
mov
dec
push
mov
stc
stc
aad
and
mov
push
loop
sub
incl
fcom
mov
lahf
fimull
inc
and
addl
jge
mov
xchg
or
push
push
dec
jo
inc
mov
in
cmp
pusha
sub
mov
pmaddwd
gs
sbb
adc
xor
or
mov
mov
push
lahf
xchg
enter
xor
push
inc
aaa
pop
fs
push
mov
jmp
push
push
das
or
and
pop
loope
mov
jmp
adc
dec
lahf
adc
pop
pop
or
mov
adc
inc
sti
pop
inc
xchg
cmp
mov
add
rolb
mov
and
adc
mov
sub
mov
pusha
add
push
adc
xchg
xor
inc
add
mov
and
fists
cmp
mov
mov
mov
daa
add
or
mov
push
sbb
mov
xchg
lahf
stos
pop
aaa
adc
daa
dec
lods
inc
mov
push
bound
cmp
pop
xchg
lcall
sub
les
push
dec
push
std
lock
icebp
push
or
push
iret
xor
sbb
lcall
push
mov
dec
pop
sub
pop
repnz
mov
pusha
popa
dec
inc
test
jmp
cmp
jne
ss
out
repz
and
xlat
inc
inc
dec
xchg
xor
mov
push
test
test
mov
mov
loop
push
pop
fwait
in
test
sbb
pop
or
hlt
lea
fcoms
fdivrp
push
sbbb
xchg
pop
movsb
xor
adc
jae
mov
shrb
sub
push
jge
mov
aaa
add
test
push
xchg
into
or
dec
rol
jmp
aam
xor
or
or
enter
cmp
rcrl
dec
mov
mov
pop
imul
pop
pushl
cmpl
movsl
inc
outsb
or
mov
andl
jge
inc
xchg
inc
subl
mov
push
or
jp
add
dec
inc
es
dec
shr
inc
aam
sahf
data16
mov
fisubrs
sub
je
nop
inc
add
movb
jne
push
add
flds
inc
push
push
sub
enter
jne
fists
lret
push
lods
jnp
xor
movsb
pop
xchg
push
add
jle
lret
or
cld
jmp
add
xchg
mov
loop
pop
lea
dec
aaa
movsl
sub
js
pop
pop
and
mov
lea
push
push
je
nop
lock
cmp
das
jae
push
and
and
pop
fsubrl
fisttpll
clc
push
xor
pop
sahf
and
or
cmpsb
cmp
cmpsb
cld
hlt
xor
xor
sub
shlb
mov
loop
or
push
push
add
repz
insb
pop
and
stos
push
and
push
call
cmp
sub
push
jne
push
adc
and
xchg
push
adc
cmp
jmp
push
jg
mov
clc
repz
cmp
out
pop
es
and
je
imul
out
push
pop
sub
xchg
addl
sbb
enter
mov
sub
mov
ret
mov
test
bound
mov
sub
hlt
xchg
or
add
fmull
rol
add
adc
mov
mov
ja
adc
inc
or
pop
jns
adc
inc
sub
adc
mov
add
jmp
test
mov
inc
pop
js
mov
enter
dec
jmp
mov
test
or
daa
and
mov
enter
stos
test
test
or
sub
pop
iret
fldenv
loopne
lret
or
cmp
es
lods
ret
cmpsb
dec
mov
test
jno
xor
xchg
sar
fcoms
jo
mov
cmp
in
or
add
add
add
xor
test
or
pushf
inc
dec
inc
adc
lcall
in
lret
scas
sub
xchg
mov
mov
cmp
xchg
push
xchg
dec
jne
push
dec
add
icebp
lea
mov
inc
xchg
xchg
push
shr
cmpsb
push
loope
orb
cmp
sub
leave
xor
dec
ret
xor
or
test
mov
lock
sbb
add
imul
mov
mov
jbe
pop
aam
or
xor
or
or
xor
or
push
into
add
pop
mov
add
mov
fisubrl
add
jecxz
or
xchg
and
add
adc
sbb
cmp
push
push
jp
lock
add
loope
mov
mov
push
sbb
filds
lret
pop
add
push
pop
aaa
inc
mov
popa
cmc
or
mov
add
in
negb
sub
inc
dec
adc
dec
push
or
je
jg
xchg
loopne
cltd
arpl
addr16
mov
inc
imul
sbb
and
add
ret
mov
or
inc
mov
pop
pop
xchg
sub
push
sarl
in
mov
pop
sbbb
and
repnz
jne
inc
add
fwait
hlt
imul
sbb
and
xlat
inc
mov
push
hlt
imul
sub
stc
sub
jnp
clc
imull
mulb
cli
cmp
sbb
inc
popa
inc
aaa
mull
add
xor
xchg
cmc
push
and
loop
xchg
pop
lea
or
out
orl
sbb
xor
push
pushf
pop
sub
aas
int3
in
mov
push
lahf
cld
imul
push
shrb
sti
sub
icebp
in
lods
andl
sbb
mov
and
pusha
mov
push
fwait
mov
pop
clc
gs
mov
push
sub
pop
inc
and
or
movsb
jo
in
adc
rol
fisttpll
and
xor
jbe
adcb
jb
test
es
pusha
xor
inc
rcrb
sbb
ret
jp
movsl
out
sub
popf
cld
icebp
mov
push
jo
add
stos
in
sub
hlt
push
or
sub
cltd
sub
movsl
and
mov
insb
popf
scas
xchg
inc
mov
fnstsw
dec
loopne
in
sub
mov
test
sub
daa
aas
gs
shlb
sbb
roll
push
lea
insl
cmp
andl
adc
hlt
or
add
xchg
xor
sub
std
nop
xor
and
push
scas
rorl
xchg
nop
dec
lret
and
insl
pushf
xchg
pop
add
pop
xchg
ficoms
adc
push
cs
fs
lods
das
jb
pop
and
push
ret
push
mov
adc
add
mov
subb
pop
and
add
add
xor
rol
cmp
jmp
fwait
push
sbb
call
lcall
adc
leave
mov
lock
inc
insb
cwtl
rol
dec
jg
push
inc
jns
dec
test
pop
xor
bound
dec
mov
mov
fstl
cmp
jo
arpl
cmpsl
adc
xchg
jbe
mov
jnp
inc
adc
sbb
push
or
clc
sbb
jo
and
cli
repnz
aaa
aad
and
pop
push
and
add
push
add
dec
leave
in
xchg
dec
inc
inc
test
add
push
or
jnp
mov
cmp
push
sub
lea
inc
cmp
push
mov
push
and
push
push
dec
or
in
jmp
xor
lea
adc
mov
lcall
push
ja
mov
mov
vphsubbw
adc
shll
mov
add
xchg
andb
pop
imul
cmp
dec
in
pop
inc
sbb
leave
into
and
inc
or
shr
mov
shlb
mov
imulb
push
sub
daa
jne
lods
xorl
insb
push
jnp
or
jo
cltd
mov
push
out
mov
mov
xor
push
into
popl
out
dec
imul
adc
pushf
push
mov
jg
std
or
test
adc
sub
pusha
sub
xor
xor
stc
lock
or
dec
enter
push
add
xchg
adc
cmp
andl
pop
in
inc
fisubl
mov
cli
adc
in
mov
dec
jo
jo
into
lock
add
jno
dec
add
inc
icebp
sbb
clc
and
jmp
clc
jl
or
or
xchg
mov
adc
xchg
mov
add
push
sub
clc
push
jnp
outsl
cmp
mov
and
xchg
xor
pop
mov
adc
scas
xor
call
xchg
mov
jo
push
pushf
pop
add
mov
sub
sbb
xchg
popa
or
adc
cmp
pop
dec
ss
jge
mov
xor
xor
in
mov
jae
hlt
push
dec
push
cmpb
sbb
inc
lcall
out
add
in
pop
add
sbb
rcrb
push
add
and
adc
push
mov
cmp
add
popa
mov
adc
and
adc
loop
movsl
imul
jl
es
out
adc
xchg
or
xor
jb
scas
jns
das
icebp
push
xorb
mov
sbb
mov
shll
add
inc
fisubs
add
clc
sarb
xchg
xor
sbb
cmp
jno
popf
loop
mov
xor
jge
pop
arpl
adc
pop
and
xchg
add
insb
ja
push
mov
jns
xchg
add
cmp
aad
mov
lea
cmp
ret
sbb
jo
mov
jns
dec
inc
lock
scas
jge
mov
inc
adc
hlt
cmp
movsb
lods
or
dec
cmp
inc
push
mov
or
sbb
ret
roll
insl
xorl
and
push
nop
test
adc
adc
inc
cwtl
std
lcall
and
jecxz
inc
dec
adc
and
sbb
test
and
ja
repz
xchg
sbb
mov
cmp
lds
adc
push
or
test
shrb
stc
mov
push
lret
shrl
das
rcll
mov
and
movsb
or
or
adc
push
mov
mov
fistpll
xor
insl
fisttps
and
ja
lds
insl
in
out
insl
mov
pop
sbb
sbb
add
shrb
add
or
jp
sub
inc
push
arpl
jns
and
stos
fiaddl
add
inc
sahf
fistl
xorb
add
cmp
das
and
insl
xor
push
insb
push
leave
test
or
add
ret
xchg
add
les
movl
cltd
ljmp
test
cmp
xchg
shlb
add
adc
adcb
push
ja
sbb
add
cwtl
rcll
push
pop
pop
sbb
je
gs
dec
cmp
inc
pop
or
hlt
pop
cltd
punpcklwd
mov
mov
imulb
outsb
cld
mov
dec
jecxz
pop
in
adc
je
inc
ret
sbb
adc
add
jbe
mov
push
bound
mov
aam
or
js
add
mov
lods
pusha
add
xor
xor
push
int3
or
mov
aaa
mov
leave
sub
sbb
loope
movsb
movsl
pusha
sbb
add
outsl
jno
add
inc
sti
pop
rcll
or
fimuls
arpl
sarb
rorb
rcl
cmp
fisttpl
push
fisttpll
jno
fstps
pop
mov
mov
mov
xchg
mov
mov
nop
jge
mull
daa
mov
mov
xor
dec
fistl
pop
add
popa
inc
sub
scas
push
mov
lock
lds
jmp
jp
adc
xchg
cs
dec
loop
mov
scas
sub
into
push
mov
xchg
xor
popa
sub
jbe
rol
xchg
jl
ret
jle
pop
sub
adcl
nop
xor
decl
testl
inc
push
jle
loop
add
jne
das
fdivrs
lahf
push
adc
mov
add
jg
push
insb
mov
cmp
js
fcomps
ret
pop
cs
xchg
lock
add
push
ror
scas
cmpsb
in
fcmove
stos
add
push
rolb
push
orb
je
inc
loope
and
jle
add
in
inc
movsl
bound
mov
push
daa
add
mov
insb
popf
adc
jnp
nop
or
add
inc
lea
sub
test
je
xchg
or
out
orl
jle
lock
push
pop
push
push
outsl
pusha
sub
scas
sub
fs
sub
xorb
inc
push
fldenv
cmp
fiaddl
pop
xor
sub
jne
aad
stos
in
sub
dec
ret
or
pop
lret
mov
nop
shl
push
sahf
add
inc
jl
xchg
push
je
push
and
addr16
outsb
inc
xor
inc
and
or
jmp
cld
cwtl
and
adc
push
xchg
or
les
add
jno
in
mov
clc
and
clc
sarb
xchg
pop
loop
xor
sbb
or
outsb
adcb
add
jne
add
push
sub
push
pop
xor
loopne
jb
iret
push
sub
lea
push
mov
mov
xor
lods
inc
sbb
pop
lds
fwait
sbb
cs
hlt
dec
ret
mov
xchg
mov
pop
lcall
jl
adc
addps
test
sub
roll
mov
shl
cltd
ss
aam
pusha
pushf
push
lea
pop
js
and
outsl
mov
dec
lcall
lret
fimuls
dec
mov
dec
mov
ljmp
xor
pop
call
adc
pop
fstpl
or
std
aam
add
push
imul
push
test
outsb
sbb
push
xor
sbb
jle
mov
ret
nop
dec
mov
inc
mov
mov
push
sbb
loopne
arpl
mov
popf
in
add
out
out
icebp
hlt
shr
sub
call
das
add
js
push
sahf
pop
in
adc
push
lea
repnz
adc
inc
mov
insl
or
dec
gs
imul
repz
push
pop
inc
sti
cmp
add
fwait
xor
mov
jp
mov
das
mov
inc
push
adc
shll
test
jg
movl
imul
adc
fldz
and
add
testb
and
cmp
and
sub
jnp
push
mov
push
cmp
insb
and
pop
imul
xor
mov
dec
adc
push
loopne
xor
cmp
test
add
in
mov
mov
pop
pop
mov
shlb
mov
test
mov
pusha
rorb
fisttpll
mov
xchg
xor
dec
or
jne
loopne
mov
add
lea
fsubs
call
inc
sbb
add
call
pop
call
stc
mov
inc
mov
scas
sbb
lahf
test
add
xor
mov
or
push
scas
xorl
jmp
call
xor
sbb
adc
cmp
push
cmp
jle
stc
pop
jle
cmp
jp
push
cmp
cmp
inc
pop
add
jge
mov
mov
push
add
inc
jmp
or
mov
lret
clc
movw
lret
mov
cmc
add
bnd
mov
push
mov
cmpsb
cs
icebp
cltd
pop
idiv
lock
xchg
cld
adc
scas
imul
fcoms
mov
add
mov
cmp
and
test
adcb
call
fnstcw
push
popa
or
outsb
jbe
push
dec
or
hlt
cmpsl
xorl
mov
data16
pop
and
xor
pop
mov
dec
js
add
and
movsl
or
adc
and
adc
or
cmp
and
jecxz
int
mov
sbb
sub
xor
cmp
mov
adc
add
nop
dec
push
fdivrs
xchg
dec
scas
pop
insl
iret
jo
cmp
or
repnz
nop
xchg
dec
outsb
pop
or
adc
pop
sbb
enter
les
nop
and
test
sarb
or
and
add
loopne
cmp
lret
jg
push
push
rolb
mov
dec
insl
add
mov
fidivl
jl
outsl
pop
sub
or
into
cmp
add
adc
add
push
inc
fimull
dec
push
sub
or
leave
push
nop
sub
or
add
push
repnz
mov
and
jns
xor
sbb
dec
orb
and
bound
push
dec
leave
jmp
xor
popa
push
jo
cli
ret
adcb
std
inc
rcl
adc
aam
loope
subb
cmp
sbb
xchg
inc
push
cmpsb
aaa
sbb
mov
sbb
popa
mov
loop
push
jo
cmpsb
add
mov
sub
in
mov
inc
fwait
jl
sbb
fidivl
and
add
mov
add
or
outsb
adc
and
and
jnp
cs
leave
sub
fstl
add
push
jmp
lods
shlb
mov
adc
es
popa
adc
sbb
outsl
sbb
push
mov
cmpsl
std
cmp
stos
aad
pop
lods
test
stos
in
mov
ret
int3
andb
add
add
sbb
and
popf
adc
shlb
sbb
xor
sbb
leave
nop
pop
dec
es
adc
add
rcll
aas
add
add
jne
xor
add
add
or
and
push
xchg
and
inc
loopne
in
add
push
and
sar
les
mov
mov
or
adc
sbb
stos
loope
or
fwait
loope
hlt
jb
and
mov
out
rol
push
sbb
sbb
mov
push
mov
cli
sbbb
test
xorb
dec
push
int3
push
icebp
or
and
ret
add
add
mov
adc
jne
lea
add
add
push
popf
xor
push
bnd
push
mov
test
xchg
enter
push
les
add
add
enter
inc
outsl
add
orl
aad
jb
or
add
rolb
dec
aaa
lock
fwait
adc
fstpt
sbb
pop
scas
nop
xchg
sub
or
dec
xchg
cmp
in
je
push
repnz
jne
rol
cmp
outsb
adc
pop
rcrb
es
in
pop
outsl
popa
rolb
add
sub
push
adc
cli
push
addr16
rcrb
ret
and
sbb
int3
inc
cld
xor
and
add
test
inc
sar
pushf
jbe
sbbb
xorl
negb
aam
dec
jae
outsb
push
ja
lock
call
pop
adc
pop
or
xor
sbb
fildl
in
test
pop
stos
cmp
jne
mov
lcall
ret
popa
xchg
mov
sbb
into
add
push
add
xlat
sub
pop
or
pop
fildl
jb
cmp
dec
mov
notb
add
decb
testb
in
insb
cmp
add
jl
fs
mov
cmpsb
add
or
imul
in
shrl
pop
adc
sub
je
lods
mov
add
pusha
addl
and
es
adc
xchg
pop
and
dec
add
std
mov
xor
shlb
mov
es
dec
insb
push
and
rol
addr16
iret
inc
xor
jle
sbb
shl
add
fildl
adc
adc
xor
mov
cmp
test
jle
add
pop
sbb
xchg
adc
inc
push
pop
push
mov
mov
xor
fcmovbe
aaa
je
mov
out
call
and
popf
adcl
sub
cmp
fisubrl
or
sbb
insb
call
inc
dec
jmp
dec
fldl
xchg
inc
je
sbb
add
push
xchg
es
cmp
sti
inc
lcall
dec
ja
jle
test
and
dec
out
ucomiss
push
lods
mov
push
xchg
jge
lods
mov
jo
jnp
xchg
add
pop
fsub
pop
fsubrp
push
add
pop
push
rorb
cmovne
dec
dec
out
lds
int3
icebp
in
push
mov
in
ret
dec
sub
or
js
loopne
cmp
mov
inc
int
loope
cmpsl
dec
pop
int3
in
divb
inc
negb
mov
inc
cmpsl
inc
insl
adc
xor
gs
sub
mov
sub
and
add
bound
sub
shll
or
in
outsl
stos
dec
arpl
mov
jge
dec
insl
arpl
aam
pop
jo
jae
je
into
dec
dec
mov
movsl
pop
xor
push
daa
push
add
cmp
sbb
lods
jbe
fdiv
push
or
iret
das
add
jnp
xchg
pop
in
ret
ja
xor
mov
aaa
adc
push
and
xor
push
in
or
andl
in
gs
daa
xor
out
lock
cmp
jnp
fmull
mov
call
xor
push
clc
mov
add
cmp
jb
sbb
leave
shld
add
rclb
xchg
ja
jb
xchg
mov
push
ss
push
inc
add
push
add
push
je
pusha
or
ret
sub
add
push
leave
adc
push
push
mov
push
xor
or
add
or
mov
lret
push
sbb
push
lods
add
pop
pop
test
leave
pop
or
in
dec
mov
nop
test
shll
xor
dec
push
mov
mov
ja
or
mov
cmp
test
and
push
sti
cmpl
je
sahf
mov
push
sbb
jle
out
inc
jle
push
cmpw
jne
add
and
jge
pop
outsl
cmp
dec
push
push
push
xchg
cmpsl
jl
mov
test
jo
decl
jg
stc
std
mov
or
frstor
sbb
out
lretw
jl
jle
push
push
push
push
xchg
dec
pusha
inc
push
add
test
cmp
mov
aas
push
jle
dec
or
add
push
push
icebp
add
pop
mov
adc
les
sbb
out
adc
mov
imul
jle
add
popa
es
xlat
arpl
ret
cmp
jnp
push
rcrb
sar
je
mov
dec
pop
sbb
pop
jle,pt
movsl
lods
test
add
inc
imul
or
aam
call
jle
mov
xchg
push
mov
push
popf
push
xchg
xor
test
shrb
pop
dec
sbb
pop
pushf
sarb
jae
movsb
std
and
subl
test
xchg
lock
movsb
inc
and
inc
lret
or
add
sub
sahf
int
adc
xchg
movsl
jl
add
lods
adc
push
ss
imul
addr16
mov
lds
mov
mov
sahf
pop
pop
xlat
add
and
and
lods
push
xor
lods
mov
cwtl
push
insl
nop
or
xchg
imul
push
sub
xor
stc
and
enter
ret
pop
add
sbbl
or
cmp
dec
outsl
call
ficoml
sbb
imull
nop
or
or
sbb
aaa
fwait
dec
cwtl
jmp
les
sub
movsl
in
rol
inc
xor
jno
dec
invd
add
add
jb
scas
les
add
push
adc
dec
cmp
add
jp
mov
outsb
pop
cmpsl
bnd
add
cmp
repnz
jb
add
add
cmpsb
add
jns
fxch
shr
dec
popf
jno
or
out
loopne
rep
inc
push
xchg
add
xchg
jg
cmpl
dec
xchg
push
and
sbbl
push
sub
loopne
jno
inc
and
mov
ret
push
movsb
xchg
test
rcl
inc
and
pop
sti
rcrb
ret
pop
popa
adc
faddl
sub
fadds
je
mov
leave
bound
mov
jno
sbb
in
jge
ljmp
icebp
and
xor
add
lret
mov
add
insl
adc
sub
dec
je
add
cld
push
icebp
dec
sbb
dec
jne
xchg
sub
bound
push
insb
adc
jno
pushf
adc
or
test
sbb
jg
sbb
in
push
sarl
pop
lods
jns
push
pop
mov
cmp
ja
scas
scas
push
mov
lea
es
cs
dec
jnp
cmp
test
inc
mov
hlt
push
imul
fs
jp
inc
pusha
mov
in
inc
lods
int3
lock
arpl
sbb
adc
cmp
mov
movsl
and
adc
pop
push
pop
arpl
sahf
and
addr16
pop
adc
cmp
nop
test
enter
sub
jb
and
and
jle
inc
push
sbb
insb
inc
push
cmp
mov
nop
fdiv
sub
sbb
enter
mov
push
push
pop
movsl
mov
fs
sahf
cmpsl
stc
mov
adc
jns
cmp
pop
out
sahf
out
insl
xchg
mov
sahf
mov
leave
rcr
out
int
jns
sti
add
cmp
repz
repz
push
pop
imul
cmp
fwait
scas
movsl
les
aaa
mov
mov
push
pop
pop
ret
std
fucom
jae
outsb
add
ret
pop
mov
mov
mov
cld
adc
ss
nop
sti
das
je
fs
iret
adc
cmpb
sub
fmulp
and
jno
add
les
movsb
xchg
subb
xchg
adc
test
pusha
lods
into
xor
shrl
lock
mov
inc
mov
or
push
push
add
out
fcompl
pusha
aaa
cmp
movsb
adc
mov
xchg
test
mov
add
mov
faddl
adc
sbb
cmp
cmp
mov
insb
and
lret
out
push
dec
test
lods
adc
bound
cld
add
push
sbb
aas
repz
les
inc
ja
rorb
adc
loope
cmp
jge
out
mov
cmp
push
cld
lock
movsl
out
add
jp
scas
cmpsb
push
cmc
popf
add
pop
stc
ficoms
test
ja
imul
rol
or
mov
roll
into
push
ret
gs
push
sbb
das
push
mov
adc
lock
or
xor
filds
or
enter
or
mov
adc
xchg
js
mov
and
decl
sub
pop
fdivs
mov
and
stos
and
or
cmp
outsb
faddl
pop
fcomip
push
mov
mov
xor
je
inc
push
or
or
fs
insb
movb
push
aad
xchg
and
inc
leave
adc
pop
sbb
les
repz
pop
lea
jo
add
sbb
push
add
mov
cmp
pop
xchg
test
shlb
adcb
xchg
mov
mov
cmpb
jecxz
cmc
jb
mov
int3
fiadds
sub
push
xchg
xchg
sarb
dec
div
push
add
mov
mov
xor
or
lods
and
sub
cmp
mov
fwait
pop
cmp
push
sub
jo
test
rsqrtps
mov
or
bnd
test
adc
or
mov
xor
sub
push
mov
xor
jle
icebp
scas
jecxz
mov
xor
sbb
enter
dec
xor
das
insb
lcall
jl
dec
lcall
dec
lcall
add
in
jae
add
mov
mov
sbb
mov
cltd
mov
hlt
push
int3
jl
mov
test
add
cmp
orl
lret
cmp
jns
xlat
movsb
inc
xor
add
in
cmp
mov
pusha
mov
mov
sub
or
pushf
js
stos
push
nop
and
in
jbe
test
sbb
ljmp
shlb
sbb
sbb
sbb
nop
stos
shlb
sbb
push
cltd
fs
sbb
in
mov
push
into
push
rorb
adc
sub
or
sbb
sbb
pop
aam
movsb
sub
sub
sbbl
mov
pop
inc
and
jmp
pop
mov
shl
xchg
inc
adcl
pop
gs
pusha
int
mov
mov
xor
cmp
pop
push
ficomps
push
lret
mov
into
pushf
xchg
xchg
loop
push
jle
mov
mov
mov
jb
sbb
aaa
rcrl
jp
xchg
imul
dec
movsl
mov
mov
int3
cmp
sub
sub
jmp
stc
cmp
movsb
aas
push
cmc
mov
movsb
push
inc
cmpsl
mov
mov
mov
cmp
ds
nop
aaa
and
and
mov
daa
dec
pusha
loopne
cmp
in
js
mov
push
inc
push
sbb
adc
sub
push
pusha
pusha
or
cmp
subl
lea
jo
clc
test
popa
inc
xchg
mov
adc
imul
inc
inc
add
jge
dec
pop
xor
inc
mov
cmpb
je
adc
lcall
jmp
push
outsl
inc
sbb
sub
pusha
aaa
je
pop
adc
stos
mov
sbb
ret
and
inc
mov
imul
dec
dec
add
out
adc
push
test
xchg
in
cmp
aas
pop
push
pop
je
or
mov
pop
push
mov
adc
adc
ds
lret
rolb
jecxz
out
add
mov
lcall
jne
or
add
push
daa
sarb
push
imul
jne
add
pop
sbb
lods
sbb
mov
imul
lods
mov
repz
ficompl
jo
mov
push
inc
lret
sbb
and
add
fwait
cmp
push
xchg
push
movsl
enter
mov
sbb
dec
loope
aaa
stos
xchg
mov
in
adc
sbb
rorb
pop
ficoml
and
mov
cmp
inc
push
outsb
shlb
pop
cmp
mov
je
repnz
jl
cmp
imul
loopne
jbe
add
test
or
sbb
mov
nop
push
call
pop
setl
adc
pop
repnz
movsb
adc
adc
scas
adc
leave
and
dec
adc
push
add
push
xchg
fwait
out
push
es
push
mov
int3
push
and
inc
push
aam
rcrb
push
mov
insl
push
sbb
test
cwtl
push
in
jecxz
int
negl
pop
int
fsubrl
nop
push
test
mov
sbb
push
mov
sub
cwtl
nop
mov
sub
mov
mov
and
mov
add
and
shrb
mov
mov
and
inc
sub
sub
cmpb
dec
jae
test
push
push
inc
sbb
adc
sarb
cwtl
push
pop
pop
push
mov
shrb
mov
sbbl
and
aad
and
sub
adc
push
movsb
pushf
xchg
shll
inc
mov
test
and
xor
je
dec
dec
xor
insb
or
xor
pop
pop
xor
fsubr
pop
add
ret
arpl
test
mov
mov
cmp
inc
ds
mov
mov
xor
orb
inc
call
insb
pusha
aad
xor
xor
popf
in
orl
mov
push
loope
cltd
sbb
int3
or
into
pop
pop
adc
out
inc
jecxz
jbe
in
dec
or
inc
pop
in
roll
sub
inc
call
or
xor
add
lods
lahf
jb
and
movb
leave
xor
sub
or
jne
mov
scas
add
jbe
add
aad
out
jge
add
adc
imul
lods
cmpsl
sbb
adc
cs
or
xchg
or
imul
and
inc
mov
test
sti
js
or
icebp
push
mov
xor
jnp
cmp
fbld
adc
mulb
adc
xor
add
adc
adc
out
ret
sbb
mov
mov
mov
les
cmpb
mov
mov
jo
adc
mov
movsl
imul
shrl
mov
pop
sub
adcb
inc
jmp
mov
aam
cmp
push
sbb
jmp
and
mov
pusha
sbb
pushl
or
add
push
sbb
mov
xchg
lcall
xor
mov
add
dec
enter
pop
and
fwait
and
mov
and
and
adc
roll
and
pop
push
imul
add
stos
sub
push
fcmovu
jecxz
pop
es
pop
test
fs
dec
jnp
sub
mov
subb
es
pusha
push
sub
imul
insb
or
enter
mov
sub
movsl
pop
cs
daa
ss
mov
cmpsb
fmuls
sahf
pop
sub
dec
jmp
inc
test
mov
adc
dec
fildl
dec
rcr
ret
jbe
clc
pop
inc
inc
add
popa
xor
mov
sub
das
not
insl
inc
lcall
and
xor
sub
sub
lods
dec
xor
int
push
sub
fs
and
test
dec
dec
jl
pop
and
int
xor
and
and
xor
push
nop
sbb
and
addb
mov
inc
js
and
les
aam
or
pop
rclb
sbb
add
sahf
adc
push
mov
mov
es
ret
mov
add
orl
add
les
in
cmpsb
arpl
jmp
xchg
cmp
sub
test
rcrb
dec
clc
test
jnp
push
test
loope
lds
push
and
loopne
pop
cmp
je
repz
lcall
popf
mov
pop
jecxz
add
pop
sub
push
scas
aam
pop
adcl
inc
mov
sbb
inc
sbb
rclb
pop
jge
cmp
pop
adc
movsb
or
mov
test
data16
push
add
sbb
enter
lods
inc
cmpsb
and
xor
sub
mov
fldcw
clc
pop
inc
andl
call
stc
and
dec
loop
leave
inc
cmp
inc
or
cmp
push
xor
push
rclb
cmp
lock
clc
cmp
fs
xchg
icebp
stos
cmc
js
ss
adc
push
cmp
and
push
mov
sbb
push
test
cmp
mov
andb
popf
ljmp
xor
sbb
loop
or
jbe
dec
cmp
cmc
dec
lods
imul
popf
pop
cmp
sarb
cmp
cmp
jbe
dec
pop
cld
movsl
mov
mov
nop
movsl
aam
popa
jmp
jmp
mov
add
push
lret
aad
push
push
pop
fwait
and
mov
mov
mov
mov
scas
mov
inc
inc
inc
xor
jge
fdiv
add
adcb
cmp
sbb
or
cmp
lods
or
push
movsb
cmp
and
pusha
ljmp
clc
loope
mov
and
push
jbe
or
jb,pt
mov
and
adc
imul
lret
adc
push
sub
test
fs
hlt
pop
inc
add
repnz
cmpsl
xchg
ret
mov
popa
mov
adc
push
sbb
xlat
jbe
mov
sti
pusha
add
xchg
cmp
jne
inc
in
jb
lret
cmpb
les
addb
hlt
subl
push
test
push
or
iret
jne
mov
inc
push
repz
jae
inc
adc
cmp
xor
bound
je
mov
dec
roll
add
jmp
out
mov
or
xchg
rorb
jp
test
movsl
push
in
mov
adc
lods
add
sbb
pop
cwtl
xchg
adcb
xor
test
lret
pop
xchg
mov
fcmovu
jne
lods
xlat
test
adc
aad
dec
or
cmp
jne
leave
imul
mov
sub
in
fcmovnbe
mov
push
andb
in
add
add
push
add
leave
popa
subl
or
sbb
sbb
add
pushl
inc
jbe
clc
and
xchg
pop
push
sbb
sbb
loope
cmpsb
sbb
jno
lock
mov
jmp
xchg
push
into
add
lahf
stos
adc
jmp
xor
rclb
add
cmp
jl
or
lcall
or
je
mov
inc
jmp
movzbl
movb
movsbl
rcr
cmp
xchg
pop
mov
and
mov
or
inc
mov
leave
jne
pop
sub
scas
bound
rclb
adc
jge
sbb
push
push
add
pop
and
pop
push
mov
mov
push
add
cmp
ja
push
loopne
and
push
inc
inc
dec
arpl
rcll
lock
daa
addl
or
mov
insl
xor
add
xor
inc
mov
sbb
mov
mov
mov
enter
movsb
popa
sti
aas
bound
je
dec
and
add
enter
in
push
rcll
pop
insb
jnp
jge
loopne
push
jmp
aaa
xchg
je
cmp
ljmp
decl
jge
adc
pop
push
push
or
insl
pusha
push
adc
push
shll
ds
sub
inc
jl
out
pusha
mov
pop
add
add
and
adc
lret
mov
or
ljmp
jg
xchg
dec
sbb
ficomps
testb
mov
xchg
sub
mov
or
pushf
xchg
adc
ret
cltd
stos
clc
dec
testl
nop
add
test
add
xchg
mov
mov
nop
sbb
inc
or
out
xchg
and
xchg
jl
mov
enter
jb
push
das
mov
stos
out
mov
cmp
lcall
xor
sub
pop
insb
mov
xor
in
mov
jmp
pop
lock
jmp
lret
sub
and
and
or
jg
outsl
int3
repnz
inc
dec
in
mov
jle
xchg
idivl
adc
enter
nop
xor
and
jmp
cmp
and
inc
cmp
xor
inc
or
mov
sub
mov
aam
clc
js
mov
subb
cmp
jb
sbb
mov
inc
repnz
push
lea
cmp
mov
push
xor
jb
adc
jno
and
pop
adc
pop
addr16
mov
jae
imul
add
push
push
xor
sub
cmp
xorb
dec
pusha
inc
ljmp
push
inc
dec
jns
andl
rclb
mov
daa
dec
mov
mov
add
scas
bndldx
or
in
fwait
push
mov
add
jns
fadds
adc
adc
mov
cmpsl
adc
rcrb
les
clc
adc
js
add
addb
int
cwtl
xor
icebp
jbe
subl
mov
bound
mov
push
xor
xor
xchg
pop
into
jge
pusha
fsts
add
test
or
adc
xor
pop
daa
sarb
insb
out
add
add
cmp
push
sbb
rcrl
enter
push
push
push
xchg
icebp
shrd
pop
xor
or
fwait
roll
or
pop
cltd
mov
jecxz
xor
sub
fs
iret
dec
ss
mov
mov
xchg
or
mov
add
loop
mov
sbb
mov
jb
cmc
adc
sbb
xchg
sub
js
repz
adc
add
add
or
add
addb
jmp
mov
repnz
push
or
shll
xchg
test
pop
cs
fmuls
std
mov
hlt
push
xchg
rorl
loopne
add
or
idiv
movsl
jnp
xchg
mov
imul
xchg
add
xbegin
lods
aam
lea
mov
ret
sbb
and
pop
xchg
add
and
subb
sbb
add
and
sub
dec
mov
cwtl
test
adc
jnp
add
cmp
or
sbb
cmp
ret
or
imul
or
add
jmp
loop
push
adc
add
test
adc
mov
pop
stos
xchg
xor
mov
pop
div
mov
push
dec
pop
cmp
sub
mov
test
push
sub
cltd
xor
stos
push
arpl
cmp
je
loopne
sbb
push
les
cmp
pop
aam
les
sub
cmpsb
js
sub
shl
or
fs
les
pop
das
inc
hlt
in
or
push
add
clc
test
imul
shr
inc
push
jo
jecxz
xchg
sbb
add
ret
pop
subl
cwtl
or
sbb
pushf
xchg
arpl
cli
in
subl
dec
push
xor
mov
call
cmp
jl
scas
lea
jb
sarb
inc
test
hlt
add
sub
inc
fcmovb
pop
adc
insl
sbb
cmpsb
fcoms
mov
mov
dec
xchg
cmp
mov
xor
insb
adcl
pop
enter
rolb
jb
push
enter
outsl
inc
mov
xor
xor
addb
cmp
dec
sbb
push
lea
cmp
mov
adc
in
in
pop
ja
jnp
add
xchg
add
cmp
daa
sub
aam
jmp
xor
scas
push
rol
or
dec
xchg
call
daa
push
mov
adc
addl
sahf
xchg
mov
xor
pusha
xor
lods
nop
xchg
or
push
dec
nop
clc
inc
das
je
jge
out
mov
mov
xor
imul
xchg
or
jbe
das
mov
push
sahf
sub
and
adc
dec
in
imul
es
fdivl
xchg
inc
movsl
jno
pop
mulb
and
sbb
mov
push
or
mov
dec
and
mov
fs
mov
or
cmp
push
lea
sbbb
push
add
cmp
pusha
addr16
movsl
push
loopne
mov
fmuls
out
xchg
xchg
pop
clc
push
sbbl
mov
imul
add
das
in
cmp
push
subl
add
ja
mov
dec
ljmp
ds
in
adc
cld
xlat
or
dec
inc
add
inc
or
inc
aaa
inc
das
test
push
popa
sub
cli
add
pop
add
fiaddl
stos
icebp
push
outsl
inc
add
add
jmp
fiaddl
mov
xchg
repz
pusha
push
push
push
cmp
aaa
xor
add
mov
and
jne
fldl
push
test
notb
data16
cmp
insl
adc
adc
jne
daa
bnd
adc
out
jns
hlt
jne
or
jne
or
adc
xchg
push
mov
nop
push
xor
std
dec
jb
pusha
js
pop
mov
and
aad
pop
or
push
fists
inc
sbb
add
aas
pop
sbb
mov
dec
gs
addb
xchg
aad
jle
push
jl
mov
cli
pop
push
pop
je
pop
hlt
lea
sbb
lea
pusha
mov
inc
imul
nop
xchg
data16
movsb
xchg
cs
ret
and
xor
sub
sub
push
fsubrl
xchg
iret
dec
into
or
stc
int3
rcll
push
loope
push
std
jae
fstl
orb
cmp
fdivrl
adc
call
push
int
shrb
fstl
mov
loopne
fcomp
loopne
rclb
popa
adc
adc
mov
add
pop
pop
push
mov
jl
cmp
enter
mov
mov
push
ss
jl
int3
insb
cmp
aas
pusha
pop
inc
loopne
or
and
and
jecxz
loopne
push
xchg
insl
mov
imul
imul
orl
pop
dec
lcall
int
xchg
test
cmp
mov
fs
jne
mov
mov
lods
and
fistpll
fmul
fs
sbb
ficoml
mov
je
push
pop
add
pusha
jmp
mov
push
fs
pop
bound
adc
jg
pushw
push
shlb
add
add
fisubrs
jbe
call
or
aam
push
jmp
ror
inc
adcl
js
jns
sub
js
test
mov
inc
jb
add
flds
stos
dec
pop
inc
int3
add
adc
gs
push
repnz
and
mov
xchg
inc
xlat
aaa
push
mull
pop
push
or
shrb
sub
xchg
adc
fucomp
das
rol
xchg
xor
insb
inc
popa
cltd
pushl
push
and
xchg
sbb
sbb
call
or
das
cmp
sbb
dec
mov
or
sarb
mov
or
sti
jnp
sub
dec
fisubrl
hlt
imul
idivl
inc
sub
clc
add
xchg
mov
dec
lods
add
push
cmp
cmp
in
and
jmp
sbb
dec
shlb
jle
pop
push
xor
xorl
jmp
and
xor
fisttpl
das
pop
cmp
sbb
xchg
push
cmp
add
push
dec
and
repz
cmc
xor
in
sbb
cmp
and
sbb
and
and
pop
inc
adc
push
arpl
or
fs
adc
push
cltd
xlat
leave
mov
pop
pop
xor
push
dec
push
cltd
nop
sbb
xchg
or
push
adc
mov
sbb
push
mov
or
test
jno
test
pusha
sahf
mov
bound
inc
or
adc
xor
and
outsl
add
in
sub
out
mov
cmp
sbbb
popa
xor
jae
cmpsb
mov
jae
das
sti
and
cmp
mov
cmovbe
push
enter
pop
int
mov
add
mov
icebp
sbb
xor
dec
push
push
lock
jmp
xchg
jecxz
inc
xchg
imul
andb
mov
jo
jo
push
adc
or
pop
adc
cmp
scas
movsb
fbstp
and
js
jg
dec
das
jae
je
push
mov
pop
lea
ficoms
jnp
aam
inc
sbb
fsubrl
sbb
mov
pop
insl
mov
adc
stos
lock
and
adc
adc
lods
test
or
add
mov
aas
dec
rorb
or
pop
pop
push
cmpsb
out
or
loopne
or
adc
add
jmp
push
hlt
xor
jnp
push
les
dec
push
pushf
add
imul
pop
ret
xchg
scas
mov
add
jne
jne
in
inc
dec
sub
add
xchg
sub
daa
stc
out
js
loopne
mov
mov
xor
aam
jne
sbb
adc
lea
jge
jecxz
sbbl
mov
popa
push
xchg
mov
paddusb
inc
mov
pop
inc
std
xor
push
shrl
and
es
scas
mov
mov
loopne
cmpl
mov
ret
mov
ficoml
adc
and
pop
and
jmp
pop
pcmpeqd
test
imul
cmpb
jno
jno
js
in
leave
fsubl
sbb
aaa
into
mov
xchg
test
push
inc
add
movsl
add
aaa
adc
add
adc
pop
and
sbb
cmp
add
push
jne
pop
jecxz
mov
inc
cwtl
pop
sti
ja
mov
and
jne
mov
rorb
ljmp
xor
or
mov
xchg
adc
inc
add
push
xor
bound
xor
xor
or
into
in
adc
loopne
dec
ret
daa
add
add
fdiv
push
mov
movsb
shll
fisttpl
es
popa
filds
dec
xchg
mov
rolb
add
xchg
add
js
cld
cmp
pop
push
jmp
push
pop
in
and
addb
ret
mov
in
les
mov
dec
pop
sbb
lods
and
sub
pop
push
add
orb
inc
jecxz
inc
or
mov
arpl
add
sbb
push
sub
stos
loopne
cmp
dec
bndstx
mov
inc
mov
jmp
out
add
xor
sub
adc
fimull
push
mov
inc
cmp
dec
cmpb
fdivrl
mov
lcall
inc
bound
or
and
divl
or
push
fildll
ficompl
test
aas
sub
leave
cmp
ljmp
jge
adc
add
movsb
incb
push
mov
push
lds
xor
add
or
sbb
addr16
or
push
movsl
or
jecxz
push
dec
xor
das
test
in
add
mov
dec
add
xor
notl
aad
pop
add
loopne
add
sub
hlt
test
shll
or
or
in
or
aas
mul
pop
add
push
add
lods
lea
out
mov
inc
jo
mov
push
lret
addr16
sub
and
mov
xor
push
je
movsl
ja
or
xchg
and
or
mov
xor
cmp
je
or
jbe
ret
in
rolb
sbb
and
clc
sub
lods
pop
sub
cmpb
ret
lock
jae
movsbl
outsb
clc
cmp
ja
inc
mov
mov
dec
rcl
or
sbb
bswap
push
das
add
lea
and
jmp
call
add
or
jecxz
or
add
inc
sbb
pop
incl
cmpl
xor
pop
test
cltd
and
add
sar
add
dec
test
clc
xor
mov
pop
ss
cmp
jecxz
or
inc
jne
enter
adc
mov
mov
dec
jne
mov
ss
xor
lret
test
pop
scas
and
push
dec
icebp
insl
add
cmpsl
shrb
sar
jp,pn
jge
push
shlb
ret
or
inc
bound
inc
adc
sbbl
adcb
jl
movsl
add
jmp
scas
mov
or
cmp
pop
add
add
push
rorl
mov
js
in
jmp
out
add
fucomi
or
arpl
rolb
shl
dec
sahf
xchg
out
mov
cld
xor
push
ret
or
jecxz
adc
pop
scas
and
cltd
add
dec
xchg
mov
cs
dec
pop
xchg
cmp
xor
adc
mov
fisubrl
or
insl
fcomps
movsb
sbb
cld
cmc
pop
in
push
xor
push
jnp
lods
mov
or
pop
sbb
fwait
xchg
mov
xchg
jnp
xchg
or
or
inc
xchg
and
fisttpl
hlt
add
nop
je
add
shrl
mov
mov
push
clc
inc
sub
lahf
xor
add
cmp
or
xor
ds
lahf
cmc
out
fcomps
pop
test
xchg
mov
mov
add
xchg
inc
mov
lock
add
push
push
jge
es
add
push
and
test
pusha
and
push
stos
xor
imul
call
sbb
cmp
cmpl
shlb
int3
pop
ss
jns
cmp
sub
test
int3
inc
inc
stos
shll
lods
adc
int3
xchg
pop
aaa
lea
dec
and
inc
jle
int
bound
cmp
lea
loope
xchg
and
push
and
out
sbb
movsb
je
push
pushl
or
mov
dec
aaa
test
pop
cmp
add
add
fbstp
movsb
mov
in
or
movsb
inc
cmp
pusha
js
cmp
jmp
dec
xchg
mov
mov
push
and
dec
sub
clc
adc
adc
das
push
shlb
lcall
add
and
cmp
jecxz
insb
popf
xchg
rcl
mov
lcall
aam
out
xchg
fcomps
pop
push
das
daa
jno
push
xchg
lret
or
movsl
sbb
push
sbb
mov
and
adc
aam
enter
imul
in
xor
push
push
xor
enter
sbb
mov
mov
xorb
push
cmp
cmp
and
lds
mov
nop
sahf
and
push
sti
push
cmp
pop
mov
cmp
arpl
add
int3
int3
add
jno
bound
mov
sbb
jno
cmp
sahf
sbb
jecxz
sti
push
pop
cmp
sarl
fldenv
repz
je
dec
das
or
fdivr
adc
rorl
inc
out
das
imull
das
pop
pop
jno
jge
cmp
cmp
scas
sub
xchg
pop
enter
add
xchg
test
sbb
or
sub
inc
imul
lock
mov
mov
rclb
add
xchg
dec
aam
leave
add
add
out
add
cmc
mov
clc
jl
stos
mov
imul
jge
sub
push
in
jp
sbb
sbb
je
cmp
daa
movsbl
es
push
call
ret
mov
mov
test
add
mov
test
jo
dec
out
test
sbb
sbb
movb
ret
and
adc
pusha
xor
add
jnp
rorb
sbb
nop
or
add
dec
mov
push
hlt
or
iret
sub
jmp
mov
sbb
inc
add
pop
pop
and
outsb
hlt
loope
iret
adc
mov
fcom
dec
sbb
les
subb
addr16
xor
add
insl
std
lock
in
out
sbbl
in
cmpsb
dec
push
es
add
call
dec
and
sub
add
out
stos
or
inc
inc
mov
faddp
jnp
push
pop
fwait
dec
add
imul
xor
shr
insl
icebp
pushl
movswl
test
mov
push
jne
clc
pop
mov
and
fiadds
sub
movsl
xorl
mov
pop
mov
pop
mov
inc
or
xchg
add
push
hlt
mov
sbb
mov
mov
clc
add
jg
pop
xor
decl
mov
mov
inc
mov
mov
cmp
push
or
dec
clc
addl
int
mov
cltd
sarb
sub
push
icebp
or
orb
out
lcall
add
insl
xor
mov
nop
and
and
add
cld
push
leave
push
xor
mov
clc
cmp
jne
pop
mov
mov
pop
cmp
into
inc
dec
and
adc
push
cmp
call
ds
push
sahf
pop
add
enter
xor
push
shlb
mov
xchg
add
test
lret
in
sbb
push
in
enter
in
into
mov
push
int
hlt
test
les
dec
and
es
pop
adc
inc
mov
mov
cmp
push
enter
fldcw
daa
fbstp
cmpsb
lret
mov
or
add
mov
popa
and
and
or
xor
mov
xor
test
loop
dec
mov
pop
lahf
popf
inc
xor
and
adc
pop
orl
add
and
and
push
daa
or
sbb
push
sub
test
hlt
test
mov
mov
mov
mov
clc
jns
add
rclb
xchg
adc
lds
jb
cwtl
mov
or
dec
cld
stc
sub
ss
lea
cmp
jbe
add
sbb
cmp
jbe
mov
sbb
sbb
cli
enter
sbb
repnz
into
aas
insl
mov
insb
leave
or
cmp
int3
push
adc
divb
inc
dec
xor
xchg
mov
pop
enter
or
cmpsb
push
cmp
or
xor
daa
push
test
stc
push
incl
push
push
push
cmp
cwtl
inc
push
jnp
and
insl
test
jp
add
mov
shr
test
pop
ret
and
nop
arpl
adc
push
mov
in
lods
test
sub
stc
pop
jge
lahf
pop
sub
push
add
call
push
lock
cmpsl
sti
lea
xchg
mov
loop
push
push
xchg
or
sub
pushf
and
je
arpl
cmp
lods
mov
inc
push
mov
imul
jge
dec
push
dec
in
mov
into
push
and
int
and
loope
test
sbb
sbb
cmp
loopne
popf
aas
jb
movsl
addr16
inc
fwait
sub
add
repnz
adc
mov
dec
cltd
jge
mov
adc
shlb
fdivrl
shlb
loope
pop
shll
rorb
jp
and
mov
and
add
lods
jle,pt
cmpl
int3
mov
cmp
mov
scas
jb
out
test
push
adc
push
inc
enter
cld
or
add
out
and
sbb
jle
int3
es
jne
xlat
and
and
add
jno
rolb
push
mov
push
xor
je
nop
mov
mov
sbb
cmp
rcrl
fisttpl
push
loopne
mov
dec
jp
xor
inc
imul
ret
aas
int
cmpl
pushf
ret
call
test
mov
stos
pop
inc
fisttpll
fwait
int
scas
add
push
addb
and
rorb
sbb
ljmp
shlb
dec
pop
je
out
pop
fs
out
fdivl
mov
je
imul
aad
mov
outsl
xor
push
cwtl
test
mov
lret
or
imul
pop
adc
push
pusha
ds
push
nop
inc
out
mov
aas
cld
adc
dec
fwait
nop
or
pop
fidivrl
aaa
aas
es
rolb
sarb
cmp
mov
nop
dec
push
jo
fwait
jecxz
aas
add
jne
ret
cmp
adc
inc
add
sbb
push
std
leave
adc
or
sub
add
and
dec
sub
or
push
pop
je
jo
inc
sbb
test
mov
mov
adc
and
aam
insl
dec
xor
popf
sbb
or
or
push
ret
cmp
add
into
adc
nop
lcall
push
mov
and
pop
fldenv
out
int3
or
rolb
les
jmp
push
xchg
gs
fstl
lock
inc
incl
fwait
rolb
loopne
push
andl
xor
aad
dec
jmp
ret
xchg
pop
xor
jmp
push
inc
mov
adc
sbb
mov
or
inc
xor
push
jmp
push
cmp
pop
aad
add
inc
jne
xchg
push
push
lahf
imul
xchg
mov
push
pushl
addr16
rorb
add
sahf
add
pop
cmp
jbe
sub
sub
cmp
sbb
fcompl
sbb
xchg
rcrb
adc
pusha
mov
mov
lcall
shrb
data16
and
clc
bound
xor
push
xchg
xlat
mov
jne
mov
mov
gs
testb
pop
pop
mov
leave
or
inc
mov
shll
mov
mov
call
cmp
lea
sarb
lods
pop
add
push
adc
jnp
xor
push
call
cmp
sbb
xchg
pop
xchg
sbb
sahf
jmp
add
ds
ljmp
imulb
ret
movsb
aam
jb
xor
stos
add
ja
loopne
dec
out
shll
inc
add
adc
sbb
push
icebp
push
adc
inc
nop
lock
or
push
push
xchg
sub
aaa
mov
adc
or
pop
je
mov
adc
add
add
push
cmp
dec
and
lock
addr16
mov
sti
jb
and
xor
add
sub
add
je
jl
pop
and
pop
add
mov
mov
xor
xor
xchg
xchg
and
insb
mov
outsl
push
jae
lret
inc
shlb
sbb
insb
pop
jmp
mulb
lds
sub
jecxz
outsb
mov
adc
movsl
pop
sub
sahf
add
mov
push
sbb
cld
mov
loope
scas
pop
jne
inc
inc
xor
sahf
test
arpl
add
sbb
add
and
das
fs
movaps
test
or
sub
push
cs
or
pop
push
or
pop
pop
cltd
inc
data16
movsb
mov
dec
and
rolb
xor
cmp
jmp
jo
xchg
jae
jns
bnd
add
add
or
and
inc
adc
mov
or
data16
mov
sbb
mov
xchg
mov
pop
mov
add
sbb
je
mov
cmp
dec
icebp
jne
aad
test
insl
push
push
mov
ss
mov
xchg
sbb
lea
sub
mov
lcall
cli
add
imul
or
cwtl
int3
notl
test
loopne
inc
das
mov
and
frstor
sub
stc
sub
or
mov
jae
xchg
push
or
insb
rcrl
jbe
popf
rclb
pop
jecxz
ret
adc
jb
mov
mov
fcompl
or
lea
xchg
sti
sbb
inc
ret
sub
or
dec
sti
lock
mov
in
ret
xor
xchg
jmp
xchg
xor
pop
sbb
pop
dec
jp
xor
in
push
push
sahf
pop
cwtl
xchg
jecxz
lret
jp
pop
jle
jge
and
push
inc
popf
rorb
lahf
inc
and
inc
lock
pop
cmp
or
inc
loopne
pop
test
and
mov
xorl
int3
add
mov
ja
pushl
add
mov
iret
jle
adc
push
push
mov
add
sub
cmpsb
inc
fcoml
and
and
outsl
cmp
into
add
sub
gs
add
add
cmp
fs
sub
cwtl
add
jbe
xor
lea
iret
mov
dec
fdivp
sbb
xchg
scas
or
pop
lods
or
push
push
xor
jmp
add
or
pop
and
xchg
sbb
test
sbb
push
inc
clc
sub
or
mov
out
imul
add
ret
lcall
and
pop
push
sbb
xchg
lea
or
insl
ret
cltd
mov
push
pop
push
inc
adc
add
stc
mov
fisttps
mov
scas
repnz
cmc
pop
mov
jmp
add
mov
mov
fldt
filds
or
mov
cmp
add
cmp
je
cmp
jne
mov
sbb
add
sti
dec
and
pop
dec
lea
scas
mov
pop
dec
xor
fbld
or
cmpsb
push
jmp
testb
je
testl
fs
sbb
add
fdivrp
cmp
jbe
into
lea
mov
pop
pop
inc
cmp
je
sub
inc
jmp
inc
and
dec
je
xchg
dec
xor
pop
mov
push
add
ljmp
pop
or
push
clc
mov
rclb
jo
cmp
ljmp
sub
fs
adc
into
ret
cmp
lcall
xor
ficoms
inc
push
ja
sub
jne
pop
cmp
jo
dec
push
outsb
hlt
cmpb
add
mov
cld
xor
je
ficoms
xchg
aam
mov
mov
mov
enter
xchg
ss
cmc
pop
insl
dec
push
lock
add
inc
cld
insb
xchg
adc
rclb
jns
cmp
pop
xchg
xlat
movsb
or
arpl
and
xchg
stos
mov
in
mov
call
mov
fsubs
inc
fldl
pusha
mov
add
jae
insl
lock
inc
loope
sti
lahf
pop
shl
add
jmp
pushf
aas
insb
sti
and
test
repnz
in
aaa
push
cmp
js
fs
jne
xor
fwait
push
cmp
adc
incl
or
outsb
pop
jae
mov
jmp
jno
mov
dec
shlb
cwtl
jo
add
jne
pop
push
add
and
incl
inc
adcl
or
int3
cmp
rolb
add
and
cmp
out
out
pop
xor
and
es
sub
mov
jbe
sub
and
pop
or
jl
or
adc
shrb
stos
push
inc
test
jbe
loopne
stos
das
aam
cmp
jbe
and
pop
arpl
fcoml
adc
je
test
jne
sub
inc
adc
std
sub
jb
adc
adc
lods
mov
xor
adc
movb
inc
fcmovnb
mov
sub
inc
xor
xchg
mov
adc
and
add
std
push
mov
inc
and
push
or
stos
mov
adc
mov
add
daa
cmova
and
dec
inc
adc
cs
push
lcall
mov
push
push
lahf
pusha
add
push
mov
int3
lock
adc
mov
adc
mov
movsl
pop
aam
mov
push
je
mov
mov
push
inc
pop
out
push
add
insb
ret
lea
sub
scas
lret
jne
lods
mov
cmc
mov
cmp
push
mov
inc
sahf
jmp
xchg
imul
mov
inc
inc
xchg
enter
adc
out
jg,pn
push
cld
xchg
daa
cmp
addl
push
jbe
push
cmovs
cmp
int
call
out
sahf
int
jp
push
clc
into
inc
sbb
cmp
mov
pop
and
cmp
out
adc
movsb
push
push
popf
mov
pop
xlat
out
inc
mov
jns
pop
dec
pop
dec
mov
ljmp
sbb
insl
xor
fwait
xchg
cmp
or
push
andl
inc
sbb
or
cmp
fists
cltd
ss
push
aaa
jp
inc
adc
out
orb
test
jb
in
pop
inc
sbb
rol
cli
sub
push
push
movl
push
adc
dec
addl
std
or
xor
push
lahf
push
push
sbb
pop
inc
sbb
add
push
and
shl
test
enter
mov
mov
inc
xchg
mov
push
lods
test
add
mov
into
loope
shlb
lds
cwtl
mov
pop
add
int
or
data16
je
mov
mov
mov
mov
add
cmp
outsb
sarb
call
push
pop
push
lea
das
sub
mov
push
sahf
imul
pop
cmovns
dec
lea
pusha
rcrb
mov
pop
sub
push
mov
pop
push
inc
fdiv
jge
enter
fbld
testb
jbe
mov
mov
ja
gs
add
inc
inc
fwait
nop
mulb
or
repnz
pop
pop
movsb
inc
push
pop
nop
push
sub
ret
cmp
mov
push
or
cmc
sub
out
mov
push
movsl
xchg
inc
test
dec
push
cltd
mov
mov
push
ret
idiv
pop
je
test
dec
push
inc
inc
and
xor
push
fs
mov
or
shll
adc
mov
xor
xor
cmp
xor
lea
incl
sub
push
cmp
dec
or
mov
and
mov
incb
inc
push
lea
sbb
mov
stc
push
sbb
mov
lock
adc
mov
push
loop
or
add
sahf
mov
mov
push
aaa
les
movsl
pop
dec
mov
clc
push
add
add
pop
or
xchg
add
push
lret
push
xorb
mov
andl
aam
sbb
sub
jp
ret
or
sti
pusha
jb
into
or
pop
cmp
lea
adc
rcr
and
xchg
adcl
mull
movsb
mov
mov
rcl
adc
push
and
push
mov
orb
add
or
push
ljmp
inc
clc
mov
stos
push
jmp
enter
jbe
mov
push
movb
push
popf
test
push
cmpsl
inc
pop
xchg
addl
xchg
add
xchg
xchg
cmp
sbb
xchg
or
out
lea
or
jg
inc
loope
fnstsw
pusha
stos
adc
and
or
pop
xchg
cmp
push
xor
push
lea
fs
or
insl
and
cmp
movb
mov
cs
int3
insl
gs
jbe
adc
sbb
push
pop
lret
cmp
pop
clc
add
sub
mov
adc
mov
jmp
adc
sbb
ds
cwtl
cmpl
dec
push
in
cmp
ficomps
push
lret
test
and
jne
pusha
sub
add
aad
lods
ret
jge
adc
add
movl
add
js
push
cmpl
pusha
fidivl
cmp
xchg
in
andl
testl
testl
sub
rcr
fisubl
xchg
rolb
or
jmp
bound
and
jnp
fstps
cmp
mov
push
sbb
pop
cld
inc
mov
adc
jne
fstps
mov
jne
lock
setle
insl
inc
jp
aaa
adc
adc
iret
push
vmptrld
xchg
orl
adcb
adc
push
scas
popf
ss
adc
mov
test
dec
movb
pop
sbb
adc
mov
ret
jbe
cmc
xchg
jne
mov
icebp
and
lods
fwait
or
loopne
fsubs
mov
dec
xlat
ret
in
cld
out
push
aas
je
cmp
push
pop
jne
les
cwtl
dec
aam
cmpsl
jne
push
fcomi
imul
or
pop
jne
pop
call
sbb
add
xorb
insl
fstpt
jle
xchg
jne
jmp
xor
in
sbb
sub
into
mov
mov
aaa
push
adc
addl
mov
mov
pop
lea
fldl
add
je
mov
ficoms
in
sub
popf
jbe
inc
mov
push
sti
jno
mov
repz
jmp
mov
cmp
pusha
mov
jae
scas
jg
jp
push
sub
sub
add
leave
daa
jmp
xchg
add
xlat
xchg
mov
sub
decb
adc
cmpl
andb
daa
xor
out
add
js
mov
sbb
imul
add
add
inc
rcrb
or
fadds
ja
or
ret
push
add
push
push
ret
lahf
sti
inc
pop
or
push
mov
push
cmp
std
push
mov
lcall
clc
or
push
movsl
aas
add
or
inc
mov
mov
inc
sbb
sub
and
sahf
xchg
xlat
push
push
push
push
lret
in
mov
test
xchg
pusha
pusha
or
sub
adc
inc
and
xor
orps
ret
addb
les
xchg
insb
sbb
in
jbe
mov
dec
and
fbstp
daa
xchg
sarl
xchg
pop
rolb
sahf
sbb
push
adc
push
outsl
loope
dec
rcll
lret
mov
movsl
and
insb
sbb
adc
mov
stos
push
push
sbb
or
inc
adc
pusha
sub
sbb
pop
sub
sub
outsb
xor
test
fdivrs
adc
or
or
add
daa
cmp
jecxz
jnp
fdivl
leave
pop
xchg
push
es
pop
xorl
ljmp
sti
xor
push
loop
jmp
mov
jnp
dec
aad
aas
jp
push
pop
jmp
clc
adc
pushf
mov
je
into
or
or
and
add
push
pop
ret
xchg
xchg
push
or
lret
and
push
or
pop
push
pop
loope
je
lock
lcall
fstps
sbb
xor
sti
sbb
dec
es
sti
dec
jnp
sahf
test
dec
pop
push
mov
mov
or
sub
mov
fs
mov
scas
ret
push
nop
cmpsl
test
cmpsl
and
cmp
cmp
test
cmp
je
add
dec
cmp
mov
pushf
clc
fildll
je
mov
cmp
jne
ss
cltd
cmp
xchg
adc
loopne
add
adc
or
mov
adc
sub
sbb
in
push
test
nop
mov
cmp
and
sbb
int3
loope
lods
or
inc
mov
add
pop
icebp
pop
mov
add
lea
std
mov
push
adc
cmp
sbb
inc
inc
mov
jbe
push
adc
ds
jo
loope
jae
mov
xchg
push
push
lret
lods
add
in
fcomi
inc
and
lock
cmp
jne
or
or
push
ror
push
subb
pop
jbe
jo
dec
rorl
hlt
adc
scas
xor
lcall
test
jo
stc
mov
daa
xchg
xchg
mov
sub
js
inc
pop
lods
or
adcl
inc
sahf
scas
or
incl
cmp
inc
push
addl
push
icebp
and
and
push
mov
jmp
sarl
mov
int3
mov
mov
les
push
xlat
mov
cmpsl
sbbl
iret
inc
shl
pusha
je
divb
ds
outsl
mov
test
sbb
or
push
inc
add
rcl
sbb
adc
mov
jmp
xlat
sbbl
inc
cmp
fwait
sti
xchg
rorl
inc
hlt
mov
lock
or
pop
cli
hlt
and
push
cmp
mov
call
add
add
mov
cmp
jmp
hlt
movsb
pop
xor
add
push
pop
jb
test
das
les
iret
cmpsb
sbb
inc
mov
jecxz
divb
call
icebp
unpcklps
outsl
mov
and
mov
push
orb
jl
sub
clc
lock
popa
lea
jo
add
cmpsl
mov
jmp
pop
andl
int
and
push
lea
xchg
addr16
or
mov
push
push
rclb
hlt
or
test
and
xor
loope
je
pop
xchg
jo
add
test
adc
mov
nop
mov
inc
dec
mov
xchg
xchg
push
cmpb
loopne
gs
jns
out
add
mov
lock
and
and
mov
or
adc
movsl
movsw
sub
push
push
jecxz
xchg
and
and
mov
push
lds
sub
fsub
mov
inc
push
push
adc
pop
sbb
add
stos
adc
xor
push
test
pusha
es
mov
je
adc
bound
adc
dec
push
popa
mov
or
xor
call
clc
jmp
sub
push
push
jl
adc
push
bound
push
loopne
and
add
dec
push
fucom
addl
cmpsb
dec
rorl
jle
imul
jmp
roll
mov
and
aam
sub
push
dec
push
push
jo
mov
sbb
dec
push
mov
jne
jns
lock
xchg
xor
xor
xor
xor
sbb
or
jg
jbe
lods
mov
ja
jmp
mov
flds
xchg
cmp
cmpl
or
imul
and
adc
jl
out
stc
out
inc
shlb
adc
mov
jno
lret
stos
fmuls
fsubrl
and
loopne
inc
loop
push
shlb
ficomps
and
mov
push
pop
cmp
aas
push
jnp
dec
testl
sbb
nop
nop
rcll
xor
pushf
movb
lds
scas
pop
push
mov
adc
fs
js
je
mov
xchg
jo
out
inc
mov
decl
cmp
jl
jmp
pop
je
mov
inc
clc
sbb
add
sbb
or
lds
mov
xchg
mov
push
cmp
fnstcw
lods
cltd
sbb
sbb
xchg
aam
mov
sbbl
scas
fwait
sbb
xchg
pop
insb
xor
lea
mov
pop
in
push
push
inc
push
sbb
sub
cmp
rolb
dec
push
rep
ret
xor
xor
lock
xchg
add
jmp
clc
xchg
rclb
out
xchg
lods
dec
clc
inc
push
cmc
ds
adc
xchg
mov
and
inc
out
cs
test
push
push
xor
nop
jbe
iret
mov
or
jmp
push
incl
call
xchg
mov
or
add
pusha
dec
daa
lds
in
pop
int3
or
aas
ret
rclb
aas
cs
xchg
pop
sbb
mov
sbb
push
loopne
hlt
sub
mov
fdivrs
mov
add
adc
mov
pop
xor
gs
imul
mov
mov
hlt
or
inc
inc
fiaddl
mov
inc
add
es
cltd
and
in
sub
mov
or
mov
mov
jae
sbb
popa
pop
leave
hlt
xlat
cmp
pop
mov
cmp
icebp
adc
or
cs
fdivs
cmp
inc
mov
insl
pop
mov
jnp
jmp
push
adc
and
fmuls
add
cmp
repnz
sbb
xchg
fcom
mov
xor
mov
push
cwtl
jle
inc
add
and
pushf
inc
or
nop
lock
ds
add
push
push
push
add
rcl
add
xchg
mov
xchg
fstpt
lahf
add
push
jecxz
ret
pushl
push
fldenv
adc
sub
testl
or
in
rolb
or
mov
je
cmp
xchg
js
ljmp
add
sub
rcr
dec
sbb
data16
sub
sub
ret
pop
iret
stos
mov
mov
dec
popf
push
faddl
xor
movsl
mov
add
dec
loopne
and
or
bound
movsb
jnp
cmp
add
inc
sub
or
clc
call
push
and
dec
es
cmp
or
mov
xor
scas
sub
out
jne
ja
repnz
sub
or
jo
mov
cld
sbb
jmp
or
push
roll
stos
fistpl
cmpsb
add
ret
or
cmc
ret
lret
push
sub
push
loopne
sbb
jns
loopne
adc
add
xchg
xorb
push
xlat
data16
cltd
xchg
nopl
adc
into
push
test
subl
or
outsl
iret
or
pusha
cmp
adc
pop
add
ss
arpl
cmp
jns
xlat
or
popa
adc
pop
mov
dec
sahf
dec
in
push
incl
pushf
testb
adc
jbe
push
and
xlat
mov
push
pop
sbb
inc
lcall
scas
adc
adc
pop
add
push
mov
push
push
cld
rcrl
pop
inc
sub
adc
inc
adc
cmpsb
jge
pop
ret
add
xchg
bound
add
dec
pop
cmp
adc
dec
sbb
sbb
mov
add
cmp
and
mov
sahf
adc
lret
inc
push
pop
sub
les
das
inc
sbb
xor
sahf
xchg
mov
test
arpl
add
xlat
or
mov
add
jo
in
cltd
test
movsb
aaa
sbb
pop
clc
loopnew
out
lea
jbe
out
xchg
jne
iret
pop
or
pop
push
mov
or
or
ss
push
sbb
mov
or
scas
mov
or
or
mov
adc
aam
add
xorb
or
outsb
daa
and
mov
loop
jne
out
outsl
xchg
nop
xlat
aam
inc
inc
fmul
xchg
mov
push
lcall
mov
mov
pop
sbb
or
lret
rcrl
add
push
roll
jge
insl
jecxz
or
dec
das
fldcw
nop
movl
aam
imul
xchg
test
and
iret
pop
movl
and
or
dec
xchg
adc
xor
cmp
stos
xchg
dec
push
sahf
or
frstor
imul
test
xor
push
cmp
jp
insb
push
xor
mov
inc
xchg
faddp
mov
cs
fisubl
xor
mov
push
inc
mov
push
mov
or
mov
jp
adc
push
and
xchg
or
sub
repnz
aas
push
shl
cs
cli
sahf
outsb
mov
test
push
add
pushl
inc
cli
sub
mov
pusha
jnp
inc
or
mov
fcoms
xchg
mov
subl
jbe
sahf
push
cmp
jbe
push
push
enter
in
push
sub
dec
aam
int
ja
mov
and
push
adc
sbb
inc
jp
aaa
push
sahf
xchg
je
sub
push
rclb
mov
sbb
add
mov
dec
sahf
inc
ret
outsb
insb
pushf
push
jl
mov
xor
inc
aaa
sbb
mov
subl
adc
push
push
jecxz
push
jge
adc
mov
add
xchg
scas
test
pop
mov
jo
mov
repz
or
lea
push
cli
loopne
mov
test
mov
push
bound
test
add
pop
cmpl
push
adc
or
push
mov
sbb
mov
and
or
sbb
addb
adc
ss
mov
mov
out
frstor
or
pushf
push
xchg
pushf
mov
sub
ljmp
add
dec
lods
pop
mov
inc
xor
shlb
faddl
push
iret
push
push
or
push
xor
sub
bswap
enter
cmp
xor
cltd
jmp
sbb
cwtl
xchg
xor
movsl
push
faddl
shl
push
sub
mov
adcb
jmp
dec
sub
dec
jg
loop
dec
xor
out
les
lret
je
cmp
xchg
push
sbb
inc
lock
push
xchg
stos
mov
scas
jge
fstp
cmp
push
sub
and
jo
cmp
and
cmp
cmp
aaa
xchg
adc
adc
and
inc
movsl
out
sbb
adc
mov
loopne
jle
pop
add
push
and
dec
cmp
inc
loopne
push
mov
fidivrs
popf
xchg
addb
fbld
xor
mov
lret
pop
insb
sarb
dec
fdivl
ret
mov
mov
sbb
insb
mov
and
add
pop
sarb
jo
adc
sbb
push
dec
push
pop
sbb
adc
jmp
enter
mov
cmp
std
mov
cmp
push
ds
or
push
pop
rclb
pop
dec
xor
outsb
mov
loopne
xor
or
or
pushl
xchg
inc
cwtl
inc
leave
sbb
mov
or
insb
mov
ss
push
add
add
xchg
jne
adc
mov
cmp
cmpl
add
jmp
mov
mov
clc
push
mov
push
push
loopne
mov
add
cwtl
add
xor
push
pop
sbb
imul
jo
sub
movsb
cltd
cltd
push
shlb
mov
fwait
sbb
pop
sbb
and
and
sahf
add
pushf
mov
adc
jle
or
dec
icebp
or
add
or
mov
mov
test
stc
sub
lea
pop
dec
inc
mov
leave
xor
cli
ss
inc
and
jne
lock
cmpsl
sub
mov
push
dec
push
jae
lds
sub
loopne
pop
or
sbb
push
or
loopne
push
mov
hlt
fildl
or
sar
sub
cmp
addr16
stos
rcrb
jbe
sub
add
sub
das
movsb
push
int3
inc
jno
or
out
add
cwtl
pop
mov
lods
pop
negl
push
inc
push
sarb
push
rol
push
adc
or
test
and
call
rorl
mov
xchg
stos
xchg
lret
cmpsl
mov
out
lret
ljmp
dec
pop
cmp
pop
push
dec
push
or
xchg
xchg
jmp
hlt
je
int3
add
ds
jge
sbb
hlt
sub
push
mov
add
out
xor
add
dec
add
add
hlt
mov
and
sub
sub
add
loopne
fcomps
xor
lods
mov
loopne
sbb
mov
subb
push
pop
mov
xor
push
mov
push
sub
mov
lds
add
sbb
addr16
add
mov
adc
lret
shlb
arpl
lods
imul
sbb
adc
mov
dec
sub
adc
adc
dec
xor
stos
xor
leave
or
mov
and
fucomip
lods
cmpsl
mov
pushl
push
ds
push
push
xlat
in
cmpsb
ror
shlb
dec
cmp
aaa
xchg
addr16
inc
insl
js
scas
mov
sar
stos
xor
pop
xor
adc
fs
xchg
and
adc
nop
add
adc
leave
and
adc
sbb
xor
adc
adc
xchg
inc
adc
pop
add
and
sub
shll
icebp
push
inc
rolb
pop
mov
pop
aaa
jg
push
mov
cmpw
je
add
aad
imul
inc
clc
add
rcll
or
fcmovu
inc
pop
scas
fwait
lock
pop
adc
fbld
sbb
rorb
lret
add
mov
scas
sti
or
test
in
popf
mov
pop
shlb
jl
inc
imul
das
jmp
cmp
out
or
sbb
cmp
push
jo
je
xchg
jb
jb
cmp
pushf
ss
fmuls
movsb
andb
nop
roll
adc
mov
lea
stc
shrl
mov
inc
mov
adc
jp
inc
dec
mov
or
xchg
push
xchg
insb
jae
mov
push
add
xor
add
into
in
add
in
imul
out
sti
popf
push
cmp
push
add
pop
mov
cmp
iret
sti
pop
jmp
and
adc
dec
pop
inc
rsqrtps
mov
lea
aad
pop
xchg
jnp
popf
push
mov
push
mov
pusha
mov
jne
dec
lahf
jb
push
mov
rol
mull
push
mov
push
inc
movswl
iret
call
sub
mov
jnp
addr16
mov
push
mov
call
setp
add
pop
loope
or
fnsave
testb
mov
sub
pop
add
test
inc
and
jnp
ret
mov
sub
mov
popa
aaa
test
xchg
inc
insl
rcl
and
sub
cmp
fdivs
out
mov
inc
test
in
cmpsb
mov
mov
jg
inc
push
stos
mov
mov
push
adcl
or
xor
test
mov
mov
sbb
cmp
into
aam
test
clc
add
jecxz
cld
cmc
in
pop
xchg
repz
jmp
or
sub
dec
inc
or
or
stos
sbb
dec
push
inc
insl
loopne
inc
add
cmp
inc
xchg
rorl
dec
push
push
imulb
scas
pop
add
push
js
or
xor
pop
inc
dec
push
sub
sbbb
mov
pop
push
inc
out
and
mov
fsubs
popa
push
repz
and
nop
ret
roll
mul
addl
xor
mov
push
pop
lahf
fwait
push
xchg
or
rorb
rcr
mov
xchg
pop
rolb
or
dec
jno
mov
sbb
addr16
xor
xor
and
mov
and
cmp
sbb
lret
test
adc
cmp
xchg
sub
adc
inc
or
lea
xor
or
repnz
cmp
jp
and
popf
dec
ret
mov
inc
clc
fwait
add
jno
mov
inc
test
cli
orl
xchg
test
idivl
inc
dec
adc
rol
push
push
scas
adc
xlat
jmp
addl
movsl
sub
mov
xor
cmc
les
xor
fsubrl
or
or
dec
push
pop
mov
orb
and
rorl
jmp
or
decb
inc
mov
lret
vsubpd
fidivrs
xor
imul
push
mov
movmskps
inc
outsl
stc
adc
pop
imull
mov
dec
jp
xchg
rorl
lea
mov
xchg
ret
rcll
dec
push
aaa
or
or
das
daa
not
andb
adc
sub
dec
test
xchg
pop
into
ror
ret
in
mov
sbb
or
aam
jne
xchg
mov
jmp
pop
out
sub
add
push
bound
test
sub
sbb
xor
xor
inc
push
push
lea
loop
push
xchg
mov
sub
mov
sbb
js
sbb
outsb
rol
pop
dec
push
stos
add
andl
adc
and
inc
mov
pop
mov
cwtl
sti
cmp
loope
rol
fisttpll
pop
jne
mov
mov
cmpsb
mov
daa
xor
sub
mov
jl
pop
js
cmpsb
lea
add
push
pushf
push
push
es
xchg
jns
es
xor
inc
addr16
dec
jmp
arpl
mov
inc
adc
inc
nop
push
push
clc
test
add
mov
roll
dec
xchg
push
jmp
inc
adc
pop
inc
test
imul
or
std
adc
push
aad
rorb
movsl
mov
dec
sar
sahf
add
ds
negb
aaa
cmpsb
or
add
xor
test
rolb
pop
add
push
inc
test
loope
dec
add
jl
inc
xchg
jae
shlb
add
xor
fldl
adc
or
cmp
cmpsl
cltd
xchg
mov
jmp
xchg
dec
nop
pop
in
or
dec
fldl
xchg
stos
test
and
jmp
nop
fstps
or
aad
cmp
mov
les
scas
add
je
dec
leave
or
repnz
dec
sub
jmp
inc
xor
push
cmp
pop
add
push
mov
inc
rcrb
ret
adc
mov
adc
or
je
inc
cmc
xor
popa
in
les
jp
add
mov
push
pmulhw
mov
adc
mov
xor
inc
fcmovb
sbb
or
pop
lahf
add
or
sub
fs
add
outsb
js
notl
push
fistps
add
loopne
loope
jg
adc
dec
cltd
iret
into
nop
pushl
hlt
stos
add
and
pushf
pop
pusha
add
call
push
inc
andl
mov
cmpsl
xchg
sub
in
push
pop
sub
daa
or
aaa
jb
shrl
adc
js
pop
xor
sbb
jns
or
add
pop
sub
in
add
sbb
lods
or
sub
or
add
prefetch
mov
pop
inc
insb
mov
std
cmp
inc
test
movsb
sbbl
add
and
cmp
jb
testl
rorl
or
inc
mov
mov
pop
cwtl
and
xchg
pusha
jecxz
scas
xor
push
inc
incl
in
pop
movsl
push
je
cwtl
xchg
and
inc
cmp
jbe
sbb
nop
mov
andb
mov
and
jbe
stc
xchg
nop
out
xchg
movsl
lret
inc
outsb
or
test
xchg
add
lods
xor
ret
add
add
sub
pop
mov
xor
mov
pop
dec
mov
jae
ja
add
cmp
je
cmp
or
shrd
pushf
sbb
xchg
sbb
clc
push
push
push
adc
xor
addl
pop
add
outsl
lea
cmp
inc
and
cmc
std
cmp
pop
and
inc
lds
nop
add
and
xor
test
or
int3
pop
cmpl
int3
push
or
sbb
add
inc
dec
pushf
and
jae
sub
or
ret
sbb
adc
addl
inc
ja
jecxz
jmp
in
mov
and
fisubrs
mov
xchg
notb
pop
subb
inc
adc
lahf
cwtl
les
sbb
ret
data16
sbb
testl
aad
sbb
ds
adc
xlat
cmpb
data16
mov
mov
cmp
inc
imul
push
jns
mov
clc
jne
mov
push
test
cmp
dec
or
mov
nop
sbb
inc
cld
cmp
stos
test
rolb
mov
movsb
nop
dec
fcoml
xorl
mov
hlt
inc
scas
xchg
inc
hlt
jns
push
add
sbb
lds
cli
sbb
sbb
mov
add
pop
adcl
jae
rclb
les
lret
and
mov
fsts
sub
pop
push
js
fistl
cld
or
loopne
loopne
fnstenv
mov
sbb
push
mov
stc
repz
cld
fcom
sbb
push
jecxz,pn
sbb
push
nop
out
mov
push
cmp
mov
inc
aaa
data16
in
jno
or
aaa
test
mov
ret
mov
cs
dec
sbb
push
fs
xchg
inc
call
mov
shrl
hlt
neg
sbb
and
bnd
movzwl
sti
sub
push
adc
les
mov
jp
test
add
or
test
adc
add
in
pop
xor
add
mov
fcmovnu
arpl
xor
mov
insl
loope
or
and
mov
dec
in
mov
add
clc
idiv
push
cmpl
jne
cmp
jbe
or
jne
push
xorb
jno
pushf
cmp
data16
mov
std
cmpb
data16
mov
pop
push
push
xchg
popa
mov
std
push
inc
cmc
jmp
sbb
mov
addl
push
xchg
lcall
sbb
adc
sbb
and
divb
cwtl
sbb
dec
test
push
pop
jne
add
push
mov
lea
inc
rolb
inc
sarb
negl
jg
vmread
or
add
dec
mov
push
sysexit
or
and
and
jo
or
in
xor
jne
and
xchg
rolb
bnd
push
mov
ret
jnp
and
push
nop
add
je
andl
pop
in
bound
add
mov
ficoml
dec
aas
out
or
sbb
cmp
cs
sbb
mov
inc
sbb
inc
jg
xor
or
cmpl
xor
add
mov
out
mov
inc
loope
add
mov
outsb
pushf
out
push
pop
ret
test
xlat
sbb
xor
push
mov
rorb
sub
add
movsb
push
inc
clc
mov
insb
lock
inc
clc
push
or
mov
jmp
and
add
adc
push
aam
lret
dec
fs
addr16
cmp
jae
inc
fs
cmp
or
dec
xchg
ljmp
sub
inc
jl
ret
add
lahf
les
in
inc
sbb
leave
mov
pop
mov
jb
push
jae
insb
cmp
lods
pop
add
inc
testb
cmp
fcomps
and
cmp
mov
cld
wbinvd
int3
ficomps
je
jle
loopne
cmp
add
daa
jmp
push
decl
cltd
push
push
mov
movsl
mov
outsb
sub
fwait
mov
add
sbb
int3
inc
sahf
xchg
add
outsl
mov
inc
rorl
add
dec
pushf
add
loopne
popf
call
into
hlt
xchg
mov
jbe
testl
or
sub
mov
mov
pop
sbb
sbb
and
test
add
dec
hlt
mov
imul
js
rclb
call
arpl
sub
cmp
add
mov
and
scas
sahf
movsl
fsubl
xchg
mov
and
jge
cwtl
ds
dec
dec
call
gs
packsswb
inc
mov
je
or
xor
adc
cmp
cwtl
or
push
sbb
ret
add
pop
mov
pop
lcall
dec
add
sbb
ss
pop
jl
push
and
jge
leave
adc
push
mov
jns
and
mov
xchg
hlt
xor
adc
and
lods
loopne
xchg
inc
sub
mov
xchg
push
push
mov
and
rcr
mov
ret
or
je
les
push
sub
aaa
mov
xchg
inc
jg
aam
push
in
in
jno
dec
xchg
or
out
mov
dec
mov
aam
pop
je
iret
fcomps
add
and
lods
push
inc
fcoml
push
jle
and
mov
xor
adc
push
sahf
xchg
sti
or
and
das
or
sbb
mov
adcb
adcb
lea
mov
fidivrs
fdivrs
cmp
inc
jle
push
push
in
mov
xor
jns
cmp
xor
mov
or
and
adc
fisttps
rcl
ret
mov
pop
or
xchg
pop
jae
push
add
sti
jb
mov
mov
mov
enter
jo
push
test
lea
arpl
fistps
shrl
add
xor
outsb
add
push
sti
dec
mov
cmp
sub
cmp
add
pop
je
dec
adc
lock
in
jae
lea
ja
mov
aas
or
or
mov
jmp
inc
test
cmp
pushl
sub
sbb
test
and
daa
lock
std
pop
test
or
mov
lea
out
cmp
sbb
pop
push
pushf
jne
push
dec
or
dec
mov
jle
pop
je
iret
lea
les
in
sub
add
mov
stc
jae
loopne
or
add
inc
sub
pop
sbb
orb
dec
shr
push
sub
insb
sbb
and
or
sbb
les
add
mov
ret
rolb
gs
and
inc
sbb
add
sbbb
pop
push
sbb
sbbb
adc
mov
je
mov
pop
aaa
pop
imul
adc
or
adc
jo
adc
dec
shrl
inc
mov
sub
dec
and
sub
mov
ss
les
inc
pusha
imul
lock
lea
cmp
jle
movsl
sub
lret
or
jge
xchg
adc
jp
popf
mov
nop
jmp
imul
adc
popf
jecxz
mov
add
push
mov
add
xor
push
jno
dec
in
lods
or
outsb
or
pop
pop
pushf
lret
scas
adc
mov
push
mov
lea
shr
push
dec
or
sarl
inc
out
inc
cmpl
adc
xchg
cmp
push
lcall
inc
and
xchg
or
data16
xchg
add
push
add
or
iret
adc
pop
pop
inc
jae
mov
je
dec
add
adc
xor
xor
les
adc
adc
repnz
jmp
andl
movb
fcoml
arpl
xor
daa
or
fwait
jnp
test
addb
mov
dec
mov
mov
clc
bnd
mov
notb
cmp
push
fidivs
add
jb
push
jae
lea
push
sub
add
and
xor
xor
xor
es
ja
or
hlt
lods
lret
ret
shlb
or
pop
mov
mov
cmc
loopne
jge
lods
shll
incb
cmpb
xor
fnstenv
inc
jmp
inc
jmp
xor
xor
cmp
adc
ficoml
insb
testl
sub
inc
cltd
mov
add
adc
sub
sub
out
push
mov
sub
jp
mov
insb
testb
div
cmpsb
enter
flds
push
cmc
dec
mov
frstor
rorl
inc
xor
out
push
sti
sbb
push
push
mov
pop
repnz
mov
push
push
adc
out
imul
xchg
inc
cmp
mov
pushf
mov
adc
push
pop
xlat
push
cmp
or
aad
xor
add
push
mov
pushf
cmp
adc
leave
adcb
nop
cltd
or
sub
int
or
scas
divl
cmp
jge
outsb
fstpt
dec
cmp
xchg
inc
mov
and
dec
and
jb
inc
fsubrs
insl
test
cli
rclb
jnp
insl
test
mov
cmp
sub
push
inc
popa
sti
inc
scas
or
add
es
dec
add
mov
cltd
and
push
sbb
add
sahf
clc
and
xchg
push
adc
out
cli
mov
inc
out
std
cmc
imul
test
out
push
sbb
bound
test
pop
adc
ja
push
cmpsb
imul
imul
mov
sbb
popa
adc
and
inc
add
repnz
adcb
push
jbe
inc
push
stc
and
add
push
sbb
movsl
sbb
lea
add
adc
loop
mov
rcrl
inc
xchg
jo
and
mov
ds
adc
push
cmp
mov
add
jmp
das
inc
sbb
imul
lods
inc
adcb
sub
lock
push
pop
pop
pop
sbb
ja
cs
xor
loopne
lds
dec
addr16
xchg
add
add
jb
adc
inc
pop
imull
xchg
or
cmc
test
lret
nop
xor
jbe
cmp
dec
loop
ret
pusha
std
xchg
xor
mov
daa
mov
rcll
loop
inc
js
jg
pushf
mov
dec
xchg
pusha
jo
xorl
movsl
shrb
pop
imul
pop
and
rclb
add
data16
ret
ja
adc
cmp
and
jecxz
or
lret
cmp
push
nop
repz
rcr
adc
and
push
jl
mov
mov
sub
dec
inc
pusha
pop
test
pop
adc
or
mov
cmc
pop
push
imul
cmp
add
mov
sbb
fdivrs
mov
jae
ja
std
or
test
and
push
pop
pop
sbb
xor
pop
or
mov
mov
leave
jae
rol
push
pop
jnp
add
lahf
mov
out
lret
in
mov
pushf
push
add
fimull
inc
xor
les
pop
fs
push
push
scas
dec
inc
xchg
inc
push
roll
jnp
pop
sub
clc
addr16
inc
and
fsubrl
jle
jne
mov
pusha
jne
das
lea
and
xchg
add
push
das
add
lock
das
mov
fwait
and
clc
inc
das
and
fildl
ret
pop
dec
fdivs
sub
lock
aas
push
xor
adc
jbe
inc
cmp
mov
fimuls
and
and
sahf
jbe
nop
shrb
pop
cli
enter
ja
daa
inc
and
add
mov
push
add
mov
mov
out
mov
cmp
test
stos
adc
adc
pop
inc
push
cld
adc
or
int3
sar
enter
or
ja
fs
and
or
notb
iret
inc
mov
les
push
mov
or
leave
push
or
ret
ret
sub
fmull
inc
test
mov
pushf
out
ds
push
pop
and
popw
scas
adc
ja
ljmp
dec
fnsave
xchg
adc
data16
jnp
mov
mov
mov
jo
int3
or
add
pushf
inc
mov
cmp
fwait
ret
xor
pop
andl
out
dec
hlt
cli
mov
cmp
js
xchg
dec
test
jg
mov
add
xchg
jp
or
cmp
or
add
ss
pop
push
mov
in
mov
xchg
dec
cmc
js
jnp
push
cmpl
push
inc
cmp
mov
add
ds
jmp
cmp
xor
mov
push
push
arpl
daa
jo
sub
push
arpl
outsl
sub
add
push
adc
mov
mov
test
sbb
bound
pop
cmp
xchg
andl
leave
in
sbb
xchg
ret
jl
subb
loope
test
movsl
jb
loopne
fsubl
push
sbb
push
push
dec
dec
mov
mov
aam
and
adc
mov
lock
add
xchg
rorb
addr16
pop
sbb
stos
int
push
shrl
push
call
and
out
das
mov
pop
jle
mov
movsl
movsl
addl
push
insb
sub
aaa
and
in
pop
push
mov
mov
mov
lret
or
pop
sub
ret
xor
sbb
push
pop
or
lea
es
in
stos
or
mov
inc
jmp
jge
ret
rclb
push
cmpsb
mov
sub
mov
ret
aas
or
or
ret
push
and
push
adc
fs
sbb
cmp
ja
fnstcw
pop
dec
cld
push
adc
cld
js
in
cmpsl
lods
mov
insl
cmp
dec
cs
sti
dec
clc
add
push
push
xor
lar
jmp
cmpsb
jecxz
jne
int3
add
clc
shlb
cs
sub
pop
fs
jecxz
push
sbb
clc
popa
and
sub
mov
dec
rclb
mov
and
pop
inc
add
jge
xor
mov
cmp
js
popf
sarl
not
imul
es
adc
mov
negl
add
pop
mov
lods
sbb
adc
cltd
into
sbb
gs
lods
out
arpl
push
lea
add
test
inc
adc
and
rcll
or
aad
loope
mov
mov
hlt
xchg
inc
in
sub
push
sub
push
dec
jmp
add
inc
or
mov
lahf
mov
jg
test
ja
add
dec
sbbb
loope
adc
je
jno
scas
xor
dec
jne
pop
fs
push
fcomps
cmp
test
add
out
inc
or
push
in
mov
adc
fidivrl
inc
scas
jbe
mov
cwtl
frstor
into
add
mov
mov
clc
add
xchg
negb
push
cmp
or
in
push
call
das
outsl
push
xor
cmp
dec
inc
sub
js
dec
cwtl
jl
mov
leave
cmpsb
mov
adc
xor
xor
lea
xchg
jl
ss
stos
int3
sub
inc
jmp
add
loopne
pop
adc
lret
iret
push
lcall
adc
arpl
es
add
jmp
loopne
fstps
adc
add
test
out
mov
dec
inc
and
orl
fdivs
mov
inc
mov
incb
mov
sbb
xchg
mov
rcll
dec
fwait
out
gs
scas
clc
call
sbb
inc
jle
add
outsb
adc
movsl
aam
jo
scas
in
movsb
fst
jmp
xorl
ret
mov
or
add
subb
xorb
lret
and
adc
ss
xchg
mov
mov
cmp
ret
or
jge,pt
pop
cmp
or
add
pop
aam
orb
mov
inc
push
xor
pop
xchg
adc
jo
push
ljmp
sub
js
mov
mov
dec
push
or
roll
sub
or
daa
mov
dec
or
inc
in
je
jno
mov
xchg
mov
xchg
xchg
aaa
movsb
pop
test
roll
push
sahf
jne
add
push
dec
iret
mov
dec
xchg
inc
scas
push
push
add
xchg
mov
inc
adc
loope
add
loope
dec
sbb
in
xchg
lods
pop
loop
and
mov
les
sbb
mov
adc
jge
movb
lahf
cmc
int3
rcll
or
adc
call
add
mov
or
and
jl
fwait
xor
jno
and
jne
sub
pop
xchg
or
pop
mov
push
or
jne
sub
lods
dec
add
jne
xor
daa
add
outsb
ljmp
cmp
fists
lahf
cmp
ja
lock
mov
lea
inc
je
lret
push
into
add
clc
mov
sbb
add
jo
int
repnz
cld
push
dec
jnp
notb
popa
inc
add
mov
dec
add
stos
pop
ficoml
push
sti
loope
fists
movsb
inc
mov
std
sbb
fdivrl
push
jnp
aad
inc
xor
sarb
sub
mov
mov
ds
pop
mov
fs
adc
repz
mov
mov
jp
lods
adc
add
out
push
fdivl
enter
pop
mov
mov
push
dec
scas
lcall
inc
inc
fbstp
aam
pop
mov
jg
daa
cmp
and
out
sbb
imul
sub
rcll
xchg
movsb
cmp
push
jmp
cmp
sarl
rorb
insl
roll
loope
cmp
pop
sbb
cmp
xchg
flds
sub
and
and
inc
jo
mov
mov
orl
fcoml
sahf
xchg
add
andb
andl
mov
cmp
in
ret
cmp
jne
test
cli
or
pop
sub
sub
add
push
jae
push
add
out
repz
push
je
xor
imul
sbb
dec
insb
jne
mov
cmp
scas
dec
jno
fs
rclb
rolb
mov
inc
mov
pop
sbb
jo
gs
or
je
pop
add
or
jne
lods
adc
adcb
nop
mov
cmp
pop
addl
push
data16
add
and
xchg
cmp
add
xchg
or
jnp
psubd
inc
cmp
cli
push
pop
cwtl
fdivrl
jl
add
sbb
mov
mov
xchg
ffreep
push
push
das
rorb
push
pop
sbb
test
out
in
push
cmc
push
xchg
jno
aaa
mov
pop
xor
rcrl
push
test
jno
lcall
add
fwait
icebp
add
stc
lds
mov
cmp
jne
or
or
pop
mov
loopne
pop
shll
jo
mov
push
mov
iret
mov
insb
pop
dec
dec
or
je
adc
inc
or
lea
xchg
lea
daa
shlb
lods
or
inc
mov
sbb
inc
xchg
insb
fcmovb
inc
sbb
inc
sub
mov
int
mov
mov
pop
pop
add
add
jae
push
add
mov
lcall
xor
mov
lcall
insb
xor
imul
push
add
orl
or
push
or
or
cmpsl
mov
dec
int3
cmp
push
shlb
cwtl
xor
push
mov
cltd
pop
out
pop
xor
add
loopne
nop
in
arpl
out
or
movb
sbb
sbb
cmpsl
xchg
lods
pushl
cwtl
incl
add
fmuls
inc
jl
js
add
nop
je
insb
sbb
pusha
sbb
add
imul
insl
and
cltd
adc
leave
cmp
aam
and
cmp
push
push
mov
out
dec
pop
add
adc
pop
shrl
cld
jo
in
xchg
xor
sub
sub
and
push
adc
jmp
xchg
add
push
adcl
mov
fidivl
mov
push
data16
push
lea
add
xchg
add
cmpsb
cli
adc
cmpb
fcmovnb
add
movswl
cmp
xchg
aam
push
inc
sbb
or
out
mov
es
mov
mov
pop
or
jbe
push
js
jo
jle
mov
xor
push
add
dec
clc
push
lock
mov
cmp
push
inc
dec
and
push
fcoms
insl
inc
sub
lock
shl
ret
mov
sbb
xchg
add
add
aam
ds
ss
and
imul
je
xor
xchg
jne
das
xorl
cld
addl
pop
jne
orl
cld
mov
jne
imul
sub
data16
pop
dec
test
pop
jmp
and
xchg
fidivrs
adc
das
call
push
stc
fldl
sar
dec
jb
sbb
lods
jo
cmp
sub
sub
sub
add
imul
outsb
dec
les
mov
add
mov
stc
push
jne
loopne
mov
mov
sub
mov
clc
dec
jne
cmp
inc
icebp
data16
cmp
cmpsl
lods
xchg
jne
xor
add
fwait
jl
sub
lahf
jo
cld
ja
xor
dec
mov
and
cli
sahf
loopne
lcall
daa
xchg
lock
or
mov
xchg
sbb
enter
adc
sbb
into
dec
aas
clc
lods
push
mov
add
lret
popf
movsl
sbb
mov
mov
or
cli
out
fidivrs
pop
dec
adc
add
sahf
xor
mov
push
sub
or
dec
lret
jle
add
dec
dec
adc
nop
pop
inc
sbb
jno
pop
cmp
xor
rcll
xorl
sti
insl
cmp
xor
jb
add
sub
sub
xchg
test
shll
or
and
push
and
sbb
call
dec
cmp
mov
outsb
dec
jb
sbb
movsb
sbb
lea
xchg
mov
stos
bound
pushl
jo
and
sbb
jno
orb
mov
outsb
or
lock
fwait
inc
data16
mov
cmp
notl
inc
cmpl
or
dec
add
gs
or
pop
and
insb
insb
out
ror
push
icebp
or
or
xor
cmp
pop
pop
icebp
nop
push
xchg
adc
inc
pushf
cmp
cli
je
or
pusha
popf
popf
add
or
enter
push
mov
or
ficomps
cmp
lea
mov
hlt
sti
loopne
outsl
lds
fwait
inc
and
cmp
push
jne
jg
nop
mov
mov
adc
dec
shll
lock
enter
cld
lock
test
ljmp
fistps
adc
sbb
jp
inc
ja
jo
lods
xchg
mov
cli
fistpll
in
push
mov
lret
add
push
and
mov
rsm
mov
lock
sub
xor
cmp
xor
jne
movsl
pop
or
cmc
jecxz
and
pop
pusha
xchg
sbb
push
test
or
or
lret
push
ljmp
push
mov
add
fsubl
test
pop
mov
sbb
cmp
add
insl
mov
jne
adcb
jbe
mov
push
sub
jne
adcl
popa
adc
add
ror
xchg
fidivl
mov
adc
mull
adc
xor
aas
fldl
cmp
jne
outsb
fcompl
xchg
shrb
mov
mov
sbb
stos
or
test
es
cwtl
fidivrs
mov
sub
mov
adc
je
sbb
jle
cmp
out
push
and
dec
push
lea
push
mov
xchg
adc
sbb
sbb
loop
dec
push
or
popf
xchg
or
sbb
xor
jbe
data16
fcoms
jo
mov
rol
add
popa
xor
into
add
push
fs
pop
loop
pop
or
mov
pop
jno
mov
arpl
mov
xchg
mov
cmp
xor
fdiv
or
cmp
add
push
jbe
sub
sub
add
sbb
addb
cltd
sarl
test
cmp
fdivs
lods
sub
divb
add
dec
ret
jge
int3
mov
lods
dec
sbb
add
add
or
pop
rol
inc
pop
jbe
and
push
jmp
adc
or
mov
mov
shrb
mov
pop
out
ss
jmp
jmp
xor
xchg
push
sub
test
mov
mov
add
pushf
sub
push
jo
into
push
adc
xor
xor
and
and
mov
sbb
dec
mov
and
push
sbb
sub
ret
dec
jle
dec
js
lcall
push
mov
dec
mov
cmp
ja
pop
push
adc
fiadds
mov
mov
cmpl
pop
test
lods
out
add
push
fmuls
dec
jno
mov
sbb
pushf
push
and
sarb
push
inc
mov
cmpsb
add
sub
xor
idivb
pop
push
xor
and
fs
mov
out
call
inc
xor
dec
fdivl
arpl
mov
movsl
add
outsb
mov
jl
mov
mov
sbb
and
sbb
sbb
push
adc
sbb
add
jmp
fnstcw
xor
inc
adc
xor
ja
cs
push
or
scas
mov
xor
and
enter
popa
aaa
cmp
and
mov
repnz
ficomps
sub
mov
jne
aas
fisubrl
and
sub
and
sarb
or
divl
dec
and
push
cmpsl
in
adc
adc
cli
mov
jl
repnz
push
andl
sub
push
aam
inc
cltd
sub
fwait
jne
mov
cltd
or
outsb
adc
and
or
mov
push
or
inc
fstpt
adc
fsubl
leave
and
stos
sbb
or
pop
mov
call
popf
inc
jg
shrb
int
sarl
pop
arpl
push
adc
push
jbe
jo
or
js
cmp
sbb
jo
pop
adc
out
insb
test
push
xchg
add
pop
mov
push
add
aaa
jmp
mov
or
pop
push
orps
and
aaa
xchg
movsb
add
arpl
add
popf
cmpsb
dec
jge
cmp
push
imul
pop
jb
sub
in
and
pop
addb
xor
call
pop
mov
push
mov
rcrb
test
dec
sbb
ret
cmpsl
ret
jge
lret
xor
test
push
or
or
adc
jbe
pop
sahf
push
fs
xchg
push
mov
pushf
and
dec
int3
add
mov
minps
pop
pop
inc
add
sbb
popa
mov
push
jnp
xor
xchg
sbb
sub
testl
mov
sub
dec
lcall
cmp
add
sbb
enter
mov
loope
add
fwait
xchg
cmp
insb
mov
setbe
loope
adc
js
mov
push
cli
push
push
push
cmpsl
imul
push
loopne
sub
iret
aaa
add
aad
jp
or
cmp
and
add
test
and
pop
lds
cmp
adc
addb
inc
in
jmp
pop
and
xor
add
and
dec
je
mov
cmpb
fimuls
jbe
jmp
pushl
andb
dec
rcr
call
lea
push
orb
cmp
mov
mov
inc
test
subl
dec
cwtl
xchg
test
jae
test
or
or
mov
push
xchg
and
jge
cs
jl
andl
or
mov
push
sub
js
daa
fs
jb
cltd
addb
les
inc
jae
test
leave
and
jecxz
cmp
test
mov
push
push
int3
lea
add
jo
fisubrl
ret
cmpsl
shr
push
fcoml
jbe
inc
into
mov
cmpsl
sub
ljmp
adc
push
jno
pusha
adc
ret
andl
adc
rcrb
mov
mov
addl
and
add
lret
rcrl
je
push
pop
ja
out
sub
sub
xor
addb
pop
jmp
and
sbb
jno
mov
das
pop
bound
or
or
add
pop
or
outsb
fs
arpl
jne
jns
pop
pop
sub
xor
xor
mov
pop
lock
pusha
mov
das
push
sub
mov
pop
in
mov
sub
add
cmp
add
sbb
cmp
add
clc
inc
mov
sbb
mov
fdivl
cmp
dec
or
dec
jl
loope
xor
push
or
jmp
fistl
jo
add
dec
mov
mov
mov
lods
push
push
leave
adc
loopne
cmc
imul
ja
xchg
dec
testl
inc
add
jb
push
inc
mov
aas
mov
push
add
shrl
inc
push
pop
sub
xchg
add
xchg
into
outsb
movsl
sarl
aaa
add
pusha
and
sbb
inc
jle
rcr
movsl
push
push
pop
loopne
or
mov
jl
mov
incb
pop
add
loopne
jl
test
add
nop
sbb
shr
aaa
icebp
or
or
xchg
or
sub
xchg
mov
mov
mov
shlb
xchg
ret
nop
inc
mov
inc
and
out
xchg
shl
mov
inc
ficompl
or
lret
xchg
daa
mov
xchg
jo
stos
or
mov
lods
mov
add
dec
fwait
inc
fcmovu
add
push
pop
push
push
lcall
or
push
inc
push
cwtl
imul
cltd
idivl
mov
sbbb
jbe
out
sbb
add
add
sub
hlt
mov
add
push
ret
adc
and
push
gs
jb
pop
add
or
sub
je
mov
inc
fxch
pop
mov
jecxz
push
int
pusha
addr16
or
lcall
imul
filds
and
push
mov
adcb
adc
rolb
mov
xchg
fsubs
adc
aad
or
mov
sub
je
daa
js
cld
sbb
rcll
test
push
push
mov
adc
cmp
pop
mov
dec
jp
mov
loopne
test
add
sub
jo
xor
lods
je
xor
push
mov
push
mov
jns
push
test
cmp
popa
jp
sub
push
and
je
insl
sub
push
nop
sbb
mov
rcll
push
xor
or
cmpsl
notl
pop
jae
mov
test
insl
js
or
and
int3
dec
orl
mov
pop
pusha
jmp
cmp
dec
shl
jmp
cmp
xchg
addr16
cmp
incb
loope
pusha
jb
add
ja
adc
sbb
adc
dec
cmp
adc
sbb
cmp
jo
pop
cmp
jmp
cmc
pop
push
call
xor
add
push
add
push
rclb
xchg
adcb
out
or
addb
sbb
data16
and
aas
jmp
and
loope
cmp
lds
add
push
mov
int3
and
adc
push
cld
xchg
movb
mov
scas
jge
movl
jg
inc
insb
shr
inc
add
stc
ficoms
dec
adc
adc
and
call
jge
dec
sbb
mov
pusha
insb
std
mov
sbb
jmp
mov
adc
std
repz
mov
imul
ss
fsubs
stos
or
add
sbb
jne
sub
in
sbb
push
arpl
pop
add
inc
lock
sub
dec
dec
sbbl
dec
and
inc
leave
lret
push
int
fucom
mov
dec
add
xor
or
pop
adc
or
or
les
pop
ret
mov
xchg
mov
mov
mov
addl
pop
sbb
pop
adc
test
jle
adc
or
cltd
pop
out
mov
mov
insb
insb
pop
mov
adc
data16
xchg
or
push
add
pushl
dec
or
jg
inc
xor
inc
out
bound
inc
movsl
xor
je
in
add
adc
sub
adc
jno
sub
cwtl
adc
js
lret
push
loopne
add
jmp
push
jne
jnp
imul
push
pop
mov
add
out
mov
cmp
cld
arpl
or
add
mov
idivb
addr16
xchg
adc
mov
stos
ret
es
pop
sbb
mov
jo
sahf
repz
in
cwtl
sub
fs
dec
xor
mov
hlt
sti
sub
cmp
jl
dec
adc
shrb
pop
cmp
pop
cmp
or
push
mov
xor
jmp
cltd
push
mov
cmpb
dec
cld
fistpll
mov
jp
mov
inc
je
cmpsl
dec
pop
paddusw
fists
in
lea
mov
xchg
stos
pop
add
add
lret
cmpl
and
mov
or
adc
or
add
fwait
cmp
fs
xor
bound
adcl
cld
dec
jl
sar
inc
dec
movsb
push
adc
cmp
jnp
inc
adc
jbe
mov
les
pop
and
adc
cmc
mov
mov
pop
sub
andb
movsl
mov
repnz
pop
push
mov
dec
je
cmp
push
fbstp
dec
es
jbe
repnz
call
xchg
or
xchg
sets
push
fsubrs
ret
pop
pop
xchg
adc
cs
push
add
test
mov
xor
js
jb
add
and
adc
push
les
push
inc
xchg
cltd
add
into
mov
push
out
xor
push
pushf
in
mov
cmc
je
mov
lret
ret
xchg
lock
ret
shll
testl
lock
pop
dec
jle
xor
or
js
neg
ret
xlat
loope
dec
pop
dec
rcrl
jae
mov
cmpsb
add
insb
dec
add
loope
lock
shlb
pusha
stc
or
jae
push
push
rcrb
lret
jle
sbb
sbbl
sub
pop
and
and
mov
xchg
loopne
dec
push
xor
das
insb
es
in
pop
fwait
add
mov
and
shll
dec
int
sbb
sbb
push
cmp
ljmp
loopne
pop
loopne
mov
add
mov
mov
je
add
add
fcoms
jbe
and
sti
inc
clc
push
sub
daa
inc
insl
xorl
push
movsl
mov
in
dec
push
mov
cmp
push
push
repnz
xor
mov
femms
fisubl
rcl
adc
inc
sbb
adc
popl
mov
mov
subb
push
add
lock
jae
jnp
das
loop
rcr
daa
push
in
xchg
loopne
cmp
add
lods
cmp
cmp
lcall
push
or
lea
loop
cmp
and
sbb
movsl
pop
push
fisubs
mov
add
cld
push
or
and
pop
add
shl
dec
loope
adc
xchg
jbe
or
adc
add
pop
cmp
push
and
xor
pop
mov
test
cmpsb
jne
ret
outsl
decl
mov
cmp
ja
je
movsb
rcr
outsb
or
je
or
sub
xchg
call
das
adc
rorl
jns
push
sbb
cmpl
movsb
xchg
aaa
xor
scas
add
sbb
sahf
pop
add
popa
or
andb
mov
clc
push
jmp
cmp
adc
imul
xor
sbb
inc
push
inc
adc
adc
or
mov
or
add
adcl
push
push
dec
lock
xchg
movsb
dec
cmp
call
jmp
aam
inc
push
push
dec
je
stos
inc
mov
cmp
push
sub
lock
sbb
adc
or
push
pop
fcomps
and
pop
repnz
out
scas
pop
popa
mov
adc
cmp
andl
pop
aad
pusha
or
pop
popa
icebp
bound
adc
outsb
xchg
xchg
and
jno
dec
je
sub
jne
sub
or
pop
mov
in
inc
outsb
jp
mov
mov
add
ds
or
ret
push
adc
inc
push
int3
or
or
mov
insb
adc
insb
popf
das
dec
pusha
add
or
or
cmp
jmp
sbb
add
int3
and
push
inc
enter
and
xchg
inc
push
mov
shr
shrl
push
push
or
lret
sub
lods
rcr
inc
mov
lds
sbb
add
addr16
inc
loopne
fsubl
mov
add
xor
out
je
push
push
or
jmp
cmp
xchg
test
mov
jmp
xchg
push
rol
call
loopne
pop
jns
testl
pop
push
cmp
loope
imul
js
daa
push
or
flds
xchg
push
cltd
mov
sub
inc
mov
popa
aam
or
xchg
and
rorb
dec
lahf
jl
mov
cmpl
mov
inc
clc
and
jns
inc
add
add
add
cmp
pop
push
push
mov
pop
push
fs
jb
fsubr
or
and
pop
cmp
mov
add
dec
pusha
loope
jge
mov
mov
cmp
pop
cmp
js
lods
mov
add
sahf
push
mov
fsubrp
push
das
jno
inc
xor
int
fdivrl
pusha
push
ret
pop
cmc
fsubrs
mov
mov
adc
jmp
jbe
push
push
or
inc
shll
mov
fdivrs
xor
aas
xchg
loopne
sbb
mov
fimuls
mov
dec
sbb
adc
sbb
inc
dec
shr
xchg
push
xor
das
addl
inc
js
inc
sbb
mov
xor
sbb
aaa
jne
cmp
sti
test
mov
bound
adc
mov
jmp
cmp
rcrb
or
dec
inc
sub
fidivl
lock
jecxz
ljmp
movsl
or
push
out
adcb
sub
adc
popf
fimuls
insl
mov
pop
adc
jb
data16
jne
mov
dec
jecxz
xor
loopne,pt
xchg
sub
jge
lcall
ds
push
je
hlt
or
xlat
shlb
push
leave
andb
loop
pop
stos
inc
pop
mov
sbb
jno
sbb
push
and
sub
mov
test
outsl
in
bound
or
je
daa
push
arpl
dec
leave
mov
mov
add
in
sub
inc
andb
test
data16
adc
hlt
mov
sbb
mov
aam
add
and
sub
sub
roll
jp
push
loope
inc
aam
dec
and
sbb
or
inc
fst
ss
or
movsl
adcl
pusha
daa
push
test
dec
sub
roll
jecxz
ret
in
xchg
scas
es
outsl
add
cmp
int3
cmpsl
ljmp
cld
inc
jp
add
cwtl
push
gs
jle
pop
push
inc
leave
stc
mov
xchg
je
rcl
add
cmp
mov
add
mov
sahf
in
subb
xchg
push
sub
lds
fcompl
add
call
inc
pop
jae
data16
xor
aaa
bndldx
xchg
in
mov
sbb
add
or
pop
cmpsl
mov
test
mov
add
and
fisubl
sbb
mov
js
clc
or
mov
sarb
push
mov
mov
out
sbb
push
rolb
mov
mov
mov
mov
adc
adcl
inc
xchg
pop
and
pop
addb
fwait
and
adc
notl
scas
int3
out
or
push
and
mov
cmp
scas
sbb
push
mov
adc
jne
cmpsl
inc
in
push
insb
int3
xchg
or
push
inc
xchg
lods
psubd
add
push
or
scas
iret
mov
cmp
add
sub
xor
or
ret
xchg
push
or
in
js
sahf
or
sub
adcl
xchg
fcmovb
xlat
cmp
test
sbb
pop
data16
subb
cmp
jne
xor
adc
in
popf
inc
sbb
std
mov
mov
push
xor
xchg
jmp
sbb
lret
xchg
in
cmp
or
leave
jp
cmp
push
loope
push
js
je
mov
or
xadd
bound
negl
sti
or
jl
sbb
pushf
dec
je
xchg
inc
das
push
cs
xchg
jmp
movsl
sbb
in
adc
outsb
fiaddl
inc
and
dec
adc
and
add
sub
data16
adc
push
imul
and
mov
jnp
cmc
add
sbb
dec
in
xor
jnp
inc
adc
inc
and
dec
and
and
jnp
loope
divb
jno
sub
cld
and
movsb
into
jle
jno
dec
or
pop
ja
mulb
push
dec
pusha
gs
lcall
ret
sbb
xchg
mov
call
test
loop
in
add
mov
push
sub
add
mov
fadds
or
das
test
push
push
mov
pop
dec
sub
adc
sub
sbb
mov
inc
test
jae
inc
add
lods
das
mov
int3
sub
icebp
xchg
xchg
out
pop
movsb
les
icebp
in
addr16
cmp
sbb
repz
lock
add
jp
lock
mov
or
aam
pop
mov
mov
fdiv
jg
or
gs
movsl
ret
testl
lahf
aaa
add
sti
sbb
adc
pop
lret
dec
or
rorl
stc
and
mov
push
repnz
subb
cmp
out
mov
cmpl
sbb
adc
push
adc
pop
or
popf
sbb
js
dec
mov
jo
pop
jns
dec
adc
push
or
dec
test
cli
mov
dec
and
and
cli
xchg
fimull
push
repnz
pop
je
inc
add
stos
je
cmp
sbb
aas
imul
data16
xchg
sub
and
cld
insl
inc
mov
mov
lds
andb
mov
inc
and
arpl
inc
add
or
inc
not
adcl
dec
outsb
sti
aaa
inc
mov
sub
loopne
cmpb
mov
fnsave
push
add
mov
xchg
dec
mov
ja
pop
pushf
cld
inc
adc
and
jo
insb
lahf
movups
push
mov
inc
lea
insb
test
popf
add
and
std
out
jl
push
sub
shl
adc
stos
cltd
pop
enter
das
pop
orl
jo
or
jno
lock
andl
rorb
fwait
adc
mov
out
orl
or
insb
sub
test
sbb
sbb
fld
jge
push
dec
xor
pusha
add
fxch
sbb
jmp
add
and
into
mov
jmp
mov
sar
sub
ja
add
outsb
xchg
cwtl
lods
inc
pop
aaa
or
push
jo
insb
add
jle
adc
and
xor
movsb
sbb
sbb
test
enter
or
cmp
enter
jg
fsubrl
lds
push
jg
jne
fs
enter
xchg
jg
int
insb
inc
jne
mov
ja
add
lret
sub
fs
fs
in
insl
push
dec
addl
ss
mov
push
cmp
xchg
mov
jle
stc
xor
in
push
daa
jae
sti
je
pushf
out
negl
push
adc
dec
push
xchg
cltd
test
ret
dec
sub
jne
push
adc
push
pop
stos
test
daa
cmp
jmp
and
and
hlt
add
mov
js
pop
and
xchg
or
jb
mov
sbb
and
adc
cs
push
pop
pop
push
add
sub
add
pop
pusha
test
mov
iret
in
mov
movsl
push
sbb
pop
mov
xchg
mov
jnp
pop
sbb
xchg
cmp
scas
fistpll
loope
inc
jl
outsb
rclb
mov
inc
sbb
cmp
push
dec
fdivrl
jle
sahf
jae
push
adcb
push
push
inc
dec
je
cltd
fdivl
inc
in
data16
sbb
add
or
push
push
xchg
push
ljmp
out
or
pop
in
mov
sbbl
add
xor
shl
sbb
mov
ja
push
cmp
cmp
pusha
add
rol
xor
inc
cmp
shrl
push
mov
fidivs
mov
jne
rdtsc
imul
push
nop
cmc
pop
imul
xchg
cmp
adc
and
pop
sbb
popf
add
sub
adc
jg
jne
mov
mov
int3
enter
les
xchg
cmp
cmpb
pop
pop
inc
xlat
ret
mov
sti
lret
push
pop
mov
loopne
and
and
add
add
add
add
inc
imul
shlb
xchg
mov
push
scas
mov
clc
call
shll
mov
mov
jne
pop
gs
sbb
mov
rcl
mov
insb
adc
mov
pop
jmp
loopne
or
pushf
ja
add
mov
je
fmuls
xchg
add
test
mov
push
cmp
add
cmpsb
jbe
dec
mov
xor
pop
and
jge
add
xchg
dec
or
ffree
pop
push
add
jne
sbb
push
pop
adc
add
je
or
rcrb
scas
adc
xchg
pop
mov
add
lea
or
push
xlat
push
push
mov
or
add
mov
pusha
or
xchg
and
mov
inc
lahf
ja
cli
insl
or
call
jg
js
dec
sub
push
and
or
xor
sbb
fdivrl
out
into
in
or
sub
adc
cmp
idivb
lods
test
out
push
mov
les
ja
xchg
adc
mov
sub
out
inc
push
jmp
adc
push
xchg
or
xchg
mov
pop
faddl
add
ret
mov
adc
and
adc
jo
call
dec
push
push
mov
jb
and
mov
push
xlat
fcoml
xchg
or
sbb
cmovno
daa
mov
lds
and
cmp
test
xchg
aad
ja
jg
mov
pusha
lods
cs
mov
arpl
or
pop
push
inc
gs
dec
cmpsb
adc
jb
adc
lods
leave
push
push
lret
sahf
repnz
push
dec
lock
mov
push
xor
inc
mov
jecxz
mov
test
push
notl
jl
cli
add
rorl
xlat
dec
xor
leave
push
xor
in
ret
push
and
inc
jmp
shll
push
mov
jno
mov
mov
add
les
mov
orb
xchg
pop
sub
sar
add
pop
repnz
nop
mov
push
nop
loopne
and
or
lcall
aaa
add
jne
test
push
call
sbb
push
lea
add
shll
cmp
push
cmp
push
or
xchg
pop
add
lods
pop
and
add
sbb
mov
test
test
xchg
or
sub
jo
fs
lea
xor
or
cmpsl
leave
cmpb
scas
stos
xchg
adc
mov
add
pop
fildl
sbb
adc
push
lock
adc
cmp
rclb
aas
ja
push
jg
sbb
inc
int3
mov
data16
inc
add
inc
int
push
les
or
xor
add
incl
mov
jne
andl
nop
inc
and
test
mov
push
adc
jnp
jp
adc
jne
push
or
stc
aam
or
sbb
jae
cmp
jbe
jb
pop
mov
xor
sbb
das
fs
xchg
insb
sbb
push
andl
cmp
mov
mov
add
sbb
jbe
push
sbb
pop
fwait
sub
sbb
icebp
push
or
ret
iret
add
pop
ret
inc
push
lds
les
jb
aas
jo
int3
mov
rclb
and
rclb
popf
add
cwtl
push
adc
add
enter
test
shll
repnz
and
dec
leave
mov
pop
lcall
push
xchg
push
adc
push
push
xchg
shrb
or
cmp
jae
or
cmp
adc
mov
cmp
add
mov
push
punpckldq
aam
leave
shrb
inc
or
jnp
mov
arpl
xchg
push
dec
stos
movsl
movsb
or
sbb
inc
add
cmpleps
aad
movsb
and
sub
inc
rorb
dec
add
test
shll
scas
add
jle
adc
rcrb
jecxz
dec
rcll
imul
pop
adc
push
mov
rolb
xor
stc
pop
jo
je
sub
fsub
sub
push
jo
push
add
add
xchg
xor
in
popa
adc
sbb
sub
adc
add
cmp
pusha
and
mov
push
inc
cmp
mov
les
test
ret
mov
mov
jns
and
xchg
cmp
adc
and
or
add
mov
sub
loopne
cld
push
pushl
and
and
jp
out
pop
sub
aad
cmp
hlt
jno
push
clc
test
cmp
jl
pop
and
mov
call
jp
icebp
aam
add
xchg
mov
add
or
push
xchg
adc
mov
dec
rorl
push
add
sbb
pop
lods
adc
fcmove
ret
or
pop
xchg
test
clc
and
pop
sbb
lea
pop
inc
js
cmp
shlb
sub
or
mov
push
test
and
sbb
pop
or
popf
mov
stos
jl
push
clc
shll
imul
xchg
ljmp
cld
cld
adc
call
clc
pop
jbe
insb
loopne
jg
in
inc
pop
add
sti
inc
and
fisttpl
jbe
sub
lea
sarl
loopne
mov
fwait
leave
ljmp
or
popf
outsl
jne
cltd
mov
je
icebp
adc
jbe
das
shll
xchg
cmc
leave
nop
sbb
sub
inc
repnz
jp
or
loope
pop
inc
sbbl
sbb
or
inc
xor
mov
xchg
xor
inc
push
inc
imul
push
inc
sti
jl
test
jg
cmp
add
mov
mov
xor
cltd
pop
mov
fwait
js
and
clc
push
and
in
jno
jecxz
jle
dec
add
jmp
or
movsb
shlb
push
imul
mov
jg
mov
mov
in
xor
push
cmpsb
jle
jb
mov
sbb
add
daa
adcl
mov
movsl
sub
xor
xchg
xchg
xchg
test
aam
lock
in
or
dec
xchg
mov
push
pushw
lret
lock
jecxz
or
mov
insl
xchg
movl
mov
cmc
or
inc
add
subl
imul
sub
mov
jns
add
xchg
jno
jne
out
adc
xor
push
bound
adc
subb
pop
add
movsl
icebp
and
push
mov
in
movsl
pop
pop
xchg
andb
sub
stos
add
movl
mov
and
jmp
sub
push
addl
xor
jp
jmp
ss
adc
popf
cmpb
or
insl
vdivss
loope
sbb
push
clc
test
popf
stc
test
and
popa
or
add
sub
adc
sbbl
pop
test
arpl
outsb
out
adc
lea
push
shlb
lods
inc
push
push
scas
push
ret
and
cli
add
jl
cmp
mov
push
jo
cli
daa
mov
xchg
fnsave
sbb
mov
fiadds
idivb
dec
sub
dec
jmp
adcb
sbb
in
mov
xor
xchg
xor
jge
mov
xor
cmp
xchg
and
push
push
pop
lea
lods
push
mov
rep
pop
adc
pop
or
mov
dec
sub
jmp
sub
jae
sub
shlb
add
mull
into
jae
sbb
andl
mov
and
jne
push
push
xchg
scas
mov
push
mov
cmpsb
xlat
push
hlt
push
sar
and
push
mov
mov
adc
xorl
rcrl
sub
mov
or
cmp
mov
xor
roll
jnp
push
inc
mov
adc
add
stos
mov
sbb
sub
and
jno
and
lock
adc
hlt
mov
mov
dec
pop
sbb
rolb
push
iret
test
fildll
inc
ret
or
das
pop
jae
sbb
mov
push
push
push
xor
adc
add
out
dec
pusha
int3
cmp
and
adcl
add
push
lret
dec
data16
lock
push
xor
or
dec
push
xchg
mov
je
push
sub
mov
test
xchg
test
adc
jno
decl
vorps
push
push
dec
sahf
shlb
xchg
push
in
xor
mov
mov
xlat
mov
adc
inc
les
fidivrl
add
loopne
add
mov
rolb
stos
cmp
sbb
sbb
pop
lock
and
sarb
dec
jne
lcall
mov
lea
mov
adc
push
loope
mov
adc
inc
loopne
and
and
push
gs
adc
outsb
push
ss
sbb
call
inc
push
test
adc
dec
nop
cmpsl
sub
xor
mov
dec
mov
add
adc
or
push
ror
and
inc
push
in
test
fistpl
icebp
or
ret
call
testb
and
or
add
push
dec
mov
cmpsl
push
and
movsl
jo
cmpsl
push
daa
addb
rcll
ret
push
or
cmp
fnstcw
inc
cmp
cmpb
lcall
jbe
add
dec
jl
lea
test
inc
mov
pop
hlt
sub
sar
xchg
inc
out
loope
repnz
add
rcrb
push
adc
add
cmp
dec
test
and
movsl
push
mov
sub
jecxz
dec
push
dec
xchg
es
imul
movb
xchg
adc
mov
loope
dec
imul
ret
sub
add
sahf
ja
lret
loopne
out
sub
xchg
and
mov
mov
ficomps
xchg
popf
sahf
or
xchg
int3
shrl
mov
jg
mov
cs
cmp
ret
adc
jecxz
and
rolb
add
ret
hlt
add
jl
les
adcb
ret
notb
je
cmpsb
sbb
jne
std
mov
add
xchg
lcall
push
mov
mov
jle
xor
jbe
adcb
test
or
pushf
sbb
js
test
jae
fwait
orb
add
push
cmp
add
xchg
xchg
xchg
adc
pop
mov
mov
aaa
aaa
test
inc
jmp
dec
ss
lock
in
push
mov
stc
jne
sub
mov
incb
pop
pusha
shr
data16
cmp
out
dec
shll
jb
jae
ror
mov
loopne
push
xchg
jmp
mov
mov
dec
hlt
jae
mov
dec
and
jg
push
rcl
xchg
add
in
adc
addl
xchg
jnp
push
dec
inc
sub
dec
inc
inc
inc
jl
jl
fists
inc
sub
jne
pop
jb
adc
adc
jp
jno
sub
dec
pop
mov
and
pop
inc
dec
xchg
cmpsb
cmp
pop
lods
add
xchg
jbe
jo
xchg
pop
dec
sti
inc
pop
xchg
xchg
cltd
mov
sub
mov
add
mov
lret
ret
adc
xchg
or
cmp
xchg
or
and
xchg
sbb
xchg
add
subl
jmp
mov
cmp
or
cmp
dec
cmp
nop
out
sarb
or
and
enter
and
or
mov
mov
and
adc
or
inc
add
sub
in
sbb
sahf
ja
sbb
mov
ja
cmp
jl
scas
pop
adc
arpl
and
adc
xor
add
xchg
loope
mov
push
fmull
test
mov
add
mov
stos
clc
cmpsl
jne
inc
xor
pop
cmp
adc
clc
cmp
sub
arpl
or
pop
dec
shlb
and
sbb
and
or
inc
adc
mov
xor
shr
push
dec
xchg
and
sbb
push
xor
lahf
and
sbbb
fadds
clc
sbb
jb
sbb
push
mov
sub
cmp
pop
cmp
cmp
test
inc
push
fsubrl
xchg
test
out
and
das
test
mov
cmpsb
lods
cmp
pop
pop
mov
xor
inc
sub
and
push
xor
or
xor
mov
mov
movsl
xor
lea
and
test
cmp
sbb
or
pusha
adc
pop
add
or
jl
mov
sbb
adc
int3
dec
outsl
sbb
xchg
sub
ds
pop
test
inc
push
push
mov
mov
mov
fs
xchg
xor
adc
mov
cmpsl
test
cli
jne
in
pop
push
or
mov
mov
in
mov
sbbl
movsl
ja
push
out
pop
push
dec
sub
xchg
aam
arpl
lock
cmp
pop
mov
insl
mov
int
mov
in
loop
aas
in
rol
fimuls
enter
repz
adc
xor
loopne
in
cmp
push
mov
pop
push
push
mov
xchg
sbbb
jo
pop
add
icebp
jae
inc
and
hlt
mov
pop
mov
add
hlt
push
mov
dec
loope
nop
or
mov
inc
mov
push
pop
xor
xchg
and
mov
sbb
xor
pop
in
insb
cs
push
add
fcmovu
pushf
dec
pop
lock
push
xor
add
adc
js
scas
inc
call
cmp
cmp
jbe
jno
addr16
cmp
xchg
lea
xor
lock
bndldx
push
jno
rcrb
loope
inc
pop
pushf
cltd
pop
or
adc
xchg
sub
arpl
or
cmp
jo
mov
xor
or
lahf
inc
lcall
cmp
add
or
aas
lcall
or
mov
sbbb
bound
popf
in
mov
insb
sbb
ja
cmp
sbb
jl
xor
mov
dec
sub
pop
jb
pop
jns
xchg
mov
push
loopne
pushl
sbb
ja
xor
cmp
insb
test
or
jmp
mov
pop
sbb
rclb
enter
lahf
andb
outsb
sub
pop
adc
inc
or
repz
pop
xorl
test
add
pop
sbb
imul
aas
aam
pop
xchg
fmul
add
sub
subb
in
mov
sub
das
add
insb
mov
add
pop
lock
je
mov
lock
dec
sbb
xchg
jl
andb
or
es
das
xor
sub
int
add
nop
mov
or
push
shl
xchg
outsb
sub
pop
or
xchg
push
pop
sbb
mov
popa
xor
pusha
nop
aam
popf
add
or
cmp
movsb
iret
nop
cmc
call
js
dec
and
jno
mov
inc
lcall
jl
call
add
shll
mov
pop
in
push
mov
push
jae
sbb
mov
cmp
add
ffree
mov
push
lahf
lret
out
mov
or
fadds
or
or
inc
xchg
sbb
ret
ja
sub
push
mov
fdivr
aam
add
pop
adc
fcomps
movsl
jbe
fs
dec
add
stc
fucomi
jl
mov
push
sub
and
push
add
push
ljmp
mov
inc
jb
or
sti
sbb
jl
mov
adc
adc
ficoms
jg
dec
dec
adc
adc
lock
lahf
mov
xor
push
inc
xchg
mov
out
mov
inc
add
sbb
into
cmp
adc
gs
push
aam
js
ja
cmpsb
mov
cmp
call
test
push
ret
int
rcrb
mov
rcrb
add
loope
scas
shlb
pop
js
lock
test
rorb
in
xchg
lahf
pop
daa
and
and
ret
add
xchg
std
js
in
pop
push
push
or
adc
or
fstpl
adc
cmpsl
orl
rolb
ds
inc
or
dec
gs
je
pusha
and
cwtl
add
jb
push
and
pop
push
cltd
addb
push
es
into
xor
dec
call
dec
jb
popa
push
ss
inc
fs
fldcw
and
shl
push
push
lds
fwait
mov
xor
loope
es
push
mov
lods
and
dec
stos
aam
add
adc
lcall
and
push
fldenv
sahf
push
test
xchg
mov
pushl
jo
mov
xor
fs
or
push
in
mov
or
insl
jp
fs
addl
shll
inc
push
shll
xor
movsb
pop
dec
xchg
dec
ret
jmp
stc
xor
cmp
repnz
movsl
aam
test
lcall
shlb
mov
xchg
test
push
push
lea
push
mov
inc
ret
sbb
pop
ja
mov
test
gs
push
sbb
stos
jb
cltd
add
popa
int3
sub
daa
test
mov
lock
repnz
aam
es
test
sub
dec
jb
dec
stos
aam
add
orb
enter
and
push
out
arpl
out
push
arpl
loope
add
push
cmpsb
aam
mov
and
jbe
call
sti
pop
enter
mov
mov
dec
faddl
test
add
fisttpl
ja
xchg
call
dec
loopne
cmp
jbe
jne
xchg
pop
jbe
pop
push
pop
mov
outsl
mov
pop
add
inc
mov
xor
outsl
inc
push
add
rorl
pop
mov
xchg
movb
xor
jp
das
and
movsb
adc
mov
push
cmpsl
add
xchg
jmp
add
addr16
mov
sub
das
or
enter
xor
inc
cmp
push
xchg
or
or
lahf
pop
xor
adc
lds
fbld
les
int3
popf
push
test
push
push
test
or
xchg
rorb
push
sbb
adc
dec
in
cmpsb
mov
or
mov
sbb
mov
sbb
js
cld
scas
loopne
dec
lods
jnp
adc
fs
pushf
test
mov
test
les
repz
pop
test
adc
jnp
dec
xlat
cmpsb
mov
or
ss
add
and
sarb
push
or
xchg
adc
push
or
push
cmpb
movsl
add
inc
or
test
cmp
jp
cltd
add
pop
enter
push
pop
test
lock
cltd
inc
add
and
inc
fwait
mov
cmp
push
fs
cmc
enter
lock
dec
mov
add
or
out
push
lock
push
add
dec
pop
inc
shll
insl
pushf
sbb
xlat
sbb
mov
mov
adc
enter
fistl
pop
pop
cmpl
stos
mov
nop
mov
add
rolb
hlt
dec
or
in
pop
fwait
dec
or
adc
movsb
shlb
int3
scas
incb
pop
xor
xchg
fwait
ljmp
push
push
inc
mov
push
sub
les
sarb
jno
xchg
stos
mov
adc
xchg
push
push
fsubrs
lea
cmp
mov
jo
rcrb
in
jo
mov
ljmp
push
aaa
fimuls
sbb
xchg
movsb
fsubr
adc
mov
lock
ss
adc
push
adc
pop
rolb
popa
addr16
push
push
xor
inc
pop
fldl
hlt
inc
or
push
push
sahf
push
or
lods
leave
xchg
mov
jnp
shlb
xor
shr
or
cmp
pop
add
add
cltd
add
inc
insb
adc
fiadds
or
pop
sub
mov
sub
mov
jle
das
jmp
sbb
popa
sti
cmp
sbb
jge
les
hlt
pop
sub
inc
push
mov
mov
jno
pop
xchg
cwtl
pushf
test
mov
test
pusha
cld
in
lods
push
lds
mov
pop
mov
mov
adc
fmul
shlb
pusha
js
mov
mov
enter
loope
cld
xor
mov
inc
nop
cmpsl
xlat
mov
jbe
jp
movsb
rcrb
mov
int
dec
cmp
test
inc
and
movsb
lods
jmp
imul
lcall
mov
and
ds
movsb
sahf
mov
mov
dec
xor
rolb
jle
aaa
adc
cmp
or
add
push
mov
or
mov
sbb
jl
sub
mov
xchg
pusha
push
movsl
mov
ljmp
scas
outsl
push
push
ss
push
pop
mov
jg
adc
mov
dec
add
movsb
adc
sbb
mov
pushf
flds
cmp
and
mov
mov
sti
pop
xchg
or
sbb
inc
std
fnstsw
mov
hlt
mov
adc
push
adc
outsl
adc
sbb
mov
xchg
jo
xchg
adc
and
sahf
mov
dec
in
cmp
cmpsb
out
jmp
cld
test
mov
cmp
pop
pop
sbb
mov
lock
mov
inc
xorl
lods
popa
sbb
stos
pusha
add
insl
int
mov
cmpl
push
ds
adcb
outsl
xlat
push
push
xor
repz
mov
pop
cmp
pop
mov
je
js
mov
mov
xchg
or
addr16
push
movsl
sub
loopne
or
inc
mov
pop
jle
or
scas
mov
loop
jb
andl
jl
icebp
push
sbb
ds
sbb
xlat
lods
cmp
add
or
cmp
cmc
mov
sub
clc
sarb
repnz
push
sbb
sub
inc
adc
push
insb
mov
lret
push
cmpsb
jp
inc
xchg
jne
ljmp
mov
imul
dec
out
mov
test
daa
call
mov
dec
pusha
adc
test
jg
sub
sbb
mov
gs
mov
inc
inc
ror
and
push
jl
outsb
cwtl
xchg
insb
vandnpd
dec
cmp
imul
add
mov
lock
sbb
pop
pushf
cmpsb
xchg
cmpb
xor
sub
dec
inc
in
repz
loopne
lea
xor
xchg
push
add
stos
fs
fsubr
and
sub
mov
push
cmpsb
jne
xchg
inc
mov
push
les
and
adc
inc
adc
and
pushf
sti
adc
ja
into
stos
push
push
popa
jp
sbb
jle
push
pop
xor
pop
hlt
add
sub
lock
cmp
aam
mov
push
shlb
push
xchg
cmp
cmpb
movsb
push
adc
mov
adc
push
pcmpeqw
cmpl
sub
mov
insl
or
mov
adc
jae
sbb
jbe
push
xor
sti
lea
sbb
movsb
sbb
cmpsl
and
cmpsb
or
and
aam
inc
lea
push
lahf
mov
in
dec
pop
ret
bound
jmp
pop
pop
sub
daa
jmp
push
lahf
call
dec
and
mov
imul
fcos
rcll
js
lret
push
ret
pop
sub
push
in
fwait
or
lea
and
inc
movhps
fdiv
cmpb
fsubrs
or
popa
push
mov
sti
cmp
sub
xor
and
xchg
js
pusha
loop
fdivl
inc
lods
adc
push
arpl
call
test
jg
cwtl
sub
add
or
cwtl
not
add
add
pop
push
fsubrl
inc
je
mov
adc
loopne
mov
mov
dec
add
in
fwait
mov
add
xor
mov
mov
or
push
push
sub
das
loopne
lock
popf
sbb
adc
mov
fdivs
repnz
dec
mov
push
mov
jns
fists
adc
mov
sbb
lds
mov
and
mov
popf
sub
loop
rcll
mov
xor
jge
ss
mov
inc
imul
subl
dec
cmp
outsb
adc
stc
xor
js
dec
mov
arpl
pop
sbb
cmpsb
or
push
xchg
cmp
jg
push
or
hlt
mov
add
inc
lods
lods
lock
push
and
sub
clc
cmp
pop
std
xorl
outsb
jp
je
jp
cmp
je
data16
mov
jmp
fmull
mov
ja
inc
ret
jg
push
add
outsb
adc
lret
jbe
or
insl
outsb
add
push
jge
push
shrb
sbb
xchg
push
out
lock
jp
outsb
in
add
and
pop
fstpl
sbb
and
dec
xchg
inc
cmp
mov
adc
jmp
or
jge
cmpsb
dec
xchg
fdivrl
cmp
fsubs
sbb
sbb
in
inc
mov
inc
inc
jmp
inc
jo
je
in
add
addr16
and
adc
lock
fcmove
adc
sahf
add
add
movsl
push
or
les
sub
mov
adc
sbb
repz
lret
jmp
pop
cmpsb
inc
sbb
cwtl
adc
call
mov
fwait
lret
roll
adc
adc
add
in
mov
sub
shr
adc
sub
sbb
or
incb
pop
mov
inc
rcrb
pushf
mov
fcoml
scas
add
dec
and
pop
xlat
out
and
incb
push
sbb
cmp
mov
xchg
les
mov
sub
cmp
push
jns
fmuls
jl
pop
or
cmpb
inc
movsb
xor
orl
mov
stos
add
lret
in
jns
cmp
cmpb
adc
push
mov
loope
clc
in
and
testb
push
fisubl
inc
sbb
repz
cmp
and
adc
mov
xor
cmp
xchg
push
jle
in
or
popa
sbb
or
mov
xchg
lret
or
jmp
shlb
dec
push
adc
xor
push
divl
and
xor
jo
xchg
sbb
push
into
scas
rclb
je
dec
add
std
mov
cmp
add
sbb
cltd
xchg
ds
in
adc
cmp
lea
mov
test
add
out
pop
jno
test
mov
negl
xor
lcall
and
pop
adc
sub
outsl
push
subb
sbb
adc
cmpsb
shl
push
cmc
flds
jno
dec
xorl
inc
iret
pusha
and
test
and
cwtl
scas
loope
add
add
jle
inc
xchg
insb
mov
ret
jg
mov
std
hlt
mov
cmp
push
roll
push
adc
add
jo
fwait
in
and
enter
xchg
add
add
xchg
stos
inc
scas
and
add
push
cmpsl
inc
aas
mov
test
and
inc
test
add
or
inc
insb
popa
jl
dec
lds
into
dec
cmc
and
test
stos
dec
outsb
and
rclb
imul
je
mov
insb
call
pop
xlat
ss
jno
inc
inc
adc
je
das
sbb
cmp
sbb
pop
cmp
fstpl
sub
push
or
sub
xor
std
and
inc
push
stos
push
add
cmp
jo
test
push
pop
test
inc
sbb
mov
dec
pop
add
inc
dec
cmp
mov
xchg
mov
out
push
xor
push
call
push
in
cmp
imul
loope
push
lea
dec
mov
add
or
xchg
xor
jle
add
int3
inc
cmc
mov
call
pop
inc
or
sbb
dec
notl
daa
mov
testl
mov
jl
sub
das
adc
outsb
movsl
add
ret
pop
cli
mov
mov
xor
loop
add
shr
scas
add
js
xchg
fcom
sbb
adc
testl
clc
fcomi
out
mov
ret
shr
cmp
jbe
add
jmp
add
jae
xor
pop
rolb
ret
and
dec
loop
inc
dec
addl
mov
mov
or
mov
lds
dec
adc
inc
sub
aam
lcall
dec
mov
jnp
punpckhbw
sub
jo
scas
sub
xor
mov
sub
mov
outsb
mov
mov
mull
mov
add
xchg
test
and
inc
daa
mov
scas
inc
and
inc
imul
mov
aaa
fwait
ret
aas
cmp
or
ja
rcrb
mov
jl
dec
fsubrs
shlb
enter
sub
add
or
xor
or
jmp
mov
fdiv
xor
popf
push
or
pop
arpl
xor
jb
push
nop
mov
xor
pop
inc
lret
out
mov
aad
loopne
push
xchg
add
outsb
sub
sarb
mov
fisubs
xor
adc
jns
or
shrb
andl
lds
xchg
scas
cmpb
inc
insl
pop
in
inc
sbb
ficompl
xor
adc
mov
and
mov
insb
ret
mov
mov
shrb
push
inc
adc
inc
call
inc
inc
scas
xchg
push
or
push
sbb
nop
xchg
cmp
les
repnz
in
add
cmp
pop
mov
popl
mov
lahf
call
repz
or
enter
xor
sub
inc
imul
rol
mov
lock
sub
push
push
add
iret
xchg
cmpb
xor
or
xchg
pop
or
jmp
insl
add
adc
dec
jne
push
inc
add
sbb
add
push
inc
mov
aam
mov
or
jecxz
movsb
scas
jns
dec
pop
cs
ss
test
sbb
in
push
icebp
dec
sub
xor
sbb
push
ucomiss
push
or
mov
mov
shlb
and
adc
adc
fwait
adc
shl
adc
mov
lods
mov
xor
ss
stos
mov
adc
and
test
enter
repz
pop
loop
jns
fcoms
mov
flds
push
jnp
in
push
mov
pop
adc
xchg
ds
and
pushf
mov
and
insb
pop
push
lock
lods
adc
les
pushl
push
xchg
iret
xchg
add
mov
mov
fistpll
fadds
or
or
mov
adc
fsubrs
aam
push
mov
xchg
ret
icebp
xor
jmp
aaa
pop
and
dec
xchg
scas
jb
roll
enter
xor
xchg
jne
mov
ja
jl
lds
movsl
and
jl
add
mov
fisttps
sub
and
sub
xor
sub
clc
hlt
xor
push
pop
push
mov
adc
stos
testl
pop
insb
mov
adc
es
popa
lret
or
fstl
push
xor
loop
or
pusha
cmp
je
push
addr16
sub
inc
push
dec
das
mov
or
adc
int3
inc
ret
pop
inc
or
sbb
movsl
fabs
or
push
mov
mov
in
or
add
xchg
dec
xor
aaa
and
jns
pop
xchg
jecxz
scas
or
mov
loopne
cmc
andl
lea
stos
mov
mov
push
sti
push
add
or
jg
ljmp
int
push
mov
cmp
jne,pn
inc
and
ljmp
sub
ret
lret
push
add
and
jmp
jge
and
rolb
and
orb
xchg
sub
mov
pushf
xor
cmp
mov
sarl
rcrl
testl
mov
dec
lock
inc
push
loopne
jo
mov
inc
and
mov
xchg
inc
xor
sub
add
xchg
leave
or
jo
cmp
add
cli
push
sub
repnz
jp
sbb
xor
rorl
loopne
add
mov
jo
loop
sbb
inc
movsl
pop
mov
xor
pusha
fs
xchg
test
arpl
push
lcall
sbb
stos
push
dec
inc
imul
ret
imul
jae
or
jecxz
cmp
loopne,pn
mov
mov
xchg
pop
cmp
imul
sbb
and
mov
in
mov
clc
mov
push
cmpb
jmp
mov
scas
nop
xchg
push
cmp
push
into
pushf
leave
les
sub
jbe
push
adc
adc
es
loop
stos
jne
xchg
pop
or
sub
lea
add
add
xor
pop
je
inc
outsl
out
loopne
add
mov
cmp
pop
cmpps
out
xchg
lahf
mov
les
lret
inc
repz
mov
movsb
xchg
testl
loopne
inc
fstpt
cmp
jl
or
cwtl
shll
rep
mov
dec
push
addb
adc
les
pop
or
aam
inc
mov
lret
inc
mov
enter
sti
push
jl
push
xchg
mov
sbb
arpl
jl
pop
jnp
adc
aaa
loopne
inc
dec
adc
pusha
rcll
cmpl
hlt
jle
push
pop
sub
push
insl
lahf
aaa
push
jne
in
loope
xor
push
dec
jbe
popa
xlat
cmp
push
mov
sti
sbb
jmp
ljmp
pop
jb
popa
pop
cmp
add
leave
lret
and
sbb
and
aaa
xor
xchg
dec
pop
jmp
push
fmull
dec
adc
sbb
sub
loope
les
mov
dec
dec
cmp
inc
js
dec
test
xor
in
insl
mov
mov
pop
mov
cltd
repnz
lret
push
cmp
hlt
xor
and
add
mov
shll
mov
sbb
arpl
inc
or
nop
inc
mov
add
and
and
pop
mov
push
stos
dec
lea
add
test
dec
popa
or
add
repnz
adc
incl
or
mov
fs
mov
or
adc
test
mov
enter
in
stc
mov
xor
sti
aam
push
dec
nop
incb
in
movsb
pushf
lods
mov
int3
mov
repnz
in
cld
rclb
sub
inc
xor
fmull
xorb
mov
je
loope
mov
mov
jl
mov
popa
stos
xchg
outsb
mov
cs
mov
pop
mov
add
lcall
mov
dec
aad
into
sbb
mov
xor
aaa
rcll
mov
roll
add
xor
mov
sbb
mov
dec
into
push
mov
xchg
jl
xchg
dec
enter
in
jl
popf
add
fs
js
adc
adc
movsb
and
xchg
psubq
add
lahf
mov
mov
push
call
push
jae
fwait
xor
sbb
stos
jo
test
inc
inc
push
jge
mov
add
lcall
cmp
je
sbb
and
inc
cld
lahf
cmp
jne
push
mov
aad
lock
outsb
dec
pushl
scas
loopne
fsubr
sub
push
jns
out
xor
outsl
into
inc
lods
mov
push
and
loopne
add
jmp
xor
push
or
movsl
sbb
nop
sub
add
or
fistl
jl
jno
sarl
aaa
shll
sbb
add
push
xchg
fwait
cs
mov
or
xor
adc
xchg
xor
std
push
mov
hlt
loopne
xor
or
sub
and
mov
mov
push
push
adc
mov
lret
addb
dec
inc
shlb
jne
and
es
fadds
in
sub
sbb
push
sbb
clc
loopne
and
jge
jbe
imul
js
mov
mov
test
decb
imul
or
gs
dec
inc
in
push
push
cmc
test
outsl
xlat
mov
rolb
fsubrl
daa
xor
push
test
jmp
or
rclb
in
fstpt
pop
icebp
mov
and
add
push
in
pop
rcr
mov
push
pop
sub
or
lods
je
mov
pop
and
sub
out
lds
push
jno
mov
and
push
pop
mov
jno
divw
mov
iret
xlat
call
vunpckhps
or
mov
xlat
inc
shll
xchg
xchg
sbb
gs
add
sub
push
scas
mov
stos
lock
mov
scas
cmp
in
fildll
adc
xchg
jmp
pop
xor
jno
ds
mov
ja
sbb
cli
je
cltd
pop
add
sbb
lret
data16
stos
pop
add
cmpsl
mov
in
add
leave
xor
sub
les
add
and
xor
mov
pop
loop
xchg
leave
jne
mov
adc
cmc
ljmp
rolb
ss
adc
mov
push
push
adc
or
cmpsb
mov
or
push
lcall
xchg
adc
call
dec
mov
xchg
push
push
pop
or
jo
sub
repz
jo
outsl
mov
pop
cmp
pop
std
sbb
mov
jne
mov
jmp
fldl
xchg
cli
insb
adc
aam
xlat
or
mov
jl
inc
packssdw
icebp
lock
pop
xor
mov
jecxz
sbb
fnstsw
dec
rcrb
movsl
push
push
movsl
jge
sarb
inc
hlt
fstl
dec
fcomp
fnstsw
call
and
inc
clc
pop
fsubr
pop
faddp
andl
enter
sbb
sub
test
fdivrl
cs
dec
aam
mov
mov
and
mov
xchg
lods
add
push
into
sbb
or
andb
xor
add
add
lods
or
and
hlt
jge
xor
out
fdivrs
add
scas
stos
dec
fstpl
inc
add
jmp
mov
leave
lea
push
or
adc
adc
pop
dec
xchg
add
into
push
xchg
and
pop
scas
pop
movsl
bndldx
mov
xchg
push
sub
cwtl
out
stos
ss
mov
stos
cmp
mov
int3
dec
jecxz
rorb
jae
push
add
add
fnsave
pop
in
sub
mov
push
inc
inc
inc
cmp
ud0
ret
jmp
mov
cmp
jge
add
or
xchg
mov
dec
leave
mov
and
jmp
roll
sub
in
jmp
or
inc
fldenv
add
adc
rorb
pushf
push
lods
push
pop
test
xor
sub
jg
jne
pop
push
sub
jne
push
push
adc
or
imul
xchg
mov
ret
or
imul
inc
add
xchg
dec
inc
cmpsb
sbb
xchg
jns
mov
push
adc
push
mov
ret
or
outsb
mov
insl
jp
adc
or
in
mov
mov
bound
adc
shl
jmp
jb
jmp
adc
js
push
cmp
pusha
hlt
stc
adc
ja
mov
and
pop
aam
insl
repz
ret
inc
sbb
ret
pop
les
decl
inc
adc
sub
mov
push
xchg
xchg
int
hlt
clc
mov
pop
lcall
xor
add
sbb
repnz
dec
cs
jae
cmpsl
sub
push
add
mov
xor
adc
imul
inc
cltd
or
push
in
pop
push
mov
shlb
jle
cmpsb
xchg
sub
test
and
or
dec
sub
xchg
sub
scas
dec
out
ret
adc
dec
pop
stos
xor
insl
mov
xor
fadds
rolb
push
shlb
mov
inc
sahf
or
clc
inc
loopne
jo
insb
add
xchg
je
xor
mov
adc
outsb
push
mov
clc
jo
mov
inc
add
rolb
lds
add
mov
cmp
pop
mov
xor
ret
das
pop
push
or
add
cmp
sub
sub
bound
bound
push
or
jmp
inc
pop
inc
add
mov
add
push
dec
sub
jmp
or
sub
push
pop
loop
mov
aas
pushf
sbb
adc
push
lea
push
xchg
sbb
clc
jae
or
shl
lret
add
cmp
and
lock
rcll
jl
clc
mov
pop
pop
mov
gs
add
test
lahf
inc
push
sub
jns
jae
push
mov
mov
inc
mov
lock
mov
add
and
out
enter
jb
in
or
pusha
sbb
and
sub
cmp
inc
jmp
push
cltd
push
in
dec
jo
sbb
mov
jb
out
push
clc
mov
es
mov
mov
inc
xchg
lods
sti
adcl
mov
adc
add
push
cmp
push
dec
rorb
out
out
sahf
fwait
xor
sbb
add
sub
mov
outsl
fisubs
mov
imul
test
xchg
push
sahf
rclb
add
incl
rcr
orb
mov
fidivl
mov
or
lcall
dec
add
dec
adc
lods
add
inc
js
mov
sbb
mov
imul
dec
jmp
cmp
mov
push
cmp
arpl
dec
xor
popa
js
sbb
sub
lods
fsubl
sub
in
cmp
sub
pop
or
mov
xchg
adc
rclb
or
mov
mov
pop
lods
push
push
icebp
test
mov
and
test
and
fwait
jp
xchg
sti
call
mov
lret
ja
insl
movb
and
mov
dec
add
jmp
cmpl
mov
lcall
int3
mov
xor
xor
adc
inc
xor
fisttpl
and
jae
testb
fiadds
xlat
jmp
push
and
shll
mov
mov
sbb
adc
ret
dec
test
popa
mov
out
je
loopne
enter
adc
dec
and
or
inc
sbb
push
inc
and
or
ljmp
cmp
call
mov
cmp
iret
dec
add
insb
sub
mov
shlb
mov
stc
inc
push
inc
in
inc
mov
or
cmp
inc
loope
add
or
dec
jmp
mov
xchg
xor
push
test
cmp
pop
push
xchg
push
in
lock
cmp
push
inc
push
xor
xor
xor
jne
loopne
push
and
into
lock
sub
clc
test
jmp
push
jbe
ret
lods
inc
rol
dec
adc
pop
and
pushf
inc
dec
lea
and
cmp
mov
leave
inc
mov
inc
sahf
xchg
js
outsl
add
lret
repz
stc
xor
jmp
and
xchg
adc
mov
rcrb
into
or
imul
les
inc
je
fistps
out
aam
into
dec
imul
enter
push
adc
xchg
push
fldt
test
test
ljmp
xchg
sbb
in
pop
pop
add
mov
sbb
test
js
jbe
push
push
push
push
mov
add
add
mov
andb
pop
icebp
loopne
test
jne
lcall
pushf
popa
add
xchg
fisubs
jb
enter
xor
test
pop
repnz
add
xchg
fbld
sar
test
roll
mov
outsb
or
cmp
fwait
inc
push
popf
jmp
xchg
ret
es
insb
jb
sub
pop
clc
jl
jno
push
xchg
sbb
addr16
cmpsb
rcrb
loopne
pusha
pop
lcall
sbbb
loopne
inc
add
sbb
push
jns
les
add
jb
or
or
testl
sti
sbb
ljmp
sub
lcall
rclb
mov
dec
aaa
rorb
push
ret
jl
inc
cmpsl
cmpsl
addb
push
and
test
sar
mov
imul
push
data16
pop
mov
in
jmp
push
sub
stc
cmc
out
movsl
pushf
mov
mov
push
adc
inc
dec
sub
es
ret
push
jg
int3
cmp
jg
push
jp
ret
cmp
adcb
outsb
ret
jmp
xor
push
push
push
add
push
hlt
jge
inc
add
add
mov
test
dec
imul
lret
add
pop
pop
imul
or
xchg
mov
mov
in
cwtl
popa
out
aam
sub
mov
or
subb
adc
dec
shrl
lahf
roll
push
popa
scas
paddsb
fld
pop
mov
inc
add
out
adc
push
pop
repz
jmp
inc
add
or
lods
roll
mov
scas
jecxz
add
out
call
dec
add
ret
fcom
aas
in
leave
push
int3
sub
or
sbb
xchg
mov
cmpsl
push
clc
imul
sarl
inc
and
bound
lret
stos
jmp
push
mov
pop
testb
es
sbb
aad
sub
sub
lahf
andb
pop
and
cli
pop
and
sbb
loopne
dec
je
sub
addl
sub
push
sbb
mov
mov
es
adc
adc
add
xor
xor
push
xchg
pop
add
xchg
push
sbb
pop
jne
aaa
scas
push
sub
cltd
jno
nop
and
xor
pop
ret
add
dec
sub
add
les
stos
aad
push
push
arpl
jo
outsb
enter
and
mov
fisubl
adc
fistpll
mov
xchg
push
insl
sub
pop
inc
jmp
adc
data16
fistpl
and
jl
ds
clc
rol
ret
xchg
mov
dec
mov
mov
push
fistpl
insb
dec
std
jg
and
inc
sbb
negb
jge
loop
data16
adc
jnp
jmp
lock
and
push
dec
xor
xor
jne
clc
lea
mov
and
jnp
inc
and
sub
push
xor
add
cmp
add
in
sub
cmp
inc
sbb
dec
push
pop
pop
mov
aam
sub
xor
adc
outsl
out
pop
sbb
iret
inc
loop
xchg
jne
cmp
or
andl
push
gs
sub
js
xor
add
pusha
enter
inc
xor
cmp
or
std
movsb
ret
sbb
ret
and
inc
insl
pusha
dec
pusha
mov
adc
stos
aad
dec
inc
mov
data16
jne
leave
and
outsl
add
aas
push
in
adc
adc
push
xor
addl
mov
or
out
loop
sub
mov
xchg
les
outsb
jp
push
push
int
xor
ja
cmp
in
cli
std
sub
push
push
mov
cmp
repnz
or
mov
jb
push
sbb
in
sbb
cs
or
sub
nop
add
or
dec
ljmp
add
sub
sahf
dec
pop
sbb
addb
filds
jmp
dec
jbe
pop
out
xor
jbe
cmpsb
xor
xlat
sub
test
loop
imul
dec
jae
ds
aaa
adc
mov
inc
xorl
jle
and
xor
sar
add
cmp
ja
pop
adc
mov
inc
adc
push
xchg
dec
aam
clc
push
push
iret
stc
inc
jp
fcompl
fadds
push
nop
push
push
inc
les
pop
mov
movsb
add
nop
sub
add
jbe
push
xor
mov
jmp
int
sbb
xor
sub
cmpsl
adc
inc
mov
inc
xor
cltd
sbb
dec
add
rolb
jecxz
ret
cltd
and
pusha
lea
mov
xchg
notb
popa
or
je
sub
lcall
push
ds
and
push
ret
pop
jl
xor
lret
into
xchg
add
fadds
pushf
hlt
pop
cmp
pop
fidivs
sbb
sub
dec
push
cmpb
es
loopne
push
punpckhdq
jl
shrl
xlat
and
and
enter
dec
stc
mov
sbb
sbb
imull
pop
je
push
mov
cmp
adc
cmpsb
inc
cmp
or
or
imul
mov
loop
mov
inc
and
jo
mov
jns
pop
sbb
repnz
push
jmp
push
sbb
je
and
dec
cmp
int
stos
xor
xorl
mov
mov
stos
les
dec
xor
pop
insb
push
jge
lret
xor
dec
push
jno
lea
rcrl
sub
jne
cs
test
xchg
sahf
add
add
add
adc
dec
bound
mov
mov
sbb
pop
mov
xor
or
stc
xlat
push
decb
adc
or
sbb
or
outsl
nop
xor
dec
js
add
fwait
pop
push
ss
add
push
adcb
xchg
cld
adc
cld
adc
je
push
daa
fiaddl
fs
stos
or
lock
test
mov
and
add
aad
fstps
push
mov
adc
movsl
dec
test
push
mov
rcll
rclb
or
adc
xchg
add
push
sbb
pusha
mov
and
or
je
in
rorl
aas
aad
xchg
dec
inc
aam
fwait
mov
stc
mov
adc
mov
pop
pop
jp
sti
adc
in
leave
xor
das
cmpl
popa
xchg
out
and
mov
push
or
ja
add
xor
insl
popa
and
stos
jae
sbb
in
mov
hlt
pusha
jge
dec
inc
adc
push
data16
adc
jb
enter
fstpl
jge
pop
adc
popa
xor
or
push
xor
push
cmp
mov
ret
mov
data16
aas
jne
aam
mov
jmp
add
aam
add
movsl
lcall
scas
or
cmp
mov
out
add
and
inc
push
arpl
dec
arpl
loopne
add
pop
arpl
xor
fwait
mov
push
loop
push
pop
fdiv
je
adc
jbe
cmp
out
add
sub
ss
adc
out
leave
jne
push
jmp
cmp
xchg
mov
xchg
mov
push
rol
mull
add
mov
pop
xchg
push
dec
inc
push
xor
or
mov
and
cld
add
das
xor
les
repnz
push
cmpsb
fnstcw
adc
xchg
stos
mov
adc
sbb
cmpsb
dec
test
mov
test
enter
mov
mov
push
les
mov
inc
cmp
or
add
test
or
pusha
addb
in
inc
xor
decl
aaa
fisubrl
in
xor
test
imul
mov
out
mov
fxch
adc
addb
xor
mov
mov
mov
jo
pop
push
subb
hlt
jecxz
or
pop
push
xor
jp
scas
dec
sub
or
adc
jmp
imul
cmp
enter
or
cmp
mov
or
lahf
jmp
pop
xchg
xchg
dec
pushf
cltd
xor
movsb
dec
icebp
outsl
dec
ret
or
sti
ss
add
outsb
adcl
push
dec
idiv
stos
movl
dec
and
and
rol
pop
add
dec
arpl
inc
stos
movsb
fstl
add
xchg
or
pop
inc
fwait
leave
aas
mov
shll
mov
mov
data16
loope
mov
xor
pop
mov
dec
and
shll
adc
loop
sbb
adc
loope
push
in
aaa
xlat
ret
xor
push
cwtl
xchg
xor
jo
fisttps
inc
push
imul
sub
pop
add
pushf
inc
add
sub
mov
xchg
jmp
jecxz
test
pop
push
das
test
lock
xchg
and
adc
sub
and
xchg
mov
in
or
lock
data16
mov
addr16
arpl
push
mov
jbe
fdivrs
add
sub
pop
add
outsb
inc
mov
xchg
ret
dec
xchg
fldl2t
adc
je
pop
leave
push
adc
jecxz
imul
fadds
add
push
or
jl
mov
push
pop
fwait
dec
and
into
enter
adc
push
xor
add
nop
or
jns
xor
test
adc
or
mov
dec
or
push
loop
idivb
cmpl
popf
shrb
ficoml
cs
imul
jl
adc
icebp
imul
add
je
sarb
xchg
xor
lahf
sub
pop
repz
jo
and
fs
sub
fsubrs
ds
icebp
adc
and
pushf
sti
dec
icebp
icebp
imul
mov
imul
adc
dec
hlt
jl
push
push
push
jg
push
inc
dec
add
xchg
cmp
loopne
cmp
shll
xor
hlt
stos
cli
push
mov
daa
test
pop
rcrl
and
sub
loopne
and
lahf
sub
stos
xchg
cltd
add
icebp
mov
out
rcl
rcrl
jecxz
shrb
or
xor
icebp
jno
mov
nop
mov
pop
or
cmp
fldl
mov
or
or
jecxz
pop
gs
loope
inc
inc
dec
add
dec
push
sub
inc
pop
inc
mov
and
je
cwtl
sub
sub
in
jno
mov
xchg
movsl
fs
into
idivb
nop
push
push
pop
movsb
xor
js
test
cwtl
lds
add
adc
nop
pop
loopne
aad
mov
inc
sbb
inc
or
popf
idiv
xchg
xchg
in
push
adc
test
shl
push
cli
fimuls
sub
push
and
cwtl
pop
jp
mov
jbe
jne
test
shlb
pop
mov
movsb
sbbl
popf
add
pop
xor
adc
enter
add
mov
lahf
fadds
repz
push
bound
xchg
cs
in
or
jecxz
lea
fadds
jmp
cmpsb
mov
fldl
dec
push
sub
add
and
scas
fs
add
add
add
push
push
or
xor
push
enter
push
repnz
push
adc
dec
fsubs
mov
test
or
jae
lret
dec
add
scas
mov
rclb
push
push
out
testb
push
push
push
xor
or
rcll
bound
cs
sub
sub
mov
adc
or
fisubrs
inc
dec
stos
dec
or
sahf
or
sbb
roll
push
push
dec
push
cli
ss
add
or
sub
cmp
push
mov
push
cmpsb
adc
arpl
push
stos
loopne
and
adc
sbb
push
sub
sbb
cld
add
jae
add
dec
std
adc
fs
jb
adc
lea
or
mov
add
je
adc
rcr
ret
in
push
mov
rcrl
inc
push
inc
or
aad
pop
adc
lock
pop
enter
adc
cmp
and
clc
lods
fsts
pop
outsb
jne
shld
xchg
in
mov
and
hlt
mov
push
sbb
add
shlb
in
dec
addb
sbb
lods
aad
jnp
and
pop
out
xor
adc
in
push
adc
in
nop
jno
xchg
dec
sbb
xlat
mulps
or
push
jae
mov
out
add
jmp
push
add
and
cmp
sub
inc
movsb
stos
cmp
dec
lock
jo
sub
add
and
cltd
jbe
mov
loope
jmp
in
push
lea
and
mov
mov
or
inc
dec
in
inc
add
pop
and
jmp
mov
rolb
push
push
adc
adc
loop
dec
adc
and
fdivrl
scas
fsubrs
add
sub
push
mov
test
mov
jge
ret
jmp
xor
pop
lret
fsubrl
push
bound
inc
insl
mov
xchg
mov
mov
test
data16
push
cmp
imul
std
out
stos
add
rclb
mov
ljmp
out
xchg
out
push
test
nop
cld
les
adc
stos
sub
xor
in
rcrl
mov
hlt
mov
jbe
xchg
mov
insl
mov
jno
and
adc
adc
push
cmp
rol
jge
or
cmp
or
rcrb
cld
mov
sbb
je
leave
adc
out
add
test
test
xchg
out
rcr
mov
mov
scas
jp
mov
stos
es
ja
cs
pop
stos
adc
das
push
push
xor
sub
and
mov
enter
pop
push
rorl
jno
push
add
ss
imul
stos
ljmp
test
mov
jle
mov
push
or
shlb
or
or
mov
gs
imull
adc
int
inc
jo
fstpt
push
popa
outsl
lea
and
push
mov
enter
test
test
inc
add
popa
add
stos
cld
cs
js
mov
pop
add
push
jle
sbb
cmpsb
mov
test
mov
in
or
loope
sbb
xorb
cltd
inc
sub
jbe
je
push
push
sahf
insl
or
out
push
and
xadd
daa
shlb
inc
xor
add
pop
jns
pop
imul
push
loopne
push
shrb
in
test
adc
inc
mov
sbb
imul
adc
lcall
adc
loop
loop
push
or
push
shl
push
mov
pop
pop
mov
mov
or
mov
adc
xchg
daa
stc
dec
repnz
test
cmp
or
cmp
add
iret
push
mov
lcall
dec
loopne
sub
aam
cmpsl
frstor
pop
cmp
pop
adc
or
sahf
lret
in
js
bound
iret
mov
sbb
jge
push
sbb
les
shr
push
cmp
pop
repnz
in
wbinvd
dec
gs
or
enter
or
cmpb
ror
and
pop
ror
int3
orl
fisubs
xor
mov
inc
and
add
in
cmp
mov
push
sbb
loope
adc
and
cld
movsb
jle
or
mov
shr
mov
and
mov
mov
dec
dec
pop
out
jle
jmp
cmpb
and
adc
adc
mov
push
test
xor
xchg
lea
mov
mov
mov
and
decl
cmp
jb
jbe
scas
dec
mov
je
ja
push
push
adc
add
addb
adc
add
cwtl
jbe
cmp
jo
jne
int3
dec
push
xchg
mov
dec
push
lea
cli
fcompl
adc
rcrl
inc
add
mov
sub
ja
sub
dec
mov
pop
adc
dec
push
icebp
addl
pushf
cmp
js
aas
add
push
mov
sub
clc
aad
push
imul
pop
xchg
pop
cmp
jmp
cmp
push
add
hlt
push
addl
add
xor
mov
push
rorb
dec
outsl
push
dec
ja
adc
lret
pop
mov
ljmp
inc
xchg
repnz
orb
leave
dec
add
add
leave
leave
leave
leave
push
pop
or
out
out
or
jnp
or
jbe
jmp
or
out
push
jmp
por
jmp
adc
pop
out
out
adc
push
adc
dec
adc
dec
adc
out
push
jmp
pop
jmp
sbb
xor
out
out
jmp
sbb
es
and
out
push
jmp
pop
jmp
and
or
add
and
and
test
adcl
jae
add
push
fwait
dec
jecxz
mul
das
and
push
add
jns
nop
cwtl
mov
sahf
out
ror
aad
out
sahf
out
in
out
repz
jnp
clc
std
add
out
sahf
out
sbb
and
sahf
das
xor
ds
dec
jg
sarl
enter
add
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
mov
xchg
and
aas
push
imul
add
sbb
rcr
mov
lods
cmp
in
push
inc
mov
xchg
mul
or
cmp
cmp
xchg
out
imul
or
shlb
push
stos
shrb
and
out
pop
mov
fisubl
mov
inc
pop
das
push
add
dec
mov
aaa
xor
mov
or
decl
sbb
adc
pop
sti
cmp
loope
pop
mov
xchg
dec
subb
mov
lea
loopne
cmpb
add
cs
lret
add
nop
add
hlt
aaa
scas
sbb
fldenv
ja
push
jbe
cmp
rolb
shll
std
or
jmp
xchg
sbb
add
or
iret
jno
xchg
ficomps
cmp
pop
loop
fldenv
and
int3
xchg
pop
mov
mov
test
setge
or
adc
and
jmp
repnz
jecxz
xchg
ja
inc
mov
mov
push
mov
scas
mov
push
cmp
andb
or
cmpb
or
jne
pop
js
pop
add
dec
push
in
xor
pop
lcall
stos
call
pop
xor
shr
xor
pushf
sarl
in
push
hlt
push
shr
xor
add
add
add
jne
mov
pop
iret
or
insl
push
adc
out
or
and
xor
add
add
jnp
push
aam
sub
jge
fsubr
add
or
mov
ror
mov
aas
pop
mov
fisubl
aam
cli
and
and
roll
lods
mov
push
rolb
leave
xor
push
fs
fisubrl
movsl
sbb
repnz
sub
fdivr
outsb
movsb
push
or
push
or
xlat
and
ror
add
add
loopne
add
add
cs
cmp
aam
cmp
push
pop
pusha
mov
push
xor
enter
sub
ljmp
rol
rcll
add
cli
push
xor
pop
dec
lcall
xorb
sbb
in
shl
in
push
sub
data16
push
inc
push
add
add
pusha
mov
pop
cmp
or
fadd
xor
call
shlb
in
or
lahf
cmp
movsb
imul
lods
xor
test
pop
sub
cmp
sbb
add
cmpsb
xor
fcoms
inc
jge
and
call
in
jl
and
into
add
and
xor
cmp
imul
push
xchg
js
adc
pop
inc
mov
jo
ret
push
jo
ficoms
or
les
pushf
cltd
lcall
cmp
add
cs
adc
loop
mov
and
sbb
lods
dec
fadds
pop
fs
subl
insl
and
fisubrl
fdivrs
or
clc
jl
push
and
add
imul
imul
add
in
stc
icebp
xor
shll
inc
aam
xchg
fidivl
jbe
cli
nop
or
jmp
aam
dec
shll
cmp
adc
xor
sub
mov
jb
in
mov
shl
rolb
rcll
dec
cmp
ss
push
popl
sub
push
xor
inc
add
push
sbb
dec
inc
test
loopne
add
mov
inc
add
stos
imul
dec
gs
inc
push
xor
movsb
add
adc
dec
xorl
sahf
and
mov
add
adc
cmp
or
push
data16
nop
and
stos
inc
stos
ret
xchg
aaa
xchg
out
push
add
or
and
scas
inc
pop
mov
imul
inc
pusha
push
jb
add
pusha
pop
mov
rol
xchg
or
jo
mov
stos
insb
dec
jno
in
inc
adc
jb
mov
fs
dec
movsb
shlb
cmp
addr16
mov
int3
pop
push
jno
test
mov
jb
adc
dec
add
or
orb
adc
jbe
insl
das
call
and
jp
movsb
and
push
mov
lea
mov
dec
pop
out
or
aas
pop
add
sub
mov
fadds
inc
rol
nop
loopne
lret
jb
xchg
aaa
sub
pop
mov
sbb
pop
xor
xchg
cmc
sub
adc
dec
push
fwait
or
xor
or
pop
inc
jmp
rol
and
fdivs
or
test
loopne
mov
mov
sub
loopne
lea
jmp
lahf
orb
sub
dec
sbb
pop
mov
jg
lods
fimull
pop
jne
pop
jbe
add
sarl
add
xchg
sub
push
enter
fisttps
jbe
or
sbb
icebp
mov
mov
push
mov
sub
jae
push
pop
rolb
add
enter
fimuls
mov
sbb
lret
fs
pop
fdivp
shl
ret
ja
iret
mov
hlt
push
shr
xchg
xchg
push
sub
lea
call
mov
addl
or
dec
test
dec
cld
js
ret
movl
pop
push
pushf
mov
cmp
pushf
dec
fdivrs
jbe
fdivrl
xor
mov
sbb
mov
jo
inc
jge
outsl
pop
xchg
rorb
fwait
sbb
dec
loop
push
ds
mov
push
xchg
jle
ja
lea
imul
cmp
ja
or
mull
or
pop
add
cmp
and
mov
sbb
lock
enter
sbb
add
adc
or
and
pop
in
inc
addl
xchg
and
adc
les
or
test
test
shll
push
addb
pop
mov
push
and
add
pop
pop
sbb
mov
adc
pop
call
fdivs
loopne
inc
pop
stos
xchg
icebp
sub
int
pop
imul
mov
mov
call
dec
fwait
xchg
xchg
roll
jge
push
adc
adc
dec
in
insb
loop
add
mov
xor
rcrl
xchg
mov
sbb
add
loopne
xchg
pop
sbb
xchg
sbb
xchg
and
lret
out
fists
ljmp
mov
adc
iret
cmp
lods
cmp
sub
and
add
push
and
stc
add
ret
mov
xchg
add
mov
movl
dec
adc
push
sub
push
push
inc
andb
inc
push
movsb
loope
inc
wrmsr
adc
mov
adc
orl
xor
pop
adc
push
loope
xchg
lods
in
inc
cmp
jl
sbb
or
icebp
test
mov
mov
jp
cmp
add
dec
sar
cli
es
lea
cmp
cld
jg
and
fs
jne
or
js
xor
push
sbb
js
sbb
mov
aad
or
xor
cmpb
mov
outsl
or
icebp
jl
dec
dec
mov
movsl
fstpl
mov
cmpsb
jb
xchg
nop
pusha
and
pushf
dec
daa
lods
nop
lock
lret
and
movzbl
push
rorl
and
adc
js
and
out
xchg
add
shr
jmp
push
aam
pusha
lock
mov
pop
push
inc
in
add
or
test
ret
mov
and
mov
push
and
and
call
mov
lahf
cltd
ja
add
lcall
push
pusha
mov
and
mov
ret
dec
and
xchg
pop
and
stos
and
adc
or
xor
add
push
cmp
add
cmp
rcrb
js
jne
test
mov
dec
or
push
push
sbb
loop
jo
adc
sub
cmp
adc
xchg
mov
sti
push
imul
add
jle
dec
sbb
int3
mov
sbb
and
cmp
shlb
and
xchg
add
add
adc
mov
inc
bound
add
and
mov
push
inc
push
or
xor
pop
cltd
sub
sub
dec
mov
dec
es
inc
mov
push
movl
and
or
add
imul
lcall
add
adc
mov
cmp
jno
xlat
orl
ljmp
sbb
xor
pop
push
mov
pop
ja
push
add
pop
js
pop
push
jmp
mov
jmp
cmpl
sub
push
shl
xorl
pop
adc
fisttpl
shrb
push
ss
je
xchg
jl
dec
aam
mov
pop
neg
and
ret
or
std
mov
fstpt
sub
xchg
lea
out
push
adc
sub
ss
int
mov
sbb
xor
push
or
dec
inc
push
mov
mov
cmp
jmp
and
stc
jge
sub
or
adc
jle
inc
push
push
adc
adc
outsl
cmp
aam
mov
fildl
arpl
or
push
das
add
or
lock
inc
push
aam
adc
jb
adc
js
repz
sbb
adc
testl
mov
sub
jg
adc
dec
ror
dec
sbbl
push
jno
push
aaa
xchg
sub
fwait
ret
inc
or
sbb
sbb
cmp
fwait
loope
and
jnp
pop
mov
mov
or
cwtl
and
loope
jmp
sub
popf
mov
pop
aam
rclb
push
aam
xor
pop
sub
sub
cmpsl
mov
jg
mov
cmpb
icebp
imul
les
jmp
cmp
sbb
pop
dec
shl
mov
and
sub
sbb
inc
xor
call
xor
cmp
or
cmp
inc
inc
rorl
xchg
xor
daa
pop
sbb
or
test
jle
jp
jns
adc
jnp
xor
dec
fnstenv
dec
cmp
ja
inc
rcll
push
sub
fnsave
shll
leave
mov
sub
cltd
jae
sub
rorb
push
pop
push
cld
cmpl
xor
ret
adc
mov
inc
mov
lds
mov
xor
gs
or
roll
cmp
dec
mov
and
push
pop
push
xchg
test
pop
adc
cmpsb
jmp
or
adc
hlt
je
inc
mov
data16
xchg
scas
dec
ret
fsubrs
push
mov
lock
lock
sbb
sub
mov
fimull
push
hlt
ss
mov
push
es
stos
movsl
and
dec
jge
jmp
stos
jmp
in
xchg
sbb
je
mov
orl
mov
cmp
sbb
push
xchg
stos
ja
adc
lods
or
cld
xor
insl
jl
adcl
and
pop
jnp
sub
add
scas
stos
loopne
xchg
mov
adc
sub
mov
pop
movl
orl
call
mov
dec
inc
jecxz
add
or
jmp
mov
pop
or
pop
and
inc
dec
fiadds
inc
pusha
sbb
adc
ds
lds
call
xor
xor
xchg
mov
lock
rcll
clc
into
icebp
mov
push
xor
mov
jmp
push
mov
xor
inc
dec
imul
mov
adc
and
and
mov
arpl
imul
and
mov
sbb
xor
je
nop
inc
and
ss
xchg
cmp
movsl
mov
test
push
mov
push
push
or
orb
sub
xchg
push
xor
xor
mov
adc
xor
fsubrs
pop
jb
and
and
mov
xchg
test
sbb
mov
test
and
xchg
sbb
ret
cmp
enter
adc
adc
mov
inc
and
cmp
or
dec
xchg
and
sbb
cs
and
dec
rcll
and
andl
dec
loop
sbb
loopne
jle
cmpsl
pushf
in
cld
xchg
cmp
xor
mov
cmp
leave
int3
and
leave
sbb
ret
outsb
pop
stos
xor
adc
inc
jne
inc
push
sahf
loopne
and
outsb
cmp
out
sbb
or
mov
out
les
jecxz
lea
ljmp
ret
arpl
mov
lea
push
jbe
lcall
enter
scas
push
push
adc
repnz
adc
mov
cmpl
inc
push
lods
les
popf
out
mov
add
adc
adc
fisttpll
ret
insl
dec
dec
test
fldl
cmp
call
and
mov
jmp
sub
dec
dec
add
das
push
inc
cmp
pop
sbb
nop
push
push
xchg
dec
nop
push
inc
mov
pusha
leave
xor
faddl
mov
shrl
fimull
test
ds
xchg
mov
mov
cmpb
sbb
sub
rolb
test
pop
pop
fisubrs
popa
outsl
jmp
fstpl
fndisi(8087
or
fisubl
sbbl
out
adc
or
imul
xchg
mov
xor
stc
dec
lods
sub
mov
ret
cmp
arpl
repnz
adc
pop
lods
pop
mov
stos
xchg
repnz
add
mov
sbb
dec
stc
mov
add
push
xchg
xor
jp
mov
or
inc
xchg
or
cmpsb
pop
mov
push
cmp
add
shrb
mov
or
shll
mov
push
mov
cmpsb
les
fcmovbe
sub
mov
lea
inc
std
push
push
daa
stos
je
cmp
inc
add
fwait
adc
sub
push
cmp
jge
mov
aam
adc
cmp
inc
insb
lock
lea
les
cmpsl
ret
pop
mov
lds
lcall
add
xor
lret
lret
lock
clc
clc
cld
jne
incb
jae
movl
xor
push
add
nop
imul
dec
fbstp
dec
je
add
adc
cmp
fiaddl
lret
orb
mov
mov
or
push
cmc
lock
ljmp
xor
test
rolb
sub
dec
xor
lds
push
daa
pop
cmpsb
adc
jnp
mov
mov
dec
je
dec
lods
mov
push
add
loop
dec
xchg
pushf
popl
mov
lcall
sub
icebp
ljmp
xchg
testb
mov
test
je
cmp
jne
push
rcrl
sbb
adc
mov
imul
or
data16
add
xor
xor
inc
cmpb
test
sbb
or
gs
lret
idiv
inc
inc
imul
add
mov
hlt
clc
jb
pop
cld
mov
cmpb
add
lahf
pop
je
mov
add
add
or
cmp
jns
or
cmp
or
add
adc
push
push
lock
ljmp
out
repnz
jbe
inc
push
and
fiadds
daa
pop
out
mov
aaa
sarb
push
jge
test
xchg
ja
imul
outsb
gs
jae
repnz
arpl
xor
insl
jmp
mov
repnz
sub
adc
cmp
je
cmp
push
cmp
mov
clc
jne
inc
jne
loopne
in
sub
les
fwait
sub
jb
ljmp
rorl
cmp
jne
pop
dec
add
pop
add
loop
cmp
push
ret
sbb
sarb
add
subb
fcoms
xor
mov
jp
jl
or
jg
mov
jmp
and
pop
outsb
outsb
ds
jmp
inc
jl
inc
jg
aaa
mov
std
push
jp
add
shl
dec
mov
sub
mov
call
mov
fscale
push
xchg
ss
jg
xchg
jg,pn
imul
and
sbb
inc
sbb
xchg
rcrl
scas
add
sbb
or
push
xchg
out
mov
xor
aaa
sub
frstor
pop
and
xchg
mov
jl
pusha
mov
cli
popa
mov
jg
pop
fs
imul
inc
imul
inc
mov
xorb
mov
lods
aaa
lcall
cmp
dec
sub
mov
jmp
test
ljmp
xchg
inc
out
test
das
movsb
xor
xor
fsubs
add
inc
cmpb
mov
movsl
pop
call
filds
pop
pusha
idivb
call
out
jmp
xor
jno
les
dec
inc
fs
mov
dec
sbb
or
add
pop
fsubr
xorb
pop
push
shrb
cld
cmp
sub
mov
inc
and
sub
lds
je
je
and
cmpsb
pcmpeqb
clc
insl
or
mov
mov
add
cmp
into
hlt
add
jne
mov
mov
ds
cld
imul
inc
lods
lret
inc
mov
cs
imul
cmp
or
cmp
mov
jmp
test
andb
push
aad
xchg
ret
out
jg
loop
sbb
inc
push
dec
and
mov
dec
dec
mov
inc
cwtl
add
ljmp
mov
jmp
jns
dec
cmp
or
fsubl
mov
sub
jge
jne
xor
add
rcrl
loopne
movsb
push
sbb
pop
push
add
xor
adc
dec
js
inc
inc
cwtl
xor
pop
inc
inc
push
sbbb
add
add
fisttpll
scas
movsb
sti
sub
into
mov
mov
shl
lds
and
gs
jne
dec
imul
mov
andb
icebp
loope
out
jmp
push
rolb
mov
xorb
xchg
and
mov
sbb
lea
push
xchg
shl
inc
aaa
mov
mov
imul
ret
jge
add
ret
xor
or
mov
fcom
mov
xlat
out
les
dec
adc
jne
push
pushf
mov
xchg
mov
ret
add
dec
lock
cmp
incl
cmp
pop
xchg
aam
cmp
mov
inc
cmp
sub
mov
inc
cltd
or
sbb
adc
in
xor
pop
mov
pop
sub
cmp
inc
push
imul
inc
ds
and
out
cmp
outsb
mov
insl
xor
roll
pop
push
or
or
enter
mov
popf
and
xor
inc
mov
leave
enter
and
jle
movb
jbe
pop
les
fs
sbb
push
js
rolb
inc
mov
jns
cmpb
jne
leave
lods
mov
cmp
not
les
test
aaa
sbb
jne,pt
ds
sbb
ja
dec
ret
addb
and
cmp
xchg
pusha
aas
add
lods
xor
cs
xlat
mov
and
lods
dec
xor
dec
out
mov
aam
test
mov
into
push
jb
rcrb
scas
xorl
fs
orl
rolb
ljmp
inc
lock
in
xchg
jecxz
jecxz
pop
loope
ret
pop
xorl
pop
repnz
test
in
lret
pop
adc
call
shll
push
aaa
sbb
or
sbb
in
mov
push
pop
fnstsw
mov
dec
dec
and
or
ss
shrb
data16
push
push
nopl
inc
test
jl
mov
inc
pop
mov
push
pop
cld
pusha
ret
popf
inc
insb
je,pt
inc
add
inc
jl
push
scas
shll
sub
sarb
rcrb
lods
addl
fstpt
push
test
fldl
inc
fisttps
mov
imul
mov
lock
clc
push
push
addb
adc
pop
jo
mov
fsubs
add
loopne
addr16
push
jo
add
lods
loopne
or
and
fwait
pop
fists
xor
into
sahf
sub
xchg
pop
lods
push
push
lea
loopne
orb
cli
xchg
sub
adc
xchg
mov
or
sub
jo
adcl
sbb
or
and
sbb
add
mov
imul
cmp
fcomps
insl
test
ss
stos
leave
cltd
sub
test
sahf
xchg
dec
sbb
cs
call
cmp
xchg
lock
xor
negb
add
int3
out
jmp
imul
push
push
mov
es
cmp
je
ret
scas
test
push
adc
sbb
or
or
lret
movb
add
mov
hlt
cmp
movl
pop
loopne
sbb
adc
xor
push
mov
enter
mov
in
jne
add
and
sub
aas
inc
je
dec
adc
lock
insl
jne
mov
push
dec
cld
minps
je
or
cmp
and
push
scas
insl
or
adcl
jg
outsb
test
jp
mov
dec
sub
add
and
add
pusha
js
movsb
movsl
dec
dec
cltd
or
cmpb
pop
outsl
push
push
add
sbbl
mov
daa
push
mov
cmp
out
sbb
je
and
add
inc
rclb
clc
mov
fimuls
push
add
xchg
add
pusha
inc
lds
in
pop
dec
mov
aas
add
add
jo
xchg
iret
sbb
add
fcomps
add
sbb
jmp
mov
inc
fsts
dec
pop
xchg
or
pop
pusha
movsl
cmp
jne
add
add
add
push
bound
fldenv
movsl
xor
sbb
jecxz
mov
dec
sbb
data16
inc
rclb
iret
std
leave
sbb
fstpt
mov
into
je
mov
add
ja
movsl
clc
nop
hlt
jmp
mov
sub
jne
sbb
sbb
push
xchg
adc
pop
adc
pusha
xchg
in
sbb
fs
shl
test
stos
or
movsl
lcall
stos
push
pop
fdivrl
in
jmp
es
dec
inc
mov
jb
hlt
or
jnp
ret
loopne
pop
dec
addr16
stos
add
inc
xchg
mov
jle
in
ret
xor
aaa
imul
cmc
in
sbb
cmc
jno
inc
mov
into
or
add
fists
mov
int
movsb
push
or
or
sbbl
xorl
and
jno
outsl
in
dec
movsb
icebp
add
xor
movsb
lock
mov
bound
push
sub
push
cmp
pushf
fstpt
scas
cmp
push
dec
push
arpl
mov
mov
pop
daa
sub
push
subl
or
movsb
mov
inc
mov
xor
pop
imul
ds
lock
loop
xchg
dec
push
push
jmp
bound
mov
fiadds
or
push
mov
inc
and
leave
or
xchg
ss
enter
adcb
push
loop
leave
add
fs
pop
or
sarb
sahf
fs
aaa
out
movsb
xchg
movsb
push
out
jmp
shl
test
sahf
call
enter
adcb
cwtl
xchg
pop
lock
stos
cmpsl
sbb
sbb
stos
out
test
push
and
call
sbb
jl
add
push
xchg
or
push
loopne
ret
jmp
and
clc
inc
ret
mov
inc
inc
movsb
sub
sub
sbbb
xchg
lret
add
addl
subl
clc
pop
and
or
icebp
jno
sarb
inc
rolb
xor
ret
cmpl
push
in
faddl
mov
in
mov
loope
or
out
push
mov
or
nop
add
sub
push
push
inc
mov
add
fadds
adc
xchg
aam
dec
fbld
mov
inc
xchg
add
mov
and
or
mov
shlb
push
rcrl
jmp
add
hlt
mov
xor
mov
sarl
mov
int
call
mov
ss
pop
add
or
xor
sarl
cmp
pop
sbb
sub
fistl
mov
sub
and
inc
pop
jmp
add
inc
scas
inc
inc
call
je
in
fimuls
mov
inc
data16
jo
inc
inc
xchg
jnp
sbb
mov
adc
sarl
cmp
pop
push
cwtl
and
outsl
nop
sbb
add
jecxz
cmpsl
fldl
adc
jne
dec
lods
adc
cmp
sbb
add
leave
fcoms
insb
stc
ss
aad
test
push
leave
jno
loop
jb
xor
xchg
lea
roll
jmp
rorb
push
pop
adc
lret
popf
and
ret
mov
add
mul
and
sbb
adcb
xor
ljmp
and
adc
mov
sbb
push
mov
movl
pusha
jo
add
sub
cmp
or
repz
mov
sub
cmp
cmp
dec
enter
mov
ja
aaa
icebp
lods
push
nop
ret
xor
or
pop
fs
out
test
add
inc
or
or
dec
sub
subl
data16
rcll
mov
adc
dec
adc
mov
inc
mov
sbb
inc
clc
sbb
xor
cmp
rcll
movsb
das
and
aam
or
sbb
mov
xchg
dec
aad
loope
xor
sbb
bound
pop
mov
sbb
lcall
jne
pop
push
jae
inc
inc
add
mov
popf
add
or
jne
ljmp
push
or
push
push
mov
or
xlat
rcll
jecxz
int
fmuls
jmp
lea
fdivrp
dec
daa
orb
or
in
dec
pop
aam
pop
dec
sbb
sbb
cmpl
fisubl
mov
adc
insb
inc
insb
or
add
and
and
idiv
xchg
movsl
inc
mov
movsl
pushw
in
shll
mov
mov
cmp
adc
clc
sub
das
loopne
mov
js
je
icebp
xor
jl
rolb
outsl
sbb
stos
movsb
inc
jecxz
add
stc
clc
or
mov
add
jp
pop
jmp
sbb
add
inc
test
adc
rcrl
mov
testl
xchg
sbb
sub
pop
in
jae
cmp
pop
mov
bnd
cmp
sbb
xchg
shlb
fldenv
dec
shll
push
inc
adc
add
movl
cmc
add
leave
ret
mov
xchg
xchg
xor
ret
lods
inc
sbb
je
jp
ja
shlb
mov
test
or
pusha
jnp
out
ds
lock
xchg
adc
sbb
loop
or
jmp
or
sbb
adc
fs
or
lret
adc
cmp
jb
add
sarl
les
out
popf
or
inc
pop
mov
push
scas
stos
pop
aaa
je
sub
xlat
sub
sarl
jecxz
sbb
adc
sbb
mov
loopne
outsl
in
jae
jle
andl
or
pushf
push
sbb
add
imulb
shrl
sbbb
and
sub
popf
dec
xchg
push
jo
pop
add
or
cli
jmp
inc
ja
adc
cmp
loop
lods
and
jbe
push
inc
andb
test
pop
js
or
inc
sbb
in
mov
add
push
loopne
cmp
insl
pop
adc
loopne
sub
in
test
loopne
ret
pop
mov
add
mov
jae
sarb
adc
call
push
or
mov
lock
mov
xchg
mov
jmp
arpl
push
mov
scas
inc
pop
mov
loop
pop
adc
or
pop
adc
popf
rcll
mov
repz
add
xchg
push
xchg
mov
bound
daa
arpl
sub
add
xor
and
hlt
fs
push
das
sub
push
push
inc
add
jnp
ret
or
cmp
fiadds
lds
fcmovbe
cmp
or
pop
cmp
cs
lcall
in
mov
mov
sbb
add
test
or
mov
dec
ja
inc
jp
mov
push
add
gs
adc
push
push
push
ss
clc
incb
movsb
insl
imull
mov
or
shrb
cmc
cmp
lds
clc
dec
push
xor
lods
mov
push
mov
inc
sbbb
sbb
andb
add
sub
out
ret
outsb
adc
jb
and
inc
sub
aaa
jo
add
imul
out
adc
cwtl
add
les
fs
into
sub
xor
icebp
add
inc
adc
je,pt
sar
adc
xorb
in
add
in
cmp
imulb
in
push
push
mov
cmp
push
mov
add
push
jg
add
sbb
mov
or
lods
out
into
lret
inc
mov
inc
mov
movsb
js
call
xlat
cmpsl
inc
mov
movsl
pop
jae
add
lock
adc
and
sbb
push
and
add
mov
xor
cmp
in
sub
xor
or
and
inc
inc
nop
sub
xor
test
aas
enter
push
je
cmp
jbe
push
add
popa
adc
testb
outsl
mov
push
movl
push
enter
ret
mov
sub
enter
aam
jo
cltd
stos
dec
lock
pop
inc
fists
mov
push
adcb
into
inc
adc
or
cli
aam
in
jo
mov
dec
popl
jl
mov
outsb
dec
insb
xchg
lock
adc
or
push
cmp
fldt
xchg
dec
jo
mov
js
mov
ja
add
sub
icebp
daa
rorb
scas
lods
test
add
lret
mov
add
sub
push
wbinvd
push
sarb
push
sub
adc
jecxz
movl
adc
je
inc
pop
pop
les
xor
data16
rcrb
sub
xor
dec
adc
sub
aad
cmpsb
mov
fmull
pop
ja
call
and
cmp
jne
push
jle
cli
push
mov
xor
enter
jbe
pop
pop
push
lret
jne
mov
adc
fcomi
ss
cmp
std
push
in
dec
cmp
inc
push
xor
pop
div
hlt
add
lea
mov
or
sub
push
inc
or
xchg
xor
push
dec
pop
adc
cwtl
sbb
inc
cli
push
sbb
adc
and
add
push
dec
adc
mov
adc
add
pop
jmp
pop
jp
adc
xchg
cmp
popa
jo
ja
dec
sbb
std
rcr
andl
gs
loopne
pushf
outsl
in
mov
lods
xor
add
push
inc
dec
aam
add
rorb
loopne
je
pop
int
adc
jb
je
aas
add
mov
sub
jo
mov
je
adc
sub
sub
jne
bound
shll
adc
out
adc
inc
add
imul
clc
int3
add
dec
or
mov
mov
dec
or
pop
adc
inc
jns
push
cmpl
xchg
mov
pop
dec
cmp
jb
neg
mov
rorl
ffreep
add
cmpsb
loopne
add
or
adc
and
je
rep
mov
imull
mov
dec
ljmp
jb
loop
gs
call
push
ret
adcl
je
mov
or
xorb
fsub
or
sbb
push
outsl
dec
jne
sub
stc
dec
xor
lea
scas
push
sub
rorl
and
cmp
sbb
je
push
mov
cwtl
scas
pop
push
icebp
dec
fsubrl
and
sbbb
psubusw
mov
out
cmp
and
clc
jg
fs
std
pop
cmp
add
movd
movaps
out
push
enter
shlb
jle
xor
decb
aaa
das
cli
rcl
lret
je
cmp
sub
lret
or
jg
cli
fwait
ret
inc
ljmp
and
in
add
sub
and
add
adc
je,pn
jne
adc
sbb
outsb
fisubrs
repnz
roll
lock
mov
add
pop
shlb
std
addsd
int
add
dec
sahf
repnz
sbb
idivl
pop
test
iretw
into
mov
jne
orb
and
add
rolb
mov
mov
add
xorl
test
mov
lods
mov
or
lcall
mov
andl
adc
cmpsb
leave
and
lret
rolb
hlt
fldenv
lret
dec
cmc
cwtl
sarl
cmp
ficoml
pop
inc
dec
pusha
push
pop
andb
add
sti
lcall
adc
add
pop
adc
ficoms
dec
pop
shlb
and
inc
sub
lea
cmp
scas
mov
aas
in
je
cmp
jne
inc
cmpb
out
orb
pop
adc
and
pop
mov
inc
inc
and
adc
or
or
mov
add
mov
pop
jmp
pop
imul
and
clc
ljmp
sbb
dec
add
cmp
cltd
lcall
xor
xor
pop
notrack
xor
fmull
mov
syscall
jb
leave
push
adc
adc
jo
lea
jno
and
clc
adc
dec
popf
push
lea
cmpb
pop
mov
jns,pn
test
fbld
xlat
cld
sub
xor
add
addr16
es
jno
mov
in
push
sbb
movb
mov
ret
sbb
pushf
pop
addr16
loope
and
sbb
test
lods
and
or
cmpsb
dec
dec
pop
jp
pop
inc
sub
add
shr
add
mov
inc
dec
mov
and
xchg
adc
mov
pop
cmp
jmp
inc
add
mov
psubusw
outsb
mov
mov
jl
js
fidivrs
orl
fwait
adc
fsubs
popf
or
adc
push
jecxz
cli
jmp
cld
rolb
pop
pop
pop
and
dec
lock
adc
cmp
inc
stos
jo
cmp
xchg
mov
arpl
cmp
pop
sbbb
int3
pop
cs
jnp
sbb
mov
xchg
add
cmp
cli
adc
sub
or
cmp
inc
jb
or
mov
or
sub
or
rorb
pop
add
out
pushw
add
rol
xor
inc
data16
push
aas
inc
je
pop
mov
ret
add
je
jae
pop
or
sub
jecxz
lock
fs
cmp
jns
jo
cmp
adc
xchg
pop
ret
add
jmp
xor
and
pop
stos
loop
icebp
mov
and
rolb
shrl
pop
or
shlb
jbe
jmp
gs
iret
cwtl
xor
movups
inc
inc
mov
add
rorl
add
and
pop
cld
or
add
mov
jne
out
cld
mov
hlt
testb
je
inc
mov
cmp
clc
inc
xor
es
loope
or
cmp
adc
loop
or
js
ss
xor
push
push
bound
lds
mov
push
loope
xor
rorl
push
outsl
jne
nop
mov
push
pop
inc
cmpsl
daa
mov
dec
push
or
stos
inc
jle
or
xchg
stos
jge
adc
push
roll
cmp
test
xor
add
daa
cmp
stc
xor
fwait
add
pcmpgtd
pop
mov
dec
ficoml
pop
adc
lcall
stc
or
rep
jmp
addb
cmp
pop
or
jb
xchg
add
test
out
outsb
or
add
push
test
adc
adc
fs
cld
fnstenv
mov
or
lods
adc
inc
mov
mov
movsb
xor
pop
dec
add
sub
nop
inc
xor
xchg
mov
mov
aam
int3
push
jmp
jns
mov
inc
mov
mov
cmp
repz
call
cmp
repz
hlt
clc
clc
or
scas
shll
add
lock
sbb
jmp
ret
jecxz
sub
mov
fildl
pop
sti
and
xor
push
inc
and
dec
scas
mov
into
jl
cld
pop
and
sub
or
mov
fsts
out
xchg
daa
stc
sub
jnp
gs
addr16
nop
mov
mov
int3
rcr
add
out
add
mov
mov
inc
push
fisubl
add
push
fmull
out
mov
push
push
or
iret
repz
pusha
push
clc
subl
sbb
sbb
repz
adc
adc
cmp
repz
or
out
sbb
inc
pushf
or
aaa
push
add
andl
adc
lods
inc
icebp
test
or
mov
pop
shlb
sbb
mov
aam
xor
cmp
add
fildl
shlb
dec
call
push
sub
push
jae
mov
or
jmp
imul
or
leave
les
pusha
mull
mov
adc
mov
jae
sub
fs
push
add
pop
sbb
rorb
lock
sub
sbb
sbb
ror
imul
xchg
inc
sbb
loop
mov
or
mov
std
es
adc
daa
fwait
loope
movl
and
adc
cmp
adc
sarb
jmp
cmp
mov
xchg
adc
fiaddl
xor
mov
sarb
imul
inc
sbb
rorb
or
adc
cmp
or
hlt
dec
loope
or
xchg
push
inc
and
jp
mov
stos
xchg
and
or
fidivrl
dec
mov
sbb
sbb
dec
adc
nopl
add
fdivrl
jle
adc
push
adc
insb
pop
fisttpl
sub
add
aaa
pop
cmp
pushf
mov
cmp
sbb
push
add
lea
cmp
jl
jmp
jnp
andb
cmp
jne
push
adc
loopne
ds
or
add
mov
test
add
xor
aad
pop
fmul
cmp
jle
jne
xor
add
and
push
outsl
or
add
push
mov
xchg
mov
sbb
les
jmp
insl
clc
adc
pop
push
mov
loopne
cli
mov
sti
pop
inc
mov
cmpsb
mov
mov
inc
pop
ljmp
fdivs
mov
sarl
call
adc
jne
insl
push
jb
jle
pop
scas
pop
and
push
loope
xor
clc
ret
ja
pop
add
jno
ss
inc
mov
dec
or
repnz
and
bound
xchg
push
or
push
xchg
aaa
pop
mov
stos
jmp
sub
add
enter
push
xchg
test
fnsave
jne
pop
push
or
jmp
jb
fimull
loopne
rcll
fsubl
daa
push
into
and
pop
mov
pop
and
add
loopne
popa
fucom
sub
pop
fsubrs
and
shl
pop
andb
jmp
insb
mov
or
pusha
sub
repz
jg
pop
mov
lock
js
push
ljmp
in
adc
adc
push
push
sub
inc
xor
adc
push
or
fsubrl
or
inc
js
std
xor
je
or
sub
push
fs
pop
gs
adc
cs
mov
xchg
mov
add
shl
mov
sbb
rcr
inc
xor
inc
xchg
mov
loopne
ja
pop
jbe
lea
adc
sbb
dec
and
data16
cs
lock
push
inc
pop
dec
ss
jb
push
aad
aam
clc
jbe
add
and
insb
out
jb
sbb
imul
mov
popa
add
add
into
or
loopne
pop
mov
test
jne
test
cmp
xlat
stos
rolb
das
mov
sub
add
je
cvtps2pd
pushf
pop
mov
movsl
xor
es
pop
es
addr16
pop
dec
mov
push
or
mov
decb
sub
add
cld
data16
shl
pop
popa
and
jmp
js
hlt
inc
sub
adc
loopne
adc
fwait
push
or
sbb
dec
push
or
add
or
jb
or
pop
lcall
test
shlb
ret
data16
mov
and
inc
pop
pop
or
mov
add
out
shl
xorb
repz
lahf
mov
push
adc
cltd
rolb
adc
cltd
rorb
dec
frstor
or
repz
rorb
push
out
adc
or
repnz
add
mov
and
jle
daa
dec
jne
jmp
inc
pusha
stos
and
cs
pop
mov
dec
es
jne
mov
xorl
ret
setle
ret
xchg
pop
xor
enter
push
aad
lds
pop
bound
mov
insb
arpl
shr
jo
dec
lea
outsb
into
loopne
add
out
mov
push
cmp
jne
mov
push
cmp
repz
std
jne
es
jne
fstl
dec
call
aam
nop
add
inc
orb
ret
inc
incl
repz
mov
adc
jmp
std
xchg
std
mov
cld
cld
jmp
fildl
addr16
adc
in
adc
adc
inc
inc
inc
mov
out
pop
lods
push
test
xor
or
repnz
test
mov
mov
test
mov
out
push
xorb
shr
sub
dec
and
stos
repz
jns
pusha
sbbl
push
jp
popa
mov
arpl
lea
inc
cmp
or
test
add
inc
inc
add
adc
adc
mov
mov
add
or
adc
in
ds
pop
loopne
and
pop
pop
lds
es
or
pop
fs
data16
aaa
mov
movsl
in
movb
jmp
add
push
cli
push
mov
addr16
mov
mov
je
mov
mov
xchg
pop
jg
add
mov
dec
and
mov
or
sarb
dec
call
push
push
inc
test
and
lret
loopne
push
ja
outsb
loopne
out
jae
out
gs
or
dec
add
lea
mov
add
or
ja
daa
leave
cmp
push
xchg
das
pop
jo
and
xorb
pusha
pop
pop
pop
js
or
insb
sbb
jo
sbb
jno
bound
sarb
mov
jb
addb
imul
add
inc
mov
push
rcrb
call
push
jge
dec
mov
ljmp
in
les
ds
and
fmul
es
mov
jb
ljmp
or
adc
or
dec
xchg
pop
lea
int3
ret
aam
je
add
sbb
mov
sub
add
not
and
sub
inc
inc
mov
sti
and
mov
scas
xchg
xor
sbb
test
cld
sub
adc
xchg
adc
push
movsl
mov
push
xchg
js
sbbl
ja
bound
jne
pop
mov
ljmp
incl
loope
fcmovne
sar
stc
and
mov
inc
je
outsl
inc
cld
fistpll
lea
neg
mov
lcall
sbb
ret
add
xor
shl
scas
and
sbb
scas
mov
je
mov
add
mov
inc
cmp
jb
add
push
add
divl
in
cmpsb
hlt
pop
ret
gs
push
jb
or
or
ret
cld
into
xlat
adc
add
adc
jne
or
jne
outsb
outsl
pushf
shl
push
adc
pop
test
and
xor
dec
stc
addl
divb
in
xor
jo
and
out
jne
and
lret
mov
les
test
cld
or
ss
cmp
je
sahf
addr16
xor
and
fsubrl
sti
jns
aam
xchg
pop
addr16
and
push
mov
push
cmpl
xor
adc
adc
outsb
xor
and
lock
in
adc
mov
insb
dec
call
add
jg
xlat
loopne
add
mov
add
jle
pop
pop
sbb
es
test
pop
add
loopne
arpl
cmpsb
bound
mov
inc
jmp
cmp
inc
mov
add
sub
xchg
mov
adc
cmp
aam
xor
lret
push
ss
or
mov
adc
adc
pop
imul
cmpsl
mov
pop
add
push
cld
sbb
cmp
test
mov
and
je
vmovaps
sbb
roll
pusha
je
lea
sbb
dec
mov
and
xchg
shrb
sub
or
sub
jbe
push
add
cmp
outsl
fcomps
dec
push
rcrb
scas
and
sbb
mov
mov
push
adc
shl
cld
xor
sbb
stos
jno
inc
sbb
adc
sbb
sbb
xor
dec
in
or
adcb
mov
jmp
push
sbb
lcall
push
sub
jno
or
sbb
jmp
test
pop
xor
jne
mov
sti
rcr
or
lock
mov
inc
mov
dec
jne
mov
add
shufps
add
pop
insl
push
add
adc
insl
push
or
mov
enter
push
dec
dec
add
push
inc
adc
addl
mov
or
cmp
es
or
adc
sub
sub
mov
mov
popf
jbe
push
adc
nop
mov
insb
sbb
sub
pop
sbb
push
ljmp
jne
pusha
push
into
jl
or
test
imul
mov
movb
inc
jo
inc
sbb
lea
add
adc
or
adc
clc
test
enter
or
clc
scas
mov
bound
clc
mov
es
sbb
add
icebp
add
pushf
rorl
xor
ficoms
pop
cs
inc
pusha
mov
or
es
sub
dec
push
xor
xor
or
mov
inc
cmovns
in
rsqrtps
xor
inc
int3
push
es
sub
cld
or
push
mov
or
mov
or
cmpxchg
mov
sub
mov
cmpl
or
movsl
adc
pop
xor
or
das
adc
outsb
push
test
and
and
inc
sub
add
jmp
es
or
push
add
sub
mov
mov
inc
shlb
add
sub
loop
int3
fcomps
ret
push
or
sti
or
mov
int3
rcrb
cmp
push
or
adc
sbb
push
or
push
jp
push
jmp
xor
adc
loop
or
mov
jle
mov
rcrb
mov
jne
ja
btr
pop
cmpl
push
fwait
scas
dec
gs
mov
jge
or
or
gs
rcrb
jbe
inc
shrb
in
inc
dec
jae
adc
lods
sarb
in
loop
dec
push
push
aaa
mov
mov
push
data16
pop
addl
jnp
add
decl
cmp
pop
fisubrs
sub
jbe
mov
pop
push
hlt
cltd
pop
idiv
dec
test
xor
add
xchg
cmpb
sub
push
cmc
stos
scas
popa
push
mov
pusha
adc
rcrb
add
imul
dec
fisubl
jp
loopne
dec
in
dec
pop
popa
pop
mov
pop
test
sub
pop
aam
mov
test
movsb
add
dec
adc
in
dec
mov
pop
add
pop
pusha
sub
add
sbb
out
jns
jle
adc
or
repnz
fcomp
repz
add
or
add
push
inc
pop
loope
and
xchg
loopne
mov
mov
rolb
pop
and
js
stos
push
fcoms
jnp
jnp
test
mov
push
in
mov
inc
aam
jbe
and
lods
jp
rolb
or
jg
pusha
cmp
dec
mov
jecxz
inc
or
dec
mov
faddl
div
add
push
clc
adc
fs
enter
daa
mov
popf
inc
je
cli
dec
add
sbb
popa
in
dec
cmp
cli
call
movswl
push
aam
jmp
dec
je
add
or
cmp
inc
pop
je
push
or
in
fisubrs
sbb
add
jmp
sub
push
test
push
sti
xor
sti
jbe
mov
cmp
push
push
sub
push
lea
push
test
sahf
sub
dec
push
cmpsl
mov
jo
arpl
add
pop
inc
xchg
lcall
push
push
addr16
jne
mov
cmpsl
or
packuswb
add
dec
mov
xchg
inc
jne
jae
mov
in
push
repnz
xchg
dec
add
cmp
and
dec
xchg
cmovp
jns
jns
mov
or
push
add
sub
push
rolb
add
js
rorl
js
jbe
scas
cmp
mov
add
ja
out
pop
std
lret
adc
or
dec
jb
je
push
jmp
aas
lcall
mov
imul
clc
inc
dec
adc
or
mov
je
push
fsubrs
add
add
cmp
dec
repz
add
adc
idivl
mov
jmp
cmp
jae
stos
arpl
or
mov
push
mov
push
mov
sbb
subb
dec
dec
push
add
int3
inc
sub
mov
loop
and
decl
add
sub
dec
sbb
rolb
cmpsb
dec
cmp
pop
call
xor
lcall
adc
add
sub
je
or
or
dec
and
roll
and
or
mov
dec
xor
or
cwtl
add
imul
adcl
rorb
cmp
push
and
movsl
jb
jo
addr16
xor
push
pop
lods
pop
mov
decl
das
pop
jmp
lock
xor
mov
movsb
mov
push
pop
sbb
push
pop
jg
dec
shll
dec
movsb
inc
push
pop
sub
rolb
ret
push
adc
cmp
push
dec
xchg
mov
scas
cmp
adc
mov
add
into
cmp
lret
jnp
jo
push
push
add
sbb
push
inc
movsl
loopne
dec
lods
movsl
stos
sbb
mov
cli
insl
or
cmp
mov
ret
test
dec
insl
sarl
inc
xor
and
out
jnp
jns
add
inc
cmp
jne
fldcw
cmp
cmp
stc
mov
rorl
mov
int
imul
add
sbb
jge
insl
inc
shlb
pop
adc
push
lods
mov
cmp
shlb
mov
add
cmp
xchg
mov
inc
movb
call
and
testb
pop
inc
mov
sbb
mov
push
je
add
sub
shrb
fldenv
xor
jbe
add
and
fsubrs
xor
pop
sets
xchg
andl
sbb
mov
push
mov
jg
ds
enter
add
aam
cltd
cmp
popa
imul
mov
leave
cmpsb
mov
xorb
inc
ds
stos
std
test
xchg
sbb
jl
lock
xlat
cltd
adc
mov
sbb
orb
test
push
test
adc
cmpsb
aaa
jb
repz
add
cmpsb
mov
cwtl
clc
enter
pop
cwtl
loopne
mov
push
xchg
and
jmp
inc
and
jbe
hlt
mov
mov
je
sahf
xor
jl
jge
jnp
es
cli
add
icebp
adc
mov
adc
dec
pop
lret
movsb
sbb
and
xchg
sahf
rclb
mov
fmul
jo
mov
popa
lret
dec
rolb
sbb
es
inc
mov
jge
call
inc
mov
add
dec
pop
jp
or
insb
rol
es
ja
imul
cmc
mov
adcb
gs
push
cmp
pop
dec
out
or
insb
sub
dec
cld
jmp
add
push
mov
xchg
subb
push
mov
cmp
add
scas
test
pushf
ja
or
in
outsb
jbe
mov
rorl
inc
dec
call
xor
lock
dec
movsl
in
cmp
sbb
jmp
pop
inc
and
sub
sub
loopne
int
cmp
xlat
repnz
or
or
adc
fsubrl
add
push
clc
xchg
sar
imul
adc
xor
adc
je
into
lea
adc
mov
repz
test
loop
jp
inc
pop
enter
add
xchg
push
repnz
xchg
out
not
xchg
sbb
dec
lret
mov
xchg
repnz
jae
aad
mov
jne
mov
daa
out
push
leave
jge
pop
mov
out
push
push
and
add
imull
xchg
rolb
mov
stos
mov
lds
dec
incl
addr16
push
dec
inc
cmp
add
loop
sub
jmp
xor
jmp
push
pop
les
fisttpll
adc
je
pop
nop
and
inc
push
insb
nop
decl
mov
insl
adc
popa
push
pushl
rolb
push
rcr
loopne
inc
jl
call
aaa
inc
or
sbb
pop
test
mov
cmp
bound
push
xor
pushf
and
push
pop
cmp
out
daa
sbb
std
pop
push
or
je
mov
icebp
lret
in
and
or
jne
pop
repnz
int
mov
not
sar
add
fcmovbe
outsl
xchg
push
add
jle
mov
mov
and
jne
push
sbb
xchg
stc
mov
push
loopne
lea
or
fisttpll
mov
hlt
cs
push
ret
adc
mov
daa
mov
push
or
test
cmp
lods
addr16
push
jg
sbb
cltd
or
jmp
negb
push
adc
je
movsl
push
fldl
push
fstl
or
jo
cmpl
mov
xchg
int3
or
into
or
inc
sub
lock
rol
xchg
mov
int3
xchg
lock
hlt
aam
cmp
or
jns
icebp
stos
sti
subl
pop
jmp
lods
pop
add
push
shr
and
inc
cmp
or
cld
inc
push
push
add
adc
xchg
mov
cmp
push
pop
mov
mov
loopne
rcrb
sbb
sbb
das
push
lock
mov
add
add
inc
cmp
inc
inc
cmp
outsl
idivb
shlb
jb
popa
ret
outsl
add
mov
movb
jmp
out
cmpsb
popf
push
insl
xor
sub
std
add
aaa
add
add
pusha
inc
add
mov
mov
or
fwait
subl
shll
lock
adc
or
cmp
adc
mov
mov
add
or
mov
xchg
xchg
fstpl
xor
fistps
mov
mov
test
popl
int
lods
movsb
mov
or
mov
lods
movl
cmp
es
xchg
push
and
dec
sarb
xchg
mov
adc
stc
ds
out
mov
push
call
cmp
sub
push
push
int3
adc
push
xor
fdivl
ror
in
push
mov
dec
adc
jmp
sub
leave
sbb
loopne
inc
mov
andl
testb
loopne
add
push
dec
pusha
dec
popa
xor
pop
arpl
lret
loopnew
fcoml
sbb
lret
mov
or
pop
pop
popf
enter
shrb
les
add
push
out
imul
dec
popf
mov
cld
xor
inc
adc
jo
adc
and
in
xchg
pushw
clc
jno
insl
push
pushf
push
stos
or
insb
repnz
adc
cli
ret
mov
add
xorb
shl
push
mov
ret
pushl
jmp
ja
cmp
rcr
int3
int3
add
and
xor
sbb
dec
or
fsubrl
test
add
shr
pop
clc
fimuls
and
inc
dec
lods
sub
adc
push
lret
jge
movsl
pop
lea
push
mov
adc
jbe
push
inc
dec
cli
dec
push
fisubrs
hlt
jae
xor
sbb
inc
push
lock
or
pop
push
adc
or
sub
hlt
data16
sahf
mov
dec
out
mov
xchg
sahf
in
sbb
cmp
jne
jb
call
add
adc
sahf
addps
stc
rcrl
jo
mov
mov
ficompl
add
adcl
mov
jge
cmp
and
jg
or
push
nop
into
sbb
ret
cmp
test
outsl
dec
jmp
push
test
mov
xchg
ret
push
in
and
aaa
nop
in
pop
mov
shlb
xchg
lret
hlt
fdivrs
sub
sub
mov
popf
xchg
push
push
pop
sbb
fisubl
je
in
inc
call
call
stos
cs
lods
call
gs
or
pop
add
cmpl
imul
jl
lea
adc
ja
cmp
mov
dec
rcrl
push
cmp
pop
sar
pop
mov
fsubrl
sbb
xchg
push
or
inc
loopne
movsb
inc
mov
paddd
fcomp
add
xchg
loope
inc
jae
or
je
or
je
or
test
ds
enter
or
add
pop
cs
add
out
loope
rcll
int3
test
mov
adc
adc
or
or
mov
add
sub
push
imul
or
dec
ljmp
movsl
cltd
nop
imul
cmp
sbb
jo
stc
lock
or
ret
mov
lcall
inc
popa
test
or
xchg
loope
insb
xchg
pusha
sub
adc
sbb
pop
pop
mov
mov
js
add
or
add
addb
push
xor
imul
imul
and
dec
jae
adc
movsl
or
jns
rcrb
add
mov
call
out
pop
pop
pushf
dec
mov
lcall
push
mov
jb
sub
adc
rcll
pop
push
rolb
mov
in
shll
cwtl
mov
xor
dec
movsl
jmp
mov
into
out
dec
test
lea
arpl
sbb
xor
sub
cmp
mov
pop
mov
add
jo
or
dec
and
rorb
in
push
sbb
or
xor
mov
es
add
lret
pop
mov
testb
sub
sahf
inc
push
repnz
aas
add
push
insl
sub
loopne
cmp
lods
ret
loopne
ds
cmc
pushf
sub
les
loopne
test
add
cmp
jmp
mov
push
sbb
sub
mov
inc
mov
push
add
dec
mov
or
or
iret
xor
or
loop
push
jmp
mov
pop
lret
inc
lods
xlat
mov
pop
dec
sbb
mov
dec
mov
mov
mov
fsubrs
xchg
lahf
xor
jns
push
sbb
je
test
sub
push
jo
call
sbb
mov
mov
mov
stos
pusha
je
or
sub
mov
test
popa
shrl
insl
loopne
popa
xor
push
mov
cwtl
xchg
gs
popl
pusha
and
nop
dec
shlb
adc
movsb
jb
xchg
lds
lds
ficompl
shl
cmpsl
add
push
add
mov
daa
in
scas
ljmp
addr16
xchg
hlt
jmp
ja
fists
pop
jle
imul
aaa
andb
pop
push
out
mov
rcll
or
pop
or
mov
nop
cmp
pop
lret
add
mov
dec
pop
xor
cmp
sub
push
sbb
mov
andb
jne
movsl
push
push
push
jbe
add
pushf
iret
sbb
inc
mov
ud1
cmp
or
mov
das
push
dec
sub
mov
pushf
and
jae
imul
pop
emms
mov
add
cmp
sub
push
insb
arpl
xchg
es
out
push
push
into
in
push
pop
test
jecxz
bound
jb
shl
je
and
inc
mov
ja
sub
xchg
sub
cltd
push
xor
dec
add
add
adcl
push
push
orb
neg
jne
push
or
icebp
xchg
jnp
or
ds
xlat
bndldx
jge
popa
loop
daa
mov
or
outsl
mov
or
popa
lea
lcall
inc
adc
and
stc
cltd
push
push
push
xchg
rcrb
jmp
repnz
sbb
cmp
sahf
fimull
mov
dec
jmp
sub
sub
inc
cmp
sbb
fcompl
cmpb
je
shlb
or
add
cmp
in
movsb
aas
mov
es
cld
mov
movsb
sub
clc
int
and
xor
adc
sub
push
jmp
push
mov
iret
xor
sub
push
fcoms
jne
dec
push
mov
mov
jo
shrl
mov
or
xchg
test
jne
jmp
and
sbb
adc
sub
pop
mov
jg
push
xor
cmp
inc
push
cmp
jp
mov
sbb
adc
out
mov
mov
movsl
imul
xorl
jo
sub
add
dec
stc
adc
lahf
mov
and
xor
cltd
fst
add
shlb
jg
jmp
adc
xchg
pop
jmp
adc
mov
inc
xor
mov
xorb
je
gs
mov
sbb
jle
in
out
mov
pop
mov
call
or
clc
ret
xchg
mov
imul
mov
sbb
push
mov
pop
xchg
addl
and
loopne
ret
nop
loop
nop
cltd
push
into
repz
pop
lcall
or
outsb
movsl
leave
adc
xchg
or
and
rcrb
cld
inc
popf
je
push
push
pusha
outsl
mov
adc
pusha
jecxz
notl
int3
jo
out
fisttpl
or
mov
mov
mov
daa
test
test
mov
or
pushf
rcrb
and
cmp
les
dec
jb
inc
push
xchg
call
cmp
mov
call
adc
or
and
sub
adc
xchg
popf
lods
xchg
adc
out
addr16
mov
or
adc
incb
test
and
jb
into
mov
aam
adc
mov
pop
sub
jae
sub
and
add
cwtl
pop
push
sbb
loope
test
mov
lock
psubsb
jb
in
push
hlt
ret
inc
addl
call
xchg
push
out
lret
sbb
movsl
and
gs
fcoms
jmp
dec
jle
adc
mov
pushl
stos
adc
lahf
out
outsl
ret
ficoms
add
push
mov
enter
jmp
xchg
cli
inc
cmpsl
or
push
cmpl
mov
jae
inc
adc
xchg
xchg
xchg
fucomi
out
loopne
push
loopne
loopne
pop
lods
gs
xchg
stc
mov
mov
sub
ljmp
imul
jecxz
mov
and
sub
pop
out
and
pop
sbb
add
dec
jl
xor
inc
xchg
and
cli
das
add
jo
inc
and
mov
jb
jb
jne
lds
add
jne
add
jbe
shlb
jbe
pop
sbbl
insb
add
jle
int3
add
leave
pop
std
pop
jbe
and
and
nop
xorb
pop
cmp
je
push
mov
clc
pop
push
movsb
add
subl
mov
sub
push
inc
sarb
mov
or
dec
test
ds
push
test
adc
cmove
push
inc
sub
outsb
cmc
fnstenv
sbb
enter
sar
or
sub
loopne
or
mov
scas
or
mov
movsl
test
data16
in
xchg
push
fwait
xchg
push
jns
jecxz
fcompl
add
push
cmp
inc
or
lret
fcoms
jl
inc
cmp
inc
mov
jne
xchg
inc
sbb
pushf
add
psadbw
mov
xor
jb
loop
fdivr
lcall
lods
popa
adc
imul
add
pop
and
mov
pop
cmp
mov
test
loopne
arpl
icebp
pop
xchg
loope
movsl
cmpsl
inc
push
or
inc
js
push
add
push
ret
fstl
sbb
lret
pop
jl
jl
xor
cltd
mov
ficoms
dec
sub
test
mov
ret
add
stos
test
cmpsl
and
ret
adc
ja
clc
sub
inc
xor
test
mov
gs
mov
lock
lock
and
jae
push
leave
xchg
mov
or
int
xor
mov
in
rclb
xchg
imul
or
push
sbb
pop
imulb
sbb
loopne
jecxz
jo
sub
and
cld
mov
daa
les
sbbb
cld
dec
xchg
xchg
or
arpl
push
bound
inc
inc
jecxz
sub
add
into
xor
call
push
dec
and
in
hlt
dec
add
xor
jmp
cmp
pop
xor
cmp
add
movswl
dec
lret
sbb
ja
gs
ds
and
and
pop
or
hlt
loope
mov
rcl
sub
inc
roll
pop
push
add
addb
rclb
call
mov
lods
lret
test
xchg
ss
ljmp
sub
cmp
clc
sbb
push
outsb
push
dec
rcrl
testb
xor
ss
mov
test
dec
ret
add
jmp
andl
popa
sub
xor
addb
cmc
pop
cmp
pushl
cmpl
das
pop
pop
jg
sbbb
rcrb
sbb
jmp
pop
ja
dec
mov
aad
dec
setb
dec
popf
in
xchg
dec
subl
dec
mov
mov
add
mov
test
test
push
cmp
mov
int
js
call
pop
xchg
les
push
rcrb
bound
outsl
frstor
bound
mov
js
ret
mov
mov
add
test
mov
lds
adc
pop
addr16
popf
and
pop
ja
inc
cs
xor
fistpll
sahf
dec
xor
xor
inc
mov
shll
outsb
test
mov
or
lods
ficoml
add
sbb
lea
push
insb
test
mov
xchg
jp
scas
cltd
fsubs
aas
repz
cltd
scas
pop
daa
pop
jb
hlt
push
add
mov
bnd
xchg
push
inc
int3
sub
aas
insb
jne
jp
in
sbb
xchg
or
pop
and
pop
mov
insb
jg
adc
cmpb
fcmovb
lods
xor
daa
daa
daa
fnsave
cmp
daa
daa
and
aam
pop
jb
push
rcrb
out
shrb
push
repz
or
cmp
repnz
loope
ret
mov
lea
int
in
sbb
mov
jb
mov
cwtl
leave
mov
xchg
mov
adc
ret
cmc
mov
adc
push
enter
fildl
adc
movsb
xor
ja
mov
cmpsl
jb
mov
push
xchg
xchg
outsl
fisttpll
hlt
js
add
shrb
in
je
jns
mov
mov
sub
push
cwtl
daa
jns
inc
xorl
inc
pop
shlb
cmpsb
inc
sub
mov
movsl
in
out
jnp
push
repnz
jno
bound
or
mov
js
push
jae
cmp
cmp
add
inc
push
test
loopne
int
stc
lods
outsl
cltd
add
mov
mov
movsl
jmp
loop
addr16
push
in
test
std
lods
orl
pop
lea
dec
mov
pop
test
add
clc
add
jne
and
inc
mov
outsb
or
push
pop
xchg
xchg
dec
popf
jecxz
insl
fs
push
push
loopne
inc
or
aas
inc
rorl
push
pop
push
mov
jmp
loope
jg
fcoms
lret
cmp
pushf
push
into
inc
push
mov
scas
adc
lods
lea
sbb
pop
push
lods
or
push
mov
sbb
inc
aas
sbb
inc
inc
pop
aaa
mov
lret
jae
sub
add
loopne
pop
and
pop
mov
pop
enter
jnp
xchg
daa
push
rorb
dec
push
add
pop
fdivrl
lods
jns
and
dec
nop
out
sub
cmp
cmpsb
ret
faddl
adc
aam
cmpsl
add
fs
and
xchg
sub
xchg
sbb
das
cmpsl
lcall
aam
pushf
or
cmpsl
imulb
sti
daa
pop
mov
arpl
or
sbb
dec
jl
mov
cmp
je
pop
add
sbb
cmc
fst
outsb
push
andb
mov
push
scas
cmpsl
stc
cmp
dec
test
lret
xor
mov
jg
out
xchg
inc
mov
add
inc
fidivs
fxch
or
loope
xchg
leave
adc
push
xor
mov
mov
or
xchg
sub
sub
mov
insb
mov
inc
jo
pop
rcll
pop
or
je
sbb
lods
inc
inc
lret
xor
pop
push
jmp
mov
mov
or
testb
push
add
sbb
adc
mov
cmp
jmp
add
lds
movsl
pop
add
dec
iret
jge
std
es
add
add
or
cmp
and
and
sub
inc
add
sub
sub
aaa
dec
xchg
cmpsb
xor
rclb
jo
sbb
dec
insl
xchg
rorl
ret
xchg
negb
pop
push
sbb
add
cs
xchg
add
jl
sbbb
sub
ret
and
or
add
push
sub
mov
adc
or
lock
push
sbb
orl
rcll
jnp
out
lods
lret
push
out
adc
sarl
mov
adc
mov
and
hlt
add
sbb
push
add
or
popa
or
mov
sbb
push
dec
shll
and
fmull
inc
jo
dec
add
loopne
mov
or
jecxz
test
mov
jno
push
mov
push
popf
out
cli
mov
enter
push
push
mov
shrb
shrl
xchg
shlb
mov
inc
add
and
mov
jbe
and
cld
ficoms
push
xor
adc
arpl
inc
mov
mov
push
inc
inc
cld
pop
jae
add
dec
and
loopne
dec
jge
lret
filds
orb
mov
sti
xchg
dec
dec
mov
mov
sbb
pushf
adc
mov
xchg
insb
mov
in
leave
sub
mov
cmp
call
lea
cmp
ja
mov
sbb
sbb
and
cld
jmp
pop
mov
movsl
or
pop
lahf
push
dec
push
pop
ja
fcomps
clc
mov
jg
je
test
ja
std
sbb
cld
xchg
scas
mov
pop
mov
adc
push
movsl
inc
add
add
cmp
and
iret
add
jno
mov
dec
mov
mov
push
cmpb
je
lods
xchg
jmp
mov
shll
xor
pop
jge
mov
cmp
jne
movl
fisttpll
addb
inc
std
jne
subb
jmp
sub
insl
popf
xchg
and
jmp
jo
or
pop
rolb
push
and
add
pop
lods
fwait
mov
push
mov
mov
add
mov
inc
pop
lcall
shrb
xor
inc
shl
into
std
mov
in
push
jmp
lock
sbbb
jae
xchg
and
enter
test
jge
scas
aas
rolb
jnp
jae
cmp
call
sbb
lods
shl
jne
xchg
sbb
pop
inc
push
leave
inc
clc
add
imul
loopne
aaa
or
jmp
inc
in
leave
add
cmc
std
std
mov
mov
cmp
lret
add
pop
movb
mov
jo
inc
add
mull
xorb
push
aas
pusha
les
aam
push
sti
dec
sbb
mov
xchg
and
pop
orb
xchg
fs
sub
dec
jne
inc
psadbw
inc
stos
addr16
scas
dec
jle
sarb
rcrb
push
mov
test
inc
jbe
mov
or
dec
jne
push
scas
andb
or
push
icebp
lret
addr16
jnp
cmpsl
cmp
into
xor
nop
push
stc
rcll
adc
jo
adc
mov
pop
daa
pop
cmp
pop
lret
test
adc
or
stos
and
cmc
xchg
jge
cmp
push
and
lcall
scas
pop
pop
pop
add
ret
push
rcrl
dec
or
cmp
add
pop
push
lret
sti
xlat
testb
insb
ljmp
add
xor
and
dec
mov
or
xor
clc
add
sbb
into
dec
out
or
cmp
inc
jmp
jmp
cmp
dec
sbb
mov
mov
jmp
add
ret
inc
jo
mov
cmp
adc
pop
add
fwait
jno
es
mov
jmp
popf
jmp
or
cmp
pop
aaa
xchg
add
lods
andl
ljmp
std
and
sbb
ljmp
fwait
jb
fisubl
and
push
fs
mov
shrb
fimuls
or
clc
xor
in
mov
mov
aaa
cmpl
ret
dec
dec
cmp
adc
addb
movsl
sub
mov
out
jmp
inc
xor
adcb
sbb
adc
leave
clc
icebp
and
ret
je
jp
jbe
sarb
pop
cmp
lods
or
pop
sbb
mov
imul
inc
mov
cmpsb
movsb
jnp
into
sbb
data16
mov
inc
inc
sbb
sub
add
mov
in
sub
and
sbb
inc
inc
cs
push
mov
xlat
cmp
cwtl
daa
sbb
adc
ljmp
sbb
inc
faddl
or
bound
mov
cld
inc
add
mov
add
jns
dec
jge
mov
cmp
bound
mov
push
and
sub
cmp
mov
push
sbb
inc
out
cmp
test
mov
xchg
push
sbb
pop
rcll
pop
add
inc
and
sub
add
ss
outsl
add
add
rcr
cmovp
pop
pop
mov
jmp
pop
xor
lods
push
dec
jb
add
dec
ss
or
or
and
dec
mov
mov
push
or
mov
mov
mov
jno
lods
push
push
push
pusha
fsubr
mov
mov
push
pop
lahf
cltd
and
push
pop
or
push
mov
filds
addb
data16
add
stos
sub
or
and
push
jg
sahf
adc
jno
mov
inc
shlb
dec
sbb
scas
movsl
push
insb
pop
arpl
adc
sbb
pushf
adc
add
cmp
or
pop
dec
rolb
test
sbb
push
push
ds
add
push
dec
push
sub
test
adc
mov
out
fnstenv
not
lock
sbb
pop
iret
push
adc
in
xor
stos
clc
mov
and
sub
sbb
sbbl
enter
adc
loop
cmp
dec
jl
jle
sbb
pushl
xchg
pop
jecxz
dec
mov
dec
pop
insb
bound
xor
cmpsl
push
sbbl
arpl
xchg
jle
or
mov
mov
insl
jg
mov
push
xor
mov
push
fnstcw
enter
or
xor
push
rorb
mov
pop
jo
les
pop
xchg
push
jo
cmpl
leave
test
push
adc
pop
ds
fucomp
hlt
cmp
add
xor
sti
adc
cmp
mov
jae
or
lret
xchg
loopne
data16
sub
xor
stos
add
pop
xor
pop
push
or
xchg
mov
mov
inc
jne
cmp
sub
stos
mov
dec
and
add
loope
out
pop
mov
ljmp
pop
sub
movsb
aas
es
sub
loopne
or
aam
addb
mov
inc
js
sub
jmp
jmp
vmovd
inc
inc
add
push
pop
aam
jmp
mov
rclb
pop
cs
sub
mov
rcrl
or
xor
sub
mov
incb
push
push
lock
jg
loop
shr
je
insl
sbb
add
inc
adc
push
sub
push
pusha
lods
loope
scas
jo
mov
dec
jne
shlb
or
sub
add
jg
adc
divb
xor
ret
add
lods
out
sub
jne
push
or
or
cli
pop
pop
ret
in
xchg
rcrl
push
mov
bound
add
cli
shr
add
sbb
inc
push
mov
aam
clc
mov
xlat
loop
ret
and
adc
xchg
dec
popf
adc
lods
outsb
adc
adc
add
push
adc
mov
push
mov
dec
mov
shll
enter
mov
and
push
sbb
mov
insb
aaa
call
movsb
push
adc
jo
ja
add
xchg
pop
mov
and
rcrb
push
add
lret
iret
nop
lret
dec
or
xor
dec
jmp
add
add
mov
dec
push
or
popl
fsubrl
add
cwtl
sbb
test
inc
sbb
mov
insb
push
call
sub
rcl
repnz
add
sub
in
mov
arpl
neg
in
jno
xchg
rcr
mov
les
fbld
jmp
and
das
cmp
mov
push
mov
rorl
dec
add
and
sbb
lret
test
add
sbb
pusha
test
add
push
xchg
push
subl
pushaw
iret
in
call
or
sbb
or
pop
or
stc
loopne
and
xor
icebp
int
xchg
add
jmp
decl
js
jmp
mov
mov
frstor
adc
aam
daa
jns
pop
js
and
push
add
lock
push
sub
xchg
jne
lea
xor
xor
adc
dec
dec
push
repz
repz
pop
push
jnp
iret
mov
int3
fcoms
mov
je
mov
adc
mov
ss
cwtl
mov
jne
push
adc
out
add
fs
cmp
jecxz
push
in
jb
push
inc
and
jle
mov
sbb
and
inc
adc
loope
inc
pop
cmp
in
je
push
cltd
jmp
inc
faddl
inc
sbb
stos
and
push
sar
push
jmp
test
add
aaa
xor
jmp
rcr
jg
xchg
and
ret
and
push
push
test
xor
fstl
jmp
sub
rol
es
or
mov
xor
cld
jmp
mov
test
cld
divl
adc
mov
cmp
je
dec
mov
inc
pop
fstps
pop
xor
add
mov
jne
lea
mov
shr
std
mov
les
mov
push
mov
shll
add
sti
je
jmp
bound
shl
pop
jo
add
sbb
or
inc
cmpl
shlb
mov
xor
adc
sbb
xchg
loop
ret
pop
xor
lahf
mov
xchg
pop
ret
xchg
ds
or
xchg
mov
pop
mov
sbb
jne
mov
pop
js
mov
sub
push
addb
dec
daa
je
add
test
das
xchg
int3
mov
repnz
std
mov
lods
std
test
das
lret
call
pop
xchg
xor
mov
adc
les
or
incb
lret
je
or
jp
stc
test
add
push
scas
jno
cmp
addr16
adc
stc
mov
mov
or
out
xor
ds
push
cmp
test
mov
xchg
cmp
std
push
push
test
sbb
xor
shrl
ret
mov
add
pop
rol
gs
mov
or
notb
add
cmpl
add
or
add
icebp
cmp
and
popa
mov
jl
xor
push
popa
cmp
mov
test
mov
rcl
mov
sbb
sub
sub
dec
cmp
inc
sub
aad
pop
and
or
mov
jne
cmpb
ret
add
jl
in
cmp
inc
xor
mov
test
outsl
ss
js,pn
pop
mov
adc
and
xor
shlb
pop
jge
lds
cwtl
adc
in
test
arpl
inc
push
out
repz
mov
pop
mov
xchg
dec
je
push
or
push
or
cli
and
out
xchg
mov
mov
jecxz
movsb
popf
test
cmp
and
movsb
jb
stc
mov
push
adc
loopne
xchg
shrl
dec
or
or
loopne
dec
fxch
leave
movsb
ret
das
loope
jg
mov
mov
shll
ret
and
sahf
cmpsl
aam
inc
pop
sbb
and
lods
jge
push
pop
aam
es
mov
jmp
mov
sub
repnz
enter
leave
loopne
mov
cmp
add
test
adc
and
adc
jne
cltd
test
fwait
or
jo
fwait
sub
fwait
cmp
mov
xor
fwait
mov
lcall
out
js
sbb
insb
sub
xor
add
or
inc
lcall
loopew
mov
scas
or
adc
sbb
loope
jecxz
inc
fcmovne
push
sarb
nop
mov
enter
loopne
popf
rcrb
loopne
mov
mov
pop
mov
push
sub
adc
sbb
dec
push
cmp
je
ret
scas
inc
cmp
stos
sbbb
loope
sub
mov
fstl
push
push
test
push
addb
jge
or
xchg
lea
push
adc
or
pushf
stos
mov
mov
add
xchg
xchg
loope
js
and
movsb
loop
mov
imul
lods
or
dec
or
jno
mov
out
adc
adcb
xor
push
xor
arpl
fstl
adc
xor
push
add
decb
test
adc
fcoms
neg
ret
arpl
push
cmpsl
cmpsl
ds
inc
mov
cmp
xchg
das
movsl
leave
cmpl
repz
loopne
and
mov
or
xchg
lahf
mov
lahf
inc
repz
cmpsl
test
inc
xchg
fcomp
bound
xchg
subb
fidivrs
or
add
inc
jmp
dec
cs
or
shlb
das
in
jbe
jmp
sti
mov
xchg
mov
add
pusha
in
roll
dec
sub
insb
fldl
dec
jno
or
sub
sbb
jmp
dec
adc
jnp
dec
add
mov
js
out
sub
pop
mov
orl
jle
mov
jmp
jmp
mov
xchg
or
pop
or
lds
mov
mov
fldpi
sbb
aaa
dec
mov
je
fcomps
push
push
jno
adc
sbb
mov
sub
sbb
adc
sti
jne
cmp
hlt
push
nop
add
sub
or
sbbl
mov
jnp
popa
outsl
pop
pop
lock
dec
push
add
je
add
inc
imul
popa
adc
dec
pop
loope
inc
daa
pop
mov
mov
rolb
push
cmpsb
jp
mov
pop
inc
or
js
subl
int
push
fdivrl
rolb
sbb
pop
aam
lods
inc
push
xchg
and
sbb
pop
fdivs
cmp
lea
rorb
sbb
pop
mov
lea
pop
or
pop
out
rolb
aas
loope
xchg
jno
call
xchg
jl
movsb
mov
stos
mov
pop
xchg
xlat
loope
pop
repnz
ret
pop
leave
shll
lods
lock
aas
pop
add
mov
sub
xor
arpl
outsb
fsubr
dec
aas
pusha
aas
and
js
scas
movsl
push
out
insl
jne
scas
adc
into
shl
lods
outsb
insb
mov
jb
inc
aad
mov
pop
jo
xlat
adc
fsubrs
inc
mov
inc
inc
inc
inc
inc
inc
inc
cmp
dec
xchg
jno
sbb
jo
std
call
xor
push
mov
nop
mov
rol
add
sti
inc
es
mov
cmpsl
inc
scas
dec
movsb
add
in
and
aad
cmc
push
inc
test
inc
ss
mov
sub
sub
jecxz
cmp
loopne
dec
movsb
adc
and
xlat
enter
decb
cld
push
mov
int3
push
dec
cwtl
cltd
nop
and
inc
mov
or
cwtl
lods
lods
cmp
push
and
fimuls
xor
cmp
movsb
jb
dec
test
test
leave
leave
mov
sahf
pop
mov
cmp
aaa
jbe
addr16
test
inc
cwtl
nop
add
dec
xchg
pop
inc
dec
mov
adc
aaa
repnz
xor
push
cwtl
pushf
xor
adc
nop
xor
mov
pushf
nop
inc
cmpsb
inc
push
pushf
cwtl
nop
inc
dec
mov
test
divb
int
shr
sarb
or
hlt
stos
sbb
xchg
pop
sbb
push
out
lcall
clc
outsl
add
sub
addr16
sbb
mov
mov
mov
ret
ds
or
xor
je
sub
daa
ja
adc
or
test
sbb
pusha
xor
aam
or
inc
or
add
iret
sbb
add
mov
rcrb
xor
adc
rcll
fmuls
test
xor
mov
iret
push
jmp
ficoms
mov
ja
add
int
jmp
jnp
dec
xor
icebp
sbb
add
dec
fsts
dec
jno
sti
add
pop
mov
ret
movsl
jecxz
sti
mov
add
cmpsb
or
add
shlb
and
inc
cltd
les
lock
popa
insb
loop
jo
and
and
or
hlt
mov
push
sbb
rcrb
adc
and
add
push
sahf
test
add
pop
push
ljmp
add
adc
loope
shr
je
ret
jge
or
push
push
dec
adc
push
and
loope,pn
xor
dec
push
ds
out
out
outsl
inc
or
jbe
jle
lahf
out
adc
jo
cmp
iret
lea
mov
jo
in
int3
pop
fbld
lea
lea
inc
out
in
push
stos
and
shrl
test
mov
xor
dec
cmp
xor
movsb
pusha
jp
insb
mov
push
negl
ret
mov
mov
shrb
lret
ret
mov
ds
shr
dec
arpl
sbb
xchg
sbb
cmp
or
mov
test
lret
and
adc
loopne
adc
xchg
cmp
xorl
xchg
sbb
xchg
inc
add
jne
repz
rorl
leave
add
lret
push
test
sidtl
and
fsubrl
add
scas
mov
divb
or
push
sbb
push
dec
and
dec
dec
sub
lret
add
ds
sbb
bts
dec
jmp
hlt
cs
inc
imul
push
fdivs
xchg
les
mov
popa
dec
arpl
or
adc
jne
inc
adc
and
cmp
fmull
cmp
scas
idivl
inc
sub
xor
scas
inc
les
add
pusha
call
push
cmp
rol
mov
push
mov
pop
out
add
xor
and
sbb
sub
mov
mov
ficomps
cmp
jne
loopne
mov
sbb
inc
mov
add
pop
or
mov
shr
jle
andl
or
outsb
sbb
stc
mov
fs
clc
sub
fs
jmp
cmp
xchg
subl
sbb
pop
cmp
lea
ds
xchg
sub
scas
or
push
cmp
aam
xor
mov
fs
rcrb
xor
pop
rcll
sub
sahf
pop
adc
sbb
andb
jmp
adc
jae
ja
adc
mov
lods
sbb
mov
mov
rcll
jmp
inc
or
arpl
push
out
push
mov
add
push
fists
or
sub
or
adc
icebp
je
into
inc
or
push
movsb
inc
push
imul
filds
sbb
jb
gs
jmp
adc
andl
push
jbe
add
gs
jle
xchg
add
inc
sbb
mov
and
xor
pop
add
incl
dec
and
sbb
pop
jne
xor
adc
aad
in
int3
dec
add
stc
inc
test
sub
xchg
call
dec
in
sar
dec
add
xlat
inc
aam
xor
adc
push
sbb
pop
and
popa
add
xorb
inc
cmpsl
jb
cwtl
sarl
cld
enter
ficompl
nop
out
or
dec
pop
dec
and
neg
jae
mov
dec
or
in
push
add
sub
fidivrl
movsl
adc
incl
mov
inc
add
cs
je
cmp
stos
insl
pop
adc
mov
mov
mov
and
dec
cld
sarl
imul
popa
mov
pop
pop
jle
in
shll
cld
add
push
dec
test
sbb
or
pop
pop
insw
push
mov
and
es
and
inc
imul
ds
and
loopne
cmc
pop
out
jo
xor
inc
std
shlb
fcomi
js
sbb
mov
or
decb
outsb
inc
mov
xchg
or
xor
push
icebp
add
jae
incl
push
and
int3
jae
lea
jbe
clc
pop
add
add
push
xor
jnp
inc
mov
orl
andl
pop
mov
rcrb
les
movsb
xor
aaa
popa
adc
cmp
xor
inc
push
pop
cmp
push
je
cltd
pop
sarl
lock
sub
lea
push
out
test
inc
or
mov
loop
and
pop
dec
call
jge
inc
push
pop
push
dec
xorb
jecxz
lea
xchg
or
jae
lock
movw
insl
add
dec
add
pop
movb
xor
dec
das
xchg
pop
dec
inc
ss
cmpl
push
sbb
call
push
xchg
call
lret
sbb
fiadds
ret
loope
add
jl
sarl
fnstsw
mov
mov
addl
fbstp
daa
faddl
add
or
aas
cmp
or
push
aas
js
rorb
and
into
sub
shll
shlb
cltd
xor
jl
ljmp
hlt
jb
loopne
aam
lret
pop
push
and
subl
fmuls
xchg
nop
sbb
cmp
pop
ret
cmp
clc
add
xor
jmp
lods
dec
cld
xchg
add
or
sbb
mov
add
mov
inc
inc
jo
sbb
dec
cmp
adc
mov
repz
xchg
out
jmp
xor
push
orb
jmp
movb
rorb
pop
jmp
lea
push
adc
repz
sub
push
insl
arpl
inc
aaa
xor
mov
mov
js
les
xor
adc
in
insb
lock
je
push
mov
movl
cld
call
ficoml
jmp
push
add
xor
idivb
mov
add
dec
and
outsb
aam
cwtl
cwtl
or
add
imul
mov
orps
pop
test
adc
sti
or
shlb
push
push
add
mov
and
jnp
sub
push
paddusb
repnz
lock
fstl
and
test
jne
out
repz
loop
sbb
or
and
push
lret
pusha
pusha
imul
test
jb
jae
pop
dec
shrl
ret
mov
pop
pushl
jnp
lods
int3
sbb
pop
push
nop
popa
out
sub
push
lock
jecxz
or
sub
lea
daa
pop
inc
sbb
movsl
xchg
enter
in
sub
push
ret
rcl
popf
imul
arpl
fisubl
push
and
in
jb
pop
sbb
addr16
lret
add
push
add
jnp
fs
enter
cmp
cmpsb
push
cmp
adc
sarb
xor
add
stos
in
cld
cs
mov
fsubrp
push
shlb
xchg
inc
inc
adc
lahf
lret
jae
mov
inc
sub
sahf
lret
pop
inc
dec
inc
pop
dec
dec
dec
popf
cmpsl
repnz
push
adc
mov
fs
insb
add
in
inc
jb
fnclex
push
sbb
sbb
add
fldl
movaps
pusha
push
lock
jmp
addr16
add
inc
cli
push
add
or
ret
imul
ror
cmp
jne
lea
push
leave
sub
mov
mov
inc
or
push
pusha
push
push
lods
test
inc
ficoml
sbb
adc
jle
xchg
or
lret
sbb
fdivs
mov
dec
aaa
enter
jge
inc
push
sbb
cmp
add
or
je
xchg
test
push
add
sub
sbb
jb
lds
xchg
push
xchg
leave
clc
sti
cmp
stc
jmp
nop
xchg
idivl
ljmp
mov
cmp
xor
inc
fistpl
sbb
js
loopne
xor
daa
es
push
lea
jecxz
ret
or
or
xor
and
ret
fwait
loopne
mov
lret
mov
jle
jns
shlb
movsl
or
scas
mov
movsb
stos
or
js
sbb
cmpsl
mov
aas
clc
inc
rolb
and
or
jne
or
push
aad
cmpsb
lock
dec
mov
lret
xchg
fildl
push
subb
adc
pop
lea
mov
inc
test
mov
lock
cltd
or
out
jle
and
sbb
fistps
les
ret
enter
rcrl
add
ret
sub
xchg
add
jmp
fsubs
or
aam
scas
add
jg
adc
out
pop
mov
ret
mull
lsl
jmp
push
pop
cmp
jns
push
inc
shr
rcr
shr
rcr
or
mov
div
pop
dec
test
std
mov
pop
jb
cmp
or
cmp
or
repz
in
xor
and
adc
push
inc
add
inc
lret
ja
cmp
iret
pop
ret
adc
sbb
inc
iret
je
test
adc
jbe
je
mov
push
aaa
stos
or
cmc
inc
in
orb
sbb
mov
inc
mov
out
or
xchg
or
mov
pusha
pop
frstor
mov
mov
lahf
or
jge
cmp
add
test
sahf
call
mov
xchg
mov
dec
nop
adc
mov
dec
les
xchg
cli
and
adc
inc
inc
and
or
pop
jmp
dec
sbb
sub
mov
push
repz
movsb
mov
insl
or
sub
iret
xor
sbb
or
loopne
cmp
sbb
mov
clc
out
test
cltd
and
in
sbb
and
mov
nop
shlb
add
and
add
sbb
out
fists
xor
pop
lret
xor
sbb
add
cmp
mov
sub
inc
adc
daa
xchg
or
ljmp
jne
push
add
and
xor
je
xchg
arpl
pop
inc
cmp
mov
or
rorl
rorl
inc
add
jbe,pt
or
mov
test
push
dec
pop
dec
mov
loope
loope
aas
dec
adc
add
addl
xor
add
leave
or
add
add
mov
dec
enter
jl
testl
addr16
inc
pop
outsb
cltd
cmp
mov
in
dec
lods
mov
push
and
pop
lret
ja
lods
fadds
cld
dec
or
sub
sbb
lahf
ss
dec
mov
movsb
add
cwtl
push
lods
sub
cmp
outsb
mov
loop
les
loope
xor
push
cmp
sub
pusha
xchg
xchg
ss
popa
xor
addr16
mov
mov
cmp
dec
inc
push
mov
ds
add
ret
pushf
in
lds
xor
and
or
or
iret
jo
std
nop
call
imul
insb
loop
nop
cmp
mov
sub
cmp
ret
push
je
mov
mov
adc
sub
inc
and
jmp
fistpl
push
mov
aas
test
add
int3
sub
aad
orl
testb
jmp
adc
outsl
lods
inc
xchg
push
jae
loope
mov
imul
pop
mov
cmp
faddl
push
test
add
push
icebp
lock
add
xor
ficompl
pusha
xchg
imul
add
enter
subl
adc
cli
pop
inc
mov
jl
cmp
jg
inc
jmp
add
fsubr
data16
jne
imul
lea
push
dec
push
add
cmp
pop
lea
or
adc
je
dec
scas
push
pusha
mov
mov
or
xchg
mov
lock
xor
movsb
xchg
icebp
xor
mov
es
mov
jne
push
adc
and
or
incl
push
movsl
sub
push
stos
into
mov
push
push
adc
dec
mov
push
cmp
jge
repz
push
jae
add
out
testb
push
mov
cmpsb
cwtl
pusha
sbb
nop
imul
mov
notb
test
pop
stc
xor
pop
inc
jmp
push
add
mov
push
sti
pop
psubd
push
sbb
pushf
or
popa
mov
jl
js
mov
lods
add
ljmp
inc
cltd
pushf
jmp
xor
mov
lahf
subb
and
ja
mov
sub
pop
outsb
gs
rcll
orl
loop
mov
xor
and
adc
push
mov
shrb
pop
int3
orl
inc
adc
push
gs
jbe
and
add
cmp
or
or
rcl
mov
pop
ja
dec
or
loopne
addr16
pop
xorb
adc
mov
push
push
mov
add
add
add
jo
inc
daa
jno
and
or
and
pop
or
xor
mov
shlb
or
xchg
cli
adc
lea
lea
or
out
sti
loopne
mov
popa
mov
mov
sub
popl
loope
nop
cmp
pop
fiadds
inc
mov
mov
enter
sahf
adc
push
mov
adc
xchg
repnz
mov
div
xchg
xchg
pushl
add
jno
pop
cmp
mov
loop
mov
mov
pop
push
push
xor
test
pusha
pop
stos
ljmp
push
inc
cmp
ds
sbb
dec
sbb
push
add
insb
dec
sbb
out
bound
xlat
insb
enter
push
push
adc
cmp
or
adc
std
rol
pop
sbb
add
and
adc
cmp
mov
dec
hlt
cmp
cmp
jmp
mov
jne
jecxz
push
cmp
cmp
add
push
pop
adc
add
aas
pop
and
dec
push
divl
add
stos
inc
pop
add
daa
or
adc
jmp
mov
sbb
cmp
pop
pop
cmp
and
push
pop
pop
add
xorb
test
insb
je
sub
sub
add
push
hlt
push
sub
xor
or
and
loopne
add
mov
jmp
jg
lcall
and
pop
add
dec
adc
inc
rcll
das
xor
mov
gs
push
es
xchg
cmp
add
test
pop
inc
adc
xchg
je
dec
lods
roll
cmp
lea
adc
or
adc
insb
inc
popa
mov
push
add
lock
inc
mov
xor
das
lret
pmaxub
push
cwtl
cmc
mov
add
shl
dec
jl
adc
sysexit
jp
fcompl
sti
inc
fsubr
das
push
inc
jmp
mov
cli
popf
pushl
leave
icebp
sub
xor
psadbw
popa
insb
push
xchg
fidivs
add
add
xor
sbb
cmp
push
mov
mov
jmp
mov
push
push
nop
xor
adc
fcomps
movsb
mov
dec
shll
dec
and
jmp
pop
jecxz
sub
xchg
call
cmp
loop
or
in
pop
xor
xchg
inc
jmp
push
mov
cs
fwait
mov
mov
sbb
scas
inc
or
pop
test
iret
and
mov
pop
xor
sub
cmp
hlt
add
nop
leave
dec
sub
popf
test
nop
or
xchg
and
incb
addr16
jmp
andl
jmp
mov
xchg
test
stos
popf
add
scas
push
mov
push
cld
fucomip
mov
mov
das
cwtl
cmp
jle
sub
cmp
xchg
or
push
jmp
dec
push
in
jnp
add
jbe
or
inc
sub
inc
loopne
hlt
jae
out
data16
adc
inc
sbb
sbb
mov
push
scas
mov
sub
ret
adc
clc
pop
jge
mov
mov
add
jmp
dec
jae
imul
sbb
jb
cmp
subb
pushf
and
outsb
mov
ja
sub
leave
pop
push
sub
and
cmp
lods
push
ds
cwtl
cld
pop
adc
fidivl
mov
lods
mov
scas
mov
lods
sub
out
xor
inc
stos
loopne
imul
je,pt
mov
data16
jno
adc
nop
mov
ret
fisubrl
call
jbe
ud0
testw
mov
sbb
xlat
pusha
jecxz
fldl
pop
shll
sahf
dec
dec
or
and
dec
cmp
mov
imul
lock
cmp
xlat
add
orb
jecxz
push
push
cmpsb
lret
movb
or
pop
js
sub
dec
mov
dec
test
sti
add
mov
mov
add
push
mov
push
fsubrs
cwtl
jge
add
add
mov
imul
sbb
xlat
test
clc
jge
pop
cmp
adc
loopne
inc
lods
orb
adc
mov
dec
mov
or
sub
ds
jbe
jle
jne
repz
or
rclb
pushf
add
aam
data16
fsubrp
lods
sarl
cmpl
fisttpl
pop
mov
sbbl
sbb
mov
jb
icebp
add
movsl
add
sbb
xchg
aam
into
loop
xor
push
loop
out
or
xchg
or
jne
mov
roll
ja
sbb
test
inc
xlat
jae
mov
std
mov
cld
cmp
sbb
or
cli
xor
and
cmp
pop
repnz
inc
testl
movsl
cwtl
jne
lock
mov
dec
into
lret
lock
out
jne
inc
or
cmp
xor
loopne
and
pop
dec
lock
xchg
pop
dec
xchg
nop
clc
sbb
push
jb
cwtl
pop
fsubrs
test
push
pushf
je
fldt
lea
lcall
add
movups
push
dec
std
test
scas
ret
xor
cmp
jb
lods
push
sub
mov
sbb
lods
incw
cmpl
shrl
loope
insl
mov
test
xor
mov
sbb
mov
jg
add
mov
aas
xchg
aam
gs
fbld
shr
push
testb
shr
adc
bound
or
push
sahf
lret
mov
bound
or
adc
mov
mov
addb
negb
mov
shrl
lods
jge
fadd
loopne
shr
or
mov
sahf
dec
mov
inc
xor
pop
jne
outsb
mov
fdivl
mov
aam
loop
xor
cli
sub
jne
addl
rol
mov
ficoml
cmp
addb
ljmp
mov
out
jmp
or
lods
mov
fldenv
and
or
nop
mov
mov
loope
jl
dec
mov
int3
jmp
xchg
or
daa
popa
and
inc
mov
lds
cmp
jmp
lods
sbb
ljmp
jno
adc
xor
cmpb
sbb
imul
push
lret
das
pmaxub
sub
jno
daa
jo
sbb
movups
xchg
imul
mov
inc
mov
inc
test
add
adc
repz
push
ret
stc
cmp
cmp
jo
fnsave
repz
inc
or
jmp
mov
call
mov
rcll
incb
jne
testb
adc
sbb
mov
pop
test
add
add
pop
int3
sbb
les
mov
jno
jo
mov
daa
arpl
cmp
mov
int
push
or
add
test
shl
push
xor
sbbb
in
pop
in
test
adc
mov
sbb
ja
jne
dec
fld1
in
or
mov
or
cmp
or
insl
jb
dec
in
adc
shrb
adc
xor
repz
stos
or
mov
xchg
dec
outsb
cmp
es
sub
cmp
mov
pusha
xchg
adcl
inc
pop
pop
pop
bound
add
mov
cmp
add
add
arpl
int
shll
loop
call
add
cmp
outsb
test
mov
mov
int
loopne
push
xor
jne
sbb
lods
or
xlat
jmp
sar
cmp
sbb
out
add
push
adc
sub
jo
sbb
jmp
sbb
ds
faddl
adc
loope
leave
mov
adc
pop
sbb
mov
aam
rcrl
add
ror
lcall
cmovl
loope
test
jns
sbb
jmp
inc
adc
repnz
pop
jmp
ret
or
loopne
gs
xor
push
and
mov
fidivrl
dec
mov
insl
pop
jno
add
in
repz
xor
mov
fs
pop
ljmp
ljmp
lahf
hlt
push
lea
add
leave
sar
mov
and
mov
add
pusha
or
rorb
test
sbb
lret
push
addr16
jp
cmpl
push
sbb
cltd
pushf
cmpsb
push
pop
ret
and
loopne
jo
push
dec
push
and
add
dec
cmp
pop
mov
js
sbb
pop
pusha
cmp
or
xor
push
push
ds
xor
mov
or
and
dec
adc
test
xchg
push
inc
mov
sahf
add
addr16
mov
fsubl
ret
mov
add
outsl
adc
call
mov
mov
andl
mov
shl
outsb
jmp
and
jae
pop
xor
cmc
imul
sbb
adc
movsl
mov
test
xor
add
or
popa
xchg
movb
jmp
bound
dec
inc
outsb
push
push
cmp
dec
hlt
sub
inc
fs
or
jnp
leave
xor
add
or
inc
add
and
add
cmp
test
data16
pop
jnp
fs
add
cmpsb
sbb
jo
imulb
sbb
mov
add
test
mov
loopne
out
jno
add
mov
js
sbb
cmp
test
jne
lods
test
ret
cmp
shll
lods
dec
cmpsb
sbb
outsl
scas
test
imul
daa
sub
cmc
scas
or
cmp
pusha
dec
iret
test
add
je
out
push
mov
pusha
insb
lods
push
jg
sbb
mov
mov
incb
mov
mov
inc
mov
sbb
adc
mov
push
mov
int3
or
dec
dec
dec
push
movsb
mov
or
xor
jae
mov
inc
inc
mov
cli
or
shufps
mov
pop
mov
push
addl
insb
jo
aad
gs
xchg
faddl
lret
cmp
dec
add
jo
pop
mov
and
or
cwtl
sub
insb
pushl
push
inc
dec
shlb
jbe
fs
pop
loopne
popa
sbb
adc
fiadds
into
mov
stc
cltd
jg
sbb
mov
pop
data16
addb
mov
test
sub
and
in
dec
mov
ljmp
into
sbb
movsl
jne
sbb
mov
stc
cmp
loope
cmp
jmp
inc
add
sbb
sti
leave
add
push
or
sub
lock
lods
shlb
es
and
lds
fisubrs
mov
pusha
mov
add
adc
mov
call
lret
jmp
inc
mov
nop
sub
rcrl
outsl
fucom
lret
icebp
sbb
jae
push
imul
lods
cmp
cmpsl
sub
adc
xchg
lcall
mov
pop
cmp
das
and
das
adc
cwtl
inc
je
jp
rdtsc
cmpb
lret
and
and
or
xchg
cmp
aam
sub
outsl
nop
das
inc
sbb
test
or
mov
lock
pop
adc
xchg
stos
test
push
and
icebp
lds
xchg
and
inc
ss
scas
roll
sbb
ss
int3
xor
xor
inc
xor
adc
add
cmpsb
adc
adc
inc
and
adc
xchg
inc
pop
shlb
fs
push
push
mov
mov
mov
and
je
pushf
push
xchg
pop
or
pop
cmc
fcompl
pop
in
or
jmp
mov
and
cmp
adc
mov
add
mov
mov
hlt
loop
mov
pop
inc
call
pop
xor
mov
je
cmp
pop
adc
cmp
fiadds
inc
mov
jmp
imul
movsb
fiaddl
inc
cmp
decb
les
jmp
addl
js
pop
sbb
movb
jmp
stos
adc
inc
aaa
push
inc
pop
lock
ljmp
or
iret
and
ljmp
jb
les
les
add
js
jge
inc
xchg
inc
arpl
shlb
adc
or
push
inc
push
dec
cmp
mov
sub
push
push
icebp
mov
mov
or
push
dec
sarb
mov
inc
jmp
xor
fwait
sub
jo
mov
add
add
adc
stos
test
pop
cld
not
ret
adc
gs
cmp
adc
sbbb
xchg
data16
andl
arpl
inc
dec
lock
jb
sub
xchg
fsub
add
mov
add
lcall
ret
inc
or
cmp
add
idivb
pop
les
add
pop
adc
push
test
insb
pusha
or
and
rcrl
mov
loop
push
andl
icebp
xchg
loopne
sub
inc
in
in
push
mov
adc
xor
jo
enter
mov
adcl
cwtl
jl
push
pop
cwtl
decb
int
push
jne
push
aas
out
je
mov
lds
inc
pop
xchg
mov
or
enter
adc
call
or
shlb
pop
fdiv
push
jmp
push
std
lock
insl
mov
push
lock
or
pop
push
sub
jne
inc
imul
or
mov
adc
mov
xbegin
mov
adc
fcomps
std
lea
adc
rclb
jmp
shrb
mov
pushf
or
imul
or
push
pop
inc
sarb
imul
add
adc
in
imul
dec
or
xor
adc
and
pushl
add
fadds
fwait
or
cmpb
pop
out
mov
or
jne
mov
clc
push
mov
adc
xor
inc
mov
mov
dec
mov
or
popa
push
push
nop
rorb
xor
dec
je
test
mov
jmp
mov
in
pushf
or
orb
push
outsb
ss
add
cmp
sub
pop
and
mov
cld
cwtl
scas
sbb
adc
popa
or
dec
pusha
outsl
xchg
pop
inc
pusha
jne,pn
sbb
inc
or
and
loopne
jl
push
in
adc
add
push
insb
ljmp
adc
and
lahf
push
sub
je
icebp
cmovnp
cmp
pop
push
sbb
rorl
addl
daa
pop
andb
jbe
xorl
jg
mov
pop
jo
jp
inc
cmp
roll
das
out
sub
mov
fwait
xor
mov
and
inc
xchg
or
dec
bound
aam
or
pop
inc
imul
and
push
add
mov
dec
mov
jb
ljmp
xchg
inc
stos
sub
call
inc
lock
push
push
scas
ss
jmp
adc
clc
jnp
cmp
or
pop
adc
lock
jo
pushf
pusha
lods
cmp
push
xor
in
mov
inc
and
or
inc
out
movsl
out
mov
or
adc
fwait
js
pop
nop
adcl
shl
lcall
cmp
push
ret
mov
in
test
mov
push
clc
call
jne
push
inc
jecxz
lea
adc
mov
push
sbb
mov
sbb
movsb
xor
cmp
mov
mov
push
jnp
daa
mov
push
push
or
pop
je
or
inc
cmp
inc
xchg
into
adc
cmp
mov
movsb
push
sub
xchg
push
orb
mov
pop
cld
imulb
mov
sbb
pop
jno
add
cmp
and
inc
xchg
ja
outsl
in
cmp
lahf
daa
cmc
mov
cmp
or
mov
sub
fisttpll
imul
imul
mov
jne
stos
out
roll
pop
push
lcall
add
stos
pop
add
test
jle
icebp
pushf
jle
mov
mov
mov
test
jno
push
adc
movsb
xor
sbb
jns
adc
clc
cltd
inc
jg
cmp
pushl
mov
xor
scas
and
mov
dec
sbb
in
test
rclb
rcll
sbb
push
nop
mov
loop
ljmp
and
dec
dec
pusha
jge
adc
adc
aam
add
sub
push
or
daa
daa
daa
adc
ss
pushf
fsubrl
and
and
sub
pushf
pushf
pushf
xor
cmp
inc
and
cmp
mov
dec
push
dec
cmp
push
pop
add
dec
dec
fs
dec
dec
je
jl
in
sbb
sbb
xchg
dec
xor
mov
and
pushf
mov
movsb
test
cltd
fs
dec
rol
and
dec
es
shlb
cltd
fidivrl
cltd
fs
dec
in
in
fs
dec
es
hlt
enter
clc
cld
add
sbb
dec
jb
or
gs
xchg
dec
cmpsb
dec
adc
cltd
fs
and
cltd
fs
sub
xor
fs
dec
cmp
push
fs
sub
dec
dec
xor
and
mov
pop
loope
xchg
dec
pop
pusha
sbb
pop
pop
dec
jg
pop
mov
add
movsb
dec
add
test
mov
inc
lcall
enter
mov
push
rorl
mov
xchg
or
imul
nop
adc
inc
lcall
cltd
nop
pushf
and
imul
inc
shlb
or
sub
cltd
nop
enter
pusha
jg
dec
enter
pop
push
adc
and
outsl
loope
js
ret
andl
inc
shlb
push
add
mov
or
faddl
push
or
dec
and
pop
add
nop
sbb
mov
fisubs
call
and
mov
and
aaa
je
adc
add
repnz
jnp
shll
dec
xor
adc
or
jnp
xchg
adc
add
jmp
dec
jb
add
pop
clc
sbb
test
js
test
btc
adc
or
xor
fisubl
xor
fiaddl
xor
mulb
shll
and
shll
sub
push
aad
clc
incb
sub
or
jmp
inc
and
mov
add
jl
and
jecxz
imul
add
or
fiaddl
loope
out
movhps
cli
xor
sub
aaa
enter
jge
je
mov
mov
flds
and
pop
adc
pusha
mov
pusha
loope
pop
sub
jmp
sbb
ficoml
fstp
ds
push
xchg
inc
pusha
fldl
cmp
sub
ret
adc
cld
pusha
jg
testb
in
mov
or
add
mov
out
test
fisttps
loopne
sub
mov
and
sbb
sub
push
and
or
jle
outsb
fs
testl
dec
or
adc
imul
push
and
or
push
or
lds
mov
flds
fstps
jmp
fisttpll
xorb
ljmp
hlt
adc
inc
in
outsl
push
jbe
je
adc
neg
ss
push
sbb
push
addl
in
adc
xor
test
cmp
sbb
sar
push
inc
call
xor
push
aaa
sbb
out
xor
add
pop
rolb
dec
jmp
sub
sub
inc
dec
push
in
jmp
sub
push
mov
loopne
fldcw
inc
test
into
adc
pusha
hlt
movsl
sub
imulb
mov
rorb
inc
add
bswap
and
mov
and
mov
adc
add
rolb
repz
add
push
mov
or
je
inc
rcll
sub
cli
repnz
xchg
mov
jae
es
xchg
pop
ss
shrl
addb
dec
push
push
inc
mov
nop
loopne
or
jle
push
pop
jmp
pop
add
pop
dec
cs
icebp
add
enter
lcall
cmpsb
mov
sbb
and
push
pop
inc
lea
nop
cwtl
addr16
clc
pop
mov
jle
push
add
jns
jnp
mov
and
pop
mov
lret
add
fs
xchg
repnz
aam
add
inc
inc
mov
add
mov
and
test
dec
pop
cmp
je
add
jl
xor
mov
jns
add
or
scas
test
rcrl
cld
sbb
hlt
rorb
inc
pop
cltd
and
sahf
into
es
pushf
sub
lock
pusha
ds
and
or
loope
or
out
sub
mov
fstpl
lods
pop
imulb
jno
xor
inc
and
xor
push
add
or
add
add
es
das
add
or
sub
das
jo
fmul
jo
sub
pop
lods
lea
in
popa
xor
sub
lock
mov
rolb
add
test
sub
pushl
roll
xchg
mov
int
xor
jbe
push
das
adc
inc
addr16
mov
imul
jne
adc
adc
mov
or
jl
push
jnp
add
andl
jne
je
insl
rorb
lret
adc
adcb
cld
pop
test
dec
mov
sub
mov
add
rcrl
shufps
push
xchg
rorb
jge
in
jecxz
clc
lock
or
sbb
fstpl
add
push
mov
and
fsubs
into
pop
add
mov
jmp
dec
xor
mov
sbb
test
and
sub
or
dec
out
fld
in
push
rcl
ljmp
pop
add
push
xor
test
stos
test
pop
and
mov
icebp
das
fstps
loope
mov
or
or
lcall
push
or
push
pop
aas
adc
push
mov
push
cmc
in
add
or
push
xlat
scas
movsb
ret
and
jo
es
sub
push
push
push
test
pop
push
inc
push
pop
dec
ljmp
adc
fnstsw
movswl
lret
sbb
loop
inc
loopne
and
mov
int
sub
rorb
data16
into
aaa
or
insl
or
push
mov
mov
xchg
cwtl
or
sub
or
aam
test
fsubs
ret
ja
fwait
sbb
adc
fcoml
nop
jp
lods
ret
sbb
imul
jae
sti
jmp
addl
sbb
je
scas
xsaveopt
jne
mov
add
sub
or
test
andl
or
jmp
and
add
adc
addb
inc
adc
or
loop
mov
sbb
fld
xlat
xchg
or
pusha
or
ucomiss
mov
shl
lock
mov
add
inc
arpl
int
adcb
push
ja
mov
mov
lock
and
ja
sub
inc
or
push
pop
int
and
adc
ret
in
jo
imul
or
jae
nop
lret
je
jle
loop
adc
xor
decb
add
sti
jbe
push
xchg
rorl
js
adc
mov
sti
std
test
or
add
loope
or
push
or
outsb
dec
fldenv
add
push
or
sub
adc
cmp
jbe
jb
adc
mov
dec
imul
sub
ss
push
or
outsb
add
jecxz
sub
mov
cmp
into
jne
mul
pop
test
jbe
jl
cmc
mov
mov
lock
stos
jmp
stos
pop
pop
fs
and
dec
insl
push
in
inc
cli
js
cmp
movb
pop
add
lods
rolb
adc
cwtl
xor
or
cmp
push
mov
lret
inc
movb
rolb
ljmp
not
test
je
jl
inc
pop
repz
outsb
dec
pop
pop
and
mov
out
sbb
mov
inc
adc
iret
and
insl
push
jbe,pt
dec
mov
add
push
outsb
int
or
or
cmp
sbb
sub
adc
loopne
insb
jmp
inc
pop
jae
add
lret
mov
xchg
pusha
add
sahf
jns
shrb
and
sarb
mov
mov
pop
test
mov
or
jge
je
inc
mov
inc
or
or
or
jp
inc
stos
inc
sub
or
add
mov
pusha
rclb
pop
rorl
cmp
loopne
push
incb
out
and
dec
inc
pop
mov
loopne
pop
popf
jb
mov
and
push
ds
push
or
out
inc
popf
and
dec
sarb
orl
jno
fs
sub
pop
and
ret
cmp
mov
or
icebp
pop
mov
xor
sbb
adc
fsubr
jnp
push
inc
lods
sbb
test
push
icebp
add
dec
clc
xchg
andl
inc
aas
adc
xor
lcall
cmp
mov
mov
mov
jmp
pop
inc
xor
add
add
incb
enter
jns
add
sub
cmp
sbb
dec
cmc
hlt
push
aas
mov
pop
rorb
cmpl
and
movsl
out
cmp
xor
clc
add
xorl
loopne
sub
popa
mov
in
add
adc
lock
into
addb
fiadds
test
iret
and
mov
and
shrl
xor
in
add
pop
mov
dec
lods
rorl
enter
xchg
dec
or
fiaddl
pop
lock
pusha
ficomps
dec
or
nop
loope
dec
push
lret
jne
and
and
mov
cs
cltd
mov
adc
and
push
sub
pop
push
push
add
les
or
or
leave
add
inc
push
pop
xlat
dec
jecxz
adc
jne
sub
mov
or
inc
outsb
and
stc
pop
jne
cmp
and
xchg
add
jb
mov
inc
mov
test
inc
mov
mov
rorl
mov
sbb
into
repz
xchg
out
add
xchg
jo
or
mov
scas
cmp
mov
cmp
insb
inc
cs
or
or
jmp
cmp
je
or
out
mov
dec
lcall
mov
cmp
pop
jne
dec
mov
inc
subb
inc
mov
jmp
and
sub
fisttps
lea
inc
jp
arpl
mov
add
and
inc
leave
into
add
fiaddl
test
add
adc
or
push
inc
cmp
xor
in
inc
adc
mov
add
adc
push
pop
xchg
xor
mov
adc
js
dec
sbb
fadds
sahf
jne
xlat
je
imul
outsb
stos
fdivs
or
add
xor
pop
jno
ffreep
push
pop
sbb
fstl
decb
sub
mov
clc
inc
add
aas
sub
outsb
pop
lcall
pushf
xchg
pop
and
lds
cld
mov
inc
or
xor
movb
add
dec
ret
pusha
loopne
xor
and
cli
jmp
sub
add
mov
insb
sbb
je
pop
adc
cmpsb
dec
push
sub
ret
mov
cld
sbb
push
neg
movb
xchg
mov
enter
jp
xchg
dec
or
add
add
add
sbb
insb
add
push
sbb
rclb
jmp
lcall
psraw
adc
cmp
ret
or
pop
inc
mov
adc
adc
dec
sbb
pusha
inc
jg
shlb
iret
ret
jmp
add
and
scas
jmp
mov
aam
outsb
or
mov
rcll
pop
in
movsb
loope
movsb
push
push
adc
or
in
shlb
pop
dec
lret
cmp
or
mov
gs
mov
push
jmp
and
xchg
mov
out
pop
xor
bnd
inc
and
push
fadd
repnz
mov
push
test
xor
into
jge
inc
stos
adc
adc
and
call
add
mov
fdivrs
or
mov
add
lcall
xchg
sahf
xchg
adc
jnp
icebp
movsl
cld
push
and
or
jne
xor
rcll
test
out
ret
xor
sub
idivb
ss
push
add
pop
and
xor
test
enter
clc
and
add
mov
lahf
test
push
js
sub
ret
scas
dec
and
add
insb
movb
and
mov
mull
xchg
xchg
inc
popf
neg
sbb
mov
stos
push
and
adc
fs
ret
bound
shll
dec
jo
bound
xor
xor
sub
or
cmc
add
pop
and
call
fnstcw
xor
mov
jb
stos
sub
add
pmaxub
add
add
pop
int
mov
wbinvd
divb
nop
push
lcall
dec
sbb
and
sub
sbb
cmp
mov
rol
fadds
adc
stos
pusha
inc
xor
ret
cmp
dec
icebp
xchg
cli
fs
cld
add
hlt
shrd
sbb
cltd
addl
inc
jge
sbb
clc
dec
leave
or
cld
xlat
mov
mov
add
dec
jmp
mov
cmp
ds
sub
pop
adc
pushf
jp
test
or
rorl
push
ljmp
test
roll
pusha
sbb
mov
lret
jo
fmulp
rorb
push
and
imul
sbb
js
jg
mov
or
sarb
jmp
adc
cwtl
shl
fimull
jl
inc
pop
clc
pop
mov
xchg
rolb
jne
sbb
mov
push
lock
ljmp
or
add
shlb
adc
leave
jae
fiaddl
pop
or
or
sbb
lock
roll
cmp
and
and
lods
ja
sahf
frstor
es
mov
mov
or
or
movw
push
sbb
add
sbb
pop
lcall
inc
jnp
ss
jmp
lock
mov
push
inc
sahf
or
push
mov
enter
jns
neg
call
addr16
or
ret
aaa
add
andb
pop
mov
in
or
mov
push
add
adc
xchg
sbb
repnz
je
add
or
aad
fstps
mov
dec
jbe
jl
into
rorl
cltd
inc
dec
mov
push
sbb
xchg
cmp
mov
jmp
or
sbbb
mov
jne
push
cmp
nop
cmp
addl
int
xchg
pop
aam
sub
dec
sub
cmp
leave
xor
enter
jle
in
push
push
orl
dec
out
mov
cld
jl
loopne
jge
push
inc
js
inc
or
mov
and
add
popf
jmp
xor
movsb
add
mov
ds
fxch
in
pop
or
or
pop
pushw
loopne
jne
cmpsl
imul
cmpsb
mov
je
inc
je
pusha
mov
addr16
xor
sub
sbb
pop
cmp
test
aaa
and
test
or
push
cmpb
add
sbb
push
add
or
inc
mov
aam
addb
pop
arpl
cmp
or
dec
jb
add
andb
imul
out
and
sub
adc
pop
xchg
cmpb
jne
mov
add
jp
testl
cwtl
push
xchg
sarl
insb
ret
push
cmp
add
hlt
lea
sbb
or
adc
bound
popf
pop
aam
dec
cltd
loopne
cmp
add
push
mov
adc
sbb
je
pop
push
add
hlt
ja
in
push
push
sbb
popl
add
lcall
sbb
xlat
aam
cmpsl
mov
test
sbb
inc
jmp
cmc
cmp
xor
add
out
inc
or
dec
inc
jne
cmp
add
sbb
adc
cld
mov
push
push
jmp
gs
and
leave
mov
inc
jmp
adc
test
adc
xchg
aam
add
xor
fmull
adc
fidivrs
add
cmp
nop
fidivl
mov
aam
dec
sub
sbb
xchg
adc
xorl
sub
sub
cmpl
xor
rclb
pop
push
or
push
sbb
insl
sarb
adc
leave
xchg
push
mov
mov
pop
add
dec
ljmp
aas
mov
jl
cmp
inc
dec
fiaddl
jb
pop
data16
xor
int
push
pop
mov
sub
je
dec
je
mov
push
push
jmp
or
jmp
sbb
cmp
call
adc
int
in
repz
and
sbb
pop
ret
or
or
aad
sbb
bts
xor
sahf
or
int3
or
push
xchg
cs
xorb
and
or
dec
xor
push
popf
add
jne
adc
adc
add
ds
flds
ljmp
or
sbb
jnp
int3
or
sub
sbbl
add
pop
mov
adc
add
or
mov
ss
dec
into
sub
xor
inc
andb
xor
inc
sub
jno
lret
or
dec
mov
and
aas
or
mov
xor
pushf
and
insl
add
sbb
fstl
int3
repnz
xchg
add
in
pop
sub
mov
rorl
std
inc
or
or
ljmp
dec
cmp
clc
shr
add
or
jg
mov
shr
or
mov
loop
mov
push
push
adc
test
and
add
mov
sbb
notb
lock
leave
mov
mov
add
lods
lods
add
pop
cmp
leave
inc
add
add
jl
in
sbb
cmp
dec
xchg
mov
or
arpl
inc
addl
inc
fisttpl
mov
add
inc
inc
lds
adc
xor
in
inc
call
adc
gs
mov
lea
cwtl
subl
shll
cli
cwtl
sub
dec
mov
mov
test
mov
adc
mov
aam
cmpsb
and
add
lds
loope
xchg
adc
mov
adc
lock
icebp
sbb
ss
and
xor
push
loope
clc
mov
andb
mov
add
sub
cli
jne
mov
sbb
dec
roll
incl
cmpsb
or
xchg
or
inc
mov
shll
in
mov
or
fmull
enter
or
addl
pop
add
lds
leave
nop
sub
jmp
adc
cmpsl
xchg
fwait
push
inc
test
mov
pop
and
lea
cli
popa
cwtl
cmp
pop
or
in
subl
lods
test
lret
testb
dec
jo
popa
divl
inc
cmp
adc
dec
xchg
stc
sub
add
mov
add
dec
pop
add
sbb
or
mov
and
jge
jo
or
sbb
fs
inc
inc
sub
test
jle
cli
add
xchg
mov
add
dec
sahf
sub
inc
sbb
pop
lret
leave
shrb
aaa
xchg
aad
outsl
dec
dec
outsl
inc
inc
push
xor
inc
xor
je
clc
and
mov
js
or
cmp
sbb
fistpll
push
pusha
inc
adc
and
scas
add
mov
aam
sbb
add
pop
je
sbb
mov
ret
sub
add
fmull
mov
push
add
movsb
xor
sbb
hlt
sub
jno
nop
mov
je
ss
push
add
inc
cmp
pop
inc
test
ds
out
sbbl
jmp
pusha
lea
imul
into
xor
or
cmp
dec
sbb
repnz
popf
addb
pop
leave
cmp
mov
enter
xchg
in
mov
cmp
jle
xchg
pop
mov
inc
and
push
popf
add
out
movsb
adc
cmpsb
sbb
bound
ds
fnsave
jmp
sbb
xor
cmpb
sub
cmc
cmp
les
push
incl
out
xchg
adc
push
mov
stc
push
add
inc
jns
push
in
cmp
add
push
imul
ficoml
orb
mov
aaa
jne
cmpsb
add
push
ret
sarl
sub
jmp
rcrb
enter
cmp
jne
imul
inc
dec
add
jbe
call
adc
rorb
push
cltd
or
push
rcrb
fprem
pop
sbb
out
roll
leave
add
mov
not
je
mov
iret
adc
mov
mov
inc
mov
xchg
pop
pop
adc
bound
rolb
call
movsl
sti
lods
pusha
push
pop
jb
loopne
adc
int
cmp
mov
js
add
popa
sbb
mov
or
xor
pop
inc
add
scas
lea
mov
push
icebp
lar
adc
lock
push
neg
neg
sbb
sub
jns
sbb
inc
sbb
or
or
enter
sbb
add
push
inc
and
fsts
pop
mov
icebp
sbb
push
and
and
subb
mov
dec
jns
lock
cmpl
pop
jbe
push
mov
int3
xor
adc
or
jae
lods
rcl
ljmp
in
lock
shr
sub
adc
std
arpl
push
idiv
and
maskmovq
testl
clc
add
push
roll
inc
add
insb
sbb
icebp
fmulp
dec
or
add
pop
pop
lods
aam
stos
jae
adc
dec
lahf
push
test
dec
push
add
sbb
mov
call
je
push
inc
cmp
jbe
pop
inc
xor
aas
orb
pop
cli
hlt
adc
and
aam
shlb
or
push
rclb
adc
rcl
inc
push
outsb
or
inc
inc
cmp
nop
add
into
paddusb
jns
mov
mov
and
ljmp
nop
cmp
movsl
iret
and
mov
incl
cs
ljmp
cld
inc
ss
dec
out
aaa
dec
roll
es
cmpsb
jnp
daa
lods
push
movsb
adc
jp
push
out
cld
mov
add
xchg
enter
pop
adc
inc
jmp
sub
inc
add
js
mov
subl
ret
cmp
mov
add
pop
fs
xchg
cmp
test
mov
loopne
adc
es
mov
inc
xor
and
aas
out
jmp
jb
cmp
ja
add
cmp
adc
cmp
jne
mov
sti
dec
shll
leave
adc
mov
sbb
add
jl
pop
pop
mov
enter
cli
fiaddl
sbb
adc
sbb
inc
xchg
lret
push
and
imul
test
test
aas
sti
pop
dec
insl
cs
push
movb
jmp
or
mov
pop
mov
iret
cmp
pop
and
test
push
subb
xchg
ret
fists
and
movl
push
inc
int
add
rcrb
fldl
pop
mov
into
testb
sbb
pop
cmp
mov
pop
lods
sti
scas
stos
mov
test
mov
idivl
sub
andb
and
xorb
nop
or
dec
daa
ror
push
add
adc
add
sbb
cmp
mov
pop
pop
jp
leave
adc
shr
rcrl
inc
imul
lea
sar
pop
or
gs
into
movswl
data16
imul
push
ljmp
cwtl
sbb
mov
mov
mov
inc
xorl
stos
dec
mov
add
imul
mov
jbe
push
push
ret
and
jl
inc
mov
jnp
or
dec
jle
repnz
lcall
mov
mov
mov
mov
and
and
lea
inc
fisttpll
pop
xor
adc
jecxz
imul
call
xchg
test
dec
jmp
add
loopne
dec
rorl
inc
testl
aas
lods
cmpsb
mov
mov
outsl
push
adc
pop
rorb
lods
xor
inc
mov
les
pop
les
dec
or
or
cltd
data16
xchg
dec
push
sub
shrb
into
movsb
imul
cmp
lods
shl
mov
movsb
sub
pop
out
data16
xchg
mov
pusha
mov
jl
pop
aaa
dec
sti
push
lods
and
rorb
jg
jle
cmp
lcall
shll
mov
add
shr
and
ret
pop
or
and
rorb
pop
negl
sbb
push
lret
cmpsl
mov
mov
cmp
and
inc
mov
jle
cwtl
shrl
cmpsl
jne
test
pop
shr
or
mov
dec
mov
pop
jp
jmp
nop
sahf
jnp
lock
dec
and
jnp
repnz
sub
push
testb
dec
cli
cli
inc
cli
and
cmp
dec
dec
dec
movsl
test
and
movsl
or
jge
sub
cmpsl
or
cli
adc
and
ficompl
ret
mov
dec
xchg
and
outsb
mov
push
fidivl
fldenv
enter
mov
mov
insb
movsl
jmp
mov
dec
xlat
mov
xor
push
mov
dec
sbb
add
push
mov
or
pushw
mov
loop
out
jecxz
xchg
xchg
jge
out
adc
and
mov
pop
mov
dec
mov
dec
movsl
and
daa
adc
sbb
push
cli
or
push
mov
inc
shlb
fdivrs
aam
xchg
pop
xchg
add
jbe
dec
sub
sbb
sbb
shrb
cmp
add
push
adc
xchg
rorb
or
sahf
mov
sbb
fcmovu
add
push
mov
sbb
insl
inc
rcrb
push
mov
int3
jg
add
xchg
add
idiv
inc
add
adc
jge
adc
jg
or
adc
orl
inc
push
in
out
or
jge
add
mov
or
cld
add
jne
xor
push
jns
fnsetpm(287
loopne
mov
or
pushf
pusha
mov
xchg
ljmp
cwtl
sbb
sub
setae
mov
idiv
psubq
sbb
movb
dec
inc
cmp
jle
push
outsb
push
aad
pop
outsb
call
inc
lods
gs
add
lods
adc
in
mov
rcrb
push
shr
pop
inc
rcrl
sub
fcoms
xor
fiadds
push
mov
insl
call
mov
imul
call
xchg
frstor
mov
pusha
lea
push
and
pop
lcall
inc
xor
push
in
fmulp
mov
sti
mov
add
popf
xor
inc
les
movsb
out
ds
loop
inc
addr16
sbb
imul
push
xorl
inc
js
add
sub
lea
fnsave
mov
sahf
mov
and
dec
int3
push
add
test
call
add
xor
add
add
sub
or
into
or
mov
inc
ljmp
jmp
mov
rcrb
jmp
cmp
jge
or
lahf
sub
cmpb
or
add
dec
cmp
imul
inc
dec
add
add
fadds
inc
les
mov
movsb
pop
ret
jp
jne
dec
sarb
or
adc
cmp
in
out
mov
mov
lret
mov
add
push
mov
nop
adc
test
mov
mov
mov
or
cmpsl
mov
dec
adc
and
ret
lcall
add
push
mov
mull
or
push
push
pop
rorb
adc
or
mov
or
add
rcrl
xchg
add
pop
jne
or
push
pop
scas
je,pt
sbb
ret
mov
cld
mov
ret
or
movsl
add
xchg
adc
or
xchg
add
test
fistpl
mov
mov
iret
xchg
xchg
lret
lret
into
pusha
inc
cli
xorl
and
pop
pop
fidivl
sbb
ret
xchg
mov
loopne
sahf
inc
ret
or
mov
sbb
loopne
inc
add
scas
rolb
imul
or
or
jo
dec
push
add
add
push
gs
je
das
push
mov
jae
mov
pop
or
pop
add
insl
add
adc
cmp
jne
and
mov
loope
test
add
es
out
and
push
cmpb
or
ret
outsl
mov
inc
add
movsl
ret
flds
jo
loop
clc
mov
mov
test
sbb
shll
push
scas
orl
mov
inc
subl
add
movb
daa
mov
loopne
mov
rorb
cmp
sti
loopne
sbb
repnz
test
adc
int
add
or
adc
into
mov
xchg
into
mov
mov
sbb
and
sbb
leave
repz
inc
jg
into
into
dec
inc
or
adc
sarb
push
pop
loopne
ficoms
and
mov
shlb
or
sbb
stos
push
lret
mov
ret
xor
mov
push
lcall
cmp
out
adc
push
into
enter
movsb
and
mov
ficomps
test
mov
and
mov
jp,pn
and
cmpsb
leave
adc
sub
lock
roll
xlat
insb
mov
cmpsl
fsub
movsb
lret
ljmp
mov
out
adc
cmp
pop
mov
add
loop
add
jno
loopne
mov
lahf
xchg
mov
or
enter
xor
scas
sub
sub
push
lock
scas
outsb
pusha
outsl
adc
rcrl
in
ret
jl
add
testb
add
je
jnp
sbb
popl
loope
jo
div
jle
rclb
sbb
add
jo
xorl
cmp
je
dec
mov
mov
jb
into
cmp
je
mov
or
mov
push
shl
pop
adc
jg
or
or
cmp
jbe
dec
sbb
cmp
sub
jmp
push
mov
movsl
sbb
sub
fisubrl
pop
lea
inc
pop
push
leave
mov
enter
pop
mov
ret
mov
into
das
add
stos
les
and
gs
and
inc
popa
test
dec
aam
add
scas
mov
fcompl
adc
loopne
jp
or
cmp
add
scas
pushl
mov
and
push
push
mov
push
mov
aam
movsb
mov
popf
fsubs
fmul
adcb
push
or
pop
cmpl
ret
sahf
mov
lret
xor
jb
pop
jl
rclb
cmpb
scas
adc
aam
ljmp
insb
or
push
jmp
popf
inc
push
aaa
sbb
dec
js
add
mov
movsl
mov
or
pop
cmp
test
inc
mov
test
daa
fldcw
add
xchg
pop
subl
push
push
or
pop
stos
sahf
mov
inc
dec
pop
add
push
mov
mov
push
stos
and
test
inc
cmp
andl
push
loope
aaa
cmc
dec
jge
test
shlb
add
je
and
push
ret
ss
js
push
push
dec
push
pop
and
cmp
pushf
inc
dec
mov
into
pop
jo
and
mov
mov
adc
shll
mov
cmp
lods
sbb
inc
add
mov
lret
ja
test
sbb
xchg
arpl
setl
sub
insl
add
jg
push
or
call
inc
js
lea
in
cmp
push
enter
in
adc
paddd
add
lret
mov
push
mov
je
xor
shrl
push
jmp
dec
fs
movsb
fistpll
xorb
ss
mov
sub
js
push
adc
pop
xchg
jno
fmuls
mov
sbb
or
dec
sbb
inc
movsl
xchg
cmp
push
fs
iret
mov
pushf
pop
dec
cmpsl
cmpsb
xor
push
mov
push
nop
lock
sub
add
mov
inc
pushf
ss
sbb
sbb
hlt
mov
push
pcmpeqb
jg
subl
aam
mov
jnp
ljmp
jbe
clc
dec
aam
sbb
mov
pop
movsl
gs
sbb
sbb
or
dec
lods
and
mov
mov
in
repnz
test
fs
test
cmp
jmp
and
lea
add
iret
xchg
sti
push
add
push
adcl
sub
add
and
add
add
test
pop
xor
xchg
hlt
in
sub
mov
lret
add
lea
movsl
pop
cltd
rcll
push
xchg
movsb
adc
mov
or
cmp
mov
jl
push
mov
dec
cwtl
push
jmp
loope
outsb
repz
pop
sbb
scas
add
orl
nop
xchg
jmp
add
inc
and
dec
ret
add
jle
ret
cltd
mov
push
add
add
data16
insb
mov
sar
xor
push
in
adc
sbb
push
dec
push
and
lods
outsb
nop
cmp
daa
test
sub
jnp
mov
roll
ret
push
mov
inc
and
ret
cmpsl
aas
mov
pop
or
mov
add
xor
ret
add
xchg
daa
and
add
in
jnp
mov
es
aas
add
ret
stc
adc
push
pop
in
push
push
pushf
ret
sub
or
push
push
push
shlb
sub
and
ror
sbb
inc
psrad
xchg
add
or
insl
cld
mov
loopne
dec
jmp
xchg
loopne
or
movsl
popa
sbb
push
je
inc
insl
and
cmpsl
clc
pop
pusha
xor
les
lcall
pop
cmp
xor
imul
mov
cltd
addl
call
dec
inc
imul
outsl
insl
dec
or
into
inc
mov
xor
jns
adc
sbb
cmp
xor
add
adc
or
scas
arpl
je
rcrb
xchg
lock
movsl
movsl
lcall
xchg
stos
xor
sbb
addr16
adc
fisubrl
jl
push
cmpsb
clc
pop
popf
mov
and
aad
sar
rorb
fiadds
lea
lds
sbb
ror
pop
sub
add
add
push
cwtl
mov
or
mov
push
fisttps
ret
inc
sbb
sar
mov
lock
data16
xor
inc
and
jo
adc
push
add
sbb
pusha
js
xchg
adc
adc
inc
inc
js
jg
inc
dec
call
sub
pop
xchg
push
cmp
dec
int3
arpl
jo
arpl
into
mov
imul
fidivrl
cmp
ja
mov
jmp
sub
jb
lcall
inc
imul
add
xchg
jge
cmp
loope
add
lcall
jp
inc
mov
sbb
cmp
adc
mov
add
or
sbb
cwtl
repz
out
cld
sbb
push
sbb
inc
cmp
adc
jp
repnz
in
neg
push
dec
test
jg
adc
lock
imull
aas
lcall
mov
test
rorl
cmp
mov
pop
shlb
popa
ret
call
aam
into
lock
cmc
cmp
in
rcrl
addr16
popa
dec
mov
add
sbb
add
push
or
jb
repnz
jbe
inc
jo
and
test
scas
pop
add
lea
stos
dec
aas
leave
xchg
test
ret
rorl
push
sbb
sub
push
add
pop
int
gs
repnz
pusha
test
test
or
aaa
sti
mov
push
inc
inc
loopne
pop
cmp
lock
loope
cmp
nop
pushw
ss
push
and
jle
sbb
mov
das
push
or
call
mov
xchg
lods
sub
lret
mov
cmp
mov
mov
lods
pop
push
adc
rcrl
ret
cmpl
add
add
outsl
ret
cmp
int
shlb
xchg
mov
jns
mov
mov
loop
mull
in
sahf
or
or
push
in
ret
push
cmp
movsl
jne
pusha
std
inc
adc
and
ds
or
jne
inc
sbb
xchg
lds
add
retw
test
js
out
rol
aas
sub
and
inc
jbe
lds
jl
sbb
jae,pt
cmp
adcl
adc
xchg
xchg
mov
jl
inc
xchg
fwait
sub
mov
or
add
add
cmp
enter
xchg
addl
cmp
jle
push
ret
jnp
dec
sbb
mov
and
out
dec
test
inc
pop
rolb
mov
and
or
add
orl
jge
incl
addl
sub
lods
ljmp
call
xchg
imul
add
or
or
loope
sbb
fldenv
add
inc
add
test
inc
inc
or
sahf
stos
pop
add
jmp
movsl
mov
mov
jmp
mov
gs
xor
cmpsb
cmpb
push
cmp
pop
das
dec
jl
outsl
jo
roll
cltd
lods
adc
dec
popa
mov
aam
cmpl
dec
pushf
pop
adc
cmp
jae
cmp
scas
test
jle
cmp
jg
mov
rolb
or
jecxz
xchg
daa
mov
test
add
push
xchg
test
loopne
ret
inc
outsb
fcoms
fcomps
pop
mov
rcl
jnp
adc
mov
cmp
hlt
xor
cmp
fwait
and
lcall
sbb
lods
pop
out
mov
rorl
add
addr16
or
sbb
xor
ss
in
mov
sbb
dec
or
andb
andb
push
dec
cmp
xor
mov
mov
xor
loop
inc
shr
xorl
fnsave
mov
and
sub
add
into
mov
push
pop
outsb
insb
sub
fisubs
or
aam
scas
or
jg
or
and
push
popf
add
jl
scas
cmp
cmp
add
popa
xchg
je
mov
xor
dec
xchg
sbb
add
xor
jmp
outsl
sub
sub
inc
arpl
testb
inc
cltd
jp
inc
dec
dec
insb
push
mov
notl
ret
adc
std
sub
shl
add
cmp
push
into
icebp
pop
adc
adc
xor
mov
je
dec
jne
push
lds
jp
dec
ja
fadds
and
xlat
push
jmp
xor
inc
sub
dec
lahf
je,pn
adcl
fcmovnbe
fsubrl
or
push
sub
fcoms
bound
cmp
scas
mov
mov
fs
inc
cs
arpl
push
loopne
fimuls
dec
dec
jo
xchg
jns
aas
mov
in
out
bnd
pop
loope
inc
sbb
dec
adcb
inc
js
jecxz
jmp
shlb
push
in
cltd
push
cmp
in
xchg
and
and
push
push
jb
bound
stos
fs
push
lods
mov
and
jae
popf
clc
dec
push
dec
rclb
xor
jl
jecxz
jp
clc
inc
mov
add
int
push
mov
je
cmpb
sub
lea
testb
jne
add
xchg
lods
fwait
popa
int
jnp
imul
les
lret
pop
xor
ret
fcom
xor
adc
adc
or
dec
or
push
push
bound
fnstsw
notb
cmp
ret
lret
mov
sbb
rcl
imul
movsb
insl
gs
out
or
add
adc
add
cmp
leave
test
add
sahf
jecxz
rorl
stc
dec
fildl
hlt
jne
inc
xor
adc
fisttpl
imul
testb
mov
add
or
add
outsl
test
jle
insl
scas
mov
es
les
push
pop
or
xor
inc
pushf
cmp
add
add
pop
dec
push
adc
jg
js
fsubr
push
icebp
adc
inc
sbb
pop
movsl
add
lock
addb
jbe
int3
leave
das
jo
lret
jne
lock
jb
ret
sar
and
jp
lock
or
mov
mov
adc
imul
inc
cmpsl
adc
fiaddl
and
mov
ret
push
mov
sbb
mov
cmp
fnstenv
call
je
jp
mov
fsubrs
adc
call
and
jl
ficomps
push
cmp
dec
cmp
cmp
inc
jae
jb
or
sub
cmpsl
push
fcmovb
jnp
and
aaa
pop
pushf
pop
xchg
call
sbb
icebp
jne
jae
scas
push
sub
mov
add
push
inc
bound
inc
pusha
jmp
test
or
or
fwait
or
adc
jbe
xchg
pop
push
outsb
stc
rolb
pop
sti
insl
pop
dec
test
insb
and
js
sub
sub
xchg
jns
inc
cli
ret
or
mov
adc
add
sbb
mov
and
cld
add
mov
testb
xchg
testb
add
jl
outsb
adcb
mov
push
jmp
inc
ss
and
jb
je
cmp
xlat
pop
push
add
jns
jb
cmp
jbe
clc
mov
xlat
push
push
push
or
movsb
or
mov
push
mov
push
add
das
aaa
out
pop
shlb
outsb
push
cmp
add
mov
test
mov
lcall
fstpl
fstpl
pop
jmp
cli
jne
cwtl
lock
pop
pop
sbbb
add
pop
in
mov
int3
sub
mov
push
inc
sub
push
push
insl
mov
and
xor
ljmp
in
fst
push
inc
repnz
hlt
push
cmpsb
inc
mov
push
je
rcrl
mov
jb
mov
mov
repnz
sbb
xchg
add
mov
and
push
xchg
mov
fisubrl
ljmp
adc
movsl
rcrb
and
adc
dec
shlb
ficoml
mov
test
mov
and
jnp
test
pop
and
inc
xchg
lock
fldcw
mov
fildll
roll
shlb
xchg
fstps
mov
xor
in
xchg
rolb
mov
or
sub
das
fcomp
out
inc
in
adc
adc
ret
fstps
add
cmpsb
pop
sbb
or
and
in
dec
xchg
inc
pop
or
shr
xchg
mov
xchg
nop
mov
inc
lea
mov
mov
dec
inc
adc
or
inc
enter
ret
jg
or
add
insl
add
pop
ljmp
xchg
adc
nop
mov
in
xor
adc
lock
frstpm(287
les
sub
cmp
add
xor
or
jb
sub
pop
nop
or
inc
add
pusha
insl
dec
outsb
fucomp
add
add
mov
call
or
in
inc
fs
inc
cs
fadds
pusha
cld
sub
outsl
nop
push
jne
add
iret
je
pushf
xchg
mov
mov
mov
scas
mov
add
adc
push
and
xchg
movl
xlat
dec
dec
das
pop
fisttpl
add
rorl
or
rcrl
enter
sbb
ret
push
add
inc
lahf
fdivr
sbb
and
adc
jl
inc
mov
sbbl
jno
andl
or
lock
xor
aam
adc
jge
dec
pusha
or
xchg
xchg
inc
pushf
sub
insb
adc
fcoms
xchg
or
cwtl
xchg
lret
mov
xchg
adc
or
in
inc
mov
sub
push
xor
in
test
fildl
in
adc
xchg
adc
push
mov
popa
add
stos
xlat
mov
cmp
shrl
enter
xchg
inc
xchg
push
pop
or
cmp
fwait
or
xchg
pop
es
mov
fwait
cwtl
inc
sub
cmp
rolb
xchg
or
mov
cmpb
xchg
mov
js
fdivl
sbb
cs
sub
and
push
enter
imul
call
adc
jbe
insl
les
ja
test
or
rol
push
xchg
in
adc
in
push
dec
outsb
unpcklps
cmc
sti
icebp
shlb
mov
daa
xor
cmp
mov
std
push
jno
pusha
es
fs
fs
xchg
dec
je
jl
xchg
add
ret
xor
call
adc
jb
lods
loopne
and
xlat
add
adc
adc
xchg
push
rcrl
int3
lea
cmc
rorb
call
xor
and
xor
jne
and
xchg
fmuls
in
sti
gs
pop
inc
push
lods
lods
add
scas
push
cmp
lods
push
clc
shlb
jns
adc
cmp
inc
or
xor
ret
sbb
sub
dec
test
lea
add
and
fistpll
add
jno
cmp
lock
mov
or
sbb
je
mov
stos
nop
push
flds
clc
sbb
jnp
push
cwtl
cmp
sbb
push
and
insb
fwait
xchg
adc
insb
inc
enter
aam
mov
dec
addr16
roll
add
and
sbb
lds
test
popf
lock
lock
push
dec
insl
sub
jl
dec
mov
fisttpll
pop
and
adcl
xchg
inc
je
fists
sbb
fsubrs
and
push
inc
xor
imul
and
inc
sbbl
lret
sbb
in
inc
push
mov
loopne
adc
pop
fdivl
jne
shll
shlb
mov
daa
sub
leave
and
cmp
add
or
push
subb
sbb
loopne
dec
cmp
or
mov
in
lods
push
cmp
scas
dec
or
or
add
xchg
xlat
pushf
or
lock
hlt
andb
xchg
fbld
add
adc
mov
sub
call
sub
insl
inc
push
and
or
dec
lea
dec
adc
dec
push
fdivrl
add
sbb
stos
adc
inc
fs
out
pop
inc
mov
es
dec
fs
pop
popa
and
mov
mov
and
je
push
repz
mov
addr16
fidivrl
or
shll
sbb
mov
and
imul
pop
jno
and
cmc
add
and
mov
data16
or
inc
or
call
les
and
dec
inc
mov
test
test
sbb
call
aaa
lock
mov
inc
pop
and
aad
mov
in
dec
xor
jl
adc
loope
in
fsubl
or
and
jl
movsb
addr16
adc
andl
nop
lods
jne
pushl
arpl
xchg
pop
jb
in
call
daa
pusha
and
addl
js
xchg
xchg
fdiv
mov
js
imul
jo
pop
ljmp
dec
push
add
jg
and
sbb
nop
sbb
xchg
xchg
decb
cmpsb
and
movsb
in
rcrl
in
in
jecxz
adc
cmpsb
insb
jne
shrb
mov
inc
mov
cwtl
fs
or
les
loopne
cmp
add
sti
xchg
mov
mov
jb
add
movsb
sti
push
es
and
shrb
fadds
jl
fwait
mov
adc
pop
dec
or
push
int
lea
daa
daa
cmpsl
mov
add
mov
xchg
in
add
mov
test
cmp
test
add
and
pop
inc
adc
fildl
repnz
cmp
cmp
nop
inc
or
or
xchg
dec
push
or
or
sub
or
inc
sbb
mov
sbb
enter
fwait
sbb
inc
inc
xchg
lsl
rcrl
inc
push
ret
xchg
mov
out
sbb
push
sbb
or
nop
add
or
adc
clc
sub
mov
add
mov
daa
xor
pop
nop
test
push
shll
xor
adc
leave
mov
adc
mov
imul
dec
popf
andb
filds
rcr
ret
sbb
pushf
sbb
jo
arpl
in
lea
sub
mov
sub
mov
and
rcr
mov
xchg
jne
ret
xor
sub
test
ja
imul
pop
pop
mov
mov
mov
in
mov
sub
or
add
and
cmp
movl
aam
cmp
push
adc
cmc
inc
dec
in
daa
add
ret
adc
or
repnz
iret
jl
imul
push
jge
das
rcrb
ljmp
shrb
mov
test
aad
leave
push
pushf
sub
stc
fs
adc
sub
sub
pop
or
push
sub
and
push
pop
nop
ret
cmpsb
or
call
pop
fidivl
push
push
ss
inc
stos
jecxz
das
add
movl
rorl
pop
js
jne
mov
or
pop
addr16
cmp
movsb
aas
mov
adc
ss
or
imul
mov
and
cmp
xor
insb
and
je
xchg
adc
pop
ret
push
in
test
ja
jo
adc
pop
xor
icebp
fdivs
cs
xchg
mov
cmp
cs
sub
outsb
loop
xchg
mov
xor
lock
sub
mov
popa
pop
xor
push
adc
enter
nop
and
jo
jb
jo
or
rclb
scas
push
loope
push
pop
pop
pop
add
sub
in
cltd
mov
xor
call
adc
or
push
and
adc
xchg
pop
lret
or
or
xor
or
addb
jno
xor
es
lods
das
cmp
or
or
pop
cmp
ret
jbe
fcmovu
mov
loop
div
popf
mov
add
sbb
jb
push
sbb
jno
xchg
add
adc
mov
insb
test
js
xor
push
mov
pop
mov
pushf
stc
dec
adc
cwtl
and
icebp
imul
adc
add
or
adc
push
jne
add
nop
out
or
ss
inc
or
movsl
ss
add
add
repnz
ret
cmp
int3
pinsrw
addr16
adc
dec
pop
test
int3
xor
maxps
iret
enter
test
mov
xchg
add
in
cmp
and
dec
out
jg
adc
movsl
ss
inc
dec
dec
roll
mov
insb
repnz
xlat
or
add
pop
mov
jmp
test
sarb
jnp
push
imul
add
rcr
inc
fsub
stos
push
and
insb
mov
stos
cmpsb
sbb
lock
das
xchg
or
cmp
jno
dec
orb
ss
int3
das
unpcklps
aam
adc
xchg
push
cwtl
in
mov
fdivrl
pop
xor
push
push
add
add
in
push
repnz
jl
mov
sbb
out
dec
cwtl
adc
dec
nop
pushf
mov
test
sub
rcpps
cs
adc
mov
mov
sub
inc
push
jl
popa
ret
or
in
bound
sbb
pop
lods
gs
aaa
inc
mov
lds
rcr
push
imul
fnstenv
bound
and
out
push
and
movsb
fdivr
add
sub
movsl
add
inc
roll
bound
push
adc
xor
imul
call
enter
add
fldt
mov
dec
and
and
and
inc
dec
inc
sub
mov
lret
mov
fcoml
pop
dec
aam
test
adc
jo
sub
dec
mov
nop
daa
prefetcht0
push
test
sbb
adc
mov
dec
mov
test
insl
xlat
xchg
sbb
push
cmp
inc
testl
inc
jp
dec
add
popa
xor
movsb
and
or
adc
sahf
cmp
pop
inc
in
ss
and
add
sbb
xorb
dec
int
or
push
imul
pinsrw
jne
xchg
mov
nop
notb
dec
xor
das
std
pop
inc
cmp
dec
out
mov
test
push
dec
add
in
dec
jns
insb
cmp
decl
imul
cmp
dec
shl
adc
arpl
cmpsb
and
mov
xchg
push
cs
or
jnp
js
lods
repz
rolb
push
sub
call
leave
aam
inc
cmp
inc
adc
nop
pop
xor
add
jge
and
jb
add
or
fdiv
aad
ret
xchg
mov
dec
sub
rolb
sbb
in
sbb
cmc
mov
sub
push
adc
icebp
pop
inc
arpl
leave
aaa
jmp
test
inc
jb
fildll
xor
xchg
pop
call
adc
addr16
arpl
cs
cmpsl
sub
dec
xchg
add
cmpsl
je
inc
sbb
xor
or
mov
xlat
xorb
cmp
dec
xor
rorl
pop
rclb
dec
int3
inc
aam
popa
scas
inc
sub
or
insl
push
aam
sub
test
push
mov
jnp
dec
call
in
mov
lock
movsl
xorl
cmp
repz
test
or
push
dec
lods
adc
ja
add
xchg
xchg
and
mov
and
cmpsb
or
hlt
jne
sbb
inc
push
mov
adc
cmp
sbbb
int3
gs
rclb
cmp
sub
enter
jecxz
cmp
iret
dec
lcall
jb
imul
add
add
aam
mov
cmp
dec
jg
jo
add
fcomp
sbb
cmp
mov
lds
divl
in
xchg
add
lods
ret
mov
push
jecxz
aas
pop
fdivr
dec
arpl
or
xor
mov
dec
xchg
test
jne
mov
mov
daa
push
adc
sbb
pusha
xor
cmpsl
and
mov
and
stos
lods
in
jne
dec
mov
movups
sub
sub
mov
sbb
adc
aas
sbb
or
js
mov
push
dec
xchg
mov
adc
jb
dec
adc
loopne
or
push
test
push
pop
sbb
fmuls
daa
mov
cmp
das
mov
outsb
movsl
lods
lods
test
rolb
jns
clc
clc
mov
ret
cmp
rolb
mov
push
scas
or
dec
repz
cwtl
js
pusha
add
js
popf
movsb
pop
dec
push
imul
nop
out
and
xor
or
and
lods
dec
jnp
sub
and
and
add
push
mov
fstl
and
rcll
leave
push
adc
aam
fstpl
or
sub
and
push
pop
imul
mov
es
sbb
add
adc
or
xchg
mov
cwtl
push
test
sbb
test
js
lods
adc
enter
pop
ds
inc
fisubl
and
sub
push
in
arpl
ljmp
pop
nop
mov
fnstsw
test
aam
repnz
bound
les
xorl
sub
fcoml
jne
xchg
sbb
sbb
shll
rol
mov
dec
leave
and
int3
mull
mov
iret
push
inc
xchg
cmpsb
push
or
or
sbb
fsubs
adc
insl
pop
push
sbb
fdivr
call
leave
loopne
push
iret
lods
test
or
xchg
sbbl
mov
nop
inc
xor
xor
fs
es
push
sbb
orb
adc
push
or
es
adc
inc
cmpsb
sbb
adc
or
aam
and
inc
mov
imul
cmc
mov
pop
push
mov
stos
push
jmp
dec
sbb
sbb
lcall
sbb
jns
pop
les
fucomi
loopne
lds
insb
stos
sbb
jp
notl
neg
mov
sahf
rorb
adc
fs
push
insl
mov
adc
es
jbe
adc
fs
xor
cmp
cltd
fs
dec
sbb
inc
fs
dec
cmp
push
nop
sub
pop
inc
inc
mov
dec
mov
idiv
fwait
mov
cmc
shlb
cwtl
dec
test
adc
enter
mov
leave
adc
movsb
push
pop
jno
rolb
outsl
iret
push
pop
sbbl
dec
and
test
and
add
add
rolb
sbb
aam
and
xor
xor
sbb
pushf
pop
xlat
or
or
stc
xchg
xor
std
dec
pushf
and
mov
or
push
jge
icebp
ret
dec
xchg
stos
xor
insl
lods
test
fistps
inc
enter
test
movsb
in
pop
bound
jmp
pusha
fisubl
es
push
mov
pop
adc
and
lock
int3
cmp
mov
les
rcl
data16
loop
aam
in
mov
adc
dec
and
mov
sbb
shr
fs
adc
push
sbb
adc
test
push
inc
in
dec
shr
push
xor
xchg
dec
lds
rcrb
out
test
bound
inc
inc
icebp
inc
adc
ja
mov
insb
and
iret
arpl
rolb
or
bound
jmp
out
pop
loopne
inc
repnz
mov
test
or
mulb
fs
adc
inc
or
dec
js
fstpl
xor
test
xor
leave
test
test
xor
loopne
movsb
stos
pushf
or
and
pop
sbb
xor
mov
int3
jmp
mov
dec
sbb
xor
outsl
in
xchg
fiaddl
push
fs
or
cld
cwtl
test
adc
and
add
aam
pop
jo
add
sti
xlat
or
xor
xor
in
cmpsl
jnp
enter
lds
fisubl
jbe
or
push
or
inc
test
out
daa
and
in
aam
adc
push
cmp
fcoms
dec
push
nop
imul
enter
ficoml
or
add
test
imul
sub
addr16
les
dec
lods
rorl
lret
in
jp
pop
pop
push
ficoml
in
jns
outsb
add
mov
outsb
ja
cmpsl
add
cltd
insl
stos
enter
lock
and
imul
pop
mov
adc
aaa
adc
rorl
ja
push
test
imul
cmovbe
or
inc
sub
inc
addl
rcr
idivl
push
pop
leave
xchg
mov
jb
jmp
sbb
push
arpl
inc
lret
out
lods
sub
ficompl
mov
enter
pop
fisubrl
ret
inc
aam
pop
and
loop
imull
call
or
leave
mov
lds
out
adc
xchg
insl
fildll
dec
sbb
mov
pop
in
int
sub
pop
or
pop
mov
int3
mov
jo
rolb
inc
test
pop
dec
dec
testl
xchg
lock
dec
les
lods
loopne
or
sbb
pusha
sub
jbe
in
das
fs
das
cltd
rolb
xor
outsl
adc
xchg
adc
jmpw
push
jg
ret
nop
adcb
or
shld
mov
stos
inc
in
add
xor
mov
push
adc
aam
les
ret
orb
pop
addb
nop
imul
mov
xor
add
and
push
test
xor
mov
add
lods
insb
pushf
shlb
add
xor
sub
inc
fs
imul
xchg
dec
es
insb
lods
push
dec
es
mov
cltd
fs
push
jl
je
fs
dec
test
cwtl
fs
dec
es
mov
dec
es
mov
pop
inc
jg
mov
xlat
ja
lea
mov
xchg
and
jmp
cwtl
jns
fwait
push
pop
fcoms
xchg
mov
mov
pop
adc
sbb
je
pop
cltd
movnti
mov
or
loopne
adc
xor
add
insb
je
in
and
adc
pushf
movsb
and
mov
int3
aam
in
arpl
sub
inc
push
fsubrs
adc
push
mov
and
sbb
mov
pop
cmpsb
loope
popa
and
int
outsb
inc
test
and
leave
js
pop
aam
cmp
mov
mov
cmp
cmp
jb
mov
test
xchg
dec
xor
je
fs
lret
and
jecxz
test
sub
test
and
mov
and
or
nop
test
dec
dec
test
aam
add
aam
cmp
mov
arpl
push
ja
gs
cwtl
ss
aam
sub
stos
xchg
xor
roll
pop
add
cwtl
sbb
mov
xchg
inc
xor
loop
sbb
movsb
pushf
loop
cmp
push
aaa
adc
leave
and
and
pop
int3
jns
push
push
jb
js,pn
xlat
addb
lods
sub
and
rcr
cwtl
dec
insb
xchg
mov
and
and
or
push
sbb
inc
inc
and
sbb
leave
and
mov
sbb
and
xchg
dec
xor
pusha
negl
insl
cmp
jecxz
sub
dec
inc
fsts
adc
jg
mov
xchg
jb
loopne
leave
push
and
lods
adc
xor
test
test
cltd
pop
scas
add
pop
mov
add
shrl
or
xchg
mov
push
gs
test
add
test
xor
rcrb
in
dec
popf
gs
or
cmp
or
aas
adc
pop
aam
add
bound
idivl
cmp
jmp
mov
rcrb
sbb
iret
pop
nop
mov
int3
or
jge
roll
sbb
imul
mov
xchg
sbb
push
mov
ja
xchg
sbb
xor
pushf
mov
and
mov
es
enter
xor
xchg
mov
fmul
les
xor
push
or
filds
test
jl
add
and
adc
enter
pop
sbb
ja
sbb
or
int3
xchg
sbbl
adc
mov
scas
popa
orb
mov
mov
subl
or
rolb
stos
and
fwait
sbb
movsb
sbb
movsb
adc
or
inc
es
sbb
jg
mov
cmp
nop
repnz
js
xor
mov
sub
mov
adc
dec
fwait
add
mov
mov
imul
sbb
or
nop
mov
movsb
mov
subl
fs
push
or
push
nop
or
push
pusha
popa
sarl
inc
or
inc
sbb
sbb
push
sbb
dec
adcl
lea
aam
andl
jbe
xor
in
adc
xlat
rolb
and
adc
insl
hlt
cltd
inc
loop
add
or
test
cmp
in
sti
leave
dec
push
or
mov
fs
and
sub
push
movsb
les
lds
clc
mov
in
cltd
scas
cltd
add
ss
cld
icebp
sar
pusha
rcrb
xor
repz
sbbb
clc
icebp
cmpl
xor
popl
mov
mov
or
push
enter
and
mov
fs
adc
bound
push
sbbb
sub
pop
shr
shrb
scas
and
scas
dec
ret
inc
insb
jle
call
inc
das
out
sbb
mov
or
dec
pop
mov
shlb
rolb
pop
out
and
sbb
fsubr
or
hlt
loope
add
fld1
mov
mov
fwait
xchg
and
or
sbb
out
leave
cmpsl
adc
cs
push
test
inc
test
dec
cmpsb
sbb
inc
xchg
movsb
aad
cmp
outsl
lods
adc
imul
sub
sub
insl
push
popa
sub
movsb
andb
mov
sub
test
imul
orb
pop
jecxz
sub
sub
adc
negl
dec
ss
dec
mov
jmp
mov
inc
push
inc
jecxz
stos
sbb
fsubl
movsb
es
cwtl
aas
pushf
fadds
outsb
adc
jnp
inc
mov
bound
push
test
dec
dec
dec
ret
sbb
xchg
lods
sub
inc
fsubs
ret
scas
adc
aam
inc
in
movsb
iret
insl
adc
adc
or
scas
test
fisttpl
shrl
xor
adc
nop
ja
fiaddl
adc
add
fstpt
aam
nop
sub
pop
pop
adcb
and
adc
xchg
dec
test
sub
aas
ret
xor
std
add
xor
xor
dec
fdivl
inc
or
js
movsl
movsl
cs
sub
cmp
push
and
insl
mov
push
mov
cmp
inc
lods
jbe
add
dec
cli
inc
adc
mov
cli
lahf
adc
inc
dec
add
rclb
daa
pop
dec
rclb
scas
test
lcall
inc
sahf
lods
cmp
je
movb
add
ss
int
inc
add
in
lcall
test
arpl
xor
js
dec
xor
xor
jo
fnstenv
inc
cmpsl
nop
cmp
cltd
clc
mov
and
xor
and
adc
adc
pop
nop
mov
mov
dec
add
lahf
cmp
js
sbb
inc
dec
int
rolb
popa
out
test
sbb
xchg
push
mov
xchg
bound
je
decl
rcrb
jno
xchg
xorb
ds
enter
jge
test
jbe
sbb
add
addb
push
ret
pop
and
xchg
inc
adc
or
push
mov
pop
shlb
mov
imul
lods
adc
test
mov
push
sbb
shl
movsb
mov
add
push
ret
adc
push
popf
or
dec
pop
pop
movsl
lahf
sbb
sub
cvtpi2ps
cmovae
mov
fadds
add
mov
insb
nop
sub
push
fmul
add
inc
sub
push
push
pop
or
jp
push
push
add
nop
nop
notb
sub
lods
pop
push
push
inc
mov
lea
cltd
loopne
cwtl
xchg
or
inc
sub
fwait
mov
sti
out
nop
out
dec
push
cld
hlt
or
repnz
or
fsincos
cmpsb
push
mov
sahf
or
sbb
lods
or
in
fists
jmp
pop
sub
push
sbb
out
divl
fcomps
movb
test
xchg
and
ds
mov
and
inc
lahf
push
les
push
das
xchg
mov
loopne
imul
push
scas
cmp
cmp
adc
cmp
and
dec
sub
inc
pop
push
or
push
push
add
mov
dec
mov
imul
dec
out
cld
mov
pop
mov
cltd
mov
sub
or
mov
rol
dec
mov
push
dec
or
jmp
jl
adc
cmp
sete
icebp
gs
es
or
push
xchg
push
push
pop
aas
in
and
mov
test
jg
sub
in
mov
inc
std
add
jle
mov
add
ds
repz
add
sbb
addb
cwtl
test
mov
sub
inc
bound
sahf
add
inc
push
roll
lret
insl
ss
in
inc
or
pop
push
scas
add
jg
mulb
add
inc
orb
jnp
mov
add
pop
or
adc
mov
rcll
xchg
adc
or
cmp
jg
rclb
cmpl
test
add
nop
add
into
pop
adc
test
dec
iret
repz
ds
imul
push
sub
and
push
mov
pop
cmp
imul
xor
add
push
incl
sub
adcb
mov
popa
test
inc
mov
and
insb
outsl
arpl
xorb
outsb
push
mov
pushl
popa
arpl
jne
jb
outsb
je
add
das
add
push
lahf
adc
insl
adc
cs
sti
jg
inc
outsl
jb
js
je
jb
gs
add
or
outsl
mov
stc
testl
add
add
jne
les
fstp
mov
push
jb
dec
push
add
dec
lock
add
aaa
or
ds
add
xor
inc
push
add
aas
jmp
mov
pop
dec
add
sub
mov
je
push
insl
xchg
je
je
jo
addl
fisttpl
mov
daa
cmpsw
insl
push
push
mov
jae
bound
pminub
sbb
popa
out
pop
cmp
insb
mov
fsubrp
jp
outsl
or
mov
fisubs
gs
bound
jne
fnstsw
and
outsl
jmp
jo
mov
and
stos
insl
and
jne
sub
push
imul
scas
cmp
jne
inc
push
lock
pop
fmull
sahf
xchg
sub
dec
sub
fs
in
icebp
sub
insb
lcall
repz
lahf
popa
cmp
push
sbb
inc
arpl
mov
jecxz
inc
or
daa
sbb
or
fbstp
xchg
js
outsb
bound
jnp
adc
ret
arpl
loopne
outsl
fistl
insl
and
cmp
mov
push
filds
xchg
popa
in
mov
xor
fidivl
and
nop
or
xor
lds
lock
andl
mov
fidivrl
jg
popa
sub
or
outsl
inc
xchg
lahf
aaa
jg
shll
dec
iret
fisttps
dec
fs
xor
ficoms
data16
sbb
push
pop
jbe
imulb
stos
repnz
outsl
xlat
xchg
das
rcrl
jae
lods
xchg
aad
sbb
jo
lahf
sbb
dec
outsl
aas
or
arpl
mov
scas
sbb
mov
lock
push
mov
and
pop
adc
jmp
imul
sbb
mov
inc
shll
popa
leave
push
or
xor
outsl
pop
sub
add
adc
add
pop
mov
pop
insl
lret
je
or
popa
mov
fisubs
test
scas
popw
pop
jo
testl
sub
mov
cmp
xor
cwtl
lods
dec
addr16
add
jmp
andb
ret
fists
push
inc
inc
mov
push
adc
das
sbb
dec
push
adc
push
sbb
sbb
jl
out
mov
sbb
test
fbstp
rcrl
push
das
push
pop
sahf
push
sbb
sbb
iret
cmp
mov
cmpsl
out
ds
incl
dec
mov
addr16
jbe
fdivs
add
jo
les
bound
lret
pop
out
gs
cmp
imul
mov
ds
mov
jo
out
cwtl
shll
cmpsl
push
fwait
cmp
fnstsw
dec
add
sbb
xor
add
add
and
cs
jns
add
das
das
and
and
pop
idivb
daa
dec
inc
mov
out
fsubs
push
push
decb
and
ret
dec
pop
mov
pop
aas
dec
inc
push
push
inc
sub
daa
mov
push
daa
pop
imul
outsl
dec
and
mov
add
das
pop
mov
imul
iret
jns
mov
out
loopne
push
arpl
jnp
insl
pop
pop
jp
jae
fbld
je
and
sub
aaa
in
ljmp
ds
imul
mov
arpl
fcomps
out
mov
cmp
add
dec
jmp
adc
add
das
das
adc
dec
push
inc
inc
arpl
bound
dec
outsl
jbe
inc
mull
dec
arpl
inc
jo
sub
sbbl
jne
jne
xor
insb
xchg
outsb
jle
mov
imul
mov
popa
outsb
adc
cmp
scas
cmpsl
xchg
popl
aaa
out
jg
addr16
popa
je
jb
xor
lods
std
int3
lahf
mov
jae
push
gs
insl
mov
jne
dec
outsl
outsb
and
bswap
cmp
pushf
xchg
pop
dec
inc
aas
arpl
out
dec
or
sti
fldl
mov
jae
in
test
push
inc
push
popa
insb
jne
inc
sub
mov
ret
mov
and
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
or
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
aaa
mov
mov
rcrb
pop
pop
pop
lock
mov
bound
gs
imul
jo
mov
mov
ja
jns
jnp
jge
jg
xchg
dec
outsw
adc
lcall
loopne
pop
in
jnp
inc
add
orb
sar
std
aas
ds
jno
icebp
pusha
inc
mov
clc
ret
movsl
add
mov
je
arpl
imul
imul
cmp
mov
add
jo
xor
es
popa
js
addl
je
pop
dec
pop
sbb
fists
lods
dec
out
ret
ret
sub
in
sbb
int3
adc
imul
add
add
add
add
lds
push
pop
push
add
xor
addr16
test
add
pusha
push
mov
js
or
cmp
add
sti
mov
add
addb
add
xchg
adcb
test
add
orb
daa
push
cmpb
push
and
sub
jb
int3
push
jo
lret
cs
push
push
jmp
push
outsb
imul
jo
pop
adc
pop
or
sbb
adc
iret
leave
xor
sbb
daa
xchg
lea
mov
and
leave
and
add
add
push
xchg
shl
inc
scas
mov
lret
hlt
aad
cmc
add
lods
mov
stos
in
add
sbb
cmp
pop
sbb
push
inc
sub
cmpsl
out
rdtsc
ss
jmp
dec
inc
or
pop
stos
push
notl
fs
add
cs
jae
fstl
jbe
bound
je
outsb
data16
push
jbe
xorb
inc
xor
push
jae
xchg
daa
pop
lea
mov
popa
addr16
outsl
js
push
xchg
cs
aam
testb
insb
jo
and
and
mov
aaa
insb
les
dec
imul
or
inc
mov
mov
lods
ds
cmp
dec
inc
jb
jns
daa
mul
mov
pop
and
mov
cmpsl
cs
je
and
arpl
je
sbb
mov
push
insl
push
fsubrl
push
jbe
mov
cld
mov
fdivl
or
jb
and
xor
pusha
inc
jbe
push
push
ss
jns
insl
and
mov
rolb
and
pushw
in
push
popl
inc
imul
pusha
gs
add
push
lds
insl
adc
dec
test
bound
adc
popa
insb
jae
mov
pop
in
adc
push
jae
or
cmp
jo
pusha
insb
call
xor
addr16
subl
icebp
or
gs
mov
mov
adc
sbb
in
push
push
push
push
dec
testl
dec
push
scas
cltd
push
lods
lea
dec
push
inc
ret
dec
jge
insl
jl
clc
adc
jb
push
imul
call
mov
outsl
xor
inc
in
mov
das
gs
or
or
sbb
divb
pusha
push
mov
addr16
jp
scas
mov
xchg
daa
jnp
pop
loope
mov
popw
pop
cmp
dec
jl
cmp
or
ds
and
iret
repz
sub
es
lcall
sub
sub
dec
mov
outsb
add
sub
cmp
pop
or
sbb
das
push
and
aaa
aaa
cmp
outsb
cmp
ds
mov
pop
pop
jne
stos
addl
push
jbe
sbb
rcr
das
jo
ss
gs
imul
mov
dec
xor
sahf
inc
pop
and
mov
fs
jo
sub
xor
jl
out
sub
pop
cs
add
repz
xor
jge
iret
repz
cld
sub
imul
push
aam
iret
repz
int3
enter
cmp
repz
lods
test
lcall
cwtl
push
je
xchg
idivl
push
mov
dec
jl
push
jo
out
sahf
out
fs
pop
pop
sahf
out
sahf
push
push
dec
inc
xor
cmp
out
and
cld
sub
enter
repz
push
lcall
sbbb
fs
xor
cmp
out
sbb
lock
test
cmp
repz
in
sub
fwait
loope
mov
sub
push
add
jl
and
adc
sub
in
add
xchg
inc
sub
dec
lods
in
sbb
mov
inc
addl
mov
addb
stos
ljmp
xchg
dec
leave
push
mov
add
add
dec
cmp
add
ja
xor
push
mov
inc
adc
xchg
jnp
inc
mov
sbb
filds
insl
sbb
jle
add
addb
xchg
lea
xchg
xchg
call
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
pushl
mov
mov
enter
int3
int
iret
rcl
rcl
aam
call
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
inc
adc
idiv
stc
cli
sti
cld
std
jmp
inc
test
xchg
loope
push
sub
incl
rclb
popa
and
xchg
js
popa
data16
out
pop
inc
test
jns
push
xor
test
jb
add
ds
scas
mov
aaa
push
arpl
sbb
insb
fs
sbb
lods
xor
push
mov
or
aam
jmp
push
setl
scas
add
sub
add
inc
adc
push
je
xor
xor
push
dec
inc
dec
cmovns
fwait
cmp
push
cmove
push
or
call
imull
adc
decl
inc
call
rclb
mov
out
xor
mov
inc
jnp
inc
loop
mov
ds
pop
adc
decb
or
cli
jb
jge
arpl
cmp
fbstp
jg
adc
fisubrs
cld
push
mov
and
cmp
dec
imul
lcall
iret
lret
add
inc
mov
mov
sub
sti
add
dec
fwait
ss
sbb
pop
jns
ds
xor
dec
inc
dec
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
incl
ljmp
and
cmp
cmpsb
das
xchg
pop
and
xchg
lret
incl
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
xchg
sub
iret
aas
sbb
insb
mov
out
leave
ljmp
orb
pop
test
xor
jle
dec
add
scas
lods
dec
lock
xor
or
mov
aas
mov
pop
pop
repnz
hlt
and
es
mov
fcompp
add
lds
outsl
loope
add
dec
cmc
ja
sub
int
movsb
pushl
or
shlb
or
jmp
sub
xor
sub
mov
mov
ds
and
inc
cmovg
aaa
mov
xchg
jmp
and
test
jle
imul
xor
sti
es
jae
movsl
xchg
mov
lret
out
and
data16
scas
sub
inc
cmpsl
subl
js
sub
ret
bound
jg
subb
jne
fs
pcmpeqw
ss
sti
or
ja
popa
daa
fucomi
push
or
add
je
push
lods
push
mov
pop
mov
je
mov
dec
loopne
mov
ret
sub
fcomi
test
jb
add
ja
add
sbb
push
nop
nop
push
pop
xchg
add
xchg
imul
sbb
lret
idivl
jae
insl
jle
push
lods
cmp
cmpsl
mov
and
loope
mov
jmp
arpl
repz
mov
fbstp
out
push
sbb
inc
mov
push
mov
pop
jg
mov
xor
insb
daa
jnp
and
push
das
cmpsl
cmp
or
push
add
add
push
xor
adc
faddl
sti
sbb
jns
outsb
xlat
cs
cmp
fs
mov
cmpsl
xlat
pushf
or
mov
je
xchg
js
sub
mov
aas
cmpsl
cs
push
out
add
xchg
jo
subl
cmp
pop
pop
mov
jne
adc
dec
xlat
hlt
and
out
jo
imul
call
es
and
cmp
xorb
daa
adc
push
mov
cmpsl
sbb
inc
xchg
inc
arpl
mov
dec
js
mov
mov
mov
dec
jp
pop
loopne
loope
aas
ja
pop
rorl
dec
jecxz
jnp
mov
sub
ljmp
test
pop
mov
shll
inc
xlat
and
je
and
outsb
ficompl
daa
pop
xchg
jo
arpl
add
gs
loope
jp
jne
xor
and
dec
lret
arpl
mov
pusha
push
and
pop
in
jo
pop
inc
mov
add
fdivs
fldt
dec
mov
roll
add
arpl
mov
lret
sub
stos
mov
inc
sub
daa
into
ret
ss
scas
js
jno
or
jo
add
test
push
into
pop
aaa
sbb
mov
je
mov
push
add
adc
arpl
mov
inc
cmp
arpl
cmovnp
dec
loope
hlt
andb
data16
pop
daa
out
or
les
xor
subb
mov
out
jnp
hlt
arpl
adc
aaa
sub
add
or
fwait
test
mov
pop
push
and
scas
ljmp
sub
and
bound
cmp
dec
aas
loope
push
push
push
inc
pop
push
out
cmp
daa
jne
add
dec
pop
outsl
dec
fwait
jp
rol
sbb
inc
das
push
hlt
mov
push
adc
push
clc
ret
js
mull
dec
xchg
jne
pusha
testl
add
sub
ret
dec
sub
outsb
outsb
sub
and
scas
out
jmp
push
fiaddl
bound
jae
imul
push
push
pop
mov
addr16
sti
push
rdmsr
scas
xchg
jecxz
push
bound
or
push
out
arpl
pop
mov
adc
outsl
jmp
add
mov
in
dec
outsl
insl
cli
mov
cs
mov
add
es
or
out
jecxz
je
inc
push
inc
scas
imul
mov
arpl
dec
insb
xchg
xor
inc
inc
dec
add
dec
out
test
out
adc
mov
add
ss
mov
iret
mov
inc
pop
cs
xchg
dec
por
adc
pop
mov
fdiv
mov
addr16
outsl
or
ja
sbb
inc
out
jmp
pop
push
aas
ds
testl
or
mov
add
inc
inc
jl
jl
and
jl
mov
mov
imul
mov
and
addr16
mov
stos
das
mov
push
pop
sbb
jecxz
fidivrl
jnp
cmp
jns
push
mov
pop
lods
fnstsw
adc
rcr
jl
pop
jnp
cmp
pop
imul
jmp
adc
insl
ja
add
mov
lea
pop
bound
outsb
jg,pn
and
add
mov
mov
jge
cmp
dec
outsl
jo
js
lret
jl
jo
loopne
and
jns
mov
mov
fstpl
ret
loopne
pop
fisubrs
fs
mov
dec
lock
loope
adc
jl
ret
sbb
push
repnz
inc
repnz
lods
js
mov
es
add
jbe,pt
push
imul
inc
pop
and
sbb
add
push
test
push
jle
add
sub
mov
mov
xlat
aaa
sbb
push
jecxz
daa
inc
div
push
imul
jb
sahf
inc
jns
jae
jae
mov
sbb
pop
andb
inc
fisttps
xor
pop
jg
pop
cli
js
cli
add
mov
clc
das
pop
pop
pop
push
mov
jb
rcrb
pop
pop
data16
aaa
inc
mov
insb
roll
push
mov
aas
adc
popl
mov
aaa
es
loope
inc
outsl
das
addr16
ffreep
push
lcall
scas
push
add
add
inc
xchg
inc
cmpsl
stc
xor
fiadds
cmp
scas
fnstcw
ss
add
lret
ss
pop
cwtl
ss
and
mov
fisubrs
xlat
fimull
push
mov
dec
ds
xor
dec
sti
push
pop
push
push
lds
imull
test
push
testb
push
inc
jg
idivb
iret
push
es
ds
pop
jmp
out
jl
cmp
and
pop
test
shr
add
aas
pop
xlat
insb
or
sub
inc
pop
or
fwait
popa
shrl
fidivrs
mov
sbb
repz
xchg
stos
push
leave
pop
or
cmp
inc
outsl
jg
adc
jns
inc
push
inc
and
call
imul
ja
iret
pop
aaa
dec
and
push
orl
sub
jae
imul
pusha
or
daa
inc
addr16
ret
sub
aaa
dec
push
add
or
or
xor
scas
push
lahf
jae
aas
rcl
cmp
mov
push
and
pop
out
pop
fnstsw
push
gs
insl
pusha
push
popa
jne
or
ss
push
and
dec
bound
xor
pop
sub
and
push
icebp
scas
aad
sahf
and
je
das
push
sahf
out
fimuls
jg
stos
fstpt
pop
jl
jne
jne
jp
mov
out
cmp
xchg
scas
mov
and
sahf
jnp
rcrl
or
bound
aas
add
ja
outsb
jbe
les
adc
gs
data16
pushf
je
cmp
push
mov
js
push
push
jo
jb
into
jb
out
jge
mov
and
jae
sbb
pop
insb
imul
cmp
and
and
arpl
xor
jle
fbld
cmp
fs
adc
test
adc
mov
mov
mov
outsb
je
ss
sbb
imul
outsb
outsw
sub
ja
adc
fcomps
and
sbb
mov
xor
fmuls
xchg
push
daa
imul
cmpsl
xchg
or
dec
pop
push
scas
ja
mov
push
ja
push
mov
add
jp
scas
shlb
add
inc
cmpl
push
pop
inc
adc
xlat
mov
addr16
dec
push
and
mov
aaa
push
sbb
mov
xchg
js
push
pop
mov
sub
cmp
pusha
and
jo
cs
sti
mov
ret
push
or
xor
push
iret
lea
push
cmp
pop
push
into
or
or
or
test
cmp
sahf
cmp
cmpsb
pop
mov
aas
add
mov
ret
data16
and
mov
fdivl
sahf
outsl
loop,pn
lcall
repnz
xchg
fldenv
sub
push
or
jo
inc
or
pusha
test
mov
inc
mov
push
add
les
dec
inc
out
push
sbb
pop
mov
outsl
or
or
movsl
cmp
adc
lods
sub
cmp
hlt
push
imul
inc
jle
add
dec
icebp
dec
outsl
adc
lods
pop
or
fmull
aaa
scas
orb
test
dec
js
push
fiaddl
mov
dec
add
lcall
add
lcall
call
scas
and
lcall
adc
push
popa
add
add
and
sbb
cmp
add
lods
fimull
dec
jae
fidivrl
data16
pop
fildl
sti
dec
push
das
mov
xor
arpl
pop
cli
add
xor
vmptrld
fs
add
mov
in
add
and
inc
sub
into
jle
rolb
dec
pusha
into
movb
push
mov
cld
jbe
ss
js
lret
iret
inc
lods
inc
rol
push
ja
add
jbe
out
imul
push
xlat
inc
and
push
push
inc
add
adc
adc
sub
fsubrp
pop
shlb
or
or
lods
mov
adc
js
add
add
jge
cmp
inc
jg
push
fisubrl
sahf
and
sbb
jmp
aad
add
mov
or
ja
jg
add
or
addr16
andl
arpl
outsl
jo
pop
pop
add
addr16
mov
pushf
push
cmc
sub
imul
arpl
je
lahf
inc
and
push
aas
shlb
jmp
ja
andb
adcl
push
pop
icebp
cs
jb
or
push
xchg
out
stos
pop
sub
faddp
lds
push
cs
add
stos
lahf
mov
cmpsb
mov
shlb
aaa
sbb
je
inc
sbb
ljmp
nop
sbb
add
or
jnp
inc
pop
inc
repz
pop
add
lea
subl
push
imul
push
or
inc
arpl
mov
jae
mov
aaa
jno
push
add
fistpl
and
mov
outsl
lock
or
pop
das
dec
adc
inc
sbb
arpl
shrl
imul
ss
inc
and
into
shlb
roll
ret
add
mov
ret
out
pop
rcr
out
test
addb
mov
inc
inc
repz
jp
std
ret
cmpsl
xchg
xor
cmp
mov
sub
pop
pop
jb
pop
scas
inc
outsb
cmp
sbb
xor
ficomps
fldt
sbb
xchg
out
mov
mov
shrl
mov
lahf
sti
pop
rcll
or
cmp
push
xchg
push
and
pop
xchg
push
fstp
mov
jnp
jb
xlat
test
push
mov
inc
sti
jp
rcr
cmp
test
adc
add
and
or
addr16
xor
jnp
cmpsl
xchg
aas
xor
xor
arpl
push
sub
add
xlat
es
cmp
pop
inc
outsl
daa
es
mov
sub
ja
arpl
cmp
shll
popa
shrl
mov
jae
dec
sbb
sub
xor
hlt
push
inc
arpl
out
pop
xor
scas
inc
jne
and
adc
xor
out
jecxz
sbb
fwait
test
test
xchg
loopne
adc
add
cmpsl
adc
arpl
jne
sub
imul
ret
test
test
inc
sbb
ljmp
xor
sub
aaa
xor
inc
push
xor
insl
stos
jp
das
das
dec
cmp
outsl
push
inc
dec
adc
mov
xchg
cmp
stos
xorb
das
add
mov
scas
cmp
les
dec
pop
out
clc
fs
pop
push
or
lds
push
ljmp
pop
rclb
out
lahf
fmull
xorl
jo
and
dec
das
sub
sbb
pop
inc
aaa
lret
cmp
mov
jecxz
pop
popa
xchg
cmp
rorl
or
mov
add
ret
pop
cmova
dec
mov
push
sub
ljmp
cmp
addr16
push
pop
xchg
cs
cs
or
sbb
push
bound
mov
xchg
arpl
out
xchg
sbb
pop
add
dec
je
sub
movsb
push
fisubl
cmp
cwtl
scas
mov
inc
and
lret
sub
xor
sub
roll
or
inc
es
lahf
rcr
movlps
cmp
and
push
mov
call
push
pop
minps
mov
aas
push
fs
or
inc
dec
jle
dec
mov
jmp
pop
jno
mov
repz
push
mov
stos
push
scas
mov
outsl
push
imul
push
sahf
test
mov
or
sbb
iret
jp
scas
mov
add
roll
mov
or
lret
pop
add
dec
fisubrl
pusha
fistpll
cmp
out
or
lods
adc
ja
adc
pop
mov
stos
das
and
mov
imul
xor
push
mov
push
mulps
aaa
out
ss
adc
mov
int
sbb
outsb
ss
int
sbb
sbb
pop
pop
pop
jmp
test
fwait
out
into
js
and
and
inc
cs
push
and
outsb
bound
mov
pop
and
xor
inc
dec
pop
lea
das
dec
sbb
cmpsl
arpl
jno
jno
lret
push
pop
sarl
mov
out
mov
xchg
pop
sti
push
out
or
shll
xchg
pop
pop
jg
addb
xor
lods
daa
sub
dec
pusha
pop
ret
lea
or
push
loop
add
popa
sbb
cmp
sub
jmp
add
mov
daa
cmp
mov
mov
test
add
out
mov
push
lods
lahf
out
cwtl
mov
aam
fwait
dec
jo
loop
pop
mov
mov
das
sbb
lds
popa
sbb
jg
sub
push
add
sub
fildl
push
xor
or
fistpll
push
mov
xor
mov
movntps
das
pop
bound
and
xchg
fimuls
xchg
aaa
inc
test
inc
and
mov
inc
jbe
mov
jmp
bound
push
jecxz
inc
mov
daa
mov
imul
scas
xor
arpl
xor
or
jnp
jge
mov
repz
jae
xor
fs
insl
popf
or
adc
das
inc
cmp
daa
jmp
scas
add
push
insl
pop
inc
sub
and
add
fsubrl
or
cmpsl
push
mov
insl
arpl
bound
mov
dec
clc
sub
inc
xchg
push
pop
or
mov
out
out
or
mov
sbb
and
jecxz
sub
push
leave
push
repnz
mov
dec
pop
and
stos
in
dec
hlt
loopne
pop
and
in
jb
lods
fistpll
mov
xchg
fs
cmpsb
xchg
push
rcr
push
repnz
and
aam
in
cltd
dec
test
fimull
in
scas
xchg
stos
fs
inc
in
fdivs
dec
and
in
lock
mov
push
add
push
repnz
pusha
or
dec
pop
and
stos
in
adc
push
jns
shrl
scas
xchg
sbb
sarb
push
jb
sub
rorl
xchg
test
xchg
mov
ret
leave
xlat
mov
mov
jno
jecxz
pop
and
pop
adc
inc
cmp
lahf
xor
pop
aaa
fcompl
dec
mov
cmpsb
ret
insl
pop
adc
mov
inc
push
or
and
jmp
fistpl
and
inc
in
mov
xor
mov
mov
pop
sub
inc
xor
loopne
xchg
out
dec
pop
xor
inc
mov
dec
frstor
and
mov
and
imul
inc
sbb
test
inc
mov
test
insl
adc
push
mull
mov
rorb
shll
add
sub
mov
mov
movsb
adc
xchg
push
mov
push
cmp
dec
adc
sbb
outsb
add
push
adc
or
lea
pop
aaa
or
push
push
xor
scas
addr16
sub
mov
xchg
insb
inc
mov
fildll
push
mov
scas
cmpsl
lahf
jo
je
xlat
pop
inc
sub
or
add
sbb
add
or
cmp
and
sti
mov
ret
push
fisubl
rcll
aaa
js
leave
mov
inc
mov
outsl
inc
mov
js
scas
mov
das
push
fisubrl
pop
fmuls
rcrl
test
aas
pop
gs
add
or
lahf
pushl
and
in
xor
ja
push
bound
xor
or
adc
sbb
rclb
push
loop
mov
jbe
pop
lcall
shrb
jg
jae
and
add
push
pop
xlat
pop
add
sbb
bound
movsb
insl
pop
lea
ds
pop
sbb
push
pop
add
sub
pop
or
and
add
mov
pop
sbb
push
push
xchg
jb
add
pop
inc
popl
or
or
xchg
fisttpl
cmp
inc
es
addr16
bound
adc
je
or
test
cmp
xor
sahf
gs
cltd
add
or
cmp
xor
mov
es
jae
and
sub
sub
shll
icebp
imul
icebp
push
outsb
dec
mov
push
jbe
cmp
jnp
xor
xor
daa
outsb
xor
pusha
insb
and
xchg
ds
push
int3
add
in
ja
adc
ss
xchg
jae
imul
daa
js
outsl
dec
js
fs
enter
pop
daa
sbb
dec
mov
stos
out
or
xor
add
ret
add
and
xor
shrl
pop
push
subb
sub
sbbl
in
add
popa
push
in
mov
or
push
adc
push
inc
imul
mov
repz
mul
in
and
push
dec
pop
mov
addr16
cltd
filds
sbb
cmpsl
dec
pushf
xchg
pop
inc
mov
pop
imul
jl
adc
xchg
stos
add
lock
jb
xorl
js
inc
imul
mov
mov
das
sti
mov
ret
scas
lahf
xor
inc
pop
xchg
adc
mov
push
fisttps
jo
pop
inc
ja
addps
push
sub
shrb
push
incl
pop
and
rdmsr
cs
add
rclb
xor
xchg
dec
movlps
das
or
pop
cmp
xchg
imul
popa
lods
adc
push
push
push
dec
mov
sub
insb
fiadds
add
subl
jo
xor
cmpsb
je
push
scas
ret
dec
rcll
xchg
inc
push
inc
jecxz
dec
adc
xchg
pop
add
xor
popl
lea
stos
lret
mov
adcl
movsb
mov
inc
imul
testl
loop
outsb
cmp
push
out
ret
push
push
push
cmp
scas
lods
xor
repnz
out
es
mov
aad
add
loopne
mov
and
negl
movl
xor
neg
pop
ret
fs
dec
sub
orl
je
xor
pop
jecxz
pop
jnp
pop
sub
dec
shlb
or
inc
or
sti
push
lret
inc
jle
js
xor
inc
cmp
xchg
scas
jbe
dec
or
fiadds
and
ss
push
sbb
dec
mov
bound
xor
mov
incb
add
inc
ffree
inc
cs
lret
jb
push
cmpsl
xchg
loop
push
cmpsb
xchg
ja
cli
jo
xor
outsb
sbbl
mov
mov
xor
js
mov
arpl
sub
arpl
fs
lock
inc
iret
syscall
or
fidivrl
push
push
mov
into
sti
pop
js
inc
bound
fidivrs
clc
pop
imul
pop
pop
mov
push
es
lock
outsb
pop
push
push
xor
dec
js
ret
divl
das
inc
pop
dec
es
das
push
fisubs
add
and
or
out
sti
pop
push
sysexit
mov
cs
dec
gs
sahf
push
outsl
push
push
cli
push
push
insl
sub
out
mov
insl
mov
inc
ja,pn
xor
mov
fimull
jp
pushl
push
fiaddl
jg
mov
das
xor
das
xor
outsl
pop
outsl
dec
xor
js
push
into
xor
adc
test
outsl
imul
or
sbb
jg
inc
and
pop
add
lods
imul
mov
arpl
ja
add
aam
ljmp
lock
fmull
lret
fmuls
stos
out
inc
jnp
pushf
ds
sub
and
push
lock
aas
add
xor
dec
jno
mov
mov
sbb
ja
jmp
xor
xchg
out
adc
add
sub
mov
imul
test
adc
je
shrl
mov
and
and
fs
das
or
pop
addl
mov
iret
sbb
das
arpl
cmp
sbb
out
scas
xor
or
xchg
xchg
add
pop
mov
pop
dec
mov
add
sub
cmp
mov
loopne
or
jmp
xor
mov
cmp
mov
lahf
sbb
inc
imul
mov
stos
fsubrs
shl
mov
sbb
or
xlat
daa
rorb
add
sub
sti
mov
push
dec
inc
ds
outsl
popa
fs
outsl
aaa
mov
push
mov
or
adc
add
sbb
call
lods
or
in
cmpsl
addr16
push
xor
iret
lods
sub
mov
push
pop
stos
std
jl
js
mov
add
fildll
sub
scas
addr16
in
fimuls
sbb
jecxz
arpl
pop
lods
je
inc
jb
in
cwtl
xchg
scas
repz
pop
pop
pop
push
outsl
xchg
push
bound
xchg
pop
and
sbb
clc
mov
js
repz
push
jle
insb
add
xchg
out
cmp
add
jbe
add
pop
cmp
std
outsb
push
pop
cmp
jne
jo
arpl
push
cli
ss
pop
pop
ja
xor
xor
push
and
push
movhps
popl
sbb
aam
aam
mov
xlat
adc
xor
cmp
movb
outsb
mov
or
lahf
mov
and
lea
add
rcrb
stos
sub
test
cs
outsl
fs
lock
lahf
mov
lahf
xlat
jmp
js
imul
ret
pop
push
arpl
addl
add
jecxz
pop
addl
addr16
cwtl
push
dec
movsl
pop
sti
lods
ljmp
push
insl
push
mov
and
push
inc
fwait
iret
dec
cmp
adc
jo
loope
lahf
popa
fldt
and
xor
mov
repz
xchg
test
inc
pop
mov
and
sub
xor
incl
xchg
outsb
jecxz
pop
dec
dec
lock
ret
cmp
mov
aaa
iret
fildll
adc
es
outsb
dec
arpl
cmp
jae
daa
xor
sub
jbe
stos
arpl
outsl
cmp
imul
das
repz
outsl
pop
xchg
or
aaa
sub
cmp
mov
mov
jmp
jb
push
ds
adcb
adc
jle
add
mov
xchg
jle
add
das
add
data16
sbb
sub
testb
lock
aam
addr16
sub
or
call
or
lock
icebp
push
and
push
cld
outsl
clc
mov
imul
inc
pop
push
sbb
mov
iret
add
out
testl
out
cltd
or
xchg
int
mov
or
pop
or
or
adc
adc
sbb
and
in
sub
xor
inc
mov
mov
testl
push
popa
xchg
add
mov
shrb
ret
sub
shrb
int
or
adc
fneni(8087
repz
add
xchg
rclb
fldcw
lret
str
lcall
stc
das
incl
sub
xchg
insb
call
outsl
xchg
push
sub
fwait
cwtl
lods
add
daa
nopl
and
mov
mov
addr16
jg
mov
mov
add
adc
xchg
mov
mov
lods
pop
dec
movsl
enter
pushl
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
pop
in
iret
mov
sbb
mov
sbb
mov
insb
incl
ds
pop
sbb
xor
mov
pop
sbb
decl
mov
sbb
js
lods
mov
pop
dec
xchg
jecxz
dec
push
mov
and
pop
adc
nop
push
and
cmp
pop
dec
mov
daa
jb
xor
and
push
dec
cmp
add
pop
add
mov
jg
lods
bound
push
insl
or
mov
push
dec
iret
mov
dec
sub
pop
or
dec
dec
lcall
mov
xchg
fsubrl
leave
jae
fcoml
mov
cmp
iret
pushf
inc
mov
pushf
cmp
insb
dec
pop
inc
add
pusha
shrb
add
cmp
xor
add
push
mov
popf
js
adc
jo
pusha
mov
fwait
insb
and
cmpsl
icebp
movsl
inc
push
mov
nop
sbb
ret
mov
jnp
pop
sbb
lret
ss
cmp
sub
pop
xor
inc
adc
inc
push
push
cmp
inc
icebp
push
xlat
or
cmpsb
jp
int3
mov
bound
cmp
cs
and
imul
xor
and
dec
xchg
jg
je
push
subl
outsl
jne
bswap
or
cmp
popa
outsb
imul
pop
inc
add
and
adcl
mov
mov
aaa
insl
mov
call
mov
sub
inc
pusha
xchg
pop
jg
inc
pusha
sub
pop
push
jnp
fisubrl
add
push
push
scas
add
mov
je
daa
mov
jnp
pop
setbe
add
inc
loope
xchg
outsb
das
addr16
pop
mov
inc
pop
pop
pop
rorb
mov
hlt
mov
push
cmpsl
aas
dec
and
sbb
dec
idiv
push
add
sub
push
xchg
test
out
shlb
inc
and
out
adc
dec
sub
fbld
jbe
mov
fwait
xor
adcl
push
sarl
bound
je
add
jbe
outsl
ljmp
loop
rorl
outsl
add
add
dec
movsb
imul
dec
add
push
insl
cmpsl
dec
cli
mov
pop
sub
mov
out
xor
sti
xchg
mov
dec
jge
out
negl
push
xor
outsl
and
rcll
pop
mov
mov
mov
push
xchg
stos
pop
xor
xor
mov
mov
mov
dec
xchg
xchg
pop
lcall
adc
arpl
repz
inc
lock
es
mov
addl
cs
jge
sub
push
xchg
push
or
mov
pop
inc
pop
fbld
pop
pop
cmp
scas
add
mov
enter
aaa
aam
dec
cs
insb
inc
in
add
jno
push
cs
dec
enter
pop
push
and
cmp
jns
imul
cs
aam
scas
push
sarl
lret
inc
or
roll
inc
loop
iret
shll
aas
jle
pop
stos
ficoml
pop
xchg
xor
push
push
cmc
jns
fwait
jge
push
daa
xor
fldl
outsl
notb
aaa
outsl
push
je
mov
stc
push
pop
adc
xor
ficomps
fs
jns
mov
mov
shr
pop
push
dec
pop
push
mov
test
testb
jl
push
xchg
xchg
mov
not
pop
jnp
out
xlat
or
xor
out
imul
pop
clc
call
mov
pop
mov
in
inc
out
cmpsl
sbb
pop
push
jns
scas
outsl
add
jge
cmp
sahf
ja
je
dec
mov
lahf
out
push
adc
dec
push
repz
rep
test
lahf
out
dec
mov
dec
push
push
and
cmp
sahf
out
push
xor
insb
ds
test
sbb
out
sahf
cmpsl
inc
push
mov
int
dec
es
jno
lds
stc
cmp
and
push
mov
cmp
cmc
adc
sahf
out
outsb
mov
notl
push
push
add
sbb
dec
sbb
scas
sub
aam
cs
adc
stc
add
adc
lcall
push
push
mov
xor
adc
mov
mov
mov
scas
int
mov
pop
in
bound
loop
and
push
pop
mov
sub
loopne
mov
sar
mov
pop
int3
push
and
pop
sbb
enter
stc
cmp
adc
repnz
iret
pop
in
inc
ds
or
add
and
jb
add
dec
stos
ret
aaa
movsl
inc
test
subl
out
mov
fbld
sub
testl
rolb
addl
ja
outsb
outsb
lcall
push
push
js
xor
stos
pop
inc
imul
cmp
xor
andl
jp
adc
mov
aad
lods
iret
imul
push
push
and
xorl
inc
pop
push
dec
out
xor
push
dec
inc
outsl
and
push
popa
je
or
subl
push
fistpl
cwtl
out
scas
pop
inc
mov
cmp
sub
pop
push
ficompl
cs
decl
xchg
ss
sti
es
mov
sbb
ljmp
rclb
adc
scas
pop
in
daa
adc
and
dec
not
push
mov
push
pop
addr16
jno
fcoml
and
add
outsl
xlat
cmpsl
jecxz
jmp
jo
push
jo
pop
add
inc
jg
mov
dec
xor
inc
or
xor
mov
jno
sbb
xchg
jmp
jnp
mov
cli
push
sbb
xchg
fs
lods
and
jae
inc
sbb
pop
xor
mull
sbb
sbb
loop
jg
push
dec
cwtl
pop
test
push
xor
orb
add
xchg
xchg
sti
rclb
xchg
jae
sbbl
punpcklbw
sysexit
les
push
dec
pop
and
xorl
dec
inc
dec
mov
fs
jo
xor
daa
fists
push
outsl
imul
je
mov
add
ds
add
jo
jg
pop
mov
jb
loopne
add
jecxz
mov
fwait
mov
sbbb
pop
ret
shll
test
cwtl
and
sbb
pop
pop
inc
das
movsl
or
push
add
scas
lahf
sub
movb
test
or
sbb
scas
pop
sbb
scas
out
push
pop
rorb
xchg
pop
addr16
arpl
mov
jae
fs
sbb
adc
es
adc
mov
psubq
imull
jo
cmp
mov
pop
das
cmpsl
jg
lock
push
pop
shll
add
lret
dec
and
jge
arpl
or
fidivrs
sub
pop
pop
dec
add
and
ret
pop
fisttps
jmp
cs
popw
push
aaa
imul
mov
mov
inc
in
bound
xchg
das
testl
jg
fsubs
call
xchg
das
push
xor
push
pop
sbb
mov
or
outsl
mov
lods
sub
xchg
push
fiadds
push
inc
mov
lods
scas
inc
jle
rcl
pop
imul
mov
out
inc
into
mov
and
inc
xor
adc
lahf
sbb
pushl
ret
add
dec
add
push
xor
adc
fcmovb
stos
or
shlb
add
ffreep
xchg
aas
add
add
xlat
mov
shlb
out
or
lock
cmp
push
pop
adc
xchg
jp
out
arpl
call
cmpsb
inc
inc
push
inc
pop
pop
outsb
iret
inc
sbb
cmp
dec
ficoms
pop
push
popl
pop
or
xchg
xor
pusha
or
daa
inc
push
or
call
pop
sbb
addb
mov
dec
and
pop
jo
imul
inc
and
mov
push
pop
lahf
inc
dec
jne
mov
outsl
dec
push
mov
add
cmpsl
push
ljmp
andl
adc
add
inc
outsl
loop
sub
dec
dec
mov
jns
je
inc
stos
and
push
out
xchg
fists
das
adc
and
mov
jle
add
cmp
insb
je
dec
daa
rorb
pop
addr16
jo
jmp
fisubrs
sbb
pop
jno
outsl
xor
push
les
xor
push
dec
xchg
pusha
call
sbb
jns
je
jne
or
test
das
fisttps
arpl
push
mov
ja
out
mov
push
push
mov
or
mov
dec
mov
pop
and
je
adc
les
punpckhwd
arpl
and
iret
jbe
pop
and
inc
inc
mov
popw
push
or
maskmovq
testl
out
pop
dec
test
les
sbb
testb
dec
shll
rclb
push
pop
rclb
xchg
jmp
mov
mov
into
dec
inc
push
test
push
loopne
sub
jmp
xchg
push
in
nop
sub
cmpsl
pop
pop
or
hlt
movsb
push
fwait
xchg
push
add
mov
push
movups
or
push
aam
dec
and
fidivrl
jb
iret
dec
loopne
add
mov
and
add
jge
out
inc
outsl
outsb
or
aaa
inc
insb
xchg
stos
daa
and
pop
daa
sbb
imul
loope
mov
jb
sub
out
ds
inc
imul
int
pop
incl
dec
inc
dec
push
xchg
add
dec
sbb
and
pop
imul
jge
aas
fiadds
jg
ret
shlb
mov
add
mov
into
inc
leave
sbb
add
adc
inc
lahf
lcall
scas
sets
mov
inc
aaa
jno
sti
shlb
lcall
push
cmp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
pushl
jb
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
ljmp
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
repz
movb
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
call
gs
leave
ret
sub
xchg
mov
data16
mov
lcall
call
cltd
test
push
push
shll
ja
daa
mov
mov
pushl
stos
fmuls
lret
rep
cs
outsl
arpl
test
add
mov
outsl
subb
movsb
mull
jno
jmp
or
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
lahf
jo
and
dec
ret
js
jecxz
aad
pop
mov
in
or
xor
das
ds
das
sbb
push
sbb
fistps
push
and
push
pop
inc
mov
inc
push
inc
pop
and
or
aas
js
insb
cwtl
dec
mov
pop
push
or
mov
inc
add
or
pop
pop
pop
test
enter
jge
jo
shll
aas
ds
push
shl
xor
push
sbb
decl
incb
lahf
daa
inc
add
sub
loop
push
pop
fisttpl
inc
outsl
xor
in
push
lods
mov
and
or
inc
neg
adc
lahf
stos
outsb
cwtl
push
pop
mov
cmpsl
xor
inc
out
mov
imulb
push
adc
insb
pop
repz
and
sar
add
rol
ret
inc
out
scas
pop
cmpsb
dec
push
fidivs
adc
mov
xchg
lods
push
scas
pop
pusha
inc
mov
and
movsl
pop
outsl
jbe,pt
mov
mov
pop
testl
push
fiaddl
add
mov
in
leave
leave
adc
xor
inc
daa
xor
test
push
adc
jb
add
push
pop
adc
enter
inc
adc
leave
xchg
and
and
arpl
mov
push
sub
je
scas
inc
fsubrl
les
movsb
add
cmp
outsl
je
mov
popa
stos
mov
in
inc
cs
inc
fdivrl
or
sub
sub
push
loopne
jo
mov
dec
inc
jle
in
xor
and
push
push
pop
jbe
add
insl
outsl
fs
gs
jo
or
mov
mov
push
addl
mov
add
or
addr16
and
push
lea
pop
gs
inc
sub
daa
mov
div
xchg
lock
cs
imul
inc
mov
pop
sbb
insl
xor
pop
pop
jnp
push
sahf
dec
sub
pop
mov
in
jecxz
dec
adc
xchg
dec
inc
pmulhuw
sbb
inc
cmovo
idivb
cmpb
aas
nop
jo
xor
jbe
maxps
loopne
out
inc
dec
loopne
mov
push
add
adc
dec
and
lods
adc
pusha
dec
in
imul
sbb
xchg
cwtl
fcomps
pop
push
ss
in
mov
daa
ds
fucomip
jnp
or
and
daa
insl
out
sbb
inc
push
pop
das
or
lods
inc
add
mov
mov
idivb
daa
les
enter
xchg
mov
push
leave
daa
xchg
jnp
sti
data16
fs
push
mov
pop
jnp
jnp
dec
fsubl
fisttps
add
test
add
jl
fiaddl
out
inc
mov
mov
outsl
jle
mov
mov
les
scas
clc
mov
lret
or
add
lret
in
dec
inc
push
dec
add
dec
fidivrs
nop
xchg
out
cwtl
fsubl
mov
enter
sahf
mov
int3
inc
inc
add
pop
enter
dec
adc
and
mov
lret
xchg
dec
nop
out
pop
outsl
xchg
js
add
js
jns
in
movsb
lods
cs
dec
sahf
mov
xchg
out
sar
or
fdivl
daa
clc
aaa
and
int3
push
push
lods
add
das
inc
daa
mov
cltd
fsubrs
xor
aas
daa
repnz
mov
addr16
push
aam
xchg
cmp
in
push
dec
lahf
mov
xchg
mov
int
mov
out
dec
xor
inc
push
nop
enter
lods
lods
sub
ja
aam
jns
in
cmp
adc
dec
pop
xor
movsb
inc
in
push
shrb
aam
iret
test
sub
mov
mov
cmp
inc
daa
lock
mov
mov
inc
enter
test
scas
mov
push
loopne
nop
das
sbb
idivl
mov
adc
aaa
je
les
pop
push
push
sub
fiaddl
addr16
mov
iret
test
push
pop
and
mov
daa
add
mov
mov
aam
repnz
rcl
insb
pop
enter
leave
xor
in
fiadds
xchg
cld
pop
fmuls
insb
sar
jl
scas
dec
in
push
orl
pop
int3
ds
cmp
mov
cwtl
cld
ror
xlat
pushf
test
or
sbb
dec
in
nop
stos
or
cld
cmp
repnz
insb
push
enter
cmp
sar
lahf
add
pushf
lods
mov
dec
lahf
pushf
ds
repnz
xor
cld
or
nop
or
in
jnp
repnz
push
pop
lahf
pop
pop
and
pusha
ja
in
nop
out
mov
mov
fsubr
cld
cs
mov
push
dec
jl
rcrl
push
push
shrl
mov
cmp
fcoml
nop
out
mov
cmpsl
or
cmpb
daa
frstor
andb
sahf
or
clc
scas
cmpsl
cmp
pusha
sub
les
dec
push
dec
fisubs
pusha
jg
mov
jns
in
mov
mov
inc
sahf
mov
loopne
nop
add
mov
and
xor
dec
mov
testb
loopne
in
jg
nop
out
cmpsl
and
js
pusha
mov
out
fcoms
inc
sahf
or
js
int3
xor
lahf
out
lock
dec
stc
pop
enter
and
idivb
push
and
cmpsl
js
mov
inc
jg
mov
imul
test
inc
scas
jbe
lahf
je
cs
nop
aam
enter
inc
clc
adc
cltd
fdivs
and
xor
lahf
clc
lcall
int
mov
out
je
dec
sahf
or
pusha
lahf
fs
mov
nop
out
aam
jl
in
mov
add
push
aad
push
adc
sub
btr
jg
test
iret
test
push
jb
cmpsb
test
pop
loopne
iret
test
mov
enter
jge
mov
adc
add
adc
and
fsubrs
xor
iret
test
js
shll
push
jmp
cmp
insb
test
mov
in
lahf
test
mov
test
andb
sbb
movsb
inc
or
pop
in
clc
cmpsl
loopne
fiaddl
jo
aas
cmpsl
test
mov
cmpsl
sbb
mov
mov
fidivrl
push
cmpsl
nop
out
push
mov
push
mov
fistpl
loop
and
hlt
nop
dec
fldt
mov
pop
sahf
push
insl
push
aas
ja
rcrb
mov
xorl
in
or
ja
sub
jg
nop
dec
jmp
rcr
lahf
jbe
shrb
adc
mov
inc
pushf
push
or
push
push
inc
repnz
mov
jg
js
and
pop
lock
js
test
loopne
xor
enter
inc
push
push
push
movsb
inc
mov
jg
int3
test
inc
jo
outsb
addr16
lahf
int3
inc
enter
ja
lock
xchg
clc
pop
in
fstl
out
pop
adc
sbb
mov
fidivrs
ficomps
adc
mov
ficomps
pushf
fdivrp
fadds
cmpsl
mov
cmp
lahf
pop
jb
jo
inc
int3
cwtl
mov
ds
sub
inc
fbstp
cwtl
inc
jg
shrb
int3
rcr
mov
rcl
int3
inc
ja
and
rcl
outsb
xor
in
iret
push
inc
int
pop
pop
jg
xor
loopne
movsl
ss
lahf
dec
iret
add
stos
inc
ja
pusha
fs
fwait
nop
loopne
push
mov
fadds
fiaddl
mov
mov
enter
and
add
mov
in
loope
push
sub
iret
pop
pop
adc
inc
jg
aad
mov
in
pop
daa
insb
lahf
xorl
inc
lock
lods
mov
aaa
mov
incl
fsubs
push
orl
inc
pop
repnz
ja
fs
pusha
pop
enter
fs
pop
enter
mov
repnz
lock
pop
and
mov
jecxz
lock
nop
iret
test
inc
jecxz
mov
cs
in
mov
adc
nop
mov
mov
lahf
nop
mov
loopne
pop
jb
dec
lods
in
inc
loopne
mov
pop
je
in
inc
push
mov
bound
sti
outsl
aas
js
cwtl
add
cltd
nop
push
push
add
enter
xorl
sahf
sbb
in
push
xchg
inc
lds
int3
shrb
cltd
nop
iret
clc
inc
in
pusha
lods
sub
outsl
adc
aad
loopne
mov
addr16
cmp
in
jmp
lock
ss
test
out
pop
sub
lock
call
aaa
and
pop
daa
adc
data16
pop
out
cltd
or
mov
daa
pushf
fcoml
daa
xor
ljmp
mov
scas
xlat
pop
push
sbb
mov
push
or
push
sub
cmp
aas
call
les
pushl
ja
lods
pop
adc
ja
lods
outsl
iret
mov
mov
add
dec
aam
repnz
in
sub
fiadds
out
dec
cmp
push
jae
fwait
dec
push
push
daa
aas
movl
addr16
or
add
pop
out
repz
mov
ja
daa
sbb
dec
scas
fs
dec
inc
in
scas
in
cmp
in
scas
xor
dec
scas
in
and
jne
mov
pop
mov
push
cmp
mov
dec
push
xor
cmpsl
fnstcw
mov
enter
imul
inc
push
and
lock
cmp
mov
mov
clc
out
push
dec
xor
ds
cmpsl
stc
cmp
push
push
dec
repz
mov
jmp
cmp
add
jmp
fisubs
jg
add
inc
in
xchg
pushf
js
stc
and
dec
inc
cld
inc
mov
inc
int
imul
out
cmp
aam
mov
dec
nop
mov
add
cmp
clc
push
inc
out
cld
inc
sub
sbb
ja
mov
sbb
in
ja
dec
xchg
jg
xchg
fmul
xchg
or
inc
dec
outsl
jns
xchg
mov
fdivrl
push
rolb
sbb
in
dec
outsl
add
inc
pushf
inc
pop
test
inc
in
lcall
xchg
mulb
outsl
add
cmp
cmp
dec
enter
cmp
or
shll
add
outsl
xchg
pop
add
xor
data16
sbb
fbstp
push
repnz
mov
out
leave
add
movsb
out
sub
sub
add
dec
xchg
leave
xchg
or
xor
and
xor
out
out
push
xor
out
outsl
add
jnp
ret
fildll
loop
sub
mov
js
aaa
scas
in
dec
js
cwtl
add
pop
scas
in
mov
clc
cmp
dec
add
push
sbb
lock
mov
rol
jg
insl
mov
mov
xchg
and
add
and
sub
fwait
nop
pop
in
lock
fimuls
icebp
popa
sub
xchg
outsl
add
or
and
or
fdivrp
and
or
sbb
jbe
cwtl
lods
fmuls
pop
scas
add
les
add
shl
dec
fisubs
dec
out
add
xlat
mov
in
push
aaa
push
repnz
sbb
out
add
outsl
test
decl
insl
outsl
xchg
push
pushf
daa
addr16
add
jbe
aaa
jmp
call
loopne
pop
cmpsl
mov
or
xchg
push
cwtl
cmpsb
shlb
ret
aam
jg
push
pusha
repz
loopne
cmp
and
xor
sbb
in
shll
repz
pop
sub
fs
jecxz
add
aam
xchg
js
xchg
pop
sub
add
notl
jbe
lock
outsl
push
push
outsl
ljmp
ljmp
testl
push
xor
scas
push
movsb
clc
push
imul
push
cmp
push
out
xchg
clc
loope
xchg
lds
pop
pop
mov
and
cwtl
dec
cwtl
loope
or
inc
nop
and
sbb
push
xlat
or
push
decl
ljmp
add
xlat
or
lcall
clc
mov
cmc
dec
inc
testl
pop
mov
lds
fdiv
pop
in
cmc
mov
testl
and
add
jns
push
shl
mov
jl
loopne
nop
imulb
mov
dec
xchg
and
divb
rcll
push
aaa
sbb
xchg
mov
outsl
add
cmp
icebp
js
cmpsl
pusha
mull
mov
scas
mov
lods
dec
movsb
xchg
mov
mov
daa
in
mov
aad
lods
loop
and
xor
add
pop
enter
insb
aaa
pusha
and
cs
dec
and
clc
fdivr
pop
inc
push
faddl
mov
pop
lods
in
aaa
push
jl
stos
pop
in
sub
pop
loope
stc
cmp
stc
ss
push
adc
xor
add
jns
and
xchg
push
aam
mov
add
lods
fs
int3
xlat
add
loopne
sahf
iret
xchg
fldcw
pop
cli
daa
or
add
faddp
fwait
adc
push
in
cwtl
push
xchg
jns
out
add
call
inc
js
out
in
outsl
mov
or
jnp
jo
aas
add
and
or
add
jg
scas
das
adc
lcall
inc
sti
das
dec
sub
xchg
outsl
add
mov
xchg
movsb
and
or
add
and
js
add
enter
call
dec
xchg
fsubs
rorl
lods
add
pop
lcall
addr16
loopne
mov
nop
or
out
dec
scas
in
mov
or
cmp
std
mov
je
jl
aas
lret
sbb
addr16
sahf
mov
movsb
in
es
fs
aam
addr16
hlt
std
aad
lods
lret
push
dec
imull
xor
mov
mov
inc
xchg
inc
cmp
test
jmp
push
nop
bound
add
aaa
jo
in
nop
out
rcl
or
fdivs
and
push
xor
lahf
fiaddl
cltd
fdivl
and
clc
out
push
jl
shll
les
clc
ja
sbb
push
or
call
adc
aas
ss
sti
pop
shrb
add
dec
shll
cmpsl
fldcw
push
xchg
stos
cmp
repz
adc
lcall
inc
jo
jl
out
mov
add
iret
push
mov
out
sahf
cmp
mov
cmp
repz
xorb
stc
lea
and
jbe
es
loope
nop
dec
repz
cmp
jmp
sahf
out
cmp
mov
cmp
out
mov
or
iret
rep
xchg
shl
xchg
out
sahf
cmpsl
outsb
xchg
mov
out
iret
repz
or
push
int
jns
xchg
and
add
cmp
mov
add
jns
shl
sbb
repz
push
popf
rcrb
push
jns
sbb
pushf
jl
ja
ficomps
sahf
jns
iret
roll
or
fucom
repnz
sub
dec
xorl
push
stos
add
cmp
mov
sbb
iret
repz
push
lea
jns
cmpsl
jp,pt
mov
stc
es
test
lahf
sbb
lcall
push
stos
cmpsl
stc
cmp
jbe
cli
xor
mov
lahf
lods
adc
sahf
mov
ds
jnp
sbb
jns
mov
mov
iret
repz
mov
mov
xchg
and
iret
sarl
ja
adc
jns
xchg
jmp
mov
jns
iret
repz
cmpsb
stc
cmp
out
pusha
mov
sarl
dec
mov
repz
out
mov
fcompl
mov
cmp
jge
sar
xchg
mov
shl
cmp
cmp
ret
jns
je
cli
xor
cmpsl
stc
cmp
add
push
cmpsl
out
out
jl
lds
sahf
data16
popa
push
enter
out
sarl
mov
mov
fnstsw
lret
fiadds
mov
enter
jl
int
xchg
mov
ja
cmpsl
stc
push
iret
fwait
out
sarb
sahf
mov
xor
pop
push
lods
xlat
repz
out
sub
sahf
cmpsl
stc
out
jno
ds
or
andl
add
dec
cmp
out
mov
sbb
mov
stc
pop
fdivs
cwtl
cmp
sahf
ja
lods
inc
fidivl
fstpt
iret
shrl
add
jp,pt
cmp
out
cmp
imul
fisubrs
dec
mov
fildll
imulb
test
xchg
repz
iret
mov
out
mov
ds
hlt
push
push
div
clc
jge
int
jle
loope
movsl
std
int
jns
lods
mov
add
or
add
lahf
int3
lsl
rcr
js
inc
incb
aas
aam
mov
ficoml
inc
cmp
shlb
or
scas
sbb
xor
adcl
jl
add
pop
aaa
jge
inc
nop
int
mov
or
outsb
adc
or
fs
dec
mov
aas
pop
xchg
rcrb
das
std
cmpsb
fcomp
test
ss
aas
das
stos
xor
daa
cmp
jg
xchg
mov
jmp
and
pop
movb
cmp
into
and
loop
jbe
xlat
pop
mov
add
pop
jb
out
aas
int3
addl
mov
je
dec
out
push
clc
mov
inc
outsl
aas
sbb
ds
dec
pop
adc
dec
adc
mov
aas
in
shl
xor
data16
fimull
dec
aas
in
fimull
enter
popf
push
inc
bound
aad
pop
or
push
pop
mov
jbe
out
mov
fadds
push
aam
ret
cmpsl
in
das
dec
or
or
mov
adc
adc
into
shlb
ja
push
pop
sub
shlb
cmp
inc
js
test
xchg
or
sbbl
mov
push
jp
ffreep
lret
push
inc
jbe
mov
cmp
fwait
sarb
hlt
jne
or
jo
leave
sbbl
pop
pusha
outsb
xchg
pop
jb
cltd
fadds
or
into
inc
ja
push
jg
dec
xchg
push
scas
hlt
add
add
inc
pop
cmp
dec
repnz
push
daa
inc
scas
mov
xchg
into
push
dec
fnstenv
add
iret
push
incl
mov
addr16
mov
mov
scas
popf
pop
mov
ja
outsb
fbld
xchg
push
pop
pop
push
cs
dec
cs
fstpl
pushf
xchg
or
pop
int
fadds
mov
cmp
adc
and
mov
movsb
mov
imul
push
xchg
push
insb
push
out
mov
leave
sub
push
int
cmp
sarl
pusha
dec
and
add
pop
repnz
mov
inc
xor
mov
push
daa
inc
xchg
and
sbb
mov
das
mov
ss
jo
mov
bound
stos
loopne
fisttps
outsl
test
faddl
scas
push
scas
jns
adc
xor
add
in
add
sbb
pop
xchg
rorb
outsl
sbb
fsubl
adc
aam
push
lea
mov
inc
scas
aam
xchg
test
adc
and
push
cmp
pop
jb
fs
jae
pop
nop
mov
xchg
pop
mov
loop
iret
das
push
add
pop
fisubl
push
fidivrs
dec
push
cmpsl
and
add
adc
daa
xor
sbb
push
mov
addr16
fisubl
dec
push
daa
push
mov
outsb
pop
outsl
mov
pushf
pushf
pop
add
pop
and
mov
xor
add
repz
aaa
dec
cmpsl
cmpsb
je
subps
adcl
lea
test
mov
push
jo
lea
insl
pop
ja
mov
push
movl
test
imul
pushf
mov
add
push
jg
push
pusha
pushf
pushf
pop
and
repz
xchg
and
add
fldl
leave
sbb
in
fisttpl
inc
mov
pop
cmpsl
adc
popw
outsb
mov
or
pop
xchg
add
leave
add
push
add
rolb
fcmovnb
out
lahf
out
sahf
or
or
or
in
repz
adc
and
push
push
leave
in
pop
push
push
daa
pop
pop
movq
mov
mov
call
es
xchg
mov
add
popf
cmp
lret
add
add
xchg
pushf
dec
or
push
push
push
imul
xchg
xchg
jo
outsl
rclb
cmpsl
lock
dec
leave
orl
dec
sub
dec
pop
mov
jb
das
jge
mov
and
nop
stos
nop
mov
fnsave
jb
ret
nop
rclb
mov
out
xchg
icebp
ss
or
sbb
sbb
cmp
aas
add
cmpsl
sub
push
sbb
in
mov
daa
pusha
pushl
lock
sbb
test
push
pop
aam
in
and
pop
add
into
sbb
xchg
out
xchg
and
icebp
xchg
cld
xchg
or
sbb
fcmovnb
push
fmuls
es
xor
add
loop
filds
fists
cwtl
dec
sbbl
xlat
dec
push
aas
test
dec
ss
xchg
loopne
ja
mov
jp
orl
iret
add
cmpsb
scas
or
xchg
dec
inc
shlb
and
mov
xor
mov
sbb
in
sbb
xor
xor
push
daa
cld
fisttps
leave
add
nop
inc
inc
sbb
or
enter
sbb
xchg
mov
push
mov
popf
mov
mov
test
sbb
xchg
mov
pushf
out
cmp
sbb
push
daa
inc
out
inc
push
adc
add
scas
mov
push
jg
xchg
pop
in
xchg
pushf
js
dec
xchg
push
in
in
in
xchg
les
push
jno
aas
pop
cmpsl
sbb
or
daa
sub
inc
cmpxchg
xlat
sbb
add
out
in
mov
mov
mov
scas
mov
jb
cld
in
scas
or
jb
dec
test
xchg
inc
inc
dec
inc
push
fs
inc
pop
insl
fdivr
ucomiss
push
addr16
cmp
push
add
mov
xchg
xlat
xchg
out
sahf
adc
ja
pop
jb
mov
loop
orb
push
repnz
xchg
enter
jp
add
in
xor
add
push
jb
xor
pop
inc
daa
nop
mov
or
cmp
xlat
adc
push
jo
xor
es
xchg
add
push
iret
push
add
jns
add
add
out
filds
in
sti
repnz
inc
or
rorl
and
xchg
lcall
and
je
xchg
add
test
xlat
roll
je
xchg
and
pop
int3
fucomp
add
cmc
ja
clc
out
cs
movsl
xchg
cwtl
and
popf
popa
jg
pop
paddsw
jns
pushl
xchg
jle
add
addr16
daa
push
out
sahf
pop
and
and
and
movsb
cmp
leave
inc
pop
addr16
mov
mov
mov
xchg
pop
and
mov
dec
dec
mov
push
push
lcall
pop
scas
add
xchg
pushf
test
push
mov
add
pop
fistpl
out
ja
xchg
pop
adc
push
aaa
inc
fbld
pushf
out
es
and
and
mov
fisttps
push
push
adc
xchg
mov
pop
add
inc
scas
adc
xlat
push
pop
mov
cvttps2pi
mov
frstor
adc
daa
cmp
mov
adc
es
adc
enter
popf
aaa
push
iret
jmp
es
leave
xchg
das
vmwrite
fsubl
cld
es
sbb
and
incl
push
daa
push
xlat
xchg
mov
daa
daa
adc
pushf
cmp
cmp
push
add
jmp
add
sahf
stc
int3
icebp
xchg
setle
imul
enter
jg
adc
xchg
jno
pop
sub
jbe
enter
sub
push
jl
mov
imul
push
daa
out
mov
pop
mov
cmpsl
cltd
push
scas
lock
mov
movsb
push
lahf
scas
sahf
mov
repnz
leave
aam
sub
push
sub
lods
sbb
xor
mov
inc
movl
nop
sub
out
mov
fistpll
insl
or
sahf
lahf
pop
fdivs
daa
add
rol
pminsw
leave
dec
fdivl
into
sbb
or
mov
repnz
inc
push
add
cmp
jbe
das
jo
add
cmp
mov
mov
mov
pop
jb
jb
in
and
mov
pushf
dec
sbb
mov
sub
inc
push
xchg
push
push
jae
mov
scas
das
lcall
mov
ljmp
cmpsl
push
dec
sub
cmp
mov
or
push
pop
dec
ja
je
jbe
xchg
sbbb
mov
out
call
mov
fiadds
fsubrp
sbb
jmp
push
inc
cmovnp
leave
jae
push
ja
fs
int
cmp
lea
aas
pop
popf
xchg
movsl
adc
frstors
cmp
iret
repz
sti
jo
mov
pop
movsb
pop
or
repnz
pop
pop
hlt
ss
iret
rcrl
push
iret
jae
cmp
insl
js
and
outsb
daa
mov
cltd
or
scas
das
mov
xchg
out
rorb
adc
loope
jns
cld
adc
pop
movsl
mov
push
cmp
outsb
pusha
stos
mov
movsl
ljmp
inc
imul
dec
das
push
daa
mov
inc
lcall
pop
stos
test
mov
scas
testb
pop
and
fwait
loope
cmpsb
fisttps
push
add
out
mov
lahf
cmpsb
decl
fs
pop
leave
shrb
cmpsb
xor
cmpsb
ja
orb
outsb
ja
cmpsb
pop
xor
iret
xchg
fcoms
xchg
pop
jb
sti
in
jne
dec
js
cmpsl
pop
push
daa
movsl
dec
repnz
add
cmpsl
sbb
mov
pop
xchg
xchg
push
ljmp
mov
test
das
add
and
xchg
xor
mov
fsubrl
mov
jmp
and
les
xor
xor
fmuls
loopne
and
lock
cmp
ret
mov
test
sbb
daa
iret
sbb
push
add
cmp
iret
cmovg
movsb
in
and
fbstp
adc
cltd
push
cmp
jg
in
cmpsl
jp
in
pop
cmc
test
std
test
pushf
in
xchg
test
xorb
lret
addl
test
pop
sub
mov
divps
xchg
push
add
mov
mov
push
lret
or
dec
push
pop
xor
test
js
incb
stos
je
in
sub
out
mov
xchg
push
leave
jnp
rorb
pop
push
push
jle
pop
and
or
cmpsl
scas
adc
xor
cmp
in
out
cmp
das
decb
sbb
add
sub
mov
push
lods
pop
insl
pusha
xlat
outsb
stos
pushl
out
stos
lcall
cmpsl
stos
iret
ficoml
loop
ljmp
test
jbe
lods
xchg
in
dec
lcall
xchg
xchg
xchg
or
dec
push
insb
pop
in
xchg
pop
mov
adcl
iret
movsb
shrd
js
iret
mov
mov
fcmovne
add
out
pop
enter
imull
iret
jae
fimuls
push
push
push
pop
pop
or
jae
cmp
das
or
aas
iret
repz
or
or
repnz
pop
adc
push
mov
ja
jg
unpckhps
xchg
xchg
lods
xlat
lock
sbb
push
add
mov
push
pushf
cmp
inc
scas
das
fsubl
adc
dec
push
dec
cmp
scas
ficoml
cmpsl
push
mov
cmpsb
scas
scas
call
sbb
add
xchg
cmp
scas
pop
pop
insb
mov
scas
das
dec
ja
fiaddl
scas
mov
lock
mov
out
add
cmp
jmp
mov
dec
in
in
or
into
or
mov
fimuls
imulb
out
push
test
fimuls
dec
out
add
outsl
jp
pop
aam
js
pop
jbe
aas
ret
jnp
and
inc
mov
pop
dec
or
outsl
rorb
adc
adc
ja
and
cmp
push
cmp
nop
jl
mov
inc
adc
bound
cmp
mov
mov
push
outsl
dec
push
add
cmp
into
push
out
sub
add
out
in
mov
pop
xchg
or
shrl
lea
call
or
cmp
mov
sbb
cmp
loope
ja
notl
incb
mov
mov
adc
decl
push
cmp
inc
mov
rolb
dec
mov
iret
xlat
popf
jnp
out
jp
cmpsl
push
xchg
push
out
fnsave
cmpsb
push
mov
dec
in
jno
or
out
mov
cs
xchg
int
sarb
mov
repz
repz
add
add
add
repz
dec
add
add
repz
pop
mov
xchg
hlt
cmp
repz
insb
or
mov
daa
mov
sbb
daa
std
mov
add
add
repnz
add
or
add
and
sbb
sub
in
dec
cmp
enter
mov
sbb
pushl
mov
lahf
jg
into
mov
mov
cld
incl
in
xor
mov
cltd
aas
in
pop
in
jbe
jb
fst
int
cmpsl
add
xchg
out
jo
mov
roll
sbb
mov
pop
jb
jb
inc
cmp
leave
in
in
iret
ja
ja
incb
xchg
add
leave
inc
mov
xchg
xchg
mov
in
lods
inc
out
and
cmp
adc
lods
mov
pop
ss
ds
inc
shll
punpcklwd
insb
mov
xor
lahf
jbe
cmp
cmpsl
scas
mov
ret
out
fisttpll
add
pop
cmp
enter
testb
or
mov
scas
push
mov
or
or
stc
or
add
cs
and
gs
in
adc
insl
inc
mov
pop
scas
cs
pop
or
scas
insb
dec
dec
dec
rorl
pop
push
mov
movsb
inc
fsubrl
cwtl
pushf
je
out
ja
outsb
inc
leave
or
inc
mov
out
fmull
iret
out
xlat
pop
fbstp
xchg
pop
out
maskmovq
or
setb
sbb
mov
lret
and
inc
cmp
rorl
mov
mov
pop
aas
pop
and
in
push
push
test
pop
mov
pushf
nop
lcall
dec
cs
call
cmp
adc
sbb
das
and
dec
je
je
pop
xchg
push
addr16
decl
jns
mov
lea
sarl
daa
adc
in
hlt
mov
jne
mov
dec
sahf
flds
xlat
inc
mov
push
dec
mov
jo
pop
jb
in
xchg
out
pop
aaa
rorl
add
mov
mov
fsqrt
cmpsl
push
adc
pop
in
xor
xchg
enter
mov
push
add
das
mov
popl
leave
in
in
xchg
fimuls
add
out
cmpsl
cld
js
bnd
mov
das
mov
xlat
push
inc
inc
mov
xchg
ja
mov
mov
mov
dec
mov
mov
mov
fstpt
add
fsubl
iret
repz
out
repnz
leave
xor
jns
or
mov
cmp
push
push
movaps
cmp
sahf
pxor
inc
scas
mov
pop
push
add
leave
leave
shrl
jg
imul
xchg
setg
jns
mov
in
outsb
mov
xlat
jecxz
jmp
xrelease
lock
aas
adc
xchg
sbb
fmulp
aaa
mov
pop
mov
cmp
add
jbe
jle
sahf
out
jbe
lcall
sahf
movsb
mov
addl
mov
pop
sub
or
xchg
xchg
xchg
mov
dec
lcall
push
jae
mov
xchg
setle
test
scas
movswl
dec
xlat
push
pop
in
dec
das
xchg
out
cli
dec
or
in
and
dec
push
pusha
sub
mov
fucomi
js
out
orb
push
add
outsb
push
dec
cwtl
xlat
or
dec
scas
loopne
mov
adc
xchg
in
pop
push
aas
push
mov
shlb
iret
mov
push
add
adc
and
sbb
das
cmp
mov
test
lahf
jo
scas
shlb
sub
push
ror
fcmove
repz
add
adc
ds
cli
add
pop
mov
shl
xor
xchg
dec
dec
pop
iret
pusha
shll
and
pop
mov
sar
iret
leave
in
in
mov
popf
pushf
pop
and
fisubrs
cmp
xchg
mov
adc
sbb
mov
xchg
sub
inc
xchg
leave
leave
in
in
push
subps
lock
dec
das
pusha
xchg
setg
iret
cmpsl
out
cmp
push
mov
or
ljmp
add
enter
ret
daa
ret
ret
xchg
mov
ret
js
push
xchg
imul
pop
punpcklbw
mov
mov
fwait
add
out
in
mov
xlat
mov
icebp
daa
stc
fbstp
jp
test
sbb
pop
add
fwait
les
fucom
jns
push
xchg
add
clts
aaa
leave
xchg
push
sahf
inc
les
fidivrs
sbb
mov
les
dec
cmpsb
mov
push
ret
fsubrl
aas
int3
paddq
xchg
inc
and
inc
lds
jb
movups
and
leave
xor
lds
adc
addr16
cmpsl
mov
xchg
xchg
xchg
mov
leave
mov
ds
lds
dec
fadds
xchg
jecxz
enter
push
add
add
dec
jb
shufps
push
shr
xchg
test
push
add
push
jmp
loopne
imul
push
cld
dec
mov
aas
pushf
repnz
jo
shrd
call
iret
mov
loope
xchg
dec
adc
scas
inc
push
das
pop
pop
iret
leave
sub
and
sahf
cmp
inc
pop
dec
outsl
push
bound
pop
push
jae
outsb
stos
dec
jl
xchg
iret
mov
dec
popf
pop
popf
fildll
jb
mov
jmp
in
aam
fcomip
ljmp
sub
out
or
xchg
insb
pop
dec
pop
psubb
pop
das
cs
mov
insb
jmp
and
add
cmovp
ss
add
enter
jb
pushf
movsb
setnp
cs
lods
enter
es
je,pt
push
cs
enter
fcmovne
repz
or
in
in
mov
stc
add
jle
leave
mov
adc
push
dec
leave
fidivrs
nop
mov
push
add
xorl
leave
iret
xlat
or
inc
mov
jo
idivl
fadds
push
inc
movhlps
lret
cmp
pop
rolb
fiaddl
fwait
mov
push
ljmp
out
push
iret
cli
push
or
das
or
pop
leave
out
decl
push
inc
shll
pop
sahf
pop
jmp
add
add
sub
cltd
lret
pop
add
mov
addr16
addr16
or
clc
pop
add
or
outsb
jae
outsb
adc
pop
cmovg
xchg
add
and
xor
mov
insl
push
jmp
push
lret
pop
mov
lret
xchg
addr16
pop
pushf
pushf
xchg
setg
cmpsl
cmp
mov
mov
cmp
sub
mov
mov
push
sbb
add
jns
out
and
jns
out
push
or
pop
or
or
inc
repnz
mov
pop
pushf
cmp
xadd
push
sbb
pop
jecxz
fsubrl
mov
psubq
int
cwtl
mov
add
repnz
adc
sbb
pop
xchg
sbb
int
dec
jne
outsb
dec
push
scas
int
in
bswap
add
pop
and
xor
int3
pop
add
movsb
pop
pop
rolb
test
or
xchg
aaa
cmp
mov
int3
mov
cmp
cmpsb
lcall
int
int
push
sbb
into
sahf
fldt
xor
add
sahf
out
push
add
cmp
cmp
or
cmp
or
repz
or
iret
cmp
repz
ficoml
in
stc
cmp
repz
adc
iret
iret
repz
cmpsl
adc
pop
daa
cmp
repz
xor
cmp
repnz
prefetcht1
xchg
xchg
xchg
xchg
push
adc
xchg
xchg
adc
adc
sbb
xchg
xchg
push
or
add
add
iret
faddp
and
out
iret
das
mov
add
sbb
inc
aas
push
xchg
pop
fisubrs
or
pushf
pop
and
mov
lods
idivb
mov
adc
fidivs
mov
daa
scas
xchg
es
mov
pop
daa
or
inc
cmpsl
frstor
push
dec
and
xchg
jl
sar
shlb
jp
mov
push
pop
shl
in
movsl
jmp
jl
inc
mov
das
out
in
cmpsl
pop
ror
sahf
out
add
iret
add
mov
or
pop
inc
daa
xchg
pop
adc
ljmp
pushf
pop
mov
addr16
push
pushf
pop
and
rclb
hlt
xlat
daa
xchg
xchg
fmul
iret
sub
shr
rclb
lcall
stc
sbbb
rcl
jmp
and
pushf
cmp
pop
xchg
add
add
les
cmpsl
mov
adc
call
out
into
pop
rclb
xchg
out
fmulp
add
or
add
add
repz
add
rep
daa
xor
push
or
sahf
out
cmp
push
push
or
or
popa
push
imul
cwtl
adc
in
add
shr
xchg
inc
popa
cmp
fstp
call
repz
shl
out
sub
pop
cmp
inc
das
enter
popa
addb
or
or
lahf
xor
xlat
mov
dec
inc
aam
push
add
pop
aam
pop
inc
cmp
out
push
fildll
jno
jle
and
adc
pop
jmp
es
bound
mov
iret
xlat
pandn
mov
or
sbb
cmpsl
mov
push
mov
daa
adc
ja
imul
ja
jg
aad
mov
mov
push
add
mov
xchg
cwtl
js
sub
bound
mov
pop
rcrl
xlat
cmova
incl
push
jg
popa
mov
cmpsb
out
mov
les
push
sbbl
pop
push
loop
pop
adc
jmp
gs
inc
xor
mulw
sbb
outsb
aas
xlat
inc
fimuls
jmp
or
sbb
xlat
je
popf
fldt
inc
repnz
icebp
notl
pop
xlat
iret
popa
xlat
lods
fwait
cmp
push
push
jno
add
cmp
iret
leave
add
jns
or
pusha
mov
xchg
push
btc
xchg
cltd
adc
mov
jae
pop
push
int3
fisubrl
mov
xchg
notl
lods
fisttpl
addr16
and
leave
xchg
fsubrs
fsubr
in
loope
dec
data16
xchg
cmp
addr16
mov
pxor
push
xchg
push
add
sahf
outsb
repnz
push
in
and
dec
idiv
or
adc
repnz
sbb
sub
shrb
addr16
dec
push
add
cs
mov
dec
push
mov
fwait
pop
movsl
ss
jl
xchg
dec
push
jae
shrl
in
enter
fnsave
ud0
invd
or
mov
or
and
cmp
mov
fidivrl
seto
inc
push
rolb
fisubrl
mov
cs
pminub
add
sub
ljmp
mov
addb
add
mov
ficompl
or
call
ja
inc
pop
sbb
shll
lock
in
cvtdq2ps
add
out
or
or
xlat
enterw
push
es
dec
jb
adc
pop
fildl
insb
add
movsl
mov
fmull
push
popa
cmpsl
fistps
test
popf
mov
loopne
pop
pop
adc
pop
mov
psubd
leave
inc
js
and
and
popa
pop
jns
pop
leave
mov
pop
mov
lods
xchg
imul
and
pop
dec
outsb
loopne
lock
inc
and
clc
pop
or
in
in
pop
push
add
add
out
add
or
out
and
or
cs
sub
push
fstl
cs
insb
cmp
sub
les
ja
daa
daa
pop
add
into
insl
pop
movq
cmp
clts
mov
iret
leave
iret
xlat
or
repnz
pop
or
insl
add
into
leave
add
pop
bound
pop
jae
jns
cmp
xchg
mov
popf
pop
dec
pop
lods
mov
mov
dec
andnps
or
das
outsb
repnz
push
pop
gs
repz
repz
adc
jge
dec
dec
mov
push
daa
daa
daa
mov
pop
vpmullw
mov
in
sbb
repz
cmc
pop
std
mov
testl
mov
and
cmp
repz
cmp
iret
repz
push
sub
pop
cs
insl
fnstcw
jne
jge
das
xor
insl
andl
mov
sbb
sub
adc
outsl
outsl
fsubl
adc
mov
push
jns
jns
inc
fisttps
push
loopne
lea
xchg
xchg
mov
je
dec
andps
outsb
daa
daa
pop
xchg
add
fs
mov
rorl
repz
xchg
add
mov
jmp
scas
cmpsl
mov
fucomi
in
or
loopne
jmp
cmp
jnp
testb
into
or
sahf
xchg
out
sub
adc
adc
unpcklps
out
xchg
xchg
loope
loope
pop
lcall
sbb
jns
into
sbb
sbb
out
repz
loope
sahf
out
push
and
jns
out
and
inc
sahf
out
sahf
and
push
sub
subb
jns
out
sub
sahf
sub
rcr
in
in
xor
call
mov
mov
jg
jecxz
adc
mov
out
fisubrs
inc
es
out
sahf
dec
and
jns
out
insb
and
and
sahf
out
lea
cwtl
push
sahf
out
sahf
mov
sbb
out
les
iret
sbb
out
sahf
out
in
lock
iret
sarl
dec
push
in
adc
sahf
out
push
sbb
sub
xlat
dec
pop
aaa
sqrtps
pop
push
jle
mov
dec
cmovp
sahf
out
pop
pop
pop
data16
iret
mov
mov
push
xchg
or
lahf
add
in
in
test
jno
outsl
call
psadbw
in
pop
in
and
das
daa
in
in
pop
iret
repz
aas
or
or
repz
or
sbbb
mov
push
setle
out
adc
jns
out
adc
adc
sahf
out
sahf
adc
out
enter
sbb
sbb
jns
adc
sbb
sub
xor
cmp
sahf
out
push
and
das
mov
in
jbe
dec
js
orl
fwait
out
cmpsb
push
sbb
jns
pop
rcll
out
sahf
out
aam
fcoml
sahf
out
sahf
in
in
adc
adc
repnz
cld
movd
or
sahf
out
sahf
or
and
sahf
out
or
or
or
cmp
inc
out
out
cmpsl
fwait
cmp
push
arpl
inc
xchg
es
dec
out
dec
jne
sbb
movsl
outsl
lods
out
shrb
mov
pmaxub
cmp
mov
add
aad
aad
fstpl
in
fucomip
push
inc
ds
pop
std
divps
xchg
testl
adc
in
repnz
sbb
out
sbb
call
lahf
sbb
xchg
jp
dec
xor
xorb
push
push
daa
mov
in
push
add
jecxz
add
jmp
psubq
jmp
or
sbb
and
out
sub
adc
push
push
adc
jb
cmp
orb
lcall
mov
ret
ret
cmp
fsub
and
jmp
and
mov
xlat
rclb
nop
movaps
jns
outsb
pop
xor
add
out
pop
push
pop
packsswb
je
out
or
or
fisttpll
ja
push
push
orl
out
adc
add
bound
scas
xchg
xchg
test
aas
jns
sbb
jmp
adc
add
sbb
daa
pop
xor
jns
out
or
push
repz
cmp
mov
or
pusha
push
iret
repz
imul
adc
cmp
lods
push
adc
repz
into
psubusw
in
add
cli
add
notb
in
pop
sbb
in
pop
cmp
and
in
dec
pop
and
in
dec
sahf
and
leave
leave
leave
in
lahf
rsm
mov
repz
leave
lret
loope,pn
in
loop
in
imul
outsl
xor
mov
in
addr16
repz
shrl
xchg
test
add
dec
in
push
add
pusha
push
push
je
repz
or
nop
in
jns
lcall
in
mov
ret
dec
sahf
out
adc
loop
ljmp
cli
sbb
out
repnz
pop
bndldx
or
adc
sahf
outsb
nopl
push
mov
stc
mov
nop
jnp
pop
cmp
cmp
maxps
jns
cmp
cmp
cltd
sbb
xchg
out
mov
push
leave
out
mov
ja
es
lock
add
std
dec
inc
sahf
or
push
and
fildll
sahf
aaa
stc
hlt
push
or
cmp
push
or
fucom
jns
bound
mov
in
jbe
pop
jp
test
lahf
fwait
sahf
out
outsb
mov
adc
adc
leave
push
aam
paddsb
mov
shl
into
push
sbb
jns
out
call
in
lret
add
mov
nop
pop
insl
jbe
jbe
icebp
jg
icebp
lahf
cmp
mov
neg
add
movaps
sahf
jnp
mov
jg
sub
push
sub
jg
cs
das
pop
sahf
out
sahf
xor
jb
jge
mov
xor
xchg
sahf
in
sahf
out
ss
aaa
mov
mov
sub
cmp
cmp
mov
jg
dec
mov
pop
pushf
cmp
xchg
aas
mov
out
outsb
xadd
inc
xlat
dec
sahf
out
inc
in
icebp
sahf
out
fisubrs
or
dec
adc
adc
add
stos
sarb
daa
je
push
loope
aas
dec
push
dec
dec
das
fwait
lret
mov
dec
inc
jge
jg
xchg
icebp
cmpb
push
mov
cmovle
jle
jns
pop
jns
repnz
push
mov
in
mov
or
or
iret
leave
leave
iret
fsub
or
ds
repnz
push
push
adc
sbb
jns
out
adc
inc
push
jb
cmp
adc
adc
sahf
ja
pop
sbb
jge
pop
lcall
mov
bswap
push
and
loopne
pop
loop
leave
jmp
add
jg
jne
nop
insb
clc
jg
push
add
sbb
push
pop
hlt
mov
lahf
jno
jl
es
cmp
add
dec
sahf
out
add
jb
leave
repz
aam
lahf
outsb
jns
fcompl
ljmp
repnz
cmovle
cmc
and
leave
repz
cs
adc
adc
repz
push
pop
pop
jns
iret
repz
cs
dec
sahf
out
sbb
enter
mov
sub
mov
jns
enter
and
cmp
insl
fimull
jmp
lea
sub
sub
adc
iret
mov
inc
cmovl
mov
xor
lds
mov
int3
aas
div
push
add
cmp
into
aas
fidivrs
out
lahf
out
xor
aam
outsl
testl
add
es
mov
jns
in
negl
push
push
pop
movntq
ja
push
or
jle
rorl
or
into
repz
cmp
stos
adc
negl
adc
adc
jbe
fsub
pop
xlat
jl
out
ds
pop
stc
sbb
out
jl
sbb
mov
sahf
out
sahf
sbb
sub
xor
xchg
xchg
out
aas
and
out
sahf
and
jp
mov
out
test
nop
popf
fsubrl
mov
leave
scas
testb
mov
pop
dec
push
or
sbb
into
repz
sbb
add
stc
sahf
pop
stc
adc
inc
dec
sahf
out
add
pop
push
pop
jae
orb
repz
repz
repz
mov
mov
jns
rorl
pmaxub
mov
aam
push
pop
cli
push
adc
ja
or
push
adc
out
outsw
cmp
inc
sbb
es
jns
push
push
sub
cmpsb
cli
daa
daa
iret
dec
pop
push
add
jne
jg
push
add
enter
pop
out
or
repnz
es
incl
sti
jns
fbstp
prefetch
sti
pop
push
paddusw
out
adc
cmp
inc
jns
iret
mov
push
pop
push
push
fmull
out
pop
insl
js
xor
iret
repz
repz
fwait
sbb
out
fidivs
and
repnz
into
and
enter
xchg
sti
or
cmp
insl
jbe
cld
pop
and
sub
sahf
testl
xchg
pop
fs
cld
int
cmp
sahf
out
mov
cmpsb
adc
adc
jns
call
daa
push
sbb
in
cld
or
push
push
sbb
xchg
out
sub
pop
aaa
inc
std
lahf
sahf
xchg
or
dec
std
fisttps
arpl
out
and
and
in
in
setp
jl
mov
pop
sub
xchg
inc
cmp
cmp
xor
mov
loope
ja
pop
lock
clc
outsb
pushf
sbb
sbb
xor
das
dec
fsubrs
push
filds
sbb
jns
push
mov
leave
shrl
pop
syscall
lcall
mov
mov
xchg
syscall
or
fisubrs
iret
or
unpcklps
cmp
jnp
pop
adc
sub
xor
inc
push
adc
xchg
pop
loopne
lcall
les
in
sbb
fisubrl
sbb
out
jecxz
repz
es
cmp
mov
das
popa
push
and
repz
ja
orb
cwtl
daa
mov
movsb
fwait
pop
das
sub
sahf
ja
cmp
iret
push
das
fisubl
fucom
jns
in
pop
xor
xchg
out
cs
push
add
ss
add
ds
outsb
aaa
pop
push
outsb
push
jmp
insb
emms
pop
iret
leave
repz
cmp
cwtl
dec
and
clc
mov
cmp
into
aas
setb
in
in
add
push
out
cmp
int
fmuls
jecxz
jns
sahf
or
stc
or
add
cmp
add
sbb
daa
push
adc
jns
leave
repz
cmp
jbe
pusha
das
imul
push
pop
xorl
pop
scas
repnz
daa
mov
sahf
out
fisttpll
call
ja
repnz
add
cs
mov
sub
sahf
xchg
out
jns
test
sub
out
scas
pop
cs
jns
in
adc
das
pop
push
xor
xor
xor
outsb
xor
fucomi
cmpsb
lahf
mov
mov
xchg
rcr
dec
add
push
lahf
push
out
dec
inc
sub
pop
add
xchg
addr16
pushf
fisttps
add
jns
in
fstpl
push
pop
mov
cmp
packsswb
ficompl
das
smsw
add
data16
cwtl
dec
in
popl
cmc
fwait
xchg
inc
mov
push
or
es
sbb
xor
fs
mov
jno
mov
cmpsl
fmul
inc
mov
es
mov
adc
cmp
pop
push
push
mov
pop
xor
loopne
sub
xchg
subl
out
out
orb
and
xchg
rorb
push
cmp
mov
add
add
aas
inc
push
or
sub
lahf
rorb
add
cmp
aaa
sub
aaa
xchg
aaa
sub
xlat
add
cs
popf
push
jbe
mull
arpl
mov
or
decl
pop
or
dec
outsb
daa
daa
or
aaa
or
jbe
jne
or
daa
jbe
mov
and
in
inc
push
addr16
das
mov
xorps
insl
cmp
pop
push
sbb
mov
orl
mov
xchg
sub
in
in
sahf
mov
in
shll
pop
or
jo
mov
mov
add
add
adc
lods
and
or
test
add
or
lcall
aam
add
push
and
mov
pushf
add
add
movsb
add
pusha
cmpb
cmpsb
fisttps
mov
repnz
mov
cmp
decb
inc
mov
out
in
inc
mov
iret
mov
in
call
mov
push
add
in
cmpsl
in
push
pop
fisubrl
xor
fcomp
loopne
jb
loope
adc
in
xchg
pushf
and
xchg
nop
repz
repz
repz
insb
pusha
push
dec
inc
cmp
iret
repz
xor
sub
repz
repz
sbb
adc
imul
and
in
and
out
outsl
in
faddl
aam
shlb
mov
dec
out
cwtl
out
out
push
dec
insb
push
fs
pop
push
jns
repnz
into
sbb
iret
repz
aam
mov
cmp
mov
jns
repz
push
sahf
push
cmp
and
push
or
out
ds
and
fadd
mov
pushf
neg
jns
xchg
pushf
push
je
pusha
push
inc
add
pop
icebp
adc
add
adc
in
push
xor
cmpb
lock
js
clc
mulb
gs
incl
dec
hlt
xor
jno
xor
aas
sbb
es
push
or
lock
push
orb
lock
mov
xorb
iret
dec
outsl
lock
call
push
mov
daa
push
adc
je
fists
pop
shll
inc
sgdtl
push
adc
jg
add
sbb
xchg
jb
mov
add
add
mov
arpl
fsubs
pop
das
add
popl
or
add
js,pn
dec
mov
inc
stc
pop
jg
jl
addl
pop
out
fdivrs
lock
repnz
out
sbb
jb
es
jns
ja
xor
insb
ss
out
and
sahf
push
mov
and
sbb
adc
ds
and
sahf
testl
jns
out
and
or
or
adc
fcompl
repz
jns
adc
xor
sub
and
push
and
sahf
out
and
and
and
add
aaa
inc
dec
cmp
or
clc
rol
xchg
fucomi
pop
imul
daa
xor
and
subb
fmulp
xlat
xchg
incl
xorl
fistl
cmp
repz
xchg
mov
in
repz
repz
xor
dec
insl
add
jns
aaa
cmp
pop
ja
mov
testl
das
push
dec
insb
adc
xchg
xchg
mov
repnz
jb
or
or
ret
cmpxchg
cld
xchg
movntps
sbb
leave
sbb
scas
mov
ret
inc
and
sahf
mov
sub
inc
rcrb
and
decl
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
mov
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
jmp
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
ljmp
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
gs
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
pop
hlt
lcall
cmpsb
lock
mov
popa
sar
mov
sbbb
std
ljmp
mov
subb
fwait
xchg
and
xor
int3
add
aas
jno
or
mov
out
or
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
jmp
test
inc
lods
lds
mov
insb
scas
add
aas
xor
aad
mov
jmp
aas
ret
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
dec
adc
lcall
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
jg
lcall
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
std
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
jg
inc
xchg
test
pop
mov
jne
fldt
cmp
jno
sar
jmp
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
jmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
cld
outsl
call
and
dec
dec
gs
std
orl
pop
ficomps
frstor
sbb
into
or
or
addb
jno
mov
add
pop
repnz
inc
inc
je
inc
inc
push
dec
jnp
addr16
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
mov
xchg
jg
stos
insb
cmp
int
fdivrs
pop
fisubl
call
dec
inc
jo
inc
popa
push
outsb
jbe
imul
push
mov
gs
outsl
dec
cs
and
add
adcb
shlb
in
leave
add
push
dec
out
sbbb
inc
dec
push
inc
push
adc
jnp
jo
jb
push
push
adc
inc
inc
inc
test
mov
dec
inc
gs
gs
insb
xchg
clc
mov
ds
arpl
test
rcl
or
bound
outsl
push
dec
pop
mov
push
push
xchg
and
xorb
xor
and
fisubrl
and
inc
push
das
push
fs
add
push
mov
cwtl
add
xchg
dec
rorl
daa
daa
mov
jge
dec
jae
imul
xor
inc
jg
jnp
cmovae
loopne
lahf
or
push
push
les
push
cmp
jp
test
je
dec
rclb
shlb
push
push
imul
sub
insl
inc
inc
inc
inc
adc
jb
dec
fidivrl
dec
lds
jae
jbe
mov
push
dec
test
push
mov
adc
xchg
int
cmpsb
adc
push
mov
mov
aas
push
sti
dec
popa
jne
arpl
and
dec
pop
cmp
pusha
pusha
xlat
push
or
dec
rol
mov
add
aad
and
clc
pop
mov
js
cli
dec
sub
mov
or
or
push
add
scas
push
jg
notl
push
imul
andl
loope
jb
lds
orb
das
pop
add
push
mov
addl
jp
lock
push
sbb
and
gs
stos
or
mov
push
push
outsl
push
inc
arpl
push
lds
test
out
xor
pop
jg
adc
mov
mov
cmp
sbb
mov
mov
data16
push
add
jno
outsl
mov
pusha
pop
outsl
ja
or
pusha
pop
es
add
aam
or
arpl
inc
or
push
inc
jo
adc
lahf
ss
pop
icebp
ja
stos
sub
push
gs
dec
scas
sub
dec
lahf
sbb
pop
inc
dec
subb
push
lahf
nop
leave
dec
add
adc
test
jg
sbb
rcrl
mov
aas
decl
out
sub
add
stos
lahf
mov
inc
jno
nop
cmp
out
mov
and
outsl
shl
mov
dec
dec
jb
inc
test
js
add
cmpsl
mov
aam
arpl
dec
outsl
add
push
movsb
and
outsb
push
sub
fisttps
pop
push
jne
les
outsl
sbb
cmp
loopne
push
mov
jle
dec
outsl
addr16
rolb
aad
iret
cmpsb
test
mov
iret
pop
sub
fcmovb
insl
pop
arpl
lea
das
xlat
stos
dec
adc
out
jg
repz
cwtl
incb
jl
dec
sahf
out
cmp
or
jns
out
mov
jl
sub
cltd
shl
rol
data16
inc
insb
pushf
cmp
jmp
dec
push
js
pushf
cmp
pause
push
and
lahf
incl
ljmp
add
popa
push
out
mov
inc
insl
pop
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
decl
mov
sub
mov
sbb
dec
jno
repz
test
call
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
lcall
fldcw
arpl
or
pop
adc
in
pusha
aad
jno
mov
jmp
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
or
xor
iret
or
shrl
pushl
fldenv
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
mov
add
and
or
adc
stos
sbb
cmp
inc
fdivl
jno
add
aad
mov
mov
movsl
in
lahf
ja
pushl
aam
call
xor
mov
lcall
cwtl
push
loope
or
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
decl
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
jl
mov
bound
ficoml
gs
aam
pop
popa
mov
into
pop
ljmp
cmp
mov
inc
movsl
fisttps
xchg
fadd
shll
jmp
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
dec
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
pushl
mov
lcall
ljmp
fildl
push
fdivl
or
test
cmp
push
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
rcl
jmp
add
inc
push
imul
xorb
sbb
push
imul
jg
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
lret
sbb
outsl
and
xchg
ja
int3
add
mov
das
es
mov
or
sub
mov
cmpsl
call
ret
shlb
sbb
pushl
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
push
pushl
hlt
orb
adc
mov
jnp
sbb
xchg
or
out
fdivr
jl
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
cmp
outsl
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
call
std
clc
sar
imul
push
js
or
push
addl
mov
cmp
jmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
ljmp
mov
inc
jmp
repnz
lret
mov
cmpsb
mov
pushl
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
cs
movsb
mov
or
sbb
add
add
iret
push
loop
shlb
xor
cmc
mov
cmpsl
outsl
inc
jne
push
popl
or
mov
imul
je
push
insb
imul
lods
pop
filds
sar
pop
inc
jbe
push
jns
arpl
arpl
mov
fsubrs
in
push
inc
insl
sub
mov
pop
inc
jne
outsl
insl
addr16
xchg
sbb
rcrb
add
or
xorb
ja
adc
cmp
push
xchg
mov
dec
inc
js
xor
bound
cmp
inc
js
pop
ret
sub
fistl
in
sbb
and
aas
pop
inc
cmp
pop
imul
jmp
xor
aaa
cmp
popa
arpl
cmp
arpl
or
popa
add
jg
xor
xor
xor
loope
dec
les
inc
jbe
pop
sbb
adc
icebp
xor
inc
ret
negb
cmp
inc
or
xchg
inc
lock
fmull
push
pop
shll
mov
mov
cwtl
push
ss
jbe
arpl
add
aas
movsl
sbb
ret
aam
jle
hlt
nop
fsubrs
inc
push
clc
xchg
inc
jo
js
sbb
and
inc
fldl
xchg
insb
popa
jns
pop
mov
push
push
dec
insb
xor
and
rclb
movq
popl
in
push
and
and
jae
cmp
adc
push
aas
dec
nop
lods
stos
cmpsl
push
mov
inc
fcomp
insb
sbb
inc
pop
pop
add
jae
inc
mov
in
fiadds
add
ds
test
mov
mov
mov
call
xchg
sbb
arpl
inc
outsb
jne
and
mov
dec
jge
int
jne
xor
xor
or
inc
cmc
mov
add
addr16
push
xchg
into
pop
jo
or
pop
inc
cmp
add
aaa
dec
add
je
orb
sbb
dec
ss
inc
mov
pop
push
xchg
inc
mov
lahf
inc
dec
mov
or
mov
push
pop
adc
rclb
lds
jb
dec
add
frstor
push
js
adc
jo
sahf
add
lahf
aas
push
outsl
outsl
mov
mov
push
pop
push
jno
inc
stos
and
in
sub
pop
shl
shr
test
pop
cmp
arpl
push
cmp
inc
and
mov
call
lea
lock
jns
jne
jo
das
inc
pusha
push
popa
jb
push
fs
mov
sbb
nop
adc
mov
adc
insb
bswap
arpl
clc
or
bound
pop
dec
popl
test
push
aaa
ja
or
ret
movl
xor
bound
sbb
add
push
sub
aaa
pop
jl
adc
loopne
push
pusha
pop
popl
addr16
xor
testb
push
xchg
mov
and
mov
movsl
sahf
aas
pusha
popa
adc
cmc
jg
outsl
shll
dec
and
sbb
cs
push
outsb
cwtl
adc
dec
pushf
mov
inc
lds
jns
daa
aas
pop
inc
or
mov
add
and
add
pop
sbb
push
lock
inc
aaa
adc
inc
push
sbb
nop
daa
movsb
enter
mov
std
clc
or
pop
mov
int
mov
dec
push
pop
add
inc
add
mov
shrb
jb
pop
dec
decl
and
and
cs
fisttpl
and
cmpsb
dec
shrd
popa
incl
lea
stc
out
pop
in
bswap
mov
out
ud0
ds
jmp
repnz
in
push
pusha
ljmp
lret
cli
add
dec
pop
push
cld
push
imul
sbb
pushf
xchg
rcl
mov
daa
loopne
into
xchg
add
or
or
push
daa
aam
aam
cmp
add
pop
add
and
add
add
rcr
jnp
inc
sbb
add
xchg
andb
add
sub
mov
mov
movsb
mov
js
push
loop
dec
enter
pusha
push
add
adc
adc
pop
add
cs
cmpb
add
les
lods
add
gs
and
jb
repnz
mulb
inc
fs
sti
push
xor
cs
mov
mov
in
dec
or
rcrb
jb
push
xlat
out
loope
jle
add
jns
test
push
dec
sbbb
add
sbb
enter
incb
xchg
sub
icebp
dec
xor
or
insb
inc
jg
sub
lea
jno
add
xchg
pop
or
jecxz
adc
add
incb
sub
mov
pop
imul
jbe
push
or
push
in
push
push
xchg
ds
push
enter
fucomi
gs
xor
fdivrp
rcr
ja
jne
jmp
mov
xchg
sahf
ja
stc
mov
call
xchg
insb
pushf
test
inc
or
movsb
in
into
scas
xchg
sub
int3
loope
pop
mov
jnp
fbld
mov
insl
adc
cmp
mov
jb
mov
xor
sub
adcl
or
mov
movsl
xchg
clc
add
out
cmp
hlt
in
nop
sub
fsubrs
xorps
sbb
push
movzbl
ret
lahf
testb
and
nop
fadds
mov
popa
cmp
mov
sub
and
lds
cmp
jbe
mov
add
pop
pop
dec
mov
sub
pop
popa
loopne
dec
sub
add
test
in
push
mov
pop
clc
or
inc
push
ret
fstp
stc
cmc
jns
xor
movsl
mov
loopne
call
sbbb
push
add
outsb
cwtl
and
and
jmp
pushf
and
popf
clc
aad
or
popf
divl
push
inc
imul
add
adc
xorl
subl
sti
adc
cmpsb
push
outsb
xor
xchg
push
inc
dec
and
add
mov
pushf
xchg
idivb
test
push
inc
lcall
add
add
movsl
xor
ret
mov
add
std
and
lds
fs
and
orb
in
push
push
push
fldt
into
ja
sub
dec
in
push
leave
push
enter
jg
mov
cmp
pop
add
hlt
out
or
sub
cmpsb
outsl
mov
xor
outsl
push
sahf
jo
rorb
jp
dec
pop
push
ret
xchg
mov
pop
scas
rorb
es
nop
sbb
sub
das
sahf
lea
mov
add
cltd
nop
notb
push
or
pop
mov
mov
es
cld
pop
mov
je
inc
test
movb
adc
mov
mov
jb
push
mov
mov
mov
and
sbb
loope
sbb
push
add
push
js
lea
jno
gs
cmpsl
cmp
adc
inc
pop
in
popf
je
rcll
in
add
and
or
rclb
dec
sbb
movb
xor
aam
rcll
or
je
fnstcw
lods
jecxz
repnz
mulb
xchg
cli
movsw
mov
sbb
dec
jge
in
push
gs
dec
test
and
xor
mov
push
dec
and
jnp
push
mov
inc
ljmp
jg
mov
push
mov
dec
call
push
inc
push
push
insb
faddl
sub
fldl
mov
push
mov
sub
sub
mov
push
cmp
hlt
add
or
cmp
ss
bound
sbb
lcall
or
stc
jp
mov
push
lea
push
in
cmpsb
scas
xchg
ret
xlat
pop
jp
push
or
mov
lock
rcrb
push
xorb
sbb
test
ja
adcl
fisttpll
roll
loope
loope
push
jnp
int
ret
sub
jl
jb
ret
xor
testb
ret
cmc
rcrb
dec
mov
mov
aam
dec
add
in
add
stos
inc
enter
xchg
fisubrs
dec
bound
test
sti
addr16
add
int3
add
fildll
adc
xchg
rcll
xchg
loope
push
lods
sub
enter
test
xchg
pop
clc
or
je
and
mov
aad
add
pop
push
lret
das
xchg
dec
call
call
dec
gs
jne
xchg
lea
xor
mov
or
sbb
pop
mov
cld
nop
push
je
or
sbb
sbb
add
into
cmp
push
dec
inc
lock
sbb
mov
pop
mov
xor
add
lods
mov
mov
lahf
pop
sbb
ja
pop
mov
xchg
testl
push
idiv
fmull
sbb
push
inc
sbb
out
into
pop
in
dec
push
inc
cmpsb
push
dec
or
shrl
add
mov
push
fs
sbb
sbb
mov
outsb
dec
sbb
cs
sahf
or
in
shl
or
jbe
xchg
and
push
mov
push
xor
icebp
inc
psllq
sbb
ret
xchg
ret
repnz
sti
sbb
inc
sub
or
arpl
or
jmp
loopne
mov
add
push
add
negl
adc
test
popa
bound
je
fildl
stos
call
ret
aas
cmp
fiaddl
mov
pop
lds
and
push
pop
lahf
jecxz
push
mov
or
gs
test
popa
mov
push
shrb
jmp
bound
xchg
or
ret
push
mov
sub
jge
and
loop
jo
sbbb
mov
or
sbb
lret
push
ret
or
or
adc
jbe
adc
shll
xor
xor
xchg
sbb
push
sbb
subl
addr16
loop
add
clc
das
push
and
cltd
inc
stos
mov
mov
push
push
dec
fdiv
rol
jns
pushf
sbb
rorb
out
xor
inc
pop
pop
pusha
push
inc
adcl
pop
mov
cmp
pushf
mov
cmp
insb
mov
into
idivl
mov
adc
xchg
push
push
addl
stc
and
js
mov
dec
add
push
jb
call
test
test
sub
sti
mov
addr16
xchg
loopne
mov
in
cmp
push
lea
adc
inc
jbe
shll
ss
push
shlb
lds
ret
and
mov
mov
jo
sub
daa
sarb
xchg
adc
fildl
or
cmp
shll
loop
ljmp
divb
addr16
mov
repz
xchg
fdivrp
xor
fdivr
mov
pop
loop
ret
add
xor
out
cmp
jecxz
add
and
psubsw
push
sub
pop
data16
ds
in
aas
xor
call
or
mov
int3
or
jle
mov
mov
pop
pop
movsl
and
push
adc
pop
mov
pop
dec
out
push
rolb
lea
inc
repnz
enter
jl
popa
sub
mov
rep
aas
rolb
movsb
push
movsb
pushf
pop
mov
adc
cmpsl
add
arpl
je
inc
jne
push
ss
rcll
xchg
rcrb
in
bound
adc
gs
sbb
sub
mov
repz
push
int3
ret
pop
in
push
mov
lahf
enter
inc
mull
mov
pusha
js
dec
pop
mov
inc
lods
add
xchg
mov
add
sbb
loope
xchg
push
jb
je
ljmp
ljmp
rcrb
je
popa
or
sbbl
cmp
out
inc
push
fistl
sbb
je
mov
cmp
scas
sbb
add
call
or
stos
pop
insb
or
mov
aam
ljmp
xchg
adc
inc
stos
sahf
dec
xchg
pushf
data16
xor
sbb
imul
into
dec
jnp
rcl
fiaddl
mov
loope
imul
push
and
adc
pop
jmp
movsl
loopew
hlt
sbb
xchg
aas
js
mov
mov
lret
mov
std
scas
jmp
adc
or
push
adc
push
subb
or
and
scas
dec
adc
jno
add
push
adc
push
cmp
push
jae
and
cmp
inc
outsl
xchg
dec
jle
jmp
mov
pop
dec
pushl
and
loopne
and
mov
dec
in
lret
pop
lcall
cs
add
or
jmp
inc
test
inc
dec
inc
ficomps
imull
sub
push
stc
idivl
jp
lret
xchg
loope
and
xchg
mov
nop
dec
in
add
sti
mov
xorl
add
inc
or
pop
jno
loope
push
sub
test
push
push
cmp
pop
adc
leave
adc
mov
cltd
adc
jl
xchg
lods
inc
rorl
in
mov
mov
pop
mov
cmp
sub
repnz
xchg
cltd
je
inc
mov
mov
mov
cmp
mov
xor
in
je
in
in
in
inc
xchg
push
in
mov
mov
mov
mov
lcall
mov
loop
inc
mov
add
imul
es
das
fidivrl
sub
aas
push
popa
lods
dec
data16
hlt
dec
mov
adc
mov
out
inc
sbb
jne
lods
jb
stos
add
jae
xor
fidivrs
add
xchg
mov
push
push
mov
mov
dec
mov
xor
data16
call
xchg
cmpsb
adc
jmp
or
cmp
faddl
push
inc
enter
dec
ljmp
add
les
cmpb
adc
mov
fwait
enter
lods
dec
xlat
push
push
mov
push
mov
push
jecxz
repz
mov
push
jg
mov
push
call
lcall
mov
adc
or
and
jbe
int3
sub
loope
cmp
and
jle
add
jne
jl
sahf
icebp
sbb
mov
lods
jo
mov
adc
movl
pusha
sub
in
test
mov
jne
pop
inc
add
adcb
das
scas
jns
dec
inc
nop
mov
dec
testl
pusha
mov
and
add
imul
enter
add
aaa
dec
mov
mov
lea
xchg
xorl
in
pop
cmp
mov
into
mov
ss
mov
outsl
flds
mov
repz
or
popa
inc
dec
pop
and
je
or
push
ljmp
add
sub
scas
leave
ret
cmp
adc
and
push
loope
call
mov
cld
inc
notb
dec
test
push
sbb
or
push
insl
push
jmp
mov
fs
xor
call
xor
ljmp
scas
aad
push
push
cld
lcall
shl
mov
pusha
popf
rorl
adc
sbb
nop
add
or
mov
push
mov
add
rorb
movsb
les
jns
lods
jbe
mov
test
inc
jne
xor
xor
inc
sbb
in
mov
dec
test
adc
mov
cltd
insl
add
mov
mov
push
cmp
push
loopne
pop
pop
xor
mov
mov
out
push
xchg
push
inc
shlb
hlt
repnz
fisubs
or
rcll
dec
inc
xchg
cltd
push
inc
inc
xor
mov
pop
fcmovbe
or
or
shr
pushl
imul
or
jnp
mov
ss
stos
std
std
push
stc
jp
movhps
xor
cld
cmp
adc
inc
subl
rorl
scas
fucomp
pop
inc
sbb
push
inc
enter
mov
dec
xor
sub
testb
movsb
xor
mov
cmp
dec
mov
jo
cld
sub
push
fmull
dec
aas
add
adc
add
cmpsl
adc
ds
xor
mov
mov
stos
sbb
jne
add
pop
mov
jns
add
mov
and
je
mov
add
imul
push
ja
adc
sarb
jmp
test
subl
js
lods
lock
pop
add
int
and
testl
jnp
dec
or
jbe
out
ret
dec
cmp
push
xor
sbb
jmp
or
clc
jae
ret
int3
adc
loopne
aam
outsb
je
inc
push
push
lldt
pop
mov
daa
jl
adc
sub
pop
xchg
adc
cmp
jne
inc
call
cld
and
pusha
bound
stos
popf
into
mov
xor
insl
inc
dec
rcrl
mov
or
call
inc
adc
ds
ret
sub
inc
jbe
jmp
xor
push
les
sbb
xadd
xchg
sarb
std
movsb
clc
push
or
enter
and
push
outsl
jne
xor
adc
std
jmp
and
xor
fld1
jb
add
in
pop
jnp
and
or
or
cmc
movsb
divl
mov
mov
sarb
mov
sarl
jl
imul
jb
cmp
xor
ret
sbb
fs
pop
jg
call
cmp
rolb
xorb
adc
push
subl
sbb
sub
lods
adc
fnstenv
in
sbb
jl
pop
stos
addl
outsl
mov
sbb
adc
jne
mov
jl
sbb
jmp
or
xor
or
push
or
xor
or
or
popf
cmc
add
lods
xchg
xor
cmp
sub
push
push
dec
sbb
push
and
mov
mov
push
dec
fiaddl
testb
cmpsl
es
mov
ljmp
sbb
push
call
imul
push
cmp
ss
mov
test
sbbl
mov
mov
adc
mov
mov
adc
push
push
mov
mov
mov
cwtl
or
mov
xchg
stos
std
mov
push
fucomip
cmp
je
cmp
stos
sub
movsb
xchg
jne
pusha
mov
cmpb
adc
clc
push
and
std
cmp
das
imul
cwtl
sbb
cmpb
push
in
movsl
shll
xor
inc
or
pushf
cli
adc
fcompl
or
pop
pushf
loop
jo
loope
test
inc
jmp
bound
scas
cmp
loopne
push
add
or
test
mov
pop
fwait
adc
mov
mov
lcall
test
paddb
inc
fidivrl
jmp
push
pop
hlt
adc
mov
call
loop
push
sbb
cmp
jnp
adc
pop
mov
stos
in
pusha
mov
call
or
fwait
inc
adc
je
xchg
add
add
and
lods
stos
loopne
sti
push
mov
cltd
xchg
lock
lea
dec
jle
test
sub
out
dec
in
sub
popf
push
add
jg
sub
das
push
lock
push
lea
mov
pop
xchg
push
xorb
loop
outsb
enter
jne
imul
sub
push
fstl
aam
in
je
push
fistpl
inc
cmp
cwtl
jecxz
pop
pop
popa
fsubrl
call
mov
scas
pusha
loope
fdivs
faddl
push
adc
xor
pop
scas
dec
mov
fwait
jae
js
push
push
sub
jno
add
add
or
sub
mov
sete
adc
aam
popa
pop
sbb
shrl
inc
sahf
inc
sahf
or
add
insb
and
push
in
ret
push
mulb
mov
jmp
pop
cltd
xorl
push
and
xchg
mov
arpl
ja
das
mov
addps
add
dec
push
hlt
lret
xchg
push
push
adc
mov
add
rep
ss
clc
and
cmp
ljmp
push
inc
pusha
test
mov
std
lods
fst
inc
mov
and
add
adc
sub
xorb
sub
or
ffreep
movsl
mov
or
jo
lods
je
cwtl
inc
adc
xor
mov
or
mov
jmp
iret
call
cmp
jmp
push
imul
pop
ss
js
addr16
sbb
popa
mov
sbb
sbb
jne
out
sbb
cmp
jmp
jnp
mov
ss
cmp
jne
push
jno
lea
jae
shll
enter
jecxz
decb
aaa
mov
mov
pop
push
mov
jmp
nop
xor
inc
enter
cmc
mov
movb
movsl
cld
lds
push
mov
inc
call
fldenv
pop
pop
cld
push
jecxz
test
setb
push
xchg
out
or
cmp
cmc
pop
movsb
sbb
add
pop
pop
jb
inc
lcall
loope
push
js
negb
lea
sub
push
xor
fistpll
xor
fxtract
jmp
lahf
and
pop
xorb
movsb
inc
or
sbb
jne
mov
or
jl
movl
pop
mov
or
mov
cmc
pop
mov
or
xchg
jne
add
mov
incb
call
in
movsb
jmp
js
push
cmp
sbb
mov
dec
or
dec
push
cwtl
jmp
sbbl
cmp
sbb
and
jbe
icebp
sub
or
or
adcb
jle
sarb
stc
sub
xor
inc
shlb
addr16
push
or
sbb
fdivl
cmpsl
or
pop
cwtl
rorl
popf
pushf
or
cmp
test
sbb
mov
test
push
push
inc
loopne
jg
mov
fs
inc
mov
mov
inc
mov
aad
subl
pop
pusha
ja
cmp
jg
push
dec
lea
push
je
or
pop
gs
mov
orb
xor
sbb
shll
add
jl
or
pushf
ret
nop
push
sti
push
jl
or
mov
cmp
fadds
dec
jne
movzbl
add
add
or
xor
movsb
gs
nop
mov
aaa
and
pop
push
sbb
ljmp
ja
add
nop
sbb
sub
es
lods
jmp
in
pop
add
push
cli
sub
into
jno
test
xor
or
and
ja
pushl
mov
lea
inc
xor
sbb
jae
inc
pop
rorb
dec
sub
jecxz
push
or
or
shlb
out
push
sub
xor
xor
inc
cmc
cmpsb
movsb
call
sub
leave
fwait
adc
or
adc
mov
leave
inc
cwtl
push
clc
xchg
bound
push
push
call
rorb
rcr
push
sub
mov
movb
sub
xor
xchg
cmp
jne
aad
clc
cmp
mov
je
inc
xchg
push
lds
dec
and
dec
nop
lds
fistl
lds
enter
adcb
addb
aas
mov
js
add
repnz
sub
call
pop
inc
rcll
inc
subl
roll
rolb
cli
add
sub
roll
nop
pop
push
out
add
push
push
shll
inc
push
inc
addl
xor
rcrl
shll
pop
add
ja
adc
rcrl
imul
movsb
jmp
add
lds
add
stos
rcrl
add
sbb
and
inc
aaa
push
shll
dec
push
sbb
rorl
daa
and
rcll
sbb
jmp
rcrb
mov
and
pop
popa
pusha
shl
or
inc
push
inc
inc
mov
push
cli
or
cli
mov
and
jp
jle
mov
mulb
mov
xor
sbb
adc
cmp
dec
fnstenv
aam
inc
adc
cmp
ss
iret
call
xchg
mov
jl
pop
int3
pop
fs
hlt
insl
inc
xchg
mov
or
pop
leave
rcrl
cmp
adc
cmp
mov
mov
mov
pop
call
clc
pop
ficompl
pop
jmp
dec
jb
mov
aaa
je
cmp
jmp
cltd
orb
pop
xchg
sbb
ret
xlat
xchg
add
dec
sar
xor
pop
test
lcall
push
into
cmp
xor
jno
dec
dec
jmp
sub
inc
mov
rclb
push
sbb
orl
push
inc
pop
xchg
xchg
sbb
je
add
sbb
or
adc
cmc
cmp
sub
dec
test
mov
mov
mov
xor
add
fists
arpl
call
sub
andl
aad
pop
push
xchg
push
push
es
cmpsb
out
xchg
add
movsl
push
and
cld
aad
es
into
push
shll
rclb
pop
sbb
jae
push
es
inc
lods
add
shufps
inc
inc
je
outsl
or
dec
push
mov
or
in
ficomps
arpl
push
xor
cmp
xchg
in
mov
sbb
sub
pusha
aam
int3
xor
jbe
push
mull
andb
imul
mov
add
sbb
in
rcll
sub
push
xchg
popa
cld
js
outsl
pop
aaa
movl
arpl
adc
pop
add
je
int3
inc
rolb
mov
add
inc
push
push
xchg
xor
pop
rcl
adc
inc
loope
add
rcrl
jo
pusha
inc
inc
pop
enter
aaa
and
les
pop
and
inc
andl
inc
xor
inc
sbb
inc
sub
ja
inc
ss
inc
xor
sub
enter
inc
lret
jnp
or
lret
call
dec
out
sbb
fsts
dec
andl
jp
out
inc
dec
sahf
int
inc
cs
pusha
nop
movsb
repz
push
in
nop
je
mov
pusha
ss
enter
out
mov
xchg
sahf
out
fidivs
sub
sbb
or
sbb
jns
out
roll
push
je
or
rcl
xlat
test
adc
xor
adc
pushf
adc
jnp
mov
lock
daa
pop
nop
add
and
mov
out
fsts
ss
push
out
fidivrs
test
mov
sarb
out
enter
add
shl
inc
movsb
repz
cld
or
push
adc
or
pusha
ss
add
or
mov
cmpsl
addr16
and
or
js
cmpsl
jge
mov
mov
loop
or
loopne
mov
clc
sti
popf
sbb
and
xor
xor
xor
mov
xchg
mov
add
sub
or
sar
lahf
ret
ficoml
test
xchg
stos
insl
fildl
add
pop
add
sahf
add
in
add
pusha
dec
dec
sahf
add
sti
pop
test
inc
lret
add
jno
je
xchg
aaa
jb
iret
add
mov
mov
push
push
inc
sahf
xchg
sub
pop
mov
or
or
xchg
sbb
cmp
mov
add
or
and
pslld
dec
in
add
or
or
pop
and
or
xor
push
push
push
lret
add
xor
adc
pop
adc
inc
adc
cmp
enter
int
push
xor
pop
enter
adc
mov
adc
adc
adc
push
adc
xor
inc
pop
pop
ja
cs
and
sbb
xchg
sahf
mov
xchg
sbb
mov
addr16
fcompl
sbb
cmp
mov
cmp
cmpsb
repnz
sbb
sahf
push
mov
sbb
pop
push
push
jg
cmp
inc
negb
pop
jne
add
add
sar
lret
cmp
mov
movl
xchg
jmp
cwtl
xchg
jns
xor
push
in
imul
rcl
repnz
dec
push
ret
in
in
repnz
mov
push
repnz
out
in
fdivl
jne
adcb
sbb
push
setno
jns
jmp
pusha
in
push
jmp
jmp
dec
pop
lods
call
in
repnz
xor
in
xchg
aad
xor
out
in
cmp
mov
sbb
pop
leave
out
xchg
out
or
nop
out
xorl
lock
dec
icebp
cmp
push
rolb
das
jnp
or
adc
repz
std
jnp
aam
hlt
hlt
imul
cmp
cmc
cmc
cmp
cmpsl
div
mov
or
popa
negl
gs
scas
addb
clc
clc
or
inc
stc
stc
and
dec
sahf
cli
cli
add
outsb
sub
nop
sti
fdivrp
cld
cld
je
mov
push
push
nop
shlb
mov
leave
repz
in
std
sbb
out
mov
ret
sarb
shll
push
lret
rcr
xchg
jmp
fwait
or
jecxz
jecxz
and
xor
pop
in
sub
cmpl
aam
dec
push
jo
or
out
xchg
das
test
scas
scas
call
movsl
sbb
cltd
rcrb
or
xchg
stos
or
cltd
xchg
pop
leave
or
sti
jmp
rorl
mov
mov
mov
cli
mov
aas
repz
movsb
repz
sbb
push
cli
stc
dec
jo
jns
stc
imul
mov
pop
push
lea
cltd
jb
sbb
sbb
xor
sti
sti
sti
dec
fmulp
aad
or
cmp
mov
clc
mov
jo
test
and
aad
mov
dec
subl
cld
dec
loop
sbb
arpl
jns
mov
and
sub
add
or
xor
out
fdiv
inc
repnz
loope
idivl
inc
mov
sahf
testl
ljmp
jmp
notl
add
push
pop
testl
xchg
pop
push
sub
scas
testb
cmp
nop
testb
repnz
repz
xchg
pop
leave
sub
or
mov
out
div
notb
aad
add
in
pop
mov
das
sbb
cmc
push
popa
imul
mov
loope
cmc
adc
nop
cli
hlt
or
xlat
inc
aad
jle
lock
push
jo
push
lods
or
mov
je
insb
push
clc
sti
mov
jb
out
loope
loope
jp
jns
xor
pushf
pusha
pop
repnz
mov
hlt
roll
repnz
repz
repz
mov
inc
mov
or
xchg
repz
andb
pop
repnz
sbb
cltd
or
in
jmp
jb
mov
and
mov
jne
jp
test
cmp
icebp
icebp
jno
scas
out
xchg
pop
adc
repnz
repnz
icebp
cmc
cmc
dec
dec
push
arpl
and
mov
lock
jb
mov
cwtl
icebp
or
out
stc
mov
dec
icebp
xor
mov
adc
or
push
jmp
mov
test
pop
sahf
push
jp
jmp
in
imul
cmp
rclb
loope
push
sti
jp
inc
cmp
cmp
xchg
cmp
mov
adc
mov
rol
btc
fiaddl
jne
stc
xor
sarl
dec
add
movsb
xchg
dec
add
mov
pop
movsb
sti
inc
xchg
cmc
jmp
out
xor
add
int3
dec
mov
popa
mov
nop
push
jns
adc
aaa
ss
out
or
push
add
dec
repz
jecxz
iret
shrl
dec
mov
int
sti
cmp
in
push
push
aad
in
xchg
idivl
jnp
gs
dec
outsb
or
sub
and
movb
cs
cli
mov
push
popa
and
lea
inc
cmp
and
xor
or
test
fstl
les
pop
xchg
or
xchg
lods
mov
dec
in
push
dec
shr
jg
fists
push
sub
push
mov
or
sbb
or
inc
jecxz
movsb
sub
push
aaa
and
lock
mov
sbb
out
cltd
dec
xor
xlat
pop
mov
push
or
mov
mov
daa
cwtl
sbbb
sbb
and
add
inc
incl
lret
xchg
inc
pop
add
mov
push
enter
and
es
sub
adc
mov
and
adc
dec
pop
sbb
jmp
dec
jno
insb
gs
xchg
xchg
jno
stos
sub
leave
mov
inc
dec
dec
push
movsl
jo
fstl
sbb
adc
adc
fsubrl
adc
and
and
jecxz
sbb
add
add
cmp
dec
inc
cmpsb
dec
sub
jmp
mov
shrb
cmp
sub
push
inc
add
push
es
aam
adc
and
lock
add
add
pop
xchg
pop
test
and
and
js
data16
inc
sbb
add
pusha
push
shrl
mov
xchg
pop
cwtl
or
jb
pop
mov
mov
mov
sbb
add
es
adc
xchg
and
sub
pop
mov
and
inc
pusha
push
add
or
movsb
add
or
cltd
xchg
adc
gs
xorb
shll
addr16
jp
popf
fnstenv
test
imul
xor
xchg
sub
iret
xor
loop
movsl
xchg
inc
iret
xor
lock
mov
fidivl
push
push
popf
mov
adc
loop
cmp
in
xlat
mov
and
inc
xor
iret
les
stc
push
inc
sub
xchg
lahf
push
xor
mov
int
and
stos
lcall
and
es
fidivrs
sbb
lret
fwait
dec
fbld
inc
mov
xor
mov
in
adc
ss
add
pop
inc
out
ds
mov
jmp
dec
add
dec
lahf
adc
cli
and
jb
lahf
in
hlt
and
aaa
pop
and
popa
xor
or
out
xchg
xchg
or
push
sbb
or
cmp
xor
or
lahf
xorb
lds
xor
inc
dec
lahf
test
sar
fmul
adc
dec
xor
jmp
inc
inc
dec
dec
lcall
dec
dec
dec
and
shld
push
xor
push
out
adc
xorb
sub
lahf
mov
mov
dec
sbbb
sbbb
in
xchg
and
xor
lahf
adc
enter
adc
inc
adc
lahf
daa
inc
mov
test
dec
inc
mov
in
inc
or
inc
push
ds
push
adc
cmp
inc
adc
pushf
mov
jg
push
jmp
fdivs
pop
jo
inc
out
fs
inc
add
add
or
cltd
inc
cmpsb
loopne
lret
push
gs
inc
sahf
push
stc
aaa
sahf
frstor
fcompl
dec
xor
or
pop
andl
mov
sbb
and
cmp
daa
jne
or
push
lea
push
push
mov
mov
cmpsb
mov
pop
cwtl
and
mov
loop
xchg
xor
sub
popf
push
push
cmp
push
xor
data16
pop
shll
mov
lods
mov
enter
pusha
xorl
arpl
enter
dec
mov
adc
or
in
add
jno
pop
mov
and
or
arpl
rcl
inc
xor
insl
or
cmpsl
xchg
and
cwtl
inc
call
cltd
imul
inc
addr16
aaa
cmc
pop
sbbl
nop
es
pop
jecxz
ret
lods
scas
sub
sub
cmp
jno
rorb
push
cli
or
jmp
and
or
xchg
ss
and
push
xor
add
xor
inc
xor
fmuls
lods
jo
sub
or
movb
mov
mov
dec
xorb
cmpsl
dec
pop
enter
add
add
mov
sub
or
jmp
mov
popf
out
fsubs
test
nop
jb
movsl
pop
xchg
and
jb
xor
pop
lret
loopne
movsb
sti
mov
not
jmp
add
loope
rcr
and
test
xor
dec
fisubrl
bound
pusha
push
cmp
in
aaa
popa
aas
shlb
shlb
jns
xchg
insb
scas
popa
je
sub
push
push
xchg
lods
les
add
je
cmp
or
loope
movsb
sti
cmp
cmp
push
inc
mov
push
xchg
cmp
mov
cmp
outsb
mov
daa
dec
mov
ret
nop
cmp
shll
pop
cmp
or
xor
cmp
mov
mov
ss
and
xorb
inc
lea
or
mov
loop
mov
dec
xlat
inc
sbb
xor
inc
mov
cltd
xchg
push
loope
xchg
rcl
loopne
sub
xor
push
inc
xchg
push
push
rorb
adc
int3
xor
cmpsb
add
rcll
rcl
or
jo
push
xor
repz
shlb
je
xchg
mov
shrl
lahf
call
cmpsb
mov
xchg
data16
cmp
sub
aad
sub
imul
pop
dec
in
xchg
out
popf
sub
in
loope
into
xchg
mov
cltd
sub
aas
sbb
mov
cltd
xchg
adc
int
mov
inc
pop
xchg
sub
push
pop
shl
lcall
xor
sub
add
or
sub
xor
jae
call
rcll
leave
loopne
mov
xor
test
jo
rcll
imul
imul
push
test
nop
sub
icebp
movsl
xlat
ss
sbb
fs
push
mov
jmp
adc
sarb
cmp
mov
dec
inc
es
xor
cmp
jnp
cltd
xchg
stos
sub
jo
jp
mov
or
sbb
fcomps
jb
dec
sub
or
cmp
push
xor
sub
push
pop
outsb
sbbl
mov
cmpsb
data16
sub
pop
cwtl
imul
adc
xor
xor
mov
xor
out
imul
cs
jo
jno
sbb
xor
xor
push
push
std
pop
movsl
test
fcomp
sub
sub
ds
xor
nop
pop
pop
sub
hlt
jp
rcl
sub
xor
ss
nop
push
lea
enter
sub
add
xor
rol
sub
add
xchg
lcall
jo
ljmp
popa
cs
or
in
into
mov
jbe
shrl
inc
inc
inc
je
sub
mov
das
sbb
xor
cld
aaa
xor
nop
sbb
jmp
fcmovnbe
sbb
jecxz
dec
inc
aaa
rclb
mov
pop
sub
rcl
test
imul
cmpsb
mov
dec
cltd
xchg
sub
cwtl
imul
sub
aad
rcl
jge
out
adc
and
cli
test
or
int
sbb
sub
add
int3
sbb
pop
lcall
cwtl
add
insb
or
fxch
xchg
or
int
jl
cmp
ss
xchg
ret
add
in
cmp
inc
pop
mov
in
call
ret
or
imul
cmp
shrb
push
xchg
jo
rcrb
mov
orl
mov
int
je
cs
mov
sti
lret
push
imul
cmpsb
mov
imul
jns
stos
cmp
pop
pop
sbb
xchg
cltd
xchg
shll
pop
dec
inc
push
mov
push
popa
bswap
sub
arpl
sub
lock
lock
out
dec
push
inc
pop
rclb
push
sub
mov
fisubrl
dec
imul
imul
cwtl
imul
adc
xor
xor
rorb
push
pushf
rorl
aad
inc
dec
mov
fsubl
xor
xor
xor
xor
xor
pop
dec
movsl
mov
xor
cmp
xchg
dec
lods
sub
call
adc
inc
xchg
pop
dec
push
popa
jo
sbb
imul
cmp
daa
adc
xchg
aaa
shrl
sub
pop
aas
mov
ds
mov
jge
aaa
imul
mov
aaa
pop
xor
daa
icebp
mov
repz
test
pop
jns
stos
loop
xchg
mov
rcl
or
sub
mov
sahf
cwtl
lcall
jnp
lds
dec
bt
inc
cs
mov
inc
push
cmp
addr16
jbe
lods
ret
pop
rcll
push
enter
add
imul
movl
ja
mov
imul
sub
enter
inc
pop
and
jb
pop
adc
xor
addb
hlt
out
push
xlat
add
sbbb
xchg
nop
ret
jnp
add
xlat
sub
lahf
jae
mov
imul
and
dec
dec
lock
sub
mov
lds
inc
pushf
or
lret
or
pop
lret
scas
push
xchg
dec
mov
lret
lret
sbb
push
sub
xchg
dec
orb
out
push
dec
je
add
js
dec
imull
dec
test
int3
xor
add
inc
dec
cmp
sbb
push
fisubrs
mov
adc
mov
push
jae
rcll
pop
popf
push
pop
in
cmp
or
push
movsl
push
leave
ret
pop
ljmp
mov
js
pop
ljmp
sub
push
sarb
jl
aam
in
push
loopne
or
stc
mov
dec
imul
scas
push
dec
ret
and
mov
pop
daa
inc
pop
test
outsb
xchg
pop
sub
mov
xchg
es
pusha
adc
cwtl
add
das
mov
shrl
inc
fiaddl
cmp
arpl
out
or
pushf
scas
outsb
inc
enter
insl
dec
cmpsl
jl
inc
add
ds
stc
push
notb
and
lcall
push
jl
sbb
movsl
push
popa
dec
or
sub
and
inc
push
push
ret
sbb
call
fistl
jge
push
xchg
fimuls
call
insl
dec
inc
jmp
and
inc
fistl
mov
addb
insl
dec
testl
xchg
inc
sub
cmp
push
inc
xchg
ret
testb
shrb
and
dec
or
inc
mov
dec
inc
dec
mov
shlb
roll
insl
dec
aaa
inc
sub
insl
dec
inc
pusha
push
sub
mov
mov
gs
lahf
xchg
test
movsb
ret
push
and
loopne
movsb
jmp
xor
movsb
repz
loopne
je
nop
loop
loopne
sbb
inc
jmp
mov
mov
rcrb
pop
inc
clc
insl
dec
jbe
cs
call
and
rcrl
xchg
sbb
xchg
pop
lahf
pop
dec
call
and
lea
adc
dec
mov
or
and
and
clts
or
add
mov
inc
outsb
add
push
dec
mov
mov
push
xchg
mov
or
call
pushf
iret
mov
dec
push
dec
inc
mov
enter
mov
xchg
sub
nop
adcl
mov
cmp
push
test
mov
and
mov
xor
dec
call
and
aaa
mov
and
andl
or
test
push
mov
xchg
push
ss
outsb
jae
lea
jle
jbe
dec
rcll
adc
add
cmp
jmp
call
movsb
add
incl
xor
cmc
out
jl
je
add
and
and
sub
jp
insl
sbb
pop
xchg
cmp
sbb
imul
jge
imul
test
mov
cmp
jmp
pusha
adc
xor
fcoml
push
jns
push
out
mov
pop
cmp
xor
in
and
cvtpi2ps
rep
out
call
in
clc
pop
and
dec
enter
push
inc
outsb
imul
xchg
inc
gs
adc
out
lret
mov
andl
mov
inc
pop
cmp
adc
rcrb
jne
mov
nop
inc
and
cmp
pop
mov
mov
inc
mov
hlt
sbb
push
inc
call
inc
outsl
inc
pop
inc
push
fcomp
xchg
ss
incl
add
fsubl
or
cmc
xor
or
jne
push
movb
adc
mov
cmp
add
cmp
inc
jmp
dec
jmp
xor
rorl
fimuls
inc
inc
lods
add
mov
inc
jmp
inc
inc
inc
pop
je
pop
es
inc
test
jg
add
or
and
mov
xchg
jmp
mov
cld
pop
mov
js
ret
je
inc
or
xchg
imul
add
pop
and
cmp
leave
or
andl
inc
add
xor
inc
jmp
sbb
add
adc
push
popa
pop
pop
sbb
and
fstps
xor
nopl
add
in
mov
mov
add
loop
pusha
popa
push
mov
js
shlb
loopne
mov
fsubl
pop
lock
roll
or
call
add
hlt
mov
cmp
shl
mov
rorl
ss
mov
pop
fisubrs
jge
push
push
dec
testl
mov
add
jne
dec
popf
cmpsl
aam
pop
enter
add
ja
cmp
push
add
clc
adc
pop
cwtl
loopne
push
add
ret
push
sar
inc
push
adc
xlat
dec
jp
sbb
cmp
xchg
sbb
pop
pop
push
hlt
dec
sub
fcomip
inc
adc
fistl
or
xlat
test
adc
xor
jmp
dec
and
movsb
sbb
sbb
cmp
mov
mov
xor
inc
and
jne
sbb
test
cmpsl
mov
sbb
and
sub
or
xchg
mov
stos
data16
sbb
in
ret
xchg
push
ja
push
cltd
nop
cmpl
out
xchg
or
das
dec
cli
or
xor
xorl
lock
add
add
xor
cs
push
add
cmp
mov
xchg
lret
mov
or
mov
sub
aaa
lret
and
add
cmp
iret
mov
mov
aad
aas
shrb
in
push
add
or
in
mov
dec
inc
aas
xchg
mov
popf
push
sbb
push
xlat
cmc
fisttps
xchg
adc
in
imul
ret
push
mov
add
fldt
imul
xor
sbb
dec
inc
sbb
shl
aas
mov
test
jno
or
les
daa
ja
add
inc
xchg
push
int3
in
mov
push
lea
nop
mov
fistpll
add
in
jge
xchg
insb
push
in
xchg
dec
jbe
pop
add
pop
test
ds
push
pop
xor
ds
xor
rol
xchg
ret
add
pop
insl
sbb
dec
adc
aaa
insl
lea
mov
and
jae
and
icebp
xor
adc
cmp
or
popf
divl
pop
push
mov
fldl
adc
push
and
adc
push
aas
adc
and
pop
rcll
dec
pop
and
inc
mov
nop
fisttpl
push
jg
add
imul
jg
cmp
movl
or
ljmp
jne
js
orb
or
and
dec
inc
pop
add
inc
jno
inc
add
aad
sub
mov
sbbl
jle
or
mov
and
adc
test
jno
jns
add
daa
pop
rclb
sub
daa
nop
movsb
repnz
cmp
sub
and
addl
mov
cltd
adcb
je
add
xor
adc
mov
mov
jmp
outsb
outsl
shll
xorb
iret
jns
and
cmp
in
nop
push
mov
sub
inc
jb
mov
inc
loopne
les
add
push
adc
in
ljmp
fbstp
in
jecxz
pop
and
push
jmp
leave
repz
add
mov
decb
insl
xor
insl
xor
pusha
rorl
inc
lret
cmp
and
sub
rorl
inc
cs
loopne
sub
add
jbe
sbb
and
and
sbb
and
nop
mov
pushf
clc
add
cs
movsb
jns
sub
fistpll
lea
nop
push
sbbl
movb
sub
sbb
add
fildl
lea
arpl
cmpsb
rcrb
fisttpll
pop
rcl
adc
sbb
nop
mov
push
mov
in
jo
shll
pop
rorb
xchg
hlt
mov
ret
sbb
leave
inc
inc
inc
loopne
mov
lret
pop
or
and
in
pop
jbe
rcl
in
pop
xor
mov
xchg
daa
fwait
pop
xchg
and
movsb
imul
and
inc
push
cmp
in
in
and
dec
shrb
push
jne
imul
adc
rclb
in
pop
je
jle,pn
jo
or
imul
nop
dec
add
sbb
lods
add
adc
sub
cmp
push
pop
and
daa
outsl
add
add
call
outsb
in
and
test
and
call
pop
add
popf
pop
add
aam
dec
call
or
fstpt
dec
mov
loope
loope
addb
scas
ret
inc
inc
outsb
push
test
cmp
push
jne
cmp
inc
dec
adc
mov
mov
jmp
test
or
push
dec
call
jb
mov
int
cmp
ficoml
jecxz
xchg
hlt
xchg
lds
call
pop
sub
stc
mov
adc
out
pop
fcomps
sbb
inc
jnp
dec
les
xlat
stc
cmp
roll
rolb
je
push
mov
cmpsl
sub
ss
cmpsl
sub
cwtl
daa
push
cwtl
shlb
lds
add
cltd
sbb
ret
sarb
addr16
rorb
jb
adc
pop
cmp
add
adc
sub
inc
push
loopne
call
in
push
addr16
mov
jo
cmpsl
mov
adc
or
loopne
loope
add
dec
cmpsl
cmp
mov
or
xchg
cmpsl
es
or
mov
xor
test
and
push
cmp
mov
mov
or
test
adc
cs
push
mov
or
mov
and
xchg
mov
push
out
lods
xchg
push
sub
dec
leave
dec
jno
jl
ss
mov
test
or
icebp
mov
icebp
repnz
push
addr16
flds
and
pusha
inc
pop
pop
push
mov
test
fistl
inc
pop
dec
sbb
add
dec
pop
adc
addr16
jmp
sub
xchg
jnp
cmp
mov
je
sarb
and
roll
es
aam
test
call
out
mov
dec
hlt
push
xchg
and
and
sub
movsl
xor
out
sbb
xchg
mov
test
call
movsb
data16
stos
dec
jns
or
and
loopne
enter
cmp
and
cmp
and
jns
popa
roll
lret
push
xchg
nop
xor
ud1
call
sub
jns
push
pop
push
and
rcll
mov
cmp
je
mov
xchg
rorb
xlat
or
xchg
lds
pop
xor
inc
push
inc
jns
inc
es
mov
mov
int
rcrb
imul
and
jns
inc
inc
push
jecxz
out
sbb
fxch
mov
xchg
shrb
sbb
cmp
push
and
mov
adc
inc
inc
pushf
pop
jns
inc
inc
ja
jns,pt
adc
jns
dec
loop
push
jp
ja
inc
jns
inc
adc
inc
jns
push
xchg
rol
jns
mov
stos
dec
enter
dec
push
stos
jns
and
adc
mov
mov
jns
and
sbb
lcall
shl
and
jns
xchg
pusha
push
push
xchg
jns
adc
inc
inc
add
and
cmp
add
inc
adc
stos
and
call
dec
enter
dec
call
adc
test
jns
sbb
xchg
out
test
lahf
jg
cmpsl
fadds
xchg
sbb
and
add
push
popf
sbb
mov
dec
imul
mov
mov
movsb
sbb
int3
lds
es
add
sbb
dec
stos
dec
call
mov
out
arpl
mov
or
adc
inc
jbe
aad
pushf
sbb
sub
mov
and
adc
ret
stos
jns
sbb
int
call
nop
cmp
les
dec
enter
xchg
dec
sbb
mov
orb
enter
stos
inc
insl
pop
mov
pop
test
pop
aaa
call
xchg
mov
sub
pop
sub
pop
sbb
je
leave
pop
test
xchg
mov
leave
sarb
js
jno
push
pop
pop
and
cmp
lea
sbbb
adcb
xor
pop
setne
push
pop
clc
cmp
pop
dec
xchg
pop
pop
dec
and
cwtl
cmp
sub
shlb
repz
iret
dec
xchg
out
push
and
ja
pop
push
xor
sub
pop
mov
pop
pop
bound
jno
ret
or
call
pop
push
xchg
push
and
xor
dec
mov
mov
js
push
aas
outsl
cmp
push
add
test
jns
pop
dec
mov
add
cs
sbb
sub
jo
and
subl
and
sti
mov
sub
jle
cmc
test
filds
or
xchg
das
inc
dec
call
push
or
fdivr
test
shlb
and
call
sti
addb
mov
cmp
pop
mov
cmp
sbbb
mov
or
test
or
lret
insb
rcrb
sub
adc
pop
jae
and
xchg
or
adc
in
sbbb
jo
sub
add
add
mov
mov
mov
scas
enter
push
sub
push
dec
test
push
inc
pop
sbb
sbb
adc
and
jmp
enter
pop
int
sub
mov
xchg
or
call
or
sbb
add
test
and
das
sbb
mov
imul
insb
pop
loop
pop
in
mov
sub
mov
add
push
push
cwtl
nop
test
inc
in
mov
inc
adc
jnp
push
test
push
push
imul
push
loopne
ret
push
mov
push
cwtl
shrb
les
push
fcoml
inc
outsl
push
push
aas
shrb
mov
inc
negb
lds
adc
test
and
push
add
inc
insb
add
push
bound
call
dec
in
outsl
nop
enter
push
mov
pusha
sub
sub
mov
cwtl
push
push
mov
or
adc
lret
push
rdmsr
inc
fisttps
push
aad
je
fnstenv
xchg
adc
xor
repz
xchg
stos
sub
or
inc
push
mov
dec
popa
inc
push
and
inc
cmpsl
push
cwtl
push
xor
inc
inc
imul
mov
mov
or
inc
or
aas
pop
shl
xor
unpcklps
das
shlb
pop
push
fucomip
and
call
jb
xchg
das
sub
add
call
lock
jl
sbb
call
call
and
int
inc
call
and
call
movsb
lods
andps
repnz
xchg
movsl
pop
call
pusha
call
stc
fs
insb
call
out
xchg
das
je
gs
pop
jl
push
jbe
inc
inc
std
inc
sbb
push
cs
test
xor
nop
sbb
cwtl
add
lret
mov
out
dec
pop
sub
unpckhps
ret
les
push
lods
int3
mov
push
frstor
fdivrs
in
mov
mov
pop
call
in
inc
aam
lock
push
cs
es
sbb
iret
dec
in
adc
add
push
cli
leave
or
leave
gs
movsl
mov
adc
sub
mov
lret
and
test
mov
sub
jae
push
cmp
inc
push
nop
lret
inc
gs
dec
cmp
je
outsb
dec
xor
push
adc
in
sbb
pop
add
push
cs
divl
and
call
aam
imul
ret
in
sbb
mov
cwtl
sahf
stc
cmp
mov
call
sar
je
dec
sbb
js
xor
daa
int
jl
sbb
xor
push
int
dec
xor
mov
mov
cmp
mov
inc
daa
int
dec
test
inc
lods
mov
daa
add
mov
popf
xor
mov
inc
mov
push
daa
lods
outsb
arpl
imul
and
adc
shlb
xchg
je
xor
jne
lcall
dec
push
xchg
push
fs
mov
dec
inc
pop
pop
mov
mov
aam
jo
mov
adc
mov
inc
stos
and
lods
pop
dec
stos
shlb
sahf
adc
and
mov
mov
stos
out
sub
movsb
aaa
dec
shrl
and
aaa
sbb
xor
fsubs
push
mov
add
and
sbb
adc
adc
sbb
es
scas
add
inc
callw
add
xchg
xchg
or
xchg
subl
jno
inc
jmp
popa
push
push
inc
sub
call
addl
adc
and
mov
dec
mov
or
mov
add
mov
mov
sub
dec
mov
and
aad
adc
pusha
dec
rcl
sbb
cs
inc
mov
or
pop
mov
aad
mov
stc
mov
cmp
push
mov
xchg
sub
aam
pop
push
or
in
aad
dec
push
rclb
sub
add
or
lea
aad
call
pusha
enter
mov
add
sub
repz
dec
add
fbld
fs
or
sbb
movsb
and
test
push
pop
aam
dec
mov
addr16
cwtl
call
jmp
dec
mov
mov
sbb
push
sbb
push
mov
call
push
shlb
test
xchg
test
mulb
push
test
xor
pop
in
xchg
test
pop
ja
push
inc
push
sbb
je
in
push
pop
mov
mov
in
push
cmpsb
adc
mov
and
and
dec
test
add
push
adc
cltd
pushf
adc
jb
adc
mov
je
cs
sti
ljmp
lret
mov
push
xor
and
xor
sub
mov
movsl
roll
xor
adc
sub
movsl
sbb
push
adc
mov
adc
out
sub
movsl
mov
push
gs
out
add
adc
addl
jle
dec
jmp
push
dec
jmp
mov
cmpsb
adc
sub
cwtl
mov
xor
dec
imul
pop
mov
and
pop
xchg
sbb
fwait
shlb
cwtl
or
inc
dec
lcall
inc
mov
rorl
test
and
add
or
adc
adc
fldl
cmp
inc
aaa
xchg
adc
or
and
cmp
cmp
inc
rcrb
and
ss
sbb
xchg
cmp
jo
mov
sarb
jmp
clc
xor
leave
lods
sbb
inc
inc
clc
inc
or
ret
push
gs
int
nop
sbb
inc
pop
push
pop
rclb
shlb
es
fldl
inc
dec
sahf
adc
test
mov
fs
inc
mov
insl
xor
or
sbbl
imul
leave
andb
sbb
mov
and
sub
add
lcall
push
lods
loopne
rorb
add
jo
push
mov
xchg
orl
add
repz
or
push
or
and
inc
push
inc
shr
or
int
add
pop
mov
mov
lea
and
in
xchg
negl
fidivl
bound
mov
lea
lcall
stos
xor
sarb
mov
mov
out
loop
mov
or
rcrb
add
pop
jno
add
sbb
loope
aaa
nop
cmpsb
sub
mov
aaa
jl
inc
sbb
popa
pop
fldl
sub
mov
roll
movsl
cmpsl
add
aaa
nop
cmp
idivb
jne,pn
aaa
imul
add
mov
aaa
xor
xchg
cmp
in
aaa
aam
or
cmp
mov
aaa
adc
add
jmp
test
aaa
cltd
or
cld
add
add
mov
sbb
sbb
cld
jb
inc
mov
out
push
call
dec
push
push
inc
sub
mov
roll
iret
test
inc
add
adc
sbb
inc
and
ja
inc
call
mov
pushf
mov
je
sbb
lods
or
add
call
addr16
and
push
sbb
fisttpll
pusha
inc
aaa
andb
addr16
mov
loopne
addr16
into
outsb
inc
sbb
jle
sbb
xchg
loopne
mov
sarb
cwtl
addr16
push
and
fwait
mov
jp
addr16
fldl
inc
aaa
and
sbb
or
faddl
les
xchg
mov
adc
xchg
ret
add
push
movsb
xor
addr16
ja
jno
jp
push
rorb
test
pop
sbb
push
sbb
pop
sahf
cmp
rol
test
mov
addl
dec
pusha
rcrb
adc
xchg
push
pop
sbb
mov
rol
dec
nop
or
mov
dec
sbb
jo
rcrb
sbb
out
mov
pop
push
sbb
push
pop
cmpsl
inc
sahf
int3
mov
push
pop
cmpsl
adc
pushf
in
inc
xchg
mov
adc
mov
jecxz
mov
or
out
cmp
xchg
outsb
dec
jns
adc
adc
js
mov
inc
ljmp
push
mov
sub
outsl
xchg
repz
movsb
xchg
xchg
mov
push
add
pop
imul
repz
dec
xor
mov
fst
cmp
xor
mov
pop
cmp
and
or
mov
cwtl
mov
mov
daa
mov
or
fwait
repz
pop
xchg
push
repz
repz
mov
repz
xor
inc
mov
xchg
add
lahf
pop
fdivl
movsb
xchg
mov
push
out
stos
add
bound
push
test
dec
imul
push
ret
mov
xchg
outsb
nop
inc
fistpl
mov
fwait
jg
and
rorb
mov
or
sub
repnz
push
popf
int
sub
mov
or
pop
and
mov
jnp
or
cmpsb
je
cs
cmp
out
pop
pop
fucom
mov
xor
out
or
and
mov
icebp
push
movsl
hlt
cld
call
jb
mov
mov
or
jne
fistpl
adcb
mov
or
ljmp
or
and
add
andl
sub
sub
movsb
mov
sti
fwait
repz
adc
cmpsb
and
repnz
adc
stos
xlat
fwait
push
jnp
inc
cltd
imul
sub
or
clc
dec
mov
adc
adc
xchg
fwait
jge
mov
enter
jb
insl
test
jae
fidivl
xchg
jnp
push
pop
dec
aam
jnp
cmp
push
sbb
shl
jge
push
mov
jnp
mov
inc
call
in
popf
mov
jb
add
pop
xchg
inc
push
sub
in
nop
sbb
or
inc
xchg
inc
xchg
pop
xchg
shlb
xchg
nop
inc
mov
cmp
and
ss
sbb
test
jb
lret
dec
int
mov
test
sbb
cmpsb
dec
mov
in
cltd
inc
push
and
or
dec
xchg
cltd
andl
and
push
jo
mov
dec
sbb
addb
jmp
in
or
enter
mov
adc
fwait
dec
add
add
iret
pop
ds
repz
cmp
add
and
or
sbb
out
fadd
scas
sahf
mov
jns
out
bound
sub
sarl
or
sbb
aam
out
fnstsw
pop
push
lods
push
mov
int3
loop
push
inc
push
push
sub
sti
sahf
out
push
nop
movsb
push
push
xchg
jl
iret
repz
push
inc
ss
cmp
je,pt
push
sahf
out
cmp
push
repnz
fmulp
negl
xchg
mov
ret
cmp
sbb
incb
add
es
loop
cmpsl
stc
cmp
sbb
sahf
out
mov
sbb
cmp
shll
pushf
scas
lret
ds
call
sub
out
sahf
inc
pop
data16
nop
jns
out
sahf
lods
mov
ficomps
decb
ss
inc
push
pop
adc
js
out
jb
jle
popa
idivb
sahf
mov
daa
rol
loop
clc
pop
mov
cmp
cmp
aaa
je
fs
push
cmp
adc
daa
mov
mov
jbe
add
fwait
insl
aad
jae
jbe
push
cwtl
cmpsl
insl
mov
add
out
iret
dec
test
xrelease
push
jbe
and
test
inc
sub
loope
push
rol
pop
lret
add
and
pop
jo
push
cmpsb
mov
pop
push
inc
sub
insl
xor
inc
arpl
gs
or
jge
dec
push
je
dec
pop
pop
jo
mov
pusha
outsl
push
push
ja
daa
sub
push
mov
cmp
es
mov
xlat
js
pop
leave
aad
xor
xor
insb
xchg
or
mov
ss
xor
add
fisubs
test
add
adcb
out
insl
adc
push
xor
sahf
ja
mov
dec
cmp
scas
or
rolb
fldt
dec
and
mov
imul
mov
xchg
clc
dec
adc
outsl
inc
pop
mov
pop
mov
sub
pop
and
push
fcoml
ret
push
pcmpeqd
mov
imul
mov
xchg
cmp
shrl
stos
outsl
out
in
xor
es
push
pop
clc
fsubp
cmp
mov
jg
mov
sbb
aas
ret
je
push
sbb
das
pop
xchg
jg
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
shr
fimuls
pop
inc
lcall
dec
sbb
test
pop
dec
and
push
dec
imul
push
jae
inc
jne
outsb
je
or
incb
les
std
in
lret
inc
inc
xor
sub
sub
sub
filds
sub
xor
xor
jge
xor
sti
mov
inc
xor
xor
ss
xor
cmp
fdivl
cmp
push
xchg
xor
clc
inc
inc
xor
mov
or
das
add
pop
fs
psllw
jo
mov
data16
or
cs
sbb
cmp
push
xor
fdivrp
aaa
fmuls
inc
inc
push
and
inc
aaa
adc
xor
inc
inc
or
nopl
roll
jl
push
arpl
xor
jle
scas
sahf
inc
push
inc
push
dec
and
cmp
ss
add
fistpl
and
dec
dec
mov
outsl
mov
dec
loopne
and
mov
orl
push
push
fadds
imul
pop
jae
cmp
sub
inc
push
outsl
jle
out
inc
out
adc
push
sub
out
fnstcw
push
mov
fs
mov
lods
sahf
add
movd
fsubr
cmpsb
push
hlt
or
aam
dec
xor
jnp
insb
adc
je
test
and
jo
outsl
push
outsl
ret
xchg
xor
imul
fs
je
push
arpl
jno
jns
push
insl
xor
inc
cmp
add
mov
cmpsl
enter
xchg
inc
pop
mov
pusha
jne
ss
mov
subb
out
mov
std
inc
arpl
loop
roll
data16
ret
cmpsl
sub
lret
jne
mov
and
loopne
mov
xor
or
pop
cmovb
push
add
dec
add
ror
pop
add
js
xor
pop
push
jp
frstor
or
pusha
xchg
xchg
jmp
push
and
dec
inc
mov
and
inc
push
imul
imul
ret
xchg
loopne
jns
scas
pop
cmp
dec
fs
imul
push
mov
popa
fs
jo
push
fiaddl
rolb
push
xchg
ret
inc
aaa
dec
movsb
jmp
and
fwait
outsl
push
pop
arpl
add
jmp
inc
cs
push
push
push
add
ja
dec
mov
shlb
add
outsb
outsl
push
popa
imul
inc
outsb
popa
pusha
mov
add
sbb
fsubl
mov
mov
pop
add
and
pop
add
inc
inc
daa
inc
xchg
sub
repnz
fsubl
addl
pop
mov
test
adcb
push
xchg
aaa
and
xchg
pushf
add
adc
popa
fcomps
les
jg
mov
xor
add
dec
cmpsl
add
mov
mov
mov
sahf
addr16
add
orb
int
jns
or
add
mov
cmp
adc
iret
repz
xchg
adc
push
sbb
sbb
int
jns
sbb
call
idivl
push
das
push
pop
nop
cld
xchg
out
scas
and
cli
js
mov
cld
stc
jp
push
cld
sbb
jns
fdivr
mov
cmpsl
inc
mov
sbb
dec
or
xor
push
dec
pop
mov
and
sbb
push
push
dec
push
dec
sbb
adc
cmp
dec
sbb
cmp
es
test
stc
int3
sub
adc
push
cld
or
jns
cmpsl
lock
int3
rol
sahf
mov
ds
xor
mov
mov
repz
cmpb
cmp
pusha
pop
mov
sahf
push
push
dec
dec
inc
inc
repz
jns
push
xor
sub
repz
sub
sbb
adc
iret
repz
or
add
jns
cmpsl
stc
cld
or
hlt
call
out
enter
int
jns
jo
xor
lock
int3
cmp
repz
mov
imul
or
push
fsub
jns
out
les
sahf
push
sub
aam
mov
cmp
inc
sbb
add
pushf
out
outsl
call
cwtl
jl
jno
inc
iret
inc
push
es
jnp
aas
pop
add
pop
imul
inc
push
mov
add
sbb
dec
dec
adc
sub
adc
add
adc
inc
nop
inc
and
dec
cmp
push
call
lret
bound
les
adc
adcb
scas
push
and
gs
inc
xchg
pop
adc
inc
mov
lret
and
andl
dec
enter
and
insb
adc
in
push
pop
push
jmp
sbb
pop
lret
and
jo
pushw
lods
jecxz
adc
xchg
xor
and
mov
adc
stos
xchg
icebp
or
mov
pushf
andb
mov
shrb
inc
mov
dec
ret
jns
out
inc
push
mov
push
inc
push
xor
xchg
cld
cs
pop
loopne
inc
mov
jnp
out
mov
inc
cmp
pop
jne
adc
stc
sbb
ret
push
rorb
je
imul
sbb
arpl
inc
cld
and
imul
pop
jb
pop
push
gs
clc
jp
jo,pn
mov
cmp
into
out
sub
push
push
insb
mov
das
inc
iret
in
dec
pop
mov
jl
add
outsb
ja
lahf
add
push
js
mov
loopne
xchg
in
es
fsub
ds
xchg
or
addr16
mov
push
xor
sub
xor
xchg
inc
sub
aas
jg
nop
pop
xor
fcoms
mov
cltd
aam
cmp
ret
pop
xor
aas
int3
data16
dec
mov
jg
jbe
add
js
and
pop
mov
jecxz
rcr
popf
insl
cmpsl
nop
cmp
ss
lcall
popf
setl
lret
les
jl
inc
cmp
popf
shll
push
cmp
mov
sbb
test
test
or
mov
mov
and
mov
enter
mov
outsl
cmove
cmp
iret
fcmovnbe
sbb
aas
jbe
in
imul
insb
adc
mov
out
loopne
dec
mov
fisubs
in
cmp
lock
enter
cmpsl
jno
dec
mov
and
in
jnp
insb
adc
dec
pop
add
cmp
inc
inc
adc
xor
imul
popa
dec
pop
ltr
xor
lcall
scas
pop
push
and
and
inc
push
push
push
push
mov
push
outsl
ja
xor
jle
xchg
and
add
sub
nop
mov
push
add
fsubrp
fsubs
add
adc
add
popf
pop
fiaddl
repnz
outsb
inc
xchg
outsl
dec
jmp
mov
ljmp
addb
in
mov
adc
bound
jbe
push
and
xchg
mov
mov
fucomi
inc
add
insl
jo
dec
pop
lcall
add
mov
sbb
mov
cli
add
jae
nop
addb
push
jae
push
adc
and
test
push
push
adc
or
mov
mov
popa
lret
out
adc
cmp
or
jecxz
inc
sbb
into
sub
loopne
lds
shll
add
mov
xchg
dec
pop
popa
push
fdivl
dec
pop
das
dec
sub
dec
or
cmp
xlat
jle
push
jo
jb
jns
push
ficoml
movsb
sbb
roll
push
push
mov
cmpsl
xor
push
sbb
xchg
jno
sbb
outsb
sbb
rcrb
into
aaa
adc
jge
test
popf
inc
and
pusha
inc
adc
mov
inc
fimull
into
cmpsl
and
inc
imul
push
or
das
xor
push
fs
add
cmp
inc
push
mov
inc
add
fistpll
add
gs
syscall
lods
add
outsb
pop
subb
shlb
push
es
jecxz
lea
and
or
jne
inc
jmp
nop
pop
test
sub
fs
xor
sbb
xor
and
sub
dec
icebp
addr16
inc
cs
cmp
mov
fidivrl
lea
das
and
push
call
pop
adc
dec
and
je
outsb
xor
ret
insl
add
and
rcrl
add
sarl
sbb
inc
xchg
outsl
mov
aad
lods
js
scas
inc
add
stc
add
adc
lcall
pop
mov
push
xor
dec
dec
pop
addr16
and
arpl
mov
mov
lds
mov
lret
inc
push
outsl
gs
sub
dec
xchg
add
roll
push
loopne
in
push
dec
jmp
cmp
mov
out
add
lock
mov
add
mov
rolb
insl
imul
out
add
xchg
popa
outsl
adcb
arpl
inc
jmp
enter
pop
ja
ja
js
aaa
dec
inc
dec
lret
dec
imul
inc
cmc
gs
inc
dec
lods
sbb
push
or
lret
adc
cmpsb
add
xchg
in
and
sub
jo
add
jg
add
add
outsl
dec
jecxz
push
inc
pop
mov
mov
sub
scas
adc
dec
pusha
push
jo
push
int3
or
jno
cmp
inc
test
add
scas
mov
jae
into
pop
roll
in
xchg
adc
or
xchg
add
dec
and
nop
imul
add
iret
pop
sub
int
xchg
into
push
insl
push
out
outsl
inc
cmpsl
add
vpsubsw
push
mov
imul
mov
push
and
jns
pop
adc
jns
cld
inc
jae
lods
pop
loope
adc
add
je
cmp
testb
outsl
xor
or
pop
add
inc
mov
or
lods
pop
sarb
bound
sbb
push
dec
jle
sub
inc
xor
out
pusha
imul
cmc
out
fbld
pop
ficomps
sub
add
scas
std
add
popa
rcrb
ja
cli
fiaddl
push
jecxz
inc
dec
mov
xchg
push
pop
add
pop
xor
mov
push
rol
add
pop
pop
push
jbe
jge
insb
push
sbbb
push
vmwrite
popf
cs
fucom
icebp
pop
and
add
jns
loope
xor
test
add
mov
daa
xlat
pop
add
or
add
icebp
in
aam
inc
cmp
inc
xor
sti
pop
add
or
or
imul
addr16
pusha
shll
and
movsl
adc
ja
pop
mov
inc
or
and
inc
sub
mov
mov
add
enter
add
les
rcrb
sbb
sarl
or
clc
out
lock
repz
call
mov
mov
lods
test
out
sahf
out
mov
xchg
out
sahf
mov
repz
inc
cmp
stc
cmp
repz
sbb
cld
in
push
sub
cmpsl
lock
call
push
loopne
fcom
enter
cmp
mov
pusha
cmp
repz
cmp
sub
stc
cmp
repz
or
cld
in
out
sahf
cmpsl
hlt
in
in
int3
ficomps
mov
mov
js
sahf
out
fs
inc
sub
and
ja
iret
sbb
loopne
push
adc
inc
sub
xchg
add
adc
xor
or
push
push
dec
mov
mov
push
mov
jno
lcall
pmuludq
loopne
xchg
not
lock
push
cmp
loopne
nop
data16
xorb
call
adc
lret
dec
inc
add
jbe
inc
add
adc
mov
neg
mov
add
mov
inc
dec
pop
mov
pusha
addb
mov
xor
mov
daa
xchg
add
cmc
xchg
adc
decl
clc
adc
jne
adcl
orb
xchg
add
mov
rclb
pop
add
in
cmp
or
or
mov
mov
mov
sub
test
lret
sub
sub
jbe,pn
add
and
xlat
mov
mov
xor
ds
je
cmp
and
mov
in
pop
jbe
outsl
jb
imul
sbb
addr16
or
sbb
jo
cmp
dec
add
ja
sub
and
pop
sub
add
or
adc
jne
test
add
jae
popaw
insb
into
push
in
imul
stc
das
sti
ss
shrl
sbb
ja
xchg
inc
add
inc
pop
pop
adc
fcmovbe
add
les
pushl
or
sbb
bound
loopne
sbb
das
xor
xorb
xor
xor
xor
xor
xor
xor
pushl
movsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
pushl
xchg
shll
inc
ss
ss
es
dec
aaa
push
pushl
pushf
aaa
mov
iret
aaa
call
aaa
adc
dec
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
data16
es
decl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
mov
sarb
aas
push
lock
idivl
or
push
add
adc
and
dec
xor
xor
outsb
xor
popf
xor
jg
xor
xor
xor
xor
xor
mov
xor
xor
lcall
jae
xor
out
xor
xor
xor
xor
xor
xor
incl
mov
les
fnsave
ljmp
divl
jno
cltd
ss
jmp
pushl
in
ss
aaa
sbb
jno
mov
aaa
loopne
add
or
lcall
sub
inc
cmp
loopne
jmp
cmp
ret
cmp
cmp
cmp
push
cmp
jl
cmpl
mov
cmp
push
call
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
pushl
sarb
rcrb
das
jo,pt
test
mov
loope,pt
or
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
aas
sbb
jge
xorb
xor
pushl
mov
xor
xor
jl
mov
mov
xor
xor
xor
xor
pop
xor
pushl
jns
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
call
pop
xor
jo
xchg
xor
xor
xor
xor
xor
xor
xor
xor
push
aaa
push
sub
jg
aaa
ss
clc
loop
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
aaa
std
cmp
mov
xchg
cmp
cmp
cmp
cmp
xchg
aas
inc
aas
inc
test
loopne
aas
ja
pusha
pop
jmp
inc
push
or
cmp
pop
xor
push
xor
decl
jbe
xor
xor
xor
xor
xor
xor
ret
inc
call
push
xor
pop
xor
lcall
clc
xor
xor
incl
xor
cwtl
xor
lock
clc
mov
xorl
xor
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
cmp
cmp
std
cmp
cmp
push
inc
pop
lcall
das
cmp
ds
fidivrl
jmp
xchg
outsb
xor
xor
fistpll
mov
ss
ss
xchg
cmp
cmp
mov
mov
incl
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
decl
cmp
cmp
dec
aas
push
mov
outsl
aas
js
cmpb
aas
sarl
aas
in
out
out
jo
clc
fstpt
mov
movsb
xor
add
jmp
inc
pop
mov
fisubrl
xor
loop
xor
hlt
aad
pushl
cmp
xor
mov
xor
xor
scas
std
xor
pop
jg
data16
ss
add
or
aaa
and
pushl
loopne
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
xchg
mov
xchg
aaa
mov
das
cli
outsl
clc
aaa
xor
cmp
xchg
outsl
cmp
xor
pusha
cmp
sbb
cmp
cmp
sbb
push
cmp
inc
cmp
dec
cmp
jmp
jmp
popa
cmp
cmpb
cmp
push
stos
cmp
cli
jmp
mov
cmp
cmp
cmp
cmp
cmp
repnz
scas
xor
adc
sub
xor
cmp
cmp
dec
cmp
call
push
cmp
insl
cmp
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
scas
jmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
dec
decl
cmp
addr16
lea
scas
cmp
jg
cwtl
lcall
ds
ds
jecxz,pt
out
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
outsl
sahf
jo
mov
mov
rclb
xor
dec
scas
insl
stos
lcall
test
in
or
adc
and
sub
cmp
call
xor
mov
xor
xor
xor
xor
xor
xor
aaa
loopne
pop
mov
jl
cmpsl
xor
xor
scas
jno
xchg
out
cli
push
cld
xor
xor
xor
cmpsb
pushl
xor
xor
pushl
ret
aaa
xchg
aaa
fwait
sahf
cmpsb
mov
decl
scas
cmp
outsl
mov
sub
cmp
cmp
mov
mov
data16
dec
cmp
cmp
xor
cmp
cmp
sbb
add
or
xor
cmp
decl
aaa
push
outsb
aaa
jb
jbe
xchg
ja
js
jge
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
jle
mov
incl
cmp
ja
lahf
xor
xchg
aas
cmpb
pop
inc
xor
mov
xor
xor
xor
xor
xor
jl
jl
mov
aaa
mov
ret
aaa
jmp
repnz
incl
dec
or
cmp
pop
cmp
jge
mov
loopne
out
cmp
cmp
jbe
xchg
cmp
cmp
cmp
mov
idiv
jg
cmp
cmp
cmp
fdivrs
push
aas
jne
mov
std
incl
or
mov
fwait
xor
xor
lock
push
repnz
aas
xor
jge
sub
divl
pop
xor
fsub
adc
es
incl
cmp
dec
ss
outsb
notb
ss
in
and
cmp
mov
aaa
cmp
cmp
mov
push
loopne
or
sbb
cmp
pop
jge
jmp
push
imul
cmp
test
mov
ret
jg
push
cmp
dec
cmp
cmp
jae
aam
fnstsw
jecxz
js
cmp
jp
mov
cmp
cmp
pop
sarb
inc
cmp
push
loopne
cmp
mov
and
push
cmpb
scas
decl
mov
ret
idivl
add
sbb
addr16
adc
inc
inc
loope
rol
add
push
mov
push
xor
aad
out
cmp
or
xor
mov
xor
xor
mov
xor
push
jmp
lcall
xor
ds
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
out
in
aaa
mov
aaa
mov
cmp
mov
cmp
aaa
cld
pushl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
ljmp
adc
jbe
cmpl
cmp
cmp
adc
adc
aas
pusha
aas
cmpb
aas
fdivrl
loop
out
out
pop
rolb
xor
adc
xor
sar
jae
cmp
jne
jg
xchg
xor
xor
xor
popf
pusha
rcll
cld
xor
xor
ljmp
pushl
jo
adc
adc
sbb
sbb
sub
sub
nop
cmp
cwtl
cmp
test
enter
sarb
aam
in
ljmp
push
out
xor
aaa
loope
or
into
cmp
inc
xor
xor
add
jl
mov
mov
xor
les
int3
mov
xor
xor
mov
xor
cmp
sub
sub
xor
jg
add
cmp
inc
cmp
cmp
cmp
inc
pop
rcrb
cmp
add
scas
fidivs
cmp
cmp
push
inc
mov
test
enter
aam
fdivrs
fsubrl
in
call
dec
cld
inc
stos
scas
push
add
or
adc
sbb
loopne
cmp
cmp
sub
sub
xor
cmp
inc
jg
icebp
cmp
cmp
pop
cmp
cmp
clc
add
cmp
cmp
cmp
outsl
pop
push
cwtl
mov
sub
lcall
inc
mov
push
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
mov
sub
aas
fdivrs
loopne
clc
jbe
jmp
cmp
pop
bound
jg
xor
xor
inc
xor
xor
cwtl
xor
xor
xor
xor
lock
test
cmpsb
cmp
xchg
fadds
add
xor
pusha
xor
pusha
cmpsb
and
fimuls
xor
lahf
jle
sahf
ss
sahf
int3
shlb
aam
fdivs
fdivl
jg
loopne
in
call
ss
ss
add
add
or
or
adc
adc
call
sbb
and
and
sub
sub
xor
cmp
cmp
mov
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
dec
jl
jl
xorb
aaa
mov
nop
aaa
xchg
aaa
cwtl
into
das
ret
mov
dec
mov
mov
mov
xchg
clc
inc
aaa
enter
shlb
aam
fdivs
fcompl
in
or
push
out
aaa
hlt
xor
aaa
hlt
add
subb
cmp
sbb
cmp
into
ret
fdivrl
call
mov
mov
cmp
cmp
cmp
cmp
cmpsl
and
sub
cmp
cmp
cmp
cmp
push
cmp
sbb
mov
xchg
jmp
cmp
mov
mov
cmp
or
mov
xorb
lods
in
jle
jg
repnz
movsb
fs
lret
lods
pop
push
aaa
cmpsb
lahf
das
decb
pusha
aaa
icebp
push
fnstenv
aaa
stos
mov
out
pop
aaa
mov
lret
aaa
ljmp
gs
push
aaa
mov
in
mov
dec
jle
mov
push
pushf
xchg
cmpsb
rolb
push
and
roll
popa
sub
iret
icebp
add
aam
movsl
add
rolb
or
out
sub
mov
cmp
mov
adc
or
out
addb
int3
enter
push
xchg
sub
sub
repz
xor
mov
imul
cwtl
push
xchg
rolb
adcb
inc
and
push
pop
cltd
cmpsb
mov
pusha
dec
out
xchg
jo
and
add
daa
sub
sarl
jno
push
sub
popa
inc
xchg
daa
aam
inc
sbb
xor
aas
ret
lds
addb
rorl
pop
gs
xor
insl
movsb
mov
mov
dec
xchg
mov
xchg
popa
adc
cmp
mov
mov
xchg
push
jne
jmp
mov
pop
push
cmp
sub
je
jae
lods
adc
push
mov
cld
add
jl
or
incl
add
push
mov
pop
ret
cmpsb
xor
mov
sub
mov
addr16
push
and
test
sub
pop
ds
fs
jbe
call
pop
shl
push
pusha
xchg
push
es
jmp
pop
jg
cmp
mov
xor
jb
or
inc
add
add
jp
mov
or
mov
jmp
or
add
loop
sbb
aaa
mov
mov
pop
sbb
and
sub
mov
imul
jbe
test
shlb
pop
rol
jl
sbbb
add
and
pop
pop
sbb
fisttpl
jb
arpl
and
popa
add
pop
std
sahf
add
popf
pop
ficoml
cmc
mov
and
mov
jno
inc
cmp
jne
ficoml
add
testb
test
pop
jmp
push
cmp
call
inc
dec
cld
xor
ss
decl
mov
or
mov
sbb
sub
mov
fistps
jmp
push
fstl
dec
add
xor
or
imul
rorb
pop
and
jl
xchg
mov
dec
xchg
mov
ret
jmp
cmp
and
bound
and
sbb
sbb
in
fsubrs
aas
lea
sbb
pop
clc
fisttpll
cmp
mov
mov
or
leave
jo
mov
mov
out
mov
xchg
mov
ljmp
cmpsb
mov
sahf
lret
cmp
or
mov
out
adc
adc
and
jb
lret
add
fisubs
inc
imul
and
add
mov
cmp
add
push
add
fimuls
ret
xor
ret
pushl
inc
or
orb
cmp
and
xor
inc
or
or
adc
adc
adc
loopne
sub
push
add
imul
push
adc
mov
sub
mov
push
mov
sbb
mov
and
mov
sbb
dec
sarb
mov
pusha
adcl
leave
inc
jo
pop
and
pop
ja
cmpb
or
push
or
fistl
test
adc
add
mov
xchg
mov
andl
mov
aad
mov
adc
aaa
je
adc
or
repnz
je
xchg
push
adc
or
or
test
sbb
testl
jno
add
je
jge
adc
sub
add
mov
repz
fs
pop
mov
xchg
pop
outsl
inc
adc
in
cmp
sub
dec
mov
and
dec
in
imul
loope
mov
xchg
push
fstl
mov
rcrb
mov
lods
add
mov
cmp
stos
and
mov
stos
aas
xor
cmpb
mov
pop
pop
test
sbb
jnp
mov
stos
adc
push
push
dec
or
and
jecxz
add
mov
push
adc
lods
shll
adc
mov
inc
dec
sub
adc
jbe
xchg
pop
cli
sbb
loopne
dec
sbb
leave
push
std
pop
xor
loope
push
jl
in
shll
call
mov
rcll
dec
ret
call
and
pop
sahf
jbe
cmpsb
nop
lods
push
mov
and
push
dec
push
or
jp
les
mov
cmp
pop
call
mov
pop
cmpsl
mov
inc
dec
mov
and
push
sbb
call
mov
jmp
push
push
or
sub
inc
adc
and
mov
mov
mulb
or
add
inc
adc
test
inc
inc
and
adc
stc
fs
mov
sbb
subl
mov
jg
ss
sbb
or
gs
loop
fistps
adc
inc
andl
out
jbe
mov
or
or
xor
push
pop
pop
pop
jle
or
sbb
sbb
adc
dec
or
fists
add
inc
add
fimull
imull
mov
or
imul
sub
mov
mov
inc
outsl
push
adc
orb
jge
push
ret
insb
repz
pop
add
fistpl
add
pop
leave
call
pop
ret
rorl
ss
rolb
inc
mov
pop
ss
mov
nop
shlb
add
and
fisubl
jae
inc
pop
test
xlat
pop
pop
test
adcl
and
cmp
mov
lret
fisubrs
add
xchg
jne
sub
add
push
xchg
addr16
jns
ss
xchg
out
sahf
out
pop
push
dec
inc
adc
pop
addr16
jmp
test
mov
inc
lret
and
xor
add
fistpl
inc
push
fs
mov
pop
call
dec
inc
addr16
cmp
loopne
call
iret
lock
cmp
or
xor
xchg
jns
addr16
xchg
cmp
inc
push
push
inc
dec
pop
out
addr16
mov
add
or
pop
add
mov
cltd
jle
and
cmp
adc
xor
pop
sbb
cltd
push
sbb
and
adc
or
add
addr16
cwtl
inc
mov
or
inc
cltd
mov
lock
push
call
rcrl
mov
pop
jb
cmpsb
jo
jnp
repz
mov
call
push
jnp
cmpsl
ret
pop
push
and
cmpsl
add
inc
push
decl
push
enter
lcall
es
push
inc
cs
daa
daa
dec
jae
dec
daa
daa
daa
daa
xor
shll
daa
daa
daa
daa
imul
daa
add
iret
in
cmp
sub
sub
inc
shlb
sub
lret
push
enter
lcall
sub
sub
add
xor
push
sub
sub
dec
inc
and
cmp
mov
mov
or
mov
jo
pop
sbbl
sub
mov
sub
xor
sub
add
sub
add
xor
subl
addr16
or
sbb
pop
and
lock
jp
cld
sub
fs
dec
sbb
mov
test
add
adc
in
psubsb
cwtl
adcb
shlb
testb
xchg
sbb
outsl
add
inc
enter
mov
adc
addr16
inc
dec
notl
adc
pop
mov
sub
xchg
xor
jle
push
xchg
mov
in
fldl
sub
push
data16
addr16
mov
enter
roll
cwtl
sub
test
add
fstpl
xor
xor
add
push
data16
adc
cmp
test
jmp
je
and
daa
adc
nop
imul
add
or
adcb
fldl
push
mov
scas
test
mov
mov
cld
add
sub
sbb
or
inc
mov
xchg
mov
cltd
cwtl
and
adc
push
call
pop
adc
lret
rol
inc
cmp
adc
adc
mov
dec
outsl
roll
cwtl
push
cltd
mov
xor
les
sbb
pop
jbe
jno
cltd
pop
sbbb
jb
sub
xchg
sbb
fsubrs
and
sbb
test
push
add
mov
ret
and
adcb
pop
ljmp
mov
sbb
or
sub
mov
mov
adc
sbb
sub
dec
mov
popf
pop
popf
xor
inc
movsl
inc
adc
mov
pop
sub
outsb
adc
sub
mov
or
lods
dec
mov
test
lret
xchg
js
adc
fidivrl
out
dec
mov
mov
shlb
les
and
adc
lds
mov
ss
cmp
mov
jne
imul
ljmp
into
stos
adc
adcb
dec
mov
in
rcrb
jo
movsl
inc
or
push
aaa
add
jne
adc
jnp
in
ficoms
push
test
test
frstor
pop
add
inc
scas
mov
inc
adc
leave
inc
push
pop
aam
pop
adc
add
inc
dec
mov
inc
call
test
pop
adc
enter
adc
push
adc
fs
popa
inc
inc
enter
imul
mov
or
sub
shlb
lcall
bound
adc
xchg
stos
add
or
or
imul
pushf
movsb
sarl
icebp
mov
pop
rol
and
mov
pop
adc
arpl
pop
fcoms
or
mov
mov
sbb
icebp
addr16
nop
inc
aas
xchg
and
mov
enter
or
mov
sub
pop
inc
or
pop
and
sbbb
xorb
pop
push
les
shlb
pop
mov
mov
popa
mov
rcrb
xor
ret
pop
xchg
pop
and
ds
pop
add
jns
mov
sub
not
mov
addb
pop
mov
inc
dec
push
jns
xor
scas
or
cltd
sbb
xchg
xchg
xchg
xchg
cmp
xchg
xchg
xchg
push
pop
inc
lds
inc
pop
cmp
popf
and
pop
mov
pop
mov
push
pop
bound
call
add
jo
inc
cmp
adc
cmp
cmp
jle
mov
lds
xorb
fildll
and
and
test
mov
jae
or
call
and
mov
xor
dec
cmpsl
enter
test
push
mov
mov
movsb
mov
rorb
add
add
mov
in
and
insl
xorl
jno
cmp
test
add
andl
test
or
inc
pop
sub
pop
call
sbb
sbbb
outsl
cmp
nop
fidivs
subl
inc
xchg
cmpsl
subl
ds
dec
mov
pop
sub
inc
xchg
pusha
cmpsl
pop
dec
fldl
loop
mov
fmul
fsubr
daa
xchg
jo
mov
push
call
in
pop
das
pop
xchg
insb
pop
or
pushf
dec
sub
enter
pop
inc
fsubrl
dec
push
fdivrl
pop
lods
lret
call
ljmp
jecxz
out
mov
push
lret
loope
enter
movsb
cmp
push
mov
add
repz
lock
out
leave
inc
enter
mov
inc
inc
add
int3
dec
sbb
mov
cwtl
popa
lods
mov
ret
pop
sbb
and
fwait
popa
pushf
mov
ds
sbb
loopne
je
or
cmp
fs
or
cmp
inc
cmp
js
fwait
popa
sbb
das
nop
loopne
mov
ret
sbb
leave
inc
pop
mov
rclb
sahf
enter
add
or
rclb
sarb
dec
jbe
shr
in
inc
nop
push
xor
adc
daa
lock
roll
pop
enter
pop
push
cltd
loopne
mov
sbbb
or
pop
arpl
mov
or
cltd
or
push
mov
adc
sub
push
cltd
pop
inc
xor
aas
cltd
pop
sub
xchg
mov
inc
sub
xchg
cld
push
dec
mov
mov
xor
mov
adc
popf
fldl
xor
and
mov
xor
push
enter
dec
inc
dec
inc
cltd
inc
ljmp
mov
repnz
fdivr
loope
fmull
cmp
lahf
mov
mov
pcmpgtw
add
and
arpl
mov
leave
lret
fsubrl
mov
test
loop
daa
inc
cmpsl
or
jo
adc
sub
and
mov
mov
outsl
push
ret
add
inc
daa
inc
adc
jns
jp
call
xor
ret
xor
mov
pop
cmp
pop
jnp
mov
in
cmc
stos
fcomi
sti
imul
ret
call
pop
adc
ret
gs
cmpsl
pop
hlt
je
add
sub
pop
push
sbb
subl
sbb
mov
jns
or
add
mov
sbb
sbb
inc
push
mov
inc
or
icebp
inc
mov
or
fld
mov
cmpb
dec
push
sub
pop
jl
mov
cmp
inc
jno
add
mov
in
or
sbb
sti
pop
pushf
xchg
pop
lret
adc
or
push
inc
add
xchg
mov
arpl
mov
outsl
adc
movl
mov
xchg
mov
or
test
xchg
filds
inc
sbb
xchg
add
push
xchg
test
addl
ficoml
dec
insl
bound
inc
xchg
push
fsubs
add
xor
jne
es
jae
mov
mov
pop
adc
adcl
adc
imul
daa
mov
imul
mov
fdivl
sub
fiaddl
test
sub
sahf
xchg
into
xchg
lret
add
aam
cmp
inc
cmp
mov
rcll
sub
sbb
shrl
xchg
sbb
cmp
sbb
cmc
rorb
mov
xchg
add
push
es
push
rclb
mov
sub
mov
movsl
inc
sbb
dec
mov
xchg
inc
mov
xchg
xchg
jg
je
push
push
inc
jge
xchg
movsl
xchg
inc
and
mov
imul
add
fs
mov
push
ljmp
pusha
xchg
mov
fwait
es
aaa
ret
mov
pusha
inc
xchg
movsl
xchg
add
dec
shrd
int3
dec
jmp
call
xchg
mov
shlb
sub
and
icebp
add
pusha
bound
cltd
sub
lret
xor
sbb
inc
in
jnp
in
dec
add
or
mov
adc
jb
fcoml
cmpsl
cmp
pop
adc
mov
in
ds
dec
adc
adc
mov
loope
clc
pop
jmp
add
mov
ljmp
adc
push
xorb
jb
mov
adc
pop
mov
fmulp
pop
insb
push
fprem1
shrb
pushf
loopne
mov
ss
pop
dec
mov
pop
pop
dec
inc
addl
mov
cmp
inc
fst
fdivs
inc
aas
inc
pushf
mov
push
inc
insb
push
and
sbb
inc
mov
adc
dec
sahf
in
mov
loopne
jne
adc
cmp
xor
inc
xchg
call
testb
sbb
aaa
fildl
jo
pop
add
xbegin
outsb
fnsetpm(287
cmp
inc
pop
add
xchg
mov
inc
cmpsb
dec
fistl
cli
xorb
jns
ret
pop
and
inc
fldcw
inc
fisttpl
adc
and
fistl
xchg
orb
pop
dec
or
pop
or
je
loopne
mov
inc
fisttpl
fisttpl
or
sub
pop
sbbb
fidivrl
push
or
fldt
fcmovnu
mov
ficompl
mov
scas
jecxz
jns
adc
cmp
rcrl
fildl
fldt
call
adc
jecxz
mov
pusha
push
sub
shlb
xchg
jle
in
sbb
dec
or
add
adc
pop
rorb
fdivl
filds
aaa
or
mov
loopne
mov
xor
in
iret
sbb
xor
sar
lock
pop
push
loope
xor
inc
sub
repnz
jns
mov
sub
dec
pop
das
das
movaps
sbb
adc
cld
mov
hlt
mov
fdivrl
aam
int3
mov
in
and
mov
test
in
in
mov
cmpl
imul
push
mov
cmpl
and
nop
mov
and
cmp
idivl
nop
sbbl
mov
enter
mov
stos
mov
pop
cmp
jb
cmpl
cmp
inc
push
dec
mov
sbb
and
cs
push
jb
orl
pop
cmp
inc
in
mov
cmpl
mov
push
jb
mov
and
cmp
xchg
mov
nop
sbbl
mov
enter
dec
mov
in
pop
cmp
mov
jb
cmpl
cmp
inc
push
jmp
mov
inc
sbb
mov
xchg
data16
or
sarb
mov
mov
in
mov
or
inc
sbb
imul
adc
data16
adc
sbb
cs
lcall
and
and
xchg
xchg
data16
cmp
les
dec
lcall
movsb
sbb
mov
repnz
pusha
dec
cli
dec
jl
dec
dec
popa
leave
xchg
dec
push
arpl
jo
push
addr16
push
inc
push
adc
inc
mov
test
aam
cwtl
adc
inc
in
xor
adc
push
xor
mov
and
sbb
and
pop
adc
stc
sub
mov
mov
test
push
jmp
sub
mov
jmp
push
lds
pop
push
adc
inc
pop
mov
hlt
imul
push
inc
sti
testl
nop
icebp
mov
pop
scas
mov
inc
sub
roll
add
jg
or
adc
mov
adc
push
test
aam
inc
lcall
pop
mov
xchg
rclb
push
push
sub
dec
bswap
rcrb
stos
leave
and
xor
cmp
packsswb
xchg
shld
push
xchg
push
shl
jmp
cs
bswap
and
les
dec
rdtsc
mov
mov
imul
mov
mov
sarl
push
mov
xor
filds
push
or
bt
sysenter
lret
push
sbb
aad
dec
aaa
cmp
sub
adc
mov
psllq
or
lret
sysexit
test
sbb
addl
sub
mov
xor
push
bound
pop
mov
mov
gs
adc
add
jmp
xchg
adcb
ror
subb
pop
jle
and
sub
dec
int3
dec
pop
mov
inc
or
iret
scas
jmp
inc
fdivl
gs
sbb
push
or
lcall
or
push
lret
aam
push
lret
es
or
xchg
push
inc
subl
sub
inc
adc
sarb
and
gs
sbb
pop
sub
dec
into
mov
xchg
movsl
or
int
xchg
mov
jbe
jo
sub
cmp
push
or
cmp
lcall
mov
pop
jb
dec
or
outsl
mov
sbb
and
fsubl
dec
pop
or
sarb
mov
fsubr
enter
xchg
xchg
cmp
pop
lret
push
call
fldenv
lds
sub
loop
out
hlt
call
jno
sbb
add
pop
dec
pop
or
gs
sbb
mov
xchg
test
xchg
outsb
push
adc
mov
out
popa
lods
or
pop
xchg
adc
adc
mov
adc
xchg
mov
adc
xchg
inc
jae
test
rolb
orb
add
js
push
xchg
aam
or
sub
sbb
dec
pop
sbb
js
cmp
pop
lret
jns
adc
inc
push
or
xchg
or
or
insl
mov
fwait
and
lret
xor
jbe
lret
insl
stos
push
lret
mov
movsl
sub
xor
rorb
je
fildl
je
nop
imul
xchg
mov
sbb
sub
aam
rcrb
movsl
leave
xor
inc
outsl
sub
lret
xchg
or
push
or
adc
lret
xchg
lock
xor
add
sbb
push
sub
inc
test
ds
stos
jg
sbb
sbb
xchg
subl
dec
add
xor
or
rcrb
add
sbb
rorb
and
mov
xchg
or
sub
cmc
or
or
pop
rclb
mov
or
sbb
ja
movsl
sub
fxch
scas
push
sub
mov
aad
and
jb
inc
or
rolb
jno
xchg
or
and
in
mov
sbb
ret
lret
lock
dec
inc
push
xor
dec
add
cmp
push
adcl
call
je
mov
mov
jno
or
sahf
fs
sub
mov
inc
or
mov
pop
in
pop
ljmp
xchg
mov
andb
into
dec
ror
movsl
xchg
dec
or
stos
loop
sub
fiadds
dec
bound
or
push
add
or
jmp
xor
dec
icebp
sub
scas
or
ja
stos
or
ret
sub
adcw
or
jmp
lret
or
loope
les
pop
jb
subb
imul
mov
pop
inc
sub
jg
lret
dec
or
ret
add
dec
sub
pop
xchg
and
xchg
movsl
cmp
fwait
or
and
movsb
xchg
jne
sbb
int
int
faddl
faddl
aaa
or
nop
or
push
adc
add
pushf
sub
mov
mov
pop
das
pop
movsl
sub
das
jmp
or
push
push
cld
scas
mov
ds
lods
in
ds
lret
and
xchg
mov
add
mov
sub
xor
leave
sarb
dec
adcb
inc
idivl
mov
ja
not
dec
push
push
cmpsb
xor
in
into
cli
sahf
arpl
movsl
cmpsb
js
mov
and
fs
cmpsl
cmp
push
cmpsl
push
sub
cmp
repz
jns
iret
faddl
sbb
ss
out
sahf
inc
push
pop
outsb
adcb
mov
sahf
out
out
test
jb
sahf
out
orb
out
clc
push
stos
adc
iret
repz
cmp
jbe
ds
repz
mov
iret
repz
push
sbb
xor
dec
call
insb
addb
mov
sbb
cmpsb
add
push
adc
dec
cmp
add
push
mov
push
lea
es
push
inc
ret
les
pop
sbb
xlat
mov
push
push
mov
jns
out
cmc
add
push
clc
mov
out
xor
iret
dec
push
add
push
jecxz
mov
mov
sahf
dec
or
add
test
adc
fcoml
adc
push
adc
xchg
sbb
call
jl
repz
sbb
mov
stc
sahf
push
pop
sahf
mov
and
and
cmpsl
stc
pop
cmpb
sbb
cmp
out
cld
cmp
test
aam
or
push
xchg
rclb
adc
add
mov
outsl
sub
pop
push
xor
cmp
test
mov
xchg
push
cmp
repz
cmp
adc
jns
out
add
xchg
in
loopne
out
sahf
out
ror
enter
jns
sarb
out
mov
out
sahf
out
mov
sahf
js
jo
push
jns
pop
pop
push
push
out
sahf
out
dec
inc
inc
cmp
out
sahf
cmp
sub
adc
int
jns
add
nop
fmul
repz
repz
push
lcall
jl
out
sahf
pusha
push
dec
inc
xor
cmp
repz
cld
mov
shlb
mov
or
lock
cmpsl
int3
test
push
xor
int3
mov
push
add
lock
mov
stos
fadds
pop
xor
mov
xchg
inc
xchg
xor
mov
in
aas
push
push
aaa
xor
push
push
add
xchg
mov
and
xor
je
dec
outsl
pushw
mov
es
jl
xorl
ss
jbe
and
cmpl
pop
das
sbb
daa
sbb
lret
and
aas
outsl
insl
leave
inc
xchg
dec
lods
cmp
fistpl
push
mov
inc
or
outsl
sarb
test
mov
mov
jg
pop
cmpb
inc
pop
cmpsl
fldcw
shll
jbe
lds
daa
sbb
pop
mov
push
cmp
pop
and
test
popf
arpl
fadd
aaa
inc
pop
rol
dec
jb
dec
xchg
xchg
push
pop
mov
adc
shll
sarb
inc
lahf
cmpsl
fadds
jg
dec
jle
pushf
push
push
aas
sti
push
inc
pop
enter
push
adc
sbb
cmpsl
test
mov
mov
incb
jne
movsb
fisttps
mov
insb
jbe
ret
imul
push
xor
inc
mov
mov
imul
xchg
pushf
rorl
add
mov
ret
insb
pop
xor
cmp
push
insb
daa
cmp
outsb
cs
outsb
lahf
pushf
sbb
ds
outsl
gs
mov
roll
push
sub
je
rcrb
roll
cmpsl
mov
mulb
mov
push
and
sub
xor
pop
outsl
jne
cmp
imull
imul
push
outsl
and
mov
mov
jb
or
or
sub
leave
cmp
leave
or
and
and
outsl
add
mov
aas
fwait
arpl
and
mov
sub
pop
lea
push
mov
add
add
sub
sbb
dec
mov
push
pop
sub
inc
push
mov
pop
sbb
mov
sbb
push
sbbl
or
dec
sbb
xlat
daa
push
mov
lahf
xor
xchg
xor
pop
lods
add
repz
sub
bound
or
pop
daa
or
push
cmp
dec
sbb
or
and
sbb
lahf
sbb
push
sbb
add
addr16
mov
imul
imul
mov
add
pop
mov
shll
mov
xor
add
ja
add
pushf
xor
test
push
addr16
bound
cmpb
js
add
movsb
xchg
sahf
out
sahf
jle
pushf
cwtl
xchg
nop
mov
out
test
pop
iret
repz
push
pop
dec
inc
inc
cmp
cmp
repz
xor
and
cmp
repz
adc
fmulp
out
xchg
hlt
xchg
in
push
in
fmul
repz
ror
mov
into
repz
mov
ja
outsl
je
insb
push
fs
cmp
jns
push
dec
mov
push
and
iret
repz
testl
enter
iret
repz
test
cwtl
nop
out
iret
xrelease
out
in
sahf
pop
inc
cmp
push
adc
cmpsl
stc
cmp
lock
loopne
mov
mov
xchg
insb
pop
lods
mov
outsl
and
pop
pop
inc
xor
add
cs
cwtl
inc
xor
test
neg
mov
stos
push
sbb
sub
pop
jo
bnd
lret
add
sbb
push
pop
cs
clc
ss
test
add
dec
mov
cld
pop
enter
dec
jnp
cmpsl
outsb
stos
lcall
xchg
cs
push
and
dec
pop
fdivrs
fbld
lret
js
xchg
mov
mov
incl
rolb
popa
or
and
jno
sbb
xor
push
fwait
push
fidivl
fisttps
mov
cmpsb
dec
es
fistpll
fwait
xor
adc
pop
ss
nop
ss
sub
aad
dec
ss
outsl
decl
xorl
aaa
adc
sbb
add
cmp
fstpt
push
cmp
xchg
aad
stos
fwait
les
mov
cmp
cmp
mov
adc
cmp
cmp
add
adc
xor
cmp
cmp
ret
mov
mov
ds
ds
faddl
ljmp
ds
ds
ds
aas
pop
aas
and
sub
xor
aaa
into
decl
push
data16
jbe
jnp
cmpl
movsb
aas
mov
rcrl
pushf
inc
aas
div
dec
add
aas
clc
dec
xor
cmpsb
mov
xor
stos
pusha
adc
cmpsb
sub
xor
xor
sbb
xor
mov
mov
xor
xor
into
das
xor
cmp
mov
mov
jno
xor
inc
shl
cmp
inc
fmuls
xor
xor
fisttps
cmp
mov
pushf
xor
xor
xor
xor
xor
xor
xor
decl
popa
cld
xor
dec
mov
ss
mov
xorb
mov
pushl
sbb
xchg
mov
mov
sub
das
cmp
add
pop
cmp
ljmp
xchg
sub
xor
xor
cmp
clc
sbb
cmp
cmp
and
pop
push
pop
cmp
outsl
cmp
je
shlb
pop
xor
out
pop
mov
cli
outsb
cmp
aaa
mov
cmp
cmp
cmp
adc
push
outsb
mov
cmp
cmp
cmp
cmp
iret
cmp
mov
cmp
push
ds
ds
cmp
xor
cs
cld
decl
xchg
xor
xor
xor
xor
xor
mov
xor
xor
xor
xor
aaa
leave
clc
dec
xor
xor
inc
lds
xor
xor
outsb
ud0
pushl
loopne
repnz
dec
ss
bound
xorl
ss
xor
ret
or
ss
jl
adc
ss
aaa
or
push
push
sar
push
xor
aaa
stos
mov
or
dec
adc
scas
xor
push
cmp
push
sbb
fnsave
ds
pop
cmpsb
test
mov
outsb
xchg
dec
sarl
fcoms
icebp
das
mov
repz
cmp
cmp
cmp
mov
cmp
cmp
pop
push
pusha
cld
pop
or
jno
jns
jle
xchg
mov
xchg
fmull
cmp
cmp
lcall
stos
pusha
push
add
insb
cmp
cmp
cmp
or
cmp
cmp
push
push
xor
xor
insl
adc
adc
dec
aas
outsb
inc
cmpl
aas
ret
aas
iret
js
dec
and
fdivrl
xor
mov
sbb
into
xor
jg
jp
xor
xor
xor
xor
xor
xor
jo
lcall
mov
xor
xor
pop
or
mov
xor
insb
and
xor
fcomip
xor
or
adc
push
ss
test
ss
add
ss
ss
xor
adc
jne
jle
or
pop
add
jecxz
cmp
mov
cmp
sbb
cmp
cmp
cmp
test
pushl
or
cmp
cmp
out
xchg
icebp
cmp
arpl
outsb
ret
fnstsw
adcb
fildll
sar
stos
ds
or
cmp
aas
fcmovnb
sub
add
push
cmpsl
cs
fbstp
divb
data16
mov
call
xor
xor
xor
xor
xor
movsb
xor
sbb
xor
xor
xor
xor
xor
xor
xor
xor
ljmp
xlat
xor
ja
mov
pushf
ss
mov
sub
adc
and
push
xor
aaa
jb
jmp
sbb
int
inc
cmp
push
cmp
cli
push
divb
cmp
inc
ds
ds
ja
clc
imul
mov
lret
aas
lods
aas
push
jl
sbb
mov
popa
jl
xorl
mov
cli
cmp
jo
cmp
dec
cmp
pop
cmp
ljmp
out
xchg
outsl
cmp
xor
xor
xor
xor
or
push
imulb
or
loopne
aaa
pop
dec
es
xor
das
test
jp
add
arpl
fldcw
sub
pop
pusha
out
xor
xor
or
aaa
jge
push
je
js
mov
mov
daa
mov
popa
jle
xor
mov
jl
call
bound
lods
push
mov
dec
int3
inc
fdivrl
xor
cmp
xor
xchg
pop
ret
sub
xor
sbb
jb
out
bound
inc
mov
inc
xor
add
mov
xchg
xor
jecxz
pop
jo
or
or
adc
adc
sbb
sbb
cmp
pop
jbe
xor
mov
push
xchg
inc
xor
push
xchg
pop
xor
xor
xor
ret
je
jl
test
mov
mov
xor
sbb
sbb
sbb
fwait
ror
xor
dec
cmp
xor
xchg
je
ret
xor
nop
xlat
push
or
xor
jp
jmp
push
xor
outsb
jo
mov
loope
bound
sarb
cmp
pop
pop
lar
mov
push
or
pop
pop
daa
cwtl
out
rolb
decl
adc
sbb
sub
push
push
xor
xor
xor
xor
xor
ss
cmpsl
outsl
stos
mov
shlb
push
xor
or
xor
les
xchg
sbb
push
mov
push
jb
xor
incl
lcall
pop
fsubrl
in
call
xor
xor
inc
add
inc
xor
loop
adc
add
iret
sbb
xor
aam
xor
xor
xor
jo
shll
jp
xor
mov
clc
jg
jo
je
js
jl
andb
clc
decl
scas
pushf
xor
xor
xor
xor
xor
xor
xor
into
shlb
add
int3
fimull
movb
add
mov
cs
jp
sub
jecxz
je
pop
clc
or
cmp
mov
aam
inc
add
fdivr
mov
mov
inc
cmp
call
cwtl
fcomi
fcoml
add
jg
add
or
pop
pop
push
or
or
or
or
or
adc
int
dec
outsl
adc
push
adc
les
or
outsb
xlat
decb
pop
sbb
adc
adc
adc
add
data16
ret
jbe
adc
pop
adc
inc
add
pusha
add
ficoms
inc
add
or
mov
dec
nop
adc
pusha
dec
testl
fbld
inc
push
adc
pop
and
xor
inc
mov
adc
xor
xchg
and
jb
js
xchg
and
or
pop
sub
cmpsl
nop
push
or
xchg
dec
xorb
sub
xchg
and
popa
jns
and
xor
xchg
push
scas
pushf
out
and
scas
adc
add
pop
scas
cmp
adc
out
rolb
adc
pop
popa
jno
and
adc
das
push
or
xor
adc
loope
add
mov
inc
xor
pusha
and
scas
fiaddl
or
js
mov
std
or
incl
lds
cld
cli
and
mov
inc
jnp
test
jge
lcall
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
cli
pop
mov
int
out
stc
or
xchg
jg
or
insb
sub
push
addr16
out
or
push
push
xchg
add
repnz
inc
lock
scas
jle
pushl
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
mov
add
mov
pop
pop
mov
popl
movb
xchg
sbb
call
adc
mov
xor
lods
scas
xchg
test
aam
and
sbb
sar
mov
and
roll
fwait
movsb
jmp
push
lret
push
out
in
and
ss
in
fcomi
ret
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
decl
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
push
out
idivb
aam
fadd
push
lcall
lea
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
mov
jmp
sbb
add
dec
out
pop
jb
mov
or
push
mov
sub
xor
mov
jl
rorl
adc
fcmovnu
decb
hlt
push
add
stc
loope
mov
sar
andl
aas
pop
push
mov
icebp
testb
mov
scas
fadds
in
sub
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
cmp
push
clc
jb
adc
push
lock
lods
jp
testb
inc
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
andl
mov
aas
loopne
cli
adc
aaa
xchg
in
add
inc
adc
loope
fisubs
icebp
aas
std
cli
push
push
push
idivl
ljmp
inc
cmp
sub
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
or
ljmp
cmp
sti
punpckhbw
cmpsb
orb
mov
xor
jmp
xchg
fistl
negb
pop
hlt
lret
movsb
add
lea
pop
jmp
jg
gs
std
xorb
jg
aad
adc
incl
das
pop
pop
pop
shlb
out
sarb
sbbl
jno
ljmp
sarb
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
decl
adc
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
lcall
adc
cld
call
js
cmp
ljmp
dec
shrl
push
mov
push
movsb
xchg
or
mov
stos
dec
lods
xor
sbb
ds
cmpsl
scas
popa
in
pop
or
mov
call
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
xor
stos
adc
dec
adc
pusha
imul
add
mov
cmp
xchg
mov
stos
pop
es
sub
loop
pop
xchg
ftst
jbe
xchg
and
add
jae
shrb
mov
and
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
lock
dec
adc
pop
cld
addl
adc
and
mov
or
fmull
enter
jecxz
scas
sub
clc
jg
jg
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
pop
jg
mov
pop
iret
mov
jg
mov
aad
test
lds
inc
mov
mov
iret
push
pop
cmp
jg
push
push
sbb
stos
icebp
pop
incb
jno
adc
push
ljmp
jl
jecxz
sbb
sarl
adc
loopne
cmp
icebp
cs
clc
xorl
and
push
in
inc
imul
dec
push
in
fildl
fsubrl
lock
and
pop
pusha
inc
sbbb
mov
add
mov
repnz
and
mov
adc
clc
or
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
jno
pop
nop
jmp
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
aas
cld
js
aas
divb
iret
dec
xor
fsubr
fistps
lds
fidivrl
jg
mov
add
dec
mov
sub
fstpl
xor
lahf
les
sbb
sbb
cld
addl
jmp
shr
stc
mov
lahf
outsl
int3
push
sbb
rcrl
pop
test
bound
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
or
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
insb
add
add
daa
out
lcall
shl
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
jg
adc
lcall
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
cmp
cld
adc
inc
lds
push
pop
adc
imul
decl
or
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
jg
jg
lock
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
and
xor
pop
incb
fidivrs
clc
insb
test
mov
jo
aas
repz
sbb
lock
in
jmp
sbb
sbb
aaa
clc
push
std
mov
rcll
or
mov
xchg
jg
aad
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
dec
jg
mov
inc
out
pop
or
or
dec
ss
xchg
mov
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
outsl
das
or
lret
pop
in
cmp
or
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
adc
aas
mov
cmpb
lods
jg
mov
sub
addr16
sbb
cld
daa
adc
std
jp
std
adc
cltd
or
mov
ret
nop
dec
cld
stos
jle
icebp
das
incb
lock
pop
pop
div
cld
idivl
addl
scas
stc
lahf
loope
andb
shrl
je
push
xor
mov
add
fs
call
out
icebp
mov
loope
mov
cmpsl
popf
sbb
mov
mov
fbstp
push
daa
outsl
das
int
pop
mov
add
cmpsb
cmp
call
popf
js
data16
decb
adc
mov
add
mov
or
or
and
js
int
enter
add
push
pop
aaa
std
fildll
xchg
inc
sbb
xchg
hlt
andb
mov
aas
icebp
ret
ror
sbb
xor
or
aaa
inc
adc
lds
adc
aas
pop
clc
loope
notb
mov
lahf
jp
dec
add
xlat
in
cmp
xchg
sbb
or
iret
fdivrl
xchg
lcall
decb
js
pop
gs
into
sarl
pop
out
jg
jno
xor
loop
ret
cmp
shll
sbb
inc
aas
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
in
outsl
test
ljmp
into
daa
jmp
faddl
mov
add
jae
jg
push
pop
pop
add
pop
and
std
stc
push
dec
out
fstpt
mov
enter
lahf
xchg
pop
add
fsts
dec
add
jae
sbb
push
sti
pop
inc
add
or
fimull
bsf
popf
test
ljmp
iret
and
add
pop
lcall
or
in
imul
add
sbb
int3
mov
sbb
sbb
add
call
inc
mov
push
adc
es
into
push
ds
xor
jg
incl
push
push
jb
pop
mov
lahf
ret
stos
adc
scas
add
sbbl
scas
popa
or
fdivs
lods
xchg
add
jno
add
test
jp
dec
mov
stc
sub
lock
loopne
aam
sbb
xor
or
push
mov
cmp
ljmp
mov
mov
add
ret
lret
and
decb
jno
imulb
cli
push
xchg
movsl
mov
aad
fcmove
nop
push
imul
cmc
js
fdivs
jb
shll
mov
or
addb
fsubrp
adc
out
sub
inc
adc
call
jns
pop
inc
xchg
mov
or
pop
incb
repnz
cmp
inc
divl
arpl
fnstcw
cwtl
lea
in
or
inc
loope
popa
cmp
pop
lock
call
sbb
movsl
mov
testl
out
jmp
jb
lret
aad
sub
sub
in
xchg
xchg
jnp
push
ret
aas
push
outsb
stos
cltd
stc
call
lcall
loopne
mov
mov
aad
js
loope
jg
scas
mov
add
xor
ljmp
jl
decl
scas
icebp
test
ss
outsl
clc
pushl
stos
lods
lahf
pop
negl
pop
sbb
sub
mov
sahf
adc
mov
mov
ss
popf
cld
rcrb
push
pop
lret
fimull
js
jmp
call
je
mov
cmp
jno
out
dec
push
hlt
outsb
aaa
scas
dec
sbb
repnz
lcall
jg
fstl
cmp
cli
sbb
inc
mov
mov
cmp
stos
fs
subb
sub
cmp
into
ljmp
outsl
xchg
add
adcb
mov
ja
mov
mov
and
pop
aaa
test
sub
jmp
mov
aas
bnd
in
add
mov
pop
cmp
dec
push
or
js
inc
inc
mov
icebp
arpl
arpl
push
push
mov
sti
sbb
xchg
jno
dec
push
fs
out
or
push
test
cld
jbe
mov
in
xchg
std
int
xchg
xor
hlt
pop
mov
mov
imul
ljmp
ja
jo
sbb
arpl
test
mov
out
jecxz
mov
mov
pushl
int3
jge
vxorps
or
jg
pop
test
enter
mov
push
or
insb
out
dec
cmpsb
push
push
adc
adc
clc
jmp
out
decb
push
test
jo
imul
ret
mov
jb
das
aas
call
mov
adc
daa
out
dec
movsl
jns
mov
mov
dec
sub
repz
sbb
pushl
daa
xor
xchg
cmc
loopne
jg
iret
sbb
scas
mov
lock
dec
dec
or
and
jmp
add
mov
inc
ljmp
je
rclb
std
mov
sub
into
inc
lds
jg
or
push
push
or
and
mov
rorb
movsl
jne
adc
call
push
call
test
inc
sbb
loopne
orb
hlt
cmp
and
sbb
pop
xor
stos
sti
mov
xor
or
je
mov
mov
call
cmp
repnz
lods
jbe
into
mov
pushl
sbb
outsl
idivl
ret
lods
or
sahf
or
sub
inc
daa
popa
mov
xor
xchg
inc
into
mov
pop
shr
add
mov
jecxz
add
push
ds
mov
and
outsb
cwtl
jmp
bound
and
scas
dec
sbb
cld
mov
dec
mov
add
xchg
in
iret
mov
movsb
cld
sub
lcall
sbb
push
mov
pop
ret
dec
stos
dec
lea
lret
mov
ret
cwtl
outsb
dec
dec
push
mov
lcall
jmp
sbb
int
xchg
clc
mov
jmp
nop
leave
outsl
dec
pop
das
in
out
inc
jmp
add
adc
aad
enter
push
out
lret
ret
or
mov
push
or
cmp
insb
mov
in
mov
ljmp
fbstp
in
call
loopne
pop
pop
call
pop
cmp
imul
in
jmp
xor
nop
ljmp
loope
call
and
pop
cmpsb
xchg
xlat
adc
enter
fcomip
insb
cmp
dec
test
aam
gs
jecxz
mov
or
and
mov
push
pop
inc
stos
outsl
int
add
dec
jb
mov
bound
or
dec
mov
dec
cwtl
xchg
adc
mov
mov
sub
jo
and
jge
inc
push
mov
pop
push
bound
imul
fcmovne
sahf
push
imul
or
jp
cmp
in
ss
int
mov
daa
push
lcall
in
cmp
sahf
addb
xchg
scas
mov
jbe
out
pop
mov
mov
loopne
or
pop
std
jmp
pop
adc
mov
imul
cmp
xor
xchg
jns
fs
incl
xor
pusha
mov
mov
sub
aam
ror
mov
lcall
call
mov
cwtl
inc
mov
and
xor
aas
or
and
mov
xor
rorb
pop
repnz
mov
dec
testb
sbb
das
shrb
enter
ss
xchg
xchg
aam
sbb
lds
incl
fimull
sub
or
idiv
sub
inc
or
lret
out
andl
sbb
es
lcall
xchg
dec
cmpsl
inc
lods
mov
push
xchg
cmp
mov
jae
cmc
pop
std
decl
out
out
push
sbb
outsl
cmp
cmp
jmp
daa
inc
imul
fs
fs
cli
jno
jnp
lds
out
hlt
sub
pop
cmc
mov
fcmovnb
lea
inc
dec
out
sub
movl
dec
inc
aam
mov
xchg
lcall
adc
in
mov
and
aad
fstpl
jnp
call
mov
sti
imul
push
rolb
lock
push
mov
cld
divb
pushl
mov
push
mov
rclb
xor
mov
sahf
cwtl
push
add
call
mov
lret
enter
add
sub
loop
fsubrl
adc
decl
lock
adc
mov
jge
inc
xchg
fidivrl
imul
jp
lods
cmp
mov
inc
dec
mov
xor
insb
cmpsl
inc
mov
sahf
cmp
mov
xor
in
push
in
lds
movsl
sub
test
loopne
xchg
aad
jae
cld
mov
ret
cwtl
dec
sbb
ja
lret
cmc
test
jg
xchg
pop
inc
pushl
inc
fidivl
jp
xchg
aad
int3
pop
adc
dec
shrl
cld
jmp
xchg
cli
cs
stos
jnp
inc
nop
idiv
mov
jo
fucomi
imul
addb
subb
pop
test
es
cmp
sbb
mov
lret
cld
inc
sub
jnp
dec
cmp
jb
fsts
decl
mov
cmp
cmp
inc
lahf
call
test
test
call
aam
push
js
mov
and
jae
sbb
mov
cmp
cmp
jmp
in
inc
sub
aad
xor
popf
scas
addr16
mov
jno
mov
and
std
push
inc
mov
mov
fs
sbb
push
rorl
aaa
jno
inc
inc
imul
and
lcall
push
stc
cmpsb
ljmp
addr16
andb
or
mov
pop
divb
mov
outsl
clc
lcall
stc
push
int3
push
test
mov
pusha
addr16
jnp
aas
xchg
jb
dec
fisttpll
outsl
pop
adc
add
pop
sti
sub
out
cs
test
mov
test
inc
pop
push
dec
mov
icebp
xchg
test
adc
jnp
pminub
shll
jne
test
dec
fcomip
decl
mov
addl
or
iret
int
decl
sarl
push
sub
push
das
imull
rol
sub
mov
mov
sbb
movsb
mov
cmp
xlat
jb
lahf
inc
fwait
pop
je
jnp
nop
push
aam
mov
pop
xchg
mov
cmp
xadd
mov
shrl
cmpsb
clc
lret
adc
fmull
pop
ja
mov
scas
iret
cmp
pop
les
je
call
fbld
xor
insb
add
jne
clc
cmp
mov
adc
aaa
std
pop
and
mov
sub
jmp
jno
sets
mov
hlt
in
lods
ret
clc
das
clc
mov
and
cld
xchg
cmpsb
push
call
pushf
ljmp
popa
dec
jmp
sbb
xor
movsb
mov
arpl
mov
push
call
and
dec
and
xor
push
sbb
xchg
xchg
ss
roll
gs
sar
pushl
jmp
incl
sbb
sub
sub
dec
xchg
addr16
icebp
push
ljmp
cmp
decl
dec
cs
pop
pop
mov
clc
in
or
cmc
mov
inc
cmpsb
jns
and
loop
push
push
jle
loope
xlat
pop
stos
ljmp
cmpsb
sub
cs
shlb
mov
mov
incl
pop
cmp
pop
fs
data16
jno
insb
and
add
es
fnsave
adc
ret
jnp
outsb
mov
data16
adc
shlb
sbb
push
mov
ret
jp
mov
pusha
push
mov
ljmp
adc
out
adc
lcall
inc
loop
in
sbb
push
fdivrs
clc
dec
mov
add
jmp
mov
out
dec
in
sbb
pop
mov
dec
loopne
imul
dec
jl
adc
inc
push
fistps
ja
fsubs
ds
ljmp
jle
es
incl
pop
or
jg
fwait
out
lret
adc
xorb
cmpsl
mov
dec
jae
jle
cs
out
cli
lcall
imul
cs
and
ss
jne
or
mov
call
aad
shll
inc
seta
jecxz
jle
jmp
dec
or
sub
cmpsb
inc
or
fisttpl
inc
sbb
pop
into
mov
movsl
scas
mov
or
ret
mov
les
jne
lcall
pop
pop
cs
inc
hlt
add
insb
inc
mov
jbe
push
sti
or
lds
das
incl
push
imul
nop
adc
ffreep
mov
es
stc
hlt
adc
movsb
stos
sub
std
or
insl
or
adc
mov
pop
dec
outsl
lods
mov
xchg
test
dec
xor
cs
scas
jb
rorb
jnp
pop
loopne
fiaddl
daa
popa
mov
or
mov
sbb
mov
cli
jp
jmp
fs
faddl
ret
mov
rcl
cmp
mov
roll
pusha
cmp
lcall
scas
xchg
int3
sub
or
push
push
jg
jp
jmp
xor
cltd
xchg
push
jp
cld
negb
loopne
or
add
call
mov
dec
out
jg
mov
loopne
sbb
loop
rcl
xor
add
pushl
or
movsb
or
pop
push
sbb
in
mov
push
sahf
jg
sbb
jb
push
jmp
shrl
sub
ret
adc
sbb
shrl
popa
jmp
stos
cld
cmp
popl
mov
xchg
mov
out
xchg
sbb
mov
push
pop
enter
push
push
mov
and
pop
test
scas
loopne
inc
rcrl
repnz
adc
aas
jnp
mov
filds
out
and
int
ljmp
cld
mov
std
sahf
retw
add
std
jmpw
sti
dec
mov
fsubrs
mov
mov
inc
push
in
cmp
xchg
sbb
dec
jp
sub
ds
mov
jmp
fs
xor
aam
das
jne
xchg
icebp
mov
pushl
ja
xchg
loope
outsb
es
mov
scas
or
push
push
int
cmc
out
mov
addb
and
cmp
jae
fchs
icebp
ret
mov
es
addr16
lea
outsl
pop
jge
aas
stos
cmp
adc
repz
jmp
fldt
cmp
or
mov
nop
cmp
push
sbb
mov
aas
adc
cltd
ret
inc
jle
push
inc
adc
call
fimull
push
test
or
jne
pop
adc
pop
subb
xor
jbe
push
mov
mov
dec
rolb
jp
mov
sub
cmc
insl
jns
gs
push
insl
aas
inc
in
call
mov
mov
dec
mov
pop
lea
scas
and
pop
adc
jmp
nop
add
mov
xor
stc
outsb
ret
mov
inc
mov
jmp
and
shrb
mul
xor
lahf
scas
lock
hlt
dec
test
testb
mov
jp
cmp
inc
inc
mov
aas
mov
mov
inc
add
sar
mov
and
jo
shrb
andl
mov
jg
push
xchg
fs
sti
pop
adc
push
popf
jns
test
sbb
movsb
cwtl
inc
mov
sbb
jg
cld
aaa
repnz
or
cmp
and
lods
cs
pop
and
decl
ss
fldl
cld
mov
sahf
push
lods
idivl
pop
jg
cmp
inc
rcrb
decl
cmpsb
adc
dec
inc
mov
ds
sbb
jg
mov
mov
sub
push
jns
mov
or
cmp
fwait
scas
out
test
jecxz
cmc
outsb
mov
fldcw
dec
mov
cltd
incl
addr16
xchg
test
xchg
ljmp
call
cltd
cmpb
repnz
add
and
rolb
aas
iret
mov
decl
cltd
stos
imull
sbb
jns
xchg
cmovae
ljmp
and
pushf
cmp
dec
mov
mov
lret
cmpsb
xor
mov
push
mov
push
cwtl
sub
and
jge
enter
rcl
mov
fnstcw
push
popf
dec
jmp
fs
lock
mov
arpl
insl
xchg
out
fs
xor
out
je
scas
js
push
dec
fwait
inc
shrl
lret
or
pop
jecxz
xor
jle
xlat
pushl
idiv
pop
in
lods
lods
xchg
out
sub
mov
push
mov
cmp
mov
adc
jl
inc
testb
jge
dec
xlat
inc
mov
daa
mov
in
pop
icebp
decl
or
and
dec
mov
xor
mov
decl
sub
inc
jb
sbb
cmpb
insl
push
mov
mov
pusha
bound
incl
adc
loope
fisttpll
test
xor
mov
movsb
or
adc
out
insb
jle
inc
sbb
into
cli
sub
repz
and
rolb
nop
in
sub
pushl
out
adc
in
ret
jg
out
xchg
call
les
sbb
dec
jnp
or
fimuls
pop
std
lock
cmc
inc
xchg
xor
stos
jno
aaa
test
repnz
xchg
mov
loopne
jmp
push
sbb
adcb
in
ffreep
int3
call
lahf
sbb
ret
sub
xchg
loop
iret
add
xor
cmp
pop
jle
in
push
dec
test
rcll
dec
cmp
jns
dec
jl
and
loop
mov
loopne
lcall
pop
adc
add
mov
stos
inc
rcl
pop
mov
cmp
jmp
sarl
outsb
inc
sub
je
nop
test
pushl
sub
sti
fwait
xlat
inc
test
notl
add
mov
btsl
or
incl
iret
sahf
push
xor
mov
mov
xor
xchg
ljmp
mov
sub
lahf
scas
push
mov
daa
push
stos
xor
test
lock
call
mov
xchg
cmpsl
stc
ss
enter
inc
cmpsb
fs
stos
pcmpeqw
push
push
ja
jg
jno
jl
or
call
fcmovb
cmp
stc
cmp
insb
adc
pushl
fst
lock
icebp
cs
loope
mov
scas
mov
iret
repz
fstpl
xchg
sub
jg
ljmp
aas
push
xor
pop
rcrb
jbe
push
insl
in
adc
jns
xor
pushl
add
popa
cli
enter
mov
enter
arpl
cmp
stc
inc
push
divl
aas
cmpsl
es
popa
cmp
cmpsl
clc
cli
cmp
pop
out
loopne
pop
push
push
outsb
in
mov
jl
stc
std
xlat
test
mov
and
cmc
scas
std
insb
lea
in
adc
lods
lods
mov
int
mov
pop
pushf
stos
andb
mov
addr16
inc
pop
pop
or
sub
jg
jmp
fadds
js
mov
jne
adc
dec
xchg
je
cmc
test
testb
dec
pop
loope
mov
data16
call
push
jl
jb
push
dec
stos
lea
decl
inc
sbb
cmp
arpl
jl
pushl
push
push
incl
cmp
lea
add
insl
cmp
jg
sti
ret
jne
aad
xor
pushl
push
aas
jae
pop
repz
sub
xor
insl
adc
push
dec
inc
ljmp
mov
test
ret
jg
cli
shrb
adc
jnp
in
rorl
ficompl
jecxz,pn
dec
jp
pop
imul
idiv
cli
das
ret
addr16
repnz
adcb
mov
stos
sub
inc
stos
shr
push
mov
lods
mov
xor
call
out
shlb
dec
mov
mov
loop
xchg
and
fdiv
outsl
jmp
movsl
div
lea
sub
in
or
cwtl
pop
bound
and
mov
testb
sbb
jg
push
push
dec
inc
mov
xor
sar
decl
outsb
sahf
jae
sub
inc
and
cmp
repz
fidivrs
or
negb
in
mov
lcall
xor
imul
xchg
mov
leave
jo
ds
pop
jl
xchg
cmp
cmc
enter
push
ret
inc
xchg
test
lods
lods
dec
lods
jae
xchg
adc
leave
push
pop
ljmp
hlt
negl
scas
imul
ret
cs
dec
xor
mov
xor
int3
lahf
aaa
cld
jmp
dec
mov
sub
adc
aam
lea
ret
adc
push
sub
orl
lods
loopne
aad
push
push
mov
loope
pop
xchg
adc
jmp
aam
xchg
lea
add
cltd
fs
loopne
inc
push
scas
lcall
cld
push
jne
pop
sub
popf
loop
adc
cmpsl
push
lcall
das
push
cmp
lods
in
mov
xchg
xchg
out
adc
mov
xchg
divl
jle
mulb
fdivr
cmpb
mov
jmp
inc
call
std
cmpl
enter
addl
fldlg2
push
or
adc
pop
jno
dec
pop
or
pop
loope
inc
jp
dec
fnstsw
aaa
jmp
pusha
leave
aad
incl
cmp
or
xorb
inc
loope
xor
sbb
adc
dec
psubq
mov
incl
cld
sbb
or
insl
hlt
dec
scas
dec
sub
mov
outsl
pop
inc
dec
ljmp
in
pusha
jp
and
inc
jbe
insb
mov
xchg
sahf
jp
pop
lcall
test
pop
xchg
jge
mov
mov
das
lds
mov
loope
cli
sbb
sti
jno
cmp
decl
inc
lahf
add
imul
add
mov
mov
rolb
cmp
dec
lcall
add
add
outsb
mov
xchg
jno
dec
jmp
fs
incl
mov
lret
push
test
sbb
addr16
push
push
in
dec
pop
mov
xchg
jb
mov
jmp
xlat
cmp
loopne
jmp
or
pop
jg
push
das
pop
mov
sbb
pop
xor
sub
adc
cs
clc
fwait
imul
daa
xchg
ljmp
adc
jecxz
and
jo
jmp
cwtl
call
cmp
bt
mov
scas
jb
push
pop
cltd
pop
hlt
sbb
subb
cmpsl
inc
pop
dec
ljmp
pushl
mov
lds
loop
push
mov
test
adcb
push
mov
pushl
or
jne
cmpsl
push
cld
adc
stos
xor
ret
cmp
ljmp
cmp
push
xor
push
inc
mov
dec
cmp
mov
push
shrl
dec
cmp
jmp
push
rcrl
rcll
push
jbe
sbb
sub
xor
daa
and
imul
inc
xchg
sarb
decl
aam
dec
das
pop
les
out
xor
push
mov
mov
adc
jmp
mov
xchg
add
push
outsl
push
sbb
repz
sbb
jg
mov
inc
mov
popf
push
sbb
loope
js,pn
push
dec
scas
bound
mov
pop
jo
daa
mov
sbb
cmc
lods
push
sub
outsl
cli
inc
lret
lret
mov
imul
ljmp
mov
xlat
push
stos
outsl
movsb
jbe
sti
cmp
ss
mov
jne
sub
cmpsb
test
inc
rorb
lahf
jg
lcall
movsl
push
in
test
cld
ja
lea
jecxz
hlt
loopne
call
rclb
add
cmpsl
nop
in
cmp
pop
outsl
fsubrp
fisttps
cld
inc
mov
inc
stos
ljmp
ljmp
cmp
adc
add
mov
cltd
inc
pop
and
lcall
shll
popa
push
out
xorb
ss
nop
mov
add
jae
pushl
and
ret
sbb
or
sbb
push
push
daa
es
mov
lods
sbb
and
hlt
cmp
jb
xorl
or
add
xchg
jp
ljmp
into
jb
xchg
rcll
or
scas
xchg
mov
fsubs
call
ret
stc
xchg
cmc
mov
sub
and
dec
lcall
ljmp
push
xchg
or
call
shll
cmp
test
sub
mov
mov
lods
ficompl
je
int
stos
jg
sub
push
lcall
out
je
add
decl
push
or
and
push
mov
incl
rcr
out
ljmp
xor
or
dec
push
fimuls
jg
out
pop
pop
lods
pop
ljmp
mov
mov
out
popf
fiaddl
xor
sbb
xchg
xor
ja
inc
jg
inc
push
jo
pushl
nop
jno
jge
xor
push
xchg
mov
rcr
test
cmpsb
daa
mov
outsb
shll
cld
rclb
lcall
mov
push
xchg
inc
int
dec
mov
fbstp
frstor
loope
sahf
inc
hlt
cltd
cmp
pop
out
push
in
dec
add
xlat
fsubs
jecxz
pop
ss
daa
leave
push
cltd
and
pop
sub
jecxz
adc
in
gs
pushl
push
jl
push
adc
or
sub
out
sti
dec
add
lods
or
push
jno
cmp
inc
add
lcall
andl
sbbb
sbb
push
pop
lds
xchg
daa
lods
jmp
jecxz
stos
mov
xchg
push
push
gs
stos
ret
aam
mov
out
fisubl
enter
jne
mov
lcall
or
mov
sub
test
aas
int
push
mov
sub
incb
adc
xchg
dec
adc
stos
cmp
insl
in
outsb
loopne
push
stc
sub
jg
push
mov
sti
adc
and
test
dec
cli
je
scas
xchg
fcomps
es
adc
sti
test
clc
or
jmp
std
ljmp
nop
outsb
call
rorl
dec
xchg
fisubrs
jg
lds
or
inc
loopne
mov
mov
sarb
lds
stos
arpl
push
nop
int
jmp
jno
jbe
incl
out
insb
popf
pop
clc
loop
fstpt
inc
cli
in
cmp
and
or
push
pushl
insb
or
mov
repz
imul
lcall
pushl
or
repnz
push
mul
fdivl
test
cltd
cs
push
int
mov
ljmp
mov
xchg
jecxz
inc
fucomip
xor
cmpsb
mov
pop
adc
jne
out
pusha
sbb
sbb
js
add
out
data16
pop
lcall
dec
and
incl
cld
mov
movsb
mov
and
xor
faddp
in
pop
pop
pop
xor
push
jg
sbb
push
xchg
sahf
je
pop
sbb
repz
sti
std
dec
jmp
repnz
dec
and
lret
jo
fists
int3
or
jg
mov
xor
es
add
aad
ss
cmpsl
mov
call
mov
mov
mov
jmp
cli
push
jg
or
mov
das
add
lds
daa
or
add
xor
jb
mov
in
dec
xchg
adc
inc
xor
movsl
xorb
ljmp
std
clc
inc
addl
loop
imul
push
int
mov
mov
jle
sarb
sahf
lahf
xor
add
xor
jnp
mov
pushl
dec
out
pop
jno
rol
shrb
and
push
fs
mov
lret
xchg
insl
fs
aas
clc
scas
rcll
scas
clc
loop
enter
jmp
inc
mov
mov
cld
sahf
xchg
and
push
lcall
pop
call
and
xchg
outsb
sbb
dec
xchg
aad
stos
dec
mov
push
ret
push
mov
inc
sub
mov
cmp
icebp
ljmp
mov
es
mov
xor
pop
outsb
lahf
cli
and
adc
lds
mov
jbe
fwait
test
js
sub
cmp
sbbb
sbb
sub
popf
iret
stc
or
push
pushl
mov
insl
ret
loop
mov
lods
cmp
mov
jmp
dec
pusha
rcrb
add
loopne
sbb
pop
clc
xor
lahf
out
testb
ljmp
jnp
cmpsl
into
ret
xor
bound
add
in
mov
mov
decl
mov
mov
cmp
jae
shr
pushf
lods
out
popf
jg
pop
mov
sub
jle
mov
fstpt
test
ds
lahf
sub
je
orb
insb
and
jae
push
gs
aam
aas
adc
ja
and
jmp
lcall
mov
jmp
fsubrs
mov
in
xchg
mov
xor
jl
lock
bound
imul
add
loope
inc
call
out
jecxz
mov
lcall
mov
and
leave
ret
inc
or
jg
pushl
loop
sbb
ret
rcl
mov
add
int
jp
jnp
cmp
pushl
xchg
mov
aad
notb
cmp
add
pop
leave
popa
das
cli
jg
in
test
sub
or
mov
push
movsb
inc
pushl
shl
pop
jecxz
fcomip
adc
rcll
sub
dec
dec
repz
push
adcl
call
loopne
lods
and
mov
int
mov
dec
shr
add
lods
ljmp
lock
pushl
imul
mov
sub
mov
or
push
adc
xlat
push
xlat
aas
cs
jno
mov
dec
mov
rcr
jae
shll
xchg
push
push
cmp
jnp
out
add
call
cwtl
adc
sub
stos
and
in
add
loop
call
inc
clc
xor
lcall
in
std
outsb
js
push
shll
lcall
addr16
add
lcall
test
movsl
sbb
adcl
push
and
pop
ds
push
lods
call
loopne
xchg
inc
lds
sub
jle
into
push
pop
popf
xchg
idiv
dec
imul
nop
xchg
ss
jle
outsb
inc
int3
test
in
sarb
mov
inc
push
fimuls
test
xor
sub
mov
xchg
dec
cmp
lcall
cmp
adc
pop
ds
jns
in
push
dec
and
mov
mov
pop
sub
jge
or
repz
push
movq
cmpsb
add
fstps
xlat
xor
sbb
xlat
pushl
jbe
pushf
mov
pop
pop
cltd
xor
or
mov
mov
decl
adc
lods
mov
les
out
inc
leave
push
and
out
push
push
sub
mov
add
jmp
cmpsb
mov
sbb
cwtl
movsl
xchg
loopne
cmp
out
pop
hlt
push
scas
dec
sti
push
mov
cmpsb
ds
in
out
pushl
dec
movsl
pop
sti
push
jb,pt
lahf
fistl
and
aaa
fcmovne
cmpsb
in
pop
fwait
jmp
negb
mov
pop
sbb
call
out
idiv
popa
cltd
pop
push
je
cwtl
pop
cmp
test
call
xchg
lods
fwait
jae
scas
insb
sub
adc
outsl
inc
jecxz
push
movsl
dec
xchg
stc
and
lret
inc
dec
stc
js
fbld
nop
ljmp
pop
das
xor
xor
ljmp
jmp
sbbb
lahf
or
xchg
mov
adc
adc
jmp
adc
mov
sub
orl
mov
sahf
mov
dec
xor
jg
lcall
std
cmp
out
jne
dec
xchg
mov
inc
push
iret
sbb
cltd
imul
in
mov
cmp
push
inc
sbb
mov
shlb
cmp
and
das
mov
push
aad
in
out
rcrb
lock
cmp
in
in
fstps
sub
gs
aad
nop
adc
jno
decl
js
lods
fstpt
pop
mov
xor
loope
jnp
dec
repz
in
mov
stos
jecxz
lcall
sbb
jg
cltd
idivb
pop
push
rol
mov
idiv
ljmp
dec
pop
mov
cli
mov
popf
xor
pop
push
mov
pop
jb
cmp
out
xor
cmp
push
jbe
out
cmpsb
ret
mov
pop
jo
mov
std
or
popa
xor
shl
push
flds
cwtl
sar
pushl
mov
movsb
hlt
sbb
and
stos
imul
repnz
insl
and
jg
icebp
add
adc
cmp
push
dec
lock
test
sbb
insb
push
mov
mov
adc
sub
fdivrl
call
inc
adc
inc
jge
test
jo
xchg
push
sub
lahf
jbe
and
shl
outsl
incl
cmp
sti
sub
sbb
or
mov
fwait
add
rcrl
ljmp
or
adc
inc
imul
roll
mov
add
and
movsb
dec
mov
movsb
fcoms
push
cmp
popa
sub
pop
incl
icebp
hlt
int
movsl
stos
push
clc
sti
fcompl
fs
xor
add
pop
sub
andl
leave
bnd
inc
jl
cltd
xchg
or
pusha
and
ret
decb
pop
pushl
xor
xor
xor
fidivrl
loope
leave
cs
out
stos
xchg
xchg
xchg
sub
call
movsb
dec
cmp
cmc
testl
mov
fprem
pop
jp
mov
mov
incl
ss
ja
and
mov
and
sti
and
setne
sar
cld
outsl
in
das
cli
lcall
cmp
mov
adc
mov
addr16
lock
subl
out
dec
je
notb
lds
inc
mov
mov
pop
jno
or
rolb
gs
lahf
mov
sbb
ljmp
aas
idivb
test
shl
push
fcoms
fs
das
clc
decl
cwtl
aas
xchg
add
jne
push
jne
pop
pop
popf
adc
push
jp
mov
test
dec
sahf
sub
int
mov
stc
sbbb
orb
out
fisubl
aam
fisttpl
incl
mov
fldenv
mov
jmp
testb
adc
push
adc
mov
out
shlb
add
lahf
mov
loope
call
cmp
outsl
loop
inc
rorb
adc
popa
xor
mov
add
xchg
clc
mov
adc
fldcw
in
rorl
add
cmp
inc
ret
out
in
ljmp
stos
fimuls
add
fists
and
icebp
lds
push
jg
ds
xorb
and
out
ss
pushl
inc
mov
jnp
add
lcall
mov
sub
testl
std
stos
cwtl
arpl
repnz
cwtd
push
dec
in
mov
jns
sbb
jmp
cld
pop
and
xchg
jg
cmc
rcl
add
add
and
mov
insl
push
push
jle
or
call
int
xchg
mov
sar
cmpsl
cmc
mov
int3
push
je
mov
xor
addl
decl
cmp
xor
dec
aam
push
sarl
idiv
pop
inc
push
stos
push
ja
and
sbb
mov
push
push
pop
cmp
loopne
decl
pop
xlat
ja
out
pop
mov
xor
push
mulb
outsb
sub
mov
push
fstpl
sub
ljmp
inc
leave
cmpsb
dec
lahf
pusha
mov
pusha
daa
mov
sbb
fsubp
hlt
dec
lcall
jnp
xchg
push
ljmp
xorb
inc
stc
or
stos
add
imul
clc
push
pop
hlt
mov
outsl
mov
leave
addl
jmp
pop
pop
ds
inc
daa
push
iret
xchg
lods
je
push
and
fcompl
pushl
mov
jl
or
ret
popa
xor
adc
lcall
incl
popa
and
xor
xchg
dec
pushf
xor
test
imul
rorb
jb
mov
testl
mov
mov
insb
aaa
and
ja
cmc
std
mov
inc
mov
xchg
add
iret
cmpsl
pop
xchg
pop
lcall
sbb
mov
mov
or
inc
sahf
call
jg
ljmp
pop
lods
cmp
push
jge
mov
and
mov
sbb
jmp
dec
cmp
loope
xchg
lahf
cmc
pop
xchg
lret
mov
inc
xor
sub
jg
gs
daa
aam
mov
mov
ljmp
out
ret
mov
fwait
mov
xchg
cli
popf
movsl
adc
push
das
enter
das
mov
sub
fwait
lods
jle
into
bound
inc
clts
cmp
push
cmc
call
push
call
push
inc
mov
jbe
pop
shll
out
enter
lods
shrb
push
lahf
lcall
jns
movsb
mov
and
pop
pop
jg
pop
sti
mov
andl
mov
imul
inc
push
or
cmpsl
cmp
xchg
mov
xor
xchg
xchg
xchg
ret
or
mov
out
and
jb
cs
add
call
aaa
loop
mov
cmp
cmc
filds
mov
mov
mov
add
int3
loop
repnz
cmp
lods
cmpsb
popa
or
mov
addr16
cmp
fdiv
jg
cmp
frstor
mov
daa
and
add
mov
inc
cmp
inc
insb
jns
pop
xchg
cmpsl
outsb
stos
or
out
out
mov
inc
xorl
mov
mov
pushl
pop
popf
push
cmp
cmp
sub
dec
xchg
push
xor
sub
dec
mov
cld
cmc
cmp
call
inc
adc
xor
test
sbb
nop
sbb
idiv
lcall
mov
pop
imul
popa
imul
jl
stos
ljmp
add
inc
cs
cmp
lock
mov
aas
les
enter
ljmp
iret
xchg
nop
std
ss
pop
pop
jb
cmp
pushf
pop
inc
xor
mov
popa
nop
pushf
mov
decl
pusha
pop
into
inc
enter
mov
movl
cmp
fs
jg
cs
cmp
ret
mov
out
add
dec
out
mov
pop
jmp
xchg
ret
cmp
aam
pop
fbstp
mov
into
sub
inc
xor
jno,pn
aad
push
mov
dec
movsb
mov
and
je
jbe
cld
cli
pushf
insb
mov
xchg
add
das
inc
dec
incl
scas
imul
aas
lret
adc
mov
xchg
das
push
ret
decl
sub
ds
lods
cmp
jg
das
push
fisttpll
icebp
outsl
shrb
add
stc
cs
fwait
repz
and
mov
mov
mov
imul
out
stos
dec
mov
or
lcall
pop
jmp
in
cmp
lahf
mov
out
mov
push
and
cli
or
jg
fistl
jbe
pop
inc
popf
movsb
test
add
adc
and
mov
pushl
or
push
mov
fimuls
cli
or
cmp
mov
sbb
std
cwtl
ret
addl
jecxz
lds
and
and
js
mov
decl
xor
add
loopne
push
lods
fcmove
popf
xchg
xchg
jmp
notb
jge
jge
test
lock
fbstp
ljmp
jnp
pop
cwtl
dec
ret
addb
decl
inc
dec
cmp
xor
or
out
xor
or
and
push
outsb
enter
or
pusha
sub
and
cmp
dec
lods
push
data16
rorl
jno
mov
add
int3
fwait
cmc
fiaddl
inc
js
ds
call
insl
out
stos
xor
icebp
cmpsl
ja
icebp
sbb
jo
into
stos
lcall
scas
sub
leave
mov
push
mov
lods
insl
in
aad
js
loopne
dec
dec
lods
fstpt
push
lcall
mov
bound
jb
cmp
insb
push
pop
out
xchg
sbb
lcall
call
aaa
sbb
pop
sbb
sti
in
push
push
dec
cwtl
push
in
jnp
aaa
sbbb
scas
inc
push
xchg
jbe
in
and
inc
cwtl
fidivs
mov
icebp
xchg
fisubs
outsb
adc
jp
daa
dec
ror
jb
test
cli
add
cmpsl
push
mov
dec
push
inc
or
inc
push
js
jae
or
sbb
cld
test
sub
push
sbb
and
in
push
push
mov
dec
decl
push
aad
mov
pusha
sbb
and
loopne
mov
lcall
lret
sbb
lret
adc
sub
test
fs
jno
mov
test
inc
sbb
inc
repnz
push
out
mov
sahf
fists
add
inc
inc
pushf
adc
jp
push
std
cmp
adc
pop
add
iret
cmp
mov
mov
rol
in
and
mov
or
in
dec
lcall
decb
es
testl
movsb
adc
divb
std
ljmp
jecxz
xor
stos
popf
inc
jne
push
mov
add
push
push
les
cmpsb
callw
call
ss
jmp
pop
mov
xor
loop
hlt
add
shrl
mov
cmp
out
lret
add
icebp
sub
rcrb
mov
enter
icebp
add
decl
xor
movsb
loopne
pop
fsubr
mov
out
push
and
push
or
pushl
out
movsl
insb
clc
mov
negl
mov
lock
in
jae
icebp
insb
adc
jmp
stc
pxor
sub
and
or
outsl
xor
insb
pop
scas
mov
mov
iret
ret
scas
lds
sbb
mov
ljmp
scas
sub
lods
int3
xor
fadds
ret
add
xor
jge
in
ljmp
cmp
pop
inc
pop
bound
pop
jg
popa
ja
insb
ficoms
mov
lock
rol
outsb
mov
in
fimuls
rcrl
push
fnstsw
mulb
jae
popf
sub
aad
int
cmp
popa
inc
and
nop
clc
lcall
sbb
sahf
movsb
jnp
sbb
cmpsb
ja
add
xchg
jns
xor
int3
popf
jmp
mov
push
lods
mov
mov
mov
cli
aam
cmpsl
sub
jmp
into
sub
int3
cmc
adc
lcall
push
sub
pop
jns
mov
push
pushf
test
lods
sub
lcall
mov
sub
sbb
inc
push
fs
pop
out
imul
lock
call
out
cmpsb
ficomps
inc
mov
fwait
xchg
push
or
aam
std
inc
repnz
jmp
jnp
movsl
stos
insl
mov
imul
bound
xor
inc
push
inc
cmpsb
pop
mov
lcall
and
jno
je
repz
mov
mov
push
cmpsl
mov
sub
decl
lods
idivl
mov
mov
cmp
mov
jl
ret
mov
bound
mov
loope
decl
dec
loop
je
xchg
inc
fldenv
lcall
adc
movsl
arpl
mov
mov
pop
or
in
lods
movsl
hlt
stos
dec
push
add
mov
cwtl
mov
ljmp
js
xchg
xlat
push
lret
imul
lea
insb
xchg
push
pop
xor
add
cmpl
mov
lahf
push
outsl
sbb
in
xchg
ljmp
in
inc
pop
push
add
test
loop
sti
in
out
std
lahf
lock
add
roll
call
adc
dec
xor
cs
stc
inc
fwait
stos
add
cmp
cmp
out
scas
and
fimuls
lods
in
jecxz
xchg
mov
xchg
es
sbb
xchg
lcall
inc
jno
push
nop
out
mov
adc
jnp
sub
xorb
push
mov
minps
out
or
jg
xchg
das
push
dec
jl
cltd
adcb
cmp
mov
mov
jp
mov
loopne
test
in
mov
adcl
int
cwtl
inc
lret
lret
cmp
dec
mov
adcb
sub
incl
jmp
inc
push
ficompl
jecxz
mov
int
mov
in
xlat
rcl
dec
mov
or
insl
shrl
fcom
je
mov
cltd
shlb
test
push
add
jle
mov
xor
jmp
js
dec
and
call
xor
xchg
pop
pop
push
xchg
jne
mov
movsb
out
sti
adc
add
out
add
mov
leave
icebp
gs
dec
sarb
push
stc
call
xchg
movlps
cmp
cmp
push
addr16
out
stos
xor
sub
fidivs
cmpsl
je
sti
adc
sub
xor
faddl
xchg
adc
sbb
outsl
fdivs
sahf
test
in
mov
call
lds
in
jbe
push
adc
lds
dec
pop
fists
cmp
incl
mov
adc
out
sub
into
adc
outsb
push
arpl
pop
mov
mov
dec
inc
and
movsl
scas
or
fstps
popf
lahf
sbb
add
lcall
cmp
shl
sbb
dec
addr16
lea
lcall
sbb
inc
data16
jg
insl
mov
push
ljmp
cmp
movsl
sub
scas
in
daa
push
add
dec
dec
jnp
loope
mov
cmp
push
icebp
adc
js
jg
sbb
jno
int3
in
mov
cmp
and
sti
jl
incl
xor
and
xchg
in
xor
ds
pop
bound
lret
pushl
lock
imul
test
outsb
jl
mov
inc
pop
dec
int3
mov
aad
arpl
call
popf
dec
lods
jae
outsb
cmp
cltd
jno
xor
cmpsb
jne
out
and
xor
dec
jmp
push
lea
adc
xor
sub
jp
add
xor
mov
data16
xor
aaa
outsb
out
xchg
dec
dec
lcall
icebp
in
mov
into
aad
popa
sbb
stc
sbb
sbb
cmpsl
jb
enter
lcall
and
mov
or
pop
pusha
loop
push
cmp
ret
repnz
jg
divb
sbb
sub
rcr
or
cmp
pop
push
pop
arpl
cld
in
cmp
shlb
dec
hlt
lret
jp
xorl
xor
outsl
jmp
divb
enter
or
data16
test
cs
out
sti
std
pushf
les
incl
sub
fcoms
adc
sub
add
sbb
pop
add
fcomip
decl
fisttpl
sbb
mov
mov
dec
pop
ds
cltd
lock
repz
lods
ret
add
aaa
pop
pop
shll
in
out
push
mov
ljmp
jns
out
xchg
test
xchg
in
add
dec
dec
sbb
xchg
out
dec
ljmp
push
popa
push
notl
das
push
inc
and
mov
adc
iret
iret
fs
cmp
sbb
inc
mov
add
es
sahf
pop
push
out
lods
cmc
dec
xor
outsl
ljmp
inc
cmpsl
icebp
out
sub
insb
fcomp
subl
xchg
sbb
test
mov
or
addr16
cmp
add
mov
sbb
sbb
fdivrl
sbb
and
cmp
mov
pop
pusha
scas
fcoms
pop
aam
scas
pop
inc
mov
xchg
notb
aad
add
cmc
lahf
pop
das
ret
fwait
lea
adc
mov
enter
or
roll
js
push
cs
add
xchg
mov
mov
aas
push
xor
mov
in
dec
call
sarb
aam
lods
pop
ret
cwtl
jecxz
sbb
mov
adc
pop
nop
pop
xchg
fs
lods
mov
jg
push
mov
out
in
or
inc
sbb
faddl
adcl
incl
les
lret
push
loopne
fwait
add
in
or
cmp
adc
out
mov
ljmp
jmp
push
pop
lods
popa
test
in
orb
push
lret
xchg
jg
mov
in
jno
inc
inc
inc
jecxz
inc
nop
pop
mov
pop
in
jge
fcomip
lcall
mov
imul
jle
mov
lahf
pop
push
lcall
call
xor
mov
push
pop
sub
idivl
hlt
hlt
clc
inc
daa
imul
dec
inc
sbb
or
arpl
inc
in
sub
cs
xor
inc
sbb
push
dec
lcall
inc
andl
jge
sbb
icebp
mov
pop
adc
aaa
insb
hlt
inc
fmuls
das
xor
addb
adc
pop
lods
dec
dec
loop
insl
mov
icebp
mov
out
push
pop
popa
jne
inc
dec
in
pop
cmp
scas
aas
es
mov
in
js
fstpt
ror
pop
inc
adc
rorl
mov
std
roll
divl
and
jnp
sbb
jle
or
sub
insb
mov
add
repnz
cmpsb
lcall
inc
stos
xlat
stc
pop
and
mov
lret
mov
lret
sub
lcall
cld
js
push
popa
stos
jecxz
and
dec
repz
imulb
shrl
mov
xchg
mov
pop
dec
sub
xor
cmp
lods
push
dec
int3
fnstsw
mov
fstpt
outsb
mov
les
mov
inc
ss
push
push
out
mov
xchg
inc
cmp
push
call
sbb
es
mov
negb
popa
mov
ljmp
mov
sbb
dec
mul
pcmpgtd
push
in
decl
sar
ljmp
iret
lret
push
and
fld
decl
jb
jmp
mov
nop
stos
js
xchg
sahf
dec
jmp
mov
jae
shr
ud0
jmp
je
movsl
in
mov
cmp
imul
dec
loopne
jno
ljmp
stos
test
inc
sub
loop
pop
dec
inc
mov
aam
jmp
xor
addr16
jnp
or
jmp
fists
and
xor
xchg
insb
test
cmp
push
mov
xorb
jecxz
movsb
flds
mov
pop
icebp
push
and
pushl
xchg
xchg
xchg
mov
sbb
lods
or
and
and
jb
and
fdivs
stos
lret
dec
shll
xchg
cmp
push
stos
flds
mov
xor
pop
sub
sbb
clc
push
lds
cli
outsl
outsl
xor
cmp
je
add
jmp
shll
clc
mov
imul
outsb
vdivpd
dec
push
out
shrb
lods
add
incl
aad
ret
or
mov
pop
imul
adc
lret
xchg
mov
xchg
sub
out
mov
data16
sbb
pop
jp
pop
dec
gs
push
push
xor
stc
jno
pop
dec
sub
push
out
js
sub
inc
loop
setb
ljmp
cli
jo
cli
pop
inc
inc
imul
imul
pop
cli
subl
notl
jns
ljmp
jp
mov
fwait
repz
mov
jmp
outsl
in
std
rcr
sbb
cli
jg
je
loope
mov
arpl
mov
fdivs
cmp
sbb
cld
ja
out
je
js
mov
rcrb
dec
sbbl
sbb
inc
sub
inc
jbe
mov
or
inc
add
rcpps
lret
pop
in
jno
xchg
adc
clc
stos
inc
push
push
jp
mov
rcll
addl
push
mov
xchg
inc
gs
cmp
rcrl
push
arpl
mov
cli
mov
test
cld
mull
mov
loopne
mov
or
int
ljmp
push
xor
jbe
mov
aad
enter
sub
aad
adc
sub
xor
pop
test
stos
mov
sbb
fldt
rclb
mov
jmp
mov
fdivrl
stos
out
jns
mov
dec
xchg
mov
xor
fcomip
daa
mov
out
mov
sub
aad
pop
or
ret
popa
cmp
and
xchg
pushf
lret
pop
mov
test
sub
cmpsb
xlat
push
pop
into
movsb
out
mov
mov
out
add
and
in
ds
sti
scas
pop
xchg
out
pop
addr16
push
popf
lret
rcrb
lock
sub
mov
test
dec
add
dec
std
jp
lcall
pop
push
insb
imul
stos
lcall
push
jmp
jge
lret
xchg
fstpl
stos
xor
cmpsl
jecxz
cld
dec
mov
decl
cvttps2pi
cmp
mov
push
inc
clc
mov
adc
pop
lcall
jle
inc
movsl
sub
lcall
in
js
pushf
mov
lcall
loop
mov
add
iret
jle
fwait
sub
and
data16
loope
test
incl
mov
adc
loopne
xchg
jb
inc
repz
push
xchg
pushl
cs
iret
insl
xchg
idivb
mov
test
mov
sbb
or
push
incl
inc
aaa
adc
pushf
mov
dec
std
push
out
in
in
loope
leave
bswap
mov
fimuls
pushl
push
inc
jns
ret
adc
and
sbb
sahf
fsubs
push
pop
mov
call
orl
pop
ret
and
fnstenv
je
or
loopne
cmc
push
cld
incl
lods
push
dec
mov
xor
add
imul
in
cmp
inc
sbb
fidivl
outsl
and
xor
sbb
scas
subl
or
push
jp
cmp
shrw
ljmp
mov
jp
inc
in
cwtl
inc
jge
push
push
lock
movb
int
push
ljmp
jns
push
xchg
in
aaa
cmp
sahf
xor
andl
jmp
xor
out
and
mov
mov
jle
adc
pop
jl
dec
sbb
ljmp
push
jg
xor
ss
cmpb
jmp
jae
mov
pushl
mov
or
dec
add
mov
lcall
insl
into
ja
rcrb
mov
fwait
outsl
lret
jmp
adc
outsl
rcrb
xor
mov
arpl
roll
lcall
mov
add
jp,pt
clc
call
jno
ja
int
inc
sub
sbbb
xor
mov
fisttpll
fsub
pop
cmp
jp
push
mov
jmp
es
jo
out
daa
hlt
mov
rorb
inc
fistps
cmp
and
pop
movsl
pop
jl
xchg
lods
and
cmpsb
cltd
cmp
cmp
mov
sub
lds
xor
inc
dec
push
inc
nop
call
mov
xchg
fcomip
jmp
sbb
cmpb
xchg
out
inc
mov
mov
enter
pusha
xlat
mov
ljmp
cli
js
inc
push
sub
push
insl
mov
insl
sbb
push
xchg
jmp
jmp
sbb
jl
cs
sbb
sbbl
adc
imul
sbb
mov
mov
push
rorl
ds
mov
cmp
cwtl
call
outsb
jae
xor
test
test
loop
js
adc
and
data16
enter
incl
push
push
jo
shr
incl
pop
jnp
pop
push
mov
es
jecxz
mov
fcoml
fndisi(8087
xor
jg
movsb
addr16
data16
pop
repz
or
in
inc
insb
jnp
insb
ja
cmc
pop
sbb
rorl
cmpsl
or
mov
push
or
dec
pop
pop
inc
movsb
push
pushl
mov
xchg
push
addr16
sub
mov
movsb
and
nopl
fs
dec
push
mov
pop
adc
pop
rclb
mov
pusha
lcall
xor
pushl
mov
ret
je
mov
sbb
cmc
xlat
shrl
dec
repnz
xchg
push
sbb
xchg
decl
inc
iret
and
test
outsb
loope
or
repnz
icebp
mov
adc
pop
popa
pop
inc
adc
push
ljmp
ljmp
in
cmp
leave
insl
adc
dec
popa
cmp
adc
mov
sbb
popf
mov
pushl
out
pushl
pop
xchg
fs
push
cwtl
add
iret
xchg
xor
mov
in
adc
out
sub
jecxz
mov
push
stc
sub
aad
data16
dec
inc
mov
incl
mov
push
mov
dec
and
xor
xchg
rol
dec
cmp
outsl
clc
or
xor
xchg
xchg
push
xor
in
jb
jnp
xor
jmp
add
xchg
sbb
lret
lods
or
gs
mov
decl
mov
rol
inc
pop
xchg
or
lahf
cmp
cmp
into
adc
mov
in
decl
sbb
mov
push
sub
sub
cmp
outsb
jmp
or
fmul
pushl
std
or
cmp
insb
idiv
adc
adc
mov
pop
scas
push
insl
pop
outsl
pushl
outsl
arpl
mov
and
and
adc
jl
enter
pop
mov
loop
and
ret
in
add
rorl
sbb
call
out
mov
dec
inc
xor
movsl
xor
sysret
mov
mov
jae
or
aaa
sbb
push
cmp
mov
test
add
add
jmp
mov
xchg
cmp
xchg
sbb
enter
inc
lret
das
inc
mov
aas
or
xchg
decl
ljmp
popl
add
out
cltd
fisubs
daa
cmp
cmp
or
push
inc
cmpsl
ds
decl
mov
xchg
push
subl
iret
rcr
mov
mov
sbb
ljmp
test
mov
push
jecxz
ljmp
pop
pusha
popa
cmp
jle
mov
xor
inc
lcall
testl
test
push
icebp
jnp
push
test
sarl
cli
mov
das
outsb
icebp
aam
mov
mov
adc
mov
aas
mov
and
cmp
test
lea
inc
xchg
jo
ds
inc
or
insb
lcall
push
or
cmpsb
jmp
fbld
jg
xchg
lods
aam
mov
jne
push
push
mov
push
mov
pop
pop
cmpsb
sub
mov
decl
xchg
jmp
addr16
ficoml
push
pop
push
repnz
push
mov
lock
cmp
fbld
jecxz
jbe
jmp
leave
je
sti
mov
jl
mov
aaa
cld
mov
ss
pusha
sbb
adc
push
rcr
ljmp
fwait
xor
lcall
mov
cmp
stos
xchg
mov
lret
ljmp
sar
jno
fsubrs
lods
sub
lds
add
and
leave
sub
mov
ljmp
pop
aas
call
std
sbbl
xchg
fst
sbb
inc
mov
aas
jg
outsl
cli
pop
add
xor
cli
stos
addps
mov
ret
push
jne
add
or
shlb
movsl
fcompl
fwait
push
mov
out
xchg
pop
je
lret
cmp
leave
imull
push
jbe
mov
xchg
jns
incl
shlb
mov
js
int3
xchg
inc
sahf
clc
ret
mov
lcall
fnsave
lds
ja
adc
pusha
mov
mov
ffree
gs
inc
incl
xchg
dec
addr16
outsb
sbb
or
test
or
jnp
or
mov
mov
outsl
and
adc
rep
sub
outsl
inc
lcall
aam
ljmp
loopne
inc
stc
out
fistl
mov
or
jmp
mov
cmp
lret
push
dec
je
test
and
pushf
push
add
cs
and
pushl
lock
adc
push
imul
dec
test
xchg
fwait
incl
and
mov
jnp
into
aas
jle
mov
mov
call
fisubl
jge
lcall
in
fs
out
in
xor
test
popa
xchg
loopne
dec
adc
jno
jecxz
cmpsl
sbb
push
mov
xchg
mov
or
aad
in
lahf
push
shr
sbb
mov
insb
subb
scas
ds
xchg
decl
ror
xor
sub
les
push
repz
mov
mov
mov
lods
daa
fwait
cmpsl
dec
cmp
mov
fnstcw
xor
mov
aam
mov
enter
mov
repz
mov
jnp
ret
iret
jp
repnz
pushl
dec
xor
fcoml
push
ja
pop
cmp
sbb
adc
pushf
and
rcl
jecxz
inc
add
mov
insb
repnz
cmp
mov
fbld
sbb
xchg
pusha
jl
pop
call
fs
cmp
pop
push
inc
icebp
bnd
jmp
repz
dec
insb
jne
and
mov
das
dec
xchg
adc
cmc
leave
scas
or
mov
aaa
mov
outsb
roll
gs
adc
adc
jno
popf
sbb
lcall
out
or
xor
movb
mov
mov
fdivs
aad
in
ljmp
pop
pop
push
sarl
mov
mov
inc
push
ja
mov
ljmp
or
sbb
jo
mov
lock
mov
jmp
jno
jp
aad
in
push
dec
jne
lock
push
ret
sahf
rcrl
loope
mov
lcall
fists
xchg
jnp
mov
js
push
ds
dec
fimuls
lock
cmp
and
shr
jb
cltd
mov
les
pop
add
sbb
ljmp
xchg
mov
into
mov
decl
fldl
or
ja
nop
sbb
pusha
scas
pop
pop
mov
cmp
cmpsl
add
pushl
sbb
xchg
inc
aas
inc
pop
dec
ss
insb
or
mov
cmp
sub
dec
pop
mov
dec
pusha
test
push
jno
or
pusha
ds
jmp
fisubrl
and
push
daa
mov
call
cli
xchg
and
scas
push
adc
lcall
cmpsb
outsb
sub
xchg
mov
mov
cmpsb
add
ret
jo
je
jmp
mov
mov
xorb
clc
push
inc
mov
jae
mov
xor
loop
daa
iret
andb
jmp
iret
mov
jnp
jnp
sbb
jnp
dec
fstpt
mov
xchg
sti
and
push
and
mov
sub
fcomi
shlb
sbb
in
push
jmp
mov
push
adc
fwait
out
test
cmp
mov
incl
cld
cmp
and
pop
stos
fs
jge
gs
shll
pop
jle
dec
call
jo
daa
mov
lret
imul
sbb
jmp
mov
sub
pusha
inc
cmpsl
out
mov
sub
mov
mov
jge
loop
push
bound
xchg
out
mov
insl
or
js
shlb
call
sbb
sbb
and
mov
push
jne
insb
jnp
out
mov
push
test
repnz
decl
int3
mov
xchg
or
movl
je
pop
test
or
lcall
add
int3
and
and
je
popa
lcall
fistpll
jno
ds
out
inc
add
fldcw
jne
ret
fidivl
sub
cli
loopne
or
mov
inc
dec
fwait
lahf
pop
sti
lcall
sti
fcomps
inc
adc
cmp
or
adc
jecxz,pn
xor
stos
xchg
clc
ljmp
xchg
xorb
and
inc
sub
sub
xor
mov
sti
movsb
mov
ljmp
stos
push
outsb
dec
cld
outsl
insl
xorb
push
xchg
push
and
sub
cmp
decl
mov
popf
ret
mov
sbb
in
xchg
fcmovnb
or
cltd
das
sbb
ljmp
adc
pusha
jno
inc
int3
and
inc
pushf
out
push
and
nop
pusha
jmp
add
inc
sbb
inc
and
aas
aam
push
pushf
fmuls
cmp
push
sub
incl
mov
and
push
xlat
out
repz
cmpb
mov
nop
mov
mov
jno
push
stc
and
push
add
push
or
test
loope
lock
add
aas
push
imul
subb
xchg
jo
pop
cmpsl
movsb
lcall
pop
jb
lds
mov
or
cmp
bound
and
data16
cmp
cmp
shrb
lods
test
sbb
xor
cmp
neg
cmc
and
push
mov
and
ret
js
pop
hlt
out
xor
fbld
std
sti
ss
ret
add
outsl
loope
daa
movsb
xchg
cmp
popf
aam
cli
mov
jae
test
push
jbe
jno
ljmp
jb
adc
inc
negb
jne
clc
and
cmp
addr16
decl
aad
adc
pushf
in
adc
ret
or
aas
sub
dec
out
inc
and
xor
test
fcmove
or
mov
lock
push
mov
cmovns
stos
rcr
adc
mov
iret
lock
outsl
and
add
sbb
mov
addr16
les
incl
in
lods
je
sub
cmpsb
sbb
repz
dec
xchg
cli
or
lcall
gs
fistl
mov
and
pushl
xchg
dec
xor
mov
mov
loope
adc
aad
sub
in
dec
jnp
lock
test
jmp
fwait
xor
leave
int
push
scas
std
int3
inc
mov
mov
inc
fmull
push
jl
jl
jbe
mov
scas
push
pop
dec
in
test
mov
dec
push
mov
fistl
xchg
notb
arpl
scas
fadd
push
jb
stos
xchg
daa
push
test
repz
decl
sbbb
pop
gs
inc
sub
adc
cmp
shrl
insl
ror
imul
jmp
and
enter
add
cld
mov
insb
pop
dec
push
loopne
popa
sarl
ja
test
xchg
adcb
add
pushl
ds
sub
shll
mov
ljmp
xchg
fistl
aad
fs
and
mov
xchg
and
jae
outsb
mov
lcall
push
movsl
mov
orl
cmp
imul
add
jmp
sub
in
iret
cmp
lret
daa
or
fsubs
lahf
push
sbb
inc
dec
imul
decl
cmpsl
xor
xor
adc
cli
insl
fldcw
add
xlat
clc
pop
push
fisttpll
jns
adc
decl
int3
popf
adc
shl
movl
aas
jg
mov
mov
pushl
lods
clc
inc
lret
sbb
and
fisttpl
rcrb
and
push
lcall
fdivrs
sahf
or
and
test
testb
sbb
pop
jge
movsb
push
js
mov
int
cmpsb
mov
mov
rorl
sbbl
std
mov
dec
loopne
bound
outsb
rcll
push
xor
clc
popa
pushf
aas
call
movsb
js
sub
mov
faddp
lret
imul
inc
decl
stc
add
jne
cmp
dec
xor
and
mov
das
mov
and
cmpsb
pop
jno
push
sarl
insb
jmp
ss
jnp
fdiv
or
aas
and
jb
pop
lcall
rolb
pushl
lcall
in
mov
jmp
xchg
dec
sub
inc
repnz
int3
jo
inc
pushl
cld
xchg
loope
in
or
rorb
pop
jmp
mov
or
loope
sar
jmp
pop
mov
jns
pop
mov
push
ss
pop
sub
or
add
lret
enter
xchg
bound
call
aas
fnstsw
or
sbb
ret
sub
fsubl
and
lcall
inc
popf
jecxz
jle
loope
in
and
jecxz
leave
fsubp
add
cltd
inc
fcomip
mov
xor
push
push
inc
lods
adc
cs
lret
jbe
repz
mov
ss
sub
cli
ret
outsb
cld
add
inc
fadds
clc
push
stc
insb
mov
adc
mov
pop
cmc
shr
pop
mov
repnz
js
daa
adc
rep
out
ds
cmp
cmpsb
inc
xor
dec
dec
movsl
nop
insb
xchg
mov
dec
xlat
jnp
sbb
stc
xchg
inc
jle
mov
daa
sbb
mov
add
add
push
das
aad
or
ljmp
rclb
adc
decb
push
test
inc
cwtl
mov
test
lods
fistps
cmp
out
and
mov
jbe
repz
push
and
outsl
adc
imul
movsl
rol
mov
ss
inc
push
imul
out
iret
xchg
les
cmp
arpl
mov
mov
js
or
pop
xchg
cmp
pop
dec
outsb
and
out
mov
dec
dec
mov
mov
inc
and
sbb
mov
dec
loope
loopne
or
aas
loop
inc
cmpsl
rol
mov
call
rcll
xor
sbb
sbb
nop
sub
push
dec
pop
mov
cwtl
add
fwait
push
ret
mov
cmpsl
jg
jmp
xchg
lock
sub
jbe
rclb
lcall
mov
test
ret
lcall
mov
pop
sbb
add
mov
sbb
out
icebp
into
loopne
dec
aas
incl
fisubl
pop
lds
mov
pop
mov
test
insl
imul
mov
jl
inc
sub
pop
mov
xor
add
mov
pop
or
std
mov
nop
pushl
ret
fcompl
pop
inc
fcmovne
jb
stos
inc
clc
mov
push
loopne
scas
lea
cltd
and
jg
out
mov
decl
div
jns
enter
sti
sbb
xor
out
cld
push
xor
add
jg
jns
in
mov
hlt
xor
cmpsb
stc
cs
add
into
mov
nop
fistps
jg
add
jge
xchg
icebp
mov
push
xchg
ja
lret
push
jmp
ja
mov
pop
mov
sbb
pop
or
cwtl
lds
ret
xor
call
fildll
jecxz
add
push
jp
mov
sbb
mov
xchg
push
fisubs
dec
sti
shll
pushf
in
jo
loope
sub
sarl
pushl
push
and
lea
into
sub
mov
xor
add
incl
or
xchg
sbb
test
decl
jecxz
into
xor
cs
push
xlat
mov
add
aam
and
mov
adcb
pop
bswap
mov
in
out
mov
daa
ljmp
jg
les
jne
movsb
scas
adc
xor
arpl
cmpsl
aad
arpl
sub
add
fbld
lods
xchg
int3
cmp
js
cld
or
mov
xor
mov
lcall
xor
punpckhdq
mov
add
stos
mov
adc
aam
cmp
fildll
mov
jmp
cmp
jbe
lret
jne
adc
enter
stos
in
fsubr
inc
test
sbb
insl
ljmp
std
stos
push
adc
sbb
aam
push
lea
pop
mov
mov
xlat
shrb
jg
cmp
mov
inc
inc
fucom
fsubl
pop
jecxz
inc
mov
popa
lahf
jmp
sbb
in
popa
sub
push
mov
jmp
pop
cmp
incl
push
fsubs
iret
mov
cli
mov
subb
in
sbb
xor
sahf
aas
dec
jbe
dec
push
test
call
fiadds
ss
bound
lret
mov
iret
fldt
push
call
jne
repnz
mov
fcomip
xchg
ljmp
or
lcall
popa
scas
xor
adc
sub
mov
inc
sbb
push
inc
pushl
push
add
pop
xchg
and
cmp
out
std
fsts
lods
xchg
popf
cli
add
add
fcmovne
aaa
ret
ljmp
and
mov
xor
push
sar
in
sub
pop
pushf
mov
std
pop
pusha
loop
and
adc
mov
xchg
xchg
pop
xchg
mov
shrl
stos
loop
xorb
cmp
lret
mov
cmp
incl
shll
xlat
add
cmp
mov
in
inc
sub
cwtl
push
shr
push
mov
cmp
ljmp
sub
add
adc
mov
outsb
dec
xchg
lahf
jl
mov
ljmp
push
es
rolb
idivb
sub
lcall
fcomi
fnstenv
xor
mov
pusha
ljmp
fiaddl
js
rdrand
and
cmpsb
movsb
out
cli
jp
and
arpl
or
test
push
lods
jle
lahf
popa
subb
lcall
pop
cmc
cmp
mov
or
jmp
aam
mov
xor
mov
push
int3
out
subb
xchg
aam
inc
push
mov
dec
xor
mov
dec
jae
push
adc
data16
nop
pop
outsl
test
inc
xchg
les
dec
leave
or
scas
ja
js
sarl
das
ljmp
jbe
divb
xor
sar
lcall
in
cmp
lret
enter
loopne
shlb
xchg
lret
mov
fcos
call
adc
push
icebp
and
cmc
es
cltd
or
xor
test
ljmp
in
inc
pop
cmpsb
xor
cmc
leave
mov
fwait
ret
sahf
jae
sbb
imul
incl
pop
sbb
sahf
jp
or
incl
or
sahf
fcoml
iret
mov
adc
mov
adc
pop
mov
or
les
stos
xor
dec
aas
push
stos
icebp
mov
mov
gs
cli
jne
pop
jp
cmpsb
jne
iret
dec
xchg
call
adc
stc
cmpsb
cld
aaa
fs
lods
adc
ret
mov
pushl
and
pushf
scas
mov
add
xchg
push
cmpl
xor
xchg
or
decl
mov
daa
ja
ja
fidivl
mov
insb
jae
pop
arpl
jg
inc
into
push
sahf
stc
cmpsl
push
adc
adc
xchg
push
pushf
and
insb
sbbl
add
mov
dec
sbb
inc
rcl
cmp
cld
cmpl
jmp
add
ret
add
xchg
iret
push
scas
sub
and
add
int
repnz
ljmp
xchg
shll
addr16
rolb
test
jb
ds
sub
jmp
and
imulb
outsb
or
lcall
jle
sbb
out
xor
call
addl
mov
xchg
test
jns
pop
jl
mov
inc
ret
adc
and
mov
out
fucomi
sbb
cmp
dec
inc
fs
jg
jmp
mov
pslld
ljmp
movmskps
popa
mov
mov
mov
xchg
sbb
sub
ror
mov
in
movsb
add
xorb
inc
leave
mov
shrl
xlat
test
cmp
jmp
xchg
cmp
std
jge
mov
in
or
jns
dec
lds
jmp
repnz
test
out
cmc
add
out
lcall
mov
pop
stos
ret
sarb
lret
add
movsl
aaa
lods
fisubs
insl
mov
nop
mov
cs
cmp
jecxz
sbb
adc
decl
sbb
dec
sub
push
mov
push
xor
jne
push
pop
pop
das
inc
fs
xchg
orb
cmc
out
fldl
xchg
pop
jbe
cmp
mov
scas
out
add
jne
sbb
xlat
pop
loopne
mov
push
cmp
add
push
lcall
add
imul
dec
ljmp
and
iret
jl
xor
inc
xor
cwtl
loope
ja
pushl
adcb
ror
dec
lahf
mov
or
mov
outsl
jmp
sbb
pop
cld
fld
not
or
pop
jae
movsb
shll
jo
and
incl
mov
push
inc
jecxz
xchg
dec
pop
jmp
imul
jno
jo
or
fistpll
nop
jo
jge
push
icebp
cmp
sbb
inc
mov
inc
inc
rcrb
inc
lods
dec
negb
jg
mov
inc
inc
push
push
xchg
popf
aam
jne
iret
ljmp
adc
xor
mov
rcll
in
or
scas
mov
push
ljmp
lods
int3
mov
in
sbb
push
add
imul
fdivl
inc
les
adc
call
mov
ljmp
mov
jno
icebp
xor
andb
mov
pop
or
fildl
jmp
or
test
push
jecxz
repz
push
xchg
fdivr
jmp
cmp
js
and
xorb
mov
sbb
mov
lcall
mov
sbb
dec
mov
lock
push
xlat
fisubrs
adc
or
pushl
pop
aam
jp
stos
test
pop
pop
sub
mov
js
fstpl
les
aaa
std
jmp
int
imul
mov
mov
jo
xchg
or
push
cli
pushl
std
pushl
and
ficomps
jg
loop
adc
xchg
mov
orl
jmp
and
mov
sbb
mov
orl
in
inc
jne
or
pop
jbe
adc
jmp
pop
mov
lahf
push
lret
hlt
stc
movsl
dec
into
sbb
xchg
gs
aas
adc
es
push
pop
mov
aam
cld
push
mov
shlb
lds
mov
push
popa
fistps
sub
loope
out
ljmp
es
cmp
push
jecxz
scas
mov
ficoms
fadd
jmp
rclb
cmp
incl
jmp
sbb
push
xlat
or
popa
insb
push
xor
ljmp
mov
jg
test
popa
xor
cmp
jge
mov
mov
lods
scas
lret
lret
sub
adc
mov
cmp
jmp
lcall
xor
outsl
aas
push
shl
ljmp
xchg
in
mov
test
pushl
insb
pop
lods
jl
pusha
xchg
add
mov
add
add
adc
std
jmp
jmp
out
add
mov
pop
repz
jb
decb
dec
call
push
enter
xchg
aad
add
pop
gs
cmpsb
test
ljmp
and
cltd
mov
mov
xchg
das
clc
sbb
inc
or
cmp
sarb
ja
jo
or
insl
mov
in
add
mov
inc
nop
insb
adc
es
stc
sti
dec
push
push
push
jmp
mov
ds
rcl
sbb
mov
dec
xchg
or
push
lods
in
push
dec
inc
jmp
push
mov
shlb
mov
push
jmp
add
lcall
ficoms
xor
stc
jmp
push
xchg
pop
pop
pop
test
ret
ljmp
dec
push
pop
mov
adc
gs
cmp
cmc
je
and
xor
pop
icebp
jg
adc
mov
cmpb
jmp
jp
inc
ja
cmp
ljmp
ljmp
push
dec
or
jmp
pushf
xor
insb
fs
or
fucom
test
push
mov
es
ds
ds
push
lahf
imulb
dec
dec
daa
sbb
lret
mov
jmp
xor
test
push
cmpsl
adc
dec
push
add
call
mov
push
test
sti
and
sub
lcall
pushl
std
incl
sub
pop
fdivrs
sbb
and
decl
loopne
js
push
mov
push
push
out
pusha
mov
shlb
push
repz
nop
or
call
adc
sarl
loopne
xchg
mov
jns
mov
mov
dec
push
jg
test
or
mov
insb
adc
adc
test
mov
sub
cmp
inc
into
adc
sub
xchg
sbb
fmul
sbb
and
jl
loope
pop
data16
xor
ljmp
js
mov
aas
adc
sarl
fildll
stos
jl
bound
cwtl
cmp
cli
mov
pop
xor
inc
dec
dec
and
jne
push
aad
insb
std
fists
mov
pop
hlt
decl
andl
dec
xchg
push
jle
inc
icebp
pop
loopne
dec
mov
xor
xor
mov
in
sbb
sub
xor
mov
cwtl
rcll
lahf
add
xchg
push
ret
mov
xchg
mov
inc
jb
pop
mov
clc
or
adc
pushl
mov
mov
mov
mov
fdivr
jg
jmp
sbb
popf
lods
out
dec
ffreep
push
pop
or
pop
dec
testb
adc
aad
push
sub
jl
mov
out
gs
or
jle
sbb
out
ds
xchg
fwait
lret
xor
shl
add
cmp
addl
add
jg
and
lcall
push
xchg
inc
shlb
sahf
jle
ret
jmp
stos
and
jae
call
mov
insb
mov
aas
dec
mov
decl
jl
ret
je
int3
outsb
xchg
mov
stos
push
call
scas
shrl
push
test
pop
arpl
bound
hlt
gs
jp
in
sbb
clc
jmp
in
push
or
outsl
into
mov
sti
stos
sub
cmp
decl
aam
pop
pop
cltd
pop
fwait
inc
xor
pop
jmp
jge
addl
mov
das
mov
mul
and
xchg
daa
jge
negb
pop
mov
adc
sub
xchg
jl
pop
xchg
addb
mov
aas
cwtl
adc
jae
rcll
out
je
decl
sub
mov
dec
mov
cmp
sbb
sbb
mov
popa
fwait
mov
dec
dec
mov
test
cmp
in
fldenv
cmp
mov
mov
fdivr
mov
jl
out
xor
rclb
cld
pop
int3
popw
mov
jno
addr16
sbb
pushf
mov
sbb
test
daa
inc
in
rcrl
pushl
std
out
mov
cwtl
mov
lret
and
pop
sub
cmp
test
incl
sbb
sbb
dec
ror
adc
outsb
push
cld
ljmp
cmp
push
insl
jb
dec
dec
jge
mov
cli
lret
jle
fnsave
mov
pop
aaa
and
pop
scas
xor
xchg
adc
rcl
adc
decl
scas
inc
xor
push
daa
xchg
lods
sarl
aas
cmp
stos
movsb
ret
in
add
mov
popf
sbb
and
int
cmp
fbld
loop
repz
shrb
or
jle
sbb
add
iret
pop
inc
mov
jmp
clc
jl
into
sub
out
mov
jne
mov
sahf
xchg
call
std
or
js
popa
push
or
in
ret
std
mov
mov
sbb
push
es
adc
sub
es
decl
xchg
jge
mov
insb
into
push
pushl
mov
lods
sbb
popf
mov
lea
xor
sbb
rclb
lret
add
gs
mov
in
loope
popa
fbstp
and
and
mov
decl
xor
lahf
es
or
out
xor
ljmp
inc
in
add
shll
in
cmp
adc
mov
cmp
mov
idiv
sbb
pop
test
in
dec
push
cmp
mov
push
sub
sub
mov
xchg
or
mov
cmc
and
ficoml
loope
mov
mov
xchg
add
shr
movsl
mov
jmp
iret
sbb
mov
pushl
shr
ja
jecxz
mov
fwait
xchg
mov
les
cwtl
pop
push
xchg
sub
cli
lcall
aaa
filds
in
negl
mov
and
out
rcrb
mov
notb
xor
add
nopl
xlat
pop
pop
enter
fstpt
decl
sub
in
fbstp
aas
inc
pop
iret
pusha
xchg
fcomip
decl
scas
push
jo
fsqrt
mov
inc
outsl
ljmp
dec
sub
lret
jmp
jmp
idivl
adc
sbb
fdivs
cld
or
out
mov
jecxz
mov
incl
test
mov
adc
ja
cmc
lcall
scas
mov
mov
imul
fidivrs
es
inc
dec
gs
pop
pop
outsl
in
inc
loop
xchg
sbb
adc
add
jno
mov
lods
roll
sub
dec
jecxz
xchg
ljmp
pop
pop
jecxz
dec
nop
jb
sub
sbb
push
adc
sub
jne
fstpl
outsl
or
insb
xchg
dec
dec
push
xor
push
push
cli
mov
lret
ds
call
sti
int
xlat
or
rorl
cmp
pop
sbb
dec
rcrb
popa
jnp
ret
sti
lds
call
sahf
fadd
push
xchg
dec
push
popa
es
add
add
call
pop
and
add
popa
bnd
fs
cmpsb
jne
int
lahf
insl
call
mov
call
mov
fdivrs
dec
xor
sub
pop
repz
or
xchg
xchg
adcb
sub
push
adc
repnz
mov
dec
lock
mov
sub
xor
pop
into
inc
jae
push
adc
lcall
sub
loopne
lea
pusha
pop
inc
das
loope
sub
mov
decl
decl
fs
inc
das
adc
addb
imul
sub
adc
call
leave
push
or
inc
fisttpll
icebp
pop
out
pop
mov
fsubl
adc
test
icebp
les
jge
into
stos
jae
push
mov
adc
loop
test
stc
pushf
jg
jg
cmp
pop
dec
sbb
dec
adc
adc
es
jp
add
fwait
push
insb
and
sbb
nop
gs
lret
xor
subb
mov
jb
xchg
adc
fwait
cwtl
sub
shll
mov
inc
shll
sub
cltd
dec
add
in
fstl
es
adc
shl
cld
fcomip
es
addr16
movsb
mov
mov
or
cld
call
stos
and
mov
repnz
pop
cs
rcrb
inc
aaa
shll
mov
pushl
outsb
test
in
xor
scas
inc
mov
push
sub
ljmp
pop
incl
jp
cmp
cltd
mov
pop
jp
mov
scas
sbb
jp
lcall
jmp
arpl
sbb
scas
imul
dec
aam
add
mov
adc
scas
outsb
push
sbb
mov
sub
out
loope
jg
adc
mov
mov
stc
movsl
jmp
inc
adc
ucomiss
xor
cmp
xchg
push
std
dec
inc
xor
or
sar
ljmp
in
push
xor
dec
addb
mov
sbb
call
ja
jmp
fistl
daa
adc
jg
push
ret
and
sbb
stc
mov
dec
and
loope
pop
mov
aaa
int
pushf
push
or
jmp
cld
cs
insb
jge
test
pop
cmc
in
in
jno
jmp
jno
and
xchg
sub
xor
mov
ficomps
add
mov
arpl
call
sti
hlt
mov
clc
es
ret
clc
ret
call
push
push
mov
pushl
mov
xchg
or
fildl
sub
mov
xchg
call
xchg
inc
mov
push
and
fmulp
stos
sbb
pop
lret
mov
adc
fcomip
pushl
andb
andl
in
rorb
jge
incl
sub
xor
sub
in
add
int3
lcall
aas
push
imul
pop
arpl
push
in
add
xlat
mov
sar
in
ljmp
adc
leave
ret
rcrb
push
cmp
push
pushf
bnd
jle
push
ret
add
les
push
push
addr16
ficoms
lcall
testl
cwtl
jne
cmpl
lcall
ljmp
popa
das
daa
mov
mov
dec
and
inc
xchg
mov
pop
idivb
xor
push
test
xlat
ja
outsl
enter
shll
push
push
inc
aam
sbb
into
sub
cmpsb
ljmp
mov
jno
mov
aad
inc
insb
aaa
xor
mov
repnz
jb
mov
pushl
fstps
out
bound
loop
imul
xchg
dec
stos
cvtps2pd
mov
rcr
mov
testl
das
inc
mov
mov
jmp
xchg
stos
aas
ret
add
outsl
loopne
jo
fdiv
lcall
pop
sub
mov
sbb
std
or
lcall
hlt
pop
adc
mov
dec
mov
mov
fnstsw
fisubs
xchg
dec
jnp
ficoms
ljmp
pop
popf
xor
sbb
int3
xchg
adc
jno
cmp
push
ss
daa
out
or
fisubrl
call
sar
sub
sar
jns
sub
decl
push
mov
out
or
lods
ret
fcompl
lcall
jmp
pushl
xor
out
jne
push
fadds
push
dec
or
adc
xchg
cmp
jmp
pop
mov
mov
sbb
adcl
pushl
push
loope
int3
pop
xlat
idivl
xchg
jb
jb
jbe
outsb
sahf
test
fcos
call
cmp
in
sub
ljmp
push
lods
aaa
das
jae
push
gs
stos
push
call
pusha
insl
add
pop
addps
fstps
bound
push
pop
enter
sbb
inc
ret
sbb
jg
pop
mov
xchg
and
pop
mov
mov
sarb
dec
rcrl
pop
ljmp
mov
daa
mov
mov
pop
in
fwait
jno
xchg
in
sbbb
out
add
mov
xor
enter
adc
xor
sub
and
sar
call
push
cwtl
iret
scas
test
pop
notl
and
or
mov
pop
cmc
jg
and
push
stc
mov
add
dec
orb
test
dec
xchg
inc
mov
fidivl
sbb
fildll
adc
std
fld
fsubp
stos
js
inc
repz
cli
out
ljmp
pop
jl
pop
sbb
aaa
push
test
incl
cmpsb
and
insl
cs
pop
test
sbb
mov
call
incl
shll
jo
sbb
leave
nop
lods
lahf
lea
dec
or
movsb
dec
ss
jmp
sbb
lret
xlat
fstpl
aam
and
sbb
push
jle
lods
xor
decl
je
mov
jge
mov
cmp
add
xchg
movsb
ds
fwait
dec
loop
add
andl
xor
cmpsb
outsb
lret
xlat
add
enter
jnp
jno
test
xor
call
in
sbb
orb
mov
inc
fimuls
fwait
inc
pop
stc
mov
mov
inc
es
cld
insl
jmp
push
jbe
xchg
cmp
dec
add
aam
sbb
jl
jg
push
mov
xor
dec
push
in
mov
or
mov
loopne
push
xchg
mov
push
cmp
mov
or
out
imul
add
das
add
mov
jle
lcall
arpl
arpl
in
mov
popa
gs
mov
sbb
movsb
out
inc
mov
jmp
gs
mov
jae
in
add
xor
xor
pop
mov
daa
call
add
into
lahf
or
jecxz
xor
mov
enter
ljmp
mov
add
decl
dec
or
or
xchg
insb
push
mov
pop
loop
jns
lcall
jmp
dec
mov
add
scas
jb
std
js
jg
mov
pushl
sub
call
inc
jae
call
mov
in
lret
mov
or
ljmp
ret
pop
sub
rcl
mov
sbb
outsb
in
testb
mov
bound
and
mov
lahf
xchg
mov
es
pop
loope
lcall
sahf
idiv
sub
movb
sbb
or
add
jl
cmp
dec
loopne
lcall
bound
pusha
icebp
icebp
xor
jmp
push
adc
enter
mov
mov
adc
fcoms
cmovne
mov
jg
xor
lcall
ss
sub
sbb
pop
push
jb
outsl
inc
or
pushl
jecxz
outsb
out
sbbl
das
sub
mov
jmp
enter
pushl
std
adc
add
push
repnz
add
clc
hlt
shrl
sahf
inc
push
push
jg
xor
popf
adc
push
mov
add
insl
rcrb
decl
jnp
popf
mov
inc
cmc
ss
mov
xlat
sbb
fdivl
pushl
std
stc
sbb
inc
in
mov
into
in
cmp
and
out
push
pushl
sbb
xchg
adc
adc
or
jle
data16
lret
mov
push
je
xchg
mov
adc
sub
cmpl
push
enter
enter
jmp
or
mov
xor
scas
and
movb
fdivrs
push
fmuls
incl
inc
insl
popa
mov
andb
ss
pop
mov
mov
outsl
jnp
adc
sub
mov
pusha
in
call
adc
dec
mov
pusha
out
mov
pop
or
cltd
push
pushf
in
adc
incl
pop
push
xchg
mov
sahf
fsts
add
dec
scas
adc
test
push
sub
dec
in
hlt
inc
mov
cmc
jmp
pop
shll
inc
pushf
mov
pusha
rorl
movsl
push
andb
cmc
decl
sub
lods
fwait
loopne
mov
fbstp
mov
push
fwait
dec
mov
push
push
mov
xchg
in
lret
imul
out
lds
and
mov
repnz
cmp
ja
out
sbb
push
call
int3
icebp
popa
cmp
inc
lret
jl
mov
add
xchg
xchg
sbb
fidivrs
loopne
jge
mov
daa
push
mov
push
push
sahf
cmp
cmpsl
push
jmp
jmp
mov
push
mov
pop
xchg
and
push
jp
sub
and
or
mov
clc
out
inc
ljmp
sarb
pop
sbb
mov
dec
int3
xchg
int3
call
push
aam
in
call
std
or
add
sub
sti
cli
push
in
jecxz
add
imul
test
decl
imul
js
xor
sub
push
aad
stc
push
arpl
pop
mov
lods
mov
lcall
mov
add
lea
loop
push
adc
mov
cmp
mov
cld
lcall
daa
in
loop
mov
fldt
test
repz
es
int
lds
cmc
mov
mov
clc
pop
mov
ljmp
cmpsb
sti
fs
sub
sarl
inc
fildll
loopne
lcall
repnz
sarl
dec
mov
call
sahf
mov
dec
jp
out
cmp
jmp
cmp
mov
dec
adc
sti
lock
in
xchg
in
cmpsb
nop
pusha
es
stos
aam
test
daa
hlt
and
xchg
pop
arpl
lcall
inc
xchg
push
and
aaa
inc
mov
ljmp
enter
dec
test
mov
sbb
lcall
je
xor
pop
lcall
or
inc
push
gs
xor
gs
mov
jmp
fistpll
adc
es
dec
sub
bound
xchg
repz
jno
pop
push
lcall
xor
sbb
sbb
jp
push
cmp
pop
in
rorl
addr16
insb
mov
or
mov
fiadds
xchg
xor
mov
cmp
aaa
jo
dec
xchg
xchg
insb
lret
mov
bound
div
dec
cs
movsb
mov
push
sub
mov
xchg
cld
jnp
or
mov
jecxz
icebp
je
pop
callw
mov
pop
ror
xor
push
mov
xor
jbe
mov
sbb
test
fldcw
ljmp
test
cmp
ds
out
jno
repz
jne
in
cmp
call
inc
adc
mov
imul
loopne
sahf
sub
scas
inc
pop
in
mov
adc
jmp
mov
mov
sahf
add
push
sbb
pop
add
in
cmpsb
js
out
mov
jmp
mov
mulb
dec
in
loopne
stos
xorb
xchg
fcom
rcll
inc
lret
in
clc
ljmp
cmpsl
jae
in
xorb
int3
ds
addr16
out
push
dec
and
xchg
jne
dec
es
loope
cld
jmp
pop
out
lods
adc
movsb
call
inc
fcomip
jmp
test
inc
lds
cli
dec
cmp
sub
mov
jg
lcall
movsl
mov
sbb
pop
int
scas
sti
arpl
cmp
ljmp
jne
mov
dec
adc
xor
cmp
add
dec
lock
mov
jmp
lcall
stos
fstl
xlat
cmp
sbb
pusha
inc
cmp
jbe
xor
jo
push
fucom
in
sub
mov
or
div
loopne
imul
jmp
jl
mov
dec
repz
in
inc
faddp
test
imul
incl
push
popf
and
popa
lcall
sarb
push
addr16
lahf
pop
cmp
mov
push
ds
aas
and
cmc
mov
scas
mov
mov
popa
cmpsl
std
lret
dec
cmpsb
lods
call
pop
lahf
cs
test
xchg
clc
mov
mov
or
mov
subl
xor
pushf
rcrb
ret
aaa
pop
movsb
lret
mov
ds
jle
es
and
xchg
cmp
inc
fcmovne
push
test
rorb
dec
lret
nop
clc
pop
fnstcw
es
xor
imul
xor
scas
enter
fisttps
jmp
inc
dec
and
sub
popl
stos
jp
fwait
pushl
xor
lods
jns
pop
dec
ja
sarl
adc
ljmp
ret
or
sti
inc
aas
inc
sbb
mov
addr16
xor
pushf
sti
mov
xchg
sub
sbb
mov
xchg
aad
inc
cmp
adc
jbe
push
pop
or
les
stos
push
dec
mov
mov
pop
cmpsl
flds
dec
sub
adc
inc
shl
adc
hlt
sahf
mov
pushl
pop
hlt
ljmp
jecxz
dec
mov
bound
inc
sbb
lods
aaa
mov
daa
enter
jg
dec
addr16
sbb
dec
pop
add
pop
ret
dec
dec
lahf
je
mov
insb
aaa
cld
dec
je
mov
mov
rol
mov
push
push
cmp
xlat
lret
push
and
mov
pushl
and
mov
lock
add
in
addl
popf
rcll
call
insl
js
cltd
and
insl
cmp
mov
pop
andl
out
lret
mov
jmp
fadds
mov
faddl
inc
jbe
and
xor
mov
hlt
ljmp
sub
dec
out
je
sub
inc
xchg
out
or
stos
sub
jecxz
jmp
clc
jns
or
jnp
mov
cmc
leave
push
jmp
outsl
das
mov
jno
jno
in
xor
clc
sbb
sti
adc
sub
test
icebp
jmp
add
outsl
jge
push
jmp
push
push
jns
addr16
jbe
pop
xor
std
call
fsubl
insb
add
push
out
lods
movaps
repz
out
pop
cmp
push
jge
call
jbe
inc
in
pop
pop
sub
cld
out
addr16
adc
or
mov
stc
jle
loopne
xchg
jno
inc
in
sbb
inc
iret
inc
sti
imul
movsb
hlt
push
add
ljmp
clc
or
inc
xchg
add
test
pop
xchg
push
test
adcl
test
xchg
inc
stos
sbb
dec
int3
fwait
dec
hlt
std
dec
mov
sahf
adc
jnp
in
jb
ds
jae
fdivl
mov
mov
ljmp
sti
mov
iret
and
jne
test
ds
xor
icebp
std
ret
stos
clc
mov
int
mov
mov
jo
jl
aad
adc
in
dec
push
ljmp
loopne
mov
mov
call
pushf
repnz
xchg
xor
mov
call
mov
xchg
jb
or
scas
xor
mov
add
mov
cld
xchg
lahf
add
cmp
fcomps
mov
cmp
mov
mov
inc
mov
incl
fisttps
hlt
call
cmpsb
jle
push
lahf
add
dec
mov
out
inc
fstl
xchg
int3
add
dec
xchg
out
repz
sub
sar
mov
popf
into
insb
push
mov
lahf
jle
sub
popf
cld
push
mov
decl
decl
adc
pop
jbe
adcb
ss
test
call
mov
cs
out
dec
dec
in
stos
mov
lret
gs
repz
jmp
clc
push
call
popa
xchg
sub
adc
xchg
jb
fcmovnu
icebp
rcrb
fisttpl
jp
mov
subb
pop
stos
out
clc
cmp
arpl
dec
jno
in
inc
movsb
sub
int
xchg
jo
out
mov
int3
mov
cld
ret
sbb
sbb
cmpb
push
movhps
les
sar
inc
cwtl
pop
cmpsl
xchg
hlt
lret
inc
xor
xor
aas
rolb
mov
pop
jmp
loop
adc
add
dec
xchg
dec
adc
add
pop
add
cmp
jle
pop
in
dec
and
dec
roll
xor
xchg
mov
push
push
jbe
add
xlat
call
dec
aas
or
xor
bound
std
es
js
add
add
ljmp
decl
testb
pushl
or
fsubrl
adc
cltd
das
mov
mov
inc
das
cwtl
sbb
mov
mov
nop
insb
lods
enter
cli
or
outsb
icebp
or
inc
fwait
xor
jmp
fldcw
or
outsl
xchg
mov
stos
xchg
sbb
stos
cs
dec
dec
call
iret
stc
icebp
test
in
mov
outsb
lds
fdivrl
push
sarb
jns
test
mov
sub
and
xor
lcall
lret
cmp
popf
or
or
or
in
jno
push
lret
imul
stc
inc
push
movsb
xchg
jnp
pop
jge
in
repz
mov
push
nop
out
lock
push
das
test
sbb
sbb
jmp
push
or
mov
shlb
and
or
test
rdmsr
pop
xorb
lcall
pop
out
cwtl
repnz
pop
repz
popf
jbe
mov
jno
dec
mov
sub
push
decl
sahf
es
inc
aas
add
dec
push
push
es
inc
cli
loope
add
sbb
loopne
mov
mov
mov
mov
in
mov
push
xor
push
jne
inc
scas
xor
shll
sbb
adc
and
push
jo
popf
and
outsl
xchg
cmp
xchg
loop
dec
fs
imul
in
gs
ljmp
movsb
mov
jmp
loope
inc
dec
sub
jbe
mov
jmp
data16
jmp
push
enter
cmpsb
and
notl
aad
mov
jmp
mov
dec
mov
out
std
out
jb
jmp
lcall
lock
shrb
jmp
pop
in
inc
add
hlt
sub
lock
mov
fidivs
movsl
xor
shlb
pop
mov
fistpll
push
or
sbb
lcall
lret
pop
stos
xchg
outsl
loopne
lret
fidivs
jg
xchg
xor
fsub
pop
das
clc
push
es
push
insb
pushf
fsubrs
popa
add
aam
add
mov
push
inc
cmp
stos
addb
inc
sub
leave
lahf
into
dec
loop
sub
xchg
xchg
loopne
or
ja
xchg
pusha
fbstp
mov
imul
cmpb
mov
adc
pop
inc
cld
pushl
pushf
fwait
lock
jl
mov
adcb
jecxz
bound
add
add
insl
push
roll
add
insb
ret
shll
pop
inc
lods
sbb
adc
jp
repnz
fnstcw
std
inc
inc
mov
popf
pop
js
push
push
aad
or
incl
push
loopne
xorb
ljmp
out
hlt
ficoml
mov
es
cmpsl
fs
cmp
pop
sti
decl
roll
test
sbb
ljmp
dec
cmp
mov
adc
outsl
call
cmp
cwtl
dec
clc
ret
mov
cmpsb
ljmp
idiv
fsubr
or
leave
and
xor
dec
add
scas
outsl
mov
hlt
jmp
repz
sti
jmp
out
rcr
insl
jg
loope
inc
cmp
stos
dec
push
sbb
sahf
int
cmpsl
and
add
jo
out
fimull
xchg
fwait
addb
fsts
sbb
xor
mov
aaa
mov
insl
std
sbb
rcr
pop
testl
hlt
addb
push
xor
mov
mov
inc
movsl
mov
adc
dec
sub
pop
xchg
sub
lods
xor
addb
adc
sbb
mov
inc
push
popl
inc
dec
fldenv
int
loop
xor
mov
mov
mov
int3
xchg
sub
incl
cmp
daa
jge
mov
scas
mov
inc
jp
jae
fs
sub
sub
xchg
sub
push
dec
pop
pop
push
cs
mov
mov
mov
insb
fwait
lahf
lahf
aaa
pop
sbb
test
dec
in
dec
incl
lock
lahf
or
pop
je
movsl
xchg
xlat
jle
and
adc
seta
in
xchg
adc
pop
cmc
sbb
in
push
sub
xor
test
mov
jecxz
ds
mov
out
xor
xchg
lret
hlt
int
adc
mov
pop
push
jl
call
in
and
add
and
rcrl
mov
ds
mov
xchg
dec
mov
fsubs
mov
mov
jp
jb
call
inc
or
std
incl
imul
or
push
aad
mov
and
cmpsl
mov
dec
mov
incl
loop
sbb
mov
pop
jg
outsb
add
mov
stos
in
sbb
aas
push
pop
insb
jecxz
cmp
inc
lock
jg
lea
int
cli
sub
cmp
cld
cmp
mov
clc
sbb
addr16
lods
pushl
bound
mov
stc
aaa
dec
nop
sub
mov
mov
test
call
sub
push
fcmovu
ret
aas
xchg
repz
rcrb
pop
lods
clc
cli
mov
mov
lret
incl
fbstp
sbb
dec
mov
call
sbb
aad
adc
xlat
es
adc
movsb
dec
lods
push
stc
xlat
dec
ret
das
stos
mov
push
mov
rcrb
fldt
inc
dec
das
out
mov
pop
les
jmp
cmp
push
shrl
adc
push
inc
adc
rcll
sar
ljmp
xor
stc
test
loop
mov
test
mov
mov
test
mov
jns
and
rcrb
int3
outsl
xchg
add
shll
push
jg
pop
std
dec
add
sub
in
lret
or
js
lret
ja
jbe
push
mov
add
dec
sbb
in
out
adc
cwtl
mov
jnp
push
sub
and
adc
fucom
call
xchg
popf
push
cmp
sbb
imulb
aad
xor
xor
xchg
movsb
mov
lock
jge
dec
cmpsb
inc
inc
or
jg
sbb
jbe
add
aas
pop
orl
inc
xor
and
insb
xor
pop
mov
mov
icebp
lcall
pop
outsl
in
sub
xor
scas
mov
pop
mov
add
push
mov
cmp
mov
lcall
and
notb
pushf
mov
xor
jle
xor
dec
shlb
clc
imul
sub
dec
int3
cmp
sti
jmp
mov
and
scas
and
outsb
arpl
ss
movsl
pop
popf
sub
movsl
lds
fwait
cmp
call
sbb
dec
add
cld
rcrb
jne
cmpsl
popf
decl
icebp
pop
jb
sbb
jmp
adc
mov
ror
fiadds
lods
lret
incl
cld
out
cli
fs
adcl
cmp
daa
xlat
and
cmp
sbbl
and
insl
jmp
xor
sbb
mov
inc
pop
hlt
mov
sbb
mov
adc
lods
sbb
in
mov
ja
jns
lcall
shlb
jle
mov
es
sub
out
adc
outsb
cld
xor
mov
lcall
cmp
sbb
hlt
push
test
push
decl
push
int
fs
cld
cmp
fbld
insb
mov
cmpsb
test
xor
push
out
clc
dec
add
iret
daa
stos
sub
daa
ss
adc
pusha
je
lds
clc
cmp
arpl
jmp
ds
mov
jmp
jb
xchg
jno
mov
jl
mov
pop
push
xchg
sbb
xchg
imul
adc
add
push
sub
cltd
sub
add
loope
sbb
les
repnz
scas
fnstcw
push
cld
cld
pop
xchg
cs
inc
jo
inc
xchg
lds
jno
out
jle
mov
testb
lret
jb
xor
sub
out
loop
jmp
jae
in
inc
fimull
iret
sahf
cwtl
xchg
sub
stos
mov
xor
cmp
sbb
mov
dec
scas
cltd
inc
xor
mov
mov
decl
mov
xchg
sar
call
adc
lods
cmc
pop
xor
imul
hlt
lcall
adc
lret
subb
fucompp
push
jno
ret
in
pushl
push
test
pop
xchg
cwtl
mov
loopne
and
sbb
ljmp
add
pop
mov
js
mov
jno
int3
ret
inc
mov
jmp
xchg
sbb
pop
imul
jne
fldl
mov
je
fdivr
ja
incl
mov
inc
mov
int3
xor
mov
inc
daa
mov
out
push
popf
and
jmp
sub
mov
jne
jle
push
incb
adc
adc
iret
loop
pop
inc
imul
jae
jmp
lret
xor
cmp
inc
adc
mov
movsl
icebp
sarb
mov
and
mov
cmp
shlb
outsl
sub
out
jns
lret
jbe
lcall
sub
out
lods
push
mov
imul
jns
jmp
arpl
inc
jo
out
test
leave
hlt
add
and
shll
cmc
lcall
cmp
incl
sbb
psubusb
ret
ss
push
leave
dec
cs
dec
out
cmp
rcrl
mov
sti
ljmp
fs
sbb
fsubp
out
fsubl
jg
mov
cli
xor
sti
rcll
mov
imul
out
incl
mov
xlat
jb
outsb
sbb
sbb
ss
jae
out
jo
adc
jbe
insb
incl
sub
push
xchg
pop
pop
bound
pushf
xor
ss
in
xchg
arpl
mov
incl
fwait
icebp
stos
adc
push
sbb
cltd
jge
fdivl
fs
daa
cmp
decl
leave
xor
lods
clc
fidivl
fcoml
pusha
nop
and
inc
lock
std
leave
pop
xor
lds
push
lret
ret
pusha
ret
add
aaa
cwtl
arpl
adc
inc
sbb
or
scas
push
daa
btrl
push
int
movsl
xor
and
adc
pop
stos
sbb
dec
js
jns
pop
mov
jg
mov
leave
std
out
int
aad
mov
or
int3
into
jg
fiaddl
xlat
fsubl
jbe
dec
mov
xor
lret
ret
ljmp
sarb
sub
neg
xchg
jg
xchg
ss
pop
in
lea
add
inc
clc
js
xchg
push
punpckhbw
mov
icebp
jle
int3
idivl
mov
in
mov
or
decl
pushl
adc
pop
sub
clc
add
outsl
aam
int
dec
repz
into
ud0
movl
or
ret
out
or
nop
jo
ret
sbb
jmp
insb
pop
lock
test
pop
pop
outsl
in
mov
jns
ja
jnp
pushf
or
mov
inc
cld
imul
sti
pop
add
cmpsb
addr16
inc
xlat
jns
jge
xlat
mov
jmp
in
mov
mov
popf
mov
jge
pop
dec
mov
cmpsl
jns
in
push
call
xor
jne
shrl
add
stos
mov
mov
jnp
enter
fst
adc
xchg
aaa
cmpsl
xchg
loope
adc
sub
test
std
push
cs
mov
push
fadd
mov
or
andb
adc
mov
xlat
jo
loop
scas
mov
std
sub
xor
insb
cmc
nop
decl
xchg
push
pop
stc
popf
ret
push
mov
inc
inc
and
sub
sbb
sbb
incl
mov
and
jns
jno
mov
inc
cld
cwtl
mov
cld
iret
and
in
mov
decl
ret
inc
mov
cwtl
es
insb
or
jbe
push
stos
push
jae,pt
pop
mov
rolb
push
pop
xchg
lcall
loope
or
mov
jbe
mov
leave
xorb
or
shrb
mov
cltd
mov
sbb
sub
cmpsb
cmp
in
xor
mov
mov
push
mov
inc
add
inc
push
add
add
cmp
cld
lcall
cmpsb
xor
insb
mov
or
clc
call
sahf
arpl
sub
sub
test
sub
mov
xchg
mov
mov
icebp
out
sbb
mov
push
mov
test
repnz
pushl
mov
xor
jl
lahf
cmp
dec
jl
mov
fcoml
push
add
out
mov
stos
ficompl
xchg
push
mov
ficompl
sbbl
sti
loopne
xor
add
sub
fcomp
xchg
adc
pop
mov
push
push
outsb
push
mov
mov
iret
je
inc
lock
sub
pop
mov
mov
push
sti
cmp
call
call
jle
aad
and
shrb
add
cwtl
mov
sti
sub
push
repz
iret
call
pop
sbb
mov
pop
mov
arpl
dec
mov
cld
dec
fmuls
leave
xor
js
sbbb
jg
movsl
jg
jbe
ret
pop
lea
cld
dec
ja
mov
outsb
xchg
jmp
daa
xor
out
shlb
inc
pusha
aaa
push
pushf
jmp
sub
dec
and
cmp
les
call
or
cmp
sub
mov
int
or
leave
cmc
cmp
xchg
call
dec
stc
dec
std
stos
data16
loope
pop
sahf
les
leave
mov
test
and
inc
inc
stc
xchg
lds
insl
or
mov
lock
out
add
push
add
hlt
push
loopne
jl
and
pop
dec
mov
test
xor
push
or
js
aas
and
inc
jmp
inc
sub
dec
cmp
and
mov
loopne
ljmp
popf
mov
aad
lret
cltd
mov
lcall
lcall
divb
xor
xor
fcmove
pop
adc
push
lret
outsb
lret
jg
push
stos
xchg
loop
testb
dec
and
and
add
clc
ljmp
fwait
dec
int3
test
add
mov
jg
mov
lcall
fcmovnu
and
jne
stos
dec
clc
pusha
sub
insb
mov
mov
mov
dec
xchg
sub
loop
pushf
xchg
test
lret
imul
fisubrs
pop
sbb
ljmp
jo
out
aas
repz
rorb
pushl
push
sarl
frstor
push
fwait
pop
xor
mov
inc
ds
negl
aad
xchg
jmp
pop
dec
fcomip
lcall
dec
loopne
jle
outsb
sub
mov
aaa
rorb
mov
and
repz
jo
scas
aaa
add
cmova
cmpsb
out
jo
outsb
ljmp
shl
inc
shlb
or
add
shll
sar
inc
pop
jno
sbb
les
clc
notb
xor
aam
jg
outsl
mov
sti
addr16
in
sbb
cs
xorl
and
or
sar
cmpsl
rcl
xchg
divl
pop
adc
int3
push
push
cwtl
cmc
mov
ljmp
jl
ljmp
xchg
jl
add
pop
or
aaa
pop
das
mov
movsl
pop
dec
out
add
cmp
sbb
mov
dec
call
xchg
adc
stos
cmc
push
or
xorl
jns
mov
cmp
adc
icebp
jbe
testl
outsl
jle
or
adc
mov
lcall
jae
movsl
sub
aam
into
jg
mov
xor
fcmovu
mov
lcall
adc
loop
sub
cmp
in
dec
sub
push
dec
xor
inc
out
cli
cmpsb
mov
std
mov
ja
jae
sahf
adc
adc
adc
call
jl
das
in
out
sahf
bound
sbb
inc
je
in
fneni(8087
hlt
fwait
push
jne
decl
leave
or
or
inc
sbb
sbb
adc
jp
and
imul
jmp
fs
push
fcoms
cltd
cmp
dec
jle
mov
add
in
jne
in
pushl
in
out
or
ja
mov
push
add
jg
rolb
decl
dec
inc
cmpsl
xchg
add
lret
repnz
xchg
cmp
shlb
adc
xchg
cltd
mov
mov
mov
and
fcoml
mov
rcrl
call
xchg
movsl
fs
xchg
repnz
ret
cmp
lret
fcoms
mov
insl
in
frstor
enter
cmp
call
fwait
out
lahf
lret
cld
xlat
lret
push
pop
fcmovnbe
mov
jb
mov
ljmp
pop
push
dec
push
fstps
cmc
xchg
aad
mov
push
and
sbb
incl
adc
test
mov
add
inc
add
mov
xor
fcomip
cmpsb
cltd
push
push
enter
mov
push
out
jnp
mov
ret
decl
inc
jnp
or
xchg
xchg
dec
dec
mov
xor
pop
mov
and
jg
incl
push
adc
les
push
mov
ja
pop
cmp
fcoml
xchg
mov
jmp
pushl
mov
pop
jle
mov
jae
loope
in
lods
and
dec
out
cmc
mov
movsb
decl
pushl
adc
mov
push
jecxz
hlt
mov
lods
xor
test
ljmp
in
aad
stos
xor
or
popf
sbb
push
mov
sub
loope
cmc
popa
lods
jl
or
cmp
les
push
imul
mov
lods
jp
pop
mov
mov
mov
sahf
mov
pop
mul
imul
jmp
pop
sbb
pop
or
ret
lcall
push
int3
mov
jecxz
sub
sbb
in
mov
sahf
push
je
repz
ror
out
call
repz
pop
cmp
lea
addr16
ljmp
cmp
mov
ret
out
xor
orl
inc
sub
or
lcall
dec
sub
fisubrs
jge
pop
and
inc
push
es
mov
push
sub
pushl
loop
dec
decl
push
dec
cmp
movsl
dec
cmpsl
push
inc
scas
mov
fmul
vmread
sbb
decl
in
les
or
mov
mov
jmp
clc
push
pushl
pop
or
std
xchg
mov
sub
mov
das
outsl
push
xchg
jecxz
lcall
pop
les
dec
js
aaa
stos
cmp
xchg
pushf
stos
xor
mov
jae
pop
mov
or
sub
inc
lea
mov
mov
jmp
pop
dec
jecxz
xor
dec
sbb
repz
shrl
jmp
cmp
mov
pushl
inc
stc
out
fsubrl
xor
pop
cmp
push
inc
scas
add
cmp
lcall
sbb
jnp
js
js
mov
jae
test
adc
imul
mov
jmp
filds
jnp
cmpsl
ficoml
je
arpl
inc
aam
lahf
mov
in
dec
ret
cmp
jg
decl
adc
fs
xchg
push
fsubl
cmp
aam
or
call
cld
adc
ret
sub
pop
ret
arpl
aas
fsubrs
js
fistps
lcall
in
mov
shl
push
stos
sub
dec
in
jns
fbstp
jmp
into
sarb
in
lret
xchg
pop
dec
outsb
ret
or
sub
adc
dec
cli
call
popf
mulb
mov
dec
mov
test
je
aas
js
testl
lretw
es
xchg
rcr
dec
sbb
push
popa
ljmp
cmp
test
adc
sti
jmp
int3
lea
popf
shlb
mov
xchg
xor
dec
je
jbe
aas
mov
decl
scas
clc
jmp
rcrb
pop
hlt
or
stos
inc
ret
orb
pop
cs
pushf
cs
decl
in
loope
and
pop
je
dec
inc
js
inc
jo
ficoms
in
nop
adc
adc
jg
sbb
out
rcl
aad
push
sar
enter
dec
jb
enter
lcall
adc
fisttpl
out
jge
rcrl
pop
mov
jle
adc
loopne
in
push
pushl
pop
lret
lods
jns
aas
sbb
jne
xchg
mov
clc
lret
arpl
neg
fildl
loope
fwait
incl
adc
push
add
movsl
rcll
xchg
insb
and
lahf
cmp
stc
inc
pop
mov
add
pop
ret
adc
pop
xrelease
pop
and
es
lcall
ja
jno
cli
sbb
pop
xchg
cwtl
movsb
inc
ljmp
lds
imul
cmp
test
mov
pop
cmp
ljmp
divl
ret
rclb
jp
fidivrs
mov
pop
add
scas
cmc
int3
cmp
sub
outsl
ljmp
jl
leave
push
cltd
out
pop
lods
pusha
pop
pusha
pop
add
lods
call
dec
lea
pushl
insb
and
jno
mov
mov
lahf
test
fistpll
adc
ficompl
in
mov
jmp
aaa
jne
sbb
cmpsl
mov
ljmp
rolb
mov
push
loope,pn
pop
adc
cwtl
rorb
aam
add
fnstenv
call
movsb
es
xchg
out
pop
stos
dec
dec
mov
js,pn
cltd
xorb
int3
inc
ja
sub
ljmp
push
pop
shrl
lods
inc
sub
mov
adc
pop
test
cmpsb
push
and
adc
lcall
add
repz
mov
push
clc
push
inc
jae
test
cwtl
xor
ja
cmpsl
test
or
adc
mov
push
call
test
lret
mov
cli
adc
jl
enter
jle
mov
aad
ss
ljmp
add
push
mull
cmp
lea
cmp
fs
int3
daa
hlt
mov
and
dec
lock
loop
or
ret
mov
in
test
pop
out
js
push
sbb
jmp
jl
inc
mov
pop
mov
setns
call
xor
cmc
adc
xchg
mov
mov
test
lods
mov
ja
stos
fdivrp
mov
cli
push
adcl
stos
fcoml
inc
dec
dec
push
and
jecxz
mov
out
lods
idivb
incl
cld
adc
int
add
loopne
loop
insb
stos
in
outsb
cmovo
sbb
pushl
fstps
cwtl
pusha
sbb
and
fldenv
roll
in
mov
cli
arpl
mov
call
xor
cld
push
dec
lret
decl
test
xchg
mov
shrb
pshufw
movsl
sbb
adc
mov
movsb
mov
bound
in
sbb
fists
push
xchg
push
push
sub
ffreep
dec
dec
bound
popf
mov
cli
mov
dec
mov
in
mov
std
lcall
add
mov
dec
add
call
add
sbb
mov
push
sub
outsl
add
add
outsl
incl
enter
xchg
jnp
inc
es
pop
mov
mov
cli
fbstp
adc
fisttpll
movsl
add
fucomi
cli
pop
dec
jae
xor
incb
or
pop
sbb
mov
push
inc
pushl
pushl
inc
inc
aas
dec
adc
jbe
cs
movsl
incl
scas
mov
mov
int3
jp
or
push
scas
test
mov
decl
in
mov
and
das
jns
fs
dec
clc
incl
out
xor
push
popf
leave
jbe
dec
sbb
decl
pop
cld
popa
mov
sarb
mov
xchg
unpcklps
test
shll
pop
icebp
ljmp
fdivr
add
dec
jl
add
or
lret
add
fwait
mov
call
jno
add
into
push
or
std
dec
lret
divl
data16
lret
pushl
ss
stos
mov
nop
cmp
inc
or
mov
pusha
jge
mov
mov
aad
pop
scas
sti
ss
je
jnp
push
and
inc
mov
inc
and
call
cmp
dec
or
pop
test
jnp
shll
jnp
repz
cmp
jecxz
incl
pop
xchg
lods
xchg
sahf
cmpsl
jp
and
mov
int
out
sbb
inc
test
sbb
jg
mov
sub
jle
push
pop
stos
addr16
cmpb
aad
jmp
jae
mov
and
push
popa
ja
adc
testb
in
inc
dec
fs
pop
push
xchg
hlt
test
movsb
das
add
nop
jl
xchg
nop
or
repz
dec
in
data16
rcl
lret
cmpb
inc
fbld
mov
push
jg
inc
mov
lret
push
incl
mov
stos
push
leave
call
std
jmp
add
movsl
cmp
in
mov
in
xchg
jmp
sbb
mov
std
xchg
sub
dec
and
in
les
mov
filds
lcall
cwtl
mov
enter
stos
incb
xchg
in
xchg
dec
lock
cmp
clc
pop
fadds
add
jmp
push
ret
sub
movsb
mov
mov
cld
mov
je
cwtl
inc
fucomip
repz
out
xchg
incb
fwait
add
dec
es
outsb
in
add
mov
adc
sub
out
add
rorl
xor
mov
call
icebp
cmp
pusha
cmpsb
mov
lret
dec
and
and
int3
sbb
jb
pushl
cmpsl
fidivrs
shll
mov
jle
ret
fcmovne
add
imulb
popf
popa
pop
das
lcall
daa
cmp
bound
scas
dec
xor
inc
clc
sbb
mov
movsl
lcall
pushf
paddb
decl
lret
push
pop
push
pusha
mov
icebp
cld
lcall
pop
out
call
sub
adc
lret
mov
loop
outsb
mov
call
incl
cmp
xor
pop
mov
nop
sub
call
mov
dec
jg
jb
cmp
into
mov
pushl
insl
and
jnp
sbb
mov
pop
mov
cmp
inc
into
frstor
shlb
out
dec
pusha
movsl
inc
daa
cmp
jge
xchg
aas
pxor
or
in
sub
ret
push
xor
shll
loop
dec
int
dec
cwtl
or
in
hlt
pop
pop
pop
sbb
or
adc
icebp
or
jg
aaa
pop
add
cld
into
sub
ljmp
into
sub
jmp
loopne
push
fs
loopne
lcall
sti
mov
add
lods
scas
xchg
pushl
lcall
xor
aaa
mov
pop
loope
lcall
sub
data16
std
data16
xchg
cmpsb
int3
dec
cmp
sbb
push
sbb
add
lcall
sbbb
inc
and
lock
mov
sahf
push
xchg
mov
jmp
dec
push
loopne
test
push
cmpsl
bnd
xchg
and
into
clc
scas
mov
xor
jmp
das
dec
add
mov
es
xor
fwait
inc
jmp
xor
cmp
adc
mov
aas
cwtl
xor
incl
adc
into
js
push
sbb
std
test
ss
dec
pop
loopne
lcall
iret
insl
sub
mov
das
dec
add
aam
push
inc
in
xchg
add
mov
dec
shll
fdivp
pop
sti
sbb
xor
xor
xchg
jle
mov
aaa
xor
and
std
dec
add
sti
ror
sbb
rcll
outsl
lock
ljmp
decb
xchg
scas
test
std
test
sbb
ja
fcos
ljmp
add
mov
adc
sub
call
sbb
pushf
adc
cmp
mov
xchg
call
fs
ljmp
mov
xchg
sub
and
mov
aaa
add
in
mov
cmpsb
fadds
sbb
in
out
jecxz
sahf
outsb
jg
mov
outsb
jmp
or
sysenter
dec
insb
mov
movsl
lods
dec
stc
pop
cmp
pushl
lcall
xchg
jb
jnp
gs
pop
icebp
bound
or
fs
jg
xchg
dec
or
shr
adc
inc
push
imul
mulb
shll
xchg
rcrl
ljmp
xchg
sbb
mov
lea
lods
fldenv
cwtl
cmp
mov
mov
cwtl
rcl
inc
loop
ret
fistpll
ret
stos
dec
popf
mov
aaa
repz
push
in
out
jge
sar
mov
sub
call
lods
sarb
adc
cli
or
shll
mov
mov
lret
lea
cs
push
sbb
xchg
or
jnp
jge
mov
or
cmc
out
cmpl
push
sub
ljmp
inc
sbb
or
cmp
loope
lahf
pop
pop
std
loope
outsb
ret
ljmp
add
popl
cli
addr16
popf
out
or
cmp
inc
xor
int
clc
push
xchg
ljmp
sbb
in
xor
xchg
sub
inc
inc
dec
mov
pop
out
idiv
out
clc
dec
adc
inc
or
loope
jne
aam
cmp
sarl
sbb
std
jmp
int
jb
iret
repz
jp
es
mov
sti
adc
inc
js
fincstp
dec
push
sbb
mov
aam
mov
fcomip
jecxz
outsb
mov
ja
out
push
pop
xor
push
inc
int3
mov
pop
cs
push
jb
jmp
mov
jne
and
pop
xchg
cmp
data16
cmpsb
xor
lret
cmp
ret
sbb
cs
ljmp
daa
dec
pop
xchg
addr16
mov
scas
lret
pop
inc
mov
fwait
xor
sti
aam
mov
cld
decl
lods
jbe
mov
push
adc
in
cmp
pop
dec
cmpsb
sbb
push
out
mov
imul
xchg
pop
sub
call
fmuls
icebp
adc
mov
push
mov
test
pop
or
xchg
sub
push
xchg
push
jg
jmp
mov
test
es
mov
dec
jg
xchg
stos
incl
jg
jo
int3
outsl
mov
mov
jle
jecxz
mov
push
push
or
data16
lret
arpl
out
jnp
push
movsb
xchg
push
pop
dec
stc
dec
mov
nop
sub
push
mov
rorb
cli
cmp
jo
stos
xor
fimull
sub
mov
pop
mov
adc
add
sub
push
adc
pcmpeqw
int3
push
add
add
xchg
dec
add
fisubl
ljmp
cmc
jle
ljmp
ret
stos
ljmp
ret
mov
jo
pop
sahf
push
cli
jmp
or
mov
add
loopne
leave
loope
pop
cmc
scas
pop
daa
lock
inc
stc
sbb
out
lds
push
das
push
stos
sub
test
aad
xchg
push
fiadds
cli
cwtl
push
aam
imul
mov
int
sbbb
pusha
sbb
shr
jo
mov
mov
pop
push
arpl
fcomip
ljmp
add
sbb
std
push
imul
aam
mov
inc
data16
pop
decl
aam
mov
lock
pop
fistps
sub
mov
mulb
outsb
lods
xchg
mov
jp
push
andl
sbb
jmp
stos
inc
pop
in
push
icebp
jns
adc
cmp
sbb
jmp
cmp
cmp
xchg
clc
mov
and
out
cmp
mov
pop
ljmp
mov
pushl
inc
pop
adc
fwait
das
dec
data16
es
ljmp
ja
js
xor
popf
ret
in
inc
insl
sub
out
cmp
fistpll
dec
call
fildll
dec
or
push
xor
in
add
and
aas
xor
sti
push
jne
lock
pop
cmpsb
or
gs
mov
pop
daa
xor
push
hlt
mov
xor
mov
test
jmp
jbe
call
add
mov
xor
lods
dec
pop
idiv
cmp
jae
inc
xchg
iret
aam
adc
daa
ss
sti
jle
and
aam
das
clc
ljmp
mov
pop
push
pop
fdiv
arpl
or
sub
xchg
and
call
outsb
jmp
gs
xchg
fstl
inc
pop
xchg
mov
sub
daa
lret
test
inc
mov
fcmovnbe
jbe
jge
js
or
sbb
push
inc
add
jg
sbb
nop
inc
xlat
nop
xor
dec
cmp
psubb
call
sbb
jb
jp
ficomps
jge
jp
jle
ljmp
pop
ljmp
adc
push
inc
xor
lock
lea
sti
push
pop
and
sub
xchg
mov
cmc
push
fs
inc
add
aam
fsts
xchg
lcall
leave
pop
daa
push
ficoml
lods
push
mov
pop
mov
insb
cmp
push
std
cmp
cmpsb
gs
inc
movsl
sti
or
or
inc
cld
push
into
jb
mov
pop
mov
xor
sbb
inc
nop
mov
jae
xor
sub
push
lcall
repz
xor
jb
aaa
fistpl
ljmp
fcmovnbe
lcall
fdivp
imul
jo
ja
insl
inc
cmp
add
rolb
das
clc
dec
lea
ds
das
xchg
mov
lcall
das
jmp
push
loope
pop
mov
mov
dec
push
call
lahf
mov
sub
into
sbb
cld
dec
lcall
jecxz
fs
shrl
sub
push
loopne
shrl
movsl
adc
fs
sbb
lcall
pop
mov
dec
rcll
cmpb
addr16
out
in
xchg
pop
mov
das
js
or
xchg
cltd
sub
out
sub
xchg
push
lods
ror
cltd
add
into
push
mov
mov
adc
pop
call
or
lods
mov
in
dec
add
cli
incl
or
push
push
dec
cmp
xor
int3
push
cwtl
incl
lods
and
das
add
or
aam
dec
repz
xchg
fsubrl
ds
mov
loope
pop
mov
ud0
fidivrs
xchg
xor
lret
jg
call
sub
je
movsb
push
ret
sbb
and
cli
push
test
add
outsb
mov
push
push
mov
mov
or
hlt
dec
sbb
or
test
lods
push
jp
cmp
call
and
scas
and
movsb
jnp
clc
andl
dec
inc
pop
imul
sub
dec
xorl
mov
dec
or
frstor
pop
dec
pushf
cmp
fistps
inc
mov
mov
cmp
scas
sahf
and
xchg
or
repz
sub
incl
shlb
xchg
mov
pop
ljmp
aaa
xor
jb
sarl
fidivrl
push
idiv
lcall
mov
scas
fsubl
dec
mov
std
es
or
mov
in
aaa
dec
call
mov
push
lock
sahf
mov
cmp
mov
psubusw
cmpsl
push
lcall
push
jmp
aam
adc
std
mov
jae
sbb
sbb
jl
xchg
mov
enter
ljmp
aaa
push
xchg
or
decb
mov
mov
mov
mov
dec
aam
adc
cmovle
in
icebp
jp
bnd
cmpsl
sub
pushl
enter
arpl
inc
and
xor
imul
jmp
mov
mov
inc
ficompl
push
jae
pop
ficomps
int3
lods
lret
ds
xchg
dec
pop
movsl
test
or
ja
iret
inc
stos
fdivrs
movsb
mov
stos
jmp
aad
outsb
push
sahf
jbe
lahf
cmp
es
ljmp
faddl
das
cmp
lock
sub
stc
out
je
xchg
adc
jmp
mov
push
lods
push
jae
xchg
cmp
cmpsl
add
push
jns
cmp
imul
sbb
fildll
popf
sub
adc
xor
js
dec
adc
aas
jnp
adc
int3
data16
into
clc
xor
call
and
cmc
test
mov
ja
ret
fcmovnu
mov
out
inc
inc
push
cmp
jg
inc
jle
mov
pop
jmp
adc
jno
jmp
ficoms
jbe
decl
mov
mulb
adcl
ss
xchg
push
inc
nop
add
push
ss
decl
ljmp
fcomps
jl
lcall
ljmp
lcall
jns
push
cltd
jmp
mov
lcall
fstl
ret
mov
and
les
rorl
or
cmp
cmp
dec
pushf
pop
jns
dec
test
push
test
iret
inc
push
mov
xchg
je
call
bound
push
cmp
xor
pusha
sub
xchg
sbb
push
inc
jp
or
xchg
pushl
push
adc
and
push
out
sub
lods
data16
aaa
push
enter
pop
test
mov
arpl
push
sti
sti
xor
aam
imul
mov
jb
dec
cmp
cmc
int3
imul
incl
rorl
or
ljmp
ret
cmpsb
movb
js
jg
sbb
mov
jmp
mov
mov
dec
mov
push
or
mov
outsb
mov
inc
xor
or
cmpsl
ljmp
push
es
cli
adc
xchg
push
outsb
mov
push
dec
adc
loopne
add
pop
pop
stc
ds
cmp
fsubrl
inc
cmp
sub
sbb
pop
fiadds
dec
addr16
push
adc
iret
cwtl
xchg
mov
clc
clc
xor
scas
or
jns
mov
sbb
enter
push
mov
incl
pop
fwait
shrb
or
jno
adc
test
cmp
add
and
je
js
or
movsl
call
outsl
in
movsl
lds
mov
decl
pop
push
mov
outsl
stc
out
into
mov
fldenv
lods
sahf
lock
lds
and
loope
xchg
adc
lcall
pop
insb
xor
pushl
outsb
enter
stos
adc
and
sti
repnz
sub
jg
add
or
scas
xchg
push
push
lods
add
add
es
daa
lock
sub
out
pop
loope
scas
outsl
cmp
mov
mov
sub
in
inc
aad
jbe
jmp
dec
inc
out
mov
or
dec
xchg
adc
push
adc
std
jne
push
and
aaa
cld
call
cmp
add
adc
in
push
mov
jg
push
mov
call
bnd
lea
inc
sbb
jns
inc
out
jb
rol
push
in
scas
cmpsl
scas
fiaddl
or
js
arpl
pop
sub
popa
shlb
dec
push
xlat
sbb
mov
stc
xchg
dec
data16
movb
adc
inc
repnz
sbb
sar
decl
cltd
or
mov
rol
negb
sub
aas
call
mov
add
inc
inc
leave
lahf
mov
lcall
cmpsb
xlat
xchg
jl
dec
out
femms
sar
movl
mov
adc
cmp
mov
ja
in
shll
xor
out
dec
arpl
jg
add
push
mov
or
arpl
pushl
push
pop
sarb
roll
jmp
jmp
inc
mov
bound
or
cld
call
xchg
lock
cmp
or
aas
sbb
mov
daa
clc
sbb
inc
mov
mov
fcmovu
pop
jae
mov
cmc
decl
xchg
in
aam
mov
inc
mov
ss
cmp
scas
cmpsb
sub
into
aaa
std
lcall
das
into
or
push
cmp
lret
fists
push
out
sbb
subl
mov
push
fisttpl
push
test
ljmp
call
adc
jmp
dec
and
fsubrl
dec
pusha
push
std
mov
jp
push
push
push
cli
out
dec
movsl
pop
js
shlb
subl
scas
or
mov
xchg
sbb
cmp
xor
sbb
add
sbbb
and
mov
lret
jbe
push
push
loope
ret
aas
aam
pop
ja
pop
jmp
pop
add
out
lcall
incl
pop
sub
mov
popf
and
pop
lcall
dec
scas
or
mov
scas
dec
rclb
hlt
jns
pushl
aas
sub
dec
call
sbb
cwtd
mov
and
addl
ljmp
cmpsl
popa
daa
subl
and
fimull
inc
sub
cltd
xchg
mov
nop
ljmp
xor
into
dec
sbb
inc
in
sub
or
jmp
aad
and
mov
fisubl
cmp
insb
cmp
adc
sub
inc
les
mov
ljmp
repnz
pop
sahf
fisttpl
icebp
push
imul
rolb
xchg
mov
and
rol
inc
mov
fidivs
add
dec
add
ss
gs
cmp
jmp
incl
mov
rcl
inc
lods
in
lea
sbb
pop
adc
in
nop
dec
mov
mov
dec
xor
pop
inc
xchg
mov
test
pushw
push
pop
pushl
popa
cmp
mov
sub
dec
pop
jle
pop
push
cmpsb
mov
jne
decl
cmp
pop
in
push
push
notl
sub
dec
xchg
sbb
mov
inc
iret
ljmp
add
and
push
add
sub
shll
repnz
decl
test
mov
das
push
dec
adc
out
stos
mov
cltd
addr16
shlb
push
jmp
xchg
ljmp
ss
inc
push
mov
lea
pop
cmpl
cmpsl
ds
movsl
push
adc
or
stc
lock
rclb
fcomip
pushl
cwtl
xchg
mov
mov
dec
or
cmp
rcl
incl
pop
movsl
push
cmp
mov
pusha
out
xor
test
call
push
adc
add
inc
imul
sbb
push
repz
mov
and
notb
rolb
lret
sbb
add
jne
arpl
push
neg
lret
pushf
mov
pop
ss
loope
test
pushl
sbb
xchg
sbb
lock
xchg
je
xchg
inc
sbb
imul
incl
dec
imul
sbb
cmp
mov
add
decl
int3
mov
enter
mov
and
inc
int3
je
test
incl
pop
jno
push
pop
lods
pop
jecxz
scas
push
mov
ja
stos
hlt
mov
lcall
iret
sub
mov
dec
bound
les
push
pop
enter
inc
cmpsb
lcall
push
xor
sbb
push
xchg
icebp
push
add
mov
sbb
fdivrp
incl
insl
mov
inc
jnp
push
js
fildll
adc
movsl
jmp
sti
pop
and
in
dec
data16
sub
xor
xchg
je
mov
or
dec
lcall
xor
loope
pop
ret
or
loop
push
je
aam
xchg
or
call
pushf
pop
jge
xchg
jge
jae
pop
mov
ss
and
sbb
pop
mov
addr16
call
insb
mov
mov
out
lret
sarb
inc
jecxz
in
xlat
jg
mov
ret
ja
sub
pop
pop
cmc
aam
and
lcall
jge
cmpsb
cld
xchg
mov
rcrl
xchg
jbe
in
adc
cmp
xor
loop
jno
xlat
rcrl
sub
in
fs
xchg
ljmp
cmp
fldcw
sbb
aad
clc
clc
inc
pop
sbb
mov
mov
mov
fucomi
jns
inc
out
push
mov
dec
test
lock
and
pop
xchg
cltd
jmp
mov
mov
dec
movsb
in
lods
rclb
out
lcall
sbb
mov
ret
add
decl
inc
jle
mul
adc
cmp
pop
and
lahf
imulb
incl
jmp
enter
push
cmovne
sbb
push
imul
ljmp
push
xchg
jae
lcall
sbb
push
addr16
dec
std
stc
mov
addr16
inc
cmp
or
lcall
jne
es
neg
nop
addl
pop
rorl
cmp
mov
cmc
or
cmp
mov
in
in
in
loop
jg
adc
sahf
xor
push
cli
mov
std
lahf
adc
out
mov
mov
loope
push
call
lods
mov
outsl
movsb
xchg
cltd
loopne
cmp
popa
repz
pop
sub
lcall
mov
fwait
int
daa
insl
inc
push
ss
dec
mov
and
leave
mov
aad
xchg
xchg
add
inc
ds
nop
mov
cmp
adc
xor
jg
sbb
pop
push
mov
inc
sahf
inc
cmp
iret
mov
xchg
not
adc
add
mov
cmp
inc
mov
daa
sti
dec
fnstenv
sub
insb
incl
sahf
scas
pop
add
push
out
mov
pop
xchg
loope
test
jns
cmp
cltd
mov
enter
xlat
mov
xchg
andb
xchg
sub
sbb
stos
pushf
inc
int3
jmp
mov
out
imul
xchg
rclb
jne
or
jbe
hlt
imul
mov
cmp
pop
das
or
imul
stos
xchg
mov
and
xor
push
pop
sub
enter
and
adc
adc
dec
insl
add
jmp
notb
rcl
movsb
sahf
mov
aad
sub
test
inc
aad
mov
aam
jmp
aam
jo
xchg
add
or
icebp
jmp
xor
pop
fwait
aam
jmp
adc
aas
inc
es
pop
and
xchg
mov
cmp
lcall
mov
ror
lahf
insl
test
adc
mov
popa
sbb
clc
add
lea
lcall
inc
arpl
push
scas
lds
sub
adc
imul
mov
and
decl
sub
stos
das
das
add
aam
sub
loope
inc
ljmp
clc
lock
dec
mov
lock
sub
arpl
jmp
lock
loope
shl
cltd
aam
test
cld
jmp
or
outsl
rolb
jb
inc
jl
repnz
jmp
xchg
cmc
mov
xchg
inc
movb
movsb
push
and
les
lods
and
mov
mov
lcall
xchg
or
sarl
mov
pop
hlt
xor
lods
cli
adc
andl
add
and
jmp
mov
mov
in
shll
cmp
gs
pushl
in
jae
pop
push
sahf
les
fnstenv
enter
shll
aas
jmp
repz
ljmp
fucom
hlt
xorb
rolb
inc
xchg
in
pushf
popa
and
jno
daa
or
mov
cmp
sub
pusha
js
fcmovb
sub
clc
sub
xchg
sbb
out
js
inc
or
das
gs
and
outsb
push
shlb
rclb
add
or
fisttpl
ss
js
bound
sti
sar
mov
fdivp
leave
in
jbe
mov
sub
call
jg
test
cmpsb
in
insb
sub
lcall
adc
dec
dec
insb
cld
mov
dec
xchg
ljmp
xor
push
jae
push
imul
mov
sar
sbb
xchg
adcb
cmc
xchg
pop
fidivrl
movsl
mov
incl
mov
sub
sti
push
jle
pop
xor
push
cltd
jnp
jecxz
pusha
pop
lret
mov
xor
mov
aas
inc
es
ret
cmp
incl
dec
shrb
xor
mov
push
lds
mov
aam
sbb
ficompl
decl
lahf
es
rolb
nop
jg
lcall
jnp
mov
push
pop
mov
xchg
lcall
lret
xchg
out
enter
inc
inc
push
mov
outsb
movsl
ja
mov
mov
lds
push
jmp
jo
push
fwait
std
outsb
sub
shl
sub
int3
sbb
xchg
inc
cmp
cmove
dec
lret
insb
mov
addr16
sub
push
das
cwtl
aas
dec
mov
jne
pop
cmp
mov
fbstp
into
fidivl
pop
push
mov
lcall
or
or
inc
psrad
xor
dec
xchg
jbe
stos
insb
js
sub
mov
pop
cmpsl
gs
inc
jmp
shll
test
pop
push
sbb
adc
movsb
scas
popa
push
cmp
sahf
sbb
dec
enter
mov
aad
add
mov
incl
mov
sti
loop
jecxz
dec
sbb
inc
inc
jnp
or
loope
icebp
pushl
cwtl
xor
das
adc
setg
xchg
fildl
and
sti
fiadds
xor
push
dec
shlb
push
mov
dec
pop
lahf
cmp
push
lods
pop
mov
rorb
mov
cmp
outsl
mov
popf
cmp
aam
cld
cmc
jbe
push
int3
je
ret
pushl
call
xor
pop
or
push
std
mov
das
add
mov
jg
mov
dec
push
sbb
outsb
jb
inc
pop
adc
jmp
and
pushl
jnp
dec
out
add
je
jg
pop
fildl
or
xchg
call
loopne
orb
test
das
lds
hlt
dec
lret
fdivp
hlt
mov
outsb
test
out
clc
iret
dec
aaa
lcall
xorl
fists
xchg
lret
mov
xchg
and
stos
dec
popf
sbb
in
cmp
pushl
test
or
push
js
or
loopne
xor
in
xor
call
mov
push
mov
arpl
inc
loop
mov
jge
fsubrl
fimull
lret
mov
add
js
mov
std
adc
cld
sar
push
jmp
enter
test
mov
outsl
outsb
pop
andl
outsb
sbb
jp
cmp
xchg
lret
xchg
jl
std
cld
mov
int3
pop
pop
les
sbb
popf
dec
roll
cmpsl
pop
pop
jg
sub
adcl
loopne
incl
and
ljmp
jmp
xchg
xchg
adc
sbb
cs
insb
int3
xor
xchg
jnp
shrb
lcall
test
test
cmpsl
out
xor
push
add
sti
push
push
out
xor
outsl
in
mov
lcall
dec
push
rcll
lahf
dec
mov
into
sti
inc
mov
mov
sbb
jmp
int
mov
inc
aaa
cmp
cwtl
mov
es
adc
jns
pop
sub
jmp
sub
cwtl
lods
mov
fs
mov
or
sarl
cmp
pop
lds
mov
in
into
fwait
aam
fwait
and
aaa
mov
push
lret
fwait
addl
icebp
mov
ret
fcomps
and
sbbl
pusha
dec
adc
or
pushl
jp
mov
lds
les
or
sbb
lock
xor
ret
sbb
call
fs
pop
call
lcall
push
mov
jne
mov
dec
sbb
mov
fmull
dec
jge
imul
lock
jmp
jg
out
cmp
dec
push
into
sbb
sbb
pop
sub
roll
test
mov
lcall
jg
sub
mov
loope
test
pop
jle
inc
push
and
mov
adc
call
rcr
sbb
jae
adc
pop
int
nop
enter
add
mov
dec
sarb
cld
and
jb
popf
xchg
call
jle
mov
out
lret
pop
jb
jp
jl
test
popf
out
into
inc
fimull
cmpb
cltd
adc
ficomps
ficoml
repz
stos
idivl
cmp
add
movsb
fnstenv
push
mov
repnz
xchg
mov
call
push
sub
xlat
dec
les
je
jmp
mov
cmp
ss
push
loop
std
lcall
pusha
adc
ror
sub
push
rclb
or
call
jbe
pushf
cmp
stc
pushf
cmpsl
cmc
icebp
daa
dec
cmp
push
faddl
push
int
imul
mov
js
cmpsl
push
sarl
jp
dec
out
push
test
stos
jmp
pop
inc
mov
mov
test
jg
iret
pushl
fists
mov
adc
mov
mov
test
or
sahf
adc
xor
xor
js
mov
enter
push
aad
pushl
sbb
cmpsb
ljmp
push
jle
jb
inc
sbb
push
push
inc
mov
out
jg
mov
push
lods
cltd
cmp
mov
scas
cmpsb
add
sub
icebp
in
fldt
loope
jg
jmp
cmpsl
sub
pop
jns
add
daa
rclb
jae
cwtl
or
ret
pop
cmpsl
popa
jmp
shlb
dec
pop
movsl
lods
jmp
clc
lret
fstl
mov
or
lcall
test
hlt
mov
push
dec
pop
sbb
pushf
sub
lret
fildll
andb
pop
add
lock
add
lea
cmp
cli
ret
aas
test
xchg
jbe
ret
adc
mov
cli
ss
jl
stos
or
adc
enter
out
aas
out
stc
mov
jno
pop
jo
mov
lock
mov
incl
push
pop
out
pop
adc
pop
into
jae
pop
jmp
sub
mov
lea
movsl
aas
cmc
ret
leave
dec
imul
and
rcrl
test
push
lcall
inc
ljmp
xor
and
jmp
je
lcall
dec
sub
sbb
call
mov
fdivrp
test
mov
in
int3
jb
mov
arpl
inc
decl
repnz
and
mov
popa
pushf
jns
out
jp
pop
xchg
add
mov
ljmp
mov
mov
mov
jo
push
pushl
jno
ds
jbe
in
enter
movsb
test
loope
ret
push
mov
inc
cwtl
sbb
xchg
jo
or
fs
pop
fimuls
pop
pop
mov
je
std
cmpsb
cmp
pop
testb
mov
and
jg
sbb
leave
mov
dec
mov
mov
stos
arpl
mov
push
loope
jns
and
test
mov
push
das
stos
or
jge
mov
jmp
xchg
cmp
lock
aaa
sub
jne
adc
or
cmp
inc
xlat
lods
test
gs
inc
mov
iret
rcrl
dec
adc
test
enter
lock
call
inc
mov
daa
cmp
addb
push
xchg
int3
data16
repz
jg
popf
push
imul
sti
pusha
push
push
or
cmp
fwait
push
push
rcrb
cmp
and
decl
dec
push
pop
movsb
bound
jno
shrb
lock
mov
push
mov
rorl
int
xor
mov
dec
sbb
ljmp
push
gs
notb
mov
je
into
xchg
ss
fdivr
pop
push
es
ljmp
jb
jo
or
dec
dec
xchg
sbb
jns,pt
psrad
aaa
and
ljmp
or
xor
rolb
mov
pop
sub
outsb
out
mov
ljmp
lods
ficompl
push
sub
cltd
cmc
scas
cmpsb
xor
or
mov
mov
xor
and
ljmp
jp
dec
loop
cmc
adc
xchg
sbb
andl
jb
fmull
push
mov
out
jge
mov
xchg
xchg
mov
scas
subb
and
sbb
push
pop
ja
sub
pop
or
adc
jg
mov
hlt
in
add
iret
nop
or
lods
mov
mov
lea
inc
scas
call
stos
scas
mov
sbb
inc
stos
sbb
mov
shrl
xchg
xorl
das
lcall
adcb
into
rolb
jecxz
movsl
add
das
push
test
pushl
addr16
ficoms
pop
out
rolb
and
push
fstpl
or
ss
mov
push
filds
fmull
xor
dec
arpl
xlat
roll
ljmp
aaa
lcall
sbb
inc
outsb
mov
mov
mov
insl
sub
xchg
lcall
dec
ljmp
dec
into
popa
and
in
loop
and
ljmp
sub
add
in
jp
lock
test
scas
movsb
jecxz
add
rcrb
rcl
dec
mov
jg
xchg
cmpsl
test
es
mov
mov
insb
cmp
xorl
mov
insl
and
sbb
cmpb
sbb
fdivp
out
cmp
inc
sahf
into
cmpsl
icebp
test
das
addr16
dec
mov
push
jl
pop
push
jg
incl
mov
in
jle
popa
lahf
inc
dec
addr16
sub
sti
sbbb
mov
dec
inc
push
xchg
sarl
lret
decl
inc
push
mov
out
inc
xchg
leave
jge
int
incl
std
iret
jge
or
loope
and
insl
sarb
inc
mov
arpl
mov
dec
pushl
std
mov
divb
and
xlat
xchg
iret
push
push
icebp
pop
jecxz
jo
out
cltd
stos
mov
sub
pushf
mov
mov
add
sahf
adc
enterw
jg
call
lea
aad
pusha
popa
stos
inc
inc
sbb
movsb
adc
inc
std
pop
pop
ja
lcall
mov
es
mov
xchg
sbb
aad
cmp
insb
nop
fcomip
jmp
jecxz
repnz
sub
fmull
sbb
sbb
loopne
lods
call
imul
cli
mov
xchg
inc
lret
mov
inc
push
lds
stos
jecxz
test
adc
push
ja
ja
shlb
sarl
in
inc
cwtl
jg
rorl
lea
bound
incb
icebp
pop
ljmp
cmp
push
jle
shll
outsb
int
in
cld
pop
add
sub
ljmp
cli
sbb
ljmp
jg
pop
push
incl
fisttpll
call
sbb
fildl
sbb
or
cmp
xchg
mov
pop
xor
inc
push
jnp
mov
vmovaps
gs
mov
fildll
push
adc
pop
movsb
sbb
cmp
fnstsw
out
clc
pop
fimuls
decl
mov
cmp
dec
lods
fildl
hlt
jmp
pop
icebp
jl
dec
sbb
push
fsts
mov
imul
repz
out
push
jnp
push
and
pop
jl
inc
jbe
adc
enter
inc
cmp
sahf
mov
int
call
in
inc
lahf
sbb
test
mov
cmp
shlb
cmp
sub
decl
fnstcw
int3
cmp
js
sbb
xchg
out
js
mov
xlat
cmpsb
push
lcall
and
inc
sbb
cmp
ja
es
inc
enter
lcall
jmp
xchg
dec
cli
mov
ret
pushf
sub
push
arpl
fs
sub
jg
inc
stos
jae
sub
sbbb
xor
cmp
mov
std
cmp
sbbb
mov
mov
outsl
jae
loopne
sub
stc
lds
in
ljmp
in
outsb
push
sub
stos
iret
insl
fwait
pop
mov
repz
aas
xchg
dec
mov
mov
xchg
jg
fsubrl
aad
pop
int
lea
push
test
xlat
mov
imul
stc
mov
cmp
mov
jae
lock
nop
jnp
push
push
ds
lcall
mov
or
insb
inc
mov
push
and
inc
pop
xchg
ficoms
mov
rcll
dec
sbb
mov
sub
ret
lods
push
cld
mull
aaa
jne
jmp
pop
push
cmp
lea
out
rcrb
adc
and
mov
mov
pop
clc
or
lcall
aas
cli
jns
inc
cmp
lcall
push
outsb
cmp
sti
cmp
loop
inc
pop
jb
jg
sub
fwait
inc
xor
cld
or
add
pushf
ljmp
mov
cmp
aad
call
mov
jne
jne
data16
push
jmp
in
cli
jmp
out
orb
dec
dec
mov
mov
push
mov
mov
stos
xor
popa
adc
mov
jmp
dec
lahf
in
fwait
loop
cmpsl
jo
rcrb
push
clc
cmp
arpl
das
mov
iret
sbb
push
decl
sarl
mov
pop
out
or
jecxz
leave
mov
jecxz
rcrl
loopne
adc
in
call
mov
xor
leave
lahf
dec
adc
lock
pop
shlb
inc
sarb
call
xorb
adc
jge
push
jo
adcl
pop
test
pop
and
and
fwait
repnz
rclb
jae,pn
sti
popa
inc
scas
arpl
adc
sub
stc
fnsave
jbe
sbb
bound
mov
xchg
inc
sub
call
loope
lods
sbb
in
lcall
push
test
das
jns
dec
popf
mov
adc
std
lcall
ss
test
iret
lahf
data16
jg
xchg
push
cmpsb
cmc
movsb
cmp
add
daa
negl
add
xchg
bound
ficoml
jmp
jno
mov
push
call
shl
jle
out
ds
fisubrl
pushl
mov
adc
mov
popa
and
je
mov
cltd
leave
sbb
mov
out
mov
push
ds
push
daa
roll
decl
dec
cld
pop
lods
cltd
not
repz
inc
jmp
push
aam
incl
clc
add
push
push
jne
adc
xchg
fimull
sub
push
in
add
mov
test
lahf
int
rcrb
arpl
out
fsubr
fdivr
sahf
icebp
gs
jmp
sub
out
fprem1
cli
sub
and
in
mov
dec
jp
fstpl
or
jg
pop
negb
cwtl
mov
jo
in
pop
stos
mov
lock
test
movsl
jo
and
decl
xor
or
jg
stos
dec
mov
push
and
lgs
movsb
es
imul
mov
push
int
aas
xchg
cmpsl
ret
outsl
dec
jbe
cmp
daa
cli
or
shr
test
xchg
outsl
imul
jg
add
add
sbbb
mov
add
mov
sub
test
sbb
neg
dec
ret
mov
outsl
cwtl
xor
push
fisubs
jg
fdivs
mov
dec
sarl
loopne
push
inc
sub
mov
push
in
pushl
clc
je
clc
add
jge
adcb
mov
pop
test
leave
imul
push
mov
jg
fwait
pop
add
popf
jmp
imul
jg
and
ljmp
sub
add
lahf
or
xchg
inc
clc
inc
outsl
in
jae
jo
pusha
sbb
orl
cmp
and
jp
decl
pop
inc
stos
fsubl
add
dec
icebp
rorl
shl
js
call
mov
rorb
push
mov
ud0
sarl
mov
sar
jmp
enter
mov
mov
mov
js
shrb
decl
mov
jle
icebp
mov
ds
inc
jp
aaa
das
push
pop
arpl
ljmp
orl
sbb
lds
cmp
cwtl
cli
aaa
push
cmp
xchg
or
mov
call
es
rcrb
pop
cmp
pop
hlt
inc
gs
aam
dec
addb
adc
pop
jns
loopne
mov
push
clc
xor
pop
rcrb
lahf
imulb
xchg
xor
enter
incl
jmp
push
pop
cmp
movsb
and
sub
shll
inc
dec
xchg
sbb
andl
push
daa
test
subb
xchg
push
inc
dec
adc
in
add
in
decb
loope
pushl
pop
add
pop
xchg
inc
mov
ljmp
inc
add
lret
faddp
ret
cs
inc
cld
mov
mov
call
stos
addr16
push
insl
cmp
aam
and
and
xchg
sbbl
push
fnstcw
mov
dec
push
fdivs
mov
call
insb
outsb
mov
add
sarl
repz
sbb
incl
mov
lret
mov
loope
scas
rep
mov
mov
sub
incl
mov
into
fs
lods
je
lret
sbb
push
and
ret
adc
pop
cmp
shlb
lock
ljmp
popf
cwtl
xor
popf
sub
xorl
mov
or
decl
jo
xor
cmp
repz
sub
and
cli
outsl
jo
shrb
repz
outsl
fisubrl
insl
mov
frndint
xchg
sbb
sub
loop
int3
dec
mov
ljmp
pop
push
or
data16
fwait
dec
fistpl
or
cmpb
push
shr
lahf
push
scas
aam
xchg
cmp
jno
dec
orb
mov
sbb
pop
sub
movlhps
pop
fsqrt
loopne
pop
das
mov
sub
cmp
mov
xchg
mulb
out
xchg
adc
lock
ljmp
push
pop
pop
dec
xchg
faddp
inc
jno
push
ds
sbb
or
call
mov
and
addl
cmp
arpl
jl
jmp
jo
mov
jo
mov
outsl
mov
and
scas
xor
sahf
and
int3
xchg
add
icebp
loope
ljmp
ret
mov
popf
in
xchg
inc
sub
jne
fwait
mov
dec
mov
xlat
lcall
loopne
stos
and
arpl
ja
sbb
rorl
push
add
jg
int3
push
dec
scas
sahf
mov
fdivp
out
inc
shl
scas
or
pop
inc
xchg
movsl
jnp
inc
roll
mov
cld
jmp
lock
in
mov
pop
add
cmp
or
fsts
ret
testl
push
andb
inc
jmp
inc
int3
rcrb
mov
xchg
xchg
insb
or
call
jmp
dec
fstps
dec
mov
sti
stos
and
mov
sarb
decl
std
pop
push
mov
into
xor
test
notb
cmc
sbb
mov
fimuls
lock
out
push
sbb
cmpb
xor
add
pushl
and
push
fists
faddl
or
movsb
adc
call
sti
outsb
sbb
pop
hlt
sub
mov
movsb
push
or
xchg
pop
movsb
mov
call
test
fs
popa
fdivs
mov
sub
push
shrb
fiaddl
pop
push
mulb
imul
call
xchg
jno
xchg
adc
cmp
lods
sbb
jns
jg
push
mov
fnop
sbb
out
in
sbb
dec
xchg
push
incb
cmp
inc
fnstsw
jg
das
jns,pt
bound
out
mov
pop
add
hlt
add
sub
scas
ds
ljmp
xor
out
push
rcr
cmp
in
cmp
in
jmp
push
xor
pop
push
push
clc
testb
mov
xor
stos
mov
addr16
repz
pop
movl
cmp
outsb
sbb
ljmp
repnz
xor
adc
xchg
xchg
lahf
in
sub
jp
ljmp
and
outsb
iret
call
and
xorb
fwait
sbb
clc
inc
es
push
or
jmp
lock
jmp
or
es
stos
jo
mov
movsb
mov
mov
jg
add
pusha
js
movsb
xchg
popa
jecxz
addb
ljmp
dec
xchg
cmp
jbe
inc
jge
and
insb
shrl
sete
jecxz
incl
in
mov
inc
mov
cmp
les
mov
das
add
loop
into
jmp
in
lock
push
jns
clc
repz
pop
add
enter
shl
outsl
mov
pop
into
sbb
mov
jle
jg
push
mov
ljmp
mov
fiaddl
xor
lret
push
call
popf
sub
inc
movsb
div
jmp
and
hlt
jno
repnz
pushf
or
jle
ljmp
or
sub
cmpsb
jl
pop
dec
fcomps
out
jbe
outsl
push
fbstp
add
mov
out
divb
pushf
push
inc
cmp
loopne
add
aam
mov
inc
jp
mov
inc
call
stc
movsl
xor
inc
leave
or
sub
pop
out
push
rorb
and
lods
xchg
add
cmp
or
push
int
ljmp
adc
mov
jmp
mov
mov
or
out
and
cmp
or
lret
add
sbb
push
std
xor
stc
sahf
sti
jo
adc
std
jmp
inc
sub
imul
loope
outsl
nop
fcomps
lock
and
pusha
int3
mov
into
jecxz
xchg
xchg
or
out
rolb
gs
xchg
inc
mov
and
or
pop
mov
adc
cmp
push
and
mov
icebp
or
and
test
push
jo
mov
lock
cmp
fs
xor
outsl
ja
pushf
push
xchg
nop
enter
mulb
jmp
lea
pop
sub
jb
mov
pop
xchg
xchg
jns
cmp
push
lea
js
mov
mov
lcall
incl
xor
sbb
nop
sbb
mov
inc
mov
insl
stos
mov
es
andb
mov
idiv
jmp
rcl
call
push
dec
ds
test
popl
aam
testb
push
mov
imul
decl
in
mov
nop
mov
or
pusha
pop
inc
out
shlb
incl
xor
out
aas
mov
sahf
and
rolb
arpl
sar
ljmp
inc
inc
repz
test
pop
fildll
sbbb
dec
into
inc
ret
push
sub
mov
pop
adc
out
pop
test
je
scas
dec
and
ja
add
decl
lea
loop
fisubl
pop
sub
in
inc
cmpsl
jl
sbb
popa
mov
push
sub
jmp
pmaxsw
shll
pushf
loopne
xchg
cwtl
pop
jns
mov
mov
push
rcrb
out
jle
push
fcmovb
sub
sbb
dec
lahf
pop
or
hlt
jle
out
popf
adc
add
insb
call
adcl
sub
mov
xchg
lea
insl
inc
setg
aaa
push
cmp
in
popa
inc
shrw
mov
xchg
dec
mov
icebp
ss
incl
xor
dec
or
sbbl
cltd
mov
cmpsb
orb
sbb
xchg
push
cmp
cmpsl
lcall
into
push
lock
arpl
hlt
inc
mov
xor
decl
sahf
sub
push
cwtl
pop
push
inc
xchg
sub
inc
popl
sub
scas
add
call
pop
imul
int
jnp
clc
xchg
fstpt
sub
dec
xlat
inc
mov
ljmp
sahf
adc
fisubrs
push
outsl
es
je
push
adc
xor
push
mov
adc
lock
mov
push
jg
push
xchg
stc
ljmp
mov
outsl
push
add
std
iret
push
xchg
jg
xchg
stos
loope
ljmp
mov
mov
or
push
sub
ficompl
push
jg
mov
popa
out
dec
insl
ds
add
ficomps
cli
daa
insb
xor
jg
jmp
or
lahf
sub
iret
adc
ja
fs
lcall
dec
dec
arpl
mov
shl
xlat
je
jno
bnd
push
dec
pushf
rclb
movsb
cmp
out
cmp
xchg
cli
sar
fcmovnb
jg
adc
imul
lret
stc
sbb
std
push
xchg
popa
scas
test
push
in
roll
jnp
test
inc
mov
cli
addl
insb
pop
jp
jge
scas
iret
pop
js
pop
rcr
ja
pushl
mov
negb
js
xchg
inc
lret
xor
loop
cmp
fisubl
or
jle
cmpsb
sbb
push
insb
jge
push
pusha
jg
and
test
pop
push
cmp
imul
fmuls
clc
jmp
xchg
jnp
or
inc
js
pop
mov
sti
push
arpl
int3
std
fs
ds
pop
sbb
imul
cltd
js
jmp
pushl
xchg
jmp
and
xor
adc
pop
mov
pop
push
sub
jecxz
scas
adc
push
decl
push
jb
xchg
jns
push
imul
cmp
lahf
jns
mov
cmc
pop
mov
imul
out
adc
rcr
cmpsb
icebp
fwait
roll
daa
dec
mov
xchg
mov
arpl
sti
push
mov
insb
cmp
out
cmpsb
rcl
out
hlt
mov
mov
out
sub
in
push
jg
xchg
inc
cli
hlt
cli
fcomp
call
cmp
push
lcall
or
sub
cli
aam
add
jmp
jo
push
loop
sbb
inc
lods
cmp
pop
test
popf
dec
adc
xchg
pusha
xchg
pushl
mov
shlb
cwtl
cmp
into
sub
arpl
mov
xchg
ja
jp
out
stos
divl
mov
testb
es
cld
cmpb
and
pushl
xor
inc
pop
adcb
sahf
in
and
ret
stos
adc
add
adc
mov
scas
mov
add
mov
cld
fs
xchg
loop
xchg
adc
and
ljmp
mov
movsl
addr16
jmp
lcall
sub
sub
xchg
imul
sub
push
xor
adc
adc
inc
sbb
mov
xchg
lcall
je
cmc
dec
cltd
inc
in
int
push
repz
or
cmpsb
mov
into
push
ljmp
cmc
clc
and
icebp
leave
xchg
ret
popa
mov
jbe
subb
mov
mov
call
xor
out
mov
movsl
push
inc
pop
dec
icebp
scas
xor
jecxz
dec
movsb
scas
cli
pushl
rcrb
insb
outsl
js
inc
push
ret
fisubrl
cs
jmp
mov
xchg
aam
fistl
cmpsb
inc
fs
lods
mov
xchg
jbe
xlat
pushl
aad
fs
and
inc
es
lret
cmp
rolb
shr
jp
mov
mov
clc
in
pop
mov
test
dec
push
in
jb
sub
or
loope
lret
push
out
cmc
cmpsb
jle
incb
nop
inc
lds
test
and
call
inc
fs
inc
inc
xor
jle
test
mov
mov
mov
and
icebp
sbb
mov
lock
cmc
xor
and
decl
cltd
aam
nop
in
sbb
cmp
ss
pop
add
pop
in
mov
xchg
daa
enter
lcall
shrl
xorl
push
out
outsl
and
in
and
cmpb
loop
incl
scas
jl
mov
mov
jb
jg
ret
fs
mov
popa
aad
in
mov
enter
push
add
push
aad
popa
rorl
shrl
stos
jmp
lock
out
cmp
and
push
xor
insb
inc
xchg
mov
ljmp
inc
cmpb
aad
ret
es
fldt
int3
shll
push
std
dec
inc
ljmp
add
adcl
das
ljmp
mov
jg
cld
or
les
lret
rep
decb
insb
jl
repnz
mov
jecxz
sbb
in
addr16
push
aaa
and
dec
add
pop
jbe
or
push
incl
mov
lods
mov
stos
adc
mov
and
cld
mov
decl
sti
adc
xchg
pop
loop
add
jecxz
pop
cld
sbb
incl
inc
dec
fsts
daa
cltd
cltd
and
or
int
popa
rclb
push
aaa
data16
in
jl
cmpsb
aas
mov
lret
jl
cli
dec
popl
push
push
push
adc
dec
cmpsb
mov
mov
ja
push
mov
addb
adc
sub
add
pop
int
in
jecxz
call
mov
fisttpl
int3
cli
mov
inc
stc
cs
and
ss
incl
lahf
push
jns
cmpsl
xor
and
into
enter
and
icebp
lret
sbb
or
mov
mov
mov
push
ss
xchg
dec
cli
addl
or
adc
xlat
repz
add
lcall
fadds
movb
jne
mov
mov
mov
loopne
lods
sub
fsubr
sub
sar
decl
mov
stos
test
cmp
or
lds
fs
lahf
mov
in
and
cmp
lret
loopne
aas
cmpsl
mov
out
dec
lret
sbb
sub
adc
ficoms
xchg
mov
ljmp
cmpsb
clc
ficompl
sbb
mov
mov
push
pop
jmp
sbb
shll
jmp
out
lret
sbb
out
out
and
cmp
pop
fs
pop
popa
inc
mov
pop
sbb
ret
test
cmp
andb
ljmp
mov
adc
sbb
inc
gs
outsb
aad
or
fisubrs
out
pop
adc
stos
sub
lcall
xor
popf
sbb
and
shll
ljmp
std
incl
imul
nop
jl
xor
into
loopne
sbb
aam
out
inc
cwtl
and
lcall
or
pop
test
mov
add
lods
pushf
jno
call
jmp
push
lahf
es
jg
loope
insl
mov
xchg
lea
push
pop
fdivl
xchg
jmp
mov
pop
push
xchg
rcrl
mov
shl
popa
and
out
mov
push
inc
lcall
or
int
mov
dec
iret
roll
cmp
xchg
les
and
push
jge
test
lcall
test
mov
std
mov
inc
out
sar
lret
xor
bound
ljmp
decl
jbe
and
imul
push
bnd
jge
fs
cs
test
jo
fs
jmp
in
es
jne
jns
jecxz
aad
ret
push
mov
scas
pop
popl
jg
mov
movsb
dec
jno
mov
sbb
lcall
add
xchg
lcall
repnz
sub
fnsave
sahf
push
push
pop
shrb
sub
outsl
push
pusha
incl
xchg
aad
sbb
xor
sub
icebp
roll
test
in
call
sahf
lret
pop
sbb
sbb
or
pop
hlt
sub
shr
xor
test
in
add
pushl
jae
out
pop
jo
fs
push
rcrb
sahf
add
push
dec
gs
mov
gs
incl
sub
imul
std
or
popa
xlat
sbb
aas
xchg
pop
daa
push
dec
jbe
test
xlat
add
jae
mov
jne
push
xor
xor
cwtl
negl
fmull
bound
call
dec
push
insl
push
xlat
xor
insl
loopne
mov
std
mov
int3
inc
xchg
incl
mov
scas
or
ret
stos
mov
fdivs
pop
addr16
pop
jnp
push
out
mov
decl
push
mov
mov
inc
lods
sahf
jmp
iret
ds
inc
dec
cmp
neg
jmp
outsl
push
repz
test
cmpsl
ljmp
iret
loopne
adc
push
xchg
pusha
dec
ficoml
xor
inc
dec
loope
add
xchg
or
daa
sbb
cmpsb
cli
mov
mov
in
mov
call
mov
popf
xor
test
xchg
cltd
stos
pop
orl
xlat
jmp
pop
loopne
decl
cmp
add
jmp
repz
dec
push
daa
dec
test
enter
scas
clc
out
into
bound
icebp
mov
mov
in
jnp
inc
pop
dec
sbb
cmp
lcall
out
mov
adc
jbe
popf
aas
aaa
cwtl
test
add
hlt
inc
cmp
das
ljmp
xor
ljmp
repz
js
popa
lods
push
in
dec
add
jo
cmp
add
icebp
shr
repnz
xor
pushl
mov
out
in
pop
mov
pop
aas
push
psubw
sub
incl
cli
ss
data16
in
xor
arpl
pop
mov
pop
xor
cmc
call
out
dec
testb
frstor
out
cmpsb
movsl
rcrb
adc
mov
decl
fwait
cmp
mov
add
push
unpcklps
clc
inc
popa
cmp
ret
jg
call
or
mov
fsubs
inc
cwtl
and
andb
or
pop
aaa
imul
lods
jle
mov
cmp
gs
mov
es
loope
inc
insl
rcr
push
sub
fnsave
jp
scas
fisttps
mov
xchg
inc
ret
imul
mov
cmp
push
xlat
push
push
lcall
insb
mov
sub
out
adc
xorl
std
sbb
mov
lcall
iret
push
xchg
jb
and
loop
je
daa
into
adc
aad
mov
inc
sbb
lock
js
dec
pop
jecxz
cmc
or
mov
mov
adc
push
pusha
jmp
mov
or
jnp
push
cwtl
fst
iret
subl
bound
lock
push
lcall
jle
lret
mov
and
xlat
cmp
shr
stos
mov
sbb
hlt
jl
or
push
sub
fiaddl
out
in
jmp
sub
jno
add
xor
lds
pop
orl
push
insb
jg
insb
sbb
inc
dec
push
push
icebp
aas
mov
sbb
and
mov
push
fsubrl
jmp
sbb
sub
and
xor
jmp
cwtl
andl
vaddsubpd
adc
clc
inc
out
aam
fcoms
leave
aad
mov
lods
xchg
add
jge
stos
rcll
jl
jle
es
stos
dec
mov
mov
das
imul
movsl
lods
jge
xchg
and
mov
call
xchg
stc
data16
cld
mov
test
add
mul
fildl
xchg
stos
outsl
mov
pop
scas
loopne
dec
mov
rorl
jp
pop
rcrb
and
cmp
pop
pop
sbb
aaa
icebp
xchg
mov
loope
pop
hlt
pushf
imul
cli
mov
jmp
dec
lods
xor
mov
sbb
sub
mov
push
mov
push
push
xchg
pushl
test
rorl
es
xchg
mov
cmc
or
mov
mov
call
loopne
push
xor
mov
in
shll
sub
call
enter
inc
dec
pop
push
aaa
lods
add
sbb
popf
out
xchg
arpl
aaa
repnz
shll
cli
pushl
call
ret
push
in
filds
ds
push
arpl
outsl
xchg
mov
incl
push
mov
pop
xchg
xchg
sub
jno
lret
pop
xchg
decl
inc
filds
inc
lret
add
call
out
inc
mov
push
push
inc
cwtl
mov
inc
and
fstp
leave
movsb
popa
xchg
inc
jne
cmp
inc
xchg
inc
fidivs
lcall
inc
lea
loopne
loopne
ja
mov
mov
add
lahf
push
push
jnp
mov
push
mov
pushl
aaa
mov
roll
andb
or
mov
xor
mov
jmp
jo
ficoml
mov
jl
loope
jo
jno
data16
mov
call
insb
call
and
and
and
mov
in
sbb
mov
pop
cmpsl
insl
fpatan
mov
mov
dec
repnz
movsb
repz
in
mov
sbb
or
sti
scas
jb
xor
test
leave
in
out
xchg
sub
and
xor
cli
push
push
fidivrl
and
jg
notl
push
or
lods
mov
cmp
gs
test
ds
ljmp
push
addl
xlat
je
cmp
mov
jmp
inc
call
jmp
subl
mov
int
push
xor
std
daa
mov
icebp
and
fwait
decl
shr
clc
xchg
cld
popf
jae
push
xchg
sbb
mov
mov
xchg
cmp
movsb
add
mov
jmp
xor
push
rcl
and
xchg
nop
ljmp
sbb
imul
lcall
ljmp
xchg
mov
ljmp
sahf
add
xchg
push
iret
pop
mov
sub
mov
insb
cmp
add
jmp
jg
or
std
mov
out
sti
xchg
ss
or
cmpsl
sub
pop
mov
push
clc
adc
cld
or
xchg
sti
inc
lea
outsb
jo
dec
lds
repz
mov
adc
mov
mov
scas
stos
push
insl
test
mov
jnp
mov
les
push
rcl
movsb
sbb
test
jbe
push
lea
push
movsb
mov
faddl
int
jno
and
sub
decl
xchg
loopne
sub
jne
cmp
in
pusha
addr16
sti
jmp
rcrl
and
cli
mov
mov
dec
pop
push
xlat
adc
ss
jecxz
icebp
mov
xor
test
lahf
fisubs
cmp
inc
leave
sbb
jle
in
jp
mov
into
inc
cli
jmp
dec
mov
sub
bnd
enter
push
dec
mov
ljmp
lcall
jle
mov
dec
sti
call
pop
xchg
jne,pn
aad
pop
leave
jge
jp
lea
xchg
dec
mov
push
dec
lea
inc
ret
ja
aaa
sahf
mov
dec
leave
ljmp
sahf
xchg
int
mov
addr16
faddl
repz
decl
shlb
dec
xor
sbb
scas
into
xchg
mov
je
pop
xlat
push
mov
jg
jmp
loope
xchg
lahf
or
jne
mov
shll
pop
or
xor
mov
test
cwtl
lcall
lods
in
outsb
test
mov
or
mov
pop
test
call
movsb
fildl
and
mov
pusha
mov
xchg
sarb
push
add
jp
sub
loopne
jmp
repz
and
ror
mov
push
es
ljmp
inc
jae
push
xor
in
orb
ds
add
or
ljmp
test
insb
xchg
mov
outsb
or
int
inc
rcrb
xor
add
lcall
lods
ret
mov
lahf
or
ret
adc
lcall
loopne
cltd
push
mov
mov
pop
push
xchg
pusha
je
in
jmp
call
cmp
in
and
push
mov
out
movsl
stos
xor
flds
stc
scas
xor
mov
fidivs
fstps
shll
sahf
int3
mov
das
xchg
lcall
add
imul
divl
jmp
pop
xchg
sti
push
imul
sub
jmp
iret
repz
cltd
mov
das
bnd
movsl
dec
inc
pop
sbb
decl
fwait
mov
xor
clc
gs
cmp
lcall
icebp
rcr
fnsave
leave
jnp
mov
int
mov
aaa
in
ja
das
push
push
cmpsl
sbb
lret
mov
test
clc
sbb
inc
pop
dec
sub
outsb
jae
nop
fs
out
add
or
outsl
fnsave
sbb
dec
mov
lcall
sbb
mov
push
or
das
es
mov
sub
daa
cld
adc
insb
js
in
xor
mov
daa
push
test
arpl
fstps
stos
adc
stos
xchg
dec
lods
jge
mov
incl
das
mov
aad
and
pop
mov
stc
pop
fldenv
fadds
std
jl
mov
test
fstl
mov
mov
leave
pushf
cld
push
mov
roll
outsl
dec
jbe
sub
dec
out
clc
mov
or
stos
inc
adc
mov
or
ss
ja
loopne
pushl
fnstenv
mov
inc
jno
outsb
jmp
lret
pushf
mov
jp
xor
fistpl
andl
icebp
mov
ss
cmp
test
push
push
mov
cmp
outsl
faddl
sub
inc
jp
sbb
sub
xchg
movsb
adc
mov
mov
cld
mov
gs
pusha
test
lcall
lock
inc
popa
decb
inc
push
fucom
and
das
out
insl
jb
ret
ljmp
test
adc
xor
aam
add
inc
in
call
cmp
outsl
pushf
dec
xor
mov
push
repz
ljmp
sub
jmp
cmp
lcall
xlat
popf
leave
xor
lret
ret
mov
dec
pop
cmp
push
push
incl
jp
js
or
mov
cmp
js
and
hlt
xor
dec
pop
imulb
sbb
adc
sub
sbb
sbb
out
sbb
lea
fistl
scas
or
xor
daa
mov
dec
cmp
pushl
std
xor
mov
cmp
std
sub
or
std
fmull
aas
fcompl
jl
jecxz
test
jmp
jbe
jbe
cmp
call
loope
pop
clc
inc
incl
mov
sti
inc
xchg
pop
or
jb
test
xor
cli
mov
mov
rcrb
insb
repz
jnp
mov
mov
testb
dec
adc
mov
sbb
mov
fwait
xchg
xor
bound
sub
stos
mov
fsubrl
lea
adc
lds
mov
in
pushl
xchg
scas
mov
rcl
lret
mov
adc
mov
lock
lret
push
lea
pop
outsb
jecxz
xchg
ret
xchg
xor
mov
rcll
adc
jg
data16
incl
or
shlb
bound
and
push
fwait
test
mov
add
ret
stos
and
nop
jno
ljmp
fst
sahf
xadd
cltd
sbb
sub
js
and
out
cmpsl
call
jmp
cmp
mov
popa
loope
xor
pop
mov
sti
sahf
pop
add
cmp
je
mov
dec
pop
out
test
mov
int3
push
and
inc
cwtl
xor
cmp
pop
loope
cmp
adc
outsl
xchg
arpl
jno
adc
lcall
inc
inc
ret
icebp
mov
push
mov
fsubr
push
adc
adc
jp
push
lock
lcall
lret
mov
enter
aam
cmpsl
imul
jbe
mov
jg
orb
mov
sti
ds
cltd
or
ljmp
decb
pop
xchg
pop
xchg
lods
stos
pop
push
aas
and
mov
repnz
pop
push
pop
repnz
inc
dec
mov
sub
sahf
in
jp
imul
lcall
and
ja
jb
addr16
scas
sbb
push
push
xchg
xchg
movsl
shrl
call
cmp
lahf
dec
fs
mov
stc
xor
loope
ja
dec
add
mov
ljmp
add
dec
xchg
je
jge
lahf
push
dec
inc
icebp
xchg
shr
divl
mov
jno
decl
cmp
pop
lahf
test
insb
sub
xor
xchg
lcall
mov
push
push
popf
inc
and
scas
mov
movsb
js
cmpsl
js
cmpsb
add
fildll
adc
or
adc
pop
mov
scas
mov
mov
dec
call
fiadds
std
push
lock
xor
mov
inc
jecxz
cltd
loope
pop
test
sbb
lret
jnp
cmc
decl
fcmovu
jno
inc
jae
jmp
mov
testl
push
jns
movsb
inc
pusha
outsl
loope
loop
scas
xor
mov
cmc
push
test
lret
rorl
jg
call
add
adc
lds
dec
ja
fs
rcll
hlt
xor
jmp
jb
shll
int
daa
xchg
mov
ds
mov
jecxz
pop
jmp
xor
flds
lods
dec
fldt
test
aaa
pop
icebp
ss
sarw
and
jecxz
jb
adc
push
mov
mov
jbe
mov
pop
mov
icebp
pop
jmp
call
fists
xchg
dec
dec
lock
jne
pop
xchg
adc
xlat
adc
fwait
jns
xor
sub
pop
jmp
sbb
jb
jmp
xchg
cmp
aam
push
jb
out
sub
out
adc
push
push
in
lds
leave
pop
stc
push
fldenv
popa
jns
xorl
or
push
dec
pop
rorb
add
mov
cwtl
pop
jge
mov
cmp
jns
and
ljmp
add
cwtl
repz
cwtl
or
cmp
stos
addr16
sbb
pop
out
push
jecxz
fildll
cmp
push
mov
cli
into
mov
push
cwtl
movsl
push
mov
das
add
movsb
dec
ret
fcomip
addl
ja
nop
leave
jle
and
jae
push
out
jge
clc
jg
test
adc
mov
push
xor
ficomps
je
xchg
arpl
rcll
mov
insb
xor
inc
xor
clc
cmpsb
pushl
mov
jle
fisubs
jns
fisubl
jae
aaa
cmpsl
inc
addr16
cmp
popa
cld
ljmp
dec
sub
push
cltd
sub
out
and
imul
sar
cmp
dec
int3
std
in
sub
shrl
inc
les
iret
ljmp
adc
lea
push
jmp
mov
mov
mov
loop
addr16
call
shlb
stos
xor
cmp
dec
dec
push
and
dec
les
adc
jmp
mov
jb
jne
jp
mov
insb
aaa
fwait
rcr
in
and
or
call
mov
imul
inc
sub
xchg
stos
pop
and
jle
jmp
hlt
jle
cmp
lcall
xlat
push
test
decl
mov
insl
test
and
cs
mov
xchg
mov
push
add
iret
je
add
cmpsl
or
sbb
and
add
test
pop
push
fs
loop
mov
shll
in
push
dec
out
rclb
or
lods
dec
cld
lcall
iret
ret
inc
xchg
sub
lock
dec
test
ret
jg
adc
dec
push
add
sub
sub
adc
dec
inc
std
mov
add
shlb
mov
mov
out
es
push
mov
call
or
mov
ss
mov
add
dec
and
lret
push
push
cmpsb
dec
daa
dec
pop
and
call
pop
jle
mov
lock
inc
test
fwait
lret
pusha
jb
or
jb,pt
cmp
es
pushf
pop
mov
clc
loopne
adc
call
push
hlt
and
lea
add
decb
push
mov
lcall
dec
or
das
mov
lock
sti
sub
adc
repnz
incl
and
xor
stc
pop
arpl
popa
paddusb
pop
das
orl
cmpsb
stos
sahf
fs
add
push
fnstsw
in
enter
pushl
shll
shlb
das
xor
dec
mov
jb
aam
cmp
and
mov
push
add
xlat
sub
shlb
adc
ljmp
lds
dec
lods
add
pop
pop
push
xor
and
sahf
enter
incl
add
xchg
jp
in
pop
pop
stos
adc
leave
cmp
andb
fnstsw
cld
jp
ljmp
ljmp
mov
push
adc
and
mov
es
jp
pop
push
jp
imul
popf
std
jmp
mov
mov
loope
nop
mov
push
clc
inc
cmpsb
ja
lea
xor
cmp
inc
add
push
push
shll
shlb
jg
js
int
mov
add
jge,pn
hlt
push
out
adc
outsb
mov
jg
hlt
inc
xor
repz
shrd
fwait
or
dec
jbe
mov
lods
inc
cmp
jp
pop
inc
xor
es
sar
lcall
xchg
push
pop
xchg
xchg
adc
mov
mov
faddl
ja
orb
ljmp
lcall
rcll
outsl
fldl
xchg
sbb
das
lcall
pushl
mov
sbb
and
mov
rorb
or
bts
xchg
mov
decl
fcmovu
in
or
sub
mov
pop
xchg
andl
decl
mov
hlt
dec
fstpt
push
mov
pusha
fstl
mov
popf
pushl
push
dec
add
test
xor
into
mov
inc
xor
ret
loop
mov
ret
jmp
inc
xor
jg
incl
dec
fsubrs
sarb
or
dec
push
sahf
xchg
mov
xchg
idiv
mov
sub
das
aam
cld
icebp
and
pop
xchg
pusha
or
pop
cmp
mov
dec
rolb
mov
xchg
mov
sbb
mov
adc
out
jno
mov
inc
rcrl
cmpsl
cmp
rcrb
call
andb
fcoml
and
push
sti
adc
sbb
rolb
jg
lock
push
popa
pop
adc
sbb
push
pop
out
nop
mov
pushl
add
out
test
cmp
nop
xor
in
call
ljmp
or
push
hlt
add
insl
push
xchg
xchg
out
js
rcll
out
jae
add
enter
cmpsl
pushf
jnp
insl
add
pop
aas
mov
arpl
jge
outsb
jg
decl
push
testl
add
pop
push
cmp
add
test
sub
lcall
jae
sbb
dec
mul
dec
jl
jns
sbbl
arpl
lcall
into
mov
xchg
cmp
jecxz
sbb
mov
dec
cmp
les
dec
xchg
nop
jg
icebp
pop
incl
sbb
push
xchg
jns
xchg
ja
arpl
or
mul
pop
bound
adc
fldt
scas
xor
xchg
mov
pop
pop
divl
or
mov
out
inc
mov
xor
mov
jg
pushl
jb
or
inc
addb
xchg
xlat
pop
sarl
cmp
aad
jmp
jg
outsb
in
mov
mov
out
and
push
and
enter
lds
jg
or
inc
jge
les
andb
lahf
mov
push
jbe
clc
adc
cltd
lds
stos
nop
gs
je
jns
jmp
xchg
mov
sbb
sbb
xchg
jle
loopne
psllq
call
repz
push
scas
xor
xchg
clc
leave
cld
js
out
stc
adc
je
push
dec
std
mov
push
mov
fiaddl
ds
push
sub
iret
add
mov
int3
adc
movsl
add
cmpsl
pop
jle
idivl
ret
dec
xchg
pop
xchg
dec
in
adc
pushl
sub
cmp
ds
push
adc
push
mov
add
lcall
or
in
fimull
cmp
jnp
lcall
fwait
in
imul
jo
lahf
sbb
das
clc
pushl
mov
adc
nop
fstl
cwtl
loop
ljmp
cltd
mov
into
shlb
scas
ret
lahf
stos
push
mov
test
jge
daa
dec
sub
push
cmp
mov
call
or
add
pop
jns
cwtl
xor
lcall
psubusb
fstpl
mov
pop
out
insl
cltd
mov
ret
mov
aam
jmp
jmp
pop
dec
or
lea
stos
es
dec
fcomps
add
popf
decl
jmp
dec
sub
pop
int3
jno
xchg
rorb
lods
push
test
mov
push
and
out
ljmp
ret
inc
xor
popf
mov
test
add
cs
pop
std
dec
push
mov
lcall
or
cmp
lea
in
into
dec
and
sub
mov
jg
fmul
pop
and
mov
mov
adc
in
add
adc
xor
jmp
and
aas
jnp
xchg
sub
jecxz
inc
pop
fs
adc
cltd
or
popf
mov
inc
je
jns
popa
mov
inc
mov
std
shld
sub
or
sbb
movsb
cld
dec
fnstenv
sbb
adc
loopne
mov
insl
jmp
or
mov
push
jb
xchg
push
cmp
pop
out
sarl
fbld
sub
or
sub
dec
or
cmp
test
movsb
rclb
lret
inc
add
in
es
cmp
push
dec
arpl
xchg
and
pop
movsb
scas
out
dec
dec
pusha
lret
xlat
adc
adc
push
movsb
jb
dec
sub
sbb
incl
je
xor
jnp
leave
xchg
xor
push
or
xor
ljmp
xchg
outsb
pop
pop
test
sti
stc
outsb
jb
and
jecxz
or
and
faddl
out
in
fwait
mov
or
insl
xchg
int3
pushf
lcall
fwait
fs
ja
pop
inc
lcall
les
xor
add
jmp
push
push
or
jmp
mov
jl
int3
and
cmpsb
testl
cmc
inc
fs
mov
add
inc
dec
inc
sbb
cmc
or
iret
cmp
cmp
cmp
inc
repnz
fdivl
push
xor
imull
mov
icebp
jbe
mov
loopne
pushl
cmp
mov
out
stos
dec
mov
jns
in
int3
mov
mov
sub
es
or
es
imul
xor
inc
xor
lcall
das
ficomps
xor
fsubl
fs
lcall
add
leave
mov
mov
xchg
inc
pop
imul
mov
movsl
inc
sarl
cmpsl
cmp
icebp
scas
stos
test
cltd
cmp
sbb
ffreep
js
push
divl
sarl
cmp
addl
pop
mov
je
shlb
jl
sbb
lea
loope
jg
aaa
mov
mov
mov
fmuls
mov
mov
or
cmp
gs
divl
mov
push
stc
mov
mov
mov
mov
cmc
xor
and
xorl
ds
nop
popa
movsb
js
mov
data16
sbb
stos
orl
aas
ds
call
jno
sub
inc
dec
push
or
inc
sbb
stos
pop
lea
dec
dec
imul
call
int
loopne
call
push
in
mov
movsl
pushf
movsl
pop
sahf
pushf
jnp
adc
ljmp
sub
test
or
push
mov
mov
adc
jge
in
aad
or
rolb
scas
and
call
ljmp
rcl
aas
int
or
outsl
scas
and
into
sub
xchg
pop
mov
adc
jecxz
out
and
imul
decl
arpl
hlt
ljmp
test
cmp
incl
ret
icebp
insl
pop
sbb
pop
adc
mov
jno
jno
scas
fmulp
negb
ljmp
or
cmp
mov
push
popa
and
les
or
sarl
ja
dec
enter
fmul
push
dec
sub
push
cmp
sub
inc
repz
mov
adc
repz
out
sahf
addl
decl
and
imul
dec
adc
pop
ret
cmp
bnd
in
cmovo
mov
ljmp
xor
sar
sbb
popf
xor
lret
mov
in
loope
or
adc
mov
cli
push
sbb
shl
push
sub
inc
pop
jnp
add
jnp
jle
fldenv
movsb
das
jmp
mov
cmp
lock
pop
call
int
bound
push
adc
pop
sbb
add
daa
movsl
ja
push
mov
hlt
lock
mov
or
add
test
xor
shrl
popa
xchg
xor
in
incl
in
ds
sbb
and
pop
hlt
mov
out
push
lcall
call
iret
ficomps
imul
cmp
lock
push
mov
call
ret
daa
mov
nop
and
xchg
mov
ret
dec
cmc
jl
pop
push
jmp
pop
ljmp
shr
outsb
push
mov
jmp
pop
repnz
aas
jmp
dec
xchg
in
adc
call
dec
ljmp
push
push
mov
inc
lods
lcall
cmp
mov
scas
sti
and
out
insb
dec
or
jmp
mov
add
cmp
pop
bound
inc
rorb
aas
pop
jmp
sbb
push
or
data16
push
add
pop
sarl
xchg
cmpsb
push
fs
xor
sbb
icebp
mov
fsub
aam
mov
jl
mov
jle
and
sub
jg
dec
mov
adc
sub
or
stc
addr16
pop
inc
xchg
lcall
rcrb
pushl
lock
push
cmp
in
sub
sbb
hlt
andl
shrl
in
pop
loop
sbb
das
cwtl
outsl
fidivrs
ret
mov
popf
imul
dec
cmc
mov
jns
dec
mov
mov
aaa
fdivrs
pop
push
mull
or
sbb
ljmp
push
ret
mov
adc
pushl
filds
inc
cld
and
negb
sbb
in
jb
mov
cmp
cwtl
pusha
mov
mov
divb
sar
pushl
test
pop
mov
jmp
ljmp
cmp
xchg
inc
xchg
mov
ljmp
arpl
mov
or
ficomps
in
sub
mov
das
cli
mov
lods
sub
mov
mov
pop
push
xchg
mov
cli
popf
jp
jg
cmp
out
aad
xor
xor
je
fwait
scas
loopne
pop
cmp
pushl
mov
and
adcb
dec
pusha
lock
inc
aad
ficoms
jg
call
cmp
mov
mov
push
push
flds
andb
decl
lret
or
cmpsb
cmp
mull
lret
pop
pop
popa
es
dec
out
pushf
jecxz
fsubs
decl
mov
mov
pop
jge
adc
jne
push
or
shlb
and
push
cld
pop
leave
dec
mov
cld
mov
sbb
xor
dec
xchg
adc
sbb
popa
inc
pop
add
pushl
arpl
inc
add
lea
push
dec
imulb
cli
or
push
mov
xchg
pop
jecxz
rcrl
jg
mov
push
push
je
fs
std
inc
sarl
or
cmp
fbld
sbb
push
test
incl
inc
subl
nop
lcall
das
and
sahf
scas
mov
or
dec
xchg
cwtl
cmp
imul
ds
mov
jmp
mov
mov
cmp
test
xor
stos
mov
xor
sub
scas
add
xchg
incl
in
pop
mov
lods
mov
insb
dec
xchg
cmpsl
push
pop
sub
lret
stos
cmp
push
mov
add
dec
jecxz
scas
mov
dec
mov
and
dec
in
xor
inc
bound
jno
jb
gs
cmp
movsb
jmp
inc
mov
adc
mov
out
decl
xor
mov
jge
call
or
jb
cwtl
call
incl
push
dec
cwtl
cmp
daa
push
and
sub
aam
pop
loop
or
jecxz
push
jg
jns
or
mov
les
mov
mov
lcall
mov
filds
les
stos
lahf
leave
and
push
inc
mov
mov
movsb
lds
cmp
and
pop
adc
lods
add
sub
subl
repnz
outsl
clc
call
add
dec
clc
outsl
popf
or
std
stos
bound
stos
and
aam
mov
cmp
lcall
lods
cmpsb
repz
shll
cmp
mov
ja
loop
jb
push
popa
mov
mov
call
stc
shrl
mov
xchg
pop
or
cmp
in
dec
sub
fcomip
lds
rclb
inc
inc
mov
dec
mov
inc
mov
into
pop
call
lock
mov
aas
dec
push
and
movsl
jmp
and
out
mov
aad
jne
lahf
or
shl
or
push
aad
mov
jmp
test
fs
aam
inc
mov
loopne
ljmp
sar
mov
daa
out
and
popf
insl
xchg
xchg
ret
rolb
mov
jne
mov
icebp
mov
lods
xchg
mov
add
jge
notb
mov
scas
mov
imul
jle
roll
lods
pop
cli
pop
outsl
push
insb
imul
popf
test
add
cs
das
shll
jmp
cmp
sub
je
in
push
mov
jmp
scas
sub
dec
fs
mov
sub
push
xchg
pop
and
jmp
shlb
ss
jnp
push
dec
ret
xlat
add
dec
jecxz
jmp
mov
push
and
bound
push
fisttps
sbb
xor
cmp
push
repnz
cmp
mov
out
push
sbb
push
push
out
mov
sbb
mov
or
lret
movsl
jg
fists
mov
xor
inc
add
add
push
mov
imul
bnd
incl
iret
lods
shll
lea
shrl
dec
inc
mov
push
cltd
inc
mov
or
decl
pop
pop
ljmp
adc
pushl
dec
and
cmpsl
dec
adc
shlb
call
sub
out
lea
dec
inc
decl
and
lods
push
int
pop
push
insl
mov
scas
lcall
pop
cwtl
fwait
in
push
mov
out
sbb
cmpsl
rcll
icebp
jp
sub
imul
push
ljmp
nop
mov
mov
add
fsub
push
sbb
or
fcomip
decl
add
ljmp
dec
insl
mov
mov
out
xchg
out
lcall
jg
ret
mov
pop
sbb
xchg
and
in
outsb
imul
incl
je
push
pop
inc
inc
xchg
fwait
roll
pop
es
mov
mov
xchg
lds
ret
push
scas
in
addb
je
movsb
xchg
scas
pop
xor
fnsave
aad
xchg
pop
mov
xchg
adc
push
pop
pop
cmp
scas
mov
push
call
fbstp
scas
imul
ret
dec
jmp
push
cwtl
sbb
imul
add
cmp
push
mov
pop
mov
hlt
mov
mov
adc
ljmp
or
push
cmpsl
push
dec
dec
mov
jno
mov
jae
jne
popf
jmp
ret
out
fs
lcall
in
data16
idivb
insb
mov
inc
adc
jbe
stos
outsb
popa
fisubl
push
out
in
mov
ljmp
lods
pop
movsl
and
sbbb
dec
mov
leave
jl
scas
and
imul
cmp
pop
inc
sbb
push
mov
sar
roll
outsb
int3
dec
adc
sarb
fcomip
es
jg
aas
xchg
test
jge
pop
mov
mov
scas
daa
push
push
jg
add
mov
sub
lea
incl
pushf
pop
arpl
repnz
cmp
xchg
cmp
std
aam
faddp
or
mov
adc
repz
decl
pop
mull
js
les
xor
int3
mov
pop
cmp
cmc
xchg
add
jne
jl
hlt
shll
dec
lods
lods
jno
iret
enter
and
pushl
les
inc
push
icebp
dec
jmp
stos
ljmp
mov
xor
ficompl
sbb
sbb
jp
mov
sub
lahf
push
inc
and
loopne
pushl
xchg
sub
sub
ret
adc
scas
rcrl
scas
fbld
loopne
mov
jno
mov
sub
inc
dec
jmp
dec
xchg
sbb
dec
call
pop
xorb
adc
or
jmp
arpl
adc
clc
divl
call
rcll
xor
and
repnz
movsb
xchg
decl
ljmp
dec
shll
js
pop
inc
mov
in
clc
pushl
shlb
into
scas
cmc
lret
mov
es
call
jno
push
addr16
pop
adc
pop
pop
sub
lret
std
cltd
add
add
pushf
jg
incl
mov
fs
sbb
xchg
daa
sub
jne
lods
and
fcomip
call
adc
xor
icebp
cmp
dec
dec
mov
or
adc
sbb
incl
popf
cmp
pushf
mov
hlt
mov
push
mov
mov
adc
fdivrs
mov
jnp
dec
xor
push
out
add
rcr
xchg
mov
bound
icebp
mov
mov
jg
outsl
arpl
adc
mov
cmp
test
adc
push
push
add
pop
sub
jnp
mov
or
mov
icebp
scas
incl
jge
into
sti
cld
dec
push
stc
outsb
stc
lods
icebp
scas
and
jmp
add
xchg
sub
xchg
jle
cmp
mov
lcall
out
repnz
xchg
int
push
pop
pop
imul
xchg
inc
call
test
addr16
jg
xchg
add
pop
cmpb
inc
sar
cmpsb
fbstp
lahf
ljmp
adc
in
scas
mov
nop
jns
gs
inc
das
sub
incl
mov
mov
lock
xchg
aad
rcll
cmp
xchg
fadds
sub
sahf
std
mov
mov
mov
xchg
or
andl
imul
cmp
outsb
jecxz
mov
add
lea
in
pushf
outsb
add
jns
stos
xchg
out
out
jns
aam
dec
xor
or
lds
addl
push
jg
add
addb
scas
int3
ja
add
cli
rclb
mov
mov
pop
mov
mov
or
dec
out
and
out
xchg
out
arpl
sbb
adc
movsb
loop
repz
pushl
cld
ss
xor
xchg
jp
dec
out
stos
pusha
sub
inc
inc
pop
xlat
repz
adc
loopne
call
mov
sbb
push
cs
notb
nop
test
ljmp
movb
cmp
cltd
fsubl
jb
cmp
arpl
call
scas
dec
or
outsl
iret
daa
sbb
xlat
xor
or
das
sub
insl
xchg
mov
ljmp
add
subb
mov
outsl
fsubrp
lods
adc
xor
rol
mov
push
divl
int3
movsb
loopne
mov
inc
std
pop
fsubrs
push
into
shr
mov
push
dec
mov
mov
push
jbe
mov
nop
fbld
dec
lods
lea
inc
shr
out
ss
ret
movsl
or
ljmp
sbb
push
and
cli
mov
sbb
pop
in
loop
ja
rorl
mov
je
cmc
es
jg
mov
inc
mov
sbb
pop
fisubl
data16
in
jg
or
jmp
xchg
mov
and
push
repz
stc
decl
push
xchg
test
je
mov
bndldx
in
aam
int
aam
mov
hlt
jg
jmp
sub
jecxz
ss
aaa
add
or
dec
testl
inc
sub
fwait
fs
bound
or
mov
sarl
cld
call
cmp
leave
and
xchg
xchg
sub
or
fcoms
test
movsl
lret
jmp
add
cmp
sti
xor
repnz
arpl
mov
insb
xor
pushl
pusha
leave
pop
add
in
les
jnp
fmul
lods
inc
mov
mov
test
add
decb
cmpsl
movsb
add
pop
or
push
outsl
xchg
jo
xor
push
xor
in
test
dec
in
fistl
and
sahf
dec
addl
push
call
das
loopne
imul
and
clc
cmp
inc
mov
popa
cmc
ljmp
mov
mov
leave
je
cmp
mov
mov
pushl
mov
cmp
sub
pop
mov
push
mov
xchg
jecxz
jmp
sahf
sub
popa
fwait
bound
push
das
xor
rol
dec
mov
pop
mov
sub
add
or
inc
xchg
mov
jl
shlb
dec
push
dec
jge
xchg
pop
movsb
jg
push
fadd
sti
ljmp
sbbb
cmpsb
push
ds
inc
xchg
xchg
adc
lock
cli
or
or
decl
add
sbb
je
sbb
sub
mov
mov
xor
fs
xchg
sub
decl
std
sbb
sub
and
pop
push
mov
aam
inc
stos
call
fstpl
outsl
pop
push
sbb
or
or
outsl
lods
jge
mov
inc
pop
mov
add
and
cld
call
lcall
inc
jns
push
jle
mov
das
sbb
test
rcrb
fimuls
pop
pushl
mov
cld
nop
push
gs
pop
lcall
sub
filds
popf
divl
xchg
push
sub
mov
pusha
mov
xchg
sub
xor
test
es
sub
mov
mov
push
addr16
roll
cli
sub
stos
or
jecxz
jecxz
sahf
and
jmp
sbb
inc
int3
inc
movsl
lret
xchg
lods
inc
push
cmpsb
mov
leave
and
cli
call
loopne
sub
ss
xchg
aas
xor
shrl
pop
decl
outsb
out
and
das
repz
incb
mov
or
mov
push
out
xchg
repnz
inc
int3
into
cwtl
gs
fwait
adc
lcall
ficoms
sbb
xor
movsb
inc
xlat
adc
cwtl
icebp
sti
xchg
das
mov
or
fucomip
push
mov
stc
push
fsubs
dec
test
dec
lock
adc
sbb
mov
mov
jae
je
dec
test
inc
cmpsl
xor
push
mov
out
xor
lods
mov
jae
call
and
stc
fdivr
xor
sbb
lea
add
notl
shrb
pop
lock
inc
xchg
js
mov
movsl
push
xchg
mov
pop
dec
sti
aaa
mov
hlt
ljmp
xchg
inc
ljmp
les
fs
dec
ss
lods
ljmp
in
add
add
mov
sub
iret
mov
ljmp
call
lcall
mov
xor
idiv
icebp
push
cld
mov
test
mov
jmp
push
cmpsb
xchg
jbe
mov
mov
pop
and
sbb
mov
repnz
jmp
cmpb
je
push
sti
or
test
sbb
dec
and
pop
es
jmp
pushl
cli
mov
bound
pop
mov
dec
outsl
int3
sahf
jmp
movsb
mulb
inc
leave
xchg
ss
js
jb
adc
jmp
add
leave
stos
nop
push
test
or
push
cmpsl
test
or
jmp
or
cltd
cli
xor
pusha
jns
decl
fs
push
in
jbe
pop
cmpsl
cmp
test
cmpb
pop
ljmp
xchg
push
scas
jg
xlat
push
lahf
pushf
ljmp
hlt
adc
pushf
iret
jge
cs
pop
ret
dec
mov
xchg
repnz
cmp
jns
addb
add
cmc
ljmp
out
and
jbe
pusha
and
or
push
and
inc
gs
mov
inc
add
andl
xor
addr16
insb
mov
mov
mov
xchg
loopne
cld
roll
mov
xor
xchg
mov
ljmp
or
inc
inc
pop
dec
dec
jnp
sub
pop
daa
xor
pushf
decl
pop
jmp
faddl
in
mov
inc
inc
sub
stos
ret
and
jae
nop
stos
or
fcomip
incl
daa
push
mov
mov
repz
jb
adc
jg
jne
mov
inc
and
and
add
ja
movsl
adc
jg
aas
inc
pop
je
mov
stc
movsl
arpl
jae
jo
mov
mov
out
ljmp
cmp
jae
adcl
inc
mov
ljmp
jge
or
enter
and
cmp
dec
std
outsb
jmp
jmp
pushl
and
sub
mov
xchg
lods
dec
jmp
sub
and
push
fadds
adc
jg
jmp
mov
mov
loope
movsl
add
pop
mov
mov
pop
push
adcl
inc
xor
pop
xlat
scas
add
les
jnp
lcall
insl
enter
out
je
sbb
push
push
add
ljmp
jmp
sbb
xor
push
push
mov
mov
popa
aad
xor
xorl
out
lock
nop
nop
fdivrl
lcall
jb
cmp
jns
sub
push
shrb
iret
ror
push
fcom
mov
jnp
mov
into
cmp
call
sbb
fisubs
andb
mov
nop
xlat
int
add
fidivrl
lcall
sbb
dec
push
mov
test
fwait
cli
das
shlb
and
jmp
pop
cmc
jmp
cmp
cmp
mov
lret
add
fistpl
jbe
insb
sarl
cli
add
sbb
out
push
or
mov
imul
xchg
lahf
shl
xchg
addl
push
fidivrl
jg
sub
mov
sbb
repnz
lods
out
fdivrl
xlat
cli
es
testb
xchg
inc
sbb
imul
pop
das
mov
mov
adc
pushf
scas
mov
sbb
into
mov
int3
cmpsl
call
je
cmp
fistpll
pop
mov
push
scas
pushl
scas
jo
std
dec
mov
mov
mov
fisubrs
pop
add
inc
aaa
mov
push
push
lcall
and
xor
adc
int
hlt
or
in
sar
pushl
in
pop
fnstcw
dec
lret
cmp
sbb
inc
and
mov
cld
outsl
xchg
jg
lock
jle
shll
movl
loopne
pop
mov
stc
jp
stos
jne
lods
jg
test
lcall
pop
fidivs
pop
stos
mov
mov
test
adc
push
gs
mov
in
jmp
push
mov
lods
xor
inc
add
inc
sahf
andl
das
dec
jo
clc
inc
adc
in
mov
dec
sar
call
je
test
pop
clc
imul
rep
loop
mov
mov
rolb
add
fistl
push
or
or
inc
add
jns
mov
mov
mov
fidivl
xchg
pop
out
sub
xchg
cmp
mov
adc
jp
arpl
push
adc
aaa
push
shrl
enter
popl
out
xlat
decl
jmp
mov
std
push
xor
mov
sub
leave
shll
mov
jbe
das
or
out
out
pushf
mov
adc
mov
xchg
mov
dec
push
ljmp
cwtl
scas
jbe
int
jge
pop
dec
adc
push
filds
subb
adc
stos
subb
rcll
xor
mov
dec
and
stc
lods
add
xor
and
mov
lcall
insb
and
rclb
dec
mov
jnp
iret
ja
cs
iret
nop
fwait
insl
and
in
out
push
popa
rcl
outsb
mov
sarb
jle
jmp
lock
daa
lret
mov
aas
jle
or
rolb
roll
cmpsl
test
push
xchg
xchg
data16
xor
sbb
adc
ljmp
fcoml
sahf
shr
jo
sbb
sub
lcall
stc
mov
incl
loop
outsb
jl
psubusb
arpl
je
mov
push
ret
mov
std
les
push
xchg
dec
ds
xor
scas
cltd
fs
je
test
addr16
mov
or
pushl
in
pop
pop
clc
out
sub
fildl
xor
insl
push
rcl
fdivr
and
cmp
jnp
pop
in
dec
loop
mov
movsl
dec
mov
and
mov
lcall
das
xchg
add
cmp
and
xchg
push
inc
jbe
aam
and
mov
gs
lahf
xlat
xchg
insb
dec
add
mov
mov
sbb
jo
xchg
fimuls
adc
and
pusha
pop
lret
cmp
xor
jbe
xchg
cmp
insb
divb
loopne
sbb
mov
call
std
jecxz
sub
push
lsl
repz
xlat
imul
or
cmp
inc
popf
lea
xchg
addr16
out
pushf
sub
shll
xchg
mov
cwtl
mov
dec
in
scas
jo
push
pop
js
mov
push
jmp
cmp
pop
mov
lods
sbb
and
push
sti
sub
pushl
mov
and
mov
sub
push
dec
insb
in
cwtl
sub
push
test
lcall
sub
es
enter
and
out
std
out
cli
pushl
dec
pop
mov
lahf
pop
add
insl
jnp
xor
or
jecxz
pusha
pushl
cli
dec
movsb
js
sub
jmp
in
lods
or
mov
les
cmp
sbb
xor
repnz
pop
and
addr16
push
mov
mov
stos
loop
dec
es
push
subl
sbb
mov
arpl
ja
adc
mov
jo
xchg
or
lock
cmpsb
add
pop
dec
add
fs
bound
pop
dec
js
ret
lcall
insl
push
lret
ret
lcall
xchg
stos
dec
shrl
icebp
pop
arpl
xchg
std
inc
aaa
dec
repz
mov
rolb
in
mov
cmp
xchg
fidivrl
call
incl
mov
dec
dec
push
mov
ret
in
sar
mull
daa
cltd
mov
out
mov
mov
dec
xlat
cmpsl
fcomps
or
rcll
ds
lods
xor
dec
mov
sbb
movsb
mov
adc
pop
dec
and
ret
sbb
add
adc
jnp
test
clc
mov
fistpll
orl
outsb
dec
insl
fs
dec
pushl
xchg
call
pop
sahf
xor
xchg
jle
jns
mov
gs
inc
jle
in
sub
lcall
insl
xchg
and
jae
cltd
adcb
sbb
sti
stos
sub
ffreep
and
cltd
adc
mov
in
pusha
cmp
mov
pop
clc
cmp
imul
shll
fcomip
es
jecxz
push
mov
sti
rorb
ds
imul
adc
jmp
mov
sbb
inc
mov
dec
aad
or
sbb
pop
clc
pop
movsl
sub
loope
mov
lret
call
mov
pop
mov
sub
jge
mov
adc
adc
jmp
add
pop
xchg
mov
mov
loopne
std
dec
and
fiadds
ds
ret
sar
ljmp
add
adc
aam
xchg
mov
outsl
popa
ljmp
call
and
cmp
xor
test
sub
dec
push
dec
mov
std
mov
mov
add
lods
xor
add
in
das
xchg
jbe
xchg
inc
popa
into
popf
enter
xor
std
lock
sbb
into
add
popf
orb
popf
adc
and
mov
inc
ljmp
fwait
lret
mov
std
sbb
dec
push
int3
test
mov
pop
ljmp
ljmp
sbb
and
jle
cmpsl
jge
sahf
jle
add
scas
push
adc
int
fst
data16
out
pushf
lahf
pop
sub
rolb
test
pop
ret
int
leave
cli
ljmp
jmp
jmp
and
adc
arpl
or
jle
push
pop
push
aam
call
cld
mov
xor
mov
icebp
movsb
push
jg
lahf
mov
mov
fiadds
std
mov
arpl
test
scas
inc
orb
out
ljmp
push
jg
nop
lea
imul
ljmp
jmp
repz
ljmp
aaa
or
push
test
pop
pop
xchg
std
ja
cli
adc
sub
cmp
fisubrl
shlb
sub
cmp
add
fcomip
jmp
inc
test
sahf
gs
and
xchg
mov
xchg
mov
call
add
dec
jns
sub
mov
outsb
mov
push
mov
test
cld
cmp
jmp
lret
adc
mov
popf
out
fidivl
out
xchg
cld
mov
sbb
mov
lcall
jmp
and
push
adc
push
fdiv
pop
or
jo
jmp
inc
cs
and
push
sarb
add
fnop
cmpsl
in
pop
mov
iret
int
lcall
inc
dec
testb
shll
leave
mov
in
sub
or
sbb
es
incl
and
out
mov
mov
out
jb
inc
inc
fstpl
dec
in
sbb
sub
adc
leave
cmpsb
ljmp
and
das
adc
hlt
xor
dec
iret
adc
ja
xchg
cmp
mov
dec
push
in
loop
fnsave
outsl
mov
cwtl
stc
in
testl
or
mov
cmp
pushl
and
or
xchg
out
jp
cld
ss
jge
loopne
mov
sti
jg
dec
pusha
push
in
xor
push
fcomi
mov
jo
mov
outsb
andl
fwait
decl
rcrb
jge
pop
pop
jbe
dec
adc
stc
sbb
sub
add
jl
jl
xchg
lcall
hlt
sbb
xchg
mov
pop
mov
stc
pop
mov
fldenv
sbb
in
dec
imul
pop
addr16
pushl
shlb
mov
xchg
rcll
bound
mov
test
jl
push
push
adc
pop
sar
push
dec
inc
push
dec
ja
mov
test
insl
es
dec
cwtl
cltd
mov
xlat
adc
xor
push
stos
ds
scas
add
mov
decl
cmc
dec
mov
xor
adc
cmp
cmc
cmp
pop
rorl
movsb
pop
decl
jg
xchg
sub
sbb
imul
cmpsb
inc
js
int
bound
fcomip
lcall
mov
mov
sti
add
mov
test
xlat
pusha
mov
push
out
cmpl
push
and
mov
adc
or
jmp
movsl
int
adc
push
push
jo
or
adc
mov
xlat
sbb
mov
xsha1
cmpsb
rorb
xchg
stos
xchg
pop
jbe
cmp
ja
ljmp
mov
shr
cmp
or
push
push
fs
lods
das
push
clc
out
and
cmc
mov
xchg
outsl
sbbb
ja
aad
lods
push
push
jns
jmp
adc
sbb
popa
mov
push
jae
jns
jnp
xchg
jns
and
shrl
test
ljmp
repz
inc
lret
xchg
dec
pop
xchg
jge
es
frstor
ljmp
ljmp
ja
sbb
cmpsb
sbb
xchg
mov
dec
mov
fucomp
mov
lret
mov
ljmp
cli
xor
aas
aam
loopne
jle
push
mov
repnz
incl
mov
je
mov
adc
in
pusha
cmc
pop
pop
add
lds
pusha
les
negl
pop
add
mov
jno
sub
sbb
mov
out
loop
lcall
gs
lahf
mov
and
jnp
inc
insl
insl
clc
pop
pop
outsl
rorl
je
mov
call
test
jmp
jge
cmp
aas
inc
cs
loop
mov
scas
fsubrl
jno
pop
lcall
dec
cmp
ja
lahf
adc
mov
ss
jge
popf
ret
fwait
hlt
jb
mov
aaa
cmpsb
sbb
or
cmp
add
pushf
enter
adc
and
sbb
incl
mov
js
aas
inc
inc
push
repnz
or
lret
push
and
das
xchg
pop
pop
mov
mov
test
inc
popf
adc
jmp
call
xor
mov
movsb
mov
xchg
in
push
adc
test
lahf
mov
in
aas
call
jg
jmp
mov
das
or
mov
and
push
jl
xchg
cmp
insb
decl
vphaddbq
mov
mov
sub
in
and
clc
cs
dec
or
iret
sbb
lahf
adc
fwait
data16
loope
stc
xchg
inc
fs
inc
popa
jns
lcall
adc
adc
scas
mov
out
std
dec
dec
pop
add
out
dec
es
dec
decl
or
jmp
je
cmp
mov
test
aam
into
dec
fwait
xor
les
jmp
mov
lods
mov
add
cmp
sub
sbb
scas
test
call
mov
in
push
mov
add
call
or
ljmp
cmpsl
jbe
adc
pop
push
enter
fstpl
lods
movsb
jnp
test
ret
add
sub
mov
in
mov
push
pop
cmp
call
mov
fildll
jns
aas
repnz
dec
imul
add
xor
sarb
fwait
dec
mov
mov
sbb
loop
dec
vpshaq
das
adc
int
xor
pop
pop
mov
or
mov
xchg
fdivrl
cmp
inc
and
loop
mov
mov
lahf
mov
imul
jne
cmp
loopne
andb
decl
nop
cld
inc
hlt
xchg
add
decb
push
pop
js
inc
cwtl
aaa
movsb
lods
and
scas
jg
xor
push
dec
xor
cmp
movsl
dec
pop
mov
shrb
dec
cmpsb
orl
jg
fldenv
pushl
loop
add
sub
pop
xchg
out
cld
leave
jg
inc
rclb
inc
pop
pushl
sbb
mov
sbb
popf
scas
push
push
sbb
stos
sub
call
push
xchg
sbb
push
addr16
pushl
cmp
repz
sub
icebp
test
lods
push
pop
pop
mov
ljmp
dec
push
call
cli
inc
stc
es
pop
or
cmp
pushl
ret
into
sti
mov
mov
cmp
lea
stc
fiadds
sub
incl
scas
push
stos
inc
inc
dec
lcall
int3
dec
or
les
mov
decl
jmp
push
int3
xchg
js
cmpsb
dec
sti
lret
lds
psraw
adc
add
lcall
cmp
or
xchg
das
adc
cltd
shrb
push
sahf
xor
jae
aam
jbe
mov
int
insb
loope
sarb
xchg
mov
sub
mov
push
das
aaa
in
in
stc
adc
daa
ds
shl
scas
sbb
mov
xchg
popl
js
inc
push
add
lcall
cltd
fistpl
pop
lcall
pop
mov
xchg
sbbb
jo
out
pushf
xor
jae
dec
adc
lahf
data16
clc
jae
cmp
fisubs
xchg
ss
test
sub
ljmp
out
jge
jb
fwait
insl
sub
nop
and
mov
add
ja
test
inc
movsb
pushl
push
pop
sahf
sub
push
popa
push
ds
sub
rol
ljmp
lret
ret
ja
xchg
sub
push
sub
mov
add
mov
ljmp
adc
jns
iret
nop
dec
hlt
push
ja
inc
inc
mov
test
leave
scas
inc
pusha
xchg
pop
adc
scas
mov
mov
out
lods
xchg
data16
popf
std
scas
mov
movsl
ficomps
fistps
xchg
loopne
bswap
or
xchg
cli
scas
outsb
jg
inc
mov
or
cld
mov
dec
inc
fbstp
lods
das
insl
iret
stc
cmp
jmp
push
jge
arpl
test
inc
sub
pop
insb
movl
fidivl
push
enter
ljmp
roll
pop
jl
cmpb
fadds
xchg
dec
xor
leave
push
mov
jno
call
sub
fimuls
mov
js
inc
inc
jbe
leave
mov
xchg
mov
ror
mov
fcomip
decl
sub
jecxz
push
popf
inc
pop
sbb
pushf
xchg
jmp
sbb
dec
and
cli
std
es
dec
sahf
dec
popf
dec
loop
test
js
sahf
push
cmc
mov
incl
sub
cmp
cmp
xor
sti
xchg
fistl
inc
adc
test
jo
mov
add
mov
into
nop
das
push
push
insl
ss
pop
cmc
call
mov
and
push
jmp
pop
call
stos
loop
shll
mov
sahf
push
push
jge
or
add
jo
cmp
icebp
fbld
popa
jle
jecxz
mov
dec
es
mov
jbe
mov
loope,pn
xchg
pop
xchg
bound
fbld
xchg
push
jle
push
push
inc
push
repz
out
stos
cwtl
adc
sub
xchg
test
xor
call
cmp
fisttps
ljmp
sbb
scas
shr
mov
dec
call
sbb
pop
push
jecxz
inc
mov
insb
sarl
stos
or
mov
or
jb
inc
push
push
aam
out
pusha
sbb
fs
add
enter
mov
bound
dec
fstps
stos
pop
inc
cmp
ret
in
out
sbb
ds
xor
push
mov
jg
mov
decl
push
insb
pop
iret
pop
test
pop
push
pop
mov
jp
jmp
sub
das
cmp
aam
sbb
repz
rclb
notb
ljmp
das
es
push
ror
pop
into
sub
pop
lock
mov
xchg
dec
sub
sub
lea
popf
mov
fs
inc
nop
sub
repz
iret
jecxz
xchg
movsl
ds
xor
out
inc
inc
xchg
mov
bswap
push
jns
cli
mov
dec
stos
add
es
dec
cld
jb
incl
lret
mov
gs
dec
adc
mov
pop
pop
xor
addr16
or
and
int3
push
daa
and
adc
das
pusha
inc
adc
xchg
jbe
decl
popf
jg
dec
cs
sbb
push
sbb
imull
out
xchg
jmp
and
sti
adc
out
mov
pop
fnstsw
inc
sub
fldlg2
inc
frstor
int
jne
sub
aas
fdiv
jg
fmull
mov
leave
outsb
adc
lret
je
dec
inc
insb
jl
jae
incl
mov
cli
in
xor
mov
and
push
fsubs
cltd
push
or
aad
ja
incl
inc
or
in
into
int3
push
push
mov
inc
idiv
jns
in
fcomps
notb
or
into
outsl
clc
dec
adcb
or
mov
xchg
xorl
xchg
jmp
adcb
add
pop
sub
das
shll
ja
jl
push
outsl
and
or
fdivl
and
cmp
cli
out
cmpl
lds
jg
filds
cmp
cmpl
outsb
ss
or
push
pop
pop
or
fnstcw
sub
or
inc
jne
add
jbe
xchg
push
jle
addr16
push
sbb
dec
xor
fstpl
xchg
ret
inc
rcl
filds
test
arpl
sbb
fs
mov
repz
cmp
fstl
setp
sub
inc
test
adc
call
cmp
les
cwtl
addr16
inc
mov
cmp
adc
mov
incl
push
xchg
mov
pop
aam
sbb
pusha
jp
rorl
xor
incl
dec
push
push
push
xchg
loop
lds
jae
call
mov
inc
mov
hlt
enter
sar
xlat
inc
jb
fnstenv
push
fwait
xchg
or
in
xchg
ret
loope
jg
xchg
dec
iret
add
movsb
jb
pusha
fstl
inc
nop
sbb
push
scas
ret
ljmp
adc
notl
and
jle
xor
and
ljmp
cld
xchg
lcall
push
or
pop
push
pusha
jno
add
pop
sbb
push
fnstenv
mov
lret
push
out
pushf
bnd
xchg
pop
sub
adc
dec
jl
xor
data16
shr
fs
insb
and
sub
mov
out
aaa
jmp
frstor
cmc
aaa
mov
mov
bound
sub
jo
outsl
je
test
fsubs
push
mov
je
push
ret
push
orl
xlat
pop
fistpl
jle
mov
outsb
xchg
pop
jecxz
movsb
or
jle
lock
cmp
and
push
insl
cli
pop
or
jp
iret
jnp
testl
mov
leave
sub
pusha
call
jg
sub
push
pusha
aas
sub
and
ljmp
cmpsb
mov
pop
sub
mov
cmp
fabs
sbb
mov
mov
mov
clc
gs
ror
push
stos
add
adc
add
mov
jo
pop
mov
pop
push
jnp
mulb
jle
push
loope
aas
sbb
xchg
push
incl
jo
test
leave
icebp
sub
mov
lds
pop
fldl
lcall
pop
mov
aas
icebp
repz
arpl
mov
pop
sub
xchg
or
sub
out
sbb
test
xchg
adc
inc
cs
cmp
ja
call
scas
push
cmpsb
test
enter
inc
sbb
xchg
add
int
cmpsb
out
jo
or
ljmp
xor
pop
lods
mov
testb
mov
loopne
movsb
push
std
pusha
cli
bnd
lea
int
xor
clc
rclb
decb
sti
cmp
adc
xchg
ljmp
imul
mov
call
dec
inc
shl
pop
decl
push
in
push
pop
stos
pop
dec
inc
icebp
das
jecxz
xchg
dec
int3
es
clc
call
mov
pop
lods
flds
std
adc
adc
std
cmp
push
cld
sahf
xor
mov
int3
xchg
aaa
pusha
hlt
movsl
adc
call
inc
clc
movsb
movsl
add
shlb
clc
cmp
aas
xchg
pop
xchg
adc
jp
lcall
and
cmpsl
or
xlat
jmp
sub
clc
push
mov
mov
decl
inc
out
xchg
rorl
push
in
add
jecxz
ja
ficomps
mov
and
aas
cltd
xchg
xchg
cli
ljmp
nop
inc
mov
xchg
sti
pop
xor
les
jno
out
or
idiv
call
xchg
sub
mov
dec
jle
loopne
ds
sbb
mov
pop
arpl
jmp
mov
push
rolb
addr16
push
inc
jle
aaa
inc
mov
pushf
repz
lret
sar
push
js
iret
lcall
loope
jae
popa
lret
mov
jg
mov
mov
orb
fbld
cltd
mov
clc
sbb
dec
jns
stos
orl
lcall
jae
lods
es
lods
popa
scas
stos
lcall
repz
mov
sbb
sbb
inc
fcoml
jg
mov
or
pushf
in
or
ljmp
jns
or
push
clc
mov
fsubrs
loop
outsl
dec
popa
lahf
in
pop
ss
das
clc
ljmp
push
sub
out
cltd
ficompl
in
sbb
cmp
mov
pop
hlt
xchg
sub
push
loope
insl
mov
lock
push
push
sub
andl
jmp
mov
mov
and
mov
in
pop
aaa
shll
jno
cs
inc
imul
fld1
test
jne
jp
cwtl
clc
scas
and
subl
into
imulb
mov
adc
adc
sub
int
sub
je
insl
sub
jb
xchg
pop
in
adcl
xor
ljmp
or
mov
mov
or
mov
mov
lcall
out
pop
or
test
mov
std
lods
cmp
xor
cmp
push
add
or
or
mov
ds
sub
icebp
inc
call
ja
jmp
xor
push
je
pushf
mov
pop
mov
cmp
adcl
call
and
or
fisubl
sub
mov
scas
inc
push
push
filds
ja
pop
add
inc
mov
pop
fidivl
clc
cmpsl
jg
jmp
cmp
movsl
test
inc
fmull
xchg
stos
dec
jae
jnp
fbstp
mov
ljmp
je
bound
gs
pop
push
dec
lods
call
in
mov
xchg
fldenv
out
cli
adc
popl
enter
sbb
mov
xchg
lcall
into
and
sbb
in
outsl
idiv
mov
or
ret
fcmovnbe
lret
mov
andl
outsb
add
xor
add
sbb
je
adc
push
push
rcrl
xor
dec
cmp
jae
incl
cmc
pop
es
add
shr
or
cld
mov
jno
cwtl
push
stc
fxch
jge
xchg
idiv
pushl
sbb
pusha
or
fsubrp
mov
pop
imul
stc
aaa
mov
call
add
dec
out
sbb
ljmp
cmc
sub
sar
mov
data16
cmp
lea
div
loop
or
push
jnp
cmp
outsl
stos
adc
sbb
pop
out
mov
xchg
or
inc
mov
repz
cltd
jb
jp
cmp
push
inc
sbb
popa
lods
add
leave
jle
insl
cmp
push
jmp
ljmp
pop
pusha
inc
sbb
mov
jecxz
jcxz
pusha
push
mov
and
jmp
push
cmp
ret
add
fst
pushf
ljmp
int3
sub
add
push
ljmp
and
lret
aam
sub
lret
insl
dec
mov
ficoml
scas
mov
dec
bound
sbb
hlt
imul
xchg
cs
cmp
push
lret
cli
dec
insb
test
mov
ss
gs
mov
inc
mov
outsb
pop
cmp
cmp
ljmp
sbb
fst
fdivrl
cmpsb
xor
add
insb
and
imul
or
and
pop
fwait
rcr
data16
lret
inc
sub
js
ds
jp
sbb
mov
ds
mov
repz
pop
jge
mov
mov
fcomip
cmp
cltd
mov
ret
aam
mov
xor
mov
add
incl
aad
inc
sbb
aam
out
aam
sbb
rol
sbb
jge
mov
jg
mov
mov
fldenv
testb
lods
pop
xor
pop
and
mov
imul
aaa
popa
fcomps
jl
fcomip
mov
xlat
popa
fisttpl
pop
xlat
lock
sbb
add
sahf
mov
je
mov
sar
mov
rclb
ficompl
add
push
test
sbb
xor
sbb
cmp
incl
push
imul
aaa
sbb
pop
dec
cmc
jbe
inc
lahf
push
cld
jno
cmpb
js
jne
and
or
aad
fsub
bound
pop
push
and
adc
decl
dec
lahf
dec
and
xchg
cmp
mov
ljmp
roll
std
incl
ljmp
inc
fwait
ljmp
add
jne
push
and
cmp
mov
pushl
pop
in
aas
int3
pop
call
push
add
cmp
xchg
lcall
mov
dec
inc
adcl
xchg
pop
pop
xor
decb
cld
inc
mov
mov
mov
ror
lahf
insl
jge
popa
pushf
adc
mov
lahf
scas
sbb
push
dec
cmp
jg
mov
mov
hlt
repz
loope
sub
fs
xchg
hlt
call
sbb
sub
xor
sbb
test
out
mov
sub
das
call
loop
shlb
ficompl
ljmp
movsb
out
js
add
daa
sub
mov
jecxz
push
dec
scas
cmpsb
mov
jecxz
jae
mov
call
jno
sbb
and
mov
jnp
xchg
cli
add
pop
and
sbb
call
scas
mov
mov
loop
fidivrl
adc
sub
xchg
push
jecxz
xchg
imulb
cmpsl
pop
xchg
bound
mov
or
push
cltd
sub
adc
cld
push
ljmp
jne
push
jae
xor
nop
mov
push
add
ds
call
js
mov
or
rcl
scas
lret
neg
cmc
test
push
cmpb
es
decl
das
aam
test
subl
add
loopne
push
lret
incl
mov
mov
shll
shl
add
dec
repnz
into
in
sahf
dec
imul
incl
cmpl
pop
roll
xchg
sbb
push
std
mov
call
jnp
shlb
dec
jmp
mov
or
lods
mov
fisubrs
sar
decl
test
xchg
push
repz
popf
push
cltd
ret
std
add
dec
es
mov
jmp
lret
push
ss
out
inc
cmp
sahf
mull
jp
push
sti
lock
stos
enter
icebp
ljmp
xor
mov
popf
dec
insb
mov
dec
arpl
test
in
outsb
in
jbe
jg
nop
add
dec
pop
add
mov
push
mov
popf
mov
subl
xlat
dec
lahf
mov
pop
jg
ljmp
rolb
test
shrb
add
leave
sub
fcompl
jns
mov
inc
popf
sub
idivl
inc
aad
sub
aas
push
and
add
stc
xchg
sub
mov
clc
je
cmpsb
cltd
xor
lahf
in
shlb
xchg
mov
ds
cmp
decl
mov
hlt
sarb
cvttps2pi
pop
push
dec
lret
lahf
std
lcall
les
frndint
out
mov
mov
jno
lods
push
xor
call
fmull
int3
and
out
addr16
lods
xchg
and
sub
mov
mov
pop
mov
lods
sub
jmp
outsl
stc
push
jmp
ja
test
out
arpl
mov
call
sbb
cmp
notb
cmp
or
xchg
xor
in
aas
lds
xchg
and
pop
or
xchg
cmp
std
inc
call
cmp
pop
mov
pop
cwtl
aam
ljmp
jle
stos
cmpsb
test
lret
inc
mov
ljmp
ljmp
inc
dec
jnp
fldl
pop
into
iret
aam
adc
std
push
xor
fcomip
push
out
incl
rolb
push
mov
les
mov
lea
and
and
lret
dec
adc
ja
push
xorb
jne
cs
aaa
cld
jmp
fnstsw
stc
sbb
jne
cld
push
sbb
mov
jb
pop
outsl
in
mov
loopne
das
jno
subb
jne
pushf
faddl
inc
cmp
add
sub
leave
fisubrl
insl
jns
dec
xchg
sub
ljmp
dec
sub
push
dec
push
out
cmpsl
inc
inc
inc
aad
mov
lahf
stos
lahf
jecxz
ljmp
xchg
push
cmpsl
add
cmp
idiv
jg
add
xchg
test
pushf
fnstcw
scas
loope
mov
mov
stos
loopne
out
je
call
jmp
ret
bound
test
mov
push
push
xchg
fildll
dec
sub
cld
jmp
rcrl
push
pop
out
sahf
sahf
add
adc
int3
sahf
push
les
xor
iret
fildll
xchg
sbb
rcrb
sub
inc
pushf
jg
fildll
lds
fs
das
or
into
into
cmp
push
arpl
ljmp
hlt
jo
pop
insl
and
sti
lcall
sub
sbb
jmp
arpl
jae
mov
dec
pop
cmp
cmpsb
mov
sahf
cmpsl
mov
fstpt
arpl
decl
repz
jnp
mov
pushf
and
stos
aaa
es
js
aaa
cld
lcall
rcrl
lcall
repnz
push
pop
mov
pusha
sub
popf
ds
mov
imul
insl
in
test
ret
pushf
mov
ret
faddl
cs
decl
dec
cmpsb
mov
jne
adc
xor
stc
add
push
mov
in
push
in
mov
enter
ds
jno
push
ds
icebp
xchg
jl
push
test
addb
js
addr16
pushl
pop
pop
sahf
insl
push
jno
jge
arpl
sub
cmp
clc
cld
mov
jb
mov
es
call
loopne
stc
pusha
and
mov
iret
sbb
mov
imul
mov
cli
lock
dec
ds
or
enter
jmp
daa
sub
aas
cmpsl
and
ss
mov
out
pop
ret
pop
and
or
dec
xchg
add
add
pop
or
inc
cmpl
ficoml
lock
aas
xorl
inc
test
es
fldenv
mov
mov
mov
add
scas
add
out
call
insb
js
cli
cs
and
push
clc
adc
inc
mov
icebp
enter
incl
fisttpll
jnp
fstpt
in
push
lods
pop
mov
inc
fistl
push
rol
insb
daa
mov
div
push
ror
add
imul
jle
movsb
cmc
add
inc
pusha
mov
lahf
mov
cmpsl
repz
mov
push
test
loopne
ret
sahf
jg
test
rclb
sarl
lock
stc
and
sub
push
mov
rcll
sbbl
loopne
sbb
por
adc
or
mov
cld
lcall
adcb
cmp
nop
decl
jne
adc
jmp
in
ljmp
ret
ss
jp
xchg
test
add
stos
mov
mov
push
pop
mov
es
popf
stos
fidivrs
out
bound
data16
inc
sbb
cmp
cmc
mov
mov
push
or
mov
pop
adc
and
fwait
orb
push
test
or
xchg
or
call
lcall
or
pushl
mov
out
scas
pop
add
push
sub
imul
je
imul
loope
test
mov
mov
mov
daa
pusha
cmp
pop
popa
mov
fmuls
push
mov
jbe
pop
fbld
insb
sbb
or
popf
mov
adc
mov
inc
cs
cmp
cmpsb
mov
mov
mov
js
xor
insb
in
lcall
dec
aaa
fdivrs
stos
cmp
test
jne
ret
imulb
jmp
mov
cs
sbb
imul
and
mov
dec
xor
and
mov
lock
data16
addr16
push
hlt
sar
push
mov
xor
daa
adc
sbb
push
repnz
add
mov
lods
mov
mov
jns,pn
div
adc
pushl
cld
jg
cli
fisubl
mov
pop
lods
popa
jo
cmp
outsb
push
xchg
pop
mov
fwait
push
sub
or
adc
mov
ljmp
or
xchg
pop
dec
pusha
cs
inc
xchg
xchg
jo
fmulp
cmp
jp
pusha
insl
sub
jg
dec
mov
sbb
insb
gs
lods
push
jmp
pop
scas
xor
data16
lcall
fisubl
and
in
cmp
rcrb
aad
mov
xor
push
ds
lahf
pop
jle
push
mov
and
pop
dec
xchg
or
ljmp
int
add
dec
ljmp
adc
ret
mov
pop
xchg
fldenv
adc
add
inc
into
sub
outsb
adc
jnp
test
loopne
and
push
lods
mov
sbb
repz
or
mov
inc
dec
xchg
cltd
lea
fdivp
int
stos
xor
sahf
push
incl
repnz
mov
sub
je
cmp
jbe
pusha
fisttps
ja
lcall
test
roll
sbb
mov
and
frstor
push
xchg
cmpsl
or
jnp
loop
sbb
jns
or
pop
icebp
incl
inc
rorb
aaa
into
aad
cmp
jno
mulb
imul
stos
inc
test
test
fs
push
xchg
test
imulb
push
push
sub
fcomip
inc
and
jb
mov
sub
pop
inc
out
popa
adc
xlat
dec
cld
mov
jbe
jnp
js
dec
xchg
mov
adc
incl
inc
bound
cmp
into
test
fstps
jle
cmp
lock
ljmp
xchg
cmp
repz
fwait
ja
jge
stos
ss
adc
inc
out
test
pop
inc
in
push
mov
mov
mov
into
fistpl
rcr
mov
repnz
imul
push
ds
mov
int
push
jg
std
mov
xchg
pop
insl
or
jae
mov
les
jg
mov
pop
call
or
add
fcoms
shll
xor
mov
jge
cmp
or
ret
mov
loopne
push
or
call
and
dec
inc
sti
mov
xchg
jle
or
ljmp
pop
pop
jno
push
mov
call
test
sbb
mov
das
push
icebp
jmp
mov
sahf
mov
jo
aam
sbb
dec
insb
mov
in
out
mov
adc
add
inc
in
out
bound
push
dec
or
decl
dec
adc
mov
loopne
or
bound
js
mov
mov
imul
insl
gs
lret
mov
xchg
dec
cmp
inc
xchg
jnp
imull
cmp
cmp
lods
insl
pusha
andb
push
fdivr
call
cmc
hlt
adc
leave
jne
lods
mov
sbb
les
loope
test
add
mov
dec
mov
jns
cwtl
lcall
mov
cmp
or
sub
sub
jle
mov
shl
lds
popf
ret
orb
sbb
incl
or
inc
sbb
test
xor
hlt
pop
inc
rolb
sub
pushl
jno
lahf
pop
dec
daa
nop
or
bound
mov
out
imul
push
or
fldt
push
jb
scas
cmp
xor
in
dec
or
imul
lcall
out
stos
mov
jmp
sbb
jbe
insl
stc
decl
push
pushl
add
fnstenv
loope
pop
repz
imulb
rcr
arpl
loop
dec
out
dec
icebp
clc
inc
adc
ret
sub
fs
mov
mov
mov
push
ds
je
test
add
mov
cmp
sbb
adc
jns
cld
jmp
lret
imulb
adc
and
clc
jg
inc
mov
cwtl
dec
or
out
clc
lock
mov
incb
shlb
cmp
mov
push
outsb
pusha
sti
ljmp
mov
push
popf
gs
int3
repnz
push
and
adc
decl
test
pop
leave
int3
pop
push
inc
mov
mov
xchg
cmp
rolb
jg
mov
mov
jo
adc
cli
sub
pop
dec
dec
mov
aaa
loope
push
jl
cs
iret
ss
sahf
mov
decl
ss
cltd
dec
test
pop
xchg
push
cltd
sahf
sahf
xor
inc
sar
pushl
inc
and
outsb
push
test
int3
sbb
fsubs
xchg
ja
dec
insb
push
sub
push
sar
cmc
push
out
repz
sbb
push
sbb
mov
cmp
mov
insb
rcl
decl
lret
out
jnp
idiv
mov
and
cli
loopne
sbb
lcall
int
mov
lret
into
lea
or
pop
int3
pop
decl
or
cmp
sbb
cmp
xchg
dec
in
sahf
xchg
lods
aad
fidivrl
loope
push
xchg
inc
lods
subb
xchg
ret
mov
mov
icebp
call
repnz
frstor
je
mov
push
mov
push
incl
jo
out
xor
pop
and
rclb
jecxz
push
das
jg
jmp
mov
add
inc
mov
in
test
dec
daa
cwtl
in
inc
cmp
call
aaa
and
out
mov
mov
xchg
jmp
cmp
lret
cmp
stos
fists
pushl
jne
sub
mov
std
and
les
jbe
in
ljmp
out
sbb
outsl
mov
loope
push
mov
dec
testb
push
mov
cmc
lret
mov
pushl
out
inc
je
cmp
push
sub
mov
lock
arpl
leave
pop
fs
cmc
fisubl
xchg
decl
pop
lods
out
bound
in
or
lock
fisttpl
ds
loopne
cmpsb
dec
pushl
out
mov
out
sbb
mov
in
mov
imul
lret
mov
ret
add
inc
pop
and
mov
scas
cmp
call
sub
jb
jecxz
int
inc
cmp
mov
ficomps
decl
jg
sub
push
xor
ja
and
pop
adc
push
lret
ljmp
sbb
hlt
cwtl
es
jp
mov
push
test
sbb
jbe
or
dec
sbb
and
or
sarl
add
lret
pushf
inc
jg
jmp
ja
dec
lea
mov
outsb
jl
rorl
and
or
clc
ljmp
into
jae
mov
sub
xor
dec
sbb
cmpsb
inc
fcomps
sbb
call
mov
mov
mov
inc
sub
jmp
lcall
xor
fcmovne
mov
lcall
insl
push
sysret
mov
lahf
inc
adc
push
cmpsl
xor
icebp
jp
or
aas
cmp
push
pushl
ficoms
cmp
jnp
dec
inc
push
das
hlt
push
das
lods
jb
cmc
sar
incl
jo
xor
out
cmc
adc
scas
in
scas
xchg
jecxz
push
and
mov
incl
pop
enter
jge
pop
lods
or
adc
jge
stos
stos
mov
and
sub
add
call
adc
jp
pushf
fdivrp
pop
iret
mov
loop
jb
shll
pop
call
loopne
fdivp
je
pop
into
das
pop
jp
int3
fs
push
mov
inc
ss
jmp
nop
push
mov
xchg
mov
call
icebp
jbe
test
add
decl
sbb
les
and
pop
xor
adc
xchg
jbe
mov
hlt
iret
mov
test
fs
mov
inc
or
cli
mov
scas
sbb
lcall
mov
daa
cli
pop
mov
or
mov
outsb
into
lret
in
lcall
inc
and
mov
sti
gs
xor
mov
jge
loopne
ss
ljmp
aam
push
inc
jl
add
adc
stos
fadds
add
pop
xchg
push
mov
mov
fwait
mov
call
adc
pop
jne
out
setle
shll
fwait
mov
js
ljmp
imul
cmp
mov
pop
fstl
and
lret
sub
mov
repnz
fsubp
cmc
push
push
shll
inc
pop
mov
lret
push
cmpsl
pushl
nop
les
lret
or
pop
dec
xor
pop
ficoml
and
pusha
ja
cmp
adc
sar
cmp
fcmovnu
lahf
xor
sub
fbld
ss
sahf
icebp
mov
out
ljmp
aad
inc
pop
sar
add
loop
adc
pop
into
inc
aaa
inc
mov
ljmp
xchg
fs
sub
push
sbbb
lcall
sub
cld
dec
pushf
lahf
std
call
loopne
stc
mov
jns
pop
scas
es
jg
add
mov
lods
jp
push
push
shll
pop
adc
cld
sub
push
pop
and
inc
cmp
std
das
add
cwtl
adc
je
jno
clc
pop
jns
outsb
add
call
cmp
in
hlt
test
add
decl
pop
add
inc
mov
jg
mov
out
inc
xorb
jno
sub
fcomip
lcall
jno
inc
jnp
gs
jbe
mov
dec
testl
sbb
stos
ret
std
jnp
mov
sub
xor
dec
mov
mov
pop
inc
add
rcrl
jmp
and
or
sahf
fsts
out
adc
insb
movsl
xchg
pop
fcoms
mov
jnp
icebp
decl
clc
dec
cmp
cmp
imul
push
inc
rorl
jmp
in
xchg
loope
sbb
mov
push
pushl
push
aas
push
out
dec
dec
lods
test
stos
mov
out
aas
jl
dec
test
call
mov
pop
aam
sti
orb
xchg
negl
mov
aam
fsubrl
jg
int3
mov
js
lods
cs
cmp
icebp
cmp
in
jbe
das
lcall
inc
sti
dec
adc
pop
and
xor
loopne
scas
aaa
in
pop
mov
cltd
mov
mov
iret
pop
push
lock
movsb
jl
imul
sub
pushl
xchg
repnz
pushf
inc
rorb
or
cmp
lcall
les
cmpsb
cmc
add
shrb
in
mov
jg
mov
push
loope
out
in
xchg
iret
dec
sti
mov
cs
cli
xchg
ja
aad
arpl
mov
sbb
or
adc
out
xor
inc
push
fxtract
cli
xlat
mov
or
xor
dec
push
mov
or
and
mov
jg
or
sahf
jo
outsl
pushf
xchg
pop
pusha
test
cmp
incl
push
pop
cli
js
push
mov
pop
push
pop
jbe
mov
mov
ja
jecxz
lods
xor
incl
clc
dec
int3
mov
ret
imul
repnz
outsl
test
jmp
fldenv
iret
push
sahf
or
lock
ret
pushl
mov
mov
and
icebp
push
cmp
add
lcall
test
xchg
pushf
lcall
jnp
mov
xor
pop
mov
pushl
sbb
mov
mov
nop
out
mov
mov
pop
inc
popa
loop
cs
lcall
sub
hlt
pop
mov
sub
xchg
mov
das
xchg
inc
lea
bound
insl
loope
cli
call
dec
dec
jl
or
es
lods
fs
movsl
fwait
popf
lea
mov
in
xor
adc
jo
mov
lret
aas
fcmovnu
and
mov
pop
xchg
adc
sub
hlt
or
jnp
inc
ss
addr16
inc
leave
dec
psubusw
pop
ljmp
aas
ljmp
sub
jnp
les
sbb
fidivs
movsl
jle
mov
testb
test
push
pushf
dec
fisttpl
push
mov
dec
es
mov
xchg
or
push
insb
dec
pop
jg
jb
negl
out
out
adc
mov
pop
sbb
mov
pop
repz
shl
push
idiv
ja
or
call
out
hlt
sub
mov
out
xchg
xor
repz
sub
addl
mov
sti
xchg
ljmp
push
shll
cli
iret
jg
and
mov
mov
adc
xchg
sub
lcall
pop
ret
loop
add
mov
jmp
in
sbb
imul
sbb
ret
xor
call
sub
jae
adc
test
lods
xor
bound
decl
lods
leave
and
ss
xor
xchg
mov
xchg
push
fisttpll
fidivrl
nop
mov
lods
lahf
jg
push
mov
into
jbe
fmull
test
sub
ss
fisttpl
ljmp
inc
pushl
pop
cltd
test
rorl
inc
dec
daa
je
mov
call
mov
mull
dec
and
mov
add
rcrb
in
xchg
dec
mov
mov
pop
and
loope
lock
inc
stos
fcmovb
and
xor
lcall
push
in
movsb
inc
xchg
fdivs
mov
mov
cmc
popl
jp
mov
loop
mov
adc
xchg
pushl
push
rcl
repz
aad
adc
pusha
shll
sar
lcall
add
pop
hlt
cmp
mov
dec
lcall
pusha
in
sbb
bound
fcmovb
rcr
lcall
repz
cmp
or
mov
jmp
add
push
mov
inc
out
es
ficoms
in
dec
call
jmp
xor
or
xchg
adc
sub
or
lcall
outsl
add
xlat
xchg
sbb
and
lods
mov
sbb
cld
jmp
decl
mov
out
pop
dec
mov
aad
mov
push
and
cwtl
cmp
js
pushl
and
sub
jae
popa
dec
jp
les
aam
mov
aad
jnp
mov
mov
jno
call
inc
mov
pushf
fdivrl
cmp
pushf
arpl
fsts
mov
pushf
insb
call
cmp
adc
es
pop
jb
sbbb
or
aaa
push
mov
into
mov
cli
shl
jp
cmpsl
lret
xchg
fadds
jg
call
in
pushf
sub
dec
cmc
fildll
add
xchg
decl
mov
inc
pop
push
ljmp
mov
or
dec
ljmp
or
sub
loop
aaa
sub
mov
sbb
xchg
fadd
in
xor
outsl
cli
ljmp
jo
inc
xchg
popa
mov
fdivp
mov
jg
leave
mov
sub
mov
jmp
jae
xor
add
lock
cmp
push
cwtl
cmc
jmp
jb
pusha
jae
sbb
aad
and
insb
fcoms
js
lods
popf
inc
mov
into
rcl
pushf
pop
daa
lahf
mov
push
rorb
hlt
jno
jmp
mov
test
aad
cmpsb
inc
pop
jp
ljmp
sbb
inc
cmp
fcomip
mov
sbb
in
dec
dec
ds
mov
and
stc
pop
aas
pop
add
mov
mov
jne
aad
imul
xor
test
add
jne
test
jl
sbb
xor
mov
ss
roll
or
loope
aam
sbb
inc
sbb
loopne
and
decl
xchg
bound
mov
mov
movb
fimull
sub
mov
movsl
negl
sub
jmp
push
inc
dec
cli
scas
mull
dec
in
bound
lcall
mov
leave
sbb
pusha
inc
push
rorb
mull
cmpsb
jnp
das
jne
aas
cmp
decl
mov
xor
test
adc
loopne
jno
push
testb
dec
and
loop
subl
addr16
xchg
iret
jmp
dec
in
pushl
imul
insb
pop
xor
stos
sbb
movsl
mov
pop
loopne
xor
outsb
xchg
mov
mov
mov
add
sbb
adc
xor
mov
idivb
mov
jge
xor
inc
popa
iret
scas
mov
sbb
pushl
add
push
jmp
mov
cmpsb
push
imul
out
fstps
or
mov
ja
loop
pop
push
xor
fmuls
pushl
xor
insl
mov
pop
push
cmp
aas
int3
int
shlb
in
aas
jp
mov
jmp
call
jo
and
sub
mov
sub
rcl
ja
xchg
pushl
mov
jo
xadd
dec
adc
rcrl
pop
xchg
mov
ljmp
ret
fldcw
add
popf
sub
clc
mov
shrl
adc
xchg
loopne
addr16
fldenv
ds
cmp
fs
jle
sub
fwait
add
inc
xchg
es
dec
test
xchg
xor
filds
push
mov
cmp
xchg
shll
add
cwtl
add
lcall
mov
dec
cmp
aas
cmp
mov
mov
popf
ret
nop
insl
xchg
imul
dec
aam
dec
jle
sti
addr16
outsb
popf
mov
xchg
mov
push
dec
cld
nop
cmpsl
fdivrs
mov
push
push
int3
movsl
dec
cwtl
subl
pop
fmul
sub
and
test
push
jmp
lret
sbb
adc
test
mov
ss
inc
test
pop
fsubr
cli
ljmp
lahf
das
pop
push
test
xchg
jo
jg
xlat
in
js
mov
cli
pop
sub
lcall
pop
mov
andl
ret
sub
mov
ja
add
int3
icebp
stc
push
pop
pop
test
mov
mov
pop
adc
add
jp
sub
cli
xchg
push
inc
add
into
pop
or
add
mov
stc
call
js
push
pop
inc
outsb
enter
cld
int3
lods
or
xorb
add
sbb
ljmp
sarb
and
jo
inc
nop
test
lahf
sub
aaa
std
inc
dec
test
xorb
lcall
rorb
or
in
nop
out
lahf
xchg
dec
pushl
std
ljmp
inc
push
les
sbb
sbb
fiaddl
sub
sbb
adc
cltd
pop
mov
xor
or
arpl
add
clc
xor
dec
data16
das
inc
or
pop
jo
add
call
xchg
daa
lods
jnp
push
push
sbb
movsb
lret
mov
xor
dec
movsb
sbb
iret
mov
call
cmpsl
test
and
xchg
fisttpll
testb
jb
das
xor
rcrl
xor
movsl
repnz
cli
jg
jns
insb
fiadds
mov
call
mov
sti
sub
ljmp
xor
std
mov
mov
jle
shrb
xorb
mov
out
push
or
mov
rcrl
jecxz
outsb
jmp
or
cmpl
or
pushf
stc
and
int3
movsb
mov
mov
loopne
mov
inc
adc
aas
imul
mov
mov
xlat
jae
mov
jns
add
imul
jmp
xor
fisubrl
dec
test
add
cmp
sub
cmc
lods
int
fisubrl
mov
push
xchg
mov
call
mov
fisttps
mov
xor
adc
sub
sbb
dec
fimuls
insl
mov
lcall
sbb
lret
pop
in
fdivp
gs
cld
inc
je,pt
rorb
movb
mov
push
and
popf
shrl
lcall
out
jl
loope
mov
pop
push
cmpsl
pop
dec
jno
mov
mov
movsb
pushl
mov
cld
push
mov
cltd
sbb
mov
lds
jg
pop
jnp
cmc
or
xor
lret
out
int3
mov
jmp
cmp
loop
pushl
inc
rol
adc
cld
push
aam
pop
test
mov
lret
fstl
mov
lahf
out
push
sbb
cld
pop
or
mov
std
pop
pop
or
and
inc
pop
mov
dec
loope
lods
add
ds
mov
clc
mov
lock
sbb
pop
adc
or
dec
ds
gs
int
ljmp
jg
jmp
mov
and
loop
jae
pop
mov
inc
xchg
daa
or
pop
cld
sub
decl
cmpsb
popa
loope
cmc
push
sbb
xchg
inc
pop
pushf
scas
adc
sahf
push
in
orb
mov
xlat
lods
pop
inc
cs
cs
pop
jnp
fists
call
adc
gs
insl
scas
hlt
sti
sbbl
int3
loop
aad
cmp
ljmp
jmp
mov
sub
sub
in
lahf
cmp
stos
inc
sar
jmp
pop
adc
icebp
ret
lret
sarl
rorb
mov
mov
xor
ljmp
popa
add
adc
adc
gs
jne
into
dec
jnp
ljmp
add
pop
and
ret
cld
daa
adc
es
clc
mov
loopne
adc
loopne
cmpsl
adc
sbbl
inc
sub
inc
pop
decl
jne
inc
shll
pushf
negl
lcall
and
jns
or
mov
inc
movsl
ficomps
mov
pop
cld
jp
mov
cmp
or
pop
inc
add
rcrl
pop
fucomip
inc
out
imulb
jb
fwait
aam
cmp
sub
mov
mov
incl
popa
mov
pop
cmpsl
test
mov
adc
ljmp
lcall
cld
jo
fisubs
dec
mov
mov
rorb
out
out
add
fdivs
sbb
ljmp
sbbl
dec
roll
dec
adc
std
sbb
scas
mov
ret
pop
push
push
decl
ljmp
dec
outsb
xchg
bound
repnz
out
lcall
mov
pop
push
test
mov
inc
mov
cmp
cmpsl
mov
sub
sarl
jns
fcoml
cmp
cmpsl
jg
and
push
pop
je
pop
fucompp
lahf
stos
lcall
pushl
scas
jns
push
das
mov
and
push
add
fabs
outsb
shrb
decl
insb
mov
repz
enter
outsl
imul
loopne
mov
pushl
and
mov
in
adc
cwtl
loopne
adc
fwait
adc
mov
out
and
das
scas
lods
repz
add
mov
ss
es
outsl
sbb
stos
lods
xchg
mov
push
icebp
add
ljmp
xchg
test
insb
inc
xchg
mov
jae
cmpsl
sbb
mov
mov
jno
frstor
insl
jecxz
popa
out
push
ret
jno
cmp
lods
cltd
rorb
jo
pop
loopne
imul
xchg
ljmp
jb
movsl
out
flds
dec
xor
les
ss
jmp
mov
dec
mov
xor
pcmpeqw
add
ret
pushl
jg
jae
loope
push
mov
aam
sub
pop
push
mov
or
gs
and
jnp
out
sbb
sub
xorl
jg
mov
fbstp
mov
ds
adc
add
sti
lods
mov
xor
jbe
jno
or
pushl
out
jo
out
in
jns
dec
notb
mov
pop
and
dec
sub
loopne
sbb
bound
xor
jg
clc
out
call
jecxz
fs
sbb
mov
add
xor
decl
dec
lahf
aam
dec
rcll
jbe
popf
xchg
insl
lea
and
lcall
dec
sarl
mov
in
mov
adc
jmp
pop
test
fucom
sahf
ljmp
sbbb
mov
jmp
jno
cmp
outsl
sbb
add
jmp
mov
mov
inc
xor
fdiv
dec
insl
mov
ss
test
dec
jg
and
arpl
out
clc
jne
pop
int3
push
lods
sub
loopne
inc
jmp
push
xor
push
mov
jg
jmp
movsl
xchg
mov
fisubrs
jmp
adc
dec
fsubrs
and
pop
hlt
ljmp
dec
jno
lcall
call
lret
xchg
or
lock
mov
fimull
push
pop
cltd
jae
popf
icebp
lods
sbb
inc
dec
ret
nop
fldenv
jmp
add
jp
mov
fcmovbe
test
add
pusha
incl
out
dec
addr16
movsb
pop
cmc
mov
cltd
loopne
mov
inc
scas
xchg
rorl
test
mov
ja
xchg
pop
cmp
into
leave
or
call
add
addb
add
popf
jno
test
or
and
jle
mov
mov
jp
sbbl
in
inc
dec
pop
mov
cs
or
sbb
decl
add
inc
sarb
inc
adc
sbb
push
jmp
push
or
or
xchg
out
or
dec
mov
pop
out
sahf
loopne
jg
pushl
dec
pop
repz
cmpsl
ret
and
push
sbb
mov
dec
jnp
jo
ljmp
mov
std
outsl
mov
mov
inc
es
cmpsb
nop
shlb
add
jg
sbb
ret
std
test
mov
wrmsr
mov
enter
mov
call
call
movsb
sahf
test
cli
mov
jmp
rolb
lods
inc
jmp
ja
aam
adc
add
ret
add
add
dec
xchg
in
xor
inc
or
and
mov
jno
or
lcall
sbb
push
xor
shlb
lcall
cmp
pop
leave
jecxz
inc
pop
inc
aaa
fdivrp
mov
cmp
sti
out
xchg
xor
shl
aam
sub
notl
sub
ljmp
inc
jo
dec
cli
xor
pop
cmp
mov
fcos
call
int3
mov
jge
cmp
mov
out
or
sub
bound
decl
pop
scas
inc
cs
xchg
push
icebp
jmp
gs
mov
ds
add
jmp
ficoms
stos
gs
jae
inc
outsb
popf
sar
xchg
jo
adc
inc
int
sbb
jmp
pop
sbb
mov
ds
sbb
pop
adc
sbb
stc
push
in
mov
cli
push
and
out
push
shrb
inc
movsl
aas
adc
mov
mov
pop
loopne
popf
stos
test
ror
mov
pop
xchg
hlt
mov
push
pop
mov
push
push
mov
push
jbe
push
in
push
adc
mov
push
lea
mov
shrb
and
rclb
jg
mov
popf
iret
xchg
aaa
fadd
lock
pop
xchg
mov
adc
pushf
lcall
jge
fnsave
lock
mov
es
or
rcll
or
sar
lcall
sub
pop
pop
shr
pop
and
push
dec
enter
icebp
mov
jne
imul
scas
outsl
lods
mov
xlat
adc
push
mov
xchg
jns
lahf
and
call
pop
xchg
mov
push
mov
xchg
in
test
pop
or
pop
pop
dec
sti
mov
fildll
decl
mov
mov
fs
pop
enter
stos
cmc
imul
mov
push
add
scas
xchg
adc
and
pop
shlb
in
ljmp
pop
ret
cmp
lcall
sbb
jmp
scas
inc
stc
xor
push
in
jl
popf
xor
pop
mov
push
inc
dec
stos
popf
xlat
das
fildll
pop
push
cmp
imul
fstpl
ds
mov
and
test
pop
mov
out
test
xchg
sbb
add
push
inc
inc
orb
ljmp
mov
sti
jl
in
add
daa
bound
cmp
and
adc
insl
pop
adc
decl
jmp
idivb
loop
aas
scas
xchg
pop
or
lods
aaa
imul
aad
push
lcall
or
cmp
jp
fsubrp
out
xorl
or
incl
sbbl
divl
outsl
out
shr
add
addl
bound
dec
cmp
fsub
into
push
or
fmull
xchg
call
pop
daa
or
or
out
iret
dec
sub
aad
cmp
sub
lock
loopne
test
push
rolb
popa
jecxz
dec
and
sbb
mov
addr16
mov
pop
test
xchg
sub
imul
inc
popf
decl
adc
loopne
pushf
fs
jle
mov
mov
dec
pop
test
mov
inc
dec
cmp
jb
pop
sbb
push
sbb
mov
mov
cld
ljmp
mov
mov
and
dec
push
jmp
fimull
fsubl
or
cwtl
jns
mov
sbb
sub
xchg
ljmp
xor
repz
movsb
into
insb
into
das
push
push
stos
mov
push
jmp
or
mov
or
cmp
sti
inc
jp
gs
xor
push
int
push
or
cmp
inc
inc
dec
ljmp
ret
scas
imulb
pop
out
out
shll
sar
je
mov
out
incl
adc
arpl
mov
dec
dec
xchg
gs
jle
loopne
lret
movsb
sbb
lods
pushl
add
cmp
pop
bound
sub
scas
lods
mov
or
ja
sti
call
pushf
lret
jmp
lods
or
cmp
loope
pop
xchg
pushl
std
pop
sahf
and
mov
mov
fwait
sti
shl
loop
call
fsubrp
inc
insb
mov
cmp
daa
addr16
std
adc
in
push
lret
roll
inc
and
leave
fs
cmp
aad
lock
xor
jae
fmul
imul
add
popf
fmuls
call
out
cmp
xor
fdivl
mov
push
pop
jnp
sbb
jae
and
xorl
xor
push
and
out
decl
dec
jnp
icebp
insl
sahf
xchg
push
push
pop
cs
js
push
je
dec
xor
cmp
lock
dec
add
jo
pop
mul
push
sahf
rclb
ds
in
jge
sahf
mov
mov
fisttpll
sbb
jns
pusha
xchg
cmp
pop
mov
or
ss
icebp
and
mov
arpl
xchg
rorb
aam
push
inc
and
jecxz
add
in
jg
adc
outsb
add
aam
nop
xchg
inc
in
and
pop
lcall
ljmp
jp
shlb
mov
inc
outsb
bound
xchg
dec
arpl
inc
mov
lcall
aad
popa
cmpsb
dec
inc
jns
xor
cmpsb
testb
mov
mov
pop
mov
adc
sbb
ret
bnd
scas
mov
addr16
or
cmp
and
mov
mov
aaa
rol
shll
jb
mov
jg
jmp
insl
in
sbb
jmp
dec
cmp
aad
adc
pusha
mov
and
dec
pop
cmpsb
mov
scas
insb
or
ljmp
stos
scas
pcmpgtw
inc
jg
or
adc
jle
cmpsl
lock
sbb
push
or
cmpsb
pushl
fdivl
stos
xchg
add
push
mov
mov
cltd
dec
mov
scas
mov
outsb
mov
les
test
stos
adc
movsl
jecxz
outsb
inc
push
clc
sub
js
inc
in
loope
mov
lahf
jg
xor
and
pusha
pop
cmp
mov
lods
inc
push
aam
sub
fdiv
or
xchg
aaa
pop
sub
sti
je
ljmp
sbb
xchg
lsl
pop
jae
jg
inc
jmp
adc
xchg
enter
adcl
pop
bound
mov
jl
fsubs
add
inc
push
dec
out
pop
xor
or
je
mov
add
adc
sbb
sbb
call
idivb
cs
cli
cmp
adc
push
jl
cmp
mov
ficompl
pushl
pushf
frstor
in
jns
mov
ja
push
dec
jne,pn
push
mov
adc
sbb
test
call
sti
sbb
pop
adcb
push
and
sub
leave
int3
xor
mov
mov
add
popf
shl
popf
daa
and
pop
stos
sbbb
sbb
movsl
and
ljmp
jg
inc
and
and
jno
aam
lcall
and
or
pop
xchg
cld
sub
mov
pop
mov
or
mov
mov
jbe
insb
add
aas
inc
pop
fs
movsb
cmp
or
movsb
adc
sub
imul
out
loope
push
fsubrs
dec
adc
cmp
ficomps
decl
test
lgs
jp
andb
outsl
pushl
sbb
xchg
pop
ja
add
loope
dec
pop
lret
jbe
xchg
xchg
nop
ror
int3
xor
jmp
pop
fwait
sub
stos
into
push
and
sub
mov
ljmp
daa
sub
cld
xchg
dec
stc
push
cmp
pop
mov
and
ljmp
cld
dec
cmp
push
movsl
or
ja
inc
mov
imul
lret
mov
jle
test
xor
inc
fdivl
inc
cli
decl
sbb
neg
cli
sub
push
jno
adc
xlat
jg
insb
aam
jmp
push
pop
or
push
cmpsl
cmp
dec
iret
jmp
xchg
lcall
mov
fsubr
push
jmp
inc
mov
call
lcall
sub
xor
cmp
and
into
jle
scas
lcall
cmp
mov
xor
add
add
xchg
cmp
and
ja
cli
xchg
pop
xor
pop
jno
scas
mov
jmp
mov
das
in
fnstcw
adc
dec
lret
add
push
inc
lret
inc
mov
xor
jmp
call
imul
popl
xor
insb
rcr
out
icebp
cmp
jmp
adc
cmp
andb
sbb
fcmovb
adc
shr
mov
sub
loop
sbb
mov
jg
jo
mov
pop
sti
xchg
mov
pop
jmp
lock
sub
test
popf
fldcw
decl
mov
je
jge
mov
cmc
add
test
adc
shll
pop
lock
notb
jp
pop
push
sub
shrb
or
xor
mov
or
inc
nop
mov
das
clc
sti
mov
mov
and
and
mov
sub
add
shlb
mov
push
iret
push
sti
cmpsl
enter
mov
stos
shlb
ret
test
sub
mov
dec
add
and
sub
dec
mov
fcmove
test
lahf
cli
sub
mov
imul
xor
xor
stos
dec
push
ficoms
pushf
xchg
loope
xor
cltd
mov
inc
int3
bound
sub
jo
imul
xlat
add
mov
iret
pop
mov
lods
hlt
stos
out
jmp
pop
push
daa
movaps
jmp
mov
cmc
mov
mov
loopne
mov
test
call
pushl
mov
daa
ja
cmp
stos
int
sub
mov
sub
mov
pop
jae
push
ss
into
and
pop
fisubs
cmpsb
sub
movsl
je
pop
add
incl
cwtl
inc
and
scas
loop
in
cmp
popf
es
cmp
cmp
mov
mov
fcoms
xchg
ror
repz
and
mov
mov
lret
pop
roll
cmp
decl
xchg
test
call
outsb
push
jo
add
mov
mov
mov
mov
in
inc
inc
insb
xchg
outsb
pop
fs
and
std
jmp
mov
push
push
in
out
addr16
push
int3
inc
sbb
pusha
sub
call
mov
add
cwtl
jl
sarb
aad
fldz
decl
stos
pushf
mov
pop
pop
cmc
mov
lods
out
mov
push
mov
lock
inc
dec
pop
clc
jmp
mov
test
jne
mov
ljmp
add
push
xchg
xchg
ret
and
add
insb
cmp
orb
call
scas
cli
inc
adc
inc
sti
mov
adc
jl
popa
add
call
pop
adc
inc
cmp
in
jmp
decl
push
jne
jns
shrb
pop
fisttpll
sti
lock
and
adc
push
pop
insl
xor
pop
push
lret
incl
sbb
jnp
ffree
jne
mov
popa
jne
fdivrl
stos
shr
lret
jne
inc
xchg
ljmp
filds
inc
dec
mov
jp
jo
jnp
ss
push
sti
xor
fildl
mov
jmp
cmp
or
inc
inc
dec
add
fstpt
mov
xchg
call
sbb
sub
pusha
xchg
aaa
ss
test
push
jmp
loop
lds
dec
mov
scas
lret
dec
jbe
sbb
and
cld
decl
in
test
xchg
roll
out
push
cs
movsb
dec
rcll
insl
gs
xchg
insb
pushl
mov
cld
ud1
je
jecxz
inc
cmpsl
orb
clc
jge
and
decl
lds
or
stos
aaa
pushf
push
dec
icebp
inc
or
stos
bound
inc
and
adc
incb
cmp
dec
in
xor
sti
push
sti
add
xchg
loop
adc
xchg
clc
sbb
mov
cltd
outsl
pop
lret
repnz
jp
pushl
rcr
sbb
loopne
cmp
mov
cmp
mov
incl
ret
and
in
push
sbb
mov
mov
lods
shrb
add
pushl
or
pop
push
pop
mov
mov
inc
arpl
sub
or
hlt
ljmp
cmp
jle
xor
inc
daa
jb
repnz
jmp
clc
xor
lcall
or
imul
sahf
bound
mov
leave
mov
loope
in
lock
mov
xchg
mov
mov
lds
out
in
push
pop
pause
xchg
imul
sub
or
aam
xor
or
int
xor
iret
or
sbb
fisubrl
push
pushl
rol
dec
cwtl
mov
inc
push
xor
mov
fistl
or
inc
cs
fnstsw
xor
and
push
imul
fcoms
cmp
pop
mov
test
mov
or
push
lret
jmp
inc
inc
mov
rorl
mov
xchg
test
xchg
call
inc
or
pop
push
rcr
in
clc
or
pusha
iret
dec
call
adc
dec
incl
push
xor
test
mov
xor
imul
mov
outsb
lcall
pop
in
fiaddl
pop
rcrl
stc
mov
xor
daa
and
lds
pop
jno
ljmp
repnz
cld
les
add
enter
dec
imul
lcall
and
and
and
cwtl
xor
dec
stos
test
cmp
sub
xchg
jmp
clc
mov
mov
into
lods
and
jle
jmp
popf
dec
inc
xor
pop
and
jae
pop
data16
jmp
adc
xor
stc
paddusw
aad
push
clc
lods
lcall
sub
hlt
dec
add
xchg
shlb
iret
mov
call
sbb
je
jno
mov
fwait
fs
insb
fildll
in
movsb
mov
push
jl
loop
jns
sub
and
pop
add
add
jg
ljmp
fisubl
dec
cmpsl
jbe
jmp
xchg
dec
ds
call
adc
shrl
sti
cmp
dec
adc
mov
ds
mov
cmp
jo
push
jo
xchg
mov
imull
popa
xor
test
ret
insb
push
lock
outsb
lods
pop
pushl
pop
dec
aam
jnp
adc
push
push
mov
je
daa
and
xor
xor
mov
mov
call
ret
dec
mov
test
loop
jb
push
add
fwait
insl
shlb
sar
sbb
out
cmp
int
xchg
xor
xor
call
sub
out
push
inc
out
or
out
lcall
pop
shlb
jnp
mov
push
add
mov
mov
push
jbe
mov
push
in
jmp
push
imul
jge
or
fisubs
lcall
incl
hlt
mov
sub
adc
fisubs
mov
ret
incl
les
add
adc
pextrw
dec
enter
pop
cmc
fcmovbe
nop
push
xor
mov
incl
aad
inc
fsubs
aad
or
jecxz
lcall
call
test
push
stc
jae
lahf
jo
test
sbb
fstpt
adc
loopne
push
scas
mov
incl
insl
pop
mov
imul
push
mov
xchg
rcrl
pushl
xchg
mov
notb
xchg
sub
fstpl
sti
push
or
jmp
and
int
sbb
pop
pusha
movsl
imul
or
ret
pop
test
jo
repnz
xchg
cmp
lahf
pop
out
out
sub
xchg
cld
mov
xlat
loope
pushf
push
add
subb
bound
movsl
jno
mov
addl
stc
ret
inc
int3
or
outsl
or
jl
xchg
rorl
stc
cmp
iret
or
or
ljmp
cli
arpl
insb
mov
rclb
pop
mov
mov
lcall
orb
stos
adc
incl
std
test
movsb
nop
arpl
sarb
out
enter
loopne
test
jg
ret
pop
push
in
and
imul
jo
mov
call
je
cli
sbbl
addb
mov
call
mov
popf
inc
or
and
push
addr16
cs
sbb
fstpt
nop
or
fstps
pop
sti
mov
mov
rolb
mov
xchg
push
stc
mov
or
mov
aaa
shlb
pop
xchg
repz
dec
xchg
pushl
mov
fbld
jmp
daa
or
pop
repnz
nop
test
pushl
lods
fmuls
inc
xlat
daa
add
stos
add
sub
nop
scas
lods
xchg
in
decl
je
fwait
aas
ret
ljmp
dec
lcall
testl
lcall
out
jbe
mov
mov
testb
inc
popf
loopne
repnz
xor
mov
xchg
subb
xchg
cmc
aad
incl
or
cmpsb
adcb
sub
sbb
add
shrl
jmp
mov
pop
ficoms
push
das
out
js
ret
xchg
pop
adc
cmp
dec
in
jae
stos
dec
in
sub
push
divl
jge
add
cmpsb
stc
and
mov
call
bound
cmpl
or
or
orl
lods
push
mov
test
inc
out
mov
shr
push
push
dec
push
dec
jnp
movsb
incl
arpl
pop
pop
mov
lock
shlb
mov
out
jnp
in
push
mov
cmp
dec
mov
and
aas
mov
jns
xchg
pop
jle
push
test
or
cltd
mov
cmpsb
mov
sbb
mov
mov
ss
aad
fucomi
xchg
push
add
and
xchg
in
mov
ljmp
inc
xchg
lret
daa
cmp
mov
mov
pop
xor
push
cli
jl
movsl
cmc
jmp
iret
test
jmp
je
mov
and
push
pop
mov
adc
pusha
ret
mov
insb
ds
mov
xor
es
mov
pop
fs
dec
push
adc
mov
push
scas
lret
mov
xor
pop
mov
push
cltd
dec
mov
or
push
ljmp
mov
repz
imul
mov
aaa
xor
cli
inc
out
lcall
pop
sbbb
adc
in
dec
dec
jg
pushl
mov
sbb
dec
xor
out
lahf
stos
cltd
inc
out
inc
sbb
mov
lcall
lcall
daa
jo
lock
insb
fdivrl
movsb
sbb
aad
inc
cmp
and
enter
jmp
add
sarl
mov
xchg
xor
aam
jno
push
pop
insl
inc
fldenv
hlt
jmp
xchg
xchg
popf
or
popf
xchg
sarb
xchg
bound
out
out
subb
out
pop
sbb
mov
push
and
es
repnz
lds
ljmp
adc
inc
fs
leave
xchg
adc
scas
inc
mov
sti
sub
mov
mov
mov
adc
mov
jmp
cmp
mov
push
cld
pop
insl
aas
int
imull
push
je
adc
out
clc
ljmp
pop
adc
lahf
popa
dec
hlt
pop
jmp
sti
xchg
sub
add
xchg
popf
ret
ret
addb
inc
dec
sahf
in
xchg
xchg
data16
ss
call
int3
jl
xor
pop
inc
movsb
adc
sti
fidivl
xor
sbb
inc
out
fnstenv
lcall
test
fs
and
sub
ficompl
sub
jg
js
fsubl
add
sub
pop
lea
or
cmp
push
pop
daa
js
adcb
gs
pop
les
inc
xchg
dec
mov
push
adc
xor
pushl
add
fwait
inc
ficoms
xor
adcl
out
jg
jmp
push
lock
add
rcll
scas
loop
mov
mov
decl
cwtl
inc
ljmp
cmpsl
shll
loope
ret
push
cmp
sbb
fsubs
adc
incl
inc
sub
adc
mov
bound
fcmove
int3
ficompl
pop
xchg
xchg
cmpsb
sub
out
je
push
arpl
mov
add
cmp
mov
test
mov
ret
jg
jl
fadd
fiadds
pop
neg
jle
add
incl
lock
xchg
test
or
inc
in
mov
flds
cld
mov
out
lock
jp
ljmp
jg
popa
ljmp
dec
ss
push
inc
adc
pop
push
mov
aaa
movsb
push
stos
ljmp
popf
sub
orl
mov
les
clc
jg
incl
cmp
sbb
cmpb
dec
and
cwtl
or
adc
inc
mov
jae
pop
push
mov
or
out
in
sarl
adcb
out
pushl
fcomip
lods
xchg
insb
lahf
movsb
rol
push
inc
xchg
adc
ror
adc
std
mov
cmp
jle
test
mov
inc
sub
lock
sbb
and
lods
xor
or
fstl
pop
pop
je
mov
lods
icebp
jno
pusha
sbb
js
lods
call
dec
stos
sti
adc
sti
add
sbb
int3
incl
jg
daa
mov
and
mov
dec
ret
call
clc
xchg
ljmp
xchg
in
cmpsb
push
iret
loopne
push
mov
ljmp
stos
iret
cltd
scas
repnz
push
jae
pop
fisubrs
fwait
mov
jecxz
jne
xorb
dec
ss
fisttps
add
push
paddusb
pop
or
aas
fnstcw
mov
out
clc
cld
xor
inc
and
sbb
sub
xor
inc
lret
mov
jg
jb
push
mov
xchg
and
scas
sub
xchg
ss
sbb
stos
in
mov
cli
jmp
lret
imul
fs
push
xchg
pushl
xchg
dec
add
sub
and
rcll
push
ja
iret
cld
in
fisttpll
mov
push
dec
mov
dec
sbb
cmp
push
cwtl
jp
add
insl
outsl
jecxz
ljmp
xchg
scas
loope
int
inc
and
cmpsb
cmpsb
sub
xchg
mov
pusha
lea
outsb
lcall
dec
adc
dec
jne
or
push
sub
lahf
jl
decl
and
rcrw
sub
mov
jge
rorl
call
jle
pushl
mov
cmp
fcomip
jmp
dec
movsl
xorl
test
inc
cmp
xchg
add
popf
decl
test
add
les
push
pop
jno
and
jb
in
movsl
movsl
or
push
or
daa
loope
jl
fidivrl
add
mov
sahf
std
jmp
ret
xor
ds
imul
neg
or
lret
mov
jg
or
inc
dec
mov
xchg
es
jmp
gs
sub
outsl
into
push
cmp
xchg
mov
incl
dec
push
xor
sbb
jne
dec
sub
or
push
imul
sbb
jns
repz
nop
jecxz
pushf
jmp
push
cld
lcall
adc
in
cmp
xor
rclb
or
std
dec
scas
outsb
or
sub
jo
cmp
imul
arpl
and
andl
pusha
pop
call
lods
arpl
lret
push
xor
lret
sbb
in
cmpb
decl
outsl
adc
pop
rcr
sbb
sub
movsb
push
mov
and
incl
ret
mov
jle
xor
dec
ja
mov
rclb
daa
mov
int3
scas
stos
mov
cli
movsl
lcall
fwait
ja
out
mov
inc
push
push
mov
in
or
xchg
and
daa
mov
lcall
test
aas
in
push
daa
dec
je
out
aam
sbb
gs
movsl
push
or
call
les
loop
push
xor
inc
adc
lock
jp
xlat
dec
xlat
je
stos
sub
jmp
std
cmpsl
test
movsb
test
mov
jl
dec
adc
sarl
cmp
addr16
mov
jae
lods
sub
pop
pop
dec
cwtl
lahf
lahf
shrb
aaa
pushf
mov
loop
ljmp
xchg
imul
cmp
push
add
jl
inc
inc
movsb
insb
call
or
fdivr
dec
xor
lock
mov
jb
jno
sahf
ljmp
mov
and
jbe
jmp
mov
decl
shr
push
stos
or
loop
dec
pop
sbb
out
and
mov
jo
mov
push
jnp
shld
pop
cmpb
push
lahf
sbb
push
into
addr16
dec
cs
cmp
cmp
fisubs
xchg
xchg
xchg
gs
imul
jae
add
xor
lcall
xor
cmp
dec
cmp
mov
or
xchg
pop
loopne
adc
jmp
jp
pop
dec
clc
pushl
scas
out
in
mov
pusha
aas
mov
aad
pop
mov
fyl2xp1
pusha
adc
lods
mov
stos
adc
mov
int3
pop
inc
xor
cld
je
and
filds
ja
and
out
out
daa
aad
cmp
pop
ss
das
add
movsb
mov
decl
sub
popa
adc
insl
adc
pop
adc
divb
push
xchg
sub
dec
mov
mov
push
sub
repz
dec
xchg
lea
adc
ret
lock
mov
jecxz
mov
lea
leave
pop
lret
cs
shrl
arpl
jg
lods
jmp
stos
ja
out
out
or
and
dec
fcoms
adc
mov
ljmp
decl
pushf
cmp
adc
push
and
adc
lahf
cmpsb
mov
push
imul
jmp
fimuls
jp
and
ficompl
adc
std
test
add
xor
sub
push
hlt
jb
ds
sub
call
mov
mov
mov
jle
icebp
daa
cmp
pop
xchg
out
push
aaa
cmpsb
and
loope
inc
inc
clc
aas
gs
sub
cmp
jg
orl
push
cmpsl
cmp
shlb
push
icebp
das
mov
mov
adc
aam
ljmp
xor
inc
jmp
push
fwait
fstpl
cmpsb
aas
test
in
fnstenv
inc
inc
push
xchg
pop
and
jp
jl
cltd
bound
test
pop
cmp
sbb
fnstenv
fldl
cs
call
cld
and
mov
lahf
inc
imul
push
popa
inc
insb
push
jmp
fdecstp
cwtl
mov
test
push
incb
loopne
fbld
jl
add
loop
sub
cmp
pop
aad
cmp
dec
fstpl
dec
lahf
mov
jae
es
jl
lcall
and
lcall
xchg
ds
xor
inc
and
pop
iret
fists
insb
shrl
ljmp
and
jecxz,pn
lods
in
jb
sub
out
call
mov
mov
xchg
mov
xor
inc
enter
lods
add
lret
cmp
mov
fstps
or
dec
sub
test
repnz
jae
cmp
incl
fidivrl
pop
adcl
push
add
mov
mull
push
xchg
or
jmp
decl
jg
iret
sbb
jb
fisubl
roll
loope
in
sub
inc
or
adc
lret
mov
outsb
sub
jbe
or
mov
adc
mov
icebp
sub
sub
adc
pop
test
jl
lcall
xlat
adc
jo
dec
mov
jecxz
loope
cmpsb
sub
rcrl
test
insl
jns
sahf
dec
cmpsb
and
dec
jmp
jmp
in
leave
xor
es
rcrb
fstp
push
notl
mov
outsb
repz
sub
xlat
jns
adc
mov
jnp
popa
sub
pop
pop
jl
xor
pop
dec
out
xor
mov
ds
es
adc
ss
test
shrl
iret
mov
adcl
and
cmp
mov
pop
std
push
lds
shrl
ficomps
jo
incl
imul
es
stc
mov
mov
sti
xor
cld
cltd
jns
mov
or
aas
add
ljmp
pop
mov
cmp
mov
xchg
fst
inc
lods
dec
xchg
mov
pop
std
incl
dec
xchg
cld
jmp
rclb
lret
imul
pop
aam
aaa
mov
pusha
lods
lcall
add
mov
cmpb
mov
leave
popf
pop
sbb
dec
out
pusha
pushl
jne
sub
scas
pop
data16
jl
jbe
cltd
mov
and
xchg
cmp
or
das
cli
ljmp
pushl
jns
je
xor
and
sbb
mov
incl
push
xchg
cmpsb
jg
xchg
mov
inc
out
clc
ret
out
sahf
aad
jno
fwait
and
call
sbb
dec
outsl
rcll
enter
out
iret
mov
cmp
push
mov
cld
sbbb
mov
fildll
xchg
sub
xor
mov
insb
outsl
sbbl
push
pop
dec
test
out
loope
sbb
or
inc
cmp
adc
sbb
pop
jo
dec
xchg
mov
cld
out
out
repnz
test
insb
mov
and
mov
add
adc
push
in
lcall
inc
fucom
pop
stos
cmp
out
loope
pop
loope
dec
mov
mov
lods
ljmp
sbb
and
cmp
add
or
lea
push
call
xchg
call
aad
or
mov
pshufw
fcomip
cli
aad
push
in
or
push
aaa
dec
cld
outsl
push
mov
xor
inc
ror
cmp
je
adc
int
out
or
jg
push
adc
sub
push
push
scas
xchg
fisttpl
orl
inc
ds
push
xchg
inc
addr16
js
lret
inc
jl
scas
push
fnstenv
push
hlt
lahf
sahf
mov
jne
jbe
dec
lcall
fadds
addl
das
inc
and
lahf
push
adc
cld
mov
jae
es
out
or
cmpsb
lcall
cwtl
outsb
in
cli
xchg
imul
cmpsl
jle
test
mov
insb
jmp
pushl
or
push
cs
addr16
out
pusha
clc
mov
mov
mov
cli
mov
ljmp
fnsave
sbb
loope
and
cld
mov
add
sub
jmp
es
js
pop
fidivrl
push
int
push
inc
mov
stos
out
sub
lcall
jnp
pusha
aas
xchg
mov
shlb
or
cmp
adc
push
out
rcl
test
push
aam
movsl
adc
mov
ficomps
aam
sbb
sbb
andl
add
fcmovne
ss
push
xchg
xchg
into
pop
xchg
mov
mov
push
xlat
mov
scas
jg
ljmp
lcall
mov
sub
insb
xchg
ljmp
jmp
aas
mov
ljmp
in
cmc
test
inc
inc
mov
or
pushf
cwtl
jno
mov
push
dec
xchg
outsl
adc
and
sti
dec
lret
ret
pushl
push
mov
jne
pop
push
idiv
push
mov
lret
pop
insl
xor
decl
cmpsb
jg
mov
mov
adc
popf
sbb
push
popf
mov
sbb
sarb
lock
popa
adc
pushl
fsubrl
aad
fdivs
sbb
inc
mov
inc
push
push
mov
push
jmp
call
xlat
lods
nop
fstl
or
dec
rcll
stos
mov
or
add
ljmp
clc
sbb
out
mov
jae
mov
sub
jb
shl
mov
incl
mov
inc
add
mov
and
xchg
push
in
dec
clc
jecxz
cmp
ljmp
mov
cmp
lods
popa
fisubrs
mov
cmp
ja
icebp
popa
adc
les
clc
xchg
mov
jg
mov
insb
pop
aam
stos
push
dec
sti
aas
xor
push
xor
jl
das
addr16
cmpsb
dec
pusha
ljmp
das
shll
jne
inc
insb
mov
into
ret
cmpsb
cmp
mov
insb
push
jle
decl
pop
mov
idivb
mov
xor
pop
inc
pop
dec
jmp
or
sbb
icebp
int
dec
jmp
test
add
cwtl
adc
push
jmp
add
sbb
ffreep
pop
mov
add
stc
sarb
pushf
pushl
pop
inc
add
cwtl
sahf
mov
push
dec
sub
test
xchg
ja
std
aaa
push
inc
xchg
fisubs
xor
out
dec
dec
mov
decl
jo
mov
mov
adc
dec
adc
js
mov
mov
mov
inc
sub
sbb
je
lods
jecxz
mov
cmp
test
fdivr
jg
cld
pop
cmpsl
push
les
xchg
mov
fistpl
mov
dec
test
push
fdivs
ja
pop
sti
fcomps
mov
pusha
mov
xor
ljmp
jo
sbbl
aaa
cmp
mov
into
jle
sbb
outsl
fnstsw
sub
and
sarb
and
outsb
nop
scas
xchg
incl
cltd
wrmsr
dec
push
insl
pop
mov
loope
add
fs
push
jl
sub
fistps
inc
and
imul
jmp
in
addr16
out
adc
mov
inc
adc
sub
fdivr
call
pop
xor
fwait
and
aaa
mov
add
dec
xlat
notb
add
in
call
call
push
dec
inc
andl
mov
outsl
ds
shlw
mov
pop
mov
jns
ljmp
fistl
call
mov
sub
cmpsb
xchg
jnp
call
add
pop
adc
scas
out
or
andb
pop
or
push
nop
cwtl
mov
gs
mov
ljmp
dec
cmp
sbbb
movsb
psllq
sub
inc
negb
dec
call
fistps
ds
sub
fmull
dec
jb
pop
ljmp
xchg
clc
sti
pop
scas
push
shll
iret
aad
mov
je
push
add
icebp
jnp
fstp
out
ljmp
xchg
fs
aad
jecxz
inc
add
dec
mov
movsl
xchg
ret
cmp
mov
mov
mov
cmp
pop
mov
shlb
pop
js
sub
insl
loope
add
cmp
pop
xchg
js
jmp
call
xlat
lret
in
or
inc
xor
pop
mov
jae
sub
aam
jmp
inc
cmp
push
cld
call
movhps
push
mov
pop
nop
je
js
dec
pushaw
dec
or
jb
das
xchg
test
call
pop
js
shrb
in
cld
ljmp
int3
inc
pop
adc
inc
cltd
push
or
and
cli
enter
fcomip
sbb
cmp
ds
in
cmpsb
loope
in
push
scas
and
dec
cld
push
mov
lock
decl
xor
repnz
testb
push
icebp
dec
movsl
ss
dec
add
or
aam
or
dec
cli
incl
xchg
push
inc
stos
jb
aaa
inc
push
inc
sub
daa
inc
jecxz
lcall
pop
in
stos
aas
pop
xor
and
jno
ljmp
ljmp
rorb
pop
push
jle
mov
mov
pop
push
sub
lods
mov
test
xchg
in
cmp
adc
leave
int
push
sbb
adc
clc
add
mov
insb
xchg
push
jl
mov
sub
or
jmp
xor
fsubl
scas
es
push
sub
lcall
inc
mov
sbb
mov
imul
push
or
inc
adc
lcall
incl
xor
inc
inc
data16
outsb
jb
icebp
dec
dec
add
or
in
sub
ljmp
filds
cld
scas
cmp
std
gs
mov
shrl
out
inc
cmp
sub
iret
cld
pop
iret
imul
cli
pop
inc
push
jg
inc
dec
std
mov
dec
adc
call
dec
arpl
mov
imul
dec
pop
outsl
orb
sti
sub
pop
xor
pop
jg
decb
leave
mov
lcall
mov
or
dec
xchg
call
push
xchg
mull
inc
addr16
pusha
call
jne
sti
fists
xchg
ja
call
cld
inc
roll
push
cmpsb
call
or
mov
sbb
and
incl
into
xchg
mov
jae
pop
mov
stc
out
out
add
add
popa
cwtl
cmp
cmp
sbb
lods
fildll
xor
inc
dec
jmp
inc
scas
fnsave
scas
sbb
sbb
dec
iret
pop
jmp
loope
mov
xor
call
jmp
pop
rclb
rolb
test
and
xor
mov
adc
and
decl
je
leave
add
pop
sub
in
or
ficoms
cmp
pop
cld
shlb
mov
mov
pusha
add
jg
push
jns
mov
mov
aaa
lcall
test
pop
pop
aad
inc
cld
incl
adc
push
push
test
int3
cmp
enter
cs
adc
inc
fdivr
jg
insb
hlt
popf
mov
sub
mov
pop
mov
push
dec
jmp
aaa
xlat
and
mov
scas
sar
ljmp
xor
xor
cmpsb
dec
lcall
mov
nop
scas
xlat
pop
lret
jg
xchg
ja
sbb
jg
push
mov
shrb
pop
pushl
cmp
fcomp
adc
jb
cmc
pusha
test
inc
nop
and
adc
stos
pop
add
mov
leave
cwtl
subl
mov
cli
insl
xchg
or
adc
mov
jle
push
inc
mov
jecxz
sahf
sbb
cmp
and
enter
jmp
aad
cmp
push
out
cwtl
clc
cmp
mov
jp
inc
lcall
adc
sub
decb
pop
jmp
dec
lahf
aaa
lock
lret
xor
aam
sti
mov
xor
and
cld
dec
push
loop
loope
push
mov
bound
mov
push
test
shlb
int3
fiadds
mov
mov
jne
bswap
cld
mov
inc
fidivrs
or
jecxz
jg
inc
jmp
push
fs
fwait
int3
inc
mov
shll
rcrb
jge
cld
mov
mov
dec
mov
sub
hlt
sahf
dec
push
loopne
dec
mov
call
int3
xor
fcmovb
adc
mov
ds
dec
and
dec
jg
push
push
cmp
decl
sbb
dec
cmc
das
outsb
mov
lret
dec
sub
fildl
pushl
xchg
or
test
fs
xchg
mov
ljmp
shrb
rcl
sbb
sahf
inc
std
or
and
fstps
call
movsb
jle
incl
and
in
mov
push
mov
addr16
xchg
bound
lcall
push
sbb
mov
orl
call
pop
xchg
cmpsb
shlb
shrb
ret
roll
je
decl
imul
cmpsl
outsb
lods
js
inc
ret
jns
repz
loopne
cmp
outsb
pop
int3
pop
jp
test
decl
xchg
insb
aam
dec
sbb
lea
in
lret
cmpsb
mov
jb
ljmp
xorl
in
jg
addr16
push
xchg
in
mov
sub
lds
call
out
jnp
outsl
lret
lods
cmovne
sub
mov
adc
dec
sahf
sub
hlt
call
jno
ret
hlt
ret
mov
jo
icebp
mov
scas
cmpsl
mov
pushl
cld
stos
push
sub
xchg
xchg
dec
push
pushf
addb
cmp
push
jmp
add
pop
dec
lods
sub
adc
or
lcall
lods
imul
jmp
nop
mov
xchg
sub
rcrl
jmp
ja
xchg
and
je
mov
mov
jmp
inc
inc
popf
pop
cmpsl
pop
ror
and
jmp
lea
imul
mov
push
cmp
frstor
mov
inc
mov
mov
insl
incl
sbb
sti
loopne
jecxz
lods
jg
sbb
in
fucomip
jle
inc
mov
inc
arpl
stos
cmp
cs
and
adc
rorb
call
push
in
dec
shr
push
fadd
jo
cltd
sbb
xchg
mov
loop
push
repnz
add
xor
inc
mov
adc
mov
call
pushf
pop
cli
mov
dec
mov
sbbb
jo
cmp
mov
add
jmp
mov
movsl
pop
sub
xchg
je
imul
call
add
repz
mov
rolb
shlb
pop
mov
or
incl
lahf
jno
mov
shlb
loopne
pushl
shrb
add
lahf
xor
jl
pusha
add
pop
data16
call
pop
icebp
or
fnsave
lods
cli
xchg
xlat
xor
stos
add
pushf
xadd
inc
mov
jbe
xor
jg
add
je
xchg
out
add
adc
loopne
sbb
stc
pop
jnp
leave
iret
popa
push
fldcw
xchg
fwait
jle
mov
stos
dec
ror
aam
out
mov
pop
je
lret
mov
xor
or
or
xor
mov
clc
inc
out
cld
sahf
out
ja
std
subb
lds
dec
test
call
int
mov
insb
aad
gs
mov
subl
dec
add
int3
jmp
lcall
cwtl
pop
gs
lea
cmpsl
call
cmp
xor
push
mov
mov
mov
daa
or
aam
daa
js
cmc
cmp
movsl
test
lcall
stos
negl
fwait
addl
in
jae
stos
xlat
lcall
movsb
xor
or
jecxz
pop
imul
sti
dec
mov
pushl
jl
popf
movl
mov
js
lock
out
adc
ljmp
push
jnp
adc
ljmp
pushf
stc
cmpsb
mov
ss
mov
sahf
pop
or
sub
test
mov
daa
xor
mov
incl
cmc
sub
xlat
movl
sti
push
mov
orl
cli
add
cmp
iret
pop
cmp
and
clc
push
loope
jmp
in
xchg
shl
cmc
mov
inc
push
sub
push
jp
out
in
add
or
cwtl
and
pop
jbe
out
andl
stos
cld
xrelease
fisttpl
daa
mov
ja
movl
call
sub
arpl
or
dec
push
mov
andb
or
mov
push
dec
daa
ret
add
lods
das
push
decl
jl
cli
push
mov
rorb
fcoms
ja
fwait
mov
stc
adc
jecxz
ja
hlt
ljmp
ret
inc
push
pop
sub
enter
mov
sub
pop
in
add
lcall
and
std
test
outsl
xorl
ljmp
enter
jl
incb
mov
xchg
daa
cld
and
imul
cmp
decl
fstps
push
aas
sbb
xor
jnp
add
stc
js
dec
xchg
jnp
aad
in
or
xchg
inc
outsl
and
jae
jmp
push
mov
jb
inc
sub
sar
ret
dec
test
mov
cwtl
outsl
sbb
mov
pop
or
mov
lcall
lret
mov
movsl
stos
mov
inc
inc
repz
popf
or
in
xor
push
ficompl
mov
and
in
pushf
jae
ss
out
pop
call
nop
subb
push
daa
addb
rcll
cmp
pop
cmp
cltd
or
mov
mov
fcoml
lret
lea
inc
outsb
test
or
mov
adc
loopne
jg
movsl
add
mov
and
popa
je
std
int
pop
and
push
call
movsb
sub
xchg
pop
jge
imul
dec
loopne
arpl
push
rcll
add
adc
out
leave
sbb
mov
jb
and
push
sbb
cltd
mov
mov
js
jbe
add
inc
jne
sbb
mov
dec
in
mov
jmp
mov
or
lcall
sbbb
sbb
ror
fidivrs
sub
push
push
xchg
mov
inc
jg
lock
adc
xchg
cmp
insl
outsl
xor
jb
push
mov
call
push
lea
inc
jecxz
sbbb
pusha
fildll
sbb
stc
adc
xchg
inc
inc
jg
ljmp
jo
xchg
mov
jb
ja
jecxz
popl
lretw
mov
or
imul
mov
fadds
call
xchg
test
cld
into
imul
lea
mov
leave
stos
jmp
mov
jo
dec
sbb
push
mov
sti
mov
jecxz
pop
mov
mov
sub
out
dec
loope
in
mov
jmp
jl
in
and
lea
fldl
inc
sbb
dec
pop
and
jmp
ffree
cmp
rolb
xchg
cmp
inc
jl
rorb
les
lcall
jg
add
and
cld
add
arpl
sub
lcall
pushl
pop
shl
mov
mov
mov
cmp
lea
pop
mov
lock
and
fbstp
ret
lahf
jns
fidivrs
pop
and
or
jbe
and
pop
push
xor
shlb
shl
mov
xchg
cltd
test
loope
mov
add
aas
data16
xor
decl
enter
ss
loop
inc
jmp
fadd
xor
lahf
pusha
jne
decl
jo
jno
cmp
ret
shl
sarl
sbb
push
mov
adc
aad
mov
in
or
fsub
gs
push
test
dec
fistps
add
push
dec
mov
or
not
lahf
sbb
mov
cmp
pushl
push
addr16
ja
push
pop
sub
fs
jbe
add
int
cmp
xchg
inc
adc
shrl
and
cmp
fstpt
jae
or
jl
jle
or
decl
xchg
adc
pop
cmc
scas
or
mov
ja
inc
sbb
sbb
aam
pop
mov
mov
ljmp
out
pop
push
lret
call
mov
fstpt
mov
push
sub
hlt
cmp
lock
test
add
inc
mov
sbb
ja
incl
fsin
mov
inc
mov
mov
mov
lcall
xchg
sub
push
lods
cld
sbb
cmpsb
mull
fistl
and
mov
dec
outsb
xor
or
shlb
imul
xor
rcll
mov
jg
lcall
adcb
js
jo
and
popa
push
fadd
fdivs
lcall
test
fidivs
dec
mov
out
gs
outsb
mov
js
mov
or
incl
jbe
mov
shll
or
rol
in
clc
je
insb
lret
sti
sbbl
and
pop
mov
mov
fwait
cmp
gs
mov
repnz
mov
push
push
cwtl
add
push
sahf
mov
imul
pop
jnp
jp
pop
cwtl
adc
incl
bound
outsl
and
lds
pop
adc
lret
in
add
sbb
ljmp
adc
inc
stc
mov
imul
fsubrl
jns
lods
popf
decl
cmpsb
sub
xor
cmp
add
mov
pushl
dec
jp
sbb
in
fimuls
sbb
mov
test
nop
sar
fwait
add
push
ljmp
loopne
jge
mov
push
jmp
insb
and
inc
jecxz
or
adc
insl
outsb
jae
rclb
ss
or
aaa
dec
mov
mov
and
stos
ds
jae
outsb
and
mov
cli
andb
cld
dec
fdivrl
cltd
push
mov
shr
pushf
or
and
lahf
cs
mov
jmp
dec
test
js
in
mov
movsb
xorl
stc
nop
add
clc
ljmp
mov
loop
mov
xor
mov
xor
rorb
ljmp
mov
imul
sub
fcmovb
out
xor
and
push
sbb
jmp
decl
mov
inc
insl
mov
les
push
dec
gs
fisttpll
hlt
add
pop
jge
jns
cmp
decl
xchg
sahf
fisubs
pop
pusha
gs
cmp
mov
mov
mov
jl
xor
call
mov
cmc
mov
mov
xchg
pop
jle
sbb
push
mov
adcl
shrl
cld
and
jecxz
sub
add
xor
je
test
bound
jo
out
cld
pushl
sbb
mov
xchg
es
xchg
mov
das
dec
cmp
jle
sbb
pusha
xor
inc
sub
sub
push
lcall
lcall
push
sub
fstpt
lret
xchg
bound
inc
repnz
dec
adc
push
add
jg
daa
in
adc
in
push
les
fiaddl
push
popa
mov
jmp
sub
sub
push
jecxz
inc
xchg
into
xchg
dec
out
cltd
jae
loope
inc
push
mov
pushl
lret
xor
mov
cld
jg
and
mov
decl
cmp
mov
push
dec
sbb
aaa
lcall
xchg
mov
cltd
aas
stc
mov
push
add
lret
inc
aas
or
pop
cmc
cmp
scas
and
addr16
popf
xchg
pop
push
jb
push
ljmp
jmp
pop
mov
lods
mov
xchg
out
mov
cmpl
dec
nop
cmp
cmp
adc
iret
add
push
jecxz
mov
movsl
sbb
inc
dec
ljmp
jecxz
mov
sbb
mov
mov
mov
mov
jno
or
pop
jo
dec
icebp
adc
decl
inc
aaa
mov
or
test
inc
push
adc
xchg
mov
icebp
mov
jl
call
cmp
sbb
jbe
xchg
and
mov
push
popa
pop
mov
dec
test
and
push
pop
ret
bound
jo
sub
and
pop
pop
cmp
shrl
sbb
sbb
lock
adc
xchg
mov
or
push
data16
ljmp
mov
mov
arpl
pusha
jecxz
movsb
cmova
cltd
mov
scas
xchg
push
dec
movsb
insl
push
jb
sub
jmp
outsl
ret
add
sub
pop
out
xchg
cmp
mov
cld
aad
pop
pop
scas
pop
lods
or
stc
push
call
imul
cmp
inc
xor
xor
push
adc
dec
jnp
std
and
mov
iret
mov
and
icebp
out
js
aam
mov
pushl
adc
mov
bt
cmp
mov
inc
push
cmp
dec
lods
mov
stos
insb
dec
add
adc
inc
xlat
and
cld
loope
out
xchg
mov
jmp
sbb
sub
int
pop
repz
pushf
loop
ljmp
or
mov
xor
jl
je
xor
cmp
lcall
push
sbb
out
ljmp
movsl
lock
iret
sbb
sub
add
mov
push
cld
dec
test
cmc
out
mov
pop
mov
das
sub
ljmp
pop
scas
je
pop
sar
pusha
dec
imull
mov
push
push
clc
incl
push
mov
jne
mov
loopne
add
jg
add
clc
pop
stc
or
cwtl
out
int
fildl
and
jmp
dec
inc
mov
dec
stc
ja
mov
lock
mov
pop
push
or
or
fsubrl
les
repnz
shl
jae
in
mov
mov
add
call
cli
pop
mov
and
out
sti
sub
pushl
or
lock
into
test
shlb
mov
dec
push
dec
sub
push
inc
lret
sbb
push
insl
sbb
cs
jg
xor
insb
mov
jg
incb
sub
test
add
decb
inc
pop
jae
xchg
insl
ja
int
lods
xchg
add
loopne
fsub
cli
mov
clc
mov
mov
pop
shl
sub
sti
dec
xchg
out
push
scas
sar
or
jecxz
stos
lods
addl
loop
repz
sahf
data16
call
dec
fisttpl
or
imul
cmp
arpl
lock
pop
repz
add
lcall
cli
das
mov
call
push
les
xor
sub
dec
aad
notl
xor
inc
adc
xor
jmp
cld
lods
add
outsb
in
jl
cwtl
cmp
fidivrs
cmp
xchg
cmc
decl
pop
in
shlb
in
nop
fadd
popa
ljmp
rol
mov
ja
loop
repz
sbb
movb
sar
lcall
ret
cmp
scas
andb
sahf
mov
adc
mov
fst
lods
xchg
nop
in
push
and
xchg
pop
add
push
pop
add
ljmp
mov
popa
popf
rorl
rcl
pop
sub
sub
call
jmp
hlt
push
ds
mov
rcll
lcall
test
lods
cmp
cmp
xor
fs
adc
lods
ljmp
shlb
imul
jmp
ss
jne
jmp
push
adcl
scas
daa
cltd
rcl
sub
lds
aaa
xchg
addr16
lcall
jle
ret
insb
dec
xor
add
xchg
cmpl
xor
mov
lcall
adcb
xchg
or
mov
stos
jle
pop
andb
xchg
mov
mov
ljmp
sbb
mov
mov
aad
insl
adc
ret
dec
aad
cmp
fstl
hlt
push
bound
lcall
cmp
imul
lea
out
and
xlat
ljmp
cmpb
lret
loope
mov
pop
jl
mov
push
addb
xchg
ss
inc
test
fwait
jmp
jg
stos
jns
pop
jle
xchg
dec
movsb
jmp
jae
orb
lcall
jl
mov
arpl
gs
int3
outsl
ret
int3
push
pusha
arpl
and
mov
sahf
imul
mov
movsb
cmp
inc
call
mov
mov
decl
fcoms
dec
sub
mov
jmp
push
dec
out
cltd
dec
test
sti
pushf
out
clc
push
arpl
das
sarl
inc
pop
in
pop
xor
mov
call
adc
inc
jae
pop
repnz
cld
or
ret
loopne
mov
fnsave
xchg
popa
fwait
scas
sbbl
jecxz
mov
call
xchg
or
cld
repnz
push
inc
inc
add
fs
lds
cmp
nop
sbb
cld
call
adc
push
sub
mov
cmpsl
jl
inc
cmpb
mov
rorl
int
popf
clc
push
sbb
fs
jno
push
jno
push
lahf
jmp
push
push
out
in
adc
lret
movsb
cmp
les
or
pop
sahf
xor
or
add
cld
jns
inc
pop
jnp
mov
decl
push
cmp
clc
popf
jo
push
sub
arpl
cmp
popf
xchg
ja
mov
aaa
sbb
clc
push
mov
imul
shrl
jmp
mov
cmp
stos
xchg
mov
mov
daa
ljmp
inc
js
std
cmovne
icebp
push
push
push
sub
out
int
enter
add
jmp
test
outsl
cmp
loop
fstl
add
and
sub
call
les
push
pop
rolb
fwait
mov
add
cmpsb
mov
jnp
ud1
xor
call
cmp
jp
fld1
pop
insl
mov
sub
jo
and
subb
push
dec
xchg
push
mov
rorl
or
mov
cmp
nop
dec
add
fdivs
rcl
enter
mov
out
xchg
pop
push
jl
cmp
fisttps
sahf
ret
leave
in
jge
dec
add
lds
lret
repz
jle
xchg
sti
mov
jmp
dec
pop
push
sarb
imul
push
pop
lods
addl
addr16
sbbb
or
imul
ja
cli
sar
jg
xchg
arpl
sbb
aas
insl
add
sub
lahf
push
cmpsb
push
pop
dec
into
lea
and
mov
lcall
sbb
push
xchg
sub
mov
add
adc
in
jp
sub
cmp
test
or
inc
or
or
add
rcl
jnp
and
mov
xor
jle
jo
or
mov
mov
cltd
push
sbb
xchg
xchg
push
mov
ret
mov
repz
iret
fbld
shl
or
adc
stos
mov
call
dec
std
jns
adc
pop
sbb
clc
and
sub
jle
lret
xor
push
fldcw
ret
stc
out
aas
adc
rcrb
pop
xchg
xorb
es
fnstsw
mov
cmpsb
cmp
cmpsb
mov
push
xor
pop
mov
lods
xchg
pop
ret
lock
call
xchg
daa
pop
dec
or
popa
and
insb
jl
out
mov
and
mov
stc
xlat
mov
add
lret
mov
adc
cmp
sub
mov
xor
push
mov
xor
insl
cmc
outsl
clc
pop
hlt
repnz
call
lods
pop
mov
mov
icebp
and
mov
pop
add
mov
sar
or
adc
insl
mov
mov
mov
movb
sub
ljmp
xchg
cld
jae
mov
fcmovnb
repnz
sub
jmp
and
aas
mov
scas
sub
mov
adc
bound
rcrl
call
shll
loop
cld
sub
mov
xchg
in
fsubs
clc
mov
adc
cli
hlt
hlt
addr16
in
icebp
or
lret
sar
mov
roll
jbe
push
fisubrl
and
and
sahf
les
adc
ljmp
hlt
jo
and
mov
insb
outsl
dec
xchg
xchg
fcompl
jb
and
nop
ret
inc
lret
call
mov
jecxz
push
test
dec
jns
adc
xor
cmp
pop
ss
mov
cli
incl
sti
and
int3
xchg
ss
out
shrd
or
fcomip
mov
out
in
mov
mov
imul
popf
sub
and
xor
pop
cld
call
xchg
push
aad
jns
ljmp
xor
notl
decl
into
movsb
in
jecxz
jl
orb
jo
pop
push
movsb
repnz
pop
cs
add
fnstenv
jbe
in
shlb
roll
push
mov
in
mov
sub
fcomip
ljmp
jbe
xchg
ds
loopne
je
outsl
cmp
cmp
push
imulb
push
inc
shlb
rolb
pushl
sub
rolb
into
popf
mull
lods
xor
data16
scas
xchg
test
xor
jg
fimuls
pop
addr16
push
in
ret
pop
sub
es
addr16
adc
jle
inc
jle
fnstsw
inc
fistpl
les
mov
lds
rcll
cmp
fs
inc
lret
mov
and
pop
fbstp
xor
mov
xor
ret
adc
decl
lret
mov
adc
pop
or
fiadds
xchg
push
fmuls
xchg
pop
push
stc
sub
aaa
xor
or
adc
test
decl
pop
negb
xchg
shll
push
sahf
jne
fidivrs
jmp
mulb
call
jp
test
es
push
pop
mov
pop
mov
mov
icebp
popf
int3
mov
incl
lcall
mov
stos
movb
adc
mov
cli
call
push
in
xor
adc
lea
sti
dec
ljmp
fidivrs
push
inc
in
std
sbb
pop
clc
push
fdivrs
repnz
rolb
out
clc
push
das
fbstp
inc
adc
ds
out
je
ja
inc
mov
push
mov
cmp
into
fwait
mov
shlb
loop
mov
std
int3
mov
xor
xchg
jle
cmp
or
mov
mov
sub
adc
jno
lock
int
shl
pop
pop
stos
daa
xchg
popf
pop
sub
insb
call
jb
adc
xlat
push
cmovp
das
das
mov
jmp
lds
repz
jne
sub
xor
jl
cmp
rolb
jle
scas
call
popl
cmpsb
sub
adc
jno
jmp
jbe
stos
inc
clc
mov
lea
xor
outsb
or
or
aaa
push
add
mov
hlt
xor
repz
pushl
pushf
sub
pop
test
imulb
mov
dec
inc
or
mov
js
mov
ljmp
jmp
lods
pop
push
mov
cmp
dec
mov
push
adc
mov
jg
mov
insl
inc
sarb
mov
sbb
test
lret
clc
jne
pop
ljmp
pushf
push
dec
data16
outsb
push
sbbb
sbb
push
call
dec
sub
sar
pop
mov
decl
mov
mov
stc
inc
add
outsb
xchg
cmpb
mov
mov
jg
mov
push
mov
xchg
pop
xor
call
adc
filds
mov
lds
movsb
xchg
int3
xchg
or
push
push
rol
loope
neg
lcall
xchg
xchg
cmp
lahf
enter
mov
add
loope
stos
mov
jns
pop
lods
sti
or
lcall
push
mov
pop
xor
rcrl
and
add
popf
adc
sub
jmp
adc
aad
cmpsb
sub
mov
pop
sbb
je
insl
and
adc
sti
jns
call
imul
adc
xor
rcrl
mov
test
fwait
movaps
push
sub
ljmp
mov
fldt
push
aad
xchg
imul
cmp
sbbb
fildll
and
pop
and
inc
pusha
les
pop
xchg
clc
mov
popf
rorb
add
scas
loop
xor
pop
aas
mov
leave
or
add
jp
sbb
jo
dec
insb
mov
cmp
lods
incl
add
inc
call
sub
push
cmp
push
pop
out
dec
fdivrl
xor
cli
decl
cmpsl
stos
jle
jl
orl
call
mov
ja
sbb
out
cmpsb
shlb
cli
jb
sahf
xrelease
call
out
call
push
in
pop
imul
add
and
jo
sbb
lcall
inc
mov
mov
push
ret
lock
sbb
jecxz
inc
fidivl
or
cmp
scas
decl
jo
repnz
roll
dec
repz
cwtl
pop
fldl
ds
ret
sahf
pop
xor
stos
fcomps
and
icebp
lock
inc
cwtl
fldt
and
push
pop
lret
into
shrl
cmp
fwait
mov
inc
adc
push
mov
sub
sbbl
inc
push
fdiv
mov
bound
adc
pop
pushf
stc
lea
inc
cmpsb
test
mov
ljmp
jmp
into
pop
mov
lret
jno,pn
dec
vcvtsi2ss
mov
jg
xlat
adc
xchg
iret
sub
and
xchg
push
adc
cmovge
push
lods
mov
clc
call
or
dec
cli
push
inc
xchg
sbb
xchg
test
jl
jp
jno
pushl
cmpsb
fidivs
add
mov
push
clc
xor
pushf
lret
out
loop
call
ds
cs
inc
fisubrl
pop
cli
mov
cmc
or
jmp
pop
hlt
ja
add
fdivs
insl
outsl
fwait
pop
cmp
imul
out
cs
fs
mov
adc
lea
cmpsl
pop
sti
mov
adc
jg
ljmp
enter
and
and
jbe
shlb
enter
push
push
cld
incl
dec
adc
mov
nop
or
mov
je
mov
jg
insl
inc
sbb
add
ss
in
js
cwtl
fmull
cmc
push
into
mov
ret
push
mov
std
lcall
jae
pop
out
ja
push
aam
and
mov
cwtl
fisttpll
pop
call
sub
fldt
and
add
leave
jnp
out
data16
jmp
pop
aam
cmp
fwait
mov
stos
cwtl
xor
and
inc
or
or
call
enter
inc
sbbl
scas
rcll
mov
pop
imull
sarb
ljmp
mov
lock
inc
inc
sub
lahf
xor
and
stos
push
and
sar
xor
fildll
pop
in
mov
nop
mov
xlat
xor
loop
call
xor
adc
clc
lea
dec
rorb
frstor
jo
lcall
iret
push
mov
lcall
lea
push
into
pop
aad
mov
push
push
lcall
call
scas
xchg
out
pop
sub
fisttpll
lret
ja
push
add
call
mov
mov
pop
jo
mov
and
and
incl
subl
cmp
lea
jnp
sub
push
pop
sahf
jbe
out
scas
or
call
out
cmc
call
adc
inc
dec
addb
mov
pop
xlat
jne
pop
stos
loop
xor
inc
sahf
dec
fisubrl
insb
mov
mov
inc
xor
decl
lods
hlt
std
enter
adc
or
decl
fcoml
push
data16
std
jg
out
xor
insl
lahf
dec
cld
or
sbb
push
cmp
decl
mov
sahf
cld
inc
insl
inc
mov
or
xor
push
add
xor
insb
pop
sub
add
mov
add
out
add
incl
or
add
les
jo
mov
jg
add
pop
and
js
imul
inc
add
add
dec
orb
addb
adc
mov
inc
iret
inc
or
adc
scas
adc
jno
loop
ss
inc
add
mov
pop
imul
test
pusha
jg
fmuls
popf
jno
mov
jnp
xchg
movsl
push
daa
add
push
push
mov
add
es
cmc
mov
push
movsb
inc
scas
push
cs
and
stos
push
and
push
test
and
fs
outsl
push
xchg
imul
push
inc
lahf
call
push
scas
pop
dec
lods
push
mov
pop
sbb
add
pop
sbb
inc
mov
pusha
sbb
mov
fcomip
outsb
les
push
adc
fs
mov
insb
or
lret
imul
enter
imul
imul
into
mov
jbe
fldcw
fldt
or
jae
mov
stos
pop
stos
mov
inc
loope
xor
jb
ss
add
outsl
fcmovnbe
jo
mov
push
shll
add
outsl
push
shll
fidivrl
mov
push
ret
mov
fidivl
and
jge
fisttps
add
decl
ljmp
movsb
push
add
mov
sbbl
fcomi
shlb
mov
push
push
fcmovnbe
mov
push
add
jne
push
aam
push
ret
lahf
jbe
mov
mov
push
cmpsl
mov
add
ja
sarl
add
pop
aaa
add
idivb
cs
push
shlb
lret
out
into
divb
ja
push
push
xlat
or
mov
jbe
fdivs
push
aad
testb
or
push
jns
push
mov
mov
jp
jp
inc
push
fidivrl
sarl
mov
push
int3
mov
cmpb
je
or
push
ret
jmp
ljmp
je
roll
xchg
in
xchg
sub
xchg
xor
jne
push
xchg
push
setbe
xor
outsb
fisttpl
push
lcall
loope
addr16
cmp
pushf
cmp
popf
aaa
xor
notb
inc
push
lahf
inc
lahf
mov
outsl
mov
push
jecxz
push
imulb
jmp
push
shll
out
push
iret
repz
hlt
clc
stc
cli
sti
cld
or
repz
incb
jecxz
arpl
xor
add
jo
imul
pushw
add
pop
add
pop
add
xor
insb
add
enter
mov
add
adc
add
mov
or
or
outsl
or
and
stos
add
test
mov
or
push
sbb
push
pop
pop
adc
adc
xor
lods
pop
stos
cvtdq2ps
lods
pop
mov
mov
insl
cmp
scas
insl
lods
pop
pop
adc
push
scas
lods
push
and
fldcw
sbb
scas
scas
scas
and
subl
inc
and
mov
mov
add
pop
push
mov
push
pusha
cmp
and
xor
lock
test
mov
pop
and
sub
pop
sub
pop
pop
sub
or
sub
daa
in
ret
sub
pop
daa
mov
dec
xor
push
es
mov
insb
shrl
dec
pop
cmp
pusha
fistl
add
into
int3
mov
mov
pop
xor
pop
or
or
int3
add
pop
pop
xor
mov
sti
outsl
lcall
das
push
cs
xor
add
xor
das
pop
push
push
xor
adc
std
out
xor
inc
dec
inc
das
inc
inc
xor
adc
decl
imul
push
push
popa
jbe
cmp
jl
dec
adc
xchg
push
adc
xor
xor
pushw
incl
add
mov
mov
cwtl
sahf
mov
pushf
fwait
lcall
add
mov
lea
xchg
push
dec
sub
jns
dec
push
bound
js
test
xor
jne
je
ret
inc
jg
les
cmp
orb
push
andb
out
add
pop
pop
scas
pop
mov
inc
aas
outsl
fists
dec
jle
xchg
pop
push
dec
add
in
outsl
jns
mov
cmpsb
push
mov
xor
pop
outsl
mov
inc
push
ja
jb
cs
xor
mov
pop
scas
pop
fstpt
mov
and
push
mov
cld
in
shr
xchg
jo
push
inc
mov
cmp
mov
inc
add
xchg
jg
mov
inc
push
popf
inc
mov
aaa
add
xchg
jno
imul
add
xchg
jb
bound
mov
mov
lahf
ja
inc
inc
push
sahf
mov
insb
add
ds
xchg
outsb
add
xchg
xchg
pop
push
test
cmpsb
dec
push
dec
sub
rorl
movsb
jae
add
jb
shll
outsl
sbb
call
pop
xlat
pushf
push
rorb
add
int
add
scas
rcrb
pop
into
dec
mov
mov
add
ja
sahf
jbe
fistpl
imul
sti
or
stos
push
add
and
es
js
aaa
sti
inc
mov
data16
shrl
insb
frstor
push
outsl
ror
push
fisttpl
jle
ds
jno
add
jge
push
jg
fiadds
insl
fisttpll
lock
or
add
add
push
es
bound
out
arpl
jnp
push
iret
sahf
mov
cmp
add
xchg
in
push
jle
outsb
add
fisubrs
ja
push
fnstcw
aad
push
divb
fildl
xor
faddl
pop
cmpb
push
sbb
sbbl
test
test
sbb
pop
rolb
test
in
mov
push
xchg
nop
and
outsb
push
insb
push
out
xchg
in
xchg
lock
sub
sub
imul
outsb
out
xchg
das
push
xchg
mov
mov
cwtl
push
cmc
sahf
xor
lcall
fwait
cmpsb
pop
cmp
mov
es
aam
jle
push
cmpsb
scas
subb
clc
jo
test
sahf
ljmp
shrb
fmul
mov
lgs
int
mov
fwait
mov
shll
rcr
rcl
mov
push
aad
jle
data16
add
jo
mov
cs
dec
rorb
add
je
dec
add
add
daa
add
mov
pop
repnz
cld
femms
or
or
or
incl
pop
push
adc
push
add
add
std
inc
insl
ds
add
mov
adc
adc
mov
and
sbb
shrb
mov
push
add
and
mov
jnp
loopne
ds
mov
aas
add
lcall
mov
stos
or
aas
aas
nop
out
jns
cmp
aaa
add
inc
sti
mov
sbb
inc
jbe
adc
mov
incl
jle
cmp
scas
xor
dec
mov
in
mov
adc
fnstenv
decb
test
repz
ds
add
xor
pop
mov
ds
lods
stos
test
cmpsl
ljmp
out
cmpsl
cmpsb
cmpsl
add
test
mov
sahf
add
xor
sub
sub
sub
sub
in
popa
aam
sub
dec
and
inc
mov
ret
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
nop
aas
std
lcall
xchg
xchg
mov
nop
test
insl
popf
mov
jg
incl
jns
jle
addl
jo
outsb
pushf
shlb
divl
imul
rolb
pusha
mov
addb
add
add
push
cs
or
aaa
jl
push
add
cmc
repz
dec
xor
aas
add
mov
cmp
test
add
mov
add
mov
push
mov
pushl
lahf
add
cmc
repnz
inc
add
gs
sti
jecxz
pushf
add
mov
push
in
lcall
pop
jo
sti
or
mov
push
push
dec
lret
lcall
enter
xchg
add
mov
mov
mov
add
mov
out
mov
insl
pop
dec
nop
sub
sub
xchg
push
sub
nop
sub
pop
xchg
das
push
xchg
xor
xchg
xor
xchg
outsb
lcall
es
jbe
negl
int3
out
int
int3
fst
es
push
lret
loopne
push
test
cld
push
std
into
fdivrp
insb
lea
add
test
data16
add
jle
jge
pop
mov
dec
xchg
dec
dec
dec
dec
and
inc
decb
or
pop
or
add
push
dec
or
adc
cmp
mov
fcmovnu
adc
dec
or
add
push
adc
add
in
std
inc
inc
or
pop
pop
cmovg
inc
push
lahf
mulb
dec
sbb
inc
adc
inc
inc
adc
pushl
dec
dec
add
dec
adc
inc
ds
pushl
cmpsb
cmp
and
daa
and
sbb
sbb
and
add
es
decl
xor
xor
sub
sub
or
mov
add
mov
dec
mov
mov
mov
mov
or
sbb
mov
ds
or
adc
adc
add
pop
push
sub
sbb
add
mov
cmpsl
and
into
incl
pop
sub
jmp
adc
push
fnstsw
incl
outsb
prefetchnta
adc
push
and
jg
ds
cwtl
dec
push
stc
setb
lock
pusha
mov
sub
xorps
jg
js
lea
ja
aaa
add
sub
push
inc
pusha
push
sahf
jg
push
aam
pop
lahf
xchg
push
or
push
or
cli
mov
sbb
fists
sbb
or
addl
xchg
roll
add
mov
loopne
push
pop
das
sti
mov
xchg
orl
or
dec
sti
jg
mov
cmp
xchg
add
popa
jg
jg
or
adc
je
cmpsl
test
bound
push
cld
jg
push
add
xor
pop
adc
and
std
ja
jg
test
add
jg
je
dec
ret
dec
pop
push
dec
bound
jle
lret
inc
decb
and
push
data16
addl
xor
add
or
decl
sub
lock
sbb
sbb
data16
mov
jo
mov
cltd
incl
addb
mov
jg
mov
fldt
loopne
pop
adc
les
jle
xchg
fnstcw
sub
sbb
add
test
push
jmp
lods
xchg
or
imul
addr16
add
inc
and
xorl
mov
add
or
scas
inc
loopne
inc
jg
jg
xchg
mov
add
addb
jg
xor
addb
pushl
cwtl
add
pop
je
sub
dec
jg
jle
pop
push
pop
mov
shrb
ljmp
stos
pop
mov
mov
pop
daa
aas
aaa
dec
push
fcmovu
pop
pop
add
jle
add
pop
inc
push
call
cmp
mov
call
jle
popf
out
or
push
dec
xchg
push
bound
add
mov
das
fdivs
push
arpl
pop
insl
xor
test
arpl
push
sbb
imul
sahf
pop
pushl
scas
dec
mov
jle
test
mov
dec
test
push
dec
push
popf
iret
mov
push
jne
push
push
jne
pop
fildl
out
push
jnp
push
mov
mov
js
dec
sbb
pop
add
mov
fnstsw
pop
es
mov
push
outsb
notrack
jle
fs
cmp
inc
outsb
ss
ljmp
decl
fisttpll
xchg
dec
ja
xchg
dec
push
movsl
test
lods
insl
inc
fiadds
mov
mov
mov
xor
int
push
sahf
inc
out
mov
ss
adc
aas
popf
inc
and
mov
push
pushf
cmp
fistl
push
xchg
xor
mov
jnp
xchg
xor
sub
sub
nop
daa
ss
sahf
adc
out
cs
mov
xor
or
insl
cwtl
aaa
outsb
incl
push
xor
mov
adc
jg
pop
fnsave
xor
inc
sahf
nop
mov
jbe
fisubl
ror
pop
cs
add
ja
cltd
mov
shll
aad
xchg
movb
ja
pop
bound
divb
mov
add
push
push
imul
dec
or
sbb
mov
add
outsl
stos
lea
add
outsl
shlb
or
iret
adc
add
or
and
out
fwait
cs
adc
pop
push
xor
inc
sahf
mov
mov
push
imul
mov
sbb
test
push
lock
cmp
cmp
pop
cmp
icebp
add
push
in
add
mov
pop
push
fdivrp
decl
addb
inc
out
pop
adc
shrl
push
mov
mov
pop
push
enter
push
sbb
xor
cmp
jle
sti
inc
xchg
or
es
into
jmp
syscall
mov
sub
push
cmp
pop
add
pop
aaa
inc
popa
stos
xchg
pop
lcall
or
addr16
mov
sub
mov
or
pop
cld
inc
stos
or
jmp
jge
call
daa
std
adc
emms
inc
mov
sbb
mov
gs
mov
sbb
jmp
xchg
sbb
push
sbb
lods
xor
das
incl
pop
es
lcall
fmuls
inc
pop
decb
cmpsb
sub
lcall
cmpsb
test
sub
xor
decb
mov
xor
inc
xchg
clts
add
push
sbbl
xchg
mov
jle
adc
xor
pop
sub
imul
sbb
add
out
incl
adc
sub
call
xor
xchg
fdivrp
or
jmp
outsl
mov
pop
sti
push
std
mov
shlb
out
adc
stos
inc
popa
nop
push
call
add
rorl
cld
pop
nop
fsubl
stc
sgdtl
pushw
call
jg
fwait
test
inc
cli
idiv
add
sbb
sub
cmp
inc
ljmp
movsb
push
test
inc
fnstenv
rcll
pop
inc
jmp
push
pop
aaa
mov
or
push
shll
mov
mov
push
nop
jbe
or
ret
mov
call
adc
jmp
ljmp
iret
data16
push
inc
inc
pop
cmpsb
pop
inc
pop
mov
neg
pop
sahf
movsb
dec
push
stos
push
popf
inc
cmpsb
dec
push
dec
out
dec
inc
cs
xchg
cmp
dec
mov
and
ss
shrb
shll
shrb
es
xchg
int
push
jb
imulb
cmpsb
xchg
and
iret
insl
pop
daa
es
je
outsl
pop
imul
push
push
push
push
and
inc
xor
push
lcall
test
movsl
pop
int
repnz
fbstp
popfw
cmp
aas
pushl
push
cwtl
xor
dec
inc
push
xchg
push
dec
outsl
mov
push
aaa
push
lcall
insl
xor
xchg
xchg
xchg
notb
sub
push
lcall
movsb
inc
test
jmp
add
mov
push
add
aaa
mov
or
std
faddl
dec
fstpt
push
jnp
jp
in
cmpsb
jns
or
jl
or
jl
push
jge
cwtl
insl
sub
jg
es
jbe
adc
out
in
fidivrl
push
dec
push
dec
repnz
repnz
jae
pop
jmp
fucomi
fidivrl
push
mov
jnp
jge
hlt
in
add
mov
mov
negl
add
sub
push
sbbb
dec
mov
outsl
add
stos
lahf
push
adc
adc
mov
int
push
addb
jnp
lahf
dec
es
lahf
bound
in
orb
jg
and
int
inc
incl
sub
iret
out
mov
cli
dec
repz
jbe
clc
push
idiv
hlt
out
ret
push
push
jb
sub
jg
mov
icebp
popa
xchg
je
dec
pop
cld
adc
std
outsb
daa
jno
sub
jg
mov
icebp
mov
xorb
cmp
stc
fidivs
mov
and
jp
es
cwtl
addb
aaa
decb
jge
and
rcll
dec
in
sarb
push
sub
ja
hlt
or
orl
mov
icebp
notb
adc
push
push
dec
pop
fmuls
in
push
movsb
or
push
inc
push
int3
decl
sub
mov
fidivrl
arpl
clc
jbe
sbb
mov
push
pop
push
pop
shr
sbb
push
pop
or
and
dec
sbb
cli
jge
push
ds
lcall
push
jns
roll
mov
push
mov
jmp
xchg
jmp
xor
push
xchg
mov
loop
adc
add
imul
cs
sbb
loope
push
jb
mov
mov
or
add
pop
push
out
jns
add
ja
jp
xchg
cli
inc
or
sysexit
dec
xchg
inc
and
jno
jecxz
dec
pop
or
stos
add
aad
jo
push
pop
push
add
js
lcall
dec
or
mov
push
inc
lahf
adc
and
fwait
call
push
adc
sbb
add
add
xor
lods
out
into
pop
push
sbb
push
sbb
push
or
fstpt
sbb
push
push
adcb
push
pop
test
xchg
call
add
mov
test
push
add
mov
sbb
nop
mov
cs
push
adc
lret
add
js
dec
icebp
inc
push
gs
jo
xchg
js
ret
add
add
mov
xor
and
cltd
sbb
add
fsubrs
sub
mov
push
mov
inc
aaa
xchg
xor
imul
shll
dec
bound
inc
add
lock
inc
jmp
lahf
jo
das
insl
inc
out
popf
sbb
sti
inc
ret
add
imul
dec
movsb
sbb
xchg
aas
add
jno
pop
add
jno
adc
add
add
je
mov
add
xor
lea
xchg
sbb
jmp
es
mov
lods
add
insl
and
cltd
les
mov
popf
in
add
pop
push
popa
shlb
xor
sub
xlat
je
sbb
jae
or
add
or
add
push
inc
xchg
add
add
mov
lcall
rcrl
pop
pop
gs
test
jno
icebp
add
add
xchg
sbb
dec
add
cmpsl
dec
and
aas
xchg
loop
mov
pop
lcall
lahf
push
andb
rcll
jno
outsl
shrb
ss
cmpl
xor
dec
push
outsl
loop
mov
push
pop
cs
loop
sub
sbb
cmp
pop
mov
arpl
dec
insb
out
inc
imul
sbbl
inc
xor
icebp
je
push
addr16
cwtl
or
push
pop
dec
and
or
inc
add
add
or
add
ss
push
sbb
arpl
shll
cmp
arpl
push
add
pushf
adc
adcb
subl
pusha
sbb
aad
xlat
rcll
xor
shlb
dec
dec
adc
sbbl
shrb
es
je
push
fildl
fsts
adc
roll
or
sbb
stos
xor
adc
xchg
add
jbe
test
outsl
adc
xchg
xchg
push
xor
sub
sub
push
arpl
rorb
push
jb
dec
cwtl
adc
das
or
jo
and
loope
jecxz
je
bound
pop
xlat
fstpt
iret
mov
test
cmp
xchg
or
cltd
xchg
xchg
adc
icebp
and
pusha
popa
and
pop
test
cmp
lds
nop
lea
jo
and
inc
cmp
rol
daa
xchg
add
sbb
sub
sub
or
jo
dec
es
or
movsl
mov
pop
push
scas
mov
push
mov
sub
sub
fldt
adc
ja
sbb
push
pop
xor
push
test
stos
mov
cwtl
mov
mov
lahf
mov
bswap
je
jne
inc
mov
ret
inc
outsl
jae
sub
xchg
loop
outsl
mov
test
jmp
mov
mov
dec
cld
sub
cltd
push
pop
fisubrs
mov
mov
loopne,pt
clc
inc
arpl
mov
das
pop
pop
es
sub
aas
sub
xchg
pop
sub
imul
out
mov
jo
mov
xorb
mov
xorl
push
inc
mov
push
pop
imul
xchg
insb
insl
cmp
jne
arpl
jae
inc
movsl
add
dec
jbe
pop
fisttpl
sub
lds
pop
push
push
cmpsl
cmp
imul
sbb
mov
pop
mov
cmp
jne
fs
inc
insb
push
popa
js
and
push
jb
or
fimuls
inc
xchg
or
fs
fucomi
jnp
push
lds
mov
insb
sahf
daa
xchg
push
push
and
push
push
pusha
mov
cld
sub
divl
insl
mov
fcompl
jo
add
dec
loop
mov
mov
and
push
or
push
jg
jns
lock
sbb
push
and
test
lods
test
les
sub
std
addr16
mov
xor
mov
push
xor
arpl
push
divb
fmull
mov
push
outsb
inc
sbb
in
lods
pop
addb
mov
inc
je
insl
dec
outsb
shlb
ja
dec
std
lea
push
jge
and
lods
or
xor
sub
push
push
js
add
pop
shll
lcall
or
movsb
lcall
sub
or
cmpsb
imul
cmpsb
imul
inc
mov
es
pop
add
inc
add
movsb
outsl
xchg
add
insl
add
mov
sbb
rclb
popa
cmp
jo
sbb
test
popa
sub
test
mov
stos
daa
inc
lcall
push
push
cmp
dec
imul
jo
pop
pop
add
jmp
sbb
nop
or
addl
inc
sbb
adc
mov
sub
insl
movl
inc
sbb
add
sub
push
jge
jl
mov
push
mov
adc
shll
andl
lods
dec
mov
add
in
sbb
push
mov
out
sahf
imul
pushf
xor
dec
pusha
es
cmp
imul
dec
sbb
ljmp
push
push
outsl
inc
inc
xor
rol
outsb
mov
lock
sub
imul
push
hlt
mov
pusha
inc
mov
push
lock
fsubl
xlat
adc
or
mov
fdivs
dec
adc
movsb
mov
push
dec
mov
xor
mov
movsb
enter
out
jecxz
xchg
sbb
jno
andl
inc
add
aaa
mov
outsb
jbe
stc
jno
bound
adc
shll
mov
popf
and
mov
outsb
xchg
dec
insl
dec
xorb
push
rorb
inc
sub
adc
movsb
jns
rol
rol
dec
cld
addr16
and
arpl
push
cltd
mov
test
pop
xor
bound
sbb
arpl
inc
pop
push
pushf
mov
push
mov
push
fistpl
add
xchg
mov
dec
fdivrs
sbb
cmpsb
mov
xor
in
inc
cmp
rorl
push
xchg
scas
pop
mov
daa
outsb
pop
popa
fbstp
mov
rorl
pusha
push
xchg
cwtl
mov
scas
inc
sub
aad
inc
inc
pop
mov
mov
add
add
adc
add
cmc
cmp
pop
sub
call
push
inc
inc
cmp
incl
sub
cmc
rorb
adcl
dec
or
cmp
out
lcall
add
test
imul
jl
jae
xor
jo
test
cmp
loope
rolb
lcall
dec
add
sub
or
add
add
push
daa
adc
push
mov
or
add
add
sub
fisubrl
mov
add
xor
and
lods
loopne
add
inc
dec
and
add
dec
mov
daa
int3
clc
add
es
mov
adc
sahf
pop
add
addr16
rcrb
or
nop
pop
pushfw
push
sbb
jns
xlat
out
cld
dec
xor
add
jp
inc
fistl
and
or
xchg
test
add
cmp
dec
incl
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
