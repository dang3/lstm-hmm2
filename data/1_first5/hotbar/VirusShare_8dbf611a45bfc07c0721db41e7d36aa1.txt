divl
in
mov
mov
loopne
inc
add
add
cmpsl
std
in
pushl
add
call
test
jne
pop
ret
push
push
sbb
mov
test
je
aas
mov
dec
adc
movb
lock
sti
in
decl
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
in
jbe
mov
mov
call
push
mov
mov
add
sbb
daa
or
add
les
mov
rclb
addr16
push
enter
and
jg
lock
push
push
push
mov
push
into
pushf
add
jge
jmp
jmp
stos
adc
push
push
sahf
jp
push
testb
clc
test
ds
jmp
pushl
sar
dec
sub
ret
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
ljmp
mov
andl
mov
or
push
add
add
punpckhwd
aaa
mov
imulb
mov
in
iret
negl
push
in
loopne
movb
inc
test
mov
sti
outsb
ds
inc
add
add
call
mov
cmpl
jne
mov
in
mov
jl
das
add
push
mov
sbb
out
std
jnp
add
jbe
sbb
pop
inc
push
push
test
xchg
in
in
lret
add
loop
inc
adcb
adc
or
imul
into
push
or
movsb
into
push
cwtl
in
and
fs
push
lock
pop
lcall
mov
push
push
mov
xor
sbb
push
push
lods
pop
inc
clc
addl
add
fdiv
fistpl
fisttpl
ret
add
iret
icebp
sub
test
je
pop
add
pop
mov
push
push
sti
daa
loop
loopne
sbb
rolb
sbb
mov
mov
sbb
add
pop
inc
mov
push
dec
in
pusha
les
sub
dec
add
sub
imul
call
cmp
sahf
or
cmpsb
stc
call
in
aas
or
loopne
js
in
lahf
outsb
clc
push
push
mov
in
inc
inc
mov
fwait
add
les
push
mov
dec
cmp
jge
mov
jmp
mov
push
push
sub
inc
inc
dec
jb
mov
jno
and
and
jmp
push
in
jnp
cmp
adc
icebp
int3
clc
inc
shlb
push
pop
mov
aaa
jb
mov
lds
mov
xchg
adc
shrb
and
inc
cmp
jae
sarb
adc
mov
add
mov
sbb
add
outsl
mov
sub
push
cmp
xor
lock
rcll
out
adc
add
sbb
jle
pop
aas
enter
push
out
lcall
mov
test
mov
cmp
scas
jnp
lock
add
call
mov
clc
add
cld
jb
and
popf
cmp
xchg
gs
jo
push
push
cld
sub
sub
lahf
sub
je
xor
sub
or
and
push
iret
sub
jo
push
rolb
push
push
or
push
push
shrb
hlt
lods
and
add
sbb
or
daa
pop
subl
and
or
push
or
inc
push
into
mov
fildl
std
repz
sbb
je
bound
adc
mov
mov
push
cwtl
mov
push
daa
idiv
jecxz
mov
int3
push
xchg
mov
or
inc
jmp
push
cmp
inc
cmp
jnp
aad
xchg
scas
add
xlat
popf
sbb
push
xchg
loop
cs
std
daa
pop
test
jne
data16
pop
inc
pop
dec
es
and
mov
outsb
push
shrb
push
movsb
sub
cmp
xchg
lret
sbb
sub
push
adc
pop
scas
inc
pmulhw
out
push
jmp
push
test
adc
cld
add
into
sub
push
jb
adcb
push
and
stos
or
push
push
enter
pop
mov
push
int
sbb
dec
fnsave
jno
mov
in
and
push
imul
inc
jg
jmp
pusha
sbb
mov
pop
jmp
repz
mov
mov
test
cs
pop
pushf
xchg
xor
or
loope
mov
out
mov
test
lahf
lds
push
popa
adc
sub
clc
mov
test
push
push
fcmovu
jle
pop
push
push
adc
cmp
fwait
jge
fiaddl
jl
or
pusha
lock
push
push
mov
insb
pop
push
xor
xor
cmp
mull
mov
cmpsb
pop
jecxz
xchg
mov
shrb
or
mov
movsl
xchg
jbe
test
jl
or
mov
and
mov
jecxz
fs
or
pusha
rclb
mov
mov
xchg
inc
or
popa
test
fmull
pop
hlt
je
or
lea
cmp
fisttps
sub
cmp
cmp
imul
xor
insl
lods
adc
ja
js
jno
inc
nop
imul
insb
mov
js
adc
call
jne
mov
stos
cmp
jno
hlt
cmp
dec
je
inc
or
cmp
fdivs
ss
mov
sbbb
xchg
ret
xor
mov
push
or
out
push
popf
xchg
pop
xchg
cmc
push
jl
xchg
or
jl
and
mov
test
iret
mov
sbb
std
mov
dec
in
xor
or
leave
ret
push
mov
clc
add
fcomps
jbe
fimull
pushf
dec
insl
icebp
mov
scas
jmp
mov
movsb
sub
cltd
and
lock
cmp
faddp
jne
pop
mov
sub
fs
cmp
test
je
sub
inc
out
scas
dec
pushl
pop
in
push
add
test
adc
cli
xchg
mov
mov
jg
jbe
sub
lds
push
mov
mov
sbbb
push
or
mov
pop
sub
jg
filds
call
mov
test
jne
fs
inc
cmp
jl
jmp
pop
sbb
push
push
push
fdivrs
pop
jmp
sub
push
push
cmp
loope
fisubrs
pop
ret
add
rolb
mov
push
jmp
sbb
sbb
pop
bound
and
ffreep
mov
rorl
push
mov
add
gs
add
add
push
ss
andl
movsb
xchg
push
mov
orb
sbb
jl
push
mov
and
clc
std
adc
adc
ret
push
push
icebp
and
dec
fcomps
shll
ja
xlat
or
repnz
dec
mov
scas
hlt
jbe
scas
stc
test
jne
pop
arpl
add
adc
sbb
push
cs
rcrl
mov
testb
add
pop
or
jne
js
sub
pop
cmp
mov
mov
jge
iret
xchg
out
test
inc
or
loopne
ss
cmp
add
sub
rcr
sbb
lea
push
mov
imul
cmp
ja
add
jmp
mov
push
adc
jo
clc
adc
pop
leave
ret
icebp
cmp
cmp
jge
std
notb
je
or
std
adc
mov
jmp
xor
cmpb
fwait
addl
push
jge
inc
stc
jne
fcmovnb
loopne
mov
jmp
xchg
in
addl
push
repnz
inc
pop
das
clc
ja
pop
push
ja
lea
decb
pushl
cmp
int
mov
popaw
mov
gs
pop
pop
rolb
adc
orps
adc
add
inc
out
inc
out
push
cmpsb
loopne
xchg
fsubl
add
sub
lods
shl
mov
mov
push
mov
push
or
lock
divb
xlat
pusha
push
push
dec
enter
sub
push
jno
push
push
push
fimuls
inc
out
mov
cmp
pop
inc
pop
pop
shlb
push
aam
loopne
je
test
adc
or
popa
psubq
dec
orl
ds
add
inc
sbb
add
icebp
out
ficomps
push
sub
push
leave
adc
mov
loope
cmp
or
dec
outsl
clc
mov
mov
je
cmpl
pop
mov
xchg
add
std
cmp
jne
push
push
jge
into
test
ret
nop
pop
pop
jmp
in
mov
sub
jo
dec
pop
arpl
jle
dec
bound
leave
xor
dec
xor
mov
sub
or
jge
inc
xchg
jl
push
inc
jno
pop
ret
clc
jg
inc
fimuls
movb
sub
into
xor
in
int3
iret
ja
adc
cmp
inc
decb
or
shlb
adc
ret
outsl
pop
out
inc
pop
or
sbb
mov
cmpsb
dec
push
mov
adc
or
jl
sahf
or
and
jne
test
or
dec
push
push
call
into
or
xor
adc
push
lds
ss
ljmp
push
mov
mov
hlt
ds
mov
mov
shlb
adc
stos
xor
xchg
lods
clc
shrl
ficoml
ret
inc
or
push
or
lahf
repnz
sbb
cwtl
dec
clc
sub
jg
jno
dec
xchg
mov
inc
repnz
mov
or
jle
push
daa
daa
jmp
mov
mov
ljmp
ret
shlb
push
addl
inc
cmp
je
rorl
push
mov
rcl
nop
mov
inc
mov
jbe
pop
jo
inc
inc
add
or
adc
push
insl
inc
adc
mov
jmp
ljmp
pusha
fcomp
or
bound
sbb
push
pop
push
or
cmpsb
rorb
xchg
orl
ret
je
cmpsl
ficoml
and
jge
iret
orl
rcl
cmp
dec
orb
sahf
and
inc
adc
and
jb
int
or
lea
push
shll
daa
or
and
push
mov
add
xchg
call
or
jmp
rolb
dec
push
or
and
lock
adc
lea
push
mov
fimuls
jmp
test
je
pop
mov
ljmp
adc
mov
sbb
pop
stc
call
out
pushl
movsl
outsl
sub
test
add
mov
inc
ret
push
dec
push
lret
adc
sbb
cwtl
insb
ret
ret
cli
mov
aaa
and
negb
add
xor
int3
bound
pop
iret
js
mov
dec
shlb
xchg
add
mov
add
mov
xor
fwait
add
mov
and
lahf
xchg
je
push
xor
sub
or
add
jne
cli
stos
or
jb
inc
and
pop
add
data16
or
sbb
das
or
ret
sbb
rolb
iret
adc
jb
push
push
and
inc
adc
sbb
or
push
and
loope
sub
out
sti
outsb
xchg
sbb
das
sbb
sbb
add
add
icebp
test
es
sub
or
shll
into
adc
pop
sbb
xchg
xor
push
sbb
outsl
or
and
lcall
adc
pop
mov
add
enter
push
clc
add
mov
test
xchg
divl
movups
and
stc
adc
cmp
pop
test
adc
sbb
push
cmp
mov
mov
adc
pop
idivl
outsl
lock
mov
test
shrl
je
push
roll
push
movsb
push
pop
mov
mov
xor
data16
sub
mov
lret
push
jbe
call
mul
jmp
push
sahf
lods
lret
pop
aaa
std
fnstsw
add
push
pop
dec
je
je
je
xor
in
jge
adc
and
mov
dec
ss
call
jo
iret
jmp
or
inc
adc
int
cmp
jmp
nop
jecxz
pop
jne
addl
cmp
fdivr
dec
mov
rolb
push
pop
mov
xor
sarb
add
mov
scas
adc
mov
sub
mov
xchg
adc
push
mov
jge
xchg
mov
mov
mov
cmp
mov
mov
jg
clc
iret
movsb
push
xor
push
push
sub
jo
pushf
divb
sub
in
in
cmp
imul
test
jmp
mov
adc
jmp
cmp
je
shr
shl
cmp
push
jmp
inc
sbb
leave
adc
adc
xor
sti
jbe
add
fstpl
imul
dec
xchg
sbb
and
mov
sbb
lds
mov
or
sbb
and
jmp
push
push
sub
jbe
fsub
sahf
out
jl
sub
sbb
jge
push
fs
mov
add
clc
add
add
loopne
stos
lds
adc
push
push
pusha
xor
sub
adc
and
fbstp
in
or
clc
movb
add
or
xchg
adc
scas
add
jno
test
mov
and
and
push
pop
push
lea
push
orl
xor
xchg
gs
cmp
mov
cmp
inc
into
jp
and
scas
pop
or
push
jns,pt
pop
push
lea
adc
inc
subl
addr16
mov
mov
lea
cmovs
testb
mov
and
cmp
imul
lock
imul
jg
mov
sti
push
ljmp
cwtl
movl
in
xor
pushf
lret
test
testl
pusha
and
cltd
ss
push
dec
jmp
push
and
add
add
push
add
push
cmp
sti
push
pop
sub
arpl
in
out
dec
mov
adc
outsb
mov
js
adc
cmp
sbb
jnp
jbe
xlat
xchg
dec
lock
stos
stos
rclb
not
and
mov
mov
mov
inc
js
mov
jae
jecxz
shrb
shll
push
push
cmp
nop
insb
clc
cmovno
push
push
push
mov
loope
push
loopne
shl
fistps
push
push
xchg
push
mov
sub
lods
add
sahf
bound
fidivrs
add
pop
pop
loope
xchg
lea
je
mov
mov
push
lea
in
and
cmpl
clc
jne
mov
sbb
pop
push
push
fadds
xchg
hlt
dec
pusha
adc
pop
roll
xor
xchg
push
jmp
pop
fstps
sbb
clc
push
xor
inc
sub
mov
pushl
mov
adc
dec
inc
jnp
lods
adc
mov
dec
lea
or
in
ja
mov
cld
je
dec
call
mov
mov
sar
add
bound
in
dec
insl
sti
int
in
cmp
push
mov
add
mov
lock
imul
pop
leave
rorb
fyl2xp1
mov
push
popa
add
xlat
inc
das
jo
sub
ret
pop
sub
imul
or
sub
lods
or
and
addr16
inc
sub
and
push
cs
orl
adc
adc
dec
test
loop
neg
sbb
and
and
sar
cltd
insb
adc
repnz
fs
inc
xor
inc
jns
pushw
add
inc
mov
insl
sarl
xor
dec
or
iret
subb
insb
mov
xor
push
vmovsd
jb
lea
sbb
and
test
xor
addb
mov
stc
dec
adcb
mov
adc
pusha
xorb
fucomip
js
in
test
add
and
and
sub
cmpsb
push
sbb
jge
je
in
sbb
inc
lock
pushl
and
push
repnz
incl
and
dec
test
jo
mov
cmc
pop
mov
cmp
jge
ljmp
jge
add
jge
lds
adc
mov
into
fimull
adc
xchg
sbb
cwtl
lock
sbb
jmp
shll
insl
pop
push
subl
pop
inc
jle
or
mov
mov
gs
fsubl
lds
push
or
push
sahf
dec
mov
js
cltd
pop
js
push
push
sbb
fnstsw
cmp
rcr
push
hlt
movb
sub
mov
jne
testl
push
enter
ret
jo
movb
jle
aas
mov
xor
mov
out
enter
rolb
shr
xchg
pop
fs
out
movsl
incl
test
test
sub
loopne
mov
and
popf
lcall
xor
dec
xor
into
idiv
sbb
dec
inc
test
in
imul
lea
lea
call
dec
push
push
cmp
mov
adc
cmp
ret
mov
mov
push
shlb
jmp
and
push
sub
shll
or
nop
or
movl
jns
lret
jb
add
pop
insb
je
xor
nop
add
daa
push
cs
lret
cmp
sub
pushf
xor
ds
je
cmp
or
dec
add
mov
pop
sbb
loope
and
sub
rcrl
daa
addb
xor
cmpl
pop
push
and
inc
mov
data16
lock
sbb
test
icebp
sub
repnz
sub
inc
xor
cmp
ret
dec
fldl
fmull
push
lock
loopne,pn
mov
add
dec
es
push
cmp
ret
rcrl
stos
loopne
or
xchg
adc
or
pop
in
or
or
inc
jns
sub
pop
ds
rorb
mov
daa
push
mov
shll
pushf
push
pop
stc
js
push
je
push
ret
arpl
jnp
sub
push
add
ljmp
add
dec
jae
xchg
adc
lods
cmp
jno
adc
xlat
stos
fcoms
xor
dec
or
sbb
mov
adc
faddl
add
add
ret
inc
in
cmpl
adc
adc
add
sbb
loope
inc
mov
bound
test
pushf
and
push
adc
pop
xchg
mov
sbb
je
cmpb
inc
pop
lahf
inc
mov
je
cwtl
pop
rorl
scas
push
stos
or
xchg
xchg
pop
in
jmp
stc
push
cs
sub
push
push
and
cmp
mov
fnstcw
repz
sbb
jmp
nop
push
mov
or
pop
inc
shlb
push
jmp
mov
ret
loopne
push
test
int
add
push
xor
frstor
cmp
test
imul
inc
cmp
shlb
xor
pop
loope
addr16
dec
fsub
pop
aaa
mov
nop
leave
cmp
inc
adc
aam
pop
test
cltd
jp
cwtl
xor
orl
adc
fwait
sbb
cmp
push
or
cltd
mov
add
sar
jmp
or
and
outsb
mov
daa
jl
dec
inc
or
jge
outsl
cmpsb
lock
adc
jg
jge
mov
fcomip
sti
push
pop
push
fstpl
jmp
xor
idiv
repz
std
jle
mov
fwait
aaa
jp
mov
add
vmovups
jne
loopne
jbe
adc
jmp
fnstsw
pop
loopne
insb
cmpsl
int
test
sub
bound
cltd
pop
sbb
lods
adc
or
adc
or
out
bound
fstpl
push
cmpl
movsb
sti
sub
inc
test
pop
lea
cltd
idivl
mov
inc
mov
xor
pop
mov
mov
mov
out
add
jg
fs
or
scas
jl
movl
adc
test
or
lret
jbe
lahf
xor
xchg
sbb
and
fimull
loop
movl
xchg
imul
cmp
or
jmp
jge
jmp
mov
fstpl
sub
inc
hlt
pusha
or
mov
jge
faddl
sub
sub
xor
mov
in
ds
lock
mov
mov
test
sbb
mov
inc
fimuls
frstor
adc
cmp
add
mov
sbb
mov
cmpb
mov
into
clc
fidivl
jmp
outsb
mov
sub
testb
out
xchg
pop
cmp
inc
jne
pop
add
jl
dec
mov
push
mov
mov
icebp
aad
mov
mov
adc
dec
dec
push
or
lock
mov
adc
and
sbb
mov
sbb
mov
pop
push
lahf
je
je
lcall
push
fs
fadds
and
subl
jle
lock
lods
add
lock
mov
adc
into
out
xchg
pop
addr16
inc
or
mov
xor
clc
test
call
sbb
pushf
sbbb
adc
gs
mov
add
or
xchg
dec
inc
js,pt
push
jne
mov
xchg
pop
jne
rcll
adc
cs
loopne
jmp
shl
sbb
push
leave
xchg
pop
mov
inc
pop
push
and
movsb
and
xor
xchg
outsl
add
add
mov
push
mov
pop
pop
mov
push
adc
daa
push
jns
pop
push
mov
sbb
shrl
dec
push
dec
add
and
out
js
cmp
or
xor
roll
neg
push
adc
pusha
lock
adc
push
outsl
inc
outsl
test
add
inc
add
adc
xor
cld
xor
inc
cld
cmp
aam
ret
fs
mov
pop
pop
xchg
jl
add
mov
cmpl
movnti
aaa
mov
mov
mov
repz
inc
adc
push
xor
xchg
dec
jb
fwait
push
or
add
fbld
arpl
or
inc
or
stos
mul
sub
jno
scas
shrb
ss
pop
mov
add
mov
add
sbb
push
mov
clc
setb
test
jne
loope
loopne
mov
sarb
sub
sar
xor
and
jecxz
outsl
dec
adc
pop
add
pop
sarb
mov
sub
jmp
stos
pop
jmp
adc
dec
nop
lock
hlt
mov
movsw
call
pop
sbb
ret
push
push
mov
sbb
fstps
adc
das
push
je
inc
inc
out
mov
jecxz
adc
or
sub
or
loope
ja
push
shlb
loopne
shlb
into
cmp
ss
pop
sbb
cmp
cs
imulb
jo
hlt
mov
xor
icebp
dec
xor
cld
adc
out
scas
out
es
and
clc
or
and
push
je
fisttpll
loope
and
je
cmc
sub
shr
hlt
pop
or
push
xor
dec
std
rcrl
mov
cmp
cli
shlb
xor
sub
movl
jnp
sbb
addr16
aaa
loop
jl
dec
mov
xchg
lock
adc
and
icebp
and
pop
sub
adc
mov
inc
and
es
add
mov
pop
inc
rcll
cmpsb
int3
sub
loopne
test
xchg
ret
rcr
lods
push
testb
inc
mov
cli
pop
lahf
mov
ds
sar
jne
push
add
jbe
or
ja
imulb
mov
jmp
add
add
jnp
mov
jecxz,pn
push
mov
push
lods
les
and
mov
frstor
pop
pop
add
fmul
orl
test
insb
inc
clc
or
xor
enter
in
dec
hlt
adc
sub
in
fs
cmp
mov
sub
push
mov
notb
sub
fadds
or
push
mov
pop
cld
pop
ss
mov
inc
insl
lcall
loop
es
jmp
push
mov
decl
in
mov
call
cmp
aad
push
pop
bound
or
dec
cmp
pop
int
lea
shl
push
push
pop
push
or
inc
sbb
mov
inc
fmuls
push
adc
add
mov
push
stos
inc
repz
pop
add
sbb
ss
adc
add
or
add
fstps
mov
sbb
inc
sub
cmp
dec
mov
adc
add
push
pop
ffree
or
pop
stos
or
pop
leave
ret
popl
pop
xor
and
mov
pop
mov
cli
dec
stc
clc
in
add
mov
jne
push
test
aad
fcomip
pop
filds
enter
fs
scas
dec
and
cwtl
movsl
and
lcall
inc
pusha
mov
adc
adc
dec
jo
addb
mov
data16
and
add
sub
add
pop
sbb
adc
lea
dec
nop
shrl
call
inc
push
outsb
sbbb
jo
mov
rcr
cmp
cmp
clc
fcmovb
jge
adc
negl
mov
or
push
and
shl
daa
add
pop
ss
psubd
sahf
mov
fdivl
jmp
or
inc
adc
std
jo
adc
jge
jl
bound
xchg
cmpsb
add
fsubrp
adc
sbb
push
in
mov
fmuls
push
int3
mov
test
roll
jmp
mov
push
pushf
xlat
ficoms
dec
aam
adc
scas
adc
fsubl
fwait
sub
mov
xchg
rcrb
bound
movsl
dec
addr16
or
mov
lods
cmp
pop
xchg
pop
rcrl
fadds
adc
dec
mov
add
lret
push
or
popa
push
add
mov
add
add
xor
insl
push
and
sbb
cs
push
in
sbb
pusha
mov
neg
lea
rcrl
je
xor
inc
and
popf
fidivrs
lea
cmp
jo
pop
add
sub
push
cmpsl
pop
inc
cmp
lods
lahf
rolb
add
pop
mov
or
mov
pop
push
push
and
sarb
add
sbb
cmpsl
mov
sbb
mov
pop
cmp
mov
ret
lahf
jno
push
push
loop
jne
pop
push
mov
and
pop
mov
or
sbb
push
inc
sbb
fsubr
lret
je
sbb
sbb
stos
jmp
fcmovnbe
or
hlt
and
push
repnz
xchg
add
out
or
or
stc
sbb
mov
cmp
sbb
mov
push
cmp
or
sahf
inc
cmpsb
leave
je
adc
xor
repnz
add
stos
shl
cmpsb
push
or
cmpb
rcrb
push
out
shl
ljmp
sahf
mov
lock
or
andl
push
iret
test
dec
aad
mov
lods
sarb
les
sbbb
jge
rorl
xchg
sub
xor
orl
xchg
adc
es
pop
test
dec
push
je
pop
mov
inc
fldl
pop
ja
xchg
cmp
and
mov
sub
sbb
shlb
adc
and
scas
adc
gs
dec
xchg
or
mov
loope
mov
inc
add
push
loopne
test
lret
and
das
dec
inc
cmp
test
rorb
mov
push
push
and
push
aaa
js
and
in
mov
inc
and
in
popa
cmp
test
pop
jo
repnz
mov
add
adc
cmp
lcall
daa
sldt
cmpb
pop
push
mov
jae
add
sub
pop
imull
scas
in
stc
rorb
sub
das
jne
xor
sbb
scas
in
negb
ds
je
xchg
push
sbb
mov
inc
in
mov
cld
inc
add
js
scas
jno
add
add
and
out
clc
sbb
adc
sub
and
or
mov
push
pop
push
or
jbe
push
shlb
dec
mov
mov
lret
es
inc
popf
pop
lahf
pop
sbb
or
push
add
push
and
add
add
lods
sub
leave
popf
sbb
in
mov
adc
or
dec
fistpl
insl
movsl
in
jg
imul
in
insb
push
mov
mov
cmp
fnsetpm(287
dec
dec
mov
decb
or
js
jo
mov
xor
inc
push
xor
adc
test
stc
pop
mov
cmp
data16
or
inc
push
jbe
clc
adc
jl
sbb
inc
push
fnstsw
cmp
ret
or
mov
inc
and
idivb
jo
jle
mov
push
add
sbb
inc
inc
decb
cwtl
cmp
je
ja
mov
clc
rorb
add
incb
in
push
mov
sub
jb
push
mov
lea
add
in
and
cmpsl
jne
sbb
push
and
outsl
test
mov
orl
popa
sbb
mov
imul
test
testb
jns
sti
data16
gs
pusha
imul
in
mov
test
jp
adc
xor
iret
popl
insb
or
push
jns
inc
dec
or
push
lcall
dec
data16
inc
push
scas
adc
inc
testb
notb
sub
xor
cmp
aaa
push
or
lret
or
or
imul
add
sti
mov
cs
inc
sahf
clc
test
outsl
xlat
repnz
jl
or
divb
pop
dec
gs
xchg
jmp
or
or
or
lcall
adc
push
cmp
call
imul
xchg
data16
inc
or
push
push
and
push
push
mov
ficoms
inc
adc
js
adc
fwait
rcrl
xor
push
sbb
cmp
push
mov
mov
jns
xchg
xchg
int3
add
pusha
das
cltd
out
cmp
pop
xorb
jg
ficoms
cmp
aam
out
fs
adc
push
sbb
adc
jne
fildl
cmp
adc
decb
push
cltd
nop
call
and
add
jle,pt
std
adc
adc
fs
adc
sbb
pop
push
dec
sub
push
mov
pop
aaa
inc
adc
jo
adc
push
fwait
and
loop
inc
push
fsubl
in
nop
push
mov
mov
push
xchg
adcl
movsb
sub
pop
mov
push
shlb
scas
loopne
pop
gs
and
pop
adc
test
cwtl
out
aaa
inc
mov
scas
test
stc
and
or
xlat
sahf
in
push
adc
cmp
cmp
loopne
push
jecxz
jo
data16
call
inc
insl
jnp
idiv
adc
mov
and
sti
enter
push
mov
xor
loopne
xor
sbb
adc
les
ret
icebp
icebp
xchg
lret
xor
jge
test
lea
pushf
fs
daa
fstl
cltd
lea
pop
add
jg
lcall
mov
lods
add
sub
xlat
xchg
sub
sub
inc
jae
sbb
lds
ss
imul
xchg
mov
jmp
jne
or
bound
and
xor
sbb
push
push
mov
fimull
cmp
shlb
and
dec
andb
xchg
cmpl
jne
loope
mov
out
xor
mov
mov
mov
mov
call
or
add
adc
xor
push
push
push
orb
push
pusha
pop
cmp
or
dec
test
mov
inc
add
aaa
loop
nopl
js
add
and
jl
test
or
mov
js
push
dec
shll
dec
js
js
pop
popa
xchg
dec
cmpsb
adc
xchg
xchg
mov
and
push
jb
lds
mov
fdivrs
xor
ror
subb
pop
cmp
jns
push
ret
jg
add
sub
sbb
xchg
add
andl
fwait
mov
add
sbb
mov
add
fdivl
fsin
sbb
test
pop
out
add
sbb
movsb
mov
repnz
aam
push
out
xchg
add
push
or
adc
pop
dec
xchg
aad
xor
add
mov
adc
sbb
xor
pop
adc
or
push
and
test
out
xor
in
iret
dec
cmpsl
hlt
aam
cmpb
xchg
or
add
and
icebp
mov
xchg
add
rorb
mov
ret
fisttpl
mov
testb
popa
repz
call
notl
and
sub
push
leave
adc
sub
sub
jge
and
sti
xor
cwtl
jne
and
cmc
mov
out
mov
orb
jle
push
adc
in
sbb
and
xor
xchg
pop
insl
pusha
hlt
sbb
cmp
sbb
inc
and
leave
inc
adc
jb
xchg
push
repz
or
cmpsl
mov
neg
rolb
push
xchg
imul
pop
fdivrl
dec
cmp
add
daa
pop
gs
fs
inc
push
ret
push
repz
loop
pop
hlt
setne
fnstcw
loopne
pop
repz
sti
aas
push
push
jg
inc
push
pushf
xor
mov
adc
hlt
jne
push
push
push
add
lock
sbb
push
push
js
or
pop
jmp
sub
ret
call
adc
push
xchg
pop
rclb
push
mov
clc
or
inc
and
icebp
pop
dec
push
xlat
sub
daa
mov
nop
xor
add
loop
and
sub
repnz
or
in
dec
mov
add
pop
jmp
and
push
push
fcompl
arpl
dec
add
push
sbb
or
and
add
push
jge
xor
stc
andb
movsl
dec
movsl
xlat
filds
xchg
sbb
fmul
push
fwait
push
sbb
lahf
shlb
subb
jae
lods
inc
out
push
add
xchg
repnz
or
std
imul
sahf
loopne
push
je
xor
or
xchg
sbb
and
cmp
sub
imul
push
ljmp
push
out
bound
mov
adc
sbb
and
add
insl
fwait
lret
push
gs
inc
dec
rorl
pop
add
inc
and
ret
cmp
sub
adc
add
jne
outsb
sbbl
or
js
inc
fwait
mov
push
mov
xchg
jbe
mov
xor
push
mov
mov
repnz
icebp
into
lret
xor
in
in
add
mov
mov
aad
sbb
inc
out
inc
cli
imul
mov
mov
push
mov
and
push
mov
mov
xchg
fldt
xlat
mov
xor
add
mov
or
push
push
adc
mov
lahf
mov
add
inc
dec
pushf
mov
mov
sbb
sbb
xor
cmp
out
sub
xchg
mov
test
dec
out
jmp
bound
leave
mov
push
mov
ret
sub
push
pop
insb
and
dec
test
test
xchg
and
loopne
add
mov
movsl
mov
inc
add
cwtl
add
sbb
mov
push
sub
pushw
pop
lods
ja
shlb
shl
stos
xchg
pusha
xrelease
push
push
or
add
or
enter
jne
aam
les
jo
ds
cmp
xchg
mov
or
fsubr
jg
pop
dec
test
cmpsb
adc
xchg
ret
xchg
fidivrl
push
jno
mov
inc
add
push
add
add
test
inc
or
adc
test
pop
mov
adc
dec
in
add
lret
sahf
sub
pop
push
movsb
insl
out
sbb
cmp
call
add
aam
jmp
mov
hlt
add
dec
jl
ret
sbb
lds
es
mov
mov
daa
xchg
push
ret
inc
mov
push
lret
stos
popa
cmp
into
lock
lock
data16
dec
sar
push
adc
shll
sbb
or
mov
cmp
jae
push
jle
pop
add
cwtl
jbe
push
shl
and
daa
sub
add
push
push
pop
push
add
cmp
jo
and
dec
cmp
dec
hlt
jge
mov
cmp
incb
testl
or
out
or
sbbb
jmp
jmp
xor
lcall
dec
pusha
pop
test
or
je
test
jl
mov
cmp
jg
loope
jge
push
shl
pop
fwait
add
push
jmp
mov
ret
pop
pop
mov
hlt
adc
fistpll
and
pop
xor
or
stos
xchg
pop
nop
mov
inc
hlt
sub
rcll
popa
mov
movsl
std
or
psubusw
add
xchg
jb
lock
or
mov
mov
inc
adc
inc
scas
jae
xor
add
mov
inc
or
sub
mov
sbb
ret
mov
adc
jle
or
mov
xchg
in
clc
push
movb
bound
sbb
data16
test
sub
xlat
int
sbb
insl
and
and
add
push
cwtl
or
cli
cmp
inc
push
push
mov
mov
ljmp
adc
jle
fsubrs
and
mov
jo
dec
push
cmp
cmp
pcmpgtd
sahf
push
sti
inc
push
ret
xchg
sbb
push
sbb
mov
out
pop
and
adc
or
insl
in
mov
mov
push
pop
pusha
and
mov
cmpsl
pop
js
popw
sbb
and
into
aam
mov
or
movq
es
or
lock
cmp
push
lea
jb
ds
mov
or
das
cmp
jp
fimuls
mov
incl
ret
mov
sub
pop
andb
jae
inc
stos
push
sbb
sub
push
lahf
jne
adc
push
dec
and
mov
jns
adc
hlt
mov
outsb
shl
lods
es
scas
push
cmp
add
jo
push
les
cmpsl
mov
mov
nop
adc
jl
mov
mov
pop
adc
inc
dec
pop
dec
ss
push
mov
bound
fs
xchg
push
cltd
cli
adc
or
out
ds
test
lcall
rorb
fadds
fimuls
or
test
loopne
push
in
sbbb
movsb
cld
push
stos
test
pushl
jle
shlb
leave
shrb
loop
xor
dec
sub
add
in
add
mov
push
popf
scas
test
lcall
aam
addb
sub
adc
jo
jbe
inc
repz
adc
or
add
shrl
jae
shr
dec
daa
and
enter
daa
or
and
call
xor
outsb
mov
jne
mov
xor
adc
lret
push
xor
repz
cs
rorl
sbb
and
or
rclb
xchg
into
je
dec
and
pop
out
js
lock
dec
sub
pushf
fs
clc
push
add
pop
dec
adc
inc
pop
sbb
cmp
add
inc
lret
inc
push
xor
push
sub
ret
movsb
fisttpl
pop
into
lods
add
rolb
inc
pop
and
std
popa
push
loop
lock
cwtl
adc
xchg
push
sbb
in
into
pop
insl
push
int
call
cmp
dec
add
mov
push
shrl
and
out
xchg
lahf
cmp
dec
lcall
sbb
push
xor
gs
jl
je
sub
mov
testl
adc
sbb
subl
out
call
mov
push
add
sahf
cld
sbb
xor
inc
or
inc
shrb
mov
or
in
loope
imul
sbb
pop
cmc
aas
push
jl
jmp
fistpl
cmp
adc
jne
jmp
dec
and
movsb
push
push
inc
push
sub
in
dec
or
mov
rolb
imul
jp
or
pop
mov
push
push
push
and
jmp
push
push
lods
jbe
int3
pop
lods
andl
adc
sub
ss
push
add
pop
fidivrs
pop
adc
or
and
or
push
cwtl
lea
pop
or
push
movsb
test
inc
ficompl
mov
je
movb
push
outsb
mov
jbe
scas
add
jle
adc
xchg
outsl
ds
call
fldl
shlb
add
cmc
inc
pop
popa
lock
aaa
sbb
jne
add
test
vmulps
js
mov
scas
jecxz
pop
add
jmp
sahf
pop
repnz
or
sahf
mov
jno
cmc
jbe
nop
push
mov
add
ret
and
xchg
pop
and
and
fchs
and
sub
sub
xchg
push
dec
add
ja
pop
pop
mov
in
cmp
and
add
imul
jmp
jp
jns
cmp
aam
pusha
pop
leave
adc
aas
insb
cmc
add
xor
fsubrs
andl
push
jmp
in
shlb
in
stos
pop
and
repz
sahf
inc
add
add
pop
loopne
cmp
sub
fldl
xchg
pusha
adc
mov
add
shlb
pusha
sub
dec
gs
push
add
and
lock
mov
mov
push
sbbb
js
fcoml
dec
mov
loopne
or
add
pop
js
fcompl
sar
or
popf
loop
add
orl
aad
rorl
push
push
mov
imul
nop
enter
pop
addr16
push
push
xor
xor
pop
inc
pop
testb
call
push
pushf
aaa
in
cli
xchg
inc
add
and
add
xchg
and
lea
push
sbb
push
pop
add
lock
cs
jns
or
je
xor
cmp
add
jne
xor
push
push
nop
dec
adc
cld
cld
mov
sub
push
lock
pop
sbb
push
inc
ficoms
jp
jge
clc
mov
push
mov
push
enter
mov
lea
push
lock
jg
add
lret
cld
sub
mov
imul
sub
cmpsl
fimuls
mov
jmp
call
inc
xor
cmp
loop
sbb
shr
adc
adc
testb
add
iret
push
push
add
push
xlat
into
mov
or
movsb
dec
jp
mov
add
add
imul
or
stos
sbb
pop
arpl
test
roll
jb
lods
rcrb
xor
pop
lahf
orb
dec
mov
mov
add
movsb
hlt
push
adc
mov
test
movsb
pop
sbb
pop
xchg
mov
into
pop
jmp
mov
stos
test
rcll
mov
jmp
test
push
es
sub
and
cwtl
mov
daa
sub
insl
sub
ljmp
push
call
ret
mov
nop
std
or
mov
cmp
je
cmp
shlb
pop
lret
inc
cmp
movzwl
cmp
xchg
push
into
jp
dec
mov
and
mov
push
dec
mov
movsb
push
ss
loope
sub
push
outsl
mov
pusha
pop
sub
nop
jnp
shrb
movsl
decl
fimuls
jl
push
push
iret
popf
ljmp
imul
push
add
jne
cs
push
test
push
add
sar
or
mov
mov
cmp
je
push
lea
push
mov
xchg
nop
push
arpl
cmp
sub
push
sbb
cmpb
call
or
adc
sbb
xor
in
or
adc
lret
mov
ud0
push
aas
push
adc
jns
xchg
pop
shlb
xor
mov
and
call
push
clc
add
in
shl
push
in
inc
lods
inc
mov
mov
in
mov
neg
push
andl
into
test
cli
fldl
or
push
loope
in
shlb
subl
sub
mull
test
ja
xchg
push
test
movsl
lahf
cmp
push
push
xor
push
push
cmp
je
fcmovbe
push
push
rclb
sbb
lods
or
test
fiadds
push
mov
and
and
fdivrs
fnsave
push
aas
lret
inc
mov
sub
push
xchg
outsb
add
mov
jmp
dec
cs
mov
fdiv
mov
cmpsl
ss
xor
sub
imull
scas
data16
test
loopne
in
notb
or
xchg
cmp
mov
into
gs
scas
in
decb
inc
inc
sbb
push
ss
sub
sahf
imul
ja
lods
jae
jne
cmp
shlb
xchg
sbb
dec
cmpl
je
ret
pop
or
jae
inc
cmp
inc
mov
loope
adc
andl
ret
add
cmp
pop
cmp
nop
ret
xchg
inc
sbb
xor
in
dec
jmp
jns
roll
cmpb
mov
jb
mov
push
lea
push
cmp
je
cmp
jne
add
cmpsb
mov
in
xchg
ja
cmc
je
and
mov
outsb
or
or
fcoml
mov
outsb
pop
mov
cmp
xor
daa
clc
ret
adc
mov
pop
clc
pusha
ret
jns
bnd
ds
or
test
mov
add
push
lea
cmp
adc
jmp
mov
call
mov
and
mov
mov
cmpsl
jp
ret
or
aad
mov
xor
lcall
jl
inc
sub
jge
and
insl
adc
pop
movsl
dec
arpl
fdivl
leave
ret
add
pop
pop
add
push
leave
sbb
cli
aaa
adc
icebp
mov
jb
cmp
ja
xor
dec
mov
sbb
inc
aaa
popa
lcall
xchg
push
call
out
dec
je
add
push
sbb
and
push
mov
pushf
mov
add
sarl
push
pop
push
inc
adc
mov
dec
push
test
or
lret
jmp
inc
loopne
cmpl
in
xor
filds
sub
or
mov
cmp
gs
je
cmp
jne
mov
cmp
mov
loop
dec
inc
clc
fistps
jmp
dec
mov
dec
xor
push
movsb
jne
jmp
divb
adc
mov
lock
faddl
loop
cmp
jbe
mov
lea
mov
dec
dec
inc
jmp
inc
add
or
xor
pop
mov
sub
or
sbb
and
mov
pop
sarb
je
mov
lea
lods
sahf
clc
rcrl
lods
lock
and
data16
mov
xor
inc
cmpl
mov
jne
inc
cmp
jne
notb
cmp
arpl
clc
je
or
cmpsb
movb
inc
jb
or
pop
loop
ja
fsubrs
enter
mov
mov
cld
add
push
cmp
pop
frstor
xor
adc
lock
dec
outsl
mull
jnp
jmp
loop
jne
mov
clc
out
loopne
or
decl
mov
push
data16
mov
aaa
jb
lcall
pop
shl
add
fmull
aas
les
std
data16
inc
orl
or
test
jne
adcb
cs
lock
rorl
insb
mov
mov
or
test
incl
push
jae
mov
jmp
dec
shlb
cld
jbe
test
sub
lea
test
push
dec
pushl
pop
adc
mov
shl
cmp
jg
outsb
pop
add
cmp
xor
or
jle
cld
outsl
outsb
outsb
es
sub
sub
and
pop
cmp
jl
mov
jle
pusha
faddl
int3
lahf
add
jp
jb
jbe
mov
orl
popa
test
fwait
and
or
clc
pop
cld
cld
je,pn
test
jne
je
outsb
and
push
mov
push
lcall
pop
hlt
aaa
daa
sub
adc
movb
inc
mov
push
sub
adc
in
movsb
push
and
xchg
or
mov
or
mov
adc
push
mov
inc
and
je
testb
dec
outsl
jge
jmp
mov
cmp
add
jp
pop
pop
rcrl
es
lea
clc
inc
mov
mov
push
movl
sub
mov
andb
int3
sub
and
imul
mov
fs
adcl
es
add
pushf
mov
icebp
inc
sub
mov
jb
mov
cmpsl
or
mov
xchg
sbb
insl
mov
add
sub
pop
mov
cmpsl
mov
movb
push
inc
daa
outsb
jo
lea
xchg
push
pop
push
mov
add
pop
jb
sbbl
rcrl
cmp
mov
in
dec
hlt
loopne
inc
das
mov
or
inc
testl
sub
xor
ss
pusha
lock
pop
jle
stos
dec
daa
mov
add
xchg
iret
outsb
mov
arpl
dec
fadds
dec
shrl
inc
and
jae
mov
insl
and
cmp
dec
cmp
out
je
test
cmp
adc
mov
mov
pop
fbstp
or
mov
subb
push
jle
jbe
push
and
inc
lods
or
and
or
pop
and
int
test
subb
scas
test
clc
add
inc
inc
push
sbb
scas
jl
add
cmp
xchg
add
test
data16
roll
pop
mov
or
inc
inc
sahf
in
mov
push
cmp
xchg
and
popa
jne
xor
pop
pop
add
inc
xchg
xchg
inc
sub
sbb
xchg
add
or
jno
frstor
subl
rcrb
push
int
sub
inc
cmp
jb
cs
gs
dec
or
fcomps
add
inc
fisttpl
leave
and
fmull
push
enter
inc
and
mov
jmp
shrb
addb
mov
cli
add
mov
xor
and
cmp
aaa
xor
jmp
es
xchg
xchg
jne
lahf
push
jb
jb
cwtl
addl
xchg
xchg
pop
sbb
xor
jbe
xor
or
or
popa
xchg
jne
iret
push
leave
mov
cmp
or
xchg
cmp
and
inc
and
dec
sbb
jle
and
aas
add
pop
call
cmp
add
cli
mov
out
mov
add
aam
rorl
jnp
sub
xor
aam
xchg
test
in
mov
xor
ljmp
in
lret
andl
jne
push
sar
stos
mov
out
and
jne
cmp
fwait
push
push
fdivl
pusha
stos
dec
cmpsb
jne
sbb
adc
jnp
das
movl
add
pop
clc
nop
push
cmpl
dec
adc
insb
push
adc
inc
cmpl
pop
xchg
pop
jecxz
out
mov
jb
pop
xchg
cmpsb
fcomp
sbb
psubsw
jmp
cmp
je
mov
cli
vmovddup
mov
mov
inc
inc
inc
xchg
in
loope
jge
and
pop
and
aaa
sbb
adc
lock
jne
cwtl
mov
add
loop
mov
adc
pop
mov
aam
fsubr
cmp
in
test
in
xor
rorb
push
frstor
fldt
push
call
xor
out
pusha
shlb
jp
sbb
push
inc
cld
aas
clc
int
jae
jmp
pop
inc
cmp
je
lea
cmpb
in
ret
aaa
mov
adc
je
or
jne
push
loopne
adc
add
pop
cmp
mov
push
add
jp
push
inc
lcall
add
jmp
mov
test
movsb
push
adc
cltd
test
jge
cmp
sub
mov
divb
add
icebp
je
jmp
add
add
js
add
and
push
or
ljmp
or
jbe
das
jl
cmp
nop
jmp
inc
push
sbb
dec
popa
in
adc
pop
sbb
gs
aad
ret
fldl
insb
cmp
sub
mov
sub
adc
add
int
add
loopne
dec
mov
mov
fdivs
xlat
dec
add
leave
test
mov
mov
cmpsl
xor
test
mov
cmp
cmp
out
mov
das
int
or
push
mov
cld
add
push
push
push
sbb
add
xor
push
scas
loopne
push
xlat
push
das
mov
pusha
cmpb
movsb
sub
mov
inc
cmp
jbe
in
fiaddl
cmp
and
mov
push
fadds
mov
sub
jb
pop
xor
xor
sub
cmp
pusha
addr16
fistps
sbb
pop
ret
imul
es
mov
in
or
in
add
int3
xchg
dec
inc
enter
pop
int
pop
adc
ds
add
andb
push
xchg
test
adc
push
test
xorb
add
lds
enter
popf
pop
arpl
push
mov
mov
imul
insl
xchg
jnp
sbb
aas
push
jnp
out
ret
sahf
insl
pusha
mov
mov
lea
or
push
test
push
jge
cmp
add
mov
xor
in
dec
loopne
push
add
andl
pop
ror
fwait
inc
dec
movl
cmp
push
loopne
nop
cmpb
mov
or
adc
inc
xchg
inc
repnz
pushf
data16
test
mov
mov
arpl
test
or
or
add
fisttpll
popa
pop
lcall
loopne
mov
cli
mov
dec
xor
xor
xchg
xchg
stc
loopne
in
jne
cld
aam
loopne
rorb
xchg
test
pop
or
out
sub
je
mov
jmp
pop
rcrb
mov
test
adc
jo
rclb
jnp
insb
adc
dec
jge
adc
fucomi
ud0
aas
push
out
outsb
add
mov
sub
mov
lea
mov
repnz
ret
in
xor
loope
push
scas
jne
outsb
cmp
xchg
jo
pcmpeqb
in
inc
insl
cmp
jnp
jne
mov
xor
sbb
push
xchg
rclb
insl
fisubl
nop
push
inc
inc
fsub
hlt
xchg
add
pushf
in
js
test
push
sbb
push
sub
mov
jp
orb
jg
push
fisttpll
jne
sarb
jbe
shlb
sub
mov
sbb
push
sub
dec
data16
cmp
sbb
idiv
push
adc
cltd
loopne
sub
shlb
cmp
add
enter
sti
mov
bound
sub
or
jo
inc
out
es
loope
stos
or
cmp
sbbb
cmp
dec
add
sbbb
and
push
scas
mov
and
jae
inc
lods
cmpl
xor
or
loopne
aam
pushf
adc
mov
int3
xorl
imul
mov
inc
popl
data16
cltd
inc
sub
sbb
pop
popa
adc
pop
or
pushf
jbe
dec
scas
dec
cld
mov
or
add
push
sub
addr16
call
xchg
mov
sbb
cmp
sbb
loopne
mov
inc
jmp
hlt
outsl
stc
push
pop
mov
mov
or
mov
add
add
jmp
mov
dec
xor
push
adc
dec
sbb
sbb
xor
cmp
and
dec
sarb
pop
mov
sbb
popf
cs
dec
mov
imull
add
fs
and
fldcw
cmp
sarb
pusha
mov
dec
leave
sub
adc
dec
scas
pop
aas
push
push
mov
adc
aas
inc
mov
add
mov
mov
les
les
inc
pop
insb
dec
cmp
hlt
ffree
jecxz
push
jbe
pop
add
xchg
or
xor
out
or
add
mov
add
dec
sub
loopne
in
add
lock
push
mov
xchg
pop
shlb
fadd
stos
push
or
idiv
cmp
pop
or
cmp
inc
inc
or
xchg
sbb
gs
lock
dec
cmp
jecxz
add
sub
push
mov
jecxz
into
dec
and
test
add
lock
pop
lea
in
inc
mov
out
loop
pop
or
popa
icebp
fstl
test
jb
fcoms
lods
and
les
or
jecxz
and
sets
imul
sbb
mov
or
jecxz
std
dec
andl
sub
or
outsb
adcb
sub
inc
loope
xchg
pop
jcxz
mov
imul
push
mov
mov
xchg
xchg
pop
xchg
xor
sarl
in
clc
xchg
mov
push
and
inc
imul
xlat
pop
sub
lock
nop
mull
lods
rcrl
push
add
insl
jl
ja
jecxz
xor
dec
adc
jbe
dec
shlb
jo
inc
push
or
add
mov
adc
add
in
roll
and
in
dec
div
sbb
inc
push
insl
inc
sahf
loop
in
inc
push
or
sarb
xchg
lahf
inc
push
xor
jecxz
int
sbb
xchg
movsl
sbb
xchg
push
inc
mov
pop
mov
or
lea
pop
test
add
jae
mov
jb
fwait
mov
ds
movsb
push
jb
cmp
stos
xchg
inc
dec
lea
outsl
test
sar
insb
imul
mov
lahf
mov
or
or
push
repnz
cmp
movsl
mov
shll
inc
jae
gs
push
xadd
aam
std
pop
pop
xor
push
adc
imul
test
in
push
and
or
or
adc
in
jmp
xlat
mov
pop
neg
pop
or
jb
dec
adc
sub
xor
mov
sub
inc
data16
adc
loop
ret
sub
xchg
test
push
fisubrl
xor
js
jne
mov
lds
popf
add
push
add
sahf
push
sub
or
jmp
clc
hlt
mov
mov
data16
cmpsl
jl
bound
pop
das
aad
inc
dec
sub
pop
sbb
iret
push
adc
repnz
push
xor
dec
cmpsb
push
pushl
jl
pop
in
inc
pop
jo
jle
push
cmp
sbb
jge
stos
xchg
jb
push
shlb
mov
daa
aaa
pop
adc
pop
outsl
adc
std
push
ret
mov
pop
xchg
push
push
inc
aam
and
sub
fsubrs
sub
adc
mov
add
nop
push
icebp
adc
popa
push
pop
fwait
and
icebp
scas
in
cmp
jne
frstpm(287
adc
arpl
pop
incb
cmc
pop
dec
enter
or
mov
stos
push
jnp
scas
add
enter
or
adc
xchg
mov
pop
loope
jmp
adc
pop
nop
adc
inc
sbb
adc
orb
and
inc
call
push
mov
lcall
or
aaa
test
orb
or
pop
sub
mov
sub
push
jmp
and
rorb
iret
sbb
push
call
ret
jb
rcll
and
adc
cmp
mov
sub
fisttpl
idivl
or
add
push
stc
jo
jl
pop
test
pop
fwait
ret
out
add
dec
outsb
aad
jb
or
xchg
test
mov
test
fwait
sbb
xor
shll
pop
movsb
addb
jg
xor
inc
push
inc
sub
pop
pop
mov
int
movb
mov
cmc
or
fs
push
push
and
push
xchg
fadd
push
mov
sbb
inc
xor
and
loope
leave
dec
shr
loopne
push
stc
call
jo
pop
inc
xor
push
dec
mov
rorb
cli
lea
or
and
jl
pop
push
fs
inc
inc
pop
mov
xchg
in
and
jo
iret
daa
hlt
fnsave
and
roll
lcall
dec
xchg
andb
push
add
push
jp
add
jne
andb
insl
notl
orl
popf
xchg
sub
imul
aad
pusha
call
inc
popa
dec
pop
imul
adcl
shll
xor
stos
adc
xchg
jo
sub
es
jmp
loopne
iret
sbb
movsb
add
ss
xor
sub
or
fs
pop
jmp
nop
sub
shr
jno
mov
push
push
fcomps
cmp
andl
xor
test
pop
pop
test
in
jno
divb
xorb
or
adc
add
cmp
add
mov
shll
incl
dec
sti
mov
push
push
pushf
push
stc
add
test
dec
into
push
mov
aas
in
mov
pop
xchg
ss
add
js
xor
push
clc
mov
sub
lods
mov
out
in
js
dec
dec
loop
mov
cmp
xor
loopne
xchg
mov
xor
ret
add
xlat
add
xlat
mov
sbb
daa
cli
xchg
inc
push
xchg
mov
insb
add
ret
aad
xor
stos
lock
mov
jne
mov
jmp
loopne
nop
dec
je
enter
insl
jne
sub
lds
dec
test
push
add
shll
xchg
es
dec
xor
mov
xlat
enter
roll
xchg
xor
adcl
mov
scas
lahf
sub
jb
aaa
ret
clc
sub
das
dec
sbb
xchg
ret
aas
push
mov
ret
lcall
daa
imul
push
push
add
fiaddl
insb
push
add
push
cs
lret
pop
test
or
cmp
inc
pop
loopne
jne
push
sub
in
mov
add
scas
jl
or
addr16
cwtl
loope
daa
pop
aaa
dec
mov
sub
push
lods
dec
mov
mov
pop
inc
sahf
popf
adc
pop
mov
stos
jmp
xor
adc
push
in
xor
in
test
xchg
int3
push
adc
jecxz
inc
clc
lahf
add
mov
mov
test
inc
add
dec
lea
cmpsl
sbb
loop
xchg
or
in
jge
pushf
jbe,pn
outsl
nop
test
pop
and
pop
cmp
adc
por
in
shrl
sub
sahf
and
test
push
xor
int3
or
addr16
in
call
inc
mov
loopne
push
call
and
add
mov
ljmp
nop
sub
in
hlt
fdivl
pop
adc
out
xchg
repnz
mov
int3
mov
sub
inc
xchg
jbe
mov
int
loopew
push
xchg
add
sarb
imul
test
push
jbe
dec
or
aam
mov
or
xchg
int3
inc
dec
mov
push
mov
out
mov
or
dec
add
emms
shl
cmp
and
aaa
sub
push
push
or
add
pop
and
or
xchg
push
lret
xchg
imul
sti
jp
mov
push
fwait
pop
and
je
push
fstl
mov
push
in
jl
jae
mov
push
xchg
inc
dec
or
sub
pop
xchg
xor
popf
dec
int
or
add
add
in
push
and
pushw
int3
add
sbb
loopne
push
push
jb
cmpsl
shlb
dec
add
sub
sbb
dec
sub
xchg
data16
sbb
sbb
jg
push
outsb
popf
jo
ds
rolb
pop
lret
in
push
inc
or
xchg
add
fadds
or
lods
xchg
out
push
sub
test
bound
xchg
lock
sbb
roll
cmp
fbld
ds
divl
jae
pop
sbb
or
test
jl
out
push
sbb
sbb
jns
call
add
push
inc
or
adc
addb
mov
mov
hlt
push
sub
fcmovnb
in
sti
rcr
mov
int
mov
cmp
xor
lcall
cmc
ds
or
call
fdivs
or
push
jle
adc
movsl
cmp
sahf
add
add
adc
jle
pop
lods
jl
add
aad
popa
loop
popf
push
add
loope
push
cmc
add
jmp
pop
sti
push
mov
roll
test
fwait
insb
out
add
ret
mov
push
xor
add
lea
push
mov
leave
add
and
and
or
lds
lock
sbb
ljmp
test
roll
arpl
add
add
pop
add
adc
adc
sbb
ljmp
stos
push
jp
aam
nop
movsb
push
dec
or
fs
push
jb
lahf
lahf
jb
pop
nop
cmp
insb
iret
dec
sbb
push
pop
mov
insl
rclb
jae
movl
mov
or
sbb
hlt
stc
lret
add
mov
and
test
inc
mov
stc
ss
add
mov
aad
xor
jns
or
leave
inc
mov
and
jno
or
push
movb
scas
mov
adc
xor
shlb
push
ret
in
fs
xor
mov
inc
push
xchg
push
lcall
jge
dec
mov
dec
rcr
fnstenv
je
sub
aad
iret
jp
push
jbe
push
jmp
push
and
scas
jmp
ds
sub
lock
cmc
cmpps
decb
push
add
adc
push
inc
push
fimuls
lret
jecxz
mov
out
or
mov
dec
popa
imul
cmp
and
rorl
in
bound
push
pop
or
dec
xor
lock
mov
outsl
inc
pusha
sub
xorl
aaa
sbb
and
pop
cmp
jo
inc
mov
imul
xchg
out
or
add
or
add
fistps
push
mov
imull
repz
mov
add
push
jge
divl
cmp
inc
in
std
jg
lods
jge
cmp
jne
push
pop
dec
cmpsl
loop
ss
xchg
ss
push
mov
mov
stos
cld
sbb
fucomp
outsb
or
adc
jle
add
adc
loope
push
lea
lock
mov
and
inc
cmp
movl
xor
push
push
and
pusha
mov
mov
mov
insb
jo
mov
mov
or
mov
jge
adc
dec
out
sbb
in
mov
stos
mov
add
je
or
mov
or
adc
into
data16
loopne
push
and
je
imul
or
in
imul
xchg
sti
lahf
add
add
mov
or
js
test
sbb
xchg
xchg
icebp
out
incl
cmp
jbe
cmp
jbe
mov
sbb
mov
add
push
mov
dec
xor
mov
add
addr16
inc
sub
push
sbb
adc
add
push
inc
movsb
lret
mov
mov
lahf
jl
xor
rclb
sbb
xchg
jg
xor
mov
adc
rorb
pop
stc
push
cwtl
lea
inc
push
jne
arpl
xlat
rorb
cmp
or
call
clc
add
inc
push
fsts
sarl
ds
cmp
cld
pop
mov
mov
inc
xchg
cmpsb
push
sub
or
push
xchg
bound
adc
push
add
je
push
xlat
add
lahf
mov
test
test
in
pop
insl
add
or
adc
and
stc
mov
sbb
sahf
jnp
add
mov
daa
mov
clc
insb
xchg
je
loop
sub
dec
enter
test
clc
sub
and
and
jnp
cld
ds
and
iret
out
out
leave
jb
ret
cwtl
sbb
and
push
mov
mov
or
xor
sbb
add
inc
or
pop
daa
cmp
sub
fsubrs
cmpsl
ret
insb
dec
xchg
inc
ret
pop
popf
test
mov
rolb
cmc
fsubr
lea
cmc
mov
flds
lea
push
pop
fstps
and
inc
cld
orl
sbb
inc
push
or
adc
fadd
out
sarl
adc
sbb
and
push
cwtl
jl
sub
mov
cmp
sbbl
jbe
mov
imul
mov
add
or
je
gs
lret
jmp
xchg
inc
inc
mov
andl
dec
mov
lahf
jb
mov
les
mov
pop
cld
push
inc
dec
cli
inc
lea
loop
mov
lea
cld
fimull
fwait
cmp
lea
lock
xor
jle
mov
mov
rorb
dec
loopne
sub
lods
pushf
nop
or
jb
mov
cmc
je
fdivrl
mov
mov
adc
notb
jge
mov
pusha
mov
jl
inc
mov
orl
js
sti
adc
sub
cmp
push
add
adc
adc
cwtl
cmp
xchg
push
sbbl
outsb
pusha
mov
sbb
scas
rolb
dec
loopne
dec
pop
adcl
mov
movsl
xchg
dec
arpl
mov
jo
es
shl
push
sti
int3
mov
sbb
pop
cmp
jne
push
shll
mov
xchg
fstps
addr16
sbb
pop
cmp
xorl
js
jb
inc
flds
imul
pop
shlb
pop
mov
cltd
xor
mov
jo
dec
and
scas
and
mov
or
outsl
cmpsb
ret
xorl
shlb
rolb
and
jbe
inc
pop
hlt
mov
xchg
or
cmp
movl
mov
loope
jp
sub
and
cmpb
inc
add
add
add
dec
cmp
jo
add
jl
adc
sbb
adc
sub
out
insb
and
ret
insb
or
or
je
pop
mov
inc
sahf
movsb
xchg
xor
mov
push
stos
xchg
pushf
or
xchg
rcll
rorb
or
mov
iret
ret
push
mov
icebp
jp
xor
or
and
incl
fistpll
add
ja
testb
xchg
add
stos
lods
jmp
out
es
cs
sbb
push
je
add
adc
pusha
add
push
sbb
push
ret
add
pop
mov
test
test
mov
cmpb
std
xor
sub
hlt
add
sub
aaa
out
adc
mov
xor
ret
pop
lock
pop
push
push
jmp
sti
add
or
and
cmp
jge
hlt
mov
and
cmp
pop
pop
adc
xor
adc
xor
pop
js
pop
pop
jg
mov
jmp
test
hlt
sbb
mov
arpl
add
movsl
inc
or
jae
adc
sbb
inc
cmp
ljmp
push
xchg
rcrb
or
pusha
clc
dec
add
inc
sub
sti
rol
jle
or
aas
fldenv
std
inc
mov
sub
or
pop
push
mov
ret
clc
mov
cmp
mov
push
xchg
mov
pop
rclb
in
push
test
addr16
inc
add
pop
sbb
push
push
push
xchg
push
mov
pop
test
fiadds
pop
mov
mov
aad
leave
div
into
push
in
lea
push
scas
ljmp
dec
fisttpll
out
add
test
pop
cs
incl
das
nop
fimuls
cmp
je
stos
cmp
jbe
mov
xor
je
sti
mov
mov
jle
inc
test
dec
inc
cmp
jb
stos
ficoml
mov
mov
data16
enter
push
add
shlb
addb
sub
xchg
push
mov
fucomip
push
sub
dec
cmpsb
jns
sbb
pop
in
sbb
jne
js
dec
test
mov
inc
push
test
xor
add
int3
ljmp
insl
es
mov
adc
sub
lea
xor
or
add
and
adc
mov
add
cmp
adcl
mov
scas
push
mov
push
mov
in
add
insb
or
jmp
push
sbb
sbb
lods
pusha
or
mov
inc
jo
mov
sub
and
fsubrs
xchg
dec
lock
mov
mov
fmuls
inc
sub
mov
sbb
mov
imul
cmpsb
sbb
or
dec
push
mov
add
xchg
sub
push
enter
daa
or
sbb
stc
cmp
ret
ficomps
fbstp
xchg
mov
outsl
movb
jno
movsb
inc
adc
notl
add
ds
inc
inc
lods
sti
mov
iret
lods
mov
jnp
mov
jmp
sarl
sbb
or
lret
mov
popa
cmp
jne
cs
scas
jne
pop
add
adc
in
cli
push
int3
in
push
subb
lea
pop
add
pop
add
adcb
bound
out
ljmp
rorl
in
mov
ja
cld
push
mov
mov
xor
sub
xor
dec
xor
mov
push
jl
mov
xor
in
aam
sahf
pop
push
clc
adc
cmp
xchg
dec
fisttpl
xchg
stos
xor
lea
addl
pop
in
out
mov
lea
push
cwtl
jecxz
cmp
xchg
and
fmuls
add
jb
xchg
pop
mov
push
jnp
push
daa
or
or
adc
orb
lahf
sbb
mov
mulb
xlat
jmp
jmp
hlt
loop
inc
mov
push
mov
push
and
int3
mov
fiadds
mov
jne
xor
lahf
sarl
mov
testb
std
inc
cmp
mov
or
xor
push
xor
lea
add
push
in
cmp
or
jne
mov
cmp
cmp
xor
pop
mov
mov
add
mov
cmc
sti
sub
fldcw
and
add
inc
aas
out
cld
dec
pop
mov
movsl
dec
sarl
jne
mov
sahf
into
push
rcrl
pop
adc
add
mul
seto
sub
fidivs
enter
sbb
outsb
lock
push
mov
gs
js
sbb
xchg
add
lods
icebp
mov
std
jno
pop
xor
push
mov
push
dec
add
movlps
inc
or
mov
or
ja
pop
push
and
inc
xchg
rclb
andl
or
and
jmp
sub
and
lods
pop
push
ficoms
cmp
je
xchg
sbb
aam
add
push
mov
dec
adc
sbb
add
or
loopne
or
test
fstpt
mov
jl
jmp
ret
js
repz
out
pop
rorb
xchg
xor
cmpsb
insl
mov
jne
add
mov
lahf
lcall
inc
or
imul
decb
cmp
adc
push
jp
pop
or
js
jp
jg
mov
lea
orl
popf
dec
xor
dec
aas
sarb
pop
mov
int3
mov
mov
sarb
cwtl
lea
jmp
lods
outsl
testb
inc
cmp
jbe
adc
dec
push
adcl
or
jge
sub
sti
pop
push
js
push
mov
sub
jne
mov
rcr
sub
mov
add
adc
xor
imul
dec
fisttpll
scas
movsl
arpl
push
push
mov
sub
pop
cmpsb
add
pusha
add
xor
iret
les
loopne
dec
push
mov
cmp
pop
push
jecxz
orb
push
cltd
and
mov
andl
shr
jo
sub
pusha
sub
mov
repz
push
jae
dec
pop
add
add
push
sbb
movsb
cmp
add
add
xor
sbbl
movsl
les
pop
and
add
mov
adcl
mov
jo
sbb
push
mov
mov
pop
shlb
and
jo
pop
mov
and
hlt
pop
shll
dec
rorl
sbb
xor
loopne
lahf
ja
mov
ret
loopne
sar
cs
sub
push
je
test
paddb
lea
les
mov
sbb
aam
je
push
sbb
jae
inc
pop
mov
js
cmp
push
imul
dec
xchg
sbb
or
call
sbb
adcl
lret
pusha
or
ret
fwait
popa
sub
clc
fwait
fwait
or
xchg
push
cmp
and
inc
or
sub
call
mov
lods
cld
cwtl
hlt
fcoms
sub
es
xor
inc
lock
mov
xor
add
dec
and
mov
xor
and
int3
mov
add
mov
push
es
and
call
je
pop
pop
daa
xor
es
xor
mov
adc
push
push
sub
loope
mov
pop
ret
aas
or
int
or
clc
ret
inc
jp
or
lea
fiaddl
and
mov
add
jno
dec
stos
mov
dec
mov
push
pop
loop
hlt
test
cmp
es
sti
ds
loopne
pop
lret
or
mov
test
ljmp
je
mov
aam
popa
pop
inc
jmp
cmp
jbe
pop
or
inc
sbb
jns
iret
mov
dec
dec
dec
clc
jne
mov
push
test
xor
xchg
std
cmp
dec
or
sub
lea
add
pop
stos
es
test
xchg
dec
pusha
mov
xchg
mov
hlt
push
and
hlt
jns
or
inc
pop
dec
or
add
lock
pop
mov
fadd
push
pusha
fidivrl
cmp
jae
cld
and
sbb
shr
scas
fxtract
jne
push
js
fildl
cld
loopne
fnstenv
mov
and
xor
add
mov
lret
inc
or
add
xlat
cld
clc
pushl
push
dec
jp
cmp
add
sbb
xchg
sub
inc
adc
xchg
xchg
jbe
or
xor
sar
je
mov
xchg
pop
add
cmp
push
mov
jmp
hlt
jo
iret
je
mov
sub
or
add
mov
mov
lea
mov
mov
fidivl
xchg
adc
orb
inc
inc
adc
xor
negb
adc
mov
xor
sbb
daa
add
add
pushf
lea
or
testb
mov
mov
or
sahf
mov
pop
movsb
imul
jne
cmp
cmp
xlat
pop
clc
jne
push
xor
dec
push
dec
hlt
icebp
negb
shlb
lea
icebp
xchg
cmp
lret
adc
xor
loop
inc
sbb
or
jmp
add
test
stc
lods
inc
add
das
push
sahf
xor
or
testb
out
jnp
fstpt
stos
icebp
aam
mov
mov
fs
add
adc
rcrb
fs
scas
lret
cltd
bound
add
out
mov
or
inc
adc
inc
pop
leave
das
push
movzbl
test
loopne
mov
loope
push
or
jl
inc
loope
inc
data16
mov
cmp
mov
pop
cmp
mov
cmp
mov
push
lea
or
pop
push
inc
adc
inc
scas
xchg
fldcw
adc
mov
push
push
push
rorb
push
inc
and
mov
int
mov
jno
adc
ss
xor
mov
push
push
xor
pop
call
push
decl
lea
mov
mov
iret
add
sub
add
lret
outsb
or
mov
pop
jne
pop
clc
pop
mov
fistl
clc
dec
addb
add
shll
add
mov
adc
mov
jle
inc
sbb
push
sbb
adc
push
repz
popa
data16
jns
clc
andl
dec
mov
and
or
inc
test
cmpsl
mov
mov
inc
call
test
pop
mov
sahf
add
sbb
call
cmpb
push
mov
pop
mov
jg
xchg
addb
jl
jmp
and
aam
push
orb
mov
mov
sbb
sbb
and
or
push
sub
xchg
push
je
adc
mov
inc
lock
sub
insb
icebp
add
add
loope
hlt
mov
and
cmpsl
ja
int3
inc
fidivs
xchg
enter
outsl
movsb
into
outsl
je
xchg
pop
xchg
rcrl
popf
in
fisubs
dec
icebp
or
mov
jb
movsl
cmp
mov
cmp
pop
mov
add
leave
aas
push
arpl
inc
jle,pn
mov
insl
test
jb
xchg
inc
addl
cmp
adc
inc
or
mov
jl
and
mov
cli
push
mov
add
push
mov
sbb
je
rorb
in
sub
mov
aaa
push
test
and
xor
cmp
sti
in
mov
sahf
mov
add
mov
rolb
and
rcrb
and
daa
in
add
adc
pop
and
inc
mov
jbe
push
sub
out
add
orl
or
mov
clc
bound
jne
fstpl
lds
jmp
xchg
gs
push
js
daa
pop
repnz
fistps
out
push
mov
cmpsb
loopne
lea
leave
pusha
cmp
mov
jp
cmp
adc
xor
inc
test
jge
mov
xor
xor
pop
inc
push
jns
sub
ss
iret
cmp
adc
jne
in
cmp
jns
add
jmp
clc
sahf
push
mov
mov
repz
and
je
mov
movsb
lock
jl
ljmp
push
out
popl
or
xor
clc
add
clc
jno
mov
pop
mov
popa
add
add
popf
pusha
rorl
repz
sbb
lds
sahf
or
sbbl
sub
je
sti
icebp
dec
xchg
inc
ret
popf
or
lcall
pop
xor
lea
es
or
adc
cmp
push
fadds
jbe
test
or
out
sub
jle
test
jne
dec
fcompl
push
pushl
jo
xchg
in
xchg
and
cltd
shrb
xor
add
jo
cmpsl
mov
bound
cltd
shlb
test
test
mov
and
rorl
call
mov
dec
fimull
cmp
int3
in
test
cs
test
pop
mov
in
push
and
mov
adc
or
add
lds
push
xchg
pop
sti
or
mov
cmp
jb
sbb
mov
roll
int
dec
in
jo
mov
sarl
cmpsl
je
dec
xlat
mov
inc
jmp
cmp
add
add
insb
loope
dec
andl
pop
dec
push
jecxz
sub
push
add
sub
lods
add
xor
adc
push
lods
jle
sbbl
mov
leave
and
jns
das
push
lds
add
stos
dec
dec
test
ja
mov
shll
and
imul
test
sbb
xchg
rclb
addr16
aas
cmp
jmp
movb
mov
ret
jae
sub
loopne
pop
and
int3
adc
ljmp
dec
mov
cmc
sub
das
test
mov
cmc
push
inc
mov
nop
add
inc
test
mov
dec
dec
sbb
inc
inc
mov
push
arpl
icebp
xor
add
ss
or
sti
enter
mull
sbb
nop
jb
movsl
dec
lock
xor
fsubp
xchg
cmp
lea
sub
adc
int
cltd
push
std
xchg
push
insb
int3
add
fmull
addb
pusha
sti
testb
leave
cld
jb,pn
cmp
adc
cld
pop
mov
enter
add
lcall
fildl
sbb
pop
add
add
xor
xor
and
fimuls
rolb
push
push
add
lds
movsl
add
xchg
add
sub
sbb
jbe
pop
loopne
push
jecxz
inc
cmpl
sbb
adc
wrmsr
or
cmp
loope
ljmp
call
sbb
stos
lods
cmp
and
cwtl
pop
or
adcb
pushf
fidivrs
dec
sub
add
hlt
stos
lds
add
push
rcrb
int
pop
pushl
jmp
outsb
es
sub
jle
out
push
lock
adc
hlt
push
push
push
fcoml
mov
or
or
testb
push
out
push
push
mov
aas
bnd
mov
adc
fistpl
add
jb
push
jae
lea
push
sub
addb
add
js
cwtl
stos
out
xor
xchg
clc
fidivs
push
sbb
pushf
nop
or
or
adc
rolb
or
ficompl
sbb
lock
and
test
push
sar
cmp
mov
cmp
jae
inc
jmp
push
or
mov
aad
fsubrl
mov
jmp
pop
movsb
pusha
test
inc
xchg
add
cld
pop
dec
fcom
sub
add
fisttpll
add
addl
or
outsl
mov
add
out
sbb
test
adc
sti
jno
push
push
dec
iret
call
mov
test
dec
mov
pop
pop
cmp
or
mov
push
or
mov
add
lds
push
stos
xor
pop
testb
ss
jne
sbb
adc
pop
fists
pop
leave
push
pop
mov
outsb
inc
sbb
nop
or
or
into
adc
std
arpl
jb
adc
sbb
pop
inc
fmuls
or
xchg
inc
xchg
or
fcoml
sbb
or
jbe
decl
into
add
popf
inc
pop
cld
je
mov
rcr
hlt
jb
adc
ja
cmpb
push
push
or
inc
add
cmpsb
or
xor
sbb
mov
repz
lods
icebp
lret
inc
je
ds
fadds
cli
push
adc
adc
data16
jecxz
dec
scas
cmp
sub
push
inc
or
add
mov
jbe
lods
mov
xor
sti
testl
mov
jmp
mov
fs
outsb
adc
shlb
lea
cli
ja
cmpb
or
out
ret
push
xor
inc
pop
loope
icebp
loopne
mov
lea
dec
jbe
or
test
pop
cmpsl
or
push
addr16
add
inc
inc
cmpsb
imul
sbb
push
movb
repnz
push
or
cmp
mov
in
xor
call
or
adc
xor
pop
xor
sbb
lret
outsl
xchg
push
ds
push
dec
add
out
inc
stos
andl
lods
dec
or
sub
xor
mov
lcall
loop
mov
inc
mov
xchg
mov
insl
mov
mov
jne
mov
lock
push
mov
dec
pop
pop
inc
add
mov
mov
sub
cmp
ja
je
clc
push
popf
je
xor
xlat
dec
and
rol
loop
dec
cmp
lea
jl
mov
mov
sar
les
mov
ja
imul
push
ret
jne
jmp
daa
pop
inc
jo
cwtl
clc
dec
arpl
cmp
xlat
dec
in
dec
add
dec
in
sub
popa
mov
hlt
punpcklbw
or
dec
or
xor
shrl
jbe
pop
and
pop
push
lret
push
adc
mov
imul
push
add
mov
jg
dec
shlb
test
rorl
les
and
mov
cmpl
add
adc
cmp
mov
push
mov
les
jno
dec
enter
pop
push
mov
or
outsb
jns
loopne
xchg
rcrb
inc
das
sub
jbe
xchg
sub
into
and
inc
inc
inc
hlt
lods
in
push
jb
pop
inc
fildl
mov
cmp
lock
or
incb
inc
lock
dec
pop
cmpsb
push
or
add
adc
or
outsl
orl
je
mov
adc
or
popf
xor
mov
sub
jne
loopne
neg
cs
add
hlt
fucomip
je
scas
jge
xor
push
jg
mov
or
aam
push
cmpb
or
push
js
jne
and
stos
nop
sub
adc
adc
inc
push
add
sbb
outsl
lret
inc
xor
test
mov
hlt
jle
arpl
test
ret
sbb
pushf
jno
jns
and
add
inc
inc
aaa
adc
adc
dec
pop
idiv
das
orb
pushf
cmp
pop
mov
xchg
in
dec
shll
outsb
sbb
push
or
mov
dec
int
repnz
daa
arpl
sbb
gs
add
daa
arpl
xchg
movsb
add
cmp
mov
jo
aas
addl
out
xchg
adc
or
sbb
mov
sbb
loope
call
cmp
lds
inc
adc
pop
enter
xor
add
push
out
or
cmpl
enter
inc
test
iret
inc
adc
je
stc
or
sub
xchg
inc
push
push
push
test
ljmp
dec
and
push
call
sti
stos
sub
outsl
popa
xor
push
xchg
add
scas
sbb
or
mov
inc
in
xor
push
push
push
ja
xor
mov
push
push
scas
jcxz
fdivp
cli
mov
mov
mov
push
js
adc
addr16
push
push
sub
xor
scas
loope
pop
pop
cmp
ret
gs
sbb
add
pop
pop
jg
aaa
subb
mov
fldl
insb
mov
jp
dec
push
bound
mov
daa
mov
xor
stos
jo
arpl
mov
jmp
push
js
jnp
out
test
dec
lock
in
dec
or
cmp
jmp
or
push
xor
dec
sahf
xor
jbe
scas
idiv
leave
cmc
adc
push
inc
adc
gs
push
mov
shlb
sti
stos
jbe
sbb
xchg
hlt
call
cmp
lcall
stc
pop
call
inc
push
bound
sbb
add
stos
mov
dec
pop
mov
add
mov
inc
and
jmp
mov
test
push
lret
add
enter
es
les
lock
dec
mov
add
sarb
popa
push
pusha
aam
mov
adc
aas
mov
add
mov
jne
inc
xor
dec
and
ds
xor
int3
sbb
mov
pop
rcll
aaa
pop
js
push
jns
mov
pop
dec
jne
and
in
mov
enter
or
rclb
pusha
nop
inc
inc
jae
jge
popf
rolb
sbb
push
daa
add
sub
nop
outsb
lret
repnz
je
cmpl
sbb
lcall
sbb
negb
xchg
sub
pop
test
iret
stos
xor
jno
jno
inc
pop
and
dec
push
adc
aas
cmpb
push
push
and
cs
add
shl
sbb
adc
testb
or
sbb
mov
call
in
xor
and
jnp
mov
or
sub
pop
add
in
arpl
sar
lahf
pop
pop
sub
push
or
cmp
or
or
xor
xor
and
xor
sbb
cmpsl
add
std
adc
pop
adc
or
cmp
lods
cmpb
mov
lock
test
add
or
push
test
cmp
pop
mov
arpl
adc
flds
sub
pop
int3
mov
xchg
cli
and
test
mov
push
mov
lods
dec
pop
aaa
mov
or
fldt
jns
mov
jns
shrb
add
insb
popf
loopne
nop
push
or
push
lcall
movb
pop
in
das
js
negl
cmp
sub
and
mov
iret
jo
sub
pop
enter
int
movsl
push
aad
negl
ret
sub
int
add
int
mov
mov
sub
mov
lar
sbb
fnstsw
arpl
or
into
cld
rol
or
in
jg
out
mov
aad
sbb
push
push
sbb
xor
add
icebp
sub
push
fldcw
pop
ret
push
add
daa
cmp
loop
and
mov
sahf
popf
inc
inc
inc
ret
sbbb
push
jecxz
xchg
insb
or
loope
ljmp
cwtl
in
cmpsb
test
sti
sti
pop
or
add
daa
test
or
dec
aaa
loopne
sbb
cmpsl
andb
dec
orb
adc
sbb
pop
test
jmp
call
es
lcall
sbb
pop
call
cmp
pushf
ljmp
sarb
fidivrl
sub
fdivrl
shrb
mov
pop
add
and
inc
or
push
mov
add
out
sbb
pop
in
dec
pop
outsl
daa
mov
pop
jne
xor
push
in
mov
xchg
add
cmp
or
push
jbe
pop
mov
pop
ficompl
or
ret
inc
push
xchg
pop
mov
addl
pusha
sub
aas
mov
jmp
sub
cmp
insl
jne
sbb
loopne
or
or
push
xchg
in
rorb
in
xchg
pop
ret
pop
push
jb
mov
std
int
ss
mov
cli
add
mov
ret
hlt
jne
add
mov
jge
popf
lods
jmp
and
lock
insl
pop
sbb
xchg
ficoms
sbb
or
mov
fsubl
pop
add
or
add
mov
sbb
sbb
stos
into
leave
add
pop
fs
push
or
add
sbb
std
fsubrl
xchg
xchg
sbb
sub
addb
lret
in
mov
adc
test
xor
in
test
insl
into
je
nop
cmc
and
mov
notb
call
push
and
in
mov
pusha
push
push
lds
dec
sbb
addb
test
mov
fidivl
adc
rcll
sbbl
es
in
roll
lret
ljmp
repz
mov
mov
inc
mov
or
daa
push
or
enter
fidivl
mov
clc
rolb
cli
sahf
shrb
loope
sub
fdivrs
adc
cmp
dec
lock
sub
inc
je
add
imul
ret
mov
jg
lock
fiaddl
mov
lea
aas
pop
mov
fs
inc
or
push
test
daa
pusha
imulb
dec
rclb
je
bound
jle
sub
roll
add
inc
add
subb
cmp
jmp
or
cs
mov
pop
jl
add
xchg
sub
cmp
shll
xchg
push
aam
ja
cwtl
pop
test
in
jle
popa
inc
mov
call
je
xchg
inc
or
cmp
adc
sub
sbb
in
jno
roll
cmp
pusha
lds
sti
es
cmp
or
ljmp
stc
clc
xor
cwtl
nop
mov
and
or
incl
adc
iret
cmp
mov
push
repz
jae
sbb
lea
arpl
cmp
mov
nop
add
adc
sub
add
jo
push
aaa
or
and
test
sbbb
push
push
or
adc
popf
outsb
movsl
loopne
or
mov
mov
insl
pop
mov
mov
push
adc
jae
js
lahf
sbb
push
push
jbe
adc
xchg
out
add
cmp
and
inc
fdiv
addr16
jo
jne
xchg
or
xchg
cmp
test
and
sbb
jecxz
jecxz
mov
bound
push
testl
push
arpl
adc
push
jmp
inc
jnp
insl
jnp
cld
add
js
je
cmp
test
dec
xchg
or
test
jo
push
sti
loopne
shll
adc
jmp
jb
add
lahf
mov
pop
test
aam
repz
lret
fdiv
inc
shll
popf
js
sbb
xchg
testb
outsl
adc
es
push
pop
bound
xchg
jg
pop
out
add
lcall
enter
dec
mov
ds
sbb
sbb
jmp
sti
pop
pop
sub
es
mov
sub
into
mov
insb
mov
fcompl
push
push
add
jmp
xorb
outsl
stc
nop
imul
rclb
rcll
dec
mov
mov
fldt
and
js
adcl
push
stc
scas
mov
mov
sbb
in
jb
add
sbb
and
sub
sub
xor
push
cmp
or
movsb
jb
or
daa
xchg
xchg
lret
dec
push
fs
push
dec
sub
push
ja
jecxz
pop
cli
add
pop
push
dec
adc
movb
lahf
int3
and
int3
rcr
mov
adc
mov
dec
mov
or
sahf
sbb
mov
aam
push
jl
mov
movb
sbb
sahf
loopne
popa
fadds
xchg
cs
sbbb
add
xchg
in
cmp
pop
or
iret
sbb
mov
jmp
fadd
into
orl
and
in
or
movsl
lcall
mov
lcall
xorb
mov
jg
push
cmp
nop
fs
inc
inc
cmp
nop
inc
cmp
xor
nop
inc
push
xor
nop
inc
push
cmp
sbb
push
cmp
adc
pop
js
mov
adc
push
subb
rorl
test
loopew
incb
jecxz
mov
fldl
loope
adc
fstpt
clc
orl
arpl
jmp
into
adc
les
iret
mov
fs
sub
ljmp
inc
and
mov
lar
dec
shlb
jne
movsb
or
sbb
push
cld
pop
sub
mov
andl
arpl
xor
pop
jmp
dec
and
shrd
add
push
ss
or
cmp
dec
push
sub
or
fistl
in
dec
mov
dec
lock
imul
adc
pushl
pop
loopne
cmpsb
pop
push
pushl
cmp
roll
xor
out
pop
push
lock
shlb
jg
outsb
data16
add
dec
and
inc
or
jmp
lea
adc
imul
adc
jo
shll
rclb
jl
mov
stos
push
ljmp
mov
movsb
inc
inc
mov
in
add
add
push
xchg
or
inc
add
jns
mov
inc
in
in
sub
push
lock
loopne
push
xchg
xchg
push
add
lret
mov
or
call
sub
push
lret
push
push
shll
push
cwtl
fwait
and
pop
cmp
insb
sbb
push
or
or
lock
dec
out
push
mov
sbb
mov
mov
imul
add
ret
nop
jo
cmp
mov
jmp
add
add
mov
xchg
pop
mov
lods
fwait
mov
or
push
pop
push
and
push
xor
sub
loope
pop
outsb
psubsw
pushf
sub
ret
dec
lds
adc
mov
xchg
add
mov
add
out
inc
mov
pop
test
cmp
sbb
daa
das
jbe
jecxz
and
insl
addb
add
imul
lret
arpl
and
mov
sub
cmp
pop
dec
jns
add
xor
add
xor
xchg
mov
insb
mov
xchg
cld
xorb
in
adc
stc
stc
test
mov
mov
adc
mov
fiadds
pop
dec
push
jne
pop
in
sti
movb
jge
sahf
mov
orl
sub
pop
or
lods
adc
das
dec
sbbb
rorl
scas
mov
adc
addr16
jne
cmp
jae
push
add
add
jmp
mov
pop
xchg
mov
cmpsl
push
mov
adc
dec
adc
sub
sbb
mov
pop
jle
cmp
pop
ljmp
push
xchg
sbb
pop
sub
sbb
add
repz
test
aam
push
insb
add
dec
mov
and
adc
cmpsl
add
sbb
inc
pop
pop
jb
and
dec
inc
and
outsb
xchg
ret
or
xchg
lret
xor
and
xor
or
jmp
jmp
addl
popa
and
inc
or
and
mov
imul
cmp
imul
push
or
sub
jl
inc
push
test
mov
aas
inc
push
mov
incl
lock
test
mov
shl
hlt
pusha
push
cld
dec
or
movsb
lcall
push
cld
arpl
inc
xchg
or
mov
xor
inc
movsb
popa
shll
lds
psubsw
mov
sbb
xor
cmp
out
ret
rcrl
notl
mov
rcrb
mov
sbb
push
es
arpl
ja
dec
cmpb
lea
cltd
jbe
jp
addl
mov
push
mov
leave
repnz
push
pushf
or
pop
mov
sub
mov
cmp
and
sbb
mov
lds
ret
xor
mov
jl
scas
fcoml
pop
out
sbb
push
push
orb
inc
inc
movsl
pop
test
push
loop
pusha
insb
in
mov
imul
xchg
push
rclb
sti
mov
mov
cmpb
ds
push
xor
hlt
mov
xchg
sbb
fs
cmp
xchg
push
xchg
jmp
ja
lahf
test
insl
psubsb
add
cmp
int3
or
in
mov
call
xchg
xor
leave
dec
pop
dec
in
adc
das
and
pop
mov
pop
and
mov
sti
add
mov
test
adc
sti
mov
mov
rcll
xchg
sub
insb
pushf
sbb
in
mov
movb
mov
pop
jmp
jo
popa
xor
pop
es
mov
inc
mov
add
xor
rorl
or
popf
jno
adc
pop
orl
push
sub
and
cmp
js
loopne
sub
inc
and
inc
and
movsb
dec
lock
dec
and
inc
xor
loope
sub
leave
jg
nop
dec
pusha
adc
cmp
mov
and
ss
cmpsl
inc
inc
repz
cmpl
addl
enter
mov
rol
cmp
push
and
mov
addr16
inc
test
nop
in
fdivp
or
sub
mov
cmc
lods
inc
icebp
shll
das
popl
cmc
add
jl
inc
clc
repz
or
lods
dec
ret
aaa
lock
bound
mov
mov
shrb
add
add
testb
inc
imul
cmc
pop
cmp
push
sub
or
adc
cwtl
movsl
flds
enter
add
jg
mov
push
sbb
and
lcall
or
push
pop
clc
xlat
int
cltd
or
lock
test
xchg
push
pop
lock
pop
hlt
std
orl
notb
mov
out
cltd
and
in
or
push
dec
add
add
inc
push
inc
test
insb
xor
mov
mov
mov
inc
pop
enter
rolb
mov
test
pop
lock
rcl
mov
push
icebp
sbb
xorb
adc
jae
jmp
jne
xorl
ds
sbb
push
lods
insl
xor
addl
movsl
and
movsb
add
sbb
lea
andb
mov
dec
jnp
mov
push
fimuls
into
and
dec
add
clc
fwait
and
call
add
mov
sbb
std
sbb
mov
repz
mov
decl
mov
ss
sbb
add
adc
inc
and
aas
pop
or
push
aas
xlat
fiadds
add
mov
push
sahf
or
jne
hlt
je
mov
jmp
jnp
push
movsl
outsb
imul
mov
add
insb
sub
xor
push
lahf
icebp
xor
push
mov
inc
arpl
mov
fs
popf
lahf
stc
sti
int
adc
inc
push
mov
xlat
imul
mov
sbb
mov
mov
cmp
lods
divb
rorl
add
cs
bound
out
add
clc
aad
add
sbb
adc
push
addr16
movl
mov
cwtl
aam
pushf
popf
sub
xchg
incb
pop
or
push
movsb
loopne
mov
sahf
test
and
rcr
push
dec
pop
fsts
rolb
loop
imulb
popa
inc
cmp
mov
add
lea
add
xor
push
das
in
pop
mov
cld
add
add
jl
sbb
pop
shl
adc
mov
fists
in
mov
add
push
loop
addr16
adc
mov
pop
pop
addr16
dec
sbb
jg
pop
sbb
or
sub
lea
fidivrl
fidivrs
mov
mov
sbbl
jmp
mov
ret
add
lcall
rorb
push
dec
jne
rorl
xor
push
dec
lcall
int
xchg
out
and
add
dec
aaa
inc
lahf
or
ss
test
jae
inc
mull
sbbb
push
jmp
cmp
inc
push
sub
dec
lcall
inc
sbb
xor
jecxz
dec
or
dec
mov
std
rcrl
cmp
mov
mov
pop
push
lcall
in
pop
clc
repz
xchg
mov
add
jmp
cmp
sbb
xchg
or
sub
dec
adc
add
rclb
sub
adc
movsl
roll
iret
fcoms
adc
push
in
dec
inc
sub
xor
aaa
inc
xchg
inc
fmull
inc
or
inc
mov
mov
or
add
pop
adc
in
lcall
inc
push
nop
dec
or
dec
or
insb
push
or
in
mov
pusha
sub
or
cld
sub
mov
pop
adc
sub
adc
cs
xchg
push
jo
pop
into
xor
in
and
mov
rolb
loopne
sbbl
inc
add
inc
cmc
and
iret
or
push
dec
inc
pop
and
js
fdivl
xchg
jo
add
push
and
and
subl
dec
and
fs
cmp
dec
sub
imul
imul
pop
lret
xchg
add
repnz
jnp
pop
pop
push
xor
sub
js
imul
adc
xchg
test
lods
fs
and
shrb
and
sbb
push
sub
popf
sbb
inc
movb
mov
sub
xchg
dec
mov
push
xchg
add
dec
push
or
out
outsb
decl
pop
add
jae
jmp
cmp
jae
add
cmp
xor
pop
jnp
stos
add
inc
in
js
inc
lret
andl
andl
dec
jns
rorl
add
sub
ffreep
or
mov
cmpb
stos
or
je
jmp
xor
adc
dec
insb
jns
or
negb
test
sbb
pop
and
in
arpl
adc
adc
jae
popa
cmp
push
call
jo
lret
sbb
movsl
sbb
mov
and
adc
pusha
adc
xor
xor
dec
mov
push
imul
mov
stos
pop
xor
or
jne
jno
outsb
gs
inc
dec
lcall
ds
mov
cmp
sub
add
xor
jge
rol
pop
clc
xor
mov
test
shlb
enter
sub
aad
and
int3
sub
dec
shlb
jmp
mov
mov
rol
inc
or
mov
out
das
insl
sbb
dec
ret
or
outsl
in
icebp
inc
xor
and
pop
imul
xor
add
xor
sbb
sub
pop
decl
inc
cmp
inc
mov
loopne
add
mov
pop
fs
ficoms
lea
imull
ljmp
rcr
inc
sti
push
cmpb
add
sbb
movsb
daa
ljmp
push
enter
lcall
and
lods
mov
adc
xchg
inc
fdivrl
xchg
jne
mov
pop
out
jnp
mov
inc
jecxz
sub
or
mov
push
jp
dec
aad
add
jmp
popl
add
lret
mov
dec
rolb
jae
lea
and
lret
push
pop
jle
sbb
push
jo
or
sbb
jmp
push
jb
jbe
js
enter
shrb
mov
mov
out
pushf
adc
sbb
dec
pop
aam
test
scas
popa
and
cmp
push
jle
add
clc
add
repz
sub
or
pop
jne
insb
xor
adc
push
bound
push
pushl
inc
push
scas
hlt
mov
add
mov
daa
into
mov
inc
ds
dec
mov
and
mov
add
aas
aaa
add
imul
adc
ret
dec
inc
push
inc
test
repz
mov
repnz
fnstcw
inc
movsb
push
push
sbb
push
ret
bound
add
stos
add
pusha
pop
jmp
sti
stc
hlt
add
movsb
in
cwtl
in
test
xchg
push
xchg
cwtl
or
pop
or
bound
xchg
cmp
mov
testb
je
andb
lds
add
xor
and
jecxz
outsb
inc
fmuls
addb
xchg
inc
in
push
loopne
pop
mov
imul
adc
divb
xor
pop
jne
mov
out
jb
jb
inc
cld
js
out
sbb
pop
lock
mov
insb
in
popa
adc
sbb
pop
add
ret
outsl
fiadds
add
push
push
popf
xor
sbb
and
fs
sbb
mov
cmp
cltd
sbb
mov
mov
leave
xor
cmpl
les
mov
or
rol
cli
icebp
lea
pop
or
xor
mov
mov
sub
je
stos
rcll
dec
call
subb
cmp
xchg
lea
cmp
pop
push
push
mov
ds
rol
xor
add
or
popa
movsb
jecxz
and
jns
inc
sbb
xchg
adcb
push
add
lahf
repnz
pop
lea
test
ret
push
sbb
jb
inc
lock
or
cwtl
inc
pop
jo
jmp
xor
inc
fdivl
mov
mov
add
sub
adcl
fistl
call
inc
cli
adc
ja
mov
imul
inc
inc
xlat
lods
add
dec
push
push
add
or
movsl
testb
daa
adc
mov
cs
and
or
sbb
mov
add
in
inc
sbb
adc
dec
sub
add
or
lods
and
mov
mov
popa
jns
or
lea
imul
int
icebp
xchg
rolb
add
inc
cmpsl
and
cmp
ret
cmpl
les
dec
or
outsb
and
sahf
pop
shrl
mov
std
push
sbb
fsubr
ss
arpl
or
sbb
mov
adc
popf
push
shrb
es
test
call
xchg
dec
fisubrs
div
xor
and
and
in
es
sbb
adc
xor
repnz
sbb
add
cs
push
jl
push
sbb
es
sub
lret
or
pop
leave
push
repnz
lret
fiadds
mov
xor
mov
push
cmp
cmpb
cwtl
or
lea
popa
mov
push
dec
push
arpl
jle
add
mov
cmp
sbb
sbb
pop
inc
sbb
fnstcw
jo
pop
adc
sbb
les
push
sub
mov
dec
sub
push
inc
arpl
or
push
sbb
test
mov
lock
jbe
adc
fcompl
mov
aaa
cmc
jns
mov
outsl
and
orl
inc
xor
iret
sbb
mov
fadd
rcrb
dec
jae
outsb
cmc
add
sub
xchg
repz
nop
sub
jnp
adc
xchg
mov
inc
and
xor
add
inc
outsb
inc
fiaddl
push
or
or
cmpsl
add
cwtl
dec
jl
jg
add
movsl
xchg
jge
mov
dec
js
ss
add
push
loope
rcr
insb
je
lds
add
fwait
xchg
mov
mov
sbb
adc
rcrl
int
in
pusha
popa
fs
nop
pop
cwtl
mov
test
jmp
sbb
les
test
mov
mov
xchg
movsb
mov
fmul
cmp
ss
sti
mov
dec
push
inc
mov
stc
test
pinsrw
and
popa
add
sbb
and
popf
pop
mov
mov
jo
pushf
mov
stos
push
xchg
sub
fstps
rclb
mov
xor
add
adc
push
mov
push
enter
ss
sbb
mov
pop
lcall
pop
push
jbe
adc
inc
enter
mov
or
or
add
addb
or
call
or
push
dec
push
nop
sub
pop
or
shrb
and
cmpsl
rorb
mov
pop
xor
pop
sahf
dec
push
push
je
inc
push
rol
xchg
rclb
sub
pushf
adc
fisubrs
int3
cltd
insl
loopne
enter
call
sbb
pusha
inc
lock
jae
int
inc
loope
mov
xor
iret
in
nop
push
cwtl
insl
enter
ror
push
mov
dec
push
mov
jns
push
inc
aam
sbb
mov
addr16
sbb
scas
pusha
sbb
sbb
and
jo
jge
jo
lahf
push
pusha
pushl
adc
or
lods
loopne
and
and
stc
pop
cwtl
adc
subb
sahf
out
mov
and
shlb
add
ret
fs
sub
ss
or
and
cmpsb
cmpl
lods
ficompl
and
insb
inc
es
scas
dec
pusha
pop
push
in
js
adcb
dec
iret
sbb
cmp
adc
dec
and
push
and
xchg
add
pop
inc
pop
mov
jmp
and
inc
jno
jecxz
dec
leave
test
sbb
lods
or
adc
sbb
stos
add
movsb
cwtl
enter
cmp
push
inc
and
xor
cmp
inc
outsl
push
xor
andl
jmp
cmpsl
add
sbb
mov
xor
sub
pop
dec
pop
sbb
cmp
inc
mov
insl
xor
andl
jne
daa
push
loop
sub
in
xchg
add
in
push
andb
dec
push
rol
mov
stos
adc
enter
and
sbb
push
mov
pusha
sti
sbb
add
out
or
cmp
jmp
jns
or
or
xor
xchg
es
xor
push
or
add
dec
lds
pusha
sub
sbb
andl
dec
int
pop
aas
push
aas
sub
repz
shll
xchg
sub
mov
adc
sbb
shll
pushf
sub
and
sahf
inc
adc
cmp
add
xor
sbb
hlt
daa
lea
repnz
dec
das
xchg
inc
mov
add
loope
sub
int3
xchg
and
je
daa
sub
stc
shrl
add
add
sub
push
mov
dec
jno
cmp
fwait
and
out
jno
out
xor
leave
shll
dec
or
ds
xchg
dec
leave
push
sbb
xchg
loopne
inc
mov
out
shll
add
pusha
sbb
adc
and
xor
and
push
jns
push
and
inc
pop
shlb
mov
pop
jmp
push
xor
popf
inc
out
es
jo
outsb
lret
sbbl
sti
mov
scas
fmuls
pop
mov
clc
es
adc
mov
adc
dec
fwait
cltd
stos
or
cmp
cmp
mov
int3
sub
mov
push
in
test
test
mov
sbb
add
cmc
mov
fs
xchg
add
xor
loope
and
pop
mov
rcrb
fs
adc
lds
les
pop
xor
and
push
sbb
push
enter
xchg
mov
push
fsubs
addr16
cs
cmc
pushf
cs
add
push
jo
cmpsb
les
adc
enter
data16
fmuls
xchg
rcrl
mov
xchg
mov
jns
jo
xchg
andb
sub
shll
scas
ljmp
mov
add
mov
shrl
inc
repz
cmp
je
test
or
call
or
lods
mov
vpmacswd
lea
xor
pop
xchg
stos
jae
mov
inc
push
jns
nop
xor
and
nop
out
inc
js
inc
inc
aam
xchg
cmp
inc
in
test
cmp
sbb
pop
dec
adc
add
dec
add
push
mov
cltd
xchg
mov
xor
nop
add
test
sbb
test
aad
push
adc
stc
inc
jo
push
add
or
add
adc
les
adc
jnp
inc
dec
cmp
inc
test
push
or
xchg
push
iret
xor
push
lods
mov
test
es
lods
mov
mov
and
mov
inc
cmp
ret
jne
and
inc
jo
ret
aas
aaa
addl
cmp
add
pop
jle
and
pushl
aaa
pushl
orl
dec
call
mov
push
jns
add
dec
cmpsl
add
in
mov
pushf
push
aam
sbb
dec
sub
das
push
mov
inc
mov
jnp
orl
jmp
adc
add
sub
xor
cmp
int3
xchg
mov
and
mov
shlb
mov
adc
addr16
xchg
or
or
cwtl
loop
mov
sbb
sbb
mov
jg
and
arpl
dec
or
into
dec
popa
shrl
or
push
cmpsl
push
jae
test
fisttps
imul
pushl
pusha
xchg
sbb
add
imul
inc
add
and
fldenv
lods
test
adc
or
ret
sbb
inc
aaa
pushf
test
adc
out
add
adc
sbb
imul
out
push
add
fs
test
rorl
pop
loope
push
hlt
or
pop
or
roll
in
loopne
sbb
pop
xchg
enter
fcompl
xchg
mov
sbb
enter
subl
sbb
cs
syscall
push
sbb
sub
mov
sahf
jnp
cmp
or
cmpsl
jecxz
mov
rcrb
fsubr
add
or
fdivs
outsl
inc
sub
orb
xor
jmp
mov
insb
dec
sub
xor
or
cmp
call
sub
push
bound
mov
xchg
mov
jmp
inc
xor
xorb
movsl
ja
mov
jnp
aad
and
lock
add
push
xor
js
xchg
lret
mov
inc
inc
sub
xchg
xchg
push
pop
lds
jecxz
aad
xor
mov
enter
popa
jb
add
push
bound
inc
xor
popf
jp
cltd
sub
testl
add
ret
leave
xor
in
bound
test
pop
sub
and
and
aaa
mov
cmp
std
cmp
push
loopne
mov
call
sub
add
adc
cmp
fdivrs
cmpsl
bound
lods
cmp
xchg
arpl
icebp
add
push
fmull
jp
add
cwtl
sbb
jmp
jmp
sbbl
sbb
hlt
xor
inc
push
out
xchg
stos
call
and
dec
push
push
and
add
cmp
sbb
xor
imul
aaa
inc
dec
push
push
adc
outsl
cld
fiadds
das
sbb
mov
adc
sbb
test
xor
dec
pop
jnp
dec
xor
pop
or
xchg
pop
dec
add
mov
add
pop
lods
int
flds
lret
movsl
push
cmp
pop
push
bound
xor
xor
jl
bound
sbb
rcll
fnsave
lret
xchg
sub
xor
leave
cmp
in
push
sahf
jne
scas
dec
push
jmp
into
xor
xor
incl
mov
sbb
xor
add
push
pop
int3
rorl
mov
cmp
push
popfw
inc
mov
jb
and
movsl
and
jns
cmp
cmp
mov
pop
outsb
add
mov
adc
stos
mov
imul
or
lret
cmp
dec
push
sbb
dec
pop
inc
jmp
or
jp
or
stos
cmp
or
push
mov
cmpsl
or
mov
dec
or
mov
fwait
jae
ret
lcall
jbe
fdivs
adc
sbb
dec
dec
xchg
mov
xorl
rcrl
dec
test
fs
fwait
lds
dec
stc
mov
inc
push
rol
or
jno
or
mov
xor
mov
adc
xor
push
scas
dec
push
push
sbb
mov
push
jecxz
je
movsl
scas
test
jns
jle
or
mov
std
test
int3
and
in
push
data16
aam
mov
push
test
push
mov
loope
cs
outsb
rorl
test
lcall
sub
cld
rorl
and
add
mov
dec
sbb
dec
and
std
mov
pop
inc
icebp
push
lea
jo
dec
adc
aad
jg
mov
or
lret
mov
sub
cmp
inc
xchg
inc
mov
not
push
xor
fs
outsb
test
scas
and
sbb
enter
rcll
mov
push
jae
and
dec
xchg
pop
in
aam
enter
dec
adc
jle
dec
inc
push
test
shrl
jae
sbb
mov
aaa
cld
call
cmpb
das
mov
cld
jmp
test
jl
cmp
and
pop
sub
mov
pop
dec
popf
sub
push
lods
rcll
adc
pop
in
int3
insb
test
pop
cs
lods
adc
xor
xchg
call
fstpl
pop
out
not
jnp
jae
ret
cmpl
insb
movsb
imul
add
or
cwtl
imul
add
cmp
sbb
mov
inc
jg
pop
aaa
in
push
jmp
adc
enter
inc
je
mov
or
jl
mov
dec
pusha
mov
pop
insl
xchg
cmp
jle
stos
xor
jo
shlb
lea
inc
add
sbb
lea
dec
fcmovnu
add
aam
jno
es
mov
push
lcall
cwtl
add
add
push
in
push
inc
je
and
sub
icebp
xchg
add
or
xchg
push
mov
sub
adc
or
pusha
dec
jge
mov
or
movsb
aaa
mov
mov
push
adcb
xor
subb
fcomps
add
lods
push
jae
xchg
xchg
push
add
pop
mov
adc
fsts
jns
lock
jbe
adc
xchg
xor
pusha
add
pop
addl
cs
or
dec
insb
bound
jle
and
add
mov
test
cmp
pusha
out
pop
shll
inc
jg
lret
or
push
adc
push
and
adc
aaa
fdivl
jne
mov
or
pop
movsb
push
js
pusha
sub
pop
lods
pop
sub
add
popa
mov
and
movl
dec
cmp
pop
add
jae
add
mov
pop
out
add
cmp
popa
in
in
inc
cmc
mov
and
inc
push
pop
push
rcll
jae
sbb
xor
pop
sub
add
cmpsb
add
jo
pop
in
sbb
sbb
xor
push
fbstp
and
and
sub
lock
or
or
push
pushl
xorl
jo
movsl
lods
test
fs
mov
mov
mov
notb
inc
mov
insb
inc
cmp
mov
shlb
xor
mov
fildl
orl
pop
pop
mov
push
push
fmull
pop
adc
push
xlat
jle
ljmp
insb
sub
xchg
jo
lea
pop
jns
add
adc
dec
bound
lods
pop
and
push
sbb
fs
cld
sub
popf
pop
pop
add
and
jo
xor
imul
movsl
cwtl
pop
int
mov
push
sbb
xchg
sbb
rclb
and
mov
push
sti
xor
ljmp
push
and
cmp
shrb
or
inc
inc
mov
mov
inc
push
mov
adc
dec
test
les
aas
add
add
in
dec
test
dec
push
cwtl
mov
insb
jecxz
idivl
dec
xorl
aaa
push
mov
andl
add
in
mov
pop
add
and
insl
out
xorb
insl
mov
add
dec
add
pop
sub
add
stos
cs
loopne
lock
mov
fildl
push
loope
and
add
inc
dec
dec
and
sbb
lea
add
xchg
push
dec
rolb
cmp
call
add
in
dec
push
sub
lret
mov
pop
push
ds
adc
or
outsb
adc
mov
gs
sti
pushl
mov
cmp
je
cmp
je
cmp
je
cmp
je
push
ss
sbb
inc
cmp
incl
mov
cmp
jne
push
sub
push
call
pop
pop
cmpxchg
jo
xchg
je
and
mov
push
dec
lock
jno
mov
push
shlb
xor
sbb
fcoml
rcrb
ret
je
js
test
add
pop
in
loopne
enter
push
int3
adc
sub
pushl
dec
call
scas
xorb
xchg
mov
pop
inc
std
inc
test
mov
cmp
mov
subl
sbb
xchg
pushf
mov
in
cs
int3
int3
jo
mov
jp
add
push
xor
inc
jbe
lock
test
test
sub
jecxz
pusha
push
imul
mov
xchg
xchg
nop
and
inc
js
aad
mov
cmp
cmp
cmp
and
hlt
adc
sbbl
fdivrl
imul
arpl
ret
pop
inc
in
sbb
les
and
push
add
push
sbb
ret
nop
clc
and
inc
jo
pop
sub
and
jns
popa
xor
lcall
mov
and
sbb
pop
es
mov
bound
adc
daa
aaa
or
adc
add
and
xor
jb
sub
add
outsb
clc
mov
mov
addr16
mov
cwtl
inc
iret
inc
or
int3
inc
loope
movsb
loopne
jb
mov
in
orb
and
sub
fmull
leave
inc
jb
sub
incb
push
sbbl
xchg
test
scas
inc
rorb
push
sub
lods
jo,pt
or
push
add
xor
add
test
insb
lods
sub
sub
insl
out
pusha
test
jne
dec
jp
dec
jmp
or
js
ret
pop
jb
cmpsb
and
inc
xchg
mov
push
and
aas
jo
pop
push
notb
dec
aaa
stos
and
adc
clc
subb
push
inc
das
in
inc
ljmp
dec
mov
mov
sub
mov
les
test
sub
test
cmove
pop
xor
hlt
adc
mov
inc
cmp
je
fmull
add
in
sub
adc
xchg
push
ret
stc
loop
mov
inc
adc
add
mov
add
or
jo
lea
imul
add
lds
bound
push
push
jge
clc
xor
adc
inc
dec
test
testl
shll
inc
mov
and
sbb
add
inc
and
mov
mov
and
or
mov
cmp
and
vmread
xchg
arpl
add
mov
pop
add
pop
iret
stc
push
and
mov
cli
lea
movsl
sbb
push
dec
push
inc
cmp
divl
fildl
and
in
dec
sbb
adc
mov
lea
movsl
add
pop
aaa
add
out
mov
divl
jecxz
pusha
xchg
icebp
rclb
mov
and
sbbl
sub
sub
sarb
lret
hlt
sar
xchg
push
std
mov
clc
push
add
jo
pop
xor
popa
and
or
jle
adc
mov
or
inc
jge
dec
jne
sub
jne
cmp
jne
mov
mov
jb
add
mov
jne
movsl
adc
mov
jmp
or
loopne
mov
ret
inc
inc
fiaddl
dec
cld
add
cmp
test
or
in
pop
clc
jg
push
call
or
pushl
aam
js
xor
movsl
dec
mov
sbb
push
adc
pop
jns
adc
test
lcallw
mov
adc
jnp
jo
cli
jmp
or
inc
inc
sub
sbb
cld
add
push
dec
and
inc
dec
add
or
sub
adc
inc
sbb
insl
jbe
rcl
fdivl
add
pushl
and
je
or
mov
cld
data16
pop
mov
jb
cmp
pop
idivl
cmp
adcb
push
in
bound
inc
jne
pop
pop
jo
or
jnp
in
pop
adc
je
pushf
jecxz
or
add
inc
test
stc
xchg
mov
repnz
fisubrs
lcall
or
in
push
mov
jne
pop
push
and
jg
sub
mov
inc
cmp
xchg
mov
cmc
and
mov
out
cmp
je
sub
rorl
in
push
shrb
sub
cwtl
dec
outsb
mov
out
push
lea
adc
add
push
cld
lret
add
or
mov
aam
sbb
les
dec
mov
popf
jo
rclb
test
aas
mov
push
xor
mov
add
dec
fs
dec
rclb
cmp
fsubs
add
mov
cmp
movsb
js
gs
mov
fucomp
and
sbb
push
mov
pusha
dec
scas
add
lret
and
add
add
sub
add
or
sub
ds
push
jmp
push
add
cmp
xlat
cmp
push
push
pop
leave
cmp
adc
nop
cmc
sbb
cmp
xchg
dec
cmp
add
lcall
mov
dec
mov
and
aas
dec
push
dec
and
cwtl
dec
mov
in
pop
fwait
ljmp
ret
add
bound
enter
lea
roll
in
je
push
mov
inc
xor
gs
pop
or
push
push
and
add
dec
sbb
aas
and
sahf
add
add
sub
dec
mov
inc
push
xor
push
test
movb
mov
shr
or
mov
pop
mov
mov
aam
add
inc
push
mov
inc
or
push
jno
xchg
mov
lods
pop
or
loopne
cmp
push
pop
xor
mov
xchg
pop
or
les
pusha
push
push
pop
push
cltd
xor
and
pop
push
lret
add
iret
aas
lock
scas
dec
dec
sbb
adc
add
lock
inc
or
fstl
mov
arpl
push
fistpll
inc
cs
pop
test
pop
subl
inc
sub
iret
mov
mov
fmull
push
jbe
pop
mov
jne
cmp
pushf
and
jae
mov
add
dec
sbb
sbb
les
loope
mov
jo
stos
ret
dec
or
lods
xchg
lock
insb
fnsave
daa
cmp
insl
mov
sub
inc
push
or
push
lods
mov
jle
lea
out
cmp
mulb
inc
mov
sub
xchg
loop
pop
mov
mov
or
pushf
sub
les
push
inc
and
mov
mov
push
and
ret
ficoml
and
fiaddl
loopne
mov
loop
in
or
dec
or
int
add
mov
bnd
mov
or
mov
dec
adc
mov
push
push
daa
ret
js
mov
int
scas
xor
add
sbb
lods
xor
sbb
repnz
ret
or
and
sub
or
mov
and
cmpsb
sbb
test
lock
or
sarl
inc
inc
sub
add
sbb
add
xor
enter
rorl
into
xchg
or
scas
or
xor
les
daa
nop
adc
das
repz
add
sbb
mov
sub
cmp
rolb
icebp
sbb
push
fsubrl
je
call
xchg
fadds
inc
negl
out
pop
pop
inc
loopne
or
inc
and
and
jne
push
jno
pop
pop
xchg
xchg
pop
jmp
insb
pop
cmp
adc
inc
xor
dec
pop
je
cld
sbb
mov
stc
or
mov
adc
test
mov
push
dec
lea
mov
movsb
add
mov
push
and
inc
pop
pop
icebp
loope
test
add
pop
sub
enter
cmp
jne
push
movsl
movsl
test
xchg
outsl
jmp
push
in
pop
sahf
dec
mov
lret
aaa
sub
sub
dec
cmpsl
push
shlb
push
push
cmovb
in
cmpsb
loop
sbb
xor
or
dec
cmp
push
push
mov
mov
test
pop
mov
in
dec
adc
pop
xor
inc
mov
push
mov
mov
ret
mov
xor
push
andl
mov
lea
and
add
sub
inc
es
adc
push
cs
adc
xor
call
je
clc
sub
rolb
sub
jne
movsb
cld
pop
pusha
in
dec
dec
or
lock
jmp
sbb
jns
sub
xor
inc
idiv
cld
fidivs
or
inc
divb
sub
push
fs
push
mov
mov
pop
mov
adc
push
mov
cmp
cmp
mov
rcrl
push
rcrb
xor
push
mov
dec
jge
popa
mov
push
add
sub
pop
mov
sbbl
add
push
pop
xor
sbb
adc
addr16
pop
lea
jns
pop
cmp
adc
sbb
or
pop
test
jns
loope
in
sbb
rcrb
push
xchg
push
in
lea
fists
js
sub
add
fwait
iret
mov
out
xchg
pop
arpl
sub
int
cmp
and
sub
pop
popf
outsl
rcrb
pop
add
sar
pusha
sub
sub
xor
add
into
subb
inc
icebp
inc
push
dec
adc
pushf
mov
mov
inc
fs
out
or
push
lea
stos
popa
pop
dec
jle
pop
dec
loope
inc
adc
add
test
mov
or
mov
adc
or
pop
dec
push
inc
fisubl
mov
push
loopne
aam
push
es
mov
add
xor
push
movb
push
xchg
or
push
sbb
jnp
and
sbb
pop
xchg
jmp
bound
notl
mov
push
sti
enter
xchg
in
mov
pusha
repz
sub
xchg
and
mov
lea
push
adc
fs
inc
fsubr
cmp
pusha
jecxz
out
xchg
hlt
sub
nop
lods
mov
mov
xor
cmp
in
pop
jo
popf
cmpb
aaa
jne
adc
add
add
fsubrs
xor
cmp
pop
shl
sbb
stos
ret
mov
mov
dec
dec
ljmp
inc
ret
jle
lea
cmpb
fcmovnbe
addl
add
lock
das
popa
cld
movb
push
dec
clc
sub
cmp
pop
jl
cmpsb
xor
clc
add
out
testb
dec
es
fdivl
mov
fidivl
xor
adc
nop
popa
jl
cmp
shld
call
test
cmp
mov
ret
jl
test
jge
cld
xchg
push
push
insb
pop
jae
sub
add
or
push
sbb
pop
xor
clc
or
push
loopne
push
pop
mov
sti
jns
movsl
mov
test
hlt
dec
or
push
push
fcompl
mov
dec
or
jns
fimuls
jmp
dec
adc
pusha
pop
xchg
call
jl
sub
add
bound
xchg
push
shlb
push
sbb
push
cmpsb
add
dec
pop
rolb
je
jmp
incl
xor
and
jmp
cmp
jne
xor
inc
adc
rcrb
out
stos
push
mov
xchg
and
xchg
sbb
adc
adc
insl
jb
cmpsl
mov
cmp
enter
pop
cmpsl
push
pop
fcomps
jl
push
movsb
or
dec
pop
fidivrs
lret
je
negl
sbb
mov
pop
and
or
dec
add
int3
push
adc
and
push
test
push
mov
fildl
ret
bound
inc
mov
in
addl
cmpsb
adc
jbe
inc
cmp
imul
dec
or
pop
inc
mov
cmpl
xchg
test
test
mov
cmp
jmp
test
test
sub
cmp
leave
call
add
pop
cmp
ret
mov
inc
andb
pop
adc
bound
mov
ljmp
icebp
lock
gs
pop
or
push
cmpsb
adc
sbb
sbbb
adc
or
insb
ljmp
adc
xor
push
clc
push
adcb
push
or
jne
test
xchg
dec
dec
push
mov
cs
xor
mov
jl
cmp
insb
movsl
cltd
adc
subb
jbe
imul
jo
sbb
pusha
mov
orl
sub
sarb
aam
mov
jmp
add
or
je
cwtl
aaa
push
add
pop
mov
lea
iret
jo
and
push
mov
or
mov
stos
push
push
adc
inc
and
or
add
sub
add
xor
int3
lcall
jb
pop
push
fs
adc
xor
not
or
mov
int3
xor
jne
adc
or
es
xchg
test
push
cmpsb
jle
pusha
sbb
inc
sub
mov
pusha
jl
or
mov
aad
add
dec
cmp
push
pop
cltd
mov
insb
pop
int3
push
pop
sarb
addr16
loop
aaa
cmpsb
out
push
imul
or
stos
push
sub
je
sbb
push
xchg
fimuls
rorl
int
call
sbb
test
cmp
pop
rcrl
pop
xorw
movzwl
test
je
test
xchg
push
mov
lret
addr16
mov
push
mov
and
push
and
mov
movsb
pop
push
xchg
sbb
sbb
jne
cmpl
je
or
ret
push
sahf
adc
shr
jbe
jnp
add
mov
inc
push
in
dec
inc
and
xor
clc
bound
xchg
pop
xchg
std
int3
test
std
ja
popa
mov
nop
xor
sbb
adc
add
and
pop
jl
push
loop
call
add
sub
add
add
xor
sbb
sbb
lds
pop
ja
and
jecxz
mov
ret
or
lock
mov
mov
sarb
jb
inc
xchg
push
lods
sti
pop
or
xor
aad
push
add
sbb
jle
mov
ret
push
sub
lahf
popf
sub
pusha
pop
pop
cwtl
add
aas
pop
cmp
je
jmp
adc
out
xlat
sub
popa
outsb
out
das
mov
xchg
add
jle
mov
mov
addl
call
and
pusha
dec
ret
sbb
inc
or
push
cmp
push
add
pop
dec
mov
and
lret
je
push
outsb
and
pushf
pop
adc
or
or
xor
movl
je
out
sbb
pushf
es
push
pop
cmp
add
jg
and
adc
loopne
sbb
test
andl
pop
das
add
ret
jb
in
inc
inc
inc
mov
xchg
pop
ds
sub
cmp
xor
cmp
mov
arpl
push
fwait
lock
dec
pop
lahf
jae
lea
push
mov
and
ljmp
add
mov
push
loopne
push
mov
mov
cmpl
fcompl
inc
or
adc
dec
inc
mov
jl
subl
je
sbb
push
jo
cmp
popa
xor
add
push
push
or
mov
ss
xor
call
add
das
pop
pop
lea
or
pop
add
and
and
loop
inc
xor
add
jno
dec
mov
or
inc
enter
xchg
jo
pop
lcall
or
dec
jo
imul
jmp
xchg
cmpsb
pushf
push
pop
gs
cwtl
cwtl
std
fs
lcall
push
dec
pop
lret
jb
dec
mov
mov
push
in
mov
adc
add
mov
nop
sub
add
rcll
ja
push
adc
lahf
and
ret
rcrl
popf
sub
jnp
xchg
fxch
fst
or
push
sarl
nop
cmp
dec
add
jo
shr
stos
sarl
lods
ljmp
push
fsubr
in
in
push
jae
or
push
and
jne
bound
add
pop
fs
testl
mov
sbb
popa
xchg
sbb
or
add
faddl
add
xchg
out
push
idivb
mov
orb
push
cmpsb
sub
dec
mov
jo
imul
inc
push
mov
adc
jmp
cmp
ror
jecxz
pop
fs
pushf
cmpsb
xor
dec
sbb
enter
sbb
mov
mov
cmp
test
fcompl
loop
cld
loope
sbb
data16
xchg
cmc
add
push
and
rcll
aas
js
int3
test
sbb
adc
lahf
jb
mov
je
pop
imul
cwtl
into
pop
pusha
enter
or
int3
icebp
jae
dec
jne
add
mov
dec
popa
lock
adc
mov
mov
jbe
add
dec
scas
faddl
test
arpl
add
jmp
mov
push
add
setbe
sahf
int
adc
inc
push
xor
push
es
pusha
mov
push
scas
mov
xor
xchg
jno
pop
ret
inc
adc
xor
mov
dec
shrb
mov
cmp
cmp
es
shl
xor
push
xor
inc
nop
jns
xor
cmpsb
adc
adc
sarb
out
inc
adc
insl
leave
jle
call
fildl
fldl
adc
adc
inc
inc
xchg
dec
orb
dec
add
rolb
orb
xor
push
sub
fisubrs
mov
xor
enter
daa
ljmp
nop
loopne
lock
xchg
into
mov
test
inc
sbb
mov
shll
icebp
jbe
fmull
mov
mov
fidivl
cmp
jb
push
adc
mov
fmuls
push
add
in
dec
cltd
xor
or
inc
loop
insb
mov
shrb
test
lahf
adc
add
push
mov
out
sub
dec
mov
sarl
testb
adc
stos
addl
aaa
and
push
dec
xchg
into
pusha
cmp
cli
jg
push
cmp
push
insl
jmp
xchg
mov
jmp
lea
mov
push
daa
push
adc
shr
int3
ss
jp
inc
pusha
pop
push
loopne
rorb
loopne
arpl
xchg
mov
repnz
pop
jb
push
icebp
aad
pop
sahf
jo
adc
mov
add
push
in
loopne
push
push
jmp
sub
popf
sub
xor
jle
int3
pop
add
insb
lock
fwait
xor
adc
inc
xchg
mov
or
mov
mov
aam
and
imul
xchg
aam
push
flds
mov
push
push
ds
push
mov
int
and
shl
std
pop
mov
adc
pop
sbb
and
xor
lldt
add
jmp
pop
sbb
or
lock
popf
jmp
add
fisttpll
ljmp
scas
push
or
jo
outsb
fidivrl
outsb
inc
sar
mov
test
or
pop
imul
pop
sub
movb
not
xchg
daa
mov
je
inc
or
jne
dec
add
push
jae
arpl
repz
add
push
jns
sahf
das
je
inc
or
push
or
jne
or
cmp
push
push
stc
xor
sub
inc
sbb
icebp
sbb
cmp
add
addr16
fistpl
xchg
jnp
out
popf
pop
mov
cmp
sub
jle
mov
cmp
cmp
je
mov
aas
ret
mov
jne
mov
nop
cwtl
sbb
clc
dec
xchg
cmp
xor
insb
mov
movb
loopne
sbb
mov
iret
outsl
cmp
xor
mov
mov
push
xor
icebp
push
jl
jb
pop
xor
xchg
sub
je
data16
sti
test
into
cld
outsb
sbb
sahf
push
pop
and
sbb
push
adc
rcrb
mov
dec
sbb
jnp
push
mov
call
xchg
clc
sbb
js
inc
xor
inc
cld
push
pop
pop
and
jne
fcomp
jmp
lea
mov
mov
mov
outsb
mov
jl
mov
push
stos
pop
jg
add
add
mov
pop
inc
push
or
adc
repnz
mov
add
sbb
dec
lret
push
and
push
rcrb
sbbb
add
ret
mov
aaa
mov
or
inc
and
add
dec
shll
push
xor
je
jl
mov
lret
call
inc
loop
andl
add
sub
arpl
and
shlb
add
dec
and
pop
dec
jnp
add
rorl
rclb
lea
insb
cmpsb
pushl
or
xchg
orl
mov
fadds
sbb
or
xorb
or
insb
push
or
push
cmp
xor
push
cmpsl
jbe
push
pop
ret
push
cltd
xor
popf
xor
popf
sahf
subb
xchg
cmp
jg
push
mov
fisubs
clc
adc
and
inc
cld
movsl
push
cmp
jne
pop
mov
xor
jo
add
lods
dec
pcmpeqw
or
adc
ret
or
add
and
dec
popa
add
insb
dec
adc
fbstp
jmp
cmp
decb
xor
jb
push
add
sbb
shl
sar
lret
or
mov
dec
adc
push
ja
jg
xor
add
mov
adc
loopne
movswl
add
mov
dec
mov
push
dec
dec
cmp
and
lea
mov
sub
adc
pusha
pop
add
jne
cmp
enter
scas
push
shl
mov
mov
insb
sbb
test
xchg
jo
shlb
in
push
inc
ljmp
add
inc
xchg
loope
outsl
xchg
jne
lea
add
fcomp
ret
jne
adc
popf
or
insl
sub
rclb
sub
out
test
icebp
fstl
fldl
fdivrs
ds
xchg
jno
lahf
adc
xor
outsb
lahf
out
rolb
pop
mov
in
andl
cltd
in
cmp
das
add
iret
sbb
cmp
stc
or
push
ljmp
push
stc
iret
mov
inc
gs
fcmovnbe
xchg
out
fnop
lods
je
dec
add
mov
shll
adc
or
clc
loopne
xchg
and
icebp
adc
clc
push
stc
lods
xchg
loopne
je
icebp
jne
fwait
jl
cmpsl
xor
ja
fwait
jnp
cmovp
sub
inc
sub
jne
shrb
sub
dec
mov
lods
aam
lods
iret
js
daa
inc
testb
or
adc
shrb
ljmp
jns
xor
mov
xchg
jbe
add
rorb
mov
mov
in
ljmp
mov
mov
dec
pop
cwtl
inc
jo
imul
adc
pusha
arpl
or
dec
add
push
push
push
and
push
lock
add
arpl
jae
inc
or
adc
add
sub
jp
mov
mov
test
test
out
pop
mov
and
and
adc
fcmovbe
dec
xchg
sub
loopne
xchg
je
pusha
push
mov
jp
push
sar
int
fnstcw
scas
jo
ffreep
sti
in
push
and
sbb
fimull
out
pop
jo
sbb
dec
mov
mov
pushf
rcrl
and
sbb
inc
test
lods
jns
nop
pop
sub
jnp
je
je
pop
sbb
fs
pusha
insb
inc
inc
push
sbb
add
stc
and
movsb
add
mov
ja
fcomps
pop
icebp
and
xchg
fcom
in
inc
mov
je
cmp
je
testb
movsb
aas
mov
rorl
lds
cmp
je
sbb
adc
or
lock
push
sub
sub
cmpsl
js
pop
xchg
jmp
lea
sbb
fmuls
or
sub
add
mov
push
add
lock
pop
enter
lock
hlt
and
and
push
cmpsl
mov
add
push
push
adc
cmp
in
adc
sbb
repz
dec
ss
xchg
cmp
mov
jbe
pop
sbb
into
add
push
mov
insl
loopne
shl
mov
push
pop
cs
popl
lods
lock
mov
cli
push
leave
loopne
pop
rolb
and
lock
sbb
or
bound
sub
and
or
cmp
dec
xlat
test
test
or
inc
mov
pop
insl
mov
and
sub
jno
jne
add
dec
inc
sahf
mov
inc
stos
mov
jns
insb
shrb
jge
jne
ret
shlb
mov
dec
xor
xchg
cs
cld
call
xor
push
aas
jne
mov
xor
xchg
fdivs
cltd
jbe
xchg
stos
mov
fstp
or
xchg
mov
cwtl
fidivrs
push
inc
lods
sub
pop
test
add
add
loopne
je
sbb
outsl
xor
cmp
sar
sub
cwtl
dec
push
lea
ficompl
push
adc
push
push
mov
pusha
imul
push
or
xor
push
lods
add
adc
mov
or
lock
les
out
sub
cwtl
sub
push
cmp
in
mov
push
inc
adc
fs
or
lods
cmp
sub
pop
arpl
outsb
jecxz
xchg
jp
imul
movsb
mov
push
push
fistl
inc
sbb
cli
push
std
mov
mov
sbb
pop
cmp
mov
sbb
adc
mov
jp
add
sbb
arpl
cmp
je
inc
neg
ss
repz
add
xor
call
jge
sbb
jg
adc
cmp
push
cmpb
cmp
fcoml
sub
add
add
arpl
filds
scas
loope
ljmp
adc
aam
ljmp
inc
or
inc
jb
add
cmp
jo
sbb
push
pop
into
dec
enter
and
jecxz
out
adc
loopne
and
lret
jp
ret
dec
lods
clc
sbb
sbb
inc
verr
sbb
xchg
sarb
fidivrs
inc
adc
xorl
xor
push
and
loope
popa
sbb
int3
test
test
or
mov
test
adc
mov
aam
xor
add
je
mov
pop
shlb
sub
mov
lret
addr16
movsl
push
rcr
pushf
and
jl
sbb
mov
push
mov
dec
or
pop
xchg
push
mov
les
sbb
mov
fidivrs
cmp
or
adc
lds
jo
push
cli
or
mov
push
pushf
sahf
cmp
push
xchg
popa
orb
cwtl
bound
and
outsb
stos
daa
adc
das
inc
cmp
or
lret
push
add
aaa
jg
cmp
aas
mov
mov
movzwl
stos
mov
jne
dec
sarl
add
in
imul
fs
and
je
or
push
or
pop
ljmp
adc
push
arpl
cli
add
push
push
xor
cmp
sbb
jae
jb
dec
push
add
push
cs
arpl
mov
les
mov
dec
xor
or
inc
jne
xchg
push
push
cmp
repz
sub
imul
add
push
imul
cmp
aad
nop
push
sbb
and
stos
out
sarl
cmp
orb
dec
cmp
imul
fcmovb
subb
xlat
push
xchg
push
lcall
xor
pop
rorb
inc
call
xorb
mov
call
sub
or
sub
sbb
inc
fistl
xor
and
loope
out
dec
jge
push
cmp
cmp
mov
fiadds
rdmsr
sarb
mov
dec
stos
out
cmc
sub
mov
movsl
mov
shr
and
or
loope
rclb
in
jp
and
inc
test
lods
ret
repz
aam
je
or
mov
jecxz
sub
push
or
jo
push
sbb
loopne
loop
and
dec
xchg
fimuls
push
mov
adc
lret
add
sub
insb
int
imul
or
xor
mov
seto
jle
mov
add
ficompl
rclb
xor
or
xor
and
push
xor
je
lcall
add
jo
push
push
cmpl
pop
push
loop
sbb
ljmp
sub
sub
rorl
lods
or
mov
xchg
fs
popl
push
pop
inc
xchg
dec
jle
andl
add
call
or
mov
inc
jo
fiaddl
or
test
jae
xchg
lods
gs
add
mov
sbb
adc
push
and
out
push
cmpb
dec
push
inc
cmp
fsubr
leave
ror
mov
ret
sub
pop
pop
pop
pop
xchg
mov
inc
idivb
sbb
and
mov
add
mov
jl
andl
movsb
push
in
adc
sbb
mov
push
pop
addr16
add
or
cmpb
mov
loop
and
test
xor
in
mov
push
xchg
dec
outsb
mov
jl
js
fstl
push
sbb
mov
scas
dec
xorl
adc
aad
mov
andl
popa
fs
loop
dec
test
xchg
inc
mov
fdivrl
adc
test
push
mov
fildl
jl
dec
cmp
or
jl
or
mov
sub
adc
xor
pop
push
in
shr
pop
arpl
dec
insb
mov
dec
adc
pop
jns
in
clc
inc
push
inc
adc
inc
dec
sbb
fadds
xor
push
ljmp
mov
addl
sub
shr
pop
fists
mul
pushf
mov
push
ret
sub
push
xchg
mov
push
sbb
in
popl
pop
or
mov
cmp
jmp
mov
or
cmp
add
bsf
ret
testb
jbe
add
xchg
andb
es
mov
loope
addl
mov
or
scas
push
sbb
in
outsb
sbb
xor
mov
pop
mov
push
mov
mov
test
loopne
lret
dec
jae
push
mov
sbb
test
shlb
add
mov
test
and
loope
in
mov
leave
and
cmp
adc
inc
add
shll
add
or
add
cmc
push
sbb
frstor
aas
push
push
test
lahf
pop
add
mov
je
xor
mov
jne
rol
filds
mov
lods
cmp
jne
xchg
push
incl
adc
call
jnp
cmp
push
push
loop
stos
pop
les
push
mov
inc
jo
inc
mov
inc
push
xchg
jle
adc
add
inc
sbb
push
xchg
mov
sbb
into
lods
ret
mov
mov
shlb
pushf
xchg
inc
xlat
adc
aam
mov
push
or
test
mov
dec
ljmp
inc
push
in
add
mov
call
test
or
inc
out
pop
push
xchg
push
pop
cmpb
popa
mov
int
dec
inc
ficoml
inc
fisubl
fistps
fwait
jmp
nop
push
push
pop
xor
lea
mov
sub
insb
xchg
sub
inc
movsb
popa
shrb
lods
fisubrl
pop
fcmovne
mov
dec
clc
loop
je
mov
add
push
jno
dec
add
xor
mov
add
jmp
in
or
sarl
jno
aas
pushf
xor
add
stos
out
pop
xor
pop
leave
test
fninit
xchg
dec
mov
sbbb
xchg
sub
aad
and
test
in
inc
test
push
jno
js
xor
lret
mov
push
and
movsb
adc
jns
inc
cmpsb
les
cmpsl
or
adc
pushl
mov
test
pop
bound
andb
cwtl
jmp
xor
and
dec
lret
clc
sti
mov
jns
or
xor
sahf
mov
mov
out
in
jg
adc
xchg
inc
adc
dec
xlat
lods
fidivrs
hlt
push
lods
cli
or
inc
test
ss
fwait
dec
inc
pop
xor
outsl
clc
xor
cmp
mov
sub
sbb
sbb
mov
push
into
in
xchg
jb
ret
push
or
jae
stos
cwtl
sbb
into
sub
unpcklps
xchg
add
dec
insb
push
popf
clc
push
xor
mov
cmp
dec
ljmp
pop
stos
add
sub
faddl
mov
jl
pop
mov
aam
mov
xchg
add
lcall
shlb
jge
dec
push
int
adc
sbb
cltd
jmp
rcrb
cmp
cmp
sub
icebp
pop
imul
mov
push
pop
pop
fsubl
lea
xchg
out
xchg
ret
shlb
int3
arpl
xorl
pusha
pop
jp
hlt
mov
add
and
aas
pavgb
mov
inc
lods
jbe
call
mov
cmpl
mov
mov
cli
push
cld
sub
push
lahf
or
aas
movb
sbb
pop
loop
jg
adc
inc
insb
shr
inc
add
jo
mov
pop
push
fimuls
adc
into
cmp
adc
mov
inc
addr16
inc
or
pusha
insb
in
jecxz
cmpsb
std
mov
decb
adc
insb
mov
gs
and
aas
adc
and
add
inc
jge
shll
push
dec
and
mov
jo
ljmp
push
push
je
push
lock
aam
fists
pop
adc
inc
ficoml
hlt
shlb
jno
adcl
xor
or
mov
lods
jnp
mul
je
lcall
mov
dec
sub
mov
insl
adc
add
xchg
xchg
lock
push
push
sbb
xor
or
mov
bound
sub
inc
pop
dec
scas
in
dec
add
icebp
or
pop
xchg
cld
jecxz
adc
push
sbb
shr
scas
addl
insb
cs
mov
mov
inc
sbb
jg
call
inc
enter
inc
inc
add
and
inc
adc
movb
dec
inc
jge
out
imul
add
pop
in
add
dec
push
loopne
push
xor
orb
ds
mov
cmp
rol
jp
gs
pop
push
repnz
pop
mov
cltd
dec
push
lea
mov
mov
sub
xor
aaa
jbe
mov
ss
inc
jbe
jo
rorl
add
popf
jmp
cmp
pop
mov
mov
and
dec
out
pop
push
xchg
mov
in
mov
cmp
cmp
mov
popf
aaa
dec
pop
loope
adc
pop
and
iret
jo
in
stos
push
arpl
leave
adc
sbb
jmp
clc
push
aad
fldt
mov
pushf
or
xchg
jg
ficoml
inc
orb
sbb
push
adc
mov
sahf
sbb
loope
cmp
lea
mov
or
add
push
movsl
lret
lods
push
lds
adc
push
push
adc
xchg
mov
or
push
xor
or
lret
mov
mov
or
sub
xchg
jmp
inc
pusha
std
adc
bound
xor
mov
aad
xchg
mov
dec
fsubrl
pop
and
lock
nop
test
dec
in
loopne
pop
testl
cmp
pop
inc
and
xor
push
jbe
call
inc
mov
dec
or
dec
or
dec
sbb
cwtl
cmpb
xorl
push
xchg
pop
test
test
cmp
xor
or
adc
jle
jmp
or
fimuls
popa
dec
sbb
mov
test
into
addb
cmpb
mov
out
xlat
cmpsl
add
sub
add
ret
cmp
push
add
push
xor
lahf
xor
aaa
push
xor
rorl
dec
xchg
out
ret
lret
loopne
and
push
loope
cltd
fcoms
cs
jo
mov
push
mov
pushl
jo
push
or
jae
movsb
es
jl
movl
gs
push
push
or
or
lods
mov
pop
popa
xor
and
outsb
xchg
arpl
dec
mov
inc
sbb
bound
adc
scas
push
and
jg
testl
arpl
das
pop
ret
cmpl
inc
imul
xor
push
cmpb
mov
ficompl
pop
dec
pop
lods
push
popa
leave
mov
lods
push
lret
mov
xchg
shlb
shrb
jno
mov
lret
push
in
xchg
cmp
mov
sti
xchg
cmp
xor
mov
dec
sbb
cmp
xchg
cmp
or
push
or
push
ret
filds
pop
in
fistl
or
push
xor
xchg
mov
inc
push
push
dec
mov
adc
or
sbbl
mov
ljmp
cmp
pop
add
testb
dec
add
ret
testb
cmp
in
addb
test
pop
and
imul
and
lret
jecxz
stos
jmp
jle
fcompl
cmpsb
jne
ret
outsl
mov
ret
jno
cmp
ja
out
aaa
mov
je
or
je
or
sub
xchg
adc
adc
rcrb
add
xchg
pop
push
or
add
test
sbb
and
jnp
jl
loope
enter
cmp
fidivl
adc
adc
xchg
xor
inc
xchg
fcmovnu
xor
vcmpeqpd
jne
xchg
jo
sub
push
pusha
jbe
call
cmp
push
in
mov
rolb
cmp
inc
mov
or
or
sub
sbb
je
ret
or
rcrl
inc
rorl
adc
adc
dec
enter
js
mov
test
cltd
and
add
fwait
rolb
add
adc
add
mov
jo
or
je
sub
sub
ljmp
add
add
nop
adc
add
mov
repz
mov
and
stc
sub
push
and
add
and
stc
cs
dec
push
inc
insl
cmc
nop
lock
movb
push
xor
movl
push
adc
out
leave
leave
and
test
arpl
pusha
adc
mov
sub
lcall
mov
inc
push
pop
or
sti
mov
shrl
sbb
notl
dec
add
mov
std
fcomp
iret
shlb
das
or
push
rsqrtps
cld
mov
inc
push
inc
push
cmp
popaw
in
push
inc
xchg
lock
hlt
call
mov
add
xchg
xchg
add
loopne
or
stos
aad
cmp
fcomps
repnz
notb
popa
sub
dec
push
push
xor
add
jle
and
rcrb
aam
or
adc
sbb
popa
jl
fidivs
sti
in
or
scas
xchg
shrb
push
leave
mov
sahf
and
add
lea
sub
mov
lea
xchg
sbb
sbb
fs
dec
push
jecxz
iret
and
nop
and
sub
bswap
xchg
dec
ret
ret
rorb
xor
push
cltd
out
xchg
xchg
lret
daa
pop
fdivrs
repz
sbb
cmp
callw
fistl
test
sbb
push
fldt
fnstcw
and
ror
popa
add
std
and
stos
sahf
pop
pop
jge
cmpsb
cs
loopne
aam
out
pop
mov
cmp
aam
mov
add
and
pop
enter
in
add
adc
sub
loopne
cmpsl
and
or
in
clc
inc
daa
sbb
push
les
dec
lock
push
xlat
test
ret
fs
lcall
xchg
xor
mov
jnp
sar
clc
inc
or
repz
fadds
test
lcall
push
add
sarl
adc
mov
cmp
and
xchg
pop
icebp
cmp
loope
mov
ds
pop
rcrl
out
jge
and
mov
and
cmpl
dec
lcall
inc
jmp
jo
pop
imul
adc
and
dec
or
or
test
out
shrl
push
jl
xchg
or
hlt
enter
sub
add
insb
adc
inc
mov
xor
push
mov
test
pop
call
loopne
shlb
icebp
int
mov
adc
xor
inc
enter
insl
outsl
lret
int3
cmc
mov
add
inc
add
cmp
fmull
push
lahf
dec
in
sub
hlt
adc
xchg
pop
inc
pop
xchg
sub
inc
inc
cwtl
mov
mov
push
jo
shll
subb
inc
enter
sub
and
add
inc
cmp
ret
push
dec
inc
cmp
xchg
sub
lret
out
bound
add
or
mov
outsl
ficompl
add
adc
sbb
and
and
cmp
xor
cli
xor
cmc
push
aam
mov
mov
mov
ret
mov
loope
pop
in
push
add
push
pusha
or
fcoml
je
add
jg
xor
sbb
xor
xor
xor
xor
pop
cld
dec
in
xor
js
xorl
inc
pusha
loopne
push
fdivr
dec
out
xchg
cld
cmp
dec
inc
inc
cmp
xor
inc
imul
aas
cmpl
push
test
sbb
into
pop
leave
and
arpl
xor
ds
ret
sub
adc
push
mov
mov
enter
and
ficomps
testb
lcall
cmp
add
xchg
add
sbb
mov
xchg
cmpb
push
xlat
cs
jae
adc
fsubl
movsb
rorl
push
insl
inc
jecxz
sbb
movsl
cwtl
pop
ds
push
push
pop
mov
test
add
adc
mov
fadds
insb
xor
call
xchg
cmp
adc
push
adcb
adc
sbb
or
add
sbb
and
jo
jo
out
call
xchg
fimuls
aam
in
add
pop
jg
sti
je
rorb
add
push
test
out
hlt
cltd
rolb
cmpl
fwait
or
jo
jnp
mov
inc
pop
jle
inc
and
lock
int3
insb
lods
and
sub
movsb
dec
sbb
inc
adc
lds
ficoms
add
push
inc
fcmovnu
ljmp
mov
xor
inc
call
andb
xor
enter
adc
addr16
jl
xlat
je
dec
sarl
cmp
shl
mov
sbb
out
jl
sbb
xchg
loope
in
xchg
and
push
inc
or
adc
mov
xchg
dec
cmp
pop
jmp
movsb
lods
mov
mov
js
cwtl
and
pushf
xor
adc
pop
dec
inc
inc
and
js
cmp
test
sub
jnp
enter
sub
cmpsl
mov
lret
addb
adc
xor
ret
rcrb
lock
jle
push
idivl
shrb
mov
les
inc
es
mov
push
jp
or
incb
sbb
mov
push
xor
fisttpll
sub
lock
sbb
test
push
dec
sub
sarl
sbb
and
out
inc
sbb
cmp
sarl
push
out
out
pop
fidivs
sbb
rcl
int
and
xchg
in
aaa
stos
pop
xor
rcrl
jne
jbe
or
inc
mov
lods
je
into
hlt
je
pop
loop
sbb
mov
sbb
push
or
sbb
pushw
cmpsb
rcrl
push
adcb
jnp
ficoms
cmp
jnp
pop
push
sub
fs
jp
push
je
cmp
push
sbb
push
mov
jno
add
push
jbe
in
dec
bound
xchg
dec
add
mov
and
add
mov
fisubl
dec
hlt
add
pop
je
or
je
cmp
push
cmpl
mov
shrb
pop
push
mov
lret
or
test
mov
gs
test
adc
rcl
leave
decl
rorl
stos
adc
test
sub
cmp
aad
sbb
sub
add
sub
pop
cmp
and
cmc
movsl
mov
inc
push
add
jmp
mov
dec
push
add
hlt
adc
and
mov
push
insb
mov
push
jl
add
or
enter
push
out
popa
cvtps2pi
add
fisttps
mov
xchg
inc
outsb
mov
pop
and
inc
xor
push
jbe
dec
dec
sub
pop
and
and
inc
sub
xor
add
push
adc
test
out
push
sahf
je
adc
das
repnz
push
int3
pusha
xchg
mov
sbb
pusha
enter
repz
enter
sbb
push
push
cmp
inc
aad
sub
add
xchg
or
sub
mov
sub
mov
jl
push
mov
and
lea
inc
cld
or
xchg
add
test
add
data16
jl
rolb
push
push
jns
cmp
xchg
push
pop
and
push
sahf
push
lods
fwait
cmp
adc
add
jb
cmp
ret
and
ds
daa
shll
nop
inc
cmp
or
xchg
call
stc
insb
add
or
push
xor
dec
ret
lahf
sbbl
movsb
mov
daa
add
mov
stc
insb
dec
xchg
adc
and
mov
inc
push
sbb
push
ficoms
mov
mov
dec
push
xchg
add
add
clc
dec
jbe
and
xchg
bnd
adc
mov
shrl
or
mov
jo
in
clc
pop
push
rol
dec
sub
jne
push
add
inc
or
push
push
enter
jae
aad
pop
adc
xor
pop
lcall
mov
sub
add
pop
adc
rclb
fcmovnb
mov
inc
and
jge
pop
loop
add
movsl
dec
mov
push
mov
dec
mov
fiaddl
lods
add
mov
and
xchg
stc
sub
fists
sbb
pop
sarb
daa
adc
nop
sbb
mov
clc
mov
rcll
inc
xchg
push
add
in
daa
roll
sarb
jge
jl
push
mov
imul
push
add
push
inc
or
inc
or
add
aam
dec
push
sbb
mov
and
mov
dec
les
jg
scas
jl
cmp
jae
mov
or
imull
shl
rorb
or
jne
jg
and
pop
dec
inc
fdivrl
mov
xchg
insb
call
push
push
sar
jns
add
inc
jmp
ss
jbe
or
dec
mov
idiv
pop
push
add
outsb
push
fwait
sbb
mov
movb
xor
add
mov
movsb
or
leave
shr
sub
enter
sahf
or
imul
jge
mov
das
fs
and
jl
mov
ficoml
push
subb
js
inc
aam
adc
hlt
fstps
mov
test
addr16
xor
jle
mov
cli
or
push
or
imul
and
repnz
cwtl
clc
add
mov
int3
adc
push
mov
or
adc
inc
sub
sysenter
lods
jbe
dec
scas
pop
dec
test
fdivl
mov
nop
pop
jb
in
decl
loopne
sbb
ret
jp
push
add
pop
ja
lods
push
inc
mov
cmp
xor
push
dec
xchg
movsl
dec
fldt
cmp
sub
adc
and
mov
add
inc
xor
lret
or
lock
jns
or
jge
sbbb
inc
adc
and
icebp
scas
mov
dec
mov
test
mov
push
cmp
jbe
shll
cmp
push
xor
lret
push
es
push
in
push
xor
insl
mov
imul
push
cmpsl
cmp
loope
push
cmp
lock
xchg
mov
add
bound
mov
cld
mov
dec
push
dec
test
dec
jns
fs
push
or
push
stc
add
dec
push
xchg
aaa
stc
add
test
push
adc
cmp
inc
lea
add
mov
cmp
push
cmp
mov
push
push
and
push
pop
or
xor
inc
ficomps
jbe
mov
or
popf
xchg
mov
mov
mov
jbe
push
shrb
and
sub
cmp
adc
and
or
mov
ret
int3
or
jne
dec
dec
xor
mov
add
push
add
sub
or
sub
cmp
add
ja
push
test
jo
inc
dec
mov
movsb
or
and
xor
fisttpll
pushf
insb
les
sub
and
arpl
push
mov
dec
inc
testl
inc
adc
cmpsl
repnz
adc
xorl
lods
jecxz
dec
sub
or
push
dec
mov
add
negl
pop
andl
out
es
imul
shll
xorl
mov
inc
addr16
dec
test
sub
movsl
or
xchg
and
push
adc
ret
js
pop
push
orl
dec
leave
mov
je
out
sbb
lcall
and
aam
lret
push
sbb
popw
es
les
xor
sub
xchg
xchg
jge
mov
mov
xor
xor
inc
lds
adc
jg
pushf
cmp
adc
pop
sbb
mov
in
imul
int3
test
dec
dec
sbb
imul
test
pop
and
shlb
scas
stos
or
mov
pop
fcoms
push
out
push
filds
ja
scas
add
push
or
pop
or
fsubl
cld
jl
pop
imul
out
fcmove
xor
dec
sub
imul
cmpsl
jns
add
pop
dec
or
lea
push
cmp
stc
push
sub
adc
and
push
inc
or
pop
xchg
pop
or
aaa
sahf
pop
adc
gs
mov
sub
add
sbb
xor
xor
pop
mov
add
pop
xchg
clc
or
mov
sbb
dec
or
or
sbb
aam
pop
rorl
dec
dec
fadd
test
add
jg
ss
addb
adc
push
and
or
xor
and
jbe
loope
inc
sbb
cmp
mov
mov
xor
mov
pusha
cld
mov
jo
ficompl
adcl
push
sbb
push
push
aaa
inc
xchg
sbb
push
push
sbb
pop
dec
push
mov
lock
push
or
push
je
push
add
orl
mov
push
sbb
sbb
ds
int
ja
shr
imul
push
clc
sarl
hlt
cmp
inc
ljmp
cld
lock
call
stos
cld
sub
mov
lds
repz
inc
and
sbb
aas
call
ret
push
push
lret
push
add
ljmp
mov
aaa
test
mov
aas
inc
les
inc
sbb
push
and
xor
cwtl
mov
data16
xchg
push
rorb
clc
stos
insl
sub
lcall
push
xor
pop
dec
mov
push
push
cli
sbb
jne
inc
call
mov
sahf
lcall
add
leave
test
add
adc
rolb
in
xchg
cmp
adc
ss
in
mov
mov
test
sti
jl
test
adc
inc
cmp
adc
addl
sub
mov
cmpsl
and
push
or
mov
mov
add
xchg
not
pushf
dec
rol
pop
xor
aas
push
sbb
cwtl
pop
out
out
add
push
rcll
xor
push
xor
inc
sbbl
or
enter
mov
xchg
lods
or
sub
pop
push
xor
inc
in
sub
inc
clc
dec
sbb
dec
insb
sub
or
imul
sbb
add
inc
jmp
add
out
lods
push
addb
imul
mov
leave
add
decl
or
lods
ret
stos
or
xlat
pop
aaa
xor
push
lods
fiadds
daa
sub
xor
ljmp
adc
pusha
mov
mov
sarb
jb
and
mov
pop
inc
sub
icebp
pop
or
fsubrp
xor
adc
mov
add
scas
cmc
imul
push
push
ss
inc
sbb
inc
pop
add
test
lret
cmp
xor
js
popa
mov
push
jo
jmp
or
push
inc
call
cltd
popa
cmp
jmp
mov
push
ret
ret
add
mov
sub
cmp
cmp
repnz
ficoms
jmp
add
add
aad
jno
dec
mov
adc
adc
jp
pop
xchg
adc
mov
dec
sub
push
pop
jne
pop
loopne
push
mov
or
adc
test
sbb
push
pop
shrb
insb
idiv
rep
bound
sub
mov
jmp
sub
jae
inc
shl
loope
and
mov
jo
sbb
andl
adc
adc
in
imul
push
loope
pop
mov
and
push
mov
mov
xlat
add
push
loopne
adc
push
xor
data16
inc
sub
mov
lods
dec
adc
cld
stos
cmpsb
loopne
loopne
cmp
inc
mov
xchg
testb
sbb
mov
jnp
inc
xchg
push
mov
jo
enter
mov
xor
test
and
andl
aaa
icebp
fs
sub
and
push
jb
clc
push
sar
push
xor
add
movsbl
in
and
inc
ljmp
xor
hlt
add
add
mov
mov
jmp
xor
test
jl
inc
and
pop
fcmovnbe
and
cld
sub
int3
ds
cvtps2pi
jo
insl
adc
mov
mov
inc
rolb
call
fstpt
xor
mov
lret
loop
js
rolb
adc
push
push
std
mov
push
insl
call
push
out
stos
mov
dec
xchg
adc
mov
ljmp
call
mov
mov
orb
mov
int
ret
and
pop
insl
jge
fdivr
loope
xor
cmp
ret
mov
lock
xor
inc
rolb
mov
adc
mov
adc
arpl
mov
fistl
cmp
xor
or
sbb
mov
enter
dec
push
sbb
adcb
and
sarb
dec
jne
or
decb
inc
addl
push
movsb
loope
add
sbb
or
pusha
and
es
jae
push
aas
pop
shll
and
cmp
ljmp
loope
or
xor
or
and
pop
cltd
ret
std
mov
outsb
push
jo
add
dec
out
push
pshufw
sub
cmp
ret
adc
call
pop
or
pop
adc
add
shll
mov
cld
xor
dec
mov
add
xchg
in
jae
xor
adc
mov
pop
mov
jle
or
push
rorb
sbb
pop
clc
adc
add
int3
adc
lea
call
inc
mov
data16
cli
add
jnp
testb
xchg
stos
mov
add
push
dec
dec
cmp
pop
add
pushf
test
sbb
pop
dec
sub
adc
shll
jl
or
cmp
and
decl
cmp
ja
sub
or
cmpsl
and
fldcw
dec
or
dec
adc
dec
outsl
jmp
mov
xchg
rol
add
cmp
jecxz
clc
jbe
or
add
push
or
dec
inc
mov
push
cld
pusha
in
inc
ret
pop
loopne
je
sub
jecxz
out
add
movb
pop
hlt
repz
mov
mov
mov
pop
rorb
pop
lea
add
dec
mov
pop
sarb
sbb
or
and
ja
popa
add
testb
lock
push
in
out
fmull
ror
inc
mov
xor
cmp
fs
pop
add
cmp
in
mov
jns
popa
and
lea
fwait
data16
xor
mov
int3
or
add
adc
push
sti
orl
cmc
inc
xor
loop
shlb
icebp
iret
xchg
pop
sub
rclb
sbb
rcrb
or
pop
add
call
add
rorl
and
shlb
sbb
daa
pop
shl
push
shrl
sbb
enter
aad
mov
arpl
dec
add
jne
sub
outsb
sar
jp,pn
push
pop
mov
cmp
add
mov
jae
jb
pushl
mov
or
jp
ret
jmp
xor
jae
adc
push
and
movsl
cltd
pusha
adc
loop
pop
test
imul
xor
or
adc
cmp
cltd
mov
aam
inc
mov
movsb
adc
cmp
mov
sub
cmpsb
cltd
fs
sub
adc
cs
inc
and
shlb
push
lcall
gs
push
jmp
out
cmp
and
mov
dec
add
xchg
sbb
mov
jb
pop
enter
sbb
inc
loope
subl
mov
ss
adc
lods
dec
dec
sub
arpl
cmp
jbe
and
ja
daa
fisubrl
sbb
cmp
in
mov
fisttpl
arpl
ja
adc
and
jnp
or
sub
xchg
add
sbb
ja
cmp
mov
add
nop
and
daa
cmp
outsb
and
dec
das
jo
jle
addb
or
sbb
mov
adc
popl
add
push
xor
and
cwtl
cmp
add
xchg
jbe
xchg
push
adc
push
mov
fwait
mov
push
out
lea
insb
mov
dec
sub
lahf
mov
mov
mov
outsl
or
lret
jmp
pop
enter
insb
and
pop
enter
enter
pushf
and
pop
enter
fsubl
and
enter
in
add
adc
daa
inc
add
nop
add
jo
add
nop
sub
in
or
jmp
push
sarb
pop
push
in
inc
push
aas
pop
jb
push
jne
cmp
or
cmp
lahf
je
and
dec
push
inc
and
xchg
cmpl
cltd
imul
fdivrl
add
and
or
dec
mov
adc
lea
lock
jle,pt
lret
dec
cmpsl
in
mov
fbstp
or
movl
adc
addl
xor
or
or
repnz
xchg
or
pop
adc
lea
add
inc
adc
mov
mov
mov
pop
or
movsl
imul
xchg
push
lods
dec
sub
sbb
push
imul
inc
dec
or
mov
jmp
andb
cltd
adc
or
jge
loopne
inc
mov
mov
out
adc
xor
push
mov
sbb
jnp
orb
mov
inc
add
je
outsl
js
ds
pop
fildl
fildll
ret
dec
mov
push
fcomps
xchg
shrb
leave
nop
hlt
mov
aaa
lock
add
test
push
pop
ja
add
cmp
stos
lods
jo
pop
pusha
cmp
add
push
inc
daa
mov
es
mov
adc
and
inc
sub
dec
ds
cmp
repnz
lock
xchg
mov
lods
pop
sbb
stos
mov
push
or
dec
lods
adc
adc
mov
jne
and
xchg
stos
loopne
mov
add
inc
pusha
xor
orb
add
sbb
mov
sub
xchg
je
aam
bound
sbb
sub
sbb
sbb
imul
mull
filds
daa
jmp
xchg
jg
pop
sbb
sub
cmpsl
dec
movsl
pop
dec
mov
jmp
andl
and
cmp
test
cmc
popf
adc
adc
sbb
adc
push
leave
add
lock
sbb
lock
das
pushf
test
sub
sti
jg
push
add
jnp
ficompl
jle
mov
les
fsubl
nop
xor
inc
out
scas
das
addl
sub
loopne
movsb
cltd
mov
js
sbb
leave
pop
movsb
pop
jmp
rolb
sbb
pop
movsl
push
or
je
fld
dec
push
or
inc
mov
mov
testb
add
cmpl
dec
fstpt
cs
int
repz
movsb
and
jno
loop
push
das
or
shlb
push
rclb
sbb
mov
iret
xchg
fsubrl
xor
add
hlt
test
sbb
pslld
loopne
or
test
push
add
xor
xchg
add
les
call
pop
mov
push
mov
aas
outsb
bsr
and
pop
sbb
sub
adc
sub
xor
xchg
pop
or
xor
inc
pushf
add
or
mov
shl
fstl
jb
jo
pop
repz
std
xor
nop
movsb
sub
stos
cmpb
filds
lock
aas
or
adc
ds
rcrl
lock
xor
je
lock
rorb
mov
mov
push
add
dec
dec
inc
and
push
push
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
mov
or
bound
je
stos
mov
pop
sub
inc
cmpsb
cmp
scas
cmp
jge
mov
pop
and
stc
iret
sti
sbb
xor
je
cmp
je
mov
pop
daa
sbb
lcall
iret
and
cs
and
fcmovne
pop
movsl
sbb
nop
sub
and
test
xchg
orb
push
mov
push
pop
out
mov
cli
push
adc
insl
ret
mov
cmp
jl
mov
inc
mov
mov
add
add
jl
fiadds
lcall
add
push
jge
push
cmp
rcr
add
adc
adc
adc
mov
mov
dec
lock
loop
inc
push
int3
es
xlat
or
lods
loopne
mov
cmpsb
aam
pop
cmpsb
push
and
daa
sub
popf
dec
inc
mov
out
arpl
sbb
add
xchg
pop
or
jns
mov
ss
sub
or
cmp
fimuls
in
clc
push
add
mov
cld
pop
in
subb
mov
xchg
nop
mov
imul
or
decb
ds
push
rorb
jbe
xchg
cs
pop
xor
jl
pop
out
sbb
or
mov
adc
pop
lea
mov
test
sbb
cmp
pop
movsb
adc
and
sbbl
mov
lret
jo
out
mov
add
pop
push
clc
mov
or
pushf
xor
push
aam
inc
inc
push
fsubrs
inc
das
sbb
in
dec
das
xchg
mov
mov
bound
pop
adc
jns
aaa
inc
push
pop
pop
pusha
fs
sti
int3
dec
or
or
add
sbb
push
div
roll
ret
jp
mov
push
out
mov
sbb
movsb
mov
cmp
sub
lret
sub
xor
add
aad
sub
out
inc
insb
out
roll
adc
es
sub
lds
or
and
clc
jmp
mov
repnz
dec
sbb
jl
daa
dec
sbb
test
cmp
sub
insl
mov
pop
add
lret
push
push
push
cmpsl
and
push
push
or
sbb
jne
ficompl
fs
pop
rclb
ret
sbbb
jmp
test
and
mov
sub
sbb
sbb
adc
outsl
fistps
push
sbb
push
outsl
rol
mov
outsb
sbb
test
lods
xor
dec
shlb
movq
loopne
push
jbe
jmp
outsl
inc
cmp
por
inc
and
pop
cs
add
jnp
adc
fwait
xchg
shll
stc
push
xor
jl
add
fucomi
mov
mov
std
sub
dec
insl
push
lods
jecxz
fld
mov
and
es
or
in
test
cmp
dec
sbb
andl
inc
sub
fwait
jo
sbb
movsl
movsb
push
loope
or
or
imul
lcall
pop
push
loopne
add
or
or
sub
roll
addr16
fdivl
mov
imul
sbb
test
pop
leave
or
add
dec
in
and
daa
je
cmp
adc
push
adc
clc
push
pop
push
testb
dec
pop
sbb
lods
push
mov
and
jp
lds
inc
adc
dec
or
jne
mov
and
in
mov
mov
jle
sahf
dec
mov
xor
je
jns
mov
xor
popa
and
lock
xchg
mov
jne
push
repnz
mov
pop
pop
jmp
and
mov
andb
pop
fs
xor
sbb
in
or
insb
inc
mov
andl
cmp
dec
je
rcr
jnp
add
aad
xchg
js
daa
mov
push
movsl
lea
jmp
sbb
jno
pop
fdivrl
sbb
push
mov
jae
jecxz
adc
dec
inc
out
jnp
stos
and
fnstsw
dec
mov
sahf
dec
mov
push
xor
in
fcomps
jnp
loopne
add
add
fdivrs
xor
ja
lret
cmpsb
mov
mov
je
xchg
push
inc
out
orl
jle
into
mov
add
mov
mov
repz
loopne
cmovbe
or
push
xchg
jne
and
inc
ja
pop
cs
push
stc
pop
mov
push
add
rcll
orl
test
mov
jl
clc
push
hlt
jg
mov
mov
push
sub
and
imul
inc
pop
jmp
dec
push
scas
lock
dec
orps
adc
ss
adc
movsl
loop
xor
sub
out
xchg
mov
or
sub
lea
or
xchg
xor
add
adc
jne
rorb
push
push
adc
mov
pop
xor
jns
xor
adc
shrl
or
in
mov
adc
call
mov
mov
or
sbb
dec
cmp
insb
add
or
sbb
pop
cmc
add
mov
mov
dec
inc
push
ret
pusha
lea
test
and
jne
push
push
push
dec
mov
jae
pusha
scas
mov
cmpsb
mov
cmp
shll
add
inc
pushw
shlb
push
or
jmp
lea
sbb
and
xchg
pushf
shll
jecxz
sahf
loopne
pop
sub
loopne
push
rolb
stos
add
jmp
or
mov
lret
sub
push
and
or
xchg
ret
mov
pop
push
push
adc
fldl
out
jmp
cmc
ficompl
pop
stos
cmpb
jl
add
push
pushl
jae
lret
jae
xchg
or
sbb
xchg
outsb
or
pop
xchg
mov
or
dec
or
mov
incl
sub
rcrb
test
add
dec
nop
pop
notl
add
mov
sbb
adc
mov
and
adc
stos
sub
loopne
push
scas
push
out
mov
adc
push
pop
je
fldl
seta
sbb
dec
in
data16
sub
aaa
adc
adc
jne
cmp
iret
iret
push
divb
or
jne
or
jne
or
cld
jmp
out
lret
andl
je
test
sar
add
outsb
jmp
cld
cmp
and
push
push
aas
inc
loope
out
mov
lahf
leave
and
andl
mov
lea
fstl
jecxz
inc
sbb
mov
mov
mov
add
and
xlat
or
rorb
sbb
dec
jg
push
dec
lcall
mov
cwtl
or
lcall
js
aam
adc
or
pop
add
aam
cmc
shl
push
rcrb
mov
inc
push
sub
mov
sti
movsl
pmaxub
mov
push
push
sbb
das
inc
sbb
sub
ret
add
jecxz
xchg
add
sub
sub
pusha
add
jb
cs
nop
test
or
add
dec
sub
push
jbe
shll
ficoms
test
sbbl
nop
aad
mov
lock
test
cmpsl
mov
out
adc
pop
push
push
add
add
shlb
bound
adc
mov
or
rorb
punpcklbw
pop
leave
fdivs
add
sub
add
cld
adc
add
push
iret
mov
adc
xor
inc
ds
nop
xor
sbb
lods
add
jl
push
add
adcl
je
stos
mov
imul
and
js
pop
mov
add
push
xor
pop
adc
xchg
jbe
test
nop
mov
inc
aas
add
cmp
mov
addl
imul
push
or
fs
inc
data16
add
or
sub
pop
nop
fld
imul
push
inc
xor
push
stc
imul
enter
push
fldl
movsl
shrb
or
inc
xchg
xchg
or
or
sub
mov
fmuls
xor
pop
or
cltd
nop
fsub
push
ss
bound
gs
inc
es
sbb
adc
cwtl
inc
pop
xor
lret
adc
and
rclb
mov
add
sub
xor
xor
dec
int
mov
xor
ds
in
cmpsl
and
jl
adc
sub
rcrb
or
pop
push
xchg
cmp
jp
inc
mov
repz
push
ljmp
js
sbb
mov
push
int
test
inc
and
gs
sahf
xor
cmpsb
fcompl
or
add
inc
jo
mov
cmc
mov
bnd
mov
fistpll
repnz
add
add
inc
xor
je
mov
cmp
bound
ja
lock
cmp
jl
call
push
inc
xor
stos
inc
pop
pop
dec
adc
jo
js
adc
es
arpl
mov
add
add
add
pandn
xchg
outsb
adc
push
cli
xor
or
mov
mov
nop
dec
in
adc
push
lret
int
cmp
inc
in
inc
lods
imul
dec
adc
adc
push
insl
imul
inc
mov
das
ret
cmp
fadds
pop
pop
mul
cmp
fmull
push
cmpsb
or
test
out
ficoml
lods
inc
pushf
aaa
ljmp
arpl
and
call
shlb
xchg
xorl
movsb
fwait
lods
cmpsb
mov
dec
add
test
fstps
jnp
jne
xor
ljmp
push
xchg
shrb
jp
mull
loope
mov
sub
cmp
mov
inc
add
mov
push
insl
ret
mov
mov
loopne
xchg
sbb
push
shlb
and
mov
in
or
xor
movsb
push
or
and
inc
clc
testl
int3
cmp
or
in
mov
add
adc
cmp
popf
pop
adc
jb
pop
enter
dec
cltd
je
les
add
insl
imul
gs
mov
and
mov
insl
lea
push
jbe
dec
test
loopne
out
enter
adc
sub
mov
push
pop
sbb
je
mov
cmp
clc
call
je
addl
arpl
movsb
and
push
push
leave
pusha
and
cmp
rolb
dec
ss
xor
push
xchg
push
pop
jo
jmp
outsb
addb
outsl
pop
lea
sti
or
roll
jnp
cmpsb
adc
add
push
outsb
dec
add
sar
push
cmpb
ret
jne
jbe
jo
cmpsb
pushf
or
add
ror
adc
and
js
clc
and
les
js
pop
scas
lds
mov
push
clc
and
or
out
pop
or
sub
mov
mov
inc
mov
mov
ja
or
lods
adc
daa
fs
cmp
xor
add
cmpsb
push
in
add
mov
push
cmp
push
loope
les
je
rorl
test
cmp
stos
movsl
push
xchg
or
rcrl
push
stos
xchg
addb
mov
or
jnp
fmuls
andb
or
movsl
and
movsl
popf
clc
and
iret
loop
sbb
adc
mov
pop
xor
insl
mov
xor
movsb
in
jo
jnp
adc
push
insl
push
mov
daa
data16
fiaddl
nop
xor
mov
or
punpckhbw
aaa
cmp
add
cmp
jp
and
or
mov
popf
cmp
aam
frstor
push
movsl
mov
sbb
cmp
push
sub
ljmp
lock
sbbb
push
inc
and
std
shlb
les
sarb
sbb
inc
ret
xchg
push
stos
mov
adc
inc
pop
xor
repnz
adc
pop
pop
xor
outsl
and
shrl
testb
xlat
andb
in
rolb
jb
fwait
sub
push
idivb
pusha
leave
inc
popa
pop
mov
pop
mov
int
cmp
mov
lea
jl
sub
loopne
add
mov
or
inc
or
xchg
cli
je
mov
xchg
nop
add
cmp
stos
mov
or
xor
stos
mov
pop
inc
jmp
bound
into
inc
sub
ja
test
ret
ljmp
out
add
stc
adc
xor
xchg
pusha
add
out
dec
sbb
stos
inc
and
and
xor
push
mov
add
xor
cld
popa
repnz
pop
pop
add
mov
add
add
xor
test
dec
lods
fdivp
cmpsl
lea
dec
add
ret
dec
dec
mov
push
add
popl
xlat
xor
shll
inc
aaa
rclb
sbb
jmp
clc
into
fcomps
sub
adc
imul
insl
xor
push
jns
dec
lea
aam
dec
stos
scas
dec
push
and
dec
addr16
add
inc
fdivs
push
lcall
jo
push
and
adc
pop
push
test
addr16
mov
sbb
add
dec
imul
leave
add
adc
mov
mov
push
das
sub
inc
push
xchg
lods
popa
fnsave
pop
lcall
push
jb
jge
das
xor
sub
push
enter
jnp
adc
push
xor
mov
add
inc
xchg
daa
sti
inc
pop
pop
sbbb
jle
jg
xchg
out
cli
cmp
stos
mov
mov
push
mov
ret
lret
adc
les
into
cwtl
inc
add
rol
testb
imul
jmp
sbb
add
mov
mov
add
mov
divl
mov
sbb
addb
or
je
movb
enter
xor
shlb
push
jle
sbb
enter
mov
mov
mov
shlb
push
loopne
leave
jmp
sbb
push
mov
movsb
push
and
xor
push
xchg
xchg
mov
push
clc
or
pushl
xor
rolb
lds
cmp
test
push
addb
pop
sbb
or
push
sbb
repz
iret
test
mov
push
aam
add
fwait
shlb
dec
add
dec
sub
push
nop
cmpsl
push
test
js
test
js
pusha
inc
push
or
and
cltd
xor
add
ret
mov
dec
dec
cwtl
cmp
nop
push
xchg
in
out
push
pushf
pop
pop
mov
andl
daa
and
movsb
jb
jo
pop
enter
orl
xor
iret
dec
in
inc
movsb
or
cmpsl
lods
dec
daa
xorb
push
adc
jns
dec
movsb
ljmp
sub
xlat
and
sbb
data16
mov
mov
pop
sub
out
push
je
mov
add
push
cwtl
shlb
jne
jo
and
sub
and
mov
sbb
sbb
cmc
sbb
push
mov
pop
or
pusha
mov
or
add
fsts
int
and
dec
add
es
clc
dec
data16
jns
andb
and
xor
or
mov
pop
mov
test
pushf
and
lcall
adc
xchg
sbb
inc
push
and
repnz
and
and
mov
and
es
xchg
push
daa
and
and
sbb
xchg
inc
mov
pop
scas
sbb
add
mov
cli
imulb
push
enter
sti
sub
sub
mov
lret
sbb
insb
imul
loope
cmp
xchg
cmp
sbbb
adc
lods
mov
loope
mov
lret
add
into
mov
jp
mov
and
sub
insb
fdivl
test
lahf
and
into
mov
xor
jge
popf
mov
mov
loope
mov
loopne
dec
add
jecxz
jp
fstps
repz
cld
jnp
loopne
jmp
jl
pop
and
add
add
orb
inc
clc
ljmp
shlb
cmp
adc
mov
nop
add
xorl
mov
or
push
and
dec
ljmp
ret
cli
mov
add
hlt
add
cs
rcll
sti
or
jmp
sti
cmc
adc
int3
and
pop
cmp
push
xlat
enter
popa
in
int3
mov
sub
push
pop
test
mov
jne
add
or
loopne
cld
addr16
dec
xor
scas
push
orb
lock
inc
pop
add
bound
and
xchg
push
adc
add
adc
dec
ja
sub
mov
push
xchg
inc
sub
xchg
add
and
nop
sub
or
jbe
mov
mov
push
mov
nop
jne
or
cmp
mov
aaa
outsl
ja
push
cmp
std
add
lock
jecxz
xchg
xor
or
xchg
xor
pop
rolb
rclb
adc
xchg
jo
adc
jb
sub
or
push
xor
mov
add
inc
adc
jne
add
daa
and
xchg
repz
cmp
jae
fidivs
loop
adc
pop
jp
jp
adcb
fs
ret
mov
mov
mov
push
sub
loopne
or
jmp
imul
rclb
mov
pop
pop
icebp
jp
mov
aam
or
push
cmp
je
xchg
xchg
mov
xor
sbbb
sbb
xor
test
push
xlat
and
cltd
sbb
mov
adc
xor
xchg
cmc
pop
jne
jmp
fnstsw
sti
fwait
or
fldl
loopne
les
adc
ret
and
dec
add
xor
dec
rol
orb
jae
add
in
xor
test
pop
fcomp
aaa
sbb
fsubrl
push
inc
dec
es
jae
fildl
sub
out
out
cmp
push
add
out
add
fsubl
pop
fsub
pop
fsubrp
std
in
cmc
mov
cmc
into
rclb
clc
pop
adc
aam
jg
add
and
xor
push
rclb
scas
add
lds
cmp
je
xor
dec
roll
es
add
aam
sahf
xchg
xchg
out
add
jmp
sbb
jl
sahf
pop
jns
lret
sub
push
fisttpl
push
sbb
sub
sbb
jbe
fmuls
sub
dec
in
ret
or
aas
fistps
add
push
push
and
add
pop
dec
iret
negl
mov
movsl
mov
cmp
adc
ss
mov
out
mov
mov
sbb
in
fistpl
shlb
and
add
rcrb
lock
push
lock
ja
or
sahf
inc
or
sub
and
mov
rcll
push
scas
adc
and
push
push
xchg
adc
mov
and
popa
xchg
out
push
cli
jmp
aaa
leave
adcl
sbb
inc
xor
lret
sbb
cld
pop
pusha
and
push
push
fs
adc
insb
xchg
xor
push
jecxz
repnz
mov
ret
mov
add
int3
inc
mov
jns,pn
or
push
ret
add
notb
xor
and
repz
push
sub
inc
xor
xor
adc
and
leave
and
pop
sahf
xchg
xor
ds
in
into
adc
dec
enter
dec
out
and
fdivl
ds
lock
dec
jl
enter
or
punpckhbw
sub
mov
xor
push
cld
nop
cmp
push
pop
repnz
fildl
adc
dec
pop
in
sahf
cmp
and
push
cwtl
inc
mov
in
popf
push
cmp
and
lea
sbbl
iret
repz
mov
out
lcall
cmp
out
sahf
dec
pop
xchg
cmpsl
mov
jns
jmp
or
iret
repz
inc
push
bound
repz
test
sahf
out
cmp
sti
or
sbb
jns
push
jb
adc
add
xor
push
pop
popf
and
push
mov
in
fildl
xor
mov
in
adc
pop
mov
inc
aas
push
adcl
loop
xchg
inc
ret
xor
mov
mov
pop
andl
push
xchg
or
mov
in
cltd
fcmove
add
inc
inc
or
adc
push
jnp
adc
lea
sbb
push
sbb
and
daa
push
pop
and
pop
sub
fs
pop
shrd
ret
clc
test
sub
xchg
push
xor
add
and
push
adc
aaa
and
add
push
inc
add
lock
mov
xorl
bound
loop
xchg
stos
rclb
mov
subb
push
aaa
call
sbb
mov
pusha
mov
adc
pop
addr16
or
adc
rolb
push
sub
sub
add
aaa
dec
scas
in
jmp
add
inc
sahf
or
jp
out
ret
dec
add
cwtl
cmp
ret
sbb
add
imul
je
and
sbb
xor
xchg
cmp
pop
jl
paddq
add
sub
hlt
add
mov
jnp
push
sbb
int3
xor
in
sbb
sbb
pop
loopne
call
call
mov
push
mov
aam
aaa
xchg
or
icebp
in
sub
in
jns
push
out
loope
pop
pop
sub
push
xor
ja
int
add
inc
jle
adc
push
xchg
dec
test
rcll
ljmp
pop
xor
xor
push
add
pusha
cltd
add
movsl
fiaddl
and
ret
or
in
stc
or
in
out
add
ret
sub
pop
inc
push
sub
sbb
loop
cmp
pop
and
inc
or
add
push
sbb
loopne
adc
add
pop
adc
push
popf
push
ret
mov
lds
fs
dec
adc
dec
xchg
cltd
dec
push
add
leave
repz
push
push
sub
sbb
cmp
sub
cmp
mov
mov
pop
divb
adcl
nop
dec
mov
nop
mov
mov
shrb
sbb
data16
movsl
sub
pop
sahf
xor
adc
sbb
out
add
inc
insb
dec
adc
adc
test
stos
cmpsl
mov
into
mov
dec
movl
leave
lock
adc
stos
ret
scas
mov
shr
adc
sbb
in
mov
lds
adc
xor
sub
adc
cmpsl
jo
nop
cld
sub
mov
ret
sbb
adc
push
pusha
adc
pushf
and
push
adc
push
stos
ret
mov
push
adc
adc
dec
or
sbb
in
aaa
or
xlat
jno
data16
or
or
jl
or
push
enter
add
add
and
lods
bound
andl
dec
lods
sbb
or
adc
nop
sbb
loopne
add
stos
push
je
insb
mov
es
add
sbb
pop
xchg
push
mov
or
push
and
mov
push
stc
pop
fs
adc
ret
stos
sub
in
cltd
dec
iret
add
cmc
pop
les
mov
inc
notl
pop
pop
daa
addl
adc
adc
inc
mov
add
xchg
cmp
or
scas
das
call
xchg
dec
pop
leave
or
stos
sbb
enter
push
add
mov
in
push
add
or
js
lods
pop
and
add
sbb
push
enter
adc
add
xchg
das
pushf
sbb
sbb
push
pop
add
call
inc
add
add
inc
repnz
adc
push
mov
or
stc
js
and
mov
mov
mov
fsubrl
add
xchg
add
add
or
or
fcmovnb
lret
stos
mov
roll
and
push
jg
mov
scas
or
sub
adc
xchg
sub
outsl
pop
pushf
push
addl
pop
sbb
mov
jno
punpckhbw
add
popa
dec
lods
sbb
fdivs
sub
in
pop
adcl
mov
bound
xchg
add
and
inc
add
sbb
add
add
rorb
imul
jmp
push
xchg
mov
push
jnp
dec
enter
sbb
ds
mov
pop
cmp
fldcw
mov
pop
cmpsl
xor
inc
insb
jecxz
dec
insl
lds
xor
add
lods
lods
aam
xchg
rcll
inc
mov
insl
mov
adc
push
aam
mov
outsl
ja
jge
push
add
xor
and
dec
call
cmpsb
nop
and
or
add
scas
insb
dec
cltd
dec
or
test
sub
or
mov
jno
ficoml
fisubl
sbb
sub
add
jo
shl
xor
xchg
test
sub
mov
sbb
adc
dec
dec
mov
pop
data16
fs
add
ss
add
scas
ret
add
add
xchg
xor
scas
repz
jl
cmp
sbb
mov
pop
sub
int
imul
add
inc
and
faddl
inc
arpl
in
fildl
insb
add
dec
push
mov
mov
jae
shlb
repnz
push
jp
add
push
adcb
iret
in
and
test
or
dec
aaa
je
or
push
sbb
sbb
adc
pop
push
push
mov
push
lea
add
aaa
shrb
adc
pop
ret
push
rclb
imul
imul
pop
outsb
inc
das
call
or
jp
inc
cmp
sbbl
sbb
js
and
loope
mov
jno
mov
sbb
das
or
mov
lea
xlat
ljmp
add
out
xchg
inc
ljmp
inc
and
and
or
jmp
loopne
fisttpl
and
xor
inc
sbb
push
xor
pop
add
cltd
aaa
sbb
imul
pop
iret
push
enter
fmul
movsb
xor
int3
shr
inc
inc
pop
inc
scas
sub
arpl
add
push
ljmp
sbb
das
mov
movsb
mov
insb
pop
sbb
or
popa
cmpsb
lcall
fdivr
jle
repnz
and
rorl
ret
or
adc
jl
xor
jmp
cmp
jl
or
sbb
popa
jp
adc
idivl
xor
jle
cmp
je
mov
mov
push
add
inc
jmp
movb
inc
incl
mov
push
pop
cltd
idiv
sarl
in
ljmp
jno
sub
cld
mov
mov
jno
mov
in
cli
popa
cld
dec
ret
push
dec
movsl
and
push
addl
push
nop
cltd
test
sub
cmp
pusha
dec
lret
hlt
jmp
sbbl
movsb
push
dec
call
inc
push
push
leave
cmpsl
jb
in
in
hlt
decb
jmp
or
and
pop
push
xchg
mov
dec
fsub
mov
daa
cmp
nopl
push
push
and
ret
pop
cmp
cmp
fs
popa
xor
icebp
adc
and
dec
dec
shll
mov
test
in
cmc
cmpsl
pop
push
les
push
pop
dec
adcb
add
push
push
rcrl
mov
insb
and
sti
rorb
hlt
mov
call
aam
or
enter
mov
cmpsl
je
addl
mov
sub
sbb
xor
mov
or
push
and
mov
arpl
xchg
sub
cli
lock
pushf
adc
sub
or
movsb
rcll
and
lods
adc
sbbb
sub
sbb
sbb
call
sahf
mov
dec
or
push
je
sahf
dec
inc
adc
push
fbstp
sti
dec
or
js
push
pop
popa
imul
ss
jbe
jge
xchg
divl
push
pop
push
push
sbb
cltd
les
stc
sbb
rcrb
and
fimuls
push
dec
dec
out
xor
push
shll
pop
in
ss
and
fadds
xor
bnd
pop
fmuls
rcrb
and
enter
ficomps
out
inc
and
leave
dec
jae
pusha
shlb
int
repz
and
loopne
xchg
rolb
loop
mov
pop
test
adc
jbe
pop
test
xor
jo
jnp
in
mov
inc
sahf
out
mov
jns
sbb
daa
add
dec
dec
xchg
movl
sub
jge
xor
xchg
sbb
push
dec
jb
pusha
cwtl
enter
dec
nop
pop
push
sbb
sbb
push
andb
mov
pop
sbb
js
out
inc
cmp
leave
mov
push
xlat
lods
adc
xor
fiaddl
xor
call
dec
repnz
inc
fsubr
call
ret
jl
mov
in
sub
nop
int3
imul
adc
push
xchg
mov
push
mov
aaa
sub
mov
clc
decb
mov
add
pop
inc
lea
ret
add
and
int3
jge
into
orl
jg
xlat
adc
jle
mov
nop
sbb
sbb
movsb
incb
movsb
movl
imul
lds
adc
add
ljmp
sub
das
add
jno
test
jge
push
vmovss
pop
cmp
mov
pop
cwtl
loope
adc
pusha
add
sub
mov
nop
dec
add
cmpsb
sub
or
pop
push
dec
push
in
int3
sti
mov
sbb
cs
and
or
adc
in
push
jl
orb
add
xor
nop
cmp
sbb
mov
pop
lret
aad
inc
imul
lods
push
mov
cmp
stos
jle
xor
testb
mov
mov
mov
push
stos
jmp
pop
pop
sti
mov
das
lods
sbb
jmp
rorb
inc
inc
loopne
jo
shr
add
inc
xor
and
xor
lods
lret
mov
dec
lret
into
imul
jbe
mov
dec
pop
andl
test
xchg
sub
adc
mov
test
cmp
adc
ss
adc
fsubrs
sub
loopne
dec
cmp
xor
xchg
shrb
lahf
push
cs
and
js
and
xor
adc
xor
loopne
les
add
mov
add
movsb
xor
nop
mov
push
test
cmp
adc
dec
pop
xor
imul
mov
int
jo
jmp
push
push
jne
or
gs
imul
mov
sarb
or
shlb
insl
cmp
xor
xchg
insl
xchg
rclb
sbb
imul
and
xchg
mov
fldenv
lret
inc
mov
in
and
negl
sub
mov
push
cmpb
add
xchg
and
daa
dec
and
mov
push
adc
xchg
adc
daa
add
and
lea
mov
inc
loopne
ljmp
loopne
mov
pop
ja
insb
cmpb
push
pop
fisttpll
mov
repz
testb
shlb
nop
mov
adc
push
sbb
or
mov
hlt
push
movsl
pop
xchg
mov
inc
adc
aam
xor
adc
cs
or
lock
fldenv
or
test
cmp
movsl
and
inc
xchg
inc
jmp
divl
or
stc
cmc
or
jb
dec
data16
shlb
ds
jp
out
rcrb
and
pop
adc
rorl
and
daa
jno
popl
mov
shrl
xorb
xor
jecxz
mov
cmp
push
jne
std
imul
push
loopne
rcll
push
sbb
jl
xchg
adc
xchg
cli
or
adc
es
cmp
mov
cmp
jne
mov
mov
xor
or
push
test
mov
testb
int3
or
jecxz
sub
xor
xchg
lret
cmp
mov
lea
cmc
sub
xlat
cltd
or
push
push
lock
adc
fsubs
popa
adc
xchg
pop
mov
test
sbb
push
int3
push
adc
je
cli
inc
jmp
pop
je
mov
or
loopne
push
adc
cmp
rolb
add
jmp
adc
and
pop
add
outsb
lds
or
add
popa
insl
jae
dec
pop
movsl
mov
out
push
mov
aad
cmp
ja
gs
and
add
mov
add
insl
or
sbb
mov
pop
andb
pop
xorl
xor
iret
sbb
movsb
in
adc
je
mov
cmpsl
push
cld
inc
and
sarb
sete
adc
add
cmp
or
cwtl
cmc
in
adc
daa
xchg
add
dec
or
roll
lock
cltd
loope
popa
aam
mov
sub
push
pop
lret
jmp
mov
ret
mov
call
aam
sub
lock
adc
jmp
das
mov
cmp
mov
into
adc
out
outsb
push
shrb
jae
shrb
in
xchg
sub
aam
cmp
scas
pop
mov
dec
cmp
cmp
push
xor
ljmp
cld
mov
negl
cmp
adc
cmp
movsb
dec
push
sbb
add
daa
mov
dec
sbb
cmp
movsb
or
xchg
addl
rclb
dec
cmp
inc
sahf
adc
cmpsb
adc
or
cmpsl
jo
in
and
add
jnp
stos
js
imul
or
repz
xchg
jp
or
jle
dec
bound
lock
filds
jl
cmp
jne
rolb
pop
insl
xchg
mov
xor
push
xchg
mov
je
pop
icebp
cmp
add
jo
lret
push
or
adc
adc
mov
push
xor
mov
mov
leave
stos
enter
and
sahf
movsl
insb
xchg
dec
dec
or
sbb
mov
pop
add
popa
loopne
jae
cmp
inc
sub
dec
mov
dec
push
add
lods
jbe
rolb
xchg
test
add
push
push
and
inc
in
sarl
flds
sbb
or
adc
push
push
push
or
mov
repz
sbb
aad
shlb
flds
add
lcall
roll
adc
ret
in
mov
push
and
xchg
lds
or
xchg
je
in
sbb
lret
roll
imul
test
rcrl
and
mov
repnz
aaa
test
cmp
pusha
rorb
es
rorb
pushf
pop
pop
or
add
push
or
jmp
add
inc
fadd
rorb
and
inc
aas
mov
mov
fdiv
icebp
out
push
ret
and
sbb
repnz
aam
or
or
aam
push
fwait
sbb
cmpsl
xchg
adc
mov
adc
add
iret
mov
mov
inc
das
inc
add
enter
mov
sub
repnz
and
imul
pop
iret
in
loop
cs
xor
adcl
jge
pop
insl
lea
jne
add
pop
push
test
inc
adc
cmpsb
inc
lcall
enter
adc
aad
or
test
arpl
push
ret
outsl
push
or
loop
add
mov
cltd
jne
or
push
mov
or
mov
ficomps
inc
sar
lds
fs
out
pop
shlb
inc
xor
sbb
stos
fdivrl
cmp
jg
add
jmp
into
inc
cmp
jb
xchg
mov
cld
add
mov
xor
dec
dec
mov
das
in
push
push
mov
inc
inc
xchg
add
pop
xor
mov
or
jne
lret
shl
and
sbb
ret
stos
pusha
int
subl
cmp
jle
shrb
mov
inc
adc
xor
mov
loope
mov
out
mov
add
push
cltd
jb
std
add
and
or
or
outsb
pop
mov
cmp
in
cmpsb
mov
pop
or
addl
pusha
add
cmc
dec
or
push
and
in
dec
add
or
cli
dec
sub
xor
cmp
jae
mov
mov
rcrl
push
mov
cli
jmp
sub
std
dec
add
movsl
loope
mov
and
cmc
jne
and
fimuls
repz
push
fsubl
fisubs
cwtl
loope
push
sub
pop
push
sbbl
or
inc
sub
insb
sub
aaa
fisubrs
xchg
mov
sbb
es
sbb
sti
cs
pushf
leave
sub
sub
adc
icebp
sub
mov
or
aad
sbb
mov
imul
enter
mov
mov
outsb
sbb
arpl
inc
mov
sbb
sbb
and
fst
push
testb
js
lods
sub
out
mov
inc
sub
test
pusha
jae
pusha
stos
and
cmp
xchg
rolb
in
xor
js
sbb
in
imul
push
cmp
push
cmp
pop
rol
xor
push
outsb
addl
pop
dec
or
jmp
leave
adc
jl
sahf
jge
or
xor
add
enter
adc
ljmp
cmpb
xor
std
mov
mov
or
add
mov
shrl
sub
into
and
ds
sbb
push
xor
or
addb
cmp
repz
pop
lcall
inc
lcall
push
aas
test
outsl
add
gs
and
adc
pop
and
or
pusha
rolb
insb
loope
jmp
shll
mov
enter
inc
cmp
or
aas
fimull
sub
dec
and
pop
or
pop
nop
cmpsl
rcrl
mov
pop
stos
movl
mov
sbb
xchg
sti
sbb
popa
add
decb
pusha
pop
add
orl
iret
lods
call
jmp
mov
mov
cltd
add
andl
je
fiaddl
sub
mov
mov
cmpsb
mov
mov
mov
sbb
pop
cli
pop
fld
outsb
idivb
adc
aaa
lret
stos
pop
mov
sbb
push
jae
rorb
mov
mov
push
pop
cmp
cmp
sub
xor
insb
and
scas
gs
lods
int3
push
gs
in
and
loopne
sahf
test
sub
or
pusha
nop
and
or
cli
or
pusha
insl
leave
inc
ss
mov
xor
add
lea
je
jg
xor
mov
xor
ljmp
and
pop
mov
or
pop
pop
push
or
xlat
sahf
popa
push
pop
xchg
and
outsb
pop
xor
mov
insl
cmovo
inc
cld
icebp
cmp
dec
adc
ds
xchg
sub
out
jno
in
cmp
mov
aaa
stos
out
pop
add
sbb
movsl
cmp
sub
push
mov
mov
pop
lods
nop
pop
jne
adc
ret
adc
and
sti
lret
fsubl
mov
lods
lods
les
fwait
les
jmp
adc
xchg
jne
repz
mov
adc
push
lods
add
mov
cld
pusha
clc
punpckhbw
imul
and
pusha
xor
sub
movl
imul
mov
mov
or
pop
jo
xlat
cmp
dec
add
mov
inc
sbb
sub
adc
je
pop
daa
sbbb
and
inc
pop
xchg
in
ljmp
xor
jl
int
sub
adc
loop
mov
aam
pushf
sbb
cwtl
shlb
andl
jo
jl
cmp
imul
stos
arpl
sub
or
mov
jne
inc
aas
or
nop
popf
cmpsb
fdivrl
inc
xorb
add
xor
sub
push
mov
enter
pushf
pop
lock
add
mov
inc
inc
pop
sub
mov
push
enter
fwait
shlb
or
or
cmp
add
and
nop
inc
lahf
pop
mov
decb
cmp
stos
sbbl
mov
and
or
and
inc
mov
dec
mov
sbb
inc
add
je
pop
and
aaa
ds
data16
cwtl
mov
sbb
mov
dec
and
and
xor
add
push
xlat
lds
add
jns
mov
mov
inc
mov
arpl
lea
sub
xorb
cmp
push
in
sbb
mov
mov
mov
loope
fcmovu
or
dec
daa
inc
dec
bound
mov
mov
lds
mov
push
andl
sub
orl
jns
daa
mov
scas
mov
sub
rorl
push
lock
fidivrs
jne
mov
pop
rclb
dec
jge
leave
inc
and
dec
push
or
push
cmp
pop
adc
sbb
sbb
sub
push
cmp
es
and
mov
sub
cmc
push
jmp
ds
je,pt
jnp
sbb
leave
sub
or
adc
stc
orb
push
add
adc
aas
push
in
or
inc
pop
movsb
adc
lods
outsl
add
mov
adc
jge
pushf
mov
adc
xor
jo
dec
sbb
cmpb
jno
dec
pop
in
jb
xor
dec
or
sub
add
add
mov
rol
xchg
lock
mov
and
lret
inc
push
xchg
dec
pop
dec
pop
jne
pop
cli
addl
or
pop
test
add
or
xor
pop
fsub
rolb
ja
data16
lods
cld
leave
mov
add
inc
dec
shrb
scas
sub
outsl
sbb
mov
inc
es
add
mov
sbb
jle
and
add
adc
scas
out
leave
inc
and
jge
xchg
sbb
mov
inc
sbb
js
xor
push
cmp
jecxz
xchg
dec
sbb
mov
outsl
orl
or
sbb
gs
cmp
pop
dec
cmp
nopl
jle
andb
shrb
or
add
decb
push
pop
ret
sub
push
xchg
push
or
jge
add
push
dec
andl
dec
andl
test
xorb
mov
push
add
jp
ja
or
jg
sbb
cmpsb
in
or
mov
inc
jmp
mov
roll
popf
int3
into
or
push
and
adc
popl
pop
psubw
sbb
xchg
pop
or
ja
adc
xchg
xchg
pop
cwtl
outsl
adc
sub
or
enter
pop
cmp
jns
jbe
in
inc
push
stc
push
cltd
xchg
cltd
std
decl
rorb
xchg
cmp
or
sub
je
cmp
dec
sub
xchg
cmp
jb
jmp
in
testl
fdivs
and
mov
fsubl
push
ljmp
sbb
repz
ret
mov
inc
popa
mov
mov
mov
in
mov
mov
mov
popa
test
fistpll
pop
scas
aad
or
movsl
aaa
or
sbb
les
adc
sub
pop
jl
or
test
rolb
iret
in
pop
jns
dec
test
xchg
js
rorl
and
pusha
add
pop
xchg
xor
jo
or
or
sub
mov
and
add
test
fmuls
iret
pop
sbb
and
in
test
pop
pushf
adc
pushf
adc
in
adc
fimuls
decb
xchg
sbb
inc
mov
sub
loope
mov
rcll
push
stos
cmpsl
pop
or
mov
mov
loopne
push
pop
push
cmpsb
subl
adc
mov
or
xor
cmp
and
into
sbb
jbe
outsl
adc
fdivrs
and
pop
inc
cmp
pop
sbb
push
cmp
push
fistl
cld
cmp
test
fdivr
mov
xchg
adc
test
je
hlt
inc
mov
std
mov
or
loopne
xchg
mov
std
or
repnz
int3
shlb
faddl
lea
jmp
push
add
scas
idivl
cli
add
pop
push
push
push
mov
push
mov
iret
xchg
test
mov
cmp
lea
and
ret
pop
push
je
jae
xchg
xor
jo
bound
or
mov
setb
les
outsl
cmpsl
sub
mov
cli
cmpl
jge
jb
cmp
cmp
pushl
shll
jmp
popa
fwait
shll
mov
or
ja
mov
push
lea
add
adc
mov
pop
icebp
cwtl
cmp
mov
roll
pop
mov
dec
mov
lea
adc
les
dec
dec
les
aam
lock
add
shrd
add
fadds
nop
pop
xchg
es
movsb
and
fsubrl
and
out
fsubl
cld
xchg
mov
aam
jl
pop
pusha
xchg
fsubs
and
cmp
or
in
inc
mov
arpl
jns
sahf
icebp
or
xlat
mov
ret
xchg
in
dec
sbb
ss
xor
adc
lahf
push
xchg
pop
lds
and
lcall
or
imul
loope
addr16
dec
mov
sub
adc
lods
dec
adc
jns
add
stos
inc
ret
and
or
adcb
dec
mov
xor
jge
push
cmp
sbb
xchg
sbb
mov
adc
jb
or
repz
adc
push
sbb
cmpsl
sub
xor
dec
adc
cs
adc
dec
sahf
test
push
in
and
cmp
sbb
mov
lock
sbb
sbb
jecxz
adc
adc
imul
push
pop
fisttpl
pushl
insl
add
inc
and
testl
sub
mov
in
ret
add
add
pop
inc
or
int
push
push
enter
push
push
xorb
jo
pop
or
fs
mov
jo
popf
or
test
sub
sarb
add
sbb
sbb
sbb
sbb
xorb
leave
int3
and
incl
js
cwtl
pop
and
cmp
call
sub
int3
dec
adc
xor
adcl
jb
test
and
or
add
lods
mov
mov
mov
dec
ret
push
xchg
pusha
adc
fstps
rorb
fwait
jge
imul
cmpsl
movsl
inc
sbb
add
jb
xor
das
push
movzbl
or
in
in
fwait
dec
movsl
push
jmp
jmp
mov
push
stc
faddl
mov
and
inc
dec
push
jecxz
es
popa
push
inc
xchg
inc
fsubrs
sub
add
push
sbb
add
push
dec
test
loop,pt
pop
adc
push
call
mov
lret
mov
mov
inc
push
rorb
fisttps
cli
jbe
cmpl
dec
incl
jbe
pop
cmp
jbe
mulb
popa
jno
fs
pop
pop
cld
jmp
sbb
jle
mov
sbb
leave
or
add
jbe
dec
rcl
mov
dec
dec
add
mov
std
js
ss
jecxz
pop
xor
mov
dec
nop
mov
mov
jb
mov
addb
xchg
loopne
es
xchg
add
sahf
ret
hlt
je
jmp
aaa
xor
push
mov
lock
lea
movl
or
mov
add
jbe
cltd
cmpsb
or
inc
cmp
pop
mov
int3
add
leave
leave
add
add
les
add
dec
testb
and
add
push
pushf
jne
mov
inc
sub
and
inc
outsl
xchg
jne
adc
rorl
inc
and
mov
rcrb
mov
xor
imul
or
adc
mov
mov
xchg
shl
pop
add
and
jno
push
cmpb
cmp
or
loope
jo
scas
pop
adc
add
push
sbb
jl
adc
mov
mov
lock
adc
and
rcl
ss
out
push
xchg
into
out
enter
mov
push
push
pusha
xchg
adc
or
mov
enter
pusha
das
mov
ja
fcompl
outsb
xor
enter
hlt
jle
imul
leave
push
xlat
addb
aas
test
loopne
xor
xor
dec
out
les
xchg
push
push
pop
arpl
dec
sub
jb
add
inc
and
push
or
orl
movsb
mov
or
add
ss
add
mov
and
sbb
scas
push
pop
fs
in
adcb
xor
in
std
ss
and
fdivrl
insb
adc
int3
xor
movsl
push
push
adc
iret
and
mov
adc
adc
test
inc
out
inc
push
push
ret
mov
cli
mov
add
les
aam
jmp
test
repz
cmc
bound
or
sub
adc
ret
jge
notl
lock
test
test
orl
sbb
push
xlat
cmpl
dec
imul
and
adc
jnp
cmpsb
xchg
or
sub
mov
or
rep
aad
mov
mov
pushf
bound
mov
pop
mov
test
xchg
sub
mov
sub
lahf
loop
sbb
fs
ficompl
add
mov
add
icebp
dec
mov
aas
dec
orl
xorb
mov
cmp
daa
nop
insl
jne
sahf
or
adc
pushf
ja
mov
out
inc
push
aad
add
scas
add
cmp
je
mov
pop
mov
pushf
dec
push
aam
imul
push
and
fcomps
sar
shrb
and
inc
adcl
inc
jecxz
mov
push
cmpsb
push
jmp
incl
mov
xor
imul
adc
call
test
inc
rcl
out
enter
sarb
inc
cmp
cmpl
mov
mov
out
and
or
test
cmp
mov
jne
leave
sub
stos
xor
cmpsb
inc
mov
loope
sbb
sbb
inc
sarl
clc
in
stos
sub
pop
jle
xor
js
xor
jne
clc
es
adcb
lahf
mov
sbb
movsl
cmp
adc
adc
out
out
pop
ret
push
jmp
mov
dec
js
test
adc
jmp
subl
adc
pop
xor
bound
mov
scas
cld
and
adc
push
adc
sbb
xor
shl
pop
pop
mov
gs
or
dec
call
mov
out
in
sbb
ret
or
push
sbb
dec
cmp
adc
push
push
or
push
jns
popf
mov
dec
push
lds
mov
pop
test
std
push
push
push
push
call
cmp
inc
push
outsb
sub
push
add
inc
mov
add
mov
sub
mov
mov
xor
loop
ss
jae
add
popf
push
jmp
add
test
icebp
sub
cmp
xchg
pop
in
adc
dec
jecxz
push
popa
idiv
mulb
addl
popa
pusha
xor
decb
cmp
mov
xchg
jne
mov
jnp
out
arpl
push
inc
pop
cmp
xchg
jno
xchg
jae
push
xchg
addr16
xor
inc
fidivs
xlat
mov
aaa
adc
bound
mov
fcmovb
nop
add
es
mov
loopne
cwtl
aas
push
mov
je
or
test
add
xchg
int3
mov
sub
outsl
int
call
adc
lods
sti
add
mov
mov
push
vmread
xchg
enter
jno
push
push
je
and
loope
push
out
testl
dec
imul
les
xorl
mov
adc
adc
fcmovnu
or
cmp
out
cmp
push
cmpsl
frstor
mov
or
cmp
sub
or
push
mov
dec
ss
and
push
js
ficoms
mov
lahf
and
lods
cmp
inc
add
ss
sbb
cmp
in
stc
mov
fcoml
daa
in
add
jmp
sbb
test
into
call
adc
inc
cmp
rcrb
jo
out
movb
or
cmp
mov
jmp
mov
adc
sbb
cmp
orl
std
test
repnz
sbb
mov
inc
push
add
add
nop
shrl
lock
pop
mov
sti
rep
movsw
push
lret
xchg
sbb
movsb
mov
cltd
cmp
loop
mov
adc
ljmp
ja
int3
mov
inc
mov
adc
movb
and
pop
pop
cmpb
shlb
loopne
movsb
outsb
jg
push
mov
mov
and
cld
scas
cmp
movsbl
shr
xor
loop
push
push
fimull
and
add
jb
and
repnz
cld
je
push
push
scas
lret
stc
imul
mov
insl
dec
divb
pop
inc
in
xchg
hlt
movsb
mov
xor
mov
jge
inc
add
and
adc
aam
rolb
mov
mov
and
or
popa
xchg
pop
adc
sbb
rolb
lahf
xor
fisubrl
push
mov
add
cmc
cmpsb
and
adc
daa
fdivrs
stos
or
and
cwtl
lock
test
test
sbb
mov
sahf
dec
ja
pop
and
out
inc
seto
cmp
sbbl
orb
leave
add
push
pop
out
leave
leave
or
or
jnp
or
jbe
out
out
jmp
or
por
out
out
jmp
adc
pop
adc
push
adc
dec
out
out
adc
dec
adc
aas
pop
jmp
out
out
sbb
xor
jmp
sbb
es
out
sbb
and
pop
pop
jmp
loope
out
and
or
jmp
and
fistpll
orps
push
sbb
adc
inc
push
sbb
mov
jns
enter
fsub
call
jns
add
cmp
repz
and
cs
repz
xor
cmp
iret
repz
push
pop
pusha
gs
repz
je
jle
repz
orl
mov
add
add
push
pop
or
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
mov
sbb
and
aas
add
push
mov
jge
in
ret
cli
movsl
inc
rorb
push
push
dec
xchg
rclb
adc
pop
pop
and
sbb
adc
scas
popf
sub
inc
mov
mov
inc
inc
inc
push
mov
fwait
add
pushf
mov
popf
and
mov
dec
pop
dec
sub
mov
dec
add
and
push
xlat
add
sti
cs
jae
jns
aam
adc
das
sahf
xchg
and
cwtl
test
or
test
or
mov
and
push
jp
inc
sarb
loop
inc
push
add
enter
dec
mov
xor
xor
mov
add
mov
push
add
push
and
into
inc
mov
repnz
loope
sub
xchg
push
add
cmpsb
sbb
leave
fwait
adc
mov
inc
popa
in
lock
adc
or
scas
add
push
imul
xchg
loop
jl
ret
push
push
pushl
pop
sub
xor
cltd
sbb
cmp
sub
jecxz
pusha
push
sbbb
push
xlat
and
cmpsb
outsb
mov
add
test
push
jne
push
orb
mov
or
daa
jne
lock
daa
add
clc
or
sbbl
fildl
and
mov
jge
les
hlt
fistpl
xchg
push
add
and
sbb
pop
mov
pop
mov
sbb
rclb
push
push
out
pop
std
mov
faddp
je
dec
pop
mov
lahf
cld
nop
inc
sub
push
clc
lock
or
dec
je
xchg
clc
dec
pop
cmp
in
push
xor
dec
sub
out
cmp
push
fdivrl
cmp
pop
sub
jbe
imul
and
sbb
daa
nop
mov
adc
cmp
lods
inc
inc
push
bound
sub
mov
xor
cli
mov
pushf
and
mov
sbb
into
roll
mov
rcr
mov
testl
loope
xor
ds
mov
shl
pusha
sbb
pop
sbb
xchg
add
or
dec
pop
cltd
or
xor
inc
sbb
in
pop
pusha
test
and
and
mov
mov
pop
or
loop
adc
pop
scas
add
fstpt
aam
sub
shr
ror
movsb
or
and
add
cwtl
test
outsb
dec
in
mov
adc
inc
ficoml
add
jae
aas
jp
bound
cwtl
or
fsubrs
dec
test
jne
push
pop
push
in
popa
push
nop
add
xor
je
inc
add
and
aas
push
jmp
cmc
adc
mov
fists
push
aam
arpl
or
fwait
loopne
sub
inc
enter
fsubs
add
leave
scas
rclb
scas
je
scas
pop
scas
pop
mov
push
stos
push
push
and
push
lods
rcrl
add
add
add
pop
test
mov
das
lret
xor
mov
rolb
inc
test
add
dec
xor
sub
pop
or
stos
js
add
shrb
ret
cmp
sbb
sarb
push
ds
sub
xchg
adc
mov
inc
rorb
addr16
pop
pop
negl
sub
loope
push
push
call
fisttpl
xchg
int3
aad
lock
pushf
or
ret
fisubrs
mov
add
push
add
add
mov
mov
push
sbb
add
push
ret
or
push
and
popa
push
and
adc
mov
in
sbb
xchg
popa
pop
testl
inc
pop
mov
aad
mov
fcmovu
adc
add
sub
or
test
pop
fs
jae
mov
lock
and
xchg
jo
sbb
xchg
add
push
popf
inc
fdivp
push
push
call
pop
cmp
rol
movsl
mov
lock
mov
call
jno
jmp
add
cmp
jmp
jge
jo
mov
pop
sarl
lahf
xchg
fwait
es
ss
push
mov
iret
pop
in
xchg
loop
gs
inc
arpl
or
mov
insb
lods
pop
cmpl
gs
or
ds
inc
mov
hlt
inc
add
enter
cld
inc
and
inc
aas
add
inc
movsb
jb
lret
adc
adc
cltd
movsb
fwait
sbb
sbb
adc
movb
and
add
sbbl
sub
xor
lahf
xor
pop
and
cmp
je
push
push
inc
pop
inc
dec
xchg
push
xchg
je
dec
push
pop
push
in
dec
gs
pop
pusha
xor
and
adc
adc
pop
test
mov
dec
inc
jmp
loop
dec
xor
das
lea
add
std
add
testl
cvtdq2ps
xchg
xchg
je
jl
and
inc
cs
mov
mov
scas
sub
lea
cmp
mov
add
dec
pusha
les
or
dec
jnp
push
sbbl
leave
sti
daa
sub
or
jmp
sub
sti
lods
sub
inc
and
mov
sarb
testb
imul
mov
pop
push
xlat
xchg
into
or
xor
mov
mov
mov
cld
stos
mov
pop
sti
cmp
je
or
and
and
insb
insl
dec
mov
xor
in
clc
cmp
insl
shll
int3
xchg
dec
loope
clc
mov
pop
das
sub
daa
insb
je
js
xor
mov
sbb
mov
fwait
inc
jl
insb
sub
sub
or
xchg
mov
jne
or
jns
jmp
xor
pop
scas
mov
xorb
sti
jge
add
hlt
cmp
jl
cmp
jle
mov
ss
jp
add
pop
andb
test
and
arpl
lret
fs
fstpl
push
mov
add
aas
pop
add
or
mov
ds
inc
jg
test
movsb
pop
ficoms
test
push
test
jle
je
cmp
loope
out
add
adc
inc
cmpsb
push
pop
and
add
repnz
into
xor
in
push
loope
push
bound
jge
xchg
mov
in
jbe
ret
mov
sahf
inc
aam
sub
or
add
push
pop
pop
sbb
jne
push
pop
arpl
pop
or
popa
sbb
mov
gs
insl
adc
adc
inc
iret
xor
mov
and
add
pop
xchg
adc
arpl
adc
jmp
les
push
xchg
pop
js
gs
nop
inc
jns
jp
push
xchg
repz
lods
cs
jge
lahf
stos
testl
jl
sbb
sub
loopne
adc
pushf
xor
je
sbb
clc
test
push
and
sahf
dec
or
adc
jne
int3
scas
pop
xchg
sbb
dec
mov
dec
movsl
popf
movsl
sub
sub
xor
inc
gs
rcll
jle
ret
fwait
shl
push
aaa
mov
adc
inc
aaa
adc
adc
enter
shll
inc
xchg
and
push
shlb
adc
jno
subl
add
sbb
mov
pusha
mov
loop
push
and
xchg
cmpl
pushf
jne
xlat
jmp
inc
xor
lock
leave
test
mov
mov
leave
shlb
pop
es
dec
push
rorl
fildl
dec
mov
out
imul
add
mov
loop
arpl
nop
in
xor
repz
jne
push
int3
loope
scas
cltd
fucomi
mov
or
test
cmpsl
fbld
movsb
dec
andl
adc
scas
xchg
cmp
adc
push
push
fnstenv
lea
mov
cmp
outsl
xchg
imul
fcmovb
psrlw
sbb
mov
pop
add
ret
ss
shlb
sbb
jno
imul
jb
cltd
outsl
roll
or
jb
adc
les
push
sub
cwtl
cmpsb
mov
and
lcall
std
decl
mov
xlat
frstor
pop
andl
sbb
pushf
adc
pop
pop
add
jae
pusha
adc
mov
repnz
ja
cmpsb
sub
pop
xchg
xchg
push
or
outsl
pushf
mov
loopne
test
cmc
test
fwait
jmp
jo
shlb
add
cmpsl
sti
movsb
mov
cld
into
popf
pusha
mov
jmp
pop
jbe
add
jle
nop
mov
mov
jbe
stc
mov
or
lock
cld
sub
stos
or
je
add
mov
jne
push
pop
add
jmp
bound
rorb
cs
mov
jg
adc
sub
sar
mov
inc
out
scas
sbb
cmpl
jo
gs
xchg
jle
xor
rcrb
gs
adc
cmp
cmp
push
jle
lock
in
cmc
add
arpl
mov
pop
lods
sub
or
push
inc
xchg
inc
sub
jmp
inc
ret
xchg
or
xchg
cmpsl
test
dec
icebp
inc
movl
repnz
daa
inc
xchg
rorb
push
clc
sbb
add
idivl
mov
clc
push
push
push
leave
lcall
pop
lret
lea
lea
cmp
jae
add
add
push
mov
sbb
pop
movsb
xchg
rcll
push
loop
data16
mov
pop
lock
movsbl
mov
test
push
inc
cmp
jbe
pop
jne
fsubrs
mov
or
and
push
lcall
or
imul
pop
push
aad
cmp
iret
sysexit
push
push
xorl
cmpsb
xchg
test
push
jb
jl
inc
pop
cmp
xchg
mov
xor
lea
mov
imul
xchg
adc
inc
push
inc
jmp
orb
xor
pop
ds
lock
mov
sbb
mov
jle
push
pop
jl
jns
daa
push
push
adc
mov
ret
mov
stc
dec
imul
mov
pushw
adc
es
pop
subl
faddl
loop
add
fstl
fldz
fcomp
fnstsw
daa
insl
cmc
cmp
arpl
pop
faddp
icebp
fstpl
inc
jge
push
hlt
inc
or
sub
getsec
adc
sub
loope
cwtl
clc
and
cwtl
sarb
movsl
adc
push
mov
lret
test
hlt
xlat
hlt
daa
dec
jg
pop
hlt
jl
cmp
leave
push
ret
push
lea
lods
fildl
cs
loop
and
and
test
inc
sbb
add
es
repnz
mov
push
icebp
inc
xor
mov
xor
test
movl
shrb
jmp
fldl
cmp
cmp
and
rcrl
lea
gs
xchg
test
movsl
mov
shll
popa
sub
sarb
stos
addb
rolb
lea
mov
es
inc
mov
push
mov
sti
pop
test
sbb
hlt
add
clc
es
fucomip
fldl
int3
dec
or
inc
push
cmc
fsubrl
jp
mov
mov
in
mov
or
mov
clc
imul
movsl
dec
jnp
out
int3
loopne
shr
dec
xlat
scas
adc
outsl
sub
negb
mov
or
data16
outsl
mov
push
pusha
pop
xchg
adc
mov
inc
or
mov
pop
jne
cmpl
sarb
mov
ss
sbb
xlat
dec
and
in
mov
inc
or
dec
repz
aam
add
insl
push
adc
sbb
outsb
and
jne
jmp
fcmovnu
xchg
mov
cs
imull
pop
push
dec
rcrl
fcompl
adc
cwtl
push
arpl
and
fdivrl
push
or
and
insl
rolb
nop
outsb
push
sbb
mov
rcl
add
xor
jle
push
popf
mov
jge
js
cmp
sti
and
ss
mov
or
pop
sub
add
xchg
sub
fwait
mov
cwtl
add
jb
or
aaa
outsb
add
popa
push
outsb
enter
inc
xchg
mov
mov
sbb
xchg
aas
add
push
and
mov
jb
adc
or
pop
jns
add
lods
leave
mov
sbb
inc
xchg
add
adc
inc
cmpsl
rol
lds
adc
es
xor
dec
ds
stc
call
ja
inc
and
and
movb
dec
das
xchg
lret
push
iret
add
xchg
movb
jne
movsb
jno
movsl
sbb
shlb
or
xchg
mov
inc
jae
cmpsb
xchg
loopne
xchg
push
mov
cli
test
jmp
mov
nop
pop
inc
adc
add
push
movsb
dec
sbb
pusha
or
push
xchg
rolb
xor
out
mov
pop
adc
or
adc
rol
cmpsl
sbb
jge
cmp
shlb
jb
cwtl
out
xor
int3
adc
or
test
fsubs
mov
repnz
add
fimuls
push
pop
pop
xchg
adc
cmp
dec
js
adc
imul
cmp
je
xor
push
jmp
lods
add
push
dec
ret
cmp
sub
enter
add
dec
add
cmp
pushf
and
pop
lods
jge
add
cmpsb
lods
test
lret
add
fadds
sarb
sub
sbb
pop
lock
add
mov
mov
and
stos
or
dec
ljmp
xchg
cmp
jb
mov
jae
nop
xchg
add
dec
in
outsb
popa
pop
jbe
sub
cli
push
xor
push
lret
push
mov
out
mov
add
nop
es
shlb
pop
repz
lahf
push
outsl
fucomp
push
push
push
dec
addb
mov
bound
stos
adc
inc
test
or
add
or
repnz
outsb
enter
mov
and
mov
out
cmpsl
stos
xchg
in
and
mov
cmpl
push
aam
lcall
push
add
ja
pop
and
push
call
mov
mov
inc
mov
push
je
faddl
pop
add
jb
push
lock
add
push
pop
xchg
in
pop
and
pop
movsl
xor
mov
lods
dec
loope
dec
pmovmskb
ret
jbe
and
cmc
mov
pop
adc
in
ljmp
mov
dec
mov
cmc
rcll
call
test
add
adcl
enter
stos
sbb
pop
ret
test
push
cmp
test
leave
loopne
xor
test
add
xchg
or
xchg
ud2
or
sbb
adc
rolb
or
popa
les
cmpsb
dec
dec
mov
enter
pop
shlb
js
mov
pop
push
stos
add
or
es
mov
adc
pop
lret
je
xor
mov
loope
lea
sub
xchg
add
xor
mov
test
adc
or
mov
ret
je
ja
loopne
xorb
test
fadds
imul
inc
in
repnz
bound
hlt
pop
pop
mov
call
dec
or
repnz
dec
push
push
xor
xchg
adc
inc
add
pop
sbb
cmp
dec
outsl
add
mov
push
cmp
xor
push
add
fldenv
sub
xorl
cmp
cmp
inc
jbe
add
sbb
jo
push
decb
push
sahf
and
ret
orl
pop
cmp
xchg
sbbb
sbb
push
dec
stc
ds
es
jge
dec
loop
or
inc
sub
bound
and
jo
pop
mov
mov
push
jo
nop
xchg
mov
mov
add
fildll
dec
rol
sbb
push
add
inc
cmpsb
mov
nop
lret
push
mov
jo
adc
or
jmp
addb
lds
ret
dec
loope
jmp
push
xorb
pushf
dec
in
xchg
xchg
loop
mov
adcl
aaa
mov
adc
inc
iret
xchg
out
and
sbb
push
push
add
test
test
and
push
adc
or
testb
xor
mov
test
pushf
mov
push
rol
cmp
scas
or
sbb
movhps
mov
or
xchg
xorb
pop
fwait
loopne
xchg
pop
lret
sbb
sbb
ret
mov
fistpl
cld
and
js
adc
xorl
pusha
cmp
leave
into
mov
scas
mov
mov
jo
jmp
je
mov
sbb
inc
cmpsl
add
das
jmp
add
mov
push
push
or
outsl
aam
jb
jae
cmp
adc
nop
sti
test
or
jae
je
nop
out
sub
dec
incl
in
xchg
inc
shlb
test
scas
sbb
xor
sbb
mov
ret
mov
add
adc
icebp
lret
test
mov
pop
imul
hlt
add
testb
dec
push
mov
or
mov
ja
out
inc
push
or
in
fdivr
push
inc
test
test
sbb
jne
cmc
sub
ss
jno
sbb
add
mov
push
push
push
push
sub
js
das
les
subl
xchg
adc
addr16
lods
mov
call
mov
fistps
or
push
adc
add
and
outsl
dec
sub
mov
xchg
pop
inc
or
imul
or
outsl
or
sbb
mov
inc
jne
orb
sub
rorb
xor
xor
push
adc
push
adc
or
mov
or
subl
lret
sub
sbb
xor
xor
sub
adc
pop
inc
or
lods
mov
sub
je
sbb
xchg
popa
insb
xchg
enter
pusha
pop
jo
ficoml
repz
mov
and
sub
add
cmp
sbb
subb
adc
dec
or
mov
mov
clc
dec
pop
faddl
imul
mov
push
and
dec
ja
lcall
add
adcl
mov
loop
mov
mov
adc
icebp
jmp
cmp
add
inc
popa
subl
and
push
outsb
cwtl
jl
pop
aad
lods
pop
or
cmp
mov
in
mov
pop
push
in
cmp
cmp
add
xor
out
xchg
push
rcrb
pop
test
adc
mov
rcl
cmpb
mov
dec
mov
fmul
xchg
lock
or
jle
pop
jmp
out
add
lret
imul
push
adc
cmp
sti
mov
out
fadd
xor
ret
or
imul
mov
jne
inc
adc
dec
dec
jne
mov
mov
dec
movsb
addr16
xchg
loopne
adc
cmp
lea
xchg
cmp
mov
and
aam
clc
adcb
xor
mov
xor
adc
add
sbb
shlb
push
dec
rolb
in
fs
push
push
or
and
mov
mov
adc
dec
fisubs
dec
sub
add
in
inc
imul
adc
push
cmp
clc
ja
jne
js
adc
sub
mov
daa
jo
mov
je
popf
mov
lcall
cmp
cmp
xchg
out
hlt
call
pushf
xchg
mov
jns
out
inc
jl
test
push
mov
test
xchg
outsl
dec
dec
and
xlat
dec
sahf
hlt
js
imul
mov
pop
sub
xor
or
cmp
shrb
sti
cmp
jge
push
inc
subb
jl
mov
lods
xchg
xchg
sub
pop
test
sub
or
sub
adc
mov
jnp
mov
arpl
js
add
ds
rcrl
mov
fs
imul
add
enter
dec
adc
dec
or
dec
push
push
mov
mov
insb
fucomip
jns
add
mov
push
adc
pusha
dec
xchg
xchg
mov
or
push
arpl
das
dec
xor
rcrl
pop
cmpl
loop
xor
iret
inc
mov
xchg
lea
dec
mov
outsl
sub
aaa
incb
test
mov
sbb
or
je
push
faddp
idiv
and
jne
mov
mov
jo
inc
ss
mov
lea
pop
or
jnp
push
enter
mov
imul
sbb
test
dec
mov
fbld
ret
mov
and
adc
shrl
add
mov
lea
or
js
pop
pop
cmp
jl
jl
les
pop
cmp
andb
mov
sub
scas
xor
shll
es
sub
shrb
mov
cmp
aam
inc
pushf
nop
push
push
repz
cmp
sbb
out
repnz
lods
movl
test
divl
aaa
lea
stos
addb
add
stc
test
addl
xchg
mov
mov
inc
lcall
aaa
insl
dec
cmpsl
cmp
popf
adc
mov
or
adc
adc
mov
incl
sub
pushl
jl
sar
pop
cmpb
lods
xchg
sbb
jbe
aaa
adc
jo
sub
add
pop
push
xor
insl
repnz
fmul
int3
loop
ss
shrb
or
cwtl
std
daa
les
mov
xlat
mov
and
adcl
sbb
cmp
pop
xor
sub
gs
push
push
cmp
mov
orl
adc
dec
imul
cwtl
xchg
clc
frstor
or
xorb
xorb
push
arpl
mov
cld
cld
clc
or
psrld
cmp
std
mov
loop
xor
jne
pop
enter
movsb
push
rolb
clc
add
loop
jl
or
lret
inc
mov
xchg
les
fsubrs
lea
sbb
out
je
jnp
in
jp
adc
lods
inc
sub
lea
fcomps
mov
lea
loopne
cmpb
mov
cmp
in
pcmpeqd
fimuls
fistpll
jno
pop
inc
pop
cmp
or
ffree
rorb
mov
sbb
mov
sbb
or
or
adc
cmpl
xchg
mov
mov
xor
out
pop
or
cmp
mov
inc
xor
cmpb
or
xor
cmpsl
cmp
and
fsubs
aaa
xchg
icebp
jbe
test
xchg
mov
and
aad
cmp
insb
jg
mov
pop
movsb
lods
jne
cwtl
sbb
xchg
add
add
lret
xor
std
push
stc
nop
jle
cmc
lea
fadds
adc
shl
push
pop
adc
andb
insl
xor
dec
xor
and
xor
sub
mov
test
cld
xchg
xor
pushf
outsl
jns
or
xchg
sahf
out
sbb
mov
push
push
jne
in
mov
jp
push
hlt
jl
rorb
bound
push
jecxz
mov
pop
fs
xor
fisttpll
pop
mov
push
mov
add
out
xlat
or
pop
inc
loopne
fdivl
jg
lea
push
fmull
add
or
shl
dec
inc
push
xor
ror
ret
adc
in
mov
mov
loop
movsl
lea
shll
notb
enter
and
loopne
xchg
int
xor
pop
xor
call
add
loopne
test
sbb
mov
add
into
int3
xchg
adc
or
xchg
cwtl
je
call
loop
fmuls
lods
pop
mov
mov
das
aas
test
xor
dec
loop
jp
and
push
pushf
inc
mov
cmp
xor
jo
mov
js
and
or
xchg
icebp
and
mov
or
lret
ret
out
add
push
add
xchg
sub
add
insl
and
sti
mov
dec
jl
pop
sub
sub
sub
sbb
adc
dec
adc
adc
sub
xlat
xchg
or
ja
xchg
lods
push
push
inc
or
push
cmp
cmp
or
xchg
dec
movd
push
and
or
rclb
fisubrs
add
mov
jl
aaa
xchg
sbb
xor
pop
mov
and
or
and
adc
dec
adc
clc
mov
xorl
xor
sbb
mov
jmp
pop
push
push
cmc
sbb
sub
xorb
or
int3
sahf
addb
xor
pop
dec
add
xchg
mov
les
pop
jo
std
sub
subb
cs
cltd
add
mov
js
aad
ret
jg
mov
adc
or
push
add
mov
lea
ja
ja
cmpsl
mov
cmp
ja
pop
sub
lea
and
pushf
jge
test
hlt
aad
mov
adc
adc
pop
push
pop
rcrb
imul
sti
das
push
sub
shll
inc
inc
jmp
inc
fs
xchg
lret
and
inc
mov
test
and
add
lds
mov
inc
push
shlb
or
push
test
add
mov
cld
cmp
or
sub
pusha
loope
popf
fimull
popa
dec
les
add
sarl
mov
mov
mov
scas
add
insb
push
fnstsw
mov
ret
and
popf
pop
cs
mov
mov
test
inc
in
and
cmpsl
push
xchg
push
in
pop
cmpsl
jb
pop
mov
push
mov
sbb
ss
in
jb
sbb
inc
dec
fcmove
xor
roll
les
cmp
xchg
mov
push
jmp
push
das
sbb
jp
orb
xchg
xor
ret
and
cwtl
sub
aad
pop
faddl
xchg
inc
stos
xor
or
add
adc
push
cmp
xor
and
rol
pop
jmp
enter
pusha
fmul
pop
stos
jnp
in
aam
add
daa
daa
ret
add
insb
and
push
ja
sub
loop
jo
je
stos
mov
sub
mov
sub
push
dec
clc
inc
and
xchg
or
je
mov
repz
push
xor
jle
ret
popa
sub
sbb
xlat
mov
enter
xchg
je
dec
rcr
mov
dec
les
pop
mov
mov
lahf
mov
aaa
xor
fistpl
sbb
push
add
inc
call
xchg
dec
mov
addb
sbb
icebp
lea
daa
or
push
mov
fnstcw
or
xor
dec
and
push
sub
shl
fwait
or
pmaddwd
cltd
cmpsl
jo
xor
clc
cli
subb
lahf
je
xchg
outsb
or
sub
test
mov
ljmp
cltd
mov
cmp
gs
pop
cmp
xchg
inc
fs
mov
adc
xchg
les
add
sub
pop
xor
int3
insb
or
in
shl
push
mov
xlat
xor
mov
cmp
cmp
out
cltd
stc
inc
mov
push
jbe
dec
pop
sub
shrb
push
fistpl
les
data16
dec
cmp
in
iret
lcall
ret
jne
jbe
imul
push
insb
inc
les
loope
sbb
loope
lea
mov
fcoml
pop
sub
pmulhuw
mov
add
arpl
mov
lea
mov
add
mov
push
add
jmp
and
pop
lock
cmp
dec
add
push
xlat
pusha
call
out
or
sbb
lock
test
xor
jb
adc
fcompl
test
test
add
movl
fmull
cmp
jbe
add
add
mov
xor
pop
fidivrl
shrb
pop
add
inc
push
int
add
test
mov
add
cmc
adc
add
aaa
stc
in
in
xchg
xor
push
arpl
in
aas
and
dec
sub
adc
loope
ds
adc
rolb
insl
add
push
les
test
jo
fs
push
inc
push
jl
mov
add
fidivs
out
mov
cmp
jge
les
sbb
or
jbe
or
jb
cwtl
imul
popa
and
enter
cwtl
or
into
into
push
push
sub
andl
add
sub
cmp
lahf
dec
pop
sbb
add
cltd
ret
and
out
push
adc
repnz
ds
push
inc
pop
sub
idiv
and
hlt
sbb
xchg
clc
cmpsl
push
sbb
out
int
mov
mov
mov
pushf
add
adc
bound
pop
cmp
mov
adc
pop
mov
inc
and
or
or
cmpsb
rorl
sbb
or
xchg
stos
movsb
mov
fs
sub
sbb
add
dec
insb
sar
shlb
and
es
adc
loopne
add
add
cmp
pop
cld
sbb
ficomps
push
add
jl
pop
add
rcr
pop
out
xchg
add
mov
push
push
push
add
push
or
and
or
cmp
ds
push
jmp
and
and
cmp
or
lea
js
adc
test
test
mov
pop
lret
and
and
xchg
inc
test
push
rclb
and
daa
popa
inc
xor
hlt
adc
push
scas
or
sbb
inc
pop
jo
add
mov
xor
test
das
push
in
add
call
jns
icebp
mov
loope
mov
stos
mov
mov
or
dec
sbb
mov
loope
cld
sub
push
xchg
or
ss
js
adc
andb
aam
cmp
add
xchg
cmp
sub
inc
inc
adc
xor
sub
dec
mov
movsb
or
or
dec
cmp
ret
mov
push
or
push
cmp
mov
test
loope
sbbb
lret
icebp
cmp
leave
cwtl
inc
daa
iret
hlt
nop
lds
lcall
fucom
sub
mov
jne
sbb
add
cmp
add
mov
sub
and
mov
test
adc
push
cltd
nop
outsl
adc
sub
fdivrl
arpl
sbb
cld
xorb
cmp
or
bound
mov
jns
and
sahf
cmp
cmp
push
sub
je
inc
loopne
jae
mov
push
xor
mov
mul
pop
push
pop
sub
mov
daa
imul
mov
inc
pusha
jb
dec
adc
insl
cmp
bnd
push
daa
lcall
xchg
push
cwtl
sub
or
pop
pushf
dec
dec
cmp
sbb
mov
push
movsb
push
mov
mov
mov
dec
xchg
shlb
ljmp
in
in
dec
adc
fdivrs
fs
fwait
mov
cltd
les
lds
test
movb
jge
add
dec
or
xor
mov
ss
lret
pushf
mov
inc
xchg
pop
ret
add
outsl
mov
jmp
xor
cld
push
push
and
adc
mov
shr
fs
jne
xchg
push
push
adc
push
sbb
sub
push
orl
nop
or
lcall
mov
fiaddl
and
in
fcoml
test
push
xor
add
adc
xor
add
test
movsb
into
insl
xchg
push
jnp
jmp
scas
sti
mov
addr16
ret
mov
mov
imul
and
addb
pop
push
fwait
mov
and
jb
hlt
push
sub
enter
mov
sbb
pop
sub
mov
cmp
mov
dec
in
dec
mov
xchg
pushf
push
dec
pop
xchg
fdivrs
mov
mov
insb
dec
inc
mov
jle
or
dec
xchg
fs
jmp
imul
sbb
loop
mov
pop
test
in
test
add
and
ret
pushl
push
jnp
adc
push
adc
or
cmp
pop
push
xlat
rolb
jmp
mov
rolb
mov
adc
stos
fsts
nop
add
out
jg
xchg
repnz
dec
cmp
mov
sub
clc
add
dec
dec
xor
add
in
dec
push
adc
aas
mov
cmp
je
sub
shrl
in
dec
xchg
cmp
je
sbb
loopne
jbe
inc
mov
aaa
std
jge
arpl
dec
je
or
and
push
sbb
add
cmp
add
lds
jmp
sbbl
pop
dec
inc
into
daa
adcb
lods
add
nop
push
cmpsl
jno
in
push
icebp
push
stos
sarl
aad
jne,pt
xor
movsb
xorb
adc
bnd
push
pop
add
or
ficompl
push
push
jecxz
pop
fdivl
in
and
jle
call
and
ret
movsl
ret
inc
call
dec
ret
adc
shr
gs
orb
or
arpl
fs
dec
push
je
dec
add
pushf
fisubl
iret
loopne
inc
jmp
mov
lds
adc
adc
or
cmp
into
add
add
inc
shlb
inc
inc
adc
aad
push
rclb
push
in
lahf
xchg
sbb
loopne
insl
add
hlt
rcr
or
mov
add
push
and
movsb
or
cmp
mov
xor
hlt
xlat
rorb
sub
push
daa
and
ja
subb
inc
ret
dec
push
push
push
add
push
push
mov
mov
pop
mov
jecxz
push
sbb
xchg
mov
mov
sub
outsl
jnp
mov
sub
xchg
jno
orb
fsubl
clc
lea
jmp
arpl
and
mov
cmp
or
inc
xchg
inc
or
cmc
sbb
lea
nop
xchg
out
inc
xor
std
in
add
dec
xchg
movsb
std
rcrb
add
and
pop
das
bound
xchg
scas
outsb
dec
cmc
add
sahf
pop
mov
int3
mov
idiv
dec
jl
adc
movsb
xor
xchg
leave
mov
pusha
loope
sbb
add
adc
fwait
add
int
es
cmpl
cmpsl
mov
clc
sarb
or
mov
push
call
mov
inc
scas
test
inc
mov
inc
or
xor
ljmp
adc
add
and
push
ss
sbb
xchg
faddl
fsubr
sahf
xchg
popf
sbb
jp
pop
jp
xchg
sub
push
outsb
push
add
adc
sbb
out
pusha
add
add
inc
stos
or
and
mov
cmp
jge
mov
jmp
jno
inc
dec
sbb
xor
dec
enter
sub
push
mov
ret
push
mov
push
fdivrl
push
push
je
test
movsl
add
repnz
sub
xchg
sbbb
add
mov
cli
push
add
das
jo
hlt
sub
push
movb
xor
or
ret
lcall
rorb
and
cmp
jns
lock
xchg
push
rcl
gs
out
icebp
pop
cmp
add
add
mov
inc
jl
inc
aaa
in
xor
mov
cmp
inc
add
dec
loopne
jmp
adc
mov
pusha
sub
loop
adc
and
in
sbb
xor
and
or
fidivrs
out
jecxz
lret
loope
push
jne
or
ja
xchg
negl
pop
push
outsl
push
or
dec
adc
or
sub
inc
cmpsb
jbe
out
sarb
imul
inc
fsubrl
adc
or
mov
sbb
push
mov
push
dec
mov
mov
inc
push
sbbb
inc
sti
lds
jl
push
in
inc
outsb
mov
leave
cltd
cmpsb
sbb
test
or
enter
jno
sti
je
push
mov
push
adc
imul
add
and
in
adc
inc
jbe
cltd
jmp
mov
pop
cmp
fwait
in
jmp
inc
in
pushf
mov
daa
js
pushf
fcoms
adc
sbb
mov
or
sbb
dec
aam
push
mov
jl
mov
or
mov
fisttps
xlat
in
add
je
push
and
or
pop
mov
test
add
mov
bound
dec
xor
add
cmp
add
push
or
push
push
cmp
add
push
inc
lods
dec
and
add
pop
adc
inc
add
adc
jnp
jbe
jge
push
popa
int3
call
test
dec
inc
or
dec
mov
add
lds
xchg
jmp
fstl
imul
jp
or
std
adc
or
mov
test
sbb
sub
jge
adc
ret
mov
mov
add
sbb
or
iret
mov
test
shl
stos
dec
loope
or
mov
add
mov
or
xchg
or
dec
xor
pusha
lock
dec
add
cmpsb
or
pop
add
loopne
sbb
sbb
incb
cmp
push
aad
or
dec
fisubl
jnp
pop
mov
jmp
push
adc
mov
pop
out
lds
lods
sbb
mov
mov
push
rolb
dec
cmc
ret
insb
notb
xchg
mov
jne
insl
add
lcall
insb
ficoml
enter
cmpsl
sbb
rcl
mov
enter
push
cmp
mov
or
js
inc
adc
fcoms
in
sub
in
add
movb
push
xchg
mov
mov
jo
pop
lea
je
in
push
adc
or
mov
dec
pusha
mov
rol
mov
mov
lret
pop
xor
shr
xor
sub
jnp
xor
shr
xor
and
push
add
add
add
mov
sarb
fs
or
jae
iret
aam
out
or
and
xor
add
add
in
mov
outsb
sub
jbe
add
push
add
into
ljmp
test
or
add
xor
and
and
xchg
push
inc
sbb
cmp
push
repnz
ljmp
sub
fmull
sarb
or
xlat
ret
cmp
push
sbb
rolb
testl
hlt
add
dec
push
mov
in
push
sbb
call
push
xor
sub
out
repz
cli
mov
rol
rol
out
add
out
add
push
xor
and
fsub
in
js
inc
lcall
or
push
cmp
shl
in
or
bound
and
or
push
bound
pop
add
pop
aaa
cmp
xor
push
rcll
cltd
call
loopne
sbb
dec
shl
call
sbb
loopne
xor
pop
cmp
aam
jbe
lods
xor
orb
or
int3
into
mov
lcall
xor
and
and
ds
mov
out
iret
or
xor
pop
xor
push
test
test
lock
and
inc
jo
jb
mov
ret
push
jo
ficoms
push
and
ds
movsl
pusha
xor
adc
push
clc
mov
mov
add
add
aas
inc
fadds
pop
jbe
call
adc
ret
lret
push
clc
jp
push
stc
loope
push
and
add
gs
fdivrs
xor
add
inc
fs
call
in
rorb
lret
inc
mov
pop
mov
jo
cli
dec
test
je
adcb
xor
aaa
cmp
or
data16
pop
jae
in
mov
rolb
loopne
xor
inc
aaa
cli
stos
lret
xor
xor
shlb
add
push
sbb
dec
inc
test
loopne
repnz
jb
nop
lahf
jo
add
shlb
inc
push
mov
xor
sahf
dec
xchg
rcrb
dec
push
dec
adc
add
add
push
xor
dec
xorb
sahf
fs
and
nop
out
push
pop
inc
xchg
cmp
mov
pop
mov
push
lcall
rol
dec
xor
push
push
or
adc
enter
int
dec
jae
fs
pusha
dec
cs
and
and
movsl
mov
repnz
mov
or
rolb
dec
sahf
fs
and
shr
adcl
lods
fs
dec
movsb
shlb
test
addr16
mov
adc
loop
mov
orb
jmp
stos
mov
adc
stos
dec
shll
loopne
loopne
or
in
add
and
ds
loope
jno
dec
push
mov
sbb
shrl
mov
xchg
fsubrl
incl
inc
cld
inc
rcrb
inc
aaa
sub
add
sub
data16
aaa
fld
pop
xor
pusha
adc
enter
add
scas
push
or
mov
or
mov
adc
outsb
push
add
jp
add
ss
inc
jae
mov
sub
adc
mov
mov
mov
adc
add
sub
sub
pop
movsl
jns
mov
ret
dec
or
mov
mov
push
outsb
dec
jne
pop
or
add
mov
jl
sub
pop
push
sbb
adc
or
fs
adc
push
ret
in
aaa
sub
jae
push
pop
fadds
rep
or
mov
cmpsb
ljmp
in
test
inc
fs
pop
loopne
ror
mov
dec
adc
ljmp
mov
add
and
int3
imul
inc
push
push
and
aam
bound
repnz
xor
inc
add
dec
lea
add
rorb
rcl
or
or
jecxz
add
xor
push
xchg
aas
pusha
andl
inc
std
in
or
xchg
xor
mov
push
add
or
js
jle
add
ret
inc
adc
sub
incl
sub
rolb
mov
stos
or
lea
icebp
cmp
lret
or
xchg
xchg
dec
jae
adc
cmp
mov
mov
sarb
addr16
add
dec
add
loope
add
xor
mov
mov
loope
popa
ss
inc
sti
add
adc
leave
loope
or
jle
test
adc
ljmp
cs
sub
and
or
inc
fimull
mov
movsb
push
rcrl
ret
dec
xchg
or
inc
nop
test
gs
sub
and
dec
dec
sub
or
mov
fildll
mov
orb
clc
sbb
rclb
push
jg
xchg
mov
push
mov
clc
lock
push
add
adc
mov
cmp
mov
cmp
sub
cmp
mov
dec
fs
lret
add
push
adc
and
add
addr16
mov
xchg
loopne
xor
xchg
fildl
and
jle
es
rorb
push
mov
pop
lods
int
call
cs
add
enter
loope
mov
or
push
ds
and
addr16
pop
inc
mov
jl
dec
sbb
repnz
sub
xor
push
adc
inc
sub
sbb
sbb
mov
pop
push
test
push
lahf
mov
ss
push
jmp
gs
and
push
add
fildl
adc
das
ret
lea
sbb
ret
test
popa
push
mov
outsl
bound
testl
loopne
test
mov
test
pop
ljmp
add
inc
add
loopne
sbb
mov
push
adc
insb
add
adc
cmp
add
push
jge
cmp
into
fucomi
jmp
inc
lock
jb
lcall
testb
pop
mov
xor
dec
mov
and
insb
loopne
or
imul
pushf
inc
loopne
mov
adc
mov
jmp
mov
xorl
mov
pushl
addb
and
shrl
jnp
pop
add
adcb
fimull
cld
mov
cwtl
inc
or
dec
js
xor
outsb
sub
pushf
in
gs
xor
and
dec
push
push
push
xchg
xor
and
mov
mov
and
je
adc
sbb
jbe
adc
sub
push
lahf
and
scas
add
cmp
cmp
xchg
loope
jmp
and
outsb
add
add
mov
enter
rorb
or
add
in
cmp
xchg
lods
and
mov
and
mov
ss
jge
xchg
xlat
pop
push
jbe
xorl
pop
hlt
out
push
sbb
dec
cmp
inc
sahf
pop
stc
out
cs
push
add
in
or
xchg
filds
gs
fucom
xor
mov
and
aas
or
in
in
sub
pop
mov
or
dec
add
jnp
orb
pusha
and
or
fmuls
add
out
fistl
push
andb
pcmpgtd
sbbb
mov
mov
adc
cmp
cmp
adc
daa
jns
xchg
icebp
inc
add
sbb
add
add
jle
push
sbb
push
push
cmc
icebp
mov
add
mov
push
jb
push
mov
fwait
cmp
jmp
cmp
jbe
and
adc
inc
jle
xor
pusha
mov
jecxz
addl
pop
enter
imul
xor
sbb
and
icebp
push
add
push
in
inc
pop
test
mov
cmpsl
mov
sub
incl
push
sbb
xchg
in
mov
mov
int3
sahf
mov
cmp
insb
or
xchg
inc
insb
sub
fbld
mov
icebp
inc
mov
inc
fsubl
push
inc
dec
adc
add
stos
subb
xchg
stc
mov
adc
pop
mov
lcall
or
sbb
push
pop
imul
mov
inc
mov
push
mov
orb
add
addr16
sub
cmp
add
sub
add
add
mov
out
add
int3
cs
ss
rol
repnz
adc
shlb
push
or
mov
mov
jo
js
testl
ret
xchg
negl
push
dec
add
inc
push
addr16
adc
pushl
and
pushl
push
lcall
dec
push
sahf
lret
xor
dec
lret
repnz
cmc
xchg
mov
dec
hlt
sub
clc
push
xor
mov
sahf
mov
scas
sub
or
inc
add
repz
adc
ret
xchg
sbb
inc
xchg
xchg
loop
add
xchg
inc
in
or
xor
push
enter
in
push
loope
cmp
cmp
xchg
in
jno
sti
xchg
fimull
xchg
imul
jno
adc
mov
push
mov
hlt
sbb
dec
out
adc
add
xchg
inc
jno
or
adc
inc
and
fbld
inc
lahf
subl
and
jne
push
cmp
jb
jae
xchg
sbb
clc
mov
jns
inc
inc
and
sahf
lds
out
inc
push
adc
xor
out
pop
push
jmp
mov
xchg
push
mov
push
es
pop
add
test
dec
out
mov
test
dec
mov
addl
in
ret
xlat
fsubs
adc
adc
dec
mov
cltd
shrb
mov
scas
test
mov
clc
inc
mov
dec
xor
ss
lahf
cmp
int3
jmp
lods
loope
sub
mov
in
sub
mov
add
xchg
jo
add
cmp
lock
stc
cld
mov
adc
mov
inc
cmp
pop
push
fimuls
cmp
movsl
lahf
je
mov
movb
pop
mov
mov
nop
sub
adc
sbb
pop
cwtl
xor
test
add
pop
in
add
mov
or
das
int
jnp
add
addl
mov
mov
or
dec
out
pop
xor
pop
nop
fsubrl
add
imul
cli
das
sub
sbb
adc
pop
sbb
inc
dec
loope
or
pop
push
fldl
and
call
loope
add
jl
pop
mov
mov
or
lret
shlb
mov
or
int3
adc
test
push
xchg
push
out
sbb
insb
sbb
jle
movl
mov
icebp
push
cld
cmc
xor
pop
ret
push
das
sub
mov
imul
jl
shrb
cltd
cmc
or
jns
lock
adc
lea
or
add
dec
dec
and
cmovbe
movl
cmp
in
or
cmp
push
lea
stos
inc
sbb
and
comiss
in
inc
movsb
pop
push
sub
mov
in
pop
or
andb
add
or
mov
loopne
in
and
loope
and
add
gs
imul
jmp
add
xadd
add
lret
mov
push
adc
adc
movsb
mov
push
pop
push
mov
test
pop
dec
jmp
jge
inc
sub
push
push
mov
mov
lcall
add
clc
sub
mov
push
xchg
add
sub
mov
cmp
add
mov
fs
dec
js
inc
xor
cli
sub
jge
jno
add
xchg
add
sar
popa
add
push
add
jl
jp
movsl
lret
sbb
push
jge
mov
rolb
push
mov
sub
cmp
xor
js
jl
outsl
xor
sub
jne
adc
xor
icebp
or
adc
add
xchg
stos
pushf
addl
cs
cmp
mov
icebp
cmp
xchg
mov
xor
sbb
loope
inc
sub
outsl
adc
inc
pop
adc
sti
lcall
or
dec
lret
add
push
outsl
push
insb
mov
xor
sbb
pusha
lods
or
or
ja
and
adc
cmp
ficoms
gs
fstpl
inc
or
mov
inc
mov
mov
lret
pop
int
pop
dec
inc
xchg
and
or
mov
add
xor
push
inc
sub
or
dec
push
mov
inc
loop
aaa
inc
adc
adc
dec
push
or
mov
ss
subl
push
and
enter
pop
push
inc
mov
or
mov
cmp
jmp
push
js
add
call
nop
subb
cmp
sbbl
dec
cli
ret
cmp
test
xchg
out
and
int
sbb
cmp
notb
mov
mov
push
ret
sbb
and
adc
pop
mov
in
add
sub
and
into
mov
xor
jo
push
pop
pop
insl
cmpsl
inc
jmp
sbb
sbb
mov
add
lcall
loop
push
arpl
inc
inc
and
dec
faddp
adc
adc
xchg
xor
push
fimull
mov
push
sbb
add
inc
or
mull
add
push
orl
ret
xor
fsubs
or
jecxz
bound
pusha
rorb
lods
cmp
sarl
cmp
or
or
rorb
push
cli
mov
dec
xor
cmpsb
xchg
and
sbb
xchg
add
adc
cmp
sbb
in
in
dec
pop
or
out
inc
push
sbb
push
cld
sub
ffree
sbb
int
and
mov
popa
dec
mov
stos
cmp
sub
bnd
loope
or
cmp
pop
cltd
fisubrs
sub
inc
mov
test
aam
adc
dec
lea
push
gs
adc
outsb
push
es
dec
addl
test
push
xchg
andb
mov
push
mov
mov
or
sbb
sbb
mov
mov
inc
inc
xor
push
es
dec
sbb
dec
sub
jo
lret
sub
andl
xor
mov
push
in
push
hlt
dec
sub
das
mov
outsb
mov
movb
addr16
icebp
cmpl
ljmp
aaa
js
sti
pop
push
out
cmp
pop
mov
mov
ds
push
xchg
push
push
push
adc
sbb
lret
movsl
xor
loop
pop
xor
dec
jmp
cmp
xor
fnstsw
and
lods
test
adc
pop
out
or
sbb
adc
sbb
loop
or
add
dec
and
pusha
rcrb
sbb
and
sub
pop
shlb
andl
adc
jle
cmp
jle
dec
and
aaa
loopne
mov
movsb
mov
inc
cmp
in
mov
sbb
push
ret
adc
cmpsl
addr16
imul
sub
lea
leave
or
push
imul
push
pop
sbb
stos
jno
jmp
jl
or
popf
imul
cmp
arpl
dec
fisttpl
mov
or
das
aam
sub
insb
inc
or
or
jo
pusha
sub
mov
out
lods
inc
cmp
inc
aas
call
dec
or
nop
sub
inc
jo
jne
aad
int
addl
into
or
jmp
mov
add
out
cwtl
test
insb
shrl
or
and
call
dec
adc
lock
dec
add
add
call
ss
test
mov
call
mov
mov
std
pop
incl
stos
push
push
sarl
sbb
std
das
shrb
mov
mov
cli
testb
je
cmp
insl
data16
cmp
fs
cmp
das
movsb
in
sub
ret
sub
cmp
jne
out
ds
jnp
adc
add
add
adc
out
jne
pop
sub
fldcw
popa
mov
xchg
jno
dec
or
aad
loop
iret
aad
push
addl
jmp
push
sbb
push
pop
mov
push
add
mov
cmp
loop
jae
dec
and
mov
jmp
call
mov
lods
dec
ret
adcl
in
push
cld
xor
mov
jg
add
sbb
adc
hlt
add
popa
and
fsubs
cmp
insl
cmp
jo
and
sub
xlat
jns
pop
test
je
pop
inc
hlt
push
push
mov
insb
data16
sbb
push
icebp
inc
mov
mov
or
cmpb
mov
push
or
push
push
jl
xchg
add
push
push
sbb
sub
subb
push
adc
cmp
addr16
mov
sbb
add
sbb
sar
int3
lock
sbb
rorl
sbb
sbb
inc
imul
roll
add
cmpb
leave
jmp
ss
lock
push
sbb
push
nop
and
sbb
or
dec
adc
inc
bswap
lret
into
jne
data16
mov
add
cmp
pop
or
mov
and
fisttps
pop
add
sbb
adc
sqrtps
pop
xor
and
xor
mov
mov
mov
jb
cli
addl
sub
cmp
jne
push
pop
add
add
pop
push
adc
mov
fsubl
pusha
sbb
and
addl
out
aaa
les
jae
jg
and
scas
movsl
xor
pop
push
adcl
mov
dec
sbb
lret
mov
mov
mov
and
xchg
sbb
sbb
sub
adc
add
jnp
loopne
push
lahf
rorb
xchg
dec
adc
sub
xor
std
push
mov
mov
aaa
mov
mov
pop
jmp
and
mov
push
mov
test
add
or
test
adc
fwait
add
inc
add
jo
sbb
out
xlat
add
mov
add
popf
mov
inc
out
pop
or
in
adc
or
shr
dec
popf
add
sbb
int3
iret
shrb
loope
mov
lahf
sbb
add
jne
add
jle
lea
jle
rolb
insl
xor
pop
add
pusha
add
xchg
inc
cld
jb
test
mov
pop
lcall
push
je
jmp
jp
sbb
lret
inc
adc
and
std
cld
inc
or
adc
inc
hlt
xchg
lods
cmp
jne
and
add
jmp
xchg
add
push
mov
dec
xchg
push
mov
jmp
mov
sub
rolb
adc
adc
mov
and
ss
loop
addb
pusha
sti
outsl
rcl
inc
adc
cltd
cld
pusha
dec
adc
or
xor
fdivl
or
jmp
out
sarb
sbb
push
loopne
mov
es
cmp
insl
loopne
ljmp
and
and
in
push
mov
fdivr
push
adc
sbb
or
or
fistl
mov
lock
mov
jno
add
stos
or
cmp
mov
roll
loop
scas
sahf
adc
adc
adc
cmp
pop
adc
pushf
or
mov
loopne
lock
add
or
cmp
cmc
jmp
mov
loopne
add
arpl
pop
push
ret
dec
pushf
and
adc
sub
inc
enter
loope
js
cmp
jmp
push
mov
test
cmpsb
mov
addr16
pop
cmp
push
mov
pop
in
mov
add
jle
xchg
or
scas
inc
dec
dec
pop
shrl
inc
add
cltd
dec
pop
xlat
loopne
cltd
pop
fiaddl
xchg
shr
or
xor
clc
push
adc
push
nop
dec
adc
stos
mov
or
imul
push
mov
test
nop
mov
adc
cmp
add
inc
cmp
xor
sbb
aaa
cmpsb
xor
adc
push
add
pop
cli
cmpl
fisubrs
jmp
add
ja
adc
cmp
ds
jae
aas
sbb
add
sahf
adc
sbb
dec
scas
xor
shll
iret
inc
sub
or
sar
xor
hlt
sbb
pop
mov
push
add
mov
hlt
loope
arpl
aaa
ret
push
or
and
in
inc
cmpb
sbbl
fs
js
pop
pop
ret
dec
or
xor
invd
inc
mov
mov
int3
push
or
adc
xchg
dec
arpl
scas
dec
jnp
push
pop
outsb
xor
adc
mov
adc
push
out
sub
jo
jb
es
movsl
inc
add
shl
fcmovb
mov
push
mov
lods
scas
pop
push
pop
and
push
xchg
jg
xor
add
push
jbe
adc
or
dec
cmp
aad
push
pop
sti
push
aas
cmp
in
mov
jl
movsb
jbe
add
hlt
mov
ja
pop
adc
loope
lcall
pop
clc
mov
in
or
lock
cmpsl
and
xlat
dec
push
jb
add
mov
cmp
sbb
mov
lods
and
jge
out
mov
mov
imul
add
cmp
push
cli
das
cmp
mov
add
and
test
or
dec
into
sahf
and
push
andl
add
sub
bound
push
xor
or
mov
dec
adc
add
movsl
or
fs
sbb
inc
or
pop
je
jmp
or
push
sbb
sub
add
and
sbb
jns
add
test
pop
inc
sbb
sbb
loope
stos
add
cmp
int
jmp
fmuls
push
jno
dec
nop
jecxz
sub
xor
icebp
mov
imul
xchg
or
xchg
push
pop
sub
aaa
and
mov
add
push
movl
pop
and
pop
lcall
sub
les
adc
enter
adc
ds
adc
inc
lahf
and
das
mov
or
sub
and
les
imul
mov
jmp
cmp
add
inc
mov
adc
jmp
dec
stos
insb
test
add
ss
jb
aad
dec
aam
pop
in
jl
gs
pushf
push
lahf
jl
scas
or
loope
mov
adc
cltd
mov
and
dec
add
sbb
sub
sbb
les
pop
test
mov
push
and
daa
push
push
sub
and
or
xchg
sub
xchg
sub
mov
shll
test
add
add
cmp
dec
je
test
fcoms
add
push
imul
rorl
jbe
lds
ljmp
xor
sbb
sub
movl
xchg
sub
mov
test
pop
mov
aad
fimuls
push
fsubrl
lock
jle
rcrb
js
xor
fbld
adc
dec
add
shrb
jle
sub
mov
shll
jnp
fmuls
aad
pop
scas
push
mov
or
scas
jle
sti
ja
aam
orb
or
fnstcw
mov
sti
mov
jae
loopne
clc
jg
fs
test
jmp
movq
ficomps
cld
movapd
push
clc
jae
xor
repz
or
xor
cli
rcl
lret
mov
dec
mov
jl
or
fnstcw
xor
jg
sbb
in
sub
cs
jnp
mov
mov
sti
add
mov
add
adc
push
add
sub
and
mov
pop
add
shrl
xchg
repnz
roll
add
xor
mov
pusha
addsd
int
push
fdivrp
fldl
sbb
sbb
leave
pop
fistpl
dec
and
daa
setae
ja
push
dec
mov
stos
add
mov
inc
stos
test
adc
pop
incl
xchg
adc
pop
cltd
nop
dec
fsubr
aam
pop
xor
iret
lret
push
ret
jge
mov
push
mov
pop
push
sub
nop
pop
sbb
push
push
fldl
lcall
sub
dec
pop
dec
mov
fwait
loope
inc
ss
rcl
hlt
cli
add
jg
icebp
jb
neg
mov
mov
adcl
jmp
loopne
add
or
cld
lret
pusha
je
rep
mov
dec
test
dec
flds
or
sbb
adc
bound
dec
push
movsl
das
lea
ror
js
rcll
insl
add
push
push
sarl
or
add
xor
clc
jb
cmp
cmp
and
pop
add
dec
pop
pop
mov
std
pop
into
out
jecxz
enter
idiv
cmp
jb
rep
jmp
pop
pop
gs
or
int
jbe
add
xor
in
jnp
repnz
push
dec
push
and
jbe
test
cmp
sbb
xlat
xor
add
mov
jnp
dec
push
dec
add
xchg
mov
xchg
add
push
movsb
rolb
mov
sahf
mov
mov
repz
decl
inc
in
call
iret
in
lock
hlt
clc
push
mov
cmp
cld
mov
or
add
add
fldenv
jmp
jns
clc
or
and
push
nop
mov
imul
pop
sti
and
popa
xor
and
xchg
pop
jno
lea
jl
cld
or
std
cld
out
jo
dec
adc
xchg
into
lea
xchg
daa
stc
sub
pop
nop
test
test
sarb
add
out
add
dec
sub
jns
push
out
push
add
lods
dec
dec
addr16
add
es
out
sahf
testl
dec
jns
pop
lahf
push
xor
sbb
sbb
jns
out
adc
adc
sahf
out
sahf
or
or
add
mov
orb
push
cwtl
xor
test
push
add
mov
icebp
xchg
pop
mov
lods
and
pop
call
and
movsb
and
and
test
mov
mov
mov
fbstp
pushf
repz
dec
mov
jnp
std
or
push
sbb
cmp
jo
xor
xchg
push
xor
repnz
pop
lods
pop
or
jle
mov
jmp
jp
je
fildl
dec
jmp
rorl
sarb
icebp
jne
mov
pushl
js
push
loop
sbb
adc
xchg
or
nop
rcr
adc
lret
adc
arpl
sbb
je,pn
cmpsl
adc
in
mov
mov
jbe
sbb
call
int
or
popf
test
imul
xchg
and
or
aaa
pop
shlb
push
inc
pop
lods
hlt
fcomi
adc
or
cmp
add
or
das
outsl
jne
xchg
cmp
cmp
and
inc
mov
sbb
add
push
xchg
inc
mov
xor
mov
add
cld
mov
mov
or
adc
jne
inc
cmp
xor
int3
call
adcl
sbb
sub
inc
enter
pop
pushw
adc
pop
sub
adc
and
adc
sub
pop
mov
inc
cmp
cmp
push
dec
push
jns
jl
dec
or
pop
push
jns
cmp
arpl
dec
adc
rcrb
push
add
push
push
lret
in
loope
dec
aam
adc
or
adc
loopne
or
xchg
andb
mov
add
and
inc
jae
pop
xorl
imul
adc
hlt
cmp
movsb
pop
cmp
mov
dec
daa
mov
imul
mov
ja
loopne
sbb
ret
insl
adc
loope
insl
imul
shlb
dec
leave
sbb
or
or
inc
pop
cmp
mov
mov
adc
ret
cmp
aam
and
or
jne
sbb
dec
xchg
fistpll
jmp
or
es
cwtl
mov
orb
xlat
cmp
movl
fisttpl
xchg
xor
xchg
outsb
pusha
test
add
add
xchg
sbb
testb
inc
mov
sbb
pop
clc
mov
adc
ret
daa
sti
push
das
das
and
xor
leave
inc
and
xor
nop
in
jge
adc
subb
js
adc
add
or
adc
shrl
gs
insb
ja
xchg
inc
outsb
sub
add
pop
jecxz
mov
sarb
cmp
ja
dec
cld
dec
jge
into
rorb
push
sub
jle
xor
sbb
neg
dec
cli
or
add
jmp
or
mov
inc
les
add
cmp
jb
mov
sub
add
jmp
mov
dec
mov
mov
in
pop
mov
dec
dec
mov
inc
cmp
jb
lret
ret
cmc
loop
pop
adc
mov
je
and
or
add
push
enter
mov
mov
add
adc
sub
sbb
mov
jg
insl
push
cwtl
xor
add
jne
jnp
outsb
mov
push
test
je
fdivrl
jne
mov
push
cmp
jne
dec
cmp
int
jne
call
in
cs
jge
ret
stc
jns
cmp
inc
incl
dec
jmp
adc
jmp
cmp
jmp
cld
cld
ret
sahf
popf
fucomi
pmaxub
pop
push
pop
scas
jb
push
push
sub
movb
shr
stc
add
xor
adc
xchg
arpl
shr
je
popf
sarl
or
mov
daa
shl
xor
inc
punpckhdq
dec
adc
popf
adcl
pushf
out
pop
xchg
or
jb
add
aad
jp
dec
scas
or
dec
sbb
or
inc
rcl
push
arpl
nop
and
cmp
pop
adc
add
rorl
js
cmp
sbb
icebp
arpl
mov
cs
stos
lock
cltd
add
rolb
add
and
mov
cmp
jg
daa
ds
in
dec
outsl
jno
rcr
jne
dec
ss
push
push
push
popa
enter
pusha
add
pop
dec
movsb
adc
jmp
test
mov
xchg
adc
jge
sub
push
push
pop
div
add
adc
adc
loop
nop
aam
jl
push
pop
clc
scas
jne
push
sahf
mov
pop
sahf
sub
pop
adc
push
mov
add
rolb
or
sub
inc
ret
mov
pop
mov
sub
mov
pushf
dec
loope
lret
xor
arpl
gs
outsl
sub
aam
stos
xor
out
cmc
call
ret
add
inc
add
add
mov
push
or
mov
jp
lcall
jl
or
lods
push
mov
js
mov
add
xchg
rolb
sub
fldl
xchg
xor
inc
rorb
cmp
jne
orl
out
negb
add
add
sub
sbb
les
out
dec
push
into
fistl
jg
add
push
xor
sbb
dec
or
or
mov
adc
or
mov
pop
jne
dec
add
add
lds
sbb
xor
loop
lret
or
test
push
mov
sti
decl
sbb
fidivs
lret
sub
cmp
cs
aad
in
ja
xor
cmp
jae
fnstenv
loopne
daa
movsb
sub
or
aaa
pusha
addr16
xchg
dec
test
push
je
xchg
aam
dec
lock
ret
mov
pop
cld
js
add
decl
and
mov
sbb
inc
adcl
or
jnp
ret
adc
inc
add
pop
in
mulb
adc
pop
dec
pop
mov
add
mov
insl
add
into
mov
pop
jae
or
add
sbb
imul
sbb
js
cmp
pop
ds
loop
add
das
cmp
mov
or
push
sub
test
and
into
mov
imul
jge
stos
mov
shr
enter
shr
dec
or
sub
test
jo
shrd
or
add
imul
fcoms
mov
jne
idivb
and
outsb
push
xchg
xor
adc
xor
ds
adc
adc
imul
xor
mov
inc
inc
data16
testb
dec
and
shll
inc
aaa
sbb
cmp
push
rcll
jo
push
loop
call
sbb
adc
add
ds
outsb
loope
add
jb
dec
imul
xor
dec
push
les
sarl
push
es
push
jmp
xor
aam
scas
push
mov
int
jno
repz
push
stos
lock
mov
push
dec
push
movsb
ret
roll
stos
and
adc
int3
decb
fsubl
les
aam
je
or
add
add
inc
and
add
dec
ret
pop
fisttpll
xor
add
mov
jbe
flds
shll
jae
fwait
or
adc
scas
dec
adc
inc
ret
mov
jl
sti
sbb
cld
push
lret
cmp
jae
sub
add
and
fists
orl
add
loopne
je
inc
cmp
jb
lea
push
adc
rorl
or
mov
xor
ret
pushf
cmp
cwtl
mov
mov
mov
mov
fidivrl
or
out
dec
cmp
notl
or
loope
lods
mov
popa
js
mov
ja
add
outsb
adc
ret
pop
or
test
mov
xchg
adc
pop
jmp
pop
popa
cmp
cmpl
daa
adc
xchg
adc
nop
push
push
addb
inc
mov
inc
jb
xor
popa
or
cmc
int
iret
jae
add
adc
in
pop
add
xchg
adc
mov
pop
test
ss
mov
cmp
ret
daa
ss
xor
or
and
dec
mov
mov
loop
push
jg
mov
inc
incb
sub
aaa
insl
pusha
push
leave
sub
std
add
les
pop
lahf
xchg
push
loopne
push
pusha
inc
ret
test
mov
mov
test
test
stos
mov
mov
je
inc
stc
mov
dec
sti
pop
outsb
cmp
les
ja
inc
push
daa
sub
loopne
xor
mov
insl
cmp
add
sti
sub
push
ja
ficomps
push
push
xor
xchg
mov
xor
popf
cmpsb
xchg
shrb
les
jle
push
mov
push
xchg
aad
push
popf
aaa
pop
pop
incl
int3
push
pop
or
ret
push
ffreep
mov
push
or
outsb
inc
inc
pusha
jb
pop
add
cvtps2pi
dec
xchg
push
mulb
in
rorl
in
xor
repnz
adc
fidivrl
or
and
shl
adc
or
or
aaa
rolb
jecxz
jecxz
shr
inc
mov
pop
xor
mov
mov
inc
mov
cmp
pop
je
push
mov
xchg
pushf
pushf
mov
mov
push
inc
mov
push
jnp
adcb
sub
les
mov
mov
mov
mov
sub
or
mov
pop
cld
fmuls
je
dec
loop
push
xor
sub
add
stos
movsb
mov
in
sbb
mov
dec
pushl
push
jp
and
xlat
test
sub
call
cmp
je
cmpsb
fdivrl
lock
jmp
push
ret
popa
pop
pop
push
xchg
xor
nop
loope
mov
or
or
movsl
in
mov
inc
sbb
add
xlat
jno
push
loopne
sub
jns
push
repnz
cmpsl
xchg
je
pop
sbb
mov
fisttpl
mov
fstps
sub
mov
jmp
inc
pop
cld
pop
call
mov
xor
and
fldt
add
aaa
or
xor
cmp
add
add
or
mov
mov
add
adc
dec
cmp
repz
mov
cmp
mov
ret
jne
in
mov
dec
sbb
rolb
xchg
les
cmp
out
xchg
testb
mov
fstpl
mov
dec
add
mov
push
pop
mov
dec
repnz
mov
push
pop
push
or
cwtl
ret
lar
pop
lahf
xor
inc
dec
pop
ret
mov
cmp
mov
push
daa
mov
sbb
mov
adc
mov
adc
addl
cmp
push
in
ljmp
jg
sarb
aam
push
repnz
ret
jp
and
fnstcw
mul
xorb
sbb
pop
lock
icebp
mov
mov
outsl
mov
and
sbb
out
hlt
adc
mulb
pop
push
inc
fistpll
sub
jb
enter
test
es
repnz
cmp
or
mov
push
sub
cmp
orl
or
and
sahf
faddl
jns
or
stos
fmull
mov
sub
mov
adc
push
and
fs
out
adc
std
negb
mov
mov
adc
xor
inc
cwtl
dec
mov
iret
push
push
pop
jle
aaa
mov
cmp
je
movzbl
add
filds
enter
je
fidivrl
sbb
adc
add
adc
imul
in
pop
add
add
push
nop
add
add
cmp
outsw
test
jno
je
add
mov
flds
sbb
inc
fiadds
adcl
push
imul
add
or
pop
enter
dec
or
jb
cmp
sub
cmp
pop
enter
or
jns
loop
or
ja
cmpb
inc
jns
push
nop
or
pusha
in
ja
push
shrd
and
adc
cmp
adc
popa
in
inc
or
adc
lret
add
add
adc
movsl
test
adc
lcall
adc
and
js
push
push
adc
mov
pop
pop
in
lcall
sbb
sbb
pop
enter
add
sbb
push
and
and
push
sbb
push
sbb
je
pop
sbb
jns
xorl
sbb
pusha
push
push
or
cmp
inc
push
pop
pop
xor
pushl
add
add
sub
cmp
cs
pop
lret
movl
xchg
xchg
adc
scas
push
and
mov
add
out
std
aad
push
in
push
in
jno
repnz
sub
jnp
out
rol
lea
aad
cmp
cmp
enter
out
cmp
add
sbb
call
call
adc
dec
dec
cwtl
jmp
sahf
xchg
sub
or
sbb
sbb
out
pop
insb
nop
cmpsb
in
in
in
cltd
mov
in
inc
in
sahf
inc
push
nop
addr16
out
jge
jae
inc
push
sbb
pop
lock
lock
pslld
in
repnz
std
repz
push
and
std
hlt
hlt
enter
rorl
pusha
hlt
fwait
mov
cmc
cmc
inc
jg
xchg
idivl
sub
clc
clc
aaa
jb
push
clc
cltd
adc
inc
jns
seto
lock
cli
cli
in
in
iret
sti
sbb
xchg
fwait
lret
cld
cld
cld
je
roll
mov
sub
adc
mov
xor
sbb
insl
or
jns
adc
cmp
ret
sub
mov
lahf
int3
cmpsb
rorl
or
shr
sbb
or
push
andl
or
jecxz
std
sti
in
enter
in
icebp
jo
mov
push
push
jns
daa
xchg
sti
out
out
in
or
in
repnz
dec
sti
sub
out
inc
mov
pop
jmp
pop
insb
nop
jmp
cltd
in
das
xchg
inc
pop
add
and
sbb
inc
lcall
push
jno
lock
cli
xchg
xchg
mov
stc
rolb
sub
repz
or
push
sar
push
pop
dec
xchg
xor
inc
pop
stc
div
not
enter
fwait
xor
add
mov
adc
stc
out
clc
cmpsb
jb
popa
cmp
pop
insb
nop
sti
sti
cltd
mov
jns
cld
orl
jmp
and
inc
xlat
dec
sub
push
cld
sub
mov
repnz
in
repnz
imull
mov
mov
out
orb
bound
mov
pop
inc
idivl
inc
mov
and
sbb
dec
push
ljmp
shl
pop
mov
mov
mov
int
insb
out
out
jno
pop
lret
and
and
add
sbb
repnz
mov
pop
dec
pop
and
xchg
cmc
jae
xor
inc
pop
pop
dec
cmc
div
into
add
mov
repnz
push
mov
clc
adc
add
hlt
stc
popa
cmp
mov
lret
and
jno
hlt
pop
and
hlt
push
hlt
or
pushw
dec
scas
mov
hlt
idivl
jo
or
push
sti
lahf
or
adc
ds
sbb
xor
loope
jmp
adc
gs
scas
xrelease
mov
cmpsb
jb
repz
repz
add
pop
leave
and
push
sbb
jmp
outsb
cmc
mov
xchg
pusha
leave
mov
sub
mov
leave
and
and
add
mov
movsl
mov
icebp
icebp
js
in
rorb
in
xlat
mov
test
push
cmp
mov
sub
cmc
jb
sbb
cmc
add
mov
lock
or
popf
lock
imul
popf
dec
push
jne
push
lock
pop
xor
sbb
scas
lock
mov
ss
ja
push
dec
xor
add
sub
out
adc
rol
in
xchg
add
jne
inc
ds
add
sbb
inc
sahf
add
stos
add
loop
mov
add
push
jnp
and
push
insl
add
cmp
inc
in
adc
dec
add
sahf
and
mov
push
fisubs
dec
or
pop
test
pop
and
sub
add
push
insb
mov
data16
popa
lods
push
push
lea
pop
cmp
cmpsl
fnstcw
or
fwait
int
stc
mov
jp
fwait
pop
call
shrl
push
jmp
or
push
mov
jge
push
loope
rol
out
fdivp
out
pop
push
xor
pop
sub
jae
or
sub
mov
add
jl
out
sub
test
aam
mov
inc
cs
xchg
clc
pop
pushf
jge
push
and
add
test
lock
pop
pop
jmp
outsb
rcrb
or
arpl
or
adc
or
test
push
jb
movsb
dec
filds
add
fdivs
fucomip
sub
fdivrs
fmuls
push
or
mov
testb
rep
sub
mov
lock
sub
push
inc
add
sub
or
pop
xor
lea
jecxz
mov
dec
xchg
or
orl
inc
lods
adc
cwtl
inc
push
xchg
jo
xchg
in
movsl
sub
popf
out
pusha
cltd
push
inc
adc
push
mov
cltd
daa
push
es
test
nop
fdivrp
add
inc
cmp
adc
daa
push
test
iret
aad
jb
pop
and
and
adc
sub
inc
inc
inc
clc
inc
sub
add
and
enter
out
mov
rcll
xchg
imul
xor
add
iret
js
in
jl
push
cmp
dec
outsl
cmpsb
or
add
or
push
roll
ficompl
or
sti
roll
sub
inc
inc
pop
pop
aad
lret
enter
add
xor
orps
loopne
cmp
pop
adc
dec
dec
shl
push
cmp
pop
loop
shrb
jo
sbb
xor
repz
inc
adc
jmp
mov
data16
jmp
add
repz
sub
xor
in
cmc
rcrb
or
adc
adc
adc
ja
insb
push
stc
aad
iret
dec
xor
lock
ss
mov
mov
inc
inc
cmp
push
jnp
mov
push
jmp
sbb
pop
imul
outsb
out
jns
mov
dec
mov
jg
ret
bound
push
mov
pop
pop
mov
sbbl
popa
mov
test
or
mov
mov
filds
push
sbb
testb
xor
and
pop
jmp
inc
popa
cltd
nop
xlat
clc
lods
push
js
dec
add
sti
inc
loope
setnp
shr
stos
add
testb
sub
xor
push
sahf
xor
and
mov
xchg
add
sbb
mov
mov
and
hlt
mov
push
xchg
ret
leave
adc
xchg
xchg
ljmp
ficompl
pusha
and
add
aam
sbb
ror
xor
or
movsl
xor
nop
fdivl
sbb
mov
adc
mov
xchg
mov
incl
inc
decl
jne,pn
loop
test
xor
mov
xchg
decl
add
or
inc
mov
or
add
xchg
xchg
mov
mov
adc
adc
xchg
cmp
jae
dec
sub
jecxz
stos
xchg
pop
jae
pop
jbe
cmp
icebp
mov
dec
loop
push
sbb
pop
sub
setp
and
cmc
push
push
xor
jmp
mov
fildl
and
add
dec
push
fsts
test
je
or
or
dec
je
push
push
jne
jl
test
mov
mov
cmp
es
mov
pop
decb
push
movsb
stc
jle
push
mov
inc
pop
leave
sbb
enter
das
sbb
inc
test
push
and
lods
xor
fwait
inc
loopne
fs
or
stc
adc
jl
mov
xor
add
add
loopne
mov
pop
xor
adc
xchg
imul
sub
stos
pop
mov
adc
mov
cmp
inc
enter
ja
insl
pop
sbb
loopne
aas
jge
mov
pop
push
push
cltd
pop
idiv
pushf
mov
pop
xor
xor
xchg
inc
out
cmp
fs
pop
push
jmp
or
sub
enter
addr16
sub
pop
imul
push
lock
lret
sbb
or
imul
add
jl
sub
sbb
push
lcall
mov
pop
dec
ret
pop
sub
sbb
sbb
mov
cmp
dec
sbbb
lods
mov
inc
fdivrs
pop
jg
pop
lds
loop
push
sti
sub
sub
loopne
sub
inc
xor
pop
in
je
pushf
push
mov
cmp
xchg
push
cmp
loope
push
jmp
jge
pop
je
sbb
nop
cmp
jl
fs
std
mov
xor
lcall
lret
jno
mov
mov
dec
rcrl
pop
je
ret
sti
imul
and
sub
inc
cwtl
mov
xor
mov
ret
insb
lahf
pop
pop
mov
cmovne
or
fisttps
push
mov
inc
push
les
inc
mov
jne
subl
inc
ds
subl
push
adc
lcall
mov
pushf
mov
adc
call
and
or
ret
push
je
mov
cmpb
xor
mov
lcall
mov
dec
shlb
hlt
mov
add
loop
loopne
cmp
inc
adc
or
out
add
sahf
or
add
popf
push
shrb
push
jae
cmpsl
cmpsl
xor
pushl
push
sub
ljmp
nop
push
xor
rorb
jg
dec
mov
or
push
loopne
xor
pusha
sar
dec
js
loop
or
or
daa
stos
jecxz
loopne
adc
mov
mov
add
push
sbb
decl
inc
jg
cmp
loop
gs
pop
xchg
popa
sub
cmp
jne
or
dec
jmp
jmp
mov
inc
inc
cmp
je
xchg
mov
cli
adcb
dec
sbb
adc
add
pop
ret
rcrb
je
popa
adc
and
ficoms
mov
jno
sbb
sub
mov
mov
cmp
mov
incl
fdivr
xor
mov
push
inc
sbb
mov
inc
pop
cli
ret
cmpsb
test
pop
pop
sbb
lods
mov
xor
adc
insl
xor
cmpsb
jnp
push
add
dec
jo
adc
push
fldt
jmp
push
les
push
nop
hlt
mov
lock
jmp
cli
test
adc
test
cmp
mov
je
mov
inc
sarl
or
shll
mov
or
xor
shll
pop
push
pop
cmp
mov
int
fs
imulb
add
sbb
cmpsl
frstor
sbb
dec
movsb
jb
mov
push
pop
jns
jns
test
sbb
add
cmp
pushf
fcoml
fiaddl
add
mov
ror
add
scas
mov
shrl
lea
pop
bound
jne
jmp
inc
ds
dec
or
pop
jns
enter
jmp
das
dec
jmp
dec
mov
mov
into
sub
pop
and
pop
icebp
rolb
and
push
mov
shll
stos
out
add
xchg
cmpl
pop
call
test
dec
mov
cmpsl
cltd
in
out
sbb
or
adc
hlt
xchg
push
adc
ret
push
subl
and
add
push
stos
mov
call
lods
adcb
mov
mov
or
fs
jnp
jmp
and
inc
push
jmp
cmp
fmuls
push
ja
or
lret
cmp
add
ss
add
inc
fisttpl
push
lods
ja
or
subl
movsb
sbb
mov
add
cmpsb
jne
mov
clc
xor
mov
and
jmp
or
pop
shll
inc
jmp
aas
rorb
mov
jb
movsb
jne
cmp
inc
mov
inc
dec
test
mov
rorb
jmp
sbbb
sub
adc
adc
pop
push
jmp
aam
out
push
xor
adc
inc
ds
data16
sub
push
test
push
xchg
fcomp
shlb
lcall
pop
icebp
or
adc
hlt
add
xchg
pop
pop
test
sub
loopne,pt
fdivl
mov
mov
pusha
pop
fwait
xlat
insl
int3
jo
sbb
loopne
arpl
xchg
push
push
fcmove
lret
fs
outsb
ss
inc
iret
or
rclb
dec
jne
push
loop
push
std
rol
inc
add
icebp
scas
push
mov
cmp
xorl
dec
or
inc
adc
pop
cli
or
into
mov
xlat
cld
pushf
jo
adc
or
into
popa
subl
add
jbe
lods
and
adc
or
sub
add
cwtl
adc
push
mov
xor
shrb
sub
loop
lods
and
js
mov
nop
movsb
xor
pop
sbb
or
call
sbb
and
stos
and
sarl
insl
clc
inc
outsl
push
push
push
fstp
popf
mov
enter
xchg
xor
xor
sub
adcb
xor
xlat
push
aam
pushf
enter
in
push
sub
jmp
push
cltd
fcmovnb
mov
test
adc
dec
lcall
std
data16
lret
mov
inc
and
insb
jl
sub
add
or
ret
lret
mov
adc
cmp
hlt
or
push
add
push
xchg
pop
outsl
sbb
cld
mov
sbb
imul
cmp
mov
ja
cmp
dec
adc
inc
xor
in
cltd
adc
xor
inc
jge
cmp
lock
or
dec
adc
ret
xor
jge
ficoml
subl
sbb
pop
or
jne
outsl
imul
subl
out
mov
aam
dec
xchg
dec
sbb
cmpsb
sub
push
js
cmpsb
cmp
cmpsl
popa
mov
inc
inc
mov
dec
push
jg
adc
ja
loopne
repnz
lcall
xchg
cmp
push
ror
cmp
arpl
xor
ror
sbb
pusha
loope
shr
fadds
xchg
push
add
fadds
ss
inc
sbb
inc
jne
fs
xchg
mov
inc
xchg
mov
sbb
adc
aad
pop
lahf
adc
mov
incl
jle
ret
fs
xchg
push
push
push
mov
mov
sub
test
jmp
pop
push
test
ret
pop
mov
xchg
inc
in
fstl
outsl
packsswb
icebp
push
ret
out
imul
mov
mov
jecxz
ja
shrl
loopne
out
into
add
or
leave
and
xchg
loope
repnz
inc
sbb
mov
jae
xor
adc
push
mov
adc
jnp
movsl
push
std
je
add
iret
xor
push
dec
or
cmpsb
push
mov
mov
sbb
lock
pop
repz
bound
mov
sbbb
add
dec
xchg
lock
xchg
pop
es
stos
push
and
xlat
mov
sub
clc
dec
cwtl
adc
pop
fmuls
into
andl
add
or
add
mov
arpl
sub
js
jmp
paddd
ja
adc
cmp
outsb
mov
call
xor
sbb
ret
xor
lock
or
and
xor
dec
sub
and
dec
or
lock
mov
push
lds
adc
sar
push
pop
sub
sub
or
aas
sub
xor
mov
das
das
das
das
sbb
sbb
aas
pushf
popl
fisubrl
scas
mov
mov
movl
dec
mov
ror
pusha
imul
bound
mov
ret
imul
push
mov
jo
sub
loopne
pushf
loop
adc
add
xchg
loopne
sub
shrl
les
pop
cld
sub
and
je
dec
pop
or
repz
xor
or
popa
push
sub
push
or
push
or
and
insb
adc
sbb
inc
and
rol
add
jmp
push
or
shl
or
or
insb
add
cmp
sbbl
adc
jne
stc
jle
testl
popa
loopne
cmc
and
jb
call
cwtl
sub
outsl
sar
mov
shlb
adc
out
aas
or
push
movb
out
roll
or
ret
ja
sub
arpl
je
clc
xchg
or
popf
or
push
cmp
add
cld
dec
lret
fstl
push
sbb
lods
jns
xchg
std
push
cmp
push
push
cld
mov
sub
pop
dec
or
enter
int
decl
int3
push
orb
mov
push
outsb
and
je
and
sub
in
movb
movsb
ja
hlt
mov
das
test
pop
mov
cmp
sti
aas
in
scas
and
sbb
lret
add
jmp
cmp
add
ljmp
push
mov
inc
add
in
pop
and
sub
pop
popa
ja
mov
push
insb
or
ja
insb
sbb
mov
pushf
inc
das
adc
or
and
mov
or
adc
or
mov
adc
jg
jno
je
das
mov
jo
cmp
ret
rolb
jmp
mov
dec
jmp
insl
add
cmpsl
gs
add
cmp
or
cmp
cmpsb
jge
in
jne
fsubr
fldt
call
enter
adc
outsb
iret
rclb
xlat
or
push
sub
mov
inc
call
lea
stos
xor
mov
mov
in
nop
xchg
repz
shlb
lock
out
into
std
fidivl
rcll
movsl
push
jmp
mov
loope
add
add
dec
and
rolb
std
stos
cs
jnp
jae
cmp
jbe
sub
add
test
loopne
xchg
pusha
push
cmp
leave
and
das
imul
push
ror
xor
mov
aaa
jmp
movsb
ficoml
push
push
mov
cmp
and
mov
inc
pusha
pop
or
mov
inc
paddd
push
jge
add
jb
mov
xor
inc
je
inc
sbb
inc
pop
push
mov
adc
mov
inc
mov
inc
inc
inc
pop
hlt
mov
mov
inc
icebp
outsl
jl
sbb
dec
sbb
mov
inc
push
push
and
push
mov
or
dec
jne
lock
hlt
jnp
movsb
mov
fidivs
add
shl
push
jnp
popa
pop
mov
mull
or
dec
inc
jl
je
loopne
add
and
adc
vmovshdup
mov
mov
loop
push
and
mov
scas
mov
mov
pop
sbb
jb
shl
popl
lock
loopne
cmpsb
test
fdivr
aas
sub
push
xor
push
lret
and
dec
pop
mov
cmp
jo
insb
ljmp
xor
mov
mov
mov
jl
mov
call
dec
loopne
jecxz
or
pop
sub
jmp
xor
dec
sbb
movsb
sti
sbb
mov
xor
add
lret
bound
ret
ss
push
out
arpl
pop
sbb
jno
push
pop
ja
es
nop
leave
test
dec
add
cmp
ret
add
and
cmpl
push
and
pop
movl
add
rcrl
mov
mov
mov
pop
andb
fcomps
mov
sbb
insl
int3
pop
and
nop
inc
mov
sbb
daa
out
jno
outsl
rolb
jnp
sbb
sub
mov
sub
and
lods
sbb
mov
pop
cmp
stc
push
push
cwtl
mov
jne
cld
xchg
pushl
out
jle
mov
push
push
cmpl
mov
fs
pop
cmp
add
add
test
bound
decl
jne
sbb
dec
xor
aad
cmpsb
mov
push
sub
mov
sbb
lea
jnp
and
aaa
cmpl
push
idivl
adc
movsl
or
sub
sub
add
xorl
sub
test
pop
dec
mov
shll
push
je
push
mov
push
cmpsb
sbb
adc
add
push
sti
jae
pop
jbe
stos
in
sahf
push
mov
sbb
jo
les
es
push
fdivrl
adcl
sub
pop
jmp
push
ficomps
inc
ret
push
and
mov
jne
sbb
xchg
mov
scas
arpl
push
cmp
shlb
fsubr
daa
mov
hlt
lar
pop
push
jns,pn
mov
push
hlt
mov
ss
movsl
sbbb
push
dec
mov
int
mov
call
sbbl
jmp
adc
mov
lea
cmp
push
mov
or
aas
push
incb
cs
aam
and
jge
mov
cmc
addb
repnz
or
lock
push
cwtl
and
sbb
cmp
or
jns
cld
push
jo
sarb
or
inc
mov
mov
sbb
or
js
imul
insb
inc
in
cmp
in
jae
bound
and
mov
stos
fnstcw
inc
cmp
outsl
mov
dec
fildl
dec
jb
xorl
add
push
or
in
cmp
sub
pushf
xchg
jle
test
repz
mov
or
xor
pop
inc
add
shlb
xor
mov
adc
xor
inc
mov
sub
in
pop
lcall
inc
push
cmp
inc
push
pmulhuw
pop
cmp
arpl
daa
jle
pop
cmp
xor
sbb
jmp
mov
jp
std
cmc
jns
sti
jbe
and
pop
cmp
gs
shll
test
dec
add
jae
insl
push
loope
mov
jg
jge
inc
and
addl
push
add
ret
out
jb
add
sbb
jle
mov
jb
cmpl
cmp
cmp
or
pushf
cmpsb
and
daa
test
jno,pt
xchg
push
out
inc
int3
dec
ja
mov
bound
xor
mov
int
cmp
pop
pushf
inc
sub
clc
xchg
sahf
or
fnstcw
fucomp
xchg
mov
dec
mov
xchg
mov
sub
add
sbb
cwtl
test
shrl
nop
cld
rorl
ja
movsb
jp
inc
sub
lods
adc
rolb
lea
das
inc
mov
mov
xor
das
mov
jbe
xchg
sbb
or
lea
xchg
fcomps
xchg
xchg
fistps
clc
or
test
lahf
xchg
xchg
les
popl
pop
or
mov
call
adc
push
setle
sub
aam
or
xchg
mov
roll
jle
lahf
lea
and
push
mov
movsb
push
mov
ljmp
xchg
movsb
js
jmp
jge
loopne
adc
jl
mov
adc
mov
sub
stos
add
jmp
lahf
adc
adc
inc
push
je
sbb
in
add
add
push
and
cmp
xor
push
mov
push
cwtl
mov
add
add
daa
adc
xchg
or
push
add
mov
cmp
sahf
call
sbb
faddl
fsts
jmp
repz
dec
pop
lahf
adc
push
rclb
in
pop
nop
aam
push
and
lahf
rclb
nop
mov
out
sahf
testl
pushf
add
add
ds
int
inc
rorb
fadds
call
sbb
lahf
pusha
sub
lcall
push
push
cs
xchg
call
cltd
sahf
stos
cmp
inc
jmp
sub
test
mov
jle
adc
inc
xor
dec
movb
jne
fs
rorl
jge
inc
mov
pop
add
mov
int3
fbld
fiaddl
loope
xor
push
aam
jno
loop
es
adc
pop
or
cmp
add
add
and
ret
mov
jno
mov
jb
aas
dec
insl
cmp
mov
inc
hlt
fdiv
mov
inc
mov
addl
daa
and
adc
inc
orb
std
push
fbstp
lret
or
inc
or
pop
pop
fdiv
je
dec
dec
outsl
sbb
pop
dec
adc
and
jno
sbb
jl
or
lret
movsb
inc
push
push
jge
add
sbb
shll
movl
and
jne
jo
mov
or
push
adc
and
inc
sbb
sbb
fldl
pop
jbe
push
adc
dec
xor
lock
mov
adc
push
cmpsl
test
xchg
in
sub
cmp
mov
loop
cmpsl
cwtl
outsl
push
fsubp
cwtl
xchg
xchg
cmpsl
mov
outsb
push
sahf
add
jle
test
ja
dec
popa
xor
sub
popa
or
lock
movl
push
outsl
popa
mov
fdivs
sbb
hlt
jecxz
and
mov
movsb
stos
fadds
cmpsb
xchg
andb
in
es
xor
push
and
add
push
ljmp
daa
ret
lock
adc
jno
jg
xlat
or
inc
sbb
imul
fwait
adc
xchg
pop
sbbb
push
pop
add
leave
jb
mov
in
daa
jecxz
nop
sbb
lea
inc
cmp
xor
push
rorl
push
cmc
insb
ficompl
pop
xchg
ret
push
jecxz
shl
imul
inc
mov
fs
or
lock
xor
test
cli
or
incl
and
push
in
add
or
sub
pop
push
mov
push
pusha
push
add
or
pop
test
orl
mov
loop
subb
inc
add
test
aas
rolb
inc
cltd
adc
cmpsb
out
pop
out
jbe
push
inc
enter
addr16
xlat
sub
or
fmull
xor
inc
mov
sbb
adc
pop
imull
dec
lock
or
pop
pop
lds
test
push
mov
stos
clc
dec
xchg
sbb
sbb
movsb
xchg
cmp
fdiv
dec
ljmp
jns
or
push
sub
pop
cmp
add
add
add
add
pop
jp
mov
and
xchg
aam
mov
add
ret
imul
and
mov
push
in
mov
lock
mov
or
popa
mov
jo
or
mov
outsb
repz
adc
decl
jbe
and
dec
mov
pop
call
mov
xchg
dec
xchg
lcall
push
icebp
xor
sbb
mov
cld
insl
inc
mov
xor
add
jmp
sbb
insb
test
dec
je
inc
jns
outsl
dec
mov
sub
xor
sub
mov
pop
adc
xor
sub
or
in
mov
les
mov
cmp
aam
adc
jae
lods
cmpsl
sti
lods
cmp
mov
or
mov
notl
sub
movsl
push
add
test
in
or
cmp
and
xchg
pop
push
icebp
dec
sahf
mov
mov
lea
jle
ja
mov
adc
cmpb
pusha
loopne
push
pushf
cmp
sbb
sar
pop
mov
rolb
mov
inc
dec
lea
out
mov
fdivr
mov
and
sub
mov
or
je
or
sbb
popf
adc
push
pop
push
add
icebp
sbb
cli
push
cmp
xchg
sub
or
ficompl
adc
mov
ds
fisubs
add
sub
push
imul
lock
pusha
lret
or
ja
test
movsl
mov
mov
sbb
in
hlt
out
sbb
test
stc
cmp
push
shll
or
inc
insb
je
lock
adc
lds
loopne
sub
xlat
scas
popa
sbb
pop
and
das
xchg
ss
or
xor
mov
mov
movsl
fnstenv
and
fs
or
incl
outsl
cmc
inc
lcall
pop
cmpsl
dec
ret
imul
lret
xchg
aam
ljmp
sbb
pop
and
jb
or
fidivs
xlat
sbb
jle
inc
je
pop
push
or
mov
test
mov
ret
add
hlt
inc
adc
push
fdivr
or
lock
cmp
push
jae
loopne
test
sbb
mov
fldt
xchg
mov
aaa
jne
das
mov
cmpl
push
add
dec
and
jne
in
or
test
mov
pushf
in
rcl
in
sub
mov
or
adcb
push
ret
subl
shlb
xchg
xor
push
addl
negl
inc
xchg
testb
rol
hlt
dec
lret
or
push
push
ss
cmp
mov
xor
mov
mov
mov
movsl
iret
add
pushl
adc
andl
lds
hlt
mov
inc
cmpsb
sete
mov
add
cmp
xor
add
or
je
mov
loope
xchg
jns
push
sbb
sub
test
jmp
loop
mov
push
pushf
into
add
addr16
incb
je
cmp
je
test
cmp
sbb
push
enter
xor
aas
add
pusha
fistps
cmp
sub
data16
movsb
sub
adc
mov
daa
xchg
or
lds
mov
adc
jecxz
ja
add
push
add
ret
nop
pop
jne
std
imul
hlt
jmp
cmp
jle
jae
mov
xor
test
pop
repnz
mov
xor
int
or
mov
out
push
mov
mov
inc
cld
adc
lea
ret
rcl
sbb
arpl
lock
push
push
mov
mov
pop
enter
lea
stc
rcll
push
pop
xchg
cwtl
in
push
jo
inc
call
pop
icebp
pop
jb
cmpb
jne
and
aad
adcl
movsl
push
add
jne
outsb
mov
aam
jae
addr16
decb
mov
dec
inc
daa
es
mov
in
lahf
shl
pop
fldcw
pop
data16
push
adcl
dec
in
push
lret
push
out
mov
test
fcmovne
xor
je
adc
fcmovne
mov
xchg
or
add
int3
je
cltd
es
mov
loope
sub
jl
and
lods
mov
rolb
jecxz
nop
outsl
push
mov
mov
or
into
je
inc
sbb
dec
testl
pop
mov
or
jne
and
jnp
lea
or
push
inc
pusha
and
lock
xor
xchg
mov
add
mov
dec
jmp
pop
push
jo
out
xchg
sub
inc
cmp
mov
aas
je
into
sub
pop
adc
and
add
movb
inc
jmp
mov
loope
or
inc
fdivs
cmp
sub
cwtl
std
cmp
push
je
xor
icebp
xchg
gs
fisubrl
fwait
sbb
push
imul
jmp
rorb
sub
repnz
adc
push
test
dec
and
scas
push
sub
sub
mov
shl
push
leave
cmp
xchg
lcall
ret
jns
stos
lcall
push
jbe
dec
popa
pop
xor
push
fdivs
pusha
push
push
pop
jno
aaa
add
add
cmp
fistps
jae
push
rcll
pop
popa
jle
sbb
xchg
insl
add
jg
das
sbb
sub
cmp
and
push
and
and
cmp
add
push
adc
adc
movsl
daa
pop
mov
push
in
ret
in
sub
movsb
cmp
push
loope
add
mov
call
lret
sub
lds
jno
push
pop
fwait
inc
add
cltd
push
insb
sahf
cmpsl
stc
cmp
push
lcall
loope
cmpsl
push
das
jmp
popa
or
js
add
or
mov
cld
push
out
int
idivb
insb
or
loopnew
push
push
lea
mov
mov
or
ja
out
xor
rorb
ret
xor
daa
jo
xchg
xchg
push
mov
cmp
test
dec
or
or
fisttpl
push
pop
dec
or
dec
xor
jne
push
aas
out
jle
fwait
insl
out
xor
pop
jb
cmp
mov
ret
dec
jge
loop
xor
repnz
mov
mov
push
cmp
lods
jmp
push
xor
and
jne
and
push
fstl
lock
or
sbb
or
adc
imul
lret
rorl
mov
xchg
push
lea
push
or
push
push
lea
push
mov
lret
add
jmp
jbe
adc
or
adc
enter
sub
popa
ret
test
dec
fdivl
rclb
sbb
loope
xor
clts
inc
adc
add
inc
sub
cld
shr
pop
notl
hlt
mov
imul
and
dec
or
ss
dec
mov
ret
test
mov
jb
pusha
sub
mov
movsb
adc
or
jg
mov
je
cli
add
cmp
jbe
push
pop
cmp
mov
or
rolb
jg
jae
mov
shr
lea
not
and
push
pop
cld
or
add
sbb
lea
xor
arpl
pushf
mov
add
add
lret
or
lahf
imul
pop
and
push
or
sub
jmp
clc
xchg
sub
jmp
jecxz
mov
out
xchg
clc
and
sti
add
mov
cmp
xchg
mov
push
pop
fimuls
mov
cmp
and
cwtl
pop
cs
subb
data16
mov
popa
rcl
out
not
and
xor
pop
out
jne
sub
cmp
jle
jmp
lea
das
mov
xor
xor
pop
dec
add
mov
push
or
jmp
daa
dec
sahf
or
or
mov
int3
jnp
popf
int3
inc
mov
out
aas
insb
or
dec
pusha
mov
mov
inc
mov
adc
pop
sbb
xor
pop
lret
call
testl
dec
adc
push
mov
imul
addl
push
push
repz
and
stos
and
cmp
shl
add
outsl
das
sti
subl
or
andl
sbb
in
popa
frstor
dec
inc
adc
ja
xchg
scas
jne
pusha
add
and
dec
pop
mov
jne
push
push
mov
inc
dec
inc
imul
adc
cmp
js
mov
adc
lea
sbb
jl
push
cmp
mov
adc
mov
jbe
insb
das
mov
push
xor
mov
lock
data16
popf
adc
cwtl
outsl
push
sub
cmp
pop
js
dec
and
addl
and
insl
cld
pop
push
aad
cwtl
pop
inc
adc
adc
lea
pop
sbb
movsb
adc
push
fucomi
fwait
orl
lods
fildl
incl
and
sub
push
mov
jbe
dec
jno
mov
add
rolb
mov
imul
pop
clc
dec
incb
pop
jle
mov
or
hlt
or
cmpsl
mov
mov
int
movsl
xor
lea
sbb
js
push
inc
xchg
js
iret
shr
push
inc
les
dec
clc
out
in
jge
inc
movlps
mov
mov
pusha
inc
cld
lock
call
adc
add
je
clc
xor
test
or
dec
mov
ss
mov
sahf
or
cmp
mov
lock
icebp
stos
push
dec
inc
jne
or
lds
not
and
xchg
ror
popa
or
mov
stc
adc
fbld
int
mov
mov
pop
adc
pusha
jb
cld
mov
or
mov
and
pushf
xorl
cmp
ret
int3
inc
cmp
mov
cmp
scas
add
cmp
add
mov
int3
add
pop
out
pop
mov
xor
stc
sbb
clc
push
cs
pop
add
push
xorb
or
mov
add
push
jns
nop
std
add
in
xchg
std
lret
lods
or
incl
or
add
fisttpll
lcall
int
mov
or
dec
shll
pop
push
lcall
lcall
add
adc
js
pop
outsl
adc
jmp
aaa
js
xor
test
iret
adc
push
adc
inc
insb
xor
and
int
adc
jl
arpl
xchg
lea
movsl
sub
das
outsb
in
mov
inc
dec
insb
pop
xor
push
sar
dec
adc
add
pop
sbb
test
xchg
movsl
cmp
xor
cmp
insb
sahf
loope
dec
je
fisttps
dec
push
fstps
fbstp
ja
push
push
push
add
inc
push
adc
dec
lea
mov
outsb
pusha
cmp
xchg
mov
push
pop
mov
lods
decb
into
mov
out
cmp
bswap
xor
cmp
dec
rolb
sbbb
cmp
or
cmp
lods
pop
cmpl
movsb
ret
inc
cmp
push
push
push
jge
jo
inc
add
shr
adc
cld
push
push
inc
in
or
mov
dec
or
test
cs
nop
cmp
and
decb
xlat
mov
add
rol
adc
xor
call
sbb
mov
jne
jmp
fcmove
jae
jnp
add
xor
aaa
pop
adc
frstor
jb
sbb
and
loope
loop
frstor
pop
sbb
addb
or
cmp
je
mov
ss
jo
in
cli
and
mov
dec
or
les
inc
jno
or
cmp
std
xchg
and
call
out
in
stos
jp
repz
mov
and
jns
jle
jne
mov
push
pop
outsb
leave
inc
test
push
mov
sahf
inc
push
pushf
mov
sub
icebp
pop
lock
and
mov
dec
add
dec
push
dec
xchg
sbb
iret
push
cmpl
inc
cmp
add
push
hlt
and
mov
decb
jne
popa
jbe
sarl
jp
mov
dec
xchg
cmp
jne
dec
fstpl
push
and
dec
shll
jns
jp
mov
inc
jg
inc
mov
or
das
pop
xor
sub
jge
aas
jge
add
or
push
or
pop
adc
cld
or
or
or
mov
mov
out
or
push
pop
inc
pop
or
iret
push
sbb
xor
push
lea
ds
jne
cmp
into
xlat
sarb
ds
sbb
lea
leave
cmp
xchg
icebp
repnz
test
sbb
je
nop
in
cmp
out
pop
jb
or
xorl
lock
pop
imul
pop
inc
mov
pusha
add
dec
and
cmp
mov
sbb
or
jp
or
repz
test
or
push
xchg
sub
fnstcw
das
adc
mov
es
add
getsec
test
add
inc
cmp
cmp
sub
add
push
mov
sbb
sahf
mov
inc
je
push
test
dec
add
or
call
push
jmp
xchg
sub
xchg
mov
or
ljmp
inc
add
loop
xor
insl
or
fimuls
xor
es
push
insl
or
xor
lahf
pushl
subl
adc
push
daa
xlat
lock
je
out
pop
jne
imul
adc
push
std
pop
or
pop
mov
sbb
push
mov
mov
sbb
clc
int
cmp
inc
push
or
cli
push
pop
addl
movl
fldcw
sbb
sbb
and
pop
mov
lahf
insb
int3
push
ror
xor
add
iret
dec
mov
mov
dec
rolb
mov
xchg
shlb
add
hlt
mov
mov
xor
add
sarb
outsb
dec
adc
inc
mov
jmp
movzwl
sub
jo
xor
in
int3
test
into
pop
jns
in
je
cmp
mov
decl
rorl
outsb
ljmp
imul
sub
xor
jo
pop
lcall
xor
ja
push
in
mov
cmpl
xor
movb
imul
xchg
xor
add
rorb
mov
mov
sub
popf
adcl
in
lea
scas
sub
inc
outsb
inc
push
scas
sub
in
ficomps
mov
hlt
hlt
icebp
inc
push
jns
sbb
pushf
int3
and
fistpll
insb
jne
jp
outsb
xlat
scas
popa
or
pop
and
push
nopl
jg
add
xor
pop
inc
cmp
xor
cmp
leave
inc
or
push
pop
sub
les
add
push
pop
std
pop
dec
movsl
sbb
xor
rol
ret
in
shll
lea
dec
leave
cmpsl
lret
orl
and
mov
ds
lret
lock
dec
sbb
and
sti
call
enter
enter
and
or
call
sub
nop
mov
pushf
pushf
lret
and
inc
xor
add
call
addr16
repz
fs
xchg
incl
fimuls
cld
stos
push
stc
pop
into
add
xor
test
adc
repz
pop
xchg
pushf
push
shr
test
in
out
aad
test
push
hlt
xchg
repz
lret
enter
enter
lods
rclb
enter
xor
dec
push
inc
add
mov
or
les
shrb
mov
in
pop
inc
or
les
xor
les
leave
test
test
cs
popa
mov
je
test
imul
icebp
mov
mov
mov
arpl
imul
mov
mov
jle
cmp
out
and
ss
js
sbb
xchg
clc
xchg
jbe
aaa
jne
cmp
aad
jbe
push
pop
lea
aas
sub
push
test
mov
or
push
pop
nop
sub
pop
xor
push
rol
or
fwait
shll
loopne
adc
add
mov
lods
add
or
popa
test
or
sub
pop
add
cmp
push
sbb
sub
push
cld
imull
mov
or
shlb
add
pop
mov
adc
or
mov
mov
iret
sarb
lds
jne
testb
out
dec
dec
sub
add
fsubs
dec
push
mov
push
adc
pop
loope
mov
pushf
and
add
hlt
mov
mov
aaa
inc
cld
push
and
sbb
insb
or
sub
cmp
add
add
inc
add
xor
pop
mov
push
or
shll
enter
pop
popa
mov
cmp
sub
dec
mov
mov
stc
cli
sti
sbb
std
mov
cmp
and
push
movb
adc
cmpsb
xor
jg
imul
jmp
fsubr
pop
sub
sbb
imul
movsl
and
pop
sbb
inc
push
or
inc
fmul
sbb
dec
or
out
fldl
movsl
jbe
inc
push
pop
loopne
fldl
or
fldl
or
rorb
out
push
mov
mov
xor
add
insl
fcmovnu
ja
leave
pop
jmp
jo
fnsave
sub
rorl
mov
outsl
sbb
test
xlat
das
sub
scas
pop
cmp
dec
dec
je
add
and
sbb
sti
fldenv
imul
int
push
xchg
jbe
ja
jge
or
sub
add
add
lahf
int
fwait
add
inc
test
jno
mov
lock
sub
mov
test
push
pop
ja
in
inc
adc
faddl
sbb
push
push
fdiv
fsubrl
fstl
push
or
lock
shl
push
inc
jbe
loop
aaa
jne
das
and
inc
lock
dec
or
repz
mov
int3
aad
out
ds
repz
pop
push
decl
les
mov
pop
sbb
adc
pop
enter
dec
scas
add
iret
inc
sbb
push
dec
mov
test
jg
push
and
into
xchg
jecxz
cmpsl
icebp
inc
fbstp
ds
xchg
inc
mov
sbb
pop
push
inc
add
or
add
les
jb
push
xchg
jmp
inc
faddl
bound
rclb
and
pop
shl
or
aas
push
sbb
cli
clc
push
fmull
lahf
arpl
aam
jp
cmp
testb
test
push
adcl
in
pusha
outsb
cmp
inc
repz
sbb
mov
mov
pop
pop
aam
adc
or
push
and
xlat
xchg
xor
sbb
or
xchg
mov
add
gs
push
imul
sbb
jne
mov
faddl
jb
int3
call
pop
sub
mov
dec
mov
std
lods
std
shrl
pop
lock
scas
pop
mov
mov
cs
sar
fmul
mov
mov
add
aaa
pop
and
jne
dec
sbb
pop
sar
mov
dec
ret
and
je
clc
mov
cmp
xchg
lahf
add
mov
mov
cs
or
mov
rolb
dec
push
test
pop
inc
inc
pop
push
rep
dec
pop
fdivrp
push
or
ret
ja
adc
sarb
sbb
mov
jo
jb
inc
rorl
mov
rcrb
popa
sbb
lret
shl
cwtl
xor
inc
and
out
movsbl
push
pop
xor
pop
or
add
pop
pop
push
add
and
pop
xor
jg
cmp
hlt
es
or
jae
insl
mov
or
adc
jp
jb
or
int
es
cs
call
in
imul
mov
push
or
data16
je
cli
cmp
out
fbld
lahf
sti
dec
cmp
inc
sub
pop
aad
mov
and
ss
test
jne
inc
jne
mov
xor
movsl
pop
orl
aad
cmp
push
int
movsl
test
mov
cmp
lods
cmp
push
push
js
inc
mov
push
mov
adc
leave
mov
call
mov
mov
fwait
mov
in
inc
push
loopne
sbb
lret
jl
cmp
call
lods
jo
add
pop
js
mov
jmp
pop
addr16
mov
sti
push
inc
cmp
lea
mov
jns
mov
loop
jge
mov
cwtl
add
mov
xor
cwtl
xchg
mov
push
adc
xchg
testl
mov
mov
or
cs
pop
sbb
jns
daa
mov
scas
sahf
add
incb
arpl
hlt
std
inc
dec
dec
pop
sub
notb
inc
pop
enter
mov
mov
jnp
sub
jno
push
jmp
pop
pop
adc
lahf
lods
cmp
into
je
test
pop
insb
in
lcall
pop
jb
ret
adc
fs
test
xor
add
lret
sbb
enter
lock
aaa
mov
lds
xlat
das
lock
insl
mov
jns
std
adc
sbb
jp
fisttps
test
jne
push
add
jno
movb
int3
gs
mov
pop
cmp
fsubr
std
call
je
mov
fadd
push
xchg
or
test
insl
int3
std
popf
bound
fdivs
xor
daa
fmull
dec
inc
mov
rcll
std
lds
sub
cmc
arpl
mov
arpl
and
mov
fildl
pop
imul
cs
cmp
jle
push
ds
icebp
push
push
mov
inc
scas
int
mov
mov
jb
int
std
out
lcall
add
xchg
mov
sahf
aad
mov
daa
push
test
ds
cmpsb
dec
xor
roll
lcall
inc
inc
adc
sub
test
inc
popa
cmp
mov
jb
call
std
rorl
sbb
fwait
or
lea
test
push
sbb
sbb
leave
and
inc
repz
daa
push
mov
popa
jp
jbe
mov
mov
ds
cs
push
sbb
sub
test
sub
jmp
dec
cmc
and
movsl
loop
push
cmc
rcll
mov
std
xor
cmpsl
mov
sbb
sub
or
adc
and
fsubrp
mov
int3
cmp
pop
mov
or
dec
stc
pop
mov
mov
pop
fdivrs
enter
pop
jns
dec
repnz
lock
dec
and
dec
inc
js
fbstp
sbb
pop
insl
mov
movsb
add
and
adc
shrb
push
inc
or
lret
jne
cmp
xchg
sbb
cmovge
or
mov
das
rcll
jl
sbb
test
xchg
add
add
cmp
sub
adc
mov
xchg
pextrw
cmp
and
dec
leave
sarl
inc
add
push
jge
daa
enter
je
js
xor
mov
sub
das
and
shrl
push
sub
aas
xor
push
adc
aad
pop
leave
inc
xor
mov
movsb
enter
test
mov
int
sarb
xchg
sbb
adc
loopne
fs
sbbl
sbb
pop
push
xlat
adc
sub
cmp
dec
pop
jecxz
ja
inc
ret
xchg
xor
fcoml
mov
cmova
pop
ds
dec
mov
xchg
int3
lock
xchg
jo
jmp
dec
sbb
xchg
dec
push
lock
push
arpl
repz
add
daa
test
sbb
test
int3
jmp
scas
movsl
call
in
call
jnp
dec
push
cmc
int3
jmp
int3
jmp
xlat
adc
and
int3
jmp
int3
jmp
movsl
dec
cmp
mov
lods
xchg
movsb
cmp
xor
test
add
nop
mov
in
int3
jmp
in
xchg
sbbl
lods
or
dec
pop
dec
gs
inc
enter
xchg
sbb
lret
lcall
sub
add
sub
lcall
fs
test
xor
jb
sbb
std
lret
pop
enter
cmc
loope
xor
inc
sub
insl
and
mov
cmc
sbb
int3
int
add
dec
jb
cld
mov
mov
lret
pop
adc
test
leave
push
ret
xchg
mov
jecxz
pop
repz
xchg
pushf
and
clc
mov
push
roll
and
aaa
ds
cmp
mov
movsb
daa
xchg
lret
movsb
enter
and
dec
pop
push
lea
xchg
or
cmp
push
inc
xor
adc
sub
push
repz
test
and
pop
test
sub
pop
mov
rcrb
leave
nop
pushf
lods
pop
enter
lods
or
out
loopne
adc
push
dec
pop
je
aam
outsb
xor
dec
daa
add
rorb
add
cmp
out
push
jns
and
sub
mull
lea
and
push
xchg
mov
loopne
mov
cltd
nop
sbb
jg
adc
and
inc
push
aam
rorb
lea
adc
add
jecxz
lods
adc
cltd
enter
xor
sub
or
push
loop
ljmp
test
lret
jp
cmp
sarl
inc
inc
faddl
nop
inc
add
xor
outsb
into
adc
xchg
fnsave
lods
dec
rep
ss
neg
pop
mov
sub
xor
lock
push
lods
push
push
add
aam
pop
adc
sbb
inc
adc
xlat
adc
fwait
lahf
out
pop
pusha
int
outsl
push
push
dec
adc
push
and
aas
xchg
lret
dec
push
pop
outsl
inc
repnz
jl
outsb
push
jbe
jle
sbb
lcall
int
fsubl
mov
hlt
nop
sbb
inc
daa
xorb
adc
pop
daa
mov
inc
lret
or
pop
dec
add
test
and
call
mov
sub
cmc
into
pusha
xchg
push
lret
sub
ja
mov
push
sub
mov
add
sub
clc
lcall
inc
rep
es
fidivl
jo
xor
lcall
ss
or
or
adc
lock
test
sbb
add
sbb
add
pushf
pop
vcvtps2pd
pushw
loopne
fcmovbe
dec
pop
dec
ss
sbbb
jne
pop
enter
or
sbb
xchg
shl
pop
aam
jg
inc
icebp
sbb
jne
rcrl
xchg
cli
sbb
imul
add
sbb
gs
pop
xor
pop
rol
mov
stos
xor
adc
or
jne
push
adc
fiadds
dec
repz
aaa
leave
xor
and
sub
dec
stos
adc
mov
shll
fs
add
or
popf
inc
mov
lahf
cld
push
mov
pop
inc
pop
sbbl
xlat
icebp
add
adc
loop
xorb
aaa
mov
sbb
adc
mov
jne
lea
popa
add
std
mov
add
les
mov
push
mov
sti
jae
mov
stos
bound
or
and
fcom
mov
sbb
les
inc
rorb
stos
scas
add
xor
push
stc
movl
les
xorb
and
lods
push
in
inc
push
fcmovu
or
pushl
lret
pusha
cmp
loope
add
icebp
and
add
cmpsb
xchg
mov
adc
into
and
popf
xor
filds
cmp
dec
ficomps
xor
daa
clc
inc
push
test
gs
sbb
jae
testl
es
ss
movb
je
jno
les
pusha
pop
daa
test
cwtl
les
add
mov
sub
ret
jmp
adc
or
gs
cmp
movsb
fstpt
setns
lcall
push
fidivs
jmp
rcr
or
jne
div
pop
dec
adc
inc
std
std
mov
jb
cmp
or
cmp
or
repz
in
xor
and
adc
add
sbb
or
fcmovu
fcmovu
lret
jo
jle
iret
ret
sub
inc
push
add
lcall
sub
dec
outsb
pop
pop
jmp
incl
or
pop
clc
mov
movb
and
movb
jae
sbb
push
in
adc
jns
daa
push
lahf
push
mov
adc
adc
push
and
ljmp
lea
arpl
hlt
ja
lsl
sbb
or
clc
out
sub
adc
mov
sbb
mov
clc
add
adc
mov
int
push
mov
pusha
fsubl
rorl
test
scas
popf
jne
mov
dec
bound
dec
lods
cmpsb
sbb
push
add
sub
adc
xor
push
adc
fnstenv
pop
dec
dec
xchg
test
es
inc
cmp
add
inc
lcall
jle
jne
lea
jb
js
mov
mov
clc
aas
pop
and
push
lret
push
sub
dec
and
ss
ret
cmc
jne
pop
sbb
push
and
dec
sti
cmp
adc
adc
leave
dec
jae
adc
and
add
rcrb
adc
or
add
dec
daa
xchg
push
sbb
or
push
adc
mov
jl
mov
and
jb
loop
subb
mov
lret
push
jno
sub
sbb
inc
sbb
add
fs
stc
nop
or
mov
cmpb
adc
lret
jo
repz
xor
push
sub
push
mov
lret
push
add
iret
add
add
xchg
data16
add
pop
sbb
adc
jo
jmp
stos
add
push
bound
lea
out
ret
lea
imul
mov
aas
mov
cli
cmp
or
mov
push
and
inc
lock
mov
sbb
sbb
push
add
xchg
hlt
adc
and
cmp
adc
mov
sub
mov
faddl
cmp
in
push
fwait
sub
loopne
xchg
pop
pop
pop
and
gs
add
inc
addl
add
pop
ret
hlt
or
scas
add
xchg
loopne
jl
lock
pcmpeqb
cmp
fdivrp
iret
jle
jnp
lods
iret
sub
or
lods
shl
push
adc
or
sarl
or
stc
xor
push
xor
pop
test
xor
jo
and
or
and
cmp
jne
gs
push
int3
pop
inc
jl,pn
cs
push
out
cmp
je
ss
mov
shlb
iret
push
aam
xchg
pop
addr16
outsb
or
or
enter
popa
adc
or
mov
out
add
lds
pop
std
sbb
add
or
into
inc
add
push
mov
nop
mov
or
pushf
ret
xchg
dec
dec
inc
lods
hlt
icebp
repnz
xchg
push
ds
pop
pop
mov
mov
or
fdivl
cmp
call
sbb
pop
add
xchg
dec
sub
loop
and
cmp
roll
adc
into
and
dec
sbb
insl
mov
jne
mov
bound
inc
add
push
push
dec
ljmp
dec
out
xor
fimuls
push
mov
xchg
loopne
push
jo
jb
inc
sub
or
cwtl
ljmp
push
push
or
rol
or
mov
clc
lock
ret
adc
ja
jmp
cs
pop
push
xor
lock
push
roll
pop
in
xor
sbb
add
sub
mov
scas
or
add
adc
add
add
mov
mov
pop
or
lret
and
lods
shrb
fwait
nop
mov
mov
and
sub
add
add
gs
int3
or
add
inc
pop
inc
sbb
scas
xor
push
dec
sub
add
xchg
insb
or
add
dec
pusha
out
add
sbb
in
js
shrb
nop
test
mov
lock
sub
mov
and
jl
enter
xor
subl
loop
adc
cmp
sti
jns
sbbl
pop
orl
inc
test
cmp
push
mov
push
cmp
lret
cmp
ljmp
inc
lock
lods
shr
leave
push
sbb
mov
pusha
sbb
jmp
dec
mov
lods
cltd
pop
push
xor
movsb
lock
or
push
cmp
icebp
imul
pusha
jo
mov
ret
cmp
mov
pop
add
cmp
or
into
aad
test
popf
lret
jne
cli
test
sub
jg
out
addr16
mov
push
or
fdivrs
jne
fnstcw
sbb
pop
jne
fsubp
mov
inc
mov
pusha
sub
fisttps
movsb
ss
pop
xchg
clc
adc
je
in
dec
je
sar
mov
cmp
scas
mov
jb
mov
dec
or
int3
xor
push
xchg
fidivrl
aaa
popa
mov
dec
cmp
in
mov
in
or
test
or
mov
add
inc
pusha
jne,pn
sbb
testl
mov
pop
sub
adc
cmp
jge
mov
ret
or
adc
inc
sub
add
fisubrs
push
push
ret
push
dec
jmp
stos
insb
repnz
ret
cmp
inc
dec
add
aaa
xor
mov
jo
sub
adc
fs
jno
xchg
imul
add
sbb
lcall
and
fcoml
jno
xchg
insb
in
das
pop
lds
and
xchg
cmp
addl
jge
jecxz
int3
cmp
std
sub
pop
and
mov
stos
sbb
bound
and
jbe
dec
jp
cmp
loop
out
inc
or
add
and
addr16
pusha
cmp
dec
jae
cmp
add
inc
rcrl
ja
inc
test
xor
and
cmp
ds
xchg
lock
loope
rcll
rcrl
pusha
mov
jp
es
and
mov
daa
outsl
loopne
cmp
jbe
pop
adc
add
mov
in
mov
dec
adcl
popa
xor
mov
je
push
inc
cmp
sbb
cs
adc
sarb
gs
add
enter
add
mov
daa
pop
inc
popa
mov
or
add
imul
push
sub
stc
loop
or
out
mov
add
inc
sbb
dec
mov
add
adc
fdivs
lods
mov
mov
inc
and
cmp
pop
mov
cmpsb
rorb
decl
arpl
adc
inc
mov
rcrl
jb
or
mov
mov
jl
sbb
das
add
xchg
notl
xchg
add
inc
ljmp
sahf
or
jge
stos
ja
or
aad
cmp
ss
jmp
xor
adc
rcrb
inc
inc
popa
cmp
adc
add
add
inc
pop
je
pop
es
popf
dec
sahf
jb
je
dec
shll
mov
adc
xor
test
sub
adc
add
es
inc
push
xchg
lods
addl
or
push
pop
dec
call
cmp
cmp
and
inc
mov
mov
jns
fcmovu
add
xor
inc
pop
loope
pop
add
popa
adc
mov
and
pop
sbb
and
inc
sbb
cmp
clc
out
xor
sbb
pop
fsubr
mov
mov
xor
mov
outsb
aas
andb
mov
loopne
daa
lea
daa
push
dec
mov
or
daa
add
lods
push
ss
stos
xchg
mov
cwtl
mov
jge
pop
es
orl
or
add
mov
or
mov
adcb
pop
loope
jne
jo
lds
pop
and
or
adc
and
jo
sub
lea
test
mov
jge
cmp
roll
mov
sbb
repnz
sub
push
sar
push
add
ss
inc
hlt
arpl
fcomps
pop
adc
fcoml
sbbl
add
aad
rorl
add
cld
andb
mov
pop
sbb
cmpb
lock
or
fdivl
and
or
out
int
pop
or
push
cwtl
push
ljmp
sbb
aas
xchg
add
or
sub
lea
pushf
pop
mov
inc
push
pop
push
dec
mov
xchg
rolb
add
call
insb
lea
insl
fwait
outsl
cmp
or
push
and
cmpsl
sbb
cmp
inc
mov
outsb
add
jge
cmp
xor
pop
movsl
popa
sbb
mov
clc
push
mov
cmp
mov
push
jl
mov
loopne
test
movb
jb
push
sarb
sbbl
add
nop
and
pop
lock
sub
andb
and
loopne
add
adc
inc
popa
mov
push
inc
cmp
arpl
iret
ficoms
adc
add
mov
jo
shll
dec
and
push
or
decl
cmp
mov
add
out
add
and
pop
or
inc
add
and
sub
mov
insl
adc
incl
hlt
inc
adcl
dec
jmp
xorl
or
push
addb
jb
xchg
andl
testb
pop
adc
cmc
push
or
inc
in
push
fnstcw
rorl
test
inc
idivb
add
into
push
cmpsl
orb
je
and
movl
pop
filds
add
loope
pop
sbb
rcl
notb
lret
mov
flds
xchg
mov
aaa
rcrl
and
out
mov
xchg
pop
sahf
or
mov
xchg
and
push
xor
xor
push
xchg
sub
sahf
movsb
loope
lock
cltd
xor
push
mov
jg
jmp
test
adc
loopne
or
xor
sub
fcomi
not
push
rcrl
movsb
lock
add
enter
push
cld
enter
add
adc
jb
rcrl
add
and
sub
pop
mov
cmpl
dec
clc
loopne
xchg
mov
xor
sbb
add
outsb
cmp
mov
inc
push
jmp
ret
jecxz
xchg
mov
add
cmp
jg
add
jmp
pushl
add
jl
daa
and
push
jne
and
mov
sarl
sub
adc
lret
xchg
inc
inc
adc
repnz
out
addb
cmp
out
mov
mov
dec
in
inc
xchg
hlt
inc
cmc
ret
adc
dec
sbb
jl
mov
push
cmp
fnclex
icebp
dec
or
cmp
push
ja
add
lods
dec
stos
or
loopne
jno
leave
adc
or
mov
xor
or
nop
mov
scas
jmp
arpl
xchg
addl
push
pop
xchg
xchg
je
add
push
test
add
fldcw
iret
dec
cmc
xchg
aam
inc
or
scas
leave
xor
and
rcr
imul
adc
int3
mov
dec
call
movsb
pushf
or
mov
ljmp
jl
js
lock
push
sub
dec
or
adc
cmp
and
pop
mov
out
les
cmp
das
sbb
cmpsl
fildl
add
mov
ret
push
mov
dec
inc
dec
pop
scas
mov
mov
frstor
sahf
sbb
aam
rcl
in
out
cmp
ret
xor
mov
cli
sub
push
and
push
dec
loope
jle
push
jne
mov
iret
call
ljmp
test
data16
mov
jmp
adc
outsl
jo
test
fdivs
adc
lea
mov
das
insl
in
imul
movsl
test
xchg
fdivs
in
jb
aam
std
popl
push
push
push
mov
aaa
and
and
enter
dec
popa
les
arpl
push
push
pop
sbb
lcallw
xor
cmp
inc
jmp
mov
hlt
pop
rolb
insl
js
cmp
imul
lret
push
push
adcl
insb
mov
in
loopne
mov
and
adc
adc
loope
sbb
inc
push
mov
xchg
rclb
fdivrl
xcrypt-ecb
cmpsl
mov
jbe
cmp
pop
mov
push
ja
cld
and
cmpl
in
push
mov
jb
test
mov
adc
push
or
push
push
jb
or
leave
jp
lret
jecxz
repnz
push
ret
or
movl
inc
or
repz
add
pop
fstpt
inc
push
or
enter
aas
pusha
jecxz
push
xchg
xlat
mov
push
cmp
filds
sbb
and
push
add
pop
or
test
cmp
insl
or
test
or
call
cmp
dec
dec
inc
loopne
dec
push
mov
mov
movsl
in
xchg
cltd
and
sbb
cmp
dec
and
testb
add
fimull
pushf
or
fisubrl
cmp
push
sub
xchg
cmp
jl
shrb
or
in
lds
mov
fs
add
adc
mov
pushl
es
cltd
cli
in
xchg
test
adc
in
fucomip
and
or
adc
out
jmp
sahf
sub
aam
shl
ret
das
aam
sbb
stc
ds
movsl
xor
or
jne
pop
in
mov
cmp
sbb
adc
xor
dec
dec
test
loope
sub
mov
shrb
and
hlt
popf
inc
sarl
fs
add
stos
adc
mov
inc
or
test
xchg
lret
addr16
add
add
xchg
add
cmp
hlt
push
and
xor
or
add
add
icebp
push
push
movsl
jo
sti
jg
push
mov
sbb
rorl
ror
pushf
sbb
xor
and
bound
push
push
adc
dec
out
sub
add
or
dec
lock
jg
dec
jg
and
fs
pop
jl
mov
sub
mov
leave
xchg
or
fstl
movsb
push
call
fneni(8087
xchg
lea
or
xchg
fadds
add
or
add
xchg
jbe
lods
xchg
jo
call
cmpsb
cmpsb
lock
out
jb
shlb
mov
mov
fdivs
aaa
inc
inc
push
inc
inc
pop
xor
jns
xor
push
stos
lods
cmp
jmp
mov
or
pop
sbb
fwait
jb
jle
dec
or
test
jns
inc
or
sbb
push
fdivrl
xor
jg
callw
ljmp
rcrb
shlb
fmuls
push
inc
popa
pop
addr16
add
and
cmpsl
and
jle
ret
in
sbb
jmp
adc
cmpl
fildl
jle
mov
push
repz
addr16
movsl
and
jge
push
aam
cmp
mov
add
mov
cli
add
pop
or
loopne
push
pop
int
leave
add
cmp
pop
cmp
cwtl
jbe
push
or
dec
or
add
cmp
sbb
xor
or
loop
mov
pop
and
movb
sbb
loope
push
xor
cmc
repnz
out
and
popa
sbb
ficoml
repz
js
sbb
sub
hlt
nop
test
je
outsb
jbe
in
cltd
aam
push
inc
cli
inc
test
cmpl
inc
lods
add
popa
dec
jl
cwtl
jmp
xchg
pushf
cmp
or
je
xchg
cs
push
mov
sbb
enter
jmp
outsl
sub
shl
add
cmp
scas
sbb
dec
dec
mov
push
scas
jb
nop
add
cmp
ret
and
mov
sub
or
mov
aam
xchg
adc
add
jo
leave
repz
inc
add
jne
mov
mov
or
sbb
cmp
inc
xor
adc
test
pushf
subl
sahf
sbb
add
or
into
and
push
ds
mov
push
data16
cli
inc
andb
int
dec
or
icebp
nop
sub
push
jns
arpl
loop
sar
test
mov
nop
pop
mov
aas
sbb
fildl
je
pop
cmc
add
cmp
insl
rolb
mov
and
pop
sub
leave
cmpsl
push
jb
sub
test
mov
xor
push
cmp
jl
mov
inc
mov
adc
jb
insl
pop
jns
rcrb
pop
lock
jne
clc
push
mov
addl
or
mov
jb
dec
sbb
pop
mov
adc
inc
xorb
in
dec
dec
or
push
dec
xor
push
fildl
mov
mov
ds
mov
jp
int
sbb
add
insb
lret
pop
sub
or
dec
incl
lret
lods
sbb
adc
lods
mov
lock
xchg
test
divb
mov
add
std
jne
jmp
frstpm(287
sbb
mov
or
push
arpl
jne
das
sbb
ret
pop
lock
js
sarb
add
cs
inc
mov
ret
fucomi
sbb
add
call
cmpl
out
insb
adc
xor
ja
imul
ret
add
dec
xor
mov
cmp
dec
inc
push
lock
inc
mov
mov
lods
mov
jg
adc
pusha
pop
dec
ret
jle
aam
inc
lods
cs
adc
in
xchg
mov
or
loopne
sbb
dec
in
jecxz
mov
cmp
fstl
orl
mov
lret
pop
hlt
mov
jno
mov
in
xlat
or
ror
xor
fadds
mov
mov
mov
mov
scas
or
jne
std
jb
pop
test
test
or
mov
push
or
push
cmp
notl
or
sub
push
inc
push
adc
pop
orl
pop
inc
xchg
rorb
or
inc
lret
aad
or
mov
push
mov
add
cmc
adc
insl
sbb
aad
addl
adc
dec
mov
mov
clc
incl
call
cmp
je
cmp
adc
cmp
jb
testb
and
add
mov
add
andb
pop
add
mov
popf
jmp
inc
movb
jbe
jb
je
test
cmpl
les
jb
cmp
push
push
movsb
loopne
push
push
or
cmpsl
push
mov
push
mulb
and
shr
jmp
das
jge
pop
xor
negb
lock
adc
add
push
push
out
mov
pop
mov
cld
jl
add
fnstsw
mov
pop
es
jmp
inc
movlps
jne
push
inc
pop
pop
cltd
or
cmpb
add
push
shrb
mov
sub
lds
mov
or
sbb
pop
sub
sbb
add
je
xchg
cli
adc
adc
pushl
lea
lea
or
les
out
int3
cmp
fsubr
mov
sub
mov
popl
lods
push
nop
popa
dec
enter
inc
and
push
dec
je
add
jmp
je
icebp
cwtl
adc
sbb
adc
pop
sti
cmp
sub
mov
dec
and
lcall
sub
or
pop
loop
mov
call
xor
mov
rcrl
popf
xchg
ret
ljmp
push
inc
cmp
xor
out
pop
cld
lock
jnp
push
insl
or
mov
or
in
push
sbb
or
out
addl
adc
leave
leave
in
ss
leave
leave
leave
leave
sub
xor
fwait
xchg
ret
cmp
inc
and
xchg
fisttpl
inc
cmovs
xchg
xchg
push
push
pop
add
in
fs
in
je
jl
sahf
xchg
xor
and
dec
mov
xchg
cwtl
pushf
fwait
dec
xor
mov
push
insb
shrb
sub
cwtl
inc
mov
add
orb
and
inc
mov
hlt
and
movsb
mov
mov
or
clc
adc
adc
and
adc
or
sbb
or
or
and
or
and
daa
and
adc
insb
pop
inc
or
inc
or
adc
popa
push
jo
jne
leave
enter
inc
ret
add
rclb
xlat
sarb
add
dec
jne
out
dec
and
lret
insl
sub
jb
mov
mov
mov
cmp
sbb
adc
dec
or
cs
or
es
fnstenv
xchg
jo
andl
mov
push
xchg
jo
or
daa
lods
int3
dec
aam
add
pop
add
out
loope
movsb
add
pop
sti
inc
sbb
fadds
jne
mov
xor
dec
inc
mov
sub
fcomp
pop
dec
dec
adc
pop
bound
cmp
add
inc
pop
adc
ss
das
xchg
in
xchg
cmp
jne
adc
scas
rol
or
add
add
addb
add
cmp
add
fmuls
in
sub
or
popf
in
or
sbb
or
inc
lcall
pusha
pusha
jbe
xor
cmpsb
aam
add
sarl
je
push
pushf
insl
mov
leave
rorb
jb
adc
or
jge
ss
dec
add
add
stos
or
or
in
mov
insb
add
repz
cmp
or
nop
cmp
in
int3
add
xchg
imul
push
jecxz
cltd
stos
cltd
outsl
pop
xor
dec
fwait
mov
popa
int3
aam
adc
mov
push
js
mov
inc
jp
andl
adc
mov
je
les
jbe
adc
mov
push
xchg
cmp
inc
sub
pushl
mov
pop
roll
inc
iret
jo
mov
fcoms
pop
pop
jo
popf
js
into
sbb
cmpsb
mov
rolb
testl
adc
mov
add
and
mov
neg
jb
push
mov
push
outsl
inc
test
enter
push
ret
std
xor
lods
ljmp
add
loope
xorl
adc
add
pop
mov
rcl
add
xchg
and
xor
jmp
push
fadd
mov
fsubrp
sbb
sbb
adcl
add
mov
sub
bound
xor
pop
out
adc
add
xor
cmp
scas
push
or
std
or
sbb
xor
push
push
xor
pop
cmp
adc
std
pushw
out
out
ficomps
add
sar
ret
mov
or
add
negl
insb
pop
rclb
adc
pop
ret
adc
adc
or
negl
int
mov
inc
sbb
mov
push
dec
ljmp
mov
push
inc
pushl
mov
add
jns
dec
sub
mov
cmp
cmp
pop
and
lcall
pop
int
test
inc
ss
mov
xchg
test
in
jbe
adc
mov
pop
cmp
in
lods
out
sbb
mov
andb
mov
mov
cmp
sbb
dec
push
cmc
mov
xchg
out
push
cmp
add
shrb
movsl
mov
mov
jge
push
xchg
adc
mov
insb
orb
scas
inc
call
jmp
push
dec
cli
nop
cmp
push
jo
adcb
out
inc
or
loop
lods
jnp
int
lahf
mov
pusha
fcoms
push
inc
xchg
aam
adcl
sub
push
jp
add
cmp
mov
sub
add
insl
mov
test
subb
rolb
jno
add
clc
jecxz
mov
fnstcw
xchg
jne
movzwl
mov
and
aam
hlt
sbb
ficomps
shr
inc
int
push
jmp
inc
or
push
pop
jl
loop
pusha
push
je
add
add
jae
pop
cmp
sbb
mov
jb
inc
push
adc
in
inc
mov
sbb
adc
jns
dec
add
sbb
cmp
lret
and
out
lock
jmp
xchg
mov
andl
sub
push
cmp
jmp
jae
mov
adc
cli
or
aas
movb
inc
mov
adc
cmpl
fmuls
sub
sub
and
sbb
pop
inc
add
sti
xchg
jne
adc
daa
jmp
pop
xchg
mov
dec
adc
in
jl
or
movsl
dec
add
nop
lret
inc
cmp
cmp
jae
mov
lods
movsl
std
pop
lret
push
orl
pop
mov
inc
inc
sbb
sahf
add
ss
decb
adcl
jb
add
sub
xchg
dec
inc
movsb
inc
mov
stc
pop
xchg
cmp
popf
loopne
out
add
push
xchg
mov
pushf
sub
addb
test
inc
outsl
cmpl
push
cmp
stos
inc
cmpsb
pop
lock
scas
sub
out
sbb
mov
add
xor
jo
add
inc
ret
sub
test
testl
push
jo
lret
jmp
pop
rorl
repz
nop
lods
mov
insb
ja
lret
xorb
bnd
cltd
sub
rorl
bound
ljmp
push
cmp
adc
xor
rorb
mov
arpl
mov
loop
xchg
pop
jcxz
cmp
mov
jg
sub
or
cmp
les
pop
and
and
test
cwtl
ja
sbb
and
ret
and
je
loopne
loope
aaa
push
xor
stos
or
push
mov
sub
roll
xchg
sbb
scas
cs
test
inc
clc
mov
lods
inc
clc
or
outsl
xlat
gs
int
ja
add
dec
adc
popa
add
jmp
or
mov
adc
and
add
int
ljmp
push
fimull
add
inc
dec
cli
fstpt
mov
adc
add
add
jge
lea
add
in
aas
and
dec
push
and
mov
stos
and
sbb
fstl
mov
fwait
dec
push
lock
ret
pminsw
daa
jle
pop
inc
inc
push
mov
out
lods
mov
pop
inc
fimuls
lods
add
add
fnstcw
or
push
cmp
inc
roll
mov
pushl
push
inc
sub
mov
nop
divb
into
sub
ja
push
nop
pushf
or
pop
push
fisubrs
add
ret
lea
les
pop
pop
negb
lods
mov
out
push
gs
les
arpl
push
pop
add
sbb
sarb
xchg
jg
ja
dec
push
mov
or
adc
jge
addr16
mov
aas
subb
or
adc
dec
xchg
test
pop
xchg
sub
rclb
cmp
mov
inc
bound
pop
adcb
jge
mov
pop
sarl
pop
mov
cmp
mov
jns
ret
mov
pop
mov
jl
dec
lods
addb
mov
lcall
push
push
add
lock
push
js
adc
push
mov
mov
dec
sbb
sbb
xor
push
push
and
sbb
dec
je
inc
cmp
shlb
int
mov
test
add
js
pop
sbb
push
ja
add
add
push
popa
add
fcoml
mov
test
mov
pop
jns
add
add
push
inc
fistpll
and
push
hlt
adc
push
jmp
push
int
subb
test
push
jae
dec
inc
and
ds
movsb
lock
jmp
icebp
xor
jecxz
sbb
mov
loop
sub
ret
mov
and
push
sub
nop
mov
pavgb
cmp
and
pop
add
sbbb
push
sub
pop
adc
sub
movsb
dec
jnp
sar
or
push
cmp
sub
ret
loope
push
cmp
inc
cmova
mov
push
mov
ljmp
cmp
cmp
popf
add
daa
adc
mov
sub
sti
pop
xchg
cmpb
data16
cs
int3
jne
mov
dec
jge
gs
inc
dec
pop
mov
les
aas
sub
cmp
or
and
inc
mov
adc
test
sbb
add
mov
sbb
mov
outsb
pushf
mov
orb
cld
inc
aaa
push
mul
ljmp
and
int
jbe
mov
mov
jnp
pop
subl
dec
cmp
dec
xor
enter
jbe
repnz
das
adc
mov
lret
rorl
into
jl
push
jle
invlpg
adc
sub
clc
jle
mov
js
add
in
add
xchg
sbb
adc
mov
add
push
adc
les
ror
shr
inc
pop
in
iret
xchg
sub
popa
cmpsl
inc
pop
nop
add
inc
push
adc
jp
out
jne
and
mov
bound
leave
movsb
add
xchg
ja
out
mov
jmp
xor
mov
or
push
es
adc
inc
push
repz
mov
pushf
pop
mov
xor
pop
sub
adc
push
popf
ds
cmp
cmp
mov
adc
data16
pop
testl
and
dec
repnz
rclb
add
loopne
adc
push
int
rorb
aad
add
push
or
mov
test
push
mov
pop
add
lock
sahf
dec
cmp
mov
mov
test
and
add
sbb
repnz
mov
adc
mov
shll
enter
dec
xor
adc
or
mov
cmp
shr
add
jmp
fmul
and
and
and
push
js
cmp
cmp
adc
or
adc
test
xor
mov
inc
adc
je
push
sahf
mov
sbb
or
add
mov
outsl
jmp
imul
add
std
or
cs
lret
jmp
inc
and
mov
and
les
aaa
jecxz
jge
mov
int
add
or
adc
jns
les
and
bound
jge
push
or
sbb
loope
flds
negl
aas
pusha
mov
push
lock
pusha
loope
pop
sub
dec
sub
xchg
andb
jecxz
pop
fstp
je
imul
fisttpll
call
sbb
hlt
pop
arpl
sub
adc
outsl
add
es
adc
sti
add
out
lret
add
test
fisttps
add
repz
mov
or
push
shl
sub
push
mov
sub
or
test
cmp
and
sbbb
arpl
xorb
sbb
jmp
push
and
divb
add
inc
jp
movb
push
fnstcw
xor
pop
mov
fstpl
push
and
push
loop
sbb
mov
cmp
inc
xchg
daa
mov
hlt
cmp
out
clc
fadds
neg
sbb
outsl
mov
adc
xor
jp
xchg
add
mov
mov
xor
sbb
aam
xchg
push
aaa
xchg
dec
xor
call
popa
fcompl
jbe
mov
inc
jl
add
jnp
jmp
sub
sub
jmp
sub
sbbl
sub
fldcw
and
test
int3
adc
push
add
pop
ret
cwtl
repz
shr
call
andb
pop
in
xor
loopne
pop
adc
stc
into
jbe
or
pop
shl
or
fdivl
xchg
shr
add
sub
bnd
enter
lods
repnz
and
dec
into
dec
pop
clc
sbb
shrl
cmp
add
pop
orl
loopne
or
jp
push
mov
loope
sahf
jmp
pop
movsb
sbb
aam
bound
adc
and
mov
decb
push
and
pusha
pop
aam
sbbb
cld
jbe
and
mov
push
add
aaa
inc
lcall
sub
sub
jno
loope
push
jmp
or
es
out
lods
push
shl
xchg
jne
mov
sub
iret
mov
mov
xorb
jl
icebp
js
push
push
or
adc
mov
sbb
hlt
adc
jp
inc
sub
or
pop
sub
pop
mov
pop
test
xor
sbb
pop
fdiv
mov
adc
add
mov
loopne
mov
mov
pop
cmp
add
xor
mov
into
cmp
adc
xchg
or
loopne
adc
and
fmul
jo
sub
pop
xchg
mov
add
loopne
xor
adc
imul
or
in
popf
xchg
adc
or
mov
and
sub
xor
add
fstl
imul
aaa
push
popaw
sbb
ficoms
adc
js
inc
adc
sub
loopne
fsubs
jo
std
inc
popa
xchg
xchg
lret
xor
xor
vcvtps2pd
sub
clc
jge
icebp
cli
inc
sub
cs
jo
jp
loope
ret
sahf
push
push
add
dec
rol
xchg
jecxz
jne
pop
cmp
push
and
mov
sbb
ja
add
ljmp
add
xchg
push
mov
cld
jno
fadds
into
mov
enter
es
pop
push
cwtl
sbb
test
mov
imul
pop
or
mov
aad
icebp
sbb
sti
mov
shll
push
or
stos
inc
add
or
push
movsb
pop
inc
mov
mov
fdivs
mov
cld
push
mov
loopne
add
sbb
lret
fdivl
sub
shr
loop
pop
fwait
popa
in
sub
dec
aad
cmp
sub
push
fstsw
mov
xor
inc
fsts
jl
or
xor
push
adc
fldcw
push
push
mov
add
sub
fwait
mov
adc
sbb
and
or
jle
or
js
call
mov
popl
fdivrs
les
mov
jge
insb
sbb
adc
ldmxcsr
pop
push
inc
mov
dec
mov
pop
test
test
adc
movsb
ret
repz
lcall
push
mov
aas
inc
adcb
scas
jbe
or
push
insl
jmp
inc
mov
lea
and
fidivrs
loope
inc
shlb
insb
adc
or
pusha
or
sbb
out
insl
push
push
mov
sbb
ja
mov
lods
addl
enter
inc
dec
enter
int
mov
dec
adc
xor
cmp
aam
add
jo
dec
es
adcb
xchg
stos
sub
es
xchg
mov
fwait
xor
repz
shlb
sti
jbe
stos
rcl
pop
or
cmp
xor
jae
adc
enter
daa
inc
fcompl
mul
sub
mov
jmp
insl
add
adc
dec
cmpsb
sbbb
push
adc
xchg
rcl
test
lcall
cmpl
inc
inc
push
dec
push
xor
les
gs
int
pop
and
push
mov
inc
enter
dec
push
jp
pusha
fimull
or
test
and
mov
aas
sub
push
push
add
andb
sti
add
push
daa
xor
and
xchg
sub
jne
or
jl
pusha
orl
push
stos
stos
mov
mov
pop
out
shrb
or
sub
test
mov
xor
mov
add
rcrl
adc
dec
dec
ficompl
jns
dec
xchg
loopne
lea
pop
and
sub
inc
shl
scas
test
mov
pusha
sub
aam
loop
rolb
xor
xchg
je
dec
or
jmp
out
push
push
cltd
insb
pop
and
mov
out
mov
inc
data16
inc
insb
sub
dec
jbe
pushf
fisttpl
add
orb
jmp
cmp
sbb
mov
mov
lea
or
jb
dec
xchg
mov
or
push
cwtl
sub
rorb
test
sbb
movsb
pop
and
jp
add
mov
pop
push
add
hlt
ljmp
sti
cmp
dec
dec
dec
and
stos
inc
sub
hlt
test
test
enter
aam
xor
cmp
popa
insb
test
mov
movsl
xor
inc
mov
lcall
dec
out
and
push
cld
not
subl
rcll
iret
pop
ds
push
or
ficoms
out
popa
adc
and
mov
jl
fcoml
pop
inc
shl
mov
jl
int3
push
aas
adc
xchg
aam
dec
push
in
xchg
inc
jge
popa
xor
push
mov
pop
push
add
xor
test
stc
adc
sub
cmc
push
or
sub
lea
mov
add
cli
cmovg
fs
push
adc
loop
pop
xor
pop
add
test
mov
dec
jns
inc
lock
cmp
mov
or
loope
clc
daa
xchg
inc
mov
jo
sbb
jno
cmp
imul
mov
rorb
dec
add
or
mov
mov
cltd
push
loopne
mov
pop
push
out
mov
aaa
ret
or
mov
add
pop
jle
lods
cld
and
xor
sbb
jge
pusha
and
adc
pop
inc
ret
scas
shl
out
addb
pushf
cmp
and
or
mov
mov
dec
pop
loop
stc
xor
dec
ljmp
pop
xchg
pmulhuw
lret
stos
sub
adc
mov
adc
push
nop
pop
inc
repnz
adc
nop
iret
lahf
or
mov
sbb
pop
repnz
sub
sbb
adc
jl
push
adc
xchg
jp
mov
xor
push
adc
into
mov
adc
mov
xor
movsb
mov
cmp
pop
loopne
mov
imul
addb
lods
mov
ljmp
cmpsb
lcall
jne
inc
jmp
mov
adc
inc
or
xchg
add
lret
sub
cmp
ja
adc
dec
in
push
dec
jmp
and
insl
mov
mov
cmp
rolb
jmp
jle
sub
push
aaa
es
sbb
popa
cmp
jmp
invd
dec
ret
sbb
loopne
imul
mov
jmp
cmpsl
mov
sub
pop
add
push
sub
and
xchg
pop
mov
jle
adc
push
incb
jg
orl
lss
mov
jbe
push
lods
iret
loopne
popf
pop
sub
sub
addl
sbb
mov
jae
mov
ret
sbb
dec
sbb
jo
mov
push
pop
jge
pop
mov
fbstp
mov
add
out
mov
adc
jae
imul
sbb
or
inc
jno
insl
and
sbb
scas
fisubrl
call
decb
out
arpl
pop
push
sub
aas
call
in
orl
sahf
jne
or
jg
and
lahf
inc
test
stc
sub
cmp
mov
jbe
sub
mov
mov
pushl
mov
shll
test
or
fs
sub
ret
cmp
pusha
ud0
testl
and
add
pusha
jmp
fdivp
pop
add
addl
jmp
cld
push
sbb
sub
imul
mov
jle
push
stc
push
adc
or
jecxz
add
fsubr
push
out
pushf
jmp
push
cwtl
pop
mov
xor
xor
mov
dec
mov
hlt
jecxz
test
xor
incw
movsb
rorb
push
cwtl
jge
neg
add
mull
push
sbb
cmp
and
cmp
stos
pusha
jge
adc
mov
sarb
ret
insl
dec
leave
jge
jle
add
sub
adc
adc
push
push
mov
int
lods
inc
out
and
pop
loopne
test
jmp
push
inc
mov
sbbl
rorl
adc
dec
mov
pop
add
or
fs
shlb
outsl
mov
push
xor
and
and
and
xorl
adc
nop
shlb
andl
adc
sbb
std
mov
or
or
mov
pop
es
cwtl
clc
les
int3
jne
shr
mov
les
test
ss
inc
into
jne
inc
or
cmp
mov
data16
xor
hlt
int3
add
jne
adc
dec
mov
test
outsb
call
or
jge
inc
add
inc
add
sbb
lea
or
jl
popa
add
sub
call
dec
lock
repz
ja
outsl
and
add
sahf
xor
mov
sub
sub
adc
idiv
jg
add
sub
mov
js
mov
nop
shll
loopne
adc
hlt
lods
add
or
shr
loopne
pop
or
or
push
out
jne
sbbl
jg
or
adc
or
icebp
jge
mov
les
divb
popa
aad
adc
mov
fwait
lods
ss
fcom
insl
fadd
loopne
shr
or
mov
push
imul
sahf
dec
fwait
aam
shll
mov
xor
push
mov
enter
fimuls
jo
and
push
adc
cmp
dec
fistpl
add
ficompl
sar
pop
and
in
adc
inc
jmp
call
mov
push
jnp
mov
and
dec
mulb
jl
ret
nop
dec
ja
sbb
lock
cmp
jp
stos
or
sub
push
nop
lret
lret
into
jmp
push
adc
push
xchg
shlb
and
les
fildl
push
push
int3
xchg
bound
or
jmp
sub
add
loopne
mov
jns
sub
enter
movups
les
or
or
call
mov
xchg
add
mov
inc
add
push
inc
cmp
repz
out
lock
pop
dec
push
ljmp
push
or
or
push
aad
cmpsl
jmp
mov
sbb
pop
cs
jne
cmp
add
shrb
mov
mov
fld
xchg
mov
adc
mov
faddl
dec
pop
cmp
push
pop
in
inc
cwtl
dec
adc
imulb
adc
inc
cs
or
add
stc
gs
or
jmp
clc
jg
mov
dec
cmpb
je
mov
cmp
pop
jne
dec
mov
clc
push
testl
mul
pop
add
sbb
mov
push
jp
jp
mov
push
negl
aam
out
xchg
outsb
fisttps
jno
xchg
pusha
or
rorb
pop
adc
or
ret
pop
lahf
xor
or
xor
dec
lea
out
mov
jns
add
push
adc
scas
jge
mov
and
add
movsl
hlt
and
popa
pop
xor
int3
add
sub
cwtl
add
and
fldt
shlb
test
adc
add
pop
ret
and
mov
je
test
push
cmpl
out
clc
add
aam
lret
mov
mov
loopne
aas
sub
xchg
je
std
movb
lea
sarb
push
add
inc
add
push
ficoml
xorb
mov
es
sbb
loop
lock
decl
and
add
jmp
sub
add
add
loope
mov
pop
xor
ret
lea
push
sub
imul
aaa
dec
inc
out
adc
jns
out
and
pop
les
sub
dec
stos
pop
sbb
idiv
xor
pop
jo
jns
or
add
testb
cmpsb
add
bound
push
rolb
lea
push
push
ret
sub
add
mov
pusha
imul
adc
xchg
aam
and
pusha
add
insb
cmp
or
cwtl
jmp
ja
sbb
cli
push
ret
jbe
jle
dec
pusha
cmp
mov
aam
sub
adc
leave
pop
add
shl
sub
shlb
enter
xchg
add
or
pop
jge
rolb
sbb
enter
add
push
xchg
inc
jge
cmp
pop
add
adc
mov
jle
xor
cmc
and
lcall
xor
stos
mov
adc
cmp
pop
jb
mov
xchg
fldl2t
call
out
cmp
jge
cmp
sub
adc
add
pop
cmp
sbbb
add
adc
push
inc
cld
or
push
and
stos
lret
pop
adc
and
pop
repz
test
lea
sar
lea
clc
mov
pop
fwait
nop
loope
es
mov
and
inc
addb
popl
add
cmp
add
cmp
xor
xor
push
mov
in
add
sarb
aam
push
mov
pop
cmp
push
dec
inc
xor
leave
and
add
mov
and
hlt
jle
or
je
cmp
dec
fwait
adc
fistpl
rorb
lock
ret
daa
xor
or
jne
pop
cmp
sahf
movnti
mov
and
mov
or
scas
test
movb
mov
xor
xchg
mov
pop
add
or
xor
push
or
cmp
xor
sub
adc
fwait
adc
mov
sbb
les
pushf
dec
inc
sbb
inc
lock
lock
add
mov
add
and
lods
enter
outsl
jno
movsl
cmp
ss
push
push
cmpsl
clc
mov
mov
mov
stc
xchg
stc
inc
addr16
add
dec
jmp
xchg
clc
sub
mov
inc
and
or
push
rol
push
inc
call
or
lock
xor
pop
cmp
add
xchg
xor
jo
out
sbb
mov
fisttps
push
pop
and
sub
or
pop
add
push
sub
or
ret
mov
shl
fidivrl
rorl
push
cli
or
test
jb
mov
push
jns
add
cmp
not
mov
hlt
jmp
andb
add
xchg
xchg
fimull
inc
dec
inc
repnz
mov
or
or
add
daa
pusha
pop
xchg
push
jne
push
add
adc
jae
stc
ficoml
add
sub
mov
mov
cmp
add
je
int
sbb
cmp
adc
loopne
sub
psubsb
jb
add
mov
mull
sub
data16
cwtl
or
mov
mov
push
lock
adc
xchg
je
inc
and
sarb
mov
jne
and
or
jl
loop
shl
popa
push
mov
pop
push
movsb
add
xor
sbbb
mov
and
adc
xor
cmp
xor
push
sbb
sub
je
push
cs
dec
inc
shl
jne
cmp
icebp
or
cmp
inc
loopne
lcall
xchg
sbb
inc
rorb
add
mov
and
icebp
adc
push
insl
push
jmp
insl
add
cld
aaa
hlt
or
cld
jl
jle
mov
mov
pop
inc
or
mov
inc
pusha
rol
push
shr
loop
mov
mov
sbb
jns
ds
jle
gs
clc
mov
je
data16
lea
cmp
popa
je
fsubrs
ss
je
dec
cmp
jmp
xor
add
pop
dec
and
or
test
or
and
or
mov
mov
nop
adcb
enter
lods
std
pop
lcall
call
dec
add
push
pop
adc
sbb
fstps
or
push
mov
or
rcll
sbb
inc
dec
sub
aam
rol
ret
notb
or
add
pop
push
or
clc
inc
mov
or
je
dec
das
sub
inc
sub
inc
ja
gs
dec
clc
jmp
icebp
cli
pop
or
jbe
mov
cmpb
jne
jp
addl
xor
cmp
or
and
hlt
or
in
insl
stos
pop
dec
punpcklwd
or
jo
mov
sbb
cmp
lahf
xor
dec
cld
mov
sub
push
and
push
xor
clc
jo
pop
pop
inc
sbb
popf
ret
pop
sub
dec
jge
add
mov
aaa
sub
mov
pop
cmp
imulb
push
cmp
xchg
ss
sub
ror
mov
mov
xchg
pop
lcall
add
cvttps2pi
mov
sarl
pusha
mov
cmpl
pop
lret
push
fidivrs
push
or
push
data16
pop
inc
pop
dec
push
mov
push
les
push
movsl
pop
ja
sahf
imul
inc
test
andb
mov
xchg
pusha
test
lret
rclb
jno
or
sbb
inc
out
pop
mov
fdivs
sbb
or
jge
pusha
cmp
sbb
pushf
jl
cmp
inc
cmp
cmp
sahf
adc
push
jl
or
int
lock
adc
jcxz
repz
pop
cmp
jae
mov
jae
mov
jno
xor
nop
add
ja
clc
or
xchg
sbb
push
rorl
dec
cmpsl
test
hlt
jmp
or
jmp
testb
je
push
ljmp
inc
aam
add
negl
ss
sbb
and
dec
shrl
les
fldl
arpl
add
mov
imull
adcl
rcll
xchg
js
gs
cmp
mov
dec
push
jecxz
das
inc
mov
ljmp
mov
inc
data16
or
jns
dec
or
into
push
leave
test
jbe
fdivl
push
push
mov
frndint
cwtl
adc
fs
dec
jo
sbb
dec
sub
push
cmpsl
xor
jo
push
dec
add
adc
mov
add
test
mov
jecxz
hlt
fsts
xor
loopne
add
daa
mov
mov
clc
addb
xchg
push
inc
rcl
dec
xrelease
shll
in
mov
test
cmp
jge
notl
pushf
push
cmp
sbb
sbb
lea
popa
lcall
sbb
adc
adc
sub
push
arpl
and
xor
cmp
dec
cld
or
sbb
inc
jmp
fists
dec
push
jns
inc
inc
add
or
test
stc
inc
inc
test
data16
sub
sub
mov
inc
mov
cmp
dec
in
xchg
mov
push
movq
pop
xchg
pop
mov
jmp
test
sbb
push
lret
cld
jo
mov
or
pop
es
xor
out
push
jne
lea
pop
jmp
adc
mov
xor
mov
inc
in
adc
leave
mov
pop
iret
push
insb
pop
xchg
adc
adc
cmp
push
jp
pop
fsubl
imul
lea
repnz
adc
jle
mov
sub
inc
pusha
cld
sub
xchg
icebp
or
movsb
cmp
mov
adc
inc
mov
ds
jge
cwtl
sbb
adc
popa
jnp
rorb
filds
ljmp
inc
jmp
test
adc
leave
mov
add
lds
fimuls
nop
adc
movzwl
nop
sub
movsl
sbb
sbb
jo
sbb
test
loope
pop
mov
lea
dec
inc
add
test
xchg
scas
adc
sbb
xor
and
insb
mov
js
sbb
jo
push
arpl
push
lock
fldl
sub
add
xor
jmp
pushf
popa
inc
xor
sti
and
xor
push
cmp
inc
add
jno,pn
jge
adc
sbb
cmp
mov
push
in
mov
pop
add
andl
sub
inc
add
decl
js
lret
adc
xchg
add
aas
and
shr
add
or
inc
mov
or
shr
int3
imul
lret
mov
add
add
or
bound
scas
push
add
shll
in
mov
popa
cld
stos
mov
cmp
test
mov
movsb
fildl
add
bound
push
xchg
mov
jp
clc
add
fiaddl
sub
pop
sub
lret
add
sbb
popf
dec
testl
cli
mov
or
or
mov
addl
adc
or
xor
mov
inc
adc
and
dec
mov
jb
enter
stc
out
rol
pop
adc
movb
lods
roll
shr
adc
add
mov
push
cli
and
mov
or
shl
andl
adc
ror
cmc
sbb
adc
clc
stos
cmp
pop
pusha
imulb
or
test
adc
lret
test
je
je
mov
push
or
push
adc
and
dec
inc
cmp
fidivl
xorb
icebp
sub
call
and
pop
mov
push
negb
add
ja
inc
cwtl
je
pop
call
aaa
add
sub
jne
add
call
pusha
push
ljmp
adcl
xor
test
aaa
xchg
mov
push
push
mov
dec
mov
daa
push
frstor
push
jle
adc
inc
pop
mov
bound
cmp
fs
pop
cmp
cmp
leave
mov
or
dec
cmp
pop
lret
lock
jl
cmpb
jl
xor
subb
idiv
insb
xor
mov
xchg
adc
adc
xlat
push
rcll
push
adc
dec
std
inc
dec
inc
push
push
mov
push
push
and
pop
nop
iret
ds
aad
inc
sub
sub
cld
aam
pop
or
clc
stos
add
cmp
sub
jp
fidivl
and
adc
lock
clc
mov
pushf
call
xchg
stc
and
enter
jge
je
out
or
test
mov
out
push
fcmovu
add
shll
das
mov
fisttps
test
adc
mov
pop
dec
adc
add
mov
or
xchg
and
pop
cmc
push
inc
or
mov
jne
pop
icebp
insl
andl
push
dec
outsb
rorb
es
getsec
les
dec
dec
jmp
xor
scas
mov
dec
movsb
pop
mov
aas
test
in
sub
inc
inc
mov
neg
neg
sbb
sub
xor
sti
adc
sbb
adc
adcl
and
push
push
inc
and
fsts
xor
xchg
fcomi
sbb
nop
mov
sbb
and
adc
leave
repnz
push
test
fwait
dec
jne
pop
and
add
int3
push
mov
adc
lods
rcl
ljmp
dec
and
shr
test
cld
icebp
adc
stc
outsb
push
idiv
and
push
je
not
cld
lock
je
idivb
and
je
ljmp
or
sub
sbb
and
sbb
mov
inc
pop
add
stos
push
pop
movsb
jle
jne
xchg
dec
adc
gs
int
or
into
jbe
jns
cmp
sbb
xor
push
dec
sbb
bound
adc
push
mov
add
push
add
sub
adc
insb
jge
iret
das
bound
adc
jno
pusha
adc
add
mov
xor
stos
mov
jle
loope
push
fbld
ss
push
mov
or
cs
int3
int3
aam
popa
push
cld
and
loopne
xchg
fisttpl
aaa
dec
fidivs
rolb
sbb
mov
adc
cmp
inc
and
adc
leave
jne
jp
sbb
jmp
das
outsb
xor
fists
or
lock
je
movsl
mov
mov
mov
or
es
mov
je
fdivrp
aaa
push
les
mov
push
cmp
ja
add
cmp
adc
notb
loopne
or
shll
leave
adc
pop
sbb
add
cmp
or
ss
add
pop
add
shrl
lods
sub
scas
invd
call
push
add
jmp
push
jbe
lahf
mov
pop
mov
into
sbb
pop
scas
sbb
pop
arpl
decb
ret
jmp
neg
je
iret
mov
scas
push
push
fdivrs
movsb
into
rclb
xchg
add
inc
add
mov
leave
lret
mov
nop
mov
cwtl
jne
push
cmp
add
cltd
aaa
push
sub
std
add
mov
or
add
mov
aad
dec
ja
mov
mov
adc
sub
scas
pop
ljmp
enter
sarb
call
pop
inc
daa
sub
inc
cmpsl
sbb
xchg
sub
adcl
inc
xorb
sbb
outsb
push
or
mov
sti
push
enter
push
inc
add
or
inc
push
or
rclb
jns
pop
mov
movb
push
rcl
out
sahf
out
aam
xlat
sbb
sahf
fcomp
fstpt
add
test
loop
addr16
movb
jmp
or
push
lods
adc
into
or
cmp
push
les
test
mov
data16
mov
orb
mov
mov
fadds
add
inc
push
add
fistpl
aas
jne
mov
push
add
fimuls
in
mov
call
cmp
ja
into
js
sub
xor
push
push
add
bound
add
add
push
push
pop
imul
imul
or
mov
sbb
lea
sar
xor
roll
fsubs
or
neg
lfs
pop
dec
loop
out
loop
sarl
mov
pushf
ja
add
sub
adc
sub
test
adc
mov
ret
mov
sar
fisubs
addr16
xchg
roll
sub
mov
inc
add
dec
inc
push
or
dec
sub
fcmovnbe
movsl
push
or
test
lock
fucomp
shll
add
fcmovu
popa
mov
and
lea
pop
sbb
subl
and
xchg
push
push
add
push
push
cltd
mov
inc
mull
in
jmp
dec
lods
loopne
inc
or
push
add
pop
inc
pushl
push
sbb
dec
rolb
mov
mov
push
lea
and
fisubl
dec
xchg
mov
push
push
or
cwtl
dec
push
xchg
stos
add
cli
movsb
sub
or
ret
movsb
sub
inc
repz
addl
mov
sub
mov
mov
test
mov
mov
sarl
outsl
jne
and
sub
call
add
cld
or
and
mov
or
push
push
xchg
add
ds
lret
ljmp
mov
clc
popf
int3
or
mov
shrl
in
out
sbb
shl
jmp
movsb
mov
pop
dec
add
lock
cs
lock
sbb
inc
andb
push
cli
div
and
adc
imul
or
push
sub
push
jnp
or
sub
mov
mov
push
or
mov
inc
and
subl
xor
js
scas
fnstenv
xchg
mov
push
dec
imul
rolb
lock
xchg
mov
xor
or
inc
shll
clc
out
adc
xchg
mulb
jb
inc
jb
add
mov
mov
repnz
inc
pop
adc
sub
pop
pop
inc
shlb
fdivrs
aam
fs
ss
inc
test
dec
ss
test
sbb
sub
push
dec
mov
xor
call
or
push
cmp
cld
inc
sub
lea
fcmovu
mov
push
lcall
lods
rolb
mov
mov
cltd
add
mov
clc
sbb
roll
sbb
negb
and
enter
test
stc
xchg
lret
jge
or
add
jge
es
sbb
sbb
and
movsb
adc
cmp
jne
repnz
and
pop
xchg
movsb
in
inc
fimuls
push
movsb
or
mov
adc
scas
push
outsl
add
sub
insb
sbb
mov
movb
pop
int3
mov
inc
mov
push
add
push
nop
sbb
inc
mov
mov
pop
jle
out
adc
gs
add
stos
lock
shr
dec
inc
loop
pop
add
or
orl
cmpsb
mov
loop
fcomps
xor
fiadds
je
fildl
call
jmp
loopnew
fadd
xchg
pop
or
lea
push
and
icebp
sarb
push
adc
xor
mov
out
xor
packuswb
and
xchg
mov
stos
call
rorb
mov
add
sub
cmpsl
sub
into
out
enter
nop
lret
or
cmp
push
stos
jbe
mov
mov
clc
js
add
pop
xchg
cmp
movsl
xor
notb
jae
add
negl
das
roll
sahf
jne
cmp
sbb
testb
lock
inc
or
aam
inc
in
pushl
dec
mov
dec
cmp
jge
mov
push
std
sub
cmpb
or
add
dec
cmp
cmp
mov
add
add
fadds
dec
jb
pop
add
dec
test
repnz
mov
add
or
mov
lods
pushf
adc
lret
or
add
push
add
sub
ret
adc
xchg
testb
add
out
adc
movsl
add
test
mov
mov
vorps
sub
sub
and
ljmp
pop
ljmp
hlt
int3
mov
or
add
and
push
or
pop
pop
push
ret
cmp
scas
add
adc
push
add
adc
mov
push
ret
les
lods
push
or
jae
jo
jbe
test
lret
movsb
repnz
and
cmp
xor
into
pusha
jg
push
fs
mov
and
sahf
flds
mov
and
shll
or
pop
mov
adc
add
movsl
popf
loope
inc
push
pop
jae
or
or
sub
adc
and
or
or
mov
add
clc
adc
jl
or
mov
mov
or
xlat
or
dec
pop
lahf
push
add
lcall
xchg
mov
and
fs
js
adc
cmp
pop
rol
jg
aas
movsb
push
push
pop
jno
fldcw
mov
sub
xchg
xor
xorb
and
ja
or
inc
stos
cmpb
jg
sub
into
cwtl
loopne
popf
add
dec
or
jne
aam
out
dec
pusha
dec
cld
mov
mov
rcrb
mov
cltd
ss
or
add
int
xor
add
add
pushf
xorl
jbe
jle
iret
nopl
sub
xor
xchg
xchg
out
inc
jg
into
into
mov
mov
fidivrs
sarb
push
pop
nop
and
cwtl
pop
mov
cmpb
rcl
adc
pop
xchg
add
rorl
decb
pop
lcall
add
leave
lahf
pop
test
out
adc
add
add
cmp
add
add
or
sbb
je
mov
inc
sub
push
inc
sub
jmp
mov
lret
xchg
xchg
lret
push
xor
xor
push
test
cmp
mov
push
outsb
mov
pop
roll
add
pop
fs
in
pop
fmul
cmp
cld
rol
cmp
add
xor
push
mov
and
cmp
mov
add
push
jmp
scas
adc
sbb
and
daa
sbb
push
or
and
mov
jge
bound
push
loope
pop
inc
jl
or
mov
mov
mov
xor
pop
push
xor
jno
mov
aam
xlat
inc
push
push
adc
cwtl
orb
sub
inc
jmp
adc
dec
sub
hlt
inc
xchg
push
loopne
insl
jmp
or
out
je
sub
mov
fs
push
cmp
mov
lret
inc
inc
int3
call
jle
popa
out
enter
lds
dec
add
jo
push
test
or
xchg
es
js
jmp
or
xor
add
push
or
mov
aam
fistpll
mov
movsl
into
inc
sbb
pushf
pop
jns
push
sbb
mov
mov
add
and
loopne
cmc
mov
test
mov
adc
or
dec
test
pop
sbb
jnp
inc
pushl
leave
and
or
pop
test
ja
testb
xor
mov
hlt
jno
inc
aam
pop
popf
mov
fcoms
inc
movb
pop
mov
hlt
out
sub
enter
adc
test
and
insb
psubd
je
mov
or
mov
fcoml
and
pusha
xchg
lret
in
dec
inc
sbb
clc
dec
dec
pop
lods
incl
popa
pop
inc
nop
and
jge
lea
addr16
pusha
push
pop
push
or
enter
dec
xchg
jl
sub
xor
shlb
mov
lods
push
shrl
cmp
arpl
jne
pop
inc
lcall
inc
add
xchg
mov
xor
add
cs
pop
xlat
add
rolb
mov
js
daa
jmp
push
push
xlat
xchg
test
or
jb
pop
cmpsl
or
in
mov
mov
popa
sar
and
or
pop
repz
xor
mov
inc
mov
or
js
aam
inc
push
jne
push
inc
loope
cmp
das
lods
movsb
into
inc
push
nop
dec
jmp
adcb
mov
add
xchg
lock
fisubrl
lods
pop
rorb
icebp
or
xor
inc
imul
outsb
outsb
loope
adc
mov
and
push
sbb
cmp
xchg
rolb
jbe
addr16
pop
add
clc
mov
pushf
test
outsb
lretw
jno
mulb
enter
cmp
movsb
sbb
dec
shll
push
clc
leave
fistl
add
lret
enter
je
mov
jg
xor
int3
ret
call
mov
test
pop
and
js
mov
mov
nop
dec
lea
mov
inc
sub
int3
popa
pop
pop
sbb
adc
adc
clc
mov
lock
dec
mulb
nop
scas
jae
fsubrs
imull
cmp
loopne
jmp
dec
loop
inc
dec
outsl
adcb
mov
loope
ss
push
js
subb
mov
inc
or
pop
and
mov
xchg
inc
pusha
add
push
test
jno
sar
fcompl
sbb
xchg
push
movsl
pop
imul
movb
addr16
mov
les
sbb
mov
add
sbb
cmovae
adc
cmpsb
inc
jbe
fadds
sub
add
push
or
add
adc
push
mov
xchg
pop
testb
jno
pusha
sbb
inc
inc
ds
orl
sbb
loopne
cld
sbb
xchg
cwtl
loopne
shlb
cmp
add
daa
xchg
sub
xor
or
test
enter
pop
int3
mov
add
pop
inc
push
daa
lretw
add
into
jno
bound
add
xchg
std
andl
push
bound
add
pop
push
cmp
adc
add
or
pop
inc
jle
mov
mov
mov
lods
insb
mov
in
loope
and
test
sbbl
sub
out
adc
add
mov
adcl
mov
fbstp
add
fld
pop
xchg
fildll
sbb
in
jg
adc
jmp
fstps
icebp
ret
push
lahf
or
add
jmp
cmp
mov
das
fcomp
adc
test
adc
pop
sbb
bound
xchg
ja
and
in
fcmovbe
shrl
mov
dec
jno
sbb
rorb
or
xchg
or
gs
les
iret
mov
dec
jo
gs
sub
or
incb
inc
push
cmp
gs
fcompl
cmp
lock
fs
in
insl
sbb
in
call
daa
adc
in
loopne
mov
xchg
sbb
ss
jg
jb
inc
es
cmp
push
or
pop
jns
xor
or
ds
leave
int
inc
dec
add
jnp
dec
lret
in
push
cltd
fmul
lock
pusha
sbb
bound
lock
adc
in
orb
dec
sbb
adc
adc
push
push
or
testb
add
adc
inc
push
cmp
cld
lahf
inc
add
in
mov
mov
adc
fs
shlb
mov
xchg
jl
sbb
jne
cmp
es
inc
inc
adc
push
mov
mov
push
cld
in
insb
push
inc
lock
inc
xor
sbb
jbe
xor
fwait
cmp
dec
fsubs
leave
adc
mov
inc
subb
out
and
lds
sub
fwait
in
in
test
sbb
jb
sub
mov
adcl
push
pop
ds
aam
or
xchg
daa
int
mov
mov
movsb
sub
test
orb
sub
adc
lcall
sub
sbb
mov
dec
mov
cld
faddl
inc
mov
stc
xor
sbb
pop
sub
sti
mov
inc
inc
daa
push
addl
nop
loopne
leave
and
xor
sub
sub
xchg
jl
xor
pop
sbb
imul
sti
int
ret
jne
int3
xchg
and
mov
insl
adc
mov
in
sbb
or
aaa
jl
loope
xor
call
and
mov
loopne
sbb
dec
or
jne
sub
daa
sub
shlb
push
insb
test
les
adc
xchg
dec
adc
xchg
and
int3
push
adc
xor
xor
cmp
dec
xor
and
dec
fs
and
in
lods
ficomps
cli
add
fcompl
aad
add
add
or
sbb
int3
xor
pop
rcr
add
lods
ljmp
adc
cmpsb
cs
jnp
stos
jnp
sbb
sub
fadds
mov
xchg
pushf
bound
xor
mov
ss
aaa
or
xlat
push
xor
call
push
add
repz
add
imul
adc
mov
cmc
andb
repnz
aad
or
inc
insb
or
rcrb
sub
pop
or
leave
loopne
mov
pop
movsl
faddl
aam
mov
cmpsb
sbb
mov
call
xchg
in
add
sub
dec
mov
fcoms
mov
inc
fcoms
cmp
insl
inc
jo
push
adc
xchg
mov
daa
jns
jo
insl
mov
adc
inc
cmp
pop
nop
inc
sahf
or
cld
mov
mov
mov
cmp
lea
jl
push
cltd
nop
fneni(8087
push
in
mov
shll
push
jnp
nop
xor
adc
adc
dec
mov
xchg
cli
mov
mov
mov
ss
fmuls
xchg
cmp
sahf
ror
out
cmpsb
shlb
sub
into
adc
daa
int
les
rcl
cmpb
mov
icebp
ljmp
add
mov
lea
cs
popa
loop
cmpsb
pusha
jnp
mov
mov
mov
cmp
mov
cmp
cmp
mov
cmp
cmp
int3
rcl
sub
mov
dec
test
mov
dec
push
xor
lods
adc
shll
ja
adcb
movsl
jl
adc
shll
jp
or
aam
cmc
push
lds
adc
in
test
test
sub
in
or
das
cmp
push
test
rclb
mov
nop
or
sub
adc
jl
inc
mov
push
jnp
pop
mov
cwtl
int3
jno
push
jnp
unpcklps
inc
adc
insb
xchg
sahf
or
push
ret
mov
xchg
xchg
mov
xchg
ret
push
mov
push
sub
xchg
outsb
lock
xchg
in
ret
stos
add
jne
mov
dec
xchg
mov
or
movsb
ljmp
add
xchg
add
in
addl
test
into
mov
mov
adc
fwait
in
pusha
cltd
fs
cwtl
pushf
push
fwait
in
js
jl
scas
mov
cmp
in
mov
adcb
dec
loope
and
sbb
jb
ret
les
mov
in
cwtl
xor
push
dec
in
adc
cmp
cmp
lock
jno
sbb
adc
outsl
in
inc
add
repz
rorl
xchg
xor
sahf
sub
add
inc
add
mov
cltd
ret
dec
dec
add
lea
sbb
stos
iret
stos
ret
cwtl
popa
mov
mov
enter
or
push
hlt
inc
add
add
test
shlb
xchg
add
lock
roll
cmp
insb
cltd
cmp
fs
and
std
sbb
inc
test
mov
sbb
enter
or
jb
and
sub
sbb
or
dec
push
rorl
orl
loopne
cmpsl
mov
ja
fwait
sbb
mov
or
dec
loopne
cmp
popa
cwtl
sbb
leave
shl
inc
xlat
imul
adc
sbb
enter
test
cmp
mov
test
pushf
in
inc
fsubrl
outsb
shlb
cmp
add
les
in
aas
repnz
cmp
stc
mov
out
mov
add
pop
cwtl
movsb
adc
lds
test
jns
inc
addl
xchg
xor
shlb
inc
stc
add
lods
or
cmp
or
fadds
loopne
cmp
mov
xchg
add
push
cmp
xsha256
cmpsb
push
insb
repnz
sti
cmp
mov
out
adc
arpl
mov
sbbl
xlat
enter
shlb
and
int3
enter
leave
leave
leave
mov
leave
leave
leave
xchg
cwtl
mov
adc
movsb
push
mov
dec
pop
shrb
cltd
pusha
shlb
repnz
mov
pop
dec
lret
adc
jmp
das
inc
pop
rolb
nop
mov
xor
jl
pcmpgtd
cltd
push
mov
dec
xchg
nop
out
fldt
bound
sbb
add
mov
in
or
jnp
mov
lods
and
test
outsb
test
jmp
repnz
cmp
sar
and
xchg
xchg
cmp
mov
leave
cmp
orl
sbb
repnz
push
call
add
adc
or
xchg
mov
loope
outsl
adcb
add
movsb
mov
or
mov
fmul
adc
in
lock
cwtl
and
faddl
adc
into
nop
in
dec
sbb
fs
aam
pextrw
loope
inc
fisttpl
or
and
movsl
mov
addr16
mov
insb
mov
shrb
cmp
orl
mov
lock
mov
add
jne
test
add
rcrl
xchg
dec
test
pop
or
and
loope
and
enter
test
add
call
pusha
jnp
lcall
mov
aas
psubusb
push
or
insb
push
cmpsb
int3
and
sbb
fdivl
sub
enter
adc
sub
jno
bound
fnsave
sbb
insl
add
ret
jne
insb
std
pushf
std
and
sbb
js
insl
and
mov
mov
insb
xchg
leave
and
es
cwtl
mov
add
movsb
test
fbld
or
arpl
add
in
adc
xchg
lcall
sbb
aas
sbb
popf
jmp
sbb
fadds
inc
xor
rclb
cld
inc
aam
adc
pop
adc
add
repnz
test
adc
lods
imul
xchg
xchg
dec
sarb
cmpsb
arpl
mov
adc
push
mov
fcoms
fmuls
push
xchg
mov
pop
mov
and
js
or
mov
dec
dec
jo
aam
jae
addb
adc
test
fiaddl
aam
call
sti
orl
push
sub
lock
lock
lock
and
xor
loopne
sti
mov
mov
rorb
and
cmp
mov
nop
test
dec
cmp
dec
pop
mov
popa
mov
inc
adc
scas
cs
lds
mov
movsb
push
adc
adc
rclb
orl
inc
xchg
mov
push
test
sub
shll
mov
enter
gs
out
lret
adc
xorl
into
out
pop
add
push
inc
xchg
pusha
test
push
nop
out
stc
pop
loopne
xchg
aaa
int3
mov
loope
dec
sbb
sub
or
mov
jno
nopl
mov
in
and
push
in
popa
mov
int3
mov
fsubrl
orl
mov
lds
lods
mov
adc
mov
stos
dec
adc
inc
pushf
gs
mov
icebp
mov
fdivs
inc
popl
lds
add
jno
and
mov
pusha
mov
test
cmp
xchg
movsb
mov
or
dec
sub
add
cmp
out
loopne
pop
inc
pop
lods
jg
mov
mov
adc
and
or
add
fsubrs
jo
inc
cmp
or
cs
add
adcb
sub
in
rol
in
test
sub
push
cmpb
dec
mov
test
push
call
pop
and
ss
fistpl
leave
ret
push
test
inc
das
ret
mov
mov
add
pop
dec
setg
adc
mov
hlt
push
jne
mov
sbb
add
cmpl
mov
inc
add
sbb
mov
enter
ljmp
aaa
mov
push
and
push
xor
imul
loopne
int3
das
or
or
pop
mov
xchg
in
and
fdivrl
cmp
mov
jns
in
enter
pop
push
les
sub
xchg
mov
imul
iret
and
aaa
lcall
std
xor
sbb
inc
xor
lock
xor
pop
or
sub
pop
mov
sbb
out
and
inc
movsb
cmp
sti
adc
mov
xor
xor
rclb
add
mov
or
add
adc
push
push
in
std
add
push
movsb
xor
sti
cmp
sub
and
xchg
lret
cmp
cmp
inc
stos
or
xor
enter
pusha
sub
and
test
enter
roll
sbb
inc
jl
jge
es
mov
jo
jno
xchg
fsubr
pop
jbe
das
in
out
out
in
mov
and
sub
cmp
stos
in
push
shl
push
add
mov
lock
xchg
shr
adc
in
pop
or
sub
adcb
sub
ret
lea
xchg
pusha
push
mov
pop
je
inc
cwtl
fs
mov
nop
sbb
and
push
stos
jo
xor
std
js
push
sbbb
inc
pop
nop
and
dec
cwtl
pusha
mov
inc
test
push
add
mov
sub
test
pop
xor
fdivr
add
inc
pop
jo
shrb
aas
les
push
inc
or
loopne
sub
es
mov
fdivs
jns
adc
jns
jno
mov
cmp
mov
enter
mov
inc
adc
inc
sbb
and
xor
in
in
and
insl
adc
pusha
mov
sbb
dec
jnp
pushf
in
sub
loope
mov
shlb
cmp
xor
sub
cmp
sbb
out
xor
jo
adc
insl
ja
and
jb
xor
std
xor
xchg
or
test
adc
insb
enter
fists
add
nop
das
jae
mov
ret
in
jge
push
adc
dec
mov
sbb
add
and
nop
and
push
sbb
add
adc
gs
out
shlb
cmp
pusha
dec
push
fists
and
adcb
aam
add
test
adc
mov
xchg
invd
xlat
dec
xor
in
sti
nop
daa
iret
rol
mov
test
in
pop
dec
movsl
push
movsl
adc
pop
dec
das
or
fwait
adcb
int3
mov
adc
loope
xchg
cmc
sbb
mov
faddl
dec
popl
and
leave
addb
adc
xchg
sub
leave
cmpsl
punpcklbw
lret
or
test
mov
fmuls
nop
push
inc
sbb
sub
pop
lret
pop
or
adc
inc
dec
or
rol
inc
test
sub
jno
aam
sub
aam
jne
int
pop
adcb
push
rcll
sub
adc
cmpsb
fiaddl
dec
mov
fwait
or
adc
subb
or
cltd
call
call
push
aam
or
pushf
gs
sbb
leave
add
jns
xchg
hlt
xor
adc
xor
fiaddl
or
push
sbb
aam
xchg
adc
or
and
or
push
sbbl
sbb
fistpl
stos
dec
in
cltd
sub
insl
push
mov
lods
clc
xor
imul
loopne
call
dec
roll
xor
test
leave
and
sbb
xor
icebp
xor
hlt
mov
dec
xor
mov
aad
cmp
xor
cmp
jl
jne
dec
fwait
push
sbb
mov
adc
adc
push
sbb
cmp
mov
xor
arpl
leave
and
dec
xchg
js
and
dec
xor
add
fistl
push
mov
lods
call
mov
and
inc
cmpsb
dec
clc
loopne
pusha
cmp
cmp
imul
or
pop
sbb
push
movsb
scas
and
adc
cmp
je
jbe
aam
lds
or
nop
push
add
lds
sub
pop
sbb
push
pop
pop
pop
pop
lock
inc
or
insb
xor
leave
and
int3
aam
cs
and
movsb
lds
fwait
test
enter
inc
dec
push
and
roll
ret
push
fldt
xor
pop
xchg
jb
mov
dec
pop
fadds
lods
in
jecxz
jbe
sub
je
adc
fadds
int3
adc
mov
aam
int3
es
xor
clc
mov
add
sbb
lods
cltd
aam
sbb
rorb
and
pusha
mov
fcomps
scas
test
jb
fnstenv
push
mov
subb
stos
pop
ret
xor
pop
or
push
cmpl
fisttps
cltd
mov
in
mov
add
push
sub
lods
cmpsl
mov
sbb
xor
push
xchg
sub
xlat
test
lock
xchg
cmp
lock
scas
notb
mov
in
jb
inc
lock
decb
or
xchg
mov
sub
lcall
inc
adc
push
nop
mov
pop
jmp
or
push
fldl
ja
sub
adc
adc
jno
aaa
cmp
aam
fstl
aam
pop
int
pop
or
clc
xor
cmp
push
das
enter
cmp
xor
aad
ds
and
sbb
jb
pop
sub
scas
jecxz
into
jmp
adc
movsb
xchg
cwtl
dec
or
push
aas
test
adc
ret
mov
jbe
inc
push
test
ficomps
dec
adc
sub
dec
cmpsb
dec
push
pusha
pop
insb
jo
mov
pop
subb
and
cltd
nop
dec
pop
mov
dec
cltd
subb
cltd
mov
fiaddl
sbbl
sub
cmpl
imul
xchg
inc
adc
and
inc
faddl
mov
xchg
adc
loopne
daa
jp
shlb
jnp
adc
sbb
push
fnsave
xor
and
push
popa
pop
nop
inc
repnz
outsb
lret
shrb
sarb
ds
adcl
push
push
cmp
and
adc
or
rcll
xchg
fimuls
jp
xchg
aam
sar
out
and
and
add
or
out
sarl
scas
and
add
out
mov
mov
pusha
or
in
mov
pop
test
lret
push
in
xchg
jl
and
mov
repnz
xchg
stos
sub
mov
or
or
test
or
in
ficompl
or
mov
cmp
xor
aam
and
imul
jl
rcr
and
fs
add
repz
std
arpl
call
pop
orb
or
or
out
adc
les
sbb
add
sub
push
loopne
cmp
fcmovb
fmul
ljmp
add
pop
sub
movsl
xlat
sahf
out
pop
imul
addl
les
sbb
sbb
mov
pop
jbe
incl
mov
ljmp
add
fistpl
or
test
clc
jnp
mov
add
and
jmp
fld
and
jnp
or
adc
out
leave
ljmp
mov
jle
test
repz
repz
xor
sbb
mov
ljmp
test
and
dec
dec
dec
dec
dec
dec
push
push
fisttps
stos
pop
pop
pop
popa
bound
gs
imul
jo
jb
lock
pushl
jne
ja
jns
xor
xor
xor
ss
cmp
sub
daa
adc
mov
sub
adc
or
outsl
cmp
adc
mov
push
inc
push
pop
xchg
scas
jns
cmpsl
stc
gs
and
xor
idiv
out
dec
outsb
je
jb
outsl
arpl
fs
out
sbb
push
sarl
int3
aaa
jne
push
mov
jb
gs
xor
cs
adc
popa
and
adc
mov
popa
je
outsl
outsb
push
mov
jno
pop
fcmove
push
cmp
aas
rdpmc
add
vmcall
testl
aaa
outsb
fldt
addr16
js
je
jb
gs
cmp
or
cld
adc
outsl
add
add
add
add
add
push
push
je
mov
popa
jb
mov
inc
imul
dec
xor
rcl
lcall
cmp
add
dec
and
jns
add
scas
imul
dec
push
inc
jbe
pop
lock
gs
insl
bound
daa
dec
outsl
jbe
jo
dec
arpl
push
jo
sub
addr16
mov
xchg
dec
jne
xchg
mov
lahf
out
roll
jb
insb
dec
popa
jb
push
jnp
insb
pusha
inc
insb
adc
jae
scas
cmpsl
xchg
popl
popa
into
cmp
addr16
push
jne
fs
or
fdivl
lahf
mov
daa
cwtl
mov
clc
sbb
dec
pushf
mov
cmpsl
js
push
jne
xchg
lcall
ds
popa
das
jo
mov
insl
pop
filds
mov
and
push
cli
add
ss
fs
test
jno
push
adc
sbb
repz
jmp
daa
sub
sub
sub
cs
movsl
jo
ljmp
aas
inc
das
pop
pop
lahf
mov
cmp
jge
pushf
lcall
outsl
inc
test
mov
and
push
pop
or
divb
inc
adc
push
inc
insb
jmp
les
push
fs
shr
scas
mov
inc
inc
mov
jnp
test
xor
insl
and
jae
aam
jb
jbe
mov
cmp
inc
sbb
ss
outsl
int
and
push
xor
sbb
cmpsb
aas
aad
push
jo
imul
insl
pop
mov
popa
je,pn
jo
xchg
mov
mov
idivb
and
rolb
inc
ds
scas
int
mov
or
xorb
inc
popa
data16
daa
mov
jne
pop
ja
loopne
xor
and
insl
push
xchg
sbb
mov
xor
mov
dec
mov
int
shll
les
out
mov
add
xchg
and
sub
test
sbb
jp
sbb
fs
inc
pusha
push
xchg
je
addl
in
ds
fs
popf
jb
loope
mov
loopne
outsl
mov
test
daa
sub
lock
inc
and
das
arpl
cmp
arpl
dec
popa
sub
mov
fiadds
inc
xchg
insb
push
in
inc
imul
xchg
imul
or
push
lcall
mov
push
xchg
idivl
jns
push
fistps
movsb
pusha
push
cs
insl
lock
adc
xor
bnd
aas
xor
hlt
pop
dec
nop
or
dec
add
pusha
out
dec
aaa
ja
or
ss
in
stc
jae
fs
push
hlt
cli
jbe
add
inc
jbe
je
xchg
push
mov
jo
andl
push
and
lds
xor
xlat
outsl
push
or
arpl
cmp
outsl
push
push
xor
inc
aaa
ret
or
mov
dec
xor
imul
in
jae
lea
rclb
shlb
leave
nop
inc
insl
imul
cmp
stos
sbb
popa
in
or
xchg
cmp
je
add
push
and
pop
push
cmp
push
pusha
test
addr16
jae
push
addr16
xor
fsubl
sbbb
add
sub
je
cmp
rol
movzbl
push
sub
lret
inc
sub
pop
jge
add
jmp
jo
in
push
lods
push
and
cmp
cwtl
ja
lods
vcvttpd2dqy
inc
and
dec
cmp
cltd
fisttpll
lcall
loopne
out
ss
add
ds
sub
rol
das
lret
jno
icebp
ret
repz
inc
mov
clc
ret
movsl
add
xorl
jae
jae
push
loop
imul
pop
add
cmpsb
test
out
aad
popa
dec
add
xor
insl
stc
fldl
js
jae
je
mov
fidivs
dec
pop
add
add
jb
sbb
sub
xor
mov
xchg
adc
adc
add
pop
movsl
jge
add
add
add
and
push
pop
push
push
pop
icebp
pop
or
aaa
ds
push
pop
hlt
and
or
cltd
divl
js
or
sub
fidivrs
add
addb
add
imul
push
xchg
test
add
sub
dec
mov
pop
daa
push
cmpb
push
and
sub
jb
int3
push
jmp
into
jo
add
js
inc
add
icebp
xlat
push
stos
int3
js
jo
mov
xor
int3
rorb
sbb
pushf
xchg
lea
mov
and
loopne
xchg
pop
xchg
xchg
mov
push
inc
mov
adc
or
test
xchg
push
dec
pop
pop
adc
loope
adc
dec
cmp
test
cmp
pop
cmp
test
data16
call
pop
push
lods
mov
sub
mov
pop
decb
xlat
popa
and
jb
and
sub
leave
push
leave
and
adc
xorl
orb
pop
add
xchg
sbb
jo
push
add
add
cltd
jbe
add
add
adcb
ja
lcall
pop
test
adc
aaa
mov
add
or
lcall
addl
mov
call
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
pushl
mov
mov
mov
ret
enter
int3
int
iret
rcl
call
rcl
aad
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
test
std
push
repz
cmc
div
clc
stc
cli
sti
cld
std
inc
mov
push
add
jmp
roll
movsb
fdivrs
call
int3
adc
fists
or
pop
outsl
ja
inc
cs
inc
lea
std
jae
jb
bound
dec
stos
inc
and
clc
dec
ss
popa
mov
repnz
mov
pop
mov
lea
dec
fisubrl
addr16
outsl
js
push
push
inc
push
mov
movsb
lea
sahf
insb
gs
ljmp
mov
daa
add
insb
in
fsts
and
out
pop
jns
inc
mov
add
cmp
inc
jb
imul
push
mov
jns
mov
add
arpl
push
xchg
cmp
outsb
rorb
sbb
mov
push
mov
mov
push
mov
inc
jbe
push
mov
lahf
fs
arpl
dec
es
flds
popl
adc
xchg
cmp
push
adc
dec
insl
mov
es
dec
lahf
nop
inc
mov
lock
push
fcomps
mov
xchg
pop
pop
pop
push
push
jae
lods
jbe
jp
aas
cmp
push
adc
insb
call
push
sub
cmp
gs
mov
and
or
fadds
push
push
push
dec
testl
add
outsb
mov
cmp
mov
dec
jge
jno
add
lock
call
mov
ffreep
push
inc
test
outsl
jae
imul
xchg
loope
push
fs
popa
jl
bound
push
mov
jbe
sub
or
pop
das
je
outsl
pop
loope
insb
xchg
daa
xchg
mov
aas
dec
jnp
popw
pop
cmp
cmp
sahf
out
out
ds
sub
xor
in
jmp
jle
sub
sub
imul
sub
sub
seta
popa
push
cmp
call
test
cmp
cmp
pop
pop
cwtl
cltd
push
scas
push
jb
sbb
push
jb
imul
jo
ss
lret
jnp
js
lods
sbb
arpl
sbb
into
push
enter
sub
sub
mov
daa
cld
push
hlt
push
iret
repz
call
mov
in
repz
cwtl
cmp
sti
negl
mov
nop
mov
iret
sarl
inc
push
test
lcall
add
pop
ja
out
pop
push
dec
or
xor
push
divl
int
adc
inc
in
das
push
clc
push
cmp
repz
dec
dec
push
inc
inc
push
dec
inc
inc
out
cmp
push
xor
sub
out
sahf
sub
sbb
adc
mov
jns
add
decl
out
sahf
int3
shrb
jnp
inc
or
incb
test
out
sahf
mov
xor
sub
repz
hlt
std
in
loopne
repz
repz
insb
inc
sbb
jns
out
cld
aam
mov
ljmp
aam
pop
pushf
mov
lcallw
jo
push
dec
jns
push
xor
aad
ljmp
jge
js
outsl
pop
cmpsb
bound
fs
sub
jno
je
test
push
lahf
push
lods
pcmpgtw
xor
add
jle
movsl
ret
push
insb
cmp
inc
inc
dec
jae
xchg
fxch
push
insb
inc
mov
sbb
push
inc
dec
xor
inc
dec
dec
dec
push
push
loop
inc
xor
push
dec
inc
dec
add
dec
dec
inc
add
inc
clc
ljmp
adc
sub
adc
incl
popa
movsb
std
outsl
dec
mov
mov
adc
outsb
mov
ds
iret
aas
cwtl
arpl
pop
clc
lret
sbb
jb
jmp
xchg
jge
arpl
cmp
adc
dec
scas
jp
cld
insl
pushl
in
fstl
mov
and
pop
jns
xchg
cmp
dec
imul
lret
add
inc
mov
dec
mov
popf
mov
sub
fwait
ss
sbb
pop
dec
sti
add
ds
xor
incb
int3
dec
dec
xor
dec
popf
lock
decl
out
dec
pushf
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
incl
and
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
mov
cld
incl
mov
out
fcoml
cmpsl
xor
ds
dec
xchg
scas
or
test
mov
iret
adc
into
mov
pop
and
es
mov
inc
cwtl
addl
jmp
sti
inc
outsl
push
dec
push
push
adc
or
outsb
jbe
add
mov
and
push
das
jo
nop
stos
inc
std
mov
push
cmp
xchg
add
push
je
dec
push
dec
push
lcall
mov
dec
and
sbb
push
and
inc
and
fisttps
cmp
push
and
inc
push
xor
pop
and
pop
push
pop
add
sbb
dec
call
and
adc
push
adc
adc
imulb
xor
dec
and
adc
mov
pop
xor
adc
inc
adc
xchg
add
push
dec
and
fucomi
mov
pop
and
adc
sub
and
and
push
dec
pop
fidivs
fstl
sbb
adc
push
xor
cmp
dec
push
adc
cmp
adc
inc
daa
js
cmp
das
daa
sbb
push
sub
sub
sub
xor
mov
sbb
push
dec
dec
sub
inc
inc
and
dec
pmulhw
mov
dec
pop
dec
dec
dec
inc
xor
inc
inc
dec
aas
dec
inc
dec
and
push
inc
and
pop
fnstenv
xchg
pop
push
adc
or
pop
jnp
adc
dec
xor
sub
adc
or
sbb
adc
ss
mov
sub
adc
sbb
mov
cmp
xor
inc
push
adc
sbb
popa
lret
sbb
adc
das
or
mov
push
push
pop
push
push
mov
and
and
int3
push
fadds
pop
xor
xor
adc
call
xor
add
inc
and
add
mov
mov
jne
cmp
adc
xor
push
pop
xchg
push
in
pusha
jb
push
xlat
add
gs
mov
cmp
xor
daa
or
and
sub
mov
push
push
sub
sbb
in
sub
in
add
adc
jo
inc
push
mov
and
and
adc
add
outsl
add
push
movsl
adc
jnp
inc
pop
adc
inc
lock
dec
nop
dec
cwtl
in
push
cmp
lcall
add
push
movsb
push
scas
daa
mov
jge
lahf
out
ds
daa
lret
leave
ds
add
xor
incl
mov
iret
jnp
jg
or
pop
sub
repz
push
and
add
das
sub
testl
pop
scas
adc
sbb
adc
clc
data16
and
adc
push
popa
push
ret
aad
and
insb
sbb
popa
mov
popl
enter
bound
fistpll
cvttps2pi
add
inc
add
ds
inc
ds
pop
ds
out
outsl
jbe
mov
pop
aas
cmp
repz
pushw
subb
repz
mov
mov
mov
out
inc
sub
lcall
pop
inc
pushf
cmpsb
lds
or
push
daa
les
push
pop
push
pusha
push
pop
int
pop
sub
scas
adc
adc
ret
notl
mov
add
cmp
sbb
or
adc
mov
pop
sbb
inc
jbe
mov
ja
push
or
pop
or
xor
inc
inc
xlat
repz
add
jmp
and
mov
cmp
push
pop
and
push
dec
cmpsb
adc
data16
ret
sahf
inc
pop
fcoms
jb
jbe
clc
stos
or
add
imul
sub
cmp
sub
fmuls
lds
push
pop
push
add
and
fildll
fimuls
adc
adc
xor
sbb
push
pop
and
mov
mov
fsubp
adc
cmp
push
out
pop
sbb
ja
sbb
push
push
cld
or
adc
xor
out
pop
adc
pop
jecxz
xchg
xchg
scas
jge
push
rcr
fs
cmp
outsb
scas
or
rcrb
cmp
popa
push
xor
ret
sahf
push
sub
xor
sbb
test
inc
ret
or
mov
inc
pop
das
push
cmp
jbe,pn
ds
sbb
je
cmp
jbe
inc
mov
pop
mov
cltd
jne
xchg
in
pusha
push
xor
adc
dec
inc
xor
sbb
xlat
jle
fildl
fists
aaa
pop
lods
sbb
lahf
mov
imul
or
fwait
cmp
testl
inc
mov
mov
xor
xchg
pop
pop
add
and
fwait
mov
dec
xor
mull
clc
cmp
insl
outsl
push
fadds
pop
es
ss
push
icebp
in
xor
cmp
sbb
push
dec
outsl
jle
push
into
pop
mov
aaa
daa
push
sbb
sbb
mov
xchg
addr16
into
add
or
or
dec
xor
pushf
fdivl
inc
mov
add
pop
pop
in
ficompl
add
divl
cmp
loop
adc
cmp
adc
and
add
vmovupd
jne
adc
in
es
mov
sbb
cmp
fucomp
mov
cmp
lcall
push
gs
xor
mov
jbe
jo
jecxz
int
xor
lcall
sub
push
aas
cmp
fisubrs
xorl
xor
in
mov
bound
insl
orb
stos
sub
push
shlb
push
pop
and
mov
push
pop
or
insl
xlat
subb
fisttps
das
push
cmp
into
sbb
adc
ss
xchg
xor
lods
dec
daa
or
mov
xchg
imul
jo
xor
sbb
arpl
or
inc
xor
inc
dec
sbb
cmp
cmp
fstp
push
mov
pop
add
or
popf
in
loop
sbb
into
inc
inc
test
ss
imul
rcrb
fcoms
push
jl
jns
popa
jne
push
scas
add
ja
and
or
push
fidivs
fldt
imul
je
call
jae
outsl
jo
jle
pushf
push
clc
in
sbb
push
ja
pop
lcall
add
repz
add
cmp
movsb
stc
cmp
mov
fwait
pop
mov
pop
sub
ja
cmp
jp
cmp
and
add
in
adc
adc
or
addr16
xlat
pop
je
mov
dec
or
inc
or
inc
aas
lsl
mov
push
sbb
xor
or
mov
shrb
dec
pop
adc
sbb
rcll
adc
sub
pop
in
pop
sub
jbe
mov
inc
pop
or
sub
xlat
pop
jl
mov
pop
cmp
jnp
pop
inc
sbb
out
push
fmuls
jmp
cli
pop
fadds
mov
loope
or
push
popa
ret
push
sub
insl
fisubs
xor
push
jae
movsb
cmp
popf
add
and
jnp
aaa
push
ret
outsb
aaa
push
push
aam
adc
add
adc
inc
add
and
push
scas
push
and
inc
xchg
outsl
mov
sbb
es
daa
mov
mov
aaa
inc
pop
out
pop
aaa
adc
mov
loopne
adc
sti
out
or
pop
mov
dec
jae
or
mov
imul
sub
inc
sub
dec
push
push
push
das
xor
adc
mov
out
dec
dec
or
jae
stc
pop
sbb
fisubrs
das
adc
out
or
addr16
pop
and
mov
dec
sub
xor
je
sbb
mov
xchg
push
loope
add
arpl
data16
jge
jb
add
loopne
imul
xchg
into
dec
pop
and
outsl
pop
push
pop
lds
les
scas
rorb
pop
xor
jecxz
cmp
cmp
sub
xor
xchg
pop
hlt
negb
and
adc
sbb
push
dec
daa
sub
push
and
xchg
pop
sbb
sub
divb
cmp
cs
pop
adc
and
inc
pshufw
pop
fsubl
int
add
push
and
int3
pop
jle
cmpl
and
sub
xor
sbb
xor
xor
inc
pop
repnz
into
leave
or
adc
daa
and
sbb
enter
pusha
pop
ljmp
dec
test
pusha
push
loop
sbb
pop
push
adc
add
inc
jmp
repnz
test
pusha
mov
add
mov
test
xchg
push
cli
sbb
pop
and
jbe
push
or
and
sbb
ljmp
ret
shl
mov
sbb
adc
or
xor
addr16
iret
or
xor
pop
add
or
test
fnstcw
out
xchg
push
sbb
dec
dec
sbb
push
ret
inc
adc
add
push
das
aam
dec
test
xchg
pusha
pusha
mov
daa
xor
inc
ds
mov
outsl
daa
dec
test
add
pop
push
pop
sub
in
and
push
icebp
nop
push
push
jecxz
icebp
fidivrs
dec
filds
push
push
mov
in
or
loope
gs
jne
push
test
jmp
pop
jae
add
push
dec
daa
and
loop
cmpsl
mov
js
push
xchg
mov
cmp
data16
adc
xor
and
mov
inc
enter
adc
and
xor
adc
mov
xor
sub
fwait
push
mov
subb
sbb
loopne
push
push
cmp
xor
mov
mov
jle
and
movsl
fiadds
pop
sub
aad
enter
pop
and
popl
cmpsb
rolb
loopne
inc
mov
adc
jbe
imul
es
adc
xchg
inc
xchg
cmp
clc
pop
jmp
pop
mov
mov
fnstsw
cmp
sbb
jnp
leave
xor
pop
out
jnp
add
mov
jns
and
jnp
sbb
cltd
mov
mov
inc
lea
test
mov
out
xchg
pop
and
jmp
jo
pop
add
pop
inc
fbstp
mov
pop
fwait
jae
cli
xor
sbb
mov
pop
jns
push
push
lcall
lods
adc
or
mov
push
inc
dec
cli
addb
push
out
pop
sub
sahf
sbb
mov
enter
cmp
add
ds
mov
dec
lea
push
jmp
lods
xchg
inc
fs
or
inc
lcall
ljmp
aas
cmova
sbb
inc
inc
add
inc
aas
cmovl
cmp
cmp
mov
sbb
dec
and
int3
ds
sbb
lods
inc
inc
cs
dec
adc
inc
inc
sub
andl
add
vcmppd
mov
jnp
dec
cmp
jg
cltd
mov
jae
sbb
jo
sahf
adc
dec
add
push
mov
lret
sbb
or
adc
pop
js
decl
adc
pop
jae
pusha
popa
pop
adc
sbb
hlt
cmpsb
leave
addl
out
scas
mov
ficoml
lea
cmp
or
loopne
inc
stos
das
adc
add
pop
jbe
mov
adc
add
pop
cmpsb
mov
mov
push
pop
or
push
cmp
add
adc
adc
jg
pop
dec
sbb
or
inc
mov
dec
sbb
sub
push
push
loop
pop
sbb
add
fwait
xor
sub
insl
sbbb
dec
jp
clc
push
inc
add
or
bound
sub
out
inc
lss
sub
or
mov
adc
scas
add
pop
aaa
cmp
cmp
jbe
add
pop
inc
cmp
fnstcw
aad
adc
mov
inc
and
and
adc
dec
cltd
sbb
fists
dec
dec
cmp
cmp
add
imul
mov
inc
add
lret
insl
pop
sub
in
pop
jmp
lea
adc
push
jns
sbb
lds
jnp
jnp
sub
pop
add
xchg
xchg
ret
mov
aaa
adc
insl
push
sub
ja
int3
dec
lds
out
and
inc
add
push
inc
insb
cmp
sbb
fisubl
dec
shrl
sbb
mov
cmpsl
insb
and
insl
mov
cmp
inc
xchg
ljmp
js
iret
adc
rolb
mov
dec
xchg
cvtpi2ps
add
std
mov
and
wbinvd
dec
ds
push
or
adc
test
inc
dec
dec
mov
push
scas
aas
das
xor
push
xor
xor
push
aas
cmp
loop
sarb
jbe
gs
adc
cmpsb
adc
cmp
call
gs
push
sbb
es
xor
sbb
outsl
push
lret
sub
daa
and
xor
adc
cmp
xor
push
lret
adc
mov
dec
hlt
or
xor
adc
daa
cmp
adc
and
add
sti
push
sbb
sub
sub
or
lcall
cmpsl
sbb
push
add
jbe
xor
dec
andb
mov
sub
fisubrs
je
std
stc
inc
std
jo
insb
gs
ja
fs
imul
and
cltd
aam
add
or
adc
or
and
inc
jb
sub
imul
pop
push
inc
and
js
push
ss
dec
jnp
push
iret
inc
push
pop
push
lret
fldt
rclb
sub
pop
push
int
imul
fwait
int
cmp
pop
cmpsl
pusha
add
sbb
imul
fadds
xchg
xchg
xchg
pop
inc
jl
rolb
decl
dec
dec
loope
add
aaa
shlb
mov
mov
jg
jg
inc
sbb
ljmp
mov
ja
mov
std
lcall
enter
push
push
mov
inc
push
insl
ss
adc
cli
mov
lahf
in
cld
test
cmp
mov
cld
std
mov
sbb
mov
ds
pop
sbb
xor
mov
fnstcw
jo
fsubs
sbb
mov
xor
xchg
sub
push
nop
jecxz
dec
push
pop
call
sbbl
adc
incl
xor
aaa
aaa
xor
lods
and
movsl
subl
inc
call
inc
jb
insl
scas
pusha
sbb
outsl
push
dec
imul
lods
outsb
dec
pushf
mov
daa
iret
leave
jae
sub
pop
jb
and
leave
jae
xor
sbb
or
cld
and
iret
leave
jae
in
pop
fmull
inc
cmc
loopne
add
je
inc
js
cmp
loope
lcall
scas
dec
pop
jnp
pop
ret
dec
clc
pop
sbb
push
dec
outsl
fistps
jnp
cmp
xor
sub
sub
xor
outsb
adc
inc
inc
pop
xor
add
pop
call
cmp
insb
addb
push
outsb
add
adc
loopne
cmc
das
js
xchg
nop
add
and
cmp
jbe
push
push
scas
dec
push
jecxz
std
ja
bound
je
bound
mov
sub
inc
add
fsubl
jg
sub
or
xchg
andl
or
push
bound
or
das
xchg
mov
jb
mov
push
add
or
in
pop
and
outsl
sbb
js
pusha
mov
dec
add
or
daa
dec
add
stos
je
xchg
nop
dec
outsb
das
das
sbb
sbb
fidivs
lock
and
adc
push
andl
adc
rolb
es
jb
pop
add
sbb
sbb
inc
jg
mov
and
adc
jns
lret
sbb
subl
out
orb
adc
pusha
into
movsl
ret
shr
mov
sub
adc
cli
inc
dec
shrl
adc
xor
add
dec
shrl
fs
pop
leave
push
mov
scas
jns
stos
outsb
fnstenv
lods
es
fdivrs
xchg
lret
stc
jae
jns
mov
popa
aad
pop
dec
into
ds
das
push
fcomps
dec
jl
sbb
pop
inc
push
cmc
fistl
fdivrl
xchg
adc
pusha
mov
mov
pop
mov
xchg
pop
push
imul
fsubl
cmpsb
xchg
leave
vhaddps
xlat
add
cs
testb
dec
lcall
inc
cmovl
mov
outsb
aaa
push
pop
mov
cmpsb
jge
int3
scas
mov
es
cmpsl
mov
cmpsl
mov
repz
repz
jno
cmp
push
enter
xchg
int
cmpsb
call
cs
push
or
jns
not
cs
rolb
loop
xchg
imul
xchg
iret
lds
test
rcrb
pop
in
repz
sub
xchg
daa
xchg
idivb
lods
dec
mov
xlat
ss
push
mov
cwtl
push
ds
mov
xchg
mov
repz
cmpsl
mov
fwait
mov
inc
pop
sub
out
mov
iret
jae
ds
daa
divb
ds
xlat
xchg
repnz
push
repz
aaa
sti
fistps
popf
xlat
test
cmpsl
push
cmp
repz
cs
push
out
ss
xlat
cmp
jne
push
inc
vsubsd
in
jnp
ss
push
lds
mov
fadd
imul
xor
lahf
idivl
sbb
leave
mov
shrl
mov
pushf
mov
lcall
inc
xchg
imul
add
repz
sahf
popf
dec
fistpll
push
repz
nop
clc
push
xchg
iret
repz
data16
imul
jg
cmp
repz
push
xchg
cs
sti
cmp
repz
mov
cmp
repz
xchg
push
dec
jo
loop
mov
and
jg
dec
sbb
scas
sub
lahf
or
cs
adc
stc
add
adc
lcall
push
push
mov
xor
adc
mov
bound
pop
mov
scas
int
mov
mov
loop
and
push
pop
mov
cli
mov
cs
push
mov
and
pop
sbb
test
imul
adc
or
bound
repnz
mov
daa
or
stc
adc
add
and
jnp
or
cmpsb
addr16
scas
stos
outsb
push
push
jae
popa
jp
imull
or
ljmp
cmpsb
push
cmp
jge
je
addr16
push
pop
and
insl
mov
cmp
jae
ret
dec
fisubl
push
repnz
mov
sub
add
dec
fst
push
insl
push
je,pn
push
adcl
cmpsl
ljmp
or
push
inc
cmpsb
push
insb
inc
mov
dec
pop
je
cmp
aaa
push
fisttps
jp
nop
aaa
shrl
push
ret
mov
ret
pop
jbe
iret
mov
pop
retw
jne
popa
inc
dec
or
dec
mov
inc
ss
ja
mov
or
mov
push
mov
add
dec
js
sar
cmp
push
ds
sbb
das
adc
mov
mov
jo
es
insb
je
push
imull
jg
popa
jo
jae
es
outsl
and
aas
sub
fstpt
adc
and
cmpsb
ljmp
lods
push
or
cmp
xor
sti
jbe
xor
xor
cmp
cmp
push
xor
xor
cmp
cmp
add
add
cmp
pop
fistpl
and
das
dec
or
push
pop
inc
mov
les
jb
or
lret
add
add
push
jl
sbb
fdivrl
xchg
pop
xchg
or
pop
fmuls
xor
add
ljmp
adc
xorb
sbb
xor
cmc
dec
sbb
push
or
inc
or
call
testb
cwtl
sbb
pop
inc
add
scas
and
push
inc
in
pop
clc
add
add
out
sbb
xor
fsubs
or
popf
repnz
pop
adc
pop
cmp
add
sbb
sbb
popl
fiadds
aaa
add
and
or
push
adc
dec
or
cmp
mov
imul
sub
ffreep
sbb
push
cs
xchg
xchg
lock
sbb
pop
pop
mov
mov
bound
xchg
sbb
pop
fcomps
xchg
das
sub
inc
cmp
adc
pusha
inc
popa
pop
sub
pop
xor
mov
daa
pop
or
or
aam
popaw
test
rorl
cmp
xor
pop
les
adc
push
mov
arpl
xor
jo
lods
test
mov
mov
aaa
lahf
push
ljmp
shll
mov
les
outsl
stos
inc
dec
mov
insb
sbb
dec
jo
outsl
jge
das
add
mov
lods
inc
pop
insl
aaa
iret
dec
ret
jecxz
pop
test
sub
fcoml
ret
daa
inc
lds
imul
or
sbb
dec
lods
dec
mov
push
sbb
push
repnz
adc
pop
push
push
dec
daa
mov
nop
add
or
fiadds
das
or
mov
insl
rcr
scas
pop
cltd
adc
adc
xchg
push
xor
outsb
outsb
popl
or
pop
jnp
pop
int
addr16
inc
adc
pop
jg
add
pop
movsb
sub
push
pop
mov
mov
sub
and
mov
mov
mov
fwait
cmpsb
xor
aaa
outsl
mov
xor
lret
mov
cmp
in
sarb
push
adc
dec
sub
and
jl
data16
test
sbb
mov
gs
jg
cmpb
and
inc
cmp
or
sbb
mov
and
cmpsl
call
popa
jno
mov
inc
or
dec
add
adc
mov
pop
and
cwtl
mov
mov
cmp
sub
push
adc
xchg
lock
sbb
in
pop
es
cmp
das
imul
push
sbb
or
add
push
js
xor
adc
adc
rorl
pop
rcr
adc
es
sbb
adc
jge
adc
adc
cwtl
mov
pop
sub
inc
testb
test
sahf
das
sbb
push
adc
mov
jb
or
bound
xor
js
sub
add
adcb
ret
mov
fisttpl
cmpsl
add
jle
fcoms
inc
movsb
outsb
adc
sbb
clc
sbb
andl
xor
sbb
pop
and
fisubrl
popa
popa
sbbb
pop
iret
dec
or
dec
gs
inc
inc
adc
xchg
pop
xor
dec
cld
test
cmp
popf
pusha
adc
aas
pusha
int
das
mov
adc
ret
scas
push
adc
adc
cs
mov
inc
add
test
push
push
add
jle
lods
ljmp
push
or
add
push
cltd
ffree
push
movsb
lods
pushf
push
sbb
add
adc
fs
xor
cwtl
cmp
repnz
add
cmp
aaa
sti
and
add
and
ficoml
cmp
or
xor
sbb
add
xchg
adc
mov
inc
inc
mov
add
test
sub
xchg
add
fistpll
rolb
adcb
sbb
popf
fst
sbb
popw
sbb
cmp
stos
xor
adc
pop
fcompl
rorb
inc
mov
inc
dec
adc
jmp
addb
data16
push
inc
push
adc
out
pop
push
xchg
jo
ficoml
add
sub
and
js
cmp
sahf
cwtl
or
out
push
stc
pop
jb
mov
and
mov
sub
sub
cmp
test
outsl
cmp
cmp
and
adc
das
pusha
pop
andb
add
add
fisubrl
xchg
xchg
pop
test
loop
sbb
adc
fsubl
jns
or
push
pop
sbb
and
addr16
out
andl
lahf
out
cltd
or
xchg
mov
insb
or
pop
or
ss
int
or
adc
adc
sbb
and
mov
insb
mov
inc
iret
xor
inc
mov
mov
fiadds
mov
popa
xchg
ss
int
sbb
sub
add
or
fldcw
adc
pop
fldcw
add
add
fwait
int
mov
lret
str
add
xlat
insb
and
das
incl
pop
adc
pop
out
jae
push
pop
pop
cs
push
mov
pop
and
ficoms
or
jb
add
loopne
sbb
xor
pop
xchg
inc
popa
sbb
lods
mov
je
jo
push
mov
jbe
fsubl
mov
xor
add
lock
or
je
insl
out
inc
push
pop
adc
out
es
push
add
ds
sub
sbb
sub
push
sbb
push
sbb
lcall
cmp
inc
aaa
cmp
sub
push
push
sub
inc
adc
adc
pop
pop
inc
das
aaa
inc
cmp
sbb
inc
dec
push
push
or
aas
sbb
pop
inc
sbb
adc
pop
sbb
pop
hlt
add
sub
or
add
xor
xor
jg
in
out
dec
daa
cmp
push
inc
or
or
ljmp
adc
inc
sub
dec
adc
inc
or
jmp
dec
push
adc
inc
adc
sub
sub
cmp
and
inc
sbb
and
cmp
adc
sbb
cmp
and
pop
push
xor
pop
dec
sbb
and
add
sbb
data16
add
mov
and
or
cli
pop
push
jg
add
movsl
or
sub
dec
sub
es
jmp
push
xor
push
dec
movb
movsl
cmc
push
sbb
dec
les
adc
mov
adc
or
sbb
movsl
loopne
sbb
inc
cs
lock
xchg
push
add
dec
xor
mov
stos
das
lea
pop
leave
xchg
push
and
dec
int
outsl
inc
inc
bound
mov
jecxz
adc
loopne
xorb
push
xchg
rol
add
xor
push
enter
inc
add
jge
cmc
jne
cld
push
push
mov
push
mov
inc
dec
push
arpl
pushf
test
add
pop
addb
xor
sub
push
pop
pop
daa
sbb
and
and
sbb
or
rclb
mull
or
adc
lock
sub
je
outsl
bound
push
and
jnp
sbb
daa
pop
daa
dec
ss
das
or
mov
and
clc
testl
dec
sub
sbb
and
mov
push
xor
inc
add
xor
cld
in
lcall
inc
add
mov
xor
das
jbe
popf
cmpsl
mov
inc
cs
inc
jge
stc
imul
cmovb
pop
ss
cmpsl
ss
add
push
and
cwtl
das
decl
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
incl
fadds
pop
adcl
test
and
jge
push
je
mov
andb
fwait
rol
lcall
out
popf
rorl
mov
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
pushl
cs
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
mov
test
mov
mov
call
cltd
test
push
push
sar
jmp
dec
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
decl
js
js
test
add
mov
mov
movsb
mull
jno
addr16
decl
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
cmp
decl
aas
das
jb
pop
push
and
sub
outsb
js
popa
jge
cmp
addr16
jmp
pop
xor
inc
cmp
inc
dec
es
insb
or
dec
sub
sub
pop
dec
cs
dec
insl
or
pop
sar
xor
push
fs
xor
jo
dec
inc
cmp
loop
incl
ds
dec
arpl
and
and
cmp
xchg
pop
sbb
lcall
addr16
sbb
insl
push
enter
sbb
or
loope
cs
add
std
in
pop
js
hlt
scas
bound
pop
lahf
cmp
add
lret
cmp
fstpt
dec
mov
xor
out
shll
fiadds
mov
dec
or
cmpb
mov
xor
adc
das
sub
ret
cwtl
xor
mov
push
rclb
pop
bswap
push
mov
sub
adc
sbb
mov
loopne
aad
sub
addl
xor
xor
jp
pop
dec
fs
addr16
sub
fmull
push
xchg
or
inc
push
sahf
sub
xor
xor
fld
push
sbb
stos
fsubrs
lea
pop
and
andl
shll
pop
sbb
addb
xor
sub
mov
sbb
add
push
inc
rolb
gs
arpl
lret
shll
lods
sbb
and
inc
mov
add
sbb
xchg
add
adc
popf
mov
mov
cwtl
adc
shr
pop
xchg
jmp
fcmovu
sbb
adc
cmp
pop
inc
in
fcmovne
pop
inc
mov
fs
sbb
xor
inc
shl
pop
popa
in
push
sbb
xor
outsl
sub
inc
pop
int3
mov
and
xchg
movsl
ljmp
ret
mov
test
lods
push
sbb
into
out
inc
pop
outsb
outsb
je
xor
js
jbe
fwait
inc
xor
jae
popa
insl
packssdw
xor
cmpsb
mov
and
imul
mov
jo
jg
aad
insl
sub
xor
insl
loop
adc
sbb
out
testb
mov
sbb
insb
dec
push
popa
je
push
sub
sub
ret
mov
daa
push
push
dec
sub
adc
out
sub
push
cmp
pop
push
gs
out
adc
pop
pop
pop
sbb
in
and
add
pop
or
scas
and
and
push
and
sbb
rol
lret
int3
lods
pop
movsl
xchg
push
adc
add
pop
ds
xorb
cmp
mov
and
jae
push
push
mov
sarl
fmull
inc
pusha
push
and
inc
ds
mov
jecxz
arpl
mov
addr16
dec
mov
sub
sarl
lret
xor
pop
mov
add
js
push
lahf
push
or
stc
push
push
push
das
pop
and
push
sbb
fadds
into
dec
popa
dec
cmpl
jb
pop
repz
inc
or
movsl
jae
inc
jne
imul
inc
outsb
cs
mov
mov
sub
cwtl
adc
inc
sti
test
jl
adc
test
fcomp
jnp
and
pop
adc
dec
aas
push
inc
push
lods
call
adc
enter
add
daa
inc
ljmp
jo
pop
inc
dec
and
bound
outsl
imul
push
inc
mov
movsl
adcb
into
push
fdivrl
or
mov
mov
iret
and
inc
or
push
xor
sub
or
ljmp
xor
sub
sbb
ds
mov
inc
jbe
cmp
int3
cmp
mov
pop
jnp
test
dec
bound
call
pushf
adc
dec
lods
xchg
data16
sbb
std
sub
lahf
push
ja
inc
outsl
sbb
inc
sbb
xor
xchg
add
push
rcrb
std
push
testl
cmp
and
imull
insb
mov
adc
psubusb
adc
jle
pop
pop
pop
aas
adc
int
fiadds
and
pop
and
sbb
loopne
stos
jle
pop
xchg
push
inc
jle
pop
dec
mov
and
pop
movsl
repz
pop
shll
cs
aam
orl
cmpxchg
aam
cmp
lods
xor
push
pop
cli
xchg
iret
gs
pop
pop
nop
dec
seta
xchg
mov
push
jge
mov
fadd
das
add
pop
ret
cmp
icebp
out
aas
aas
sub
inc
dec
adc
xchg
adc
pop
es
out
or
add
cmp
rcrb
add
sub
push
jne
loopne
mov
or
filds
push
stos
lods
add
jb
mov
dec
and
addr16
popa
imul
mov
jne
outsl
and
cmovns
add
mov
inc
push
punpckhwd
mov
pop
jne
outsb
push
je
scas
pop
add
jmp
cmp
jecxz
push
inc
dec
push
inc
pop
push
dec
inc
dec
inc
push
pop
leave
mov
mov
gs
lcall
inc
or
fiadds
pop
daa
dec
inc
jmp
pop
push
dec
jb
jb
pusha
and
cmp
pop
xchg
or
inc
jo
adc
rclb
or
out
and
stos
pop
cmp
clc
xchg
or
roll
pop
lds
xorl
jo,pn
ret
jb
rcr
mov
push
adc
push
lods
icebp
xorl
xor
add
aam
sbb
adc
test
sti
cmp
adc
adc
dec
aam
and
sub
sbb
ret
mov
daa
pusha
cmpsb
pop
inc
xchg
nop
or
push
adc
xor
mov
add
daa
adc
dec
in
or
in
push
cmc
adc
sbb
add
or
fsubrs
pop
inc
mov
add
pop
xor
pusha
and
inc
stos
pop
sub
or
add
sbb
fstps
aam
mov
inc
loopne
sbb
adc
mov
dec
xchg
or
dec
lods
push
ficoml
daa
xlat
outsl
stos
and
xor
je
push
mov
imul
stc
sbb
stos
xchg
popa
add
jns,pt
inc
das
mov
fmuls
dec
xchg
dec
inc
xadd
cmp
inc
scas
mov
pop
pushf
cmp
inc
popl
lock
mov
arpl
cmpb
aas
mov
jo
maxps
mov
add
mov
dec
in
shl
sbb
das
test
les
fucomi
pop
cmp
aas
add
out
loopne
incl
idiv
dec
movsb
or
daa
lret
neg
sbb
sub
inc
das
inc
add
outsl
ror
cmpsl
ja
outsl
insl
lods
jo
add
jae
int
daa
mov
add
daa
outsl
pop
inc
jae
mov
pop
add
inc
aas
jg
in
mov
outsl
nop
sbb
pop
leave
xchg
pop
inc
inc
cmp
xor
xchg
pop
leave
sub
and
xchg
mov
push
out
mov
loopne
imul
test
add
repz
out
jl
pop
mov
iret
dec
sub
pop
xor
repz
xchg
mov
pop
sahf
pop
jns
jns
pop
ds
pop
push
mov
xor
out
add
pop
enter
jl
cmpsl
shlb
aaa
repnz
lcall
push
adc
loopne
mov
js
and
dec
inc
lahf
enter
outsb
fsubs
mov
scas
movsb
fstps
imul
pop
sahf
sub
or
add
popf
sub
or
add
push
sbb
inc
push
xchg
sbb
inc
mov
add
ja
pop
lods
pop
jb
mov
xchg
and
xchg
dec
das
jbe
and
imul
sbb
lock
cmp
dec
push
dec
xchg
outsl
add
scas
fs
inc
adc
inc
cmp
jb
test
les
notb
jb
xchg
cmp
cmp
push
repnz
ss
add
dec
dec
inc
mull
inc
push
mov
pop
scas
push
adcb
leave
mov
outsl
out
cmp
xchg
xor
daa
int
cmp
loopne
pop
jb
or
push
push
sbb
lds
movsl
pop
scas
add
leave
mov
push
outsl
out
mov
xor
mov
pop
pop
insl
or
fbld
mov
xor
and
dec
in
mov
xchg
lock
cmp
shrb
add
repnz
pop
jl
imul
aam
imul
sbb
rcrb
push
xchg
stos
jg
mov
or
jg
ja
enter
pop
sbb
mov
inc
pop
fs
je
sbbb
pop
leave
mov
add
and
nop
fistl
xchg
push
cwtl
sbb
and
sub
fiadds
dec
push
adc
inc
mov
popa
scas
add
cmp
out
sbb
cmpsl
andb
ret
cmpsl
and
xlat
or
push
aaa
addr16
repz
mov
outsl
push
push
cld
idiv
or
fisubs
sub
mulb
add
jecxz
mov
subb
lahf
mov
ret
out
test
push
adc
hlt
push
ficoml
nop
push
mov
mov
mov
xor
sbb
inc
icebp
mov
sbb
cmp
ja
popa
testl
jmp
fdivrs
push
push
outsl
pop
pop
xor
jg
pop
enter
imul
sub
fsubs
push
or
ss
repz
push
push
mov
imulb
js
xchg
jo
movaps
jp
jae
or
adc
in
test
bound
xlat
or
pop
dec
enter
mov
loopne
jmp
xlat
or
jo
dec
mov
cmp
fs
arpl
loopne
lahf
pushf
and
push
arpl
arpl
testl
sub
add
enter
and
sub
push
sub
aaa
pusha
pop
leave
mov
add
xchg
and
pop
ja
add
xchg
outsl
loopne
and
and
fsubs
out
rcrb
pop
mov
cmp
lods
adc
add
mov
leave
jae
add
or
or
in
fsub
nop
sbb
and
and
jb
jge
push
push
push
sbb
outsl
add
jns
shlb
pop
adc
and
cmpsb
mov
mov
loopnew
les
inc
dec
and
add
cld
fwait
insb
pop
add
or
dec
cmpsl
push
xchg
pusha
and
add
addb
sahf
iret
daa
push
mov
aam
or
add
push
jb
add
mov
ret
add
adc
or
ds
sti
jl
push
pusha
inc
lock
out
xchg
and
ljmp
and
or
fs
push
pushf
and
or
push
lods
push
movsb
xchg
or
pop
or
call
hlt
add
sub
test
add
xchg
aaa
and
add
pop
add
jo
pop
jb
mov
fadds
in
out
mov
dec
scas
cwtl
add
sub
inc
out
push
addr16
pop
inc
lea
pop
or
aam
ss
inc
sub
or
sub
dec
scas
add
clc
es
test
push
sub
cmp
pop
and
insl
and
and
test
pop
sbb
xlat
mov
daa
xlat
pusha
dec
repz
jo
sbbb
clc
xor
pop
insb
push
xchg
imul
insb
inc
or
popf
cmp
mov
das
shrb
subb
jb
lds
pop
add
or
pop
dec
and
xor
cmp
pop
push
filds
mov
das
pop
outsb
repnz
in
mov
cwtl
mov
push
addr16
aas
pop
out
mov
push
jl
jne
dec
jbe
sarb
or
pop
ficompl
push
xchg
jns
bnd
cmp
rcrl
mov
sahf
out
jnp
jae
mov
sarl
repnz
jl
pop
js
out
cmp
scas
cmp
cmpl
jle
aam
sahf
cmpsl
stc
daa
jg
jo
lock
repz
out
ds
and
jl
scas
repz
sarl
hlt
xor
stc
cmp
pop
test
jb
cmp
out
shl
sub
iret
repz
xchg
repz
out
push
mov
bound
lods
or
stc
xor
hlt
cmpsl
mov
and
sahf
mov
lahf
out
and
mov
cmpsl
stc
xor
pop
sub
out
cmp
in
or
repz
add
sahf
out
jmp
xchg
outsl
lods
inc
xchg
iret
repz
rcr
imul
lcall
insb
sahf
cmpsl
stc
cmp
ds
jno
lcall
xchg
fidivrs
fwait
pop
push
mov
jns
dec
js
sahf
notb
dec
into
push
lahf
enter
repz
xor
mov
out
ds
mov
xchg
out
jl
mov
push
repz
movsl
iret
repz
add
lcall
cmpsl
test
out
xor
les
adc
dec
sahf
out
cmp
in
stos
jnp
ds
repz
dec
lods
xchg
shrl
lods
xor
out
dec
insl
cwtl
add
repz
mov
cmp
out
push
mov
jne
repz
mov
pop
mov
jns
dec
fwait
mov
stc
cmp
dec
mov
mov
lcall
cmp
jl
mov
sarb
cmp
or
dec
test
ds
sarl
push
mov
or
cmpsl
stc
cmp
cmpsb
push
nop
shll
les
in
das
lds
fdivs
int
jns
pop
cltd
mov
out
lcall
mov
es
out
shrb
xor
popa
mov
jl
aam
aad
xchg
fsubrs
dec
test
cmp
xor
jo
pusha
jno
cmp
xchg
outsb
add
xchg
mov
mov
repnz
out
je
inc
cmovns
push
ja
cmp
orl
pop
je
fwait
aam
pop
leave
pop
and
mov
inc
and
pop
xor
das
cmp
pushf
out
ss
and
shlb
cmovae
cmp
jl
inc
add
mov
iret
daa
mov
stos
fstpl
aaa
ss
pop
enter
inc
xchg
dec
mov
dec
ja
dec
ss
pop
sub
dec
adc
and
fs
and
fldenv
xorb
jbe
xchg
mov
aaa
leave
mov
dec
bound
sbb
fists
loopne
lds
aas
mov
mov
pop
xchg
aas
cltd
cmp
cmpsl
dec
jmp
jmp
shlb
cs
ss
out
mov
leave
les
mov
test
inc
pop
enter
jno
cmp
std
in
jmp
fstpl
scas
push
mov
push
mov
inc
idivl
mov
das
out
mov
pushf
pop
jbe
xchg
popf
pushf
push
mov
mov
into
sub
scas
sbb
push
sysenter
add
cmp
ja
xchg
pushf
in
ja
or
or
jnp
pop
imul
out
xor
sbb
inc
and
lcall
sub
rorl
incl
cmp
inc
into
push
pop
lcall
pusha
inc
popa
aas
and
and
shlb
adc
adc
mov
bound
pushf
sbb
mov
xchg
sbb
leave
lock
das
or
inc
push
hlt
inc
xor
test
mov
inc
jns
cmc
push
in
and
inc
repnz
cmp
out
push
mov
leave
and
sbb
cmpsb
xor
ja,pt
cmp
or
jp
push
popf
out
or
push
add
jae
outsl
das
xchg
xchg
filds
leave
mov
dec
jbe
cmp
mov
cld
scas
push
inc
and
repnz
jnp
jnp
jnp
in
dec
ljmp
add
jl
push
inc
outsl
jns
and
jae
add
fdivrs
cmp
sbb
jnp
jnp
jl
pop
mov
xchg
cmp
sbb
jl
and
xchg
test
scas
nop
or
mov
sub
inc
call
cmp
mov
mov
push
jge
in
es
mov
add
test
jl
aam
out
and
jl
push
add
jns
add
push
add
sahf
out
pop
and
sub
mov
jne
or
loopne
daa
jns
setle
jle
jle
daa
nop
and
jge
es
iret
add
sahf
fildl
fcoml
loopne
mov
int3
jge
xlat
jge
jge
loope
jb
jg
jle
adc
and
sbb
jle
jle
dec
sahf
fnstenv
jle
push
push
pop
cmp
cmp
popa
imul
andl
mov
clc
out
into
fisubrs
maskmovq
mull
movq
cltd
mov
pop
jg
pop
dec
subb
inc
inc
push
xlat
push
mov
aam
addr16
xlat
push
jg
mov
jbe
insl
and
shl
xchg
mov
dec
addl
addr16
mov
out
push
mov
pop
in
xor
inc
pop
and
iret
insl
call
push
jb
pop
push
add
subb
mov
pop
movsl
scas
in
das
xchg
mov
orb
add
xchg
ja
out
mov
frstor
in
rolb
xor
leave
add
adc
cmp
cmp
sbbl
pushf
in
cmp
enter
mov
adc
xchg
enter
cmp
fsubl
xchg
dec
test
xchg
pushf
jecxz
xchg
test
popf
inc
jns
enter
test
repnz
push
xor
repnz
andb
cmpb
cmp
repnz
or
repz
test
or
lret
pavgb
cmp
repz
adc
adc
jns
out
adcl
adc
sahf
out
sahf
adc
inc
iret
sbb
js
inc
or
call
test
faddl
dec
jmp
es
iret
add
xchg
lret
and
leave
repz
in
add
dec
into
pop
pop
test
je
sub
inc
imul
popf
out
or
daa
int3
scas
pushf
in
sbb
rclb
add
cs
inc
mov
add
dec
pop
xchg
repz
add
jns
and
dec
aam
fdivl
out
incl
inc
pop
xlat
jae
pop
scas
int
fldl
xlat
fstl
mov
add
ret
jne
daa
and
in
es
adc
das
test
inc
ret
dec
orb
aaa
jb
test
outsl
ljmp
lock
icebp
pop
jnp
inc
aas
add
aas
fmull
add
and
inc
jb
and
push
push
in
jb
in
jl
xchg
push
aam
dec
hlt
and
mov
fiaddl
mov
push
bound
aam
inc
lock
dec
bnd
pusha
mov
push
pop
or
out
dec
push
sqrtps
add
pop
leave
in
xchg
test
ja
mov
mov
add
in
jns
idiv
or
iret
add
mov
mov
dec
mov
push
mov
sbb
dec
mov
mov
mov
mov
xchg
rorb
pop
pop
pop
call
xchg
add
sarb
aaa
mov
pusha
mov
or
push
lea
repz
xchg
lea
in
lea
pop
pushf
in
pop
add
lret
lret
js
mov
mov
mov
lret
lret
lret
daa
mov
mov
mov
mov
lret
lret
lret
inc
mov
push
mov
lret
lret
lret
lret
mov
ja
jg
mov
lret
lret
xchg
lahf
pop
cmp
cmp
pi2fd
or
cmp
cmp
or
or
cmp
cmp
push
add
cmp
add
add
xor
leave
leave
leave
ret
out
and
jecxz
mov
xchg
pop
mov
mov
or
jno
inc
jns
mov
ja
clc
movsb
dec
ds
fstp
lods
add
aaa
cmp
cltd
iret
xlat
fisttps
outsb
and
aas
testl
dec
dec
pop
mov
or
xchg
mov
mov
or
leave
jae
inc
push
add
bound
into
add
mov
xchg
xchg
dec
push
out
roll
ror
popf
xchg
push
adc
nopl
fsub
call
xchg
aaa
lods
lea
or
lock
out
popf
adc
sbb
xadd
scas
outsl
add
pop
mov
lea
mov
aas
in
js
out
scas
pop
or
in
clc
adc
push
and
popf
out
cmp
daa
adc
inc
and
xor
lea
dec
pushf
in
xchg
lea
pop
lea
jle
xchg
lahf
out
fsubrp
cmpsl
pop
scas
cs
add
mov
or
leave
fdiv
push
add
daa
cmp
mov
jns
enter
mov
push
add
and
in
xlat
aas
mov
popf
pop
jl
jl
mov
xchg
xchg
xchg
xchg
ret
jecxz
aad
mov
pop
ds
jns
aaa
jb
sbb
or
out
or
or
or
mov
or
aas
jne
jge
mov
xchg
sahf
lods
nop
out
mov
jbe
in
addr16
cmp
mov
inc
xchg
inc
mov
nop
jne
mov
pop
test
lea
xchg
jns
xchg
out
popf
movsl
or
mov
mov
xchg
jo
pop
and
ja
xor
push
and
jns
pop
mov
add
xchg
and
fistl
insb
scas
sub
and
jg
inc
mov
xchg
sub
leave
xchg
aam
iret
in
popf
xchg
mov
xchg
imul
pop
enter
jnp
les
enter
push
push
xchg
pop
sbb
inc
enter
xchg
loope
outsb
dec
cmpsb
or
xchg
scas
mov
xchg
iret
into
xchg
cmp
in
fsts
hlt
xchg
sbb
xchg
xchg
and
das
xchg
fwait
dec
sub
pop
add
js
pop
gs
pop
insl
xchg
jne
in
outsl
aas
jge
out
test
loope
xchg
fisttps
out
cwtl
cs
out
push
add
jecxz
add
sbb
adc
xchg
mov
dec
xchg
cmp
xchg
pop
fs
nop
xchg
out
jb
mov
dec
dec
cs
addr16
stc
scas
jmp
xchg
decl
xchg
mov
xchg
and
dec
pop
cmp
push
pop
xchg
jmp
jb
sbb
jb
jge
mov
cmp
test
out
cmp
or
or
das
aas
or
xchg
push
xchg
das
das
das
das
sbb
cmp
inc
xchg
push
xchg
pop
xchg
repnz
test
mov
leave
jae
jl
mov
jns
rcr
bsf
fnclex
ja
fcoml
xchg
inc
mov
lea
dec
loopne
mov
xchg
insb
mov
push
push
fwait
iret
mov
and
mov
in
or
add
popf
rcr
xor
adc
popf
or
mov
push
sbb
dec
popf
lcall
jg
stos
push
add
mov
mov
xchg
lret
push
or
leave
repz
ud2
loop
ljmp
iret
setge
pushf
loopne
cwtl
mov
cwtl
ss
dec
dec
fisubl
ja
popa
imul
xchg
leave
inc
repnz
pushf
mov
inc
jb
mov
dec
and
add
adc
lcall
sahf
ja
cmp
push
add
repnz
scas
outsb
cltd
jbe
push
leave
jae
jle
or
repnz
daa
test
daa
iret
jae
add
rcr
mov
cltd
cltd
mov
cltd
add
leave
leave
leave
jae
or
or
leave
leave
leave
or
push
add
add
add
sbb
repz
and
sub
cmp
repz
jmp
mov
jns
out
pop
popa
and
and
jno
lcall
pop
leave
rcrb
leave
out
xor
fmuls
adc
add
fildl
add
dec
testb
fwait
push
sahf
out
add
fs
jbe
pop
push
cmpsl
push
aam
ja
xchg
pushf
cmp
xchg
lahf
cmpsl
cmpsl
js
leave
repz
scas
mov
mov
out
fwait
js
and
or
mov
std
mov
pushf
adc
repnz
sub
pop
dec
push
daa
cmpsl
outsl
ja
ja
outsl
ja
add
add
sub
inc
lret
inc
les
ja
jmp
or
mov
mov
pushf
bswap
pushf
shll
enter
pushf
jmp
mov
lcall
popf
fmulp
xchg
and
popf
ss
inc
push
push
jns
out
dec
xorps
loopne
popf
out
insl
psubusb
push
add
popf
sub
or
repz
push
pop
add
adcb
out
popf
shlb
sahf
jg
sahf
daa
jb
enter
sahf
inc
sahf
dec
sahf
pop
outsb
sbb
push
sahf
pop
pop
push
jg
insl
in
xchg
sahf
imul
xchg
dec
iret
orl
movsl
leave
add
mov
sub
ror
outsl
cmp
sbb
in
inc
mov
add
mov
daa
enter
incb
lahf
mov
and
cmpsb
xor
jp
inc
push
lahf
jmp
pop
sub
jg
mov
shrb
daa
mov
pop
push
xchg
out
mov
push
int3
dec
dec
dec
jecxz,pn
repz
xchg
or
pop
sti
add
and
loopne
dec
push
dec
mov
jae
lea
xchg
test
daa
daa
pop
mov
jmp
cmpsl
push
in
outsb
fwait
pop
and
mov
hlt
or
das
inc
test
jae
je
mov
cmp
add
cmp
inc
cmp
daa
daa
dec
push
pop
or
iret
repz
jl
sahf
out
or
or
out
xchg
xchg
adc
movsb
lods
mov
ror
iret
das
call
jbe
psubb
pop
or
lcall
inc
push
xchg
int
movsb
pop
test
fisttpll
nop
test
pop
dec
xchg
pushf
mov
das
fsubrs
jae
xchg
fisttps
daa
fisttpll
add
out
scas
push
pop
xlat
or
or
repz
or
or
and
xchg
mov
push
mov
mov
pop
jns
fucom
jns
orl
mov
and
stos
lods
mov
cmp
jmp
mov
push
leave
mov
movsb
xchg
fbstp
push
das
lahf
sub
aas
cmovns
push
push
scas
add
iret
or
out
jl
sbb
in
add
or
enter
lods
xchg
das
iret
adcl
jns
stos
push
add
lar
xchg
cmp
ret
cmp
fcmovne
jecxz
pop
jmp
push
lods
mov
push
movsl
push
push
add
es
cs
cmp
in
add
mov
push
or
push
or
cmp
outsb
or
xchg
movsl
mov
movsl
sbb
vmwrite
repz
pop
ja
fiaddl
loop
daa
daa
iret
add
repnz
mov
adc
lcall
test
push
pop
push
pushl
push
inc
dec
cmpsb
ljmp
mov
pop
adc
jns
cmpsb
jnp
out
enter
lret
sti
inc
pop
mov
pusha
push
out
cwtl
movsb
mov
cmpsb
push
fbstp
mov
pop
ret
leave
sub
adc
mov
and
repz
xor
add
encls
repz
fcompl
add
inc
or
outsb
repnz
push
sysret
cltd
loopne
push
fistps
bound
mov
push
lahf
push
repnz
pop
cli
cld
scas
in
scas
push
adc
pop
or
inc
jmp
dec
mov
push
jo
adc
pop
mov
shl
cmpsl
pop
sti
cmpsl
add
repz
adc
add
in
loopne
sub
pop
andl
lock
jns
cld
aaa
or
inc
dec
lock
test
push
test
pushw
jo
dec
outsb
test
into
mov
jo
inc
cmp
mov
pushf
incl
shrd
bsf
iret
xlat
test
in
jae
mov
xchg
std
cmp
fwait
mov
add
push
loopne,pn
repz
inc
mov
into
fisubrs
jg
test
fisttpll
jl
pop
test
movsb
push
outsb
repnz
pop
lods
or
push
pop
test
repnz
test
les
int3
pop
aam
fsub
cmp
leave
repz
hlt
push
cld
cmp
into
sahf
add
stos
pop
sbb
repnz
test
das
stos
push
fcmovne
pop
out
push
out
stos
inc
pop
cltd
dec
ds
cmpsl
push
pushf
mov
daa
daa
iret
cmp
add
add
cmpsb
xchg
pop
push
lock
lods
repnz
sahf
mov
jg
stos
xor
das
lahf
pop
inc
cmc
inc
fimuls
ds
stos
dec
bound
notb
add
daa
out
sti
cwtl
mov
xchg
or
or
cmp
mov
push
repz
mov
stos
daa
push
add
add
and
stos
je
enter
stos
cmp
lar
repnz
mov
fsubl
sub
arpl
imul
jbe
ja
ja
cs
imul
fidivl
in
ja
test
leave
cld
sbb
fimull
xchg
aaa
daa
daa
adc
mov
data16
jbe
aad
jns
add
xchg
fimull
mov
xlat
movsb
mov
mov
imulb
idiv
push
add
lods
push
mov
outsl
push
push
daa
lsl
or
dec
push
push
pmaxsw
test
je
daa
xchg
andb
stos
jmp
pop
jae
dec
mov
mov
andb
mov
repz
add
mov
mov
mov
mov
or
pand
mov
lods
scas
sti
jecxz
jb
lods
pusha
mov
cmp
mov
mov
push
sbb
scas
and
in
mov
sbb
leave
pop
mov
dec
in
xchg
push
test
mov
mov
jb
sub
fcmovnbe
dec
sahf
ja
push
add
xor
stc
repz
sti
pop
add
pop
leave
loopne
push
ucomiss
scas
aas
inc
mov
scas
scas
pop
xchg
out
sahf
mov
add
je
add
mov
jo
pop
or
jne
leave
leave
in
aad
pop
lsl
fucom
xchg
in
add
lcall
and
and
loope
add
psadbw
jns
xchg
mov
add
add
into
in
nop
ja
pop
push
xchg
pop
adc
call
cld
add
mov
mov
scas
add
add
and
add
xor
cmp
add
pop
pushf
pushf
add
scas
inc
mov
xchg
stos
sbbb
insb
add
jl
test
xchg
xchg
mov
jns
sahf
out
or
in
les
or
sahf
pavgb
out
out
jb
testl
rorl
mov
mov
mov
mov
xchg
push
setge
jbe
aas
jae
push
jnp
cld
jo
out
or
or
mov
mov
xchg
xchg
mov
loopne
xchg
daa
daa
call
xchg
xchg
xchg
adc
inc
pop
xchg
xchg
xchg
xchg
jne
xchg
scas
xchg
fnstenv
mov
daa
cmp
jns
das
adc
iret
jae
mov
sbbl
sahf
ja
cmp
xchg
fwait
dec
sbb
dec
stos
mov
and
dec
push
push
inc
dec
mov
xchg
dec
mov
push
icebp
mov
adc
addr16
mov
ss
mov
xchg
xchg
xchg
xchg
gs
jne
mov
inc
mov
xchg
mov
mov
mov
fs
fadd
or
rcr
in
in
call
cltd
sbb
mov
pop
je
in
mov
pop
mov
mov
cmp
cmp
jl
stc
sbb
iret
mov
jns
pushf
mov
mov
mov
repnz
les
cs
stc
int3
xor
pop
adc
rcrb
pop
idiv
pop
insl
fs
add
pop
movzwl
pop
jns
and
dec
mov
jns
jns
mov
mov
mov
mov
jns
jns
mov
mov
mov
mov
jns
jns
mov
mov
mov
mov
jns
jns
mov
mov
mov
mov
jns
push
pop
jecxz
out
mov
mov
dec
jnp
mov
mov
out
sahf
out
sbb
and
sub
out
sahf
and
and
and
jns
out
and
out
sahf
out
sub
jnp
rorl
sub
xchg
pop
iret
xchg
cs
fwait
mov
fisttpll
rcrl
das
fwait
cmp
lods
rcrl
flds
loope
dec
jb
cmpsl
das
jmp
ret
xchg
and
sub
mov
add
xor
jmp
jbe
cmp
dec
mov
dec
sahf
fucomi
js
xorb
mov
jae
mov
mov
mov
out
maskmovq
fs
test
mov
cmp
ja
daa
pop
leave
jae
aam
movsl
out
in
push
add
jns
add
add
ds
leave
repnz
or
mov
out
adc
sub
daa
iret
jae
xor
adc
jae
cmp
bound
js
repnz
adcl
cltd
repz
iret
sbb
daa
iret
sbb
daa
iret
jae
pop
out
and
pop
mov
cmpsl
mov
leave
insl
in
dec
mov
jae
leave
leave
leave
mov
leave
leave
lock
adc
in
aas
cmova
popf
cmp
in
push
dec
adc
jb
jb
movq
lea
jae
sbb
testl
dec
pop
mov
in
dec
dec
push
pop
and
dec
sahf
out
and
cmpsl
es
sahf
out
vmovaps
repz
mov
add
mov
ljmp
pop
sub
dec
mov
rcl
mov
repnz
cs
xchg
jae
cmp
push
cltd
pop
mov
iret
or
sahf
xlat
dec
sahf
or
femms
rorl
mov
adc
jmp
ja
icebp
stc
push
adc
shl
iret
repz
pop
adc
push
adc
xchg
xlat
mov
cmp
and
leave
inc
pop
in
mov
ror
jns
jb
cmpsl
push
add
in
in
fs
insb
lahf
insl
mov
rcrb
xlat
xchg
out
or
lahf
xchg
add
scas
mov
movswl
leave
inc
loop
pslld
mov
xchg
add
dec
mov
shll
xchg
pop
cmp
cmp
out
jb
jo
js
cmp
nop
cwtl
mov
mov
in
in
ret
lret
shll
cld
mov
pop
and
jns
dec
add
ret
lret
fcoml
imul
mov
xchg
cmp
je
je
mov
xchg
xlat
pushf
push
movsb
pop
leave
jae
lods
or
iret
mov
ja
add
sub
dec
dec
and
ret
push
leave
inc
ret
sysexit
ret
cmpsl
jae
cmp
ret
inc
ret
dec
cmpsl
push
daa
daa
pop
leave
xchg
jo
andb
outsb
daa
mov
in
in
mov
mov
xchg
inc
mov
adc
fucomi
ja
daa
pop
repz
inc
cmp
les
push
add
push
les
les
jbe
test
pop
push
jg
fldt
fbstp
mov
filds
pop
cltd
and
daa
iret
or
cmp
aam
fdiv
daa
xchg
iret
in
in
add
in
xchg
and
lds
lds
lds
dec
jb
lds
jbe
cvtps2pd
dec
sahf
xchg
jb
cld
xchg
inc
pop
bound
popf
addr16
cmpsl
fcmovne
leave
inc
ror
ja
mov
repz
push
stc
ret
push
cs
pop
dec
sahf
out
add
or
in
and
dec
addr16
dec
es
iret
add
jns
pushf
cmp
ja
mov
xchg
add
fildl
pop
mov
add
loop
in
stc
ficomps
outsb
lsl
pop
syscall
jns
movsb
out
push
mov
and
jns
jns
das
cmp
inc
push
hlt
jbe
jns
data16
jno
jl
xchg
xchg
xchg
lahf
popl
test
xchg
xchg
xchg
mov
mov
xchg
xchg
xchg
xchg
ffreep
ljmp
xchg
xchg
enter
enter
jb
shrb
nopl
jb
jb
sbb
sbb
jae
jb
push
adc
cmp
aaa
sub
dec
pop
jns
out
arpl
xor
jns
jns
out
test
xor
out
sahf
lcall
sahf
out
mov
out
sahf
out
fdivrl
out
cltd
and
ds
pop
jns
in
adc
inc
push
push
cmovb
sub
xchg
out
xor
cmovp
cmp
repz
inc
pusha
dec
imul
iret
dec
jbe
pop
mov
mov
pushf
cmp
sqrtps
into
mov
leave
popl
int
enter
iret
fnsave
jb
cmp
inc
lret
in
xchg
inc
into
pop
lret
outsl
lret
cmp
lret
nop
lret
xchg
and
lret
mov
mov
lret
lret
jb
call
lret
repz
lea
push
push
pop
pop
sub
repz
sbb
cmp
repz
push
sbb
sbb
insb
push
ja
and
daa
iret
and
sub
jns
and
repz
das
fisubrl
in
repz
in
lock
repz
in
push
int3
movups
sbb
leave
repz
daa
xor
xor
dec
pop
push
xor
imul
je
jg
mov
cmp
sahf
out
cmp
pop
pushf
pushf
fmull
int3
xlat
loop
in
dec
hlt
in
push
inc
clc
add
iret
push
int
and
mov
inc
int
jp
inc
dec
int
movd
jae
frstor
pop
outsl
emms
int
jg
ds
int
fisttps
sbb
iret
cmp
cltd
stos
mov
push
add
in
ljmp
adc
or
mov
xor
les
mov
jg
stc
pop
jp
into
scas
and
into
xchg
jno
ja
push
add
pop
jb
je
pop
clts
dec
push
cwtl
js
jb
pusha
push
stc
out
jo
dec
xlat
xchg
add
fwait
pop
pop
jns
leave
leave
stos
mov
fiadds
cmp
iret
or
jo
mov
out
push
iret
pop
pop
mov
push
iret
push
iret
adc
inc
cmp
pop
iret
cmp
in
jg
iret
push
push
add
cmp
js
or
jns
or
push
pushf
fmull
or
repz
pushf
pushf
icebp
adc
enter
sysret
rclb
adc
sbb
push
sbb
cmp
repz
push
cmp
es
sbb
sbb
dec
sahf
out
push
and
repz
and
in
mov
outsl
ret
int
das
xchg
int
call
cwtl
fdiv
and
and
sbb
push
add
popf
cmp
inc
add
push
add
pop
sarl
fcmove
jb
jb
cwtl
mov
jae
add
fistpl
push
rorb
out
pop
icebp
syscall
mov
mov
shrb
mov
shrb
pop
pslld
repnz
dec
ror
repz
push
push
adc
jns
sbbb
sbb
je
xchg
movhps
fsub
lods
movq
and
jns
leave
ret
and
jecxz
sahf
out
pop
and
ror
xor
lahf
femms
sub
sbb
rorb
aaa
add
and
loope
inc
das
sub
jmp
inc
addr16
pop
lahf
pop
shll
sahf
out
pop
outsb
shrl
add
lcall
repz
mov
or
xor
bnd
cs
add
aam
iret
sbb
adc
pop
push
add
repz
inc
or
jbe
outsb
repnz
sysret
pop
popa
aam
repnz
insb
aam
aam
aam
repz
lea
adc
cmp
adc
aam
rorl
mov
jb
das
push
aad
push
push
inc
mov
fstp
repz
mov
push
add
jns
leave
push
pop
popa
iret
rorb
ja
push
pop
jno
add
leave
leave
jae
jns
mov
xchg
push
lahf
cmpsl
pop
out
jns
scas
adc
mov
iret
lahf
fildll
pop
add
out
not
scas
ss
icebp
bnd
pop
lahf
sbb
cltd
dec
push
xchg
jae
jns
cmovle
pop
out
fmulp
fs
outsl
push
push
jp
out
jns
test
nop
fwait
or
mov
or
pmulhuw
in
rcr
call
in
or
call
pop
xlat
jl
insl
and
pop
push
lahf
xlat
in
jbe
mov
das
push
dec
popa
movntq
jns
insb
push
push
ja
and
jns
andb
mov
sahf
out
daa
mov
mov
daa
iret
sub
out
jns
in
lock
sahf
ja
mov
push
es
out
in
xor
push
xor
jb
popf
daa
rdmsr
pop
pop
imul
jg
mov
call
inc
ljmp
adc
inc
stos
add
es
movl
xor
and
lea
push
sarb
push
add
push
inc
inc
aas
movsb
dec
and
add
xchg
mov
aaa
mov
aaa
cmp
push
sahf
out
repnz
sbb
or
leave
in
in
or
or
or
outsb
mov
scas
or
daa
adc
fucom
push
adc
and
dec
dec
inc
push
addr16
das
push
jae
mov
insl
push
in
in
sahf
and
jb
pop
leave
in
jbe
andb
cmpb
daa
iret
jae
test
xchg
sub
daa
movsb
fbld
daa
mov
aas
xlat
sbb
data16
jo
les
xor
cmp
es
sahf
out
sahf
xor
and
sbb
cld
call
iret
repz
aam
int3
fdivp
cmp
enter
mov
out
mov
movsb
cwtl
nop
repz
in
addb
jo
iret
repz
pop
push
inc
inc
cmp
dec
loope
cmp
adc
add
push
inc
inc
ds
test
mov
loopne
enter
adc
and
inc
xchg
inc
popa
sbb
dec
sbb
mov
std
mov
sbb
lds
sub
inc
test
mov
and
add
add
movsb
add
cmpsb
xchg
pushf
pop
movsl
sbbl
mov
fisubl
daa
pop
mov
inc
mov
inc
mov
inc
jg
iret
mov
in
call
sub
idiv
adc
push
ficompl
mov
xor
fcomp
loopne
jb
jle
notb
lds
inc
fbld
fcomps
mov
je
stos
pusha
add
or
and
addl
cli
inc
lods
lds
pop
pmovmskb
add
mov
dec
subb
push
add
enter
add
repz
lock
adc
out
les
xchg
adc
jns
out
inc
sbb
iret
repz
in
sbb
repz
push
sub
enter
out
and
and
jns
repz
ljmp
imul
out
push
mov
fidivrl
dec
icebp
xchg
push
add
in
mov
ds
adc
inc
pop
jno,pn
test
jbe
scas
adcb
xor
addb
or
xorb
addr16
sub
ficoml
mov
inc
mov
jnp
adc
push
push
xchg
movb
es
aad
negl
divb
call
jg
in
dec
lods
out
loopnew,pn
inc
punpckldq
testl
cmp
add
cmp
xchg
push
js
sbb
sbb
loopne
add
lock
and
push
lret
jns
and
out
lret
cld
lock
add
cmp
cmp
fsubl
das
push
or
out
jns
repz
adc
in
fdivp
cmp
enter
sbb
jns
out
push
mov
test
out
sahf
and
sahf
out
and
cmp
adc
mov
out
jg
movups
pop
dec
frstor
xor
mov
and
inc
push
xor
add
xchg
iret
leave
jg
cmp
pop
js
out
sahf
xchg
mov
repz
xor
dec
sti
cmp
insl
add
xchg
cmpsb
imul
mov
out
xor
dec
das
push
dec
insb
stos
jmp
dec
cmpsl
add
cmp
arpl
dec
inc
pop
enter
psubw
push
ret
mov
in
jl
adc
mov
sub
mov
mov
ret
inc
and
sahf
mov
sub
lcall
std
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
outsl
incl
mov
cmpsb
iret
decl
js
inc
outsl
loopne
jmp
xchg
test
incl
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
ljmp
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
call
sbb
mov
or
addl
cmpsl
xchg
cmp
xor
call
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
pop
mov
xchg
clc
repz
mov
subb
fwait
xchg
and
and
dec
aas
int3
add
sti
aas
jno
or
mov
jo
clc
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
call
mov
inc
sbb
lds
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
call
inc
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
or
jp
popa
push
pop
sarl
jl
mov
das
push
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
inc
rcr
call
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
rclb
mov
sbb
add
incl
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
jmp
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
jbe
clc
fistps
lahf
into
ror
add
cmpsb
fmuls
scas
dec
call
inc
push
jns
shl
inc
pop
inc
push
dec
ljmp
pushf
pushf
jnp
cmpsl
add
xor
popa
push
out
mov
les
hlt
push
xor
call
fisttpl
movsb
mov
aad
mov
rclb
mov
sub
lcall
mov
repnz
repz
test
ficompl
jmp
mov
hlt
incl
insb
adc
test
fs
std
in
leave
mov
add
insb
push
arpl
psubd
decl
outsb
cmp
imul
addr16
add
aam
dec
std
test
pushl
mov
insb
cwtl
mov
leave
mov
insb
fdivs
jne
filds
or
fcompl
shrl
push
ficoms
push
xlat
enter
mov
and
inc
mov
cltd
xchg
mov
mov
or
or
and
or
adc
decl
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
pushl
mov
call
xor
out
shrb
loope
or
insl
or
pop
arpl
hlt
push
imul
jmp
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
jmp
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
cmc
decl
mov
aam
movsl
fisttps
fadd
inc
shll
jmp
outsb
xor
mov
sarb
add
in
add
pop
decl
leave
jl
fnstsw
add
daa
adc
or
and
test
or
call
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lcall
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
fildl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
ljmp
pop
jge
xchg
shlb
add
inc
push
imul
xorb
pushl
insb
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
cli
mov
mov
call
xchg
shll
push
repnz
addr16
jmp
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fbld
fbld
out
mov
jns
imul
andl
shrb
rolb
ja
int3
add
mov
das
es
lds
or
pop
mov
cmpsl
call
ret
shlb
scas
fdivrp
lcall
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
incl
adc
mov
jnp
sbb
xchg
or
out
fdivrl
decl
aam
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
mov
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
jg
imul
push
js
or
push
addl
mov
cmp
cmpsl
idiv
sub
push
pusha
rorb
imul
scas
fcompl
fstps
add
or
inc
xchg
pusha
mov
test
jg
mov
jmp
mov
xor
mov
add
push
xlat
int
push
ficoms
fldenv
jp,pn
cli
pushl
add
push
sub
mov
or
sbb
add
sub
inc
pop
xorb
xor
jo
pusha
push
jmp
jae
jae
aad
push
iret
repz
xlat
fcomp
fcmovu
fdivrl
repz
fsubp
jecxz
iret
repz
in
jmp
repz
in
repz
cmc
repz
repz
clc
stc
cli
adc
cld
pop
adc
add
inc
jecxz
dec
adc
test
xchg
or
adc
cmp
mov
jae
inc
push
push
inc
jmp
jbe
xchg
xchg
jbe
vfrczsd
icebp
inc
insl
bound
inc
int
in
aaa
dec
popa
je
push
fists
and
cmp
in
cmpsl
pop
inc
jno
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
pop
popa
arpl
cmp
arpl
or
xor
and
xor
popa
icebp
sub
insl
pop
insb
imul
es
imul
dec
movb
inc
or
push
inc
jp
jecxz
aam
and
sbb
shll
or
push
fildl
sbb
jbe
dec
in
or
pop
shll
mov
je
inc
inc
or
xor
dec
imul
ja
test
xor
insb
popa
jns
push
adc
insb
or
mov
stc
popa
xchg
cmp
ret
pop
add
aas
inc
add
inc
aam
push
aas
dec
mov
pop
add
cltd
and
arpl
insb
daa
int
sbb
inc
daa
pop
inc
aas
enter
pop
mov
xchg
push
xchg
shl
sbb
inc
pop
into
out
std
icebp
data16
jo
inc
inc
add
ds
cmp
scas
add
pop
int
mov
aas
int
push
dec
cmp
inc
mov
insb
mov
sbb
mov
aam
ds
outsb
jne
andl
dec
jge
jnp
pop
aad
xor
xor
or
aad
arpl
add
addr16
pop
fwait
aaa
jbe
xchg
into
pop
jo
rcr
daa
popf
pop
inc
cmp
mov
adc
mov
inc
ret
add
addr16
xchg
and
pop
imul
mov
cmp
mov
inc
sbb
xlat
inc
add
push
mov
xchg
out
jb
sub
cmp
or
add
popa
dec
popa
jo
lahf
gs
lahf
push
outsl
outsl
test
mov
ret
xlat
aam
jno
lds
bound
sub
sub
in
nop
test
pop
cmp
test
push
arpl
cmp
mov
add
push
dec
sub
outsl
insb
jns
subl
das
inc
jb
push
fwait
sub
gs
pop
sahf
inc
outsl
arpl
insb
paddw
bound
cmpsb
jbe
lods
ja
inc
jbe
xor
jg
pop
daa
es
dec
xor
imul
les
das
xor
inc
shlb
int
inc
repz
movsb
sbb
and
and
push
and
dec
outsb
lods
xor
cmp
cwtl
pop
inc
dec
and
cs
dec
hlt
adc
inc
cwtl
sbb
inc
and
dec
sbb
sbb
cmp
or
sub
inc
dec
cmp
je
jns
arpl
mov
cmp
pop
pusha
in
pop
in
xchg
insb
insl
aaa
push
and
push
pop
lret
sub
and
mov
test
test
adcb
add
and
jp
sbb
cmova
and
pop
pop
push
adc
loopne
adc
dec
add
imull
add
pusha
add
add
add
add
or
pop
pop
push
or
or
or
or
or
fwait
pop
rcr
push
adc
push
adc
push
add
cmpsb
adc
adc
adc
add
data16
rorb
pop
adc
inc
add
int
jae
nop
add
add
add
adc
add
add
add
push
mov
inc
mov
pusha
or
bnd
imul
ljmp
mov
add
push
adc
pop
and
xor
dec
add
incl
rcll
bound
js
clc
push
loopne
mov
pop
add
cmp
fsubs
pusha
xchg
daa
add
and
mov
sbbl
or
addr16
add
add
add
xor
scas
pushf
into
add
adc
push
ja
adc
stc
out
lods
push
adc
pop
popa
jno
and
adc
xchg
mov
lock
shrl
icebp
mov
push
xor
shll
sbb
pusha
dec
mov
stos
js
fbld
cli
sub
rcr
push
ret
xchg
and
sub
std
cmpsb
xor
aas
mov
jmp
lods
loopne
ja
fdivrl
add
mov
mov
loopne
mov
fsts
sub
mov
mov
cmp
ret
ja
out
cmp
xor
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
stos
pusha
inc
mov
incl
sub
pusha
add
sub
decl
bound
add
lds
cld
cli
and
mov
fiaddl
jg
fisttpll
jge
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
pop
mov
aas
ss
clc
cmpl
incl
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
add
push
fstl
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
fdivp
pushl
int3
lcall
fs
scas
mov
pop
pop
mov
popl
incl
mov
sbb
scas
adc
mov
xor
lods
scas
xchg
test
decl
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
jge
ljmp
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
decl
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
ljmp
lods
leave
mov
jp
push
out
or
push
sahf
pop
jg
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
mov
pusha
jmp
sbb
clc
xchg
push
mov
mov
out
pop
jb
mov
mov
mov
xor
dec
sub
pop
mov
jl
rorl
adc
in
call
stos
hlt
push
add
stc
loope
mov
sar
andl
mov
icebp
testb
mov
incl
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
ud0
mov
mov
dec
adc
push
lock
lods
jp
mov
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
cmp
mov
loopne
cli
adc
aaa
xchg
in
add
inc
adc
out
dec
jbe
dec
fisttpll
out
aas
std
cli
push
push
pushl
inc
cmp
sub
inc
scas
inc
mov
jg
je,pn
decl
pop
imul
mov
mov
inc
es
gs
jns
enter
or
push
pusha
lcall
jae
inc
cmp
sti
punpckhbw
cmpsb
orb
mov
mov
js,pn
jmp
xor
pop
clc
pop
hlt
sub
movsb
add
mov
pop
jg
gs
std
xorb
jg
aad
cmp
outsl
adc
ret
das
pop
pop
pop
shlb
out
sarb
sbbl
mov
or
sarb
std
pop
les
cli
mov
mov
incl
add
pop
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
in
call
imul
pusha
adc
and
sbb
xchg
jo
and
out
test
jae
push
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
clc
push
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
jg,pn
pushl
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
ljmp
sbb
jg
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
in
ljmp
test
mov
mov
cmp
xchg
mov
cwtl
pop
fwait
inc
ljmp
xchg
and
jae
incl
jle
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
mov
adc
pop
cld
addl
adc
and
loopne
push
cmp
fmull
enter
jecxz
scas
incl
jmp
sub
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
shr
mov
or
cld
inc
or
sti
lds
pop
jg
add
jg
mov
aad
pop
in
divb
xchg
movsb
mov
iret
push
pushl
push
sbb
stos
icebp
pop
incb
jno
sti
fcomip
call
push
inc
jecxz
sbb
sarl
adc
loopne
cmp
mov
sar
adc
lahf
xor
out
push
in
inc
imul
dec
push
in
fildl
fsubrl
lock
and
pop
pusha
inc
sbbb
mov
add
mov
repnz
and
mov
adc
clc
or
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
jno
pop
nop
jmp
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
aas
cld
js
aas
divb
iret
dec
xor
fsubr
fistps
lds
fidivrl
jg
mov
add
dec
mov
sub
fstpl
xor
lahf
les
sbb
sbb
cld
addl
jmp
shr
stc
mov
lahf
outsl
int3
push
sbb
rcrl
pop
test
bound
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
or
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
cwtl
dec
incl
or
out
lcall
icebp
push
cld
clc
mov
mov
test
mov
pop
jg
pop
shrb
rcl
jg
adc
mov
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
mov
adc
inc
lds
push
pop
adc
imul
dec
or
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
push
pushl
enter
mov
into
test
xchg
movsb
insb
or
and
xchg
das
cld
cwtl
inc
mov
insb
test
aas
repz
outsl
lock
in
jmp
stc
out
mov
cmp
push
std
mov
or
rcll
lods
out
jne
or
cmc
mov
push
mov
decl
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rcr
dec
jg
inc
out
pop
or
or
dec
ss
incl
incl
pslld
pushf
imul
loope
pop
and
imul
cmpsl
lret
pop
in
cmp
inc
clc
jmp
mov
pop
lock
jmp
hlt
dec
mov
aas
fcomps
xlat
inc
aas
mov
jg
mov
jg
out
or
addr16
sbb
cld
daa
jp
std
adc
clc
in
loopne
cltd
or
mov
ret
nop
cmp
das
incb
add
icebp
scas
lock
pop
pop
div
cld
idivl
fs
pop
add
loope
jae
jmp
shrl
je
jge
sti
pop
lds
jg
stc
add
out
das
xchg
or
fndisi(8087
fisttps
sti
mov
or
ret
cmp
ja
push
leave
outsl
das
jge
aaa
fwait
pop
add
cmpsb
cmp
call
cli
or
data16
decb
adc
mov
and
loope
adc
call
loope
in
add
incb
in
cmp
int
add
push
pop
nop
or
dec
lock
or
mov
mov
jle
icebp
ret
ror
sbb
aaa
cmp
cmp
adc
shrb
clc
stos
sub
mov
pop
clc
loope
loope
mov
lahf
mov
sub
dec
add
xlat
jmp
mov
and
fmull
cld
pop
cmp
cmp
repz
sbb
pop
gs
lds
dec
sarl
pop
out
jg
jno
ret
jmp
cmp
inc
sti
andb
out
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
sbb
mov
ds
inc
mov
in
sbb
xchg
imul
jmp
or
mov
std
mov
daa
jmp
faddl
sbb
xchg
aaa
inc
test
sar
ljmp
lock
stc
push
dec
out
fstpt
mov
enter
add
lcall
jl
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
jmp
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
or
add
std
adc
push
sti
pop
inc
dec
push
leave
dec
lods
push
mov
push
cmp
xchg
push
iret
and
add
or
jmp
xchg
ret
into
out
mov
nop
push
inc
mov
xchg
pushf
sub
loop
mov
ljmp
adc
sub
xor
mov
xchg
lods
bound
jae
int
mov
push
gs
and
out
in
mov
das
test
jle
mov
ja
je
or
arpl
lretw
jmp
mov
add
inc
subl
fidivrs
ss
inc
ret
xchg
pop
jno
pop
mov
fmull
inc
cmpsb
cmpsl
cmp
cwtl
cmp
sbb
mov
in
sti
lods
xor
lret
arpl
mov
dec
in
cmp
adcb
xor
iret
lahf
jle
adc
out
test
cltd
and
mov
push
stc
shrb
jb
mov
fcomps
mov
roll
cmp
ljmp
adc
xor
inc
xor
inc
stos
pop
sar
call
roll
jns
jmp
jnp
fnstenv
in
pop
pop
enter
sbb
or
jnp
mov
rol
incl
or
mov
pop
mov
orl
sub
cmp
popa
push
incl
xchg
pushf
adc
jb
dec
push
jp
mov
sti
mov
js
call
ss
mov
cmpb
out
jne
fistps
fwait
sub
ljmp
shrl
mov
or
cmp
daa
push
test
inc
inc
mov
pushf
or
ljmp
popf
mov
int
test
in
mov
cmpsl
fiaddl
sub
cmpsb
fisttpl
sbb
movsw
pop
nop
int3
or
outsb
notl
jp
bound
jmp
outsb
mov
jg
or
xorl
inc
aam
and
decl
fdivrs
hlt
xor
pop
fistpl
mov
jge
test
bound
jmp
or
pop
jl
lahf
stc
dec
sub
inc
test
enter
xlat
xchg
jmp
ret
mov
stos
jne
pop
dec
xchg
in
vmwrite
cli
popa
push
es
enter
jno
fidivrl
stos
inc
sub
sbb
into
icebp
scas
iret
imul
mov
ljmp
loop
add
sub
call
iret
cld
and
adc
lea
sar
incl
es
dec
notb
sti
adc
cmpsl
adc
adc
fcmovu
mov
add
push
mov
mov
mov
ja
stc
ljmp
ret
or
ret
sub
lret
sub
mov
jge
popf
scas
bnd
jns
and
mov
dec
arpl
out
mov
pop
jns
xchg
jbe
dec
loopne
push
cli
hlt
dec
cmpsl
pop
ret
sub
or
xchg
mov
in
xlat
jg
mov
std
adc
sar
dec
out
mov
insb
lret
adcl
mov
adc
fwait
push
ds
repnz
cmp
mov
jmp
loop
sti
sub
cmpsl
rclb
and
dec
fcomps
xchg
and
ljmp
ds
int3
pop
lahf
imul
mov
flds
rcrl
call
mov
or
xor
jae
inc
jne
mov
ret
lahf
ja
aam
cmp
cmpsl
xlat
pop
adc
mov
jg
lret
inc
mov
testb
test
push
dec
mov
jno
pop
enter
call
stos
or
jle
lods
push
ds
jg
xchg
cmp
dec
clc
mov
and
cmp
mov
mov
pushl
mov
add
lea
popf
lock
ja
add
inc
inc
sbb
push
sbb
in
stos
data16
dec
add
shl
mov
xorl
fisttpl
inc
loop
ds
push
nop
push
push
cltd
rorl
cmpsb
fisubrs
popf
push
insb
inc
or
ficoml
int
and
mov
mov
inc
in
scas
out
mov
testl
aad
pushl
movsb
bswap
mov
das
mov
adc
pop
lea
stos
mov
sub
test
scas
mov
xchg
aad
lea
dec
test
popa
dec
hlt
inc
insl
ljmp
sub
fisttpl
roll
cwtl
outsb
push
jnp
cltd
leave
or
decl
jmp
sbb
in
mov
mov
imul
add
call
fisubl
jmp
push
xchg
repz
cmp
ret
xor
push
jae
pusha
or
pop
lock
mov
into
test
in
cltd
sbb
lock
int
popa
mov
mov
xchg
pop
mov
xchg
call
cmp
enter
pop
mov
fsubrp
pop
xorl
pushl
mov
adc
cs
adcb
aaa
mov
jmp
dec
dec
xchg
pop
rcrb
pop
add
sbb
jne
mov
iret
mov
sub
jmp
push
jle
mov
push
outsl
dec
and
and
sub
mov
push
mov
jg
adc
faddl
aad
and
int
dec
mov
lcall
xor
inc
les
sub
pop
mov
sarb
sbb
call
outsb
push
dec
repz
bound
test
mov
adc
jmp
mov
inc
inc
fstpl
mov
and
pushl
movsl
or
negl
test
adc
push
xor
adcl
decl
or
jbe
fs
inc
sub
cmp
mov
cmp
gs
sub
mov
adc
jmp
mov
inc
out
shll
inc
int
mov
pop
imul
aam
jmp
push
cmp
popf
jge
sbb
movsl
cmp
push
mov
inc
mov
push
dec
and
leave
sub
lcall
int3
fistl
sub
inc
jbe
enter
mov
adc
cmp
leave
dec
push
das
xchg
inc
sub
data16
ficomps
mov
jo
jmp
push
daa
test
in
rol
arpl
xchg
add
pop
fdiv
jae
push
int
testl
shll
daa
jne
xlat
mov
ror
inc
movsl
imul
pushl
shlb
stos
mov
pop
repnz
sarb
call
push
imul
jmp
cmp
or
dec
ljmp
sti
or
jg
and
pop
cmp
shlb
stos
push
inc
sub
mov
push
add
scas
lcall
call
loop
adc
fistpll
inc
inc
xor
xor
cmp
cmp
cmp
in
xor
dec
adc
shr
push
into
xlat
daa
cmpsb
andl
jb
mov
scas
push
mov
pushf
testl
xor
and
into
pop
push
ljmp
ljmp
cmp
dec
pop
cmpsb
push
xor
or
repnz
jp
incl
pusha
or
rcrl
mov
add
inc
adc
dec
mov
stc
fiaddl
prefetcht1
incl
loopne
and
pop
fldl
test
dec
push
jns
mul
jo
jne
addl
sub
rol
je
stos
pop
xor
movsl
leave
mov
scas
mov
into
sarb
jno
decl
outsl
ja
fadds
fistl
dec
push
mov
lret
jb
adc
xchg
pop
bnd
int3
adc
je
cs
mov
sahf
pop
xchg
outsl
xchg
mov
sbb
mov
repnz
aam
lock
sub
mov
aas
xchg
das
lods
or
imul
mov
inc
mov
cmp
call
dec
and
mov
cmp
nop
dec
cmp
iret
arpl
incl
dec
push
xlat
pop
and
inc
dec
mov
pop
mov
xorb
add
pushl
pusha
mov
out
and
lahf
add
xor
sarb
lret
mov
xor
test
das
cltd
int3
push
pop
and
fnstenv
adc
or
in
sbb
out
adc
or
sub
and
adc
mov
mov
mov
scas
mov
xchg
sbb
mov
aad
push
hlt
fsubs
dec
mov
aam
in
addr16
subb
outsl
sahf
pop
scas
add
cmp
xchg
scas
je
jo
mov
and
pushl
add
sub
sub
fnstsw
add
stos
out
nop
fdivrs
jmp
jg
ljmp
out
mov
cli
dec
jecxz
adc
inc
or
sub
call
or
sahf
out
das
or
out
pop
sbb
jp
pusha
adc
cmc
jecxz
adc
ljmp
clc
adc
or
xlat
xor
hlt
inc
sahf
and
jnp
mov
test
scas
dec
imul
dec
aam
xchg
cs
xchg
mov
or
or
cmpb
pushl
loop
cli
stc
pop
and
enter
lret
hlt
inc
xlat
frstor
sahf
lds
mov
lods
jle
or
pop
shlw
scas
sub
cmpsb
jge
setnp
decl
sub
sbb
sub
sbb
lcall
nop
sti
xor
xchg
xlat
and
scas
roll
leave
jae
mov
mov
in
mov
sbb
mov
mov
lods
push
int3
aas
mov
pop
incl
mov
or
insb
imul
inc
aam
shrl
xor
test
std
add
data16
sti
call
lcall
and
popa
mov
jge
sub
sub
xor
mov
add
fisubrl
xor
or
dec
andb
inc
or
adc
les
push
cld
inc
inc
rorl
xlat
push
push
push
xchg
xor
in
jge
sbb
push
in
jb
dec
ljmp
nop
rol
pop
inc
dec
pusha
mov
mov
dec
push
jnp
cmp
ret
cli
test
dec
and
test
test
sar
decl
mov
into
fildll
fs
mov
or
push
mov
adc
dec
js
js
and
call
fisttpll
out
dec
pop
test
lods
imul
cmc
and
sbb
call
es
aam
jbe
insb
cmpsl
adc
lahf
arpl
loopne
lahf
cmpl
sti
das
and
test
push
push
js
in
ret
out
cmp
inc
mov
div
out
cwtl
lds
jge
mov
mov
out
imul
push
push
fldenv
fistpll
jle
mov
mov
js
iret
stos
xorl
ret
aaa
pop
mov
mov
push
add
mov
lcall
pop
clc
inc
mov
dec
cmp
xor
aam
add
ljmp
imul
sub
jne
lea
xor
or
decl
icebp
sub
dec
sbb
repz
mov
xchg
mov
inc
add
lcall
dec
nop
leave
leave
or
notb
xor
xchg
out
mov
xor
pop
ljmp
fnstcw
xchg
push
addr16
in
popf
cmp
lods
and
fst
movsl
jl
mov
call
clc
enter
andb
je
mov
sub
adc
mov
data16
or
inc
mov
cld
ja
enter
enter
lds
fldt
inc
xchg
cli
cmp
scas
stos
call
inc
loopne
push
mov
cmp
mov
mov
fldcw
movsl
out
bound
inc
outsl
jnp
pop
shll
rol
sub
sbb
mov
jmp
jecxz
sbb
ret
shr
xchg
popa
mov
jns
pop
out
xchg
incl
cmp
call
xorl
mov
lcall
mov
int3
mov
pop
test
xlat
add
iret
fmuls
xchg
in
pushl
jmp
cmp
shll
lret
lret
mov
or
out
mov
add
jne
push
dec
jae
pushw
sar
pushl
adc
inc
jnp
lds
imulb
add
sub
scas
mov
mov
ret
addr16
ljmp
int
sbb
in
cmp
rorl
imul
lcall
mov
add
xor
mov
call
lahf
fsub
pushf
clc
inc
call
pop
ljmp
cmp
mov
dec
jmp
cmp
inc
sbb
sub
push
stos
cmp
cld
adc
jno
push
fsubr
test
jmp
add
inc
out
and
data16
data16
sbb
mov
loopne
hlt
call
test
mov
mov
xchg
mov
test
cwtl
adc
sbb
pushf
mov
fwait
loopne
shlb
addr16
incl
ss
mul
lea
cmpl
sahf
stos
pop
jg
clc
fbstp
pop
inc
faddl
lods
pusha
push
insl
mov
jle
inc
cld
or
aaa
mov
xor
mov
jmp
les
lds
ret
lcall
daa
sarb
or
fnstsw
cmc
fsubrl
inc
push
mov
cld
push
mov
xchg
pop
mov
jo
cmp
jg
jnp
sbb
add
push
mov
clc
inc
inc
aaa
mov
pop
mov
mov
pop
fcmovnb
cmp
push
push
lcall
mov
hlt
leave
into
sbb
loopne
call
and
cld
popf
lods
dec
loopne
mov
movb
icebp
dec
dec
dec
xchg
fst
push
mov
mov
mov
cmp
jae
jg
insl
jg
les
pop
sub
jno
loopne,pt
sub
adc
in
fs
stc
push
jmp
add
lcall
jb
and
cli
sub
ret
add
xchg
and
jl
out
xor
jmp
mov
pop
inc
jmp
incl
sti
bound
pop
movsl
fdivr
clc
fsubrp
and
ficoms
mov
cmpsl
jecxz
pop
lock
icebp
gs
dec
adc
js
add
out
ds
mov
insb
mov
or
pop
addr16
jb
mov
mov
in
jmp
insb
andl
jbe
ljmp
dec
dec
dec
into
popf
shrb
lcall
ja
into
aaa
or
dec
outsl
shlb
push
xchg
mov
or
push
jns
xchg
call
adc
jmp
aaa
push
jecxz
cmpsl
imul
shrl
fldt
adc
xor
dec
test
push
xchg
ficompl
sub
adc
mov
ljmp
outsb
mov
mov
pop
mov
cmpsb
xchg
jle
outsl
inc
test
add
pusha
dec
mov
jmp
jecxz
sub
jmp
incb
xchg
mov
pop
lret
nop
pop
xchg
lds
push
aaa
mov
enter
loope
call
add
add
mov
add
xchg
ljmp
mov
in
dec
fcom
sbb
adc
mov
mov
jmp
or
and
lods
xchg
push
inc
test
mov
or
pop
pop
mov
pushl
and
jae
cld
sub
pushl
push
fdivrl
enter
cmp
decl
mov
lods
imul
mov
adc
data16
jle
jmp
icebp
jmp
test
out
aam
push
addb
in
scas
or
das
test
mov
scas
mov
out
sbb
dec
jnp
push
leave
push
adc
adc
inc
add
imul
jmp
pusha
mov
das
das
hlt
xchg
mov
rorb
mov
ja
int3
roll
jecxz
incl
scas
sbb
std
in
sub
hlt
mov
and
fs
rcll
inc
mov
adc
jg
or
ficoml
mov
into
lcall
dec
jnp
leave
sub
or
fisttps
inc
sub
aas
pushf
fstpt
sub
ljmp
clc
mov
pop
fs
addr16
jp
jns
xlat
adc
repnz
repz
stos
icebp
ljmp
adc
insl
push
mov
iret
mov
out
les
scas
mov
pop
cmc
call
ss
cmp
push
loop
or
push
rcll
test
push
loopne
in
into
or
jmp
cmpsl
pusha
jnp
and
sbb
popa
repz
push
dec
test
ds
xchg
outsb
add
jmp
leave
jnp
fidivrs
cmp
repnz
sub
movsb
sbb
lock
mov
cmpl
inc
bound
aaa
sub
popf
cmc
aas
popf
and
push
rcrb
or
lock
mov
fimuls
ljmp
cmp
and
push
lcall
stos
pop
out
stos
insb
iret
adc
and
mov
xor
sar
shlb
cmp
call
pop
jne,pn
sbb
add
jbe
sub
ljmp
cmp
sti
pop
mov
shlb
and
mov
add
mov
decl
push
aam
and
aas
flds
jo
and
pushf
in
mov
adc
ljmp
dec
fdivl
mov
cs
cwtl
sub
add
mov
mov
mov
ss
mov
xor
push
sbb
incl
hlt
arpl
fstpt
test
decl
push
mov
mov
cs
mov
lret
push
sbb
mov
and
cmp
mov
aas
adc
subl
pop
push
mov
cwtl
jae
push
call
mov
data16
dec
sbb
roll
lcall
jge
aad
xchg
mov
mov
pop
cmc
xlat
add
mov
incl
out
adc
push
arpl
rolb
std
rclb
std
test
pop
movsl
and
dec
cmpsb
mov
inc
mov
lods
xor
imul
or
out
xor
xchg
jp
ljmp
loope
sub
mov
int
mov
nop
mov
adc
jmp
dec
lea
cmp
jle
or
scas
pop
loope
push
incl
sub
mov
insb
push
adc
add
loopne
xor
repz
dec
nop
test
xorl
mov
adc
aam
and
daa
inc
or
jmp
scas
out
cmp
push
stos
test
xchg
xor
fs
pop
adc
hlt
cs
outsb
pop
leave
xor
push
jg
lcall
loope
xor
movb
jbe
inc
mov
xor
lret
adc
cmp
sub
or
dec
ret
push
sub
gs
adc
int
mov
and
call
push
inc
ret
jbe
lods
push
dec
xor
xchg
pop
adc
imul
dec
pop
push
cltd
mov
adc
ds
and
ljmp
shl
orl
out
mov
ficoms
fistpl
xor
pop
fprem1
dec
dec
or
jge
xorb
mov
jg
xchg
or
sub
pop
mov
aas
sub
in
jmp
pop
es
mov
gs
clc
in
pop
test
xor
jns
push
call
push
dec
jmp
lods
mov
fstps
mov
inc
add
cmpsl
pop
test
inc
xchg
adc
push
pop
inc
sub
iret
test
mul
jmp
sbb
adc
sbb
push
sub
ljmp
lahf
aam
popa
scas
adc
mov
xor
xchg
mov
movsb
add
jmp
out
sub
pop
cmp
mov
rcrl
test
sbb
mov
push
mov
stos
fistps
popf
xor
jg
push
and
jmp
aas
out
push
dec
fistpll
jmp
jnp
stos
adc
or
jge
fists
jns
push
dec
mov
daa
jnp
lea
cmpsl
cmp
test
and
cmp
sub
test
jl
aad
jp
fisubrs
call
out
outsb
pop
xlat
mov
dec
popa
mov
in
and
aaa
cmp
aaa
jno
dec
ret
inc
adc
xor
push
mov
mov
shrl
ds
ds
lods
and
cmpsl
imul
stc
fs
pushl
xlat
popf
mov
pop
rorb
push
add
movsb
lret
push
mov
imull
jae
decl
inc
decb
test
insl
jmp
xchg
inc
xchg
mov
out
je
into
negb
cld
cwtl
lret
sub
incl
sub
aam
mov
fstpl
jo
dec
cld
fwait
in
xchg
xor
sti
pop
mov
push
cmp
add
into
and
incl
dec
sbb
scas
dec
or
out
pop
jmp
les
jns
call
cmc
jecxz
xor
popf
xor
ljmp
dec
jecxz
les
ret
adc
cmp
mov
lcall
pop
fidivs
cmp
jb
lds
loopne
inc
pushf
sbb
into
das
lcall
and
pop
divb
inc
pop
jmp
cltd
mov
sub
add
pushl
jg
sub
xchg
insl
inc
imulb
in
or
push
pop
test
jge
leave
call
pop
cs
push
sbb
test
push
imul
insb
cs
insl
lret
add
ds
cmpsl
push
xchg
or
fnstenv
adc
call
fdiv
mov
imull
xorb
xlat
dec
inc
inc
lods
fcos
call
loopne
js
and
inc
xor
ja
sub
out
add
push
cmpsb
dec
stos
shlb
adc
out
clc
ljmp
int
xor
push
cli
sbb
mov
ret
sbb
popa
push
incl
and
in
lcall
pop
push
and
dec
js
xchg
push
cmc
lods
jmp
and
or
sti
cltd
xor
cmpl
cli
insl
in
and
push
mov
lcall
movsb
hlt
gs
push
lock
and
das
jb
and
pushl
sub
dec
pop
mov
adc
xchg
fdivl
or
in
sti
outsl
xchg
or
push
iret
add
out
dec
test
jno
mov
push
cld
rorl
mov
add
sarl
fidivs
test
jae
or
imull
xchg
shr
jle
outsb
mov
or
out
test
ljmp
sahf
cltd
loopne
sbb
and
jl
mov
xchg
xchg
push
sahf
mov
xor
xor
and
icebp
sbbb
aad
and
xchg
dec
incl
jge
nop
or
push
xchg
add
lcall
cmpsb
imul
std
mov
mov
and
std
insb
mov
bound
and
xor
cli
pushl
outsl
fidivl
call
jl
ret
xchg
outsb
or
mov
out
and
dec
outsl
in
vmwrite
dec
inc
sbb
imul
lcall
cs
out
mov
test
out
pop
sub
das
push
push
ja
sti
xchg
pushl
pop
cli
cmpl
rolb
loop
mov
push
outsl
outsb
jb
jnp
hlt
call
fbstp
test
push
fstpl
add
sti
jo
jbe
int3
daa
xchg
dec
lcall
cmpsb
mov
xchg
les
loop
dec
add
inc
lcall
push
clc
pushl
xor
stos
sub
lds
sbb
pushl
jg
add
std
cmp
iret
aam
sbb
xchg
callw
shlb
lcall
push
dec
dec
push
int
ja
and
jle
sti
sub
out
in
sub
sbb
dec
pushl
dec
iret
mov
jmp
ds
mov
mov
adc
sbb
lret
xor
incl
stos
je
add
cmp
jg
cmp
xlat
mov
cmc
fcomip
mov
ljmp
lret
sahf
xchg
or
and
nop
decl
int3
mulb
fidivrs
stos
insl
mov
and
mov
loope
mov
cmp
mov
mov
jecxz
pushf
rclb
xchg
xor
nop
or
dec
sbb
add
jmp
cs
outsl
pop
ret
add
repnz
filds
inc
mov
xlat
out
xor
xchg
adc
pop
call
push
jo
push
aam
mov
or
out
lds
imul
repnz
call
pop
inc
xor
pop
inc
inc
test
ja
jle
mov
and
sysexit
bnd
mov
decl
repnz
and
mov
in
add
cmp
and
bound
adc
inc
mov
ljmp
pause
subb
add
rcrl
mov
psllw
imul
insl
mov
imul
jmp
shlb
call
mov
shlb
repz
cmp
rcr
jb
lds
lcall
arpl
loop
fsubl
add
call
fs
add
pop
hlt
push
sbb
xchg
push
or
mov
cmp
sbbb
in
cli
mov
clc
push
mov
add
pop
jmp
les
jnp
lea
push
movsb
repz
push
std
sub
imul
jae
sbb
and
push
mov
inc
pop
cmpl
cmp
in
stc
movsb
pop
pop
stc
gs
jmp
imul
arpl
mov
jnp
imul
mov
inc
push
or
loopne
gs
push
push
ljmp
lcall
xchg
jg
pop
rcrl
out
xor
mov
hlt
xor
test
sub
inc
cmp
decl
jnp
push
bound
gs
pop
add
xor
lock
and
bound
jne
std
fidivrs
iret
rcrb
inc
aad
or
insl
jle
addr16
add
in
into
js
mov
mov
mov
insb
add
xor
lret
cld
sbb
scas
sbb
clc
mov
ljmp
enter
xchg
lret
les
das
dec
pop
lret
out
or
cmp
ljmp
mov
loop
fcmovbe
call
imul
fnsave
xchg
xor
insb
jle
ret
stos
int3
int3
sub
das
mov
incl
dec
loop
aas
xchg
hlt
outsb
clc
pop
lds
sbb
xchg
scas
push
lret
mov
fildll
mov
fldt
in
add
cmp
sbb
dec
cli
xchg
jg
call
outsb
sub
sub
adc
dec
xchg
stos
mov
lret
roll
sbb
arpl
jb
aas
sbb
mov
out
pop
mov
lcall
loope
cmp
cmp
mov
jg
fucomip
roll
sbb
pop
and
add
cmc
mov
cmc
faddl
sti
cs
xor
fsubr
scas
pop
flds
mov
cmpsl
inc
sbb
fldcw
fcomip
call
out
jecxz
inc
xchg
xchg
push
mov
xchg
ljmp
mov
fdivr
mov
cld
jle
sub
movsb
std
xchg
cmp
mov
adc
pop
add
lock
dec
adc
xchg
xchg
jle
sub
sub
movsb
inc
mov
cmp
cld
cmp
stc
mov
xchg
pop
in
in
fmull
test
dec
mov
pop
fidivs
adc
xchg
push
loop
cli
push
cmp
mov
mov
fsubp
mov
ja
mov
mov
in
int
in
and
jmp
xchg
lret
xchg
mov
cmp
jns
rorl
xchg
mov
ss
add
sub
adc
out
ja
mov
cltd
inc
fsubrs
dec
movsl
das
ss
cld
jg
jg
mov
xor
addb
inc
dec
cmpsb
cld
adc
jecxz
aas
cmp
divl
and
rcrl
dec
lods
jl
adc
js
test
ljmp
outsl
jp
add
pop
xor
or
add
cmp
sub
jecxz
cmp
jmp
push
push
fmuls
jl
cmp
pushf
lret
jl
xchg
enter
cmp
pop
rcll
ss
ljmp
mov
sbb
sti
outsb
dec
cmpsb
mov
aaa
into
sub
incl
dec
imul
jge
jbe
mov
cld
mov
and
add
or
out
out
cmp
xor
ljmp
push
insl
adcb
jno
sti
mov
incl
add
push
in
sbb
outsb
cli
push
ljmp
lcall
pusha
ja
mov
mov
push
jno
inc
mov
lds
cmpsb
test
imul
xlat
push
jb
mov
aaa
aaa
push
push
nop
out
pop
cld
fstpt
dec
or
sub
push
jae
xor
pop
xchg
sub
jp
pop
xchg
call
das
jnp
sub
pop
mov
xlat
xor
adc
jae
sbb
or
ljmp
or
cli
lods
cmp
movsl
or
xchg
push
jb
adc
cmc
dec
jne
xchg
lods
lds
jmp
scas
mov
mov
ret
shrb
bound
cmpb
movsl
repz
incl
jmp
outsb
adc
pop
out
popf
push
es
add
and
pop
or
incl
fidivrl
pop
cmp
out
dec
fiaddl
test
sbb
xchg
xor
inc
ljmp
ret
add
decl
cltd
hlt
out
addr16
or
sub
jge
pop
xor
cmp
add
insb
inc
call
enter
nop
sub
mov
mov
call
enter
decb
sbb
sar
cmp
pop
fsub
push
jb
aam
or
insl
dec
es
ljmp
ss
jmp
cmp
adc
dec
sbbb
idiv
push
mov
mov
jno
jle
pop
xchg
cld
lret
int3
andb
add
lods
insb
daa
js
or
lods
lret
insl
clc
dec
jae
lods
cwtl
sub
int3
fs
mov
in
add
mov
ljmp
cli
and
or
mov
pop
dec
cmc
addr16
push
mov
leave
nop
inc
outsl
jle
xor
cmc
pushl
fsubrs
mov
insl
scas
dec
inc
sti
iret
lcall
aaa
sbb
into
or
adc
inc
xor
aam
aam
and
pop
jge
mov
inc
and
mov
inc
sti
lock
data16
loope
adc
push
pop
sub
shrd
lret
cli
xchg
in
ficomps
fstpl
out
out
ror
es
inc
js
sbb
pop
mov
insb
pop
dec
out
pusha
loope
sti
mov
pop
std
xchg
repz
mov
xlat
mov
bound
add
mov
fidivrl
xor
pop
push
pop
bound
popf
movsl
dec
and
cmp
lds
insl
or
lods
cli
inc
mov
pop
jle
incl
dec
aad
jge
sahf
sub
push
jmp
push
lods
mov
cwtl
cs
xchg
pop
pop
xchg
ljmp
scas
out
add
ds
pop
dec
adc
jno
inc
cs
std
pusha
jg
test
dec
inc
divb
jne
ret
dec
jmp
jbe
fsubrl
jp
mov
mov
ljmp
shll
inc
cwtl
add
jle
icebp
popa
dec
in
adc
ficoms
call
fidivs
rcl
xchg
insb
outsb
mov
subl
mov
cmc
pushl
stos
mov
push
adc
call
adc
xor
cmpsb
insb
mov
xchg
jecxz
call
inc
ja
mov
cli
jl
test
dec
fs
xchg
mov
jecxz
jle
jmp
movsb
sub
or
pop
jns
jo
int
stos
rcrl
faddl
jge
fsub
loop
and
scas
rcrb
enter
cli
pop
lret
lahf
cmpsb
xlat
add
mov
cmp
mov
mov
fistpll
lcall
sti
lods
cmp
pushf
mov
andl
mov
and
inc
mov
adc
xlat
imul
divl
dec
pusha
shlb
cltd
xchg
xchg
loope
lcall
mov
stos
std
mov
xor
mov
jge
mov
lcall
ljmp
in
mov
in
push
mov
lcall
call
pop
push
mov
dec
divps
adc
int3
rorl
cld
test
or
call
sub
push
inc
pop
mov
mov
ljmp
clc
pop
cld
inc
pop
es
ficoms
pop
insb
dec
mov
mull
incl
dec
mov
in
and
sahf
cmp
jb
inc
ljmp
roll
add
ss
out
pushf
lcall
sub
push
sub
loopne
mov
ja,pn
imul
push
and
pop
pop
dec
iret
xchg
fcoms
mov
ficoms
aam
cmp
cmp
xor
ss
gs
and
pop
mov
xchg
push
and
les
push
stos
jmp
loopne
jle
outsb
push
cmpsl
lcall
mov
fsubl
cwtl
stos
repnz
xchg
sub
ljmp
nop
movsl
push
mov
adc
xlat
mov
dec
ljmp
addr16
je
xor
test
pushl
sub
jle
add
jae
push
mov
pushf
push
adc
call
and
inc
das
cli
inc
sbb
push
lods
dec
xor
test
icebp
inc
enter
dec
mov
mov
jmp
sub
out
push
xchg
sbb
lods
jg
sub
mov
jbe
inc
add
aam
xor
add
add
pop
mov
incl
mov
lret
in
pop
shl
sarb
adc
and
adc
pop
dec
lret
mov
sbb
test
xchg
xchg
inc
sub
xchg
xchg
shrb
adc
lret
jnp
jmp
adc
aad
test
mov
fwait
lahf
fisubl
mov
xchg
inc
bound
std
incl
movsb
aam
mov
ss
mov
sarb
cld
hlt
popa
popf
out
test
push
jbe
push
mul
imul
lcall
push
and
cmp
loope
mov
incl
cmc
inc
aaa
xchg
push
xor
std
mov
cmc
mov
fcmove
adc
insb
cmp
jg
decl
mov
psubusb
inc
jle
stos
ss
loope
inc
sub
jge
cmp
dec
nop
cmc
cld
lock
std
sarl
inc
and
inc
lock
js
xchg
push
inc
mov
xlat
dec
pushf
and
rcrb
mov
gs
sbb
lahf
mov
lea
xchg
lret
or
mov
les
jns
mov
repnz
pop
mov
push
dec
mov
mov
jbe
sbb
push
dec
sub
or
clc
and
shl
hlt
insb
add
decl
roll
pop
or
mov
mov
in
sub
mov
add
dec
or
hlt
fldt
mov
inc
inc
cmp
ljmp
pop
lcall
shll
scas
cmpsl
pop
mov
ret
or
add
add
decl
in
ficoml
lock
scas
fcomip
pushl
out
pop
cmp
mull
mov
test
lock
cmp
decl
sub
mov
pushf
or
mov
jecxz
xor
push
divps
das
push
sar
mov
inc
movsl
push
roll
sti
sub
testl
lcall
inc
repnz
aas
xchg
inc
mov
mov
cmpsb
lock
test
mov
jl
push
and
bound
in
add
loop
mov
xchg
mov
je
push
loope
jg
pop
push
lea
test
xchg
fimuls
cmp
jmp
sbb
pop
mov
fildl
mov
xchg
pop
pop
sahf
iret
jg
cmc
sbbb
cmp
out
and
pop
fs
mov
es
clc
dec
rcr
lcall
jmp
ja
or
cmp
xlat
and
mov
nop
call
mov
xchg
xor
push
xor
mov
repnz
rorl
std
pushl
idiv
test
sbb
insl
jl
sbb
inc
ss
jg
jle
in
inc
sbb
cld
stc
mov
and
mov
outsl
and
xchg
or
out
fildll
not
xlat
sub
inc
cmp
xchg
lcall
stc
cmc
std
dec
sub
sub
les
fsubl
jnp
stos
push
mov
mov
or
sub
ret
xchg
push
lock
cld
les
mull
pop
push
lcall
sbb
popa
leave
icebp
inc
mov
lods
xchg
mov
dec
inc
icebp
data16
push
hlt
jg
dec
insl
mov
test
push
dec
mov
lock
and
add
decl
push
mov
sahf
add
dec
mov
xchg
imul
pop
iret
mov
pop
jbe
jae
andl
cmp
daa
je
xchg
std
push
rclb
jge
mov
mov
decl
jo
sub
std
fdivr
push
push
std
pop
xchg
xor
add
cs
pusha
stc
add
addr16
jmp
fwait
pusha
mov
or
or
push
lahf
ss
je
sbb
pop
mov
mov
aam
dec
xor
adc
sub
stos
mov
aas
cmp
or
xchg
test
decl
into
cmovb
or
sub
adc
adc
dec
mov
and
ret
lret
incl
test
dec
int
or
andb
mov
lret
ljmp
push
push
aas
fwait
pop
movsb
cld
dec
and
cmp
mov
jl
sub
movsb
pop
push
and
in
idiv
fcomip
sbb
icebp
imul
icebp
sub
mov
cld
lods
push
das
dec
aaa
sbb
test
lcall
outsb
or
cmp
mov
mov
add
or
jecxz
ss
xor
pushl
push
out
mov
out
rcr
fcomp
ss
mov
mov
ds
mov
out
xchg
fdivr
lcall
dec
jecxz
jg
enter
and
mov
mov
fwait
aaa
pop
inc
or
inc
xchg
js
push
fnop
jecxz
adcb
sar
ljmp
push
or
dec
add
hlt
adc
or
mov
mov
jg
cmp
mov
push
xchg
mov
and
lcall
call
out
cmp
push
cli
xchg
push
rcrl
lods
ret
sbb
lcall
mov
jnp
and
push
mov
lea
add
sbb
decl
xchg
and
loopne
insb
in
lods
mov
sub
xchg
outsb
pop
add
sar
pushl
mov
or
shll
mov
aad
popf
xchg
jae
mov
ljmp
mov
je
addb
mov
mov
sbb
lcall
cmp
shr
in
ret
loope
and
sbb
cld
dec
outsb
xchg
lcall
dec
push
out
sub
sub
add
jle
iret
je
fwait
mov
jmp
lcall
test
mov
jne
push
and
movsl
push
sarb
cmp
mov
inc
dec
jae
mov
lret
movsl
mov
or
xor
mov
sub
sar
jge
mov
adc
orb
fildll
jle
movsb
test
adc
jo
mov
inc
out
incl
shrl
jp
bound
js
add
jb
out
pop
inc
sub
jmp
test
into
sub
shr
iret
dec
sahf
pushw
sbb
jae
cmc
push
push
movsb
call
xchg
mov
or
ds
subl
and
pop
pop
mov
jle
les
ljmp
aas
imul
arpl
dec
inc
shl
sub
out
jmp
fdivp
aas
fsubrp
lds
call
data16
sti
mov
or
sbb
inc
aas
imul
sub
in
scas
jns
test
gs
arpl
sti
adcl
icebp
ja
dec
xor
dec
push
push
into
push
mov
test
out
sub
jnp
dec
add
and
out
pop
sbb
movsb
inc
and
cli
mov
fldl
jb
mov
out
mov
loop
hlt
adc
fidivl
jnp
dec
xchg
sbb
push
xor
add
ljmp
jb
aad
pushf
push
inc
cli
mov
pop
ljmp
scas
stos
or
inc
fdivp
cld
pop
mov
cmc
pop
repnz
inc
push
inc
adc
push
mov
add
pop
clc
ljmp
pop
imull
jecxz
into
bound
fucomip
sbb
mov
lret
stos
shll
add
ljmp
mov
ficomps
mov
mov
es
inc
pop
iret
shlb
ret
pop
cwtl
xor
add
xchg
pushl
rclb
lods
add
je
int3
mov
dec
insb
adc
or
jg
incl
scas
jg
add
and
xlat
push
imulb
mov
mov
add
shl
mov
lds
mov
mov
sub
jg
jmp
dec
dec
ret
lcall
sbb
mov
jns
push
js
out
ljmp
mov
or
xlat
outsb
mov
pop
dec
jo
and
call
mov
xlat
int
clc
cwtl
ja
outsl
or
and
call
mov
addl
out
fcomps
sti
jnp
lock
decl
in
addl
loopne
stc
pop
dec
xchg
push
push
pop
in
lret
xor
cmp
ljmp
sub
fistpll
js
in
adc
dec
dec
sbb
aam
out
lcall
inc
test
cmc
mov
mov
and
aaa
fs
sub
xchg
fsubl
adc
jp
xchg
pop
cld
mov
jp
stos
lcall
pusha
mov
lret
mov
ds
insb
push
sbb
mov
scas
cltd
inc
adc
popf
adc
fidivl
xchg
fisttpll
mov
pushl
into
repz
rcrb
inc
sbb
icebp
inc
fnsave
mov
inc
subb
push
mov
test
mov
mov
ljmp
xor
testl
out
rolb
or
outsl
push
mov
xlat
pushl
in
stos
jle
xor
sbb
sbb
repz
int
mov
leave
cmp
push
sub
mov
inc
cmp
add
jo
jns
scas
fcomip
mov
les
cmp
push
and
xchg
add
cmp
leave
incl
movsb
pop
and
rcll
sub
andb
xchg
push
pushf
push
push
stc
xor
ds
enter
cmc
andb
sbb
fbld
mov
adc
out
ljmp
cmp
mov
push
js
mov
js
dec
mov
in
data16
mov
and
aam
dec
xor
sub
rcl
jo
fisubrl
fwait
or
pusha
jmp
mov
pusha
into
and
call
mov
sub
test
insl
xchg
adc
lcall
mov
ja
or
stos
add
repz
jge
add
sar
mov
repnz
jnp
call
dec
inc
out
ja
hlt
out
inc
mov
faddl
jne
int
rclb
jnp
or
out
scas
add
xor
in
cmp
test
sbb
push
mov
das
push
lcall
js
subl
cmpsl
lcall
inc
imul
lods
fldl
sub
inc
daa
push
sub
shlb
outsl
inc
sub
mov
xor
pop
sar
stc
std
lods
dec
test
ss
jns
and
cld
shll
xorl
in
callw
fdivrl
push
cli
sahf
rcr
es
mov
mov
aad
in
decl
out
cld
cmpsb
std
aam
out
ljmp
pusha
sbb
fildll
adc
sbb
pushl
lock
pop
jl
aas
or
pop
inc
imul
in
adc
fisubrl
fsubrl
nop
inc
lcall
adcb
inc
rcrb
adc
cli
pusha
xchg
xchg
out
imul
mov
xor
mov
pusha
adc
sub
shl
in
push
mov
hlt
adc
scas
cli
mov
xor
sbb
push
icebp
pusha
repz
inc
push
cmpsb
pop
mov
or
mov
add
in
mov
add
mov
call
add
test
in
inc
dec
jmp
jle
hlt
add
stc
add
ljmp
inc
mov
jbe
shlb
aas
in
inc
test
dec
arpl
or
mov
outsl
popf
jg
mov
and
add
jae
cmp
adc
pop
into
lret
daa
nop
lcall
push
fbstp
loope
dec
and
std
jae
jl
adcl
pop
out
arpl
pop
std
jmp
scas
fwait
adc
mov
xor
cmp
repz
ret
and
das
sar
push
mov
les
aaa
push
movsl
repz
cwtl
and
dec
push
popa
cwtl
test
mov
repnz
sbb
mov
popl
mov
push
les
jg
dec
cmp
mov
push
jecxz
loope
xchg
fwait
xchg
stc
inc
mov
xor
mov
popa
cmp
pop
icebp
mov
pusha
xchg
mov
pushl
out
repz
push
mov
popf
and
inc
or
js
cmp
negb
hlt
in
arpl
divb
push
jl
inc
decl
std
and
lock
push
testb
push
jle
sbb
out
mov
xchg
xor
xchg
daa
incl
mov
in
cmpsb
fildll
stos
mov
cmp
test
out
jns
jnp
jl
mov
push
rcrb
ljmp
mov
lods
pusha
mov
cld
mov
add
ds
js
mov
push
iret
imul
mov
in
mov
xor
mov
dec
mov
insl
xchg
jmp
mov
mov
daa
jg
mov
test
mov
out
movsb
inc
pop
lret
adc
sti
ss
addb
xor
inc
inc
jno
stos
out
andps
add
nop
jo
decl
sbb
push
or
mov
outsl
gs
test
andl
mov
decl
clc
adc
dec
add
shlb
test
push
lods
ljmp
call
aam
mov
ljmp
pop
lcall
hlt
push
loopne
dec
push
jmp
das
dec
clc
cmp
out
lcall
mov
jnp
stos
push
adc
jmp
lret
mov
repz
xchg
pushf
rcrb
jmp
jle
into
xor
ja
mov
lods
or
push
mov
push
xor
out
xor
repz
pop
push
adc
mov
push
pop
aas
adc
jmp
sbb
out
insl
cmpsb
mov
aaa
std
inc
cmp
push
sub
stc
xchg
scas
mov
mov
ds
out
clc
jle
test
mov
jno
leave
stc
mov
cmp
or
xchg
cld
dec
hlt
gs
arpl
sbb
jb
pusha
push
jp
jl
les
inc
mov
sbb
pushl
inc
orb
xor
cmp
lock
jo
mov
mov
sub
pushl
imul
lret
test
sti
mov
cmp
call
mov
into
les
lcall
mov
jmp
dec
cld
in
sub
inc
stos
movsl
mov
sbb
and
jp
daa
sub
arpl
sub
add
dec
lret
sbb
push
inc
jb
mov
pushl
ja
int
sub
mov
mov
add
jnp
ret
dec
ret
jb
out
incl
shlb
fiaddl
loop
xlat
xor
adc
mov
aas
jg
dec
arpl
loope
lahf
ja
dec
mov
lcall
stos
inc
add
sub
push
dec
pop
bound
push
push
dec
xor
sub
outsl
movsb
pop
jne
fcompl
cmpsb
fistl
pop
out
push
out
lods
or
and
sub
mov
push
shll
push
jnp
cmc
cmp
push
dec
loop
test
fwait
pop
inc
add
insb
hlt
sbb
in
cmpsb
push
pop
mov
or
sbb
mov
lock
or
mov
jmp
xchg
mov
push
cmp
cmp
ret
add
mov
inc
mov
jecxz
pusha
test
dec
fs
and
addr16
mov
incl
les
je
inc
addr16
mov
push
inc
int
inc
fmull
lcall
sbb
in
mov
out
lret
jae
and
cli
lret
das
or
mov
dec
test
les
int3
and
mov
movsl
lds
incl
or
jmp
and
repnz
mov
dec
lcall
shlb
mov
call
out
pop
test
scas
imul
mov
sub
push
fs
int3
shlb
push
add
lods
cmp
test
shlb
lcall
std
pop
xor
test
cmp
ss
mov
cmp
cmp
add
idiv
cmp
add
sarb
ret
in
mov
jns
stos
mov
push
mov
sbb
mov
loope
adc
incl
int3
jne
jno
cmpsl
push
push
ficomps
test
test
mov
mov
cltd
dec
in
or
aas
popf
xchg
dec
add
inc
rcrl
xchg
pop
cmc
ja
cmp
je
pop
push
dec
test
push
mov
das
icebp
ss
stc
aas
sbb
fstps
add
push
addl
inc
insb
call
jg
lcall
inc
rcr
rclb
fcmovb
mov
pop
shrl
xor
pop
inc
lock
adc
jmp
dec
sbb
cld
call
movsb
inc
push
addr16
xchg
adc
adc
popf
sbbl
jg
int3
ret
sbb
inc
jae
fimull
xchg
push
test
cmp
fldt
fs
movsl
decl
incb
test
loopne
aad
sbb
add
pop
aas
jp
repz
mov
pop
mov
inc
xor
int3
gs
cmpsl
inc
xor
mov
cmc
dec
rcrl
and
push
loope
mov
lret
js
iret
out
es
enter
sti
scas
fidivrs
cmc
aad
xacquire
or
inc
rep
mov
mov
je
xor
pop
push
daa
jnp
loop
shlb
xchg
sub
lock
in
bound
push
cmp
scas
adc
jge
pushf
push
mov
stos
add
inc
sti
mov
push
outsl
adc
cmp
inc
xor
dec
cmpsl
and
mov
ljmp
pop
loopne
mov
push
arpl
dec
and
jp
scas
dec
pop
xchg
pop
test
cmp
leave
and
adc
pusha
pause
ss
mov
jnp
int
stos
cmp
sbb
sbb
lds
dec
scas
fdivr
pushl
test
mov
mov
lods
fsubs
sarb
mulb
shrl
sub
call
std
xchg
mov
mov
or
icebp
ret
daa
lret
pop
dec
inc
pop
frstor
test
jg
fwait
adcl
pop
sub
nop
lret
movsl
pusha
sarl
adc
dec
lea
leave
lock
or
fldenv
insl
aaa
jge
in
fwait
jmp
jg
clc
cmp
jle
aad
sbb
into
pop
add
out
dec
dec
push
lret
mov
fstps
or
stos
aad
imul
push
xchg
cmpsb
mov
mov
mov
fadds
pop
outsl
xchg
fldcw
push
cmp
add
mov
and
mov
dec
mov
out
clc
mov
lcall
adc
cltd
fsubs
lods
xchg
pop
mov
mov
arpl
les
jecxz
jb
fnsave
outsb
clc
pop
jo
push
fs
push
lods
movsb
mov
mov
ljmp
test
and
or
sbb
jae
adc
and
call
popf
xchg
jg
out
aam
loop
addb
lahf
shll
mov
xchg
mov
jmp
pushl
mov
cmp
dec
add
aas
xor
xchg
sahf
std
sub
mov
out
inc
and
call
out
js
into
or
mov
aaa
mov
loope
add
cld
lock
or
xor
imul
and
and
sub
dec
lret
mov
leave
fcomp
adc
cli
test
push
cmpsl
es
fwait
movsb
sbb
push
mov
aaa
cld
lcall
inc
ss
data16
mov
loopne
sti
mov
jp
imul
repnz
outsl
xchg
hlt
out
cmpsb
pop
fisttpll
nop
push
rclb
sbb
cwtl
arpl
pushl
mov
push
sarb
dec
mov
popa
aam
lods
push
sbb
enter
dec
xchg
in
fwait
lcall
fcompl
inc
push
xor
pop
stc
push
lods
inc
xchg
inc
fdivl
sub
fstps
dec
scas
cli
call
sar
mov
outsb
jp
adc
push
mov
xchg
je
mov
mov
push
pop
inc
push
scas
jg
lcall
jp
incb
jle
xchg
fs
cmp
mov
jg
or
mov
mov
std
data16
js
test
js
imul
lcall
pop
mov
bound
cld
movsb
in
sub
sbb
pop
enter
pushl
mov
add
pop
sahf
mov
jl
mov
pop
sub
shl
mov
int
in
add
jmp
and
out
lcall
and
add
jbe
pop
lock
sahf
pop
jp
sub
and
insb
mov
xchg
jecxz
cmp
das
cli
ljmp
into
xchg
xor
xchg
fmuls
icebp
enter
call
cmpsb
inc
fldenv
lods
or
test
inc
inc
imul
inc
mov
xor
dec
push
stos
fsts
outsb
mov
cmpsl
fs
pusha
loop
inc
decl
sbb
inc
call
movsl
stos
push
test
ret
ljmp
rclb
xchg
lods
mov
ret
shl
mov
in
imul
or
xchg
sbb
push
mov
mov
jae
mov
stc
clc
mov
lret
inc
cwtl
add
xorl
mov
mov
jg
xor
pop
adc
ljmp
addr16
call
pop
mov
sbb
xchg
cld
mov
push
insb
ret
mov
jo
lret
fldt
insb
pop
jecxz
stos
incl
xor
lret
jae
xchg
ja
outsb
fisubs
cmp
or
aas
cs
mov
mov
repnz
sti
xchg
sbb
sbb
xchg
or
decl
xchg
out
or
outsl
repnz
add
mov
mov
pop
in
fidivrs
push
xchg
fnstenv
out
movsb
sar
int
cmp
inc
or
adc
pop
jnp
mov
add
pushl
popa
dec
into
xor
lods
or
mov
jge
adcl
mov
sbb
ffreep
icebp
xchg
mov
cltd
sti
mov
hlt
mov
jmp
mov
es
decl
dec
lea
out
cmpsl
loop
pop
sbb
jbe
in
stc
mov
test
setp
dec
push
push
movsl
aas
jb
mov
and
ret
push
xor
xchg
jecxz
sub
add
add
pushl
pop
scas
out
pop
cs
fadd
mov
push
cmp
cmp
pushl
aad
mov
adc
pop
and
cs
out
loope
jmp
scas
cld
jmp
es
decl
dec
std
cltd
add
mov
stc
pop
sub
call
fdivrs
cmp
call
pop
aas
lret
sbb
int3
mov
jp
pop
lret
out
jmp
or
std
in
fisubs
jae
or
cmpsl
mov
fcomip
xorl
movsl
lret
push
cmc
pusha
cmp
fucomp
or
into
leave
dec
sbb
or
decl
inc
es
movsl
xor
loope
sbb
cmpl
fwait
lahf
xchg
insl
arpl
es
incl
fsts
shll
out
add
movsb
inc
test
data16
jns
dec
mov
gs
rcrb
int
inc
cmc
xor
in
aam
ja
xor
test
out
adc
loopne
inc
push
int
pop
and
ret
mov
ljmp
or
sbb
cmp
es
call
int3
cmp
inc
cmp
mov
call
or
gs
lidtl
mov
out
sub
daa
movsl
xor
ret
mov
decl
lock
mov
pusha
lcall
mov
mov
pop
or
stos
std
stos
stc
adc
fwait
mov
push
stos
push
mov
ljmp
jbe
push
cli
jl
sbb
pop
aad
sub
ja
dec
and
add
fdivs
fildl
dec
push
rcrl
sbb
cmp
test
fwait
and
adc
pop
call
call
sbb
in
movsl
jns
jae
and
fnstsw
test
inc
inc
incl
mov
push
sti
or
pop
mov
sbb
dec
lcall
faddl
subl
add
add
cltd
mov
incl
xchg
adc
sub
nop
cmpsl
out
lods
sbb
sub
je
mov
dec
jl
jg
mov
aam
sub
cmp
stos
lcall
pop
inc
mov
add
das
jle
bound
jmp
inc
jmp
adc
add
dec
mov
popa
mov
enter
xor
fs
xor
call
sub
mov
mov
cmp
sbb
int
and
fstps
lahf
inc
sub
das
lea
add
adc
xor
addr16
cwtl
ljmp
daa
jmp
cli
jne
test
add
aad
call
mov
sar
mov
add
out
fmull
push
pusha
data16
sub
repnz
pop
out
push
mov
gs
call
andb
or
cltd
or
dec
mov
fsubl
cld
js
ret
jmp
cld
in
rcl
pop
sbb
push
repnz
pushl
adc
xchg
dec
pop
ljmp
out
fdivs
pop
sbb
rorl
ljmp
xor
push
sub
xor
hlt
pop
nop
and
mov
inc
push
call
cmp
gs
gs
mov
andl
mov
push
ud2
dec
call
sub
and
leave
jb
gs
ljmp
cmc
sub
jle
jl
push
fidivrl
ret
dec
mov
shr
adc
lds
push
je
lret
rcrl
arpl
call
lea
lret
call
iret
das
sarl
jb
mov
loopne
push
or
or
ret
jecxz
mov
xor
in
cmp
xchg
xor
iret
hlt
cwtl
xor
into
ljmp
in
test
enter
iret
jge
mov
lcall
mov
xchg
jae
cmp
jo
scas
sub
decb
cmp
incl
lods
int
fwait
insl
mov
xchg
scas
out
movsl
mov
aam
cmp
fcomip
jmp
out
rorb
add
mov
sbb
pop
dec
out
mov
in
mov
mov
xlat
push
pop
mov
cmp
ja
sti
ljmp
out
mov
xchg
in
xchg
jg
test
es
movsb
sbb
sub
inc
pop
mov
insl
call
mov
cmc
xchg
mov
or
xchg
pop
jb
call
inc
push
scas
movsl
popa
mov
push
data16
cmp
scas
pusha
dec
xchg
jns
lea
shlb
inc
jae
fnsave
decl
jno,pn
pop
jbe
test
std
js
sti
rcrb
icebp
cs
inc
pop
sbb
dec
pop
pop
icebp
call
and
repz
mov
int
ljmp
lock
lods
call
pop
shlb
jbe
mov
xchg
sbb
into
adc
jbe
call
push
mov
cmc
xchg
add
popf
sbb
jl
adc
mov
mov
in
jno
clc
jmp
aaa
adc
jno
out
cmp
hlt
mov
fistpll
jne
fdivrl
in
in
mov
out
and
hlt
outsb
dec
mov
ljmp
push
jl
sbb
cmp
push
loop
mov
insl
fimull
ss
and
mov
popf
shll
jmp
clc
push
mov
cmpsl
aas
push
fcomi
adc
inc
icebp
lods
rcrl
mov
push
xchg
xor
incl
adc
sub
sbb
stos
add
shl
adc
ret
popf
test
orb
or
sub
das
cmp
jno
and
dec
aad
stos
iret
and
pusha
mov
inc
stos
out
pop
mov
incl
gs
push
xchg
mov
sbb
rcr
inc
mov
inc
ljmp
push
mov
bnd
ret
ljmp
or
out
dec
fs
aas
xor
xchg
push
mov
mov
jb
fstpt
cmpb
mov
xchg
stos
fcomip
mov
xchg
pop
call
xchg
ss
push
fwait
iret
mov
aaa
inc
sti
cmp
rdtsc
or
rcll
mov
test
or
cs
jmp
fadd
das
xchg
sbb
repz
push
push
mov
sub
jae
jg
cwtl
add
jmp
lods
fs
mov
dec
pop
xor
jge
fistpll
lahf
xor
call
imul
xor
leave
mov
pop
cltd
orl
xchg
sub
sti
jne
ds
jecxz
inc
loope
mov
mov
out
push
push
nop
xchg
jecxz
loope
xchg
push
scas
into
mov
pop
stos
ljmp
fiadds
sub
in
xchg
int
pop
push
clc
cmp
loope
jb
pop
sti
inc
jl
repz
std
testb
cld
mov
imul
pminub
inc
iret
or
mov
outsb
jnp
mov
inc
xchg
jmp
xor
xchg
lahf
or
jle
movsl
mov
xor
jmp
pop
xor
push
adc
notb
sbb
idiv
pushl
adc
es
int3
mov
sahf
xor
test
add
dec
dec
les
jle
jmp
clc
mov
mov
jecxz
fidivrl
inc
imul
incl
arpl
cld
add
xchg
jae
mov
dec
stos
dec
jb
mov
loopne
ljmp
aad
int
pop
fcompl
dec
sub
lcall
ljmp
add
std
test
por
pop
adc
adc
push
fcompl
in
jne
cmp
push
rolb
inc
push
or
push
cltd
aaa
jmp
es
stos
stos
or
jg
sti
movsb
cmpsl
sub
scas
enter
stos
cmpsl
inc
xor
pop
les
icebp
dec
pop
in
xchg
mov
stos
aaa
in
or
inc
cmp
or
jmp
ljmp
push
fiadds
mov
cmpsl
adc
test
pop
push
insl
and
lock
lods
push
adc
xchg
ss
popa
jae
xor
jmp
add
sbb
push
or
cli
or
mov
inc
add
incl
xchg
push
decl
mov
addr16
mov
mov
lods
jmp
cmc
jp
fdivrl
adc
inc
outsl
cmp
cmp
jmp
dec
jg
js
push
or
xchg
or
adc
sbb
xor
inc
jg
loope
lds
jo
loopne
mov
pop
in
xchg
ret
xlat
dec
cmc
icebp
jge
bound
inc
inc
dec
cmp
aaa
std
cmp
jp
out
mov
sub
add
nop
cmc
fsubrl
call
rcll
ds
stos
sbb
dec
mov
push
xor
das
ljmp
hlt
pop
lock
push
jmp
aad
out
mov
inc
mov
out
sbb
mov
js
into
or
dec
out
loopne
repnz
add
mov
push
push
call
fsubr
leave
loopne
push
sub
mov
call
mov
jb
or
dec
or
lret
cmp
mov
xchg
ret
xchg
imul
shl
xor
ret
inc
insl
hlt
add
test
bound
ds
sbb
adc
pop
inc
jmp
push
inc
movsl
gs
xor
jno
shrl
and
mov
xor
clc
fildll
sub
scas
push
mov
lcall
incl
cli
mov
adc
addr16
adc
lret
out
inc
or
out
mov
sbb
hlt
mov
jo
imul
pop
mov
cld
insb
mov
push
pop
stos
pop
aas
aaa
fidivrs
pop
out
lahf
in
jle
je
fcomip
aas
outsb
rcr
dec
mov
je
fsts
movsl
fs
insl
mov
jbe
call
andb
jecxz
xchg
dec
dec
mov
sub
out
mov
sub
push
fisubl
into
scas
cmc
fwait
xor
out
ud0
mov
rolb
adc
push
orb
sbb
push
inc
rolb
push
fadds
or
add
jae
imul
adc
lods
shlb
push
push
iret
lds
dec
aas
std
cmp
mov
sbb
xchg
pop
in
mov
loopne
call
cld
ljmp
push
jne
std
jge
pop
mov
jg
jp
sbb
in
lcall
cmp
outsl
cmp
inc
push
sub
inc
inc
fdivrl
add
adc
ljmp
in
in
xchg
pop
push
dec
test
icebp
cli
jbe
popa
mov
incl
cld
pusha
mov
jae
pop
mov
lods
xchg
fistpll
add
pop
fcomip
xor
jo
das
sub
outsb
insl
pop
push
sbb
jne
call
lcall
xor
fadds
add
cmp
push
pop
ds
jmp
leave
sti
sarl
ret
cltd
jmp
movsb
call
insl
insl
cli
inc
add
dec
mov
xor
adc
xchg
sbbl
loopne
dec
inc
fistpll
pushl
lret
and
out
lods
enter
or
dec
cmp
jno
decl
cs
add
or
rcrl
stos
dec
data16
test
jg
loop
inc
mov
pop
int3
add
cmp
sub
jmp
fbld
test
or
lcall
add
iret
sahf
mov
leave
jae
inc
ja
lock
inc
daa
lahf
out
xor
loopne
sub
ljmp
or
push
out
test
cmp
push
in
out
lods
lcall
fstl
in
lea
insb
fdivl
lahf
sbb
aaa
xchg
sbb
repz
hlt
sbb
int
out
clc
call
mov
adc
loopne
and
cmp
inc
sbb
sbb
addr16
fxch
dec
xor
inc
in
movb
jge
in
jbe
push
adc
int
lock
jnp
sub
cmp
cld
add
xchg
ficoml
push
cltd
pop
xorl
mov
insb
fwait
xchg
pop
xor
add
hlt
jg
mov
mov
sub
cmp
cwtl
pop
std
mov
aas
test
xchg
test
cmp
call
cld
neg
mov
sbb
fbld
fistpl
inc
sahf
jnp
dec
and
mov
jmp
cmpsb
push
or
jnp
dec
jecxz
loope
sub
in
lcall
ret
cmp
sbb
lock
inc
hlt
pop
imul
sbb
lcall
ds
mov
cmp
aad
setle
mov
dec
movsl
inc
mov
sub
stc
sbbb
jmp
jae
push
imul
movsb
gs
cli
and
out
ret
push
sti
mov
jns
test
ljmp
mov
xchg
dec
xchg
mov
jnp
cmp
sahf
and
pusha
aad
js
fidivl
lret
call
xor
test
sbb
cmpsb
shll
add
test
pop
cwtl
jp
adc
jns
mov
adc
add
mov
and
dec
adc
addr16
or
cmp
movsl
cmp
stc
lcall
adc
inc
jbe
gs
stos
adc
lcall
fists
loope
sbb
fidivs
mov
pop
rclb
in
int
out
pop
sahf
data16
out
add
adc
call
pop
pop
mov
adc
fcoms
xor
nop
jno
stos
cmp
push
or
ja
push
jg
mov
jb
mov
or
fmuls
xchg
jne
push
jg
repz
dec
pop
add
sbb
mov
aas
push
hlt
fwait
loopne
scas
mov
call
xchg
add
gs
lcall
lahf
and
orl
mov
addl
jle
xchg
in
xor
div
dec
addr16
movsl
dec
cli
mov
sub
repnz
push
xor
daa
inc
dec
lock
mov
sub
into
inc
cmc
add
pop
mov
dec
jl
xchg
mov
call
push
inc
jl
ficoml
enter
push
cs
pop
adc
lock
decl
enter
push
mov
push
sbb
cmp
mov
out
pop
fiadds
mov
add
xchg
cmpsl
inc
pop
xchg
inc
loopne
je
adc
stos
insl
jmp
fcom
push
dec
lret
mov
decl
sub
scas
cld
cs
stc
mov
bndldx
jo
fcomip
sbb
fcos
adc
mov
dec
push
sub
mov
mov
repz
rcrb
xchg
ljmp
enter
jl
in
sub
mov
jo
movsb
in
enter
mov
out
add
lds
xlat
es
scas
cmp
out
xchg
inc
jmp
inc
jne
mov
js
push
sar
inc
sub
out
in
ljmp
mov
lods
push
jl
cmpsb
pushf
xchg
in
jg
xchg
jmp
mov
sbb
push
pushf
and
int
inc
add
call
repnz
out
add
sbbb
incl
stos
xchg
shl
cwtl
frstor
data16
dec
lcall
inc
sarl
lcall
push
lahf
push
hlt
or
sub
lcall
mov
push
ljmp
imul
decl
add
js
ret
push
pop
sub
push
pop
hlt
roll
call
jb
jno
xchg
pop
lock
mov
lcall
sti
repz
or
xchg
mov
aaa
mov
out
dec
sub
lcall
push
pop
scas
cmc
cmc
push
adc
mov
push
xchg
inc
cmp
jl
cmp
pop
ja
call
xchg
pop
or
lock
push
sbb
das
push
in
cmpb
dec
lock
pushl
jle
add
lods
out
shl
xchg
mov
sahf
pop
mov
shrb
jmp
fidivs
clc
aam
pop
mov
inc
in
lret
pop
mov
lcall
test
std
jg
push
jne
aaa
adc
imul
push
mov
push
mov
jmp
mov
adc
jp
scas
outsl
cmpsl
mov
push
insb
and
stos
call
mov
xchg
popf
push
sbb
lea
bound
incl
push
jecxz
sub
in
in
bound
int
nop
mov
aas
popf
adc
lcall
cmpsb
nop
pusha
jg
mov
adc
push
mov
sbb
mov
jg
jmp
pushf
fs
xor
ficoms
pop
push
test
daa
addb
mov
insb
sub
push
addr16
cld
adc
dec
les
decl
das
mov
mov
add
inc
sti
popf
enter
add
decl
push
into
loop
loopne
int
and
in
and
dec
rorl
incl
push
test
enter
xchg
ja
das
xchg
stos
jne
cmp
jnp
call
mov
mov
push
dec
sarl
fistpl
ljmp
data16
ljmp
fistps
aad
outsl
inc
mov
mov
sti
push
in
std
lret
out
adc
das
call
aad
push
add
and
outsl
dec
cltd
inc
loopne
lret
inc
pop
or
test
xor
outsl
aam
cmp
lcall
xchg
pusha
sbb
mov
out
jge
mov
mov
test
cld
mov
xchg
pop
inc
mulb
push
iret
lahf
fldenv
push
dec
push
and
fucomi
cmovs
subb
ss
call
inc
push
ret
gs
out
pop
sbb
lahf
mov
pop
rcrl
clc
ljmp
mov
pusha
insb
das
scas
and
les
movsl
or
in
lods
xchg
xor
decl
outsb
jbe
testb
ja
cld
cli
loop
movsl
sbb
jmp
and
mov
sub
cld
pop
or
cmp
sbb
mov
iret
xchg
cmc
sahf
push
push
incl
into
lcall
outsb
jnp
aaa
inc
ret
or
sub
mov
nop
loope
pop
aaa
jp
push
push
loope
or
clc
xchg
and
jmp
mov
sub
jns
faddp
movsb
jne
lcall
xlat
popa
mov
dec
adc
inc
divl
pop
movsb
push
daa
mov
hlt
in
mov
dec
aaa
push
leave
sbb
aad
mov
dec
rclb
stos
cmp
inc
scas
cmc
repz
xor
les
popa
cld
decl
push
shll
out
sahf
jns
pop
inc
push
rcll
push
stc
inc
xor
fucom
jns
into
add
add
inc
pusha
mov
dec
aam
ss
mov
pop
sbb
jae
sub
push
mov
loope
xchg
mov
shll
add
adcb
sbb
scas
mov
std
mov
call
ret
dec
jmp
add
or
movsb
push
dec
pop
jmpw
inc
pop
repz
pop
push
popf
sbb
stc
sub
dec
cmpl
aas
mov
inc
cmp
fwait
or
push
outsl
idiv
call
enter
sub
dec
sahf
fcomps
idivl
fstl
call
jbe
cld
push
aad
push
sbbb
xchg
xor
jl
pusha
sahf
mov
ret
add
in
fucomi
adc
std
lock
or
push
sahf
data16
push
jmp
std
call
mov
ljmp
pop
push
add
inc
mov
mov
inc
mov
and
pop
xor
dec
jl
hlt
push
inc
out
inc
fiadds
xchg
fsubrl
enter
scas
or
jmp
sbb
das
cmpsb
orl
scas
mov
jg
mov
int
add
cmp
and
ja
mov
ja
jb
push
jnp
jmp
xor
ror
gs
decl
adc
inc
xchg
xlat
mov
mov
jge
dec
jp
inc
out
cltd
sub
mov
fisubs
push
add
repnz
aam
inc
out
fwait
cmpsl
sti
pop
inc
outsb
fs
xor
mov
sahf
cmp
incl
dec
jge
jb
cmp
and
xchg
push
ss
jb
imul
std
in
loopne
incl
xor
xor
sahf
xor
push
cmpsb
out
jmp
xchg
sbb
enter
lock
pushl
shlb
jmp
add
loopne
cmpb
or
lods
lret
push
jmp
xor
fcompl
subb
sub
sub
ljmp
cmp
dec
mov
jle
decl
repnz
xchg
in
lret
icebp
xchg
call
imul
cwtl
inc
sub
mov
lea
scas
pushf
push
and
pushl
cld
cmp
roll
pop
mov
xor
gs
les
movsb
adc
nop
xchg
and
ret
ja
jl
dec
imul
inc
mov
out
and
popa
fs
ljmp
fldl
mov
dec
jo
xchg
call
and
cmp
xchg
or
mov
int3
dec
in
sbb
incl
imul
adc
cmp
add
bound
push
inc
adc
lcall
test
das
jp
inc
jbe
lods
cmpsl
es
dec
call
jns
xchg
jae
scas
cli
push
test
cmp
cmpsb
jle
adc
adc
bsf
lock
ds
lock
sbb
out
pushf
inc
mov
and
js
outsl
dec
cwtl
mov
xor
lods
sti
fcomps
sub
add
jle
insl
repnz
call
jnp
or
popf
test
cld
pop
pop
lock
ja
into
fs
fisubs
out
stos
xchg
mov
sar
adc
pushf
and
pop
andb
sub
cmp
scas
repnz
lock
xlat
ficomps
pop
and
fldenv
cmp
and
cmpsl
jb
pop
xor
mov
mov
cld
incl
mov
xchg
sub
dec
sti
out
lods
push
adcb
ljmp
mov
jb
call
xchg
fadds
mov
jmp
int3
inc
in
sub
int3
jge
mov
lret
pop
inc
xchg
mov
aam
xor
iret
inc
out
and
icebp
pop
jecxz
insb
mov
add
jg
xor
adc
ljmp
pop
out
ljmp
pushf
and
movsl
out
mov
loopne
lock
pop
inc
pop
sub
jmp
fcomip
js
in
dec
push
xchg
xchg
push
mov
sbb
lea
jo
dec
cli
add
push
jle
push
sub
inc
pop
jge
inc
or
sbb
repnz
xchg
xor
in
jp
inc
ljmp
push
outsl
aas
popa
cmpsl
scas
push
jbe
int
inc
push
out
push
mov
push
stc
pushf
testl
rcl
jge
add
pop
add
fistl
testl
and
inc
and
xchg
sbb
sbb
mov
call
stos
jl
sarb
xorl
add
out
clc
scas
aam
or
xchg
das
dec
cmpsb
testl
test
sahf
push
and
mov
mov
inc
inc
mov
jno
loop
addr16
mov
icebp
gs
push
aas
jmp
lcall
outsb
mov
roll
add
sti
es
aam
pusha
or
add
clc
movl
mov
imul
pop
enter
pop
jmp
lcall
adc
orl
mov
pushl
lcall
cwtl
insb
inc
pop
fsubl
into
ficoms
or
jmp
sbbl
mov
ret
mov
fiaddl
cmp
add
into
jp
sbbl
push
add
push
xchg
xor
loopne
ljmp
dec
cld
in
sbb
in
arpl
sub
pop
cmp
fucomp
clc
mov
stos
sub
daa
cld
outsl
adc
cld
mov
dec
fisubrl
ljmp
aaa
jbe
xchg
xchg
aad
lahf
mov
in
inc
out
test
daa
out
sbb
cld
decl
lock
es
or
inc
pop
aad
in
ljmp
lcall
jo
popl
xchg
test
push
xorl
and
adc
or
mov
dec
push
dec
aam
ja
outsl
in
scas
incl
and
jp,pn
jae
cli
xchg
outsb
mov
cmp
mov
push
mov
negl
lcall
jmp
les
repz
cmp
push
sarb
bnd
cwtl
in
mov
lcall
shrb
std
mov
cmp
dec
mov
pop
xchg
inc
inc
mov
fisttpl
jg
popf
aas
mov
aaa
fdivr
xchg
push
pop
sbb
lcall
leave
mov
mov
jg
shrl
lahf
xchg
adcl
fisttps
ds
hlt
adc
aas
mov
cmc
int3
mov
pushl
cmp
dec
scas
lcall
int
push
ljmp
mov
fistps
aam
jbe
push
insb
in
pop
mov
jno
out
loopne
ljmp
mov
mov
cmpb
push
sbb
aam
andb
adc
xchg
inc
jmp
outsl
arpl
repnz
and
mov
jg
pop
std
pop
cmp
push
ljmp
clc
push
inc
and
dec
das
ljmp
xorb
int
mov
mov
std
jmp
mov
xor
aam
or
scas
cmp
inc
movsl
inc
repnz
movsb
jnp
fcos
fisttps
mov
push
mov
aas
mov
mov
sub
push
movsb
push
cld
fwait
icebp
dec
insb
fcoml
iret
leave
fstpl
call
es
ret
dec
adc
mov
mov
enter
lret
je
into
or
xchg
call
push
sarb
loope
mov
scas
xor
pop
dec
test
imul
decl
jnp
adc
inc
cmp
movsl
je
jno
push
sbbl
dec
push
aaa
add
out
push
call
fwait
push
jecxz
addr16
mov
sub
out
xorl
in
and
nop
push
jge
cmpsl
inc
xor
push
xchg
inc
sahf
fcomi
lcall
fimull
ljmp
push
fistps
and
push
jmp
or
in
jecxz
int3
jl
jl
jmp
decl
rorb
mov
bound
dec
or
fadds
pushl
mov
pop
loopne
movsb
ja
movsl
push
dec
pop
sbb
arpl
movswl
insl
imul
sub
cmp
and
sub
cmp
lcall
cmp
push
mov
out
or
int
pushf
lods
add
mov
je
jle
jns
call
in
cmpsl
jmp
mov
xchg
mov
mov
mov
fs
fcomip
incl
addr16
fadds
cmp
cmp
jg
jne
jns
ljmp
inc
out
jmp
xor
outsl
jo
add
sbb
pop
hlt
mov
adc
inc
aaa
call
sub
loopne
push
push
xor
ret
pop
push
mov
stos
xchg
and
in
mov
mov
dec
rorl
clc
mov
pop
xor
adcb
ret
hlt
pop
testb
decl
jl
nop
xchg
inc
xchg
xchg
push
sar
repz
das
cmp
and
add
in
add
pop
add
cmp
dec
or
or
ret
lock
dec
ret
push
aas
insb
push
inc
or
push
and
mov
add
xor
and
ja
lret
addb
inc
out
imul
jae
bound
imul
mov
aaa
and
jne
jo
imul
mov
jp
ds
or
imul
push
add
push
inc
sub
inc
or
pop
mov
ret
add
imul
inc
xorb
subb
push
ret
mov
std
out
and
inc
imul
daa
sbb
pop
mov
push
dec
gs
sarl
andl
push
adcl
push
outsb
popa
jo
push
insl
sti
xchg
mov
push
testl
cld
push
or
dec
dec
jne
js
or
pop
inc
scas
ret
inc
call
popa
mov
lds
adc
xchg
inc
inc
jns
push
mov
mov
popa
jb
or
jecxz
push
es
ljmp
dec
rclb
or
add
andl
imul
dec
xchg
jo
or
add
push
int3
int3
insb
inc
jl
loopne
sub
dec
mov
xchg
roll
stos
sub
iret
dec
enter
or
mov
aas
jo
pop
push
outsb
flds
sub
out
pusha
pop
dec
inc
or
insb
mov
cli
arpl
mov
cmp
mov
jo
pusha
fisubs
mov
imul
cmp
jle
inc
insb
jne
addl
xchg
xchg
xor
add
filds
sbb
jo
inc
in
insl
add
push
fildl
and
pusha
pop
sub
mov
mov
push
jne
xorl
push
pop
jb
lock
adc
jns
mov
cmp
xchg
adc
lock
mov
xchg
push
push
push
inc
fldlg2
shl
jne
inc
jecxz
and
dec
cmp
or
fadds
popa
pop
or
inc
or
xor
packuswb
push
cmpsb
sbb
stos
aad
sub
inc
dec
sbb
addb
inc
outsl
leave
mov
xor
arpl
mov
insl
add
sahf
push
xchg
test
sbb
xor
mov
push
adcb
and
mov
test
pop
sti
jo
and
popw
push
rorb
jne
pop
cmp
inc
xchg
popa
push
ss
ljmp
jae
pushf
inc
or
xor
shrl
adc
or
out
or
pop
mov
or
add
test
fsubrs
bound
jno
xchg
lods
xor
sbb
je
ja
mov
cmp
stos
pop
cmp
test
ja
mov
sub
testl
jp
mov
push
loope
mov
fcoms
xor
dec
inc
xchg
sbb
or
cmp
fnclex
call
outsb
adc
or
test
mov
test
adc
outsl
js
pop
pusha
sbbb
gs
and
outsb
sbb
sbb
pop
pop
pop
xlat
lds
js
jns
inc
je
push
inc
inc
xorb
out
sti
xchg
pusha
pop
sub
pop
sbb
jg
mov
ret
jno
call
adc
pop
push
ja
or
adc
add
add
dec
ljmp
icebp
stos
loope
push
sahf
sarl
insl
cmp
adcb
xchg
mov
aaa
cmp
mov
test
or
sub
stc
pushf
push
jne
inc
push
adc
aad
add
or
dec
xor
jbe
dec
scas
mov
adc
add
push
or
inc
popa
pop
lds
andl
pushf
rcll
mov
inc
adc
sbb
inc
and
pusha
and
outsl
popa
loopne
loop
dec
fadds
daa
sub
sbb
pop
jbe
insl
test
loopne
rcl
cmp
dec
gs
imul
jne
stos
fmul
pusha
fs
or
arpl
lds
sub
mov
pusha
adc
adc
add
arpl
fnstsw
inc
push
mov
in
jmp
jl
sub
pop
imul
push
xchg
push
popa
sbb
ja
outsb
adc
sub
jmp
jno
adc
cmp
dec
cmpsl
popa
mov
push
fiadds
xchg
pop
cmp
xchg
dec
cli
pop
push
shlb
xor
clc
or
xor
jb
and
push
sub
loope
dec
inc
in
lods
jo
lcall
push
arpl
sbb
pop
inc
imul
pop
mov
push
sahf
fs
scas
insl
sti
mov
js
data16
inc
insb
jle
jno
aad
call
dec
mov
movsb
in
jl
shll
xor
aad
push
push
sbb
jns
test
jne
push
lds
inc
sbb
jo
jle
and
orb
sbb
mov
sbb
xchg
or
adc
jge
xchg
inc
dec
push
push
pop
js
pop
lret
xor
shlb
mov
enter
inc
push
sub
mov
pop
pop
xor
ja
pop
cmp
pop
xchg
fdivrs
je
insl
dec
outsb
dec
loope
andb
jnp
stc
xor
cli
ss
sar
pop
add
cmpsb
imul
add
mov
xchg
cmpsb
imul
sub
lods
imul
fidivl
in
inc
push
addb
pop
adc
into
cmpsl
mov
rcrl
inc
jb
push
add
mov
mov
push
pop
mov
dec
movsb
bound
pusha
xorb
add
inc
mov
inc
push
jb
inc
jae
lea
inc
rcrl
imul
insl
push
repz
jo
sbb
adc
test
insb
and
push
lock
xchg
jl
cs
icebp
psrlw
and
adc
mov
ret
sub
sbb
pop
pop
lea
loopne
mov
lret
inc
addw
cmpsl
push
mov
mov
push
and
ret
pop
dec
push
in
test
or
or
ret
xchg
or
pop
imul
or
sub
cltd
mov
and
iret
loopne
inc
sbb
pop
or
out
jb
lods
enter
fcoml
shll
ret
mov
push
ss
jl
add
mov
gs
dec
add
push
mov
mov
out
andl
push
adc
and
adc
xchg
push
loope
inc
aaa
dec
sub
cwtl
dec
sub
pop
or
adc
loope
push
outsb
push
add
cltd
lret
and
shll
adc
push
mov
insb
das
adc
mov
ja
and
imulb
or
test
mov
and
xchg
adc
inc
lds
and
ret
and
inc
push
or
in
or
or
rcr
notl
push
push
mov
movsl
push
xor
lds
out
mov
test
icebp
add
jno
icebp
sub
push
add
roll
add
push
xor
fs
int3
add
gs
in
lods
pop
inc
iret
lret
add
jns
sbb
js
or
adc
push
fs
mov
outsl
and
popa
adc
push
sub
push
sub
push
je
aad
lahf
test
aam
out
mov
cld
add
jns
jbe
cmovno
stos
test
dec
in
addr16
or
loopne
sbb
push
push
inc
out
adc
add
das
cmpsl
and
sub
or
mov
xchg
dec
push
ret
dec
dec
jae
xor
sbb
ror
or
pushf
data16
xchg
add
jmp
and
negl
and
and
sbb
js
mov
popf
and
sub
std
inc
mov
add
inc
outsb
jecxz
or
in
dec
les
int3
cs
int
dec
add
adc
or
sub
xchg
lret
add
jbe
jb
cmp
fwait
insl
push
adcb
mov
aaa
xchg
or
rorl
push
add
xchg
movsb
bound
lods
xor
pop
add
cwtl
cs
jmp
add
ljmp
and
jb,pn
aaa
shr
popa
adc
push
rclb
call
cs
adc
push
out
add
in
repz
fdivl
push
xlat
pusha
dec
xchg
sbb
lahf
or
push
push
add
push
out
roll
add
dec
xchg
and
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xor
inc
add
insb
inc
add
add
