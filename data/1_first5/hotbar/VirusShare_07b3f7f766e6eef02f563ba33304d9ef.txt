divb
in
mov
mov
add
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
out
divl
jne
mov
or
call
xchg
push
pop
aas
in
adc
and
movl
dec
in
mov
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
pop
pop
mov
das
js
and
call
push
push
rcll
mov
mov
jp,pt
add
fistps
pop
push
push
push
push
xor
mov
push
mov
scas
and
mov
add
jmp
test
jne
pushf
or
push
jle
repz
adc
push
xchg
mov
add
iret
xchg
push
sbb
out
mov
jne
inc
sub
ret
mov
jmp
pushl
ja
cmp
jecxz
ret
lea
or
lock
dec
test
jg
add
pop
xor
sub
push
add
outsb
xchg
scas
adc
jg
filds
mov
add
inc
jne
sub
sar
inc
je
insb
jo
or
ret
push
repz
adc
insl
fists
mov
xor
jnp
xor
clc
mov
mov
mov
call
pushl
mov
cwtl
adcb
sarl
cltd
data16
cmp
jle
mov
andl
sbb
adc
xlat
cwtl
hlt
cs
ja
sbb
adc
xchg
mov
cmpl
add
pop
shr
or
ja
jl
adc
or
or
dec
out
imul
in
sbb
push
push
mov
or
int
push
call
sub
add
xlat
or
pop
arpl
call
ret
add
in
sbb
into
lahf
mov
adc
add
inc
push
sub
or
mov
mov
jbe
ret
ja
enter
or
xchg
adc
xchg
mov
adc
push
pop
lcall
popa
and
add
inc
dec
push
mov
dec
sub
ljmp
sbb
push
sub
add
scas
outsb
push
mov
aas
fadd
jae
push
stos
scas
sti
push
pop
pop
push
jno
pop
scas
dec
imul
add
pop
or
push
push
sbb
push
or
sub
add
mov
pop
cmp
push
mov
pop
aad
jp
aaa
ja
inc
pop
bound
adc
inc
lock
push
mov
cmp
or
rolb
or
sbb
push
clc
jge
insl
cmp
dec
pop
ljmp
push
hlt
mov
xor
mov
pop
ret
push
inc
shrl
pop
jae
cmp
int
inc
sub
inc
clc
ds
subb
or
xchg
daa
pop
push
jo
ss
push
sbb
xchg
or
orl
pop
adc
inc
test
adc
cmp
jg
mov
adc
adc
ret
shll
xorl
sub
fcompl
jmp
xchg
sbb
add
aas
mov
sub
push
mov
sar
push
pushl
cmp
ja
adc
sbb
add
push
mov
sti
add
adc
scas
and
xchg
jo
push
add
or
ret
icebp
cld
clc
sub
cmp
jle
mov
cmpl
or
push
add
loope
jmp
push
cmp
jge
xor
mov
add
pop
cltd
jge
enter
jmp
out
iret
mov
aam
cmp
mov
push
fidivrs
add
push
jne
jb
cmc
sbb
incb
add
xor
jbe
mov
call
jb
add
inc
addb
cmp
or
add
push
push
lea
fwait
mov
or
pop
sti
ficoml
xor
insl
int3
pop
hlt
into
mov
aam
add
cmp
fdivrs
cmpsl
mov
pop
adc
cld
fsubrs
mov
sbb
mov
ret
dec
lods
or
test
jle
cmp
mov
inc
jbe
push
inc
mov
add
pop
ja
sbb
push
mov
test
call
es
jns
sti
pop
fmull
fucomp
loope
mov
inc
jo
in
subl
popf
lock
jp
in
sahf
rorb
fadds
ret
and
adcb
prefetcht2
jbe
pop
and
and
cmp
and
cmp
scas
cmp
push
sar
push
push
adc
sub
in
cmp
jle
mov
out
mov
pushf
cmpl
je
push
cmp
cmp
jae
push
mov
push
cmp
inc
xchg
adc
shlb
pop
lret
add
sub
push
add
jb,pt
pop
add
xchg
pop
sub
fcoms
jnp
ljmp
je
cmp
aaa
cmp
fcoml
push
clc
icebp
negb
fidivs
jmp
xchg
call
add
sub
insb
or
cmpsb
imul
push
popa
cld
pop
xchg
out
cmp
jo
inc
sub
cltd
loop
dec
out
ret
aad
aaa
or
add
pop
pop
or
pop
lods
cli
push
xor
cmp
sub
lea
cmp
jne
push
mov
mov
push
push
add
adc
pusha
push
mov
mov
mov
mov
or
lcall
pop
dec
lret
sub
inc
mov
sarl
sahf
mov
fwait
mov
xor
loope
mov
movl
ja
dec
into
dec
testb
and
repnz
in
xchg
push
lret
add
sbb
ja
adc
mov
nop
xchg
add
mov
mov
lret
pusha
mov
mov
or
lret
xchg
lret
divl
mov
pushf
movsb
add
les
popa
xchg
push
xchg
sbb
jo
mov
push
aas
pop
dec
push
pop
pusha
sbb
repz
add
addl
or
out
lret
lea
pop
push
xor
scas
mov
xchg
pop
out
imul
pop
imul
add
mov
clc
add
push
dec
lret
xchg
js
lock
cmp
popf
lea
push
add
inc
imull
sub
outsb
xor
xchg
cld
mov
jbe
jbe
pusha
sub
nop
mov
leave
jle
jl
push
loopne
scas
push
jecxz
push
call
cltd
or
out
pusha
cmp
push
push
mov
test
inc
cmp
ret
js
sub
cwtl
dec
or
jne
add
shlb
addr16
mov
jno
mov
adc
xchg
fsubs
jo
stos
add
scas
inc
arpl
mov
and
jnp
stc
pusha
out
fdivrs
and
cmp
ret
mov
jecxz
mov
sbb
call
arpl
cs
outsl
mov
xchg
jne
add
or
inc
lea
or
cmpsl
fstps
sub
push
or
roll
or
inc
mov
mov
push
adc
or
sub
jle
inc
mov
xchg
dec
or
lock
cltd
lock
out
fbld
inc
ret
mov
cmpsl
pusha
aaa
ret
insl
adc
xchg
repnz
filds
ret
lea
loopne
push
pop
adc
xor
mov
push
add
test
sub
mov
sbb
mov
push
lock
inc
xor
and
mov
fistpll
js
or
ret
je
dec
je
push
adc
testl
adc
inc
xlat
inc
pop
loop
movsb
call
add
adc
pop
popa
sub
dec
jo
and
pop
add
jle
in
in
push
dec
mov
lahf
inc
jg
push
sub
push
cli
xor
xor
pusha
mov
add
and
sti
das
sti
popa
jl
stc
andl
sbb
sahf
lret
adc
mov
add
rcrb
pop
pop
jbe
lret
pop
fs
mov
rolb
add
xchg
call
stos
outsl
xchg
add
mov
clc
testl
sbb
or
dec
or
sub
or
fcmovu
js
and
adc
pop
add
fdiv
test
in
dec
fcoml
or
pushl
aas
dec
mov
fcomps
sar
inc
pop
xlat
ret
pop
mov
add
or
cmpb
jne
sbb
mov
or
jle
call
sbbb
mov
je
pop
push
clc
sbb
inc
pop
das
adcl
shl
dec
sub
xchg
scas
mov
cmp
jecxz
or
roll
push
sbb
adc
dec
cmpl
aaa
pop
sbb
dec
add
jp
dec
cmp
push
js
jl
ret
adc
jb
pop
adc
test
mov
mov
mov
cld
cmp
jns
jne
dec
jns
mov
push
pop
xchg
xor
inc
xchg
movsb
xchg
lret
sub
and
andl
nop
into
or
mov
je
mov
push
icebp
into
scas
mov
and
push
xor
or
jp
and
das
pop
pop
pushf
sub
inc
inc
mov
mov
inc
and
loop
pusha
jmp
in
adc
leave
inc
jae
adc
daa
pop
repnz
sub
je
inc
je
cmp
cltd
sbb
xor
lahf
nop
icebp
std
mov
push
or
mov
xor
add
les
mov
sub
and
push
push
push
fcmovbe
pop
ljmp
lret
shrl
sbb
sbb
dec
incl
jl
cmp
mov
in
dec
xor
mov
in
insb
sarb
mov
clc
stc
shrb
or
pop
jbe
jne
dec
adc
adc
sbb
lods
cmc
test
push
loop
pop
add
sahf
push
xchg
jo
test
int
test
dec
add
push
mov
mov
mov
scas
dec
sti
fisubs
pop
mov
in
and
loope
pop
mov
inc
mov
fiaddl
call
push
mov
pushf
mov
adc
out
mov
lahf
lock
stos
loopne
inc
loop
push
shll
in
sub
cmp
mov
mov
sbb
mov
push
cld
das
cmp
cmp
mov
add
and
movl
jp
lock
fisubl
out
movsb
xor
test
aam
inc
aaa
mov
in
or
jo
popa
cmpl
lea
mov
call
faddl
pop
shlb
in
push
ljmp
mov
jmp
xor
push
pop
js
imul
je
in
sub
divps
and
or
je
mov
or
dec
and
les
je
jecxz
std
dec
sarl
sbb
mov
les
ret
push
sbb
neg
sbb
movsb
jmp
jae
ret
je
arpl
lods
xchg
xor
or
inc
lcall
push
fs
sahf
or
imul
mov
push
dec
cmpsb
in
mov
dec
xor
jns
clc
push
nop
nop
test
push
xor
ud2
je
adc
xchg
or
lods
add
push
mov
into
cmp
dec
outsl
pushf
fs
lea
jecxz
jns
mov
adc
jmp
int3
sub
lock
xor
aas
push
je
sub
sbb
loope
jo
fcoml
dec
out
fwait
mov
repz
je
shlb
scas
and
stc
mov
adc
pop
jae
stos
dec
movsl
test
xchg
inc
lcall
pop
cmp
xchg
fcoms
ret
sbb
movsb
cmp
nop
and
out
mov
int3
sbb
sbb
arpl
int3
xchg
pop
enter
and
enter
and
cmp
out
shl
sbb
xchg
mov
xchg
mov
mov
mov
add
mov
jle
pusha
sbb
and
sbb
jmp
ja
sub
jo
fdivl
scas
das
mov
ret
push
sbb
loopne
cmp
inc
xor
add
adc
mov
loopne
fdivr
adc
jmp
ficoml
xchg
mov
call
add
or
outsb
push
xchg
and
sbb
sub
lods
pop
inc
push
inc
adc
jns
es
ds
es
lret
inc
ds
cmp
out
fistpl
loopne
push
and
sarb
loope
and
and
shl
sbb
adc
mov
lea
xchg
dec
dec
inc
mov
inc
mov
xchg
push
mov
test
xchg
aas
insl
inc
mov
xchg
jns
sbb
pop
ret
and
outsb
pop
jmp
iret
mov
mov
loop
add
pusha
into
push
adc
mov
inc
mov
add
je
or
xchg
cmp
js
add
xor
pop
fs
fldenv
pop
jne
mov
fcmovne
push
xor
push
jmp
fdivs
and
adc
or
dec
push
mov
shll
or
add
outsb
inc
or
adc
xor
push
sbb
das
cld
clc
mov
fstpl
insl
sub
mov
mov
mov
push
scas
daa
pop
jbe
and
jl
mov
or
or
xchg
sbb
and
btc
xchg
pop
in
lret
adcl
pop
call
aaa
adc
clc
adc
sbb
adc
lret
test
loop
movsl
jno
ljmp
sbb
jne
cmp
into
adc
cmc
aaa
jecxz
adc
xor
cmp
sub
mov
adc
push
adc
imul
add
sub
sbb
insb
push
cld
pop
loop
inc
mov
neg
pop
dec
jne
pusha
xor
pop
jnp
daa
pop
sbb
inc
sbb
sbbb
push
or
add
xchg
sbb
popf
mov
sbb
add
sbb
jge
je
mov
mov
les
mov
andb
pop
nopl
mov
pop
stc
or
pop
fs
xchg
ret
testl
mov
push
cmp
je
or
je
xor
push
push
xor
shlb
jecxz
push
jmp
jg
data16
pop
cmp
in
or
repnz
adc
and
test
inc
cmpsb
jecxz
xchg
add
daa
add
or
or
add
bnd
fs
rcll
out
mov
cmp
or
jmp
es
jns
test
aaa
push
cmp
add
push
pop
in
cltd
sbb
test
stos
cmp
mov
iret
cwtl
pusha
cmp
movsl
lock
sub
int3
xor
xchg
and
adc
adc
pop
lret
add
es
jmp
add
sahf
lock
shrb
mov
mov
inc
shl
pop
shlb
sar
mov
and
test
out
push
and
and
push
sahf
rclb
pop
and
or
jo
loopne
lock
cmpsl
and
xchg
cmpsb
std
daa
cmp
rcr
add
mov
je
aas
decb
push
pop
pop
mov
dec
sbbb
orl
sub
cltd
test
test
fidivrs
adcl
fldcw
pop
push
in
inc
push
ljmp
sub
push
adc
test
add
in
inc
lret
ret
test
fldenv
aad
or
mov
push
stos
add
adc
data16
inc
pop
out
pop
xorl
notl
iret
fdivs
mov
adc
test
push
lret
mov
lods
mov
loope
hlt
and
push
loope
fsubs
jne
adc
push
shlb
rcrb
out
and
mov
adc
sarb
mov
lret
xchg
sbb
movsb
sub
mov
cmpsl
xchg
fs
push
add
call
jl
mov
and
inc
out
push
push
sbb
add
xchg
push
pop
fdivrs
cmpsl
test
test
call
push
enter
rcr
popf
clc
cmp
cmc
mov
mov
test
das
sub
ret
shlb
sub
sbb
mov
stc
cmpb
dec
negl
pusha
or
xor
cmp
xchg
cmp
out
jne
jge
pushl
jnp
xchg
inc
fdiv
testb
or
gs
fcmovb
cmpl
movsb
inc
xor
sub
jno
loopne
cmp
and
and
mov
and
xor
stc
dec
dec
xchg
and
xor
push
adc
addl
cld
ret
sbb
inc
stc
add
and
and
inc
mov
sub
add
and
test
sub
data16
and
mov
xchg
hlt
adc
jne
imul
inc
inc
fdivs
ds
xor
mov
pop
dec
rclb
dec
daa
pop
mov
sbb
mov
mov
sbb
cwtl
mov
loopne
out
test
and
pop
imul
mov
je
test
inc
sub
sti
pushf
mov
pop
out
cwtl
js
jge
jge
adc
je
push
adc
loopne
push
push
push
dec
adc
pop
push
xor
in
mov
or
jne
push
addr16
sub
xor
cmp
jne
cmpsl
mov
mov
jmp
cmp
pop
sbb
xor
enter
pusha
cmp
add
push
inc
sbb
mov
jmp
mov
repz
dec
mov
mov
add
sbb
stos
adc
and
and
test
fwait
dec
loop
out
add
ljmp
fadds
pop
push
xchg
in
iret
adc
and
popf
sbb
movsl
mov
in
dec
pushf
jl
loopne,pn
mov
lock
mov
daa
xsha1
cmpsb
iret
cmp
arpl
mov
or
into
or
les
mov
jno
add
loopne
dec
in
or
adc
mov
or
inc
out
pushf
push
push
or
in
cld
jge
sub
shll
jle
fstpt
nop
cmp
jne
or
je
sub
cs
adc
mov
sti
int3
mov
mov
sub
add
push
es
inc
movb
sub
test
pop
jbe
mov
movl
cmpb
push
jne
or
xchg
and
inc
sti
cld
add
push
in
add
mov
adc
sub
call
lahf
je
xchg
sti
je
or
pop
cld
sub
loop
out
inc
out
add
inc
loopne
addl
or
inc
or
mov
mov
or
js
lock
adc
iret
shrb
xchg
fldcw
pop
and
push
sub
xor
jo
sub
dec
pop
push
mov
mov
or
les
or
das
push
inc
int3
add
mov
mov
fcomp
mov
push
mov
loopne
insl
sub
mov
test
add
lock
out
mov
ss
jmp
jge
imul
push
jmp
pop
jae
mov
int3
jmp
push
xchg
mov
in
add
adc
jg
dec
scas
mov
bound
fsub
pop
push
orb
jo
cmp
xchg
sub
das
lock
push
mov
mov
or
push
mov
xor
inc
mov
inc
pop
lock
jle
mov
fwait
mov
push
cld
mov
stos
mov
jl
loop
ret
jle
sarl
ljmp
pop
sbb
pop
add
jl
aas
test
jp
push
fsubl
cmp
je
or
mov
mov
push
mov
clc
pop
js
stos
enter
int3
mov
fwait
push
add
clc
add
mov
pop
movsl
dec
dec
lcall
jmp
imul
jo
sbb
sti
or
in
pop
lea
ds
adcb
pop
jle
into
xchg
loope
sub
shrb
or
sbb
adc
fdivp
push
xor
in
inc
fldenv
xlat
in
rcll
cltd
cmpsb
sahf
imul
push
rcl
push
xchg
dec
xchg
or
insl
pop
rorl
mov
je
cmp
add
ret
aaa
dec
test
push
add
int3
add
xchg
xchg
jge
mov
or
inc
cmp
repnz
cmpsl
in
shlb
add
movsb
ljmp
inc
test
or
or
adc
xlat
nop
dec
pop
and
fdivl
jo
gs
scas
inc
jns
rolb
test
pushl
lds
loop
lods
pop
cld
loopne
subb
icebp
sbb
inc
pop
dec
fcomps
cwtl
or
loope
adc
enter
leave
sbb
cmovl
or
push
or
mov
sbb
fbstp
xor
ret
xor
ret
mov
mov
jp
mov
fcompl
clc
push
mov
inc
in
and
sbb
imul
pusha
sbb
lods
inc
mov
sbb
dec
cmp
dec
pusha
movmskps
pop
xor
mov
sbb
push
call
and
and
pop
orl
mov
cmpb
push
fs
iret
or
add
or
repnz
in
call
push
inc
into
or
jge
out
mov
xchg
stc
orb
subb
out
mov
xchg
mov
test
xor
or
je
xchg
pop
sarl
or
adc
enter
into
xchg
mov
js
sub
adc
sti
mov
pushf
jle
sbb
adc
cmp
add
xor
mov
mov
cmovns
mov
int3
inc
and
lret
out
rclb
sbb
inc
fcoms
lock
loopne
in
mov
aam
xchg
xor
inc
mov
pushl
dec
js
mov
test
cmp
jecxz
dec
testl
or
ret
push
push
inc
aam
leave
bound
movsb
mov
das
mov
arpl
jle
mov
or
arpl
sti
add
mov
pop
data16
loopne
add
push
gs
pop
fsubrs
insl
sbb
sub
push
xor
adc
pop
or
mov
push
mov
and
out
inc
mov
jle
or
lods
inc
push
push
aaa
sarl
push
cmp
jg
mov
mov
jmp
rcr
push
mov
outsb
pop
jns
bound
sbb
enter
pop
pop
and
scas
push
insl
insb
or
or
adc
sbb
xor
cmp
outsb
sub
in
sub
dec
subl
sbb
mov
sbb
pop
xor
cwtl
dec
jg
ret
push
pop
jmp
mov
push
add
xchg
and
rcll
or
hlt
test
adc
add
notb
sub
mov
and
cmp
decl
mov
lea
cmp
jae
mov
incl
aad
in
xchg
xor
inc
add
cmp
mov
mov
int3
call
inc
add
loop
jge
jle
adc
add
xor
inc
cld
imul
add
je
ss
add
push
cmp
jg
and
push
inc
push
and
mov
js
lea
cmp
in
out
out
divb
add
mov
sub
jp
fwait
popa
xor
int3
add
lea
movsb
adc
push
push
jb
sti
add
or
push
push
adc
mov
loop
sub
xchg
add
hlt
inc
add
mov
xchg
or
sub
inc
pusha
sbbl
mov
dec
popl
cmpsl
cmp
jbe
xorb
movsl
shll
and
mov
clc
or
fdivs
and
dec
hlt
jg
in
shrl
lock
push
dec
pop
add
jno
add
mov
or
xor
add
inc
xor
scas
or
int3
scas
sar
mov
xor
jecxz
mov
ds
push
pop
xor
jns
neg
adc
hlt
jl
repz
push
cmp
push
push
fadds
test
jne
lock
ret
sbb
cwtl
test
xor
or
mov
mov
mov
sub
push
xchg
dec
xchg
mov
xchg
mov
mov
lea
fucom
lea
jbe
mov
int3
scas
test
ss
shrl
scas
mov
add
cli
rep
aam
push
push
pop
inc
xor
xor
pop
jmp
enter
and
or
enter
scas
stos
xor
pop
and
push
mov
loopne
jo
or
cmpsl
xor
pop
jae
dec
mov
shll
test
mov
insb
add
cli
inc
push
mov
cmpsb
and
fwait
mov
ljmp
in
and
jae
jb
mov
or
add
xchg
sub
push
in
cs
outsl
clc
scas
fadds
cmp
jne
cmp
je
jbe
movb
ja
cmp
or
and
sbb
add
insb
cmc
mov
xor
mov
andb
push
out
roll
push
mov
or
push
in
rolb
je
inc
sbb
pop
mov
mov
and
loop
lcall
jne
movsl
xchg
insb
jp
or
pop
insl
ljmp
cmp
js
jbe
sbb
jg
lcall
hlt
subb
pop
add
js
iret
std
mov
or
hlt
aam
insl
sub
push
cmp
adc
pushl
mov
inc
roll
jp
jle
leave
orl
loop
cmp
jmp
frstor
lea
add
fs
lock
and
adc
loopne
test
imul
jns
sar
pop
and
adc
clc
add
push
shlb
aam
push
add
sbb
enter
add
fidivrs
and
adc
dec
push
in
jo
rclb
push
popf
add
loop
xor
js
xor
leave
add
fildl
ficoms
pop
inc
dec
sbb
dec
xchg
test
push
mov
add
sub
inc
notl
shlb
sub
addl
add
pop
hlt
sub
sar
fbstp
or
sbb
je
jle
mov
pop
pop
mov
insb
sub
mov
ret
insb
cld
lods
test
cmp
lea
jbe
mov
push
jp
test
test
push
test
or
push
or
in
mov
pop
add
mov
sbb
cli
sbb
inc
jae
add
insl
popf
or
dec
add
pop
inc
mov
mov
or
add
addl
ss
es
inc
loopne
add
adc
or
mov
adc
and
cmp
inc
add
adc
loopne
scas
cmpsb
cmp
lea
shl
mov
xor
mov
scas
mov
rcll
push
cmp
shr
sbbb
das
push
push
outsl
js
push
and
or
sbb
inc
cmp
jl
and
or
out
add
sub
incl
ret
out
xchg
mov
push
lock
pop
fildl
popf
or
pop
add
imul
push
adc
xchg
xchg
inc
leave
inc
xor
pop
adc
int
or
cmp
jmp
adcl
add
sahf
xor
pushf
mov
dec
leave
inc
jo
fnstcw
xchg
xor
or
pop
and
adc
inc
and
add
adc
inc
push
jo
in
pop
push
jo
fdivrp
add
call
push
sbb
push
fadds
cmp
js
add
shll
add
mov
inc
mov
jmp
add
enter
push
and
inc
fsubr
push
and
inc
inc
and
dec
ds
adc
mov
sbb
mov
jno
movsl
rolb
aam
and
pop
leave
push
xorl
insb
cmp
repz
mov
add
adc
adc
sbb
or
fwait
hlt
cmp
movsb
xor
mov
mov
and
lcall
mov
scas
adc
fsts
adc
mov
test
mov
push
clc
loope
sub
xchg
mov
dec
xlat
icebp
inc
lods
xor
lock
dec
loopne
test
popf
or
dec
inc
inc
leave
scas
adcb
jmp
das
xchg
clc
cmp
sub
sbb
dec
mov
add
adc
rorb
inc
sbb
or
and
jb
mov
push
adc
mulb
pop
or
sbb
mov
loopne
xchg
mov
iret
inc
inc
or
xchg
and
push
lods
push
dec
loopne
jns
ret
pop
xchg
sti
cs
adc
addr16
push
mov
leave
gs
imul
or
push
and
push
inc
and
pop
inc
sbb
enter
cmp
and
insl
add
js
push
sub
mov
cmpl
shrl
push
test
lea
add
xchg
ja
fiaddl
adc
and
mov
adc
cmp
popf
cmpl
push
cmp
in
mov
xor
int3
dec
in
shrl
pop
negl
ret
push
mov
add
cmp
add
shrb
or
jbe
sbb
inc
js
aaa
jb
mov
xchg
dec
sub
sub
pop
push
push
adc
pusha
mov
cmp
cmp
bound
sti
or
sub
dec
je
mov
je
sub
sbb
fsts
test
ss
sub
sub
jmp
mov
mov
aaa
push
push
fiadds
sahf
leave
jmp
jmp
pop
add
pop
jne
iret
popa
xchg
mov
jmp
push
add
push
mov
xor
push
jmp
and
dec
inc
loopne
fnstsw
fcomps
xchg
or
pop
push
mov
jg
pushf
call
cltd
mov
mov
in
fdivs
and
push
fistps
popa
or
xor
push
push
daa
pop
jmp
and
pop
into
lea
and
and
sti
arpl
sbb
into
jmp
sti
imul
cmp
je
cmp
pop
inc
jmp
inc
dec
shrl
dec
sbb
leave
adc
cli
imul
jle
mov
sbb
fstpl
imul
jmp
sbb
and
sti
in
fsubrp
sbb
je
pop
push
jmp
xchg
inc
test
scas
and
cmp
fldt
push
jbe
in
es
cmp
repz
imul
inc
dec
decl
or
stc
aad
add
pushw
and
icebp
inc
sbb
inc
sbb
or
pusha
lea
jecxz
pop
mov
add
sub
or
popa
mov
fmuls
xchg
add
fsubp
cmp
sbb
cmp
add
std
mov
mov
pop
repnz
push
pop
push
lea
push
sbb
call
shll
lea
or
lret
dec
cmp
nop
mov
dec
mov
xor
pop
imul
push
jle
add
ja
int3
or
outsb
fcoms
movl
xor
pop
pusha
lret
adcl
imul
push
sbb
push
je
xchg
mov
push
or
pop
push
push
add
jl
inc
xor
add
popf
push
js
stc
xchg
test
sub
cwtl
insb
add
fadds
dec
adc
dec
adc
mov
dec
adc
in
rcrl
add
int3
jno
das
and
ss
ret
and
pop
adcb
test
inc
cltd
call
inc
inc
insb
mov
pop
lock
xchg
fidivl
aas
out
cwtl
or
add
adc
insb
inc
dec
or
jl
pop
jae
dec
lcall
push
mov
dec
xor
shrd
push
in
push
dec
pop
in
inc
pop
ret
lret
in
inc
xchg
inc
or
inc
call
sub
xchg
ret
add
cmp
je
cmp
sub
loopne
push
xor
aad
cmp
push
add
push
cmp
xor
cmp
jl
cmp
fstps
add
imul
inc
adc
inc
jl
sbb
add
jecxz
push
mov
jg
cmp
pop
dec
lret
repz
rclb
add
pop
xchg
pop
mov
jl
inc
push
aam
das
in
nop
inc
jo
pop
inc
sbb
icebp
jmp
roll
pop
cmpsb
xor
aam
xchg
clc
and
fildl
cmp
aam
or
mov
sbb
sti
sub
push
popf
rcr
xchg
pop
fdivr
ret
fsubs
dec
dec
push
mov
dec
rorl
xor
mov
cmp
jne
popa
cmp
push
in
pop
add
mov
xor
adc
divb
iret
je
lea
push
loopne
add
mov
es
jo
cs
das
mov
sbb
cmp
pushl
call
push
or
fistps
loope
mov
mov
shll
les
shrb
les
scas
imul
scas
idiv
lock
div
push
dec
je
dec
dec
icebp
lahf
les
lahf
in
jge
fisubs
sub
sub
in
mov
dec
lock
jmp
sub
int
sbb
in
cmp
push
mov
add
imul
inc
dec
cmp
mov
aam
aam
push
lds
sar
fdiv
lea
in
lea
rep
out
in
mov
movsl
mov
or
mov
rcrl
inc
frstor
shrl
sbb
dec
neg
sbb
insb
and
dec
mov
pop
mov
mov
push
push
in
sbb
lcall
cmp
or
push
test
mov
adc
mov
sub
push
rorb
leave
and
push
mov
in
sahf
sub
sbb
mov
adc
pushf
mov
test
cltd
or
mov
adc
add
inc
and
jno
dec
jg
icebp
push
adc
punpckhdq
inc
call
xchg
cli
fdivr
aaa
and
pop
push
pop
test
inc
push
adc
pop
add
jae
mov
lock
ret
add
idivl
outsl
cli
lods
or
fs
cmpl
jne
pushl
addl
jnp
inc
sbb
push
cs
cmpsb
adc
xorl
popa
outsl
fcoml
in
jmp
sbb
sbb
fmuls
push
or
orl
add
mov
ret
aas
movsl
or
cmp
pop
cmp
je
cmp
scas
add
ja
icebp
sbb
xchg
ret
push
lcall
je
or
mov
add
shll
sub
shll
mov
dec
inc
inc
shll
xor
adc
push
jne
movb
fs
fucomip
jmp
cmp
jne
xchg
movsl
fnstcw
test
jecxz
xor
pop
mov
cmp
push
mov
ret
dec
aas
mov
jecxz
mov
mov
mov
ljmp
sub
xor
and
jge
and
test
xor
std
or
popf
sub
mov
sbb
mov
insl
nop
or
push
sbb
push
es
adc
mov
jns
mov
xor
test
in
lods
nop
pop
cmp
iret
push
adc
add
rorl
pop
push
mov
push
push
add
push
test
scas
iret
push
rorb
or
xchg
movsl
mov
std
int3
ja
inc
rclb
popa
cmpsb
and
movsl
mov
add
push
push
xor
adc
jp,pt
push
or
out
mov
or
or
adc
enter
push
lret
out
ja
jl
xchg
andb
mov
sbb
test
xchg
outsb
dec
jg
push
rcrb
das
cmpb
pop
lcall
aaa
pop
inc
ficomps
xorb
mov
imul
mov
fsubrl
xchg
adc
dec
nop
pop
inc
mov
sbb
xchg
adc
push
push
aaa
movsl
loopne
jae
mov
dec
push
jo
mov
lea
add
jns
adc
add
push
add
jno
fs
inc
negl
popa
mov
dec
ja,pt
rol
cwtl
lea
sbb
addr16
push
lds
and
sub
dec
adc
fsubrs
pop
fmuls
call
addr16
dec
or
enter
xor
mov
adc
or
adc
lea
xchg
das
push
jle
add
loopne
aaa
push
pop
aam
inc
cld
cmp
push
push
mov
push
inc
fdivs
cs
sub
push
sahf
std
aad
push
mov
adc
sbb
stos
mull
push
insb
repz
mov
jmp
fisubrs
add
stos
add
push
cli
or
push
lods
add
mov
shll
insb
push
lret
sahf
shlb
push
call
jmp
lret
push
sbb
pop
cmp
rclb
adcl
sbb
loopne
ret
or
out
push
jno
arpl
test
adc
sbb
and
sarb
andb
mov
divb
test
cltd
mov
lea
jge
cld
negb
rol
or
and
into
sbb
out
pop
mov
mov
fcomip
cmp
jge
adc
idiv
push
mov
push
push
mov
outsb
lea
ds
xor
idiv
sub
in
cli
mov
or
test
jg
adc
ss
push
push
sbb
movsl
sbbl
mov
pusha
scas
mov
pop
push
jbe
mov
jge
add
movsl
inc
push
adc
jecxz
popl
cld
in
or
out
dec
fstpl
push
pop
decl
aam
sti
sub
rcrb
loopne
je
cmp
lea
cltd
idivl
inc
push
into
jp
xor
popa
xor
in
and
js
idivl
popa
jg
fs
lret
jl
movl
adc
test
push
in
adc
mov
cld
ficoms
xchg
in
sbb
stos
mov
inc
incl
jl
out
xor
pop
xchg
sub
cmp
or
jne
imul
insb
mov
std
out
ja
hlt
fildl
mov
test
jns
faddl
inc
sbb
or
mov
fdivrp
mov
mov
mov
mov
mov
add
pop
add
les
imul
add
push
shlb
or
clc
fidivl
jmp
sub
xchg
cli
mov
movl
mov
pop
jne
pop
pop
movb
push
or
jle
sub
mov
test
stos
in
mov
add
mov
add
lret
mov
cmp
inc
lea
sbb
pop
das
cmpsl
je
pop
jne
push
ja
fstl
mov
mov
imul
pop
sub
cmp
dec
or
shrb
dec
fcoml
pop
pop
pop
xchg
xchg
pop
into
pop
leave
neg
pop
dec
int
call
jnp
mov
xor
imul
and
cltd
add
shr
push
shll
repnz
xor
mov
mov
adc
xor
sbb
dec
jns
mov
pop
jne
xor
mov
aam
sbb
inc
jne
sti
mov
adc
movsb
jl
adc
xchg
punpckhdq
leave
pusha
pop
leave
push
xor
xor
jnp
add
ret
std
sub
xchg
lea
push
mov
push
ret
inc
mov
dec
add
and
lea
or
fwait
test
or
pop
movsb
mov
lea
push
push
orb
ret
inc
adc
js
or
inc
sub
rcr
aad
mov
sub
roll
roll
push
jle
jae
add
dec
pop
pop
insl
inc
sub
or
sbb
xchg
pop
bound
in
fs
sbb
xchg
aam
mov
lret
push
lods
subb
lods
jmp
pop
add
stc
push
int3
out
pop
pop
ds
cld
jno
clc
and
inc
ret
mov
and
pop
xchg
int
or
in
and
xchg
sub
mov
jb
aaa
and
mov
pop
mov
and
loopne
les
sbb
push
inc
clc
push
mov
data16
inc
incb
adc
push
add
push
add
sub
sub
clc
setb
test
in
adc
sub
cmp
xchg
je
xor
pop
jl
outsl
dec
adc
data16
push
lea
push
mov
addb
jle
je
push
loope
scas
and
pop
pop
lcall
insl
xchg
addb
add
inc
dec
push
jo
dec
dec
mov
data16
mov
hlt
data16
mov
and
lret
out
or
add
shrl
in
mov
inc
or
das
push
scas
pop
js
mov
loop
mov
and
xchg
imul
incb
mov
inc
test
pop
lock
sub
pop
jmp
jo,pt
jg
push
add
sahf
or
sbb
out
fwait
sub
jg
negl
pusha
sbb
add
and
adc
xor
mov
push
int
or
jmp
test
cltd
cwtl
adc
sub
jmp
out
aam
fcoml
pop
loopne
mov
je
ss
insb
sbb
jns
xchg
add
add
cmp
pop
mov
and
dec
inc
xor
add
xchg
jle
daa
or
or
xchg
mov
loopne
sbb
aam
out
js
sahf
inc
add
lahf
push
das
inc
fdivl
sbb
sbb
push
bound
jmp
xorl
aad
bound
aaa
push
sub
pop
adc
mov
cmpsb
add
or
mov
jb
xchg
mov
out
clc
pop
push
in
sub
ss
dec
sahf
fmuls
addl
jmp
fmuls
xlat
insb
aam
xor
mov
xor
pushl
dec
incl
pop
inc
loopne
int3
add
jne
add
sahf
jae
imul
sub
xchg
lock
jge
les
push
stos
test
dec
gs
jle
push
call
jne
lods
jo
mov
adc
mov
push
mov
and
push
pop
pop
je
stc
test
sbb
pop
test
pushf
test
das
lcall
and
lock
mov
sub
push
or
jnp
sbb
or
cmp
test
movsb
outsl
mov
push
push
outsb
aam
pop
inc
in
and
mov
push
mov
or
xor
adc
and
rcll
cmpsl
adc
popf
adc
mov
push
cmp
jmp
dec
stos
mov
add
in
test
jmp
and
cmp
enter
nop
adc
negl
jne
mov
stc
jo
push
bound
je
clc
loop
sbb
xchg
pop
pushl
lock
mov
mov
jne
sbbb
andl
dec
cmp
mov
jg
mov
sbb
test
sbb
xor
sbb
ja
adc
mov
jmp
dec
mov
sub
imul
and
mov
push
ja
lea
orl
inc
xor
shlb
mov
jle
mov
jmp
leave
js
cmp
jge
mov
mov
mov
cmp
sbbb
fistps
jle
push
inc
imul
mov
and
roll
std
mov
fsubrs
pop
xchg
in
sbb
popf
push
fcomps
fisttpll
or
push
mov
mov
sbb
xor
jne
aam
pop
sbb
push
jl
cld
data16
dec
mov
cmp
in
mov
loope
mov
sub
inc
sete
adc
loope
and
add
sbb
arpl
shrb
stos
push
or
lods
mov
add
insl
aas
or
adc
mov
mov
jge
mov
dec
adc
enter
add
mov
mov
ljmp
dec
shl
shl
dec
add
sbb
push
gs
loope
icebp
cmp
loopne,pt
pop
push
pop
js
add
jo
add
ret
lods
pop
jns
movsl
imul
sti
push
dec
lock
pop
loope
sub
adc
test
mov
call
dec
mov
jl
insb
fs
aad
jo
std
mov
add
cmp
fsts
adc
iret
ss
and
add
inc
call
cmp
push
xchg
push
pop
nop
pop
push
or
jle
cs
xchg
test
add
sub
ss
mov
and
or
mov
outsl
mov
jne
inc
lcall
pop
loop
push
in
adc
lcall
pusha
fmul
in
adc
lods
xchg
enter
ret
xor
popa
lock
in
repz
in
aaa
daa
in
call
xor
lock
and
fdivs
xor
ljmp
pop
jl
arpl
add
mov
and
nop
dec
adc
add
jno
daa
xor
fdiv
dec
enter
or
jle
test
add
mov
mov
xor
bound
add
test
rorl
or
je
jb
pop
jecxz
aam
or
aaa
add
push
bound
cmp
add
push
aam
sub
push
fwait
jae
call
in
aam
bound
arpl
add
jl
xchg
cmp
xor
inc
cld
rorb
mov
mov
hlt
add
enter
cmp
jo
jmp
daa
mov
xor
daa
xor
addb
je
adc
inc
das
js
push
je
add
xchg
lock
or
sub
lock
adc
les
aaa
lods
add
xor
in
jmp
mov
jmp
mov
shll
add
sub
add
push
ja
imul
jne
cs
or
jp
inc
roll
movb
adc
or
sbb
inc
lods
pop
loope
mov
add
jo
insl
pop
push
movb
test
xorb
mov
js
ja
pop
clc
jg
mov
push
adc
cmpsb
add
scas
sbb
aas
or
pop
mov
outsb
ret
inc
in
cli
mov
rolb
fsubl
lds
or
jle
jno
insl
cmp
adc
pop
pusha
pop
mov
js
test
add
cld
jg
push
xor
xor
cmp
je
or
jbe
movzwl
mov
arpl
roll
jne
loop
cmp
cli
loopne
or
push
lea
push
lahf
cld
push
in
pusha
gs
sub
push
or
ss
adc
pop
pop
push
push
inc
adc
subb
shlb
adc
add
xchg
pusha
test
data16
shlb
sbb
cmpsb
nop
add
xchg
push
ffreep
xor
add
cltd
mov
rolb
loop
fwait
mov
jmp
xor
mov
and
push
sbb
and
adc
clc
sbb
xor
jbe
mov
aam
inc
push
push
aas
test
cs
jo
cmpsb
fidivrl
xchg
daa
in
sub
sub
xchg
in
adc
fisubrs
mov
push
leave
ret
xchg
push
sarb
push
test
adcb
jle
icebp
jl
push
sbb
add
cmpsb
add
out
add
mov
xchg
pop
push
pop
loop
or
mov
xchg
clc
fdivrl
addr16
movl
hlt
mov
js
inc
stc
xchg
dec
sub
pop
push
fwait
xchg
xor
sub
dec
inc
jb
lea
push
xor
call
push
les
cmp
stc
outsb
leave
das
insl
push
sub
inc
xchg
cmp
and
sbb
stos
ret
rorb
cld
jns
stos
jb
mov
sbb
and
aaa
loop
or
daa
xchg
add
xchg
xchg
cmp
cmp
or
sub
cmp
mov
mov
aam
adc
js
mov
push
pop
sbb
jbe
cmp
icebp
mov
push
pop
test
aam
fnstcw
jmp
rcrb
sbb
sarl
dec
push
test
aam
adcl
insb
stos
add
mov
mov
in
xchg
mov
mov
insb
push
add
jns
mov
imul
aaa
adc
jns
popa
add
jae
push
daa
inc
imul
pusha
or
ja
daa
cltd
add
pop
das
nop
dec
pop
fimull
adc
push
lret
mov
ret
push
jnp
mov
dec
cmp
xor
std
add
add
push
pop
add
add
cmpb
push
adc
sub
or
mov
ret
inc
test
pop
add
sbb
out
xchg
mov
mov
jge
sbb
inc
pusha
sub
movl
mov
lea
iret
mov
adc
inc
inc
jnp
jge
inc
adc
add
add
pop
adc
mov
jnp
lea
fisubs
int
es
add
dec
pop
and
adc
push
jg
pusha
lock
push
xchg
mov
push
xor
or
sub
orl
rorb
mov
pop
or
int3
xor
adc
test
ficomps
adc
inc
or
clc
cs
leave
push
and
sub
movsl
add
mov
cmp
aas
out
data16
cmp
je
movb
sub
and
rcll
mov
cmpsl
aas
pop
or
test
daa
mov
mov
aad
push
outsb
repz
mov
out
dec
or
pop
push
jmp
push
jge
push
adc
clc
push
setne
fbld
mov
mov
fucom
cltd
pop
add
lahf
cwtl
orb
imul
js
and
stos
lea
or
jo
mov
push
or
inc
imul
push
or
enter
adc
xchg
or
mov
sub
test
test
mov
adc
out
and
inc
xor
adc
mov
fstl
mov
aaa
gs
cmp
mov
iret
repnz
mov
dec
fiaddl
jns
les
mov
cmpl
arpl
faddl
mov
lret
shll
lods
dec
xchg
mov
or
mov
js
scas
mov
roll
inc
aas
pushf
mov
adc
adc
sbb
mov
jo
adc
lret
cmp
sub
aam
mov
add
sti
and
or
cmp
fwait
icebp
and
xchg
dec
mov
fsub
add
cmp
test
pop
enter
inc
mov
mov
or
cmc
add
popa
repz
clc
lret
jne
and
sub
adc
fnsave
pop
sti
in
sub
or
adc
sbb
hlt
nop
sbb
inc
adc
lock
mov
xchg
or
sbb
adc
jl
adc
movsb
cltd
nop
mov
nop
mov
movsl
fiadds
pop
in
add
push
sbb
dec
cmp
mov
incl
and
add
pop
test
dec
mov
xor
test
push
pop
adc
out
cmp
push
int3
les
aam
push
orl
sbb
mov
mov
xor
add
and
pop
mov
loope
mov
rorb
mov
and
mov
pop
pop
mov
ljmp
mov
push
mov
out
lods
les
jo
inc
cmp
cwtl
in
sbb
enter
rorl
push
or
roll
rorl
adcl
neg
push
mov
das
ss
testb
push
mov
inc
cmp
cwtl
add
test
lahf
out
test
fs
outsw
mov
push
xchg
jae
add
repz
mov
pop
dec
je
cmp
ret
subb
loopne
pushf
mov
cmp
xchg
iret
push
jb
add
adcb
pop
loope
or
adc
xchg
mov
mov
fmull
stos
insl
movsl
jbe
and
sub
mov
and
pushfw
mov
push
add
lea
lea
push
push
push
or
scas
enter
jo
push
es
in
incb
fldz
pop
aad
mov
pop
mov
mov
cmp
jno
xchg
inc
cmc
mov
or
pop
loopne
add
and
sub
cli
mov
add
insl
sub
xchg
mov
roll
les
stos
mov
push
aam
add
sbb
orl
sarb
stos
adc
imul
aam
adc
inc
mov
lret
adc
push
adc
mov
add
inc
out
test
test
pop
mov
push
testl
mov
push
add
jno
jmp
ss
loopne
mov
repnz
inc
rclb
outsl
and
push
xchg
jne
add
lea
aas
adc
jnp
fs
loopne
pop
in
mov
lret
cs
jnp
push
outsl
mov
scas
or
enter
movsb
mov
jae
js
aaa
sbb
cmpsl
mov
adc
add
out
jo
inc
lret
rorb
out
movsl
xor
nop
das
bound
fwait
dec
insb
jne
fisttps
pop
mov
fidivs
sbb
jns
fs
imul
add
popa
dec
push
jns
shl
mov
pushf
mov
add
xchg
push
dec
fisubs
jl
loope
add
pop
fistl
sbb
dec
or
andl
xchg
xchg
or
lock
adc
mov
test
jae
daa
cmp
sub
pop
ret
add
orb
shlb
push
add
mov
mov
mov
test
mov
sti
dec
mov
pusha
test
hlt
test
insb
mov
or
stos
xchg
inc
rclb
adc
sbb
push
cmp
outsl
cmp
xchg
mov
outsb
fneni(8087
push
mov
mov
loopne
pop
xor
xchg
and
movl
xchg
push
fdivs
pop
loope
testl
je
mov
aam
sbb
adc
sbb
mov
jle
mov
pop
popa
mul
cmpsl
xchg
mov
cmp
dec
loopne
lahf
insl
je
je
mov
dec
pop
pop
sub
pop
push
inc
aam
cmp
imul
pop
and
sarb
cwtl
sbb
xor
lods
pop
rcll
mov
inc
adc
sbb
sbb
sbb
xor
or
pop
inc
cs
push
jno
mov
mov
notl
cmp
pop
cmp
je
out
or
movsb
push
or
out
adc
ss
and
sbb
inc
movsl
rorb
out
mov
and
jo
lea
arpl
pop
pusha
test
adc
and
and
aam
and
lods
call
das
testb
cmp
mov
push
sub
roll
ja
je
es
pop
sub
sbb
pushf
es
sbb
mov
addr16
sub
sub
ucomiss
push
lcall
stos
test
mov
jge
std
inc
xlat
jp
outsl
dec
loopne
cmp
inc
cs
aam
mov
sbb
inc
xchg
xchg
das
fcoml
sub
adc
sbb
pop
or
push
adc
cmp
int3
xor
jno
jmp
push
mov
out
xor
das
out
push
push
sub
insl
fsubl
and
and
rolb
repz
lds
imul
sub
pop
push
cmp
popf
call
repnz
stos
jle
dec
call
or
pop
xchg
jne
pushf
add
ret
add
loopne
ret
pop
jo
or
pop
loope
mov
mov
inc
mov
sub
adc
or
pop
int
movsl
xchg
lock
push
pop
adc
add
inc
mov
ljmp
push
push
mov
leave
mov
mov
mov
push
and
or
dec
icebp
mov
pushf
lea
pop
and
fadd
jmp
sbb
mov
inc
in
push
ret
add
cmp
mov
xor
out
adc
or
lock
xchg
jns
loop
add
dec
mov
pop
or
rcrb
leave
mov
push
lret
or
fcoms
mov
adcl
mov
ss
pop
ret
ljmp
cmp
xchg
or
cli
jbe
mov
or
or
pop
dec
sub
cmp
ja
fisttpl
rclb
or
into
add
scas
int3
xchg
ret
pop
pop
lret
or
ja
xchg
jl
fstpl
lret
add
int3
push
jae
push
repz
jle
push
add
and
push
mov
es
add
mov
xor
icebp
mov
sbbl
cmp
jae
or
push
popa
mov
ret
pop
nop
mov
xchg
test
mov
pop
push
push
mov
mov
sbb
adc
rorb
scas
add
add
pop
movb
cmpsb
call
push
sub
adc
mov
lcall
loopne
jecxz
add
mov
faddl
pop
sahf
sbb
dec
lret
aas
add
loopne
icebp
add
outsl
rcr
dec
xor
insb
insb
loopne
inc
mov
ljmp
dec
hlt
sub
push
push
xchg
ja
pop
sbb
loopne
sbb
enter
or
add
and
sub
push
jbe
mov
pushf
adcl
loope
fmuls
inc
dec
sbb
scas
and
xor
pmulhuw
fnstenv
mov
pusha
rolb
fdivs
add
inc
test
xchg
mov
or
mov
mov
adc
clc
out
or
fwait
sub
bound
mov
sbb
xchg
test
push
pop
add
lock
pop
repnz
cmc
cmc
mov
repnz
or
dec
in
cmpb
adc
inc
inc
and
cmp
test
nop
pusha
das
cltd
xchg
mov
push
pop
imul
scas
jecxz
sbb
insl
mov
pop
faddp
xchg
xchg
inc
sbb
sarl
inc
lock
iret
xlat
mov
inc
imul
xorb
add
inc
push
cld
cmpb
add
inc
add
insl
mov
push
xchg
add
lods
sbb
mov
pop
rorb
or
fcomp
jmp
je
cmpb
addr16
jmp
mov
jns
push
rclb
cmp
mov
dec
loope
clc
je
rcrl
fistps
loop
lock
mov
push
add
adc
push
inc
push
cmc
dec
xor
push
push
setb
jge
add
xchg
xchg
aam
push
ficompl
mov
sub
cmp
jl
mov
ret
xor
sarl
pop
sub
push
jle
iret
in
sbb
jne
push
jno
push
mov
add
push
lea
push
xor
sub
out
xchg
out
sub
cmp
je
jmp
dec
cmp
mov
cmp
xchg
clc
xchg
mov
movl
adc
push
sar
sbb
test
icebp
jmp
data16
jne
xchg
push
mov
push
xchg
psrlq
jg
inc
mov
fldcw
fisttps
dec
sub
mov
push
dec
or
in
out
adc
add
jmp
aad
aam
xchg
sub
and
push
out
xchg
push
sub
loopne
jmp
or
rolb
adc
movsl
mov
pop
xor
fsubrs
push
ja
test
cmp
movsb
into
and
and
push
ds
cmp
imul
push
dec
add
or
out
das
mov
mov
ljmp
or
aaa
faddl
inc
or
ret
or
mov
pusha
jne
fistpl
mov
imul
inc
and
aas
loopne
sub
je,pt
sbb
jbe
push
mov
mov
cmp
mov
mov
ret
xor
mov
add
inc
or
pop
pushl
scas
mov
mov
rcrb
je
enter
mov
add
push
push
dec
add
inc
lcall
test
push
sub
dec
and
subl
js
lcall
sub
sub
mov
mov
inc
xorl
cmp
dec
jb
add
in
adc
out
aaa
mov
xorb
jno
adc
mov
cwtl
xchg
pop
push
adc
xchg
loop
loopne
or
insb
cmp
xor
loope
mov
and
push
into
ret
dec
pusha
rol
inc
dec
ljmp
cld
daa
jecxz
push
cmp
je
xor
mov
mul
seto
jmp
fbld
neg
or
push
pusha
add
scas
int
dec
push
jmp
cmpsb
xchg
xor
mov
push
xor
test
aas
jbe
scas
push
dec
mov
adc
mov
aad
pop
mov
inc
add
jecxz
xchg
push
sub
inc
or
push
dec
shll
adc
aam
or
and
inc
pop
cmp
adc
andl
or
enter
aam
inc
movsb
roll
fs
adc
inc
xchg
push
mov
jmp
xchg
mov
repz
mov
loopne
cmp
jl
jmp
test
vpackssdw
and
leave
add
nop
inc
or
jmp
jg
cmp
pop
lock
adc
jmp
cmp
je
sbbb
mov
cltd
test
jle
lock
sbb
cmp
jne
je
andl
adc
add
cmp
fwait
and
js
inc
out
jae
mov
mov
adc
fs
loope
faddp
jmp
xchg
std
push
add
pop
push
movsb
xchg
cli
jmp
mov
rcrl
push
ss
jno
cmp
push
inc
cmp
jae
fsubs
add
mov
mov
pop
ret
sub
or
jg
subl
loop
jne
and
jl
nop
rclb
pop
int
loop
push
ss
push
inc
jmp
pop
je
mov
push
xchg
imul
fisubl
sub
lcall
xor
pop
push
add
mov
loopne
xor
je
jno
lock
or
clc
push
mov
push
imul
inc
mov
dec
cmp
rclb
push
je
jg
outsl
ss
jne
jbe
and
ja
rorl
cs
mov
mov
mov
ret
dec
mov
inc
shl
jmp
push
jle
jg
fs
test
dec
jns
mov
cmc
add
fwait
lret
cmp
out
jo
lods
dec
or
clc
dec
pop
in
push
imul
popa
cs
cmp
jle
mov
jmp
mov
or
mov
hlt
cmpsl
fisttpl
push
mov
xchg
inc
sbb
jg
mov
push
push
pop
adc
arpl
adc
dec
in
les
mov
dec
sub
sbb
sub
fs
or
adc
or
inc
and
jno
stos
jmp
daa
out
pusha
add
sub
jge
pusha
add
sbb
sub
xor
or
dec
inc
pop
loop
jo
push
mov
jl
mov
add
pop
shlb
int3
lea
push
xchg
xor
sti
xchg
push
xchg
movsb
jne
and
and
outsb
pop
add
testl
iret
mov
dec
push
test
and
adc
push
push
arpl
dec
clc
pop
in
js
push
sar
mov
popa
sub
iretw
add
imul
imul
cmpsb
ja
ret
or
inc
jp
push
bound
das
add
adc
push
add
push
sub
mov
neg
addl
ret
mov
cli
jp
or
mov
lock
jne
test
push
push
je
inc
jmp
jmp
mov
xor
pop
mov
push
lds
push
popf
or
les
ret
cmp
mov
movl
orl
xchg
add
sub
adc
and
jnp
jp
xchg
cltd
mov
popf
sbb
dec
mov
addb
inc
pop
orl
xchg
xor
dec
mov
andb
add
aaa
jno
dec
adc
or
sbb
cwtl
rcl
or
movsl
push
int3
sub
mov
pop
dec
lock
add
pop
mov
mov
loopne
icebp
inc
add
mov
loopne
pop
sub
or
or
pop
cmp
pop
clc
inc
adc
testb
fisubrs
or
cmp
sbb
pop
add
mov
mov
jmp
push
shl
data16
inc
push
je
inc
aad
push
mov
stos
aam
dec
js
jl
adcl
fidivs
fstps
inc
xchg
adc
pop
dec
jae
push
add
push
xchg
xor
adc
pop
jg
pop
push
add
sbb
pop
push
or
movsl
or
pop
sub
mov
adc
push
pop
popf
in
dec
lahf
mov
fsubrl
or
sub
imul
dec
into
movsb
jmp
adc
push
gs
push
push
hlt
cmp
mov
repz
or
jae
add
add
fsubp
test
mov
pusha
test
sub
daa
xor
pop
push
jge
or
dec
adc
xchg
cmpsb
lods
scas
inc
add
jecxz
rcll
or
push
movsl
mov
push
lea
mov
outsl
sbb
and
bound
xor
inc
in
orl
fwait
dec
mov
andb
cld
repnz
pop
add
push
popf
dec
roll
iret
insl
mov
add
jecxz
shrl
lret
add
shlb
xor
out
mov
mov
dec
inc
jmp
inc
outsb
sub
mov
adc
cld
rcl
lods
out
and
dec
and
sbb
mov
adc
add
dec
cmp
pop
sub
sbb
adc
dec
add
mov
lds
fidivs
and
imul
adc
jl
insl
push
cmp
jbe
lds
add
mov
imul
mov
add
mov
or
xchg
sbb
adc
or
mov
fwait
xor
pop
cmc
xchg
xor
popa
cmp
sbb
or
jbe
in
push
cmc
and
scas
pop
insb
xor
dec
ret
lahf
out
sub
pop
fcom
push
mov
shll
lea
loopne
inc
mov
es
cs
add
sbb
hlt
inc
pop
pop
pop
cld
push
dec
xor
js
mov
movb
fadds
adc
loope
push
cmp
sbb
adc
outsl
sbb
jae
mov
xor
movsl
mov
outsl
and
daa
in
imul
mov
jmp
sbb
xor
jge
pop
sarl
add
dec
push
xchg
outsl
or
or
enter
and
movsb
sub
popf
add
cmp
push
cmpsl
push
adc
push
in
cltd
sbb
insl
faddl
ror
jno
test
mov
loop
mov
xor
cmpl
adcl
loopne
inc
or
cmpsb
dec
push
xchg
fucom
arpl
enter
pop
rcrb
cltd
mov
sbb
add
sub
inc
add
mov
bound
lcall
pop
pop
pop
dec
sahf
add
daa
sbb
mov
sub
lods
mov
test
sbb
jb
mov
int
sbb
cmpsb
dec
stc
inc
lcall
or
iret
ret
sti
faddp
shl
jo
and
dec
sub
push
ret
fldt
loope
or
inc
inc
pop
mulb
lcall
sbb
pop
aad
mov
sub
and
adc
pop
inc
push
and
add
and
std
mov
cmpsl
and
andb
xor
ret
dec
adc
xchg
inc
or
adc
adc
jmp
add
lahf
adc
pop
push
int3
xchg
pop
mov
xor
jbe
shll
or
icebp
and
or
data16
and
adc
add
js
ret
push
dec
adc
dec
pop
inc
incl
pop
and
sbb
enter
mov
push
loopne
and
xchg
inc
mov
mov
cmp
scas
or
sbb
add
outsl
push
push
daa
add
xor
icebp
sub
push
mov
pop
test
mov
add
mov
in
test
sbb
mov
fadd
push
xor
jnp
mov
jb
sub
clc
js
fildll
in
mov
ret
push
fisubs
mov
add
xchg
sbbl
jp
or
jne
adc
push
push
popa
jg
paddd
add
push
addr16
nop
cltd
and
mov
sar
ss
loop
test
xchg
data16
push
add
sub
mov
xchg
mov
sti
mov
insb
or
jecxz
sub
dec
je
xor
push
add
sub
test
insb
mov
cmp
loope
jo
inc
insb
hlt
clc
or
ret
cmpb
mov
xchg
add
call
or
add
mov
pop
cmp
mov
mov
loope
inc
push
cmp
sbb
pop
fsts
lods
pop
dec
std
mov
adc
add
and
push
add
cwtl
inc
mov
es
in
fs
cs
sub
je
rorl
push
test
adc
xchg
inc
loope
push
lods
leave
cmp
push
shlb
or
repnz
xchg
mov
xor
imul
aam
mov
sbbl
jbe
loope
mov
inc
mov
sbb
scas
mov
add
inc
mov
aam
ffree
sbbl
push
iret
mov
jle
je
fmull
popf
mov
out
stos
xor
inc
jnp
popa
adc
pandn
mov
cmp
mov
pop
cmp
addb
xor
dec
insl
insb
add
flds
mov
and
add
mulb
sub
sbb
out
add
idivb
dec
jnp
mov
xlat
or
sbbl
cmp
mov
xchg
inc
cmp
xchg
push
sbbl
dec
pop
push
frstor
mov
add
xchg
add
stos
call
xor
and
out
xor
scas
sub
jl
push
xor
push
add
mov
pushf
add
js
push
cmp
loopne
es
and
insl
xchg
xlat
push
adc
loopne
push
mov
adc
nop
jge
push
push
adc
mov
or
int3
mov
jno
loope
mov
sbb
insl
xor
sub
xor
fdivs
dec
imul
cwtl
jmp
js
jae
pushl
jge
add
pop
in
add
loope
dec
or
out
pusha
xchg
aaa
jnp
orl
push
push
ret
bound
je
shrl
rcrb
push
inc
mov
cmp
or
add
ret
lcall
pop
cwtl
test
cmp
es
dec
dec
out
xor
xchg
daa
shlb
and
mov
cmp
les
loop
shrb
jb
aad
addr16
testb
cmp
in
xor
xor
jle
push
inc
xchg
add
loopne
add
dec
lods
movsl
or
push
icebp
jmp
fdivrs
out
pushf
pop
mov
push
inc
sub
lods
gs
cmp
inc
loopne
pushf
or
mov
les
dec
fdivs
push
and
fsubr
aam
out
rolb
mov
hlt
push
pop
into
jbe
inc
jle
pop
nop
jl
dec
add
sub
pop
dec
lcall
jle
out
add
test
cmc
dec
xor
dec
dec
roll
xchg
cmpsb
jge
rclb
dec
insb
push
push
push
sbb
je
lcall
iret
aas
daa
cmova
sub
jo
cmp
cmp
dec
rorl
cmp
cmp
xchg
add
sub
aas
call
insl
lds
sub
aam
in
or
pop
pushl
xor
pop
ja
inc
mov
inc
xor
enter
xchg
xchg
cmp
das
rorl
incl
cmp
and
adc
push
addb
and
sbb
inc
and
sbb
pop
adc
pusha
cmp
sub
jmp
test
orl
fisubl
mov
xor
and
xchg
mov
sub
dec
sbb
push
call
ror
dec
dec
cmp
mov
xor
ljmp
add
insb
je
mov
mov
mov
or
fistps
loope
cmpb
xlat
sbb
sub
movsb
sbb
sbb
or
inc
pusha
mov
lret
push
rorl
cmp
inc
push
jmp
scas
test
clc
sahf
dec
pusha
cld
mov
inc
jmp
lea
mov
mov
roll
stos
aad
jecxz
insl
and
dec
add
inc
add
push
xchg
mov
aad
sbb
pop
and
rcll
js
call
pop
call
dec
in
jno
lea
lea
cmp
and
sbb
and
imul
and
sub
push
fimuls
mov
insb
daa
or
cmp
stc
dec
jmp
cld
or
jmp
push
je
call
mov
psubsb
mov
subl
fldl
jnp,pt
cmp
mov
xchg
lret
jbe
adc
xchg
jo
mov
mov
mov
xorb
adc
imul
inc
and
out
add
mov
fnsave
in
out
mov
sub
sti
orl
lods
call
adc
or
int3
mov
push
mov
cmp
stc
imul
mov
xor
fadds
movsb
add
mov
inc
dec
out
pop
mov
mov
xchg
andl
dec
aas
mov
clc
fdivr
roll
cmp
aam
dec
ret
mov
jmp
cmp
cmpsb
pusha
or
sahf
dec
mov
leave
jl
jmp
sti
pushf
mov
mov
pop
dec
xlat
scas
sub
popf
jb
mov
ja
push
jmp
or
rorb
scas
push
movl
add
inc
dec
popf
lock
sbb
sbb
inc
cmp
push
sbb
inc
mov
sbb
imul
fwait
subl
jae
repnz
jge
and
add
mov
ret
jnp
sbb
jp
andl
xor
fisttpl
sub
aad
fbstp
fimuls
mov
jno
adc
in
push
or
rorb
push
dec
jne
push
es
jo
mov
clc
adc
enter
push
and
cmc
xor
ret
pop
stc
dec
psadbw
and
aam
ficoml
adc
pop
loopne
in
scas
aaa
cmp
je
xchg
lcall
das
xchg
divb
mov
xchg
mov
or
jge
sub
jle
mov
dec
jae
mov
xchg
daa
xor
pop
push
arpl
dec
mov
lea
dec
push
adc
icebp
out
inc
xchg
ret
outsb
mov
sub
mov
cmp
mov
in
and
ja
xchg
cmp
je
bound
inc
fs
pop
and
mov
cmpps
push
inc
or
ss
dec
sbb
push
mov
xchg
jo
cld
adcl
movsb
add
addl
push
and
mov
lock
jo
xor
push
cmp
inc
je
loop
inc
push
and
push
or
adc
add
sub
ds
je
fwait
mov
push
call
adc
jge
mov
shlb
add
mov
dec
push
mov
sbb
mov
int3
or
call
scas
mov
xlat
cmp
pop
push
xlat
add
fnstcw
test
jo
je
popa
sub
orb
sbb
dec
sbb
push
cmp
mov
push
iret
into
stos
jle
nop
cld
xchg
shr
and
push
je
add
fildll
jns
shrl
jo
daa
andl
imul
add
adc
ret
pop
fcompl
sbb
mov
xchg
pop
sbb
cmp
pusha
mov
push
inc
lcall
lea
sbb
xor
rorl
adc
mov
fdivr
xorb
adc
adc
loop
mov
xchg
xchg
iret
sbb
test
dec
jns
lods
and
xor
jle
bound
push
cmp
cmp
xchg
jbe
push
mov
adc
aaa
movsb
aad
test
xchg
or
into
push
and
cmp
inc
lods
test
sub
xchg
sub
jbe
xor
xor
imul
cmp
jge
push
or
ret
dec
xor
add
push
push
and
sub
adc
pop
inc
and
dec
js
mov
in
not
adc
ret
pop
sbb
dec
add
push
mov
pop
or
jns
xchg
mov
mov
jmp
sbb
dec
movsl
add
insb
adc
sarb
sub
and
cmp
jge
or
mov
or
jno
add
fdivrs
test
bound
roll
sti
sbb
add
imul
sbb
push
ja
xor
or
mov
popf
leave
lret
pop
mov
sar
mov
test
enter
es
shll
mov
mov
adc
or
dec
adc
dec
push
mov
or
fimull
pop
xchg
pusha
xchg
scas
ja
push
lret
adc
fldcw
ss
js
sahf
cmp
fisttpl
pop
jae
repnz
rorl
les
add
daa
lea
push
add
add
out
sbb
push
dec
out
mov
xchg
sbb
rcrl
je
imul
popf
push
adc
js
incb
fsubl
stos
push
xchg
cmpsb
mov
sub
lods
or
fadds
push
fdivrl
aam
inc
adc
call
xor
int
sub
mov
std
gs
daa
imul
mov
mov
xchg
xor
je
cmpl
xor
lret
dec
push
dec
inc
inc
and
jae
lret
sarb
int3
mov
orb
bound
pop
pop
shl
in
push
add
mov
push
jge
xor
pop
testl
inc
dec
jbe
rcrl
xchg
fmull
sub
xor
inc
fistpl
pushf
in
push
mov
lock
test
cmpsb
mov
push
je
xchg
cli
subl
sbb
test
test
sbb
pop
cwtl
adc
adc
js
push
sbb
lock
push
je
incl
inc
sub
jns
and
mov
lods
jns
push
dec
xor
lods
push
cmp
aam
dec
and
inc
sbb
dec
inc
or
cwtl
addl
sbb
pop
push
pop
inc
sub
cli
inc
mov
lea
push
and
arpl
pop
xor
push
lea
cli
pop
in
aaa
sti
sbb
fcom
sbb
cld
pop
adc
std
xchg
sub
xor
lods
mov
addl
je
mov
xlat
sub
push
and
movsb
mov
subl
cmp
daa
leave
mov
add
pop
adcl
mov
test
dec
pop
sbb
dec
mov
fsub
cmp
loopne
rorb
cmp
pusha
pop
pop
cmp
mov
aas
dec
cwtl
sub
add
ds
jmp
mov
or
inc
repnz
adc
fldl
xchg
hlt
push
aas
push
filds
leave
leave
and
cli
insb
cmp
pop
xor
mov
or
or
add
add
mov
mov
aad
gs
call
push
aad
cmp
jge
cmp
movsb
pop
xchg
dec
dec
mov
cmp
mov
cmp
stc
mov
xchg
out
dec
and
jno
and
cmp
imul
jl
shlb
or
insl
outsl
inc
sub
and
adcb
pop
add
rcll
mov
jecxz
xchg
dec
inc
fidivrs
dec
out
pop
scas
loopne
inc
jns
adc
in
or
push
pop
and
inc
xchg
adc
scas
mov
inc
or
xchg
cmp
adc
adc
add
cmpsl
insl
mov
or
mov
add
insb
cmpsb
xor
loopne
sub
fwait
roll
mov
fstps
dec
push
adc
xor
or
dec
in
aaa
dec
pop
add
sub
add
xchg
aas
movl
mov
dec
pop
mov
cmp
or
push
sti
push
pushf
pop
cmp
mov
cmpsl
test
sbb
pop
notb
fsubl
addb
and
push
sub
and
xchg
and
and
jb
orb
push
gs
xor
rolb
mov
or
sub
add
icebp
push
fcmovnbe
jo
int3
js
pop
sub
mov
daa
int
jge
fimuls
jno
or
aaa
sub
nop
stc
mov
pop
and
cld
filds
cltd
adcl
jo
cmp
js
xchg
imul
sub
rolb
lret
popa
loopne
js
dec
nop
out
nop
push
bound
cltd
out
das
adc
adc
and
mov
outsb
and
je
mov
and
lea
fs
add
rolb
xor
and
fwait
cmpl
adcl
pop
pop
test
jo
ss
inc
aaa
sub
or
orl
cltd
fs
jae
mov
int
adc
jno
inc
cmc
cmc
mov
stos
das
in
lret
out
je
bound
dec
loopne
xor
sub
xor
pop
loop
cwtl
movsb
sbb
inc
pusha
outsl
jne
lea
push
pop
pop
orb
push
ret
loope
mov
mov
xor
mov
ficoml
or
icebp
adc
cmp
je
mov
mov
or
ja
push
test
subps
lods
mov
sub
dec
lcall
sbb
imul
jge
test
sub
ja
inc
movsl
add
dec
out
mov
cmp
or
pop
mov
pop
inc
push
and
jns
pusha
imul
cmp
testl
pop
movb
fsub
or
lock
xchg
jle
mov
mov
fmuls
sub
lahf
in
shrl
pusha
mov
bound
cs
add
popf
inc
fldl
inc
pop
mov
fistpll
cltd
jnp
and
loopne
xchg
aad
je
cmpl
jnp
jl
xor
lea
aas
fucomip
lea
xchg
fmull
rcrb
rcll
sahf
xlat
or
lahf
add
inc
call
negb
pusha
popf
or
rolb
adc
imulb
xor
iret
xor
cmp
push
cmp
mov
mov
mov
je
and
std
popa
pop
push
push
test
dec
lea
jo
loop
aad
mov
mov
cli
sub
xor
mov
sub
mov
cmp
mov
lea
or
testl
lods
cwtl
andl
pop
sbb
sub
push
hlt
popa
mov
lret
popf
aad
jne
cwtl
cmp
xchg
add
stos
in
test
mov
adc
sbb
dec
dec
adc
or
xchg
adc
roll
jmp
ss
push
pop
xchg
insl
fistl
jge
lea
lret
and
ja
fldenv
or
mov
mov
jae
mov
popf
or
cs
in
pop
and
jno
and
xchg
lret
mov
ret
outsb
popf
xchg
lea
test
or
mov
and
sbb
push
faddl
push
push
sbb
sbb
xor
lds
adc
rcrb
and
in
sub
aas
inc
xor
pusha
fsubr
lea
mov
and
int
cmp
clc
sbb
push
sbb
daa
loopne
add
add
and
pop
fs
and
test
and
and
sarb
pop
mov
iret
sbb
enter
and
inc
sbb
push
push
jne
push
cmp
xor
es
mov
dec
lds
je
or
xchg
daa
cs
das
lods
xchg
sub
daa
sub
sub
pop
insl
cltd
xchg
and
sub
sub
test
sub
adc
sub
sub
sbb
push
insb
les
adc
mov
stos
mov
jnp
dec
push
push
sbb
or
imul
testb
xor
lods
jae
sub
mov
fwait
mov
or
xchg
iret
add
jle
es
xor
adc
cmovp
sub
push
push
dec
add
xchg
or
or
sarb
testl
xchg
lea
fnstenv
push
adc
or
add
cltd
nop
inc
add
cwtl
mov
or
add
out
out
xchg
push
inc
sahf
hlt
in
cmp
add
pop
hlt
or
ret
test
loop
push
and
sbb
in
out
fld
push
insb
push
push
movl
js
xor
sti
repz
or
or
aaa
and
sbb
xchg
out
in
sbb
mov
lock
ret
in
imul
mov
and
xor
push
jae
xlat
adc
lock
jp
dec
jle
loope
insl
mov
push
add
mov
js
inc
add
into
faddl
jbe
jl
dec
xlat
pop
adc
pop
adc
add
dec
les
cmp
jne
and
cs
or
xor
roll
lock
out
cmp
je
mov
fildl
xor
stos
inc
add
scas
jne
jp
dec
or
mov
dec
scas
test
xor
adc
ds
or
jge
stos
stos
adc
ret
mov
cmp
mov
int3
aaa
loope
daa
push
pop
test
fcom
sbb
ret
fisubs
or
sarb
pop
cmp
je
inc
xlat
adc
lock
xchg
jp
push
cld
xchg
push
lds
fbld
add
mov
dec
or
movsb
rol
push
sbb
add
stc
inc
add
dec
add
ja
mov
push
je
and
int3
in
out
pusha
pop
pop
call
sub
or
xor
jl,pn
or
push
popf
fwait
dec
fmuls
or
fs
inc
sub
movsb
or
add
sti
rol
pop
jbe
je
adc
sub
push
xchg
xor
icebp
inc
lahf
sarl
sub
mov
jo
cwtl
jmp
lods
notb
lea
add
adc
mov
or
xor
aas
les
adc
sbb
cmp
ja
and
icebp
ds
test
fdivrs
je
add
adcb
push
or
or
dec
mov
xor
nop
out
movups
mov
xchg
mov
sbb
aam
sbb
jmp
sub
and
sub
addr16
arpl
loop
adc
punpckhdq
test
ja
scas
mov
xor
mov
jge
mov
mov
cld
mov
fidivrl
hlt
add
aaa
add
xor
xlat
aaa
add
es
sub
push
dec
or
xchg
push
arpl
or
cmp
movl
lcall
cmp
cmp
aad
xor
sbbl
add
adc
jno
negl
and
popf
lods
es
adc
shlb
dec
popa
cmp
imul
imulb
dec
mov
unpckhps
inc
inc
pop
pushf
xor
sbb
ret
cmp
jle
sub
shlb
pavgw
and
adc
pusha
cmp
sub
inc
pop
mov
mov
push
sahf
rolb
insb
ret
rol
es
fs
out
in
in
and
push
je
mov
and
dec
cmp
jns
push
inc
push
pop
inc
jmp
dec
xlat
mov
mov
sub
dec
sub
pop
mov
xor
jne
in
bound
pop
mov
mov
add
cmp
in
or
push
sub
or
xor
cmp
adc
xchg
sbb
in
lds
add
add
and
sbb
stos
mov
out
pop
add
nop
jns
cmp
mov
mov
inc
lcall
pop
movl
and
insb
mov
add
inc
mov
sysret
xor
push
xchg
or
or
or
sub
nop
push
or
add
or
inc
sub
add
mov
gs
lcall
pop
ret
and
sarb
jo
sti
sahf
xor
or
xchg
xchg
dec
inc
push
and
cmp
test
pusha
sbb
push
dec
fsubr
cmp
sar
enter
jae
inc
add
outsb
mov
into
sbb
pop
je
es
loopne
ret
pop
cltd
cmp
aas
sub
fisubs
rdmsr
loope
js
test
pop
cltd
js
jbe
inc
and
dec
inc
les
fsubr
inc
lret
jle
cltd
add
mov
stc
int3
inc
popf
xadd
jo
jmp
and
sub
stc
or
bnd
shrb
dec
sbb
sub
add
push
xor
xor
ss
mov
mov
popf
test
push
shlb
cmp
dec
movups
sbb
mov
popf
add
add
sbb
xacquire
rolb
add
hlt
addb
frstor
ret
not
inc
lods
add
pop
mov
cmpsb
mov
mov
lea
fistl
mov
xor
or
xchg
xchg
inc
or
mov
sbb
cmp
sub
and
or
adcb
insb
sti
loop
add
xchg
lea
and
or
mov
jmp
pop
push
push
orb
adc
pop
inc
pop
andl
adc
rcrl
and
xchg
dec
sbb
mov
xor
jo
loopne
cmp
jmp
fildl
or
xor
inc
add
aad
add
in
fdivs
cld
add
push
inc
adc
or
mov
ret
mov
in
inc
stc
das
clc
mov
push
xor
jns
mov
xor
and
push
xor
rolb
adc
leave
add
xchg
cmp
sbb
inc
mov
ret
dec
mov
lock
inc
inc
mov
dec
pop
xor
adc
push
jmp
bound
adc
pop
adc
cmp
pop
dec
xor
ret
sub
mov
movlps
mov
inc
bound
cmpsl
mov
sti
add
stos
insl
xorb
push
inc
lds
inc
sub
lret
lahf
inc
inc
test
adc
and
dec
sbb
or
cmp
push
xchg
cmp
call
xchg
and
fs
cld
mov
jo
dec
mov
mov
pop
enter
es
push
js
and
cmp
fsubrp
xchg
or
pop
lea
pop
push
push
xor
divl
dec
sbb
push
mov
dec
push
push
cmc
inc
stos
popa
sub
add
test
je
stos
incl
aaa
imul
mov
in
fistl
out
adc
add
xchg
es
and
imul
adc
push
dec
pop
or
add
inc
nop
or
add
test
adc
add
fdiv
fdivl
push
sub
ss
adc
and
dec
lcall
dec
repnz
sbb
enter
in
loope
dec
dec
adc
loop
sbb
jnp
ds
sbb
adc
ss
jmp
jmp
mov
pusha
inc
movsl
jne
push
mov
add
pusha
xor
lock
test
add
mov
aas
cmp
mov
xor
fisttpll
pusha
lret
dec
sbbl
mov
js
sbb
cli
dec
push
cmp
jge
jg
adc
inc
sub
clc
sbb
loope
or
fwait
out
aad
sbb
add
pop
pusha
ret
insl
pop
cmp
push
cmp
mov
sbb
mov
sbb
inc
push
fcmovu
push
addb
js
lea
dec
xor
fs
sbb
sub
push
xor
or
scas
test
lret
add
xor
push
stos
or
rol
add
adc
add
int
fiadds
movsl
js
rcrl
lods
mov
out
add
adc
sahf
and
cs
sarl
add
xchg
adc
stos
mov
pop
hlt
ret
xchg
adc
and
ret
add
push
je
cli
dec
fistpll
add
sbb
mov
sbb
inc
push
adc
int3
dec
inc
xor
or
das
lret
inc
inc
push
mov
add
neg
fldl
push
add
inc
icebp
push
inc
lcall
ret
push
fwait
add
add
pop
jnp
and
aaa
aaa
shlb
aaa
xor
pop
push
fwait
sbb
or
scas
icebp
int3
orl
sub
enter
xlat
popa
stc
push
lcall
out
mull
jmp
movl
cwtl
or
sbb
jbe
movsb
fstpt
lods
sbb
mov
jp
das
icebp
cmp
dec
jmp
push
mov
mov
outsb
mulb
mov
sbb
aas
fxsave
push
jo
addl
and
loop
xchg
adc
out
popf
lods
push
push
xchg
push
fistl
enter
call
rcr
sub
imull
scas
pushf
call
mov
cmp
adc
dec
loope
dec
insb
jo
mov
mov
push
and
jns
xchg
sbb
icebp
or
enter
push
adc
xor
out
add
dec
add
xor
add
sarl
add
mov
nop
adc
test
lret
stc
mov
call
sbb
repz
out
sbb
sbb
mulb
xor
xor
mov
fldl
jns
js
pop
or
sbb
mov
rorb
enter
add
call
sbb
dec
movsl
jns
jg
xlat
inc
push
add
or
mov
pusha
inc
test
mov
add
scas
or
add
enter
shrl
mov
lds
inc
shll
mov
js
mov
mov
lret
test
add
mov
iret
push
cmp
scas
lock
mov
add
add
jl
push
jo
adc
shr
repnz
icebp
or
or
mov
adcb
test
jecxz
xor
fiaddl
sahf
aam
add
or
test
test
pop
push
jns
push
cld
or
jnp
mov
and
out
pop
mov
jge
cmp
mov
test
sbb
sbb
in
inc
into
icebp
cmpsb
aad
or
sbb
in
or
pushl
push
jmp
shlb
aas
jno
push
loope
push
cs
notl
aam
leave
push
dec
rol
mov
sahf
js
push
jno
xchg
push
lods
das
stos
mov
fmulp
inc
ss
sbb
in
or
push
out
jno
dec
xchg
jl
xor
loope
sbb
and
pop
and
and
ljmp
outsb
push
loopne
pop
adc
pushl
sarb
jl
imul
and
lahf
lods
dec
push
sahf
add
orl
movsbw
inc
fsts
pusha
or
jne
out
mov
or
je
adc
fwait
mov
inc
push
pop
add
mov
mov
hlt
push
inc
add
sbb
inc
data16
cmp
ds
pop
rcrl
push
fmull
daa
cmp
sbb
or
pop
jne
loope
sbb
adc
imul
dec
sbb
jmp
jmp
pop
int3
push
add
inc
push
pop
cwtl
xchg
das
push
mov
aam
daa
sbb
ret
mov
and
dec
jg
lea
fdiv
add
in
mov
inc
out
or
out
repnz
xchg
sbb
imul
bnd
cmp
mov
and
aam
int
or
mov
ljmp
mov
out
sub
push
aaa
jg
jmp
das
sub
inc
jb
cmp
xor
xchg
les
or
sub
lds
sbb
shlb
push
and
loopne
pop
cmc
rcr
xchg
loop
and
mov
mov
in
ret
add
insb
fsubs
xor
aaa
push
pop
mov
sub
pop
cmp
sbb
jae
sbb
test
stos
mov
aam
jne
arpl
int3
pop
sbb
push
cltd
test
xchg
pop
sbb
xor
je
stos
std
pusha
mov
mov
push
fiaddl
sti
and
adc
test
mov
adc
fwait
divb
pop
mov
fcomip
les
ret
sub
rcrl
jo
adc
aaa
jp
fists
add
hlt
cmpsb
mov
and
lock
neg
adc
sbbb
fimull
test
push
pop
sub
xchg
or
or
into
into
clc
sub
popa
cmpsb
mov
int
or
mov
ret
cmp
mov
or
add
leave
clc
cmp
and
adc
repz
fnstenv
sub
fs
in
mov
cmc
jnp
je
xor
iret
test
lret
or
in
pushf
inc
adc
arpl
dec
scas
das
dec
fucomip
rcrb
imul
push
add
movl
sbb
push
pop
mov
test
hlt
mov
decl
adc
lcall
mov
mov
movsl
pop
adcb
clc
or
incb
push
or
test
inc
xchg
and
cmp
adc
add
xchg
cmpb
insb
and
jno
xchg
icebp
fld
adc
cmp
out
jg
sti
inc
xor
jne
or
mov
movl
push
adc
push
adc
inc
dec
inc
and
movl
rcl
cmp
xor
shlb
pop
js
insb
pop
xchg
js
sub
leave
push
das
and
int
push
push
test
xor
lods
shll
cmp
lods
or
in
in
adc
sbb
jne
movsl
add
xchg
cwtl
sub
mov
pusha
pop
inc
jns
pusha
or
jecxz
dec
inc
push
orps
pop
xchg
sbb
mov
hlt
inc
inc
ret
sub
sub
mov
push
lods
fwait
aam
clc
sub
xchg
stc
add
incl
sar
push
add
push
push
push
push
popa
in
ret
jle
xor
mov
cmp
ljmp
and
xchg
mov
jmp
cmp
jne
loop
nop
ret
inc
push
jne
andl
adc
mov
ss
movsb
cmp
lcall
dec
push
nop
xor
dec
push
and
test
jo
out
sub
dec
sub
cmp
inc
mov
icebp
cmp
adcl
add
and
mulb
stc
addl
sub
ds
sti
add
js
cmp
movsl
das
scas
jge
jmp
jbe
inc
cwtl
lcall
orl
hlt
adc
jg
call
mov
cli
inc
lea
in
test
mov
lods
fnstsw
mov
pop
cwtl
call
pushf
cmp
jle
scas
imul
add
xor
ja
jp
xchg
xchg
jbe
mov
popf
enter
adc
mov
jnp
adc
jbe
and
arpl
add
inc
adc
cmp
je
ss
cmp
push
mov
mov
mov
nop
sbb
out
xor
insb
nop
es
add
cmp
add
xor
add
lods
imul
enter
shrb
push
push
stos
outsl
xchg
mov
loop
sbbb
cmp
test
imul
push
popa
pushf
push
inc
cmp
fstl
push
pop
outsb
adc
icebp
sub
data16
dec
jmp
sub
jb
cmp
in
push
cmp
lcall
stos
xchg
mov
pcmpgtb
jo
or
jnp
add
fistpll
mov
push
push
push
clc
ret
push
jecxz
mov
sbb
es
fwait
jne
cmp
mov
xchg
iret
sub
lahf
mov
loopne
shll
cs
in
les
outsb
fwait
dec
or
wrmsr
push
stos
mov
add
push
xchg
and
mov
xchg
and
bound
add
fsubs
addr16
inc
imul
push
cmp
loop
std
les
test
dec
std
lods
shlb
pop
and
jne
pop
test
push
jmp
and
dec
mov
lods
aas
jge
scas
push
int3
pop
sbb
pop
and
adc
cmp
push
sub
xor
hlt
jno
add
jmp
fstpl
dec
pop
fsubr
and
icebp
add
add
rorb
cmpsl
insl
sub
sbb
or
pop
int3
je
push
cmp
pop
push
fcoml
in
les
inc
jnp
scas
mov
xor
inc
daa
hlt
aad
sbb
and
sbb
mov
inc
mov
dec
jns
dec
movsl
sub
dec
arpl
jbe
sti
cmp
je
xchg
mov
cmp
test
push
test
ret
arpl
xchg
adc
mov
test
ss
dec
add
and
sbb
jo
pop
xor
les
mov
push
and
mov
push
inc
mov
cmpb
and
into
clc
loope
es
push
repz
cmp
push
mov
movsl
rcll
into
test
popf
loope
gs
jns
in
rcll
and
clc
pusha
mov
jmp
bound
or
test
pop
push
loopne
mov
push
inc
loopne
dec
and
mov
int
ret
cltd
pop
adc
ja
mov
insb
lea
lret
add
and
mov
mov
rclb
out
mov
and
mov
adc
jle
add
cmpw
adc
sbb
cmpb
jbe
shl
sbb
push
pop
add
ss
stos
xor
ljmp
pop
mov
add
sar
add
push
jo
mov
mov
pop
les
adc
pop
jns
or
sbb
and
sbb
lock
cmp
xchg
pop
sbb
pusha
jne
dec
clc
orl
testb
jp
sub
jmp
popf
loope
lcall
xchg
decl
mov
pop
cmpl
push
adc
rorl
repz
xchg
or
andl
jmp
xchg
sbb
add
dec
cmp
sbb
scas
lret
inc
ret
js
jo
les
inc
xor
sub
cmpb
inc
pushf
nop
mov
jecxz
or
dec
es
push
add
sub
cmpsb
jecxz
add
mov
inc
sub
dec
fs
inc
cmp
mov
jb
fs
push
jle
cmp
lods
add
cltd
dec
pop
in
push
mov
xor
stos
data16
jo
jns
imul
and
mov
or
icebp
or
cmp
adc
adc
movsb
add
push
stos
fsubrl
mov
add
and
sub
stc
es
push
pop
fiadds
lea
outsl
inc
mov
adc
mov
movsl
push
mov
scas
lods
in
xor
fsubs
sub
test
add
add
sub
movsb
movsl
or
sub
xor
push
or
adc
pop
lock
and
lods
adc
adc
adc
xor
fcom
xor
cmpsl
fwait
sbb
mov
arpl
inc
dec
inc
iret
mov
mov
inc
lret
ljmp
call
test
push
jmp
sub
push
mov
scas
or
xor
fwait
ret
mov
rcrl
gs
and
fcoms
stc
xchg
dec
and
push
lret
popa
sbb
popa
loope
cld
sbb
jne
or
push
int3
dec
add
popa
or
mov
or
jecxz
cmpsb
or
sbb
jp
lock
cmpl
pop
je
or
push
jmp
arpl
xchg
cs
movsb
aaa
adc
test
dec
adc
mov
stos
mov
enter
add
cltd
and
add
jl
push
or
inc
hlt
add
test
mov
push
push
mov
mov
shrl
jne
test
addr16
mov
cltd
xchg
sbb
or
xchg
xchg
or
test
je
push
rcll
mov
pop
push
ss
daa
xor
aas
stos
test
mov
call
push
and
push
frstor
pop
xor
decl
jns
and
jo
jge
out
std
jmp
les
in
dec
sbb
fcomps
shl
shrb
dec
xor
mov
cmp
imul
sbb
call
or
stc
mov
mov
jmp
dec
mov
cli
dec
push
popa
inc
jns
jmp
and
sbb
lock
adc
lahf
in
cld
sbb
in
in
mov
and
jmp
roll
sub
xchg
dec
lret
daa
mov
mov
dec
mov
jne
or
dec
mov
inc
rclb
adc
jae
sub
push
pushf
clc
xor
push
inc
ja
cltd
idivb
adc
dec
lea
jmp
push
push
das
in
xchg
add
pop
pop
sub
idivl
ret
addl
pop
inc
and
cwtl
adc
nop
jp
fucomip
xchg
mov
in
dec
test
cld
inc
pop
inc
push
test
roll
add
xor
outsb
inc
pop
rcll
inc
daa
sahf
mov
add
bound
inc
add
mov
xchg
xor
repz
mov
adc
insl
cwtl
and
sub
push
sbb
mov
and
adc
inc
sahf
jo
inc
je
xchg
push
cmp
mov
aam
push
mov
dec
clc
inc
ret
dec
xchg
das
push
inc
add
jmp
and
mov
nop
out
inc
inc
jmp
mov
sub
pop
sub
xchg
je
cmp
mov
enter
dec
inc
inc
dec
cmp
jne
shrb
and
add
push
call
sbb
nop
mov
jne
sub
dec
sbb
jno
mov
inc
sub
mov
push
loope
mov
cs
pop
arpl
xor
xor
pop
pop
adc
jp
movsb
xor
push
and
jb
ret
fcoml
jno
loopne
add
add
pusha
or
adc
jge
sti
jecxz
jle
ss
cmc
mov
rorb
mov
mov
ds
jnp
loopne
pusha
add
enter
movsl
arpl
mov
mov
lret
push
inc
adc
repnz
nop
and
and
stos
aad
call
ja
xchg
add
add
addl
jmp
or
out
or
or
aas
cs
dec
dec
shr
dec
lret
push
xchg
add
cmp
xchg
or
loope
and
mov
rcr
jne
ja
push
aas
shlb
in
lds
sbb
inc
nop
in
or
mov
rolb
pusha
mov
enter
cmpsl
xchg
jmp
mov
loop
and
movsl
sub
dec
es
xor
pop
pop
fbld
fsubs
shlb
jl
gs
lahf
jne
cmp
push
and
daa
cmp
out
hlt
mov
push
xor
adc
pop
cmp
xor
out
lods
mov
hlt
mov
enter
sub
or
xor
rclb
mov
bnd
mov
push
loop
mov
push
push
push
test
adc
push
xor
sbb
sbb
add
fstl
int
push
test
push
je
mov
ret
pop
push
push
adc
cmp
jmp
push
jg
shlb
repz
cmp
out
pop
or
mov
pop
add
test
xchg
push
push
out
inc
jo
xor
jg
cmp
pop
arpl
add
and
js
pop
xchg
cmpb
nop
call
leave
and
jmp
cmp
jne
xor
enter
lret
call
xchg
xlat
adc
ss
push
pop
insl
dec
test
cwtl
mov
pop
pop
arpl
ret
pop
mov
dec
fsts
mov
sahf
add
dec
testb
into
push
lock
or
mov
js
adc
and
or
adc
pop
in
pop
or
or
adc
mov
ja
dec
or
xor
fildl
push
sub
mov
fcomps
inc
pop
addb
or
adc
mov
cmp
aam
ja
mov
mov
push
xor
shrl
push
movb
lock
sub
cmp
lods
xchg
jl
add
fs
dec
daa
test
inc
mov
xor
ja
xchg
call
cmpsl
jp
cmpsl
push
lcall
les
sbb
scas
mov
or
adc
dec
inc
sub
jns
adc
ret
jne
dec
sbb
lahf
and
mov
pop
add
mov
roll
adc
and
repnz
inc
adc
cmc
imul
ret
aaa
addr16
loop
aam
or
and
adc
jnp
clc
sub
enter
test
ror
mov
test
mov
mov
push
es
fadds
shl
pop
call
aad
das
mov
imul
inc
cs
aam
loop
pop
adc
aaa
xor
pop
mov
sub
adc
scas
sub
loop
cmp
sub
jle
mov
es
add
push
mov
inc
sub
add
pushf
shrb
lea
and
cmp
xchg
cmp
and
scas
lea
loopne
adc
ss
cmp
sub
pop
aam
sbb
or
shlb
and
mov
jne
out
frstor
loope
repnz
adc
mov
push
and
pop
push
pop
cmpb
push
fsub
xorb
jnp
pop
mov
ret
dec
mov
mov
and
les
add
add
xchg
mov
mov
test
or
lock
push
pusha
movl
les
in
xor
cmp
push
mov
dec
mov
adc
push
adc
subl
mov
sbbl
sbb
or
jecxz
loop
sbbb
cmp
negb
pushf
xchg
aas
enter
dec
add
nop
or
ret
je
jg
jg
add
adc
or
and
nop
and
mov
adc
mov
push
jb
xchg
push
inc
outsb
add
pop
add
and
repz
and
sarl
inc
inc
mov
mov
call
lret
cmp
xlat
shll
cmp
sbb
fists
xchg
fprem
imull
mulb
lret
sbb
rorl
sbb
fistps
or
pop
mov
pop
sub
jmp
jmp
data16
dec
jb
movsl
pop
cmpsl
add
dec
cmp
jno
dec
fwait
and
xchg
mov
sbb
jae
push
lahf
les
push
or
pop
aad
sti
sub
mov
movsl
sbb
sub
or
sbb
inc
or
std
cli
dec
lock
and
ret
stc
push
add
xor
cmp
and
pop
sub
xchg
movsb
inc
sub
adc
es
jns
xlat
pusha
xor
push
aad
ret
pop
sbb
pop
and
movsl
out
popf
cld
icebp
mov
and
push
add
stos
in
repz
or
or
movsl
cmp
add
int3
adc
aam
mov
mov
push
daa
mov
ret
es
mov
or
daa
aas
imul
test
jmp
mov
push
insl
idivl
add
andl
jb
or
adc
mov
andb
movsl
push
or
std
stc
and
rcrl
movsl
add
xchg
sub
rorl
dec
mov
insb
ds
sbb
insl
pushf
push
xchg
nop
mov
sub
clc
sub
push
push
fdivrl
mov
inc
sbb
jne
je
xchg
cmp
push
cwtl
and
and
adc
adc
inc
pop
and
add
dec
rclb
add
cs
std
adcb
test
adc
fadd
add
and
and
sbb
aad
adc
into
adc
jo
mov
or
hlt
lock
popa
ret
sbb
cmp
add
push
fdivrl
inc
stos
movsb
fdivrl
nop
push
inc
imul
arpl
mov
jne
and
mov
mov
incl
xor
or
mov
mov
or
nop
push
inc
andl
ret
sub
ljmp
adc
push
pop
push
xchg
pop
setnp
nop
push
and
push
pop
or
loope
inc
in
or
jno
mov
add
cmp
push
fs
iret
mov
inc
or
push
and
cmp
add
jp
sub
sbb
and
adc
xor
bound
js
push
ss
and
pusha
cwtl
les
roll
and
add
movzwl
add
adc
popa
xor
sbb
pop
or
test
sub
sbb
dec
loope
or
or
xor
pop
jb
dec
mov
xor
movsb
sub
mov
or
daa
punpcklwd
jne
xor
mov
adc
insb
jnp
call
inc
jo
mov
loopne
cltd
push
invd
cmp
cltd
cmp
imulb
into
mov
in
loope
sbb
dec
mov
or
xor
pop
sahf
dec
mov
imul
ljmp
xor
cmp
push
test
pusha
sub
movsl
fstpl
jbe
imul
clc
imul
push
sbb
enter
adc
xor
lea
in
mov
and
adc
loopne
enter
repnz
or
push
into
daa
leave
lods
and
jle
mov
add
jb
icebp
mov
and
inc
or
or
xor
mov
insl
adc
push
adc
add
les
xchg
clc
mov
jno
push
mov
pop
push
pop
adc
push
xchg
pop
mov
mov
dec
xor
mov
and
xor
mov
pushf
add
dec
xchg
pop
jno
sbb
or
jo
cmp
adc
lea
lcall
pop
xorb
xchg
mov
adc
jae
filds
repnz
bound
out
or
xor
sbb
add
inc
lcall
jmp
fwait
add
sbb
and
sbb
xchg
js
push
mov
loopne
cwtl
adcl
inc
jp
aaa
jno
add
xor
jno
adc
adc
xchg
nop
adc
add
sub
push
jl
es
fildl
xlat
jge
or
xor
pusha
enter
cmp
mov
sbb
and
adc
mov
xor
hlt
inc
sub
fldcw
dec
ds
nop
addr16
xor
gs
jno
gs
add
sbb
push
pop
shr
cmp
in
scas
inc
pop
and
fcoml
lea
mov
aaa
rcrl
add
sub
dec
adc
loop
nop
les
pop
jmp
mov
add
loope
xchg
jbe
or
dec
inc
add
loopne
jge
mov
mov
mov
pop
cwtl
sahf
xchg
adc
cmp
inc
push
je
test
ja
xadd
rcl
push
in
aam
stos
and
ret
insl
sbb
movsl
enter
jne
dec
imul
mov
push
or
adcb
and
repz
add
adc
sbb
push
cmp
inc
sbb
outsb
out
sbb
add
pop
push
xchg
add
addr16
push
cmp
add
or
das
pop
cld
cs
or
push
sub
inc
dec
dec
pop
jns
fmuls
add
push
mov
jl
fildll
jne
mov
test
lea
ja
lds
mov
in
sbb
mov
or
je
ss
jp
inc
jge
pop
push
and
stos
xchg
jne
jmp
movsb
imul
xchg
cmpsl
cmc
add
and
pop
xchg
pushf
add
adc
adc
mov
inc
dec
adc
test
mov
inc
and
mov
push
addl
inc
and
inc
pushf
or
xchg
add
test
dec
test
pushf
out
sub
test
sbb
adc
or
jle
cwtl
adc
push
test
add
fnstsw
mov
rclb
push
sbb
ja
xor
cltd
add
pop
hlt
add
es
out
xorl
je
lahf
xor
pop
ds
pop
mov
inc
je
push
inc
adc
sbb
adc
add
jg
mov
pop
sub
sbb
or
fwait
imul
lea
movsl
and
int
adc
call
and
or
sbb
pop
mov
sub
sbb
pusha
sbb
addb
stos
fadds
mov
pop
mov
loope
sub
mov
push
xorl
hlt
cmp
mov
add
mov
and
loopne
or
fstp
cvtdq2ps
and
out
push
pop
sub
xchg
mov
and
inc
pusha
dec
movsl
cmp
xorl
inc
adc
add
test
ret
xor
sbb
js
mov
dec
lods
add
repnz
into
push
xchg
das
push
add
add
mov
xchg
out
add
add
sub
mov
imull
movsb
lea
inc
push
jle
loop
add
jne
das
fcom
insl
sub
add
mov
into
jg
push
add
cmp
pop
ret
insb
mov
pop
pop
test
dec
mov
fstl
aas
je
adc
jne
mov
int
or
cmp
test
gs
cltd
cmovne
and
push
pop
insb
jle
ret
xor
bound
loopne
inc
lods
addl
lret
xor
sbb
push
mov
mov
lods
sub
imul
xchg
or
push
push
inc
mov
sti
add
push
pop
push
push
mov
inc
mov
ret
xchg
ret
add
lock
or
pop
fldcw
test
leave
imul
dec
push
mov
lcall
lret
pusha
mov
rol
mov
pushw
mov
pop
xorb
push
test
xor
sbb
adc
or
fstl
outsb
dec
jnp
mov
lods
dec
xor
call
mov
jmp
push
sub
xor
subb
adc
adc
push
adc
xor
pushf
mov
data16
mov
mov
sub
insb
iret
sub
fcoml
loope
les
pop
xor
pop
jb
iret
push
sub
lea
push
sbb
mov
sub
insb
xchg
and
mov
cmp
cs
hlt
loop
pop
add
loope
or
in
cmp
jge
nop
adc
je
jecxz
xchg
xor
mov
mov
xchg
dec
cmp
adc
xor
cmpsl
cmp
test
lret
sub
outsl
lcall
out
fwait
mov
fisubs
ja
repnz
sbb
lret
adc
sbb
or
popf
daa
mov
adc
cli
cmpsl
and
push
outsb
ss
pop
adc
mov
imul
std
mov
push
xor
xchg
mov
mov
das
pop
sub
stos
pop
xor
inc
int
mov
pop
dec
xchg
sbb
arpl
sub
pop
add
pop
call
mov
inc
adc
repnz
test
push
pop
in
add
mov
and
sub
xchg
or
clc
pop
push
mov
rcll
leave
pop
imul
in
push
test
or
iret
sbb
add
in
inc
lods
fiaddl
inc
xchg
mov
movl
insb
or
ja
inc
popf
adc
das
push
aas
int3
mov
inc
adc
imul
and
add
and
cmp
testb
and
sub
cmp
and
adc
push
cmp
dec
jae
add
push
add
sbb
mov
inc
pop
lcall
arpl
xlat
stos
dec
dec
mov
adc
inc
adc
inc
or
movsl
sub
pop
ret
mov
addr16
cmpsb
rol
pop
cmpb
add
loop
add
das
sbb
mov
jne
fisttpll
push
push
inc
cli
and
fisubrl
int
data16
lea
fsubs
mov
inc
cwtl
stos
imul
call
in
test
fwait
pop
mov
ds
xor
ss
and
add
cmpl
xor
je
push
std
sub
xchg
dec
and
jg
mov
push
cmp
push
cmp
jle
cmp
jp
push
cmp
fisttps
push
cmp
mov
mov
push
add
inc
jmp
cmc
daa
or
push
data16
pop
add
insb
loope
fbstp
or
jg
or
fwait
inc
or
fs
pop
idiv
sbb
fisubrl
add
adc
imul
in
adc
adc
mov
test
mov
cs
rorb
imul
fstps
add
inc
xchg
xor
push
push
hlt
xor
and
jbe
repz
mov
dec
fdivrs
or
pop
insl
enter
popf
lock
sbb
and
je
or
iret
adc
adc
or
adc
xchg
sub
inc
mov
int
je
stos
cmp
push
mov
xor
sub
ds
out
adcb
mov
xchg
lret
add
adc
add
and
sbb
jo
inc
jo
popf
adc
in
dec
sub
ret
imul
pop
sub
push
ret
sbb
adc
or
xorb
insl
add
adc
movsb
or
dec
add
in
addr16
push
ror
dec
leave
add
sbb
dec
pushf
leave
je
out
loopne
pop
pop
jl
outsl
loopne
inc
jl
rorl
daa
cltd
movsl
adc
fistpl
add
push
data16
dec
pop
mov
dec
push
sub
nop
xchg
adc
mov
mov
adc
sbb
sbb
inc
enter
popf
push
push
inc
or
add
and
mov
adc
xchg
inc
leave
gs
xor
and
add
and
ss
enter
aas
sbb
in
push
dec
adc
add
inc
sub
xchg
cmc
jg
push
rcrb
xchg
jecxz
sbb
sbb
sbb
popa
insb
xchg
mov
mov
add
push
fcoms
inc
fwait
aas
inc
mov
es
fcoml
and
mov
outsb
and
cmp
jmp
mov
rcr
fiadds
adcl
ljmp
movsb
and
xor
sbb
cmpsl
pop
adc
arpl
lods
cmpsl
std
cmp
xor
and
lcall
push
pop
push
and
add
and
add
enter
push
add
and
xchg
mov
adc
adc
rolb
mov
or
add
lret
jne
xor
add
add
push
loope
push
adc
loopne
push
mov
xchg
test
adc
sbb
jns
fdivs
push
dec
sbb
and
sbbb
dec
or
push
or
lods
aad
repz
xlat
test
inc
adcb
xchg
mov
out
loopne
ret
sbb
shl
jo
roll
mov
and
sti
cmpsb
push
adc
inc
sbb
adc
jo
jb
add
xchg
icebp
push
cmp
or
add
and
inc
aaa
jl
and
jne
lea
add
pusha
inc
sub
push
out
jmp
cmp
inc
insb
arpl
xchg
dec
adc
test
inc
aas
nop
add
mov
movb
cmpsl
sbbl
imul
add
pop
lods
push
add
aaa
and
fwait
adc
add
xchg
sbb
dec
leave
xchg
fiadds
or
inc
jno
adc
icebp
leave
stos
sbb
mov
xchg
fucomp
sub
or
pminsw
shlb
mov
outsl
mov
cwtl
jp
sbb
add
push
repz
mov
xor
add
dec
aaa
ss
cmc
inc
clc
sbb
and
xchg
or
and
std
inc
fs
pop
inc
and
sbb
add
aam
add
or
push
adc
inc
ror
mov
pop
les
adc
gs
addr16
pop
in
push
popa
stos
in
test
jne
stc
lea
rol
push
pop
cmp
xchg
mov
sbb
pop
add
ret
adc
hlt
pop
fstpt
fildl
add
mov
jo
loope
inc
add
dec
dec
pusha
inc
dec
or
dec
sbb
cmp
pop
xchg
jl
add
repz
pop
push
mov
and
jnp
push
mov
xchg
jg
shl
jg
adc
ret
lods
lods
popa
xor
adc
jmp
inc
mov
sub
pop
pop
add
xor
mov
imul
nop
or
adc
push
aad
push
lea
mov
jb
and
adc
fcmovnb
and
daa
xor
lods
in
and
ffreep
jecxz
add
roll
ret
ret
adc
push
sti
and
insl
pop
push
cmp
ja
add
movl
or
fisubl
andb
push
xor
rcrb
stos
or
out
add
pop
push
mov
popa
negl
pop
loop
pop
mov
outsb
or
sub
xchg
call
je
cltd
fstpl
mov
test
lock
out
inc
je
sbb
call
push
xchg
push
fldl
outsl
xchg
jp
sbb
dec
sbb
sbb
rcr
or
mov
fstpl
mov
mov
mov
sti
lods
std
js
pop
or
adc
js
jmp
pop
fsub
pop
fsubrp
adc
int3
pop
jo
decl
sbb
pop
mov
push
movl
nop
mov
push
add
cmp
lret
pop
jb
scas
sub
mov
mov
adc
xchg
jbe
fimull
shll
roll
jns
stc
jge
or
or
out
or
fidivs
mov
push
pop
call
pusha
mov
pop
into
and
xchg
mov
sbb
dec
iret
jns
push
pop
leave
inc
mov
push
rcr
orl
xchg
jo
and
cmp
pop
test
arpl
sbb
cmovle
sub
andl
adc
add
and
mov
imul
mov
mov
mov
sbb
jnp
mov
data16
xor
add
es
xchg
decb
jb
stos
xor
shld
add
or
test
sbb
lea
push
mov
jns
push
and
popa
imul
je
or
push
mov
push
adc
push
push
inc
inc
inc
pop
add
or
or
cli
loope
adc
data16
push
testb
pop
scas
and
movsb
leave
leave
add
rcr
pop
or
rolb
test
mov
pusha
push
mov
arpl
jne
jbe
and
ja
push
adc
rcrl
xor
or
das
subb
imul
sbb
cmpw
jne
jle
lods
aaa
mov
cld
cmp
stos
cld
mov
push
jge
mov
sbb
pop
xchg
lea
cmp
or
adc
sbb
leave
out
data16
lahf
movsb
imul
push
cwtl
dec
jo
push
push
movzwl
loope
push
dec
inc
xlat
push
dec
in
adc
push
ret
mov
or
add
ja
push
pop
add
add
test
mov
adc
push
sbb
insl
jecxz
fbld
sbb
mov
jle
movsl
andb
aad
lods
adc
mov
cmc
insl
loope
adc
pushw
int
inc
dec
pusha
lret
pop
xchg
add
in
subl
jno
mov
cs
inc
or
popl
aaa
or
push
push
mov
mov
ret
pop
scas
pusha
lea
lds
cmp
mov
adc
shlb
xchg
xchg
add
jb
adc
sbb
jl
lock
xor
nop
pushw
push
push
fiadds
xchg
addr16
adc
add
mov
xchg
imul
xchg
adcb
xchg
or
lds
int3
cmp
je
mov
gs
lret
cli
push
pop
lds
adcl
fsubrs
sbb
cmp
pop
xchg
lods
je
addl
cwtl
push
fisubl
pop
push
xchg
sti
pop
je
out
into
jb
jns
cmp
fcompl
add
mov
das
xorb
and
mov
xchg
xor
mov
lcall
xchg
mov
add
mov
fcom
and
mov
adc
nop
mov
ret
or
sbb
ret
pop
or
inc
imul
or
test
test
mov
mov
sbb
xor
push
bound
outsb
pop
push
push
aas
cmp
adc
and
ret
lods
xor
dec
and
push
dec
sbb
ss
and
je
and
push
adc
cmp
add
ret
cs
orb
or
fstp
push
add
pop
xchg
jo
movsl
movsl
movsb
es
or
les
shll
test
mov
adc
push
ljmp
call
inc
fadds
ret
mov
hlt
shll
orb
test
jge
repnz
jno
mov
sbb
data16
inc
outsl
mov
jecxz
mov
icebp
testl
inc
mov
push
and
jne
dec
jae
and
int3
and
sbb
sbb
ret
aam
adc
test
adc
movsb
jl
mov
or
and
or
fisttpll
adc
adc
dec
call
fsubrs
cld
mov
or
push
mov
add
mov
mov
jmp
in
rcr
cmp
lcall
jmp
mov
dec
add
mov
and
mov
jmp
clc
out
out
jmp
in
scas
push
int
mov
push
jmp
push
adc
and
pop
pop
xchg
jmp
dec
xchg
sbb
les
stc
jl
fists
ja
dec
or
push
add
repz
adc
add
movsb
insl
xchg
mov
sbb
addb
pop
sub
push
sbb
int3
push
aas
add
dec
push
pop
cmp
xchg
xor
movsb
aas
cld
in
and
jne
cmp
dec
daa
jo
ja
xchg
push
mov
jbe
dec
hlt
dec
adc
cmp
jbe
xchg
fs
addr16
jl
cwtl
daa
sbb
dec
movsl
les
inc
pop
sbb
add
dec
test
jbe
or
push
aas
jo
push
sub
adc
imul
jbe
lock
jg
sub
push
aad
movsl
sti
cmpsl
push
adc
push
imul
add
push
iret
repz
mov
cmp
repz
rcr
loope
jns
repz
das
cmp
jns
out
push
popa
insl
ja
out
sahf
orl
mov
repz
out
call
adc
pop
repnz
sub
cmp
jp
insl
push
sbb
xor
aad
sub
stos
dec
cmp
cmpsb
push
mov
add
and
cmp
pop
sbb
addr16
mov
rorl
sub
mov
push
add
add
shll
dec
adc
mov
je
insb
sub
fwait
jmp
jl
mov
sub
mov
lock
pushf
push
jae
mov
push
out
movsb
mov
push
gs
nop
rorl
fcompl
jb
jg
push
nop
faddl
jp
test
add
mov
fsubl
cmp
add
lret
and
shll
ret
mov
xchg
and
pop
dec
sar
dec
pushl
dec
xor
xchg
sti
sahf
xchg
fwait
stos
push
dec
test
add
adc
cmpsl
es
add
jne
sarb
or
add
cmpb
jnp
jo
vmread
mov
mov
push
mov
push
cmpl
sub
push
xchg
dec
jge
add
push
push
mov
adc
bnd
or
shrb
add
and
push
push
mov
mov
xchg
call
push
gs
push
or
mov
sub
sbb
sbb
or
jae
sub
cltd
rorb
bound
adc
adc
and
push
xor
sub
xor
cli
stos
pop
xor
inc
cmp
or
mov
orl
sbb
add
fisubl
faddl
add
fists
lret
test
arpl
lahf
and
or
add
adc
stos
adc
pusha
mov
pop
mov
mov
push
inc
xchg
and
mov
and
push
push
les
inc
rol
sbb
inc
sbb
les
jl
gs
adc
mov
call
and
mov
mov
loop
mov
sub
lods
pusha
dec
sub
outsb
and
pop
xor
add
jl
mov
and
sarb
adc
icebp
push
sbb
mov
ds
push
stos
pop
xor
in
shrl
stos
mov
pop
les
divb
sub
jge
das
jle
negb
push
arpl
adc
sub
xor
add
fiadds
dec
dec
push
jns
xor
xor
cmp
sarb
stc
xor
fwait
xor
and
lcall
enter
lcall
dec
lcall
dec
lcall
dec
lcall
ss
mov
imul
mov
pop
int3
jl
test
hlt
mov
push
cld
mov
shlb
lret
enter
cmp
pop
je
movsb
dec
dec
test
sbb
push
inc
pushf
mov
dec
mov
lock
mov
js
pop
pop
sbb
stos
jb
cmp
dec
sub
movsb
bnd
pop
push
jb
mov
sbb
sbb
jae
and
popa
inc
addr16
orl
int3
sbb
and
mov
add
and
xchg
xchg
jns
sbb
and
ljmp
sub
cmpsl
pushf
addr16
mov
adc
notb
repnz
jmp
js
or
adc
stos
push
inc
cmpl
and
cmp
mov
pop
push
dec
imul
inc
sahf
inc
movsl
out
xchg
or
pop
lock
sbb
orl
pop
rorl
mov
lea
test
rorl
sub
bnd
scas
push
mov
cmp
int3
push
pusha
dec
cmp
inc
mov
cmpsl
pop
jmp
fwait
nop
movsb
aas
pop
test
es
jl
cwtl
test
fwait
push
aas
test
ds
es
in
inc
in
aaa
loope
loope
orl
jmp
or
sbb
adc
rcrb
repnz
inc
mov
movsl
rcll
inc
das
xor
push
inc
push
add
pop
xchg
out
xchg
sub
xchg
jle
adc
jge
movsb
rcrb
lods
movsb
popa
add
and
aaa
dec
jne
pop
pop
test
dec
or
js
add
je
or
scas
or
in
jo
jmp
push
sub
sbb
ss
and
into
jecxz
inc
popa
and
popa
xchg
pop
dec
bound
popf
and
adc
out
xchg
out
add
dec
dec
add
std
repz
jge
test
xchg
lock
int3
ret
xchg
or
add
push
push
push
mov
jp
lods
imull
nop
mov
addr16
fistpl
outsb
xor
xchg
rorb
xchg
adc
pushf
aas
in
shlb
sti
jb
add
xor
sahf
outsl
lds
xor
orb
std
loopne
arpl
sbb
data16
test
inc
call
push
dec
imul
nop
hlt
or
and
jo
and
xchg
fcomps
jecxz
sbb
cmp
cs
ret
dec
iret
mov
sahf
fmull
or
push
rcrb
cmp
mov
mov
jns
jns
pop
mov
imul
in
sub
and
pop
aam
cmp
adc
pop
mov
dec
stc
add
and
mov
sbb
adc
jl
icebp
xor
dec
fistl
enter
adc
test
mov
push
pop
xchg
dec
fidivl
cwtl
sbb
fcoms
je
xchg
notb
dec
sbb
xor
sbb
xor
push
mov
jl
test
sbbb
movsb
pop
mov
pop
push
pop
push
imul
dec
and
ss
jne
pop
addb
leave
int
adcl
lods
inc
sbb
mov
and
es
cmpsl
ja
imul
movsb
lcall
nop
lds
adc
sarb
rclb
test
je
dec
xor
ljmp
mov
cwtl
nop
xorl
cmp
pusha
add
xchg
and
or
or
pop
pusha
push
pop
leave
das
add
fdiv
popa
sub
in
in
movsl
adcl
jae
xor
int
mov
dec
aas
or
push
add
sub
std
mov
mov
xchg
sbb
inc
xchg
jno
add
push
lahf
lock
inc
fadd
push
add
mov
pop
movsl
push
ja
cmp
push
sbb
cwtl
sarl
xor
push
sbb
imul
cmp
inc
setl
pop
les
in
xor
test
mov
push
xchg
pop
jbe
sbb
sub
nop
loopne
mov
push
ljmp
xor
stos
adc
adc
inc
jmp
test
mov
call
or
pop
xor
and
call
stos
jae
ret
adc
fs
adc
int
and
adcl
mov
pushl
movsl
ds
ret
movsl
and
pop
inc
push
pushl
shr
mov
pop
fists
jne
xchg
adc
push
pop
dec
mov
add
js
cmovl
mov
mov
mov
test
cli
andb
sbb
jmp
xchg
jmp
dec
scas
push
push
or
jo
inc
pop
push
mov
loop
dec
fwait
and
cmp
loopne
ss
pop
push
xchg
and
sub
pop
cmpsb
or
push
adc
rorb
xchg
out
movsb
es
or
xlat
sub
add
lods
push
sub
push
jmp
mov
in
add
dec
pop
sub
lods
mov
addr16
je
xlat
sub
add
rolb
xorb
jl
or
aam
jo
into
mov
mov
sub
dec
rolb
pop
push
movsb
repnz
mov
sbbl
and
and
and
and
sbb
out
int3
xchg
pop
xor
push
sbb
sbb
sbb
pop
jb
sbb
adcl
and
rolb
xor
adc
adc
cmp
push
test
loopne,pn
jo
pop
adc
rcrb
mov
xor
or
scas
into
fchs
xchg
ror
push
clc
pop
fisubrl
aam
ss
cs
sbb
pop
ret
or
fcmove
inc
cmp
int
add
xchg
stos
lret
push
movsb
loope
clc
mov
lock
add
xchg
daa
lea
inc
cmp
ret
adc
dec
psadbw
or
dec
mov
sahf
cmp
pop
test
or
popl
dec
push
mov
ret
sahf
jo
cltd
or
dec
shr
mov
hlt
out
xchg
mov
cmp
jbe
sub
mov
sbb
loopne
push
pop
push
jmp
adc
fwait
add
push
rclb
into
mov
lret
mov
inc
pop
jl
fnstenv
movsl
xchg
sub
fs
sahf
xchg
or
cmp
jl
js
cmpsl
movsl
add
cmp
nop
push
es
jg
cmp
push
xchg
pusha
mov
je
push
push
inc
faddl
clc
addr16
bswap
dec
leave
push
das
sub
out
aad
outsb
jb
mov
jg
and
imul
lods
sbb
addl
xchg
pop
and
jl
iret
inc
xchg
or
js
hlt
icebp
fisttps
xor
pop
cmp
loopne
sbb
xlat
jbe
mov
sti
dec
add
xchg
cmp
jne
inc
fs
dec
sub
cmpb
adc
dec
push
hlt
adc
popa
insb
test
push
or
iret
jne
pop
jnp
adc
fiadds
repz
jae
adc
add
nop
cmp
push
mov
iret
je
mov
dec
shll
loope
shr
scas
fld
mov
mov
rclb
je
fstps
test
pop
test
jp
xor
add
adc
pop
out
push
pop
cwtl
test
emms
inc
test
fs
jae
ret
arpl
aaa
xchg
cltd
xlat
aad
dec
or
movsb
inc
ds
imul
mov
push
rcr
jb
adc
inc
outsl
push
daa
pop
push
add
dec
mov
mov
mov
test
push
pusha
or
or
or
push
shrb
imul
pushl
push
jae
faddp
sbb
lds
outsb
mov
loop
int
in
test
add
outsb
add
xor
or
jae
pop
in
or
add
dec
ds
xchg
add
aad
imul
xchg
in
pushl
jmp
cmp
jl
or
dec
int
je
cmp
or
and
mov
movb
movsbl
out
mov
add
xchg
cmp
add
pop
insb
xchg
test
dec
add
jne
pop
adc
test
shlb
fwait
xor
xor
pop
inc
push
mov
bound
cs
inc
sbb
sub
push
add
loopne
and
cmp
fcmovb
mov
daa
out
insb
inc
sub
push
repz
mov
lret
jns
repnz
popa
lcall
adc
add
push
ror
stos
in
add
shlb
sti
or
mov
shrb
rorl
dec
sbb
mov
xor
push
pop
mov
cmp
je
dec
and
or
or
sbb
pop
gs
mov
jmp
ja
push
stos
cmpsb
dec
mov
and
inc
pop
pop
xchg
pop
in
out
jmp
sub
cmp
es
jg
lret
lock
cmp
pop
adc
shrb
lods
in
mov
js
pop
mov
loop
leave
push
add
jns
imul
mov
pop
loop
or
jbe
loope
loopne
add
imul
xchg
xchg
fcoms
add
pop
inc
dec
filds
sub
sub
dec
adc
daa
inc
push
aaa
and
xchg
sbb
add
gs
loope
sbb
inc
mov
push
or
sbb
xor
scas
shll
movb
leave
dec
dec
cwtl
scas
dec
jmp
fcoml
mov
xchg
push
push
lods
cmpsl
mov
sarb
repz
jns
lahf
outsb
sbb
fisttps
xor
push
les
adc
inc
cld
xchg
loopne
fcomps
xchg
inc
test
cmp
pop
jne
cmp
pop
or
add
iret
popf
mov
xchg
mov
mov
inc
aam
mov
dec
inc
movsb
or
sub
popa
nop
xchg
xchg
test
pop
call
mov
movsb
and
sub
mov
jmp
movsb
arpl
or
stos
stos
xchg
add
jmp
loope
pop
mov
shlb
addb
nopl
mov
inc
and
dec
out
and
or
push
inc
fmull
adc
sti
xchg
hlt
call
inc
sbb
jmp
push
jo
push
push
lcall
dec
jge
jmp
movb
ret
lcall
ja
call
lods
aam
lea
leave
bndldx
shlb
dec
ret
jnp
rol
movsb
adcl
xchg
xor
and
mov
mov
add
add
sub
testl
and
sbb
sbb
cmp
popa
xchg
or
and
jmp
das
add
orb
dec
add
out
test
cmp
pop
lods
adc
ret
jp
xor
in
cmpsl
je
stos
mov
std
dec
frstor
xchg
lock
push
dec
push
sub
pop
cmp
fistl
push
sub
xchg
xor
xor
jmp
les
push
pop
je
push
les
das
push
ds
ljmp
mov
aaa
dec
sbb
jmp
nop
or
inc
packsswb
inc
shr
mov
test
add
ss
push
pop
or
jmp
jge
ret
xchg
mov
pusha
push
mov
dec
jg
adc
in
ret
test
dec
ljmp
push
jg
inc
add
jne
je
inc
scas
and
push
push
cmp
jl
push
test
js
nopl
cltd
jle
hlt
add
sub
xchg
lods
jecxz
into
inc
loopne
jmp
xchg
mov
add
out
sub
and
je
movl
rolb
fs
push
enter
xor
mov
xor
xor
pop
insb
loopne
insb
adc
movsb
je
divl
inc
lock
lea
mov
mov
sbb
inc
jne
sub
push
lcall
jo
stos
xchg
add
cmp
daa
orb
in
fmull
add
xchg
rcrb
jl
call
rdtsc
xor
enter
push
or
in
mov
xor
enter
nop
xchg
in
push
dec
clc
inc
das
je
jge
test
xchg
lahf
lea
xor
xor
dec
es
outsl
das
mov
inc
sahf
fsub
sti
cmp
dec
in
cmp
test
shrl
call
fadds
jne
xchg
shll
jl
pop
cli
gs
xchg
sti
mov
sbb
push
add
sub
pop
lods
dec
fistl
sbb
shlb
or
in
push
inc
cmp
jno
cmp
push
lea
xor
sbb
ret
popa
sbb
jecxz
push
or
stos
xchg
xor
out
lret
imul
jmp
jmp
adc
adc
or
cli
std
inc
ds
push
cmp
mov
mov
mov
jle
test
outsl
insb
mov
or
stos
mov
inc
add
inc
or
dec
cmp
dec
notb
and
sbb
sub
pop
add
test
jge
inc
sbb
jno
out
inc
add
mov
and
sbbl
and
mov
xchg
xchg
stos
js
loopne
sbb
orb
clc
mov
inc
data16
cmp
ja
adc
adc
jne
daa
bnd
adc
sahf
lahf
or
jne
or
jne
or
add
mov
mov
test
cwtl
js
pop
mov
or
mov
cli
adc
push
lea
fdivrl
lock
fdivrl
jae
dec
mov
insb
inc
pop
xor
push
jl
lods
mov
les
dec
mov
mov
repnz
lea
pop
lea
and
dec
mov
lcall
or
pop
aam
push
ffree
fsts
mov
adc
fimull
sub
sbb
inc
pushf
inc
mov
dec
pop
addr16
cmc
int3
imul
push
cmc
jae
je
sub
jne
adc
xor
adc
push
lret
imul
adc
or
sub
fcom
loopne
shlb
sti
mov
adc
adc
pop
push
xchg
rorl
sub
fwait
cmp
xor
es
sbb
ss
cwtl
fwait
lock
inc
inc
loopne
nop
shrl
lock
xor
mov
sub
and
orl
incl
pusha
shr
sub
xchg
push
pop
pop
mov
xchg
xchg
xchg
fs
stos
push
mov
push
jne
jl
xor
xor
fs
lock
xor
pushl
out
inc
addr16
mov
mov
mov
arpl
cmp
pop
arpl
xchg
inc
or
adc
push
xor
loopne
data16
pop
cwtl
data16
pop
mov
pusha
jae
adc
loopne
or
ja
inc
not
fmuls
rorb
int3
or
into
inc
or
push
pop
and
test
loop,pn
shl
arpl
add
add
and
dec
das
jns
addr16
iret
add
jno
or
iret
cmp
or
mov
sub
mov
shlb
xchg
inc
fcompl
cmp
int
lods
int
fwait
push
pushl
xchg
jge
mov
adc
sub
xchg
xor
sbb
mov
mov
insl
xchg
sbb
mov
orl
testl
jo
movsl
mov
je
js
es
xchg
dec
test
push
mov
and
cmp
push
xchg
pusha
sbb
jecxz
or
push
dec
jmp
add
mov
mov
test
test
mov
adc
mov
stos
xor
je
adc
cmp
repnz
nop
outsl
nopl
cld
pop
adc
nop
fldln2
in
and
dec
push
cltd
inc
adc
and
jbe
and
lds
enter
sub
fsubl
es
sub
pop
xor
pop
or
dec
es
push
adc
dec
xor
leave
cmp
in
inc
sub
in
and
adc
dec
and
rorl
inc
lea
adc
in
or
or
and
and
shlb
arpl
stc
daa
in
or
sub
xor
nop
cmpsb
aaa
mov
add
rolb
push
lea
aam
mov
add
lret
mov
or
adc
push
xchg
or
rcl
sbb
mov
movsb
cltd
add
add
sbb
sahf
cmpsb
adc
xchg
mov
mov
sti
xor
and
xchg
adc
jl
rcll
hlt
jo
dec
fdivl
or
pop
adc
sub
jle
dec
js
jp
hlt
jg
mov
or
mov
lea
adc
add
xchg
inc
sbb
fcoml
sbb
pop
loope
jne
xor
movsb
mov
test
outsl
mov
jne
movsb
cs
mov
test
mov
sbb
inc
fcmovnbe
and
test
inc
adc
adc
add
pop
or
shlb
ret
iret
test
in
movsb
popf
in
les
or
cmp
jne
sub
in
call
cwtl
add
or
add
repz
das
jb
popa
push
int
inc
sub
add
adcb
lods
dec
int
push
stos
lea
lds
jecxz
mov
cmp
sub
pop
push
lock
fdivl
inc
mov
xor
mov
or
and
loopne
lock
je
imul
adc
mov
and
mov
push
call
and
std
mov
stos
pop
psubusb
push
xchg
add
or
push
sbb
ret
xchg
jne
fadd
xchg
and
mov
sbb
test
mov
clts
scas
add
add
inc
cld
and
fcoml
or
push
add
jne
pop
mov
inc
cmpsl
stos
mov
mov
and
jne
sub
add
jmp
sub
pushf
and
or
adc
mov
sub
adc
sbb
push
xor
bound
xor
arpl
adc
push
dec
call
mov
push
xchg
in
dec
ret
mov
orb
xor
jmp
icebp
add
xchg
mov
das
or
push
push
push
pop
add
inc
enter
lcall
js
sub
dec
cld
pop
push
subb
cmp
adc
stos
cmp
add
jle
jno
mov
add
add
in
mov
mov
scas
mov
loopne,pn
inc
jnp
lea
pop
add
push
inc
fbstp
adc
jecxz
in
mov
inc
fcompl
aad
adc
mov
lds
push
mov
pop
call
cmpsl
das
cltd
pop
jmp
out
je
xchg
push
and
call
adc
fisubrl
pusha
mov
shlb
adc
sub
jne
nop
or
and
out
add
push
add
fdivrs
push
push
fisttps
add
and
scas
gs
out
je
mov
cmp
xchg
popf
mov
push
stc
mov
cmpsb
sahf
push
cmpb
xor
fs
xchg
or
or
rolb
mov
fistpl
or
inc
push
or
xor
push
movsl
shlb
lahf
cmp
add
es
adc
sbb
nop
mov
push
inc
inc
sub
add
push
add
sub
sbb
mov
push
push
aas
pop
push
xchg
stos
adc
in
or
mov
xchg
icebp
add
test
ljmp
das
mov
pop
adc
jo
jb
jno
mov
lret
and
jl
insl
adc
je
movsl
ja
and
xor
or
or
xor
cmp
je
nop
in
mov
adc
rolb
sbb
sete
cmpsb
mov
adc
push
xlat
sbb
jle
cmpb
pop
mov
cmp
add
js
hlt
jae
pop
shrb
rorb
mov
sbb
repz
mov
sbb
or
es
sub
sbb
pop
jmp
mov
push
das
add
lea
and
dec
inc
loopne
jmp
jl
dec
jmp
shl
or
add
inc
cmp
jl
jg
pop
add
jne
add
cltd
adcl
add
sar
add
mov
hlt
clc
xor
mov
sub
cmp
jecxz
sbb
push
std
or
lret
shr
xor
mov
lds
dec
jne
fs
xor
pop
pop
sahf
or
cmp
loopne,pn
cmp
pop
push
lea
bound
stc
sbb
mov
imul
mov
ret
or
mov
lcall
mov
ret
roll
mov
mov
dec
std
sbb
jl
repnz
jle
movsl
mov
mov
inc
mov
mov
mov
cli
js
inc
mov
add
dec
jne
enter
ret
aas
loope
adc
stc
xor
test
mov
aam
repnz
add
aaa
lahf
push
ret
or
pop
adc
xor
adc
jmp
jb
jp
stos
pop
mov
cmp
rolb
or
aam
sbb
jae
pop
jbe
xchg
push
jnp
cmpsl
or
loopne
xor
cmc
in
push
xor
cs
or
int3
fcom
adc
sub
mov
xchg
xor
sbb
or
add
mov
xchg
ret
bound
xor
add
mov
scas
add
pop
push
jmp
mov
cltd
jle
nop
scas
nop
aam
cld
mov
push
push
add
jp
mov
mov
ret
rcrl
pop
pop
pop
enter
pop
add
jmp
cmp
movsb
jmp
in
insb
xor
cmp
inc
mov
add
enter
add
add
jae
mov
cmp
add
lds
add
les
fiaddl
sub
jo
js
inc
push
ret
add
pop
ss
in
mov
jns
push
push
xchg
mov
ror
add
jmp
lods
in
sbb
sbb
dec
jle
adc
pop
xchg
dec
rorb
ret
xor
xor
shl
sahf
cmp
mov
inc
iret
push
lcall
addb
cmp
sub
ds
repnz
hlt
jmp
mov
outsl
popa
dec
pop
inc
cmp
mov
and
dec
mov
addr16
popf
dec
sub
and
or
push
stos
mov
stc
or
ja
dec
push
scas
mov
mov
rcl
pop
rcrb
mov
mov
adc
add
arpl
std
xchg
xorl
je
daa
push
pop
adc
roll
or
push
push
call
popf
adc
pop
leave
ja
insl
adc
aam
scas
pop
sub
movsb
lock
mov
push
xor
aam
inc
mov
scas
dec
mov
push
push
sub
fsubs
cmp
cld
mov
push
jmp
mov
call
dec
inc
add
push
cmc
push
pop
rolb
dec
jae
jns
cmp
xor
add
int3
int3
pop
jno
mov
mov
sbb
jno
cmp
lcall
adc
mov
dec
add
push
sbb
cmpsb
je
test
jecxz
adc
test
pop
fld
shrb
bound
mov
xor
enter
push
jae
jae
xor
inc
add
mov
adc
cmp
and
xchg
sbb
and
xchg
adc
popa
xchg
pop
or
cmp
push
push
pop
dec
out
push
jnp
jo
mov
pop
cmp
fsubrl
cwtl
loopne
adc
jge
mov
add
push
jmp
sbb
cld
in
je
cmp
daa
movsbl
shl
call
ret
mov
mov
test
add
mov
test
bound
sbb
sbb
movb
pop
and
or
xor
nop
lret
add
in
pop
or
mov
xchg
cmp
sarl
and
push
rolb
orl
mov
cmp
roll
lahf
pop
jae
clc
imul
inc
es
das
ds
fs
sub
lea
les
adc
push
pop
cmp
cmpxchg
lock
jnp
pop
jno
sbb
jge
mov
fstps
add
add
mov
dec
rolb
inc
push
push
scas
sarb
mov
or
pop
jmp
sub
inc
and
cmp
stos
ret
shrb
clc
jae
jg
or
mov
loopne
pop
jle
pushl
mov
mov
es
sub
adc
das
jno
lods
shrb
dec
pop
movsb
push
mov
inc
loopne
data16
jl
hlt
mov
or
push
fmull
or
clc
add
mov
add
movzbl
je
filds
mov
inc
mov
mov
cmp
jl
inc
jecxz
inc
dec
clc
addl
ja
mov
sub
push
mov
or
orb
or
mov
add
or
mov
cmc
dec
fisttpl
and
or
xlat
mov
cld
push
leave
push
xor
mov
inc
call
jne
xor
xor
push
mov
adc
les
pushl
cmp
pop
pop
push
mov
mov
test
insb
into
push
jmp
add
cli
imul
xor
push
mov
pop
push
nop
xchg
add
add
xchg
lret
in
or
xchg
icebp
xchg
fs
push
inc
test
mov
sub
ds
fstl
div
jno
mov
mov
cmp
push
gs
and
ja
cmp
xchg
lahf
lret
adc
push
cmp
adc
xor
mov
popa
in
pop
movsl
imul
adc
mov
adc
loopne
xor
jmp
arpl
inc
xor
fisubs
jmp
in
add
jo
adc
mov
or
and
enter
sub
add
mov
and
mov
pop
mov
loop
mov
inc
or
sbb
inc
xchg
xor
test
dec
jo
dec
test
sub
insb
add
aam
cld
decl
enter
iret
jbe
mov
sbb
pushf
adc
jle
mov
or
cld
and
aas
insl
mov
xor
lods
add
xchg
cmc
dec
add
out
mov
fisttpl
jo
xchg
cmpl
cmp
sbb
icebp
jge
stos
jne
push
fsubs
jbe
push
call
push
push
push
cmp
sub
jmp
push
scas
or
mov
hlt
mov
jmp
cmp
and
enter
dec
jae
sbbl
mov
jmp
mov
test
cmc
sub
jae
push
xlat
mov
mov
cmpsl
js
sti
lea
xchg
mov
loop
push
push
xchg
or
add
je
sbb
jl
cmpsb
dec
or
or
and
outsl
sub
cmpsb
leave
loopne
in
mov
into
mov
jnp
xchg
shrl
xchg
push
test
lds
dec
aad
sub
sahf
push
sbbl
sldt
sub
popf
aas
jb
movsl
sub
add
je
xor
add
push
inc
arpl
ds
mov
popf
sbb
add
adc
aad
rcl
and
loope
mov
add
mov
cmp
mov
add
mov
dec
mov
mov
lods
pop
and
mov
pop
shrl
test
jmp
push
iret
loopnew
movsl
jbe
lcall
cmp
add
scas
and
xsaves
pop
xor
xchg
push
cmp
push
and
or
push
mov
push
std
adc
cmp
xchg
jo
aam
enter
ss
ficoml
loopne
mov
nop
push
int3
dec
sti
dec
lods
add
shll
dec
cmpl
pop
xchg
xor
call
sub
scas
add
push
rolb
aam
or
xchg
shrb
and
push
sbb
xor
cmp
jo
sub
je
das
dec
into
adcl
je
fdivs
add
test
arpl
pop
mov
lcall
les
sbbb
pop
lods
push
dec
cmp
push
inc
lock
aam
test
cmpl
adc
lret
jp
fwait
movl
aas
xor
add
mov
inc
daa
push
sbb
and
cmp
fsubrl
fdivl
jbe
pop
stc
adc
inc
add
test
nop
mov
negb
push
insb
or
sub
add
adc
jae
cmpsl
shlb
shlb
jo
bnd
adc
mov
and
inc
shlb
mov
add
popf
mov
xor
inc
ret
pop
adcb
or
pop
insb
push
pop
jo
jae
movsl
fwait
mov
popf
pop
lret
leave
lea
fnstenv
out
or
pop
clc
aam
or
cltd
add
int3
inc
add
imul
lods
mov
mov
sbb
mov
xchg
aad
push
jmp
ret
call
jmp
push
push
pop
loopne
test
mov
sbb
jmp
orb
push
push
xchg
sbb
sub
divb
daa
popa
jne
ret
mov
lahf
imul
imul
insb
bound
fwait
hlt
jg
cmp
pop
cmp
jbe
push
loopne
out
in
jmp
push
pop
push
sbb
jmp
mov
out
or
add
fisubl
nop
or
nop
cmpsl
out
out
out
or
cmp
bound
pop
test
sbb
pop
clc
jne
mov
mov
mov
push
repnz
add
loopne
pop
mov
leave
or
xchg
fucomip
cmp
sub
out
jg
jne
std
fisubrl
or
pusha
jo
cmp
call
jmp
popa
push
push
adc
xchg
insb
das
movsb
push
push
call
cmp
sbb
jl
pop
lea
add
call
jmp
jg
pop
lods
xchg
dec
pop
ds
and
sarb
cmp
jae
movsl
pop
or
xchg
cmp
dec
enter
jbe
add
inc
xlat
insl
sbb
in
mov
add
out
dec
in
lock
adc
push
in
xor
dec
jbe
xchg
mov
fidivrs
popa
loope
push
cmp
xor
inc
xchg
cmp
inc
cmp
jns
movsb
push
or
pop
in
mov
push
mov
xchg
lret
add
add
pop
sbb
or
pop
add
cmp
out
xor
mov
xor
leave
cmpsl
loope
loopne
or
mov
jae
lret
sub
mov
sub
push
enter
cmp
ret
jecxz
icebp
into
adc
or
popa
in
pop
sub
or
mov
push
and
sbb
insb
or
mov
loope
imul
xor
mov
ret
sahf
test
mov
mov
sub
sub
or
fnsave
sub
adc
stc
push
sbb
fwait
addr16
sub
lea
sub
push
ret
push
jo
js
imul
pop
inc
ss
and
sub
xor
sbb
into
loopne
js
xor
jl
movsl
jae
cmp
lcall
inc
fiadds
stos
and
lcall
movsb
lret
inc
push
push
add
sbb
gs
test
push
mov
mov
xchg
fnsave
add
push
push
push
add
popa
add
push
stc
jne
std
add
sub
bound
inc
push
lret
jb
inc
imul
cmp
stos
and
mov
iret
mov
aam
mov
daa
jmp
dec
adc
jge
jne
or
and
jnp
mov
pop
adc
cmpsb
push
push
addr16
xorl
inc
leave
lods
and
xor
daa
test
inc
mov
nop
jo
in
mov
and
sbb
or
fcomps
fnstsw
and
jb
mov
movsb
push
pop
aaa
loope
xchg
aam
fcompl
dec
jnp
push
test
jne
and
dec
movhps
imul
data16
mov
jmp
mov
mov
frstor
sub
ja
add
adc
add
sub
sub
outsb
pop
or
mov
push
addr16
leave
js
cs
inc
filds
jno
lods
or
push
mov
or
inc
add
aaa
insl
in
and
pusha
roll
shl
adc
int3
add
shlb
dec
mov
pushl
sub
push
push
sbb
cmp
xchg
add
push
and
cmp
fadd
ret
das
loopne
mov
jmp
pop
add
ret
xchg
leave
cmp
sahf
sub
xor
sbb
xchg
subb
lea
dec
jo
dec
lret
lcall
mov
push
push
inc
add
pop
stos
or
adc
jo
movsl
adcb
shll
rolb
or
jbe
leave
mov
movb
or
push
int
cmp
jb
cmp
repnz
and
sbb
inc
mov
dec
jae
popa
push
ret
imul
push
add
xchg
pushf
add
aad
inc
mov
add
lahf
mov
push
pop
push
inc
adc
ret
pop
stc
hlt
es
je
scas
add
jmp
aaa
std
mov
js
mov
mov
mov
cli
das
je
jns
outsl
mov
mov
cmp
addr16
je
cmp
jne
mov
sbb
inc
ret
add
pop
dec
lea
negb
jmp
dec
mov
dec
xor
push
cmpsb
mov
and
popa
ljmp
testb
je
testl
scas
inc
sbb
cld
cmp
jbe
push
lea
in
call
or
inc
cmp
je
sub
inc
jmp
inc
and
xchg
cmp
mov
mov
shrb
loop
adc
out
clc
mov
jg
cmpsb
repnz
je
aam
mov
add
adc
into
ret
addb
push
xor
add
cmp
in
test
inc
pop
xchg
sub
cld
inc
xchg
cmp
jne
mov
insb
outsb
hlt
adc
das
test
cli
mov
lock
je
rol
pop
inc
dec
outsb
jb
imul
fdivs
js
sub
push
push
push
nop
adc
jge
and
xchg
or
sti
jp
add
push
push
sarb
xor
imul
push
loop
arpl
and
pop
cmp
popl
ss
mov
movzwl
ljmpw
mov
add
jae
outsb
addl
movl
lock
shl
add
jmp
pushf
aas
insb
sti
and
dec
iret
sub
negb
jns
test
jne
xor
dec
push
cmp
adc
jg
push
call
cmp
push
fsubr
cmp
xor
inc
cmpb
sub
and
lds
xchg
or
int3
sbb
mov
fistl
inc
jg
or
jge
jae
jae
xorb
jle
es
sub
inc
jae
jge
jle
jmp
or
jl
or
adc
jg
test
inc
test
jbe
lea
cmp
outsb
lock
aad
push
hlt
pop
arpl
pop
or
je,pn
test
jne
pop
rclb
cld
jb
rcll
push
or
jae
movb
inc
push
or
sub
mov
and
sbbl
adcb
xchg
data16
jo
testl
ljmp
jge
test
mov
mov
adc
sbb
add
daa
cmp
orb
inc
mov
cmp
lock
enter
push
xor
add
push
mov
lods
xchg
lods
adc
mov
hlt
dec
ret
xchg
out
and
in
xchg
mov
push
mov
shll
repz
insb
repnz
ret
mov
push
es
dec
stos
int3
cmc
mov
icebp
pop
pusha
fiadds
inc
sahf
mov
xchg
jp
adc
pop
test
rcrl
sbb
or
xor
ss
mov
push
cmp
aad
cmp
push
sbb
loopne
movsb
cmp
push
ret
int
xor
or
int
jp
cmp
rcrl
adc
push
mov
cmp
cmp
out
add
pop
rclb
mov
push
popf
je
pop
xlat
out
pop
pop
add
mov
test
mov
push
repz
add
sub
jne
or
xchg
cmp
xchg
and
or
push
add
inc
mov
rol
dec
nop
rcl
pop
cltd
mov
jp
inc
mov
call
sbb
sub
mov
cwtl
ret
cltd
lds
push
decl
push
pop
push
movl
push
adc
dec
or
xor
jo
push
push
lahf
jbe
rol
sub
add
inc
xchg
adc
jle
push
mov
mov
rclb
add
push
enter
add
mov
pop
popf
popf
int
sbb
cmp
ds
xor
push
in
pop
outsb
je
pushl
call
mov
mov
stos
out
pop
pop
lea
outsb
fsubr
jae
shll
mov
push
cmpl
push
cwtl
inc
add
cmp
cmp
psubd
lea
pop
pop
bound
pop
xlat
int3
or
sub
pop
fisttps
adc
pop
xor
xor
jl
and
jbe
mov
jge
push
gs
add
cmpl
inc
sti
inc
inc
fwait
cmp
cld
pop
pop
pop
outsb
adc
nop
push
mov
cmp
mov
in
ds
sbb
adc
out
xchg
mov
xchg
sbb
push
js
xor
dec
push
inc
inc
add
xor
push
fs
sbb
shll
adc
inc
lcall
jo
or
or
popl
and
cld
pop
arpl
push
xchg
icebp
in
clc
mov
mov
mov
add
test
jl
add
pusha
cmpl
push
sbb
inc
push
add
pop
sub
mov
loop
sbb
add
sahf
mov
rcpps
fdivrs
les
add
push
add
fwait
les
leave
add
pop
inc
add
add
test
jg
add
mov
pusha
adc
push
ret
or
sti
pusha
jb
enter
push
mov
xor
add
lods
add
push
adcl
dec
cmc
jbe
inc
mov
xchg
mov
dec
mov
mov
out
sti
and
repnz
push
xchg
pop
mov
mov
push
ss
cmp
sti
into
mov
arpl
dec
jbe
push
push
popf
test
jns
inc
pop
xchg
addl
cmpsl
lret
and
pop
cmpsb
xchg
and
sub
lea
or
dec
mov
loope
fstl
frstor
push
xor
test
inc
pop
xchg
fs
add
xor
push
cli
insb
and
jb
cmc
call
sub
idivb
faddp
or
shrb
es
aam
or
scas
or
int3
shl
enter
call
ret
cmp
clc
add
dec
push
xchg
add
ficoms
mov
sbb
jmp
syscall
ds
cwtl
cmpl
dec
push
xor
xor
mov
add
lret
sbbl
mov
pop
fmul
imul
insl
jnp
das
aam
push
ffree
test
mov
js
mov
into
cmpl
movsb
ficoml
lods
mov
movsl
cmc
push
add
inc
xor
mov
fiaddl
adc
cmpsb
or
xchg
xchg
lods
adc
jno
jl
inc
je
fstps
cmp
mov
push
add
mov
or
jne
jae
add
xor
push
cmp
mov
inc
jp
rclb
stos
fidivs
push
orl
test
test
dec
cmp
jbe
rcrb
push
adc
mov
jo
add
mov
fimuls
jnp
mov
mov
cmc
xchg
jne
mov
pusha
cmp
mov
cmpsl
lods
jl
add
fwait
pop
loopne
fmuls
insl
cwtl
cmpsl
mov
jg
lcall
je
cmp
rclb
pop
jne
aam
pop
inc
cmp
cmpsl
jne
push
imul
jne
or
mov
pop
call
push
jecxz
mov
and
or
insl
in
xor
cmp
fucomip
les
jne
jmp
sbb
xor
xchg
sub
mov
mov
sbb
mov
gs
hlt
mov
jnp
out
fisttpll
jbe
lock
add
je
pop
in
or
pop
in
stc
mov
fs
jmp
sub
repz
outsb
push
div
jmp
pusha
mov
jae
movsb
push
mov
add
ja
sbb
pusha
mov
adc
xchg
mov
sub
decb
adc
adc
inc
lret
addl
loopne
pop
adc
xchg
out
sbb
pop
cmp
pusha
push
shrb
inc
decb
or
or
ret
pop
pop
jle
push
add
je
adc
push
rclb
fucomip
pop
push
clc
std
push
mov
orl
jbe
aas
add
inc
arpl
sub
xchg
xchg
pop
cmp
mov
add
mov
shlb
mov
xlat
push
push
cs
lret
in
push
pop
pop
pop
in
mov
fs
mov
xor
sbb
xor
jae
sub
push
gs
inc
add
sbb
cmp
or
lods
xchg
mov
dec
cld
push
mov
mov
push
les
pop
stos
mov
and
sbb
sbb
jmp
push
cs
add
push
adc
shrl
add
mov
stos
push
sbb
push
or
inc
adc
dec
sub
push
sbb
pop
cltd
frstor
outsb
and
push
push
loopne
push
insb
or
or
cmpsl
mov
mov
pop
xor
leave
xor
pop
jo
cmp
sbb
ljmp
ss
sbb
incl
pop
inc
push
pop
cli
jp
push
pop
jmp
mov
call
aam
je
mov
or
sti
and
add
mov
push
or
mov
and
push
push
fwait
sbb
fstpt
mov
and
lods
test
lock
punpckhdq
hlt
or
push
push
push
xor
sti
es
sti
mov
addr16
subl
in
inc
jae
imull
mov
pop
outsl
inc
dec
std
mov
cmpsl
xchg
inc
cmp
cmp
loope
not
mov
ret
je
lret
jmp
sarb
mov
je
mov
cmp
jne
vpavgb
adc
in
mov
ljmp
add
adc
adc
lret
push
ret
jae
nop
mov
cltd
sbb
and
pop
sbb
pop
fwait
rcrl
mov
push
mov
cmp
and
jno
push
push
push
inc
sbb
xchg
icebp
std
mov
outsb
or
test
into
call
sbb
push
adc
push
cmp
call
lcall
add
adc
call
add
in
xor
mov
cmp
lock
shlb
or
or
push
lret
xchg
jbe
jo
mov
adc
sbb
sbb
mov
je
or
adc
add
cmp
sub
js
bound
addl
add
inc
cmp
adc
or
adc
push
sbb
sub
sbb
fists
push
jmp
cmp
jge
fucom
hlt
sub
inc
loopne
or
out
test
cltd
mov
jecxz
in
je
divb
call
lea
dec
xor
or
push
inc
add
loopne
add
cmp
jmp
jmp
jmp
inc
dec
xor
inc
cmp
int
xchg
rorl
inc
hlt
mov
mov
lock
lock
hlt
adc
outsl
enter
inc
sbb
loop
inc
inc
mov
ljmp
aam
pop
enter
adc
jb
sub
add
pusha
pushl
push
xorl
test
xchg
ljmp
mov
and
add
adcb
push
add
sbb
call
movsl
orl
je
adc
pop
fwait
outsb
insl
mov
inc
jne
addr16
ficoml
adc
test
add
call
shlb
cs
sub
mov
out
adc
push
pop
and
mov
inc
pusha
scas
mov
push
cmpb
jns
jno
rolb
lock
and
icebp
or
push
cmp
cmp
call
scas
and
or
adcb
sub
out
fsub
push
adc
cmpsl
mov
pop
sbb
push
outsb
outsl
or
test
jecxz
sbb
pusha
es
inc
je
ret
mov
jae
bound
adc
movsl
shl
testb
push
sub
loop
inc
mov
push
das
in
sbb
sbb
and
inc
add
dec
push
leave
loopne
rolb
sub
aam
ficoml
adc
jbe
lahf
or
push
jmp
mov
mov
in
fildl
jno
and
sbb
inc
pop
push
gs
adc
dec
dec
mov
or
mov
sbb
add
dec
dec
jne
jns
jnp
les
add
jmp
cmp
in
push
sbb
jg
jbe
push
aas
in
add
mov
jmp
xchg
cmp
test
or
lock
mov
aas
imul
int3
lret
shlb
in
movsl
sbb
outsl
dec
fdivs
inc
lea
fs
adc
pop
push
loopne
mov
xchg
dec
lods
push
sub
sub
inc
aam
shrb
and
out
mov
mov
nop
rcrl
pop
movsb
adc
pop
pushf
fsubrp
push
mov
mov
test
fs
push
mov
adc
fistps
inc
mov
pop
xchg
inc
cmp
jl
jmp
pop
dec
push
add
stos
sbb
rolb
jmp
add
add
cmp
add
aas
mov
leave
jmp
dec
iret
repnz
int3
push
and
clc
xor
cmp
out
imul
jne
adc
mov
jne
push
mov
xor
imul
sbb
dec
bound
jge
and
test
daa
push
dec
lret
sbb
stos
and
stos
cld
int3
add
rcl
adc
add
cmp
inc
push
jmp
cmp
inc
cmpl
inc
push
add
out
mov
and
inc
inc
clc
ret
or
jg
push
adc
cli
faddp
pop
mov
mov
scas
mov
jmp
push
dec
or
loop
mov
mov
pusha
push
cmp
je
int3
or
aas
ret
add
adc
jns
dec
je
sbb
mov
or
hlt
call
out
ljmp
add
jmp
or
sbb
xor
hlt
gs
out
icebp
rolb
inc
daa
or
cmp
inc
flds
inc
adc
cld
es
inc
aas
add
insl
jne
mov
notb
mov
sbb
sbb
add
leave
sub
fisttps
imul
pop
inc
fstpl
or
or
js
push
je
fdivs
adc
mov
and
faddl
sbb
adc
dec
cmp
neg
xor
add
rclb
inc
push
popa
add
andl
cwtl
jle
jne
or
mov
xchg
inc
dec
nop
push
add
push
ds
add
push
push
loopne
out
mov
loope
pop
xchg
aad
test
fidivl
adc
pop
ret
pushl
push
iret
loopne
or
and
pop
sarl
iret
add
addr16
jl
push
imul
inc
cmp
add
lea
mov
and
sub
or
subl
inc
addr16
push
cmp
pop
iret
mov
mov
jne
inc
jge
inc
ja
movsb
mov
xchg
shrb
dec
loopne
mov
sahf
or
dec
bound
orb
cmp
mov
popa
add
inc
sub
mov
sar
or
push
mov
cmp
mov
in
sbbl
xor
scas
sub
jo
cmp
fdiv
mov
bound
daa
mov
xor
xchg
pushf
or
add
mov
stos
aad
loopne
sub
cmpsb
add
sbb
js
cmpsb
or
loop
pop
js
add
jbe
lret
lods
jb
loopne
and
adc
gs
push
lds
or
data16
nop
or
or
imulb
pop
lret
subl
pop
jae
adcb
iret
or
add
and
adc
pop
sbb
dec
scas
push
mov
sarl
pusha
popa
adc
pop
push
mov
sahf
bswap
incl
shl
fists
aaa
ja
push
and
fcomp
ljmp
pop
sbb
push
movsb
or
inc
sbb
in
adc
orb
xor
jmp
dec
sub
or
add
movl
add
jl
mov
xor
push
adc
enter
dec
pop
sbb
xor
cmp
jg
dec
and
jb
test
pop
pop
or
aad
enter
pusha
cmp
ja
sbb
test
pusha
out
and
mov
add
cmp
inc
xor
xor
scas
sbb
jo
jge
or
sbb
test
mov
leave
jbe
sbb
lret
or
roll
ficompl
pop
iret
sub
fnstenv
sub
and
push
stos
in
push
add
xchg
xchg
and
or
push
push
xchg
xor
or
insb
pusha
adc
sbb
push
add
add
cmp
cwtl
les
fisubrl
scas
test
das
sbb
push
fcompl
mov
ja
pop
sbb
or
lret
rcrl
dec
inc
or
sub
xor
xchg
pushf
fs
or
cmpsl
xchg
lods
gs
movl
ljmp
mov
and
add
pop
movl
and
mov
xchg
dec
jmp
dec
jg
mov
aad
subl
xor
sbb
test
add
mulb
bt
or
mov
aaa
icebp
ds
jbe
mov
and
add
push
adc
xor
mov
sbb
divb
mov
mov
push
mov
or
sub
and
add
add
nop
sbb
jo
push
cwtl
add
xchg
sbb
jmp
mov
xor
push
and
mov
inc
cmp
sub
mov
push
lods
xchg
popl
and
push
in
movsb
cmp
xchg
shlb
divb
push
rcrl
int
jge
push
sub
addr16
dec
mov
and
push
gs
cmp
adc
xchg
je
xorl
xchg
jle
adc
subl
addl
mov
rorb
ret
out
insb
pushf
cmpsl
jl
or
xor
inc
aaa
sbb
mov
xorl
nop
jmp
in
push
jge
adc
loopne
ret
inc
lods
xchg
xchg
xchg
nop
fldl
cmp
dec
aas
push
loopne
push
aaa
push
jge
js
xchg
aaa
test
add
pop
mov
xor
mov
mov
adc
imul
pop
and
in
mov
push
je
push
lock
insb
dec
jmp
adc
jne
sbb
and
out
cmpsl
fldl
mov
and
cmp
pop
ss
inc
pushf
andb
or
mov
inc
lods
add
hlt
xor
dec
lods
or
popa
pop
popf
lea
xor
dec
inc
test
push
fsub
and
xor
mov
enter
mov
dec
dec
jns
adcb
aas
fs
push
adc
push
dec
rorb
sub
and
adc
sub
mov
ja
push
repnz
or
pop
jmp
adc
fsubrs
and
and
imul
in
mov
bound
mov
out
sub
mov
and
lock
cmp
sahf
adc
addr16
pop
inc
data16
adc
loopne
inc
lods
inc
jbe
adc
mov
jmp
ret
sbbl
pop
or
lcall
lock
inc
loopne
les
ror
popf
fildll
pop
push
nop
xchg
out
jnp
aam
sahf
pop
jbe,pn
fdivl
ret
and
push
fs
pop
mov
insb
sbb
loopne,pn
cmpsl
je
mov
jo
dec
sbb
jbe
mov
enter
mov
mov
jmp
push
cmp
orl
mov
fistpll
jne
cmp
push
fsubr
sbb
pop
adc
inc
subb
xchg
xchg
xorl
add
pop
xchg
out
and
cs
add
adc
jns
jecxz
push
xchg
mov
cmp
lock
lock
lods
mov
enter
push
sbb
mov
cmpl
fsubs
jmp
mov
cld
adc
jno
mov
addr16
mov
arpl
adc
sbb
mov
mov
aad
xor
scas
sub
dec
dec
loop
cltd
jl
sub
push
xor
in
shlb
lods
push
inc
mov
inc
xor
or
loopne
inc
and
daa
in
lods
mov
or
mov
pushf
add
push
push
fisubl
mov
js
addb
test
push
add
in
sbb
and
jle
xchg
leave
ficoml
fcmovne
inc
and
jne
mov
sbb
outsb
or
pop
push
int
jle
loope
and
imul
push
sbb
push
andl
push
rcrl
rcl
leave
sub
cmp
rcrb
add
roll
punpckhbw
fnstenv
push
imul
pop
mov
push
mov
mov
inc
push
shlb
and
mov
or
mov
inc
testl
jbe
movsl
pop
pop
cmp
cmpsl
push
sub
dec
cmpl
cmp
and
hlt
shl
xor
les
jp
mulb
fdivs
je
hlt
sub
or
push
roll
out
xor
addr16
dec
add
add
js
ret
int3
xchg
xor
pop
mov
sub
sbb
xchg
fs
xor
or
ljmp
sub
push
add
inc
cmp
or
ret
cwtl
adc
lcall
add
or
fildl
or
adc
push
stos
adc
mov
je
test
inc
xor
adc
dec
adc
adc
mov
lods
arpl
out
dec
pop
xchg
mov
loope
or
xchg
jne
test
lret
inc
pop
add
lret
and
ljmp
add
cli
daa
shll
pop
add
sbb
inc
push
outsl
aaa
cmc
leave
clc
jp
cmp
aam
fld
mov
mov
sar
aas
mov
jmp
outsb
add
or
push
cmp
push
jp
jnp
mov
daa
in
cld
or
sbb
adc
xor
popf
dec
xchg
arpl
sbb
mov
clc
xor
popf
xchg
xchg
mov
jae
adc
in
xchg
adc
mov
sbb
adc
leave
and
push
adc
adc
mov
adc
inc
fs
dec
adc
testb
xor
clc
push
push
dec
cmpw
je
cmp
test
xchg
dec
mov
dec
clc
cmpl
push
or
xor
add
or
push
add
in
or
test
adc
add
cmp
pushf
mov
lcall
mov
popf
mov
jae
inc
cmp
jl
mov
cltd
mov
and
das
jmp
cmp
notl
loopne
cmp
sub
cmp
or
in
je
xchg
mov
dec
jnp
dec
xor
mov
nop
push
jnp
int3
lea
in
mov
rcrb
fdivrs
bound
popa
mov
dec
jae
stos
sbb
xchg
dec
cmp
into
sub
js
pushf
out
dec
cmpsl
lods
push
jno
xchg
mov
fs
sbb
stos
mov
push
sub
mov
roll
mov
xor
xor
sbb
cmp
popf
jle
notl
movb
sbb
mov
ret
cmp
lea
pop
decl
rolb
add
std
jg
add
cmpl
push
jne
push
push
jne
shlb
add
je
cmp
leave
mov
mov
cmpsb
mov
add
stos
mov
fstpl
aam
mov
and
mov
inc
or
dec
adc
jnp
lods
jecxz
pop
pop
jmp
xor
dec
or
outsb
ret
mov
mov
dec
cwtl
test
jo
loopne
jnp
adc
movsb
xchg
lods
icebp
mov
ret
insb
call
pop
jne
inc
jne
add
inc
push
jecxz
dec
test
call
rolb
add
loope
dec
sbb
out
popf
lods
hlt
rcll
push
rorb
jb
ss
mov
cld
xor
xor
std
xor
cmp
cmp
into
or
or
add
ja
xchg
clc
jnp
pop
xchg
out
and
pop
cmp
sub
lahf
mov
push
or
and
mov
sub
cmp
fcmovnu
mov
in
repnz
out
neg
ret
add
cs
cmpsb
dec
les
add
out
adc
xchg
das
into
jno
out
push
adc
jmp
pop
lock
insl
cmp
test
mov
sbbb
push
sti
push
adc
ret
xchg
pop
add
mov
sub
mov
and
or
fwait
push
pop
xchg
or
out
movsb
fimull
cli
cmp
popa
movsb
jne
push
and
and
mov
leave
xchg
addl
nop
adc
mov
push
pop
lahf
mov
cmp
rorb
lea
loop
sub
ja
jno
mov
add
into
adc
fbstp
dec
incl
adc
or
repz
test
movsb
cmp
out
outsl
jae
or
scas
push
adc
cli
test
mov
cmp
stos
popa
lea
ret
add
in
pop
push
push
pop
or
jno
mov
inc
push
into
push
cmc
pop
inc
mov
repz
add
inc
jg
dec
inc
dec
adc
roll
push
push
mov
cmpl
mov
xor
mov
jno
cmp
rorb
dec
xchg
mov
add
mov
dec
lret
notb
xchg
lret
pop
rorl
mov
inc
push
into
or
or
sar
add
mov
xor
mov
and
adc
inc
jmp
cmpsb
ljmp
in
psubw
popa
add
stc
lock
fs
add
aaa
les
inc
jp
in
sub
sbb
mov
nop
jmp
sarb
repz
sbb
mov
insb
jne
bound
pop
cmp
ror
ret
sbb
adc
mov
cmpsl
data16
xor
mov
pop
pop
pop
in
xor
mov
mov
shl
js
mov
and
push
push
xchg
mov
push
add
mov
pop
inc
inc
dec
pop
orl
mov
push
cmp
push
scas
repnz
ffree
push
mov
adc
push
lods
add
andl
sub
xor
pop
jbe
or
pop
cmpsb
push
cwtl
sti
cmp
loope
rol
loope
lahf
pop
mov
and
pop
outsl
cmpsb
mov
daa
adc
sub
dec
or
mov
stos
lea
push
pop
xchg
push
dec
into
ds
push
jns
add
dec
inc
insb
sarl
in
arpl
mov
cmp
adc
test
mov
add
and
xchg
push
test
test
xchg
pop
sub
cmc
ret
inc
in
mov
add
stos
andl
xchg
adc
pop
dec
adc
sub
shl
jo
lock
mov
jecxz
les
les
imul
jmp
ja
sbb
add
pop
add
test
icebp
xor
addl
push
and
sbb
out
ror
xor
xor
add
cld
and
add
cmp
adc
les
push
jmp
add
test
popa
inc
push
jb
aam
jle
adc
sbb
loop
push
xor
jmp
mov
or
movb
insb
fld
sub
dec
je
dec
xchg
testl
aaa
sbb
repz
lea
cltd
icebp
ret
mov
imulb
fidivl
sti
mov
add
idiv
test
jae
lea
jmp
cmpl
sub
shll
sub
clc
inc
lock
pop
push
jp
clc
push
mov
cmp
adc
and
das
dec
into
sbb
xor
sbb
jns
jb
inc
or
pop
jmp
xchg
add
push
shl
adc
mov
add
andb
push
sbb
push
adc
movsl
scas
rcrb
pusha
add
push
mov
inc
jmp
xchg
dec
inc
jo
dec
xchg
push
rol
in
sub
insl
sbb
xlat
lcall
cwtl
jb
cmpsb
pop
and
or
mov
jge
adc
pop
orl
shrl
sti
add
sbb
nop
popa
mov
add
push
lret
inc
push
repnz
movsb
ret
mov
fldl
dec
or
mov
sbbl
fisttpll
icebp
or
pop
add
xor
push
rolb
neg
bound
push
ljmp
pop
pop
movsl
push
mov
and
pop
fidivrl
lahf
push
je
mov
movsl
shlb
sbb
rolb
mov
sti
xchg
icebp
js
add
stc
xchg
movsb
jmp
outsb
or
fcoms
test
hlt
push
popa
xchg
and
data16
mov
push
adc
add
or
push
les
xor
add
sbb
cmp
ds
pop
mov
jae
dec
add
daa
shrl
and
inc
add
not
lea
sub
enter
and
nop
and
pop
or
xchg
nop
mov
add
adc
dec
nop
add
test
je
jo
jo
sbb
mov
aam
popf
and
cmp
lret
push
pushf
mov
bound
pushl
push
pop
enter
iret
adc
cs
add
js
jecxz
or
inc
inc
jb
clc
and
mov
push
adc
dec
push
pop
xor
or
mulps
inc
adc
lahf
mov
rolb
sbbb
push
cmp
xorb
imul
add
push
cmp
adc
data16
in
mov
mov
bound
or
je
test
dec
imul
jne
mov
fnstenv
push
push
test
cmp
dec
or
mov
mov
cld
cmp
add
es
push
add
dec
data16
dec
and
sbb
xchg
mov
hlt
hlt
sahf
ret
enter
or
and
popa
sbbl
push
or
pusha
sub
cmp
jae
rclb
fmuls
inc
sbb
fxtract
scas
pusha
je
jne
push
js
fistl
nop
sbbb
cld
loopne
fnstenv
mov
xor
xorb
and
xchg
fdivs
dec
inc
scas
out
mov
inc
ja
push
cmp
pop
push
push
addr16
sub
setg
xchg
lea
adc
pop
cs
testb
pusha
cmp
mov
mov
sahf
jp
sub
neg
sbb
and
bnd
movzwl
push
sub
push
adc
pop
adc
clc
or
jp
mov
je
adc
xchg
and
cmpl
pushl
jnp
inc
pop
mov
ss
rol
fistl
adc
dec
cmp
popl
sbb
jge
add
cmp
jbe
or
jne
fidivrs
mov
cmpsl
shrb
std
xor
jnp
inc
js
mov
cmp
fwait
or
in
mov
and
sbb
cli
dec
jp
jmp
inc
jl
mov
addr16
mov
pop
mov
cmp
add
out
shll
lea
jmp
ds
jo
jns
adc
js
and
imul
dec
ret
cmp
ret
add
inc
add
cwtl
test
and
cli
cwtl
fisttpll
cmc
and
into
sbb
mov
push
js
mov
imul
add
sbb
inc
jecxz
xor
movsb
sub
popa
pop
mov
insb
stc
lods
jo
mov
sub
outsl
mov
mov
fisttpll
outsl
cld
adc
stos
ja
dec
enter
add
cmpb
fadds
add
int
adc
negb
outsl
and
xor
in
jae
andl
in
les
hlt
push
or
pop
jo
mov
cli
cmova
mov
lret
sub
pop
push
or
adc
fistpl
jmp
sbb
lock
add
call
or
and
mov
cld
shll
inc
lods
sub
fbstp
push
rorl
loopne
loop
test
sbb
pop
add
mov
jle
push
call
andl
pop
insb
dec
fists
int3
jp
push
jmp
daa
insb
aam
add
push
or
cmp
adc
jo
inc
cmp
les
dec
test
pop
sbb
aaa
inc
jg
xor
or
cmpl
xor
jae
sbb
xorb
mov
add
cmp
aad
xor
cld
popf
push
xor
sbb
push
repz
pop
pop
or
mov
cwtl
sbb
sub
sbb
inc
adc
outsb
lock
test
add
insl
or
push
insl
ds
pop
movb
iret
mov
xchg
xchg
xor
test
push
xchg
mov
and
inc
cmp
leave
ror
jae
cmp
push
push
and
ds
pusha
sarb
sub
and
pop
loopne
xor
or
scas
mov
mov
jmp
cmp
loopne
jb
push
xor
fadds
jae
das
or
push
push
inc
add
outsl
inc
or
and
jecxz,pn
lock
adc
js
inc
cmp
xorl
or
out
cs
push
sbb
aam
roll
hlt
push
push
mov
lea
add
outsb
xchg
or
jo
push
push
jmp
sub
fadds
addl
jg
pop
push
add
dec
mov
jno
ss
mov
arpl
into
and
popf
test
sub
xlat
inc
loopne
add
into
into
cmp
je
jmp
push
arpl
and
hlt
pop
dec
mov
fnstenv
leave
add
mov
mov
arpl
lea
cvtps2pd
dec
add
xchg
test
sarl
and
jge
dec
mov
in
ds
mov
roll
adc
inc
scas
xor
fs
jge
and
add
add
cmp
xlat
lods
add
clc
call
push
je
orl
cmp
pop
jl
push
sti
loop
xchg
and
mov
repnz
mov
inc
sbb
test
xchg
add
xor
shrl
inc
sub
sub
sbb
inc
sbb
lods
adc
xchg
sbb
and
test
adc
pusha
mov
je
mov
mov
inc
jge
xchg
mov
loope
ja
les
in
std
or
enter
out
push
aam
ja
daa
jno
fcomps
add
and
jo
test
xor
shl
push
inc
mov
cltd
add
add
test
sahf
ret
mov
mov
orb
add
mov
push
pop
lcall
gs
in
jle
push
push
lods
mov
xor
in
mov
xor
mov
or
pop
rcll
xorb
aaa
add
or
aad
cmp
rclb
mov
pop
or
xchg
pop
jae
aaa
push
sti
jb
mov
mov
mov
enter
push
adc
ljmp
shrl
add
xor
outsb
add
push
jnp
mov
cmp
cmp
add
pop
je
dec
adc
lock
popa
push
jae
lea
ja
cmp
aas
or
or
mov
pop
mov
pusha
arpl
pushl
and
stc
push
and
mov
mov
rorl
or
jle
mov
sub
pop
pop
aas
mov
mov
lea
shlb
call
add
out
aam
xor
jae
leave
jmp
push
and
sub
dec
and
dec
ja
push
xchg
and
sbb
adc
mov
adc
add
xchg
mov
dec
pop
imul
cltd
xor
xor
adc
notb
rclb
cld
cmpsb
or
shlb
out
mov
je
fs
fisubrl
adc
into
pushl
adc
roll
sub
lods
push
pop
data16
xchg
das
dec
mov
sub
inc
push
lods
adc
jb
pushf
push
data16
loope
xchg
jne
push
push
pop
xchg
pop
push
lea
cmp
sub
ret
jle
movsl
sub
popf
xor
xchg
pusha
jb
pop
adc
fisttps
mov
nop
and
loopne
cmpsb
adc
add
jecxz
mov
mov
add
xor
push
pusha
push
push
sub
jno
mov
lahf
jg
ret
or
or
pop
mov
clc
mov
mov
mov
lea
ret
inc
jg
dec
or
dec
inc
mov
cmpl
adc
mov
xorl
das
aas
xor
das
in
dec
xor
inc
and
xor
adc
add
fst
insb
xor
adc
sub
sub
jmp
push
inc
jmp
add
dec
add
pushf
jb
bound
or
jl
add
mov
std
incl
jge
jbe
push
es
add
jl
addl
mov
clc
and
lahf
add
outsb
nop
mov
ret
loopne
pop
mov
shl
test
mov
mov
fsubs
cmp
inc
js
mov
in
xchg
dec
ret
push
jae
lea
push
sub
shlb
pushf
decb
mov
ret
push
popf
stos
add
dec
sbb
inc
ja
jbe
add
jge
pop
ret
push
lods
add
ret
test
loop
sbb
in
cmc
loopne
jge
jge
mov
lahf
pop
cld
mov
fdivl
cmpb
xor
fnstenv
pop
shrl
jmp
push
cmp
cmp
sub
mov
mov
mov
adcl
movb
add
mov
lcall
fdivs
aam
push
sahf
pop
clc
xchg
jmp
push
sti
mov
in
cmc
xchg
jo
out
insb
testb
test
call
out
dec
mov
dec
in
add
jbe
sti
sbb
and
mov
push
rcrb
sbb
aam
xchg
js
cmp
mov
xchg
loopne
push
or
push
xchg
scas
std
jl
pusha
hlt
push
lea
out
sbb
int3
test
inc
push
dec
mov
and
pushf
push
xchg
jae
cmp
jns
xor
push
inc
xchg
or
push
cmpb
jmp
push
inc
pminub
or
sub
inc
cmp
insb
into
dec
add
adc
leave
orl
add
sbb
sbb
sbbl
in
loop
popf
mov
mov
fwait
cmp
test
add
lds
jb
imul
ljmp
js
jmp
pop
mov
cmp
sub
add
or
add
es
jecxz
test
lcall
or
and
jb
stos
add
add
add
aam
std
test
pop
inc
std
jno
dec
adc
loopne
test
mov
nop
push
add
dec
movsl
arpl
addr16
in
and
imul
imul
xor
loop
adc
test
out
in
nop
mov
out
push
cmpb
movb
pop
add
sub
add
push
das
or
inc
in
or
lea
pop
subb
mov
sbb
orb
mov
mov
int3
push
adc
ficompl
xchg
jmp
xchg
idivl
sbb
sub
sub
xor
sbbb
dec
mov
loopne
or
daa
fadd
ss
mov
jge
dec
pop
imul
fwait
arpl
addb
jnp
js
or
sbb
cmc
pop
clc
shlb
cmp
ret
ds
ret
dec
stc
clc
dec
cld
enter
mov
pop
pushl
add
scas
inc
pop
aad
adc
pusha
xor
cmp
inc
adcl
push
jmp
ljmp
cld
aas
es
sbb
pop
adc
lret
dec
xor
mov
adc
or
add
shrb
sub
lret
adc
mov
fs
adc
cli
hlt
popa
adc
adc
mov
loopne
add
int3
adc
jbe
jle
adc
in
mov
loope
pop
ret
xor
orl
stos
addl
in
xor
or
mov
dec
sub
in
cli
or
sbb
out
cmp
mov
mov
inc
sbb
push
outsl
mov
sbbb
add
xchg
popa
das
pop
sbb
outsl
mov
sbb
sbb
outsl
xchg
mov
dec
sbb
mov
and
xchg
jno
jl
push
mov
sarb
pusha
dec
test
out
mov
ret
dec
repz
popf
add
push
out
push
fs
or
add
pop
add
xor
test
in
mov
clc
filds
adc
jle
jne
or
mov
cmpsb
and
lea
loopne
inc
movsl
test
sbb
sub
test
pop
add
mov
add
sbb
inc
and
pop
movsl
xor
insl
and
fs
sti
mov
adc
pop
pop
lea
shlb
pop
xor
std
and
xchg
pop
push
sub
loopne
dec
stos
pop
pop
fimuls
cmpl
xchg
sbb
cmp
adc
push
out
mov
lahf
and
or
mov
inc
es
add
in
xchg
push
xor
jl
inc
outsb
lahf
ret
push
inc
xor
add
sub
icebp
mov
lods
dec
sub
xchg
mov
jmp
adc
aas
adc
add
push
jb
mov
aam
out
cmp
xor
or
mov
adc
mov
gs
mov
mov
xor
xor
loop
and
in
popf
and
pop
fwait
cmp
xchg
cmp
mov
es
push
out
mov
aam
xor
pop
call
fs
mov
test
je
test
ss
or
jle
or
jo
push
sub
rorb
pop
push
mov
je
push
jmp
inc
jmp
and
dec
xlat
push
cmpl
push
or
icebp
rorl
std
pop
das
jmp
insl
loopne
inc
cmp
jl
sbbl
das
adc
adc
js
fdivrl
sub
outsl
das
arpl
push
mov
mov
pop
sbb
adc
mov
mov
test
sbb
bound
pop
cmp
xchg
andl
leave
in
sbb
test
sbbb
loope
test
sub
loopne
jle,pn
cld
adc
dec
mov
mov
aam
add
inc
jle
fstps
popa
or
xchg
rcrb
inc
repz
adc
movsl
inc
push
pushf
push
cltd
imul
and
fdivrs
jle
sbb
mov
aaa
jns
cmp
sbb
dec
test
sbb
fwait
jo
call
or
pop
push
dec
sbb
mov
stos
xor
nop
add
cli
sub
push
mov
lea
push
in
inc
inc
aam
jbe
enter
ja
xchg
dec
add
cmpsb
fld
scas
add
das
cmp
fistpll
inc
cmp
ret
push
mov
or
xchg
hlt
and
cmp
in
jae
loope
pushf
cld
push
adc
dec
or
xchg
int
push
es
cmp
sti
gs
xchg
dec
clc
xor
lock
add
lock
lock
ret
jne
outsb
add
sbb
loope
cmp
mov
mov
sbb
push
mov
mov
popa
inc
test
sub
fbstp
xchg
repz
push
aaa
sbb
loopne
push
cli
and
and
and
jge
sbb
cmp
mov
cmp
jl
into
sarl
imul
mov
jne
inc
adc
mov
repz
jecxz
mov
frstor
lods
sbb
cmp
int3
pop
into
sbb
gs
xlat
dec
mov
outsl
push
mov
aam
ljmp
dec
and
pop
jmp
jg
xor
xchg
out
xchg
lock
sub
push
movl
dec
dec
add
inc
or
mov
jp
orb
mov
rolb
mov
xorb
popf
pop
call
repnz
rol
rcr
fcoms
xor
pop
push
loop
jo
dec
push
cmp
add
inc
cmp
push
scas
mov
adc
dec
pop
enter
sbb
loope
pop
mov
push
mov
add
in
loope
rcrl
and
orl
xor
imul
aaa
add
adc
xor
shll
xchg
ficoml
das
outsl
push
xor
add
dec
inc
loopne
sub
fstpl
mov
jl
mov
leave
cs
inc
jo
es
and
aas
lea
cmp
or
ss
aaa
stos
sub
dec
dec
jns
adc
jmp
iret
push
shrb
mov
adc
adc
shlb
pop
outsl
inc
pusha
inc
add
jmp
push
adc
xchg
xchg
ja
add
sbb
sbb
inc
das
test
inc
push
fdivl
fsub
push
pop
dec
in
xor
or
or
add
nop
pusha
mov
sbb
mov
cmp
roll
sahf
or
sbb
xchg
ret
js
je
dec
push
adc
mov
jmp
dec
sbb
sbb
inc
and
cmp
pop
cmp
and
push
sub
sub
push
lds
movsb
call
ret
in
sbb
adc
adc
add
dec
leave
adc
or
pop
mov
adc
sub
addr16
mov
neg
inc
push
xor
add
push
jp
jo
pusha
mov
pushl
cmp
jne
sub
adc
sbb
adcl
roll
adcl
daa
bound
fadd
movsl
jnp
xchg
inc
in
mov
jnp
mov
cltd
lahf
aaa
cmp
roll
rorb
cmpsb
push
push
dec
enter
fadd
dec
xchg
sub
push
mov
repnz
jmp
ret
std
call
ds
in
lods
pop
loop
pop
ror
clc
xor
rorb
popf
out
or
pop
gs
sahf
rolb
rcll
xchg
mov
ret
popf
lock
adc
or
mov
jne
push
fwait
outsl
xchg
loope
leave
js
jne
adc
mov
xchg
data16
mov
jne
or
jne
addr16
jl
inc
std
decl
adc
push
ljmp
fsubrl
cmp
into
mov
cmp
out
xchg
cmp
or
push
lret
addr16
add
fadds
mov
xchg
fcoms
ja
insl
repnz
cld
mulb
mov
push
popa
inc
add
lea
cmp
daa
dec
add
mov
rorb
push
push
out
jmp
movsb
inc
mov
hlt
jae
jle
jne
add
dec
push
jnp
xor
cmp
sub
mov
sub
sbb
push
jge
out
call
cmp
fiaddl
mov
inc
or
lret
jp
mov
test
or
mov
sbb
and
daa
fnstcw
dec
scas
lcall
pop
nop
fbstp
aam
pop
mov
jg
lahf
in
mov
test
pop
push
pop
mov
mov
pop
ret
fmuls
jmp
fisttpll
sub
insl
inc
or
mov
dec
flds
sub
leave
movsl
test
into
inc
loop
inc
dec
aam
daa
adcl
dec
andb
andl
fs
rcrl
mov
sbb
jne
aaa
push
pop
leave
dec
cli
or
pop
sub
sub
jae
sbb
jne
add
push
sahf
inc
push
push
je
xor
outsl
ret
cmp
sbb
dec
insb
jne
sub
adc
ss
jmp
ficompl
mov
inc
and
pop
jo
das
fs
inc
or
cmp
je
aas
in
daa
add
fadds
test
xchg
aaa
jge
add
fsubrs
add
mov
xchg
or
jnp
btl
cli
std
sbb
cmp
jl
or
aaa
mov
dec
mov
fs
cmp
fidivs
push
mov
in
arpl
pop
sbb
in
push
test
mov
hlt
push
push
cmp
jno
pop
xor
or
ja
push
test
push
outsl
add
sub
fdivl
sub
rolb
loop
cwtl
cmp
jne
ds
inc
push
jle
lea
insl
mov
pop
push
sub
mov
mov
sub
pop
lea
aam
inc
addr16
mov
dec
dec
or
or
inc
and
add
pop
popl
fadd
stc
mov
add
outsb
xchg
dec
and
cwtl
jg
or
or
push
dec
outsb
dec
adc
or
pop
dec
or
sub
js
js
inc
sbb
or
pop
daa
pop
add
lcall
adc
xchg
cmp
add
cmpsb
imul
cmpsb
imul
cmp
or
call
pop
xchg
cmpsb
cwtl
push
or
outsb
in
or
mov
mov
add
inc
mov
xor
addr16
scas
sub
pop
rol
mov
mov
adc
and
mov
movb
sbb
and
pushl
data16
jae
fadds
jbe
inc
jl
js
inc
push
fs
insb
push
fs
push
push
fs
push
cmp
xchg
mov
push
ljmp
sub
sbb
fnstenv
inc
xchg
sahf
sbb
dec
sbb
dec
pop
pop
mov
inc
pop
test
and
adc
in
push
jo
test
jno
cmp
outsl
xor
xchg
js
addps
subb
add
add
pop
and
jne
mov
push
cld
test
cmp
test
cli
add
inc
mov
mov
pop
inc
sbb
out
jne
sbb
jb
mov
lcall
inc
sti
sbb
jb
ret
pushl
jb
or
push
xor
shlb
xor
mov
out
mov
xchg
lret
mov
push
mov
mov
sub
subl
inc
add
shl
ret
mov
add
add
cmpsl
loope
imul
add
je
sub
shrl
ja
jne
das
xorl
addl
loopne
mov
mov
and
daa
inc
xchg
dec
adc
imul
ret
add
pop
dec
test
mov
xchg
mov
in
jmp
xlat
add
das
call
dec
stc
fldl
sar
iret
and
ffree
das
add
cmpsl
or
repnz
iret
in
fists
and
imul
sbb
mov
mov
add
mov
stc
push
jne
mov
pop
dec
sbb
dec
jne
into
adc
data16
or
push
adc
je
xor
push
xor
dec
mov
fwait
dec
lahf
sbb
repnz
cld
loopne
aaa
pop
and
dec
mov
inc
push
pop
add
inc
movsl
imul
cmp
sub
or
fidivrl
pop
mov
add
shll
sbb
filds
and
dec
subl
leave
or
test
push
popf
lock
cmp
mov
xchg
aam
mov
jo
cli
out
fidivrs
inc
adc
or
sahf
lods
pop
mov
dec
sbb
mov
stc
add
dec
sbb
rcrl
jp
adc
or
call
or
xchg
cmpl
movsb
sub
add
sbb
pop
xor
popa
aaa
fld
sbb
inc
mov
test
cmp
sub
enter
addb
repnz
sbb
pop
inc
mov
mov
sbb
xor
adc
lea
adc
mov
lahf
fldl
pushf
and
sbb
jno
orb
mov
mov
in
add
lock
push
loopne
sub
jne
or
in
nop
gs
inc
sbb
pop
fs
pusha
pusha
insb
cmp
xor
insb
push
inc
test
out
movsb
xor
sbb
arpl
push
xchg
inc
push
cmp
cli
je
xor
scas
insl
popf
add
or
push
arpl
es
sbb
adc
push
mov
hlt
sti
push
sub
cmpsl
js
fwait
inc
and
ret
jne
adc
dec
roll
add
push
outsb
dec
adc
dec
or
sub
inc
cs
lock
lock
push
enter
ss
jmp
fcompl
push
pop
xor
ret
mov
lret
sbb
push
arpl
push
test
jnp
out
andl
sbb
push
inc
dec
add
add
push
and
mov
or
fsubl
ret
test
jbe
pop
xor
cld
sub
or
pop
pop
mov
jo
ljmp
inc
jo
sbb
or
cmc
sbb
add
add
mov
and
adc
pop
jle
addr16
and
and
jne
sbbb
xchg
dec
inc
sahf
mov
pusha
and
fidivrl
in
insb
pop
push
dec
fucom
push
test
popa
dec
test
mov
popf
jecxz
mov
mov
push
push
inc
mov
es
adc
mov
xor
scas
insl
js
cmp
or
mov
pushf
cwtl
stos
test
mov
mov
cwtl
fisttpll
mov
cltd
or
or
cmpsl
add
push
and
and
push
lea
push
or
fsub
add
push
or
xor
sbb
xchg
dec
cmp
adc
pop
movd
imul
les
sub
add
neg
lret
add
pop
popa
add
and
ret
out
push
enter
movsl
or
mov
and
push
pop
arpl
jmp
imul
hlt
nop
sbb
out
jmp
mov
bound
popa
mov
cmp
push
add
fs
pusha
cs
push
jo
and
fwait
mov
mov
data16
fnstcw
out
sub
outsl
std
push
jecxz
inc
add
jge
int3
xchg
pop
xchg
into
mov
stos
push
sbb
mov
jecxz
or
je
mov
mov
jne
or
xchg
adc
or
inc
insl
xchg
push
mov
les
fs
cmpsl
push
or
pop
out
sbb
inc
push
jmp
repz
pop
fcoms
push
leave
push
jmp
pushf
push
adc
and
cmp
adc
xor
adc
fndisi(8087
cs
adc
mov
lea
sub
sub
and
mov
lock
rclb
data16
sub
in
inc
push
push
push
or
ja
adc
fsubp
fstl
inc
pop
mov
mov
cmpl
pop
lock
mov
xor
sbb
fmuls
dec
movsl
test
jne
icebp
pop
jno
int
and
sahf
add
add
testl
pop
cmp
mov
rcrb
add
mov
pop
fcomp
lcall
xor
xor
mov
pusha
xor
mov
movsl
jbe
and
jl
lcall
clc
ret
loopne
and
push
adc
adc
sub
jg
sbb
xor
filds
push
lods
pop
push
inc
test
adc
or
scas
mov
xor
sahf
lret
ficompl
xchg
out
push
cmp
and
dec
sbb
xor
repnz
fdivp
sub
out
dec
sub
fidivl
and
push
dec
repz
and
cmpsb
lea
das
and
imull
dec
or
in
dec
mov
inc
adc
insl
add
lea
cmp
adc
fwait
add
or
nop
push
aam
insl
mov
inc
or
dec
cwtl
sub
pop
icebp
in
and
or
shlb
push
sahf
fwait
imul
fsubl
pushf
jnp
add
and
mov
lods
or
and
pop
mov
insb
sbb
cwtl
inc
jg
adc
call
jmp
hlt
lods
lret
adc
fdivl
jbe,pt
adc
je
in
cmp
push
mov
ljmp
ret
inc
xchg
add
das
fucomp
inc
jp
push
add
aaa
imul
or
push
orps
and
xor
movsb
add
arpl
add
inc
cmpsb
mov
cmp
push
imul
pop
jb
subb
shll
test
push
nop
subl
add
inc
add
sahf
push
mov
addb
or
push
ss
cmpsl
test
popf
mov
push
xor
mov
or
or
addb
je
jbe
pop
push
cmp
push
mov
pushf
dec
or
call
or
fs
sbb
mov
add
sbb
push
ret
outsb
push
jnp
xor
sub
inc
sub
out
adc
xchg
xor
cmp
xor
nop
xor
xor
or
pop
add
xor
movq
ret
or
add
pmaxub
ret
pop
js
push
shrb
js
imul
push
push
sbb
pop
testb
lret
iret
and
pop
or
dec
lret
outsb
inc
xor
jb
ljmp
jg
testb
loope
jno
pop
mov
xorl
adc
and
mov
inc
in
jmp
orb
nop
dec
push
xorl
test
sbb
inc
cmc
js
aas
jecxz
test
mov
mov
xchg
pop
mov
cmp
aaa
call
lea
ret
sub
out
jae
jge
mov
inc
daa
sub
leave
mov
lahf
dec
cwtl
xchg
test
jae
test
or
dec
pop
pop
mov
push
xchg
and
jge
cs
jl
andl
lods
enter
mov
xchg
mov
ret
mov
or
cltd
les
xchg
inc
jae
leave
and
sahf
adc
or
aam
jecxz
dec
xor
pop
jo
push
push
lea
cmc
adc
insb
movl
add
ljmp
movsl
jbe
inc
cmpsl
fistpll
sbb
jo
cmpsl
sub
and
jno
jl
adc
pop
adc
and
push
enter
cmpsb
sarb
push
scas
pop
add
jl
add
test
and
push
jl
add
xor
je
push
mov
sub
addb
pop
push
sbb
jmp
and
ljmp
mov
push
lds
push
xor
inc
add
fsubs
rorb
loop
and
or
movsb
add
sahf
orl
xchg
pop
xor
xor
xchg
pop
add
add
les
push
ja
bound
mov
and
aam
dec
mov
jne
add
add
or
cmp
add
or
pusha
imul
add
pop
and
xchg
cmp
mov
jl
loope
xor
jg
or
push
fistl
mov
rcr
into
mov
push
xchg
mov
fmulp
enter
leave
pop
adc
lret
push
xchg
cmc
mov
fstl
lods
mov
mov
sbb
rolb
sub
enter
or
inc
xchg
mov
add
inc
push
add
popa
cmp
sarl
aaa
xchg
pop
sbbl
inc
jle
sbb
iret
movsl
push
ja
ret
mov
pop
adc
andl
cmpsl
dec
or
mov
mov
scas
lods
dec
cld
push
test
es
push
jecxz
mov
or
or
jo
pop
rorl
mov
lds
fisubl
mov
mov
or
push
xchg
insb
insb
int
nop
inc
mov
or
je
out
neg
aas
jo
jle
mov
out
jmp
inc
dec
daa
out
push
cmpsb
outsb
fistl
pushf
jmp
mov
pop
insl
cmpb
fmuls
pop
push
push
push
inc
stos
mov
push
jbe
imul
idivl
push
adc
sbb
lds
int
mov
in
push
add
dec
stos
addl
add
cli
ret
push
popa
cs
mov
add
or
mov
movsb
fxch
dec
inc
das
imul
dec
xlat
out
addr16
inc
rcll
stos
addl
aas
movsl
add
lcall
xchg
test
loop
or
rolb
jbe
or
xrelease
xchg
mov
dec
mov
or
cmp
daa
js
arpl
dec
movsl
xlat
pop
add
aam
cmp
pop
mov
push
andl
ret
pop
outsb
movsl
popa
test
sub
ss
adc
mov
xor
or
ret
cmp
or
add
cmp
arpl
push
mov
sub
mov
push
push
lret
sub
outsl
push
inc
xchg
mov
outsl
push
or
jae
leave
push
cmp
insb
dec
add
or
ss
insb
es
and
cwtl
push
in
mov
andl
mov
sbb
pop
je
xor
add
lea
add
add
lcall
notl
cmp
adc
push
cmp
adc
sbb
cmp
jo
loop
jne
icebp
jnp
pop
lods
lock
mov
xor
add
fildll
mov
xchg
fcomp
add
mov
fs
loope
push
test
push
mov
andl
and
aas
fildl
jmp
ret
jbe
mov
jae
mov
int3
and
inc
orb
movb
and
pop
cli
test
pop
adc
inc
insb
shr
xor
xchg
out
inc
add
call
loopne
and
jge
adc
cmp
pusha
sbb
add
hlt
push
sbb
or
pusha
insb
std
sbb
mov
mov
mov
add
fidivl
xor
pop
insl
jge
adc
jae
movsl
pushf
sub
or
hlt
sbb
imul
jmp
xchg
scas
push
push
pop
adc
pop
or
inc
pop
int3
push
test
in
mov
adc
mov
push
mov
sbb
dec
iret
xchg
js
or
jle
push
cmp
lds
xor
jno
test
loop
test
jge
loope,pn
and
jecxz
mov
jno
pop
jnp
mov
pop
sub
addb
jbe
mov
cltd
loop
sub
mov
sub
adc
cmpsl
pop
mov
test
popl
cmpb
and
push
add
aam
pop
inc
scas
out
movb
pop
sub
adc
ret
inc
add
add
pop
enter
cmp
dec
jg
clc
imul
rorb
cwtl
add
js
push
mov
je
push
push
dec
cmpsb
out
jne
adc
arpl
inc
mov
push
lea
jecxz
jg
cmpb
cmp
push
je
push
movb
addr16
xor
adc
cmp
pop
push
fs
roll
nop
push
xor
repz
inc
loopne
push
repz
mov
sub
jne
test
jo
add
dec
sbb
test
das
push
fwait
inc
cmp
pop
pop
or
push
or
shl
push
jno
out
adc
icebp
and
pop
into
pop
inc
clc
rcrl
inc
fldt
mov
pop
cld
sub
sti
xor
cmp
inc
mov
inc
adc
sbb
inc
sbb
imul
adc
out
mov
lea
mov
push
xor
lea
xchg
dec
sbb
jle
adc
int3
lock
or
and
lcall
movsb
loopne
adc
mov
js
movb
jecxz
aas
adc
sbb
out
invd
arpl
mov
jbe
mov
sarl
movsl
mov
mov
nop
fs
stos
loopne
jecxz
repnz
pop
testl
pop
je
cmpsl
or
sbb
dec
es
inc
jbe
repnz
call
or
dec
or
push
rolb
cwtl
push
push
js
pop
xchg
push
ret
adc
cwtl
test
xor
shl
sub
les
js
and
loopne
and
jl
xchg
add
into
mov
sbb
push
mov
lahf
mov
popa
jbe
sarb
add
xchg
lock
mov
testl
lahf
cmp
xor
or
lahf
cmp
xor
mov
rcr
adc
and
cmpsb
add
and
test
or
add
mov
xchg
pop
das
xor
mov
xor
push
sub
pop
daa
insb
js
push
cltd
in
fadd
sbbl
sub
pop
push
push
cmp
push
cmp
push
mulb
adc
xor
dec
js
mov
xchg
outsb
xchg
mov
or
mov
sbb
push
imul
cmp
insl
inc
jmp
andl
insb
loopne
adc
xlat
push
add
inc
xor
adc
mov
lods
and
addb
sub
cwtl
add
sbb
mov
dec
adc
cmp
push
cwtl
add
lret
mov
sahf
imulb
rcl
cmp
rcl
adc
jnp
or
lahf
mov
mov
jno
push
push
stos
sti
jb
addb
add
jno
or
cs
adc
mov
das
in
daa
sub
pop
or
in
jbe
lock
mov
rcr
mov
decl
pop
jae
jl
or
lea
pop
lds
push
push
push
xchg
ss
or
sub
mov
inc
or
or
into
popa
aaa
inc
inc
mov
ds
loope
adc
mov
adc
inc
jo
imul
push
and
lea
in
pop
push
faddl
or
and
cmp
ja
je
or
je
or
sub
dec
incb
adc
cmp
andl
pop
push
or
add
adc
sbb
sahf
nop
ret
sbb
jnp
imul
mov
push
lcall
xor
test
push
adcb
ss
fs
out
sub
ja
ret
insl
adc
and
dec
add
mov
xchg
movsb
call
push
adc
or
xchg
mov
icebp
and
mov
lcall
sub
test
jns
adc
and
inc
adc
or
adc
mov
mov
and
and
sbb
dec
push
outsl
aad
pop
daa
push
pop
or
roll
mov
pop
ret
clc
xchg
ffree
push
inc
push
sub
inc
dec
sub
or
adc
adc
or
fcmovne
xor
in
lds
popf
sub
shll
or
push
adc
adc
adc
push
sub
adc
xchg
add
in
mov
and
adc
or
cmp
mov
add
test
adc
stos
and
or
push
mov
repz
loopne
xchg
imul
push
shll
inc
push
lds
in
add
jecxz
loope
lcall
mov
dec
or
ret
out
adc
loopne
ds
sti
clc
or
dec
mov
pop
rolb
or
push
popa
xor
xor
sub
add
fisubs
pop
loopne
push
mov
push
sub
test
mov
icebp
jb
jp
push
or
dec
mov
arpl
pop
push
pop
sbb
push
xchg
dec
fildl
sbb
mov
dec
xchg
sbbb
xchg
dec
cmp
adc
gs
sbb
in
pop
lcall
cmp
xor
xchg
pushf
inc
push
pop
add
repnz
sub
pop
push
cmpsb
xchg
pop
enter
aaa
mov
call
add
jb
add
idivl
mov
jne
sub
sarl
cmp
js
lods
jbe
ss
aaa
add
fcoml
je
dec
sub
in
push
jnp
ret
or
shl
fiadds
push
ret
pop
cmc
fcomp
xchg
data16
mov
inc
orl
or
addb
mov
inc
test
shll
jl
mov
xchg
js
cmpl
cmpsb
lret
ljmp
sahf
xchg
insb
jo
fmuls
loope
xchg
push
xchg
icebp
xor
dec
adc
inc
or
test
sbb
mov
aas
add
sbb
or
xorb
jns
jg
pushf
scas
std
decl
or
in
xchg
adc
jmp
cmp
pusha
xchg
or
and
popf
adcb
xor
gs
ror
mov
jo
xor
mov
or
push
push
xor
out
dec
inc
adc
test
mov
out
inc
loop
mov
push
test
or
mov
loopne
call
xor
add
fcoml
add
repnz
ds
mov
mov
or
imul
adc
data16
inc
pop
mov
dec
arpl
sbb
push
leave
pop
imul
test
outsl
dec
das
or
inc
and
push
daa
roll
out
cmpsb
mov
cmp
jb
dec
repz
repnz
or
dec
add
mov
lock
cmp
lea
mov
dec
push
push
xorl
xor
push
sub
inc
iret
les
stos
pusha
loop
dec
ret
push
mov
add
dec
pusha
sbb
jns
inc
inc
inc
add
mov
adc
mov
clc
and
mov
int
popa
or
inc
fdiv
dec
std
fld
mov
push
addb
int3
cmpsb
std
inc
cmpsl
sbb
pop
lret
in
mov
outsl
call
adc
pop
push
inc
leave
je
js
cs
rcl
add
pusha
jle
or
jb
cwtl
ljmp
or
xchg
push
sub
sahf
sub
fnclex
add
push
inc
xor
lods
mov
aaa
mov
push
rcrl
in
mov
loopne
dec
cmp
hlt
rcll
inc
add
inc
xor
mov
mov
xor
add
es
orb
fisubl
nop
cmp
sbb
js
scas
add
mov
cs
jge
call
push
sbb
mov
push
xchg
cmp
mov
mov
clc
jle
scas
or
pop
adc
xchg
mov
sub
cmp
ret
add
and
xor
add
out
sbb
aam
lock
rorb
stc
or
xchg
jno
add
mov
cmpsl
jns
xchg
nop
jo
xchg
mov
add
cmp
in
loop
adc
sub
push
pop
sub
and
xchg
adc
cs
xor
mov
or
call
cs
xor
dec
or
jnp
mov
adc
jg
hlt
xor
lahf
popf
cmp
jo
subl
pop
lock
enter
jne
xor
adc
add
lock
les
pop
fldl
mov
xchg
mov
inc
xchg
cmovnp
mov
or
iret
sub
mov
popa
inc
add
les
lock
adc
jge
inc
sbb
or
jl
ds
rolb
pushf
das
push
loopne
out
push
sbb
jmp
popa
pusha
out
pushf
std
and
adc
cmpsb
sub
add
adc
and
sbb
daa
pushf
imul
pop
ret
xor
xor
adc
clc
in
gs
jnp
arpl
cld
or
inc
adc
movsl
adc
push
pusha
popa
and
divb
jno
adc
add
sub
into
jle
call
add
lock
jg
push
adc
jbe
testb
sub
lcall
shlb
aam
adc
dec
loope
pusha
test
mov
in
add
xchg
push
sub
adc
aaa
ret
jle
xor
sbb
push
sbb
das
xchg
dec
pop
cmp
cmp
adc
or
xchg
xorb
and
xorl
push
jae
inc
popf
lods
in
cmpsb
int3
or
lods
add
imul
pop
mov
pop
out
dec
mov
ds
in
sbb
in
cmp
add
cmp
inc
lock
xchg
jmp
lock
jle
jmp
ret
fcomp
inc
jnp
inc
add
cmp
test
jne
dec
pop
cmp
sbb
sbb
pushf
sbb
roll
mov
sub
nop
fbld
or
xchg
outsl
aaa
add
sbb
je
test
push
sbb
adc
push
adc
and
mov
es
ds
shrl
push
xchg
mov
cli
aas
sub
lcall
test
mov
je
je
movsb
outsb
scas
je
cmp
mov
daa
mov
add
cwtl
aas
mov
or
arpl
ficomps
fisubs
cld
mov
popf
pop
sbbl
inc
arpl
xchg
sarl
pusha
xor
inc
pop
lock
leave
call
push
jo
push
add
add
outsb
jmp
cmp
pop
adc
adc
mov
pusha
std
loope
push
data16
dec
pop
mov
loopw
jp
inc
mov
hlt
cld
inc
adc
and
jo
outsb
movsb
daa
pop
jg
adc
push
cld
push
sbb
add
push
in
shl
in
enter
stos
cltd
push
dec
orl
bound
mov
shll
in
sub
pop
mov
insl
dec
or
je
adc
jnp
scas
outsl
xor
push
in
xchg
or
jne
and
xchg
sub
add
in
repnz
hlt
and
jmp
xchg
out
and
sub
xchg
out
adc
push
sub
loopne
or
frndint
push
mov
xchg
cs
movsl
pop
mov
nop
sub
inc
push
adc
out
nop
jb
int3
xor
sahf
inc
mov
sahf
inc
push
xor
cmp
sahf
sbbl
jo
inc
arpl
push
pop
fwait
sarl
xor
inc
inc
push
sahf
arpl
dec
imul
pop
out
add
or
or
insb
xor
pop
sahf
out
dec
jmp
outsl
jl
xchg
dec
xchg
cmpsl
roll
jmp
int
push
imul
or
lcall
insb
pop
mov
pop
das
imul
pop
sbb
mov
loop
enter
xchg
mov
xchg
adc
dec
sub
jne
push
jmp
test
push
mov
add
mov
test
or
sbb
pop
adc
and
jo
stos
movsb
push
push
loop
pop
push
sub
bound
mov
test
pop
jbe
adc
rorb
lret
fcompl
sahf
fldenv
nop
rclb
movsl
push
xchg
mov
jae
pop
sbb
xchg
or
rcll
add
int3
outsb
adc
xor
jmp
adc
inc
sbb
je
mov
fdivrl
jg
cli
sbbl
fstl
or
inc
dec
je
cltd
sti
das
or
sbb
into
or
push
in
add
jp
in
push
xchg
out
push
xchg
call
or
pop
in
cmp
xor
testb
xchg
icebp
mov
or
or
jb
xchg
adc
mov
pop
jg
sub
pop
dec
loopne
loopne
ret
xor
add
cwtl
pop
xor
cmp
and
aaa
rorl
or
mov
mov
incl
jne
cmc
add
sbbl
pop
imul
sbb
clc
sbb
dec
push
sbb
popf
and
adc
add
sub
adc
mov
jne
pusha
hlt
rorb
sbb
pmuludq
add
jno
push
ret
push
sbb
lds
or
mov
adc
and
xchg
and
add
sbb
ja
add
add
push
mov
adc
or
mov
mov
xchg
and
repz
mov
xor
dec
mov
jo
sbb
or
loopne
cmpsb
loopne
xchg
daa
adc
stos
add
std
and
out
push
adc
adc
mov
push
push
add
clc
inc
cmp
lods
jbe
push
out
adc
adc
xor
inc
mov
dec
or
mov
mov
lock
add
clc
jne
pushf
add
sbb
mov
clc
add
rolb
dec
or
ficoml
add
movsb
es
push
sbb
pop
push
pusha
push
xor
test
push
mov
fwait
or
add
or
je
loopne
or
jge
gs
inc
loope
mov
rcr
jl
ds
pop
lret
mov
dec
and
push
and
and
insl
loop
sub
movsl
fsubr
xchg
pop
rcrb
data16
add
push
sbb
inc
les
imul
leave
insl
jg
xchg
dec
enter
mov
adc
sbbb
adc
push
sbb
roll
xchg
inc
imul
clc
sub
mov
sbb
jge
adc
inc
addl
push
and
mov
adc
xchg
cwtl
add
imul
test
xor
pop
and
jnp
loop
bswap
in
pop
je
pop
lds
and
adc
ficoms
jae
mov
mov
addr16
outsl
inc
or
fmuls
jmp
add
mov
jb
sub
or
or
xchg
sub
sub
dec
mov
jge
push
cmpl
pop
mov
add
scas
repz
pusha
movsl
push
mov
cli
cltd
out
das
aaa
mov
cmp
jbe
shll
adc
scas
inc
push
leave
push
xor
orb
xlat
xchg
cmp
imul
imul
mov
inc
mov
add
stos
mov
es
inc
lock
or
add
add
mov
dec
xchg
inc
and
sbb
xchg
adc
add
add
add
and
test
jne
and
dec
dec
stc
add
test
push
lahf
xchg
cli
test
lea
add
mov
jae
sub
cmp
push
cmp
push
pop
push
inc
ret
jmp
and
pop
add
xchg
mov
test
scas
ret
xchg
andb
lcall
push
xlat
or
frstor
add
test
loopne
inc
jne
fildl
fs
mov
pop
dec
sub
and
lock
or
nop
inc
leave
xchg
std
aaa
aas
shlb
add
inc
sub
mov
popaw
sbb
xchg
das
add
mov
andl
jnp
mov
andl
cmp
and
shrb
inc
mov
lcall
add
jnp
rcrb
ret
pop
aad
push
stos
call
loop
mov
ret
shlb
add
pop
aaa
loopne
sub
and
pusha
ss
dec
or
data16
and
cmc
pop
ret
add
or
rcll
aaa
pop
pushl
mov
adc
ret
xchg
pop
nop
add
imul
push
roll
push
push
pusha
adc
or
ss
mov
nop
nop
mov
cmp
push
subb
push
pop
loope
nop
push
inc
cmp
dec
inc
mov
add
push
cmp
test
xchg
mov
lea
mov
cmp
mov
mov
and
dec
arpl
or
ss
xchg
cmp
xchg
or
cmp
push
sub
cmp
add
shrb
add
lea
clc
mov
mov
mov
shr
inc
adc
out
pop
or
xlat
arpl
cmp
dec
stos
push
dec
lcall
xor
add
push
add
and
jae
das
sbb
sub
rorb
lods
push
xchg
loope
dec
add
inc
in
clc
scas
inc
mov
and
inc
mov
hlt
adc
fisttpll
fcoml
pop
les
cmp
enter
rcll
xchg
insb
pop
sbb
jbe
or
dec
fdivl
daa
add
mov
es
push
insb
sbb
adc
dec
subb
lods
insb
push
push
adc
ds
movsl
mov
jle
rep
jo
andl
mov
mov
push
xchg
push
xor
add
inc
xchg
sbb
andl
sbb
or
xor
sbb
jns
mov
xor
dec
dec
pop
enter
push
inc
sahf
ret
and
fistpl
push
jecxz
xchg
or
push
hlt
jp
sarl
sub
fisubl
mov
out
or
pusha
je
push
bnd
add
movsl
lret
jae
je
mov
add
out
or
and
mov
adc
shrl
mov
push
wrmsr
les
add
imul
ret
cmovg
mov
push
mov
hlt
adc
adc
pop
xorb
push
loop
jl
subl
mov
rcr
xchg
pop
inc
cmp
cld
mov
outsl
push
fsubr
pop
cld
sub
pop
roll
rolb
repz
scas
aas
inc
and
jbe
sub
lea
aam
or
push
in
add
punpckhbw
inc
inc
cmp
jb
push
and
movsl
dec
push
pop
leave
jo
cmp
sub
or
lds
leave
nop
popf
add
inc
sbb
cmp
out
mov
adc
pusha
or
sarb
jns
cmp
rolb
sbb
adc
mov
hlt
out
push
add
sub
jl
test
into
xchg
jg
mov
sahf
jg
scas
add
in
sub
mov
sbb
pop
mov
ret
push
push
out
push
cld
fists
sbb
shr
not
sbb
dec
dec
aam
push
mov
gs
imul
popa
jbe
push
es
xor
push
and
or
out
add
xchg
add
sub
imul
cmp
xchg
imul
repz
cmp
inc
inc
inc
cmc
xor
repz
dec
jl
int3
movl
inc
add
daa
dec
push
cmpsl
fiadds
dec
pop
movl
mov
inc
add
xchg
sub
jae
fwait
sub
inc
mov
lea
out
and
decl
jno
jne
jecxz
cmp
bound
bound
xchg
cmp
bound
rcrl
add
je
xchg
mov
push
das
pusha
sbb
xchg
movl
push
mov
pop
es
sub
xor
jbe
jmp
iret
inc
adc
adc
fs
daa
or
xchg
lods
fs
jge
jo
push
adc
push
xlat
or
sbb
mov
gs
sub
in
ret
push
ds
cmp
test
add
enter
bound
js
sbb
rcll
and
lret
shll
jg
jl
cmp
push
mov
dec
movsb
push
mov
push
cmp
cmpsb
rclb
add
dec
and
aam
idivb
dec
sub
or
sbb
push
mov
jp
xchg
sbb
xor
jge
fldl
sub
xor
pop
divl
mov
cmp
mov
icebp
pop
push
sti
rep
or
fnstsw
sub
or
sbb
lea
mov
cmp
and
dec
sub
sbb
data16
loope
arpl
mov
push
sbb
adc
pop
push
shrb
lea
push
push
mov
jae
cmpsb
xlat
push
and
push
mov
xchg
mov
loopne
adc
inc
sub
inc
aaa
sbb
icebp
adc
push
das
adc
sub
inc
pop
adc
adcl
aas
mov
mov
imulb
rol
addb
loop
movsb
js
mov
pop
arpl
push
sub
sbb
sub
test
ret
inc
xchg
into
or
cltd
jle
repnz
mov
mov
push
iret
test
jecxz
sub
mov
aam
jae
cmp
mov
push
push
push
or
push
jns
sbb
imul
ljmp
sbb
push
add
sbbl
mov
hlt
lock
out
sbb
push
mov
push
dec
push
push
push
addr16
mov
mov
or
inc
std
jo
cmp
in
adc
in
dec
or
dec
push
push
scas
ret
mov
ja
xor
xlat
mov
lds
push
lret
mov
cmp
out
mov
icebp
roll
imul
dec
sbb
inc
push
add
dec
and
sarb
xchg
mov
mov
jne
nop
loopne
mov
pop
sbb
sbb
push
imul
fldenv
inc
addr16
cmp
dec
xchg
adc
jo
inc
cmp
mov
jne
jnp
ret
xchg
push
sbb
cld
sub
mov
inc
clc
adc
mov
adc
add
fadds
popa
fisubrs
cmp
and
adcb
pop
add
mov
mov
in
pusha
or
pop
or
ret
push
dec
xor
mov
and
repz
inc
clc
test
cmp
mov
sub
subb
ss
adc
xor
je
dec
rorb
nop
outsl
inc
adc
push
sub
sar
emms
add
lcall
sbbb
jp
cmp
fwait
loopne
dec
sbbb
xor
ret
hlt
and
sub
pusha
xor
cmp
jbe
dec
jb
xor
pop
sbb
scas
jo
or
ja
cmp
jnp
ret
sub
sub
cmp
rcll
mov
mov
out
test
push
dec
mov
xchg
or
call
cmp
cmp
xor
loope
add
adc
push
jmp
add
fisubl
cmp
fistpl
icebp
xchg
mov
fiadds
test
push
dec
pop
jl
je
push
mov
add
cmc
shl
mov
dec
xchg
test
aaa
push
mov
cmpl
rcrl
les
dec
jbe
pop
icebp
ja
inc
lea
pushf
sbb
push
or
add
lock
lock
pop
dec
jmp
inc
mov
pop
enter
add
adc
jg
inc
jmp
dec
ss
mov
sbb
dec
add
jne
sub
outsb
sub
outsb
sar
pop
xor
cltd
mov
pop
cmp
rclb
sub
cmp
jb
jae
push
push
push
or
repz
jmp
dec
hlt
jae
xchg
and
jae
jne
outsb
lret
add
shll
adc
icebp
xor
fistpl
push
adcb
add
es
mov
pop
cmp
clc
sub
sub
stos
rclb
inc
and
ds
sbb
add
dec
jnp
insl
push
xorb
cmp
movsb
aam
cmp
add
nop
sbb
aaa
cmp
test
jno
adc
nop
dec
push
sbb
sbb
sub
dec
subl
ja
adc
xlat
xor
out
daa
or
ja
mov
cmp
add
test
adc
add
enter
lahf
arpl
adc
and
or
adc
lods
dec
es
adc
and
lahf
arpl
dec
mov
pop
adc
and
adc
xchg
lret
add
addb
js
and
dec
repz
or
je
mov
jo
push
ljmp
rcr
cmpsl
jne
mov
lods
out
mov
cmp
or
dec
pop
ret
ret
fwait
add
adc
or
lock
and
test
sub
cltd
aaa
ss
mull
add
stos
pushl
xor
push
dec
adc
out
and
push
and
xchg
mov
outsb
loopne
xchg
or
and
and
nop
sub
adc
sub
nop
sub
nop
es
sub
nop
sub
pusha
daa
nop
sub
nop
sub
mov
sub
cs
pop
push
in
int3
or
jmp
cmp
cmpsb
movsb
in
pop
test
cmp
inc
jl
sub
add
pop
jne
cmp
pop
mov
mov
movsl
lods
sbb
movl
sbb
and
or
in
push
adc
add
ja
in
std
jbe
or
call
or
sbb
adc
sbb
xchg
or
lock
mov
pop
mov
ret
cmpb
rolb
data16
inc
mov
dec
cmp
fdivs
pop
test
jge
test
xlat
sub
or
rcr
pop
sub
add
xor
shlb
adcb
lds
xchg
sarl
or
mov
in
loop
fimuls
enter
aas
fsubrl
loopne
fdivp
xor
in
aam
or
data16
mov
add
jge
push
push
cmp
jo
pop
addb
xchg
add
mov
adc
incb
gs
add
mov
test
or
cmp
jno
sbb
or
cmp
sbb
jno
jg
or
sbb
mov
pop
dec
inc
adc
inc
fsub
pusha
push
lret
aad
lret
mov
jg
out
jne
movsb
aaa
mov
pop
lock
sahf
movsl
adcl
sarb
mov
jne
xlat
ret
bound
jne
ficompl
mov
mov
cmp
mov
and
push
dec
popa
mov
lock
mov
sarl
ja
adc
ds
jmp
push
mov
add
xor
lcall
lcall
push
inc
and
cmp
jle
ja
or
or
push
sub
add
mov
dec
ret
addb
jbe
or
jecxz
jne
bnd
jmp
cmp
movsb
rcrl
pop
fstpl
in
jmp
add
mov
xor
mov
addr16
dec
xor
jb
jmp
pop
or
jmp
or
or
or
int
pop
mov
adc
dec
js
mov
test
addb
sbb
xchg
inc
stc
push
enter
dec
adc
lods
inc
popa
shrl
jecxz
mov
inc
jne
dec
cmp
mov
cwtl
orl
sub
fldl
xchg
je
in
mov
shll
movsb
leave
rorb
mov
sub
sbb
stc
insb
adc
arpl
jnp
or
push
mov
or
cmp
js
roll
sbb
mov
and
pusha
inc
or
jo
insl
or
fisttpl
push
cmp
and
rorb
loopne
jmp
les
or
data16
es
mov
xchg
or
lods
dec
mov
call
lock
inc
push
es
inc
rcr
add
or
push
rcll
push
mov
addb
pop
imul
xor
cwtl
jmp
and
mov
test
jmp
loope
loope
roll
or
out
es
inc
jns
mov
sbb
pop
inc
rol
and
out
stos
mov
pop
fdivr
aam
add
fcoms
mov
stos
pusha
mov
pop
clc
jmp
mov
xchg
mov
mov
insb
sub
inc
sub
jbe
es
loope
or
mov
inc
xchg
push
dec
or
push
pusha
pop
xor
cmp
jl
mov
adc
mov
pop
xor
sub
test
jbe
jmp
js
add
pushf
jae
dec
movsl
sbb
push
pop
pop
add
loope
clc
rolb
mov
mov
sbb
out
and
pop
loopne
scas
stos
sti
or
push
outsl
xchg
fnsave
sub
pop
pop
loopne
test
or
loope
pop
mov
lods
inc
inc
sub
add
jge
add
and
in
pop
add
pop
or
dec
loope
std
repz
leave
rclb
xor
or
mov
xor
sub
add
pop
xor
lea
loop
or
cwtl
jge
or
andl
inc
adc
mov
inc
sbb
push
insl
mov
jl
mov
inc
inc
scas
add
jb
xchg
ljmp
aas
and
push
or
es
push
loopne
rorb
jp
sub
inc
clc
adcb
pushf
clc
xchg
or
lcall
dec
ds
out
in
xchg
mov
mov
push
sub
pop
and
mov
incl
andl
dec
jp
bound
pusha
lods
or
adc
mov
pushl
pop
or
lock
inc
push
mov
daa
nop
loopne
jmp
sbb
xor
or
xor
js
ror
daa
loopne
sub
and
and
js
xor
pop
push
test
cmp
jl
xor
gs
inc
dec
call
fmuls
dec
and
add
push
lcall
inc
mov
movsl
push
loope
mov
loope
add
lods
pop
dec
jae
jb
inc
into
test
incb
mov
pop
shrb
cmp
bound
or
and
and
dec
shlb
mov
movsb
jmp
fadds
out
or
or
cs
and
and
test
push
pusha
sub
sbb
pusha
xchg
xor
rolb
rorb
lock
xor
mulps
stos
mov
xor
scas
setl
cs
or
addr16
inc
arpl
mov
shl
push
xchg
sub
xchg
cmp
xchg
js
mov
xchg
jmp
xor
jbe
fmuls
int
out
jmp
rorb
dec
loopne
loopne
sbb
outsl
push
stc
push
popw
inc
push
xchg
aas
fdivl
jne
xchg
and
inc
cmpsb
cltd
scas
subl
es
or
add
adc
push
jl
arpl
sbb
add
add
sbb
js
add
xchg
mov
push
push
inc
push
sbb
lahf
xchg
pop
add
xchg
daa
imul
lds
shll
loope
mov
or
jbe
and
inc
shlb
push
lahf
pop
mov
nop
mov
add
push
cmp
orl
cmp
clc
dec
sub
fcmovb
cmp
inc
mov
sbb
mov
lea
es
sbb
je
loopne
dec
insb
jmp
cmpl
pushf
push
addl
xchg
enter
inc
or
push
sub
push
adc
jnp
movsl
sub
inc
add
lods
pusha
test
or
push
clc
mov
lea
cmp
aam
push
sbb
inc
cwtl
jne
jne
or
popa
sbb
jp
adc
dec
cmpsb
xchg
or
in
int
rclb
push
push
mov
js
cs
cs
inc
add
push
insb
and
dec
cmp
xor
mov
add
add
aas
cs
push
or
fcomps
js
and
adc
cltd
fisubrl
xlat
pop
push
fsubrl
or
pop
xor
mov
popa
bound
ss
call
test
mov
movb
xchg
hlt
xchg
cmp
loope
mov
fmuls
and
and
data16
insl
sbb
jle
xor
mov
xchg
ljmp
push
add
repnz
xchg
push
add
pop
js
xchg
in
int3
imul
mov
in
inc
or
dec
in
add
jecxz
sub
pop
push
sub
and
mov
call
into
sbb
adc
arpl
les
test
adc
lods
mov
pop
cmp
ljmp
pop
lret
ret
aaa
mov
int3
dec
sub
xor
hlt
ret
enter
push
shlb
rcl
inc
or
arpl
fwait
or
shr
or
pop
fsubrl
add
add
mov
push
inc
mov
lcall
or
push
mov
fiaddl
push
mov
sti
inc
adc
je
adc
je
sub
rcrl
call
ret
push
dec
fidivrl
test
stc
cmp
mov
nop
xchg
rorl
in
pushf
cmpsl
mov
or
popf
dec
sub
mov
sub
cmp
call
out
mov
mov
adc
fdivrl
sub
mov
test
loope
push
dec
and
sbbb
inc
nop
cmpsl
inc
inc
loopne
dec
jp
movsb
rclb
xor
dec
js
test
and
repnz
jmp
in
add
cmpb
fildl
mov
mov
jmp
cmp
add
jle
aaa
je
testl
jne
js
sahf
sti
mov
mov
dec
rorl
jp
dec
mov
push
mov
and
ljmp
movsb
outsl
push
test
xchg
mov
mov
imul
mov
dec
hlt
movsb
lock
jge
sbb
fwait
int
mov
add
lahf
sbbl
div
cmp
and
sbb
xchg
sti
and
lret
out
out
add
into
cld
fwait
mov
adc
inc
loopne
js
in
or
rdtsc
loop
or
daa
adc
insl
test
mov
xchg
add
and
mov
sub
clc
popf
jnp
jns
lods
mov
cmp
add
popf
pop
push
sub
inc
jbe
mov
sbbb
fadd
orl
ret
push
test
fisttps
roll
shlb
add
loop
mov
je
xlat
mov
repz
push
mov
fildl
addr16
dec
inc
je
shrl
mov
add
push
movsl
jmp
std
and
mov
shlb
jp
cwtl
sub
lock
loop
andl
xchg
pusha
sbb
push
push
cli
in
stos
cmp
push
mov
stos
adc
mov
out
sbb
dec
lock
mov
es
add
mov
add
ret
movsb
popa
fsub
add
stos
mov
sbb
dec
lea
cld
nop
pop
dec
xchg
or
mov
add
jnp
xchg
push
out
cmp
sub
mov
cmp
loop
add
mov
cmp
mov
pushl
adc
shrb
adc
jl
pop
test
push
xor
push
insl
loop
inc
das
pop
stos
pop
pop
dec
dec
mov
inc
xor
adc
out
lock
xchg
or
jo
bound
inc
mov
xchg
xchg
add
psraw
xorb
xor
pop
call
int3
xchg
ljmp
fsts
pop
popa
and
pop
sub
jnp
xchg
or
in
cmp
xchg
cmpb
call
push
mov
push
inc
push
stos
add
imul
cmpl
adc
lret
add
ljmp
adc
jmp
outsb
add
add
in
push
mov
add
push
push
lret
add
mov
add
xchg
add
enter
rcrb
paddw
shlb
or
cmpb
cmp
js
or
in
iret
pop
adc
mov
push
push
jmp
outsb
lock
xchg
xor
dec
loopne
inc
adc
xchg
inc
sub
andl
movsb
inc
and
inc
mov
faddl
out
cltd
in
mov
aas
dec
inc
in
jp
hlt
push
js
mov
jo
mov
xchg
xor
push
ss
lods
inc
loopne
adc
cmp
or
clc
sub
cs
std
pop
cmp
je
inc
fsubrl
sub
andl
jmp
ds
je
ljmp
in
or
ret
jg
outsb
adc
in
cmp
or
outsb
add
push
jge
notl
push
jle
xchg
ja
jb
push
or
jp
outsb
push
or
bound
fstl
xor
inc
push
loop
sub
jb
xor
sub
jge
cmpsb
dec
cmp
popf
cmpsl
mov
mov
shlb
pop
orl
or
xor
fidivrs
inc
jmp
inc
jo
add
inc
sahf
cli
addr16
and
add
add
jne
xor
and
iret
add
and
sub
data16
push
cs
ja
movsb
pushf
or
xor
out
lret
jmp
pop
cmpsb
ljmp
and
add
nop
inc
xor
les
xchg
shlb
adc
sbb
insb
bsr
cli
aas
mov
and
hlt
xor
jo
pushf
push
mov
pop
test
inc
rcrb
fcoml
cmc
mov
leave
adcb
add
repnz
fdivl
fnstenv
jl
loop
aam
sub
sub
mov
repnz
add
loopne
fsubrs
shlb
rolb
xor
xchg
enter
subb
push
jns
cmp
push
in
pop
mov
mov
sbb
jecxz
adcb
and
ficoml
sbb
std
rclb
push
les
fmul
andl
push
repnz
test
aad
jnp
jno
lea
jne
jmp
xor
or
adc
pop
aad
mull
xor
rcll
add
lods
into
shlb
je
int3
add
add
mov
add
pop
stos
jl
outsl
cld
sbbl
icebp
sbb
sbb
sub
hlt
test
dec
push
cwtl
sub
xor
mov
add
jp
xor
inc
pop
mov
outsl
mov
mov
dec
test
pop
gs
test
pusha
jb
mov
xor
and
test
rolb
cltd
push
cmpb
dec
mov
es
insb
mov
loopne
add
inc
loopne
xchg
dec
aad
lock
popf
xchg
xor
push
mov
and
pop
add
lahf
mov
mov
mov
jns
mov
pop
cltd
stos
add
push
cmpsl
fcmovnbe
or
cmp
cmpsb
aas
mov
test
movsb
rcll
mov
mov
push
nop
sbb
shll
mov
push
ret
ss
cmp
daa
lods
jbe
jo
push
and
ds
add
mov
into
inc
dec
mov
daa
dec
push
out
int3
std
test
xor
test
inc
gs
pop
cmp
das
das
outsl
mov
shrb
cmpsl
add
aas
popa
adc
sub
mov
testl
or
xlat
fiadds
jmp
mov
xor
shll
movsl
pusha
movsl
inc
jecxz
push
xor
jp
add
sub
push
xlat
and
lds
inc
dec
xchg
dec
arpl
dec
sub
les
fdivs
pop
ficompl
pop
outsl
mov
xlat
rdtsc
or
out
mov
call
popf
sbb
rolb
js
ret
inc
cmp
sarl
lea
mov
imulb
mov
xor
loop
mov
xor
shr
xchg
push
movsl
test
cmp
adc
mov
pop
js
fs
inc
mov
test
decl
outsb
pop
cmp
call
add
aaa
jmp
add
fisubs
pop
sbb
sbb
jbe
outsb
adc
and
dec
loopne
inc
inc
xchg
data16
adc
mov
or
rolb
fsts
stos
or
movsl
aam
insl
and
jl
leave
movups
add
xor
sub
adc
fmulp
popf
dec
loope
inc
and
icebp
in
mov
adc
subb
imul
sub
or
pop
cld
gs
and
xlat
add
add
pop
add
dec
dec
rolb
enter
cli
push
stos
loop
scas
jp
and
xchg
fsubp
fstp
push
pop
or
and
aam
inc
push
movsl
sbb
mov
fadds
sub
pop
mov
rcll
arpl
adc
sbb
or
xchg
adc
adc
test
arpl
dec
xchg
sub
rorl
std
cwtl
jg
inc
or
xor
cli
pushf
sarb
jge
stos
lock
subl
enter
pop
mov
shl
fs
push
add
sbb
fwait
jno
sbb
push
mov
repnz
fldcw
push
adcl
je
mov
xchg
in
loop
pop
and
cmpl
xchg
jno
hlt
scas
and
dec
cmp
in
mov
jmp
sub
popf
xchg
ss
in
je
outsb
popa
xor
int3
inc
adc
ds
cmp
fistpll
sub
movsb
pusha
hlt
add
sub
outsl
call
pusha
repnz
pop
cmp
dec
sub
adc
scas
xchg
hlt
xchg
test
imul
mul
push
push
add
fstl
lock
xchg
insl
flds
and
jne
xchg
xchg
or
lahf
xor
movsb
fildl
roll
incb
aam
xor
sub
aas
dec
lret
je
and
pushl
outsb
inc
jne
jo
and
in
push
into
or
jle
xor
imul
or
and
push
femms
dec
pop
enter
and
popa
mov
or
adc
jmp
rclb
dec
lods
outsl
insl
aam
pusha
pop
push
jp
adc
push
or
cmp
mov
push
adc
test
lret
mov
dec
push
fstps
push
lods
repz
push
pop
out
aam
les
pop
inc
adc
iret
out
push
xor
movsb
testb
xchg
lret
xorl
and
push
je
pop
dec
jb
imul
arpl
enter
test
lret
enter
inc
mov
sub
fistpll
nop
enter
push
inc
add
pop
int3
mov
and
inc
fsubr
mov
pop
in
inc
mov
xchg
cmp
sbb
fucom
jmp
pop
adc
push
push
adc
les
loopne
loopne
nop
dec
pop
fdivrl
pop
mov
add
add
setle
fcomps
push
push
xor
jle
jp
xchg
in
sub
cmp
cli
fiadds
push
push
pop
aas
rep
jo
inc
pop
aad
cmp
xor
lock
ret
cmovno
inc
gs
mov
loopnew
popf
sar
mov
mov
out
and
add
sar
arpl
xchg
hlt
lock
fsubl
mov
fs
orl
adc
jp
ret
pop
xchg
dec
pop
dec
test
or
and
repz
fs
jmp
mov
or
rcll
xchg
dec
add
ja
add
xchg
jecxz
std
into
idivb
mov
or
push
popa
dec
jb,pt
cmc
pop
and
jge
popa
cmp
mov
push
or
push
add
sahf
inc
insl
pop
xor
fldcw
xor
adc
inc
sbb
jne
inc
out
sbb
and
outsb
aaa
jle
push
add
lds
xchg
clc
push
pop
jmp
insl
ja
sbb
add
pop
lret
push
ss
inc
orb
add
mov
test
test
mov
enter
stc
mov
js
push
shrb
lock
movsb
repz
repz
xor
mov
mov
cmp
int3
rcl
cmp
xor
dec
fdivrl
add
fidivrl
mov
shrl
cwtl
pop
mov
push
cmp
or
jns
jp
rolb
andb
mov
or
testb
cli
sbb
mov
cmp
jbe
subb
cmpsl
mov
add
mov
test
xor
and
cmp
jne
add
iret
cmpsb
cwtl
orl
test
push
jl
rolb
enter
or
leave
test
adc
jb
pop
sub
mov
les
add
adc
pop
loopne
cs
into
adc
js
mov
adc
ret
in
push
mov
in
cwtl
inc
dec
roll
xchg
mov
cmp
sbb
loop
std
xchg
and
push
mov
repz
movsl
sarb
cmp
mov
cmp
sub
adc
dec
arpl
cmp
jb
les
push
jo
orb
jmp
xor
lods
insl
bound
mov
testl
inc
stos
push
fucom
push
xchg
jo
pop
sub
mov
or
sub
popa
loopne
jbe
adc
sub
imul
outsb
je
andl
jnp
inc
lods
into
lcall
lret
bound
mov
or
add
out
or
mov
orb
cwtl
js
push
push
add
aam
pushf
push
test
and
lods
cmp
and
insb
lds
jo
and
or
hlt
pop
inc
push
loopne
and
or
sbb
inc
sbb
stos
sarb
mov
decb
adc
mov
xor
mov
push
in
insl
jmp
mov
out
test
outsl
sarl
xor
dec
test
xor
int3
rol
pop
mov
and
inc
sub
xlat
arpl
inc
dec
ja
pop
jno
shrl
push
loop
bound
xor
lods
in
or
or
add
xorl
adc
push
mov
xchg
sub
sbb
mov
fmull
das
mov
xor
pop
mov
lret
push
imul
jecxz
adc
cli
cmpsb
rcrl
jns
inc
ret
jbe
inc
xchg
mov
push
xchg
mov
pop
mov
inc
or
push
pop
in
fistl
xchg
jmp
pop
andl
sbb
int3
adc
sbb
xor
or
push
jle
inc
je
popf
pop
mov
ret
es
or
mov
push
and
pop
in
mov
cmp
sub
cmpb
adc
xor
pop
pop
ja
leave
jne
adc
cli
mov
dec
xor
mov
subl
adcl
xchg
inc
sub
ja
gs
ret
ret
daa
loopne
outsl
jl
orb
sarb
push
mov
out
mov
xchg
push
aad
add
xchg
stc
test
mov
push
jno
test
int3
or
inc
adc
sbb
fwait
jp
fdivs
jne
mov
jmp
xchg
and
jmp
shrl
add
popa
add
jl
cmc
lock
test
xor
mov
icebp
sbb
das
or
movsl
push
push
movsl
add
sti
aaa
mov
inc
hlt
fstl
mov
loopne
ljmp
sbb
inc
clc
pop
fsubr
pop
faddp
andl
test
fstpl
daa
dec
sub
add
or
into
test
cs
jne
mov
sub
xchg
lods
loopne
xchg
mov
ret
dec
or
test
and
xchg
inc
xor
jp
fmulp
ficoms
mov
mov
mov
cwtl
imul
addb
xor
mov
sub
sub
push
mov
pop
fisttps
or
rolb
setnp
add
adc
pop
clc
mov
add
inc
or
es
orb
call
movsb
or
mov
cmp
dec
mov
int3
dec
add
negb
mov
lock
push
add
sub
pop
addb
jne
pop
addr16
ja
sub
pop
add
adc
push
sub
add
jmp
mov
cmp
jge
pop
pop
xchg
adc
roll
mov
xor
sub
loope
add
push
andl
pusha
lds
pop
imull
xchg
add
lea
popf
cmp
add
xchg
inc
add
mov
test
icebp
sub
pop
add
cmp
add
adc
xor
dec
test
pop
filds
mov
shrl
into
inc
add
movl
sub
repnz
mov
or
fmuls
pop
push
dec
or
dec
jecxz
and
mov
xchg
enter
sahf
ss
mov
adc
inc
das
aaa
mov
js
push
inc
in
or
jmp
xor
adc
jl
cmp
mov
adcl
decl
inc
adc
jecxz
jecxz
adc
mov
addr16
inc
jecxz
xchg
mov
inc
es
cld
jno
ljmp
or
lsl
sbb
mov
dec
aad
sbb
aad
inc
pop
enter
add
mov
jecxz
push
add
movsl
pop
mov
sub
popf
cmp
jmp
testb
std
xchg
addr16
aaa
outsb
add
lret
push
xor
xchg
icebp
dec
inc
inc
pop
int3
fwait
and
loop
cmp
stos
xor
and
fisttpl
push
inc
inc
fcoms
js
lahf
shrb
jb
or
sbb
and
add
imul
insl
push
xchg
inc
inc
mov
or
mov
dec
mov
daa
popl
xor
mov
outsl
cmp
lds
dec
dec
cwtl
xchg
xorl
pushf
ret
jmp
mov
push
les
roll
sub
call
and
shrb
sbb
sti
cmpsl
inc
movb
push
add
ret
adc
xor
inc
loop
xor
mov
pop
fnsave
push
jb
push
or
sub
and
das
int
cmp
cmp
mov
sbb
jo
mov
pop
sbb
inc
xchg
and
dec
sbb
in
cld
divb
cmp
xlat
bound
repz
rolb
pop
sub
data16
movsl
test
ds
jp
aad
lcall
add
and
int
jne
mov
mov
push
js
stos
enter
loop
in
out
adc
push
in
pop
or
push
sbb
jnp
dec
push
in
and
xchg
jns
pop
in
or
lods
sub
jecxz
mov
movl
dec
jb
and
orl
imul
leave
and
ret
inc
inc
mov
jp
test
lods
jmp
sahf
pop
dec
mov
sub
out
cmp
mov
add
add
bound
and
inc
add
cmp
movsb
push
adc
add
xor
or
add
clc
dec
imul
popa
test
mov
repz
dec
jbe
pop
sbb
aad
faddl
cmp
xor
inc
mov
mov
icebp
push
or
out
or
push
dec
dec
outsb
pop
xchg
xchg
push
add
sbb
arpl
cli
aam
and
in
cmp
fldcw
sub
and
sub
jle
aam
dec
or
rorl
pop
xlat
xor
loopne
shll
sub
mov
hlt
or
call
adc
data16
add
and
orl
adc
test
pop
cmpl
fisubl
mov
sbb
int3
mov
out
jbe
jne
xor
xor
mov
stos
xor
push
pavgb
fcomps
and
sbb
and
sbb
cmp
inc
fsubs
add
cmpsb
mov
jmp
xor
pop
inc
add
mov
mov
adc
test
sahf
dec
popa
mov
add
cmpsb
je
push
xor
test
cmc
andb
fdivl
dec
lea
pop
je
jo
popa
mov
pop
popfw
or
xor
cmp
dec
rorl
pop
jne
mov
fiadds
iret
sub
xchg
addl
push
pop
push
and
xchg
push
push
cmpsl
inc
mulb
ds
dec
sarb
adcl
jp
push
pusha
gs
jne
pop
insb
arpl
pushf
sub
in
mov
push
in
lock
or
ret
push
push
push
and
sbb
ret
adc
inc
dec
push
into
lock
inc
incb
pusha
das
inc
mov
xchg
mov
jo
jo
adc
add
push
cmpxchg
pop
add
jnp
add
inc
sahf
fwait
in
mov
sbb
lock
stc
rolb
or
and
test
fisubs
adc
push
mov
loopne
mov
cld
lahf
loop
mov
lret
mov
cmpsb
jle
in
roll
fcoms
pop
fsubrs
aam
scas
imul
jo
dec
cmp
leave
adc
mov
arpl
mov
loopne
cmp
mov
or
and
fmuls
xchg
xchg
xor
dec
or
aaa
sbb
push
mov
or
fistps
xchg
cmp
jne
lcall
xorl
or
lret
xor
dec
mov
sahf
push
out
and
sub
bound
cwtl
xor
add
std
leave
inc
test
pop
fnstenv
test
and
enterw
sbb
ss
cmp
mov
mov
clc
jl
or
int
xor
sbb
sarb
dec
sbb
loopne
rcl
lock
dec
leave
sbb
in
push
inc
dec
cmp
xor
sbb
add
add
push
les
add
xchg
cmp
add
jo
or
sti
sbb
or
pop
jmp
xchg
movsl
mov
sarb
or
or
mov
pop
add
mov
sbb
sar
stos
cmp
stc
cmp
xchg
pop
push
sbb
pop
push
push
stos
sahf
pushf
push
sub
bound
je
movsl
lret
push
ss
dec
ficoms
addb
inc
add
or
dec
adc
idivl
or
mov
loop
lahf
rcrl
add
or
dec
adc
pop
sbb
clc
stos
fs
add
push
hlt
jge
inc
adcl
sub
xchg
cmp
rolb
mov
pop
or
xor
sbb
jns
push
cmp
inc
cwtl
popa
out
fisubrs
rcr
mov
and
outsl
dec
in
in
loopne
fwait
cmc
inc
cmp
add
shl
ret
ret
mov
test
pop
or
mov
jae
mov
loopne
sbb
mov
fs
xchg
nop
mov
aad
cmp
pop
mov
lret
in
push
cmp
ret
aad
pusha
insb
imul
sub
dec
mov
sbb
rolb
push
add
std
inc
sbb
xor
mov
push
sbb
inc
fwait
icebp
mov
fsubr
xor
jl
adc
or
jmp
das
shlb
orl
xor
pusha
or
outsb
add
xchg
je
sub
pusha
test
jnp
add
sbb
mov
and
mov
lods
cs
push
xor
movsb
dec
iret
jae
cmp
push
inc
xor
adcb
in
shlb
aas
sti
inc
or
orb
push
cltd
pop
add
aad
pop
push
lret
inc
nop
push
push
cmpsb
into
inc
jne
adc
dec
test
lret
mov
xchg
add
sbb
inc
test
fsubs
dec
or
fs
fistpll
inc
inc
test
push
subb
sub
push
cmp
inc
inc
cmp
sbb
pop
pop
mov
popf
fs
mov
xor
lret
mov
adc
mov
inc
add
in
out
fnstenv
fidivs
out
add
and
sbb
add
nopl
lea
std
xchg
test
mov
lret
sub
push
ljmp
add
lret
outsb
cmp
add
ficomps
cmp
inc
inc
dec
push
dec
loopne
leave
in
sub
push
push
or
iret
icebp
repz
cmp
xchg
shlb
mov
and
add
or
xchg
push
mov
lea
dec
add
cld
mov
fs
mov
cmp
out
or
xchg
rorl
push
mov
sbb
mov
dec
push
push
jnp
xchg
cmc
and
pop
add
sbb
and
aas
xorb
aas
cli
jmp
push
xor
lods
push
rcrb
xchg
or
scas
cmp
mov
cmp
and
push
pop
or
in
xor
std
sub
push
in
xor
or
cmp
xchg
and
jo
ret
cwtl
sahf
popf
sbb
sbbl
and
or
or
lret
orl
dec
mov
add
dec
jb
sub
and
and
add
sbb
iret
xor
add
jge
fwait
imul
test
pop
ja
ss
sub
jecxz
enter
outsl
inc
jae
push
daa
loope
cmpsl
push
inc
lods
sub
jo
cltd
aaa
adcl
inc
jle
and
sbb
inc
mov
sub
xchg
nop
cmp
inc
xlat
adc
adc
or
jp
rorb
push
dec
and
pop
and
jnp
xor
pop
cmp
push
inc
insb
call
mov
arpl
push
dec
add
pop
jbe
mov
sbb
aaa
inc
sbb
repz
pop
in
xor
fcoml
sub
inc
push
sbb
dec
sub
or
inc
sbb
xchg
pop
rolb
push
cltd
lea
adc
ret
fsts
jns
je
sub
or
or
dec
pop
js
and
pop
cmp
jl
xor
lret
into
xor
or
dec
dec
pop
inc
cmp
inc
cmp
mov
test
xor
jo
sub
cmpb
es
into
jl
arpl
in
ja
insb
push
pop
enterw
rorb
sbb
push
cmpsb
dec
mov
and
mov
in
sub
mov
cmp
jecxz
fiadds
jl
gs
loopne
jmp
or
xor
xor
aam
mov
loope
testb
or
jns
pop
imulb
rcrl
push
push
sbb
jb
loope
xchg
je
sub
dec
int
stos
xor
in
mov
outsl
lock
jne
pop
notl
stos
les
mov
or
dec
push
jge
lret
pop
lds
lea
sub
cs
mov
pop
sub
xor
mov
inc
hlt
push
mov
es
sbb
outsl
jno
push
push
add
or
stc
sahf
or
mov
pop
es
pop
and
nop
xor
xchg
js
add
shlb
push
ss
icebp
push
or
mov
outsl
test
or
add
punpckhbw
mov
stos
or
push
clc
and
and
xor
push
arpl
push
mov
test
adc
aad
xor
cmp
subl
and
movb
adc
test
mov
mov
lock
and
inc
add
adc
mov
nop
adc
daa
xor
mov
andb
mov
fcomps
data16
cmpl
sbbl
fdivl
cmpsl
xor
insl
popa
xchg
cwtl
or
jecxz
adc
loopne
rolb
adc
leave
push
sbb
pop
data16
xor
data16
adc
or
inc
xor
push
cmp
and
data16
aam
test
jne
push
mov
jmp
mov
test
mov
ja
stos
movsl
inc
mov
mov
cli
movsl
adc
push
cmp
int3
mov
lea
mov
adc
push
pusha
or
xchg
cmc
adc
pushf
dec
lea
rolb
and
sarl
ss
pop
fdiv
je
rolb
mov
fimull
lock
add
sbb
mov
insl
fdivs
jmp
adc
cmpb
jne
push
jmp
cmp
xchg
movsl
xchg
or
mov
push
and
bound
jp
insl
cmp
xchg
adc
adc
nop
inc
fisubs
test
inc
in
inc
xchg
inc
and
in
mov
and
test
inc
xchg
add
add
stos
mov
mov
scas
inc
cmc
adc
or
or
fdivrl
sbb
mov
mov
adc
les
lcall
jge
sub
jge
adcb
or
inc
insl
inc
mov
adcb
jmp
shlb
fiaddl
mov
mov
add
mov
cmp
mov
add
jecxz
dec
int
scas
add
jne
add
jne
pop
sub
or
sbb
lcall
or
and
add
subb
xor
test
or
xchg
adc
inc
test
mov
pop
mov
pop
adc
lea
ficoms
pop
mov
mov
adc
sarb
adc
sub
dec
ret
mov
adc
push
fiadds
adcl
and
dec
dec
daa
push
jp
mov
mov
xchg
rcrb
mov
mov
jb
pop
sbb
mov
inc
or
pop
mov
inc
mov
cs
xchg
push
mov
push
hlt
and
xchg
push
and
mov
push
addb
jl
or
sbb
out
rorb
jge
loopne
or
fwait
mov
adc
inc
fcomps
dec
sub
loopne
push
push
fistpll
inc
or
loop
in
mov
sti
add
jae
add
insl
in
es
and
mov
or
xchg
jmp
mov
enter
adc
loope
xchg
mov
and
addl
test
jnp
loopne
imul
dec
or
sbb
daa
or
mov
mov
add
into
xchg
jmp
fldl2t
adc
cltd
add
cmp
add
push
or
ds
sub
push
fldenv
es
push
push
in
out
add
and
add
jns
adc
inc
bound
jg
cmpl
popf
rolb
push
pop
adc
pop
or
pop
add
ds
movl
push
mov
fwait
dec
inc
popa
ret
cmpl
lahf
add
push
es
leave
repz
insb
mov
mov
fnstsw
cmpsb
icebp
adc
inc
mov
push
loop
jmp
inc
lahf
mov
incl
movsl
jno
js
cmp
jl
push
push
push
jp
or
repnz
add
jg
test
mov
mov
jbe
push
hlt
stos
cli
lea
loopne
add
imul
insl
mov
loope
xchg
mov
mov
and
pop
xor
inc
loop
xor
xchg
pop
fs
filds
mov
push
add
insl
sub
mov
aas
xchg
inc
jle
mov
lahf
push
repnz
scas
shlb
jae
sub
test
or
push
aaa
into
or
push
in
xlat
popf
fs
insb
jb
sub
pop
push
cltd
movsb
jb
jo
jl
adc
dec
orb
push
sbb
test
fs
shlb
and
aad
inc
sbb
dec
sub
gs
test
and
sbb
inc
xchg
pop
mov
imul
mov
cmp
and
adc
je
pop
aas
add
inc
insl
adc
mov
and
jbe
insl
movsb
call
xor
add
lcall
jge
or
daa
imul
movsb
xchg
fdivr
mov
add
test
dec
jecxz
push
sbb
sbb
lea
jmp
lock
inc
add
mov
inc
xchg
bound
and
xchg
pop
xor
cwtl
jb
iret
and
arpl
test
mov
iret
push
adc
clc
loopne
dec
fsubs
mov
test
lret
notl
inc
xor
dec
pop
push
inc
rorb
push
or
add
add
aas
pusha
loopne
jae
push
push
xor
or
add
add
jb
adc
repnz
aaa
jo
adc
or
out
mov
mov
pop
inc
add
adc
dec
inc
cmc
dec
or
js
or
push
dec
push
cli
sbb
in
ss
adc
xor
loopne
sbb
mov
or
std
jo
sbb
add
shlb
push
mov
test
sbb
push
test
mov
push
add
add
and
mov
rcr
and
call
pop
orl
pusha
inc
add
cwtl
adc
mov
mov
ret
sub
xchg
add
pop
jae
push
inc
sub
adc
loopne
in
xchg
adc
and
ljmp
lock
inc
sbb
pop
push
in
mov
mov
mov
loope
mov
je
lods
pop
rolb
dec
cmp
leave
popf
test
fnstenv
in
pusha
or
inc
push
sarb
aam
jo
mov
leave
xchg
stos
or
in
inc
push
mov
hlt
xchg
iret
dec
ret
adc
push
cmp
push
lret
cmp
sarl
call
subb
dec
or
cmp
xchg
and
cmp
dec
lock
leave
and
call
inc
xchg
mov
add
sub
or
ficoms
fwait
or
push
push
in
push
lea
jb
mov
in
adc
or
jno
jmp
sbb
add
aam
mov
js
cmp
ret
dec
or
data16
shlb
hlt
adc
lret
mov
sbb
sbb
fadd
dec
mov
std
lret
fmull
jno
ljmp
fsubrs
mov
mov
mov
mov
mov
loopne
lds
adc
ret
jne
outsb
push
out
xchg
out
xchg
mov
imul
test
stos
and
dec
sub
dec
sub
lods
mov
jmp
pushf
cmp
xchg
dec
and
adc
lods
and
xchg
cmp
cmp
cs
or
insl
scas
push
cmp
dec
sbb
jecxz
sbb
sub
out
fs
sbb
sbb
test
adc
mov
and
mov
push
jo
out
outsb
scas
nop
fldt
ja
or
and
xor
or
xor
mov
inc
rorb
push
add
in
mov
je
push
jg
mov
inc
jg
xchg
pop
add
pushf
add
pop
push
cwtl
sub
inc
add
pop
mov
pop
xor
pop
add
rcrl
int3
pushl
popa
mov
test
sbb
test
and
out
sub
add
shrb
fisttpll
push
bound
push
andb
or
rep
ds
push
adc
insb
or
mov
addb
inc
cltd
jbe
and
push
jge
int
mov
shr
push
pop
std
inc
shlb
fsubs
sbb
dec
push
or
stos
mov
in
mov
pushf
mov
push
mov
push
enter
add
push
push
push
and
leave
cli
push
lods
shl
mov
cmpsl
or
shrb
mov
cmp
inc
cli
cmp
mov
aam
cwtl
ja
fdivrs
cmp
jmp
push
push
sbb
add
push
jl
fwait
mov
ja
sahf
cmp
jno
jecxz
pop
mov
cmc
adc
mov
add
daa
push
fwait
shrl
jp
cmp
popa
ja
push
iret
iret
mov
pop
or
lret
sbb
sbb
lahf
jbe
adc
adc
jae
ja
adc
add
adc
ret
sbb
cmp
rolb
xor
mov
test
push
popf
hlt
or
mov
sti
cmpb
shlb
leave
enter
int3
insl
loop
jle
cmp
adc
mov
inc
mov
mov
and
add
pop
daa
inc
mov
mov
repz
push
sbb
sbb
movsb
test
or
or
cmp
mov
scas
mov
mov
adc
ljmp
xchg
jb
out
or
dec
push
mov
fsubrp
or
addb
adc
push
cmp
fstl
dec
sarb
mov
mov
xor
jne
movsbl
push
fnstenv
repnz
out
mov
adc
and
je
pusha
loop
shrl
mov
sbb
push
daa
mov
test
cltd
lds
movsb
jbe
add
pusha
sub
clc
lret
mov
sub
xchg
cmpsl
mov
daa
and
adc
lret
and
inc
add
mov
sub
repnz
and
xor
cmp
fimull
jge
out
inc
push
adc
dec
cmp
mov
pop
clc
loope
sub
sbb
sub
push
shl
cli
xor
push
cmpsb
jbe
cmp
pop
das
pop
frstor
lods
cmpsl
test
cli
adc
cmp
add
xchg
hlt
rcll
and
or
lock
pop
sbb
fs
ret
xchg
lea
add
add
pop
jnp
stc
rep
mov
or
pop
add
repz
push
add
jb
add
jb
or
or
jnp
mov
jmp
or
jno
jmp
push
jmp
mov
jmp
adc
pop
adc
pop
adc
push
mov
jmp
adc
dec
adc
aas
mov
jmp
sbb
xor
jmp
mov
jmp
sbb
and
pop
xchg
mov
mov
jmp
and
jp
std
dec
inc
and
and
pop
hlt
inc
bsf
mov
ret
push
dec
cmp
lret
cmp
push
adc
jp
nop
incb
bnd
sahf
out
sahf
mov
sahf
out
mov
out
sahf
out
fucom
out
jns
jnp
icebp
idiv
scas
add
add
out
adc
push
and
sub
pushl
add
add
push
pop
or
and
or
or
push
movups
adc
mov
call
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
push
or
popa
insl
sub
inc
fdivr
pusha
pop
push
lahf
inc
fcomps
pushf
dec
sbb
int
sub
add
loopne
xor
inc
adc
loopne
fnstcw
sub
xlat
jbe
pushf
les
test
xor
sub
jo
jo
out
aam
ljmp
mov
pop
or
xor
fwait
cwtl
push
jo
fwait
xorb
ljmp
sbb
inc
lea
call
or
dec
or
push
mov
addr16
mov
jo
sub
sarl
daa
enter
loope
push
mov
in
sub
bound
shll
cmp
mov
add
cmpl
je
jle
add
inc
jmp
xchg
xchg
pusha
and
jg
popa
jns
sbb
mov
js
inc
xchg
mov
fstps
xchg
pop
gs
fdivrl
xor
es
cmp
clc
mov
jae
sub
je
test
shlb
fcompl
decl
jmp
inc
or
not
sub
imul
pop
loopne
inc
jmp
cmp
dec
xchg
sub
add
shr
mov
pop
mov
mov
movb
xchg
popa
stos
pop
mov
ret
movl
inc
sbb
jp
xor
sahf
and
sbb
fmuls
loope
std
roll
jge
fsts
dec
sub
or
lea
xchg
push
xchg
inc
mov
das
dec
mov
stc
ja
outsl
call
or
add
lret
repnz
mov
pop
fmull
cmp
dec
sbb
lock
cmp
inc
or
add
xor
and
and
pop
enter
jo
jge
sub
fs
rolb
test
or
mov
push
out
scas
divl
ret
push
subb
cmpl
push
and
out
push
dec
push
popa
add
sbb
cwtl
incb
stos
xchg
push
or
test
mov
insl
mov
je
add
sub
lds
adc
and
mov
aas
and
lock
adc
or
push
inc
or
add
aad
mov
add
push
sbb
add
sbb
js
sahf
xchg
leave
add
jnp
out
push
sbb
push
push
call
dec
sub
or
in
fidivrl
fiaddl
in
and
cwtl
pop
nop
sbb
int3
mov
cmp
sahf
sub
pop
sub
add
inc
xor
movl
adc
adc
and
andb
xchg
add
loope
xor
jnp
iret
stc
in
nop
adc
int3
sbb
lcall
hlt
test
inc
jl
cmp
cs
sbb
jl
fcmovb
rolb
std
andb
jle
mov
jbe
cli
es
lea
cmp
call
push
or
js
sub
test
in
movsl
insb
or
mov
sti
int3
ss
aad
or
pop
lods
das
mov
or
fbstp
jle
dec
cmp
jl
dec
aad
cmp
push
insl
js
je
pop
dec
jae
test
imul
mov
cmp
jae
movzbl
decb
jl
jnp
cs
xor
lods
les
adc
mov
inc
roll
inc
in
lock
mov
add
hlt
mov
int3
movl
data16
lods
add
and
mov
je
jne
pop
repnz
cltd
ja
jmp
test
and
add
ljmp
push
mov
dec
inc
ljmp
enter
cwtl
or
flds
sti
dec
hlt
ret
push
mov
es
es
sbb
lret
js
jne
lea
clc
in
mov
cli
push
push
push
sbb
pop
adcl
xor
movsl
sub
mov
dec
in
push
sbb
js
adc
mov
add
dec
int3
mov
pop
or
cmp
xchg
mov
jle
cmp
jne
mov
mov
inc
lock
int3
inc
adc
and
adc
out
xor
adc
leave
add
sub
popa
xchg
adc
rolb
cmpsl
pop
fnsave
cmp
xor
sbb
sbb
mov
and
cmp
sbb
sub
ret
xchg
cmp
jbe
xor
and
adc
jno
call
add
push
rcr
rcr
sbb
stos
nop
jo
ja
divl
push
ljmp
pop
cltd
push
jmp
push
jmp
mov
hlt
rclb
xor
pop
bound
pop
insl
inc
mov
fnstsw
mov
je
jmp
xor
mov
bound
pop
mov
fs
and
arpl
daa
jne
push
movsb
xor
lret
mov
mov
push
push
enter
sbb
mulb
fwait
push
or
mov
sbb
outsb
inc
push
mov
sbb
sub
mov
mov
shrb
push
aam
bound
or
jg
enter
xor
jge
test
jno
or
jo
sub
xchg
outsb
sbb
lret
mov
lret
je
push
lock
add
xor
ret
add
mov
cmp
or
xchg
rcrb
xchg
and
mov
adc
adc
arpl
mov
out
mov
mov
je
push
push
ret
iret
ret
shl
or
push
and
jnp
xorb
test
inc
in
pop
cmp
orb
push
nop
pop
int
jbe
inc
mov
xchg
add
or
mov
in
push
sbb
or
incl
adc
jne
push
dec
notb
mov
test
inc
cltd
imul
add
and
add
insl
es
dec
imul
jmp
add
push
inc
pusha
adc
jno,pn
xor
icebp
mov
or
xor
or
sbb
lods
imul
cmp
or
jmp
inc
pop
inc
inc
aad
sbb
xor
in
adc
dec
popa
dec
ds
push
or
addl
js
jmp
aad
mov
xor
dec
cmpsl
jno
xchg
and
loop
ds
stc
sbb
cs
jne
inc
xor
dec
cs
je
or
push
push
stos
fwait
xor
clc
jo
cld
cmpl
push
in
xchg
add
or
outsb
xchg
or
xor
pop
mov
xor
pop
adc
mov
in
sbb
leave
jno
xor
lock
xor
cmpsb
jmp
lods
je
cmp
loop
mov
push
hlt
cli
nop
rolb
dec
jl
or
pop
rcr
pop
in
je
shlb
mov
loopne
mov
xor
mov
repz
fdivs
inc
push
mov
inc
push
jg
mov
hlt
imul
sub
aam
xor
pop
jmp
es
stos
cltd
in
les
js
sub
sbb
mov
cmp
add
pop
stc
xor
incl
cs
aam
mov
or
push
sbb
clc
cmp
jnp
sub
ret
ror
adc
push
int3
mov
pop
daa
lahf
inc
mov
adcb
rcl
sub
xchg
jb
js
lret
dec
das
cmp
inc
aam
ds
test
movapd
xchg
inc
popa
in
xor
inc
adcl
shr
lcall
imul
ljmp
mov
sub
enter
inc
adc
sub
xor
rol
dec
jbe
mov
insb
test
or
imul
lds
sti
fisubs
popl
imul
mov
sub
xor
mov
and
xor
pop
leave
xchg
sub
mov
sub
dec
cmp
push
hlt
push
test
and
push
mov
or
out
sub
mov
and
and
push
outsl
mov
jg
mov
xor
and
das
cmp
mov
cmp
push
ret
inc
xchg
add
xchg
rclb
inc
fiadds
test
push
insl
leave
sub
push
xchg
sbb
adc
nop
and
test
les
inc
and
inc
enter
or
cli
hlt
dec
dec
sbb
mov
push
and
and
andl
jmp
cmp
push
cmpsb
jns
xor
sbb
sbb
jno
sbb
pop
add
pop
fcmovne
leave
sbb
sbb
mov
ret
push
adc
gs
int
adc
or
and
icebp
push
cltd
sbb
les
movsl
mov
mov
and
or
push
xor
rclb
inc
mov
and
movsl
iret
lea
push
movsl
adc
cs
jp
pop
inc
fisttpll
enter
inc
rorl
jo
jg
xor
les
leave
fildl
jg
add
popa
adc
dec
loope
mov
aas
cmp
mov
sub
mov
xor
sti
sti
ja
bswap
push
cmp
jne
and
sbb
xchg
jmp
mov
or
cmp
je
mov
fadds
xor
and
pusha
jo
push
xor
fld
dec
aaa
inc
mov
frstor
xchg
popa
addr16
test
nop
xor
inc
sub
inc
mov
mov
mov
or
cwtl
sub
imul
mov
sbbl
sub
inc
fstpl
sbb
inc
pop
lahf
bound
inc
dec
and
push
dec
cwtl
push
sub
rorb
addr16
lock
sub
stc
in
sbb
xor
ret
sub
xchg
jl
lret
lods
arpl
jo
sbb
push
cs
js
movl
or
sbb
out
and
add
jno
mov
mov
push
xorb
je
or
or
sub
repnz
push
cmp
mov
pusha
cmp
mov
xchg
xchg
es
in
xchg
adc
les
add
test
jmp
lea
daa
je
cmp
decl
loop
sub
push
cmp
jge
mov
push
adc
mov
fs
pop
lea
xor
lock
lds
rclb
rclb
roll
lret
lret
jbe
or
lock
clc
clc
cld
sbb
insb
sbb
push
add
add
repnz
push
mov
popa
lcall
pushl
in
dec
je
add
adc
cmp
dec
or
mov
shr
cmp
mov
mov
or
mov
sub
push
xor
sub
adc
and
cmp
lds
sbb
jne
or
mov
cli
or
cli
sub
and
fistps
jnp
je
push
add
dec
or
inc
cmp
xchg
rep
shl
cmp
jmp
sub
movsb
or
jg
push
mov
test
je
cmp
jne
sbb
xchg
sub
jne
adc
rclb
out
fisubrs
add
xor
add
dec
push
ficomps
xorb
inc
jmp
sbb
xchg
sarb
idiv
inc
inc
imul
push
clc
push
sub
sbbb
or
and
dec
sbb
xchg
movsb
jmp
add
add
adc
or
cmp
mov
stc
mov
lods
sub
or
push
adc
push
push
lock
cmp
je
imul
test
jbe
inc
test
jmp
daa
dec
inc
lea
or
inc
outsl
xor
aad
out
sti
int3
xor
repnz
hlt
and
cmp
jae
add
inc
cmc
xchg
push
push
ds
jne
push
jns
push
decb
inc
movsl
adc
incl
je
cmp
pop
cmp
je
cmp
jne
inc
jne
mov
sub
jnp
shll
lods
xlat
or
ret
subb
aad
xor
jb
mov
nop
cmp
mov
cmp
test
add
sub
loop
cmp
jne
movsb
mov
rorb
sub
aas
outsl
add
shrb
push
inc
sbb
add
out
xor
fnsave
jmp
push
jl
or
jg
push
ficompl
mov
jmp
and
push
jmp
sub
aaa
aaa
inc
jl
inc
jg
aaa
push
add
int
fld
out
dec
mov
sub
mov
inc
je
sahf
mov
jle
into
les
outsl
adc
test
mov
inc
xchg
or
jo
xchg
mov
mov
mov
out
inc
fstpl
or
loop
mov
jmp
or
outsb
push
xor
pop
cmp
and
push
pushl
pop
push
mov
inc
cmp
pusha
mov
jg
xlat
cmc
ret
push
sub
shlb
push
or
out
jo
or
cmpb
popf
daa
lcall
or
dec
mov
sub
test
and
aad
dec
jge
gs
pop
das
fimuls
lods
mov
and
cmp
inc
dec
inc
add
mov
ja
adc
cmp
mov
inc
inc
inc
out
jmp
xor
push
and
xchg
jne
sub
xchg
cmc
popa
ljmp
js
fs
pop
sub
std
xor
cmp
xchg
popf
mov
cmp
dec
adcb
pop
fcmovu
and
std
aas
ja
or
je
add
jno
out
adc
cmp
mov
push
and
adc
inc
call
ljmp
adc
shrb
lahf
cld
adc
or
pop
push
sub
jmp
pusha
shr
pop
adc
sub
cmp
xchg
popa
ret
or
pop
mov
js
testb
adc
adc
xor
sbb
or
call
cmp
push
lcall
scas
andl
mov
mov
mov
ja
inc
test
xor
push
or
sub
pop
inc
sub
push
lock
sub
jge
jne
push
xchg
test
shrl
push
repnz
sahf
xchg
scas
push
sbb
pop
push
add
add
jmp
repz
bound
add
cmpl
cmp
xchg
xor
in
ret
inc
adc
jg
inc
and
mov
xorl
xchg
pop
cli
inc
inc
lock
xchg
or
dec
inc
sbb
jne
mov
push
push
adc
int
push
inc
xor
icebp
jmp
inc
rolb
sbb
adc
add
stc
lods
test
and
pushf
adc
imul
cs
jo
jl
xchg
rolb
dec
or
push
mov
adc
push
out
les
push
ret
aas
mov
xchg
shl
movb
push
mov
fidivl
cmpsb
std
xor
orl
push
cmp
jo
cmp
mov
and
jecxz
mov
cmp
dec
dec
push
cltd
sbb
jae
addr16
push
inc
ret
rcl
aam
test
cld
sbb
pop
stc
cmp
mov
push
jg
js
cmp
inc
ds
cmp
lea
and
orl
inc
or
mov
sti
sub
mov
dec
dec
inc
or
outsl
pusha
sub
or
cli
add
loope
inc
jl
jbe
xchg
sub
enter
push
jmp
and
dec
add
pop
push
cmpb
jne
popa
or
outsl
lods
and
out
shll
bound
sbb
outsb
sbb
ror
sub
pop
in
je
clc
sub
mov
push
and
sub
adc
mov
adc
mov
mov
sar
inc
inc
or
mov
or
test
add
add
adc
stc
push
mov
popf
cmp
fbstp
inc
pop
psubb
sahf
adc
sahf
mov
clc
add
add
or
push
lret
or
arpl
xlat
inc
pop
loope
adc
rep
push
addb
rol
test
mov
mov
in
push
inc
push
mov
mov
dec
pop
lret
dec
or
popa
push
jne
jp
pusha
sub
data16
inc
je
adc
or
pop
orl
rolb
or
insb
je,pt
inc
outsb
push
push
jno
or
xchg
dec
cmpsl
sbb
mov
rcrb
jl
xor
orl
mov
cmp
jo
add
int3
inc
sub
fildll
sbb
mov
popf
pop
cmpsb
inc
and
lock
scas
add
arpl
adc
and
xlat
sub
pop
fs
sti
fcmovnbe
pusha
jo
xor
aad
push
jo
lock
lock
or
jno
int
out
push
push
push
mov
movups
pop
test
cmp
cmp
pushf
sbb
xchg
cli
xchg
sub
call
inc
movsl
xchg
shlb
popa
loop
inc
push
sub
push
addr16
pop
inc
test
and
and
sub
and
add
pop
pop
mov
adc
adc
cltd
sub
cwtl
arpl
ljmp
add
stos
leave
aad
add
lret
sahf
sub
lods
bound
push
jae
out
stos
pop
ret
xor
lea
mov
sbb
inc
cmp
jb
es
cmc
push
or
aas
push
lds
jb
mov
fsubs
cmp
shll
test
push
adc
sbb
push
or
add
daa
mov
mov
add
sub
mov
xchg
por
xor
inc
ljmp
mov
mov
test
pop
dec
jne
xlat
xor
mov
leave
inc
je
cmp
stos
mov
inc
divb
jbe
cwtl
or
or
and
cmp
int
mov
inc
push
xor
jle
push
inc
pop
push
xchg
test
jge
mov
pop
mov
cmp
inc
xor
les
cmpl
pop
icebp
imul
or
add
jmp
and
fisttps
fwait
leave
cs
mov
cs
fnstenv
test
pop
jmp
add
inc
cltd
mov
fstl
jg
fldenv
and
loopne
mov
or
orl
add
insl
xlat
add
leave
arpl
and
sti
mov
sbb
inc
stc
cmp
mov
jge
ja
daa
jne
xor
jp
lods
xchg
or
and
sbb
aas
bound
jnp
sub
loope
jmp
xor
adc
pop
ds
adc
fimull
mov
mov
pop
mov
jne
cmp
sub
pop
in
sti
cltd
jne
lods
xchg
sbb
sbb
xchg
adc
and
cmp
sub
push
pop
dec
aaa
movsb
sbb
aad
and
popa
movl
insl
in
stos
push
inc
sub
dec
rolb
mov
cli
jne
adc
in
cmpsb
jmp
adcl
sbb
fcmovnb
shl
add
nop
xchg
lret
or
insb
sub
popf
push
mov
or
mov
mov
cs
mov
add
movsb
cmp
loop
push
shll
je
jbe
inc
inc
pop
ds
das
or
mov
lahf
xchg
sub
xchg
adc
insl
addl
sarl
pop
mov
sub
and
gs
xor
push
sbb
in
mov
add
add
push
pop
or
xor
push
in
mov
jo
clc
jno
push
out
inc
add
divb
adc
popl
or
pop
enter
push
sub
stos
fsubp
mov
movb
or
sbb
push
shl
xor
cmovp
mov
xchg
xchg
arpl
inc
sbbl
enter
adcb
and
in
or
mov
jmp
adc
pop
ds
dec
dec
xor
popf
add
out
loop
cs
fsubr
dec
jae
push
mov
incl
or
xchg
andl
add
ret
adc
jecxz
push
cltd
in
les
adc
nop
mov
pop
or
dec
dec
nop
add
jbe
inc
scas
jo
xchg
mov
dec
jno
lret
fcmove
and
cmp
adc
ficomps
js
loopne
xor
push
test
or
roll
adc
flds
cmp
mov
mov
inc
mov
cmp
lret
pop
jo
and
mov
test
or
pusha
add
loop
mov
jl
into
pop
xor
cmp
pop
imul
xor
out
jge
xor
pop
dec
inc
bound
and
mov
add
cmpsl
pop
push
and
cs
lea
add
add
dec
test
fdivr
mov
loop
sub
fnstcw
add
das
pop
mov
xchg
xor
jmp
push
dec
mov
jmp
mov
push
aam
xor
adc
cmp
or
adc
lods
punpcklbw
push
adc
push
mov
inc
sbb
cmpsb
ja
imul
adc
push
ret
sbb
jge
cmpb
jae
add
cwtl
shrb
jecxz
pusha
cmp
mov
in
mov
push
mov
sub
sbb
add
mov
ljmp
dec
adc
adc
outsb
xor
mov
sbb
test
xor
and
pusha
add
lea
inc
ljmp
or
rolb
je
jno
mov
and
and
inc
sub
icebp
daa
test
or
das
push
and
shll
pop
js
ljmp
decl
mov
movl
pusha
jo
push
sti
or
sub
cmp
or
ret
mov
sub
sbb
int
sbb
cmp
dec
mov
enter
ja
shll
lods
pop
fsubs
jecxz
adc
test
xchg
push
pop
adc
or
aad
je
push
dec
sub
subl
jle
jp
push
adc
je
mov
inc
outsl
dec
loop
dec
adc
icebp
outsb
inc
mov
sbb
jo
xor
cwtl
jge
aas
cmp
shll
data16
ret
sub
cmp
add
lahf
cmp
dec
aam
test
or
jne
sub
pop
mov
dec
and
sub
inc
outsb
add
pop
push
jae
aam
adc
cmp
jmp
aad
sub
cld
xchg
repz
into
test
loop
sub
or
roll
lcall
inc
cmp
mov
fmuls
cs
lret
lea
inc
insb
cmp
cmp
mov
mov
in
in
dec
and
aas
sub
xchg
or
push
mov
sbb
cltd
add
add
int3
mov
and
mov
push
pusha
dec
mov
and
and
mov
cmp
xor
movzwl
push
fidivs
dec
in
inc
sub
sarl
mov
xor
decl
jo
cs
scas
shl
and
outsl
and
jo
or
pop
jmp
sarb
or
or
and
push
mov
adc
pop
cli
lods
push
in
xor
sub
out
movsb
sahf
std
scas
jae
cmp
pop
mov
jmp
cwtl
xor
push
cwtl
pop
pop
fmull
flds
xor
push
test
xchg
add
dec
fildll
popa
cld
rorb
fdivrs
imul
shr
rep
adc
data16
pop
movsl
adc
arpl
and
jb
sbb
or
sbb
pop
add
mov
pop
mov
mov
stos
pop
jg
sub
mov
push
imul
mov
fs
or
jae
cmp
ja
std
sub
data16
push
jecxz
sar
dec
jp
mov
mov
je
ret
fwait
loope,pn
lods
push
rorl
push
jmp
mov
les
mov
xor
jg
test
divl
add
mov
aad
jbe
pop
mov
push
incl
cmpsb
push
je
ds
sbb
or
and
lahf
int3
cltd
cltd
cmp
pop
js
ljmp
sahf
adc
in
mov
ret
out
add
cld
cmp
jae
loopne
push
faddl
call
ret
jg
lret
insl
add
lds
addr16
loop
adc
icebp
shl
addb
test
call
aad
or
aaa
mov
ret
sub
xor
push
mov
loopne
add
jo
or
dec
pop
jno
lds
adc
or
adc
lods
in
push
or
and
cmp
dec
sbb
inc
inc
in
inc
adc
aad
clc
fiadds
mov
jg
jp
cmp
xor
loopne
inc
xchg
xor
sbb
or
loop
mov
inc
ret
or
mov
call
popf
lds
into
cmp
pop
cmp
loope
adc
pop
in
mov
fiadds
xor
sub
jp
adc
or
filds
or
ja
inc
jmp
je
adc
mov
sbb
or
push
dec
fisubl
imull
push
loope
cli
xchg
push
ret
pop
cmp
adc
mov
and
xor
fs
push
add
cld
sbb
or
ljmp
fadds
jo
shll
sub
push
aam
out
push
dec
adc
add
dec
push
add
mov
icebp
mov
jns
dec
popf
nop
cli
inc
adc
ds
adc
add
fdivl
mov
clc
mov
cmpsl
imul
push
mov
cmp
push
mov
add
push
jg
add
pop
ret
ret
lea
sbb
adc
cmp
sub
outsb
lock
jnp
fsts
xchg
adc
pop
dec
pop
imul
adc
pop
dec
push
adc
rclb
es
sub
xchg
jl
mov
sub
mov
fmulp
test
cli
jle
dec
push
jmp
add
sbb
sub
xchg
mov
push
add
xorl
loopne
lret
push
nop/reserved
xchg
ret
jmp
or
lret
fsubl
mov
and
xchg
lea
orb
sbb
ljmp
mov
jbe
test
insl
ficoml
cmp
or
pushf
int3
sub
outsb
ret
icebp
cmp
je
lods
out
inc
mov
inc
add
dec
pop
or
push
loopne
sti
or
mov
xchg
xchg
test
jne
xchg
pop
jp
dec
push
imul
sub
icebp
out
push
scas
xchg
lcall
ret
mov
add
loop
push
inc
add
push
insl
loopne
lea
jne
add
add
pop
mov
inc
pop
sbb
mov
aam
cmp
aad
xchg
pop
xor
xchg
test
push
xor
xchg
mov
mov
pop
ja
shll
add
adc
mov
push
push
sbb
mov
outsb
lret
fnsave
movzbl
jne
push
sub
mov
cmp
jg
sub
je
jle
push
xor
pop
div
and
mov
inc
or
pop
mov
xchg
mov
inc
or
mov
dec
nop
push
pop
adc
ficompl
clc
xchg
push
adc
sahf
add
add
push
aaa
loopne
sbbb
lea
imul
mov
push
jp
push
jl
lret
pop
mov
ja
cs
cmpb
fsubl
xorl
in
popa
jo
gs
inc
push
dec
or
orl
adc
push
sahf
mov
hlt
rolb
js
je
pop
adc
push
xchg
sub
mov
cmp
pop
mov
adc
sub
sub
jne
bound
or
adcl
pop
dec
push
sbb
pusha
stos
cmpsb
jle
les
sbb
das
or
push
pop
jno
lods
sub
push
test
sahf
clc
int3
add
pusha
insl
ljmp
pop
and
fstpt
cmpb
sbbb
jne
fldln2
fwait
pop
sarl
add
and
clc
jg
fs
test
mov
jmp
movq
movaps
out
push
enter
mov
clc
jae
xor
jle
xor
xchg
incb
mov
test
decl
insl
mov
imul
repz
or
jg
dec
mov
das
pop
jg
xchg
ret
adc
jnp
mov
negl
mov
aam
ret
or
insb
adc
ja
movsb
and
lahf
pop
add
in
out
xchg
repnz
roll
jbe
and
dec
add
pop
mov
int
scas
mov
fcmovb
sbb
adc
cmp
dec
inc
hlt
jecxz
popa
insl
and
mov
dec
sub
xor
mov
cmpsb
jge
push
lods
inc
dec
pusha
mov
loope
push
adc
scas
loopne
pusha
ret
iret
rorb
aam
jmp
push
je
pop
mov
outsl
or
sub
adc
lods
ds
inc
sub
adc
clc
ja
mov
mov
clc
sub
loopne
inc
cmp
jle
movsl
orl
xor
mov
inc
inc
and
mov
add
push
or
mov
arpl
pusha
daa
repnz
jmp
sbb
sbb
jmp
mov
push
and
push
inc
dec
or
scas
adc
pushf
jno
mov
sub
js
and
inc
das
xor
mov
sub
in
xchg
sub
hlt
adc
add
push
adc
orb
push
movsb
in
insb
or
pop
dec
out
xor
jb
xorb
jns
sbb
or
sub
dec
pop
sbb
inc
push
adc
in
push
add
mov
movb
mov
les
push
pushf
pop
addr16
sbb
sbb
sbb
xor
add
jecxz
fcoml
mov
rcll
and
rcrb
push
aas
dec
adc
nop
addr16
ficompl
push
je
jp
push
dec
lcall
sti
rclb
pop
in
insb
mov
lret
and
addr16
pop
or
inc
imul
xlat
pop
cmp
jmp
push
insl
jmp
iret
seta
out
iret
ss
mov
or
fidivrs
orl
xchg
shrl
hlt
push
jle
aam
mov
arpl
push
cltd
hlt
lock
pop
and
mov
push
jmp
and
push
and
adc
inc
arpl
adc
shll
arpl
cmp
fs
lods
int3
or
sbb
out
in
imul
out
repz
sahf
popf
or
sbb
out
push
cmp
inc
jb
or
test
lret
movsl
fildl
mov
sub
enter
shlb
stos
mov
push
pushl
mov
popw
pop
pushf
push
mov
jae
enter
add
test
push
imull
dec
xor
ficoml
push
jns
loopne
push
test
adc
sub
lock
arpl
mov
cs
loop
icebp
mov
pop
mov
call
das
ss
mov
aaa
or
push
lret
cmp
pop
cmp
movsb
pop
inc
inc
hlt
push
test
adc
andb
and
cmp
aad
jo
hlt
dec
faddl
sub
out
pop
push
fiadds
cmp
sbb
sub
adc
shll
es
test
or
lret
jne
dec
jmp
rcr
pop
data16
repnz
mov
jne
inc
adc
xlat
aaa
push
lds
mov
push
loope
popl
rcl
cmp
sub
cmp
mov
bound
mov
stos
jne
add
rorb
and
mov
comiss
lock
out
test
inc
stos
or
jb
lret
dec
sub
data16
pop
xchg
sub
adc
fidivs
sub
push
xchg
adcb
fists
mov
fimuls
push
mov
ficompl
aad
call
ss
lret
jae
stos
sbb
mov
xchg
fdivl
add
arpl
das
lock
daa
mov
pop
mov
je
lds
idivl
rcl
cmp
in
cwtl
dec
dec
sbb
pop
fdiv
nop
arpl
jo
jecxz
xchg
andl
jb
or
enter
out
repz
test
push
mov
and
inc
and
jbe
gs
cmp
jb
and
mov
cmpsl
add
add
cmp
sbb
lods
jno
sbb
lcall
pop
mov
les
repnz
jg
popa
jl
fisttpl
dec
push
jbe
sub
push
cmpsb
cli
aaa
pop
cmp
pushf
mov
cmp
fisttpll
into
lea
cmp
and
jmp
in
mov
cmp
jne
push
adc
or
mov
inc
mov
jne
pop
sub
pop
test
sbb
add
andb
jne
or
ds
addb
mov
daa
jl
rcll
int3
or
in
cld
dec
sbb
cmp
cmc
ret
inc
loope
mov
and
rcll
and
mov
push
inc
sub
ljmp
faddl
xor
rorl
mov
call
ds
idivl
ljmp
cmp
icebp
nop
lret
pushf
mov
dec
sar
jne
cli
xor
jl
pop
adc
sarb
xchg
mov
aaa
mov
fbstp
ret
and
ret
inc
in
xchg
cmpsl
pop
or
pop
inc
jl
inc
les
sbb
jge
dec
mov
sub
push
js
repnz
cmp
jne
pop
fcmovbe
ret
or
or
pop
push
or
push
xchg
or
pop
push
mov
xchg
mov
cltd
inc
popl
cmp
mov
cmp
adc
mov
rorb
std
lahf
pop
arpl
xchg
inc
mov
jl
and
subb
lods
xlat
outsb
cs
js
pop
mov
aaa
push
ljmp
adc
jne
adc
jmp
push
rcrb
jmp
sub
jo
mov
in
js
or
pop
fstp
mov
shlb
adc
push
push
test
xchg
and
add
inc
cld
add
shl
add
xchg
mov
mov
inc
fnstsw
inc
es
or
or
mov
adc
sbb
jp
addl
leave
fadds
lock
sbb
cld
jb
jae
adc
push
clc
jbe
add
mov
sbb
and
add
cmp
xchg
dec
dec
add
sub
add
add
jmp
test
jne
test
stos
loopne
clc
cmp
xorl
ja
xchg
lods
cld
jbe
jl
jnp
divb
dec
out
test
and
pushf
pop
ss
push
push
addr16
jae
dec
lret
hlt
idivl
cld
pop
icebp
pop
or
pusha
xor
loop
push
push
push
add
xor
insl
fnstcw
xor
or
add
inc
icebp
adc
add
call
hlt
cmpl
mov
xchg
push
push
shl
insl
xchg
add
roll
and
add
pusha
andl
or
leave
inc
dec
push
rolb
push
inc
repz
test
shl
ret
and
movsb
sbb
lods
cmp
push
mov
pop
pop
mov
cld
add
out
sub
pop
jb
out
or
out
pop
int3
adc
stc
rclb
or
stc
lods
fwait
sub
frstor
js
xor
inc
ror
sbb
mov
sti
les
cmpsl
repnz
lret
xor
daa
dec
jne
mov
push
jmp
push
repnz
mov
test
mov
add
dec
jne
mov
pop
adc
add
push
push
add
pop
xor
lods
add
push
adcl
popa
fdivs
or
testb
sar
jae
lret
scas
outsb
into
ficoml
negl
add
cld
jne
mov
push
mov
std
jne
es
jne
mov
cltd
cmpsl
call
aam
subl
and
daa
and
mov
jns
pop
push
dec
or
adc
jmp
std
enter
push
xor
cld
cld
jmp
fisttpl
adc
in
adc
adc
inc
inc
inc
cltd
clc
inc
pop
fsubr
stos
inc
adc
fdiv
mov
mov
sbb
adc
sbb
mov
leave
inc
test
in
ret
sbb
repnz
and
stos
repz
in
add
inc
loopne
dec
test
scas
insl
loopne
or
dec
inc
add
or
and
add
and
or
inc
push
or
and
movsb
xchg
rolb
pop
orl
xchg
rolb
xchg
push
xchg
icebp
mov
ror
std
add
inc
sbb
in
pop
test
pusha
lods
lds
int
sahf
jg
or
add
add
push
in
jmp
movb
jmp
mov
xor
xchg
clc
mov
iret
je
mov
fmuls
cmp
jg
add
adc
call
mov
cmp
mov
test
push
test
aaa
lea
data16
mov
ja
jae
out
inc
cmp
inc
add
add
lea
or
dec
dec
mov
xchg
and
inc
das
sarl
mov
pop
pop
xchg
jo
and
xorb
pusha
pop
cwtl
pop
pop
js
lods
test
sub
dec
cld
adc
cmp
inc
popa
xchg
sbb
add
fsts
mov
jb
andb
push
inc
dec
imul
sub
outsl
sub
gs
push
fwait
inc
pusha
or
loope
pop
xor
cmp
subb
adc
mov
aaa
inc
in
aaa
xor
cmp
jno
les
out
cmp
loopne
les
mov
int
decb
cmp
or
clc
inc
and
xchg
lock
fistps
test
jg
pop
fmuls
lock
and
sub
or
add
adc
pop
js
mov
sbb
xchg
pop
shrb
call
fwait
push
add
addl
push
dec
jge
ret
add
data16
arpl
pop
mov
push
out
push
or
std
pop
cld
sar
stc
and
mov
inc
je
mov
fists
fmuls
or
addb
clc
test
jmp
or
mov
inc
inc
push
or
cmp
push
scas
mov
fwait
jmp
cmp
mov
inc
cmp
jb
add
shll
icebp
in
and
dec
leave
jl
add
jl
or
and
dec
inc
pusha
sahf
outsb
int3
push
test
sbb
fdiv
mov
adc
mov
adc
add
iret
push
sti
bound
iret
sub
or
ret
shl
push
adc
push
jg
or
jle
xor
add
std
inc
dec
xchg
scas
and
xor
sub
cmpl
roll
lock
push
out
jne
mov
lret
int
and
jp
shr
jns
dec
cmp
je
test
je
add
faddl
aam
xchg
pop
addr16
decb
or
cld
aaa
rolb
sbb
cli
clc
les
jae
adc
push
mov
push
lcall
lahf
fwait
sbb
add
jg
fsubl
sbb
mov
add
pmaddwd
outsb
add
pop
fdivl
inc
call
push
incb
mov
inc
jmp
cmp
jno
mov
sbb
jmp
adc
jne
sub
enter
jp
pop
inc
adc
cmp
sbb
fcoms
sub
jg
mov
cmp
je
cmp
and
lahf
loop
xchg
adc
pop
fmuls
imul
js
or
mov
aam
hlt
aaa
inc
sahf
adc
mov
and
je
mov
adc
lret
sbb
adc
dec
sub
or
and
or
add
les
or
sub
xor
push
lods
and
mov
dec
inc
imul
pop
lea
pop
xor
adc
rcll
push
mov
sbb
adc
mov
mov
in
fcomps
inc
xor
inc
sub
mov
dec
jge
push
loop
lret
out
push
mov
push
mov
je
pop
pop
pop
xor
bound
sub
and
lock
jne
mov
jg
cli
mov
or
add
repz
add
xchg
xor
or
addr16
and
rolb
pop
dec
xor
in
sbbb
xlat
push
xchg
cltd
lds
push
mov
xor
adcl
mov
or
cmp
ret
adc
rcr
or
js
dec
dec
nop
adc
fidivrl
mov
insb
sbb
cmpsl
test
xor
pop
clc
add
loopne
or
xor
push
mov
inc
mov
lea
enter
int
and
outsl
cld
xorb
jb
lea
push
mov
ja
or
adc
sub
pop
cmp
ficoml
loope
adc
lcall
mov
and
in
or
sbb
rorb
pop
or
loop
lock
leave
or
out
add
sbb
adc
cmp
aaa
or
inc
dec
mov
fldl
dec
loop
sbb
jmp
icebp
mov
in
stos
in
or
int3
pop
movsl
xchg
and
add
cmp
dec
inc
call
fsubs
int3
cli
dec
cld
and
mov
sub
in
mov
mov
add
xchg
sub
mov
adc
mov
dec
sbb
jp
add
cmp
or
in
inc
jb
hlt
xor
scas
nop
inc
push
inc
jecxz
inc
pop
test
cltd
sub
add
test
lret
into
add
inc
fdiv
dec
cmp
repnz
mov
inc
shlb
add
pop
xchg
sbb
push
clc
rcrb
cmp
daa
fucomp
inc
pop
shll
in
sbb
rcll
lcall
push
or
push
clc
ljmp
sbb
lods
add
or
add
stos
test
jle
mov
les
pop
jp
in
ja
cmovg
push
xlat
cli
and
push
dec
sub
adc
dec
mov
and
popa
adcb
outsb
outsl
xchg
sub
in
inc
sbb
push
pop
adc
test
in
push
faddl
in
je
push
insb
push
data16
push
mov
addl
jle
sub
or
jne
pop
rorb
mov
jbe
lods
cltd
pop
idiv
decl
mov
loopne
sub
mov
pop
stos
push
jne
rorb
popa
push
mov
pusha
add
xor
adc
rcll
xor
ffreep
push
aas
sub
ficoml
dec
loopne
dec
or
add
cmp
inc
push
imul
mov
sub
sbb
out
les
mov
mov
mov
sbb
adc
push
addb
push
jle
adc
or
repnz
add
adc
clc
lcall
idivb
push
and
xchg
loopne
mov
and
test
inc
add
js
stos
cmpsl
inc
mov
leave
fcoms
lds
sub
xchg
dec
mov
sub
jbe
and
lods
add
addl
scas
xchg
add
out
mov
mov
roll
pop
jmp
adc
add
je
les
cmp
inc
cmp
clc
push
mov
fs
into
add
sbb
adc
inc
je
inc
dec
jbe
shrb
or
popa
fs
or
fbstp
dec
je
add
or
pop
out
lods
test
push
dec
push
or
insl
sbb
jbe
inc
add
sub
push
jbe
ss
inc
and
mov
xchg
out
or
adc
sbb
push
test
jg
out
jo
lea
test
fisubl
push
add
mov
roll
push
fisubrl
lock
jne
mov
add
adcl
and
pop
inc
xor
inc
jne
inc
test
stc
push
jns
fs
mov
add
cmp
and
divb
cmovp
mov
jns
pushf
push
mov
push
mov
shr
enter
lea
push
iret
or
imul
jbe
leave
add
pop
lods
pop
jns
add
jmp
rorb
add
dec
push
ret
inc
sti
xchg
test
push
jmp
sub
and
sub
dec
pop
in
icebp
and
sub
jbe
mov
cmp
or
dec
xor
ret
mov
jmp
cmp
cwtl
add
lods
mov
push
mov
mov
scas
xchg
sub
adcb
mov
inc
sub
pushl
loop
pop
lea
add
sub
mov
test
cs
roll
into
push
push
adc
test
or
fst
fsubrl
add
xor
je
sbb
int
or
dec
and
mov
pop
loop
or
jg
clc
mov
pop
jle
call
mov
cli
or
lea
xchg
in
mov
dec
pop
xor
test
fmull
jns
add
push
arpl
int
add
or
ds
cmp
xor
clc
add
and
push
pop
mov
xor
dec
outsb
dec
mov
push
pop
sub
cmp
cld
cmp
push
xchg
movsl
stos
insb
cmp
scas
sbb
pop
fcomps
mov
in
imul
dec
into
cmp
lret
jnp
jo
push
push
add
sbb
push
inc
movsl
loopne
dec
lods
movsl
stos
sbb
pop
mov
cli
insl
or
cmp
mov
pop
add
sarl
inc
push
jns
push
cmp
push
data16
cli
out
jnp
push
inc
cmp
push
cmp
adc
stc
xchg
clc
push
mov
stc
mov
cli
pop
cltd
rorl
imul
add
pop
lcall
insl
inc
sub
ret
call
xchg
mov
shlb
out
pop
xor
lock
xchg
les
add
hlt
fnsave
or
mov
cltd
pop
inc
mov
inc
aam
out
ja
jno
sbb
jno
adc
and
stos
xlat
je
cld
xchg
lods
xor
in
jb
aad
add
cmp
cwtl
push
in
arpl
push
or
int
push
mov
jg
pop
jb
push
add
aam
movaps
imul
mov
imul
inc
xorb
xchg
xchg
jo
xchg
test
or
lea
shll
and
xchg
mov
adc
mov
pop
orb
pushl
mov
aaa
jb
mov
mov
cwtl
fadds
pop
xchg
add
popa
mov
push
nopl
inc
and
ret
and
sub
mov
shrb
mov
jl
inc
in
or
sub
leave
mov
repz
rcll
dec
pop
xor
rorb
movsb
sbb
mov
mov
jne
inc
cmp
popa
and
or
or
int3
jo
push
push
mov
pop
ret
nop
sub
js
jbe
in
dec
pop
pop
mov
or
push
mov
cmp
inc
cwtl
xlat
xchg
and
xchg
cmp
inc
or
cwtl
inc
add
gs
test
insb
sub
dec
cld
jmp
cmp
movsl
aas
adcb
rclb
xchg
and
inc
push
adc
mov
fmull
cmpsb
add
mov
xchg
ja
or
mov
or
rorl
enter
dec
inc
inc
hlt
mov
lock
imul
push
mov
mov
ja
out
xchg
or
cmp
xlat
lcall
or
sbb
fsubrl
nop
or
ja
loopne
add
mov
push
push
adc
cltd
clc
push
into
je
xor
cmp
fisttpl
and
popa
sbb
iret
jp
pop
les
jne
add
leave
and
jns
mov
and
fs
xchg
xchg
mov
or
mov
scas
add
push
aad
mov
lret
aam
mov
and
push
mov
sub
push
leave
add
sbb
jp
and
imul
test
leave
lret
jge
rorl
out
adc
add
cmp
cmp
jb
lret
lahf
jp
sbb
loopne
and
mov
and
es
loopne
outsl
dec
pop
pop
jne
out
out
test
push
add
jmp
mov
cmp
test
add
cs
out
shll
pop
fs
pusha
nop
maxps
nop
or
clc
jns
mov
pop
int
pop
dec
jle
inc
add
add
repnz
dec
add
dec
pop
jge
add
cmpsb
push
lcall
xchg
mov
inc
push
xor
and
pushf
out
sbb
or
repz
mov
push
call
iret
repz
lock
hlt
clc
mov
repz
cld
ljmp
lock
sbb
xorb
jmp
roll
pop
or
insl
sar
inc
and
push
jbe
sbb
lea
jl
cld
scas
loopne
push
pop
and
std
cld
out
sub
xchg
popa
in
neg
shll
xchg
daa
ja
fs
sub
inc
in
nop
or
idivb
add
mov
add
inc
test
out
push
add
nop
dec
dec
addr16
cmp
popa
sarb
mov
sahf
notl
or
push
test
mov
ror
jecxz
sbb
jns
out
sbb
adc
sahf
out
sahf
adc
or
or
cmp
popa
js
in
or
push
bound
sub
icebp
xchg
xor
push
add
pop
andl
inc
ja
cmp
fisttps
or
or
popl
or
cld
cmp
or
xchg
xor
arpl
or
je
mov
dec
sbb
testb
jne
jp
mov
in
sbb
fs
add
cmp
pop
sahf
add
std
mov
inc
and
jne
push
sbb
test
stc
sbb
mov
ffreep
ss
mov
adc
shrb
dec
dec
imul
fdivrs
dec
mov
nop
adcb
pop
movsb
xor
jae
mov
xchg
push
sbb
dec
pop
popf
push
lock
and
jmp
test
sub
movsl
pop
call
fstl
push
pop
sbb
loope
nop
mov
and
rolb
inc
or
or
mov
dec
or
icebp
addb
mov
cmpsb
fs
iret
fs
or
enter
push
icebp
sbb
cs
pop
adc
aam
push
shll
call
mov
jo
cld
add
orl
mov
cltd
call
or
test
adc
loopne
out
and
sbb
bound
ret
daa
pop
lcall
mov
cmp
mov
and
les
mov
add
jp
pop
std
movb
shll
insb
pop
jmp
mov
leave
sub
mov
inc
mov
mov
push
push
inc
jo
rcll
push
push
fcomps
sub
or
add
sbb
or
inc
repnz
or
adc
adc
ficoms
fs
add
cmp
xchg
xor
lcall
dec
push
jecxz,pn
inc
add
movsb
cmp
xor
add
je
sub
pop
cld
cmpsl
pop
xor
jmp
sub
rorl
lret
je
rep
mov
test
rolb
loope
cmp
les
mov
jl
adc
nop
or
jo
mov
mov
mov
cwtl
or
mov
int
cmp
push
pusha
sub
pop
pushf
repnz
adcl
or
xchg
push
or
insb
mov
movl
out
mov
rolb
adcl
push
call
xor
dec
and
sub
sbb
adc
jb
aam
inc
push
push
cmp
pop
mov
imul
sti
movsb
xchg
adc
add
movsl
xchg
sub
and
pop
add
sub
ds
add
arpl
loopne
fcoml
push
push
xchg
fcomps
int3
repnz
xchg
clc
or
xchg
repnz
movsl
shrb
faddl
add
hlt
mov
jae
fbld
cld
xor
or
jae
push
adc
push
bswap
and
pop
in
xchg
pusha
xchg
clc
jno
insl
push
ror
lret
cld
mov
add
pop
xchg
inc
cwtl
cmc
je
pop
mov
push
add
sbb
add
or
mov
test
push
mov
inc
out
add
push
add
imul
xchg
add
mov
pop
scas
xor
call
std
andl
xchg
mov
data16
adc
pop
sarb
push
out
pop
jae
aam
mov
adc
jbe
push
inc
adcb
pop
call
inc
add
loopne
nop
jl
sbb
mov
pop
inc
fcomps
add
test
or
mov
cmpb
xchg
jp
mov
dec
idivb
and
sbb
in
cmp
repnz
ljmp
jns
popa
adc
bound
adc
insl
xchg
add
rcll
ret
push
and
lock
in
and
inc
fsub
outsl
leave
mov
jmp
mov
into
fnstsw
loopne
daa
push
movsb
dec
jmp
pusha
arpl
ss
leave
mov
hlt
cmpb
push
sub
mov
scas
dec
jmp
add
js
movsb
push
lock
rol
jbe
push
dec
clc
rorb
jl
decb
pop
add
push
jmp
inc
and
and
dec
es
test
jmp
lcall
cmpl
mov
jp
jne
push
cmp
or
iret
das
add
fcoms
or
je
lsl
cmp
mov
xchg
lret
gs
shl
ret
fdivrs
xchg
popf
jne
sub
jmp
je
adc
inc
movsl
insl
push
adc
leave
xchg
call
in
or
xchg
loopne
roll
or
pop
inc
ret
mov
dec
cwtl
sar
add
rcrb
pop
ja
sub
xor
imulb
add
xor
jecxz
mov
pop
lods
movsb
dec
insb
mov
cld
xchg
push
jbe
movsl
jnp
rorb
lea
mov
rcr
clc
loope
pusha
jne
lret
dec
or
je
adc
lcall
cmp
adc
sahf
pushf
pop
or
notb
add
cmpl
or
shll
add
push
sti
mov
adc
cs
sti
test
adc
pop
aas
clc
arpl
pop
imul
lock
ja
movsl
mov
mov
leave
test
pop
orb
jbe
movsl
hlt
hlt
stc
rcr
push
add
push
sbb
mov
or
mov
jmp
insb
into
pusha
sub
scas
pop
ret
sbb
pop
and
fnsave
jne
js
add
movb
inc
xor
sbbl
movsl
jl
inc
movsl
imul
jae
cs
sub
js
push
lcall
roll
int
add
call
pop
cmp
xchg
mov
das
add
sbb
clc
adc
push
sbb
adc
push
or
add
in
ret
mov
or
inc
movsb
dec
shrl
lock
test
lea
ss
sahf
arpl
imull
xor
cmpsl
loope
or
scas
mov
mov
add
push
push
or
dec
and
pop
pop
adc
sbbb
or
nop
add
fsubrl
mov
cmp
sbb
sbb
adc
cmp
pusha
rclb
add
push
pop
subl
shlb
call
or
rorl
mov
jp
loopne
cwtl
sub
cmp
jmp
adc
popa
or
clc
push
add
std
or
cmp
xchg
adc
fdivrl
and
aaa
inc
lods
xlat
mov
cwtl
ds
dec
mov
dec
ret
test
xorb
mov
icebp
sarl
je
call
cmp
jmp
sbb
shlb
sub
inc
inc
loopne
jno
mov
add
or
mov
in
je
int
sbb
or
sub
cmpsb
ss
xchg
insl
and
popa
xor
add
gs
mov
sbb
add
or
xchg
and
adc
add
jne
sbb
jo
lods
xor
adc
test
sbb
add
push
add
scas
aaa
adc
jb
jne
movsb
addr16
mov
ja
fbld
jmp
cmp
jle
popa
mov
clc
adc
and
pop
push
dec
js
or
lea
pop
push
push
adc
test
add
push
rclb
push
insb
push
mov
aam
outsb
pop
mov
inc
addb
and
outsb
and
sbb
xchg
sub
inc
sbb
mov
js
adc
mov
push
jne
dec
and
pop
jne
movsb
jl
adc
push
push
inc
scas
data16
dec
add
or
push
cld
enter
sub
inc
lds
add
js
addl
and
pushf
es
jae
pusha
cld
or
mov
jo
inc
daa
add
cmp
inc
sub
push
arpl
sbb
mov
stos
push
push
into
in
push
pop
test
jecxz
jbe
mov
jb
in
adc
dec
sub
and
adc
nop
inc
cld
jmp
inc
dec
int
or
in
imul
lcall
lret
add
orb
fidivrl
insl
or
shll
jnp
or
sbb
hlt
les
mov
mov
or
dec
call
lea
cmp
das
sbb
mov
sub
push
inc
push
stc
cltd
push
test
or
xor
faddl
pushw
sbb
repnz
sahf
add
out
adc
mov
mov
inc
cmp
ljmp
insl
insb
into
cmpb
add
and
xor
aaa
stos
test
movl
or
andb
std
xor
repnz
sar
ret
iret
imul
std
pcmpgtb
add
int
shrl
movsb
xchg
push
sub
add
and
mov
mov
sub
or
add
ret
sti
in
jle
cmp
js
dec
xor
pop
rolb
add
jg
sub
test
pop
lods
add
cmp
test
sub
out
jnp
cs
inc
aam
adc
jle
push
pusha
lock
aam
sub
pushf
jmp
pop
adc
sahf
mov
jecxz
add
std
or
xor
es
jmp
sub
sahf
pop
int
fldenv
pop
sub
cmpl
insb
mov
add
out
cmpsl
pushf
mov
daa
sbb
les
iret
mov
pop
xlat
inc
sbb
cli
movsb
adc
rorb
cmp
mov
jne
mov
jge
aaa
pop
imull
adc
in
mov
ret
fisubrl
push
imul
add
iret
repz
stos
mov
outsb
add
aas
ja
push
xchg
pop
ja
js
emms
test
or
inc
fs
push
push
andb
rorb
or
out
fsubp
push
aam
les
lods
movsb
aas
sahf
addr16
jmp
mov
js
aas
jns
mov
in
jns
js
add
push
mov
add
and
rclb
aas
jns
neg
mov
inc
push
dec
push
pop
or
out
push
sub
aas
inc
sahf
pushf
push
movsb
add
aas
int3
jb
push
push
test
ret
mov
mov
sarb
push
lret
out
fiadds
cmp
xchg
inc
mov
pop
jnp
call
int3
or
adc
mov
lock
inc
push
es
rorl
movd
or
pop
lahf
dec
hlt
push
add
loope
bnd
push
xchg
nop
add
dec
pop
jecxz
fimull
shll
jbe
pop
lods
outsb
in
pop
pop
sub
lods
call
mov
setns
inc
or
mov
pop
xor
cmp
fmuls
mov
adc
inc
push
jmp
jge
aam
imul
out
push
jne
dec
dec
jp
mov
and
ret
icebp
dec
add
ss
outsb
dec
or
rorl
out
loope
pop
add
roll
and
shlb
enter
int3
aam
sub
ret
ror
mov
push
int3
mov
loop
jp
cmc
pop
call
aad
jge
hlt
sar
push
adc
jo
hlt
sbb
sbb
testb
push
dec
add
mov
dec
in
sbb
pushl
insl
and
mov
call
lahf
and
add
testl
call
sbb
jmp
push
push
faddl
mov
call
adc
je
jns
jmp
inc
loopne
or
add
jl
pop
push
divb
mov
xor
adc
mov
or
jle
sub
out
ds
push
repnz
sub
sbb
hlt
xchg
je
pop
sbb
add
cmpsl
lods
pop
xchg
int3
sbb
or
cwtl
out
and
mov
push
jb
in
and
or
cld
add
push
out
push
add
xor
iret
adc
insb
add
add
cltd
or
lea
pop
and
push
or
xchg
cmpb
fiaddl
mov
ss
addl
cmp
or
pusha
mov
jmp
push
out
push
add
mov
or
rclb
iret
mov
ja
sti
or
add
dec
adc
ss
fmull
xor
jno
sub
sub
lea
arpl
mov
enter
sar
loope
cmpl
adc
mov
and
xchg
and
movsl
pushl
adc
scas
push
adc
mov
cwtl
pop
push
add
cli
shrl
arpl
mov
mov
add
or
mov
fcom
add
inc
cmp
adc
aaa
in
inc
test
pop
sti
lret
and
ret
decl
cmc
jo
jo
in
idivb
push
jb
adc
stos
add
les
inc
ljmp
sub
fs
or
inc
rcrl
scas
test
addr16
mov
inc
js
push
mov
sbb
push
ret
mov
fstl
lret
pop
jl
jmp
fbstp
enter
stos
lods
sub
push
das
cmc
mov
jge
xorb
pushf
dec
cmp
push
lea
inc
jbe
mov
imul
test
popw
or
mov
rcrl
mov
lock
es
std
mov
leave
mov
xlat
add
push
shl
xor
xor
mov
and
scas
xor
inc
loope
in
add
imul
loop
or
push
sbb
or
push
adc
testb
sbb
inc
sbb
push
cld
mov
sbb
fiaddl
sti
sbbb
cld
dec
xchg
xchg
or
push
test
mov
call
adc
jg
sbb
cltd
les
loop
mov
addb
push
cmp
rol
hlt
outsl
jo
add
fcmovu
jmp
cmp
pop
add
mov
push
mov
xor
push
test
or
outsb
stos
cs
and
cli
adc
push
jae
dec
pop
add
sub
rclb
shr
sub
or
sub
or
or
cmc
mov
in
sub
dec
adc
add
xchg
daa
movsb
aaa
xchg
adc
std
pop
xchg
push
cmp
lods
clc
hlt
cwtl
push
jp
arpl
mov
and
or
push
add
shrl
rclb
outsb
dec
jbe
or
rorb
cmc
iret
movzwl
stos
or
les
cs
shrb
sub
pop
add
mov
adc
data16
xor
pop
ja
cwtl
movzbl
outsb
repz
jo
xchg
xchg
imul
cmpb
nop
push
xchg
sub
push
outsl
add
inc
inc
pop
ja
xchg
dec
xor
fcompl
mov
out
dec
aad
cmp
sub
cmpsb
push
popa
ja
or
xchg
clc
push
sub
add
pop
add
sti
add
sbb
mov
cmpsb
xchg
mov
aaa
call
adc
dec
andb
sbbb
jecxz
cmp
nop
imul
mov
pusha
add
js
nop
inc
rcr
cmp
imul
mov
sbb
adc
and
inc
adc
insb
jnp
adc
imul
ss
adc
dec
or
cmp
inc
cmp
daa
es
add
add
add
clc
xlat
in
or
cmp
add
lea
or
xchg
xchg
add
add
add
je
daa
jb
xlat
add
call
push
adc
mov
cmpsb
repnz
js
sbb
add
push
mov
push
movsb
call
test
int3
mov
add
push
cmp
and
in
shrb
mov
iret
dec
shrb
cmp
daa
daa
mov
or
mov
adc
cmp
lcall
nopl
mov
clc
mov
mov
stc
or
jmp
and
in
or
xchg
lret
nop
mov
dec
sbbl
add
cmp
sub
adc
lcall
or
test
in
xor
lret
xchg
dec
scas
xchg
add
call
fcompl
lods
pop
dec
xchg
or
fmuls
rclb
repz
enter
fs
cwtl
pop
xchg
sub
call
aam
enter
cs
xor
imul
add
inc
and
pop
add
fs
arpl
or
in
push
and
add
push
jbe
or
daa
pop
lods
movsb
adc
jecxz
pop
add
test
addl
add
dec
mov
stc
mov
sarb
addb
jbe
into
cs
nop
fwait
rolb
out
or
faddp
lock
push
mov
js
xchg
push
orb
decb
sbb
outsb
xor
xchg
ret
pop
mov
push
xchg
xor
or
nop
orb
rcll
cmp
mov
lods
sub
shlb
mov
mov
or
popa
lahf
add
cmp
rolb
inc
cmp
dec
add
sub
adc
popf
popl
or
jmp
mov
xchg
cmp
cs
pop
sbb
push
ljmp
in
ja
add
add
or
cmp
and
or
add
sub
add
insb
push
lret
xchg
xor
push
nop
sbb
sar
subb
add
xchg
sbb
fidivrl
push
add
add
out
xor
add
jnp
inc
jmp
sub
adc
fidivrs
jb
or
mov
or
sub
adc
mov
test
movsb
xchg
aam
and
xchg
rorl
cmp
add
adc
rcrl
imul
xchg
pop
sub
mov
mov
arpl
adc
ds
or
fcoms
ficoms
add
cli
loopne
sarb
ja
mov
stc
shl
test
cli
movsb
loope
enter
fsubrs
inc
popf
out
and
mov
add
fidivrl
lock
sub
loop
or
xor
xor
or
mov
xor
mov
jbe
loopne
ficoms
popf
pop
push
push
sub
mov
inc
cs
pop
dec
fnsave
inc
cmp
mov
and
pop
shlb
orb
mov
push
cmp
nop
lock
in
mov
adc
mov
fucomp
xchg
cmc
mov
mov
fldl
pop
and
mov
movsb
dec
sti
adc
cli
sbb
and
mov
add
pop
jb
cli
imul
pop
or
lds
clc
mov
push
jbe
adc
insb
into
mov
ret
ja
push
xchg
lcall
sti
push
test
inc
fdivrs
xor
pop
cmp
push
add
inc
mov
cmp
sbb
xchg
mov
mov
shll
insb
push
insb
mov
mov
jecxz
jo
shll
xor
mov
push
movl
jbe
cmc
incb
cmp
std
jne
dec
shll
pop
add
adc
jmp
xchg
add
imul
sbb
push
push
mov
xchg
imul
mov
push
xchg
rcll
cmpl
mov
xor
decl
incb
jb
or
xor
lock
jnp
filds
stc
push
dec
push
and
sub
inc
dec
loop
push
adc
rolb
xor
or
push
call
pop
hlt
leave
mov
cmpsb
add
xchg
fldl
andl
lea
sub
and
movb
xorl
rcrl
push
testl
cmp
inc
cmp
mov
add
ljmp
sub
inc
push
jge
add
jb
mov
cmpb
push
mov
push
mov
add
aas
and
dec
jne
roll
dec
nop
aaa
inc
xchg
sbb
sbb
and
idivb
icebp
mov
inc
jbe
mov
inc
dec
jne
jg
insl
add
scas
stos
mov
jmp
loopne
sbb
pop
mov
jmp
cmp
mov
add
dec
inc
sbb
aam
loopne
sbb
add
xor
stos
push
pop
xchg
je
loop
push
and
xorb
dec
ljmp
and
mov
or
xchg
cmp
out
mov
pop
or
jp
pop
push
sub
ljmp
cmp
stos
arpl
inc
jo
insb
ljmp
add
shrb
add
and
sub
or
or
inc
lock
sbbl
out
pop
mov
sbb
jmp
xor
or
mov
mov
repz
ret
aaa
mov
push
test
out
imul
mov
sbb
dec
push
xlat
mov
popf
jmp
lods
enter
and
jl
rclb
loopne
fwait
xchg
push
test
test
je
std
adc
jle
xchg
rcrb
and
inc
ljmp
ror
test
xor
sbb
mov
aas
stos
cltd
les
cmpl
and
add
cmpl
mov
jnp
test
pop
ret
adc
je
dec
push
andb
loopne
add
adc
mov
xchg
xor
sub
les
sub
and
cld
cmp
mov
je
mov
jo
push
xchg
sbb
pop
adc
cld
cltd
sub
dec
not
pushf
sbb
int3
ljmp
sub
nop
lea
movsb
lods
or
and
subl
add
or
roll
daa
sbb
dec
rcrb
ljmp
push
in
faddl
or
mov
jp
imul
cld
mov
add
dec
test
das
add
jns
dec
add
adc
add
mov
lret
mov
fisttpll
les
addr16
pop
fcoms
pop
jle
pop
or
add
fnstsw
pop
mov
gs
test
pushf
push
mov
sbb
jo
aad
add
or
pusha
sub
mov
insb
leave
cwtl
sti
pop
jmp
mov
mov
insl
loopne
or
clc
ret
or
idivl
dec
add
xchg
pop
sbb
les
hlt
inc
test
dec
imul
inc
je
and
das
adcb
push
inc
or
xor
aas
js
mov
mov
scas
push
jmp
aam
and
adcb
js
inc
movl
inc
or
or
jo
lock
jmp
inc
or
add
jg
ss
or
inc
sbb
out
xor
mov
shrb
xchg
ficoml
bound
out
mov
add
pop
in
push
imul
call
cltd
rcrl
loop
loopne
dec
aad
xor
push
lea
cmp
aas
cmp
push
adc
mov
inc
xchg
ret
loopne
or
test
or
xor
shr
pop
shl
mov
iret
push
adc
lea
jno
inc
and
fadd
imul
nop
add
lds
cmp
dec
je
ret
and
das
xor
adc
jecxz
in
sub
pushf
movsl
dec
lahf
mov
pop
jbe
and
xchg
jmp
loopne
cmp
sarl
rorb
nop
call
mov
jg
lds
adcl
xorl
pop
and
cmpsl
inc
xchg
aaa
inc
mov
xor
cmp
cmp
and
xlat
test
push
daa
inc
or
ljmp
cmp
out
test
push
mov
ja
mov
push
imul
mov
in
and
xor
push
inc
pop
or
enter
pop
jp
loop
jl
lahf
xchg
arpl
mov
add
push
cld
shlb
mov
xchg
sbb
pop
mov
pop
pop
stos
mov
and
lea
shll
dec
fisttps
add
sub
mov
movsl
cmp
add
pop
out
inc
push
sbb
cmp
jle
out
pop
xchg
add
inc
xchg
mov
xchg
mov
orl
mov
rcrl
or
xor
lods
sub
dec
stos
push
inc
dec
mov
add
adc
test
je
rorb
adc
push
fsubrs
mov
push
or
ljmp
push
shll
enter
or
xor
dec
sub
push
insb
test
dec
je
or
mov
scas
sahf
mov
int3
push
cmpsb
mov
into
xor
sbb
add
loop
lods
lods
sub
test
daa
faddl
pop
inc
mov
push
les
je
push
or
test
imul
pop
fsub
sbb
fisubs
or
insb
test
in
dec
and
call
lock
and
mov
lret
into
sbb
add
arpl
out
fstpl
addl
xorl
popa
mov
inc
sbb
jb
fstps
into
das
add
mov
push
dec
adc
cmpsb
add
and
sbb
xor
insl
adc
jmp
adc
jmp
add
mov
pusha
push
push
xchg
jno
cmp
jle
pusha
iret
ljmp
inc
sbb
add
mov
stc
cmpsl
xor
or
xchg
imull
xchg
jmp
cmp
mov
jmp
adc
loope
jb
lods
repz
les
cltd
adc
lds
fmull
fstl
mov
cmp
hlt
xchg
jne
lea
mov
inc
lock
inc
iret
repz
mov
outsb
ja
mov
mov
sbb
out
movsb
lods
push
pushl
mov
pop
mov
pop
push
adc
xchg
xchg
cmpsb
sahf
push
mov
es
aad
into
push
mov
mov
stos
add
inc
add
les
cmp
pop
push
sbb
pusha
push
dec
add
lock
mov
add
cmp
popf
imul
je
push
cltd
jmp
inc
faddl
and
and
sub
popa
push
jmp
test
and
hlt
inc
jp
push
clc
and
ret
and
push
push
test
jmp
jb
and
push
test
cmpsl
and
adc
and
sbb
lock
sub
mov
add
rcrb
adc
test
adc
in
xor
or
ja
push
inc
dec
sub
ret
xchg
inc
push
imul
insb
cmp
or
mov
jo
adcb
adc
push
and
jl
xor
xor
jg
cmp
je
or
lahf
sub
pop
fs
fistpll
mov
sbb
and
mov
sbb
data16
jmp
bound
cmpsl
push
lock
ret
lahf
ret
bound
in
rorl
adc
sahf
sub
gs
mov
popf
fadds
cs
int3
call
sbb
shrb
in
mov
lods
std
inc
shld
pop
push
cmp
cmp
dec
dec
ljmp
movsl
push
dec
mov
sar
jp
push
jp
mov
mov
dec
fwait
or
dec
dec
inc
stc
scas
cmpsl
je
fisttps
pop
sub
lods
jno
idivb
lods
mov
xor
or
mov
fdivrs
aas
mov
into
cmp
gs
cmp
es
shlb
mov
dec
enter
or
das
jnp
lods
fcoml
in
shl
jl
enter
insb
mov
dec
leave
in
jne
jne
or
add
mov
mov
add
mov
sahf
mov
pop
cld
mov
push
lea
mov
cs
mov
xor
adc
call
push
cmpsb
mov
call
mov
or
inc
or
sub
cwtl
sbbl
jne
inc
sub
adc
pop
and
ss
cmpb
in
and
xor
lods
pop
inc
movsl
lahf
inc
insl
xchg
xchg
icebp
pusha
cmp
push
jmp
outsl
loope
rcrl
mov
sub
lahf
mov
push
and
scas
mov
inc
movsb
jp
rcrb
jl
int3
cmpsb
dec
loopne
call
pop
fimuls
scas
jecxz
dec
test
ret
clc
fs
jns
mov
sti
jo
add
push
or
or
adcb
cmc
xor
inc
lea
mov
js
lods
pushf
adc
mov
dec
dec
push
ljmp
sub
sub
cwtl
add
rorb
test
xor
nop
xchg
stc
mov
jo
cld
test
pop
push
add
mov
sbb
or
pop
sahf
lods
mov
jns
xlat
loopne
stos
daa
mov
cwtl
add
jl
pushl
mov
cld
insl
cmp
mov
icebp
push
xchg
add
pop
xchg
pop
sti
movsb
enter
mov
inc
subb
sub
pusha
sbb
mov
or
hlt
pop
xor
adc
lea
jne
push
add
scas
mov
mov
jo
adc
outsl
mov
sub
sahf
pushf
cmp
mov
in
jp
lcall
aaa
and
xor
mov
insl
arpl
jecxz
imul
mov
push
mov
lds
xor
std
inc
filds
notb
shlb
lea
cmpb
popf
mov
fsubrl
xor
cmpl
mov
jae
rolb
mov
pop
mov
mov
mov
in
imul
dec
mov
dec
arpl
and
test
adc
xchg
shll
scas
and
sub
shrb
mov
dec
pop
inc
xchg
shrb
mov
loope
in
xchg
add
jb
lock
dec
mov
sub
add
and
scas
jns
jo
inc
add
sbb
push
xor
loope
jae
mov
push
xchg
ret
sbb
test
push
or
pop
mov
push
fcoml
pop
adc
dec
enter
shlb
adc
xor
jp
cmp
xchg
mov
sub
inc
fwait
push
or
dec
sbb
pop
js
add
adcb
data16
adc
dec
cs
aad
sar
pop
or
nop
jmp
and
test
push
cmc
inc
bswap
enter
je
pop
pop
jge
pop
ret
jle
dec
xor
push
sub
sbb
dec
xor
jmp
sbb
jg
outsl
negl
int3
cmp
mov
jmp
push
and
repz
mov
dec
mov
sbb
inc
jae
adc
fisttps
into
adcl
lods
pusha
sub
add
pop
jmp
pusha
pop
in
addr16
mov
mov
dec
lahf
fstpt
sbb
roll
icebp
mov
je
push
push
mov
inc
call
add
nop
dec
adc
add
lcall
sub
dec
or
rcl
hlt
push
shr
int
and
xchg
mov
pop
mov
dec
and
pusha
mov
pop
and
cmpsl
lock
sub
daa
pop
mov
mov
mov
pop
mov
daa
inc
outsb
lea
adcb
movsl
pop
lret
add
dec
loope
fstps
cmpsl
lods
push
movsl
lods
fsubl
out
xchg
xlat
test
testb
popa
or
push
adc
adc
outsl
mov
push
ds
jne
or
add
mov
sub
iret
pop
inc
adc
push
xchg
xor
movsb
aam
xchg
movsl
mov
xchg
or
xchg
mov
jb
mov
and
jp
lods
pop
xor
repnz
dec
in
push
push
or
mov
lods
sub
out
mov
pop
aam
ret
into
mov
mov
sbb
int3
loope
xor
ja
mov
ret
or
jbe
aaa
sahf
or
jmp
xor
add
add
xchg
arpl
sub
test
movsl
mov
int3
cmp
xlat
scas
mov
xlat
mov
mov
mov
xlat
jge
rorl
xlat
xchg
adc
and
sub
xlat
sbb
jmp
in
sbbl
sbb
int
inc
nop
loope
getsec
add
mov
cltd
inc
cmpsb
test
inc
xchg
adc
ljmp
sbbl
testl
and
mov
in
fistpl
cltd
movsb
repnz
pushf
add
sub
xchg
push
cmp
outsb
or
push
sbb
sahf
pushf
push
cmp
in
fsubrs
arpl
fisttpll
mov
dec
and
cmp
out
add
mov
mov
mov
jb
mov
jb
sbb
mov
mov
mov
int
xchg
mov
inc
je
cmpsl
and
in
or
outsb
add
push
and
and
dec
xorb
fcmovne
jne
iret
lea
arpl
push
jb
leave
iret
movsb
test
push
leave
inc
test
sbb
xchg
pop
outsb
ret
mov
js
or
mov
in
adc
out
jns
fstpt
push
mov
dec
movsl
icebp
nop
mov
inc
ss
addl
or
pop
div
mov
and
mov
inc
add
add
movsl
loopne
ret
je
aaa
or
dec
jo
mov
daa
pop
loopne
or
push
test
sbb
mov
pop
mov
fisttps
pop
push
inc
and
push
sub
push
sbb
out
xor
pop
xor
mov
out
repz
mov
push
jmp
pop
dec
lret
pop
test
mov
jg
mov
or
arpl
dec
dec
mov
aam
sbb
sbb
fs
movsl
dec
shrb
fcomps
andl
jbe
cltd
iret
ss
or
push
in
loop
dec
jmp
loope
dec
ljmp
test
test
jne
push
xchg
adc
adc
and
xchg
dec
adc
imul
dec
popa
push
faddl
das
add
fists
mov
test
negb
in
sbb
out
outsl
rorl
in
jecxz
or
pusha
clc
cmp
cmpsb
shlb
sub
dec
or
rorl
add
add
jo
mov
aaa
sbb
add
or
sbb
loop
jmp
push
pop
or
mov
sbbb
test
inc
loopne
add
adc
jne
mov
neg
stos
cmp
je
cmp
and
cmp
mov
ret
stos
mov
adc
cmc
popf
cwtl
shrb
rcl
add
rcll
stos
rclb
popa
mov
add
cmp
jae
xor
pushf
std
mov
mov
add
popa
std
fsubl
add
popa
loop
outsl
xchg
pop
pusha
mov
and
pusha
and
test
inc
mov
cmp
sti
ljmp
mov
adc
lahf
aas
or
jle
nop
pop
pop
sbb
lret
cmp
xchg
gs
sub
addb
jb
cmp
xchg
push
in
xchg
mov
cmp
pop
pop
jp
mov
pop
mov
adc
rolb
mov
sahf
pop
ret
jl
cmp
arpl
pop
sbb
shlb
or
adc
sbb
sbb
mov
inc
rorb
sbb
sub
or
in
inc
jmp
mov
test
jge
ja
mov
insb
push
clc
cmp
mov
inc
inc
or
push
addb
sbb
aas
adc
popf
jge
or
xor
outsl
mov
jbe
add
gs
sahf
inc
xor
inc
adc
js
aaa
jecxz
dec
orb
loope
mov
add
movsl
xor
push
xlat
insl
ja
out
dec
adc
add
aad
int3
out
mov
mov
in
loope
jbe
sub
and
mov
adc
push
push
push
add
add
lcall
gs
jbe
cwtl
icebp
cmp
enter
or
jne
push
cmp
rorb
dec
adc
adc
jge
cmp
addr16
add
scas
fldl
out
sub
fidivrl
movsl
adc
xor
fidivrs
add
inc
cs
leave
popa
loopne
je
cmp
stos
xlat
mov
push
xchg
or
js
and
pop
or
cld
push
test
jmp
dec
popa
push
pop
out
push
xor
in
test
rcl
cld
add
sbb
rorl
sub
xchg
jnp
mov
and
pop
adc
sub
mov
mov
das
add
jmp
iret
les
xor
xlat
shl
shll
dec
enter
ss
clc
test
xchg
xor
rorl
mov
add
sahf
les
sbb
or
lock
jae
push
and
stos
sbb
jae
lea
cwtl
add
adc
push
dec
ret
das
gs
orl
fisubl
dec
pop
dec
test
loope
xor
repz
sarl
jl
mov
sbb
mov
push
push
je
cltd
call
clc
push
sub
lea
jle
scas
dec
push
fnstenv
xor
loop
int3
andl
std
lahf
mov
dec
in
push
push
pop
push
int
aas
sbb
fadd
mov
nop
mov
dec
js
mov
incl
lock
movw
mov
std
fnstsw
and
xor
outsb
xchg
fs
inc
ds
cld
cmp
jb
push
push
ljmp
inc
call
push
add
xchg
mov
mov
hlt
test
jl
cmp
jge
shl
fs
aas
or
add
aaa
and
xor
nop
pusha
sti
pop
faddl
add
xor
aas
addl
jns
and
das
rorb
and
into
sub
shll
nop
lds
rcrb
adc
add
cmc
jl
cmp
in
fstpt
or
cld
sbbl
push
or
pop
ret
add
shl
add
adc
dec
and
cli
orl
sub
jo
pop
push
cmp
decl
pop
xor
xor
mov
orb
jmp
mov
mov
or
cmc
sub
gs
or
ds
aaa
xor
mov
mov
jne
jmp
or
add
or
je
push
add
movl
sub
add
adc
push
inc
clc
cs
push
sub
idivb
je
dec
mov
or
push
dec
in
aam
push
push
add
aaa
cltd
pop
push
inc
ljmp
pushl
mov
or
mov
hlt
jmp
je
xor
xor
pop
int3
in
nop
clc
sbb
lock
aam
add
dec
out
xor
scas
jmp
mov
cmp
out
mov
add
inc
les
inc
out
shrl
or
mov
dec
sbb
call
xor
orb
or
add
pop
ret
mov
lods
int3
jle
jb
push
sbb
jnp
negb
push
sub
push
lock
jb
mov
int
fs
out
lea
daa
pop
mov
movsl
out
add
fistl
popf
imul
pop
rorb
xor
and
das
inc
xchg
xchg
xor
gs
push
push
jb
pop
sbb
iret
and
addr16
enter
add
jnp
incb
cmp
fldt
loopne
daa
jg
jnp
cmpsb
push
xor
xor
add
fwait
add
mov
addr16
push
fimuls
jge
mov
adc
sub
lret
xchg
xor
cld
xor
cmp
sub
sbb
cmp
aam
adc
enter
mov
bound
add
sub
sbb
dec
wbinvd
mov
mov
iret
jmp
and
mov
pop
adc
movb
or
leave
push
clc
add
inc
mov
rolb
mov
lea
inc
ret
daa
pop
mov
xchg
hlt
div
and
xor
stos
and
push
or
push
lods
js
xchg
add
dec
or
bound
or
mov
lods
push
test
pop
jecxz
xor
add
or
or
cmpsl
jne
pop
inc
pop
dec
leave
xchg
sub
dec
sbb
dec
inc
mov
sub
fcoml
ret
cmp
jle
dec
mov
cmp
push
imul
cmp
hlt
jge
inc
push
sbb
lcall
jne
rol
call
hlt
jl
cli
and
mov
imulb
vpunpckhdq
adc
mov
mov
std
int3
push
adc
jb
shl
aas
xchg
push
add
adc
mov
out
cli
hlt
in
out
pop
jo
dec
fcmovnbe
loopne
dec
rorb
fs
pop
adc
jnp
call
cmp
mov
and
or
rol
mov
mov
jno
movsb
pop
rorl
sti
jle
jns
push
sbb
fmuls
lds
push
xchg
add
aam
sbb
jnp
xor
push
aas
clc
lock
imul
and
and
sbb
mov
or
push
pop
dec
lock
or
mov
or
and
insl
outsb
adc
pop
test
pop
lea
movsl
mov
xchg
inc
adc
xor
outsl
fsubrl
push
hlt
lret
test
jno
fcomps
enter
pop
and
mov
or
add
ret
sub
cmc
test
jmp
pop
push
cmp
shl
and
shr
push
or
jnp
inc
adc
adc
push
lock
mull
out
fisubrl
xchg
lsl
jmp
push
pop
push
push
into
push
cld
out
inc
shr
rcr
shr
rcr
or
mov
repz
dec
in
and
inc
mov
out
jb
out
out
fisttps
cmp
or
cmp
or
xor
and
lahf
xor
or
cmpsb
sub
jbe
hlt
lret
iret
push
leave
sub
mov
xchg
or
sar
mov
adc
dec
mov
jno
adc
push
into
ljmp
and
lahf
inc
imulb
add
sub
xorb
std
jle
sub
out
or
or
sarl
xor
inc
inc
cmpsb
and
add
mov
sbb
cmpb
sbb
mov
ret
ja
enter
jge
add
sub
bound
jo
jge
inc
sub
and
xlat
and
jne
addr16
adc
ds
mov
push
jo
dec
add
sarb
jg
sbb
jmp
insl
or
jmp
or
sbb
hlt
push
cmp
cmp
mov
test
dec
and
and
ret
mov
mov
cld
and
add
dec
adc
ljmp
mov
es
sbb
add
mov
sbb
mov
jmp
inc
adc
pop
pop
adc
xchg
mov
push
enter
sbb
popf
movsl
jnp
pop
dec
push
jmp
inc
cmp
mov
xor
bound
adcb
and
add
dec
es
ds
add
inc
incb
aam
cmovns
dec
aaa
xorl
mov
xchg
jo
xchg
hlt
adc
add
lock
pop
ds
mov
mov
push
jb
mov
enter
mov
inc
dec
ret
loopne
pop
mov
outsb
iret
mov
jp
jmp
scas
rorb
cmp
jl
lret
iret
out
lods
fadds
fwait
adcl
jp
test
out
xor
xorl
or
adc
imull
sbb
xor
jo
push
adc
mov
fcoms
mov
jg
pop
push
dec
mov
mov
sub
mov
or
mov
nop
mov
push
sti
stos
or
pop
and
pusha
xchg
inc
fildll
scas
fs
ret
mov
xchg
test
imul
cld
call
js
cmpsb
cmpsb
adc
cmp
ret
out
arpl
or
xor
mov
inc
outsl
fsubr
push
fistpl
fmuls
cltd
push
cs
mov
push
sub
cld
xor
enter
pusha
jne
and
pop
adc
shrb
pusha
jae
test
adc
pop
cmp
adc
push
or
orl
fdivrs
xorl
lcall
inc
fidivl
push
push
mov
subl
loope
ljmp
imul
xor
pop
inc
mov
jl
cmp
jg
inc
jmp
add
or
fadd
flds
in
mov
imul
lea
push
nop
push
add
cmp
mov
and
into
in
jno
pop
and
je
dec
add
xchg
mov
or
rcll
icebp
cmp
xor
test
or
fsubr
dec
sub
push
xchg
push
adc
and
or
incl
shll
roll
push
or
dec
cmp
leave
dec
loop
cmpsb
loope
shr
je
dec
out
outsb
lods
movq
push
dec
adc
push
and
xor
jg
idiv
jl
outsl
inc
or
jbe
jle
xor
es
jg
jg
jo
mov
std
stos
les
mov
sbb
pop
fists
lea
lea
inc
out
js
and
aad
shll
fiaddl
testb
or
xor
enter
or
ds
ret
mov
bound
shrb
lret
ret
mov
and
sbb
shr
dec
adc
cmp
sar
xchg
loopne
sbb
push
add
inc
inc
adc
lea
daa
adc
mov
call
dec
inc
push
cltd
mov
inc
mov
shlb
push
and
adc
nop
test
enter
fs
sub
and
shll
stc
sbb
pop
stos
cwtl
std
and
pop
inc
mov
ret
dec
in
jmp
out
shl
sbb
sbb
aad
inc
frstor
jl
jns
adc
add
ficompl
scas
jnp
adc
pop
sub
pusha
push
inc
mov
add
jbe
add
jno
add
adc
rcll
mov
orl
mov
inc
and
adc
add
mov
pop
addr16
xchg
sub
inc
test
imul
repz
clc
mov
pop
cmp
or
sub
cmp
insl
rclb
mov
stc
loopne
addr16
pop
insl
rorl
inc
addb
orb
push
adc
pop
test
mov
and
stos
into
std
cwtl
popf
or
and
or
sub
hlt
jo
push
je
ja
inc
sti
xchg
cli
adc
lea
add
divb
pop
mov
or
xchg
mov
xor
pop
jl
btc
and
xor
mov
adc
add
insl
in
or
inc
add
jmp
sbb
fiadds
addr16
add
enter
jp
shrb
adc
js
xor
adc
in
inc
sti
insl
or
mov
dec
and
ss
sub
jno
add
jno
push
or
or
ljmp
jp
in
mov
ljmp
out
cmp
leave
ds
xchg
fimuls
jmp
push
push
sub
es
ds
mov
jnp
enter
movsb
rolb
imul
arpl
icebp
out
in
pop
adc
push
jl
imul
rolb
inc
addb
aad
or
iret
dec
je
outsl
pop
je
test
sbb
mov
mov
push
jnp
add
mov
addl
ljmp
inc
or
add
mov
mov
pop
inc
pop
jp
adc
mov
sbb
je
iret
andl
ds
push
sbb
mov
pop
mov
pop
aam
fiadds
in
je
sub
aaa
mov
inc
ds
cwtl
fldt
add
xor
sbb
or
das
mov
and
mov
jmp
pusha
or
lcall
out
pop
push
cmpb
jo
lret
or
mov
cmp
jnp
pop
loop
lock
inc
adc
add
or
pop
loopne
and
lock
cmp
lods
add
fcoms
cmp
andb
jge
loope
sub
add
and
adc
out
push
lea
push
or
and
testb
pop
imul
das
insb
xor
dec
adc
fnstenv
sbb
test
call
and
aaa
sar
addl
xor
jmp
xor
popf
pushl
leave
mov
out
ret
cmp
cmp
or
push
ss
xchg
mov
push
add
xchg
subl
add
inc
mov
inc
push
push
nop
repnz
imul
test
inc
mov
mov
cmp
dec
pop
daa
test
loope
and
or
lods
mov
cmp
bound
or
xchg
inc
jmp
push
mov
cs
sbb
sbb
xchg
ret
loope
lea
and
add
cs
push
add
cmpsb
add
mov
pop
xchg
push
cmp
clc
add
mov
inc
sub
push
arpl
and
xchg
incb
loopne
sti
jmp
andl
jmp
mov
test
xor
test
sbb
sub
mov
mov
sub
or
cmp
xor
xchg
jmp
popf
shl
dec
push
in
jbe
bound
lahf
imul
jnp
fisttpll
lock
jo
adc
sbb
insb
loope
or
jmp
adc
clc
pop
jge
fdivp
sbb
push
mov
add
jmp
in
nop
add
jne
dec
dec
jae
imul
sbb
in
mov
or
push
pusha
cmp
jmp
and
outsb
mov
rclb
bound
pop
push
sub
adc
orl
pop
add
imulb
addb
stos
push
cmp
mov
lods
sub
pusha
popa
jmp
jg
stos
pusha
and
cmpsl
loopne
je
mov
push
jge
sahf
pusha
loop
es
mov
push
sbb
jo
in
loope
dec
mov
incb
dec
mov
add
sbb
lret
jmp
sub
je
test
or
iret
pop
cwtl
inc
divl
clc
cmp
and
mov
ja
lock
cmp
or
mov
dec
cmc
jecxz
push
push
int3
je
clc
inc
jmp
cmp
pop
xor
fsub
dec
mov
dec
adc
daa
or
push
das
push
shl
pushf
push
fsubrs
cwtl
test
xchg
test
add
mov
pop
push
sbb
test
jo
les
cmp
adc
rcl
stos
sub
lods
add
jnp
jbe
sub
xor
xor
jne
loopne
cmp
lods
cld
or
fsubrp
lods
sarl
add
ret
add
pushf
imul
mov
jb
mov
fadds
add
enter
movsb
into
divb
sbb
out
out
mov
into
mov
roll
mov
mov
sub
and
pop
mov
push
or
sub
aas
into
ja
mov
mov
and
pop
inc
testl
pop
cmp
dec
les
dec
into
fiaddl
jne
cwtl
and
pop
cmp
cld
cltd
xchg
or
inc
adc
jo
pop
mov
or
sub
test
push
pushf
push
push
lea
lcall
add
mov
add
sub
ret
xor
cmp
jb
adc
inc
mov
pop
jns
pop
sbbb
incl
cmpl
insl
mov
negb
jg
in
sbb
push
es
add
sub
mov
jle
or
add
or
fcom
aam
gs
adc
dec
lods
add
or
shr
sbb
mov
push
in
std
mov
jae
bound
or
adc
inc
mov
dec
test
or
into
sbb
mov
add
shrl
shl
shr
or
mov
insb
imul
sahf
dec
mov
jne
outsb
mov
dec
outsb
adc
adc
push
cmp
sub
jne
loop
pop
push
cmp
lock
rcr
fiaddl
sub
jo
mov
fwait
loopne
ljmp
jmp
or
mov
mov
ret
fs
nop
mov
sub
add
and
cltd
jl
dec
int3
int3
jmp
out
jp
jp
or
daa
mov
xchg
dec
push
dec
into
jmp
lods
xchg
cmpsb
jno
pushf
rolb
and
les
inc
lods
add
pushf
sbbb
xorb
lret
mov
xchg
pop
jns
mul
test
sbb
add
pushw
push
movups
les
pop
mov
inc
mov
inc
in
push
js
xchg
xchg
add
jnp
mov
out
faddl
dec
adcb
fstl
push
stc
popf
jo
jecxz
push
adc
rcll
sbb
add
testb
adc
sbb
mov
sarb
subb
nop
clc
lods
lods
sbb
jg
inc
sub
add
cmp
or
push
aaa
and
pop
adc
nop
push
cmp
add
int3
pop
in
ja
lret
adc
and
movsl
jno
cmp
punpcklwd
inc
pop
sub
fistl
inc
jo
jns
sbb
rolb
or
mov
add
repz
cmpsb
test
push
xorl
aas
out
pop
imulb
es
pop
push
sbb
jge
mov
rclb
dec
jg
loope
mov
mov
adc
je
dec
add
lods
pop
xor
popfw
push
push
sub
inc
jne
arpl
jg
pop
je
sti
mov
inc
adc
out
dec
movsl
and
out
inc
sub
iret
lahf
inc
inc
jo
mov
rcl
aaa
and
psadbw
pop
imul
jg
adc
divb
pop
mov
xor
xchg
add
sub
jbe
and
loopne
mov
inc
inc
xorl
ret
jle
fcmovnu
test
push
push
mov
bound
add
and
dec
ja
shr
add
adc
adc
push
sbb
bound
or
adc
pushfw
clc
and
xchg
rcrb
loopne
push
imul
adc
cld
push
or
cmp
mov
jb
adc
jg
jmp
lea
push
andb
adc
into
or
inc
inc
pop
movsb
cli
mov
xchg
mov
xchg
and
add
rcrl
pop
lock
loope
inc
cwtl
xchg
push
sbb
lcall
cmp
sarb
push
loopne
sbb
jmp
push
cmp
xor
cmp
ret
mov
jno
add
add
pop
dec
cmp
or
div
test
test
jmp
mov
popl
call
lea
add
leave
sar
mov
and
mov
add
pop
clc
dec
adc
call
mov
outsb
or
nopl
xor
lock
adc
mov
sub
sbb
insb
mov
mov
pop
xor
ljmp
imul
xor
pop
pusha
popf
jbe
cmc
cmp
cmpb
push
push
cmp
test
xor
loope
push
push
sub
imul
ficomps
mov
and
std
hlt
or
or
fs
lock
mov
add
incl
cmp
push
hlt
mov
andl
cmp
and
jmp
data16
adc
sti
out
in
nop
loope
lret
add
cld
cmp
fsubs
movsl
test
lock
xchg
pop
inc
push
push
xchg
lock
call
jmp
les
inc
outsb
adc
push
dec
hlt
cmp
cwtl
push
fmull
cmp
fwait
jnp
push
imul
or
scas
lea
xor
jnp
faddp
mov
jns
pop
add
xchg
mov
cmp
sbb
insb
mov
add
push
or
sbb
mov
inc
mov
nop
cmp
and
clc
add
xchg
mov
rol
mov
sbb
mov
imul
pop
mov
lds
lock
dec
je
aad
mov
ret
add
fadd
sbb
pop
sbb
call
jb
iret
jmp
mov
mov
inc
mov
sbb
fldt
cmp
dec
mov
xchg
mov
or
lret
ss
loope
pop
adc
cmp
subb
mov
cmp
jne
bts
jno
add
mov
push
adcl
adc
aad
gs
xchg
and
pop
lahf
dec
add
mov
inc
or
ret
sub
enter
mov
insb
pushl
push
or
movsl
pop
lock
or
jae
in
pop
subb
jns
adc
fiadds
into
jg
push
in
sbbl
mov
pop
cwtd
mov
fdivrs
test
movsb
inc
imul
cmpl
add
pop
cmc
push
mov
roll
xor
sbb
lahf
pop
stc
cmp
add
add
jmp
mov
test
popf
test
shrb
push
or
add
sub
adc
es
add
add
popf
and
sbb
and
xchg
jl
xor
sub
push
jo
lret
jmp
cmp
adc
mov
cmp
push
adc
stos
sbb
aas
push
jae
adc
inc
lods
cmp
lret
mov
lcall
jne
adc
sub
xchg
mov
mov
or
jno
xchg
pop
jmp
mov
xor
lahf
dec
xor
or
or
push
addr16
jmp
cmp
inc
pusha
in
lcall
push
test
adc
pop
in
mov
in
or
mov
add
jl
inc
aam
orl
fisubrs
jmp
sbb
ss
pushf
xchg
xor
lahf
lods
iret
and
mov
fwait
test
cmpsb
adc
mov
push
inc
fimuls
and
sbb
dec
pop
int
inc
pop
add
push
movsb
daa
xor
mov
mov
insb
and
aam
pushf
push
or
fcompl
add
faddp
mov
and
cmp
mov
jmp
imul
stc
aam
xchg
push
xchg
jno
mov
jmp
pop
xor
dec
pop
lea
lds
cmp
jle
and
add
push
jmp
test
test
enter
jl
loop
jg
stos
jmp
addl
js
pop
sbb
jl
cmpsl
jmp
fs
and
out
es
add
jp
mov
cltd
jo
add
mov
pop
inc
ljmp
jb
mov
enter
and
or
and
and
cld
cli
adc
push
mov
mov
lds
les
dec
addl
jne
push
dec
jecxz
or
loope
jmp
xor
adc
lods
in
jle
push
jl
sub
and
xchg
ret
push
pop
and
movsl
pop
pop
cwtl
adc
dec
jecxz
cmp
and
pop
add
sbbb
jo
cmp
xchg
data16
test
out
cltd
add
jb
sub
outsl
add
test
fstpt
push
es
clc
ret
sbb
pop
shl
mov
cmc
mov
mov
mov
test
test
inc
dec
test
dec
out
jl
sbb
andl
xchg
mov
xor
pop
xor
mov
push
cmpb
sbb
jmp
or
push
int
or
jne
push
aas
mov
inc
int
xor
pop
dec
adc
or
and
xor
icebp
add
mov
cmp
mov
xor
pop
jg
adc
push
push
xor
mov
jne
or
xchg
dec
fmuls
mov
sbb
sub
push
push
add
jne
cmp
cld
lret
or
cmp
jno
adc
add
ja
or
mov
adc
pop
adcl
dec
arpl
adc
js
jl
cmp
add
cmpb
cmc
int3
push
cmp
icebp
imul
add
mov
push
lcall
adcb
sbb
pop
jl
insb
mov
xor
lock
mov
cmp
jg
cmpb
xorb
add
ror
or
dec
fsubrl
jne
push
clc
push
scas
rcll
jp
hlt
dec
mov
adc
jmp
xchg
xchg
sbbl
sub
add
jmp
nop
sbb
rorb
je
jae
out
dec
imul
mov
push
pop
jl
dec
sbb
test
mov
pusha
push
jno
insl
pop
mov
jo
loopne
fnstsw
sbb
pop
lahf
inc
lret
insl
lods
push
in
and
add
xchg
sahf
cld
cwtl
jae
add
lcall
or
sarl
jne,pn
sbb
inc
fs
insl
paddusw
fcoml
les
sbb
cmp
mov
mov
lods
push
sbb
cli
fsubr
frstor
push
icebp
hlt
adc
xchg
addb
push
loopne
jmp
cwtl
inc
xor
jo
mov
push
add
sub
push
daa
push
adc
clc
adc
xor
orl
add
mov
xchg
inc
cmp
roll
stos
out
xor
cmpl
sub
fmuls
fcoms
pop
mov
or
add
sbb
adc
adc
or
stc
jb
push
flds
mov
or
sub
call
in
push
movsl
and
add
adc
int
popa
clc
and
add
mov
and
sbb
je
xor
sub
lods
push
xor
mov
add
sbb
or
loope
pop
or
rep
or
cmc
je
arpl
mov
mov
ror
lock
add
jne
dec
adc
cmp
cld
mov
jne
mov
sbb
iret
sbb
cwtl
push
or
nop
fidivrl
cli
sbb
xor
jb
cltd
cmp
insb
xchg
push
lods
test
cwtl
adc
cmp
pushf
mov
movsl
in
pop
push
mov
dec
inc
cmp
int
arpl
and
jp
data16
sub
sub
sbb
xor
movsb
cmpsl
xchg
cld
or
imulb
cmp
dec
or
mov
cmp
pop
adc
ljmp
in
ja
inc
movsb
shlb
cwtl
js
pop
fidivrl
fstl
cmp
jae
add
push
sbb
fildl
push
adc
lds
mov
popf
push
icebp
rcll
dec
jne
stos
out
roll
cmp
xlat
or
nop
arpl
ret
sub
cmp
jle
push
adc
add
je
ljmp
outsl
sbb
rol
cmp
test
adc
outsl
cmp
cld
dec
jg
cmp
or
inc
inc
mov
test
lods
push
gs
jb
sahf
loop
jo
push
in
mov
sbb
mov
and
test
adc
fwait
xor
sbb
sbb
push
inc
inc
int
jb
shlb
push
or
in
ss
adc
ss
leave
leave
and
sub
ror
leave
xor
cmp
dec
fwait
push
sbb
inc
inc
setae
push
push
in
in
pop
add
in
in
insb
jo
add
jl
xchg
dec
rcrb
mov
and
xchg
cwtl
xor
and
pushf
mov
dec
test
shlb
enter
xor
sarb
xchg
dec
fsub
in
xchg
dec
es
es
lock
clc
and
pushf
fs
add
add
mov
loopne
add
xor
adc
adc
sbb
cltd
fs
and
sub
fs
dec
xor
cltd
orb
inc
gs
xor
inc
es
dec
mov
and
dec
push
pop
pop
and
dec
xor
pop
jmp
adc
push
stc
cmpsb
push
rorb
cs
pop
or
mov
mov
movsb
xchg
pop
mov
inc
shll
xchg
sub
repnz
adc
adcb
xchg
pop
sbb
xchg
dec
and
xchg
xchg
cmp
jns
lods
inc
mov
and
dec
mov
dec
mov
std
enter
pop
notb
mov
sub
rcrl
push
and
fbld
or
jmp
rolb
mov
bnd
cmp
dec
outsb
rcrl
dec
jmp
cmp
or
adc
mov
ljmp
and
dec
pop
negb
test
and
add
popf
inc
cs
or
bound
shlb
pop
not
xor
loope
xor
and
leave
and
shr
xchg
fcompl
in
shr
and
jo
and
and
scas
aam
js
lock
add
enter
adc
add
test
hlt
mov
xor
xchg
or
or
push
mov
lcall
incb
mov
std
or
jmp
inc
and
mov
fcmovnu
dec
mov
aaa
jecxz
sbb
xor
fwait
out
jmp
xchg
jmp
test
lea
adc
and
stos
jp
or
aaa
jge
je
mov
mov
flds
and
neg
neg
pop
adc
pusha
mov
pusha
loope
pop
sub
xor
push
loopne
call
insl
dec
in
fstp
ds
and
fldl
cmp
cmpsb
xor
cmp
testb
push
cmpsl
repnz
pop
adc
sti
add
or
fists
xor
mov
xor
xor
scas
ret
mov
loope
das
cltd
or
sub
je
jmp
push
and
and
pop
notl
cmp
and
andb
mov
mov
sub
and
or
int
aaa
add
inc
flds
fstps
jmp
fst
adc
pop
lea
aaa
lock
test
adc
orb
fcomi
adc
loop
sub
jmp
sub
scas
adc
xor
or
and
ja
cmp
and
or
and
inc
hlt
pop
dec
push
sub
mov
scas
mov
sbb
fstl
mov
dec
jmp
sub
cmp
mov
sub
jmp
sub
push
push
shr
psubusw
inc
test
into
adc
sbb
sub
lds
ret
mov
jnp
nop
and
rcll
loop
sarl
cli
xchg
test
cwtl
inc
and
hlt
jge
ffree
repz
addl
jmp
add
add
shl
cli
repnz
ss
or
stos
je
fstl
mov
xchg
test
mov
shrl
scas
lock
dec
inc
pop
orl
rcrl
nop
loopne
or
push
push
pop
jmp
pop
push
rolb
jno
lcall
cmpsb
mov
faddl
leave
mov
movsb
or
sbbb
pop
shr
jle
push
add
or
shll
sbb
cmpsb
push
sbb
jle
adc
push
fists
push
repnz
test
add
and
add
sbb
mov
dec
ret
lods
mov
cmp
je
add
jl
xor
add
jge
lods
call
test
rcrl
cld
sbb
hlt
rorb
inc
cmp
and
sub
mov
mov
sbb
out
stos
and
ja
sti
add
or
fstpl
add
in
jmp
jno
out
pop
gs
inc
and
dec
xchg
mov
loopne
inc
mov
xor
fnstsw
or
sub
or
lahf
es
cmc
jo
ret
insl
orl
sub
adc
mov
mov
lock
in
inc
add
add
add
hlt
les
aas
pusha
rcpps
pushl
mov
fcoml
sub
push
das
mov
adc
pop
arpl
mov
add
data16
cmp
notl
loopne
sub
jl
push
jnp
loop
or
add
sbbl
adc
je
loopne
sbb
into
sbb
cmp
sbb
mov
xor
mov
xchg
xchg
sub
call
shll
push
lret
lock
or
imul
decb
mov
add
fsubs
into
pop
xorb
jmp
lods
sbb
test
hlt
pusha
push
inc
lahf
les
push
enter
jge
dec
out
fld
fucomp
pop
flds
ret
lret
pop
out
mov
mov
jne
orl
aad
and
mov
sbb
shll
and
push
or
inc
mov
dec
fisttpl
push
or
push
out
mov
das
fsubs
jne
push
jp
push
or
push
and
imul
fsubrs
sub
push
lret
inc
cmp
push
pop
dec
in
dec
ljmp
popf
fstsw
movswl
mov
loop
inc
fsts
cmp
add
and
rol
xchg
mov
fcoml
fldcw
push
push
mov
loopne
mov
fdivr
fcmovnbe
fwait
ja
or
adc
sbb
imul
or
add
nop
call
movsb
fldpi
xor
in
outsb
std
or
enter
push
icebp
test
jg
inc
je
sbb
scas
and
ss
loopne
movsl
pop
mov
mov
andl
orb
pop
shlb
and
jns
mov
inc
jl
test
js
incb
sub
sbb
add
dec
jo
sub
adcb
add
mov
test
lock
shlb
jbe
mov
inc
movsl
mov
add
das
push
mov
fidivrl
es
outsl
aas
mov
test
cmc
mov
pop
rclb
add
shlb
sarl
or
adc
xor
xor
sub
pop
aaa
addr16
je
mov
pop
mov
cmp
mov
push
sti
jbe
sub
mov
lock
call
repnz
mov
enter
or
add
loope
fists
lods
pop
jno
jge
add
loope
rcrl
cmp
or
test
dec
or
fisubl
imul
dec
push
or
cli
and
dec
add
aas
and
pop
sub
cmovne
rcl
mul
in
adcb
test
jbe
jl
lea
dec
jp
push
fs
xchg
rcr
cmc
lock
stos
jp
pop
pop
sbb
jmp
in
cli
jno
loopne
sub
push
adc
pop
add
adcl
scas
inc
jns
dec
or
fwait
mov
inc
lea
pop
xor
lret
ljmp
push
mov
cli
lret
loop
rolb
cmpl
int3
and
mov
pop
and
mov
out
mov
dec
or
inc
adc
iret
mov
insl
lea
cmp
loopne
subb
pop
cmp
jb
cmp
dec
inc
lahf
jmp
sub
adc
inc
fldt
loopne
xor
jp
test
out
sub
ss
mov
stos
jns
and
rolb
and
pop
mov
sub
push
fdivrl
cmpl
add
xchg
and
scas
push
add
pop
or
loope
inc
or
ljmp
push
dec
xor
cmp
xorb
xor
push
loopne
fmul
shl
add
jg
sub
sub
not
push
add
loopne
pop
popf
jb
mov
and
pop
ds
or
and
aam
out
or
xchg
mov
test
jl
inc
rorl
pusha
pop
sub
loope
add
sbb
mov
or
add
pop
dec
jns
sub
dec
lea
push
shlb
faddl
jno
jmp
adc
dec
rol
add
clc
xchg
out
or
inc
rcrl
dec
xor
mov
or
and
lods
mov
lods
fsubr
xchg
hlt
mov
jb
push
pop
add
inc
repnz
incb
aam
mov
xchg
movsl
loop
jns
cmp
and
jo
hlt
push
aas
mov
shrl
push
xor
inc
cmp
fldl
dec
mov
movsb
arpl
push
aam
mov
adc
cmp
ss
roll
adc
popa
loopne
repnz
sbb
or
clc
ja
sbb
gs
shlb
mov
jl
stos
iret
and
mov
or
sub
rorb
push
rolb
and
xchg
dec
lret
push
fimull
lods
shl
test
cld
ret
pop
pushf
iret
or
or
dec
add
inc
or
push
jp
imul
jne
and
or
mov
adc
or
enter
adc
mov
inc
movsl
repnz
mov
test
dec
cmp
mov
adc
dec
pop
xchg
lea
push
arpl
mov
stos
jae
push
or
or
stos
inc
faddl
std
mov
icebp
cmp
mov
inc
mov
mov
push
inc
mov
mov
shll
subb
push
repz
or
insl
lds
add
pop
stos
adc
xchg
xchg
adc
inc
lods
std
pop
jnp
cmc
or
ss
cmp
je
or
call
cld
aas
out
mov
dec
cmpb
je
mov
cmp
pop
jne
dec
lock
inc
mov
shld
inc
add
call
subb
shll
aaa
pushf
lret
sub
or
sub
into
adc
dec
add
adc
or
inc
mov
xor
push
add
adc
mov
outsb
test
notl
add
adc
inc
inc
lret
les
mov
sbb
fadds
je
jne
xlat
movsl
outsl
dec
mov
or
jo
fdivs
or
add
mov
loopne
sarl
je
inc
add
push
into
rorb
inc
les
sbb
sub
mov
push
jbe
push
aas
xor
orb
imulb
cmp
add
push
or
cld
mov
clc
add
sbb
shlb
add
add
lods
xor
xchg
jmp
sub
add
cmp
je
popf
sbbb
sahf
inc
movsl
push
and
mov
mov
dec
jns
neg
movb
fs
xchg
icebp
or
out
imul
xchg
push
in
add
or
push
add
cs
sbb
add
push
push
sub
jns
lock
push
orl
mov
jmp
pusha
cmp
or
dec
add
dec
iret
ret
jmp
add
lret
leave
or
ret
jge
xchg
sub
adc
bound
mov
outsl
fists
shlb
inc
mov
pop
push
inc
mov
inc
aam
lods
add
push
jmp
xorb
lods
jne
sar
icebp
and
and
push
fadd
sub
shrb
and
xor
stos
inc
fcoml
lret
shl
in
and
lea
xchg
sbb
jbe
adc
push
push
mov
enter
sbb
xchg
sahf
dec
jl
ss
cld
push
and
dec
daa
push
rclb
lret
andl
imul
xchg
incb
pop
test
loope
test
pop
xor
sub
or
or
outsb
pop
daa
aad
cmpb
jbe
sub
add
clc
pop
test
enter
js
subb
cltd
movl
push
popa
xlat
inc
dec
sub
leave
and
add
insb
movb
mov
and
mov
mov
mov
fstpt
mov
icebp
add
lock
ret
es
shll
add
xor
xor
inc
aam
sub
add
cmp
call
xor
scas
and
add
jb
cmpsl
or
shlb
sbb
insb
ja
imul
hlt
nop
dec
xchg
mov
sub
adc
es
push
clc
lods
pushf
pop
xchg
ret
or
sbb
sub
shlb
insb
bound
cmp
lds
dec
fs
cld
add
hlt
shrd
sbb
dec
cmp
pop
inc
jge
sbb
clc
cmpsb
in
mov
jmp
cmp
add
dec
jmp
cmp
ficompl
cmp
and
jl
inc
fs
incb
push
adc
push
sbb
ljmp
or
sbb
push
sbb
push
and
ljmp
sarl
jg
xor
fdivl
xor
jmp
mov
sub
fimull
sbb
loop
jl
xor
jb
jbe
aaa
sub
addr16
add
mov
xchg
orb
mov
or
add
mov
mulb
inc
dec
pop
xchg
xor
sbb
mov
add
jl
or
cmp
rcr
jnp
inc
jo
in
in
ja
cmp
mov
fldl
or
test
sbb
cmpb
cmp
inc
or
std
add
pusha
sbb
movw
adc
jp
fimull
xor
xor
in
idivb
cmp
push
sbb
mov
push
imul
push
inc
sub
add
inc
or
xchg
jns
neg
call
iret
cs
xchg
inc
or
or
inc
cli
ret
aaa
push
lods
mov
add
sbb
mov
adc
pop
push
xchg
fisubl
push
adc
pop
repnz
je
aad
mov
jbe
jl
test
add
rcrl
mov
loopne
mov
addb
push
cmp
adc
out
jae
rcll
addb
fs
push
divb
push
cmp
insb
mov
push
and
sub
xor
roll
mov
cmp
leave
loopne
xor
sbb
insl
lods
push
stos
push
or
test
dec
out
js
jl
xor
cmpsb
sub
inc
or
sub
sub
stc
mov
mov
adc
push
add
popf
jmp
xor
rolb
testb
clc
gs
or
pop
data16
pop
add
sub
insb
fs
inc
popa
je
inc
je
dec
xchg
pop
mov
sbb
pop
std
jmp
cmp
mov
add
adc
add
call
adc
push
jo
mov
push
add
pop
shl
push
ret
push
jge
mov
arpl
ret
pop
cmp
mov
mov
pop
hlt
dec
inc
lods
xlat
sub
inc
mov
and
adc
bnd
cmpb
jne
jnp
sub
push
and
push
xchg
rcrl
push
xor
jle
jmp
adc
adc
bound
sub
add
cmp
jp
push
mov
xchg
cmp
je
push
or
cmp
sbb
mull
fwait
mov
dec
sub
mov
jg
loopne
fbld
lea
inc
jmp
and
push
clc
add
push
loopne
pop
inc
push
les
pushf
shll
and
roll
pop
jne
push
movl
mov
mov
cld
jg
fistl
push
sub
and
leave
subl
jge
dec
jne
mov
push
push
push
leave
inc
ljmp
mov
pop
sub
outsb
das
subl
cmp
push
cmp
dec
insl
jbe
or
ljmp
push
ret
cs
adc
push
push
iret
test
jmp
insl
fwait
push
jg
push
adc
mov
cmpl
sbb
addb
lock
or
push
sbb
rclb
mov
adc
and
loopne
imul
pop
pop
pop
pop
pop
data16
dec
shlb
cmp
xchg
nop
icebp
add
dec
xchg
jb
pop
jb
test
nop
inc
ss
mov
xchg
jne
sub
je
dec
je
and
scas
dec
push
push
jmp
or
jmp
cli
xchg
aam
ljmp
mov
jmp
mov
lcall
xor
dec
jno
ret
fisttps
and
add
sbb
data16
movsb
mov
int3
or
loopne
rclb
xor
jo
and
or
mov
lret
add
xor
dec
xchg
pcmpeqw
adc
mov
aas
and
cmp
je
mov
hlt
ss
inc
mov
outsl
lea
or
inc
add
stos
cmp
fs
inc
stc
and
and
sub
and
mov
xor
loope
ret
push
fimuls
sbb
mov
pop
mov
mov
adcb
fldenv
inc
inc
mov
cltd
pushf
and
cwtl
mov
cs
sbb
add
mov
or
sbb
call
push
mov
rorl
or
sbb
lret
aaa
pop
push
repz
clc
shr
add
or
daa
stos
add
pop
or
mov
push
adc
mov
call
and
add
mov
mov
test
notb
lock
cmp
or
mov
add
movsl
insl
insl
and
leave
inc
jbe
adc
movsl
fldl
jl
in
sbb
cmp
add
dec
pop
add
pusha
rcrl
mov
and
ja
inc
fisttpl
cmp
xchg
pusha
sbb
out
bound
push
push
push
xor
lret
push
jns
into
clc
xorb
jl
add
rolb
jbe
sbb
xor
nop
xchg
inc
test
mov
cltd
cli
out
mov
and
xchg
xor
fs
leave
rcrb
or
push
pop
cli
ficomps
adc
xor
push
xchg
nop
jle
dec
les
mov
sub
cmp
movsb
dec
push
mov
incl
cmpsb
or
xchg
or
mov
pop
je
data16
sub
popf
push
ja
nop
outsb
je
sti
addl
adc
pop
add
push
mov
and
or
je
dec
hlt
adc
fwait
jo
enter
js
loope
push
push
mov
pop
lret
and
rorb
add
or
pop
or
lret
xor
sub
pusha
cltd
xchg
or
pop
bound
int
push
mov
or
iret
xchg
inc
cmp
sub
and
daa
add
fisttps
insl
rcr
orl
push
mov
stos
mov
pusha
sbbb
pop
movsl
punpcklbw
add
popa
movsl
daa
lock
push
add
insl
pusha
mov
pop
jb
scas
inc
mov
add
sbb
scas
add
add
sub
mov
xor
fs
mov
mov
sbb
lret
or
clc
xchg
sbb
sbb
daa
mov
adcb
inc
bound
add
and
cmp
je
add
mov
sub
movsl
loope
ret
faddl
outsb
and
dec
cmp
push
jno
imul
sbb
fildl
ss
push
add
and
add
pop
call
or
jmp
ss
dec
mov
call
ss
adc
imul
inc
dec
push
mov
pop
cltd
inc
outsl
pop
shrb
pop
inc
cmp
dec
add
sub
mov
cmp
jle
inc
and
or
sub
sub
pop
sbb
out
inc
mov
pop
inc
push
xor
mov
mov
js
cmpb
jl
shrb
xor
xor
mov
inc
aam
push
fstl
xchg
add
jne
or
push
pop
push
push
call
aaa
push
mov
loopne
imul
mov
rorb
inc
and
dec
mov
ljmp
mov
jmp
data16
cmp
jne
push
or
xchg
adc
jo
jmp
inc
dec
add
mov
in
aas
add
adc
rorb
push
adc
adc
fprem
out
sti
jmp
std
roll
leave
add
je
mov
pop
loopne
iret
adc
cmp
push
inc
les
or
ret
jge
bound
rolb
movsw
sti
jge
xchg
add
add
add
loopne
lea
mov
and
add
or
and
lea
sbb
or
rclb
mov
jge
inc
inc
testl
neg
sbb
sub
jns
sbb
inc
sbb
aaa
xchg
sbbb
sbb
xchg
adc
sbb
push
push
inc
and
fldenv
fcomi
sbb
xor
dec
sbb
sbb
and
add
jns
xor
fwait
dec
jne
pop
pop
pop
pop
add
or
int3
or
mov
and
lods
rcl
ljmp
dec
and
shr
sub
adc
aas
inc
xorb
idiv
and
jo
fdivr
lock
je
push
js
rclb
cmp
push
sbb
out
sub
into
add
pop
fildll
jae
adc
dec
push
enter
mov
xorl
mov
hlt
das
push
or
aad
and
into
jbe
jne
inc
pop
aas
xorb
movsl
das
hlt
adc
and
aas
shlb
or
push
pusha
mov
xor
add
mov
movsb
outsb
cmp
paddusb
test
sti
in
dec
or
or
push
ret
or
add
xchg
adc
gs
sub
test
shrl
add
imul
fldl
repnz
rolb
cmpsb
imul
jnp
add
adc
cmpsb
je
cltd
movsb
cmp
cld
mov
aam
adc
fcmove
jne
pop
sbb
inc
jmp
push
add
add
ja
pop
loop
das
popa
imul
inc
sbb
add
push
xchg
mov
or
adc
shlb
mov
je
decl
jl
out
push
cmp
ja
add
and
adc
cmp
jne
es
adc
adc
mov
nop
and
inc
jl
pop
pop
je
adc
jmp
adc
lods
orb
cld
cs
sbb
lea
push
and
shlb
test
int
or
fdivr
aas
loop
lods
in
pop
push
movb
jmp
or
pop
nop
scas
and
sbb
sbb
cmp
pusha
sub
push
jl
push
mov
or
push
pusha
movw
jb
add
ss
addl
sub
adcl
into
testb
sbb
cmp
push
add
mov
pop
mov
fdivr
inc
ja
dec
je
or
sub
orb
push
mov
incb
push
add
xchg
out
add
fwait
aam
push
pushf
mov
sarb
dec
push
shr
shr
mov
imul
lea
sar
call
mov
insb
pop
scas
movswl
pop
neg
push
jnp
cmpsb
xchg
push
ljmp
cwtl
fiaddl
add
popf
ss
iret
shl
fldenv
sub
cwtl
inc
adc
jnp
ss
rcrl
mov
rcll
lea
pop
lods
xor
add
jl
mov
test
jl
decl
jle
jo
andl
push
les
pushf
loopne
adc
scas
adc
loop
or
mov
and
and
lea
inc
xor
nop
push
cmpsl
add
into
sahf
loope
mov
ja
and
cli
rcrb
loopne
xor
call
in
ljmp
fs
inc
or
cmp
cmp
mov
rolb
lods
xor
mov
sub
lea
xchg
stos
rclb
mov
test
or
sbb
mov
sahf
push
pop
imul
movsb
push
arpl
sub
dec
mov
data16
xchg
mov
mov
fistl
jne
mov
repnz
and
rorb
mov
lret
add
mov
loope
push
mov
gs
add
shr
or
and
rorb
sbb
pop
mov
or
call
clc
mov
sahf
cmc
add
mov
inc
int3
shrl
loope
shr
or
mov
cli
jmp
xor
imul
xor
mov
dec
and
test
testb
sahf
cmpsl
mov
dec
cli
cli
inc
cli
div
pop
sbb
pop
add
jp
add
mov
loopne
sbb
ret
incl
sahf
les
cli
adc
in
xor
lahf
call
ficoml
sub
sub
jmp
sbb
push
fidivl
fldenv
enter
add
aad
jg
or
rcll
divb
sbb
sbb
lock
lea
push
negl
inc
repnz
pushw
sbb
sbb
clc
out
jge
inc
inc
xchg
jb
popa
test
popf
pop
fcomip
dec
dec
in
aam
movsl
test
adc
adc
jne
sahf
fisttpl
ss
inc
shlb
fmuls
rcrl
aam
int3
movsb
enter
and
jge
add
mov
les
sbb
ljmp
xor
sub
push
pop
fmull
or
push
lret
sub
and
fnstcw
mov
insl
test
cmpsb
arpl
cli
mov
sub
xchg
add
or
xor
add
adc
enter
jg
or
adc
mov
mov
out
or
add
fs
jge
mov
jb
or
pop
nop
movsb
jmp
add
xchg
pop
add
ljmp
and
nop
sbb
ficomps
lret
mov
pusha
add
xor
pop
test
sbb
mov
sbb
push
std
pushl
push
cmp
jle
push
pop
outsb
call
xchg
sub
and
and
or
pop
xchg
push
mov
adc
shl
rcrb
xchg
cli
pop
inc
inc
leave
lods
mov
sahf
mov
clc
mov
adc
neg
and
mov
insl
call
jecxz
imul
loopne
fcoms
in
push
pusha
lea
push
and
mov
push
in
cs
mov
pop
dec
inc
add
add
int
mov
push
sar
sub
ljmp
or
adc
and
cmp
dec
sub
inc
cmpsl
inc
lcall
stos
ljmp
sahf
mov
aam
shlb
add
sub
test
fisttps
push
call
add
add
loopne
inc
sbb
or
mov
inc
ljmp
jmp
orb
dec
ret
hlt
mov
sub
cmp
jge
sub
cmpb
or
mov
lock
dec
cmp
add
dec
ja
jb
add
add
fadds
add
cmp
ret
fidivrs
jne
dec
mov
jb
int
rolb
or
in
jbe
xor
lret
or
loopne
adc
jp
ret
adc
inc
or
pop
imul
add
test
lcall
stc
stos
inc
inc
call
and
add
push
test
ret
or
adcb
or
add
repz
add
stos
adc
or
push
pop
scas
cmp
je
push
ret
sbb
adc
mov
and
push
ret
or
xchg
adc
and
push
sub
add
fimuls
ss
mov
mov
or
pop
cmp
xor
into
pusha
lods
add
rcl
sub
and
pop
pop
bound
pop
cmpps
prefetch
mull
mov
adc
fcomps
push
rolb
push
xor
push
jne
or
or
push
add
add
add
cmpl
push
or
add
mov
pop
jle
lret
pop
or
adc
xlat
push
pop
sub
ja
mov
jle
jne
fs
lahf
out
and
mov
shll
inc
jl
jge
out
and
filds
push
pusha
push
or
scas
clc
sub
cmp
shlb
out
and
jo
clc
mov
lock
je
jnp
or
cmp
scas
orl
adc
sub
subl
add
shl
inc
mov
loopne
sub
pop
or
mov
mov
xor
in
add
or
add
or
xor
mov
adc
xchg
jp
mov
mov
iret
xor
sbb
xor
inc
jg
into
cmp
into
mov
out
test
call
jg
or
xor
pop
sahf
pop
mov
aam
cmp
mov
cmp
and
or
sbb
stos
cmp
movl
mov
or
add
leave
out
jecxz
push
cltd
adc
lock
and
xchg
fildll
pop
test
mov
and
cmp
mov
popf
ret
cwtl
cmp
inc
sub
jmp
mov
mov
pushf
jb
xchg
lret
ljmp
mov
out
dec
jo
ljmp
mov
adc
fnstenv
scas
add
test
add
or
clc
xchg
add
mov
into
lret
dec
gs
mov
mov
sarl
push
jl
test
push
fadds
jge
clc
add
lret
cmp
fs
cmp
jo,pn
or
mov
fimull
push
sbb
dec
adc
or
jno
sbb
jbe
dec
or
sub
loope
cld
mov
into
cmp
je
mov
cld
scas
push
sub
cmp
jb
cmp
jbe
pop
aas
or
sub
jmp
push
jl
movsl
pushf
xchg
loopne
int3
xchg
mov
ljmp
leave
scas
inc
pusha
test
fisubrl
mov
loope
pusha
pop
pop
ja
sbb
inc
adc
repz
or
dec
pop
and
popa
inc
or
inc
popa
test
aam
jp
test
push
add
pop
mov
nop
aas
adc
loopne
xor
js
incl
aad
aam
lds
xor
mov
test
push
aaa
pop
and
xchg
add
xor
fadds
mov
or
add
test
cmpsl
push
pop
lret
xor
cmp
inc
dec
sub
add
iret
adc
dec
sub
daa
or
push
test
jnp
cs
push
cmp
sbb
push
mov
clc
push
xlat
or
ret
hlt
cmp
add
or
pop
xor
fldenv
sub
ret
sar
ficompl
xchg
pop
jmp
push
outsl
push
aas
mov
gs
sbb
adc
and
dec
mov
push
cmpsl
and
stos
sub
and
sbb
adc
adc
inc
test
loope
aaa
jno
dec
cmp
test
add
call
push
outsb
jo
je
ss
ret
push
adc
notb
aad
add
pushf
inc
and
mov
insb
cmp
pop
xor
ret
mov
push
sbb
mov
and
sbb
lds
dec
in
sbb
push
repz
clc
cli
jle
mov
das
jne
jns
out
jg
xor
sub
adc
push
mov
xchg
add
enter
ret
dec
lea
add
add
cmpsl
mov
incb
add
lock
dec
mov
lea
push
mov
jle
dec
cmpsb
loopne
jmp
dec
fs
adc
mov
and
sub
ss
cmp
or
js
orb
sbb
sahf
or
mov
out
xchg
aam
loopne
sbb
inc
insl
push
test
sbb
pushf
iret
pop
cmp
push
cmp
push
mov
sub
add
sbb
dec
rclb
and
and
popa
mov
adc
scas
sbb
fsubrs
or
and
xchg
pop
cmp
jbe
aas
inc
lods
push
push
push
mov
inc
adc
sub
movsl
pop
int3
or
dec
sbb
pusha
sbb
inc
fs
inc
add
ret
sub
cmp
or
mov
add
in
pop
shlb
fcomps
popa
lea
arpl
adc
add
jge
mov
inc
les
jge
rorl
xor
lret
arpl
mov
sub
push
push
sub
dec
imul
sub
push
mov
or
fs
outsb
sub
push
and
cwtl
movsl
dec
in
or
push
add
push
inc
nop
pop
push
jmp
add
mov
les
add
sbb
movsl
or
sub
in
mov
rorl
clc
xor
sbb
pop
pop
push
lcall
adc
mov
jo
fldt
rol
pop
rol
dec
jnp
push
sarl
mov
ja
ret
cmpsl
inc
popa
xchg
push
pop
or
aas
pop
push
xchg
mov
add
jecxz
aam
insb
popf
or
mov
inc
es
dec
or
and
fs
test
dec
add
jbe
bound
push
add
inc
adc
sbb
leave
adc
mov
inc
inc
pop
or
popa
or
xor
sbb
insl
loop
shrb
or
xchg
outsb
or
sbb
sbb
sbb
bound
aas
les
inc
in
add
es
mov
or
ret
add
sub
cmp
pop
mov
add
jle
cld
adc
daa
inc
loop
mov
pop
out
sub
lret
or
rclb
push
rorl
mov
mov
xchg
in
dec
xor
jns
adc
ret
aas
sahf
or
push
and
mov
scas
dec
cmpsb
cmp
push
push
int
xor
fists
push
and
add
pop
sbb
and
movsb
cltd
push
mov
fisubrl
clc
pop
enter
add
iret
mov
jg
xchg
int3
sar
addb
pop
cmp
mov
call
pop
pop
pushf
enter
fwait
mov
add
add
test
xchg
rclb
or
push
fucomip
mov
xor
std
outsw
movl
add
push
xor
arpl
sbb
adc
push
shl
imul
rclb
mov
and
fnstenv
popf
adcl
push
jmp
imul
fidivrl
dec
sub
outsb
mov
fsubrp
sub
popf
rorb
nop
dec
inc
imul
dec
loope
adc
cs
jge
cmp
jle
aas
or
movsl
jge
adc
add
loop
mov
sbb
cmp
ja
inc
fcmovnbe
mov
ljmp
cwtl
xchg
repnz
sbb
lret
outsl
inc
jne
xchg
scas
jo
out
jp
pop
add
push
repnz
dec
test
xchg
pusha
lret
jne
pop
lock
jbe
imul
xchg
icebp
xchg
shr
jne
das
icebp
cmp
push
pop
sub
imul
jecxz
add
loopne
mov
fadds
push
scas
cmpsl
mov
mov
mov
fiadds
adc
xor
lods
add
in
data16
push
repnz
nop
and
dec
push
insl
jne
jb
lea
or
lock
jp
test
js
or
xor
and
push
add
pop
fs
lods
or
or
test
rcrl
or
sub
fcoml
inc
loopne
pop
cmp
cmp
sti
jns
mov
fwait
xchg
and
jle
sbb
mov
fwait
adc
or
dec
cmpl
mov
cltd
pop
jbe
or
imul
cmp
bound
mov
or
shrl
cmp
rorl
mov
mov
cli
mov
shr
sbb
fwait
sarb
cmc
and
jecxz
ds
cltd
testl
rcrl
pop
cmp
mov
movsb
lret
fnsave
push
and
and
push
sti
jne
inc
sbb
sbb
pop
fimull
inc
or
mov
xor
imul
sbb
test
pop
shrb
push
jae
push
hlt
pusha
ret
loopne
leave
int
cmpsl
mov
add
in
push
or
jl
mov
test
push
add
add
adcl
add
or
stc
sbb
mov
loopne
cmp
sbb
xor
fsubrp
sbb
mov
pushf
add
or
out
add
fidivl
push
push
add
dec
repnz
mov
jg
aas
fistpl
fs
pop
jl
or
push
mov
pop
dec
pop
test
fstl
push
mov
dec
loopne
push
xchg
or
sub
cmp
aad
cmpsb
lcall
and
pop
sarb
sbb
les
mov
adc
mov
mov
loope
out
repz
loope
fdivs
add
loop
push
movb
cltd
or
inc
cmpxchg
outsl
andb
imul
or
cld
pop
xor
cmpsb
pop
adc
cmp
jae
loop
ljmp
lret
cmp
jg
out
dec
shrb
dec
rcl
add
xor
dec
cmp
mov
es
inc
adc
sub
cmpsb
jmp
and
inc
jae
push
pop
outsb
fcomps
pop
mov
movsl
push
stos
ds
cmpl
iret
adc
mov
movsl
and
lcall
sbb
mov
sbb
ret
or
dec
sarl
sub
in
nop
xor
sub
andb
adc
or
dec
imul
test
inc
fbld
or
xor
lods
dec
inc
addb
divb
pop
add
repnz
xlat
mov
and
mov
add
adc
es
push
js
incb
pop
mov
pop
je
xor
aam
aaa
add
cmpl
popf
add
sub
jl
std
add
ss
jmp
cmp
or
cltd
mov
xchg
je
mov
cltd
neg
add
cmp
movsl
xor
arpl
add
inc
push
rcrl
dec
dec
sbb
push
ss
cltd
cmp
mov
adc
cli
and
jecxz
or
adc
adc
mov
loope
cmp
leave
dec
lahf
xor
mov
dec
je
dec
jne
push
sbb
orb
jmp
loopne
inc
mov
cmp
adc
cmp
xorb
mov
faddl
jne
push
sub
jmp
daa
ss
aaa
lds
cmp
dec
cli
inc
movsl
mov
in
cs
arpl
mov
xor
shlb
adcb
mov
mov
loopew
add
stc
cs
sbb
aas
xor
push
clc
or
rol
and
or
movsl
push
xchg
lods
cmp
ss
pop
inc
hlt
push
push
jbe
inc
cli
push
jb
dec
dec
sbb
loop
or
cmp
rcrb
jp
je
add
scas
lods
pop
add
mov
add
daa
inc
push
push
mov
cmpb
call
lea
testb
jne
add
xchg
int
and
mov
xchg
mov
loope
mov
arpl
popa
insb
insl
pop
pop
sbb
loopne
mov
add
popa
or
jl
push
push
cmp
out
mov
sbb
and
sbb
push
xor
out
xchg
pushf
das
or
cmp
adc
sbb
adc
roll
xlat
add
test
xchg
loopne
rol
mov
adc
pusha
push
push
mov
xchg
and
fcomp
inc
orb
rcll
or
mov
pop
and
popf
fcompl
fs
scas
mov
lock
jle
sahf
dec
add
jnp
pop
mov
mov
push
adc
dec
add
and
adc
or
or
fmuls
ret
xchg
clc
int
jg
jg
push
and
addb
adc
cmp
cmp
inc
xor
lock
imul
add
cmp
jg
notb
cld
push
mov
and
nop
lea
sbbb
pop
cmp
mov
jbe
add
sub
call
adc
orl
jg
jmp
adc
push
xor
outsb
push
ss
and
and
add
dec
cmp
aam
push
jge
jb
insb
ret
bound
cmpsl
push
cmp
scas
gs
or
jg
lds
adc
jg
jae
scas
shll
sub
push
popa
and
jns
inc
bound
xchg
pop
scas
and
dec
js
mov
test
mov
stos
add
test
jbe
inc
lret
sbb
stos
push
stc
pop
sti
push
mov
and
call
sub
adcl
fidivrl
inc
rclb
aas
cs
outsl
cmp
mov
adc
xlat
je
clc
das
lock
mov
and
cmp
int
mov
inc
cli
xchg
divb
push
adc
inc
add
cmp
or
dec
jne
jge
push
fiadds
jbe
jmp
inc
addl
je
cmp
pop
jg
cmp
cmp
jbe
clc
int3
xor
push
push
or
scas
sub
or
push
mov
xchg
call
fwait
mov
push
and
sbb
jg
or
push
or
mov
and
dec
mov
lods
pop
fisttps
mov
pop
es
mov
mov
subl
pop
cltd
dec
inc
es
iret
std
rcrl
sub
mov
mov
mov
cmp
imul
lret
ret
or
inc
xor
in
frstor
add
popa
and
sbb
pushf
mov
sbb
aaa
mov
mov
lahf
inc
dec
test
add
add
adc
inc
sbb
or
lahf
jne
add
inc
jb
in
add
dec
cmp
mov
scas
std
add
pop
enter
fst
mov
xchg
xor
add
push
push
inc
jmp
cmpsl
aas
pop
pop
inc
pop
inc
sub
xlat
jle
xor
dec
fdivs
aaa
adc
add
ret
js
mov
and
fld
fstps
add
enter
insb
add
popa
pop
or
inc
jl
jmp
jns
fstps
icebp
xor
rolb
mov
xor
ret
sub
das
jbe
imul
add
and
pop
sbb
or
pop
mov
gs
xchg
jecxz
pusha
enter
aaa
mov
leave
inc
or
call
lea
mov
cmpsl
or
sarl
pop
fadds
xor
mov
jg
mov
pop
push
and
or
out
add
lods
pop
pop
pop
and
xchg
out
add
adc
lcall
clc
shl
and
jl
cld
cmp
sub
insl
int
xor
push
sub
in
adc
mov
sti
mov
out
dec
inc
xchg
in
in
mov
lock
add
pop
mov
pop
mov
inc
adc
loopne
int3
mov
cld
add
shlb
and
inc
push
loope
adc
add
xchg
mov
add
mov
ret
pop
mov
fdivrl
addb
arpl
roll
inc
sets
std
lds
shl
push
sti
add
inc
pop
fsub
cmp
ja
cmp
aaa
andl
cvtpi2ps
or
lock
jb
call
fnsave
aad
sub
fstpl
xor
mov
fimull
and
jbe
shl
fimuls
dec
mov
stc
adc
dec
mov
inc
adc
mov
mov
insl
sbb
fdivrp
pop
adc
push
adc
sub
or
jbe
cltd
pop
xor
xchg
push
inc
pop
mov
xor
out
sbb
ja
and
cmpsl
jne
mov
xchg
add
mov
adc
nop
mov
mov
orb
cmpb
lods
pop
dec
push
loopne
or
cs
jecxz
and
enter
add
sub
aam
fisttpll
enter
les
jae
stos
xorl
xchg
cwtl
stos
adc
sbb
in
lods
sbb
ja
lds
lahf
cmp
outsl
jge
es
ficoms
pusha
fs
fs
push
fs
dec
js
add
negb
fmull
lret
call
roll
jnp
repnz
icebp
jge
shr
mov
adc
out
cmp
and
rclb
and
mov
pop
jne
gs
mov
jb
pop
jecxz
lock
mov
divl
xchg
inc
cmp
sub
mov
test
ret
sbb
mov
mov
jl
ds
shlb
pop
in
mov
dec
adc
js
and
add
cmp
lcall
or
sbb
push
icebp
pop
xchg
int3
inc
xor
fldt
jp
mov
clc
in
addl
in
adc
test
or
fistpl
int
fwait
pusha
adc
adc
nop
pop
cwtl
sbb
xor
dec
shll
adc
inc
inc
add
and
daa
or
out
fildl
adc
cmp
ret
push
movsb
popf
adc
lock
fmuls
mov
cmpsb
rolb
or
loopne
inc
jno
aam
insb
push
in
add
fsts
ja
and
dec
lock
jp
stos
test
stos
in
mov
insl
mov
loopne
nop
adc
in
dec
mov
pushf
or
jb
fsubrl
xlat
pop
xor
mov
mov
inc
dec
pop
mov
mov
in
adc
add
inc
xchg
mov
clc
shr
out
sub
xchg
jge
xchg
loop
outsb
cmp
adc
clc
rolb
or
gs
outsb
mov
and
jne
xchg
call
and
add
xor
push
mov
pop
push
dec
ret
adc
cmpsl
xchg
add
sbb
add
or
add
popf
sbb
xlat
es
cmp
shl
mov
fucomip
fdivr
add
dec
adc
adc
adc
push
call
cmpsb
sbb
fisubl
je
sub
adc
fildl
mov
adc
inc
dec
dec
addl
lods
add
add
js
mov
push
sbbl
mov
fidivl
decb
sub
adc
and
mov
push
adc
popf
out
pop
lret
add
ficoml
in
cwtl
out
in
or
cli
fstps
lods
add
inc
add
loopne
subl
cmp
js
nop
fistpll
adc
ja
fistps
xchg
scas
nop
or
popa
inc
mov
inc
movsb
adc
aam
dec
sarb
mov
pop
cmp
aad
in
ret
jne
lock
or
mov
in
cmpsl
and
lock
iret
lock
test
xchg
mov
subl
mov
in
in
call
xor
adc
bswap
mov
inc
icebp
cmp
sbbl
xlat
sbb
in
xlat
and
clc
test
je
nop
sbb
ljmp
lods
loop
mov
push
popf
mov
in
in
xor
jne
xor
mov
addl
outsb
add
add
orb
rol
or
xchg
test
sbb
xor
push
in
shlb
sbb
les
repz
cmp
xlat
adc
and
pause
or
fmull
adc
mov
dec
jmp
test
ret
cmp
push
lcall
xchg
and
mov
and
and
or
xor
in
inc
retw
or
or
or
inc
cs
leave
imul
or
enter
or
and
cmc
cmp
and
int
adc
mov
daa
nop
jo
aad
mov
cmc
lods
add
cltd
inc
mov
cmp
mov
or
sbb
rorb
inc
inc
xchg
frstor
scas
cmp
push
rorl
inc
arpl
fwait
push
and
lds
pushf
sbb
adc
test
mov
cmp
div
inc
sbb
mov
xchg
inc
test
andb
or
and
inc
xchg
add
negl
mov
or
inc
inc
scas
loopne
add
test
loop
pop
cmp
lock
sbb
xlat
adc
jae
clc
dec
ja
shlb
loope
aaa
adc
add
xor
adc
adcb
test
mov
jl
jno
ret
push
lds
and
pop
push
fcmovbe
stos
shlb
push
add
inc
pop
clc
inc
enter
mov
andb
cmp
daa
daa
comiss
scas
bound
pop
mov
mov
push
pop
stc
mov
sbb
cs
call
adc
stc
call
shlb
adc
mov
inc
movsl
imul
subb
ja
test
adc
push
cli
mov
inc
add
cli
rcl
mov
ja
vpsrlvw
sbb
les
dec
pop
enter
in
add
dec
pavgb
mov
fbstp
shlb
sub
std
movsb
sbb
mov
xor
or
pusha
or
add
or
and
mov
pusha
pop
in
dec
adc
jb
adc
adc
std
inc
mov
add
es
loop
sar
clc
jg
add
and
enter
jne
jge
mov
movq
cmp
aad
adc
cs
mov
loopne
mov
icebp
lock
jmp
adc
call
mov
dec
cmp
sarb
push
add
add
or
or
push
push
les
push
or
adc
xor
fptan
test
and
mov
or
adc
stos
adc
xchg
or
cmp
or
sbb
imul
das
jns
mov
add
ljmp
adc
ret
in
dec
cmpsb
mov
pop
adc
mov
sbb
pop
and
and
ret
cmp
add
mov
das
mov
push
rolb
test
cwtl
stc
mov
mov
jae
and
add
mov
or
lock
pusha
je
or
adc
xorb
sbb
dec
xor
sub
dec
es
fiaddl
and
jne
movsb
in
push
or
dec
push
in
movsl
dec
adc
push
pop
pop
inc
int3
xor
jnp
pop
aam
enter
mov
inc
push
dec
dec
mov
push
add
mov
mov
adc
adc
and
pop
inc
les
push
arpl
xor
mov
mov
jne
shrb
les
leave
add
cmp
jge
lcall
or
push
adc
pop
or
cmp
fmuls
enter
push
jmp
aas
jl
aam
in
and
fsubs
add
nop
xchg
test
push
or
add
in
or
subl
jae
jp
adc
mov
mov
unpcklps
jne
mov
fsubs
or
ret
aas
outsl
mov
pop
xchg
addl
lea
mov
mov
call
sub
in
mov
push
loop
jmp
cmc
lcall
mov
xchg
or
leave
and
pushf
mov
test
lods
cmp
mov
aad
mov
xchg
sub
add
jl
jnp
or
xor
test
adc
sbb
insl
mov
mov
aaa
inc
aam
push
imul
xor
lods
insl
pop
aaa
ja
stos
cmc
push
cmp
sarl
enter
adc
movsl
mov
dec
test
mov
test
ret
fnstcw
pushf
add
sbb
leave
push
cmp
call
jb
or
aam
and
xor
shlb
mov
fcoml
pop
lods
dec
sbb
lea
sub
mov
sbb
pop
cmp
inc
lock
add
inc
fldcw
dec
lcall
push
or
cwtl
lds
adc
xchg
lods
adc
mov
pop
or
test
nop
mov
add
ljmp
lahf
ja
popa
add
lock
int
push
xor
push
xchg
push
js
loop
add
ss
pop
jae
add
jns
mov
in
insb
pinsrw
cmp
or
inc
outsb
pop
call
das
and
test
int3
add
inc
aam
in
push
test
inc
fmul
dec
jns
dec
and
xchg
stos
inc
add
pop
mov
in
fs
scas
rclb
out
jnp
popf
cmp
or
pop
or
imul
adc
aad
adc
sub
stos
push
popa
adc
sub
push
jecxz
push
fldcw
subl
ja
and
xor
xor
xchg
jae
sti
or
aad
mov
adc
inc
xor
sbb
add
add
inc
ret
push
cmp
cmc
push
lods
and
push
mov
sub
or
sti
pop
mov
push
dec
adc
test
lock
xor
shr
call
notl
pop
sbb
imul
roll
dec
xorb
xchg
je
leave
adc
and
sub
movsb
pop
mov
pop
mov
xchg
scas
mov
test
fdivs
and
and
push
aam
cwtl
inc
xchg
mov
adc
sbb
sub
in
mov
adc
adc
stos
test
lods
xchg
data16
mov
sub
add
adc
inc
or
and
sub
rorb
xchg
sub
sti
aam
cmp
xchg
push
push
mov
or
sub
mov
or
mov
pop
rclb
jmp
sub
popf
jae
daa
in
inc
pop
cs
dec
rorb
gs
mov
inc
nop
and
mov
xchg
aam
test
loope
inc
mov
repz
adc
enter
lds
test
divl
test
addb
sbb
aas
pop
jno
pop
pusha
mov
lea
aad
add
sbb
mov
xlat
inc
sub
xor
push
add
pop
xlat
lea
aad
add
push
jmp
aad
addb
test
int
lock
cmpl
sub
jne
movhps
les
test
gs
push
jne
jns
unpcklps
aas
cmp
xor
icebp
sbb
and
sbb
cmp
pop
mov
adc
in
jmp
sbb
addb
jae
pop
inc
ret
jns
jmp
rcll
sbb
mov
das
and
dec
or
test
add
sbb
test
scas
ret
jbe,pt
mov
mov
scas
jge
andl
test
popf
movsb
xlat
mov
gs
push
mov
pushf
mov
adc
andb
stos
pop
xchg
push
sub
repnz
push
cmp
sbb
or
test
dec
aam
inc
push
sub
bound
xor
mov
inc
mov
adc
pop
jle
out
add
js
and
inc
addb
mov
push
out
xchg
sbb
jl
cmp
jb
dec
das
ret
adc
sbbb
jl
cmp
push
xor
pop
js
movsb
test
mov
mov
shll
stc
push
sbbl
push
dec
cmp
lods
cld
or
xor
push
and
or
pop
sbb
ret
nop
cmp
es
cmpl
aam
adc
and
push
jb
and
cmp
test
notb
xorb
enter
test
and
inc
mov
jo
or
or
push
cwtl
rcl
fnstenv
imul
or
cmp
sub
pop
in
inc
scas
movsl
pusha
faddl
bound
dec
inc
sti
jno
or
inc
mov
aaa
mov
lea
rol
xor
xchg
mov
ja
imul
or
mov
xchg
repz
loope
or
bound
inc
fstpl
sbb
mov
clc
fwait
and
xor
cwtl
jecxz
cmp
repnz
leave
mov
inc
es
jp
testl
icebp
xchg
add
es
test
mov
push
push
insl
pop
pop
add
adc
leave
mov
push
pusha
adc
xchg
dec
xor
cmp
xchg
dec
xor
and
cmp
orb
xor
sbbb
pop
xor
cli
imul
push
sbb
push
testb
add
and
cmp
aaa
das
add
mov
inc
or
dec
and
sub
xchg
dec
pop
in
sub
inc
or
xor
cmp
xor
bound
add
pop
add
sub
push
inc
jl
dec
jb
or
jne
xor
pop
push
inc
xchg
cwtl
adc
sub
jge
fwait
mov
nop
push
pusha
rcr
lods
add
cwtl
test
sub
in
inc
adc
or
lock
jnp
dec
pushf
dec
mov
loopne
enter
ret
xchg
outsb
adc
cmpsb
ret
int3
arpl
pop
int3
mov
in
rcl
jns
cltd
popa
mov
outsl
in
mov
stos
add
adc
loop
sub
cltd
pop
pop
xchg
dec
cmp
fstpt
and
dec
fs
lock
insl
sbb
rorb
insb
in
popa
push
xor
aas
out
lea
mov
cmp
bound
mov
dec
jbe
test
fdivs
insl
daa
mov
dec
add
insb
lods
cs
pusha
jae
in
bound
ja,pn
xor
sbb
mov
inc
jbe
mov
sub
leave
out
and
mov
pop
push
sbb
pushf
and
adc
and
ret
xor
mov
or
sbb
mov
test
lds
cmp
sub
test
pop
mov
imul
sub
and
mov
mov
es
sub
jo
data16
cmp
dec
mov
stos
out
sbb
test
xor
std
add
add
test
push
roll
cwtl
test
aam
in
xor
mov
cwtl
xor
cmp
push
inc
adc
xchg
in
mov
gs
loop
daa
in
mov
sbb
notl
sub
fimull
enter
jl
test
sbb
shlb
jo
in
int3
addr16
add
xor
jnp
sub
lds
jmp
cwtl
mov
aad
dec
in
jns
lahf
bound
adc
imul
sub
add
cltd
test
push
dec
xchg
xor
add
and
test
rolb
cld
xor
orb
and
ja
pop
xchg
adc
pusha
getsec
test
lods
push
movsl
bound
add
test
and
add
imul
xchg
dec
xor
rcll
inc
or
xor
sbb
push
aam
pop
pop
sbb
scas
lods
jbe
aam
pop
aam
mov
sbb
fbld
or
out
fildll
aam
lods
sbb
or
rclb
pushf
adc
cmp
fs
ret
mov
push
add
adc
test
or
mov
orl
cmp
mov
dec
push
cmp
shll
fisttpll
dec
sub
shrl
or
cmovae
cmp
roll
ret
add
nop
mov
sbb
jb
inc
xchg
js
orb
cwtl
adc
test
mov
push
sbb
adc
push
pushf
add
in
shlb
lods
test
mov
xchg
out
mov
and
dec
jb
pushf
pop
xchg
bswap
cmp
cmp
enter
jb
cmp
test
lds
jb
or
and
pusha
aam
dec
pushf
fmull
test
sbb
test
in
mov
pushf
pushf
shlb
and
sub
mov
shll
iret
js
cmp
test
cmp
in
jmp
leave
aad
out
jl
test
sbb
jno
xchg
add
inc
and
or
pusha
and
pop
shrb
mov
add
pop
sub
in
sbb
or
jge
xor
daa
inc
mov
adcl
pop
les
popa
inc
dec
pop
pop
adc
imul
dec
mov
lea
push
push
or
xor
les
test
xchg
inc
js
dec
sub
inc
and
push
bound
lcall
orb
cmp
xchg
sbb
mov
mov
inc
insb
pop
dec
inc
dec
rolb
push
push
pushf
mov
xor
ja
imul
loope
push
leave
imul
pop
shrd
mov
shrl
jge
jns
cmpl
addr16
cmp
gs
rcl
es
inc
idivl
dec
adc
or
sbb
leave
and
adc
pusha
mull
or
push
dec
jb
movsb
aaa
or
adc
aad
das
sub
dec
ss
push
pop
sub
andl
jbe
dec
xor
lds
add
mov
scas
sub
inc
and
mov
aam
mov
sub
leave
pop
inc
shrb
fldl
mov
stc
rolb
sbb
in
pop
dec
out
invd
shll
or
mov
fsubrs
or
rolb
inc
adc
inc
jmp
fidivrl
leave
ds
dec
or
int3
pop
pcmpgtb
inc
cwtl
pop
xor
sarb
xchg
shll
mov
loope
test
shrb
xchg
sbb
xor
orb
pushf
mov
mov
adc
orb
scas
shrb
xor
xor
stc
les
mov
mov
jno
inc
movsb
test
and
fs
imul
or
es
pushf
xchg
ja
sub
xchg
rcrb
aas
xchg
pop
adc
mov
dec
jb
int3
pushf
mov
scas
popa
sub
inc
sub
aad
jo
leave
jle
sbb
subl
fwait
movsb
inc
imul
leave
xor
push
mov
sahf
mov
repnz
repnz
repz
and
scas
lods
sub
insl
mov
mov
ss
mov
das
and
rcrb
jl
mov
xchg
dec
push
nop
movsb
dec
xchg
ds
mov
imul
sub
or
pop
mov
std
jo
not
push
pop
sbb
sarl
je
jo
lock
sbb
rorb
push
jecxz
leave
dec
test
pop
enter
js
mov
in
in
or
arpl
sub
repnz
cld
sub
push
and
popf
pop
in
lods
adc
fcoml
movsb
sub
cmp
jg
insl
xchg
xchg
xchg
cmc
in
sti
leave
and
ret
fists
inc
es
in
and
inc
sub
sub
push
movsb
or
mov
push
clc
mov
into
push
mov
dec
jb
cltd
add
icebp
shr
inc
shll
or
lds
and
test
leave
cmp
test
mov
xchg
in
int3
rorb
pop
orl
lds
mov
sbb
xchg
adc
sbb
pop
mov
add
bnd
enter
cmpsb
dec
in
fstps
mov
insl
inc
sbb
sub
adc
das
lods
sub
add
pop
dec
into
inc
mov
in
dec
cmp
mov
xchg
adcb
sbb
xor
mov
out
stos
push
xchg
fcompl
fcomp
sbb
sub
push
mov
adc
nop
pop
test
dec
in
jno
jne
lret
cmp
dec
push
cmp
and
mov
adc
and
or
rcrb
pop
pop
xchg
mov
and
orl
or
push
jno
push
inc
mov
test
test
pop
add
sub
or
loope
adc
hlt
or
and
dec
mov
and
ficompl
orl
jge
sbbb
pop
addl
shrl
dec
xor
sbb
or
shlb
leave
fmuls
notl
ret
fwait
in
sbb
adc
jbe
push
cwtl
aam
cmp
or
adc
fiaddl
test
add
sub
addl
scas
push
cmp
adc
loopne
inc
sbb
push
add
fistl
jecxz
icebp
shl
jo
rcpps
scas
or
and
lods
jne
mov
outsl
fdivrs
ret
xor
std
orl
add
pop
inc
dec
ret
push
push
lods
push
jecxz
cmp
rorb
popa
and
add
dec
push
insl
mov
call
mov
je
mov
add
fstpl
dec
out
jbe
dec
cli
inc
adc
inc
cmpsb
lea
test
mov
xchg
sbb
cld
adc
scas
dec
sahf
daa
pop
test
cwtl
sahf
gs
sbb
and
mov
je
cmp
ss
movb
lcall
xor
in
imull
lret
out
mov
arpl
leave
xor
inc
gs
jo
nop
es
in
cmp
and
xchg
lds
adc
adc
mov
inc
sbb
cmp
push
xor
fistpl
mov
imul
mov
fsubl
mov
jns
push
int
mov
jnp
imul
je
lcall
enter
imul
je
xchg
inc
push
mov
xor
inc
jno
xchg
adc
fdivs
insl
ret
inc
in
or
fs
push
ret
leave
adc
adc
imul
lahf
mov
jno
cmpsb
lods
mov
dec
xor
pop
lods
adc
and
mov
icebp
movsb
rorb
mov
mov
popf
adc
clc
lea
or
pop
nop
outsb
adcl
paddq
or
stos
test
loopne
add
push
pop
add
mov
dec
ret
pop
mov
sbb
cmp
enter
outsl
mov
lods
sub
jnp
inc
dec
fwait
aaa
frstor
push
mov
cwtl
add
ljmp
adc
in
hlt
sbb
flds
mov
sub
and
fmull
imul
fnsave
xor
jb
in
sub
jecxz
nop
call
xor
es
dec
mov
shrl
out
out
flds
and
add
std
insb
fsub
pusha
mov
xchg
je
test
mov
ds
je
xchg
xor
dec
popf
and
popf
int3
sbb
fs
ficompl
mov
iret
in
fcmovnbe
sub
fisttpll
repnz
and
ja
scas
and
xchg
fcompl
or
push
push
and
dec
xorb
lret
imull
jmp
add
call
or
sarb
es
xor
arpl
ret
cmpsl
jnp
mov
dec
adc
and
lcall
je
push
or
lock
and
push
iret
scas
jmp
push
jno
pop
mov
stc
mov
mov
add
pop
repz
add
fcomps
das
addr16
push
arpl
loopne
rep
sahf
in
clc
xlat
or
inc
push
cmp
repz
mov
mov
decb
sub
fwait
int
sub
not
or
sub
add
add
fisubrs
cld
es
aas
xor
inc
orb
jnp
mov
add
adc
mov
mov
adc
or
cmp
rclb
cmpl
pushl
mov
add
into
pop
adc
test
and
push
aaa
push
iret
mov
sahf
push
mov
gs
cmp
add
bound
in
xchg
sub
mov
cwtl
push
sub
imulb
cmp
add
incl
sub
xorb
jbe
popa
and
cmpsb
mov
insb
insb
outsl
arpl
imul
pushl
push
je
arpl
jne
jb
outsb
je
add
push
add
pop
mov
adc
outsl
lcall
inc
outsl
jb
js
je
jb
gs
add
notl
outsl
add
add
add
mov
push
jne
les
inc
and
jb
sbb
fldl
dec
push
add
dec
add
addb
jbe
aaa
or
pusha
es
add
inc
xor
inc
push
add
inc
aas
push
add
pop
fidivl
and
push
insl
addl
je
and
jae
out
imul
fisttpl
fs
cmpsw
mov
push
push
or
bound
jns
push
jne
imul
or
jbe
aas
fsubrp
imul
jp
outsl
or
mov
or
gs
fstpl
addr16
and
outsl
jmp
and
add
jne
int
lret
stos
insl
sub
push
imul
and
scas
ja
cmp
pop
fdivrl
push
data16
push
mov
outsb
dec
sub
xchg
ds
jp
ss
sub
js
lcall
sbb
xchg
jecxz
push
inc
arpl
or
inc
daa
dec
jbe
js,pn
sbb
fbstp
outsb
bound
xchg
aaa
adc
sbb
jo
arpl
mov
jo
push
xor
scas
push
lds
sbb
fbld
mov
filds
push
das
jb
mov
xchg
popa
ret
fidivrl
cs
leave
push
xor
xor
nop
andb
xorl
fidivrl
jg
loope
mov
popa
sub
shll
lahf
je
inc
lds
jg
dec
and
sub
iret
fbstp
cs
fbstp
jne
jbe
jb
push
push
data16
pop
inc
sbbb
jg
xlat
xchg
scas
pop
stos
bnd
das
roll
jae
pop
sbb
ljmp
push
jo
lahf
outsl
aas
arpl
sbb
iret
arpl
sbb
mov
xlat
popl
pop
and
aaa
insl
lret
sbb
jecxz
stos
fs
imul
test
pop
rcll
dec
fbld
psubb
popa
leave
xor
add
xchg
push
jmp
mov
pop
add
adc
pop
cltd
idivb
je
scas
cmp
mov
lea
jae
subb
pop
pop
jecxz
push
and
rcrb
dec
addr16
imul
add
add
js
and
enter
enter
sub
pop
mov
in
enter
sub
in
mov
and
jmp
sbb
jb
push
ljmp
and
xchg
and
fdivrs
jns
jp
popa
or
cmp
lcall
lock
add
add
jp
fwait
sbb
out
sub
push
push
mov
sbb
fcmovne
or
pop
ja
pop
mov
pop
mov
imul
arpl
fidivl
push
out
mov
rcrl
sbb
in
cmp
push
xor
jbe
negb
and
jns
add
push
dec
insb
xchg
das
das
and
adc
jbe
ja
or
dec
inc
and
push
sbb
or
dec
inc
jmp
stos
out
adc
je
dec
idivl
and
inc
mov
js
andl
mov
clc
adc
mov
daa
outsl
dec
xor
inc
mov
and
pop
pop
divl
iret
jns
out
out
pushf
fidivs
iret
and
ss
arpl
pop
js
cmp
push
and
outsl
xor
sub
pop
dec
mov
fwait
jbe
addr16
ds
imull
sbb
mov
clc
test
insl
cmp
repz
sub
fs
dec
and
jns
mov
push
das
das
jns
push
dec
push
inc
aas
testb
insl
bound
dec
outsl
jbe
dec
arpl
popa
or
jo
sub
addr16
clc
mov
xor
insb
xchg
outsb
xchg
inc
jo
imul
popa
jb
jg
bound
inc
jae
fnstsw
popa
outsb
adc
xchg
into
mov
outsb
jns
jg
iret
fdivrl
addr16
popa
je
jb
xor
push
push
gs
sbb
into
fdecstp
jnp
outsl
outsb
and
jbe
pushf
jae
dec
inc
aas
add
jge
imul
or
mov
filds
fildll
push
push
mov
push
popa
insb
jne
inc
inc
mov
outsb
mov
adc
and
and
sub
ljmp
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
test
mov
dec
rclb
mov
pop
pop
pop
pop
pop
mov
popa
sbb
jmp
fs
imul
jo
add
jbe
divb
jp
jl
jle
dec
adc
lcall
insb
adc
fs
pop
add
ret
mov
rorb
ljmp
lret
jno
icebp
repz
inc
mov
clc
ret
movsl
add
xorl
outsl
shrb
outsl
imul
xor
outsl
das
cmp
sarb
daa
push
add
jo
xor
popa
js
addl
test
dec
pop
sbb
out
shl
rol
sub
je
lods
rcrb
add
adc
add
cld
imul
add
and
push
pop
rolb
push
push
add
xor
hlt
and
add
pusha
push
mov
or
cmp
add
sbb
sahf
mov
xchg
push
xchg
test
add
orb
into
in
fnstenv
enter
lret
jb
les
int3
push
jo
add
lds
loopne
xchg
add
mov
imul
outsb
and
push
or
and
pop
pop
pop
mov
adc
and
ss
rorb
add
cmp
lea
mov
nop
xchg
xchg
xor
dec
cs
mov
mov
mov
pop
add
xor
jmp
lret
push
pop
push
cmpsl
hlt
add
lods
push
pop
lods
mov
pop
scas
xlat
repnz
sbb
outsl
sbb
cmp
push
push
inc
fildll
rdtsc
ss
inc
pop
dec
dec
inc
dec
inc
sbb
or
push
nop
fs
je
cs
jae
hlt
jbe
dec
dec
bound
je
outsb
data16
xorb
dec
out
je
xor
push
rclb
jo
pop
lret
aad
jae
mov
outsl
js
push
inc
fdecstp
in
push
and
insl
jo
jo
and
fidivrs
xchg
shlb
aaa
insb
les
dec
imul
mov
outsl
lods
insl
cmp
dec
inc
jb
jns
out
imul
notb
mov
insb
and
mov
outsb
in
and
addr16
sarb
pusha
fsubrl
push
jbe
cld
mov
jmp
or
jb
and
daa
sbb
xchg
pusha
inc
and
pop
pusha
pop
push
jns
inc
ss
lods
jp
mov
mov
pusha
xchg
pushw
popl
cs
mov
cmp
pop
and
push
sbb
xchg
pop
daa
bound
insl
adc
dec
test
pusha
lock
push
outsb
mov
pop
pop
pop
push
push
jae
or
pop
in
cmp
cmp
sub
hlt
clc
addr16
or
mov
das
outsb
gs
mov
add
icebp
jbe
mov
in
adc
inc
push
push
push
push
dec
testl
push
jne
repnz
push
push
ret
push
lods
filds
lea
dec
dec
jge
adc
ds
jle
jb
xor
and
push
imul
mov
jg
inc
adc
adc
in
xchg
or
clc
mov
sbb
bound
push
inc
jg
loop
testb
mov
das
je
outsl
pop
loope
insb
xchg
daa
xchg
mov
ds
jnp
popw
pop
cmp
cmp
repz
fisttpl
ds
and
sub
ret
je
jl
push
addr16
jle
addr16
je
cmp
dec
add
sub
pop
adc
jnp
or
sbb
das
push
jb
call
aaa
and
push
mov
xchg
xchg
fcmovbe
mov
outsb
stos
addr16
push
fstpt
addl
adc
xor
or
pop
shll
pop
mov
int3
lock
dec
sbb
mov
xchg
inc
jo
cmp
and
push
jl
repz
add
cmp
xor
repz
sub
add
clc
add
jns
lock
out
push
push
enter
out
sahf
out
mov
mov
cwtl
xchg
nop
mov
loope
iret
repz
jl
popf
out
add
cmp
jae
pop
aas
mov
pusha
push
pop
pop
repz
repz
push
dec
dec
inc
iret
repz
inc
cmp
xor
sub
iret
repz
adc
add
call
fmul
test
push
dec
sub
call
iret
movsb
jl
push
dec
inc
sahf
int
cmp
adc
cli
cld
in
jns
out
shlb
fidivrs
out
lock
int3
stc
xchg
stc
mov
mov
jg
and
fdivrp
inc
clc
jle
mov
or
cmp
adcl
nop
adc
xlat
es
test
add
fcmovb
push
and
add
add
add
xor
rol
inc
add
loopne
add
add
add
test
pop
mov
add
jnp
outsl
add
in
pop
mov
add
fildll
jle
and
or
addb
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
mov
leave
lret
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
jmp
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
call
xchg
inc
adc
inc
test
call
push
jmp
dec
test
rclb
pop
outsb
sub
je
inc
pop
std
jns
push
shlb
outsb
push
xor
add
loope
push
dec
fidivl
jb
loop
cmpsl
push
arpl
cmp
mov
inc
insb
fs
sbb
fidivrs
jae
mov
or
jg
mov
pcmpgtw
xor
cmp
adc
push
jns
pop
add
push
xor
push
dec
inc
dec
cmovns
add
jmp
sbb
adc
sub
adc
dec
mov
inc
call
rclb
mov
popf
ret
out
xor
jnp
inc
loop
mov
ds
cmp
pusha
pop
adc
clc
lret
sbb
jb
xchg
jge
arpl
cmp
jg
cld
insl
pushl
in
fstl
mov
and
pop
jns
xchg
cmp
dec
imul
lret
add
inc
mov
dec
mov
popf
mov
sub
fwait
ss
sbb
pop
dec
sti
add
ds
xor
incb
int3
dec
dec
xor
dec
popf
lock
decl
out
dec
pushf
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
incl
and
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
aas
sbb
incl
mov
out
fcoml
mov
or
insb
mov
les
dec
out
leave
ljmp
orb
mov
jle
dec
mov
incl
and
repz
xor
aas
mov
pop
dec
enter
repnz
and
mov
sahf
mov
fcompp
add
pop
dec
push
dec
lds
je
dec
iret
mov
rcrl
dec
daa
data16
push
cld
xchg
fildl
sub
mov
and
jo
xchg
and
dec
cmovg
mov
dec
xchg
pop
and
jmp
adc
or
sti
es
jae
add
out
and
data16
scas
subl
adc
loopne
js
xchg
mov
pop
ret
jg
or
subb
fs
pcmpeqw
jbe
xlat
sti
or
loope
popa
daa
fistl
push
or
daa
je
or
lods
mov
push
or
add
mov
jl
loopne
lret
xchg
ret
pop
xor
sub
testb
test
jae
or
xlat
sbb
sbbl
nop
push
outsl
imul
add
jb
jae
jae
mov
jle
fs
push
push
lods
cmp
pop
sbb
and
loopne
mov
jmp
arpl
repz
out
inc
mov
pop
out
mov
push
sbb
aaa
push
mov
sub
push
hlt
lock
daa
jnp
push
mov
shll
or
ret
jecxz
push
xor
stos
jg
out
outsb
adc
add
sbb
jns
mov
xlat
jg,pn
rol
cmp
mov
cmpsl
xlat
adc
xchg
cmp
xchg
js
sub
sub
stos
aas
cmpsl
out
and
fidivs
inc
sti
out
dec
mov
pop
pop
mov
jbe
adc
dec
push
stos
imul
jo
imul
push
hlt
lahf
es
es
sti
cmp
divl
mov
sbb
cmp
out
or
push
mov
icebp
jmp
or
arpl
movsb
loopne
ret
dec
dec
jmp
cmp
fstpt
js
fdivs
dec
jp
xchg
ja
pop
jecxz
imul
mov
push
in
jno
imul
inc
mov
out
inc
fildll
lahf
out
xlat
addr16
je
adc
push
insl
aaa
insl
aas
arpl
daa
pop
arpl
je
add
daa
jne
jo
mov
push
lret
or
andl
cli
pop
je
fistps
pop
sbb
push
inc
add
jno
cmp
outsl
imul
pop
mov
push
push
sbb
mov
xchg
lret
sub
inc
sub
push
loopew
ss
scas
or
mov
sub
aas
mov
inc
aas
into
jecxz,pt
mov
mov
je
jb
xchg
push
loope
push
add
push
arpl
incl
mov
xchg
dec
popa
xchg
lock
jnp
out
sbb
addb
bound
ja
adc
fisubrs
out
sub
jnp
push
adc
aaa
mov
xchg
pop
xor
stos
test
mov
push
push
dec
outsl
push
sub
push
mov
sub
cmpsb
dec
invd
out
mov
and
mov
jne
add
dec
mov
arpl
pop
aas
dec
imul
xor
pop
inc
ljmp
jecxz
out
mov
pop
push
dec
arpl
jo
mov
roll
outsb
mov
jb
fdivs
push
sub
pop
jo
call
add
icebp
icebp
fnstsw
pop
push
stos
inc
mull
xlat
push
fcmovbe
jae
push
pop
mov
addr16
mov
and
jne
insb
pop
nop
fwait
cmp
jo,pt
lods
sti
ret
outsl
mov
inc
and
aas
jmp
pusha
adc
daa
outsl
inc
jno
sbb
inc
pop
pop
add
xlat
imull
ja
lods
loope
push
fsubl
push
inc
jnp
sbb
idivl
inc
sub
xchg
pop
inc
inc
sbb
sbb
sbb
aad
imul
inc
ss
add
test
push
and
push
loope
jl,pt
je
pop
pop
mov
clc
je
aas
insb
aas
pop
lds
scas
inc
bound
outsl
jo
bound
lret
ja
push
sub
dec
nopl
aas
pop
pop
push
xor
mov
maskmovq
testl
inc
inc
mov
outsb
filds
mov
inc
jl
jl
jno
adc
fisttps
jl
mov
pop
sbb
inc
arpl
lret
sbb
lea
fisubs
bound
adc
sbb
mov
scas
aaa
clc
mov
jl,pn
cmp
mov
jns
jae
bound
out
outsb
jl
push
jecxz
out
push
jecxz
pop
jl
pop
jecxz
out
or
sbb
js
mov
jmp
es
inc
mov
imul
sarl
adc
arpl
dec
sbb
sbb
xchg
out
xor
xchg
imul
rolb
jo
fistps
roll
vmread
add
jmp
add
jl
mov
scas
sub
andb
jl
xchg
sbb
sbb
ret
cmp
push
bnd
out
or
es
shl
arpl
imul
sbb
dec
ljmp
mov
mov
loopne
pusha
roll
sbb
mov
lahf
ficomps
daa
pop
testl
pop
nop
lret
mull
mov
inc
adc
daa
push
sub
stos
mov
mov
aaa
cmp
push
mov
insb
das
out
cli
mov
stos
pop
iret
xorl
cld
mov
divl
or
add
insb
mov
add
xor
jbe
aas
popa
popl
scas
aaa
aaa
movswl
das
addr16
sti
es
cmp
js
add
jno
fists
cmp
mov
loop
adc
push
sub
dec
xor
das
shlb
insb
or
dec
jp
pop
ds
jbe
add
add
pop
jp
pusha
add
inc
inc
gs
rcll
sbb
imul
es
inc
inc
push
push
mov
inc
cmp
pop
outsb
jae,pn
in
mov
les
mov
fadds
sahf
ja
sahf
jg
test
adc
imulb
rcrl
dec
inc
push
mov
cltd
dec
aaa
pop
fldt
cld
dec
pop
and
push
rcrl
push
and
push
xor
repz
mov
mov
subl
jle
mov
iret
repz
mov
popf
fsubrl
cmp
pop
imull
ja
dec
popf
push
pusha
aas
pop
jae
data16
popa
outsl
jo
jns
rcrl
shl
inc
xor
push
jecxz
ret
mov
cmpsb
push
and
arpl
out
fwait
mov
xchg
add
or
aas
out
push
and
xchg
and
loop
arpl
push
gs
insl
pusha
push
popa
jne
or
mov
imul
bound
xor
mov
xchg
sub
and
mov
nop
jbe
add
push
fwait
out
fidivs
mull
iret
repz
push
subb
lahf
push
and
fnstcw
popa
cs
shlb
call
jle
push
mov
out
dec
push
cmp
loopne
pop
pop
xor
js
icebp
aad
jb
jno
je
cmp
fimuls
jo
jb
filds
lods
push
sahf
jb
jb
and
cmp
jae
sbb
and
and
idiv
pop
cmp
and
arpl
xor
cmp
fs
inc
sbb
mov
jl
inc
loop
mov
in
jne
je
ss
cmp
fildl
sbb
imul
sbb
jae
data16
aam
imul
adc
push
movsl
mov
xchg
aas
push
mov
add
pop
jne
xchg
sbb
cmpsl
sub
arpl
in
sub
scas
ja
inc
scas
fdivl
sldt
mov
outsl
js
rcrb
mov
scas
inc
subl
inc
dec
stos
pop
add
or
inc
cli
inc
or
mov
nop
test
insb
push
and
test
aaa
cmpsl
das
and
xor
add
xorb
cli
push
adc
roll
mov
pop
outsb
mov
sub
fcompl
push
add
sbb
ja
xlat
inc
sbb
outsb
cmc
push
jecxz
push
ss
xchg
or
push
and
imul
push
add
pop
pop
mov
mov
ja
icebp
out
and
inc
fs
bound
cmpsb
je
cmp
and
inc
or
ss
imul
push
sti
dec
add
mov
cmp
cmp
test
add
jo
pop
dec
jnp
inc
or
inc
iret
ret
cmpsb
dec
mov
test
sbb
or
ljmp
adc
mov
cli
test
lcall
orl
lods
mov
sti
dec
sub
outsb
adcb
outsl
shlb
pop
pop
repz
sbb
iret
inc
bound
adcl
and
pop
inc
add
fisubrl
push
shll
mov
add
pop
andb
mov
je
pop
mov
sbb
and
xor
mov
add
mov
stos
sub
aaa
frstor
xor
dec
sub
add
packssdw
imul
jp
xchg
imulb
inc
jp
arpl
sbb
add
dec
bound
bound
sbb
and
arpl
shlb
nop
push
inc
outsl
ja
jg
dec
jb
fs
in
push
dec
int3
js
jbe
bound
inc
sahf
iret
push
popa
prefetcht0
jbe
fisubrs
sbb
int3
fwait
inc
and
lret
or
adc
out
ja
lods
mov
add
inc
fwait
mov
imul
xor
adc
add
aam
inc
sbb
aas
push
dec
push
dec
out
inc
mov
or
mov
addr16
movsb
movsl
scas
out
sti
pop
mov
das
pop
ds
or
dec
mov
hlt
push
inc
jg
push
xor
mov
imul
data16
jne
add
adc
test
xchg
stos
imul
pop
addr16
mov
xor
outsl
jo
fwait
add
xorb
bound
push
dec
dec
dec
jp
xchg
out
cmp
dec
cmp
push
lahf
push
lods
adc
xchg
xchg
hlt
dec
imul
cmp
sarl
mov
push
or
lods
js
or
mull
inc
cmp
xchg
add
fistl
loop
cmpsl
push
cs
push
mov
pop
and
mov
ss
xchg
cmp
fwait
ljmp
inc
imul
outsb
jae
sbb
in
sub
inc
or
mov
push
inc
dec
lods
add
mov
push
pop
push
cmpsb
aas
loopne
stos
push
roll
test
jecxz
out
and
pop
call
fldpi
fisttps
data16
adc
xor
lods
cmp
imul
jecxz
imul
xor
cmpsl
dec
and
adcl
mov
lds
outsl
rorb
orb
into
sbb
or
push
and
test
arpl
scas
test
imul
out
cmp
mov
daa
mov
push
outsb
dec
bound
arpl
pop
cmp
dec
pop
cmpsl
mov
ja
ljmp
out
push
stos
jbe
mov
pop
sti
pop
cmpsl
adc
cmp
pusha
jns
sub
push
pop
ss
adc
and
outsl
push
notl
jb
out
push
out
ret
push
inc
arpl
test
mov
xor
add
add
jmp
xor
je
into
fcomps
lahf
dec
xor
fdiv
or
es
fsubp
rolb
outsl
inc
outsl
sub
dec
pop
imul
cmpsl
stos
test
iret
lahf
sub
or
pop
xlat
sbb
je
mov
imul
inc
rclb
fsubs
mov
dec
dec
sub
pop
adc
inc
xchg
arpl
stos
xlat
cmp
popaw
push
xchg
aaa
test
clc
and
mov
add
arpl
imul
sbb
mov
push
xchg
mov
cmpsl
pop
push
inc
mov
add
aaa
xor
es
xor
ucomiss
outsl
push
xor
movl
xor
dec
push
push
mov
popa
ss
add
js
push
dec
mov
push
scas
push
call
push
jg
js
cmpsb
sbb
outsl
stos
lock
lods
adc
lahf
pop
pop
push
test
push
sahf
xor
xor
jecxz
es
cmp
movsl
dec
outsl
pop
pop
rolb
and
inc
pushf
mov
add
or
mov
and
lcall
rclb
out
adc
adc
add
jecxz
ja
pop
pop
xor
test
stos
scas
shrl
aas
ja
test
cmp
jae
or
mov
arpl
out
pop
inc
movsb
dec
adc
adc
insl
rcrb
sub
adc
xchg
scas
mov
cs
mov
loopne
lret
sub
sub
push
mov
pusha
in
imul
dec
xor
jb
hlt
loop
jo
scas
push
push
mov
or
minps
aas
push
andl
jo
push
jle
dec
mov
adcb
repz
xlat
mov
mov
adc
loopew
push
push
mull
inc
mov
and
outsl
aas
outsl
iret
jp
test
outsl
and
jae
rcrb
je
jnp
ret
sbb
sub
scas
cmp
inc
xchg
and
mov
incl
add
sub
inc
imull
adc
pop
cmp
repz
and
cmp
repz
andl
mov
cltd
or
push
push
sahf
xchg
dec
test
push
add
ljmp
fisttpll
mov
add
mul
jns
ss
int
clc
pop
sub
xor
inc
mov
mov
jnp
mov
mov
popa
xchg
add
mov
push
shrb
ret
sub
shlb
data16
or
adc
insl
jo
stc
pop
add
xchg
rclb
ss
push
dec
str
int3
data16
add
inc
stc
das
fstpt
rcll
out
push
loopne
sahf
addr16
inc
popa
mov
ret
std
push
dec
push
push
rep
mov
mov
aam
add
add
popf
addr16
pop
jae
pop
sbb
js
cmp
testl
push
rorl
lds
sbb
adc
mov
js
mov
push
es
pop
dec
pop
bound
xchg
mov
sub
mov
into
mov
or
jp
xor
xchg
bound
and
pop
out
cmpl
sti
push
iret
jae
adc
sarl
lods
dec
imul
dec
sub
addb
lea
popa
pusha
pop
ret
add
das
add
es
pop
aas
sub
xchg
jmp
repz
arpl
cmp
shrb
sub
shll
out
mov
rol
outsl
out
adc
mov
add
pop
lret
aas
sti
mov
das
sbb
pop
cmp
loopne
mov
repz
push
scas
shlb
xor
std
sub
das
and
add
mov
push
shr
leave
dec
adc
adc
pop
mov
iret
test
imul
idivl
aaa
jbe
fimull
andb
jg
jecxz
rcl
sarl
shll
mov
cmp
mov
xor
push
clc
jle
jnp
jge
addr16
in
sbbb
xor
and
fs
push
faddl
add
add
outsb
adc
daa
daa
dec
xchg
jle
popl
outsl
mov
pop
pop
pop
and
or
sub
cs
adc
add
loop
sbb
mov
arpl
bound
mov
ret
pusha
mov
in
xchg
idivb
adc
dec
mov
push
push
into
push
dec
xorl
call
sub
and
or
sub
xchg
scas
mov
stos
sbb
pop
je
scas
xchg
stos
in
sarb
xchg
pushf
dec
stos
fmuls
xor
in
mov
stos
in
imul
inc
test
movsb
leave
push
jb
push
add
lods
xchg
push
cmpsl
mov
sub
aad
cmpsl
or
mov
stos
stos
in
adc
mov
movsl
movsl
adc
push
jb
inc
movsb
shlb
stos
push
fbld
mov
push
push
stos
in
mov
mov
fs
jmp
cmp
stos
mov
jb
pushf
lahf
call
scas
mov
sahf
test
xchg
pushf
push
sahf
pop
lods
push
repnz
fistps
cwtl
leave
cltd
mov
jl
adc
out
pop
and
cmpsb
jg
aas
inc
sbb
or
xor
pop
jo
bound
das
fisttpll
ret
dec
inc
call
cmp
mov
mov
fistl
dec
subl
iret
add
adcb
test
xor
push
ffree
fisubrl
das
pop
push
test
mov
je
dec
pop
inc
and
mov
mov
push
or
ds
dec
sbb
pop
sbb
fldt
push
cmpsl
addl
inc
aaa
mov
aas
mov
orl
setae
push
adc
push
inc
xlat
push
and
sbb
xchg
dec
notb
rcl
das
addr16
xchg
sbb
mov
pop
or
int3
fs
push
scas
addr16
pusha
aad
xchg
fildll
inc
scas
jg
outsl
inc
subl
inc
adc
dec
loopne
jecxz
add
rclb
sub
push
jb
jne
push
mov
loop
adc
mov
sbb
lods
xchg
das
out
pop
bound
mov
filds
jmp
sbb
aaa
outsl
adc
mov
orb
ss
outsl
jecxz
xchg
xor
xchg
dec
pop
or
push
fwait
pop
pop
and
aas
outsl
incl
popa
lods
jbe
mov
pop
mov
rolb
or
out
mov
add
aaa
scas
hlt
dec
sbb
pop
iret
inc
das
ljmp
shll
cmp
dec
popa
adcl
jbe
inc
xchg
cli
adcb
jg
jo
mov
jae
and
loopne
mov
xlat
testl
fisttpl
or
ss
and
rcr
je
inc
daa
sbb
jnp
pop
or
or
sub
inc
and
xorl
xchg
push
inc
add
mov
inc
adcl
cltd
pop
ret
addr16
cmp
inc
xor
pop
jne
addr16
sbb
es
ja
ss
or
je
push
fidivs
dec
sub
inc
fs
inc
or
or
or
lea
jae
jns
divl
les
in
ss
dec
dec
bound
jae
shrl
cwtl
daa
js
outsl
dec
js
sub
popf
xor
divb
xchg
cmp
imul
and
or
lret
sub
iret
and
push
mov
pop
mov
mov
pop
sub
repz
or
and
jns
out
bound
cmp
xchg
ret
cmpsb
repnz
cmp
adc
mov
lea
sahf
mov
lret
pop
pop
and
cmpsl
dec
mov
insb
dec
cmpb
adc
or
jmp
sub
insb
add
xchg
pop
jb
inc
pusha
add
sub
add
mov
dec
push
lcall
scas
outsl
or
pop
insb
adc
pop
test
push
inc
daa
insb
dec
adcb
sub
orl
pop
push
aas
cmp
call
rdmsr
cs
test
sub
adc
jnp
xor
push
xchg
dec
cmovno
das
insb
sub
or
xlat
cmp
loop
xor
and
sarb
xor
lods
shr
mov
lret
mov
add
fiadds
testl
ja
push
push
nop
jbe
fwait
vunpckhps
xchg
push
jae
lea
dec
fistpll
push
adc
sub
mov
pop
pushf
dec
fwait
mov
sbb
mov
xchg
xchg
test
and
mov
ja
dec
es
jnp,pt
call
cs
test
push
rorb
xor
push
ret
out
es
adc
and
xor
insl
xchg
repnz
jnp
mov
cmp
inc
pop
repz
mov
jae
fs
dec
sub
pop
pop
fidivs
jmp
jecxz
pop
negl
inc
out
shlb
or
inc
or
jle
js
xor
scas
xchg
repz
cmp
xchg
cmp
or
out
mov
bnd
ss
push
cmp
push
push
bound
xor
cmp
iret
inc
xor
pop
xchg
lret
jb
sbb
push
cmpsb
xchg
ja
hlt
loope
xor
outsb
sbbl
mov
mov
xor
mov
fidivrs
lcall
out
test
mov
mov
push
or
cmp
mov
lahf
push
out
push
push
mov
popf
negl
js
inc
xor
mov
fiadds
mov
push
es
loope
out
ss
outsb
pop
push
push
xor
dec
lock
inc
pop
dec
es
das
sbb
inc
fbld
data16
inc
pop
push
sysexit
mov
cs
sahf
lret
sahf
push
outsl
push
push
cli
push
push
insl
sub
fidivrs
scas
push
insl
mov
inc
ja,pn
xor
adc
jp,pt
jp
ljmp
xchg
ds
fiaddl
jg
dec
js
push
jl
xor
das
imul
js
outsl
pop
outsl
dec
xor
js
push
into
xor
and
and
sbb
pop
sub
pop
push
fdivrs
loop
push
mov
push
test
mov
outsl
dec
loopne
mov
ret
inc
iret
jnp
cmp
dec
jle
and
shrl
xor
sbb
arpl
inc
inc
fcomi
pop
shrb
pop
inc
bound
ja
mov
xor
stc
mov
and
dec
mov
add
fwait
test
xchg
dec
sbb
jmp
push
inc
and
jmp
insb
cmpl
xchg
inc
shll
inc
inc
xchg
mov
sbb
sahf
xor
arpl
adc
popa
add
scas
imul
repz
xor
lahf
push
addb
dec
popa
jge
loopne
addr16
ja
pop
fwait
lahf
inc
mov
rcrl
fwait
jmp
shll
js
sub
out
outsb
mov
push
mov
cmp
xchg
mov
sbb
push
addr16
pop
or
push
push
lret
sub
mov
loopne
dec
inc
fisubrs
fs
outsl
add
add
inc
adc
mul
adc
xor
ljmp
aaa
pop
adc
cmpsl
imul
push
and
push
fstl
out
dec
cmpsb
xor
out
andl
cli
dec
imul
addr16
arpl
push
mov
xor
mov
jne
loopne
pop
ja
repz
mov
pop
outsb
out
loop
arpl
xor
mov
repz
push
cmpsl
adc
xchg
iret
xchg
out
add
nop
add
pop
repnz
push
mov
jne
jo
arpl
xor
jg
push
cs
pop
ja
xor
xor
push
push
or
out
inc
adc
mov
push
inc
mov
push
lea
jae
adc
adc
jae
mov
xlat
mov
in
push
pop
stos
add
adcl
add
sub
mov
das
lods
mov
pop
shlb
ret
stos
lock
xlat
jmp
js
sbb
sub
mov
sub
jg
inc
pop
inc
cmpsl
add
jmp
sbbl
es
push
fisubl
imul
sti
lods
ljmp
push
insl
push
mov
and
push
inc
fwait
iret
dec
cmp
adc
lock
sti
outsl
popa
fldt
and
xor
mov
ret
mov
xchg
test
inc
pop
mov
bound
and
push
fst
adc
iret
inc
xchg
outsb
jecxz
pop
dec
push
imul
ret
cmp
mov
out
fildll
adc
es
outsb
dec
arpl
cmp
jae
daa
push
sbb
xor
pop
arpl
outsl
cmp
imul
das
repz
outsl
iret
xchg
or
aaa
sub
cmp
mov
mov
jmp
jb
push
ds
push
cmovs
dec
xlat
jle
add
mov
popl
push
dec
add
das
add
data16
cmp
sub
testb
lock
aam
daa
lahf
sub
or
hlt
add
iret
aad
ja
outsb
int
fs
mov
adc
mov
push
shlb
test
mov
dec
mov
adc
adc
jmp
xchg
pop
nop
and
mov
adc
iret
adc
and
mov
add
adc
outsl
inc
dec
mov
shlb
movsl
enter
push
push
mov
inc
push
insl
ss
adc
fsin
filds
cli
mov
sub
sub
mov
mov
sbb
mov
ds
pop
sbb
lahf
in
pop
subb
mov
dec
fsubs
cmc
jmp
sbb
mov
pop
dec
xchg
add
mov
push
pop
adc
jb
mov
pop
push
and
outsb
xor
push
in
or
imul
pop
test
jne
add
or
lods
fbstp
cmpsl
and
xchg
leave
add
push
or
dec
xchg
xchg
dec
cmp
push
inc
sub
sub
adc
vmwrite
je
xor
xor
dec
dec
jb
cmp
inc
les
pop
xor
outsl
popf
addb
inc
or
xor
lahf
adc
pop
inc
mov
js
decl
aaa
call
inc
dec
test
xchg
roll
mov
mov
call
aad
imul
pop
in
cs
ss
cmp
sub
movsl
jnp
inc
adc
inc
push
add
cmp
push
inc
addr16
leave
js
jmp
inc
ss
cmp
loope
das
dec
cmp
lock
inc
popa
testl
test
ja
clc
incl
xchg
imul
cmp
popa
outsb
imul
cwtl
adc
inc
das
and
ficoms
mov
fwait
add
mov
add
aaa
push
add
push
in
inc
sbb
jae
xlat
or
movsl
add
cmp
ret
mov
ret
pop
pop
lods
lea
inc
dec
push
push
scas
mov
mov
mov
pop
xlat
bswap
insl
dec
movsl
mov
xor
outsb
packuswb
mov
sub
pop
iret
mov
push
or
cli
ret
sti
cmpsb
push
jp
jne
inc
call
lock
push
mov
adc
repz
mov
and
out
mov
fimull
xor
sarl
lahf
fimull
mov
test
inc
jmp
dec
pop
ja
pop
aam
push
mov
aaa
bound
pop
xor
mov
addl
dec
sub
lret
pop
mov
inc
outsl
ss
push
pop
or
dec
inc
arpl
stc
add
and
dec
lret
sub
push
in
enter
es
cld
push
dec
adcl
negl
jb
lock
fs
mov
pop
test
cltd
out
mov
inc
mov
mov
inc
sahf
dec
push
xchg
cmpsl
mov
push
add
out
jbe
push
jbe
es
ret
les
add
sbb
nop
add
iret
fstpt
jae
push
and
mov
and
movntq
daa
fdivrl
js
aaa
pop
pop
rorl
pushf
in
andb
out
js
add
push
xor
pop
divl
mov
lahf
cmpsb
mov
fwait
int
inc
and
ja
push
pop
mov
loopne
xor
sub
sbb
cmp
out
inc
addr16
or
pop
jns
fdivp
jns
pop
sbb
fnstenvs
sub
idivl
aaa
iret
imul
daa
dec
xchg
fiadds
cwtl
sub
sti
popa
jns
mov
cmc
jle
jns
inc
ss
outsl
pop
inc
outsl
sahf
cmpsl
mov
js
push
sahf
mov
jl
mov
clc
inc
or
mov
loop
scas
aaa
les
clc
mov
test
aaa
ljmp
adc
jnp
roll
repnz
aaa
ss
out
jnp
cmp
adcb
lret
outsl
mov
push
sbb
mov
push
push
and
adc
dec
mov
mov
xor
push
pop
ss
jnp
inc
mov
push
jo
xor
cmp
rep
xor
push
lea
repz
add
push
jmp
ds
ss
and
rcrl
fisubrs
push
jo
jns
in
cmp
cmp
movsb
repz
out
clc
cmp
cmp
iret
subb
iret
out
mov
cmp
cmp
repz
jno
test
fidivrl
int
or
add
or
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
adc
aaa
mov
add
mov
iret
testb
int
mov
leave
loop
and
push
test
mov
mov
je
jg
dec
mov
int3
push
and
pop
imul
sbb
enter
aas
xchg
pop
enter
repnz
iret
pusha
or
in
pop
adc
add
and
xlat
insb
aaa
test
inc
imul
xor
test
mov
nop
or
push
add
js
orl
in
daa
cld
or
shlb
outsb
outsb
lcall
push
push
js
xor
imul
insl
gs
cmp
and
inc
sub
dec
cmp
push
push
imul
push
stos
imul
mov
cmpsl
loope
add
aaa
sbb
cli
inc
outsl
aam
push
popa
or
push
pusha
or
jg
sbb
test
inc
popw
dec
mov
push
enter
ficoml
cs
decl
mov
fwait
mov
aad
cmpsl
push
cmp
push
pop
sub
inc
sub
mov
mov
pop
mov
xlat
out
push
hlt
lock
addr16
mov
out
push
cs
aaa
outsb
loopne
divb
or
pop
std
adc
outsl
xlat
xchg
pop
pop
daa
mov
inc
rcrb
test
dec
dec
jno
push
mov
pop
inc
push
mov
mov
mov
mov
in
mov
fmuls
dec
test
fs
jecxz
popa
adc
imul
arpl
xor
bsr
dec
sub
jbe
push
cmp
mov
xchg
cmp
xor
mov
fisttpl
bound
dec
lahf
cmp
incl
or
fs
jo
xor
scas
mov
sbb
outsb
push
jnp
rclb
movsl
pop
rol
aas
adc
push
and
xor
scas
inc
js
sub
das
jb
addr16
add
add
lahf
in
stos
add
xor
push
cmp
lods
adc
jo
xlat
dec
sub
aas
sbb
lahf
or
add
dec
add
data16
gs
push
sbb
or
add
xorl
inc
xchg
or
add
mov
cltd
mov
pop
pop
ja
aam
addr16
rcr
mov
sub
pop
aas
jae
mov
andb
push
stos
mov
das
sbb
adc
push
lods
and
emms
imul
xlat
das
pusha
mov
mov
jmp
mov
or
mov
pop
cmp
push
btrl
adcl
mov
imul
mov
and
mov
mov
ja
das
mull
mov
inc
das
iret
adc
dec
xchg
jb
sbb
insb
das
pop
dec
mov
sub
add
pop
das
mov
bound
pop
sbb
loopne
inc
dec
push
pop
inc
jecxz
push
aad
pop
jecxz
test
push
fistpl
int3
or
and
lock
jp
mov
jbe
inc
adc
push
xorl
sbb
and
push
add
push
push
sub
aas
je
mov
adcl
add
push
cmpsl
mov
subl
inc
mov
lds
test
rcll
aas
add
inc
and
dec
add
outsl
bound
sbbb
mov
jmp
jno
ja
add
jo
xor
jg
faddp
ficoml
cmpsb
inc
inc
push
inc
mov
sbb
cmp
dec
pop
mov
inc
cmp
mov
mov
imul
dec
inc
jge
out
imul
data16
xlat
xchg
sbb
push
pop
or
jno
addr16
ss
inc
pop
xor
mov
lahf
inc
dec
mov
xor
dec
add
fdivs
mov
cmpsl
push
jmp
lods
and
jg
xor
fldl
mov
testl
pop
pop
inc
lret
push
test
jg
add
add
jecxz
ret
ja
push
in
das
adc
and
lret
or
es
insl
jo
je
add
std
lea
ds
jo
jae
daa
pop
mov
out
jno
outsl
xor
push
jg
inc
or
stos
pop
xchg
adc
insb
pop
sub
pop
or
pop
cmpsb
jns
je
jne
or
bound
mov
xor
das
dec
out
mov
cmpb
dec
jae
lret
and
popa
push
pop
sahf
movb
mov
mov
adc
pop
push
inc
bound
imul
dec
cmp
push
sbb
scas
pop
inc
add
inc
sti
inc
sbb
jmp
shll
lock
push
pop
test
insl
testl
cmpsl
pop
stos
push
pop
mov
pop
daa
ret
sbbl
jp
and
in
or
push
pop
adc
pop
sub
pop
cltd
inc
add
push
add
push
jmp
push
add
mov
dec
and
xchg
ljmp
dec
fwait
add
or
les
aam
jns
jb
add
push
or
adcl
push
scas
push
inc
outsl
in
into
mov
or
aaa
inc
insb
fsubrs
cmc
push
cmc
sysret
daa
lahf
or
sub
push
jecxz
pop
sbb
jb
out
jnp
lock
push
add
and
outsl
inc
je
cmp
push
dec
inc
dec
push
xchg
add
add
rcll
pop
mov
jg
xor
mov
jae
inc
fwait
add
pop
add
push
add
add
adc
inc
incl
and
fnstsw
and
pop
outsl
mov
out
fidivl
and
ds
das
sbb
rorb
fldcw
daa
daa
push
and
lcall
inc
inc
inc
push
inc
pop
and
or
pop
xchg
cmp
cwtl
scas
sbb
mov
mov
push
and
mov
mov
adc
mov
lods
pop
gs
add
ds
push
popw
rcrb
aaa
vhaddps
int3
adc
fsubs
adc
inc
push
jg
fwait
dec
mov
lock
jl
ret
push
add
sbb
in
and
add
outsb
add
mov
push
pop
sub
test
pusha
mov
lahf
in
cmp
jbe
lret
push
dec
push
sbb
mov
sahf
scas
nop
scas
gs
dec
push
sbb
inc
das
mov
add
movl
clc
ficomps
add
push
mov
mov
mov
out
arpl
cmp
push
shll
mov
incl
in
pop
sub
daa
and
sbb
dec
or
fcompp
or
out
pushf
push
jg
push
or
jb
ja
out
push
imul
inc
outsl
arpl
popa
clc
fistpl
sbb
je
and
and
arpl
push
cmp
cmp
je
add
or
jns
movsb
je
loopne
pop
and
popa
stos
and
xchg
add
jno
or
sub
push
and
in
sarb
loop
dec
inc
mov
int3
pop
pop
and
push
fsubrs
pusha
push
js
outsl
fs
lods
pop
in
jle
insl
jo
jns
iret
inc
mov
add
outsl
insl
scas
inc
mov
jne
pop
or
loop
pop
fiadds
les
lret
xchg
addr16
cmp
and
pop
inc
je
bound
aaa
mov
dec
inc
insb
pop
jbe
ffreep
xchg
mov
inc
inc
into
jno
mov
aaa
xor
in
cmp
push
sahf
dec
sub
or
insb
adc
shll
and
or
fucomip
xchg
dec
inc
xadd
sbb
inc
cmovo
add
inc
mov
cmp
icebp
jbe
ds
jo
maxps
loopne
ret
xor
jp
inc
inc
cmpxchg
add
or
jns
sti
ss
add
sbbb
sbb
cmp
aas
add
pusha
xor
adc
mov
inc
hlt
inc
sbb
mov
push
adc
add
hlt
into
pop
xchg
dec
mov
insl
adc
sahf
pop
inc
repz
pop
push
daa
xchg
mov
daa
xorb
pop
cwtl
xchg
add
xchg
xchg
lods
call
daa
xchg
outsl
clc
push
out
sahf
int
xor
xor
in
pop
jnp
adc
int3
scas
fbld
aam
shl
push
ss
pop
xchg
ss
mov
mov
jbe
add
out
inc
pop
leave
pop
jbe
and
inc
fisubl
enter
enter
das
outsl
xchg
add
adc
sbb
xchg
bound
adc
cmpsl
add
nop
xchg
out
push
xchg
sub
es
lahf
sbb
jecxz
xchg
test
dec
cwtl
loopne
add
cwtl
cmp
sbbl
cmp
jnp
jb
push
and
dec
push
outsl
xchg
xchg
jl
mov
xchg
jl
sbb
mov
xchg
fdivrs
daa
enter
test
cltd
adc
out
sub
inc
daa
inc
rcrb
outsl
xchg
xchg
outsl
pop
daa
adc
xchg
mov
insb
ds
pop
pop
jb
and
movsb
mov
add
xchg
rcrb
cmpsb
insl
outsl
xchg
jl
or
pop
adc
dec
add
cs
orb
cs
int3
lods
aas
movsb
and
outsb
mov
add
sub
outsl
mov
nop
dec
or
jbe
les
adc
dec
dec
loopne
cld
rol
or
adc
inc
mov
push
push
mov
inc
or
and
bound
fwait
jl
mov
shl
xor
out
enter
ja
negb
aas
adc
pushf
sub
push
inc
aas
addr16
cmp
cmp
mov
xchg
sub
mov
mov
int3
rolb
aam
mov
xlat
cltd
popf
add
dec
and
and
fwait
mov
jmp
scas
jns
mov
xlat
dec
pusha
mov
pushf
aas
push
cmp
int3
pop
ret
sahf
int
popf
faddl
in
mov
push
dec
add
int3
rcrb
sahf
sub
cmp
rcrb
hlt
insb
mov
mov
cmp
in
insb
lcall
int3
fmull
cs
lahf
mov
filds
push
jns
imul
in
sahf
or
in
nop
or
nop
or
mov
inc
lods
sar
test
pop
mov
test
in
add
cld
jle
out
fcoms
pusha
je
xlat
pop
add
fwait
out
sahf
sub
cmpb
or
push
clc
mov
notb
clc
sahf
mov
cmpsl
pop
jo
nop
or
js
in
movsl
jg
movsb
mov
jns
lods
pusha
movsb
and
test
hlt
jb
fstpt
mov
lods
add
testb
hlt
pushf
adc
cmpsl
mov
jns
pop
insb
test
jae
dec
mov
jg
cmp
repz
enter
scas
dec
or
mov
lock
and
enter
iret
xchg
stos
ja
jle
das
cmpsl
push
fs
sub
lahf
nop
das
ja
inc
sahf
pop
lahf
mov
mov
fwait
or
call
lea
sti
test
pop
movsb
xor
movsb
add
dec
sahf
inc
push
dec
lahf
test
mov
lahf
inc
test
movsb
inc
test
aam
dec
push
out
movsb
in
clc
orps
cmpsl
enter
aam
movsl
sub
cmp
dec
addr16
cmpsl
cmp
mov
jg
sarb
iret
test
pop
xor
cs
daa
shlb
in
pop
push
cmpsl
shlb
dec
out
test
cmpsb
xor
dec
insl
dec
xor
cmpsl
jg
mov
js
cmpsb
mov
cwtl
imul
out
jae
iret
add
add
push
inc
inc
pop
sub
enter
cwtl
movsl
mov
sub
inc
aas
push
cmpsl
jae
in
and
push
icebp
pop
dec
jo
xchg
aas
pop
enter
cmpsl
jo
push
cmp
repnz
aam
aas
pop
jb
sub
cmpsl
les
ds
test
push
cmp
cmpb
lahf
repnz
enter
js
test
mov
icebp
dec
add
loopne
out
enter
mov
or
add
test
and
lahf
dec
inc
mov
cltd
mov
lahf
cmp
inc
and
test
push
jae
pop
addb
push
mov
lahf
push
or
inc
mov
and
shll
jg
mov
push
inc
sahf
and
ja
cs
inc
loopne
mov
or
sbb
repnz
nop
movsb
mov
pusha
sub
add
or
jbe
lahf
add
mov
push
inc
lock
fistl
jg
pusha
pushf
and
lahf
pusha
inc
repnz
nop
xchg
ja
mov
je
xor
xchg
inc
or
in
rolb
movsl
out
mov
mov
sub
ja
iret
mov
cltd
lock
inc
lods
mov
or
push
add
nop
mov
xchg
ss
hlt
dec
add
in
jbe
inc
arpl
out
popf
lods
inc
push
pop
cmpsb
test
insl
dec
jo
jg
adcb
rorl
add
fbstp
loopne
nop
out
fsubr
cld
or
push
inc
fmuls
out
inc
fdivl
inc
scas
cmp
add
aad
faddl
dec
test
scas
lahf
mov
mov
mov
push
mov
enter
jl
inc
rclb
enter
lahf
xor
shlb
fs
push
scas
and
scas
inc
lahf
push
ja
enter
jl
sbbb
nop
jl
jae
iret
test
pop
enter
ja
ss
aam
adc
jb
xor
jmp
lahf
movsb
daa
pusha
lahf
jo
nop
or
xchg
dec
lahf
pusha
jns
in
xor
rcl
cs
or
pusha
xchg
mov
inc
pop
mov
adc
xchg
outsl
aas
dec
mov
addr16
lods
mov
pop
cwtl
aas
sahf
mov
popl
inc
out
fsubr
mov
inc
pop
enter
xchg
enter
dec
in
data16
mov
push
xor
pop
xchg
outsl
add
fcom
jmp
addb
hlt
jmp
add
enter
jae
in
inc
add
enter
fcmovu
jnp
mov
push
sub
pop
repz
addr16
daa
in
idivb
js
add
jo
bound
xchg
jmp
inc
xlat
mov
inc
sub
fcomi
cmp
mov
fcoms
mov
je
dec
mov
enter
inc
jl
insb
pop
dec
sbb
outsb
jl
xchg
lds
dec
dec
dec
movsb
pop
push
nop
cmpsl
or
dec
jo
scas
movsb
ss
test
pop
xchg
ss
arpl
mov
push
and
adc
ret
aas
pop
adc
ret
lahf
jns
cs
ja
daa
scas
call
mov
dec
inc
in
scas
in
cmp
in
scas
xor
dec
scas
in
and
icebp
xchg
push
pop
add
cmp
sbb
mov
sti
es
cwtl
ss
es
insb
fisubrs
adc
jge
jns
test
jo
xchg
out
enter
mov
fsubp
mov
je
int
insb
sahf
cmp
mov
and
or
setno
push
mov
or
dec
adc
xchg
mov
dec
nop
out
in
xchg
inc
leave
xorb
add
mov
stos
cmp
lahf
or
repz
mov
push
dec
and
out
jo
add
enter
pop
leave
in
add
mov
add
mov
pop
in
ja
pushl
cmp
hlt
jg
pusha
cmp
adc
aaa
and
fs
push
leave
add
lods
push
inc
inc
mov
inc
mov
outsl
inc
outsb
add
inc
and
inc
mov
adc
outsl
add
mov
fistpll
mov
cmp
lods
add
push
mov
xor
ljmp
or
xor
push
mov
mov
lods
and
push
aas
aaa
fisttps
sahf
ja
fs
lods
je
scas
add
or
outsb
mov
out
push
jmp
sub
xchg
out
mov
fldcw
fildll
dec
testl
ret
fmul
out
sti
cmpsb
dec
add
mov
mov
aaa
mov
mov
in
sub
jl
js
rcrb
sub
jle
mov
push
ja
dec
out
shll
out
add
lds
sub
loop
out
ja
int3
push
fcomps
stc
fildll
fbld
jmp
outsl
and
dec
and
mov
fists
push
jbe
push
or
outsb
xchg
outsb
push
jnp
out
dec
ss
sbb
test
pop
xor
mov
cmp
push
mov
js
stos
or
es
idivb
mov
cmp
pop
fs
fbld
leave
mov
add
call
mov
pop
mov
repz
and
push
xlat
push
jg
dec
push
in
dec
cmp
push
scas
call
repnz
aaa
mov
mov
add
out
orl
ja
ja
popf
test
rclb
nop
sub
shrb
ret
xchg
out
mov
movsb
jbe
daa
aaa
or
out
es
ret
fs
lds
shl
mov
push
or
lock
cmpl
orb
scas
bound
nop
mov
pop
and
and
rcr
in
push
ret
add
ss
or
dec
push
stos
adc
cmp
pop
mov
push
ret
xchg
pushf
xchg
push
lds
adcb
pop
ret
add
mov
ret
notl
outsl
and
adc
mov
cmp
mov
cwtl
inc
pusha
scas
ret
jo
loopne
repz
clc
test
mov
xor
jbe
je
adcl
mov
aaa
outsb
in
addr16
jno
outsl
pusha
cmpsb
mov
add
les
add
lock
in
jle
pop
mov
movsb
pop
jg
mov
mov
insl
cmp
jg
add
lds
push
add
sbb
cmp
add
sub
lds
testl
lods
lods
scas
mov
imull
nop
js
aad
aaa
pop
mov
ja
pop
or
aaa
push
cmp
movsl
nop
imul
aaa
add
daa
subb
push
movsb
and
add
pushfw
xlat
addr16
popa
jo
lahf
iret
insb
fcoms
es
sub
xchg
sub
or
cmp
jbe
jnp
mov
push
fs
enter
fdivp
cmp
dec
sub
fadds
mov
mov
or
test
push
or
or
hlt
push
popf
mov
add
imul
outsl
add
or
xchg
bound
fbstp
test
add
inc
cmpsb
or
aad
aaa
enter
aam
leave
pop
dec
pop
scas
mov
outsl
cmp
add
lock
and
sub
dec
xor
push
mov
or
stos
or
mov
mov
cmp
mov
lret
dec
aas
mov
push
sbb
sbb
cmp
movsb
addr16
les
or
pop
push
dec
testl
nop
xlat
fmulp
add
adc
adc
inc
je
dec
inc
lock
push
pusha
aaa
je
adc
nop
nop
enter
mov
and
nop
lods
loopne
in
or
add
and
adc
dec
xchg
inc
mov
rcll
outsl
xchg
fisubl
xor
in
mov
jl
insb
sub
push
inc
xor
push
lods
pop
jns
cmpsl
fnstenv
insb
dec
jo
repz
out
sub
jl
out
lcall
jae
repz
xchg
mov
ja
iret
repz
into
hlt
pshufw
mov
add
repz
repz
xchg
sahf
out
jb
lods
clc
dec
jae
ds
repz
push
push
mov
lahf
out
mov
icebp
or
das
out
ds
repz
shl
pop
ja
push
jp
iret
repz
mov
xor
out
push
lcall
iret
repz
jns
cmpsl
dec
jae
icebp
cmpsl
stc
cmp
pop
jnp
loope
jl
iret
sarl
stos
or
sahf
out
cmp
stc
sbb
inc
push
fucom
jns
leave
push
jg
push
push
sarl
cld
inc
addb
lcall
sbbb
orl
add
jns
out
sub
sti
stc
cmp
repz
xchg
repz
add
adc
cmp
mov
idivl
jns
lock
xor
out
int
mov
repz
iret
repnz
push
mov
imul
outsb
stos
iret
repz
repnz
iret
repz
xchg
or
jns
jns
xchg
mov
pop
xchg
push
push
movsl
insb
ds
out
xchg
movsb
ja
push
xchg
iret
mov
adc
cmp
cmp
xor
push
push
cmpsl
fdivrs
cmpsl
stc
dec
lcall
dec
repz
fwait
adc
pushf
push
repz
out
mov
idivl
iret
in
sahf
arpl
dec
repz
fwait
mov
lcall
xchg
mov
jns
in
xor
jg
sahf
ja
repz
repz
jge
cmpsb
scas
push
lcall
dec
pop
xchg
leave
hlt
daa
test
fidivrs
jp
or
ds
ret
push
stos
xor
iret
shll
adc
lcall
mov
scas
jns
iret
shll
mov
cmp
repz
fnstcw
sub
xor
sarl
xchg
cli
and
mov
ds
push
mov
lcall
into
or
jns
add
sahf
cmpsl
stc
and
pusha
lods
call
iret
shrl
stc
jle
test
aam
mov
repz
out
adc
iret
repz
or
sbb
push
lcall
mov
daa
ss
out
pop
cmpsb
in
test
addr16
fwait
in
shrl
outsl
ror
mov
iret
into
int
jnp
test
and
xor
and
ret
rcr
inc
fsubl
imul
jg
loopne
loop
add
int
out
add
fdivr
add
int3
push
cmc
aas
xchg
int
sbb
sub
das
addr16
sub
adc
lods
nop
push
in
xchg
in
mov
pop
mov
add
mov
popf
push
mov
inc
xor
pop
rclb
sbbb
cmp
push
leave
sarb
aas
jg
push
push
aas
lahf
pushf
push
or
xchg
arpl
push
lahf
jg
xor
cltd
mov
pop
mov
cmpsl
fdiv
dec
pushf
cmpsb
pop
mov
pushf
dec
push
leave
mov
psrlq
testb
ficoml
mov
out
loop
in
outsl
jb
jecxz
in
or
repnz
sub
inc
hlt
adc
mov
sahf
mov
add
imul
aas
and
and
add
adc
cmp
dec
and
jmp
enter
fiadds
insl
add
or
jbe
add
jl
add
jnp
fisubrl
daa
pushf
push
adc
add
mov
movsb
lods
fldt
sbb
testl
lock
xor
or
adc
test
out
xlat
dec
sub
xlat
insb
lds
sti
mov
add
daa
cmovle
mov
add
push
push
adc
pop
jo
je
cmpsl
stos
fadds
nop
xchg
sbb
sub
fistl
aaa
loopne
jg
pop
add
pop
pusha
addr16
xor
popa
or
addr16
out
ja
or
addr16
dec
add
addr16
or
outsb
jmp
sub
inc
add
add
fsubr
shrl
fcomp
daa
clc
scas
pop
aam
insb
scas
cmpsb
sbb
scas
add
and
xchg
je
leave
fbld
xchg
sbb
cmp
fistps
pop
and
ja
dec
mov
jo
je
ficoml
push
pop
add
mov
leave
inc
xor
push
jbe
push
pop
sbb
or
leave
inc
fildl
filds
mov
push
mov
imul
and
mov
in
lds
shll
and
jle
fcoml
sub
faddl
and
pop
pop
in
xchg
and
pop
xor
jo
push
popf
fcompl
gs
call
push
sbb
sbb
push
ror
daa
inc
outsb
mov
xchg
push
xor
fstl
fnsave
or
or
xor
mov
inc
and
out
jmp
xchg
iret
add
iret
ja
in
and
fst
ffree
daa
loopne
nop
pushf
in
pusha
sub
sbb
leave
and
jae
jb
jnp
push
jle
mov
xchg
add
pop
cmpsb
lods
push
pusha
push
or
in
lock
es
faddp
movsb
shrl
in
popf
sub
in
clc
fistps
mov
xor
push
add
mov
popa
dec
jl
data16
leave
and
sub
in
mov
enter
iret
adc
dec
shl
sub
loopne
daa
cmp
loopne
pop
pop
jmp
repz
xchg
dec
dec
adc
bound
loopne
in
das
bound
bound
push
xchg
mov
pop
add
je
jb
jge
lea
inc
bound
leave
leave
in
mov
fsubrs
leave
leave
loopne
lock
in
mulb
sbb
fs
sub
add
inc
mov
mov
arpl
daa
cmp
outsb
jns
arpl
lcall
and
sbb
or
or
or
in
mov
notb
loop
fs
lea
rorb
sub
aas
add
shll
rclb
jge
mov
aas
adc
jecxz
jecxz
daa
inc
scas
xchg
mov
adc
jl
mov
movq
paddd
enter
or
adc
pop
add
sub
aaa
pop
inc
or
sbb
jmp
js
xchg
and
andb
pop
stos
add
adc
cmp
test
in
in
daa
dec
push
cwtl
jo
mov
add
lock
cltd
jle
xchg
dec
dec
in
in
daa
cmp
dec
dec
rorl
daa
pop
in
mov
dec
cmp
push
pop
addr16
jp
and
sbb
add
mov
mov
add
adc
xor
pop
pop
mov
icebp
or
out
aaa
in
daa
xor
jmp
jmp
addr16
movhps
in
and
xchg
cmp
in
mov
add
aas
addr16
inc
push
leave
add
push
movsb
xor
pop
outsl
scas
xchg
pushf
cmp
and
mov
mov
daa
mov
rorl
adc
inc
call
arpl
cmp
adc
push
daa
pop
call
shl
dec
xchg
inc
jo
leave
call
pushf
daa
enter
jb
push
adc
in
add
cmp
xchg
mov
hlt
cmp
popl
and
adc
cmpsl
jmp
fucomi
fs
test
imul
sub
xor
out
in
pop
mov
mov
mov
pop
ljmp
imul
lahf
ljmp
push
mov
add
pushf
mov
mov
movsb
les
dec
test
jmp
mov
daa
sbb
hlt
cmovl
jbe
addr16
fildll
enter
push
add
das
mov
xchg
imul
outsb
out
int3
jg
mov
test
in
add
mov
fsubp
cmp
lsl
pop
adc
jbe
pop
in
xor
jmp
xchg
sub
aad
in
fcmovnb
or
in
add
cmpsl
inc
inc
mov
scas
imul
mov
imul
add
mov
jb
add
xchg
inc
repnz
sub
aas
in
pushf
insb
std
or
fisubs
in
enter
leave
add
cld
jae
cmp
sbb
insb
push
push
inc
inc
loopne
push
mov
add
daa
insl
push
ja
psrld
das
repz
push
dec
pop
adc
out
insl
sub
into
cs
adc
ljmp
aaa
in
xchg
mov
cmp
cwtl
jo
inc
ret
and
dec
and
mov
out
enter
cs
dec
hlt
aaa
and
in
adc
lock
in
push
test
mov
mov
inc
jb
inc
in
sbb
loop
cs
icebp
or
adc
scas
leave
dec
movsl
pop
aas
mov
leave
and
dec
sti
nop
mov
cmova
xor
and
fnstsw
add
jo
push
or
inc
jg
cmp
inc
push
repnz
repnz
pop
mov
decl
repz
jno
or
add
cmp
or
loopne
xchg
outsb
daa
repnz
lock
jbe
push
jnp
adc
sub
push
push
jno
jno
stos
shlb
jno
jb
sti
daa
push
mov
add
cmp
mov
in
in
pop
repz
jb
lds
add
pop
rolb
hlt
push
add
xor
ds
fs
sub
pcmpeqb
repnz
push
add
and
sbb
add
addl
cmpsb
mov
adc
hlt
shlb
xchg
subl
xor
jae
mov
negl
and
ja
inc
ret
pop
add
mov
inc
xlat
jbe
pusha
daa
daa
fists
mov
fistpll
jbe
push
leave
cmc
rolb
push
notb
ljmp
pop
fnstcw
sub
push
xor
xor
sbb
inc
das
dec
add
dec
ja
iret
or
leave
cltd
je
testb
pushf
mov
retw
lods
xchg
sbb
ud0
sub
or
xchg
pop
and
addb
in
pop
and
sbb
orl
imul
sub
sbb
inc
ss
and
sub
add
in
sbbl
mov
add
test
mov
push
adc
fsubrl
fimull
in
addr16
cwtl
push
fbstp
xchg
daa
and
add
ss
and
cmpsl
push
pop
leave
jae
insl
cmpsb
imul
in
add
ljmp
iret
cmp
jns
jg
pop
in
lock
add
and
adc
sbb
ja
add
xor
js
cs
dec
push
or
pop
imul
je
adc
sahf
xor
pop
dec
aaa
cmp
aam
or
push
mov
mov
pop
outsb
das
jns
rdpmc
cmovns
jns
push
pop
add
data16
xchg
jl
imulb
stos
mov
mov
inc
into
sahf
mov
add
dec
fiaddl
or
mov
push
adc
jp
idiv
in
and
jp
cld
pop
iret
jno
sub
imul
or
pushf
add
test
cld
mov
jp
adc
jle
enter
std
cmp
adc
daa
sub
scas
pop
stos
xor
es
xchg
dec
std
std
jnp
je
incl
jnp
add
sahf
jnp
mov
les
test
fisttpl
sbb
mov
add
lgs
jnp
jnp
dec
cmp
xchg
dec
faddp
enter
push
or
inc
mov
sbb
or
mov
jl
mov
jb
push
push
insb
lret
or
cltd
jg
mov
mov
mov
lret
rolb
dec
loop
jl
jmp
movb
pop
jge
jo
mov
in
cmp
push
add
outsl
jge
inc
mov
test
popl
lcall
add
or
dec
pop
out
in
movsb
out
idiv
xchg
sbb
jle
or
jle
pop
aaa
dec
jle
sbb
jb
jle
jle
jle
jle
cmp
lahf
cmpsl
addr16
mov
movsl
add
push
aam
xchg
addb
in
or
push
sbb
jb
push
das
pop
cmp
sbb
or
ss
push
jg
outsl
xor
pop
aas
jg
into
add
rorb
fidivl
sub
and
pop
jg
add
dec
mov
adc
adc
pushl
mov
leave
dec
push
fsubr
in
mov
add
iret
pushf
add
lods
iret
add
loopne
xlat
push
pop
mov
add
testl
dec
inc
fiadds
pop
pop
or
daa
or
xchg
daa
and
aaa
or
or
inc
push
dec
push
adc
mov
adc
ja
adc
jg
xchg
xchg
sbb
data16
dec
mov
int3
jo
mov
cmpsl
aam
filds
add
adc
cmp
adcb
jbe
sub
enter
enter
mov
add
push
popf
pop
and
lock
leave
xchg
adc
add
adcl
roll
push
pop
adc
xorl
inc
xor
int3
out
add
xlat
jbe
push
or
in
loop
test
xlat
test
mov
adc
test
cmp
inc
mov
daa
daa
dec
push
dec
or
pop
xor
enter
or
adc
ss
cmpsl
test
dec
addb
fs
daa
and
jno
mov
daa
jbe
inc
aas
addr16
insl
add
pop
or
loopne
mov
into
push
lock
adc
dec
xchg
dec
pop
adc
dec
add
movb
and
push
shll
insl
test
fadds
adc
andb
lahf
add
mov
add
add
loope
cmp
fwait
cmp
ljmp
daa
orl
sbb
pop
push
and
btrl
cmp
clc
scas
testl
decl
fucomi
add
incl
mov
insb
nop
addl
mov
cltd
ljmp
jns
dec
jmp
shl
in
frstor
sbb
int3
ficompl
add
clc
xchg
enter
push
xor
inc
or
or
insb
pop
or
test
xchg
xchg
add
xchg
and
add
add
jb
xchg
or
and
dec
pop
or
lahf
daa
xchg
imul
cmp
push
or
fs
pushf
fbstp
mov
and
mov
repz
xchg
dec
add
fimuls
out
jl
sbb
xchg
or
out
daa
daa
daa
mov
cmovle
ss
xor
cs
or
jmp
xorl
fimull
addr16
pextrw
jno
inc
sahf
int
aad
or
mov
mov
cmp
decl
dec
fisubl
imul
and
lcall
xchg
pushf
xchg
iret
or
adc
ret
mov
jg
inc
push
or
outsb
daa
and
add
and
and
out
fmuls
push
cmpsl
rorb
or
or
or
mov
mov
cmpsb
pop
sbb
xchg
add
nopl
push
push
push
xor
bound
outsb
daa
fs
xchg
cmp
aaa
push
lods
push
pushf
mov
mov
mov
adcb
pop
fisttps
loop
loopne
pop
add
sub
push
movaps
xchg
xchg
daa
in
out
push
cmp
dec
xor
je
push
addps
or
inc
rorl
jnp
int3
lahf
dec
shll
sahf
mov
mov
lret
cmpsl
xchg
adc
dec
push
clc
mov
icebp
sti
inc
adc
cmp
cmp
cmp
das
je
and
mov
mov
xlat
adc
xchg
scas
mov
mov
adc
adc
in
out
sbb
lea
cs
fs
insb
add
test
xchg
mov
jb
inc
jb
or
xor
xchg
movb
and
add
cmp
inc
xor
cmpsl
push
pusha
xchg
and
xchg
pop
and
lret
shlb
das
fiaddl
loop
cmp
push
aaa
leave
enter
aas
add
inc
fildl
fimull
adc
popf
adcb
adc
decl
in
xchg
daa
loope
in
add
add
repnz
add
nop
add
or
sbb
das
and
ucomiss
pop
pushf
mov
push
inc
cmovg
dec
inc
sbb
call
pxor
lea
xchg
popf
add
inc
dec
add
lods
mov
lcall
int
and
fbld
adc
xchg
leave
enter
or
add
jbe
dec
xlat
cmp
xchg
jnp
bnd
orb
sahf
mov
add
mov
lret
inc
rol
pop
lret
xchg
xchg
or
out
divl
sbb
call
add
cmp
mov
xchg
fisubrl
aas
push
insb
fildll
fisttpll
add
add
repnz
pop
pop
xchg
or
into
dec
xchg
and
or
xchg
jg
pop
adc
fidivrl
pop
push
xchg
sahf
dec
cs
scas
pop
mov
or
or
xlat
or
adc
dec
loope,pn
sub
sbb
sbb
je
outsl
xchg
das
push
aas
and
sub
push
jbe
xchg
mov
dec
push
shufps
negb
pop
outsl
cmpsl
ja
or
cmpsb
lcall
mov
add
jmp
push
add
lds
scas
iret
cwtl
sbb
mov
lahf
sahf
mov
push
sub
add
inc
add
dec
push
mov
xchg
xor
pop
jle
add
xchg
xchg
lret
xchg
sahf
add
cs
roll
in
and
fdiv
cld
push
add
or
sbb
xchg
xchg
mov
xchg
das
push
aaa
aas
inc
sub
or
xchg
dec
add
dec
jb
jb
mov
in
mov
vshufps
daa
daa
daa
aad
in
dec
and
xchg
in
or
movsl
bnd
xchg
addr16
sbb
jns
mov
sbb
inc
xor
cmp
add
xchg
fcmovne
inc
jbe
jbe
mov
cmp
adc
xchg
cmp
leave
out
in
inc
cwtl
movhps
fistps
imul
bnd
dec
pop
dec
add
push
pop
add
and
bound
push
int
popf
in
jb
rcl
jbe
outsb
daa
mov
sub
and
mov
call
mov
aaa
sbb
push
fisttps
das
aaa
rcrb
push
cmpsl
push
movsb
leave
inc
xor
pop
cltd
addr16
mov
xchg
dec
pushf
pushf
lahf
test
outsb
xchg
add
mov
lcall
lcall
rolb
fstpl
inc
push
movsb
add
lcall
stos
add
sbb
ret
shr
dec
fisubl
call
xor
dec
pop
pmulhuw
jbe
fwait
sub
cmovle
cmp
jb
add
outsl
add
cmp
cmp
pop
nop
fwait
or
sahf
mov
push
lret
daa
and
fsub
adc
std
jb
enter
or
sbb
cmp
pop
xor
pop
nop
pop
fcomps
and
unpckhps
leave
mov
data16
rolb
jg
outsb
fisubrl
iret
push
into
pop
xchg
cs
xchg
add
stc
inc
inc
pop
cmp
popf
add
and
daa
mov
sub
sub
popf
xor
xor
inc
inc
push
and
sbb
pop
push
or
dec
outsw
daa
insb
pcmpeqb
lea
and
and
sbb
repz
stc
jge
incb
setle
adc
or
add
mov
in
cwtl
lock
push
and
and
fidivrl
inc
xor
sahf
bound
push
push
jge
push
dec
pop
lahf
push
jnp
inc
mov
mov
xchg
or
out
outsl
mov
sbb
sahf
imull
add
push
loope
xchg
insl
jns
sahf
push
icebp
add
add
xor
lahf
or
push
pop
aas
lahf
in
in
fs
cmp
lahf
inc
dec
mov
leave
enter
pop
data16
insb
jmp
mov
loopne
dec
xchg
jg
add
lretw
rorl
daa
daa
mov
fistpl
jecxz
jmp
sti
mov
and
dec
xor
in
mov
mov
dec
push
mulps
test
and
shld
scas
push
mov
fs
xchg
pop
pushf
add
movsb
call
mov
or
out
xlat
and
inc
mov
loop
in
fbld
frstor
jns
in
lahf
and
cmp
push
outsb
daa
lods
aas
mov
and
fistpll
xor
mov
in
or
es
mov
inc
inc
mov
leave
mov
mov
mov
into
ftst
add
das
inc
mov
add
add
adc
sbb
or
or
cmp
cmp
or
in
xchg
and
jae
jle
mov
sub
adc
push
lahf
adc
stos
push
mov
rcrb
sbb
leave
xchg
and
sbb
sbb
leave
leave
leave
leave
pop
push
adc
leave
adc
adc
test
leave
leave
femms
or
pop
sub
test
adc
nop
sbb
sbb
pop
loope,pn
ja
sub
add
jb
sahf
jmp
adc
jb
frstor
push
mull
push
in
pop
mull
add
movd
mov
inc
repnz
sub
push
sub
daa
pop
lahf
mov
pop
scas
mov
sarl
sub
dec
ljmp
mov
movsb
adc
repnz
std
push
pop
add
sbb
popa
add
jno
jns
dec
adcl
or
lods
leave
inc
repnz
xlat
data16
dec
adc
leave
xlat
fbld
into
movsl
sub
xchg
xchg
dec
sbb
add
mov
sub
and
xchg
addb
movsl
pushf
int3
sahf
pushf
lods
mov
xchg
mov
test
fs
shr
pop
clc
movntps
cmpsb
aas
cmpsb
mov
rcrb
sub
aas
sub
outsl
fsts
pop
data16
in
leave
enter
jle
pop
xchg
in
in
mov
sahf
or
scas
or
out
cmpsb
ret
sub
movb
sub
leave
lret
xchg
xchg
jmp
add
add
cmp
xlat
cmpsl
and
cmp
in
das
cmp
cmovne
add
pop
xchg
and
mov
or
inc
fldcw
xlat
push
sahf
add
mov
add
xchg
daa
and
pop
into
or
and
testl
fsubrs
stc
pop
add
cs
cs
add
sub
enter
add
sbb
leave
dec
jnp
test
push
xor
cmpsb
loope
in
add
in
and
xorb
loopne
inc
int3
ja
xor
rorb
fadds
loopne
pop
inc
push
lahf
das
das
test
jnp
add
out
in
xchg
xchg
ss
aas
mov
daa
mov
pop
cmpl
pushf
movsb
mov
xor
das
out
iret
mov
xchg
pushf
dec
addr16
and
stos
sbb
sub
pop
aas
pop
punpcklbw
insl
mov
xchg
in
imulb
add
mov
mov
xchg
add
push
stos
fwait
nopl
cmp
pop
add
scas
cli
dec
xor
pop
lahf
or
xor
dec
movl
mov
leave
leave
dec
mov
xor
fs
xor
stos
xchg
out
jmp
push
and
jb
enter
add
add
jns
dec
dec
add
or
cmp
push
pop
or
mov
inc
pop
outsb
pcmpeqd
test
pushf
pop
and
mov
in
xor
int3
adc
leave
mov
pop
lods
xchg
mov
and
mov
lods
pop
pop
push
add
jb
jnp
lahf
push
ja
jg
jb
xor
xchg
jb
stos
mov
mov
vpmovmskb
adc
xchg
mov
lods
cli
lods
add
orl
fisttpll
daa
lods
sub
inc
push
xor
loopne
lods
push
jnp
scas
jne
push
addb
cmp
mov
add
inc
sahf
mov
or
daa
and
or
fdivs
test
scas
or
sbb
pushl
sbb
ficomps
ss
add
mov
push
jb
lock
sbb
cmp
outsl
scas
imul
add
jl
popf
nop
invd
das
add
fdivl
aas
xlat
pop
sbb
dec
xor
divb
xchg
or
btc
andb
push
cmp
sbb
mov
mov
cmpsl
les
cmovg
mov
add
pop
mov
mov
ja
xchg
pop
mov
ja
leave
dec
in
addr16
xchg
xchg
adc
pop
add
jns
sbb
inc
add
aaa
mov
in
imulb
mov
lahf
jp
cmpb
in
mov
setb
add
pushf
sbb
add
mov
mov
and
or
ret
enter
pop
adc
lds
mov
pop
addr16
stos
dec
cmp
inc
inc
fidivs
push
add
xchg
xchg
and
push
popa
pusha
in
enter
jns
cmpl
cmp
mov
outsb
mov
cs
lods
lfs
mov
pop
mov
unpcklps
mov
fidivrs
and
or
int3
jnp
pop
push
mov
sahf
mov
in
adc
adc
and
mov
adc
push
in
in
cmp
inc
dec
push
sbb
repnz
sbb
insb
mov
jl
and
and
xchg
pushf
dec
movsb
mov
sub
sub
les
int3
sub
sub
fsubrl
in
in
hlt
je
push
xor
pop
movl
push
pop
ljmp
cmp
mov
dec
incl
and
cmp
subps
add
push
dec
add
pushf
mov
xor
jbe
jne
test
xchg
in
ror
rorl
dec
ror
in
cmp
xchg
cmp
mov
ja
mov
sbb
add
add
sub
pop
ss
outsb
mov
inc
dec
das
push
dec
pop
punpckldq
outsl
push
cwtl
push
adc
jb
test
mov
mov
and
rclb
cmp
in
negb
sbb
and
sbb
sbb
sbb
in
xchg
pop
inc
and
pop
and
sbb
bound
outsl
and
and
xchg
and
sub
jbe
jb
sub
fcmovnbe
jg
lahf
jmp
and
sahf
pushl
and
sbb
in
xchg
push
and
sub
xor
inc
mov
cmp
inc
sbb
push
in
xchg
and
adc
adc
test
and
inc
js
in
dec
mov
mov
stc
jb
sti
testl
mov
add
or
adc
push
or
jb
enter
or
push
or
mov
pop
or
jp
in
xchg
and
mov
jb
adc
adc
enter
int
xlat
sbb
sbb
jb
out
sbb
sbb
add
and
sbb
sub
xor
das
inc
dec
dec
outsl
pop
pusha
sbb
inc
mov
imul
sbb
xchg
in
xchg
and
adc
cltd
sub
adc
cmp
les
int3
paddq
fmull
in
in
or
or
jb
lret
cld
or
sbb
sbb
add
cmp
insb
daa
and
das
xchg
lret
push
mov
cwtl
fsubrl
mov
xchg
fcmovnb
pop
add
push
push
popf
add
movsl
lods
pop
pop
mov
mov
mov
enter
int
aad
fisttpll
popf
mov
in
in
adc
std
fmull
sahf
add
pop
dec
inc
sahf
pushf
daa
xor
cmp
leave
lret
sbb
sbb
addr16
sbb
inc
mov
push
xchg
add
mov
and
rorl
dec
outsb
pand
jmp
daa
daa
inc
dec
sti
mov
xchg
xchg
mov
das
push
adc
xor
pop
outsb
daa
mov
aas
inc
cmovg
pop
dec
dec
dec
dec
outsl
ja
xchg
and
xchg
ret
enter
and
fstl
mov
repnz
out
out
idiv
mov
push
pop
push
pop
and
mov
or
add
dec
inc
inc
dec
push
pop
push
pop
mov
pusha
adc
push
in
cmp
xchg
fsts
mov
add
cmp
enter
add
add
mov
pop
ljmp
cltd
cmp
and
pop
and
cmp
push
cmp
inc
adc
mov
xchg
adc
jne
fisubrs
fwait
pop
mov
mov
and
rcrb
fucom
in
enter
pop
mov
jns
adc
pop
sub
xor
inc
and
dec
dec
outsb
daa
insb
emms
orb
mov
mov
push
xor
cmp
inc
mov
adc
sbb
add
sub
or
cmp
or
pop
addr16
jb
jb
outsl
ja
xchg
jns
jb
xchg
lahf
adc
scas
pop
mov
mov
dec
push
iret
adc
xlat
sbb
cmp
fistps
sbb
and
inc
adc
adc
leave
leave
jecxz
sub
ds
leave
leave
leave
inc
dec
push
pop
dec
xchg
mov
cmp
data16
push
add
cmp
cmpsl
cmp
add
jb
xor
jecxz
fbstp
or
rorl
push
fs
enter
das
or
in
inc
pop
push
jg
pop
punpckhbw
jb
in
leave
jae
adc
mov
jbe
mov
mov
inc
mov
sbb
sbb
daa
and
iret
and
into
into
outsb
mov
pop
bnd
lahf
ret
or
ret
adc
fmull
psrlw
sub
sub
fsts
sub
or
enter
das
sub
xor
and
sbb
xor
push
xor
jb
enter
ss
cmpl
lea
ret
push
cmp
cmp
ret
aas
cmp
and
dec
cmp
aas
enter
insl
js
jae
jb
cltd
inc
movsb
inc
mov
mov
lret
das
dec
loope
paddsb
loope
add
testl
imul
faddl
ja
shlb
mov
mov
push
xor
fs
cmp
inc
outsl
push
dec
add
add
arpl
outsb
pop
jns
or
dec
inc
into
setno
pushf
test
xchg
and
push
into
pand
xor
jb
call
add
cmp
fstps
scas
push
sbb
cltd
cmp
dec
cvtps2pd
jbe
repnz
jb
jg
bswap
in
notb
xchg
mov
cmpsl
es
test
add
push
lidtl
push
add
push
dec
dec
jbe
dec
sbb
cmp
add
pop
add
add
jne
pop
mov
xchg
and
sahf
mov
xchg
and
mov
dec
int
fmuls
enter
in
psubq
movl
fistl
pop
adc
pushf
cmp
cmp
sbb
sbb
inc
sahf
pushf
clc
mov
xchg
and
and
daa
dec
inc
mov
loop
cwtl
nop
and
bswap
add
daa
sbb
and
dec
or
push
mov
dec
enter
add
enter
addl
mov
leave
fwait
mov
lahf
mov
dec
mov
xor
fsubrp
add
repz
iretw
dec
int3
iret
leave
pop
leave
adc
pop
pop
and
dec
sub
push
or
insl
leave
enter
or
or
in
mov
pop
cltd
adc
cmp
mov
aas
rclb
fldenv
and
pop
call
fists
lret
sbb
and
cs
cmp
inc
mov
and
imul
and
iret
mov
out
lret
pop
xorl
sbb
dec
scas
fisttpl
cwtl
push
sub
cmp
test
mov
call
xor
lret
or
unpcklps
inc
mov
inc
or
in
xchg
and
or
jne
jb
or
sbb
mov
push
stos
adc
int3
sahf
mov
fistl
mov
outsl
cld
bswap
pop
sbb
pop
in
mov
xor
push
dec
dec
pop
cmp
lret
push
js
inc
and
das
int3
cltd
dec
daa
inc
mov
push
test
daa
mov
and
shll
psubusw
loope
aas
test
call
int
push
unpcklps
adc
in
idivb
cmp
sbb
pop
push
push
and
js
andb
jg
cmpsl
xchg
xchg
and
int
int
jbe
xchg
mov
fcomip
enter
int
int
add
setno
filds
push
push
or
or
leave
fsts
inc
or
sbb
jb
dec
addps
arpl
outsb
mov
adc
in
in
jbe
jg
lahf
lcall
cmp
sbb
inc
sahf
int3
sahf
ficomps
pop
jmp
stc
jae
bswap
or
adc
outsb
and
es
inc
cmovl
mov
cmpsb
sub
push
cmp
sbb
das
idivb
push
mov
notl
daa
int3
inc
mov
lcall
out
iret
mov
lret
cs
push
xchg
jno
cmpsl
push
add
cmp
int
sub
sub
push
add
add
cmp
or
adc
imul
or
jbe
ds
push
mov
in
fcmovnb
pop
rcll
fcoml
out
stc
jb
repnz
push
pop
pusha
sbb
imul
mov
dec
inc
into
das
xchg
sbb
push
cltd
cmp
das
icebp
rclb
and
push
inc
sahf
mov
es
daa
mov
xchg
and
pusha
pusha
aas
pusha
xchg
xchg
and
sub
flds
xchg
xchg
aas
in
leave
enter
das
mov
pop
testb
lock
or
rdmsr
jnp
jb
or
sub
sbb
aas
dec
scas
inc
push
pusha
xor
xor
in
jnp
femms
cmp
in
in
fs
pop
das
addr16
xchg
xchg
mov
jg
mov
xchg
or
stos
or
ret
das
into
psubusw
xchg
xchg
mov
pop
in
out
cli
adc
aam
leave
enter
adc
in
fs
sbb
dec
orps
leave
enter
outsb
jns
test
fisttpl
and
jbe
in
lcall
mov
rcl
or
mov
repnz
sub
inc
sahf
int3
sahf
lcall
das
daa
mov
and
shll
pop
fsub
xchg
fsts
xor
outsb
mov
das
arpl
outsb
jns
fldt
dec
dec
std
iret
or
push
leave
dec
adc
into
sahf
sub
add
xchg
sbb
jb
popl
dec
pop
push
sbb
pop
or
mov
das
setg
dec
mov
sub
mov
or
jnp
dec
or
pop
mov
jmp
negl
or
sbb
mov
add
nop
mov
lods
adc
xchg
jne
shr
mov
add
adc
or
dec
nop
arpl
push
xorb
xchg
xorb
push
add
jp
pop
stos
inc
adc
dec
xchg
inc
jae
inc
movsl
scas
pop
inc
outsb
dec
jo
rcrb
mov
movl
outsb
xor
out
sahf
out
push
or
or
mov
xchg
or
or
or
jge
push
ja
add
scas
adc
cmp
das
and
jb
inc
push
addr16
das
fsubrl
fistl
push
mov
insl
daa
iret
repz
and
jb
outsb
mov
outsb
pop
andb
cmpb
jns
or
pop
xchg
sub
mov
xor
mov
xlat
sbb
data16
sbb
xchg
nop
mov
mov
adc
adc
xchg
adcb
jmp
add
add
xchg
add
sbb
jmp
scas
adc
mov
pop
stos
nop
sbb
test
faddl
add
movsb
add
fsts
jns
and
cli
mov
loopne
inc
jle
test
shll
mov
inc
mov
pushl
add
mov
sbb
in
mov
mov
push
add
notb
add
fidivl
rcr
fsubp
stc
jb
xor
mov
xchg
jl
js
jo
cmp
repz
fs
push
dec
repz
repz
xor
and
repz
sbb
or
add
cmp
cmp
hlt
lock
cmp
call
repz
sahf
out
sahf
mov
mov
out
test
repz
mov
repz
cmp
sub
sbb
cmp
sti
mov
cld
push
in
fadd
mov
repz
mov
js
sahf
out
jo
push
jns
out
inc
xor
out
ficoms
in
fmul
dec
leave
jp
mov
jo
ja
icebp
jl
push
mov
popa
test
xor
push
xcrypt-ecb
cmpsl
jo
mov
or
rolb
add
sub
divb
incl
dec
sbb
aas
sbb
jbe
mov
ss
adc
lretw
jae
xorb
inc
in
f2xm1
icebp
call
push
mov
mov
inc
push
mov
inc
fdivs
rolb
push
dec
andl
shll
add
adc
add
adc
add
add
add
jg
testb
test
pop
das
insl
add
fldt
iret
or
pop
inc
xchg
pop
and
jae
cs
push
enter
lds
in
sub
jo
xlat
add
add
out
call
testb
adc
add
add
inc
sbb
repnz
and
into
mov
paddq
aas
xor
movaps
das
mov
mov
xchg
and
or
adc
jb
in
enter
adc
adc
or
inc
mov
pop
pop
clc
and
and
and
enter
and
pushf
pop
orl
shll
subl
and
outsb
ret
adc
xor
xchg
cmp
cs
outsl
in
xchg
incl
xorl
fistl
sahf
out
pop
cmp
pop
js
mov
idivb
jns
adc
xor
dec
insl
add
cmp
fwait
cmp
pop
ja
mov
jnp
iret
shl
jae
das
push
dec
insb
mov
add
ds
mov
stc
nop
cli
or
or
ret
jae
hlt
adc
ljmp
jg
mov
leave
sbb
into
sbb
rorl
and
push
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
ljmp
mov
popl
cmp
cmpsb
iret
decl
js
inc
outsl
loopne
decl
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
incl
out
jecxz
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
decl
xchg
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
jmp
mov
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
jmp
std
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
ljmp
int3
jg
lahf
add
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
call
sub
sbb
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
incl
mov
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
dec
cld
inc
mov
aas
xchg
les
jne
int
mov
addr16
dec
lods
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
pushl
pop
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
aas
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
inc
xor
lods
cmp
mov
cmp
std
xlat
cmp
mov
sbb
lcall
inc
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ljmp
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
jg
lcall
dec
dec
gs
std
orl
pop
ficomps
frstor
and
mov
add
insl
mov
lods
mov
push
add
and
inc
je
inc
inc
push
dec
inc
test
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
insl
cmp
jg
ljmp
mov
pop
push
inc
dec
stos
insl
jbe
inc
jo
inc
popa
push
outsb
jbe
imul
push
sub
outsl
mov
aas
dec
insb
imul
dec
push
mov
or
and
sub
jno
pop
jnp
popa
push
dec
push
cmpb
loopne
dec
push
nop
push
addb
jo
jb
push
inc
sub
inc
test
inc
shrb
jb
gs
pop
inc
adc
and
push
inc
arpl
add
test
mov
sub
mov
bound
outsl
push
dec
pop
mov
or
xchg
xchg
add
xorb
dec
sub
xchg
or
sub
mov
push
fs
mov
aas
or
addb
xor
xor
daa
dec
jae
mov
inc
jne
push
and
inc
inc
inc
jg
lds
loopne
lahf
push
lods
pop
addl
push
push
cmp
mov
push
mov
je
dec
adc
les
inc
push
and
fimull
in
inc
clc
adc
rcl
sbb
out
dec
push
dec
dec
mov
das
adc
dec
bound
jbe
mov
bound
test
cltd
push
mov
bound
add
int
cmpsb
dec
pop
add
xchg
iret
sub
inc
jmp
outsb
arpl
outsl
pop
mov
add
pop
xlat
xor
sbb
and
lret
push
pop
mov
cmp
mov
push
pop
mov
or
mov
sub
mov
imul
add
sbb
and
pop
push
push
imul
jo
pop
outsl
push
jb
pop
sub
lds
and
das
rolb
push
xlat
push
push
in
and
jp
lock
push
stos
adc
gs
mov
inc
pusha
push
repnz
mov
push
movsl
pop
mov
inc
arpl
push
push
inc
jno
stos
cmpsl
pusha
out
sub
sbb
mov
lds
xchg
insb
and
pop
xchg
add
mov
inc
mov
data16
or
cltd
insb
and
outsl
ja
andb
insb
and
xchg
das
ja
andb
arpl
jne
ret
pop
les
adc
push
adcl
orl
pop
push
dec
std
cmpsl
push
add
push
pop
sub
aad
push
inc
inc
dec
movsb
mov
lods
or
inc
and
mov
nop
jg
mov
or
sub
cmp
lahf
movsb
and
mov
push
push
pushf
and
cmpsl
insl
push
or
sbb
hlt
push
dec
dec
stos
fdivl
push
inc
js
xchg
jae
inc
push
cmpsl
insl
arpl
mov
jbe
xchg
insl
imul
or
push
jne
les
outsl
add
add
mov
pop
insb
insb
scas
dec
outsl
addr16
sbb
cmpsb
iret
mov
push
inc
iret
pop
les
test
sbb
sbb
xlat
push
pusha
adc
dec
jg
xchg
push
push
pusha
dec
xor
xchg
clc
out
sahf
out
enter
shlb
adc
cld
mov
loop
dec
gs
push
pop
add
push
out
push
and
call
xor
ja
popa
push
out
mov
les
hlt
push
xor
jmp
xor
fdivrl
jmp
rclb
mov
sub
jmp
xchg
sbb
mov
repnz
repz
test
ficompl
jmp
mov
push
movl
imul
std
in
leave
mov
add
insb
push
arpl
ud0
cli
cmc
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
shrb
or
insb
cwtl
mov
leave
mov
lods
jecxz
fdivs
jne
filds
or
fcompl
shrl
cmp
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
iret
shld
sub
mov
fbld
or
adc
stos
sbb
data16
inc
fdivl
jno
add
lcall
mov
mov
movsl
in
lahf
xor
dec
jmp
pop
mov
stc
lods
test
call
mov
cmp
fs
add
hlt
push
imul
insb
sbb
xor
incl
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
decl
fistps
ficoml
gs
aam
pop
popa
mov
into
pop
pushl
add
inc
movsl
fisttps
xchg
fadd
shll
jmp
cld
fldcw
inc
mov
sarb
add
in
add
pop
dec
or
cmp
add
ljmp
adc
mov
and
test
or
mov
popa
into
push
stc
ficomps
lcall
cwtl
shlb
pop
cmp
mov
cmp
lods
insb
mov
in
pushl
loop
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
incl
insl
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
call
mov
add
inc
push
imul
xorb
sbb
push
imul
mov
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
jmp
mov
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
decl
sub
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
mov
mov
outsl
and
xchg
ja
int3
add
mov
das
es
push
mov
or
sub
mov
cmpsl
call
ret
shlb
sbb
lcall
ret
es
pushf
mov
insl
add
ss
jmp
addr16
jb
push
lcall
xchg
adc
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
ja
lcall
inc
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
mov
scas
clc
sar
imul
push
js
or
push
addl
mov
cmp
jmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
cld
call
mov
fidivrs
mov
jmp
repnz
lret
mov
cmpsb
mov
sahf
sarb
sub
push
mov
jp
nop
pushl
add
push
sub
mov
or
sbb
mov
mov
sub
scas
cs
dec
pop
mov
mov
ds
fdiv
adc
inc
jne
std
movsl
inc
add
imul
mov
xchg
xlat
lahf
pop
inc
jbe
adc
jns
arpl
arpl
ja
push
in
mov
push
inc
insl
jns
shl
pop
inc
jne
outsl
insl
addr16
dec
mov
xchg
fildl
movsl
or
xlat
aaa
adc
aaa
adc
mov
dec
inc
js
inc
insl
bound
inc
or
push
mov
jo
add
js
mov
dec
orl
jno
notb
pop
inc
cmp
pop
bound
xor
aaa
idiv
cmp
popa
arpl
cmp
arpl
or
xor
shl
bound
popa
shlb
push
inc
jbe
pop
sbb
pop
inc
mov
push
dec
inc
loope
cmp
or
or
sub
sub
fbld
mov
inc
mov
push
into
push
cmpsb
lcall
jne
push
inc
aas
sbb
xor
jle
inc
sbb
and
inc
push
sub
or
getsec
adc
adc
insb
popa
jns
push
mov
mov
popa
xchg
add
aaa
je
aaa
lcall
in
and
cmp
aas
add
insl
or
and
jae
movsb
mov
fidivl
push
xor
inc
aaa
inc
movl
sbb
inc
pop
testl
jo
inc
inc
add
push
ds
push
scas
add
cli
mov
int
push
dec
dec
dec
jo
cmp
rclb
fs
outsb
jne
pop
insl
dec
and
push
xchg
jge
xor
cmp
adc
arpl
add
mov
xor
addr16
push
jns
pop
jo
or
push
inc
imul
aas
std
or
cltd
dec
loopne
push
jbe
je
stc
pusha
add
mov
subb
test
lahf
inc
mov
or
sub
push
pop
xlat
arpl
add
mov
daa
inc
jb
xchg
xor
or
lock
popa
jo
lahf
sbb
outsl
test
mov
jbe
push
jno
jno
push
pop
in
push
dec
xor
pusha
in
nop
test
pop
cmp
xor
arpl
int
adc
cmp
mov
jo
push
xchg
pop
inc
test
insb
jns
das
insl
pop
or
popa
jb
and
aad
fiaddl
nop
adc
insb
adcb
or
iret
loope
add
push
bound
pop
push
shll
arpl
addr16
insl
pop
pop
divl
push
add
dec
inc
sbb
popf
xor
add
mov
test
icebp
addb
add
and
or
pop
adcb
sbb
punpckhwd
cmpsb
jbe
loop
hlt
push
testb
and
push
or
sub
aas
or
outsb
push
cmc
jg
cmc
push
sbb
aaa
pop
aam
gs
fdiv
aaa
push
loop
aaa
pop
add
add
cwtl
inc
add
les
push
add
aas
pop
inc
stos
mov
add
adcb
or
out
insl
add
mov
dec
pop
nop
inc
push
nop
js
push
sbb
mov
or
outsl
ss
pop
mov
int
mov
jle
fadds
and
popa
insl
add
pop
add
outsb
outsl
je
or
imul
jl
inc
dec
jg
inc
jmp
cs
cmpsb
dec
shrd
xchg
sub
pop
lea
jl
lret
mov
out
ud0
jmp
repnz
addr16
in
push
pusha
ljmp
lret
cli
add
jle
push
cld
push
imul
mov
aaa
shll
mov
daa
in
imul
insb
daa
aam
sub
adc
adc
add
sti
xchg
int3
dec
orl
mov
jns
inc
sbb
add
pop
or
fcmovbe
and
rorb
add
subb
or
adc
adc
es
push
pusha
push
add
pop
add
pop
or
or
mov
shll
and
lods
add
or
xor
jb,pn
mulb
inc
jge
jns
inc
dec
lret
fildl
fs
dec
or
push
out
ss
sahf
jae
arpl
xlat
dec
leave
cmpsl
or
sahf
add
jb
sahf
testl
sbb
inc
aaa
xor
das
addb
jno
push
mov
data16
jmp
jecxz
and
add
clc
pop
sahf
mov
lea
dec
scas
ljmp
or
orb
dec
mov
jp
cmp
sub
xchg
mov
or
or
jle
cmp
sub
test
xor
mov
std
jnp
jno
int3
fucomi
gs
add
sti
mov
mov
ja
jne
jmp
mov
sar
ja
mov
xchg
orb
lea
pop
call
inc
pop
push
cmc
add
and
fmuls
int3
loope
mov
jnp
xchg
dec
sub
outsb
ffree
xchg
icebp
out
hlt
mov
or
adc
pop
mov
adc
or
add
mov
movsb
or
lret
mov
mov
add
add
cmp
push
xorps
sbb
ss
imul
push
movzbl
or
rcll
sbbb
insl
dec
pop
fcmovnb
adc
mov
negb
cmp
cs
loope
sub
fstl
xor
pop
insb
inc
or
push
or
negl
sahf
xchg
nop
push
sub
adc
sub
adcb
loopne
scas
daa
push
std
or
call
in
stos
sub
pop
xor
add
inc
push
sbbl
or
pop
and
mov
xchg
notb
add
aam
es
jne
push
inc
imul
add
insl
jmp
mov
or
and
sbb
outsb
fcoms
inc
dec
and
arpl
fs
lock
cmpsl
movsl
sbb
inc
adc
inc
sub
add
loopne
rolb
pop
mov
or
cld
mov
add
mov
roll
inc
add
imulb
fs
and
adc
push
push
popf
testb
and
or
mov
hlt
xor
pop
popf
cltd
cmp
mov
add
cmp
cmpsl
and
dec
or
aam
sub
adc
jmp
mov
test
je
xchg
cmp
mov
imul
movl
pop
xlat
or
cltd
jle
add
lods
and
fadds
mov
or
dec
lock
xchg
sub
push
sub
addb
push
clc
das
jp
aam
je
inc
test
movb
and
dec
adc
add
push
mov
jo
jae
aam
lea
and
sbb
icebp
inc
sbb
loope
jnp
shrb
push
add
and
add
fldl
jnp
add
mov
lahf
je
ror
mov
and
lock
or
mov
adc
add
loop
insl
test
xor
loope
dec
jmp
push
push
pop
movl
xchg
mov
lods
movsl
pop
hlt
add
rcl
mov
jne
jge
in
push
mov
xor
adc
xchg
icebp
jne
or
fcoml
and
in
scas
bound
pusha
inc
ljmp
dec
pushf
sbb
imul
pop
je
call
push
push
insb
add
sub
dec
lahf
push
imul
aam
mov
mov
and
adc
add
or
jne
add
jl
jno
dec
xchg
sbb
lcall
or
stc
mov
push
push
pop
mov
push
push
in
cmpsb
out
mov
jp
push
or
inc
clc
push
subl
or
rcll
lahf
pop
xchg
sbb
test
ja
xchg
sbbl
pop
rolb
fstpl
inc
outsb
push
lcall
mov
es
fistpll
psubusb
sub
imul
call
pop
sub
add
mov
aam
dec
add
in
add
mov
repz
fimuls
dec
bound
test
fs
add
dec
push
lret
adc
xchg
rcll
xchg
loope
pop
cmp
enter
test
xchg
pop
clc
test
je
and
mov
push
dec
call
jle
pop
push
call
mov
in
push
push
sub
cmp
xchg
lea
xchg
or
lcall
and
inc
jo
nop
jl
rorl
ss
hlt
jmp
adc
subl
add
sarb
imul
dec
call
dec
xchg
aad
adc
call
shrb
inc
insb
mov
lods
or
ret
bound
pop
mov
xchg
xchg
xchg
sbb
pop
cld
push
sbb
push
inc
into
pop
in
dec
and
inc
rcl
adc
or
loopne
add
lods
cmp
mov
cs
jmp
in
sbb
jae
shll
cs
cmpsb
fs
shl
or
cmpsb
xlat
dec
cmpsl
hlt
ficoml
call
inc
push
xor
clc
clc
shlb
sbb
push
or
jb
dec
or
add
ret
insb
dec
ja
sub
or
pop
sti
jno
mov
push
jecxz
dec
daa
dec
std
inc
movzbl
jge
push
xor
testl
out
adc
dec
xchg
sbb
fstps
aas
shll
push
pop
lds
and
push
pop
lahf
mov
es
sbb
movsl
gs
fcoms
incl
bound
or
xchg
push
push
push
push
hlt
push
mov
loope
inc
sub
or
push
adc
pop
or
mov
push
jo
adc
nop
add
jne
push
add
sbb
js
popa
mov
cmc
xor
jp
push
filds
dec
test
shr
add
xor
ds
or
push
push
sbb
sbb
dec
xchg
loop
fmuls
cmp
lea
xchg
and
cltd
mov
cwtl
xchg
das
push
push
push
dec
outsl
or
fdiv
hlt
sbb
sbb
inc
pop
dec
push
fcmovb
pop
pusha
push
int3
call
push
push
movsl
jecxz
or
mov
test
je
cmp
mov
outsb
jle
hlt
addr16
cmp
sar
adcl
stc
and
sti
dec
or
jb
call
test
xchg
xor
test
adc
jge
xchg
xlat
rolb
addr16
xchg
jo
test
in
sbb
lea
adc
add
pop
add
add
or
insl
jecxz
test
adcb
mov
roll
jo
sub
daa
sarb
xchg
je
fildl
or
cmp
shll
loop
ljmp
idivb
xchg
call
into
xchg
fdivrp
xor
adc
mov
sbb
mov
add
es
jno
loope
mov
jecxz
pop
mov
add
push
pop
dec
mov
loop
jo
xchg
lea
xor
call
or
mov
int3
or
std
xchg
mov
mov
movsl
mov
and
or
mov
mov
rcrb
fsubrl
xchg
lea
xor
add
enter
clc
or
mov
mov
rep
jg
add
movsb
push
jno
jg
sbb
adc
fstl
insl
out
shll
jo
mov
nop
aas
mov
orb
sub
cmpsl
and
jbe
inc
mov
mov
fnstcw
xchg
pop
aad
shlb
mov
ret
and
and
data16
fs
dec
outsl
push
jb
or
cmp
je
ljmp
add
pop
push
pop
pop
or
popa
or
mov
cltd
out
cmpsl
add
je
cmpb
or
popa
je
mov
add
mov
call
push
sbb
push
dec
xchg
arpl
mov
push
xor
dec
adc
pop
cwtl
adc
xchg
pushf
data16
in
lea
imul
cmpsl
imul
divb
lret
jo
xor
push
loopne
pop
jne
shrb
cmp
sbb
and
aas
js
mov
inc
cmp
mov
std
xlat
je
fisubrs
ficoms
or
push
adc
push
mov
xchg
insb
or
and
scas
dec
adc
push
ret
adc
push
pop
sbb
push
xchg
sbb
adc
add
add
call
sbb
jmp
cmc
jbe
xor
pop
dec
pushl
add
adcl
loopne
mov
dec
in
outsl
imul
pop
or
pop
adc
outsb
adc
inc
ficomps
jg
scas
sub
push
stc
divl
cmp
jl
mov
int3
in
sbb
xchg
mov
loopne
ds
enter
and
mov
jno
sbb
dec
lds
jbe
insb
rcrb
adc
pop
sahf
nop
mov
ds
sbb
bound
or
push
xchg
rcr
in
mov
fsub
jmp
mov
addb
cmp
xor
stos
repnz
clc
and
cltd
je
inc
push
mov
mov
mov
in
mov
pop
xor
shl
aam
fsub
cmp
push
cs
mov
int
mov
lcall
mov
push
in
ret
push
sbb
imul
popa
mov
in
mov
in
aas
mov
pop
fists
scas
aam
adc
pop
mov
aas
inc
sbb
jne
ja
sbb
lods
push
cmp
adc
fidivrs
bound
inc
xor
push
ds
inc
add
add
dec
int3
outsb
out
scas
mov
xor
jmp
addr16
mov
out
fcomp
inc
test
mov
enter
mov
sbb
rcrb
or
fdivs
daa
pop
popa
sbb
test
aad
mov
dec
xlat
push
push
xor
das
mov
jecxz
repz
cs
mov
mov
pop
mov
jb
fs
jns
repz
add
lret
sbb
dec
adc
or
pop
shrb
rorb
int3
xchg
adc
and
loop
mov
push
jne
jl
sbb
sbb
call
mov
jne
cld
jb
add
add
mov
inc
xor
ss
cmp
cmp
adcb
adc
scas
jns
mov
lea
sub
mov
mov
ljmp
push
icebp
xor
subb
enter
inc
add
cld
mov
aam
lock
es
dec
jp
mov
into
mov
ss
inc
and
cli
xchg
mov
or
in
inc
xchg
popa
inc
lock
add
pop
and
je
or
sbb
pop
je
mov
adcb
leave
ret
cmp
adc
or
loopne
inc
xor
xor
orl
mov
sbb
push
jmp
mov
fs
push
ret
jp
call
xor
xchg
pop
cltd
into
sbb
sbb
pop
in
dec
push
cld
lcall
rcrb
mov
pop
cltd
insb
cld
adc
ja
sbbl
mov
lds
push
lock
pop
mov
sbb
mov
les
mov
hlt
lods
jbe
inc
pop
pop
xorl
pop
inc
push
inc
nop
push
ret
rcl
fiadds
xor
inc
pop
cmp
or
outsl
popf
fldenv
mov
cmp
fldt
jne
push
loopne
ja
cmc
push
orl
push
xchg
adcb
push
add
add
in
ret
adc
dec
insl
je
sub
xor
ja
xchg
adc
or
shr
pushl
and
out
cmp
xor
stos
std
std
in
scas
adc
xor
inc
inc
cld
cmp
mov
jo
inc
sarl
cmp
call
fiaddl
mov
jns
inc
aas
jmp
mov
dec
xor
sub
testb
pop
dec
inc
sub
dec
mov
adc
pop
push
jno
push
in
dec
pop
dec
cli
add
adc
std
adc
xchg
and
jae,pt
fwait
clc
sbb
mov
and
add
mov
jbe
test
inc
xchg
out
jno
mov
sahf
pop
add
mov
and
insb
sbb
push
daa
pop
or
pop
mov
mov
rcrb
js
aam
sbb
ja
xlat
sub
subl
push
pop
clc
mov
int
mov
add
movsl
or
add
rorb
inc
xchg
mov
les
xor
mov
mov
add
int3
lods
or
sbb
repz
xor
add
stos
daa
fucomp
add
jl
adc
xchg
adc
mov
pop
pop
cmp
push
xor
popf
mov
enter
sbb
and
jg
cwtl
push
mov
push
call
lcall
movhps
sub
inc
jbe
jne
xor
mov
mov
sbb
pop
xor
xchg
xchg
sarb
adc
enter
test
and
push
clc
push
inc
je
std
jmp
and
insl
mov
pushl
add
in
ds
and
jle
push
js
xor
popf
mov
sarb
or
ret
mov
inc
mov
adc
incb
add
rol
xlat
ss
sarb
aam
add
pop
sub
push
sarl
in
dec
xorb
mov
push
outsb
in
inc
inc
adc
add
jo
adc
push
push
add
cli
mov
cmp
push
mov
stos
mov
jl
or
jne
mov
jmp
or
shlw
xor
or
or
or
popf
jne
bound
insb
cmp
rcrl
or
add
cmp
and
adcl
mov
sub
clc
adc
addb
pop
pop
sub
add
cmpsl
es
jmp
sbb
xchg
mov
call
sub
adc
cmpsb
incl
cmpsl
xchg
and
mov
cmp
outsb
mov
adc
inc
mov
test
hlt
push
cmp
mov
mov
or
mov
mov
mov
push
push
mov
lea
push
adc
adc
ret
call
divl
or
push
fucomip
cmp
je
cmp
ds
movsb
xchg
jne
stos
adcb
mov
and
nop
clc
push
and
std
loope
fimull
roll
jnp
sbb
add
adc
in
rcr
pop
xlat
xchg
or
pushf
mov
adc
mov
test
loopne
xor
pushf
loop
mov
ret
int
cmp
shr
je
or
push
xorb
add
xchg
mov
test
ret
scas
jb
clc
mov
or
inc
mov
mov
inc
push
mov
pusha
cld
jbe
clc
or
jbe
fwait
jmp
push
mov
rorl
fsubr
jo
push
sbb
cmpb
lock
pop
mov
into
pushl
mov
push
lds
lods
sbb
mov
adc
pop
xor
loopne
lods
stos
loopne
loop
jbe
sti
push
je
inc
adc
push
imul
inc
cmpb
loopne
adc
in
loop
xchg
movsb
push
stc
sbb
ja
or
sub
pop
push
sbb
mov
and
pop
cmpb
push
inc
jne
xchg
xchg
aam
xor
mov
push
xchg
mov
push
cmpsb
aam
in
jl
push
sub
inc
cmp
cwtl
popa
fsubrl
lea
jle
call
inc
fwait
sub
je
mov
faddl
push
mov
ss
scas
dec
je
gs
fdivs
js
push
push
mov
cmpsb
imul
add
or
push
fwait
push
fstps
sub
outsl
lods
cs
sub
fs
mov
nop
jae
mulb
mov
nop
dec
push
add
lock
pop
xor
popf
inc
dec
je
xchg
ja
cmpsb
lea
das
mov
inc
pop
mov
mov
ficoms
int3
dec
push
hlt
fisubrs
fnstenv
jo
adc
jne
cmpb
clc
and
cmp
inc
cmp
cld
push
push
call
mov
or
mov
jmp
adc
and
push
mov
rcrb
sub
xchg
or
mov
push
sahf
xor
adc
dec
and
mov
add
mov
and
xchg
int3
call
mov
jmp
push
imul
pop
addr16
sbb
jmp
sbb
mov
inc
sbb
sbb
jne
jecxz
sbb
into
cmp
jmp
pusha
dec
or
ss
cmp
jne
push
cmp
scas
mov
and
or
je
int3
jecxz
cmp
dec
decb
cmp
es
jmp
cltd
loopne
adcl
or
jecxz
push
in
sarl
icebp
call
mov
lds
cmp
mov
and
jnp
pop
cld
push
sysexit
popa
fmull
xchg
push
sar
inc
cmp
inc
movsb
sbb
movsb
clc
xor
sub
jmp
scas
fiadds
xchg
push
dec
jl
js
negb
icebp
and
dec
push
xabort
scas
dec
xor
fxtract
jmp
clc
xchg
add
pop
xorb
movsb
inc
pop
ret
mov
cmp
popa
inc
or
push
xchg
add
xchg
movsl
mov
or
pop
xchg
or
sbb
xchg
jne
add
neg
mov
repnz
in
movsb
jmp
pop
sub
lret
sbb
push
popf
cmp
dec
or
dec
xor
jge
call
call
cmp
add
icebp
movsl
adc
cmpl
nop
and
or
jle
outsb
je
push
stc
sub
push
xchg
arpl
scas
add
mov
sbb
xor
insb
sbb
je
repnz
or
mov
cmp
in
mov
pushf
or
cmp
test
lret
ss
pop
out
inc
and
adc
inc
mov
mov
inc
mov
or
add
add
lock
push
dec
lea
or
pop
mov
orb
xor
mov
icebp
mov
cwtl
inc
jl
and
les
inc
xchg
nop
push
decl
or
decl
dec
jne
movzbl
add
fwait
mov
aam
nop
insl
mov
addb
mov
outsl
mov
shlb
nop
adc
or
sbb
xchg
movsb
test
jmp
and
jge
or
or
outsb
mov
mov
push
cli
sub
add
cmp
sbb
and
ja
inc
sti
sti
xlat
ljmp
inc
xor
inc
pop
rol
dec
dec
and
popa
das
or
inc
shlb
out
add
add
in
xchg
aam
movsb
outsl
call
xchg
loopne
or
and
loop
jge
sub
dec
sub
lock
sbb
call
push
push
call
xchg
or
das
dec
inc
push
je
ja
movb
pushf
xchg
inc
je
dec
inc
push
clc
cmp
dec
mov
push
rcll
aas
dec
sti
xor
sti
push
mov
dec
inc
mov
enter
push
adc
or
fstpt
adc
add
or
xor
xchg
adc
mov
fsubr
pop
inc
fisttpll
fstp
sbb
add
mov
inc
arpl
sub
fcomi
ret
out
insl
fsubs
push
arpl
adc
mov
pop
sbb
mov
mov
xor
fucomp
xor
push
sbb
fstpl
leave
inc
adc
jmp
rolb
sub
dec
vcvtpd2psy
frstor
pop
insl
jecxz
fnsave
dec
dec
addl
fisttpll
daa
and
mov
push
incl
cmp
rclb
cmp
cmc
mov
mov
pop
enter
nop
dec
xor
or
pop
icebp
sbb
cli
or
push
sahf
and
jp
jle
into
ds
mov
callw
pop
call
xor
jmp
cmp
fwait
out
pop
movsl
dec
aam
inc
adc
cmp
out
mov
dec
pop
js
call
lods
mov
ror
pop
xchg
sbb
jmp
pop
leave
ret
cmpsl
dec
pop
cmp
or
adc
add
stos
jno
ja
call
enter
scas
inc
into
dec
fwait
pop
jmp
sti
push
and
cld
xchg
pushl
cmp
jmp
ljmp
sbb
xchg
adc
mov
lahf
xchg
es
pop
xchg
xor
pop
test
loopne
pop
push
xor
cmp
into
cmp
xor
push
lahf
insl
push
dec
dec
jmp
sub
inc
jmp
or
and
movsb
ljmp
push
jmp
xchg
sbb
stos
or
insb
or
and
adcl
enter
test
and
jo
mov
push
add
inc
test
ret
dec
jmp
cmp
call
and
and
mov
incb
cmp
push
push
es
cmpsb
add
rcr
xor
aad
inc
cmpsl
scas
fs
into
rcrb
negl
shll
es
lcall
shlb
push
es
adc
mov
movb
pop
fildll
dec
pushf
out
outsb
iret
dec
push
fs
clc
push
or
in
ficomps
ret
sub
nop
push
adc
fwait
xchg
int3
xchg
mov
sbb
js
mov
and
jb
jbe
inc
push
imull
push
dec
xor
xchg
xchg
inc
sub
jp
addl
fbstp
xor
jecxz
xchg
xchg
pop
xchg
push
test
aaa
bound
cmp
movsl
adc
inc
add
xchg
ror
mov
in
dec
call
test
lcall
stos
addr16
pop
rcl
inc
inc
xor
call
rcrl
inc
adc
aaa
and
enter
call
xchg
cwtl
addr16
inc
inc
andl
push
inc
inc
sbb
addr16
inc
inc
mull
sub
inc
lret
inc
xor
cmp
into
inc
addr16
out
xchg
cwtl
lods
lret
call
dec
rorl
mov
daa
rorl
or
push
inc
dec
out
sahf
int
fs
cs
pusha
nop
push
in
xor
repz
les
add
enter
dec
fidivrs
inc
or
push
sub
sahf
out
and
adc
add
jo
shl
cmp
roll
je
test
dec
call
xlat
mov
out
adc
into
jnp
mov
pop
nop
add
and
dec
pop
mov
aaa
adc
out
or
out
fidivrs
push
mov
rcrb
jecxz
xchg
jo
inc
cld
or
mov
adc
sub
add
mov
or
xchg
xor
stos
lahf
xchg
movsl
pusha
and
xchg
les
xchg
xchg
sub
insb
push
add
xchg
and
add
pushf
push
pop
jmp
cmp
je
mov
add
aas
xchg
jmp
sub
or
lahf
ret
lea
dec
and
test
inc
xor
push
pop
leave
xor
add
repz
pop
in
add
add
sarb
dec
imul
cmpl
add
jno
je
xchg
add
push
repnz
scas
mov
jb
pop
and
push
push
gs
enter
inc
or
or
leave
sbb
cmp
cld
add
cmp
push
repnz
or
test
mov
fisubs
xchg
inc
scas
in
or
sahf
xchg
sub
push
cmovp
inc
xor
adc
enter
adc
or
adc
in
add
adc
jns
mov
jns
cmpsb
repnz
add
adc
adc
adcl
scas
in
mov
in
jns
pop
pop
and
cs
sbb
xchg
sbb
repz
movsb
xor
sbb
mov
sbb
sbb
sbb
push
sbb
je
push
sbb
leave
repz
sbb
pop
push
push
inc
std
seto
negb
pop
jne
add
add
sub
inc
imul
adc
psubusb
add
cmp
xchg
hlt
add
jmp
cwtl
xchg
push
in
push
sub
out
je
repnz
sub
rcl
ret
push
imul
addr16
sahf
addr16
roll
out
sub
mov
je
call
inc
les
xchg
mov
cmp
leave
xor
cmp
mov
add
cmpsb
inc
mov
pop
pop
insl
nop
in
in
xchg
aad
in
jns
scas
in
in
mov
out
nop
adcl
or
lock
mov
icebp
cmp
mov
jnp
or
sbb
repz
std
push
pushf
lcall
xchg
jb
out
std
cmc
cmc
cmp
xor
testb
sbb
gs
clc
enter
clc
clc
or
iret
stc
stc
and
repnz
add
sti
enter
fdivrp
cld
cld
je
mov
push
push
nop
shlb
mov
xor
sub
cld
ror
mov
xor
sbb
shll
shlb
lahf
rol
cli
cmp
nop
push
or
fwait
or
xorl
jecxz
jecxz
xchg
scas
in
pop
xor
push
scas
stos
pop
inc
cmpl
aam
aad
imul
xchg
in
aad
scas
call
stos
adc
adc
or
dec
jmp
inc
xor
daa
in
cltd
pop
repnz
sti
jmp
and
push
and
out
xchg
mov
xchg
pop
cmp
or
push
in
xor
sbb
push
cli
stc
lret
and
pop
pop
lcall
or
jb
add
xchg
pop
push
stc
sbb
xor
sti
sti
sti
xchg
pop
leave
sbb
jmp
and
pop
mov
or
dec
popf
adc
mov
movsb
imul
cld
dec
loop
push
and
loop
arpl
loope
setb
inc
clc
and
orb
or
nop
out
xchg
fdiv
out
dec
pop
push
loope
negl
xchg
or
aad
imul
in
aad
loope
divl
pusha
leave
pop
testl
xchg
leave
or
scas
testb
pop
nop
testb
repnz
jns
xor
sub
mov
mulb
out
div
testb
stos
mov
loope
xchg
cmp
mov
in
adc
jmp
sub
pop
push
lret
cmp
loope
cmc
or
or
xlat
inc
pushw
data16
test
ljmp
adc
add
mov
imul
sti
mov
loope
mov
jp
jns
mov
cmp
push
dec
xor
sbb
in
loopne
shl
pop
repz
mov
aam
pushf
and
mov
or
movsl
test
jne
cmp
repz
sub
cs
mov
jne
cmp
repnz
repnz
sub
cmpsl
repnz
xor
cmp
icebp
icebp
das
xchg
xchg
ds
push
and
repnz
cld
icebp
cmc
cmc
or
icebp
mov
dec
stos
nop
cmp
jae
and
jne
jb
sbb
mov
jmp
xor
movups
jne
and
out
lock
sub
stos
mov
test
jp
sub
jecxz
jmp
pop
jbe
push
push
sub
ffreep
push
mov
insb
loope
inc
sahf
xchg
stos
jge
push
add
push
in
mov
pop
mov
mov
add
lahf
pop
insb
in
jne
stc
xor
jmp
mov
and
jmp
ss
sarb
shr
addr16
sub
int3
dec
push
nop
push
jns
xorl
aaa
or
dec
repz
add
fwait
int
stc
jp
sub
push
jecxz
repz
sahf
out
mov
sbb
push
push
aad
in
xchg
gs
jnp
out
dec
outsb
or
mov
xchg
add
pop
rcrl
mov
and
dec
sub
pop
and
lea
inc
cmp
and
mov
sbb
lret
test
mov
pop
xchg
sub
cmp
jo
xchg
lods
jle
mov
jg
in
xor
fists
push
xor
mov
or
or
sbb
adc
mov
sub
push
xchg
cmp
sbb
xchg
sub
mov
out
cltd
sbb
rolb
sbb
call
mov
psrad
call
jo
in
aam
rcrb
mov
pop
jmp
fs
add
push
push
and
repnz
push
pop
fsubl
call
dec
dec
testl
imul
adc
xchg
xchg
push
jmp
orb
jb
adc
dec
divb
dec
movsl
pop
xor
dec
cli
adc
ja
lahf
popf
adc
adc
les
das
pop
xor
ja
sbb
stos
adc
dec
push
jecxz
sbb
adc
sub
jmp
rorb
cmp
add
adc
imul
xor
test
push
add
clc
add
shr
inc
add
push
sbb
ds
and
inc
add
and
pop
dec
loope
inc
and
and
data16
addl
jmp
sbb
and
sub
adc
inc
out
and
test
mov
dec
cltd
sbb
inc
adc
out
inc
nop
in
inc
dec
pop
out
scas
adc
mov
sbb
pop
xor
rcrb
sbb
sub
out
dec
orl
sbb
into
xor
and
je
add
orl
push
lods
rclb
or
movsl
xchg
mov
mov
in
adc
inc
jg
and
leave
dec
add
loop
je
add
sub
sti
iret
xor
xchg
pop
les
stc
push
es
add
fwait
mov
jmp
lock
sbb
mov
xchg
push
push
bound
and
in
adc
and
ss
int
pop
add
mov
inc
inc
out
jmp
or
je
fwait
adc
adc
xor
rorb
rcl
dec
inc
xor
ss
or
je
fwait
push
push
inc
mov
mov
enter
aam
or
fwait
test
ja
sarb
jns
pop
aad
dec
out
jmp
dec
aaa
imul
inc
lcall
sub
sbb
sub
sysenter
cld
and
adc
test
dec
das
pop
sub
dec
ja
and
shlb
pop
inc
xor
xchg
push
fwait
adc
inc
adc
fwait
dec
dec
dec
or
push
shll
fwait
inc
inc
xor
xchg
ds
cmp
fwait
loope
cmp
jmp
mov
test
insb
pop
fs
xor
cmp
and
lods
lcall
lea
xorb
inc
ds
jmp
inc
lds
sbb
xor
cs
adc
cmp
sbb
push
fwait
cmp
sbb
inc
fwait
std
or
fwait
and
sbb
sbbl
add
pop
outsb
fwait
cmp
leave
inc
test
inc
fistl
fstpl
push
mov
test
push
insl
or
inc
cltd
inc
scas
push
andl
cltd
andl
je
enter
aam
aam
or
mov
in
lock
push
xor
rcrb
xor
cltd
inc
jb
pop
push
push
cltd
data16
data16
dec
mov
fndisi(8087
divb
or
cltd
cmp
iret
dec
lods
push
cmp
pop
andb
pusha
push
cmp
repz
popa
aas
ss
xor
rclb
in
adc
rcrb
outsl
add
sub
adc
outsl
inc
loopne
out
andl
jmp
sbb
sbb
xor
add
add
dec
cmpsb
pop
jmp
push
add
loope
dec
mov
test
sbb
pop
xor
fisubl
sbb
xchg
hlt
mov
and
and
push
repz
dec
mov
and
int
movsb
mov
mov
inc
ret
or
shl
loop
gs
and
and
push
repz
jne
nop
mov
sub
sbb
inc
inc
adcl
or
pop
or
mov
sbb
test
imul
cs
jno
mov
or
aam
inc
mov
inc
mov
lret
mov
call
clc
mov
mov
sbb
addl
nop
pop
cmp
jmp
scas
test
push
cmp
mov
jle
lods
push
dec
je
sbb
mov
and
mov
in
loope
push
sbb
push
je
je
rolb
pop
std
aam
sbb
pop
inc
pop
adc
insl
jne
mov
pop
loop
mov
addl
push
rcl
pop
mov
adc
mov
mov
hlt
xor
mov
imul
inc
leave
loopne
push
jno
mov
nop
jns
enter
push
cmp
xchg
or
addl
call
xlat
ss
mov
adc
push
sbb
inc
mov
rcl
lods
cld
adc
shrb
inc
lar
fs
shrb
pop
mov
xchg
cmp
mov
xchg
orl
orl
mov
icebp
lret
or
mov
mov
pop
or
aas
cmpl
call
sbb
pop
outsb
push
or
push
cmp
je
cmp
mov
xor
out
imul
add
adc
in
sbb
and
imul
sbb
mov
pop
fcomp
push
ds
pop
jp
rorb
cmp
ss
nop
push
lea
enter
mov
add
push
rcl
mov
add
xchg
cmp
inc
mov
jo
ljmp
popa
cs
or
dec
into
mov
jbe
rorb
shrl
insl
sbb
pop
add
jno
nop
orb
fcmovnbe
sbb
inc
movl
mov
pop
mov
rcl
test
push
mov
orb
outsb
ljmp
cmpsb
mov
mov
aad
rcl
std
mov
adc
and
cli
test
or
int
sbb
mov
add
int3
sbb
sbb
add
mov
fildll
ret
fxch
xchg
or
int
jl
cmp
ss
xchg
ret
add
in
cmp
inc
pop
mov
in
call
ret
or
mov
push
sbb
cmp
mov
mov
or
imul
mov
fldl
pop
imul
aam
out
push
mov
sub
or
cld
add
sti
lret
test
sbb
mov
rorb
mov
mov
stos
cmp
or
lahf
xchg
inc
inc
out
and
pop
mov
push
mov
out
mov
jno
shlb
js
out
lock
out
dec
push
mov
push
mov
les
jecxz
mov
je
test
mov
js
sbb
mov
mov
push
sbb
xor
rorb
jg
mov
xor
sub
dec
jae
sbb
xor
enter
cmp
inc
enter
push
pop
dec
xchg
into
loop
dec
pop
cmp
sbb
pop
lcall
call
adc
sbb
or
popa
jo
jo
mov
cmp
daa
adc
xchg
push
faddl
sub
insb
std
rolb
leave
in
cs
loope
jge
aaa
imul
and
aaa
popf
aaa
dec
pop
aam
xor
sub
push
repz
adc
in
pop
out
lods
mov
inc
xlat
or
add
push
mov
jnp
and
dec
pop
ret
fucomi
adcl
push
mov
sbb
cmp
popf
xorl
ret
mov
jmp
inc
inc
gs
hlt
sbb
gs
test
test
andl
enter
addr16
testl
ret
subb
loopne
enter
pop
rcll
sarb
push
shll
shll
inc
jnp
nop
inc
push
outsl
add
xlat
mov
sbb
mov
enter
mov
sub
dec
mov
movsl
sub
adc
rolb
jo
pushf
or
xchg
popf
lcall
pop
xchg
pop
xchg
and
mov
xchg
xchg
xchg
pop
add
dec
and
xchg
and
orb
fists
mov
dec
jle
push
cltd
imul
jg
add
push
xchg
je
sbb
push
mov
dec
jge
jg
adc
pop
cmpsl
push
jae
mov
push
dec
jb
jg
inc
push
mov
leave
push
adc
movsl
loope
or
call
pop
jecxz
inc
mov
adcb
jnp
add
pop
pusha
in
cli
stc
dec
xchg
sub
mov
jecxz
loope
inc
sarl
sbb
rorl
test
cmp
shrl
mov
xchg
es
and
movsb
ret
add
add
rcrl
push
jl
add
xchg
add
sbb
out
or
je
sbb
dec
adc
inc
cmp
lret
add
notb
and
insb
dec
mov
lcall
stos
ljmp
dec
or
sub
adc
shlb
adc
dec
sbb
call
je
addr16
pop
call
fimuls
call
mov
and
cmp
or
push
cwtl
inc
cmp
mov
and
push
in
pop
es
inc
xchg
ret
testb
mov
jno
push
and
push
shlb
and
mov
or
or
out
fcmovne
nop
out
mov
sub
xchg
andb
mov
and
lret
mov
xchg
fs
push
data16
out
inc
addr16
loopne
add
inc
fs
mov
loopne
jmp
dec
fs
addr16
mov
imul
addr16
cs
call
mov
xchg
loop
mov
dec
call
fnsave
mov
pop
aad
dec
adc
dec
dec
cmc
xchg
xchg
adc
pusha
es
andb
dec
mov
mov
inc
pusha
mov
faddl
es
pop
pop
stos
mov
and
inc
or
adc
cmp
loop
cmc
stos
mov
and
xor
mov
inc
push
jmp
ja
push
roll
cmc
xor
cmc
cwtl
dec
enter
inc
inc
pop
and
cmp
popa
shl
das
push
test
daa
es
push
mov
pop
adc
pop
mov
jae
lea
xchg
xchg
orb
cmp
adc
add
out
je
push
loop
call
movsb
add
popa
xchg
jmp
incl
jl
je
les
inc
movb
hlt
movsb
xchg
lods
test
or
sbb
cmp
lock
shrl
aam
lods
lods
ljmp
test
divb
mov
cmp
adcl
pusha
repz
inc
dec
addl
movsb
or
mov
jns
push
cmp
xor
nop
push
fcompl
sub
repz
sub
adc
push
pusha
arpl
shrb
xor
roll
out
es
or
sub
add
or
es
adc
pop
adc
push
cld
mov
nop
inc
and
fiadds
jmp
incl
sarb
aam
mov
inc
mov
xor
push
inc
call
setl
inc
mov
daa
insl
dec
ss
call
add
fsubl
xor
cmp
fisttpll
mov
or
add
dec
jge
movb
mov
jl
aam
fildl
cmp
inc
jmp
dec
jmp
xor
loopne
sbb
push
inc
inc
adc
xchg
and
jmp
inc
inc
inc
roll
es
addb
mov
dec
add
scas
or
mov
mov
shr
fs
stc
add
das
or
add
xchg
xorb
addl
or
je
addr16
add
pop
and
cmp
pop
addb
mov
adc
into
call
xor
aaa
and
test
jmp
ds
sbb
popa
adc
push
popf
pop
pop
dec
nop
fnstenv
cmp
xor
add
lds
adc
add
loop
sbb
pusha
and
testl
ljmp
fs
out
xchg
or
ret
loope
push
mov
or
or
adc
pop
jb
cmp
repz
mov
mov
add
push
push
adc
std
dec
mov
mov
push
cwtl
aaa
jne
es
push
stc
or
inc
jmp
cmp
xor
imulb
adc
push
add
ret
push
cld
jb
js
add
call
pushf
push
shlb
cmp
mov
repnz
ss
add
dec
sub
cmc
inc
adc
sub
mov
cmp
pop
pop
adc
jp
adc
subl
pop
nop
adc
sbb
fadds
xchg
pop
or
xor
sbb
stos
flds
jb
cmc
add
mov
inc
jecxz
add
pushf
add
adc
fidivrl
sahf
in
rorb
jge
inc
jb
outsl
xor
insb
xor
out
dec
pop
add
lock
adc
adc
adc
loope
outsb
lret
rcrl
gs
test
xor
rol
js
mov
sub
mov
std
aad
loopne
aam
and
mov
xchg
inc
sarb
cmpsl
adc
scas
stos
loopne
addl
sbb
adc
or
mov
in
sbb
sbb
mov
mov
or
push
adc
nop
sbb
shrl
mov
arpl
daa
ja
es
xchg
push
int3
pop
xchg
or
adc
nop
push
adc
rcrb
arpl
add
pop
fnsave
je
add
push
xorl
xor
and
test
push
and
shrl
popf
out
rclb
push
int3
adc
push
roll
xchg
mov
ljmp
gs
or
hlt
es
repz
jg
pop
and
inc
mov
sbb
sarb
xchg
jg
mov
nop
sahf
push
repnz
ror
sbb
add
or
push
aad
or
stos
push
mov
inc
sbb
pop
and
jmp
mov
rclb
fcmovbe
sbb
mov
push
xchg
add
or
ret
or
and
or
or
push
xchg
pusha
xorl
xor
push
push
ljmp
inc
push
xchg
mov
ret
ss
push
call
xorw
and
xor
push
nop
mov
push
inc
pop
arpl
sbb
and
push
sbb
push
push
sbb
mov
or
push
leave
dec
push
mov
jno
rolb
dec
mov
gs
fwait
mov
push
jne
pop
adc
push
jle
rclb
jb
pusha
or
xlat
mov
xchg
jmp
rolb
pushf
cmp
push
mov
dec
sub
jne
cmp
test
call
push
mov
jmp
sbb
adc
or
pop
push
push
pop
and
pop
inc
addl
xchg
cltd
js
push
or
ljmp
sahf
out
rcrb
mov
outsl
mov
mov
xlat
fsubrs
lea
inc
inc
dec
inc
add
xchg
sar
inc
push
sbb
add
inc
mov
adc
and
inc
dec
inc
aaa
adc
add
pop
push
sub
sub
call
cmp
add
loopne
inc
popa
pop
jo
add
inc
testl
loope
or
cmp
push
adc
sub
daa
push
xor
pop
adc
es
or
mov
sub
scas
stos
adc
mov
push
mov
pop
pushf
es
and
adc
pop
xor
mov
push
push
mov
bound
movsl
addr16
inc
xor
stos
es
mov
test
add
xor
push
aam
cwtl
popa
jecxz
repnz
push
xor
frstor
movsb
cmpsb
jo
push
dec
fstps
iret
movl
iret
dec
pop
mov
imul
out
add
dec
outsl
gs
into
and
iret
inc
or
mov
jbe
loope
aam
pop
call
movsb
push
iret
dec
hlt
push
mov
xor
push
mov
sahf
mov
xchg
mov
and
inc
in
in
sub
in
adc
data16
cmpps
in
stos
cmp
adc
dec
mul
push
or
mov
cld
cs
mov
push
in
pop
pop
xor
lret
outsb
lds
in
in
dec
push
test
call
mov
add
lods
add
push
mov
cmpsb
jp
popf
arpl
lods
and
in
xor
loope
in
movsb
ljmp
xor
mov
xor
inc
scas
adc
add
in
call
imul
or
inc
mov
adc
dec
jecxz
into
jo
fxch
mov
test
mov
xchg
fcmovb
mov
mov
mov
in
fmuls
nop
inc
in
sub
jp
in
bound
mov
mov
in
jb
pop
push
jp
mov
inc
xchg
in
sbb
inc
les
je
in
sub
cs
sub
dec
push
inc
enter
sbb
mov
jmp
pusha
add
or
mov
or
mov
nop
ret
sub
in
push
pop
adc
sbbb
mov
add
in
sbb
and
pop
lea
in
and
mov
in
mov
add
push
mov
popf
inc
in
sub
das
lods
in
sub
outsb
mov
js
mov
adc
je
sub
jmp
test
lahf
jg
cmpsl
push
adc
shl
rclb
sbb
add
push
popf
sbb
imul
mov
adcb
xchg
mov
fistpl
arpl
and
lds
xor
sub
inc
sbb
test
test
in
out
jnp
or
iret
lds
call
xor
ficomps
inc
sub
and
in
or
pusha
inc
jo
mov
inc
sbb
xor
push
int
call
sub
les
push
and
inc
in
cwtl
mov
mov
aam
aas
xor
inc
insb
sbb
sbb
pop
fildl
xor
scas
push
or
aas
sbb
adc
dec
aas
mov
xchg
test
aas
pop
aad
je
aas
or
pop
cmp
cmp
pop
and
cmp
jp
sub
adcb
inc
push
test
nop
jge
aas
clc
cmp
popa
call
dec
xor
aas
cwtl
cmp
je
aam
sub
sub
arpl
lods
popa
call
push
aad
aas
or
jge
push
or
xchg
pop
and
ret
or
popa
aam
in
aas
add
add
pop
add
sbb
test
mov
dec
cs
aas
cmpsb
sbbl
push
jns
inc
inc
imul
test
fwait
enter
fs
pop
dec
dec
jae
pop
cmp
lahf
or
add
inc
cmpsl
repz
fwait
nop
add
push
adc
mov
nop
nop
shll
fwait
lea
jle
enter
cmc
jns
or
inc
test
nop
fwait
call
sbbb
adc
nop
nop
fs
addb
mov
or
cmp
and
adc
adc
hlt
neg
daa
pop
or
dec
jae
and
gs
dec
pop
or
xor
sbb
pop
push
rcl
imul
cmp
push
sbbb
mov
fs
pop
nop
add
sbb
mov
push
enter
sub
push
and
repnz
sbb
movups
or
xor
xchg
pop
int
sub
add
xor
mov
pop
and
xchg
push
sub
test
or
test
add
inc
and
adc
xchg
test
add
mov
loop
pop
in
mov
xchg
mov
inc
add
decb
addb
or
test
inc
in
sarb
adc
mov
test
xor
loopne
dec
inc
out
push
mov
mov
cmpsb
rol
dec
call
push
fcoml
mov
push
pop
ret
and
mov
and
dec
xchg
test
adc
and
add
add
add
inc
dec
dec
inc
ret
and
loop
outsl
nop
or
adc
dec
and
dec
sub
testb
mov
inc
ret
pop
adc
dec
inc
sbb
cmovb
call
je
fnstenv
fcoml
ret
mov
cmp
in
stos
sub
sub
or
mov
mov
cmp
xor
cmp
inc
push
xchg
das
mov
or
inc
or
aas
xor
mov
adc
das
shlb
call
lahf
ljmp
sub
or
cld
repnz
add
call
lock
call
cmp
loopne
call
push
pop
int
inc
call
mov
dec
call
push
call
stc
pop
call
pusha
call
in
xchg
das
push
jne
call
bnd
gs
pop
jl
push
shr
cmp
inc
sbb
sub
xor
nop
sbb
cwtl
add
in
mov
test
sbb
adc
movsl
ret
les
lods
pop
int3
mov
xchg
xchg
lret
mov
fdivl
pop
sub
push
movsl
pop
call
jb
pop
aam
lock
lret
clc
sbb
lret
test
add
adcb
leave
gs
push
mov
adc
xchg
dec
in
rcrb
stos
and
sub
dec
xchg
sub
xor
in
mov
mov
pop
inc
push
inc
or
inc
dec
cmp
sub
push
adc
jb
pop
pop
or
mov
or
add
pop
push
cmpsl
or
cs
pop
daa
int
in
insb
and
or
mov
xor
xor
and
push
call
adc
xchg
sbb
imul
adc
data16
jl
sbb
xor
push
and
and
xchg
xchg
out
cli
cmp
lcall
movsb
sbb
les
out
movsb
pusha
dec
cli
mov
dec
push
nop
mov
pop
adc
mov
xorb
push
call
stc
dec
mov
inc
pop
sbb
cmpsl
adc
push
shlb
xchg
je
jae
xchg
out
add
mov
adc
leave
or
ss
pop
pop
mov
inc
and
test
sub
pop
add
xlat
pop
scas
add
mov
adc
add
mov
mov
add
adcb
and
push
sub
add
add
xchg
subb
pusha
cmp
cli
cs
xor
fcoms
cld
mov
xchg
rcrb
inc
cltd
mov
mov
mov
pop
sbb
testb
xchg
xchg
das
inc
movsl
add
les
sbb
subb
movsb
jg
mulps
xchg
jp
ret
push
xchg
pop
iret
mov
push
je
fnsave
dec
sbb
xorl
inc
mov
and
mov
mov
or
and
mov
cmp
sbb
xor
shrl
pop
mov
jp
mov
stc
mov
mov
mov
push
nop
push
scas
je
push
or
ss
inc
nop
push
ss
inc
dec
add
es
jne
mov
mov
xor
notl
add
sub
test
add
inc
push
loop
movsb
sbb
fs
or
repnz
xor
sbb
push
ret
dec
adc
bound
mov
push
arpl
lods
mov
outsb
aam
mov
test
adc
xor
inc
cmp
cmp
test
mov
mov
pop
pop
test
cmpb
adc
sbb
aad
jecxz
push
in
sub
rclb
mov
push
and
ja
cmp
mov
es
xor
mov
xor
cmp
pushf
movsb
xor
aas
dec
xor
dec
push
xor
mov
push
call
xchg
xchg
xor
dec
push
xor
dec
push
mov
inc
jmp
xor
adc
dec
xor
xchg
mov
jle
cmp
outsb
cmp
jmp
xor
xor
xor
xchg
xchg
xor
daa
sub
je
xchg
add
xor
jns
xor
and
xor
movsb
and
cmp
xor
adc
mov
xchg
in
out
and
leave
pop
xor
loope
stc
sbb
fwait
shlb
dec
popa
and
adc
fwait
adc
rorl
dec
fwait
and
ljmp
call
je
fwait
xchg
adc
adc
jmp
xchg
and
fwait
sub
bound
xor
sub
or
inc
fwait
push
test
js
jmp
sub
xchg
add
lods
mov
pop
xor
push
push
xor
cwtl
sub
ja
cmpsl
dec
inc
addr16
mov
xor
push
cmpsl
ret
sbbb
popf
out
sahf
adc
dec
inc
adcl
stos
jno
cmpsl
rcrb
inc
xor
push
ret
mov
sub
or
inc
sub
ret
and
lea
adc
imul
pop
pusha
xor
aam
lea
inc
jno
loopne
adc
jno
xor
mov
mov
or
sbb
sub
repz
and
jno
mov
nop
pop
out
jno
push
push
jmp
jge
insl
xor
or
into
outsb
push
les
and
testl
dec
push
mov
add
mov
lea
xchg
jecxz
xor
or
or
cmp
and
sbb
rol
push
mov
mov
xchg
add
or
nop
cmpsb
sub
xchg
cwtl
adc
or
sbb
mov
adc
pop
mov
xchg
pop
inc
cmp
push
popa
mov
xchg
gs
pusha
inc
xchg
mov
mov
xor
nop
dec
imul
roll
mov
xchg
sbb
movsl
mov
push
sbb
aam
mov
add
jmp
arpl
or
push
xchg
stc
dec
inc
retw
push
cld
add
and
andb
negb
mov
cld
jb
sub
sbb
shr
out
push
das
dec
inc
or
push
das
mov
xchg
nop
mov
nop
dec
js
test
dec
imul
test
inc
push
hlt
push
cltd
and
and
mov
mov
push
cs
cmp
mov
cmp
add
call
sub
sbb
fisttpll
pop
and
add
test
inc
lea
fmuls
inc
pop
pop
and
jmp
mov
xchg
inc
mov
sbb
adc
pop
inc
lea
inc
inc
dec
andl
aaa
roll
jmp
dec
dec
xor
inc
adc
xchg
add
sbb
cmpsl
cmp
and
push
add
loopne
sub
test
add
xor
jnp
add
sahf
cmp
push
cmpl
pusha
pop
dec
push
xor
pop
jmp
dec
or
adc
or
inc
nop
mov
and
and
pusha
popa
and
add
call
sbb
roll
sub
pop
mov
add
xor
test
cli
push
test
addr16
pop
in
and
fldcw
inc
adc
mov
in
pop
add
push
out
cmp
adc
jmp
cmc
sbb
sahf
jg
push
mov
or
sub
push
push
incb
movsb
xchg
cmpsl
sti
dec
xchg
add
pop
mov
and
push
xor
shlb
outsb
imul
mov
and
or
lods
mov
xor
mov
mov
xor
fwait
and
out
dec
push
push
xor
nop
lret
push
adc
adc
leave
nop
roll
xor
and
mov
xchg
mov
lahf
pop
xor
shl
fdivl
push
add
dec
out
addr16
adc
stos
inc
stos
inc
aam
sbbb
adc
add
xchg
jmp
hlt
cmp
mov
sbb
fwait
nop
mov
mov
sub
jns
iret
sbb
arpl
push
lds
data16
pop
je
push
call
pop
pop
and
mov
push
cltd
out
pop
sub
sahf
pop
fstl
cltd
dec
dec
ja
or
pop
cltd
inc
loope
xchg
js
jno
insb
movsl
hlt
mov
xchg
sbb
popf
adc
sub
mov
push
imul
add
mov
sbb
push
rolb
inc
ss
sub
jae
imul
roll
jb
aam
test
sub
add
sti
fwait
repz
add
imul
mov
repnz
xlat
fwait
push
mov
sbb
imul
mov
xor
call
in
jge
adc
jb
and
ficoml
add
fldt
push
cmp
lock
or
rcr
and
ret
lds
lcall
ljmp
test
push
sub
dec
stos
or
or
mov
dec
addr16
enter
movsb
repz
mov
lret
mov
add
repz
push
or
add
nop
addr16
add
cltd
mov
fildl
mov
cmp
cltd
inc
pop
xchg
xorb
push
add
mov
cmp
enter
adcl
mov
or
jmp
dec
addr16
jmp
adc
or
add
incb
jbe
push
mov
push
inc
or
iret
or
and
cmp
repz
sbb
out
sbb
ret
mov
sahf
out
bound
sub
repz
out
clc
sbb
aam
jns
fcmovnu
push
mov
pushf
pop
push
lods
push
mov
out
clc
push
inc
push
push
sub
repz
jns
nop
movsb
push
push
xchg
jl
repz
fs
inc
cmpb
repz
repz
push
out
ds
sbb
repnz
fmulp
jnp
jns
mov
ret
into
repz
out
sbb
incb
add
es
loop
jns
iret
sbb
sbb
out
sahf
mov
sbb
iret
repz
pushf
scas
lret
sahf
out
cld
or
and
out
sahf
out
data16
nop
sahf
out
sahf
sahf
lods
mov
fsubrp
out
out
jns
push
ss
inc
push
ja
and
jle
repz
data16
sahf
mov
daa
rol
loop
clc
ja
sti
ficoms
imulb
push
cmp
aaa
je
fs
pop
icebp
jns
push
cmp
adc
daa
pop
sbb
push
jbe
add
push
cli
jbe
push
cwtl
cmpsl
insl
mov
iret
pop
inc
mov
dec
test
add
outsl
cwtl
imul
fldcw
les
push
and
push
cmp
pop
daa
cwtl
mov
jo
jne
gs
pop
pop
test
sub
xlat
inc
mov
stos
or
fisttpll
dec
ja
jb
pop
add
mov
outsl
cmpl
clc
xchg
dec
xchg
jno
mov
es
ja
daa
js
xor
rcll
flds
aaa
outsl
or
jo
mov
pop
fsubs
lret
int3
out
pop
mov
xor
mov
mov
push
jl
push
dec
cmp
pop
or
das
outsl
push
or
imul
sbbb
mov
xchg
xor
mov
adc
push
stos
dec
jnp
mov
lahf
arpl
bound
fadds
fcom
jno
or
and
inc
and
mov
inc
sbb
jmp
jae
icebp
jo
cs
outsl
adc
mov
daa
add
cmp
inc
dec
mov
cmp
mov
dec
or
das
jg
arpl
add
cmp
rsm
and
arpl
push
dec
inc
push
push
inc
push
inc
pop
inc
int3
fwait
rcl
outsl
outsl
and
sbb
inc
sub
adc
sbb
cmp
pop
dec
aas
in
cmc
es
jae
pop
dec
imul
mov
jae
inc
jne
fdivrs
push
jecxz
inc
js
mov
je
ss
inc
xor
pushl
xor
xor
cmp
sub
inc
inc
xor
xor
mov
mov
xor
jge
xor
xor
inc
xor
xor
ss
pushl
sub
sub
cmp
xor
clc
inc
inc
xor
mov
xor
mov
jg
faddl
jne
test
xor
jo
lret
fidivrs
cmp
add
xor
or
push
loope
and
inc
aaa
adc
xor
inc
pop
dec
add
or
lods
mov
cmp
arpl
push
sbb
inc
push
inc
push
dec
and
fsubrl
cmp
ss
pushf
xor
inc
jno
rolb
dec
outsl
mov
addb
loope
and
dec
scas
mov
ss
push
dec
hlt
imul
ficoml
pop
push
dec
sub
inc
push
inc
out
iret
sarl
xor
sub
out
cmp
in
xor
in
mov
lods
sahf
imul
add
movd
mov
push
into
hlt
outsl
iret
jo
ljmp
xchg
loopne
add
jg
mov
scas
in
and
outsl
xor
jno
ljmp
push
movsb
inc
je
push
push
insw
int3
lret
push
inc
cmp
adc
mov
sbb
dec
push
in
cmp
sub
jge
mov
fldt
inc
mov
and
mov
push
sarb
insb
insb
mov
xchg
aaa
xchg
and
outsb
ret
or
mov
test
ss
inc
and
xor
rcrb
cmp
add
insb
arpl
and
pop
xor
imul
imul
pop
and
adc
insb
mov
out
push
and
jl
jb
inc
jnp
or
imul
imul
mov
or
je
dec
xchg
scas
imul
push
jo
jo
test
fildl
dec
fwait
pop
add
sub
sbb
dec
jp
push
cwtl
movsb
jmp
ret
cmc
cmp
arpl
inc
cs
push
push
push
add
ja
fldenv
fildll
adc
pop
xchg
push
popa
imul
add
ds
xor
or
sbb
fdivl
pop
pop
add
inc
add
mov
mov
and
lock
test
mov
rolb
adc
pusha
sub
xchg
adcb
jg
adc
adc
adc
and
xchg
or
cmp
sbb
push
mov
cmpsl
andb
mov
mov
xchg
push
push
aas
adc
mov
push
fadds
adc
andb
or
add
or
das
push
adc
jns
out
xchg
adc
push
sbb
sbb
cmp
repz
sbb
std
lahf
out
cmpsl
sbb
push
das
push
pop
nop
cld
sarb
and
cli
js
xlat
jl
push
jns
stc
jp
push
cld
ret
cmp
repz
mov
out
xor
pushf
fwait
mull
test
out
stos
or
arpl
sbb
xchg
or
xor
dec
outsl
test
mov
or
cmp
mov
or
ds
add
adc
push
cld
or
out
lock
int3
les
mov
jnp
iret
cmp
pushf
push
xchg
call
iret
repz
mov
iret
repz
fs
pop
mov
out
push
dec
dec
inc
cmp
push
sahf
inc
cmp
xor
sub
cmp
repz
sbb
iret
repz
adc
or
add
sahf
out
ds
or
hlt
call
jns
enter
repz
out
push
xor
lock
iret
repz
int3
mov
insb
inc
sub
adc
cld
push
fdivrs
out
rol
mov
js
jl
out
sub
aam
mov
xchg
jo
sbb
add
jns
fwait
jg
push
int3
push
mov
xor
iret
inc
xchg
dec
dec
xor
pop
scas
add
add
mov
repz
outsb
nop
mov
cmp
inc
xor
dec
adc
out
mov
adc
add
adc
inc
fs
mov
cmp
out
push
sbb
adc
pop
push
mov
nop
pop
adc
pusha
test
sarl
jecxz
gs
pusha
sub
cmpsb
mov
arpl
mov
or
pop
addl
push
inc
pop
sbb
cmp
lds
imul
jmp
adc
inc
arpl
and
stos
mov
add
mov
jae
xor
bound
sbb
fists
js
shrb
mov
pushf
andb
rolb
and
testb
fs
inc
push
and
add
cld
lcall
xor
xchg
cld
inc
inc
mov
pop
ret
jnp
out
mov
mov
jg
pop
jne
pop
or
add
sbb
jmp
imul
imul
and
pop
dec
inc
fdivl
push
cwtl
sbb
jo
push
or
cmp
or
scas
pusha
cmp
xor
filds
sbb
push
push
insb
das
inc
xchg
mov
jl
add
fstp
mov
or
mov
loopne
xchg
dec
sahf
mov
loopne
out
adc
shlb
push
or
dec
or
pop
inc
sub
aas
das
fs
pop
jg
fcoms
fistpl
and
mov
ss
bound
aas
int3
adc
push
ljmp
add
jbe
xchg
inc
xlat
jns
pop
rcr
dec
and
or
push
lcall
pushf
setl
lret
push
mov
adc
sbb
pop
push
popf
jl
in
mov
aas
sbb
jo
cmpsb
jg
mov
fmuls
imul
aaa
mov
leave
or
mov
daa
or
jg
enter
xchg
adc
inc
jb
pinsrw
shlb
daa
fimull
shl
adc
jp
insb
adc
push
sbb
daa
fs
loopne
dec
sbb
movsb
dec
adc
cmpsb
jns
sahf
loopne
daa
lock
dec
jecxz
enter
mov
fcompl
inc
dec
lret
mov
fcmovnbe
and
mov
sarb
jmp
add
inc
je
dec
imul
lcall
in
add
insb
push
lcall
scas
pop
push
and
gs
dec
dec
add
aam
jg
push
push
add
push
outsl
ja
xor
cs
lods
scas
jle
jb
and
ja
sub
add
lret
mov
daa
movsb
and
jecxz
mov
and
add
mov
es
repnz
outsb
inc
fistps
fucomip
mov
sbb
cmc
xchg
add
sbb
push
add
bound
lock
in
xchg
dec
push
jb
mov
adc
inc
add
insl
jo
dec
icebp
or
pop
outsb
push
add
out
xor
xchg
add
push
mov
jnp
mov
jae
pop
jb
jne
jae
push
adc
jp
ret
and
push
fcoms
dec
call
push
ret
addr16
out
adc
mov
jecxz
inc
sbb
push
xor
addb
cmpsl
mov
push
add
and
add
xor
test
lds
dec
push
push
imul
dec
jo
std
lcall
lods
jb
jns
mov
ret
lret
imul
cmpsb
sbb
cmp
cmpsl
xor
push
jcxz
xor
imulb
push
movsl
cmp
inc
popa
or
and
fs
fisubl
and
popf
daa
out
push
inc
imul
jge
xchg
sbb
xchg
mov
add
pop
add
andl
inc
add
or
push
fbld
jne
or
idivb
or
movsb
fnsave
sub
pop
lret
test
pop
adcl
and
dec
sub
pop
mov
sub
fs
mov
xor
addr16
dec
xor
dec
testb
pop
ja
call
adc
mov
das
and
push
and
mov
jb
inc
callw
outsb
xor
jo
or
xor
push
dec
add
sarl
orb
das
pop
outsl
mov
mov
scas
inc
add
stc
add
mov
xor
rorl
sub
cmp
inc
insl
xor
xor
dec
dec
pop
add
sbb
inc
inc
jns
xchg
adc
add
ja
jbe
sbb
inc
pop
ficompl
push
outsl
pushf
dec
xchg
dec
and
roll
push
or
scas
push
shlb
add
sbb
movsb
mov
or
lock
xchg
sbb
rolb
insl
imul
jb
mov
mov
jp
push
mov
mov
inc
jmp
jmp
das
push
aaa
fwait
rcr
pop
dec
inc
dec
pop
or
aas
inc
cmc
xor
out
mov
and
mov
and
or
add
inc
inc
pusha
pop
dec
jp
mov
stos
iret
add
fiaddl
dec
and
add
add
add
inc
pop
adc
cs
push
cmp
scas
movsl
ss
cmp
clc
dec
sbb
push
jo
jno
cmp
add
scas
dec
out
inc
into
pop
roll
in
lock
push
or
dec
cmp
xchg
imul
add
iret
pop
pop
cmpsb
addl
int
xchg
into
fcmovbe
add
in
inc
cmpsl
add
push
push
mov
imul
mov
xchg
push
push
and
movaps
jb
jns
cld
pop
aas
ret
jae
adc
add
je
fadds
add
xor
add
mov
and
shll
lcall
or
jo
add
out
into
insb
sbb
pop
out
push
add
inc
pop
int
inc
ss
shll
imul
lock
fbld
pop
movsb
mov
cltd
ficomps
mov
push
popa
push
scas
ret
std
fwait
xchg
and
mov
or
cwtl
aam
push
xchg
data16
clc
jecxz
out
cmp
sbb
push
pop
in
aam
add
add
in
test
aas
adc
mov
insb
push
sbbb
pop
xorl
sbbb
repz
iret
icebp
pop
and
add
std
ret
jns
imull
or
test
rolb
push
mov
pop
add
pop
add
add
fldcw
inc
imul
or
sti
fsubrl
data16
xchg
mov
fs
pusha
and
sbb
call
pop
hlt
out
loopne
inc
mov
adc
push
push
test
or
push
inc
mov
nop
inc
sub
fs
and
adc
ficomps
sub
mov
repz
or
add
clc
out
sahf
out
sahf
lock
jns
out
mov
iret
repz
movsb
pop
mov
cmp
repz
test
push
pusha
push
pop
push
inc
cmp
jns
out
and
sbb
inc
or
int
in
lock
out
fidivrs
fcom
enter
sahf
sarb
sahf
out
pusha
push
cmp
sub
jns
out
sbb
or
iret
repz
cld
in
hlt
in
in
int3
fsubrp
repz
lods
mov
mov
cmp
repz
js
push
inc
sub
mov
sbb
loopne
push
adc
inc
or
mov
mov
pop
subl
mov
mov
mov
push
mov
cmp
lcall
pmuludq
mov
push
mov
push
dec
add
nop
add
aaa
loopne
inc
daa
and
bts
mov
xor
sub
jbe
add
mov
dec
mov
push
mov
add
mov
dec
pop
mov
add
cmpsl
mov
inc
add
and
mov
pop
mov
jmp
adc
scas
lcall
mov
and
mov
inc
lcall
and
dec
andb
repz
pop
jo
add
in
cmp
pop
and
mov
xchg
adc
outsb
inc
inc
sub
nop
test
cmp
insl
xor
sbb
sub
jbe,pn
and
xor
lret
lahf
xor
xor
ds
je
jbe
xchg
fwait
lret
add
jb
imul
shlb
outsb
and
iret
stos
mov
xchg
imul
or
cmp
dec
or
inc
sub
and
pop
pop
rorb
adc
jbe
jb
jne
in
addl
inc
jae
popaw
insb
into
sub
jns
sub
cmpsb
stc
das
sti
ss
sbb
fcompl
insl
out
push
ds
inc
add
inc
pop
pop
adc
adc
add
xor
xor
decl
sbb
bound
loopne
sbb
das
xor
xorb
xor
xor
xor
xor
xor
xor
jmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
outsl
xor
test
enter
ljmp
ss
es
dec
aaa
push
lcall
call
aaa
adc
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
inc
pop
cld
outsl
ret
add
push
lock
idivl
or
push
add
adc
and
dec
xor
xor
outsb
xor
popf
xor
xor
incl
xor
xor
xor
mov
xor
xor
pop
pushl
jae
xor
out
xor
xor
xor
xor
xor
xor
incl
pop
fidivl
scas
xor
shlb
jecxz
call
gs
divl
jno
cltd
ss
ss
paddd
in
ss
aaa
sbb
jno
mov
aaa
loopne
add
or
call
dec
loopne
inc
cmp
loopne
jmp
cmp
cmp
cmp
cmp
push
cmp
jl
cmpl
mov
cmp
push
call
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
cmp
outsl
andb
das
jo,pt
test
mov
jmp
or
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
jg
pusha
andl
xor
mov
xor
xor
jl
mov
mov
xor
xor
xor
xor
pop
xor
cld
jns
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
pushl
pop
xor
jo
xchg
xor
xor
xor
xor
xor
xor
xor
xor
jmp
sbb
xor
push
aaa
push
sub
ss
clc
loop
cmp
cmp
cmp
jge
mov
mov
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
cli
push
xchg
aas
inc
aas
pop
aas
ja
pusha
lds
or
cmp
lcall
cld
lcall
arpl
push
xor
xor
xor
xor
xor
xor
cmp
shll
ret
xor
xor
lcall
out
xor
xor
xor
xor
test
mov
mov
nop
xor
paddd
lock
clc
xor
cmp
jg
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
call
pop
cld
cmp
cmp
cmp
jp
cmp
cmp
std
cmp
cmp
adc
xchg
adc
sbb
or
das
cmp
ds
fidivrl
jmp
mov
and
cmp
ss
ss
xchg
cmp
lcall
test
lods
cmp
cmp
mov
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
dec
aas
push
mov
aas
js
cmpb
aas
sarl
aas
in
out
out
jo
icebp
mov
je
loop
xor
xor
xor
xor
cmpl
leave
xor
xor
loop
xor
xor
stos
cmp
xor
mov
xor
xor
scas
std
xor
mov
jmp
xchg
ss
add
or
aaa
and
ljmp
cmp
aaa
push
aaa
pop
aaa
imul
xchg
mov
xchg
aaa
mov
aaa
pop
hlt
fcomip
xor
cmp
xchg
outsl
cmp
xor
pusha
cmp
fistpll
jmp
cmp
cmp
sbb
push
cmp
inc
cmp
dec
cmp
popa
inc
inc
cmp
cmpb
cmp
push
stos
cmp
hlt
inc
cmp
or
cmp
cmp
cmp
cmp
cmp
repnz
cmp
sub
xor
cmp
cmp
dec
cmp
cmp
pop
cmp
jb
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
lcall
cmp
cmp
cmp
cmp
cmp
sbb
cmp
dec
cmp
push
cmp
jae
mov
cltd
cmp
jp
jg
cwtl
ds
mov
data16
out
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
cmp
lock
mov
rclb
xor
mov
push
sahf
xchg
les
cmp
in
or
adc
and
sub
cmp
jmp
test
xor
xor
xor
xor
xor
outsl
sar
mov
jl
cmpsl
xor
xor
scas
jno
xchg
xor
cmc
or
xor
cmpsb
pushl
xor
xor
jmp
cmpsb
xor
xorb
aaa
fwait
sahf
cmpsb
mov
decl
scas
cmp
fbstp
jp
cmp
fdivrl
aaa
cmp
mov
mov
data16
dec
cmp
cmp
mov
push
cmp
sbb
add
or
xor
cmp
bound
lcall
loopne
data16
push
outsb
aaa
jb
jbe
xchg
ja
js
jge
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jle
mov
decl
or
sbb
ds
xor
xchg
aas
add
mov
insl
xor
mov
decb
xor
xor
xor
xor
jl
fdivrp
push
cld
inc
andl
jmp
repnz
decl
cmp
cmp
pop
cmp
jge
mov
scas
sar
cmp
cmp
jbe
xchg
cmp
cmp
cmp
mov
out
jmp
cmp
cmp
cmp
fdivrs
push
aas
jne
mov
cli
decl
jg
mov
fwait
xor
xor
loopne
loopne
dec
or
repnz
aas
xor
cli
xchg
divl
pop
xor
fsub
adc
es
decl
ss
outsb
notb
ss
in
and
cmp
cmp
cmp
mov
test
pop
adc
cmp
pop
cli
add
inc
push
imul
cmp
test
mov
ret
decl
cld
scas
cmp
dec
cmp
cmp
jae
aam
fnstsw
jecxz
pop
icebp
call
cmp
cmp
cmp
cmp
pop
sarb
inc
cmp
mov
mov
pop
and
push
cmpb
or
cmpsl
ds
ds
ret
idivl
add
sbb
addr16
and
scas
clc
xchg
xor
xor
pop
xor
xor
cmp
or
xor
aad
pushl
xor
xor
xor
mov
xor
push
lcall
add
xor
ds
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
out
in
aaa
cli
jg
pop
xorb
clc
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jg
call
insl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
aas
sbb
and
pusha
aas
cmpb
aas
fdivrl
loop
out
out
pop
ror
pop
cld
les
sub
jne
mov
jae
cmp
jne
jg
xchg
xor
xor
xor
pop
cld
xor
xor
ljmp
jbe
loopne
adc
pushl
adc
sbb
sbb
sub
sub
nop
cmp
mov
cmp
cmp
cmp
cmp
repz
ljmp
adc
aaa
into
cmp
and
pushl
inc
xor
xor
lcall
decb
lods
xor
int3
push
fdivl
in
test
lods
xor
xor
xor
cmp
sub
sub
xor
test
inc
cmp
cmp
cmp
xor
mov
fidivs
cmp
cmp
inc
push
mov
push
mov
enter
add
fdivrs
fdivl
pop
pop
jge
lock
dec
cld
push
add
or
adc
decb
cmp
cmp
sub
sub
jecxz
aas
shlb
cmp
inc
xchg
dec
cmp
clc
clc
lcall
push
cmp
rolb
test
mov
nop
xchg
cwtl
aaa
loope
mov
mov
aas
inc
mov
push
mov
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
shrb
aas
fdivrs
loopne
shr
inc
xchg
jbe
push
or
xor
ljmp
cld
xchg
xor
xor
xor
inc
xor
xor
call
xor
enter
cs
aaa
loope
cmp
mov
fwait
sar
or
pusha
xor
std
es
or
or
or
ss
push
aas
sahf
int3
shlb
aam
fdivs
fdivl
loopne
in
call
ss
incl
cld
pushl
cld
add
add
or
or
adc
adc
aaa
sbb
and
and
sub
call
aaa
sub
xor
cmp
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
and
inc
pushl
pop
aaa
pusha
aaa
jo
je
jl
xorb
aaa
mov
sbb
popf
clc
nop
aaa
xchg
aaa
cwtl
into
mov
dec
mov
icebp
lcall
mov
mov
aaa
enter
shlb
aam
fdivs
fsub
and
sub
in
out
aaa
hlt
pop
mov
push
xor
aaa
hlt
add
or
adc
adc
sbb
cmp
fdivrl
call
mov
cmp
pop
decl
pop
sahf
jl
cwtl
cmp
cmp
sub
cmp
cmp
cmp
scas
cmp
mov
add
insb
cmp
jl
test
jg
mov
mov
cmp
mov
mov
lods
mov
loope
loopne
cmpsl
sub
push
adc
incl
shlb
repnz
sub
es
in
sahf
repnz
shufps
jg
jl
lock
jmp
adcb
lret
lahf
jl
ret
icebp
orb
fists
mov
xchg
aaa
adc
into
dec
push
imul
mov
inc
add
add
lods
insb
sbb
inc
sbb
movsl
push
stos
xor
add
fbld
dec
or
lret
pusha
adc
sbb
int
filds
cmp
imul
sub
sub
outsb
cmp
and
mov
adc
inc
repnz
sahf
add
fists
xor
sbb
aas
pop
dec
or
push
gs
push
repnz
daa
mov
clc
inc
sbb
or
dec
orb
sarl
scas
je
sbb
test
in
push
inc
and
push
and
test
js
mov
lock
dec
cmp
stos
push
shl
jb
pop
in
xchg
xor
push
jae
pop
cltd
adc
sbb
sub
in
mov
les
orl
jge
movsl
insl
adc
enter
mov
jo
outsb
dec
add
push
cmp
faddl
xor
das
inc
and
loope
loope
insb
xor
xor
xor
and
pop
loopne
add
or
das
pop
xchg
sbb
inc
lret
fwait
mov
xchg
decl
jns
xlat
and
add
cmp
mov
inc
and
sbb
xchg
cmpsb
fwait
cltd
sub
dec
jecxz
push
je
cmp
outsb
int3
inc
aam
dec
dec
push
xchg
sub
jp
add
push
pop
xchg
pushf
or
xor
or
insb
outsb
and
push
sti
jge
or
jb
lea
call
push
mov
push
lea
fisttpl
inc
add
cmp
mov
add
movsb
xor
and
and
push
adc
or
inc
add
decb
xorl
imul
push
sbb
mov
fldt
unpcklps
adc
push
push
pop
jb
addb
jl
inc
fidivl
cmp
dec
or
or
mov
call
inc
push
push
call
insb
popa
outsb
movsl
xor
lods
bound
cmpsb
mov
push
mov
inc
push
mov
mov
mov
lahf
fidivs
fistpl
call
shl
inc
and
cmp
js
xor
and
adc
push
add
std
cmp
mov
mov
xor
shll
xor
sbb
and
jne
adc
mov
inc
cli
push
dec
jmp
push
push
inc
jmp
inc
inc
adc
lret
aam
adc
dec
sti
mov
xchg
int3
mov
mov
call
lock
adc
stos
cs
push
loop
inc
push
orl
clc
add
adc
es
int
sbb
add
fmuls
fmuls
push
adc
aad
jo
jl
push
ja
add
push
jnp
test
ja
dec
cld
sub
mov
lret
lahf
cmp
and
push
xchg
xor
xchg
mov
push
test
xor
push
pop
mov
push
aad
lods
sub
or
mov
lea
out
fildl
pop
or
and
clc
xorb
add
js
icebp
rclb
pop
add
push
addr16
or
or
leave
mov
sbb
xchg
inc
pusha
imul
rcll
popf
outsl
popf
jnp
cmpsl
test
xchg
and
fsub
rcrl
loope
movsbl
sarb
out
call
inc
sub
jo
js
xor
add
jle
dec
push
rorb
push
mov
push
cmpsb
in
mov
sbb
inc
mov
and
push
popa
or
imul
add
xchg
pusha
push
jno
loop
sbb
and
sub
cmp
pop
pusha
cwtl
adc
pop
pop
hlt
sub
das
dec
push
fs
sbb
movsb
inc
push
and
inc
mov
or
dec
adc
push
adc
dec
or
pop
call
pop
fs
add
or
icebp
push
outsb
push
mov
cmpsl
or
jl
mov
pop
mov
mov
rclb
cmp
inc
mov
int3
loopne
or
daa
orb
pop
mov
dec
sar
jbe
xchg
and
sub
jl
push
mov
pop
xor
jle
mov
push
fsubl
pop
jge
push
pop
mov
inc
push
push
jg
or
roll
jno
test
mov
lods
xlat
call
xlat
mov
jnp
jnp
mov
push
fnstsw
aas
adc
push
ja
sti
imul
sub
sbb
test
fcompl
andb
mov
test
add
pop
push
in
imull
cmpsb
or
add
add
inc
imul
push
add
xchg
xchg
adc
mov
or
push
adc
and
adc
mov
shrb
push
mov
mov
mov
mov
bound
or
sarb
and
mov
inc
imul
xor
mov
inc
das
pusha
orl
add
das
ror
sbb
fstl
das
jo
adc
ret
ja
das
xor
add
aaa
inc
das
cmp
pop
sti
sbb
or
fildl
xor
xor
xor
repnz
test
enter
and
cmpsl
mov
mov
addl
andl
pop
aaa
adc
addl
adc
pmaxsw
or
or
rcrb
in
rorl
mov
andl
fld
stos
call
mov
fadds
xor
ds
jne
inc
and
inc
andl
or
xchg
mov
loope
xchg
adc
daa
pop
xchg
or
add
pop
out
pop
push
push
movsb
jo
bound
adc
cmc
pop
ja
push
push
enter
ja
lods
adc
loopne
xor
sub
loop
ja
sub
lret
arpl
out
scas
outsb
cmpb
xchg
or
adc
sub
sbb
ret
adc
leave
mov
inc
sbb
sbb
dec
xchg
mov
dec
pop
or
sub
jge
cmp
xchg
cmc
cmc
push
andl
je
xor
push
or
adc
rorl
push
inc
mov
mov
pop
sbb
pop
sub
jbe
lods
sti
and
mov
sbb
or
bound
dec
mov
cmp
adc
mov
sub
mov
or
lret
cmp
ja
xchg
or
nop
orb
dec
aas
in
adc
jo
push
jge
and
pop
inc
pop
call
or
sahf
push
xchg
fs
and
je
inc
pop
mov
push
call
es
or
rol
inc
sbb
dec
or
add
adc
inc
push
les
negb
or
sub
adc
and
sbb
inc
inc
rorl
push
mov
stc
inc
sbb
push
push
or
or
dec
test
popl
das
insl
inc
jg
inc
or
sbbl
or
dec
adc
adc
mov
lahf
sbb
adc
adc
inc
mov
mov
mov
or
sbb
and
mov
xchg
xchg
xchg
inc
sbb
sbb
adc
dec
or
repz
mov
inc
sub
frstor
cmp
mov
push
xchg
orb
xor
xor
add
add
mov
add
sarl
andb
and
cltd
or
push
ds
notl
nop
jae
inc
mov
dec
inc
mov
inc
dec
pop
leave
xchg
dec
ja
dec
call
rolb
inc
xchg
movsl
pop
into
test
cltd
jo
mov
sbb
ss
shlb
mov
andb
cmpsl
jae
xchg
test
sbbl
pop
xchg
and
cmp
nop
jne
stos
mov
rolb
hlt
lret
add
push
outsb
aam
pop
dec
imull
cs
xchg
fs
sahf
out
sahf
pop
push
dec
inc
cmp
add
add
jns
orl
jmp
pop
sbb
lret
jne
pop
int3
and
ja
roll
or
jns
nop
xor
push
push
jl
mov
pop
mov
pop
repz
outsb
xorl
mov
lock
add
push
xchg
jo
pop
inc
pop
out
outsl
sub
xor
inc
pop
cli
inc
shrb
xchg
mov
jo
xlat
mov
jns
sbb
mov
cmp
rcl
xor
push
nop
add
sbb
inc
into
mov
jns
sbb
hlt
sub
sbb
push
adc
cmp
jns
adc
xchg
push
xor
dec
data16
pop
pop
pusha
mov
pop
or
pusha
hlt
push
hlt
adc
stos
pop
cwtl
pusha
stos
lds
cmpsl
ret
out
test
adcl
adc
sub
nop
cmpsb
jns
sub
sub
xchg
add
rcrl
sub
sub
and
xor
sub
sub
lret
sub
sub
sbb
int
cmp
sub
sub
xchg
xor
sub
xor
sub
sub
sub
sub
sub
imul
dec
shrl
sub
xchg
push
and
test
xchg
mov
or
mov
add
jp
or
cmpsb
inc
repz
jns
mov
loopne
je
push
mov
js
jae
out
inc
fistl
stc
push
es
pop
jmp
lret
scas
mov
add
push
sahf
sbb
cltd
lret
addr16
sub
mov
sub
outsb
inc
psubsb
push
inc
or
inc
shrb
punpckldq
or
inc
sub
call
inc
repz
mov
inc
sub
adc
mov
adc
mov
sub
rolb
es
jo
ds
loop
sub
inc
iret
push
xchg
mov
inc
nop
adc
add
push
inc
cmpb
sarb
iret
add
shll
adc
mov
sub
je
mov
aas
and
xchg
mov
test
je
sub
push
add
or
mov
loopne
inc
bound
or
inc
mov
nop
jae
adc
sub
call
es
les
inc
lret
test
mov
lcall
shlb
hlt
rolb
jns
mov
mov
test
cld
add
cmp
adc
pop
out
adc
aaa
push
ret
and
xchg
mov
xchg
inc
jns
pop
or
xchg
sub
push
js
ds
mov
roll
xor
xchg
fdivrs
pushf
shlb
push
xor
outsb
cwtl
dec
jns
sbb
pop
mov
mov
outsl
sbb
push
sub
sbb
js
sub
daa
and
pusha
sub
sbb
inc
jb
andb
add
inc
ret
jns
xchg
mov
sahf
ljmp
es
pop
jns
pop
or
push
scas
test
sub
dec
adc
aam
aam
and
push
push
cmpsl
cmp
movsl
shlb
mov
xor
mov
cmpsl
sub
into
sbbb
addb
sub
dec
push
or
gs
jo
dec
cmpsl
and
sub
inc
mov
clc
cmpsl
enter
jp
iret
mov
xor
mov
mov
pop
aam
cmpsl
aam
pop
aam
push
cmpsl
jo
push
ja
andb
mov
inc
cmpsl
mov
cmp
fdivrs
mov
cmp
in
fiadds
adc
mov
mov
inc
xchg
add
daa
loopne
mov
pop
in
xor
adc
add
inc
call
enter
and
mov
and
mov
test
dec
mov
xor
call
test
shll
mov
test
inc
xor
lea
and
enter
or
or
aaa
or
or
sti
add
pushf
popf
out
dec
nop
mov
mov
mov
mov
and
jne
inc
movsb
cmp
outsb
xorb
push
mov
push
mov
and
jmp
mov
pusha
push
movsb
add
mov
mov
inc
jb
enter
add
push
test
inc
mov
or
xorb
inc
mov
movsl
data16
fiaddl
pop
adc
test
xorl
mov
pop
jl
hlt
sahf
mov
adc
sbb
xor
pushf
adc
add
dec
aam
negl
mov
loope
pusha
xorb
shlb
cmp
js
mov
stos
hlt
mov
and
and
cltd
sbb
xor
and
and
cmp
inc
cmp
and
and
sbb
pop
cmp
mov
xorb
and
and
and
dec
nop
mov
jo
mov
cmp
outsl
adc
enter
inc
pop
lds
mov
ret
add
jbe
call
jne
lea
push
flds
cmp
movsb
aad
std
jo
movsb
repz
inc
aam
jns
fstpl
sbb
test
aam
scas
sub
or
jb
aad
aad
jno
pushf
mov
mov
jmp
cmp
imul
pop
scas
or
inc
push
ja
in
xor
pop
movsb
pop
nop
arpl
pop
xor
pop
call
out
outsb
je
push
and
sub
aad
inc
lahf
nop
adc
enter
sub
inc
aad
cld
xchg
push
repnz
xlat
add
cmp
dec
lahf
or
pop
sbb
inc
add
cmpsl
mov
fisubs
ficoms
mov
mov
push
and
mov
or
repz
adc
pop
mov
mov
hlt
or
add
sub
add
mov
xchg
cmp
fisttpll
and
xor
sub
push
mov
daa
and
arpl
or
mov
les
lock
cmp
mov
dec
lock
pop
nop
jnp
xor
push
lret
mov
xchg
xchg
push
cmp
scas
mov
pop
fmull
rorl
adc
fs
and
fistpl
orl
add
aaa
and
loope
and
jecxz
adc
sbbl
das
shl
repnz
mov
xor
pop
nop
mov
or
in
xorb
push
xchg
leave
sub
mov
jo
dec
xchg
jne
cmp
xchg
roll
adc
inc
arpl
loopne
xor
call
jne
mov
stc
ljmp
pop
xor
push
stc
pop
xor
dec
mov
sub
dec
push
push
fdivs
mov
fcoml
stos
mov
stc
aas
mov
sar
pop
inc
and
cmpsl
inc
pop
xor
push
stc
lret
mov
xchg
cmp
dec
push
call
sbb
pop
stc
xchg
call
mov
adc
fstp
pop
lea
psubb
leave
out
xlat
test
xlat
or
clc
daa
adc
ljmp
jmp
daa
fnstsw
icebp
fcoml
sub
out
push
push
mov
jmp
iret
xor
movsb
jmp
mov
pop
aaa
xchg
jno
lcall
je
add
fcmovnu
fstpt
mov
enter
add
aas
enter
mov
icebp
sbb
inc
aas
adc
sbb
iret
aam
xchg
pushf
push
outsl
adc
inc
test
mov
push
ds
dec
popa
add
pop
or
sbb
sbb
add
cmc
sub
negl
das
jmp
sbb
ret
call
and
push
in
and
fdiv
je
mov
lret
jge
mov
inc
cld
push
iret
adc
xchg
js
jl
adcb
push
test
sbbb
lods
sarl
cwtl
andb
inc
or
sbb
hlt
shll
repnz
lock
mov
lret
rol
sub
fldl
dec
push
sarb
mov
stos
shll
add
shrl
cli
lret
cmp
pop
pushf
pop
xchg
pop
rcrl
sbb
shrl
stc
shl
mov
mov
sbb
cmp
or
fld
jne
xchg
inc
lea
nop
flds
adc
addr16
or
sub
mov
stos
or
inc
inc
inc
call
xor
jb
adc
xchg
pop
cmp
xchg
push
fsubrs
jne
adc
pop
mov
lahf
int3
jne
xor
xor
jb
pop
adc
sarb
fcompl
into
imul
or
or
movlps
fcoml
adc
adc
push
add
sbb
sub
add
sbb
lahf
enter
adc
add
xchg
inc
jp
fstps
aam
roll
flds
dec
pop
sarl
repnz
shll
fcomp
shlb
xchg
sub
or
movsl
shrb
mov
cmp
xor
add
sbb
adc
adc
xchg
add
sub
adc
mov
and
flds
dec
movlps
inc
mov
sub
das
mov
imul
es
adc
sub
outsb
rcl
loop
adc
lea
add
mov
inc
adc
test
dec
adc
sub
inc
movsl
movsl
mov
adc
and
adc
hlt
mov
or
push
call
test
mov
inc
cli
imul
sub
mov
fcoml
bound
imul
push
mov
push
adc
jnp
in
dec
cmpsb
stos
dec
sbb
xlat
push
daa
mov
test
popf
cmpsb
fcoml
push
lret
pop
adc
mov
in
ds
dec
adc
adc
and
dec
in
dec
hlt
stos
push
dec
cmp
sub
xlat
mov
push
dec
sarb
mov
dec
out
das
lcall
mov
dec
pop
insb
push
cmc
stos
push
cmc
add
mov
mov
xchg
xor
cmp
outsl
pop
les
lds
jb
jb
lds
fdivl
or
mov
sbb
mov
sahf
in
jne
cmp
adc
test
loopne
mov
push
in
pop
sbb
push
in
pop
xor
andl
negb
ljmp
scas
pop
aaa
pop
enter
repz
lods
jno
sbb
pop
mov
cmp
jne
pushf
loop
fcoml
pop
push
mov
aaa
sub
push
xchg
inc
outsb
ret
pop
xchg
in
or
aad
rcrb
pop
push
xchg
sub
inc
aaa
test
mov
pop
pop
mov
jmp
pop
sbb
mov
jno
jb
pop
jp
loope
mov
mov
push
or
outsb
push
aaa
jne
lods
sub
mov
mov
pop
mov
mov
pop
mov
jmp
test
aad
lret
hlt
jmpw
aam
imul
add
enter
mov
lret
aam
pop
and
lret
inc
sub
cmp
pop
test
jle
inc
cs
dec
or
iret
rorb
push
and
mov
pop
or
sbb
pop
pop
enter
cs
adc
js
pop
call
push
loopne
dec
mov
leave
jecxz
int3
and
adc
stc
xchg
mov
lret
pop
or
push
bound
mov
mov
mov
mov
sbb
adc
sti
mov
lock
fcoms
sarb
mov
mov
mov
xchg
xchg
mov
cmpb
mov
and
cmp
push
mov
nop
sbbl
mov
enter
adc
in
pop
cmp
mov
repnz
sbbl
lds
inc
push
lods
mov
sbb
and
mov
push
jb
subl
mov
enter
ds
in
sub
push
repnz
mov
and
cmp
out
mov
nop
sbbl
mov
enter
lods
mov
in
pop
cmp
mov
push
pop
mov
inc
push
inc
mov
and
and
and
dec
rorb
or
mov
hlt
and
or
and
lcall
out
in
or
mov
nop
pop
or
data16
mov
add
adc
lcall
push
sbb
imul
data16
adc
and
inc
dec
lcall
movsb
mov
mov
data16
inc
xor
lcall
ret
mov
and
sbb
dec
inc
lock
push
adc
mov
dec
test
rol
push
adc
sbb
xor
jo
out
add
sbb
sub
js
mov
mov
stc
dec
leave
and
sub
mov
jge
dec
push
or
sub
or
subl
sub
data16
inc
cmova
push
mov
leave
dec
sti
testl
xor
aas
pop
scas
daa
inc
fst
aas
inc
sub
lcall
push
sub
inc
int3
addb
add
push
pop
or
aam
imul
imul
cmp
out
and
test
scas
out
inc
xchg
into
ss
and
sub
mov
or
out
jmp
and
jo
sbb
addr16
xchg
movsl
outsl
cmp
push
or
out
xor
fs
js
mov
out
mov
fs
gs
nop
movsl
add
ljmp
push
out
and
jb
dec
aam
out
fbld
out
leave
shlb
sbb
je
out
mov
dec
out
cmpsb
sub
push
xchg
jle
leave
pop
xchg
outsb
pop
xchg
out
cmp
and
loopne
inc
out
xor
enter
scas
cmp
inc
ret
sub
mull
out
xor
jmp
lods
mov
and
and
dec
imul
and
and
scas
sbb
push
pop
out
mov
sub
xor
sbb
addl
mov
in
mov
dec
or
lret
fisubl
dec
ja
out
mov
shr
scas
mov
and
sub
out
mov
ds
push
js
sub
pop
out
xor
inc
xchg
outsb
and
sbb
jbe
ljmp
and
add
out
pop
mov
inc
loopne
jae
push
inc
sbb
out
sub
mov
cmp
mov
add
out
nop
movsl
xlat
adc
hlt
arpl
jns
xchg
pushf
shrb
int3
fsubrs
mov
ja
pop
cld
sub
adc
cld
sub
cmpsl
dec
sbb
push
push
out
xchg
and
mov
sti
sub
ljmp
jmp
sbb
pop
mov
jge
inc
xchg
outsb
ss
mov
out
fldcw
loope
sbb
xchg
lods
cmp
adc
out
push
adc
nop
dec
les
xchg
xlat
and
cmovo
pop
xor
dec
sbb
xchg
mulps
sbb
add
enter
dec
aaa
mov
jo
or
out
cmp
mov
out
in
sub
data16
xlat
and
lret
xor
arpl
xchg
add
adc
addl
jnp
call
je
nop
stos
inc
xchg
into
test
sbbl
inc
cmp
popa
aas
fs
jle
sub
xchg
aad
dec
out
stos
inc
xchg
mov
mov
cs
jbe
push
std
ds
inc
xchg
outsb
or
nop
movsl
cmpsl
test
xchg
or
mov
push
adcb
or
xor
enter
dec
aaa
jne
out
ss
rorb
and
mov
pop
pop
jno
out
cmc
or
out
shrb
pop
jno
xchg
or
out
andl
lea
loopne,pn
and
sub
inc
out
sbb
aad
fs
sub
sub
out
stos
rol
push
jo
out
das
xchg
repnz
xchg
sbb
je
out
rcrb
shr
nop
and
dec
or
and
and
adcb
aad
jmp
movsl
out
jne
sbb
adc
out
cmp
add
popf
nop
mov
inc
or
out
xlat
and
in
add
dec
loop
sbb
out
andb
cmpsl
test
out
fs
movsl
xchg
jg
mov
out
push
stos
roll
enter
mov
nop
movsl
out
pop
loopne
movsl
add
out
xchg
sbb
cs
xchg
xchg
repnz
mov
jno
adc
sbb
nop
out
faddp
jne
rorb
enter
mov
or
fs
lahf
loope
test
dec
adc
ja
inc
xchg
jb
inc
enter
out
lods
and
shl
popl
popw
shlb
dec
out
xchg
pause
movsl
or
out
mov
nop
movsl
out
sbb
out
mov
pop
inc
inc
out
jo
mov
in
dec
addl
int3
repnz
mov
and
lcall
andb
adc
xor
adc
mov
mov
call
lds
movsl
pop
iret
mov
xchg
movsl
mov
cmpb
add
testl
clc
xchg
adcb
mov
add
mov
push
pop
scas
ret
addr16
lcall
mov
or
cmp
aaa
cwtl
adc
xchg
jne
popf
in
mov
xor
pop
adcl
inc
mov
lock
push
cltd
push
push
or
cmp
add
testl
add
cmpsb
jnp
scas
pop
push
xchg
jmp
lcall
mov
cmp
xor
sbb
dec
cs
pusha
jo
sahf
out
cmp
in
add
adc
jns
out
push
bound
mov
jns
out
cmpsb
mov
xor
out
add
cmp
repz
test
iret
repz
or
push
out
sahf
out
ds
pop
data16
out
sahf
jo
cwtl
scas
loopne
dec
repz
push
stos
and
repz
repz
pusha
insb
jbe
sub
iret
xchg
movsb
mov
mov
repnz
lea
or
adc
push
int
xor
and
ljmpw
sbb
jns
repz
fcoms
sbb
aad
outsb
repz
repz
jl
push
clc
mov
insl
sbb
mov
push
insl
inc
mov
aaa
pop
add
inc
es
mov
adc
clc
push
mov
sahf
testl
mov
sarl
das
push
adc
xchg
sbb
imul
xchg
js
out
sahf
sbb
sbb
mov
int
push
pop
sahf
mov
and
and
repz
pop
cmpb
sbb
out
ds
cmp
loop
jno
push
push
cwtl
rclb
or
imull
adcb
adc
test
roll
and
xchg
or
out
push
xor
sbb
add
cmp
repz
xchg
hlt
call
cmp
aam
enter
cmp
repz
mov
movsb
mov
pushf
cwtl
xchg
nop
mov
repz
mov
iret
repz
insb
push
iret
repz
pop
push
push
dec
iret
repz
dec
inc
inc
cmp
xor
iret
repz
sub
sbb
jns
out
or
nop
in
out
sahf
out
test
cmp
sarl
shlb
repz
dec
inc
xor
jns
iret
add
mov
int3
lods
int
jns
test
in
enter
cmp
js
xor
outsl
sbb
add
in
mov
mov
push
add
inc
sub
mov
sub
push
inc
inc
add
add
pop
push
notl
xor
push
push
add
call
pop
xor
cmp
sub
fwait
lods
out
mov
ja
stc
cs
ss
inc
sub
iret
sti
adc
xor
popa
out
fmuls
das
sbb
daa
xor
notb
xchg
int
add
mov
mov
jnp
and
push
mov
inc
add
outsl
mov
iret
test
in
pop
pop
mov
test
lcall
push
pop
pop
adc
mov
ficompl
shll
add
xor
test
call
push
jl
jb
jno
push
cltd
nop
adc
ja
aas
jb
rolb
fadds
cmp
jge
xor
push
adc
and
push
pop
pop
inc
lods
push
cmp
inc
out
aas
adc
sbb
insb
dec
mov
jg
dec
mov
rorl
push
aas
cmp
mov
cmpsl
stos
xorb
fsubl
adc
push
dec
sar
dec
sbb
movsb
iret
jg
cltd
test
or
unpckhps
mov
adc
xchg
cmp
in
add
imul
adc
xchg
nop
imul
xchg
jne
popa
pop
jbe
mov
adcb
pop
les
test
add
fwait
sbb
outsb
pop
sti
faddp
jbe
jecxz
outsb
iret
jb
jbe,pn
psubusw
ds
sub
jmp
movsl
add
and
jbe
sub
push
jle
cmp
sbb
cmc
andb
shrl
xchg
cmpsl
daa
scas
cld
adcb
loopne
sbb
aam
pop
inc
scas
adc
inc
aas
outsl
jne
xchg
jl
xor
push
push
arpl
cmp
cmpsl
mov
outsl
and
fisttpl
pop
inc
loop
mov
pusha
data16
mov
add
mov
adc
push
jecxz
inc
xor
fbstp
rorb
scas
or
add
inc
lret
lret
sbb
sbb
lea
aaa
sub
sbb
add
dec
dec
xor
and
imul
sub
mov
mov
lea
iret
inc
aaa
lea
xlat
rcrl
ss
inc
arpl
jae
rcrl
xor
jno
sbb
rcrl
jno
sbb
aas
inc
inc
and
pop
jo
sbb
xchg
roll
inc
rorl
inc
and
rcrl
adc
imul
xor
shll
fcomps
inc
popa
arpl
rorb
lea
xor
xor
lcall
jo
pop
xchg
shrl
xorl
es
cwtl
mov
mov
add
jbe
sub
imul
mov
pop
pop
cmp
or
add
incb
inc
xchg
movsb
xchg
repz
or
xchg
iret
repz
nop
mov
idivl
push
pop
dec
inc
inc
out
sahf
out
cmp
sub
out
sahf
sub
sbb
adc
repz
cld
xchg
hlt
xchg
in
push
in
sahf
out
push
enter
jns
out
test
mov
inc
sbb
push
insb
push
cmpsl
mov
dec
mov
push
jns
jnp
and
add
in
xchg
push
enter
out
mov
out
sahf
cwtl
nop
mov
cmp
repz
sarl
and
adc
lock
loopne
repz
int3
mov
inc
sub
cmp
dec
mov
adc
dec
pop
lret
add
dec
jnp
dec
lock
xor
sahf
push
test
sbb
sub
cs
jo
sbb
push
add
test
movl
bound
leave
fildll
pop
jg
in
pop
enter
dec
sub
cmpsl
lcall
cs
sbb
js
cmpsl
mov
lods
push
aas
rcr
inc
aam
aas
or
je
rorl
cmp
clc
add
loopne
xor
mov
mov
call
mov
iret
xor
xor
sahf
ljmp
fs
xor
rclb
xchg
xor
xor
aaa
fbstp
or
push
sbb
mov
fistpll
sti
cmp
cmp
notb
cmp
bound
mov
mov
cmp
or
incl
sahf
fdivrs
bound
cmp
xchg
test
lahf
cmp
mov
and
call
clc
pop
ds
data16
aas
fs
imul
aas
jecxz
call
aas
icebp
xchg
mov
and
sub
popa
cld
pop
inc
inc
xor
mov
or
lds
out
jno
mov
push
out
xor
mov
xor
xor
and
daa
xor
cmp
inc
xor
push
xor
imul
xor
aad
ja
lea
xchg
xor
xor
xor
enter
push
test
mov
xchg
xor
xor
adc
sbb
sbb
sub
das
mov
sub
sub
xor
xorb
xor
xor
xor
xor
xor
xor
xor
xor
lcall
push
mov
mov
mov
xor
xor
xor
xor
xor
and
sub
jp
mov
xorl
out
push
jecxz
push
sbb
aaa
cmp
insb
cmp
popa
dec
or
jl
mov
adc
sbb
sbb
and
and
sub
xor
jp
mov
aas
xchg
repnz
cmp
rolb
cmp
test
push
arpl
ret
ss
dec
cmp
cmp
cmp
inc
idivb
mov
adc
add
pop
cmp
xor
cmp
mov
cmp
add
dec
ds
ds
cmp
dec
nop
icebp
xchg
xor
leave
mov
in
aas
repnz
and
inc
xor
fisubs
jecxz
xor
xor
xor
jle
xor
inc
sbb
lods
repnz
xor
aam
fimull
daa
mov
in
dec
xor
cmpsl
repz
loope
popa
add
test
lret
push
add
sbb
mov
mov
shll
jecxz
aaa
in
outsb
pop
xchg
sub
pop
push
cmp
inc
js
jle
xchg
xor
mov
ret
bound
nop
in
adc
xor
xchg
cmp
idivb
or
ret
cmp
cmp
lea
sbb
push
cmp
sbb
cmp
jnp
subb
cmp
cmp
call
lret
cmp
or
in
jmp
lock
push
add
cmp
xchg
xor
xor
movl
insb
cmp
cmp
cmp
cmp
cmp
sub
or
push
ds
ds
clc
es
adc
and
aam
clc
aas
dec
aas
push
aas
or
jno
mov
xor
jno
test
push
out
xchg
clc
xor
inc
daa
push
aaa
jg
mov
mov
xor
xor
shlb
inc
xor
icebp
fcomip
xor
mov
test
cli
xor
dec
sbb
adc
and
inc
ss
aaa
jnp
mov
mov
add
or
cmp
outsb
xchg
rcl
inc
adcb
bound
mov
mov
inc
cmp
jle
pop
push
mov
mov
pop
cmp
outsl
lock
add
inc
sub
jno
ja
sbb
jg
or
cmp
cmp
cmp
cmp
cmp
scas
xchg
cmp
cmp
pop
sbb
cmp
cmp
cmp
sbbb
sub
sbb
cmp
adc
jg
dec
xor
lock
xor
adc
xor
mov
push
cmpsb
xor
xor
cld
decl
add
xor
xor
mov
out
popa
cld
jg
adc
sbb
das
ss
mov
mov
aaa
pop
jno
mov
dec
pop
cmp
push
mov
lret
outsl
test
idivl
cmp
cmp
ljmp
push
mov
bound
imul
cmp
cmpsb
cmp
cmp
mov
pushf
cmp
cmp
cmp
aas
iret
aas
loope
xchg
js
scas
pusha
add
clc
ljmp
xor
xor
test
xchg
mov
test
icebp
xor
xor
push
push
cmpsb
scas
or
push
mov
hlt
xor
fs
ss
ss
aaa
gs
cmp
cmp
cmp
push
and
sub
and
icebp
stos
pop
pop
out
mov
xor
out
adc
fs
push
out
test
cmp
xchg
into
sub
pop
mov
cmp
jb
jnp
push
outsb
mov
lcall
jl
test
or
or
adc
aas
jl
mov
mov
xor
je
jl
orb
sbb
nop
sbb
mov
mov
lcall
mov
outsb
sbb
lret
sbb
mov
data16
fmuls
add
stc
int3
mov
sbb
out
pusha
enter
scas
push
sbb
mov
xor
add
add
inc
inc
orl
xor
int3
xor
out
orl
call
cmpb
or
adc
xor
clc
stos
dec
dec
cmp
inc
xor
xchg
aaa
cmp
push
xor
pop
xor
push
inc
mov
insb
push
je
pushl
mov
xor
movsb
ds
orl
shlb
mov
push
xor
shlb
pop
pop
inc
fsubs
lods
pop
xchg
je
js
adc
pushl
or
scas
sahf
add
jle
jp
sbb
add
pusha
push
lahf
push
push
xchg
jbe
mov
int3
xor
enter
xor
mov
sbb
lret
fmull
js
pop
daa
cwtl
out
fsubrs
mov
mov
xor
xor
xchg
cwtl
xor
xor
jnp
and
pop
insl
loop
xor
xchg
lea
out
xor
xor
movsb
xor
sbb
xor
push
cmp
sbb
stos
mov
push
ret
sbb
daa
pop
mov
popl
in
xor
dec
xor
sbbl
add
sbb
jb
sub
add
xor
cld
cmp
loopne
addl
lcall
mov
jo
js
jl
xorb
mov
xor
inc
clc
inc
rcll
lods
addr16
sbb
and
test
xchg
stos
dec
pop
xlat
mov
mov
sbb
pop
loope
pop
jo
nop
ljmp
xchg
movsb
push
and
fdivr
add
add
inc
cmp
mov
jo
add
add
fstpt
add
or
pop
pop
push
or
or
or
or
or
adc
adc
push
adc
mov
add
pop
sbb
adc
adc
adc
add
mov
or
adc
pop
adc
push
hlt
cmpb
rolb
or
xchg
add
adc
add
add
mov
inc
mov
jb
testl
add
add
fcos
incl
adc
pop
and
xor
inc
mov
adc
xor
cmpb
mov
and
mov
pop
push
push
nop
push
or
icebp
jecxz
push
sbb
xor
mov
stos
mov
xchg
dec
and
sbb
out
and
mov
scas
cmp
adc
loopne
mov
push
pop
popa
jno
and
adc
mov
subl
jle
and
push
lock
loope
icebp
mov
add
or
mov
pusha
and
add
js
or
ret
or
incl
sbb
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
loop
pushl
lahf
mov
movsl
jecxz
cli
pop
mov
decl
push
stc
or
xchg
jg
or
insb
sub
addr16
out
or
ljmp
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
mov
outsl
xchg
aad
add
sbb
int3
lcall
mov
push
pop
push
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
pushl
scas
xchg
test
aam
and
sbb
sarl
and
rcr
incl
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
pop
outsl
in
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
lcall
mov
pop
cwtl
int
arpl
push
out
or
lret
cmp
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
lock
outsl
xchg
add
ljmp
fidivl
mov
or
push
mov
sub
pop
mov
jl
rorl
shll
pop
jg
hlt
push
fcmovnu
add
stc
loope
mov
sar
andl
aas
icebp
testb
mov
inc
imul
scas
fadds
in
sub
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
decl
sbb
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
into
andl
aas
loopne
cli
adc
outsl
decb
xchg
in
add
inc
adc
loope
fisttpll
mov
fsubp
icebp
aas
std
cli
push
push
push
idivl
cmp
ljmp
jle
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
stc
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
ds
decl
push
scas
cmpsb
orb
mov
imul
stos
or
js,pn
jmp
xchg
pop
clc
pop
hlt
lret
push
shll
movsb
add
lea
jg
gs
std
aas
pop
incl
shrl
addr16
adc
ret
das
pop
pop
pop
shlb
insl
pusha
fucom
out
sarb
sbbl
jno
or
sarb
ljmp
push
cli
mov
mov
inc
arpl
stos
mov
and
insl
incl
sbb
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
repnz
push
fcomps
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
call
cmpsl
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
pushl
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
cmp
add
ret
fcmovu
ds
cmpsl
scas
popa
in
pop
ljmp
dec
xchg
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
test
dec
jb
adc
xchg
and
push
push
jo
pusha
imul
add
mov
call
imul
daa
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
jmp
add
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
mov
call
adc
pop
cld
addl
adc
and
ds
cmp
fmull
enter
jecxz
scas
jg
jg
sub
in
pop
mov
sub
mov
dec
incb
outsb
mov
aas
mov
or
cld
inc
or
in
pop
cmpsb
push
pop
jg
add
jg
mov
outsb
jg
aad
test
mov
mov
iret
cmp
jg
push
jbe
push
sbb
stos
icebp
pop
incb
jno
insl
lcall
sub
push
inc
jecxz
sbb
sarl
adc
fdiv
cs
clc
xorl
inc
cmp
push
or
test
loopne
add
mov
fsubrl
pop
pusha
inc
fcomi
push
and
clc
lcall
adc
xchg
pushf
mov
repnz
and
mov
adc
jnp
add
loope
aas
push
rcrl
rcr
addr16
incl
pop
inc
jb
fistpl
adc
call
jno
pop
pushl
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
aas
cld
jmp
sbb
or
imul
xor
dec
xor
fsubr
fistps
mov
jg
jg
stos
pop
sahf
incl
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
jmp
inc
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
or
cmp
mov
sti
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
or
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
insb
add
call
xchg
aad
loop
lahf
mov
or
out
lcall
fisttpl
shl
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
lcall
jg
adc
xor
pop
rcr
dec
mov
gs
pushf
lea
aad
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
ljmp
fisttpll
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
sti
iret
mov
lock
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
jg
es
xchg
fidivrs
clc
mov
xor
test
aas
repz
sbb
lock
in
jmp
lock
add
out
sbb
aaa
clc
push
std
mov
sbb
test
jg
lds
dec
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
jg
mov
loopne
test
out
rolb
pop
or
or
fildl
mov
lods
movsb
or
bnd
aas
fiaddl
pushf
imul
jl
outsl
das
or
jno
lret
pop
in
jg
aad
cmp
jmp
mov
pop
lock
popf
jmp
hlt
dec
mov
xlat
inc
incl
mov
jg
mov
sub
addr16
std
pop
mov
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
cld
stos
jle
nop
cmp
das
incb
lock
pop
pop
div
cld
testl
mov
stc
lahf
loope
jae
jmp
add
mov
sar
mov
add
out
icebp
mov
loope
mov
fdiv
mov
sti
mov
fbstp
jb
adc
das
cmpsb
pop
mov
jge
out
xorb
int
call
xor
decb
mov
xor
dec
or
mov
sub
popf
dec
or
lock
and
int
add
enter
push
pop
aaa
std
fisttps
outsl
js
dec
inc
sbb
xchg
fimull
hlt
orb
ror
sbb
cmp
xor
aaa
inc
adc
pop
lds
aas
pop
clc
loope
loope
mov
xchg
push
inc
lahf
jp
dec
add
xlat
shll
je
xchg
fldenv
iret
movsb
or
xchg
lcall
decb
mov
loop
dec
and
out
jg
jno
ret
xchg
xor
out
cmp
xor
shll
out
inc
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
call
outsl
jmp
test
lcall
std
mov
daa
jmp
faddl
mov
add
xor
push
imul
pop
stc
push
dec
out
fstpt
es
mov
mov
enter
jo
lahf
add
fsts
dec
jg
xchg
jl
add
sti
push
sti
pop
inc
xor
sbb
push
push
push
push
mov
test
mov
xor
add
aaa
insl
xorl
adc
push
fcos
ljmp
mov
lahf
add
daa
inc
imul
dec
stos
xchg
push
insb
sar
call
jno
dec
outsl
out
jbe
pop
std
pop
lock
es
aam
mov
mov
jmp
inc
decl
lahf
and
movsb
mov
mov
mov
mov
fcompl
test
addr16
dec
pop
addr16
in
stc
pop
mov
fidivl
call
adc
call
or
jb
stos
push
adc
and
cmp
mov
mov
fsubs
shl
mov
lret
arpl
daa
loop
clc
pushl
out
lcall
icebp
and
pcmpgtb
iret
push
mov
fdivrs
add
xlat
cli
call
cld
add
inc
pop
jg
sub
pop
loopne
mov
cmp
dec
add
into
mov
in
fiaddl
sbb
or
test
inc
jle
outsl
push
les
popl
mov
es
sbb
lcall
mov
insb
scas
jge
add
inc
gs
inc
nop
mov
int
xlat
cltd
mov
les
int3
jge
cmp
xchg
mov
je
sti
pop
xor
out
sub
insb
mov
dec
push
lcall
pushl
sub
push
lret
repz
or
cmpsl
sub
mov
add
aas
add
cmp
orb
outsb
sti
dec
mov
scas
adc
lods
mov
push
sbb
mov
push
jg
aaa
jmp
std
cmp
or
xchg
push
mov
pop
or
decl
cmpsb
push
jecxz
inc
loopne
test
inc
inc
arpl
dec
dec
pop
fildl
lret
lds
jmp
movsb
lods
ljmp
mov
xor
cmpsl
xchg
iret
lock
stos
das
shl
daa
call
add
fs
out
fst
je
pop
jae
xor
lahf
lahf
es
mov
pop
push
lcall
into
pop
cs
pop
test
or
sub
outsb
xchg
icebp
ret
mov
int3
test
dec
lods
mov
xor
ds
aas
test
addb
js
mov
add
ljmp
xchg
push
in
data16
and
mov
jne
pop
adc
ljmp
mov
cwtl
fidivrl
jecxz
jns
popf
pushl
cmpsb
lahf
adc
aad
sti
lds
in
mov
xchg
push
sahf
jmp
push
shr
dec
aas
jno
imul
mov
in
pop
shlb
xbegin
icebp
pusha
sub
mov
adc
dec
push
ret
repz
loope
mov
mov
mov
fisttpll
jo
test
jecxz
sbb
call
jno
xor
test
push
ret
std
jg
push
push
jae
jb
xor
in
lret
push
adc
int
sahf
mov
push
stos
int3
push
and
xchg
xlat
js
adc
and
test
dec
repz
jl
movsb
push
and
lcall
add
sbb
sub
dec
cwtl
push
aaa
insb
xor
shl
cmp
jle
ficoml
push
push
mov
add
cmp
xchg
mov
mov
mov
mov
incl
or
loope
ret
pop
jecxz
and
into
adc
cmpb
cld
incl
push
xchg
pop
lret
ss
fwait
aam
insl
dec
dec
jnp
cmp
in
imul
call
push
popl
xchg
ficoml
idivb
repz
mov
mov
jle
jno
inc
bound
xchg
xor
jmp
int3
xor
fisttpll
std
adcl
sbb
jmp
push
sub
and
sbb
pop
dec
mov
cmp
jle
sub
cld
das
cli
pushl
mov
call
sbb
mov
adc
int3
jbe
or
cmp
and
decl
jp
jl
mov
pop
pop
dec
dec
push
cmp
push
dec
jle
stos
xchg
mov
loop
rcr
push
out
cmpsl
lock
cmp
data16
dec
mov
ja
incl
jns
iret
mov
decl
jle
fs
aas
fidivrs
push
movsb
push
pop
jmp
sbb
sarb
mov
ss
dec
sahf
mov
jo
or
fistpl
adc
cmc
cmc
setl
cmpl
ret
adc
cmp
jbe
das
dec
dec
andb
scas
cli
cmp
pop
push
icebp
jo
mov
cmp
inc
xchg
testb
mov
incl
nop
jg
lods
lds
lret
ljmp
filds
call
xor
pop
stos
ds
push
sbb
mov
call
xor
pop
mov
inc
adc
mov
ds
or
mov
cmp
mov
lods
mov
aas
loope
cmc
push
xor
pop
or
dec
jb
pop
out
lcall
mov
je
test
add
fmulp
mov
pop
jo
xor
addr16
decl
inc
mov
pusha
push
cmp
mov
sarb
dec
lea
stc
pop
or
arpl
imul
push
inc
inc
mov
aam
adc
add
sbb
loope
pop
jnp
pushl
dec
pop
push
mov
fistpll
inc
cli
add
cmp
inc
jmp
incl
lret
test
stc
imul
jmp
adc
loopne
out
jno
cmp
subl
dec
mov
inc
dec
daa
mov
cmpsb
jp
dec
push
push
call
idivb
inc
lret
add
and
xor
dec
pop
pop
push
mov
incl
daa
mov
or
mov
sbb
mov
lret
stc
insb
mov
add
xor
ljmp
mov
push
shrl
sub
and
jge
inc
add
jns
sub
xchg
mov
lcall
out
fcomi
or
lcall
pop
mov
pushl
pop
inc
dec
outsl
out
xchg
push
js
nop
cmpsb
sbb
xchg
out
ja
mov
in
jb
jmp
jmp
xchg
in
incl
pop
pusha
std
jno
dec
sbb
xor
mov
fcmovnbe
mov
fnstsw
fucomp
or
xor
cld
dec
dec
dec
incl
cld
lcall
arpl
hlt
cmp
adc
incl
lods
mov
jb
mov
mov
cmpsb
dec
movsb
stos
call
ljmp
cld
adcl
aam
cmp
adc
out
adcl
ret
rorl
mov
jge
xor
loope
out
mov
mov
fnsave
cmp
jmp
fstps
inc
adc
pop
in
add
sbb
icebp
sbb
xor
repnz
push
outsl
jl
incl
inc
inc
push
clc
add
insl
testb
jp
jne
jl
xchg
lock
cld
add
xor
adc
mov
xor
fnsave
pop
test
in
pop
decl
mov
add
fisubl
sbb
sub
push
popl
cmp
sub
in
lcall
inc
addr16
stos
mov
cmpsb
iret
adc
dec
adc
bound
mov
popf
xor
addb
dec
jbe
sar
aas
adc
inc
pushl
fnsave
ss
push
sub
sahf
or
inc
imul
jnp
fs
ret
call
lds
popa
dec
pop
push
jp
fs
arpl
dec
xor
popaw
adc
test
mov
jmp
xchg
cmp
cmp
nop
les
dec
mov
or
jg
insl
aas
in
jo
mov
pop
or
inc
lods
inc
in
xchg
push
divb
or
and
dec
sbb
arpl
mov
fidivrl
xor
pop
out
fcmovu
lock
filds
addr16
lret
jge
sub
mov
call
mov
jnp
add
arpl
xchg
out
cmp
div
pop
jae
test
mov
and
aam
test
sbb
xor
decl
test
inc
add
movsl
mov
sbbb
fcompl
mov
cs
data16
outsb
lods
inc
dec
dec
out
int3
jmp
push
xor
bound
jg
or
push
xor
aaa
out
jge
xchg
xchg
jo
addb
arpl
and
jbe
lret
jmp
push
jle
cmc
les
sub
out
loopne
cli
rcrl
dec
movsl
cltd
cltd
dec
leave
clc
mov
mov
dec
pop
push
scas
into
stos
daa
pop
pop
xchg
aad
mov
loopne
cld
pushl
sub
sbb
dec
ljmp
popf
and
movsl
sub
inc
cli
sub
lahf
cli
call
std
inc
ds
push
xor
dec
lods
and
lock
rcl
or
dec
outsl
or
test
or
bound
mov
pop
cmc
call
aad
dec
in
mov
stos
pop
icebp
mov
sub
xor
mov
xorl
decl
lods
insl
js
mov
fnstsw
sub
push
jo
fdivr
decl
loop
and
in
mov
je
or
aas
lcall
dec
sub
aas
stc
addr16
test
cs
push
push
cmp
mov
ja
cli
sub
pand
sti
jo
daa
inc
frndint
pop
mov
xchg
sub
sub
dec
add
push
fldcw
lahf
cmp
adc
jle
arpl
sub
fcos
pop
hlt
lcall
lret
inc
mov
cmp
xor
pop
sbbl
decl
repnz
sbb
mov
aas
aas
mov
sbb
lock
aam
add
jmp
sahf
cmp
jb
mov
popf
pop
dec
gs
add
movsl
lock
inc
xchg
outsl
call
or
mov
into
mov
fdiv
loop
xchg
xchg
js
imul
ljmp
jae
fs
lock
inc
out
and
push
imul
adc
pushl
insl
mull
rcl
pop
push
mov
lods
and
int3
xor
daa
mov
call
gs
popa
not
decl
ss
jge
aam
les
jns
out
negl
adc
popa
ljmp
inc
call
push
inc
xlat
push
ljmp
jne
aam
test
int3
inc
out
fdivl
dec
clc
cs
pop
sub
lock
js
lcall
inc
sbb
scas
and
xchg
sub
mov
sbb
inc
cmp
aad
pushl
mov
out
imul
int3
cmp
aad
push
xor
jmp
call
inc
out
cmpsl
mov
int
lret
sbb
dec
adc
pop
fstl
loopne
int
dec
lcall
inc
enter
jecxz
mov
xor
sti
xlat
inc
lods
cmp
in
sbb
in
xor
cmc
xor
jle
xlat
dec
sub
enter
cmp
mov
shll
inc
jg,pt
or
loope
dec
sub
aaa
and
call
push
mov
mov
mov
mov
pop
adc
or
push
lret
pop
or
ljmp
cld
decl
test
sahf
ljmp
or
popl
inc
dec
call
int
jl
jno
icebp
xchg
push
add
jo
mov
das
add
xchg
jmp
aaa
scas
cmpsl
add
out
push
and
dec
add
inc
pop
sub
mov
cs
ja
or
lret
in
pop
sti
jbe
cmp
inc
add
es
mov
mov
stos
add
cs
pop
jmp
incl
add
and
hlt
lahf
mov
adc
pop
inc
cmp
pop
pop
mov
jo
mov
lcall
and
mov
dec
mov
push
mov
xchg
and
push
ljmp
inc
inc
inc
rorb
sbb
push
insl
daa
mov
add
push
add
lods
jb
lods
xlat
std
jg
jmp
test
mov
incl
inc
cmc
mov
dec
pop
xchg
pushl
cmp
jno
cmp
pop
pop
cld
insl
test
enter
jae
push
lds
outsb
call
out
pop
int3
repz
dec
cmp
xchg
jge
pop
push
repz
rorl
pop
xchg
or
sub
call
adc
insb
adc
push
pop
sahf
add
or
pop
and
sub
fldl
jmp
js
add
xor
clc
enter
mov
dec
push
adc
push
aam
test
mov
incl
insl
fsubr
jp
pop
stos
push
addl
jmp
dec
fstpt
xor
lret
pop
fstps
ljmp
sub
daa
or
lea
xlat
out
or
cmp
jo
outsb
dec
cmp
mov
sti
idivb
andb
and
and
mov
jne
int3
push
mov
popl
xchg
jbe
loop
mov
xor
lods
pusha
clc
std
mov
xor
dec
incl
add
xchg
pop
fs
sbb
mov
xor
xor
incl
adc
loope
fnstcw
cwtl
cmp
out
out
cli
call
xchg
cld
rcll
mov
pop
xchg
mov
fs
stos
in
cld
mov
jl
push
mov
test
pop
adc
pop
fbstp
les
push
in
push
push
loopne
ds
in
lret
xchg
int3
loop
fmuls
out
cmp
cld
and
jg
out
xchg
bound
adc
roll
jp
inc
addr16
xor
pop
jno,pt
repz
insl
mov
pop
into
lret
jbe
cmc
sbb
clc
xchg
and
push
pushl
out
xor
lcall
nop
sub
cmpl
sbb
call
pop
sti
cmp
or
cmc
xchg
stos
and
cmp
out
xor
cmc
xor
mov
in
inc
pop
insl
add
jnp
jnp
pop
xchg
adc
jae
xchg
clc
and
jbe
mov
inc
xchg
adc
mov
dec
into
insb
pop
adc
scas
jbe
subl
mov
movb
push
jae
sti
cmp
fbld
sbb
mov
dec
xchg
scas
hlt
xchg
ds
fwait
mov
push
pushl
movsb
insl
hlt
subb
filds
adc
jbe
xchg
inc
rcrb
aas
or
sti
lea
loope
std
adc
xor
jmp
hlt
out
shll
call
shrl
aam
movsb
daa
or
lcall
mov
xchg
seta
mov
je
mov
push
roll
nop
xlat
jmp
sbb
cli
out
js
lods
sahf
out
out
inc
or
mov
cli
lret
ljmp
push
fmull
mov
push
xor
xchg
lret
test
inc
cli
lods
imul
sbb
fldt
enter
add
cmp
test
daa
lcall
inc
pop
jno
icebp
mov
in
arpl
mov
cmp
or
push
mov
mov
xor
ds
and
jecxz
in
std
pop
add
and
pop
mov
cmp
jecxz
mov
cmp
outsb
mov
leave
fwait
stos
inc
xchg
mov
mov
pushf
mov
mov
sbb
fidivrl
pop
scas
stos
out
inc
pop
xchg
cmp
and
fmulp
push
dec
testb
test
cltd
fisttpll
js
xchg
push
mov
enter
das
clc
sub
mov
inc
les
int3
mov
pop
mov
xor
jg
jg
incl
push
lret
les
push
sbb
arpl
pop
pop
jo
cmp
dec
std
ljmp
mov
cld
icebp
ds
xchg
imul
xchg
inc
mov
in
popf
push
push
lret
insl
test
call
and
cli
push
pop
mov
push
int
enter
push
jne
add
negb
jae
jmp
stc
inc
sbb
or
out
mov
jle
bound
adc
jmp
into
dec
mov
orl
pop
sahf
add
ja
inc
xchg
cmpl
xor
pushl
fdivrp
sbb
mov
jmp
mov
sbb
adc
xor
jmp
sub
pop
loopne
mov
xchg
mov
stc
sbb
mov
push
lahf
call
in
jbe
popf
rcrb
test
ret
sbb
jmp
lcall
adc
fcoms
je
repnz
pusha
push
adc
jmp
pop
aas
lret
dec
inc
scas
dec
call
cld
data16
cld
jne
or
ljmp
into
aad
cmp
cmp
cld
pop
lret
movq
and
and
mov
jecxz
insb
test
jne
mov
push
inc
sbb
stos
orb
fiaddl
lcall
fidivrl
daa
push
sbb
int
cmp
inc
loop
imul
sbb
pop
jecxz
adc
jmp
pusha
push
pop
mov
sbb
out
fwait
cltd
sahf
pop
mov
mov
cmp
xchg
test
fs
lods
incl
jb
negb
adc
lds
add
jbe
clc
xchg
cwtl
roll
and
outsb
mov
fucomi
cltd
pop
cmpsb
pop
inc
xchg
popf
or
mulb
cmp
lcall
fstpl
mov
sarb
cmp
sbb
pop
int3
xor
outsl
imul
test
into
repnz
ljmp
repz
icebp
and
jp
cld
fldt
or
out
icebp
and
mov
sub
cmp
add
or
or
sarb
inc
aam
imul
mov
jmp
mov
push
idivl
jb
mov
push
pop
xor
xlat
push
lea
sar
pop
loope
or
mov
and
sbb
pushf
pusha
mov
ss
push
cld
popa
jbe
mov
stc
xor
sub
mov
inc
sub
sbb
movsb
shll
lcall
es
movsl
andl
ljmp
cltd
mov
gs
clc
inc
fidivrl
inc
and
mov
pop
or
dec
dec
lahf
pushf
aaa
jp
addr16
in
pop
in
inc
cmp
and
mov
cli
aas
mov
add
jbe
adc
cmc
pushl
push
cmp
lods
jo
adc
jne
aam
test
or
fbstp
pop
nop
ljmp
pop
sbb
jae
pop
out
pop
push
and
incl
pop
push
push
xlat
test
rcrb
out
rolb
push
stos
xchg
pop
mov
data16
pushf
pop
fdivr
incl
jmp
lret
out
nop
enter
cmp
jp
jl
jg
mov
mov
shr
clc
push
insb
lds
fsubrs
push
cwtl
movl
andl
xchg
cli
jns
pushl
std
fiadds
sub
mov
cmc
outsl
jmp
or
xor
jecxz
adc
stos
pop
jle
mov
incl
lret
leave
repz
dec
sbb
addr16
shl
lcall
repnz
jmp
jp
cmp
xchg
cltd
and
test
push
sbb
xchg
dec
push
add
ljmp
dec
in
mov
test
mov
pop
test
je
push
bound
push
int
dec
inc
sub
lds
ficompl
or
jbe
or
outsb
jle
decl
call
fadd
fisubrs
sub
pop
dec
movsb
and
into
push
sbb
shrl
or
loopne
lds
jmp
or
and
rorl
divb
std
push
cs
out
cmpsl
pushl
jmp
sub
les
or
jns
jl
movsl
mov
add
jmp
jg
dec
clc
divb
std
pop
adc
mov
inc
scas
cwtl
sub
and
adc
push
jg
lcall
cli
popf
pushf
fwait
push
push
mov
fisubrs
inc
or
xlat
adcb
movsl
loopne
rcr
mov
test
sbb
mov
inc
aad
imul
jnp
sub
dec
daa
orb
fcomip
cmp
add
arpl
cmp
jnp
decl
cwtl
cltd
dec
mov
and
cmp
jecxz
add
test
or
mov
push
rcll
scas
mov
and
into
aaa
js
les
movsb
mov
cld
ljmp
add
rcl
and
add
adc
stos
mov
lcall
or
out
add
orl
inc
jmp
stc
lret
inc
mov
cmpsb
sub
xchg
xchg
mov
jae
xchg
and
mov
xor
outsl
jge
stos
push
ds
push
sub
mov
cs
out
pop
cltd
repnz
fdivl
add
rorl
adc
pop
jg
decl
je
dec
arpl
add
xchg
call
dec
pusha
mov
rcrb
xchg
xchg
dec
xor
mov
mov
fiadds
decl
repz
cld
mov
mov
gs
fimull
xor
xor
call
adc
mov
push
notl
adc
hlt
mov
mov
xchg
pop
das
lcall
clc
push
cs
adcl
stos
cmpsb
sar
mov
es
push
mov
jae
push
js
cmpsl
in
lds
loope
ljmp
xchg
arpl
outsl
cltd
lcall
xchg
mov
fsin
xor
mov
pop
adc
inc
mov
sbbl
les
cmpsb
add
dec
decl
push
pop
arpl
pop
enter
aas
add
xchg
xchg
mov
and
fwait
dec
jo
push
or
pop
cmp
jbe
inc
adc
hlt
push
pop
mov
adc
fdivs
inc
dec
cli
leave
into
mov
rcrb
aas
sbb
xlat
mov
pop
mov
fdivr
and
adc
outsl
pop
jecxz
and
jmp
addr16
mov
jle
inc
xchg
arpl
pusha
mov
fstp
mov
jmp
push
outsb
xchg
pop
push
sbb
dec
into
mov
das
add
jmp
ja
mov
hlt
cmp
je
mov
jo
loope
pop
and
lahf
cmpl
fsubs
xlat
mov
lcall
sbbb
fwait
push
negl
adc
sub
addr16
in
cwtl
cmp
incl
movsb
filds
add
nop
cmp
mov
mov
mov
sar
ret
ret
lcall
std
xchg
inc
and
lcall
adc
xchg
add
jb
stos
stos
daa
hlt
adc
cwtl
push
dec
mov
sub
cmp
scas
ficoms
cs
divps
fcomip
pushl
out
cmp
inc
push
mov
test
cs
hlt
mov
das
mov
and
jg
ljmp
not
push
aad
mov
in
push
pop
inc
or
call
les
dec
fwait
lahf
inc
popf
xchg
or
movsb
movsl
mov
mov
pushl
bound
mov
and
cmpsb
mov
xchg
cmp
xchg
call
mov
adc
mov
imul
call
mov
orl
jo
inc
ret
push
xchg
jb
in
jb
call
mov
loope
aam
jecxz
lahf
xor
sbb
pusha
push
iret
out
cwtl
add
cmp
or
inc
call
insb
call
mov
mov
arpl
cwtl
push
cld
add
mov
icebp
outsl
iret
xchg
adc
sbb
test
call
jp
push
xchg
inc
lock
xor
loop
and
mov
je
inc
xlat
test
fnstcw
inc
pop
pop
cli
cli
lret
repz
xor
adc
or
inc
jb
jecxz
jecxz
add
js
outsl
jbe
sub
sub
fnstsw
inc
push
add
xor
mov
pushl
pop
mov
xchg
gs
pop
sub
xchg
and
jns
mov
mov
lcall
nop
and
pop
cli
push
xor
or
lods
fsubrl
cmpsb
sub
cmp
incl
aaa
pushf
out
lret
inc
push
xchg
mov
sbbl
or
mov
ljmp
clc
xor
int
mov
cltd
mov
xchg
xchg
mov
cmp
js
popf
xchg
sub
in
repz
es
or
je
and
xor
lcall
dec
push
das
adc
cmpl
jle
fidivrl
cmp
pop
mov
xchg
daa
in
ficompl
stos
clc
jg
mov
push
inc
scas
dec
xchg
addl
stc
adc
mov
lock
aam
pop
bound
lods
jbe
sti
jns
pop
lods
push
sub
xor
mov
lds
inc
xchg
movsl
xchg
das
inc
mov
inc
mov
jge
scas
call
into
test
cmp
les
mov
pusha
scas
rcl
xor
xor
pushl
add
or
movsb
fldcw
dec
and
sarb
jl
fcoms
out
sbb
aas
pushf
xchg
push
adc
xchg
jl
ja
rol
mov
push
or
pop
inc
add
adc
mov
repz
iret
icebp
jmp
adc
fnstenv
adc
pop
mov
ret
inc
rcll
mov
and
jmp
jle
dec
into
push
dec
out
std
fdivl
pop
mov
in
lret
mov
mov
mov
ds
stos
shlb
inc
cmpsl
aas
lcall
sahf
jg
lcall
cmpb
mov
push
dec
mov
mov
or
push
mov
ljmp
je
test
in
add
andl
dec
add
push
insl
int
pop
add
xor
sub
pop
push
scas
push
test
push
ds
add
faddl
push
fs
loope
sbb
dec
push
pop
push
loop
subb
pushf
aaa
out
loopne
movsl
xor
and
cmp
test
orl
movsb
cmp
addr16
pop
mov
jns
repnz
cmp
sbb
in
in
sub
or
icebp
ss
ret
dec
arpl
loop
pop
fldcw
aaa
xchg
mov
xor
fcmovnu
sub
pop
in
mov
rol
jmp
pop
inc
outsb
dec
mov
mov
xchg
push
mov
movsl
mov
in
adc
repnz
dec
mov
sbb
outsl
clc
lcall
sub
out
push
sarl
push
jmp
jge
jb
mov
adc
pushl
push
test
ja
jbe
ret
xor
loopne
xor
cmpsl
push
jbe
test
call
lahf
push
xchg
jmp
fimull
mov
jmp
mov
mov
sar
call
shr
dec
pop
cmpsb
std
loopne
jnp
cmpsb
cmp
pop
fwait
repz
jne
dec
mov
decl
lahf
xchg
ljmp
adc
xlat
push
int3
fwait
pushf
je
fidivrl
popf
xor
movsl
pop
jae
testl
fs
cmp
pop
push
incl
or
adc
loopne
sbb
sub
xchg
mov
clc
xchg
jg
mov
leave
inc
loope
in
adc
sbb
jg
sub
mov
push
cld
movsb
stos
pop
jecxz
sbbl
mov
push
xlat
les
adc
loope
jmp
ljmp
xchg
pop
jb
jmp
ljmp
dec
adc
pop
xor
add
mov
xchg
outsl
rcll
inc
xchg
pop
dec
inc
ljmp
cli
jle
and
mov
push
out
sarl
fstps
mov
stos
jge
inc
jle
in
jmp
push
push
dec
push
mov
cmp
jb
or
repnz
psubw
cmp
jmp
les
fidivrl
xchg
mov
pop
jg
mov
jmp
or
test
mov
sbb
stos
fadd
out
gs
dec
add
pcmpeqb
mov
mov
ljmp
and
sbb
cld
dec
sub
xchg
lcall
mov
jmp
ret
repz
jbe
sub
sub
bound
ljmp
xchg
scas
mov
dec
pop
pop
jle
addr16
lret
test
push
lret
cmc
or
sub
fwait
pop
faddp
push
iret
mov
sub
push
popa
sub
imul
push
loope
mov
ljmp
xchg
pop
pop
jle
pop
pop
fimuls
mov
mov
fs
fcoml
sti
vmovlps
pop
in
sub
sbb
sub
mov
int
mov
je
push
decl
inc
loope
int
lock
dec
in
pop
cli
mov
cmpsl
into
and
adc
lcall
incl
cmp
aad
mov
mov
inc
into
adc
cltd
inc
lods
std
pop
push
jmp
jge
xlat
ret
fmulp
jnp
dec
in
inc
xor
mov
outsb
dec
hlt
or
pushl
pop
fdivrl
je
test
sbb
sub
mov
dec
mov
mov
or
xor
jmp
hlt
mov
mov
js
leave
xchg
jmp
add
pusha
or
insb
dec
jae
xchg
or
dec
lcall
push
dec
lods
clc
xor
xor
cmpb
mov
jg
pop
mov
and
cwtl
insl
sahf
or
inc
stos
icebp
mov
fmull
cmp
stos
mov
or
add
xor
or
incl
jle
scas
add
pop
add
inc
call
nop
inc
imul
xchg
xchg
pop
cmp
loopne
mov
mov
xlat
mov
xor
les
cmp
adc
das
jne
mov
jae
inc
jl
mov
mov
test
test
push
mov
mov
fisubrl
lret
in
fisttps
mov
adc
pushl
push
lahf
movsb
int
imul
inc
pop
or
shrb
jno
sub
cmpsb
inc
into
ljmp
jno
aaa
or
jne
adc
sbb
adc
pop
pop
into
dec
inc
stc
filds
and
fsubrl
push
in
pop
sarb
fcomip
push
inc
mov
or
into
xchg
fildl
ficompl
mov
out
clc
inc
sub
fisttpll
inc
idivl
add
in
pop
mov
or
gs
push
pop
stos
dec
fdivrl
cmp
push
add
int3
adc
cmp
cmp
jmp
jbe
fcmovnbe
shlb
subb
add
or
ds
scas
pop
or
int
add
clc
incl
in
add
push
lds
cmp
test
mov
repnz
mov
iret
test
lods
and
inc
cli
pop
inc
out
loop
adc
jmp
aas
lds
push
aaa
mov
add
mov
cmp
iret
aam
push
lock
mov
mov
lcall
mov
push
pusha
jp
sbb
cmp
cltd
sbb
jno
mov
inc
mov
jnp
cmpsb
lods
es
std
stos
jns
pop
in
in
mov
divb
lcall
out
push
into
jb
test
cmp
inc
mov
dec
hlt
scas
sarl
je
mov
adc
lcall
ljmp
mov
repnz
lret
mov
mov
pop
pop
push
pop
xor
ljmp
mov
cmp
movsl
cmp
xchg
mov
cs
fidivrl
push
cmc
aam
mov
mov
pop
decl
aaa
mov
gs
cmp
ss
jmp
add
popf
fstpt
adc
les
mov
neg
ss
imul
fwait
mov
and
decl
push
adc
mov
sbb
or
dec
mov
jmp
fisubs
pop
std
call
outsb
sub
lds
add
or
imul
into
clc
orl
fmuls
pushf
divb
xor
mov
sub
and
mov
arpl
mov
mov
sbb
sub
ss
jmp
ljmp
stos
std
fs
in
mov
test
data16
inc
pusha
sbb
adc
test
mov
jg
decl
push
jnp
int
fdivl
daa
stc
mov
mov
xchg
ficoml
lret
jbe
rolb
sahf
pop
sbb
xchg
add
jae
test
mov
ljmp
xchg
cmp
mov
lret
add
xchg
push
xor
mov
decl
jl
sbbl
insb
shll
push
cld
call
aas
pop
xor
es
es
or
pop
lods
cmp
dec
dec
cmp
add
cmpsl
jecxz
outsb
stos
mov
sti
jg
cli
push
pop
scas
mov
leave
rclb
icebp
ret
jb
jecxz
iret
adc
xor
test
dec
ret
adc
pop
pop
das
xchg
cs
add
int3
mov
lds
movsb
xor
ffree
dec
das
scas
mov
test
mov
arpl
ret
and
xchg
or
lcall
xchg
jne
repnz
movsl
clc
xchg
js
lahf
dec
lcall
dec
daa
push
dec
jle
lcall
rcr
lret
subl
mov
sub
jmp
adc
out
push
gs
mov
sahf
and
inc
jae
sbb
lcall
dec
inc
arpl
repz
shl
pmulhw
lock
mov
addr16
lcall
ror
je
das
cmp
mov
insl
push
cmpsb
sbb
sbb
ss
lahf
cmp
lods
sub
mov
out
stos
or
adc
sbb
addr16
jg
in
and
xchg
movl
xchg
push
mov
xchg
sti
mov
jg
shl
mov
cmp
xchg
push
pop
xor
imul
bound
add
lcall
cmp
dec
ss
aaa
neg
jecxz
ljmp
jae
mov
fstl
sti
sub
imul
mov
popa
mov
lods
cmp
mov
les
mov
mov
jecxz,pn
jb
sub
lcall
fstpl
pop
dec
ja
pop
dec
mov
add
arpl
mov
pushl
mov
xor
pop
mov
add
lods
out
jg
mov
sbb
dec
mov
scas
sbb
add
out
jbe
mov
mov
inc
xor
call
push
inc
or
add
or
inc
out
lods
adc
xchg
push
arpl
fs
and
pop
shll
lea
or
xlat
leave
push
mov
jg
pushl
inc
pop
fbld
ljmp
jb
fcoml
int
jmp
jle
and
cmpsl
mov
xchg
cmpsl
sub
jmp
xor
mov
sub
and
sub
xchg
out
jmp
push
xchg
sub
mov
and
leave
in
idivb
adc
jecxz
insl
cmpsl
clc
std
outsb
add
das
sar
sub
jbe
inc
dec
pop
ljmp
lds
decl
ss
jge
push
loop
fcmovb
test
sahf
notb
and
das
nop
fbld
pop
dec
repz
mov
pushf
pusha
sub
fidivrs
or
pusha
cmpsb
decl
pusha
adc
xor
in
je
repz
cmp
mov
jecxz
cmp
call
jbe
sbb
jns
sub
jmp
test
pop
popa
test
jmp
popa
mov
push
adc
arpl
int3
mov
std
leave
sahf
lods
loop
adc
inc
push
pop
leave
add
ljmp
mov
sbb
loopne
jnp
mov
pop
lock
mov
aam
test
sbb
lret
push
add
mov
data16
pop
mov
movsb
cmpsb
inc
popf
cltd
incl
xchg
cmp
push
leave
pop
dec
sbb
stos
push
ljmp
mov
std
sub
mov
jmp
adc
lds
sub
mov
adc
inc
scas
pop
push
loope
inc
xor
addl
cmp
xor
jle
or
sub
sbb
ljmp
repz
fdivs
push
stos
and
addr16
mov
movsb
stos
sbb
mov
out
decl
loope
push
push
addb
enter
cmp
imul
call
xor
sarb
imul
dec
mov
mov
jmp
dec
andl
hlt
push
dec
movsb
lret
into
dec
lahf
fldenv
mov
repz
stc
scas
pop
cmp
sbb
imul
incl
das
mov
adc
add
add
call
and
cmp
mov
jl
mov
test
cmpsb
inc
fcomip
cmp
mov
mov
pop
pop
push
ret
loope
incl
sarb
mov
adc
pop
or
cmp
mov
mov
call
cmp
cwtl
jl
inc
mov
test
push
or
pop
inc
inc
adc
dec
loop
mov
lcall
repnz
and
dec
stc
ror
push
and
jno
inc
insl
push
jae
adc
dec
jmp
dec
cmpsb
dec
icebp
adc
cmp
aas
jo
and
loop
incl
push
fmull
jl
imul
sub
decl
rcl
sub
mov
push
push
xor
push
ljmp
sbb
daa
add
repnz
cwtl
cmp
pop
loop
push
push
mov
decl
sti
movb
js
pop
jae
push
lods
out
std
push
orb
mov
cmp
lcall
inc
aad
add
jp
imul
sbb
sub
cltd
adc
mov
ljmp
sbb
xor
test
insl
lcall
jge
daa
mov
incb
jae
test
cli
adc
cmp
je
jl
repz
repz
fsub
stos
jbe
mov
pop
in
mov
sub
sarb
or
dec
push
sarb
sub
leave
dec
orb
mov
aam
xor
mov
push
ljmp
mov
pop
sbbl
in
mov
into
insb
in
test
std
sub
adc
icebp
jmp
call
idiv
jno
sahf
in
int3
jbe
loop
push
imul
xchg
cmpsl
fistpll
mov
movsl
pop
sub
idivb
cmp
push
pop
xor
cltd
nop
cmc
jmp
arpl
xchg
imul
sub
push
call
cmp
dec
mov
push
push
popf
xchg
push
cwtl
hlt
popa
mov
incl
mov
sar
ss
mov
xchg
pusha
jg
fisubl
fisttps
imul
pushf
jns
decl
pop
shlb
or
xchg
test
insl
adc
testl
pop
jae
imulb
and
add
in
lock
xchg
test
xchg
dec
ret
call
push
dec
dec
pop
int3
dec
je,pt
imul
or
in
pushl
ret
aas
cld
rcr
push
shlb
jno
in
push
stc
stos
add
push
in
gs
out
sub
jle
lea
out
mov
or
mov
scas
std
cwtl
push
scas
fsts
nop
mov
and
ret
test
pusha
aas
mull
sbb
jmp
sbb
and
push
mov
std
lret
cltd
push
ds
and
and
add
xlat
in
incl
dec
mov
rcrl
or
adc
jmp
jg
sahf
in
leave
push
push
rol
adcl
xor
lea
test
ljmp
mov
fnstcw
pop
lahf
pop
mov
call
rclb
xlat
ljmp
aam
sti
mov
lahf
negb
fs
sub
mov
jp
popa
test
pop
loopne
xor
push
test
jp
jae
dec
mov
test
sbb
ljmp
pop
add
and
push
cltd
gs
sti
adc
fstpt
xor
daa
mov
push
stos
pop
mov
data16
lea
or
and
pushl
rclb
cmp
inc
fsubrp
jnp
sbb
pop
xor
rcrl
and
aad
cmpl
lea
and
xor
adc
inc
sbb
test
je
iret
jg
mov
jge
ss
mov
and
xor
jns
adc
syscall
xor
loope
xor
and
pop
xchg
loop
or
lods
fwait
cmp
add
incl
cmc
fisubl
mov
into
xor
sahf
nop
xchg
pop
inc
inc
cmp
xorl
mov
fstps
in
sbb
lock
push
and
lods
pop
iret
pop
mov
pop
mov
sbb
xchg
mov
adc
adc
pop
jae
mov
cltd
xor
ds
mov
aas
jge
movsb
sbb
inc
mov
xchg
or
jnp
xchg
mov
mov
mov
dec
cmp
sbb
outsb
sub
xchg
add
lcall
leave
or
mov
cld
push
pop
scas
rclb
pop
lret
aad
mov
mov
mov
ficompl
cltd
stos
mov
add
imulb
sbb
pop
in
shll
cmp
ljmp
dec
imul
cld
data16
stos
jmp
decl
sbb
adc
jg
inc
hlt
mov
adc
loope
subb
pop
xchg
sub
xor
arpl
scas
clc
jo
ljmp
jne
and
decl
sub
idivb
push
jne
inc
mov
fucom
gs
sbb
lret
fidivs
inc
jecxz
rolb
imul
fldcw
and
cmp
jmp
mov
push
stc
cwtl
inc
imul
cmp
mulb
int
adc
xchg
sub
test
pop
inc
dec
cltd
hlt
aam
fwait
inc
bound
sti
jmp
and
cmpb
sahf
cmc
mov
jecxz
sub
lods
xor
pushl
cld
jmp
unpcklps
sbb
fildll
cmp
jle
rorl
icebp
xchg
xlat
jmp
mov
ss
rcll
adc
lret
stc
int3
repnz
push
pop
or
lret
mov
ljmp
stos
jne
cmp
cmp
jle
mov
ja
mov
incl
rcl
adc
mov
scas
pushf
clc
fnstenv
jle
jns
mov
mov
std
call
std
adc
push
push
shlb
or
add
ret
xchg
ficoml
jmp
jg
fdivl
lods
enter
jae
jne
push
imul
ret
push
movsl
pop
xlat
jl
ljmp
es
in
or
dec
push
xchg
in
jle
aad
mov
adc
sahf
int3
lcall
popf
imul
add
or
clc
mov
jg
jne
test
ret
jg
cli
mov
add
xor
popa
push
mov
loopne
xor
bound
add
incl
dec
mov
mov
popf
jmp
pop
push
data16
mov
pusha
inc
dec
mov
inc
adc
divb
add
fildll
pop
xor
mov
lods
cmpl
ficoml
out
pop
mov
pop
jo
or
incb
dec
jl
cld
fwait
inc
lret
jge
or
mov
mov
jns
outsb
out
cmp
cmp
lcall
popl
das
adc
push
in
push
dec
pop
movsb
push
sub
pushf
mov
lcall
lret
mov
inc
mov
mov
add
mov
incl
lret
mov
xchg
insl
xchg
je
pop
pop
sti
xchg
jne
sbb
std
lock
xchg
pop
push
dec
pop
cmpl
out
mov
inc
lea
scas
cmp
jmp
cmp
push
in
pushf
xchg
in
push
fmuls
js
popa
rcrb
ds
mov
decl
push
pop
lret
faddl
mov
cmp
adc
xor
fnstenv
scas
mov
dec
mov
mov
into
cltd
xchg
shll
or
jp
scas
cli
call
mov
push
xchg
sbb
jo
repnz
jmp
sub
call
jmp
jnp
inc
into
mov
enter
push
divb
fcoms
adc
int3
push
push
and
jmp
nop
cmpsl
pop
ret
addr16
cwtl
mov
push
mov
mov
pop
jecxz
mov
lcall
mov
ret
mov
sbb
jmp
xor
mov
dec
mov
mov
int
jmp
xor
sti
jecxz
sarl
jo
sbb
mov
add
sub
imul
cmc
nop
cmp
mov
sbb
push
and
int
jle
decb
mov
pusha
idiv
filds
fisttps
ds
cmpsb
inc
push
int3
add
lods
add
add
outsb
adc
cld
jmp
pop
pop
shl
mov
cmp
push
outsb
push
pop
mov
ja
push
out
adcb
ja
lods
lcall
and
cmp
outsl
mov
scas
jmp
fstpt
push
sbb
fyl2xp1
push
fbstp
inc
inc
cmp
mov
call
sarl
or
iret
and
stc
xchg
mov
sbb
movsl
mov
sub
std
xchg
call
call
xor
outsb
cmp
push
cmp
popf
fstpt
into
aas
lret
xchg
lcall
pop
xchg
and
mov
jl
sbbl
sti
je
scas
loopne
fcomip
pushl
dec
push
vpminub
jbe
mov
dec
cltd
ss
fs
jge
arpl
call
xchg
jl
mov
pop
decb
loopne
scas
mov
out
add
lret
roll
push
out
pop
in
pushl
pop
cwtl
lods
add
jnp
lret
jns
mov
dec
shrb
shll
mov
aas
cmp
stos
decl
xchg
xchg
xadd
inc
sbb
mov
ljmp
stos
dec
jae
xchg
add
fidivs
mov
xchg
lds
mov
cmc
inc
jb
push
std
incl
add
icebp
sub
js
push
cmpsl
dec
add
test
nop
out
out
clc
cmp
pop
lods
inc
pop
fs
dec
xchg
adc
cmp
xor
adc
cld
mov
sub
xor
inc
dec
mov
cmp
scas
xchg
mov
mov
outsl
aad
mov
sbb
pop
ss
scas
jmp
ljmp
jg
or
xchg
pusha
jae
adc
gs
xor
push
andb
pop
sub
call
pop
aaa
cld
movsb
mov
xor
lock
dec
push
aad
cmpsl
mov
ja
mov
sbb
in
ds
mov
icebp
and
jb
enter
hlt
cld
mov
inc
sar
mov
add
jne
inc
data16
into
mov
roll
pop
popf
inc
and
cld
ljmp
jns
xchg
lret
mov
or
cmc
cmpsb
cmp
arpl
stos
push
mov
and
subl
ds
call
xchg
push
or
jmp
jno
fnsave
mov
cltd
fldcw
dec
push
xor
pushl
in
xchg
movsb
inc
adc
in
push
sub
ret
xchg
mov
mov
mov
sarb
mov
ljmp
inc
loope
popf
adc
incl
imul
out
fldenv
addr16
jl
dec
imul
dec
jmp
sbb
lret
sub
fcompl
cmp
mov
adc
mov
mov
loope
push
in
ds
decl
movsl
cmp
push
clc
xchg
mov
es
test
aaa
xchg
js
stos
jecxz
jmp
mov
jae
inc
jnp
jne
mov
adc
xor
jnp
pop
cmp
jg
push
xor
ret
lods
inc
call
dec
sub
incl
insb
and
sbb
leave
push
in
xchg
sarb
mov
in
shlb
pop
out
sub
cmp
mov
push
inc
inc
push
call
imul
outsl
into
daa
fisttpl
sbb
or
stc
std
lods
push
jp
outsb
or
or
lcall
cmpsl
sub
jns
xchg
dec
cmpsl
movsb
pop
mov
daa
mov
repz
jmp
orb
notl
mov
movsl
lods
mov
test
lcall
cld
inc
shrb
jno
and
inc
mov
mov
andb
shr
fadd
jmp
incl
lds
mov
mov
mov
aas
clc
mov
pusha
pop
out
fxtract
sarl
rcrb
jbe
call
add
mov
mov
jg
dec
mov
insb
sub
loope
loopne
jg
call
dec
lock
pop
iret
add
push
pop
je
lcall
leave
push
iret
pop
mov
jg
icebp
adc
int3
gs
leave
je
cmpsb
rep
into
xchg
fidivs
cmp
or
fidivl
push
xlat
sbb
cld
xchg
data16
test
mov
fcomip
jg
fwait
enter
cwtl
mov
sbb
out
fstpt
push
inc
imul
in
fisttps
xchg
std
sti
pusha
adc
cmp
out
fstpl
pop
sbb
repnz
je
xor
and
incl
push
cld
dec
cmp
lahf
sub
into
adcl
scas
stos
scas
sbb
cli
mov
mov
lds
pop
xchg
sbb
je
ret
add
loop
sahf
adc
lea
je
roll
imul
incl
mov
xchg
mulb
xor
or
mov
and
fistpl
ljmp
sub
clc
into
jmp
stos
xchg
add
insl
test
outsl
std
adc
jo
mov
lret
mov
xchg
pop
mov
jo
pop
pushf
mov
jnp
stos
add
std
cmpsb
pop
pusha
pop
lcall
xchg
push
mov
adc
jmp
push
and
xchg
ret
les
stc
lock
decb
adc
fdivs
pushl
sbb
mov
mov
mov
rcrl
jno
jno
decl
mov
xor
inc
jb
hlt
daa
cmp
out
rorb
shll
mov
cmpsb
inc
jg
dec
xchg
in
sub
push
push
mov
decl
jbe
dec
push
bound
inc
lock
sub
cmpl
jo
add
and
ljmp
jmp
mov
cmp
pop
dec
jbe
xchg
push
mov
cmpsl
out
sbb
pop
gs
call
repnz
mov
adc
clc
and
or
inc
cmpsb
mov
faddl
push
shlb
add
xor
jg
xor
dec
cli
sub
mov
mov
lret
jmp
push
divb
das
pop
lahf
xchg
lcall
ja
xor
adc
out
popa
adc
push
ljmp
cli
sbb
mov
dec
data16
sbb
int3
fcoml
int3
jns
mov
pop
cmp
mov
or
fsubs
hlt
ljmp
cli
les
iret
mov
cwtl
fmuls
fcmovnu
xor
inc
and
incl
movsl
pop
in
jo,pn
mov
mov
xor
add
icebp
test
pushl
dec
add
and
call
enter
rcl
jo
aas
push
cli
fucomip
addr16
in
inc
into
shr
std
cli
cmc
sub
pop
dec
dec
dec
lods
call
cmpsb
mov
decl
cmp
cs
xor
xor
push
xlat
jmp
ds
pusha
inc
fcmovnu
test
enter
loopne
addr16
in
in
orl
and
es
call
aad
ret
femms
shlb
mov
xor
jmp
shr
sub
jns
js
xor
and
xor
jg
mov
dec
cmp
decl
out
mov
stos
scas
dec
sbb
mov
mov
enter
lret
movl
fidivs
push
fimull
mov
and
out
das
adc
decl
mov
ds
movsl
outsl
out
jnp
sti
add
inc
ret
aad
pop
adc
dec
pop
pushf
test
icebp
es
and
lahf
mov
cmp
pop
ret
in
stos
sarl
ss
and
imul
cmc
out
sub
lret
and
out
test
or
lods
je
xor
scas
lock
pop
fmull
lcall
pop
and
mov
clc
arpl
imul
xor
sub
sbb
cmpsb
adcb
inc
lret
loop
ror
jp
sbb
ljmp
sbb
decb
pop
filds
mov
sti
xchg
jle
add
iret
mov
mov
lret
out
jmp
sub
adc
mov
cmp
es
xlat
dec
sbb
adc
decl
repnz
and
rolb
jb
sub
aad
cmpsb
pop
lcall
cli
in
mov
je
pushf
fidivrl
xchg
fisubl
out
cmp
mov
testb
pushl
in
xchg
mov
xchg
daa
hlt
jge
and
fstpt
pop
gs
leave
mov
jmp
dec
out
push
mov
fsubr
ljmp
cld
rcrb
shl
and
jmp
xchg
aad
and
out
hlt
push
dec
ret
jae
imul
inc
int
cmpsl
mov
ds
or
out
sbb
stos
cmp
inc
cmc
jmp
mov
jb
lods
cmp
je
add
xor
dec
test
les
shll
push
enter
xor
push
out
in
stos
or
inc
push
fnsave
incl
cmp
and
mov
jmp
pop
sub
hlt
loop
sar
lcall
and
sti
cmc
insb
xor
ror
rcr
es
imul
cmp
int3
inc
rolb
jnp
cmp
adc
ret
jae
or
lds
decl
cmc
aaa
dec
clc
lock
jmp
jle
mov
loop
or
jmp
push
mov
jmp
mov
adc
inc
rclb
sbb
ss
out
xor
sti
pop
inc
outsb
in
push
into
mov
mov
sbb
pop
pop
add
inc
hlt
xor
xchg
repz
mov
icebp
cmpsb
mov
jbe
rcrb
jp
or
mov
dec
into
lahf
fisttpl
sahf
dec
mov
hlt
mov
xchg
push
sub
push
enter
or
aad
pushf
push
hlt
sub
sub
mov
lods
jmp
mov
push
push
inc
sti
jl
incl
loopne
cmc
push
bound
shlb
sub
lret
loop
nop
repz
jae
mov
incl
out
pusha
fwait
std
mov
enter
fsubs
push
clc
in
sahf
int3
sub
call
mov
xor
inc
mov
shlb
imul
jmp
dec
inc
add
mov
jmp
ljmp
cltd
cli
fcomps
scas
clc
pop
js
clc
cmc
nop
mov
and
cmpb
pop
jg
fisubs
imul
lds
push
sbb
sub
test
ljmp
adc
negb
test
movsb
cwtl
sahf
cs
dec
mov
adc
jl
in
cmp
mov
daa
cmpsb
loop
cwtl
push
inc
outsl
aam
xor
mov
xor
outsl
cli
pushl
jo
out
dec
shrb
stc
jnp
dec
xor
cmp
mov
ss
sbb
std
cmp
les
push
push
lcall
lods
lea
sbb
fcomps
jmp
cmp
gs
pop
arpl
rclb
enter
xor
pop
xor
jae
arpl
popa
mov
cmpsb
call
fcoms
xor
in
push
or
and
daa
cltd
jl
lret
call
loop
mov
push
add
dec
jecxz
sbb
pop
xchg
shll
call
mov
data16
fwait
add
adc
and
jae
in
add
data16
push
cld
push
add
sub
cli
pushl
test
jmp
insb
mov
repz
test
add
lock
decl
xchg
fidivl
inc
sub
xchg
sbb
lods
sbb
outsl
adc
lcall
subl
sahf
sbb
mov
mov
rorl
inc
ret
fbstp
jo
in
lea
jg
rolb
imul
dec
jno
or
iret
add
xlat
call
jge
xchg
push
das
mov
lea
inc
push
sahf
inc
mov
jo
addl
sbb
sbb
xchg
movl
les
repnz
pop
icebp
lcall
insb
inc
data16
cmp
xor
push
icebp
daa
test
outsb
das
bound
mov
pushl
mov
out
fstps
mov
hlt
jmp
insb
stc
mov
mov
inc
sub
jmp
xor
pop
int3
xchg
mov
mov
sti
mov
stos
push
pop
scas
and
call
jmp
push
iret
insl
push
or
pop
xchg
pop
cld
add
mov
dec
pop
inc
jle
pop
xchg
out
or
filds
sbb
mov
icebp
jmp
movsl
ljmp
dec
addr16
call
shll
inc
out
scas
or
sbb
xchg
xabort
decl
xchg
and
adc
dec
mov
xchg
inc
es
iret
mov
add
ljmp
mov
add
leave
sahf
clc
cltd
roll
jge
cmc
das
push
adc
aad
cld
lcall
ja
ret
pop
aas
rclb
and
rol
or
mov
push
bnd
and
fcmovnb
cli
lret
lds
dec
rolb
push
stc
js
or
sub
test
ds
sar
fistl
push
add
in
inc
pop
xor
cmp
mov
mov
in
cmp
es
sub
in
cmp
mov
std
shlb
sub
and
fdivp
mov
push
addr16
or
jg
out
stc
cmp
pop
or
mov
hlt
xchg
and
dec
cmc
xchg
inc
test
mov
xor
cmc
mov
jge
test
mov
lods
push
inc
adcb
inc
incl
aad
jp
mov
daa
pusha
lods
push
out
sbb
jae
or
std
add
incl
daa
mov
out
stc
fwait
int
les
or
add
ret
js
adc
jg
mov
pop
pop
cmp
pop
orb
pop
out
ljmp
sbb
outsb
lods
mov
jne
xor
or
mov
das
push
cmp
lcall
mov
addl
test
pop
movsb
pop
pop
fxch
mov
test
out
aad
clc
das
xlat
scas
lcall
mov
mov
shll
loopne
lcall
jmp
push
into
iret
inc
add
sub
test
mov
fwait
int3
mov
sbb
sub
cwtl
in
call
mov
loope
xchg
push
sub
xchg
scas
or
or
lcall
push
pop
cld
scas
clc
imul
mov
dec
add
xchg
jmp
decl
addb
jbe
xor
addr16
push
icebp
clc
fnstsw
jl
mov
or
shl
decl
insl
and
je
and
xchg
std
dec
loop
push
xchg
sub
push
lcall
jnp
into
mov
popa
lock
nop
inc
sub
test
dec
xor
mov
jg
pusha
xor
dec
andb
push
lret
sub
mov
mov
jge
or
les
mov
lcall
cmc
out
add
xor
pop
push
sub
and
add
cli
decl
js
add
cmp
pop
aam
pop
mov
test
int
leave
sub
lahf
xchg
outsl
inc
sti
cmc
dec
stos
stos
dec
out
rcll
hlt
xlat
movsl
sbb
inc
mov
lret
or
mov
aas
cmp
stc
mov
mov
test
jp
xor
fldcw
int3
jg
inc
mov
repnz
push
push
sbb
pop
or
push
mov
sub
mov
fcomp
repz
and
inc
mov
jb
mov
push
icebp
stos
lcall
xchg
incl
mov
bound
sub
test
or
mov
mov
faddp
ss
cwtl
fsubs
sub
xchg
push
mov
test
pushl
mov
fistps
cmp
ja
xchg
imul
js
push
mov
out
cli
mov
pushl
rcll
ds
sarl
rsqrtps
sbb
cmp
std
loope
les
clc
decl
and
add
dec
cmp
leave
xchg
movsb
mov
jne
mov
out
adc
mov
mov
adc
ja
xchg
dec
mov
push
pop
xor
std
jmp
ljmp
push
add
cltd
pop
loop
clc
jg
cmp
pop
cld
jmp
out
repz
inc
imul
incl
sbb
shrb
dec
dec
sbb
gs
sbb
in
jmp
dec
fwait
sahf
cmc
add
sub
mov
mov
push
aam
mov
jbe
jl
mov
ja
loope
ds
push
int
incl
jl
jl
out
and
push
add
xchg
mov
cmpsb
imul
decl
out
mov
mov
cmpsl
lret
dec
daa
inc
aas
notl
inc
hlt
jle
icebp
incl
mov
std
in
or
pop
scas
clc
adcb
mov
sbb
test
in
jmp
cmpl
dec
sbb
testl
jle
imul
pop
or
jg
pcmpgtb
adc
mov
mov
aaa
sbb
and
ret
xchg
call
call
xchg
mov
dec
push
sub
gs
cs
andb
cmpb
lcall
dec
mov
sbb
xor
or
pop
mov
jb
push
aas
mov
movsb
lahf
adc
sbb
les
lods
and
call
xchg
push
es
and
fidivrs
push
add
cld
push
cmp
adc
jo
lods
dec
sub
jg
jmp
stos
mov
lea
xor
cltd
add
ss
adc
mov
int
bnd
mov
ljmp
sub
mov
mov
mov
or
pop
aam
add
data16
cmp
sti
add
dec
test
repz
cltd
sarl
xor
jmp
imul
iret
sbb
jne
je
mov
mov
movsl
xor
popf
dec
mov
leave
fisubl
fisubs
and
scas
je
aam
outsl
pop
aaa
inc
outsb
rcrb
repnz
mov
std
lcall
aas
aad
mov
inc
push
in
mov
dec
xor
jne
and
loop
cmc
lcall
aaa
jle
das
jb
stos
add
push
sti
lods
sub
punpckhbw
icebp
popa
adc
stos
jmp
filds
gs
adc
or
inc
jg
sar
add
mov
ret
sbb
xor
sub
push
lds
jmp
enter
xchg
jg
out
popf
into
cwtl
leave
out
lahf
jne
stos
scas
fwait
leave
mov
aas
js
or
adc
or
or
ret
loopne
jbe
mov
sbb
xchg
out
stos
dec
iret
out
lret
pop
mov
pushl
and
xor
inc
fldt
jp
jbe
jno
das
pop
sarl
ljmp
cld
fcmovb
fildl
fstl
push
mull
lock
test
cmpsl
fnstenv
aam
add
ljmp
mov
pop
jmp
jnp
push
inc
repz
mov
cmpsl
daa
sub
call
insl
inc
push
sub
aaa
cmp
sarl
sub
pusha
push
fsts
inc
movsl
repz
jle
lahf
sbb
xorb
add
or
stc
decl
xchg
mov
fdivrl
aaa
inc
shl
push
popa
aaa
pushf
pop
in
ss
dec
test
rcl
ljmp
mov
hlt
xor
or
mov
dec
jno
mov
sub
pop
jp
fnstsw
mov
mov
cmpsl
and
jns
popf
addr16
sahf
push
movsl
test
adc
xor
mov
inc
xor
adc
imul
mov
iret
push
cwtl
mov
xor
jne
adc
and
xchg
jno
sbb
nop
dec
xchg
es
mov
mov
clc
lret
and
push
adc
and
dec
xchg
fwait
inc
adc
test
call
pushl
jne
push
outsl
repnz
sub
cmp
aaa
pop
lcall
mov
pop
jg
leave
push
push
lcall
mov
repnz
mov
sarl
xor
sbb
add
jge
arpl
mov
mov
inc
nop
jle
lds
sbb
mov
int
push
xor
les
into
adc
pop
adc
sbb
mov
test
xchg
ja
call
jge
addl
cmp
add
mov
imulb
sahf
adc
ja
sub
xchg
xchg
sub
ljmp
and
and
mov
loope
mul
sbb
std
fsubs
sbb
mov
xor
popa
lods
arpl
repnz
nop
aaa
dec
sbb
ljmp
mov
inc
lcall
fidivrs
int
jge
mov
cmp
dec
add
fcomip
jle
mov
les
mov
inc
fistl
xlat
daa
sub
les
cmc
ljmp
rclb
aas
mov
lret
mov
or
call
bound
cli
sub
mov
sbb
jg
test
cmp
jl
ror
jg
jmp
sbb
fdivl
pop
mov
mov
dec
arpl
jae
lea
bound
xchg
icebp
sub
xchg
pushl
in
xor
cmp
das
dec
lret
xchg
mov
es
push
lcall
jbe
popf
cmpsl
xchg
aam
xchg
adc
lcall
inc
bound
mov
std
or
in
dec
insl
jl
push
out
jl
loop
insb
cltd
cmp
lcall
and
imulb
sarb
push
scas
js
incl
xchg
gs
xlat
lods
pop
sti
pop
bts
mov
lds
xchg
mov
push
mov
ret
ret
out
jg
or
or
js
int3
lea
push
insb
mov
call
jl
les
xchg
inc
pusha
dec
cld
mov
fnstsw
mov
sbb
ficoml
out
dec
call
pop
lock
jno
or
or
sbb
inc
or
push
ret
into
movl
call
std
pop
ss
push
mov
pushf
xchg
fistps
out
push
test
ret
mov
fs
call
push
cmp
push
not
pop
push
xchg
roll
push
jo
add
ror
int
ret
jmp
jo
clc
add
xlat
imul
sub
jp
cmp
test
mov
push
jg
mov
pop
and
push
xchg
sbb
jne
mov
mov
movsb
ja
mov
gs
lcall
sub
in
jmp
fisttps
pop
data16
and
insl
xchg
ffree
push
cmp
xor
ljmp
fs
or
cmp
mov
movsb
xor
xchg
pushl
std
jo
mov
adc
sbb
jae
jae
push
push
inc
mov
out
inc
fstps
jmp
xor
mov
fdivrl
inc
cmpsl
dec
sub
hlt
lock
dec
stos
movsl
jno
aam
sti
test
inc
jae
mov
leave
xchg
out
add
sarl
adc
sahf
movsb
xchg
cmp
decl
inc
pop
lret
dec
xor
sub
stos
adc
ficomps
mov
push
fs
jmp
fsubr
repnz
push
aas
lahf
call
xchg
xchg
mov
push
xchg
mov
mov
pop
rclb
or
pusha
xor
call
cmp
outsl
xchg
adc
out
in
es
pop
insl
mov
jbe
adc
mov
inc
pushl
mov
xor
and
push
cmp
loop
push
lock
aam
inc
cmc
dec
mov
iret
popf
aam
fsubl
inc
stos
fsubs
xchg
ja
jno
push
loopne
jno
filds
and
push
rorb
pop
dec
mov
push
mov
pop
outsb
insl
push
jns
pop
fstl
hlt
into
std
jmp
and
dec
loopne
in
pusha
or
call
lret
push
fdivr
call
mov
cltd
dec
add
movsb
shrl
fcoms
pop
idivb
dec
cmp
cmp
testl
push
pop
jecxz
xchg
xchg
cmc
push
std
enter
out
cld
sub
jp
stos
cli
decl
mov
inc
aad
pusha
or
add
adc
int3
insl
mov
mov
mov
stos
jecxz
and
out
lcall
cwtl
ljmp
andb
inc
jbe
stos
rorb
cmp
mov
sbb
sbb
mov
push
icebp
mov
push
sahf
jne
dec
jle
and
pushl
mov
xor
pop
out
sub
mov
movsl
push
sar
inc
jl
cmpsb
mov
xchg
add
mov
ljmp
xor
aaa
cmp
jg
daa
push
stc
arpl
push
and
incl
cmc
fdivrl
sar
cmp
pop
cmp
rolb
in
js
fisubs
jg
insb
std
popa
and
mov
jbe
cltd
int3
push
dec
lea
les
das
mov
sub
je
fisttpll
jo
add
push
sar
jmp
push
fstl
and
leave
leave
test
imul
cmp
popa
dec
js
int
lcall
jg
mov
adc
and
pop
jle
dec
add
hlt
call
fiadds
push
sbb
in
add
cmpsb
and
sbb
call
sbb
mov
mov
jl
mov
jl
loope
nop
leave
add
incl
inc
subb
push
fnstsw
insl
aam
jl
imul
mov
aaa
and
or
mov
cld
cwtl
les
nop
decl
mov
decl
into
shll
mov
jmp
xor
outsl
cli
lcall
dec
lcall
leave
and
inc
je
sbb
lret
ljmp
pop
dec
mov
out
sub
adc
and
push
sub
stos
hlt
popa
outsb
lds
dec
repz
dec
mov
jne
call
xchg
cld
lcall
shlb
test
pop
add
mov
ja
shl
mov
adc
stos
iret
in
push
in
das
jp
dec
fsubs
cmp
nop
push
decl
push
adc
sub
xor
push
pusha
ss
cwtl
test
add
sbb
jmp
addb
xchg
add
or
lret
fdecstp
xlat
sti
jg
shlb
xchg
lret
pop
dec
decl
popf
je
sub
lods
jae
je
push
pop
fdivr
aam
pop
and
call
mov
or
mov
fidivrs
pop
jge
sub
fistps
mov
xchg
cmpsb
cmp
outsb
sbb
mov
or
sahf
in
jno
dec
es
imul
stos
mov
pop
jbe
js
adc
adc
push
js
push
mov
dec
insb
jmp
mov
xchg
dec
mov
adc
jp
enter
out
inc
test
jno
dec
loope
out
mov
fidivrl
add
ret
test
aas
and
lcall
and
lcall
cmp
sti
lahf
scas
push
and
jmp
sub
mov
out
adc
cmp
adc
insb
sti
aas
nop
pop
pop
lock
mov
gs
jmp
sbb
outsb
pop
push
jecxz
pop
in
and
jno
mov
sub
mov
mov
inc
push
dec
lods
in
pushl
rcrb
pop
jnp
call
sbb
sbb
test
mov
and
mov
pushl
sar
loope
shlb
out
pop
adc
xchg
lds
push
ds
mov
je
call
cld
incl
scas
scas
sbb
mov
cmp
xor
fcomps
call
popa
data16
dec
test
cmp
out
push
fisubrs
mov
jnp
cmp
push
lds
lret
pop
cmp
push
mov
push
ds
inc
sbb
mov
jns
ja
jmp
stos
repz
push
sbb
mov
call
mov
cmp
push
inc
js
inc
pop
js
lret
inc
push
push
cmp
call
adc
cmp
test
sbb
outsb
sub
pop
loop
inc
push
and
push
mov
push
inc
cmp
jmp
dec
dec
xor
test
add
fstps
xor
aad
out
lcall
adc
pusha
and
div
jecxz
and
ja
popa
fisubs
jp
cmp
sub
lcall
pop
repz
cmp
or
stos
xor
pop
cmpsb
mov
fs
int
vpsubsb
mov
push
je
add
shll
dec
dec
loopne
fbstp
sti
cmp
push
dec
stc
and
dec
add
pop
call
ja
jbe
xchg
call
cli
add
rcrb
out
dec
out
adc
out
and
ficoml
fildl
cld
dec
mov
mov
arpl
and
mov
mov
shrb
cli
clc
mov
dec
or
dec
adc
sbb
mov
push
test
mov
and
jmp
pusha
cs
xchg
ljmp
stc
xor
or
inc
cmc
cwtl
jmp
lret
xor
xlat
push
in
inc
cmpsl
inc
into
outsb
into
sbb
sbb
ret
int
cld
xor
xor
out
aad
mov
push
sbb
rol
pop
call
pop
sbb
xor
std
movsl
out
push
imul
adc
sbb
scas
addr16
lcall
and
mov
push
ret
mov
cvtpi2ps
xchg
out
mov
call
mov
test
aaa
inc
mov
push
out
stos
repnz
add
lahf
push
sub
mov
xor
daa
cmp
mov
mov
inc
lcall
idivb
lcall
mov
or
call
out
inc
jmp
clc
cmpsb
sbb
stos
hlt
test
adc
ja
xchg
and
mov
sub
jmp
mov
fnsave
sbb
ficoml
test
stos
rcll
and
lret
jge
leave
movsl
dec
imul
jb
pop
xlat
push
mov
jecxz
daa
dec
or
sbb
in
insl
mov
pop
pop
shl
mov
fbld
jne
sbb
and
test
scas
jp
xor
mull
cmp
jg
cmpsb
fmull
or
adcb
inc
xor
dec
pushl
movsl
mov
pushl
mov
sub
popa
scas
fcomps
fisubrl
insb
xchg
fnstenv
push
es
jmp
add
dec
pushl
add
ja
cwtl
inc
jl
cmp
push
dec
mov
inc
in
test
or
sub
test
sar
mov
add
add
cmp
fistl
int
lcall
sub
add
scas
xchg
data16
pop
add
jb
mov
pop
xlat
mov
clc
fs
pushf
ret
mov
das
xor
sbbb
popa
call
mov
and
dec
cmp
pushl
es
gs
push
mov
ja
adc
out
shll
dec
push
jmp
cmp
loopne
mov
xchg
roll
pop
scas
pushf
insl
xchg
cmp
clc
fbld
add
negb
add
aam
dec
stc
shlb
mov
adc
daa
xor
mov
pop
dec
and
inc
lcall
jecxz
int3
push
pop
pop
xchg
mov
popa
das
int3
pop
aaa
call
leave
lods
aad
loopne
mov
roll
jb
mov
nop
mov
cmp
add
shr
lret
sub
bound
jg
mov
mov
dec
ret
mov
stos
dec
add
lret
into
mov
cmp
adc
dec
jb
add
mov
decl
xor
jmp
xor
dec
sbb
jmp
inc
test
mov
mov
jns
push
aad
insb
xchg
xor
mov
and
mov
mov
lcall
iret
jae
mov
fadds
nop
sub
xchg
fs
aaa
pop
loopne
inc
hlt
sbbl
rolb
mov
mov
das
sti
xlat
inc
testb
pusha
inc
fdivr
xor
fsts
ljmp
push
movsl
cwtl
pusha
xor
push
test
mov
jle
mov
call
hlt
xor
dec
sbb
stc
sbb
mov
pop
ljmp
fisubrs
sbb
clc
inc
xchg
test
mov
mov
nop
mov
add
insl
xor
lcall
adc
add
cmp
cmc
clc
dec
sbb
ret
xchg
pop
adc
loop
clc
jg
ret
add
bound
fisttpll
cmc
popf
jmp
incl
lock
xlat
fidivrl
cwtl
push
int
lods
es
scas
clc
and
xor
mov
push
or
lods
adc
stc
sbb
pop
jl
cmp
or
xor
jl
setp
push
mov
lods
sub
mov
sub
movb
cmp
fisttps
jge
or
dec
je
dec
fmull
in
mov
fcomip
jmp
add
iret
pop
adcl
fwait
lret
lcall
rol
lahf
daa
lock
lret
push
imul
in
cmpsb
inc
imul
testb
imul
mov
fsubl
lods
mov
fwait
incl
aam
jl
repz
lcall
pop
aam
icebp
subb
mov
call
add
sbb
mov
dec
add
jl
lds
in
out
mov
insb
incl
push
test
loope
add
pop
inc
mov
aaa
inc
mov
add
sbb
out
mov
fidivrs
sub
xchg
sub
dec
adc
sbb
xor
sub
sahf
sbb
sbb
mov
shrl
add
mov
jmp
cmp
aam
stos
imul
incl
push
fisubs
es
rcr
dec
lea
jae
push
or
pushl
mov
lcall
or
add
clc
inc
xor
pusha
inc
or
mov
pop
adc
cmc
jmp
xor
ljmp
cmp
dec
scas
xor
insb
xor
mov
std
fstp
cmp
call
lock
push
int
add
scas
movsl
or
xlat
scas
ljmp
stc
jp
push
push
movsl
jmp
mov
pop
lahf
push
cmp
xchg
jg
xlat
dec
or
xchg
mov
aas
cmp
decl
xchg
cmp
push
mov
mov
sbb
call
jl
xchg
insb
push
adc
jge
outsb
hlt
fcmovne
pop
pop
mov
xor
cmc
stos
cmp
pop
lock
or
mov
test
out
sbb
sbb
jmp
mov
mov
push
sti
sbb
xchg
lret
pop
push
add
sub
filds
mov
lcall
push
jno
repz
lds
push
ja
or
in
push
xchg
and
inc
jecxz
sti
cmp
pushl
aas
outsl
push
inc
xorb
gs
leave
or
ss
out
pop
mov
lock
sbb
addr16
ljmp
test
andl
mov
jp
cmp
in
cld
pop
or
xor
jl
scas
inc
jg
mov
sahf
out
jp
and
call
mov
inc
jg
inc
adc
cmp
sahf
cltd
and
and
add
std
shll
pop
adc
cld
clc
pop
xchg
mov
imul
push
mov
loop
xor
push
jg
xchg
fldenv
mov
mov
xor
lea
cmp
fsubr
xorl
jp
je
movl
in
mov
xchg
sub
adc
imul
inc
sbb
lock
in
in
lahf
pop
sbb
inc
or
mov
lea
pop
leave
out
add
pushl
adc
rcrl
mov
lahf
mov
mov
ja
sub
pusha
sub
xor
std
mov
pop
outsb
jmp
sub
outsb
cmc
out
stos
or
pop
in
xor
out
xchg
jmp
std
mov
pop
inc
adc
lahf
push
and
ret
mov
xlat
dec
or
ljmp
xchg
add
insl
push
dec
and
jg
cmp
mov
add
sahf
imulb
ljmp
add
into
popf
jmp
sbb
xor
mov
xorb
inc
loopne
scas
loope
push
ljmp
int3
dec
in
test
sbb
adc
dec
push
xor
hlt
adc
jne
outsb
inc
inc
inc
or
add
aam
dec
sub
jl
lods
test
push
cmp
nop
repz
push
sbb
dec
sti
xor
xor
adc
sti
add
cmp
inc
mov
pop
rcr
mov
daa
or
outsb
or
mov
psrlq
call
aas
push
push
sbb
fstpt
and
addb
mov
cli
xchg
loope
in
adc
in
ljmp
sbb
out
int3
cmp
mov
ljmp
clc
inc
jl
and
arpl
ljmp
out
push
fldl
sub
dec
sub
pop
xchg
mov
dec
jb
pop
std
jmp
dec
jmp
outsb
push
mov
inc
cwtl
in
jo
or
and
mov
inc
and
incl
mov
nop
mov
sub
cli
mov
inc
scas
insb
xlat
movsl
mov
pop
sar
fmul
sub
add
add
jle
movsl
hlt
add
aad
call
xchg
cmp
cwtl
lret
push
add
pusha
out
test
adc
bound
mov
push
pop
and
decl
arpl
inc
test
into
call
repz
push
mov
lcall
shrb
jns
sbb
test
stc
and
jns
fsubrl
lods
xor
sub
cmpb
jg
in
subl
xchg
mov
in
decb
div
dec
sar
or
lock
jg
rclb
movsb
icebp
sarl
test
repnz
adc
lods
addr16
cwtl
adc
loopne
pop
loope
or
sti
lods
out
adc
fwait
jns
scas
cli
ljmp
mov
sbbb
sbb
and
inc
push
cmpsl
shrb
push
jg
incl
jmp
test
or
add
xor
ljmp
sbb
arpl
or
call
bound
stos
mov
out
xchg
inc
sbb
pop
inc
ljmp
jnp
mov
out
xchg
mov
inc
in
and
jbe
call
pop
aad
outsb
jg
call
inc
mov
or
fucomip
cmp
mov
test
call
aad
lock
stos
mov
adc
rorb
outsl
pop
sbb
mov
jmp
sub
pushl
mov
adc
push
mov
jp
test
mov
inc
sub
push
lds
push
inc
fld
fidivrl
insb
loop
nop
dec
mov
incl
xlat
hlt
fsubl
test
fdivl
ret
fs
xchg
imul
mov
mov
sub
xchg
jl
hlt
dec
sbb
rclb
decl
es
pop
mov
lret
dec
sub
sbb
icebp
inc
mov
enter
and
decb
and
inc
pop
xchg
mov
xor
addb
gs
sbb
movsl
int3
inc
testl
scas
nop
rorl
cwtl
mov
clc
out
adc
into
add
out
or
aad
lahf
outsb
dec
dec
movsb
cmpsl
pushf
cwtl
dec
or
imul
imul
out
mov
xchg
sbb
popl
adc
push
test
dec
sbb
mov
stos
icebp
movsb
lret
mov
call
sbb
jnp
jae
xchg
or
aaa
incl
in
in
push
fcompl
or
fstpt
fs
xchg
std
fwait
mov
cltd
test
cli
sti
mov
xor
pushf
stos
dec
xchg
int
adc
sub
and
adc
add
outsl
enter
out
in
lcall
call
pop
adc
divl
ucomiss
shrb
popa
adc
adc
inc
leave
fisubs
dec
jecxz
sub
sbb
jns
in
add
dec
jl
jbe
pushf
or
inc
sbb
push
call
jbe
xchg
pop
jbe
pop
add
push
arpl
dec
mov
ds
in
fisubrs
pop
add
scas
xchg
mov
stc
pushf
cli
or
push
popf
shrb
inc
inc
decb
fwait
test
stc
lcall
push
mov
sbb
jp
sub
cmp
push
jbe
decl
sbb
cmp
inc
psubb
fs
xchg
pop
cld
jmp
and
or
cmp
fwait
lock
jmp
jbe
je
fwait
jl
push
dec
pop
fildl
ja
mov
mov
sbb
jns
mov
dec
and
pop
test
iret
mov
dec
jne
hlt
stos
pop
jge
adc
fsubrl
push
dec
insl
add
xchg
shrl
and
cli
mov
std
lcall
push
fnstenv
pusha
add
fidivl
jecxz
nop
cmp
je
into
call
mov
jge
xchg
rcrb
imul
sub
push
and
stos
fcoml
push
in
loopne
sub
into
rcrb
ret
pop
jmp
or
out
clc
lcall
daa
out
jnp
int
xor
cmpsb
mov
imul
stos
push
lcall
mov
shlb
jnp
or
inc
xor
call
mov
jle
repnz
sbb
jmp
xchg
sub
dec
fcomip
mov
idiv
lds
lods
mov
mov
call
add
aad
sbb
jo
add
call
addps
arpl
int
mov
fistpll
out
mov
push
lea
in
inc
xchg
cmpsb
sar
enter
xchg
imul
scas
add
mov
jle
repnz
mov
dec
inc
xor
mov
add
jo
rep
xor
imul
mov
sahf
cmp
dec
sarl
mov
shll
decl
lcall
mov
lods
push
push
shrl
xlat
xorl
cmp
jmp
mov
dec
pop
enter
cmp
or
sarl
insb
xchg
sbb
ljmp
dec
ja
jmp
shlb
cltd
out
xor
mov
loopne
sub
test
clc
incl
cmp
xchg
sub
dec
sbb
sub
test
mov
ljmp
sar
ret
cmp
scas
pop
roll
aaa
pop
sbb
mov
std
lcall
xorl
adc
mov
movsb
fiadds
enter
inc
mov
mov
das
sub
pop
imul
xor
int
xchg
outsb
mov
mov
loope
pop
sar
lcall
stos
cmp
and
mov
mov
sub
pop
mov
xchg
in
lock
cmp
or
lahf
leave
and
dec
hlt
fimuls
stc
int
add
dec
into
pop
pop
cmp
in
mov
aas
mov
dec
fisttps
cmp
shrb
cmp
inc
out
orl
mov
imul
and
add
iret
into
push
pop
sub
rcrb
fcomip
push
dec
push
mov
xor
jb
cmp
les
ljmpw
jg
push
decl
ljmp
shlb
addr16
inc
pop
loop
lea
in
adc
incl
loopne
adc
lret
arpl
arpl
daa
adc
jmp
xlat
call
push
aas
pop
insl
insl
scas
and
dec
or
aam
cmpsl
cmp
pushl
ss
test
dec
dec
push
or
mov
aam
add
aas
es
push
push
decl
ret
jg
push
sub
xchg
into
lods
outsb
imul
push
push
and
pcmpeqw
inc
into
stos
sub
call
lcall
or
add
adc
xchg
mov
icebp
jg
push
lahf
mov
aam
outsl
call
ds
or
shlb
mov
stos
fstpl
add
or
cmc
inc
pop
pushl
xchg
jb
in
fdiv
sbb
fildll
mov
lcall
xor
sbb
jp
and
fdivrl
pushl
cld
or
rcr
adc
xor
push
lret
scas
rorb
sub
divl
lcall
dec
pop
das
mov
mov
xchg
out
cmp
mov
iret
sub
incl
fucomp
mov
test
arpl
xchg
dec
sub
push
xor
jae
sub
incl
or
push
xchg
sub
lret
dec
es
xlat
cmp
jb
jp
and
je
stos
or
in
incl
fldln2
mov
sti
std
or
repz
jle
stos
in
pushf
in
mov
clc
jmp
sbb
addr16
mov
inc
int3
push
jbe
cmpsb
int3
mov
cs
jmp
mov
lods
inc
push
jno
notl
shl
adc
jp
sub
mov
lds
and
jbe
inc
dec
sub
mov
inc
dec
aaa
test
out
icebp
fldcw
jg
mov
jne
lods
cmp
mov
repnz
iret
pushl
push
dec
sbb
dec
pop
fldcw
dec
inc
or
lahf
lods
add
pop
xchg
push
ror
cld
push
jge
notl
xlat
xchg
mov
jne
adc
jne
and
cs
decl
lock
in
test
scas
xor
aas
push
mov
add
adc
lock
call
push
lds
daa
loopne
cwtl
movsb
cs
add
test
jmp
jg
or
pop
push
rol
in
xchg
loope
insl
lods
pop
cli
cli
dec
add
sbb
xor
xchg
cmc
cmpsb
lcall
sub
adc
pop
daa
scas
mov
cmc
mov
pushf
mov
out
arpl
mov
sahf
fwait
and
addb
loopne
xchg
icebp
clc
ja
mov
sub
jmp
jne
adc
inc
push
ja
jmp
xchg
inc
ja
sahf
or
jecxz
int3
cmp
pop
mov
pop
loopne
push
mov
adc
shr
sbb
mov
push
enter
notl
popf
divl
mov
mov
sbb
aam
pop
dec
lea
andb
sar
test
mov
decl
jp
mov
push
sub
lock
sarl
arpl
xchg
jmp
fstl
mov
adc
and
inc
fsub
jmp
in
sub
out
lods
jo
sbb
cli
push
xchg
push
lock
int
inc
adc
lret
daa
or
inc
push
rclb
pop
jp
decl
cmpsl
mov
push
repz
add
sub
test
pusha
add
nop
iret
subb
jmp
clc
mov
mov
lds
lock
push
cmp
mov
push
lcall
dec
or
or
jmp
sub
mov
jg
and
pushl
jge
test
and
add
movsl
outsl
loopne
or
jp
push
fwait
pop
dec
or
jmp
icebp
aas
push
adc
cs
aad
int
gs
and
push
rorb
fcmovbe
jge
adc
push
outsb
jae
incl
cltd
cmp
scas
mov
sub
xchg
sub
inc
movsb
or
jmp
hlt
inc
dec
push
fistpl
adc
adc
daa
fists
jp
jmp
jmp
lcall
xchg
sub
jl
jl
jnp
mov
sub
xor
cmpsl
repnz
fisttpll
mov
pop
fdivs
popf
add
push
hlt
ffreep
cmp
or
cmc
or
in
into
int
mov
mov
stc
fbld
ja
xor
stc
mov
pop
mov
mov
scas
xchg
pusha
insl
cli
jg
pushf
jne
pop
mov
shrb
cmp
xor
inc
fcomip
pop
dec
js
mov
lcall
dec
call
ja
dec
aam
cmpsb
or
cmpsl
fmull
jecxz
shlb
dec
fbstp
stc
xchg
sbb
mov
aas
xchg
fmull
pop
notl
pusha
scas
add
cmp
pop
aad
inc
shrb
clc
pop
arpl
dec
jne
jnp
clc
push
jl
in
inc
je
mov
das
in
sarl
sbb
adc
imul
mov
in
insl
pop
cwtl
adc
cmp
inc
pushf
mov
xchg
hlt
sbb
mov
scas
cmp
ljmp
lods
shrb
sbb
xchg
jmp
ja
or
outsb
adc
mov
sub
dec
cmp
xchg
es
add
jnp
rorb
or
loope
or
decl
adc
xlat
sbb
movsl
sahf
scas
repz
or
inc
push
les
cmp
pushl
mov
repz
in
xor
gs
aad
and
call
xchg
xchg
jg
mov
mov
xchg
pop
aaa
out
lret
mov
sub
pushl
add
pop
cmp
repz
daa
orb
sbb
stc
inc
test
xchg
mov
in
push
scas
popa
or
lds
xchg
stos
and
in
mov
nop
lcall
cmc
rcrb
or
jbe
arpl
mov
fs
jmp
or
sahf
sbb
xchg
mov
and
movaps
dec
mov
aaa
es
out
js
adc
jns
sub
sbb
or
mov
xchg
cmc
xor
popf
jecxz
ljmp
jp
xor
mov
inc
dec
mov
pop
dec
or
adc
fsubrp
pop
adc
std
mov
or
mov
add
cs
fwait
push
lahf
aaa
adc
jle
xor
pushf
lods
mov
fisubl
jno
std
clc
pushf
mov
inc
loop
adc
rcl
sub
jne
imul
sti
aam
mov
and
fld
xchg
icebp
outsl
xlat
lods
cwtl
jl
fdivrs
lcall
add
jns
inc
cmp
mov
stc
pusha
inc
pop
nop
rep
fnstenv
aam
decl
push
fistl
mov
mov
add
rolb
negl
xchg
cltd
out
lahf
sub
lahf
or
dec
fisubrl
push
pop
and
xchg
and
adc
push
lcall
nop
mov
push
pop
xchg
jp
data16
dec
in
push
addr16
mov
jle
sahf
leave
jmp
test
js
cmc
ljmp
mov
lcall
mov
out
add
into
cwtl
adc
into
in
outsb
pushl
push
and
enter
fcmovnu
lock
sbb
push
and
call
cld
or
fstpt
sub
push
lock
lret
lret
or
aad
cmp
dec
mov
push
lea
jmp
sbb
jg
cli
loopne
scas
andb
and
push
mov
push
adc
pop
jecxz
cmp
ljmp
clc
outsb
cltd
mov
fcmovnu
pop
xchg
out
shrl
popf
mov
xchg
bound
imul
jl
lock
ljmp
pop
push
roll
adc
inc
loope
xor
inc
idiv
jg
in
dec
dec
scas
movsb
xchg
adc
mov
jmp
pop
push
or
fldcw
or
pop
sub
int3
xchg
add
mov
pop
and
lret
idivb
jo
fs
incl
icebp
push
push
es
jb
push
xchg
xor
xor
out
ljmp
xchg
or
decl
dec
jnp
dec
shll
pop
popf
jl
inc
fdivr
mov
xor
mov
dec
nop
dec
jle
call
insb
or
pop
cmpsl
movsb
pop
adc
cmpsb
jne
mov
cwtl
add
decl
or
decl
pop
inc
rcll
jg
enter
sbb
sbb
mov
mov
incb
or
lcall
sbb
inc
or
push
lods
inc
adc
iret
xorb
sub
cmp
push
decl
and
add
jo
outsb
sub
stc
dec
imulb
loope
out
pop
mov
push
pop
ss
call
loopne
mov
jb,pt
leave
cmp
ljmp
mov
mov
and
test
ja
pusha
jnp
cld
dec
sbb
jge
sub
pushl
push
pusha
cmp
xor
ja
fistps
ljmp
cmp
fucomp
insb
loop
repnz
jp
std
shlb
pop
ror
jg
comiss
lret
fidivrl
jp
dec
cli
rcr
mov
cmpsb
pushl
into
mov
arpl
loopne
dec
fnstsw
mov
xlat
int
incl
pop
jbe
sti
add
pmulhw
sbb
cmp
adc
and
cmp
push
sub
loop
push
call
test
in
push
dec
cmpl
push
jge
enter
fwait
aam
inc
lret
adc
sub
xor
aaa
rcl
ljmp
pop
sbb
decl
add
mov
and
enter
mov
pop
and
lock
lcall
and
mov
ljmp
mov
mov
test
call
pop
bound
dec
iret
pop
jp
jp
mov
mov
mov
mov
scas
lcall
add
xchg
dec
add
fildl
jp
movsb
in
dec
pop
data16
cmc
insb
and
push
outsb
mov
mov
xlat
xchg
jb
rorl
mov
jl
outsb
fadds
jle
data16
in
add
adc
sar
lret
int3
dec
in
or
cmp
mov
adc
jp
rcrb
jmp
dec
imul
dec
and
lret
rorb
popa
cmp
aam
mov
orl
leave
out
test
adc
idivb
and
lds
lcall
lcall
xor
mov
fs
jecxz
pop
lahf
cmp
xor
mov
sub
lret
lcall
popf
movsb
mov
stos
mov
push
popf
aad
add
jae
pop
jg
jg
push
push
xlat
push
mov
movsb
jmp
fists
pop
fistl
dec
cld
popa
add
mov
lcall
pop
nop
mov
jl
adc
lea
pop
sub
jnp
imul
out
or
push
cmc
lcall
xchg
fwait
xor
fistl
cltd
cmpsb
fs
push
cmpsb
pop
and
fwait
lcall
fisttps
cmp
outsb
pop
xchg
stos
lcall
inc
movsl
add
aad
push
sar
incl
std
mov
dec
fwait
mov
push
or
or
jnp
sbb
minps
ljmp
cmp
daa
int
int
inc
cmp
out
hlt
nop
pop
movsb
divb
xor
adc
decl
xchg
xchg
jbe
mov
cmpsl
inc
iret
fimull
fsts
and
mov
movsb
sub
clc
push
or
aaa
add
in
daa
cli
and
mov
mov
jnp
in
arpl
fwait
dec
lea
push
xor
int
xor
mov
std
out
mov
jmp
xchg
and
inc
xor
pop
xchg
dec
loope
inc
push
test
push
and
sub
inc
or
lea
stos
ljmp
cs
or
out
and
std
sbb
test
incl
or
addr16
lock
insb
fsubrs
fwait
shrb
mov
mov
call
je
xchg
xchg
movsl
mov
mov
add
imul
xchg
int3
mov
fstpl
lock
incl
pop
out
ret
pop
push
dec
push
dec
cmp
not
add
bound
pusha
dec
out
jg
data16
or
leave
xor
loop
fsubrp
push
cmc
mov
aas
add
mov
decl
sbb
clc
push
and
jbe
mov
inc
xor
sub
pop
aaa
test
insb
lods
call
cld
dec
ja
mov
insb
jne
lods
mulb
jo
out
das
mov
add
popa
jl
cld
mov
sub
xor
mov
sarl
mov
cli
jmp
jmp
int3
jne
lds
sbb
mov
and
loope
pop
jl
fwait
test
stos
add
scas
pop
mov
xorb
js
out
aas
xchg
xor
lods
movb
mov
jl
mov
mov
adc
pushl
mov
cltd
mov
add
pushf
mov
cmp
out
arpl
clc
pop
rcll
ljmp
cmp
clc
xor
inc
mov
mov
lock
mov
push
inc
mov
js
int
lcall
mov
psubsw
pop
mov
jo
cmpsl
imul
inc
pushl
push
lret
pop
cmp
sub
pop
sub
mov
inc
ja
xchg
dec
mov
dec
mov
lods
pushl
lret
mov
adc
enter
andb
fs
enter
insl
lret
mov
pop
jbe
mov
cld
pop
pop
loop
and
push
je
jmp
xor
sub
popf
xchg
into
shr
pop
cmp
rclb
sbb
es
fidivrl
xchg
cmpl
fstpt
sub
dec
gs
fucom
test
daa
ret
popw
cmp
jae
lahf
mov
cwtl
sub
jo
jne
cmp
cld
mov
shrl
mov
and
aaa
pop
lock
sar
cwtl
inc
mov
aas
cmpsb
add
xor
dec
pop
popf
dec
cld
xor
or
je
out
mov
cmp
xor
ds
cmp
jne
mov
int
sub
decl
xchg
loop
push
cmc
dec
and
inc
out
pusha
pusha
aaa
xor
add
repnz
icebp
incl
and
inc
cmpsl
and
and
idivb
dec
adc
adc
cmp
bound
aaa
mov
adc
testb
imul
int3
in
add
rcrb
pop
jl
dec
dec
popa
or
movsb
or
lods
and
dec
dec
or
push
test
cmc
decl
into
rcrl
cmp
iret
xor
test
aad
das
pcmpeqw
sarb
fbld
into
cli
fldcw
sub
hlt
jmp
sbb
adc
iret
mov
push
push
in
sbb
add
mov
cld
jl
data16
and
xor
adc
test
loope
jnp
pop
push
jnp
pop
ljmp
pop
outsb
test
sbbb
jae
jecxz
adcb
int
add
call
sti
es
sti
push
mov
mov
hlt
or
pop
jge
imul
mov
decl
cli
xchg
roll
mov
push
xor
shl
jae
out
mov
lahf
xor
jge
mov
fs
mov
icebp
xchg
hlt
mov
jecxz
mov
mov
dec
lret
stos
in
cld
outsb
fmuls
mov
out
pop
dec
ja
mov
cmp
push
adc
jmp
popf
inc
push
jns
inc
jb
imul
rcrl
push
mov
xchg
adc
popa
ret
cmpsl
cmpsb
xor
scas
fisubrl
push
mov
dec
fistpl
decl
aad
push
insb
popa
leave
dec
sub
cmp
aam
sbb
pop
aaa
pop
fldt
stos
push
in
repnz
pop
lock
movl
or
cmp
addr16
push
ficomps
shl
insl
fxam
in
inc
outsl
add
push
adc
push
int
mov
jecxz
outsl
inc
sbb
test
mov
ja
cmpsl
outsb
bound
xchg
mov
sbbb
out
ljmp
test
dec
repnz
cmp
and
das
cltd
rcrl
mov
ljmp
sarl
popf
jg
cs
adc
push
int
jg
jge
mov
adc
xchg
sahf
dec
xor
add
mov
xchg
movsb
lea
add
sahf
inc
mov
mov
dec
push
lcall
mov
scas
jb
scas
clc
inc
push
sbb
pop
dec
mov
sub
notl
or
xor
ja
out
push
cmpsb
jno
sub
push
inc
and
pop
loop
xchg
push
outsl
add
incl
movsb
pop
mov
ret
xchg
out
ljmp
jg
scas
aad
mov
inc
adc
mov
rcll
dec
popa
push
xlat
ljmp
jbe
js
cli
sub
test
mov
ljmp
cli
jg
out
je
dec
int
call
push
pop
inc
adc
cld
shrb
ljmp
imul
sti
pop
xchg
rcl
xchg
push
into
adc
jp
outsl
into
lea
ja
cmp
cli
pushl
out
dec
jo
in
lcall
inc
fistl
out
cmpb
ljmp
pop
dec
out
mov
mov
cmp
ret
or
jb
dec
addr16
cmpsb
cmp
lcall
stos
cmp
mov
or
rcrb
mov
lea
filds
test
and
dec
pop
out
insb
inc
mov
jle
test
iret
push
call
jne
xchg
cmpsb
sbbl
outsl
arpl
shl
into
ja
inc
mov
inc
push
pop
push
ret
mov
stos
into
and
leave
mov
aas
mov
inc
mov
mov
decl
mov
lret
adc
pop
lds
mov
in
mov
in
jg
xchg
shlb
xchg
ljmp
insb
add
xchg
popf
imul
xchg
stc
test
pushl
pop
jns
mov
mov
insl
movsb
push
pop
pop
inc
adc
xchg
push
and
call
dec
aam
adc
mov
push
xchg
cmp
lret
movsb
mov
pop
mov
sti
sub
fnsave
push
push
pop
add
cli
mov
jmp
sar
ss
out
mov
pop
int3
fimuls
push
lahf
dec
jnp
or
jmp
shrl
ret
xchg
jg
cmp
loopne
es
jle
jbe
mov
cmpb
xchg
ds
mov
or
or
cmp
js
inc
sub
popa
mov
bnd
mov
std
jmp
je
jge
xor
shrb
push
fsubrs
or
mov
cmpsl
cmp
jmp
jbe
jge
mov
arpl
loop
je
jb
jg
push
cli
mov
insl
xchg
cwtl
jl
mov
in
sub
adc
adc
out
movb
daa
outsb
mov
loop
push
inc
test
out
dec
mov
stos
sbb
insl
repz
lcall
inc
jp
pop
inc
sub
mov
sub
mov
cmp
dec
outsb
in
test
lcall
int3
enter
inc
je
mov
paddq
xchg
daa
lret
jp
pushl
nop
dec
adc
arpl
insb
xchg
lods
pop
or
test
js
ds
cs
js
out
adc
out
leave
xlat
loopne
jg
iret
mov
push
pop
pxor
pusha
loope
cld
jp
sub
jo
shrb
or
sbb
mov
inc
popf
adc
sar
mov
mov
es
mov
in
fsubl
adc
sbb
mov
push
int3
fdivs
push
icebp
lea
call
arpl
in
add
pop
subl
cmp
and
cmp
call
pusha
dec
mov
adc
xor
stos
lret
cmp
and
adc
out
mov
jmp
pop
stos
scas
pop
inc
cmpsl
aas
in
ja
sub
fildl
push
sarb
push
mov
jmp
pop
jo
fimull
aas
loop
and
jne
or
sbbl
lret
mov
jg
jbe
or
cmp
and
call
ljmp
outsb
ret
addr16
mov
dec
sbb
mov
xor
lahf
dec
iret
mov
stos
ljmp
mov
call
add
dec
cmp
filds
mov
movsb
inc
mov
xchg
aaa
jmp
mov
lcall
pop
cmp
test
incl
cmp
add
mov
add
sbb
shlb
mov
jnp
shr
fs
push
mov
cli
lcall
je
push
addr16
cmp
mov
cmp
adc
fwait
push
push
pop
ljmp
xchg
in
cld
mov
mov
shll
sbb
mov
addr16
call
stos
pop
xor
xor
dec
insl
or
out
mov
sbb
sbbb
lods
call
add
orl
dec
or
aaa
cli
rclb
mov
jns
push
xchg
cmp
fcomip
jmp
cli
add
call
xor
dec
fsubrl
iret
dec
mov
decl
adc
inc
aam
in
adc
push
orb
adc
mov
add
adc
dec
in
mov
inc
subl
jo
xor
pop
movsl
jnp
clc
jl
sbb
ljmp
mov
lret
and
fmul
mov
add
jb
mov
xchg
ljmp
xor
sbb
aam
iret
insl
jmp
and
into
or
pop
dec
adc
push
inc
mov
jmp
mov
or
cmpb
mov
mov
dec
pop
cmc
lcall
mov
push
repz
mov
pushl
cld
movsl
enter
test
fsubp
jb
testl
xchg
pushf
pop
and
mov
das
cwtl
sbb
repnz
jge
cltd
gs
repnz
xchg
xor
incl
imul
lods
lock
xor
jns
ljmp
cli
adc
xor
sti
es
ror
push
sub
sub
inc
int3
imul
daa
shll
xchg
mov
xchg
mov
and
nop
ljmp
inc
loop
lcall
pop
aam
ficoml
nop
add
mov
mov
xor
fcomip
mov
adc
mov
nop
enter
lcall
jo
das
mov
mov
push
jo
or
jbe
adc
mov
adc
scas
fldl
push
push
mov
fucomip
leave
inc
push
pushf
adc
cmc
push
loopne
dec
mov
lea
popf
notl
mov
inc
inc
lods
pop
sar
cli
mov
scas
xorb
pop
inc
xchg
cwtl
sahf
mov
push
and
or
cld
mov
fdivrs
lcall
fadds
mov
cmc
sub
stos
xchg
add
into
pop
popa
arpl
std
insl
lds
xor
cwtl
sbb
mov
inc
sbb
dec
lret
lcall
mov
xor
xor
fisubrs
lahf
das
cmp
lahf
mov
test
jg
std
incl
icebp
xor
lcall
loop
sbb
push
shlb
lcall
mov
jbe
mov
sub
add
lret
inc
cwtl
aam
shlb
loop
cmp
cld
cmc
add
xchg
jp
enter
jne
dec
mov
rol
xchg
inc
scas
add
out
mov
ret
clc
loopne
cltd
sarb
jg
sbbl
pop
into
subl
aam
sbb
mov
mov
dec
or
pop
lock
push
in
jmp
mov
ds
jp
sti
xlat
int3
adc
leave
inc
sub
adc
in
push
xchg
or
cli
or
fistpll
cmp
pop
inc
mov
mov
gs
aaa
add
cmp
pop
incw
ja
mov
xor
clc
inc
scas
mov
jae
or
sub
or
push
xchg
xor
jle
imull
sbb
dec
imul
ret
cld
fcomip
outsl
cmpb
sbb
push
sbb
add
daa
mov
pushl
mov
insl
std
push
mov
ficoml
andl
lahf
iret
and
incl
jmp
fimuls
movsb
xchg
mov
jp
mov
pop
in
dec
jns
incl
and
rcrl
and
imul
or
mov
call
add
pop
mov
movb
sbb
fcomps
incl
loopne
bound
mov
shrd
pushl
cmp
pop
sahf
push
outsb
lahf
stc
and
aad
aam
std
cld
iret
insb
push
incl
cli
sbb
xchg
pop
lock
js
faddl
jbe
push
scas
jns
inc
fsubrs
pop
jne
inc
adc
inc
and
clc
pop
jno
push
push
sub
ror
into
lret
mov
xor
bound
fistpl
getsec
dec
adc
or
add
lods
mov
cs
lcall
nop
xchg
mov
jae
mov
cmpl
xor
shl
xlat
in
cmp
pop
lock
pushl
add
cmp
pop
inc
out
mov
pop
in
xchg
or
out
popf
or
aad
jmp
xchg
jae
lcall
xchg
imul
lock
mov
cmpsb
jnp
jl
outsl
faddl
jle
dec
lcall
pop
mov
test
sub
cmpl
mov
xchg
add
popf
pop
dec
mov
outsl
cli
call
jecxz
pop
pop
call
dec
lret
jmp
push
push
shl
push
xchg
fcomip
call
xchg
imul
sti
inc
push
sbb
add
fs
push
call
aam
xchg
jge
ja
sub
mov
jmp
jl
loopne
mov
inc
mov
mov
jno
out
jb
add
scas
roll
and
sub
ud0
push
jb
shrl
mov
inc
repnz
shrl
incl
cld
xchg
mov
negl
aam
inc
les
xchg
shlb
cltd
mov
loope
mov
add
mov
add
leave
pop
mov
mov
nop
mov
mov
cmp
pop
and
dec
pop
shll
ja
lcall
push
rorb
maskmovq
mull
imul
mov
push
ljmp
sbb
push
testl
xchg
int3
sbb
int3
incl
cld
xor
in
mov
dec
shrb
jmp
divl
add
mov
mov
out
lret
add
lds
jge
fildll
sbb
in
mov
shrb
and
mov
test
arpl
and
mov
xchg
sahf
inc
mov
or
jo
inc
in
test
add
movsl
test
cld
fcmovb
das
rolb
xchg
imul
sar
ljmp
and
push
popf
add
jb
cmpl
ds
inc
lcall
ss
mov
lret
cwtl
out
add
xchg
pop
pop
ds
lahf
shlb
mov
pop
jge
cmp
xchg
jns
dec
push
enter
sar
mov
ret
leave
push
aad
out
shlb
add
jg
xor
je
into
mov
mov
aad
mov
into
dec
xchg
sub
clc
popf
aaa
push
jae
cmp
sbb
std
mov
mov
insl
dec
push
adc
pop
lds
sub
decl
cmp
jae
out
stc
add
and
loop
dec
enter
or
pop
decl
lcall
push
sbb
add
or
pop
xchg
dec
pop
mov
call
test
outsb
fld
sub
jl
loopnew
push
jbe
dec
rcrb
xor
pushl
inc
jle
or
mov
mov
inc
adc
outsl
int3
insl
jmp
mov
aam
fsubl
out
fcomip
fimuls
stc
jb
mov
fidivs
xchg
popa
push
push
mov
cmc
jg
and
ljmp
iret
imulb
es
shl
push
and
incl
addl
xor
dec
lret
scas
out
mov
mov
push
xchg
lret
mov
sub
lock
decl
in
fs
inc
inc
aaa
std
xor
push
enter
fldenv
shll
add
aam
jne
das
add
scas
cltd
add
aaa
outsl
psraw
pop
pop
inc
ret
jns
and
pop
inc
inc
pop
or
pop
adc
mov
outsl
cmp
sub
lcall
xchg
mov
inc
lea
or
xor
pushl
std
jmp
pop
aad
xchg
outsb
shll
cmp
xchg
push
ss
xchg
dec
in
xor
ljmp
jmp
lahf
mulb
les
adc
mov
in
sub
ljmp
dec
mov
dec
mov
mov
push
shl
push
cltd
sub
mov
and
movb
sbb
jbe
repnz
scas
cmp
mov
scas
xchg
xchg
lret
fnstsw
movsb
ss
repz
aas
mov
adc
decl
cli
stos
daa
fidivl
xchg
cmpsb
push
pop
jae
scas
das
push
jnp
incl
imul
in
js
cmc
lds
push
enter
call
dec
push
je
pop
jle
lods
mov
or
lods
cld
int3
ss
leave
mov
xorb
xor
pushl
ss
xor
arpl
xchg
push
fdivr
out
sub
pop
dec
test
push
push
xor
add
popa
dec
jo
data16
rorb
sbb
lds
pop
and
mov
outsl
clc
incl
add
fstl
lods
dec
mov
and
inc
mov
decl
push
in
cmp
jo
scas
orb
cmp
and
jns
incb
jmp
xor
lods
pusha
xor
inc
add
push
cld
ret
popf
in
cmp
decl
cmp
outsl
pop
loop
test
jecxz
in
shlb
inc
and
mov
test
mov
lcall
push
ret
test
inc
cltd
in
mov
ljmp
cmpb
pop
push
and
mov
xor
rorb
xorl
xchg
in
push
ss
lret
lcall
mov
ret
add
loopne
outsl
jne
jg
incl
or
sbb
mov
add
scas
inc
pop
xchg
jge
dec
stos
sbb
jns
fdivrs
test
cmp
pop
jbe
sub
lods
fstpl
adc
xor
adc
jmp
jmp
jbe
push
int3
sub
xor
mov
hlt
decl
xchg
xchg
or
test
jecxz
xchg
aam
dec
enter
lcall
sti
dec
pusha
movsl
ss
jnp
outsb
pusha
fdivs
pop
das
inc
cmpsb
add
and
ret
stc
push
add
fdivr
jbe
adc
pop
lret
test
mov
or
lea
ljmp
jge
push
rclb
push
fists
mov
adc
daa
in
scas
mov
cs
jle
mov
out
push
sbb
jecxz
dec
call
ficompl
jl
push
and
lcall
fisttpll
mov
or
mov
aam
data16
lret
into
addr16
adc
jno
or
int3
mov
cli
fs
mov
aas
dec
or
in
mov
xchg
adc
lods
or
xor
push
mov
leave
fistps
jmp
mov
cs
aas
cli
mov
sbbl
adc
lock
pushl
jo
in
test
cmp
inc
and
lea
imul
xor
shll
mov
mov
call
leave
sub
bnd
or
fnstenv
fcoms
jp
mov
mov
xchg
pop
pop
jg
decl
inc
movsl
jo
out
cmp
inc
loope
or
jmp
pop
lods
negb
inc
into
int
in
testl
cli
jne
dec
sub
dec
xchg
xor
push
mov
inc
insb
and
decl
into
stos
jmp
xchg
sbb
adc
xor
sbb
cmpsl
sbb
and
jmp
and
outsl
cmpsl
dec
out
mov
inc
dec
lahf
dec
cs
es
or
adc
jl
push
orb
inc
mov
repz
fdivp
or
fisttpl
push
or
sub
xchg
lcall
dec
je
xor
jo
loope
inc
int
sbb
cmp
jbe
test
cmp
insl
add
inc
sub
aas
mov
and
test
dec
xchg
fbstp
push
je
pop
jle
mov
in
loop
fdivr
incl
dec
loope
sarl
loope
mov
inc
inc
dec
inc
jmp
inc
dec
push
arpl
mov
mov
sbb
push
shlb
mov
jnp
xlat
movsl
jnp
jle
cli
ja
xlat
stos
test
in
jno
push
push
mov
adc
jno
pop
scas
add
xchg
lcall
lea
inc
lea
pop
into
push
adc
jge
and
pop
xlat
dec
fwait
call
push
mov
inc
jmp
cmp
pop
cmpsb
jp
mov
test
out
push
push
push
sbb
jo
mov
sti
and
sbb
pop
lea
mov
cwtl
outsl
das
xchg
out
outsb
add
or
mov
test
push
sbb
xchg
popf
push
cmp
stos
add
xchg
pop
enter
and
pop
jmp
fs
jno
mov
push
inc
out
imul
jno
jo
fisttps
shll
lcall
aaa
icebp
js
xlat
iret
add
inc
cmp
mov
cmp
divl
sub
pop
cmp
or
hlt
fs
mov
sub
cmpsl
or
call
cld
jecxz
outsb
ss
push
and
pushf
ret
in
sub
mov
inc
mov
mov
decl
sub
loope
push
loopne
jge
cwtl
lea
ljmp
xor
aas
and
les
adc
push
daa
lcall
notb
out
lcall
in
aam
shlb
inc
adc
lret
les
pop
sbbw
ljmp
jno
mov
ret
mov
pop
fldl
jmp
or
sub
repnz
push
popf
push
mov
frstor
jbe
sahf
lock
jg
aad
in
cmp
push
shl
aaa
jl
jo
int3
cmpl
xchg
push
cmpsb
aam
icebp
in
inc
xchg
pop
cmp
push
jae
xor
cmp
cltd
pop
idivb
mov
outsb
sub
pop
test
in
push
les
fidivrs
jmp
push
cmp
lds
jmp
xchg
mov
gs
hlt
mov
ja
lret
icebp
mov
rorb
pop
dec
and
or
sbb
call
inc
jecxz
mov
add
jae
dec
out
xchg
jb
lret
add
notl
stos
add
out
clc
pop
fisubrs
add
xchg
fdivrs
imul
cmp
jnp
pmaxsw
incl
and
shlb
jnp
testl
push
xor
cmp
mov
xor
fiadds
test
mov
cli
add
xchg
test
ljmp
xor
sbb
cmp
and
idivb
leave
lret
add
mov
jne
mov
jbe
jg
test
je
sbb
gs
jg
sti
fidivl
xor
dec
fwait
cs
sahf
xor
pop
mov
and
ljmp
rolb
out
data16
mov
loopne
mov
inc
xor
mov
mov
int
mov
jg
mov
stc
stos
xchg
jp
lds
ljmp
push
and
data16
mov
imul
push
and
sub
mov
mov
stos
movsl
sahf
aaa
sbb
mov
test
int
pop
jge
pop
ror
cmp
into
adc
fimull
xchg
nop
xor
jmp
mov
movsb
pop
xchg
dec
inc
call
cld
sarb
test
enter
daa
pop
xor
cld
sahf
mov
jp
mov
cli
pushl
fisubl
push
bound
sbb
ss
pop
inc
mov
jmp
xchg
fwait
inc
add
pop
jno
rorl
fists
test
jns
add
stos
jecxz
ljmp
jno
mov
frstor
mov
lock
mov
rol
push
addr16
jmp
adc
mov
mov
pop
daa
push
xor
or
aad
imul
cmc
adc
mov
mov
cltd
and
andb
fdivrp
add
insb
decl
cmp
add
std
and
add
push
sbbl
mov
rorl
and
lcall
cmp
movb
hlt
test
aam
popa
int3
enter
popa
and
xchg
mov
sti
popf
outsl
mov
sbb
push
xlat
and
sbb
mov
arpl
hlt
lcall
push
test
dec
jns
sub
ljmp
movsb
sbb
fld
mov
cmp
and
call
jge
pusha
cs
mov
nop
add
push
subb
out
cld
inc
imul
repz
inc
xchg
xor
jnp
pop
aam
cmp
sbb
js
xchg
or
jbe
call
mov
xchg
call
insl
ret
xchg
jbe
cli
lods
inc
xor
divl
dec
mov
push
test
push
sub
adc
out
sarl
outsb
jae
ja
cmp
test
ljmp
mov
mov
cmp
pop
and
dec
push
cmp
lcall
out
stc
test
adc
dec
inc
xchg
sti
roll
mov
jbe
mov
mov
ljmp
fdivrl
outsl
adc
mov
stos
pop
mov
mov
std
notl
or
jo
fcomip
lds
mov
aad
fisubrs
add
fmull
decl
lahf
nop
out
inc
xchg
andl
int3
jp
jne
mov
hlt
js
out
pop
sub
dec
mov
ret
nop
lret
sbb
loop
mov
add
shll
mov
mov
pop
das
das
loop
cmp
inc
lcall
sub
mov
aad
ret
push
mov
mov
mov
mov
aas
repz
sub
cmp
lcall
pop
and
shll
out
jne
xor
filds
jbe
adcl
clc
jns,pn
jl
idivl
sub
hlt
paddb
inc
dec
mov
aad
mov
imul
sub
mov
push
pop
iret
mov
les
jmp
sar
and
jmp
gs
test
mov
outsl
lds
pop
add
and
cld
movsl
iret
jl
addr16
or
jp
out
mov
xchg
call
ljmp
es
fldpi
lret
repnz
xor
lods
ljmp
lcall
imul
mov
cmp
cwtl
add
push
mov
jmp
and
popa
dec
pop
arpl
cmp
dec
mov
xchg
imul
cmp
sti
jge
xor
push
dec
inc
leave
inc
jg
test
hlt
shl
inc
nop
pop
xchg
push
clc
ljmp
fucomip
imul
int3
mov
inc
push
mov
lds
adc
xor
pop
mov
xchg
fimuls
mov
inc
xchg
les
fldenv
lods
int3
pushf
push
add
call
inc
popf
stos
cmpb
scas
mov
pushf
shlb
and
dec
cmp
pop
mov
in
lods
ficoms
cmp
jg
aaa
mov
dec
push
fs
mov
andl
daa
les
aam
sub
cwtl
std
jg
mov
sub
push
inc
sbb
jge
jp,pn
dec
mov
xor
cld
cwtl
xchg
cmpsb
shlb
lods
xor
mov
das
mov
incl
lahf
push
or
out
pop
pop
decl
jecxz
push
or
xlat
inc
add
fisttpll
imul
jmp
popf
and
insl
or
loope
ljmp
jg
rclb
xor
mov
add
dec
xor
adc
ds
sub
pushl
jmp
push
pop
ret
mull
std
mov
arpl
pop
neg
paddb
pushl
pop
cmp
xchg
sub
add
and
rolb
arpl
insb
imull
mov
aad
in
aas
inc
aad
xchg
add
pop
test
and
scas
cltd
mov
lcall
nop
adc
push
jp
je
dec
xor
jo
mov
adc
or
fistpll
jb
loope
rorb
decl
outsb
aam
jecxz
xchg
sbb
xchg
sub
inc
cmp
sbb
std
xchg
daa
push
ds
jmp
xlat
jnp
mov
in
mov
pushl
mov
xor
lret
movhps
mov
std
sbb
sbb
ljmp
pop
inc
lods
in
cs
shll
inc
sahf
sub
push
sub
decl
adcb
or
mov
das
xor
ret
lcall
aam
mov
lock
pushl
jns
inc
inc
pop
mov
mov
inc
mov
adc
cmpsb
mov
loopne
pop
pushf
mov
jae
shll
and
inc
push
xchg
fildl
clc
pushl
xchg
push
mov
mov
lret
and
loop
mov
cmp
xchg
sbb
adc
xor
pop
iret
cmpsb
xor
lahf
pushf
jp
xchg
push
pop
xchg
dec
es
aas
inc
mov
and
mov
sahf
mov
xor
pop
push
cmp
mov
or
xchg
or
arpl
mov
mov
lods
fimuls
pop
jns
call
push
in
mov
mov
jmp
jae
cmp
arpl
push
inc
jno
jmp
ja
push
mov
ffree
lods
dec
lock
adc
mov
aad
adc
lods
popa
dec
or
incl
js
fmull
or
icebp
add
insl
je
les
pop
clc
jg
scas
mov
mov
xor
sub
fwait
mov
ljmp
mov
loop
cwtl
adc
les
jno
mov
clc
call
hlt
mov
jmp
jbe
jae
call
ret
pop
push
call
shll
jns
cmpsl
add
lcall
ja
loope
sub
inc
jle
xchg
insl
fcmovnb
lahf
andl
popa
mov
ljmp
cli
int3
ljmp
adc
push
rcll
ret
gs
shlb
stos
out
rorl
sub
cmp
lcall
pop
pop
mov
test
call
lock
ljmp
push
inc
or
out
in
xchg
aam
insb
cmp
fcomip
ja
inc
shrb
orb
and
cmp
pushl
out
jmp
sbb
popa
lret
stos
stos
in
into
mov
mov
jl
push
sahf
and
daa
mov
pop
scas
bound
pop
int
sbb
cld
nop
pop
rorb
jmp
xor
mov
sub
loope
mov
sbb
sbb
std
jmp
push
popf
cwtl
xlat
sub
push
cltd
adc
push
cwtl
push
pop
addr16
xchg
dec
out
int
aad
lcall
adc
cmp
sbb
sbb
stc
mov
movl
pusha
lcall
dec
cmp
cmp
decl
mov
loopne
cmp
rorl
ret
xchg
imul
xor
cmp
sbb
jae
out
pop
sbb
test
pop
dec
in
sub
and
lcall
nop
sub
dec
jne
cwtl
arpl
data16
mov
add
add
cmp
out
fwait
shrl
ret
int
jle
sahf
cmp
andb
enter
or
xchg
arpl
mov
ret
fimuls
dec
inc
jns
out
jmp
xchg
outsb
sahf
shr
lea
aaa
dec
and
repnz
js
test
inc
cmp
call
shlb
and
sbb
jp
icebp
xlat
arpl
gs
loop
popa
or
xlat
and
into
decl
iret
xchg
in
lock
adc
into
pop
or
jp
mov
fucomp
mov
insl
pop
icebp
sar
decl
inc
sbb
mov
push
repnz
cmp
sub
cmp
jg
jg
jae
cmp
sub
inc
arpl
push
test
xchg
fs
inc
lods
inc
pop
test
shr
xor
or
lcall
and
jmp
and
mov
sbb
pushf
ds
mov
or
pop
inc
or
push
test
dec
sarb
push
jnp
sub
add
scas
add
push
addb
call
movsb
test
repz
mov
mov
fisubrs
inc
mov
lret
mov
add
pushl
mov
pop
into
inc
mov
nop
xchg
jecxz
add
xor
pop
cmp
and
test
test
pop
enter
mov
jg
shrb
sbb
ja
add
add
dec
call
mov
jmp
movsb
jge
mov
pop
mov
add
sbb
mov
or
das
les
dec
ret
sub
mov
sbb
xlat
fs
lea
int
jg
imul
inc
jp,pn
std
and
call
sub
ffreep
mov
in
lods
push
xchg
das
adc
test
mov
jmp
in
xchg
xor
dec
dec
cs
and
adc
sub
or
nop
decl
repnz
mov
mov
cmp
and
shll
clc
dec
inc
cmpsl
pushl
scas
out
sbb
sub
jb
pusha
paddq
sbb
fidivrs
call
cmp
xor
mov
out
sti
out
pop
mov
stc
popa
sbb
mov
lcall
add
lcall
aaa
loop
popl
jge
cmp
mov
das
add
les
scas
js
pushl
push
push
push
inc
fnstenv
adc
outsl
lcall
xchg
or
mov
add
push
nop
pushf
lods
sbbl
testl
cmc
sbb
cs
in
lods
xchg
and
pushf
ret
mov
sub
std
ljmp
daa
js
xlat
jmp
lds
ret
xchg
sub
ljmp
call
mov
mov
dec
shl
lds
popa
sti
dec
leave
cltd
sub
das
fwait
mov
decl
xor
fiaddl
inc
pop
add
int3
pop
into
insb
orb
xchg
sbb
data16
call
inc
lock
shll
lret
push
addl
icebp
fsubrs
decl
push
hlt
mov
fs
ret
sub
repz
mov
lahf
divb
jmp
xor
insb
dec
xchg
pop
lds
inc
loopne
call
dec
icebp
adc
cmc
xchg
bound
loop
push
fidivs
dec
insb
loop
dec
loop
call
sub
fisttpll
jnp
pop
cltd
inc
or
push
ret
sbb
add
sub
inc
push
ret
xchg
rcl
push
into
repnz
sbb
cmpsl
out
adc
add
adc
into
pop
push
out
ja
hlt
mov
mov
addr16
enter
int
and
dec
and
jg
out
fsts
add
push
mov
mov
test
sub
mov
into
pop
ds
sbb
inc
xchg
and
xchg
cmp
dec
rcll
dec
loope
decl
cld
daa
repnz
xor
imul
sbb
jae
movsb
inc
subl
pop
daa
sub
ljmp
xor
mov
or
fisttpll
lret
lcall
push
shlb
xlat
imul
rorl
cwtl
in
fsubrs
sbb
sahf
in
out
jl
sbb
adc
dec
int3
cmp
lcall
and
mov
pop
mov
xchg
dec
push
cmc
mov
cmp
outsl
loop
scas
insl
mov
loope
clc
pop
out
shl
mov
mov
pusha
int
cmpsl
jge
dec
shl
inc
push
push
stos
push
and
and
imul
or
cld
add
loop
jno
fsubrl
lcall
iret
pop
sub
shr
and
pop
mov
shll
lahf
mov
dec
sbb
jns
jmp
mov
push
add
sar
cmc
jno
mov
inc
cwtl
sti
inc
ja
cmp
jg
aaa
movsl
inc
rol
jecxz
cmp
push
xchg
and
test
lcall
sbb
push
xor
sarl
cmp
int3
call
cld
in
scas
pop
fisubrl
rol
and
sub
cmpsb
add
es
scas
jns
lret
das
rcl
jo
lea
jp
bound
lock
push
icebp
test
lcall
push
pop
jbe
test
repnz
insl
notl
or
mov
lcall
fs
les
arpl
inc
pop
jmp
icebp
sahf
mov
push
imul
sbb
popf
sahf
sub
out
ret
cmp
les
stos
dec
inc
add
incl
jbe
orl
ret
pop
mov
sbb
mov
xchg
pop
mov
xor
jmp
pop
dec
inc
shll
jl
or
js
outsl
out
insl
cmpsl
shll
call
add
in
arpl
dec
test
aad
popa
test
jo
jle
mov
fisttps
dec
das
mov
data16
int3
adc
mul
test
inc
xchg
jno
mov
incl
or
add
mov
mov
popa
jbe
loopne
cli
pushw
xchg
lcall
decl
mov
push
cmp
push
int
test
mov
inc
xor
das
cli
decl
call
dec
fnstsw
cld
ds
lods
pop
js
aad
or
cli
add
gs
and
sub
dec
push
mov
scas
ret
jl
mov
incl
or
mov
adc
push
jbe
push
pop
cmp
xor
add
xchg
jno
inc
sub
test
xor
xchg
repz
mov
incl
in
pop
insb
fmuls
sub
aad
jmp
mov
fbstp
pop
test
notb
mov
add
ja
add
mov
iret
mov
ljmp
inc
pop
test
adc
ss
stos
jo
sbb
leave
push
jg
decl
jmp
clc
sub
xlat
and
gs
push
xchg
notb
lcall
rcll
xor
mov
pop
fcoms
fisttpll
movsl
push
mov
xchg
das
loope
lcall
jno
stos
push
inc
jo
insl
mov
jno
mov
dec
divb
jmp
repnz
xchg
neg
jl
out
scas
jge
or
push
mov
adc
lcall
mov
pop
or
jnp
jecxz
ja
aad
dec
mov
out
push
cmpsl
decl
loopne
mov
and
sub
mov
and
lods
cwtl
inc
mov
cmc
jmp
jl
push
out
ret
out
fdivp
sub
test
in
jbe
ljmp
pop
cmpsl
lcall
cmpsb
addr16
sub
stc
int3
jno
sub
mov
cmp
jmp
loope
in
push
mov
mov
clc
es
mov
xor
add
jp
fisubs
jmp
adc
jecxz
outsl
das
xchg
ret
addr16
jno
add
xchg
ljmp
cmpl
mov
add
sbb
movsb
imul
lahf
shrb
shr
jmp
int3
ss
xor
xchg
mov
mov
call
mov
mov
push
push
pop
jbe
lods
out
shll
repnz
inc
test
mov
mov
dec
stos
mov
dec
or
mov
pop
inc
xor
adc
mov
sub
test
scas
int
shrl
lcall
insb
je
pop
add
xor
adc
rcr
rclb
jns
pop
pusha
jle
inc
cmc
fimuls
sub
clc
scas
cwtl
pop
into
mov
leave
lcall
cmp
sbb
xchg
sbb
shl
mov
mov
jmp
cmp
in
sbb
clc
xor
insb
pop
add
jp
xor
xlat
data16
std
pop
lock
pop
rol
mov
xchg
lds
cmp
stos
push
stos
mov
cmp
cmpsl
push
fistps
mov
je
push
out
insl
mov
cmp
cwtl
lcall
push
rcrb
fcoml
pusha
dec
sub
outsl
addr16
mov
or
and
mov
mov
and
int3
add
adc
nop
lds
mov
mov
jmp
ljmp
jo
cs
jo
mov
mov
outsb
adc
clc
fnstenv
out
or
sub
xchg
hlt
lods
inc
dec
sarl
js
sub
add
repnz
dec
cmp
push
std
pushl
inc
mov
popa
das
outsb
mov
ljmp
push
push
sbb
or
loopne
mov
pushl
add
dec
outsl
sbb
test
popf
xor
push
hlt
push
dec
stos
test
cmp
or
jmp
fidivl
das
rcr
mov
xchg
lcall
add
repz
insb
aas
push
mov
decl
ficomps
and
fs
sbb
imul
imul
icebp
test
adc
inc
adc
or
add
fadds
mov
pushl
mov
stos
jmp
les
add
xchg
movsb
xchg
mov
mov
adc
out
cli
mov
aaa
enter
inc
bnd
out
icebp
pop
cld
sbb
call
push
mov
test
mov
pop
inc
jne
sbb
aaa
cmp
cmp
insl
push
test
std
pushl
cmpb
icebp
adc
xchg
jnp
sbb
cmp
outsb
pop
pusha
jl
xor
sub
lea
sub
jg
lret
push
outsb
fs
les
dec
test
shll
insl
adcb
ljmp
sub
sti
jne
xor
repnz
stos
pop
test
lret
jb
and
jg
repnz
cltd
lret
lret
pop
mov
push
and
shl
cmpsb
jo
ret
add
das
rorb
xchg
movsb
push
addr16
mov
xor
xchg
sub
inc
cltd
loop
out
inc
or
fldenv
scas
jecxz
xchg
sub
idivb
iret
loopne
pop
mov
dec
sbb
imull
push
out
test
xchg
aad
imul
insb
mov
jp
mov
pushl
cld
in
sbb
add
mov
incb
idivb
loopne
add
sar
decl
and
push
cli
push
out
fnstsw
xchg
inc
mov
and
mov
xor
jecxz
outsl
mov
lcall
pop
clc
jbe
cmp
nop
mov
sub
lods
fistpll
mov
or
jb
insb
fisttpl
lds
jl
cld
inc
and
or
inc
add
pushl
jb
ret
jecxz
cld
jns
addb
and
adc
jno
aaa
jle
mov
test
xor
add
decl
jmp
pusha
stos
xor
clc
cmp
iret
outsb
add
std
cmp
clc
lcall
lock
xor
adcb
sub
decl
jmp
mov
clc
pop
jae
push
lods
clc
dec
shlb
bound
std
xor
cmp
scas
sahf
fnstsw
jns
imul
cmc
dec
cwtl
fsubs
popf
push
jbe
pop
es
pop
andb
mov
bswap
aad
or
loopne
push
jmp
dec
fldlg2
xchg
fwait
mov
insb
jne
jb
fdivrl
incl
pop
js
int
inc
fmuls
mov
movsb
push
or
xor
fcomip
incl
aas
fbstp
lret
cmp
add
jg
xor
xor
lcall
sarb
add
lods
fsubrs
inc
dec
js
mov
ljmp
mov
out
cs
call
inc
xchg
pop
or
scas
xchg
xchg
mov
ficomps
cltd
push
clc
pusha
repnz
push
dec
push
cld
incl
xchg
pop
sub
je
aam
dec
lahf
pusha
test
xor
push
js
aam
decl
out
adc
pop
inc
out
adc
xor
aad
xchg
inc
jae
scas
pushl
call
mov
adc
int3
aaa
imul
leave
jg
aad
mov
push
and
jmp
aaa
adc
cmc
mov
enter
xchg
aam
sub
push
push
or
dec
adc
or
push
push
push
mov
sub
jl
xor
mov
rorl
sti
iret
inc
inc
divb
xor
xchg
mov
pop
movsl
call
lea
or
sbb
inc
nop
jmp
aaa
mov
adc
adc
cltd
lret
bnd
mov
lods
stc
xchg
ja
fstps
mov
in
sub
pushl
repz
push
arpl
ljmp
jge
cmp
adc
pop
sub
loop
pusha
or
dec
hlt
cmp
rcr
in
xchg
fcomip
sarl
pop
cmpsl
pop
jmp
mov
popf
fsts
nop
sahf
jno
ljmp
sbb
cmp
sti
out
mov
nop
fcoml
neg
pop
test
or
stos
dec
stc
cmp
cmp
arpl
and
call
mov
leave
jp
daa
add
mov
xchg
mov
mov
loop
data16
dec
outsl
mov
push
movsb
pop
mov
push
jl
or
adc
jmp
push
scas
adc
push
and
dec
or
decl
cmp
cwtl
rclb
stos
push
xor
daa
inc
jae
loop
xor
fildll
sahf
lahf
mulb
mov
sub
mov
cmp
fs
dec
mov
data16
add
decl
xor
jge
cmp
jmp
mov
les
dec
cmp
fcoms
mov
fstl
in
dec
mov
cmp
xchg
rorl
lock
pop
cmp
mov
pop
lahf
out
ret
pop
lcall
lods
nop
adcb
mov
push
loop
sar
xchg
ss
mov
dec
jnp
daa
mov
or
out
cli
call
lods
subb
cmp
adcb
mov
mov
push
inc
imul
incl
inc
fisubs
adc
dec
or
ret
lods
data16
ljmp
mov
pop
sbb
sbb
jge
jmp
movsl
dec
fdivs
add
mov
fdivrs
xor
push
push
mov
ljmp
fsubr
popf
outsb
adcl
iret
mov
adc
mov
jl
cmp
xchg
inc
and
jp
and
xor
jne
and
mov
jmp
or
dec
xor
filds
or
addr16
jne
mov
shl
jb
fcomip
cmp
mov
lods
std
movsl
fsub
push
rcr
cmpsl
sub
jne
inc
mov
ljmp
mov
movl
shr
ja
ljmp
call
leave
add
add
push
mov
jno
xchg
stc
pushf
jp
sub
lcall
clc
cmp
mov
adc
ret
daa
jbe
adc
push
stos
push
sub
out
cli
push
and
testl
add
xchg
push
loopne
jge
pop
inc
lahf
push
push
hlt
shlb
call
cmp
pop
sbb
jne
ret
jg
ret
data16
push
ret
sub
incl
adc
rol
mov
and
jl
inc
cwtl
je
bswap
push
cmc
add
mov
lcall
xchg
jbe
ss
rol
fidivs
cmpsl
xchg
ret
lds
or
push
push
inc
mov
and
clc
cmp
add
jp
mov
xor
jae
js
filds
jne
ljmp
repz
aas
xor
xchg
xor
daa
stos
xchg
sti
dec
bound
push
push
lods
inc
sub
fdiv
data16
out
jne
scas
pop
stos
adc
push
lret
iret
sar
push
cld
incl
xlat
mov
jae
sub
in
cltd
jl
cmp
loop
xchg
aad
in
xchg
cmpsb
mov
sub
xchg
inc
mov
add
cli
decl
cmp
int
add
jp
mov
sahf
arpl
rcll
inc
push
cmpsb
add
dec
shrl
stos
adcl
cmc
in
add
pop
mov
cmp
fmuls
arpl
in
enter
lret
xor
or
mov
lods
daa
aam
sti
cmp
push
sub
sub
fildll
add
mov
mov
cli
decl
cmp
imul
push
divb
add
movsb
xchg
inc
jmp
out
push
fsubs
hlt
dec
roll
ret
xchg
dec
pop
xlat
jl
lcall
ljmp
adc
cltd
insb
icebp
mov
insl
je
push
call
mov
jae
add
scas
adc
insb
jl
ljmp
pop
mov
xor
push
lcall
fimuls
xlat
mov
inc
sbb
push
loope
addr16
cmp
pushl
sub
repnz
das
cmpsl
dec
les
lods
inc
or
cmpsl
in
fstps
dec
push
popa
xor
cli
mov
lcall
in
daa
inc
jb
loope
lods
pop
rclb
fsubl
or
add
fdivr
push
pop
clc
in
out
jg
pop
int3
lcall
inc
jo
mov
cmp
add
test
movsl
pusha
sahf
sti
insb
loop
adc
icebp
lds
jg
gs
cli
shlb
xchg
inc
aad
cmp
outsb
xchg
nop
hlt
decl
jnp
mov
in
push
lret
and
clc
iret
xchg
cmpsb
dec
fdivrp
outsl
push
ljmp
pop
jns
in
nop
and
cmpsb
mov
or
mov
cmpsb
loope
ljmp
dec
xchg
test
add
adc
xlat
fsubl
and
cwtl
cli
inc
and
decl
gs
aam
xchg
mov
inc
pushf
pop
repz
test
mov
ds
add
hlt
add
sub
aas
add
pushf
xchg
icebp
incl
dec
neg
mov
rcrl
cmpsb
out
ljmp
test
cmpsl
in
mov
cltd
fdiv
dec
sub
stc
mov
add
pushl
lret
jne
mov
xor
cwtl
mov
mov
out
cmp
decl
adc
inc
in
xchg
or
cmp
bound
fs
mov
dec
dec
mov
jmp
fists
lcall
bound
inc
jg
jl
or
addl
jnp
ror
adc
pop
ss
cmp
call
cmpsl
or
je
or
lcall
and
cmp
lcall
shr
popf
or
pop
mov
lods
xchg
mov
mov
scas
dec
pushf
notb
mov
pop
sub
jg
pop
pop
add
in
jns
pop
jge
mov
bound
ret
aaa
std
mov
jb
addr16
add
pop
jecxz
loop
std
mov
sub
push
sub
decl
shrb
jbe
mov
into
clc
decl
fnstenv
dec
mov
sub
inc
mov
daa
jge
pop
roll
testb
mov
nop
jg
xchg
dec
cmp
xchg
push
sbb
cld
aas
and
bsr
dec
testb
lock
pushl
in
popf
cltd
jge
xchg
fcmovnb
inc
sub
leave
clc
jmp
gs
repnz
adc
sbb
ret
test
incl
or
aaa
scas
push
jbe
popa
out
aaa
cmpsb
and
jg
xchg
lcall
adc
cmp
push
and
inc
adc
sub
inc
add
decl
mov
push
and
inc
movsl
lret
sbb
in
push
xchg
cli
xchg
push
mov
push
cli
outsb
lret
lret
push
push
decl
sbb
shl
outsb
cli
aam
cmp
in
jp
pop
popf
or
decl
popf
outsl
insb
lret
scas
out
xor
push
sbb
sub
xor
std
jne
xor
push
iret
ljmp
loopne
ds
xchg
push
in
loop
fsubr
sbb
mov
adc
popf
jmp
sti
sub
outsb
shrb
xchg
jb
jb
mov
push
xchg
sub
ljmp
in
scas
and
imul
call
cwtl
repnz
iret
mov
cmp
scas
clc
fcomip
repz
dec
inc
sarl
pop
inc
mov
push
pushl
cmp
xlat
mov
hlt
add
lock
or
inc
pop
cltd
mov
call
or
inc
loop
push
mov
jg
ret
cltd
stc
mov
aaa
cs
ljmp
sub
adc
push
fldcw
and
dec
sahf
mulb
cmp
clc
jmp
out
ds
cwtl
cmc
inc
lock
jle
fcompl
jns
in
xorb
jmp
add
inc
jbe
or
mov
and
ss
arpl
test
mov
std
fldenv
rcll
or
dec
shlb
mov
into
mov
mov
mov
std
jmp
mov
xor
xlat
fwait
mov
or
jnp
and
aas
adcl
ja
dec
imul
mov
iret
xchg
popf
xchg
add
fcom
jg
test
into
cmp
pop
popf
push
out
inc
insb
in
cmp
mov
adc
fwait
adc
movsb
mov
bound
sub
mov
nop
cmp
adc
hlt
xchg
les
sbb
out
xchg
xor
outsl
push
cmc
ds
dec
addr16
xchg
rorb
and
push
jne
or
out
aaa
mov
aaa
xchg
ljmp
fwait
mov
dec
push
leave
inc
push
cmp
jns
push
xor
fwait
dec
sbb
cmp
pop
mov
dec
sub
in
je
lret
dec
mov
fnstcw
push
push
jb
jge
pushl
adc
pop
ja
and
push
pop
aaa
repz
pop
fs
popa
sahf
std
push
and
mov
pop
insb
loopne
popa
adc
jb
xorb
filds
jbe
test
out
sub
stos
call
pop
inc
xchg
sub
outsl
scas
into
stos
sar
jg
dec
aam
popf
jnp
sub
push
pop
jae
js
and
ljmp
in
out
mov
jle
nop
push
cld
or
and
mov
pop
adcl
jmp
lock
pop
jmp
xor
insb
dec
mov
mov
sti
xchg
jl
jg
or
mov
aad
push
jle
insb
jg
mov
jb
pop
or
sub
dec
movsb
stc
push
ror
jmp
mov
test
inc
les
lods
inc
adc
imul
aad
push
bound
cld
pop
mov
rolb
jl
sbb
lds
sbbb
call
fsubl
test
cmc
xchg
mov
in
nop
into
xor
insl
clc
jmp
scas
pop
xor
xor
int
jnp
cli
in
gs
sbbb
mov
cmp
ljmp
and
jno
cmp
jnp
dec
xor
cwtl
mov
adc
rolb
movsl
sub
pushf
rclb
fmul
lea
xor
mov
and
mov
std
adc
and
push
int3
pop
pop
idivl
sub
hlt
xor
das
clc
call
push
cmpsl
repnz
adc
mov
xchg
ror
inc
orb
jmp
testl
aas
inc
mov
xor
pop
or
leave
push
fnsave
lods
xchg
mov
sub
inc
mov
cmp
and
das
mov
rolb
adc
out
xchg
cmpb
mulb
mov
pushl
cld
ret
gs
out
fnstenv
shl
adc
aas
or
incl
cmpsb
jbe
cmp
insb
mov
test
stos
adc
add
ret
mov
ljmp
mov
push
ficoml
jne
test
jp
push
cmp
ljmp
xor
add
test
loopne
mov
repnz
sbb
test
scas
push
push
xlat
dec
jmp
aaa
mov
fiaddl
dec
pop
dec
sub
cmpsl
gs
sarb
outsb
xor
push
ljmp
test
pop
jecxz
inc
inc
int3
push
adc
lods
outsb
lret
inc
mov
decl
add
jae
test
lds
xor
enter
popf
scas
xchg
mov
dec
data16
sub
addr16
inc
sahf
pop
lcall
mov
ss
popa
xchg
push
movsb
lods
aaa
std
pushl
cmp
in
data16
jl
js
fists
out
rcl
jge
fidivrl
xchg
scas
mov
and
add
pop
pop
adc
jno
xchg
jmp
cmpsb
ljmp
call
add
pop
mov
jnp
dec
test
sahf
xchg
es
outsb
inc
movb
sahf
mov
inc
test
insl
call
gs
mov
jmp
adc
cld
inc
dec
adc
mov
jp
ficompl
sbb
jae
or
push
cmp
les
int
rolb
decl
cld
leave
std
sbbb
out
ret
xchg
jp
repnz
out
dec
fsts
pop
pop
xchg
adc
addps
decl
imul
or
fadds
std
and
cld
out
push
ljmp
sbb
outsl
mov
cmp
cs
inc
ficoml
pop
repz
lcall
testb
adc
jmp
push
ja
fwait
push
pop
cmp
push
hlt
xor
and
insl
dec
leave
sbb
dec
inc
dec
sbb
xchg
negb
outsb
jo
scas
shlb
sar
adc
pushl
shlb
mov
cmc
xchg
adc
imul
and
xor
mov
in
fistpll
pushf
out
jnp
sbb
clc
stos
xchg
xchg
adc
adc
jle
mov
mov
jl
test
in
add
popa
outsl
xchg
jp
scas
mov
mov
cmc
push
cld
pop
jp
sahf
shll
mov
pop
orb
rclb
scas
push
rolb
int3
and
sbb
lcall
jmp
icebp
mov
jns
dec
xor
dec
sub
sub
mov
aaa
sar
fcmovb
test
mov
and
sub
push
inc
rdmsr
icebp
adc
and
xor
repz
sbb
jne
push
sbb
decl
sbb
lea
fwait
rorb
ljmp
mov
paddw
mov
hlt
sub
lret
jge
cmp
or
pop
xchg
jno
cmp
subl
scas
lock
sub
aaa
sub
loopne
mov
ret
sub
ljmp
movsl
mov
out
in
pop
pop
cmpsl
cmp
add
lea
push
cmpsb
cs
mov
ss
push
insb
adc
inc
loopne
aam
shlb
and
cld
jp
mov
lea
pop
orb
in
sbb
cmp
inc
jmp
dec
mov
xchg
inc
orb
movsl
aam
dec
insb
adc
adc
bound
cmp
incl
iret
mov
dec
jno
xchg
int3
mov
roll
jbe
cwtl
inc
or
ljmp
out
or
xor
cmp
test
dec
push
xor
ja
fdivr
pushl
cmp
aam
mov
popf
dec
bound
fsts
fs
xor
pushl
daa
mov
cmp
scas
pusha
aam
mov
lcall
adc
addr16
mov
xchg
push
scas
decl
loop
mov
cmp
sbb
mov
adc
fbstp
push
ljmp
or
pop
shr
sbb
mov
rcll
push
pop
test
pop
mov
or
decl
or
mov
sbb
xchg
inc
stos
cli
inc
in
rorb
xchg
mov
adc
dec
stc
xlat
cmp
bound
fld
gs
lcall
pop
xor
test
flds
icebp
push
jbe
gs
mov
and
leave
incl
aaa
pop
push
stos
icebp
js
outsb
mov
shll
adcl
xor
ret
scas
stos
mov
inc
xchg
decl
decl
dec
pop
inc
push
add
negl
lcall
mov
fs
xor
push
pushl
jnp
sub
lds
pop
inc
dec
mov
pop
shrb
jp
in
out
fcomip
dec
ss
pop
add
lcall
mov
jmp
or
decl
dec
scas
hlt
mov
and
fwait
iret
push
aam
sub
xchg
cmp
mov
pop
fildll
das
mov
cli
dec
mov
lea
xchg
jmp
cwtl
lretw
aaa
cmp
aad
inc
jcxz
jns
out
popa
hlt
iret
pop
sti
clc
test
mov
lahf
call
sub
fwait
sbb
add
shl
aam
in
dec
hlt
xchg
imul
subb
ds
idiv
ljmp
pop
xchg
sbb
outsb
lods
xor
xchg
ds
in
dec
jo
daa
out
xor
incl
cmp
test
adc
vpaddsw
push
mov
dec
in
push
xor
mov
mov
inc
pop
inc
lret
and
pop
push
mov
fdivr
ljmp
dec
cwtl
insb
xchg
fwait
xor
sbb
xchg
xor
or
incl
and
iret
and
into
fstp
sbb
repz
xchg
dec
test
fstp
roll
mov
mov
pop
ret
mov
sbb
fbstp
jg
pop
into
xor
pop
adc
sub
scas
into
sub
addr16
dec
in
cld
mov
in
popf
sub
xor
mov
fsubs
add
jg
movsl
push
mov
inc
jge
or
lods
in
scas
ljmp
rcll
lret
out
push
cli
ds
mov
mov
in
jle
mov
incl
jns
test
mov
repz
hlt
mov
sarb
push
in
mov
cli
add
fwait
sar
pushl
arpl
jno
js
imul
pop
pop
js
xchg
ljmp
insb
sbb
data16
sbb
mov
shlb
push
mov
loop
lock
sbb
xor
xchg
fistps
sbbb
je
lret
sarb
flds
mov
add
nop
jg
jmp
iret
cmpsl
mov
fwait
sbb
lods
push
ljmp
jg
pushl
mov
mov
ja
or
dec
mov
pop
test
adc
ja
mov
sbb
jl
xchg
pop
push
dec
enter
es
adc
cltd
movsb
xchg
scas
or
popa
mov
sub
shlb
in
pop
std
pushl
jns
xchg
movsb
mov
les
cmp
andl
fcomip
pushl
adc
outsl
inc
dec
es
dec
inc
pushf
ljmp
dec
fimuls
lods
and
ljmp
dec
xor
je
push
adc
and
fisttpll
push
xlat
pop
sub
lcall
cmp
outsl
mov
test
and
mov
pushl
pop
jle
mov
mov
out
sti
aam
sbb
jmp
aaa
jecxz
sbbl
mov
les
stos
sub
and
mov
out
xchg
sti
lret
movsl
inc
pop
repz
sbb
dec
daa
loop
mov
jno
lahf
outsb
mov
lcall
stos
leave
aas
xor
cmp
andb
das
push
jge
jp
pop
daa
pushf
pop
and
jmp
loopne
xchg
and
mov
push
cmp
jnp
out
les
jo
loop
aas
cmp
inc
loop
push
jo
test
adc
add
icebp
mov
cmp
outsl
loop
out
xchg
orb
and
dec
sbb
filds
add
sbbl
xchg
sbb
ret
jl
jmp
movsb
out
mov
enter
aaa
inc
inc
pop
pop
cmp
dec
jno
inc
and
fcomip
jmp
push
negb
or
loope
push
aaa
mov
cmp
xor
jne
jecxz
test
mov
mov
les
mov
jmp
add
lods
jb
jb
out
dec
adcb
mov
push
fnstenv
dec
jmp
out
cmc
iret
popa
std
dec
shrb
add
pop
std
incl
and
ds
and
fmul
adc
das
jl
cmc
jmp
das
xchg
inc
test
scas
imul
arpl
scas
std
scas
fcomps
sbb
mov
cmp
enter
jo
or
gs
dec
jg
decl
add
xchg
inc
aaa
push
shlb
inc
and
hlt
cmp
es
incl
inc
or
sarl
stos
fstps
enter
push
test
fildll
aas
popf
movsl
stos
repnz
sbb
incl
mov
sub
mov
pop
sub
mov
cmc
ds
mov
call
push
dec
xchg
jo
pop
test
pushf
or
dec
xor
fstpt
add
push
xchg
jg
fcomp
xchg
jmp
adc
sbb
push
dec
popf
pusha
push
mov
gs
movsb
push
jge
mov
inc
adc
es
out
imul
incl
jno
imul
stos
xor
rcll
cs
mov
incl
je
mov
aas
gs
cli
pop
and
cld
das
decl
incl
les
mov
inc
insb
mov
dec
cmpl
push
and
adc
gs
sahf
ss
into
ja
jmp
sbb
push
or
sbb
and
mov
xchg
dec
pushl
adc
mov
inc
lock
adc
test
cmp
loopne
and
push
mov
aas
sbb
test
mov
fwait
or
pop
dec
pusha
movsb
cs
in
jmp
and
out
jmp
mov
push
rcl
sub
in
adc
xchg
ret
inc
jp
jmp
and
and
sbb
xor
loope
push
sahf
add
cmp
cmp
stc
enter
imul
push
or
shlb
cmp
mov
mov
jno
ljmp
cmpsb
jns
mov
inc
jecxz
test
stos
int
or
fnstenv
pop
pop
sub
push
jmp
shlb
and
fwait
lods
mov
gs
add
cmp
popa
push
cs
mov
clc
scas
pushl
dec
pop
mov
popf
vpsraw
push
cltd
push
daa
jb
stos
xchg
lcall
scas
int3
push
inc
in
out
popf
notb
idivb
mov
pop
cwtl
xor
lcall
mov
fmul
daa
push
imul
out
ss
inc
sbb
das
adc
fstpt
shl
jne
mov
shll
je
aam
imul
adc
repnz
sti
push
ds
aaa
std
pushl
cld
sbb
movsl
in
mov
jne
cmp
sbb
pushl
or
sahf
mov
jo
pminub
call
adc
pop
cmp
leave
int3
jg
lds
repnz
incl
mov
adc
test
gs
jge
cs
xor
lcall
ljmp
mov
add
andb
mov
test
cmp
into
push
dec
adcb
push
cmc
pop
ja
mov
and
jns
lock
repz
sub
adc
xchg
fcompl
xchg
or
call
jb
mov
xchg
outsb
xlat
mov
in
lret
pop
nop
rol
lret
adc
loop
pushl
cld
lcall
xchg
or
cmp
dec
outsl
sbb
cmpsl
fldenv
sti
dec
icebp
sbb
xchg
imul
aam
push
aam
insl
lcall
dec
sti
fcmove
or
push
iret
dec
jne
mov
sub
ret
fwait
jnp
mov
inc
shr
cli
lcall
push
xor
ss
push
and
jmp
ds
mov
cmpsl
fstpt
filds
incl
fildll
fisttps
lea
dec
pop
xor
arpl
jmp
sbb
das
jnp
push
ficomps
xchg
sar
inc
cmp
sub
in
pop
add
adc
imul
jmp
scas
leave
mov
dec
lods
cmovnp
lcall
movsl
in
bound
mov
fdivs
inc
mov
add
pop
dec
div
mov
or
inc
lret
aad
and
sub
imul
push
xorl
stos
decl
loope
shll
rorb
mov
inc
sub
jg
test
es
pop
stos
xchg
sbb
lcall
cmc
ljmp
cmp
adc
test
fcoms
fiadds
fstpt
roll
lcall
and
push
push
xchg
cld
stos
add
mov
aam
sti
insl
inc
mov
mov
or
xchg
outsb
mul
add
or
data16
xchg
into
stos
pop
adc
call
xchg
jnp
pop
mov
je
cmp
lcall
test
cmp
push
cmp
jae
push
repnz
cld
call
push
dec
aaa
stc
packssdw
icebp
incl
cs
and
div
movsl
push
stc
push
mov
outsl
incl
adc
je
les
adc
push
xchg
xor
and
sti
jns
dec
dec
pop
incl
sub
cmc
push
push
mov
rorl
mov
xlat
sbb
jecxz
sbb
sbbb
jnp
orl
push
lods
xchg
aas
cmp
in
jb
adc
out
daa
cmp
sub
mov
in
cmc
jnp
imul
push
pop
fstl
mov
pop
daa
decl
inc
cld
lds
mov
jge
jno
pop
lcall
shrb
sbb
push
dec
xor
mov
cld
lret
aam
arpl
call
outsl
pop
int
sahf
xchg
in
mov
cmp
push
adc
inc
movsl
inc
jbe
icebp
inc
mov
sub
lahf
mov
imul
rorb
jecxz
lods
mov
jg
das
jns
stos
or
jg
push
mov
jbe
aas
mov
lds
xlat
imul
cmc
dec
xchg
mov
cmp
cltd
inc
pop
pop
fdivrs
cmp
subl
pop
jo
fcomip
pushl
dec
loope
scas
mov
std
sub
push
pop
subb
dec
cmp
mov
in
xchg
decl
mov
movsl
aas
ret
ja
mov
int
add
data16
call
and
in
cmp
mov
push
addr16
leave
cmc
sub
loop
inc
inc
pop
push
mov
add
stos
ja
pop
aas
shlb
mov
cmc
push
sbb
aas
cmpsb
push
xorb
adcb
lods
sub
xor
jnp
loopne
mov
push
roll
xchg
xchg
pop
popa
cmp
lods
pop
push
cmp
decl
fstps
test
pushf
xor
mov
fdivr
push
sub
mov
decl
push
push
xchg
sub
jbe
mov
fldcw
repnz
push
jg
mov
imul
sbb
adc
sbb
movsb
cltd
xor
test
and
shll
adc
fwait
ljmp
cld
cli
inc
push
mov
xchg
dec
std
cld
xor
out
jg
inc
mov
fadd
ret
rolb
std
sbb
sub
loop
jo
and
jmp
mov
push
test
pop
das
fisubl
movsl
jge
push
inc
and
hlt
iret
mov
sub
mov
pop
add
xor
or
aad
mov
lods
jnp
pushl
stc
add
aas
sub
add
mov
int
adc
shr
ljmp
imul
cld
push
xor
ret
mov
push
jecxz
push
pop
dec
es
push
ret
pop
jg
in
fwait
adc
pop
imul
call
data16
pop
cli
ss
inc
das
sub
into
addr16
clc
mov
jmp
inc
mov
push
cmp
das
shrl
leave
addr16
pop
inc
xor
out
ja
mov
cmpsb
sub
adc
stc
sbb
std
hlt
popf
shll
push
adc
mov
pop
cmp
and
sub
pushl
or
fsts
sbb
mov
push
xor
subb
mov
loop
push
std
mov
fsubr
scas
xor
mov
dec
lcall
mov
dec
xor
nop
pusha
arpl
pop
mov
cmp
jg
mov
or
mov
loopne
in
imull
pop
or
pop
movsb
add
pop
cmp
or
shll
insl
push
pop
test
sub
inc
hlt
ret
add
xlat
dec
xorps
movsl
pop
scas
adc
in
rol
inc
adc
iret
jae
out
sbbb
sub
das
int
repz
std
ror
or
jmp
mov
cmp
pushl
inc
sub
pushf
sub
push
and
or
pop
add
imul
cld
mov
dec
pushl
xorb
fstl
jae
mov
pop
int
mov
jle
jne
jne
mov
sbb
cld
inc
rol
out
inc
adc
and
dec
clc
jmp
sub
fdivrp
loopne
das
push
or
sarb
cmp
jp
cs
rcrl
or
sub
push
xlat
fists
fildl
and
mov
add
sub
push
scas
std
cmp
data16
mov
xchg
fisttps
fmull
fcompl
lret
insb
mov
repz
decl
data16
daa
xchg
imul
push
xor
pop
sub
into
dec
fwait
lcall
mov
pop
popa
cmp
mov
ja
or
mov
movsl
and
sub
ljmp
sbb
rorl
push
push
push
gs
mov
test
xlat
jns
xor
repz
cmp
incl
dec
mov
js
scas
pop
jge
sti
ret
mov
jp
push
sub
add
lcall
or
es
into
pushf
rclb
repnz
incl
sub
xchg
call
fildll
mov
pop
or
push
pop
repz
jg
imul
cmpsb
nop
in
popa
js
ret
mov
adc
or
and
add
ljmp
rcl
hlt
pop
sbb
ret
das
repz
xchg
jl
fucomi
popa
sub
movsl
mov
decl
mov
adc
xor
and
popl
popa
cs
push
lcall
icebp
adc
and
js
rolb
jecxz
fbld
mov
cmp
or
pop
and
mov
clc
lods
idiv
jmp
jge
cmc
mov
stc
dec
fbstp
clc
add
sahf
mov
outsb
sbb
lahf
mov
inc
push
or
mov
mov
out
mov
outsl
ret
fldt
aam
loopne
aam
xchg
stos
repnz
popa
push
xchg
add
stos
pop
lret
lahf
or
cmp
mov
inc
std
mov
sbb
push
sub
fcomip
scas
sbb
aaa
icebp
xor
fnstsw
dec
mov
fcomip
lds
jg
or
xor
fldenv
or
loopne
push
aam
mov
lcall
fwait
jle
sbb
faddl
and
lcall
xchg
push
cld
cmp
jmp
fs
sarb
push
cmp
adc
mov
loope
mov
mov
shlb
ds
inc
push
adc
dec
mov
das
mull
mov
push
pop
lock
cld
aas
xchg
and
cmp
push
sahf
add
dec
pop
xlat
clc
mov
ja
xchg
mov
leave
bound
fldt
arpl
xchg
or
leave
xchg
std
jno
cmp
icebp
std
call
mov
cwtl
lcall
lods
cmp
mov
stos
cmp
call
movsb
inc
test
test
dec
or
test
xchg
loop
jnp
ljmp
fildl
adc
arpl
mov
ret
push
lahf
push
stos
inc
lcall
icebp
fs
test
cltd
ss
push
jno
js
add
sub
xchg
fwait
xor
lcall
leave
enter
xchg
xor
nop
mov
bound
push
decl
lock
dec
pop
and
mov
xlat
ret
xor
or
mov
andb
pop
pop
jnp
incl
jecxz
dec
sbb
push
sub
pop
bound
scas
jno
mov
repz
lock
cmp
fnsave
add
int
pop
sbb
mov
jg
mov
dec
dec
outsb
out
lods
js
or
loop
in
inc
adc
aad
mov
pop
int3
mov
push
or
js
test
decl
das
ret
xor
aad
lock
and
add
mov
leave
incl
or
inc
mov
lretw
test
lcall
pop
lds
ficoms
les
jmp
pop
outsl
push
sti
lods
into
out
ljmp
push
jae
int
xchg
dec
fwait
or
jbe
mov
fcomi
or
or
cs
call
inc
pop
fstl
out
cli
jmp
dec
or
cld
mov
lcall
call
adc
jmp
inc
pop
or
movsb
dec
push
or
icebp
xor
mov
aad
jge
xor
inc
outsl
cli
lcall
push
pop
imul
fdiv
adc
insb
xchg
mov
pop
aam
add
mov
jns
pop
jne
cmp
cmpsl
pop
inc
inc
in
stos
push
hlt
cs
mov
cmp
pop
lret
daa
xchg
rorl
dec
xorb
mov
push
into
pop
push
add
ljmp
out
mov
enter
xorb
ja
cmp
pop
pop
or
in
pop
shl
sar
ljmp
lock
cmp
inc
in
dec
into
jns
pop
jg
adcb
sbb
fiaddl
lcall
cs
dec
jno
scas
fisubrs
jne
jb
cmp
sbb
jle
jle
scas
cld
mov
rcll
xor
loope
outsb
mov
lret
cli
test
test
mov
bound
push
stos
adc
mov
dec
std
cmp
les
dec
je
punpckldq
orb
ljmp
sub
inc
arpl
pop
mov
pop
or
loop
sbb
loopne
inc
jmp
fnsave
ljmp
imul
fnstsw
icebp
xchg
xor
push
mov
cli
into
repnz
xor
cmpsl
hlt
push
push
push
add
call
rcl
or
fcomip
aad
or
lret
loop
icebp
outsb
dec
pop
inc
sarb
jg
add
fidivrl
jnp
adc
fidivrl
dec
push
ljmp
lods
xchg
fidivs
ret
add
lcall
test
movsb
xchg
add
fimull
ret
mov
mov
mov
ds
out
outsl
clc
call
and
clc
push
jg
lcall
and
xor
cld
inc
sti
xchg
and
jae
xchg
push
mov
xchg
ljmp
data16
imul
stos
and
scas
mov
mov
mov
mov
push
cmc
lcall
lcall
dec
in
out
pop
ds
jo
cld
push
pop
jp
outsb
das
jp
and
ljmp
jmp
pushl
pop
pop
push
and
bnd
push
cltd
scas
pop
pop
int
xor
decl
dec
dec
out
inc
fmull
mov
adc
sbb
jl
mov
divb
dec
push
sub
sti
inc
out
aaa
sbb
jbe
dec
mov
jg
add
xor
mov
ss
out
cmp
fdivr
aad
cmp
mov
dec
repz
lahf
inc
pushf
and
mov
sbb
ljmp
outsl
stos
pop
adc
mov
add
jge
xchg
cmp
and
sbb
loope
and
xor
decl
jae
mov
or
add
cmp
pop
push
cmpsb
mov
pop
cwtl
fs
fimuls
xor
pop
mov
das
cli
ljmp
mov
add
push
scas
and
push
adc
push
dec
movsb
pushl
loop
lret
mov
mov
es
cmp
ljmp
lods
sbb
mov
fs
out
sbb
decl
je
mov
std
data16
out
sub
jecxz
add
jbe
or
call
adc
insl
xchg
xchg
cmp
xchg
or
mov
gs
jae
mov
adc
xor
addr16
mov
lds
xchg
popf
aaa
add
xchg
add
pushf
std
ljmp
ror
fdivrs
mov
das
outsb
push
rolb
mov
pushl
in
lods
cmp
stc
pop
in
sbb
pop
rcrl
xlat
sub
push
test
push
es
lds
cltd
xor
mov
xor
stos
mov
xchg
les
call
jl
adc
iret
add
rcr
mov
ud0
fbld
data16
out
je
daa
and
jl
dec
xchg
lods
jo
inc
outsl
add
ljmp
hlt
cmp
add
fisubrl
pop
into
pop
mov
out
lcall
and
mov
jmp
xchg
and
xor
sub
out
cmpsb
cmpsl
out
insb
sbb
jno
add
pusha
and
jg
pushl
inc
mov
mov
shr
ja
xchg
lret
test
push
in
jg
xchg
mov
jmp
mov
jne
shll
xor
push
jo
lcall
cmc
aam
notb
mov
xchg
test
movlps
fmul
into
mov
int3
push
incl
movsl
lods
std
inc
or
mov
sbb
loop
mov
mov
clc
imul
mov
sub
and
inc
jnp
mov
adc
incl
xor
jl
mov
xor
arpl
mov
dec
cmpl
jg
mov
repnz
mov
rcrb
jae
jecxz
fnstsw
push
xor
fwait
clc
data16
jmp
insl
push
clc
xchg
jmp
outsl
xor
imul
es
test
sbb
mov
pop
je
dec
addr16
pop
leave
shrl
aad
mov
rclb
outsl
jns
cmp
mov
arpl
mov
xor
repnz
cmp
pop
aad
or
or
sti
jae
lret
jg,pt
mov
nop
inc
addl
xor
clc
xor
mov
cli
jmp
cmp
pop
decl
pop
mov
aad
addr16
leave
scas
jl
dec
or
push
mov
and
lcall
cmp
fs
xlat
pushf
mov
loop
aad
pop
add
je
lret
jmp
sti
imul
and
in
or
jmp
sub
and
nop
ljmp
jo
mov
dec
mov
xor
decl
xchg
mov
aam
ret
fsubl
xchg
xor
ljmp
in
push
vpmaxub
gs
dec
adc
xor
iret
aas
pop
popa
mov
sub
lea
lahf
shrb
decl
sbb
incl
pop
pushf
lcall
and
int3
ja
jno
sub
or
scas
cli
lcall
pop
pop
inc
xchg
inc
mov
sbbl
lahf
jp
mov
fbld
pushl
lret
addb
sub
xchg
frstor
mov
inc
xor
sbb
aad
subb
xchg
hlt
outsb
imul
sahf
mull
mov
nop
or
lea
mov
xor
sbb
ljmp
jecxz
push
mov
icebp
int
movsb
das
jo
mov
sbb
stos
inc
adc
push
xor
dec
jns
insl
dec
cld
dec
mov
clc
mov
sub
sbb
pop
imul
aam
lock
jns
adc
xor
lcall
or
repz
pop
clc
fstl
and
cmpsb
push
or
pusha
or
call
or
cmc
jo
sub
dec
fsub
mov
mov
mov
sysenter
inc
adc
xor
xchg
leave
xor
jae
movsb
imul
mov
pop
or
mov
ljmp
sub
repz
pop
or
and
or
das
sub
xor
lcall
mov
movsl
ds
test
jle
sbb
stos
inc
adc
mov
std
jmp
shrb
jno
mov
movsb
push
and
jmp
test
dec
fcoms
dec
mov
in
mov
outsl
shr
fcomps
xchg
xchg
testb
ljmp
inc
adc
pop
xlat
mov
fcomps
js
push
inc
add
add
or
aad
ljmp
neg
hlt
imulb
fldenv
lret
outsb
gs
cmp
or
repz
ret
pop
jb
sbb
cld
jmp
fdivrp
or
addr16
lret
pop
pop
xor
jle
lea
retw
loope,pn
mov
in
pop
add
inc
jg
test
clc
jb
jae
in
adc
int3
sbb
incl
add
sbb
shlb
mov
pop
fdivl
mov
jecxz
pop
bnd
sbb
cmc
adc
int3
rep
ret
fildl
jge
sti
js
dec
cs
cwtl
add
daa
lock
dec
lods
cmc
scas
ror
cmp
das
mov
push
pushf
test
ljmp
ljmp
jnp
call
fsubs
arpl
pop
bound
mov
jb
fimull
shll
cmp
dec
jl
jmp
loopne
xchg
shlb
lock
mov
jnp
add
sub
dec
out
mov
xchg
call
mov
xchg
sub
mov
lcall
loop
filds
pop
std
push
mov
sub
pop
mov
add
adc
mov
sbb
or
icebp
call
cld
xor
inc
jo
cmp
jge
inc
fwait
shll
out
add
mov
leave
decl
test
inc
and
and
test
cltd
cld
push
dec
and
cmpsb
lcall
es
lods
outsl
xchg
fildl
stos
clc
cmp
pop
xchg
mov
push
incl
cmp
inc
ljmp
xor
mov
sahf
mov
and
decl
fbstp
mov
imul
sub
jp,pn
popf
and
inc
adc
adc
decl
test
movsl
or
xor
xchg
mov
popf
and
mov
incl
loop
pusha
mov
cs
adc
lret
jp
mov
push
mov
and
jmp
inc
mov
or
insb
dec
shll
jne
outsl
es
pushl
add
call
loope
movhps
subb
push
mov
outsl
ljmp
insl
adc
jnp
inc
fnclex
or
adc
lock
jb
mov
mov
dec
shl
test
jp
cmp
lahf
jbe,pt
and
lret
ljmp
add
fcmovnb
fnstsw
or
mov
xchg
popf
sti
inc
jecxz
aad
jecxz,pt
inc
cmpsb
daa
std
cld
add
mov
xor
push
jp
flds
jbe
jmp
mov
jp
sbb
push
sub
add
push
es
decl
fsts
dec
push
xor
movsl
addr16
shrl
add
jmp
xor
xchg
lods
pushf
test
addr16
add
and
loop
mov
jo
das
jmp
hlt
addb
jno
fldcw
push
mov
jle
jne
fstpt
cld
popa
jmp
push
and
stc
cmp
mov
jle
imul
frstor
jbe
ret
in
cmp
sbb
fisttps
cld
incl
scas
sbb
push
shlb
outsl
in
jno
leave
repz
iret
fldt
sub
out
call
jp
rolb
lret
lock
jg
fisubl
xor
pop
pushl
mov
fsts
and
mov
pop
sti
jmp
enter
cld
in
mov
incl
sub
aad
in
jo
fnstenvs
pop
and
sar
pushl
frstor
insl
out
lret
lods
stos
movsl
out
and
and
insl
jg
outsl
stc
and
mov
sub
sbb
shrl
ss
jg
pop
out
roll
es
xchg
lret
push
xor
and
mov
cmp
lret
pop
or
dec
jmp
loope
xrelease
orb
sbbb
das
adc
decl
addb
xorl
xor
out
scas
subl
push
leave
int3
xchg
lcall
adcb
sahf
orb
lds
or
xchg
mov
js
in
es
xchg
fdivrl
mov
xchg
add
sub
fistps
jmp
cwtl
cli
pop
cmp
jecxz
outsl
sbb
push
mov
pushf
fisttpll
cmpsb
div
add
push
and
push
add
or
sub
cmp
push
ret
push
dec
and
xor
pop
movsl
fsubl
pop
inc
and
mov
xor
push
mov
vmovaps
shlb
pushl
mov
ja
popa
je
inc
sub
pop
or
push
shr
dec
adcb
aad
jle
int3
pop
xor
mov
fstps
push
adc
or
rep
mov
adc
lret
incl
pop
cmp
xchg
into
je,pn
out
fbstp
xor
loop
jge
das
sub
push
inc
or
jg
dec
mov
adc
pop
jecxz
movsb
pop
xchg
cmp
xorl
and
std
pushl
dec
mov
out
xor
insb
es
inc
pop
dec
xor
sub
pop
xchg
or
ja
pop
bound
ss
cmp
dec
xchg
and
add
dec
stos
xadd
decl
or
add
stos
mov
addl
ljmp
jp
or
jp
xchg
mov
jg
pushf
mov
std
and
inc
addr16
ret
lods
mov
dec
stc
mov
lods
and
fbld
cmp
pop
stos
lcall
lahf
jg
fildll
add
test
add
fiaddl
dec
rclb
call
adc
subl
test
icebp
mov
sbb
lods
mov
xlat
mov
mov
ljmp
xor
cltd
xlat
dec
outsb
sbb
nop
enter
or
pop
popa
xorl
aas
fwait
xor
fldenv
mov
mov
push
nop
adcb
add
out
lret
lcall
mov
in
adc
cltd
stos
jle
push
arpl
adc
or
fs
fwait
or
mov
jns
negl
mov
mov
into
es
xor
lcall
fwait
mov
lods
xchg
cmc
outsl
pop
insl
repnz
nop
mov
adcl
ss
cmp
ljmp
rcr
jo
scas
sbb
jbe
pop
or
insb
andl
shl
shll
in
call
add
fildl
xchg
aaa
mov
sahf
dec
cmp
insb
push
inc
dec
mov
pop
call
cld
xlat
xor
mov
mov
lods
out
jbe
lahf
cltd
mov
mov
int3
out
pop
hlt
dec
pusha
jno
subb
xor
ljmp
pop
popf
popf
sub
lcall
push
mov
popa
iret
fstpl
sub
jg
xor
and
sahf
pop
pop
movsl
or
lcall
out
jg
sahf
push
test
adc
sub
mov
pop
cmpb
stos
inc
pop
scas
loop
aam
and
lcall
push
and
lock
mov
or
sbb
pushl
cmc
adc
push
jbe
inc
push
mov
loopne
jns
jl
jne
push
jbe
mov
jp
and
jmp
mov
and
rcl
cmp
add
inc
out
lret
ja
clc
mov
sub
jg
dec
dec
inc
sub
lret
aam
pop
cld
jmp
std
inc
andb
sub
mov
iret
int3
pop
lds
or
or
xchg
xor
push
jb
iret
sahf
inc
cmp
dec
cmp
ljmp
fists
sahf
imul
nop
test
rorl
sbb
dec
and
call
shrb
mov
sub
xchg
cmp
scas
inc
daa
lret
mov
out
cmp
jne
clc
pop
sub
movsb
sub
xor
push
fnsave
lods
cmp
add
pushl
inc
mov
ret
add
mov
jno
jecxz
idivb
cmp
les
push
sbb
dec
loope
ficoml
outsl
cmp
add
ss
sbb
sbb
enter
addl
cwtl
dec
inc
lcall
decl
mov
pushf
mov
and
sahf
flds
mov
and
jecxz
inc
mov
in
loop
mov
mov
and
jbe
aam
cmp
add
mov
push
jne
cmp
jmp
pushf
lods
int
ljmp
and
adc
fcomp
aad
icebp
movsl
and
xor
ljmp
cmp
das
enter
ljmp
dec
pop
sub
push
pusha
call
or
fistl
mov
hlt
add
push
sbb
jle
idivb
mov
mov
ljmp
sub
leave
out
aam
sbb
cli
in
sub
loopw
add
xchg
cmp
pusha
arpl
lcall
or
lcall
sbb
scas
inc
out
cltd
mov
cmpsb
cmp
scas
shl
pop
hlt
cmp
mov
mov
jg
testb
and
cmpsl
lret
xor
mov
mov
sub
call
movsb
notl
fisttpl
push
fmul
dec
mov
and
xchg
dec
mov
mov
xchg
xor
mov
pop
mov
iret
test
jge
cmp
add
push
fs
xchg
mov
dec
ret
sub
ret
push
pop
push
aas
lock
popf
xor
push
adc
movsl
ss
shll
insl
xchg
and
inc
dec
lahf
mov
add
jnp
lret
js
mov
mov
xor
repz
ljmp
push
mov
inc
xchg
test
cmpsb
xchg
cs
call
out
decl
or
xor
enter
int
mov
imul
sbbb
jmp
dec
stos
aad
mov
movsl
arpl
ljmp
sub
sysenter
frstor
mov
pop
int
lods
loop
lret
int3
movsl
xor
dec
pushl
loopne
or
aas
pop
outsl
push
out
mov
in
add
sbbl
fimull
or
mov
mov
mov
cmp
cmp
jbe
ret
in
dec
std
das
or
repz
pop
mov
or
outsb
jecxz
sbb
pop
mov
insb
mov
sub
fildl
push
leave
cmp
and
outsl
jb
arpl
fdivrs
filds
and
mov
mov
mov
fdivrp
adc
inc
add
lods
test
mov
sub
mov
mov
jnp
int
mov
psllq
repnz
lcall
pop
pushf
rclb
incl
xchg
aaa
fsubrs
mov
aaa
cmpsb
fists
or
push
pushf
jmp
pop
or
add
pusha
inc
das
and
insb
aas
mov
pop
aaa
insb
fbld
jmp
sti
jb
mov
rcll
add
das
stos
das
rorl
cmp
aad
mov
out
jb
push
repz
pop
push
add
dec
xor
dec
mov
shll
or
clc
pop
rcl
sbb
jbe
pop
pop
roll
mov
push
inc
cmpsl
cmpsl
filds
push
lret
mov
mov
rolb
inc
push
cld
sub
incl
push
adc
fsts
cltd
lcall
adc
mov
enter
and
cmp
incl
pop
sbb
out
adc
js
push
mov
inc
in
movsl
mov
jmp
sarb
mov
xchg
stos
lret
cmp
pop
adc
adcb
cmp
jmp
jno
das
cmp
cmp
add
mov
les
fsubr
inc
push
adcl
jmp
mov
int3
loop
sbb
dec
popf
fisubrl
sub
dec
pop
add
icebp
lret
hlt
in
lret
mov
lods
sbb
das
jmp
inc
lret
lret
xor
inc
scas
ret
inc
mov
xchg
inc
jne
jmp
int3
push
and
test
inc
sub
and
movsl
std
xchg
notl
sbb
out
in
cmpsl
sti
cltd
cmpsb
lock
xlat
sub
mov
fisttps
mov
addr16
dec
mov
lcall
movsl
cmc
mov
mov
test
mov
mov
cltd
xchg
ret
jnp
fistps
mov
iret
cld
or
dec
inc
xor
lret
xor
stc
stc
mov
pop
dec
cs
inc
lds
push
inc
xlat
outsl
dec
enter
mov
mov
push
and
test
decl
out
mov
ljmp
shr
mov
stos
fcmove
sarb
clc
js
xor
call
adc
cmp
add
std
and
sub
nop
mov
ljmp
or
mov
pop
repz
stos
push
sub
lcall
pop
cs
xlat
fidivl
mov
cmp
xlat
movsb
and
sbb
dec
es
iret
sub
aam
fsubl
push
mov
rcrb
inc
dec
push
sbb
fstpt
ljmp
in
out
stos
cmp
mov
xchg
adc
test
sub
ljmp
clc
dec
sbb
inc
pushf
fstp
mov
daa
inc
leave
and
sbb
stos
push
cmp
popf
imul
hlt
call
mov
fimull
rcrl
in
push
aaa
das
sbb
cltd
adc
pop
sub
inc
add
icebp
data16
or
ret
loop
sar
push
pop
and
lcall
cmpl
mov
sbb
or
dec
lods
or
inc
pop
mov
jmp
push
mov
sbb
clc
add
add
mov
cmp
movsb
cmpsl
es
jnp
jle
or
scas
adc
pushf
arpl
and
dec
ss
cmp
cs
cmc
ud0
ljmp
scas
dec
loop
lock
xchg
mov
adc
fbstp
lret
xor
in
fcmovnb
nop
xchg
cmp
jecxz
shrb
push
lea
loope
jecxz
and
and
call
cld
lcall
into
out
fadd
xchg
add
cmp
pop
inc
lcall
outsl
enter
or
pop
mov
sbb
stos
inc
mov
nop
mov
loop
jmp
jmp
jp
adc
or
in
push
mov
xchg
push
cmpb
add
jmp
adc
ja
and
cmp
pop
scas
pushf
dec
movsb
adc
lock
mov
adc
and
xchg
fcomip
push
dec
ja
jecxz
pop
ss
arpl
mov
decl
jg
ljmp
mov
lcall
pop
ror
loopne
call
movsl
inc
jo
and
sahf
push
mov
test
fmull
pop
scas
sub
out
lock
repnz
enter
fadds
sub
pushl
xchg
arpl
popa
pop
dec
lcall
or
fiadds
sub
rol
loop
mov
out
lock
fwait
pop
jl
inc
sbb
lret
ja
xor
ja
call
xchg
fwait
mov
shl
adc
or
pop
lock
pushl
xchg
add
push
inc
xchg
jae
rcll
cmp
in
outsb
mov
jmp
fstpl
xchg
mov
lcall
jg
push
sti
jp
cmpsl
mov
pop
ljmp
adc
sbb
mov
xchg
ficompl
dec
xor
push
les
imul
sub
call
xor
addr16
pushf
ds
adc
inc
call
daa
sahf
mov
outsb
mov
jbe
fwait
pushl
push
xor
dec
inc
cmp
mov
loopne
cmp
mul
pushl
sti
stos
push
pop
lds
das
imul
and
mov
es
mov
sub
add
jmp
outsl
lret
subb
add
jmp
pop
insl
popf
add
jp
decl
bound
jmp
cs
in
fwait
adc
negb
mov
push
inc
push
adc
and
jnp
push
cld
call
out
shrb
jne
sub
fldenv
loopne
cmc
cld
mov
cmp
mov
stos
and
fwait
test
testb
sbb
mov
cmpsl
xchg
stc
xor
ljmp
addr16
and
jl
and
test
pushl
jg
dec
xor
dec
cmp
mulb
cmp
cmpb
faddl
mov
das
ss
add
mov
jno
cwtl
jns
sbb
inc
call
ljmp
xor
jbe
mov
out
push
data16
push
sub
mov
dec
out
cwtl
imul
lcall
lods
jl
xor
pop
adc
ds
jge
push
mov
and
lods
and
pop
mov
jbe
repnz
jmp
lea
cmp
pop
inc
add
cli
push
iret
test
fdivrl
mov
data16
clc
ljmp
or
mov
pop
iret
mov
mov
sub
add
mov
ljmp
push
aam
es
jle
cmp
adc
mov
or
movsb
sbb
or
inc
mov
sbb
mov
pop
xchg
and
std
inc
jno
ret
cmp
mov
jnp
inc
dec
sti
ljmp
sub
cmp
jbe
push
hlt
adc
fdivrp
add
jp
fbstp
call
stc
cmc
xchg
das
aam
mov
ja
fwait
movsb
das
movsb
dec
add
dec
subb
xor
and
jge
int
imul
mov
sub
push
fdivrl
lods
aam
sub
pushl
cld
jg
pop
inc
into
push
add
addb
dec
pop
lret
frstor
inc
fidivs
lcall
loop,pt
lock
inc
push
call
into
push
movsb
jb
das
addb
repnz
repnz
xchg
cmp
incl
aam
dec
mov
or
jecxz
shl
sub
xor
mov
loope
decl
pop
add
jecxz
int3
mov
adc
ljmp
xor
xchg
fs
xor
inc
mov
pop
stos
xor
int3
orl
add
cmp
mov
mov
xor
call
push
fimull
dec
mov
test
sbb
ja
sbb
push
inc
jge
mov
push
out
cwtl
test
adc
in
sbb
jg
jbe
mov
mov
push
inc
popf
sahf
xchg
add
out
movsb
sbbb
dec
push
mov
mov
loop
push
shll
mov
inc
inc
xchg
sarb
pop
int
xchg
dec
mov
cmp
ret
daa
das
hlt
inc
lods
mov
dec
es
pushf
sbb
aad
imul
js
sub
mov
js
cmp
dec
call
ljmp
inc
dec
cwtl
xor
ljmp
cs
jmp
aam
xchg
and
push
cmp
and
int3
shrl
jmp
dec
jmp
pop
imul
cld
mov
cmp
sbb
dec
xlat
jbe
scas
stos
and
sub
fidivs
cmp
mov
fidivrl
daa
dec
jae
mov
dec
call
mov
dec
divl
mov
and
inc
icebp
push
lahf
jmp
out
pop
in
jbe
rcrl
add
sbb
lock
jg
lods
fimuls
jo
imul
push
ret
xlat
inc
std
xor
jne
fs
decl
mov
push
push
xchg
test
pop
test
repz
cmpsl
xor
ljmp
inc
xchg
mov
dec
cmp
mov
dec
jmp
pop
fsubrs
cmpsb
lahf
mov
pop
or
stc
cmp
mov
popf
outsb
movsl
outsl
das
testb
inc
lods
outsb
test
hlt
push
fldt
icebp
jno
inc
stos
out
decl
jecxz
daa
rcrl
arpl
xchg
add
adc
push
psrld
fs
call
nop
pusha
cmp
mov
add
push
xchg
popf
call
out
inc
xchg
aas
xor
mov
push
cmp
stos
or
xor
push
add
xor
dec
int
jb
lds
std
rclb
in
dec
xchg
push
orb
dec
pop
sti
mov
jg
jg
addl
adc
addr16
out
jl
in
stos
sbb
push
jg
mov
sbb
movsl
xchg
sbb
dec
inc
shll
inc
call
mov
mov
xchg
and
jecxz
in
xchg
leave
test
ja
and
inc
mov
jnp
push
pop
clc
jo
dec
repnz
call
lods
popa
sub
dec
xchg
in
xor
dec
cwtl
int
repnz
loop
or
cmp
lahf
pop
pop
shll
fdivp
into
out
jbe
call
cmp
push
jg
fld
inc
xchg
lahf
xorl
pop
pop
lret
in
push
jns
ljmp
jo
mov
sbb
mov
xchg
jae
push
mov
decl
mov
call
dec
mov
addr16
cli
imul
sbb
sub
mov
ljmp
popf
test
movsl
es
ds
out
jns
daa
hlt
outsl
or
jmp
cmp
lcall
adc
inc
or
jmp
mov
lock
xchg
ja
lcall
jmp
lret
push
and
negb
xchg
inc
movsb
popf
fcoml
or
shl
fnstenv
mov
call
lret
push
jge
repnz
mov
xchg
push
shl
lcall
jmp
cmc
mov
mov
xor
push
es
andl
or
xor
pushl
fsubs
out
adc
push
cs
cwtl
pop
imulb
fwait
bound
inc
mov
pushl
lds
int
xchg
or
iret
fnstsw
cmc
rcll
push
cwtl
push
repz
fimull
ret
inc
push
sbb
loopne
xchg
in
idivb
xchg
adc
sub
sbb
pmaxub
push
pushf
xchg
mov
jl
ljmp
and
xchg
and
test
out
or
sub
and
mov
rcrl
add
int
cli
out
aas
and
lcall
pop
out
scas
sub
inc
mov
movsl
lods
mov
fwait
push
or
test
push
adc
call
std
lahf
stc
adc
mov
dec
and
and
and
mov
stos
aaa
mov
cmp
shlb
jge
mov
xchg
fcompl
jg
cmpsb
sub
jae
mov
fsubl
mov
sbb
and
test
dec
pop
dec
call
decl
scas
cwtl
mov
popa
xor
xchg
cmp
rclb
fdivr
cld
pop
mov
and
fidivl
outsl
rcr
cli
popaw
dec
inc
fwait
js
gs
mov
jmp
daa
mov
push
ficomps
sti
pop
cmp
mov
mov
jb
lock
pop
jg
aad
es
in
outsl
or
push
mov
sub
mov
ds
sti
or
mov
lods
gs
popf
push
call
mov
dec
mov
xor
xchg
mov
div
loopne,pn
cmc
and
in
jmp
mov
sti
and
push
push
les
pop
lock
sbb
dec
sbb
scas
out
mov
mov
ljmp
push
push
push
adcb
sub
roll
sbb
xchg
ret
mov
sbbl
ret
or
lahf
inc
test
sahf
jo
ljmp
jp
push
mov
inc
dec
shrl
pop
inc
mov
rol
mov
pushf
test
cmp
mov
das
cli
mov
stos
xchg
andb
cmp
sbb
mov
mov
idiv
ljmp
push
rorb
push
clc
xchg
bound
adcl
enter
icebp
sahf
cmp
fmuls
outsl
xor
pushf
pop
pop
mov
sbb
cmp
xchg
in
and
lcall
dec
rorb
mov
andl
adc
mov
lret
mov
cmp
icebp
ss
decb
mov
pushl
sbb
sbb
dec
popa
sbb
lcall
jle
loope
adc
jl
bound
aaa
std
mov
push
or
pop
and
mov
ja
mov
cmp
jmp
xor
cmp
push
and
es
jns
ret
scas
push
lock
jmp
xchg
xor
and
push
or
pop
xchg
lret
setae
decl
rorb
adc
pop
pushf
cmp
sub
lahf
add
addr16
cmp
jo
mov
lcall
fisttpll
add
notl
mov
shll
cmp
push
jmp
cmp
pop
les
lea
iret
jecxz
xchg
fcomps
push
aas
mov
ja
incl
lret
mov
xchg
xchg
stos
xor
mov
add
sti
decb
cs
das
scas
xor
adcl
call
jp
sub
out
std
inc
loopne
xor
pop
sbb
fs
jle
mov
and
cwtl
in
or
jmp
jbe
out
in
pushl
inc
or
nop
pusha
and
and
mov
cmc
jmp
jmp
xchg
and
sub
insb
xchg
or
dec
or
xor
fadds
stos
push
inc
and
inc
decl
or
jl
imul
outsb
fiadds
decb
cmp
sarl
iret
test
outsl
and
incl
repnz
lcall
loope
ljmp
lcall
int3
je
mov
rcrb
xchg
mov
rorl
ret
scas
cmp
or
enter
and
sti
and
fprem
dec
shr
imul
stos
call
lds
js
and
sbb
inc
sbb
aad
mov
ret
cmp
icebp
pop
pop
lahf
insb
mov
jecxz
sbb
lret
sub
jg
lret
or
xchg
sub
mov
jmp
ljmp
xor
into
mov
rorb
pushf
mov
sti
lret
popf
jnp
nop
loopne
mov
jg
jmp
mov
fsubl
fld
jle
lods
dec
in
mov
pop
cmpb
mov
cmpsl
in
xchg
pop
or
bound
ss
call
repz
pop
ss
addr16
mov
or
into
add
imul
call
and
sbb
int3
pushf
int
imul
jl
leave
sub
aam
mov
pushl
lret
in
lds
push
popa
test
shrl
je
lcall
mov
jno
jp
xchg
out
daa
and
jg
ljmp
add
out
push
mov
loopne
ss
call
jg
dec
xchg
daa
sub
dec
cmpsb
test
xchg
sub
cmpsb
cmpsl
dec
pop
mov
lds
add
xchg
lcall
xchg
xchg
pusha
mov
jnp
aad
cld
in
push
out
pop
sbbb
stos
pop
bswap
add
and
stc
add
into
and
fimull
enter
fidivl
icebp
subb
insl
mov
pushl
push
jge
sub
push
xchg
loop
push
xchg
push
outsl
inc
ja
int
mov
mov
cld
lea
and
in
xchg
mov
fwait
and
mov
pop
popf
stc
inc
sbb
insb
lcall
mov
out
fstpt
add
fnop
das
cmp
dec
lret
rcl
push
popa
sbb
decl
xor
xor
cmp
int3
jmp
fstpt
inc
xchg
mov
mov
decl
cmpsl
lret
cs
cmpl
addr16
jno
mov
push
aad
sub
jle
sub
jmp
mov
and
or
and
push
lea
xor
dec
decl
add
inc
jnp
jp
loope
dec
jge
stos
rcl
lods
ret
xchg
outsl
mov
incl
mov
add
fs
cmp
and
loopne
lar
lcall
jg
or
add
cmc
rorl
pop
movsl
inc
mov
decl
xlat
jl
outsl
incl
adc
hlt
outsb
test
sbb
pusha
fsubrp
push
incl
sub
push
xor
mov
jnp
pop
pop
jle
or
aam
dec
cld
insb
pop
iret
in
jmp
pushl
sbb
cmp
mov
mov
lea
fucomp
mov
mov
pop
cld
decl
inc
sahf
mov
pushf
jmp
cmp
std
fucomp
sub
pop
shrl
mov
xor
imul
cmp
es
out
mov
adc
xorl
incl
stos
mov
aaa
push
cwtl
into
mov
jmp
in
repnz
movb
push
add
inc
ja
out
mov
lea
push
shlb
ja
jmp
or
push
cmc
cli
scas
and
icebp
mov
stos
mov
lods
in
lcall
lahf
push
scas
test
pop
ljmp
push
test
pop
fdivrl
sub
mov
add
mov
inc
into
nop
test
ret
fs
scas
pusha
dec
cwtl
pop
loope
sbb
or
push
inc
cmc
out
mov
fwait
push
ljmp
jmp
sub
sub
mov
mov
pop
push
adc
mov
incl
pusha
dec
out
dec
sbb
ficomps
cmp
ljmp
jl
push
mov
out
dec
sub
mov
pushf
popa
lahf
sbb
push
xor
ljmp
int
jecxz
adc
xor
sbb
aaa
jo
orl
add
ljmp
dec
xor
ret
pop
mov
imul
pop
xor
mov
hlt
push
jg
xor
scas
pushf
cmp
mov
mov
rol
push
fimuls
inc
mov
push
ljmp
xor
ret
pop
decb
mov
jge
lret
scas
outsl
pop
dec
pop
fcmovnbe
out
mov
xchg
dec
dec
fsubrs
cmp
insb
pop
mov
test
or
mov
xor
jnp
push
dec
negb
mov
sub
ljmp
aad
imul
sub
cmpsb
or
aad
sub
cwtl
imul
pop
add
mov
cli
push
fs
xor
pop
enter
xor
lahf
jle
cmp
cwtl
mov
fdivr
call
xchg
push
add
cwtl
lcall
dec
out
and
push
ja
add
ljmp
out
inc
stc
cs
or
mov
mov
repz
ret
aaa
std
mov
leave
in
push
rolb
fmuls
sar
jg
subl
add
xchg
stos
mov
push
and
dec
sub
inc
mov
pushl
cld
dec
loope
int
rol
jecxz
sahf
xor
jne
adc
out
aad
incl
in
mov
dec
mov
jle
aam
dec
repz
stos
xchg
or
jg
cld
sub
sbbb
lcall
lock
cli
mov
inc
outsl
jg
xlat
or
fidivs
xor
lea
outsb
add
out
sbb
mov
outsb
mov
mov
fldenv
lcall
jmp
imull
dec
out
scas
adc
adc
jb
xor
sbb
addr16
nop
sub
fidivl
dec
dec
cmp
jge
sub
dec
aad
scas
push
inc
js
icebp
cmp
call
mov
fwait
bound
adcb
testl
jp
in
adc
inc
mov
jbe
scas
cmp
jmp
or
jbe
mov
sbb
icebp
xchg
das
or
clc
pushl
pop
push
das
loopne
fcomp
mov
and
dec
push
mov
stos
aam
xchg
shl
cli
jae
jmp
fiaddl
fxch
push
mov
xchg
mov
xchg
or
mov
lock
xor
repnz
and
add
mov
cmp
test
sarl
out
out
fidivl
mov
outsb
ss
jo
movsb
mov
test
call
stos
dec
outsb
cmp
and
mov
adc
daa
cs
in
sub
xchg
lcall
cmpsl
lea
xor
push
cmp
int3
lret
adc
nop
dec
jbe
ja
std
decl
jb
jmp
aas
add
xor
push
mov
in
mov
neg
dec
in
or
mov
inc
push
fimuls
popf
in
pop
stos
je
push
loop
cmp
fnstcw
mov
push
add
sbb
iret
push
push
popa
jae
xor
movsl
push
or
int
decl
in
xchg
mov
leave
cmp
mov
jg
movb
fisubs
jns
push
test
fs
sahf
jnp
jmp
out
pusha
jge
mov
icebp
test
movl
push
adc
dec
testl
lahf
aad
punpckldq
pop
sbb
push
adcb
jns
mov
popl
into
cs
fs
in
lods
cs
mov
sar
jmp
xor
add
adc
loopne
sbbb
addl
shll
lcall
adc
aas
xlat
mov
xchg
leave
inc
enter
jae,pn
ret
iret
or
loopne
lcall
dec
xorb
mov
cmpsb
mov
es
outsb
push
test
call
xor
push
xchg
and
jg
and
stos
mov
mov
xor
mov
add
mov
and
mov
dec
bnd
gs
xchg
test
mov
sub
and
fucomip
push
cld
pushf
imul
sbb
xchg
mov
pop
jmp
push
xchg
scas
inc
fcomp
dec
outsl
ficomps
leave
lds
push
xchg
frstor
adc
ficoms
aad
mov
pop
clc
lods
call
cmp
inc
adcl
or
inc
mov
movsl
push
cld
pop
cmpsb
cli
sub
dec
lcall
inc
fdivs
divl
idiv
lcall
loopne
jmp
cmp
addb
test
repz
mov
ljmp
adc
int
jmp
adc
ja
push
ja
sbb
and
jmp
mov
push
xlat
cmp
xchg
aad
filds
aad
daa
mov
sahf
test
lods
incl
cmovs
xlat
les
mov
dec
enter
scas
cmp
das
xchg
stos
xchg
jl
call
faddp
xor
sub
and
mov
lods
sti
adc
sbb
pushf
sti
cmpsl
ss
push
jmp
jmp
mov
in
jns
jge
adc
cld
and
inc
sbb
inc
cmpsl
sub
add
jmp
in
ret
leave
fldl2t
sub
mov
mov
lret
mov
es
add
addr16
pop
popa
push
insl
ret
cmp
test
je
incl
out
out
ds
push
ret
sbb
jnp
pushf
and
push
insb
gs
in
and
pop
test
mov
mov
lock
pushl
out
js
popa
push
jge
outsb
xchg
jb
ljmp
or
test
mov
push
sbb
into
mov
cli
or
pop
sahf
add
incl
jmp
hlt
rcll
push
out
popa
lods
ret
adc
mov
push
popf
mov
cli
out
stc
mov
adc
pop
adc
jnp
pop
jp
fwait
or
inc
into
movb
fcoms
mov
inc
mov
inc
and
push
in
xchg
pop
xor
call
mov
sbb
xorb
cli
adc
outsb
xor
adc
cmp
aas
or
mov
push
lahf
xor
int3
popf
ret
in
orl
lea
cmp
rorb
out
gs
ljmp
js
push
mov
push
jg
inc
pop
jmp
xchg
iret
lock
in
mov
inc
enter
pop
add
loopne
fcmovb
out
lahf
rorl
mov
adc
mov
nop
loop
fidivrl
cli
or
popl
insb
rolb
lcall
push
pop
push
add
call
test
jge
div
pushf
inc
gs
int3
dec
sbb
or
das
ss
jecxz
nop
adc
pusha
das
loop
push
add
push
sbb
js
stos
mov
out
add
aaa
sbb
jle
xchg
fcoml
or
fadd
pushl
pop
mov
repnz
mov
and
pushf
inc
les
add
movsb
pop
out
clc
call
out
add
mov
push
arpl
mov
popa
test
jmp
outsb
cmp
jecxz
test
push
mov
lcall
iret
dec
xchg
jg
std
fmull
sti
jg
or
xchg
aad
call
cmp
xchg
or
ljmp
add
mov
lods
pop
inc
arpl
mov
fnstsw
mov
lock
scas
inc
loope
ret
sub
push
push
repz
mov
in
adc
lcall
in
sbb
movsb
jle
loopne
or
subl
loope
lcall
xchg
cmpsb
xchg
mov
mulb
imul
std
inc
rcrb
fcmovnu
pop
loope
jns
and
pop
jmp
adcl
xchg
icebp
mov
xor
and
sti
ljmp
push
push
pop
sub
xchg
mov
push
push
jbe
leave
aam
mov
pushl
xchg
and
mov
aad
out
test
bnd
icebp
mov
cmp
dec
nop
push
mov
push
lods
jmp
jp
inc
pop
inc
dec
jbe
mov
add
ds
cmpsb
hlt
mov
sub
push
jbe
push
or
nop
xor
sarl
push
test
jg
mov
pop
fs
stos
lahf
or
sbb
xchg
enter
pushl
lea
jns
inc
insb
das
out
cmpsl
dec
test
in
sbbl
shr
cli
call
jb
movsl
add
das
lods
loope
jbe,pn
bound
mov
mov
popa
jnp
sub
cwtl
jmp
scas
aas
ss
int3
mov
pop
sar
loop
or
ficompl
arpl
lea
sub
adc
dec
loopne
xchg
cmp
push
fwait
sti
fcmovnu
mov
lcall
aas
pop
mov
int3
mov
xchg
push
inc
jmp
lods
dec
add
jb
jl
mov
test
loopne
add
icebp
mov
out
int3
xchg
pop
sub
sbb
jno
decl
test
push
xchg
dec
insb
push
addr16
sbb
mov
or
inc
xor
inc
inc
out
xchg
rsm
clc
cmp
sbb
jmp
mov
in
fwait
pop
mov
sub
pop
ds
bound
aam
push
pop
add
pop
push
mulb
mov
iret
inc
mov
nop
and
rorb
test
jg
addr16
cmovno
testl
loopne
pusha
test
push
jmp
xchg
dec
push
test
xor
out
imul
enter
inc
mov
ljmp
lret
mov
cmpl
sub
push
ss
lds
xor
in
mov
cli
jb
es
bound
jp
ljmp
rcrb
mov
movsb
jae
fdivrp
jg
adc
jle
fisubs
mov
mov
lock
inc
daa
nop
rolb
aad
movsb
mov
mov
cltd
int
jno
dec
packuswb
jge
loope
imul
enter
decl
lods
ss
mov
xchg
jge
sub
insl
and
fsts
adc
cmp
mov
or
call
cmpsb
lock
ds
lahf
inc
adc
inc
bnd
arpl
push
cld
call
hlt
insb
inc
addb
mov
and
cmp
sbb
clc
out
jmp
idivl
in
cld
into
sub
es
mov
and
nopl
sahf
adc
lcall
cmp
stos
fdivrl
or
mov
push
mov
sbb
lcall
test
xor
movsl
adc
pop
xor
mov
mov
shl
sub
insb
cmc
cmp
sbb
or
sbb
pop
ficoms
cmp
sbb
push
sarb
xchg
mov
inc
pop
jg
shlb
sbbb
sti
add
mov
sbb
mov
test
or
arpl
mov
sbbl
out
decl
negl
leave
and
pusha
sti
pop
out
mov
test
enter
je
call
push
push
loop
dec
sbb
xchg
int
mov
jl
mov
lock
sub
decl
cmc
or
mov
jns
outsl
mov
scas
xlat
repz
or
adc
call
jl
insl
jecxz
push
xchg
dec
pop
jbe
in
sahf
jmp
pop
ret
mov
xorl
pusha
gs
lds
mov
fisubrs
jg
rcrl
sub
hlt
sbb
daa
data16
pop
sbb
jmp
xlat
mov
fdivp
cmp
fdivrp
xor
xor
sbb
cmp
mov
in
popa
sub
sar
ljmp
dec
scas
cwtl
adc
lret
adc
repnz
mov
jecxz
jg
pop
hlt
jecxz
adc
pushf
push
and
mov
and
mov
inc
stc
lahf
ja
fiadds
jmp
dec
shll
xchg
mov
inc
repz
loop
mov
push
loope
inc
out
es
popf
aas
scas
jmp
xchg
das
sbb
pop
or
pop
out
lds
dec
ss
jo,pt
sub
cld
jg
inc
mov
pop
insb
adc
dec
out
xlat
jnp
adc
xchg
push
jg
dec
out
inc
cli
push
movsl
cmp
movsb
add
add
ficoms
lcall
je
cmp
xchg
test
loop
cld
push
daa
and
push
lods
lret
ljmp
inc
pusha
pop
leave
sub
push
into
push
test
testb
jnp
jb
dec
nop
test
add
push
fdivr
es
incl
push
inc
ss
sub
push
jmp
dec
push
add
ljmp
or
jl
mov
fwait
cmpsl
or
cli
jae
js
pop
sbb
decl
push
push
mov
or
xor
pop
out
cmc
int
test
or
and
jg
jmp
sbb
mov
and
add
dec
imul
ljmp
out
dec
cmpsl
mov
sti
jne
or
outsb
fistps
mulb
sbb
call
insb
add
sahf
mov
imulb
pop
push
dec
or
gs
lahf
mov
push
aaa
loopne
xchg
and
outsl
lods
incl
subl
lock
incl
push
inc
lret
add
addb
lcall
xchg
push
decl
mov
xor
or
lods
lock
fidivrs
arpl
inc
adcb
cmp
sub
and
jbe
incl
mov
sbbl
mov
or
bound
lcall
in
cmc
add
sbb
mov
mov
mov
adc
cmp
incl
add
sub
pop
cmp
pop
les
fldenv
cld
pushl
dec
aaa
inc
cwtl
pop
mov
mov
test
xor
mov
stos
ljmp
call
stos
aam
jle
sahf
push
or
cmpsl
out
pop
jnp
xor
popa
jmp
lock
fucomi
pop
xor
or
pop
dec
mov
outsb
dec
xor
jo
cli
ljmp
mov
mov
lock
mov
enter
ja
mov
popf
movl
jle
pushf
ljmp
loopne
adc
les
je
out
jmp
pushf
cmp
nop
ss
out
pop
clc
incl
cld
cmp
call
nop
loop
int
ret
pusha
xadd
int
incl
push
test
aas
or
es
mov
cmc
out
decl
or
push
pop
xor
lds
adc
test
add
adc
incl
mov
pop
je
int3
daa
in
mov
add
mov
mov
dec
sub
iret
fwait
imul
call
pop
push
add
and
mov
jp
cmp
and
cs
loope
cmp
sbb
mov
shrl
sub
xlat
add
scas
pop
push
inc
mov
adc
cmp
fucomp
mov
call
adc
movsl
mov
into
inc
sbb
jp
or
push
test
incl
or
cli
xchg
add
outsl
jns
sub
mov
pusha
daa
xchg
jb
test
lea
scas
shrd
insl
int3
popa
rcrb
dec
pop
inc
dec
inc
bound
inc
or
movsb
dec
or
xchg
loopne
xchg
cmp
inc
ficomps
sbbb
cmp
lcall
popa
push
imul
mov
aas
xchg
fsubrp
pop
lock
pushl
lea
lret
cmc
jb
fsts
mov
inc
mov
cli
ja
enter
adc
fdivl
pop
cmpsl
or
cld
call
ljmp
out
sbb
xadd
loopne
mov
jecxz
jp
dec
add
sbb
pcmpeqw
mov
dec
and
ja
testb
and
mov
sti
or
dec
dec
xchg
paddq
sti
daa
arpl
push
cwtl
jns
fists
inc
mov
gs
or
ret
popa
mov
idiv
mov
mov
mov
inc
daa
cld
push
daa
jl
mov
jp
into
cmp
lcall
daa
iret
push
jbe
mov
std
sbb
mov
mov
push
inc
dec
loopne
sub
arpl
mov
fnstcw
sbb
lock
xchg
pusha
bound
movsl
rorl
decl
jno
lcall
movsl
push
sub
and
sahf
test
mov
in
out
sub
enter
jns
add
inc
mov
push
sub
or
stos
dec
fs
push
scas
xchg
mov
add
mov
cmc
ret
je
pushw
iret
pushl
xchg
rcl
outsl
mov
and
jmp
pop
sbb
scas
loop
test
push
adc
mov
fs
std
cmc
outsl
iret
fnstcw
mov
push
add
ss
mov
cmpb
ljmp
or
add
inc
aad
fimull
insl
in
sbb
lods
sbb
cwtl
sub
inc
dec
decl
test
sbb
sarb
lahf
leave
or
sbbb
mov
cli
inc
cmp
decl
test
and
fwait
push
shrb
daa
leave
cmp
add
ret
lock
decl
mov
aas
xor
cmp
add
das
int
add
inc
inc
inc
lods
mov
inc
mov
sbb
aam
xor
scas
cmp
pop
xchg
fisubl
fcmove
jle
inc
jne
ret
and
das
cli
jg
ljmp
lea
cld
mov
ljmp
pop
out
jbe
mov
mov
icebp
lret
ds
into
add
jmp
sbb
adc
jmp
insl
gs
adc
pop
pusha
add
push
lcall
popa
sbb
incl
lret
lret
mov
sti
cmp
fbld
push
mov
xchg
inc
pop
fildl
mov
int
xchg
mov
lock
mov
mov
into
xor
add
bswap
fnstcw
subb
out
clc
dec
outsl
inc
fnstsw
sbb
fwait
pop
mov
sbb
jmp
ss
push
ljmp
dec
jo
xchg
add
push
jae
in
fxam
popa
sbb
inc
lret
ret
imul
jmp
imul
dec
mov
xlat
mov
lds
repz
sub
decl
data16
dec
pop
and
cmp
push
orb
in
iret
add
inc
sbb
out
imulb
pop
cltd
xlat
and
cmp
hlt
sahf
dec
fisttpl
repz
call
ljmp
dec
sbb
andb
or
mov
adc
mov
xchg
cmc
andb
mov
jle
int3
mov
decl
loop
loop
jp
dec
das
or
dec
pop
stc
mov
out
bound
push
adc
jmp
cmp
xchg
and
dec
jb
cmc
push
dec
jle
xlat
xchg
mov
inc
mov
call
push
ret
jmp
pop
xor
adc
and
mov
aaa
test
cmp
sub
ret
jmp
xchg
mov
xor
and
repnz
lret
cld
out
jbe
add
pop
dec
stos
loop
cmc
lcall
int
sbb
sbb
fcmovnbe
imul
movsl
enter
mov
das
fdivr
lcall
mov
jne
xchg
int3
sarb
int
adc
add
outsb
popa
dec
packsswb
lcall
ss
xchg
ret
ja
and
pop
or
and
xchg
or
and
mov
lcall
sbb
idivl
pop
jns
movsl
jge
je
sub
xchg
pop
insb
int
call
decl
test
sub
cli
js
add
mov
cld
xchg
enter
aad
xor
sub
mov
sub
and
jp
aas
mov
es
ljmp
mov
mov
mov
xor
shll
fwait
cmp
loopne
icebp
jo
pushl
std
dec
scas
lret
aam
xor
and
daa
dec
data16
dec
fsts
mov
ljmp
xor
xchg
push
outsb
in
inc
xchg
rorb
lock
push
jb
mov
cmpsl
sub
mov
mov
icebp
pop
add
push
icebp
inc
dec
pop
mov
push
lret
sahf
stos
and
inc
sbb
stos
addr16
icebp
jno
iret
mov
stc
push
addr16
call
aas
pusha
popa
aas
loope
in
sub
lds
adcl
sub
lcall
pushf
mov
push
mov
or
fcomip
mov
fldt
jns
mov
lds
addr16
push
aaa
sub
pushl
pop
mov
hlt
push
mov
les
gs
loope
cwtl
test
enter
aaa
xchg
add
push
push
dec
shl
decl
sbb
test
jne
scas
lcall
inc
js
sbb
dec
and
push
arpl
lods
out
jg
ret
ss
jne
mov
push
enter
fcomps
leave
sbb
xchg
int
cmpsl
sub
lahf
pop
lahf
pop
or
dec
int3
jmp
int3
sbb
fistl
sbb
push
mov
pop
rcll
jp
outsl
out
lcall
filds
pop
xchg
adc
and
or
addl
pushl
ljmp
mov
leave
and
mov
jno
jne
xor
mov
rcl
call
jo
add
es
inc
add
nop
cs
cmp
ret
scas
es
call
cld
mov
mov
lret
cld
mov
xchg
cmp
xor
mov
jl
out
imul
jae
mov
negb
and
cmp
js
ljmp
ret
push
fcomps
fsts
push
sbb
jmp
fwait
les
add
ds
ss
mov
les
mov
sub
call
sbb
inc
sub
daa
ficomps
xchg
jmp
jo
fidivrs
mov
dec
pop
xchg
push
mov
dec
fwait
dec
dec
fidivrs
mov
or
call
mov
mov
dec
push
sbb
pop
out
repnz
jo
test
pop
bound
jg
cmp
das
adc
nop
sbb
fisttpll
adc
mov
cwtl
pusha
jne
sbb
ljmp
sbb
mov
mov
iret
bound
andb
in
jb
lds
repnz
aaa
jns
add
mov
into
aam
je
pop
popf
dec
call
pop
sbb
dec
jns
jp
and
out
cld
ljmp
pop
int
lcall
aam
pusha
in
adc
cli
xor
sarb
fdivrp
push
mov
jb
lcall
inc
nop
aas
int
ficoms
mov
lsl
enter
mov
jmp
mov
out
mov
movsl
xor
jmp
dec
std
mov
ds
push
mov
jge
insl
icebp
sub
outsb
clc
jl
adc
decl
xor
orl
cwtl
pop
dec
cmp
sbb
in
add
movb
jns
into
inc
rcrl
jge
stc
pop
roll
xlat
push
add
ljmp
insb
cmp
xor
scas
enter
push
cli
mov
sbb
fistps
dec
cli
jns
ljmp
lea
cmpsb
xorb
cmp
jmp
lea
in
mov
in
xchg
psubusw
mov
std
push
lcall
or
roll
mov
xchg
push
xchg
out
clc
subl
jmp
outsb
in
aaa
adc
insl
jecxz
popw
pop
jno
or
pop
fildl
lcall
dec
mov
jmp
jg
add
xchg
nop
jmp
add
nop
jle
clc
incl
mov
adc
pop
dec
in
imulb
jecxz
and
or
sbb
call
cld
sub
ja
pand
sahf
xor
lods
push
addr16
and
xchg
incl
pop
in
das
sub
xchg
jnp
lods
inc
jg
add
jmp
mov
push
pop
cmc
cmpsb
pop
call
push
addr16
push
repz
cld
and
sub
mov
ljmp
mov
mov
cli
xor
lret
sbb
adc
pop
rcl
adc
xlat
lods
shl
sbb
add
jg
lods
int3
cmpb
lret
cmp
sbb
push
pop
mov
pushf
mov
pop
loopne
enter
mov
inc
mov
ljmp
decl
adc
mov
inc
and
mov
inc
outsl
xchg
adc
xchg
cmc
stos
pop
and
aas
sti
scas
rcll
decl
aam
add
add
push
mov
div
iret
mov
and
mov
es
clc
inc
push
xchg
pop
push
incl
dec
cs
int3
into
popa
add
lcall
cmovg
pusha
stos
out
jno
sbb
mov
mov
outsl
repz
xor
xor
pushl
pusha
sahf
jo
stos
data16
cmp
idiv
mov
cmpsb
add
push
fsubrl
out
cli
mov
decl
daa
gs
adc
adc
inc
pcmpgtw
shl
and
sar
out
clc
or
add
add
cmp
test
sbb
mov
mov
xchg
mov
rcr
mov
push
out
mov
repnz
xor
pushl
inc
mov
inc
adc
sti
addl
inc
mov
loopne
fcomp
icebp
mov
dec
cmpsl
pop
scas
mov
cltd
mov
sub
inc
shr
sahf
mov
subb
jg
or
jmp
jb
lds
out
in
push
call
andb
rcl
pop
jmp
lods
jecxz
cmp
sub
in
adc
fcompp
pusha
hlt
inc
lret
stc
dec
pop
dec
arpl
add
pop
cmpsl
jns
test
movsb
adc
mov
mov
loop
loope
decl
in
push
inc
sub
add
pushf
data16
mov
cmp
cmpsb
in
test
nop
mov
and
lcall
cmp
push
fmuls
dec
push
test
dec
lea
xchg
mov
stc
jo
dec
mov
popf
lcall
ljmp
fwait
in
xchg
push
out
mov
mov
cmpsb
out
pop
int3
xor
sbb
ljmp
movsb
fs
sarl
jmp
and
fwait
xchg
loopne
jb
repz
call
mov
mov
rorb
test
pop
jno
test
push
and
ljmp
test
int3
insb
pop
dec
fcompl
push
pop
out
std
cmp
call
fildll
rolb
shrb
lret
mov
mov
shrl
cmp
bound
cmp
gs
decl
pop
fcomps
sub
dec
sub
lods
shrb
add
into
mov
add
ljmp
xchg
cmc
push
xchg
cmc
pop
int3
cmp
sbb
adcb
jmp
jge
sbb
stos
mov
lock
ljmp
push
ja
ljmp
or
decl
ret
stos
mov
in
jmp
jle
inc
or
pop
mov
sbb
push
pushl
addl
mov
or
stos
adc
add
fidivrs
mov
fildll
sub
hlt
fistpl
mov
pop
pop
hlt
mov
repnz
push
fisubs
dec
jb
insl
sub
jb
mov
mov
repnz
call
xchg
stc
inc
inc
or
cmp
push
hlt
add
fnstsw
jle
adc
mov
call
test
jb
adcl
jl
lods
mov
or
mov
incl
cmp
jg
pusha
fildl
ja
in
rcll
stos
mov
nop
mov
fmull
push
daa
imul
adc
or
iret
outsb
mov
call
xor
add
inc
fnstcw
pushf
pushf
mov
ljmp
mov
mov
and
stc
xor
stc
pusha
mov
and
pushl
push
mov
xor
sub
fwait
dec
or
aaa
cmp
mov
lcall
dec
and
fs
scas
pop
adc
push
dec
and
jmp
test
dec
xor
incl
ss
lods
sbb
cltd
pushf
sbb
xchg
loop
ss
pop
adc
ret
bndldx
inc
es
jl
fisubl
pop
daa
cltd
cmp
xor
pusha
mov
lock
push
outsl
in
mov
or
jmp
jecxz
mov
js
dec
or
push
push
dec
incl
daa
mov
lds
jmp
adc
js
sbb
or
cli
pop
push
mov
add
ljmp
sbb
imul
adc
in
test
or
in
hlt
mov
add
jmp
jg
lea
adc
add
pusha
test
ret
or
data16
scas
mov
jg
addr16
push
arpl
jmp
pop
testl
movsb
jbe
es
filds
xchg
jb
ljmp
and
insb
lret
cmp
sbb
mov
cld
cld
or
dec
lods
jns
das
or
aaa
daa
decl
lret
mov
and
dec
pop
xchg
mov
insb
repz
push
fcos
call
pop
inc
lea
adc
jmp
mov
fsubr
repnz
or
outsl
mov
insb
pop
loope
mov
and
pop
push
cmpsl
sbb
bound
loop
add
xchg
nop
cmp
cwtl
sbbl
loopne
cld
test
fiaddl
sbb
sub
adc
loop
add
push
mov
call
pop
lds
cmp
xor
loop
sbb
cmpsb
cli
jg
cmp
repz
out
cmp
dec
div
push
mov
mov
subl
int
jbe
dec
mul
int3
into
jns
int
jmp
loop
ror
cmpsl
jnp
xor
rcl
mov
aad
sbb
ljmp
insb
mov
lcall
out
lock
sub
insl
pop
sbb
jl
adc
aas
mov
aad
hlt
and
lea
push
cwtl
push
lcall
fwait
mov
imul
xchg
push
sub
mov
in
lahf
pushl
cmp
aaa
js
pop
lock
out
mov
ror
fwait
mov
cmp
cmp
xchg
pushl
popa
inc
mov
in
dec
xchg
pop
mov
dec
fcoml
jle
daa
inc
outsb
call
cmpsb
fisttpl
fcmovne
jecxz
je
ja
cmc
test
mov
sub
das
cmp
xchg
xor
jb
mov
push
icebp
negb
sbb
cs
add
loope
cmpsl
das
xor
push
in
add
sub
adc
sti
shlb
pop
pop
dec
fwait
xchg
push
inc
inc
insb
je
mov
pop
sbb
xchg
mov
mov
imul
mov
pop
jne
xor
and
das
adc
test
adc
scas
mov
jmp
ret
or
pusha
cmp
xor
mov
test
scas
add
mov
sub
and
xor
jle
sti
fisubrs
jns
jl
rcrb
int
or
clc
fwait
popf
dec
push
adc
mov
js
stos
jne
imul
mov
into
cltd
sub
jmp
adc
loopne
sarl
ret
mov
inc
pop
jns
xorl
mov
test
call
lret
shlb
push
pusha
cmpsb
jp
int
mov
sub
mov
out
push
cltd
jmp
cld
call
fistpll
add
xorl
jno
push
and
push
hlt
mov
ds
cld
mov
cmp
jne
inc
std
dec
and
scas
je
dec
mov
mov
sbb
sbb
jmp
clc
ljmp
push
push
xor
int
fwait
cwtl
stos
mov
inc
ljmp
inc
jge
xor
mov
cmp
push
push
jge
std
push
mov
mov
outsb
aam
mov
adc
pushf
outsb
mov
int
mov
mov
test
jo
call
arpl
or
jp
leave
out
out
clc
sub
and
out
sub
xor
scas
mov
jle
incl
pop
pusha
imul
sub
add
add
out
aas
lods
add
mov
ja
or
sbb
push
inc
daa
push
mov
cli
mov
add
dec
mov
cmpsb
mov
inc
cmp
push
insb
push
xchg
sbb
imul
fildll
sbb
fcmovne
jge
lcall
cmpl
jb
jmp
mov
nop
inc
inc
ret
lods
fcmovnb
mov
mov
cmpsl
insl
jp
sub
test
cld
incl
fcoms
in
mov
jae
mov
adc
jne
lods
aad
scas
insl
jmp
and
aaa
fdivl
adc
pop
sbb
jns
push
mov
cmpl
pop
push
shr
push
and
testb
lock
jnp
std
call
addr16
jae
in
test
add
adc
push
push
dec
mov
jge
incl
sbb
mov
movsl
mov
or
xchg
inc
out
aam
fsts
in
lds
insl
dec
pop
popf
ret
lock
jg
into
mov
dec
and
fldl
jmp
add
sub
mov
out
repz
adc
mov
mov
xchg
nop
push
sub
mov
clc
jg
ljmp
xor
push
enter
or
leave
ret
sub
jo
movl
push
lahf
add
lret
js
pop
mov
cmp
ds
dec
dec
jle
mov
inc
rcl
fsin
jb
xchg
cmp
pavgw
push
xor
int
pushl
stos
and
jg
sub
frstor
and
fidivrs
mov
std
mov
insb
ds
push
mov
jge
lahf
and
xchg
xlat
sbb
cmc
decl
push
iret
xor
sbb
lds
lret
mov
idiv
push
lcall
fisubl
repz
sbb
clc
jg
lret
mov
ljmp
pop
dec
test
jle
scas
adcl
mov
lret
lds
lea
out
pop
pushl
push
out
cmp
lods
ret
cmp
jne
pop
aas
inc
dec
call
cltd
and
sahf
mov
mov
or
ficoms
xchg
and
enter
pop
push
scas
mov
jmp
push
sbb
rcrb
imul
ljmp
xchg
adc
mov
mov
sahf
push
mov
stos
or
shrb
sbb
and
adc
sti
stos
aad
out
jle
faddp
rcll
sub
int3
pop
test
rcrl
fldcw
notl
jle
es
push
loope
add
xor
loope
insl
scas
inc
jb
xchg
test
ljmp
inc
xchg
mov
mov
pop
adc
or
adc
jmp
dec
out
faddl
sbb
jb
pop
dec
adc
adc
push
pop
push
popf
incl
cltd
push
arpl
fistpl
lea
jnp
in
mov
fbstp
inc
xchg
and
ret
dec
cmp
sub
outsb
popf
fists
nop
lea
dec
jmp
mov
sbb
or
incl
jb
test
and
sub
jl
inc
fwait
insb
add
or
in
iret
shll
sbb
lods
fs
cmp
sub
sbb
pop
jmp
xchg
shrb
jl
add
mov
sub
ja
push
scas
aas
pushf
cmpsl
lcall
xor
clc
shlb
mov
pop
jo,pt
rorl
cmp
pop
pop
aam
imul
pop
lret
pop
mov
movsl
lock
jg
bound
test
cmc
jmp
lods
pop
arpl
xor
imull
jecxz
dec
pop
mov
sub
test
mov
shrb
or
xor
enter
fisttpl
or
js,pt
jp
pop
sti
push
mov
test
jl
jp
push
les
adc
hlt
jne
inc
std
lea
decl
sarl
cmpsl
out
std
mov
imul
cmc
add
nop
sub
jl
fwait
mov
mov
ljmp
scas
pop
push
cltd
aad
pushf
dec
int3
rcrb
call
jl
addb
xlat
outsb
fdivl
dec
sbb
cmp
fbstp
mov
pop
repnz
in
pop
jmp
pop
stc
push
jo
and
and
or
pushl
in
pop
enter
lcall
inc
cwtl
inc
inc
divl
decl
push
dec
fs
dec
imul
or
outsb
dec
pop
in
aas
mov
jmp
mov
jg
sub
mov
jecxz
sbb
out
add
orl
jmp
jl
adc
sub
sbb
pop
cmp
nop
pop
or
out
sub
lret
inc
pop
bound
ljmp
aaa
scas
sti
mov
sbb
push
add
in
ss
adc
ljmp
ja
adc
cld
and
cld
stos
mov
inc
inc
push
lds
add
nop
push
jecxz
cmc
sbb
jle
das
movsl
cmp
inc
dec
notb
mov
mov
fcomip
decl
ja
aad
es
mov
fwait
out
inc
or
jne
adc
push
mov
test
jecxz
fmul
shll
sahf
push
push
adc
repz
adcl
aad
xor
shll
pause
pop
cmp
dec
xor
inc
gs
lods
xchg
xchg
loopne
lcall
loope
lret
inc
stos
loop
rclb
sbb
sti
aas
or
test
mov
xor
mov
jne
jns
rolb
notb
dec
in
out
test
decl
test
fs
lret
cmc
les
cmp
add
jae
jl
ds
sub
jb
out
push
jmp
jecxz
push
adc
jle
pop
aam
pop
adc
cltd
aas
jmp
dec
sarb
testb
xlat
sub
or
adc
jb
lds
movups
mov
jno
adc
push
das
mov
outsl
push
testl
ljmp
cmp
pop
in
rorl
iret
add
cmpsl
adc
jmp
push
aaa
or
ret
filds
or
mov
adc
hlt
cmp
xor
loop
aam
addr16
jbe
movb
popf
jb
lcall
xlat
aad
ss
inc
jp
jecxz
stos
jmp
mov
adc
std
testb
hlt
dec
dec
stos
jecxz
cmpb
and
pop
aad
xchg
mov
mov
call
xchg
repnz
mov
jmp
sbb
bound
imul
movsl
cli
in
inc
ret
cmp
push
ja
push
ror
add
xchg
xchg
gs
pushl
jns
fcoml
ror
sbb
adc
stos
jecxz
sub
jbe
and
and
clc
jmp
ljmp
push
inc
xchg
cs
movsb
cmc
dec
mov
mov
fimull
setae
lods
ret
incl
inc
outsb
sarb
sub
sbb
in
inc
lods
or
jns
scas
dec
cli
xchg
pop
lahf
addb
pop
and
call
add
xor
sub
sbb
xchg
jmp
je
jb
mov
das
and
sbb
cwtl
inc
mov
mov
mov
hlt
int
outsb
cli
out
sub
mov
decb
call
lret
mov
repnz
inc
out
sbb
in
imulb
or
add
idiv
mov
cmp
add
out
shll
dec
cmpsl
pop
sub
fldt
mov
lock
into
in
jae
into
inc
jge
out
jmp
fstps
test
hlt
jl
add
mov
ljmp
bound
incl
imul
jecxz
incb
xchg
insl
inc
xor
xor
decl
push
out
lcall
mov
call
inc
jno
cmp
in
enter
inc
insb
sub
xor
retw
fimuls
or
cmpsb
pushl
cmpsb
dec
mov
loope
sbb
or
mov
sti
iret
fwait
inc
adc
rcrl
sar
ljmp
xchg
test
pop
cwtl
push
popa
mov
mov
cmp
or
fs
jnp
test
ficompl
loopne
ficomps
pusha
inc
loope
sbb
cld
lcall
mov
sbb
cltd
stc
rcl
jg
inc
jmp
fmul
iret
call
loopne
sub
mov
mulb
mov
sub
rcrl
call
hlt
xchg
data16
lds
in
cmpsb
in
jno
fmull
inc
stc
jns
xchg
lcall
stos
jo
pop
ss
jo
sbb
mov
pop
and
sbb
xor
call
mov
mov
cld
fadds
aam
inc
mov
es
mov
mov
dec
call
fbstp
sahf
out
imul
pop
pop
fwait
cmc
mov
lcall
decl
lock
adc
lahf
sahf
mov
cmc
out
sub
xlat
push
xchg
pushl
into
inc
mov
xchg
cmp
aam
rcrb
ljmp
cld
out
jbe
fxch
leave
pop
mov
cmp
std
jg
jg
and
sub
popa
mov
nop
in
sbb
mov
pop
or
incl
das
push
repz
xlat
in
push
adc
rcll
dec
cld
cltd
push
mov
cld
ds
stos
jne
outsb
mov
shrl
fcomip
cmpsb
gs
lahf
sub
mov
idiv
and
cmp
in
dec
xor
cmp
jns
call
and
add
push
add
sub
jp,pn
das
add
cmc
mov
ljmp
mov
pop
aas
fstpl
sti
stc
clc
pop
daa
fwait
xor
mov
in
testl
js
insb
in
cmp
xchg
out
bound
bsf
xlat
iret
pop
mov
mov
jg
push
add
cs
mov
cwtl
xchg
dec
jl
sbb
mov
jge
ja
lcall
ret
rorb
pop
loopne
fstps
xchg
add
dec
cmp
or
mov
and
ljmp
pushl
pand
cmp
loopne
cwtl
pop
or
das
cmp
jb
pop
adc
movsl
mov
push
jo
pop
int3
jmp
out
stos
outsb
mov
mov
and
xor
mov
imul
fs
adc
sbb
dec
lds
sbb
sbb
cs
or
jge
pop
and
std
pushl
imul
inc
iret
mov
mov
sub
sbb
cmp
jle
cli
add
outsl
sbb
call
out
jecxz
loope
ret
aas
or
mov
and
outsl
sub
fs
push
adc
ret
fimuls
or
inc
dec
inc
mov
xor
es
dec
adc
mov
mov
in
jg
je
sub
cltd
enter
scas
fisubrl
ds
ljmp
cmp
in
xchg
insb
hlt
iret
popf
scas
imul
bound
fisubrl
leave
jb
xchg
mov
cmpsl
shlb
xchg
mov
movsl
into
xchg
pop
out
cli
jmp
cltd
push
insb
mov
in
es
pop
push
or
inc
movsl
dec
xor
fisubrl
and
decl
nop
test
mov
stc
test
adc
or
and
mov
das
add
cmp
push
mov
jmp
adc
push
mov
jmp
lock
xchg
unpcklps
and
call
and
ljmp
mov
ds
adc
dec
inc
ret
icebp
pushl
dec
xchg
addr16
out
mov
push
lahf
out
sbb
cli
mov
rorb
mov
pushl
addl
cwtl
cmp
add
into
add
lds
jle
or
add
push
jge
test
lcall
inc
in
cmc
adc
pop
inc
adc
je
or
clc
sti
mov
add
jmp
mov
sub
xlat
imull
stos
pop
out
scas
inc
sbb
cs
imul
fisttps
and
aad
add
sti
mov
xor
punpckhbw
xorb
out
repnz
dec
ds
repnz
pusha
jo
inc
lret
in
cld
in
divl
push
inc
nop
subb
mov
sbb
jae
jg
mov
inc
xchg
sub
jle,pn
hlt
push
stos
mov
icebp
mov
lods
mov
cmp
cmp
out
push
adc
es
js
sub
mov
in
nop
push
lret
pop
xchg
push
out
jle
xor
ljmp
sbb
sub
pop
shll
jns
sahf
loope
es
in
mov
insl
xor
cld
jge
fcomip
mov
mov
pop
flds
and
in
sub
ljmp
jle
lods
sbb
ja
movsl
call
push
pop
or
xor
sti
lret
adcl
jmp
and
mov
mov
mov
jge
cmp
test
xchg
push
jl
shll
inc
movsl
sahf
decl
mov
adc
inc
mov
dec
sub
jg
or
bound
fs
sar
ljmp
mov
push
mov
stos
push
mov
into
shll
mov
xchg
adc
add
in
adc
leave
adc
call
rcrb
imul
mov
aam
push
sbb
movsb
lret
mov
jmp
arpl
aaa
jl
test
std
adc
adc
icebp
push
lahf
lret
inc
jecxz
ljmp
adc
adc
adc
pop
pop
add
sub
in
xor
jmp
or
cmovbe
mov
push
out
pop
adc
and
adc
leave
ljmp
push
xchg
fnsave
ficoms
mov
xchg
adc
or
lcall
repz
int3
dec
js
xchg
fmull
iret
dec
mov
fs
call
mov
push
xor
xor
hlt
push
je
outsl
push
pusha
add
mov
incl
add
gs
stc
and
add
fwait
mov
ljmp
inc
lahf
aas
and
scas
jb
jmp
outsl
fnsave
mov
out
subl
pushl
insb
pop
cmp
adc
mov
mov
add
ja
bound
rcrl
mov
lcall
negl
lds
xor
ret
test
fiaddl
fmuls
addb
xor
jl
enter
inc
inc
cmp
jns
insb
xchg
lock
fdivrp
pop
std
call
jne
sub
dec
cvtps2pi
dec
and
xor
push
scas
dec
push
xor
lcall
jecxz
leave
imul
addl
jbe
jl
adc
loope
push
cmp
mov
mov
arpl
mov
sarl
test
cmpsb
call
sub
outsb
mov
add
adc
push
leave
cmp
cmc
dec
pusha
in
sar
lcall
jb
adc
fildll
jbe
lret
sbb
pop
jp
outsl
xchg
fwait
cltd
dec
adc
jmp
and
dec
loop
push
push
lret
jbe
mov
add
sub
jae
and
inc
icebp
in
hlt
push
stc
test
and
pop
push
repnz
mov
pop
and
out
cs
sbb
mov
pop
ret
jp
xchg
pop
or
movsb
mov
out
decl
lock
cmp
xchg
jne
mov
call
xchg
mov
dec
pushf
xor
pop
mov
add
push
jge
hlt
sbb
mov
dec
sub
jmp
xchg
sti
es
ret
push
pop
stc
jne
cmp
mov
xchg
mov
cmpsl
cli
decl
lock
push
or
std
xor
and
pop
daa
mov
jmp
dec
fiaddl
fcomip
cwtl
jno
dec
stc
aam
js
dec
mov
rcrl
mov
and
incl
fldl
jo
mov
mov
cmp
add
lcall
dec
cwtl
cli
popf
jg
iret
call
ljmp
cmp
fiadds
sbb
shl
lcall
loopne
pop
sahf
cmovge
and
pop
addr16
imul
push
dec
jl
lcall
lock
dec
xchg
test
mov
repz
inc
dec
fdivrp
incl
adc
inc
or
inc
pop
sub
out
stc
daa
xchg
lret
and
in
in
in
adc
mov
mov
ret
inc
pop
add
mov
inc
push
clc
es
push
call
fildll
jle
jg
movsb
jnp
shr
mov
imul
inc
mov
ds
ud1
and
xor
es
cmpsl
mov
fidivrs
or
pushl
mov
or
les
xchg
lcall
xchg
icebp
imul
jmp
decl
xor
loop
dec
lcall
pop
icebp
out
insl
dec
add
stc
std
addb
sub
imul
or
cs
cli
dec
mov
andb
repnz
jmp
data16
xchg
into
jbe
sub
scas
pop
mov
sti
xor
xor
pushf
mov
in
outsl
clc
cmp
sub
loop
mov
xor
xchg
jl
dec
lods
push
mov
fisttps
add
push
mov
fnstsw
dec
outsb
bound
xor
mov
adc
nopl
roll
decl
test
cli
cmp
rorl
inc
cli
repz
pop
push
decl
sbb
jae
lods
inc
mov
ja
xor
pop
sub
ljmp
imul
cld
xchg
aad
cld
nop
push
shl
add
iret
mov
and
js
insb
fcmovb
mov
nop
mov
xor
cli
jmp
les
ljmp
dec
mov
lock
lret
cmp
adc
cmp
iret
fildl
mov
repz
xchg
mov
rclb
jl
lock
sbb
xorb
pop
dec
ret
into
negb
mov
stos
mov
movsl
decl
insl
add
mov
or
jge
insb
fs
inc
cmpsb
xchg
mov
fsts
pop
loope
mov
xor
dec
fdivl
mov
mov
adc
out
call
inc
jl
inc
mov
out
lret
fadd
inc
in
dec
and
jmp
or
sbb
mov
test
addr16
push
sar
lcall
fs
or
jl
jg
xchg
xor
popf
sub
lea
sti
test
mov
popf
fucomi
adc
mov
dec
mov
inc
dec
std
in
ljmp
popf
adc
rorl
or
inc
in
pop
nop
aaa
std
out
clc
sti
and
cli
fcmovb
cmpb
cmpsl
lock
xor
ja
incl
nop
fidivrs
inc
and
mov
fdivrs
push
test
xchg
aaa
or
decl
sub
or
shll
clc
xor
or
adc
push
in
out
mov
add
xchg
lods
inc
pop
adc
rcll
inc
cltd
cmp
sub
jg
fwait
push
add
into
inc
add
cmp
or
add
push
add
mov
mov
and
jg
add
pop
jb
movsb
add
mov
popa
push
inc
add
add
push
orb
sub
pop
mov
mov
in
adc
mov
xchg
jle
setle
push
jg
add
psllq
sahf
dec
test
dec
xor
decl
push
add
xchg
movsl
jnp
data16
push
daa
add
xchg
dec
and
cmpsl
push
and
cs
fildll
es
push
movsb
push
movsb
inc
scas
push
repz
xor
and
push
test
and
mov
mov
xchg
imul
push
inc
pop
pop
add
stc
pop
lods
push
mov
pop
sbb
add
pop
andl
mov
pop
mov
cmpsb
ds
les
push
adc
push
mov
adc
add
imul
aaa
in
sub
push
sub
iret
fsubrp
add
mov
mov
jbe
fxch
pop
sub
mov
stos
pop
stos
jbe
or
mov
ss
clc
insl
sti
jbe
add
jo
mov
push
shll
add
outsl
push
shll
lods
loopne
push
fidivrl
iret
outsb
or
push
ret
jbe
je
fidivrs
out
jge
fisttps
test
ljmp
movsb
push
add
mov
test
push
jae
shlb
mov
push
push
arpl
push
push
push
add
out
data16
lcall
ret
add
outsl
lock
mov
push
pop
dec
add
into
loopne
outsb
jbe
push
data16
scas
cmp
aaa
add
push
push
mov
jno
lret
stos
aas
add
neg
flds
add
push
xlat
jne
add
rcr
fdivs
push
aad
push
xlat
ja
js
sarl
mov
push
jns
push
jp
jp
inc
push
insb
push
jl
fidivrl
sarl
ja
fldl
les
je
jmp
out
outsb
fidivl
nop
sub
xchg
sub
xchg
in
xchg
sub
fiaddl
push
xchg
push
setbe
xor
insl
push
ds
aaa
push
lcall
cwtl
push
cltd
cmp
cmp
pushf
cmp
jl,pt
out
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
in
ja
xchg
push
mov
push
imulb
pop
add
fadd
add
cld
out
out
push
hlt
out
sahf
out
stc
cli
sti
cld
sbb
jg
std
incb
jecxz
arpl
inc
jae
data16
add
jo
imul
mov
add
pop
add
pop
add
add
cs
pop
jne
cmp
add
mov
add
outsb
add
testl
outsl
or
or
flds
lods
stos
test
test
or
or
or
pop
rcll
pop
adc
adc
lods
fwait
pop
mov
add
pop
stos
femms
lods
addr16
mov
pop
mov
mov
stos
insl
add
scas
insl
lods
pop
pop
adc
sbb
lods
adc
sbb
add
scas
scas
scas
or
int
scas
sbb
mov
mov
or
out
and
inc
and
mov
push
adc
or
xchg
mov
and
mov
pop
and
pop
push
and
mov
xor
inc
pop
pop
sub
mov
pop
sub
pop
and
mov
inc
push
mov
aaa
add
cmp
insl
lcall
add
adc
aaa
cmpsb
add
mov
fstps
insl
insl
push
pop
pop
or
or
add
mov
insl
pop
pop
xor
mov
pop
das
push
cs
jnp
in
pop
xor
add
xor
das
pop
push
push
xor
adc
pop
call
inc
dec
inc
das
inc
inc
xor
adc
push
xor
push
push
popa
jbe
cmp
jl
jge
jae
ret
mov
pushw
pushl
dec
dec
cmpb
jo
mov
inc
xorl
mov
xchg
xchg
xchg
fstps
cltd
add
mov
incl
xchg
xchg
sub
dec
ja
jns
dec
push
bound
xchg
jb
adc
xor
jne
mov
pop
jg
and
orl
bound
icebp
or
add
test
int3
pop
scas
aas
scas
mov
repz
mov
dec
add
push
mov
cmpsb
push
jle
fcmovnu
mov
xor
xor
ja
push
ja
jb
cmp
loop
es
xor
mov
add
mov
mov
and
push
mov
jo
push
inc
mov
cmp
mov
inc
add
add
add
xchg
jp
inc
push
popf
inc
imul
jg
imul
add
xchg
jb
bound
mov
lahf
ja
insl
mov
inc
push
sahf
mov
pushl
add
leave
xchg
rcr
mov
xchg
pop
push
test
cmpsb
dec
push
dec
push
movsb
pop
sub
inc
jae
add
jb
shll
outsl
pop
xlat
pushf
push
add
incl
rorb
add
lcall
outsb
mov
pop
int
mov
lret
ja
or
mov
fistpl
imul
cli
data16
ds
push
add
and
es
js
mov
gs
mov
shrl
insb
pop
outsb
in
cmpsl
jns
outsl
ror
push
ds
or
add
aam
sbb
jg
subb
fiadds
call
subb
data16
add
bound
jge
mov
add
test
fildll
loopne
iret
sahf
mov
jb
fcmovne
mov
jg
jle
or
jecxz
or
fiadds
fnstcw
aad
push
divb
jns
ficoml
xchg
faddl
ds
movsl
adcl
sbb
adc
fiaddl
test
sbb
test
pusha
cmp
push
xchg
nop
and
out
xchg
add
ja
in
xchg
lock
sub
sub
neg
dec
sti
shrb
xchg
repnz
xor
cwtl
or
cmc
sahf
xor
lcall
pusha
repz
cmp
aam
das
pop
movsb
lea
push
cmpsb
scas
jo
test
sahf
fists
je
xchg
pop
jbe
stos
into
shll
mov
mov
int
mov
mov
sarb
push
rcr
rcl
mov
jp
xchg
jle
data16
add
addr16
adc
cs
dec
out
add
dec
daa
test
add
mov
mov
femms
or
out
in
mov
sbb
or
es
push
adc
push
outsl
sti
pop
in
add
adc
adc
ds
add
in
pop
repnz
mov
mov
xor
ds
xchg
push
mov
sbb
sbb
mov
push
add
jbe
and
loopne
ds
aad
cs
mov
aas
and
scas
add
xor
or
aas
aas
cmp
cmp
cmp
aaa
add
insl
mov
push
jbe
cmp
inc
xlat
cmpsb
jbe
jle
cmp
out
or
dec
jle
imul
mov
mov
ds
xor
dec
test
mov
scas
add
sbbb
ds
mov
ljmp
add
pop
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
add
jg
dec
test
mov
mov
ds
xor
sub
sub
sbb
xchg
mov
add
add
add
push
jg
ss
and
inc
mov
push
push
push
push
push
imul
push
pop
push
rorb
push
push
imul
mov
jne,pt
fwait
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
decl
test
insl
popf
mov
jge
jns
jns
jle
addl
jb
jae
jo
outsb
pushf
sti
pop
daa
mov
lds
fwait
and
jge
rolb
add
add
add
jg
orb
jl
push
add
cmc
repz
out
dec
dec
xor
aas
add
xchg
pop
cmp
test
add
ljmp
pushl
inc
add
mov
push
mov
fnstsw
repnz
outsl
aaa
add
add
push
jg
mov
popf
inc
push
in
jge
std
mov
or
arpl
mov
das
fsubrs
push
push
dec
lret
js
into
xchg
add
fistpll
add
mov
mov
test
scas
xchg
js
in
and
out
lods
test
ds
sub
mov
fnstcw
push
nop
sub
xchg
xor
mov
fucomi
xchg
xor
xchg
outsb
lcall
leave
jbe
data16
cmp
fidivrl
shlb
iret
adc
repz
lret
loopne
push
std
into
pop
inc
sub
fdivrp
neg
insb
mov
out
xchg
add
test
jg
jle
inc
add
add
and
adc
xchg
dec
dec
dec
dec
dec
add
pop
add
outsl
xchg
incl
push
dec
or
adc
cmp
adc
dec
or
add
fsubr
dec
dec
push
adc
add
or
pop
pop
mov
add
cmovg
inc
push
dec
sbb
fscale
dec
sti
inc
adc
inc
inc
adc
sbb
dec
add
dec
adc
inc
ds
cmp
cmp
cmp
daa
and
sbb
sbb
ss
jmp
adc
sub
xor
xor
sub
sub
imul
lods
mov
and
lock
roll
mov
mov
mov
mov
pusha
mov
addl
push
shlb
add
jb
sbb
and
add
jmp
mov
jbe
incl
cs
add
ret
or
sbb
push
jo
push
incl
outsb
jl
mov
es
ja,pt
and
mov
bswap
leave
xor
xor
adc
sbb
rolb
ja,pn
aaa
add
or
xor
sahf
jg
add
pop
lahf
xchg
test
inc
into
jg
add
cli
mov
mov
pop
mov
test
add
inc
inc
jle
cli
add
sub
xchg
pusha
add
add
sti
inc
lock
mov
das
sti
mov
leave
roll
scas
pop
jo
push
inc
dec
sti
jg
pop
add
orl
xchg
loope
cmp
mulb
xor
jg
cld
test
and
pop
popa
mov
jle
mov
std
ja
test
add
jg
je
jg
ret
and
bound
pop
jg
stos
inc
inc
push
jle
and
push
lret
addl
pop
addl
adc
sub
lock
jmp
sbb
incb
jg
adc
fidivrs
jg
add
jg
lea
sbbb
fldt
loopne
jbe
pop
lcall
fnstcw
sub
test
adcl
push
decl
nop
nop
lods
jle
lret
imul
les
mov
scas
jle
mov
lcall
xorl
ret
add
jbe
or
mov
loopne
inc
xor
push
xchg
mov
inc
jg
addb
outsb
jg
inc
adc
cmpsb
incl
push
inc
inc
pusha
jg
lcall
inc
dec
add
pop
cmp
lods
jle
cs
mov
imul
stos
pop
fcmovnb
fisubrs
pop
add
daa
aas
aaa
and
pop
add
shrl
pop
jle
add
and
js
pop
inc
push
decl
sbb
test
hlt
mov
jle
dec
testl
bound
add
ficompl
mov
fcmovnu
negb
daa
push
arpl
pop
ss
inc
push
mov
shr
mov
or
dec
decl
inc
xor
push
ljmp
add
jle,pt
inc
rclb
jle
jmp
dec
push
into
out
ja
fnstenv
add
push
jne
pop
insl
inc
enter
dec
out
push
jnp
fildl
push
js
dec
fdivrs
jbe
pop
add
test
pop
xlat
mov
mov
push
daa
fs
push
outsb
notrack
xor
cs
jle
mov
inc
popf
dec
incl
ss
jmp
dec
ja
xchg
and
push
inc
mov
ss
xchg
test
xor
push
mov
sbb
sahf
inc
out
mov
int
flds
xchg
inc
adc
insb
push
pushf
cmp
insl
dec
enter
mov
xchg
xor
mov
mov
xchg
xor
sub
sub
nop
daa
ss
dec
or
dec
xor
in
ss
aaa
outsb
jmp
mov
mov
jg
pop
fnsave
xor
test
enter
sahf
movb
es
xchg
pusha
ss
cs
add
or
push
pop
ja
int3
rclb
xchg
push
xchg
movb
ja
add
movsb
divb
mov
add
stos
test
ja
add
push
subb
xchg
cmp
mov
test
movsb
add
mov
pop
or
adc
repz
negl
cmpl
iret
mov
push
faddl
dec
repz
jg
xchg
inc
and
cmp
lock
cmp
sbb
outsb
pop
cmp
icebp
sbb
and
push
in
add
mov
add
dec
inc
subl
out
pop
mov
imul
mov
pop
xchg
push
sbb
xor
dec
cli
push
idiv
inc
xchg
or
fidivs
jmp
syscall
mov
sub
push
cmp
pop
add
pop
aaa
inc
popa
stos
xchg
pop
lcall
or
addr16
mov
sub
mov
or
pop
cld
push
data16
jge
call
daa
std
adc
emms
inc
mov
sbb
mov
gs
mov
sbb
jmp
xchg
sbb
push
sbb
lods
xor
das
incl
pop
es
lcall
fmuls
inc
pop
decb
cmpsb
sub
lcall
cmpsb
test
sub
xor
decb
mov
xor
inc
xchg
clts
add
push
sbbl
xchg
mov
jle
adc
xor
pop
sub
imul
sbb
add
out
incl
adc
sub
call
xor
xchg
fdivrp
or
jmp
outsl
mov
pop
sti
push
std
mov
shlb
out
adc
stos
inc
popa
nop
push
call
add
rorl
cld
pop
nop
fsubl
stc
sgdtl
pushw
call
jg
fwait
test
inc
cli
idiv
add
sbb
sub
dec
es
ljmp
movsb
push
test
inc
fnstenv
rcll
pop
inc
jmp
push
pop
aaa
mov
or
push
shll
mov
mov
roll
dec
scas
nop
jbe
sahf
ret
incl
mov
jmp
ljmp
pop
cmp
lahf
inc
inc
push
inc
inc
pop
es
fidivl
pop
mov
mov
mov
push
stos
push
popf
inc
cmpsb
dec
imul
inc
cs
dec
dec
push
scas
mov
and
jl
cmpsb
add
push
shrb
rcl
outsb
cltd
movsb
sbb
shrb
es
lret
dec
shlb
das
push
int3
push
push
in
insl
pop
daa
outsl
aam
cltd
out
pop
imul
xchg
notb
push
ljmp
jge
test
dec
pop
aam
mov
add
repnz
jmp
popfw
cmp
aas
decl
insb
and
push
cwtl
xor
xor
xchg
push
push
es
lcall
pop
scas
insl
push
xchg
es
xchg
xchg
notb
decl
push
xchg
mov
scas
call
jmp
ds
mov
sbb
add
jmp
in
or
std
faddl
push
fstpt
push
jnp
jp
or
movsl
fnsave
jl
or
jl
push
jge
add
es
jbe
adc
fidivrl
std
std
fwait
cltd
push
dec
push
dec
repnz
repnz
jae
pop
fidivrl
lock
mov
jnp
jge
hlt
in
add
int3
inc
push
and
pop
jo
and
inc
roll
push
outsl
lahf
push
and
adc
ja
pop
or
imul
cmp
jnp
lahf
dec
es
addl
call
push
orb
jg
and
xchg
out
push
test
outsb
call
jo
mov
cli
decl
jns
outsb
jbe
clc
push
idiv
sbb
fcoms
inc
sub
jg
mov
icebp
dec
sub
cld
and
mov
sub
jg
mov
icebp
jg
sub
jg
mov
in
pop
and
dec
loope
xchg
repnz
sub
jp
es
xchg
pop
push
jo
aaa
incb
fisttps
out
xchg
and
jg
dec
in
sarb
lods
sub
ja
nop
sahf
loope
dec
and
jge
idiv
imul
push
push
fmull
jmp
push
inc
test
push
int3
decl
fidivrs
mov
fidivrl
arpl
clc
jbe
jp
lods
inc
mov
push
pop
push
pop
inc
ficompl
or
mov
incl
das
xchg
into
lcall
push
jns
das
fsubs
orb
in
sbb
in
sbb
ja
mov
xchg
mov
loop
adc
xchg
lock
out
sbb
loope
and
lret
jg
out
mov
or
push
mov
outsl
adc
mov
add
jle
lahf
ljmp
xlat
inc
jo
iret
push
cmovno
push
push
pop
and
repz
add
xchg
xor
call
adc
push
or
xchg
loopne
imul
or
adc
sbb
shrl
push
rolb
pop
mov
test
pop
push
sbb
sarb
or
push
insl
out
es
and
push
sbb
push
mov
push
push
ljmp
add
addl
cwtl
mov
add
xor
mov
sbb
fadd
add
add
out
push
imul
jo
or
add
pop
add
xchg
sbb
ret
or
add
stos
insb
loope
mov
sub
lock
arpl
aaa
xchg
mov
inc
mov
add
mov
sub
add
movsb
xchg
inc
jmp
lahf
jo
das
sub
sbb
pop
test
add
imul
adc
pusha
insl
insb
loope
mov
add
push
push
test
add
in
lods
inc
jno
add
or
add
add
add
add
add
mov
sbb
adc
cs
add
add
insl
and
mov
out
pop
popf
in
imul
jne
popa
shlb
xor
popa
or
jb
outsb
lret
pop
addr16
sbb
lds
inc
sbb
pusha
xchg
fbstp
push
pop
cwtl
add
mov
or
scas
cmc
add
add
or
adc
add
pop
mov
loopne
stos
ret
inc
lcall
lahf
push
mov
add
sbb
shrb
imul
push
outsb
dec
push
outsl
loop
fidivl
push
pop
xchg
sub
fnstcw
ljmp
pop
pop
mov
sub
dec
insb
out
inc
imul
sbbl
inc
cmpsb
lds
mov
or
addr16
or
test
or
test
add
and
fstpl
inc
or
add
inc
rorb
and
arpl
xchg
adc
mov
mov
mov
xor
add
ds
push
fiaddl
adc
insl
mov
lods
jecxz
adc
fcoms
aas
cmp
push
cs
rcrb
add
add
ret
mov
pop
sub
es
je
data16
in
xchg
sbb
pusha
stos
roll
mov
xor
add
mov
mov
mov
mov
push
orb
rolb
pop
adcl
sub
xchg
jb
push
add
xor
scas
roll
rorl
add
mov
and
cmp
sbb
arpl
outsl
dec
cmp
xchg
scas
sub
jg
push
lods
push
xor
mov
pop
mov
cmp
mov
cmp
pop
mov
lock
mov
adc
fcmovnb
add
xor
negb
insb
jne
sub
or
mov
cmp
jo
inc
es
mov
call
xchg
push
dec
push
lods
pop
or
mov
mov
leave
sub
sbb
fdivrl
push
cmc
xor
test
test
inc
mov
cmpb
das
cmp
iret
je
jne
inc
xchg
rorl
add
cmp
sub
xor
xor
js
pushf
push
lahf
sbb
jno
dec
or
fiadds
and
rcll
inc
leave
pop
sub
dec
jo
add
aad
add
out
xor
shll
rcrl
scas
insl
inc
mov
and
mov
sbb
mov
sbb
add
pop
arpl
cmp
jae
sti
dec
cmp
xchg
fiadds
flds
inc
sbb
psubsw
sbb
push
ds
int3
sahf
mov
inc
dec
inc
insb
cs
rcpps
cmp
arpl
push
jb
addb
inc
inc
jno
add
jl
outsl
dec
inc
imul
pop
mov
out
outsb
rcr
ja
insb
sahf
popa
dec
adc
push
fs
add
outsl
jo
jb
adc
stos
push
fwait
push
mov
or
dec
inc
mov
jecxz
and
jae
dec
rcrl
int3
sub
sarl
cwtl
imul
push
and
pusha
push
addr16
push
les
adc
imul
mov
xor
sbb
and
addb
mov
inc
jne
outsb
inc
sbb
push
pop
and
int
fcomps
je
insl
dec
outsb
dec
adcb
das
add
arpl
mov
push
sub
xor
int3
loop
pop
add
cmpsb
mov
dec
add
sbb
mov
movsb
dec
fidivl
dec
imul
add
imul
imul
out
shrl
es
cmp
enter
insb
inc
fisttps
movsb
outsl
xchg
add
and
fisubrl
jbe
ss
mov
inc
jo
clc
shlb
sbb
mov
or
test
jns
inc
pop
or
xorb
sub
sbb
jo
cwtl
data16
pop
add
loopne
test
or
ss
add
push
jecxz
and
dec
xorl
es
scas
add
sbb
cmp
inc
scas
lcall
jo
dec
cmp
sarb
popf
xchg
and
jno
scas
jp
test
dec
out
movsb
add
and
out
mov
jnp
dec
mov
outsl
mov
nop
push
jge
les
cld
ret
aaa
ret
xor
xor
lods
or
ss
ret
push
jbe
xchg
sbb
push
push
pop
pop
jle
outsl
fisttpll
xor
mov
cmp
sub
pop
add
mov
ret
mov
pop
xlat
add
xor
pusha
jno
sbb
jno
adc
das
jg
inc
pop
movsb
pop
xor
add
push
enter
and
aaa
jo
cmp
outsl
and
mov
push
cmpsl
inc
ret
push
mov
lods
mov
test
push
adc
adc
add
insb
sbbl
lret
push
mov
ret
aad
insl
dec
inc
push
fisubl
sub
inc
push
mov
shll
jo
mov
adc
push
in
arpl
test
pop
mov
int3
and
pop
push
add
aas
outsb
ficomps
jb
inc
shll
inc
push
mov
inc
fs
mov
mov
jns
sbb
dec
and
inc
and
jp
push
jg
mov
push
xchg
cmp
daa
outsb
pop
sbb
stc
shrl
rclb
ret
aas
scas
inc
rcll
cmpsb
aas
sub
pop
shlb
mov
push
nop
mov
in
roll
add
pop
movsb
rcll
adc
repz
push
inc
mov
ds
sbb
add
sub
in
dec
jbe
sbb
add
dec
or
cmp
mov
pop
dec
mov
cltd
mov
outsl
out
inc
test
dec
dec
ja
imul
lods
imul
inc
test
shr
sub
push
in
inc
ss
sub
testl
dec
incl
jno
test
push
or
inc
and
cmp
or
sbb
dec
jnp
add
add
and
mov
leave
sub
cmp
push
iret
jle
sti
cmp
adc
add
push
add
push
or
or
add
adc
xchg
cmc
mov
mov
sbb
push
xor
daa
add
not
fcmovbe
dec
push
or
push
or
add
idivb
push
adc
push
inc
pop
adc
sbb
push
sub
push
mov
push
inc
sbb
sbb
cs
or
cmp
sub
or
sti
std
sbb
add
xor
sbb
push
add
sbb
xchg
add
adc
cmp
push
sbb
add
sbb
xor
jl
sub
and
sbb
add
or
push
or
pop
adc
cmp
pop
add
adc
ss
sbb
movq
cmp
sbb
push
sub
or
and
sbb
idiv
or
sbb
add
sub
sbb
lods
add
sbb
addb
ret
adc
adc
or
insb
loop
and
and
push
and
call
pop
sbb
push
or
and
sbb
or
or
add
dec
das
clc
mov
mov
xor
push
cmp
and
sub
mov
sub
aas
and
push
pop
or
mov
wbinvd
adc
or
nop
sti
in
or
setbe
cmp
subb
or
push
or
daa
add
push
xor
xor
arpl
ret
sbb
cmp
daa
aas
sub
fstpt
sub
or
cmp
es
xor
lock
inc
jle
das
push
bswap
add
push
xchg
jns
cmpl
adc
adc
call
or
or
push
push
lods
adc
adc
or
push
or
pop
aaa
adc
in
jg
mov
adc
daa
adc
or
xor
push
pushl
es
mov
xchg
daa
cmp
xor
and
or
mov
or
add
mov
and
or
cmp
jg
or
or
pop
adc
and
and
or
or
jb
cmp
pop
je
sub
sub
push
adc
sub
xor
lock
ds
shll
repnz
or
xor
das
test
add
scas
add
mov
or
mov
pop
and
and
push
sbb
push
adc
add
std
pop
cld
inc
adc
or
cmp
sub
adc
aaa
jo
mov
or
inc
rdpmc
pop
and
or
aas
push
sbb
xchg
jb
xor
cmp
adc
bound
xor
jp
cmp
adc
sub
lock
add
cmp
incl
adc
lock
add
adc
push
loopne
jle
ss
lock
sbbl
push
or
adc
and
lock
add
mov
daa
push
aaa
mov
push
out
mov
outsl
dec
adc
lock
add
sub
cmpsb
outsl
pop
icebp
fisttpl
in
aaa
je
movsl
push
mov
push
std
jnp
outsb
add
push
nop
jnp
aaa
cld
jg
push
dec
mov
sbb
xor
dec
xor
negb
or
add
push
push
and
inc
sbb
adc
call
dec
and
inc
mov
add
lcall
cmp
or
mov
add
icebp
lcall
cmpsl
or
dec
inc
outsb
fadd
shll
xor
bound
adc
sbb
cmp
or
add
jg
pop
hlt
insl
fmull
and
xor
push
or
imul
ds
cmp
adc
adc
push
and
add
mov
psubsb
sub
adc
outsl
pop
movsb
sbb
xor
adc
and
mov
xchg
mov
or
or
jb
ljmp
add
js
pop
aas
dec
pop
pop
imul
lods
xor
sub
aas
jge
add
shl
add
fs
adc
ljmp
rorb
inc
push
scas
adc
andb
jo
sub
insl
stos
ss
cmp
das
sar
arpl
adc
cs
sbb
sbb
adc
xor
xor
lcall
mov
dec
sbb
femms
push
sbb
sbb
adc
aaa
and
mov
inc
sbb
jp
lock
fcomip
xor
adc
hlt
cwtl
or
adc
cmp
dec
jnp
jne
and
xor
mov
adc
arpl
sub
jg
mov
cwtl
mov
add
xor
das
adc
jl
cmp
dec
add
scas
dec
dec
push
jns
and
inc
adc
fildll
add
or
and
adc
xor
call
cmp
pop
pop
and
inc
lock
add
sub
add
inc
jg
stos
push
std
mov
push
mov
cmpsb
in
jb
rolb
jno
lcall
lock
and
and
push
cmp
std
add
sbb
dec
jle
sbb
pcmpgtb
sbb
mov
fldenv
xchg
sbb
pushf
jle
adc
adc
jmp
push
inc
xor
and
xor
mov
add
push
or
stos
pop
notl
mov
or
sub
mov
cs
jp
xor
or
adc
adc
push
and
push
cmp
inc
and
and
add
sbb
and
pop
ud2
adc
lret
decl
mulps
pop
cs
push
cmp
adc
sub
adc
jmp
mov
stos
mov
push
jne
pop
imul
or
sar
mov
jne
add
and
push
xor
add
or
jb
push
add
pop
or
sbb
or
movsl
dec
jo
ljmp
or
repz
std
stos
decl
sbb
sbb
cmp
loopne
jae
sub
pop
aad
insl
or
push
or
and
dec
ljmp
aad
sub
push
add
inc
push
sbb
adc
and
loopne
jp
add
sub
adc
daa
pop
adc
cli
lret
adc
mov
outsl
cli
adc
aaa
dec
or
inc
push
and
test
add
jae
sub
push
adc
xchg
daa
sbbb
lcall
nop
inc
or
push
adc
jg
popf
and
fistpl
imul
or
es
cmp
test
or
jbe
in
sbb
xor
push
dec
pushl
adc
cmp
dec
adc
sbb
add
lock
add
sbb
addr16
pushf
sbb
pop
xlat
mov
nopl
sbb
push
unpckhps
aas
sub
or
outsl
ja
sbb
and
lock
or
or
dec
sub
out
pushl
push
or
pop
inc
adc
cmp
inc
inc
push
sbb
add
popa
clc
decl
js
mov
or
dec
pop
push
fdivr
and
aas
pop
inc
and
lds
scas
xor
xor
sbb
pop
add
push
push
aaa
push
adc
aam
sbb
mov
pop
aaa
sarl
add
aas
enter
inc
cs
mov
sbb
sbb
sub
adc
lock
std
add
lock
add
bound
clc
sbbb
lock
push
or
add
jg
push
popa
jp
add
or
sbbb
sbb
xor
cmp
sti
mov
pop
pop
or
and
cwtl
adc
adc
sbb
call
cmp
unpcklps
cmp
push
sub
or
and
inc
or
ret
mov
push
or
adc
or
or
fbld
or
sbb
fdivs
jbe
aas
adc
push
loop
sub
push
sub
adc
sbb
pop
xor
pop
mov
mov
mov
dec
test
out
mov
imul
outsb
outsb
inc
in
dec
lock
sbb
scas
xor
push
xchg
pop
sbb
leave
add
movhlps
cmpsl
pop
addb
sbb
sbb
iret
add
jne
jg
push
pop
push
jbe
pop
sub
cmp
or
dec
das
cmp
push
cmp
lret
decl
add
push
scas
inc
add
pop
xor
sub
aaa
sub
test
add
and
add
call
pop
add
pop
or
fidivrl
sub
push
pop
adc
mov
adc
mov
mov
xchg
jne
sub
push
sub
movsb
adc
pop
int3
lods
xor
or
push
inc
or
push
cmp
enter
and
adc
sub
mov
push
stos
pop
invd
or
daa
push
cs
sub
or
sbb
or
or
or
adc
pop
daa
or
dec
prefetch
lock
and
aaa
pop
lock
push
xchg
movsl
adc
pop
sub
push
add
sbb
or
pop
push
adc
js
xor
jg
xor
xor
or
adc
in
push
sbb
lock
and
adc
push
subb
call
push
mov
and
wbinvd
push
and
lock
push
push
xor
inc
adc
sub
and
sub
sbb
nop
mov
mov
xor
sbb
sbb
sub
inc
inc
cmp
test
cmp
scas
call
cmp
mov
xor
popa
pop
sbb
out
mov
repnz
dec
adc
inc
and
sbb
inc
cmp
pusha
push
mov
sbb
adc
aaa
mov
adc
or
jnp
stos
sbb
push
xor
or
adcb
mov
pop
cmp
movsl
or
push
das
js
sbb
push
xor
test
or
xor
inc
add
mov
sbb
sub
orl
push
das
mov
adc
ds
aas
push
pop
in
test
cmpsb
push
inc
pusha
push
nop
adc
cmp
clc
decl
dec
pop
add
inc
cmp
fcompl
add
jg
rcrb
mov
je
pop
jg
shll
push
or
sbb
jb
mov
jg
call
es
and
or
scas
or
push
and
sub
call
sub
adc
sbb
pop
sub
data16
add
push
sbb
sub
add
add
adc
in
sub
push
push
sub
dec
dec
add
repnz
sub
pop
push
mov
and
xor
lock
push
and
or
imul
sbb
decb
inc
sub
das
sbb
fists
pop
sbb
and
inc
and
leave
xchg
sbb
adc
femms
aaa
dec
adc
push
pop
lahf
or
push
mov
pop
pop
cmp
and
sbb
roll
or
dec
pop
sub
xor
adc
cli
pop
addb
xor
lea
adc
jle
sbb
test
adc
mov
dec
cmp
dec
jg
adc
pop
adc
or
and
adc
sub
cmp
mov
inc
sbbb
adc
and
add
inc
dec
adc
sbb
pusha
push
jae
xor
and
insl
imul
loop
je
and
pop
ret
stos
mov
pop
push
inc
nop
or
or
add
adc
pusha
sbb
mov
pop
cmp
jp
mov
or
inc
or
dec
pop
insl
dec
inc
push
pusha
adc
jno
sbb
inc
int3
or
or
or
ds
insb
lock
inc
popa
das
mov
mov
or
pusha
lock
mov
cmp
sbb
sbb
pop
lock
add
dec
cmp
adc
iret
ja
fisttpl
jns
bndldx
ds
adc
fcomip
decl
andl
xchg
push
inc
sbb
ds
sbb
and
push
dec
fmuls
fildll
ficomps
ds
rorb
xchg
or
std
pop
adc
adc
add
xchg
dec
or
ss
adc
mov
sub
sbb
loopne
incb
inc
or
adc
push
push
adc
push
jl
lock
add
mov
popa
push
das
or
and
add
or
sbb
inc
adc
adc
sub
pop
popa
lahf
pop
xor
ja
sub
mov
adc
and
and
pop
inc
adc
lds
add
in
sbb
sub
fcompl
or
inc
inc
cmp
mov
inc
or
pop
les
push
es
out
jbe
add
data16
xor
adc
dec
pop
and
adc
roll
in
push
aaa
movsb
pop
std
incl
adc
cmp
daa
cmp
and
jae
sbb
push
and
mov
fildll
mov
or
sub
and
inc
pop
adc
sbb
pop
cmp
sbb
adc
add
push
cmp
pop
add
sub
push
sbb
fdivrl
clc
filds
lcall
sbb
dec
mov
sbb
ja
ja
add
outsb
cmp
sub
sbb
cmp
add
outsb
xor
sar
insb
inc
cmp
mov
fiaddl
sub
mov
fbld
pop
inc
inc
cltd
sbb
pop
xor
adc
stos
loopne
inc
scas
sbb
xor
mov
xchg
push
mov
paddb
inc
mov
dec
or
push
push
pop
adc
pop
or
add
sub
xor
lahf
and
outsb
les
and
push
pcmpgtw
or
lahf
add
jo
aaa
ss
pop
cs
xchg
or
add
sub
mov
push
mov
lock
mov
xor
mov
mov
lock
jl
add
fldl
push
xor
or
sahf
or
inc
mov
or
and
data16
sbb
jo
ja
loop
ljmp
xchg
sbb
loope
mov
xchg
add
lock
lock
add
sbb
adc
sub
push
pop
arpl
jg
mov
sub
sub
bound
pop
fisubl
inc
std
aad
lea
push
adc
mov
incb
pop
cmc
fwait
dec
dec
push
movhlps
or
xor
or
push
fstp
or
sbb
add
outsb
fisttpl
adc
mov
pop
xchg
fmuls
and
adc
or
add
sub
cmpl
mov
sub
or
jno
in
pop
dec
xor
adc
daa
pop
push
dec
or
and
fidivl
push
sbb
sbb
push
lcall
add
push
fdivl
add
ret
mov
into
or
or
or
and
xor
outsl
pop
fdivrs
or
sbb
sub
and
dec
dec
push
ret
js,pn
push
xchg
sbb
ficompl
or
jle
and
es
push
sub
es
or
or
mov
mov
or
adc
pusha
jo
cltd
loopne
xchg
push
and
mov
movsl
dec
sub
prefetcht1
xor
push
mov
dec
add
sbb
inc
loope
icebp
loope
outsb
sbb
xchg
add
dec
add
dec
add
push
sub
inc
sub
lock
and
dec
pop
adc
push
ds
inc
fnsave
decb
je
adc
and
mov
or
cmp
sbb
jb
or
push
frstor
dec
int3
es
test
inc
aaa
mov
and
movl
mov
lock
cltd
shl
filds
mov
lock
add
dec
fwait
sub
pop
adc
or
pop
mov
jecxz
or
or
dec
sbb
sub
shll
verr
push
adc
cli
rorl
push
les
and
shrb
xor
add
sbb
cmp
pop
sub
sub
push
add
sbb
cmp
xchg
pop
mov
jmp
jmp
xchg
shlb
push
push
and
loope
das
mov
adc
or
pop
push
push
and
sbb
faddl
and
sub
adc
int3
cmp
add
popa
pop
mov
movsb
push
inc
outsb
repnz
dec
or
or
sbb
mov
jmp
adc
adc
cmp
mov
push
push
or
jo
insb
dec
lock
std
or
dec
or
push
xchg
mov
add
mov
cwtl
push
mov
mov
add
lock
add
or
pop
mov
hlt
adc
or
push
ss
sbb
xor
sbb
sub
push
sub
cs
sub
ss
cmp
outsl
pop
xor
or
add
add
mov
adc
adc
movsl
add
add
cmpsb
add
adc
push
enter
aaa
add
pop
cmp
pop
mov
sbb
push
adc
inc
push
adc
aam
fwait
and
xor
push
mov
and
adc
xchg
add
dec
lock
or
add
add
lock
sub
add
ss
je
mov
xchg
sbb
and
and
cmp
jno
imul
add
xor
inc
or
sbb
xor
cs
and
mov
push
sub
aam
pop
xor
popa
mov
sbb
add
jle
sub
das
adc
outsl
mov
pop
and
xor
sbb
mov
sbb
arpl
xor
ret
in
mov
and
dec
adc
cmp
inc
inc
sub
or
push
and
dec
dec
inc
xor
cmp
inc
xor
xor
dec
push
and
and
cmp
int
dec
mov
cmp
das
je
and
jle
xchg
and
cmp
push
mov
fildl
cmp
pop
pop
shl
xor
mov
push
sub
and
xor
jmp
sub
mov
push
push
lret
xchg
cmp
movsl
xor
xchg
fildl
shlb
inc
inc
pop
int3
cmp
clc
jg
or
aas
dec
jne
and
add
testb
lods
subl
dec
mov
lock
add
pushf
outsl
decl
outsb
mov
sub
xor
cmp
and
cmp
dec
fcmovnu
outsl
outsl
add
cmp
ss
xor
cmp
cmpl
sti
xor
add
inc
add
mov
shlb
mov
push
push
sbb
xchg
lock
push
sarl
and
aam
push
cli
in
xchg
add
push
add
loopne
fldt
adc
cwtl
and
dec
push
pop
aam
adc
push
js
inc
mov
add
into
push
in
add
or
lcall
or
sub
cld
test
sarb
lock
push
push
adc
add
in
or
movaps
scas
pop
shll
lock
pop
adc
push
or
and
sub
aam
stos
add
fldt
mov
or
addr16
push
push
mov
add
mov
dec
in
int
bound
cmp
sahf
push
and
add
lcall
cmp
movsb
das
pusha
mov
add
xor
mov
lds
adc
rolb
mov
aam
sbb
or
adc
sbb
fdivp
insl
out
adc
adc
or
mov
or
pop
pop
dec
lret
roll
pop
mov
xchg
and
mov
sbb
adc
les
xor
mov
add
add
and
cmp
mov
insl
sub
and
add
jbe
cwtl
mov
add
jno
pop
dec
cmp
pop
mov
popa
or
adc
sbbl
xchg
and
dec
cmp
mov
fldt
push
push
mov
inc
or
sub
push
insb
outsl
add
pusha
cwtl
pusha
outsl
std
testl
add
add
mov
lock
adc
lods
int3
ja
add
or
sti
in
mov
or
or
and
insb
pusha
adc
data16
ja
sbb
xor
cmp
in
jle
xchg
cmp
or
add
add
or
add
push
xor
adc
mov
into
fsts
pop
xor
inc
movsl
mulb
sub
and
or
invd
sbb
inc
jnp
sbb
lret
cmc
and
add
lahf
repz
adc
fsubrs
ret
or
outsb
mov
cmpsb
insl
sbb
and
lret
fisubrs
pop
dec
and
test
mov
mov
sahf
sub
sbb
inc
jo
mov
popa
mov
pop
pop
lds
js
jne
add
sub
movsl
and
shll
cmp
mov
rcll
push
push
pop
push
mov
dec
adc
lods
or
popf
jnp
xchg
jmp
push
adc
and
loopne
sbb
adc
sbb
or
dec
divb
or
sbb
and
xor
push
sbb
aaa
fisubrl
inc
dec
mov
pop
push
scas
mov
and
arpl
pop
or
pop
or
jmp
test
adc
mov
and
test
mov
sbb
xchg
iret
add
jecxz
cltd
leave
mov
leave
fstl
add
adc
lret
lea
push
fbstp
add
aaa
mov
pop
cmp
sbb
mov
push
sub
xchg
imul
add
adc
fiaddl
sub
popa
aam
nop
aad
and
mov
mov
adc
mov
and
test
dec
push
jno
dec
mov
loopne
shlb
movsb
jno
add
and
jb
data16
pop
and
loope
lock
add
adc
sbb
int3
add
pop
add
sbb
pusha
ret
in
add
mov
add
sub
add
add
jle
sub
xor
and
add
dec
add
xor
dec
add
and
addr16
out
fldt
sub
cmp
xor
sbb
or
push
push
cmp
or
int
fiadds
or
sbb
xor
or
push
and
mov
fwait
push
and
sbb
pop
inc
and
add
push
sbb
sbb
jbe
push
push
inc
add
nop
test
add
aad
jge
lods
dec
ljmp
sub
insb
gs
cmpsl
adc
pop
and
push
inc
stos
xorl
or
pop
xchg
jle
push
add
jno
add
movb
cmp
mov
push
pop
jecxz
movsb
sbb
lods
adc
push
inc
pop
add
nop
pusha
pop
fiadds
pusha
xchg
add
xchg
push
ficoms
jmp
lea
or
in
pop
pop
xor
je
xlat
pop
movsb
xor
sbb
outsb
cmp
push
jns
jp
or
inc
jbe
dec
jo
cmpsb
imul
dec
xchg
and
out
add
test
incl
add
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
xchg
inc
add
add
