fcomp
decl
jo
inc
add
mov
or
sbb
ljmp
push
mov
push
or
call
test
jne
pop
pop
ret
push
push
aas
int
rcrl
mov
test
je
cmp
lods
add
cmp
jmp
pcmpeqd
cmp
jae
sub
movzwl
lea
jne
push
jb
pop
pop
xor
std
fwait
insb
and
neg
sbb
and
pop
xchg
add
inc
fdivr
fnstcw
push
push
test
rcr
test
jne
pop
ret
push
cmp
or
pop
sbb
add
les
and
insl
shr
adc
xor
push
mov
inc
add
int
movl
push
add
test
jne
mov
scas
inc
push
push
push
in
xchg
int
push
mov
xor
push
lods
std
dec
mov
pop
je
xchg
inc
mov
pop
lock
and
pop
push
pop
ret
pop
adc
sbb
dec
shrl
incl
or
lock
dec
test
jg
cmp
adc
incb
testl
add
ljmp
mov
in
fstpl
mov
in
adc
push
mov
les
cmpl
or
push
faddl
adc
or
jmp
pop
push
adc
mov
mov
pushf
push
push
cmc
aaa
stc
sbbl
popf
out
std
ficoms
jno
and
push
add
or
sbb
add
push
lock
dec
add
mov
sbb
sub
add
push
mov
in
add
or
loop
sbb
mov
mov
sbb
hlt
push
push
adc
push
push
notl
sbb
push
mov
push
adc
inc
ja
push
leave
or
leave
fldl
leave
add
add
add
adc
or
and
inc
pop
repnz
shlb
fs
or
xor
fldt
adc
sbb
mov
adc
imul
jnp,pn
push
mov
xor
pusha
pushf
dec
add
jge
testb
call
int
lahf
mov
sete
into
js
orb
je
lcall
lcall
sub
add
push
inc
es
push
and
mov
les
in
xchg
push
add
add
insb
mov
jb
xor
scas
stc
sbb
and
inc
les
xor
push
push
dec
push
mov
lea
push
dec
or
mov
dec
sub
int
sbb
xor
les
jo
jp
in
insb
and
das
jb
mov
inc
xor
divb
xchg
sub
sub
xchg
cld
js
push
in
and
mov
xchg
dec
or
xor
lea
filds
jns
cmp
jge
mov
xchg
pop
pop
xchg
mov
pop
ret
xor
jns
loope
mov
dec
dec
push
nop
stos
js
inc
push
insb
sbb
sub
outsb
push
add
pop
cmp
jl
cmp
sub
push
add
inc
sbb
push
xor
jg
cmp
ja
ret
mov
aam
fwait
rcrb
or
repnz
sub
add
push
push
or
sub
mov
rcrl
mov
into
sub
imull
or
cmp
cmp
or
inc
mov
mov
sbb
ljmp
out
adc
cmp
dec
or
adc
push
jne
mov
mov
subl
mov
pushf
out
mov
rorb
test
inc
add
inc
add
inc
add
or
loopne
fdivrs
in
mov
push
pusha
and
jecxz
push
add
inc
push
jecxz
add
adc
and
dec
ds
xor
sub
add
and
shlb
sub
add
adc
mov
js
int3
add
xacquire
hlt
sahf
outsb
les
add
iret
adc
mov
mov
push
add
aam
mov
pop
jmp
inc
incl
add
sub
negl
dec
pop
and
xchg
cmpb
sbb
lea
clc
int3
in
imul
imul
dec
pop
sub
inc
xchg
je
jae
sbb
or
rorl
xor
and
mov
xor
lea
cmp
stc
arpl
ret
mov
push
shlb
ja
orb
pop
pushf
hlt
dec
pop
pushf
mov
fdivp
pop
iret
pop
mov
mov
sbb
or
add
add
cltd
mov
pop
popf
cli
xchg
adc
add
and
mov
push
or
jb
in
sbb
sbb
sbb
adc
pop
or
cmp
push
mov
je
and
push
or
push
add
pop
mov
add
push
push
xchg
cmp
in
test
jno
and
xchg
fldt
sbb
scas
je
push
pusha
sub
sete
add
rolb
xchg
sub
in
jb
lea
mov
shlb
cmp
dec
ficoms
add
pop
mov
jmp
pop
jge
scas
insb
xor
push
repnz
xchg
cmpsl
ljmp
xchg
dec
ds
scas
pusha
mov
jno
or
divb
push
mov
test
cmpb
inc
orb
xor
sbb
inc
mov
lods
rcrb
push
push
testb
enter
push
push
xor
adc
push
mov
xchg
push
push
in
cld
sub
fdivl
xchg
es
hlt
mulb
cltd
jo
cmp
movaps
add
xor
pop
lods
in
dec
outsb
bound
rolb
push
push
mov
fcomps
pop
adc
cmp
data16
test
enter
or
add
std
add
push
inc
imul
sahf
out
mov
xchg
fs
sbb
das
adc
ret
or
repnz
aaa
mov
nop
ja
xchg
sbb
mov
mov
and
cmp
pop
and
icebp
sbb
jge
rcr
js
incl
pop
in
add
sbb
subl
push
push
fistpl
call
leave
mov
push
repnz
out
sub
mov
nop
xor
add
cld
mov
add
ja
xor
cmc
cmpsl
xor
pusha
mov
shrb
into
lock
insb
add
pop
cmp
mov
negl
jno
xor
js
fcomps
sbb
outsl
outsb
adcl
adc
mov
or
sti
cli
lea
ret
in
data16
or
test
sub
mov
loopne
imull
cmpl
je
adc
add
adc
dec
adc
add
notb
jmp
adc
call
cmp
cld
push
pop
xchg
int3
rolb
movsl
aam
dec
pop
arpl
add
in
and
adc
dec
mov
xor
and
mov
fcompl
cmp
adc
push
fs
push
adc
cmp
into
or
mov
xchg
or
mov
mov
insb
mov
adc
lahf
mov
cmp
scas
inc
mov
or
in
mov
lods
add
mov
daa
sbb
push
mov
adc
push
mov
mov
arpl
sbb
dec
popa
jge
orb
and
sbb
mov
inc
imul
jne
es
and
mov
adc
test
jg
jmp
adc
lea
pop
xor
sbb
and
add
xorb
push
pushl
jo
adc
aad
or
cmp
mov
sub
jb
inc
mov
fildll
mov
enter
and
insb
xor
cmp
dec
add
mov
cmp
fisttpll
lods
add
add
aas
lock
cmc
pop
adc
outsb
hlt
jne
mov
test
pusha
imul
movsl
jo
adc
add
insb
xor
ret
push
aad
lds
mov
cmp
je
xchg
add
dec
sbb
sub
pushf
sbb
and
fwait
cmp
sbb
sub
clc
test
mov
mov
push
and
pop
and
dec
adc
jge
push
jg
push
sti
int3
add
lock
mov
sub
jg
lods
push
push
pop
call
call
push
adc
lahf
cmp
call
inc
cmp
jl
inc
ret
outsb
lea
jne
push
inc
scas
cltd
insb
push
js
jne
sbb
jbe
push
push
xor
popa
imul
imul
mov
sbb
addl
lock
and
cmpsb
pushl
movzwl
push
decb
js
rep
mov
sub
push
decl
fcmovnu
int
jl
sbb
jmp
sbb
test
jne
leave
jae
sub
mov
push
mov
hlt
sbb
and
adc
push
jne
lods
push
scas
jp
movsb
mov
xchg
ret
jo
add
fsubs
pop
inc
fbstp
sub
add
xor
mov
cwtl
or
mov
aas
jge
xor
mov
cmp
jl
xchg
sub
push
fldl
mov
sub
mov
rcl
imul
aas
cmp
sbb
push
insb
popa
loopne
xorl
adc
add
cmp
cmp
jbe
push
movsb
mov
push
inc
adc
xor
mov
pop
hlt
mov
sub
push
jge
pop
add
in
push
in
mov
andb
sarb
clc
jle
jb
jmp
lods
sub
cmp
pop
pop
loopne
cmp
dec
clc
lea
sub
or
jge
mov
aam
dec
dec
adc
cmp
ja
add
jmp
or
sbb
add
push
push
daa
pusha
jl
outsl
push
add
test
outsb
enter
adc
add
add
lret
adc
ret
mov
xchg
cmp
js
fdivrl
sub
add
jno
or
hlt
cmc
push
dec
jo
icebp
stos
push
fists
adc
push
leave
push
mov
bound
add
test
ret
inc
mov
or
jge
add
or
fisubl
or
cmp
not
lods
jne
dec
mov
pusha
fldcw
fcoms
cld
insl
neg
push
jb
hlt
mov
sub
or
mov
cmp
ja
push
push
sbb
xor
jmp
add
push
cmp
mov
xchg
jl
push
cmp
fwait
mov
sub
pop
mov
adc
fcmovb
lahf
les
enter
std
shrb
loop
es
jmp
add
aaa
and
pop
int3
adc
mov
or
popa
or
pop
push
mov
fbstp
lea
push
adc
jb
roll
push
fld
or
out
movb
loope
outsl
in
mov
dec
jl
xor
lcall
push
inc
aas
push
push
push
pop
pop
or
cmpsl
jo
adc
rorb
pop
fsubrs
test
icebp
lock
fisttps
or
mov
imul
mov
aad
or
push
mov
mov
push
sahf
xor
je
cmpl
lea
jl
mov
push
jne
out
jle
push
call
dec
test
jmp
arpl
lock
pop
pop
insb
push
xchg
stos
pushf
pop
sub
div
mov
pop
or
inc
clc
outsb
mov
adc
and
ret
loope
out
pushf
call
cmp
jg
jns
adc
shlb
adc
sbbl
filds
or
push
cmp
sarb
adc
push
outsl
add
mov
mov
sub
push
push
mov
jb
and
adc
xchg
test
sahf
cmpsl
adc
iret
sub
lock
jle
pop
mov
rclb
pop
push
adc
ret
js
xchg
dec
jge
jmp
inc
add
lock
or
push
scas
mov
lea
mov
test
stos
xor
icebp
scas
add
shll
or
push
int3
out
test
jl
fidivrs
cmp
add
rolb
xor
pop
jge
dec
and
push
rol
add
jmp
push
stos
and
pop
loopne
add
rolb
cmc
jae
js
lock
push
cmc
push
or
fdivrs
cmp
lea
pop
sub
cmpb
pop
inc
mov
and
push
push
jl
inc
sub
push
or
add
sub
and
shll
ret
test
or
mov
pop
mov
dec
mov
je
pop
pop
jg
fwait
push
push
xor
or
jmp
mov
decb
repz
je
std
imul
pop
pop
pop
cmpsl
jae
pushf
mov
lods
fstpl
inc
push
rcr
push
pop
sbb
fxch
sbb
fistl
test
lret
mov
xchg
dec
xor
cmpb
pop
push
pop
jmp
pop
xor
mov
and
mov
insb
pop
es
pushf
js
xchg
or
sbb
push
lock
mov
arpl
lret
push
sbb
cmp
or
cmp
int3
push
and
and
sbb
nop
sbb
test
inc
orl
jl
shl
add
int3
in
fiaddl
mov
cmp
push
push
pop
lea
sbb
mov
mov
sarl
sbb
dec
xchg
scas
push
push
outsb
out
sbb
out
ret
jne
xor
jb
lea
mov
inc
cmp
imul
iret
push
data16
or
jecxz
out
sbb
call
and
lret
mov
mov
jb
sbb
jbe
in
pop
or
pop
adc
mov
push
and
shll
jnp
push
jl
enter
ret
popa
or
mov
adc
sbb
pop
and
pop
mov
jg
sbb
xchg
sbb
sbb
add
add
aas
stos
cmp
roll
sub
into
jb
or
loope
lods
call
clc
cli
xchg
nop
add
ficoml
xor
cmp
loop
mov
movsb
bound
lock
and
je
or
fimull
xor
cmp
push
adc
movsb
rcl
shlb
xchg
add
push
ret
leave
adc
clc
pop
xchg
jl
repnz
push
sub
mov
test
aad
jne
cmpl
and
jle
lock
dec
or
jmp
ret
pop
add
jne
insb
mov
outsl
and
sarb
rcr
jle
repz
shll
push
inc
pop
imul
xor
aaa
das
adc
inc
inc
subl
stos
je
sub
jne
cmp
mov
fistl
idiv
xchg
jne
inc
aas
cmp
mov
jbe
mov
movb
jno
add
cmp
or
or
mov
dec
adc
mov
push
add
repnz
push
rcl
incb
and
and
in
inc
jle
push
mov
es
sub
mov
cmp
lods
nop
pop
push
mov
ret
test
aaa
cmp
pop
lock
mov
neg
sbb
and
mov
sbb
dec
int3
fsubrs
mov
and
pop
sbb
or
cmpb
test
sahf
in
daa
adc
mov
shr
ret
into
dec
test
mov
cmpb
cmp
sub
stc
fcmovnu
xchg
xorl
mov
imul
adc
fldz
movl
fcomp
mov
in
xor
addr16
movsl
mov
sub
jl
sub
sub
lods
orl
ja
jmp
fsub
iret
repz
sti
pop
cmp
xchg
mov
cmp
push
pop
jp
push
and
push
push
add
mov
or
and
sbbl
cmp
mov
push
pusha
lea
imul
adc
and
popf
icebp
iret
iret
in
mov
movb
pusha
sbb
dec
loop
adc
scas
add
push
push
lahf
popf
pop
cltd
and
push
aam
mov
dec
push
push
cld
pop
push
inc
xor
pop
push
lea
push
push
push
cmpl
std
shll
lea
cmp
inc
out
ret
icebp
dec
aam
enter
les
push
jns
sbbb
inc
inc
pop
cmp
push
cmp
shll
or
movl
add
sub
jne
add
xor
jle
add
xlat
lahf
stos
jl
cmpb
mov
loope
into
mov
nop
xchg
jne
fcompl
adc
test
add
call
adc
push
push
push
jle
fcmovb
stos
out
lahf
cwtl
movl
fwait
test
mov
cmp
mov
test
shll
mov
sub
popa
sbb
add
mov
or
push
dec
in
and
mov
add
fadds
xchg
dec
jmp
xchg
mov
call
sbb
xchg
in
mov
divl
mov
js
cmp
sbb
out
xchg
sbbl
xchg
push
daa
push
and
or
rol
sbbl
add
push
setne
fdivr
pusha
fcoml
shl
dec
and
clc
xor
push
mov
jb
xchg
dec
in
push
jmp
push
push
push
push
cmp
out
popa
cld
cmp
je
gs
push
push
inc
cs
sub
push
mov
lahf
gs
jle
sahf
mov
add
ret
movsl
sub
clc
pop
incl
ret
cmpl
xor
ret
or
adc
and
test
xchg
in
dec
fnstcw
mov
sub
rcll
lret
inc
inc
and
lea
jmp
sub
push
std
out
push
mov
mov
insb
push
dec
dec
mov
push
push
xor
push
push
lea
notl
cmp
je
sub
insb
sub
sbb
rcrl
rcrl
mov
lods
std
ss
xor
sub
mov
add
sahf
inc
add
flds
dec
inc
mov
cmp
jno
arpl
lahf
dec
sahf
fs
or
sbb
setno
xchg
insl
push
and
push
sbb
cmp
jns
sbb
push
adc
xor
cmp
dec
inc
or
jle
cmp
sub
popf
mov
cmp
in
arpl
inc
test
pusha
roll
fistps
pushl
sti
mov
mov
push
add
js
mov
sbb
push
mov
sub
add
mov
adc
push
xor
push
fnsave
mov
pushf
ret
test
add
imul
addb
mov
and
or
sbbb
loop
mov
push
lret
jns
and
loop
xchg
pop
lods
cmp
addr16
push
cwtl
pusha
lock
mov
fiadds
adc
adc
or
add
stos
cwtl
add
jmp
lret
xor
ret
ja
push
push
and
jbe
push
inc
mov
pop
cs
jo
lret
push
mov
jne
xor
sbb
and
xchg
insb
mov
adc
xlat
loop
lret
jle
mov
das
add
clc
add
je
or
jl
aad
das
cmp
lret
call
lea
mov
jmp
pop
or
push
push
sub
mov
test
rcrb
mov
lcall
mov
out
fldz
fdivp
jb
add
call
push
cmp
jbe
andb
dec
es
push
rcll
mov
pushl
mov
lds
aas
sbbl
add
push
xchg
popa
lea
mov
sub
push
jne
push
mov
sahf
push
xchg
inc
and
mov
pop
sub
outsl
jo
or
xor
pop
clc
pusha
xchg
movb
sbb
xor
mov
mov
mov
push
mov
outsl
sub
loope
test
adc
and
sub
lods
and
sub
sbb
xchg
sub
pushl
ficoms
add
xchg
push
or
push
shlb
push
dec
xor
sub
mov
jo
push
addb
inc
add
dec
inc
inc
lahf
push
rclb
loope
test
push
pusha
mov
sub
test
jge
pop
loopne
mov
pop
sub
push
push
lea
cld
or
negb
or
lock
loope
ljmp
inc
sub
mov
lret
push
cmp
or
jg
xchg
out
or
cmpb
cmpsl
addl
mov
pusha
push
jb
push
sub
add
inc
inc
imul
add
enter
cmpsb
sbb
add
xor
test
fdivs
test
push
mov
mov
and
push
fisttpll
stc
daa
inc
xchg
addr16
push
sbb
int
push
je
js
je
push
test
js
mov
int3
call
jge
aaa
aam
enter
sub
cwtl
imul
inc
inc
ret
scas
sarb
pusha
fmull
add
mov
movsb
repnz
jl
outsb
and
push
lahf
repnz
jb
mov
adc
fisubrs
pop
movsb
lock
add
mov
scas
add
add
pop
popa
mov
pop
pop
push
dec
gs
ret
or
aas
push
xlat
ret
lock
adc
insb
push
sbb
loop
je
int3
xchg
and
mov
push
push
inc
imul
xor
push
add
push
mov
inc
jo
movsb
dec
js
jp
daa
repnz
jl
mov
or
dec
or
adc
andl
push
insl
loope
push
rsqrtps
pop
sbb
ss
mov
adc
and
and
mov
imul
xchg
ret
popa
test
push
cwtl
insl
pusha
push
sbb
icebp
sbb
push
mov
push
loope
xor
aam
cmp
cmp
jb
sbb
add
fdivrs
dec
mov
jge
lods
lock
enter
jmp
shrb
sub
out
or
inc
test
in
adcb
cmp
dec
jnp
ja
push
mov
push
out
xchg
add
and
ret
bound
outsb
mov
loope
ret
xor
push
loopne
outsb
rclb
xchg
or
push
pushf
shrb
sub
pop
dec
sbb
call
push
addr16
push
push
loope
push
repz
ret
dec
outsb
cmp
cmp
add
jmp
adc
inc
inc
push
sbb
mov
jae
adc
pusha
add
push
dec
clc
ret
push
enter
jge
xor
js
lock
and
sub
add
popf
dec
enter
mov
jo
cs
int
push
loopne
sub
sbb
pop
les
xor
add
pop
and
cmp
dec
mov
cltd
pop
jo
icebp
and
sar
lock
sbb
add
pop
adc
add
fidivrl
mov
jnp
xor
jecxz
call
push
jge
mov
dec
bound
imul
sar
mov
shr
add
mov
imul
push
sub
push
push
lret
insb
adc
fisttpl
mov
imul
adc
enter
jae
xchg
das
call
fdiv
add
mov
jg
mov
sub
adc
pop
test
lea
ss
je
ljmp
dec
cmpl
or
xor
jne
xchg
bound
jmp
and
inc
fs
dec
xor
daa
dec
inc
mov
hlt
push
out
clc
loopne
arpl
cmp
xor
and
mov
lea
test
imulb
push
mov
lock
lea
mov
adc
loop
jae
jb
push
test
mov
sub
mov
or
out
inc
fstpl
push
int3
incb
sub
sub
adc
ss
outsl
ss
jl
lcall
mov
test
inc
push
aaa
es
ds
cmp
sbb
sahf
imul
mov
mov
insl
arpl
mov
xchg
fisubrs
jle
cmp
add
xor
sbb
fwait
test
fs
out
jbe
or
ljmp
mov
jno
stc
mov
dec
sub
jge
jmp
mov
push
xlat
jp
pop
fistpl
dec
pandn
push
faddl
test
mov
pop
or
clc
sub
xor
mov
fdivrp
shll
and
fisttps
sbb
mov
mov
xchg
add
jns
inc
cmp
outsb
cmp
rol
xchg
imul
icebp
in
or
mov
nop
or
out
fidivl
mov
pop
pushf
add
sahf
add
mov
enter
movb
cwtl
pop
mov
leave
or
bound
push
cli
enter
or
jbe
das
pop
push
and
call
mov
push
mov
or
call
xchg
mov
xor
xchg
mov
jbe
lock
iret
cmp
dec
aam
addb
sub
xchg
cmpl
shlb
xchg
xchg
mov
shll
cmp
sub
lods
add
out
inc
dec
inc
inc
clc
inc
test
and
and
or
add
call
test
or
sub
sbb
mov
pop
out
adc
les
pop
or
inc
outsl
loopne
into
aam
insb
jmp
jecxz
xchg
out
or
pop
add
or
ret
jne
and
shlb
push
enter
xor
into
mov
into
or
pop
iret
sbbl
clc
sahf
nop
sbb
pushf
inc
adc
outsl
add
mov
lds
lret
or
add
push
pop
push
pop
inc
loop
fldl
or
rcll
test
push
sbb
xchg
test
lea
push
push
ret
mov
mov
pop
or
xor
jo
fstpl
dec
andb
lods
rclb
cmp
push
sahf
adc
test
inc
push
aas
pop
lds
push
add
fmuls
jg
or
nop
das
mov
and
mov
pop
sub
mov
pop
mov
sbb
jmp
in
shrb
and
add
add
add
mov
lcall
call
mov
or
adc
and
std
test
inc
and
pop
sbbl
scas
int
and
cmp
inc
sub
addb
and
cld
mov
cmp
setb
aad
cld
pop
scas
push
mov
sub
cmp
setae
pushf
sub
mov
clc
mov
push
mov
push
movl
push
or
movsl
jo
pop
fstp
xchg
jecxz
jno
pop
cmpsb
and
jmp
sub
cmp
mov
and
mov
or
add
push
adc
adc
pop
pop
loope
inc
call
rol
loopne
push
inc
cld
jecxz
add
outsl
mov
push
push
mov
ja
or
cmp
push
hlt
adc
pop
in
inc
sbb
jp
sbb
movsl
imul
push
push
push
cmp
inc
push
push
dec
cmpl
pop
leave
test
xchg
daa
scas
lahf
dec
mov
mov
dec
testl
push
movb
fwait
in
push
jg
clc
push
ja
movzbl
in
dec
xchg
pop
or
push
mov
outsl
mov
stos
adc
jmp
out
dec
aaa
push
inc
dec
lods
sbb
add
adc
sub
add
aas
and
test
push
jge
lahf
inc
enter
dec
adc
incl
mov
pop
ret
aas
or
and
adc
icebp
repnz
lea
movl
inc
es
mov
pusha
or
int
rorb
das
mov
xor
movsb
add
lea
aaa
cmp
add
inc
imul
jge
out
jo
push
roll
mov
and
stos
jle
or
jae
mov
mov
and
sbbb
daa
xchg
shlb
les
xor
pushf
pop
sbb
add
mov
cli
push
ret
push
pop
mov
sub
jne
add
push
push
pop
or
stc
lea
leave
andl
push
lahf
fcoml
out
pusha
fnstenv
add
and
in
or
jmp
push
ja
insb
sbb
jo
or
jmp
push
nop
cmp
inc
adc
subps
dec
sahf
cs
push
pop
or
mov
mov
cmpsl
hlt
mov
rclb
sbb
repz
dec
xchg
push
subb
xchg
sbb
pop
shrl
mov
push
loop
in
mov
pop
cli
sbb
xor
test
jecxz
xor
sub
mov
mov
in
outsl
cld
pop
clc
jg
popa
mov
mov
sub
sub
fsubl
dec
sbb
movsl
inc
inc
mov
dec
mov
enter
std
loopne
push
stos
mov
jge
dec
setg
cwtl
xor
flds
mov
movsb
pop
das
or
dec
aaa
dec
fidivs
jge
pushf
dec
cmp
dec
mov
cmpb
ds
or
push
fstpt
lea
in
inc
int3
push
sub
and
sbb
add
and
dec
or
sub
add
xor
cmp
stos
jg
scas
or
add
pop
push
xchg
lcall
rolb
push
add
pop
mov
xchg
dec
add
sub
pop
dec
push
ljmp
push
xor
int3
mov
mov
add
loope
shlb
add
add
add
fistpl
in
repnz
les
push
add
or
adc
rolb
xlat
aam
in
pop
or
pop
push
out
xlat
or
adc
cmpsl
sbb
movsl
fwait
nop
or
aad
fstl
dec
and
xor
add
test
fdiv
insb
dec
popa
xorl
mov
lods
push
or
mov
or
aaa
js
adc
xor
test
or
add
cltd
or
loopne
push
add
push
push
mov
lock
sbb
cmpb
push
jo
lds
loopne
dec
add
fdivl
pop
sti
jle
jl
rorb
js
pop
movl
mov
test
add
test
in
sub
bound
push
outsl
mov
push
or
dec
add
push
push
enter
sub
xchg
lods
ds
lods
or
inc
pop
sbb
mul
mov
testl
mov
sub
lret
push
pop
push
mov
and
jo
push
aaa
inc
ss
movsl
bswap
hlt
add
andb
and
hlt
daa
jp
add
dec
adc
dec
xor
push
jl
inc
xor
mov
aam
jae
dec
adc
sbb
xor
sbb
adc
lcall
mov
sbb
jo
pop
inc
mov
inc
cli
xor
sub
stos
test
das
enter
push
xchg
sti
ds
fmul
pop
adc
pushf
mov
bswap
pop
dec
xor
scas
push
lds
push
loopne
sbb
push
and
add
aas
adc
cmp
push
stos
pop
fnstcw
xor
ljmp
lods
push
lcall
push
dec
add
clc
dec
adc
and
cli
cmc
lahf
add
jl
hlt
inc
jb
or
pop
fs
jb
add
mov
adc
push
rorb
movl
adc
fs
outsl
push
aaa
je
mov
adc
sub
push
dec
jl
dec
adc
mov
and
sahf
and
mov
mov
push
jge
and
addl
inc
dec
inc
push
push
pop
sub
ja
xchg
dec
add
adc
nop
pop
in
out
xor
add
out
xor
or
inc
jne
mov
nop
mov
push
mov
push
fcoml
test
mov
adc
enter
scas
or
shrl
clc
sbb
cld
cmp
jne
inc
add
fisttpll
or
sbb
xchg
sbb
adc
sbb
shlb
jnp
sub
mov
jmp
pusha
and
lods
mov
xchg
mov
cmp
cwtl
pop
mov
mov
xor
ret
inc
xchg
sbb
push
into
fstl
pop
xchg
xchg
push
push
or
cmp
xchg
jno
packuswb
mov
add
lcall
testb
in
clc
sub
loopne
sbb
pop
jp
add
add
jo
mov
adc
or
or
sti
mov
push
add
and
aad
sub
cmp
call
xor
and
or
xor
and
pop
add
add
and
xchg
shlb
and
xor
mov
lfs
xor
mov
push
mov
xor
push
pop
test
leave
adc
bound
add
pop
xchg
adc
xlat
loop
nop
sub
mov
mov
fwait
lods
push
push
es
test
es
sti
aam
adcb
jns
addr16
inc
and
mov
bound
ljmp
push
in
sbb
adc
add
or
add
xchg
jmp
int3
push
adc
jmp
enter
invd
inc
or
mov
sti
push
movl
mov
mov
mov
hlt
add
push
jle
mov
jmp
mov
xchg
jns
lods
sub
and
test
cmp
or
push
inc
jle
push
push
shrb
or
je
inc
jb
enter
lock
cmp
pop
mov
push
js
pusha
add
sbb
pusha
cmpb
mov
add
push
sub
and
inc
jle
xor
or
cmovb
shlb
xor
xor
mov
and
sti
icebp
dec
push
xor
xor
add
inc
mov
sub
push
push
arpl
push
dec
hlt
dec
xor
jmp
std
push
movsb
or
and
sbb
mov
nop
cmp
xor
test
push
inc
shlb
inc
mov
outsb
dec
and
icebp
push
push
cltd
dec
scas
js
inc
xor
cld
xor
lods
out
pop
pop
push
mov
xor
inc
dec
add
jbe
sub
mov
shrb
lea
cmp
add
xor
leave
test
xchg
leave
fmuls
cmpsb
rolb
jg
mov
jbe
pushf
jmp
push
sbb
insl
pop
jge
je
mov
pop
adc
scas
or
movl
jbe
scas
adcb
and
cmp
cmp
lods
nop
xchg
dec
and
orl
addr16
cmp
sbb
xor
lcall
lods
mov
push
dec
cmp
sbb
and
inc
rclb
dec
push
mov
std
lods
mov
popa
jo
mov
sarl
sub
or
pop
int3
fdivrs
mov
jle
inc
inc
push
cwtl
pusha
ffreep
test
cmp
cmp
cli
cld
mov
xor
in
adc
testb
push
xchg
xor
aam
movsb
lds
xor
xlat
mov
lcall
outsb
cwtl
bound
std
adc
fmull
bound
repz
add
mov
rolb
or
call
push
in
cmp
push
mov
mov
push
lods
outsl
add
adc
or
test
xor
lods
push
inc
fnstsw
mov
jecxz
or
or
jnp
adc
sbb
sub
sbb
shlb
jno
and
cmp
subl
cli
or
pusha
lret
add
sbb
cli
mov
mov
cmpsb
aaa
push
inc
sub
and
cmp
into
test
lods
mov
loope
mov
inc
mov
push
movb
push
sti
xchg
sub
sbb
pop
adc
lea
lds
aam
inc
lock
dec
inc
xor
mov
loopne
jmp
repnz
push
push
incb
stc
test
sahf
nop
pop
push
mov
add
pop
push
loopne
push
add
push
xor
int3
subb
push
std
js
scas
movsb
add
mov
sub
mov
and
popa
mov
clc
add
ja
ss
lock
out
or
leave
pop
iret
pop
mov
xchg
mov
cmpsl
and
iret
sahf
mov
loopne
add
jns
lock
pusha
push
pop
pop
push
cmpsl
sarb
add
and
js
lods
decb
pop
adc
lahf
push
push
scas
jle
je
dec
jge
iret
rorl
enter
dec
stos
mov
int3
jo
push
sbb
jl
fistl
mov
mov
inc
and
xchg
or
push
popa
pop
push
and
xor
or
daa
xchg
adc
mov
les
addb
or
sbb
jns
xlat
add
mov
jb
pop
clc
adc
repz
add
mov
add
dec
jae
add
add
pop
mov
mov
sti
enter
push
push
cmp
and
or
cmp
or
or
cs
test
es
adc
dec
cmpsb
cmp
inc
dec
adc
cs
adcl
xor
cmp
inc
es
pusha
and
cmpsl
nop
lret
filds
push
pop
xor
xchg
aas
inc
stos
jbe
imul
fwait
nop
adc
test
pop
out
jo
adc
and
rep
mov
adc
push
test
sahf
add
sub
jp
or
and
lahf
test
jns
mov
test
sub
push
add
cld
dec
je
insb
scas
pusha
js
push
add
inc
ret
add
ret
test
and
push
push
test
push
int3
and
inc
xchg
inc
dec
inc
add
hlt
and
push
adc
xchg
fmull
leave
sbb
sbb
add
popa
ror
or
and
sti
pop
push
push
je
test
pop
rcr
sbb
cmpsb
movsl
pop
fadds
imul
and
pushf
mov
inc
imul
aad
lock
jo
sub
fdivs
mov
les
js
popa
xor
fcomps
cmp
nop
inc
dec
sbb
sbb
mov
test
sbb
cwtl
popf
in
pop
mov
shlb
pusha
fistl
jno
mov
dec
cmpsb
pop
fiadds
icebp
sqrtps
push
push
push
loope
and
mov
sub
sbb
mov
push
pop
inc
and
inc
in
jno
xchg
cmp
cmp
rorb
pop
arpl
mov
mov
sbb
movsb
sbb
mov
inc
repnz
or
add
sbb
push
fisubl
es
js
cmp
mov
fs
and
aaa
lock
cmp
mov
ds
or
pop
pop
xor
mov
xchg
push
enter
pop
xchg
push
sbb
jmp
adc
dec
jp
mov
out
inc
mov
jnp
adc
sub
push
add
stc
mov
cmp
xor
rorb
and
xor
mov
and
imul
pusha
jno
adc
loopne
mov
rclb
shrl
jo
ficomps
mov
xor
push
shrl
xchg
xor
je
pop
push
shrb
imulb
push
test
bound
push
and
push
lds
shrb
mov
sbb
pop
xchg
and
add
inc
movsl
je
lods
jle
dec
clc
cli
inc
add
sub
push
iret
out
and
dec
pop
push
add
pusha
cmp
cmp
test
dec
shl
out
mov
fidivrs
jg
and
ret
or
sbbb
out
les
cli
and
je
sub
jne
jle
sbb
xchg
xchg
cmp
out
fildl
xchg
outsb
cmpsl
jmp
int3
repnz
add
dec
and
sahf
ds
pop
cmp
or
inc
ret
test
push
scas
imul
jge
push
sub
cmp
mov
adc
add
or
inc
out
adc
add
lods
out
cmp
lock
lea
jl
mov
jle
push
cmp
insb
cmp
cs
adc
cmp
sahf
mov
sub
mov
mov
addr16
test
add
add
xacquire
and
mov
sbb
shlb
inc
sub
add
add
push
repnz
add
inc
fwait
mov
adc
cmp
lods
inc
and
sub
cmpsl
cmp
mov
add
push
ss
cmp
movsb
xor
orb
pop
add
push
jecxz
iret
pusha
add
lock
mov
jge
lcall
inc
sbb
addr16
jo
gs
or
js
or
mov
mov
add
repnz
inc
jmp
mov
push
jnp
xor
inc
jbe
iret
shrl
sbb
cmp
mov
pusha
and
jo,pt
cli
mov
xchg
cmp
or
jecxz,pn
cli
js
dec
mov
cmp
add
mov
sahf
xor
sbb
rclb
mov
add
adc
push
dec
and
scas
negb
ss
adc
rcrb
pusha
mov
add
fisubrl
aad
shrb
dec
sarl
jl
mov
push
sub
dec
imul
sbb
dec
xor
push
fs
es
push
and
add
rcll
jp
jle
inc
push
test
int3
pop
sbb
cld
jae
imul
outsl
mov
dec
jb
sbb
loopne
xlat
sbbl
push
sbb
or
xor
sub
lds
push
sbb
neg
mov
mov
pop
shrl
cmp
sub
cmpsl
adc
negb
inc
push
popf
dec
test
test
sub
adcb
popa
pusha
add
or
in
push
sbb
cmpsl
add
scas
std
or
dec
adc
cmp
add
mov
dec
xor
cmp
or
cmp
cmp
adc
fisttpl
or
add
xor
nop
stos
push
ds
loopne
mov
inc
leave
je
pop
push
mull
adc
stc
mov
daa
push
xor
pop
sub
xchg
inc
xor
loope
mov
sbb
out
mov
js
cmp
push
mov
add
pop
cmp
or
addr16
mov
adc
adc
cmp
outsb
dec
mov
je
outsl
sbb
add
and
add
jmp
mov
pop
push
test
xor
sbb
insb
ss
std
cmp
es
fucomip
insl
sub
loopne
cmpsb
sbb
imul
xchg
dec
xor
dec
fstpt
fisubrs
mov
movsb
push
xor
movsl
inc
mov
dec
leave
sub
add
xor
jns
test
jmp
loopne
sub
jge
inc
mov
into
and
and
pusha
push
push
je
add
adc
push
fisttpll
call
leave
mov
fwait
inc
add
or
je
enter
mov
jg
ret
or
mov
inc
inc
adc
ss
syscall
mov
and
sar
loopne,pt
nop
pop
and
dec
add
mov
mov
std
sub
dec
ja
aaa
push
sub
jae
cwtl
inc
xor
inc
addb
test
push
jge
mov
sub
loope
inc
pop
inc
or
or
sbb
popa
cmp
pop
mov
loope
loopne
outsb
xchg
dec
pop
and
fdivrp
xchg
adc
daa
sub
cs
push
js
stos
add
or
push
push
jmp
call
sub
setge
lea
enter
pop
bound
insb
push
ljmp
push
jne
lret
movb
sub
movl
psraw
das
or
pop
fmull
lldt
push
push
and
sbb
adc
xchg
pop
mov
add
adc
cmp
lods
shrb
test
mov
push
cmp
push
scas
xchg
sub
mov
add
in
aad
cmc
mov
jnp
push
movsb
inc
fadds
daa
mov
push
sub
cld
pop
loopne
inc
jecxz
test
dec
dec
test
push
int3
or
pop
nop
adc
xchg
xchg
or
lret
enter
push
fisttps
push
push
dec
fldenv
fidivs
and
dec
lock
push
push
mov
subb
push
pusha
loopne
ret
mov
push
sbb
or
sub
repnz
dec
mov
test
push
pushf
pop
jp
adc
add
pop
int
push
lea
cwtl
sbb
add
add
pop
lds
add
push
push
mov
jbe
inc
loope
or
loopne
push
out
adc
mov
out
loope
rorl
inc
push
dec
mov
aaa
je
test
mov
jb
mov
and
mov
fstpl
movzwl
mov
movsb
inc
add
shlb
in
mov
mov
ja
stos
pushf
idivb
inc
push
dec
inc
pusha
pop
mov
add
jge
pop
je
push
xchg
pop
loope
xor
lods
rorl
mov
adc
or
push
cmp
nop
sub
mov
clc
aam
xor
xor
add
out
add
cmp
add
xor
cmc
push
ss
fs
je
ja
lock
cmp
jp
and
jne
mov
add
mov
mov
push
jno
pop
out
lods
adc
sbb
movsb
das
cmp
push
mov
adc
xchg
lret
and
xor
lea
mov
mov
loop
push
cld
lea
mov
ret
adc
mov
jl
push
push
hlt
sbbl
out
xchg
out
xchg
pop
add
call
add
cmp
jne
mov
cmp
cmp
jl
jns
loopne
scas
sub
cli
out
adc
jmp
push
pop
loopne
pop
shl
and
mov
fcmove
mov
or
lock
inc
dec
jb
or
sbb
jo
add
mov
or
lock
mov
pusha
into
shl
cmp
xor
jne
cmp
ss
adc
popa
push
nop
stos
in
xor
xorl
ljmp
hlt
xchg
jns
das
call
adc
sahf
adc
and
hlt
lea
add
cmp
scas
xorl
or
sub
add
jnp
int
decb
mov
fiadds
mov
add
cmp
adc
xchg
push
pop
aas
imul
hlt
pop
sti
mov
dec
mov
jge
add
in
push
push
fcoms
add
clc
shl
inc
push
das
mov
leave
shll
mov
je
mov
pop
push
es
popa
add
or
add
loopne
adc
sahf
jl
mov
push
jg
push
add
push
test
sub
ret
pushf
push
fnsave
sbb
test
adc
dec
popa
mov
test
dec
push
ret
mov
test
in
push
fcomps
test
js
les
push
fsubs
or
add
ljmp
jae
outsl
xor
lea
push
lcall
xor
sub
push
lods
shrl
add
push
push
repz
or
test
xchg
pop
rcrb
adc
pop
dec
push
dec
jb
inc
push
add
pop
dec
sbb
pop
jmp
or
push
pop
cltd
pop
shlb
in
inc
inc
and
sarb
inc
jle
lahf
mov
inc
or
push
lock
inc
push
or
add
add
adc
push
push
loopne
lock
pop
mov
addb
repnz
je
adc
jno
inc
rolb
and
and
jg
mov
cmp
in
jge
add
das
and
or
cmp
jl
mov
insb
lea
cmp
jle
pusha
sub
cmp
inc
lcall
popl
adc
jo
test
pop
mov
fldl
push
dec
in
mov
shr
push
lea
rol
mov
jmp
dec
xor
or
xchg
addl
in
ds
push
inc
stos
dec
flds
fbld
test
push
add
inc
pop
into
sub
js
incl
dec
sub
mov
rcl
cmpl
and
lods
jg
push
popa
loopne
mov
repnz
push
popa
pop
aam
or
inc
push
fadds
sub
adc
inc
push
mov
xchg
pop
addl
add
in
xor
into
add
add
push
mov
adc
push
ret
mov
sbb
imul
hlt
push
mov
push
mov
pop
sub
imul
push
add
test
cmp
adc
adcb
data16
add
lcall
call
sbb
xchg
adcb
pop
jne
lahf
in
jl
scas
rorb
pop
out
xchg
jmp
xor
push
push
mov
pop
add
mov
xchg
test
mov
push
xchg
sbb
fidivs
sbb
fbstp
and
jg
xchg
pop
jmp
fwait
pop
mov
insb
jl
jns
cmc
test
xor
lahf
xchg
lods
call
call
push
mov
pushf
fcomi
mov
push
cs
rolb
test
pusha
cmp
cmpsb
lock
fcmovnu
add
ret
mov
or
and
mov
stos
mov
jmp
ficoms
test
cmp
cmp
cmp
out
cmp
jne
test
loope
mov
inc
lock
jmp
inc
add
mov
repz
rcll
int
rolb
sbb
mov
sbb
xchg
nop
daa
mov
xor
add
push
and
sub
ret
addr16
je
xchg
pop
dec
mov
jge
push
rolb
jmp
dec
fs
outsb
in
adc
add
push
xchg
fdivl
xor
pop
test
jb
ja
add
pushl
adc
xchg
and
test
sub
xor
nop
adc
out
and
mov
adc
lahf
or
enter
sub
xor
jb
in
xor
cld
repnz
shll
push
int3
jb
inc
inc
fimull
dec
and
xor
inc
lods
cmp
js
or
cs
xor
xor
movsl
adc
bound
sub
adc
cpuid
push
pop
shll
add
xchg
push
add
int3
sub
add
jno
push
stos
daa
sbb
test
lods
popf
dec
test
wrmsr
fisttps
push
fwait
dec
pop
daa
xor
sub
add
pop
mov
loopne
sbb
cwtl
mov
addr16
add
xor
loopne
jl
push
sub
cmp
cld
xor
cmp
mov
out
add
mov
xchg
mov
hlt
and
arpl
roll
nop
loope
xor
sbb
sub
inc
push
jo
dec
mov
daa
sub
jns
cmp
adc
mov
in
jne
loope
hlt
out
sbb
repnz
push
js
fs
std
pop
inc
test
dec
sbb
xchg
xor
cmpsb
sub
lret
add
pop
mov
in
jne
push
shlb
or
push
mov
add
or
movl
jns
ret
push
xchg
xor
xor
push
add
or
sub
push
add
push
lds
or
or
xchg
subl
mov
or
push
hlt
outsl
aas
push
mov
ret
outsl
jbe
nop
out
leave
hlt
mov
dec
inc
inc
or
adc
add
lods
inc
mov
push
bound
cmp
mov
push
andb
in
inc
jmp
jl
inc
and
inc
and
orb
jmp
fadd
lock
sub
cmpsb
pusha
add
fadd
mov
shr
or
adc
aad
push
jb
insb
addr16
push
add
adc
faddl
xchg
icebp
loope
insl
sbb
test
push
test
inc
xor
mov
sbb
nop
lods
mov
push
mov
push
into
adcl
repnz
add
subb
add
push
xchg
push
xor
mov
movsb
sub
push
add
sahf
xorb
and
cmp
shlb
stos
jno
push
mov
push
xor
or
sub
inc
stos
mov
nop
xor
inc
xor
add
cmpb
pop
push
cmp
insb
cmp
mov
mov
xor
or
fbld
add
js
ljmp
adc
mov
mov
mov
nop
jo
clc
adc
sub
insb
enter
add
sbb
push
mov
ret
lcall
insl
push
dec
push
inc
mov
push
push
pop
sub
fildl
cwtl
mov
mov
push
jl
pusha
adc
pushl
sbb
push
sbb
dec
clc
or
inc
adc
add
movsl
sbb
insb
cmpsl
sbb
mov
xor
add
sahf
mov
push
cwtl
add
in
movsl
ss
sub
sar
inc
xchg
inc
rcrl
inc
ret
enter
ret
insb
rolb
sti
or
movb
pushf
push
test
shrl
xor
add
push
inc
mov
lock
mov
xchg
inc
pop
sub
repnz
icebp
lea
test
and
xchg
adc
in
xchg
js
out
int
addl
mov
dec
or
push
frstor
xor
in
push
sub
jbe
jge
sub
and
and
test
in
mov
cltd
add
sub
sar
fsubs
pop
mov
and
dec
add
ret
pop
add
add
mov
mov
shrl
jns
jo
and
cmpsl
test
jmp
popf
adc
or
js
add
cs
add
push
push
lock
ret
and
sbb
mov
jp
and
xor
push
test
push
cmpsb
jo
test
test
lea
dec
int
incl
inc
test
fnop
inc
dec
sarl
adc
fdivr
add
push
cmp
clc
jb
mov
out
pop
pop
clc
jg
mov
xor
andb
insl
pushf
imulb
push
push
inc
sub
push
mov
rolb
rorb
scas
xchg
lea
cmp
jb
inc
sar
adc
test
jle
sahf
cli
adc
sti
sub
imul
add
in
fwait
or
call
arpl
clc
sub
or
jmp
mov
inc
sub
jbe
adc
sub
jmp
add
pop
out
add
pop
and
pushf
outsb
mov
xchg
push
jle
cs
stos
dec
cli
or
sub
sub
loopne
add
push
mov
push
out
jle
movsb
outsl
mov
or
repz
and
pop
imulb
mov
push
add
notl
add
add
enter
dec
mov
loopne
icebp
mov
out
sub
and
andb
pop
xor
scas
or
add
sbb
or
out
mov
nop
pushf
mov
sbb
jge
out
fistpll
mov
mov
ret
mov
xchg
lock
push
sbb
adc
add
popa
push
mov
push
mov
or
lea
cltd
push
jp
std
insb
push
fs
adc
xchg
fdivr
inc
push
inc
popa
out
fcoml
in
or
adc
lock
aam
xchg
frstor
jo
xor
adc
xchg
xor
push
out
push
pusha
outsl
or
mov
pop
adc
add
add
cmc
sub
ret
add
cmp
push
add
sub
add
mov
mov
sub
imulb
out
inc
ret
xor
push
lods
fdivl
push
sub
repz
or
push
adc
test
push
or
lock
add
out
aad
sbb
push
mov
mov
sub
cmp
jl
test
xchg
loop
lcall
sbb
adc
xchg
xorb
adc
push
pop
push
je
lret
xchg
mov
dec
add
testl
mov
jnp
sbb
xor
dec
add
xor
sbb
cwtl
mov
std
arpl
pop
push
call
push
nop
fmuls
push
push
loop
in
push
dec
ja
sahf
xchg
sbb
sub
adc
add
push
push
mov
sbb
pop
pusha
pop
adc
scas
lret
add
inc
cld
xor
mul
jns
imul
cltd
inc
sbb
lea
dec
and
dec
add
fnsave
rolb
orb
push
push
mov
mov
pusha
mov
xor
xchg
or
or
outsl
pop
ljmp
adc
add
push
jp
shlb
and
fwait
sbbb
lea
push
pop
push
roll
in
pop
push
es
dec
cmp
pop
and
xor
clc
orl
jno
fisttpll
push
pop
ffreep
sub
xor
sti
or
or
adc
push
jecxz
aam
push
push
push
arpl
dec
inc
pop
xor
clc
xor
push
sbb
mov
and
lcall
pop
xorl
int3
clc
in
and
xor
cmp
addb
ret
mov
xor
jle
lock
adcb
jp
mov
lock
adc
test
adc
mov
popa
push
stos
or
cmc
into
imul
pop
fnstenv
je
inc
jnp
cmp
jae
mov
xchg
mov
sahf
popf
inc
pop
loopne
sbb
popf
add
mov
pop
lea
mov
push
mov
mov
shl
or
adc
pop
and
xor
cmp
lock
dec
or
cmp
sub
sub
mov
xor
dec
movsl
push
cmp
and
add
test
inc
add
inc
lea
dec
ret
cmp
ret
flds
ret
dec
imul
rorl
cld
ret
pop
add
xor
lock
add
movaps
notb
jns
sub
ljmp
lea
jne
push
push
push
adc
jl
push
inc
mov
mov
fcoms
inc
add
rcrl
xchg
push
sub
add
pusha
cmp
lods
mov
les
clc
dec
sbb
pop
in
call
mov
loope
jo
xlat
testl
xchg
sub
mov
decl
sbb
xchg
dec
loope
fdivr
jl
sahf
sbb
nop
leave
mov
test
xchg
adc
xchg
cmp
mov
cltd
sub
add
xor
ret
cmp
cmp
call
xchg
push
enter
sahf
insb
inc
push
dec
xor
pop
push
dec
adc
xor
loopne
addb
mov
add
mov
jne
sahf
lcall
or
ret
xor
enter
ret
int3
ret
or
mov
test
lcall
or
movsl
mov
popf
movsb
push
push
sub
xor
dec
aaa
or
rcr
pop
sub
in
mov
fistpll
mov
add
jecxz
add
or
in
daa
inc
inc
sub
sbb
push
dec
loopne
adc
hlt
hlt
sbb
fsubrl
mov
hlt
jle
fcoml
push
inc
les
cld
jg
mov
hlt
inc
js
mov
test
shll
or
mov
jb
cwtl
jmp
ret
mov
movsl
xor
xor
es
sbb
dec
leave
lret
mov
outsb
pop
mov
add
sub
jbe
cmp
fwait
sub
push
pop
push
sub
inc
cmp
sub
cmp
xchg
and
sub
inc
xchg
xor
push
popa
sub
lds
and
mov
insl
hlt
int3
mov
sub
add
add
jmp
stos
push
insl
insb
add
jl
movsb
cmp
inc
xchg
push
mov
push
aas
xorl
testl
mov
dec
pop
fcmovu
push
jp
repnz
jge
es
dec
add
sti
jle
mov
call
mov
test
stos
sbb
iret
push
bnd
add
add
es
and
add
mov
xor
mov
dec
dec
cmp
dec
rorb
pop
dec
les
and
sub
xor
jbe
frstor
aas
mov
or
imul
daa
fsubrs
mov
pop
shrb
ret
test
push
push
xchg
imul
popa
jge
insb
push
mov
dec
lret
mov
sub
push
subl
add
jg
lods
or
mov
sbb
gs
pop
mov
lods
push
inc
insb
cli
lret
push
je
add
dec
leave
push
xlat
addl
dec
adc
push
or
sbb
nop
xchg
xchg
cs
jo
pop
cld
push
push
pop
loopne
push
mov
incl
mov
inc
pop
enter
xor
mov
loopne
mov
jo
loopne
dec
mov
xchg
outsl
xor
or
sub
or
rclb
mov
dec
insb
mov
cltd
les
inc
jmp
dec
call
cld
mov
pop
or
movd
xor
js
xchg
push
adc
je
pop
rclb
jl
sbb
xor
pop
xchg
mov
jne
xor
or
dec
or
mov
xchg
xchg
in
or
lret
and
mov
mov
add
fiaddl
out
fdivrs
jne
push
loopne
mov
lcall
sub
and
lret
cmp
xorb
sbb
push
sub
ja
imul
repnz
inc
nop
adc
sub
out
xor
or
and
js
loopne
inc
add
pop
inc
jle
adc
hlt
add
or
nop
jmp
clc
add
test
pop
inc
mov
push
addr16
or
int
push
mov
test
dec
mov
pop
test
mov
xor
std
ret
xor
jle
mov
xor
cmp
xchg
andl
pop
cs
jmp
adc
jo
dec
lods
mov
push
imul
mov
int
mov
inc
jl
sub
sbb
cmp
push
add
dec
mov
mov
dec
mov
xchg
jge
push
add
jecxz
rcr
cmp
movl
dec
add
movl
push
jns
dec
adc
rorl
lcall
cmp
test
cmp
lahf
or
cmp
sbb
xor
jne
in
adc
mov
lret
and
fstpl
pop
ret
rolb
pusha
cmp
sub
insb
adc
lea
cmp
mov
loopne
dec
xor
fs
out
pop
and
mov
je
lret
out
mov
dec
push
cmc
mov
out
mov
rorl
cmp
push
cmpsb
sbb
sti
sbb
xor
pop
test
scas
jne
mull
add
push
cli
hlt
jae
lea
clc
gs
push
mov
mov
rorb
push
mov
pusha
mov
lret
sbb
cmp
and
stos
or
cltd
inc
or
and
ret
inc
aad
fisttpl
push
xor
and
test
inc
hlt
push
or
xchg
pushf
and
cmc
sub
nop
or
sub
xchg
daa
inc
cmpsl
outsl
xor
jle
insb
sub
mov
sbb
jmp
or
pop
frstor
or
and
sub
ss
adc
ret
es
mov
add
aad
jge
das
test
into
push
add
dec
cmp
clc
filds
test
fadds
outsb
sbb
xorl
xor
insb
xor
je
stc
inc
push
or
xorl
sbb
sub
test
and
fldt
mov
sub
mov
lods
mov
jb,pn
mov
jge
inc
das
in
xor
adc
sub
fsubrl
xchg
psraw
jb
cld
push
xor
xor
cmp
mov
js
leave
lret
mov
pusha
inc
push
mov
pusha
xchg
dec
push
outsl
ds
or
or
in
mov
jns
add
inc
push
sbb
mov
dec
dec
push
loop
xor
orb
dec
jmp
xor
mov
mov
pop
and
xor
mov
push
div
mov
pop
incl
push
push
cltd
mov
push
push
push
push
pusha
mov
sbb
pop
mov
mov
cmp
aaa
ret
inc
xor
flds
cld
dec
sbb
jo
add
xor
pop
push
cmp
aaa
arpl
mov
sub
pop
jg
xchg
dec
mov
sbb
loopne
adcb
mov
or
lds
jno
dec
pop
push
and
cmp
mov
add
outsb
sbb
lea
test
out
in
mov
xor
mov
push
mov
add
aam
push
add
cmpl
adc
gs
ret
mov
pop
xor
adc
xchg
inc
cmp
mov
xor
pusha
outsb
popa
xor
sbbl
or
lods
jecxz
nop
cmp
mov
push
lret
ds
pop
adc
lret
fildl
pop
sub
push
test
adc
add
mov
inc
fadds
push
jns
les
pushl
xor
dec
cmp
test
fdivrs
mov
push
inc
mov
pusha
sbb
clc
sbb
out
dec
cmpl
fwait
xor
je
pushf
push
push
push
mov
mov
jae
call
add
mov
inc
shrl
inc
outsb
mov
setb
insb
jne
leave
and
ja
mov
stos
arpl
adc
xor
or
sbb
ret
and
push
jl
ret
adc
mov
ja
jnp
lods
inc
inc
mov
jecxz
push
inc
sub
jae
adc
pop
xchg
mov
add
xor
xor
test
pop
and
mov
xchg
add
add
add
jge
mov
cltd
sub
lock
adc
mov
or
sub
aaa
lock
lret
xchg
add
sbb
int
das
ret
fsubs
test
cmp
sub
mov
insl
sbb
and
cwtl
or
add
test
sti
popa
adc
pop
outsl
xlat
add
push
addb
cli
push
test
pop
pop
add
out
push
aas
add
pop
jnp
sbb
push
mov
inc
fcomps
sub
cmp
mov
and
cmp
or
daa
sub
inc
popf
mov
xor
das
jmp
xchg
es
in
mov
jmp
cmp
push
push
or
pushf
scas
and
aas
in
ret
pusha
into
push
inc
aas
pop
sbb
xchg
loopne
bound
push
fs
or
adc
fcomps
mov
and
sbb
pop
test
pop
stc
xor
cmp
mov
xchg
push
push
pop
test
inc
push
xchg
jp
mov
fistpll
popf
in
lock
push
sub
js
ret
ret
aam
dec
and
les
or
les
xchg
cli
cmp
pop
sbb
jmp
mov
sub
push
in
jns
xchg
sbb
bsf
xor
or
gs
push
pop
loop
mov
jo
or
and
pop
sbb
adc
push
pop
add
mov
push
int
pop
hlt
sbb
pop
dec
mov
sbb
adc
sub
rol
xchg
imul
cmpsl
mov
adc
test
inc
mov
aad
and
arpl
and
pop
pop
or
adc
daa
or
jl
jg
popf
mov
dec
add
movsl
lock
fsubrs
xor
mov
xchg
cmpsl
dec
repz
scas
lcall
mov
inc
stc
ret
push
cmp
nop
push
and
fsubs
xchg
fwait
adc
hlt
mov
push
loopew
push
or
inc
pop
sub
add
push
cs
sbb
lock
nop
adc
pop
clc
fildl
add
add
movsl
pop
leave
jnp
xchg
xchg
pop
repz
orl
or
adc
lock
ret
in
pop
leave
mov
testl
testb
add
pop
lcall
jl
test
or
sarb
aaa
mov
fnstcw
xlat
jmp
lea
push
push
mov
push
lea
push
pop
or
jo
insb
or
xchg
cmpb
je
faddl
and
call
movsb
cmp
sbb
clc
movsb
add
or
dec
fadd
lods
pop
andb
add
sub
pop
mov
and
push
enter
sbb
add
pop
das
adc
dec
cmpsb
popa
pusha
inc
mov
and
or
add
cld
adc
sub
xchg
mov
sbb
arpl
push
xchg
mov
push
sbb
in
ret
daa
enter
inc
xchg
or
push
andl
ret
cmpb
pop
push
fbld
popa
sbb
in
or
shlb
lea
sub
inc
adc
ljmp
push
int
rol
mov
add
mov
xor
mov
dec
in
and
inc
or
sub
sbb
xchg
push
popa
jbe
cmpsl
pop
imul
lods
lods
xor
leave
je
rcrb
inc
rorl
cmp
roll
aas
in
inc
cmpsb
xor
add
inc
cmp
or
xor
nop
push
nop
pop
dec
jnp
test
and
inc
push
cmp
jb
sub
xor
cmp
aas
cmp
pop
inc
mov
inc
adc
or
jp
cmp
lds
lahf
sub
sbb
lock
mov
shl
ss
int3
clc
aad
add
push
dec
and
add
jg
shr
movzbl
ss
adc
inc
jp
mov
push
rcll
push
jno
sbb
cmp
movsb
cwtl
movb
aas
insb
add
jne
lds
cmp
pop
ja
pop
push
cmp
sbb
add
cmp
les
movb
pop
in
dec
adc
pop
push
movb
push
sahf
cmpl
sub
int3
mov
pop
sub
icebp
es
lahf
xchg
jge
mov
sub
dec
test
fwait
mov
stc
mov
xorb
pop
and
insl
mov
xchg
fs
push
add
mov
jb
sbb
sbb
call
adc
jg
push
add
popa
and
mov
or
and
leave
daa
inc
sub
and
inc
dec
lods
and
jno
or
shl
sub
or
rclb
inc
mov
xchg
mov
push
push
cmp
sub
aaa
enter
jne
pop
add
sbb
add
inc
ret
popa
xor
out
mov
and
dec
lods
cltd
cmp
mov
push
mov
xlat
pop
dec
or
adc
push
divb
push
adc
or
push
fs
push
insb
jge
cmp
xchg
and
xorb
add
inc
xor
adc
ret
aaa
xchg
jne
add
jmp
daa
fisttps
clc
and
xchg
test
adc
xor
push
pop
call
lea
je
cld
je
pop
lods
jg
scas
mov
inc
add
add
mov
mov
cmpb
sub
mov
adc
aad
add
push
test
ret
aas
push
cmpsb
jnp
add
dec
push
stc
sub
mov
loop
cmp
out
xor
inc
cmp
and
xor
push
sub
rcr
daa
sbb
add
or
sbb
outsb
add
scas
clc
stos
add
fbld
or
xor
jns
push
jg
mov
in
ljmp
sbb
push
sub
cmpsb
cmp
into
mov
cli
jno
mov
jl
clc
xchg
daa
mov
inc
or
repz
push
add
ret
mov
popa
mov
fadds
push
sbb
jp
es
cs
push
add
xchg
mov
lock
dec
hlt
sub
pop
and
arpl
adc
adcb
jge
cltd
inc
push
ljmp
sub
lea
push
lea
push
inc
push
addl
leave
andl
fnstsw
dec
and
adc
cmp
mov
xor
iret
cltd
and
xor
in
bound
cmp
ret
mov
scas
fcoml
inc
xchg
aam
cmp
mov
mov
add
jns
scas
jne
shlb
mov
push
adc
and
adc
mov
in
shrb
push
aaa
or
in
and
fs
sub
cld
test
cmc
call
and
or
dec
test
mov
xor
and
loope
btr
push
mov
loope
repz
add
add
or
stos
and
fidivrl
mov
add
mov
lods
stos
or
sbb
enter
mov
rorb
push
insb
push
bound
jae
jg
cmpb
jne
adc
or
xor
or
or
out
stos
jne
lods
sbb
adc
and
nop
jg
sbbb
addr16
in
call
in
inc
xor
sbb
or
mov
pop
pop
es
inc
int3
lret
xchg
adc
gs
sbb
push
pop
jo
mov
adc
cltd
call
push
add
and
push
lret
mov
mov
adc
sbbb
mov
add
sbb
movsl
sub
les
or
push
test
pop
inc
or
xor
and
pop
push
xchg
cmpsl
add
add
xchg
cmp
or
mov
xor
pop
loopne
push
sbb
pop
stc
mov
pop
test
ds
jmp
call
lcall
sti
mov
pop
fdivs
fstl
xor
mov
pop
jmp
int
inc
incb
into
movsl
addr16
inc
sahf
sbb
mov
push
push
xlat
and
xchg
scas
or
dec
add
lods
insb
test
add
mov
sbb
and
add
sbb
pop
pop
push
repnz
into
fnstenv
push
push
adc
xchg
or
pop
enter
stos
add
xchg
and
sub
push
or
insl
and
das
pop
ds
rolb
inc
push
push
jecxz
in
add
addb
shlb
cmp
mov
pop
xor
clc
movsl
push
das
and
mov
lret
and
xchg
dec
inc
es
iret
sub
and
xorl
sub
sbb
dec
xor
or
adc
js
add
nop
pop
sub
shlb
and
adc
lcall
test
mov
mov
dec
cmp
rclb
push
adc
add
test
jae
pop
sets
shrb
push
mov
or
inc
jecxz
das
mov
or
test
and
dec
dec
aaa
rclb
test
mov
jnp
movsb
rorl
xor
push
mov
pushl
push
or
or
nop
or
and
xorl
mov
xor
push
scas
pop
push
xor
pop
cmpsl
jmp
mov
insb
pop
or
or
adc
cmpl
add
push
push
sahf
lock
movsb
repnz
and
add
subl
xchg
mov
mov
inc
pop
arpl
in
test
jb
or
mov
movsl
scas
cmp
loop
inc
fadds
mov
inc
aaa
hlt
and
or
push
fcomps
jno
or
shl
or
mov
loopne
je
mov
add
sbb
push
ds
fisubrs
pop
lret
push
mov
lea
sbb
pop
add
mov
fsubs
adc
fstl
ret
xor
xlat
dec
das
push
cmpb
outsl
mov
or
shrb
lcall
push
stos
negb
mov
mov
mov
or
sub
adc
punpckhwd
cmp
xchg
mov
push
mov
push
fdivrl
and
cli
xchg
das
mov
popa
loope
jmp
add
out
sbb
sbb
and
scas
nop
add
sbb
je
xor
sbb
xor
jb
sbb
insb
ret
and
push
xchg
push
adc
mov
pushf
ret
inc
into
gs
push
and
mov
and
sbb
leave
and
pop
jb
into
sbb
sbb
add
add
add
cmp
js
sub
movsl
pushf
test
cmc
dec
mov
lods
test
dec
cwtl
mov
adc
push
sti
push
sbb
pop
gs
xor
and
stos
mov
and
xor
dec
je
add
jmp
adc
adc
aaa
pusha
cltd
scas
xchg
test
inc
int3
adc
inc
in
adc
in
enter
aam
add
cld
lret
aad
call
js
mov
xchg
or
xorl
inc
dec
dec
mov
sbb
pop
mov
jb
incb
jne
adc
pop
ss
push
jle
xchg
dec
push
adc
cmp
and
ljmp
in
in
push
rclb
add
add
xor
add
sti
or
sub
add
adc
add
sbb
push
mov
lahf
mov
and
xor
or
sbb
fsts
sub
xor
jecxz
loope
js
lock
and
or
notl
adc
in
push
push
jns
sbb
jge
push
inc
fimuls
adc
xor
sub
add
mov
add
test
inc
ret
rolb
xchg
mov
add
aam
lcall
pop
cmpl
add
iret
cmp
lods
sbb
xorl
loopne
mov
aaa
adc
mov
insb
lcall
lock
jo
pop
add
shlb
je
inc
call
dec
andb
jno
mov
and
mulb
or
add
push
adc
and
inc
clc
add
pop
adcl
aam
pusha
and
insl
andps
or
inc
inc
leave
push
push
inc
fcoms
sti
push
fsubr
push
lods
jae
dec
insl
sub
or
push
ficompl
outsl
leave
loopne
pop
xchg
lea
mov
sub
push
mov
xchg
loopne
pushf
aam
imul
inc
ret
fldpi
adc
sub
int
sbb
ret
bound
aad
or
or
adc
call
int3
mov
pop
mov
add
sbbb
sbb
mov
addb
inc
mov
pop
enter
push
push
push
lea
add
pop
cli
xchg
sbb
pop
mov
jb
dec
fsts
ret
push
mov
pop
push
sbbb
push
cmp
and
push
add
cltd
mov
pushf
les
lret
dec
adc
adc
xor
cs
sub
les
add
and
pop
lods
lcall
inc
jnp
not
xor
inc
or
call
xchg
push
jno
arpl
mov
sub
mov
and
imul
repz
cwtl
adc
mov
mov
mov
loopne
lods
clc
addps
push
push
test
nop
loopne
add
aaa
scas
pop
xor
pop
mov
xchg
jge
loope
add
lea
cmp
jne
cmp
mov
xor
sbb
xor
xor
lahf
lahf
test
aas
dec
addl
mov
into
push
push
jmp
and
fcomps
inc
std
ret
push
scas
dec
lods
adc
mov
fmull
jl
push
mov
xor
fwait
lret
adc
push
out
xor
mov
xchg
mov
aaa
sbb
mov
add
inc
std
cmp
je
inc
add
cmp
jl
jmp
jge
cmpb
mov
hlt
pushf
mov
les
sbb
jbe
inc
pop
sbb
jp
dec
and
add
xor
mov
cs
or
mulb
addb
addb
push
sbb
ja
add
add
pop
cltd
push
cmp
push
rorb
xchg
xchg
mov
mov
mov
push
fs
aam
adc
xor
dec
or
pop
cmpsb
xchg
push
in
push
sbb
and
in
jle
lea
std
lock
add
mov
clc
mov
jl
mov
sub
cmp
sub
mov
or
fs
mov
aaa
add
adc
inc
repnz
sbb
lcall
cmp
pushl
adc
in
or
adc
and
add
add
addb
sbb
adc
xor
mov
mov
in
push
dec
int
in
je
jae
pop
rclb
push
mov
and
mov
idivl
fnsave
loope
push
mov
inc
push
and
pop
mov
dec
inc
dec
pop
add
mov
adc
and
mov
gs
jle
out
or
sub
adc
and
popa
inc
add
cmp
out
sbb
inc
add
add
nop
push
or
scas
pop
jp
add
movsl
xor
jns
inc
mov
push
adc
outsb
dec
stos
inc
mov
addl
xchg
testb
or
inc
arpl
or
ficomps
ss
and
inc
push
pusha
pushf
jo
cmp
dec
cmp
rolb
jnp
daa
shll
adc
and
jp
pop
and
hlt
pop
stc
and
add
imul
fsubs
jns
push
cli
test
or
stos
push
shlb
cs
sub
das
mov
add
inc
clc
mov
in
lahf
push
pop
inc
xor
or
ljmp
push
xor
cmp
nop
or
mov
xchg
and
dec
sahf
cs
add
pop
shlb
movsb
hlt
cmp
xor
ret
pop
or
and
push
push
cmpsl
xchg
adcb
imul
pop
pop
fldl
xchg
mov
sbb
or
mov
dec
inc
jnp
mov
sub
xchg
enter
and
outsb
adc
mov
shll
cmp
or
rcr
cmpsb
int
jne
cmp
jb
sbb
add
cmp
jns
sti
jae
mov
lods
mov
jmp
xor
mov
fistps
xor
ja
push
push
push
inc
or
mov
decl
sbb
mov
fnstsw
std
lods
call
mov
add
inc
inc
or
in
cmp
sarb
and
jle
aad
call
outsb
or
inc
pop
cmp
jl
pop
std
xor
adc
xor
or
sbbb
lea
lock
outsb
jl
jl
daa
pop
sub
inc
push
movb
push
enter
mov
leave
pop
mov
push
and
and
sub
inc
xor
mov
mov
jl
clc
pop
out
inc
add
int3
cmpb
mov
mov
xchg
mov
pop
inc
ret
sarb
sub
mov
lods
test
pop
xor
sbb
sbb
xor
int3
add
push
adc
insb
inc
outsb
add
cmpsl
cmp
or
pop
push
add
cmp
push
das
loope
fwait
inc
xchg
das
add
shll
inc
add
cmpl
outsl
sub
jb
or
add
inc
jg
sbb
jle
inc
inc
pop
and
xchg
enter
mov
out
jo
or
out
xor
cmp
mov
lock
dec
pop
fldl
push
pop
cmp
outsb
bound
adc
pusha
dec
out
push
or
shrb
cwtl
lahf
dec
add
call
hlt
push
in
dec
push
add
or
stos
add
or
mov
aas
xchg
mov
adc
mov
dec
cs
jge
jns
in
jl
sbb
andps
add
cltd
add
adc
sub
sub
push
dec
push
cmp
test
add
and
and
movhps
lods
push
jmp
movsb
leave
subl
lahf
pop
push
mov
jbe
cmp
mov
mov
xlat
push
jle
jecxz
shrb
or
add
rorl
mov
jb
inc
lock
sbb
js
data16
jge
repz
lods
sbb
popa
es
mov
inc
popa
out
mov
enter
push
lods
mov
cs
xor
add
loopne
pushf
or
adc
push
enter
push
pusha
or
cmp
xchg
nop
mov
mov
inc
sub
jg
icebp
imul
sub
adc
mov
xlat
mul
cmp
imul
adc
test
mov
mov
test
sub
push
mov
in
jge
xor
addr16
hlt
pop
sub
sbb
mov
mov
xorl
dec
mov
xchg
dec
cmp
inc
push
mov
cmp
dec
sahf
stos
in
adc
jne
mov
pushl
fistl
or
test
js
std
cmp
les
lea
xor
mov
mov
ss
add
dec
or
test
pusha
imul
repnz
cmp
and
repnz
and
sbb
cmp
inc
xchg
inc
cmp
and
push
xor
push
mov
sub
cwtl
fbld
out
test
enter
push
push
inc
or
addl
addb
inc
daa
or
pop
push
xor
add
or
xchg
adc
sbb
and
and
sbb
pop
sub
push
nop
lret
or
xor
or
xchg
add
inc
dec
add
inc
sub
dec
pcmpgtb
jl
fwait
push
insb
push
jo
add
insb
lea
jg
adc
push
xchg
dec
mov
mov
xchg
xor
inc
enter
rcl
mov
mov
add
mov
mov
cwtl
xchg
mov
fsubrs
loop
sub
pop
push
inc
pusha
add
cli
ficomps
pop
mov
sbb
or
jg
jbe
adc
outsl
inc
xchg
cmp
shlb
nop
mov
jge
lds
and
sbb
cmp
xchg
int
sbb
out
imul
adc
out
les
or
xchg
insb
pcmpeqw
dec
lcall
lcall
inc
mov
cmp
sbb
or
or
dec
lcall
mov
lcall
sbb
adc
sbb
add
add
dec
lcall
adcb
push
adc
xchg
pop
dec
xchg
pop
mov
adc
xchg
dec
clc
add
lods
pop
mov
pop
xor
inc
pop
adc
rorb
or
incl
cld
icebp
mov
ror
add
sub
mov
inc
pusha
push
movsb
sbb
test
mov
sbb
arpl
or
dec
push
insb
mov
push
pop
adcb
stos
sbb
dec
cs
inc
mov
out
mov
pop
xor
dec
mov
inc
sub
or
inc
push
loopne
sbb
fwait
add
dec
add
dec
or
sub
xchg
xor
add
adcb
mov
int
pop
add
push
je
xor
xor
or
add
push
outsl
jbe
dec
and
xor
or
mov
push
xchg
mov
and
sub
and
push
gs
mov
or
xor
or
adc
lea
sub
sub
dec
sub
push
and
or
inc
adc
sbb
test
and
and
push
cmp
dec
pop
mov
shlb
pop
int3
or
decb
bound
or
push
cmp
mov
jle
dec
push
push
sbb
test
pop
or
stos
aaa
jns
xchg
cmp
jne
enter
pop
and
add
and
add
mov
or
scas
fstl
sub
jne
inc
and
and
mov
rorl
rolb
sub
inc
push
popa
loop
adc
nop
add
push
aam
or
push
hlt
or
dec
sahf
or
adc
lods
push
imul
sbb
aas
or
cmp
test
and
sbb
jns
leave
adc
jo
loopne
sbb
adc
inc
and
dec
mov
add
push
shll
mov
push
mov
out
stos
push
or
std
mov
pop
dec
mov
push
stos
adc
push
xor
jb
add
sub
mov
adcb
or
fs
dec
pusha
and
mov
je
push
adc
and
and
or
aaa
jnp
xor
lock
mov
je
test
mov
xchg
adc
hlt
sbb
inc
lods
nop
int
loope
andb
sbb
push
movsl
stos
sub
jecxz
test
daa
mov
add
push
sbb
push
xor
mov
push
mov
jno
lods
rolb
sbb
pop
mov
shll
out
pop
je
mov
cmp
orl
pusha
rolb
js
xor
dec
xchg
out
adc
mov
pop
jb
jno
adc
pushf
sarl
subl
test
jge
add
mov
mov
xchg
aas
push
iret
rcrl
push
mov
add
bound
in
rclb
inc
inc
sbb
cmp
push
xchg
movsl
jmp
jns
scas
cld
dec
fcoml
loop
sub
dec
and
call
fwait
testl
add
jl
pop
in
push
xchg
cmp
je
out
pop
mov
sub
push
pop
in
sarl
mov
cmp
inc
lea
mov
andb
pop
or
into
cltd
mov
push
sbb
lods
cmp
psubsb
adc
add
xor
sbb
sub
dec
or
pop
dec
fadds
jg
pop
rorl
lods
mov
add
popa
push
lahf
adc
int
imul
jne
push
cmpb
repnz
xchg
mov
bound
jmp
adc
lret
shl
lods
xorl
jo
push
call
cmp
jl
adc
adc
repnz
andl
inc
pop
mov
mov
and
push
push
sub
inc
add
jle
cmp
call
aad
cmp
jae
push
and
add
jmp
mov
adc
push
fs
test
shl
in
loop
cmp
sub
push
cwtl
add
sub
add
sbb
xchg
out
inc
push
push
mov
cmpsl
add
iret
inc
imul
jmp
add
adc
add
daa
mov
scas
push
push
dec
js
pop
or
and
inc
jo
daa
or
sub
xchg
inc
or
pop
jl
fldl
test
rol
xor
or
cmp
push
dec
loopne
add
xchg
sbb
jmp
and
sbb
pusha
dec
sub
adc
adc
push
andl
mov
add
adc
xor
dec
inc
sub
ret
adc
cmpsl
add
fs
or
mov
xor
inc
mov
cmc
add
std
jmp
ds
sbb
cmp
xor
add
adcb
cmp
xlat
outsb
adc
lock
jb
movb
jae
jp
push
cmp
sub
xchg
sbb
dec
push
dec
adc
pop
adc
sbb
xchg
pop
push
pop
xor
into
cs
leave
pop
daa
ret
sbbb
ret
pop
fisubs
ds
inc
and
mov
lcall
cltd
and
inc
and
xor
jl
cld
xor
lea
push
sub
and
xchg
xor
and
inc
loop
adc
mov
cmp
ljmp
dec
incb
cmp
adc
jne
and
sti
xor
dec
or
dec
adc
pop
aam
loope
icebp
mov
enter
cmp
push
dec
dec
add
and
adc
xchg
adc
das
sub
push
mov
imul
adc
cmp
push
add
dec
or
mov
add
jge
cmp
jl
mov
inc
arpl
adc
cmpsl
hlt
stc
xor
sbb
test
add
stc
sbb
pop
loope,pn
push
jmp
push
sbb
sub
dec
pop
dec
push
leave
addl
aad
add
mov
arpl
mov
jb
xchg
pusha
jo
or
adc
clc
sti
push
test
jle
push
push
mov
pop
sbb
xor
jmp
sbb
push
cs
inc
js
mov
inc
mov
cmp
lods
mov
out
jle
stos
clc
fidivrs
pop
ret
dec
jge
cmp
ret
or
icebp
xchg
adc
cwtl
sub
xor
xor
xor
sub
lods
xor
dec
lcall
cmp
sbb
add
mov
and
les
insb
mov
lea
int
into
add
sbb
movsl
and
push
inc
hlt
cli
inc
push
jnp
mov
mov
push
and
fsub
and
jmp
jg
add
add
dec
jbe
fdivl
fisttps
adc
sbb
inc
icebp
sbb
push
lea
cs
js
loopne
add
xor
es
adc
fwait
add
test
add
mov
sub
mov
in
les
dec
and
adc
pop
jae
scas
loopne
or
push
dec
ret
push
add
mov
jmp
mov
rolb
loop
jg
dec
adc
mov
add
in
push
mov
fstps
orb
lahf
data16
rcll
push
hlt
pop
leave
add
cmpsl
aad
fs
sbb
dec
jne
sub
ret
flds
push
mov
sti
popf
push
add
cmp
test
or
negl
inc
sub
xor
sbb
adc
sbb
pop
rolb
scas
adc
mov
pop
mov
push
les
fwait
dec
xor
xor
pushl
mov
cli
and
cmp
add
sub
xlat
pushl
push
xor
stc
cld
push
inc
imul
push
push
test
cmp
imul
enter
cmp
stos
fisubrs
mov
je
or
mov
cli
movsb
nop
or
cld
nop
xchg
cmp
inc
dec
sbb
or
test
cli
and
or
clc
add
jmp
dec
add
int3
add
mov
out
shr
or
decl
orl
rorl
mov
das
pushf
jo
sub
sub
pop
fmuls
adc
mov
sbb
inc
jecxz
pop
ss
dec
and
cmp
ss
pop
dec
leave
lret
jns
add
aad
loop
addr16
shlb
and
or
std
icebp
adc
or
aas
push
xchg
sbb
inc
cs
pop
addl
push
pop
push
or
loope
dec
push
ficomps
movsb
sub
inc
or
cld
inc
sub
push
inc
sbb
pop
dec
or
adcl
pushf
or
or
js
push
ret
dec
mov
mov
push
cs
and
jg
adc
inc
pop
pop
scas
dec
movsl
add
adc
data16
nop
xchg
add
add
adc
ljmp
aas
aad
aad
scas
aad
out
iret
lds
xlat
pop
inc
div
adc
push
xchg
jo
sub
testb
movsl
sbb
cmc
pop
inc
and
cmp
push
xor
xchg
push
push
nop
adc
mov
nop
mov
mov
shlb
xor
mov
dec
nop
push
adc
pop
mov
add
ror
pop
stos
mov
sbb
xor
add
xor
ror
cli
adc
inc
daa
jne
andl
or
adc
lds
push
push
aaa
pop
sbb
shll
mov
or
add
add
add
inc
cmp
hlt
bound
mov
and
dec
inc
test
stc
mov
mov
jne
testl
icebp
insb
inc
or
adc
jne
mov
pop
fcmovnb
mov
in
call
add
adc
add
sbb
inc
xor
mov
and
or
push
out
add
fs
arpl
mov
add
decb
lds
movsl
outsb
sub
or
or
mov
rol
inc
inc
lock
dec
adc
inc
add
repz
pop
jle
push
adc
jns
pop
movsb
fs
push
pop
or
pop
dec
or
push
cmc
pop
push
and
pop
push
jge
ret
xor
push
lret
int
add
insl
cmp
xorb
xorl
in
xor
mov
scas
iret
inc
dec
push
jb
dec
pop
sbb
pop
ljmp
push
aam
add
stos
jmp
adc
mov
fdivl
push
loopne
sbb
jno
lds
fldt
aam
and
nop
mov
dec
enter
push
push
sbb
lods
xor
aam
adc
fwait
test
add
nop
negl
sub
cmp
adc
add
fisttps
pop
jmp
and
icebp
push
pop
sarl
add
add
inc
xchg
enter
push
xchg
or
mov
movzbl
fcmovnbe
pop
mov
or
inc
dec
sbb
sub
inc
push
rcrl
dec
push
aad
push
sbbl
cmp
xor
push
sbbb
bnd
dec
or
push
xchg
test
or
je
nop
out
cli
push
sub
movb
or
or
ficomps
or
ss
and
jle
je
hlt
push
or
pop
mov
add
movsb
int3
dec
adc
inc
pop
push
mov
inc
les
aaa
nop
pop
mov
pop
popa
push
fistpll
xchg
or
dec
cmp
push
pusha
lock
fldt
pop
icebp
adc
and
inc
push
push
dec
ret
fidivs
mov
movsl
xlat
pop
cmp
xor
cmp
jge
leave
inc
and
test
push
inc
pop
mov
mov
mov
push
mov
pop
test
jae
jge
hlt
test
and
sub
orl
je
bound
cs
push
inc
add
rolb
mov
jmp
inc
push
adc
lahf
cli
pop
inc
test
lcall
int3
sub
rolb
mov
test
mov
jl
pop
fcoml
xchg
pop
js
adc
je
mov
jb
scas
fcomps
ret
imul
cmp
jae
pop
push
xchg
fldcw
fadd
sarb
sbb
and
lock
je
sbb
push
lods
shll
xchg
mov
pop
adc
and
ss
cmp
adcl
js
jl
dec
or
sbb
test
and
and
or
or
adc
add
mov
pop
aad
jecxz
loope
add
or
and
push
pop
adc
sub
sbb
sbb
movl
addb
sbb
mov
movsl
add
out
notb
add
jmp
cs
rorb
add
cmpl
adc
jmp
cltd
out
dec
adc
add
frstor
dec
add
gs
xor
jge
add
push
add
dec
and
aam
sbb
jo
jo
cmp
notl
cmc
xor
aad
jl
jl
test
push
arpl
inc
sbb
push
and
and
dec
stc
adc
inc
ret
decl
mov
inc
shrb
ja
lea
aam
push
sti
pop
dec
out
mov
movsl
lret
les
push
andb
push
adc
les
repnz
cmp
mov
pop
adc
roll
mov
mov
inc
push
lret
or
rcrb
dec
nop
sbb
and
aam
daa
ds
adc
pop
add
xchg
add
addr16
inc
dec
lahf
fsubr
mov
add
dec
cmp
jae
lds
pop
dec
and
push
aaa
sub
sbb
loopne
or
fwait
push
cmpsb
out
pop
and
cwtl
jns
mov
subb
jne
pop
js
es
push
or
pop
sub
repnz
lea
hlt
push
repnz
pop
adc
in
pop
add
lods
es
les
sub
imul
movsb
lret
pop
sbb
xchg
addr16
and
sub
xor
mov
jle
hlt
push
xor
das
xor
rcll
jge
add
add
inc
lods
bound
test
mov
adcl
sub
push
iret
mov
mov
or
jge
movzbl
or
iret
es
add
std
inc
inc
push
adc
js
dec
mov
and
bound
push
push
ds
insb
push
xor
xor
test
sub
push
loope
pop
aaa
cwtl
push
cmc
cmpsb
mov
test
test
sbb
fsubrs
and
je
push
loop
ret
aad
xor
rorl
sbb
cmp
imul
sub
lret
cmp
jbe
push
ds
jbe
cmp
pushf
clc
mov
testl
pop
mov
push
and
lods
push
sbb
or
call
mov
inc
or
inc
jbe
mov
sbb
sub
mov
or
add
or
lods
loopne
mov
sbb
fisttps
jno
ja
test
in
add
lcall
xchg
add
pop
jne
insl
adc
adc
sub
je
es
pop
test
add
xchg
pop
or
push
inc
mov
pop
jp
mov
loop
mov
jae
movsl
inc
adc
dec
pusha
pushl
add
pop
lock
add
cmp
jae
add
cmp
mov
sbb
adc
fcoml
cmp
sub
notb
pop
and
orb
addl
loopne
movl
pmaddwd
sbb
mov
cmp
adc
shll
inc
or
adc
or
or
aam
inc
xor
add
sub
sub
xor
roll
xor
dec
dec
aaa
xorb
arpl
add
pop
lea
push
ja
jnp
add
sub
pop
enter
in
or
jl
xchg
mov
xor
xlat
in
rcrb
xor
and
and
and
sbb
jg
lea
pop
inc
mov
xchg
dec
test
das
lea
shlb
jle
repnz
sub
sahf
test
aaa
pop
mov
pop
push
test
inc
dec
test
pop
pop
adc
nop
loop
lea
jecxz
sub
sbb
movsb
imul
ljmp
rorb
je
jo
and
push
pop
insb
cmp
push
dec
fs
ret
push
inc
and
dec
pop
add
in
dec
push
or
xchg
sub
aaa
mov
inc
and
pusha
adc
inc
or
ss
mov
repz
mov
cwtl
dec
pushf
or
leave
pop
in
inc
adc
push
push
or
mov
inc
cwtl
push
imul
xor
and
pushf
dec
and
imul
setge
int
sub
xchg
adc
mov
pop
repnz
inc
nop
jmp
mov
or
rorb
cmp
xor
cmp
aam
ds
push
mov
out
fwait
sub
adc
adc
jne
mov
mov
sbb
inc
inc
xor
push
outsl
jg
pop
nop
fwait
ret
out
inc
clc
rol
mov
cmp
ret
lahf
in
outsl
lock
xor
orl
lea
add
add
mov
xor
sti
jle
push
les
mov
pop
hlt
jl
imul
mov
outsb
aaa
and
pop
pop
lock
cltd
out
mulb
bswap
les
dec
loope
mov
dec
dec
mov
incl
dec
and
dec
orl
xchg
or
js
adc
sbb
fbstp
jne
adc
push
adc
mov
pop
cmp
add
mov
test
pcmpeqb
adc
pop
adc
push
mov
rcrb
test
xor
xor
fst
and
inc
inc
test
js
sbb
incl
pop
pop
dec
xor
lret
mov
xchg
ret
pop
and
add
cmp
pop
pop
cwtl
inc
lar
rcll
push
dec
fmull
mov
rcrl
cmpb
adc
or
cmp
in
mov
push
cmp
jg
and
xor
sub
je
push
jne
cmp
jecxz
lea
loopne
je
push
fbstp
ret
jno
test
adc
add
mov
jo
insb
sub
add
mov
cwtl
push
jo
xor
fnstsw
outsb
pop
mov
push
adc
rcrl
hlt
push
mov
and
mov
movsb
push
mov
mov
pop
sti
dec
cmp
xor
pusha
or
cmp
mov
lea
add
push
xor
jle
push
xor
or
xor
pop
lahf
fdivrl
popa
ss
mov
sbb
dec
sub
stos
or
jns
push
sarb
mov
fsubl
push
cmpsl
push
pushf
add
sub
fnsave
inc
cli
arpl
popw
mov
es
fdivrs
mov
lret
sbbb
add
and
repz
cs
movsb
push
mov
jmp
lea
gs
push
mov
inc
sahf
dec
push
sbb
and
aaa
push
scas
or
dec
fisttpl
cmp
inc
ss
jb
and
clc
cli
pusha
sbb
and
push
cltd
mov
into
dec
loop
push
adc
pushf
lahf
sbb
inc
mov
push
lds
das
lea
lret
and
xchg
lret
aam
add
mov
inc
mov
mov
xor
and
dec
ret
imul
push
js
mov
dec
xchg
push
sbb
movsb
ss
jne
dec
lret
call
cmpsl
decl
dec
sub
test
xchg
ret
mov
jne
rorl
repnz
xchg
push
aas
add
dec
insb
mov
and
pop
out
xor
stos
push
push
adc
xchg
pusha
imul
dec
jmp
cmp
outsl
fisubl
inc
or
mov
and
shrl
sub
in
sti
push
lea
jg
sbb
push
xchg
and
loopne
mov
lahf
nop
mov
xchg
cltd
out
lea
ss
nop
add
cmc
add
pop
sbb
mov
jmp
pop
xchg
inc
add
mov
sub
jo
mov
sbb
int3
pushl
dec
cmp
test
sbb
adc
ret
cmpsl
popa
icebp
add
jecxz
int
ret
dec
xor
call
and
sub
call
push
arpl
cmp
pop
push
sbb
sbb
pop
push
sbb
or
and
xchg
test
rcll
sti
inc
sbb
movsl
xor
iret
pop
jns
pop
push
push
adc
or
sbb
leave
and
sbb
xor
xchg
cmp
and
and
jb
icebp
mov
add
mov
push
rcrb
dec
push
std
and
push
les
mov
testb
sub
mov
push
je
cmpb
fdivrs
mov
insl
add
lcall
shr
add
lods
pop
and
add
es
or
pop
lahf
xor
inc
daa
add
test
scas
pop
sbbb
pop
add
add
je
pop
adc
in
mov
push
xchg
cmp
xchg
inc
dec
popa
aad
es
decl
xor
or
add
popa
xchg
or
xor
mov
into
or
aaa
mov
and
clc
mov
xor
push
jmp
sub
or
cmp
call
sub
dec
test
push
xchg
adc
push
sub
sub
or
je
daa
sub
stos
pop
and
push
fcoml
push
lret
enter
push
dec
push
cmp
dec
push
sub
fdivrl
sbb
fs
or
add
sub
and
sub
add
js
push
enter
jo
mov
add
mov
jne
mov
or
nop
push
inc
scas
pushf
gs
movsl
xor
inc
ljmp
and
movsl
or
or
and
xchg
add
mov
and
and
xor
pop
sbb
and
lods
pop
push
add
or
ds
push
insb
xor
iret
pop
lock
jl
push
push
test
stos
imul
push
adc
pop
outsb
sub
xchg
pop
push
adc
add
add
add
jmp
adc
dec
push
mov
sub
inc
bound
mov
fwait
movsl
clc
insl
jecxz
cs
mov
test
fidivrs
je
scas
cmpsb
lods
push
xor
fmuls
mov
mov
or
adc
and
jb
testl
daa
sub
adc
add
in
and
adc
sub
stos
inc
add
dec
add
in
push
add
sub
ret
sbb
les
xorb
dec
add
into
rcrl
insb
mov
inc
aam
orl
sbbl
jne
stos
add
pop
and
movb
dec
push
inc
pop
or
xchg
int3
hlt
mov
or
or
inc
mov
xchg
jp
inc
push
popa
dec
and
neg
xchg
or
or
adc
push
cmp
xor
subb
popa
xor
push
or
xor
jecxz
ljmp
inc
mov
and
xchg
or
or
xchg
cmpsl
mov
inc
inc
sbb
add
mov
adc
sti
jns
push
xor
cltd
adc
ret
ret
popf
ret
mov
mov
outsl
push
aas
dec
add
movl
pop
aaa
sbb
fistl
mov
inc
pop
pop
dec
push
adc
jp
or
push
jb
sbb
stos
xchg
mov
push
cmpsb
push
adc
adc
stos
and
push
mov
add
and
loopne
daa
xchg
pop
adcl
and
inc
sahf
adc
push
add
nop
xchg
or
push
pop
and
popl
push
aam
enter
sbb
shrb
aam
or
pop
or
inc
sub
cmpsb
mov
dec
iret
lods
inc
xchg
in
dec
add
inc
add
ud1
jne
and
jb
mov
jno
sbb
push
add
sbb
leave
ret
and
je
daa
cmp
les
test
add
pop
jge
std
and
xchg
sahf
sbbl
push
xor
inc
xor
mov
out
js
dec
and
adc
mov
add
xchg
inc
repnz
inc
pop
push
mov
aad
xchg
xchg
and
movsb
jne
or
loope
shll
mov
dec
pusha
and
int
xor
xor
mov
arpl
xchg
adc
sbb
je
ljmp
int3
ret
inc
insb
addr16
pop
movsl
xchg
adc
or
adcb
inc
cmpsb
adc
xchg
cmp
mov
daa
popf
out
sub
shll
and
pop
and
outsb
lret
popa
add
add
call
or
push
test
push
in
jecxz
dec
jmp
in
lcall
adc
pusha
and
xor
adc
jne
add
inc
push
call
mov
mov
movb
add
das
enter
call
and
call
cwtl
push
push
push
push
xchg
or
hlt
ljmp
add
sub
and
add
and
imul
sbb
roll
aam
fiaddl
mov
mov
je
mov
push
das
add
gs
add
shl
dec
push
add
dec
push
dec
push
pop
push
add
nop
rol
add
adc
add
ret
jl
je
jp
xchg
leave
lea
mov
addl
xor
mov
mov
xchg
and
test
aam
ret
mov
icebp
push
adcb
or
push
pusha
popa
lods
inc
dec
frstor
add
or
xchg
xchg
cmpsl
pop
xchg
int3
cltd
inc
in
xchg
sub
aam
xchg
inc
sbb
mov
insl
add
jno
add
flds
push
and
movsl
jl
lcall
and
sub
push
sbb
movsb
es
xor
sub
push
dec
sub
xor
mov
sbb
cmp
cmp
dec
pop
inc
jae
inc
pushf
or
cmp
add
je
dec
jp
or
or
daa
dec
fsubrs
outsl
adc
xchg
push
or
mov
lods
dec
mov
in
call
dec
jnp
or
stos
cmp
js
push
push
subl
pop
scas
call
enter
and
dec
or
iret
push
repnz
or
xor
fs
and
aam
shr
cltd
loopne
mov
xor
loop
add
test
or
aas
xchg
mov
rclb
pop
sub
adc
lods
mov
push
xchg
cmp
loop
push
aam
push
mov
sbb
dec
inc
outsb
imul
fcmovnb
xchg
dec
outsb
lods
pop
sbb
mov
jle
hlt
adcb
xor
orb
les
movsb
xchg
xchg
add
sahf
mov
push
mov
sbb
fcomp
pop
cmpsl
test
sbb
jb
shlb
lret
fs
outsb
out
mov
in
scas
rcrb
push
xchg
cmp
pop
cmp
test
jle
adc
jns
mov
in
add
xchg
sahf
or
int3
add
inc
es
add
cltd
daa
shrb
sahf
or
add
sub
in
mov
subl
and
addb
jo
dec
cs
lods
and
jae
jmp
dec
loope
dec
fnstcw
adc
mov
mov
test
cmp
inc
inc
pop
jne
sub
pushf
sbb
xchg
cs
or
dec
repnz
loope
xchg
addr16
lret
sub
leave
mov
nop
cs
jne
sub
add
xor
adc
rcl
jg
push
andb
rcrl
inc
xor
sub
or
or
imul
mov
fidivs
jbe
sub
add
xchg
xor
push
push
add
push
push
sub
inc
sbb
inc
das
cmp
sahf
xchg
out
sti
cmp
int3
loopne
inc
mov
push
push
push
push
js
or
rclb
mov
addr16
movsl
sub
hlt
sbb
dec
cld
pop
or
push
sub
add
mov
mov
sbb
pop
pusha
test
jns
and
and
add
or
push
popa
pop
push
aaa
dec
rcll
jp
ss
or
dec
dec
cwtl
out
lahf
inc
dec
and
cmp
mov
cmpb
cmp
sub
and
test
dec
cmp
and
mov
pop
jns
push
icebp
insl
sbb
jno
xor
ds
jne
sarl
mov
xor
inc
push
arpl
dec
leave
and
movsb
cld
cld
movb
cmp
out
add
call
mov
inc
roll
mov
stos
movsl
rorl
pop
xchg
lcall
adc
shlb
push
push
inc
adc
push
push
in
nop
sbb
add
pusha
push
cltd
push
mov
out
and
int
pop
arpl
cltd
add
inc
push
mov
in
inc
cwtl
es
sahf
or
pushf
ds
lcall
leave
jae
dec
cmp
cmp
sbb
mov
cmp
pusha
push
jne
cltd
fcomps
pop
repnz
inc
jcxz
push
lea
fwait
mov
xchg
in
addb
and
fistps
pop
lods
push
scas
popf
xchg
pop
mov
mov
or
pusha
jp
add
sbbb
push
lods
testb
jbe
push
mov
push
mov
push
or
xor
or
xchg
insb
das
sbb
fadd
pop
xchg
inc
pop
push
push
mov
js
dec
pusha
orb
leave
pop
sbbb
sbb
and
test
lods
pop
adc
xor
lcall
ja
adc
cmp
mov
test
iret
or
mov
push
insb
mov
or
sub
dec
xorl
cwtl
mov
push
cmpl
lock
dec
sbb
push
pop
orb
aas
ret
or
pop
pusha
push
or
insb
mov
and
in
mov
sbb
mov
lock
sub
insb
flds
dec
lds
punpckldq
lock
dec
cmpsb
shlb
xchg
sub
jns
addb
test
daa
add
adc
cld
mov
sub
or
and
icebp
mov
adc
add
and
add
add
loope
addr16
sqrtps
ret
loop
add
mov
sbb
outsl
pop
pop
or
cmp
daa
adc
push
pop
push
push
lock
aaa
mov
xchg
hlt
mov
punpckhbw
or
push
add
and
imul
jbe
cltd
push
mov
dec
xchg
sub
cmpsb
cmpsb
loopne
iret
dec
rolb
mov
ljmp
lds
movsb
shll
lds
out
push
les
mov
mov
lds
adc
push
jb
sbbb
pop
push
mov
in
add
dec
add
add
or
xchg
jp
push
push
inc
cs
sbb
jl
xchg
sub
add
or
fs
int3
mov
pushf
pop
sub
sub
sbb
pop
ds
mov
ud2
sub
repnz
into
insb
aam
movsl
sbb
jns
push
enter
pop
pop
sub
aad
mov
cltd
jge
cmp
xchg
fistpl
sbb
add
or
mov
xor
push
cmp
inc
mov
xor
add
js
mov
xchg
bound
mov
movsl
pop
sub
popa
rorl
fsubs
fcoml
pop
dec
sbb
adc
xchg
mov
adc
je,pt
ja
jo,pn
adc
insb
call
cmp
sub
and
inc
mov
test
and
adc
dec
orb
in
lret
mov
jno
cmp
push
dec
add
sarb
add
add
pop
adc
fwait
pop
jb
inc
mov
or
test
call
fiadds
inc
adc
pop
push
push
lods
cmp
scas
pop
mov
jmp
lret
jo
nop
inc
push
adcl
in
or
cld
xchg
aas
mov
scas
aaa
test
out
pop
fisubrl
cmp
jae
fidivl
mov
push
leave
xchg
sbb
and
mov
pop
movsl
pop
mov
movsb
bound
mov
push
pop
dec
cmp
sbb
sbb
in
test
jae
lcall
push
dec
pop
pop
cmc
inc
jns
add
cs
sub
add
dec
jno
sub
fst
lea
iret
pop
cmp
lea
lea
lds
sbb
push
pop
and
loope
loopne
xlat
xor
mov
cld
aaa
jo
mov
jle
jmp
lret
or
add
mov
jo
je
aaa
test
inc
adc
and
sub
mov
xchg
js
mov
xchg
adc
pop
or
mov
jb
mov
jmp
pusha
aaa
jne
adcb
or
test
xchg
add
movsb
sbb
sub
dec
aaa
cmpl
insl
sub
push
sub
lcall
subl
rol
and
sbb
xor
jae
xor
xchg
xchg
add
nop
add
and
addb
shlb
pop
add
inc
insl
aam
rcrb
and
lods
movsb
enter
loop
icebp
mov
inc
sbb
sti
bound
adc
xor
or
inc
jecxz
push
ss
jne
xor
jbe
push
pop
movsb
test
sbb
movsb
pop
jo
dec
das
sub
or
shll
cmp
lea
lea
and
push
push
adc
cmp
adc
test
movsl
cmp
lcall
inc
sar
cltd
pop
jnp
pusha
push
and
xor
mov
inc
and
add
pop
dec
sub
push
mov
rorb
nop
inc
adc
cmp
dec
and
mov
sbb
dec
adc
cmp
adc
in
xor
dec
adc
rclb
sub
or
push
sub
or
sub
adc
jno
add
adc
xchg
dec
dec
lcall
and
ds
add
xchg
mov
push
imul
push
add
add
or
adc
outsb
or
dec
mov
imul
mov
enter
or
cs
pop
testl
mov
out
or
jg
lret
cmp
jae
mov
xchg
dec
add
negl
aam
inc
cmp
jl
in
sbb
movups
push
and
cmp
xor
and
addb
push
mov
push
ret
xchg
add
adc
jle
bound
add
aas
sub
gs
lret
pusha
in
push
xchg
cltd
jle
inc
push
gs
hlt
imul
push
sarb
enter
jae
imul
std
pop
fsub
sub
ja
pop
sub
cmp
jb
insl
stc
or
aam
insb
xor
jg
inc
rcrb
adc
es
jmp
sub
addl
dec
lea
fildll
mov
and
jne
mov
add
add
pop
xchg
pop
fsubrl
push
popf
lods
jne
push
test
inc
cmpl
loopne
lea
adc
adc
add
cmp
xchg
push
nop
out
inc
inc
xor
ret
incl
lock
lods
imul
flds
and
dec
dec
fs
mov
cmpsl
mov
sub
mov
adc
pop
add
xor
dec
cltd
rcrb
gs
adc
push
xor
and
xorb
sub
dec
or
test
pop
jmp
pop
sub
or
sahf
mov
adc
cwtl
roll
test
js
and
lret
push
add
xchg
fsubrs
cmp
pop
aaa
add
add
sbb
sub
pop
sub
mov
pop
movsb
adc
lods
cmp
xlat
and
neg
sub
push
insb
sbb
out
loopne
mov
push
or
inc
out
sub
mov
es
pop
in
cmp
adc
jae
cmp
cmp
shrb
pusha
pushf
sbb
movsb
xor
lahf
clc
and
dec
or
test
movsl
movsb
pusha
jb
xor
stc
outsb
lds
test
dec
and
mov
mov
lea
lods
test
pop
inc
nop
pushw
adc
cmp
mov
sbb
jnp
rcr
mov
outsl
xchg
xor
mull
add
test
int3
add
jae
and
fdivl
jecxz
dec
cld
pop
xchg
sbb
xchg
test
jns
ljmp
mov
sub
addr16
and
es
mov
inc
cmp
push
mov
mov
push
loopne
sbb
dec
test
sarb
xchg
stos
dec
leave
dec
push
xchg
lods
notb
cmp
inc
sbb
rol
adc
mov
or
dec
lds
insb
movsb
mov
sbb
cmp
ret
decl
js
mov
and
outsl
or
movsb
xor
cmp
bound
test
leave
adc
dec
in
or
test
inc
add
in
ds
or
inc
or
enter
push
js
xchg
rclb
jl
or
pop
dec
pop
push
mov
push
je
inc
push
sub
add
add
xor
loop
sbb
sub
js
les
or
jo
jb
cmpsl
xchg
aas
add
mov
fdivrp
dec
outsl
push
jne
cmp
je
cmp
je
cmp
je
cmp
je
push
inc
xchg
xchg
stos
js
or
shll
mov
dec
hlt
jne
in
inc
outsb
push
push
adc
push
lret
rorb
jl
mov
cmpb
stos
xchg
icebp
mov
scas
sahf
push
ret
dec
fisttps
addr16
cmp
mov
xchg
punpckhbw
maxps
adc
mov
mov
cs
je
adc
xor
cmpsb
repz
aam
pusha
test
add
pusha
pusha
add
hlt
push
adc
test
stos
mov
mov
jno
add
xchg
or
lods
ja
imul
pop
test
andl
pop
pop
inc
dec
in
push
cmp
ja
jmp
mov
cmp
icebp
pusha
inc
xor
imul
mov
les
inc
sbb
aam
lret
sbb
sub
dec
es
aam
loopne
add
aam
in
inc
or
inc
mov
xchg
jle
and
sbb
push
cs
in
dec
xor
push
fwait
mov
clc
arpl
int
fcomps
pop
and
pop
dec
sbb
cmp
ds
cld
or
add
test
cmp
dec
push
nop
fsubrl
clc
jo
sbb
mov
xor
lods
pop
xor
sbb
jns
mov
xor
add
push
jo
and
and
and
and
lock
or
mov
orl
inc
loope
popf
gs
and
pop
cmp
and
push
push
dec
push
add
shlb
and
and
pusha
sbb
inc
sub
mov
xor
xor
mov
dec
ljmp
fstl
sbb
jmp
imul
and
xor
mov
loopne
es
add
jno
push
push
daa
dec
les
cmp
or
mov
and
adc
jl
add
bts
fcoms
or
pop
inc
or
pop
or
addl
fsub
xlat
push
xor
test
aas
bound
dec
adc
data16
adc
adc
imul
inc
mov
xchg
push
push
call
adc
shlb
enter
sbb
inc
mov
sbb
adc
aam
arpl
arpl
xchg
inc
aam
push
inc
rclb
inc
sub
jl
inc
or
dec
int
enter
cmp
aaa
xor
ret
mov
addb
aaa
mov
je
push
fisttpl
rorl
dec
cmp
jge
jne
ret
ds
xor
mov
repz
inc
setge
icebp
jg
cs
pop
hlt
ljmp
out
mov
mov
cltd
mov
call
mov
sti
je
mov
scas
mov
scas
jne
dec
fcomp
test
adc
jecxz
pop
ljmp
mov
xchg
ljmp
ficompl
inc
cld
jbe
je
fldcw
inc
and
pop
or
inc
cs
movsb
adc
xor
or
xor
pusha
movsl
dec
sti
mov
push
pushf
mov
adc
hlt
cmp
or
add
mov
pop
addl
lods
adc
push
inc
dec
call
add
imul
add
and
pop
pusha
dec
movb
jnp
cmp
je
pop
dec
or
or
je
sahf
inc
adc
jns
out
pusha
imul
incl
sub
mov
mov
dec
dec
cmp
push
mov
sbb
sbb
dec
mov
mov
or
or
mov
add
xchg
sub
inc
pop
pop
or
shrb
xchg
rorl
adc
pop
sub
adc
adc
lds
push
dec
stos
test
xorb
adc
fs
inc
sub
add
insb
or
cmp
pop
lea
inc
pop
je
dec
ss
cmp
jg
arpl
bound
adc
mov
mov
stos
or
pop
and
mov
aaa
shrb
pop
push
outsb
add
lods
int
mov
outsl
and
dec
cmpb
dec
xchg
and
lea
out
sub
cmp
sbb
cmpl
adc
push
or
in
test
les
lods
outsb
add
daa
fstps
sub
push
popa
add
push
pop
push
xor
add
cmp
sub
outsb
nop
sbb
subl
stc
call
fcoms
stc
push
outsb
insb
pushf
push
pusha
rolb
lds
test
xor
mov
lods
jnp
xchg
out
incl
cmp
jne
cmp
jne
int3
or
push
sbb
pop
pop
test
cmc
mov
mov
push
cmpb
clc
and
movsl
mov
lock
in
test
add
xor
xor
adc
andl
push
push
cmp
pop
lds
mov
adc
add
pop
dec
rol
or
cli
jle
xor
fs
fidivrl
loope
and
pop
enter
inc
cltd
sarl
jbe
push
addr16
test
pop
in
jno
jo
js
inc
scas
mov
adc
xchg
out
inc
rcl
and
movaps
mov
scas
mov
das
mov
add
enter
pop
push
cmpb
xor
mov
lock
adc
push
sbb
or
cmp
sbb
enter
pop
bound
loop
enter
pop
add
mov
inc
or
or
mov
xor
ss
ret
push
sbb
stos
lea
lods
push
mov
adc
sbb
daa
ss
icebp
push
push
push
test
out
out
movsb
adc
inc
adc
push
inc
add
fcmove
dec
sbb
inc
adc
mov
imul
sbb
and
addb
loopne
mov
lea
sub
pop
nop
test
dec
imul
dec
pushf
aaa
adc
inc
sbb
and
jo
add
lret
mov
cmp
inc
add
inc
rclb
shrb
xchg
cmpsl
add
adc
sbb
rcl
sbb
push
movb
pmuludq
ret
adc
out
sbb
inc
cmp
or
dec
cmp
dec
add
ret
lret
call
inc
sbb
aas
mov
and
test
ds
push
cmp
dec
orb
sbb
and
aad
movb
add
mov
push
shl
pop
cmp
cmp
inc
or
dec
iret
and
testl
sbb
in
jo
and
jnp
sbb
mov
mov
sarl
cmp
inc
out
add
sti
sub
jmp
sarb
sub
adc
adc
inc
test
je
mov
cmp
push
movsb
add
pop
xchg
call
sbb
lcall
pop
add
or
aad
jne
jle
pushf
add
mov
add
add
or
add
pop
sub
pop
sub
das
add
xor
mov
cmp
xlat
and
push
mov
dec
push
addr16
push
pusha
jmp
bound
add
sbb
fists
jne
add
mov
je
push
repz
stos
inc
adc
xor
or
xorl
fwait
xchg
mov
inc
test
pop
mov
adc
data16
pop
outsb
adc
mov
push
add
or
push
or
add
xor
divl
imul
nop
push
shrb
aas
add
adc
push
notl
pop
sbb
push
mov
sbb
fistps
das
add
test
inc
and
mov
jmp
push
add
jmp
mov
shrb
jns
in
adcb
or
xor
push
test
xor
orl
lret
pop
dec
cmpsl
jo
inc
xor
inc
rolb
push
jmp
adcb
xchg
insb
push
imul
pop
pop
mov
xor
daa
add
loope
xchg
sbb
mov
mov
mov
xor
test
movsb
and
dec
hlt
outsb
into
jle
js
aas
pop
cmp
mov
xlat
xchg
and
sub
test
aad
mov
mov
adc
cmp
fldenv
pop
adc
and
jle
jo
ss
mov
and
adc
and
cmp
and
push
or
jg
js
add
push
sub
nop
lret
sub
push
mov
add
and
das
xor
inc
xchg
jl
add
in
mull
xor
pop
or
mov
and
lcall
inc
push
adc
ret
outsb
sbb
sub
leave
pop
lods
icebp
les
push
add
adc
daa
mov
insl
sbb
sub
lcall
test
test
clc
inc
pop
xor
mov
xor
jb
gs
dec
adc
sub
movsl
xor
movsb
das
rorb
shrl
or
pop
add
sbb
inc
stos
fs
arpl
sbb
popf
sbb
push
idiv
das
dec
jne
dec
push
jne
cmp
jb
sub
jmp
push
clc
sub
push
pop
dec
pop
cmpl
push
setl
movzbl
test
fcmovu
dec
mov
push
sub
out
push
push
mov
add
mov
test
loope
xor
nop
mov
lods
sahf
adc
pop
cmp
nop
loopne
sub
je
in
pop
shll
jg
push
cmp
aam
push
push
shrl
rcrl
jmp
push
and
mov
xchg
cmpsb
add
and
push
repnz
imul
mov
es
in
fldl
or
mov
sbb
call
pop
inc
inc
lods
xlat
lret
add
mov
push
pop
sbb
jno
lcall
cld
dec
ds
das
fldenv
cmp
add
aas
roll
pop
or
xchg
mov
dec
daa
push
cmp
mov
sub
lret
add
add
mov
sbb
nop
dec
cmp
push
rcrl
jb
adc
adcb
adc
rorl
mov
leave
and
pop
pushf
mov
dec
adc
sbb
jae
push
sarl
add
stc
data16
out
push
sub
and
ret
jo
pop
les
cmp
mov
clc
dec
bound
inc
or
icebp
sbb
es
mov
inc
fsubp
add
sub
add
xor
and
mov
jne
dec
add
bound
xor
sbb
stos
inc
or
psllq
stos
jg
and
add
jecxz
adc
in
or
push
adc
sbb
lret
add
add
cmp
mov
mov
sbbb
lods
push
xchg
lods
inc
or
jmp
xchg
add
or
rorb
jno
cmp
push
sbb
fidivrl
test
add
rcrb
pop
pop
in
ss
lock
add
adc
clc
mov
adc
lods
lods
lcall
movups
dec
cmpl
mov
orb
adc
call
hlt
add
push
pop
add
add
jbe
clc
pop
insb
sbb
jns
pop
add
push
push
push
clc
xchg
push
mov
sbb
sbb
jp
xor
jmp
cmpl
and
mov
xor
sub
pusha
cmp
push
cmc
add
push
mov
loope
adc
ret
mov
sub
cmp
jle
lea
cmp
jl
pop
mov
cmpb
jne
pop
sbb
roll
xchg
sbb
cmp
adcl
clc
sub
sbb
xor
pusha
xor
dec
cmp
shrl
push
or
sub
sbb
into
sbb
dec
loope
xor
repz
test
ret
add
sub
push
cwtl
sbb
push
xchg
and
jb
je
arpl
sbbb
arpl
or
mov
push
add
inc
adc
or
lock
dec
and
addl
push
inc
ljmp
and
loope
or
decl
push
pop
repnz
and
or
push
in
dec
pop
adc
loopne
cmp
push
pop
mov
add
pop
or
inc
dec
insl
sbb
mov
pop
inc
or
and
add
movsb
sarl
lahf
cwtl
xchg
push
pop
fldl
jge
rcrl
sub
xor
outsb
push
jecxz
sbb
mov
push
adc
cli
insl
fisttpl
sbb
xchg
pusha
xchg
lea
adc
test
mov
test
outsl
sbb
fisubrl
dec
add
jo
jg
arpl
aaa
mov
mov
popf
nop
mov
pop
mov
push
adc
push
push
lcall
test
dec
sub
jne
sub
notl
add
repnz
nop
mov
inc
jge
jns
sbb
xor
sub
mov
aas
push
imul
xor
sarb
xor
or
scas
addb
xor
aad
popa
mov
xchg
les
test
and
adc
jnp
test
pop
add
insb
loopne
cld
ja
xor
add
imul
sbb
mov
push
sahf
dec
mov
adc
mov
xor
mov
adc
rolb
iret
sub
lahf
or
sbb
into
std
bound
xor
fists
jp
pop
xor
xchg
pop
les
push
pop
mov
call
push
xor
test
xor
or
enter
fiaddl
mov
or
lods
add
xlat
xchg
fadds
add
cmpsl
inc
fistl
jb
mov
gs
sub
mov
or
stc
inc
lcall
add
nop
fidivs
push
push
push
sbb
xor
outsl
add
jo
rcll
xor
inc
mov
dec
lods
or
sbb
inc
add
packsswb
outsl
fs
dec
push
push
decl
jg
push
orl
into
cmpsl
repnz
inc
je
lea
sahf
addr16
js
rorb
pop
jae
orl
fs
or
and
sbb
sub
gs
mov
adc
inc
insl
xchg
sub
add
xor
cli
add
or
pop
test
fistpl
xor
sahf
xchg
lret
xor
dec
xchg
push
stc
es
push
data16
sub
inc
sahf
fisubl
pushf
push
and
nop
out
cmp
aas
cmp
mov
movsb
dec
test
push
mov
sub
int3
inc
rcrb
ds
push
and
ret
in
imulb
cwtl
dec
push
inc
sahf
inc
push
add
sub
aad
pop
es
std
sbb
push
pushf
lcall
pop
shrb
pop
sub
and
enter
push
push
adc
xlat
push
adc
jg
mov
stc
push
dec
pop
pop
mov
aam
xchg
cmp
or
and
outsb
imul
push
push
cmp
lods
xor
loope
xor
push
inc
test
cmp
jmp
insl
sbb
mov
ljmp
cmp
jbe
push
cmpsb
int3
push
stos
rorb
subb
inc
push
jae
push
les
leave
movsl
push
xor
lea
add
sub
and
arpl
cmp
inc
cs
jb
xchg
sub
xor
sbb
cmp
jmp
sub
push
dec
jp
mov
push
push
or
adc
inc
inc
push
jns
out
pusha
push
dec
pop
les
adc
add
and
xor
rcrb
mov
lret
je
sbb
shl
cld
shl
dec
jge
dec
or
push
mov
lahf
call
cmpb
je
mov
cmp
inc
xor
add
add
pop
add
fists
into
sbb
movsl
mov
pop
frstor
out
pop
mov
sbb
mov
add
push
sub
jmp
cmp
sbb
sbb
pop
cmp
add
jne
decb
lods
ret
jne
mov
jg
mov
sbb
jne
aad
lret
or
cli
sbb
push
add
mov
sub
decb
jl
je
test
jl
push
push
clc
jg
mov
adc
push
scas
sub
cmp
ss
cmpb
add
mov
push
js
in
mov
movzbl
push
push
out
aaa
add
sub
jle
rcll
pop
aad
jle
cmp
nop
sub
pushf
aam
lahf
mov
pop
rclb
loopne
lcall
jb
jae
add
rorb
push
jecxz
xchg
icebp
dec
mov
mov
out
cwtl
or
or
xchg
hlt
xchg
test
fldcw
cld
movsbl
pop
ret
test
sbb
mov
and
mov
adc
out
inc
loopne
mov
ret
testl
xchg
push
ds
pop
jbe
adc
pop
mov
dec
popa
mov
adc
xchg
sub
pusha
push
loopne
xor
cs
sbb
dec
sbb
sbb
xor
mov
xor
mov
pop
stos
mov
adc
sarl
int3
popa
jl
cld
adc
ja
add
sub
or
popf
sbb
mov
and
xor
insb
xor
fidivl
pushf
push
shl
mov
jle
push
inc
add
or
mov
push
pop
enter
mov
test
push
dec
sub
mov
fwait
cmp
stos
out
mov
mov
push
and
push
jge
push
adc
mov
sbb
and
mov
adc
mov
aaa
jl
loop
nop
shll
enter
push
jmp
mov
pop
adc
inc
mov
test
and
adcb
jo
rclb
pushf
fs
shlb
mov
push
je
adc
sub
pop
or
xor
and
jae
adc
and
fadds
xchg
cmp
sbb
push
rorb
cmp
inc
sub
pop
loope
daa
lret
mov
call
outsb
mov
push
push
cwtl
sub
jecxz
mov
cmp
xor
and
pop
in
or
out
and
pop
fiaddl
mov
mov
and
scas
sbb
out
pop
inc
bound
jb
outsb
and
popa
push
dec
cmp
sbb
pop
adc
in
push
add
mov
je
fdivs
fldcw
mov
add
mov
add
inc
fldcw
jl
pop
lcall
push
loop
xor
adc
lock
push
inc
cmp
or
cmp
leave
and
push
and
jle
jne
inc
and
adc
cs
loope
pop
add
cmp
jb
push
inc
fwait
enter
sub
push
and
fwait
sub
loop
shll
hlt
out
pop
and
dec
cs
sub
push
ss
xor
lds
jbe
adc
xor
pop
push
es
inc
inc
push
cmp
in
mov
mov
fcmovnbe
lods
mov
cmpsb
push
fcompl
or
push
mov
clc
cmp
jbe
or
jmp
mov
add
inc
lahf
mov
or
push
mov
inc
movsb
sub
or
pop
rcll
mov
sub
sbb
test
pop
dec
adc
mov
stos
repnz
pop
mov
lods
out
fildl
cmpsl
fdivr
push
mov
inc
adc
add
cmp
les
icebp
loop
rol
lret
iret
fdivr
push
cmpsb
fs
sbb
sub
fmuls
push
cmp
ljmp
pop
movl
add
je
push
cli
add
jae
inc
movl
mov
or
cmp
cwtl
mov
adc
cwtl
jp
adc
mov
ret
aad
rorl
or
push
dec
or
xchg
movsb
add
jb
lock
inc
mov
jl
cmp
adc
xchg
aas
les
cwtl
add
jecxz
je
xorl
jmp
and
inc
push
mov
jge
mov
jmp
mov
or
lods
mov
fwait
dec
mov
and
cmp
cmp
mov
xor
ljmp
push
dec
fcomp
push
lea
iret
jo
enter
inc
adc
cmp
jl
adc
push
push
adc
data16
or
mov
shlb
jo
or
xorb
sub
push
xor
xchg
dec
sbb
pop
push
call
insb
push
sbb
ds
jp
push
in
adc
cld
xor
xlat
sbb
lea
stos
xor
push
fmull
jae
or
pop
sub
lret
leave
cmp
js
imul
pop
js
pop
movsl
lret
js
adc
adc
xchg
cmp
sub
sbb
pop
je
push
dec
mov
scas
push
sub
loop
mov
or
loop
inc
imul
bound
xchg
cld
mov
push
and
add
adc
sbb
jae
push
cltd
mov
add
xor
jg
mov
inc
ja
sub
dec
add
jns
cmp
pop
jb
rol
add
xchg
push
jg
push
inc
ret
mov
pop
cmpsb
cwtl
jle
sbb
popf
mov
jmp
push
aad
cmp
push
rorl
ljmp
push
les
sub
xor
jne
leave
add
add
mov
mov
inc
movsl
or
push
ficompl
dec
test
push
push
sbb
mov
jl
cmpl
push
and
mov
cmpw
jne
popa
test
fbld
je
test
push
data16
cmpl
mov
add
adc
mov
cmp
jne
push
call
jmp
cmpl
das
mov
insb
clc
cmp
cmpl
xlat
xor
or
shrb
lock
lahf
bound
add
mov
test
dec
xchg
repnz
clc
push
popf
faddl
mov
or
xor
adc
lods
pop
cmp
mov
jmp
pop
pusha
pop
sbb
loopne
lea
push
and
jmp
adc
data16
ds
push
mov
pop
cli
mov
sub
jp
inc
addr16
mov
or
adc
mov
sbb
push
dec
push
xchg
mov
pop
and
xchg
out
nop
or
jecxz
sbb
push
movsl
test
jl
js
mov
dec
pop
jmp
mov
cld
sti
add
jle
push
mov
add
push
sub
lock
push
sbb
out
je
iret
in
pusha
aaa
push
xor
inc
incl
je
jmp
jne
sub
popa
outsb
push
out
or
push
add
jle
mov
cmpsl
orl
shlb
xchg
jge
and
and
fadds
pop
push
call
clc
scas
insb
add
lea
movl
dec
mov
lods
out
or
adc
call
in
insb
ja
or
loope
les
push
cmc
or
das
and
adc
adc
push
jp
mov
sbb
sbb
mov
inc
sub
and
icebp
fsubp
mov
cmp
sbb
jmp
mov
popf
push
lcall
push
in
data16
pop
in
add
punpckhwd
hlt
push
sub
addb
pushf
lock
out
xchg
or
xor
xor
test
cld
jno
fidivl
daa
lock
jne
or
push
addr16
add
aaa
mov
out
push
pop
fstps
ljmp
enter
xor
dec
aam
cmp
or
jp
cmp
adc
js
mov
add
add
leave
lock
subl
lea
movsb
lock
jb
mov
and
sub
jb
in
adc
test
call
out
fbstp
ja
insl
adc
add
decb
jmp
rol
int
add
hlt
inc
ret
hlt
aaa
xchg
inc
adc
push
loope
dec
and
rorb
cmp
cmp
mov
mov
jecxz
shlb
in
push
je
das
mov
sub
cmpsb
mov
or
and
movb
mov
cwtl
nop
pop
sbb
mov
or
inc
lods
mov
mov
rolb
sub
lahf
mov
push
add
popa
int
std
sub
and
push
test
or
pop
stos
aad
cmp
inc
lods
xchg
loopne
ret
push
sbb
inc
rcll
lcall
pop
and
fadds
rorl
xchg
lods
adc
and
jnp
xlat
push
ror
and
ret
cmp
pusha
inc
inc
je
lret
dec
fdivrs
cmp
sti
mov
or
and
jae
out
scas
mov
jbe
push
movb
inc
bound
push
stos
add
cmp
pusha
inc
cmpsl
clc
sbb
imul
dec
add
xor
dec
or
add
pop
decb
cli
and
neg
and
out
pop
mov
jge
scas
mov
ds
push
cwtl
sub
inc
test
pop
mov
pop
in
xor
dec
jmp
dec
arpl
pushf
xchg
inc
loope
imul
mov
movzwl
mov
mov
sub
jg
inc
push
mov
into
pop
mul
xor
add
mov
shl
jp
add
xchg
shlb
push
pop
shrd
pop
int3
lcall
pusha
adc
push
jnp
lea
je
pop
inc
pop
jbe
loopne
push
cmpsl
jns
push
jmp
adc
xor
bound
sub
push
inc
fsubrl
dec
pop
inc
pop
sbb
sub
or
lds
lcall
push
scas
into
pop
xor
adc
push
fs
pop
sub
adc
push
add
push
jge
push
xor
mov
loope
pushf
mov
insb
outsb
push
rorl
mov
pop
outsl
sahf
ret
data16
in
ss
adc
sbb
push
sbb
and
or
xchg
add
sbb
pop
add
mov
or
jge
jno
inc
inc
adc
sbb
and
fisubl
bndstx
lea
aaa
mov
jmp
push
lods
push
sbb
lret
push
dec
enter
add
rcrb
cmp
push
push
imul
or
mov
shr
adc
xchg
mov
add
nop
loopne
xchg
je
into
or
mov
test
in
outsb
push
pop
adc
mov
lea
mov
mov
shlb
cmp
andl
adc
loop
or
dec
xor
adc
xor
fwait
mov
inc
lahf
mov
push
roll
clc
sub
jl
push
lock
add
and
or
jl
aaa
push
jge
leave
add
add
mov
cmp
je
jmp
cmp
mov
mov
or
cmp
xorb
mov
mov
jae
in
sub
mov
clc
or
inc
jl
and
icebp
mov
jle
arpl
jp
fbstp
test
imul
adc
in
inc
cs
int
fisubrl
stos
sbb
movsb
out
int3
xchg
hlt
pop
sbb
jae
fs
fwait
pusha
shrl
sbb
in
enter
and
maxps
inc
add
js
adc
clc
mov
mov
cld
divl
out
push
pop
pusha
in
pop
sbb
aad
fidivrl
and
mov
jne
scas
pop
push
mov
icebp
jmp
mov
rcr
movb
testl
pusha
mov
add
fbld
clc
dec
xor
insl
jne
cs
add
mov
jae
arpl
push
in
push
push
je
inc
or
mov
or
and
jle
cmp
xor
sbb
movsb
sbb
outsl
push
adc
add
ret
xor
push
jo
push
repz
rclb
fcmove
cmp
xchg
mov
pop
mov
jl
xor
cmp
je
push
fidivl
sbbl
fdivrl
outsl
push
push
movups
sbb
sbb
mov
mov
movb
loopne
jnp
cmp
xor
add
in
es
sarb
sarl
push
pop
sahf
xchg
lea
mov
dec
push
addr16
xor
push
outsl
aaa
cmp
sbb
sti
clc
shlb
sub
xor
add
subb
mov
cmp
sbb
jnp
jae
sbb
xchg
ret
inc
pop
test
cmpsb
jmp
insb
mov
loopne
adc
mov
shr
les
fstpt
orl
adc
mov
mov
into
jae
or
inc
aam
ret
lods
xchg
lret
sub
pop
pusha
inc
dec
fstpl
mov
loop
scas
sub
sbb
loopne
add
dec
or
xor
sub
mov
test
mov
es
ja
and
repnz
mov
or
add
jae
or
add
cmp
lcall
insb
jo
dec
dec
sbb
or
rorb
fsubr
mov
idiv
inc
inc
sti
or
push
mov
inc
int
inc
popf
int3
inc
inc
mov
xor
addr16
scas
sub
push
jle
dec
jnp
rcrb
xchg
pop
mov
xchg
int
adc
and
ds
add
pop
ret
xor
or
ret
pop
cmpsl
xchg
rcl
pusha
sub
push
fadds
add
mov
sbb
xor
add
jo
push
fs
push
xor
xor
cmp
jbe
stos
rclb
add
adc
fwait
ja
sbb
leave
cmp
pop
push
adc
into
clc
adc
and
imulb
cmp
jne
mov
xor
xchg
cltd
icebp
testb
add
dec
pcmpeqw
in
bound
or
mov
or
bound
pop
mov
sub
popa
add
addr16
stos
mov
lret
sbb
and
mov
adc
add
sbb
shlb
or
add
add
push
ja
enter
add
jne
mov
jb
mov
fbstp
or
mov
pop
xor
stos
pusha
cmpsl
mov
aam
or
dec
jmp
add
sbb
shr
xor
faddl
sbb
add
test
in
bound
mov
adc
pusha
das
jbe
iret
mov
incl
and
rol
ljmp
mov
mov
outsb
nop
and
jns
fistps
lea
add
or
imull
jo
push
push
ja
or
ds
xor
or
ret
adc
sbb
jp
lahf
fnstsw
mov
add
sub
out
add
pop
mov
incb
in
cmp
repnz
out
add
pushf
cmp
iret
cmp
mov
adc
sbb
nop
fcmovnbe
cmp
fnstenv
rolb
mov
stc
push
adc
lock
xchg
and
sbb
ss
push
stc
push
push
push
je
icebp
jne
leave
cmpsl
jge
xor
ja
mulb
sub
mov
pop
or
add
push
scas
cli
cs
mov
iret
js
jno
or
repnz
cltd
fucomp
adc
shrb
add
nop
aad
jne
mov
dec
mov
add
push
lret
clc
cmc
dec
cmp
mov
cmp
jg
rorb
lcall
sahf
or
les
fcomps
cmp
ret
shlb
test
les
adc
xor
cli
or
aam
dec
or
pop
add
add
push
shlb
or
adc
fidivrs
jmp
pop
xor
nop
fcmovnu
clc
push
or
loop
mov
loopne
stc
test
enter
dec
inc
or
mov
xchg
mov
fcoms
sub
mov
js
lds
sub
sahf
pop
les
insb
int
cld
or
scas
jo
pushl
in
push
and
mov
adc
fimull
dec
xor
add
adcb
fdivrl
sbb
inc
notl
js
rcrb
and
sbb
pop
daa
add
mov
add
pop
fs
inc
inc
push
pusha
pusha
insb
inc
fs
insb
push
cmp
movsb
xchg
pusha
pop
lcall
ds
ret
inc
arpl
ja
and
dec
jo
fwait
dec
mov
sub
ret
in
je
cmp
je
mulb
or
pop
sbb
roll
mov
adc
test
cmp
je
xor
imul
lock
push
sub
lds
inc
pop
xchg
jmp
lea
dec
xchg
push
xor
add
cmp
inc
sub
push
add
lock
adc
lock
cmpsl
push
dec
addb
and
in
push
adc
jo
into
xlat
mov
fs
dec
and
xchg
int
mov
pop
jbe
mov
into
add
push
mov
fisttpll
lods
cmpps
jmp
pop
cs
jecxz
mov
jle
push
inc
push
je
pop
inc
leave
rorb
mov
setl
sbb
sbbl
jp
push
sub
and
fs
andb
mov
dec
xlat
test
test
lock
sbb
or
add
jecxz
jo
addb
fcoms
mov
inc
pop
adc
js
push
bound
sbb
adc
push
imul
push
push
jo
popa
enter
dec
xor
fiaddl
inc
mov
cs
es
popa
insb
sub
dec
jnp
jne
outsb
and
xor
xchg
add
lds
cltd
divl
stos
scas
sub
pushf
pop
mov
int
fidivrs
inc
movsb
das
clc
outsb
mov
mov
fwait
jns
and
je
jle
cmp
pop
shll
push
and
dec
dec
rorb
ficoms
xchg
cwtl
push
ret
sub
add
pop
sbb
nop
lea
dec
push
or
and
and
shrl
adc
xchg
sbb
fcoms
cli
imulb
xchg
pop
xor
add
or
inc
jne
lock
or
test
push
outsl
lds
mov
pop
arpl
mov
mov
sbb
imul
add
shlb
sub
fcoml
idiv
mov
in
loop
mov
cmp
cmp
and
push
adc
pop
dec
sub
or
pushl
dec
or
sbb
cmp
or
or
adc
ja
add
mov
ss
ud2
and
sbb
ret
lret
jg
adc
test
roll
sbb
lcall
pusha
pop
aam
jp
sub
or
lock
pusha
mov
adc
and
xor
fcompl
pop
cmp
cmp
andl
fistl
pop
or
push
into
jecxz
lock
addl
cmp
ds
int3
jp
out
inc
aam
adc
aad
test
cmp
out
pop
add
lcall
adc
fistl
xor
or
adc
test
sub
push
cmp
and
mov
jno
jmp
mov
and
jb
rcr
lahf
test
push
jmp
mov
xchg
outsl
adc
ret
shrb
adc
add
pop
jmp
pop
arpl
in
mov
loop
xor
pop
mov
movsl
mov
sbb
xor
cmp
mov
xor
cmp
clc
or
push
movsb
jo
push
lds
lock
mov
mov
imul
cmp
push
xchg
mov
bound
aad
dec
mov
and
and
mov
jmp
inc
cmp
mov
stos
push
insb
insl
aaa
int3
add
les
sub
pop
pop
aas
fdivr
je
lods
movzwl
pop
or
test
jnp
inc
xlat
inc
cmpsl
daa
jae
pop
sahf
xchg
push
dec
push
xor
push
je
or
rcrb
jp
sub
or
adc
push
add
je
repnz
push
xor
out
jbe
fisubrl
dec
push
mov
nop
in
pop
sub
into
add
mov
fbstp
inc
jl
jmp
dec
or
xor
pop
and
into
jns
dec
icebp
std
sub
sbb
outsb
inc
stos
sbb
lds
stos
cmp
jl
or
cmc
xchg
and
pop
addr16
add
and
mov
cmp
or
adc
orb
add
dec
xchg
ret
dec
ret
pop
aaa
xchg
sbb
int3
pusha
aas
push
sbb
rol
xor
cmp
adc
lock
sub
xor
push
mov
xlat
and
nop
mov
pop
sub
push
pop
sub
adc
cmpsl
inc
stos
arpl
ret
pop
cmp
decl
mov
cs
out
add
xor
mov
lea
daa
jmp
cmc
inc
xchg
in
rorb
adcb
and
mov
loop
shlb
negb
push
jo
bound
sub
or
xor
push
and
outsb
push
or
or
push
and
inc
push
mov
dec
in
sub
out
add
lret
repz
add
xchg
outsw
xchg
fbld
in
sub
jb
and
sub
mov
xor
ficompl
rclb
xor
or
xchg
or
xor
xchg
cmp
pop
and
jo
loopne
test
pop
mov
cmp
inc
add
lret
rol
push
xor
lea
je
fidivs
and
or
mov
push
mov
and
mov
inc
xchg
mov
incl
rorb
inc
xor
rcrb
outsb
jl
aas
sbb
sbb
outsb
inc
jmp
pushl
stos
mov
pop
mov
lea
in
out
or
jmp
ss
cmp
adc
push
roll
add
rclb
in
and
jge
fidivrl
push
inc
idivb
andl
in
mov
or
cmp
mull
mov
jl
andl
adc
and
pop
sub
and
mov
add
or
pop
loopne
jecxz
ds
xor
cmp
cs
dec
outsb
mov
mov
ret
adc
xor
cmp
xor
mov
aad
add
les
dec
loop
and
mov
mov
adc
ret
mov
adc
cmp
das
inc
push
test
inc
dec
cmp
sbb
xor
jl
or
push
or
inc
sub
popf
lcall
mov
pop
je
xlat
shr
pop
add
icebp
jno
jecxz
adc
pop
inc
push
inc
repnz
call
incb
and
je
push
insb
cld
pop
inc
pop
xor
addl
sahf
and
pop
pop
pop
xchg
pop
dec
fnsave
mul
add
add
xor
xchg
mov
movb
sub
mov
add
add
cmp
jnp
arpl
sbb
idivl
lock
ret
testb
je
and
mov
out
add
xchg
add
dec
sar
mov
jl
loope
xor
mov
or
sbb
mov
jle
mov
inc
mov
mov
loope
push
inc
mov
mov
push
adc
inc
lret
xor
cmp
mov
sbb
test
inc
add
inc
outsb
stos
xor
add
mov
mov
jp
add
and
cmp
xorl
push
popf
shll
mov
and
push
add
mov
int3
cmp
sbb
push
sarb
bound
je
xor
or
insb
scas
xchg
mov
stos
cs
cmp
filds
sbb
push
or
mov
push
lea
add
lahf
pop
inc
xor
mov
mov
movhps
cld
mov
subl
push
dec
push
pop
xor
and
dec
or
fmull
mov
jmp
cwtl
pop
xor
gs
sub
nop
push
pushw
pushf
data16
out
insl
pushf
inc
xlat
adc
aad
pop
imul
push
mov
test
mov
sahf
push
add
sbb
pop
add
pop
ret
into
dec
aaa
dec
push
jo
jmp
xor
add
insb
movsb
mov
push
push
pop
cmp
dec
mov
cltd
idiv
adc
dec
cwtl
loopne
xor
insb
mov
cwtl
mov
mov
mov
je
adc
ret
cmpb
shrb
in
or
shrl
jno
leave
pushf
mov
lcall
push
nop
add
jb
jbe
cmp
add
in
mov
adc
mov
inc
cmc
jno
lock
cmp
je
push
xchg
mov
push
xchg
je
lock
lret
mov
inc
movsb
adc
je
mov
andl
inc
test
inc
mov
xor
or
add
pop
sarb
jle
into
out
add
xchg
movsb
mov
jo
clc
test
rolb
or
mov
xchg
sub
aam
scas
sub
rolb
mov
adc
mov
in
add
jge
ljmp
and
pop
and
and
xor
cmp
mov
ret
sbb
sti
movsl
aam
cmp
cmp
pop
jae
push
ret
lahf
jb
ja
movsb
jo
aas
add
or
sub
shlb
mov
jl
fimuls
pop
andl
sub
dec
push
push
sub
inc
test
lea
add
int3
adc
pop
add
cmp
mov
fcoms
cli
orb
mov
adc
add
testl
lea
cmp
jne
mov
pop
fdiv
add
pop
mov
xor
cmp
mov
adc
and
push
mov
shlb
and
sbb
or
add
and
aas
jmp
mov
xchg
int
jbe
cmpb
xlat
adc
or
push
jno
and
stc
push
sub
mov
xchg
clc
push
aam
std
push
subb
movl
idiv
inc
insb
shr
inc
add
arpl
adc
adc
repnz
sbb
cmp
sbb
or
pusha
insb
std
inc
sti
clc
mov
sbb
mov
fimull
adc
pop
adc
dec
jb
jb
adc
sbb
lock
addb
bound
clc
inc
lret
cmp
push
pop
adc
sub
rclb
jne
add
jns
test
dec
push
xor
scas
jnp
jge
fwait
jnp
pop
sbb
jle
push
push
sub
adc
xor
inc
cmp
inc
sub
push
inc
sbb
lcall
addr16
rclb
inc
mov
jp
pop
xor
xlat
or
pop
lea
cmp
pop
jmp
mov
add
ret
out
movsl
add
lods
fldl
test
insb
insb
sbb
loope
or
jg
inc
stos
mov
call
mov
add
repnz
add
movb
ja
inc
aaa
or
push
add
pop
adc
mov
pop
dec
sub
ss
inc
popa
pop
or
movsb
add
sarb
or
push
lret
push
push
sub
pop
mov
ficomps
pop
mov
lea
lock
or
cld
or
inc
xor
fiaddl
adc
outsl
push
dec
sub
shr
fnstsw
or
dec
push
movl
push
jg
sub
shl
push
mov
push
in
insb
pop
pop
rorb
or
or
jo
inc
out
fmuls
popf
aaa
dec
pop
jmp
adc
pop
pop
cwtl
hlt
inc
xchg
and
and
shrl
popa
shrb
es
cmpsb
mov
mov
push
or
jmp
out
cmp
popa
jl
mov
jle
mov
or
add
mov
jae
push
inc
rolb
rcl
call
pusha
shrl
mov
in
lea
mov
xchg
push
out
inc
jl
lret
dec
dec
adc
out
push
scas
push
call
and
adc
clc
lret
js
xchg
pop
push
in
mov
fs
xor
dec
shll
out
mov
push
or
xor
pusha
out
xor
incl
xor
imull
lock
fs
inc
sbb
cmpsl
out
pop
test
cld
adcb
pop
in
inc
pop
shrb
fiadds
out
aas
sahf
mov
lahf
cmpb
push
push
add
inc
mov
cmp
xchg
jbe
and
cmpb
loope
or
or
xchg
aaa
sbb
xor
outsl
sbb
jmp
or
xchg
sub
dec
sub
mov
dec
ret
lret
add
push
push
sub
fimuls
sarl
sub
jge
push
push
loopne
add
lock
nop
mov
add
jle
xor
mov
push
xchg
iret
pop
nop
inc
ret
ja
int3
add
or
in
adc
movsb
inc
mov
mov
cmpsb
add
les
jbe
xchg
xor
mov
addb
or
jae
push
push
fsubrl
imul
sbb
sbbl
cltd
in
lods
jmp
pop
pop
push
push
je
loopne
push
or
add
es
push
xor
xor
pop
or
pop
mov
in
dec
mov
mov
or
gs
add
clc
push
push
mov
mov
dec
out
mov
jae
jb
mov
push
mov
push
inc
sbb
xchg
rolb
arpl
fisubs
shrl
inc
and
dec
mov
lods
push
xor
push
rcr
imull
and
mov
and
es
mov
adc
insb
jo
dec
lds
loopne
mov
mov
or
add
iret
xchg
in
xchg
pop
sub
adc
pusha
and
push
das
mov
testl
mov
cs
xchg
lods
mov
mov
pop
cltd
mov
push
in
mov
in
pop
dec
xchg
sbb
jbe
fisubs
lock
cld
push
add
cmc
and
dec
pop
mov
js
notb
shl
add
notb
lods
leave
xor
cmp
pusha
pop
xor
lods
ficompl
jno
jmp
push
adcb
ja
sub
and
stc
jbe
out
ret
outsl
or
outsb
call
ja
je
or
je
jnp
or
sub
xchg
pop
das
adc
subb
push
or
push
or
ds
dec
clc
and
sub
sbb
push
add
mov
push
jmp
cmp
adc
adc
adc
shlb
push
cmp
mov
stos
pop
sbb
loopne
sti
shlb
cmpsl
scas
movzwl
dec
and
sub
jnp
call
ljmp
mov
mov
and
test
dec
sti
in
and
or
add
je
pop
lods
push
mov
push
sti
xchg
lock
push
push
or
adc
and
pop
pop
pop
loope
test
test
movsl
and
andl
mov
lea
add
add
stos
adc
pop
dec
or
and
push
adc
mov
xchg
dec
je
sub
sub
jb
and
hlt
jo
xor
add
push
adc
xor
mov
fiaddl
or
push
adc
pop
pop
adc
xchg
push
pop
jo
xor
push
add
fs
sti
adc
adc
dec
pusha
mov
mov
or
adc
xchg
sbb
adc
aaa
je
sub
in
and
inc
aad
xor
or
add
cld
or
in
cmp
ret
fadd
test
cmp
pop
mov
sbb
adc
and
fcoml
sbb
mov
stc
sti
je
pusha
xor
adc
jg
or
inc
mov
cmp
cmp
pop
loopne
test
add
pusha
inc
pop
enter
fcoms
fadd
ss
xchg
in
push
push
add
fmull
ja
lea
aas
jae
xchg
mov
pushf
xchg
adc
push
adc
mov
jbe
mov
adc
add
outsl
lea
imul
inc
push
cltd
cmp
cltd
mov
or
jo
jo
add
cmp
int
call
cmp
jae
push
lock
cs
and
and
push
faddl
test
ret
inc
mov
mov
rcrb
scas
dec
sbb
sbb
mov
leave
sbb
enter
pop
and
mov
push
mov
xor
push
fnstenv
aam
inc
mov
sub
addl
outsb
xchg
add
push
adc
cmp
outsb
mov
jl
pusha
mov
cmp
jae
cmp
pusha
and
fwait
xchg
cmc
mov
sbb
cmc
dec
rclb
inc
sub
movsb
or
icebp
cltd
mov
jnp
sbb
rorb
add
jmp
xor
sub
or
adc
mov
xchg
movsb
sbb
jbe
add
inc
shll
nop
ja
js
dec
xor
xor
pop
mov
xchg
aam
mov
mov
mov
mov
les
xchg
cs
orb
fmull
mov
daa
cmp
push
xor
inc
enter
and
and
jle
push
sbb
loopne
or
push
ss
in
cmp
scas
and
imul
sahf
cmp
mov
jno
rcll
push
jo
leave
pop
and
xchg
outsl
mov
or
push
and
fucomip
add
addl
pop
or
test
mov
jne
sbb
mov
pop
pusha
jge
adc
stos
pop
adc
adc
dec
inc
arpl
mov
and
das
hlt
sbb
cmp
xor
cmp
push
or
push
push
xchg
mov
aam
fdivr
cmp
push
xchg
xor
dec
push
stos
inc
xchg
fsubrs
ja
add
sahf
or
push
test
inc
aam
xor
sbb
dec
sub
pop
add
in
add
xor
clc
and
dec
pop
or
xchg
sar
push
dec
cld
shlb
add
xorl
int
stos
gs
inc
inc
pop
xor
inc
pop
shrl
hlt
jl
rclb
dec
fbstp
cs
movsl
xchg
dec
cli
jp
inc
mov
push
or
mov
dec
les
pop
xor
rolb
xor
dec
sbbb
or
insl
and
push
mov
xchg
pop
ret
adc
ds
add
cmp
stos
lcall
adc
aam
shlb
or
pushf
int3
push
push
cwtl
add
push
xchg
pop
add
dec
fs
or
popf
jne
pushf
loopne
jg
cmc
add
push
dec
stc
jae
jnp
mov
movsb
pop
cmp
popa
push
filds
sub
pop
je
lock
dec
xchg
add
stc
and
mov
js
or
mov
enter
jg
subb
dec
cmp
shrb
enter
mov
jle
jne
es
push
add
aam
xor
or
jl
inc
shlb
fcmovnb
mov
mov
push
cmp
rcrl
ja
sub
xchg
call
inc
test
testb
js
je
push
cmp
and
jg
out
dec
sub
dec
rorl
or
fcoms
fildll
jl
sbb
jge
int
push
inc
push
ss
adc
add
in
fiaddl
sbb
mov
mov
jecxz
dec
adc
mov
cmpl
pushf
mov
scas
sub
cmp
adc
pop
inc
push
xor
std
outsb
xor
and
cmp
add
sbb
stos
pop
add
sbb
push
sbb
pop
movb
pop
xchg
ret
mov
push
adc
inc
xchg
sub
xchg
sub
mov
inc
jle
push
push
adc
enter
mov
inc
add
mov
mov
adc
in
adc
jbe
push
add
adc
fcoms
pop
dec
test
dec
lds
dec
push
push
push
inc
xor
push
push
sub
loopne
inc
pop
inc
inc
inc
and
mov
mov
or
cmp
pop
sbb
mov
lods
insb
hlt
sbb
pop
ficomps
pop
sub
test
or
jne
shr
stos
mov
dec
inc
mov
mov
adc
ljmp
es
outsb
arpl
into
hlt
je
mov
xlat
mov
add
cli
call
push
test
push
sbbb
call
xor
add
imul
add
push
fmull
rorb
add
xchg
fnsave
sbb
and
add
adc
movsb
and
push
push
dec
dec
in
outsb
sbbb
jmp
je
cmp
add
sub
aas
clc
cmp
mov
inc
pop
add
sub
cld
fxch
cmp
xchg
dec
sahf
sub
ds
dec
sbb
inc
or
or
aaa
push
call
fs
sbb
cltd
insl
xor
adc
in
add
and
inc
mov
or
add
add
sub
cld
imul
add
loope
adc
push
cld
push
adc
lcall
sti
cmp
movsb
mov
shlb
mov
cltd
push
and
xor
scas
or
push
pusha
mov
sub
push
mov
cmp
pop
sub
and
cmp
or
je
adc
push
mov
nop
add
inc
sbb
setbe
pusha
jbe
xchg
mov
xchg
add
nop
lret
sbb
push
iret
and
or
in
push
sahf
and
in
and
push
and
mov
inc
sub
cli
sbb
cmp
out
add
jp
pop
xabort
sub
sbb
andl
jns
adc
in
inc
repz
or
bound
add
xor
ds
cltd
xor
push
adc
cmpl
stc
or
mov
addr16
jo
cmp
or
xor
sub
inc
fwait
pop
jns
mov
xchg
push
inc
push
inc
or
xchg
add
xchg
out
mov
adc
cmp
sub
addr16
push
dec
pop
cmp
jmp
push
push
adc
inc
push
push
dec
js
inc
push
mov
clc
add
clc
out
fstpt
fnstenv
xchg
and
push
int
ds
imul
repz
cmp
rorb
add
pop
push
dec
ja
inc
test
adc
call
lods
aam
push
dec
fistpl
aam
push
mov
pop
adc
shrb
les
push
sbb
xchg
jle
pushf
insb
add
jmp
pushl
dec
push
jmp
iret
inc
arpl
jecxz
and
mov
lock
push
roll
fcoml
pop
jp
idiv
stos
sub
aas
stos
jbe
push
sbb
cwtl
inc
test
les
dec
xor
sbb
and
push
cmp
mov
push
scas
dec
ja
cmp
mov
pop
fdivl
inc
jecxz
mov
dec
loopne
sbb
cltd
jmp
mov
loop
xchg
mov
push
cmp
fmuls
pop
rcrl
iret
hlt
out
loopne
filds
dec
xchg
nop
aas
in
push
in
scas
movsl
shrb
xchg
in
call
lret
mov
cmp
bound
inc
testb
mov
jne
orl
subl
fdivp
or
pop
insb
sbb
out
lret
bswap
jno
and
aam
repz
jp
int3
inc
out
push
add
add
jne
enter
pop
add
push
cmpb
push
shll
lock
jns
xchg
lods
jnp
repnz
xor
jecxz
notb
mov
dec
dec
xchg
fiadds
in
inc
das
sub
int3
or
lret
lea
pop
ja
mov
jo
dec
or
loope
inc
mov
mov
jns
and
into
aam
and
cli
lea
ljmp
mov
xor
cmpsl
push
jo
lret
xchg
push
mov
das
adc
jge
adc
push
cmpsb
jge
cld
add
mov
mov
mov
rorb
fidivs
negb
jae
pushf
jecxz
lods
and
dec
lret
mov
ficoms
add
out
aam
inc
cmc
jae
xor
dec
cmp
cli
sbb
sti
inc
adc
jne
push
push
add
or
add
lret
xchg
jp
insl
adcb
add
push
das
jns
fdivr
jae
scas
add
push
or
scas
push
push
ja
fs
mov
or
mov
cld
out
out
shl
pop
cmp
jne
sub
push
loopne
push
pop
cmp
adc
sti
or
cmp
nop
push
dec
pop
fidivrs
jmp
loop
push
aad
cwtl
xlat
add
pop
or
xorl
or
or
sbb
add
rcll
add
push
mov
add
call
jns
mov
jns
fwait
push
fimuls
or
je
jne
dec
in
aam
adc
mov
andnps
in
je
push
int3
push
int3
mov
push
js
pop
and
es
inc
das
lods
pop
push
popf
or
insl
sbb
pop
stos
xchg
pop
into
pop
jle
cmp
sti
push
push
movsl
loopne
adc
and
addb
mov
es
cmp
mov
adc
stos
or
movsl
lock
mov
mov
jbe
push
or
andl
out
decl
add
push
lcall
xchg
sbb
add
pop
or
ja
pop
andl
push
and
cmp
jmp
adc
mov
pop
or
mov
cmp
ja
mov
dec
mov
adc
jl
xchg
mov
jle
xlat
adc
mov
aad
into
cmp
or
flds
pop
imul
scas
dec
sbb
adc
push
sub
cmpb
mov
pop
subb
imul
aad
push
add
in
xor
mov
sbb
push
lock
orb
adc
adc
cmp
cmpsb
rcrl
xor
cli
add
and
and
push
xor
nop
pop
adc
test
cmp
fwait
add
fwait
cmp
sbb
aam
sub
test
insl
pop
dec
inc
movsl
nop
mov
mov
dec
and
sub
mov
shl
pop
jb
mov
lret
and
adc
inc
jb
lret
mov
repnz
cld
cmpsb
rcl
dec
stc
add
cmp
mov
out
leave
add
add
loope
cli
lret
or
lock
push
cmp
outsl
out
cmp
mov
pop
dec
lods
xor
and
xchg
fstpt
cmp
add
lret
add
push
xchg
or
mov
lds
enter
roll
xchg
and
adc
lds
cwtl
je
loopne
sub
or
pop
or
rcrb
adc
dec
push
add
push
in
aam
add
cmpsl
js
push
jmp
add
push
cmp
jb
lea
cmp
pop
sub
mov
inc
jmp
lock
into
aaa
cmp
add
test
mov
pop
mov
inc
mov
std
or
mov
cld
jmp
jo
mov
ficompl
or
je
cmpsb
add
and
movb
fiadds
and
inc
stos
icebp
dec
dec
fdivs
andl
push
out
and
sbb
push
jg
and
iret
or
inc
mov
adc
mov
enter
movsl
fcomp
test
inc
xor
inc
leave
fcmove
push
popa
or
cmp
ljmp
mov
xchg
das
movsl
or
adc
adc
and
ret
ss
fstps
out
out
lods
xchg
xor
add
mov
inc
adc
mov
jle
bound
insb
add
inc
sahf
sub
sti
mov
movntq
xor
add
mov
pop
xchg
jp
jae
movsl
in
mov
pop
gs
sub
fucomp
imul
dec
sbb
movsb
fisubs
popa
adc
inc
push
and
or
cmpsb
shrb
dec
add
and
push
rorl
movsl
mov
stos
xchg
add
out
pop
jmp
pop
mov
cmp
ror
icebp
cmpsb
xor
lret
jg
xor
push
mov
push
lock
xor
icebp
pushf
mov
adc
das
pinsrw
push
sub
pop
andb
clc
push
add
and
xchg
loopne
cmpsb
mov
push
push
push
adc
or
lea
pop
push
pop
mov
push
lock
cli
rep
std
mov
je
mov
in
aaa
faddp
pop
inc
adc
movl
mov
fistl
and
loope
inc
push
sbb
sbb
push
sbb
or
jo
jge
cmpsl
jno
add
adc
pushl
js
pop
ret
in
or
push
add
or
xchg
lock
push
test
xor
loope
or
mov
in
mov
aas
inc
xchg
in
push
pop
xchg
add
mov
data16
xor
lcall
test
mov
mov
or
lcall
pop
pop
inc
cltd
add
xchg
jno
pop
or
xor
inc
gs
je
cltd
cmp
fdivl
fisubl
add
je
arpl
ret
std
out
mov
aad
and
jl
push
clc
rcll
mov
cs
gs
call
clc
adc
ret
aas
lods
mov
mov
xor
cmp
sbb
faddl
je
ret
push
push
imul
inc
cmp
jb
loopne
leave
xchg
or
dec
aaa
lods
in
jb
cmp
test
js
cmp
sbb
jmp
mov
pushf
xchg
pop
fmuls
mov
out
lea
inc
mov
or
lock
das
ficompl
push
cld
push
xor
dec
std
or
neg
sbb
inc
je
mov
ljmp
inc
jnp
mov
mov
add
movsb
inc
sbb
inc
cs
push
jecxz
sbb
test
cs
sub
mov
jb
inc
push
mov
test
jl
test
jg
mov
jp
add
or
mov
cli
or
ret
mov
sub
test
cmp
push
out
inc
push
jle
dec
add
jmp
dec
arpl
push
push
push
aas
push
xor
popf
inc
sbb
out
and
shrb
add
xor
xor
ficomps
addr16
pop
xchg
and
or
push
mov
in
aaa
fdivr
adc
or
das
das
sub
xor
xor
sbb
xchg
xchg
xchg
xchg
xor
inc
pusha
dec
test
add
rolb
lds
cmp
cmpsl
mov
sbb
sbb
add
pop
ljmp
rcrb
sub
test
add
int
into
repz
jno
rorb
aaa
sub
stc
repnz
loopne
xor
incb
mov
add
pusha
mov
mov
mov
iret
cmpsl
xlat
fidivrs
pop
sub
icebp
pop
or
fstpt
xchg
es
insb
insl
inc
push
imul
pop
leave
inc
push
jmp
test
aaa
add
jp
xor
or
xchg
xor
pop
and
jo
in
mov
inc
add
sarl
adc
mov
pause
cmpsb
add
sub
xor
cltd
gs
pop
les
movsl
dec
ret
mov
sahf
xchg
push
int3
je
cmp
xor
cmp
jo
jb
mov
outsl
adc
cmp
pusha
inc
xor
mov
loopne
or
lret
xchg
fidivs
sub
loope
jnp
mov
sub
pop
cmp
sub
ret
pusha
movsl
gs
pop
data16
aam
pop
add
rep
bound
inc
xor
or
adc
lock
jmp
sub
jae
nop
not
and
popa
inc
adc
mov
call
mov
sbb
and
pop
add
push
push
push
cmpsb
std
push
rolb
add
jae
sarl
add
jnp
loopne
adc
xor
movzbl
inc
inc
sub
dec
inc
xor
mov
loope
loopne
loopne
cmp
inc
mov
xchg
testb
sbb
ljmp
inc
xchg
mov
sbbb
es
dec
jg
call
xor
ret
mov
xor
test
aaa
je
andl
push
add
inc
inc
and
lret
rolb
sbb
add
push
add
and
cmp
clc
push
mov
sbb
adc
mov
add
inc
pushl
mov
jmp
mov
jl
and
or
adc
lar
jecxz
scas
cld
sub
pop
and
adcb
rorb
inc
pop
jno
or
pop
mov
lret
rolb
dec
clc
pop
jecxz
out
adc
into
add
dec
mov
add
jnp
movsl
addr16
adc
push
aas
sbb
cmc
test
call
pop
fstl
gs
pop
adc
mov
and
sbb
call
adc
add
icebp
aaa
ss
push
or
data16
cli
push
mov
fdivp
fstpt
adc
add
sbb
and
in
sub
cmp
push
ja
jl
out
jns
imul
sbb
clc
cmpsl
fdivrs
inc
adc
arpl
sbb
push
mov
adc
push
add
or
lock
outsb
bound
test
add
lods
pushw
sbb
and
sarb
dec
mov
sbb
and
mov
lods
pusha
push
loopne
xor
push
bnd
roll
pusha
and
jo
pop
push
mov
jno
push
aad
pop
xchg
mov
and
cmpl
fisubs
js
testl
in
sub
pop
cltd
cmp
jl
pop
sbb
sbb
adc
cmpsl
ljmp
mov
ret
sbb
push
add
xor
and
clc
inc
lods
xchg
pop
mov
sub
xor
call
aad
mov
sti
inc
loopne
xchg
leave
adc
inc
cmpsl
and
push
mov
jo
stos
xor
adc
jmp
clc
adc
mov
mov
inc
int3
adc
adcb
insl
jge
shrb
pmulhuw
inc
pop
pop
add
adc
add
push
pop
push
adc
pop
bound
stos
mov
inc
adc
add
lahf
inc
and
xor
adc
adc
mov
stos
sbb
clc
sub
idivb
insl
insl
push
adc
ss
add
push
pop
cmp
clc
inc
mov
orl
dec
cwtl
test
xchg
loopne
arpl
dec
or
outsb
pop
addb
cmp
je
and
mov
adc
push
lret
sar
cmp
jbe
or
add
rcl
cmp
jmp
ret
add
push
inc
pusha
in
adc
sub
add
jecxz
jecxz
faddl
xchg
sbb
push
repz
rcll
or
icebp
dec
cmp
or
lahf
pop
mov
jp
mov
and
rol
mov
inc
or
and
ja
lret
jge
lea
mov
fdivp
sahf
fimull
pop
mov
aaa
xor
call
sarl
push
pop
or
enter
push
pop
mov
add
pop
pop
and
lea
xchg
je
in
notb
nop
mov
xchg
or
xchg
sbb
inc
mov
inc
push
aas
lcall
mov
xchg
push
lods
and
fdivl
add
sbb
or
inc
sahf
push
push
dec
ret
pop
repz
add
or
nop
adc
adc
ret
pop
pushf
testb
push
cmc
jno
inc
sbb
enter
arpl
orl
jne
sub
outsb
sar
lea
jp
cmp
sub
add
cmp
jb
pushl
out
pop
mov
mov
pop
or
iret
add
push
pop
jmp
xor
jae
test
adc
adc
add
dec
jo
or
sbb
cmp
sbb
push
or
les
add
test
sub
mov
push
sub
aaa
mov
pop
xchg
push
pusha
cmpb
xchg
call
stc
sub
pop
sub
das
sub
jmp
pop
adc
adc
push
cmp
pop
jmp
push
jmp
test
sub
mov
aas
rcll
add
adc
inc
push
pop
mov
gs
xchg
pushf
mov
fdivrl
pop
mov
aaa
cmc
add
dec
mov
cs
pushf
cmp
push
pop
sbb
sub
or
jg
dec
sub
xchg
pop
jecxz
add
cmc
xor
jmp
push
jmp
and
in
nop
sbb
mov
add
roll
sbb
or
imul
and
mov
inc
mov
add
adc
add
sub
and
ret
ljmp
fisubl
or
cmp
sbb
or
fcmovnu
in
daa
dec
iret
mov
add
in
push
pop
mov
fcmovnb
imul
and
sbb
and
or
xchg
fisttpl
sub
sub
in
jb
mov
cmp
nop
adc
ja
xchg
sbb
dec
jecxz
repnz
inc
movl
sti
add
or
or
sbb
inc
std
push
mov
les
jne
push
cmp
cwtl
hlt
inc
je
sub
adc
inc
out
test
dec
pusha
add
xor
call
push
mov
cmp
les
sbb
cmpsb
xor
inc
loopne
and
mov
push
cmp
or
inc
aas
and
add
in
and
xor
sbb
jb
sbb
and
andb
jb
sbb
sub
jb
sbb
sub
inc
push
jb
sub
sbb
inc
push
sbb
and
sub
in
iret
das
jmp
push
push
push
xor
jo
dec
scas
sbb
and
xchg
xor
sub
pop
jne
cmp
pop
mov
mov
and
stc
inc
movsl
movsl
lret
push
leave
jmp
cmp
dec
lods
in
rcrb
xchg
cmpl
or
out
mov
push
movl
call
or
mov
adc
adc
adc
sbb
xchg
ds
mov
loop
inc
cld
xchg
js
dec
adc
add
pop
adc
inc
adc
pop
cmp
dec
or
mov
lret
gs
or
inc
and
sub
cmp
and
adc
dec
in
xor
adc
adc
inc
fsubl
andl
cld
jmp
mov
mov
subl
jae
lea
dec
mov
jmp
jle
dec
adc
rcpps
fimull
mov
inc
lahf
rorb
add
xor
cmpsb
mov
ds
or
and
adc
pop
jmp
sti
addl
xor
scas
pop
or
mov
cmp
xchg
pop
push
jecxz
dec
jo
adc
push
and
out
or
push
adc
ljmp
mov
cmpsb
rorb
inc
incb
sub
cs
jo
ds
push
pop
and
test
add
outsl
filds
jbe
stos
lea
push
mov
and
pop
leave
ret
push
mov
clc
push
lods
or
add
pop
pop
out
lea
hlt
xor
es
or
push
movl
in
sub
mov
rorl
push
sbb
lock
ret
orb
xorb
mov
dec
lods
sub
adc
stos
lock
dec
add
add
clc
or
sbb
sub
or
cmp
jle
sbb
xor
jae
add
in
lds
in
inc
call
xor
or
je
cld
dec
jle
add
mov
xchg
or
mov
mov
mov
cmpb
jae,pn
fldt
nop
outsb
js
loopne
add
ds
mov
test
jmp
int
mov
add
push
dec
cmp
xor
add
in
inc
pop
cmp
xchg
je
insb
lock
inc
xchg
fwait
sbb
xor
mov
test
sbb
ret
imul
pop
in
cmpsl
cmpsb
dec
sar
sti
sbb
in
cmp
repnz
in
jg
lea
and
dec
xor
xor
dec
test
cmp
enter
push
push
cmpb
mov
xor
and
pushf
fsubrl
add
orb
loopne
mov
dec
lcall
add
sbb
aam
jmp
push
sub
aad
xchg
mov
xor
lock
or
pop
inc
loopne
sbb
leave
add
inc
mov
mov
outsl
pop
cmpl
test
dec
inc
jg
jmp
sbb
and
sub
lock
scas
aam
pop
or
push
test
push
or
dec
mov
xchg
lret
inc
xchg
xchg
fsubrl
lock
or
mov
sub
roll
mov
es
add
push
orl
data16
or
movsl
mov
roll
pop
push
xor
mov
mov
cmpsb
je
pop
out
push
fs
dec
test
aas
mov
cmp
and
push
adc
push
jb
ret
xor
jnp
jmp
jl
pusha
xchg
movsb
fwait
movsb
test
jo
xchg
mov
lods
xor
mov
xchg
test
and
inc
ret
gs
fmuls
arpl
push
jns
adc
add
cmp
out
inc
push
cwtl
mov
orl
sbb
ds
sub
and
gs
shll
and
mov
std
jg
dec
push
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
push
jae
ret
aas
stos
mov
sar
bound
js
cmp
mov
jns
fcompl
sbb
xor
je
cmp
je
ret
js
pop
push
push
mov
decl
sbb
push
imul
rcrl
ret
imul
pop
inc
sub
add
push
leave
or
sbb
and
jmp
add
cld
gs
hlt
mov
cmp
jl
pop
mov
xor
jle
cmc
das
add
fdivr
push
data16
pusha
dec
ret
das
jne
fwait
mulb
mov
mov
andb
gs
add
rclb
fwait
int
add
sub
add
cld
lock
jae
adc
inc
push
test
inc
addl
jne
mov
or
pop
mov
dec
xor
sbb
lock
cmp
push
mov
add
pop
movsb
pop
call
jge
xor
or
mov
fnsave
push
jecxz
xchg
fisubrl
mov
sub
inc
mov
and
fs
inc
shll
stc
push
iret
lock
push
pop
mov
in
jmp
or
push
mov
fucomp
cmp
jl
dec
sub
push
imul
test
pop
pop
push
push
mov
in
sub
inc
or
pop
xchg
add
jmp
in
dec
scas
xchg
mov
movsb
push
sbb
sbb
push
pushl
add
pop
hlt
jg
fsubr
pop
adc
in
ret
sub
mov
test
subl
dec
test
movsb
fistpll
hlt
lcall
das
adc
pusha
mov
jnp
and
add
push
adc
push
push
pop
pop
xor
cmp
fs
push
push
jne
inc
lods
cmpsb
icebp
ljmp
fwait
in
jge
adc
xchg
xor
pop
xchg
mul
or
das
adc
repz
roll
test
iret
insb
adc
add
add
pushf
adc
jne
lret
in
fisubrs
and
cmp
mov
sbb
sbb
sub
pop
loopne
adc
sbb
js
stos
jp
push
xor
xor
in
and
dec
imul
add
jo
pusha
shlb
inc
mov
dec
pop
sbb
data16
scas
in
cltd
xor
je
jl
outsl
inc
jge
sub
addr16
xchg
push
call
int3
mov
sub
je
test
data16
and
aaa
orb
pushl
mov
pop
lahf
test
mov
cmp
or
xchg
test
mov
cmp
adc
mov
testl
jbe
movups
outsl
inc
jno
in
and
cmp
adc
inc
scas
and
push
push
push
rclb
lock
cld
pop
lcall
inc
push
mov
add
push
inc
shrb
jmp
add
push
insl
imul
or
loopne
push
sub
cmp
int3
cmpsb
xchg
adc
or
popf
sbb
sahf
push
mov
add
cmp
and
lret
pop
cs
or
pop
ret
mov
les
pop
je
fmull
adc
bound
mov
pop
sbbl
fisttpll
and
mov
icebp
sti
movb
push
sbb
add
inc
imul
pop
mov
hlt
dec
dec
xor
cmpsl
mov
cmp
xchg
mov
lea
orb
add
in
decl
in
stc
and
daa
je
cmp
sub
adc
and
call
push
add
pop
and
ret
sbb
inc
lea
cmpsb
aas
and
lret
xor
and
ja
and
mov
imul
cli
push
jle
dec
add
sbb
sbb
and
jne
in
popa
adc
inc
mov
pusha
movsb
or
push
inc
bnd
int
insl
jmp
and
mov
shll
fnstenv
add
ds
push
or
or
call
shl
rcrb
adc
add
pop
icebp
ficompl
xchg
mov
mov
and
add
addr16
adc
es
lret
cwtl
repz
or
insl
loope
enter
arpl
loope
imul
addb
pop
loope
mov
dec
repnz
dec
fmull
iret
ret
fwait
inc
mov
rorb
pop
lods
push
js
popa
icebp
pushf
pop
xchg
fadds
ss
cli
cld
mov
pop
lret
cmp
ss
push
add
inc
mov
iret
push
fildll
sbb
outsl
push
and
sub
sub
inc
jo
mov
add
push
cmp
cli
fs
adc
ret
mov
aam
xor
jae
mov
mov
test
add
mov
or
add
jl
cmp
or
pop
cwtl
pop
mov
sub
inc
jns
jo
pop
push
push
adc
xorps
push
test
and
je
mov
cwtl
pop
ficomps
xchg
push
push
test
hlt
sahf
fisttps
or
cmp
adc
jo
shll
jg
sub
mov
adc
mov
pop
mov
cmp
xchg
xchg
sub
out
fistl
shrl
ds
add
jbe
in
ficoms
inc
movsb
rclb
testb
bnd
mov
js
rorb
sub
or
add
or
add
lock
clc
lret
scas
jmp
adc
aaa
popf
dec
sahf
jp
sub
jne
jle
pusha
adc
adc
enter
pop
xor
mov
fsts
pushf
shl
fwait
stc
cwtl
mov
in
sub
jns
cwtl
cwtl
fcompl
adc
fdivs
fcoml
pop
mov
insb
jp
out
push
mov
rolb
pop
pop
js
sbb
jmp
andl
lret
dec
xchg
xor
push
xchg
mov
fadds
xchg
adc
mov
xchg
aas
jmp
rolb
push
inc
push
or
xchg
cmpsb
push
sbb
pop
sub
mov
jmp
pusha
nop
push
ret
inc
pop
jnp
scas
adc
cmp
sbb
jae
out
pushf
mov
mov
push
inc
sbb
inc
mov
divb
dec
push
clc
cmp
adc
je
ret
inc
dec
adc
sub
mov
cmpsb
hlt
xchg
mov
mov
jle
or
xor
dec
je
mov
or
pop
js
test
add
fsubrs
jnp
push
sbb
dec
pop
je
fldl
pop
push
push
pop
add
add
jle
mov
inc
pop
cmp
adc
jne
out
stc
jns
divb
or
jne
push
js
lahf
or
jne
or
xor
lods
push
fldz
hlt
push
call
andl
mov
or
jns
push
inc
push
xchg
mov
xchg
pop
xchg
es
ds
fcoml
mov
int
subl
arpl
test
mov
push
adc
fstl
jecxz
inc
outsl
push
sub
mov
movsl
lea
movsl
or
adc
mov
fadd
addr16
rolb
fmuls
out
lds
add
enter
dec
cmp
mov
jne
ss
or
or
sbb
daa
or
mov
ret
pusha
mov
pop
cmpsb
add
jp
ret
jne
cmp
inc
ja
insl
push
repnz
or
fimuls
mov
fmull
movsl
or
and
add
sbb
add
push
and
lods
rorb
xchg
imul
mov
add
fmull
add
scas
lret
add
adc
mov
cmp
nop
adc
enter
outsb
dec
fsubl
or
push
pop
fcmovbe
jb
outsl
sbb
adc
push
jge
imul
je
pop
aad
test
ja
fldt
pop
push
push
add
cmp
inc
adc
jecxz
lds
fisubs
ljmp
mov
add
and
xchg
out
adc
das
push
push
mov
pop
adc
sub
out
add
push
addl
shlb
subb
xor
lea
cmp
add
push
lds
push
and
ja
sub
and
push
xchg
ltr
lock
mov
and
arpl
test
or
add
dec
clc
lods
xor
and
push
and
out
or
jbe
movb
outsb
pop
pusha
mov
adc
in
or
mov
sbb
jno
add
sub
leave
insb
inc
push
mov
pop
add
adc
enter
aas
sbb
mov
lods
push
or
xor
or
or
add
or
imul
test
fmuls
sub
pop
jl
and
loopne
movsb
and
push
dec
les
cltd
bound
movsb
leave
enter
xchg
or
pop
sub
add
add
fisttpll
ror
leave
leave
leave
leave
enter
leave
leave
leave
leave
mov
out
rol
icebp
push
and
and
icebp
mov
sbb
pop
std
sub
xor
sub
mov
sbb
orl
leave
in
stc
rcrb
popa
sbb
add
dec
addl
cld
leave
cmp
cs
loop
mov
mov
sti
pop
or
cmp
jle
or
or
loop
daa
fidivrl
mov
and
out
cwtl
or
add
inc
lock
mov
repz
sti
jle
movl
pushf
loope
jae
cmp
fnstcw
push
add
lcall
loop
adc
dec
push
rcrb
add
jl
push
sbb
int3
inc
jb
push
or
xor
and
xchg
mov
call
xchg
lock
lock
pop
add
add
mov
mov
jo
iret
or
mov
sub
xor
xor
xor
loop
lods
push
mov
push
mov
mov
popa
sub
pop
adc
popf
push
add
stc
mov
dec
mov
stc
push
enter
insl
push
push
lods
or
outsb
mov
jl
cmp
into
orl
dec
xchg
gs
jbe
mov
subb
and
int
fmull
ja
mov
clc
lret
and
lock
pop
pusha
xchg
mov
cmpsl
or
in
add
sub
inc
lods
fmuls
push
rcrl
xchg
push
xlat
dec
jmp
sub
in
dec
ret
jbe
pop
fdivs
mov
inc
mov
ret
sbb
fucomp
fs
shll
mov
cltd
dec
pop
ret
cmpsb
sbb
lret
fcoml
test
mov
xor
add
sub
inc
adc
fstpt
orb
jae
pushf
mov
cmpb
push
pop
jle
rclb
into
or
cmp
mov
adc
pop
pop
push
mov
je
xchg
push
inc
cmp
jmp
ret
sub
jns
pop
xchg
jno
jmp
mov
lock
cs
sbb
test
push
jge
mov
mov
fcoms
push
leave
int3
and
stos
enter
mov
push
popa
mov
mov
adc
jo
or
call
cmp
add
mov
out
jbe
ror
jecxz
sub
push
and
inc
movl
inc
dec
sbb
clc
adcl
lahf
pop
push
jbe
into
jge
xchg
push
aas
pop
lea
sub
movsb
fldl
andb
orl
cmpsb
mov
dec
mov
fdivs
lock
push
mov
aad
fnstsw
sbb
add
ret
dec
clc
push
sahf
inc
into
inc
or
push
push
ja
jge
mov
loopne
cs
jecxz
les
js
in
jge
sarl
adcl
dec
aaa
enter
jbe
imul
icebp
sub
jle
and
inc
adc
sbb
cmp
test
ret
add
icebp
pop
mov
in
mov
pop
push
mov
lds
xchg
loope
scas
or
inc
mov
ror
pop
xchg
xchg
lock
lock
push
sbb
pop
mov
lods
xchg
cmp
xchg
sub
int
fistpll
mov
pop
movsl
xor
mov
mov
dec
mov
arpl
stos
adc
mov
mov
and
mov
call
xchg
push
jmp
pause
dec
add
mov
loope
hlt
setne
mov
fwait
in
adcb
lock
fcoml
jbe
fildl
inc
lea
rolb
imul
push
add
subl
or
push
pop
xor
adc
add
pusha
adcl
pop
mov
xchg
mov
movsb
pshufw
mov
aad
dec
cmp
lods
cmp
pop
imul
xor
pop
jne
add
das
pusha
aaa
or
and
jg
mov
aam
ss
xor
jo
pop
outsb
cmp
cmp
pop
pop
and
adc
popa
inc
mov
sub
mov
xor
subl
or
mov
imul
loop
fidivs
xchg
jl
pop
adcb
adc
pop
dec
mov
mov
sbb
or
push
data16
loopne
sbbl
add
shlb
jno
nop
out
lret
sbb
pop
adc
daa
ret
or
adc
repz
pop
push
adc
es
mov
add
iret
cmp
xor
inc
push
jo
jg
clc
fcmovnu
sbb
mov
dec
jl
cmc
fdivr
test
ret
xchg
push
mov
xchg
loope
mov
push
sub
add
dec
aad
rorb
inc
adc
pop
clc
mov
jnp
adc
shll
mov
add
add
fs
mov
cwtl
sub
jmp
and
inc
movsl
fwait
mov
lea
pusha
test
cmpsb
xor
bound
scas
fdivs
cmpsl
jo
or
mov
xor
popa
ret
nop
in
mov
js
add
adc
negl
or
lods
pop
add
push
inc
sbb
sub
test
xor
xchg
push
stos
mov
mov
adc
aad
inc
ljmp
or
sub
and
cli
and
jp
fisubl
push
adc
clc
popa
jnp
mov
ljmp
sbb
jg
xchg
icebp
cmp
xchg
push
push
test
outsl
add
mov
sahf
sbb
jne
cmpsl
clc
jno
in
ja
test
mov
push
lock
add
out
mov
jne
inc
inc
negb
push
shll
cld
js
xchg
or
fdiv
sbb
les
mov
rcrb
mov
cmp
cmp
in
pop
popf
xor
lahf
inc
sbb
test
dec
test
or
js
and
dec
cmpsb
mov
inc
pop
lock
jne
loope
inc
sahf
ja
inc
inc
mov
push
repnz
push
add
aam
inc
or
push
pushf
or
jmp
jmp
pop
in
adc
jbe
pop
orb
test
mov
mov
movsl
ja
clc
or
js
sbb
sbb
and
popa
inc
jns
inc
lcall
ds
add
filds
nop
mov
adc
jmp
jmp
push
insb
inc
cmp
adcb
and
inc
jmp
in
lds
xchg
xchg
sahf
sahf
je
ret
adc
js
xchg
outsb
lods
mov
sub
rolb
xchg
xor
add
cltd
push
std
in
ljmp
push
cmp
lods
mov
cltd
cmpb
jo
pop
mov
js
enter
outsl
sub
movsb
jb
xor
inc
movsb
fiadds
mov
or
mov
or
push
adc
sahf
repz
push
jbe
and
push
sbb
inc
inc
mov
dec
push
mov
mov
mov
and
lods
push
fs
lods
add
jmp
push
inc
pop
jo
xchg
pop
cmp
in
je
sbb
test
pop
cmp
xchg
xchg
or
mov
push
push
add
jo
jno
xchg
pop
and
fs
xchg
int3
pop
lock
std
aam
shl
adcl
dec
gs
aad
sbb
xor
pop
insb
pop
inc
or
out
sbb
pop
lock
sub
loopne
shll
cld
das
stc
test
xor
push
int3
std
sbb
sbbl
shll
dec
and
push
mov
mov
adc
lock
xchg
test
mov
sbb
push
sub
and
mov
test
and
daa
and
xchg
addl
cmp
inc
ret
test
cmp
dec
orl
lahf
push
mov
inc
mov
jmp
das
jle
and
fdivs
pop
sub
imul
addb
xor
icebp
insb
loop
mov
jbe
inc
jl
mov
rclb
clc
cmc
sbb
adc
repz
pop
mov
fwait
sbb
add
dec
pop
and
jmp
out
and
mov
mov
fisttpl
cli
leave
cmp
pop
sbb
push
push
and
jge
neg
inc
test
shlb
and
ja
js
call
cmp
sbb
pop
and
xchg
sub
add
push
add
push
sbb
push
dec
adc
pusha
in
int3
ret
xor
or
adc
pusha
jb
lahf
mov
loopne
push
sahf
repnz
out
push
xor
cs
stos
push
and
outsb
stc
addl
faddl
jno
mov
int3
add
cmc
sbb
stos
add
js
fadds
aaa
mov
dec
int3
dec
push
sbb
sub
adc
push
popf
outsb
and
or
imul
outsb
cli
xchg
pop
leave
das
pop
fwait
lret
adc
fwait
jne
sbb
add
push
pop
jnp
mov
or
and
push
jo,pn
rorb
dec
inc
push
jae
addr16
scas
mov
xchg
mov
sbb
fstps
sbb
adc
and
add
and
jae
ja
in
sbb
mov
and
sub
leave
xchg
cmc
and
icebp
lret
mov
hlt
mov
ret
mov
jb
xchg
mov
leave
cmc
sbb
loopne
incl
sub
shll
inc
cmpsb
mov
cmp
jne
xchg
rolb
push
ja
fs
fstpt
jb
fsubr
push
mov
jp
lock
loop
punpckhbw
add
loope
sbb
cltd
mov
inc
jecxz
adc
jns
je,pt
or
add
jle
jbe
push
sbb
push
sbb
inc
scas
sti
mov
gs
inc
cmp
jb
push
les
cmc
pop
pop
pushl
inc
xchg
test
data16
into
push
xchg
push
push
dec
mov
or
dec
lods
add
push
rorb
sbb
inc
xchg
or
jb
jb
cmp
loop
and
push
cld
test
fnsave
xchg
aam
push
shlb
lcall
mov
inc
cmp
jae
mov
lea
or
adc
sbb
adc
aaa
das
xchg
mov
cmp
jne
sub
pusha
cmp
dec
adc
inc
loopne
add
jns
push
add
and
push
sub
aas
rclb
jmp
fistl
mov
roll
aad
jo
cmpsb
test
jb
cmp
or
imul
movsbl
add
add
or
pop
icebp
jp
push
cmp
mov
lock
or
cmp
je
jg
lcall
cmpl
mov
sbb
and
fbld
jne
and
scas
imul
loop
stos
jne
jmp
mov
enter
sbb
into
nop
dec
pop
sub
jo
rolb
pop
cmpl
aad
push
jns
dec
jb
les
cmp
lea
adc
pusha
mov
xchg
inc
push
int
jo
adc
add
jge
push
je
adc
incl
mov
subb
mov
or
dec
or
xor
adc
jbe
cmp
or
aad
outsl
pop
arpl
xor
adc
cmp
dec
sub
loopne
lcall
sbb
add
and
les
adc
xorb
rclb
test
roll
sbb
mov
add
or
jns
aas
fistps
inc
cli
repz
bound
and
insl
clc
push
adc
push
fnstenv
out
out
cmp
sbb
xchg
hlt
fsubl
pop
fsub
pop
fsubrp
push
mov
add
inc
push
cwtl
jge
mov
sub
xchg
outsl
add
gs
xor
dec
add
or
sbb
fsubl
mull
aam
adc
adc
dec
sti
je
dec
je
add
es
pop
adc
mov
sbb
add
ss
bnd
adc
push
mov
test
push
aad
sbb
ds
mov
xchg
int
iret
mov
cld
push
adc
and
xor
or
dec
and
sarl
pop
dec
fisubs
subb
sti
mov
mov
negb
sbb
fldt
aam
sbb
pop
clc
in
in
clc
testl
adc
add
pop
lea
ja
repnz
sub
pop
repz
pop
or
adc
xor
cmpl
sbb
and
push
push
inc
sahf
pop
adc
sbb
adc
add
xor
leave
push
lret
lds
mov
int3
sbb
mov
and
nop/reserved
add
sbb
repnz
and
xor
or
xor
and
and
dec
inc
das
sub
and
sub
das
fwait
push
jecxz
adc
mov
and
push
inc
mov
mov
cmp
fs
and
jl
pop
jmp
mov
push
dec
fimuls
push
xchg
repz
fimuls
and
xor
lock
in
dec
jbe
adc
sbb
xchg
and
cmp
in
ret
sub
push
nop
out
or
add
or
repnz
repnz
movntq
push
mov
push
notl
test
push
pop
repnz
mov
push
je
in
or
daa
stc
pushf
mov
and
sub
pop
addb
push
or
xchg
and
sbb
mov
adc
cmp
out
push
jecxz
add
cmp
repz
imul
iret
lea
sahf
out
lcall
jns
out
outsl
adcb
out
aad
testl
dec
sbb
cmp
jae
repz
nop
mov
cmp
lods
push
clc
add
dec
push
sub
mov
adc
push
lea
push
lock
or
mov
and
inc
test
push
lods
add
or
dec
mov
sub
mov
rcll
xorl
push
leave
in
add
stos
movsl
and
inc
sbb
jl
and
inc
loope
bswap
cmp
push
jae
inc
sbb
cmpsb
jl
mov
or
roll
or
cmp
xchg
sbb
pop
and
and
addr16
popa
push
push
jg
push
sub
add
adc
cmp
int
push
test
mov
mov
cmpl
and
call
push
and
shl
push
enter
push
jmp
out
enter
jg
jo
inc
inc
and
or
cwtl
mov
cmp
imul
cmp
cmp
mov
adc
xor
dec
add
js
add
push
lods
push
in
fwait
sbb
adc
add
cmpsl
loop
add
xchg
mov
mov
and
enter
xor
adc
and
and
and
lret
lret
pop
sub
inc
imulb
push
xor
ljmp
pop
into
sbb
loopne
jo
nop
sub
lods
jmp
adc
or
and
push
pusha
test
xchg
pop
push
in
or
adc
test
xchg
clc
mov
push
mov
or
enter
add
shrl
adc
adc
mov
add
push
add
ret
stos
ret
test
lods
in
dec
adc
pushf
imul
mov
das
mov
js,pn
mov
jb
cmp
xor
test
or
add
movsb
mov
add
or
or
push
bound
test
dec
scas
xchg
add
or
cltd
push
dec
adc
inc
pop
sub
and
fwait
lds
inc
insb
mov
jns
imul
inc
push
inc
je
push
mov
movsb
jb
pop
mov
cmp
sbb
sub
sbb
nop
push
sbb
add
adc
jl
push
in
push
and
jp
add
mov
mov
mov
push
push
push
leave
xchg
adc
orb
inc
sub
sub
mov
mov
adc
pop
dec
xor
adc
jbe
sbb
or
cmp
stos
cmp
icebp
dec
movl
inc
lock
test
and
insl
adc
adc
jns
add
inc
jb
xorl
pop
mov
arpl
sub
outsl
jo
and
ja
xor
mov
inc
loopne
imul
fcoml
xor
push
addb
xor
loopne
xchg
adc
add
dec
shlb
jne
pop
ja
dec
dec
or
add
pushf
in
cltd
or
or
jbe
loope
subl
sbb
add
pop
jno
movsb
popa
push
xchg
enter
nop
or
movsl
xchg
xchg
and
adc
and
jns
adc
inc
in
pop
pop
push
adc
mov
jno
pusha
test
add
test
and
loope
sub
hlt
xchg
push
add
leave
scas
ljmp
jno
bound
cmc
adc
add
cmc
or
cmp
xchg
lods
fs
cmpsb
mov
add
sbb
test
or
leave
adc
hlt
push
push
adc
mov
testl
pop
enter
add
mov
cmp
mov
pusha
or
sbb
add
push
in
inc
or
scas
and
sub
mov
inc
xor
test
push
popa
xchg
imul
mov
push
jno
cltd
int3
hlt
adc
add
aas
sub
into
int
or
aam
fwait
addb
mov
push
cmc
test
movsb
cmp
inc
cmpsl
add
adc
or
push
or
pusha
rcll
sbb
stos
push
inc
notb
call
lods
rclb
add
and
lds
sbb
push
mov
cmpsl
sub
inc
andl
mov
sbb
jo
cmpsl
lahf
sbb
mov
push
add
sbb
out
mov
cmpsl
push
pop
jo
repz
pop
mov
loop
gs
mov
and
or
iret
or
clc
jle
push
xchg
nop
loopne
ret
cmp
jmp
repz
adc
inc
sbbb
and
insl
mov
sarl
adc
mov
add
je
dec
rorl
rorl
stos
dec
test
dec
in
add
xchg
pop
aas
mov
pop
mov
pop
fstpl
xchg
pop
xlat
sbb
insl
adc
or
call
add
les
hlt
xchg
xchg
mov
pop
pop
dec
push
add
sahf
cmp
xchg
add
jge
sub
jge
pop
adc
ret
dec
mov
add
push
add
xorl
push
ss
std
outsl
lahf
push
pusha
push
icebp
add
lods
xchg
fs
add
ss
ret
mov
mulb
dec
popf
mov
sbb
cmp
sbb
and
lret
call
mov
mov
fldl
aaa
sbb
push
fmull
adc
rcr
sbb
adc
sbb
push
cwtl
jl
ss
add
mov
dec
js
rclb
push
push
daa
pop
cwtl
cmp
cli
addb
arpl
push
outsb
imul
jp
or
inc
add
xchg
sahf
and
pop
pop
arpl
test
dec
shlb
add
pop
aas
add
outsl
mov
sbb
test
xchg
mov
add
cmp
jo
xor
adc
or
push
loop
jl
pusha
mov
push
sbb
add
loopne
xor
adc
push
and
inc
adc
mov
xchg
fisubl
ja
arpl
sbb
pop
and
cwtl
shrb
adc
cmpb
add
push
jmp
insl
mov
pop
push
cmc
dec
scas
nop
and
jle
sbb
lds
mov
push
lea
shl
xor
fsubrl
dec
sub
je
sti
popa
xchg
add
loope
in
je
push
addl
and
xor
mov
pop
js
ret
sarb
mov
popa
jne
mov
jge
pop
loop
adc
pop
call
test
nop
js
mov
sbb
xchg
fisubs
adc
push
stc
mov
lcall
and
pusha
aam
dec
fwait
shll
imulb
ret
or
adc
in
idiv
or
shr
and
cli
inc
jl
or
sbb
popa
jp
sti
scas
push
lcall
je
mov
mov
push
jg
loope
add
inc
jmp
movb
mov
push
cltd
pop
test
mov
sahf
pop
pop
sub
cmpsl
pusha
shlb
or
mov
inc
xchg
pop
loope
les
in
and
test
fildl
lret
and
lcall
loope
xchg
cwtl
movzwl
adc
adcl
add
dec
ds
lret
rolb
lock
sahf
dec
testl
adc
into
inc
or
dec
add
cmp
mov
lods
sub
cmp
daa
cmp
fdivs
mov
inc
jmp
scas
ss
and
fcoms
outsl
jne
mov
xchg
js
pop
andl
mov
jnp
inc
popa
push
test
add
int
hlt
popa
aaa
xchg
and
stos
xor
pop
ret
or
add
pop
jp
inc
push
fistpll
adc
mov
les
shlb
insb
mov
or
lret
add
push
jb
dec
jl
std
je
dec
stos
sbb
aam
test
or
in
adc
xchg
je
mov
inc
sar
jnp
sub
adc
sub
xchg
mov
pop
loop
loopne
jg
push
pop
push
push
adc
add
add
clc
rep
fdiv
push
pop
push
adc
call
lret
push
aas
int3
jne
push
cmpsb
subb
xchg
mov
mov
cli
cmp
into
fadd
into
ret
mov
jns
xor
rolb
rorb
mov
dec
daa
xchg
in
sbb
enter
push
push
in
imul
sub
sbb
sbb
pusha
out
les
mov
mov
mov
push
jbe
adc
pop
inc
imul
fsubp
adcb
jbe
dec
inc
dec
inc
and
pop
fcomps
and
mov
sbb
sbb
fsubrl
push
fsubrs
and
stos
in
and
movsl
or
pop
pop
jno
adc
in
mov
fidivs
sbb
test
jo
sub
pushf
mov
inc
dec
in
je
enter
push
add
cltd
sub
in
inc
scas
enter
mov
in
or
es
mov
dec
cwtl
pop
nop
mov
lcall
cmp
addb
js
dec
xor
and
xor
mov
fistpl
outsb
daa
daa
daa
xchg
mov
dec
je
in
sub
pop
push
in
pop
push
mov
sub
mov
jne
ret
sub
jmp
loopne
sub
hlt
int3
popf
aam
xorl
mov
mov
add
stc
icebp
mov
mov
mov
imul
fistl
xchg
add
das
push
ret
enter
int3
push
add
mov
fwait
adc
jl
mov
test
out
outsb
or
mov
pop
mov
xor
fmull
mov
mov
mov
cli
inc
or
lret
fstl
push
rcr
loopne
test
inc
jo
fstpl
add
in
and
idiv
cmp
aad
leave
ret
in
call
push
loope
rolb
and
adc
mov
jl
aad
push
lret
push
pop
mov
cmc
pop
mov
gs
mov
sub
inc
popa
lret
rol
adc
pop
push
inc
and
adc
scas
push
lea
cmp
or
arpl
insb
sbb
adc
mov
push
jg
or
repz
or
dec
cmp
fwait
rorl
cmp
add
mov
inc
xor
jo
daa
rclb
mov
mov
aaa
lods
mov
repnz
sub
dec
or
push
dec
mov
add
and
jbe
and
inc
loop
popf
push
movsb
aaa
cltd
orl
mov
loope
jmp
sub
sub
sarb
sub
mov
xor
inc
rclb
cmp
les
cmp
cmp
inc
gs
fsubrs
xchg
dec
aam
data16
xchg
xorb
xor
xchg
in
push
cld
mov
inc
or
int3
and
shrl
pop
adc
popa
ds
pusha
add
inc
and
pop
sub
das
inc
pop
adc
add
jns
inc
sahf
add
push
inc
sbb
es
dec
adc
jmp
push
es
cmpsb
cltd
adc
pop
es
lahf
xchg
fwait
loope
pop
fsubrs
add
or
sub
mov
pushf
dec
mov
sbb
push
adc
xor
cmpsb
xchg
inc
adc
or
in
push
inc
rorl
cs
adc
aas
mov
mov
out
ret
ja
pop
add
dec
and
jmp
add
jae
fisttps
movsb
lret
movsl
xchg
call
loop
insb
add
jl
dec
insb
bnd
lahf
popa
push
movsl
sub
cmp
ja
fsubs
pop
sarb
lret
jge
jne
outsb
fstl
sbb
icebp
loope
jge
insb
movsbl
fidivrl
cmp
lret
xchg
xchg
stc
xor
jmp
dec
inc
jo
adc
or
xorb
add
out
pop
adc
cs
push
pop
adc
or
xchg
jmp
aad
subps
push
or
jp
fwait
pop
and
push
inc
push
test
add
mov
push
add
inc
out
cs
jg
mov
xchg
sbb
and
mov
sahf
sbb
mov
cmp
pop
ret
aaa
xor
sbb
cmp
jmp
or
call
mov
lods
rorb
loopne
push
sbb
push
lcall
xor
data16
out
es
add
jge
inc
sbb
xor
add
rcll
adc
lods
mov
iret
push
pusha
or
xor
imul
or
sahf
pop
pop
cmp
adc
jno
imul
or
push
mov
add
enter
xchg
mov
inc
mov
ret
icebp
movsl
jne
or
ss
push
jo
ficoml
lret
dec
sub
adc
xchg
adc
xchg
push
pop
jo,pn
and
mov
enter
popa
push
cmc
clc
pop
jo
xchg
add
enter
adc
pushl
aaa
or
fucomi
and
add
arpl
and
lea
xchg
adc
xor
pop
mov
cbtw
cltd
push
jns
inc
orl
nop
mov
add
push
pusha
leave
hlt
mov
xor
jge
popl
popf
sub
cmp
test
adc
outsb
subb
inc
sbb
shrl
fwait
rcll
in
cmp
or
push
mov
fcoms
sbb
loopne
inc
cmp
inc
out
es
add
mov
or
enter
aad
push
es
xchg
xor
or
filds
xchg
and
mov
das
inc
clc
or
xor
mov
mov
fstpt
push
mov
jge
mov
pop
adc
sbb
mov
mov
mov
mov
pop
lahf
cmp
sbb
adc
stos
jb
rclb
cmp
rclb
cmp
pop
cmp
in
cmp
dec
cmp
sub
pop
cmp
sub
jns
lret
pop
cmp
adc
dec
stc
or
ret
rorl
repnz
and
xchg
loopne
mov
in
aad
loop
sub
cltd
adc
pushf
insl
xor
and
int3
aas
inc
sahf
inc
pop
or
sbb
leave
mov
inc
mov
inc
js
push
test
insl
sub
lock
add
push
sub
inc
mov
xchg
mov
jle
cmp
aaa
pop
add
aad
sub
mov
loopne
or
jl
cmp
jne
cmp
jb
adc
cmp
or
sub
mov
loope
sbb
or
sbb
adc
insl
sub
sub
inc
add
sbbb
shl
cmp
sbb
cmp
sbbl
imul
daa
les
sub
loope
lods
add
add
or
mov
pop
xchg
mov
xchg
pop
or
and
add
xchg
and
dec
and
or
mov
dec
leave
and
or
andl
add
or
inc
icebp
lock
xlat
mov
pop
xor
xchg
in
add
cmp
mov
and
push
lret
les
push
xchg
popa
loope
adc
jl
jecxz
mov
mov
mov
mov
mov
cmpsl
stc
lock
ja
push
dec
xchg
xchg
pop
in
stc
in
fadd
pop
inc
or
mov
jmp
pop
sub
xchg
or
sbb
or
popa
xor
inc
stc
inc
cs
or
pop
ret
outsb
inc
hlt
cmp
subb
dec
or
daa
push
mov
nop
adc
xchg
xbegin
or
lock
movsb
xchg
dec
or
xchg
insb
imul
add
rorl
scas
je
mov
mov
scas
pmulhw
ss
and
aam
pop
ret
cmp
push
jp
ja
pop
dec
adc
fcom
pop
adc
inc
push
in
gs
lcall
sbb
add
daa
outsb
test
add
push
adc
xor
sbbb
sbb
test
int
push
push
mov
mov
add
fadds
and
and
rol
jae
lahf
xchg
aas
rolb
cmpsl
test
or
xchg
subl
push
add
push
pop
mov
sub
jmp
xor
test
or
loopne
jo
xor
mov
loope
pop
inc
in
je
xchg
movsl
ss
xor
inc
ret
dec
sub
outsb
and
mov
rolb
div
add
fdivl
inc
jmp
cmpl
jnp
mov
rorb
adc
push
xchg
and
in
in
jmp
cvtdq2ps
jo
xor
fnstcw
or
or
inc
xor
add
push
and
adc
xchg
adcb
nop
adc
in
or
or
xor
inc
xchg
mov
mov
dec
fdivl
sub
ljmp
push
lods
mov
sti
pop
lret
push
nop
and
add
roll
mov
into
shr
add
push
cltd
jb
or
pop
movsb
sbb
rcll
sub
adc
mov
add
pushl
shlb
or
addl
cmp
xor
ret
dec
subb
dec
push
pop
dec
or
jl
in
inc
adc
sub
xor
mov
jae
mov
push
or
add
jl
xlat
xor
pop
out
and
and
mov
ror
add
adc
xchg
cli
push
fdivl
js
pop
nop
roll
in
lret
push
add
jmp
pop
push
jge
lock
xor
or
test
push
stc
je
fstps
popa
and
dec
or
xchg
rcrb
xor
mov
dec
mov
sub
aam
pop
add
and
lods
xchg
aam
mov
push
mov
cmpl
clc
pusha
pop
push
push
or
xchg
sbb
xchg
xor
mov
arpl
push
cli
mov
jb
add
mov
and
add
ret
jg
mov
sbb
xor
adc
sbb
gs
add
icebp
or
out
pop
outsb
sub
adc
sub
xchg
or
xorl
sbb
sub
sub
xor
cmp
xor
dec
mov
pop
or
push
pop
pop
fbld
cmp
outsb
rorl
xchg
or
push
xor
mov
xchg
lret
js
mov
push
jge
imul
movsb
pop
addl
add
jns
pop
mov
adc
testb
mov
xchg
out
std
rcrb
pusha
or
add
dec
lret
xor
inc
jnp
inc
push
orw
push
sub
jns
jmp
sti
es
insl
cmp
add
mov
sarb
push
mov
sub
add
xchg
push
sub
mov
jae
aad
fsubs
add
xchg
and
sbb
stos
and
js
lret
sub
and
push
pop
jno
js
adc
mov
pop
in
adc
inc
or
add
popa
pop
fisttpl
shll
push
out
jmp
add
and
inc
add
add
mov
jo
lret
push
xor
insl
call
mov
sbb
or
jmp
push
xor
pop
push
inc
aad
in
in
mov
xor
jbe
push
pop
xchg
roll
repz
scas
adc
pop
stos
adc
adc
mov
dec
rcr
into
lahf
cmpsl
push
fcmovnbe
aad
stos
je
mov
mov
shr
lret
movsl
inc
push
cmp
sarl
out
ret
dec
and
or
clc
mov
jbe
fs
mov
movl
pop
testb
ret
push
xor
movsb
adc
dec
sub
stos
jae
in
sbb
mov
dec
lods
sub
xchg
inc
adc
dec
jmp
pusha
inc
shr
push
incb
ret
sub
xchg
pop
sub
and
addl
inc
enter
dec
aaa
les
in
jl
mov
push
enter
incl
addb
inc
and
cmp
add
pop
xchg
dec
sbbl
sbb
icebp
test
shl
jecxz
stc
adc
xor
insb
and
xchg
sub
push
adc
dec
jne
dec
push
in
push
xchg
test
movsb
sbb
sub
popf
testl
je
or
repz
inc
sbb
in
sub
adc
test
imul
sbb
dec
dec
add
push
inc
push
test
xor
les
jg
dec
shlb
push
add
jo
in
sub
adc
pusha
ljmp
call
cmp
pop
and
dec
add
lods
jmp
adc
pop
je
pop
js
mov
pop
add
lret
sub
gs
roll
adc
xor
dec
ja
andb
leave
add
add
sub
nop
push
sbb
xchg
pop
adc
add
dec
add
pop
loope
xor
push
sahf
sbb
pop
and
pop
inc
mov
xorl
sbb
imul
or
jnp
jns
and
pushf
inc
push
sahf
push
test
sub
jmp
or
push
ficomps
push
mov
pop
sbb
jecxz
stos
push
mov
orl
mov
sub
outsb
pop
and
xor
mov
into
mov
sbb
imul
dec
addl
popa
dec
ljmp
popa
add
mov
clc
lahf
and
push
adc
and
mov
and
push
mov
sbb
adc
inc
sub
jno
sbb
in
cmc
inc
scas
sbb
push
mov
in
loop
popl
mov
push
and
or
inc
fwait
xchg
adc
push
test
add
pop
sbb
add
lret
xor
push
sbb
popf
or
adc
adc
adc
pushf
mov
cltd
jo
shl
dec
mov
lcall
sub
fs
sti
dec
jl
js
or
dec
jecxz
sub
xchg
push
sub
daa
enter
xchg
enter
or
or
lds
lock
je
push
mov
jmp
sub
stc
sub
dec
pop
adc
js
sbb
out
sbb
add
push
jecxz
add
dec
pop
inc
out
pop
add
inc
push
cmp
sbb
inc
sub
xor
ja
pushf
mov
xor
mov
push
inc
call
mov
jmp
add
mov
jns
push
jne
dec
pop
add
pop
inc
adc
inc
fucom
int3
push
and
xchg
in
cmp
movsb
sub
in
add
adc
rcll
jmp
or
sub
lock
push
xor
or
sbb
push
or
mov
add
mov
or
outsl
inc
and
push
cmp
jb
js
pop
fwait
or
out
jo
in
sub
sbbl
ja
into
cmp
pusha
inc
add
or
insb
pop
push
mov
cld
add
mov
ds
xchg
jne
ljmp
xor
add
mov
xor
shrb
inc
pop
inc
adc
push
jns
sarl
mov
sti
lods
cld
cltd
push
sbbb
sbb
das
sbb
testl
mov
xchg
adc
pop
stos
cmpsb
push
and
insb
icebp
xchg
imul
inc
pop
and
sbb
call
incl
xor
sbb
jbe
mov
in
push
sub
add
mov
mov
repnz
cmp
pop
push
mov
dec
sub
sbb
xorl
movsb
rol
push
popa
add
out
or
pop
lock
mov
pop
push
adc
cmp
jmp
loop
rcll
aam
out
test
add
mov
clc
mov
push
or
mov
or
aas
cmp
je
stos
frstor
add
jmp
and
lock
jb
adc
push
jl
popa
lds
or
cmpsb
mov
xorl
add
mov
lea
ja
cmp
or
shrb
dec
je
push
addl
push
out
sbb
repnz
stos
icebp
cmp
cvtpi2ps
dec
inc
inc
mov
test
aam
cwtl
xchg
push
lea
mov
bound
jecxz
fwait
push
cltd
in
cmp
jb
ljmp
cmp
and
out
fildl
cmp
ja
cmp
xor
add
addl
xor
push
jne
mov
push
adc
mov
add
inc
test
pop
adc
sub
mov
jg
pop
xor
xor
add
into
leave
or
and
in
xor
sbb
cli
test
sbb
dec
js
push
call
cmp
cmp
or
pop
push
das
dec
add
mov
dec
jae
pushf
pop
fisubl
xor
jo
cmp
andl
pop
xchg
int3
push
push
push
mov
sbb
test
scas
mov
inc
fmuls
in
repz
inc
and
jae
arpl
dec
das
and
lea
or
xchg
mov
push
lock
inc
insl
adc
roll
xchg
push
cmpsb
add
or
sub
dec
cmp
dec
stc
push
inc
dec
mov
call
pop
insb
sti
les
lcall
mov
jge
xchg
or
xor
rorb
xlat
sbb
or
mov
jne
add
scas
add
push
dec
aam
push
hlt
dec
pop
adc
pushf
cmp
pop
fadds
adc
int3
sub
push
or
into
repz
cmpsl
psubusb
lret
mov
data16
lock
add
pop
xor
in
mov
inc
movsb
jns
clc
loopne
call
lock
pop
add
rorb
mov
cwtl
mov
jge
call
sbb
cmp
test
mov
stos
xchg
std
mov
inc
xchg
pop
repz
scas
inc
fcomps
ficoms
add
add
mov
jl
inc
jb
pop
mov
mov
adc
or
or
push
inc
mov
sub
pop
mov
bound
or
push
adc
mov
mov
add
pop
rclb
popf
dec
inc
mov
cmp
inc
lea
xlat
cmp
shll
mov
mov
xor
test
fstpt
rcr
decb
gs
or
inc
mov
int
decb
inc
scas
cmpl
pushl
sahf
or
xchg
popa
lea
jne
mov
bswap
adc
mov
jnp
clc
mov
sbb
mov
inc
lret
mov
lahf
roll
lea
sbb
jb
xchg
mov
jno
jo
xor
ret
add
pop
inc
and
fnstsw
je
mov
push
adc
or
add
inc
daa
fisttpll
add
cmc
incl
push
out
cmp
lea
addb
cmpsl
dec
jnp
xchg
jbe
stos
aam
cmp
mov
inc
bound
or
push
and
sub
jg
xor
shll
fsts
jbe
sarl
adc
adc
mov
aaa
lea
clc
sbb
add
xchg
test
pop
aas
dec
pop
push
adcb
in
aaa
mov
scas
mov
repnz
inc
mov
sub
add
cmp
movsb
sub
jb
xchg
pop
hlt
je
stos
loopne
pop
and
lret
mov
mov
xchg
fldenv
add
and
xor
imul
cmp
xchg
sbb
inc
fldcw
add
inc
xchg
loopne
shlb
xorb
jnp
and
in
adc
call
call
adcb
sub
pop
call
xor
jo
adc
loop
dec
testl
and
mov
adc
les
xchg
adc
mov
mov
mov
mov
push
js
xacquire
pop
adc
pop
jl
jl
mov
mov
push
jecxz
repz
xchg
les
push
dec
mov
in
sub
int3
out
mov
jbe
or
fadd
dec
pop
and
pushf
inc
jecxz
adc
jmp
push
and
out
adc
test
lcall
repz
sub
xchg
das
push
stos
or
adc
jb
cmpsb
lret
cmp
adc
test
sub
inc
pop
dec
cmp
xchg
push
push
in
or
gs
push
outsl
scas
or
sub
out
data16
jo,pt
out
pop
setge
je
movsb
and
xor
adc
lret
in
or
xorb
xchg
xor
xor
sahf
xchg
cmp
popf
popa
xor
cwtl
jne
xchg
add
sub
dec
sub
sub
nop
dec
add
bound
lock
or
popa
jb
mov
fimull
sub
jno
and
adc
les
push
notb
xor
add
outsb
mov
lahf
dec
sub
movsl
inc
dec
push
push
pop
in
pusha
movzbl
push
or
in
xchg
dec
movsl
push
in
jmp
jmp
aaa
mov
out
loopne
jbe
shrl
nop
push
inc
and
mov
cmp
adcl
inc
ret
mov
imul
fsubrs
jne
push
sub
ja
sub
or
sub
out
fwait
xorb
push
cmp
inc
pop
pop
cmpsl
mov
sub
popa
andl
add
push
mov
add
movl
rolb
xchg
outsb
adc
ss
lea
xor
popf
out
mov
dec
mov
sub
into
pop
jmp
dec
jp
cmc
mov
or
mov
inc
js
in
fistl
jno
movl
xor
dec
cmp
cmp
jbe
imul
addr16
jbe
mov
sbb
xor
adc
dec
pop
mov
cld
int3
popf
mov
mov
sub
push
or
sub
jmp
add
movsl
sbb
push
loopne
fldl
nop
icebp
cmp
iret
mov
ffreep
jne
push
aad
push
mov
inc
sub
dec
clc
jbe
fucom
into
push
mov
and
jl
les
mov
cmc
xor
xor
scas
jmp
xchg
cmp
jb
mov
sbb
fimull
push
cmp
sbb
gs
sbb
add
enter
add
add
push
jl
outsb
cmpsl
jge
and
adc
nop
les
push
adc
fwait
xor
aas
fwait
mov
lea
mov
jno
jo
or
or
xor
int
mov
or
or
push
mov
dec
pushf
int3
adc
sbb
fs
push
bound
sub
push
daa
repz
and
int3
or
jl
and
mov
sbb
movsb
push
pop
sbb
sbb
mov
mov
push
or
fcoml
add
mov
push
or
sbb
cld
adc
cs
aad
mov
or
add
stc
or
sbb
loope
lcall
push
rol
add
and
adc
cwtl
repnz
pop
or
sarb
rorb
aam
jo
push
fdivl
push
hlt
jne
shll
sahf
test
add
mov
test
pop
loopne
sbb
xchg
loope
sub
jmp
je
mov
lret
adc
or
fs
adc
jle
cmp
data16
mov
insb
xchg
xchg
adc
dec
addl
jle
sub
orl
sub
sbb
jle
loopne
add
into
push
adc
and
mov
out
sub
push
xchg
pop
outsl
aaa
sub
xor
ja
xor
add
test
xor
pop
rep
bound
dec
adc
fnstenv
popa
lds
xor
test
cmp
enter
enter
xchg
rcl
xor
int3
inc
pop
and
int3
andl
inc
jecxz
pop
pop
pop
mov
add
call
add
mov
test
popl
sub
adc
mov
out
mov
mov
je
notl
push
scas
mov
lea
push
hlt
movsb
jmp
or
ficoml
loop
mov
movsb
popf
dec
sarl
push
sub
loop
ljmp
inc
test
jmp
sub
and
jns
cmpsl
add
cmp
fs
xlat
pop
test
clc
aaa
scas
sub
dec
shlb
xor
into
test
mov
aas
pop
cwtl
inc
adc
xorl
jle
popf
fstpt
je
rorl
sub
dec
lock
sub
cmp
sbb
test
adc
movsb
push
jl
sarl
mov
mov
out
movsb
xor
movsl
imul
and
fdiv
push
mov
stos
std
and
add
add
mov
loop
adc
subl
mov
jmp
lcall
lods
sbb
or
js
pop
push
ret
add
inc
push
mov
mov
rolb
xor
pop
push
mov
popf
push
sub
mov
push
xor
shlb
mov
leave
mov
stos
fstps
rorb
fcomps
dec
dec
adc
rcrb
inc
mov
mov
xor
inc
dec
cld
cmp
push
incl
popa
jmp
and
rcrb
and
mov
lods
or
xor
das
movsl
pop
ret
fsubs
out
jbe
or
stos
inc
daa
dec
insb
jnp
xor
shrb
iret
imul
sub
adc
cmpsl
and
and
js
hlt
cld
sbb
call
cmp
movl
cmp
sub
sbb
js
add
jmp
push
js
movsb
js
dec
dec
dec
cmp
xlat
mov
mov
cmpsb
jl
cmpl
sub
push
add
mov
xor
jmp
mov
inc
add
sbb
mov
add
mov
push
hlt
mov
rolb
testl
adc
push
xor
clc
jmp
cmpl
jge
cmp
cmpsl
mov
and
and
cmpl
clc
push
push
push
enter
out
sub
pop
mov
lahf
add
adc
repz
mov
pop
out
ret
sub
mov
sbb
cmp
dec
call
in
sbb
jl
mov
or
enter
inc
sbb
xor
mov
sbb
add
shrb
sarb
mov
and
clc
xlat
push
clc
xchg
and
push
shr
or
mov
push
ret
sahf
not
fcmovb
mov
sub
or
cmp
dec
jmp
or
stos
sbb
icebp
pop
add
ss
dec
orl
lcall
lock
data16
ficompl
aam
fisttpl
xor
inc
jp
xchg
mov
loopne
sarl
stos
mov
push
dec
push
sub
outsb
dec
ret
jno
xor
cmp
ret
inc
xor
push
pusha
push
adc
push
add
mov
sbb
orl
aad
incb
into
add
mov
rclb
test
decl
mov
aas
push
mov
push
imull
sarl
test
xchg
int3
pop
scas
mov
shr
push
push
and
mov
mov
in
mov
mov
fiaddl
into
sahf
sub
js
xchg
enter
and
xchg
jnp
mov
leave
cli
insl
shl
push
aad
mov
lret
pop
dec
add
jb
aam
push
frstor
adc
adc
shlb
imul
out
cmp
push
push
pop
jp
sbbb
cmp
or
xor
or
subl
shl
xor
mov
lret
sub
or
adc
fsubrs
dec
punpcklbw
add
insb
stos
mov
sbb
cmp
pop
adc
adc
jmp
adc
loopne
add
lret
xchg
jge
adc
push
scas
inc
cmp
or
jo
out
es
push
loop
hlt
or
push
out
adc
cmpb
xchg
scas
adc
stc
xlat
lock
inc
cmp
stc
sbb
xchg
std
inc
cmp
repnz
mov
cld
mov
mov
sub
add
add
int
fdivrp
pop
pop
mov
sti
rep
movsw
push
jo
add
cld
movsb
mov
movsb
or
dec
or
mov
shr
mov
rcll
inc
mov
adc
movb
mov
pushf
mov
xchg
or
inc
nop
jo
out
in
push
mov
sbb
es
inc
cmp
and
movsbl
xor
push
ss
push
sti
add
jb
and
daa
push
cld
je
push
push
scas
lret
and
sbb
fbstp
nop
push
mov
jo
mov
divb
jge
xchg
mov
das
or
sbb
dec
test
xchg
push
push
insl
inc
outsl
inc
add
mov
nop
cmpb
push
push
scas
cmp
adc
fisttpl
cmp
pusha
or
push
cmp
int
test
sbb
mov
cwtl
dec
sbb
loop
mulb
add
sbb
inc
push
inc
pop
pop
push
lret
add
cmc
ss
add
xchg
loop
mov
push
cmp
push
push
cwtd
push
mov
loope
xor
mov
jg
and
mov
xor
inc
ret
mov
push
test
daa
insl
adc
adc
add
add
daa
daa
daa
add
daa
or
jmp
or
jmp
or
fwait
fwait
fwait
fwait
jno
jmp
push
jmp
por
jmp
fwait
fwait
fwait
pop
adc
pop
adc
push
adc
dec
adc
fwait
fwait
fwait
fwait
dec
adc
aas
pop
jmp
sbb
fwait
fwait
fwait
fwait
xor
jmp
sbb
es
fwait
fwait
fwait
fwait
and
pop
pop
jmp
and
ret
fwait
fwait
fwait
or
jmp
and
pop
hlt
out
ret
rorb
jmp
lea
test
inc
mov
mov
fiaddl
nop
jb
cmpsl
and
scas
jns
out
mov
iret
xlat
out
sahf
out
out
hlt
stc
iret
repz
incb
and
or
repz
and
sub
repz
repz
iret
repz
dec
push
pop
pop
bound
scas
repz
jb
add
add
push
pop
or
pushl
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
mov
repz
adc
sbb
add
mov
clc
push
rcll
iret
orl
mov
cmp
add
idivl
add
xor
mov
mov
mov
mov
shl
cmp
and
pop
in
jae
sub
mov
sti
clc
pop
mov
sbb
pop
movsb
xchg
rcll
jl
hlt
mov
mov
ss
mov
mov
lods
push
inc
cmp
jbe
cli
pop
ffree
cs
cmp
imul
push
fistpl
inc
test
fistl
add
and
sbb
pushf
shlb
arpl
rol
pop
ret
mov
mov
adc
movsl
les
sahf
mov
test
push
pop
sbb
iret
inc
sbb
test
mov
insb
mov
imul
and
cmp
sbb
push
pop
fldl
jge
ret
add
pop
ficompl
mov
push
scas
adcl
nop
mov
cwtl
pop
add
xor
xor
pushf
inc
cltd
add
enter
adc
push
int3
repnz
dec
and
loopne
rol
adc
and
inc
enter
mov
cmp
or
hlt
cmp
push
cs
je
mov
pop
xor
pop
mov
add
adc
push
mov
scas
add
int
or
addb
push
inc
or
adc
inc
push
pushw
dec
add
popa
add
jmp
inc
pop
arpl
imul
test
dec
scas
dec
repnz
xchg
mov
adc
xor
std
inc
pop
lock
jecxz
mov
adc
test
dec
mov
sbb
call
popa
sub
push
shlb
jl
loopne
cmp
push
push
mov
sub
push
daa
add
test
adc
mov
mov
pop
add
adc
add
pop
leave
push
mov
imul
movsl
inc
js
push
inc
mov
cmp
out
jle
mov
lock
xchg
mov
jge
je
inc
cmpsl
add
add
sbb
mov
or
inc
inc
lods
adc
and
sbb
push
adcb
xor
xchg
inc
cmp
pop
adc
jge
inc
xchg
fs
ret
mov
lcall
push
out
mov
icebp
lods
push
outsb
or
inc
das
mov
adc
push
paddb
mov
or
xchg
sub
js
xor
mov
jne
or
adc
mov
cmp
in
xchg
hlt
sbb
enter
mov
out
sbb
push
andl
sbb
mov
xor
dec
pushf
fmuls
lret
fisubrs
xor
flds
nop
add
or
cmp
add
jge
xchg
loope
sbb
mov
call
pop
adc
push
xchg
push
sbb
xchg
push
add
xchg
sub
xor
or
fdivrp
ljmp
cmp
push
adcl
lock
mov
dec
pop
inc
cmp
adc
pop
movl
dec
imul
adc
arpl
test
dec
iret
mov
call
mov
les
jmp
add
sub
es
sub
inc
scas
test
jnp
sbb
shl
sub
rorb
cmpsb
jge
xchg
fmul
stc
faddl
mov
imul
xor
lcall
dec
sbb
xchg
popa
popa
adc
add
add
or
divb
popa
jb
div
stos
lock
jbe
lahf
inc
push
or
sbb
pop
inc
clc
cmpsb
add
aas
sbb
inc
imul
fidivrs
popf
int3
fs
pop
xchg
test
shll
jo
in
mov
jb
enter
loope
shrb
jecxz
pop
pop
repnz
dec
and
enter
or
mov
add
cmp
call
add
jle
lods
jmp
out
cmp
add
add
insb
cld
dec
roll
xchg
sbb
iret
enter
add
loopne
or
and
loopne
pop
dec
leave
xor
repnz
add
push
cmp
out
int3
or
mov
cmp
idiv
add
nop
sub
das
sti
std
sbb
ss
dec
pop
cmpb
mov
and
les
xchg
cmpsb
pop
push
test
dec
es
mov
cmp
or
sbbb
mov
and
cs
cltd
fnstsw
pop
adc
xchg
shl
ret
outsb
dec
and
xchg
mov
imul
cmp
cmp
cmp
or
mov
and
loop
sbb
add
pop
sbb
push
inc
test
push
inc
inc
or
in
in
xchg
pop
rclb
gs
push
xor
inc
arpl
lock
push
mov
mov
sub
adc
ret
or
lods
inc
pop
xchg
js
xor
and
cld
mov
dec
jp
lods
les
and
mov
enter
pop
sbb
jp
lahf
es
inc
inc
test
fsubl
ja
cmp
pop
shlb
jnp
repz
add
scas
mov
add
cmp
pusha
pop
aaa
out
xor
aas
fadd
andl
dec
pop
xchg
pushf
sub
dec
cmp
shl
or
ror
pop
ds
dec
mov
lcall
sub
movsl
daa
sub
add
aas
flds
jecxz
mov
aam
cld
push
dec
enter
je
xor
test
mov
test
or
push
push
cmp
std
mov
push
dec
adc
push
add
call
loopne
adc
adc
cmpsl
sub
pop
add
sbb
rcrb
in
insb
lds
push
push
or
or
sbb
daa
adc
push
imul
mov
cmp
add
fcoml
mov
sub
popa
add
bound
popa
subb
pop
mov
pop
pop
call
pop
pop
jle
push
gs
sbb
icebp
mov
jne
scas
mov
mov
jmp
cmp
je
adcb
dec
insl
xor
push
jle
xor
ljmp
xlat
pusha
jo
mull
lods
pushf
dec
pop
aas
sbb
and
xor
dec
int
scas
lock
in
lret
je
jecxz
add
push
adc
mov
dec
cmpsl
hlt
cmpsl
mov
dec
add
sbb
mov
cmp
shrb
xor
xchg
xor
mov
and
push
cmp
movsl
mov
test
cmpb
sub
notb
push
sti
pop
and
aas
cmp
xchg
mov
shll
or
mov
add
call
jo
push
push
pusha
or
push
xor
in
filds
lret
shrb
cmp
adc
mov
add
in
lds
jno
adc
arpl
cmp
inc
or
and
or
jno
push
ss
pushf
stos
cmp
add
jecxz
push
pop
inc
xorl
add
pop
pusha
or
jns
sbb
mov
pop
repnz
and
or
sub
in
sbb
xor
adc
add
sbb
in
cs
enter
adc
push
xor
pop
popa
push
sbbl
push
jmp
cmpsl
jmp
add
cltd
pop
or
push
lods
pop
add
dec
add
inc
movzbl
in
add
cmpsl
fwait
dec
stos
inc
xor
mov
xor
shl
inc
add
cwtl
push
mov
sub
push
sub
xor
mov
xor
pop
cmp
and
add
outsb
xchg
dec
dec
pop
xor
push
inc
scas
sbb
mov
push
inc
cmc
inc
enter
pop
xor
xor
dec
rcrb
jg
xchg
mov
jo
je
push
je
pop
jl
and
dec
sub
fstl
add
adc
jp
sub
cmpl
add
jno
cld
dec
inc
incl
push
or
mov
sub
movsl
fnstenv
sbbb
cvtdq2ps
xchg
nop
or
jg
or
inc
outsb
or
incl
cmp
jl
sub
addr16
adc
mov
cmp
jne
inc
cmp
xor
das
xor
inc
sti
je
out
xor
lcall
pop
mov
orb
icebp
add
mov
jmp
imul
loope
cmp
or
xchg
add
sub
fcompl
push
push
iret
inc
testb
and
divb
sbb
ja
add
cmp
sub
into
jmp
inc
sbb
in
lods
push
hlt
push
jl
in
sti
and
shll
jmp
xchg
inc
clc
and
fcoms
inc
jmp
xor
loope
sub
js
mov
js
or
cmp
jl
fcomps
xchg
jge
cmp
jecxz
cmpl
and
or
xchg
adc
sbb
adc
xchg
cli
pop
outsb
add
push
pop
cmp
jge
pop
sbb
sbb
lret
jl
push
orl
roll
out
fistpl
inc
mov
neg
pop
pop
sbb
xor
mov
pop
add
mov
fimuls
hlt
mov
decb
push
and
pop
add
inc
pop
or
shrl
sub
sub
mov
pop
stos
adc
mov
out
jb
js
add
pop
jne
push
inc
pop
inc
insb
push
out
adc
push
jp
dec
push
jp
jo
push
and
mov
push
cld
mov
jge
mov
outsl
call
clc
mov
push
pop
mov
push
lcall
outsb
adc
ljmp
int3
jg
sub
adcl
xchg
je
push
mov
add
sbb
mov
in
dec
dec
and
adc
ret
xchg
ficoms
jne,pn
insb
stos
push
add
lret
cmp
pop
pop
iret
add
xor
pop
push
movsl
mov
das
je
xor
and
es
hlt
je
clc
rcrb
aaa
nop
lcall
sbb
or
adc
test
call
jo
sbb
lods
pop
push
rol
sub
mov
inc
mov
xor
es
mov
or
cmpsl
rcll
negb
scas
dec
add
test
mov
mov
jne
test
mov
jecxz
in
imul
xor
mov
cmp
xchg
das
popf
pop
neg
call
push
call
xor
mov
fisubs
lock
andl
lods
outsl
shlb
loop
push
mov
or
mov
shll
lret
sub
rcrb
fldl
mov
lods
mov
rorl
imul
and
dec
push
rorb
lock
popa
and
xchg
out
les
mov
fistps
lcall
push
lret
pushf
xor
jnp
sub
shrb
lcall
test
xchg
frstor
lea
cmpsl
mov
push
popf
dec
push
loopne
mov
dec
sub
dec
jmp
xor
int3
sub
sbb
push
add
xchg
scas
inc
pop
mov
ds
xchg
mov
push
xor
inc
mov
pop
cmp
cmp
movsb
and
push
ror
mov
mov
lds
ret
in
xor
insb
pop
imul
popl
or
push
js
loopne
pop
inc
add
fisubs
sbbl
jbe
daa
add
sti
jmp
sarb
insb
jbe
pop
and
xchg
mov
add
xor
jmp
fildll
mov
sbb
movsb
sbb
loopne
bndldx
mov
push
sbbb
shlb
xor
add
loop
adc
jl
insl
or
or
lret
adc
and
out
test
lea
push
rolb
mov
add
pop
aaa
test
iret
inc
push
adc
push
or
and
add
adc
add
pop
cwtl
or
or
xlat
and
jmp
out
insb
mov
jg
add
push
add
push
in
add
sahf
lea
push
dec
rolb
leave
dec
and
loope
or
xchg
data16
lock
cli
pusha
add
mov
pmulhuw
xor
loopne
aaa
pop
movsl
pop
push
push
mov
push
js
mov
js
cmp
xor
mov
nop
jnp
jmp
js
inc
inc
add
push
hlt
inc
inc
insl
jmp
inc
or
xchg
push
mov
repz
jne
jmp
inc
sbbb
jno
cld
push
fsubl
outsb
lcall
loope
dec
xor
or
pop
cmp
and
je
xlat
or
add
inc
jno
addl
push
push
fcmove
xchg
popa
add
in
xor
or
dec
push
pop
outsl
mov
daa
push
leave
pop
cltd
dec
mov
xor
fadds
sub
adc
push
xor
push
testl
sbb
mov
cmp
in
sti
into
sbb
cwtl
rcr
iret
lock
xchg
jl
mov
enter
pop
ds
xor
mov
push
bound
adc
shlb
es
fistpl
test
fsts
add
add
add
negl
mov
inc
sub
cmpsb
mov
jg
adc
mov
inc
cmp
mov
jl
inc
cmp
das
fisttpll
add
sub
fcompl
sub
mov
xor
iret
ds
sub
movzbl
test
mov
pop
cwtl
xor
int3
jne
movsl
insl
aas
adc
xor
xchg
or
scas
push
sub
jo
and
inc
mov
add
mov
js
jo
pop
inc
add
inc
sbb
fiaddl
or
mov
mov
inc
and
test
test
xchg
dec
out
insb
sub
in
jmp
xchg
jecxz
jmp
fwait
adc
movsb
adcb
lcall
and
cli
sbb
sbb
pop
pop
jp
sbb
push
add
loopne
pop
shll
sbb
loope
add
inc
cmp
jl
stos
mov
pop
mov
jge
pop
insb
adc
xor
push
mov
pop
icebp
sbb
rorl
test
aaa
jmp
jle
hlt
inc
or
pop
outsb
push
adc
jbe
neg
ja
or
jle
add
mov
jmp
xor
idivl
cmp
loopne
dec
icebp
icebp
lea
or
add
popf
data16
add
jl
frstor
pop
xor
mov
and
push
adc
cmp
push
mov
add
nop
push
shlb
or
xorb
xorb
mov
in
repz
push
cs
cmp
inc
cmp
or
add
pusha
xchg
mov
lods
inc
xchg
ss
push
outsl
fwait
xor
jle
push
lcall
xor
mov
jl
mov
ljmp
pop
testb
test
sbb
ffreep
test
or
in
lods
rcrb
fdivl
xchg
dec
sbbb
cmp
sahf
mov
or
cmp
test
enter
shrb
cmp
fiaddl
xor
xchg
sub
jne
aam
mov
cli
sub
add
xchg
adcl
orl
stos
test
add
push
negl
lcall
popa
xchg
xchg
adc
test
jl
test
cmp
ret
inc
fdivrs
jne
sbb
aam
roll
ljmp
repz
push
mov
lret
or
in
ja
ret
push
or
jne
push
mov
inc
pop
add
or
lea
pop
or
inc
jg
jg
mov
jl
mov
mov
mov
shlb
add
add
decl
or
shr
shl
add
and
std
out
xadd
add
lret
mov
jne
movsw
movsb
mov
fidivl
and
arpl
inc
cmp
jge
push
pusha
mov
push
filds
xchg
adc
cmp
cmp
and
push
cmc
or
sbb
outsl
xor
lret
add
sub
cmp
dec
sbb
jecxz
xchg
jl
mov
stos
xchg
add
sbb
xor
cmp
fildl
sbb
mov
ret
dec
sub
insb
sarl
add
faddl
fstl
fldz
fcomp
fnstsw
sar
aas
scas
mov
fsubr
pop
faddp
andl
push
and
or
std
mov
dec
cmp
push
test
ret
hlt
imul
imul
mov
aam
sub
outsb
scas
lock
or
xor
lock
sub
cmpsl
clc
mov
hlt
jbe
ljmp
pop
je
dec
test
xor
push
add
push
xchg
iret
jge
cmp
xchg
mov
negl
sub
jmp
mov
cmp
add
shrb
fs
aam
or
lea
movsl
or
sub
aas
jb
push
jne
cmp
adc
adc
push
adc
icebp
adc
sahf
subb
pop
jl
xorb
jmp
fldl
push
jo
and
test
mov
lcall
xor
int
mov
xor
in
fimuls
enter
loopne
aam
xor
int3
loopne
in
aam
ret
sub
insb
es
lret
sbb
pop
pop
cmp
push
push
into
sarb
mov
hlt
push
pop
test
xchg
pushl
jnp
mov
pusha
pop
ja
pop
adc
ret
outsb
and
push
pusha
fldl2e
sbb
inc
inc
dec
data16
push
jo
mov
push
pop
jne
and
dec
movsb
lock
mov
pop
inc
or
int
aam
lods
or
xchg
lret
rol
pop
pop
sbb
push
xor
sbbb
mov
pop
sbb
push
insb
xchg
and
sbb
dec
aas
cwtl
add
mov
scas
aaa
test
xor
ja
or
sub
jle
rolb
mov
xchg
add
inc
loope
dec
add
arpl
mov
rol
xor
or
sbb
loopne
jne
rol
push
adc
pusha
pop
xchg
dec
addl
dec
out
and
mov
add
ss
inc
cld
out
je
push
jne
mov
cmp
sub
xor
mov
pop
and
adc
fnsave
add
mov
adc
and
jne
xor
dec
cmp
or
inc
adc
add
push
xchg
mov
xchg
add
xchg
sbb
push
push
lock
movsb
add
neg
dec
add
cs
and
xchg
jne
pop
imul
inc
vmwrite
adc
add
dec
add
push
mov
sbb
nopl
mov
xchg
mov
inc
or
add
mov
or
dec
cmp
or
cwtl
pop
xor
push
lock
pusha
dec
loopne
sub
test
inc
inc
lret
mov
rclb
or
add
xor
ss
and
mov
xchg
clc
mov
push
bound
jmp
xor
jne
je
jno
or
pop
mov
pop
cmp
or
xchg
jnp
mov
adc
mov
sub
xor
push
insl
pop
aaa
mov
test
add
xchg
inc
xchg
gs
add
dec
push
add
dec
or
es
pop
call
aaa
mov
or
mov
mov
push
sbb
push
xor
push
bound
icebp
jmp
cmp
fsubrs
scas
cmp
or
pop
leave
rolb
call
xor
repnz
xor
xchg
rcr
add
faddl
xchg
or
jb
mov
into
and
add
fdivrs
sbb
adc
neg
sti
je
cmp
add
lock
cmp
inc
sbbb
jnp
push
push
pop
dec
fiadds
movsb
or
lock
push
xchg
lea
jg
stos
push
inc
pop
lods
movsl
xor
add
xor
and
or
in
push
push
push
dec
pop
or
xlat
fsubs
push
dec
jbe
nop
mov
add
shll
pop
shrl
pop
rorb
adc
in
push
inc
cwtl
addl
push
jo
testb
in
popf
mov
pop
hlt
jp
adc
mov
ja
push
push
push
push
inc
rolb
pop
stos
or
cmp
mov
cmp
testl
sub
fsts
mov
xor
subl
push
jb
cmpsl
vaddss
lcall
ror
cmovns
inc
divl
enter
inc
jecxz
insb
rolb
rcr
and
mov
and
push
sbb
adc
sub
leave
mov
movsb
icebp
mov
push
jo
push
stos
data16
insb
lods
cmp
jno
js
aad
in
cmp
mov
xchg
pop
mov
add
pop
inc
lret
stos
dec
ficoms
pop
push
arpl
clc
cmp
xchg
inc
ret
add
push
pop
repnz
loop
idivb
and
adc
pop
das
and
push
nop
fildl
jns
push
pop
push
mov
sub
xchg
je
nop
std
xor
or
je
inc
or
and
movsl
into
jo
sbb
adc
add
cmp
shlb
sbb
and
dec
adc
rcl
inc
test
fcmovu
xchg
mov
mov
sub
sbb
xor
inc
sbb
int3
das
xorb
insb
aas
sbbb
mov
aaa
add
mov
daa
insl
pop
push
pop
dec
stos
in
jae
xchg
adcb
push
stc
xor
or
dec
xchg
movsb
call
jb
dec
mov
lea
daa
jl
pusha
stos
movsb
cmpb
add
sbb
xor
mov
mov
cmp
pusha
in
mov
popa
dec
arpl
dec
stc
ljmp
push
call
mov
ja
adc
roll
lcall
shll
xlat
add
add
data16
cmp
lock
dec
cwtl
mov
lret
inc
sub
jo
and
sbb
push
fwait
mov
mov
and
in
je
xchg
mov
call
cmc
add
add
push
push
xor
add
xchg
jnp
xchg
in
out
lods
adc
test
call
cmc
loop
es
pop
fcomip
rolb
das
add
xchg
mov
shlb
cmp
inc
jnp
or
arpl
nop
hlt
add
fldl
into
adc
test
pop
ret
outsl
add
aam
inc
shrl
pushf
iret
xorl
lock
rcrb
pop
lds
movsl
pop
sbb
cwtl
insb
pop
out
push
push
mov
fwait
sbb
sub
mov
icebp
cmp
inc
add
add
inc
lea
and
xor
bound
pop
xchg
jo
pop
notb
lea
push
or
and
bound
add
add
loopne
push
xor
mov
ret
inc
jle
or
xchg
inc
or
cld
push
push
xchg
pop
mov
pop
mov
shrl
pop
addl
sub
fcomps
pop
out
xchg
xor
push
push
inc
stc
push
xchg
cmpsb
push
sbb
lock
lret
mov
jnp
add
mov
xlat
fdivrp
mov
xchg
mov
bound
xor
push
and
test
insb
stc
jae
mov
xor
inc
test
or
add
xor
shrb
mov
dec
add
and
addl
pop
imulb
sub
sub
or
rol
arpl
loope
incb
or
insb
dec
dec
jae
stos
cwtl
popa
loopne
in
and
mov
int
or
mov
sbb
sbb
testb
fisubrs
add
add
lds
jne
loop
sub
pop
fcompl
jecxz
mov
pop
call
jno
inc
cltd
pusha
test
fdivrl
xor
xchg
fdivs
in
fiadds
adc
jge
adc
xchg
and
das
dec
adc
jno
sub
insb
addl
cmc
xor
fs
dec
dec
sub
ficoml
bt
es
add
shr
or
lret
lock
and
imull
es
inc
imul
and
adc
es
sbb
sbb
repnz
or
rcll
adc
cs
loopne
or
sbb
jo
das
stos
hlt
inc
lods
or
adc
push
or
xchg
xchg
test
mov
nop
mov
mov
push
adc
aad
inc
add
jbe
xchg
adc
scas
inc
or
fs
add
arpl
jmp
and
pusha
pop
mov
inc
js
push
mov
and
cltd
iret
push
outsb
push
mov
or
xor
cmp
mov
test
add
lahf
je
push
and
aaa
ffreep
rorb
jle
and
add
pop
ret
test
xor
je
pop
sbb
add
cmpb
int
addb
sub
jl
sbb
xor
push
and
add
rolb
popf
mov
je
stos
scas
lahf
mov
cmp
dec
mov
cmc
movsb
sbb
dec
aaa
aam
push
xchg
pop
mov
lods
out
dec
mov
sbb
adc
adc
mov
movsb
shlb
rcll
jle
sub
sbb
pop
addl
jo
push
add
jge
testl
out
dec
insl
mov
in
orl
or
inc
and
jecxz
push
push
or
mov
shlb
add
pop
jo
jp
je
push
pop
rol
jb
inc
xlat
push
adc
mov
pushl
jp
add
and
jne
sti
cmp
push
sbb
mov
imul
xchg
mov
and
sub
jbe
jo
jp
aam
cmp
outsb
jecxz
ja
cmp
inc
and
push
sub
push
sbb
jge
sub
and
mov
inc
inc
mov
pushf
push
je
sub
xor
inc
or
and
enter
dec
out
and
push
mov
or
cmpsb
dec
cli
imul
inc
cmp
jmp
adc
iret
dec
pop
loopne
or
jo
cwtl
sbb
in
movsb
or
in
xchg
pop
xor
and
sub
cltd
lods
sub
xlat
stos
mov
fldcw
or
arpl
addb
movb
in
sbb
in
loope
loop
push
mov
and
mov
xor
adc
cld
dec
push
cmp
ret
jecxz
push
daa
mov
lds
or
add
add
inc
pop
lock
mov
test
jo
roll
inc
add
bound
addr16
push
jae
sbb
push
push
inc
inc
push
sbb
icebp
cmp
and
pop
pop
cmp
pusha
jge
inc
push
mov
or
dec
sub
push
cld
pop
and
lock
mov
adc
sub
mov
and
add
test
mov
mov
push
and
cmp
lret
sub
push
adc
comiss
addb
adc
pop
sti
dec
rcrl
pop
push
jl
push
and
test
xchg
dec
cmp
xchg
add
pop
cmp
pop
pop
daa
inc
mov
cmp
insl
pop
inc
inc
cmp
lods
adc
push
je
add
es
and
sbb
aad
jne
jl
adc
sbb
xor
mov
pushf
jne
or
fidivrl
xor
ret
and
push
mov
and
lods
push
mov
xchg
inc
bound
popf
fisttpll
mov
sbb
push
add
xchg
pop
mov
stos
sub
pop
dec
cmp
scas
xchg
mov
mov
std
cmp
cmp
je
cmp
dec
mov
dec
add
push
adcb
cmp
push
sub
sbb
xor
mov
mov
int
nop
nop
addr16
jbe
or
jl
popf
jl
jle
fbstp
push
arpl
pop
dec
mov
adc
ds
mov
lea
cmpsb
jo
xor
pop
mov
mov
pop
gs
xlat
in
mov
push
lret
movsb
mov
pusha
shll
adc
in
xchg
lods
sbb
jb
lahf
xor
or
dec
jl
test
into
lea
push
out
imul
mov
es
cwtl
sbb
pop
mov
pop
ljmp
pop
add
mov
nop
ss
shlb
adc
push
ficoml
into
jb
popf
mov
sbb
mov
mov
xchg
jl
push
pop
jae
negb
sbb
aaa
iret
inc
xor
mov
jne
insl
shlb
mov
js
in
dec
ret
loopne
pop
inc
shr
pop
scas
lds
cmp
movsb
pusha
ret
or
outsl
ljmp
cld
cld
or
rep
mov
inc
icebp
add
movsb
jge
sbb
adc
dec
add
inc
rolb
add
jns
dec
or
jg
inc
mov
inc
idivb
push
mov
nop
pushf
stos
xchg
push
add
xchg
fucomi
je
ds
movb
or
shlb
jle
push
aad
ret
mov
scas
aaa
push
jae
lods
cmp
das
jbe
lods
mov
jmp
test
pop
inc
pop
cmp
stc
cmp
or
pop
sub
pusha
jo
ja
push
adc
xchg
dec
push
sbb
outsl
pop
test
adc
sbb
sub
push
aaa
pop
shl
xchg
mulps
or
bound
cmp
dec
into
cltd
mov
and
nop
sahf
mov
pop
mov
dec
cmpl
push
dec
test
test
and
fs
mov
adc
nop
dec
cwtl
mov
movsl
std
or
inc
ret
or
aaa
or
mov
adc
lcall
pop
add
push
hlt
fmull
out
sbb
call
pop
cmpsb
or
sub
xor
jb
out
pop
lea
rcrb
arpl
cmp
loopne
jne
test
sbb
test
xor
call
cmp
sbbb
dec
mov
add
aad
mov
adc
dec
arpl
cwtl
movsb
aam
push
movsl
mov
mov
adc
nop
mov
and
mov
movsb
stc
sub
movsb
cmp
sbb
jo
xchg
scas
mov
or
loopne
loop
in
jns
mov
push
pop
jne
out
mov
push
inc
nop
add
jns
arpl
sbb
addr16
out
add
loopne
ljmp
call
inc
cmp
add
adc
cwtl
push
pop
xchg
cmpsl
loopne
cmp
add
mov
mov
pop
enter
xor
shlb
test
cmp
lcall
insb
fs
push
inc
outsl
mov
inc
inc
loope
mov
pop
sub
xchg
sub
daa
leave
cmc
pusha
xchg
stos
enter
jne
xchg
mov
incb
popa
cmp
push
adc
cmpl
movsb
pop
fnsave
push
sub
pop
ss
sub
bound
xor
cld
push
pop
push
or
xchg
xor
sti
sbb
or
aas
mov
add
fwait
sub
in
adc
rorl
addr16
xchg
add
and
pop
mov
cmp
add
and
outsl
stos
sbb
inc
or
out
fidivs
push
rclb
xor
add
sub
in
adc
into
call
fdivl
cmp
mov
and
mov
pop
xchg
test
bound
loopne
sahf
adc
sub
std
cmp
je
xor
cmp
adc
sbb
jg
fidivl
imul
or
mov
cmp
or
pop
add
popf
scas
ret
sbb
dec
popf
out
movsb
mov
out
pop
pop
xor
push
ror
dec
hlt
cmp
cmp
mov
jae
mov
hlt
mov
push
mov
data16
pop
imul
push
or
ljmp
out
leave
std
fs
or
je
cmp
jne
inc
inc
jmp
inc
jb,pn
jns
push
and
push
xchg
cmp
cmp
add
pop
xor
add
sub
dec
in
inc
adc
pushf
stos
adc
jge
sub
addr16
mov
loop
ja
xchg
sbb
mov
xor
aad
orl
push
add
call
xor
mov
in
and
ss
ret
aam
pop
movsb
pusha
push
mov
lret
pop
cltd
push
dec
and
in
adc
dec
pop
push
xorb
add
je
fcoms
add
loopne
fcomip
push
cmp
pop
rorb
push
inc
mov
les
out
sub
lods
add
cmp
push
faddl
pop
clc
addb
pusha
xor
inc
pop
or
hlt
xchg
ljmp
mov
sbb
pop
sbb
cmpsb
les
in
aam
inc
add
ror
pop
push
xchg
cmpsb
mov
or
aas
or
mov
es
stos
add
sbb
int
je
push
leave
push
mov
pop
aam
cmp
adc
sub
das
pop
jb
add
movsl
push
or
push
add
test
pop
xlat
sub
push
mov
test
repz
xor
insl
pop
push
sbb
push
test
cmp
dec
mov
push
rolb
xlat
xchg
jae
fiaddl
repz
ret
mov
pop
das
bound
push
mov
sub
aas
stc
sbbb
rorl
sahf
jnp
add
and
push
or
imul
orl
call
sbb
add
add
mov
cmp
nop
inc
fsts
cmc
add
add
orb
es
call
sub
push
xchg
xchg
jmp
nop
shlb
push
out
and
cmpsb
sub
in
or
sbb
sub
inc
out
in
or
add
stc
cmc
call
and
jl
mov
lret
pop
jne
rclb
sbb
sub
jne
enter
ss
xor
fdivs
cmp
fmuls
jle
pop
cmp
nop
xor
repz
jae
sub
pop
push
push
mov
mov
stc
int3
mov
jge
or
or
fs
inc
loop
lret
adc
push
jo
dec
sub
xor
jge
mov
sbb
mov
shrb
dec
jmp
xor
sub
push
pop
andl
fnstcw
fcomps
jo
adc
mov
inc
jle
adc
testl
and
fcompl
mov
movsb
add
mov
outsl
stos
mov
mov
out
pop
pop
mov
cmpsl
inc
cmp
mov
push
syscall
sub
jle
cmc
movsl
pop
or
mov
mov
push
xchg
xor
nop
loope
shlb
fcmovb
jmp
clc
adc
imul
sar
jo
ret
sbb
shl
test
sbbl
push
mov
jbe
add
jmp
add
mov
rcl
sti
mov
testb
lock
push
push
inc
add
lods
imul
add
addb
push
arpl
mov
pop
flds
cmp
add
call
int
subb
dec
add
push
fsubrs
lea
adc
repz
std
and
add
rolb
sbb
insb
sub
out
add
add
imul
push
popf
les
stc
jecxz
leave
imul
xchg
icebp
sub
jb
les
xchg
stos
jp
lods
cld
nop
es
enter
insl
pop
jmp
fs
and
loopne
ret
mov
add
push
push
jb
xor
add
in
add
dec
pop
lret
inc
in
mov
ds
adc
sub
insb
add
pop
add
shll
xchg
inc
or
or
jl
nop
push
lods
dec
hlt
repnz
adc
pop
and
push
cmp
inc
push
push
or
cmp
popa
dec
ja
test
mov
pop
sbb
loopne
or
stc
inc
sub
push
xor
sbb
sbb
cmp
mov
pop
cmp
xchg
sub
and
in
call
cld
add
cmp
jge
cmp
fdivs
pop
sbb
xor
sub
and
inc
dec
or
sbbb
lret
out
or
lock
adc
add
adc
in
sahf
and
nop
adc
jg
pop
sub
dec
inc
or
sub
push
adc
movb
xchg
inc
pop
shll
popa
mov
add
aam
jp
adc
outsb
add
addb
test
loope
xor
push
add
xchg
lods
sub
inc
ja
sbb
fs
xchg
jno
or
pop
cmp
inc
sub
stc
pop
adcb
xor
je
sbb
fstl
push
mov
adc
xorb
cmp
inc
adc
test
sub
lret
xor
add
push
or
or
jae
call
push
sbb
and
bnd
push
mov
push
dec
enter
sub
negb
clc
rorb
xor
fiadds
xchg
imul
pop
and
sbbb
ret
jmp
dec
add
cmp
adc
cmpsb
push
ret
sub
bound
imul
or
insb
or
in
adc
in
sub
mov
dec
pop
cmp
xor
rol
add
push
pusha
lods
add
lods
cmp
fcmovb
sarl
push
and
pusha
repnz
aas
jp
cmp
cmc
and
iret
insb
cs
loopne
add
pop
sbb
nop
aam
sarl
cs
adc
jl
cwtl
das
inc
inc
push
jns
pop
je
sub
mov
pop
or
lock
orb
xchg
pop
xchg
in
cmp
or
pop
push
add
dec
cmp
push
movsb
adc
mov
dec
fwait
dec
xlat
fistpl
sbb
sub
ret
mov
fildl
dec
adc
cmp
jne
sbbl
fdivp
dec
xor
sub
fs
adc
adc
sbb
and
sub
loope
cltd
fcoms
pop
adc
sbb
adc
or
dec
in
rcl
push
ret
add
xorb
xor
out
je
cs
dec
adc
cmp
or
and
sbb
push
and
mov
dec
enter
and
out
dec
and
dec
mov
lods
mov
ret
rolb
xor
and
add
add
cld
loopne
add
or
add
jl
cmp
lods
adc
cmp
sbb
adc
scas
xor
push
popf
jne
jmp
insb
add
push
dec
adc
fmuls
mov
sbb
ret
les
adc
js
bound
pop
lea
dec
push
movsb
sub
xor
aam
sub
inc
mov
jecxz
fldl
fiaddl
push
inc
push
test
lods
imul
adc
push
sti
cmp
push
add
sub
lahf
pop
cs
ret
dec
or
sub
sub
push
or
lods
mov
dec
mov
xchg
neg
cmp
mov
stos
push
insb
enter
frstor
mov
jo
or
mov
cs
sub
fsts
or
mov
mov
jb
lcall
shlb
int3
push
and
test
ss
jge
jp
call
dec
mov
inc
iret
push
xchg
jle
jno
sub
xor
and
inc
repnz
pop
pusha
stos
ja,pn
push
push
add
fs
cmp
sbb
xchg
dec
jb
rclb
loopne
lret
mov
fwait
add
mov
cmp
sub
push
adc
cmp
cwtl
cli
push
loopne
push
jb
jb
sbb
daa
pop
test
sub
movsb
aaa
and
add
scas
ret
fmull
cmpsb
push
lods
mov
cs
cmp
test
ss
fsubrs
adc
jbe
mov
mov
xor
inc
and
xor
gs
sbb
in
in
and
popa
xchg
mov
hlt
rcll
sar
or
daa
lret
mov
inc
sub
add
or
jl
inc
sbb
adc
jns
test
mov
mov
cmp
jne
jne
add
pop
dec
dec
and
pop
ds
es
int
add
xorl
test
add
test
inc
jp
stc
or
movd
push
sub
inc
mov
jmp
rcll
add
xor
xchg
sbb
je
xchg
mov
fs
add
mov
lret
test
pop
add
in
inc
jp
and
add
fs
sbb
dec
test
push
jp
lea
jnp
add
pop
push
jg
jo
cmp
pusha
dec
xchg
push
imul
aas
add
fwait
outsl
mov
jb
add
pop
adcb
add
outsl
mov
imul
jge
loopne
lods
inc
ljmp
imul
xchg
aam
ljmp
sub
jp
popf
nop
in
or
daa
psubsb
adc
lea
nop
and
sub
sub
dec
shlb
xchg
push
in
push
lds
add
mov
pop
arpl
nop
jle
mov
or
inc
push
mov
fs
push
test
xchg
pop
cmp
or
mov
stos
fnsave
xor
loopne
pop
fwait
adc
push
cmpsb
mov
ljmp
and
or
xchg
mov
add
in
or
sbb
cmpsl
in
xor
and
or
lock
push
or
pop
inc
xchg
push
jmp
andb
out
rorl
pop
notb
push
mov
add
and
cs
jle
push
xchg
ret
sbb
sbb
add
jecxz
mov
xor
ss
jp
add
jns
pusha
jl
push
add
divl
mov
jmp
jle
add
call
sbb
sub
sub
inc
lea
push
pop
or
ret
adc
std
sbb
mov
hlt
mov
clc
adc
inc
dec
mov
push
in
cmp
ret
sbb
xor
bound
push
push
mov
mov
cld
pop
jp
push
push
xchg
jmp
cmpl
jne
cmp
int3
xchg
adc
divb
inc
adc
and
pop
cmp
loop
add
inc
add
daa
push
xchg
es
pop
jns
cs
lods
rorl
es
nop
mov
les
add
adc
lret
add
nop
jo
stos
cld
fwait
jae
mov
cmpsb
jb
lods
movsb
das
push
add
nop
sub
or
orb
fwait
das
cld
es
or
add
xor
js
mov
pop
popa
push
adc
mov
pop
scas
add
xchg
in
mov
dec
int3
or
add
or
dec
mov
test
hlt
es
pop
fildl
jecxz
dec
dec
adc
cmp
scas
inc
dec
xor
mov
lods
nop
or
push
add
shlb
mov
aas
inc
add
add
cwtl
and
cld
push
push
fwait
jle
dec
and
lret
mov
rolb
repnz
cmp
or
mov
nop
or
out
pop
jo
sub
movb
mov
pop
or
push
sbb
imul
push
inc
and
int3
pop
inc
mov
push
add
mov
cmp
jns
and
xlat
inc
hlt
sub
push
inc
xlat
pop
cmp
add
popa
jmp
add
xlat
push
hlt
lds
jge
xchg
call
adc
ret
clc
mov
xor
inc
and
dec
in
pop
or
or
sub
aad
cmp
movb
sub
pop
push
jne
in
icebp
push
mov
sbb
sbbb
out
ds
test
nop
jmp
andl
leave
sti
rcrb
add
dec
add
jbe
xchg
push
push
lock
dec
pop
and
cmp
cmp
adc
jbe
add
jbe
dec
test
idivb
cld
cmpsb
push
pushl
xchg
test
orb
inc
enter
or
and
push
in
ja
nop
fcom
je
mov
or
outsb
lcall
or
loopne
fs
lret
ss
js
cmp
push
in
cwtl
push
adc
push
or
cmp
or
sti
add
jmp
out
xchg
sub
fmull
lds
dec
push
fwait
sub
and
xchg
int
cmp
jnp
sbb
pop
fnstsw
push
mov
pop
xlat
faddl
and
cs
push
in
loopne
push
jmp
out
rorb
mov
ret
jno
or
inc
js
or
or
dec
push
mov
xor
push
or
cmp
hlt
dec
and
push
imul
pop
int3
rolb
lea
push
xor
push
fdivr
adc
ret
popa
xor
dec
dec
inc
out
sbb
push
dec
inc
or
inc
sbb
xor
sbb
adc
cmp
mov
push
jb
xchg
stos
insb
add
insl
xchg
adc
int3
or
sub
in
in
test
and
adc
jns
pop
inc
shll
test
adc
mov
inc
out
cmpb
push
lahf
or
ss
xor
mov
pop
xor
pusha
mov
push
inc
mov
aam
jo
jl
jp
data16
sbb
comiss
loopne
imul
jecxz
adc
add
call
xor
pop
mov
and
mov
lea
imul
cwtl
lock
lods
sbb
imul
mov
rolb
imul
cmc
ret
imul
gs
add
test
mov
mov
mov
mov
adc
lock
enter
sbb
xor
rcl
cmp
sbb
fsub
cmp
or
or
or
insl
pop
inc
jle
add
cmp
add
inc
dec
bound
and
sbb
jl
lret
pop
leave
loope
or
arpl
sbb
or
push
shlb
ret
adc
leave
xor
ljmp
dec
pusha
mov
rol
mov
ror
xor
shr
xor
xor
jnp
fld
ret
or
or
icebp
add
add
add
mov
cmp
or
ret
mov
push
or
and
fiaddl
sti
add
test
push
outsb
sub
jge
jl
adc
push
stos
repnz
cli
sti
jg
data16
jge
xor
and
and
xchg
addb
out
movsb
xor
push
repnz
repnz
sub
fsubr
mov
push
or
xlat
ret
subl
rcl
add
add
shlb
call
lret
aam
sbb
shll
xor
sub
scas
xor
mov
cli
mov
rol
rol
out
nop
cmpsb
imul
fdivs
rclb
loopne
mov
imul
xchg
add
shl
mov
cmp
in
push
cmp
repnz
repnz
push
bound
and
xor
les
subl
mov
xor
dec
rorl
loopne
loopne
add
xor
in
loopne
nop
xchg
in
loopne
cmp
cmpsb
cltd
xorb
mov
flds
in
mov
pop
xor
add
in
push
xor
ficoml
insl
and
and
or
in
jl
add
and
xor
add
add
xor
and
inc
in
insb
fwait
inc
jo
ret
push
jo
ficoms
add
mov
dec
shr
xor
inc
pop
iret
jl
iret
push
loop
mov
add
jle
filds
cltd
mov
jbe
call
imul
fisubl
add
ret
add
xor
xlat
add
gs
fcomps
inc
fs
nop
and
psllq
lret
inc
mov
xor
or
jmp
stos
adcb
aam
aaa
cmp
shlb
call
in
les
fs
out
rolb
inc
aaa
xchg
add
sub
jge
rclb
rorb
lcall
in
pusha
in
call
loope
in
add
push
adcl
mov
dec
push
nop
data16
xchg
and
push
cwtl
add
xor
cmp
inc
and
int
leave
push
push
pop
or
xor
cmp
fcoms
mov
xor
pop
sahf
push
add
test
or
nop
and
nop
out
pop
fs
xchg
inc
pusha
loopne
scas
mov
xchg
xchg
movsl
inc
in
pop
mov
or
rolb
dec
sahf
fs
pushf
loop
shr
or
add
stos
cmpsl
in
dec
movsl
imul
enter
fsts
or
xor
fists
imul
jns
push
cltd
sbb
jo
adc
in
add
add
mov
add
hlt
push
dec
adc
and
pop
add
sub
mov
adc
mov
sub
pop
incl
push
lea
pop
add
sub
sar
in
cmp
inc
push
adc
popf
add
decl
sub
mov
or
rolb
or
or
mov
adc
jbe
mov
aaa
xchg
jae
mov
and
or
sub
xor
loopne,pn
lea
jmp
xchg
aam
sub
sarb
sub
pop
add
mov
mov
or
mov
dec
jne
pop
add
loope
iret
sub
push
mov
jl
sub
mov
out
or
cmp
jbe
or
add
dec
mulb
sti
in
or
lea
sub
jae
push
pop
fcomps
pusha
jnp
sub
enter
or
sub
out
mov
or
fbstp
sub
outsl
pop
loopne
ror
mov
pop
inc
out
push
xchg
or
xchg
ljmp
adc
mov
adc
addl
shll
cmp
ja
cmp
call
aaa
popa
mov
test
shrl
je
add
rcrb
add
mov
cmpsb
or
push
inc
adc
dec
insb
mov
popl
xchg
add
adc
clc
std
arpl
je
mov
mov
sbb
mov
cmp
je
or
mov
adc
nop
popa
cmp
jne
adc
or
in
jg
sbb
dec
inc
lea
inc
mov
pop
dec
xor
popa
iret
or
movsb
cli
sub
sbb
adc
add
push
sbb
cli
jno
rorb
fimuls
stos
mov
cmp
fs
dec
inc
push
inc
and
punpcklwd
mov
adc
jp
pusha
mov
pop
cwtl
or
mov
inc
call
data16
imul
sbb
mov
xor
push
cmc
lea
nop
mov
pop
mov
and
or
xor
sahf
imul
jle
lods
pop
cmp
jne
notb
pop
shll
fldl
sarb
insb
cld
mov
in
mov
inc
in
xchg
in
ja
pushf
push
or
cmp
sub
add
push
pop
inc
stos
push
or
cmp
push
jle
xchg
repnz
inc
mov
xor
outsb
loop
jne
mov
dec
inc
jbe
out
addb
loop
push
movzwl
cbtw
jb
out
push
data16
jb
cmp
lcall
fsubr
adc
aas
les
pop
icebp
fsubl
inc
orl
adc
in
aaa
je
fs
jne
xor
mov
push
test
aas
push
mov
mov
or
add
pop
jae
mov
test
in
das
jmp
dec
shlb
daa
test
test
sub
fdivrl
add
push
inc
call
pop
sub
add
outsl
bound
jnp
imul
stc
inc
jg
or
jge
and
jle
es
mov
sub
sub
and
pop
cmp
jl
pop
jle
mov
push
test
or
jp
jb
jbe
mov
popa
test
fwait
and
or
cs
test
jne
je
outsb
and
mov
mov
sub
cli
push
movb
into
sub
adc
inc
lea
cmp
sub
outsb
push
inc
xor
lahf
enter
push
mov
inc
and
mov
mov
inc
icebp
mov
js
jmp
mov
mov
pop
inc
es
add
add
sar
lahf
lahf
pop
mov
push
movsl
pop
leave
mov
xchg
pop
cld
icebp
sti
lcall
and
and
ret
icebp
dec
pop
add
mov
xchg
incb
hlt
fidivl
mov
bound
test
mov
pop
xchg
dec
pop
sbb
cmp
je
push
xchg
ljmp
and
in
sbb
xor
cli
push
je
lds
aaa
sub
xor
push
push
push
pop
add
pop
jb
pop
and
sbbl
cmp
mov
test
mov
mov
inc
das
mov
or
xchg
sbb
movsl
sbb
xor
ficompl
inc
mov
jne
daa
mov
add
inc
pop
ds
dec
fadds
and
and
jae
mov
outsb
je
ret
insl
and
cmp
je
loope
mov
in
xchg
add
insl
sbb
fldenv
add
mov
inc
clc
jp
scas
jnp
fistps
jae
mov
jbe
xchg
orb
arpl
push
jle
and
inc
ss
fnstsw
cmp
popa
in
loope
add
movb
movsl
push
dec
dec
and
pop
mov
mov
mov
xor
jl
add
cmp
stc
push
sbb
addb
imul
scas
mov
or
xchg
mov
fdiv
and
popa
add
mov
push
loop
pop
add
hlt
inc
xchg
xchg
movsb
cmpsb
adc
rcll
cld
call
cmpl
pop
inc
cmp
pop
cld
sub
pusha
jb
cs
xor
insb
mov
add
inc
fisttpl
mov
jmp
fadds
jmp
loopne
pushl
xchg
xchg
insl
mov
pop
push
mov
push
shrl
outsb
or
and
cli
cmp
pop
cmp
xchg
sbb
xchg
xchg
into
push
push
mov
cwtl
addl
xchg
inc
es
xchg
ret
jo
pop
pop
and
dec
mov
mov
iret
in
push
ficoml
mov
rcl
or
and
cmp
push
inc
test
pop
shlb
test
addr16
arpl
sbb
add
call
mov
inc
jmp
rorb
bound
test
cmp
mov
rolb
clc
mov
dec
fmuls
in
mov
mov
stos
out
aas
push
mov
in
sub
or
sbb
mov
inc
adc
push
add
cltd
cltd
mov
cmp
das
enter
sbb
das
bound
cmpl
or
xor
xchg
inc
cmpl
add
xor
adc
stos
mov
push
mov
xor
cmp
je
mov
cmp
jecxz
lds
add
inc
outsw
xchg
and
jge
pop
and
inc
inc
fdivs
sbb
loop
jb
inc
xor
cmpb
out
xchg
movsl
xor
or
and
pusha
pop
inc
fsubr
cmp
xor
fwait
jo
rorb
push
xor
jb
push
jo
in
movsb
or
outsb
insb
jne
jl
sub
into
mov
jp
sbb
jne
inc
pushl
cmp
xchg
shlb
pop
inc
sub
imul
pop
cmp
jne
les
aam
adc
mov
daa
jmp
cmp
cmpsb
adc
or
call
sbb
dec
mov
push
jmp
test
movsb
push
adc
jbe
mov
jb
jge
adc
lods
cmp
sbbl
jo
and
adc
jecxz
gs
jns
dec
rclb
dec
and
divl
enter
aas
add
loop
ret
jns
ret
or
lahf
push
sbb
cmp
je
test
xchg
cmp
cmp
add
pop
pop
aaa
lods
inc
pop
js
jno
jmp
inc
mov
les
pop
add
mov
leave
lds
test
and
int
mov
xor
out
mov
or
xchg
repnz
mov
ret
push
mov
push
cmp
andb
xchg
ficoml
cmpb
xchg
out
das
mov
rcll
imul
dec
push
cs
cmp
sub
cmp
add
in
jbe
and
jae
lret
inc
and
mov
fadds
cs
sub
xor
xchg
lret
in
xor
cmp
cmp
xchg
cmp
daa
adc
cltd
inc
sbb
pop
sbb
and
loopne
inc
inc
sub
data16
imul
push
push
dec
loopne
xor
add
mov
push
std
test
sbb
cmpsb
gs
push
lahf
int3
cmpsb
push
addr16
hlt
fsubs
aam
loop
push
sbb
jl
or
movsl
in
inc
and
cmp
shrl
int3
sbb
jp
cmp
jmp
shll
popf
movsb
popf
scas
lds
shrd
mov
shll
je
add
cmp
sbbb
or
sahf
or
nop
jnp
jae
or
add
pop
jbe
pop
push
or
cmpl
pop
sbbl
call
or
stos
daa
and
ss
pop
fimull
cli
xor
jne
sbb
dec
sbb
pushf
push
imul
cmpb
je
add
rclb
lds
inc
fldt
mov
lods
jnp
jo
js
jne
out
test
icebp
cmovs
insb
jbe
mov
sub
jno
hlt
xchg
mov
mov
fistpll
pop
inc
shll
loopne
sbb
adc
inc
xor
sbb
and
movsb
pusha
and
jo
inc
insl
cmp
mov
push
movb
xor
push
fstps
add
inc
data16
cmp
mov
inc
shll
mov
pop
lods
sbb
xchg
aad
addb
mov
orb
add
or
dec
xchg
cmp
jmp
mov
sub
bound
clc
mulb
adc
ficoms
cmp
push
jl
clc
aam
or
or
mov
xchg
push
pop
jno
ja
pop
or
das
inc
xchg
adc
or
push
mov
mov
cli
jb
dec
or
lahf
movsb
cwtl
and
popa
ss
cmp
lods
je
xchg
enter
mov
jbe
or
inc
add
das
mov
aam
jae
xor
inc
sahf
add
loopne
add
fisttpll
pop
leave
hlt
xorl
imul
in
in
xchg
incb
and
mov
adc
dec
negl
adc
pop
or
push
das
int3
jbe
dec
cld
aam
inc
not
or
adc
jbe
push
and
int
out
push
sub
push
pop
sbb
or
pop
loop
mov
pop
test
cmpsb
jno
mov
mov
out
inc
loop
sub
das
inc
adc
mov
pop
push
fisttpl
adc
and
add
lods
lods
inc
cmp
adc
dec
sbb
shll
cmp
and
and
sub
jb
xchg
hlt
movsb
jp
adc
loopne
lods
and
push
divb
sbb
cmp
inc
add
mov
or
dec
lea
mov
lea
ja
mov
test
sbb
or
adc
inc
sub
pop
pop
sub
cmpsb
cltd
pop
pop
pop
ljmp
mov
sub
aas
adc
and
cmp
stos
repnz
or
or
xchg
aad
adc
pop
push
mov
jae
add
pop
lcall
or
dec
pop
fisttpl
popa
subb
faddp
sti
insb
jne
and
sbb
icebp
or
jnp
mov
inc
dec
jb
imul
and
scas
dec
cmp
dec
insb
jo
dec
jae
push
leave
ja
push
add
cmp
sbb
mov
insb
leave
test
mov
in
and
mov
js
push
sub
or
ljmp
jb
and
sub
enter
and
shrb
and
push
add
add
or
inc
cmp
and
sub
dec
adc
xor
dec
mov
lea
push
and
xchg
test
pusha
mov
aam
stos
sbbb
inc
clc
pop
andb
clc
mov
mov
mov
sbb
sub
xchg
or
sub
cmp
inc
push
arpl
sahf
and
sub
and
jbe
filds
and
add
xor
dec
push
xchg
add
or
dec
sub
jns
pusha
in
sub
xor
mov
inc
mov
mov
test
inc
bound
arpl
es
lcall
add
sub
cltd
jecxz
mov
pop
pop
mov
daa
and
pop
mov
sub
fadds
xchg
mov
lret
fisttpl
scas
sub
and
mov
in
sbb
test
es
push
lahf
mov
adc
adc
push
jne
fs
dec
adc
rorb
es
xchg
nop
push
inc
add
dec
and
or
dec
mov
push
scas
mov
or
pusha
pop
adc
ljmp
jnp
push
mov
xor
rcll
cmp
mov
mov
jmp
nop
out
jns
rolb
adc
mov
mov
clc
mov
or
testb
mov
pop
jle
or
loopne
mov
adc
or
fiaddl
mov
inc
jmp
les
and
sbb
das
push
loopne
test
decl
aaa
push
inc
roll
mov
pop
add
loope
adc
mov
or
mov
inc
or
dec
shlb
cld
push
push
push
push
mov
add
nop
out
inc
sahf
xor
cs
or
into
sbb
inc
adcl
and
rorl
fs
out
sub
adc
fcomps
dec
pop
aam
imull
lods
ret
leave
mov
inc
subl
sbb
jo
je
cmp
jbe
lds
xor
jmp
jbe
mov
xor
jno
fucom
add
adc
ret
jp
ret
dec
aaa
mov
xor
pusha
data16
ds
inc
inc
insb
xor
sub
sarl
scas
jbe
cmpl
pop
clc
repz
or
pop
movsb
enter
jmp
push
ljmp
test
jbe
mov
aam
push
lea
les
cld
jmp
xor
push
dec
or
sbbl
mov
mov
or
dec
add
push
add
jns
rcrl
push
push
mov
sub
adc
cmp
sbb
pop
icebp
pushaw
add
rol
test
inc
loop
mov
mov
pop
xor
aam
or
aad
mov
xor
pop
pop
mov
test
lods
fcomi
es
push
xor
mov
jbe
jg
out
daa
mov
and
jae
popa
add
push
xor
std
cmp
jmp
test
xchg
add
xchg
lds
lock
and
gs
push
scas
les
add
mov
or
push
inc
inc
push
cmp
dec
dec
loopne
jbe
lds
cltd
push
cmpsb
daa
mov
add
jecxz
sbb
xchg
call
xchg
mov
mov
pcmpeqb
popf
pop
mov
push
hlt
pop
fnstenv
bound
jne
sbb
loope
lock
sbb
mov
sbb
mov
fidivrl
mov
das
ds
push
cmp
inc
inc
xor
mov
and
int
push
in
and
adc
and
or
sub
dec
andl
or
sbb
dec
sarl
sub
cmp
lret
jbe
sub
sub
mov
or
mov
push
pop
fisubrl
add
enter
push
mov
adc
inc
mulb
ret
cmc
pmaxsw
shlb
sbb
xchg
cli
ss
jbe
ss
lods
mov
mov
or
push
out
mov
sbb
mov
inc
pop
inc
test
adc
daa
dec
ss
mov
adc
dec
montmul
cmpsb
xchg
test
push
jo
cmp
xchg
add
sbb
fimuls
add
mov
push
jg
mov
push
add
ret
add
in
pop
arpl
nop
sub
addb
xor
les
mov
cmp
adc
das
jl
scas
xor
mov
pop
ret
icebp
loopne
test
es
dec
jns
test
sbb
jp
push
jbe
push
js
ret
mov
jmp
sahf
pusha
jne
int3
inc
jl
pop
pop
insl
sbb
jne,pt
ds
xor
add
add
ss
flds
sub
fadd
outsl
test
add
enter
xor
inc
add
mov
jo
inc
sbb
ret
pushf
jo
xor
cmp
lret
jge
fisttpll
cmp
ss
pop
xchg
xchg
je
cmp
loop
repnz
lea
es
mov
sbb
push
dec
scas
sbb
mov
leave
lea
cmp
sbb
fwait
mov
bound
mov
lahf
dec
insl
loop
fistps
cmp
sub
stc
ja
and
ret
jae
ss
jb
mov
jb,pt
push
test
pcmpeqw
jle
mov
inc
push
lods
xorb
out
push
loope
fstp
es
or
jmp
push
jo
and
add
cld
push
stos
dec
loop
lea
mov
int
repnz
mov
xchg
and
push
push
loope
jns
lea
add
fdivs
push
jb
push
push
mov
jp
rcrb
test
and
and
icebp
pop
aaa
bound
pop
cmc
stc
mov
loopne
lahf
les
lock
fwait
jp
iret
nop
pop
fsubrl
loopne
xchg
cli
xchg
jmp
sahf
add
jmp
iret
pop
or
pop
adc
movsb
lock
push
xlat
push
ljmp
inc
mov
inc
xor
fsubrs
rorb
fnstsw
push
dec
adc
repz
mov
sbb
dec
inc
arpl
dec
or
es
add
lock
bndstx
add
loopne
pop
cmp
jne
jbe
sub
adc
push
rcrl
pop
cmp
aas
add
mov
ret
fnstcw
pop
or
cmpsl
push
into
pop
gs
stos
mov
dec
cmp
cwtl
ss
loop
xchg
jmp
xor
push
pop
push
andb
push
addl
rolb
sbb
mov
cmpl
push
mov
or
jle
or
xchg
add
mov
dec
inc
das
jg
jb
js
testb
add
add
jp
pop
xchg
add
mov
mov
push
addb
les
jl
push
adc
push
cmpsl
and
adc
mov
inc
dec
cmp
xor
mov
adc
lcall
ret
mov
push
dec
roll
ret
push
push
rorl
dec
bound
pushf
sbb
add
loopne
xchg
int3
jg
cmp
cmp
mov
or
sbb
push
loope
imul
pop
xchg
mov
pop
jo
fcompl
sub
push
insl
lret
jno
xchg
and
mov
rorb
inc
jo
xor
icebp
lcall
or
mov
sbb
add
in
jmp
add
or
push
push
adc
gs
add
test
movsl
add
xor
in
cltd
lods
adc
or
add
rolb
cmp
dec
sbb
decb
sarb
push
sbb
inc
loop
and
cmp
lock
push
call
or
adc
jl
push
loopne
mov
sub
add
mov
cmp
je
push
arpl
add
jp
inc
add
cmpsb
push
sbb
lcall
xchg
mov
push
int3
or
lea
pop
xchg
add
mov
cwtl
and
adc
lods
inc
sbb
inc
mov
push
out
outsl
jno
sub
push
sbb
pusha
mov
push
mov
or
out
mov
inc
mov
out
mov
add
and
adc
fwait
xchg
mov
adc
add
or
cmp
outsl
enter
sub
mov
call
test
xchg
inc
out
mov
adc
dec
xchg
ja
xor
xlat
call
imul
mov
lahf
adc
addr16
cmp
lock
lock
test
icebp
or
jmp
mov
jno
mov
and
push
ss
add
sub
sub
out
push
adc
mov
and
xchg
inc
cwtl
mov
in
inc
mov
or
call
andl
stos
push
test
xor
xor
loope
push
inc
mov
sbb
inc
push
jmp
push
movsl
add
cli
pop
push
sti
loope
add
aaa
leave
ret
pop
mov
cmp
adc
mov
jg
and
adc
jmp
or
fcoms
and
and
adc
add
imul
xor
inc
push
aas
mov
mov
je
push
fwait
add
mov
stc
adc
xchg
popf
add
cmp
dec
inc
and
clc
sbb
xchg
mov
int
push
es
lretw
ret
sbbl
xchg
rorb
add
mov
mov
nop
add
fstpl
decl
mov
call
or
add
mov
adc
mov
sar
int3
push
lds
xchg
pop
inc
decl
sbb
mov
jge
and
cs
adc
arpl
sub
push
outsb
push
cltd
push
cmp
js
jne
xchg
xor
test
pushl
adc
sbbb
out
fistpll
push
call
inc
shll
jb
mov
xchg
add
adc
jmp
push
add
inc
mov
ss
dec
shl
adcl
sbb
mov
jns
or
cmp
bndstx
jb
inc
dec
pop
data16
outsb
sbb
pop
add
sbb
jle
orl
jg
sbb
jo
jo
inc
and
sbb
cwtl
pop
jl
lods
in
adc
push
inc
add
and
jnp
stos
xor
jb
push
push
and
adc
rorb
lea
fcoml
cmc
data16
and
sub
rorb
jmp
jb
mov
pop
cmp
je
mov
push
mov
or
and
les
add
or
add
mov
clc
push
fildl
mov
clc
lods
sarb
repnz
shlb
fsubs
hlt
xchg
leave
call
cmp
idiv
mov
sbb
je
dec
je
dec
jge
dec
popa
in
lcall
mov
xor
mov
mov
into
daa
xchg
xchg
mov
fbld
icebp
jb
dec
adc
cld
jmp
adcl
add
data16
mov
jne
lret
call
aas
fistps
loop
rorb
fs
adc
pop
inc
lcall
xor
lret
adc
fcmovb
imul
adc
mov
lock
mov
btc
push
push
mov
add
das
filds
in
xor
and
and
test
incl
gs
shrl
into
mov
inc
or
aad
push
sbb
pusha
xor
enter
loopne
jb
sub
jge
lret
clc
cmp
push
jae
push
pop
add
pop
ds
out
or
sub
sbb
call
dec
iret
xchg
sub
mov
cs
leave
xor
test
movsl
pop
add
or
and
xor
or
mov
shrb
test
jl
xor
mov
xchg
fdivrl
sahf
int
mov
pop
pop
insl
mov
adc
lds
inc
adc
insb
insl
jae
rorl
test
pop
lea
or
or
aaa
loopne
mov
ficompl
dec
js
enter
inc
movsl
dec
lods
jb
je
shl
adc
inc
mov
adc
pushf
mov
lock
in
in
sbb
incl
mov
jbe
testl
mov
test
call
popa
xchg
or
rolb
das
and
mov
in
inc
mov
pop
mov
xor
dec
ret
lea
and
mov
jb
in
orb
mov
jbe
cmp
fmuls
inc
adc
or
sub
movb
sub
dec
sbb
add
fs
adc
std
mov
dec
aam
add
cs
mov
loopne
sub
outsb
fsub
add
roll
push
or
nop
adc
fiadds
sbb
cmpsl
decb
lea
inc
jns
add
inc
scas
test
push
cmp
jae
and
pop
xor
testb
fldl
lret
or
lret
add
jnp
pop
divl
mov
pop
sub
in
cmp
push
lock
dec
inc
jns
aaa
jnp
mov
cmp
cmp
mov
test
push
sub
push
xor
xor
stos
sbb
xor
inc
pusha
sub
xchg
mov
hlt
hlt
cmp
mov
cmp
rolb
add
mov
call
inc
pusha
cmp
inc
sbb
fxtract
jne
push
add
add
adc
loopne
fnstenv
mov
aam
mov
mov
xchg
repz
add
or
xor
mov
xchg
sub
xlat
cld
clc
pushl
adc
enter
dec
subb
mov
dec
push
iret
xchg
dec
cmp
xor
sarl
cs
movl
rcrb
mov
pusha
dec
hlt
je
iret
cmpb
cwtl
or
cli
jbe
mov
push
idivb
pop
and
adc
sbb
pop
adc
inc
inc
sbb
xor
test
setl
push
push
inc
dec
mov
sub
add
lea
imul
push
inc
stos
daa
pushf
cltd
jne
lea
and
call
mov
dec
jne
cmp
cmp
into
add
adc
jmp
fwait
das
push
addb
xchg
sbb
scas
mov
push
cmp
fcomps
fwait
and
cmpsb
jmp
xor
leave
in
adc
sub
in
in
xchg
fisubs
inc
cmp
push
xor
jle
clc
aam
pandn
fiadds
lea
data16
out
dec
insb
cmp
fmull
loopne
and
add
jo
movsl
and
mov
mov
sub
or
clc
jae
lods
fnstcw
lds
leave
mov
adc
sbb
and
add
or
pop
xchg
inc
inc
imul
fisttpll
push
push
xor
fmulp
mov
mov
sbb
or
int
imul
mov
and
rcl
mov
xor
sub
aam
pusha
or
and
mov
inc
daa
lea
cli
das
xlat
jecxz
loop
cmp
jb
fnsave
jb
dec
mov
mov
xor
add
inc
adc
jne
aaa
add
insl
adc
ljmp
pusha
adc
xchg
loope
sbb
gs
jp
or
push
adc
mov
or
dec
jne
subb
xchg
adc
dec
inc
hlt
cmc
dec
lds
mov
imulb
imul
sbb
xchg
push
pop
add
out
test
sarl
cmpb
test
das
fdivrs
adc
add
jmp
pop
outsl
xchg
inc
sbb
push
lea
aaa
jle
jmp
or
inc
repnz
push
sbb
or
sub
push
hlt
cs
sbb
adc
outsb
add
aad
pop
rolb
adc
es
push
or
pop
xor
ficoml
jmp
cld
call
sbb
add
push
adc
sbb
add
mov
xchg
push
test
js
and
leave
ror
cmp
addr16
push
dec
mov
sub
je
cmp
jo
loop
cmp
pop
fsubs
clc
and
cs
jmp
inc
icebp
mov
and
cmpb
pop
jb
push
jae
jo
sbb
loope
cmpsl
fidivrs
test
enter
push
mov
push
dec
and
leave
cli
inc
push
popf
mov
hlt
inc
jmp
enter
adc
and
dec
xchg
add
subb
jmp
push
xor
js
adc
lea
sahf
mov
adc
shll
addl
ret
adc
int3
pop
adc
adc
insl
xor
test
je
test
into
mov
flds
test
xchg
lods
xchg
aam
xor
or
cmc
jp
cmp
sub
dec
jmp
push
mov
loopne
xor
push
pop
cmpsl
xor
xorl
fadd
lea
ficomps
test
cmovl
sub
gs
cld
cmp
add
adc
and
or
jmp
add
nop
ljmp
out
in
jl
cmp
test
mov
movsb
sti
adc
pusha
lock
dec
je
mov
inc
je
push
test
popa
outsl
test
push
sbb
jmp
add
out
add
cmp
adc
sbb
pop
clc
add
clc
jno
pop
shrl
repnz
mov
xor
icebp
repnz
mov
or
repz
sbb
loop
add
or
data16
sbbl
sbb
add
dec
push
faddl
fidivs
adc
cmp
mov
movl
insl
and
jo
push
cmp
or
fdivr
inc
loopne
jl
outsl
in
loope
adcl
add
xor
test
xchg
xchg
sbb
les
pop
lock
mov
mov
sub
shll
sbb
pop
lret
fldcw
push
insb
loope
pop
test
adc
std
pop
pushl
jmp
mov
cmp
aam
xchg
popf
xor
in
push
loopne
adc
and
fistl
add
pop
ret
imul
dec
pop
mov
cwtl
sbb
sbb
xchg
mov
rcr
inc
or
push
dec
add
cmp
iret
sbb
push
jle
les
dec
inc
incl
fs
ret
mov
shl
push
out
mov
dec
andl
shrl
xchg
mov
iret
scas
dec
or
sbb
inc
js
mov
je
dec
adc
push
lea
mov
idiv
pusha
cmp
add
and
packssdw
jae
adc
outsl
adc
mov
rcrb
mov
xchg
xchg
xchg
nop
loopne
test
rcrb
pop
addr16
adc
icebp
sub
xchg
enter
xorl
mov
mov
insb
sub
out
inc
xorb
sbb
xchg
xchg
insb
sub
cs
int
mov
ljmp
adc
mov
repz
push
add
pusha
cmp
lret
add
shll
imul
sub
fwait
gs
jecxz
mov
inc
mov
xor
jle
pop
leave
push
mov
mov
fisttpl
mov
sbb
mov
andb
ljmp
jo
adc
jecxz
push
xchg
or
imul
push
rcrb
sub
hlt
xchg
inc
xor
mov
mov
pop
test
lds
addl
roll
fildl
push
pop
jne
or
add
add
xor
mov
scas
push
cmp
dec
dec
shlb
pop
test
inc
cld
mov
rcrb
and
loope
mov
mov
mov
je
rcrb
lods
inc
orl
cwtl
repz
xor
rorb
or
rorl
mov
xchg
cmp
add
or
lea
or
add
pushf
ret
or
sbb
mov
jge
and
inc
int3
and
test
aam
jmp
sub
shrb
or
pushl
add
or
cmc
dec
mov
mov
or
out
loop
loope
pop
push
mov
lock
push
aad
movsl
orl
and
mov
repz
push
jae
lea
push
sub
insb
pop
dec
add
loopne
rclb
push
loope
idivl
les
mov
dec
mov
pusha
rcrb
sub
or
test
popa
jo
addb
sbb
inc
cmpsl
jns
js
fnstcw
push
sar
or
sbb
jae
inc
jmp
push
pop
lea
sti
sub
stc
inc
mov
xchg
fmuls
cltd
ret
adc
sahf
or
movb
xor
or
fsubs
sub
clc
andl
sbb
dec
mov
fsubl
gs
out
imul
add
inc
cmp
sarb
fadd
mov
jne
adc
xchg
push
scas
or
sub
add
bound
mov
fs
dec
mov
jne
pop
call
mov
jl
xchg
sbbb
jl
cs
sar
lods
sub
mov
push
pop
cmpsl
pop
push
inc
inc
addl
cmp
add
pushf
dec
fdivrs
call
push
add
loop
xlat
lods
mov
sub
xor
nop
out
or
xor
loopne
cmp
test
repnz
adc
cmp
mov
sub
cld
pop
sub
jae
cwtl
cmp
jp
push
hlt
ja
cmpb
push
pop
or
xor
sbb
js
loopne
pop
icebp
lret
push
jnp
addl
aaa
mov
or
inc
or
jo
cmp
sub
push
inc
or
push
mov
adc
bnd
or
pop
and
adc
rolb
cwtl
and
xchg
cli
adc
shlb
lea
cli
ja
aam
in
adc
ret
push
aam
and
dec
loopne
add
adcb
daa
mov
adc
jno
scas
bound
sub
mov
cmp
adc
ja
fisubl
imul
or
popa
imul
in
inc
out
and
xor
mov
jbe
push
pop
daa
sarl
or
movsl
push
imul
pop
jae
lcall
fisttpl
or
icebp
movsl
mov
es
insl
pusha
loop
mov
cmp
testb
adc
loopne
add
lret
or
sbb
sub
mov
dec
stos
outsl
xor
ret
lea
push
add
aaa
add
and
push
lock
outsl
mov
sub
jecxz
movl
dec
cltd
add
inc
rclb
or
daa
inc
popa
add
push
adc
outsb
loopne
daa
ret
repnz
fcmovnu
jmp
mov
icebp
dec
inc
inc
fidivl
mov
push
je
cmp
ss
imul
movsl
ficompl
and
ret
mov
pushl
sbb
scas
mov
shll
lock
cmp
mov
adc
leave
lds
std
or
mov
mov
push
sbb
or
test
shrl
inc
mov
gs
pop
out
pushf
pusha
sub
inc
clc
and
push
fcoml
setge
lock
movsl
inc
add
adc
jbe
hlt
dec
push
sbb
sbb
jne
mov
pushl
jmp
push
mov
outsl
imull
cmp
mov
mov
fcomi
imul
adc
es
mov
jne
sbb
pop
and
mov
in
int3
mov
mov
popf
jg
fwait
and
mov
movsb
xchg
or
cmpsl
cmp
cmpb
imul
loop
clc
jae
adc
and
mov
mov
adc
mov
loopw
ss
lahf
setno
cld
jo
fs
loop
ljmp
inc
fisubs
lea
pop
or
sbb
jb
and
ficomps
cmp
sbb
insb
std
movsb
jle
jne
jmp
fdivs
cmp
jge
xchg
pop
jne
pop
popa
mov
test
adc
jne
or
mov
out
inc
stc
lods
sub
enter
sbb
add
dec
jbe
fisubs
mov
adc
faddp
lods
in
rorb
mov
cmp
push
jmp
adc
int3
cltd
outsl
fstpl
hlt
loop
jbe
enter
sub
mov
xchg
iret
mov
stos
xor
push
or
imul
jmp
sub
xchg
sarb
imul
call
add
or
lock
les
inc
add
add
sbb
pop
inc
mov
add
push
and
xor
inc
adc
fucomi
jne
dec
sub
lahf
dec
mov
or
push
mov
mov
enter
pop
push
cmp
in
fistpll
ss
jmp
push
js
jbe
mov
jmp
das
je
loopne
mov
int
cltd
dec
and
inc
out
inc
int3
adc
adc
popa
insb
mov
or
or
jo
pop
jb
cltd
fisubrs
fcmovnu
adc
cmp
or
push
ret
cwtl
nop
loope
ss
flds
add
sub
inc
cmpsb
popf
inc
pusha
cmp
jne
rorb
mov
jbe
and
or
es
outsl
imul
sub
or
add
vsubsd
inc
and
mov
fimuls
adc
add
inc
ficompl
sbb
mov
popa
and
aad
jo
adc
pop
roll
fcompl
mov
or
andl
rorb
inc
or
rcrl
popa
nop
cmp
inc
loopne
sub
xor
push
and
sbb
jb
push
ret
push
imul
mov
sub
mov
sub
push
adc
pop
lock
adc
mov
mov
adc
repz
or
enter
adc
loopne
and
sub
inc
into
sti
in
sbb
push
aam
mov
or
jmp
adc
mov
jns
fadds
add
or
and
inc
cmp
mov
or
or
push
fidivs
stos
xchg
mov
and
aam
cwtl
leave
js
adc
push
gs
in
and
notl
lods
ds
sbb
bound
flds
addr16
jae
cmp
in
add
jbe
dec
inc
sbb
xor
sti
sbb
xor
lods
fnsave
mov
sbb
mov
jecxz
scas
push
mov
sbb
push
cmpsb
idivb
push
sahf
outsl
and
mov
xchg
push
push
sbb
gs
jo
mov
dec
mov
dec
jne
fcoml
aas
test
loope
pop
icebp
cmpl
int3
or
in
inc
add
in
or
pop
push
mov
jecxz
roll
mov
pop
push
mov
arpl
adc
stos
push
cwtl
push
fdivl
orl
inc
loopne
pop
adc
incb
push
and
mov
sub
jb
repnz
shl
cmp
cmpl
jne
sbb
pop
or
pop
inc
cmpsb
or
add
outsb
sbb
rolb
inc
fwait
aas
mov
cld
int
repnz
cmp
jle
push
movsb
sbb
jecxz
movzwl
fstp
insb
dec
inc
cmp
in
mov
sub
frstor
jne
push
add
cmp
int3
sub
pop
push
xor
push
mov
add
mov
pop
push
inc
shrl
jmp
out
add
pop
add
inc
das
enter
in
push
arpl
dec
std
cwtl
dec
fmuls
push
or
inc
push
insb
mov
dec
lock
enter
pop
sahf
dec
jo
dec
dec
sar
or
rolb
cmp
add
aas
or
push
inc
pop
repz
sub
inc
jo
jne
addl
cs
sub
xor
cmp
pop
sarb
shl
inc
in
stos
hlt
xchg
pop
int
adc
es
mov
pop
cli
stos
lret
jne
jbe
push
add
add
add
or
inc
or
cmp
add
xchg
imul
je
cmp
je
push
hlt
sub
lcall
je
cmp
mov
loopne
adc
jbe
mov
cld
push
cmp
cmp
jmp
sub
cwtl
adcb
aam
adc
frstor
add
les
or
or
imul
mov
je
lret
xchg
mov
outsl
push
gs
inc
or
jg
mov
subl
add
jo
inc
sub
adc
jae
dec
mov
pop
data16
jmp
pop
add
stos
sbb
dec
xor
cmpl
sub
jne
jg
push
loopne
dec
add
add
dec
hlt
sbb
enter
insb
ss
aaa
add
into
inc
shll
fistl
pop
add
sub
mov
push
sbb
push
push
mov
lcall
icebp
inc
mov
mov
adc
fcompl
cmpb
jo
mov
push
add
push
push
repnz
sub
pop
xchg
or
ficompl
push
sbb
pop
hlt
pop
mov
sbb
or
lock
gs
jg
lea
testb
or
adc
xchg
or
jb
lahf
mov
add
cmp
leave
jmp
mov
push
add
out
sbb
jne
adc
dec
cmp
mov
leave
lret
into
jne
data16
ret
mov
out
adc
loopne
nop
or
jmp
call
add
sbb
jmp
push
and
pop
pop
xor
dec
insb
push
inc
mov
xor
sbb
icebp
clc
daa
xchg
dec
inc
loopne
xor
inc
adc
jnp
and
out
test
ficompl
xchg
insb
inc
out
xchg
es
lods
popa
add
inc
jp
out
fdivs
cmp
jne
push
imul
xchg
push
adc
or
hlt
cld
sbb
inc
push
dec
jo
jnp
sub
iret
aaa
les
push
xchg
test
sub
shlb
dec
cmpsb
test
adc
add
rolb
test
adcb
pusha
sub
cmp
sbb
arpl
jno
pushl
mov
sub
imul
or
mov
sub
sub
mov
jns
push
or
into
xchg
shlb
cltd
shll
push
and
and
or
es
pop
push
or
es
filds
inc
or
mov
lock
subl
lcall
mov
push
and
mov
pop
lret
lcall
das
adc
outsb
dec
jno
or
or
bswap
cmpb
mov
and
fists
mov
mov
cmp
clc
fisubs
xchg
loopne
jae
sub
sbbl
insb
or
jmp
lock
bound
loopne
add
add
leave
add
pusha
insl
xchg
sub
fnstenv
push
jno
je
adc
cmp
scas
or
add
jmp
cmpsb
cwtl
lock
mov
add
add
cmp
insl
loopne
adc
dec
push
or
fadd
jmp
or
fxtract
sub
or
xor
sbb
dec
adc
cmpsb
xor
or
fcmovbe
lock
xchg
in
xchg
push
imul
js
arpl
cmp
and
ljmp
scas
jl
stc
adc
push
bound
bound
repz
neg
add
lods
cmp
fsubrs
or
add
ljmp
sbb
mov
mov
jle
add
mov
inc
inc
sahf
js
insb
mov
inc
push
or
adc
jns
pop
fldcw
movsb
mov
ficoml
ss
sbbb
pop
in
xchg
mov
dec
pop
xchg
cld
or
dec
in
add
xchg
cmp
or
lock
inc
push
push
out
sbb
lret
add
sbb
push
and
mov
mov
cld
inc
cmp
or
and
xchg
dec
sti
je
mov
jo
cld
pop
test
testl
adc
sub
sub
in
daa
jo
jb
dec
ljmp
jo
loope
dec
mov
sub
sahf
mov
rorb
test
xchg
sahf
sbb
cmpl
fldl
mov
pop
mov
or
orb
jo
lcall
loop
push
and
cmovb
mov
push
ficomps
sbb
ret
add
fiaddl
bound
cld
jo
and
out
aaa
mov
push
scas
popa
cwtl
roll
out
daa
dec
mov
andb
mov
push
adc
or
push
out
jb
mov
add
mov
jmp
in
dec
adc
inc
mov
adc
scas
pop
inc
dec
jae
mov
push
cld
orb
inc
xor
and
icebp
pop
jbe
rolb
xor
fmuls
sbb
push
lret
mov
mov
inc
es
add
dec
movsb
jbe
shlb
cmp
add
pop
inc
inc
inc
fdivrl
pop
cltd
adc
cmp
das
pop
push
push
daa
shll
lock
sbb
pusha
dec
add
add
and
push
aad
inc
xchg
leave
je
mov
fadds
or
jge
xchg
pusha
es
dec
repnz
xchg
mov
jg
mov
sahf
push
push
mov
add
xchg
mov
mov
addr16
push
push
mov
push
rcl
js
ret
jmp
fld
lock
xor
addr16
push
dec
adc
insb
stos
inc
mov
movsl
or
jne
pop
sbb
xchg
or
pop
je
jmp
or
push
dec
movsb
ret
jno
sub
xor
push
out
pop
jns
xor
mov
sbb
loop
or
add
jg
jmp
lock
out
push
icebp
dec
or
rcrb
xor
dec
nop
pop
icebp
jnp
mov
push
cmp
mov
and
sub
aaa
and
pushf
es
push
das
and
dec
inc
sbb
movl
orl
mov
lods
insl
enter
and
sub
lahf
mov
pop
or
adc
xchg
sub
and
test
sbb
mov
add
addr16
dec
push
popa
outsl
or
ss
push
jnp
jmp
sub
ficompl
pop
inc
cld
ss
jb
fsts
xchg
jb
in
fs
xchg
js
push
jge
cmp
call
push
push
sbb
xchg
pop
sbb
xor
xchg
adcl
mov
inc
mov
test
sbb
cmp
jle
mov
fnstcw
cmp
jne
and
mov
xor
xor
xchg
pop
ja
lock
cmp
push
adcb
repnz
ret
and
sbb
int
roll
jnp
and
repz
mov
xchg
je
fdivrl
paddsb
or
sub
les
jns
push
mov
push
popa
xchg
or
rcrb
cmp
inc
js,pt
xor
dec
xor
sbb
popf
roll
rcll
in
add
inc
cld
lret
clc
push
xchg
mov
stmxcsr
and
pop
out
add
popf
cmp
jne
cmp
add
push
fcomp
push
and
clc
jg
loopne
pop
outsb
dec
test
xchg
je
movq
movaps
ficoms
shlb
jle
xor
test
ror
test
insl
xchg
movsl
ret
jge
repz
or
in
adc
fcomp
xchg
ret
adc
movsl
dec
sbb
jnp
mov
scas
mov
add
adc
push
add
adc
push
fisubrs
sub
xchg
repnz
shrl
roll
add
xlat
xor
adc
addps
int
add
fdivrp
fcmovb
sbb
sbb
inc
mov
test
popf
inc
lcall
add
jns
ja
icebp
lret
mov
and
sbb
inc
xchg
xor
xor
push
inc
mov
notrack
loopne
xor
aam
adc
nop
pop
xor
push
ret
jge
mov
mov
icebp
push
ret
mov
sub
in
test
xorl
loope
or
jle
and
hlt
pop
pop
add
and
mov
push
scas
nop
and
je
clc
popa
inc
push
shlb
and
xchg
movsb
sbb
push
sbb
shlb
leave
idivl
or
mov
lds
xor
push
mov
cmp
fdivrp
xchg
stos
inc
subb
mov
mov
cmp
jne
cmp
xadd
adc
adc
aaa
fadds
repnz
mov
rolb
cmp
adc
repnz
push
or
insb
les
or
leave
mov
popf
mov
cmpsl
or
lock
imul
shl
fcomi
inc
pusha
imul
mov
mov
or
push
sbb
cs
push
pop
clc
push
pop
add
mov
xchg
inc
push
mov
xor
aas
mov
xchg
mov
push
rclb
mov
or
adc
jne
inc
cmp
sub
xor
pushl
mov
and
inc
cwtl
sub
ss
push
push
adc
mov
mov
test
inc
cwtl
jmp
clc
loop
rcrl
dec
sbb
jge
push
pop
inc
inc
cmp
cmp
add
movsb
mov
rolb
sti
push
dec
popf
cmp
or
dec
adc
xchg
adc
cmp
lret
add
adc
es
or
loopne
xor
or
sub
addb
mov
mov
cs
and
inc
or
mov
inc
hlt
cmp
jno
into
loopne
mov
mov
fcmovne
mov
dec
call
and
mov
loope
shlb
dec
leave
imul
pop
cmp
mov
mov
shl
rol
inc
inc
cmp
aam
lods
popl
jne
sbb
cmp
lock
jmp
jnp
push
cmp
sti
xor
loopew
dec
lret
push
pop
scas
sti
add
add
jmp
mov
cmp
nop
cltd
inc
mov
xchg
inc
stos
and
test
and
or
loopne
je
add
or
out
sub
orl
js
jae
sti
leave
xchg
hlt
daa
push
ds
mov
xchg
cli
inc
aad
cmp
stc
adc
inc
and
rorb
xor
mov
in
xchg
fiaddl
clc
mov
sbb
mov
cmc
mov
rorb
mov
pop
push
jo
sub
pop
rclb
cmp
addl
fidivrs
cmp
sbb
push
and
iret
data16
jne
or
or
xchg
hlt
add
jmp
js
fimull
inc
or
rorl
push
sub
pushf
push
adc
sub
push
and
push
or
scas
mov
add
or
and
push
ds
bound
inc
bound
cmpsl
inc
and
dec
xor
push
and
loope
cltd
rclb
lock
push
mov
adc
in
cmp
cmp
cmp
jl
jg
outsl
inc
xchg
jbe
inc
fiadds
push
mov
ret
pop
inc
sub
xchg
and
push
test
icebp
aam
inc
or
and
or
imul
lcall
push
mov
push
out
aas
roll
fs
or
lahf
jns
cmp
jae
sub
pop
adc
gs
insl
push
push
inc
xor
add
mov
mov
or
add
js
shl
ficomps
mov
add
aad
pushl
jne
mulb
je
fwait
movsb
test
jle
push
cmp
add
fimuls
sub
ret
adc
movsb
sub
shl
push
sbb
shlb
mov
push
lock
xorl
rcr
inc
test
sbb
push
sbb
mov
lods
lds
repz
mov
and
clc
sahf
push
jne
push
add
inc
push
rcl
xor
inc
test
aaa
fidivl
int3
test
in
adc
sarb
push
dec
rorb
inc
testb
sbb
add
jle
mov
sbb
gs
sbb
cmp
pop
jl
mov
les
cmp
push
div
fidivs
push
cmp
jb
xor
aad
in
sbb
ss
jp
mov
cmp
test
dec
mov
loopne
push
cmpsb
fmull
outsl
lahf
dec
mov
lahf
push
jbe
mov
adc
or
adc
xchg
test
pusha
dec
xchg
sub
push
push
in
idivb
pop
cmc
mov
add
nop
xchg
mov
sub
sbb
movsb
or
pop
sbb
cmp
jbe
out
mov
scas
ljmp
or
leave
mov
ret
adc
pop
push
mov
xchg
add
je
hlt
pop
cmp
pop
or
dec
scas
insb
or
inc
ret
testb
push
sub
sbb
adc
mov
sub
dec
jmp
or
sbbl
inc
push
pushf
daa
push
call
aas
push
sbb
push
jns
inc
jmp
pusha
xor
add
cmp
addl
push
cmp
xchg
mov
in
dec
push
jecxz
mov
lcall
fadds
ret
sbb
cmpb
or
rorb
shlb
mov
std
add
ret
pop
imul
adc
sub
fldl
inc
xor
inc
pusha
repnz
xor
and
lds
inc
mov
mov
mov
sub
loope
jge
hlt
pop
mov
sahf
inc
push
mov
js
adcl
mov
sbb
mov
inc
les
call
and
jmp
sbb
cmc
jl
loopne
xor
and
sarl
test
jb
movsb
mov
sbb
pop
ja
or
cltd
mov
mov
addb
in
and
sbb
out
clc
jl
push
inc
popf
push
mov
mov
test
dec
add
pop
or
dec
push
push
imul
sub
lcall
inc
xchg
push
mov
test
jnp
js
stos
or
imul
mov
bound
gs
leave
or
adc
jae
add
and
mov
pusha
add
pop
add
add
imull
add
jp
sbb
in
mov
or
mov
adc
push
imull
pop
in
test
je
dec
xor
push
mov
sbb
repz
push
lock
ret
lea
repz
imul
ss
push
pop
add
xchg
add
sbb
add
sbb
jns
add
adc
and
roll
jns
sarl
jno
jle
add
sbb
out
repnz
add
add
mov
push
xchg
xchg
inc
enter
pop
jb
or
in
xor
or
cmp
xchg
dec
or
sub
or
test
or
add
inc
fisubs
mov
mov
push
xor
cmp
ja
lcall
adc
xchg
add
push
pop
adc
fwait
sub
jb
sahf
adc
inc
or
iret
in
repnz
add
adc
push
push
and
add
lea
out
adc
adc
adc
inc
adc
inc
push
nop
push
push
pop
pop
cs
or
sbb
sbb
enter
sbb
sbb
in
cmp
call
adcl
rep
sub
je
pop
sbb
lds
leave
sbb
jge
sbb
sbb
out
add
pop
pop
jne
ljmp
jne
add
add
sub
cmp
cld
sti
add
pop
or
movl
xchg
jg
loopne
enter
sub
inc
push
setp
std
in
push
in
jno
repnz
sub
rol
enter
lea
aad
cmp
add
cmp
mov
cmp
fwait
out
push
or
push
adc
add
push
repnz
outsb
call
adc
dec
dec
cwtl
jmp
sahf
xchg
sub
or
sbb
sbb
out
pop
insb
nop
cmpsb
in
in
in
cltd
mov
in
inc
in
sahf
inc
push
nop
addr16
out
jge
jae
inc
push
sbb
pop
lock
lock
pslld
in
repnz
std
repz
push
and
std
hlt
hlt
enter
rorl
pusha
hlt
fwait
mov
cmc
cmc
inc
jg
xchg
idivl
sub
clc
clc
aaa
jb
push
clc
cltd
adc
inc
jns
seto
lock
cli
cli
in
in
iret
sti
sbb
xchg
fwait
lret
cld
cld
cld
je
int
xchg
mov
ss
leave
jnp
std
xor
sbb
push
bound
iret
adc
ret
inc
or
xchg
mov
dec
or
xchg
rcr
shlb
jp
pop
cmpsb
sbb
es
pop
push
adc
mov
xchg
add
inc
in
icebp
loope
jb
inc
mov
mov
xchg
sti
out
out
enter
cltd
outsb
call
adc
sub
int
mov
pop
jmp
psubusb
jmp
in
pop
and
mov
cli
xchg
inc
add
sbb
pusha
xorl
cltd
push
xchg
cmp
sbb
add
cli
push
adc
push
cli
sbb
rclb
repz
pop
enter
stc
push
stc
mov
fnsave
sub
imull
fwait
xor
add
stc
out
clc
dec
in
ret
cmp
inc
push
fsubs
sti
cltd
mov
repnz
cld
orl
xlat
ja
sbb
inc
jo
int3
and
push
popa
mov
cs
mul
pop
dec
pop
and
shl
scas
testl
out
push
fsubs
out
out
and
mov
notl
sti
imul
xchg
shl
dec
push
jno
pop
mov
xchg
xchg
mov
loop
rcrb
jno
les
and
and
and
negb
repnz
les
cmc
pop
mov
inc
repnz
cmc
jae
dec
push
cmp
pop
dec
cmc
div
jmp
xor
and
in
mov
clc
xor
push
jecxz
stc
popa
cmp
mov
mov
loop
xchg
hlt
pop
pop
repnz
hlt
push
hlt
mov
sbb
sbb
data16
mov
hlt
idivl
jo
mov
sti
lahf
xchg
adc
adc
lcall
mov
xor
loop
scas
repz
test
imul
jb
repz
repz
mov
and
push
imul
bnd
arpl
mov
dec
pop
je
xchg
repnz
cs
add
dec
in
in
dec
push
jno
cmc
and
dec
pop
je
add
and
sbb
mov
seto
divb
icebp
das
mov
test
lret
and
fcompl
cmc
cmc
cmc
add
and
lock
mov
aam
ret
sbb
jns
lock
stc
jmp
jb
cmc
jne
push
lock
mov
xchg
scas
jne
push
lock
test
ss
and
push
jne
adc
xor
ja
sub
out
ret
divb
in
cmovno
push
add
inc
sahf
xchg
int3
add
stos
loop
mov
add
jp
push
and
push
insl
add
push
adc
add
jmp
and
add
sahf
inc
shrb
pusha
pop
add
and
data16
pushf
pop
inc
add
mov
and
int
imul
jnp
int
shrl
add
and
and
jno,pt
push
pop
jle
loop
insb
ss
sbb
and
and
sub
stc
cmp
xor
pusha
rcrb
movsb
out
fwait
inc
jecxz
rcrb
add
roll
mov
add
jnp,pt
ds
and
add
pop
mov
mov
mov
add
sbb
mov
pop
add
add
loop
cld
jb
test
mov
mov
lcall
dec
stos
jo
js
sub
adc
adc
or
popf
les
pop
es
mov
push
add
adc
hlt
rcll
jns
sub
popa
lock
clc
orb
mov
push
dec
add
xlat
imulb
adc
mov
xlat
pop
pop
adc
shll
cmp
push
les
decl
sbb
sub
fiadds
cmp
dec
fmuls
and
adc
repz
adcb
lea
push
cmp
cld
inc
sbb
mov
ret
jg
push
leave
loopne
ljmp
xchg
xchg
addb
wbinvd
pop
mov
cmpl
mov
push
fisubrs
push
xor
or
je
sub
mov
push
xor
mov
ret
sbb
rorl
in
std
sarl
stos
mov
dec
ljmp
adc
or
stos
fsubs
push
or
loopne
jge
push
sbb
insl
and
test
jmp
pop
push
insb
insb
lods
add
inc
loop
xchg
ret
adc
jle
nop
stos
in
xor
and
jecxz
pop
js
add
add
call
sub
insl
out
nop
ret
adc
cmp
jb
and
fwait
or
add
pop
nop
pop
clc
test
inc
inc
aam
cmpsl
sbbb
data16
enter
lret
jbe
push
jbe
mov
mov
mov
jl
add
iret
hlt
mov
lret
cwtl
and
clc
mov
jo
cmp
sbb
cmpsl
test
mov
add
je
pop
roll
addl
pop
cmp
dec
or
enter
add
or
push
sub
fcmovnb
rorl
int3
imul
jns
adc
mov
add
adc
fs
xor
mov
add
stos
mov
or
or
jl
or
lods
push
mov
iret
inc
shrl
lea
mov
popf
pop
xchg
or
sub
les
cmp
cmp
mov
inc
jmp
cmp
jne
dec
fsubrl
cmpsb
add
sub
jae
inc
sbb
dec
xchg
imul
and
cmp
in
or
push
xor
out
add
jmp
mov
jns
out
inc
add
and
adc
out
push
or
adc
dec
add
add
inc
mov
call
decl
jo
jo
adc
lret
or
div
rorb
push
mov
sbb
jmp
fidivs
lret
sub
cmp
cs
or
leave
cmp
jae
push
enter
movsb
xor
or
jmp
and
dec
lret
mov
mov
mov
scas
pop
neg
nop
stos
mov
mov
sbb
and
lret
shll
adc
lret
jnp
xchg
cmpsb
jbe
inc
mulb
fistpll
clc
testl
loopne
pop
test
les
sbb
fdivrl
das
in
rolb
sbb
mov
and
mov
adcl
hlt
cmp
cmp
cmp
outsb
xchg
cmp
add
and
roll
or
sub
push
imul
cli
cld
fcmovnu
or
push
cmp
ss
jne
jnp
aam
pop
push
rolb
and
int3
push
cmp
jne
repz
out
mov
push
cmp
jne
imul
jae
jne
call
ljmp
adc
push
or
repz
add
jmp
adc
jmp
imul
iret
std
std
jmp
cld
push
sub
es
mov
je
sub
adc
mov
mov
add
push
shr
repnz
jne
jno
add
fs
cmpsb
stos
repz
pop
adc
add
leave
jns
pushf
ja
test
xchg
and
lds
xchg
test
or
dec
push
inc
or
push
push
push
or
adc
adc
adc
adc
enter
sahf
mov
lret
xchg
mov
sbb
mov
add
sahf
mov
jecxz
and
add
sbb
fimull
sub
inc
mov
add
or
jne
jo
adc
sarl
push
jb
adc
adc
stc
ret
cli
fstl
je
push
jmp
inc
imul
sbb
rcll
jne
arpl
or
mov
inc
inc
cmp
sbb
or
dec
outsb
out
jns
mov
lods
and
cmp
enter
gs
push
lcall
es
cwtl
mov
cmpb
sub
push
sub
add
data16
call
dec
cmp
loopne
cmc
mov
rclb
or
testb
pop
or
lock
jmp
lret
xor
add
nop
and
lods
nop
push
fimuls
imul
jmp
add
testb
sahf
sub
mov
xchg
out
sub
or
test
add
dec
jne
mov
mov
icebp
cmpsl
jns
inc
adc
ds
xor
dec
loop
iret
sbb
cmp
int
ds
xor
das
int3
add
cmp
xor
xchg
aam
clc
lret
add
cmp
jbe
cmp
sub
imul
int3
mov
dec
pop
pop
scas
push
mov
mov
inc
add
hlt
incl
rep
jmp
sub
mov
cmp
jb
cltd
fisttpl
fiaddl
enter
cmp
cmp
push
push
fdivrs
push
inc
and
and
shr
fiaddl
or
scas
adc
das
in
and
into
xchg
push
push
push
movl
sbb
mov
or
iret
repz
push
and
sbb
or
cmp
mov
inc
mov
mov
call
repz
in
lock
mov
clc
clc
cld
sti
test
lock
fnop
cmp
pop
push
push
inc
or
mov
xchg
mov
sti
and
outsb
or
push
lea
jl
cld
push
jo
sub
and
std
cld
out
mov
fcmovne
loopne
neg
adc
nop
xchg
daa
outsb
pop
sbb
stc
sub
cmp
in
sahf
ret
nop
hlt
movups
fiaddl
jl
sub
add
push
adc
inc
push
out
push
add
lods
pop
push
mov
cmp
pop
add
ljmp
mov
or
push
movsb
loop
cmp
lods
mov
xlat
cmp
cmp
repz
sbb
sbb
adc
repz
adc
adc
or
repz
add
fs
inc
lock
push
or
dec
push
xchg
push
add
pop
sub
dec
adc
daa
ja
fs
push
repnz
mov
xor
mov
mov
incl
inc
decl
jne,pn
pop
xchg
pop
pop
inc
jg
cmpl
xor
jbe
push
cltd
pop
or
idiv
add
mov
pusha
or
mov
adc
ja
in
sti
adc
adc
mov
jg
aam
jmp
cmp
jae
dec
loop
cmp
xor
jbe
mov
aaa
push
mov
dec
add
inc
dec
es
pusha
add
sub
mov
pop
adc
jg
add
lret
sbb
add
adcb
add
mov
push
sub
or
dec
dec
mov
cmp
nop
dec
mov
sub
push
jne
xchg
adc
adc
orb
pop
decb
push
mov
pop
ss
mov
inc
xor
mov
outsl
sbb
inc
add
inc
mov
lods
filds
ss
push
insb
ret
loopne
xor
add
dec
sbb
sbb
outsb
hlt
dec
sti
or
push
adc
ficompl
imul
mov
stos
inc
data16
sbb
insb
mov
pop
cmp
enter
push
imul
sub
insl
or
aas
jge
incb
pop
cltd
pop
idiv
cmp
inc
ret
insb
xchg
xor
push
xchg
inc
out
outsb
mov
xor
jmp
ljmp
into
pushf
mov
jle
push
pop
imul
popf
subb
pop
dec
scas
adc
fs
jmp
jl
mov
loopne
push
cs
pop
push
lods
xor
or
je
insb
sub
xchg
xchg
mov
dec
jb
jae
jb
and
mov
out
sbb
lods
lods
pop
daa
dec
add
dec
adc
cmp
iret
fcomps
add
add
sti
faddp
lds
cmp
jl
and
inc
pusha
test
pusha
jecxz
mov
add
mov
test
push
mov
jnp
loop
cmp
les
jmp
jge
pop
je
pop
pop
mov
insl
cmp
jle
popa
inc
movsb
pop
sti
pushl
scas
jno
xchg
fnstenv
int
int3
ret
xchg
mov
mov
je
dec
icebp
push
mov
nop
jne
mov
mov
mov
inc
popf
push
enter
loop
cs
dec
mov
mov
sbb
lods
js
adc
and
push
fs
or
inc
mov
push
aaa
subl
sbb
rcl
sbb
stc
pop
push
adc
lcall
xchg
inc
jmp
push
pushf
cs
adc
adc
pop
mov
and
push
pushf
jno
and
fldt
ret
push
je
inc
sub
push
push
movsb
xchg
inc
outsl
fcoml
sub
and
jge
loop
in
sbb
pop
jne
push
lock
dec
add
push
data16
out
bound
adc
adc
or
out
or
or
add
push
shrb
push
or
pop
add
lock
pushl
outsb
std
dec
ljmp
xchg
rorb
rclb
adc
jg
add
jo
rcll
ret
jnp
mov
pusha
hlt
dec
js
loop
or
ficoml
test
adc
mov
mov
add
jge
mov
in
clc
les
lea
or
mov
inc
add
pop
mov
cmp
lock
fisubl
mov
inc
inc
cmp
je
xchg
mov
fs
orb
pop
cmp
adc
add
push
lods
popa
fidivrl
dec
je
and
mov
or
sbb
or
pushf
dec
push
inc
pop
pop
fwait
mov
push
ret
pusha
loopne
push
ljmp
sbb
imul
sbb
js
inc
xor
lret
mov
sbb
lods
mov
xor
fidivs
insl
sbb
fnsave
or
xchg
dec
push
push
pop
jle
lret
pop
orb
movl
or
ljmp
add
test
jbe
aas
lock
test
cmp
test
lahf
pop
cmp
je
mov
add
add
inc
and
xor
lock
add
push
push
subb
int
fs
add
imulb
add
sbb
imul
sbb
dec
movsb
sub
pop
jns
sahf
dec
xchg
js
lret
mov
push
adc
fiaddl
fsubrs
cmp
ror
add
push
or
push
lea
cmp
and
jmp
dec
jnp
cmovge
or
xor
cs
roll
repnz
push
dec
sbb
arpl
mov
add
jne
orb
and
mov
in
pushf
cmp
sbb
clc
ret
pop
insb
mov
loopne
es
fcoms
movsl
gs
lret
xor
mov
andl
or
adc
hlt
xchg
cmp
jp
lahf
jge
outsb
pop
jne
jl
cmp
je
push
ret
test
inc
cmp
mov
sbb
mov
push
clc
pop
outsl
add
sub
sbb
rcrl
inc
push
jmp
cmp
clc
or
ja
or
inc
inc
int3
mov
lcall
testl
imul
shlb
out
sub
cltd
pop
stos
mov
xor
call
or
xor
insb
and
mov
es
inc
lea
aas
pop
cli
stos
mov
sbb
and
out
mov
inc
dec
test
dec
enter
add
sbb
in
addr16
and
incl
fstps
rcr
out
divl
add
push
ret
dec
push
and
push
dec
enter
push
fimull
fnstcw
aam
or
inc
xchg
cmp
rcr
dec
insb
push
jae
cmp
or
mov
pushf
add
mov
into
lods
shufps
and
push
sub
fmuls
inc
enter
jbe
add
jmp
push
adc
pop
xor
ljmp
jo
push
cld
jb
ret
fsubrp
cli
mov
lahf
mov
dec
js
add
pop
inc
pop
stos
inc
ss
repnz
or
hlt
dec
add
or
or
jmp
pop
clts
loope
and
cmp
pop
cwtl
add
pop
mov
mov
pusha
jo
subl
aad
cli
adc
lea
dec
call
mov
iret
push
adc
cmp
jg
add
or
std
cmp
xor
sub
or
push
cmp
test
mov
fbstp
cwtl
lcall
pushw
cmp
jle
xchg
sub
add
jb
aam
push
mov
cmpsb
push
push
pop
lcall
ja
jae
subl
push
les
adc
aam
dec
cmpsl
jecxz
sub
gs
mov
cmp
inc
sub
inc
lods
add
gs
dec
lret
adc
sub
push
lea
cmp
popa
ret
aaa
test
xchg
orb
push
ficompl
clc
dec
xor
inc
mov
xor
bound
inc
imul
jb
lea
push
adc
push
pop
dec
ss
outsl
dec
fistl
add
xchg
or
js
lret
cld
ret
aam
cwtl
mov
es
pushf
or
xor
cmp
sbb
xor
cmc
nop
mov
fsubs
jne
or
imul
xor
inc
cmc
pop
and
insb
adc
das
pop
pop
enter
or
fsubs
lds
xchg
pushw
push
mov
movsb
cltd
add
jb
and
jmp
pop
sub
sbb
fadd
adc
inc
add
out
ds
daa
adc
cmpsb
mov
cwtl
or
add
shll
push
cmpsl
jae
mov
add
xor
add
movb
pop
jmp
add
cld
std
add
jns
fdiv
notl
add
cmc
add
fcom
add
sbb
add
pop
or
xlat
popa
scas
add
cmc
adc
lahf
sbb
dec
loopne
xchg
push
je
cmp
shll
jne
pushl
pop
shlb
jmp
cwtl
lds
popf
adc
idiv
push
sbbl
pop
rcrl
fwait
cmp
adc
loope
cmpsb
jae
lahf
incb
add
inc
adc
hlt
mov
jnp
out
pop
push
jg
add
iret
xor
imul
mov
test
inc
mov
addr16
push
call
pop
mov
adc
sti
sbbb
and
add
dec
xchg
mov
xchg
nop
mov
outsb
adc
daa
or
add
push
jae
inc
jg
test
ljmp
andl
lret
push
cmp
icebp
mov
shr
leave
mov
cmp
sub
mov
loop
inc
inc
jle
les
inc
or
mov
sbb
ficompl
in
fucompp
sahf
and
mov
sub
or
push
xor
outsb
jno
inc
pushf
or
push
or
out
jbe
inc
push
lods
lret
test
call
in
sub
sahf
add
sub
lods
lods
xor
mov
mov
and
adc
dec
jo
pushf
popl
mov
cmp
mov
jnp
call
mov
add
mov
inc
adc
xor
stc
xchg
adc
sarl
and
lds
jae
push
fiadds
sub
inc
push
or
pop
xor
icebp
je
notb
or
data16
pop
add
adc
pushf
dec
in
or
nop
ret
sbb
adc
mov
aaa
inc
mov
roll
mov
adc
shl
or
mov
and
mov
std
aas
cmpsb
hlt
sub
mov
inc
dec
jne
lea
cld
and
or
lret
sbb
xorb
xlat
hlt
adc
mov
push
push
das
add
add
or
out
push
movb
and
lea
loopne
test
ja
mov
push
sub
pop
xchg
or
or
inc
cmpsl
sbb
cs
cld
addr16
mov
push
push
in
hlt
mov
std
push
cmp
push
push
cld
mov
dec
and
rcrl
clc
aas
push
push
orb
mov
sub
xchg
lret
and
sbb
into
jle
add
mov
outsb
aad
jmp
mov
lahf
lods
leave
sub
mov
cmc
fldl
pop
and
loop
push
imul
add
jmp
cmp
push
and
add
jmp
add
dec
mov
pop
dec
jb
pusha
mov
dec
std
mov
mov
jg
jecxz
shrb
ja
test
and
addb
mov
or
or
sub
ss
and
dec
jno
repnz
sbb
mov
pop
cmp
insb
push
cld
pop
inc
out
jmpw
jmp
push
xchg
mov
push
scas
adc
push
sub
mov
sarb
cmpsb
push
sub
aam
outsb
daa
pop
xchg
inc
cmp
std
jne
in
fisubl
jmp
sub
stos
inc
add
jne
cmpsl
cmp
out
sarb
ret
les
mov
pusha
xchg
lcall
scas
mov
dec
mov
mov
stos
push
mov
repz
cmpsb
cmp
cmp
or
std
fidivl
push
jmp
adc
test
pop
push
and
and
ljmp
push
rclb
cld
fildll
dec
or
dec
cmp
jbe
clc
sub
ret
cld
lea
mov
mov
mov
inc
pop
leave
inc
inc
cmc
lea
hlt
repz
imul
add
add
jmp
mov
pop
sub
loopne
adc
or
adc
cmp
ljmp
inc
dec
jne
outsb
cld
jge
rolb
add
jb
mov
sbb
mov
jnp
inc
ret
insb
out
adc
add
pop
mov
inc
mov
inc
dec
jne
mov
jp
mov
cmpsb
jl
sbb
adc
divb
addr16
mov
adc
jne
xchg
test
xor
or
hlt
gs
scas
dec
adcb
test
xor
inc
mov
xor
and
sbb
loopne
adc
sub
mov
ficoms
mov
pop
sub
add
inc
xor
inc
sbb
ret
ss
test
mov
inc
pop
insl
and
int
jo
inc
adc
dec
inc
push
loopne
mov
jbe
push
rolb
test
cli
lock
xor
repnz
pusha
shll
mov
mov
push
cwtl
or
je
std
outsb
xor
lret
pop
sub
jmp
xor
add
mov
mov
add
cmp
rolb
out
arpl
xchg
stos
cmpl
xlat
fwait
popa
popa
push
lahf
inc
mov
data16
idivb
dec
adc
mov
mov
cmp
push
mov
pop
and
cmp
xor
addr16
mov
push
sbb
adc
cmp
es
dec
or
and
pop
sbb
or
pop
pushl
sti
mov
xchg
mov
mov
jmp
lahf
das
adc
in
sbb
les
xchg
xchg
int3
sub
mov
and
mov
mov
jo
roll
xor
fimuls
inc
lds
jle
iret
mov
push
cmpl
adc
mov
or
cmp
push
add
sub
clc
decl
jne
sbb
sbb
orl
xchg
notb
nop
add
sbb
add
lea
jnp
mov
popa
mov
jnp
or
idivl
add
push
sub
xor
xorl
clc
sub
sub
loop
xor
cmpb
lods
mov
pop
pop
ds
adc
sub
pop
in
pop
add
adc
mov
pusha
jbe
cmp
aad
and
ret
lcall
jo
loope
arpl
add
adc
adc
enter
or
add
sub
rcll
add
inc
ret
push
jbe
pop
mov
mov
aaa
es
sbb
add
push
cmp
rol
orb
ret
mov
cmp
fcoms
mov
dec
fimuls
push
cmp
ljmp
cld
mov
push
and
fwait
xchg
jne
popf
out
call
jge
and
jecxz
inc
shll
sub
jnp
mov
jmp
shrb
loope
cs
mov
inc
adc
dec
dec
testb
inc
pop
call
ret
inc
adc
cwtl
and
sbb
or
push
movb
push
jo
cwtl
mov
and
inc
or
rolb
mov
push
les
movsb
xchg
dec
jb
iret
xchg
ret
mov
pop
push
push
mov
inc
mov
jg
jnp
cmp
test
adcl
js
loopne
dec
mov
sub
dec
sub
and
roll
push
popf
data16
push
add
dec
sbb
bound
popf
dec
mov
pop
addb
xor
xor
les
sbb
iret
adc
add
arpl
jp
call
and
sub
sub
and
jb
cmp
pop
jb
pop
inc
dec
pop
inc
test
mov
icebp
or
jle
loop
pop
pop
push
popa
jmp
and
dec
xor
cli
and
pop
cmp
je
jle
popf
add
mov
mov
push
loope
jge
sbb
push
inc
inc
into
pusha
pusha
lock
xor
xchg
mov
pop
sub
mov
cwtl
out
and
cmpl
dec
mov
push
stos
out
shlb
or
mov
test
pop
inc
dec
cmc
pushf
dec
xor
xchg
mov
out
mov
sub
data16
sbb
mov
dec
sub
iret
test
fnstenv
pop
mov
cs
gs
xchg
mov
push
frstor
das
pusha
xchg
sbb
clc
pop
mov
jp
pop
inc
sub
andl
sub
push
pop
lock
sbb
add
lret
xor
popf
cmpsb
jle
sub
loopne
fsubl
gs
fcomps
int3
in
in
data16
popf
enter
hlt
out
movsl
shrb
test
nop
jo
fs
shll
enter
dec
cld
adc
jno
aam
sub
aam
and
in
lock
test
fcomps
adc
xchg
dec
mov
xchg
popa
pop
popa
dec
movsb
js
jmp
jge
and
cmp
fildll
and
sbb
or
pop
ret
add
insb
or
xchg
mov
lcall
mov
aam
test
lcall
arpl
arpl
mov
or
dec
jl
push
insl
test
iret
repz
or
push
ror
sarb
test
pop
mov
push
jmp
mov
nop
gs
and
xchg
fs
divl
nop
movsb
push
enter
pop
enter
nop
gs
gs
jnp
inc
mov
or
push
push
pop
mov
repz
insb
je
gs
ret
add
pop
inc
mov
mov
gs
xchg
dec
or
jecxz
mov
test
sbb
sub
popa
inc
call
arpl
aaa
cmpsl
mov
cmp
fstpl
fstpt
or
add
loope
lret
jle
cld
inc
ret
mov
inc
pusha
call
loopne
mov
push
rorl
jge
inc
mov
xor
lods
mov
jae
popa
test
pushf
cmp
push
push
add
pop
add
aam
mov
sub
and
adc
xor
adc
repnz
inc
mov
or
loopne
gs
and
stos
and
fcomip
mov
aas
lods
mov
cmpsb
hlt
fdivs
jne
hlt
mov
adc
imul
popf
mov
rcrl
inc
jb
enter
shrb
testl
jne
imul
xor
pop
and
pop
or
xchg
je
or
and
push
push
jge
jmp
xorl
add
je
bound
adc
push
movl
add
jmp
adc
mov
shll
sbbb
sbb
jbe
ret
addr16
lods
push
bound
xor
inc
lcall
hlt
dec
or
mov
xchg
jns
outsb
cmp
cmp
loop
adc
outsl
push
leave
push
xchg
mov
pop
cmpsl
loope
aam
add
sub
loope
notb
cmp
test
ja
enter
lock
call
sub
push
out
sub
inc
push
mov
pop
outsl
push
xchg
xor
push
mov
hlt
jecxz
jmp
dec
sarl
mov
push
inc
and
or
push
or
or
jl
ljmp
dec
or
xor
fwait
adc
hlt
orl
sbb
popa
xor
es
or
test
loopne
adc
inc
test
les
or
add
xchg
push
filds
sbb
lea
inc
mov
inc
into
add
jge
mov
pop
push
pop
aad
add
mov
push
inc
xchg
and
push
jmp
push
jbe
push
inc
or
dec
fiaddl
mov
cmp
in
add
shrb
and
mov
mov
mov
fmuls
mov
pop
test
xchg
test
adc
jnp
sbb
test
cmp
ret
pushf
aaa
add
dec
xor
sub
sahf
test
pop
mov
pop
xchg
imul
add
adc
jbe
push
or
test
mov
push
in
cmpsl
adc
ret
icebp
js
fisttps
pop
divl
in
xchg
xor
inc
sub
pop
enter
into
sbb
clc
dec
xchg
add
cs
sbb
cmp
ljmp
cmpsl
ljmp
and
or
add
inc
loopne
adc
cli
add
add
inc
push
jp
dec
sub
in
mov
and
push
int3
andb
or
mov
ljmp
xchg
push
push
lock
mov
outsb
mov
dec
jmp
dec
xchg
sbb
test
mov
jo
dec
or
scas
sbb
outsb
repz
mov
aam
jbe
orl
mov
pop
imul
pop
or
scas
into
lcall
scas
jg
and
je
and
aaa
add
sti
xchg
lret
lret
rorb
popf
in
mov
pop
cs
fadd
fadd
ret
cmp
push
xor
push
mov
mov
call
test
bound
leave
movzwl
test
rcrl
in
or
lret
inc
or
pop
dec
dec
mov
shrb
loopne
outsl
aaa
adc
pop
ja
mov
movsbl
insl
insb
mov
test
call
pushf
add
sar
mov
pop
sbb
js
out
add
cli
mov
cs
aam
clc
fdivs
mov
dec
or
je
mov
xor
inc
adc
in
fldpi
pop
or
add
cmp
dec
sbb
mov
adc
jo
push
test
or
aam
arpl
xor
mov
adc
clc
arpl
lret
dec
lock
ja
movsl
mov
mov
leave
test
out
roll
hlt
stc
outsb
outsb
fwait
add
je
insb
je
adc
test
outsb
loope
insb
cmp
popa
lds
sbb
mov
outsb
xlat
pop
and
pop
or
xor
sbb
add
orb
scas
mov
ljmp
xor
or
imul
mov
ret
imul
je
ret
movsb
mov
xchg
movsl
ret
pop
mov
and
jnp
push
sbb
js
mov
inc
je
pop
push
in
imul
ret
mov
ret
add
sbb
imul
cmp
xchg
loop
and
push
dec
nop
and
jae
pop
testl
cmpsl
loope
xchg
popa
dec
aaa
jne
das
pop
push
scas
mov
add
pusha
mov
sub
loope
sbb
mov
jo
imulb
es
imul
push
ljmp
mov
pop
pop
jne
add
push
insl
cmp
sbb
jbe
pushf
sub
xor
inc
sub
add
lret
test
push
push
ss
adc
pushf
cmp
das
std
out
pushf
je
mov
push
mov
movb
cmp
pop
lahf
aas
push
in
adc
jge
lcall
mov
mov
dec
mov
pop
data16
xchg
rorb
add
xor
mov
sbb
jns
push
mov
xchg
sbb
cmpsb
jecxz
sti
sub
pop
and
gs
add
addr16
push
or
je
cmp
je
xchg
jo
test
insl
out
push
xchg
out
je
aas
add
mov
ffreep
test
xor
add
cmp
movsb
mov
call
adc
xchg
mov
lds
jecxz
in
xchg
inc
cltd
mov
into
imul
jne
mov
jne
mov
mov
push
cmp
jle
insl
cmpl
incl
loopne
xorl
or
adc
mov
mov
call
cmpsl
movsb
push
mov
adc
insl
pmaddwd
sub
lea
clc
or
popf
test
outsb
scas
dec
sbb
movsl
push
cmpsl
adc
or
xlat
dec
add
add
jg
ds
inc
add
loop
push
push
bound
push
outsb
inc
sbb
jae,pn
addr16
decb
cmp
test
lahf
inc
psubsb
jecxz
js
xor
ret
pop
data16
push
sub
push
je
ret
jecxz
jne
cmpsw
ljmp
sbb
inc
xchg
add
push
add
cmpsb
insb
aaa
and
jmp
aaa
gs
sbb
int3
je
cltd
ss
add
sbb
pop
jl
adc
push
jae
mov
neg
jecxz
nop
sbb
fimull
mov
or
jno
into
je
ds
test
pop
mov
or
jne
and
lea
imul
or
pop
or
push
inc
inc
and
decl
loop
push
lahf
sarl
jmp
xchg
clc
sahf
add
mov
dec
jmp
jo
out
adc
xchg
sub
inc
cmp
push
stos
aas
je
addr16
add
into
subb
shlb
mov
movb
inc
jmp
bswap
sub
or
jmp
dec
xchg
push
ss
xchg
xchg
repz
and
sub
push
je
data16
test
sub
xor
mov
jmp
sub
sub
push
in
call
and
pop
rcll
cltd
sub
sub
inc
adc
push
cmp
sbb
jns
cmp
in
fdivrl
lea
shr
jle
or
add
jbe
dec
addl
adc
fdivs
out
add
xorb
cmp
call
in
fistps
rcll
jnp
movsl
push
sbb
mov
xchg
lods
add
cmpsb
cs
int3
jo
je
sbb
push
pushf
adc
icebp
jl
xchg
test
push
xchg
adc
lahf
clc
cmp
mov
insl
or
adc
loope
push
cmp
ds
pop
push
add
dec
adc
or
outsl
sarl
hlt
insl
push
ljmp
iret
mov
push
cmp
rolb
addb
mov
or
pop
push
push
pop
ljmp
mov
fmull
mov
or
ret
push
cmp
add
nop
movsb
insb
repnz
stc
shlb
shl
mov
loope
jle
push
mov
mov
outsb
inc
jo
aam
daa
and
push
add
lcall
pop
daa
xlat
or
jl
push
pop
out
inc
cmpb
pop
test
out
xchg
cmp
je
lds
leave
xchg
sti
pop
cmpsb
test
and
push
dec
xor
les
pop
sbb
dec
xor
cmp
ss
push
pusha
xor
pop
jne
cltd
cmp
jmp
push
cmp
xor
adc
lahf
imul
add
aam
lock
les
imul
add
mov
test
sbb
test
out
sub
pop
adc
push
cwtl
pop
rclb
ss
in
mov
jge
test
or
adc
enter
push
or
fcompl
dec
es
rclb
movsl
xchg
mov
aad
pushl
mov
sub
dec
push
add
cld
shr
jnp
fdivs
add
inc
imul
cld
cld
cmpsl
add
lea
mov
popf
mov
push
cld
ljmp
divb
push
clc
pushl
add
cmp
jbe
push
pop
dec
lock
or
subb
jae
mov
shr
lea
add
add
shll
pop
mov
shlb
sbb
pop
adc
mov
mov
push
pop
push
mov
push
dec
pop
add
stos
xor
and
addl
jg
push
jecxz
incb
std
xchg
stc
sub
and
sti
add
or
adc
fiadds
xchg
mov
mov
imul
adc
sbb
pop
mov
jno
jg
fnstcw
mov
shr
not
and
sbb
dec
add
xor
push
mov
das
mov
xor
dec
jle
pop
dec
add
cmp
dec
lret
mov
add
mov
cs
fisubrs
lea
mov
ficoms
int3
inc
adc
dec
or
xchg
push
fwait
add
dec
pusha
mov
xchg
cmp
xchg
ljmp
loope
rorb
pop
jl
lahf
push
or
pop
mov
jmp
lods
sbb
lods
dec
push
mov
ljmp
dec
insl
or
cmc
lcall
cs
and
and
pusha
push
pop
inc
or
mov
paddsb
shl
add
scas
jp
push
call
aas
insb
loop
jnp
mov
push
or
cmp
sub
dec
inc
adc
dec
adc
add
rclb
ljmp
push
push
dec
push
adc
int
mov
adc
adc
dec
adc
push
jl
sub
add
jle
cmp
adc
aaa
jo
cmp
mov
inc
inc
mov
cmp
jne
push
pop
mov
imul
dec
cwtl
outsl
push
or
mov
iret
js
add
int3
cmpsl
mov
les
les
sahf
dec
sub
adc
leave
push
or
lods
aad
xor
adc
adc
cmp
jmp
orl
roll
lds
sbb
pop
jo
mov
jl
inc
out
je
add
inc
fisubl
sbb
mov
push
ds
mov
inc
clc
pop
lock
adc
add
or
hlt
push
out
pop
or
imulb
sbb
dec
add
sub
add
jmp
dec
clc
mov
sub
shr
rolb
dec
jno
pop
clc
clc
incl
nop
cld
or
adc
mov
inc
cld
lock
call
ljmp
je
clc
add
movsb
dec
daa
adc
jnp
aaa
add
inc
bsf
pop
mov
mov
lock
clc
aad
jg
dec
inc
jne
or
lds
not
and
les
jl
adc
sbb
xor
loopne
sub
pop
shr
push
inc
pop
xorb
mov
pop
cmp
add
or
ret
sbb
cmp
scas
or
add
push
xchg
add
mov
int3
push
pop
lcall
pop
inc
add
stc
sbb
clc
rcr
sub
add
cmp
or
rol
dec
or
out
add
push
jns
and
jle
sub
add
insb
mov
push
adc
fiaddl
mov
cs
fstpl
lea
lods
gs
sti
cli
jg
shll
mov
pop
cmpsb
repnz
pop
push
pop
adc
add
lcall
adc
and
js
push
ja
and
sub
adc
inc
insb
xor
out
and
int
inc
push
mov
sub
jl
add
or
mov
imul
dec
insb
pop
xor
push
sar
dec
jo
xor
jp
movsb
pop
inc
and
lods
xchg
lock
cld
xor
cmp
fwait
cmp
je
filds
cmp
push
mov
je
add
fbstp
mov
add
adc
adc
fimull
or
dec
lea
mov
push
xchg
sahf
jbe
mov
mov
push
cmp
pop
push
cs
mov
test
pop
jb
xlat
cmp
dec
inc
xchg
hlt
aaa
dec
movb
loopne
add
jp
insb
mov
ret
pop
and
icebp
mov
push
dec
push
push
push
jge
and
shr
adc
and
push
in
or
ret
shrl
mov
nop
cmp
and
decb
xlat
mov
inc
mov
ret
adc
pop
int3
mov
jne
mov
outsb
inc
aas
fnstenv
push
jnp
add
fcmove
jae
xor
aaa
arpl
dec
loop
cmp
insl
cmp
xchg
and
leave
inc
xor
lret
cmp
dec
dec
das
cmpsb
test
nop
or
pushl
pop
fcmovnb
mov
in
cli
and
cmovp
push
inc
mov
sub
pop
iret
jne
mov
jno
mov
outsl
jmp
jbe
mov
dec
mov
mov
into
jne
mov
push
pop
les
inc
test
inc
push
pushf
mov
sub
in
sub
icebp
sbb
shll
inc
and
xchg
dec
stos
inc
cmpsl
cmpsb
add
xchg
sbb
cmp
add
iret
push
sahf
cmp
loop
cmp
and
mov
decb
jne
cmp
and
jmp
jp
es
mov
cmp
jge
jne
dec
push
and
outsb
clc
into
xor
dec
inc
xchg
add
mov
or
inc
and
rcrl
or
cmp
rcl
sarb
outsl
or
inc
lock
cmp
or
dec
sarl
inc
or
xchg
mov
push
mov
or
push
std
and
nop
push
mov
call
out
sbb
add
scas
aam
pop
cmp
push
lea
cmp
sbb
pop
mov
push
ds
add
leave
jp
lock
das
repnz
cmp
cmp
clc
fnsave
pop
jb
or
xorl
mov
pop
jp
jae
jge
and
cmp
sarb
incl
mov
icebp
push
adc
roll
mov
or
push
push
cmp
mov
out
pop
adc
and
sub
mov
add
xlat
lcall
mov
add
jbe
xchg
addr16
mov
jbe
sbb
mov
and
sahf
rolb
in
or
es
adc
out
xchg
or
push
dec
or
push
push
enter
test
mov
out
pop
mov
sub
loop
xchg
inc
pop
orb
push
mov
pop
inc
dec
sarl
fiadds
fidivrl
mov
rcll
adcl
push
out
dec
scas
loope
divl
pop
jne
hlt
and
pop
add
loopne
mov
std
pop
insl
adc
mov
sbb
ret
mov
mov
dec
es
mov
mov
push
or
addb
addl
mov
cmpsl
pop
jl
mov
jbe
xchg
call
hlt
and
insb
int3
push
les
jne
test
inc
or
stc
fld
add
add
mov
add
jmp
mov
xor
hlt
inc
inc
add
jne
daa
into
sub
aas
xor
jle
jg
lods
jns
mov
pop
and
or
adc
mov
lods
jl
jo
popf
call
es
hlt
mov
ret
jns
sbb
pop
xor
mov
mov
add
adc
adc
jge
or
js
jmp
jl
stos
jb
xor
in
int3
test
push
mov
je
xorl
mov
cmpl
movzbl
pop
or
xchg
imul
test
dec
jl,pn
inc
mov
sub
add
xor
ffree
dec
sub
repnz
xchg
movsb
mov
iret
sarb
add
loop
std
cmp
add
lods
or
test
pop
add
pop
xor
arpl
fsubrl
into
rorb
xchg
push
repnz
ss
and
scas
and
hlt
fidivrs
in
hlt
icebp
and
inc
pushf
inc
icebp
outsb
fistpll
insb
jne
jp
mov
xlat
xor
adc
and
add
inc
fimuls
adc
xor
cmp
lcall
inc
push
cmc
jmp
sbb
dec
int3
les
test
pushf
xor
ret
jne
jns
movsb
in
add
or
leave
jl
nop
mov
sbb
adc
pusha
lock
push
xlat
aam
xchg
aaa
sbb
int3
inc
pop
dec
lahf
call
enter
and
xchg
leave
enter
and
in
repnz
pop
sbbl
dec
neg
lret
xchg
and
dec
xor
or
outsl
xchg
call
push
pusha
xchg
or
nop
xorl
aas
addl
mov
andb
xchg
mov
or
adc
test
jb
mov
call
mov
push
cmp
jb
jge
push
hlt
xchg
or
out
pop
xchg
push
and
ret
sahf
inc
sub
lods
rclb
jle
call
call
push
lods
add
nop
mov
dec
scas
nop
sub
lock
mov
in
xor
leave
add
in
daa
pop
enter
jo
adc
test
mov
mov
lock
cld
enter
cmp
subl
bound
or
add
mov
mov
and
jl
cmpsl
jne
mov
dec
test
imul
inc
inc
ss
add
popa
or
ja
sbb
jne
cmp
push
or
loopne
testl
mov
mov
lret
mov
pusha
out
sub
inc
cmpsb
ret
xchg
xor
jne
fidivl
mov
mov
decl
or
leave
mov
add
or
and
pop
or
inc
inc
adc
add
push
cld
inc
nop
inc
and
mov
add
or
sbb
inc
add
sub
es
adc
mov
push
sarb
dec
shr
lds
or
ret
ja
aaa
cmp
add
add
push
inc
cmp
cmp
and
push
int
add
cmp
sub
add
out
mov
jne
mov
aam
mov
cld
add
xchg
cmp
dec
jnp
cltd
mov
out
add
add
jmp
xor
push
pusha
subb
jmp
add
add
add
mov
or
adc
cmpsb
inc
add
mov
add
std
jne
add
lods
push
add
hlt
or
ja
inc
cld
push
ds
mov
mov
dec
cmp
inc
aaa
sbbb
adc
das
or
mov
flds
mov
insl
call
push
or
shll
enter
xlat
or
mov
sub
adc
loopne
cmpsb
imul
jno
lcall
sub
icebp
scas
aad
dec
in
push
dec
adc
cmpsb
inc
lods
rcr
cli
lret
je
pop
sbb
or
jmp
dec
pop
mov
dec
mov
in
inc
inc
add
jno
je
push
or
dec
test
dec
aam
fdivs
mov
push
push
fdivs
fldl
or
fldl
mov
sbb
or
sub
sahf
loop
or
icebp
cwtl
push
inc
lcall
fcmovne
pop
jmp
jo
push
fldt
dec
jge
mov
mov
xlat
das
mov
pop
sar
jmp
je
add
and
sbb
push
lea
sti
fnstenv
fdivrs
xchg
insl
ljmp
dec
bound
mov
fnstcw
xchg
inc
int
xchg
jmp
rcrl
mov
adc
stc
fwait
add
xchg
inc
test
sub
or
test
call
jo
sahf
lret
adc
fdivrl
ret
add
fstl
push
shl
push
jl
lcall
rorl
das
and
inc
lock
pop
adc
sbb
and
sub
out
lret
mov
push
dec
jmp
sahf
push
pusha
push
imul
fwait
mov
js
jo
cmp
divb
push
pop
sub
test
or
push
mov
mov
pop
dec
rcrb
sbb
jle
push
jle
sarb
and
pop
push
inc
jg
into
or
in
mov
rcr
xchg
jmp
inc
faddl
popa
dec
jle
or
popa
push
jmp
jmp
mov
clc
push
fmull
hlt
sbb
ret
jp
cmp
mov
jne
push
push
addl
in
jle
or
arpl
inc
add
mov
dec
mov
adc
pop
add
mov
in
mov
sbb
add
push
pop
data16
adc
enter
mov
in
jmp
adc
pop
cltd
js
movsl
mov
es
and
xchg
mov
faddl
jne
jb
rol
cmp
enter
mov
lods
std
inc
arpl
xchg
outsb
inc
lock
mov
pop
mov
shr
push
clc
and
jecxz
mov
inc
add
pop
inc
clc
push
jmp
jne
dec
sbb
pop
sar
test
lea
testb
repnz
add
inc
cmp
stc
iret
movsl
sub
out
or
mov
iret
xchg
out
test
inc
pop
push
inc
mov
add
push
sub
or
inc
jno
ja
adc
and
push
mov
pop
cs
xchg
std
lods
cltd
cmpsb
mov
mov
leave
rorb
xchg
pop
shl
enter
fs
inc
into
aad
dec
idivb
gs
pop
or
add
shlb
add
jno
add
ret
mov
cmp
hlt
out
ficompl
stc
or
inc
mov
std
cs
xor
jge
cs
call
in
imul
mov
push
or
data16
je
or
push
lahf
or
jne
inc
sub
pop
aad
sbb
insb
ss
jnp
mov
pop
inc
jne
sub
inc
xor
or
adc
movsl
test
imul
imul
mov
pop
pusha
sbb
cmp
movsb
push
je
cmp
leave
shll
and
repz
in
lods
sbb
mov
xorl
mov
push
loope
jns
outsb
call
lods
gs
add
cmp
add
mov
bound
push
inc
cmp
pop
imul
std
dec
mov
jne
and
inc
in
inc
icebp
mov
cwtl
add
and
pop
es
cmp
xor
pushf
cmpsb
cmp
push
adc
jo
mov
testl
push
or
or
cwtl
lret
fcmovbe
jns
mov
mov
sahf
add
mov
push
add
inc
cld
dec
add
sub
or
cmp
jecxz
enter
mov
movsb
mov
jno
test
je
or
mov
pop
and
pusha
inc
cmp
mov
add
arpl
fstpl
mov
push
rorl
mov
std
xchg
dec
in
xchg
mov
leave
xchg
mov
enter
insl
jg
std
shrl
das
jnp
daa
sub
std
fdivr
adc
push
xor
sub
sub
mov
test
movsl
test
add
rcl
xchg
mov
pop
jb
sbb
xchg
iret
addr16
std
call
sarl
mov
call
mov
jbe
gs
push
mov
fdivrs
pop
sbb
mulb
in
mov
inc
xor
mov
test
pop
lds
sub
push
in
mov
popf
xchg
test
push
into
sbb
call
mov
cmp
cmpb
cmp
xor
mov
xchg
movb
cmp
mov
mov
out
imul
jmp
push
movb
xor
pop
pushf
adc
xchg
xchg
push
cwtl
dec
xor
roll
push
inc
into
inc
inc
adc
mov
ja
sub
dec
andb
push
cmp
cmp
mov
sbb
or
enter
std
lock
pop
mov
insl
cmp
test
push
loopne
mov
xchg
std
inc
repz
aad
fisubl
push
mov
popa
jmp
fnstenv
mov
fdivrp
or
dec
cs
pop
jne
fdivp
sub
test
sub
enter
mov
add
pop
test
pop
lock
xor
mov
loop
push
sub
sub
imul
or
adc
and
jnp
iret
ror
cmp
popf
push
js
int
test
cmp
addr16
testl
dec
pop
ds
mov
leave
iret
lret
lock
dec
xor
add
fbstp
aad
les
insl
loope
in
mov
movsb
adc
loop
cwtl
inc
push
inc
adc
faddp
lret
jne
cmp
xchg
sbb
cmovge
or
ss
das
subb
gs
dec
pop
jno
push
xor
push
sbb
push
cmp
dec
std
std
std
or
dec
loope
jge
inc
lret
sub
sub
dec
shrb
mov
sbb
jne
and
pop
inc
xchg
popf
jg
mov
or
xchg
mov
sub
mov
adc
shll
add
gs
xor
xor
pop
pop
leave
cltd
movsb
jb
mov
movsb
in
and
in
mov
repnz
and
loopne
inc
lea
aad
pop
out
adc
adc
sub
cmp
ja
fisubrl
sarl
or
add
leave
or
js
mov
mov
lock
add
xchg
popa
enter
lock
or
push
inc
ljmp
sbb
push
repz
xor
repz
add
jb
sbb
inc
push
jns
adc
push
jecxz
inc
call
and
movsb
push
cmc
mov
pop
bound
add
adc
and
inc
mov
repnz
les
imulb
or
ds
stos
mov
add
or
push
dec
ljmp
es
xchg
cmpsb
push
ret
pushf
and
sbb
pushf
and
sub
mov
nop
adcl
leave
mov
jbe
sbbb
mov
test
pop
std
mov
pushf
push
loope
xor
cmp
repnz
mov
cmc
sbb
mov
mov
mov
and
int
cld
lahf
andl
dec
and
mov
lea
stc
pushf
pop
pause
lret
push
divl
push
pushf
and
and
clc
mov
loopne
test
dec
stc
pushf
loop
in
lods
xchg
aaa
ds
mov
mov
dec
sub
dec
xchg
dec
inc
pop
inc
xor
nop
dec
es
movsb
inc
xchg
nop
bound
dec
inc
or
adc
test
scas
nop
incl
dec
adc
pop
add
xor
nop
nop
pushf
enter
lods
lods
test
or
lods
cwtl
pop
addr16
and
mov
adc
fisttps
jg
testb
inc
add
xor
shrl
sti
mov
test
lret
fwait
push
pop
loopne
or
and
or
rcr
pop
jne
jae
bound
arpl
test
aad
sahf
or
or
xor
testb
js
loop
sbb
imul
dec
mov
js
adc
add
cmp
addl
mov
into
mov
mov
and
push
gs
sub
mov
sub
xchg
int3
adc
jb
andb
inc
mov
inc
addr16
into
cmp
pop
es
jl
dec
lret
data16
pop
sub
push
pop
or
mov
daa
or
stos
lret
outsl
mov
test
je
mov
xor
bound
ret
shrb
mov
sbb
fldenv
in
ret
and
jne
lea
popa
add
sub
add
les
mov
push
mov
shll
jl
lock
fucomip
stos
bound
scas
jb
ret
sbb
imul
in
lahf
sub
cs
cmpsb
mov
cmp
xchg
mov
mov
xor
aaa
decb
fidivs
push
dec
pusha
test
push
and
ss
andl
mov
xor
das
mov
and
cmp
pop
adc
xor
xor
sets
insl
mov
sub
shrb
cmp
add
enter
je
hlt
daa
clc
inc
push
inc
pop
ret
sbb
jae
testl
add
cmpl
test
rclb
jp
les
push
mov
lods
sbb
mov
imul
insl
dec
add
rep
test
pop
ficomps
add
pop
cli
testb
jbe
inc
mov
shll
gs
movsl
loopne
leave
adc
sub
pop
jae
dec
and
pop
adc
add
imul
xor
jb
pop
jmp
add
xorl
jbe
loop
cmp
shr
push
clc
movb
inc
arpl
adc
push
dec
bound
mov
inc
or
adc
push
and
cmp
dec
push
push
addr16
jecxz
mov
mov
out
adc
aam
push
sub
mov
jo
jl
inc
xor
mov
iret
int
xchg
xchg
add
add
add
pop
push
sahf
inc
sub
and
or
fwait
daa
xchg
stos
add
push
lds
adc
xor
sarl
rcrb
imul
cmp
test
xorb
or
pop
push
push
xchg
test
je
js
xchg
xor
xchg
push
xchg
mov
lcall
push
mov
out
pop
xlat
cltd
adc
push
hlt
fsubrl
xchg
add
add
call
cltd
stos
in
fcmovb
lea
and
aas
shlb
add
push
mov
sbbb
rcrb
adc
push
shr
jg
ficomps
xor
jmp
rcrl
or
jne
div
mov
fs
inc
mul
das
sti
std
sti
add
jb
cmp
or
cmp
add
or
clc
and
adc
mov
jne
mov
jae
pop
lea
fcomps
in
mov
pop
sbb
nop
push
sub
mov
or
mov
cmp
push
fnop
jb
inc
adc
mov
out
inc
cmp
roll
test
inc
or
add
es
pop
pop
jg
bound
inc
cld
nop
or
or
push
jp
push
ds
aad
sbb
dec
or
callw
or
jb
inc
push
dec
adc
fsubrs
cmp
adc
int3
jbe
push
push
adc
xor
xor
mov
daa
push
xor
push
push
hlt
cmp
and
and
dec
and
xchg
and
cmp
dec
fcoms
arpl
jb
pop
loope
jg
pusha
mov
push
pop
mov
inc
mov
sbb
mov
in
inc
inc
ja
or
fidivl
imul
ret
or
cwtl
or
rorl
test
nop
pop
fcoms
insl
mov
cli
lods
les
push
push
int
and
int
or
mov
add
adc
imul
or
add
push
jl
data16
jge
imul
jle
cmp
loopne
ja
cmp
and
sarl
sbb
add
std
pop
inc
sbb
inc
sbbl
lret
xchg
orl
sbb
ds
lea
push
cmp
xchg
insb
dec
add
sbb
inc
rorl
pop
leave
push
add
lret
sbb
xchg
dec
lock
inc
lods
je
dec
mov
xor
or
out
push
dec
sbb
dec
cmp
imul
inc
pop
pop
lods
mov
hlt
add
pop
mov
cmp
test
mov
push
test
jg
sti
or
sbb
insb
sahf
testl
inc
mov
xor
add
mov
push
xchg
xlat
ja
push
dec
lods
out
mov
pop
xchg
cld
add
push
je
cli
sub
sbb
jp
add
scas
and
push
push
mov
mov
je
jns
xchg
pusha
dec
add
pop
xchg
fdiv
loope
xor
cmp
les
push
in
into
add
movb
scas
or
or
je
jge
pop
dec
clc
mov
aam
inc
pusha
jne,pn
cmp
rol
inc
mov
packssdw
fcoml
mov
cmp
jge
popa
loope
mov
or
adc
mov
and
cwtl
fcmovnu
adc
mov
mov
sbb
push
push
popa
sbb
dec
jmp
mov
loope
xor
add
xor
adc
mov
fs
push
ret
pop
and
in
add
push
adc
data16
mov
jmp
jg
mov
inc
data16
mov
sbb
addl
cs
pop
mov
sub
ret
test
push
sbb
stc
xchg
js
cmpsb
adc
sar
je
xor
loope
pop
iret
pop
jmp
fsubs
shl
push
adc
arpl
add
xor
mov
dec
stc
xor
add
xor
aas
sub
loope
jne
sbb
je
lods
and
shlb
push
cmp
mov
ss
clc
push
out
cmp
je
push
out
cmp
jnp
and
faddl
aam
xchg
mov
outsb
or
cld
xlat
mov
sub
repnz
mov
sbb
int3
or
sbb
sbb
sub
pop
outsb
popa
dec
aad
mov
pop
pop
sbbb
sub
mov
adc
xchg
sbb
cmp
and
cmp
rorb
rolb
xchg
dec
and
outsb
xchg
clc
sbb
inc
repz
test
and
imul
or
mov
push
mov
imul
or
xor
inc
fucomip
rcll
jb
cmc
fsubs
mov
ljmp
sbb
int3
cmp
mov
inc
push
lahf
bound
mov
xchg
jge
push
xchg
mov
fimuls
push
push
mov
lret
adcl
icebp
fwait
and
popa
or
ds
cmp
fistpl
cmp
inc
and
mov
sbb
add
or
dec
out
mov
adc
daa
and
insb
jae
mov
dec
add
pop
in
push
inc
jl
aam
dec
push
out
mov
cmp
pusha
add
cwtl
or
in
out
stos
rcr
adc
cld
mov
adc
add
cmp
push
rorb
add
mov
inc
enter
inc
mov
sbb
out
movb
into
push
fs
rcr
sahf
ss
push
aaa
sub
lcall
andl
add
lret
movsl
jbe
dec
cmp
mov
repz
jmp
xor
loop
xorl
add
ret
lods
enter
pop
ds
pop
es
pop
cwtl
test
inc
and
aam
dec
test
xor
cmp
shr
add
add
xor
push
pop
cwtl
icebp
xchg
xchg
sbb
jo
inc
or
je
js
or
sarb
add
sub
cmp
mov
ror
inc
add
xor
inc
mov
mov
pop
add
xlat
cmp
adc
jle
cmp
loop
pop
pop
cwtl
pop
or
xchg
out
insl
clc
and
jns
rol
cmp
pop
inc
mov
inc
ja
mov
mov
add
or
push
dec
xor
jge
sub
popa
ret
inc
stos
and
std
loop
jae
fiaddl
pop
je
inc
dec
shl
add
test
ljmp
sub
push
push
add
mov
or
inc
fldenv
pop
cmpl
sarl
orl
add
push
and
and
mov
jo
sbb
xor
rolb
adc
cmp
dec
inc
in
imul
jne
repnz
xchg
hlt
push
sar
fs
add
hlt
mov
push
and
clc
nop
dec
dec
adc
aas
lea
lret
add
pusha
push
sbb
std
jb
jmp
testb
sub
insl
jb
xor
or
out
int
xchg
xor
lock
mov
add
xor
pushf
sbb
mov
xor
xor
icebp
push
push
je
push
xchg
inc
push
pop
push
dec
aam
and
add
dec
lock
or
add
fbstp
or
or
or
push
and
xor
outsb
inc
mov
faddl
js
into
mov
xor
pop
mov
mov
test
xchg
inc
add
cmp
popa
ljmp
test
sbb
add
rcll
add
jb
rorb
outsb
lock
and
jle
and
andb
cmp
daa
adc
sub
lods
mov
cmp
and
dec
or
push
xor
mov
insl
add
mov
push
mov
add
pop
or
push
je
das
mov
and
shl
add
and
pop
or
inc
add
and
mov
insb
mov
dec
bound
idivb
inc
adcl
sub
loopne
xchg
lock
or
and
push
xchg
adc
aas
and
imul
pop
push
adc
clc
mov
inc
in
push
aaa
xor
ds
stos
mov
xor
dec
add
adc
sub
popf
or
push
add
lds
mov
jmp
scas
pop
push
xchg
hlt
je
adc
adc
in
add
pop
dec
jb
out
mov
jle
xchg
or
mov
mov
push
imul
dec
push
rcrb
lcall
and
mov
test
adc
loopne
or
adc
push
shl
pop
xchg
add
enter
and
mov
and
jb
loopne
aaa
xchg
pop
xchg
dec
add
ret
sub
outsl
sub
or
inc
jmp
xchg
out
cmp
adc
sbb
jg
adc
and
push
test
and
lret
shlb
dec
loope
pop
cmpsl
xchg
xchg
leave
adc
scas
inc
inc
cltd
lods
sbb
inc
loopne
sub
orb
cmp
roll
das
or
lret
sub
push
mov
jle
sub
nop
scas
addb
jle
jmp
push
push
cmpsb
jge
hlt
rep
ss
neg
sub
and
sub
cmovp
push
push
cmp
imul
or
cmc
xchg
hlt
bound
mov
imul
mov
mov
mov
push
not
inc
stos
add
in
mov
imul
mov
popa
push
mov
popa
imul
cwtl
pop
pop
dec
sbb
mov
mov
mov
and
add
jmp
jl
add
pop
ret
add
push
push
jae
pop
daa
int
inc
and
dec
pop
lods
xchg
xor
jle
mov
movl
inc
adc
outsb
in
cmpsl
jge
lock
hlt
clc
inc
dec
adc
cld
sub
and
cmp
mov
adc
or
lea
mov
adc
mov
push
add
push
ret
rorb
cmp
and
sbb
adc
lea
dec
adc
push
and
xor
push
pop
iret
out
outsl
inc
or
jbe
jle
sahf
rclb
outsl
ja
mov
jecxz
xchg
sbb
cmp
or
test
ret
sbb
enter
or
cmp
loope
or
mov
mov
and
call
das
icebp
je
sub
mov
cltd
mov
dec
ja
cs
sub
rcr
mov
fsubrs
fld
lock
in
cs
inc
pop
lock
rep
add
xor
in
in
imulb
and
or
inc
fstl
aaa
adc
mov
stc
add
pop
add
mov
inc
or
les
push
sub
je
xor
jno
sbb
sbb
mov
sti
or
add
inc
mov
xchg
imul
es
sub
enter
mov
push
push
pop
in
je
mov
add
push
jno
xlat
je
pop
and
les
mov
or
add
movsl
xor
sbb
push
and
pop
dec
mov
and
cld
adc
scas
mov
decl
dec
sbb
mov
test
push
je
xor
mov
pop
push
loope
push
faddl
mov
inc
jbe
in
inc
pop
mov
ret
mov
xor
das
xor
ret
ss
jmp
mov
and
push
xchg
mov
loopne
xchg
testl
imul
fidivl
jne
xchg
aam
sarb
dec
mov
mov
sub
sub
mov
outsl
fcomp
and
mov
inc
xor
jle
push
rclb
aam
dec
or
and
jne
jmp
mov
jmp
adc
outsl
jo
lret
dec
in
jae
adc
fnstsw
imul
sbb
push
fsubr
push
imul
addr16
adc
mov
scas
inc
test
push
cwtl
sub
pop
shlb
test
outsl
push
imul
repnz
imul
cld
and
adc
sbb
xor
cmp
inc
jmp
in
test
test
sub
cmp
aam
fdivs
imul
mov
jge
aas
sbb
inc
push
or
jmp
fsubrl
and
popa
sbb
adc
inc
rorb
nop
loope
mov
inc
xor
faddl
adc
sub
cmp
fwait
cmp
in
xor
pop
fdivrs
ja
pushf
mov
jb
roll
lcall
or
enter
sbb
or
test
add
mov
push
jb
shll
or
jb
jb
or
pop
inc
bound
int3
add
adc
dec
shll
adc
pop
pusha
xchg
add
mov
xor
add
jmp
add
jns
sbb
push
inc
xor
sub
popa
out
outsl
push
jbe
dec
sub
sbb
test
loope
adc
or
fimull
jmp
mov
iret
inc
cmp
into
mov
adc
sbb
mov
pop
mov
cltd
lea
leave
mov
jne
mov
ret
repz
adc
push
dec
sbb
mov
lock
adc
repnz
xchg
xchg
call
fnstenv
and
cmova
dec
dec
xor
rorb
add
inc
cmp
pop
inc
decl
jne
lea
add
dec
imul
add
lret
lret
pushw
jl
aam
nop
mov
jae
jp
test
arpl
mov
xchg
cmpsl
std
sub
lea
xchg
pusha
cmpsl
cmp
sub
pushf
and
popa
lock
add
stos
push
icebp
rorb
lock
inc
imul
pop
sub
pop
and
sub
add
xchg
mov
cld
sbb
push
icebp
in
lds
add
pop
and
cmp
xor
add
std
fisubs
add
push
pop
adc
repz
ret
dec
loope
push
sahf
js
sub
sbb
push
je
xchg
add
xor
cli
adc
lea
lea
leave
imul
mov
push
sub
mov
or
mov
mov
jb
out
popl
dec
js
out
add
ljmp
adc
inc
enter
sbb
adc
je
pusha
into
add
loopne
mov
scas
adc
dec
and
pushl
add
sub
sbb
lea
loop
mov
cvtps2pi
push
clc
sbb
call
es
or
xor
add
leave
xor
out
fadds
or
adc
or
outsl
test
push
subb
adc
push
cld
rorb
cwtl
push
xlat
mov
xor
xchg
xchg
xchg
xchg
or
adc
outsb
mov
sbb
sbb
dec
dec
dec
dec
sub
xor
or
dec
dec
cmp
pushf
fmull
inc
and
inc
cmovs
pushf
pushf
push
push
pop
add
daa
pusha
fs
daa
jo
js
mov
lea
sbb
xor
and
mov
xchg
cwtl
pushf
es
dec
xor
mov
imulb
sub
mov
add
add
test
outsl
add
or
bound
dec
and
test
adc
dec
xor
push
sbb
pop
xor
int
and
rcrl
pusha
add
mov
push
outsb
sub
mov
or
xchg
add
xor
inc
ret
cmp
bound
int
sarb
inc
dec
jne
int
mov
push
in
dec
push
lret
sbb
cmp
pop
dec
int
dec
add
fsubrp
test
cs
test
xor
dec
hlt
addb
test
add
dec
int3
push
loop
add
cmpsl
orl
mov
push
xor
test
or
adc
xor
inc
jno
in
pop
cltd
mov
xorl
inc
mov
pop
cmp
fisubl
lahf
mov
je
sub
adc
adc
xor
ret
lret
adc
fcmovnb
lock
in
ficompl
cmp
fmuls
in
fadds
sub
mov
fstps
pop
sbb
mov
push
inc
cwtl
inc
ret
outsl
cmp
sbb
es
pop
sbb
add
lret
jle
pop
je
push
pushf
jne
mov
inc
push
dec
jae
or
jge
jo
push
or
shlb
add
sbb
pop
xor
mov
test
inc
cmp
and
jnp
in
xchg
add
lret
mov
add
push
mov
xor
pop
adc
mov
mov
mov
mov
adc
cmp
add
mov
in
jl
adc
icebp
enter
dec
cmpsb
fdivr
xchg
sbb
jle
mov
push
adc
fwait
mov
iret
add
rclb
mov
js
pop
pop
dec
mov
lcall
scas
dec
or
or
sbb
push
push
mov
rorb
pop
iret
and
lcall
fistps
rorb
pushl
push
mov
push
add
jmp
enter
inc
cld
lea
xor
pop
stos
sub
or
loope
orl
lock
test
add
or
icebp
add
xchg
push
and
inc
fwait
lret
sti
lahf
mov
mov
sbb
adc
xor
and
sbb
int
mov
or
pop
in
rorb
in
js
pop
pop
jo
in
add
or
mov
aam
dec
sub
mov
xor
push
push
repz
push
lea
sahf
or
out
mov
nop
mov
pop
and
fcmovnbe
sti
mov
push
ret
sbb
or
xor
test
andl
iret
lods
sbb
aam
add
and
fstl
imul
icebp
pop
popf
add
loopne
inc
ret
cld
mov
inc
sbb
imull
stos
adc
cmp
test
sahf
push
inc
into
pop
push
jg
xor
mov
jns
mov
sub
mov
int
push
sahf
inc
popf
pop
addl
pop
or
out
sbb
mov
dec
imul
mov
mov
fstp
in
jmp
cmp
in
lods
mov
sar
xchg
sbb
mov
mov
invd
xchg
lods
mov
pop
pop
lea
or
out
lret
add
jmp
ja
rolb
cs
dec
pop
jmp
lock
or
inc
call
jmp
push
jg
daa
xchg
dec
inc
lea
push
out
add
mov
add
jo
cmp
push
push
and
or
mov
dec
sub
adc
xor
sarl
cmp
test
movsb
sahf
fisttps
add
cmpsl
mov
insl
mov
test
subb
rolb
jno
add
cli
jecxz
mov
add
cmp
mov
mov
sbb
aam
mov
inc
add
sbb
out
hlt
ficoms
inc
int
push
jmp
cmovp
dec
loopne
push
add
test
mov
shl
int
pop
cmp
sbb
popf
add
mov
flds
jbe
mov
inc
push
xor
mov
sbb
dec
add
xchg
sbbb
andl
pop
fbstp
mov
push
xchg
cli
fsubr
push
mov
andl
int
cmp
cmp
mov
mov
pushf
or
aas
movb
inc
mov
adc
cmpl
fmuls
sub
sub
and
ja
adc
add
mov
daa
jmp
sub
cmpsb
leave
dec
pushl
in
cmp
xor
enter
inc
cmp
rclb
inc
lods
sar
scas
in
orl
pop
mov
inc
inc
sbb
dec
subl
cmp
and
bound
and
push
cmp
inc
aas
push
faddl
and
mov
pop
xchg
cmp
lock
testl
add
inc
push
fs
sub
addb
test
adc
add
mov
in
lods
jb
pop
lock
scas
pop
orb
mov
xchg
fnstcw
jmp
and
mov
shr
ds
in
xor
add
push
jo
lret
jmp
or
xchg
js
pop
sti
mov
or
lea
mov
mov
lods
adc
push
sub
mov
fdivrs
jne
ljmp
cli
cmp
adc
stos
insb
sub
xor
jnp
push
fdiv
cmp
mov
inc
imul
cli
inc
cmpb
sti
and
fwait
jp
jb
or
mov
cmp
pop
pop
pop
adc
adc
movsb
sub
fs
test
sbb
in
ret
aad
leave
sbb
js
je
aaa
push
sbb
mov
mov
push
sub
and
test
jno
sahf
mov
incl
and
jns
inc
or
push
and
into
add
in
xor
lods
xor
mov
push
andl
aaa
movsb
test
cmp
adc
fdiv
mov
sbb
or
pop
pop
in
mov
or
mov
xchg
inc
mov
sub
orb
push
addr16
jg
push
push
pop
adc
or
mov
int3
xor
call
inc
push
and
mov
cs
inc
sbb
adc
scas
bound
or
add
add
fmuls
pop
inc
nop
push
mov
out
sub
sbb
mov
daa
or
mov
jl
fdivrs
inc
js
or
mov
aas
aam
out
cmp
mov
xor
adcl
lea
sub
cmp
test
sbb
sub
call
les
sbb
clc
mov
add
into
lds
dec
add
notl
dec
cmp
mov
sbb
push
gs
sbb
pop
cmp
lods
jg
fiadds
pop
mov
xchg
push
mov
mov
jge
rorb
add
add
dec
dec
test
jne
xchg
sub
or
leave
test
and
nop
cmp
push
lea
pop
lods
pop
dec
pop
pop
ss
lret
inc
and
jg
sbb
add
pop
rol
fwait
xchg
add
clc
je
xor
xor
gs
add
sub
inc
rcrb
int3
lock
sbb
push
mov
js
cs
cmp
inc
and
dec
aad
testb
and
mov
xchg
sub
pop
jl
retw
pop
inc
test
add
js
pop
sbb
mov
int
push
add
push
popa
dec
dec
nop
mov
scas
vrsqrtps
enter
inc
ds
sub
adc
and
jmp
add
jg
adc
push
mov
nop
add
call
cmpsb
xchg
lock
sarb
movsb
push
dec
dec
int
cmpl
lret
push
dec
jp
cmpsb
jecxz
add
cmp
add
mov
les
push
into
push
dec
call
pop
adc
xor
gs
cmp
mov
sbbb
push
cmp
and
or
jnp
jle
aaa
or
cmp
adc
ss
fildl
rclb
push
cmp
mov
sub
push
mov
popa
imul
and
add
sbb
enter
arpl
jns
jmp
test
dec
loope
out
jmp
inc
xor
movsb
repnz
in
ljmp
dec
pop
mov
scas
and
mov
or
sbb
adc
jb
xor
inc
sbb
inc
sub
sbb
sbb
js
paddb
andb
pop
rolb
or
cmp
fwait
scas
xor
idiv
sbb
adc
dec
cmp
popf
test
into
aas
repnz
xchg
sbb
lock
sbb
jl
aas
dec
bound
or
or
adc
mov
jmp
or
int
adc
sbb
addr16
popf
inc
push
pushf
test
ret
in
and
jne
or
pop
inc
into
inc
xchg
outsl
inc
jg
jmp
and
cmp
or
ja
adc
cltd
sbbl
push
and
mov
in
sub
push
dec
or
ror
je
daa
adc
dec
inc
add
jmp
or
inc
pop
push
pusha
outsb
sbb
stos
ret
dec
mov
mov
inc
push
cmp
pop
lcall
push
popf
pushf
pop
sub
je
push
popf
xchg
mov
mov
mov
inc
inc
mov
mov
fdivr
data16
pop
idiv
add
push
push
imul
mov
inc
cmp
dec
lretw
fcmovnbe
mov
push
or
or
cmpsb
ds
movsb
rcll
pop
sbbl
adc
out
and
push
mov
xchg
test
sbb
ret
xchg
add
or
xor
in
or
nop
outsb
jg
push
sub
shll
dec
xor
adc
jb
fcmovne
or
shr
dec
outsb
add
jmp
inc
mov
and
arpl
lock
test
adc
or
add
pusha
xor
xchg
mov
test
je
sbb
and
or
sub
or
or
inc
jmp
jp
outsb
divl
add
std
or
jmp
inc
and
mov
cmp
add
jl
and
jecxz
jbe
xor
xchg
jmp
call
adc
xchg
hlt
inc
cld
or
or
and
sub
mov
sti
jle
or
sbb
add
fstps
aas
pusha
mov
adc
mov
pop
sub
xchg
addr16
rorl
jecxz
pop
fstp
mov
pusha
pusha
pop
je
pusha
insl
jae
push
addr16
cmpb
xchg
mov
fadds
or
xchg
adc
sti
ja
test
out
test
xor
add
addb
xor
xchg
roll
push
scas
jmp
xchg
sbb
push
push
mov
mov
movsl
imul
add
out
and
subb
rclb
pop
outsb
lods
sbb
jmp
push
and
inc
add
adc
add
inc
flds
fstps
or
push
mov
imul
cmp
pushf
ficomps
out
xchg
inc
mov
pop
push
cmp
pop
ficoml
pop
pop
lods
pop
sub
fimuls
jecxz
loop
adcb
gs
mov
pop
adc
pop
jp
adc
xor
xor
popa
and
fldz
repnz
fisttps
inc
jl
add
into
mov
sub
jmp
sub
in
push
push
or
divps
psubusw
lcall
testb
ds
add
pop
dec
insb
inc
xchg
xor
loopne
cmp
es
ret
in
fstpl
mov
call
stc
into
jbe
lods
pop
loopne
or
or
rcr
mov
inc
mov
xor
div
inc
add
cli
and
xchg
repnz
iret
push
dec
into
enter
lea
fisubrl
sbb
jp
dec
in
jbe
das
mov
loopne
mov
scas
loop
jp
push
sahf
jmp
pop
shl
test
push
and
decb
push
and
mov
pop
andb
cmp
js
or
mov
jle
push
add
pop
add
cmp
sbb
pop
aad
hlt
push
test
jmp
outsl
add
fcompl
add
push
pop
and
gs
inc
loopne
add
dec
loop
and
es
hlt
and
ret
sbb
fisubs
outsb
and
jl
pop
shll
call
add
sbb
hlt
adc
or
test
or
hlt
push
or
dec
out
push
clc
cs
pop
data16
lods
lds
add
or
fwait
jno
or
inc
and
mov
test
pop
add
mov
orl
addr16
jmp
insb
insl
jo
pop
imul
out
gs
pop
lea
dec
decl
in
mov
imul
mov
pushl
lea
push
or
mov
or
jbe
sub
xor
ds
int3
jl
adc
daa
imul
jae
mov
sahf
fnstsw
adc
jns
pusha
pop
inc
sbb
mov
sbb
jo
in
lock
pop
mov
sbb
or
pop
clc
loope
mov
cmpb
cs
shl
sbb
ret
sahf
push
mov
imul
popw
cs
incl
add
push
mov
jmp
ret
inc
addr16
sbb
adc
flds
pop
fmuls
xchg
add
into
fbstp
addl
cwtl
out
mov
insl
mov
ret
imul
dec
in
dec
pop
or
mov
sub
icebp
sbb
test
or
or
lock
imul
dec
jle
out
mov
movsb
insb
and
adc
jne
iret
inc
sbb
xor
push
add
add
fsubrs
sub
scas
adc
mov
outsl
xchg
mov
fwait
loopne
nop
sbb
pop
sti
ret
fnclex
and
sbb
and
adc
jae
xor
or
push
in
rclb
inc
adc
fldt
add
fcmovne
fwait
sahf
adc
int3
and
sbb
outsl
cmp
push
and
or
jle
call
loope
jb
mov
adc
push
mov
je
inc
je
jp,pt
dec
sbb
adc
ldmxcsr
sub
cmp
mov
and
cmp
fwait
sbb
shl
cmp
jbe
int3
pop
sub
out
add
pop
add
or
push
sbb
bound
imul
addl
std
cmp
or
sub
mov
ret
shlb
mov
or
xlat
pusha
rol
xor
lahf
insl
push
mov
sub
aas
dec
and
jns
jbe
lret
mov
iret
sbb
pop
jnp
add
cltd
lcall
xor
add
sbb
lret
sbb
mov
pop
gs
je
imul
stc
xor
xlat
movb
sti
jbe
adc
xchg
repnz
ja
push
or
xchg
adc
clc
std
push
in
adc
enter
or
add
loope
popa
setae
lods
add
inc
add
and
ss
adc
loope
adc
pusha
xor
cmp
rorl
push
add
ret
push
sbb
push
cmpsb
mov
sar
movsb
push
sub
leave
rorb
fisubs
test
push
or
xchg
add
add
lock
sub
push
add
mov
add
clc
and
scas
cwtl
pop
test
jne
push
add
test
hlt
mov
stos
stos
js
jp
repnz
pop
pop
add
xchg
jge
or
inc
pop
bound
pop
xorb
loop
add
cld
pop
or
insl
das
mov
xchg
loopne
lea
pop
adc
fcomip
sub
inc
shl
les
sbb
inc
aam
loop
rolb
cli
orl
or
jmp
outsl
out
ja
dec
cltd
insb
pop
and
mov
out
mov
xor
sub
divb
sub
insl
lea
xor
repnz
icebp
je
shlb
cmp
sbb
pop
push
lcall
cmp
dec
bnd
and
add
dec
mov
xchg
push
pusha
mov
mov
add
and
add
push
aam
mov
roll
mov
ljmp
fwait
lods
getsec
dec
stos
inc
in
xor
bndldx
pop
cmpsb
push
aam
xchg
dec
xor
cmp
mov
xchg
movsl
xor
decl
push
xchg
out
aam
pop
sub
sub
not
mov
lock
sbbb
iret
push
ds
ficomps
and
lock
fisubl
test
shlb
and
popa
adc
inc
shl
push
aas
fcoml
pop
sub
sarb
je
mov
fs
aam
jb
out
mov
in
xor
sub
pop
hlt
test
scas
sub
or
mov
icebp
push
push
lea
mov
cli
jp
adc
jge
cmp
pop
lds
xor
pop
rcrb
or
xor
outsb
or
dec
jns
inc
lock
xchg
test
ret
adc
jg
flds
cmp
inc
imul
and
inc
xor
clc
cltd
pusha
or
add
ja
inc
push
jge
pop
andl
stos
stos
mov
movsb
out
loop
fnstcw
fdivrl
and
mov
sub
sbb
xorb
jge
hlt
adcl
jecxz
adc
lock
lock
or
mov
pop
loopne
cmpsb
test
loop
lret
xor
arpl
dec
and
stc
and
shl
adc
pop
xchg
fcoml
psllq
pusha
jns
and
pop
pusha
bnd
xchg
addl
stc
stos
add
repz
sbb
push
fs
insb
adc
mov
sbb
push
sub
inc
add
pop
inc
xor
push
adc
into
mov
mov
or
mov
cwtl
popa
les
imul
hlt
nop
cli
xlat
and
lods
mov
fwait
push
lcall
std
fwait
mov
inc
jmp
mov
sub
or
xchg
add
dec
rcrl
fcmove
sub
cmp
ja
push
dec
jmp
fs
or
jle
mov
xor
movsb
add
add
call
sub
dec
je
mov
add
loopne
or
pop
mov
sbb
mov
jmp
cmpsl
mov
mov
mov
inc
add
in
mov
cmp
jle
jle
cmp
push
xor
pop
les
gs
orl
adc
fcoml
xchg
pop
in
add
xchg
pushf
push
cmp
push
inc
imulb
and
or
xorb
pop
mov
ret
mov
sarl
jbe
pop
jge
pop
cmp
out
jge
mov
add
mov
dec
jae
imul
sbb
mov
jmp
and
mov
fisubrl
call
xchg
lea
fidivrs
mov
or
cld
mov
in
orl
jnp
sub
and
xor
add
stc
sub
cmp
mov
insb
xchg
mov
mov
xchg
scas
call
mov
fmuls
mov
mov
fldcw
div
pushl
cmpb
jl
incb
dec
mov
jmp
cmp
repnz
adc
or
dec
cmpl
je
shr
mov
mov
cli
and
sub
aas
shl
stc
push
adc
jg
std
jecxz
add
sbb
jmp
push
cwtl
adc
xor
xor
mov
dec
push
xor
lods
hlt
in
add
jne
xor
add
cwtl
jge
neg
shll
mov
dec
adc
mov
lcall
test
cmp
cli
sahf
mov
sbb
test
push
cmp
push
enter
ficompl
adc
xor
pop
jmp
add
les
inc
movb
xor
mov
push
mov
lods
sarl
push
outsl
ljmp
popf
outsb
pop
dec
add
movsb
cmpl
pop
or
jb
mov
dec
mov
pop
add
or
pop
dec
or
mov
loopne
mov
out
decl
icebp
mov
ret
and
mov
into
nop
fs
mov
addb
pop
stc
jns
mov
ja
ja
int
push
mov
pop
mov
pop
es
fs
pop
add
inc
int3
jne
sbb
and
jne
das
fwait
pop
imull
into
jne
inc
or
cmp
js
xorb
xor
lock
jne
push
fisubl
mov
loop
cwtl
or
ficoml
add
shll
ret
xchg
push
push
scas
sbb
or
cld
jle
dec
and
lock
ja
mov
js
subl
lcall
sub
psrlq
stc
jg
add
inc
add
pop
pop
test
js
mov
cmp
xchg
gs
lods
add
or
shr
lock
insl
mov
or
push
in
mov
bound
or
adc
add
clc
jge
mov
les
mov
xor
je
out
fst
adc
shl
shr
or
mov
mov
adc
sahf
dec
loope
jne
cltd
pop
sbbb
mov
mov
push
push
ja
sbb
mov
pushf
mov
pusha
or
jge
cmp
mov
pop
add
ficompl
shlb
cwtl
test
aam
jg
fiadds
push
call
bound
mov
and
fs
jo
faddl
cs
orb
popa
push
shr
dec
add
ja
jmp
test
or
sub
test
fwait
lret
into
jmp
outsl
push
xchg
add
dec
inc
int
jae
jno
les
xor
pop
xor
test
sarl
push
es
sub
add
negb
mov
movups
int3
sub
and
shrb
or
call
xchg
mov
sub
jl
cmpsl
std
mov
add
pop
push
repz
shrl
xchg
in
imul
ds
xor
mov
lret
iret
mov
sbb
inc
and
fdivrs
pop
jne
cmp
clc
adc
inc
scas
inc
mov
mov
fdivs
fstpt
test
pop
cmp
in
push
or
addb
pop
mov
stos
or
xchg
adc
inc
pop
adc
cs
or
ss
cmp
je
add
packssdw
inc
xor
mov
dec
cmpb
je
mov
call
sbb
sbb
add
or
mov
out
add
push
add
fcompl
add
shlb
jge
lods
mov
je
pop
adcb
into
adc
call
insl
jmp
xor
adc
popf
xor
pop
xorb
repz
xor
jns
sub
je
xor
notl
dec
push
sbb
je
pop
xor
mov
add
test
rolb
fldt
adc
cmp
mov
sar
fcoms
or
add
movsb
push
adc
push
xchg
mov
cmpsl
dec
mov
dec
setg
sub
in
clc
add
mov
mov
sub
cmp
aas
sub
movb
aam
lret
jle
cmp
leave
jb
cmp
data16
in
inc
xorb
mov
es
cmp
add
loop
lock
lcall
ljmp
add
push
or
inc
xor
mov
shlb
jge
dec
add
add
jb
inc
int
test
out
cs
dec
jns
les
sub
call
xlat
movsb
pop
jbe
idiv
xor
push
or
adc
add
add
lds
outsb
xor
add
lret
dec
and
test
push
test
xor
aam
lock
dec
xor
adc
push
adc
inc
insb
push
xchg
andb
mov
ret
jbe
push
clc
jbe
shlb
enter
aam
sub
xchg
mov
lahf
adc
das
xor
shlb
enter
shlb
pop
mov
rcrb
adc
cltd
leave
inc
mov
jl
flds
cmp
cmp
xor
sbb
icebp
sub
sbb
push
pop
repnz
call
in
add
adc
sbb
push
dec
cmp
adc
pop
add
mov
mov
out
mov
dec
cwtl
dec
test
lret
nop
aam
test
test
dec
sub
and
sar
lea
sub
or
add
xor
cmpsb
jno
jo
inc
roll
push
ret
or
xchg
add
push
xor
cli
jg
dec
and
add
out
repnz
push
cld
scas
mov
dec
je
cmc
jg
inc
xor
leave
and
add
mov
sti
add
xchg
popf
or
mov
movsb
fwait
bound
fistpl
sub
das
jle
jecxz
mov
jg
ret
daa
xor
or
jne
inc
inc
adc
pop
cmp
sahf
popa
mov
and
mov
or
int
scas
test
xor
icebp
nop
mov
inc
sbb
sub
and
or
mov
adc
xor
pop
xor
sub
dec
xchg
fsts
sub
adc
insb
or
es
push
movswl
loope
je
and
and
data16
add
popa
mov
rcrl
aaa
mov
ret
mov
add
nop
add
mov
shrd
push
jle
sub
ss
pop
pop
add
jl
cmpsl
clc
mov
or
mov
stc
xchg
stc
inc
add
in
cs
clc
sub
mov
pop
push
add
aaa
clc
incb
push
mov
and
xchg
or
add
sbb
lock
mov
out
and
pop
and
mov
sbb
js
jg
jl
mov
jb
push
sub
or
inc
adc
neg
cmp
mov
lock
inc
rcrb
jb
push
xor
js
add
jbe
xlat
jg
insb
add
mov
test
jl
jg
lods
lods
cmp
fs
in
jb
dec
inc
dec
pop
or
or
sbb
cmpsb
add
fldcw
adc
jae
add
dec
lahf
mov
or
lods
or
lds
add
mov
adc
mov
jne
loop
test
jb
call
and
sub
pusha
or
inc
add
ss
add
and
insb
sub
mov
cltd
sub
mov
shlb
adcb
and
push
mov
pop
xor
or
mov
out
into
mov
inc
push
xchg
adc
push
nop
test
test
push
mov
andb
xor
pop
push
enter
shl
jne
cmp
xchg
js
outsb
add
fidivs
inc
int
dec
test
sbb
or
adc
imul
push
pusha
mov
push
jmp
insl
cmp
cld
cld
jl
add
rclb
aam
dec
inc
das
mov
inc
shlb
sbb
mov
cmc
inc
fsubr
sbb
jns
fldt
nop
call
je
or
jo
xchg
lcall
sub
in
add
je
fsubrs
ss
je
dec
add
jmp
xor
lods
in
add
sub
pop
dec
enter
roll
xchg
movsb
pop
or
cmp
and
push
xchg
fcomi
nop
and
inc
movb
es
adc
fdivl
fmull
insl
push
les
fstps
or
mov
push
mov
dec
and
ret
das
loopne
bound
xchg
je
dec
arpl
insb
pop
arpl
lock
or
cmp
dec
pop
aas
mov
dec
inc
add
and
cmp
popa
jmp
jecxz
mov
mov
cmpb
jne
jp
push
add
pop
pop
and
adc
rcll
cmp
jmp
int3
sub
mov
pop
add
jmp
ja
xor
imul
ficoml
push
push
lret
jno
mov
addl
pop
xor
bswap
sub
adc
add
mov
addr16
int
inc
or
cmp
hlt
add
mov
xchg
jmpw
jl
push
pop
inc
rol
movsl
mov
adc
mov
mov
inc
sbbb
lret
lds
mov
cmpl
movsb
into
push
or
push
adc
sbb
ds
push
mov
jge
or
and
mov
add
imul
sub
dec
add
dec
repz
dec
xchg
inc
dec
mov
xchg
add
out
pop
jns
lret
mov
sbb
or
jge
pusha
sub
sbb
pushf
sbb
cmp
cmp
cmp
ret
les
mov
or
int
lock
adc
jcxz
xchg
dec
out
pop
cmp
or
push
jmp
mov
jnp
pop
xor
push
das
mov
cmp
mov
sti
aas
es
or
adc
hlt
jmp
or
jmp
cmp
dec
push
mulb
je
push
incl
adc
pop
sbb
rorb
mov
enter
adcb
jae
cmp
jne
pop
or
mov
in
add
xor
mov
sbb
mov
xchg
adc
add
int
pop
mov
loope
sbb
in
inc
ss
shlb
in
or
mov
outsl
mov
mov
or
popa
xor
cmp
adcb
push
cmc
aad
dec
movsl
movsl
jbe
xchg
iret
scas
ret
sub
call
cwtl
adc
movsl
jno
sti
or
cmp
jecxz
repnz
push
out
in
rorb
xor
jns
jne
jnp
add
iret
mov
addb
sub
push
add
jecxz
mov
into
fwait
xor
scas
push
xor
xor
orl
enter
stos
jecxz
test
add
in
xlat
jmp
cli
mov
jge
cmp
push
mov
mov
cmp
push
and
add
je
xor
add
loope
mov
lcall
mov
fiadds
cmp
sbbb
mov
adc
sbb
inc
jmp
or
nop
push
add
or
mov
aaa
or
stc
inc
inc
test
lods
inc
in
fisubrs
xchg
sub
pop
cmpsb
adc
lcall
xchg
or
std
mov
jmp
or
inc
cld
jo
mov
sbb
daa
or
pop
out
lock
mov
das
adc
adc
inc
in
adc
mov
jl
leave
add
rorl
mov
push
cmp
cld
in
dec
ret
mov
mov
xchg
enter
sub
and
pop
mov
loope
xor
mov
mov
jl
das
inc
xchg
sbb
or
push
xchg
test
mov
and
xor
mov
ljmp
ja
and
leave
fcmovnb
lds
fidivs
mov
int3
es
sub
and
sbb
popa
dec
pop
int3
es
jns
loope
notb
ljmp
xor
push
es
int
inc
pop
or
jb
inc
int
addl
xor
insb
and
cmp
sbb
fld
push
sbb
adc
sub
cmp
out
pop
or
jmp
pushf
popa
jp
add
mov
and
ss
or
mov
gs
and
sbb
sbb
adc
adc
xchg
bound
aaa
push
mov
sub
test
test
adc
out
sub
cmpsl
adc
inc
adc
lret
jecxz
and
lea
or
fdivp
shr
add
cs
leave
or
idivl
aam
xchg
fxch
shl
pop
lock
pop
or
mov
add
add
or
bound
scas
push
rcl
xor
sti
in
sub
mov
cmp
sbb
inc
pushf
cltd
fildl
shr
or
inc
int3
cld
push
jnp
call
fnstcw
inc
push
add
cmp
add
lea
pop
xor
aas
mov
shr
cmp
mov
test
fimuls
add
ljmp
loopne
jae
adc
add
mov
add
iret
adc
mov
rolb
dec
add
xor
in
fs
mov
jmp
cmp
ficoms
or
xor
notb
or
shl
add
lock
mov
fs
inc
test
add
notrack
fsubs
shrb
icebp
sub
push
push
test
test
adc
test
je
dec
call
or
rclb
cmp
inc
sbb
outsb
movsb
fcmove
add
leave
hlt
stc
loope
and
jmp
mov
negb
add
sti
cmp
or
xchg
subl
cld
sub
jne
add
call
movsb
pop
ljmp
and
dec
out
fldt
inc
and
and
jns
push
dec
call
adc
mov
hlt
hlt
fucomp
mov
jle
mov
inc
in
mov
jae
ds
add
or
mov
jg
jne
dec
dec
cmp
lock
jl
cmpb
jl
xor
cmpb
idiv
or
mov
movsb
inc
add
in
push
test
push
lods
inc
nop
loopne
adcl
inc
dec
pop
add
push
mov
movsl
sahf
andl
inc
inc
adc
fldcw
and
adc
stos
add
or
cmp
sub
ficompl
dec
jmp
in
adc
test
pushf
push
call
mov
mov
and
enter
xchg
xchg
dec
out
or
test
jne
in
inc
inc
sub
add
sub
mov
xchg
shlb
je
mov
sbb
or
jl
test
or
push
push
sti
xchg
clc
cmpsb
mov
movsw
xor
pop
xchg
lods
scas
outsb
rorb
sbb
les
out
xor
xchg
or
ss
pop
mov
pop
push
shr
jge
inc
inc
fidivrs
fdiv
fiaddl
sbb
sbb
cltd
in
adc
sbb
xor
xchg
sbb
enter
fcoms
fwait
xor
inc
and
fldenv
icebp
sbb
and
sbb
sbb
cltd
lods
mov
test
popa
xchg
dec
jne
pop
pop
pop
and
lea
push
xchg
lock
and
lods
rcl
ljmp
dec
and
shr
mov
sbb
mov
idiv
and
pop
rcrl
cld
je
lock
ds
je
mov
and
push
cli
daa
jo
add
and
shrb
les
sub
jno
push
xchg
jmp
gs
or
jne
push
test
shlb
mov
je
push
add
into
jbe
jns
sub
and
adc
inc
test
fldcw
mov
iret
cmp
ss
push
or
adc
es
dec
and
adc
prefetch
xorb
aaa
adc
aaa
sub
sbb
push
lods
mov
add
cmc
cs
adc
cs
sahf
test
cld
and
mov
mov
xchg
dec
pushl
dec
ss
mov
sub
bound
or
gs
add
mov
and
mov
push
sub
leave
je
push
decb
jg
inc
mov
mov
sub
or
mov
je
and
iret
sti
jmp
add
out
push
cmp
ja
add
cmp
adc
mov
test
cmp
jne
shll
leave
adc
call
add
idivl
pop
scas
and
xchg
mov
add
ficoml
fbstp
movsl
mov
cmpsb
ret
icebp
and
sbb
sbb
sbb
mov
mov
push
add
jo
test
push
adc
sbbb
ret
jmp
imul
inc
not
je
push
push
icebp
test
push
xor
mov
sbb
sbb
pop
ret
mov
and
pusha
dec
or
lods
movsl
dec
and
cmp
mul
adc
push
shll
cltd
mov
das
sub
mov
or
xor
mov
add
mov
aad
dec
lahf
pop
pop
and
adc
xchg
push
clc
add
jne
jne
cmpsl
mov
in
add
cmp
push
push
imul
adc
xor
sarb
jnp
lods
xor
push
sub
daa
in
or
add
add
add
ljmp
das
mov
add
sar
or
movb
push
ror
repz
rcl
aam
xlat
out
cmp
sti
fstpt
clc
andb
aaa
nop
data16
inc
shlb
movb
jmp
or
sub
inc
xchg
popfw
inc
je
push
xor
ss
mov
ss
sbb
add
mov
mov
add
push
ds
inc
adc
js
and
adc
sub
pop
test
test
in
lock
jmp
icebp
adc
cmp
das
shl
pop
or
push
push
add
xchg
dec
pop
mov
ret
pop
fcoms
clc
add
mov
imul
mov
sub
stos
sbb
add
imul
lea
sar
inc
dec
push
mov
aam
cmc
push
neg
neg
loope
sub
jne
dec
mov
test
jmp
push
loopne
fists
inc
call
int
outsb
adc
mov
rol
sti
add
ljmp
pushf
jecxz
ret
jp
mov
mov
sub
xchg
or
dec
movb
rolb
adc
add
hlt
pop
push
inc
icebp
in
out
mov
leave
add
and
lea
pop
push
pop
mov
in
lods
nop
pop
lcall
mov
gs
ja
add
clc
xor
shlb
push
test
loopne
inc
negl
sbb
loope
loopne
dec
lods
mov
inc
inc
or
cmp
mov
add
nop
pop
mov
jne
sub
pop
call
test
rolb
movsl
push
push
js
mov
push
or
mov
fcoml
or
movsb
push
insb
enter
and
mov
sub
cmp
push
shll
push
lds
addl
mov
jge
mov
inc
xor
inc
test
call
outsb
lcall
jle
ret
add
out
jne
add
and
lcall
rolb
shl
loopne
sub
incb
ret
pop
mov
lret
jmp
xchg
je
sub
cmpl
mov
fidivs
mov
or
dec
push
xchg
lret
dec
rolb
lock
mov
repnz
dec
div
cli
cli
inc
rorl
repnz
sbb
shlb
movsb
mov
lcall
mov
es
sub
mov
sbb
adc
pop
xchg
aaa
loopne
inc
and
xchg
mov
test
movsl
sarl
fidivl
fnstenv
xchg
cmp
idivb
dec
sarl
mov
lock
ret
lods
mov
and
push
not
push
repnz
pushw
sub
loop
cs
jge
xchg
notb
bound
mov
adc
inc
outsb
rorl
adcl
sbb
adc
call
pop
pop
push
or
jne
fcomp
andb
inc
test
cmpsb
arpl
dec
ss
mov
rcrl
cld
lods
dec
adc
mov
adc
or
inc
and
adc
cmp
sbb
test
fnstcw
pop
icebp
insl
mov
inc
add
lods
rolb
and
sub
cltd
add
xor
cmp
les
inc
sbb
imul
testb
lock
sub
stc
or
mov
in
cld
icebp
mov
adc
cmp
jne
lret
xchg
jne
in
fstpt
cmp
sub
inc
into
mov
adc
push
sbb
cmp
sbb
out
inc
add
inc
mov
push
add
push
dec
sub
xor
adc
mov
adc
and
dec
cmpsl
sub
bound
call
and
or
pop
daa
push
shll
test
jne
sbb
neg
and
sub
sub
call
mov
loopnew
xor
push
pop
add
call
mov
mov
push
cmp
fdivrs
in
out
loop
adc
and
aad
stos
cltd
xchg
mov
ljmp
push
xchg
mov
or
mov
xor
or
into
sbb
jge
sub
dec
pushf
xabort
sti
scas
jp
lcall
xor
shlb
adcb
add
out
adc
jne
cmp
shll
loopne
add
into
or
mov
inc
ljmp
jmp
ljmp
dec
mov
dec
cmp
jge
andb
cli
jmp
cmpb
or
add
dec
cmp
jbe
jb
add
dec
add
add
fadds
dec
test
pop
add
xchg
or
and
mov
js
hlt
xor
dec
mov
jb
int
jg
sbb
adc
lret
or
mov
mov
flds
push
jbe
add
lcall
push
add
add
add
test
enter
lret
mov
push
mov
outsb
mov
je
pop
or
lret
in
sub
xchg
scas
or
jmp
cli
inc
out
xchg
push
or
mov
jns
add
or
pop
scas
add
adc
dec
test
add
mov
dec
xchg
push
ret
lcall
add
add
rcrl
pop
mov
rol
mov
iret
xor
inc
xchg
xchg
lret
inc
dec
sbb
jne
mov
rcrl
pop
add
mov
ret
jne
or
mov
xor
sub
xchg
sbb
adc
test
or
or
add
mov
mov
push
mov
inc
or
pop
mov
pop
pop
aas
rol
xchg
adc
xlat
dec
dec
cmp
push
add
into
mov
and
and
and
dec
insb
push
pop
sbb
add
jge
mov
mov
pop
ret
or
scas
push
mov
dec
lcall
mov
cld
xchg
or
movsb
xorb
inc
shl
or
inc
stos
jg
add
cmp
into
inc
or
cmp
out
xor
add
pop
orb
add
cltd
ss
or
sbb
add
or
into
rcrl
into
out
push
add
lret
je
leave
repz
and
sbb
inc
jg
into
push
into
mov
lods
dec
pusha
inc
pop
sub
push
pop
push
out
icebp
push
nop
pop
cwtl
pop
mov
push
mov
not
and
or
push
pop
stos
adc
pop
std
daa
movsb
and
clc
sub
pop
lcall
pop
out
push
lahf
pop
test
xchg
addr16
add
add
inc
mov
addb
test
and
lcall
inc
dec
xchg
sub
and
roll
sbb
lret
leave
dec
in
jmp
ret
lods
xchg
push
xor
xchg
adc
cmp
push
scas
cltd
mov
adc
sub
push
dec
xchg
add
adc
push
xchg
jae
adc
mov
mov
test
lret
mov
ljmp
cmp
push
or
sbbl
ret
sub
cmp
es
fisubs
mov
fidivrs
xlat
jle
rorb
push
daa
or
and
mov
jge
scas
mov
sub
jmp
stc
daa
insb
sbb
inc
icebp
mov
dec
loopne
pop
imul
mov
jmp
cmp
jmp
xchg
orb
or
jmp
add
not
insl
sub
mov
out
je
mov
call
adc
fwait
or
cmp
jbe
inc
inc
sahf
mov
in
call
jle
lock
ret
fiadds
imul
je
mov
mov
jo
cmp
mov
jns
jmp
and
fs
push
or
or
pop
shrl
fildll
lock
mov
movsl
lea
rep
test
sbb
dec
push
test
and
sub
stos
xchg
loopne
pusha
popf
mov
imulb
push
inc
bound
dec
nop
in
jmp
push
sbb
cmp
pushl
dec
jle
movl
rclb
push
mov
sbb
and
insl
jl
rcr
push
loopne
shlb
push
mov
and
or
cmp
jge
sbb
pop
xor
cmp
test
fcmovnbe
inc
mov
mov
loope
adc
hlt
cmpsl
jge
cli
cmp
lret
xchg
push
es
inc
sbb
clc
pushl
or
add
in
orb
mov
fwait
xor
push
pop
push
imul
and
jo
dec
and
imul
push
adc
push
repnz
or
push
shrl
leave
mov
rcrb
adc
rsqrtps
inc
aas
sbb
sub
sbb
adc
sbb
push
stc
jmp
and
push
mov
dec
and
fistl
xchg
sub
adc
fsubrl
pop
mov
or
jmp
xor
sub
cmp
jl
sub
and
push
inc
add
xchg
pop
inc
cmp
out
jmp
xchg
xor
sarl
mov
mov
fisubrl
add
inc
imul
dec
fsubr
mov
mov
pop
cwtl
and
push
add
fstps
std
xchg
lret
pop
inc
inc
dec
add
mov
test
push
clc
mov
idivb
js
or
adc
mov
jno
pusha
jns
cmp
jo
dec
shll
popa
std
mov
outsl
add
fisubs
sbb
mov
jg
xor
fs
push
lock
adc
sbb
mov
add
push
pop
jl
mov
lea
lds
jbe
or
int3
cld
mov
movsl
stc
adc
rcrb
mov
ret
inc
dec
mov
xchg
nop
fnsave
fsubs
loop
jp
pop
dec
stos
loopne
jmp
adc
orl
out
jns
hlt
es
xor
scas
cmp
push
js
and
xor
rorb
adc
cmp
into
sbb
inc
js
ret
and
adc
push
das
mov
movsl
mov
lea
xor
xor
inc
je
rclb
mov
push
add
repnz
ret
or
inc
imul
lods
push
adcb
dec
in
ret
xchg
shrb
sbb
sub
push
loopne
jo
adc
push
mov
popa
sub
addb
or
dec
testb
and
push
mov
pop
add
sbb
xchg
out
add
gs
or
push
inc
mov
xor
inc
data16
adcb
stc
or
enter
mov
xor
scas
adc
push
daa
das
jg
mov
adc
adc
add
xor
data16
fisubrl
mov
jno
sbb
cmpsl
xchg
movsl
mov
sbb
sbb
mov
and
push
xchg
mov
and
sarb
rcrl
pop
or
sub
ljmp
sub
and
aaa
dec
dec
or
ret
jp
movsb
pop
pop
je
add
push
jmp
fld
fists
adc
jne
cmp
jmp
aam
ret
mov
cwtl
testb
lahf
jnp
xor
incb
sub
das
fsubrs
pop
xor
adc
test
adc
into
cmpsb
pop
aad
pop
xor
pop
cld
mov
add
scas
mov
arpl
insl
jbe
xchg
xor
xchg
push
popa
push
fs
sub
lahf
inc
or
and
cltd
clc
in
inc
sbb
ret
xor
dec
hlt
push
les
cmp
out
fidivrs
fs
cmpsb
mov
leave
inc
sbb
dec
add
stc
inc
pop
loope
sub
or
or
add
push
inc
inc
push
clc
adc
es
xchg
mov
pop
fidivl
jbe
adc
add
jbe
jmp
push
pop
inc
xchg
add
and
jmp
add
add
push
es
fmull
inc
cmpsl
stos
in
out
sub
nop
mov
lods
lods
xlat
in
add
mov
sbb
lock
arpl
and
jno
stos
pop
in
nop
rorl
lret
adc
xor
mov
add
cmp
loop
cmpsb
pushf
enter
data16
aaa
push
mov
pop
mov
adcl
in
pusha
sti
dec
or
test
ret
push
imul
push
lcall
jecxz
insb
jmp
testb
xchg
gs
add
js
rorb
mov
jno
out
xor
add
ret
loope
mov
push
cmp
xor
mov
cmp
movsl
loopne
cmp
push
mov
mov
and
mov
add
or
movsb
inc
adc
adc
lcall
cmp
add
mov
sub
sub
lret
mov
sbb
icebp
cmp
ja
jbe
add
sub
cmp
xor
push
push
push
jle
mov
cli
mov
mov
mov
bnd
imull
cmp
adc
ror
rcrb
pop
lcall
add
mov
and
rcrl
rcrb
cwtl
jne
sub
call
adc
lock
fadds
loopne
subb
sbbb
icebp
jno
pop
ss
push
out
ds
inc
cmp
sub
or
pop
not
cmp
fs
push
mov
mov
inc
sbbb
xchg
sbb
adcb
imul
pop
insl
in
fstp
hlt
adc
inc
dec
popf
imul
sbb
int3
mov
inc
or
les
mov
scas
cmp
cmp
push
cmp
movsb
rol
push
lock
inc
movl
sbb
xchg
pop
int3
cli
pop
js
test
movsb
test
inc
out
test
mov
aad
adc
mov
testb
sbb
lock
sub
push
dec
dec
inc
loopne
inc
inc
adc
sbb
aas
push
sub
mov
xor
and
das
pushf
inc
rcrb
mov
sbb
arpl
xlat
mov
mov
jg
jg
adc
push
enter
push
pop
push
add
push
push
mov
cmp
je
test
cmp
xchg
inc
mov
insl
shl
dec
or
jbe
nop
ret
stos
jbe
or
jnp
mov
mov
pushl
out
dec
nop
cmp
xchg
sub
cmp
pushf
mov
cs
or
out
jmp
popf
sti
ret
cmp
push
dec
popa
mov
in
ret
inc
xchg
sub
cmp
in
subl
out
adc
and
adc
pop
inc
sbb
mov
mov
sti
test
fsubrs
sub
jne
in
call
icebp
ret
cmpsb
mov
sbbb
imul
lret
dec
shlb
add
push
jl
ret
xchg
add
mov
cs
pop
push
or
add
add
outsb
or
jg
adc
jle
mov
jp
testb
pushf
sbb
add
sub
add
mov
dec
sub
mov
test
aaa
iret
icebp
dec
and
or
jg
adc
add
stos
dec
ja
push
pop
jl
sbb
movhlps
out
leave
cmp
fstl
and
dec
mov
cli
lea
test
sub
enter
cs
sbb
push
and
xorb
mov
sbb
fcomps
dec
mov
sbb
icebp
aaa
loope
fdivs
add
cmp
call
test
mov
add
inc
enter
push
jmp
pop
sbb
pop
cmp
outsb
lret
mov
ja
push
cld
cmp
jae
inc
je
add
push
nop
jle
sarb
int3
out
push
rorb
fnstcw
ja
arpl
pusha
in
aam
or
adc
cmp
xchg
push
xchg
cmpsl
and
jae
push
pop
outsb
fcomps
pop
mov
sub
add
rolb
lods
cltd
inc
cmpl
inc
push
cltd
sub
roll
cmp
sub
jns
ret
cmc
ljmp
mov
ds
cmp
inc
mov
testl
mov
push
or
enter
rclb
testl
mov
cld
or
shll
lret
pop
ss
push
pushl
xchg
add
mov
adc
xchg
loope
inc
sbb
andl
repnz
pop
bound
subb
or
mov
add
or
jg
sbb
and
sbb
outsl
out
jl
push
in
xor
push
inc
push
sbb
je
xchg
pop
nop
mov
dec
xchg
sbb
nop
imul
adc
iret
cmp
pop
add
je
dec
int
xor
adc
ss
sbb
inc
add
mov
or
dec
sar
dec
pushf
jecxz
movsb
and
xchg
adc
mov
loope
sbb
andb
sub
pop
ja
fadds
mov
jmp
xor
add
nop
push
xchg
je
adcl
cmp
sahf
xor
hlt
jne
push
sub
lea
mov
push
icebp
enter
and
inc
cs
mov
dec
or
cmp
popf
pusha
inc
inc
or
xchg
jns
push
mov
add
and
cs
sbb
jno
je
pop
cmc
and
lods
adc
mov
rorb
lds
push
sbbb
mov
xchg
ret
jb
xor
mov
jbe
xor
push
cmp
jl
mov
inc
xchg
sub
adc
movsb
dec
hlt
scas
out
je
mov
pop
lock
jne
clc
push
mov
pop
sub
dec
sub
mov
jb
rorb
xor
xor
shr
add
mov
lret
mov
in
dec
or
or
fwait
push
add
leave
mov
icebp
cmp
pop
mov
or
rep
push
das
mov
sbb
push
sahf
adc
or
call
lock
xchg
fs
shll
push
sub
xlat
pop
out
xlat
mov
hlt
jne
jmp
frstpm(287
rolb
arpl
mov
adc
mov
sbb
dec
xlat
ljmp
mov
push
jge
out
xchg
sbb
sub
inc
rcll
push
mov
scas
jg
fmul
andl
add
nop
xchg
add
adc
jbe
icebp
or
dec
inc
add
or
lock
xchg
adcl
sbb
ss
inc
sahf
dec
ret
adc
cs
shrl
adc
in
pusha
jbe
add
loopne
gs
or
cmp
cmp
fstl
orl
cmp
mov
hlt
sbb
js
js
out
js
xlat
or
rolb
orl
push
push
add
pop
inc
testl
jg
inc
xchg
pop
mov
add
test
or
push
adc
cmp
hlt
cmp
xchg
push
ljmp
mov
dec
or
jne
dec
and
lcall
inc
lret
jp
add
mov
push
mov
jne
jmp
ljmp
cmp
scas
les
xchg
jo
scas
adc
or
mov
xlat
loope
psubb
cli
repnz
shll
testb
jp
and
add
int3
xor
sub
sbbb
mov
mov
sbbl
je
data16
mov
jb
cmp
jbe
mov
push
or
lret
mov
pop
les
push
call
call
out
pop
shlb
aas
out
cmp
dec
popa
and
dec
jge
push
push
or
loop
xor
push
push
push
pop
es
jmp
dec
loop
push
jbe
dec
jmp
pop
pop
pop
add
jmp
cmp
lea
imul
aam
push
sbb
les
insl
in
int3
add
and
dec
push
mov
mov
std
dec
add
jnp
int
lcall
push
jb
imul
jb
orb
call
fiaddl
adc
inc
enter
or
in
inc
mov
jns
cmp
xchg
inc
xchg
imul
dec
rcll
push
xor
and
bnd
enter
cld
and
enter
sub
fdivs
imul
pop
push
call
inc
sbb
add
or
cld
adc
imul
xchg
add
adc
adc
es
jne
cmp
xchg
sbb
mov
adc
repnz
in
lds
jmp
xchg
xchg
rol
ret
dec
lcall
sbb
jo
or
add
imul
insb
pop
dec
bndstx
sbb
inc
xor
and
mov
cmpsl
push
adc
adc
mov
subl
cmp
or
jecxz
test
call
xchg
and
test
in
stc
adc
test
xlat
test
outsb
ss
dec
or
in
xcrypt-cfb
cmpsl
cmpsb
in
adc
sysenter
outsl
lock
fcom
sbb
xor
sbb
outsl
mov
subb
in
in
sahf
mov
lods
stos
dec
outsb
fdiv
mov
pop
hlt
add
sbb
test
adc
in
orb
xlat
inc
loopne
inc
les
pop
xor
rorb
loopne
add
inc
rcr
push
loope
lods
or
fwait
cmp
add
ds
sbb
adc
dec
js
dec
ljmp
mov
imul
fdivl
sbb
jb
inc
jo
fmuls
xor
aaa
call
jg
dec
sub
push
sub
shlb
fsubl
loopne
daa
shll
cltd
aam
fs
cmpsb
sub
inc
or
and
cmp
cmp
or
or
adc
xchg
dec
xor
and
dec
xor
sub
xor
dec
xor
and
inc
inc
xor
and
dec
fs
jne
insb
add
sbb
jge
insb
fwait
sbb
add
sbb
rol
sbb
inc
push
in
int3
rclb
dec
push
in
loopne
clc
sub
and
rcll
movsb
je
sahf
dec
push
lock
shrb
mov
ret
mov
jg
enter
add
aam
fadd
adcb
in
dec
pop
xor
sub
cmp
movsl
sbb
and
call
adc
scas
xchg
xor
cltd
rcrb
fimuls
mov
rolb
xchg
inc
mov
mov
and
add
pop
cmpsb
fwait
aam
or
in
rclb
dec
dec
xchg
fs
mov
sbb
pop
mov
loopne
cmp
leave
adc
fisttps
jmp
js
daa
sub
or
dec
xor
pop
call
push
jg
in
pusha
push
andl
push
rcll
add
hlt
jecxz
andl
dec
push
test
and
xchg
fcmovne
mov
outsl
in
in
call
in
fdivrs
mov
bound
mov
mov
call
mov
and
jp
sbb
xchg
mov
movl
or
cmp
call
testb
cmp
jnp
roll
pushf
movsb
adc
into
adc
jnp
adc
out
lock
mov
std
and
enter
jg
push
pop
jl
push
mov
test
ffree
mov
aad
mov
inc
pop
sbb
adc
dec
pop
inc
jb
cli
mov
sub
inc
jge
sti
and
test
dec
ss
mov
out
imul
adc
inc
jo
sbb
mov
lds
jb
pop
nop
out
hlt
jge
fdivs
jnp
or
jle
push
mov
jno
jle
cmp
sbb
dec
sub
or
popa
inc
lock
pop
push
or
daa
mov
mov
mov
daa
daa
daa
mov
daa
daa
daa
enter
inc
test
ret
sbb
dec
xor
fadds
pop
mov
loope
jl
push
xchg
pop
push
and
mov
push
xor
push
cmpl
in
dec
pop
mov
loope
push
xor
fucomp
xorl
and
notl
aas
or
insb
nopl
in
mov
loopne
jae
and
sub
adc
imul
dec
insl
ret
lds
xor
adc
sbb
adc
mov
cmpsb
outsl
les
xor
xchg
mov
test
push
sbb
mov
pop
inc
mov
push
movsl
xor
std
cmpsb
imul
enter
inc
rolb
mov
flds
adc
shr
movsl
stos
dec
movsb
test
cmc
js
sub
inc
jg
scas
sbb
mov
ja
add
push
lea
xor
in
in
jbe
fucomip
adc
inc
shrl
sub
es
xchg
dec
push
pop
pop
cltd
pusha
imul
adc
js
xor
or
mov
add
incl
add
shld
popa
inc
out
mov
adcb
jle
mov
adc
lret
fsubs
jecxz
lea
cmp
mov
pop
lock
scas
dec
test
gs
xchg
dec
and
fdivs
pop
xchg
jg
pop
adc
pop
fldcw
cmp
js
dec
mov
inc
cld
and
mov
mov
mov
ret
popf
mov
or
call
call
call
nop
jge
xor
sbb
test
mov
insl
ljmp
rorl
fldcw
pop
jmp
and
sbb
or
sbb
xchg
and
cmp
adc
inc
sti
pop
mov
add
in
push
xchg
fs
adc
ja
and
or
mov
enter
or
enter
or
or
adc
mov
enter
in
aaa
call
fsubrs
push
mov
pop
aam
cmp
pop
arpl
popa
cwtl
xchg
push
mov
fs
addl
mov
dec
repnz
xor
push
inc
pop
leave
mov
xlat
pop
mov
mov
shl
push
xor
and
test
enter
lea
or
pop
hlt
mov
pop
mov
fdivr
cmp
push
and
enter
sub
push
lea
mov
rorb
sbb
mov
mov
mov
add
nop
addb
push
cmp
insb
lds
or
in
movsl
mov
mov
cmp
pop
adc
nop
lock
nop
push
imul
or
es
addl
adc
outsl
call
push
jg
movsl
push
push
nop
cmp
and
fadds
pop
mov
fdivl
lods
or
cmc
add
sub
or
pusha
push
xchg
mov
push
and
lock
pop
cwtl
mov
add
xor
test
int3
xlat
nop
sbb
mov
lds
inc
subb
aam
add
in
and
in
in
sarb
mov
cwtl
fwait
mov
in
pushf
sti
mov
and
pop
shr
push
sub
xor
cmc
test
leave
or
mov
xchg
in
and
and
sub
adc
xor
cmpsl
std
addr16
mov
mov
lods
push
imul
nop
cld
add
mov
sub
int
fdivrl
mov
imul
and
insl
test
adc
fdivl
mov
sbb
inc
xchg
pop
or
or
out
cmp
or
std
inc
add
aam
lahf
add
xchg
lahf
mov
mov
inc
dec
push
cmp
push
mov
iret
or
mov
das
mov
jns
sub
test
add
push
fs
sbb
in
call
lock
or
popf
dec
fwait
in
testl
push
xchg
movsb
or
cwtl
xchg
ja
inc
mov
xchg
dec
in
adc
je
push
jmp
test
int3
mov
outsb
xor
bswap
inc
adc
mov
push
mov
jle
or
mov
adc
jne
mov
cltd
pop
jno
test
fcoml
insb
movsb
bound
xlat
or
aam
int3
lock
sbbb
int
in
and
mov
lcall
rcll
lcall
inc
arpl
xor
in
pusha
xchg
out
int3
jae
inc
cmp
sbb
movsl
or
rcll
xlat
mov
dec
xchg
in
movsb
cmp
adc
dec
sarb
fiaddl
adc
aam
mov
mov
in
jl
stos
jo
cwtl
jnp
mov
cmp
sbb
repz
sbbl
adc
xchg
xor
mov
sti
pop
adc
inc
aas
and
mov
mov
mov
sub
xchg
andb
or
movsl
jbe
pop
movsb
fwait
orl
sahf
dec
pop
mov
inc
cmp
sahf
ret
jbe
or
sbb
pop
cmc
push
imul
adc
loopne
dec
in
inc
lahf
adc
mov
mov
arpl
pusha
dec
lds
pop
fs
sar
int3
sti
mov
inc
fwait
test
lock
mov
and
mov
loope
vrcpps
jl
or
sub
and
dec
mov
insb
xorl
jne
pushf
cmp
stc
mov
mov
fcoml
inc
in
pop
call
arpl
int3
ret
or
call
ret
mov
mov
or
sbb
test
out
xlat
or
jmp
lea
scas
fdivrl
and
cmp
pushf
enter
jnp
adc
pop
xchg
mov
pusha
and
and
pop
push
cmpsb
cs
jne
loope
mov
add
rorl
call
mov
out
sub
dec
dec
jg
movsb
pop
dec
pop
jo
movsl
outsl
mov
mov
in
fdivl
add
pushf
fs
mov
pop
mov
in
lea
scas
or
xchg
lea
std
fisubl
cmp
sahf
cmp
adc
mov
inc
lea
jb
cwtl
movsb
pop
pushf
mov
enter
nop
or
lock
and
cmpsb
lret
test
sub
lock
jbe
test
test
sub
les
adc
lock
mov
mov
inc
cmpsl
dec
cmpsl
nop
jbe
cmp
push
jmp
test
mov
or
sbb
or
test
fwait
mov
sbb
sub
mov
bound
sbbb
cwtl
xchg
or
ss
arpl
test
lea
and
mov
lods
lods
out
or
push
call
xchg
sbb
adc
dec
adc
and
rolb
mov
fists
mov
pusha
jnp
mov
outsb
push
int3
pop
shlb
mov
cmp
scas
mov
or
test
enter
pop
pop
xlat
aam
outsl
or
inc
and
sub
lods
jno
insb
xchg
or
mov
mov
or
lods
mov
or
or
mov
jl
pusha
jo
dec
imul
adc
adc
pusha
out
out
sbb
jecxz
lods
fnstsw
push
mov
pop
inc
iret
jmp
push
shlb
pop
mov
adc
shll
sbb
cmpsb
mov
sub
sbb
das
and
push
add
mov
imul
cltd
adc
mov
xor
add
pop
aaa
push
inc
jecxz
scas
pop
call
fistpll
adc
lcall
aad
outsl
aas
mov
lock
cld
mov
andb
cmp
xor
out
insb
outsl
add
int3
jg
fnstsw
rcl
adc
rclb
pop
repz
shlb
inc
pop
jno
fistpll
adc
sub
jne
lds
mov
or
xchg
push
jbe
mov
inc
test
dec
sub
pushf
bound
or
fs
dec
aam
add
dec
pop
aad
add
jne
cltd
add
add
movsl
rorb
mov
sub
push
sbb
adc
in
lahf
or
les
iret
sbb
sbb
lcall
imul
sbbb
xlat
dec
les
fsubr
les
adc
les
mov
push
dec
xor
imul
pop
les
add
push
adc
je
mov
pusha
pushl
sbb
mov
lea
lods
cltd
add
fs
add
nop
or
sti
rorb
inc
movsb
sbb
movsb
adc
cltd
nop
out
nop
and
dec
ret
fwait
dec
movsl
pop
or
inc
mov
mov
or
scas
out
jg
cmova
add
mov
mov
push
test
sti
xchg
or
xlat
iret
or
adc
negl
jb
andb
dec
test
jo
add
cmp
add
and
pop
add
push
mov
pop
daa
jmp
les
mov
push
sbbl
fsubr
and
out
xchg
mov
insb
mov
stc
cmpsl
mov
add
or
or
sub
pop
xchg
dec
cmp
in
inc
xchg
push
mov
and
or
mov
aad
in
xlat
xchg
inc
cmpsl
adc
xchg
imul
add
adcl
movsl
lea
pop
insb
ret
es
test
fsubrl
xor
mov
and
repnz
js
fsubl
add
int
inc
inc
xchg
dec
outsb
xchg
nop
and
push
xchg
cmp
pusha
lds
int3
cltd
push
pop
ret
leave
sar
mov
mov
sbb
sub
mov
bound
mov
addb
mov
imul
lahf
mov
inc
xor
xchg
mov
add
add
fs
push
std
add
es
or
notl
push
cltd
nop
inc
out
and
jl
and
arpl
xchg
sarl
dec
rcl
int3
fwait
dec
jbe
add
mov
repnz
in
add
mov
sbb
add
sti
xchg
add
test
sub
cmp
lret
inc
shll
adc
push
push
out
mov
xor
fbld
dec
and
inc
stos
mov
jb
jg
xchg
mov
cmp
xchg
invd
cltd
movsl
fsubrs
das
fildl
inc
sahf
add
or
or
add
pop
mov
gs
push
daa
sub
cmpsb
icebp
cmp
test
test
add
mov
fdivrs
filds
pop
in
xchg
xchg
lahf
pusha
mov
mov
push
in
add
xchg
mov
shrl
stc
jb
push
in
adcl
fucom
mov
movsb
adc
cltd
mov
inc
lret
lock
cmp
cld
vmovntps
addr16
aas
mov
shl
es
mov
sbbl
dec
dec
aam
jl
xor
pop
popf
cwtl
cmpsb
sub
test
mov
and
dec
sub
jecxz
mov
rclb
fisubrl
pop
fadd
sbbb
adc
xlat
and
sub
in
or
inc
add
and
or
cmpsb
xchg
call
leave
sub
sub
test
pop
test
aam
sub
or
addb
pop
mov
cwtl
lds
in
xchg
jne
les
add
sub
test
or
mov
adc
cmpsb
mov
loopne
lds
mov
add
pusha
nop
pop
es
sbb
xor
popa
les
inc
pusha
xor
sbb
jle
pop
jno
xor
sub
aas
inc
repnz
les
add
mov
xchg
fwait
mov
in
xor
mov
adc
and
jl
imul
xor
pusha
push
pop
dec
xlat
push
enter
orb
push
jg
cmp
sbb
inc
lea
clc
fcomps
and
or
rolb
sub
aaa
cld
rol
es
or
in
xchg
cmp
dec
mov
leave
and
jecxz
ret
push
sbb
insl
mov
dec
adc
leave
and
int3
enter
inc
xor
and
pusha
lds
adc
jbe
lahf
pop
insl
push
andb
lea
or
je
xlat
inc
add
data16
push
push
incl
sahf
dec
dec
cmp
or
or
lods
dec
xor
aad
stos
outsl
mov
dec
mov
and
adcb
loop
mov
scas
test
aam
int3
orl
rclb
addb
cltd
mov
orb
mov
xadd
or
mov
outsl
das
stos
dec
cmp
movsb
jo
lahf
dec
pop
adc
dec
shll
fsubr
adc
or
or
shl
mov
roll
sbb
mov
aam
cmp
pop
leave
mov
or
mov
mov
xchg
in
mov
jb
cltd
enter
fs
fstpt
imul
mov
les
adc
stos
cltd
push
outsl
nop
pop
dec
in
test
iret
int
ret
jae
out
sbb
push
shlb
cmp
push
std
sbb
in
add
loope
dec
cmp
xor
ret
ret
mov
mov
add
and
cmp
notl
xor
dec
xor
call
test
add
add
cltd
loopne
add
cmp
int3
sbbl
mov
adc
mov
daa
nop
stos
add
fildll
ret
sarl
cmp
jmp
cld
popa
addb
push
xchg
sub
cmpsb
loop
lahf
adc
int
xchg
or
test
add
adc
sbb
push
sbb
fsub
bound
push
jae
test
gs
js
push
adc
mov
pop
sub
cltd
jne
or
jl
mov
lock
fidivrl
push
test
xor
fwait
or
adc
jb
stos
enter
cli
cltd
pusha
leave
and
dec
cmp
dec
imul
xchg
imul
sub
jns
daa
imul
cli
insl
fidivl
push
xor
add
lods
jbe
pushf
hlt
cli
and
pop
or
sbbl
movsl
jae
test
pop
sub
inc
loope
sbb
cmp
cli
call
xor
or
imul
mov
in
and
mov
test
ljmp
aad
loopne
std
iret
stos
xchg
jbe,pn
pop
cwtl
add
aam
outsl
cltd
test
pop
sbb
nop
pop
mov
mov
cwtl
dec
cs
sub
fsubrl
lds
aad
call
mov
insb
push
mov
adc
pop
fadds
rol
adc
fnstcw
pop
push
faddl
imul
adc
pop
add
or
push
cmpsb
inc
xor
or
cmpl
rcl
cmpsb
aam
faddl
add
popa
and
imul
cmpsl
in
out
mov
cmp
add
aam
sti
add
fidivs
xor
inc
ficompl
sarb
es
fnstsw
enter
add
push
pop
inc
xchg
out
loopne
jle
adc
add
mov
int
loopne
push
lock
dec
loope,pt
push
push
inc
jmp
jae
daa
jne
xor
xor
mov
mov
and
mov
imul
scas
add
nop
mov
lea
movsb
add
add
rclb
sbb
xor
in
out
and
lds
add
mov
pop
fistps
cmp
xchg
ret
push
lods
sub
ds
stc
stos
jmp
xlat
mov
test
add
push
lds
pop
ds
repz
sub
inc
add
test
out
and
add
jae
mov
rcl
out
mov
lahf
notb
sarb
incb
notl
add
cltd
push
pop
out
jnp
add
lahf
rolb
out
decl
or
cmp
dec
mov
fistpl
or
jnp
mov
sbb
mov
or
and
daa
pushl
adc
mov
rcll
xchg
adc
or
cmp
shl
adc
jnp
jns
mov
out
ds
push
scas
int
xor
jmp
push
sbb
test
jmp
cmp
outsb
je
jb
outsl
arpl
fs
outsl
jo
in
sbb
sbb
push
dec
imul
push
sbb
jb
gs
xor
cs
insb
daa
popa
and
cmp
jg
popa
je
outsl
outsb
push
push
inc
inc
add
push
cmp
lock
rdpmc
add
lmsw
filds
idiv
pop
sub
or
mov
in
neg
push
inc
outsl
jb
js
je
jb
gs
cmp
or
outsl
clc
testl
add
add
je
push
or
cmp
popa
nop
inc
jne
jb
stos
inc
imul
outsb
dec
xor
xor
ja
es
cmp
cmp
imul
sahf
dec
and
jns
add
das
das
adc
push
dec
push
inc
inc
gs
insl
loopne
in
into
sub
dec
outsl
jbe
dec
arpl
out
push
pop
testb
je
inc
jne
jne
dec
jne
xchg
ffreep
pusha
push
xchg
roll
jb
insb
dec
popa
jb
fchs
lret
bound
inc
insb
out
jae
adc
xchg
pushf
jae
cmp
ja
sahf
mov
jne
xor
lods
sbb
and
daa
push
mov
sbb
dec
xor
jne
dec
andb
jne
jae
cmp
ja
pop
dec
inc
ds
xor
jo
or
enter
fcomip
mov
mov
add
ja
and
ret
cld
jg
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
cmc
jg
sub
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
pop
rolb
push
frstor
mov
pop
pop
adc
popa
bound
gs
xor
imul
jno
js
ja
es
fwait
movsb
jnp
jge
jg
add
inc
dec
adc
sub
add
ds
or
adc
ffree
lock
jae
out
push
pop
repnz
jne
inc
inc
outsl
mov
cmp
lock
insl
and
pop
fs
jb
ss
dec
push
push
sbb
inc
scas
dec
dec
inc
sbb
and
data16
lods
and
push
xor
sbb
xor
hlt
cmpsl
jp
jo
imul
popa
push
push
xor
je,pn
xor
inc
and
ret
ret
xorb
and
fs
out
imul
cltd
fsts
pop
or
xorb
inc
popa
and
insb
mov
mov
jne
pop
xor
scas
sbb
data16
push
xchg
shrl
xor
mov
dec
mov
dec
gs
sub
sbb
inc
sub
jl
or
and
in
cmp
mov
sbb
jp
xorl
push
pop
es
or
outsl
je
push
or
push
and
push
ds
lods
rorl
mov
faddl
mov
mov
mov
cmp
sub
add
sub
arpl
cmp
arpl
dec
popa
sub
mov
insb
gs
fiadds
inc
xchg
mov
imul
pusha
int
int3
or
push
sbb
lock
popa
pop
enter
xor
jo
and
gs
push
fistps
adc
int
push
or
xor
scas
shll
hlt
or
rol
dec
add
pushf
sahf
dec
dec
aaa
ja
rcll
test
outsl
outsl
lods
pop
and
jae
fs
mov
cli
jbe
add
inc
mov
mov
cmp
push
gs
das
mov
mov
lds
mov
xlat
outsl
push
or
jno
lret
mov
push
cmp
lret
xor
inc
aaa
sbb
push
pop
insl
in
ljmp
imul
icebp
or
outsb
popa
pop
or
push
jmp
pop
sbb
inc
insl
mov
mov
fldl
or
adc
and
push
xchg
cmp
out
dec
pusha
or
and
pop
push
fldl
mov
push
jae
or
arpl
jo
cmp
pusha
jo
sub
push
mov
rcll
push
sub
lret
inc
sub
scas
dec
andb
jmp
lods
and
cmp
cwtl
ja
mov
out
inc
inc
and
dec
mov
adc
cmp
mov
loopne
es
add
cmpsl
in
push
rol
das
lret
jno
sti
jg
push
icebp
pusha
inc
mov
clc
ret
movsl
add
xorl
jae
jae
push
loop
data16
push
push
lock
pop
xchg
add
add
xor
sub
popa
js
jae
jno
jnp
je
pop
dec
pop
add
add
mov
xor
imul
outsb
xchg
testb
push
add
adc
add
mov
push
add
add
add
and
sbb
cmp
xor
ds
push
test
hlt
and
or
pusha
add
mov
add
pop
sub
add
sbb
mov
addb
add
xchg
mulb
ret
add
orb
jge
push
cmpb
push
and
sub
jb
mov
out
adc
push
jo
add
mov
inc
inc
mov
sbb
stos
int3
js
jo
mov
sbb
movsb
add
add
cmp
push
xchg
sbb
add
lea
xlat
cs
inc
xchg
add
and
dec
insb
add
dec
sub
ds
test
dec
pop
pop
jo
or
add
and
or
pushf
cs
or
pushf
jo
data16
xchg
js
adcb
adc
xchg
sbb
sub
dec
add
and
nop
test
pop
sbbb
adc
add
mov
and
xchg
mov
loopne
rcl
add
insl
add
in
add
add
add
push
mov
mov
add
inc
sbb
add
sub
adc
mov
addl
mov
xchg
xchg
xchg
xchg
xchg
call
pushf
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
pushl
mov
rol
enter
int3
int
iret
rcl
rcl
aam
call
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
testb
movsb
push
clc
stc
cli
sti
cld
std
inc
add
test
bound
or
mov
sarl
mov
sbb
sbb
push
pop
outsl
ja
mov
cs
jae
jb
bound
dec
cmp
ss
popa
mov
in
in
dec
repnz
pop
jmp
mov
mov
outsl
js
push
push
inc
push
imul
insb
gs
lods
xor
out
mov
dec
jl
daa
pop
jbe
mov
and
out
inc
insl
jnp
sbb
inc
mov
imul
fcmovnu
and
inc
jb
jns
daa
pop
in
adc
mov
gs
and
pop
pusha
aad
lods
pop
aaa
call
int3
cmp
rolb
les
push
mov
sub
jns
imul
pop
pusha
inc
jbe
pushf
push
rclb
lahf
fs
xchg
push
outsb
fisubl
dec
clc
popl
movsl
dec
sti
cmp
push
das
add
and
pop
es
dec
nop
les
lock
sub
pop
pop
pop
push
stos
popf
dec
adc
aas
xchg
add
imul
insb
call
mov
subl
gs
or
xchg
xchg
inc
push
push
push
push
dec
push
shrb
dec
push
jne
repnz
js
push
into
mov
lea
push
lods
xchg
scas
dec
sbb
addl
imul
call
adc
sub
jae
inc
in
add
fidivl
xchg
jg
popa
fcoms
mov
lods
jns
pusha
push
outsb
aad
mov
mov
mov
daa
xchg
rcrl
jmp
mov
popw
pop
cmp
stc
iret
es
cmp
push
das
push
sub
sub
inc
jl
jle
xor
sub
addr16
jo
jnp
sub
sub
push
cmp
jmp
cmp
je
add
imul
dec
pop
pop
cwtl
jb
sbb
push
mov
cmpsb
shll
das
jo
ss
sbb
push
lods
popa
pop
loopne
sbb
and
xor
cwtl
pop
es
jo
sub
adc
sub
repz
sti
mov
inc
add
in
repz
dec
inc
xor
ljmp
popf
jmp
fs
sub
dec
jns
repz
inc
add
push
or
sti
xor
out
add
out
lock
push
iret
adc
dec
in
call
out
mov
push
js
in
sub
sub
out
out
jns
pusha
push
push
aam
mov
je,pt
int3
push
enter
out
sahf
sarb
jns
cmpsl
push
movsb
mov
jns
xorb
sbb
iret
sarl
fdivrl
repz
cmp
lock
aam
jns
out
sarb
sahf
jl
pusha
inc
and
in
out
sahf
ja
push
lods
andb
ja
sbb
jmp
push
test
cmpsl
pop
mov
adc
lcall
bound
outsb
push
xor
add
push
dec
test
stos
lock
outsl
pop
cmpsb
bound
in
xchg
push
insb
fs
sbb
repz
leave
jb
xor
fcomps
lods
pcmpgtw
xor
lock
decl
mov
incl
dec
jae
mov
test
mov
push
out
sbb
dec
inc
dec
xor
inc
dec
dec
xor
idiv
dec
push
push
and
xor
push
dec
inc
dec
add
dec
dec
inc
add
out
push
das
adc
sub
adc
lds
fs
call
rclb
mov
push
imul
jnp
inc
loop
mov
ds
pop
adc
jnp
rcrl
lret
sbb
jb
xchg
jge
arpl
adc
pop
dec
scas
jp
adc
fdivp
das
in
scas
mov
mov
and
cmp
dec
imul
dec
cmpsb
iret
lret
add
inc
mov
mov
sub
fadds
pop
sahf
fwait
ss
sbb
pop
jns
ds
ljmp
xor
incb
int3
dec
dec
xor
dec
popf
pxor
xor
lret
das
cmp
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
and
pushl
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
xchg
push
pop
popa
push
repz
lock
scas
int
mov
pop
leave
loop
mov
pop
xchg
mov
scas
lods
clc
push
xor
cwtl
iret
adc
or
icebp
pop
pop
repnz
dec
enter
and
es
lahf
sbb
sbb
add
xchg
sub
mov
out
leave
ljmp
mov
dec
test
push
push
inc
inc
or
outsb
jbe
adc
add
inc
es
mov
push
sub
mov
pop
add
dec
dec
xchg
out
and
aaa
cmp
pop
add
pop
sbb
aas
cmp
dec
add
sti
sub
adc
sub
sbb
add
sbb
cmp
xor
pop
and
xor
dec
fldt
cmp
and
pop
jbe
sub
dec
push
mov
mov
adc
dec
xchg
add
cmp
sbb
pop
mov
dec
sbb
add
and
dec
sub
sbb
inc
cmp
mov
cmp
ds
push
adc
ret
inc
xor
mov
mov
adc
ljmp
dec
or
push
cmp
pop
pop
xor
fisubrs
or
out
push
pop
push
pandn
mov
xor
adc
dec
adc
cmp
pop
push
sub
inc
or
pop
pop
adc
dec
pop
jge
ss
mov
pop
dec
adc
fcmove
mov
or
shl
daa
stc
dec
pop
sub
and
and
es
fiaddl
push
test
push
lea
inc
subb
dec
pop
dec
add
cmp
sub
dec
cmp
sub
pop
sbb
fsts
inc
sbb
inc
add
inc
fisubrl
sbb
mov
fwait
sub
sub
pop
cmp
insl
jo
and
aaa
dec
mov
sub
aaa
inc
jle
mov
push
or
and
sub
sub
popf
stos
dec
fidivrs
jb
push
cwtl
scas
push
push
sub
inc
xor
mov
pop
push
gs
push
jecxz
add
xchg
xor
and
push
and
cmp
in
add
pop
mulps
pop
xor
sub
in
add
and
jo
dec
push
mov
and
or
and
adc
pop
add
push
movsl
and
sbb
adc
push
adc
dec
cwtl
in
push
cmp
xor
xor
adc
push
sahf
and
mov
sahf
out
jo,pt
mov
mov
inc
outsl
jg
ja
out
push
push
inc
add
shlb
or
andb
push
pop
addb
dec
dec
mov
outsl
data16
mov
or
dec
or
popa
push
xchg
pop
and
inc
pop
fcoml
xor
pop
sbb
jg
insl
and
dec
bound
xor
pop
cld
cvttps2pi
sbb
shll
push
rclb
push
xor
out
cmp
jo
mov
adc
out
sahf
inc
nop
mov
mov
jo
rclb
jnp
out
inc
nop
cmp
ds
mov
push
mov
cmp
fwait
push
pop
les
cmp
push
sub
push
lahf
aam
push
xor
or
fistps
dec
sbb
push
sbb
dec
inc
sub
js
xor
jl
xor
or
mov
cs
inc
adc
or
inc
nop
dec
or
fistpl
jmp
push
xor
and
push
pop
cmpsb
sbb
lcall
jmp
icebp
jecxz
push
pop
pop
dec
xchg
cmp
jb
popf
pusha
jbe
pop
adc
sbb
pop
loopne
sub
and
cvtpi2ps
cwtl
or
lods
sub
aaa
mov
jnp
pusha
sub
and
or
pusha
jp
cmp
or
mov
stos
out
fidivrl
js
dec
xor
cmp
pop
out
inc
jge
enter
ja
sub
xor
cmp
xor
or
dec
dec
and
jecxz
add
fadds
sahf
jge
shlb
fs
cmp
mov
scas
push
dec
pop
push
lods
sub
pop
test
sbb
pop
dec
shrb
push
xchg
scas
out
jl
adc
jae
dec
adc
add
mov
cs
and
adc
gs
push
incb
das
push
cmp
sbb
daa
adc
call
and
adc
inc
cmp
mov
cltd
cmp
neg
inc
out
pop
or
loope
int3
mov
and
out
mov
xchg
stos
pop
and
and
xchg
loope
mov
cmp
push
jle
mov
sub
xchg
ss
dec
sbb
dec
icebp
xor
loope
add
mov
es
or
pop
mov
popa
stc
and
ds
push
inc
cs
in
sbb
inc
aaa
or
dec
dec
and
mov
xor
mov
mov
in
push
fadds
addr16
ss
imul
push
jbe
push
dec
out
cmp
mov
pop
mov
scas
daa
int
xor
sbb
mov
push
or
jg
dec
pop
push
add
popa
push
fstpt
xchg
rorl
mov
ret
push
iret
and
movsb
mov
and
xchg
and
das
pop
add
rclb
ja
dec
and
jge
push
cmp
push
enter
in
and
inc
cmp
and
xor
inc
addr16
aas
or
and
and
jo
data16
push
and
dec
jo
ret
pushf
into
and
shr
je
mov
push
push
fbld
sub
add
cmp
and
faddp
sub
cmpsb
and
pop
add
xchg
jo
jl
push
pop
jle
add
and
and
jo
popf
shll
inc
daa
pop
sub
mov
lcall
fisttpll
pop
or
xor
xor
inc
and
test
push
jge
cmc
pop
add
cmp
into
cmp
and
or
ja
inc
or
sbb
pop
push
xor
imul
pusha
cmp
pop
push
adcl
mov
fdivrp
sbb
adc
adc
pop
adc
sbb
fwait
aaa
sarl
das
mov
sbb
out
push
cmp
stos
or
push
out
mov
stos
xor
mov
popa
jne
push
jae
ja,pt
and
fs
or
divl
cli
outsl
mov
inc
push
sub
and
sbb
mov
push
dec
adc
sbb
push
inc
cmpsb
das
subl
xor
call
push
fiaddl
cmp
dec
adc
cmc
mov
pop
andl
xor
and
and
inc
sub
daa
movl
push
adc
dec
sub
xor
out
and
mov
sahf
mov
jae,pn
push
add
je
cmp
and
int3
aas
pop
inc
pusha
mov
or
cmpsl
shlb
inc
pop
daa
dec
mov
lock
xchg
into
pop
jecxz
cltd
cmc
aas
out
insb
outsl
jb
bound
cs
fidivl
fdivr
push
push
je
and
jmp
push
xchg
mov
jb
add
outsb
das
mov
and
mov
pop
add
add
push
adc
sub
jae
fidivs
mov
mov
mov
andb
mov
ja
inc
add
roll
sysret
xor
sbb
adc
imul
pop
xor
les
or
pop
and
or
pop
das
mov
xchg
and
inc
inc
enter
aaa
sbb
dec
wbinvd
sahf
dec
sub
mov
mov
sbb
mov
addb
cmp
push
cwtl
mov
push
and
repnz
sub
jle
push
sbb
inc
or
add
adc
xor
in
rcl
fiaddl
mov
insl
fistl
lret
adc
popf
popf
sbb
or
and
leave
test
mov
rclb
jle
pop
jae
cs
cwtl
cmp
inc
shlb
dec
pusha
push
inc
mov
mov
add
pop
and
cmp
jne
pushl
pusha
mov
mov
outsb
jnp
mov
sbb
xchg
cmp
enter
pop
pop
adc
test
ss
xchg
addr16
and
pop
push
je
inc
add
sbb
outsb
adc
inc
add
into
or
or
dec
push
and
sub
add
and
loop
inc
sub
cld
sub
jo
dec
js
cmp
mov
push
push
jo
testb
cmc
pop
mov
jmp
add
pop
std
daa
push
push
push
in
or
mov
mov
push
das
add
lahf
jne
lock
fs
dec
cwtl
push
xor
push
pop
inc
jo
dec
sub
lret
lock
pop
jo
enter
mov
addr16
and
ds
pop
sbb
or
mov
dec
and
out
cmp
add
and
pop
outsl
pusha
aaa
or
bound
cmp
adc
js
lcall
inc
adc
and
lock
pop
or
dec
scas
and
or
adc
ja
cltd
inc
sub
xor
fistl
cmp
inc
push
sbb
and
stos
les
push
es
and
movsl
test
enter
fwait
inc
leave
or
ds
cmpsl
and
adc
push
pop
sarl
or
movsl
sbb
pop
sbb
xor
in
and
xor
and
mov
cmp
cwtl
imul
ficompl
js
xchg
mov
gs
ss
rcll
mov
adc
int
aaa
outsl
fisttpll
or
ss
adc
out
pop
jecxz
negb
cmp
xor
ljmp
lods
adc
test
js
enter
scas
and
dec
mov
pop
aas
dec
idivb
pop
ds
repnz
dec
cmp
dec
inc
mov
imul
and
insb
ds
data16
cmp
push
xchg
jns
cld
mov
and
shlb
adc
lock
sub
push
adc
add
dec
dec
sub
pop
inc
push
dec
adc
adc
mov
mov
adc
add
dec
push
adc
or
add
cmp
pop
aas
dec
adc
int3
test
and
pop
jo
mov
fists
push
js
loop
pop
out
lds
ficomps
fisttps
adc
outsl
in
ret
inc
cmp
and
mov
sarb
and
xor
and
dec
and
cmp
outsl
adc
cld
into
sti
push
and
das
adcl
cmp
or
dec
push
imul
popf
push
xchg
testl
push
lea
sbbb
adc
pusha
fldt
aas
adc
lock
dec
outsb
jnp
add
sub
jle
nopl
insl
adc
xor
push
or
xorl
sbb
movsl
sbb
adc
cmp
and
sbb
stos
mov
and
mov
sbb
mov
sbb
mov
daa
outsl
jo
push
dec
fwait
and
push
jae
mov
pop
cmp
inc
jns
das
call
push
adc
or
stos
dec
repz
xor
xchg
dec
xchg
push
xor
fs
add
dec
jmp
jle
adc
xchg
scas
xchg
push
das
inc
ss
push
inc
daa
popf
dec
dec
lods
pop
xor
test
loop
cmp
jmp
push
and
inc
sub
and
add
push
push
pop
sbb
fs
adc
sbb
jge
inc
or
out
lock
ja
inc
aaa
cvtdq2ps
sbb
cmp
stos
xor
es
inc
sbb
lods
cmp
cmpsb
add
dec
xchg
or
pop
adc
pop
test
pusha
ds
das
decb
cmpsl
aaa
cmp
pop
adc
or
inc
sbb
pop
jp
push
sub
repz
daa
or
pushf
and
pop
sub
jmp
cmp
pop
sbb
and
data16
test
cmp
std
int
inc
pop
xchg
and
push
xchg
inc
cld
sbb
aaa
push
cmp
push
mov
sysenter
pop
push
paddq
or
fimull
daa
adc
fistl
sub
icebp
aaa
mov
xchg
add
scas
add
aaa
aaa
lods
mov
sub
sub
or
je
jo
inc
mov
imul
add
outsl
jb
jp
mov
bound
add
hlt
loopne
mov
addr16
adc
popa
add
in
and
mov
or
cld
outsb
sub
lods
sbb
cmpsl
push
cld
fs
cmpsl
inc
mov
jnp
shlb
rolb
shll
fnstcw
rol
ds
into
ss
sahf
imulb
roll
nop
mov
fnstsw
out
loopne
dec
fbld
xchg
call
push
sbb
inc
testb
or
push
pop
in
or
dec
dec
cmp
and
pushl
aam
adc
and
mov
add
adc
aaa
mov
shlb
movsl
enter
push
mov
inc
push
iret
idiv
insl
ss
adc
cli
mov
sub
sub
jae
sbb
mov
sbb
mov
ds
pop
sbb
cli
inc
subb
insb
jle
jo
fsubs
sbb
jmp
pop
test
xor
dec
xchg
pop
shl
dec
push
mov
pop
adc
cld
or
xor
aaa
aaa
xor
dec
cmp
loopne
and
subl
es
inc
jb
popa
scas
pusha
sbb
outsl
push
dec
imul
dec
dec
cmp
mov
sub
pop
mov
mov
adc
repnz
nop
xor
iret
leave
jae
cmp
pusha
cmp
pushf
cmp
push
inc
dec
ds
lock
xor
insb
inc
js
pop
lret
cmp
dec
pop
add
sub
int3
ret
mov
adc
pop
call
push
push
dec
cltd
jnp
cmp
xor
pop
icebp
sub
sub
xor
inc
xor
inc
push
xor
push
and
popa
xorb
sahf
cmp
insb
push
outsb
add
mov
ds
sub
jmp
jne
js
test
mov
xor
dec
jp
push
popf
push
cs
jb
jo
jg
into
dec
dec
jne
cmp
popa
outsb
mov
lock
mov
fistl
add
and
push
iret
addl
lock
scas
push
or
ja
sahf
jge
mov
xor
mov
xlat
das
mov
je
aaa
cmp
out
adc
add
sub
adcb
add
iret
cmpsl
sbb
or
sarb
iret
mov
adc
test
inc
xlat
jge
add
dec
xor
adc
mov
dec
cmp
and
and
or
cmp
cmp
faddl
lock
dec
and
cwtl
movsb
add
ss
mov
idivb
push
and
push
inc
add
sbb
jns
or
cld
and
and
pop
pop
sub
xor
xor
loop
nop
sbb
pop
call
dec
ds
push
lock
das
outsl
sbb
lret
test
push
dec
mov
adc
push
data16
roll
jecxz
cld
push
es
fldenv
pop
pop
loope
pop
in
out
xor
cmpsl
mov
jns
pop
int
inc
pop
out
lcall
xchg
xchg
sti
mov
pop
enter
xchg
push
jle
push
push
pop
cmp
inc
in
sahf
ja
xchg
stos
sub
nop
mov
fcoml
xchg
push
push
out
mov
es
fsubs
push
aad
lahf
pop
jo
cs
jns
mov
inc
xchg
pop
test
push
cld
fnstcw
aaa
das
push
scas
add
xchg
insb
das
sbb
dec
fstp
rcrl
pushf
dec
dec
inc
push
aad
data16
push
lahf
pop
push
sbb
fcmovnu
enter
cmp
mov
rclb
jl
sarl
mov
push
out
test
jns
iret
rol
out
or
out
xor
pop
adc
inc
pop
pop
jge
in
pop
out
sbb
sahf
push
adc
sarb
iret
fwait
daa
add
pop
in
pop
ss
mov
push
dec
push
pop
lcall
scas
sbb
cmpsb
sbb
testl
fimuls
lock
add
lahf
out
cmp
pop
sub
sarl
rorb
in
inc
test
repz
xchg
clc
pop
div
sahf
aaa
jnp
push
xlat
fcoms
mov
sahf
out
push
dec
repz
or
cltd
out
cmp
push
push
fstp
negl
mov
or
and
pushf
and
push
add
push
inc
fdivp
inc
ds
mov
xor
jns
cmpsl
jge
or
in
cmp
push
cmp
mov
clts
cld
dec
adc
cmp
je
mov
testl
adc
push
jg
iret
repz
iret
lock
xor
out
push
js
enter
data16
push
cmp
jo
jns
out
cmpsl
push
inc
jns
out
pop
push
push
jle
lock
dec
pop
fiadds
or
ljmp
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
push
mov
xor
adc
imul
mov
jbe
pop
mov
jg
mov
das
add
idivb
jg
jg
adc
push
and
pop
sbb
enter
adc
stc
jg
xchg
inc
repnz
iret
pusha
or
test
or
in
or
addr16
jmp
pop
or
fisubrl
outsb
fdivl
aas
inc
push
mov
frstor
inc
sbb
testl
rcrl
push
mov
aas
inc
jnp
dec
jae
fisubl
push
mov
das
jae
pop
mov
fimuls
dec
lcall
je
push
ljmp
cmpsb
dec
add
push
pop
lods
xor
inc
lahf
insb
pop
push
mov
sarb
jns
sbb
ffree
push
fisttps
jp
das
push
mov
xchg
outsb
push
inc
jmp
sarl
outsb
iret
push
pop
retw
test
flds
mov
ja
add
adc
mov
pop
dec
cmp
in
fstps
pop
enter
ja
cmp
or
ds
fisttps
das
adc
mov
popa
insl
jo
es
insb
je
push
scas
repnz
jae
es
outsl
and
aas
out
insb
mov
cmpb
sub
and
mov
mov
mov
xor
xor
out
cmp
xor
xor
xor
cmp
cmp
push
xor
xor
and
mov
ds
add
add
imul
dec
dec
push
dec
and
cmp
dec
ds
pop
add
or
lock
ja
push
scas
and
pushf
push
ljmp
sub
and
and
cmc
mov
int
es
sub
sub
adc
xchg
jp
outsl
dec
push
mov
cmp
lahf
and
cmp
andb
aas
and
aas
adc
loopne
mov
out
add
mov
fmull
shlb
or
or
into
mov
ss
jg
int
inc
sub
sbb
adc
ret
xor
mov
mov
movsl
cli
mov
int3
subl
daa
adc
push
fsubs
orl
inc
out
adc
pop
repz
aam
mov
push
push
jbe
lcall
xchg
and
mov
js,pt
mov
and
mov
addb
addl
fisubrl
inc
aaa
jb
popa
arpl
das
popf
test
dec
sub
push
pushl
xorl
sub
xor
rcl
or
test
and
add
aaa
inc
outsl
sbb
inc
ds
push
rclb
sti
jmp
push
mov
inc
sbb
in
idivb
addr16
pop
inc
and
aaa
and
call
push
mov
daa
add
mov
or
xchg
and
lods
daa
jge
inc
sub
mov
mov
lods
divl
iret
daa
loop
add
push
out
jo
or
pop
ret
inc
push
jno
andl
imul
insb
daa
pop
xchg
mov
sub
in
mov
cmp
cmp
add
repnz
pop
mov
pushf
inc
cmp
ja
jae
dec
or
or
push
add
mov
scas
push
lock
pop
cltd
daa
lahf
sub
outsb
in
lods
dec
roll
pop
int
sbb
pusha
addr16
xor
insb
push
sbb
or
lock
adc
cmp
in
push
mov
mov
aaa
dec
xor
or
xor
xor
loope
gs
push
and
dec
pop
pop
jae
sub
cmpsb
dec
sbb
jmp
js
or
push
push
inc
add
mov
and
icebp
cmpl
add
lods
mov
xchg
ja
mov
pop
mov
mov
xchg
add
ja
fistpl
or
cmpsl
stc
sub
out
insb
test
in
aas
js
inc
mov
pop
loope
xchg
dec
in
loop
lock
sbb
push
push
das
das
test
add
scas
mov
sub
or
pop
adcb
ds
adc
bswap
mov
push
das
add
loope
pop
dec
fcompl
xor
jo
adc
push
jp
add
dec
addr16
mov
fs
data16
loope
adc
cmp
or
dec
jns
mov
in
or
push
bound
aaa
cmp
xor
add
dec
and
and
or
aas
aaa
and
aam
xchg
sub
shll
and
andl
add
icebp
adc
push
dec
dec
gs
xchg
cmpsl
or
aas
dec
lock
out
inc
and
or
ficoms
pushf
stos
addl
das
pusha
adc
aas
les
test
cs
mov
int3
pusha
lock
adc
mov
mov
inc
add
insb
js
sbb
enter
push
sbb
rolb
decw
adc
cmp
ror
mov
cmp
lret
fstpl
push
mov
fstpt
mov
cmp
add
sub
sbb
jnp
mov
sub
ficoms
sbb
sbbb
and
mov
les
pusha
and
fcoms
int
lods
xchg
adc
pop
inc
adc
pushf
push
into
mov
and
enter
mov
adc
and
lcall
fisubl
adc
inc
lret
inc
loopne
sub
dec
push
addl
add
stos
xchg
xor
push
les
test
mov
sbb
push
jnp
and
and
psraw
out
mov
pop
inc
xor
ja
pop
pop
or
std
or
xchg
js
lds
and
subl
aaa
ds
lea
das
push
adc
xor
pop
shll
divl
xchg
repnz
xchg
sub
add
dec
pop
lods
mov
sbb
daa
repz
xchg
jo
das
adc
pop
iret
repz
sbb
push
bswap
repz
andl
imul
xchg
insb
pop
add
add
insl
ss
int
or
adc
sbb
and
sub
xor
inc
mov
sti
out
mov
mov
mov
ss
int
popa
xchg
sbb
sub
add
fldcw
xchg
pop
adc
insb
ss
and
add
add
push
dec
str
fldcw
add
inc
stc
das
incl
push
add
cwtl
add
out
pop
cmp
push
arpl
pop
pop
cs
and
jbe
lods
pop
adc
pushf
and
jb
aam
popf
iret
hlt
push
mov
lds
cmp
sub
cmpsb
xchg
mov
jb
jo
jp
push
movsb
and
imul
xor
xor
add
js
pop
and
cmp
aam
notl
or
adc
imul
add
aaa
push
add
jg
dec
lret
xor
xor
das
xor
inc
sbb
or
fbstp
cmp
xor
dec
pop
adc
sbb
pop
and
cmp
sub
push
sbb
pop
adc
xor
decl
aas
dec
or
pop
cmp
inc
inc
das
and
dec
aaa
sub
inc
inc
inc
or
push
xor
or
mov
xor
adc
sar
mov
pop
push
sub
push
cmp
xor
fcos
fstpt
push
mov
xor
pop
sub
xchg
mov
inc
sub
call
push
push
sbb
pop
sbb
and
or
push
add
sub
xor
push
push
outsb
jecxz
decl
inc
xor
sub
sbb
adc
das
adc
pop
adc
mov
adc
sbb
jb
xchg
adcb
adc
insb
dec
into
push
or
mov
pop
xor
pop
push
push
cmpsl
pop
mov
and
inc
push
cvtdq2ps
sbb
rcl
adc
pop
icebp
test
cs
dec
into
cmc
js
add
dec
es
out
out
movups
xor
outsl
arpl
push
sub
dec
and
sbb
push
dec
fstl
pop
lcall
ret
js
test
xchg
bound
les
inc
xor
push
test
in
les
inc
jb
adc
sub
data16
push
lahf
icebp
sub
push
enter
or
push
dec
inc
dec
push
dec
pop
add
outsl
mov
cmove
mov
inc
aaa
jno
sti
shlb
ret
add
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fdivr
filds
and
jge
push
je
mov
andb
fwait
rol
fwait
in
or
incl
popf
rorl
and
sub
sub
decl
test
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
call
push
arpl
push
sub
adc
or
cs
insl
sub
adc
or
or
pushl
leave
ret
sub
xchg
mov
data16
mov
call
cltd
cmp
call
test
push
push
shll
ja
daa
mov
mov
fcomip
lcall
sbb
dec
stos
fmuls
lret
rep
cs
arpl
dec
test
add
mov
mov
movsb
mull
jno
addr16
push
scas
addr16
ljmp
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
and
push
pop
xchg
or
push
push
daa
sub
out
clc
incl
jl
xor
jnp
ds
dec
pop
cmp
bound
pushl
test
cmpsb
outsb
sub
cmp
cmp
insb
dec
pop
jae
or
pushl
inc
and
push
inc
es
je
inc
or
sub
push
aaa
insl
xor
nop
pushl
inc
popa
jge
cmp
add
jns
jo
fists
jp
inc
cmp
sub
or
fistl
xor
and
inc
or
or
pop
and
inc
adc
or
fisttps
jl
or
cmp
xlat
lea
iret
aaa
pop
aaa
daa
aad
sahf
cmp
adc
cmp
cmp
mov
iret
sub
subps
pop
fidivrs
loope
scas
and
aaa
push
xor
pop
xor
xor
jne
jnp
xor
xor
mov
cmpsb
aaa
aaa
inc
push
inc
cs
pop
mov
fiadds
pop
cmovb
pop
push
push
jmp
ss
lahf
cmpsb
push
and
loop
scas
jle
add
xchg
cmp
clc
es
pop
cmp
faddl
enter
xor
jnp
dec
insb
xor
inc
mov
std
in
test
cmp
adc
ret
push
push
mov
pop
loop
dec
fldt
adc
arpl
xchg
rorl
dec
or
cmp
push
dec
cltd
popf
inc
arpl
mov
jg
xor
andb
in
fs
mov
int3
or
sub
add
addb
loopne
aad
pop
push
push
xor
sbbl
push
out
inc
cmpsl
enter
pop
mov
sub
push
cmp
xchg
jp
and
flds
mov
pop
push
sbb
mov
fadds
push
sub
orb
push
mov
daa
mov
ss
or
sbb
pop
cmp
scas
idivb
andb
mov
neg
pop
mov
add
jge
add
sbbb
out
sub
add
pop
jns
xchg
mov
in
add
popf
add
cmp
adc
loop
push
fisubl
push
xor
xorb
cs
push
jge
mov
je
fnstcw
fs
dec
adc
fs
subl
jno
sbb
inc
push
out
sub
add
enter
and
sub
push
inc
adc
lds
cmpsb
pop
adc
adc
pop
inc
adc
add
nop
mov
cmp
outsb
outsb
je
xor
js
dec
push
imul
cmp
xor
jmp
mov
imul
inc
aad
mov
sub
xor
insl
loop
inc
push
loop
push
and
pop
xchg
fimuls
outsl
insb
loop
popa
je
jecxz
andb
popf
insl
mov
adc
push
hlt
push
pop
or
clc
mov
adc
andnps
out
push
gs
sarb
daa
out
imul
push
pop
ss
jne
dec
aaa
aas
sub
cmp
xchg
fnstsw
aad
and
adc
or
loop
cmc
xorl
das
sbb
fsubrs
add
add
adc
cmp
xor
xchg
sbb
inc
jnp
dec
adc
stos
pop
ds
inc
sahf
sahf
mov
addr16
fidivs
ss
lds
dec
sbb
cmp
pop
mov
push
cmp
daa
and
repnz
cmovp
cmp
mov
cmp
fmuls
fs
dec
popa
dec
call
pop
push
outsb
ja
jb
pop
lock
les
mov
pop
inc
jne
dec
push
inc
mov
call
cmp
scas
and
sub
aad
fstpl
adc
inc
sti
test
and
test
sbb
fcomps
xchg
push
dec
push
push
pop
adc
push
pop
push
xchg
call
pop
and
sbb
daa
xchg
push
pop
bound
aas
aaa
fs
jo
pop
or
inc
xchg
dec
lcall
push
outsl
imul
cmp
inc
inc
pop
pop
sub
mov
les
cmp
out
je
std
or
push
and
pop
subb
adc
arpl
and
test
and
ss
push
xchg
rcl
dec
or
sbb
sbbb
test
sub
add
popf
push
dec
mov
cmp
fmull
popw
aaa
or
push
pop
mov
push
addr16
and
sahf
pop
and
lret
loope
jbe
dec
and
pop
xor
jg
sbb
ja
jmp
and
or
scas
pop
daa
or
pop
daa
and
loopne
into
lds
sub
imul
xchg
dec
or
out
sub
out
sub
inc
ljmp
pop
popa
xor
ljmp
adc
mov
jp
pop
aas
inc
cmp
in
sbb
pop
or
add
dec
fsubr
imul
pop
jnp
and
pop
repz
push
cs
inc
dec
or
inc
lods
shll
and
sub
std
xor
scas
push
add
cwtl
bound
insl
dec
push
js
roll
dec
dec
adc
sub
loop
add
sub
inc
dec
pusha
or
insl
pmaxsw
and
pop
add
cmp
xor
mov
adc
mov
lock
gs
stos
push
push
sub
mov
push
add
dec
and
push
adc
jae
push
popa
ljmp
outsl
and
xor
xchg
mov
imul
sbb
ss
scas
pop
mov
mov
imul
push
inc
pop
push
dec
inc
dec
inc
push
pop
mov
jbe
xchg
cmp
gs
leave
add
inc
je
fwait
pop
addb
dec
jb
rcll
mov
popa
mov
scas
or
jb
xor
add
loop
cmpsl
add
mov
jle
inc
add
ds
and
push
push
js
sub
mov
sbbl
or
mov
pop
ret
jb
push
adc
mov
inc
add
adcl
mov
or
lea
nopl
push
jbe
sbb
push
iret
fsubs
add
ds
cmp
xor
adc
out
pushf
roll
cs
add
fmulp
dec
fdivs
pop
cmp
dec
jl
outsb
jbe
icebp
push
clc
sbb
push
lea
pop
sub
pop
or
sbbl
sub
pusha
cmp
xchg
sub
std
out
adc
imul
push
jae
add
cs
dec
cmc
cmpsl
inc
mov
dec
add
das
mov
inc
cmp
rol
cmpsb
lock
and
mov
push
fisttpll
cmp
xor
jo
sbb
and
adc
dec
cmp
cmc
sbb
mov
or
push
shl
adc
pop
cmpsl
mov
jb
js
pop
or
mov
inc
sbb
dec
adc
stos
or
fmull
dec
dec
insb
inc
adc
outsl
dec
clc
add
cltd
adc
xlat
pop
rcrb
test
shlb
outsl
sub
pop
sbb
dec
sub
xlat
outsl
in
cmp
or
jo
aad
fidivs
dec
arpl
push
lods
sbb
push
push
das
xor
xor
dec
and
outsb
in
mov
or
adc
sbb
js
mov
inc
mov
push
clc
sub
push
in
and
inc
outsw
insl
pop
xor
dec
mov
clc
in
and
xor
push
mov
dec
dec
adc
mov
outsb
jle
pusha
cmp
arpl
gs
ljmp
outsl
imul
les
mov
lods
pop
imul
out
aas
les
cwtl
push
in
and
in
loopne
and
or
dec
dec
or
cmpsb
orb
jecxz
dec
xchg
dec
inc
xadd
inc
into
out
insb
and
inc
xchg
inc
cmovo
cs
adc
sbb
xor
jo
maxps
add
dec
push
push
lods
inc
inc
jo
loopne
popl
sub
jmp
xchg
add
dec
repnz
test
inc
pop
popa
outsb
jnp
cmp
aas
add
ficompl
addr16
and
jnp
cmp
push
enter
sub
and
outsl
inc
in
inc
lock
inc
aaa
adc
cmp
outsl
mov
jg
das
nop
sbb
negb
push
pop
daa
aas
out
mov
out
dec
outsl
pusha
sbb
mov
daa
dec
inc
inc
and
xor
and
sub
and
testb
push
shlb
inc
push
int
stc
sahf
xor
clc
dec
mov
push
nop
negl
int3
and
or
cmpsl
stc
cmp
in
dec
cwtl
jl
dec
test
jns
push
shlb
iret
sti
cmp
clc
dec
ds
dec
dec
iret
repz
push
xor
fsubp
imul
call
and
sbb
mov
add
xchg
int3
icebp
mov
in
adc
add
jns
inc
and
sbb
scas
in
pop
fmull
add
sbb
out
iret
mov
cld
push
add
cmp
mov
inc
mov
pop
mov
xchg
stos
sbb
in
xchg
or
push
jg
xchg
sub
xchg
jns
dec
outsl
pop
pop
inc
adcb
repnz
dec
sub
filds
push
movsb
dec
dec
outsl
and
filds
pop
jb
in
clc
orl
in
xchg
pop
jb
cmp
outsl
and
shlb
mov
xchg
xchg
sbb
add
or
out
inc
mov
add
jb
xor
dec
test
repnz
dec
xor
dec
pop
xchg
push
insb
dec
pop
scas
add
push
lds
outsl
and
mov
add
xor
cs
dec
dec
and
sub
pop
xor
and
aam
testb
pop
xchg
inc
dec
loopne
sbb
jp
add
sbb
out
dec
enter
int3
push
pusha
pop
in
push
lock
and
push
lahf
mov
and
adc
xchg
and
add
dec
in
inc
out
dec
ja
and
xchg
sub
sbb
out
ret
xchg
jl
add
dec
outsl
add
insb
and
loope
outsb
outsl
and
es
or
and
xchg
push
pusha
dec
pop
scas
add
rorl
outsl
sbb
nop
cmpsl
or
shlb
je
adc
and
push
xchg
xlat
or
aaa
push
lock
or
dec
sbb
dec
dec
xchg
loopne
pop
push
fs
add
les
es
mov
pop
and
lahf
mov
pop
das
push
aam
jle
push
rcr
aaa
ret
pushf
push
jg
push
sub
mov
dec
add
sub
xchg
sbb
ret
xchg
mov
faddp
sbb
jl
ja
push
idivl
cmpl
or
outsl
push
push
outsl
mov
cmp
jg
jne
insl
divps
push
xchg
daa
testl
push
cld
push
pop
insb
push
push
ds
aam
mov
push
add
push
jbe
int
cmovo
or
jp
jae
or
loopne
in
test
push
lahf
pop
insl
or
xlat
or
popf
and
and
add
mov
addr16
sarb
push
xchg
or
cmp
jno
loopne
lahf
insb
and
movsb
push
addb
cltd
mov
inc
testl
sub
jo
xchg
cmp
pop
push
scas
push
pop
mov
push
jl
aaa
subl
dec
xchg
test
addr16
bound
shll
in
addr16
or
shlb
or
cmp
and
add
lods
pop
jl
xor
mov
leave
xchg
lods
mov
jbe
hlt
mov
ja
enter
jg
push
addr16
add
jae
pop
sbb
sub
xor
outsb
rorb
dec
sub
inc
sub
push
mov
mov
push
in
leave
add
cmp
and
push
pop
test
jecxz
push
ss
xor
adc
and
add
in
andl
cmpsb
push
add
xchg
mov
popa
imul
popa
roll
cltd
insl
daa
and
and
daa
or
add
mov
push
lods
pop
pusha
push
pop
int3
pop
jnp
out
push
mov
inc
and
ss
sbb
outsl
cld
dec
or
jl
or
push
cmpsl
cmpsl
in
movsb
or
and
enter
in
push
popa
inc
lcall
nop
fwait
mov
add
or
dec
cmpsb
or
insb
pop
enter
js
add
push
add
add
push
repnz
shlb
call
rcrl
push
xor
push
lock
sbb
out
mov
leave
call
pop
sbb
push
push
mov
push
scas
in
out
daa
or
push
and
xchg
cmp
jl
dec
das
sub
sub
out
mov
pop
cmp
daa
add
push
dec
lcall
pop
cmp
out
out
push
and
inc
fsubl
add
adc
mov
cmp
sub
mov
ja
outsl
jl
xchg
mov
je
test
cmp
data16
jae
lods
inc
pop
das
sub
in
fcomp
call
xchg
daa
out
cmp
mov
jl
ret
dec
pop
pop
pop
push
fs
jle
and
xchg
inc
xchg
dec
fwait
int
sbb
aam
xor
add
inc
mov
xor
loopne
push
inc
jl
sahf
out
lahf
ret
adc
cmp
outsl
pushf
push
mov
loop
push
push
mov
add
lahf
out
es
push
pop
push
imul
in
cmp
sahf
out
ret
mull
pop
inc
out
cmp
ja
mov
repz
inc
mov
lcall
aaa
pop
addr16
out
xchg
ret
sahf
push
pop
jns
jns
js
lret
sub
push
cwtl
repz
out
fisubrs
bound
cmp
ds
mov
push
mov
out
fs
test
loope
gs
leave
out
sahf
out
data16
inc
jbe
out
xor
les
int
es
pop
xchg
shlb
push
xchg
cs
out
imul
test
icebp
es
fxch
out
sbb
test
outsl
dec
lahf
out
cmp
loope
jo
add
cmpsl
stc
xor
sub
js
ds
repz
push
jae
lret
add
out
cmp
push
jne
jns
out
roll
inc
insb
movsl
repz
out
adc
xchg
stc
cmp
out
js
jns
loop
jp
xor
cmpsl
sar
jnp
clc
sarl
cmp
cmp
jg
stc
cmp
lods
enter
add
imul
xorb
dec
xor
into
repz
fstps
lahf
ja
test
test
shlb
out
xor
enter
adc
push
cwtl
shll
mov
repz
iret
mov
or
cmpsl
stc
cmp
outsl
mov
iret
sarl
roll
lea
mov
mov
mov
lahf
cmpsl
fldcw
xchg
push
fcoml
xchg
jb
lcall
pop
nop
stc
cmp
repz
repz
cmpsl
cmp
add
ds
mov
xchg
xchg
aas
lcall
out
fwait
rolb
push
sahf
test
mov
shl
mov
lahf
out
movsl
clc
sbb
repz
cmpsl
mov
adc
outsl
mov
fstpl
test
stc
cmp
xor
ja
dec
stos
nop
iret
repz
rcrl
lods
push
jl
adc
jns
lods
pop
test
ss
sahf
mov
push
adc
insb
popa
mov
mov
fsubrs
lahf
ret
movsb
mov
mov
add
nopl
stc
inc
aas
rcl
xchg
dec
enter
int3
push
push
mov
ss
ds
sti
mov
jge
inc
xchg
or
filds
inc
testl
adcl
in
push
cmp
inc
mov
dec
mov
mov
out
fisubl
pop
imul
cmp
outsl
das
inc
das
push
and
mov
int3
jg
push
jb
mov
pop
aas
jo
inc
pop
jg
leave
mov
dec
xor
push
push
fwait
sbb
jns
or
xchg
adc
fmuls
xchg
aas
int
mov
cmp
jnp
jl
popf
mov
fwait
xchg
dec
insb
xor
mov
in
dec
add
mov
iret
adc
push
sub
mov
sub
in
lds
mov
pushl
divl
inc
jnp
popa
push
idivl
in
dec
in
pop
sbb
int3
loop
in
cmp
scas
iret
jne
and
fimull
inc
mov
adc
bound
daa
ja
pop
insb
sbb
leave
in
or
inc
adcb
push
xor
xchg
lods
sbb
idivl
data16
push
mov
push
shl
pop
aam
scas
dec
push
leave
pop
dec
incl
addr16
movsb
in
or
sub
aas
in
add
repnz
in
push
push
xchg
sbb
cmp
fnsave
test
inc
xchg
push
or
aaa
and
repz
add
xchg
iret
lods
xchg
call
add
push
pop
fs
je
cs
dec
insb
xchg
push
add
inc
repnz
fmul
and
cmpsl
mov
or
daa
sub
and
jmp
pop
test
cmp
fcoms
push
adc
scas
cmpsb
or
pop
dec
push
mov
fnstsw
mov
cs
xchg
pop
movsb
xchg
mov
jb
inc
iret
mov
xchg
andb
push
inc
push
cmc
inc
outsl
add
leave
xor
or
add
sbb
ljmp
lock
ds
scas
insb
mov
leave
stos
mov
imul
pop
lock
inc
inc
mov
sub
push
inc
push
dec
repz
repz
add
bound
insl
push
js
orl
lahf
cmp
mov
or
insb
xchg
pushf
xchg
adc
mov
enter
insb
negl
adc
inc
add
and
mov
xor
push
mov
pop
push
mov
pop
pushf
loop
fwait
nop
push
inc
pop
pop
dec
pop
repnz
push
pop
pop
xchg
leave
leave
leave
inc
test
ficomps
mov
sarl
or
jb
jb
out
idivb
pop
jb
push
and
inc
mov
pop
xor
pop
inc
inc
xor
xchg
pop
dec
pop
test
jbe
into
insb
pcmpeqb
jns
mov
mov
pop
cld
xchg
iret
in
and
das
xchg
dec
es
adc
or
sbb
sub
sbb
mov
inc
xor
gs
cld
in
jl
daa
sbb
inc
cmp
nop
mov
jo
xchg
adc
push
nop
inc
enter
cwtl
mov
jns
pop
faddp
loopne
leave
dec
dec
jne
pop
pop
sbb
jno
in
adc
loope
popf
xchg
pop
addr16
outsl
ja
xchg
cmp
repnz
insb
jno
push
inc
loopne
pushf
in
jno
jno
mov
jg
add
mov
fcmovbe
push
sub
and
cmp
pop
test
mov
aaa
leave
jo
pop
push
iret
cmpb
in
xchg
push
pop
es
cs
jb
and
ss
ds
mov
inc
imul
mov
xchg
add
cmp
nop
jl
push
inc
pop
jae
jae
jns
mov
fcomps
jns
jecxz
out
pop
stc
pop
add
ja
jns
minps
pop
and
out
sahf
or
or
push
jns
out
or
or
sahf
out
adc
adc
jns
out
adc
adc
sahf
out
pop
jecxz
icebp
in
inc
sbbl
pop
fistps
mov
mov
pop
pushf
je
leave
inc
jb
push
enter
inc
jb
les
out
mov
faddl
pop
inc
das
mov
pushl
inc
out
pop
add
pop
pop
and
leave
add
jne
push
jno
jns
jne
pop
jg
pop
jl
ljmp
pop
adc
data16
ja
out
lea
inc
out
push
loopne
xchg
push
adc
lcall
leave
mov
fs
push
test
lahf
mov
outsb
mov
in
repnz
add
sub
mov
and
fmuls
cld
pop
fs
scas
push
in
in
je
je
std
push
nop
xchg
dec
cmpsb
mov
or
xchg
fwait
add
shll
cmp
shlb
mov
mov
inc
jns
out
push
add
add
and
in
sar
popa
mov
fs
mov
rolb
icebp
xchg
nop
in
js
in
xchg
push
jmp
jns
ret
and
jns
popa
pop
jns
push
mov
lods
fadds
add
in
cmp
cmp
mov
out
bound
pop
enter
push
dec
sarl
add
pop
fdivs
xchg
and
jg
fs
push
push
js
dec
xlat
or
push
mov
in
mov
cmp
arpl
xor
pop
arpl
and
adcb
push
js
daa
cmp
jnp
jnp
mov
pop
int
jl
jnp
cmp
push
push
fs
leave
mov
leave
inc
inc
fs
orb
pop
jne
xchg
jge
lods
pop
mov
daa
test
loopne
in
mov
jge
stc
orb
sbb
pop
fs
jge
mov
pushf
and
mov
jns
adc
gs
cs
out
jge
add
mov
out
sbb
out
inc
inc
push
rorb
repnz
cmp
mov
jle
adc
adc
jle
popf
in
enter
shrb
or
sub
xchg
pop
fwait
xchg
push
push
mov
scas
fsubs
xlat
mov
repnz
sahf
fsubrl
out
das
out
data16
repnz
popw
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
addr16
repnz
addr16
addr16
pop
dec
dec
dec
mov
or
dec
dec
dec
or
or
dec
dec
dec
dec
pop
push
add
dec
add
add
and
dec
mull
outsb
mov
in
xchg
addr16
xchg
cmp
fistl
call
daa
dec
add
dec
push
je
push
jbe
ja
mov
dec
lea
fmull
adc
sbb
cmpsb
fcmovnbe
jecxz
xchg
jmp
iret
in
insl
in
push
ud2
push
cmp
cmp
adc
push
or
or
imul
les
iret
leave
repz
jle
lock
sub
iret
in
xor
outsl
imul
fnsave
ficomps
in
jbe
out
testb
push
push
jae
fwait
or
decb
xchg
mov
dec
push
push
movd
add
loope
dec
dec
xor
pushl
mov
sbb
pop
jnp
aas
movsl
cwtl
xor
rolb
pop
or
imul
pop
or
xrelease
ds
daa
and
and
dec
das
dec
push
push
repz
mov
popa
push
add
repz
ja
jg
xchg
das
loopne
push
popf
push
test
in
nop
out
and
in
in
out
add
pop
adc
imul
loopne
pop
push
imul
push
pop
pop
popa
imul
jl
or
test
cwtl
mov
outsb
daa
daa
iret
mov
pushf
sbb
repnz
insb
or
xchg
and
push
insb
sub
cmp
repz
pop
push
or
cmp
repz
or
jbe
repz
or
cs
addr16
insb
psubb
rcrl
fmuls
addr16
add
jne
das
insl
insl
outsl
lock
pushf
enter
jns
mov
subl
pop
cmp
iret
jae
push
test
jbe
mov
inc
xlat
call
mov
add
push
inc
outsb
in
in
decl
push
outsb
pop
outsb
xchg
mov
mov
add
rcr
fcmovne
leave
loopne
lock
clc
outsb
outsl
xchg
adc
outsl
call
outsl
xor
outsl
das
pushf
cmp
inc
subb
nop
outsl
pop
leave
jae
cwtl
xchg
sarb
daa
daa
lret
ja
decb
xchg
pushf
pop
and
jo
xor
push
xchg
dec
outsb
fmul
xchg
jo
jo
push
cmpsl
mov
out
lods
mov
push
daa
mov
xchg
stos
cmp
daa
mov
inc
jo
jo
inc
mov
jo
jo
jo
push
leave
cmpsb
jo
or
mov
jno
sub
jno
jno
and
dec
jno
jno
jno
jb
enter
jno
jno
jno
adc
jno
or
mov
cmp
cltd
mov
cmp
cmp
lock
push
jb
repnz
jb
mov
iret
cmp
data16
out
xchg
cmp
jo
add
xchg
aam
insb
mov
mov
leave
inc
jmp
fisttps
leave
jmp
mov
push
jae
jae
lock
pop
outsl
add
jae
jae
inc
das
xchg
jae
lods
pop
insl
adc
jae
fmull
or
repz
mov
stc
sbb
aam
mov
jno
repnz
cmpsb
push
ja
aaa
js
iret
mov
mov
ja
fwait
push
fmuls
jb
cmpsb
js
jne
or
add
lret
enter
adc
fucom
jns
and
sub
or
ud2
ljmp
dec
jne
xchg
insb
jle
prefetcht0
shrl
ja
mov
jbe
cs
addr16
dec
cs
lock
mov
jg
xchg
dec
into
pop
xor
cmp
in
dec
cs
fs
pushf
xchg
xchg
xchg
mov
pop
in
shlb
enter
cmp
data16
add
nop
cmp
add
ja
xchg
out
shll
push
add
ja
ja
dec
dec
jp
push
add
ja
xchg
cmp
mov
out
mov
mov
mov
in
in
stos
bswap
mov
stc
call
jecxz
jmp
mov
mov
xchg
jb
enter
push
js
js
js
leave
xor
aas
js
add
daa
daa
push
js
jp
mov
js
js
js
js
mov
stos
js
js
js
mov
lret
pop
setae
or
xchg
xchg
xchg
xchg
pop
push
add
xchg
add
sbb
sbb
jns
out
sbb
sbb
dec
repz
sbb
pop
or
pushf
cmp
and
sbb
cmp
jae
and
and
ret
es
cmp
enter
cs
data16
sub
ja
xchg
xchg
cltd
pop
in
jmp
mov
push
lret
fsubp
in
jns
pop
fcmovb
mov
cmp
pusha
std
jns
mov
jp
jp
nopl
jp
push
int3
fcmovne
leave
enter
pusha
push
popf
jo
push
scas
js
push
fmulp
out
pop
push
mov
or
or
cmp
prefetch
push
mov
adc
xchg
loopne
mov
mov
les
es
and
jnp
jnp
inc
inc
inc
jnp
jnp
aad
sbb
mov
mov
nop
iret
das
test
jo
dec
outsb
iret
mov
mov
inc
pop
or
gs
mov
or
rclb
jg
test
jl
cltd
push
jl
ja
daa
iret
cmp
push
add
jbe
cmp
mov
mov
dec
icebp
in
jmp
add
mov
enter
jge
jge
pop
loopne
ret
sbb
jge
sbb
sbb
jge
inc
repnz
int3
je
fwait
cmp
xchg
inc
cmp
iret
test
popf
jmp
pop
dec
lret
add
sub
jns
in
scas
cltd
call
xor
pop
add
cmp
and
inc
cwtl
jecxz
and
sub
cwtl
or
adc
lods
mov
jle
jle
sub
jb
mov
inc
dec
repnz
jae
or
jns
out
insb
pop
je
jl
jns
out
test
cmc
in
pushf
jle
adc
cwtl
xchg
adc
mov
xchg
add
xchg
push
aaa
into
clc
aas
sarl
enter
lcall
nop
xchg
cltd
cltd
sub
xor
repz
cmp
inc
add
dec
jle
push
das
push
jg
cltd
fs
pop
jg
out
in
adcl
in
mov
push
add
cmp
lcall
fcoml
pop
sub
add
outsl
pushw
add
jno
dec
imul
aas
nopl
aad
ficoms
ficompl
dec
lcall
fstps
fwait
fwait
push
into
pop
orb
btsl
call
mov
das
add
jb
adcl
cmpl
inc
adcl
pushf
dec
subl
je
pop
test
in
es
add
sahf
ja
loopne
pop
lods
pop
mov
or
les
test
aas
in
in
cmpl
dec
pushf
jb
orb
orb
cltd
pop
inc
addb
dec
fimull
popf
mov
jnp
adc
ja
push
pushl
jns
pop
sahf
iret
add
daa
leave
xchg
adcb
addl
and
push
mov
and
scas
cld
sub
xchg
scas
scas
pop
adcl
cmp
jns
pusha
incl
in
les
xchg
add
js
mov
inc
enter
jo
inc
test
scas
fcomps
subl
fnstsw
xorl
cmovs
adc
push
jns
lahf
fs
ja
mov
test
test
test
mov
cmp
rep
or
jb
rorl
out
int
fadds
daa
rcrb
adc
mov
ret
sbb
das
addb
test
test
mov
mov
arpl
nop
scas
fistpll
push
loopne
out
sub
or
cmp
xchg
daa
pop
inc
das
testb
jb
enter
xchg
xchg
pop
xchg
and
push
pop
xor
fcmovne
inc
xchg
push
or
stc
or
xorl
mov
xchg
adc
das
addr16
xor
and
mov
xchg
add
inc
fs
mov
pop
ja
add
dec
push
pop
dec
dec
cmp
push
add
push
add
cmp
orb
lcall
mov
out
mov
or
xchg
xor
cmp
pop
push
aas
push
inc
repnz
leave
leave
leave
leave
jo
addb
mov
leave
inc
repnz
mov
mov
lret
out
xchg
pop
mov
push
add
add
pop
mov
lods
cmpsl
in
mov
dec
push
dec
lea
outsl
push
fisubs
pop
mov
mov
xchg
cmp
mov
xchg
pop
comiss
mov
sahf
decb
pop
and
mov
sbb
inc
mov
decl
mov
into
leave
inc
fwait
cmpsb
addr16
out
movq
jb
cmp
shll
lea
push
cmpsl
cld
inc
repnz
sahf
add
xchg
add
in
mov
mov
mov
vmwrite
dec
add
fucom
pop
lar
mulb
mov
cmp
call
xchg
xchg
lcall
jae
mov
and
fisubrs
call
int3
mov
int3
pop
and
addr16
ss
xor
or
jp
mov
fcmovne
inc
mov
add
mov
cmp
mov
lock
daa
js
push
lea
stc
call
push
mov
mov
mov
out
movsb
add
mov
mov
mov
aas
xor
call
cmpsl
aas
clc
add
or
add
xor
cmp
add
das
das
das
das
and
cmp
inc
das
dec
dec
sahf
out
ficoms
cs
adc
pusha
jecxz
in
adc
mov
nop
insb
ds
sbb
test
jb
sbb
stos
stos
mov
inc
mov
out
xchg
inc
cmp
outsl
pop
fs
js
add
mov
pop
xor
cmp
inc
dec
push
or
out
jns
pop
pop
push
pusha
iret
repz
adc
adc
mov
push
orl
pop
mov
add
mov
out
repz
nop
adc
enter
fists
in
sub
lods
jo
jp
fcmovne
enter
iret
mov
sahf
out
mov
iret
mov
lret
rorb
push
add
ds
mov
ficoml
loop
ljmp
cli
adc
xchg
or
in
sbb
and
int
nop
lods
xchg
xchg
jl
fisttpll
pop
dec
ja
test
jo
xchg
pop
adcb
xchg
xchg
xchg
lcall
mov
mov
or
or
or
xchg
outsb
repnz
or
mov
inc
idiv
jl
mov
xchg
setb
fldenv
xchg
cmp
inc
xchg
dec
xchg
push
das
pop
repnz
jne
pop
pop
or
bound
jp
cmp
pop
lret
orl
scas
xorl
inc
xchg
or
or
xchg
into
dec
cmp
test
es
repnz
xor
nop
xchg
scas
out
pushf
dec
adc
ror
mov
add
cmp
xchg
or
fsubrl
sbb
and
jb
inc
add
iret
cmp
ror
repz
loope
jmp
repz
stc
call
or
add
pushf
cmp
or
and
xchg
inc
bnd
out
adc
fs
dec
xchg
pop
push
xorb
outsl
xchg
pushl
rcll
xchg
push
pushf
loop
jbe
iret
mov
in
inc
mov
pop
xchg
push
xchg
mov
enter
iret
xchg
xchg
repnz
push
add
push
outsl
mov
insl
in
xchg
mov
xchg
out
inc
repnz
xor
sahf
fcmovne
lock
addr16
leave
dec
mov
mov
outsb
daa
adc
punpcklbw
fsubl
popf
es
xchg
add
inc
mov
and
mov
xchg
mov
fists
out
push
add
add
inc
iret
leave
repz
pop
pop
push
adc
jae
jl
pop
xchg
pop
jb
loopne
iret
or
scas
adcb
xchg
scas
call
add
ror
leave
leave
enter
pop
mov
movlps
bndstx
outsb
mov
pop
ucomiss
push
dec
dec
dec
dec
je
mov
and
dec
fprem
sbb
inc
jns
daa
daa
mov
nop
sbb
dec
sahf
out
sbb
mov
lock
push
and
lcall
push
push
xchg
comiss
lcall
sub
mov
push
add
inc
repnz
mov
sbb
mov
push
outsb
mov
das
test
das
fcoml
jns
setnp
fwait
lea
sub
movsl
sbb
xchg
mov
cltd
or
xchg
mov
mov
mov
cmp
sbb
pushf
in
cmc
std
iret
lret
and
add
cmp
ss
ds
cmp
repz
or
push
out
in
iret
or
mov
push
push
gs
cmp
ucomiss
das
xchg
int
push
mov
pushf
mov
xchg
inc
pushf
pushf
pushf
pushf
fists
mov
xchg
pushf
repz
pushf
push
popf
push
xchg
xchg
xchg
xchg
popf
push
popf
and
xchg
xchg
xchg
popf
aas
popf
inc
popf
dec
popf
push
xchg
xchg
xchg
xchg
popf
pop
popf
addr16
outsl
popf
jp
aas
mov
nop
popf
fwait
xchg
xchg
xchg
xchg
popf
cmpsb
popf
mov
mov
out
push
pop
leave
and
and
jns
out
and
and
dec
repz
and
and
jns
out
daa
push
adc
dec
sahf
out
sub
cvttps2pi
pop
iret
leave
cmp
push
sahf
fwait
stos
cmp
xor
dec
jno
fcoml
sbb
pop
mov
leave
repz
stos
jecxz
inc
mov
lea
jb
sahf
fstpl
xchg
outsb
mov
add
orl
mov
jmp
lahf
mov
setg
xor
lahf
jns
mov
dec
inc
sahf
push
mov
jns
dec
dec
push
minps
repz
sahf
adc
dec
adc
xchg
xchg
fstpt
test
xchg
mov
push
daa
daa
daa
iret
add
and
xor
cmp
and
mov
xchg
xchg
jns
xchg
out
mov
sub
enter
jecxz
add
push
sub
daa
das
getsec
push
das
xchg
out
jns
inc
xor
inc
cmp
push
maxps
mov
mov
add
in
mov
mov
inc
mov
in
mov
mov
mov
rolb
in
mov
mov
xchg
ja
leave
leave
inc
repnz
js
loope
mov
movsb
push
add
xor
out
cmp
inc
add
cmp
push
out
es
mov
repz
fmull
pop
stos
mov
leave
ret
into
adc
in
iret
leave
repz
cli
push
add
inc
adc
sbb
sbb
sbb
sbb
cmp
xchg
out
jns
push
pop
pop
add
sahf
push
in
or
fbld
movsl
xchg
int
loope
movsl
das
sub
movsl
adc
cmp
jns
adc
mov
push
add
cs
iret
jae
pop
pop
push
pusha
pop
jp
ja
push
or
repz
nop
cmp
repz
push
adc
ja
test
push
adc
repz
adc
lar
ficoms
pushf
out
fmuls
pop
add
inc
sbb
dec
rcrb
mov
pop
rolb
aas
cmp
mov
call
push
add
bsf
xor
in
cmpsl
nop
rcrb
sub
xchg
jbe
and
mov
jbe
leave
in
in
mov
mov
lahf
xchg
leave
add
cmp
popf
hlt
paddb
or
mov
pushf
das
addr16
paddusw
test
dec
mov
xorps
test
daa
pop
leave
jae
call
leave
add
ret
dec
es
inc
repnz
xchg
fstps
mov
or
test
fs
xor
inc
push
mov
es
mov
outsw
outsb
pcmpeqd
add
in
dec
xchg
xchg
cmp
sahf
push
sahf
cmpsb
test
leave
insl
and
xlat
rcr
sahf
fcmovne
leave
loope
icebp
cmpsl
push
mov
adc
sbb
and
insl
pushf
xchg
sub
xchg
leave
sub
xchg
pop
repnz
cmp
add
push
cmp
leave
inc
xchg
lcall
stos
mov
mov
xchg
ret
pop
shrb
push
adc
fldt
xchg
stos
stos
fists
sahf
sbb
data16
inc
stos
outsl
or
aaa
xchg
push
lds
jbe
inc
sbb
stos
pop
xor
xchg
dec
cs
out
mov
dec
mov
cs
fsubr
testb
mov
lods
movhps
and
idivl
enter
inc
lods
ja
js
jbe
xchg
insb
je
add
cs
mov
lahf
cmpsl
jns
pop
fcompl
scas
ja
pop
mov
in
iret
das
or
popf
in
mov
lods
or
mov
outsl
jb
mov
dec
push
lods
cltd
push
pop
lods
xchg
out
sbb
dec
dec
cs
out
pop
call
pop
syscall
outsb
pop
pop
rclb
sbb
pop
pop
pop
xor
push
scas
das
mov
push
jne
pmulhw
in
subb
scas
in
in
lods
scas
mov
ret
scas
in
in
fsubrs
stc
scas
frstpm(287
in
add
imul
scas
and
je
sbb
cmp
cmp
sbb
pop
push
out
cmp
adc
in
sahf
sub
sub
int
lcall
mov
jb
jge
mov
mov
repz
cmp
cmp
repz
lret
ds
repz
jmp
imul
jns
iret
inc
add
pop
cmp
repz
and
sub
repnz
dec
popf
cmp
jmp
dec
cs
dec
outsl
jns
out
dec
test
cmp
out
fwait
push
cmpsb
mov
jae
jb
mov
jmp
mulps
jae
repnz
or
inc
ret
mov
or
xor
mov
cmp
xor
xchg
sahf
fcmovne
cwtl
mov
dec
and
popf
cmp
in
mov
push
add
sarb
sahf
out
push
enter
pmulhuw
ja
cs
adc
ret
in
clc
mov
push
push
sub
push
lock
fidivs
mov
lret
fists
mov
out
outsb
xchg
mov
js
or
dec
sahf
add
cwtl
push
or
xchg
pop
jp
pushf
int3
mov
dec
ja
daa
lods
dec
sbb
sbb
mov
mov
sahf
xchg
pop
sbb
pop
dec
dec
dec
sbb
push
pop
movsb
pop
dec
mov
stc
add
imul
pop
and
jns
mov
int3
pusha
movsb
mov
pushf
mov
push
add
mov
iret
daa
ljmp
jecxz
xchg
xchg
pop
push
repz
push
and
enter
mov
and
js
mov
mov
cmp
push
add
mov
jns
out
pshufw
or
jns
out
or
leave
in
cmpsl
pop
mov
enter
leave
rcr
adc
pslld
cmp
or
adc
sub
out
sbb
sbb
cmp
fucom
dec
nopl
push
fmulp
repz
bound
insl
js
and
cmp
mov
cltd
movsb
outsl
mov
push
daa
mov
adc
sub
sahf
out
mov
mov
add
add
mov
mov
cmpsl
jecxz
push
dec
mov
pop
mov
fmul
cmp
cltd
push
nop
orb
mov
repz
pop
jmp
syscall
or
enter
mov
or
mov
adc
adc
adc
dec
adc
push
push
bound
js
iret
repz
sbbl
leave
repz
push
movsb
xchg
out
mov
mov
lds
and
lret
out
icebp
mov
iret
sarl
push
sub
pop
mov
into
repz
add
xchg
cmpsb
stc
stos
call
inc
add
daa
sub
ss
shrl
inc
rcl
mov
push
cmp
mov
pop
xor
add
das
mov
out
adc
scas
or
mov
in
hlt
push
idivl
outsl
mov
adc
clc
rcll
aaa
jb
enter
mov
out
jns
add
add
jns
pop
mov
out
rorb
pop
ret
sahf
or
into
push
pmaxub
mov
mov
and
mov
test
sbb
rcr
cld
adcb
mov
xchg
cs
add
js
mov
out
or
leave
push
repnz
pushf
loope
testb
mov
dec
sahf
out
add
add
sub
or
cmp
mov
pop
mov
fs
outsl
dec
sysret
cmp
daa
iret
adc
nop
push
jns
iret
repz
pop
cmpsb
mov
sbb
in
in
lret
sbb
sahf
cmp
repz
mov
scas
femms
and
and
pop
xor
cs
jns
push
adc
repz
sahf
out
sub
scas
sub
cmp
mov
addr16
daa
add
mov
fs
mov
cmp
pop
clts
mov
pop
outsb
daa
iret
jae
or
cs
repz
pushf
fcompl
ds
dec
bswap
repz
push
adc
and
mov
jbe
jle
mov
dec
scas
jle
repz
xchg
sbb
jmp
mov
repz
and
and
iret
leave
repz
fisubs
out
es
idiv
mov
out
fimuls
push
and
sub
daa
iret
repz
cs
jbe
cmp
inc
dec
orps
mov
xor
outsb
pcmpeqd
jle
cmp
out
mov
scas
leave
mov
mov
aad
xchg
push
adc
cmpl
es
jnp
mov
in
in
push
inc
and
lret
dec
inc
mov
inc
jmp
xor
push
mov
mov
dec
mov
jl
outsl
inc
bound
ljmp
add
lcall
mov
inc
inc
hlt
fadds
ftst
fldl
push
inc
xlat
mov
push
add
lcall
push
sub
inc
cs
inc
push
xor
sbb
inc
aas
pop
stos
xor
jbe
inc
or
inc
aaa
pop
ret
fadd
lahf
aaa
push
cmp
jns
add
call
fdiv
cmp
repz
ror
rcrb
mov
jns
out
test
jns
out
insb
push
jns
pop
push
dec
inc
cmp
repz
adc
add
cmpsl
stc
hlt
xlat
lock
loopne
jno
out
or
jo
out
cmp
pop
pop
push
push
add
sahf
out
outsb
sbb
out
or
or
or
xchg
fmull
aaa
or
in
jbe
scas
adc
adc
adc
in
shrb
and
mov
in
push
addr16
das
push
xorps
insb
das
insl
push
and
fmull
sbb
push
pop
andb
pushf
fsubrl
cmpb
test
xchg
jbe
repnz
sahf
mov
loopne
cmpsl
mov
into
aas
xlat
sub
imul
and
xor
sbb
add
adc
push
adc
mov
and
loop
xchg
add
fisttpl
mov
and
adc
test
sahf
jl
pop
testb
add
cmpsb
lret
pop
movsl
sbbl
fildll
mov
xchg
or
leave
inc
mov
inc
dec
and
mov
in
sbb
in
call
xchg
jl
std
adc
push
ficompl
mov
xor
cmp
loopne
jb
jle
in
pop
xchg
icebp
inc
inc
mov
pop
lret
scas
addb
test
ret
jle
es
imul
jle
pmovmskb
add
mov
into
subb
aam
aas
jp
sub
out
cmpb
push
or
or
sarl
adc
imul
adc
fstpl
out
sahf
out
sbb
mov
jp
sbb
mov
icebp
repnz
and
jns
pop
stc
sub
inc
mov
mov
jns
out
out
jp
push
cld
cmp
pop
sbb
cmp
push
add
icebp
cmp
loopne
loopne
add
aam
add
inc
pop
mov
mov
adc
add
add
cwtl
xchg
mov
xorb
addr16
push
push
mov
inc
or
adc
out
and
pop
pop
imul
cs
cmp
xor
insl
sub
scas
pop
xor
inc
inc
sgdtl
dec
push
xor
add
daa
shr
test
daa
xchg
es
loopne
cmp
mov
sbb
mov
adc
sahf
js
ds
push
test
and
lods
out
adc
jo
mov
push
pop
adc
insb
and
out
jns
out
or
or
pusha
jnp
out
sbb
je
pop
adc
iret
repz
push
sbb
inc
pop
cmp
repz
and
xor
cmp
repz
and
cmpsb
into
sbb
clc
popa
adc
jnp
jg
outsb
xchg
movsb
adc
mov
lods
inc
cld
xorb
inc
cmp
addl
and
cmp
cmp
pop
js
mov
lahf
cmpsl
stc
cmp
adc
xor
add
mov
pop
ja
xor
xor
mov
jae
adc
cli
mov
add
jns
mov
inc
pop
enter
and
cli
or
or
ret
seto
repnz
adc
in
jl
mov
leave
sbb
into
sbb
sar
decl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
in
incl
inc
stc
mov
adc
mov
decl
js
inc
fcomip
ljmp
loopne
jmp
xchg
test
mov
cmp
mov
fdivrp
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
incl
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
push
mov
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
adc
cli
ljmp
leave
fwait
xchg
and
and
addr16
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
jmp
dec
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
testb
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
ds
jnp
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
decl
sub
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
idivb
pop
gs
std
orl
pop
mov
lahf
into
ror
add
cmpsb
fmuls
scas
pop
jne
mov
inc
gs
adc
mull
dec
dec
test
lcall
xor
popa
push
out
mov
les
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
decl
dec
mov
mov
sub
mov
sbb
dec
jno
repz
fiadds
test
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
pushl
addr16
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
aaa
mov
xor
filds
or
shrl
mov
push
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
decl
mov
and
or
adc
stos
sbb
data16
inc
fdivl
incl
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
js
out
xor
or
mov
ljmp
insb
fs
add
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
incl
ficoml
gs
aam
pop
popa
mov
into
pop
cmp
mov
jg
cli
aam
movsl
fisttps
fadd
shll
jmp
outsb
xor
incl
lods
sarb
add
in
add
pop
dec
or
cmp
add
daa
call
adc
mov
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
jmp
cwtl
shlb
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
decl
mov
lcall
ljmp
fildl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
shlb
ljmp
add
inc
push
imul
xorb
sbb
push
imul
aam
loopne
rorl
pop
jp
adc
dec
frstor
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
fmuls
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
sar
lret
sbb
outsl
and
ja
int3
add
mov
das
ljmp
sar
push
mov
or
add
mov
cmpsl
call
ret
ljmp
rcl
scas
fldcw
ret
es
pushf
mov
ljmp
test
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
pushl
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
ficompl
int
mov
mul
ja
outsl
ja
mov
out
cli
jo
ud0
mov
push
pop
or
adc
sahf
gs
clc
sar
imul
push
js
or
out
rorb
dec
ret
cmp
cmpsl
notl
pusha
rorb
imul
push
push
scas
fcompl
fldenv
filds
ljmp
mov
fidivrs
mov
jmp
ljmp
mov
push
cmpsb
mov
call
mov
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
filds
sub
arpl
or
inc
pop
cmpsb
mov
add
jno
lret
push
movsb
mov
movb
sbb
push
mov
pop
fcoms
enter
adc
in
aad
push
xlat
fdiv
cmp
repz
fcmovnu
fstpl
iret
fsubp
jecxz
in
cmp
repz
iret
repz
in
repz
cmc
div
cmp
stc
cli
sti
cld
xor
lcall
jo
rorb
xchg
and
cmpsl
es
sbb
inc
push
lods
or
dec
dec
bound
in
inc
dec
ljmp
xor
mov
into
popa
je
push
filds
xchg
and
cmp
inc
icebp
mov
bound
xor
pop
inc
cmp
pop
bound
xor
mov
std
fbstp
bound
arpl
cmp
arpl
or
xor
xor
xor
popa
mov
jbe
pop
insb
imul
data16
imul
jnp
adc
inc
or
push
inc
cli
add
mov
mov
fs
roll
inc
gs
je
movl
push
jbe
mov
sub
inc
aas
movsl
mov
sub
sbb
inc
and
js
mov
aaa
call
xor
insb
popa
jns
mov
dec
insb
roll
inc
test
js
mov
aas
add
cwtl
jp
push
sarb
or
and
aas
cltd
inc
inc
stos
insl
and
jae
xchg
imul
int
pop
xor
mov
aas
mov
mov
and
inc
inc
movl
xor
mov
je
jo
inc
inc
add
testb
cmp
popa
mov
dec
push
or
iret
int
push
dec
cmp
inc
mov
push
adc
sbb
mov
ret
cli
inc
inc
outsb
jne
add
mov
push
imul
add
add
outsl
fucomi
adc
arpl
add
insl
pop
push
clc
xchg
into
pop
jo
pop
mov
inc
or
imul
aas
std
or
cltd
dec
pop
push
push
gs
add
pusha
add
outsl
add
or
cmpsb
or
bound
sbb
xor
mov
sbb
adc
adcb
frstor
cmp
lods
loope
popa
jo
rcll
push
mov
xchg
shrl
mov
jge
pop
lods
push
jno
mov
or
mov
in
pop
xchg
add
sub
test
pop
cmp
arpl
cmp
or
or
mov
mov
xchg
outsl
insb
jns
das
sub
jb
push
fwait
jnp
fidivl
gs
inc
outsl
arpl
sbb
mov
fimull
bound
ja
inc
jbe
xor
addr16
in
je
ja
dec
xor
adc
fistpl
jb
jmp
sti
push
inc
or
fadds
push
sub
iret
dec
imul
inc
pusha
cmp
ret
dec
push
adc
or
pushf
sbb
daa
sbb
adc
rclb
pop
jno
cld
inc
push
inc
dec
pop
bound
outsb
arpl
rcll
pop
fisubrl
int
pusha
in
insl
add
stos
movsl
or
inc
fldcw
fldt
lds
xlat
out
mov
add
adc
push
or
sub
and
pop
add
and
and
jmp
xchg
xchg
dec
dec
push
call
outsb
dec
sbb
fdivr
loopne
adc
sbb
testl
push
or
add
add
or
in
add
pop
pop
push
or
or
or
or
or
adc
decb
mov
adc
or
pop
sbb
adc
adc
outsb
xlat
push
adc
add
data16
or
mov
add
rolb
shlb
jo
add
and
add
sahf
add
fst
sti
add
add
dec
rorb
shl
sahf
subl
jge
mov
and
inc
push
adc
pop
and
xor
inc
mov
adc
xor
aaa
add
jb
js
add
pop
ffreep
dec
pusha
mov
push
or
mov
adc
and
fsubl
xorb
inc
or
mov
add
sub
xor
aaa
add
scas
andb
and
add
es
scas
cmp
mov
adc
push
adc
pop
popa
jno
and
xor
stc
or
xchg
mov
lock
loope
roll
mov
sbb
xorb
scas
fiaddl
or
js
fisttps
sub
rcr
push
ret
xchg
ljmp
xchg
jae
sub
std
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
out
pop
les
fsts
dec
mov
jg
mov
cmp
mov
out
cmp
xor
and
fistpl
inc
mov
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
sub
stos
pusha
xchg
pusha
add
std
or
cld
incl
adc
sbb
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
cli
sbb
mov
movsl
jecxz
pop
mov
adc
jmp
clc
cmpl
jg
jmp
or
insb
sub
addr16
out
or
push
push
xchg
add
repnz
incl
jbe
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
int3
lcall
push
aaa
cmp
mov
scas
mov
pop
pop
mov
popl
movb
decl
sti
ret
scas
adc
mov
xor
lods
scas
xchg
test
call
scas
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
in
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
or
pop
decl
dec
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
arpl
mov
jp
push
out
or
push
sahf
pop
clc
sti
jg
lea
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
sti
cld
cltd
inc
sbb
ret
outsl
shlb
pop
jb
mov
mov
mov
sub
loope
fwait
sbbb
mov
dec
jp
push
gs
in
outsl
jmp
add
stc
loope
mov
sar
andl
aas
icebp
testb
mov
ljmp
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
sbb
mov
dec
adc
push
lock
lods
jp
testb
inc
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
andl
mov
ljmp
adc
aaa
xchg
in
add
inc
adc
loope
aaa
dec
outsl
mov
or
icebp
aas
std
cli
push
push
push
idivl
pushl
sub
inc
scas
inc
mov
jg
je,pn
sub
mov
mov
scas
call
les
jne
gs
jns
enter
or
push
pushf
push
scas
add
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
pop
xor
jmp
in
stos
imul
hlt
sub
movsb
add
lahf
scas
decl
gs
std
xorb
jg
aad
adc
add
pushl
ret
das
pop
pop
pop
shlb
out
sarb
sbbl
call
jno
or
sarb
std
pop
les
cli
mov
mov
inc
arpl
ljmp
pop
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
push
mov
ljmp
or
adc
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
or
call
js
cmp
ljmp
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
ret
fcmovu
ds
cmpsl
scas
popa
in
pop
or
mov
call
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
incl
adc
push
jo
pusha
imul
add
mov
cmp
xchg
pop
ljmp
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
fildll
out
jae
shrb
shlb
out
aas
stc
add
notb
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
mov
mov
cmp
fmull
enter
aas
lahf
cs
in
pop
mov
aas
adc
mov
dec
incb
fisubrl
aas
mov
push
sbb
push
inc
or
pop
std
fildll
idivb
add
jg
mov
aad
test
bound
xchg
movsb
mov
iret
push
push
std
mov
sbb
stos
icebp
pop
incb
jno
adc
mov
push
inc
jecxz
sbb
sarl
adc
loopne
fcmovb
mov
sar
adc
lahf
xor
jg
push
imul
dec
push
in
aas
mov
fisubl
cmp
fsubrl
lock
and
incl
sbb
clc
xchg
inc
push
cli
mov
or
das
clc
and
mov
adc
inc
aas
push
rcrl
ds
mov
jb
fistpl
adc
call
jno
out
mov
addr16
scas
inc
sti
arpl
daa
std
or
sbb
loope
inc
mov
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fildll
lcall
lds
fidivrl
jg
stos
pop
jl
lcall
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
decl
in
negb
cld
addl
sbb
mov
lahf
outsl
int3
push
jo
push
sbb
pop
paddsw
pop
arpl
out
out
outsl
xchg
inc
test
clc
incl
cld
in
jge
popa
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
cs
cli
ljmp
dec
adc
lahf
mov
or
out
lcall
std
rolb
icebp
push
cld
mov
adc
stos
pop
jg
pop
sar
inc
mov
in
pop
cld
or
xor
pop
rcr
dec
mov
gs
pushf
lcall
idivl
aad
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
mov
mov
imul
or
inc
pop
xor
rorb
and
add
pushl
lcall
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
jnp
pushl
and
xchg
fidivrs
jg
inc
push
clc
insb
test
aas
repz
outsl
lock
test
cld
paddsw
pop
stc
out
mov
clc
push
std
mov
jmp
test
lds
or
dec
push
mov
fimuls
out
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rolb
outsb
cli
fucomi
pop
or
or
dec
ss
fidivrs
leave
inc
lods
movsb
or
repnz
mov
aad
pop
and
imul
cmpsl
lret
pop
in
cmp
jmp
lock
adc
jmp
hlt
dec
mov
jg
mov
aas
mov
jg
mov
incl
fmull
addr16
sbb
cld
daa
jp
std
adc
mov
fildl
or
mov
ret
nop
cmp
das
incb
add
lock
pop
pop
div
cld
idivl
fs
xlat
and
loope
jae
jmp
shrl
je
jge
idivb
mov
add
out
icebp
pop
and
mov
loope
mov
cmpsl
popf
sti
mov
test
ja
push
xchg
outsl
das
jge
outsl
ss
call
cmc
pop
mov
dec
push
adc
mov
and
ret
or
out
cltd
and
xor
add
cld
bswap
mov
inc
add
push
pop
aaa
and
xor
fstps
fimuls
sbb
xchg
fimull
cmp
aas
icebp
ret
ror
sbb
aaa
jno
ja
inc
adc
rcl
out
icebp
push
sub
mov
pop
clc
loope
loope
mov
lahf
adc
jo
add
xlat
jmp
mov
jb
xor
xchg
ss
mov
xchg
lcall
decb
cmp
mov
ds
sarl
pop
out
jg
jno
ret
rcll
nop
cmp
incl
out
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
sbb
mov
ds
inc
mov
in
sbb
xchg
imul
jmp
outsl
adc
sbb
mov
daa
jmp
faddl
mov
push
jae
outsl
xchg
sub
push
imul
push
lock
stc
push
dec
out
fstpt
mov
enter
add
add
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
push
xchg
cmpsb
scas
les
inc
lcall
std
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
or
add
push
sti
pop
inc
dec
push
scas
xchg
cltd
pop
mov
push
cmp
sub
push
popf
int3
pop
iret
and
add
aas
push
xchg
incl
testb
scas
and
lock
cmp
pop
xchg
loope
dec
pop
flds
xchg
xor
js
pop
insb
mov
cmpsl
jmp
insb
shl
daa
dec
or
ret
adc
pusha
push
call
pop
data16
adc
push
sub
mov
loop,pn
jne
jmp
lcall
pop
mov
enter
fs
lret
adc
repz
mov
fs
mov
aam
lahf
push
decl
loope
mov
push
inc
inc
or
adc
mov
in
fldt
mov
ljmp
call
ss
loop
lock
jns
jnp
les
mov
push
bound
sbb
jecxz
jle
push
jne
fldcw
les
loope
ds
std
incl
cmp
hlt
push
aaa
negl
nop
bnd
sbb
or
or
dec
das
pop
mov
mov
sub
lods
xlat
jae
je
dec
ret
dec
in
and
in
addr16
pop
imul
jmp
push
push
inc
ds
jg
jl
sub
imull
sub
icebp
mov
xor
lcall
jg
movsb
fcom
push
dec
mov
xor
jge
iret
ret
adc
push
incl
iret
fists
enter
mov
xchg
cmpsb
sub
dec
popf
xchg
scas
test
ljmp
fdivr
mov
shlb
inc
mov
cli
pop
lcall
dec
sbb
ss
pushf
call
out
outsl
push
rorl
inc
sub
int
test
insl
add
pop
add
repz
pushl
push
repnz
movsl
sub
mov
outsl
aam
ljmp
and
popf
inc
pop
jmp
iret
sbb
movl
scas
stc
or
cld
call
pop
leave
das
cwtl
mov
jmp
sbb
adc
mov
xchg
mov
pop
insl
stos
lods
sarl
xchg
sbb
xor
lods
cwtl
mov
lods
filds
inc
jp
fsub
test
dec
xor
xor
add
in
in
movsb
cmp
movsl
push
dec
inc
pop
int3
test
push
je
xchg
cmp
lret
shrl
inc
lods
jnp
jmp
int
mov
dec
data16
mov
in
adc
sub
mov
pop
sarl
push
cli
xor
loope
xchg
pushl
std
or
lret
insl
ret
popa
jecxz
adcb
or
imul
xor
sbb
jno
jmp
mov
pop
mov
xor
mov
shll
je
hlt
aam
jmp
adc
add
nop
cmp
jne
pop
jl
push
popa
in
insl
out
xlat
and
inc
xchg
lcall
in
es
leave
adc
jo
incb
mov
sub
mov
int3
xchg
decl
jp
test
iret
inc
inc
imul
xor
jnp
int3
mov
mov
mov
mov
cltd
sub
adc
and
jns
adc
mov
mov
decl
rcll
inc
subl
mov
xor
loope
add
pop
and
pop
dec
cmp
ljmp
repnz
mov
ss
adc
leave
lock
sbb
pop
mov
mov
mov
xchg
mov
lea
mov
add
xchg
cmp
into
leave
push
cmpsl
cmp
or
stos
popf
pop
or
lds
insl
pop
sar
call
shl
cli
cmp
mov
mov
aam
xchg
je
jle
inc
xchg
jb
call
xchg
icebp
pop
fsubr
lds
cmp
mov
and
xchg
cmpl
fiadds
or
scas
flds
cltd
or
or
lcall
pop
mov
int
clc
jno
aas
xlat
inc
ret
mov
icebp
lret
adc
jecxz
cmp
mov
lcall
jno
outsl
pusha
xlat
push
cs
xor
jns
rorb
insb
adc
mov
in
jle
or
lret
add
xchg
jge
mov
sbbb
xchg
mov
cmp
mov
std
or
testl
xchg
sub
aas
or
and
ljmp
mov
insb
fsubl
jb
popa
jle
imul
dec
inc
cld
jg
inc
fucom
test
cmp
dec
hlt
nop
or
aas
inc
dec
ja
jg
out
jb
or
repz
push
push
subb
dec
lcall
and
lock
add
push
and
lret
and
xor
mov
mov
pushl
mov
ljmp
pop
cmp
outsl
out
mov
std
mov
push
clc
add
and
imul
stos
xor
test
pop
mov
or
cwtl
push
pushl
dec
mov
mov
mov
jmp
pop
test
ret
cmp
mov
ljmp
jle
std
xor
pop
stos
bnd
xchg
jo
mov
dec
cmc
mov
mov
ljmp
fbld
mov
push
pop
mov
aad
inc
cmp
clc
loop
push
mov
in
incl
arpl
pop
jecxz
repz
jl
xor
or
push
in
cmpl
or
push
jne
mov
stc
movsl
stos
and
dec
push
jo
jmp
and
dec
push
lcall
mov
dec
push
test
mul
aaa
push
iret
inc
push
loop
ljmp
stos
push
mov
clc
ret
pop
or
or
shll
or
cmp
jg
xchg
pop
sub
xor
xor
out
data16
pusha
jbe
call
sbb
or
adc
enter
mov
cli
notl
test
fcomps
loopne
decl
in
add
pushf
ja
adc
lea
xor
jns
scas
clc
mov
xor
cmp
ffreep
or
add
mov
pop
push
pop
jae
sti
inc
fldt
xor
and
pop
sbb
mulb
push
inc
lea
fstpl
mov
daa
or
imul
sub
in
mov
fwait
jmp
mov
and
jbe
sti
mov
cli
dec
je
push
ss
mov
das
rorb
adc
repz
loope
jecxz
fildl
add
call
push
repz
out
cmp
ljmp
pop
sbb
sub
mov
out
movsl
cmp
loop
out
pop
lods
add
mov
ljmp
inc
cmp
pop
lods
loop
inc
mov
jo
push
xchg
cmp
fwait
data16
decl
mov
and
stc
test
inc
dec
cmp
push
push
lock
call
or
inc
out
insl
dec
cmpsb
xchg
stc
ss
in
sbb
inc
mov
or
jge
mov
sub
mov
into
lcall
scas
inc
into
xchg
aas
sbb
lret
cltd
out
clc
mov
xchg
mov
push
cmp
out
mov
call
movsb
cmp
sbb
inc
pop
fidivs
sbb
mov
call
andl
cmp
test
stc
outsb
and
cmp
repz
jne
mov
pushl
xchg
inc
pop
ret
clc
pop
loopew
insl
inc
jecxz
mov
mov
push
stc
cltd
push
mov
add
out
mov
int
mov
sub
adc
adc
test
adc
daa
hlt
imul
dec
sahf
dec
ret
mov
push
rcr
add
ja
jno
jg
popf
add
inc
jg
inc
jge
inc
rclb
mov
xchg
add
lods
add
inc
shlb
aad
fstp
into
push
dec
jp
incl
es
hlt
addr16
sub
lods
sub
pop
jno
sub
xor
pop
pop
in
nop
cmc
mov
pushl
fistps
repnz
pop
popa
test
leave
xchg
fildll
cmp
mov
pop
ficoml
cmc
std
and
clc
call
loopne
push
cmp
imul
mov
or
pop
jne
scas
jne
and
adc
fs
pushl
jmp
subl
pop
rclb
jb
mov
std
sti
shlb
lcall
inc
ja
data16
gs
rol
mov
xchg
jnp
or
push
sub
pop
xor
sub
iret
ds
jae
fidivs
add
call
push
adc
cwtl
lods
fsts
cmp
dec
stos
pop
inc
mov
jmp
push
dec
mov
outsb
mov
push
incb
dec
leave
mov
sar
incl
divb
icebp
and
iret
add
jge
sbb
or
xorb
mov
xorb
push
adc
testb
ja
jb
mov
xchg
mov
lods
xchg
aam
daa
jbe
arpl
lcall
scas
push
cli
icebp
jecxz
nop
mov
fs
inc
pop
fistps
mov
dec
cli
decl
jne
popf
test
das
push
ds
xor
pop
adc
pop
push
movsl
jge
mov
xlat
or
mov
push
decl
cmp
add
mov
push
fs
xor
xor
xor
int
incl
clc
pusha
lds
mov
mov
js
out
gs
mov
add
movsl
push
scas
cli
out
and
arpl
lahf
cmp
jp
loopne
jmp
cmc
jg
call
das
push
pop
movsl
mov
push
cltd
dec
es
ror
mov
pop
movsb
es
push
push
pop
push
or
xor
inc
xlat
push
push
mov
sub
jbe
arpl
ljmp
add
pusha
fimuls
mov
mov
insb
ret
push
call
or
lcall
adc
dec
adc
ret
in
outsb
ja
push
push
push
pop
jmp
popa
insl
mov
cmp
pop
cmp
mov
lods
cmp
xchg
stos
lcall
pop
icebp
cli
adc
data16
push
int3
ljmp
sbb
or
incl
imul
mov
jno
in
imul
lea
dec
je
jmp
add
cmp
gs
mov
xchg
xchg
sahf
imulb
xor
lret
jmp
push
lret
xchg
shl
filds
mov
not
popf
fisttpl
jmp
mov
ja
dec
push
pop
iret
dec
inc
adc
aaa
sub
push
pop
test
jmp
and
push
pop
xor
jno
flds
or
and
cmp
xchg
stc
jle
sbbb
jge
push
or
fisttpl
mov
inc
sbbb
xor
fcoms
cmp
popa
xchg
incl
push
xor
jl
rclb
xchg
mov
jmp
add
mov
mov
inc
mov
pushl
push
insb
xor
ss
add
inc
pop
or
jmp
incl
xor
xchg
cld
jmp
insb
cmpsb
jl
je
jnp
loope
inc
ss
jp
mov
xchg
pop
jmp
lods
mov
xchg
sbbb
mov
or
pushl
push
jp
aas
in
in
mov
xchg
aam
add
xchg
or
or
cmpsb
jecxz
dec
inc
inc
jle
adc
iret
mov
push
jnp
and
rorl
mov
push
loope
xor
mov
jmp
lahf
fiaddl
or
mov
aaa
loop
push
cmp
iret
pop
sbb
cli
push
es
pusha
cld
mov
mov
mov
in
mov
pop
shl
add
add
decb
cmp
dec
cmpsb
sbb
shrl
mov
jbe
or
mov
scas
inc
push
jns
cmp
push
int3
lds
adc
outsb
repnz
shl
pop
cmc
call
sub
in
aam
arpl
enter
enter
in
cmpsl
or
cmp
pushl
out
out
mov
dec
fdivrs
or
sahf
imul
fdivr
fcmovnbe
mov
scas
push
inc
call
loopne
pop
pusha
xor
cmc
mov
mov
in
data16
add
pushl
adc
int
dec
and
out
sbb
lea
movsb
inc
inc
or
sbb
push
dec
rorb
loop
mov
stc
jl
xchg
ljmp
ss
call
in
lret
in
stos
dec
or
call
adc
sahf
jmp
add
insl
stc
cmp
mov
test
in
sar
sub
sbb
negb
jmp
inc
aaa
movsb
test
push
jmp
mov
or
loope
pop
or
xor
xor
cmp
ljmp
inc
daa
call
lods
pop
mov
repnz
insl
mov
lcall
cwtl
cli
mov
inc
dec
add
bound
divb
fsubrl
mov
clc
push
lods
ds
dec
outsl
out
ret
repz
mov
pushl
scas
enter
add
adc
mov
sub
mov
pushl
sub
push
xor
dec
jmp
dec
shlb
or
push
inc
mov
jb
adc
mov
jmp
ds
xor
mov
arpl
dec
mov
adc
jge
mov
jne
xchg
ja
call
mov
inc
fs
jg
add
cmc
imul
cmp
mov
xchg
test
xchg
mov
iret
and
pop
cltd
adcl
test
decl
gs
inc
jecxz
dec
cmp
mov
add
mov
adc
shr
rorl
xor
call
xchg
sbb
push
and
mov
insl
mov
xchg
add
pushf
add
icebp
mov
decl
inc
push
int3
mov
aaa
jl
jo
rclb
inc
xlat
mov
mov
fstpl
and
or
lcall
xlat
aas
repz
ret
adc
data16
xchg
inc
push
pushf
push
push
stc
lahf
adcl
inc
mov
ljmp
mov
std
gs
mov
pop
jmp
outsl
cmp
mov
mov
lahf
ds
call
dec
xchg
mov
push
jge
int3
cmp
mov
dec
aad
sarw
lcall
ret
inc
or
aam
xorb
add
cmp
mov
adcb
cmp
xchg
push
into
xchg
xchg
mov
pop
in
jg
sahf
stc
jmp
ja
xchg
add
mov
and
clc
cmc
sbbb
movsl
xchg
xchg
jo
int
adc
cld
loop
pushl
xor
xlat
insl
xor
pop
inc
popa
addb
loop
cltd
addr16
cmpsl
inc
cwtl
les
jmp
movsl
sbbb
cli
out
mov
lcall
in
lcall
pop
jl
inc
scas
rolb
jbe
sbb
jle
mov
add
and
jae
cmp
pop
scas
nop
xor
movsl
cmc
jmp
repnz
orl
inc
addr16
fldl
dec
or
test
inc
lcall
out
mov
cmpsb
lret
push
xor
sti
cltd
lahf
sbb
fldt
ja
std
ds
data16
pop
adc
mov
push
and
sbb
xchg
add
out
clc
fldln2
sub
mov
dec
cmp
repz
or
popf
cmp
push
or
js
ljmp
jmp
movsb
add
cmp
sbb
in
and
stos
xchg
fistpll
inc
adc
pushl
icebp
jmp
sbb
xor
xor
sbb
fwait
scas
insl
dec
out
fistpll
pushl
shlb
and
pop
dec
adc
testl
lods
xchg
lahf
pushl
or
leave
insl
stos
cmp
andl
jo
fwait
lods
test
mov
call
cwtl
cli
aaa
jne
jge
cli
cmp
insl
fistpll
daa
scas
adc
inc
pop
js
incl
orb
jo
pop
idivl
mov
mov
add
ja
jmp
cmp
insb
ds
orl
dec
rolb
xlat
jmp
or
out
pop
adc
decl
rcll
xor
jl
push
ret
pop
xchg
iret
sbb
xchg
adc
out
clc
ficoml
sub
mov
adc
cmpsb
xchg
mov
stos
or
jo
ret
and
ljmp
push
shll
jle
mov
in
sbb
adc
out
jns
cli
push
fbld
andl
jmp
push
mov
lods
cwtl
add
imul
jb
in
mov
jae
in
add
bound
sahf
pop
xchg
insl
pop
mov
js
inc
sbbl
ss
mov
aaa
dec
ret
roll
cmp
out
jbe
in
pop
icebp
inc
mov
gs
push
xchg
cli
jae
hlt
outsb
js
or
rorb
mov
incl
mov
lods
adc
xor
add
or
pushf
xchg
arpl
cs
jg
xor
sbb
rcll
movsb
mov
adc
jns
cmp
ret
ljmp
mov
pop
mov
xchg
pop
arpl
mov
jge
jmp
jae
mov
mov
inc
jmp
dec
in
mov
clc
stc
xorb
mov
test
clc
js
pop
outsb
mov
pop
mov
shrd
negb
shll
icebp
dec
xor
aaa
lock
inc
fdivp
rcrb
lock
lret
cmp
out
clc
pushl
into
cmp
jnp
mov
insl
pop
roll
and
dec
scas
jle
ds
pop
sbb
cmpsb
es
mov
adc
xchg
lcall
decl
repz
inc
outsb
fs
cwtl
push
push
mov
orl
call
jne
xor
addr16
rolb
pop
lds
sahf
lahf
xchg
jl
xchg
xor
incl
gs
inc
enter
mov
cli
scas
jno
adc
mov
jmp
rcrl
into
je
dec
lret
xchg
pop
jne
flds
fsubrl
int3
xor
mov
push
push
adc
adc
or
adc
imul
out
mov
jg
dec
aam
mov
ja
pusha
bound
mov
jge
out
push
push
lcall
shr
xchg
mov
repnz
imulb
out
js
fbld
int3
inc
fimull
inc
adc
dec
inc
sbb
jb
jmp
mov
jns
out
push
sub
in
lods
loopne
add
jae
div
hlt
sub
inc
js
mov
dec
push
outsb
push
xlat
pushf
cmc
pop
pop
fcmovnbe
stos
or
lcall
mov
adc
arpl
push
mov
loop
loopne
mov
mov
or
add
jne
mov
push
mov
sub
or
sar
das
sar
mov
lret
fnstsw
in
insl
cltd
jae
lahf
jmp
cli
lock
repnz
lock
mov
cmp
lcall
mov
sub
iret
cmp
fisubrl
shr
pop
call
out
lock
xor
inc
cs
lods
call
mov
or
test
pop
ja
or
xlat
mov
cli
add
hlt
outsl
xor
pop
cmpb
mov
imul
fcoml
push
divb
lds
adc
and
clc
adc
adc
add
xchg
sub
ljmp
jle
cld
push
scas
bound
mov
call
mov
xchg
jmp
shrl
test
ds
fnstenv
fs
cmp
add
rcrl
ljmp
loope
mov
lea
mov
test
inc
mov
decl
fs
pop
cmp
mov
pop
ret
xchg
or
inc
mov
jns
jle
mov
in
dec
into
mov
and
pop
or
addb
call
fstp
mov
scas
push
jns
addb
cmc
or
inc
lcall
mov
add
and
cmp
xor
pop
mov
call
ljmp
sarb
test
and
cmpsb
sbb
call
rcll
dec
xchg
push
cli
sub
xchg
and
cli
lods
repnz
call
or
pop
repz
inc
jp
jmp
pop
jnp
rcrl
jbe
cmp
ljmp
into
lret
test
sti
cli
lret
ds
cmp
dec
add
sub
pop
hlt
mov
sbbb
lcall
pushf
cmp
mull
push
pop
mov
call
xchg
inc
adc
inc
push
xor
fadds
mov
or
jge
sub
jo
insl
and
push
in
jmp
xchg
mov
int
jmp
stos
outsb
and
sub
sti
jp
fdivrl
rorb
nop
hlt
jbe
and
and
dec
mov
sub
jbe
orl
outsl
cld
jg
lahf
inc
sbb
cmpsl
sub
and
mov
push
ror
sbb
mov
fildll
inc
xor
dec
ljmp
add
je
lcall
cld
int
add
mov
cmp
jg
repnz
or
fdivrp
decl
cmpsb
and
flds
jo
cltd
push
adc
dec
dec
cmc
int3
nop
push
ja
push
jnp
pop
cs
enter
gs
aad
push
out
dec
mov
adc
push
mov
scas
push
jmp
in
xor
mov
cwtl
mov
out
jbe
pushl
jmp
sbb
jle
repnz
mov
icebp
xor
and
dec
cmp
call
call
movsb
push
pop
fldl
sbb
adc
xor
decl
mov
repz
lcall
dec
inc
ret
je
fldl
mov
shrl
push
pop
stos
fldenv
push
mov
and
jg
push
pop
pop
je
or
or
imul
fidivrl
out
clc
ljmp
sbb
add
inc
mov
mov
adc
fisubrl
ljmp
lcall
inc
adc
xchg
loop
lds
mov
xchg
cmp
inc
sbb
mov
cmp
add
mov
xor
lock
lcall
push
popa
movsb
outsb
fsub
sbb
pop
fcmovnb
adc
aas
testl
and
mov
mov
mov
mov
fadds
bound
cmp
jb
fimuls
std
add
enter
mov
negb
dec
lcall
insb
xchg
mov
adc
cmp
mov
cmp
pushl
stos
in
fstp
jo
mov
scas
out
in
mov
dec
scas
aas
and
inc
xchg
mov
in
adc
mov
and
dec
lods
sbb
jno
mov
dec
rol
addl
test
pop
add
push
pushf
icebp
cli
sub
subl
jg
xor
enter
loop
mov
fnstenv
test
inc
sbb
mov
mov
lock
fisubrs
hlt
lahf
ret
cmp
sarl
cmp
cld
or
gs
inc
ret
mov
test
lods
and
xor
stc
in
add
fsub
add
out
lcall
movsb
xchg
push
inc
and
call
lea
lcall
lahf
daa
push
cmp
mov
test
cltd
sub
fdivr
out
add
rcll
ljmp
push
mov
inc
push
sub
jmp
insb
fmuls
loop
pushl
cltd
cwtl
or
add
mov
mov
push
dec
or
pushl
mov
xor
lahf
cmpsl
hlt
mov
fwait
adcb
outsb
sar
jmp
ret
pop
lea
imul
rclb
in
jae
or
fistps
push
loope
ljmp
sbb
aad
sub
movl
add
jle
inc
stc
aas
add
jmp
hlt
inc
jns
push
filds
xorb
pop
and
jl
vpaddusb
ljmp
mov
pcmpgtb
movsl
pop
add
push
push
int3
or
pop
inc
or
lcall
in
mov
mov
rcr
js
fimuls
xchg
xor
dec
es
sahf
fmul
push
int3
stc
pop
jnp
adc
ss
lods
xor
add
xchg
xor
sub
stos
lock
mov
inc
pop
inc
addb
jno
dec
xchg
lds
jbe
psubusb
out
scas
roll
out
clc
mov
loop
roll
and
dec
dec
aad
sub
cmpsb
je
jge
incl
outsl
inc
gs
inc
xchg
stos
push
xchg
test
notl
fistpl
aaa
out
xchg
cld
pop
addr16
or
jns
outsl
outsl
sarb
pop
push
jp
test
test
xchg
arpl
rcrb
fsubrs
ds
mov
xchg
fstpt
int
loop
repnz
mov
mov
in
hlt
xchg
or
test
addb
fcomip
pushl
push
push
lret
sbb
sub
push
sarb
jns
sbb
pop
jmp
jmp
mov
mov
sub
loope
decl
imul
popf
aad
repnz
push
cmp
hlt
fists
or
ljmp
push
cmp
ret
gs
sbb
popa
jmp
pop
loop
rcrl
dec
mov
lcall
sub
test
push
xor
push
jle
sarb
int3
jge
decl
aad
dec
push
or
cltd
popf
xor
rep
sar
stc
add
xor
jg
lods
push
mov
dec
push
popa
dec
lret
in
loopne
xchg
mov
adc
incl
es
in
clc
sub
xchg
pop
or
incl
xchg
sbb
mov
int
cmp
mov
inc
je
dec
pop
aaa
ja
add
inc
push
lcall
call
arpl
sub
push
adc
scas
push
sub
xor
cs
scas
sti
test
ret
outsb
xor
pop
bound
call
lds
mov
mov
insb
popf
inc
sub
sti
xchg
push
add
jbe
mov
xor
in
movsl
fcomip
call
add
adc
pop
movsb
scas
mov
sub
out
xchg
in
stos
pop
ljmp
or
test
test
mov
mov
sub
hlt
scas
outsb
addl
incl
ss
int
dec
dec
cmpsb
and
into
sub
shrb
mul
add
ljmp
inc
jb
xchg
mov
in
lea
repnz
nop
add
cmc
or
cld
incl
push
mov
and
fcoms
mov
adc
rcrl
dec
daa
jge
je
nop
orb
jecxz
std
jge
ljmp
mov
or
mov
in
add
jecxz
stos
rorb
imul
xor
adc
jp
aad
in
xchg
cmpsb
lahf
mov
cmp
push
in
lock
or
mov
mov
and
pop
inc
andb
loope
imul
jmp
cld
popf
mov
cltd
in
add
mov
daa
test
mov
sar
mov
lret
pop
jp
mov
sbb
adc
dec
xchg
cmp
pop
cld
stos
test
movsb
cmp
cli
cmp
loop
xor
or
aaa
fildll
push
mov
inc
popa
push
mov
dec
imul
push
sahf
cltd
xchg
xchg
popf
mov
pop
jmp
test
fnstsw
jmp
mov
and
push
lods
mov
fisttps
shll
cltd
push
jbe
pop
shrb
mov
decl
sbb
incl
ss
outsl
mov
jae
lock
repz
mov
loop
dec
or
rorb
push
ss
aam
xchg
jg
and
ja
pop
pop
lds
lcall
sub
pop
ljmp
je
repz
pop
addr16
daa
stc
add
aas
xchg
xchg
xchg
mov
cmc
and
mov
jae
es
and
mov
clc
jae
mov
in
mov
insl
insl
test
int3
sbb
test
dec
cmp
add
div
jmp
stc
cmp
and
js
in
or
mov
jle
stos
fbld
decl
inc
push
cltd
cmp
std
push
jecxz
aaa
fdiv
lcall
in
add
rcr
push
jbe
pop
push
mov
call
loopne
ljmp
jp
out
xchg
fcmovbe
push
test
push
fbstp
repnz
sub
call
lds
mov
clc
adc
mov
aaa
pusha
jb
push
jb
or
call
mov
jp
movsl
pop
in
or
outsl
insb
clc
ud0
pushl
outsb
aaa
mov
loope
xchg
xor
adc
fdivrl
lods
movsl
in
push
push
and
dec
mov
lods
icebp
lcall
sub
rolb
adc
lahf
pop
idiv
mov
jecxz
jge
shlb
out
outsb
iret
aam
shll
pop
xchg
cmp
mov
sub
ljmp
out
cmp
mov
mov
mov
lret
dec
out
int3
fs
add
lahf
pop
mov
xor
adc
mov
add
cmp
imul
rclb
insl
adcb
ret
in
cmp
decl
push
hlt
imul
ret
pushf
push
cld
jg
push
sbbb
in
out
add
push
xchg
jl
cmc
sbb
rol
call
push
inc
pop
jp
sbbb
test
cmp
adc
jg
jecxz
push
cs
ret
cmp
fsubr
cli
mov
cmp
xchg
or
sub
ret
call
cwtl
sub
pop
daa
sbb
xchg
pop
mov
in
and
int
adc
idiv
lcall
fs
repz
or
stc
int
adc
mov
pusha
pop
jno
inc
in
pushl
arpl
jge
movb
arpl
cmp
jecxz
jecxz
jmp
pop
repz
lcall
mov
pop
lcall
cmpl
jae
pushf
jb
sbb
incl
stos
je
xchg
sbb
sbb
xor
push
fidivs
sub
cwtl
aas
sbb
dec
pop
insb
scas
pusha
lcall
pop
add
jle
insl
lods
in
in
mov
decl
cwtl
fldt
cs
xchg
lret
inc
rcrb
stos
shll
scas
cli
decl
movsb
and
dec
incl
imul
adc
mov
pop
sahf
jbe
ljmp
push
xchg
dec
lret
jmp
call
test
jnp
das
add
pushl
nop
fistl
inc
js
scas
mov
xchg
incb
call
xchg
jp
or
ret
outsb
and
sbb
gs
xchg
insb
in
sbb
hlt
std
pop
and
mov
enter
xchg
mov
cmp
enter
sahf
inc
fcmovnb
popa
fstps
call
das
lods
and
rcr
xor
sbb
mov
bound
aaa
cwtl
pop
jg
outsl
in
test
cmp
dec
xchg
pop
js
notb
sub
movsb
out
cld
incl
and
stos
test
or
and
xchg
int
fistps
sbb
fcomip
pop
imul
testb
jmp
dec
sbb
adc
enter
or
cmc
jmp
cli
xor
fs
cmp
insb
ror
push
add
movl
mov
scas
imul
ds
mov
in
stc
push
test
jne
and
sbb
pop
push
push
divb
mov
into
sub
mov
dec
loope
push
decl
test
popw
add
ljmp
mov
mov
sub
scas
add
clc
decl
lock
or
ljmp
cmc
mov
lea
ljmp
cltd
sub
loop
cwtl
flds
add
cli
sub
movsb
or
lcall
jmp
lret
sub
aad
adc
dec
inc
nop
jbe
jle
shll
xchg
xchg
aaa
mov
mov
sti
mov
stos
pop
xor
outsb
mov
dec
test
movsb
push
ljmp
arpl
adc
mov
pop
add
add
jno
scas
addr16
cltd
loope
jmp
pusha
cmp
push
mov
pop
pusha
pop
ficoms
jbe
int3
mov
cmp
jecxz
jmp
cmp
iret
lahf
mov
es
inc
fidivl
sub
or
in
in
push
std
mov
addr16
mov
pop
loope
pushf
iret
mov
and
ds
incl
pop
daa
push
ja
sbb
and
mov
leave
inc
xor
ljmp
repnz
jnp
test
pop
fstps
rolb
inc
into
aam
xchg
fs
incl
out
sbb
int3
pop
add
sbb
fwait
cld
lret
cmp
leave
jmp
out
clc
decl
xlat
cmp
imul
jb
push
test
lea
stc
mov
add
cltd
iret
popa
jnp
or
daa
fmulp
mov
sbb
std
xchg
ss
lret
fs
sbb
sbb
mov
mov
cld
int3
icebp
jg
lcall
test
adc
jbe
aas
enter
lret
rcl
rolb
ret
inc
lcall
mov
or
push
lcall
or
pop
sarb
cmpsl
mov
and
nop
mov
inc
sbb
mov
call
ljmp
sub
jne
ret
mov
dec
mov
outsl
add
cmp
xor
inc
dec
decl
push
dec
dec
jae
sbb
int
or
cli
jp,pn
sbb
ret
testb
sar
pushl
push
push
fisubl
mov
mov
sbb
aaa
lcall
xchg
dec
mov
hlt
lea
pushl
fcmovb
jno
js
cmp
mov
cld
aam
fsubr
mov
sti
addb
ficomps
ds
or
lea
or
orl
sti
jmp
xor
shrb
aad
push
in
ret
mov
xchg
data16
scas
add
lret
mov
xchg
cmp
ljmp
adcb
sub
out
mov
jmp
pop
xchg
inc
dec
or
inc
int3
call
inc
xor
jge
nop
sbb
int3
cmp
scas
movsl
cmc
and
in
popa
in
shll
call
xchg
add
gs
push
iret
loope
pop
loope
int
idivl
jecxz
popa
add
xor
and
and
sub
stos
repnz
out
scas
adc
rclb
push
mov
mov
shrl
mov
push
adc
imul
xchg
cmpsb
lret
icebp
enter
pushl
gs
filds
lock
stc
test
adc
loop
je
iret
fwait
jo
clc
xchg
xchg
mov
pushl
pop
jne
shlb
outsb
outsb
push
loope
scas
andb
outsl
mov
xor
out
clc
ljmp
in
xchg
adc
add
sub
pop
mov
repz
mov
ljmp
pop
inc
cli
jp
or
cltd
int3
das
fdivl
pop
lock
adc
call
outsl
frstor
mov
mov
cs
jg
dec
insb
test
add
leave
jmp
subl
fldenv
fcomip
loop
push
sub
js
pop
add
loope
fs
fnsave
loopne
sub
mov
es
mov
pop
mov
mov
jns
dec
or
sub
inc
daa
insl
rcl
sbb
mov
pop
out
rcr
into
sbb
mov
pushaw
jg
push
push
jmp
ficoms
imul
decl
test
push
pop
ret
clc
or
stc
dec
inc
cmc
in
hlt
in
aas
loope
addr16
mov
xor
cmp
testb
mov
sub
sahf
shlb
pushl
dec
adc
xorl
jle
jmp
cld
les
arpl
add
cmpsb
mov
jle
sar
pop
dec
lcall
mov
mov
xor
int
int
ret
loop
imul
call
or
adc
cwtl
pop
or
call
mov
call
xorb
push
and
and
mov
out
ds
int3
xor
or
push
jbe
aam
out
mov
xor
incl
aam
mov
mov
stc
icebp
sti
insb
xchg
xchg
pop
outsl
inc
mov
imul
jg
mov
fisubrs
lods
sbb
jl
sahf
xor
push
sti
push
cmp
lea
jmp
fiadds
outsb
leave
mov
push
jecxz
and
jecxz
jno
stos
incl
jge
push
sti
xorl
mov
cmp
fcomps
decl
adc
incb
or
sbb
jbe
fdiv
adc
aaa
adc
inc
inc
xchg
mov
sbb
jp
sub
sbb
test
xchg
jmp
lcall
push
out
enter
test
popf
and
sub
jecxz
pop
lock
mov
jg
pushf
adcl
mov
and
mov
imul
pop
stos
les
in
add
shll
inc
decl
push
pushf
cmp
push
fwait
stc
jg
jnp
aam
lret
jp
insl
fdivr
ljmp
into
sbb
jnp
dec
lds
cs
filds
incl
cmpsb
fisttpll
sub
ficompl
pop
popa
xor
loope
arpl
incl
inc
imul
mov
xchg
cld
xor
sub
mov
mov
rorl
mov
add
lock
mov
decl
jae
jle
mov
push
inc
pop
test
cmc
mov
cmp
jnp
mov
pop
aas
test
xchg
rorb
mov
or
data16
sub
imul
push
mov
test
mov
notb
push
jne
scas
fisubl
jg
mov
xor
nop
mov
sbb
scas
call
clc
repz
int
add
push
push
inc
sub
jp
xor
addb
lods
ljmp
fsub
movsb
cmp
bound
enter
movsb
push
stos
xlat
jecxz
inc
arpl
addr16
push
jg
mov
jae
adc
cmpsb
inc
ret
jno
sahf
and
mov
xor
decl
cmpl
mov
sub
call
lods
push
inc
mov
div
add
push
data16
outsl
adc
ret
pop
mov
or
jmp
inc
in
mov
xchg
scas
out
jnp
and
lea
aad
or
mov
out
ljmp
mov
mov
jmp
je
rcr
mov
insb
mov
adc
testb
fst
and
in
jecxz
jp
incl
test
inc
dec
repnz
cld
aas
adc
add
pushl
dec
ret
sbb
inc
insl
mov
or
adc
xor
pushl
in
or
mov
cwtl
adc
fdivr
pop
gs
outsl
add
lds
pushl
lods
cmp
push
cld
icebp
nop
aaa
push
pop
test
add
push
int3
xor
incl
jmp
add
pop
das
dec
cli
inc
mov
cmc
pop
push
pusha
jb
jmp
cmpsb
push
shlb
lcall
jmp
test
sbbb
mov
dec
shll
subl
mov
call
xchg
fcoms
lock
pop
jle
cld
inc
outsl
push
notl
cld
sti
outsl
cld
dec
mov
add
outsb
cmp
sub
cmp
push
cltd
sti
xchg
jb
mov
incl
push
loop
and
outsl
movsl
push
mov
adc
ret
jg
js
inc
test
xor
dec
dec
imul
int3
adcl
rcl
daa
mov
dec
test
dec
iret
mov
decl
cmpsb
pop
sbb
inc
xchg
or
adc
add
or
jg
dec
xchg
mov
xchg
movsl
outsl
addl
sbb
fnstcw
jp
loop
dec
leave
aad
jecxz
adc
pop
add
imul
nop
mov
imul
andl
addb
xor
mov
mov
jmp
dec
pop
sbb
mov
sahf
dec
mov
xor
push
or
jmp
and
mov
adc
lret
push
mov
push
cmp
xchg
mov
gs
ljmp
lahf
pop
mov
push
mov
das
xchg
mov
ret
push
and
lret
shlb
and
addb
lcall
push
xchg
xchg
xchg
daa
ret
push
pop
dec
repnz
push
cmc
mov
decl
mov
scas
pop
xor
mov
xor
iret
movsb
push
cmp
loop
mov
dec
lock
dec
sbb
sbb
sbb
int3
aaa
sbbb
cmpb
xchg
js
mov
fwait
inc
xchg
je
ljmp
mov
jp
xchg
mov
xchg
sbb
pusha
xor
lcall
negl
call
test
rorb
add
cs
sarb
push
cvtdq2ps
incl
sbb
xor
xor
dec
out
notb
loop
jg
jmp
aas
cwtl
xchg
mov
jnp
and
or
inc
xchg
bound
mov
hlt
rorb
sahf
sarb
cwtl
push
push
mov
addr16
pop
mov
sti
sub
sti
fistpll
scas
outsl
aaa
cld
incl
test
sub
insl
loop
nop
popa
add
xorl
inc
pop
pop
mov
push
push
fiadds
faddl
sub
mov
and
xchg
lahf
lret
gs
call
ret
jl
mov
pop
shr
fdivp
sbb
mov
sub
jg
jle
mov
ljmp
and
push
stos
in
mov
mov
push
sarb
movsl
push
int3
incl
mov
outsb
xor
jle
cs
add
mov
cmp
cmpb
test
adc
add
xor
fwait
mov
shll
daa
cmpsb
lea
incl
loop
xor
leave
sbb
iret
and
aaa
push
leave
mov
add
lret
or
mov
xchg
inc
dec
stos
inc
mov
les
xchg
arpl
and
xchg
lahf
add
jmp
mov
add
push
daa
xor
adc
pop
mov
fisttps
jmp
xlat
jge
push
mov
call
cmpsb
lcall
lcall
adc
push
in
out
push
jbe
xor
push
fldenv
cmp
arpl
pop
sub
adc
lcallw
xor
std
pushf
mov
popa
repz
mov
xorl
bswap
push
es
jle
lcall
incl
lcall
int
xchg
pop
int3
add
repnz
imul
lcall
xchg
and
mov
lods
or
in
inc
and
jle
or
and
sub
aaa
or
dec
pop
inc
test
dec
push
call
xor
push
fdivrs
cmp
stos
add
aas
cmp
pop
inc
push
sti
pop
lock
jmp
imul
popf
push
push
lret
mov
jle
cmpsb
cs
pushl
test
cmp
ljmp
mov
cmc
and
in
js
or
mov
inc
dec
push
test
jmp
cmp
cmp
outsl
and
int3
iret
mov
pop
les
fwait
push
lret
xchg
lret
mov
cltd
xchg
sbb
add
in
xor
ljmp
cld
cmpl
sub
sti
inc
je
ret
inc
mov
in
loope
lret
int
cmp
cwtl
or
cmp
lcall
xchg
ret
dec
loop
xchg
sub
sbb
imul
call
and
in
decl
xchg
mov
mov
pop
xchg
add
stos
outsl
mov
out
lcall
jns
mov
or
push
adc
std
outsl
push
fldl
popf
cltd
jge
call
dec
cwtl
or
sub
fisttpll
nop
fldenv
sahf
aas
push
std
mov
sbb
ret
aam
xor
fcomip
jg
in
mov
rorl
lods
dec
mov
fucom
filds
add
incl
jl
mov
push
insb
icebp
sbb
sti
push
or
ja
xchg
jnp
stos
lds
decl
mov
xchg
push
fidivrl
hlt
adc
inc
adc
jmp
mov
js
mov
pop
fcmovbe
mov
shll
lods
pushf
push
imul
cmp
inc
nop
hlt
or
in
mov
iret
ja
shll
roll
jae
ljmp
xor
jbe
scas
gs
insl
adc
cmc
std
cltd
dec
and
popl
ljmp
jg
aam
pop
loop
cmp
mov
cld
insb
cli
out
pop
call
in
mov
ss
mov
ljmp
sub
ja
jl
adc
dec
dec
pop
jge
xchg
loop
mov
icebp
cld
pushl
sbb
inc
cmp
daa
rclb
insl
push
testl
movsl
pop
lcall
push
adc
or
repnz
fdivrl
push
lret
mov
lock
call
cmc
xor
in
test
ljmp
hlt
fdivrs
or
cmc
mov
mov
scas
jle
add
js
mov
and
aas
outsl
fcompl
popa
insl
ja
das
push
push
mov
loope
xchg
int3
adc
and
sub
xchg
or
addr16
lret
mov
xor
mov
cmpsl
xchg
aaa
loopne
out
stos
fcmovb
inc
pop
cmp
cwtl
movsb
fld
or
ja
popw
xchg
cmp
jg
jnp
mov
sbb
and
call
les
push
outsl
cli
push
out
clc
ljmp
repnz
stos
mov
dec
mov
movsl
push
adc
pop
jno
scas
ljmp
fsubrl
xchg
or
pop
pop
lcall
fucom
fnstsw
mov
icebp
lcall
movsb
inc
std
sbb
push
inc
dec
mov
inc
cwtl
sub
js
push
ret
scas
test
jnp
repz
ret
ficoml
andb
sbb
inc
clc
cmp
jge
ljmp
mov
jle
mov
je
xchg
fsts
fs
push
pop
shlb
fdivr
jnp
bound
jge
ljmp
mov
xchg
sub
imul
scas
mov
in
das
mov
incl
add
dec
addl
fiaddl
loop
pop
imul
xorl
jnp
push
adcb
in
int
jnp
mov
mov
and
insl
fadd
fidivl
mov
rorb
mov
cmp
xor
out
repz
rcrb
xor
lcall
daa
in
cmp
push
scas
adc
cmpsl
sbb
dec
sub
aaa
mov
inc
into
incl
cld
fimuls
xlat
mov
push
or
out
cmp
shll
jns
insb
mov
test
dec
out
and
mov
call
or
iret
mov
jbe
sub
sub
mov
mov
jmp
call
icebp
push
clc
out
andb
or
es
clc
loope
adc
pushl
into
in
cmpsb
add
sti
add
xchg
pop
or
push
fcmovu
mov
add
inc
movsb
push
push
imul
pop
mov
lcall
jbe,pt
push
fldt
dec
xchg
mov
dec
push
int
dec
inc
cwtl
pop
mov
pushl
fwait
add
sarb
inc
inc
pop
and
push
fwait
stc
xor
lcall
fldcw
hlt
repz
rcll
and
add
js
int3
aam
jae
mov
jne
decl
mov
rcl
adc
je
imul
fmul
jo
dec
cld
inc
clc
or
loope
dec
sahf
lret
lcall
in
jo
dec
xor
jp
andb
dec
dec
cwtl
ficoml
adc
sub
incl
xchg
jbe
out
fildl
xchg
pusha
iret
push
stos
jns
push
add
mov
xchg
shrl
jmp
or
xor
in
or
hlt
incl
in
cmp
lods
mov
mov
gs
mov
and
cmpsl
ret
xor
push
sbb
jg
sahf
data16
adc
das
test
adc
sahf
pop
or
inc
add
jl
repnz
push
push
or
add
ret
mov
inc
mov
mov
jge
mov
lret
add
ret
pop
pushl
jmp
mov
imul
shll
adcb
shr
sbb
pop
pop
inc
jle
xchg
leave
dec
jmp
test
sub
dec
jno
lahf
push
aaa
movsb
out
or
stos
shll
or
stc
fimull
lock
push
mov
pop
stos
jne
std
clc
or
minps
adc
mov
jg
jmp
inc
js,pn
inc
mov
and
inc
dec
punpcklbw
decl
loope
and
push
enter
lds
mov
and
ror
lea
add
or
jecxz
into
or
loope
scas
inc
ret
lahf
push
push
popf
ss
jno
mov
pop
movsl
cmpl
add
rclb
and
fmuls
and
test
int3
inc
idiv
repz
mov
xchg
lret
pop
ljmp
ret
out
cmp
and
cmp
cltd
jb
ljmp
xchg
mov
push
xor
hlt
jnp
mov
lods
popf
pop
sub
or
cwtl
push
pushl
mov
enter
je
movsl
adc
push
fcoms
jp
mov
jg
adcb
mov
rcrb
rorl
bnd
leave
push
lret
mov
ds
repz
test
jmp
out
xor
out
adc
push
fbld
jg
addr16
out
fs
into
push
out
sub
pop
jg
lea
or
mov
mov
sti
dec
mov
cmc
arpl
dec
inc
fdivs
out
jno
sub
inc
inc
xlat
icebp
orl
in
cmp
mov
call
stos
cmovs
in
inc
pop
push
jno
loop
and
sbb
xchg
loop
stos
mov
cmp
pop
sub
mov
clc
push
test
pushl
xor
dec
sbb
lahf
inc
pop
pop
outsl
insl
push
adc
inc
fwait
mov
push
dec
repnz
int
mov
lods
repz
jnp
out
and
push
rcrb
pop
lock
jnp
jns
stos
mov
push
cmp
insl
add
loop
aaa
mov
xchg
call
ds
add
fistpl
xor
repz
jbe
xor
divb
fcmovnb
mov
ljmp
scas
cmp
xchg
push
sarl
adc
std
icebp
dec
mov
popf
jecxz
rol
and
xor
or
rorb
cmp
mov
nop
loope
in
inc
sub
cs
or
cmpsb
outsb
xchg
dec
movl
jmp
inc
mov
es
add
fld1
push
popf
dec
loop
es
test
mov
ljmp
out
fiaddl
mov
out
jns
inc
call
jne
insb
push
inc
adc
mov
pushl
and
out
outsl
and
push
or
xchg
jge
mov
adc
dec
mov
ljmp
repz
out
mov
inc
or
mov
push
jle
std
ljmp
jp
in
mov
add
orb
jl
movsb
xor
test
test
imul
out
mov
sub
cmp
push
call
mov
fsubrs
rorb
inc
lea
jbe
push
dec
xchg
insl
cmp
loope
mov
in
inc
dec
jne
fsubr
jbe
test
mov
fbstp
stos
add
lahf
decl
xchg
inc
adc
jmp
sub
push
flds
sti
adc
and
mov
data16
jnp
push
cmpb
adc
adc
push
aam
mov
or
mov
idivb
cmp
pop
sbb
rorl
hlt
mov
mov
cmp
cmpsl
sub
cmpsb
push
call
dec
and
cmpsl
xchg
stos
loopne
js
xchg
movb
mov
and
sbb
cmc
xor
sbb
outsb
add
sbbl
xchg
into
xchg
xchg
dec
subb
pushl
jmp
out
and
mov
and
add
pop
lcall
inc
ss
pushl
fst
lahf
push
mov
sbb
aas
adc
mov
xchg
or
pusha
repz
rorl
pop
sub
popf
push
pushf
jmp
xchg
inc
lock
or
add
les
ret
div
jmp
mov
inc
pminub
test
sbb
imul
inc
jg
jl
cmpsl
loopne
sar
decl
repz
stos
pusha
pop
int
push
cmp
insl
mov
ss
pop
jg
inc
pop
inc
in
or
xor
fidivrs
decl
iret
aad
loope
js
flds
les
sub
in
mov
outsl
inc
jbe
aas
xor
dec
andb
ret
and
jle
repnz
decl
push
mov
inc
jle
arpl
cmp
flds
in
cmp
push
out
imul
push
pop
js
mov
cmp
ret
aam
cmpsb
incl
and
movsb
xchg
adc
and
jecxz
sub
lcall
call
cmp
jno
add
xor
rol
rorl
mov
or
scas
iret
cwtl
xor
incl
adc
push
ljmp
imul
mov
ja
sub
lods
jmp
dec
in
lret
test
sub
pop
daa
ret
test
jo
push
adc
test
incl
adcb
cmp
mov
stos
xchg
int3
xor
ljmp
in
mov
push
push
mov
push
mov
xlat
sub
aam
add
or
mov
test
mov
out
pop
or
pop
mov
xor
sbb
incl
jns
dec
js
in
push
push
rolb
sbb
cmp
arpl
mov
fdivrl
jae
dec
movsb
les
jmp
js
add
jne
jae
int
fbld
je
dec
int3
or
incl
leave
fistpl
sbb
rorl
fstl
leave
xor
cltd
fcmovbe
into
pop
pop
pushl
xor
pop
mov
push
testb
fidivl
fimull
mov
push
cmpb
ljmp
das
pop
out
ret
lods
insb
nop
push
mov
pusha
es
test
mov
or
pop
and
dec
clc
inc
nop
xor
mov
test
in
adc
inc
pop
xchg
push
or
fnsave
sbb
das
pop
mov
sbb
fs
fisttps
cltd
add
mov
enter
lods
inc
movsl
int
adc
and
lcall
jmp
clc
enter
imul
pop
push
adc
jp
scas
je
popa
rorb
sub
xchg
lea
mov
xor
in
in
incl
cmpsl
fdivl
sbb
add
mov
xchg
loope
imul
jp
loope
mov
mov
cli
ja
int
push
mov
pop
icebp
and
fadds
sti
sbb
pushl
sub
dec
hlt
je
xchg
arpl
push
sub
loope
int3
mov
fcomip
lcall
jecxz
out
ljmp
mov
testb
cli
incl
inc
jno
lret
les
pop
insl
pusha
sbb
lcall
cmp
add
pop
aas
or
test
ret
out
ficompl
repz
jmp
dec
dec
xchg
loope
lods
mov
inc
or
nop
imul
vphaddbq
dec
xor
mov
jg
insl
dec
and
loop
fsts
jnp
cmpsb
stos
or
call
shld
jo
jbe
sahf
je
and
xor
out
xor
mov
aad
lcall
popf
jp
lods
jmp
add
shl
call
pop
cmpsb
test
xor
jp
or
sub
xor
pop
add
mov
mov
dec
sub
mov
push
and
sub
les
data16
lods
out
stc
push
outsl
push
cld
xlat
ror
push
fldenv
aas
pusha
jl
xlat
filds
pop
adc
push
scas
mov
out
adc
bound
movsb
jo
dec
lods
aam
ficompl
hlt
dec
dec
xchg
pop
jmp
jae
fstps
lea
mov
inc
or
hlt
stos
pop
xor
adc
jmp
add
sbb
cmpl
repnz
aaa
mov
xor
loopne
pop
call
ljmp
scas
sub
jl
or
icebp
inc
out
push
cmp
jne
mov
test
andb
sub
cld
aaa
jle
fs
xchg
sbbb
ljmp
inc
daa
or
mov
and
stc
lds
cmp
pop
dec
jp
jg
pop
and
int
rcl
xor
add
adc
mov
push
int3
mov
fdivs
es
or
push
xchg
imul
inc
xor
pop
jno
mov
push
movsb
out
loope
mov
cmp
xchg
int3
jl
fdivrp
push
jnp
sbbl
sbb
aas
cmpsb
inc
xchg
bound
xchg
mov
inc
xlat
xchg
lret
push
enter
pop
cmp
fcomi
sub
xchg
add
adc
insb
cmp
mov
popf
sbb
dec
lods
cmp
mov
dec
cmp
and
push
jecxz
int3
call
repz
subl
and
out
sbb
ljmp
ret
cmpsl
shrb
pop
xchg
add
adc
popf
xchg
inc
jne
dec
fs
ljmp
sbb
lcall
push
adc
and
aas
iret
mov
dec
lods
add
or
xchg
pop
sbb
lcall
pushl
dec
gs
sti
push
mov
push
jp
push
les
mov
mov
out
lcall
or
mov
fisttpll
sbb
int
sub
mov
jmp
aaa
shlb
mov
and
push
pop
and
negb
dec
xor
test
xchg
fwait
fs
xchg
adc
cmp
push
lcall
mov
lods
or
lock
jne
mov
sub
xchg
push
out
fdivr
cmp
adc
data16
pop
mov
xchg
subb
dec
pop
in
mov
std
jmp
lds
xchg
aam
mov
aaa
in
pushf
gs
xor
mov
test
out
xor
lret
jg
cld
ffreep
or
mov
incl
and
and
pop
ds
xor
cli
in
and
mov
mov
xchg
push
cmpsb
mov
inc
add
bound
fs
pop
pushl
sub
sbb
mov
jge
ds
cmpb
jne
fcomip
in
xchg
subb
cmpsb
jnp
lock
xchg
in
fwait
mov
push
cld
pop
pusha
cwtl
mov
xor
movsl
jmp
shlb
lcall
test
inc
ss
push
loopne
dec
mov
rcll
imul
nop
lcall
cmp
add
movsl
fdivl
pop
outsb
push
and
in
call
push
fidivl
icebp
inc
movsl
adc
js
push
test
push
cmp
mov
ljmp
cltd
hlt
xchg
cmpsb
aam
fldcw
lret
mov
cld
lock
ljmp
jl
pop
adc
pop
cmp
loope
aaa
movsl
scas
jbe
cmpsb
xchg
icebp
ds
imulb
in
sub
inc
ljmp
cmp
lret
addb
xchg
fstps
cmp
and
fsubrs
cli
call
test
out
mov
add
dec
enter
fsubrl
outsb
inc
nop
inc
cmp
shlb
jge
stos
popf
add
push
cld
clc
jg
in
jl
movsl
fnstcw
mov
xchg
int3
jge
loop
jmp
mov
mov
add
xlat
ljmp
mov
push
lahf
sub
fcmovbe
test
inc
mov
jge
sarb
pop
adc
jno
and
mov
lcall
lods
fnstsw
sbb
divb
lahf
xorl
into
dec
ret
lea
mov
jmp
and
daa
push
dec
push
mov
hlt
nop
addr16
push
repz
and
ss
jbe
lret
push
leave
insl
jmp
imul
fcoml
out
out
and
lahf
leave
jns
mov
mov
outsl
inc
popl
cli
outsb
mov
sub
popa
add
incl
sahf
jno
cmpsl
push
loope
mov
fs
push
movsl
add
out
or
adc
lock
incl
daa
jecxz
mov
ret
inc
xchg
push
and
push
pushf
jle
jp
xchg
xchg
das
sar
ljmp
divb
testl
js
clc
stc
scas
insl
popa
cmc
callw
push
jbe
inc
lock
std
pop
nop
push
mul
call
mov
sar
aaa
cld
incl
push
mov
daa
mov
mov
sti
pop
mov
decl
push
cwtl
es
inc
add
cli
adc
sub
cmpsl
adc
sub
xchg
decl
dec
xchg
sarb
scas
fistpll
mov
sbb
jl
imul
aas
dec
out
add
incl
push
mov
cltd
outsb
sub
dec
jge
mov
popa
cld
dec
sti
das
mov
mov
iret
lods
jecxz
xchg
push
mov
inc
cmp
hlt
icebp
push
pushw
mov
jae,pt
cmp
stos
stos
stos
clc
sahf
testb
cmp
js
decl
jb
aam
mov
mov
mov
inc
or
into
pop
pop
pop
inc
es
cli
jle
jmp
lods
mov
scas
pop
xor
das
xor
movsl
xor
pusha
xor
fstpl
inc
or
fmull
adcl
xchg
xor
adc
in
in
dec
std
mov
sti
decl
or
arpl
push
push
daa
mov
push
orl
xlat
inc
mov
jmp
iret
xchg
mov
andl
jns
cmp
std
mov
jge
mov
loope
sbb
xor
call
nop
and
movsl
lods
adc
decl
std
scas
adc
es
stc
inc
push
in
js
jb
cmpl
push
decl
lret
push
stc
dec
inc
jnp
mov
mov
sub
insb
popa
lahf
out
and
and
and
rcrb
add
lret
mov
mov
call
outsb
and
sbb
cltd
movntq
out
add
and
mov
es
call
push
xchg
mov
incl
insl
bound
xchg
jae
xchg
imul
jmp
jns
add
movl
gs
xchg
fcoms
mov
mov
and
fnstcw
xchg
cmc
call
jno
sub
mov
pop
outsb
in
jg
xor
sti
or
cld
outsl
pushl
in
dec
push
sub
fmull
cmpb
call
xor
adc
mov
inc
or
jmp
ljmp
dec
jge
add
mov
cmpsl
je
inc
fxch
imul
pop
inc
in
mov
std
jmp
mov
daa
jne
jne
inc
adc
mov
inc
arpl
sub
insb
out
ss
ljmp
add
and
mov
dec
pop
sub
into
into
push
mov
popf
lcall
lcall
mov
pop
jnp
repz
movl
sub
int3
clc
incl
and
mov
mov
gs
js
push
sub
call
pop
ret
sub
dec
out
cwtl
data16
mov
mov
std
fcoml
std
mov
fwait
mov
add
cmc
decl
in
fimull
push
pop
stos
jle
mov
inc
mov
push
cmpsl
std
jno
decl
xchg
popf
lret
push
lret
pop
push
mov
cltd
inc
fwait
sub
out
loop
inc
fnstcw
out
aad
or
std
sub
ja
out
jge
shll
mov
dec
or
bound
inc
in
push
sti
mov
xorl
cmp
aad
pop
mov
jge
les
nop
dec
subl
cltd
add
push
mov
lret
cmp
decl
popf
sarl
xchg
inc
push
adc
in
add
add
pushl
lds
ret
push
mov
cltd
push
pop
outsl
pop
cmp
sbb
sti
xor
push
dec
mov
sbb
int3
push
or
rclb
pop
addr16
or
insl
pop
add
dec
aad
jp
lods
inc
lret
out
add
push
mov
int3
lret
sbb
js
mov
sbb
decl
jmp
sub
ffreep
cmpsb
filds
sbb
jae
lea
dec
fxch
lds
dec
dec
ljmp
fwait
ss
jno
mov
aad
std
shlb
das
fimuls
sbb
cld
mov
je
ss
aaa
fucom
test
aad
in
mov
sbb
and
icebp
jmp
pop
mov
sti
movb
mov
push
xor
mov
decl
out
mov
cli
out
dec
shl
mov
sbb
loopne
aas
idiv
dec
fnstsw
adc
mov
ss
cmp
cwtl
mov
lods
sub
lods
adc
aaa
ret
xchg
adcl
inc
mov
in
sahf
test
jne
lret
fs
ljmp
shlb
in
xorb
sub
jmp
xchg
int
scas
je
ss
call
xchg
adc
pop
sti
push
das
out
cmp
mov
jb
pop
loopne
lret
popa
mov
pop
mov
in
mov
scas
orl
cwtl
mov
leave
loop
jge
push
xchg
push
mov
xchg
hlt
jmp
icebp
mov
jno
stos
jl
mov
xor
decl
andl
mov
pop
push
mov
call
mov
pop
push
mov
cmpsl
jl
mov
aam
imul
jbe
jbe
mov
incl
inc
adc
negl
movsl
mov
push
cmc
ds
dec
hlt
ljmp
add
sti
jmp
pop
aaa
mov
fists
mov
test
and
jmp
mov
and
push
xor
enter
int3
popa
or
mov
clc
mov
and
dec
mov
cmpsl
pop
mov
hlt
adc
ljmp
negl
in
repnz
into
mov
dec
push
fistl
xor
xor
inc
int3
cmp
sar
pushl
pop
in
fsubs
or
inc
xchg
mov
fneni(8087
jne
xlat
cwtl
aas
push
dec
xor
fwait
push
cmp
out
mov
lahf
xlat
in
repnz
es
fisubrs
ljmp
decb
into
dec
push
xchg
add
mov
push
dec
sbb
xor
cmpsb
pop
cmp
or
aas
sub
xchg
pop
push
push
aas
fwait
adc
add
jo
push
inc
dec
jmp
mov
lahf
gs
sbb
lcall
loop
cmc
cltd
push
mov
test
je
push
dec
mov
push
and
cmp
jmp
pop
clc
mov
pusha
aad
in
add
jecxz
outsb
xchg
sbb
pop
rcl
cli
pop
hlt
ljmp
cmp
push
mov
push
jl
popf
fwait
iret
adc
cmp
pop
sub
mov
sti
push
inc
pop
or
sahf
test
inc
shll
bound
call
out
fwait
clc
in
pop
daa
add
icebp
repnz
cmp
mov
jg
decl
inc
cmp
out
pop
sarl
dec
test
bsr
dec
shrl
or
inc
ds
js
add
mov
dec
je
rcll
je
xchg
push
sbb
push
fistpl
ss
dec
xor
in
jns
pop
lea
or
pop
pop
in
jg
jmp
call
cmc
cmp
and
xorl
and
iret
cld
xor
mov
push
mov
or
incl
inc
xor
mov
lock
push
xor
dec
pop
int3
cmp
cpuid
cmpsb
fildll
inc
jbe
pop
mov
test
lock
popf
pop
js
inc
jge
sub
cmp
add
incl
loop
and
fs
cld
xor
sbb
mov
cmp
jmp
push
mov
push
or
ljmp
cmp
sub
std
push
in
fdiv
int
scas
sbb
sub
add
lods
das
scas
xchg
fildll
fcmovne
dec
out
pop
pop
xchg
je
push
cmp
dec
cld
out
call
fcompl
xor
ret
xchg
sbb
arpl
ret
cld
xorl
push
aas
mov
mov
dec
sbb
pop
xor
xor
mulb
mov
mov
mov
push
inc
call
inc
sbb
lcall
xchg
jns
push
shrl
sbb
mov
cmp
fmuls
sbb
add
shl
inc
inc
shr
mov
jmp
ljmp
sbb
push
jbe
aad
sahf
inc
outsl
fsubl
sbb
or
jmp
in
mov
sub
test
out
pop
pop
xadd
push
pushl
push
icebp
mov
mov
or
and
loope
xchg
or
dec
leave
mov
sbb
jb
mov
lock
in
ja
lret
inc
adc
aas
cmp
cli
mov
lock
mov
push
pusha
in
xchg
pop
pushf
sbb
push
popa
or
lcall
jbe
cmpsb
dec
mov
sbb
loop
lcall
lcall
jg
xorl
push
xchg
xchg
lahf
dec
imul
fdiv
dec
mov
in
jge
mov
pushl
adc
notl
inc
fistl
in
or
xchg
dec
sar
cmp
inc
fstpt
inc
mov
ret
cli
jno
or
jne
or
and
xchg
xchg
push
out
dec
adc
pop
jg
lret
lock
rclb
ljmp
imull
xchg
rclb
aas
iret
mov
mov
push
test
jl
call
out
popf
pusha
mov
adc
decl
pop
mov
or
xchg
xchg
sub
jmp
lds
inc
fildll
decl
call
pop
dec
xchg
addr16
es
inc
sahf
push
lahf
or
cmc
or
add
push
add
inc
add
jb
pop
imul
testb
ljmp
cmp
stc
sub
push
adc
sbb
xchg
adcb
xchg
mov
decl
cmp
rorb
or
cmpsb
or
dec
flds
fnstenv
call
dec
movb
pop
xor
xlat
mov
and
in
xchg
push
addr16
aad
aad
sbb
lcall
fadds
daa
push
subb
mov
and
decl
cmpsb
add
inc
cli
std
and
insl
aas
sub
les
mov
cld
mov
ret
push
ljmp
in
fwait
jp
mulb
clc
sahf
jl
addr16
repnz
push
jp
ds
ljmp
push
in
das
xor
mov
mov
lods
loopne
push
sub
xor
pop
cmc
decl
mov
pushf
adc
ret
int
adc
or
pop
icebp
pop
mov
out
push
cmpb
adc
jmp
jbe
gs
les
clc
adc
mov
aad
fisubrs
sub
jge
xchg
popa
sub
pushl
jnp
jae
push
xchg
ja
sub
popa
xorb
pmuludq
jmp
daa
jmp
decl
cltd
lea
hlt
sbb
fwait
nop
out
jb
out
ret
lods
inc
call
subb
xor
and
mov
mov
push
jmp
out
xlat
xor
lcall
add
inc
lret
ret
ja
sbb
xchg
testl
cli
cmp
dec
pop
jbe
or
loop
jae
push
lods
mov
shlb
pop
ljmp
loopne
out
xor
cmpb
mov
lahf
add
jnp
sbb
ret
addr16
testb
and
sarl
add
cwtl
inc
pop
push
loope
std
inc
and
outsb
cs
and
mov
jb
stos
pop
aam
add
outsl
nop
incl
jecxz
int
mov
or
js
xor
stos
inc
pop
incl
or
out
nop
dec
adc
push
cmpb
push
ret
insl
call
popf
inc
cltd
and
pop
pop
add
clc
and
loope
or
stc
loopne
cmpsb
fwait
notb
aad
lcall
xchg
shlb
out
mov
or
maskmovq
negl
adc
call
jmp
jae
and
lret
mov
mov
mov
int3
out
or
adc
cmp
xchg
ljmp
jno
bound
pop
xor
sti
popl
into
lret
add
loopne
add
cli
jne
mov
idivb
mov
push
jl
push
adc
scas
mov
inc
mov
mov
hlt
sub
push
outsb
xor
cld
daa
mov
mov
inc
adc
jmp
mov
cltd
dec
jns
pop
fwait
adc
or
sub
cmp
xchg
and
incl
pop
inc
in
mov
inc
lret
leave
cmp
ds
adc
jmp
ja
inc
js
lret
out
repnz
fsubs
push
jno
sbb
roll
ret
fs
incl
sbb
fimull
xchg
call
or
xlat
xlat
cli
ljmp
pop
adc
call
repnz
sbb
jle
ljmp
ret
push
push
outsl
jp
aad
inc
mov
pop
cmp
fidivl
loopne
cmpl
test
mov
inc
fdivr
ljmp
std
cwtl
iret
faddl
push
imul
cld
or
lret
shr
pop
pushl
or
std
enter
jnp
mov
push
pop
inc
ljmp
ljmp
addr16
cltd
in
dec
shrb
pop
movsl
inc
pop
mov
insl
adc
lahf
es
jmp
repnz
ja
fisubrl
lret
or
sahf
aas
mov
pop
jecxz
mov
and
push
mov
test
cmpsb
ffree
fiadds
mov
loopne
jae
loop
lods
lock
cmpb
decl
inc
das
or
add
or
cmpsb
std
mov
mov
sbb
pushl
mov
push
adc
std
aas
dec
and
rcrl
scas
sbbb
dec
call
std
call
cmc
out
mov
inc
stos
jle
jnp
in
xchg
push
fstps
stos
cmp
call
testb
xchg
repnz
lds
pop
cli
xor
movl
fst
outsb
adc
insb
iret
mov
adc
pop
std
ljmp
push
and
dec
jecxz
das
imul
mov
shrb
fwait
xor
mov
int3
out
out
js
jle
out
add
dec
cld
addr16
pop
in
sbb
adc
std
add
sbb
jmp
mov
dec
dec
nop
push
push
movsl
jb
jmp
cmpl
jns
adc
sbb
movsl
nop
mov
loope
sarb
pushl
call
add
dec
lahf
add
sbb
jo
out
mov
pop
mov
clc
in
mov
shl
popf
fldt
test
lock
cli
jp
fscale
mov
push
xchg
jg
ss
dec
jmp
add
xor
ret
inc
cld
mov
jnp
pop
pushl
jecxz
inc
lcall
leave
loopne
jle
lahf
aaa
sti
jns
sub
dec
lahf
ud0
ljmp
cmp
jmp
push
inc
loop
push
fsubrs
xor
lock
popa
push
add
sbb
xor
leave
lcall
mov
mov
loop
fimull
xchg
mov
xor
push
xchg
inc
in
rol
rcrl
addl
cmp
nop
jp
mov
lock
and
loopne
fsubs
add
push
jne
dec
mov
ljmp
scas
jnp
dec
add
in
jnp
mov
sbb
in
out
dec
in
imul
shl
shll
shl
jmp
loop
and
add
call
aad
xchg
xor
xchg
dec
ret
add
ret
stc
mov
and
jmp
fstpl
sarb
fdivrl
ljmp
in
dec
mov
and
pop
mov
sub
ljmp
push
or
pop
cltd
in
jbe
mov
dec
push
pop
pop
jo
mov
jmp
gs
mov
pop
jmp
adc
inc
adc
decl
test
out
push
lret
sbb
mov
dec
popa
mov
mov
dec
fs
mull
incl
mov
mov
adcl
mov
xchg
movsl
pop
xchg
xor
stos
movsb
insb
icebp
fbld
ljmp
mov
dec
xchg
das
mov
mov
mov
ret
mov
mov
das
cli
sbb
incl
pop
push
lret
mov
leave
dec
das
int3
rol
cli
sbb
mov
adc
mov
dec
and
lods
fistps
and
adc
push
movsl
test
in
add
inc
xchg
sar
jmp
fdivrp
cmp
cltd
mov
mov
mov
pushl
adc
xor
cmp
les
negl
inc
fnstsw
jmp
xchg
pop
dec
js
mov
pop
jmp
enter
or
int
dec
push
dec
js
jg
outsl
jmp
cmp
addb
mov
lcall
jmp
cmp
int
shlb
outsl
stos
add
cmp
fwait
in
aaa
xor
sti
out
mov
cmpsl
mov
out
jge
xchg
mov
lcall
pop
sar
inc
cmpsl
or
adc
repz
fildll
hlt
in
icebp
dec
mov
insl
lret
fistps
pushl
xor
pop
xlat
inc
and
mov
push
ds
lret
adc
mov
incl
enter
jae
fbstp
lods
pop
xor
cwtl
xor
ljmp
outsb
xchg
popf
into
jo
test
scas
inc
mov
cs
sub
lcall
mov
dec
sbb
std
push
leave
mov
hlt
mov
add
cltd
xchg
ljmp
sar
mov
in
dec
or
das
jg
outsl
mov
nop
out
push
jmp
lcall
and
and
push
and
divl
cmp
call
dec
cmp
xchg
cmpsb
insl
repz
jae
mov
ret
aas
lds
lret
out
aam
test
int3
jbe
xchg
inc
jns
sarl
mov
and
rcll
xor
in
or
test
movsl
aas
add
push
dec
xor
dec
jmp
dec
orb
jle
ljmp
dec
and
subl
test
jno
xor
xchg
shll
clc
inc
sahf
sub
in
fidivrs
mov
push
inc
nop
addr16
mov
ds
or
jg
incl
lods
inc
xchg
fdivl
ja
movsl
sub
mov
pcmpeqb
fmull
fdivrl
mov
lret
and
jbe
jne
mov
aam
scas
mov
cli
fcmovnu
pop
repnz
fcmovnu
nop
or
fisttpll
in
xchg
mov
cvtps2pi
pop
idiv
outsl
jmp
push
dec
pushf
fnsave
repz
clc
dec
xchg
popf
stos
ds
mov
fdivrl
add
in
scas
mov
cmp
mov
xor
mov
decl
leave
popa
lock
sub
jns
push
xor
push
lret
cli
pop
fwait
daa
pop
sar
incl
loopne
jne
hlt
fs
push
sub
mov
mov
and
enter
mov
enter
xchg
pop
push
shr
lods
xor
fisubs
lret
xor
mov
dec
add
repnz
gs
mov
out
push
aas
in
mov
mov
xchg
test
mov
test
cmpsb
pusha
ljmp
outsl
fimuls
xor
mov
leave
fidivrs
adc
lret
jge
pop
inc
test
dec
dec
mov
or
lcall
sbb
sbbl
repnz
pop
je
movsl
xor
inc
shr
or
paddsb
insb
pop
nop
xor
fnstenv
cmp
cmp
sti
sbb
or
in
or
in
imul
movsb
fisttpll
jmp
lcall
push
ficompl
pop
inc
leave
or
mov
call
ret
loopne
mov
decl
cwtl
push
jno
lods
imul
mov
cltd
insl
xor
xor
dec
pop
stc
lret
jmp
inc
mov
shl
lock
mov
clc
jbe
lret
test
ficomps
or
ljmp
pop
jb
loope
cmp
add
mov
dec
outsb
pop
add
mov
repnz
scas
add
sub
decl
test
inc
aas
adc
mov
daa
out
mov
mov
or
jmp
cmp
mov
add
xlat
and
sbbb
mov
push
lcall
jle
or
sar
outsl
aam
adc
add
dec
mov
add
push
lds
out
mov
inc
pusha
pop
lea
xchg
les
cmc
fisttps
pop
fwait
pushl
fimuls
xchg
subl
or
aam
decl
scas
int3
jns
push
fnstcw
xorl
mov
add
cmp
jmp
pop
rcrl
sbb
push
jle
cmp
push
popf
aas
and
add
in
push
xchg
jmp
mov
sbb
out
inc
or
jle
rclb
cwtl
mov
decl
mov
cmpsl
push
stos
and
mov
dec
or
lods
mov
push
in
mov
pushf
addl
add
movsb
ds
jecxz
cmp
mov
ljmp
adc
xchg
dec
and
int
clc
push
fcomps
js
add
push
cmc
decl
or
mov
int3
orb
push
sbb
in
mov
mov
mov
sbbl
cmpsl
jl
mov
pop
int
cmpsb
std
pusha
hlt
inc
cltd
push
and
dec
adc
ljmp
aas
jmp
jp
dec
mov
out
fadds
dec
fidivrl
jnp
scas
icebp
sub
scas
pop
inc
and
inc
push
xchg
cmp
dec
sbb
lret
stos
xchg
pop
movsb
pop
rcl
dec
daa
push
adc
jge
sbb
xchg
int
xor
incl
jle
cmpsb
sar
push
fucom
cmp
sbb
jae
pop
or
out
ljmp
aad
pushl
pushl
or
je
gs
jp
scas
cmp
mov
pop
xlat
hlt
test
in
mov
scas
xor
test
and
sbb
aas
ret
mov
push
imul
je
xor
add
fldt
jmp
popa
aas
js
test
jecxz
decl
mov
fists
xchg
adc
fidivs
dec
ljmp
push
push
inc
fwait
inc
xchg
bound
dec
cmp
xchg
cmp
inc
jle
or
mov
arpl
inc
and
and
xor
or
ljmp
mov
inc
insl
in
stos
push
outsb
mov
dec
mov
cmp
xchg
mov
fwait
pop
cmp
call
adc
jle
cmp
mov
enter
aam
notrack
mov
jo
mov
xchg
inc
rcll
incl
mov
mov
adc
fldcw
outsb
and
fsubl
jae
daa
mov
outsl
rcrl
std
push
leave
dec
out
lods
sub
incl
push
mov
dec
imul
mov
add
aaa
xchg
out
push
inc
nop
test
fsubl
jbe
xchg
shrl
or
xor
pop
sbb
jmp
iret
ret
loopne
test
lds
xchg
in
ds
pusha
mov
cmp
mov
mov
push
stos
push
movsl
incb
inc
cmp
mov
jmp
cmp
pop
pop
and
cmc
jnp
imul
xchg
and
ljmp
pop
adcl
mov
test
sahf
or
out
push
out
adc
cmp
adc
scas
into
jp
push
jmp
fdiv
repz
mov
or
jecxz
popf
xor
lods
lcall
out
and
cs
xor
shll
stos
push
in
push
push
mov
xlat
inc
cmp
jge
sbb
dec
jmp
sub
unpcklps
mov
mov
dec
cmp
pop
mov
and
pop
push
ljmp
push
push
jo
mov
icebp
fstpt
mov
jns
decl
lcall
aad
add
dec
sahf
mov
ljmp
jle
inc
xor
mull
sarl
loopne
stos
sub
adc
cmp
or
sub
jmp
shr
ja
pop
xor
call
push
xor
xor
and
iret
rcl
fisttps
push
sti
cltd
push
jmp
jp
mov
adc
lcall
cltd
pop
aaa
ds
or
sbb
lea
jecxz
ret
adc
stc
ljmp
mov
add
mov
dec
sahf
mov
in
aaa
mov
jno
js
outsb
push
cli
pop
push
add
and
test
inc
daa
and
scas
lcall
jmp
clc
jmp
pop
lahf
or
jo
in
mov
sbb
outsb
sub
jnp
xchg
cli
scas
and
cmp
push
jl
sahf
rcrl
mov
xor
sub
enter
jmp
mov
rcll
ds
lods
cmp
and
mov
aaa
jle
xor
shl
loopne
add
decl
dec
out
out
dec
lods
repz
sub
aam
movsl
sub
movsl
fldt
out
clc
pushl
ret
or
push
push
js
pop
pushf
pop
fmull
icebp
jl
add
inc
mov
scas
js
test
mov
stos
push
loope
push
sbb
fsubrs
push
pushl
xchg
into
loope
stos
jns
shl
bound
push
add
push
xlat
pop
insl
icebp
or
cmpsb
jmp
adc
xor
shll
mov
aam
jo
outsb
mov
xchg
lcall
arpl
cmpsl
jb
loop
mov
inc
sub
shll
movb
decl
and
or
pushf
cmc
in
dec
imulb
mov
jg
int3
pop
pop
imul
out
stc
clc
call
std
aaa
movsb
push
out
mov
nop
push
sbb
push
insb
std
out
dec
xor
daa
sub
pop
test
shlb
mov
pop
adc
fdivl
cmpsb
ret
push
mov
bound
stos
ja
push
xchg
xchg
xor
in
mov
stc
shrl
ljmp
xchg
pusha
aad
mov
cwtl
fdivrs
pop
xchg
movb
jmp
jne
and
add
fistpll
int3
clc
bound
cli
sahf
lods
xchg
mov
mov
rep
ljmp
push
pop
sub
push
inc
movsl
insl
xor
pop
jbe
repz
iret
rclb
test
lods
call
or
sbb
push
mov
add
add
xchg
stos
and
repz
jmp
lret
lcall
jmp
fnsave
jns
ja
arpl
fdivp
mov
pop
test
and
repnz
repnz
pop
cmp
in
ljmp
shll
dec
int
aas
dec
sbb
and
sub
js
add
mov
leave
push
mov
dec
push
jno
scas
jnp
fisubrs
jno
jns
adc
xchg
dec
stos
mov
ret
jecxz
jmp
shll
sbb
pushl
std
test
sbb
pushl
xchg
cmpsb
fs
jnp
adc
cmpsb
or
mov
insl
or
filds
jns
cmp
int3
jg
push
imull
imul
xchg
cwtl
test
fs
mov
jo
jl
push
mov
inc
cld
decl
xor
gs
lock
inc
cmpsb
int3
inc
mov
psubsb
sub
lock
insl
insl
or
test
cmp
mov
adc
flds
fimuls
or
cmp
adc
sar
jmp
mov
mov
adc
insb
push
das
jle
mov
cwtl
out
incl
cmp
or
lods
mov
dec
aaa
add
in
and
insl
gs
ljmp
mov
aad
sub
adc
sub
xchg
cmpsl
sbb
pushl
dec
cmp
cmp
dec
mov
ffreep
mov
sub
arpl
iret
pusha
jns
lcall
add
dec
and
subl
and
popf
jecxz
cmp
add
stc
push
shlb
push
add
jecxz
sub
icebp
cmp
pop
adc
movsl
jecxz
mov
fildl
push
pop
icebp
mov
sti
dec
mov
insb
cwtl
push
mov
xor
mov
loope
mov
test
lock
call
cmp
xlat
sbb
push
xchg
js
mov
loopne
push
mov
lock
fcomip
cli
pop
push
xor
adc
cld
enter
xor
loope
push
jge
sarb
ficomps
lock
es
test
xchg
shlb
cld
aaa
cld
ljmp
frstor
pop
mov
dec
adc
dec
jecxz
decl
stc
loopne
rol
sub
hlt
adc
fucom
pop
lods
adc
aad
in
xchg
movsb
loop
decl
das
lock
adc
xor
push
mov
mov
daa
xchg
and
inc
or
into
nop
sbb
shlb
mov
decl
sub
inc
std
sarl
mov
into
jbe
push
dec
test
dec
xchg
call
push
insb
xor
push
loop
adc
cmp
push
adc
pushl
shlb
add
or
mov
mov
mov
mov
lea
jecxz
and
ljmp
in
pop
popf
popf
pop
inc
xor
call
mov
loopne
and
cli
jp
in
jl
xchg
and
sub
insl
and
cli
cwtl
rclb
ret
xor
pop
cmp
inc
jl
add
scas
lret
ja
aaa
xchg
mov
xorb
std
insl
rcr
clc
mov
mov
outsl
pop
fsubrl
outsb
inc
mov
aas
xchg
rcr
int
sub
arpl
add
ss
int3
sbb
aas
sub
inc
push
aam
mov
lcall
or
daa
call
add
jb
repnz
or
addr16
dec
idivl
mov
repz
push
adc
cmp
aas
dec
ja
sbb
in
dec
and
scas
clc
jno
and
pushf
xor
mov
imul
mov
inc
push
inc
lods
cmp
mov
push
lods
test
daa
mov
in
lea
sub
mov
test
mov
or
mov
call
ljmp
clc
add
outsb
sbbb
stos
jp
dec
inc
or
cmpsl
mov
xchg
and
inc
ret
jns
fdivrs
xlat
arpl
inc
ds
or
repz
mov
add
sub
and
into
mov
pop
cli
aad
push
sbb
xchg
cltd
or
cwtl
lock
test
insb
aaa
test
sub
mov
mov
sub
mov
aad
scas
mov
add
dec
stc
mov
adc
decl
mov
leave
pop
push
push
aam
add
or
mov
push
and
aam
outsb
dec
cli
decl
out
xchg
jnp
rcrb
ljmp
push
add
outsb
sbb
loop
insl
test
cmpsb
or
cmpl
push
mov
mov
mov
clc
imul
shlb
in
xchg
addr16
rorb
jne
call
xor
pop
dec
scas
repz
inc
mov
inc
mov
rdtsc
push
xchg
sar
lcall
mov
daa
repnz
sbb
in
fisubrl
jo
inc
mov
lcall
incl
out
dec
jb
sub
jno
fdivrs
xchg
mov
xor
cmp
sub
aas
repnz
mov
xor
stc
mov
push
inc
inc
fwait
jns
ficompl
stos
andb
inc
jle
mov
adc
das
shrb
mov
xchg
cmp
addb
subb
jg
pushl
xor
es
cwtl
cs
mov
imul
mov
lods
inc
fcos
std
repz
jl
jo
xchg
into
mov
pusha
div
negl
gs
mov
loopne
daa
mov
mov
inc
adc
jecxz
xor
std
pop
xchg
jl
in
mov
mov
inc
mov
push
stos
cli
xor
rcrb
xchg
out
lds
push
and
lahf
pop
pop
sub
add
pushl
mov
je
cli
jae
mov
lcall
sarb
mov
adc
xchg
xchg
lcall
sub
or
pushl
mov
mov
sub
pop
xchg
enter
stc
mov
lods
or
or
pop
scas
jbe
repz
inc
jb
and
into
and
jno
and
call
mov
push
mov
add
cmpsb
in
repnz
shr
in
mov
fldenv
ljmp
jmp
clc
push
test
test
cmpsb
push
aad
dec
in
mov
push
pop
popa
xor
lcall
jl
mov
lret
inc
cmp
cltd
popa
notl
imul
cmp
inc
cmp
nop
in
fdivs
inc
xchg
xor
sbb
in
fidivrs
jge
pop
jb
movsb
jno
in
mov
sar
jmp
jno
push
clc
mov
negl
mov
add
adc
decl
cld
mov
cmp
mov
scas
jmp
mov
inc
mov
mov
fldenv
sbb
cmpsb
inc
adc
nop
or
cltd
sbb
sub
xchg
xor
inc
inc
sub
sub
pop
and
cwtl
dec
imul
push
int3
lcall
xchg
cmp
call
pop
xor
and
scas
ljmp
out
sbb
mov
ljmp
cs
mov
push
jno
push
push
xlat
mov
loopne
shrb
fbstp
call
jle
xor
and
lock
subl
bound
pop
mov
scas
cli
call
outsl
dec
das
pop
and
dec
and
adc
insb
lret
out
sbb
test
fidivrl
in
into
pop
pop
cmp
out
push
xchg
jp
xchg
cld
sbb
sti
mov
xor
xor
dec
mov
aam
outsl
pop
cmp
xchg
mov
lcall
dec
sarb
cltd
stos
inc
data16
enter
outsl
dec
sub
sub
or
faddl
inc
es
call
lock
xor
fsub
fld
pop
aas
insb
and
cmp
jb
call
lock
dec
jne
mov
mov
jno
arpl
test
push
mov
mov
test
cs
jo
cmpsl
mov
dec
sahf
das
clc
roll
movsl
enter
stos
sub
in
jo
imul
add
and
in
cmpsb
and
enter
cltd
jbe
lcall
mov
adc
cmpsw
incb
cmp
pop
add
pop
std
lcall
sbb
inc
sahf
push
push
popf
and
stos
jae
movsl
sbb
mov
inc
aam
es
add
xor
lods
mov
inc
add
jmp
icebp
sbb
lret
cmp
mov
xchg
div
in
out
and
adc
into
call
cld
in
stc
push
insb
adc
outsb
mov
sbb
mov
add
pushl
movsl
shll
mov
inc
sbb
mov
dec
fwait
imul
repnz
inc
xor
adc
incl
repz
cld
out
jne
cltd
xor
inc
out
or
mov
ljmp
adc
pop
mov
mov
dec
ret
pop
xor
jmp
scas
mov
or
test
mov
sti
hlt
cli
cltd
pushf
iret
test
ljmp
inc
dec
leave
jp
scas
stos
into
inc
call
shll
nop
xor
ljmp
lahf
insb
psubusb
addr16
cli
cmc
fsubrs
std
pop
movsl
mov
and
pop
popf
or
lea
pushl
mov
sub
push
inc
mov
mov
mov
outsb
pushf
inc
xlat
nop
jecxz
fs
cmp
sbb
add
xor
adc
and
jecxz
inc
in
rcl
shlb
ret
fs
mov
les
lahf
out
mov
pusha
mov
call
popl
mov
jns
dec
fcmovne
jo
adc
pop
adc
outsb
jne
stos
ret
jmp
xchg
jge
mov
pop
fwait
cmc
imul
imul
loopne
mov
fsubr
xchg
lcall
into
ja
in
out
dec
xor
cmp
inc
mov
cmc
jecxz
out
add
inc
inc
sar
incl
shrd
xchg
mov
enter
inc
inc
sub
ljmp
push
bound
pop
mov
nop
mov
fwait
cmpsl
or
adc
xorb
lcall
or
cmp
xor
xchg
clc
pop
lret
cmp
pop
add
pusha
filds
dec
hlt
in
ret
incl
aam
pop
cmpsb
and
fisttpl
mov
jg
or
cld
cmp
or
sbb
lret
inc
inc
pop
xor
lcall
jmp
cmp
jmp
cmc
adc
and
lcall
inc
dec
and
lret
scas
xor
sub
push
cmp
out
jbe
bswap
pop
xor
mov
es
mov
fbld
loope
enter
pusha
pop
push
cmp
pop
mov
in
movb
loope
xchg
jg
add
pusha
or
cwtl
incl
das
jge
sbb
sti
dec
in
lods
jo
pop
jo
mov
scas
xchg
lahf
mov
inc
call
std
aaa
aas
cltd
mov
mov
mov
xchg
test
adc
mov
fdivr
pusha
mov
mov
jb
dec
mov
jecxz
jnp
in
and
in
outsb
scas
popa
arpl
push
cli
cmp
call
push
xchg
inc
push
into
stc
mov
cmp
cwtl
inc
imul
push
insb
push
ljmp
rcrb
mov
xor
sub
cmpps
pop
enter
inc
incl
movsb
stos
dec
int3
in
stos
in
sbb
scas
cli
call
test
sahf
gs
stc
cwtl
lcall
push
mov
push
cmp
dec
sbb
cmp
out
daa
or
mov
shl
push
xchg
iret
jmp
push
sbb
inc
sar
mov
mov
pop
jo
dec
sub
ret
loop
push
cmpsb
and
xchg
cmpsl
out
incl
lcall
dec
es
clc
xchg
scas
add
jmp
jle
push
xchg
aad
es
rcrl
mov
lds
or
jb
mov
clc
adc
push
jns
inc
mov
xor
mov
call
fisttps
xor
xor
mov
push
filds
mov
ss
cwtl
into
cmpsb
lock
sbb
pop
popf
cwtl
clc
cli
fsubp
inc
mov
loopne
fcomip
push
shll
into
leave
daa
rclb
jns
ss
call
stos
icebp
add
adc
mov
iret
add
loop
jae
adc
jge,pt
das
movb
out
enter
xchg
jg
mov
adc
mov
jmp
movsb
rclb
ljmp
pusha
lods
stos
pushf
adc
pop
mov
lret
outsb
mov
add
out
lret
inc
fwait
cli
call
stos
dec
call
jmp
cmp
adc
push
sub
aad
mov
sbb
aaa
cld
scas
xchg
and
lahf
sti
enter
dec
pop
mov
mov
mov
into
mov
loop
pop
push
mov
and
movsb
in
insl
jle
mov
nopl
lods
add
cld
and
testb
sti
xor
call
sub
cmpsb
addr16
jb
mov
pusha
repz
and
dec
jle
xchg
cmc
mov
enter
push
push
rclb
xchg
lahf
aad
cmp
fbld
jno
pop
xchg
inc
sub
fisubrl
cmp
sbb
ja
xor
lcall
pushf
ret
sbb
fsts
mov
negl
sbb
incl
insb
cmpsl
gs
pop
insb
hlt
stc
sbb
push
arpl
push
hlt
add
call
sti
test
adc
push
cmp
fistl
inc
push
test
mov
shrl
stc
sti
mov
mov
mov
xchg
loop
fldenv
bound
jno
adc
call
xchg
call
sub
inc
loop
lret
mov
or
adc
fimuls
sbb
mov
add
leave
ss
out
orb
das
mov
jg,pn
add
xchg
and
push
inc
or
xchg
mov
add
fidivl
jo
jnp
lret
addb
inc
xchg
test
jp
or
mov
out
stos
adc
and
out
mov
jo
imul
or
insl
xor
add
inc
lods
mov
or
mov
test
add
adc
sbb
xor
push
lds
and
push
jns
cmp
inc
gs
gs
adc
adc
add
sbb
push
outsl
outsl
insb
push
push
xchg
jo
test
in
push
and
gs
push
fwait
insl
sub
sbb
mov
inc
outsb
imul
jae
sub
or
into
adc
imul
push
ret
ss
fdivrp
dec
jne
js
stos
pop
inc
fisttps
dec
rsqrtps
lea
inc
dec
out
jbe
jns
push
imul
and
and
pop
mov
adc
push
es
mov
test
insl
insl
push
add
inc
mov
mov
sub
imul
inc
and
jnp
addb
jbe
sti
xorl
fcmovnb
sbb
cmp
addr16
adc
push
inc
into
mov
outsl
loope
pop
or
inc
icebp
inc
and
rcrb
pop
js
sbb
outsl
mov
notl
ds
insb
jne
mov
rcrl
inc
jne
data16
xor
mov
add
insl
or
jo
inc
push
fildl
inc
xchg
inc
sbb
fdivs
clc
loopne
push
out
popa
arpl
sbb
adc
pop
push
gs
inc
int
push
and
stos
sub
popa
or
pop
nop
jle
adc
pop
ret
jnp
cmp
pop
or
or
and
adc
addb
jo
packuswb
push
pop
mov
jo
ret
mov
dec
inc
dec
sbb
outsb
push
lods
sbb
je
insb
mov
cmp
jns
scas
fisttpl
shll
pop
sbb
sbb
or
pop
push
xor
xchg
add
in
sbb
mov
lods
cmp
clc
outsl
popw
xor
xchg
push
call
mov
arpl
jge
cmp
xor
xchg
push
jne
bound
xor
ficomps
sub
dec
jae
jbe
enter
mov
dec
inc
dec
iret
adc
or
pop
sub
pushf
pop
inc
fisubl
sub
jb
cmc
mov
pop
fs
pop
mov
xchg
lods
xor
add
jne
pop
rcll
sub
popa
orl
or
cmp
and
xor
ret
popa
es
jp
xchg
popf
ret
fcomps
repz
insl
sbb
mov
in
sbb
lock
aas
or
loop
mov
jp
outsl
jns
adc
int
push
dec
pusha
stos
push
in
adc
jne
lods
pop
repz
add
aaa
andl
fs
xlat
fildl
iret
sub
sbbl
push
and
push
pop
ficompl
popa
jno
push
or
rcl
shrl
xor
adc
arpl
jb
test
add
sbb
mov
cltd
push
cmp
or
sbb
sbb
bound
outsl
jne
adc
adc
pop
and
push
pop
mov
mov
insb
out
loope
push
jne
inc
in
inc
out
mov
and
mov
in
arpl
int3
xor
xor
ds
loopne
cmp
mov
sbb
loopne
mov
jecxz
add
inc
and
mov
lret
xor
xchg
dec
outsl
mov
pushf
push
mov
inc
lods
rep
and
outsl
jae
in
xchg
popf
out
outsl
cmc
mov
sbb
mov
inc
jbe
test
dec
push
add
into
xorb
mov
push
dec
gs
push
or
mov
mov
push
mov
mov
add
ds
dec
stos
xchg
shlb
mov
arpl
cli
rorb
xchg
mov
push
loop
cmpsl
adc
cmp
rcll
dec
cmp
outsb
and
inc
sbb
pusha
test
aaa
popf
lret
into
loope
adc
outsb
in
sarl
popa
shll
sbb
and
roll
sub
add
or
outsb
ret
add
dec
rol
add
nop
popa
ffreep
jmp
sahf
mov
add
dec
mov
loope
cmp
push
inc
jb
jns
popf
xchg
and
aam
inc
in
inc
push
into
jo
bound
inc
inc
lds
arpl
fistpl
std
inc
imul
push
lods
inc
loop
fs
push
add
js
ja
xor
insb
out
lock
insb
jle
push
xor
punpckldq
inc
dec
lcallw
mov
xchg
mov
xor
lds
test
cmc
adc
leave
jl
add
idivb
enter
and
bound
sbb
xchg
into
push
mov
jmp
sar
test
loop
shlb
inc
dec
push
not
xor
pop
xor
shlb
and
or
in
mov
outsb
inc
push
push
adc
bound
adc
push
pop
sahf
icebp
ja
jnp
or
dec
outsb
dec
in
jno
or
stc
xor
jnp
ret
add
add
mov
mov
imul
movsb
lcall
sub
paddsw
xchg
mov
cmpsb
xor
adc
jecxz
push
jmp
or
push
pop
mov
and
adc
outsl
inc
xor
mov
jo
sbb
adc
ret
pop
std
push
jb
inc
jae
jo
sbb
add
jb
and
pop
pop
gs
or
xor
push
pop
shll
imul
pop
cwtl
lock
shlb
push
js
dec
jo
jmp
jl
cs
and
ret
inc
mov
pop
subb
push
mov
or
sbb
and
movsb
xchg
in
dec
in
data16
dec
outsb
adc
and
mov
lret
xorb
nop
scas
arpl
pop
imul
aas
imul
lcall
icebp
icebp
push
mov
mov
pushl
je
pop
fistl
ljmp
dec
cmp
shl
std
jmp
jb
clc
dec
mov
xchg
orl
lret
fnstsw
insb
mov
mov
ret
cld
popa
imul
add
or
movsb
ja
adc
adc
dec
hlt
and
jmp
mov
cmpsb
insb
adc
mov
jg
outsb
ja
sbb
sub
mov
or
popa
sar
nop
cltd
test
mov
or
mov
pop
push
dec
mov
test
std
imul
adcl
cmp
inc
mov
and
sub
dec
inc
mov
daa
jbe
inc
cmp
outsb
inc
shll
aas
adc
movhps
sub
mov
leave
xchg
icebp
pop
data16
push
popf
mov
and
jl
mov
or
and
dec
popw
imul
add
sub
ret
mov
add
pop
pop
mov
or
or
add
scas
inc
jp
stos
js
data16
fs
mov
outsl
movsl
pop
lcall
adc
add
insb
addl
add
ret
call
ret
sbb
dec
in
addr16
fs
push
push
inc
out
adc
add
incl
inc
fs
sbb
adc
inc
mov
adc
data16
jnp
xchg
popa
ffreep
jo
add
pop
in
add
mov
jae
ds
es
pop
jnp
dec
imul
dec
fxch
inc
push
cmp
inc
push
nop
jge
or
fnstcw
sbb
inc
fsubs
pusha
or
mov
inc
mov
mov
mov
add
fcmovbe
push
dec
jnp
or
adc
pop
adcb
pop
fiaddl
or
cld
repz
add
pusha
pop
add
movsl
or
mov
mov
dec
addb
testl
mul
and
add
and
jb,pn
or
cmpsb
popa
adc
push
mov
mov
inc
cs
out
sbb
aaa
mov
push
dec
rcrb
jb
push
xlat
out
cmpsb
mov
lahf
sub
sbb
adc
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
mov
pop
inc
add
add
