fcomp
decl
and
add
mov
or
sub
or
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
std
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
push
push
xor
push
mov
adc
cmc
adc
fisubrs
les
adc
incl
sbb
clc
imul
add
push
mov
push
push
push
xor
je
push
push
push
push
idiv
data16
in
sbb
clc
add
pop
sbb
inc
pop
shlb
nop
jne
pop
pop
pop
lcall
repnz
add
or
inc
or
jle
dec
push
xadd
dec
test
jg
mov
mov
push
mov
mov
call
ret
pop
add
fdivr
inc
push
push
mov
pop
mov
mov
les
insb
and
mov
insb
and
push
push
js
test
roll
pop
sub
dec
andl
pop
fsubrl
push
xor
notl
sbb
push
and
push
cmp
push
add
test
push
cs
dec
cltd
adc
bnd
pop
mov
push
xchg
dec
add
cmp
je
sbb
jle
add
push
adc
lock
dec
add
mov
add
xor
xor
sub
in
mov
push
and
divb
sbb
pop
repnz
mov
shrb
push
mov
adc
data16
mov
mov
inc
lock
lret
lds
test
sbb
int
add
loopne
ret
fists
pop
sbb
push
push
mov
or
fldt
mov
xor
sub
ds
ret
aaa
pop
pop
add
mov
push
jge
jle
mov
outsl
mov
jb
push
push
mov
or
in
mov
sete
jp
push
push
into
nop
or
icebp
push
enter
je
rorl
or
cmp
dec
fstpt
les
add
push
push
pop
jb
in
mov
aam
add
sbbl
inc
add
filds
fwait
push
loopne
push
aam
xor
jle
xor
daa
sbb
inc
aam
xor
push
push
xchg
xchg
and
dec
push
mov
lea
or
repz
icebp
jle
adc
jl
cmpsb
dec
add
and
lret
aaa
lods
nop
xchg
pusha
and
and
dec
test
jbe
push
jae
sub
sub
push
mov
rcrl
and
mov
mov
and
lea
cmp
jge
mov
push
jle
in
pop
pop
cmpsb
mov
pop
ret
xor
adc
iret
repz
dec
dec
push
sub
lds
add
and
pop
stc
pop
faddp
jl
mov
les
inc
les
leave
lcall
cmp
jae
clc
mov
pop
cld
sti
mov
call
dec
lea
mov
and
insb
add
mov
and
add
and
inc
xor
inc
xlat
imul
add
add
leave
xlat
pusha
push
add
ljmp
mov
push
adc
je
fcomip
je
xchg
out
sbb
add
inc
add
dec
in
dec
inc
push
cmp
bswap
push
add
call
inc
mov
ss
xchg
fstpl
lock
je
or
pop
jl
and
pop
push
mov
aas
sub
push
das
repz
sbb
inc
hlt
nop
test
mov
dec
hlt
mov
or
dec
push
xchg
and
inc
cmp
mov
testl
pop
inc
xor
lds
inc
cmp
mov
je
or
cmp
and
xor
xor
mov
lock
add
gs
inc
push
lea
push
push
movsb
fsubrs
cltd
fistps
ds
xor
cmpsb
add
stos
jge
subb
sti
shl
push
jg
dec
or
test
push
adc
rol
add
sbb
pop
nop
add
or
pop
mov
jb
sub
mov
pop
sbb
dec
in
sbb
addps
cld
or
sub
jno
icebp
cli
inc
arpl
ret
inc
sbb
jo
mov
pusha
push
push
mov
or
push
add
push
push
dec
push
fsubrs
loopne
or
imul
pop
push
pusha
sbb
xlat
fcmovnbe
sete
test
test
in
sbb
inc
xchg
inc
cmp
xchg
and
add
inc
xchg
iret
xor
aam
test
pop
push
fst
or
sbb
rclb
andl
movsb
or
pusha
lds
jmp
test
cvttps2pi
test
adcl
js
jne
push
jle
adcl
je
adc
or
jecxz
lahf
inc
cs
push
push
or
add
and
pop
xchg
adc
mov
adc
push
lcall
push
dec
fs
and
mov
aas
push
push
pop
push
or
or
xor
icebp
mov
cli
cmpsb
jo
push
ljmp
fmuls
and
mov
jl
scas
dec
push
cmp
cmpsl
cmpsl
cmp
push
inc
or
adc
push
mov
xlat
sub
enter
push
inc
loopne
repnz
push
mov
pusha
rorb
fs
sbb
ret
jle
sbb
mov
aad
dec
xor
test
and
sbb
dec
movsb
xchg
icebp
sbb
jno
push
xor
jle
sbb
push
mov
mov
push
add
fdivrp
adc
dec
mov
inc
movb
arpl
push
mov
jnp
aas
js
xor
mov
xchg
scas
push
pop
and
push
sub
mov
rolb
in
push
mov
cmp
mov
adc
icebp
clc
jbe
lea
popf
cmp
or
push
mov
add
pop
cmp
or
movlhps
mov
sbb
data16
test
sub
mov
js
or
rolb
test
xchg
repz
test
lea
je
add
xor
fcoml
push
shlb
sarb
cld
mov
sub
cmp
mov
jns
cmp
push
inc
mov
sub
repnz
fcmovb
xchg
sbb
fbstp
add
adc
cmp
jle
or
sbb
das
insb
or
mov
jecxz
mov
mov
jmp
and
mov
mov
add
mov
or
test
jo
sbb
pop
mov
sbb
mov
pop
pop
icebp
jns
jmp
or
sbb
sbb
xchg
popa
mov
push
lcall
xchg
jne
sub
lods
mov
orl
dec
test
jg
sbb
push
cli
jmp
cmc
lea
pusha
sub
mov
mov
pop
and
aas
cli
mov
les
pop
push
sub
push
push
jne
push
ljmp
sub
outsb
std
mov
cmp
or
xor
mov
jns
mov
sbb
sub
in
push
or
or
adc
jle
jne
mov
mov
insb
sub
das
aam
ds
inc
lods
sbb
push
push
fsubrl
je
sub
cmp
je
in
mov
push
ljmp
enter
or
clc
push
or
mov
xchg
mov
or
adc
pushf
pop
cltd
mov
rorb
pop
jg
aad
ja
add
push
push
lock
pushf
and
sbb
sub
pop
ret
sub
std
add
fistps
out
adc
cmpsl
call
jg
aas
adc
adc
call
inc
cmp
jl
xlat
ret
jg
push
mov
or
fs
bnd
push
js
jne
mov
jb
cmp
jbe
rcr
add
gs
jle
js
mov
or
shlb
popf
mov
push
aaa
jbe
adc
adc
outsl
movsb
add
and
mov
ret
mov
and
mov
and
lock
std
ljmp
cli
into
sbb
jmp
ljmp
mov
lea
add
inc
test
jne
sub
push
push
and
adc
rcll
mov
xchg
js
les
or
cmp
js
adc
jg
ds
mov
insb
jne
adc
add
mov
dec
es
lea
pop
fcom
push
sub
and
cmp
popa
inc
test
add
jge
xor
mov
sbb
icebp
clc
cmp
jl
xor
mov
sbb
pop
pop
ret
mov
push
aaa
pop
sbb
adc
jg
daa
push
jl
rcrl
or
inc
pusha
loop
fists
lock
movsl
lahf
jne
pop
aad
pusha
mov
sbb
jae
rol
or
shl
inc
adcl
loopne
fs
adc
mov
dec
rcrb
fists
aaa
mov
out
test
mov
mov
call
jge
push
call
mov
or
clc
jle
mov
insl
mov
cmp
pop
mov
test
sbb
sub
lea
push
or
cmp
incb
mov
add
cld
adc
cmp
ja
add
jmp
or
mov
insb
fcoml
add
push
aam
xor
mov
clc
cwtl
jl
inc
jo
jg
mov
mov
movb
pop
pop
dec
pop
ret
cmpb
push
test
inc
lock
mov
je
js
push
insb
jge
sub
add
ror
adc
movl
or
push
adc
ret
adc
in
adc
cmp
push
dec
push
cld
loopne
loopne
push
fld
or
pop
pop
jns
cmp
push
ds
jne
enter
mov
jp
testl
or
lret
repz
clc
mov
cld
cmp
ja
push
clc
lea
push
push
push
ss
xorb
ret
mov
push
add
invd
mov
sarl
fcomip
add
adc
scas
les
sub
loopne
pop
add
call
xlat
push
or
push
js
loop
add
addr16
push
push
push
or
fildll
push
pop
push
push
lea
add
jne
add
int
pop
lcall
xlat
or
or
push
or
adc
pop
sarl
add
jecxz
lods
ret
ja
mov
sarl
pop
mov
sub
inc
lds
aaa
and
out
adc
je
cmpl
inc
outsl
jg
lea
jl
mov
push
jne
push
imul
iret
jnp
jns
adc
dec
test
push
lods
das
inc
jae
cmp
das
loopne
sbb
cmc
dec
lahf
push
hlt
push
push
cmp
pusha
fcomi
call
adc
cmp
or
inc
or
mov
cmp
cmp
fwait
loop
jne
inc
sub
add
pop
pop
ret
loope
add
stos
lret
fdiv
aam
sub
rorb
lret
lock
pop
fadds
adc
loopne
or
test
xor
dec
nop
or
rcrl
loope
pop
inc
invd
stos
cmp
fcmovnb
fwait
int3
fcoms
mov
push
push
call
lret
mov
pop
out
fucomi
pop
push
push
in
adc
cmp
mov
in
dec
push
pop
mov
mov
mov
mov
and
data16
push
mov
iret
inc
push
and
push
clc
push
sarl
jge
pop
mov
inc
add
adc
adc
lods
mov
lea
lds
hlt
pop
popa
mov
test
jo
sbb
xchg
xlat
add
jo
cmp
mov
mov
cmc
call
jl
cmp
mov
fstpl
or
es
ret
fistpl
sbb
int3
movsl
aas
inc
add
push
adc
rcl
cmp
outsb
out
xor
cltd
inc
adc
ret
mov
enter
adc
mov
mov
or
add
and
or
ret
push
jae
push
pop
push
aas
js
sbb
push
or
inc
lds
scas
cmp
cli
inc
jb
push
push
lahf
dec
sbb
lock
hlt
cmp
xlat
xor
nop
sbb
movq
fsubs
pop
repnz
mov
cmp
loope
add
rorl
popa
mov
les
shlb
lock
fstpl
push
jl
cmp
je
mov
enter
adc
push
sbb
insl
adc
adc
mov
mov
aas
insl
roll
push
jge
pop
je
pop
pop
jle
aaa
insl
out
xor
sub
jmp
mov
std
pop
stos
and
repz
mov
push
add
cmp
imul
add
pop
mov
lret
ficoms
pop
and
in
pop
xor
xor
les
shl
jb
xor
cs
cmpsb
lods
leave
icebp
jl
pop
lea
push
xchg
push
jbe
mov
adc
pop
and
shlb
jb
pop
aas
sti
fstl
subb
xchg
xchg
sub
push
js
pushf
cmp
jl
inc
adc
loopne
cltd
adc
adc
cmp
les
or
or
push
test
sub
iret
pmuludq
inc
negb
je
adc
stos
pop
roll
pop
ja
sub
mov
xor
movsb
fldt
and
adc
pop
sbb
mov
lcall
pop
and
sbb
stos
pusha
xchg
jo
sti
pop
cmp
std
sarb
jne
xor
push
push
dec
fucom
push
add
sub
xlat
push
lea
insl
pop
mov
cmp
ds
inc
fnstenv
jl
mov
push
stc
fcom
xchg
xor
mov
aas
mov
and
pop
or
mov
enter
adc
hlt
mov
push
push
addr16
aad
iret
movsb
adcb
ficompl
inc
xchg
jg
outsb
leave
and
pop
das
leave
xchg
nop
and
jg
pop
in
xchg
sbb
pop
sbb
sbb
sub
or
add
mov
push
lock
sub
dec
in
or
and
jae
push
and
mov
pop
test
je
cmp
loop
dec
in
jg
sub
loopne
and
je
or
scas
call
sbb
test
push
inc
push
push
and
push
in
in
shrb
ret
sbb
dec
scas
xor
xchg
stos
push
adc
sub
sti
out
xchg
insb
cmp
in
cmpl
lods
fisubrs
sbb
decl
data16
cld
push
jmp
ret
pop
add
jne
inc
mov
add
cmp
xlat
pusha
addl
push
mov
jecxz
inc
pop
and
mov
or
cld
adc
aaa
ja
je
push
sub
pop
mov
pop
adc
pop
cmp
cwtl
jecxz
sbb
in
call
ds
mov
jbe
mov
movb
jno
add
ret
jns
inc
inc
or
inc
or
daa
or
mov
add
repnz
dec
mov
sbb
and
pushf
cmp
dec
mov
aaa
rcrl
mov
jb
std
pop
clc
pop
push
mov
aas
je
jle
cmp
or
adc
add
sbb
and
mov
sub
stos
inc
outsb
sub
jbe
rorb
jp
cld
cwtl
push
lea
in
push
adc
jnp
flds
inc
sbb
pushf
push
mov
cmpb
fsubrp
jecxz
mov
xor
scas
loopne
std
orb
adc
jg
pop
fnstcw
inc
sbb
xchg
fldz
movl
sahf
or
mov
mov
sbb
sub
enter
sub
daa
je
pop
jne
mov
dec
sbb
in
sub
xchg
stc
cmp
repz
mov
loop
cmp
jns
cmpsl
pop
lea
push
pushf
cmp
outsb
pop
adcl
and
sbb
lahf
jae
pop
lock
movsb
fstl
loope
push
fistpll
sub
sahf
in
sahf
in
or
fcoms
cs
adc
add
mov
dec
ljmp
jns
add
xchg
xchg
maxps
aad
outsb
dec
dec
mov
pop
push
lea
push
lods
cmpsl
sub
push
push
add
push
lea
push
mov
push
fs
jns
aam
les
pusha
pop
push
pop
sahf
pop
pushf
sbb
jg
pop
nop
pop
cs
add
push
pop
or
rorb
sub
bound
cmp
stos
xor
push
sti
js
jle
add
fiaddl
jo
out
cld
xchg
outsb
scas
notb
xchg
cmp
cmp
inc
call
fs
push
push
testl
cwtl
movl
xorl
pop
mov
xchg
cmp
fdivrl
push
mov
or
add
mov
or
push
pop
push
and
jbe
add
sub
push
outsb
rolb
lahf
pushl
sub
call
mov
out
sbb
xchg
enter
pushl
mov
js
cmp
sbb
out
sub
mov
dec
dec
push
dec
lods
inc
sub
pop
add
sub
scas
add
setne
push
dec
and
xchg
dec
cmp
xor
inc
cmp
mov
lods
pop
pop
or
xchg
dec
in
and
aas
rcpps
add
test
pop
fcoms
sbb
cmp
je
lea
add
push
inc
inc
add
mov
loope
pushf
push
mov
mov
sahf
pop
push
ljmp
mov
pop
add
aas
clc
cld
sub
push
push
cmpl
xor
sub
sahf
rclb
pop
add
test
add
sub
add
xlat
fdivr
mov
repnz
push
push
sub
loopne
lea
pop
notl
lods
ss
mov
mov
test
jg
insb
push
dec
dec
mov
push
push
xor
je
incb
mov
out
je
mov
inc
inc
mov
aas
xor
sub
cltd
sub
sar
add
lcall
xor
sub
and
jmp
mov
add
sahf
inc
add
mov
das
mov
aas
lods
es
adc
enter
leave
xchg
xor
push
inc
loop
inc
in
movsb
fadd
push
in
ficomps
adc
xor
jl
repz
cmp
inc
or
mov
loopne
xor
cmp
aas
push
sub
push
push
arpl
lret
fisttpl
sbb
mov
sbb
loop
out
cld
call
push
js
xor
mov
sbb
push
jg
push
addb
mov
mov
cmp
xor
push
xor
adcb
push
sarb
adc
test
add
addb
mov
pop
movzbl
ret
mov
lock
test
push
xor
or
es
fdivrp
xchg
cmp
sbb
cmpsl
clc
push
cwtl
push
jl
and
in
mov
inc
xor
test
lods
add
jg
sub
into
cld
lcall
mov
sub
je
push
push
mov
adc
mov
push
push
and
push
add
mov
into
jecxz
push
cs
jo
lret
push
mov
movsl
jle
ss
and
addr16
pop
pop
das
sbb
cmp
sub
subl
sub
mov
cmp
clc
add
pusha
add
sub
jne
andl
sbb
sbb
repz
xor
das
lea
jmp
pop
in
or
add
movl
push
pop
cmpsl
test
mov
sbb
lea
pop
and
mov
faddl
or
xchg
adc
and
add
dec
xchg
xchg
push
or
loop
cmp
dec
adc
adc
add
bt
scas
nop
jle
mov
xor
add
push
xchg
stos
sbb
sub
mov
push
jne
push
mov
jno
or
inc
and
pusha
and
into
pop
sub
stos
or
push
jb
sub
pop
push
fstpl
shufps
mov
fwait
imul
aad
dec
cmp
mov
sub
cmpsl
add
and
sbb
adc
jns
lods
and
sbb
les
mov
adcb
mov
pushl
nop
add
dec
push
xchg
sbb
push
dec
sbb
dec
mov
mov
push
push
sub
mov
inc
push
ret
pop
xor
push
rclb
push
pusha
lods
ret
mov
push
push
sub
push
nop
cmp
pop
sub
push
push
lea
mov
jl
sub
cmp
xor
orb
aas
push
insb
shlb
push
cmp
or
mov
je
jno
addb
addb
push
push
je
add
adc
pop
je
cmp
push
sub
dec
jo
xor
add
dec
add
ret
cmpsb
je
add
or
gs
into
mov
aad
or
and
push
push
push
mov
jo
push
sbb
add
cltd
loopne
adc
inc
ja
mov
bound
adc
jge
aaa
faddl
sub
outsb
add
inc
shrb
pop
lcallw
inc
pusha
fmull
pop
pop
mov
mov
add
popa
das
scas
inc
sub
cltd
inc
cs
test
push
add
sbb
movsb
lock
imul
inc
add
scas
addl
clc
and
inc
popa
mov
push
xor
dec
and
or
push
lds
pop
push
sbb
loop
jp
sub
add
mov
push
or
dec
inc
push
add
push
pop
push
jl
mov
scas
add
add
xchg
scas
jle
mov
cmp
sub
xchg
sbb
dec
or
or
adc
popa
adc
loope
cmc
and
mov
cmp
or
adc
or
adc
sbb
inc
orl
or
ja
push
push
insb
pop
jp
xor
push
xchg
push
fdiv
sbb
push
lds
pop
pop
xor
aam
cs
cld
add
cmp
jb
jge
add
je
mov
hlt
shll
jge
xchg
lock
clc
das
enter
dec
cs
sub
push
adc
push
xor
adc
cmp
dec
or
jmp
push
pop
jnp
ja
dec
lea
out
xchg
add
add
outsb
loope
scas
iret
add
fdivl
or
add
add
push
mov
fmull
sbb
mov
int3
dec
push
push
push
scas
dec
ret
test
push
shll
ss
icebp
leave
add
fnstenv
ret
sub
sbb
add
xor
fsubs
call
mov
pop
dec
add
or
mov
add
enter
or
xchg
dec
enter
loopne
jo
insl
mov
enter
mov
pop
test
loope
cmp
lret
jl
cltd
addl
add
push
sar
push
and
and
fstpl
daa
jl
sub
xchg
orl
adc
add
mov
mov
in
mov
imul
sar
mov
shr
add
mov
imul
mov
lahf
xor
shrl
xchg
jle
jge
add
leave
inc
repnz
mov
ja
jno
stc
add
push
adc
sub
push
push
push
enter
lea
mov
cmp
je
cmpl
adc
push
cmp
jne
push
push
enter
call
ss
dec
xor
ficomps
jo
sbb
ja
sti
lea
or
icebp
inc
lods
shr
and
in
sbb
xor
dec
stos
inc
out
pop
add
adc
ficoms
test
adc
in
push
cmpsl
sbb
nop
or
loop
and
jle
pushf
or
pusha
push
ljmp
daa
sub
sub
sbb
aad
jg
push
adc
fstpt
jo
cmp
cltd
idivl
push
aaa
aaa
sbb
and
push
mov
sbb
loope
add
mov
or
jnp
shll
adc
jle
cmp
xchg
mov
jb
mov
adc
sbb
iret
sbb
and
mov
ljmp
mov
mov
int
jno
jae
dec
sub
pop
jmp
jge
jmp
mov
pop
fistpl
xchg
cmp
nopl
faddl
add
fdivl
sub
xor
mov
stc
sti
and
fdivrp
shll
mov
test
sbb
std
push
decl
js
jns
inc
js
ret
adc
fcoms
jmp
popf
add
js
bound
mov
mov
je
mov
je
mov
jo
add
push
pop
repnz
or
jle
in
push
pop
movb
mov
mov
leave
jge
inc
stos
xchg
add
mov
adc
pop
pop
ret
or
jbe
fisttpl
ficoml
in
cmc
cmp
or
add
inc
lock
xchg
mov
mov
je
rolb
xchg
xchg
push
pop
or
mov
inc
insl
pop
xchg
xor
push
outsb
add
fwait
push
mov
adcl
movsl
jno
or
rorb
xor
loopne
mov
ds
sbb
add
nop
bound
or
sub
mov
mov
sub
add
mov
mov
popa
or
and
push
jmp
or
add
lock
sahf
mov
or
ret
popa
or
and
enter
dec
les
mov
into
lock
cwtl
jecxz
pop
clc
push
outsl
call
or
and
push
rolb
test
lea
or
push
pop
sbbb
ret
dec
std
test
je
rcll
or
mov
xlat
popa
inc
jne
and
mov
lea
push
push
mov
lock
jae
sub
push
outsl
jne
fstpl
push
adc
cltd
dec
bound
scas
iret
rorl
lods
dec
mov
push
xor
adc
push
sub
xor
adc
push
push
nop
push
popa
cmpsl
test
imul
and
mov
clc
jp
inc
sbb
adc
inc
pop
repz
jmp
pushf
and
push
ds
adc
lea
pop
add
jb
fs
mov
sbb
lcall
push
mov
adc
lds
push
mov
adc
pop
leave
pop
sub
and
inc
push
push
sbb
xchg
arpl
movsl
mov
pop
ret
lahf
or
jae
push
and
and
orb
inc
inc
and
hlt
or
add
push
dec
test
clc
push
sub
clc
setb
jecxz
jmp
insb
push
mov
sub
cmp
setae
lcall
and
add
mov
xor
jle
outsb
or
push
xor
pop
pop
jae
js
cli
inc
pop
push
add
push
cmp
inc
push
mov
xor
adc
lea
push
adc
faddl
push
je
push
movsl
push
es
pop
pop
cmp
inc
add
rcll
lods
jecxz
test
mov
dec
xor
push
pop
cmp
pusha
push
jnp
inc
push
mov
dec
mov
sbb
sbb
popf
add
jbe
mov
cmp
inc
movsb
sbb
push
add
dec
in
dec
push
in
inc
lods
cmpsl
aas
inc
dec
xchg
push
inc
lods
jg
mov
add
stos
incl
iret
jge
lea
or
pop
add
add
sub
ljmp
ja
movzbl
cltd
popf
dec
mov
or
push
add
mov
xlat
and
add
icebp
sti
lods
sbb
add
adc
sub
adc
fcoms
add
xlat
dec
jo
adc
xchg
test
lahf
int3
rcrb
hlt
mov
pushf
ret
js
jb
mov
add
push
adc
inc
xor
mov
add
add
inc
es
push
lret
add
pusha
jmp
mov
pop
push
mov
incl
test
adc
lret
imul
lods
cltd
and
jp
and
jo
nop
xchg
sbbl
inc
xchg
sub
sbb
popa
xor
adc
mov
aam
in
and
cmp
xlat
inc
test
pop
rcll
mov
fistpl
push
dec
fnstsw
pop
mov
inc
ljmp
jmp
push
dec
cmc
dec
lea
sbb
push
and
sub
lds
inc
mov
sbb
jl
jbe
mov
mov
rcr
or
inc
mov
inc
jmp
jmp
push
adc
pslld
pop
dec
push
pop
and
rclb
push
dec
int
pusha
mov
sahf
sub
add
mov
mov
sub
cwtl
push
shlb
pop
ret
aaa
dec
aas
pop
lods
repnz
push
push
dec
call
leave
frstor
shrl
lahf
je
add
pushf
jbe
sub
sub
cltd
sbb
cs
and
mov
scas
hlt
pop
push
test
push
sti
subb
cmpsb
std
fsubs
shrl
and
lahf
out
roll
dec
sahf
loope
xchg
sub
sub
in
push
or
or
dec
add
cltd
push
push
dec
cld
shll
incb
cli
dec
xchg
or
enter
lods
mov
inc
dec
arpl
sbb
add
and
sbb
and
sub
int3
jne
cmp
or
jle
and
lea
inc
xchg
xchg
or
push
push
push
mov
add
push
push
mov
adc
int3
cld
push
inc
jnp
cmp
ret
int
sbb
mov
movb
jl
add
fcomp
mov
add
add
add
fcmovnu
jns
inc
push
int
aas
xor
dec
cs
push
add
and
scas
adc
pop
lods
dec
cmpsb
lods
push
fisttpl
xor
or
adc
add
and
xchg
inc
cs
xor
mov
xchg
outsb
cmp
and
inc
push
add
jne
mov
add
test
in
js
or
fs
pop
call
jbe
xchg
int3
mov
fwait
mov
stos
pop
jno
cmp
aaa
sbbb
pop
lods
mov
mov
movsb
loopne
jecxz
add
push
mov
xlat
jae
cld
or
cmpsb
ret
push
adc
add
add
adc
mov
loop
sbb
int
out
mov
mov
inc
es
pop
movl
mov
test
push
sub
cmovnp
add
pop
nop
push
push
loopne
pop
add
data16
mov
adc
sub
pop
mov
sub
daa
insb
adc
or
cmp
and
and
mov
mov
in
xor
leave
push
test
mov
daa
and
iret
pop
jg
jge
out
xor
pop
pop
sbb
sub
mov
lods
push
pop
adc
add
jl
shr
into
and
push
dec
addb
inc
cli
ja
iret
mov
adc
addr16
cmpsl
lahf
in
cmp
xlat
ss
shll
mov
adc
insb
in
lds
push
imul
cs
mov
nop
sbb
imul
insb
push
sub
sub
stos
loope
leave
mov
dec
mov
sbb
fsubl
enter
ja
mov
xor
mov
push
ret
shr
test
mov
rclb
in
adc
dec
sbb
add
clc
xor
mov
jle
xor
les
and
add
xchg
jns
out
add
push
lsl
jb
imull
into
jo
loope
int3
push
std
stc
cmp
mov
jl
sbbb
push
push
or
jne
jb
adc
sbb
dec
das
push
test
hlt
inc
scas
aas
into
movl
push
mov
popf
push
lret
adc
dec
adc
dec
pinsrw
leave
push
sbb
xor
leave
subl
adcl
mov
or
sub
xchg
add
push
in
clc
je
iret
lahf
adc
add
push
add
nop
or
xor
add
pop
add
sub
inc
cmp
pop
jne
pop
sahf
sbb
das
mov
pop
mov
or
xor
in
sbb
add
and
stos
adc
enter
je
stos
dec
sbb
repz
cmpsb
sbb
push
out
add
bound
mov
outsl
stc
lock
xor
cwtl
and
jne
out
or
and
dec
xchg
push
pop
mov
in
sahf
xor
push
mov
pushf
sbb
cmpl
pushf
cmp
sbb
jnp
xchg
push
pop
xchg
outsb
ret
and
aam
adc
shlb
mov
mov
cmp
add
js
push
sbb
sbb
xor
cmp
jl
add
push
xor
adc
sbb
inc
cltd
sub
push
pop
dec
rorl
push
add
and
adc
push
outsl
test
jbe
cmp
push
loopne
or
xor
mov
push
cmp
sub
and
clc
sub
pop
jne
xlat
mov
add
jmp
sbb
jne
adc
xchg
lahf
add
jl
add
pop
cmc
inc
stos
inc
or
mov
bound
dec
and
loope
gs
mov
xchg
cmp
dec
adc
jmp
and
and
and
orl
dec
and
cmpsl
or
sub
push
mov
and
shr
sub
or
sub
mov
or
es
add
xor
ljmp
repnz
loope
movsb
aad
mov
and
or
std
fists
push
sbbl
sub
and
cltd
xchg
mov
add
hlt
inc
enter
call
aad
mov
fsts
push
sbb
push
enter
int
inc
cmc
add
dec
xchg
or
or
sti
mov
arpl
add
lock
push
adc
push
and
mov
mov
inc
adcb
inc
and
inc
push
pop
rolb
fadd
lock
sbb
mov
sbb
in
push
and
cmpsb
clc
or
xor
mov
sbb
cs
cmp
sbb
push
add
sbb
add
loope
sbb
sbbl
pop
sbb
imul
mov
add
fstl
leave
sbb
std
add
xor
stc
inc
and
push
add
stc
add
push
dec
push
and
cltd
xor
inc
sub
sarl
ljmp
test
pop
dec
xchg
int3
add
pop
add
jp
sbb
add
loope
enter
loop
jp
push
sub
push
add
lahf
dec
mov
inc
ret
stos
repz
iret
popf
ss
push
and
sbb
inc
cld
or
test
cs
test
cmpsl
push
das
dec
push
dec
sub
gs
mov
jns
sub
cld
fidivl
pop
xchg
sbb
jl
jmp
jnp
dec
in
mov
xchg
xor
inc
test
push
aam
es
xor
sub
enter
xor
lret
inc
cmp
inc
xchg
iret
inc
cmp
inc
jb
movsl
push
cmp
loop
adc
test
imul
test
mov
sub
mov
leave
into
in
imul
lods
xor
in
or
insl
stos
xchg
push
lods
dec
jge
push
or
or
dec
cli
add
jne
movl
jb
dec
and
dec
and
stos
cmp
add
enter
ret
ret
add
arpl
ds
and
xor
dec
jecxz
stc
in
pop
inc
mov
pop
add
sbb
popa
jo
xorb
pop
sub
or
xchg
pop
inc
daa
mov
jg
filds
les
inc
movb
adc
in
cmp
cmp
rolb
mov
jge
cmp
out
adc
inc
pop
sbb
pushf
mov
and
aad
lahf
inc
or
iret
cmp
test
push
and
icebp
mov
adc
call
and
add
or
data16
mov
bound
pusha
test
add
and
push
xchg
ret
push
push
scas
aad
enter
test
cmp
add
inc
mov
or
por
push
mov
adc
movsb
and
ficoms
push
in
inc
or
push
mov
xorl
xor
pusha
cmp
sbb
mov
or
add
jmp
and
xchg
fdivrl
push
lcall
dec
stos
dec
push
dec
inc
cmp
sbb
popf
popa
mov
mov
fwait
int
xor
ljmp
push
inc
cmp
mov
adc
jg
and
jne,pt
mov
push
push
rclb
push
jp
into
lea
enter
inc
aad
out
sub
pop
xor
ret
push
movsl
negl
imul
cwtl
hlt
test
or
dec
pop
push
push
or
int3
popa
add
jge
shlb
or
and
jns
inc
xor
aas
xor
fs
jbe
daa
or
lds
mov
or
cmp
inc
jl
push
adc
add
loopne
dec
push
into
ja
xchg
sub
notl
js
xorb
pop
fadds
adc
push
ret
lds
xlat
cmp
test
jmp
fists
push
mov
dec
lock
xchg
mov
loopne
shrl
enter
add
or
iret
pop
js
sub
pop
pop
lcall
je
je
call
push
cmpsl
dec
daa
sbb
cltd
addb
in
adc
add
pop
mov
sub
jno
or
mov
xchg
out
js
repnz
push
adc
adc
inc
push
cld
and
lea
push
push
xchg
fadd
dec
cs
lods
cmp
xchg
add
sub
or
cmp
adc
adc
in
adc
sub
xchg
sbb
adc
xor
xchg
dec
pushf
cwtl
adc
movsb
imul
dec
ds
sub
push
push
push
jo
movsb
imul
and
xchg
and
adcl
mov
add
mov
xchg
pop
inc
and
pushf
enter
mov
xor
mov
js
adc
sbb
pushf
and
sub
jg
popa
inc
es
jnp
cmp
cwtl
fchs
inc
sahf
add
xor
add
testl
xor
cs
inc
push
push
pop
push
in
adcb
getsec
add
pop
leave
cmpl
push
cs
mov
sbb
pop
adc
pop
add
lods
cwtl
into
and
mov
mov
push
addr16
pop
add
inc
sbb
push
rorb
test
or
and
sbb
enter
pop
add
cmp
or
pop
les
nop
sbb
out
sbb
int3
mov
dec
loopne
cmp
in
and
jno
dec
sahf
addl
pushf
out
lods
ja
pop
mov
in
mov
out
add
pop
int3
jl
and
leave
jmp
push
mov
jno
test
idivl
cltd
cwtl
ror
add
rorb
pop
jo
xchg
out
cmp
add
jb
sub
adcb
lret
mov
sbb
sub
push
test
call
adc
pop
pop
imul
lods
push
and
imul
and
pop
push
or
jo
sub
ja
rclb
int3
aam
loopne
cmp
mov
xor
sub
movsb
jmp
fst
and
mov
mov
mov
test
dec
adc
call
outsb
aas
sbb
cmp
jae
icebp
loopne
hlt
or
outsl
xchg
lret
stos
inc
and
xchg
outsb
add
pusha
sub
into
and
imul
jmp
pop
pusha
stos
dec
adc
out
jne
enter
cwtl
mov
lret
xor
jb
dec
mov
enter
shll
insb
mov
shll
push
sub
sbbl
and
add
and
fldenv
dec
xor
add
xor
or
cmp
mov
jmp
mov
mov
xchg
jnp
jae
je
je
hlt
test
frstor
ljmp
lds
jnp
shll
cli
mov
out
adc
cmp
push
add
jo
and
jmp
hlt
dec
clc
and
or
jge
loopw
clc
fsubrs
lcall
push
add
push
lret
and
or
mov
jle
clc
jg
push
pop
sub
or
into
or
pop
or
sbb
enter
pop
push
adc
shlb
pop
xor
imul
xchg
aam
inc
add
push
movsb
mov
pop
jmp
shl
and
dec
in
shlb
test
or
in
xchg
inc
cmpsb
adc
mov
sub
and
test
pop
adc
pop
movsb
into
hlt
or
aaa
jno
aam
aas
and
jb
inc
add
or
cmp
lea
mov
add
cmp
movsl
loop
ret
stc
in
inc
mov
test
mov
scas
adc
cmp
jne
or
push
or
test
inc
or
and
add
in
les
jno
sbb
shlb
call
mov
add
cmpsb
pop
and
inc
push
and
rorb
fs
and
les
jg
scas
sbb
push
mov
test
ret
ss
cmp
adc
loopne
icebp
pusha
mov
sti
popa
in
add
clc
dec
shlb
jnp
and
mov
dec
insb
pusha
xor
sbb
lret
xchg
jo
push
adc
or
xchg
sub
pusha
or
leave
sub
jo
add
lock
mov
js
jno
xchg
or
movl
push
push
test
cmp
add
or
hlt
aam
push
xchg
pop
cmp
xlat
jecxz,pn
or
js
xlat
and
adc
add
mov
mov
xor
mov
push
add
decb
pop
add
adc
xchg
mov
xor
hlt
add
dec
pop
stos
add
jg
adc
jae
and
outsb
rcrb
pop
push
mov
ret
ret
push
xchg
xor
pop
xlat
cmp
push
inc
int3
xchg
stos
mov
xor
pusha
pop
pusha
lock
sbb
stos
pop
test
sbb
test
push
insb
jle
aas
js
mov
aas
pop
in
mov
orl
ja
sub
pop
mov
dec
jo
sbb
fimuls
sub
adc
xor
add
xchg
add
xchg
mov
push
sbb
inc
sub
xor
into
sbb
push
xchg
subb
adc
popa
roll
mov
pop
pop
or
mov
adc
mov
loope
and
push
lcall
push
xorb
mov
pusha
mov
pandn
subb
aad
xorb
cltd
aam
cmpsb
adc
stos
mov
int
inc
adc
imul
mov
pop
and
and
dec
out
and
cmp
stos
leave
inc
inc
rolb
adc
daa
push
test
or
scas
sub
sbb
pusha
xor
and
dec
outsl
dec
xchg
jmp
xchg
mov
or
cs
call
add
sbb
and
cmp
mov
sbb
adc
pop
hlt
add
sbb
cmp
je
lock
push
push
insb
mov
lods
jnp,pn
cld
cmp
xor
cmp
test
loopne
push
push
test
inc
push
jne
insl
mov
stc
ds
pop
jmp
add
mov
pop
push
out
jbe
adc
push
push
ljmp
pop
inc
dec
sub
and
jns
data16
jno
xor
xchg
nop
add
mov
je
cmpps
mov
xchg
inc
add
cmc
mov
and
xchg
ret
aam
push
push
pop
jb
test
fiaddl
test
insb
lea
repnz
sub
cltd
add
and
push
push
push
push
adc
and
daa
adc
sbb
ret
mov
outsl
iret
mov
movsl
adc
adc
stos
stc
pop
sub
push
add
clc
xor
pusha
jo
imul
jns
pop
jmp
xor
sub
cmc
cs
test
data16
inc
dec
cmp
adc
xchg
and
ret
adc
adc
cmc
mov
fisubrs
test
xor
push
and
iret
lock
adc
test
ret
inc
xor
inc
pop
sub
mov
or
or
inc
inc
add
mov
cmp
lcall
adc
pop
fcoml
pop
mov
mov
rorl
popl
sbb
mov
xchg
xchg
push
hlt
addl
fcomps
sub
xor
cmp
xorl
dec
lock
es
jns
or
xor
out
fcoms
pop
es
cmp
adc
cs
xchg
and
add
into
les
shll
ret
and
cmp
pushf
pusha
sar
sbb
jle
push
scas
dec
ret
imul
mov
jo
loopne
cmpsl
dec
and
dec
jno
sbb
sbb
pop
adc
add
test
xchg
and
shlb
sbbb
movsb
xchg
scas
daa
scas
or
add
jle
and
inc
sbb
push
push
cmp
push
pop
pop
ja
out
andl
and
jle
dec
aaa
pop
and
add
adc
bound
adc
push
out
or
lahf
or
jae
push
push
sahf
std
pop
mov
jecxz
or
xor
test
push
mov
adc
push
mov
loopne
adc
stc
inc
push
push
jns
mov
neg
xor
add
sbb
out
fucompp
adc
iret
xchg
sub
mov
mov
push
pop
adc
jle
clc
push
lds
push
sbb
lcallw
cmp
pop
inc
sub
adc
add
testl
dec
or
out
rcrl
in
adc
ret
mov
jl
fcoml
mov
inc
lret
add
jo
mov
out
mov
fmull
shlb
adc
fnsave
and
mov
mov
push
add
popf
stc
mov
rol
xor
loope
push
mov
xor
movsb
dec
mov
mov
shlb
loopne
xor
imul
inc
ds
loope
notl
or
je,pn
push
test
or
rorl
inc
bound
push
adc
xchg
mov
sub
mov
jp
cmp
xor
xor
clc
pop
inc
inc
hlt
cmp
jne
sbb
jnp
mov
les
into
ja
stc
in
enter
sub
push
loop
dec
pop
loopne
cmpsl
push
add
fcoml
cmp
int3
loope
mov
xchg
xlat
aaa
testl
cmpb
test
sar
adc
xchg
sub
sbb
cwtl
sbb
je
mov
mov
mov
jg
adc
add
sub
or
lea
jge
push
push
shl
rcrb
imul
push
add
out
inc
push
lods
push
rclb
push
inc
sub
cmp
ficoms
push
lahf
sub
fs
pushl
mov
push
push
mov
pop
jl
mov
cmp
jg
mov
sbb
or
and
pop
leave
cltd
jmp
mov
out
je
nop
or
push
add
ss
pop
push
leave
sub
and
or
push
sub
int3
sbb
jb
mov
add
pusha
out
inc
and
adc
cld
jecxz
cs
sub
push
push
xor
je
cmpb
pop
loopne
cmp
lahf
add
lock
push
fisttpll
push
mov
sti
out
cmp
mov
jae
sub
mov
ja
xorb
lret
lret
add
cmp
sub
jno
mov
xchg
insb
or
jg
add
mov
dec
hlt
jge
xor
shl
cmp
fdivl
inc
insb
es
add
xchg
xchg
mov
in
xor
add
ret
es
outsl
jno
enter
data16
sub
push
es
push
push
adc
push
adc
adc
pmaxub
push
jg
push
add
push
rep
dec
mov
sub
ret
into
gs
je
inc
in
bound
cld
sub
pop
mov
lea
mov
fucomp
adc
adc
shll
push
mov
mov
sub
push
test
loope
andb
aad
and
add
sbb
or
push
rolb
jo
add
push
or
mov
loope
adc
mulb
jns
push
adc
sub
repz
xchg
sbb
xchg
sub
ret
jg
je
sbb
push
cmp
and
je
mov
sbb
adc
xchg
inc
imul
mov
pop
sub
push
push
mov
adc
stc
loope
push
sub
cmc
out
outsb
or
shlb
inc
insl
inc
jle
cmc
mov
lcall
or
aas
dec
inc
addb
jle
or
loopne
js
push
call
push
jns
ret
mov
or
lahf
xorb
pop
enter
outsb
ret
mov
xchg
scas
pop
enter
sbb
and
and
xlat
add
sub
adc
imulb
push
ret
dec
es
popa
jne
adc
sbb
add
or
inc
cli
dec
and
ret
lcall
mov
jl
mov
sub
insb
or
mov
lock
push
inc
inc
mov
cmp
jne
call
and
pop
outsl
test
pusha
mov
loopne
add
lret
or
shll
push
ret
or
das
mov
mov
mov
xor
shlb
aas
addl
int
cmp
jns
sub
push
std
and
outsb
push
add
and
sbb
xchg
rcll
fidivs
lods
shrl
mov
push
pop
mov
pop
hlt
push
rolb
jae
lea
jbe
or
mov
sbb
int3
and
inc
pop
pop
mov
ret
add
rol
loopne
inc
pop
pusha
sbb
xorb
push
stos
rol
inc
add
adc
inc
or
inc
or
sbb
adc
inc
jae
fisubl
xlat
jg
insb
inc
mov
push
inc
mov
xor
inc
mov
movsl
loope
add
test
jp
stos
enter
mov
inc
loopne
or
jecxz
js
push
mov
push
js
xchg
pop
js
add
test
andb
ds
xchg
or
arpl
addb
aas
aad
and
adc
pop
mov
push
mov
lock
arpl
xchg
dec
rorl
inc
pop
mov
mov
mov
fdiv
fisubrl
test
lods
xchg
sbb
lds
adc
push
lds
add
js
inc
xchg
shrl
pop
daa
mov
aam
cmpsl
shlb
push
sub
ja
xor
dec
sub
pop
sub
aam
mov
outsl
rcll
setge
add
loopne
cs
scas
andb
jecxz
push
mov
cmp
cmp
push
out
roll
jmp
push
and
add
mov
mov
fldt
jmp
sub
jne
loope
or
lock
push
js
add
jmp
ss
mov
clc
lods
cmp
or
cmp
pusha
sub
push
xchg
lock
test
cli
dec
and
push
push
xchg
add
adc
push
mov
dec
push
add
sub
out
iret
push
add
jecxz
dec
add
push
sub
aaa
or
loop
fs
cmp
nop
or
or
imul
jecxz,pn
shlb
pop
cmp
int
sub
push
leave
and
sub
dec
mov
repz
cwtl
mov
ljmp
int
lods
sub
push
xor
push
dec
mov
sti
addr16
push
andl
cmp
cmp
push
stos
and
mov
cwtl
lods
gs
sbb
notb
add
sti
je
orl
addr16
es
push
mov
mov
add
sbb
dec
and
addb
push
lods
hlt
inc
loope
xor
daa
nop
sub
std
push
cmp
subl
lret
repz
mov
fldenv
sub
inc
and
and
pop
add
adc
pusha
mov
cwtl
sbb
inc
bound
mov
mov
pop
shlb
push
filds
sub
cld
cmp
mov
xchg
mov
lds
mov
push
scas
mov
cmpb
and
in
ret
adc
pop
push
lods
loopne
and
cmpb
clc
cmp
inc
pop
push
or
lret
add
pop
pop
jecxz
mov
add
outsl
push
lahf
sahf
sub
jns
sub
fiadds
cmp
xor
mov
push
cltd
int
cmp
push
add
xchg
shlb
or
repnz
iret
sarl
sti
or
jne
pop
jle
mov
inc
jl
cmpsb
fdivrs
nop
dec
ss
hlt
push
add
sbb
enter
or
mov
xchg
lahf
add
stc
sarl
push
jle
jl
or
sbb
adc
push
and
sahf
push
sbb
fs
xchg
shll
aaa
and
out
test
sub
lods
push
popa
stc
sbb
and
add
movsb
cmpb
jb
adc
sbb
inc
stos
and
rorl
jns
sbb
add
aaa
adcl
adc
jo
push
jl
sub
decl
jne
jecxz
adcl
add
mov
and
jg
add
xor
sbb
push
push
push
and
dec
dec
sbb
divb
in
inc
bound
nop
cmp
and
imul
popf
movsb
in
ja
push
sub
je
jl,pt
mov
dec
or
dec
push
add
mov
push
push
add
add
and
sub
and
and
sub
mov
sbb
cmp
lret
or
and
das
daa
add
cmp
or
je
add
cmpl
xchg
dec
pop
push
and
movsb
mov
int
pop
arpl
jne
jle
add
stos
or
sub
inc
mov
inc
inc
inc
add
inc
stos
das
popa
xor
stos
in
mov
out
push
dec
xor
mov
mov
jl
lock
lea
test
and
add
int
sub
adc
insb
sub
movsb
insl
sti
mov
dec
add
push
sbbb
and
mov
mov
push
lea
out
stos
pop
add
push
imul
push
and
scas
add
jl
idivl
insl
mov
mov
js
lds
arpl
lret
cmpsl
add
inc
or
pop
mov
and
xlat
xchg
clc
add
mov
ret
mov
fs
lret
or
aad
mov
sub
leave
xor
cmp
vpunpckhbw
inc
mov
lret
push
push
xchg
je
xchg
mov
adc
push
add
call
rorb
push
bnd
xchg
xor
jno
xor
fildl
sub
add
push
sub
cltd
xor
stc
and
jmp
cmp
mov
aas
outsb
or
xchg
adc
lahf
or
xor
sub
mov
and
or
xorl
ret
ljmp
or
das
add
je
lea
mov
inc
test
fldz
fistl
mov
lea
std
pop
outsl
scas
add
xor
pop
cmp
jb
pop
pop
js
loopne
outsb
jg
je
push
movsl
cmp
out
nop
adc
push
push
inc
sub
adcb
sbb
sti
mov
pop
add
jl
pop
add
jb
mov
push
orb
std
imul
add
in
mov
xchg
mov
cmpb
jno
mov
sub
or
jge
lret
pop
fisttpl
add
aam
pop
xor
out
scas
cmp
sahf
inc
loope
test
push
push
and
lock
push
bound
loopne
imull
xor
jp
pop
push
push
dec
movsb
push
rclb
push
add
sahf
push
push
push
push
test
outsb
test
xchg
push
add
adc
decl
add
push
movb
mov
push
mov
ljmp
sub
inc
xchg
andb
or
js,pn
jg
ja
js
sbb
sbb
stos
pop
add
sub
cmp
js
lcall
jns
push
shlb
xchg
sbbl
add
mov
fisubs
dec
enter
stc
push
cld
add
jno
les
sbb
mov
jmp
loopne
fisttps
inc
push
push
stc
rorb
xor
sbb
add
mov
add
or
sbb
sub
mov
int
push
rorl
ret
ds
pop
pusha
out
pop
jecxz
and
adc
and
and
xchg
mov
push
je
fs
outsb
adc
sub
push
popa
fldcw
push
fs
mov
and
add
add
mov
mov
das
inc
add
cld
pop
adc
jg
add
add
xlat
mov
sub
add
cmp
push
push
iret
adc
call
xchg
fcoms
inc
jnp
pushf
subps
inc
cmp
adc
lock
mov
xor
xchg
jecxz
and
or
insl
movsl
dec
sbb
push
es
push
test
movsl
xor
mov
add
inc
in
adc
js
sbb
sbb
jne
mov
cmp
fwait
adc
inc
jl
mov
rol
lock
pop
das
pop
cmpb
mov
sbb
add
fnstenv
adc
xor
clc
pop
mov
jnp
decl
mov
cmp
je
push
jle
dec
pop
or
mov
in
add
xor
adc
fisttpll
sbb
mov
pop
xchg
sbb
not
pop
sbb
in
shrb
adc
sub
cli
push
rorl
sub
adc
notb
mov
sbb
pop
adc
and
push
pop
sub
pusha
fisttps
cld
xor
idivb
xor
repz
inc
push
js
xor
sub
loope
mov
and
cmpl
push
xor
movsb
jp
jle
cmp
int3
xor
inc
add
push
sub
xor
loope
out
push
inc
mov
xchg
xchg
shl
xor
adc
add
mull
ja
or
mov
cmp
add
pop
mov
fstps
fsub
lock
push
or
mov
pop
lock
push
aas
xor
scas
add
aam
push
dec
cmp
adc
pop
or
ret
mov
repnz
pop
or
and
adc
pop
ret
pop
cmpsl
in
jg
repnz
stos
or
xor
mov
add
or
adc
sbb
pop
outsb
fildll
push
imul
xor
xor
push
fdivr
add
call
add
adc
adcb
push
pop
js
fdivrp
sarb
in
ljmp
test
mov
adc
lock
cld
adc
ret
and
lahf
cmpsb
roll
stos
push
scas
fisubrs
xor
push
je
ret
out
xchg
push
jnp
cmp
jae
mov
sub
test
mov
mov
jg
roll
fcompl
inc
ss
push
je
les
rclb
xor
jl
imul
mov
pop
and
inc
and
or
jb
pop
fdivrl
inc
mov
xor
xchg
dec
movsl
cmp
and
xlat
inc
in
movl
mov
ret
jge
movb
imul
aas
or
inc
jbe
sar
sub
and
or
sub
adc
jns
lea
jne
push
push
mov
xor
es
jl
cmpsb
mov
mov
pop
inc
pop
push
mov
stos
xchg
bndstx
add
mov
adc
cli
lcall
add
jle
rorl
and
out
movl
test
pop
sbb
jge
push
add
jb
ja
les
mov
stc
add
pop
add
imul
clc
sbbl
push
mov
mov
or
mov
xor
rcrb
mov
push
xchg
adc
mov
xor
mov
xchg
loopne
pop
ja
adc
cmp
roll
or
stc
and
divl
fisttpll
jle
add
push
outsl
in
fnstsw
or
xor
sbb
bound
aas
add
js
sbb
int3
andl
mov
jl
push
mov
fsubrp
les
dec
and
sub
adc
mov
sarl
dec
cmp
ljmp
mulb
xor
sbb
or
mov
adc
xor
fisttpl
das
je
or
cmpl
pop
je
outsl
or
jne
mov
adc
test
inc
je
mov
lea
dec
aaa
push
adc
cs
sahf
inc
sbb
fwait
int
dec
cmp
or
jmp
inc
outsl
xchg
cmpb
ret
aad
or
call
add
or
add
mov
out
add
push
inc
and
pop
loop
inc
mov
fimull
mov
pop
xchg
sbb
lfs
cmp
mov
dec
lcall
negl
out
push
mov
add
js
jno
jo
push
and
mov
orb
and
mov
inc
inc
sub
cmp
outsb
mov
jns
jns
or
dec
adc
das
adc
shrb
movsb
cmp
push
mov
ret
dec
push
sub
inc
push
mov
cmp
aam
cld
push
push
pop
jge
adc
xchg
add
add
mov
cli
and
cld
sub
roll
aaa
push
xor
jb
cmp
ja
data16
lcall
call
inc
jb
cmp
ja
and
ljmp
mov
jmp
cmp
xor
add
imul
pop
push
cmp
ret
fisttpl
add
fdivs
in
imul
test
fs
pop
pop
mov
iret
inc
add
jmp
cwtl
aas
xor
and
lds
sbb
add
mov
loope
insl
jns
push
add
stos
jne
ret
fwait
mov
sarl
std
mov
pop
jae
mov
jmp
push
pusha
inc
mov
jbe
jo
jne
or
enter
mov
lea
push
mov
push
add
pop
or
jge
cmpsb
adc
xchg
xchg
lret
cmp
jl
jbe
adc
add
adc
repz
gs
adc
je
test
jne
into
cmpsl
and
or
shr
cmp
and
repnz
adc
movb
inc
push
push
adcl
or
push
push
lret
lcall
movb
jnp
and
push
inc
and
and
and
cmp
and
mov
lods
popf
push
or
add
inc
sbb
lcall
jo
fdivs
ret
jg
popf
pop
fsave
sbb
pop
push
cmc
sub
cli
pusha
sub
mov
xor
adc
aam
ret
and
push
pushf
ret
es
shrb
push
mov
pop
jl
pop
jg
cwtl
pusha
cmc
sahf
add
cmpb
imul
xchg
fwait
sti
loopew
sub
ljmp
pop
add
lock
xor
jae
cmpl
sti
sti
shr
scas
aam
push
das
mov
or
mov
fidivl
push
xor
sti
jge
mov
lods
cmpb
and
shll
pop
cmp
inc
insl
stos
in
pushf
fs
dec
out
add
jg
test
fiaddl
andb
push
ret
push
jo
push
sub
inc
movsl
cmp
leave
or
cmp
aam
test
cwtl
mov
sbb
out
add
movb
add
lret
dec
loopne
xchg
in
lret
or
je
cmp
je
xchg
jae
jecxz
add
lock
je
sub
es
xchg
int
mov
or
pop
dec
lcall
pop
fadds
dec
push
jmp
xor
data16
decl
xor
jl
int
aas
fimuls
push
mov
in
push
movsb
sub
lea
sbb
icebp
je
and
sbb
adcb
inc
paddsw
popf
push
jle
add
sub
mov
leave
mov
push
mov
mov
sub
xchg
jmp
xchg
notb
cmp
je
push
imul
jle
sub
xor
add
out
out
shll
bound
push
out
test
mov
mov
inc
push
xor
xor
pop
pop
clc
xchg
mov
ljmp
push
sbb
inc
cmp
jb
mov
movl
jb
mov
add
jbe
pop
pop
stos
out
inc
clc
pushf
cmp
je
lea
mov
add
mov
dec
mov
mov
into
repnz
mov
clc
push
push
lahf
mov
test
stos
mov
add
jge
mov
fsubr
mov
jb
mov
lea
inc
int
sub
outsl
in
nop
mov
adc
sti
push
push
les
lods
jge
cmp
jg
sbb
sahf
and
lds
fadds
hlt
sahf
cs
and
push
lea
inc
xchg
mov
popf
pop
lahf
addl
push
xchg
xchg
inc
movsl
xor
mov
inc
xchg
xchg
inc
adc
es
mov
xchg
jne
fstl
sbb
jle
lea
or
xchg
or
xchg
stos
loopne
out
inc
jg
inc
enter
and
popa
and
jb
es
add
jne
add
ret
xor
cli
cld
popa
fmuls
testl
add
loope
leave
xchg
cmp
sub
ljmp
sbb
in
sbb
inc
inc
dec
cld
sub
mov
adc
cwtl
cmp
pop
mov
xor
mov
mov
inc
xchg
sub
pop
cld
and
jge
stc
sub
sbbl
loopne
int3
dec
popa
and
rol
inc
mov
cli
jne
lcall
dec
fdivrs
add
lods
mov
sbb
add
cmpsb
iret
cmpl
dec
stos
mov
add
and
cmpsl
in
cmp
add
mov
add
xchg
inc
jmp
push
pop
clc
dec
jae
shlb
scas
sarb
inc
je
ficoml
cmp
inc
fstpt
mov
push
inc
inc
inc
jne
pop
pusha
and
movb
cmp
outsl
insb
mov
mov
or
add
adc
jbe
shll
and
xchg
inc
xor
out
ljmp
fstl
and
and
inc
cmpsb
out
jnp
jle
push
push
xor
push
das
clc
call
je
mov
push
push
xchg
pop
cmp
mov
inc
shll
jmp
lock
cmp
je
cmpb
cmp
or
ljmp
jne
mov
mov
gs
cmp
andl
mov
inc
inc
mov
dec
mov
lock
out
dec
lds
jne
les
adc
ret
xchg
or
push
xor
sub
mov
and
or
out
mov
jecxz
outsb
cmp
or
mov
mov
inc
inc
mov
int
aam
orl
sbb
lret
inc
push
out
icebp
jb
xchg
and
in
cmp
and
insb
jne
add
sbb
and
dec
mov
or
or
mov
loopne
jmp
insb
xchg
enter
in
jmp
add
pop
jne
or
sbb
rorb
pop
not
adc
sub
pusha
mov
xchg
xor
cmp
mov
mov
or
popf
mov
push
sub
xor
jg
xchg
cmp
inc
mov
mov
mov
rorl
and
sbb
xor
mov
sub
sub
lea
cmp
and
xor
ljmp
dec
cmp
out
cs
push
lea
or
enter
xchg
loop
inc
and
cmp
fists
xchg
sub
mov
lret
lds
inc
mov
xor
cmp
sti
mov
hlt
jb
dec
sbb
decl
or
enter
jmp
mov
jl
fiaddl
adc
sub
test
sbb
cltd
jne
jle
push
jge
push
push
xorb
inc
dec
ret
inc
fcmovnb
xor
mov
push
fidivl
cwtl
mov
cmp
or
pop
push
fsubrs
adc
or
ficomps
pop
push
push
ds
pop
je
push
fs
repnz
mov
mov
push
push
inc
ret
adc
lahf
out
jno
pop
add
xor
or
push
nop
or
into
push
push
fldl
push
sub
pushf
mov
or
mov
or
lret
lcall
sbb
mov
ret
cmp
push
add
cmpb
lock
int
mov
je
push
push
or
jbe
jne
mov
stos
cmp
stos
add
in
or
xor
outsb
punpckhwd
pop
push
pop
stos
ss
jle
mov
ljmp
dec
xor
xor
push
ds
pop
sbb
mov
xchg
in
ficoml
dec
pop
inc
inc
cmp
enter
mov
cmpb
push
je
in
mov
leave
adc
enter
or
xor
pushf
mov
data16
shlb
pusha
jo
cmpl
jne
xor
xchg
add
nop
in
push
xor
mov
push
adc
shll
jmp
imul
shlb
inc
aas
sub
jle
or
loopne
xchg
or
pushf
push
mov
sbb
pop
and
call
cmp
ds
jne
dec
cld
les
add
sbb
sub
punpcklbw
dec
inc
dec
jnp
aas
ja
sub
sub
mov
inc
fldt
sub
das
sub
mov
out
rcrb
dec
add
into
fimull
pop
jmp
or
cmp
xor
lea
push
popf
test
lret
shl
or
dec
push
lods
mov
rorb
sahf
cmp
out
jns
bnd
loopne
in
inc
rol
and
fidivrs
adc
ficoms
sub
inc
into
xor
hlt
adc
cmp
jle
in
stos
sbb
aam
push
fidivl
dec
mov
jno
jmp
push
cwtl
ret
add
jge
shlb
jne
xor
sarb
xor
punpcklwd
sbb
mov
adc
mov
mov
and
out
sbb
mov
jecxz
mov
or
xchg
faddl
jno
cmp
jl
sbb
adc
andl
in
adc
mov
push
cmp
ds
push
cmp
inc
dec
or
xchg
push
jb
xlat
push
inc
push
push
adc
mov
inc
adc
push
mov
es
clc
push
add
adc
shll
cmp
ret
cmp
xor
jmp
and
leave
mov
bound
push
sub
scas
movl
lret
jbe
add
xor
adc
xor
ret
sbb
jbe
cmp
and
incl
test
xchg
sbb
repz
movl
std
shll
or
add
lret
jbe
xchg
sbb
jge
dec
loopne
imul
aam
cmp
cld
sub
pop
lahf
adcl
sub
pop
push
into
lds
mov
ds
mov
rorl
sahf
mov
xchg
xchg
or
cli
mov
icebp
sub
repnz
data16
and
mov
push
or
lods
or
rcrb
lods
int
lret
pop
pop
dec
icebp
xor
cmp
push
xor
jo
mov
ror
dec
or
aas
sti
test
or
or
add
inc
inc
or
xchg
jnp
sbb
pop
inc
orl
pop
sbb
mov
mov
rorl
lds
jle
mov
jae
cmp
dec
lods
pop
mov
inc
js
bound
sahf
rcrb
shl
insb
xchg
sbb
sbbl
and
test
push
jae
pop
sbbl
fnstenv
lcall
sbb
jecxz
in
add
hlt
cs
mov
sarl
xchg
int
pop
int3
and
loope
cltd
lea
and
orl
mov
xlat
or
and
and
push
sarl
pop
dec
sbb
pop
and
mov
jg
and
mov
in
sbb
xlat
cmpsb
adc
sbb
add
inc
sbb
sbb
mov
repnz
aam
or
inc
fsubs
mov
lock
ljmp
lea
sbb
pop
mov
test
or
mov
pop
pop
add
cld
pushf
inc
ja
push
jne
cmpsl
add
xor
xchg
jmp
xchg
add
push
adc
insl
add
adc
cmpsb
xor
push
aam
jge
and
loopne
jl
cmp
mov
cmp
and
ss
add
je
daa
icebp
lock
add
pop
pop
les
cwtl
add
or
sub
or
push
adc
mov
jp
adc
sarb
movsb
ret
xchg
test
adcb
sub
ret
call
sbb
mov
arpl
mov
into
les
pop
andl
mov
add
mov
imul
push
sbb
cld
jp
pop
or
inc
sbb
scas
xchg
out
dec
push
xor
inc
jmp
jns
add
and
mov
sahf
sbb
negl
mov
loopne
pushl
jb
or
sub
and
icebp
addb
mov
mov
and
or
notb
sbb
aaa
xorl
mov
repz
ljmp
test
out
mov
mov
and
lods
or
loopne
dec
push
outsb
ret
je
movsl
or
neg
xor
add
fs
aam
push
addr16
sbb
mov
push
fs
and
fcmovnu
add
sub
xchg
cmpsl
repnz
jle
xor
pop
lock
mov
fsubl
pop
xor
push
mov
testb
or
pmaxub
dec
subb
cltd
je
push
mov
inc
cmp
add
incl
mov
or
pusha
or
je
pop
sub
sub
and
dec
lods
pop
jl
shlb
out
in
cmp
jl
fwait
iret
es
roll
push
hlt
lea
inc
push
and
adc
and
pusha
mov
or
pop
loop
fdivl
lea
call
popl
lods
dec
rol
add
jmp
sbb
cmp
out
mov
and
xor
xor
xor
pop
push
lret
and
mov
lcall
enter
cmp
addr16
push
into
add
icebp
pop
add
adc
fldl
xchg
cmp
push
mov
push
popf
sbb
dec
xchg
xor
jo
loopne
jg
adc
lods
test
popf
lahf
xor
sub
std
test
inc
and
in
and
adc
inc
push
pop
movsl
and
pop
sbb
sbb
sbb
pop
xchg
add
clc
add
pop
stos
jo
movsb
mov
addl
dec
and
add
loop
sbb
push
mov
push
cmp
xchg
mov
xor
negb
mov
stc
clc
or
sub
sub
or
sub
push
ljmp
sbb
js
pop
push
movsb
pop
adc
andl
pop
and
cmp
jnp
insb
add
ljmp
or
mov
jb
sub
adc
or
or
negb
jbe
aaa
push
sbb
shlb
jb
nop
cmp
push
pop
mov
pop
cmp
jae
lret
ret
test
test
add
stc
imul
and
pop
shrl
mov
aas
jns
pop
push
sbb
adc
push
push
dec
das
push
xor
mov
mov
xor
shlb
and
in
push
cmp
test
shlb
xor
adc
mov
mov
cmp
mov
rclb
enter
add
and
jnp
fnstenv
test
add
push
call
lds
ffree
lods
lea
push
in
ja
pop
jmp
push
xor
jecxz
in
pop
cmp
repz
rcr
aas
cmp
in
xor
cmp
pop
sete
fnstsw
or
or
xchg
out
xor
andb
jns
mov
xchg
cs
cli
sub
cli
add
in
xchg
mov
adc
aaa
and
fst
imul
and
outsb
lods
aam
rorl
push
sbb
sub
sub
push
add
mov
fsubr
sub
and
push
out
sub
mov
out
sub
sub
sub
push
jle
or
add
fstpt
sbb
sarb
and
xor
popa
sub
pop
adc
and
mov
das
lock
iret
mov
adc
push
mov
pop
lea
dec
mov
push
and
inc
add
dec
xchg
setl
push
add
jecxz
xor
test
mov
add
ja
orb
sub
int3
pop
push
lods
pop
lds
sbbl
mov
insb
and
sub
jbe
add
cmp
daa
iret
sbb
loopne
xor
out
xor
stos
mov
add
clc
inc
add
lock
mov
addb
xor
push
adc
mov
add
sbbl
andb
aaa
mov
push
jl
inc
dec
mov
test
lock
jl
xor
icebp
inc
xor
mov
mov
mov
addl
popa
push
mov
rolb
adc
pop
aaa
xchg
sbbb
sbb
nop
pusha
lock
sub
int3
push
mov
push
push
add
xchg
sbb
fisubs
inc
adc
mov
cmp
cld
and
sbb
inc
mov
xor
jne
mov
jle
les
fwait
mov
sub
lahf
dec
mov
sub
dec
cmpl
dec
or
sub
cmpsb
inc
lods
xor
pop
cmp
inc
dec
out
fstpl
jmp
sbb
xchg
xchg
dec
sbb
sbb
xor
inc
nop
push
cmp
outsb
sub
test
inc
es
das
nop
xchg
push
cmp
xchg
ret
mov
mov
push
inc
mov
fwait
test
lcall
cwtl
test
ret
into
sub
mov
inc
in
push
jmp
lret
in
mov
push
mov
push
xlat
lahf
and
xor
push
lods
xor
adc
pop
and
or
les
add
inc
add
cmp
inc
scas
cmpsb
inc
pusha
cmp
jmp
jns
xchg
clc
or
sarb
test
or
jle
adc
add
push
ret
push
add
inc
jno
or
sub
xor
fcmove
sti
out
pop
lret
mov
push
push
pop
repnz
js
test
lods
push
bound
in
add
cmp
dec
sub
dec
or
push
pop
lea
push
mov
cli
and
add
mov
cs
pop
dec
inc
cmp
sub
push
pop
push
push
mov
sarb
pop
push
pop
pushaw
and
mov
sbb
pusha
inc
or
sbb
push
push
mov
bound
mov
nop
mov
inc
jl
add
mov
icebp
cmpsl
movsb
sub
cs
orl
or
aas
or
test
jl
push
hlt
mov
sub
js
icebp
inc
xchg
lock
insl
pusha
xor
inc
sub
add
ret
ss
sub
push
push
fucomip
shl
test
mov
pop
dec
xchg
pop
dec
cmp
push
mov
or
mov
sub
test
add
jmp
out
add
mov
into
shll
push
pop
mov
pop
dec
or
sub
out
and
jmp
or
call
and
inc
loopne
mov
movsb
xor
or
pop
cltd
stos
data16
add
pushf
out
jns
or
dec
sahf
mov
sahf
mov
add
mov
inc
es
imul
and
test
inc
mov
cmp
mov
or
lods
push
xorb
cmpl
pusha
mov
popa
pop
add
std
fcmovu
int3
shlb
xor
js
jg
inc
mov
jne
fmull
sbbb
xchg
pslld
cmp
adc
xchg
lret
adc
add
insb
xor
push
pop
insl
fs
push
cltd
pop
xor
aad
mov
and
dec
push
pop
mov
scas
fadds
cmc
pop
mov
pop
movsl
sahf
cs
and
push
adc
shll
mov
or
mov
adc
bound
sub
repnz
or
or
or
sbb
cwtl
pop
push
add
pop
and
xchg
sbb
sub
jb
mov
and
stos
popa
cmp
cmp
xchg
push
hlt
lock
inc
js
push
outsl
inc
dec
adc
cmp
pop
and
mov
fdivrs
movsl
cmc
sbb
stos
add
jmp
loope
pop
mov
push
xchg
mov
xlat
or
das
xchg
xchg
outsb
orl
loopne
adc
add
loopne
jg
dec
je
or
push
lea
mov
iret
pop
cmp
cld
cmpl
rcrl
jne
rcrb
push
mov
cld
aad
add
lea
and
jne
rorb
dec
call
mov
sbb
shl
jge
xorl
or
push
call
add
and
sbb
fiaddl
lods
adc
adc
cmp
bound
in
orb
add
ret
es
add
or
sub
clc
adc
or
mov
pop
xor
mov
je
push
stc
and
and
jecxz
sub
fnstsw
and
sbb
popa
jmp
or
je
xor
int3
xchg
sbb
mov
push
pop
jl
sub
or
and
js
inc
add
mov
repnz
jo,pt
push
inc
loopne
push
or
xchg
mov
add
into
adc
inc
iret
out
sub
push
inc
lea
or
push
jb
and
or
adc
gs
shlb
outsl
and
and
and
cld
or
dec
stos
and
pop
adc
in
pop
test
push
push
cmp
subl
rolb
call
push
add
inc
sbb
jl
dec
or
or
ljmp
inc
and
pop
sbb
divl
pop
mov
mov
rorb
das
inc
cmpsb
jnp
sub
inc
mov
cmp
aas
sbb
inc
adc
or
into
test
dec
jo
push
push
sahf
ds
mov
lea
mov
mov
stos
jecxz
and
outsb
xchg
jbe
hlt
inc
nop
adc
mov
cmpsb
shr
adc
cmp
push
push
push
inc
fimuls
imul
ret
pusha
fisubl
lds
out
inc
mov
push
sbb
in
add
cmp
add
inc
sahf
push
jmp
adc
pusha
mov
add
xor
push
sahf
cmpl
adc
push
add
fldt
inc
es
ret
sub
sbb
cmp
fistpll
push
xchg
xor
push
sub
mov
enter
pop
iret
cmp
cmp
mov
pushf
or
movb
movsl
ret
or
in
lods
in
jg
jp
inc
xorl
pop
push
xorl
sbbb
pop
pop
or
or
or
add
xlat
jp
add
or
loopne
inc
lahf
ja
pop
mov
dec
mov
test
push
icebp
add
notb
add
sahf
push
rorl
push
add
subb
movsb
xor
rolb
sarl
adc
lods
daa
xchg
sbb
push
jmp
inc
xor
lods
daa
lcall
clc
jge
adc
cmp
cld
add
xchg
lea
je
jmp
mov
sub
pop
add
sub
aam
pop
inc
data16
adc
aas
pop
mov
cmpb
or
pop
mov
test
lahf
add
push
push
xor
clc
dec
icebp
lea
cltd
sub
inc
cmp
jno
loopne
mov
add
mov
lcall
sub
jecxz
jne,pn
jg
or
cwtl
shl
lock
cwtl
mov
inc
pop
or
pusha
mov
jbe
xor
pop
xchg
or
mov
pop
xor
dec
andl
es
xchg
sub
push
push
mov
adc
and
xor
cmpsb
orl
insl
mov
vshufps
cmpsb
inc
xor
hlt
xchg
out
lods
cmp
push
cmp
fs
cmp
cmp
jbe
cmp
jbe
and
sbb
loope
and
cmp
and
mov
flds
inc
mov
cmp
ret
add
push
push
int
xchg
lret
addb
pop
or
push
pop
xor
sub
xchg
and
push
mov
pop
enter
dec
dec
dec
sbb
enter
sbb
and
les
mov
lea
sbb
mull
jo
xchg
push
push
adc
shrl
push
les
xor
or
faddp
sbb
arpl
inc
push
push
push
sbb
stos
inc
add
xor
cmpsl
fucomi
daa
decb
mov
inc
test
ds
mov
lcall
and
lock
or
and
or
push
clc
sub
aaa
mov
push
cmpsl
cmc
fs
sub
push
add
lret
add
aam
xchg
adc
aaa
in
or
nop
push
sbb
cs
push
mov
call
pop
test
rorl
mov
por
out
adc
xchg
add
adc
push
inc
push
pushf
add
dec
inc
pop
inc
popf
add
dec
lods
inc
push
or
lahf
ss
add
insb
out
mov
jl
pop
mov
fadds
out
jbe
sbb
push
sbb
stc
fadds
fs
stos
push
pusha
mov
jbe
pop
test
jge
mull
rclb
rcrb
pop
enter
jmp
cmp
jae
cltd
call
outsl
push
in
add
fcom
cli
fnstenv
cmp
pop
add
pop
stos
fdivr
jbe
subb
insl
push
xchg
push
mov
faddl
inc
jmp
inc
xchg
add
enter
in
or
mov
seto
and
adc
stc
ret
cld
flds
lret
insl
fstps
and
sbb
fistl
mov
ret
out
push
cwtl
sbb
movl
cld
lods
cmp
sbb
and
sub
out
into
ljmp
pushf
jo
ficoms
jge
mov
or
pop
rolb
scas
mov
lods
dec
pop
adc
jno
bnd
mov
push
fsubs
lds
fildll
adc
lods
sub
and
loopne
test
roll
out
aam
test
js
xor
push
pop
xchg
add
popl
sub
mov
sub
into
rorb
fldt
push
dec
daa
je
cmp
adc
add
shrb
test
test
sbb
dec
lds
in
adc
and
lea
push
adcl
rol
lods
mov
and
and
in
xchg
pop
mov
je
cmp
sub
push
bound
aas
lea
daa
pop
sub
bound
lock
lahf
mov
push
and
jb
flds
sarb
pop
fmull
test
pop
pushl
notb
jne
mov
mov
jecxz
insl
and
cmp
jl
fisttpl
sub
push
dec
cld
cmp
jmp
ficompl
mov
jmp
testl
push
inc
leave
cmp
dec
xor
add
and
jl
call
xor
lods
inc
dec
flds
in
mov
sub
mov
mov
jle
sbb
push
push
jp
ja
iret
push
pop
in
mov
add
mov
cmp
in
or
and
or
mov
jge
add
adc
outsb
in
xchg
xchg
push
sub
xor
cmp
call
pop
push
mov
dec
mov
xor
pop
add
pop
dec
lock
cmp
inc
inc
cmpsl
cmp
add
fsubrp
pusha
add
or
or
insb
cmp
or
dec
repnz
insl
lcall
mov
or
jle
push
push
ret
aas
test
test
xor
adc
jo
cmp
jge
push
faddl
push
pop
pusha
jle
mov
push
xchg
repz
or
push
jl
cmp
jg
mov
inc
dec
mov
rcrb
push
inc
out
and
push
add
add
xor
in
mov
aaa
add
cmp
imul
out
jo
xorb
mov
inc
and
push
cmpsb
add
or
scas
fsubrs
or
mov
inc
int3
imul
xor
out
mov
pop
je
cli
xchg
and
push
jbe
xchg
inc
cmp
data16
lea
int
vpcmpeqw
rolb
loopne
stos
and
jbe
jp
in
dec
pusha
or
pop
push
mov
cli
ret
stc
adc
or
add
add
add
test
push
sbbb
sbb
hlt
cmp
jmp
cmp
sbb
pop
ja
adc
or
mov
inc
mov
sub
or
out
orb
sbb
sbb
push
into
push
fildll
in
sahf
out
std
add
mov
or
sub
cmp
add
xchg
mov
cld
sbb
sbb
aaa
test
rcrb
mov
je
cmp
sarb
jo
negb
adc
leave
scas
dec
mov
sbb
and
xchg
iret
stos
jae
ja
insb
push
loop
imul
aas
call
ret
jg
lds
xor
stos
fidivs
repz
cmpl
cltd
jp
pop
mov
sti
and
inc
push
andl
or
orb
aas
test
push
push
mov
xor
fwait
sub
faddl
ret
pop
bndldx
leave
mov
mov
leave
loopne
lds
lret
add
subl
adc
dec
rclb
notl
mov
movsb
or
adc
dec
and
dec
test
lret
mov
mov
cmpsb
cmpsb
popf
popf
add
or
push
pop
dec
iret
aaa
jl
push
int3
adc
jae
xchg
in
ret
pop
cli
adc
sahf
and
jl
or
push
jbe
inc
cwtl
and
insl
lock
arpl
xchg
mov
push
lock
adc
add
jmp
ret
ds
mov
lea
loop
subb
adc
shll
add
or
cmc
sub
sar
inc
test
push
rorb
aas
push
push
mov
cs
adc
pusha
xor
xchg
scas
adc
mov
jg
inc
add
and
push
push
imulb
pop
or
pusha
cmp
hlt
adc
not
mov
adc
or
mov
imul
xlat
jb
ficoms
and
sarb
cltd
and
xchg
xchg
ljmp
in
sub
cmovbe
cmp
mov
lret
in
push
jp
jecxz
out
pushf
dec
and
adc
sub
pop
adc
dec
rorl
or
and
push
and
aaa
push
gs
xor
and
jge
je
std
and
aam
pop
sub
rol
mov
xor
adc
mov
mov
xor
faddl
in
int3
push
shl
rorb
lea
mov
mov
orl
cld
mov
mov
mov
add
inc
xor
aam
js
pop
mov
popa
mov
pop
push
iret
jmp
inc
cld
jne
mov
push
mov
push
gs
adc
and
mov
int
aaa
jecxz
ret
jne
push
mov
aaa
movsb
push
or
lret
cmpsb
adc
mov
fiaddl
fnsave
aad
sbb
mov
adc
mov
in
shlb
adc
sbb
jmp
mov
jle
fisttps
mov
stc
test
je
pushf
xor
pop
sbb
outsb
lahf
std
iret
pop
jg
dec
jmp
test
cmp
mov
test
pop
sbb
pop
insb
pop
mov
test
je
js
xchg
fs
add
jecxz
push
call
jo
sbb
in
and
inc
pop
push
xchg
insl
mov
or
adc
scas
push
sub
rolb
push
mov
insb
fsubrs
xor
or
test
fdivrs
or
lock
push
and
and
ss
xchg
sarb
or
int3
push
pop
addr16
lahf
inc
mov
inc
mov
fcomps
pop
loopne
xor
pop
pushf
pop
xor
adc
dec
scas
xor
add
adc
inc
xor
aam
inc
add
pushf
lea
jae
enter
outsb
jb
int3
cmpsb
or
ja
push
adc
lea
sbb
and
enter
push
mov
xor
decl
mov
push
push
in
lods
imul
cmp
je
xor
jns
sub
sub
cbtw
sub
jmp
lea
in
cmp
xchg
mov
addb
aam
in
push
jno
jge
and
in
mov
mov
adc
or
jbe
jp
and
jge
dec
in
or
push
mov
pusha
div
js
mov
mov
ja
jl
inc
lea
jp
das
ljmp
ficoms
push
test
test
sbb
loopne
xchg
or
loopne
cmp
sbbb
or
insl
testl
cmp
lods
cmpb
outsb
mov
aam
inc
dec
stos
push
sbb
dec
adc
stos
adc
xchg
in
mov
xchg
sub
fstl
pop
mov
lret
popa
mov
add
mov
cmp
jg
jbe
fs
cmp
cmp
add
repz
or
jo
outsb
xor
adc
add
ds
inc
nop
add
mov
dec
xor
sbb
mov
test
jl
mov
es
les
jg
cld
mov
adc
mov
shl
add
inc
add
mov
icebp
push
ficoms
lahf
or
jge
insb
into
cmpb
mov
mov
push
pop
orl
loop
nop
shll
neg
or
push
adc
or
mov
sahf
test
or
mov
mov
cmpsl
mov
inc
dec
xchg
jle
decl
push
andl
shl
sbb
pop
pop
out
inc
add
push
cmp
mov
jle
ljmp
cmp
jae
mov
jne
test
and
mov
xchg
sbb
lahf
pop
ret
addr16
mov
and
xor
cmp
stos
shl
jbe
mov
add
mov
andl
mov
sub
pusha
xchg
xor
test
loop
pop
syscall
pop
push
or
cmp
jmp
push
push
push
mov
adc
fcompl
into
mov
mov
sbb
aaa
xor
fadds
xchg
inc
loope
pop
cmp
jg
lock
xor
jno
fnstcw
data16
movzwl
add
or
fldcw
xchg
fstp
jl
pop
jp
add
jecxz
xor
adc
inc
cmp
enter
mov
add
add
mov
sub
jno
adc
jo
xchg
add
fsubl
sbb
pop
or
test
aaa
sbbb
cmova
mov
lods
add
adc
pop
jl
roll
push
and
push
add
or
fs
fistps
cs
add
cmp
xchg
loop
rclb
lcall
pop
push
dec
fsubr
test
adc
decl
xchg
and
add
sti
jmp
cmpxchg
lea
movl
sub
cld
jo
or
scas
and
insl
push
stos
jne
push
sbb
fiadds
jnp
add
ficoml
adc
mov
cmpl
xor
xor
mov
sahf
jecxz
mov
add
sub
mov
adc
or
pop
mov
add
aad
dec
test
sub
cwtl
cmp
push
shr
inc
lahf
inc
pop
pop
aas
xchg
out
mov
pop
and
push
jnp
sahf
lret
sbb
add
jne
aas
cmp
push
out
sbb
movsl
pop
push
xor
pop
mov
or
pop
xor
imul
mov
jb
js
add
xchg
sbb
cmp
mov
add
xor
popa
test
and
push
in
les
xchg
fs
in
push
sar
test
mov
mov
pop
adc
inc
or
dec
lahf
adc
push
pop
dec
mov
cmpsb
mov
jae
loop
lahf
in
jecxz
dec
mov
data16
je
dec
fisttpll
ljmp
push
xchg
mov
lea
into
mov
insb
jg
in
inc
hlt
push
push
rcrl
ficoml
fs
mov
or
dec
cwtl
xorb
in
sahf
test
das
rolb
ficoml
lea
mov
outsl
addl
push
jge
repnz
and
int3
rolb
cmp
adc
sub
mov
pop
lock
mov
sbb
mov
rcrb
mov
xor
cvtdq2ps
sbb
xchg
sub
ret
adc
cmp
addl
faddl
das
mov
xor
mov
xchg
or
pusha
jmp
dec
push
rorb
dec
outsb
push
jne
push
mov
fisttps
xorl
pop
push
mov
movsl
jbe
out
xchg
xchg
dec
xchg
or
pop
add
mov
lahf
subb
push
dec
test
mov
pusha
fs
inc
mov
jl
sbb
and
shrl
loop
in
dec
and
push
xor
fiadds
jne
and
or
xor
sub
out
sahf
sub
movsl
div
inc
adc
in
testl
push
mulb
js
dec
js
mov
mov
fiadds
pop
fs
xchg
leave
mov
ljmp
lods
ss
inc
leave
pop
dec
and
fcmovu
pop
xchg
jbe
or
pushf
push
cli
inc
lods
ror
push
cmc
aad
cmp
jne
mov
call
mov
mull
cmp
je
inc
add
add
mov
mov
mov
lock
aam
pop
adc
or
sbb
out
xchg
jb
imul
mov
ficompl
xchg
cli
sbb
js
sbb
and
xchg
vmovsldup
cmp
mov
mov
call
xor
js
sub
fiadds
dec
sbb
dec
sbb
push
adc
std
pop
add
and
jne
sbb
icebp
out
les
adc
call
adc
xor
dec
pop
imul
ss
push
mov
xor
lds
cli
xor
das
mov
mov
jae
loop
push
fisubl
and
push
or
je
bound
call
pmaxsw
cmpl
and
push
push
adc
inc
call
push
mov
sub
xchg
in
dec
or
cmp
and
loopne
sti
dec
mov
adc
jno
std
mov
fistpl
lea
sbb
push
loope
out
dec
cmp
cmp
or
stc
pop
je
aad
dec
je
jmp
rclb
cmp
cmc
call
rolb
mov
push
xorl
adc
inc
inc
popa
dec
adc
and
inc
cs
adc
and
dec
pop
xor
test
push
out
test
lea
dec
and
and
jl
add
mov
mov
mov
loope
or
lea
incl
xchg
mov
mov
sbb
rcrb
int
arpl
mov
jns
int
and
xchg
negb
xor
jbe
adc
movl
adc
xchg
in
insl
loope
addb
pop
mov
mov
jo
cwtl
loopne
setae
insl
mull
lea
or
outsl
and
push
loope
imul
call
fwait
jmp
lea
int3
movsl
xchg
mov
push
push
leave
sti
mov
and
mov
dec
je
test
in
xchg
sbb
adc
adc
inc
cmpl
cld
daa
clc
bound
ret
inc
and
adc
cmp
inc
mov
pushf
dec
pop
call
or
jne
aam
pop
or
out
fldcw
dec
dec
rcrl
add
jo
push
add
pop
sub
mov
das
repz
push
mov
shll
mov
push
jne
sub
sub
js
push
imul
movsl
mov
dec
fldl
mov
ja
lock
cmpl
xor
mov
sub
enter
push
movsl
sbb
mov
xchg
inc
ljmp
jne
fidivs
das
adc
or
mov
cmp
pop
push
sub
xor
loopne
stos
rolb
xor
inc
pop
js
addl
adc
add
xchg
jo
clc
and
or
sarb
fnstcw
cmp
jo
aas
int3
aaa
mov
mov
mov
inc
cmpsb
and
pop
cmpb
outsb
push
jge
test
inc
clc
mov
dec
in
jle
sbb
xor
fdivs
sbbl
js
push
es
mov
cs
nop
jns
xchg
into
push
push
imul
push
xchg
sbb
test
mov
add
mov
outsb
pop
neg
lea
sbb
je
fwait
sbb
pop
pushf
adc
roll
outsb
xchg
aam
sbb
mov
and
or
adc
adc
test
adc
sti
add
lcall
sti
pop
push
jle
sub
mov
decb
ss
clc
stos
call
cmp
jl
adc
mov
adc
loop
lret
jb
popa
mov
orl
mov
xchg
add
or
rcr
jne
ret
jae
push
xor
cmp
ja
aas
mov
add
es
mov
scas
mov
mov
xorb
outsb
bound
and
pop
inc
scas
bound
push
sbb
sbb
cmp
sbb
or
inc
xor
and
push
aaa
add
add
mov
mov
cmc
les
or
inc
xchg
add
ds
pop
sbb
in
inc
loop
add
cmp
push
pusha
sbb
aas
enter
nop
and
xor
je
mov
stc
push
push
adc
out
in
adcl
repz
cmp
mov
push
push
add
dec
rolb
into
jbe
or
mov
jb
jae
push
push
movsl
lock
es
mov
xor
push
into
or
pusha
rorl
loop
addl
clc
and
loopne
imul
pop
vmptrld
cmpb
add
sbb
xchg
and
or
lahf
andb
repnz
cmp
ficoml
xchg
jmp
dec
mov
xchg
into
or
add
aas
push
not
add
inc
inc
popa
xor
or
xor
or
dec
fcoml
inc
insb
loopne
push
arpl
divb
pop
mov
ret
pop
add
push
imul
mov
mov
into
or
jo
aam
aaa
or
pop
out
fisttps
add
nop
xor
jo
inc
mov
fcomps
sar
mov
xor
iret
or
adc
fnstsw
cli
fdivr
jmp
inc
lea
mov
pop
push
rclb
jmp
in
xlat
aaa
inc
sbb
inc
jae
jae
lea
mov
in
sub
cld
and
leave
hlt
fnstsw
mov
cmp
test
in
psubusw
jo
dec
jne
lea
sub
or
sub
sbb
xchg
xchg
cli
and
jge
call
int3
inc
fimuls
push
addb
add
pusha
xor
lea
cld
in
pusha
cmp
mov
out
jae
cmpb
cltd
fiaddl
cmp
push
push
call
sbb
out
js
add
xor
pop
sarb
cmp
sbb
popf
adc
push
pop
das
jmp
call
pusha
addl
jl
add
mov
xor
push
or
push
mov
xchg
mov
mov
fadds
mov
cmpsl
cmp
pop
sub
sbb
mov
or
or
xchg
push
push
movsb
pop
pop
and
cmp
cmpb
inc
adc
pusha
inc
shll
stc
add
jmp
iret
dec
inc
add
loope
sub
mov
rcll
inc
sti
sbb
std
lods
or
mov
pushf
sbbb
test
rorb
add
xor
test
mov
jne
mov
nop
lea
and
adc
xchg
jno
mov
out
mov
dec
in
sbb
dec
gs
xor
cmp
xor
cmp
stos
je
push
daa
or
es
lea
out
or
xor
movb
in
sub
lret
dec
inc
inc
add
add
sub
mov
mulb
inc
mov
shll
jle
loopne
push
push
add
mov
jmp
imul
push
int
adc
aas
mov
push
sahf
mov
mov
add
mov
in
mov
in
shrb
add
add
rcrb
pop
and
adc
cmc
shlb
roll
dec
pushf
or
lret
sbbl
jmp
fsubrs
jge
mov
lock
inc
cld
hlt
mov
inc
and
cmc
sbb
adc
adc
pop
mov
into
int
ret
xchg
or
xor
mov
add
out
jb
or
inc
xor
push
pop
ret
testb
sub
push
mov
dec
fs
roll
cmp
je
xchg
fisubrl
andb
or
adc
ja
inc
cmp
sbb
and
pop
inc
je
pop
xchg
pop
dec
in
fldpi
pop
stc
invd
aas
jp
and
xor
cmp
mov
push
aam
mov
add
inc
ficoms
push
push
add
and
push
and
std
jmp
stos
xor
or
sarl
lea
cmp
cltd
loope
lds
mov
jmp
sti
xchg
add
lock
or
shrb
fnstenv
sbb
jb
loop
into
cmp
add
int3
pop
aad
mov
add
sub
add
out
sbb
in
or
mov
xor
cmp
sub
call
mov
filds
divl
mov
bnd
cmp
push
jmp
xchg
sub
inc
add
lahf
ljmp
frstor
inc
jmp
jmp
cld
popa
repnz
jae
lea
push
cmpb
jne
subb
rol
add
sarb
lock
ljmp
neg
sbb
and
adc
in
incb
out
pushf
dec
repz
sbb
or
cmp
push
push
or
je
insb
outsb
xor
add
sub
adc
cmpsb
out
jl
sbb
test
jbe
push
xchg
imul
or
push
push
pop
add
ficomps
das
pop
and
or
jp
shrl
jmp
mov
cmpsl
inc
jmp
xor
xor
mov
addr16
and
mov
sub
xchg
push
sahf
push
xchg
jecxz
mov
mov
inc
adc
ret
pop
cmp
and
sahf
cmpsl
fxch
movntps
push
mov
jecxz
pusha
push
xchg
into
repz
shr
pop
faddp
xchg
js
push
insb
and
and
jne
jmp
fildll
lock
gs
arpl
dec
pop
ss
into
cmpw
mov
add
cmpsb
rorb
jmp
inc
push
call
out
mov
leave
into
mov
jnp
je
jno
pop
push
xlat
or
or
loope
stos
mov
mov
bts
xor
pop
inc
mov
jg
dec
lods
mov
mov
mov
imul
xchg
xchg
jmp
pop
fs
lock
cmp
js
divb
inc
jb
push
jae
jo
sub
je
stos
dec
push
dec
call
sarl
shrb
cmpsl
and
inc
sbb
bnd
ret
hlt
testb
in
mov
xchg
or
adc
dec
push
jmp
mov
sbb
jo
add
fcmovne
popf
adc
add
cmp
add
int3
sub
jmp
push
add
or
add
ja
call
out
and
imul
pop
rcrl
push
add
cmc
add
jb
sub
mov
jb
xchg
popa
xchg
pop
push
lea
test
pop
or
loopne
scas
push
and
lea
orl
call
jnp
outsb
xchg
mov
xor
idivl
add
pop
call
lea
fsubrp
mov
xchg
jge
mov
push
orb
push
push
push
andl
push
mov
test
mov
pushf
repnz
lea
add
aaa
cmp
add
cmovo
mov
inc
jge
mov
aaa
loopne
vmulsd
ret
xchg
push
test
or
push
ja
in
and
ret
mov
sub
add
lock
pop
jno
lret
xchg
divb
xchg
and
adc
sbb
mov
fstps
cmpl
pop
pop
xchg
xor
push
jno
pop
adc
push
dec
pop
repnz
test
shll
jl
sub
pop
rorl
lret
outsb
pusha
jle
mov
or
jge
xchg
fisubrs
mov
xchg
dec
aaa
test
sarb
mov
cltd
or
add
iret
jl
jmp
jae
xor
add
cmp
jge
mov
mov
ret
xchg
icebp
sbb
or
push
ljmp
aas
adc
shlb
leave
ror
or
xchg
dec
cld
xchg
mov
enter
dec
mov
push
hlt
adc
pop
out
fdivrl
push
push
ja
repz
add
es
mov
sub
mov
into
xor
pop
inc
and
xor
push
mov
mov
xchg
cli
or
xchg
in
push
push
mov
and
cmp
mov
push
sbb
or
test
sahf
adc
imul
je
addl
fdivrs
jle
imul
mov
mov
push
scas
push
mov
lock
enter
pop
or
push
sti
sbb
fs
xchg
movsl
roll
pop
rolb
mov
xchg
and
and
sub
mov
inc
cmp
mov
or
rcl
jae
dec
fld
inc
mov
fisubrl
cmp
orb
add
inc
mov
pop
clc
push
mov
and
cmp
stos
outsb
fldt
pop
mov
test
pop
xor
pop
xor
aas
xor
jbe
aam
mov
mov
rorb
je
mov
mov
insb
or
push
or
add
mov
sarl
sar
pop
js
ret
fsubrs
or
mov
and
add
cmpl
or
push
loope
jmp
pop
in
mov
add
push
ja
mov
push
fldenv
movb
cs
loop
inc
dec
inc
dec
mov
hlt
js
jmp
sub
push
ss
jmp
adc
popa
rorb
push
cwtl
aaa
cmp
xchg
scas
adc
fs
into
aad
push
outsb
add
cmp
js
mov
add
sub
or
mov
cmp
jbe
jnp
or
mov
cmc
sbb
inc
cli
outsb
or
or
loopne
push
sub
pushf
jg
test
inc
or
jp
jae
mov
aam
push
xchg
dec
or
lods
xor
lret
adc
adc
cmpsb
nop
xchg
xor
nop
fwait
or
ficoms
pusha
inc
cmp
cmp
add
leave
test
mov
sbb
xor
sbb
test
aaa
add
shlb
jge
adc
cmpsl
pop
adc
adc
add
pop
je
push
js
aas
add
inc
and
mov
jo
mov
cmp
add
and
jmp
sbb
and
es
pop
sbb
add
push
xchg
and
mov
push
mov
or
punpckhbw
sub
adc
add
mov
pop
mov
cld
add
repnz
cmpsl
dec
or
lret
mov
or
mov
mov
fstpt
jl
push
jg
cmpb
jne
inc
inc
xor
dec
or
or
sub
jne
cmpsb
shlb
aam
add
sbb
test
movsb
adc
aas
dec
leave
inc
addl
out
xor
ret
mov
inc
add
xor
jb
dec
mov
es
mov
je
adc
push
cs
mov
sbb
popa
test
sbb
xchg
in
jl
add
add
test
sbb
out
add
xor
and
mov
xchg
lret
inc
sbb
xchg
div
movb
shll
popa
lea
in
sub
in
mov
sbbb
in
pop
aaa
inc
or
cmp
mov
cmp
aas
add
mov
cmp
and
loope
push
lea
adc
cwtl
add
mov
pop
jmp
jo
cmp
rorb
dec
clc
or
xchg
pop
andl
shlb
jle
lock
addr16
push
push
sub
and
mov
ror
add
je
inc
imul
repz
push
repnz
jns
incb
pop
push
cmpsb
in
xlat
mov
push
pop
inc
sahf
pop
jl
enter
aaa
adc
movsl
mov
add
int3
inc
mov
push
push
arpl
and
push
and
pushf
inc
push
mov
test
sub
clc
add
fadds
xor
lods
testb
xlat
out
decl
mov
jb
push
and
jne
xchg
and
xor
test
mov
adc
jmp
jne
add
sub
jns,pn
adc
int
and
sub
or
adc
push
jo
sub
mov
push
sub
leave
mov
cmp
sahf
in
inc
dec
sub
jmp
inc
adc
aaa
lahf
in
xchg
jb
jle
test
add
test
add
pop
mov
xor
imul
negl
push
inc
jne
fwait
iret
cmp
jne
cmpl
push
aaa
inc
cmp
loop
jmp
sahf
insl
or
mov
dec
dec
xor
mov
or
mov
push
imul
in
push
les
pop
push
cmp
into
jl
xor
roll
pop
cmp
loopne
mov
dec
add
sbb
mov
inc
adc
cmpl
add
dec
push
stc
cmp
mov
adc
out
sub
and
and
jns
xchg
adc
arpl
and
add
insl
sbb
mov
in
loopne
mov
sbb
pop
push
inc
mov
xor
je
daa
or
pusha
pop
lcall
and
lock
dec
mov
push
xchg
imul
pop
xor
dec
mov
jmp
mov
testl
push
iret
push
pushf
sub
es
scas
push
repnz
pop
movsl
es
pop
js
add
add
mov
push
mov
movsl
ja
dec
push
int3
sub
adc
test
push
mov
and
adc
sub
cmp
xchg
adc
sub
push
mov
push
xor
sub
and
sbb
lahf
sbb
push
pusha
orl
enter
cmp
add
aaa
push
add
rcrb
add
lock
imul
adc
int
pop
adc
mov
cltd
inc
adc
inc
lods
sbb
mov
push
adc
dec
mov
leave
add
and
add
lahf
adc
fs
popa
pusha
add
xor
push
int
xchg
and
xchg
xchg
cmp
sub
sbb
jno
nop
add
push
xchg
sbb
arpl
push
incl
int3
lahf
cmp
push
jbe
pop
filds
dec
cmp
sbb
cmc
inc
sbb
aam
mov
loopne
lock
mov
or
test
sbb
adc
je
dec
loope
es
cmc
pminub
cmpsl
cmpsl
add
lea
or
out
dec
and
rcrb
pop
adc
push
rorl
stc
nop
pop
pop
push
mov
mov
in
rolb
and
xchg
pop
sub
dec
push
inc
sub
jo
ja
sti
add
sbb
mov
add
adc
cld
add
push
cmp
lret
les
pop
loope
and
push
push
sarb
scas
add
cmp
fnstenv
ds
enter
adc
add
in
and
pop
lret
xchg
test
or
mov
fwait
inc
enter
push
aas
sbb
adc
dec
inc
push
or
mov
xchg
push
add
js
mov
push
sub
imul
add
mov
xor
xor
mov
push
xchg
adc
in
movsb
xor
sbb
adc
pop
lods
test
js
sbb
ret
mov
sbb
dec
push
xorl
shrl
adc
sbb
mov
andl
mov
and
cmp
out
repnz
push
push
adc
pop
sbb
dec
sbb
es
mov
imul
mov
sahf
lahf
jge
lock
sahf
push
adc
icebp
aaa
pop
inc
adc
outsl
movsb
adc
cmpb
dec
jge
scas
sbb
and
scas
lahf
fmuls
mov
cmp
lea
test
or
ss
jge
xchg
lea
jne
ror
mov
out
call
mov
pusha
xchg
fistpll
or
xchg
and
mov
ret
sub
mov
add
mov
dec
aam
int
xchg
pop
test
dec
rcr
mov
sbbb
fmul
add
sarl
push
repnz
mov
push
inc
loopne
add
and
cltd
and
push
sbb
fcom
add
addr16
call
mov
jne
dec
jmp
fwait
mov
push
or
mov
adc
push
or
push
add
dec
enter
inc
xor
rcr
adc
enter
or
or
push
or
ret
fs
frstor
sahf
pop
cmpsl
push
clc
cwtl
or
push
adc
add
and
ljmp
popa
sub
or
ja
movsl
push
lsl
sub
pop
imul
scas
cmpsl
cmpsl
push
ret
dec
mov
sbb
adc
cmpsb
xchg
xchg
aaa
int
and
popa
mov
pop
cmp
or
xorb
movsl
addr16
aam
decb
je
fldt
jl
jno
gs
inc
and
mov
loop
and
sbb
mov
or
sbb
cwtl
adc
and
pop
adc
lock
jl
ret
adc
push
mov
fs
js
lods
test
jl
sahf
rolb
mov
sub
mov
hlt
jne
cmp
aaa
xor
mov
pop
push
sbb
pop
aam
push
aas
add
xor
mov
add
sar
ret
push
push
aaa
pushf
stc
mov
pusha
xchg
sbb
dec
std
xlat
add
xchg
adc
dec
ss
mov
jl
push
cmp
icebp
pop
xchg
shrl
mov
adc
mov
jge
pusha
movsb
mov
pop
jle
and
cmpsl
leave
cmp
inc
dec
adc
xor
cli
xor
or
je
dec
andl
adcl
xchg
mov
ret
pop
or
mov
dec
sahf
sbb
sbb
jmp
xchg
add
and
testl
inc
hlt
lea
and
stos
mov
pushf
xchg
cmpsl
nop
mov
out
xor
mov
lods
pop
lcall
rcrb
mov
or
into
cs
push
inc
pop
ljmp
pop
rol
push
das
and
fnstcw
lcall
add
in
int
cmp
insb
add
push
sbb
mov
je
jne
mov
in
loope
je
sub
cmp
pop
mov
mov
cld
cmp
fsts
xor
add
and
mov
loope
jns
add
jmp
pop
test
push
call
and
sbb
and
push
adc
or
push
add
mov
aam
dec
add
fstps
in
mov
push
and
test
pop
inc
clc
ficoms
or
xchg
pop
sbbb
xor
and
lock
push
xor
mov
gs
ret
xchg
adc
add
sti
andl
lret
or
inc
xchg
adc
push
sbb
xchg
movsl
mov
push
inc
push
movsb
fcmovnb
andl
jge
js
cmp
subb
sbb
dec
cmp
test
adcl
add
cmp
push
lret
add
imull
xor
and
push
stos
or
xchg
jp
or
pop
int3
add
sub
and
and
push
data16
aas
and
roll
lret
aad
arpl
mov
data16
or
adc
jl
adc
inc
mov
push
sub
pop
push
sub
mov
lods
cs
jo
sbb
push
stos
sub
inc
pop
inc
push
and
push
test
jae
lock
roll
xchg
and
out
mov
stos
adc
fsubrs
scas
lcall
dec
and
xor
sub
les
sub
sbb
inc
pop
lods
dec
sbb
add
cwtl
imul
mov
mov
cmpsb
icebp
negb
adc
mov
sbb
and
or
inc
sub
jne
imul
add
gs
lock
cmp
jae
mov
xorl
rcr
push
xor
ja
push
push
push
test
adc
push
sub
sub
clc
aad
lods
add
inc
cs
pop
pusha
pop
sub
or
mov
sbbb
add
jle
es
sbb
pop
jmp
cmp
andb
fdivrp
push
xor
mov
mov
lcall
imul
ret
adc
or
out
push
sub
and
ret
mov
add
inc
push
mov
sbb
enter
dec
test
xorb
adc
xchg
ret
add
cld
mov
mov
cmp
add
or
inc
mov
ret
in
and
js
mov
cmp
add
adc
add
ret
insb
mov
sbb
mull
xchg
or
inc
add
lock
push
jne
mov
js
push
shrl
cmp
inc
fstpl
rolb
les
pop
or
sbb
outsl
sbbb
frstor
cltd
and
lock
mov
add
add
jb
icebp
push
pop
ret
or
cmp
loope
jmp
hlt
inc
pop
insl
sub
lret
sti
test
shrl
stos
clc
cmp
dec
or
cmp
adc
jo
mov
inc
dec
pop
cmp
adc
or
pusha
test
add
loopne
add
andl
int
cmpsb
adc
mov
stc
call
stos
sbb
xor
repnz
andps
push
and
add
adc
adc
cmp
andb
loop
cmp
add
test
daa
in
lcall
add
cmpsb
push
mov
test
or
xlat
lock
or
mov
out
xchg
adc
jb
fbld
fiaddl
or
mov
cmpsl
mov
test
lock
or
lods
jge
sub
mov
inc
hlt
sbb
sub
adc
fisttpll
mov
out
sub
and
out
popf
sub
adc
lock
push
and
xor
xor
es
popa
xor
or
sub
push
sbb
fstpl
inc
xor
je
into
cmpsl
out
inc
push
lret
sub
daa
dec
mov
shrb
mov
lret
mov
add
fs
add
push
mov
add
dec
aam
push
mov
sbb
mov
dec
loop
bound
in
add
sahf
dec
push
inc
push
xchg
xchg
add
mov
sbb
push
mov
rolb
pop
and
cmp
push
test
dec
fwait
data16
jmp
test
cmpsl
test
cmpsb
add
add
lcall
std
and
cmp
fcompl
xchg
jmp
xchg
aam
cmpsl
ret
imul
sti
adc
inc
inc
and
add
add
dec
lcall
inc
mov
xchg
inc
add
xchg
sbb
add
in
int
fbld
xchg
mov
sahf
fists
adc
and
push
inc
cmpsl
or
xor
nop
lret
add
movsb
xor
or
xchg
add
add
test
inc
sub
sub
xor
xor
xor
cmp
xchg
add
test
inc
sub
dec
pcmpgtb
dec
call
inc
rorb
hlt
sub
adc
sbb
mov
into
xchg
into
xlat
and
mov
and
in
rcrb
les
enter
inc
xchg
aam
ficomps
arpl
cwtl
pop
add
dec
mov
or
in
mov
jb
and
fsubrs
push
movl
incl
add
pop
mov
pusha
adc
dec
fs
fdivr
fidivs
pop
sub
sbb
dec
fimuls
inc
and
jg
adc
sbb
jge,pt
mov
push
jecxz
sbb
rcrb
icebp
test
xchg
in
mov
sbb
pop
dec
lcall
stos
movsb
mov
xor
mov
in
fs
nop
pop
jp
mov
setne
push
push
enter
inc
mov
dec
movsb
sbb
or
dec
lcall
mov
lcall
sub
movsb
sbb
and
sbb
add
dec
lcall
mov
inc
andl
sub
andl
jmp
in
pop
add
adc
nop
mov
and
lret
in
sub
mov
and
dec
jb
mov
mov
push
cli
mov
clc
int
add
enter
stos
and
push
call
js
add
iret
mov
and
jne
orl
cmpb
jo
movsb
push
rcl
stc
dec
daa
pop
mov
int
and
xor
mov
mov
xchg
daa
dec
mov
add
cltd
dec
and
or
andnps
inc
push
inc
sbb
sbb
adc
sbb
xor
pop
cld
cwtl
mov
push
je
push
push
lock
and
add
jmp
add
sub
sbb
dec
xchg
inc
roll
movl
sbb
inc
jb
jb
sbb
fcoms
orb
xor
sbb
ds
add
push
sbb
cmp
dec
pop
mov
test
jl
inc
aam
or
push
mov
sub
mov
dec
imulb
sbb
mov
testb
inc
cmp
test
popl
loopne
xchg
addb
jmp
test
mov
cmp
cmp
mov
gs
jp
test
sub
movsb
xor
addr16
push
hlt
pop
lock
stc
cli
xor
cmp
shl
pop
mov
sbb
repnz
xchg
sub
push
mov
add
add
sbb
inc
xor
mov
adc
dec
or
pushf
or
or
sahf
or
dec
push
jge
lret
rcrb
push
lcall
or
sub
cwtl
mov
or
sub
fsubl
jmp
mov
gs
je
xor
push
clc
push
adc
hlt
sub
jge
stos
cs
add
and
xchg
inc
or
sub
sub
adc
or
jl
pop
and
lea
sbb
push
push
push
nop
push
es
fildl
mov
adcb
cld
ret
cld
pop
fwait
cmc
add
ss
dec
orb
das
andb
arpl
sub
adc
and
in
mov
mov
scas
test
test
pop
shld
les
jg
gs
cmp
xor
sahf
push
adc
jge
or
jle
sbb
xchg
inc
push
jle
adc
mov
insb
mov
in
lea
xchg
int
inc
xchg
jo
mov
dec
add
mov
xlat
insl
xchg
andb
xlat
rorb
hlt
call
xchg
daa
mov
loopne
loopne
push
fimuls
xchg
lods
jl
dec
in
push
pushf
mov
adc
mov
sub
in
js
xchg
sarb
cmp
into
add
dec
ss
and
or
sbb
cwtl
inc
mov
mov
in
cltd
dec
faddl
inc
push
push
lret
test
cwtl
mov
and
push
inc
add
inc
lret
add
cli
mov
lock
out
pop
inc
push
lea
shlb
jg
jo
push
call
mov
in
push
jne
nop
jp
movb
fimull
xor
mov
cmp
ljmp
std
fdivl
mov
cwtl
adc
fiadds
mov
cmp
mov
orl
pop
in
or
int
xor
cmp
lds
loopne
mov
ss
push
cmpsb
int3
pop
push
mov
test
jge
jae
push
add
sti
jmp
mov
mov
or
cmp
push
js
mov
push
adc
cs
and
dec
adc
push
jo
mov
xlat
push
sbb
push
jb
jmp
imul
sahf
xchg
out
and
dec
cmpsl
jno
adc
imul
stc
add
cmp
aaa
fs
leave
push
cli
movl
adc
or
or
dec
nop
les
int
and
cmpl
and
es
dec
fs
imul
fiadds
insl
sbb
loopne
xchg
or
jns
mov
xor
stos
ret
xchg
pop
push
test
sub
test
orl
push
sbbl
test
in
mov
dec
inc
mov
adc
jo
in
dec
inc
push
cvttps2pi
add
sub
dec
adc
pop
inc
adc
xchg
adc
mov
stos
or
jmp
mov
cli
outsl
lret
push
imul
sub
pop
xorb
sub
xchg
sub
inc
or
jl
stos
sub
test
ficomps
mov
adc
and
inc
cmp
or
cwtl
das
js
add
leave
push
and
pop
pushf
push
cld
jo
and
xchg
sbb
dec
push
mov
jo
and
adc
shlb
adc
sbb
sbb
jno
push
pop
or
iret
arpl
mov
dec
shlb
test
jle
or
push
jno
inc
add
lcall
dec
int
std
dec
cltd
loopne
movsl
sbb
in
int
in
add
pop
pop
sbb
mov
cmp
xchg
push
sub
xor
in
mov
dec
ss
sbb
mov
and
sbb
push
in
or
lods
pop
mov
ret
sbb
fadds
xchg
pop
leave
xor
daa
sbb
cmp
aam
add
ficomps
push
sbb
jns
fdivl
push
movsb
repnz
filds
sub
xchg
pop
pusha
xchg
lret
mov
sbb
xor
xchg
sbb
push
enter
cmp
and
add
cs
stos
dec
push
pusha
pop
inc
mov
jns
inc
in
cmp
popw
test
jl
pop
lcall
cmp
jp
mov
adc
xor
mov
dec
test
jo
mov
and
mov
insb
push
xchg
clc
mov
and
dec
mov
adc
jmp
cli
dec
cmp
cmpb
mull
xchg
lret
dec
outsl
inc
sbb
inc
mov
and
dec
or
jno
out
fisttpl
or
xor
lods
imul
mov
lret
cmp
mov
cs
pop
mov
stos
dec
add
nop
sub
adc
cmp
adcb
xor
test
mov
cltd
cmc
adc
jno
lods
mov
dec
cmp
popa
outsl
sahf
push
addr16
clc
jl
mov
pop
or
sahf
xchg
xchg
popf
filds
jne
dec
mov
mov
jns
push
adc
pop
or
push
repnz
sbb
rolb
sbb
pusha
icebp
sbb
jae
and
add
push
push
stos
mov
push
stos
fcomps
add
cmp
adc
ror
cmp
js
xchg
pop
or
or
imul
aad
dec
mov
pop
add
xor
jle
dec
cmp
xchg
add
jmp
push
sarb
stc
dec
inc
popf
push
pop
jl
push
nop
test
mov
cmpsl
or
js
je
or
add
add
adc
jns
addb
insb
jno
jns
jmp
ret
adc
repnz
inc
xor
sub
and
inc
push
nop
aaa
push
mov
and
testb
xlat
or
dec
in
loopne
mov
mov
cmpsb
cmp
mov
orl
fisttpl
mov
add
divb
adc
lock
ds
fiaddl
jnp
add
sub
fadds
adc
das
push
cmpl
lahf
push
add
or
mov
xor
orl
lea
pop
pop
nop
add
add
fcmovnbe
pop
push
and
das
les
xchg
mov
adc
in
mov
pushl
mov
push
add
mov
add
adc
pop
and
sub
sub
dec
arpl
jo
nop
fiadds
data16
loop
addl
stos
push
movsb
out
mov
add
mov
xchg
sbb
cmp
add
push
ret
cltd
roll
push
push
and
dec
jbe
jns
test
in
cmpsb
ss
or
call
mov
fstl
les
mov
in
scas
push
aad
push
sbb
pop
test
xor
mov
sub
adc
pop
mov
out
mov
adc
mov
add
into
add
add
add
mov
sub
and
ja
fsts
sbb
pop
cwtl
add
xor
les
and
mov
mov
call
inc
jmp
add
call
mov
xchg
sub
popa
xor
inc
and
dec
xor
sub
cld
ret
xchg
in
shll
imul
add
das
sbbl
jne
into
loop
cmp
adc
hlt
outsb
add
or
jp
rorl
ret
testb
jl
int3
xchg
dec
inc
inc
inc
es
je
push
mov
push
cli
mull
ss
add
pop
cmp
shr
jp
decl
out
and
and
cmp
loope
int3
mov
in
jb
push
in
int3
subb
mov
or
xor
mov
sub
adc
cs
cltd
cmp
test
repnz
aas
jae
cs
push
adc
nop
xor
add
adc
sub
aam
dec
jae
je
mov
adc
nop
sbb
jle
cmp
inc
xchg
xor
jae
dec
pop
fisttps
xor
dec
ret
cmp
adc
call
push
adc
loopne
lgdtl
sub
aas
jnp
adc
nop
xchg
xor
dec
pop
nop
sbb
xor
jnp
fs
out
sub
or
and
lock
mov
test
dec
sub
inc
adc
jnp
or
jmp
shrb
pop
dec
popf
je
rorl
dec
jo,pn
jle
repnz
scas
add
nop
sbb
movsb
inc
test
mov
pop
xchg
mov
cmp
lahf
pop
es
outsb
xchg
pop
subb
mov
aaa
xchg
jnp
or
fs
js
or
and
push
or
jns
cmp
xchg
xchg
lret
adc
jg
fs
sahf
je
jl
or
adc
jl
or
mov
sub
je
into
mov
stc
jo
sbb
test
sbb
sub
test
add
loopne
adc
rorb
mov
mov
leave
xor
sarl
enter
xchg
xlat
test
and
mov
mov
cmpsl
mov
lods
mov
sub
inc
mov
and
mov
inc
add
test
mov
ret
cmp
inc
stos
sbb
sbb
push
out
mov
lea
inc
sub
outsl
push
inc
aaa
or
pop
or
icebp
sbb
push
imul
pushf
data16
sbb
mov
sbb
mov
negb
sbb
dec
shlb
mov
pop
and
dec
pop
xchg
inc
cmp
sbb
shlb
push
fisttps
fadds
mov
ret
in
cmp
fs
cmpsl
lcall
aad
pop
mov
and
jne
mov
mov
and
sbb
add
sbb
xor
aaa
insb
cmpsb
test
das
testl
add
xor
pop
movsb
inc
mov
cmpb
call
jns
shlb
mov
mov
outsb
cmp
dec
cld
gs
and
xlat
xchg
push
push
imul
add
add
add
cs
dec
or
data16
shrl
cmp
and
push
pop
ret
imul
cmp
cld
idivb
and
mull
pop
lcall
add
push
lcall
aad
sub
or
mov
jl
sub
mov
loope
mov
lds
daa
push
sbb
add
bound
or
je
or
test
test
jns
shll
out
stos
fs
push
push
or
adc
sbb
mov
pop
sbb
xor
push
xor
popa
into
mov
xor
sub
mov
lahf
push
arpl
pop
and
xor
push
xor
lds
adc
scas
jne
cli
sub
jnp
je
sahf
aaa
fidivs
push
std
aam
movsl
fcmovnu
outsb
mov
and
test
inc
mov
or
rorl
or
add
push
push
and
add
insl
fst
adc
fimull
xchg
pop
and
add
popf
bnd
in
pusha
jecxz
test
pop
fs
sub
loopew
or
repz
and
stc
push
pop
in
pop
lcall
and
jl
add
leave
or
cmp
mov
sbb
and
mov
inc
pop
xor
sub
arpl
cmp
js
pop
or
pop
push
inc
test
and
jb
insb
push
pusha
dec
and
and
adc
xchg
mov
or
push
cmpl
jns
or
push
or
popa
and
loope
outsl
xor
in
and
xor
add
or
or
je
and
ret
add
adc
jecxz
pusha
jge
pusha
mov
jb
mov
sub
orw
cmp
inc
dec
out
xchg
adc
sbb
je
mov
out
mov
lock
xor
inc
popa
mov
popa
stos
sbb
push
dec
pop
xor
scas
push
pushf
pop
test
ret
mov
in
mov
lods
sbb
arpl
je
test
daa
sub
and
clc
cmp
in
cmp
je
push
shlb
push
xor
add
aaa
stc
and
rcrl
xchg
fcomp
fs
lea
sub
jmp
push
dec
sar
and
lods
sbb
lock
add
lods
mov
bound
sub
cmp
clc
ret
cmp
jae
iret
nop
push
xchg
jns
sbb
fistl
inc
ja
and
and
xor
push
mov
jg
shlb
mov
xchg
and
dec
xchg
rclb
and
ret
adc
cmp
dec
mov
push
and
cs
sub
xchg
push
add
add
add
or
movsl
inc
stc
cmpsl
inc
ret
test
popf
call
pop
mov
fucomi
bound
fildll
insl
movsl
notl
push
fwait
sbb
imul
imul
sbb
and
out
adc
in
dec
lock
lds
push
gs
cltd
sbb
dec
adc
add
sbb
inc
mov
adc
mov
xor
jne
cmp
adc
repnz
inc
inc
push
push
sbb
add
xchg
add
outsl
sub
xor
fwait
xchg
cld
inc
and
fcoms
and
incl
adc
out
jle
add
and
setge
loopne
mov
sbb
sbb
outsb
sub
insl
sbb
shrb
pop
adc
adc
jmp
cmp
jnp
xor
pop
sub
push
lret
xchg
cmp
idivl
pop
mov
jns,pn
inc
dec
inc
inc
inc
adc
dec
enter
pop
pop
add
jmp
test
cmc
inc
push
push
adc
mov
aad
add
xchg
out
sbb
mov
push
fcom
pusha
inc
pushf
insb
leave
push
call
jge
xchg
jo
and
outsb
inc
cmp
movsb
fists
pop
push
fcoml
sbb
add
enter
sub
sbb
jne
test
fdivrl
jl
lock
xchg
pop
inc
push
pop
sbb
dec
or
adc
jle
push
sarl
push
push
out
mov
mov
and
mov
push
mov
jmp
lret
mov
mov
mov
aam
and
xchg
les
dec
loop
add
mov
push
mov
das
in
pop
les
inc
add
push
test
mov
and
push
push
je
xchg
sub
jmp
pop
xchg
adc
mov
add
sbb
dec
add
mov
add
dec
cmp
jae
outsl
sub
aaa
lea
inc
sub
icebp
or
add
stos
pop
push
cmp
jns
mov
test
loopne
movl
or
in
daa
mov
xchg
add
adc
push
lods
cmp
mov
imul
fdivrl
sbb
rol
pusha
mov
cltd
jecxz
aas
sub
or
push
rolb
cs
inc
jge
test
adc
fdivs
lret
or
and
and
adc
add
add
test
add
jb
sub
push
out
fisubrl
push
inc
pop
adc
push
push
add
addr16
cmp
jb
add
push
imul
pusha
lods
add
dec
cmp
enter
cmpl
dec
outsb
jle
sub
add
add
insb
mov
push
push
lcall
and
sbb
mov
movsl
out
push
sub
aaa
jmp
push
push
jb
and
inc
push
inc
imul
int
push
mov
sub
cmc
mov
pusha
pop
push
sub
adc
push
jmp
or
ficoms
loopne
push
cmp
jbe
xor
pop
or
and
add
pushf
and
adc
popa
pop
add
cwtl
ljmp
mov
add
call
adc
jbe
test
fsubs
xchg
fists
push
xchg
outsb
mov
scas
add
add
push
cltd
push
testb
fistpl
mov
mov
sub
push
dec
incl
mov
sub
pop
and
shll
movsl
and
adc
stos
add
jns
cmp
hlt
jle
push
cmc
add
sbb
xchg
repnz
shll
aas
rorl
orl
imul
mov
sub
sub
js
pop
sbb
add
mov
fldl
mov
fcoml
cmp
rcrl
add
push
push
mov
movsb
jmp
and
js
loopne
sub
loopne
adc
inc
test
adc
movsl
xchg
movsb
xchg
dec
and
and
or
xor
subb
pop
or
sub
cwtl
and
and
xor
test
outsb
sub
push
xor
pop
sub
xor
dec
mov
mov
and
lret
mov
xor
hlt
sbb
xchg
pop
add
mov
add
sub
inc
inc
sbb
lahf
rorb
xchg
aam
and
pop
add
sbb
or
sahf
scas
xor
mov
mov
add
sub
in
call
and
push
adc
inc
dec
add
dec
push
mov
adc
jge
fdivrs
or
dec
or
inc
lods
pop
or
jl
sbb
js
pop
subl
or
mov
mov
ret
push
inc
pop
jb
xchg
mov
int3
pop
dec
push
or
or
int
and
dec
sub
inc
and
rolb
push
call
fldenv
ss
sbb
adc
push
lods
push
pop
and
bound
push
and
insl
xchg
push
add
cmp
or
add
and
scas
nop
adc
cmp
cltd
lcall
adc
in
xor
cmp
and
add
or
or
pop
xor
cmp
dec
outsl
pusha
jne
cmp
nop
mov
push
inc
pop
cmp
push
push
dec
pop
imul
cmp
or
jmp
ret
or
add
lods
movsb
testb
out
leave
and
mov
push
iret
int3
sbb
xor
push
mov
mov
xchg
dec
add
and
mov
dec
loope
fdivrl
dec
ss
int3
pushf
add
jae
xlat
dec
sub
adc
lea
and
aad
ret
push
fnsave
jle
adc
lds
dec
xchg
fcomip
mov
push
jbe
in
sub
pop
adc
or
dec
les
out
pop
cmp
pop
adc
xchg
xchg
mov
jg
adc
cli
push
dec
call
lea
sbb
push
sbb
scas
rcl
cmp
cmpl
mov
daa
push
mov
push
xchg
test
cmp
movsl
movsl
or
or
pusha
cmp
or
insb
lahf
push
icebp
push
hlt
aad
and
imul
push
lahf
xor
sbb
cmpsl
or
in
movzwl
push
nop
cmp
notl
cmp
mov
mov
mov
dec
sub
push
sub
cmp
aaa
and
pop
stos
adc
fs
sub
or
lcall
sarb
test
dec
add
or
cmpsl
inc
ret
adc
adc
dec
dec
inc
cmp
cmpsb
ret
inc
add
mov
jb
cmp
aam
fdivl
push
xchg
pop
inc
js
sub
call
incl
sub
add
xor
jl
pushf
dec
shrb
fiaddl
aas
movsb
lods
popa
pop
adc
icebp
add
insb
ret
adc
and
sahf
orb
adc
push
adcl
ds
mov
pop
lods
add
repnz
jmp
add
and
or
add
sbb
push
cmp
shrb
sub
je
and
sub
adcl
rcll
xlat
push
add
push
mov
jmp
inc
fs
cmpsb
cmc
or
mov
jg
mov
push
mov
push
push
loopne
nop
and
mov
pop
mov
test
pop
insb
cmpl
cmp
lock
pop
adc
mov
sub
lods
adc
pop
pop
ljmp
sub
push
and
mov
adc
inc
pushf
pop
gs
ja
xchg
jle
add
pop
lcall
inc
sub
lds
jae
pop
add
out
dec
movsl
cltd
rclb
pop
sub
adc
pop
je
mov
stos
pushf
mov
xlat
adc
fsubl
sub
fmuls
pop
mov
push
loopne
jecxz
pop
dec
sbb
add
sbb
sahf
les
addl
cmc
xor
pop
xor
es
ret
mov
add
das
xchg
cwtl
dec
push
stc
decl
mov
push
cmp
std
cmp
cmpb
mov
call
sub
mov
std
inc
hlt
inc
sub
cmp
push
fldenv
and
into
or
mov
push
add
or
sti
or
sbb
jno
ret
inc
cmpsl
and
xorb
adc
add
psubsb
mov
dec
add
test
in
sbb
mov
pop
scas
xorl
sub
test
movsl
inc
pop
and
push
cld
pop
aam
xor
sub
add
dec
jo
rcrb
inc
or
mov
shrl
pop
inc
cmpsl
fsubl
insb
sub
push
imul
push
sbb
insb
dec
xorb
mov
jbe
ret
fcomip
dec
push
sbb
lea
ja
push
push
pusha
mov
adcb
ljmp
push
mov
cmp
outsl
adc
rep
int3
cmp
xor
pop
cmp
pop
in
sbbl
jl
adc
mov
movsb
push
out
imul
add
push
cmp
mov
shrl
mov
push
mov
push
push
test
ret
sbb
xor
mov
in
mov
ret
imul
and
pusha
dec
pusha
lcall
adc
mov
add
and
popa
sbb
mov
xchg
dec
adc
jmp
or
pop
push
and
arpl
rcrl
and
bound
or
inc
popa
testl
add
dec
lock
inc
mov
add
rcr
cmp
mov
mov
pop
pop
jo
push
cmp
push
cmpsb
sub
cs
mov
sbb
es
push
inc
push
xor
inc
daa
insl
sub
push
adc
and
leave
pop
cmpl
add
sub
cmovno
inc
push
or
imul
xor
push
or
dec
adc
jno
mov
or
repnz
aas
test
and
push
sbb
stos
and
ja
mov
dec
push
xchg
sbb
sub
outsb
into
inc
add
int3
icebp
dec
sub
aad
dec
mov
add
add
adc
inc
pop
je
adc
setp
push
push
enter
push
push
dec
int
xchg
and
daa
sub
or
inc
fwait
sub
and
and
dec
push
adc
xor
insb
cmp
call
test
dec
sub
xor
cmp
mov
push
nop
add
mov
inc
test
aas
fs
test
adc
jg
orb
xchg
mov
pop
test
mov
es
stos
jbe
in
pop
sbb
cmp
mov
aas
nop
movsl
adc
imul
push
add
and
inc
push
imul
sbb
and
aad
fisubl
or
mov
iret
sti
sub
add
bound
cmp
mov
xor
xor
loopne
sub
sub
cld
inc
inc
jmp
lods
loope
insl
add
or
add
jl
popa
pushf
sbb
jmp
and
lea
es
sbb
inc
xor
rorb
stos
add
lea
rol
ljmp
addb
jecxz
inc
sub
icebp
fwait
sbb
je
push
push
and
fdivrs
ss
mov
test
bound
add
mov
xchg
test
test
sbb
push
enter
sub
sub
jmp
mov
addb
add
and
stos
inc
cmc
out
test
or
je
and
inc
add
xchg
add
flds
insl
or
push
and
xor
push
pop
and
or
xchg
repz
or
mov
xchg
orb
cmp
sub
movsl
sbb
test
push
mov
dec
pop
subb
and
in
adc
push
ja
add
adc
cmova
inc
movsb
ja
sub
mov
sbb
das
inc
sarb
pop
inc
int
in
test
sub
test
mov
mov
pop
cmp
or
add
pop
mov
dec
jmp
imul
mov
mov
mov
and
adc
push
pop
rclb
mov
in
es
xor
setle
push
and
dec
sbb
and
push
jb
mov
add
jns
insb
imul
xor
shll
adc
aas
and
adc
add
xchg
cmp
push
pop
adc
enter
push
sahf
and
cmpsb
lcall
lea
hlt
and
push
sub
jge
xchg
push
rcrb
cmpsl
mov
adc
xor
add
jmp
dec
or
add
adc
js
mov
ja
jno
jb
in
insl
sbb
test
push
adc
push
pushf
push
mov
daa
push
sbb
push
nop
sbb
vpsubb
push
pop
pop
add
mov
sub
cmp
push
xor
mov
xor
mov
push
stos
and
xor
mov
pop
add
stc
jns
sbb
cmc
pop
push
cmp
cmp
and
mov
inc
subb
add
push
andl
in
add
pushf
in
lea
xchg
sbb
aas
test
sub
int3
cmpb
insb
cs
inc
cs
push
or
jns
dec
and
jge
pushf
jo
popa
je
daa
test
push
repnz
es
and
mov
repnz
or
inc
jo
xor
sbb
movsl
xor
dec
imul
adc
ja
xor
mov
sbb
mov
add
adc
push
push
aas
inc
sbb
inc
sbb
or
shrb
or
lcall
fildl
or
mov
test
push
mov
lret
rcll
pop
sub
add
mov
dec
jmp
jne
into
push
test
out
xchg
mov
addl
shrl
fs
pop
and
push
add
push
inc
pop
push
pop
push
add
add
lods
inc
and
insl
xchg
std
dec
outsb
or
sbb
pop
push
rorb
outsl
push
int
dec
and
mov
pop
xchg
add
mov
xchg
cs
fdivrl
rolb
add
cmpsb
lods
sbb
dec
inc
popa
add
mov
and
aam
sub
dec
inc
je
aam
and
rorl
mov
incl
or
dec
sub
or
and
xchg
mov
push
jecxz
xor
in
push
inc
and
adc
mov
aad
sub
cmp
je
addr16
pop
and
push
xor
sub
and
sub
or
push
mov
incl
cmp
add
movsl
sub
das
loop
dec
xchg
test
loop
dec
dec
popa
sbb
push
cmp
cmpsl
add
dec
in
mov
push
or
scas
xchg
iret
mov
push
or
push
test
hlt
push
push
mov
punpckldq
loopne
xor
lcall
negb
push
pushf
mov
push
pusha
mov
fidivl
sub
pop
sbb
or
addr16
or
push
leave
jae
or
adc
or
cmp
dec
cmp
sub
push
xor
cmp
pop
inc
xor
jl
or
test
adc
push
imul
dec
xchg
mov
mov
jmp
out
leave
xchg
cmc
mov
and
push
pop
pop
push
cmp
adc
repz
mov
dec
sbbl
xchg
mov
sbb
int3
dec
push
in
call
add
inc
scas
fs
xchg
fcom
inc
ds
in
push
push
nop
sub
nop
sbb
test
iret
pop
cmp
enter
sbb
sbbl
push
dec
push
fs
xchg
pop
and
and
mov
jns
inc
sahf
and
cltd
add
sahf
or
aam
jns
inc
daa
fsubl
in
sub
sub
or
and
sub
testl
mov
daa
mov
or
cmp
das
movsb
pop
adc
xor
jno
pusha
add
jbe
cs
dec
xor
dec
lcall
adc
mov
es
insb
sbb
rol
dec
lahf
fs
add
and
mov
and
in
cmpsb
lods
arpl
push
cli
ret
lock
pop
or
push
add
or
jle
or
jne
or
loope
pop
jmp
push
add
and
sub
mov
and
nop
push
push
fs
sbb
enter
cmp
adc
mov
inc
and
pusha
ljmp
add
push
adcl
sub
dec
cmp
xchg
cmp
mov
add
daa
sbb
cmp
dec
jae
in
mov
inc
lcall
bnd
cmp
hlt
inc
out
ss
cld
inc
fcomps
sbb
sub
push
hlt
or
scas
mov
loopne
dec
jmp
inc
imul
inc
jl
add
and
lcall
lock
adc
and
and
ret
sub
xchg
add
push
js
fs
stos
aam
dec
addr16
movl
in
inc
push
rolb
or
add
inc
movsb
aas
inc
bound
in
ds
stos
in
push
cmp
sahf
cmp
cmp
push
dec
orb
push
push
add
mov
andb
pushf
je
jge
inc
lea
addr16
std
push
sbb
push
lea
jne
into
loop
ror
in
cmpsl
and
mov
sarb
rolb
inc
cs
dec
push
inc
mov
lds
or
mov
pop
push
js
adc
out
sbb
pusha
imul
pop
lcall
pop
dec
sub
add
sub
mov
insb
stos
rcrb
or
sub
sbb
jmpw
jl
rclb
punpckhwd
aam
add
cwtl
jb
popw
dec
out
or
jb
enter
ret
cmpb
leave
add
andb
lret
jbe
push
cmp
aaa
or
ret
adc
mov
bound
icebp
add
std
movsb
and
ret
sbb
pushf
sbb
fs
test
add
sub
roll
in
sti
push
pop
add
outsb
inc
pop
rcll
push
inc
shrb
push
push
mov
cli
xor
test
lock
sbb
push
add
inc
pop
pop
sbb
inc
push
sub
std
ffreep
xor
loop
inc
lea
jg
pop
or
scas
enter
leave
add
lock
pop
fs
add
push
and
pusha
movl
lods
sbb
in
inc
dec
stos
test
repnz
dec
add
cmpb
add
push
xor
cmpsl
cmc
push
mov
inc
sub
lock
fucom
je
sub
dec
sbb
dec
xor
repz
and
fmuls
sbb
or
and
push
enter
pop
aam
add
dec
dec
pop
and
and
call
rorb
or
cmp
or
sbb
sar
stos
push
or
push
or
fisttpll
lcall
lods
push
dec
dec
xchg
ret
mov
push
inc
fcoml
cmp
add
mov
and
pop
cld
nop
outsb
popa
xchg
sub
xchg
add
cmp
dec
sub
and
dec
adc
mov
adc
xchg
pusha
xchg
and
ret
pop
inc
push
mov
xor
push
sbb
cmp
mov
dec
loopne
sbb
repz
and
cwtl
cmp
les
sub
arpl
add
in
mov
rclb
push
mov
xchg
push
mov
aaa
lea
repnz
sub
movsb
or
xor
dec
shlb
inc
dec
sub
into
roll
push
cltd
nop
or
inc
xor
adc
or
push
dec
push
mov
sub
mov
sub
dec
mov
push
xor
or
add
inc
sahf
pop
punpckhbw
adc
or
sbb
and
and
xor
imul
popa
fmull
dec
add
mov
inc
sbb
jae
sbb
jo
jecxz
sub
leave
jne
inc
sub
lods
add
imul
or
and
in
or
or
pop
orl
sti
lret
ja
pop
push
loopne
lea
and
sub
lret
push
out
push
ljmp
push
leave
sbb
cli
mov
cmp
imul
js
mov
mov
fistl
pop
sbb
movb
cltd
xor
xchg
push
add
dec
pop
mov
and
les
xchg
dec
add
loopne
inc
jl
cltd
dec
lcall
add
nop
out
int3
pop
xchg
out
sbb
out
jns
add
scas
xchg
push
add
popa
dec
cmp
dec
es
cmp
mov
pop
pop
cs
lds
gs
pop
dec
jge
pop
push
pusha
mov
addl
add
push
pop
and
or
pop
aas
and
push
push
inc
ret
lods
or
jmp
pop
sub
cmp
jae
or
pop
mov
xor
cli
push
jp
jl
dec
mov
mov
push
fs
pop
cmp
frstor
inc
pusha
add
push
pop
inc
jne
mov
sbb
inc
add
jge
push
test
jmp
inc
inc
out
fmulp
sbb
inc
sub
inc
mov
lea
pop
jp
dec
and
repnz
xor
ljmp
into
xlat
jns
add
xlat
add
inc
cltd
xor
add
test
add
bound
push
jno
push
jmp
push
adc
jg
cmp
incb
push
push
push
test
cmp
adc
or
push
dec
cli
sbb
mov
xor
adc
add
add
add
push
jo
jmp
inc
ljmp
mov
and
xchg
daa
loope
push
sub
and
dec
test
js
mov
add
dec
sub
xor
fbld
xchg
pop
inc
orl
add
imul
test
xor
inc
xor
lret
cmp
pop
out
stos
adc
adc
sub
addb
int3
pop
xchg
mov
inc
int3
inc
stos
mov
jns
or
xorl
mov
aaa
and
pop
leave
jae
hlt
arpl
sbb
xor
mov
dec
cmp
mov
lret
add
lock
sbb
pop
jp
and
cmc
and
shr
push
push
push
sub
jp
into
les
lock
jne
jmp
dec
add
xchg
add
fildl
push
test
test
icebp
test
add
ss
sub
aaa
add
or
pop
iret
adc
inc
push
arpl
sub
daa
cmc
and
xor
mov
sbb
mov
and
ljmp
sub
sub
xorb
mov
xor
adc
inc
xchg
mov
dec
sub
test
in
and
mov
dec
test
in
add
push
push
sub
or
ret
outsl
ja
inc
jb
and
or
hlt
cltd
mov
xor
add
xlat
popa
and
and
movsb
push
and
add
ds
dec
sub
aam
push
and
or
sub
adc
adc
sub
ss
sub
inc
or
iret
addr16
rcll
adc
inc
add
aad
adc
and
or
adc
lea
ret
push
sbb
and
inc
in
sub
adc
mov
jmp
aam
imul
mov
jg
push
inc
cmp
jae
mov
xchg
rolb
in
or
inc
push
lea
daa
orb
cmp
jl
aad
pop
dec
xor
xor
ja
push
mov
inc
cmp
push
insl
add
add
add
jle
and
int3
push
mov
add
mov
add
ljmp
push
cmp
or
lahf
imul
sti
mov
and
mov
sbb
add
pop
dec
sub
or
or
clc
adc
shlb
test
add
push
xchg
fndisi(8087
dec
cmp
sbb
xor
add
add
movsb
and
xchg
or
xchg
inc
add
mov
lods
imul
lcall
fs
insb
xor
shlb
fwait
inc
pop
add
xor
cwtl
leave
pop
adc
mov
popf
sub
adc
psllq
mov
xor
inc
in
mov
lods
cmp
adc
push
dec
add
jl
ss
mov
mov
xor
adc
mov
add
add
mov
rorl
cmp
cmp
cs
cmp
cmp
push
cs
sbb
insb
mov
push
xchg
ja
push
or
loopne
cli
inc
push
ljmp
gs
pop
in
mov
xchg
or
in
inc
cmp
push
data16
pop
add
iret
rclb
call
adc
inc
pop
push
outsb
inc
xchg
adc
mov
adc
xchg
add
sub
lea
inc
inc
adc
inc
push
fsts
mov
inc
imul
cmp
arpl
dec
dec
out
fcoml
rorl
lea
or
pop
cwtl
aam
sub
jge
test
inc
sbb
and
sub
lret
fcompl
adc
jmp
mov
mov
xchg
mov
orl
je
mov
and
dec
push
daa
cmc
mov
push
out
out
rcll
xchg
mov
popf
xchg
jne
push
daa
jae
js
adc
mov
push
mov
cmp
int
in
pop
inc
push
cwtl
push
daa
dec
and
aam
sbb
flds
pop
xor
les
mov
add
mov
flds
and
in
xchg
sti
orb
cwtl
pop
and
pop
dec
or
loope
out
jg
repz
dec
and
mov
movb
adc
stos
in
cmp
dec
jno
sbb
loopne
loopne
cmpsl
jbe
push
pop
jecxz
js
mov
push
pop
push
sub
add
xor
clc
aas
mov
or
push
pop
mov
movsb
push
mov
mov
jnp
add
testl
pop
out
out
adc
je
cmp
je
cmp
je
mov
push
idivb
je
push
mov
mov
mov
adc
lret
jb
push
fwait
xorl
lea
lock
xchg
xor
sbb
lods
aaa
add
push
mov
jnp
inc
and
dec
inc
hlt
inc
and
mov
pop
dec
adc
push
inc
lock
adc
mov
xchg
cmpb
xchg
mov
sbb
mov
aad
shl
and
nop
mov
and
repz
daa
cmovno
or
dec
nop
pop
jbe
ficompl
adc
cwtl
pushf
addb
call
adc
inc
push
fcomps
cmp
inc
clc
mov
into
insb
and
shll
push
movsb
fisttpll
or
push
sbb
sub
movsb
mov
mov
sub
test
inc
loopne
test
stos
rcrb
inc
stc
xchg
cmp
push
or
cmovno
jmp
inc
mov
and
add
add
shlb
inc
and
popa
subl
mov
and
dec
cmp
sbb
stos
push
push
mov
test
or
sbb
lahf
and
sahf
dec
push
adc
jno
push
cmp
mov
icebp
mov
orl
jb
subb
cmpsb
xchg
jl
enter
mov
and
stos
les
push
xchg
and
and
pop
xchg
jo
test
mov
cld
xor
and
inc
leave
sub
sbb
dec
les
shll
ret
push
or
je
fwait
loop
in
shll
push
repnz
inc
pop
cld
dec
loopne
jmp
cli
loopne
shll
je
xchg
movsb
lock
add
xchg
or
xchg
mov
xor
repz
or
and
test
inc
push
ret
and
shll
mov
dec
add
push
push
mov
sbb
pusha
enter
loop
int3
or
xchg
mov
shrl
mov
jns
out
or
or
arpl
es
sbb
es
stos
mov
add
mov
xchg
add
sarb
clc
sub
or
jle
mov
in
inc
add
outsb
daa
adc
shlb
sbb
pop
sub
mov
inc
sub
and
add
fwait
add
mov
or
aad
pushf
inc
or
mov
repz
push
sub
mov
enter
popa
push
pop
lret
dec
repz
dec
adc
adc
xchg
xor
adc
insl
xchg
xor
adc
sbb
pushf
and
sbb
outsb
push
call
jb
mov
imul
cmp
dec
out
or
into
pop
loop
mov
xor
xchg
and
shrb
outsl
sub
rclb
mov
lea
sub
dec
int
or
loop
mov
test
xchg
add
jp
ret
loope
pop
add
inc
pop
add
jns
fimull
dec
jge
mov
call
call
sub
in
push
sbb
outsl
or
push
jge
push
es
add
dec
add
test
test
xlat
nop
inc
cmp
in
in
test
mov
sti
and
je
mov
shlb
mov
sti
or
mov
es
jl
jne
xchg
lea
adc
xchg
movsb
fnstcw
outsl
and
mov
movsl
inc
mov
push
pop
mov
mov
mov
or
insl
mov
dec
inc
push
aaa
and
xor
adc
mov
cmpsl
es
sbb
mov
sahf
outsb
pusha
pop
stos
push
mov
filds
mov
xor
dec
test
add
xor
xor
scas
or
add
jae
popa
popa
and
shrb
roll
mov
mov
rorl
push
push
mov
and
sub
and
sbbb
dec
ret
and
mov
push
cmp
xor
xor
cmp
sub
test
pop
jl
mov
cmpsl
sub
sub
inc
add
pop
and
add
and
inc
adc
xor
push
xchg
movl
add
mov
inc
inc
dec
mov
shl
push
inc
add
mov
lods
cmp
mov
and
xor
xchg
inc
ret
adc
push
loopne
mov
pop
js
lea
xor
jne
lcall
push
andb
fistpll
clc
mov
sub
cmp
sbb
and
push
or
je
add
add
sbb
pop
shlb
mov
push
nop
mov
mov
ret
adc
adc
dec
mov
add
andb
andb
loope
inc
sub
sub
mov
mull
sbb
sar
in
lock
or
fcoms
stc
push
outsb
insb
test
push
push
cmp
pop
test
mov
es
jne
mov
cmpsl
cmpb
mov
and
aas
push
movsl
jge
jne
cmp
jne
xchg
inc
sti
pop
daa
mov
sbb
fnstenv
loope
aad
add
inc
jns
test
sti
push
mov
shlb
mov
ret
cltd
cli
adcb
mov
add
jbe
or
aam
data16
sbb
push
inc
cs
fsubrl
push
push
and
dec
shlb
sbb
push
leave
sub
lret
lods
jecxz
jmp
push
fs
outsl
xorb
negl
and
pop
cs
out
fadds
inc
test
movsb
insl
dec
push
jo
js
inc
stos
loope
xchg
mov
and
push
push
inc
mov
add
mov
pop
dec
mov
clc
sub
push
imul
cmp
addl
cmpsl
pop
xor
xor
scas
xor
cmp
mov
cmpsb
loopne
aad
pop
adc
push
sbb
mov
fadds
adc
ss
adc
sbb
stc
bound
int3
jle
adc
test
mov
mov
ret
push
fwait
aas
pop
mov
pop
cmpl
mov
cmp
jmp
sub
push
push
push
mov
fimuls
push
push
inc
add
lret
sbb
inc
adc
mov
and
or
mov
daa
addb
mov
inc
and
test
loope
xchg
popf
shr
je
pushf
lea
push
fdivs
or
mov
inc
cmp
inc
add
lods
mov
push
inc
shrb
out
xor
push
or
cmp
cmpsl
mov
or
inc
dec
add
rolb
push
lods
sbb
jg
enter
and
andb
dec
cmp
pop
cmpsb
int3
fucomp
enter
add
pop
push
sub
xchg
or
sbbl
addr16
test
and
inc
inc
cld
add
or
jb
cmp
nop
jo
std
sbb
clc
cltd
fisubrs
testl
aas
pop
clc
jo
and
jnp
sbb
inc
mov
test
add
sbb
mov
icebp
cmp
sbb
add
fwait
imul
popf
mov
popf
mov
lds
cmpsb
lock
jne
or
mov
cmp
lea
add
and
adc
les
mov
ret
aad
inc
arpl
jns
sarb
adc
jg
sbbl
pop
or
sub
pop
sub
das
pop
push
orl
pop
xchg
addb
repz
ret
scas
dec
in
cld
add
or
dec
into
add
psrld
stc
movsb
mov
mov
rcll
hlt
push
push
and
push
cmp
mov
inc
sbb
lods
dec
insb
add
pop
mov
add
hlt
aaa
and
pop
inc
xor
shlb
push
cmp
gs
add
add
fwait
stos
cmp
mov
dec
push
add
xchg
cmc
mov
in
and
bound
addr16
add
idivl
ljmp
add
or
movsl
add
cmp
cld
push
inc
adc
movl
xchg
pop
mov
cmpsl
jl
or
shll
mov
sbb
xor
pop
mov
or
sbb
js
jmp
push
add
ss
cmp
shlb
jns
cmp
mov
xor
les
dec
xchg
dec
mov
sbb
or
or
or
pop
xor
aas
push
cmp
or
xor
lret
dec
and
sbb
loop
out
test
sub
fbstp
in
xchg
xor
add
push
lods
lods
fs
add
and
nop
fsubrs
and
pop
into
jle
xchg
pop
push
das
sub
cmp
and
add
mov
inc
or
sbb
xchg
mov
inc
fadds
jne
outsb
and
shll
or
dec
mov
fcmovb
push
or
inc
or
pop
or
xor
out
mov
es
xchg
movsb
adc
int
pop
dec
addb
inc
ret
mov
inc
pushf
pop
rol
inc
xor
push
pusha
push
add
xor
inc
cmp
sarb
and
loopne
xchg
popa
out
jnp
pop
jno
or
adc
nop
pop
or
pop
pop
inc
cmp
push
dec
xor
mov
cmpsb
bound
ret
xor
icebp
cmp
sub
int3
xorb
mov
mov
in
int3
or
cmp
cmp
add
js
rolb
inc
aas
inc
add
inc
sbb
push
add
adc
push
imul
add
push
sub
mov
test
sbb
dec
scas
and
add
inc
insb
aaa
mov
add
ss
dec
sub
add
sub
call
push
gs
push
jl
decl
jne
cmp
jb
sub
jmp
push
dec
movzwl
dec
std
adc
jle
js
setl
movzbl
mov
mov
jle
sub
adc
test
push
or
xchg
jmp
add
mov
fmuls
xor
inc
es
fbld
sbb
and
aas
and
aam
pop
stos
add
pusha
xor
je
in
ljmp
push
push
push
roll
ret
inc
cmp
test
insb
sub
pusha
xchg
cmp
popa
test
jle
push
pop
jmp
push
sub
adc
inc
iret
dec
cs
mov
mov
call
test
sbb
les
addb
or
fdivrl
dec
push
dec
insb
cmp
mov
mov
cmp
mov
movsl
push
jg
jle
lret
aas
rol
push
mov
lods
xor
xchg
push
dec
dec
adc
push
push
pop
and
lret
rorb
adc
add
pop
or
dec
push
inc
cld
push
add
imul
push
xorb
xchg
sbb
pusha
mov
rclb
pop
adc
leave
push
xor
push
or
fs
mov
lea
repz
push
cmc
mov
pop
gs
mov
insb
dec
cmp
outsl
sub
bound
inc
and
xor
xchg
rolb
mov
xor
and
cmp
js
push
ss
pop
xor
cmp
inc
adc
bound
das
xor
xor
sub
sbb
xchg
jne
and
rorb
fwait
pushf
or
adc
lea
cmp
sub
sub
dec
or
cmpl
sub
test
dec
xorl
sbb
loope
and
sbb
mov
xchg
cmp
xor
jb
pop
adc
rorb
pop
outsl
lods
add
xor
dec
lock
add
mov
dec
cmp
fcoms
or
rorb
inc
mov
aas
aas
xchg
dec
add
and
addb
add
and
pushf
out
loop
mov
mov
sbb
mov
adc
add
xorl
fs
je
filds
sbb
adcb
and
loope
jns
mov
jle
add
push
es
mov
nop
add
ret
pop
add
push
mov
ret
ret
add
fsubl
lcall
jmp
mov
inc
jo
xor
mov
enter
inc
xor
pop
jle
mov
and
inc
inc
adcb
cmp
cmp
cmp
in
add
ret
nop
push
inc
repz
ja
ror
push
and
sub
pop
ret
sub
repz
cmpb
jne
mov
adc
sarb
sub
ja
xor
adc
cmp
outsl
dec
sbb
add
push
addl
mov
inc
add
jl
add
sbb
ficoms
mov
sub
or
adc
imul
inc
in
lret
adc
push
add
inc
shlb
test
cmp
repnz
jmp
add
sbb
jne
sbb
stos
mov
inc
sahf
aaa
dec
sbb
sub
add
sub
ss
lds
or
xchg
xor
lds
pop
dec
les
add
jbe
pop
pop
imulb
jns
mov
stos
mov
mov
and
fbld
mov
push
je
test
insb
add
sahf
fsubs
fistpl
jp
adc
insb
test
jp
call
rcl
jl
jnp
cmp
stos
je
ret
push
adc
mov
and
push
mov
enter
xchg
adc
int
call
adc
pop
mulps
inc
sbb
leave
movl
cmc
xlat
ret
push
cmpsb
pop
push
pop
jcxz
clc
dec
sub
jne
loope
movups
test
in
cmp
jmp
mov
nop
adc
repz
push
jbe
cmp
pop
mov
add
sub
push
jb
push
aas
push
imul
inc
mov
pop
orl
sbb
mov
rorb
jb
xorb
adc
test
push
sti
js
cltd
pusha
mov
aaa
push
cmp
pop
mov
adc
dec
cmpl
push
sub
jl
pop
jb
pop
xlat
pop
push
xor
xor
inc
loop
js
inc
dec
and
lcall
and
jmp
sub
nop
xor
pop
cltd
pop
jmp
and
xchg
es
sti
and
push
dec
and
pop
sub
pop
jb
pop
mov
mov
je
scas
dec
cmpsb
daa
jl
and
pusha
js
sub
xchg
inc
and
xor
sbb
arpl
xor
dec
sub
mov
shrl
in
lods
sub
mov
loopne
xchg
xlat
test
or
inc
sub
daa
test
test
xchg
insb
add
mov
sub
mov
and
daa
cmp
pop
and
cmp
or
or
and
push
xor
outsb
daa
adc
pop
jae
sahf
inc
mov
cs
stos
add
mov
xchg
adc
leave
inc
leave
scas
add
dec
mov
xor
xchg
sub
loopne
push
adc
lret
push
adc
pop
jb
fwait
add
push
adc
pusha
add
xor
repnz
and
daa
sahf
rorl
or
adc
sahf
push
enter
and
push
mov
sub
out
aaa
insb
mov
pop
mov
sbb
dec
sbb
push
jns
dec
pop
fs
mov
fs
xor
or
ja
dec
mov
sub
add
and
dec
adc
sbb
iret
cmpb
push
xor
sbb
pop
dec
dec
or
inc
aas
out
faddl
mov
xor
xor
sbb
inc
xchg
mov
int3
xor
ficomps
icebp
and
inc
mov
xchg
or
pop
push
adc
lds
or
int
push
shld
sub
add
and
leave
push
jmp
lock
dec
inc
add
inc
jecxz
dec
push
pusha
popa
imul
shrb
mov
das
inc
mov
pop
inc
outsl
nop
arpl
ret
push
add
xchg
fcmovnb
bound
and
sbb
fcoml
dec
push
dec
repnz
mov
cmp
pop
mov
sub
push
mov
add
roll
enter
pusha
push
dec
push
pusha
mov
lds
mov
pop
pop
add
into
sbb
nop
sub
or
test
js
gs
sbb
pop
adc
push
cmpb
xor
shlb
mov
adc
sbb
and
scas
dec
cmp
add
ret
add
and
pop
pop
dec
mov
dec
or
sbb
or
into
and
dec
mov
insl
aas
aam
mov
sbb
outsl
hlt
pop
out
pushf
jmp
das
dec
movd
adc
aaa
mov
cmp
fimuls
inc
mov
flds
pushl
inc
test
popa
add
cmpl
add
push
idiv
jle
jno
negl
mov
je
push
push
xchg
dec
or
push
inc
lea
adc
inc
or
adc
lock
aam
inc
xorb
clc
fwait
push
dec
push
mov
mov
push
js
cmp
incl
enter
repz
loopne
push
push
pop
fcomps
cmp
lahf
in
aam
sub
mov
outsb
test
and
jae
dec
or
mov
mov
fimull
add
or
pop
sub
push
mov
dec
dec
cli
add
ret
cmp
xchg
pop
pushf
pop
out
push
mov
inc
sbb
rclb
in
cwtl
jo
ret
mov
cltd
shl
imulb
out
fcoms
cmp
sbb
dec
inc
xor
and
leave
push
xor
test
data16
mov
add
or
jae
add
xchg
leave
mov
cmp
repnz
filds
add
lret
mov
cwtl
pop
inc
gs
lret
rolb
mov
enter
pop
pop
push
sub
orl
and
mov
fisubrl
or
mov
mov
xor
movups
push
dec
or
push
fsubs
mov
mov
sub
add
in
sub
pop
mov
push
in
and
pushl
add
adc
jb
fstps
flds
jmp
mov
or
mov
rcrb
insl
cmpsl
fmulp
stos
leave
pop
and
inc
scas
fs
adc
fldcw
fmuls
push
stc
or
insl
dec
inc
sbb
jae
out
xorb
adc
mov
xor
ljmp
adc
mov
pop
ffreep
jo
mov
adc
cmpl
test
in
fs
mov
or
push
xor
or
xchg
orl
ja
je
jg
jl
cmp
mov
jae
and
jp
push
movb
and
add
cmp
dec
pop
inc
jle
push
or
push
icebp
jge
mov
jmp
fdiv
mov
je
ret
call
fsubrs
std
sbb
mov
cwtl
fisttpl
lock
lea
pop
adc
sub
add
pusha
xor
ret
dec
popf
stos
or
mov
push
push
mov
push
and
adc
lcall
xchg
pop
xor
add
insl
add
pop
push
call
or
and
andl
in
xor
int
cmp
add
mov
addb
inc
js
ss
aam
pop
push
mov
outsl
or
lea
inc
scas
jne
or
or
mov
and
inc
cwtl
dec
cld
xor
into
dec
push
iret
ds
ficoml
inc
ret
push
punpckhdq
pop
int3
or
ds
loop
inc
movsl
cmp
sbb
pop
fst
jne
inc
push
dec
mov
cwtl
mov
inc
in
lock
insl
inc
mov
test
js
fst
jne
push
push
cld
mov
cmp
je
mov
pop
outsb
movsl
clc
inc
mov
jp
dec
aam
cld
cmp
jg
adc
aas
sbb
ja
push
mov
fwait
ljmp
jmp
xor
xor
popa
mull
jg
push
inc
mov
sub
les
mov
xor
mov
or
scas
dec
sub
add
sbb
popf
add
int
leave
mov
jl
imul
loope
and
adc
mov
lock
mov
cmpl
cmp
pop
cmpsb
cs
jg
sbb
xor
incb
test
je
test
xorl
or
mov
or
adc
mov
inc
stos
push
push
call
xor
jmp
xorl
mov
js
sarb
or
or
movsl
inc
push
lock
or
add
sub
loopne
mov
clc
aam
notl
popa
mov
clc
orl
mov
xor
and
cmp
sbb
lds
sarb
add
popa
mov
loopne
pop
adc
decl
hlt
sub
push
adc
insb
data16
ds
push
in
or
adc
sbb
rclb
or
adc
pop
lcall
pop
cmp
leave
stos
jmp
or
or
jecxz
bound
dec
sbb
imul
mov
inc
je
mov
push
and
jb
jbe
mov
enter
jbe
add
mov
push
cmpsb
mov
and
push
into
jge
adc
iret
in
mov
aaa
je
incl
je
decl
push
sbb
xlat
sub
popa
add
pop
or
push
add
jle
mov
mov
pop
shl
sub
rcll
inc
movsb
pop
inc
inc
imul
push
cmc
pusha
inc
xchg
dec
lock
cmpsl
jne
adcb
loop
mov
andb
cmp
repnz
pop
sar
xor
ja
cmp
out
jmp
ret
dec
mov
cmp
jecxz
ret
pop
rolb
mov
and
enter
pop
sub
jmp
pushw
pusha
sbb
imul
mov
test
lods
addr16
xor
pop
add
popf
adc
and
mov
das
add
pop
pop
inc
xchg
out
dec
pop
in
or
daa
adc
jne
pop
lcall
cld
cmp
xor
testl
js
push
push
add
mov
lock
int3
lcall
rolb
sub
push
scas
in
lods
xor
mov
add
push
push
icebp
cli
mov
inc
bswap
stos
xchg
dec
aam
lods
addr16
jp
mov
cmp
inc
or
inc
mov
push
jl
subl
je
adc
xchg
and
jo
dec
mov
fisttpl
mov
sub
jne
xchg
inc
subl
or
in
sbb
std
push
orl
pusha
test
xchg
pop
popw
repnz
xor
mov
clc
les
loop
inc
ret
pop
cmp
inc
cmp
adc
data16
jmp
or
sub
push
fistpll
out
or
dec
add
inc
or
mov
pushf
ja
jo
cwtl
pushf
cmpsb
movsb
sub
mov
or
add
lods
shlb
rcr
sub
scas
mov
aad
pop
push
push
inc
push
mov
and
push
cmp
test
je
rcll
ja
and
xchg
ret
test
leave
rcl
fbstp
insb
in
int3
fst
or
push
xchg
imul
push
xchg
jmp
sti
hlt
inc
hlt
sarb
inc
mov
mov
cmp
das
push
sbb
scas
dec
lret
inc
bound
mov
cld
sub
mull
imul
sub
orb
jp
sbb
add
pop
fdivr
adc
test
fincstp
and
out
push
idivb
inc
pop
mov
mov
cmpsl
js
cmp
mov
jmp
xor
mov
pop
push
cmp
fwait
pop
cs
rorl
add
jo
inc
incl
inc
lret
movzwl
mov
mov
sub
jg
fwait
push
testb
loop
cld
add
add
fwait
repnz
mov
xchg
shlb
xor
bound
call
loope
adc
fs
test
je
pushf
push
cli
dec
pop
inc
aas
push
je
cmpb
adc
ret
pusha
data16
in
adc
add
and
pusha
lock
jbe
adc
call
adc
dec
sbb
dec
add
call
mov
out
inc
add
fisttpl
lea
iret
lcallw
xor
and
addb
jl
cli
and
test
rorl
push
ret
cmp
xchg
imul
in
push
or
pusha
movsl
sbb
pop
cmp
sbb
pop
je
add
sbb
outsb
mov
inc
pusha
add
inc
mov
in
aad
inc
xchg
data16
sbb
andl
aaa
dec
popl
in
add
push
push
jge
inc
adc
in
insb
adc
add
std
call
cmp
inc
movsl
push
dec
sub
stos
fidivrs
mov
add
add
insb
jmp
pop
cwtl
mov
rolb
jnp
or
mov
pop
inc
push
mov
leave
mov
mov
mov
loopne
ret
loopne
cli
cmp
or
cmpsb
sbb
mov
sub
faddl
mov
or
out
xor
xor
mov
inc
pop
enter
arpl
mov
jl
pop
ret
nop
lock
mov
and
lcall
adc
inc
mov
mov
addr16
cmp
push
mov
pop
pusha
jmp
cmp
rolb
xchg
jle
push
lea
sub
hlt
clc
xchg
mov
cmp
mov
popf
xchg
cmp
pop
xor
push
jl
jl
and
sbb
arpl
pop
in
inc
dec
aas
or
mov
push
ret
in
push
fisubrl
inc
sub
stos
int3
xchg
rcrb
push
mov
pop
je
sbb
in
repnz
loopne
and
mov
mov
pop
cmp
cs
clc
mov
mov
lods
clc
mov
ss
dec
sbb
call
test
xchg
push
test
push
movsl
inc
sub
xchg
aam
rcll
push
shlb
mov
pop
cltd
mov
ljmp
jl
aam
mov
lods
jecxz
jp
push
enter
dec
mov
cmp
fdivp
insl
jne
cs
add
push
jae
arpl
out
repnz
push
je
mov
or
push
or
jno
insb
jne
or
cmp
push
push
cld
xchg
outsl
add
inc
sbb
stos
sbb
aaa
cmp
fcoml
out
or
or
popf
pop
lods
jp
cmp
je
mov
pop
mov
push
inc
or
or
mov
jne
test
movsl
pusha
and
jae
movsw
cmp
sbb
xlat
jnp
xchg
sub
sub
push
lock
pop
mov
xor
add
and
sbb
add
push
xchg
mov
jmp
push
inc
sahf
mov
jl
mov
pushf
mov
fcoms
and
push
loopne
fucom
nop
and
pop
xor
sbb
out
loop
lds
sub
xor
or
cmpsb
and
or
fstpl
push
test
jae
je
rcr
sbb
and
add
fldcw
jbe
dec
loopne
adc
les
std
or
mov
mov
je
dec
repnz
add
sbb
xchg
rclb
rcrl
aas
mov
scas
or
addl
cmp
test
mov
call
leave
inc
xorl
inc
mov
aam
insl
imul
and
dec
bnd
jne
lcall
add
cmp
lcall
insb
rcll
cmpsb
jo
js
mov
or
call
cwtl
sar
andl
add
jmp
sub
inc
fsubl
mov
scas
stos
imul
push
and
pop
les
xchg
add
xchg
int
adc
sbbl
cltd
popa
mov
xor
mov
shll
push
addl
and
cmp
sbb
add
and
jo
push
fs
jae
add
push
cmp
jbe
dec
sub
add
push
enter
xor
push
arpl
cwtl
or
cmp
sbb
cmp
jne
adc
and
imulb
push
mov
jo
insb
mov
xor
sub
mov
notb
dec
dec
pcmpeqw
mull
push
sbb
and
add
or
data16
sub
add
fbld
jmp
cmp
sbb
and
sub
sbb
rcl
mov
or
pop
jmp
ja
and
adc
sbb
loopne
shll
cmpb
mov
sbb
dec
mov
movsb
mov
or
push
adc
cmp
dec
inc
das
mov
dec
bound
test
in
or
push
or
pop
ljmp
add
add
and
dec
mov
ljmp
add
or
add
gs
jmp
out
int
xchg
pop
jne
lea
add
push
lods
cmp
or
adc
sbb
lret
notb
clc
or
ret
inc
sbb
imul
fdivrs
loope
fnstcw
adc
add
test
xchg
add
jbe
jne
pop
or
or
outsl
iret
lret
incb
repnz
and
fucom
das
add
iret
xorl
xor
dec
in
clc
pop
jb
add
imul
outsb
dec
out
fnop
add
ret
roll
mov
pop
fistl
mov
sub
mov
pop
dec
jne
stc
lock
pop
sbb
push
stc
je
imul
es
divb
inc
xchg
ja
fwait
lret
push
fildl
cld
aad
dec
add
dec
sub
das
je
add
push
enter
mov
nop
add
mov
and
idivb
or
enter
adc
shrb
xor
inc
stos
jae
jns
fs
push
jne
lret
clc
and
cmp
jg
pop
mov
pop
mov
mov
or
or
sahf
jne
pop
cwtl
dec
xchg
leave
cmovl
or
inc
lods
add
int
pusha
aam
lods
das
xchg
insl
sbb
push
push
push
js
dec
inc
push
es
pusha
mov
push
adc
dec
add
arpl
inc
cmp
adc
test
push
or
fsub
add
aas
icebp
std
add
jl
test
enter
inc
mov
adc
xor
or
adc
cmp
sub
lcall
shlb
ret
shrb
add
int
jo
pop
imul
pushl
adc
scas
lock
adc
xor
int3
lock
jnp
sbb
dec
sbb
loopne
push
sbb
ret
or
mov
je
xor
enter
pusha
pusha
and
push
and
movsb
in
cmpb
jp
clc
insb
in
mov
ret
ja
lret
pop
adc
and
mov
mov
je
cmp
je
mulb
jne
push
roll
pop
stc
loop
mov
and
iret
je
xor
adc
mov
push
push
lock
push
sub
inc
pop
inc
or
sub
pop
fmull
jo
add
dec
adc
sub
add
mov
push
add
lock
pop
enter
lock
hlt
and
and
push
cmpsl
mov
add
push
push
adc
jno
push
sbb
jo
pop
dec
cmp
or
xchg
int
mov
ficoms
sbb
add
add
push
mov
lahf
mov
into
lea
mov
sub
cs
sub
adc
xchg
dec
cmpsb
mulb
push
je
loopne
cmp
push
mov
jl
sbb
sbbl
inc
sub
push
mov
add
mov
cmp
and
xlat
test
test
ljmp
sbb
adc
faddl
jo
subb
mov
inc
leave
mov
sub
adc
insb
push
imul
jge
jne
push
mov
sbb
inc
mov
dec
xor
xchg
cs
into
call
xor
push
aas
jne
outsb
or
dec
jnp
xor
xchg
call
mov
sub
cmp
sub
mov
cwtl
fidivrs
inc
or
test
sub
pusha
loopne
fisubs
fidivs
fs
repz
lock
xchg
push
and
adc
xchg
cwtl
push
jo
pusha
mov
add
push
pop
xor
cmpb
push
or
sbb
xor
dec
push
lods
add
adc
test
push
cwtl
mov
xchg
cmp
cli
les
out
xchg
pop
rol
loopne
int
aas
popa
dec
add
nop
bound
sti
int
fs
adc
mov
jb
imulb
mov
pop
arpl
jnp
jns
and
sbb
push
inc
push
inc
js
shl
ja
push
out
andl
inc
loopne
or
add
in
loopne
ret
cmp
adc
adc
inc
data16
aad
push
push
or
sub
sbb
cmp
je
aaa
or
ja
add
mov
jg
and
sbb
mov
lret
adc
test
sbb
ds
imul
imul
addb
xor
inc
ljmp
mov
adc
ds
addl
lods
and
cmp
push
xchg
into
test
jecxz
lock
push
cmpl
cmp
ds
pushf
int3
jp
lcall
and
aad
xor
mov
pop
add
outsl
lods
add
adc
pop
pop
cmpl
adc
ss
loope
inc
pop
cmc
xor
cmp
jbe
jmp
mov
clc
sti
lcall
test
push
jmp
inc
add
popa
mov
mov
pop
shlb
sub
ja
adc
pop
sbbb
or
out
pop
in
mov
xchg
mov
jg
insb
dec
pop
mov
movsl
add
idivb
je
mov
adc
push
pop
or
cmp
es
out
jo
push
dec
mov
inc
mov
test
cltd
loopne
fadd
fnstenv
cmpsb
fisubrl
mov
test
jb
cltd
fldt
mov
cmp
mov
mov
mov
out
ljmp
aas
test
dec
cmp
pop
movzwl
test
cli
jmp
jle
inc
cmp
dec
mull
dec
xchg
movsb
mov
je
orl
push
or
adc
cmp
push
arpl
je
repnz
push
sbb
pop
movl
pop
push
sub
mov
gs
sub
sub
into
adc
mov
xor
inc
add
test
fs
aas
inc
js
mov
sub
sbb
and
sbb
shlb
fcomps
cmp
aaa
inc
mov
pop
add
sub
ret
adc
mov
orb
add
cmp
ret
pop
add
xor
xor
add
clc
xlat
sbb
dec
sbb
xor
push
cmp
xorb
popf
mov
adc
sub
ret
adc
and
leave
dec
sbb
lods
jecxz
std
decl
sub
xchg
cs
roll
xor
mov
xor
js
stos
xchg
inc
sahf
dec
mov
fildll
addl
add
test
adc
shlb
negb
push
jo
bound
sub
mov
xor
push
xor
push
or
ret
xor
push
test
mov
inc
insb
and
xchg
fmull
lcall
roll
lret
mov
sub
lret
std
push
and
int3
ficomps
xchg
fbld
in
in
inc
or
shrb
dec
mov
ja
dec
pop
sub
cmp
ret
es
xorl
and
fsubl
or
or
jp
insl
inc
xor
pop
insb
js
xor
push
js
add
les
cmpxchg
dec
and
and
cwtl
test
insb
addb
xor
mov
inc
rcrb
flds
lea
dec
or
lret
inc
outsl
dec
adc
aas
sbb
inc
jmp
fnstenv
mov
jne
mov
call
inc
lea
mov
sub
mov
mov
fcom
push
push
pop
mov
or
xor
ret
in
mov
push
push
inc
mulb
pop
push
jge
gs
push
mov
enter
jl
andl
adc
icebp
dec
lods
pop
sbb
and
push
jmp
ret
sbb
outsb
inc
or
adc
pop
jecxz
fistps
dec
cmp
xor
pop
cltd
rcrl
push
xchg
mov
push
test
cmpsl
adc
xor
cwtl
jo
xchg
lahf
add
dec
adcl
adc
aad
push
or
add
add
sub
in
xchg
push
scas
sub
mov
fdivrl
adc
test
push
mov
cli
push
add
jle
jl
dec
cmp
pop
icebp
xor
jl
adc
push
mov
adc
sbb
adc
js
add
add
cmp
insb
dec
dec
adc
mov
push
inc
adc
sbb
and
cmp
add
push
add
sbb
addl
push
repnz
pop
fisttpll
cmp
xor
lock
out
jns
movb
test
loop
or
mov
incl
test
add
jne
outsl
sarb
add
sbb
lock
testb
adc
jle
add
xchg
jno
mov
add
mov
jl
loope
xor
xchg
push
sbb
adc
inc
insb
arpl
or
cmp
sub
adc
push
clc
mov
insb
push
xor
loopne
lret
out
inc
push
mov
dec
ds
outsl
sbb
add
insl
adc
dec
es
sub
mov
jge
fisttpll
mov
and
cmp
dec
add
fadds
shll
push
jb
jb
add
mov
add
mov
xor
add
push
out
mov
mov
test
test
je
fs
sbb
insl
notl
lods
cmp
fbstp
add
mov
gs
cmp
lret
add
adc
inc
xor
adc
push
movhps
dec
jecxz
mov
sarb
xorl
scas
or
push
dec
or
and
dec
xor
mov
aam
fdivr
nop
jmp
jg
add
cwtl
pop
fcompl
fmuls
pushfw
inc
xlat
adc
out
or
aad
mov
rcl
mov
test
test
and
jnp
add
cmp
out
pop
ret
mov
jo
jmp
xor
push
mov
pop
jl
in
xchg
lret
push
push
pop
cmp
aaa
mov
cltd
idiv
lret
inc
mov
cwtl
mov
mov
cwtl
andl
pusha
add
fcoms
enter
inc
xorl
loopne
mov
out
stos
and
leave
inc
mov
add
mov
dec
icebp
mov
inc
push
mov
leave
movsl
fsubs
mov
sub
add
xchg
outsl
mov
push
addl
cmp
inc
cmc
les
add
inc
fiaddl
cmp
cmpb
add
adc
shrb
andl
adc
mov
mov
insl
test
xchg
outsl
inc
or
test
jle
into
add
pusha
pushf
push
jae
movsb
jns
bndldx
and
clc
add
adc
out
jne
cmpsl
xchg
sub
aam
scas
sub
out
inc
add
add
loopne
test
dec
push
add
mov
sbb
pop
mov
je
and
and
ljmp
pop
je
je
mov
mov
push
in
push
or
lret
inc
js
jae
xor
sub
add
jo
add
or
sub
adc
lods
jbe
inc
in
sub
pop
popf
andl
sbb
dec
pusha
pop
inc
inc
in
inc
aam
mov
das
jge
insb
add
imul
dec
add
lret
adc
sbb
testb
scas
jo
jge,pt
adc
or
sarb
rcrb
cmp
jne
mov
mov
pop
mov
xor
sub
nop
and
jle
rolb
lcall
push
xorb
data16
sbb
fildl
adc
xchg
scas
jbe
xlat
add
mov
jne
addl
cld
inc
mov
and
clc
mov
add
dec
in
jge
movl
pcmpgtd
shr
inc
add
inc
mov
dec
sbb
ret
adc
push
inc
adc
mov
inc
or
pusha
insb
sub
fbld
mov
mov
sbb
int
sbb
push
notl
mov
shlb
jle
dec
or
mov
lock
xchg
mov
push
mov
sbb
imul
add
push
sbb
fisttps
push
push
pop
adc
dec
cmp
outsb
sub
shl
xchg
rorb
insl
jne
add
jns
mov
dec
mov
dec
shl
lea
out
fwait
dec
insb
or
xchg
add
xchg
fisttpl
dec
je
rorl
sbb
xorl
imul
sub
pop
pushf
jne
and
inc
add
mov
or
repz
adc
push
jbe
outsb
pop
cmc
out
movsl
addl
test
dec
insb
sbb
ret
dec
jge
fimull
cmpb
ud0
leave
pop
sbb
dec
push
mov
add
inc
lcall
push
cmp
mov
adc
mov
mov
daa
add
fmull
add
or
pop
stos
das
push
fimuls
push
sub
push
pop
mov
sbb
push
lea
cmp
push
mov
int
xchg
je
aaa
jbe
lret
inc
orb
push
dec
sub
aas
mov
pop
sub
add
arpl
sahf
adc
push
jg
add
pop
testb
inc
pop
sub
xor
add
or
or
push
jbe
jge
jo
out
mov
dec
dec
push
je
xor
or
jl
loopne
pusha
adc
xor
mov
ret
mov
fildl
jb
inc
jecxz
jg
push
mov
scas
jmp
xor
lods
jecxz
push
aad
push
mov
jbe
dec
mov
and
aam
mov
addl
int3
into
push
jl
lock
jb
mov
sub
test
push
dec
inc
aad
adc
fdivp
inc
inc
push
insb
pop
or
dec
xor
mov
nop
pop
or
rolb
jl
repz
pusha
cli
cmp
dec
cld
adc
incb
mov
lcall
jnp
insb
movsb
sub
sbb
mov
or
sub
loopne
pop
mul
dec
adc
setle
mov
push
push
sbb
call
orl
dec
or
push
cmpb
loope
xchg
or
or
cmpsb
mov
aaa
sbb
xor
or
outsl
sbb
or
xchg
inc
cmp
add
sub
dec
bound
pslld
into
jmp
pop
inc
sbb
sbb
nop
movsb
adc
mov
popf
mov
mov
jl
sti
les
test
push
jge
mov
testl
pop
lock
movsb
jle
xor
mov
push
stc
int3
add
xor
rorl
lret
dec
adc
xor
jae
mov
cmpsb
add
insb
dec
add
loope
xchg
jl
dec
popa
jo
mov
or
pusha
add
jo
push
push
add
pop
les
andl
into
pop
lods
jmp
pop
pop
push
push
aam
into
insb
inc
or
add
add
inc
xor
pop
or
mov
pop
add
jmp
in
andb
inc
rorb
jne
push
gs
inc
adc
mul
es
testl
mov
inc
js
shl
jae
cmpl
mov
push
rolb
ja
jae
cmpb
xor
fwait
mov
pop
lods
push
orl
lret
aaa
mov
mov
xchg
add
bound
adc
lods
or
xchg
dec
lds
js
and
push
xchg
lret
xor
push
xchg
xchg
cmp
adc
in
movsl
arpl
add
dec
cmp
pushf
ja
daa
daa
loope
push
push
testl
hlt
mov
or
jns
hlt
push
xor
xchg
mov
adc
inc
push
push
sbb
clc
or
cmp
push
cmpl
push
sbb
in
aam
pop
mov
inc
add
loopne
add
clc
adc
add
testb
cmp
pop
xor
inc
xchg
out
pop
loop
adc
adcb
cmpb
jnp
pop
data16
loopne
out
and
out
ret
outsl
add
and
mov
nop
sti
dec
ja
je
or
je
or
sub
cmp
lods
fldl
adc
inc
andb
mov
and
push
lock
or
mov
jnp
sub
repz
push
adc
rclb
adc
mov
adc
mov
lds
and
adc
ret
movzwl
dec
push
pop
adc
enter
clc
mov
inc
jmp
jl
push
jo
cmc
mov
es
leave
push
sahf
clc
pop
inc
mov
nop
les
adc
je
shlb
dec
mov
pusha
aas
adc
push
imul
pop
shlb
cld
es
pushf
test
scas
add
and
mov
pusha
add
xor
pop
or
dec
test
imul
addl
xlat
push
lods
data16
add
es
scas
push
adc
fldt
xor
daa
or
loop
mov
stc
sub
sub
adc
dec
in
inc
insl
or
not
imull
dec
pop
ja
inc
or
ja
mov
or
movl
int3
gs
lea
push
lea
xor
cld
fmull
sbbl
incb
and
dec
and
pop
cli
sbb
adc
pop
fcoml
push
add
push
movsl
adc
sti
bound
stos
sub
inc
movsb
or
inc
shlb
fisubrs
pop
loopne
mov
stos
aam
je
fcoms
jg
and
ss
or
enter
fstl
data16
add
pop
fildl
xchg
cmp
mov
mul
popa
mov
xchg
xchg
pop
mov
add
fcoml
popa
xor
push
mov
mov
cmpsl
dec
call
xchg
les
push
and
xchg
sbb
mov
imul
nop
rolb
fdivr
aam
movsl
cmp
cmp
call
test
das
add
push
call
sub
sub
push
pop
jge
scas
inc
push
leave
sbb
mov
ret
in
adc
and
fcoml
nop
out
leave
in
pop
movsb
cmp
add
push
mov
je
movsl
aam
int3
or
mov
aam
aas
dec
cmpsb
mov
rcrb
add
cmp
adc
mov
clc
xchg
loopne
rorb
idivl
js
xchg
xchg
pop
jmp
sbb
test
or
dec
jnp
lock
mov
sbb
cmc
or
sub
loope
fsubr
pushf
popa
push
xlat
repz
jnp
mov
adc
or
add
test
sbb
or
adc
or
xchg
mov
or
push
dec
ret
roll
push
nop
shr
les
jg
push
mov
sub
scas
nop
xchg
mov
fisubrs
adc
rcrb
sti
mov
mov
mov
sbb
lcall
nop
shrl
out
mov
movl
xchg
inc
add
push
jne
jle
xor
call
loopne
rcrl
insb
dec
in
sbb
in
cmp
je
cltd
dec
int3
nop
cld
pop
mov
add
mov
shrl
dec
leave
push
mov
andb
subl
cwtl
add
and
je
add
test
sbb
xchg
xor
pop
in
dec
jns
cmp
or
jo
out
sti
mov
add
adc
dec
sub
inc
imul
and
imul
mov
jbe
xor
jo
xchg
rclb
xchg
js
std
mov
aam
fadds
inc
adcl
push
test
inc
add
cmp
push
js
in
or
push
aas
pop
dec
movsl
cmp
call
xchg
jbe
adc
shl
call
iret
pusha
add
incl
sub
xchg
mov
mull
xchg
std
decl
pushf
cmp
rclb
pop
mov
push
hlt
sub
rol
std
insb
shrb
jp
push
jb
andb
ret
add
hlt
dec
into
mov
rorl
xchg
push
js
inc
dec
mov
add
jl
sbb
push
sahf
loopne
addr16
test
push
add
inc
add
and
inc
adc
adc
xor
mov
test
or
pop
rcll
mov
push
rcrb
cmp
add
or
fs
inc
loopne
push
inc
imull
or
call
ret
inc
cmp
filds
add
call
jns
hlt
fwait
cmp
js
daa
or
enter
or
jg
imul
js
and
mov
sti
inc
mov
push
js
jne
es
test
adc
in
or
rdpmc
mov
or
sbb
mov
mov
mov
shlb
sbb
xchg
movsb
jns
subb
pop
or
add
ret
sub
mov
pop
lahf
pop
out
dec
or
out
cmp
clc
add
jl
ds
xor
or
cmp
and
push
inc
adc
and
and
push
sub
pop
out
lea
dec
adc
sub
js
sbb
jo
inc
or
adc
pop
inc
mov
das
pop
outsb
xor
and
mov
adc
or
xchg
adc
push
sub
add
movb
sbb
push
scas
lret
mov
adc
js
sub
cmp
loopne
stos
fimuls
sbb
les
dec
imul
sub
mov
aam
and
pop
pop
sbb
xchg
or
fs
push
push
sub
sub
in
push
cmp
loopne
loopne
mov
jle
add
sbb
idivl
and
jno
aas
cmp
add
inc
pop
repnz
push
test
or
jl
sub
in
aaa
stos
or
adc
adc
push
xchg
xchg
mov
es
mov
sbb
je
sub
sarb
dec
pop
or
cli
call
das
test
push
adcb
pop
movsb
jmp
xchg
jne
xchg
or
jae
sub
mov
cmpsl
sbb
sbb
into
cmpsl
push
fsubs
add
and
add
push
subl
dec
dec
cli
add
pop
je
or
push
cmp
add
setle
xchg
mov
pop
add
push
sub
pop
sbb
fcomp
push
dec
mov
movsb
lcall
add
and
mov
in
fs
je
out
xchg
sbb
sub
dec
and
or
sbbb
mov
pop
ss
mov
in
mov
movsb
xor
pop
dec
and
pushf
push
adc
and
xchg
or
mov
mov
adc
adc
push
cld
push
cmp
lods
sbb
test
repz
popf
add
rcll
push
jmp
jmp
enter
mov
clc
and
and
xchg
sbb
jl
push
jbe,pn
sbb
aam
add
gs
sbb
lret
adc
cwtl
mov
jae
imul
push
and
push
int3
adc
shlb
sbb
xchg
lret
lret
and
add
pop
cmp
sbb
push
sahf
pop
es
add
xchg
or
pmulhuw
inc
xchg
sub
lahf
iret
inc
pop
push
cmc
mov
xor
xor
lea
add
cmp
ja
mov
pop
mov
sub
mov
fiadds
loopne
push
sub
push
push
leave
xchg
push
jns
xor
cmp
pop
mov
cmp
push
dec
in
cmp
sahf
iret
jno
ret
or
inc
mov
add
cmp
sbb
in
or
push
cwtl
addb
push
fwait
inc
xchg
divb
mov
adcl
loope
and
push
push
das
mov
mov
xchg
nop
dec
dec
in
push
mov
les
mov
cmp
dec
jmp
push
imul
push
push
mov
scas
or
addr16
leave
inc
in
mov
push
mov
add
inc
test
fldenv
sarb
pop
or
ret
dec
mov
inc
clc
adc
call
ljmp
adc
adc
push
enter
inc
add
add
or
add
or
cmp
mov
and
jmp
pushl
sub
push
scas
sbb
ss
lods
pop
loope
add
js
insb
pop
lret
dec
loopne
mov
add
xchg
mov
push
sbb
mov
clc
mov
jb
movsl
sub
loopne
sub
adc
inc
mov
sbb
out
push
xlat
rcrb
cmp
lea
rolb
jecxz
test
add
call
sub
mov
or
mov
xchg
ror
out
stos
xor
sbb
sbb
aam
icebp
loopne
repnz
lcall
fisubl
in
call
mov
xor
loopne
shll
scas
add
std
mov
sbb
dec
pop
icebp
inc
jbe
call
jle
xlat
rclb
addr16
mov
lods
add
cmpsb
outsb
js
std
repz
dec
sub
and
rcrb
call
rcll
sub
jne
pop
add
push
sahf
push
lock
mov
or
push
addr16
mov
pop
or
push
adc
xchg
mov
xor
ljmp
sub
push
pusha
lcall
jne
cwtl
insb
aas
jne
pop
mov
push
add
arpl
add
nop
in
and
mov
insb
mov
lea
push
inc
dec
dec
mov
sbb
inc
repz
jge
mov
jbe
inc
mov
push
cmp
mov
mov
xchg
dec
fcompl
adc
sbbl
or
cld
daa
out
dec
add
push
mov
cmp
or
mov
mov
dec
mov
mov
sbb
jge
or
in
inc
adc
nop
or
cld
stos
and
adc
arpl
mov
mov
jb
sub
out
dec
ficomps
push
pushl
mov
push
add
adc
fstp
adc
jl
cmp
jae
add
shl
sub
and
out
cmp
jne
pop
adc
add
je
hlt
std
mov
pop
adc
or
mov
mov
jle
loopne
or
imul
in
les
push
xorl
sub
add
adc
inc
repnz
cmp
or
jle
inc
sub
enter
xchg
sbb
sbb
pop
mov
pop
sahf
mov
adc
cmpsb
push
inc
mov
mov
add
les
loopne
cmp
cwtl
and
bsr
dec
inc
imul
jmpw
shrb
adc
gs
sub
shrl
loopne
cmpsl
and
jb
xor
sbb
test
sbb
loope
in
rcrb
sbb
pop
ret
in
adc
cld
push
repnz
push
push
jp
test
jmp
add
mov
jl
inc
or
ja
insl
popf
adc
pop
in
mov
jne
scas
xchg
dec
jmp
shrl
sti
xor
insb
call
imul
test
ret
imul
fidivs
aas
lock
jns
pop
add
inc
push
sbb
push
dec
or
fdivrp
jecxz
test
mov
jp
test
mov
jle
je
cmp
jbe
mov
push
xor
inc
imul
lds
or
or
dec
dec
lock
iret
cmp
andl
nop
popa
mov
imul
inc
bound
xchg
sub
fdivs
ret
xchg
xchg
mov
test
push
inc
clc
push
add
xchg
adc
push
popf
test
or
clc
dec
addl
inc
test
dec
sarl
push
cmp
jo
add
mov
or
or
lock
pop
adc
jmp
arpl
or
cmc
rorb
inc
ljmp
test
int3
imul
jge
je
pop
inc
jns
jo
pop
mov
iret
mov
xor
enter
fwait
leave
adc
push
inc
cmp
sbb
push
movsb
cmp
or
lods
add
insb
pop
sub
daa
xor
icebp
push
adc
xchg
aaa
add
add
mov
dec
or
or
inc
push
cmp
jb
mov
ret
cmp
wrmsr
pop
std
out
sub
jmp
xor
pop
aaa
cmp
imul
push
push
nopl
imul
or
jmp
push
lock
dec
push
add
or
adc
or
xor
push
push
adc
pop
dec
sbb
ds
clc
testl
cmp
repz
sbb
jmp
es
add
cmp
test
subb
adc
mov
mov
xor
cmp
adc
and
push
dec
repnz
lods
rorl
pop
cs
or
loopne
fistpl
or
mov
inc
mov
inc
cs
add
addb
cmp
ds
inc
outsb
ret
lea
dec
lea
mov
push
cmp
int
daa
test
push
adc
xor
sbb
mov
movl
mov
xorl
xor
daa
std
sub
fadds
fs
mov
mov
cmovp
andl
jp
xchg
inc
adc
lcall
push
popa
pop
ret
mov
in
imul
cwtl
xchg
dec
dec
sbb
out
and
sub
inc
stc
and
lods
rorb
test
repz
push
xchg
in
addl
jmp
push
scas
loopne
pop
push
pop
nop
jo
xchg
or
adc
mov
mov
inc
jmp
cld
adc
pusha
popa
lods
dec
pop
cmpsb
and
inc
hlt
int3
cli
pop
cs
add
sbb
mov
inc
sbb
mov
jg
repz
cmp
push
pop
mov
rep
mov
test
sbb
cmp
add
mov
push
xor
rolb
push
cld
ret
filds
pop
pop
sub
dec
xor
xchg
aad
sbbl
cmp
loopne
test
mov
mov
jecxz
add
mov
and
leave
nop
pop
ret
push
mov
orl
mov
push
and
xor
mov
add
in
add
or
fwait
in
add
mov
pop
dec
and
add
mov
les
push
push
xor
jg
or
push
adc
andps
and
pop
in
outsb
daa
sub
lods
aas
cmp
pop
adc
cmp
orb
mov
jnp
hlt
add
les
xor
pop
or
popf
mov
cmp
clc
roll
sarb
pusha
mov
cld
clc
loop
ja
ja
call
clc
lods
lods
stos
mov
addps
inc
mov
jbe
sub
lea
out
and
ret
push
push
aad
pop
shl
jne
mov
cmp
enter
in
iret
test
push
jb
stos
nop
das
inc
pusha
jl
cmpl
or
mulb
cmp
inc
test
push
mov
adc
mov
mov
xchg
push
cli
push
addr16
lods
xor
stos
pusha
std
sub
testb
sti
mov
dec
jmp
inc
mov
enter
add
outsl
pop
mov
jl
mov
inc
cs
push
jecxz
sbb
test
or
xor
cs
mov
daa
orb
mov
mov
jl
test
jg
push
cmp
sbb
inc
or
mov
addb
or
jns
test
orl
test
push
jecxz
inc
inc
loop
jle
dec
add
jmp
daa
arpl
xor
jbe
inc
sbb
out
or
push
movsb
pop
fxch
shll
push
xor
sub
pop
jb
addr16
pop
insl
jbe
ja
nop
sub
nop
lret
lret
out
mov
pop
sub
movsb
sub
in
gs
dec
sub
cmp
in
inc
rorb
xor
addr16
movl
stc
jno
pop
add
sub
pusha
shll
add
lahf
aad
jo
inc
movsl
sub
push
or
add
ret
cmp
shlb
or
nop
scas
dec
sbb
ficoms
mov
mov
add
and
scas
mov
add
adc
push
mov
test
sbb
mov
xor
mov
or
or
fsubrl
push
xor
sbb
scas
inc
rolb
pop
push
fcmovb
sbb
jp
mov
jp
push
or
in
pop
adc
adc
pop
mov
mov
push
jne
sbb
arpl
jae
aam
mov
jbe
test
adc
sub
xlat
popa
inc
xchg
test
icebp
ret
pop
jbe
repz
lret
int3
je
cmp
je
cmp
cmp
push
push
dec
sbb
lahf
cmp
rcll
add
and
jno
dec
sub
xor
mov
or
or
mov
pop
inc
or
add
xchg
pop
outsl
sbb
pop
cmp
sub
add
mov
pop
mov
sahf
mulb
cmpsb
inc
xor
or
adc
xchg
fisubrs
jmp
sub
jae
shlb
add
sub
inc
sbb
inc
push
sbb
jnp
arpl
mov
pop
push
push
push
push
pop
bound
mov
add
pop
mov
inc
or
subb
adc
js
pop
adc
inc
inc
sub
mov
aaa
mov
jb
adc
cwtl
add
xor
inc
xor
testb
sbb
dec
xor
jbe
ljmp
mov
xchg
addr16
test
cmp
mov
sub
push
dec
call
shlb
and
inc
push
inc
push
insl
mov
cmpb
movl
push
sbb
push
mov
dec
insb
pop
jl
adc
xor
cmp
add
orb
lcall
mov
jmp
mov
jl
pop
adcb
repz
lock
andb
sub
adc
clc
aas
fidivrs
lods
push
and
into
xlat
repnz
inc
push
pop
mov
cmpl
rcrb
clc
pop
icebp
add
lcall
xchg
rcl
lret
add
jnp
cmpsl
inc
cld
mov
push
push
mov
sub
imul
test
or
push
sbb
add
adc
inc
sub
hlt
push
retw
cld
orb
mov
mov
rorl
mov
mov
adc
jno
incl
push
sarb
cmp
leave
scas
dec
rclb
mov
sarb
bound
inc
adc
arpl
and
sarb
add
shlb
xor
bound
leave
or
cmp
movsb
add
xor
cmp
mov
test
cld
loopne
mov
lods
mov
bound
bnd
or
and
or
sub
hlt
pop
jp
add
push
stos
jle
mov
mov
jge
xor
adc
hlt
mov
in
rcl
rclb
xor
testl
pop
ljmp
subb
dec
push
cmpb
jp
jno
sub
cwtl
push
icebp
lret
jo
stos
subb
inc
imul
mov
sbb
test
cs
jl
or
cmp
cld
shll
push
jo
dec
mov
into
call
aad
in
mov
dec
leave
adc
mov
repnz
insb
inc
cld
nop
add
lods
ljmp
inc
aam
adc
int3
adc
and
inc
add
jge
shrb
sbb
pop
nop
test
cmp
enter
add
cmpsb
adcb
sbb
push
mov
add
mov
inc
or
xchg
cmpb
or
pushf
in
ret
popa
insb
mov
adc
insl
insl
push
adc
inc
sub
pop
ror
or
cmp
in
pop
cmp
xorl
pop
add
push
xchg
dec
pop
jmp
cmp
je
push
shll
shrb
call
add
rol
add
clc
jbe
or
add
shlb
push
push
pop
push
ret
inc
mov
aaa
ficompl
jle
or
inc
pop
add
cmp
daa
hlt
pusha
in
mov
add
call
jmp
es
lea
push
and
inc
loop
sbb
lock
dec
or
testb
lock
adc
idiv
or
inc
rcll
movsl
mov
sbb
cmp
jnp
cmp
in
mov
loope
jne
and
lea
pop
rorb
orb
sbb
call
ficompl
xchg
and
inc
xlat
lea
lcall
or
iret
pop
adc
fnstenv
xor
add
or
enter
add
dec
call
pop
or
or
enter
xor
and
push
inc
stos
cli
cmp
dec
ss
arpl
pop
sbb
dec
add
jne
sub
outsb
sar
lea
jp
cmp
ret
sbb
push
popf
sub
aas
cmp
jb
pushl
mov
sbb
xchg
pop
or
pop
jmp
xor
push
loop
jae
inc
adcb
mov
adc
shl
adc
jns
adc
adc
xchg
out
add
xchg
loopne
push
aam
push
and
and
outsl
shl
xchg
lea
addr16
add
in
dec
mov
and
inc
xchg
icebp
mov
pop
xchg
xchg
fistpll
cmp
fistpll
loopne
test
push
inc
jb
cmp
bt
sbb
or
leave
sbb
sahf
pop
movsl
sti
sub
sbb
daa
or
in
and
cmp
sbb
cmp
insl
xchg
fnsave
ss
arpl
mov
dec
or
adc
andb
sbb
and
add
adc
lahf
jmp
fcoms
pop
and
pop
sbb
adc
daa
mov
movl
mov
or
pusha
lea
scas
xor
inc
inc
pop
jne
jb
xor
stc
pop
enter
push
pusha
mov
adcb
jae
movsl
push
add
mov
and
sub
test
add
ss
cwtl
mul
mov
mov
fidivrs
or
scas
and
mov
add
sarb
and
add
and
jb
add
and
add
add
enter
jns
add
daa
or
add
add
cmp
add
in
push
cmp
inc
scas
sbb
pushf
cmp
pop
push
cmp
inc
push
sub
xor
or
xor
add
mov
jmp
adc
sbb
enter
repz
push
dec
mov
jmp
push
data16
sti
push
or
sbb
sbb
pop
adc
dec
inc
or
or
mov
pusha
xchg
or
or
or
lret
or
push
xor
jp
mov
xchg
jo
mov
pop
dec
pusha
jns
adc
add
fimull
adc
test
cmpsb
je
sbb
scas
push
inc
aaa
mov
ja
ja
xor
adc
les
fdivp
or
dec
sub
xor
mov
add
cmp
mov
lods
lock
mov
icebp
dec
xchg
fnstcw
or
outsl
pop
jbe
fbstp
pop
jbe
jb
push
and
cmc
shll
and
xchg
sbb
adc
fwait
adc
xor
insl
data16
pop
push
repnz
cmp
push
data16
pop
pop
adc
mov
mov
insl
pop
jbe
stos
fstps
lods
rdmsr
sbb
xor
lock
sti
imul
or
add
outsl
lock
loopne
movsb
fwait
jbe
test
pop
xor
jne
push
inc
lods
mov
es
xor
mov
sub
lock
lret
dec
mulb
out
je
je
insb
aaa
movsl
stos
lock
pop
test
addb
rcrl
push
rorb
mov
dec
sarl
sbb
sbb
or
sbb
repz
in
test
lcall
cmp
cld
sub
int3
je
les
inc
inc
das
push
data16
leave
push
scas
js
and
into
mov
jae
or
repz
jae,pn
outsb
mov
lods
xor
mov
jge
scas
cmp
jmp
leave
movsb
adc
add
pop
xchg
adc
jmp
cmp
out
cld
cmc
es
adc
lock
sbb
sbb
mov
js
std
xor
add
cmp
lea
pop
mov
testl
addr16
cmp
dec
enter
out
aas
push
in
loopne
cwtl
int
and
loop
in
add
sbb
push
enter
mov
rcr
les
sbb
adc
or
or
enter
in
call
xchg
in
jo
or
fadds
mov
push
sub
pop
jmp
cmp
psraw
out
xchg
shlb
dec
or
leave
mov
fs
mov
sbb
test
sbb
adcb
int
cmpl
cmp
dec
cmp
jmp
data16
lock
add
pop
or
inc
stos
test
sbbl
rolb
rcll
pop
or
cmp
ljmp
dec
inc
or
nop
ja
pop
adc
or
adc
clc
sarb
movsl
sbb
pop
dec
and
or
jmp
les
hlt
xchg
lcall
shlb
sub
push
popa
fsts
mov
fsubrl
xchg
inc
jbe
in
aas
adc
hlt
cld
push
dec
andl
jbe
push
jl
clc
xor
xchg
inc
fidivrs
adc
ret
int
movsb
xor
shl
xchg
movsb
fcomps
shl
ds
sbb
xchg
or
push
lock
jmp
gs
js
push
ret
into
aaa
and
or
popf
data16
push
dec
xor
push
lock
rcrb
lahf
mov
dec
rcrb
shlb
add
or
cld
repz
lea
ljmp
or
push
mov
cmp
jl
cmp
jle
cmp
push
jp
or
push
inc
cmp
aas
lods
mov
dec
mov
cmp
jge
sti
jge
mov
pop
and
cmp
jl
or
adc
pop
adc
rolb
xchg
mov
pop
jmp
xchg
cs
pop
sbb
sub
pop
les
aas
fs
add
iret
shlb
nop
mov
and
mov
test
mov
cmpsl
sub
aam
loope
add
rorl
mov
jl
inc
xor
jl
dec
and
dec
hlt
jge
rorb
pushl
sub
push
xchg
fs
add
inc
sub
dec
mov
and
sub
lret
inc
pop
clc
mov
add
sbb
nop
adcb
sub
lock
imul
sbb
pop
push
push
mov
repz
adc
ret
jne
add
js
pop
add
movsl
aaa
xchg
jne
or
lods
loopne
nop
cli
ja
sbb
jp
jle
int3
movsb
fldl
and
fst
roll
mov
push
sub
stc
sub
rcr
sbb
test
fistl
mov
mov
sub
mov
out
aaa
mov
leave
jo
sti
sub
jo
jl
call
or
test
lock
and
dec
sbb
xor
aad
leave
fcoms
or
shl
mov
fidivl
adc
inc
and
fdivrl
je
sbb
cmpsb
jo
hlt
je
mov
arpl
pop
dec
add
mov
or
lahf
inc
xor
inc
or
or
sbb
or
add
out
ficoml
xor
or
sub
iret
repz
pop
pop
pusha
lds
sbb
or
and
cmp
test
mov
xchg
lret
std
cmp
lea
sub
in
mov
les
xor
xacquire
mov
dec
fs
add
inc
push
dec
adc
pusha
fs
aas
dec
je
adc
mov
push
jne
push
sub
out
xor
inc
aas
mov
push
arpl
mov
and
cmp
lahf
add
xchg
add
imul
aaa
pop
and
dec
adc
into
push
mov
sub
mov
push
ficompl
mov
loop
rclb
ret
addb
mov
sub
jle
and
loopne
push
sbbl
push
imul
xchg
push
pop
cmp
jo
dec
sbb
std
cmp
test
lds
sbb
andl
jne
aas
adc
cmc
xchg
jbe
jmp
push
inc
cmp
por
sub
inc
cs
add
shlb
pop
imul
pop
scas
lahf
xor
shlb
sub
cmp
push
out
pop
fucomi
jae
or
push
sarl
ret
push
test
xor
scas
jnp
push
mov
adc
inc
cmp
xor
aaa
stos
insl
fcos
xor
or
inc
les
add
mov
xor
and
jmp
or
ds
sub
out
adc
mov
xor
sbb
dec
jae
xor
sbb
mov
cmp
inc
fists
xorb
inc
repz
test
aaa
ds
test
xor
inc
aad
pop
gs
adc
xor
adc
sbb
cli
dec
inc
cmp
in
jae
add
je
cmp
push
adc
and
pop
push
inc
aaa
push
or
add
push
movmskps
enter
addr16
inc
mov
add
xor
jne
aad
fs
mov
inc
insb
push
jle
dec
add
and
jno
or
leave
in
push
push
inc
mov
sbb
adc
imul
adc
mov
and
mov
pop
insb
pop
je
imul
add
cli
or
fs
inc
int
loop
mov
add
mov
and
xor
cmpsl
lds
and
and
repz
mov
iret
inc
nop
xchg
sbb
imul
in
xchg
inc
insl
pop
cltd
test
addb
push
mov
jecxz
mov
inc
lods
pushf
lods
roll
adc
movsl
or
addl
adcl
push
jmp
out
rcr
jge
out
and
add
pusha
mov
fbstp
push
adc
cld
cmp
cmpb
fildll
outsb
add
pop
or
jle
enter
push
repz
inc
loop
clc
ds
pop
push
or
push
test
inc
insb
inc
scas
sub
push
pop
cmc
and
jno
hlt
pop
push
push
inc
inc
adc
cli
aad
sub
dec
sub
jg
cmc
mov
jl
and
hlt
jg
mov
mov
idivl
cwtl
bound
movsl
sarb
inc
or
add
jmp
cmpsb
push
xor
das
ret
orps
je
loope
pusha
inc
xchg
mov
xor
outsl
aaa
sub
or
decb
push
xor
pop
mov
pusha
pop
mov
pop
shll
insb
jg
mov
test
push
js
mov
or
pop
paddusw
dec
adc
shrl
ds
add
mov
push
xchg
or
or
fnstcw
jb
sbb
adc
push
jmp
dec
loop
pop
add
add
or
mov
data16
jle
cmp
xchg
jmp
lods
xor
dec
sahf
movsl
xchg
jb
sbb
jbe
pop
and
mov
jle
ja
mov
or
push
mov
adc
ret
arpl
cmp
pushf
cs
pop
and
or
clc
push
ret
jmp
lea
jae
into
insl
jmp
push
ret
daa
xor
hlt
sar
pop
push
sub
lds
add
sub
in
mov
add
outsb
pop
mov
lea
xor
and
popa
jns
push
or
push
xor
sub
push
push
adc
test
add
push
mov
inc
xorl
or
cmp
push
xchg
repnz
mov
mov
push
inc
sbb
and
test
je
popa
inc
ljmp
xorl
adc
lock
push
jno
pop
decb
es
push
dec
pop
inc
pushf
pop
sub
pusha
and
imul
nop
sub
hlt
loopne
sbb
fsubrs
aas
push
pop
je
fldl
mov
push
push
fstpl
dec
in
ss
data16
bound
inc
jne
adc
adc
jne
out
stc
jns
divb
or
jne
push
js
lahf
or
jne
or
scas
mov
mov
lcall
andl
cmp
mov
pop
popf
inc
xchg
js
enter
in
jge
and
fcomi
cmp
scas
shll
mov
mov
aam
arpl
test
lea
push
idivl
fstl
jecxz
scas
mov
add
lea
movsl
test
cld
mov
pop
add
movzbl
icebp
sbb
fmuls
adc
cmc
int3
dec
push
lea
ret
cwtl
loopne
scas
mov
dec
mov
cmp
popa
imul
pushl
jns
test
inc
inc
in
cmp
push
or
imul
ficomps
mov
or
pminub
xchg
mov
push
sbb
sarb
sbb
and
and
cli
or
jp
lods
je
push
dec
add
cmp
mov
add
push
jmp
js
lahf
inc
or
pushf
je
dec
jno
jbe
adc
movsl
add
out
movsl
rcll
sbb
adc
popf
cmp
js
lock
cmc
xlat
sub
push
mov
sub
cmpsl
sti
add
push
cmp
je
stos
lahf
push
testb
pop
mov
and
cwtl
push
repnz
nop
jl
sub
mov
nop
out
lahf
and
adc
sbb
imul
sub
xlat
push
in
mov
sbb
nop
loopne
stos
or
inc
sub
add
and
or
sub
xor
ja
inc
add
jns
clc
mov
mov
or
popf
adc
popa
mov
inc
push
inc
or
and
lods
push
lods
cmp
mov
pop
pusha
mov
add
mov
cltd
rcll
mov
jno
inc
xchg
xchg
mov
nop
mov
add
or
push
add
sub
xor
fs
pop
enter
aaa
pop
add
test
lods
iret
fisttpll
int3
sbb
leave
enter
or
mov
movsb
leave
enter
lds
pop
and
nop
ja
jo
loopne
inc
sub
cmp
inc
dec
xchg
adc
sub
sub
mov
add
push
imul
xchg
xchg
xchg
xchg
sarb
mov
test
mov
pop
cmp
jge
pop
mov
add
xor
adc
xor
out
das
pusha
inc
xor
loopne
jl
shrb
or
sub
inc
dec
xchg
push
xor
pop
repnz
or
ret
cs
clc
dec
bound
ret
pusha
or
sub
push
ret
jle
dec
loope
xor
cmp
jns
fwait
adc
add
or
add
outsl
ljmp
adc
hlt
adc
je
test
orl
repnz
push
lods
mull
push
add
cs
adc
clc
loopne
adc
jbe
leave
xorb
shl
cld
cmp
jl
cwtl
xchg
ds
aad
cmpsl
pop
add
inc
or
loop
lods
rorb
loopne
lods
mov
call
jo
or
adc
xor
ud2
shll
fcom
mov
sub
frstor
push
pop
call
sub
push
mov
mov
or
pop
jne
pop
push
push
xor
or
add
in
fidivl
push
add
push
les
test
or
orb
xchg
sub
cmp
in
lds
dec
test
insb
add
cmpsb
xor
jb
fsubl
and
hlt
mov
loope
lret
je
pop
sar
stos
cmp
bswap
mov
xor
aad
push
scas
xchg
pop
cmovne
sub
insl
movlps
or
dec
out
jne
xor
xor
ret
push
cmp
or
cwtl
fcompl
mulb
popf
adc
decl
es
jo
or
xor
subl
inc
add
das
inc
daa
call
lock
ss
add
loop
mov
jno
pusha
add
data16
jle
ret
dec
subb
sbb
andb
scas
push
sub
scas
fstl
pop
fists
xchg
dec
inc
std
pop
and
or
shlb
and
or
xor
mov
mov
adc
pop
push
shl
add
adc
shl
jae
cwtl
repz
testl
movl
add
and
xchg
out
fsubs
jge
je
imul
ljmp
xorl
mov
xchg
gs
dec
sbb
pop
pop
xor
dec
sbb
lods
mov
mov
in
sarb
pusha
ret
lea
rorb
in
mov
push
adc
push
movsb
rorl
int
pushf
int3
cld
or
repnz
iret
dec
push
add
loopne
scas
push
xor
push
jo
dec
clc
ja
dec
mov
clc
enter
loope
push
inc
addb
pop
or
add
mov
push
adc
and
js
call
lock
sbb
adc
shl
and
push
stc
nop
add
data16
push
scas
andb
mov
and
pop
push
rcr
ret
cmpsl
xchg
jle
cmc
and
jmp
add
stc
mov
imul
adc
push
jl
fistpl
nop
dec
insl
jno
icebp
xor
and
inc
jo
jb
jae
mov
shrb
ffree
lahf
or
push
addb
lea
testl
inc
mov
rcll
popa
xor
sbb
test
rcrl
lahf
or
dec
test
arpl
inc
outsl
mov
lahf
mov
push
mov
test
cmpsl
orl
or
push
lods
lahf
mov
dec
lcall
or
sub
push
jb
popa
loope
fldt
in
inc
loopne
jo
mov
or
jne
sub
mov
repz
sub
jae
les
aam
add
popf
mov
arpl
xchg
fcomp
notl
mov
sbb
pop
movsb
or
les
mov
imul
jo
ret
sbb
jle
jp
mov
ss
rcrb
pop
xchg
jp
push
jg
int
lods
dec
jbe
cs
stos
mov
mov
sbb
ret
fcmovu
pop
cmpsl
sub
or
xor
push
mov
xor
fcoms
ret
pop
es
leave
dec
jo
add
jge
add
inc
jb
sbb
cmp
xor
add
and
push
mov
fcmovu
cmp
mov
fnstsw
mov
in
jmp
aaa
pop
adc
aas
mov
mov
shrb
dec
or
ja
fwait
pop
cmp
adc
adc
decb
push
xor
dec
std
jno
arpl
mov
jecxz
mov
aaa
mov
ljmp
aam
enter
push
mov
lock
xchg
ret
mulb
sub
dec
or
sbb
inc
add
mov
push
fnstsw
adc
xor
dec
sub
sahf
adc
iret
cmp
iret
jo
inc
cmp
sub
aam
add
inc
or
leave
enter
ret
sbb
cs
fmull
pop
or
sbb
cmp
pop
add
test
jp
movsl
lock
xchg
shlb
mov
out
addb
aaa
addr16
adc
mov
lahf
hlt
mov
adc
outsb
nop
pop
push
or
ss
lods
lahf
cmp
shr
in
mov
shll
cs
leave
sub
lret
xchg
imul
xchg
sahf
jge
idivl
decb
popf
test
lea
push
push
inc
stos
lods
fstpt
and
and
or
jae
mov
pop
loopne
loopne
fcompl
pcmpeqw
dec
jno
popf
clc
jno
fimull
and
mov
xchg
sbb
rcrb
xchg
cmpl
rclb
jae
cs
stos
push
rol
pusha
and
adc
push
pop
cmpsb
push
test
cmp
pop
dec
jp
fldenv
sub
push
add
mov
lods
decb
test
dec
add
adc
out
in
fdivs
mov
xor
fwait
dec
jne
scas
lea
loopne
stos
inc
inc
aaa
cmpl
cs
in
push
push
mov
ljmp
adc
mov
insb
rcrb
adcl
sti
decl
clc
or
pushl
cli
jb
popa
leave
int3
jmp
popa
dec
jo
addb
xchg
xchg
sahf
push
jne
cmc
jle
add
andl
stos
stos
cmp
add
push
xlat
add
mov
xchg
adcl
inc
rcrb
adc
cmpsl
movsb
add
or
loopne
sarb
out
add
sbb
add
adcb
enter
xchg
inc
sahf
pushf
pop
pop
xor
add
dec
pusha
lods
or
xchg
add
enter
inc
sub
outsl
or
xchg
arpl
jne
iret
movsb
or
xorb
push
adc
xor
jns
pop
xchg
pop
cmp
and
daa
iret
inc
dec
dec
enter
push
pop
hlt
mov
and
shlb
mov
cmp
add
adc
add
popf
add
sub
adc
scas
sbb
cmp
or
roll
or
mov
jno
xor
lea
mov
pop
and
dec
push
jp
and
int3
pop
lock
mov
mov
and
pop
addl
or
cmpsl
add
out
ja
arpl
test
leave
ja
push
xor
dec
sub
push
daa
and
push
rcrb
adc
icebp
inc
pop
subb
jnp
and
jns
sub
cltd
xor
sti
push
sub
ficompl
test
push
cmp
and
and
push
sbb
xor
or
bound
push
mov
add
push
in
push
iret
or
inc
adc
loope
pop
mov
mov
push
push
sbb
insb
pop
mov
test
add
and
orb
test
sbb
pop
cmp
lret
mov
rclb
push
mov
int3
inc
add
or
sbb
out
mov
je
mov
ret
add
mov
hlt
shl
call
adc
cmpsl
inc
or
stc
add
imulb
test
out
inc
add
adc
lea
xchg
inc
addr16
aaa
bnd
xchg
push
pop
and
lock
pop
add
in
shrb
adc
adc
inc
inc
and
fadd
pop
mov
sub
add
sbb
push
pop
pop
aaa
or
sbb
dec
stc
push
call
fldt
inc
mov
add
jmp
mov
enter
iret
fdivr
pop
push
jns
inc
call
icebp
lods
inc
loopne
jae
adcl
add
arpl
pop
jge
xchg
int3
xlat
push
sbb
inc
inc
adcb
in
mov
imul
pop
mov
mov
clc
sub
movsl
in
out
sbb
pushf
jnp
and
addb
cs
add
add
insb
and
xchg
out
fisttps
fstps
lock
fstps
sbb
int3
adc
adc
push
xor
mov
or
add
imul
ficomps
and
sub
dec
mov
xchg
adc
outsl
xor
xchg
mov
mov
enter
test
and
enter
jmp
flds
lea
js
xor
pop
jne
fiaddl
sub
cmp
popl
jb
jo
pop
mov
xor
mov
ret
add
nop
xorl
dec
push
adc
mov
add
push
outsb
je,pt
test
sarb
or
push
mov
push
xchg
push
dec
sti
mov
stc
add
xchg
push
jbe
dec
inc
and
pop
sbb
xchg
pushl
or
test
and
push
insb
aas
cmp
loopne
push
push
dec
mov
jle
pop
sub
jecxz
sbb
push
leave
fcoms
rorb
and
inc
cmp
jb
pop
mov
and
nop
or
inc
lock
in
sub
dec
jne
or
aam
and
xchg
repz
cmp
jae
push
push
dec
ret
je
mov
test
inc
mov
orb
scas
push
das
bound
push
ret
and
outsb
das
jge
jg
or
leave
mov
ret
mov
xchg
pop
xchg
cmp
mov
mov
jmp
shll
imul
in
inc
negb
or
ret
sub
cwtl
jl
pop
cld
in
imul
iret
scas
movsb
jmp
mov
je
loopne
mov
fistpll
out
inc
or
pop
cmpsl
mov
inc
push
mov
dec
sbb
cs
xor
jg
mov
movsl
fs
mov
push
es
add
mov
xor
jo
and
inc
inc
or
rcrl
adc
imul
lcall
xor
cltd
push
xchg
mov
mov
push
inc
stc
loope
push
clc
inc
stos
adc
data16
mov
arpl
push
sbb
in
jmp
cmp
fcmovnb
mov
inc
dec
cld
jg
rcrb
or
and
mov
mov
pop
jl
stos
stos
icebp
push
add
or
mov
or
cmp
je
cmp
pop
test
or
mov
pop
cmp
jne
add
mov
mov
cmc
sub
jne
jmp
inc
shlb
pusha
push
inc
ret
push
test
push
adcb
push
xchg
or
loop
jmp
mov
xchg
imul
xchg
jg
sub
cmp
shl
push
adc
cmpb
xor
adc
cmp
je
out
hlt
enter
pop
or
aad
mov
lret
xchg
add
lods
mov
mov
cwtl
dec
mov
imul
push
movsl
mov
jg
cmp
and
ja
pop
dec
sub
pop
clc
add
push
out
jmp
push
push
jl
lcall
sub
xchg
arpl
in
or
sbbl
push
pop
adc
adc
adc
inc
loop
fwait
lret
paddd
insb
in
mov
ds
sbb
jg
or
and
push
mov
jmp
adc
cld
push
fildl
xor
inc
adc
out
add
add
sbb
pop
test
stos
xchg
inc
sbb
mov
xchg
fstpl
fldl
daa
fsin
fnstsw
test
je
and
push
add
insb
test
std
shll
or
sbb
add
test
movsl
pop
push
aas
pushf
cld
mov
sti
sti
mov
sbb
fsubrl
push
ja
cs
subb
mov
fldz
out
cmp
add
rclb
or
push
jmp
pop
jge
pop
or
adc
jns
push
clc
or
call
add
jnp
or
icebp
and
xor
gs
lcall
lcall
adc
sub
cmp
je
add
es
data16
cmpsl
mov
pop
xor
or
out
sahf
dec
ss
adc
sub
push
stc
xchg
sbb
push
push
mov
adc
mov
fcmove
out
int3
jmp
and
js
aaa
or
iret
jg
push
push
dec
sub
push
cmp
subl
push
cld
movsl
outsb
cmp
add
repnz
enter
repz
sbb
mov
in
jp
xor
aas
stc
cld
nop
mov
push
lea
daa
add
ja
out
inc
nop
imull
dec
xor
fmull
and
repnz
negb
inc
pop
push
push
sahf
sbb
push
vmwrite
push
push
jmp
and
enter
and
pop
repnz
adc
je
jnp
xor
repnz
and
push
mull
lock
sub
xor
sub
push
jecxz
stos
dec
repnz
pop
fsubrl
ret
dec
add
cwtl
inc
scas
pop
mov
sahf
pop
repnz
sub
les
fsubrl
fdivrl
repz
or
sbb
xor
add
insl
sbb
and
ss
and
bound
and
pop
ja
sti
or
jge
xchg
test
repnz
adc
das
jo
add
out
and
or
push
aas
in
or
aaa
mov
out
pop
es
fsubrs
pop
repnz
punpckhbw
adc
sbb
repz
or
aaa
sbb
ja
scas
or
sbb
aas
pop
lret
pop
xchg
mov
dec
aaa
and
pop
fwait
in
xchg
aaa
jl
jo
in
mov
sbb
mov
dec
sub
popf
imul
lcall
or
push
jge
jns
out
lahf
mov
ror
sarl
hlt
add
cmp
repz
adcl
out
or
out
sahf
cmpsl
sbb
cmp
pop
sahf
out
sahf
outsl
adcb
out
aad
testl
leave
repz
dec
or
add
jmp
lock
bound
jne
or
adc
or
sub
daa
in
decb
mov
cmp
and
push
imul
lock
nop
mov
inc
dec
xchg
xor
add
les
cmp
adc
and
pmullw
adc
shr
sbb
add
rcll
push
out
andb
xchg
sysret
xor
add
cmp
cld
pop
daa
sbb
mov
mov
mov
xor
adc
sub
pop
xor
nop
pop
mov
aaa
adc
cmp
loopne
push
dec
js
push
ss
xlat
pop
dec
and
add
push
and
cmpsl
nop
int
push
adc
loopne
xor
imul
sub
add
adc
in
adc
sub
rorl
xor
in
call
loop
mov
pop
xor
lds
stos
mov
inc
and
dec
mov
mov
sub
add
ret
cmc
sub
xchg
in
mov
mov
sub
scas
dec
hlt
mov
mov
push
addb
xor
adc
pop
push
sub
pop
jo
add
aaa
jns
jns
sbb
ja
loopne
enter
push
popa
add
call
call
das
pop
pop
add
push
outsl
adc
nop
or
xor
and
aam
dec
adc
mov
loope
push
and
in
and
add
mov
das
scas
out
lock
add
movsb
xchg
shlb
loopne
adc
add
mov
out
inc
sbb
add
and
push
xchg
mov
jg
in
dec
sub
mov
iret
invd
push
or
repnz
cmp
mov
cmp
dec
test
and
push
xchg
loope
mov
out
movsl
aad
mov
dec
ret
aad
push
scas
fs
push
push
cmp
push
aaa
mov
call
fs
sahf
sbb
pcmpeqd
xor
pop
insb
cmp
mov
push
cmp
mov
push
and
push
push
or
add
hlt
dec
mov
mov
or
push
mov
cmp
sbb
mov
xchg
or
sti
lock
icebp
dec
ss
rol
add
mov
lock
and
and
xor
iret
and
mov
in
add
cmp
xchg
push
arpl
sbbb
sub
mov
subb
leave
or
jecxz
arpl
lds
and
adc
inc
adc
pop
add
cmc
add
xor
sub
push
adc
pop
xchg
cs
mov
enter
aam
lds
adc
mov
inc
imul
adc
adc
es
daa
pop
xor
cmc
add
or
dec
xchg
mov
xor
adc
test
add
cmpl
add
or
adc
iret
scas
faddl
sub
push
jge
lea
add
push
adc
imul
sbb
add
ss
sbb
jne
push
std
cmp
xchg
in
scas
mov
in
loope
mov
dec
sbb
push
cmc
or
add
sub
addb
lret
shlb
and
dec
adc
add
push
mov
call
jne
call
inc
fisubs
mulb
das
scas
fs
cmp
jo
test
jo
enter
push
pop
pop
adc
pop
inc
xor
or
xor
xor
mov
pop
and
orl
pop
push
jl
subb
shlb
adc
and
add
add
ret
add
jle
or
repnz
rolb
and
pop
or
cmpl
push
or
incl
or
adc
cmp
pop
jne
shll
inc
xor
jecxz
sbb
or
push
loop
jae
and
test
aas
mov
and
lods
and
lods
mov
or
add
add
sbb
lret
add
mov
adc
mov
lret
add
jne
push
push
add
add
lods
fists
rorl
xor
mov
test
dec
jo
cmp
lods
mov
or
lods
sti
add
push
cmpsl
push
push
inc
add
and
sahf
jb
mov
mov
inc
dec
mov
repz
xor
push
or
dec
cmpb
je
dec
add
jne
cmpsl
in
inc
xor
adc
xchg
pop
inc
mov
out
or
rol
lret
xchg
popa
push
int3
add
leave
imul
xor
cmp
push
loope
out
cmp
cltd
lret
adc
into
push
mov
daa
fmuls
push
test
sbb
jmp
call
or
out
sbb
arpl
dec
add
inc
mov
cmp
mov
clc
je
jmp
arpl
fs
mov
sbb
push
popf
mov
dec
movsl
fwait
or
adc
or
push
outsb
repnz
sub
xor
add
and
adc
stos
or
pushfw
fmull
add
sbb
xchg
jnp
dec
lret
pop
add
test
xchg
adc
cs
pop
daa
sbb
test
push
fistl
call
lock
sarb
imul
repz
stos
sub
xor
push
inc
or
mov
xor
mov
roll
cmp
dec
loopne
xchg
or
testl
or
sbb
xchg
sti
xorb
fs
call
clc
push
cmp
ljmp
add
test
lock
js
rorb
add
rorb
in
cmp
sbb
jl
aam
add
push
dec
stos
rol
adc
lea
inc
fiaddl
jbe
mov
jp
mov
adc
cwtl
mov
cmpl
dec
std
jno
dec
mov
fcompl
imul
mov
adc
into
push
cli
add
jmp
mov
push
orb
int
dec
inc
sahf
and
and
push
push
mov
pminub
sub
mov
adc
sbb
adc
xor
mov
xor
rcrb
subb
dec
mov
lcall
outsb
mov
xor
sub
cmp
mov
jl
xor
jmp
cmp
add
or
sbb
popa
jp
adc
cmp
jle
cmp
je
mov
mov
push
add
inc
jmp
movb
mov
add
fs
pop
idiv
pop
repnz
and
xor
push
in
jne
enter
inc
dec
sbb
shll
aaa
or
xor
xor
push
imul
aad
test
scas
mov
mov
mov
mov
test
xor
imul
or
dec
ds
lret
rolb
lock
sahf
dec
testl
sbb
into
inc
or
sbb
mov
lods
sub
cmp
daa
cmp
fs
adc
cmova
push
cmp
push
adc
mov
lcall
xchg
xchg
cmc
loop
pop
leave
mov
push
lcall
nop
dec
gs
rolb
pop
lea
xor
fcompl
pop
adc
xor
or
xor
test
inc
sub
add
dec
cmp
shl
dec
icebp
test
or
test
rcrb
lea
sub
push
and
or
mov
ljmp
xchg
adc
pavgb
mov
enter
adc
adc
push
push
lods
stos
or
std
adc
xchg
pop
mov
sbb
push
cmp
mov
pusha
insl
xlat
addr16
push
push
pop
sahf
adc
xor
push
dec
cmp
sbb
pop
out
mov
jo
mov
jne
push
jl
mov
mov
sti
sbb
cmp
jns
xchg
into
cmp
enter
mov
mov
jl
sbb
push
cmp
xor
push
xorb
push
push
mov
xchg
ss
js
sbb
cmp
outsl
push
sbb
and
pop
and
iret
and
nop
xchg
imull
sub
sbb
dec
dec
inc
lcall
in
in
pusha
xor
and
leave
dec
mov
mov
int
xor
imul
inc
loopne
test
mov
cs
mul
sub
inc
jno
dec
in
mov
out
mov
ja
es
mov
cld
cmp
jns
pop
js
xchg
ret
insl
push
mov
xchg
sub
sub
insb
dec
mov
dec
fisubs
xchg
fsubl
xor
leave
mov
xchg
pushf
dec
nop
pop
mov
and
leave
adc
and
jo
fsubl
movsb
pushf
mov
mov
es
dec
dec
and
mov
mov
fwait
cmp
ja
jb
stos
xor
jbe
add
xchg
cmpsl
lock
sbb
push
scas
jb
popa
push
push
adc
sbb
pop
add
push
in
sbb
sbb
xor
and
rcrl
mov
jp,pn
iret
jno
dec
aaa
or
push
mov
sti
fadds
add
sbb
adc
loopne
push
mov
add
dec
or
mov
fwait
movsb
fcompl
sbb
fmull
sbb
scas
fildl
outsb
clc
pop
subl
mov
in
push
inc
int
fnstenv
and
lods
out
inc
fadds
inc
mov
gs
ds
enter
pop
add
jmp
imul
xchg
xchg
xchg
jl
enter
cmp
insl
call
dec
xor
je
or
add
xchg
ja
lret
xchg
int3
cmpsl
pop
jo
xor
jb
or
popf
add
sbb
in
rolb
lock
insb
pusha
xchg
bound
insl
sbb
loopne
mov
or
aam
cwtl
add
mov
cs
inc
repz
hlt
xor
add
or
mov
loop
jle
cs
into
adc
cmc
cld
add
mov
lahf
jp
xchg
push
nop
inc
sub
inc
push
and
add
lahf
pop
cwtl
add
addb
xchg
jne
push
or
fs
mov
pop
mov
add
inc
dec
push
out
jne
sbb
and
ja
pop
dec
mov
mov
push
fadds
xchg
or
or
pushf
fstl
loopne
add
fsubp
in
neg
sub
add
push
mov
inc
dec
sub
xor
pop
xchg
jle
push
and
gs
jb
sbb
sub
xchg
dec
jb
mov
mov
inc
popf
sub
shrb
pushf
add
dec
je
inc
test
xor
push
fidivl
clc
dec
sbb
push
lret
or
mov
and
pop
xchg
iret
inc
pop
fisubrs
pop
xchg
insb
adc
movsl
xchg
or
mov
push
sahf
xchg
sub
cmc
push
insl
mov
pop
test
lcall
inc
in
adc
and
test
push
lods
push
or
sbb
out
cmp
jbe
and
pop
pop
adc
outsl
test
inc
push
mov
loopne
cmpsb
mov
and
outsl
xchg
loopne
cmp
jge
into
jle
pop
xchg
jle
cmpsl
mov
pop
ja
fcomps
test
xchg
pushf
add
flds
mov
inc
push
push
rcrl
push
xchg
and
dec
add
lret
loop
dec
addb
leave
sub
cli
inc
outsl
xor
mov
push
xchg
int3
clc
mov
hlt
cmc
xorb
push
lods
mov
or
add
adc
call
mov
pop
incl
add
jbe
mov
adc
cmp
loopne
arpl
or
mov
insb
add
mov
rorb
sub
loop
pop
dec
inc
sahf
jg
and
xor
or
inc
xchg
mov
or
mov
push
xor
cmp
adc
aam
adc
jge
add
pminub
cmp
in
je
push
loopne
push
sbb
test
adc
or
sub
pop
push
push
in
es
add
sbb
mov
ds
sahf
repnz
jno
ret
sub
add
push
and
outsl
enter
iret
push
in
mov
adc
shl
or
rcll
pop
push
xchg
jmpw
cli
lcall
js
pop
sub
out
int3
rcll
inc
sub
sub
cmp
mov
push
leave
adc
sahf
pusha
scas
rclb
adc
shrl
ss
fimull
fimull
cmp
push
cwtl
jmp
pusha
mov
clc
into
comiss
in
cwtl
or
adc
pushl
loopne
mov
loope
pushf
push
jno
or
sbb
pop
mov
ja
sbb
fcoms
pop
adc
fcomp
iret
pop
add
fmulp
xchg
add
sbb
jne
xor
mov
or
fwait
xchg
sub
rcll
pop
pop
enter
dec
das
addb
in
cmp
cmp
shr
mov
cmp
aas
in
and
out
and
les
adc
adc
mov
cmp
sbb
add
jmp
jbe,pt
je
pop
or
mov
inc
lahf
adc
pop
push
cmp
cvtps2pi
aam
add
cli
jge
add
add
inc
mov
xchg
cmpsl
xchg
pop
lock
adc
jbe
push
shlb
daa
pop
add
mov
xor
out
xorb
loope
int
mov
xchg
cmp
out
outsb
push
mov
cmp
ror
xchg
sub
cmp
pop
cmp
in
cmp
dec
cmp
xchg
sub
cmp
sub
jb
lret
pop
cmp
adc
movsb
cld
or
mov
pop
push
or
dec
ss
cmp
mov
and
xor
js
adc
add
movsl
adc
rclb
cmc
cmp
out
xor
rolb
or
mov
stos
add
cmp
push
inc
sbb
or
or
jle
iret
aaa
mov
test
jge
cld
aas
xchg
mov
in
cmp
dec
xor
call
add
push
mov
sub
and
mov
push
rcrl
adc
mov
or
andb
lods
add
add
and
sbb
fwait
movsb
popa
imul
xchg
stos
add
stos
mov
and
adc
pop
and
lock
into
mov
jne
mov
adc
outsb
xchg
fnstenv
add
dec
add
push
rcll
push
int3
mov
cltd
pushf
add
sti
mov
dec
ds
loopne
xor
adc
outsl
call
and
int
add
aam
mov
call
cld
mov
inc
cwtl
xor
scas
dec
ja
movl
mov
xor
pop
fstp
sbb
pop
cltd
or
fmul
or
mov
push
pop
jle
xchg
dec
ss
push
cmp
add
xchg
push
push
add
inc
mov
or
or
add
inc
mov
sbb
jo
jg
sub
xor
sti
in
mov
xor
mov
pop
div
scas
push
mov
cwtl
push
push
xor
dec
xchg
adc
stos
jno
xor
jb
aam
in
push
inc
loopne
addr16
in
mov
cld
and
ret
push
push
mov
mov
add
mov
push
and
adc
popf
ljmp
out
insl
mov
push
adc
and
pusha
mov
adc
push
push
les
inc
push
and
add
push
or
es
ret
dec
push
mov
mov
push
or
loop
push
test
mov
pop
mov
xor
adc
loope
sbb
xor
mov
insl
and
subb
ret
mov
popa
es
jo
jecxz
jmp
movsb
xchg
daa
push
fwait
add
cmp
or
dec
loopne
add
addr16
push
or
push
mov
cwtl
xchg
inc
mov
push
sbb
ss
movsl
and
add
jp,pt
mov
push
push
add
aam
outsb
repz
loopne
sub
mov
lret
xor
outsb
int
lcall
mov
add
push
cltd
jb
or
xchg
inc
cmp
sbb
movb
sbb
sbb
lret
fistpll
add
push
cmp
test
push
push
test
addl
sti
mov
cmc
dec
fiadds
lea
stos
push
dec
cltd
adcb
or
xchg
cmp
idivl
and
cmp
jae
mov
sub
cli
mov
jp
rcrl
inc
insb
mov
jmp
fwait
ljmp
int3
movsl
add
test
push
and
add
and
dec
push
faddl
mov
adc
subb
adc
pop
pop
sbbl
xor
mov
popf
sbb
mov
sub
and
pusha
and
push
fisttpll
mov
mov
rolb
and
mov
out
lahf
push
sbb
cmp
mov
sbb
cwtl
push
jecxz
js
push
clc
pop
pop
push
lea
loope
dec
mov
popf
sbb
cmp
mov
adc
push
mov
clc
pop
xor
sub
inc
cs
xor
cwtl
sub
or
sbb
cmp
lock
movsb
inc
xor
xlat
push
xchg
or
adc
dec
mov
or
cmpb
xor
orb
daa
pushf
add
dec
out
pop
inc
and
jge
push
addl
mov
inc
push
js
in
add
add
adc
pop
xchg
and
xchg
push
mov
into
mov
push
or
rcrl
imul
rclb
enter
shll
xor
xor
push
rcr
dec
push
mov
lea
sbb
rorl
jne
or
xor
or
cmpsl
cmp
adc
dec
xchg
dec
dec
loop
or
mov
jbe
xor
dec
dec
cmpsl
push
sbb
push
dec
xchg
sub
and
ucomiss
mov
push
nop
xlat
cmpsb
fimull
push
jmp
cmp
jg
mov
pop
dec
or
lahf
mov
sub
aam
dec
sbb
add
cmp
mov
jecxz
cmp
push
popf
pop
and
add
add
xlat
orl
fisttpl
mov
ss
aas
add
mov
movsb
lret
push
sbb
dec
or
movsl
pop
out
sbb
dec
movsl
cmpsl
in
mov
filds
test
sar
and
add
loop
add
imul
add
scas
fs
sbb
or
movsbl
xchg
lds
fs
outsb
lods
mov
adc
add
in
lods
cmp
mov
xor
fdivs
and
orl
jo
mov
xorb
vmovss
push
jge
dec
rcpps
fs
push
iret
or
pop
sbb
lea
faddl
or
xor
xchg
stos
in
or
nop
sub
cwtl
and
xor
and
lret
or
xchg
inc
dec
mov
insl
mov
sbb
jmp
adc
repnz
out
dec
and
push
xor
mov
and
enter
and
iret
cmp
adc
jb
rorb
xchg
or
mov
xlat
sbb
cmp
add
leave
ficompl
fmull
cmc
cmp
mov
imul
inc
mov
inc
fwait
xchg
add
fwait
jo
stos
cmp
iret
psrad
push
push
mov
sbb
lods
add
popa
adc
inc
adc
in
mov
jae
mov
mov
es
sbb
sti
es
add
inc
movsl
adc
sbb
push
xor
add
push
or
jns
xor
fstps
pop
nop
mov
pop
gs
push
add
stc
pop
mov
jo
clc
mov
loopne
adc
xor
cwtl
cmpl
aam
mov
enter
sbb
ret
mov
jae
call
adc
pop
sub
or
or
or
or
jl
or
and
sbb
cmp
xor
leave
or
dec
mov
in
add
rcl
pop
xor
jb
mov
std
or
daa
dec
mov
js
sub
pop
scas
push
inc
mov
push
mov
and
lcall
roll
add
or
xchg
mov
add
mov
sub
push
imul
and
insl
or
pop
clc
xchg
mov
add
rcrl
sub
imull
rorl
push
dec
es
loopne
push
mov
lds
mov
or
mov
pop
mull
leave
jecxz
push
sub
pop
push
add
enter
push
sub
daa
jg
adcl
push
mov
dec
stos
mov
pop
lods
repnz
aaa
push
push
mov
and
mov
repz
in
pop
add
scas
je
push
adc
sbbl
add
add
add
jne
mov
push
loopne
out
insb
xchg
and
add
xchg
add
xchg
sub
inc
adc
or
dec
sbbl
add
sub
add
adc
jns
pop
imul
add
sub
jns
stos
mov
add
adc
adc
push
je
lea
test
adcb
sub
sub
imul
or
dec
loope
subl
dec
pop
xlat
cs
int
adc
and
xor
mov
sbb
sub
dec
jl
jmp
sub
rolb
mov
test
lcall
ds
or
es
lock
enter
dec
scas
dec
dec
jne
cmp
hlt
fs
xchg
lock
pop
sahf
xor
add
sbb
and
dec
cltd
loope
scas
cld
lcall
push
pop
cmpsb
leave
outsb
out
add
or
cld
push
adc
incl
add
das
sub
or
sbb
daa
cmpb
add
push
out
pop
adc
shrl
add
subb
mov
xchg
mov
xchg
adc
incl
add
mov
nop
sbb
mov
and
mov
adc
test
sbb
gs
cmp
pop
sbb
rcrl
xor
imul
jne
movsb
shrb
or
and
notl
decl
js
sub
mov
cmpsb
lock
pop
adc
roll
and
jmp
cmp
cmp
sub
add
push
mov
clc
lock
lcall
and
or
je
mov
mov
add
xchg
arpl
pop
push
mov
and
ret
mov
jmp
mov
xchg
dec
pop
psubw
jnp
add
add
lcall
dec
mov
js
cld
sarl
sbb
adcl
stos
stos
adcb
pop
jo
mov
xor
or
push
lret
cmpsb
xor
in
cmp
das
icebp
jb
jmp
pop
xor
sti
dec
fdivs
push
xor
ret
dec
jl
jne
mov
adc
mov
add
loopne
stos
mov
sbb
xor
ja
mov
popf
add
outsl
mov
add
dec
lahf
push
mov
adc
dec
inc
pop
sbb
js
or
push
pop
cmp
mov
add
push
sub
push
in
movsl
enter
mov
xlat
and
sti
inc
push
das
dec
test
xchg
insb
hlt
rolb
enter
add
in
sub
andl
scas
or
sub
outsb
mov
mov
sbb
ja
bound
inc
fmuls
lahf
das
sbb
push
cltd
xor
and
pop
decb
popa
add
or
adc
adc
inc
inc
notl
arpl
dec
loop
add
xchg
dec
push
mov
pop
call
aas
or
les
rcrl
push
dec
lods
sbb
fidivl
mov
inc
enter
sbb
mov
or
add
push
sahf
pop
scas
add
push
push
hlt
inc
pop
jns
xchg
xor
dec
add
mov
add
add
in
push
pop
lcall
or
push
add
stc
dec
cmp
pop
dec
sarb
ss
or
jge
push
push
mov
sti
sbb
mov
mov
into
rolb
or
jge
mov
push
or
sbb
xchg
js
or
add
pop
rclb
cmp
std
cmp
lea
mov
ret
adc
aad
xor
xor
inc
shrl
mov
mov
cmp
inc
les
cmp
cmc
xchg
cmp
jmp
scas
cmpl
pavgb
pushl
mov
jmp
popa
inc
sbb
fwait
sbb
arpl
jecxz
inc
sbb
nop
ret
adc
nop
or
inc
sbb
test
aas
push
push
xor
lea
or
insb
cmp
add
popa
push
lea
test
add
pop
or
cmp
clc
pop
mov
inc
jmp
incl
and
jae
lods
or
cmpb
fmul
add
and
inc
aas
movsl
test
addl
imul
add
in
inc
insb
enter
or
ficompl
test
sub
fs
push
xchg
das
cmp
das
adc
das
test
adc
xor
ss
push
jbe
mov
bound
rcll
push
mov
add
aas
push
je
loopne
sub
xchg
mov
add
fstl
xorl
jmp
or
mov
outsl
xor
insb
sbb
or
insl
jne
or
mov
call
leave
or
in
sar
ss
ljmp
xor
sbb
jo
jmp
jnp
mov
dec
push
adc
adc
adc
sub
stos
push
test
pop
xor
jae
mov
bound
scas
inc
cmc
ljmp
mov
sbb
and
js
mov
mov
sbb
test
adcb
call
icebp
aad
lret
incb
inc
pushl
ljmp
inc
push
insl
and
lcall
out
test
mov
outsl
mov
adc
insb
icebp
roll
sub
in
dec
add
push
inc
mov
das
pop
jge
lock
mov
popf
pop
xor
jbe
push
in
cwtl
inc
filds
sbb
and
sbb
sbb
push
scas
add
jecxz
pusha
or
jns
and
add
mov
adc
sbb
cmp
and
dec
adc
leave
push
pop
xor
push
or
insb
test
inc
and
fisubrl
hlt
dec
jnp
test
xor
ror
or
pusha
ret
push
les
test
sti
or
jmp
mov
cltd
mov
shrb
inc
sub
sbbl
xor
xor
movzbl
push
or
in
in
jmp
and
cmpsb
push
jmp
outsb
and
add
cmp
cmp
out
lret
or
xor
ds
inc
mov
testb
movsb
stc
addb
shl
or
push
or
lods
adc
fldl
push
sbb
jnp
adc
and
int3
mov
and
lahf
lock
cli
jbe
ss
cmp
pop
xchg
and
orl
pop
push
sbb
adc
pop
jmp
mov
shrl
add
adc
fs
push
push
es
dec
push
ret
adc
sbb
sub
loope
or
dec
test
rcll
and
add
in
adc
sub
aam
add
jecxz
add
imul
insb
leave
mov
mov
lods
cmpsl
hlt
add
lcall
add
or
ss
mov
adc
inc
add
adc
push
pop
adc
and
repnz
xchg
lock
lds
mov
dec
inc
push
and
jge
and
adc
sbb
xorb
or
xchg
mov
mov
pushf
or
in
cld
aam
lcall
mov
rorb
xor
in
lret
dec
test
or
fiadds
jmp
test
nop
adc
jns
inc
fucomi
pop
mov
adc
test
add
out
fstps
jmp
and
mov
mov
imul
mov
mov
xchg
movsb
mov
pop
and
imul
sarb
dec
hlt
jne
adc
add
xchg
icebp
aam
push
xchg
in
sarl
ljmp
dec
ja
and
jo
pop
push
jb
daa
faddl
iret
nop
pop
loopne
cmp
cmp
and
adc
inc
mov
add
sbb
lods
sbb
test
mov
inc
repz
in
shll
incl
sbbb
jae
or
jge
xor
jmp
adc
seto
stos
xchg
fiaddl
jno
cmpsb
and
lret
push
sbb
sub
adc
or
dec
inc
cmpsl
adc
mov
movsl
movsb
popf
jbe
out
xor
and
push
cltd
aam
andl
adc
mov
dec
add
loopne
mov
adc
sarl
addr16
lods
cmpsl
push
adc
cmc
cmc
mov
adc
mov
jge
dec
and
fstpl
xor
bound
cmpsl
andl
cmp
pop
fimuls
sub
and
test
mov
fwait
aad
movsb
fbld
dec
jmp
jne
adc
push
or
sub
mov
jo
mov
adc
pushf
sbb
add
icebp
inc
test
ljmp
js
or
jmp
jge
sub
add
sbb
in
dec
mov
outsb
dec
addl
ss
or
adc
in
inc
scas
and
adc
outsb
in
mov
push
daa
push
pop
movsl
loopne
ret
cmp
pop
push
lret
out
mov
xlat
jle
mov
jo
push
xchg
inc
dec
jle
stos
cmp
add
inc
lahf
mov
rcrb
inc
sbb
mov
push
fwait
mov
inc
mov
cmp
or
push
pop
ljmp
push
in
inc
add
rcll
push
xchg
daa
je
or
mov
sbb
lret
cmp
adc
enter
jne
fiadds
in
call
add
push
push
icebp
add
dec
jb
scas
test
rclb
lds
xor
sub
imul
lods
and
xchg
dec
cmp
add
mov
jno
xlat
mov
pop
in
stos
movsb
jo
jle
add
push
hlt
xor
and
xor
add
loopne
shrl
sub
in
add
adc
stc
es
xor
dec
push
adc
xchg
push
adc
pop
clc
jne
adc
out
loopne
push
sbb
jge
xchg
in
sub
pop
xor
sub
push
and
mov
sub
cmp
push
push
enter
shlb
cmp
mov
int
or
mov
add
sbb
add
arpl
ss
call
cmp
push
push
push
call
sub
inc
mov
cmp
sub
inc
inc
sbb
cmp
outsl
or
scas
sarb
xchg
nop
mov
mov
rcll
push
daa
add
mull
ret
xor
rcrl
scas
call
mov
xor
movsb
jno
aas
or
pop
mov
push
sbb
push
push
jg
or
push
pusha
aad
and
or
push
hlt
lock
addl
cmp
add
and
sbb
jp
fisttpl
jbe
or
mov
call
loopne
mov
fwait
mov
mov
popa
sbb
mov
push
xchg
cmp
hlt
rolb
ljmp
push
sbb
cmp
jne
daa
lock
add
stos
pop
pop
ljmp
insl
xchg
sbb
popf
mov
mov
xchg
push
mov
push
jge
lods
xor
enter
cmp
jbe
mov
shr
push
push
and
stos
test
mov
in
mov
lret
sub
dec
sti
rcr
pop
xchg
enter
test
and
mov
insl
shl
push
aad
fcomps
pop
dec
loopne
sub
dec
sub
out
cli
mov
adc
adc
lret
sbb
stc
lock
push
jl
cmp
insb
out
cltd
mov
imul
dec
outsb
cmp
mov
call
push
pop
mov
xchg
popf
cmp
push
lret
xchg
pop
mov
sub
mov
fnstsw
stos
and
insl
xchg
jns
push
cmp
repnz
adc
add
dec
lahf
loopne
add
adc
fsubrs
mov
rolb
or
repnz
loop
hlt
or
mov
arpl
cmp
jge
mov
mov
mov
stc
inc
cmp
stc
mov
jns
sbb
add
cmp
xchg
push
jp
pop
add
mov
jb
add
pop
cmpsl
loopne
mov
sti
rep
movsw
push
xchg
or
mov
push
inc
mov
mov
adc
ljmp
nop
fadd
mov
inc
mov
adc
movb
clc
lea
cmpb
lret
xchg
fwait
push
cwtl
fdivl
push
mull
push
fstps
sbb
cmp
lret
add
movsbl
xor
sarl
ss
push
cmpsl
xchg
out
shrb
adc
and
push
cld
inc
cwtl
jnp
je
push
push
sub
pop
sbb
mov
push
dec
xlat
push
cmp
and
mov
sarb
cld
scas
xor
lock
stos
cmpsb
push
dec
outsl
test
push
mov
cmp
mov
add
pop
push
fists
fs
jb
mov
and
or
cmp
sub
or
xor
pushf
inc
clc
sbb
sub
pop
inc
mov
ss
int
mov
mov
sub
pop
mov
cmp
or
cmpsb
lock
test
push
pop
call
dec
sbb
xchg
cmp
jecxz
inc
and
rclb
sbb
jbe
hlt
push
add
cmp
cmp
add
push
cmp
cmp
or
or
jnp
fmull
or
jbe
jmp
or
addr16
por
jmp
adc
pop
adc
push
adc
dec
adc
dec
adc
aas
pop
jmp
sbb
xor
jmp
sbb
es
and
pop
pop
jmp
and
or
jmp
pop
push
cmp
fimull
push
cmp
pop
aaa
imul
mov
movl
cli
jg
xor
cmp
iret
repz
push
pop
pusha
push
jo
jge
xchg
repz
mov
cmp
repz
scas
mov
mov
ret
enter
iret
repz
fsub
out
lock
fbstp
add
mov
pop
or
and
jmp
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
mov
repz
pop
adc
inc
or
js
jge
and
iret
add
std
fsubr
or
mov
rol
mov
popf
mov
mov
loope
pop
xorb
jle
ja
jl
add
mov
mov
aaa
cmp
fiadds
je
ss
xchg
sub
or
in
je
cmp
jae
pop
xchg
in
jb
jp
push
pop
movsl
popf
and
push
push
dec
enter
sub
lock
sti
add
xor
cmp
add
push
and
in
cmpsl
and
mov
jg
dec
nop
repnz
jne
push
das
inc
pushf
add
adc
push
push
mov
mov
xor
add
fnstsw
add
add
rol
test
jmp
jmp
aaa
and
popa
mov
and
inc
or
push
xor
fcmovb
fstpl
cmp
daa
sub
dec
inc
push
xchg
aaa
lods
sub
mov
ret
lock
movsl
nop
out
mov
mov
inc
or
dec
push
adc
fwait
push
xor
rol
loopne
jg
aam
push
cmp
jne
xor
ds
xor
wbinvd
push
ss
sub
sbbl
add
movsb
inc
mov
jne
or
sti
push
push
push
pop
loopne
or
xor
jne
mov
sbb
add
std
scas
add
sbb
pop
jne
ljmp
aas
inc
xchg
cmp
inc
aaa
push
push
pop
cmpsb
es
loopne
sbb
pop
sub
orl
les
cmp
insb
xor
xor
cmc
xor
or
mov
cld
push
mov
push
sbb
push
bound
push
lock
push
dec
imul
and
clc
adc
pop
sub
idivl
cmp
mov
or
or
or
ja
fsub
sub
adc
xchg
inc
adc
clc
dec
and
pop
imul
pop
sahf
xchg
jnp
cmp
pop
test
shlb
push
adc
mov
adc
push
ds
xor
xchg
inc
je
push
ljmp
add
push
cmp
add
add
xor
clc
enter
cmp
or
shrb
inc
inc
jo
mov
shlb
add
mov
mov
test
cwtl
insb
pusha
adc
pop
push
inc
cmp
es
cmp
lret
hlt
imul
jecxz
dec
int
jno
lcall
jmp
les
add
leave
jl
arpl
and
inc
add
das
cmp
push
icebp
cltd
rclb
fcompl
int3
sbb
in
rcrb
int3
enter
xchg
test
add
pop
flds
pop
jge
lea
mov
xor
icebp
andl
sub
stos
adc
cmp
jbe
cmpsl
push
bound
sbb
or
xchg
push
xor
or
jno
pop
icebp
jne
mov
aam
sub
dec
fiaddl
push
pusha
pop
add
sbb
and
cld
pop
and
movsb
pop
pop
push
repnz
testb
inc
std
mov
xchg
xor
loopne
mov
je
xchg
jg
add
subb
inc
cmp
add
mov
push
adc
dec
push
xor
add
sbb
loopne
nop
or
shl
mov
dec
cmpsb
and
testl
enter
xchg
pop
xchg
pop
add
sub
add
ret
negl
test
sub
ror
ret
inc
mov
and
lods
fwait
pop
pop
add
xchg
pop
push
cltd
push
or
dec
es
mov
sub
or
pop
mov
and
adcb
gs
xchg
movsb
sub
adc
xorl
pop
mov
std
flds
pop
cltd
dec
adc
pop
inc
packsswb
xchg
and
xchg
or
push
pop
rorl
inc
jecxz
orl
adc
and
add
pushf
in
jne
cmp
sbb
xchg
and
pop
adc
sarl
cmp
insb
stos
nop
jp
mov
sub
sub
mov
or
xor
test
jmp
push
adc
lds
sahf
pop
movsl
push
xor
fidivs
movsl
ret
lods
pop
fdiv
and
jns
xlat
mov
push
in
jmp
sub
stc
iret
ss
loopne
iret
jge
fisttpll
test
add
mov
mov
daa
cs
dec
cmp
fldenv
cmp
push
popf
test
cmp
push
dec
cld
sub
dec
xchg
inc
ret
clflush
jns
mov
icebp
sbb
or
jecxz
add
test
jo
cmpsl
dec
mov
jo
add
stos
pop
jbe
test
insb
ljmp
repnz
popa
pushf
inc
orl
popa
movb
sahf
dec
fdivs
in
or
add
in
xchg
ljmp
repnz
das
loope
adc
ss
jle
orb
lret
lds
pop
jne
mov
je
adc
andl
mov
adc
mov
leave
and
out
je
inc
jnp
sub
lock
mov
jge
in
or
jbe
lret
in
sbb
or
jle
inc
lock
ret
cltd
mov
and
dec
and
ficompl
add
push
in
jne
ljmp
cmp
and
push
repz
mov
push
int
push
lods
mov
sbb
pop
pusha
inc
ljmp
xorl
and
push
pop
sub
add
mov
faddl
push
and
cmp
mov
dec
push
xchg
sbb
cmp
lret
bound
out
inc
shlb
inc
ljmp
jp
push
mov
loop
loopne
xchg
shr
add
ja
testl
std
pusha
or
and
shlb
test
cmp
sbb
dec
gs
or
or
and
push
les
inc
scas
in
sbb
enter
or
add
cmp
push
fistl
jl
dec
pop
jmp
scas
cmpb
pop
xchg
sti
pop
movb
or
out
addl
rolb
mov
cmp
decb
xor
cmp
jle
mov
ss
xor
mov
pop
push
mov
mov
js
xor
mov
rcll
mov
sbb
pop
movsb
xchg
rorl
popa
adc
jmp
and
jg
sbb
sub
movsbl
mov
and
push
pop
icebp
jbe
xor
inc
pop
mov
or
push
inc
push
xchg
cmp
fadds
push
push
add
daa
das
fwait
movsb
push
or
ds
inc
add
inc
jbe
js
push
inc
mov
push
enter
inc
push
aaa
dec
fs
dec
rorb
jo
pop
js
and
xchg
in
and
test
mov
es
xchg
pop
push
push
mov
sbbb
movsb
pop
test
mov
xchg
lret
mov
les
test
imull
cwtl
lret
das
mov
adcl
add
inc
test
mov
pop
add
lea
push
mov
test
aas
pusha
push
lret
and
and
or
jbe
incl
adc
jne
incl
cmp
jl
iret
in
adc
mov
sarl
mov
dec
idivb
lea
or
sub
repnz
sbbl
fstpt
test
xchg
sarl
scas
jnp
jmp
lods
sub
xchg
hlt
shll
jne
mov
xchg
pushf
push
pop
jl
jmp
lret
xchg
out
push
jbe
mov
sbb
mov
mov
cmp
je
ret
into
sahf
insb
int3
and
and
lret
or
ret
or
add
sbb
rorl
lock
test
pop
das
mov
js
xchg
insb
je
or
js
les
in
and
outsb
sbb
push
fwait
xor
aas
sub
mov
and
je
mov
lds
inc
dec
add
jb
cli
dec
mov
hlt
push
pop
cmp
pusha
loopne
push
fs
mov
push
repnz
es
lea
sbb
push
inc
jno
neg
pop
pop
sbb
mov
inc
pop
outsb
loopne
sbb
dec
cli
sbb
mov
lods
jle
mov
push
pop
add
pop
pop
sub
push
adc
cmp
js
call
adc
adc
je
cmp
jne
push
inc
pop
inc
adc
inc
push
push
hlt
adc
imul
pop
xchg
mov
add
sahf
add
dec
add
clc
mov
mov
insl
pop
or
mov
and
rorl
push
xor
add
cmpsl
and
pop
lahf
cli
or
adc
lock
sahf
call
mov
dec
sbb
add
pop
push
xchg
inc
push
daa
lret
pop
add
jmp
call
and
or
addr16
push
pop
xor
push
push
bound
jge
pop
and
gs
jge
push
outsl
adc
mov
sub
call
push
pop
movsb
popf
or
sbb
add
dec
int
xor
sub
or
das
dec
aas
jne
push
mov
inc
clc
adc
insb
dec
jmp
scas
sbb
xlat
test
mov
sbb
sbb
mov
scas
or
xor
ljmp
movb
in
sbb
xchg
and
cmp
mov
push
push
imul
ret
jo
push
mov
inc
pop
xor
into
push
into
add
or
jmp
pop
or
or
loop
dec
pop
js
push
sbb
rorl
inc
int
or
jmp
js
and
inc
jnp
rorl
outsl
push
lods
ret
lret
jmp
sub
inc
test
push
mov
ret
jecxz
mov
add
pop
pop
or
lea
shrl
std
dec
aad
insb
mov
or
mov
jne
aad
movsb
outsl
testl
push
cwtl
bound
shr
into
xchg
ret
sbb
or
push
inc
push
mov
mov
and
or
sbbb
repnz
add
xor
and
or
mov
sbb
out
data16
hlt
dec
notl
inc
cs
cmp
lret
jle
jne
imul
mov
push
in
cmp
cmp
adc
loopne
mov
hlt
cmp
and
test
xchg
lods
cmp
ds
cmp
leave
mov
mov
dec
inc
mov
mov
sbb
jmp
sbb
xchg
and
cli
sbb
rol
push
dec
xchg
mov
jo
in
lahf
jle
pushf
lea
aam
jae
insl
dec
mov
mov
jle
or
cmp
lock
dec
dec
cmp
mov
adc
xchg
pop
test
das
add
sbb
icebp
idivl
lods
pop
cmp
sbb
sub
icebp
sbb
jg
add
fdivrs
push
insl
and
push
ss
or
jne
jp
mov
jle
adc
push
div
mov
test
cmc
inc
mov
adcl
icebp
pop
inc
xor
stos
dec
dec
inc
add
aaa
jle
fucom
push
mov
dec
adc
pop
sbb
out
loop
and
mov
add
push
repz
lds
fsubrs
jo
int3
inc
adc
ja
adc
mov
pop
cwtl
orl
lea
inc
sbb
inc
ss
add
push
adc
mov
push
and
push
cmpsb
xchg
mov
mov
lods
fmuls
sub
pop
add
cmp
test
mov
dec
cmp
push
inc
loope
pop
clc
push
push
inc
sbb
aad
add
adc
dec
adc
ret
sbb
cs
sub
jl
inc
and
sbb
iret
cmpsl
aas
push
sbb
leave
repz
call
imul
aad
inc
add
mov
jg
mov
xchg
or
or
add
fstl
fcoml
and
out
fcomp
fnstsw
mov
in
add
jmp
fstpl
mov
add
in
adc
mov
lods
sahf
cmp
mov
je
sub
sub
mov
fs
push
xchg
lock
lock
mov
cmp
clc
hlt
or
xor
test
dec
pop
and
aad
lcall
mov
and
ja
or
dec
out
cmp
add
xor
out
push
adc
cmp
fistpl
and
test
in
repnz
inc
js
mov
imul
arpl
xchg
mov
inc
pop
stos
icebp
sub
in
int3
dec
cwtl
xchg
sbb
xor
sti
and
imul
add
cmp
add
push
xchg
rclb
scas
mov
int
adc
enter
mov
in
loop
fimuls
xor
rorl
enter
cmpsb
xor
nop
cmp
loopne
in
nop
sbb
sub
add
call
push
xchg
shl
jno
push
inc
leave
bound
or
outsb
xchg
gs
jne
add
mov
pop
mov
add
xor
jmp
xchg
push
pop
push
add
push
inc
pop
jp
jne
stc
xor
cmp
fcompl
xchg
or
mov
add
nop
mov
mov
mov
add
inc
imul
inc
rolb
movsl
cmp
je
lods
and
or
inc
cli
inc
xchg
cmpl
sub
xchg
les
add
cmp
pop
inc
sub
das
fs
lret
ss
ja
push
xchg
mov
aaa
movsl
mov
sti
loopne
xchg
or
add
pop
push
jbe
add
sbb
dec
xor
jo
aam
dec
rolb
push
test
add
push
movsl
stc
fidivl
and
pop
jb
loope
jns
adc
or
je
mov
sbb
push
lock
xor
and
xchg
add
sar
imul
es
or
cmp
call
aaa
cmp
testb
jnp
nop
adc
in
xchg
xor
mov
cli
icebp
test
or
in
je
in
jno
sub
push
loope
adc
aad
test
ds
dec
in
fistl
cs
sarl
daa
sbb
and
dec
cmpsl
adc
jbe
or
sbb
or
or
or
jno
push
add
mov
cwtl
cltd
mov
xor
gs
movsb
divb
cmp
es
adc
mov
jge
cmp
jne
mov
mov
mov
push
rcrl
lods
adc
add
cmp
add
sub
or
hlt
cwtl
js
push
jno
addl
xor
ror
or
les
xchg
mov
pop
shl
je
xor
mov
dec
cmp
addb
cmp
mov
jae
cwtl
sbb
test
in
xor
andb
xor
js
loope
popa
dec
mov
push
imul
adc
aam
push
sbb
andl
xchg
mov
ret
int
lret
inc
mov
mov
xchg
inc
call
lcall
or
je
cmp
jb
ret
inc
lahf
jg
and
mov
outsb
popa
pop
jbe
pusha
stos
adc
push
dec
aas
and
cmc
sahf
dec
push
push
push
pop
xor
dec
imulb
inc
add
sub
stc
xchg
in
sahf
test
sub
sub
lahf
push
push
push
dec
repz
movsl
or
and
push
adc
adc
rcrb
mov
mov
idivl
xor
jecxz
rcl
or
ds
outsb
loope
fistps
or
push
push
add
mov
ja
push
push
push
pop
dec
loop
pop
daa
js
gs
mov
lea
or
push
pop
or
xor
xor
add
imul
inc
jb
push
pushf
dec
sub
mov
sub
in
push
outsl
fwait
clc
les
lret
aaa
jno
or
and
cmp
test
pushf
dec
cmp
inc
mov
push
std
push
fnstcw
call
xchg
scas
in
lcall
cmp
push
sbb
xchg
inc
imul
aad
fwait
mov
out
fildl
jne
xor
lock
push
xchg
add
scas
lret
loopne
lret
pop
add
loopne
xor
adc
jmp
mov
sub
lods
insl
repz
pop
dec
shr
subb
cs
pop
pop
xchg
or
push
inc
rolb
cmp
sbb
inc
push
and
int3
mov
add
and
xchg
into
sahf
sub
pop
sahf
and
mov
clc
dec
add
mov
mov
scas
xchg
mov
lods
movsl
push
mov
hlt
dec
shrl
mov
aam
leave
enter
aam
cmp
subb
faddl
dec
mov
loopne
mov
movsl
push
mov
or
lds
sub
inc
or
sbb
in
xchg
in
dec
call
sbb
inc
add
cmp
cmp
mov
xor
push
add
and
xorl
or
aam
sahf
pop
fs
and
nop
pop
mov
jbe
inc
add
adcl
sub
and
sbb
mov
loop
rcrl
inc
add
xchg
orb
mov
dec
stc
ds
cs
jge
dec
or
or
sub
nop
xor
inc
ret
imul
popf
add
in
je
mov
ds
push
add
inc
test
mov
push
movsb
cmpl
add
pop
inc
sub
xchg
mov
out
push
push
jl
ss
imul
jg
ljmp
xchg
and
ret
adc
push
xlat
popa
pop
xor
pop
ljmp
fdivrl
lods
cmpsb
adc
push
adc
sbbb
mov
mov
xor
jne
jmp
and
push
fmul
sbb
xchg
out
pop
add
leave
scas
or
lcall
sub
pop
pusha
mov
movsb
aas
inc
add
push
and
add
or
subb
push
adc
mov
or
mov
or
mov
xchg
inc
cwtl
mov
sub
test
mov
orl
jae
icebp
adcb
loop
test
test
mulb
mov
pop
inc
test
sbb
decb
mov
sbb
dec
movl
mov
mov
mov
mov
push
insb
leave
pusha
jg
add
in
mov
jae
xchg
push
js
stos
loope
pop
cld
mov
pusha
loopne
daa
lods
or
cs
xchg
in
push
cmpsl
adc
jo
add
in
cmp
adc
cmp
sub
addb
pop
xor
imul
jle
mov
and
mov
mov
loopne
ja
mov
or
movsl
shr
sub
dec
sub
insl
jge
push
faddl
cld
add
scas
sub
jp
in
xchg
mov
dec
and
adc
insl
ss
xor
add
xor
or
push
in
push
push
es
lret
test
aad
hlt
mov
mov
lods
push
mov
cs
lret
adc
jne
sbb
jle
rclb
lods
mov
jnp
std
lcall
add
lret
stos
add
add
ja
hlt
or
or
leave
fisttpl
push
pop
or
mov
adcb
mov
push
adc
adc
in
jbe
mov
or
lock
imul
imul
push
or
scas
and
test
mov
aad
inc
and
and
inc
mov
sbb
in
add
jmp
mov
pop
jae
sub
or
pop
enter
repnz
mov
xchg
pop
jo
adcb
push
and
nop
mov
adc
or
mov
adcb
pop
jmp
and
dec
and
int3
pop
pop
orl
dec
ret
xchg
cmp
aam
clc
fucom
add
sbb
js
xor
jae
push
flds
and
adc
cmpsl
push
inc
imul
sub
lock
push
jae
loopne
pop
movsl
mov
mov
fstl
adc
dec
gs
insb
pop
mulb
ljmp
add
jle
ret
cmpsb
movl
and
pop
and
andb
enter
sbb
imul
cmp
or
movsb
je
jecxz
or
or
add
pop
jmp
cld
and
push
mov
repz
jb
in
cwtl
mov
jne
mov
mov
push
aam
xchg
mov
push
sbb
jne
push
fisttpll
je
cmpsl
sub
imul
xchg
add
mov
fmuls
mov
lea
testb
xchg
lock
dec
adc
sub
xchg
xchg
dec
jl
loopne
or
rorb
or
push
push
and
push
xor
mov
or
adc
push
inc
push
popa
cvtps2pd
push
mov
push
or
fdivs
xor
xchg
fisubs
jle
mov
pushl
cli
push
mov
mov
pop
loopne
cmpsl
cmp
je
popw
test
sarb
and
mov
add
add
jl
mov
sub
stos
cmpl
addb
lods
xchg
xor
ret
hlt
or
fisttpll
dec
mov
sub
cli
or
movzbl
rorb
in
pusha
and
stos
mov
lods
cmp
jp
inc
and
xchg
ret
add
sub
sub
add
and
add
jns
push
xchg
pop
rorb
pop
xlat
jp
fldt
pop
addr16
xor
push
mov
aas
or
scas
lret
jp
clc
add
shlb
push
push
lods
and
sbb
mov
cmp
jo
fs
add
adc
and
repz
dec
out
mov
sub
push
push
mov
cmp
push
flds
mov
shlb
aad
or
pop
xchg
add
push
jle
jl
shlb
push
mov
jno
nop
les
fwait
adc
sub
out
or
cmp
dec
inc
fildl
test
mov
adc
or
mov
mov
sub
jne
mov
in
testb
inc
fs
add
mov
lea
add
xor
push
cmp
aam
cwtl
mov
pushf
std
push
adc
sahf
mov
stos
cwtl
lret
mov
js
inc
shll
test
mov
imul
push
sbb
sbb
sbbb
pop
mov
test
inc
cltd
or
sbb
aad
xor
push
xor
or
push
mov
cs
nop
xor
fadds
bound
setge
mov
and
inc
lcall
mov
mov
add
lea
sbb
add
pushf
mov
daa
add
mov
add
out
push
mov
inc
fcmovnbe
sub
fwait
sti
xchg
and
mov
enter
push
dec
loop
fistpll
mov
test
sub
ja
cld
pop
cmpb
mov
daa
cmp
pop
sbb
aaa
lret
push
xor
push
aam
sbb
adc
push
nop
push
adc
enter
pop
mov
popf
mov
mov
jo
mov
fdivrs
inc
sbb
cmp
divl
daa
dec
or
adc
aam
ja
push
mov
call
jl
or
dec
pop
or
and
pop
pusha
or
movsb
aaa
loope
inc
or
inc
jle
lfence
add
cld
or
rep
mov
sbb
idivl
sbb
adc
and
xchg
adcb
roll
ret
out
xchg
lret
inc
mov
inc
loope
adc
push
stos
xchg
push
xchg
popa
pop
jns
adc
adc
mov
xor
je
popa
push
sbb
cmp
adc
mov
enter
mov
test
cwtl
mov
xor
and
mov
pop
inc
pop
cmp
jg
cmp
loop
andb
jo
lods
xor
int3
mov
or
inc
das
or
adc
sub
add
dec
mov
sub
pop
sub
pop
inc
sbb
out
pop
data16
movsl
pop
pop
in
mov
pop
loop
mov
and
mov
ds
in
in
pop
pop
jge
stc
pop
mov
or
push
aad
imul
jb
lret
push
movsb
pushf
das
test
dec
jb
mov
scas
jns
gs
mov
dec
cmp
jb
sar
mov
inc
sbb
lahf
mov
lock
sub
stos
sub
cmp
adc
inc
bound
lock
pushf
push
and
cltd
outsl
lds
pop
adc
adc
fdivs
ret
and
push
push
inc
sub
cs
sbb
fnstcw
pop
jae
mov
inc
or
pop
sub
mov
push
cmpsb
loopne
in
shll
or
and
add
loopne
sbb
sbb
mov
jnp
jecxz
es
or
xor
das
push
xor
add
cltd
dec
sbb
or
mov
cli
or
ljmp
xchg
gs
loopne
xchg
fisttpl
jl
or
test
addr16
sub
mov
add
pushf
mov
and
shrb
sub
fcmovbe
mov
mov
dec
mov
and
xorl
mov
mov
jnp
stc
sub
inc
cmp
jnp
and
sbb
sub
dec
pop
xor
mov
pushf
pusha
xchg
stc
cmpsb
adc
pop
cmp
adc
sub
jne
shrb
cs
dec
mov
subl
inc
or
addr16
hlt
mov
mov
movsb
pop
in
repz
pop
dec
push
jmp
sub
or
inc
sbb
fiadds
jns
repnz
and
add
or
jne
and
push
or
lret
push
je
pusha
dec
jmp
dec
sete
aaa
jle
jne
cmp
xor
and
lods
pusha
dec
lock
xor
pop
mov
or
ja
xor
adc
and
xor
cltd
dec
xor
addr16
add
js
jle
or
test
rorb
xchg
mov
push
pop
or
mov
inc
mov
addr16
repz
pop
push
mov
mov
dec
ret
mov
or
and
inc
xchg
inc
aaa
js
flds
loop
aad
or
jg
mov
jbe
stc
push
or
insl
fwait
or
sub
lea
pop
adc
pop
cmpsl
mov
push
ja
outsl
inc
push
cmpsl
adc
xor
jl
cli
inc
ljmp
mov
std
outsb
push
out
push
jg
pop
dec
movsl
jns
clc
sarb
rcrb
lods
sarb
std
push
jns
add
push
inc
inc
jmp
inc
fs
sub
xchg
jb,pn
pop
aas
cmp
lret
xor
sahf
icebp
add
rol
xor
xor
push
test
dec
adcb
js
xchg
pop
or
or
sub
jp
js
mov
arpl
nop
lcall
sub
mov
add
aam
in
dec
je
dec
pop
add
sti
push
xor
add
push
popf
cmpsb
push
and
rorb
jae
pop
pop
cmpsb
nop
push
clc
in
mov
lret
sbb
in
push
sbb
enter
es
mov
add
pushf
cmp
pop
mov
sub
sbb
imul
pusha
xorb
sub
adc
jne
cmp
and
lods
pop
sub
frstor
mov
scas
add
push
mov
push
add
nop
mov
sub
mov
enter
int
jmp
in
dec
dec
inc
fs
or
daa
add
pop
jne
js
add
sbb
push
es
leave
fiaddl
mov
clc
or
je
add
xchg
hlt
jb
add
sub
outsl
aad
rcl
ljmp
cs
pop
cs
or
mov
adcl
stc
clc
aad
mov
jmp
int3
push
cmc
push
mov
push
push
pop
or
mov
xor
and
sub
or
rorb
pop
mov
xchg
mov
pop
xor
jnp
jnp
mov
dec
and
test
movsl
nop
hlt
mov
push
out
adc
push
out
mov
lret
repz
add
sbb
inc
cmp
repnz
ret
call
sub
aad
xlat
or
sub
cmp
xchg
xchg
cmp
loopne
adc
pop
les
mov
cmpsl
in
xchg
fs
push
dec
add
push
pop
cmp
push
and
cmp
mov
andl
leave
push
push
rorl
cltd
adc
dec
imul
pop
mov
fisubs
push
divb
mov
ret
cmc
pop
setne
and
sbb
sub
or
ss
jne
push
loop
into
es
inc
dec
xor
test
das
sbb
pop
cmp
jbe
and
stc
add
mov
dec
and
mov
pusha
int3
inc
fldenv
fcoml
xor
add
pop
jnp
fwait
rorb
adc
pop
mov
cmp
dec
addr16
push
stos
mov
and
shlb
test
jl
jb
mulb
push
rcrl
jle
fcoms
setp
jo
adc
movsl
mov
aad
and
inc
mov
sbb
add
push
cmp
mov
cli
enter
cltd
pop
pop
mov
ret
ret
lahf
cmp
mov
rolb
and
rorb
out
fs
mov
cli
shr
xor
outsb
lea
inc
adc
mov
pop
add
sar
lea
test
cmp
je
xlat
movl
fmull
cmp
jbe
add
jmp
add
mov
xchg
gs
pushf
pop
and
or
inc
or
imul
out
adc
test
push
mov
mov
data16
or
adc
add
and
inc
adc
dec
or
gs
mov
or
dec
clc
pop
aad
cli
push
fsubrl
dec
mov
int3
aaa
mov
inc
lds
test
inc
movsb
adc
cmp
inc
arpl
mov
jle
mov
jne
push
and
js
scas
pop
fbld
jne
sbb
pop
or
jb
orb
cld
stos
xor
repz
xor
add
xchg
inc
js
adc
adc
add
test
xor
test
sub
add
mov
rolb
imulb
je
dec
pushf
call
cmp
inc
loop
loopne
sbb
aas
dec
and
add
popa
xchg
xchg
and
in
das
sbb
cmpsl
push
push
pop
clc
sbb
shr
add
or
push
es
les
mov
inc
inc
cmp
dec
and
inc
or
xor
pusha
push
lods
or
mov
push
jmp
imul
and
or
sub
add
in
fistl
sbb
or
xchg
jecxz
xchg
fiadds
lahf
mov
add
insl
adc
push
push
jl,pt
push
jmp
sbb
or
mov
sub
adc
mov
xor
xor
scas
lods
mov
xor
inc
pop
inc
pop
mov
add
test
mov
fidivl
adc
cmc
adc
inc
xchg
cmp
loopne
adc
cmp
mov
aaa
mov
jns
mov
cmp
sbb
or
das
adc
and
out
xor
mov
rcll
mov
aas
add
shll
aam
or
push
adc
sbb
pop
dec
cmpsl
inc
mov
cmp
sub
dec
sbb
fs
mov
or
pop
addr16
mov
cmp
or
je
pop
fists
loope
xchg
fs
push
sbb
cmp
cmp
nop
inc
adc
movsl
test
arpl
in
adc
shrb
inc
call
adc
jmp
mov
movsb
adc
js
pop
and
outsb
push
pop
pop
sub
imul
pop
add
pop
in
inc
aam
inc
cmp
jne
pop
es
add
and
add
shll
pop
add
rcrl
mov
test
add
add
in
xchg
and
xchg
test
and
push
xor
push
insb
and
add
add
js
push
cmpl
add
add
lret
testl
inc
mov
xor
or
das
sbb
int3
and
outsl
mov
dec
pop
inc
adc
mov
xchg
cs
mov
mov
push
mov
clc
leave
int
add
mov
inc
mov
stos
xchg
outsl
movsb
repz
movsb
sub
lods
mov
push
pop
mov
inc
andb
dec
add
jnp
pushf
xor
pop
jo
call
mov
push
in
repnz
daa
imul
pop
sahf
ret
ficoml
test
dec
add
push
mov
popf
sub
push
adc
jnp
mov
dec
pop
and
mov
mov
inc
xor
push
enter
and
mov
mov
dec
gs
loopne
xchg
or
xchg
push
mov
test
mov
popa
imul
rolb
movsl
pop
dec
and
jo
adc
mov
nop
add
mov
jge
push
es
les
jo
lods
push
setae
aad
clc
cld
push
push
mov
pop
dec
adc
push
roll
xchg
xor
add
pop
nop
lcall
or
repz
dec
dec
mov
push
dec
push
inc
lcall
fnsave
xchg
push
mov
in
add
mov
xchg
xor
scas
add
adc
loopne
push
sqrtps
add
das
push
mov
add
call
into
jo
imul
inc
and
xchg
add
loopne
pusha
adc
imul
pusha
push
pop
xor
mov
jg
sub
outsl
adc
cmp
aad
mov
cmp
cmp
cmp
dec
cmp
sub
lret
jmp
push
enter
inc
xchg
push
shrb
scas
and
sub
add
jmp
test
jmp
pusha
leave
jbe
xor
jge
add
pop
mov
add
loope
adc
mov
mov
shrb
pop
out
push
cmpsl
jmp
xor
sbb
adc
aaa
les
inc
dec
pop
loop
adc
push
loop
fs
or
js
xor
mov
add
into
dec
addb
ljmp
pop
push
cmp
pop
lock
cmp
xchg
inc
repnz
mov
add
lea
adc
push
mov
js
mov
bound
ror
repnz
ja
mov
or
and
sbb
adcl
in
out
das
movsl
repnz
jb
or
out
repnz
outsl
nop
rorb
scas
nop
js
sbb
movsl
test
in
xchg
movsl
jno
add
mov
adc
fsubrs
inc
addl
mov
pop
es
fldz
shrb
lret
jne
push
mov
fsubl
fucom
cmp
fstpl
xchg
push
mov
or
psubsb
pusha
xor
sub
or
enter
or
aam
sbb
fs
or
adc
sbb
movsl
dec
aad
js
push
or
movsl
iret
enter
xchg
scas
push
adc
orl
pop
and
test
mov
sub
dec
aas
or
adc
mov
xchg
inc
iret
in
cli
rcll
add
inc
shlb
movsb
or
movsb
bound
mov
dec
mov
jnp
sbb
fwait
into
bound
cltd
call
es
cs
test
push
add
push
mov
and
movsb
mov
sub
sub
inc
lea
push
sub
push
add
sbb
push
sub
adc
cmp
daa
movsl
lahf
and
paddsb
hlt
das
insb
and
add
sub
add
inc
add
mov
cmp
inc
bound
fldenv
pop
outsl
mov
and
push
or
xor
lds
into
add
push
icebp
xor
pop
adc
nop
in
jmp
mov
add
xchg
popa
push
int3
fidivs
decl
inc
adc
andl
mov
ljmp
movsb
pop
negb
inc
bnd
pop
xor
daa
loop
loope
sti
clc
and
push
bound
mov
add
pop
dec
mov
add
imul
mov
inc
les
push
or
push
pop
adc
test
xorl
inc
mov
push
jp
add
mov
leave
jne
xchg
pop
ret
pusha
push
xor
cltd
loope
popf
int3
call
and
xchg
and
push
push
mov
sbb
fistpll
nop
lea
adc
add
push
lods
int3
gs
sbb
mov
mov
sahf
jmp
mov
dec
inc
and
mov
pop
mov
inc
inc
pop
aam
inc
sub
test
adc
push
adc
dec
add
or
inc
dec
add
insl
jne
pop
jb
add
shlb
imul
pop
push
movb
push
inc
cmc
rcll
sbb
xor
lods
into
pop
inc
mov
jo
lret
pushf
jmp
xor
and
push
mov
lock
fimuls
xor
inc
xlat
pop
cmp
cli
addr16
add
and
gs
ficoms
fs
mov
test
xor
adc
mov
push
push
adc
xlat
cmp
in
or
cmp
push
xorb
lret
sbb
or
dec
push
sbb
pop
pop
jnp
or
clc
fistpll
fidivrs
cmp
out
inc
stos
xchg
sbb
addr16
pop
push
dec
out
jle
push
push
jo
add
test
loop
aas
cmpsl
adc
xor
sbb
push
sbb
push
mov
test
mov
jne
and
test
inc
pusha
pop
add
adc
add
sub
jno
cmp
push
in
orl
xor
xor
clc
or
xchg
mov
add
adc
and
xor
mov
xchg
lret
imul
push
or
adc
loopne
jbe
cltd
jmp
in
push
push
sub
repz
inc
cmp
stos
sbb
adc
jo
sbb
sbb
cmp
testl
rcrl
rorb
insb
xor
and
iret
cmp
and
mov
xor
xor
in
add
fisubrl
shrb
push
push
imul
pop
or
nop
repnz
xor
xchg
mov
cmp
or
cmp
mov
push
push
adc
jns
std
call
push
or
push
inc
sub
cmp
or
outsl
add
xor
pop
int3
call
cld
and
push
dec
inc
push
lret
mov
lods
test
push
call
sti
jmp
icebp
inc
push
push
mov
int
mov
sub
and
xchg
ret
adc
pop
seta
push
test
mov
enter
insl
in
xor
stos
cmpsb
jne
pop
lods
mov
add
adc
int3
into
jp
sarb
sbb
or
jl
popa
loop
call
dec
jne
and
sbb
or
popf
xorl
push
jmp
loopne
repnz
shr
push
loopne
lds
and
push
push
fwait
jno
sbb
inc
int
jmp
pop
das
in
pop
mov
jecxz
arpl
imul
add
xor
ret
int
push
dec
cmc
ret
arpl
jge
dec
mov
pop
mov
add
mov
mov
int
cli
add
enter
and
mov
rcl
jo
mov
xor
cmp
loopne
add
loope
movsb
cmp
mov
pop
in
and
in
add
xor
sbb
loope
icebp
inc
popa
dec
fistpl
jo
pop
adc
notb
pushl
or
xor
mov
rol
mov
ror
call
shr
xor
sub
jnp
xor
shr
xor
add
dec
adc
incb
js
add
mov
mov
popf
out
xor
ret
jae
or
and
not
and
xor
add
add
aam
sub
add
mov
stos
or
ljmp
pop
testl
cli
and
and
xchg
push
aaa
adc
rcl
sbb
xor
xchg
fs
movsl
rcrb
mov
fisttpll
push
or
xlat
ret
push
rol
rcl
add
add
add
imul
in
aam
call
push
xor
sub
ljmp
rol
rol
out
add
pop
dec
shll
xor
fdivl
imul
add
xor
in
aam
bound
in
jns
mov
punpckldq
sbb
adc
add
adc
mov
pop
aaa
mov
shll
fcompl
call
loopne
dec
in
imul
xor
loopne
cmp
and
cmp
aam
mov
pusha
xor
loopne
mov
cmp
hlt
mov
aam
add
in
push
xor
and
and
imul
or
lods
mov
xor
push
xor
push
inc
adc
rolb
sarb
xchg
sub
push
jo
ficoms
rcr
mov
mov
je
int3
daa
adc
push
loop
mov
in
pop
jg
add
add
pop
jbe
lcall
ret
lret
push
mov
or
clc
jp
push
and
mov
gs
fdivrs
inc
adc
xor
fs
call
enter
inc
mov
aam
mov
xchg
loopne
pop
mov
stos
subb
test
cmp
data16
in
imul
pop
jae
shr
rolb
inc
addb
sub
push
sbb
aaa
rorb
add
inc
sub
dec
loopne
jb
xor
call
or
inc
or
add
push
xor
inc
hlt
dec
xor
rcrb
xor
lret
adc
clc
push
xorb
nop
add
push
out
fs
cld
push
push
inc
lcall
and
pop
xor
pop
adc
movsb
test
rol
push
or
and
inc
and
inc
enter
push
xorl
mov
xchg
push
pusha
xchg
in
pop
scas
movsl
mov
or
arpl
rolb
dec
pushf
loop
adc
fs
xorl
inc
jle
or
shlb
dec
icebp
movsb
stc
stc
stc
mov
adc
pop
dec
mov
sub
imulb
cmpsb
imul
fcoml
sbb
jo
adc
in
add
mov
add
and
adc
adc
pop
or
fstpl
dec
push
pushf
out
pop
add
sub
mov
mov
or
movb
mov
add
lret
jb
lea
mov
add
sub
lea
pop
xor
jg
push
mov
mov
sub
sahf
lods
jmp
and
dec
ret
out
rorb
or
or
mov
adc
fcmovb
aam
lods
aad
mov
jae
mov
and
insl
sub
lret
loopne
lea
jmp
ljmp
sub
sub
pop
add
ret
dec
or
mov
dec
jne
pop
cld
adc
lock
aas
mov
sub
mov
push
aam
adc
or
fs
aam
mov
fidivrs
sbb
inc
add
jae
push
pop
fadds
rep
cmc
cmp
cmpsb
ljmp
scas
or
lret
dec
pusha
outsl
mov
mov
ror
mov
notl
cmpsb
pushf
mov
mov
mov
xchg
mov
ret
push
sarb
dec
sbb
dec
sbb
lret
divb
adc
inc
add
and
add
xor
inc
mov
test
dec
test
insb
dec
push
loop
test
push
adc
pop
lcall
pop
rclb
inc
addb
cmp
lea
push
and
mov
lea
or
mov
shrl
stos
inc
mov
mov
sub
pusha
movd
pop
pop
adc
shl
mov
fcmovb
mul
les
das
jo
adc
inc
dec
dec
sti
movsb
xorb
dec
add
dec
mov
dec
insb
fs
cmp
lds
outsb
lods
inc
mov
dec
dec
adc
cmpsb
mov
fisubs
dec
pop
dec
or
push
in
or
or
mov
test
pusha
ljmp
push
sub
and
hlt
mov
mov
mov
xor
pop
ret
addb
jmp
inc
iret
rcll
push
and
sub
or
cmc
fnstsw
sub
lcall
push
add
sbb
xchg
fstps
adc
pop
jae
test
xor
rorl
jge
mov
jmp
and
cmp
add
cmpsb
or
cmp
mov
adc
test
sub
std
jo
incl
and
adc
mov
fndisi(8087
loope
xchg
dec
fsubs
loope
pop
xchg
add
jle
es
pusha
incb
cmpsl
test
rolb
insb
xchg
xor
sub
in
mov
xchg
inc
jg
or
xchg
or
adc
jge
and
imul
mov
enter
pop
jecxz
mov
push
or
clc
and
das
adc
mov
push
into
mov
adc
xchg
dec
jmp
pop
pop
mov
gs
xor
push
jo
adc
stc
push
push
ret
rclb
pushf
mov
jb
repz
push
adc
and
mov
repnz
imul
dec
and
add
movsb
mov
leave
sbb
loope
jecxz
jnp
inc
mov
clc
test
pop
push
ja
insb
inc
test
cmp
push
sub
inc
mov
pushf
mov
pop
jmp
inc
and
jns
loopne
xor
rorb
inc
mov
in
dec
dec
inc
xchg
mov
or
push
push
outsl
insb
loopne
cli
inc
rclb
pop
push
idiv
jae
sbb
inc
jmp
ss
mov
add
inc
mov
mov
or
mov
insl
imul
jbe
enter
mov
push
add
mov
xor
push
add
enter
cmpsb
sub
cmpb
xor
movsb
lds
repnz
push
push
push
leave
push
sub
mov
ffreep
es
mov
jnp
adc
sub
andb
lock
cmpsb
cli
pop
cld
push
inc
push
jo
je
cmp
jbe
jns
pop
adc
pop
sub
fs
mov
xor
xchg
adc
pop
addr16
popa
movsl
or
cmp
and
and
inc
sub
js
push
neg
mov
insb
cmpl
cmp
pop
clc
repz
adc
dec
add
or
pop
das
mov
movsb
orl
ja
mov
push
rcrb
and
inc
ret
inc
push
dec
or
scas
pop
sbbl
add
sbb
cmp
lcall
add
sub
fwait
sbb
sbb
fsubrl
add
sarb
adc
cmp
arpl
xlat
sbb
cmp
add
shrl
or
add
subl
push
addr16
push
ss
ret
pop
pop
mov
push
mov
sahf
or
dec
shlb
dec
loop
cmpsl
in
mov
mov
stos
add
push
and
mov
scas
cmp
jmp
xor
shlb
push
sub
dec
xchg
xchg
mov
and
adc
out
fs
cmp
sub
xor
ds
movsl
jecxz
dec
and
push
imul
dec
inc
and
cmp
or
imulb
ljmp
shlb
pusha
jo
int3
sahf
mov
sarb
and
jmp
and
ja
cmpsl
mov
add
push
or
call
push
or
inc
and
or
dec
mov
xor
or
add
insb
ljmp
sub
cmpsb
subl
sbb
pusha
jnp
imul
sarl
push
mov
sub
sarb
push
insb
add
mov
das
sahf
push
sub
mov
test
mov
push
mov
mov
add
fcoml
cmp
jbe
shlb
pusha
loope
mov
jb
std
jnp
inc
jmp
push
ret
and
jle
xchg
sbb
and
mov
adc
inc
bound
and
ret
ret
pop
mov
push
cmpsb
in
push
cmp
jo
inc
push
xchg
adc
movb
inc
cmp
mov
mov
loope
sub
clc
add
mov
sub
lods
js
push
ret
or
movsl
repnz
arpl
and
mov
enter
cli
je
lret
xor
mov
lea
and
rorb
push
mov
dec
pushf
dec
xor
dec
pop
cmp
sbbl
or
scas
je
cmp
movsb
push
add
les
dec
sbb
jbe
popa
je
das
jl
mov
cmp
jbe
call
add
sahf
aam
sbb
cmp
pop
loop
icebp
scas
loope
cld
inc
push
add
sub
push
fisubrs
imul
or
push
out
sbb
jge
and
cmp
stc
dec
cmp
ja
jae
ss
jb
add
push
test
loope
sti
add
jne
mov
sub
into
push
and
inc
mov
mov
push
or
jmp
mov
in
push
dec
in
xchg
sbb
adc
repnz
xor
loope
adc
pop
test
addl
cwtl
lret
mov
fdivs
lcall
xchg
outsb
xchg
lahf
mov
cs
mov
and
inc
dec
xor
aam
cs
icebp
jmp
lods
int3
in
ret
mov
xor
mov
sub
add
mov
enter
stos
dec
inc
jo
cmp
fcom
sub
outsb
add
pop
mov
mov
cmpsb
jnp
mov
or
sbb
cmp
mov
mov
dec
mov
xorb
jmp
icebp
adc
nop
nop
sub
ret
ds
movzbl
pop
cwtl
xor
mov
add
pop
and
add
pop
cmp
addl
mov
mov
or
xor
mov
add
add
imul
cmc
pop
shll
mov
cmp
je
loop
mov
rorb
in
pushl
mov
or
push
inc
cmp
jl
cmp
add
pop
add
ja
sarb
shlb
lods
and
add
test
daa
lock
adc
sbb
push
pusha
push
outsb
mov
popf
out
or
jle
push
add
icebp
sub
xor
flds
fcomps
push
das
add
pushf
push
pop
mov
sub
push
jl
mov
lock
sbb
inc
mov
adcb
pushf
fs
nop
dec
pushf
xchg
test
movsb
aaa
pop
mov
or
cmp
add
add
in
inc
mov
adc
fdivrl
inc
les
lahf
cmp
mov
jmp
fstpt
dec
fldcw
jge
sub
comiss
push
xor
fadds
data16
inc
cwtl
scas
push
add
push
pop
repnz
xor
fstpl
mov
mov
mov
mov
push
inc
stos
rclb
shl
and
add
mov
lock
mov
shr
shl
add
and
shl
xor
mov
mov
lock
movsw
movsb
mov
inc
dec
inc
mov
loopne
jp
jge
test
push
inc
pushf
out
aas
add
xchg
loopne
lea
add
sub
adc
addr16
sub
xchg
xor
xchg
popl
mov
sarb
inc
loope
jne
insb
push
adc
push
dec
ja
sub
lds
outsb
dec
ret
mov
inc
xor
cli
call
mov
pavgw
dec
clc
add
xor
sbb
push
adc
imul
sub
mov
pop
jmp
mov
lcall
xor
or
xchg
inc
fwait
les
xchg
mov
pop
lock
push
xor
xor
jle
push
xchg
loope
xor
cmp
stos
xlat
ret
lods
insb
mov
jo
mov
xor
es
cmp
fstps
and
js
add
sub
mov
les
lea
and
or
or
xor
mov
icebp
pusha
mov
in
rorb
add
inc
push
and
inc
xor
imul
and
jg
add
xchg
or
cli
in
dec
mov
mov
ficoms
icebp
ret
xchg
rcll
adc
popa
mov
icebp
pop
add
xchg
std
mov
xchg
jne
pop
cmp
fsubl
mov
mov
mov
mov
add
mov
call
rolb
xor
int
lods
xor
push
fimull
int3
hlt
xchg
mov
add
jle
adc
push
fdivrs
insl
adc
push
jbe
ss
in
fistpll
jmp
push
js
jbe
mov
jmp
das
fidivrl
int
fdivrl
add
cmp
movsl
pop
sarb
add
sub
adc
adc
out
sbb
scas
dec
stos
shrb
cmp
in
mov
pusha
mov
int3
pop
push
ret
adc
es
jecxz
fidivl
cmp
loopne
pop
dec
pop
cmp
push
fldt
and
or
mov
and
pop
jmp
stc
jbe
sbb
in
fldt
loop
cmc
lahf
mul
mov
mov
inc
mov
sbb
push
pop
lret
add
xchg
xor
sbb
pusha
pop
ss
dec
jnp
pushw
sbb
mov
popa
inc
fidivrl
adc
add
pop
pop
ret
mov
or
pop
jmp
addb
adc
push
push
mov
nop
mov
sarl
xor
rolb
pop
add
cli
cmp
mov
ss
sbb
sub
pop
or
sbb
xchg
push
adc
mov
pop
sbb
mov
repnz
mov
mov
or
adc
notb
sub
push
cmpsb
ss
xchg
lods
push
xor
or
adc
jbe
jge
mov
adc
push
lds
js
inc
or
or
jmp
and
sub
and
push
cli
test
pop
adc
jne
jecxz
push
gs
mov
mov
fs
or
inc
mov
dec
out
lock
xor
inc
clc
adc
pop
sub
enter
sub
fwait
jmp
push
sub
adc
mov
loope
fstpt
cmp
mov
mov
lcall
pop
int3
jne
push
sbb
or
xor
loopne
je
sbb
enter
push
in
loopne
mov
dec
pop
jp
sbb
sub
mov
cld
pop
icebp
cmpl
into
push
clc
sub
sbb
pop
push
out
cmp
mov
pop
push
sbb
mov
rcll
push
sbb
lods
xchg
and
cmp
xor
xor
adc
fsubr
sub
pop
sbb
incb
cltd
push
and
lods
test
sbb
out
out
xchg
xchg
add
adc
cmp
push
add
inc
imul
mov
sub
sbb
out
jae
adc
cmp
jle
adc
add
push
sbb
inc
cmpsb
icebp
xor
data16
leave
aam
inc
cmp
in
insb
add
mov
test
hlt
rcrl
dec
clc
push
jb
cltd
inc
add
pop
xchg
xor
inc
sub
mov
gs
xor
cmp
and
or
adc
pop
cmp
in
xchg
shlb
push
arpl
mov
jb
insb
mov
or
push
push
insb
xor
adc
test
sbb
xchg
pop
rcrb
add
or
pop
cmp
mov
or
fs
sub
dec
add
cld
inc
jo
jne
addl
mov
in
cmp
shl
sbb
stos
mov
sahf
adc
mov
fdivl
add
dec
fwait
xor
jle
out
sub
iret
push
add
add
add
mov
mov
pop
test
or
sub
cli
sbb
cmp
je
xchg
sub
adc
testb
je
cmp
mov
and
sbb
jbe
rol
add
add
imul
cltd
rcr
add
mov
sub
ror
pop
pop
rcr
popa
cmp
sbb
imul
push
sahf
or
cmp
sbb
cmp
pop
mov
push
add
loopne
dec
ss
loopne
jae
rclb
dec
and
icebp
jmp
cld
mov
mov
or
adcl
sti
push
mov
jne
jg
add
inc
and
dec
hlt
js,pt
nop
jg
scas
sub
pop
add
cmp
insl
push
jo
arpl
add
mov
sbb
push
in
jg
inc
hlt
pop
insl
cld
push
push
push
mov
xchg
or
inc
mov
add
pusha
mov
pusha
xchg
jno
push
push
push
and
dec
cld
iret
fdivs
push
push
sbb
je
jne
lcall
lcall
xlat
pop
sarl
sarl
sbb
add
mov
int3
lock
rorl
sbb
mov
cmp
sbb
or
lret
inc
repnz
roll
add
add
leave
jmp
lea
push
js
jne
sbb
in
dec
rcll
adc
inc
mov
mov
ss
jne
les
xor
std
inc
adc
stc
fbld
adc
jmp
incb
dec
xor
std
sbb
or
dec
pop
pop
push
cld
mov
and
inc
icebp
or
adc
call
out
std
pusha
lods
outsb
pushf
cwtl
nop
inc
fdivl
aad
and
xor
cmp
pop
ss
cmp
push
faddl
cmp
push
add
jbe
pop
dec
jp
jne
cmp
lahf
out
je
jne
push
test
pop
push
adc
sbb
ss
sbb
mov
test
shrl
mov
clc
mov
xor
rolb
out
lods
cmp
hlt
jmp
push
mov
push
add
js
add
dec
lock
cmp
clc
and
xor
sbb
pushl
insl
add
hlt
xchg
incb
rolb
adcb
loopne
sub
sbb
xor
or
mov
mov
je
pop
ret
addb
push
and
push
loope
andb
push
pop
or
sbb
or
lret
or
mov
je
inc
out
out
xlat
or
inc
cmc
cs
add
dec
xchg
jnp
mov
add
xor
imul
add
dec
rorl
stc
lds
lea
adc
push
lret
xchg
fcmovu
lods
add
mov
xor
dec
push
cltd
cmp
adcb
dec
sub
cld
sub
rolb
mov
add
pusha
jo
mov
bound
pop
cmp
xor
inc
or
test
xor
pop
fimuls
cmp
add
shrl
adc
in
mov
mov
push
cmpl
push
ljmp
fadd
jmp
xchg
fstps
stc
loope
xor
addl
jae
xor
sub
aad
imul
add
xchg
lcall
or
test
inc
xor
icebp
loop
and
cmp
xchg
pushf
das
bound
test
pop
cmp
cmp
or
jns
dec
aad
test
ds
pop
stos
ud2
push
subl
mov
push
or
pop
pop
mov
adc
or
cwtl
inc
cmp
jne
insl
jmp
aas
pop
cmp
loop
popa
pop
or
in
jle
adc
dec
dec
pop
dec
aad
and
in
pop
ficompl
pop
movl
ja
in
jmp
xlat
scas
addb
push
push
mov
push
inc
add
jnp
cmp
push
cs
pop
jnp
xchg
cwtl
push
aaa
add
inc
cmp
mov
je
xor
adc
popa
test
push
stos
pop
lods
jnp
cltd
testl
sub
xor
sub
jecxz
repz
mov
push
ds
jae
aas
adc
lods
xor
sbb
pop
sbbl
xchg
gs
sub
push
sbb
je
sar
xor
repz
pop
mov
cmp
xorb
jns
sbb
sti
test
and
dec
push
inc
sahf
lds
mov
pop
mov
ret
adc
enter
fidivl
fidivs
sbb
shl
add
mov
xchg
xchg
xchg
jnp
sbbb
pop
gs
iret
inc
and
inc
push
out
jb
or
das
jmp
aaa
add
mov
adc
pop
lock
mov
inc
dec
loope
ret
sub
sub
pusha
movsb
mov
cmpsl
cmpsb
jecxz
dec
jbe
rolb
or
mov
push
and
lock
jo
mov
inc
or
or
jp
jbe
cld
mov
adc
push
add
ret
lds
push
cmp
in
pop
clc
lods
xor
das
pusha
lahf
dec
daa
inc
shll
xchg
loope
lahf
or
cmpl
pushf
pop
adc
jge
jp
adc
loopne
ja
insb
xchg
orb
dec
jo
daa
imul
add
cld
cmp
push
cli
das
cmp
mov
add
and
test
or
jne
fisubrs
xchg
into
mov
xchg
jb
in
push
inc
movsb
or
dec
pusha
add
jle
or
pusha
addb
xor
dec
adc
popa
insb
sbb
mov
movsl
or
daa
push
movsb
sbb
je
jecxz
sbb
jmp
or
push
dec
sub
dec
xchg
out
pop
jns
fwait
push
int3
or
dec
sbb
mov
outsl
out
cvtpi2ps
push
adc
pop
sub
pop
lods
test
push
and
icebp
xor
icebp
jnp
pop
fnstsw
mov
inc
cmp
mov
sub
mov
and
pushf
es
push
mov
dec
inc
pop
pop
and
pop
mov
gs
sub
pop
dec
mov
leave
test
jl,pt
rolb
imul
inc
sub
and
pop
fadd
aam
and
jo
inc
mov
dec
les
sbb
cmp
pop
dec
out
mov
fdivrl
inc
sub
ds
sub
add
dec
push
aaa
jne
jb
inc
push
pop
in
pop
loop
lahf
pushf
push
jge
cmp
push
push
push
jge
loope
mov
jmp
nop
cltd
xchg
xchg
insl
pop
cltd
adc
and
rorb
jne,pn
cmp
les
push
inc
daa
push
xchg
psrlw
and
popa
inc
sarl
jne
xlat
bound
jno
sarb
xor
dec
ja
adc
orl
sbb
mov
jmp
adc
lea
sub
xor
lods
dec
mov
int
jecxz
faddl
shll
or
jle
rorl
mov
test
add
lahf
cld
inc
enter
add
cltd
stos
or
mov
pop
testl
jle
rcrb
js
lret
test
dec
add
bound
push
jne
push
mov
adc
mov
cmp
rolb
add
xor
pop
xlat
sub
and
cmp
pusha
jne
jp
mov
and
fwait
pop
push
ss
jg
dec
test
pusha
jmp
movq
movaps
das
mov
out
clc
jae
xor
jle
xor
cli
rclb
or
ror
test
or
jge
repz
or
jg
clc
fldt
es
xchg
ret
adc
jnp
mov
ret
xor
fiaddl
aam
pop
je
add
adc
push
stos
adc
or
out
pop
add
jnp
roll
add
mov
addsd
int
add
sbb
jnp
push
dec
sbb
subl
or
push
dec
sbb
inc
and
jae
ja
mov
icebp
lret
cwtl
adc
addl
push
mov
mov
xchg
adc
cmp
xor
aam
and
xor
push
ret
pop
or
ret
jge
mov
test
test
leave
sub
in
add
xorl
inc
or
and
jl
cltd
mov
add
adc
daa
mov
movsl
pop
and
push
or
fisttps
mov
pop
test
push
cmpsb
ja
jo
dec
mov
imulb
je
adc
push
and
pop
adc
xchg
test
test
mov
inc
inc
mov
push
mov
cmp
lcall
jmp
mov
mov
cmp
jne
push
and
add
push
or
cmp
or
and
xchg
xor
adc
loop
xorl
in
shll
adc
mov
icebp
loope
cmpsl
sbb
call
sbb
or
popf
mov
nop
push
hlt
or
cmpsl
xchg
dec
lock
mov
sub
pop
movsb
rcll
fcomi
arpl
and
das
push
in
pop
cmp
popa
xchg
jmp
and
jae
ret
cmpl
pop
add
push
clc
leave
mov
aas
mov
test
adc
fisttps
adc
jne
inc
cmp
push
xor
add
mov
xchg
mov
and
inc
inc
in
ret
ds
push
adc
add
and
inc
jmp
mov
and
ucomiss
hlt
xchg
movsb
pop
inc
inc
cmp
cmp
test
pop
sub
dec
push
rolb
cmc
xchg
cmp
or
dec
adc
xchg
adc
cmp
lret
add
adc
es
or
loopne
xor
xchg
sub
roll
mov
pop
mov
cs
and
test
pop
adc
cmp
cmp
addr16
mov
rcrb
faddl
aad
mov
pop
jg
cmp
ret
mov
shl
fiadds
or
dec
leave
sbb
or
or
inc
pop
add
dec
cmp
mov
mov
scas
jmp
push
rol
inc
inc
cmp
jge
mov
cwtl
sbb
dec
xchg
jg
jmp
test
leave
mov
mov
clc
pop
xor
sahf
sbb
xor
std
add
movl
fildl
scas
enter
imul
push
aad
sub
inc
or
pop
inc
or
pop
jo
je
add
ja
loopne
sbb
add
aaa
mov
ret
mov
movsb
cmc
and
mov
and
cld
leave
inc
and
adc
jne
nop
in
adc
xchg
mov
mov
push
dec
mov
gs
inc
pusha
adc
mov
push
addr16
pop
or
pop
jne
jmp
cli
or
cmp
ja
mov
pop
call
movb
ret
or
stc
fdivs
cli
or
add
jmp
or
mov
inc
outsl
ret
fidivl
sbb
or
cmp
add
jmp
mov
inc
cwtl
js
dec
mov
mov
dec
dec
mov
inc
insb
jne
jo
repnz
ret
adc
dec
push
mov
or
cld
or
add
cs
or
xchg
or
imul
sbb
or
pop
cmp
call
adc
jb
pushf
adc
add
jne
jnp
inc
outsb
mov
sub
faddl
fidivrs
loopne
cmp
jne
mov
push
cmp
jne
sahf
out
imul
call
push
lcall
divl
ret
adc
push
dec
jmp
adc
sahf
lahf
jmp
std
std
jmp
cld
loopne
cltd
jecxz
ret
pmaxub
bound
inc
pop
inc
jb
or
cmc
cmp
push
movb
inc
push
dec
xor
hlt
or
mov
mov
jle
stc
arpl
xchg
shl
or
xchg
push
cmp
add
add
sbb
or
mov
adc
or
add
sbb
push
jg
or
adc
nop
or
mov
push
push
xchg
add
sbb
jo
and
sub
pop
or
jge
push
fs
pop
lea
fs
cld
enter
add
or
adc
into
or
xlat
jg
pop
push
or
jg
add
mov
mov
sahf
clc
test
dec
sbb
loopne
pop
push
fwait
xchg
push
shlb
or
loopne
and
dec
mov
repz
aad
inc
fcoml
and
sub
inc
push
push
pop
div
mov
cmpsl
mov
jb
sbb
dec
or
popa
nop
dec
je
inc
sub
clc
and
or
mov
andl
adc
push
ret
or
mov
lock
cmp
mov
loop
sub
andb
push
jle
inc
inc
popa
gs
add
adc
add
add
loope
pop
inc
pop
sbb
iret
jb
gs
outsl
xor
cmp
ret
and
sbb
test
loope
add
rolb
sub
iret
mov
leave
sbb
fstl
mov
add
movsl
outsb
testb
jg
lods
push
mov
inc
sbb
sub
xlat
pop
sbb
pushf
les
les
jmp
xchg
xor
das
jne
addb
pop
inc
jmp
cmp
jne
inc
mov
sbb
jmp
adc
jne
sub
mov
sti
add
test
and
cmp
push
xor
dec
or
les
pop
and
pop
and
adc
insb
adc
pop
jne
dec
and
fwait
add
add
lds
clc
sar
adc
lret
or
test
std
scas
jb
sbb
lret
sub
jmp
test
mov
sub
fcomi
popa
cmp
ja,pn
xor
add
cmp
jae
push
aaa
loopne
daa
movsb
jp
sbb
aad
ret
and
dec
test
insb
jne
or
je
scas
push
in
inc
negb
imul
sbb
flds
mov
nop
test
jne
test
jne
push
andl
or
or
sub
aam
sub
jbe
inc
mulb
jne
addb
mov
mov
bound
pop
clc
add
into
mov
mull
cmpsl
das
in
fcom
pop
test
orl
mov
pop
aaa
or
mov
add
sub
cmp
jmp
push
mov
punpcklwd
popa
movsb
rolb
popa
push
sub
sub
mov
inc
or
cmp
enter
push
data16
jge
stos
mov
push
mov
pop
call
dec
or
adc
jmp
jno
jbe
cmpsb
sbb
add
xchg
fisubrl
iret
data16
jne
idivb
mov
xchg
cs
pop
push
inc
rcrb
sbb
or
xchg
ds
rcrb
mov
popf
lahf
test
adc
in
xor
sbb
cmp
incb
lcall
mov
mov
mov
pop
add
push
mov
push
mov
add
loope
jmp
pop
push
mov
es
rcr
xor
push
repnz
push
mov
xchg
add
mov
enter
mov
cmp
inc
inc
jno
lock
lods
mov
push
dec
push
jo
add
adc
inc
pop
adc
or
mov
xor
xor
test
aam
add
add
adc
andb
pop
or
cmpsl
loope
push
enter
add
movsl
push
jae
fwait
mov
addb
dec
adc
add
xchg
outsb
les
or
sbb
jecxz
lock
and
or
adc
fidivs
sub
clc
cmpsb
and
ret
testb
in
jmp
push
add
loopne
mov
in
pushl
cmp
jb
lea
push
adc
push
pop
dec
ss
dec
inc
in
adc
ss
cmp
addb
mov
sub
push
inc
es
dec
or
incb
mov
push
mov
or
adc
ja
add
push
or
push
inc
insb
sbb
popa
jo
and
push
add
das
adc
push
pop
jmp
pop
inc
cmp
mov
outsl
test
or
sbb
dec
shlb
sbb
and
pop
lcall
xchg
pavgw
out
mov
sub
das
popa
subl
xchg
and
push
sub
sbb
xchg
add
aad
mov
add
mov
mov
js
push
or
loope
dec
and
sub
adc
mov
movb
adc
stos
add
leave
sub
iret
mov
inc
mov
bound
pop
cmp
cmpsl
pop
sbb
mov
push
test
adc
or
stc
les
push
pop
ss
pop
lahf
sbb
adc
xor
fldenv
scas
lods
dec
shlb
push
test
cmpsl
adc
sub
and
ja
ficomps
cltd
movsl
mov
rorl
mov
xchg
dec
rcll
push
std
xor
sbb
cmp
aad
push
popf
and
ret
repz
int3
push
jge
pop
mov
or
lock
inc
inc
cpuid
lock
add
cmovp
jl
pop
adc
or
in
outsb
cmpl
shl
sbb
pop
negl
mov
fcompl
repz
ret
push
or
xchg
mov
inc
cmpl
inc
sahf
and
fidivs
pop
je
push
mov
pushf
mov
cmpb
daa
push
fdivr
lods
adc
insb
fnstcw
and
dec
sarb
sbb
mov
mov
pusha
pop
mov
and
mov
or
fdivrl
loopne
out
add
cmp
jb
xor
in
pop
cmc
in
std
sbb
ss
jp
and
xlat
test
sub
pop
scas
add
push
cmpsb
push
mov
jmp
push
xor
clc
pop
hlt
mov
push
xor
mov
movsl
in
je
add
rcll
iret
or
sbb
adc
cmp
mov
mov
sbb
test
sbb
rorb
insb
or
int
imul
mov
cli
ret
push
leave
cltd
xchg
daa
push
inc
mov
fistpl
sub
pusha
xor
add
and
bound
and
cmpsb
cwtl
add
xchg
clc
xor
cli
add
pop
jne
mov
push
jne
jbe
inc
jne
mov
sbb
hlt
je
mov
jbe
test
add
adc
mov
shl
in
mov
sbb
mov
and
xor
adc
mov
rcrb
pop
and
jl
dec
icebp
mov
mov
mov
lret
pop
mov
or
lcall
pop
push
inc
mov
push
ds
test
add
push
push
insl
sbb
sub
inc
rol
ficompl
cmp
dec
call
or
add
or
add
jl
leave
lcall
inc
in
lret
mov
adc
adc
mov
cmpl
xchg
xchg
enter
imul
or
cwtl
xchg
inc
inc
dec
mov
push
push
push
pop
jle
mov
jl
mov
add
sub
decb
and
pop
sbb
repz
imul
pop
cmp
inc
dec
add
repz
daa
add
sbb
sbb
dec
cmpsl
dec
add
add
jle
pop
enter
add
add
inc
add
push
nop
push
xchg
pop
push
pop
movsl
test
or
mov
iret
or
dec
or
enter
sub
or
mov
pop
or
cs
in
loop
or
or
in
repnz
in
cmp
push
push
nop
adcl
mov
pop
mov
adc
pusha
testb
adc
xchg
adc
jns
movntq
adc
jns
cmpsb
bnd
adc
lcall
adc
mov
push
push
push
inc
enter
pop
pop
xor
sbb
lcall
sbb
sbb
iret
in
add
sbb
jns
sbb
sbb
sbb
push
sbb
je
pop
sbb
in
ffree
dec
jge
sbb
add
push
das
nop
out
inc
push
pop
pop
jne
pop
and
incl
ret
sub
cmp
jae
add
add
xchg
mov
bound
fisttpll
incl
das
jl
push
in
push
in
jno
repnz
sub
out
pop
jns
ret
adc
aad
xor
mov
or
fwait
out
das
or
push
push
jns
aaa
add
jge
nop
adc
dec
dec
cwtl
jmp
enter
ljmp
sbb
ss
push
jns
in
in
in
cltd
cmpb
in
pop
enter
out
out
jge
and
and
sbb
pop
add
movsb
mov
nop
addr16
icebp
icebp
pslld
jns
repnz
std
sub
leave
std
hlt
cmpb
pusha
hlt
fwait
sbb
addr16
cmc
cmc
inc
jg
add
mov
negb
inc
enter
idivl
std
clc
cmp
xor
clc
cltd
adc
inc
stc
lock
cli
xor
cmp
iret
sti
dec
in
jb
sti
stos
cld
cld
cld
adc
enter
push
movaps
dec
rorb
jns
sbb
adc
sbb
in
fisubrl
imul
stos
lahf
push
loop
jbe
shll
aad
cmpsb
cmp
es
out
repnz
std
sti
in
in
mov
fdiv
or
xchg
stos
inc
mov
xchg
inc
xchg
sti
out
out
inc
push
fsub
cltd
outsb
call
dec
sti
sub
imul
jmp
jne
rolb
cltd
in
repnz
add
sbb
pop
sbb
add
movsb
out
out
cltd
push
mov
adc
lock
cli
jb
pusha
leave
push
cli
sbb
nop
cmpsb
repz
sarl
push
stc
les
scas
dec
push
cmp
div
negl
jno
sbb
fwait
xor
add
stc
out
clc
imul
clc
sti
sti
aaa
jb
push
sti
cltd
mov
push
nop
cld
orl
jno
mov
and
sub
adcb
or
les
rcr
mul
pop
pop
repnz
imull
bound
mul
sbb
xor
cltd
out
and
pop
inc
mull
imull
sti
imul
cmp
test
inc
repnz
mov
xor
xchg
negb
out
out
jno
and
and
adc
xchg
pop
add
sbb
repnz
pop
lret
and
and
cmc
pop
pop
lcall
negb
cmpb
and
pop
add
clc
clc
mov
jmp
jecxz
stc
popa
cmp
mov
and
pop
rcll
hlt
sbb
das
pushw
data16
test
idivl
jo
rolb
pusha
adc
xor
loope
inc
cmc
pop
loope
push
inc
repnz
loop
scas
repz
mov
mov
test
dec
push
in
repz
xlat
jb
repz
mov
mov
repnz
jmp
in
mov
xchg
repnz
jo
sbb
dec
in
in
cmc
xlat
mov
adc
repnz
addl
loope
sbb
mov
inc
repnz
divb
icebp
pop
repnz
push
icebp
movsl
test
icebp
cmc
cmc
and
les
pop
pop
jb
lock
lock
pop
add
sbb
mov
jne
das
mov
xorl
xlat
and
mov
and
pop
and
test
add
dec
lret
test
sub
out
cmp
rcrb
ret
cmovno
enter
push
add
add
fmuls
add
push
jnp
xor
or
mov
dec
add
xchg
mov
sahf
and
jmp
sub
adc
out
movsl
and
jo
push
mov
lcall
push
loope
in
inc
repz
dec
push
jb
push
pop
jg
xor
int
loop
ret
inc
out
dec
push
insb
ds
repz
pusha
les
inc
cmp
mov
mov
rorl
adc
repz
mov
xchg
xchg
mov
jl
mov
sbb
mov
inc
leave
inc
dec
dec
and
mov
jl
out
add
pop
icebp
decl
jle
rolb
xchg
cmpl
jb
test
mov
inc
cmp
je
int
in
push
loope
es
adc
std
xor
push
adc
add
cmpsb
rcrl
rorb
in
pop
xor
mov
xchg
lock
cs
add
inc
test
push
xlat
shlb
cmp
je
push
inc
loope
push
loopne
leave
or
add
dec
add
or
adc
or
pusha
add
jp
daa
mov
pop
jo
fbld
test
mov
testb
repz
xchg
test
sub
lret
jb
xor
fstl
xchg
sbb
popf
fs
and
inc
add
stos
and
dec
lcall
mov
push
sbbl
push
adc
jl
push
lods
push
call
lock
fld
or
mov
add
sbb
fldl
loope
mov
ljmp
loop
mull
add
push
rep
mov
dec
ljmp
pop
and
in
in
je
and
jnp
cmp
fmuls
add
aam
add
mov
inc
out
mov
adc
mov
and
jno
in
lcall
cld
add
inc
enter
cmc
arpl
insl
stc
add
fcompl
jne
push
inc
jb
rolb
mov
pop
push
jecxz
shrb
pop
inc
inc
inc
inc
adc
add
cmp
inc
cmpl
jbe
lods
pop
inc
push
inc
and
add
ljmp
mov
xor
or
or
jo
clc
xchg
repz
fcoms
je
pop
roll
sub
pop
mov
inc
inc
pop
cmp
enter
mov
rcrl
push
inc
add
push
cmp
mov
push
arpl
sbb
jl
cmp
pop
xor
mov
outsb
pop
cmovno
sbb
xor
mov
inc
inc
add
sbb
fimull
inc
fs
xchg
add
repz
sub
adc
aaa
xor
mov
mov
sub
adc
xchg
in
inc
shlb
push
stc
aad
mov
lcall
adc
lods
push
ss
mov
or
cmp
cmp
or
dec
popa
out
loopne
outsb
out
jns
mov
dec
mov
pop
xor
stos
adc
cmp
in
lcall
inc
in
ja
and
mov
imul
adc
pop
add
adc
out
inc
jl
mov
mov
add
popf
popa
leave
in
adc
fisubrs
loopne
inc
add
push
sub
lret
clc
nop
out
mov
add
loope
cmp
mov
adc
jnp
jmp
stos
add
testb
cmp
sahf
repz
pop
pusha
add
inc
cwtl
add
fsubp
or
xchg
mov
test
push
icebp
adc
test
adc
add
mov
iret
cmp
mov
xor
das
ja
push
jmp
notb
mov
or
add
xor
pop
or
andb
jmp
and
jg
int3
mov
dec
pop
pop
mov
test
arpl
dec
inc
or
rep
xchg
add
push
push
inc
cmpsb
sbb
or
or
cltd
fldt
lret
xor
fs
call
push
enter
xor
pop
je
inc
add
add
pop
shr
scas
adc
cwtl
das
in
lea
dec
add
movl
cmpsb
inc
add
ficomps
nop
dec
add
xor
cmp
repz
sub
sbb
or
jns
decl
inc
in
call
sahf
in
lock
hlt
clc
je
out
clc
cld
cmp
insb
add
add
fldenv
jmp
insb
push
js
and
test
lcall
jbe
or
inc
and
and
fcompl
lea
jl
cld
or
xchg
scas
loopne
std
cld
out
lock
neg
adc
mov
xchg
daa
stc
sub
mov
pop
nop
add
sub
push
fldcw
push
mov
add
sahf
inc
push
in
xchg
lret
push
add
sub
addr16
add
es
ljmp
sahf
testl
int3
jns
pop
lahf
aam
push
aaa
sbb
sbb
jns
out
adc
adc
sahf
out
sahf
or
or
add
mov
inc
inc
inc
add
push
cmpsb
and
aaa
push
add
pop
lret
js
add
cmpl
lea
adc
push
fmull
mov
jg
cmp
decl
jne,pn
pop
pop
fwait
push
ja
shl
push
clc
outsl
aaa
cmp
cmpl
aaa
jbe
push
cltd
pop
idiv
mov
push
pusha
or
add
dec
push
mov
aaa
dec
mov
mov
xor
push
dec
clc
aaa
outsb
bnd
cmp
jae
dec
pop
cmpsl
jno
call
jbe
dec
pop
xchg
js
adc
dec
add
pop
push
and
mov
pop
sub
adc
mov
lods
cmp
mov
pop
shrl
mov
std
test
dec
sbb
add
imulb
adc
in
dec
mov
sbb
dec
dec
je
push
push
pop
push
sbb
insl
fwait
insb
loopne
cmpb
negl
je
pop
insb
adc
and
imul
push
mov
pop
je
mov
inc
dec
mov
cmp
cmp
outsl
or
inc
add
inc
mov
mov
push
pop
xor
xor
clc
push
push
pop
add
jae
lret
pop
call
test
xor
adc
push
sbb
pop
jo
sbb
xchg
mov
jecxz
sbb
jb
pop
cmp
clc
sbb
ja
insl
or
push
aas
jge
pop
insl
add
pop
idiv
sbb
inc
xor
xchg
inc
out
cmp
sbb
jmp
inc
call
cmp
cwtl
ss
mov
sahf
jle
pop
imul
and
inc
hlt
adc
fs
jmp
jl
mov
or
insl
in
call
dec
lds
or
je
insb
sub
sbb
jecxz
repnz
mov
jae
or
je
mov
mov
inc
pop
incb
inc
jns
adc
cmp
mov
or
mov
sti
cmp
pop
sub
loopne
jp
adc
rolb
les
sub
movsb
loop
aas
into
cmp
push
mov
in
push
pop
xchg
push
cmp
mov
jge
pop
je
sbb
nop
cmp
jl
fs
std
mov
xor
decl
lret
jno
mov
mov
dec
rcrl
pop
je
sti
jle
adc
jne
mov
xchg
or
push
mov
cs
lretw
or
lcall
pop
popl
call
lods
and
out
ja
push
je
or
xor
inc
mov
sub
pop
stc
pop
adc
adc
lcall
pop
inc
jmp
push
pushf
ja
sub
pop
adc
jmp
mov
inc
sbb
lds
je
mov
imul
sbb
pusha
out
addl
bound
push
jge
loop
clc
sub
js
jne
push
cld
mov
add
adc
mov
inc
adc
or
out
xor
pusha
iret
call
fmuls
push
mov
add
fwait
jbe
dec
ljmp
lcall
ja
rolb
or
orl
mov
lock
and
ficoms
jbe
jne
sub
fadds
adc
call
inc
jg
or
std
xchg
ss
or
mov
cs
lock
fisubl
mov
inc
inc
cmp
je
xchg
imul
je
stc
fs
orb
adc
add
fidivrl
mov
dec
popa
addr16
xor
mov
rclb
adc
mov
adc
mov
fdivr
push
push
mov
push
inc
sbb
add
sbb
jae
inc
dec
test
or
out
cmp
push
sti
mov
or
cmp
mov
sbb
add
xor
or
xchg
dec
push
adc
call
dec
add
add
add
push
or
jb
sbb
mov
addr16
ret
imul
sbb
imul
inc
add
fnstenv
mov
add
pop
jne
int3
dec
fwait
inc
or
add
pop
add
inc
int
mov
popa
fs
push
pop
lcall
out
push
add
frstor
sub
lods
sbb
dec
movsb
jb
jns
mov
pop
hlt
lods
add
inc
sbb
mov
adc
clc
test
shl
pop
add
add
rclb
lea
sbb
mov
pop
call
popa
dec
or
mulb
pop
sub
push
jmp
das
pop
cmpsl
add
dec
jmp
dec
sbb
dec
into
and
inc
dec
xor
and
fcoms
and
rcrb
cmp
rolb
mov
ret
in
imul
dec
es
add
mov
lds
imul
lock
shl
sbb
sbb
nop
mov
sbb
jge
bound
and
cmp
pop
push
mov
cmp
inc
inc
pop
mov
sbb
mov
xchg
mov
mov
cwtl
ret
mov
add
mov
inc
push
jmp
cmp
call
ja
or
inc
inc
dec
or
pop
pop
mov
pop
mov
or
or
imul
movsb
cltd
pop
cmpsb
jne
imul
lock
lret
les
pop
sub
pop
sarl
inc
jmp
aas
popa
mov
jb
movsb
shlb
push
and
lahf
jmp
add
daa
mov
imul
add
and
inc
in
add
pop
cmc
mov
push
ljmp
pop
fldz
test
mov
adc
or
scas
cmpsb
sub
adc
addr16
push
in
add
rep
divb
xor
cmpsb
pop
mov
ret
pop
xchg
decb
add
add
adc
xchg
es
add
cmp
fcmovnu
mov
push
lea
mov
shrb
subl
arpl
jmp
pop
arpl
xchg
push
mov
push
fs
sbb
shll
pop
mov
pop
cli
mov
push
std
mov
loopne
sub
mov
mov
lods
or
out
rorb
ljmp
into
sub
in
or
roll
daa
pop
pop
dec
into
dec
mov
fidivl
or
aas
sub
jbe
inc
cmp
jge
loopne
jmp
mov
or
xor
andl
mov
inc
cwtl
bound
shll
sbb
in
loopne
xor
call
add
mov
into
gs
clc
ret
sbb
in
icebp
xor
popf
cmpsb
mov
fistps
int3
or
pop
xchg
xor
push
aam
or
xor
cmc
push
aam
push
cmp
xor
enter
fucomi
in
push
mov
jmp
mov
xor
cltd
mov
or
pop
sahf
std
into
inc
add
data16
push
inc
and
test
push
add
sbb
adc
adc
imul
popa
jbe
in
mov
push
push
sbb
xor
jo
arpl
imul
cmp
lea
imul
jmp
sub
out
into
inc
imul
rol
adc
lock
fsub
jge
cmp
loopne
or
nop
adc
push
outsl
or
nop
inc
dec
add
lds
pop
or
push
fs
xorl
fstpt
add
andb
mov
sub
xor
push
jp
dec
xchg
jle
or
inc
cmpsl
int
sub
dec
aam
jne
pop
dec
sub
into
jne
mov
lcall
xchg
cmp
xchg
shr
pop
inc
sbb
pop
xor
pop
clc
fsubrs
sub
adc
call
rcl
lock
fadds
xchg
xor
mov
call
sbb
push
call
sub
xor
or
incl
fldcw
fisubrs
fs
jo
lea
adc
dec
inc
es
push
test
popf
gs
mov
xchg
add
fisttpll
mov
push
ret
inc
xorl
xchg
nop
add
xchg
jecxz
insb
push
rcll
shrb
loopne
cld
lds
add
call
sbb
pop
call
add
and
popf
add
xor
inc
call
dec
test
pop
jnp
jmp
je
add
xor
push
dec
or
lods
pop
jae
pop
jo
inc
mov
cmp
test
fs
mov
js
mov
sti
sbbb
insl
cmpsl
push
lea
dec
xchg
rol
xchg
pop
es
test
cwtl
xlat
add
mov
aas
or
jg
pop
fsubs
into
in
xchg
lret
add
and
adc
out
orb
leave
ret
and
cmpl
adc
sub
rcll
pop
nop
cwtl
jnp
sbb
das
and
aam
and
sbb
ficompl
lcall
repnz
in
xor
adc
cmp
dec
or
lock
mov
out
jbe
jp
adc
loope
jecxz
push
pop
sub
lods
in
sub
or
lods
lods
xor
mov
mov
and
adc
dec
jo
pushf
popl
mov
cmp
pop
test
out
fimuls
cli
push
movl
cmp
sbb
xor
shlb
andl
mov
ss
mov
orb
sbb
cwtl
cmp
dec
add
or
mov
sub
mov
pusha
insl
adcl
movsb
je
je
pop
inc
jne
xchg
orb
adc
adc
mov
adc
dec
jmp
push
sbb
bound
rcll
lahf
push
jle
shl
or
mov
add
pop
sub
mov
add
dec
jne
lea
out
mov
fists
nop
pop
push
negb
ret
loopne
pop
inc
ret
in
mov
xchg
int3
sti
mov
insl
popa
add
ss
push
movb
popl
popf
out
and
add
ja
sub
inc
mov
or
mov
sbb
int
subl
cld
fidivrl
and
fstl
push
push
aaa
xchg
mov
sub
push
cmp
push
push
fidivl
adc
imull
and
int
jecxz
add
push
orb
mov
mov
and
je
and
xor
cmpsl
into
mov
sbb
roll
mov
rcrb
mov
mov
or
push
std
lahf
jbe
and
sbb
lret
add
jmp
cmp
mov
and
and
and
jmp
inc
add
je
inc
pop
ret
in
fstpl
test
fcomps
ja
mov
ret
inc
jo
jg
js
movb
inc
rclb
pushf
mov
push
push
pop
inc
rcrl
inc
call
dec
ror
sub
jo
jns
xor
cmp
jmp
push
mov
adc
push
cld
and
dec
mov
aaa
je
or
lds
outsb
mov
mov
dec
out
fldenv
add
cmp
std
jne
test
fldt
stos
lods
push
cmp
cmp
les
sarb
ret
js
ret
push
sub
or
and
in
mov
pop
cmp
pop
mov
adc
stos
push
mov
loope,pn
xchg
ja,pt
sbb
lock
out
into
std
fidivl
insb
add
imul
cs
mov
fsub
push
add
stos
jae
and
xor
inc
sbb
push
and
pushf
adc
xchg
cli
push
call
in
loope
and
lea
mov
mov
outsl
push
inc
pop
leave
inc
add
pop
mov
imul
push
lea
adc
jmp
mov
ret
push
ds
fs
adcb
std
cmp
inc
cmp
ljmp
inc
inc
jne
sti
xchg
sbbb
inc
movsb
jge
add
and
xor
jb
mov
xor
mov
xchg
cmp
mov
or
adc
mov
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
sarl
pop
hlt
ds
mov
add
divb
shlb
loop
push
inc
push
mov
or
jne
or
hlt
mov
div
mov
push
jnp
test
xor
push
dec
shll
push
and
lds
mov
fimuls
mov
dec
sbb
add
fimuls
jno
sub
cmpsl
sbb
push
test
add
inc
enter
pop
out
mov
push
sbb
or
inc
cmp
and
push
jbe
add
jne
cmp
xchg
add
shll
push
xchg
test
mov
mov
mov
lock
add
rcl
dec
loopne
or
pop
sub
jmp
xor
jge
cmp
stos
sbb
mov
xor
repz
ret
ss
push
push
push
out
arpl
cmpl
es
lret
xchg
data16
popa
enter
sti
imul
add
xlat
arpl
leave
cmpl
cmpsb
pop
push
and
pop
movl
mov
mov
push
or
fcompl
push
xorl
out
add
dec
mov
mov
sub
inc
mov
pushf
cltd
mov
jno
imul
sbb
sub
inc
xchg
int3
xchg
adc
xchg
and
cmp
mov
push
inc
sarb
sub
notb
hlt
inc
in
and
aaa
out
jle
sub
push
cmpl
lock
pushf
add
pop
cmp
adc
xchg
xchg
inc
add
sub
rclb
decl
jne
sbb
inc
xor
in
es
xchg
orb
ljmp
cmp
rorb
jmp
aaa
cmpl
push
pop
mov
jo
xor
sub
outsl
jbe
xor
push
sub
sub
fwait
sub
xor
je
push
mov
mov
fs
jnp
inc
adc
pop
in
sbb
push
mov
add
and
pop
xchg
test
ret
adc
dec
jle
sbb
jo
fs
pusha
loope
add
bound
sbb
jno
cmp
shll
jo
push
ficomps
jno
xor
push
jbe
pop
mov
mov
imul
and
shl
push
cmp
rol
pop
push
lods
add
daa
mov
movsl
mull
mov
cmp
lock
xorb
js
push
test
pusha
ss
stos
or
ds
inc
jb
test
sarb
outsl
lret
call
pop
sbb
cwtl
cmp
add
loope
xor
push
push
push
mov
mov
xor
mov
mov
lock
sub
aam
and
jge
mov
mov
pusha
adc
scas
int3
sub
int3
sbbb
movsl
and
mov
mov
insb
push
cld
push
jo
setbe
mov
pop
push
push
mov
and
movsb
xchg
push
adc
add
insb
cld
mov
jecxz
mov
fstps
shlb
outsl
mov
dec
and
sbb
addr16
test
dec
push
cmpsl
mov
cmp
xchg
lds
iret
inc
push
pop
jns
pop
sbb
xchg
cmp
or
xor
xchg
rol
jns
movsb
and
es
outsl
push
xor
shrb
lock
iret
adc
sbb
dec
and
sbbl
sbbl
cmp
int3
xchg
and
jle
inc
cwtl
data16
pop
sbb
jmp
push
dec
push
scas
dec
jbe
and
les
sti
ljmp
test
roll
dec
pop
sbb
add
xor
outsb
push
addl
and
xor
mov
mov
test
lret
pop
in
bt
jae
xchg
xchg
pushf
cmpl
xchg
push
mov
adc
pushf
cmpsb
and
daa
ficompl
mov
jno
ja
cmc
ds
int3
dec
ja
mov
out
mov
mov
data16
sbb
mov
dec
sub
iret
test
fnstenv
adc
cli
gs
xchg
mov
push
fldl
das
jo
fwait
sbb
adc
dec
jp
pop
inc
sub
andl
test
into
push
inc
lock
xchg
das
lret
jecxz
test
lret
xor
cmpsl
pop
fwait
sbb
or
fcompl
pop
pop
xchg
fcomps
int3
jns
stc
std
data16
popf
enter
cld
jns
movsl
shrb
ljmp
shrl
dec
sbb
dec
cld
adc
sbb
cmc
loopne
sub
aam
mov
mov
push
cmp
add
fcomps
sbb
mov
ret
or
lods
dec
sbb
in
pop
popa
dec
movsb
js
jmp
jge
push
ds
imul
mov
mov
aaa
lods
xchg
add
insb
or
xchg
sar
inc
and
es
mov
jae
js
adc
popa
loop
add
mov
jle
jg
jle
and
xlat
sub
push
push
js
pop
inc
pop
and
jg
jns
mov
sti
out
push
loopne
and
jns
ror
sarb
add
push
jmp
sbb
sub
pop
adc
push
mov
jnp
in
jg
nop
mov
fadds
add
pop
mov
in
xorb
sahf
out
fs
je
test
test
xchg
sbbb
ficomps
push
enter
adc
adc
jo
pop
mov
push
push
cs
push
ss
in
scas
xchg
lock
test
mov
js
or
add
outsb
pusha
stos
adc
and
and
inc
xor
dec
mov
inc
xor
insb
lret
jne
es
jns
dec
add
cmp
jge
inc
mov
add
test
sbb
jp
stc
and
push
xor
icebp
inc
loop
data16
adc
or
and
call
neg
cli
cmp
pop
idivl
jb
lea
inc
or
add
mov
sahf
hlt
mov
dec
mov
inc
daa
loop
fwait
xor
adc
inc
orb
std
push
add
sub
testl
cmc
je
std
dec
inc
sbb
pop
dec
adc
and
jno
sbb
jl
or
lret
movsb
pop
push
push
jge
add
sbb
inc
je
ret
testb
xchg
data16
or
ucomiss
jmp
adc
and
int3
lock
testl
inc
jbe
push
rclb
bound
cmp
or
mov
and
and
mov
pop
outsb
cmp
addl
cwtl
inc
and
mov
outsb
adc
mov
pop
lds
loope
mov
popa
jle
test
ja
enter
shrl
je
movl
in
sbb
fdivs
sbb
hlt
jecxz
cmp
and
mov
and
adc
fcoml
or
jl
add
xor
leave
sbb
add
daa
lock
cmp
adc
jno
icebp
dec
adcb
cmp
mov
pop
loopne
add
js
and
mov
or
fstl
dec
mov
addr16
sbb
lea
inc
cmp
pop
add
roll
cmc
dec
fcomp
pop
push
pop
aad
and
shl
inc
imul
inc
enter
sub
mov
jmp
inc
hlt
sbb
and
dec
repnz
inc
sbb
and
dec
rorb
sbb
sbb
sub
mov
clc
inc
cwtl
test
push
add
jb
inc
or
test
orl
push
movsb
lock
cwtl
subb
inc
movsl
or
push
mov
inc
mov
out
dec
sbb
xchg
cmpsb
push
mov
pop
pop
imul
add
inc
loopne
loope
and
std
mov
in
or
inc
ret
movsw
jno
cmp
adc
or
push
or
fwait
pop
lds
add
into
sbb
clc
dec
xchg
mov
push
add
xor
adc
and
cmp
andb
sub
loopne
movsl
test
push
cli
add
add
inc
pusha
mov
mov
jp
mov
and
and
repz
xchg
addb
ljmp
xchg
push
push
sbb
sbb
add
mov
movsb
mov
ret
jo
stc
into
je
pop
adc
adc
fnstcw
jl
or
pop
mov
jge
cs
fadd
fcoms
cmp
jne
pop
frstor
push
mov
fmull
test
movsl
adc
leave
movzwl
aas
sub
in
or
les
outsb
pop
sbb
dec
mov
inc
cld
pop
push
pop
mov
lea
mov
mov
jl
dec
icebp
adc
xadd
mov
sbb
sar
pop
mov
movsb
insb
xchg
mov
rcl
mov
lea
push
sbb
aam
pushf
lret
in
clc
fsubs
inc
jae
clc
lret
push
dec
or
je
or
fldcw
movsb
jnp
je
sbb
pushf
lret
and
push
pop
add
jnp
cmp
andl
nop
cli
sub
cmpsl
cmp
pop
cld
adc
out
cmp
mov
pop
or
imul
lret
or
mov
mov
ja
movsl
mov
mov
sahf
dec
enter
or
adc
movsl
hlt
hlt
stc
out
mov
in
je
or
inc
insb
je
and
sbb
mov
test
ret
insb
nop
pusha
in
sbb
sub
adc
jnp
loop
and
pop
or
xor
mov
movb
dec
xor
movsl
pop
add
out
sbb
or
imul
outsl
cmc
jne
pushf
data16
sbb
pop
xlat
inc
jge
xor
movsb
mov
test
push
mov
xchg
cmp
pop
fs
lcall
sbb
sbb
jle
int3
jnp
cmp
adc
or
add
mov
or
inc
mov
fdivr
cmp
ret
lock
mov
nop
and
push
ds
push
jae
sbb
test
in
xor
inc
call
ja
and
push
mov
ret
loope
mov
and
xchg
int3
add
xor
fmull
or
es
rorb
mov
add
cmp
adc
test
sbb
jl
insl
cmp
into
xor
sbb
negl
pop
xor
movsb
push
orb
lret
or
push
push
mov
mov
xor
mov
mov
mov
movsl
iret
or
pushl
adc
xchg
inc
add
pcmpgtb
imul
xchg
adc
mov
add
cmp
xor
add
or
je
cmp
loope
xchg
jns
push
sbb
sub
test
mov
jo
add
add
call
adc
jmp
scas
push
outsb
je
test
xchg
push
xor
jne
popa
aas
add
fsubs
fildll
test
inc
sub
je
pop
andl
adc
cmp
addb
or
jo
jecxz
push
stos
add
push
add
ret
jg
jne
mov
fbld
in
addr16
mov
jmp
cmp
jle
insl
js
dec
ja
mov
incl
push
dec
mov
bound
adc
inc
je
mov
out
call
cmp
xor
adc
cmpsb
nop
cmc
mov
clc
mov
lea
and
mov
js
mov
scas
js
jecxz
lea
stc
lcall
pop
test
or
sbb
dec
sbbb
sub
inc
dec
inc
stos
test
push
sub
mov
xorb
sub
mov
leave
std
inc
daa
add
adc
push
xchg
xchg
int3
xor
sbb
push
cmp
test
push
lret
jge
dec
aad
scas
jne
push
sbb
add
int3
adc
dec
mov
cmpsb
jmp
out
or
pop
adc
je
cltd
nop
rorb
je
adc
pop
rcrb
push
inc
fisubrl
nop
pop
fimull
mov
or
sbb
mov
lret
pop
pop
ja
aas
mov
or
jne
and
lea
fmulp
das
sbb
fs
imul
inc
je
mov
cltd
push
mov
scas
xchg
mov
stc
cmp
bswap
mov
sahf
add
mov
dec
jmp
sbbb
pop
xchg
sub
inc
cmp
icebp
stos
aas
je
xchg
popf
adc
dec
shlb
jg
movb
inc
jmp
cmovl
cli
push
mov
or
fisttps
or
push
inc
inc
xor
cmp
mov
roll
push
xor
fwait
sbb
add
push
jmp
orb
jmp
push
push
loop
test
cli
and
scas
push
sub
sub
mov
shl
push
leave
cmp
xchg
addr16
int3
cmp
fdivrl
lea
or
adc
push
jbe
dec
popa
pop
xor
push
fdivs
pusha
dec
push
fidivs
aaa
add
add
cmp
fistps
jae
push
rcll
pop
popa
jle
sbb
xchg
cmp
mov
jg
das
sbb
sbb
cmp
dec
rorl
and
and
cmp
add
push
cmp
push
das
xchg
and
adc
icebp
sti
and
movsl
daa
pop
mov
fiaddl
in
sub
movsb
cmp
adc
add
js
add
xor
push
mov
int3
mov
mov
stc
mov
push
mov
mov
pop
mov
sbb
in
push
xchg
rolb
pop
repnz
pop
mulb
sbb
inc
mov
rcrb
idivb
push
incb
pop
sbb
push
lea
aas
movsb
cmp
push
inc
sbb
sub
sub
and
mov
test
and
popa
addl
lcall
sti
dec
push
push
mov
jo
ljmp
push
rcll
or
sbb
xor
insl
js
inc
jl
push
pop
test
out
xor
add
out
or
mov
xor
pop
test
test
shl
jne
clc
jge
sub
lock
sub
in
push
sbb
jge
cmp
ss
outsb
push
ret
or
mov
lock
or
rolb
adc
test
lds
sub
adc
test
rcrb
lea
fcoms
into
adc
js
iret
adc
cwtl
movsl
sub
cmp
adc
jnp
or
or
adc
enter
sub
jb
es
insb
mov
nop
rclb
int
and
xchg
popf
cli
push
rorb
xor
sub
cld
jmp
cmp
out
jnp
mov
inc
mov
push
dec
or
dec
gs
lret
push
lea
mov
mov
test
call
adc
jg
in
dec
jne
sar
dec
cmp
jbe
push
pop
daa
lock
or
adc
fildl
mov
shr
lea
not
and
decb
jne
pop
cmc
push
out
and
adc
mov
mov
push
pop
add
mov
dec
pop
add
add
pop
and
shll
push
or
push
cmpsb
pop
sbb
mov
jecxz
jle
mov
jle
shlb
and
sti
add
fimuls
pop
cmp
mov
fimuls
and
cmp
ss
shlb
cmp
sti
pop
mov
shr
not
and
add
and
xor
dec
loopne
mov
xor
push
cmp
pop
dec
add
mov
push
or
in
and
or
nop
dec
ret
mov
int3
sarb
or
loope
ret
cmpsb
adc
mov
mov
inc
mov
adc
mov
mov
ret
inc
lret
call
jl
clc
mov
jmp
dec
adc
push
mov
or
mov
sbb
fwait
inc
xor
push
insl
or
adc
repz
enter
add
and
stos
pusha
push
sbb
aas
push
test
shl
add
scas
sti
divb
call
aas
gs
push
or
cmp
sub
add
decb
adc
pop
lret
jns
sbb
and
pushl
push
push
mov
adc
and
orl
add
mov
fildll
enter
or
hlt
dec
adc
insl
and
jle
sub
cmp
or
mov
mov
inc
xchg
mov
xor
push
imul
loopne
inc
inc
cmpsl
cwtl
outsl
push
sti
cmp
dec
ja
or
js
add
out
mov
pop
shlb
cmpb
xor
inc
adc
mov
push
xor
cmp
cs
jl
adc
inc
rcrb
orl
or
lds
and
push
mov
mov
cmpsb
add
inc
ljmp
in
rorb
pop
out
nop
int3
imul
jne
gs
mov
adc
pop
pusha
gs
notb
adc
repnz
mov
xchg
xchg
sub
call
add
lock
dec
clc
incl
test
sub
or
adc
out
xchg
inc
cld
lock
ja
sbb
call
dec
jne
je
mov
clc
add
add
or
jb
adc
fs
inc
hlt
cmp
sahf
pop
mov
mov
decl
pop
lock
nop
dec
inc
jne
or
lds
ljmp
or
sti
or
outsl
sbb
xlat
sub
pop
shrl
lcall
cmpl
add
adc
jle
mov
inc
call
push
cld
ss
sar
add
add
stc
int3
push
pop
sbb
jo
pop
mov
or
test
add
es
add
cmp
nop
dec
or
sti
add
sbb
jns
sub
add
pop
adc
movsl
adc
pop
sti
xchg
adc
xor
fnstsw
hlt
lea
add
lcall
dec
mov
pop
push
sahf
cmpsb
imul
sub
lcall
iret
jmp
add
data16
and
ljmp
imul
fidivs
add
out
insb
xor
jmp
inc
and
movsl
adc
clc
orb
jnp
cmp
inc
dec
insb
pop
xor
push
sar
dec
jp
movsb
mov
orl
inc
xchg
inc
cmp
xor
lock
cmp
cmp
or
into
je
fisttps
mov
dec
push
add
je
ja
ja
dec
fidivs
cwtl
mov
adc
fimull
push
fisttps
or
mov
bnd
adc
xchg
push
loopne
push
cmp
lods
decb
jb
pop
push
into
mov
xlat
push
cmpsl
rdmsr
cmp
mov
jp
add
xchg
mov
sbb
mov
das
add
push
add
push
lods
pop
and
inc
cmp
ja
rorb
push
out
cmpl
adc
ds
or
pusha
push
adc
stos
dec
or
out
fldcw
push
nop
cmp
scas
lock
and
or
jne
add
lods
cmp
jb
iret
add
jg
sbb
repnz
mov
lods
jnp
add
xor
mov
or
arpl
push
adc
fisttps
or
pusha
fdivrs
mov
push
into
bound
cmp
je
mov
dec
sbb
and
aas
sub
bound
jl
and
pop
iret
jne
divl
inc
shlb
dec
mov
lods
movsl
daa
mov
fidivl
out
repz
mov
cld
mov
enter
adc
outsb
adc
cmp
leave
inc
test
inc
push
pushf
mov
sub
jno
mov
jle
mov
cmpsb
loop
xchg
dec
add
pop
xchg
sbb
iret
icebp
sub
pushf
push
repnz
data16
andb
mov
jne
add
jae
in
hlt
and
jmp
jp
mov
sub
bound
dec
push
and
mov
clc
into
xor
push
lcall
adc
add
inc
mov
inc
pop
mov
xor
insb
add
lea
cmp
mov
ret
out
or
dec
das
sub
cld
or
jp
or
and
jb
mov
or
sub
popf
stos
pop
or
mov
call
mov
js
shrl
or
sbb
dec
jne
cmp
xchg
push
shrb
mov
jo
sub
lret
jo
repnz
js
jnp
cmp
sbb
pop
jb
or
xorl
imul
or
add
pop
shll
insl
and
or
adc
daa
adc
fs
sti
hlt
aas
push
bndldx
fs
add
jp
or
mov
test
fstl
imul
mov
mov
adc
and
es
xlat
lcall
add
paddb
filds
loopne
pop
inc
cmp
cmp
sub
add
push
mov
jb
or
pop
pop
test
pop
test
repnz
or
fcoms
and
xchg
push
or
push
jle
xor
jb
xor
inc
sub
nop
cmp
and
sbb
xor
lahf
lret
push
adcl
jl
push
divl
xchg
out
pop
jne
push
rcll
pop
mov
mov
mov
std
pop
rcrl
mov
les
je
mov
pop
idivb
jne
inc
js
or
push
jmp
sbb
cli
push
inc
mov
jge
dec
push
jae
mov
xchg
pop
hlt
and
es
int3
push
mov
imul
or
je
or
sbb
xor
arpl
add
mov
and
push
push
ss
push
pop
xchg
adc
mov
loop
mov
lcall
in
jg
xor
inc
xor
fnstenv
jg
xor
push
jmp
xchg
or
or
push
fidivrl
addr16
inc
jns
adc
imul
pop
mov
mov
and
mov
and
cmp
test
sbb
popf
call
lods
aam
hlt
test
push
es
xor
aad
pop
xor
xor
lds
inc
adc
mov
andb
jmp
jns
xchg
dec
in
int3
test
in
add
test
cmp
mov
dec
dec
inc
rorl
cmc
cmp
mov
test
xchg
imul
lea
sbb
test
enter
pop
push
xchg
loopne
lcall
mov
xchg
jae
scas
movsb
add
and
add
std
pop
jb
xor
mov
jmp
push
xchg
adc
xchg
insl
xor
mov
aad
outsl
sbb
xchg
arpl
stc
fsubrl
gs
pop
add
pop
insl
rorb
ss
dec
dec
sahf
or
sahf
or
sbb
nop
outsl
aad
fisubrs
hlt
pop
add
mov
mov
pushf
fistpll
insb
ret
test
lds
jp
or
pop
and
imul
jg
adc
das
inc
cmp
xor
shlb
push
cmp
in
or
push
cs
inc
push
jmp
int3
les
std
scas
movsb
push
or
dec
repz
test
shll
lea
and
in
es
nop
sbb
dec
in
jo
sub
aaa
cmc
dec
nop
sub
dec
call
enter
inc
leave
adc
mov
enter
jo
pushf
push
pushf
push
push
iret
enter
lret
and
add
sub
mov
inc
xor
inc
push
jns
mov
loop
xchg
addr16
add
mov
mov
fwait
ss
push
fcmovbe
sub
std
push
test
pop
es
mov
roll
and
call
in
mov
addl
rep
push
hlt
xchg
inc
push
lods
and
lods
add
cltd
xor
nop
add
sub
in
push
enter
ret
enter
les
loop
pop
or
xchg
in
in
mov
xchg
add
test
mov
nop
test
popa
mov
nop
pop
cmp
cmpsl
mov
xchg
ret
xlat
insb
js
mov
sysret
push
xor
insb
stos
push
aaa
cli
xor
iret
sarl
add
movsb
push
pop
mov
lcall
insb
cmpsb
and
loop
mov
jne
cmp
xor
test
lea
and
imul
ret
mov
push
push
push
mov
xor
sub
jne
sub
pop
sarb
dec
push
rcll
pop
adc
add
xor
or
and
sbbb
jmp
js
push
lods
pop
incl
mov
sbb
mov
mov
pop
dec
out
adc
mov
push
adc
dec
and
sahf
sbb
arpl
pop
inc
mov
imull
ret
mov
cmp
jne
sbb
fstl
cmp
and
repz
push
mov
cmp
sub
stos
pop
sub
add
add
xor
lea
inc
inc
xchg
mov
adcb
xchg
jnp
mov
mov
push
mov
push
mov
mov
jns
lds
js
pop
sbb
testb
sub
or
dec
lods
fldcw
adc
inc
add
add
dec
sub
mov
ljmp
aaa
inc
cld
push
sub
fadds
or
adc
ds
dec
adc
or
sbb
xor
and
mov
add
and
not
and
out
aad
and
bound
inc
adc
sub
adc
push
clc
imul
dec
pushf
mov
inc
adc
or
sub
popa
xor
mov
cmpsb
inc
lret
je
pop
test
xchg
pop
sbb
add
in
sarl
outsb
sbb
xor
fnsave
movsl
xchg
dec
push
je
dec
je
push
or
cmp
pop
insb
inc
fmul
push
jecxz
dec
fstpl
fstpl
push
fldl
cmpsl
cmp
push
or
xlat
push
mov
aad
movsb
lods
push
inc
lcall
push
leave
pop
jmp
jo
push
fldt
dec
lea
in
pop
lret
lret
das
cmp
mov
xchg
dec
je
add
and
sbb
xchg
pop
and
sti
fnstenv
lcall
xchg
insl
ljmp
pop
sub
out
cmp
mov
fstps
pop
fisttpll
fdivs
rcrl
aas
fwait
pop
add
fwait
add
inc
sbb
jmp
lret
xchg
adc
push
sahf
lret
add
call
xchg
aaa
rclb
hlt
lock
adc
add
pop
push
call
jle
ret
fstl
push
shl
push
push
jl
inc
mov
jne
das
and
rorl
inc
lock
fidivrs
cmp
push
xor
cmp
cmp
fidivl
addr16
dec
jmp
push
jns
and
pop
out
add
fxch
adc
lods
mov
or
in
or
push
xchg
leave
adc
xor
pop
sub
jne
ds
pop
call
sub
testl
push
inc
mulb
inc
lahf
or
push
push
xchg
sbb
fcompl
add
int3
inc
mov
frstor
popa
push
jmp
test
jb
clc
push
fmull
negl
jp
cmp
test
jne
push
mov
adcl
nop
pop
jmp
out
add
mov
push
jo
cmp
mov
mov
pop
test
add
rol
xchg
cmp
out
std
lods
std
sbb
sbb
mov
testb
jne
or
popa
pop
sbb
sbb
lock
or
jecxz
incb
or
gs
outsl
xchg
mov
inc
and
jne
dec
sbb
pop
sbb
pop
sar
lea
testb
push
shll
inc
addr16
cmp
wbinvd
cli
or
adc
or
mov
rolb
adc
movsb
inc
mov
popf
xor
ret
mov
es
ja
movsbl
cwtl
es
lret
movb
in
rcll
push
rcr
mov
sub
lret
test
lock
enter
mov
movsbl
cmp
dec
dec
push
pop
or
shlb
fs
adcl
test
mov
cmp
into
fidivrl
push
test
or
out
popa
jg
and
mov
in
lods
es
mov
test
mov
mov
cmp
int
pop
cmp
lahf
test
mov
insb
jne
inc
sub
aad
pop
and
pop
mov
cmp
jne
cmpb
jl
fs
add
cmp
inc
xor
cmp
movsl
pop
inc
movsl
sub
cmp
imul
dec
outsl
lds
js
jo
dec
mov
lods
cmp
inc
push
pushf
lods
or
inc
mov
jmp
inc
xor
pop
sahf
lea
push
cmp
in
push
sbb
dec
sahf
iret
sbb
pop
cmpsb
adc
vrcpss
loopne
pop
call
cmp
adcb
sti
push
inc
cmp
nop
or
outsl
sub
mov
lods
fcoms
lods
scas
testl
rorb
stos
fstpt
push
cmpsl
imul
int3
push
adc
testl
sbb
xchg
adc
lret
sub
cmpsb
mov
push
cmp
rcrl
sahf
subb
inc
cld
pop
lret
xchg
push
hlt
std
sub
orl
pop
enter
mov
sub
or
or
mov
pop
jo
aaa
mov
into
je
imull
pop
mov
add
in
lcall
pop
jb
jns
std
scas
jae
nop
cmp
test
mov
lret
insl
pop
xor
mov
std
aaa
addr16
xor
xor
std
ja
mov
adc
fbstp
xor
and
pop
fsqrt
lods
sarl
inc
push
xor
inc
xchg
jp
pop
out
xchg
imul
call
mov
jecxz
repnz
push
mov
inc
xchg
and
push
mov
xchg
xor
daa
push
dec
mov
cmp
lock
lea
cmc
jge
or
lea
stos
pop
mov
and
data16
in
mov
imul
dec
cs
mov
cmp
ds
je
fdiv
push
push
stos
lcall
std
jb
icebp
shll
jnp
iret
pop
out
xchg
mov
lcall
mov
push
xchg
mov
test
dec
push
cmpsb
mov
push
loope
xchg
mov
cmpsb
repnz
inc
sbb
inc
adc
sub
pop
push
cmp
cmp
mov
sbb
std
nop
xchg
std
lock
xor
push
imul
test
dec
loopne
mov
xor
inc
repz
mov
pop
mov
add
fdivrp
or
dec
mov
add
hlt
sub
test
sub
or
dec
jmp
dec
mov
xchg
add
cs
xchg
lret
pop
lock
xor
jge
jmp
push
sub
sub
or
sbb
jge
mov
cmp
jmp
test
push
jle
mov
dec
test
lods
insl
add
out
cld
lods
sbb
std
dec
cmpl
push
adc
fbstp
pop
push
int
bound
mov
cmp
test
movsb
adc
hlt
arpl
push
push
jge
push
inc
lret
or
dec
out
jne
cmp
xchg
sbb
jo
hlt
or
xor
inc
ds
das
push
or
xchg
clc
dec
pop
jno
push
je
sbb
test
sub
gs
loopne
cmp
push
enter
das
and
add
dec
pextrw
cmp
fsts
cmpsl
xor
ljmp
xrelease
jns
dec
dec
push
rolb
mov
ds
shlb
and
push
faddl
loop
add
jo
adc
or
and
cltd
dec
xor
outsl
mov
insl
out
das
xchg
sub
sub
mov
xchg
lock
iret
outsl
data16
insb
adcl
aas
mov
aad
leave
and
stos
mov
movsb
daa
pop
and
test
mov
mov
mov
push
loopne
push
outsb
dec
lods
xchg
outsb
cmp
mov
loope
dec
sub
cmp
ja
mov
pop
or
adc
mov
or
dec
jo
sub
movb
pop
movsl
int
xchg
push
add
xchg
push
inc
scas
loope
lock
enter
push
ljmp
lret
push
movsl
pop
fdivrs
xor
add
mov
jb
repz
mov
mov
push
jno
push
cmpsl
mov
in
mov
and
adc
and
inc
jb
cmpsl
mov
xchg
xchg
xchg
aam
les
imulb
or
popf
nop
test
mov
mov
dec
in
ja
subl
sub
pop
dec
inc
mov
fstps
test
sbb
aad
lcall
int3
jno
adc
or
pop
movsl
jb
sbb
enter
mov
insl
and
into
inc
sub
inc
leave
push
sbb
mov
mov
mov
test
mov
adc
inc
lods
or
stos
pushf
pop
in
je
repz
nop
add
stos
mov
clc
and
dec
stos
mov
mov
lock
sbb
xchg
lret
mov
push
and
nop
pop
rorb
fs
or
bound
dec
jno
xor
cmpsl
leave
adc
pop
enter
incl
push
test
sbbl
xor
mov
or
jno
dec
push
sbb
add
je
stc
and
popl
mov
dec
lds
ret
jns
out
push
loope
les
add
or
lret
movsl
lea
loope
imul
mov
stos
mov
pop
push
or
mov
mov
push
fbstp
mov
add
ljmp
inc
add
add
shll
and
and
shr
mov
pop
cwtl
inc
mov
and
jecxz
cmp
sub
dec
add
sbb
mov
or
add
adc
popa
and
aaa
jl
dec
dec
adc
rol
inc
mov
imul
pop
inc
xchg
push
insl
fimuls
and
outsl
mov
test
aas
mov
sub
xor
bound
ret
mov
mov
sbb
mov
loopne
test
and
jle
popa
add
out
fists
sub
mov
sbb
fstps
and
stos
bound
xor
jb
repnz
dec
lret
or
or
les
cld
inc
inc
jp
lods
or
arpl
jne
push
and
add
das
scas
mov
movl
std
pop
mov
adc
adc
gs
arpl
fcom
pushl
cmp
inc
ret
sbb
jns
lea
dec
test
cwtl
lahf
or
ja
xchg
sub
ficomps
push
add
je
sub
clc
inc
push
inc
sbb
sti
and
testl
xor
adc
mov
test
inc
cs
les
add
lcall
adc
in
adc
in
jae
insl
arpl
inc
add
jno
fisubs
push
lock
test
mull
movq
jnp
shr
inc
push
pop
push
push
inc
shr
rcr
shr
shll
or
jne
div
pop
dec
adc
inc
mul
pop
mov
imul
jb
cmp
or
cmp
or
xor
and
iret
xor
aam
or
ficoml
fcmovu
lret
dec
or
ror
jl
mov
jge
inc
add
test
inc
jl
mov
incb
or
clc
mov
movb
bound
movb
out
int3
inc
rcll
daa
dec
mov
les
sub
inc
dec
adc
add
lcall
xchg
sbb
sub
push
jecxz
movsb
lsl
sbb
or
push
ret
and
sbb
add
adc
dec
lods
jno
sarl
mov
jne
mov
push
xor
sbb
loop
cld
adc
pusha
or
js
and
mov
cmp
cmova
dec
xchg
inc
or
sbb
push
jg
mov
inc
cmp
shl
ss
popf
fidivrs
jne
lea
jb
mov
xor
jl
nop
aas
inc
movsb
push
in
and
push
sub
cltd
cs
test
ret
cmc
jne
imul
cmp
adc
mov
adc
adc
sub
repnz
lcall
sub
xchg
iret
push
jecxz
rcll
rolb
add
pop
or
push
jl
mov
and
adc
cld
sbb
and
push
pop
mov
test
dec
lea
dec
push
cmc
lock
inc
sarl
cmp
ss
xor
aaa
xchg
cmc
sbb
dec
sarb
xor
lods
imull
add
enter
movl
push
sahf
inc
sub
and
or
fwait
daa
xchg
stos
add
push
sub
fisttpl
outsl
mov
lcall
mov
push
in
adc
dec
pop
sarl
or
sarl
adc
hlt
ret
lock
js
adc
mov
and
cmp
nop/reserved
jmp
xor
or
cmp
fcoml
adc
popf
sbb
movsl
jne
repz
lea
push
pop
out
and
mov
pinsrw
les
dec
cmp
inc
add
inc
or
fs
outsb
dec
pop
pop
scas
inc
test
call
clc
je
mov
fdivrp
iret
adc
inc
mov
cmp
or
push
pop
push
mov
adc
mov
mov
inc
loopne
xor
inc
stc
xor
mov
xor
ss
dec
xor
push
push
push
in
and
pop
jne
ss
cmp
push
out
and
daa
ss
and
sti
jns
adc
xchg
pop
addr16
sbb
inc
outsb
or
cld
adc
inc
sbb
sahf
and
push
adc
scas
and
insb
jp
and
sub
je
stos
gs
xor
lock
iret
push
mov
push
add
or
setl
call
icebp
sub
dec
les
fisubs
sbb
inc
mov
push
ljmp
jb
inc
adc
popf
movsl
push
push
mov
cmp
roll
inc
push
cmp
insl
or
pop
jne
or
insb
pop
bound
xor
jno
push
mov
add
sbb
fwait
dec
mov
inc
sti
jbe
mov
sub
or
popf
jle
shlb
adc
xchg
nop
mov
daa
push
xor
cmp
pop
add
add
pushf
mov
lcall
arpl
or
mov
pop
push
pop
mov
sub
xlat
lret
add
mov
inc
imul
or
mov
ficoml
push
mov
adc
xchg
xor
test
dec
add
add
pusha
shl
or
data16
jmp
std
add
test
xor
or
push
adc
leave
and
push
mov
xor
and
sbb
loop
call
cmp
faddl
inc
sbbl
pop
and
cmp
xchg
sub
cmp
cmpsl
jb
nop
popl
outsb
xor
test
sbb
inc
lock
leave
push
sbb
popf
sbb
into
pusha
mov
les
fwait
dec
or
or
inc
xlat
gs
shl
push
cmp
sbb
divb
mov
fcomps
fstl
dec
cmp
xor
cmpsl
push
push
stos
dec
xor
fcomps
pop
rclb
mov
xchg
ljmp
shll
mov
jne
fstps
jne
add
loopne
push
mov
pusha
pushl
mov
mov
inc
mov
lret
sbb
clc
jmp
xchg
jle
push
or
je
dec
je
je
bound
jmp
mov
pop
jmp
pop
dec
or
and
sub
xlat
adc
pop
fdivrl
dec
ret
sbb
inc
pop
and
push
in
adc
pop
add
scas
or
inc
mov
idiv
arpl
aam
inc
pusha
jne,pn
sbb
call
movl
fwait
outsb
ja
lods
sub
adc
cmp
jge
mov
adc
ret
or
cmp
test
aam
call
ja
rorb
insb
sbb
push
push
dec
jmp
test
insb
or
mov
and
pop
sub
imul
mov
and
pusha
xor
clc
jne
sbb
add
je
and
das
mov
data16
pop
xor
addr16
es
shl
push
fisttpl
xchg
sti
subb
sub
fcomi
push
sbb
and
and
cmp
pop
cmp
push
mov
fldl
xchg
push
xchg
and
iret
cwtl
sarb
dec
arpl
popa
ja
repnz
sub
inc
add
test
push
add
and
mov
mov
fucomip
rcll
or
mov
add
sbb
mov
and
mov
test
cmp
push
cli
pop
push
mov
in
out
add
sahf
lds
push
adc
adcl
popa
pop
lcall
je
push
add
push
xor
and
test
mov
jnp
and
mov
mov
or
add
add
push
lods
in
insb
dec
push
arpl
push
out
mov
jb
add
add
cwtl
or
in
int
push
sbb
adc
sub
or
jmp
call
sahf
add
sub
push
mov
mov
in
sbb
and
inc
sub
inc
mov
xchg
mov
push
push
adc
test
mov
and
xchg
add
inc
fsubrs
ja
cmp
repz
dec
jmp
xor
adc
inc
adc
add
or
dec
dec
outsb
add
inc
pop
addr16
mov
mov
popa
imul
and
jb
ss
xchg
inc
or
dec
shr
aad
pop
adc
dec
stc
add
dec
pop
or
xchg
xchg
bound
cmova
add
nop
mov
rorb
pop
xor
andb
inc
mov
mov
repz
mov
inc
pop
iret
loop
pop
add
popf
inc
add
adc
scas
nop
adc
insb
pop
shll
xchg
mov
cmp
icebp
int
inc
push
mov
mov
shll
mov
jl
xchg
sub
gs
inc
lock
lds
mov
iret
pop
aas
sarb
inc
stos
mov
adc
mov
adcb
shl
wrmsr
pop
add
jp
push
sub
lahf
fsubrs
mov
jge
push
push
orl
les
clc
or
test
addl
mov
xchg
mov
dec
icebp
lea
and
sbb
add
jnp
or
daa
jo
sub
sub
inc
jne
xchg
fldt
cmp
dec
inc
inc
or
jne
rclb
mov
fcmovb
cmp
push
sar
or
cltd
add
je
subb
in
das
mov
or
cli
dec
frstor
pop
clc
add
aad
enter
addr16
add
xor
lcall
sbb
inc
addb
or
lcall
sub
imul
pusha
ds
mov
ror
sbb
pop
das
push
adc
fists
jbe
cwtl
dec
adc
sbb
and
dec
lock
inc
pusha
loopnew
orb
lea
shr
add
or
or
or
insl
push
and
xor
jo
sbb
add
add
mov
adc
push
and
add
push
mov
test
xor
jmp
pop
sbb
pop
cwtl
scas
rorb
rcrb
inc
sub
jo
lea
loopne
lock
and
adc
mov
mov
adc
inc
cmp
popa
jl
dec
adc
add
insl
add
mov
pushf
push
dec
push
pusha
lcall
dec
mov
data16
add
and
shl
add
and
push
pusha
inc
add
inc
test
pop
and
lahf
faddl
lcall
add
cltd
cmp
aas
pop
xlat
xorl
orb
add
add
xchg
addl
push
pop
rclb
cmp
ret
dec
mov
rolb
cmp
cmp
adc
mov
aad
test
push
cmpsl
adc
add
or
je
and
dec
movl
mov
jb
loope
pusha
sbbl
notb
cltd
cwtl
dec
adc
mov
and
inc
mov
shlb
or
mov
fs
out
push
xlat
cs
push
ss
pop
add
cmp
jns
push
shrb
movsb
mov
test
jge
mov
test
adc
loopne
or
xchg
loopne
daa
xor
not
push
rcll
add
add
pop
mov
sub
in
mov
and
outsb
js
enter
pop
xchg
data16
ret
sub
cmc
cmp
fwait
push
outsl
pushf
and
add
shr
imul
inc
adc
test
xor
pusha
nop
jp
pop
jo
test
adc
dec
cmp
or
loope
or
or
sub
loop
wbinvd
adc
cmp
roll
clc
lea
lret
sub
adc
mov
mov
or
lods
push
rolb
inc
fdivp
jnp
fisttpll
stos
ss
neg
add
lock
or
lock
push
testl
int
push
or
imul
enter
inc
push
xor
movsl
mov
rorl
in
mov
and
fucomip
sar
fidivs
dec
movsl
ljmp
add
pusha
lods
cltd
lock
jae
js
or
jns
add
in
stos
pusha
pop
test
mov
pop
clc
das
add
add
jmp
pushl
movsb
fs
add
cmpsb
push
push
add
iret
jae
adc
mov
cwtl
sub
mov
push
stc
mov
and
insb
es
ds
adc
xor
js
pop
sahf
lret
jl
adcb
xor
test
sbbl
sub
cmpsb
scas
mov
pop
pop
fnclex
mov
sahf
aas
push
pop
adc
out
clc
jl
outsl
push
push
dec
adc
push
and
jne
out
test
inc
or
sub
jle
pushf
outsl
ja
xchg
push
jg
test
scas
jecxz
scas
sbb
hlt
xor
or
adc
mov
xchg
lret
or
loope
or
test
into
and
call
ljmp
dec
test
mov
push
sahf
cmp
sub
add
sub
xor
mov
lock
in
lock
rep
add
test
test
adc
adc
ss
and
sub
or
inc
fistl
jmp
pop
imull
inc
add
or
add
adc
inc
push
sub
add
cwtl
aaa
push
push
ljmp
mov
sbb
sbb
xchg
out
mov
sbbb
ficompl
xchg
imul
xor
cmp
sarb
aam
sbb
and
pop
dec
stos
or
jnp
push
cmp
mov
mov
test
lret
cmpsb
or
sbbl
xchg
dec
inc
rep
mov
mov
fistl
ret
ds
cmp
push
dec
mov
sub
insl
les
xor
mov
adc
push
push
clc
mov
test
and
push
lods
popa
pop
mov
and
push
fnstenv
mov
pushl
popa
fwait
and
jmp
or
test
inc
and
in
rclb
bnd
ret
sub
mov
imul
testb
cmpsl
add
add
sub
imul
adc
sub
adc
fcomp
and
fcoml
adc
push
push
ljmp
ds
call
bound
jne
insl
imulb
aas
jmp
adc
outsl
insl
or
jae
outsb
movsl
repnz
inc
add
or
or
sti
fidivrl
push
fcompl
imulb
mov
les
inc
xor
aaa
popf
enter
enter
lahf
xchg
push
rorb
or
clc
push
inc
mov
rorb
jbe
or
aaa
xor
cmp
inc
jmp
xor
fisttpl
pop
dec
jbe
jne
imul
lcall
fisubrs
cmc
aas
sbb
mov
jb
adc
push
in
rcr
fcoms
add
shll
xor
ss
sub
jle
inc
push
sub
adc
dec
sbb
cmp
idivb
xor
push
add
push
ja
cld
and
push
ja
incl
mov
in
or
in
fs
or
push
cld
imul
push
jb
loop
push
sbb
jno
mov
adc
repz
in
push
or
cmp
out
aas
fisubs
push
ljmp
xor
testb
je
pop
sar
testb
je
movsl
ljmp
in
sub
cmpsl
push
cmpl
inc
loopne
sub
or
sub
fadd
dec
andl
pop
inc
and
sbb
sbb
lcall
js
cld
push
and
ds
addl
sarb
jae
fildl
in
mov
std
jno
jne
pop
inc
pop
dec
mov
xor
dec
ficomps
add
mov
inc
lret
fs
pop
adc
pop
xlat
adc
faddl
push
pushl
jmp
xchg
or
add
push
pop
and
out
shr
xchg
adc
ja
xlat
sahf
lcall
mov
cmp
test
cmp
or
jne
inc
sbb
sahf
nop
icebp
cmpb
xchg
mov
dec
andl
dec
sub
and
or
xor
js
push
mov
outsl
dec
subb
inc
or
mov
aam
lret
or
ret
and
les
sbb
xchg
push
jl
push
outsb
add
les
add
add
ret
jg
mov
add
cmp
rolb
ror
add
sbb
push
sub
jp
add
bound
xor
push
adc
nop
push
test
push
fisttps
sub
pop
jg
std
cltd
xchg
sub
fs
pop
jl
mov
xchg
xor
mov
and
xchg
push
test
pop
or
cmp
and
fneni(8087
xor
fmuls
push
loope
sub
push
mov
xchg
int3
add
and
inc
insl
mov
sbb
mov
push
cmp
loope
mov
mov
aaa
mov
loope
fdivs
aaa
inc
nop
push
or
inc
push
clc
or
lods
lret
mov
adc
outsl
mov
ret
loopne
sbb
xor
jle
dec
adc
mov
or
add
push
lret
cmp
jae
push
je
cmp
aaa
adc
dec
shr
dec
lea
fbstp
xchg
sub
and
xchg
add
add
jcxz
push
add
sbb
cs
adc
test
pop
mov
andb
pusha
rcl
cmpl
stos
inc
cmpl
inc
push
cmp
roll
cmp
push
mov
ret
and
xchg
sub
xlat
jo
aaa
nop
xor
adc
lret
push
or
rcll
dec
or
test
add
mov
push
or
cld
and
nopl
xchg
inc
add
add
loope
cmc
repnz
mov
je
jo
stos
adc
loope
loope
lds
and
pop
popa
loop
pop
je
mov
cltd
aam
push
sbb
shr
cmpl
mov
out
jl
push
jmp
mov
push
sbb
je
xchg
je
cs
xchg
sbb
jmp
or
mov
outsl
sub
pop
imul
inc
add
dec
or
movsl
inc
xor
push
jg
jb
nop
lret
cmp
sub
repnz
xor
adc
popa
cmpsb
out
adc
popa
sub
jecxz
mov
fiadds
add
inc
rclb
or
sbb
cmp
inc
xor
adc
sbb
pushf
and
lock
jne
push
push
xorb
and
mov
enter
ds
inc
cs
adc
fildl
arpl
mov
sbb
movsl
or
jns
pop
inc
pop
or
or
mov
cmpb
sub
stc
sbb
xchg
push
sbb
pop
cmc
and
add
or
lcall
mov
pop
jge
fwait
cld
and
aad
lds
lock
inc
cmp
jae
push
cmp
jl
mov
inc
or
dec
adc
mov
mov
ret
mov
jle
testb
rcrb
clc
push
mov
xor
ljmp
jb
pop
adc
sbb
movsb
sub
adc
loopne
inc
inc
add
mov
mov
mov
dec
add
or
test
enter
fwait
leave
mov
icebp
cmp
scas
mov
xor
mov
mov
lret
int3
or
xor
outsb
xor
gs
test
lods
mov
repz
xchg
push
mov
and
jne
popa
inc
push
sbb
xlat
pop
out
xlat
mov
hlt
jne
jmp
frstpm(287
rolb
arpl
mov
adc
cmp
pop
loope
loopne
loopne,pn
dec
fs
jle
xchg
or
mov
or
xor
mov
into
sub
inc
les
enter
push
movsl
adc
pusha
pop
sahf
outsl
sbb
mov
pop
and
jle
add
add
xchg
adc
dec
xchg
inc
push
lock
and
loope
pop
fs
sbb
sarl
jg
and
rorl
sub
outsb
add
sub
sub
dec
movsb
les
and
pusha
jbe
adc
pop
loopne
fstpt
lods
dec
sbb
dec
in
mov
dec
jg
adc
cmp
fsubrp
push
mov
and
pop
hlt
cltd
loopne
out
js
sbb
xlat
or
rolb
sub
mov
pop
fcoms
jle
jne
adc
and
sbbb
push
adc
test
or
dec
xor
and
notl
aaa
mov
jl
dec
js
push
push
dec
or
lock
jne
shl
les
es
lret
mov
jmp
jp
push
mov
ljmp
add
mov
cwtl
mov
dec
and
ss
mov
xlat
je
cmp
aas
repnz
shll
testb
stc
jne
xchg
loop
inc
xchg
rorb
test
add
dec
dec
sarl
jmp
inc
ds
faddp
sbbl
outsb
adc
xor
cmp
jbe
mov
adc
sub
push
or
push
in
push
pop
push
jnp
test
popf
shr
jmp
das
jecxz
and
out
cmp
sbbl
inc
adc
adc
push
push
inc
scas
jle
mov
mov
xchg
jbe
inc
or
es
add
xchg
jle
xor
scas
ret
push
insb
inc
add
aaa
mov
sub
push
pop
mov
push
les
out
je
and
mov
xchg
icebp
sub
sbb
into
je
xchg
sub
jbe
lea
lea
or
xchg
push
sbb
dec
dec
sbb
pushf
repz
mov
xchg
mov
add
pushf
or
add
or
and
insb
sub
and
cwtl
push
lods
daa
adc
xorl
jmp
inc
mov
mov
dec
and
push
imul
inc
mov
push
mov
cmpl
xor
pusha
call
pop
rol
aam
test
inc
mov
out
inc
cmp
xor
out
lds
aas
int3
push
pop
cli
and
push
nop
adc
or
nop
mov
iret
add
imul
fimull
or
adc
fldl
sbb
sbb
cmp
cmp
sub
xor
cmp
cmp
cmp
cmp
addl
jo
jb
dec
push
push
pop
pushf
pushf
pushf
pop
add
pushf
pushf
pushf
pushf
insb
jo
js
add
fs
dec
ficoml
mov
xchg
cwtl
dec
es
fs
mov
xchg
test
sub
sub
xorb
add
push
imul
mov
ret
xor
mov
push
mov
or
call
adc
in
adc
movsb
cltd
nop
lock
sbb
inc
or
clc
and
adc
mov
and
sbb
std
enter
pop
push
adc
scas
push
jo
add
push
mov
lcall
adc
jne
out
sarb
ret
inc
or
xchg
add
dec
or
dec
mov
inc
and
xchg
cmp
sahf
in
popa
mov
xor
jb
sbb
and
or
and
les
mov
jg
int3
xor
lea
pop
xchg
cmp
gs
xchg
decb
and
mov
leave
mov
pop
jmp
in
mov
dec
inc
inc
test
xor
push
pop
inc
ficomps
cmp
ss
xchg
dec
inc
das
je
sub
jo
xchg
orl
aad
adc
nop
mov
cmp
fmuls
in
pop
test
push
push
popf
data16
push
mov
ret
jo
sbb
jp
add
dec
pop
cmp
outsb
dec
int
add
pop
mov
je
push
pushf
xor
xor
in
inc
push
dec
and
sbb
test
sub
data16
dec
sub
and
or
sbbb
adc
repz
jmp
push
jb
inc
add
repz
repnz
repz
cltd
sbb
outsl
jb
push
or
sbb
pop
xchg
fimull
lock
push
push
xor
rcrl
jl,pt
dec
sbbb
mov
dec
orb
fiadds
push
adc
data16
and
iret
stos
mov
aam
pusha
lahf
mov
faddl
and
xchg
cmp
into
mov
add
push
jp
dec
insb
arpl
xchg
loope
adc
adc
icebp
insb
jl
cmp
fisubrl
insl
jb
push
mov
push
movsl
add
pop
jmp
enter
sbb
pop
pusha
and
xor
loope
pusha
shrl
fadds
pop
js
push
xor
sub
push
mov
pop
repz
mov
sbb
ss
fwait
mov
push
lret
testl
sahf
or
fbstp
dec
cmp
pop
aam
cld
pop
repz
inc
lahf
and
push
fisubs
jne
cld
daa
mov
daa
jecxz
stc
mov
rclb
mov
icebp
push
and
out
sti
fwait
or
add
sar
mov
mov
popf
daa
or
mov
mull
fdivs
jne
aad
lea
iret
adc
adc
push
xchg
rclb
std
inc
ret
push
pop
add
pop
inc
insb
sbb
xor
insb
and
cmp
sbb
cmpsl
call
inc
pushl
mov
push
cmc
out
je
pusha
dec
sub
repnz
lock
inc
popf
pop
addl
pop
mov
add
sbb
mov
pop
push
push
addr16
mov
rorl
jmp
cmp
in
lods
mov
aas
adc
push
add
dec
cmc
sbb
stos
jmp
mov
jmp
cmp
add
icebp
or
insl
cmp
fsubs
push
mov
add
clc
mov
or
adc
sbb
inc
inc
aas
adc
lea
push
add
dec
jo
fimull
mov
cmp
pop
pusha
fcoms
push
inc
mov
push
xchg
pop
dec
sub
or
sarl
cmp
test
cmpl
fldenv
pop
out
lods
push
or
push
add
loopne
inc
mov
imul
mov
shlb
cmp
shr
pusha
and
add
inc
dec
out
sub
jmp
inc
icebp
and
jne
dec
rorb
ds
pusha
push
je
lcall
inc
and
cmp
sbb
jnp
fcomp
jb
clc
ret
sti
movsb
mov
inc
mov
out
in
push
sysenter
sbb
dec
add
xchg
sbbb
int3
xchg
or
jle
clc
clc
sahf
cmp
push
xchg
outsb
ja
sub
sub
jne
sahf
dec
mov
jae
mov
scas
pushl
adc
cli
or
inc
popa
das
fimuls
mov
adc
mov
sub
mov
sub
loop
stos
push
and
inc
lret
cmp
push
pop
inc
add
cmp
jmp
push
daa
or
pushl
clc
add
push
in
enter
movsl
dec
add
lds
add
xchg
scas
in
mov
lods
push
orl
fwait
sar
or
inc
inc
sbb
or
dec
cmpl
add
inc
faddl
jl
mov
dec
dec
stc
pop
pusha
mull
rclb
adc
into
fs
dec
lock
push
xchg
sub
or
push
addb
test
mov
je
push
xchg
jmp
xor
in
or
jmp
mov
std
jno
inc
dec
pusha
in
rorb
push
das
fisttpll
push
mov
xor
add
push
jo
lret
jmp
or
popa
aad
pop
and
jns
xchg
pop
or
lea
xorb
sub
push
push
cltd
sub
mov
fdivrs
jne
ljmp
jle
inc
stos
insb
sub
jne
divl
fidivrs
fdiv
or
xor
mov
inc
cmpb
js
jb
xchg
and
sbb
js
add
cmp
pop
xor
and
out
in
ja
sbb
in
or
xchg
or
mov
aaa
push
xor
add
add
sub
cs
dec
pop
and
lods
dec
sbb
incl
push
cmp
inc
dec
or
outsl
push
popa
negb
xor
int
ja
divb
pop
adc
popa
add
jmp
or
mov
adc
and
add
or
sbb
xchg
mov
push
fimull
add
inc
dec
cli
fstpt
xor
adc
pop
sarl
mov
test
xor
push
lds
push
and
dec
push
and
mov
sbb
mov
inc
scas
fstpl
mov
fwait
lds
lock
ret
pop
ljmp
pop
inc
xor
ret
mov
pop
push
fisubrs
or
inc
sbb
jmp
into
insl
les
rcrb
aam
arpl
testl
xlat
cmp
sub
jne
and
cmp
sbb
sub
pminsw
dec
or
dec
adc
dec
or
mov
jge
mov
js
mov
orl
inc
out
push
gs
mov
cmp
in
pop
cmp
out
insl
loopne
lods
jg
rclb
add
hlt
adc
fadd
imulb
pop
leave
sub
or
adc
adc
add
rcll
jne
pop
sbb
jbe
sub
pop
adcb
shrd
cld
pop
pop
or
imul
mov
and
cmp
inc
sbb
call
jp
inc
dec
lahf
clc
je
cmp
rclb
push
cltd
pop
add
mov
lcall
lock
ss
inc
or
and
dec
cmp
cmpsl
out
xchg
je
mov
jmp
push
and
inc
cmp
shlb
fsts
lods
xchg
test
add
js
pop
sbb
and
add
or
movsl
xor
aad
icebp
aaa
xchg
push
enter
inc
push
movsb
ss
ds
cs
mov
cmp
decl
push
js
test
dec
pop
outsb
test
stos
rcrl
dec
sub
mov
out
push
dec
roll
mov
lret
dec
xchg
lcall
pushf
hlt
push
mov
loop
jle
add
insb
mov
ss
mov
ret
push
xorb
test
jg
movsl
cmp
and
pop
add
or
mov
fcoms
sbb
push
outsl
adc
sarb
push
cmp
sub
rclb
and
cmp
pop
test
jbe
mov
rolb
xchg
cmp
lcall
bound
movsl
sti
lods
inc
sub
stc
pop
sub
inc
rclb
dec
inc
in
mov
mov
das
mov
dec
pop
mov
push
sbb
cmp
das
push
loopne
inc
gs
je
dec
cmp
jge
daa
ret
sbb
mov
add
or
sub
pop
push
dec
jno
mov
inc
jne
adcl
jmp
mov
test
sub
push
dec
data16
cmp
dec
jnp
lock
repnz
das
adc
dec
outsl
or
inc
jae
cli
jb
rorl
jl
mov
jle
add
add
out
xchg
mov
sub
mov
jecxz
or
test
in
inc
je
jae
pop
sub
and
xor
add
jne
or
sub
inc
data16
movsb
add
in
or
and
mov
push
stc
add
mov
std
jne
and
clc
jbe
push
test
dec
or
ror
mov
ja
adc
call
or
into
push
int
and
xlat
into
sbb
es
mov
icebp
rolb
lea
hlt
xor
pop
mov
xor
pop
sub
je
push
add
mov
cwtl
cpuid
cmp
stos
testl
push
xchg
call
add
push
mov
mov
mov
adc
jle
in
push
add
lret
in
imul
or
xchg
lret
xchg
mov
mov
decb
pushf
push
mov
sti
mov
lret
and
and
or
iret
adc
aas
mov
shll
dec
xor
adc
or
cmp
jmp
loop
es
lret
and
xor
sub
push
in
aaa
cmp
test
adc
test
les
and
xlat
adc
mov
mov
xorb
or
xor
ss
sub
dec
out
inc
push
je
mov
adc
lock
and
mov
adc
dec
mov
aaa
jecxz
mov
cltd
pushf
jge
add
or
movnti
pop
fwait
test
loope
or
or
and
jge
add
sbb
loope
negl
and
add
fstps
aas
pusha
mov
push
rol
mull
flds
sub
dec
and
jecxz
pop
fstp
rcrl
pusha
cmp
push
pop
insl
fistpl
push
addr16
ss
dec
lea
or
hlt
es
adc
sti
ja
test
out
test
xchg
add
fisttps
movsl
loop,pt
push
xor
dec
je
add
dec
jne
orl
scas
jmp
push
mov
scas
lret
add
pop
testl
lds
mov
je
jb
sbb
jmp
push
and
inc
mov
dec
add
adc
add
inc
push
fldenv
xorl
xorb
outsb
sbb
sub
out
sbb
les
inc
movsb
cmp
jg
addr16
cld
push
push
adc
push
xor
cmpsb
cmp
cmp
data16
add
hlt
inc
aam
xchg
push
xchg
lods
addr16
sbb
ja
ret
fcompl
rolb
in
mov
jl
add
sub
sub
jmp
cmp
mov
sub
push
xorb
or
inc
xor
xchg
test
int3
adc
mov
cmpsb
mov
hlt
add
mov
roll
arpl
mov
fstpl
adc
clc
loop
add
cmp
fnsave
ljmp
loop
mov
inc
in
add
lods
sarl
repnz
inc
pop
cmp
or
repnz
shlb
dec
sarl
enter
shrl
sbb
adc
orl
loopne
sbbl
pop
mov
push
push
and
sahf
jmp
pop
movsb
push
add
mov
or
xchg
and
mov
decb
push
and
fadds
mov
pop
sub
sbb
jle
push
add
int
add
js
and
or
lods
xor
pop
pop
sbb
repz
fs
mov
push
mov
cld
and
mov
add
mov
test
lds
adcb
sbb
sbb
pusha
cmp
or
sub
fistps
or
add
adc
or
cld
subb
scas
add
push
pop
or
and
js
add
xchg
push
pop
popa
sbbb
add
lods
fsubrp
fwait
jno
mov
jp
mov
xchg
cmp
add
sbb
mov
or
xchg
adc
repz
or
orl
dec
dec
or
insl
scas
adc
mov
pop
mov
fsubr
in
mov
dec
sub
imul
out
mov
cmp
incl
inc
sbb
or
push
mov
jbe
sub
mov
adc
adcb
popa
xor
cmpb
sarb
and
mov
jmp
add
push
add
mov
jae
mov
push
js
orl
mov
pop
cld
adc
push
pop
data16
mov
add
push
pop
mov
rcrl
mov
cmpl
xchg
flds
and
sbb
clc
mov
ja
or
mov
push
rcrl
rcrl
adc
jno
xor
push
pop
fadds
into
mov
mov
dec
push
test
pop
cwtl
or
adc
ret
lcall
dec
pop
or
mov
aad
icebp
sbb
sti
cwtl
mov
gs
or
imul
add
or
push
rcrb
mov
push
pop
rcrb
sbb
xor
add
or
jl
out
shrl
shr
loop
pop
or
xchg
ljmp
mov
fsave
adc
fnop
add
adc
and
pusha
cs
and
xor
push
or
insl
or
push
mov
loopne
hlt
or
sub
fwait
cs
das
sahf
adc
xchg
sub
sbb
les
or
sub
fdivp
jb
mov
fldpi
xor
jo
js
stos
add
addr16
jmp
mov
shlb
inc
xchg
scas
push
inc
xchg
ret
out
and
pop
je
mov
test
test
mov
mov
adc
add
shr
jge
fwait
cli
or
jbe
dec
or
jmp
add
xchg
neg
mov
shlb
mov
cmp
xchg
mov
lock
mov
dec
insl
push
inc
int3
push
xchg
mov
dec
test
das
jae
sbb
push
jnp
add
inc
ds
and
lahf
inc
push
push
dec
adc
test
adc
imul
push
sbb
push
test
or
je
or
inc
xor
psubq
xchg
aam
loopne
rcrl
add
outsb
pop
xor
enter
or
mov
jle
add
loope
or
xchg
cmc
fs
in
adc
pop
xor
stos
xchg
mov
push
test
lods
ss
and
in
rorb
inc
or
inc
movsl
mov
mov
dec
dec
aad
loopne
pop
sub
scas
cwtl
dec
sbb
fchs
pusha
fimull
popf
cli
dec
push
or
add
and
aas
inc
xchg
or
sub
push
push
jp
add
push
daa
mov
pop
test
lcall
add
push
add
insb
nop
popa
or
stos
stos
test
hlt
pop
xor
inc
mov
inc
enter
jg
test
mov
cltd
and
add
roll
pop
mov
dec
xchg
loopne
movsl
int
scas
mov
pop
pusha
sub
pop
ret
inc
shl
mov
pop
xchg
cmove
shl
not
test
add
push
dec
sub
repz
push
cltd
hlt
int
outsb
insb
pop
and
mov
out
mov
inc
gs
adc
insb
sub
test
adc
adc
xor
out
outsb
or
jb
cmp
pop
xor
cli
sbb
cmp
orl
pop
and
jae
add
or
dec
mov
adc
jns
jo
and
push
sub
and
or
pop
imul
xchg
in
push
or
mov
stos
inc
adc
and
lar
push
aam
xor
cmp
push
imul
movsl
xor
or
cmp
and
push
cld
not
rclb
cmp
les
xor
mov
push
or
and
lock
test
mov
and
shl
jle
mov
cmp
jl
mov
mov
xchg
aam
inc
xchg
test
test
popa
pop
addr16
sbb
dec
mov
hlt
push
pop
or
test
pop
push
cwtl
and
push
mov
cmp
sub
imul
add
cli
comiss
push
fs
push
pop
aas
sub
cmpsb
xor
iret
dec
jns
inc
lock
inc
jo
mov
jecxz
sbb
loope
sbb
dec
sbb
testl
out
orl
mov
pusha
mov
push
mov
mov
lods
xchg
test
into
out
dec
shlb
mov
iret
and
mov
push
lds
sbb
inc
add
mov
pop
scas
shl
addb
push
lock
or
mov
or
cmp
je
and
mov
in
push
cmp
or
push
cld
dec
mov
add
xchg
cmpl
add
cld
adc
and
add
sbb
repnz
add
mov
push
add
inc
cmp
sub
add
or
cmpb
sbbl
and
xchg
xor
inc
mov
add
stos
divb
leave
push
adc
shll
add
movsb
mov
pushf
cmc
xchg
mov
pop
mov
mov
nop
and
outsb
stos
test
add
or
xor
push
in
jne
inc
jmp
mov
sub
cs
jp
clc
or
xchg
add
push
loopne
cld
out
lods
mov
sub
cmp
ja
push
dec
jmp
jbe
inc
mov
mov
outsl
sarb
add
add
or
lock
or
mov
scas
xor
sar
pop
sbb
mov
jmp
cmpsl
mov
lods
jbe
mov
mov
and
hlt
or
inc
jle
cmp
jle
cmp
push
xor
popl
jle
lods
push
jmp
dec
push
mov
inc
push
push
pop
lret
xchg
lcall
push
data16
fs
adc
jmp
cltd
sbb
jge
sbb
push
push
mov
fs
in
mov
inc
mov
pop
jge
pop
fucomp
sahf
cmpl
out
movsb
jbe
nop
lahf
jne
mov
stos
dec
jae
imul
sbb
or
mov
or
jge
jmp
or
fs
outsb
mov
call
jae
sti
sbb
pop
push
sub
mov
or
orl
fstl
femms
and
daa
adc
enter
shlb
sub
mov
shll
je
mov
push
mov
mov
mov
fldenv
cmp
ret
mov
add
testl
mov
jmp
fiadds
xor
pop
loop
adc
imul
or
pop
sbb
imul
mov
push
rolb
or
jecxz
add
pushf
jmp
push
cwtl
pop
sbb
int3
push
mov
call
mov
into
dec
xor
jo
in
and
push
sti
and
pushf
xor
push
push
cwtl
jge
neg
add
dec
adc
sbb
mov
and
cmp
stos
out
mov
sbb
leave
pop
fdivrl
ret
jge
jle
mov
sub
xor
jne
and
lods
inc
out
mov
add
test
addr16
inc
daa
pop
push
inc
mov
addl
ljmp
add
mov
add
adc
mov
mov
inc
dec
or
fs
popa
insb
adc
mov
into
mov
mov
ret
and
rcrl
mov
adc
nop
sarb
dec
mov
mov
std
mov
sbb
ja
ja
mov
aad
pop
push
pop
push
mov
daa
fiadds
inc
testl
outsb
aaa
cwtl
enter
les
test
clc
mov
inc
into
jne
inc
or
cmp
lcall
push
hlt
int3
add
jne
sub
mov
test
bound
psrlq
pop
mov
dec
fcmovbe
or
les
or
push
jp
and
dec
cld
div
ds
cmpsl
inc
dec
lock
ja
pop
or
js
sbb
insl
mov
pushf
sub
xchg
stc
jg
add
stos
dec
mov
aaa
sarb
js
mov
aam
gs
jg
or
lods
add
or
shr
add
fldenv
or
push
out
mov
bound
or
adc
inc
mov
cs
mov
les
or
adc
jmp
or
shrl
shl
shr
or
mov
shl
call
jne
dec
sub
insb
mov
mov
push
push
ja
sbb
and
xorb
dec
jge
cmp
add
ficompl
mov
ret
sti
pop
cli
shrl
in
fiadds
push
call
fsubrs
mov
and
add
add
cs
mov
sub
ja
orb
cmp
or
sub
add
lret
into
jmp
or
sub
dec
and
les
and
mov
xorb
fmuls
pusha
push
lret
das
sub
add
mov
sbb
xor
adc
les
ret
add
bound
inc
add
xchg
add
das
inc
pop
es
add
rolb
sub
dec
adcb
pop
cs
std
push
lods
mov
movsb
pop
mov
stc
inc
push
repz
es
inc
inc
xor
add
call
fdivs
cmp
add
or
adc
push
mov
xor
fcoms
mov
rorl
sahf
pop
cmp
inc
pop
in
push
in
stos
or
test
push
xchg
xlat
sahf
mov
xchg
adc
inc
cs
or
imul
mov
je
or
incl
pxor
xor
mov
push
mov
cmp
pop
jne
lahf
ljmp
inc
mov
out
add
add
push
fldz
call
xor
mov
jl
mov
out
or
test
clc
cmp
les
jecxz
rorb
mov
adcb
cmp
test
std
cmc
and
ds
mov
push
add
dec
jne
outsl
popa
adc
and
dec
cs
mov
and
add
add
test
das
popa
push
mov
cmp
sub
mov
sbb
std
shlb
or
add
or
shrb
mov
inc
mov
setg
lahf
test
out
clc
add
mov
cld
inc
add
mov
cmpsb
aas
sub
movb
mov
cmp
lcall
cmp
mov
jo
ficoml
xor
mov
clc
add
pop
pop
inc
pand
loop
lock
lcall
jmp
fldl
icebp
add
adc
jp
xor
fldt
mov
add
pop
inc
pop
jmp
test
hlt
dec
jns
rcl
and
les
sub
scas
dec
mov
sub
cld
xor
push
or
add
testb
fiaddl
push
aad
add
add
movsl
popf
mov
aas
mov
sbb
bound
pop
sub
add
xchg
pop
mov
aam
and
mov
insb
push
cwtl
cmp
outsl
sub
adc
ret
jbe
enter
cmp
enter
aam
mov
rcll
adc
aad
cmp
pop
adc
fidivl
cmp
cmpsl
xorb
aaa
sbb
sbb
rclb
rorb
push
cltd
popf
mov
xor
jl
and
inc
cmp
in
cmpsb
push
lahf
insl
xorb
sbb
test
daa
adc
call
push
into
adc
imul
pop
or
pop
xchg
fldl2t
add
xchg
call
pop
xchg
or
les
nop
sbb
pop
adc
loopne
add
mov
and
mov
sarl
cmp
mov
adc
orl
mov
aas
mov
add
push
pop
sarb
or
ret
vpavgw
shrb
inc
add
push
xor
push
sbb
enter
daa
and
add
inc
shll
movsl
mov
lods
push
dec
inc
addr16
mov
loope
add
cmpsb
movb
and
gs
je
and
push
dec
dec
mov
jecxz
rolb
sbb
jecxz
mov
jg
out
pop
lcall
jne
pop
cmp
pop
js
and
out
icebp
mov
jmp
out
scas
test
mov
pushf
rol
ss
and
adc
and
imul
ret
push
xor
sub
cltd
cmp
and
les
fimuls
push
add
push
movswl
shrl
and
and
data16
adc
bound
mov
ret
mov
add
add
shrd
push
jle
mov
ss
xlat
inc
sti
sbb
clc
mov
or
cmp
xchg
stc
inc
cmp
dec
jmp
xchg
clc
sub
mov
and
sub
or
push
scas
js
inc
call
push
inc
or
add
xor
lock
js
adc
cld
outsb
inc
negl
shrl
add
sbb
js
jg
fistps
push
sub
or
inc
adc
neg
cmp
mov
lock
fs
and
sbb
or
add
jno
sub
mov
xlat
lea
jbe
jg
lods
jb
lods
cmp
dec
inc
dec
mov
mov
sbb
cmpsb
adc
nop
add
daa
shrb
or
scas
mov
stc
mov
or
sub
mov
subl
int
sbb
jp
mov
loopne
pop
mov
or
pop
jl
and
mov
and
sub
xchg
inc
call
push
push
lock
and
add
call
sarb
mov
jne
add
jl
add
push
mov
push
mov
add
or
pusha
daa
out
into
mov
adcb
xor
filds
sbb
test
or
pop
or
add
pop
push
nop
dec
ds
shl
jne
cmp
mov
push
or
rorb
jecxz
jbe
adc
and
rolb
lea
or
push
pusha
mov
pop
sarl
adc
push
insl
push
jmp
insl
cmp
cld
cld
outsb
call
fisubrs
mov
popl
lock
pop
incb
insl
or
inc
shr
loop
mov
mov
sbb
jns
or
jo
jge
pminsw
idiv
gs
or
pop
data16
fwait
fwait
repnz
inc
popa
je
bound
fwait
push
inc
je
dec
sub
cld
xorb
xchg
jmp
repnz
sub
popf
ljmp
xchg
fcoms
loopne
dec
dec
enter
cmp
sub
icebp
push
enter
movsl
sbb
adc
call
jne
fmull
insl
icebp
sub
clc
fstps
or
and
push
fs
movsb
loope
add
or
push
dec
rol
ret
xor
and
add
divb
add
or
and
inc
xor
cmp
sub
mov
pop
add
push
inc
ja
cmp
sahf
pop
inc
sub
pusha
arpl
cmp
movsl
cltd
rorb
push
sbb
ljmp
mov
hlt
sbb
dec
push
cmp
push
cmp
loopne
inc
lds
inc
cmpsl
hlt
sbb
jp
jno
lahf
pop
push
fs
dec
push
sub
dec
add
cs
popf
ret
xor
xor
enter
jg
jne
mov
pop
cmp
push
imul
cmp
popf
insb
loop
sub
pop
cli
sub
jl
cs
lock
jmp
mov
and
mov
clc
jnp
xor
mov
cmpl
mov
adc
or
push
aam
pop
bound
dec
push
mov
and
add
sub
push
jp
pop
call
mov
or
mov
test
xor
and
lods
mov
insb
xor
and
jbe
jge
xchg
jno
cld
pusha
mov
jecxz
adc
leave
mov
xor
or
out
mov
int
lock
adc
pop
out
pop
cmp
add
gs
mov
les
add
nop
add
and
inc
sbb
add
adc
dec
jne
push
push
jmp
or
jmp
dec
mov
cmp
or
ljmp
addl
inc
bound
add
sbb
pusha
push
sbb
outsb
push
and
or
add
mov
cmp
popf
mov
lahf
adc
sub
ss
push
sbb
sbb
add
data16
incl
or
icebp
xchg
push
sbb
adc
sbb
mov
mov
or
popa
xor
arpl
adcb
push
jns
ss
movsl
movsl
jbe
in
scas
ret
sub
dec
imulb
pop
dec
and
add
imul
cmp
add
scas
xor
push
sbb
arpl
iret
mov
push
cmp
lret
fwait
or
cmp
or
shrb
or
jo
pop
push
out
mov
lea
sbb
movsl
shll
adc
push
jecxz
pop
pop
pusha
or
add
ret
sub
or
enter
mov
out
adc
cmp
push
add
popa
cli
jb
orps
inc
arpl
inc
subb
outsl
mov
adc
sub
push
arpl
dec
les
pushl
cmp
adc
add
sbb
inc
jmp
pop
xchg
inc
push
add
sub
mov
or
jbe
cmp
inc
test
ret
sub
sbb
aas
js
push
push
cmp
pop
rolb
iret
rorb
outsb
test
jns
xor
adc
pop
ss
push
in
cld
jo
and
mov
testl
xor
pop
jmp
adc
inc
inc
arpl
fnstcw
mov
pop
outsl
add
adc
repz
pop
fisubrs
dec
cmp
mov
push
mov
fsubl
jge
xchg
mov
push
lea
or
inc
pop
fsubl
lods
clc
push
xchg
popa
cld
sub
mov
dec
clc
and
sub
push
and
jmp
sbb
adc
bswap
jp
mov
std
les
adc
imul
mov
dec
test
incl
xor
xor
or
xchg
sub
sbb
pop
xchg
mov
loope
cmp
push
pop
incl
lea
jae
mov
pop
or
xor
or
adcl
add
lret
mov
stos
fs
adc
xchg
icebp
pusha
jo
xchg
adc
or
adc
mov
pop
xor
jmp
fisubrs
mov
and
les
or
arpl
cs
jno
inc
mulb
push
sbb
inc
pop
loop
adc
js
adc
das
adc
dec
imulb
add
xor
pop
js
add
call
lock
mov
dec
cmp
lea
or
sar
jg
xor
shr
add
or
push
adc
push
adc
xlat
ficompl
out
fcmovb
jmp
shr
or
mov
add
add
or
bound
rcrl
repz
push
sti
push
sbb
cmp
xchg
sbb
inc
sub
in
push
adc
or
add
int3
sbb
push
sub
clc
flds
xchg
test
sub
lret
add
xor
cmp
lea
mov
shr
cmp
mov
adc
stos
or
mov
add
adc
adc
mov
mov
mov
push
push
dec
test
iret
and
in
stc
out
incb
inc
jbe
imul
subl
call
pusha
add
push
cli
xor
or
shl
mov
mov
adc
push
leave
test
add
ds
push
sub
clc
stos
div
jo
mov
test
test
in
sub
adc
call
call
mov
push
or
cmp
push
add
add
adc
icebp
sbb
mov
cmp
push
insl
and
add
xchg
adc
pop
call
dec
add
sub
jne
add
call
pusha
push
ljmp
and
dec
push
inc
nop
mov
jne
ljmp
shrb
cmp
out
add
mov
add
inc
inc
add
push
add
fld
or
cmp
lret
mov
or
out
leave
inc
xor
dec
cmp
mov
mov
jl
cmpb
jl
xor
subb
idiv
dec
xor
inc
xchg
adc
inc
push
xlat
push
shll
bound
stos
push
adc
push
jg
dec
inc
push
push
mov
push
push
and
pop
nop
iret
ds
mov
rorl
inc
adc
fyl2xp1
and
lret
jne
aam
pop
push
mov
cmp
sub
jmp
adc
cmp
mov
mov
cmpsl
call
loope
aad
fs
and
enter
adc
or
test
jne
jle
jle
cmpsl
flds
and
roll
inc
mov
test
jp
xor
je
mov
pop
mov
push
pop
add
pop
ljmpw
fnstenv
fwait
ret
or
sarb
movsb
test
movsw
xor
lods
mov
inc
push
repnz
adc
add
aam
movsl
xchg
les
data16
and
mov
aam
rclb
mov
xchg
hlt
jge
inc
inc
div
fdiv
fiaddl
es
ja
cmp
inc
sbb
xor
sbb
xorl
adc
int
scas
xor
fcoms
inc
and
xchg
cmpsb
xor
xchg
xchg
inc
sub
adc
sbb
sbb
sbb
xor
imul
fmuls
daa
pop
pop
pop
adcb
cmp
jae
or
jae
lods
rcl
ljmp
dec
and
shr
test
cld
mov
mov
test
jmp
push
aam
je
not
cld
lock
je
idivb
and
je
ljmp
or
push
jo
dec
and
jmp
mov
fidivl
jno
push
add
pop
push
xchg
sub
nop
jle
jne
xchg
mov
fisubs
je
push
or
into
jbe
jns
into
adc
jmp
out
jne
cmc
push
adc
pop
push
push
std
cmp
daa
push
or
adc
inc
cmp
icebp
das
push
int3
adc
adc
add
or
sbb
test
mov
mov
and
mov
push
popa
mov
or
cs
fstpl
push
lret
int3
push
cld
and
sbb
int
dec
pushl
dec
fidivs
fadds
cs
jg
mov
jge
mov
adcl
imul
xor
imul
mov
test
jmp
call
cld
lock
je
das
mov
mov
mov
dec
clc
aas
and
es
mov
je
idiv
int
movsb
and
push
cmp
ja
add
cmp
adc
jmp
loopne
or
shll
leave
roll
mov
cmp
push
arpl
pop
xchg
dec
mov
or
pop
push
cmp
add
call
addb
inc
mov
sahf
jmp
test
xchg
pop
es
loopne
aam
scas
sbb
xlat
fmuls
inc
neg
je
iret
sbb
push
subl
xor
lahf
sbb
xor
and
jnp
mov
cmp
jne
ret
and
pushf
xor
popa
xorl
xor
cmc
sar
fistps
hlt
jmp
mov
push
in
mov
js
xchg
push
clc
and
inc
int
test
mov
add
jno
cmp
push
imul
adc
push
sub
je
rclb
xchg
xor
pop
xchg
xor
lods
xor
mov
test
adc
push
in
or
inc
inc
lods
sti
cltd
add
mov
inc
inc
sbb
ds
dec
add
or
jle
mov
pop
jle
dec
mov
jns
ror
push
rcl
rcl
aad
sahf
out
xlat
fcomp
or
std
add
jns
data16
inc
add
insb
loop
and
into
inc
je
or
dec
lods
push
sbb
mov
sti
sbb
mov
mov
add
push
les
push
inc
push
add
ret
aas
xor
or
divb
cmp
in
jo
jmp
fucomp
jo
icebp
adc
cmp
das
or
pop
xor
push
push
or
adc
or
pop
test
add
push
sarb
jo
lcall
mov
imul
or
aas
xchg
sbb
dec
lea
sar
xchg
les
mov
sbb
neg
aam
adc
mov
mov
push
pusha
loop
cwtl
pushf
out
jl
and
mov
sub
test
adc
mov
test
add
lock
fisubs
adc
or
lock
add
jb
inc
mov
or
dec
aas
dec
push
adc
add
hlt
sbb
or
mov
mov
mov
and
and
lea
pop
sbb
les
andl
decb
xchg
xchg
jge
add
movb
push
inc
sub
add
pop
sarl
inc
inc
or
or
xchg
dec
lock
inc
hlt
inc
cmp
and
inc
jl
mov
dec
test
rolb
or
mov
test
fmull
mov
or
or
aaa
xchg
dec
enter
sub
cmp
popa
pop
sahf
add
movsb
sub
outsl
repz
addl
mov
jge
imul
and
and
lock
loope
rorb
cmp
insb
inc
dec
jle
jne
movb
push
fcomps
mov
cld
or
and
iret
push
loop
hlt
rorb
push
push
push
int
cmpb
dec
mov
cmp
mov
or
ss
pop
mov
in
out
xchg
mov
shl
jmp
dec
es
lods
lock
or
repnz
test
cli
pop
mov
mov
mov
sbb
scas
mov
push
dec
popa
call
movb
mov
adc
faddl
push
sub
sub
lret
xor
mov
mov
xor
mov
rolb
dec
dec
cmp
push
xchg
cmpsl
mov
mov
lock
lods
cmp
mov
ljmp
or
pushw
sub
loop
out
rcl
out
jge
xchg
testb
push
inc
mov
orb
mov
jb
repnz
adc
lods
or
dec
in
inc
shlb
fsubs
call
inc
test
dec
test
sbb
jge
mov
lods
dec
jl
add
mov
or
inc
lds
mov
mov
sbb
fcmovu
mov
mov
mov
add
lods
mov
mov
inc
inc
and
into
repz
clc
sbb
xchg
add
sbb
test
rcll
sbb
sbb
test
lret
lock
fs
add
out
or
jge
loop
sbb
inc
lock
sbb
sbb
and
jne
xchg
movsb
repnz
in
or
cmpsb
xchg
mov
mov
in
cwtl
push
in
scas
push
sub
insb
sbb
adc
inc
add
inc
mov
aas
int3
mov
push
add
push
nop
cmp
cmp
fbld
jle
out
adc
add
cmpsl
sub
mov
mov
xchg
gs
hlt
cmp
jb
push
shll
test
jne
sbb
neg
outsl
idivl
add
jle
inc
imul
rcrl
loopne
mov
mov
loopne
fadds
ret
into
pop
add
and
mov
sarb
mov
push
adc
sub
jo
out
pop
sti
push
xor
mov
add
subl
mov
add
sub
add
cmpsl
sub
out
enter
push
nop
lret
and
stos
xor
cmp
jbe
xabort
mov
mov
mov
negb
test
push
shlb
add
int3
negl
jle
roll
jne
cmp
shll
sarl
in
into
or
mov
inc
ljmp
jmp
call
sub
nop
dec
mov
dec
cmp
jge
sbbb
push
sbb
bound
movb
dec
in
pushf
les
mov
xchg
jecxz
dec
add
add
fadds
mov
repnz
adc
jp
jne
dec
mov
jb
mov
lock
pushfw
adc
dec
inc
ret
and
add
push
add
inc
jbe
pop
mov
xchg
add
mov
add
movsl
test
add
add
mov
jp
mov
mov
adc
call
push
imul
loopne
or
fisttps
jmp
cmpsl
outsl
fs
mov
or
lret
lahf
add
or
cltd
scas
pop
pop
scas
add
cmp
push
fs
adc
mov
test
outsb
xchg
rclb
mov
add
add
cmp
enter
inc
pop
mov
mov
inc
and
cmp
xor
into
push
sub
push
pusha
inc
mov
mov
rcrl
push
mov
or
pop
cmpps
or
nop
mov
adc
xchg
mov
lock
ret
mov
pop
jae
or
add
add
add
ja
add
jl
push
test
jl
or
mov
push
je
dec
pop
popf
jmp
leave
add
or
dec
pop
pusha
test
add
mov
jne
and
ds
loope
mov
mov
into
xor
mov
shlb
pop
push
pmulhuw
lcall
mov
cld
xchg
or
movsb
xorb
inc
shl
or
inc
stos
jg
add
cmp
into
inc
or
cmp
out
xor
add
pop
mov
faddl
and
cltd
ss
or
sbb
add
or
into
rcrl
into
out
push
add
lret
je
leave
repz
and
sbb
inc
jg
into
push
into
mov
lods
mov
pop
or
icebp
push
nop
pop
cwtl
pop
mov
cmpb
rclb
jnp
adc
pop
add
xor
mov
ret
pop
lcall
and
xchg
addr16
or
add
push
add
add
add
imul
and
scas
push
imul
sub
dec
inc
sub
jmp
dec
in
jmp
ret
lods
xchg
lret
xor
sbb
cmp
scas
fiaddl
adc
add
push
cltd
and
loopne
sub
pop
roll
mov
lods
xor
mov
mov
sub
ljmp
push
dec
push
lcall
jnp
cmp
jmp
jle
jb
test
xchg
fimuls
add
sbb
xlat
jle
and
daa
sbb
int3
adc
sub
arpl
std
into
adc
jge
addr16
mov
mov
ljmp
je
stc
xchg
icebp
xor
shlb
or
int3
fs
mov
dec
sbb
or
xor
lahf
cmp
pop
push
loop
xchg
pop
cltd
orb
loopne
xor
jmp
adc
dec
sub
add
push
add
mov
out
je
pusha
int
fisubrs
rorb
jb
mov
lret
inc
inc
int3
call
jle
popa
out
leave
nop
rolb
imul
xchg
out
sub
test
or
xchg
jns
ds
js
jmp
jmp
gs
add
or
cmp
mov
adc
js
faddl
sub
cmp
adc
mov
loope
shrb
rcl
xchg
jne
lods
test
mov
adc
or
dec
iret
mov
inc
jo
jns
andb
out
cmpb
pushl
leave
and
adc
pop
test
ja
testb
xor
mov
hlt
jno
inc
aam
pop
popf
mov
fcoms
inc
movb
pop
mov
into
out
sub
enter
adc
test
push
sbb
shlb
rclb
jmp
push
hlt
add
cltd
popf
jbe
stos
fisttpl
inc
sbb
incl
inc
pop
jge
lea
xchg
inc
mov
cmc
or
pusha
push
pop
push
or
enter
sbb
jl
and
xor
pusha
push
add
lods
enter
push
rcll
mov
adc
sbb
add
bound
das
sahf
mov
jo
shrb
add
lds
bound
daa
jmp
push
push
test
or
xlat
xchg
jb
mov
and
mov
add
fsts
clc
or
lea
sub
or
push
push
sbb
std
xchg
dec
inc
add
fiaddl
inc
push
js
add
jne
push
inc
das
lods
aam
ret
outsb
pop
sbb
pop
cltd
out
aaa
add
pop
fisubl
xor
adc
test
inc
fs
lea
pusha
mov
mov
and
loope
loope
outsl
clc
sub
xorb
rolb
ret
jle
pop
add
aaa
fdiv
clc
mov
cmp
sub
pop
mov
and
xchg
dec
les
sbb
roll
dec
pop
aad
mov
sbb
mov
je
mov
jg
mov
sahf
xor
push
nop
call
mov
mov
cld
add
dec
pop
jl
dec
sbb
lea
or
mov
mov
sbbl
push
push
repnz
imul
lock
dec
mov
gs
push
jae
fsubs
or
jle
movsb
lahf
loopne
jmp
dec
loop
fwait
and
xchg
fisttps
out
dec
ss
mov
js
mov
inc
jg
pusha
add
mov
loope
rcll
mov
add
aad
js
sbb
push
faddl
inc
sar
mov
jge
pop
push
das
add
mov
shrl
sbb
jmp
sbb
call
push
imul
lcall
push
and
rcl
mov
and
sub
or
push
adc
add
add
push
mov
lods
pop
testb
fisubs
and
inc
inc
ds
push
inc
and
or
add
sbb
xchg
mov
mov
cmp
mov
and
stos
dec
xor
insb
inc
adc
and
or
pop
int3
loopne
scas
mov
pop
push
daa
add
test
mov
push
adc
cmp
sbb
xor
mull
push
push
xor
or
lods
popa
xchg
jne
cmp
pop
inc
arpl
xorb
gs
adc
xor
mov
and
loop
rclb
loope
and
jmp
inc
scas
sub
mov
in
out
cvttps2pi
mov
or
aam
pop
aas
je
and
pop
cs
fstps
add
mov
jbe
adc
jne
inc
push
jecxz
push
mov
cmp
jmp
fstps
aam
icebp
lahf
pop
shlb
add
pop
mov
sub
das
fcomp
adc
mov
ret
fstps
push
jo
adc
cs
in
sub
cmp
add
or
pop
rcrl
mov
jmp
mov
out
jl
js
dec
or
in
jnp
idiv
sbb
ret
addr16
movsb
dec
push
add
mov
ret
es
cmp
imul
leave
and
xor
adc
aad
test
bound
xor
pop
mov
mov
lahf
push
testb
pop
jne
mov
mov
loopne
dec
sbb
push
or
shlb
cmp
push
clc
fs
insl
test
cmp
jne
push
inc
ss
jge
or
xchg
rcl
add
adc
pop
sbb
jbe
dec
xor
xchg
sbb
jo
add
or
enter
aas
sbb
repz
or
fcoms
xor
mov
in
fcoms
insb
les
sbb
push
cmpsl
addb
nop
or
insb
in
les
jg
adc
sbb
jne
cmp
in
add
add
cs
lret
out
pop
imul
lock
xor
inc
jo
mov
nop
pop
nop
push
enter
inc
sbbb
push
ret
push
cmp
insb
insl
ljmp
popa
mov
and
dec
and
sub
push
inc
xchg
xchg
mov
or
sub
cmp
test
and
adc
and
xor
les
stos
mov
aam
xchg
in
leave
loope
sarb
or
jo
mov
scas
adc
xchg
fadds
fmuls
cmpsb
fwait
push
or
xor
in
or
pop
pop
sar
lock
add
mov
shll
in
ja
add
inc
cwtl
mov
push
call
cmp
mov
adc
jmp
popa
in
insl
popl
mov
jmp
dec
cmpsb
dec
test
lock
xchg
mov
call
cmpsl
adc
and
xor
add
mov
adc
fstps
dec
cmpsb
cltd
aam
mov
sbb
test
mov
mov
xor
cmpsl
insl
add
and
sbb
add
adc
dec
adc
fs
dec
and
xchg
dec
es
xor
dec
es
fs
inc
sbb
push
mov
insb
add
aaa
fdivrs
sti
jnp
inc
add
mov
roll
mov
xchg
sbb
int3
sbbl
xor
in
add
clc
hlt
jae
or
and
out
inc
clc
jmp
je
xor
add
mov
mov
sbb
movsb
xchg
mov
sbb
fadds
call
xor
add
fwait
aam
int
and
xor
add
dec
mov
or
xchg
jbe
lret
insb
fists
adc
mov
mov
cwtl
pop
rcr
mov
and
mov
cmp
jl
mov
sbb
cmp
hlt
arpl
mov
sub
add
cmp
mov
ret
cmpsl
std
clc
jg
aad
sbb
push
cwtl
movl
movl
xor
sub
rorl
sahf
test
test
nop
add
pushl
iret
pushf
sbbl
add
bound
lahf
lock
push
stc
in
and
adc
lods
ljmp
cmp
dec
mov
in
ss
and
js
call
dec
call
and
movsb
pop
fcoms
mov
fcoms
sbb
nop
push
add
push
jo
jo
adc
out
lock
daa
jns
insl
mov
pop
bound
imul
jns
jge
in
fwait
sub
pushf
sub
nop
mov
adc
jo
dec
mov
xchg
cli
jecxz
ret
jnp
mov
mov
in
fisubl
mov
out
cmc
cld
int3
out
sub
cmp
or
movsb
adc
pop
pop
lods
pushf
jmp
mov
js
xchg
or
xor
shlb
in
loopne
jl
leave
jae
and
fcom
lds
lds
mov
test
icebp
or
test
pusha
nop
outsb
inc
xchg
nop
xlat
test
lods
mov
dec
dec
dec
mov
mov
dec
enter
xor
and
popa
stc
movsb
sub
jns
aad
xchg
sbb
jl
insb
adc
test
and
fwait
dec
add
adcb
insl
and
inc
fcom
xor
or
test
or
xchg
xor
out
fmul
mov
dec
in
jnp
xchg
lock
or
pop
push
or
fldcw
push
push
push
jecxz
xchg
or
xor
call
addb
cld
stos
jno
push
aad
sub
imul
xor
adc
inc
adc
fsubrs
cmp
outsl
rclb
or
mov
inc
xchg
xchg
data16
loopne
fmul
fldenv
sub
call
rcrb
xorb
sub
sbb
outsb
sub
jae
mov
xchg
flds
inc
xchg
outsb
mov
push
in
xchg
push
in
pop
and
add
sbb
inc
xchg
imul
fildll
lahf
pushf
pop
push
enter
in
enter
setg
dec
push
nop
and
dec
shll
pop
ret
out
pop
dec
dec
and
fisttps
adc
mov
jmp
adc
insl
xchg
pop
pop
cltd
pusha
inc
add
leave
jo
adc
sbb
aad
xchg
sbbb
xchg
xchg
ffreep
xchg
imul
adc
outsl
hlt
xchg
inc
push
pop
lcall
leave
out
jg
lods
adc
mov
dec
sub
inc
xor
in
lock
mov
loopne
cwtl
push
movsl
push
dec
jg
in
shlb
pusha
jg
lds
inc
icebp
adc
inc
dec
jo
enter
mov
pusha
aaa
hlt
dec
dec
arpl
push
push
adc
ret
lcall
fimull
roll
lcall
imul
sahf
hlt
insb
mov
dec
hlt
pop
dec
add
add
and
gs
enter
mov
and
sub
lock
lods
fwait
push
sbb
or
lods
lds
cmpsl
inc
add
sbb
add
call
in
out
nop
iret
inc
mov
fdivr
js
test
scas
push
lods
lea
leave
xchg
mov
fs
and
inc
lods
mov
clc
cmpsl
jecxz
shlb
and
or
or
or
enter
or
adc
xchg
xlat
test
dec
adc
aaa
call
xor
sub
inc
imul
push
icebp
or
or
push
xor
cmp
shlb
pop
leave
rorb
lahf
pop
adc
or
movsl
sbb
xchg
inc
movsl
ret
sbb
movsl
imul
fstl
call
sub
xchg
and
test
xchg
dec
mov
es
lods
jl
andb
test
scas
arpl
rcl
add
int
jo
push
test
xor
pop
sub
movsb
adc
xchg
dec
push
nop
decb
popf
rolb
mov
push
xchg
push
shll
inc
inc
sub
call
adc
nop
in
mov
mov
mov
lcall
fsubrl
test
pop
mov
scas
or
cld
jno
addb
sbb
fiaddl
dec
je
les
mov
ret
xor
std
int3
aaa
in
shll
sti
movsl
fisttpll
enter
dec
xor
mov
dec
mov
xchg
mov
shl
enter
cltd
int3
push
push
xor
dec
dec
dec
sarb
mov
cwtl
jmp
pushf
fistl
xor
dec
outsl
movsb
int
add
inc
lcall
push
push
xchg
movsl
add
pop
add
sti
daa
aad
hlt
push
das
xchg
xchg
adc
and
outsb
dec
sbb
and
cmp
mov
mov
mov
xchg
xchg
nop
les
pushf
xchg
aad
dec
lds
out
lds
push
mov
mov
or
pop
pop
xchg
mov
jne
push
xchg
rcr
push
movsb
repz
or
test
cmp
test
pop
fnstsw
push
lds
sbb
pop
mov
popa
push
push
pop
std
mov
in
in
sub
pop
shll
pusha
jg
test
push
jmp
in
mov
xor
lret
xor
adc
enter
data16
lea
pop
ficoml
inc
ds
adc
and
stos
add
add
scas
mov
add
mov
or
add
es
mov
sbb
and
call
loope
stos
pop
iret
push
mov
xchg
sub
outsl
scas
in
add
inc
es
je
jecxz
mov
in
xorl
lods
inc
bound
mov
ja
cmpsl
xor
dec
dec
fwait
lcall
out
les
rorb
mov
imul
rorb
dec
int3
xor
enter
xor
mov
sub
mov
jecxz
xchg
xchg
data16
call
adc
fcom
or
mov
cmp
and
pusha
jne
mov
js
pushf
std
dec
rol
pop
jb
adc
cwtl
dec
lea
inc
inc
subl
fs
imul
pop
cld
inc
mov
dec
lock
shlb
leave
scas
push
in
cmp
jnp
push
jns
cmpsb
xorb
sub
lods
scas
fwait
dec
es
in
test
imul
test
ficoml
inc
aam
xchg
mov
sub
sub
sti
test
int3
dec
mov
rcl
pop
hlt
mov
mov
aam
mov
arpl
pop
push
lods
mov
mov
and
add
cs
loope
or
loopne
mov
or
mov
test
cmp
in
pop
jo
imul
test
add
adc
mov
adc
rclb
mov
or
fcoms
test
add
divl
enter
das
dec
xor
test
rorb
dec
inc
mov
in
mov
add
add
fwait
inc
ds
mov
sti
sar
sub
and
and
push
sub
or
bound
push
pop
nop
addl
mov
mov
enter
jle
pusha
iret
int
cld
mov
cwtl
jne
pushf
add
lods
inc
mov
xor
pop
daa
sub
call
pop
in
int3
enter
adc
les
or
in
pop
mov
mov
nop
cmpsb
lds
mov
lods
test
dec
dec
rorl
popa
adc
loopne
mov
xchg
aam
test
dec
pop
inc
outsl
add
jo
lcall
sbb
inc
push
pusha
out
adc
nop
out
mov
xor
ffree
sarl
dec
enter
bound
stos
fsubr
fistpl
rorb
shrb
lret
frstor
jmp
roll
iret
dec
enter
mov
pop
mov
dec
or
and
sub
shll
mov
arpl
pop
xchg
mov
mov
fiaddl
mov
stos
inc
fcomi
gs
icebp
orb
and
lret
ret
inc
xchg
xchg
imul
add
stos
popa
inc
xor
fisttps
inc
nop
fcompl
mov
or
adc
xchg
sarl
mov
adc
insl
outsl
jo
adc
inc
or
push
shrl
inc
push
pop
pop
rclb
lods
or
lock
add
popa
sub
roll
dec
enter
out
test
xor
fistps
cmc
addb
xor
inc
and
pop
pusha
mov
adc
add
add
and
daa
xor
dec
sarb
push
imul
xchg
scas
mov
push
and
sete
adc
mov
gs
aam
and
cs
mull
sbbl
push
aam
fstpl
cmpsb
push
mov
xor
pop
iret
or
sub
lock
push
mov
iret
cvtps2pi
jo
mov
pop
outsb
in
les
pop
roll
fsubrl
enter
push
xor
int3
sub
adcl
enter
xchg
mov
push
les
push
adc
ljmp
les
push
xchg
les
cmpl
les
int3
cmp
pusha
scas
pusha
push
mov
sarb
add
adc
incl
out
rclb
jns
jecxz
clc
les
push
pop
decl
mov
aad
jne
sub
jne
mov
imul
daa
imul
mov
in
cmc
push
xchg
sbb
jle
or
or
pop
add
rorb
push
jno
jnp
xor
xor
or
adc
jp
jg
pop
mov
mov
jne
cmc
mov
mov
insb
dec
cs
les
fst
sub
les
push
shll
xchg
fdivrl
add
add
mov
pop
call
jnp
pop
pop
sbb
mov
movsb
lret
popa
dec
jae
cltd
add
and
xchg
inc
mov
add
dec
dec
xor
pushf
or
xor
int
rclb
out
or
test
and
sbb
rcll
inc
lods
inc
arpl
roll
mov
and
pop
mov
in
movsb
aam
std
into
test
add
or
adc
dec
nop
fisttps
fldl
inc
adc
out
fidivrs
in
mov
insb
mov
sbb
imul
pop
cmpsl
push
sub
leave
aas
lock
pop
leave
aas
movsl
adc
lods
mov
movl
loopne
fmull
jb
sub
out
bound
inc
out
aam
dec
out
shlb
add
jo
or
test
dec
xor
lret
mov
cmp
cmp
in
loop,pn
daa
sbb
je
mov
ret
xor
inc
or
in
popf
lock
mov
and
in
mov
xor
push
call
pushf
adc
mov
lods
fwait
in
cmp
xlat
xor
insl
xchg
push
andb
jb
nop
dec
cwtl
sbb
inc
imul
xchg
fs
lock
inc
inc
or
bnd
stos
pop
stos
jecxz
jecxz
cltd
data16
push
int
loopne
loopne
mov
or
movb
sbb
xchg
enter
es
out
add
cmp
pop
xor
std
inc
es
add
or
cltd
nop
notl
out
cmpl
and
push
fwait
sbb
lods
jno
inc
mov
ret
xor
push
mov
in
adc
cmp
pop
mov
add
test
cltd
jbe
imul
add
and
sbb
and
ja
or
dec
rcll
fsubrs
adc
ret
sub
in
test
and
in
inc
pop
or
inc
mov
lret
cmpb
repnz
movsl
fdivs
xchg
push
insb
mov
invd
pop
das
and
or
add
or
test
leave
ror
adc
sub
sub
leave
xchg
add
sbb
cmp
or
inc
out
test
and
inc
test
push
scas
mov
scas
inc
sub
call
or
in
cmpsl
in
movsl
mov
call
sub
lahf
lea
jb
jno
cld
adc
sub
rorb
call
add
clc
cltd
push
ss
in
test
or
sbb
add
xchg
in
sub
xchg
cmp
movsl
cs
mov
push
nop
sar
mov
push
dec
mov
sbbb
call
jge
aam
jne
stos
sbbl
pop
mov
dec
loopne,pn
in
sub
mov
loopne
in
jmp
scas
aam
sbb
push
pop
insl
mov
js
mov
sbb
xchg
or
mov
inc
punpcklbw
inc
jecxz
aad
add
fs
cmp
inc
leave
add
sbbb
jb
cmc
or
inc
mov
jmp
xchg
insl
sub
clc
lds
inc
and
mov
dec
and
push
inc
rcll
dec
dec
fadd
fisubrl
fwait
test
push
adc
enter
xchg
flds
loopne
fs
inc
jne
jmp
and
lock
sub
rcl
cmpsb
adcb
call
inc
mov
dec
and
cld
jno
movsb
mov
jg
sbb
pop
push
shlb
pop
cmp
mov
xor
fwait
mov
in
sar
adc
cltd
mov
fs
and
insl
pop
insb
hlt
leave
and
dec
pop
push
js
xchg
dec
xor
shlb
sbb
jno
xchg
cmpsb
cwtl
inc
pusha
fdivs
or
rolb
xor
cmc
les
cmp
loopne
push
cmp
nop
mov
dec
inc
dec
mov
rorb
addr16
xchg
dec
es
dec
je
dec
es
fs
enter
sbb
gs
or
lea
orb
mov
cmp
cltd
je
mov
jb
push
or
adc
pop
or
xor
mov
cmp
ficomps
test
xchg
cmp
lods
or
fwait
test
mov
fistpll
out
mov
addb
mov
and
pop
shrb
loope
fistps
inc
and
adc
popa
pop
aam
sbb
sub
dec
loopne
pusha
mov
adc
cmpsb
mov
push
mov
mov
xchg
leave
daa
and
push
loope
push
stos
push
pop
outsl
inc
test
pop
das
pop
dec
pop
adc
outsl
jne
pusha
push
sbb
mov
sub
pusha
xlat
or
adc
aam
shl
arpl
add
bound
clc
fistl
sbb
fsubs
cltd
int3
inc
add
fcmovnb
sub
or
adc
mov
push
push
les
adc
aam
push
or
test
nop
jecxz
add
xor
jns
daa
dec
shl
add
push
dec
adc
add
add
xchg
jo
sub
push
jae
cli
cmc
ret
pop
push
or
loope
lret
mov
lea
in
sub
mov
mov
nop
xor
mov
stc
or
orb
jge
arpl
cs
inc
fcmovne
mov
jbe
push
mov
lock
fadd
sub
insl
ja
add
xor
jo
inc
add
in
xchg
dec
mov
adc
dec
lods
fisubrl
adc
addr16
lock
out
dec
xor
push
mov
sub
addb
lret
mov
pop
jno
fildll
xchg
add
and
call
rolb
out
clc
pop
sbb
aam
rorb
mov
sub
add
shlb
aaa
sar
fdivrp
mov
adc
aad
es
cli
mov
fadds
cli
scas
fs
fs
dec
es
dec
popf
fs
add
add
xchg
jbe
adcb
es
int
or
pusha
sti
test
and
adc
sub
xor
ficoml
xor
and
sbb
inc
or
mov
sbb
aam
sbb
roll
enter
in
cli
enter
jmp
adc
shl
mov
adc
dec
xor
push
fs
pusha
xchg
insb
scas
js
pop
mov
adc
test
scas
lds
jo
mov
add
nop
cltd
jb
adc
ss
push
aam
fadds
pop
adc
test
dec
insl
adc
cmpsb
jne
push
addb
addl
subl
push
insb
ss
aas
fisubs
mov
sbb
or
or
sahf
push
and
fsts
push
repnz
fldcw
sbb
mov
imul
imul
sub
loop
ss
push
repnz
push
pushf
sub
std
std
shll
xchg
xchg
mov
in
jp
mov
mov
xor
cwtl
sub
jl
dec
lock
pop
inc
in
jle
push
fdivl
pusha
or
aaa
int
dec
and
test
mov
leave
addr16
mov
mov
cli
push
xchg
or
add
leave
ljmp
or
xor
adc
inc
andl
pushf
and
mov
and
push
adc
test
sbb
icebp
dec
mov
xchg
sbb
mov
xor
xor
mov
push
dec
sbb
aaa
es
clc
mov
sbb
maxps
scas
pop
stos
mov
cli
nop
loopne
out
adc
push
adc
add
iret
sar
inc
cld
xlat
inc
add
fadds
cmp
dec
repz
xlat
push
out
mov
pop
nop
mov
idivb
out
movsl
adc
add
jae
out
mov
in
out
or
rcr
inc
cmp
sbb
js
inc
sbb
ljmp
mov
fistpl
or
jnp
mov
add
stc
jg
jns
add
and
jnp
or
adc
mov
out
leave
ljmp
cmpb
or
repz
pusha
pop
pop
dec
push
cmp
cmp
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
adc
or
xchg
push
push
call
pop
pop
pop
popa
bound
gs
imul
jo
jb
je
jbe
js
sbb
jns
xor
xor
xor
ss
cmp
sub
daa
adc
mov
rcll
xchg
adc
pushl
clc
push
or
cmp
rclb
cmpl
out
sbb
aad
repnz
inc
cli
repz
out
push
mov
push
fsubr
pop
sti
decl
je
jb
outsl
arpl
fs
out
sbb
push
dec
imul
int3
aaa
jne
push
aas
lcall
gs
xor
cs
adc
popa
and
popa
je
sbb
outsb
push
test
lods
sbb
lock
pop
in
xchg
xor
incl
mov
jnp
sub
and
mov
outsl
jb
js
je
jb
gs
cmp
or
outsl
add
aaa
adc
add
incb
and
push
gs
pop
pop
lock
push
je
mov
popa
jb
mov
inc
imul
dec
xor
xor
jle
push
cmp
cmp
cmp
and
jns
add
das
shll
push
dec
push
inc
inc
gs
std
fcomps
daa
dec
outsl
jbe
dec
arpl
ds
rcll
je
inc
jne
jne
dec
mov
insb
xchg
mov
inc
jo
imul
jb
push
inc
cmp
out
or
mov
jae
xchg
popl
ja
ja
cmp
push
jne
xor
cmp
and
daa
push
scas
lahf
mulb
sbb
dec
js
push
pushf
jae
mov
jbe
inc
imul
ds
popa
das
jo
or
adc
sub
lock
in
inc
ud0
ficoml
sbb
xchg
pop
adc
jge
add
xor
jg
lahf
and
sub
sub
cs
movsl
cmp
cmp
ds
inc
les
stos
inc
das
pop
pop
dec
jg
stos
adc
cmp
jge
jg
cmp
jo
mov
inc
test
cs
and
push
pop
or
adc
fadd
xor
inc
insb
jae
mov
push
fs
mov
inc
adc
cmpsl
dec
inc
mov
pop
fwait
in
int
jo
insl
and
jb
jbe
lods
fucomp
in
dec
push
push
sbb
inc
sbb
fimuls
inc
and
add
xor
push
scas
ficompl
inc
outsb
push
jo
imul
insl
mov
cltd
pop
mov
je,pn
jo
fdiv
lret
and
mov
and
sbb
pop
fs
scas
xor
mov
or
xorb
insl
xlat
sahf
xor
mov
mov
fistpl
insl
and
insl
push
gs
fiadds
aas
xor
cmpsb
loopne
and
jne
dec
mov
add
insl
les
out
fwait
dec
and
mov
and
mov
mov
sbb
lock
movsl
add
or
fs
popf
jmp
mov
je
or
flds
and
push
ds
xor
fidivrl
ss
push
mov
pop
xchg
sub
movsb
addb
das
arpl
cmp
ss
dec
popa
sub
negb
fiadds
inc
xchg
xchg
pop
pop
push
insb
imul
lods
cmp
int3
or
push
ret
add
sbb
popa
or
sbb
pop
xor
dec
jno
mull
push
push
filds
push
sarl
nop
aaa
xor
mov
fs
xor
hlt
inc
and
cwtl
pop
dec
add
xor
fisubl
outsl
ss
sub
and
fs
xorl
imul
sarb
xor
pop
pop
ficompl
gs
xor
out
inc
test
outsl
push
or
outsl
mov
cmp
cmp
xor
inc
aaa
and
jecxz
insl
in
ljmp
imul
pop
shrl
or
stos
jmp
add
leave
nop
xchg
lds
inc
insl
imul
push
cltd
cmp
xorl
or
insb
popa
and
and
pop
pop
adcb
push
cmp
addr16
popf
mov
xor
fsubrl
pop
pop
pusha
jo
sub
add
sub
push
sub
lret
inc
sub
jne
jo
pop
dec
jmp
mov
pop
cmp
push
and
cmp
mov
mov
cwtl
ja
ds
inc
inc
and
jbe
and
ud0
sahf
pop
fisubl
add
mov
sub
rol
das
lret
outsl
dec
mov
inc
mov
clc
ret
movsl
add
xorl
jae
jae
push
loop
adc
imul
jle
fisttpl
aad
popa
dec
add
xor
in
adc
jae
outsb
js
mov
addr16
dec
pop
add
add
icebp
jne
and
sub
xchg
adc
adc
test
add
add
add
add
jns
cmp
pop
or
aaa
ds
push
pop
hlt
and
in
pop
or
pusha
add
js
or
sub
pushl
data16
sbb
addb
cmp
push
xchg
test
add
fisubs
pop
daa
push
cmpb
in
popf
fnstenv
xor
int3
push
lods
pop
into
jo
add
jo
inc
add
shlb
push
stos
int3
js
mov
pop
dec
rorb
sbb
add
lea
and
nop
xchg
pop
jb
xchg
xchg
xchg
rorb
es
flds
push
and
and
ds
pop
inc
or
cmp
test
add
and
test
dec
cs
test
dec
cmp
je
dec
cmp
adcb
pop
arpl
mov
inc
loopne
xlat
cltd
inc
es
and
sub
xchg
scas
xchg
and
adc
and
adc
add
and
and
add
rcl
add
add
xor
loopne
add
add
mov
push
add
aaa
inc
sbb
push
add
pop
mov
add
shr
and
add
test
mov
ljmp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
jmp
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
jmp
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
inc
roll
incl
inc
test
dec
mov
xchg
sarl
aam
pusha
lcall
int3
fisubl
outsl
ja
add
cs
jae
jb
bound
dec
icebp
popf
mov
stos
inc
ss
popa
outsl
mov
fimull
jne
daa
outsl
lcall
dec
mov
outsl
js
push
push
inc
push
dec
sbb
dec
and
popf
mov
out
mov
dec
mov
stos
aam
mov
in
dec
imul
pop
jns
inc
mov
imul
into
push
and
inc
jb
jns
daa
scas
inc
mov
mov
gs
cmp
bound
mov
xchg
fs
sub
pusha
les
push
mov
mov
jns
outsl
pop
sbb
push
pusha
inc
jbe
push
jnp
jbe
push
push
lahf
mov
jecxz
jns
and
mov
push
dec
clc
jle
dec
fiaddl
cmp
push
or
rcll
and
cmp
xchg
mov
push
push
jae
cmp
and
pop
pop
cmp
call
movsl
jae
addr16
subl
gs
movsl
push
mov
xchg
mov
inc
or
add
out
push
push
dec
testl
dec
divb
xor
cmp
fildll
dec
jge
loope
mov
jg
imul
call
lds
dec
xchg
sbb
xchg
jg
popa
mov
ret
pop
jl
mov
jg
sub
inc
aad
push
or
cmc
fcomps
das
je
outsl
xchg
daa
negb
ret
daa
popw
pop
cmp
sahf
jl
cmp
cmp
push
das
push
fcmovnbe
cmp
inc
jl
push
jle
jbe
imul
addr16
sub
sub
inc
stc
mov
and
cmp
mov
dec
pop
stos
jb
pop
pop
cwtl
jb
sbb
push
jb
lods
xor
adc
xor
int3
lock
lret
lods
or
add
sbb
and
nop
mov
jo
sub
test
sub
or
inc
iret
repz
add
clc
add
loopne
enter
cmp
mov
push
dec
adc
inc
jnp
cmpsl
xor
test
ss
repz
push
xchg
nop
add
test
jge
out
imul
xor
sahf
ja
push
push
push
adc
push
mov
testl
pop
pop
aaa
push
test
inc
repz
rorl
inc
cmp
iret
sub
cmp
push
sub
cmp
repz
add
incl
fdivrl
repz
mov
mov
clc
incb
mov
cmp
push
inc
inc
cmp
iret
repz
std
lock
jns
out
movsb
jl
sub
repz
add
cld
rcrb
sub
cmp
shlb
loopne
sub
xor
stos
sbb
cmpsl
pop
push
outsl
pop
cmpsb
bound
fs
out
push
outsb
sbb
je
push
out
xor
movswl
sub
add
sarb
cmp
rolb
xchg
sub
insb
inc
mov
jg
mov
sbb
dec
inc
dec
xor
cld
std
or
dec
push
push
ret
push
dec
inc
dec
add
dec
dec
inc
add
mov
adc
sub
adc
subl
incl
popa
into
mov
mov
adc
testb
loop
mov
ds
pop
adc
clc
lret
fpatan
or
cli
jb
xchg
jge
arpl
cmp
adc
dec
scas
jg
mov
in
fstl
mov
and
sahf
jg
xchg
cmp
dec
imul
lret
shr
incl
inc
mov
mov
sub
fwait
repz
ds
sbb
pop
jns
ds
xor
incb
jg
int3
dec
dec
xor
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cld
push
int
das
xchg
pop
and
xchg
lret
sahf
icebp
mov
ljmp
cld
or
loopne
cmp
inc
mov
xchg
push
pop
popa
push
or
scas
int
inc
lahf
inc
mov
pop
leave
loop
mov
xchg
dec
xchg
scas
test
js
xor
inc
dec
in
aas
out
mov
pop
pop
repnz
adc
hlt
and
es
xor
flds
sbb
push
mov
outsb
jbe
rolb
inc
push
nop
outsb
and
cmp
inc
cmp
rcll
add
daa
inc
ss
jns
sti
mov
dec
push
dec
push
icebp
jmp
sub
mov
or
and
push
cs
aas
jg
out
jno
sbb
cmp
dec
push
adc
aas
push
aaa
sub
xor
sbb
push
dec
outsl
imul
aas
xor
dec
xor
cmp
xor
inc
cs
jno
jge
mov
jb
jbe
sub
adc
add
out
jbe
inc
dec
or
sbb
push
cs
dec
dec
aas
dec
sub
ja
ret
mov
sub
aas
pop
dec
dec
push
ds
push
add
add
outsl
or
and
lods
dec
in
ret
popa
sti
ss
pop
pop
xor
dec
ljmp
dec
pop
loopne
sub
dec
or
dec
or
sti
sahf
pop
pop
cmp
out
add
push
or
or
or
pushl
sbb
push
inc
push
dec
inc
inc
or
pop
or
push
cmp
or
pop
or
add
js
push
jge
inc
pusha
add
fildll
push
dec
pop
sub
push
or
mov
xchg
jl
gs
aad
adc
sub
sub
push
or
es
test
or
lea
xor
sub
pop
negb
js
adc
aas
mov
dec
push
sub
pop
jge,pt
sub
sub
sbb
inc
sbb
sub
mov
das
sbb
xor
dec
sub
and
and
popa
pop
je
push
pop
das
int3
add
add
pop
jle
cld
dec
pop
mov
push
cmp
aas
push
and
test
mov
mov
aad
imul
xlat
subl
arpl
inc
sbb
and
gs
push
fcomip
out
xchg
or
push
cmp
aaa
push
cmp
dec
inc
or
push
testb
sbb
in
sub
xorb
dec
and
pop
cmp
mov
xor
adc
movsl
xor
pop
adc
dec
jne
cs
nop
dec
cwtl
in
and
xor
rolb
loopne
lock
push
out
lcall
jo
idivl
nop
push
add
outsl
jg
fdivrp
sahf
negl
mov
shl
adc
pop
notl
loopne
xor
push
or
or
mov
push
scas
adc
das
int3
hlt
adc
dec
and
cmp
mov
or
cmp
outsl
insl
mov
inc
popa
outsb
adc
pop
xor
enter
mov
push
popa
loop
add
mov
add
bound
xor
sub
push
or
xchg
pusha
push
jo
scas
mov
loopne
jns
rsqrtps
xor
ror
xor
lock
push
push
jo
mov
mov
and
push
pop
push
lock
push
jns
inc
cmp
ds
add
aaa
adc
and
les
dec
xor
pusha
sub
scas
cs
lods
inc
push
adc
adc
cmp
lock
push
adc
js
stos
ret
aad
inc
jbe
mov
or
sti
popf
pop
or
add
inc
inc
cmp
pop
nop
dec
or
mov
cmc
mov
push
inc
and
push
pop
cmpsb
push
dec
dec
dec
inc
fdivrs
jmp
dec
dec
or
sbb
dec
push
jb
and
sbb
push
insb
push
and
ds
pop
dec
sub
fbstp
fld
lods
sub
push
pusha
sub
or
push
push
jp
cs
jno
add
cmp
ja
mov
adc
sub
mov
out
pop
ja
push
fstl
ss
jnp
push
cs
xor
out
pop
jge
fsub
adc
add
js
jge
fs
or
hlt
outsb
scas
add
dec
pop
or
add
push
xor
push
pop
rorb
mov
pusha
out
jl
pop
cmp
xor
sbb
aas
cs
adc
xor
push
inc
add
ss
das
push
cmp
rol
push
daa
sbb
dec
and
adc
loopne
jmp
dec
cltd
cs
sub
in
mov
ss
pop
ret
inc
cwtl
and
stos
pop
cmp
imul
adc
dec
or
or
push
mov
dec
rcrl
xor
pop
sbb
adc
loop
outsl
cmp
add
mov
lcall
add
das
adc
or
xor
pop
fmul
xor
scas
xchg
inc
and
mov
clc
mov
jae
adc
in
push
call
pusha
addr16
push
dec
cmp
push
dec
rcl
mov
or
and
pop
mov
xchg
or
in
pop
xor
or
pop
pushf
dec
insb
repnz
lods
pop
push
or
dec
popa
and
sbbb
cmp
jge
pop
xor
test
pop
les
adc
sub
das
scas
add
xbegin
ss
sub
bound
cmp
pop
and
push
lahf
and
push
add
mov
idivb
sbb
lret
or
push
xchg
pusha
mov
mov
add
xchg
cs
cmpsb
sub
mov
pushf
add
sub
arpl
push
mov
popa
and
add
add
je
scas
bound
add
ret
stos
sub
adcb
or
cmp
popa
mov
and
or
movsl
xlat
subb
stc
es
jo
push
cmp
mov
mov
icebp
xor
xchg
imul
xor
or
or
inc
imul
pop
or
jg
das
xor
and
sbb
mov
dec
dec
aas
xor
xor
pop
push
sbb
sbb
and
mull
mov
out
std
pop
subb
mov
sub
lods
cmp
push
sahf
repz
dec
inc
mov
popf
dec
out
jae
insl
popa
imul
dec
mov
jo
pop
outsl
jo
outsb
loop
iret
fisubs
push
ja
or
in
data16
inc
adc
iret
repz
outsb
cs
add
les
out
add
mov
pop
mov
add
xchg
jns
das
add
inc
or
test
in
shl
pop
je
sub
fucomip
add
out
xor
sbb
cmp
pop
aaa
lock
push
mov
pop
dec
pop
aas
pop
cmp
ret
das
pop
push
sub
xor
hlt
ja
out
pop
xor
pop
sub
daa
mov
adc
daa
add
dec
push
fs
sbb
in
scas
jo
mov
xlat
push
icebp
psubb
cmp
fcoms
test
push
inc
dec
or
push
sbb
mov
into
pop
pop
add
xor
xor
imul
das
fs
outsb
daa
dec
or
scas
cmp
jp
mov
add
aas
lea
dec
xor
outsb
aaa
add
add
lock
adc
and
push
or
push
cmpsl
jl
das
cs
inc
adc
pop
push
test
aaa
fwait
or
push
pop
out
aas
push
das
jo
mov
pop
ret
out
outsb
std
mov
outsl
jb
bound
outsb
or
push
push
je
mov
mov
push
movb
in
and
and
aam
xchg
inc
adc
dec
or
popa
aas
jg
push
inc
pushw
mov
push
jo
fcompl
push
mov
sahf
out
sbb
out
sahf
out
andl
cmp
add
dec
cltd
or
xchg
dec
shll
cwtl
pop
mov
stos
or
add
adc
xor
jns
and
sub
aas
inc
neg
mov
inc
mov
mov
mov
mov
add
sbb
fldcw
sub
add
or
fwait
dec
mov
adc
pop
add
mov
insb
adc
push
push
dec
verw
int
mov
and
das
mov
and
push
push
das
xor
xor
dec
cmp
cmp
mov
icebp
out
push
roll
inc
push
sbb
imul
mov
addr16
sbb
outsl
and
and
dec
pop
das
cmp
cmp
push
outsb
jae
push
loop
sbb
leave
jns
push
fisubs
aaa
loop
xchg
xor
cmp
imul
lods
inc
shr
inc
pop
pusha
push
xor
push
jl
fcmovnu
ficoml
pop
leave
xchg
jno
inc
add
test
ret
cmpsl
mov
testb
pop
cmp
or
add
in
mov
adc
xor
clc
das
mov
daa
push
sub
push
mov
add
ja
push
sub
xor
gs
xchg
or
push
push
cwtl
cmp
aas
cs
push
cmp
sub
jle
mov
aas
xor
cmp
sbb
inc
xor
or
call
nop
popf
inc
insl
adc
mov
mov
leave
fisubl
les
dec
test
mov
ror
push
ljmp
fmuls
les
pop
dec
dec
adc
xor
push
scas
aad
jae
dec
mov
sbbb
mov
out
jecxz
js
cmp
or
ja
fmuls
and
daa
inc
cmp
mov
dec
pop
add
inc
add
insb
pop
cmp
sbb
sub
xchg
daa
add
imul
xor
push
imul
pusha
adc
daa
fisubs
mov
loope
ds
xor
iret
sbb
sub
dec
ss
or
fiaddl
daa
add
fsubs
adc
sub
inc
xor
jne
fisubs
mov
pop
daa
dec
push
add
or
sub
push
aaa
push
cmp
sar
push
ljmp
movsb
push
lock
cs
push
adc
pusha
nop
dec
inc
iret
xor
push
pusha
fwait
in
fnstcw
adc
adcb
add
jo
cwtl
mov
rcrb
mov
pop
mov
pop
inc
daa
aas
movsl
xor
lcall
jno
jo
and
adc
dec
xor
sbb
clc
aas
dec
fcoms
cld
xor
jge
xchg
inc
inc
inc
pusha
dec
mov
dec
push
inc
mov
dec
outsb
push
add
call
xor
dec
sub
cmp
push
daa
xor
enter
cmp
adc
aam
inc
in
lea
ja
pop
and
popa
imul
mov
xor
cmp
sbb
sbb
icebp
adc
sarl
sbbl
pop
inc
fistps
enter
adc
lods
sub
sahf
sbb
rdtsc
addl
pop
xor
lcall
xor
push
and
mov
dec
sub
add
in
sub
mov
mov
sub
push
adc
and
xor
xchg
and
es
mov
mov
testl
jbe
das
sub
pop
push
call
adc
add
pop
push
test
add
add
adc
cmp
push
push
dec
or
inc
call
inc
sub
cmp
add
or
push
lea
jo
dec
or
inc
outsl
mov
xchg
jno
addb
inc
push
lret
and
idivl
ss
or
inc
sbb
sbb
dec
or
pop
or
push
or
add
sbb
out
jnp
sbb
adc
sbb
xor
or
or
dec
int
outsl
lods
int3
ss
and
pop
and
daa
sahf
jo
mov
cmp
mov
jmp
push
sbb
add
pop
sbb
daa
sahf
mov
inc
fidivs
jg
scas
xor
lcall
pop
fadds
and
add
testb
and
mov
out
adc
sub
in
jnp
push
adc
adc
outsb
call
push
imul
popf
xchg
cltd
or
ret
insl
cmp
test
jb
rcll
pop
sub
pop
ja
sbb
mov
outsl
jnp
adc
lods
fistpl
xor
inc
cmpsl
fidivs
or
pop
mov
movsl
push
aaa
or
and
jno
fs
out
adc
push
lods
jno
and
sub
cmp
pop
lea
add
cmp
jno
mov
push
divb
xchg
inc
push
in
cmpsb
in
adcl
add
test
in
cvttps2pi
mov
enter
mov
rcr
shll
xor
andl
and
aaa
js
and
dec
cmp
xchg
xor
dec
arpl
outsl
aam
push
dec
mov
jmp
adc
mov
sub
lock
pop
push
sbb
push
pop
inc
les
into
test
push
xor
inc
sbb
mov
sub
pop
scas
sti
subl
scas
xor
push
cmpsb
push
cmp
push
mov
nop
aaa
xor
loop
and
inc
jl
mov
cli
outsb
cmp
push
testl
jmp
jl
imul
fimuls
inc
dec
and
pop
sub
daa
cmp
int3
into
add
pop
dec
xchg
add
xchg
xchg
sub
add
movsl
stos
ss
in
fwait
xor
sub
add
and
sbb
or
daa
in
testl
adc
or
xor
aam
daa
insb
sbb
ss
inc
negl
fadds
icebp
pop
mov
pop
aaa
mov
cmp
add
andl
and
imulb
je
jo
insb
gs
sahf
jg
data16
ja
fs
gs
push
mov
mov
add
lods
xor
xor
mov
inc
jb
pop
repnz
cmpsb
push
sub
mov
mov
jo
inc
add
sub
sti
mov
push
pusha
sub
push
xor
inc
pop
cmp
xor
xorb
cmp
cmp
push
aas
add
push
jo
repz
mov
dec
subl
cmp
out
rclb
pop
add
sub
rorb
fldl
getsec
sbb
ljmp
shlb
mov
mov
das
sbb
lcall
mov
adc
mov
mov
lods
pop
dec
movsl
enter
push
push
mov
roll
ss
adc
cli
mov
jle
das
mulb
sub
mov
sbb
mov
sub
and
xor
pop
sbb
xchg
fsubs
jg
or
pop
test
xor
dec
xchg
pop
sarl
pop
repnz
dec
push
add
pop
adc
das
in
pop
adc
aad
and
xor
cmp
mov
pop
in
fcoms
or
inc
jb
out
mov
mov
push
dec
imul
dec
push
inc
pop
xor
xchg
pushf
cmp
and
add
and
dec
sahf
xchg
out
xor
cmp
in
cmp
mov
mov
nop
dec
addb
lock
js
cmp
ret
daa
mov
push
dec
push
dec
pop
int3
ss
test
dec
clc
pop
xor
push
push
dec
pop
divb
std
mov
ss
cmp
xor
xor
inc
xor
inc
aad
sub
push
or
push
push
xor
bound
adc
jbe
cmp
inc
mov
outsb
add
mov
js
out
dec
sbbb
jg
ret
push
dec
jp
out
push
or
and
jb
jo
clc
lret
pop
xchg
bound
je
bound
mov
or
pop
insb
push
loopne
inc
stos
and
sub
mov
add
pop
loopne
aaa
jg
ja
mov
add
inc
push
call
pop
push
push
mov
es
cmp
adc
sahf
add
ja
mov
pop
enter
iret
or
aaa
cwtl
and
push
xchg
and
rorb
popl
adc
cld
mov
xchg
push
push
push
sbb
push
xor
or
insb
mov
mov
xor
lcall
and
inc
sbb
outsb
inc
aas
xor
jns
fcmovb
pop
dec
clc
xor
cli
outsl
inc
shlb
addr16
inc
mov
xor
or
jg
jge
movsb
loopne
das
pop
push
pop
adc
mov
cmp
pushf
outsl
scas
in
out
add
inc
add
stc
lcall
es
lret
pop
fdivp
sarl
push
sti
inc
mov
xchg
int3
pop
mov
jg
and
fsts
xchg
xor
loop
push
test
and
mull
jl
mov
aaa
pop
mov
fnstcw
scas
fnstcw
xchg
mov
shlb
shrb
out
mov
mov
aas
cmpsl
mov
imul
sti
push
sysret
sub
loop
sti
loopne
aaa
push
pop
lods
popa
scas
mov
cwtl
cmp
sahf
testb
ret
push
popf
push
sbb
push
mov
inc
ss
sbb
adc
cs
mov
faddl
in
fnsave
js
cmp
repz
adc
dec
mov
lahf
mov
mov
das
int3
push
mov
imul
mov
movsb
dec
scas
xchg
cmp
sti
lret
mov
insb
push
popf
push
stos
jmp
repz
cmp
xor
outsl
pop
es
mov
repz
push
pop
mov
xchg
iret
jnp
sti
pop
sub
nop
not
movsl
push
and
sysret
outsl
aaa
push
mov
test
outsl
push
pop
int3
dec
int
push
cmpsb
cs
repz
repz
fwait
sarl
data16
dec
mov
mov
mov
iret
icebp
jmp
xchg
es
push
jns
fisttps
push
sbb
popf
mov
cmp
xchg
inc
jbe
imul
sarl
in
sub
push
push
jae
lahf
out
xchg
mov
xor
push
ficomps
out
andb
ret
jns
iret
jnp
push
add
sti
cmp
repz
sbbb
cmp
repz
stos
shl
repz
idiv
and
out
sahf
xchg
mov
and
repz
push
insl
xchg
scas
or
into
sti
xlat
xchg
push
add
pop
and
aad
pop
dec
sbb
scas
sub
or
icebp
out
jmp
imul
adc
adc
push
mov
xor
adc
or
pop
pop
mov
bound
push
mov
imul
mov
aaa
sub
pop
sbb
enter
adc
stc
jg
xchg
inc
repnz
iret
pusha
or
test
cmp
in
push
cmp
and
cmp
pop
push
mov
imul
push
jae
popa
aas
sbb
and
inc
push
cmp
daa
inc
sbb
or
lods
jo
addr16
push
mov
mov
jae
fisubl
into
test
ficoml
out
sbb
cmp
dec
dec
mov
insl
push
ljmp
cmpsb
dec
add
stos
mov
push
inc
cmpsb
push
insb
pop
mov
push
dec
pop
je
jns
mov
fisttps
jp
das
ja
outsl
mov
xchg
outsb
push
fnstsw
fadds
push
pop
shlw
dec
or
push
dec
mov
ja
lods
push
test
and
cwtl
push
popl
jns
out
test
push
inc
sbb
cmp
push
ds
xor
or
divb
aaa
or
es
insl
jo
es
insb
je
out
daa
out
adc
addr16
jo
jae
es
outsl
ss
push
and
cmpb
sub
out
into
or
cmpsb
mov
mov
ljmp
xor
xor
xor
xor
cmp
aaa
sti
popf
inc
cmp
xor
xor
cmp
push
add
cmp
sbb
or
pop
mov
push
aaa
or
daa
dec
add
add
imul
sub
dec
or
xlat
add
ret
lret
add
mov
cld
cmp
lahf
adcb
inc
sub
ljmp
sub
dec
pop
or
rcll
cmp
push
add
test
dec
adc
mov
aas
dec
dec
mov
fimuls
pop
ss
cmp
mov
jge
sub
jbe
or
fiadds
cwtl
lea
pop
dec
dec
pop
jo
add
jecxz
cmp
and
iret
inc
xchg
mov
sti
ja
pop
push
push
push
add
push
xor
xor
jne
mov
push
subl
daa
adc
xor
pop
ret
daa
nop
or
cmp
sbbl
adc
jecxz
adc
sub
cmp
aaa
lcall
dec
or
mov
dec
js
mov
fidivl
push
das
and
push
and
jg
arpl
push
dec
dec
sub
push
xchg
or
idivb
xorl
sub
inc
add
dec
jae
jb
jae
cmp
xor
add
adc
push
and
das
popf
aaa
and
mov
push
pop
dec
pop
aaa
lahf
lea
mov
scas
ljmp
daa
and
mov
add
outsb
mov
adc
daa
lods
inc
sub
shll
jge
lods
testb
das
add
adc
aaa
iret
or
mov
xor
popf
pop
ret
adc
imul
sub
xchg
xor
cmp
mov
test
sbb
es
dec
mov
dec
aaa
push
fisttpl
pushf
inc
cmp
fnstcw
adc
sbb
imul
pop
scas
pop
lock
lock
daa
lahf
pop
shrl
push
xchg
outsb
popl
pusha
in
lods
dec
xor
int
mov
push
andb
or
cld
xor
divl
enter
out
push
fildl
xchg
pop
and
lcall
or
dec
mov
loope
xor
outsl
lret
loop
xor
in
ds
dec
mov
sub
add
sub
inc
js
or
jl
lcall
imul
inc
add
ffree
xor
mov
out
and
push
dec
orb
add
dec
js
xchg
mov
mov
pop
xchg
lea
adc
aad
adc
adc
ja
mov
push
sbb
sub
addl
fsub
cmpsl
and
lea
or
loop
jb
dec
shrb
das
jle
adc
pop
add
or
jl
xor
popa
push
mov
and
pop
mov
es
pop
dec
fdivrl
adc
das
sbb
nop
cmp
and
aas
addr16
loop
pop
addr16
out
inc
clc
push
push
dec
adc
adc
sub
and
sub
test
sbb
mov
inc
push
je,pn
enter
shrl
ds
icebp
xor
or
push
pop
mov
xor
sbb
fcmovne
cmp
negl
add
and
fs
mov
fadd
dec
xchg
adc
push
dec
test
inc
cs
shll
and
in
sahf
out
xor
das
add
pop
xor
add
pusha
adc
test
add
cs
adc
mov
popa
cwtl
xor
push
dec
pop
add
adc
ret
lods
repnz
pop
cmpsb
inc
or
pop
sbb
cltd
pushf
push
ss
pop
faddl
adc
cmp
rcrl
cli
outsb
pop
mov
aad
xor
aam
or
xor
dec
jb
aas
pop
sbb
xchg
fs
push
loop
inc
xor
push
mov
cmp
sub
xor
xchg
xor
push
lods
pop
xchg
or
jnp
pop
addb
cmp
push
or
add
data16
push
lock
xor
pop
shlb
mov
fsubs
shlw
inc
jbe
push
mov
sbbb
cwtl
cltd
js
inc
push
sbb
mov
sbb
cs
pinsrw
dec
js
es
add
cwtl
mov
cs
jb
jno
mov
dec
xchg
adc
jg
cmp
cmp
movsb
es
mov
in
xor
negl
cmp
add
pop
push
pop
jecxz
comiss
movsb
les
add
testb
pop
and
and
leave
sbb
jb
inc
push
xor
jo
out
inc
les
arpl
xlat
or
pop
inc
inc
cmp
inc
sub
popf
rclb
add
cmp
or
inc
push
sub
jg
shl
jb
jo
movsb
nop
ds
bound
mov
je
or
imul
xchg
push
add
add
out
pop
dec
inc
push
cli
or
inc
rcll
push
push
mov
pop
push
add
or
aaa
cld
filds
push
dec
or
sbb
jo
dec
pop
ss
dec
dec
sbb
sbb
pop
dec
and
inc
or
or
adc
push
and
or
mov
dec
dec
push
pop
pop
push
sub
cmp
push
inc
xor
add
inc
xchg
stos
pusha
lds
inc
adc
lret
out
mov
push
dec
sbb
dec
push
cs
add
cs
cmp
jg
std
and
pop
cmp
xchg
mov
xor
inc
sub
es
incl
push
inc
dec
xor
and
das
sidtl
dec
add
inc
sbb
add
push
add
pop
pop
hlt
pushl
sbb
dec
pop
aaa
sbb
pop
cmp
test
jecxz
mulb
or
repnz
jnp
pop
add
adc
push
inc
xor
and
aaa
or
add
pop
adc
arpl
call
outsb
sub
push
push
pushf
test
into
adc
inc
jo
or
out
dec
cmp
add
xor
sub
adc
push
adc
dec
les
pop
push
outsl
inc
rolb
mov
mov
adc
sub
push
lret
add
shlb
inc
pop
shlb
out
ds
jo
jb,pn
add
aas
jge
mov
jns
push
push
or
icebp
out
push
push
push
push
inc
push
dec
inc
dec
push
dec
pop
subb
rolb
push
outsl
pop
std
and
push
jg
dec
xchg
into
sub
and
call
push
pop
sbb
das
call
cmp
cmp
cmp
dec
xchg
rcrb
outsb
in
sub
pop
push
daa
cmp
imul
pop
daa
or
push
push
dec
push
and
outsl
dec
pop
push
and
wbinvd
and
jg
cwtl
das
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
xor
stos
cwtl
stos
pop
fmuls
adc
jmp
jge
push
je
mov
andb
fwait
rol
fwait
in
inc
mov
jg
orl
jmp
dec
fsubrl
jg
stc
jbe
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
jmp
push
sub
adc
or
cs
insl
sub
adc
or
or
cs
dec
ret
sub
xchg
mov
data16
mov
call
cltd
test
pushl
push
push
shll
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
dec
pushf
pop
rep
cs
outsl
arpl
test
add
mov
mov
movsb
idiv
jmp
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
fwait
stos
flds
pop
ss
sub
push
jo
inc
inc
cmp
or
es
dec
cmp
pushl
push
bound
sub
dec
pop
pushw
aas
cmp
and
addr16
add
ljmp
xor
cmp
outsl
dec
cmp
pop
push
jge
pop
and
je
insb
push
dec
inc
insl
fs
dec
inc
pop
jae
pushl
push
outsb
jne
push
cmp
testb
mov
in
lcall
sub
stos
fidivs
inc
xor
pop
ret
into
fldt
aaa
inc
push
inc
jbe,pn
mov
pop
cmovb
pop
ss
cmpsl
ss
daa
mov
data16
or
test
mov
adc
orb
hlt
sbb
pusha
adc
xor
jp
sub
lahf
pop
jbe
sub
test
or
bound
iret
jle
xor
inc
or
jo
or
out
adc
mov
pop
dec
mov
xor
or
push
aaa
mov
sub
adc
mov
jle
add
xor
ret
xor
inc
sub
test
loop
inc
push
cwtl
lods
sbb
or
push
pusha
add
vmread
pop
loopne
int
or
xor
xor
or
pop
cmpsl
push
xchg
jg
in
sub
aam
cs
adc
sbb
push
dec
or
jp
dec
mov
mov
in
push
sbb
mov
fcom
int
enter
push
sub
or
addb
add
or
sbb
push
adc
icebp
rcrb
sbb
pop
cmp
popa
stos
in
push
dec
xor
cmp
pop
jbe
push
mov
in
out
jge
aas
jmp
and
inc
jmp
sub
aas
mov
sarb
xchg
push
lods
fildl
sbb
xchg
call
pop
es
cmp
cwtl
push
sub
scas
adc
in
sbb
fs
pop
adc
push
mov
loope
adc
sub
out
push
pop
outsl
aaa
push
sub
setle
fcoml
cwtl
dec
mov
and
or
xchg
pop
stos
into
adc
or
add
mov
and
adc
bound
add
pop
or
jbe
outsb
outsb
je
xor
js
xor
imul
cmp
xor
pushf
xor
mov
jae
cmp
dec
and
psadbw
xor
scas
mov
insl
loop
pop
push
dec
out
pusha
push
loope
jbe
stos
inc
outsl
insb
add
dec
push
popa
je
push
xchg
lea
sbb
mov
add
int
push
or
testb
or
rclb
or
push
fisttpll
pop
sbb
cmc
inc
xor
xor
and
and
or
shlb
cmp
mov
lret
pushf
add
test
in
mov
push
dec
jb
fdivrs
cmc
mov
or
xlat
and
sub
stos
or
ss
cmp
xor
dec
push
cmp
pop
inc
jnp
push
sbb
push
ds
repz
and
popa
insb
mov
ds
adc
sahf
lds
adc
loopne
pop
xor
adc
and
loopne
and
push
lea
das
sub
aas
nop
push
push
add
test
pop
push
mov
popa
jb
mov
shlb
repz
in
jae
faddl
mov
sub
xor
cmp
push
push
mov
inc
jp
popa
ja
and
jo
adc
leave
test
jg
inc
dec
test
mov
ja
mov
pop
adc
and
sbb
pop
push
or
pop
roll
sub
add
sbb
ret
sub
pop
aam
sub
fs
jo
scas
pop
xchg
dec
xchg
or
xchg
push
sub
push
pushw
aas
ss
pop
xlat
mov
ds
or
das
aaa
pop
and
movsl
dec
pushf
fbld
divb
or
xor
scas
cmp
adcl
arpl
xor
mov
popa
pop
xchg
loop
nop
pop
sbb
lods
and
dec
cmp
xor
xor
pop
push
ret
push
sarb
add
xchg
push
xor
inc
sub
inc
hlt
mov
and
std
inc
push
lahf
dec
ja
sbb
dec
lcall
pop
shrb
push
inc
add
xor
push
dec
xchg
insb
jmp
xor
test
inc
ja
andps
aaa
iret
imul
xlat
outsb
mov
fwait
mov
pop
dec
adcl
loopne
fidivrs
pop
pop
pop
cmp
push
push
sbb
or
mov
pop
xchg
sbb
dec
pop
movsl
mov
pop
and
dec
pop
repz
ja
out
cs
push
xchg
subl
cli
mov
aam
xor
or
lods
xor
push
pop
stos
xchg
subb
insl
dec
inc
adc
imul
cmpl
mov
inc
es
sub
sub
inc
dec
mov
inc
fildl
and
add
cmp
dec
rcrl
add
xor
inc
sub
gs
sub
in
sub
mov
fs
sub
mov
jae
push
popa
sub
dec
outsl
and
xor
pop
mov
mov
inc
mov
punpckhwd
dec
outsb
push
je
mov
sbb
scas
pop
jae
lock
push
insb
mov
sub
dec
push
inc
pop
push
dec
inc
dec
inc
push
pop
mov
push
dec
xchg
cmp
gs
mov
fiadds
daa
inc
push
fwait
pop
add
or
dec
push
dec
jb
addb
inc
inc
aas
adc
ret
out
adc
in
jo
rclb
fs
xchg
sub
cs
rclb
jp,pn
mov
adc
dec
insb
push
sar
add
cld
sub
mov
xorl
jns
jb
mov
adc
push
or
push
clc
test
dec
pop
sbb
pop
addb
pusha
push
aas
xchg
hlt
shld
insl
es
cmp
adc
jnp
dec
daa
bound
adc
flds
insl
add
push
push
ljmp
inc
cmpsb
test
mov
mov
cltd
adc
xor
adc
mov
add
or
xchg
cmc
push
or
push
xor
add
ds
push
lret
sbb
mov
lret
pop
add
adc
push
sbb
lcall
insb
pop
cmp
outsl
outsb
loopne
dec
sub
xlat
iret
add
mov
inc
jl
insl
push
jo
mov
arpl
shrb
jge
mov
and
lock
fdivs
jp
notb
testl
enter
inc
das
mov
dec
sub
insb
dec
add
push
in
xchg
dec
inc
xadd
flds
inc
xchg
inc
cmovo
lcall
mov
mov
nop
jo
maxps
dec
movl
pop
xchg
add
adcb
push
inc
pop
int3
insl
scas
sbb
aas
add
xorl
test
addr16
dec
inc
movsb
add
daa
sub
jne
jnp
and
cmp
inc
add
outsl
ror
cmpsl
ja
mov
add
iret
test
daa
test
cwtl
test
mov
in
test
cwtl
xchg
sahf
mov
pop
hlt
cld
arpl
addr16
data16
dec
outsl
mov
in
scas
in
inc
cmp
xor
scas
in
sub
cmp
add
pop
xchg
cmpsb
test
fcomps
ds
roll
mov
gs
ds
ss
je
pop
mov
iret
sarl
and
pop
sub
hlt
out
iret
mov
push
repz
pop
pop
push
test
jns
iret
adc
pop
fadd
in
cmpsl
clc
cmp
enter
pop
push
push
xor
les
push
mov
xchg
push
xchg
int3
icebp
or
out
dec
inc
fists
shlb
mov
pop
dec
mov
int3
imul
pop
jl
in
cld
add
or
add
add
push
adc
cmp
sub
testb
add
or
push
jg
jg
pop
mov
test
and
dec
pop
in
in
mov
outsl
add
mov
inc
aaa
adc
test
pop
das
inc
push
xchg
or
rorl
add
leave
mov
inc
or
inc
jns
in
mov
in
sub
das
in
and
pop
adc
in
ss
add
dec
xchg
sub
cmp
test
pop
scas
or
js
xchg
popa
mov
add
and
xor
dec
lcall
imull
in
add
dec
push
adc
pop
mov
call
out
jb
inc
mov
xor
jae
inc
jb
pop
pop
ficoml
xor
pop
enter
scas
fs
xor
pushf
fiaddl
jl
call
jns
movsb
sub
test
dec
pop
scas
in
fs
je
shll
mov
pusha
xlat
dec
xchg
and
add
inc
mov
add
clc
ja
and
xor
dec
xchg
push
sub
in
fwait
nop
pop
pop
pop
insb
push
js
ffreep
push
xor
add
and
in
and
and
sub
and
lods
mov
pop
jbe
or
and
add
insb
mov
xor
out
outsb
pop
or
mov
and
test
daa
mov
xchg
pop
push
aaa
addr16
push
push
data16
dec
mov
outsl
hlt
idiv
add
push
jb
cmp
add
ss
das
cmpsb
lahf
mov
iret
lcall
jl
xchg
or
xchg
cmpsb
outsl
in
push
rclb
cs
movsb
xchg
push
pushaw
mov
sbb
mov
test
mov
or
ja
popa
mul
add
mov
sub
lds
jo
push
push
outsl
rorb
inc
pop
cmp
xchg
daa
testl
shlb
push
add
cmpsb
mov
mov
clc
gs
pusha
enter
sub
pause
xchg
push
cwtl
mulb
bound
pushf
pusha
jp
xor
jl
popa
or
in
mov
xlat
or
enter
popa
mov
aad
jbe
daa
xlat
or
shrl
xor
fs
test
xchg
xor
or
mov
dec
arpl
pop
arpl
testl
and
ss
sub
inc
cld
add
fs
jl
loopne
adc
cwtl
push
and
aaa
rorl
or
shrl
ja
add
push
cmpsb
xchg
aaa
mov
sub
andb
xor
shlb
out
dec
sahf
add
or
and
jg
in
sahf
pop
add
repnz
insl
fs
add
jg
addr16
or
faddl
lods
in
add
mov
in
sub
jnp
dec
enter
push
adc
outsl
dec
ficoms
or
or
pop
pop
cmpsb
cwtl
outsw
in
inc
pop
test
fcoms
enter
aaa
add
pop
rcl
hlt
xchg
inc
addr16
and
leave
mov
or
pusha
shlb
sahf
iret
outsb
push
mov
daa
dec
out
int3
lahf
or
add
cmovg
push
or
cmp
rorl
add
imul
dec
ja
cmpsl
int3
js
xchg
jo
test
or
push
dec
leave
or
xor
or
out
mov
mov
xchg
push
xor
add
dec
leave
adc
or
imul
and
push
mov
ficoms
ss
scas
loopne
nop
pop
add
add
mov
fisubs
ror
fsubrl
dec
cs
mov
add
out
push
addr16
pop
or
jo
or
addr16
nop
sub
add
xor
push
add
movsb
loopne
imul
xor
or
xlat
sbb
jl
insl
insb
insl
and
and
ss
pop
js
push
insb
xchg
enter
dec
push
jl
ss
test
das
or
ja
inc
ret
lds
hlt
outsl
movsb
pop
or
pop
jb
dec
sbb
fsubs
mov
xlat
data16
aad
filds
pop
out
iret
lds
push
add
rcll
cwtl
aas
sbb
addr16
pop
mov
js
out
and
sub
mov
jns
call
ds
repz
out
cli
and
pop
cmpsl
stc
cmp
andb
out
sahf
bound
insl
cmp
repz
dec
andb
loopne
outsb
xchg
out
cmp
and
jl
cmpsl
je
out
jno
iret
repz
arpl
lahf
out
lcall
jae
out
ss
movsl
fstps
jne
lcall
adc
jl
out
push
mov
cmp
ds
shrl
lock
repz
out
fmull
inc
andl
js
repz
mov
dec
cmpsb
sahf
out
ds
mov
iret
sarl
mov
cmp
out
xor
jg
imul
repz
adcb
jl
push
test
sub
or
xor
sbb
mov
test
mov
out
xchg
shrl
mov
mov
int
adc
cmp
jnp
cmp
sarl
lret
xor
cmpsl
stc
cmp
or
cmpsl
fnstcw
push
nop
xchg
cmc
inc
xchg
stc
cmp
ja
push
sub
repz
cmpsl
push
scas
mov
xchg
push
push
mov
push
sarl
stos
popa
xchg
mov
iret
mov
cs
movsb
pop
lcall
fwait
scas
xor
fwait
push
popf
push
push
push
sahf
dec
addr16
push
mov
xchg
lahf
push
fcomps
mov
adc
repz
xor
sahf
cmpsl
stc
das
movsb
jne
fsubs
movsl
ja
iret
rcll
sbb
or
sahf
pop
nop
add
cmpsl
stc
cmp
add
out
jl
stos
mov
sahf
data16
outsb
lods
push
lods
push
cwtl
cmp
out
sar
mov
es
push
sarl
enter
add
out
mov
sub
lods
mov
repz
mov
mov
add
mov
out
and
jl
out
shrb
rcll
ds
xchg
imull
movb
and
xor
out
outsb
mov
ss
iret
rep
stc
nop
enter
lret
out
imul
imul
adc
lahf
mov
add
and
add
inc
cmpsl
push
call
fmulp
jno
jns
daa
frstor
dec
push
add
jnp
in
and
xchg
jb
out
into
inc
stos
ja
add
add
test
fistps
mov
pop
xchg
cmove
test
adc
sarb
adc
lods
ss
dec
and
fidivrl
pushl
adc
rcrb
and
mov
sbb
mov
enter
pop
or
add
in
mov
rolb
pop
xor
das
jl
mov
xlat
ss
outsl
loope
shll
dec
out
add
xchg
pop
mov
jbe
sahf
push
pop
jbe
mov
jp
push
fistpll
leave
and
add
mov
mov
adc
aas
mov
imul
fxch
shlb
dec
fnsave
data16
or
es
in
in
adc
inc
es
in
enter
iret
fucomip
jne
mov
in
fidivs
push
inc
push
push
icebp
cs
mov
incl
jno
pop
xlat
aaa
pop
mov
scas
rcr
int3
push
daa
fmull
mov
repz
fildll
aas
rorl
inc
add
cmc
mov
ds
lahf
mov
cmpsb
push
jb
ja
sbb
cli
pop
clc
mov
inc
mov
scas
cmp
ss
outsl
andl
addl
aam
inc
jg
jbe
enter
sub
dec
mov
leave
cmc
push
xlat
push
aas
bound
dec
or
pop
and
out
add
test
js
jns
rol
out
sub
inc
inc
inc
inc
je
ja
inc
and
add
mov
arpl
jb
and
je
fs
jns
cmp
push
scas
test
lods
in
xchg
int3
mov
pop
aas
in
and
mov
inc
out
xor
inc
test
cmp
inc
jp
jp
push
inc
fcompl
jg
mov
pop
ja
cmp
fwait
imul
jne
leave
push
add
add
xchg
pop
leave
jae
fdivr
add
in
xchg
insb
or
adc
sbb
xchg
out
xchg
aaa
push
add
xchg
dec
cs
mov
sub
dec
mov
sysexit
fs
hlt
jnp
jnp
sbb
add
inc
scas
dec
or
enter
jl
jl
and
enter
push
enter
iret
hlt
insb
inc
in
add
inc
insb
inc
lahf
gs
outsl
jns
pop
jo
jg
jge
in
enter
sbb
mov
or
pusha
insb
mov
in
jge
inc
insl
notl
dec
dec
mov
xorb
lods
mov
loopne
add
jb
push
test
dec
jle
inc
inc
dec
cmp
cmp
pushf
pop
xor
dec
pop
test
or
cmp
jg
insl
mov
push
outsb
adc
push
add
cmp
repz
add
add
iret
push
dec
pop
push
or
and
inc
xchg
leave
and
test
les
fcomps
cmp
dec
leave
jmp
sbb
or
sahf
orl
sub
mov
xchg
jl
add
push
adc
xchg
out
cwtl
adc
xor
jb
sbb
outsl
das
outsl
xchg
daa
pop
leave
les
gs
out
daa
insl
cmpsb
add
xorb
jl
push
or
jb
mov
jb
pop
jb
pop
icebp
mov
jb
add
jo
jo
leave
and
sbb
cmp
add
inc
push
pop
mov
subps
pop
and
xchg
inc
incb
jo
out
pop
mov
mov
sahf
fcmovne
add
add
dec
fcoms
lods
pop
xchg
xchg
xchg
addl
cmpl
push
pop
push
mov
mov
mov
or
test
mov
xchg
sahf
push
scas
push
in
addl
aas
add
adcl
xor
cltd
inc
dec
jo
test
test
rorl
das
jl
adc
push
test
popa
pop
and
cmp
push
leave
adc
ret
or
adc
cld
pop
jb
xchg
adc
jb
ja
insl
and
leave
jg
xor
lods
xchg
pop
fcmovne
leave
mov
les
mov
xchg
jb
test
test
mov
cmpsl
or
sbb
pop
pop
jle
inc
jae
dec
jae
jae
jae
pop
pop
pop
imul
jae
out
pop
xchg
jae
push
or
jns
or
or
out
sahf
out
xlat
push
loop
int
jns
in
adc
adc
je
cmp
repz
adc
sub
cmp
repz
push
sbb
cmpsl
je
and
negl
dec
mov
mov
leave
and
xchg
jo
jne
pop
leave
and
iret
int
cmp
add
mov
xorb
sub
leave
mov
pop
jb
cs
cli
nop
and
js
ss
jbe,pn
pushf
mov
cltd
lret
mov
scas
lock
sbb
sti
lds
dec
mov
xchg
or
mov
and
ljmp
xchg
and
add
ja
ja
jb
mov
das
and
sub
ja
xor
push
idivl
pusha
in
inc
in
add
lret
mov
cmp
dec
test
cmp
daa
xchg
call
pop
push
ja
leave
imul
daa
adc
fsub
adc
outsl
pop
out
je
dec
ret
aas
add
xchg
mov
sbb
mov
loope
daa
and
mov
xchg
mov
ficoml
mov
in
ret
sbb
jns
in
mov
xor
and
leave
inc
dec
repnz
mov
jb
aaa
js
and
test
dec
dec
and
jp
out
push
leave
orb
cmp
jo
add
addr16
fwait
jp
addr16
iret
addr16
iret
jmp
hlt
push
mov
jb
outsl
jns
xchg
mov
movsb
mov
fdivrl
test
jnp
jbe
jns
jnp
jnp
xchg
add
or
dec
fisubrs
std
xchg
add
fsubrl
sub
mov
fbld
mov
xchg
in
int3
push
iret
hlt
dec
push
inc
jno
mov
jb
nop
sub
daa
dec
dec
mov
addr16
jl
cmp
les
jl
mov
in
in
jl
jl
mov
add
or
adc
mov
jge
jge
jge
jge
mov
inc
jge
jge
jge
xchg
outsb
mov
push
xchg
xchg
xchg
xchg
or
xchg
xchg
xchg
or
pop
push
xchg
xchg
xchg
xchg
add
push
xchg
xchg
add
xchg
in
jbe
dec
jg
mov
mov
movsb
mov
jg
xchg
mov
jae
aad
add
rorl
jle
in
sbb
jle
add
popa
jp
leave
leave
inc
jae
fistps
loope
jle
mov
mov
dec
sahf
ja
push
push
aad
push
or
cmp
in
or
or
adc
fcomps
jg
inc
jg
fisubl
iret
arpl
push
xchg
xchg
dec
sub
decl
jg
mov
subb
add
cmp
outsb
ret
push
bswap
rcr
dec
in
in
or
sti
or
fwait
popf
test
lahf
or
mov
cmovle
add
and
fcomps
addl
push
aas
sbb
sahf
push
pop
jg
call
jne
xchg
push
clc
es
adc
push
push
xor
sbb
scas
add
addb
inc
push
add
add
fs
insb
jp
push
xchg
xchg
dec
addb
pushf
fsub
mov
ret
lret
xchg
mov
mov
mov
inc
rorb
iret
sbbl
out
cs
add
in
pop
inc
orl
outsb
adc
add
rcl
repz
pushf
dec
xchg
jecxz
add
jne
leave
stc
add
jb
dec
ss
xchg
addb
addb
addb
sbb
rcrb
fidivl
movntq
cmp
subl
mov
dec
cs
addr16
pop
ret
fistl
cwtl
jmp
in
jbe
cmp
or
rorl
fstps
lock
cmp
loope
jmp
enter
test
or
test
or
jns
push
add
xor
inc
mov
test
add
scas
dec
inc
enter
cltd
add
inc
repnz
enter
inc
cltd
pop
and
loope
enter
adc
out
sbb
xchg
cmp
add
lcall
daa
dec
iret
push
mov
xchg
pusha
pop
push
repnz
sub
leave
mov
xlat
xchg
push
jb
jg
adc
add
daa
and
repnz
test
pop
fwait
pop
mov
mov
push
xchg
pop
xchg
push
mov
aas
js
jo
push
outsb
and
mov
cmp
jg
push
mov
out
sti
addr16
addr16
and
js
xchg
mov
xchg
jae
cmp
push
movsb
daa
pop
rcr
xchg
popf
repnz
or
repnz
mov
mov
repnz
mov
pop
mov
ss
lock
decl
push
popf
jb
jb
xchg
jmp
jb
ror
loop
js
jb
clc
push
mov
push
leave
xor
push
mov
or
xor
enter
mov
push
mov
sbb
pop
mov
jae
jle
xchg
mov
mov
mov
and
mov
int3
call
pop
leave
add
outsb
mov
inc
mov
ja,pt
in
and
insb
popa
mov
out
xchg
xchg
lock
iret
mov
xlat
mov
jns
out
pop
out
add
add
cmp
mov
xlat
adc
mov
mov
adc
jae
jo
pop
leave
mov
cltd
mov
movsb
xchg
lds
cmpsb
aaa
ror
test
clc
mov
jns
es
add
ja
mov
das
push
jb
push
add
movsb
fwait
cmp
verw
ja
cmp
lcall
sahf
or
push
daa
sahf
cmp
ret
jo
dec
cmp
mov
push
lea
push
jmp
sub
push
dec
iret
push
lea
je
jg
leave
jae
xchg
add
daa
mov
in
or
jecxz,pn
testb
add
push
sub
lea
dec
push
mov
pop
mov
xchg
push
mov
cltd
mov
xchg
cmp
out
add
sbb
out
push
rdmsr
push
add
push
into
jne
mov
push
fistl
and
sahf
xchg
jge
add
out
popf
movsl
lods
pop
pop
jle
mov
mov
mov
pop
pop
aad
fisttpll
leave
leave
dec
or
or
leave
leave
leave
leave
pop
push
add
leave
add
sbb
sbb
cmp
repz
sbb
sbb
nop
iret
repz
cmpsl
sbb
pop
sbb
mov
sub
xor
mov
dec
nop
ljmp
repnz
nop
movsb
jo
mov
movsl
lods
lfs
mov
aad
add
fstl
pop
lar
jns
in
nop
cmpsb
pop
lea
xchg
pop
sbb
cltd
cmp
xchg
cmpsl
push
xchg
xchg
xchg
xchg
mov
jo
out
sarl
cmpb
pop
setns
popf
scas
nop
sets
sahf
ja
or
dec
sahf
or
enter
cmp
xchg
rcr
adc
call
xchg
das
xchg
dec
and
jmp
ja
pop
arpl
jg
xchg
jns
test
add
popl
lcall
mov
cmp
rcr
enter
ja
mov
xchg
je
inc
pop
cmpsl
mov
pop
add
fwait
cmp
sbb
ss
subl
outsl
jns
inc
shll
mov
pop
leave
xor
in
or
push
fcompl
es
xchg
leave
adc
ficoml
jg
pusha
lods
jae
cwtl
pop
mov
jae
add
lds
hlt
into
xchg
scas
xchg
subb
pop
xlat
or
adc
outsb
xchg
stos
in
fisubs
and
daa
mov
add
movl
xchg
daa
daa
mov
sar
hlt
inc
into
mov
jg
xchg
aaa
adc
jns
mov
fdivl
xchg
xchg
pop
setb
in
testb
push
dec
dec
dec
es
cwtl
mov
dec
mov
add
rorl
add
inc
sahf
pop
and
add
or
mov
xchg
outsl
adc
xchg
xor
xchg
push
pop
jns
sahf
add
xchg
pop
dec
mov
setae
mov
adcb
loope
leave
repz
jmp
jns
addr16
xchg
or
adc
cmp
in
in
and
sub
pushf
cmp
repz
sahf
cmp
repz
push
pop
xchg
mov
sahf
or
jb
out
jl
xchg
xchg
iret
repz
popf
shld
lods
add
cmp
lods
int
out
push
incb
lods
or
enter
scas
in
in
pushf
mov
std
xchg
daa
inc
scas
repnz
dec
adc
inc
cwtl
dec
mov
pop
js
add
lahf
arpl
cwtl
lret
lret
lret
push
aas
cwtl
lcall
mov
out
mov
cwtl
add
scas
mov
inc
dec
push
cltd
push
push
daa
push
pop
es
outsb
repnz
cs
ja
movsb
pop
insl
xchg
cltd
dec
mov
cltd
dec
or
test
in
dec
mov
xchg
pushf
xchg
mov
in
add
lahf
lret
out
add
loop
inc
imul
pop
add
das
or
outsl
mov
stc
int3
jno
jo
out
or
mov
cmp
lcall
push
iret
dec
lcall
add
lar
lcall
aad
xchg
jae
cwtl
lcall
cmp
lret
sarl
add
push
add
aaa
sysret
repz
pop
and
pop
or
or
mov
xchg
fwait
and
sub
jl
cmp
fwait
inc
fwait
adc
ja
cmp
xchg
add
leave
out
jns
cmpsl
pop
add
lods
cmp
adc
rcrb
shlb
pop
and
add
push
add
mov
pushf
sbb
and
mov
in
inc
mov
mov
fs
enter
inc
loope
in
dec
push
pushf
inc
pop
imul
mov
rcr
dec
sahf
ja
fisubrs
add
out
pushf
out
stc
add
negb
sub
test
xor
xchg
jl
xchg
mov
sub
scas
dec
sub
xchg
xchg
xchg
xchg
popf
popf
popf
popf
mov
popf
mov
mov
popf
mov
mov
in
mov
popf
out
xchg
and
ds
popf
or
adc
leave
out
push
add
and
and
sahf
das
mov
enter
sahf
rcrb
sub
push
addr16
sub
nop
pusha
shlb
mov
pushf
pusha
fs
xchg
and
xor
inc
lahf
dec
lahf
jl
fcmovne
push
lahf
pop
pop
push
pop
bound
push
jb
jp
sbbb
add
dec
mov
pusha
adc
aaa
mov
ror
lahf
arpl
addr16
pop
inc
ss
dec
mov
mov
enter
packuswb
movups
add
mov
outsb
and
pop
add
xchg
movaps
push
inc
pop
xchg
xchg
mov
mov
pop
xchg
xchg
test
in
jns
ljmp
dec
into
cmc
iret
mov
mov
jbe
stos
scas
mov
mov
cmp
jns
out
push
jb
mov
je
jp
push
add
xchg
and
out
pop
mov
jns
fcmovne
mov
mov
stos
adc
mov
jns
lret
mov
sahf
sbb
sub
std
out
mov
inc
xchg
add
push
mov
jb
mov
dec
sbb
hlt
fsubl
bound
inc
dec
cmc
jbe
dec
push
pop
jb
jl
repnz
mov
or
sahf
push
xchg
outsb
inc
adc
mov
mov
jae
iret
xchg
mov
repnz
add
push
or
pop
jmp
and
cmc
sbb
cmpl
add
mov
push
xchg
or
insb
pop
adc
mov
daa
js
mov
lahf
push
mov
pop
gs
pop
jne
cmp
repz
xor
call
lea
movsb
mov
in
and
ja
fsub
iret
and
xchg
iret
add
mov
mov
outsl
movsb
iret
inc
ja
xchg
xchg
out
push
xchg
pop
pop
jae
dec
sahf
add
nop
addr16
inc
shlb
add
xchg
movsl
push
mov
jb
leave
inc
inc
dec
pusha
cmp
into
inc
jo
jnp
fbld
pop
leave
jae
xchg
mov
mov
ja
aaa
movsl
movups
fimuls
cmp
pop
lsl
mov
jo
pop
dec
cld
movsl
dec
add
or
mov
nop
scas
outsl
adc
shlb
fs
loope
cmpsl
cmpsb
cmpsb
sbb
jns
push
add
out
cmpsb
mov
xor
js
xorb
insl
pop
sgdtl
or
das
das
cmp
mov
mov
das
test
mov
mov
iret
dec
or
enter
jns
out
pop
fcomps
loopne
repz
sahf
sbb
lock
sbb
fwait
xchg
inc
dec
lcall
jo
sbb
pop
and
mov
and
add
cmpl
shll
ja
mov
daa
inc
pushf
xchg
add
ja
fisttps
push
daa
cmp
mov
cmpsl
iret
sahf
ja
sbb
cmpsl
psubusb
add
dec
sysret
call
and
pop
clc
cmpsl
jo
xchg
in
iret
cmp
push
add
sub
push
inc
popf
mov
add
sarl
mov
push
jbe
cmp
daa
add
in
clc
clc
repnz
sub
shll
test
xchg
sbb
jb
js
subb
ret
add
orb
pushf
jmp
in
lock
stos
out
sbb
and
xor
cmp
daa
iret
dec
add
andb
stos
addr16
fldt
das
movsb
stos
mov
vmwrite
xchg
push
js
cltd
loopne
psubw
stos
call
adc
out
sub
push
loopne
push
enter
movsl
add
nop
stos
jl
xchg
out
add
xchg
and
mov
mov
add
lret
aas
rcrl
stos
iret
jecxz
test
pop
das
push
xlat
das
shrb
xrstor
add
cmp
inc
lods
dec
lods
pop
pmulhuw
leave
dec
add
lods
cltd
dec
dec
jb
lods
and
nop
xchg
xchg
out
cwtl
add
mov
rorb
repnz
mov
fmuls
loopne
mov
call
lods
aaa
ror
popl
lods
or
pop
lds
incl
dec
daa
adc
lods
addr16
leave
repz
outsb
jo
mov
cwtl
sar
bound
decl
pop
and
and
scas
push
scas
pop
pcmpgtd
in
daa
jg
push
xchg
push
or
leave
repz
or
or
mov
or
jns
cmp
in
in
rcr
loopne
sahf
addr16
rstorssp
fmuls
xor
pop
in
in
inc
cmovle
in
in
xchg
mov
icebp
jb
repnz
sbb
jb
test
xchg
arpl
into
mov
aaa
bnd
pop
hlt
pop
sbb
dec
sahf
and
ss
and
aas
sahf
fisttpl
push
es
mov
xchg
pushf
dec
ds
nop
mov
mov
rolb
pop
mov
mov
out
inc
mov
mov
pop
outsl
pop
insl
lods
xchg
aas
addr16
mov
sbb
jb
dec
mov
mov
mov
mov
repnz
mov
leave
leave
leave
inc
mov
ret
leave
leave
rcr
in
cli
mov
dec
and
pop
pop
lret
inc
inc
inc
data16
mov
mov
jns
out
add
add
jns
popw
outsb
or
pop
push
loopne
jle
xchg
mov
mov
cmpsb
mov
lcall
stc
mov
xchg
or
fabs
pop
loope
fcmovne
add
pslld
repnz
sub
mov
mov
mov
mov
repnz
mov
mov
mov
mov
repnz
jle
xchg
pxor
mov
jns
out
push
sbb
sbb
sbb
jns
out
sbb
out
sahf
pop
lock
and
mov
fdivp
xor
push
and
push
and
jns
out
and
out
sahf
daa
cmp
inc
or
fucom
jns
pop
cvttps2pi
jns
pushf
push
dec
jb
xor
fstl
lret
cwtl
pop
push
repz
xchg
dec
mov
mov
xchg
jl
iret
or
int
mov
sbb
push
jb
dec
sahf
add
add
and
fisubs
or
movsb
rcrl
cs
xchg
pop
fs
jns
mov
leave
leave
enter
daa
inc
repz
leave
dec
push
minps
cmp
leave
gs
dec
adc
pxor
iret
jae
adc
dec
outsb
mov
aas
mov
shr
or
sbb
adc
sub
pushf
pushf
pushf
xor
inc
and
and
jno
aas
outsb
outsb
daa
jbe
xcrypt-cfb
cmpsl
in
dec
outsb
pop
scas
mov
aad
dec
sahf
out
cs
add
stc
and
in
mov
xorps
xor
dec
sahf
aaa
outsl
ja
jg
cmp
xor
xchg
xchg
enter
pop
enter
dec
and
fcmovnu
ja
hlt
iret
sti
in
repnz
cmp
xor
popa
inc
or
inc
xor
nop
mov
mov
ja
ja
mov
adc
ja
dec
pop
scas
shll
imul
dec
dec
sahf
add
mov
dec
sahf
out
add
mov
or
ud2
xchg
xchg
out
out
xor
rcll
adc
iret
adc
xor
aas
cmp
iret
jae
push
push
pusha
sbb
jae
imul
sbb
iret
jae
orl
mov
cmp
into
add
lret
lret
in
out
mov
add
fsts
mov
call
push
arpl
rclb
push
ja
mov
cwtl
mov
sahf
add
test
mov
jns
sahf
pop
mov
repz
sahf
or
fcomps
or
jns
pusha
mov
lock
aas
add
push
out
es
adc
lar
pop
inc
jo
pop
sub
mov
xor
sbb
rcrl
mov
shll
clc
das
push
mov
iret
movd
ret
fcmovne
sub
cmpl
mov
popf
cmp
ss
xlat
mov
add
mov
cmpsl
push
pushf
dec
dec
cs
add
xchg
cmp
addr16
sbb
in
jbe
ja
cmovl
icebp
ficompl
aad
insl
xorb
xlat
xchg
cmp
leave
leave
lahf
cmpsl
scas
push
mov
inc
repnz
or
leave
loop
ja
in
out
mov
adc
and
rolb
dec
pop
cmp
pusha
xchg
jo
orl
xchg
outsb
fnstsw
stos
xlat
mov
in
jns
mov
cs
mov
out
divb
dec
dec
incb
rorl
jb
or
xor
pushf
cmp
cmp
inc
xchg
dec
add
leave
inc
bnd
je
cmp
xchg
jl
add
mov
mov
jae
cmp
iret
xlat
xlat
repnz
iret
add
push
add
in
jecxz
ret
ret
pop
fs
sub
xor
ret
cmp
sahf
dec
pop
push
pop
ret
xchg
jl
fadds
testl
and
add
pushf
pushf
pushf
fsub
call
stos
fldcw
or
adc
in
dec
jb
ret
test
cmp
leave
in
inc
cmovle
pop
and
mov
push
rorb
in
xchg
add
adc
ja
push
fisubrl
out
in
add
pop
jg
les
add
push
add
dec
in
mov
pop
pushf
pop
and
add
orb
les
les
leave
dec
dec
iret
mov
enter
les
sbb
xchg
cmp
and
sub
jns
out
ss
add
dec
cs
push
push
jle
lret
lret
lret
lds
js
add
lret
lret
lret
mov
cltd
lds
movsl
mov
pop
vmovdqa
mov
vpextrw
pop
mov
sbb
mov
dec
push
pop
xchg
outsb
mov
pop
nopl
daa
mov
sbb
aas
sbb
sbb
daa
daa
daa
pop
push
adc
daa
sub
leave
repz
mov
mov
mov
addr16
adc
aas
jb
sarl
cmp
cmp
repz
cmp
cmp
out
jns
repz
aas
push
iret
repz
sbb
inc
sahf
idivl
push
inc
cmp
inc
daa
iret
cmp
mov
inc
xchg
sahf
mov
test
sahf
fcmovne
repz
mov
jns
out
loopne
jmp
neg
leave
enter
enter
jns
xchg
xchg
and
daa
dec
aaa
cvtps2pd
fs
mov
daa
outsl
jp
filds
leave
addr16
test
ror
das
repnz
enter
add
arpl
cmp
out
lock
in
push
push
clc
add
pop
or
rcll
js
pop
or
mov
nop
aas
cwtl
push
push
sahf
out
daa
sbb
adc
adc
cmp
in
adc
cmp
adc
popf
dec
push
pop
push
sbb
xchg
pop
ljmp
cmp
in
test
sbb
sbb
dec
mov
sbb
jb
lock
clc
leave
add
or
cs
lret
repnz
ljmp
lret
pop
shlb
test
push
cmp
push
daa
mov
inc
push
adc
andb
or
lret
outsb
mov
push
mov
dec
loopne
mov
or
iret
leave
mov
lret
pop
pop
ror
fmul
enter
push
lahf
add
lret
outsl
sub
ror
lret
lret
xor
cmp
inc
lret
lret
dec
and
xlat
or
mov
fdivrl
movl
pop
fsub
in
mov
xchg
fucomi
fistps
fbstp
out
or
push
in
in
sahf
or
or
pop
leave
leave
leave
leave
inc
dec
pop
arpl
adc
test
cmp
cmp
movsl
out
sahf
ja
push
sbb
jns
sbb
sbb
nop
pushf
cmp
push
out
and
jle
leave
std
or
pop
adc
and
leave
leave
push
sub
aas
aam
leave
repz
dec
push
das
pusha
int
and
cmp
test
out
inc
pop
mov
jbe
mov
add
test
shlb
xor
sahf
out
sahf
sbb
inc
add
ja
mov
outsb
push
jbe
dec
sahf
pop
jns
add
jl
mov
je
enter
into
mov
movups
cmp
repz
iret
repz
adc
adc
xchg
daa
daa
std
or
adc
iret
xchg
outsb
sbb
push
iret
sub
movhps
push
pop
aas
mov
cmp
dec
and
push
and
and
daa
jbe
andl
leave
mov
add
mov
sub
out
lcall
or
lcall
in
xor
mov
mov
xor
jg
in
ss
shlb
das
xor
cmp
pushf
dec
dec
rclb
pop
aas
pusha
fidivrl
out
or
jbe
sub
adc
loopne
out
loopne
mov
mov
repnz
loope
add
jo
dec
add
or
shrb
sysret
and
iret
jno
in
shll
sarl
rcrl
inc
into
iret
push
rcrl
ror
je
enter
rorl
and
out
push
shl
pop
mov
and
sti
cs
into
insl
adc
adc
sbb
jo,pt
inc
rorb
mov
shlb
insb
ds
daa
iret
repz
orb
invd
cwtl
mov
jns
out
mov
cmp
iret
push
pop
cmovg
xchg
or
lock
push
ror
repz
adc
sbb
daa
in
in
daa
xor
sbb
cmp
push
sbb
sbb
pushf
cmp
test
nop
and
leave
repz
and
jns
mov
aad
repz
jecxz
sub
sub
sub
paddq
aam
add
aam
js
int3
lahf
aam
psrlw
jl
repz
xchg
push
push
popf
ja
cmp
pop
test
mov
push
out
jns
or
or
filds
dec
sahf
or
aad
iret
repz
pop
and
sub
mov
adc
enter
aad
arpl
outsb
xchg
out
outsb
dec
movsl
vmwrite
sbb
sahf
test
and
mov
mov
sahf
out
and
lahf
out
jns
repnz
sub
mov
scas
push
sub
repz
sahf
ja
push
das
aas
push
push
xor
mov
leave
pusha
imul
pop
dec
xor
mov
xor
dec
out
cmp
xchg
addl
bound
inc
push
inc
xor
inc
add
aas
pop
xor
push
xchg
sub
push
adcl
add
jmp
push
add
aas
inc
push
cwtl
js
jne
pop
adc
push
mov
jbe
dec
xchg
pop
inc
xchg
dec
aaa
pop
sub
aaa
in
in
pop
cmp
push
add
bswap
repz
add
add
leave
repz
or
or
xchg
fisttpl
aaa
or
leave
mov
adc
adc
and
pop
inc
inc
push
fucomi
jbe
addr16
das
push
xorps
pop
mov
das
insl
push
and
in
sbb
jb
pop
andb
jns
xchg
fildl
xchg
push
sub
dec
loop
sahf
mov
jo
cmpsl
mov
into
aas
xlat
xor
data16
fldl
add
repz
adc
push
inc
cmp
xor
repz
xor
and
or
sahf
out
ds
call
jns
out
aam
int3
iret
repz
out
rcrb
test
ja
cmp
cwtl
nop
push
mov
je
pusha
push
push
icebp
jns
out
inc
sub
or
sub
adc
push
mov
xchg
mov
mov
adc
inc
add
adc
test
push
inc
int3
mov
sbb
dec
add
pop
mov
fsts
adc
sub
testb
add
fsts
and
cli
mov
loopne
inc
jle
test
shll
mov
inc
mov
pushl
add
mov
sbb
in
mov
mov
push
add
mov
xchg
outsl
mov
xor
fcomp
loopne
jb
jle
sub
inc
xor
push
inc
inc
and
iret
or
sbbb
push
cmpsl
mov
hlt
fidivrs
outsb
cli
inc
daa
pop
jle
adc
pop
mov
xchg
fsubrs
sub
pop
das
mov
pop
cmpsb
add
arpl
testl
pop
lock
les
or
or
adc
out
adc
out
movsb
adc
sahf
out
sbb
hlt
in
sbb
repz
mov
push
movsl
icebp
cmp
pop
fsubr
jne
repnz
in
test
inc
or
js
ljmp
in
decl
cmp
push
les
sbb
sub
call
pop
icebp
sahf
icebp
aas
movsb
and
jmp
js
jbe
cs
or
add
xchg
nop
inc
cwtl
dec
sub
push
push
push
xorb
ss
aad
addr16
push
push
pop
inc
jg
out
imul
fcoms
aas
pop
pop
cmp
xlat
pop
xor
dec
mov
test
inc
pop
jg
repnz
push
mov
roll
or
sub
add
pop
daa
and
push
addr16
es
add
push
xchg
push
js
sbb
sbb
loopne
add
add
and
add
idivl
sub
or
out
out
adc
lock
lock
add
in
push
and
push
or
add
in
jp
scas
lock
sbb
cmp
sbb
adc
rcrb
enter
mov
and
sahf
out
and
xchg
das
push
pop
clc
xor
inc
into
mov
adc
aam
nop
mov
movsb
jbe
cmpsb
cld
xorb
repnz
xorl
jg
cmp
pop
lahf
out
sahf
js
mov
repz
xor
repz
dec
insl
add
lcall
xchg
mov
testl
push
dec
insb
scas
stos
xorb
das
daa
jns
add
add
repnz
or
ret
nop
pslld
adc
mov
in
add
leave
sbb
into
sbb
rorl
and
sahf
mov
sub
ljmp
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
mov
popl
cmp
cmpsb
iret
decl
js
inc
outsl
loopne
jmp
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
dec
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
jmp
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
mov
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
decl
stc
xchg
clc
repz
mov
subb
fwait
xchg
and
and
or
add
sti
aas
jno
jg
or
mov
pop
fs
dec
lea
aas
ret
shrl
mov
call
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
jmp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
xchg
inc
push
cmp
int
mov
addr16
push
mov
xchg
aas
mov
mov
jp
popa
push
pop
sarl
jl
mov
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
incl
fstl
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
incl
adc
xor
push
scas
into
imul
faddp
jge
call
mov
lcall
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
fldl
fmuls
pop
pop
nop
pop
stc
stos
pop
inc
inc
je
inc
inc
push
dec
xchg
lret
jnp
cmpsl
add
cmp
popa
push
out
mov
les
hlt
push
xor
andb
xor
push
jmp
decl
dec
mov
mov
sub
mov
sbb
dec
jno
repz
fiadds
test
ficompl
jmp
mov
hlt
movl
imul
call
xchg
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
in
pusha
aad
jno
mov
inc
aam
dec
std
test
movsl
cli
test
xor
ljmp
inc
leave
mov
jecxz
fdivs
jne
filds
or
shrl
jg
fldenv
push
ficoms
push
xlat
enter
mov
and
mov
cltd
xchg
mov
jmp
add
or
or
and
or
adc
das
ss
sbb
data16
inc
fdivl
jno
add
call
aad
mov
mov
movsl
in
lahf
xor
mov
js
stc
jmp
cwtl
push
loope
or
insl
or
pop
jmp
hlt
push
imul
insb
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
decl
cmc
fnstenv
adc
mov
mov
bound
ficoml
gs
jmp
sbb
aam
pop
popa
mov
into
pop
cmp
mov
inc
movsl
fisttps
ljmp
shll
jmp
outsb
xor
mov
sar
cmp
inc
in
add
pop
dec
or
cmp
incl
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
mov
lcall
mov
cmp
ljmp
fildl
push
fdivl
or
jmp
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
pop
jge
xchg
decl
lock
add
inc
push
imul
xorb
sbb
push
imul
call
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
mov
call
call
jle
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
pushl
mov
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
dec
mov
popa
lret
sbb
outsl
and
ja
int3
add
mov
mov
es
lds
or
add
mov
mov
xlat
ret
shlb
scas
ficomps
ret
es
lcall
insl
add
ss
jmp
addr16
jb
push
add
adc
mov
ljmp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
cli
mov
push
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
ljmp
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
stos
dec
push
scas
fcompl
fldenv
filds
mov
pusha
mov
fidivrs
mov
ljmp
sbb
mov
lret
mov
jmp
sarb
sub
push
mov
jp
mov
dec
popa
les
sbb
or
sub
aaa
mov
or
sbb
add
sub
dec
push
pop
dec
xor
aam
cmp
pop
cmp
sub
jne
pop
push
addl
jns
out
xlat
fcomp
fcmovu
sahf
out
sahf
fsubp
jecxz
out
sahf
dec
in
jmp
sahf
jmp
in
repz
cmc
jns
out
div
clc
stc
cli
or
out
cld
daa
adc
aas
inc
adc
inc
dec
adc
lods
sbbb
push
mov
inc
inc
sub
jne
push
dec
bound
inc
dec
pop
cmp
inc
dec
xor
bound
inc
es
fwait
push
popa
je
stos
inc
mov
cltd
out
and
mov
push
ret
inc
dec
sub
fisttpl
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
jg
or
xor
bound
jnp
push
inc
popa
push
inc
jbe
pop
and
imul
data16
gs
push
dec
inc
test
add
push
inc
test
mov
push
rclb
push
je
mov
xor
sub
gs
je
scas
ss
xor
gs
push
xchg
fsubrs
inc
aas
fs
or
gs
push
cmp
push
adc
xor
shlb
pop
or
jns
call
dec
insb
nop
pusha
add
stc
popa
xchg
cmp
cmp
insb
aaa
aas
inc
push
adc
mov
sub
or
cltd
and
jae
cmp
or
insb
daa
int
scas
popa
inc
das
pop
inc
aas
orb
pop
and
es
or
divb
inc
pop
dec
je
lret
into
out
std
jo
inc
inc
add
ds
mov
scas
add
cmp
pop
mov
dec
add
and
xor
sub
insb
mov
fistpll
fs
ja
outsb
jne
fiaddl
mov
dec
jge
addr16
pop
xor
xor
or
jbe
aad
add
addr16
clc
xchg
daa
pop
fwait
aaa
into
pop
jo
insl
rcr
sub
adcb
add
add
addr16
xchg
and
pop
imul
mov
cmp
mov
inc
sbb
xlat
inc
add
push
mov
xchg
out
jb
sub
cmp
or
add
xor
jo
lahf
gs
lahf
push
outsl
outsl
test
mov
ret
fists
jno
lds
bound
sub
sub
in
nop
test
pop
cmp
test
push
arpl
cmp
mov
add
push
dec
sub
outsl
insb
jns
subl
das
inc
jb
push
lret
sub
gs
pop
sahf
inc
outsl
arpl
insb
paddw
bound
mov
mov
jbe
xor
jg
pop
daa
es
dec
xor
imul
les
das
xor
dec
shlb
stc
ret
push
movsb
sbb
and
and
push
and
leave
lods
inc
outsl
popa
cmp
cwtl
pop
inc
dec
and
outsb
dec
cmp
adc
inc
jmp
push
cld
dec
sbb
sbb
cmp
adcl
inc
push
inc
dec
cmp
je
jns
arpl
mov
or
pop
pusha
in
pop
in
xchg
insb
insl
aaa
push
and
push
pop
lret
sub
insb
pop
adc
and
cltd
add
enter
adcb
add
push
add
adc
dec
pusha
nop
mov
jmp
add
dec
inc
mov
jbe
adc
pusha
add
add
in
fbstp
add
add
or
pop
pop
push
or
or
add
or
or
adc
adc
push
adc
in
fidivrl
movhps
push
adc
adc
adc
add
sub
outsb
fisubl
or
adc
pop
adc
aaa
cmpsl
add
inc
add
jo
add
and
add
in
add
adc
add
js
jno
outsl
or
mov
jb
pop
fdivl
xor
jge
call
jmp
xor
adc
pop
and
xor
inc
mov
adc
xor
cmpb
xchg
out
or
jl
cmp
inc
mov
cmpsl
or
add
adc
add
inc
or
inc
nop
adcb
cmp
add
sub
sbb
pushf
daa
adc
loopne
adc
cld
pop
pop
idivl
ja
adc
push
adc
pop
popa
jno
and
adc
xchg
mov
lock
xor
and
loope
icebp
mov
mov
add
xorb
scas
fiaddl
or
js
mov
cli
sub
rcr
push
ret
incl
jne
jae
sub
std
cmpsb
xor
aas
imul
fdivrl
add
inc
je
pushl
les
fsts
dec
push
loopne
inc
mov
cmp
adc
out
cmp
xor
and
hlt
pushl
inc
cmc
iret
xchg
inc
jl
repnz
dec
or
adc
pop
inc
inc
and
pusha
add
std
or
jg
adc
sbb
cli
and
mov
fiaddl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
aaa
mov
aad
std
movsl
jecxz
pop
mov
aas
and
push
stc
or
incl
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
add
push
fstl
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
fdivp
pushl
int3
lcall
fs
scas
mov
pop
pop
mov
popl
incl
mov
sbb
scas
adc
mov
xor
lods
scas
xchg
test
decl
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
jge
ljmp
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
decl
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
ljmp
lods
leave
mov
jp
push
out
or
push
sahf
pop
jg
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
incb
mov
jmp
sbb
clc
adc
dec
out
pop
jb
mov
mov
mov
xor
dec
sub
pop
mov
jl
rorl
adc
in
call
stos
hlt
push
add
stc
loope
mov
sar
andl
mov
icebp
testb
mov
incl
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
ud0
mov
mov
dec
adc
push
lock
lods
jp
mov
aad
aaa
sbb
into
fcomps
sbb
sbbl
into
cmp
mov
loopne
cli
adc
aaa
xchg
in
add
inc
adc
out
dec
jbe
dec
fisttpll
out
aas
std
cli
push
push
pushl
inc
cmp
sub
inc
scas
inc
mov
jg
je,pn
decl
pop
imul
mov
mov
inc
es
gs
jns
enter
or
push
pusha
lcall
jae
inc
cmp
sti
punpckhbw
cmpsb
orb
mov
mov
js,pn
jmp
xor
pop
clc
pop
hlt
sub
movsb
add
mov
pop
jg
gs
std
xorb
jg
aad
cmp
outsl
adc
ret
das
pop
pop
pop
shlb
out
sarb
sbbl
mov
or
sarb
std
pop
les
cli
mov
mov
incl
add
pop
and
insl
add
leave
push
scas
loop
jge
push
shrl
mov
in
call
imul
pusha
adc
and
sbb
xchg
jo
and
out
test
jae
push
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
fistl
mov
clc
push
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
jg,pn
pushl
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
ljmp
sbb
jg
sbb
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
in
ljmp
test
mov
mov
cmp
xchg
mov
cwtl
pop
mov
ftst
jbe
xchg
and
jae
incl
jle
jg
mov
lahf
cld
sub
aas
stc
add
out
gs
jno
fidivrl
mov
adc
pop
cld
addl
adc
and
loopne
push
cmp
fmull
enter
jecxz
scas
incl
jmp
sub
in
pop
mov
sub
mov
dec
incb
fisubrl
aas
shr
mov
or
cld
inc
or
sti
lds
pop
jg
add
jg
mov
aad
pop
in
divb
xchg
movsb
mov
iret
push
pushl
push
sbb
stos
icebp
pop
incb
jno
sti
fcomip
call
push
inc
jecxz
sbb
sarl
adc
loopne
cmp
mov
sar
adc
lahf
xor
out
push
in
inc
imul
dec
push
in
fildl
fsubrl
lock
and
pop
pusha
inc
sbbb
mov
add
mov
repnz
and
mov
adc
clc
or
push
rcrl
rolb
pop
inc
jb
fistpl
adc
call
jno
pop
nop
jmp
inc
sti
arpl
daa
std
or
sbb
mov
inc
cmpsb
popf
push
loop
sbb
or
aas
cld
js
aas
divb
iret
dec
xor
fsubr
fistps
lds
fidivrl
jg
mov
add
dec
mov
sub
fstpl
xor
lahf
les
sbb
sbb
cld
addl
jmp
shr
stc
mov
lahf
outsl
int3
push
sbb
rcrl
pop
test
bound
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
test
or
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
adc
lahf
mov
cwtl
dec
incl
or
out
lcall
icebp
push
cld
clc
mov
mov
test
mov
pop
jg
pop
shrb
rcl
jg
adc
mov
xor
pop
rcr
dec
mov
gs
pushf
lea
jp
jnp
mov
adc
inc
lds
push
pop
adc
imul
dec
or
inc
pop
xor
rorb
and
add
cmpsl
push
sbb
push
pushl
enter
mov
into
test
xchg
movsb
insb
or
and
xchg
das
cld
cwtl
inc
mov
insb
test
aas
repz
outsl
lock
in
jmp
stc
out
mov
cmp
push
std
mov
or
rcll
lods
out
jne
or
cmc
mov
push
mov
decl
sahf
enter
fcmovb
inc
adc
inc
loopne
test
out
rcr
dec
jg
inc
out
pop
or
or
dec
ss
decb
inc
lods
movsb
or
repnz
clc
dec
cmc
mov
jl
call
jle
inc
jno
lret
pop
in
cmp
stc
fwait
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
mov
aas
mov
jg
incl
fdiv
mov
sub
addr16
sbb
cld
daa
jp
std
mov
fucomi
adc
cltd
or
mov
ret
nop
cmp
push
loop
cmc
das
incb
lock
pop
pop
div
cld
idivl
xlat
add
scas
stc
lahf
loope
js
or
jae
jmp
idivb
fbstp
out
xchg
add
out
sbb
xchg
mov
loope
mov
cmpsl
popf
sbb
xchg
mov
fbstp
push
daa
outsl
das
outsl
ss
cmpsb
cmp
call
pop
mov
decb
adc
mov
or
adc
call
fisubrl
add
bswap
and
inc
add
xor
aaa
std
fisttps
sbb
and
sbb
xchg
cmpl
jle
icebp
ret
ror
sbb
mov
or
inc
adc
icebp
push
jno
shrb
mov
pop
clc
loope
loope
mov
std
push
rorb
jp
dec
add
xlat
mov
jb
jmp
xor
mov
iret
fdivrl
xchg
lcall
decb
xchg
mov
xchg
adc
into
sarl
pop
out
jg
jno
ret
nop
mov
testb
out
iret
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
fsubl
mov
or
outsl
pop
movsb
ljmp
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
in
xchg
pop
add
cmc
out
daa
icebp
push
lahf
sti
inc
pop
imul
lcall
push
xchg
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
fsubrl
dec
add
sub
inc
cli
and
sti
push
sti
pop
inc
xchg
cltd
pop
adc
push
inc
sub
scas
cmp
int3
pop
iret
and
incl
pop
add
mov
cmc
cmp
pop
sbb
jl
lret
inc
cmp
xchg
push
sbb
dec
enter
incl
lea
dec
xchg
cmp
call
push
xchg
mov
mov
xchg
and
mov
sbb
inc
cld
mov
fiadds
dec
push
sbb
popa
mov
dec
dec
pushl
cmpl
js
xchg
sub
add
int3
rorl
push
cmc
enter
xchg
push
test
sbb
jl
sbb
lret
fdivrs
pop
lds
lods
popa
mov
mov
cmp
fs
xchg
pushl
hlt
es
in
adc
pusha
and
fwait
and
xchg
jge
pop
or
xor
pop
rcrl
lcall
mov
pop
cmpsl
lods
xchg
mov
cmpsb
sub
int
insb
call
push
adc
shlb
call
mov
push
loope
cmp
mov
adc
mov
lret
outsb
adc
imul
pushl
xchg
cmpb
mov
dec
lock
leave
sub
mov
sub
fnstcw
pop
imul
sbb
inc
mov
push
xchg
fdivl
fs
shl
jge
inc
push
sbb
add
mov
jmp
xor
pop
add
outsb
pop
enter
sbb
pushl
mov
sub
xor
add
push
fxsave
lds
rorb
js
test
in
fisttpl
js
xor
dec
cli
jb
xchg
sub
rolb
jae
xor
das
clc
incl
xor
cmp
and
mov
dec
in
sbb
inc
fstp
and
mov
xchg
movsb
jl
dec
pop
xlat
dec
sbb
mov
jno
xor
or
cmp
pop
and
inc
out
dec
mov
mov
fisubrl
daa
sbb
shrl
sub
ljmp
clc
je
ret
scas
lahf
add
lret
adc
lock
xchg
stc
sbb
xchg
xchg
sbb
mov
imul
movsb
sbb
add
mov
dec
inc
push
mov
fbld
jb
sbb
lock
fbstp
mov
inc
loopne
xor
out
mov
aam
jecxz
mov
or
inc
sub
out
mov
push
fldt
dec
and
jge
test
stos
jle
in
imul
jg
out
xchg
arpl
xor
hlt
fcmovnu
jle
mov
xchg
ljmp
lahf
sub
outsl
call
cmpsl
inc
jle
cmc
mov
adc
aam
sub
xor
mov
jns
decl
rcr
pushl
pop
mov
inc
xchg
and
aad
pop
out
repz
ja
mov
jg
lahf
fucom
ds
adc
icebp
sub
pop
jge
cmpsb
and
adc
mov
add
add
cmp
es
movsb
jg
pushw
arpl
pop
jns
xchg
fmul
jo
xor
clc
push
sbb
mov
sti
push
out
adc
cmpsl
dec
fs
movsb
out
insb
loopne
rol
jecxz
jg
loop
test
sbb
dec
lret
mov
mov
jmp
shrl
scas
loop
pop
loopne
sub
pop
jno
ds
hlt
pushf
stos
mov
xor
mov
or
insb
pop
ljmp
lds
pusha
mov
push
adc
push
mov
lret
out
cmp
fiadds
mov
ds
loop
fld
sub
cmpsl
andb
cltd
dec
and
stc
cmpsb
fnstcw
std
or
fbstp
xor
adc
or
mov
enter
lods
mov
enter
ret
ljmp
or
sub
pop
pop
cltd
data16
cmp
cld
and
mov
adc
jmp
xchg
mov
popf
stos
lcall
jns
add
stos
roll
bound
mov
mov
in
fwait
dec
jecxz
adc
cld
sub
cmp
mov
mov
orb
hlt
clc
dec
sbb
push
mov
xchg
in
jl
and
gs
and
cmp
xchg
out
push
sahf
in
negb
push
rclb
lods
xor
lods
adc
cli
xchg
fnstsw
popf
out
sbb
rorl
or
pushl
in
dec
push
adc
andl
lods
ja
push
nop
aad
pushl
xchg
mov
jg
mov
popa
push
xchg
arpl
arpl
pusha
cmpb
xchg
sub
cmp
xor
cmp
loopne
and
insb
push
cmp
mov
in
daa
pop
push
add
incl
xor
sahf
cmp
mov
stos
loopne
fldenv
mov
cmp
adc
jmp
ja
incl
or
mov
sbb
int3
ja
leave
xchg
mov
lcall
std
dec
xchg
inc
jno
outsb
pushf
inc
aad
sub
lds
xor
mov
call
mov
scas
adc
sub
push
loope
dec
stos
test
ljmp
cmp
notl
loop
and
push
jp
cmc
dec
pop
in
mov
inc
sti
into
cltd
cmp
ljmp
repnz
lcall
xchg
mov
test
xor
mov
idivl
movsl
push
pushl
leave
mov
sahf
mov
popa
repz
sti
in
out
into
jge
sbb
and
mov
jne
and
js
xchg
mov
cs
push
jp
in
xchg
inc
mov
adc
aad
pusha
iretw
nop
cli
dec
cmp
in
jo
dec
data16
pop
mov
imul
test
pop
and
sub
inc
mov
les
or
das
sar
cmpsl
lods
pop
jmp
xchg
sti
aas
jnp
jmp
xor
divl
cld
mov
lock
aam
mov
insb
mov
call
mov
jmp
mov
or
add
mov
dec
int
push
jnp
dec
add
fwait
imul
xor
pusha
push
ljmp
incl
xchg
insb
push
or
jmp
rorb
mov
dec
lds
lahf
pop
mov
das
cli
jp
mov
in
addl
mov
outsb
pusha
shlb
lcall
pop
push
mov
cmp
mull
sub
mov
sar
jmp
add
ja
xchg
popa
xchg
incl
pop
jnp
fimuls
xchg
or
ss
adc
fdivrl
insl
sbb
dec
mov
jg
pop
lret
mov
jl
dec
xchg
js
aam
lods
addr16
jno
xlat
lock
inc
cltd
dec
jmp
xchg
inc
das
ret
mov
push
ror
adc
mov
cmpsb
push
and
movsl
push
and
call
mov
je
loop
push
mov
mov
repz
imul
pushl
insl
add
mov
jge
jp
mov
lret
cli
jns
rol
mov
cld
cmp
mov
cmpsl
ret
imul
add
movsl
fdivr
pop
and
lcall
jns
jae
jmp
fcom
mov
add
xchg
mov
stc
fisttps
stos
add
shll
test
xor
lods
stc
sbb
xor
sub
and
sbb
add
mov
and
mov
pop
dec
mov
mov
addr16
insl
and
push
sub
incl
out
sarb
jp
fwait
mov
je
xor
addr16
ljmp
int3
pop
fcoms
push
and
pop
loope
inc
or
or
icebp
adc
xlat
push
mov
pop
out
lea
mov
fwait
iret
xchg
test
jne
mov
ret
shlb
mov
jmp
mov
mov
xor
imul
mov
jae
sbb
mov
jmp
push
hlt
inc
pusha
pop
add
test
mov
notl
jmp
push
xchg
jle
sbb
inc
mov
pop
ss
enter
xlat
enter
cmp
dec
push
adc
pusha
aad
ss
jno
nop
or
in
mov
cmp
lods
lret
xlat
pop
jl
insl
lret
mov
lret
jnp
inc
push
decl
lcall
jle
and
mov
sub
inc
or
or
inc
mov
mov
jmp
and
jmp
movsl
add
leave
insl
iret
mov
movsb
or
xchg
inc
xor
fcomip
mov
cmp
mov
fiaddl
ja
cmp
cmp
inc
xor
jb
stc
pop
enter
inc
sub
dec
jno
ljmp
das
es
mov
ja
mov
das
fstl
jmp
or
mov
push
arpl
pop
loopne
pop
xchg
inc
adc
insb
inc
int3
or
mov
aad
scas
inc
bound
jmp
dec
bound
push
pop
lds
xchg
or
call
rcll
out
nop
or
call
std
jg
jne
scas
shlb
sub
sub
in
xor
cmp
repz
and
decl
xor
mov
jge
daa
sbb
lods
lret
loopne
mov
lock
cli
call
push
sbb
lock
negb
mov
stc
lcall
mov
aas
popa
imul
test
clc
jmp
cmp
pop
mov
jmp
sarl
jo
push
inc
xor
dec
sub
mov
and
rolb
cmp
pushl
int3
aad
fistps
and
loope
inc
cmpsl
jno
stos
dec
jne
xor
cmc
fwait
aaa
ret
test
decl
nop
jo
subl
outsl
mov
push
dec
jne
xor
cmpsl
dec
das
in
cmpsl
ljmp
sar
insb
mov
mov
add
loopne
mov
cmpsb
into
je,pt
xor
cld
cmp
sbb
sub
pushf
lahf
mov
ss
pushl
pop
inc
negl
adc
mov
loopne
adc
fimuls
std
mov
add
fistps
inc
into
leave
test
jg
push
mov
in
es
mov
jnp
and
xchg
aad
inc
inc
aas
mov
fdivl
addr16
mov
or
cmp
push
jle
into
xor
movsb
push
xor
jno
mov
pop
mov
dec
popf
ret
jmp
mov
pop
sub
xchg
aas
cwtl
es
pop
push
xor
test
or
mov
sub
inc
and
cmpsl
cs
stc
jl
dec
xlat
ss
jae
xchg
decl
out
mov
add
gs
leave
mov
fldcw
je
cmp
jnp
fcoml
sbb
xchg
dec
mov
cmp
jne
xor
inc
add
imul
dec
or
and
and
call
mov
lea
lahf
ljmp
test
icebp
xor
mov
call
sbb
xor
and
mov
in
fwait
cmpsb
dec
rcrl
adc
mov
cmp
std
call
clc
pusha
fs
push
lea
sub
in
ja
add
call
decl
and
shrb
sbb
mov
dec
je
xchg
dec
ret
pop
out
aad
fists
pushl
sub
jmp
inc
or
mov
jg
lcall
daa
shlb
gs
daa
jecxz
or
test
test
sti
mov
dec
jno
or
fdivs
jne
jb
aas
ficoml
xchg
lahf
or
test
jae
test
rol
cli
in
xchg
lods
sub
or
lcall
push
jbe
fnsave
mov
sbb
jecxz
dec
sbb
lcall
fnstsw
fcmovnu
sub
fisubs
fstl
xchg
mov
pop
mov
sarb
lcall
std
adc
dec
adc
cld
sub
lret
stc
pushf
nop
adc
mov
call
call
ja
mov
add
inc
jp
enter
push
jo
push
or
cli
jg
push
fiaddl
ret
jo
out
fs
rcrl
sub
push
roll
adc
ljmp
cs
xlat
jle
lea
test
dec
or
xchg
cmpl
int3
push
push
dec
arpl
xlat
xchg
jmp
or
dec
std
je
sbb
add
fimuls
ret
es
mov
add
in
jmp
ffreep
adc
mov
imul
sbb
ret
int
decl
aaa
jne
cmp
sub
mull
fldcw
mov
loop
iret
sbb
sbb
pop
push
or
jmp
hlt
mov
add
fldl
dec
cmp
inc
jns
adc
arpl
iret
repz
rclb
lcall
jne
sub
adc
fidivrl
or
dec
add
or
repz
in
lcall
xlat
jo
pop
jbe
mov
inc
arpl
adc
sahf
cmp
pusha
orl
outsb
ss
xchg
cli
mov
aam
jb
mov
mov
cli
sbbb
repnz
pushl
shll
mov
adc
aam
sbb
sub
fnstcw
sub
popf
sar
inc
icebp
roll
mov
dec
call
pop
lret
jnp
or
xchg
mov
fsubr
data16
pushf
pushf
leave
jo
loopne
arpl
ja
into
add
decb
inc
aas
mov
and
and
rcr
dec
xchg
cmc
mov
dec
jmp
lcall
mov
push
pop
add
xchg
sahf
lods
mov
push
add
add
mov
pusha
out
in
mov
leave
pop
sub
incl
addr16
pop
gs
jns
dec
ljmp
sub
push
stos
cmp
pusha
clc
mov
jmp
lret
xchg
lcall
dec
cwtl
jecxz
aas
sbb
mov
ds
sbbl
mov
mov
lods
push
ljmp
clc
mov
lcall
les
adc
mov
inc
push
push
adc
jg
sarl
or
fildll
jae
pop
add
addr16
add
mov
popf
mov
and
mov
addb
cli
cmpsl
fnstsw
sbb
sub
pop
cli
mov
jmp
aas
imul
into
test
je
or
addr16
mov
xor
incl
xchg
nop
dec
mov
in
pop
and
or
jl
pusha
cmp
push
or
xchg
fisttps
mov
into
mov
pop
test
pop
std
ljmp
repnz
mov
int
out
or
loop
xchg
jmp
mov
xchg
aas
add
negb
out
adc
jnp
or
lods
inc
xchg
mov
je
cmp
mov
aas
in
adc
or
repnz
pop
sbb
incl
loop
arpl
outsl
sbb
sti
outsl
dec
jbe
and
mov
pop
clc
xor
or
jge
sub
jmp
jne
mov
dec
cwtl
cmp
adc
in
scas
jns
clc
cli
clc
jnp
adc
rclb
push
lret
shr
jp
cmp
jns
mov
ljmp
xchg
pop
cmp
jmp
mov
or
test
add
mov
dec
fnsetpm(287
ss
push
dec
jmp
call
cltd
lret
fcos
mov
push
shl
sbb
fstps
data16
pushl
sub
addr16
adc
int3
roll
hlt
push
push
rcrl
adc
incl
sbbb
and
sti
movsb
sbb
jl
lret
out
xchg
in
jecxz
dec
repnz
incl
mov
sbb
scas
sbb
aaa
xor
add
cwtl
dec
cs
das
clc
in
insb
and
sub
call
out
fldenv
out
and
add
incl
ret
movsb
xorl
clc
and
and
push
adc
xchg
cmp
jmp
iret
xchg
mov
les
jno
add
push
cmc
mov
cmp
ss
in
call
mov
sbb
inc
cwtl
aas
lret
push
in
jmp
jae
jmp
xor
xor
imul
movb
gs
push
lcall
adc
jmp
idiv
loope
sbb
push
jne
lret
or
shrl
pusha
cmp
fmuls
imul
loop
mov
gs
push
rclb
ljmp
mov
add
add
xlat
mov
repnz
int
in
mov
and
jmp
mov
jns
xlat
mov
adc
jmp
adcb
sbb
jecxz
mov
out
mov
in
pop
inc
lods
mov
sti
rcll
sar
jmp
pusha
pop
inc
push
jle
cltd
movsl
pop
pop
jno
push
cmp
icebp
jg
lods
mov
das
sbb
push
inc
add
jle
out
mov
lcall
lcall
ja
cwtl
xor
fsts
inc
xchg
fstp
and
mov
pop
je
sub
push
dec
insb
push
decl
aad
call
insb
jmp
fisttps
or
cld
fsubrs
das
cli
adc
xchg
out
sahf
mov
and
je
ljmp
fsubs
cmpsl
repz
xchg
push
mov
inc
pop
jle
jne
mov
ds
test
jp
mov
icebp
jo
std
cmpsl
dec
popa
jg
jg
outsl
sbb
pushf
nop
sub
fnstenv
orb
lcall
lods
sbb
and
jbe
sti
out
sub
sbb
jge
mov
jbe
or
call
mov
call
call
fstpt
jne
lock
enter
jbe
iret
mov
cmp
add
insb
jp
mov
lea
xchg
and
jg
mov
es
push
rol
imul
xchg
ret
fsubs
or
cmp
pop
inc
std
mov
and
popf
push
mov
add
repz
jmp
cmp
lahf
cmpsb
sbb
out
adc
pusha
outsl
push
stc
js
lods
pop
mov
in
loop,pt
shll
add
cli
push
sbb
testb
orb
outsl
jp
sbb
das
cli
inc
inc
or
cmp
dec
cmc
cmpsb
repz
and
mov
call
sub
and
les
test
push
push
mov
in
pop
push
mov
ljmp
xchg
mov
mov
adc
mov
loopne
lret
xor
rorb
mov
lcall
pop
pop
ret
and
bound
push
pop
popa
dec
icebp
test
push
jne
and
lock
pushl
xchg
lods
adc
pop
sub
fistps
pop
mov
sti
in
insl
xor
push
popf
mov
roll
mov
in
xchg
dec
dec
popa
adc
sar
jg
mov
arpl
mov
mov
std
sti
addb
fwait
push
stc
add
pop
mov
les
data16
lahf
pop
call
push
shrb
movsb
pop
lds
les
scas
inc
sub
sub
jmp
das
faddl
arpl
inc
inc
movups
xor
in
sub
stos
and
push
ljmp
pop
les
pop
lcall
inc
into
jp
sbb
sbb
decl
jmp
outsl
negb
xchg
mov
dec
lcall
mov
pop
jmp
in
jb
pop
and
push
dec
inc
iretw
rolb
ljmp
jecxz
adc
hlt
arpl
mov
and
sub
pusha
and
push
fs
push
in
test
lret
dec
pushf
leave
jne
nop
jb
sbb
cmpsb
in
aam
cs
sub
fisttpll
decl
sbb
jns
clc
gs
hlt
lcall
mov
push
add
or
dec
test
cli
xchg
or
xor
js
cld
repz
sbb
negl
ret
fld
xor
idiv
mov
lret
mov
nop
lahf
push
out
insb
aaa
sbb
dec
or
ljmp
push
adc
jmp
insl
dec
xchg
jle
dec
sub
aaa
andl
lds
adc
inc
or
pushl
jmp
loopne
dec
jae
mov
jno
mov
adc
mov
nop
aaa
push
cld
and
jmp
repz
adc
xor
mov
std
sbb
ja
jl
shlb
xchg
cltd
popf
jg
jbe
rcl
in
pop
jp
adc
inc
lret
ss
mov
mov
pop
mov
adc
jbe
xchg
mov
push
add
ljmp
scas
adc
lods
insl
cli
and
cmpsb
mov
sar
incl
xor
dec
stos
jbe
insl
push
push
outsl
out
jl
xchg
dec
adc
mov
subl
call
mov
filds
daa
rolb
jne,pt
nop
cmp
sub
and
inc
test
push
pop
inc
mov
cld
inc
jp
cmp
stc
jo
mov
xchg
lods
dec
push
cmpl
push
xchg
jge
repnz
lcall
dec
out
adc
movsb
push
xor
cmp
lea
or
inc
jmp
inc
int
les
test
call
or
enter
sub
sbb
stos
movsb
jge
clc
les
popa
scas
int3
jecxz
push
xor
mov
dec
jmp
jae
pop
push
loopne
mov
cltd
cs
jnp
aad
mov
ljmp
xor
lds
cs
aas
imul
decl
insl
push
sub
dec
aad
or
jmp
out
aaa
dec
lods
mov
into
inc
lahf
mov
pop
jnp
push
jp
loop
jge
repz
push
jo
aaa
mov
pushl
and
adc
pusha
adc
in
ret
dec
cmp
sbb
inc
imul
dec
mov
loopne
inc
shrl
lcall
pusha
aaa
jns
mov
leave
mov
ud1
push
mov
mov
inc
pushl
jle
outsb
or
fs
cmpsb
aas
push
inc
test
and
in
jo
mov
mov
nop
mov
mov
inc
fsubrs
add
dec
mov
stc
pop
push
out
xlat
into
test
jmp
mov
push
into
gs
adc
pop
push
fdivrl
sub
or
lcall
push
in
xchg
inc
mov
mov
cmp
dec
pop
ljmp
out
cli
mov
mov
hlt
adc
shl
inc
scas
add
mov
mov
cld
push
iret
xlat
aaa
call
pushl
or
sbb
and
pop
lea
pop
popfw
inc
cli
push
inc
cmp
mov
xor
xchg
mov
xchg
scas
test
jbe
sub
jg
int
xchg
jl
jmp
std
xchg
or
jg
or
js
insl
push
lea
sbb
sbb
andl
ret
dec
lcall
adcb
lret
push
xor
xor
push
addb
outsb
in
mull
sub
lret
sub
inc
sti
scas
pop
mov
jbe
inc
int3
adc
addr16
cmp
shll
lahf
sub
iret
divl
aad
andb
hlt
push
pop
insl
cmp
sub
mov
dec
jns
inc
lds
adc
jb
std
call
dec
sbb
jbe
out
movb
pop
xchg
lcall
out
shlb
rclb
mov
push
jae
mov
lods
sti
push
or
daa
jmp
push
pop
lea
add
cmp
add
aas
lcall
movaps
scas
and
inc
dec
shrb
jecxz
loop
or
pop
jno
lock
and
nop
jl
cld
add
in
cmp
fidivrs
push
sub
int3
ret
fildll
and
sub
inc
mov
stos
cmc
out
inc
out
xchg
mov
test
jge
mov
pop
lods
or
jns
dec
int3
fisttps
lock
push
xchg
adc
gs
ds
sbb
inc
xor
fxch
gs
rclb
incl
js
pushf
cmp
mov
js
repnz
fsubrl
xchg
dec
add
jmp
xor
fnsave
pop
add
adc
sub
sbb
dec
cmp
ljmp
sbb
bound
mov
sub
aad
cs
xchg
pop
mov
shll
pushf
cmpsl
or
sub
addr16
jae
stc
add
loop
mov
push
aaa
notb
adcl
mov
outsl
rclb
lcall
dec
cmp
sarb
mov
enter
cmp
sbb
fldl
mov
pop
fsubrl
push
or
cli
cmpsl
iret
jns,pn
dec
es
jecxz
imul
lahf
loopne
js
movsb
call
dec
incl
adc
outsb
push
push
inc
sbb
xor
mov
mov
inc
decl
icebp
out
push
lock
das
and
outsl
decl
out
xor
sub
lcall
add
jle
shll
xchg
pop
in
and
sbb
sbb
xchg
dec
in
leave
mov
sub
cmp
xor
mov
xorl
adc
xchg
mov
std
mov
jp
call
cs
decl
adc
fsubrs
arpl
cmp
mov
and
xchg
les
arpl
sar
movsb
loope
stc
loop
sub
adc
pop
test
sbb
and
jge
out
mov
ljmp
arpl
cmp
inc
push
lods
ds
mov
mov
add
pop
movl
sarl
inc
xchg
sbb
add
call
jp
subl
or
cmpsl
jmp
mov
add
es
sub
ja
pop
xlat
ljmp
je
sub
stc
or
lds
aad
xchg
rcl
pushf
inc
push
or
dec
inc
int
adc
push
xchg
or
cmp
push
insl
dec
xchg
xor
sub
fucomi
push
mov
rcll
push
and
pusha
dec
loop
dec
scas
in
int
push
fidivrl
push
cmc
repnz
gs
decl
xor
mov
or
sub
addb
fdivr
lcall
or
mov
push
push
mov
clc
outsl
inc
mov
or
jae
incl
cld
movsb
or
andb
std
cwtl
and
cmp
xor
cmpsb
in
jb
add
call
inc
addr16
int3
jns
lahf
cmc
pop
adc
je
xor
pop
fists
and
sbb
decl
fsubrs
mov
aas
lret
data16
pop
test
dec
inc
and
mov
xor
sbb
dec
cld
xchg
add
leave
imul
jae
stos
mov
dec
or
or
ljmp
xor
add
jb
jg
scas
std
hlt
xchg
lahf
inc
rcll
add
lret
sbb
loop
pmuludq
or
cs
dec
pushl
cmp
fdivs
scas
fistpl
xor
cmpsb
in
mov
jno
mov
mov
fistpll
test
cmp
add
enter
in
fistl
lock
shl
pusha
lcall
xchg
push
or
test
fs
dec
or
or
jecxz
xor
push
insb
outsl
fwait
adc
out
jmp
inc
icebp
xchg
jp
cmp
popa
lret
push
out
call
push
mov
mov
dec
push
jle
push
stos
pop
mov
in
xor
xchg
jl
insb
mov
xchg
adcl
inc
sub
pop
or
dec
nop
ret
fstl
push
mov
mov
mov
hlt
sub
adc
sub
adc
mov
sti
push
push
sar
jmp
stos
fnstsw
repnz
pop
and
in
aaa
sbb
jae
push
xor
addr16
int3
call
xchg
sbb
sbb
cmp
scas
cltd
mov
or
add
in
xchg
mov
pop
imul
add
mov
push
ret
mov
rcrl
fsubs
jbe
pop
loop
push
in
sbb
jmp
pop
sbbl
pop
mov
push
jne
ficomps
or
cmc
xchg
cmp
test
out
hlt
pop
or
fwait
or
jne
lock
or
lock
push
xchg
pop
incl
xchg
sbb
and
cmp
ficomps
push
lods
inc
adc
xchg
call
lods
add
cmp
lock
adcl
mov
jne
cltd
sub
fcos
cmp
jl
cmp
test
loop
loop
orl
mov
mov
mov
mov
push
or
insb
and
cmp
ss
adc
in
icebp
jne
mov
mov
out
dec
cmp
inc
push
sbb
sub
jo
sahf
sub
add
push
add
jbe
xchg
dec
cmp
xchg
jp
insb
pusha
ret
outsb
in
imul
dec
xor
xor
das
fcmovnbe
imul
fdivrp
ja
sub
inc
xchg
sub
enter
pop
jmp
rcrl
jne
rcll
cmp
lcall
pop
fnsave
ret
xchg
xor
cld
insb
xchg
in
adc
add
mov
lcall
mov
mov
mov
shl
mov
or
pop
test
adc
outsl
ffreep
mulb
lcall
push
pop
icebp
data16
push
aas
es
shlb
xlat
jg
adc
push
js
incl
into
xchg
pop
scas
stos
cmc
rcll
int
push
lret
shll
out
push
aaa
and
mov
dec
jg
call
pusha
inc
and
and
cmpsl
aad
or
ljmp
add
sbb
in
dec
add
inc
pop
cld
sub
iret
inc
dec
lcall
lcall
mov
mov
scas
xchg
push
cmp
mov
jecxz
call
dec
imul
mov
sbbb
or
jmp
pushl
jl
mov
pop
notb
mov
dec
fisttps
mov
ljmp
daa
push
icebp
mov
fcomip
shlb
decl
jp
movl
sbb
std
scas
or
push
test
push
scas
aas
shlb
enter
add
adc
jbe
lock
pop
cmpsl
fmul
inc
jne
decl
fwait
mov
incb
test
pop
test
loopne
mov
ja
nop
pop
clc
std
jp
ret
sarl
test
fdivr
stos
inc
push
outsb
scas
or
jg
ljmp
jae
mov
faddp
mov
icebp
ljmp
ss
cmp
call
inc
add
push
sub
mov
lea
lret
mov
mov
and
inc
adc
call
loope
lea
and
sbb
mov
lcall
dec
jne
rorb
mov
je
cmp
clc
lcall
adc
sbb
xchg
mov
xchg
xchg
incl
xor
sahf
jb
sbb
mov
mov
pop
stos
in
stos
mov
aad
aam
jge
daa
ds
std
nop
cltd
inc
cmp
je
stc
loope
lret
ljmp
mov
lods
fiadds
enter
xchg
daa
adc
negl
push
loopne
xor
add
xchg
cmpsb
in
arpl
ljmp
test
and
mov
stos
fisubs
lret
cmpsb
push
data16
call
xchg
add
loop
jmp
fisubs
cwtl
mov
push
ss
cmp
out
push
dec
cwtl
sub
int3
add
inc
add
hlt
fwait
cmp
mov
pop
mov
ljmp
mov
push
in
mov
xor
jge
adc
jmp
ljmp
out
lds
and
inc
lods
dec
ljmp
jo
jno
insl
cmp
inc
inc
ja
call
push
push
push
int3
movsl
push
ds
and
das
cltd
js
decl
or
enter
mov
test
lods
testb
lock
les
adc
insl
pop
sub
lcall
jle
mov
imul
xor
imul
incl
incl
and
dec
test
rorl
cmp
sti
and
stos
stos
mov
adc
fcomip
std
daa
mov
int3
fs
stos
sub
data16
addr16
adc
dec
add
lcall
dec
adc
test
nop
inc
leave
dec
mov
insb
pushf
cmp
xorps
fnstsw
push
jmp
ret
and
scas
xchg
jb
insl
stos
subl
push
shll
iret
mov
shll
xchg
ljmp
andl
jb
stos
or
or
loope
inc
jnp
scas
in
in
or
dec
jle
mov
shll
and
outsl
scas
iret
xchg
and
sbbl
ret
call
sub
jnp
jmp
lock
and
mov
in
lods
pusha
push
push
ret
ljmp
nop
outsl
jmp
divl
call
jmp
mov
stos
mul
push
cmp
test
jbe
lret
popf
jle
lcall
mov
popa
pushf
add
add
idivb
mov
ljmp
xor
call
ror
xchg
jg
stc
mov
add
or
mov
pop
setge
call
cmp
jae
adc
add
mov
mov
and
xchg
sub
lock
pushl
xchg
xor
sbbl
fs
psadbw
dec
inc
mov
sbb
push
mov
addr16
push
int
sbb
jns
dec
lds
addr16
arpl
xchg
gs
jmp
inc
mov
das
clc
fcmovb
mull
iret
xor
sbb
inc
xchg
or
lea
pushl
clc
hlt
inc
dec
clc
sbb
pop
aaa
sbbl
outsw
sub
adc
mov
mov
pushl
repz
cmpsb
add
scas
in
rorb
dec
sahf
mov
push
dec
ja
fcomip
mov
jg
lcall
jp
dec
daa
jae
imul
icebp
out
sarb
cmp
pushf
xor
jg
mov
out
fstpt
push
aam
jnp
push
pop
sub
fldenv
xor
outsl
sub
movsl
sahf
sarb
cmp
fsubp
xor
and
jns
repnz
jnp
iret
jb
cmpsl
mov
jge
adc
cld
fmulp
push
xor
and
mov
inc
jmp
and
jmp
and
jnp
push
out
and
jo
and
cmp
push
imul
sub
loop
cwtl
repnz
test
add
aas
mov
mul
nop
int
pushl
je
push
sub
sbb
jo
ret
xchg
add
and
sbb
fwait
push
cmc
xor
sbb
pop
rcrl
faddl
js
jg
arpl
inc
mov
daa
xchg
xchg
test
push
mov
mov
incl
into
cmpb
add
and
fnstenv
cld
fsubl
call
lahf
cmp
les
mov
lret
add
push
das
jp
cmpl
incl
mov
fiadds
xor
or
jl
cmp
movl
in
pop
cmp
inc
or
pop
mov
mov
cmpsb
lock
pushl
fnstcw
loope
dec
stos
sub
sbb
pop
jae
jg
ds
neg
nop
mov
aas
ret
decl
into
sbb
clc
std
orl
leave
lcall
ret
es
out
xchg
fisttps
loopne
jl
push
mov
sbb
inc
xchg
inc
adc
adc
add
push
stc
enter
lods
pop
cmp
xchg
fcomip
jmp
icebp
subl
ret
hlt
imul
lods
mov
inc
in
dec
push
movsl
sbb
mov
stos
add
repnz
cmpsb
cmp
addr16
or
pop
test
lcall
cli
shl
adc
insb
jge
add
cmp
sbb
sti
scas
xchg
mov
outsb
sub
aad
imul
outsb
adc
add
jg
mov
popa
in
xchg
movsl
insl
in
mov
pop
sub
pop
or
jg
fildl
aaa
std
loopne
pop
xor
fdiv
shlb
mov
and
fisubl
ljmp
cmc
push
and
xor
addr16
pop
cmp
fwait
push
jg
shll
mov
jne
fildll
mov
xlat
pop
mov
stc
insl
add
mov
in
dec
test
movsl
ret
cmp
mov
pop
pop
outsl
es
jmp
push
ja
jb
and
xchg
outsl
dec
sbb
jg
add
cmp
jle
test
lahf
adcb
jmp
outsl
pushf
ret
test
enter
jmp
jns
sub
jg
test
mov
outsl
lods
sbbb
addl
xor
mov
ljmp
cli
out
gs
sahf
jle
je
loop
je
xor
arpl
dec
lcall
dec
insb
movl
push
mov
xlat
inc
add
fldenv
sahf
call
pop
popa
mov
mov
cmp
roll
cld
aad
loop
or
in
js
cltd
mov
out
fwait
jecxz
pushl
sub
inc
sub
div
and
inc
mov
loopne
xor
jae
push
fs
xchg
mov
fdivrl
in
dec
sbb
push
jbe
mov
es
loopne
push
aaa
and
mov
int
sbb
call
jnp
jb
fsubs
pushf
pop
xchg
cmp
adc
xor
inc
sub
sti
sub
jbe
decl
sbb
lahf
int3
or
inc
ficomps
clc
or
xchg
xor
adc
insl
push
xor
lahf
into
and
mov
jge
push
decl
adc
addb
push
mov
add
mov
int3
insl
jecxz
push
cmp
ljmp
fdivl
cltd
and
cli
and
cmpsb
cmp
fninit
lahf
lret
lret
inc
or
push
ret
call
mov
add
sahf
sbbl
incl
adcb
icebp
push
lds
sbbl
addr16
jmp
mov
sub
xor
adcl
clc
mov
ljmp
ret
add
iret
pusha
dec
je
xor
dec
mov
test
cmp
xor
jmp
add
sbb
dec
cld
add
and
jo
andl
lret
mov
ss
dec
push
clc
cs
sbb
dec
fisubs
out
fdiv
push
cmc
jmp
daa
lahf
inc
sub
ret
cltd
add
xor
cs
adc
adc
dec
jbe
sub
adc
pop
mov
or
lret
push
loopne
jb
in
dec
fs
sub
test
dec
dec
popa
adc
mov
nop
and
pop
mov
push
xor
insb
in
cli
mov
mov
push
adc
daa
arpl
stos
iret
lock
mov
pushl
cmpsb
pop
lock
movsb
mov
xor
mov
into
pop
loop
nop
xor
in
mov
ljmp
test
dec
mov
cmp
rcrb
std
cmpsl
negb
pop
call
pusha
ljmp
out
fistps
iret
ljmp
cmp
mov
stos
adc
das
mov
loopne
in
rcr
lcall
movsl
or
push
jg
fsubrl
push
adc
fistpl
aaa
push
sub
data16
mov
scas
xchg
icebp
stc
jmp
inc
mov
out
stos
gs
push
jp
sti
adc
lcall
nop
pop
and
call
xor
aam
mov
xor
or
or
sbb
push
adc
push
jns
pusha
outsb
std
lcall
mov
mov
jle
sahf
insl
adc
cmp
out
sbb
aas
ja
cmpsb
imul
cmpsb
inc
adc
pusha
sbb
nop
push
cltd
hlt
jb
sbb
inc
cmp
xor
push
loop
rcl
cli
jg
mov
and
orl
cld
adc
and
add
jmp
mov
xchg
mov
or
jno
bound
cmp
jg,pt
test
mov
lcall
push
dec
sub
pushf
or
push
in
gs
jecxz
cmp
fcoml
ficompl
xor
movsb
ljmp
rcrl
mov
and
mov
add
adc
inc
add
sub
ljmp
shll
hlt
push
mov
cmpsb
aam
gs
mov
jmp
push
incl
inc
movl
jp
pop
and
xchg
clc
ljmp
xlat
jmp
jl
mov
push
sbb
imul
mov
iret
pop
mov
dec
mov
dec
inc
mov
push
fists
mov
sub
std
mov
adc
and
lret
push
popf
adc
jmp
rcl
and
cmp
jbe
add
push
fsubrl
inc
bound
jnp
in
inc
adc
mov
mov
and
mov
fildll
stos
mov
push
and
out
mov
push
sbb
sahf
mov
int
adc
lock
ret
add
sub
outsl
xchg
jno
jl
xor
inc
sar
lcall
outsb
xchg
jmp
pop
cmp
sbb
lcall
jle
jmp
cmp
stos
scas
and
push
add
insl
mov
cmc
adc
and
ljmp
ret
ds
xlat
push
gs
rcrl
pop
mov
neg
push
mov
lods
call
push
adc
mov
addr16
pop
adc
add
cwtl
aaa
add
loope
jmp
scas
cli
ljmp
add
cwtl
pop
lods
pop
insb
pop
kmovb
dec
sbb
mov
out
cld
push
loopne
jmp
cmc
lock
imul
out
xchg
loope
mov
jmp
push
sbb
xchg
mov
pop
cmc
mov
cmp
testl
mov
sbb
and
imul
call
xlat
mov
mov
std
dec
mov
les
push
jle
inc
call
cmp
mov
call
cld
ljmp
std
clc
repz
in
jl
dec
scas
out
or
lds
cmp
push
outsb
incl
sub
xchg
pop
test
stc
xchg
mov
xor
and
dec
mov
pop
das
mov
adc
nop
inc
adc
call
les
xor
in
dec
and
fwait
aas
stos
push
adc
cmp
push
out
sub
iret
push
pop
sub
aas
xor
pop
div
gs
pusha
cmpsl
mov
fs
outsl
clc
jmp
mov
sbb
adc
sub
xchg
or
movsb
stos
jnp
ret
push
ja
test
decl
aad
pushf
ds
repnz
sar
scas
jb
repz
and
sbb
jg
or
fst
and
data16
jecxz
arpl
sahf
adc
mov
fcomip
pushl
cmp
sbb
insb
lods
shlb
in
xchg
daa
mov
dec
sub
xor
xchg
inc
arpl
stos
mov
cli
jne
call
cli
shll
mov
iret
in
ret
xchg
cmp
scas
jo
dec
lods
jbe
imul
test
and
int
sub
popf
mov
dec
push
pop
xchg
daa
nop
fs
lcall
sbb
inc
lods
out
lret
lret
fldcw
outsb
lahf
mov
add
jg
pop
sub
mov
mov
insl
push
movsl
pop
xchg
cld
outsb
xor
std
fcom
mov
and
mov
iret
mov
sub
lret
fwait
int3
sar
mov
cmp
dec
or
push
jg
jg
outsl
mov
scas
adc
cs
mov
int3
std
jnp
push
adc
aas
mov
sbb
outsl
call
in
rorb
pop
scas
pop
clc
pop
cmp
outsb
fs
jno
cld
pushl
xor
testb
dec
xchg
dec
and
sbb
ret
pop
sahf
jg
mov
out
dec
test
shl
fistps
rolb
push
leave
push
inc
andb
es
call
cmp
pop
hlt
sub
pop
pop
jns
xchg
cmpsl
cmp
out
out
in
ljmp
popa
adc
jg
fs
jns
imul
fistps
mov
decl
jbe
repz
xchg
adcb
mov
xchg
and
loope
cld
fmul
das
std
or
xchg
xor
inc
xchg
in
lock
daa
mov
sub
call
ja
or
mov
cld
jns
rorl
outsl
out
xchg
push
inc
jno
jge
jg
jne
out
dec
cmp
pop
popf
jle
into
cltd
xor
fistpl
inc
in
stos
mov
xor
cmc
xchg
jg
rcrb
add
test
enter
xchg
cmpsb
cmpl
shrb
add
mov
or
hlt
sahf
xchg
push
pop
loopne
mov
nop
mov
test
mov
xchg
int
fcomip
decl
ds
cmp
test
or
mov
inc
mov
js
push
fwait
shll
mov
sahf
push
jne
bound
jp
pop
into
cmp
xchg
inc
and
mov
xchg
dec
add
jle
ljmp
lret
idiv
cmp
add
decl
sarl
sub
cmpsb
stos
cwtl
dec
or
ljmp
xor
lcall
or
jae
adc
xor
or
subl
jl
mov
lods
jne
insl
insb
add
or
lcall
aaa
cmpsl
fimull
call
into
out
nop
push
mov
adc
pushl
cwtl
flds
cmp
cmp
lahf
icebp
or
outsb
sahf
jp
arpl
xor
adc
cmp
push
popf
jnp
push
scas
movl
adc
mov
cli
pop
jge
daa
ljmp
jmp
mov
stos
jnp
inc
adc
mov
out
bound
addr16
fistps
mov
jp
idivb
xor
mov
dec
jnp
xorb
pop
pop
shlb
sub
push
jg
xor
cmpsb
out
mov
jl
and
decl
lret
loopne
outsl
mov
sar
call
movsb
in
adc
dec
push
lret
in
stos
push
jb
cs
push
and
jp
cs
cmpl
incl
jge
mov
xchg
cmpsl
jb
loop
add
cmpsb
sub
or
dec
or
adc
lea
pop
jo
mov
cwtl
push
fimuls
or
sbb
aas
insl
sbb
mov
jb
je
rcrb
dec
das
jns
xor
int3
sti
inc
pop
jl
scas
xchg
xor
jg
push
push
xchg
push
mov
jmp
xchg
fists
ss
xchg
das
aas
loope
cmp
or
aad
sbb
xchg
jns
jnp
popa
mov
stos
std
out
mov
cmp
pop
sbbl
ret
xchg
pop
test
fsubs
and
lcall
es
pop
mov
add
cmp
leave
cmp
push
cmp
fsubrp
dec
arpl
adc
push
mov
xchg
ret
rorl
nop
mov
call
inc
enter
fisttpll
xchg
cs
jmp
xchg
daa
mov
push
shr
movsb
adc
pop
std
fimuls
sbb
sbb
outsb
or
divb
mov
and
push
inc
cwtl
mov
mov
repz
jmp
loop
push
insl
pop
mov
loope
pop
test
ljmp
popa
sub
push
repz
decl
xor
ret
cmp
mov
pop
ja
sub
push
subb
gs
fmul
fiadds
movsl
sub
popf
jb
xor
mov
jmp
cmp
out
adc
push
loop
arpl
push
mov
ljmp
es
movsb
cld
mov
ja
jecxz
mov
test
jp
mov
cmpsl
push
dec
stos
jno
popa
cwtl
mov
pop
addb
aam
pusha
call
loop
ret
mov
mov
push
popa
mov
pop
pop
outsb
clc
or
test
add
fidivs
decl
das
or
leave
mov
pop
and
mov
orl
mov
insb
mov
lcall
shr
jae
loope
cmp
mov
mov
lock
jb
pop
pop
or
jmp
jne
pusha
mov
adc
dec
dec
insl
test
popf
lds
push
xor
fdivr
decl
fnstenv
mov
loope
stos
lods
out
sbb
mov
sahf
mov
nop
scas
push
sbb
dec
fisubrs
cli
mov
mov
test
or
movsb
clc
xchg
pop
xchg
push
frstor
sar
rolb
mov
sub
mov
or
or
ds
add
push
movsb
scas
and
outsl
inc
pcmpgtd
dec
pop
cmp
xor
adc
jnp
add
fs
stos
addr16
push
cmp
lret
inc
sbb
mov
lds
xchg
rorb
pop
inc
adc
jle
push
cmp
and
sub
add
cld
fsubrp
pop
cs
mov
push
mov
int3
dec
das
out
mov
lcall
iret
xchg
lret
dec
mov
aas
adcb
popa
xor
pop
cmpsb
insb
dec
xchg
mov
xor
dec
pusha
cmp
movsb
je
aad
pop
insl
inc
sbb
jns
loopne
cmp
es
orl
add
fs
fnstcw
push
mov
mov
push
mov
call
cmpsl
iret
dec
stos
sbbb
xor
sub
add
ret
decl
and
mov
mov
lea
loopne
icebp
jns
dec
mov
ljmp
out
pop
inc
cwtl
mov
and
push
jmp
lret
jge,pn
popf
dec
mov
dec
ds
call
inc
les
dec
sub
cmp
roll
out
mov
and
sub
push
mov
incl
std
stos
dec
jge
addb
das
insl
in
sbb
jge
xchg
or
jbe
push
imul
xchg
clc
lcall
xor
cmp
cmpsl
jbe
mov
sub
call
or
xor
sub
test
js
xchg
cmp
out
es
sub
ljmp
and
pop
cmp
add
and
mov
jmp
loope,pn
xchg
notl
cltd
inc
or
sahf
in
mov
aad
xchg
mov
jmp
repz
ss
pop
test
xorl
out
or
outsl
add
dec
add
in
inc
das
cli
jmp
mov
adc
mov
in
into
test
int
xchg
loop
pop
divb
popf
push
sbbl
int3
sub
mov
mov
test
xlat
sarb
or
arpl
sar
test
pushl
andb
test
mov
pushf
repnz
dec
divb
hlt
mov
push
xor
cmpsl
inc
inc
inc
cli
mov
cmpsb
addr16
dec
out
test
inc
andb
xchg
out
pop
xchg
mov
pop
xchg
filds
mov
ja
es
mov
and
daa
xchg
pop
ljmp
and
clc
lret
sti
dec
push
popa
push
and
sbb
inc
hlt
and
mov
lock
popa
xchg
push
dec
ja
std
pop
sti
ficoml
faddl
pop
test
call
fbld
insb
cltd
es
addr16
sti
pusha
push
cmp
mov
lods
lahf
cwtl
jg
jmp
jl
jecxz
xor
movsl
nop
scas
das
push
mov
jmp
out
fdivr
pop
mul
xor
ljmp
lret
loop
mov
insb
xchg
aaa
push
inc
push
ljmp
dec
sahf
out
inc
jbe
jg
imul
lahf
movsb
lahf
aaa
jo
repz
in
dec
jnp
popf
repz
jmp
popa
addr16
leave
clc
dec
jmp
ret
icebp
mov
shll
jmp
jnp
andl
jl
and
enter
ret
push
es
sahf
test
lcall
add
je
mov
pop
push
mov
dec
data16
cld
lcall
or
lock
test
adc
sbb
enter
scas
fcomip
dec
mov
jg
popa
pop
leave
cs
push
mov
mov
cmp
cmpsl
ljmp
mov
adc
add
jmp
push
aas
push
pusha
std
loope
mov
xchg
dec
aam
xchg
enter
lret
or
ret
mov
cmp
or
mov
out
mov
je
icebp
fimuls
push
jmp
fs
popf
jecxz
std
leave
roll
mov
or
int3
out
adc
mov
sbb
mov
xor
cmp
mov
test
in
loope
loopne
or
iret
xor
adc
jmp
mov
popl
mov
lahf
mov
aaa
mov
mov
cld
gs
ret
mov
sbb
mov
lcall
xor
mov
fidivl
mov
xor
cli
mov
data16
fs
jae
dec
in
sub
inc
mov
ljmp
inc
dec
fs
push
or
rclb
or
adc
flds
lcall
pop
xchg
xchg
cmp
ss
lcall
jb
dec
mov
out
inc
sbb
mov
ret
jae
jp
int3
xchg
fildl
aad
xor
xor
ja
daa
in
mov
incl
adc
mov
push
adc
js
fwait
dec
xor
mov
stos
in
decl
pop
mov
popf
popf
gs
fldcw
stc
dec
mov
jb
jg
mov
cmpl
mov
ficompl
jns
cmp
push
lods
das
jmp
aas
cwtl
insb
fisubrs
mov
pop
mov
xor
out
popf
mov
pusha
inc
inc
push
bound
div
mov
sbb
push
jns
loope
push
lahf
inc
cmc
xor
pavgb
lret
test
cs
ljmp
outsl
int
stos
out
push
in
lcall
jno
add
and
mov
mov
sahf
mulb
enter
lahf
mov
in
add
lcall
cmp
loopne
scas
inc
loope
xchg
cmp
nop
inc
cwtl
sarl
lret
mov
push
adc
mov
jp
rclb
pop
or
adcb
cmp
fists
lahf
cs
cmp
jl
or
cmpsb
fidivrs
mov
ss
das
sub
cmc
int3
sbb
gs
push
decl
push
pushf
xor
sbb
cmpsb
mov
movsb
outsb
jae
push
stos
inc
mov
jle
rcr
insl
sbb
cld
subl
push
pop
xor
jg
pusha
shl
lods
push
adc
jp
fmul
rcr
idivl
lcall
or
xor
mov
xchg
jle
lds
xor
jns
shll
ljmp
repnz
jb
adc
lcall
push
jge
roll
inc
or
add
scas
cli
call
jae
fisubl
into
pop
xchg
sub
sbb
mov
jmp
and
outsb
mov
jno
sub
xchg
in
notb
icebp
or
sahf
fiaddl
mov
cli
data16
pop
cmp
daa
mov
leave
and
test
sbbb
fstp
xor
xchg
out
mov
cs
mov
aad
xlat
int3
sbb
xor
cli
xchg
clc
scas
clc
fdivs
rep
or
pop
or
dec
out
pop
cmp
sub
test
scas
xchg
iret
xchg
inc
xchg
rcrb
cs
fistpll
cli
incl
cmp
or
add
call
fwait
xchg
outsb
inc
incl
mov
push
ret
inc
idivb
pop
movsl
ja
add
add
outsl
jg
adc
sar
pushl
call
mov
adc
fimull
movb
nop
pop
push
sbb
incl
mov
inc
push
sbb
aam
fstp
xchg
jge
icebp
out
jae
pop
hlt
addr16
sub
test
jmp
jecxz
or
adc
js
testl
push
test
lcall
dec
test
mov
in
sbb
and
outsl
je
lcall
jp
js
pop
ja
fsts
push
fcoms
mov
pop
bound
stos
sub
dec
cmp
daa
cmp
pop
loopne
cmp
test
and
stos
sbb
addr16
bound
sar
incl
pop
scas
inc
or
dec
scas
mov
sbb
mov
jecxz
sub
retw
sub
lahf
mov
jmp
mov
out
push
sbb
cld
adc
xor
outsb
pushf
je
mov
rcrb
test
call
call
adc
pushf
rorb
adc
push
mov
mov
fabs
adc
cmpsl
pop
sbb
jns
outsl
es
ljmp
jge
icebp
call
movsl
xor
inc
gs
push
or
jecxz
loopne
pop
arpl
decl
sub
out
sub
mov
incl
and
mov
adc
push
or
test
adc
dec
leave
les
cld
push
push
das
fdivr
call
sub
xchg
sub
mov
or
and
nop
add
shlb
pop
jmp
mov
addl
imul
add
and
mov
outsb
mov
test
xchg
enter
sti
push
mov
jmp
ret
sub
jge
sarl
insb
adc
inc
mov
unpcklps
les
sub
push
sbb
lods
iret
dec
ss
push
jle
jg
ljmp
cmp
ret
stos
sub
pop
sub
in
mov
add
subl
sbb
pushf
aam
push
inc
sbb
stc
popa
hlt
mov
ret
jp
inc
test
out
scas
ljmp
andb
adc
pop
push
lods
pushl
jae
rcrb
or
inc
pop
sbbb
lret
pop
pop
lret
sub
shll
push
xchg
add
call
ljmp
call
cli
testl
mov
outsl
dec
nop
mov
andb
cmp
pop
jg
sbb
mov
xchg
daa
jno
mov
enter
enter
sbb
incl
imulb
pushf
outsb
stos
push
pushf
sbb
lods
sbb
dec
outsb
inc
inc
in
out
xchg
int3
or
filds
in
addr16
sub
test
insl
pop
push
aad
into
das
stos
ss
repz
ficomps
inc
jge
and
aaa
insb
jns
jge
test
push
fcomp
lods
les
dec
cmp
pushl
or
jae
ss
mov
pop
cltd
shlb
int
out
push
cmpsl
sub
sub
jecxz
jnp
das
aam
mov
push
outsl
call
mov
add
jg
cltd
xor
daa
loopne
rorl
push
add
or
sbb
pop
add
cmp
push
mov
xor
or
incl
mov
xor
mov
aad
out
icebp
fwait
mov
mov
or
loope
jmp
enter
sub
xor
ret
sbb
int3
jge
add
jmp
rcr
dec
fwait
xchg
or
and
testb
inc
aam
sti
ljmp
mov
sub
addb
add
lods
jg
or
sbb
rcr
sar
sti
hlt
lea
pop
xchg
add
and
push
into
or
mov
cmc
call
mov
adc
jmp
add
shr
jae
pop
mov
out
mov
lcall
and
mov
shll
sarb
lock
insl
inc
push
inc
mov
pop
loop
mov
add
jnp
adc
inc
nop
or
jmp
push
scas
pusha
scas
jbe
mov
in
inc
sbb
insb
or
push
rcll
in
adc
daa
xchg
mov
pop
ljmp
jg
loopne
mov
xchg
divb
fdivs
imul
mov
jb
mov
ljmp
sbb
bound
add
sbb
mov
nop
out
jno
jg
push
and
xchg
imul
push
sahf
lcall
mov
lret
push
mov
cs
mov
or
repz
dec
outsb
cmp
out
test
jg
inc
sub
pop
mov
stc
jbe
lods
xor
sbb
hlt
test
ljmp
es
ljmp
js
adc
pusha
frstor
dec
push
jg
outsl
lods
lcall
and
or
lock
push
decl
lds
mov
sbb
mov
out
testb
dec
decb
xor
outsl
adc
mov
decl
fstps
ret
fs
scas
push
mov
add
add
mov
sbb
xchg
in
scas
ss
fs
or
pushl
into
ret
insb
das
xchg
std
ret
es
xrelease
inc
std
sbb
in
dec
sub
adc
sahf
push
icebp
jmp
sub
cmp
and
dec
and
jno
cltd
pushf
cmpsb
and
mov
sub
filds
mov
adc
mov
fidivrs
xor
sti
packssdw
call
jmp
hlt
lods
insl
mov
sbb
fsubr
mov
jb
mov
pop
push
mov
out
pusha
lcall
mov
lock
outsl
fnstcw
xor
push
and
jg
jo
xchg
outsb
sbb
ret
xor
adc
sbb
ror
sbb
ss
lcall
rorl
xchg
ret
sub
daa
dec
in
js
mov
lcall
mov
sbb
lock
adcb
xchg
xchg
jl
imul
decl
mov
jno
add
insl
ret
mov
pop
jb
pop
arpl
fistps
orb
add
mov
pop
push
pop
mov
xchg
dec
jb
lods
gs
out
fdivl
push
or
sub
into
sub
out
jb
movsb
movsl
inc
push
hlt
jp
add
mov
cmp
movsb
stos
cld
xchg
pop
jp
out
clc
ljmp
fnclex
pop
ljmp
arpl
ljmp
inc
leave
incl
dec
mov
sbb
dec
push
or
mov
and
dec
adcl
decl
test
pop
cmp
sbb
hlt
jg
jae
ss
jo
es
xorl
mov
mov
push
mov
mov
mov
push
mov
das
mov
jmp
adc
loope
ret
notl
jnp
jb
ljmp
sub
sbb
cld
pop
in
add
dec
lock
ret
sahf
sahf
adc
lret
test
ljmp
lods
and
test
imul
xor
fxch
pop
inc
or
data16
cmp
and
insb
into
mov
dec
addr16
push
xchg
mov
jo
stc
push
outsl
mov
mov
es
mov
adc
std
xor
icebp
xchg
cmpsl
cmpsb
sarl
loop
out
inc
xchg
cmp
test
jb
fidivs
jmp
popf
ror
inc
dec
push
add
repnz
or
aas
add
jle
icebp
fisubrs
pushf
jg
or
mov
mov
xchg
call
stc
pop
pop
jl
jmp
lcall
xlat
fs
sbb
sbb
into
dec
out
movsb
test
xor
int
mov
cld
decl
insb
lock
sub
jge
sbb
cs
adc
dec
cmpsl
dec
icebp
in
inc
incl
call
cmp
jo
inc
das
sbb
ss
push
aad
iret
adc
decl
hlt
aam
mov
cli
add
xchg
sub
test
cs
push
dec
mov
and
push
xor
repnz
scas
jecxz
adc
jmp
in
dec
inc
shl
test
loopne
inc
xor
int3
lahf
mov
cld
or
and
jo
hlt
xor
pop
cmp
std
in
je
xchg
addr16
or
inc
pop
mov
out
bound
or
iret
mov
addr16
vpsraw
sar
ljmp
cld
adc
fwait
push
pop
mov
cli
fistpll
pminub
movsl
bnd
les
push
pushl
movsl
in
xorl
inc
repz
cmp
adc
daa
jmp
call
cmp
insl
std
jg
mov
ficoms
sbb
pop
adc
cmpsb
pop
xchg
mov
cli
push
xor
inc
stos
or
cmp
and
mov
nop
and
sub
inc
mov
sub
cmc
lcall
xchg
stos
push
mov
nop
popf
test
jecxz
test
js
dec
or
pop
pop
loope
in
push
rcrb
xor
sti
fisttpll
jb
loop
jae
xchg
sbb
fisubrl
cmc
lret
sbb
ljmp
jo
call
ret
jg
dec
aam
sbb
pop
shlb
aad
jmp
jb
fldenv
add
call
sbb
fucomip
int
sub
xchg
stc
je
repnz
adc
cmc
xor
mov
cmc
fisttps
cltd
int
ret
lret
stc
aas
scas
and
imul
std
dec
loopne
jne
out
call
lcall
inc
je
test
adc
stc
mov
or
addr16
std
dec
pop
sub
lcall
rclb
or
pop
adc
icebp
mov
xor
int
mov
outsb
popa
pop
call
push
jge
xchg
and
jmp
loope
pop
add
pop
in
fxch
cmpsl
push
mov
fbld
fsubrs
in
lcall
das
adc
or
cmp
stos
xor
add
sbb
incl
out
js
ret
jg
jno
jp
add
push
jle
int
pop
xor
out
xor
filds
pop
mov
aas
jo
lahf
add
imulb
cmp
push
cmp
inc
mov
movsl
and
dec
xchg
loopne
movsl
cmp
add
inc
push
test
mov
lcall
and
xcrypt-cbc
cmpsl
pop
lods
enter
test
jo
les
jb
jbe
jae
mov
fimuls
lea
cmpb
movsl
pushl
daa
push
fisubrs
lock
mov
cltd
jne
ljmp
xchg
sub
xor
or
decl
push
das
lock
ficompl
popa
inc
lahf
lret
stos
push
xchg
cmc
pushl
stc
mov
mov
add
iret
xor
pop
mov
pop
push
fwait
decl
and
sub
test
push
push
jae
jle
cwtl
xor
gs
insl
jb
pusha
xchg
lods
dec
out
xchg
mov
mov
call
out
scas
push
dec
and
mov
ja
dec
loop
xchg
sbb
rcrb
inc
fcomps
std
cmp
inc
push
mov
adc
imul
jmp
dec
mov
xchg
or
das
cli
cmp
mov
cmp
movsb
ss
mov
jecxz
incl
cld
fbstp
aam
mov
lret
cli
incl
sbb
loope
shrb
fdivrs
sar
pushl
sarl
mov
cld
add
out
jecxz
push
stc
add
les
stos
ss
jbe
scas
clc
jge
pushf
lahf
xor
lds
xor
sub
inc
mov
lcall
in
or
lock
lods
mov
mov
jle
les
scas
jp
cmp
mov
add
inc
pop
xor
mov
jo
loopne
xchg
jnp
movsb
cmp
cmp
iret
arpl
mov
cli
lcall
adc
clc
inc
mov
xlat
sbb
add
adc
or
sbb
ljmp
inc
hlt
xchg
iret
lahf
and
jmp
popf
repnz
pop
dec
push
decl
inc
outsb
pop
ja
add
repz
sbb
cmp
decb
dec
inc
test
icebp
or
jbe
jb
jmp
xor
es
popf
out
int
mov
jae
pop
lock
pushl
aas
mov
push
fadd
and
fwait
insb
xchg
popf
outsb
mov
leave
push
mov
mov
cltd
or
arpl
cs
hlt
jmp
ljmp
repz
xchg
shl
lock
iret
in
out
fiaddl
pop
ljmp
ss
incl
daa
loop
lds
mov
dec
xchg
push
jecxz
mov
int3
call
loopne
mov
addr16
jbe
cmc
test
sub
pop
mov
lcall
out
andnps
add
fisubs
and
adc
adc
sbb
in
cmp
int3
outsl
stos
mov
clc
int
jp
or
enter
sbb
sbb
leave
movsb
pushl
dec
adc
mov
sbb
rcll
and
aad
icebp
xchg
push
and
xchg
sbb
call
xchg
push
stc
cmp
inc
dec
inc
jne
jo
inc
xlat
or
call
popf
mov
ficoms
dec
out
add
sbb
and
and
pop
icebp
cmp
sub
sub
cmp
dec
dec
push
jae
dec
jo
jg
hlt
xchg
mov
scas
xchg
sub
cmc
lahf
int3
stos
imul
jge
cmp
inc
inc
clc
loopne
outsb
das
lock
or
add
cmp
mov
pusha
cmpsl
xor
xchg
sti
ljmp
gs
sbb
aaa
arpl
and
adc
mov
arpl
xchg
push
push
out
call
jp
fcmove
mov
imul
dec
mov
incl
jge
pop
fcomi
add
xchg
jp
inc
fcmove
adc
in
mov
rol
push
pop
pop
sub
jns
ljmp
clc
incl
push
xor
xlat
movsb
push
incl
lock
mov
std
sub
xchg
icebp
jns
ss
xorl
pop
sar
mov
fsubr
xchg
xchg
fstpl
cmpsb
inc
xor
lds
stos
jle
test
sbb
pushl
add
into
sub
mulb
pop
in
adc
xor
stos
sub
call
add
mov
xlat
mov
and
cmpsl
jnp
jo
aad
ss
jge
push
and
lcall
aas
push
sbb
cmpsl
jl
inc
mov
popf
mov
pushf
jecxz
pop
add
push
out
icebp
call
into
xchg
fs
adc
fnstsw
xchg
mov
leave
lea
fadd
mov
adc
decl
sbb
jmp
shrl
jne
shll
cmc
imul
decl
jl
jp
sub
movsb
scas
insl
inc
adc
adc
cmovnp
inc
dec
mov
sbb
and
jecxz
rclb
adcb
insb
cltd
cmpsb
fnstenv
lahf
movsb
push
sarl
cs
out
stc
imul
lret
sub
test
lcall
jp
mov
pop
ret
jl
jo
mov
xchg
ficoms
insb
jb
add
arpl
call
cld
pushf
mov
sbb
rcl
cmpl
pop
adc
jge
test
call
jne
cs
sti
repnz
addr16
jmp
push
or
add
iret
popf
jmp
xor
cmp
mov
aas
popa
cli
xchg
add
lods
das
movsl
and
into
in
and
jle
add
mov
out
data16
mov
xchg
insl
pop
lds
pop
sub
mov
bnd
incl
mov
aam
loop
jnp
imull
jnp
shrb
push
adc
or
popf
inc
mov
lcall
decl
sbb
nop
jo,pt
shlb
jne
adc
mov
fs
pop
aas
xchg
and
inc
cmc
iret
dec
pop
mov
daa
scas
push
or
imul
loope
mov
in
cmp
adc
test
stc
mov
or
xchg
push
mov
inc
pop
test
mov
fwait
lret
cld
icebp
ret
ffreep
popa
loopne
cmp
xchg
daa
std
pop
iret
mov
xchg
sbb
ljmp
mov
outsb
rolb
and
repnz
insb
into
in
clc
fisttpll
mov
jmp
jmp
mov
aad
subl
cmpsl
xchg
addr16
and
call
cmp
fnsave
xchg
ret
stos
jae
arpl
std
lcall
mov
decl
cld
repz
aas
push
ljmp
push
jg
data16
nop
push
pop
cmp
cmpsb
lcall
cs
or
and
lea
pushf
mov
sub
stos
notb
push
je
aad
inc
in
stc
scas
movaps
adcb
fcmovbe
ret
icebp
push
std
imul
jg
push
imul
mov
rcrb
inc
dec
push
pop
sbb
jg
sbbb
inc
popl
sub
test
and
iret
call
nop
dec
test
add
lods
jbe
in
loopne
out
fnstsw
les
mov
loopne
lds
jmp
jo
jle
fidivrs
xchg
mov
cmp
cmp
jp
fiaddl
daa
outsb
lock
jo
bound
lret
mov
aaa
pop
call
jmp
mov
pop
ds
mov
into
int3
mov
cwtl
nop
mov
movsl
loop
call
pushf
cmpb
xor
xchg
ss
xchg
cmp
movsl
repnz
fs
stc
test
in
int3
es
dec
out
mov
jmp
sbb
fstl
jns
cmp
or
jge
adc
out
nop
sbb
ljmp
aas
mov
dec
clc
scas
sub
dec
aaa
and
sbb
xchg
fs
aaa
cld
cld
adc
jae
xchg
fldcw
insl
sub
pop
pop
mov
xor
into
shrl
sub
xchg
and
mov
dec
jp
fidivl
lahf
jno
fildll
sub
adc
push
adc
mov
sqrtps
sub
sub
incl
adc
or
xor
fcoml
mov
xor
andb
jg
mov
inc
scas
mov
mov
jge
arpl
sub
leave
xlat
pushl
inc
jnp
mov
std
aas
fadd
int3
rcr
sub
in
jb
pop
sbbl
data16
xor
jmp
push
jg
push
pop
pushfw
icebp
pop
lods
je
mov
aam
div
nop
cltd
xchg
pusha
dec
ss
outsl
cli
decl
mov
xlat
mov
mov
and
and
dec
cmp
imul
pushf
movsb
pop
insb
inc
push
pop
fistps
lock
leave
in
shll
vshufps
dec
rolb
cli
push
fnstenv
das
shrl
and
pop
repz
pushl
jb
push
test
mov
scas
xchg
mov
pop
mov
mov
andb
mov
std
xchg
cmp
ljmp
test
mov
xchg
incb
dec
add
fstpl
and
ljmp
test
mov
lcall
cmp
aad
mov
mov
dec
and
ljmp
mov
lods
cmp
mov
lods
loopne
push
or
jle
push
cmp
cmpb
fs
sub
in
fcmovu
adc
mov
ljmp
mov
xchg
shlb
ja
shrl
sub
out
adc
addl
jnp
sbb
enter
std
and
mov
jle
and
mov
test
pop
mov
cltd
and
incl
idivb
xchg
inc
lds
call
xor
in
inc
stc
hlt
pop
outsb
jl
in
sub
lahf
jmp
call
pop
push
dec
sub
xlat
aas
mov
or
add
in
and
adc
lcall
incl
fsubr
outsl
fnstcw
sbb
cli
mov
xlat
add
incl
mov
rsqrtps
cltd
pop
ljmp
mov
add
scas
mov
add
aad
xor
push
or
mov
add
mov
pop
xor
enter
call
pop
sub
cmc
and
iret
mov
xchg
mov
dec
mov
mov
dec
push
inc
scas
cmp
bound
mov
lahf
sub
int3
fstpl
or
loop
lret
stc
imul
fcomps
sbb
pushf
out
lds
mov
hlt
insl
fcmovnu
int3
cld
sbbl
adc
xchg
mov
or
out
cli
stos
cmpb
xchg
test
mov
cmp
pop
mov
jbe
lcall
mov
xor
mov
xchg
inc
fidivrl
or
dec
fmuls
cmp
scas
sub
inc
pop
sbb
andb
sub
out
test
sub
fnstenv
mov
jne
out
jne
and
loopne
push
cmpsb
test
xchg
pushl
or
cmp
mov
add
js
pop
xchg
add
fsubs
sbb
incl
pop
inc
incl
or
sbb
xchg
mov
fwait
or
push
popa
or
jnp
scas
in
push
cmpsb
add
jle
in
aam
loop
or
dec
mov
incl
flds
jae
out
aad
sub
mov
adc
dec
arpl
xor
add
ljmp
and
push
lods
xchg
jns
jecxz
sarb
es
mov
add
inc
sub
cmc
dec
out
roll
push
aad
push
pusha
lahf
push
jne
aam
jmp
jb
in
out
add
jecxz
pop
sti
es
mov
jmp
mov
cmp
arpl
pop
lock
imul
aaa
push
insb
lret
loopne
mov
ljmp
mov
jb
pop
repnz
add
mov
incl
xor
shll
add
in
xchg
cmp
lahf
jmp
out
ret
pop
jecxz
add
and
jns
pop
fdivl
and
pop
xor
sbb
stos
fcomip
xchg
pop
cmp
ds
sub
jecxz
inc
rol
imul
jl
inc
mov
or
push
mov
jbe
xor
push
repz
arpl
pushl
nop
call
stc
push
es
adc
add
sbb
add
decl
or
dec
jnp
sbb
mov
loop
enter
jg
jecxz
mov
decl
incl
lahf
jle
test
add
pop
andb
or
lcall
fisttpl
push
outsl
lcall
pop
insb
cmp
stos
in
ret
addr16
ljmp
aad
inc
dec
andb
ja
pop
fs
stos
aad
in
dec
xlat
and
call
out
aam
jo
jge
test
adc
scas
sub
fwait
pop
ljmp
sbb
adc
add
or
jnp
stos
subl
decl
outsl
mov
fwait
inc
mov
mov
pusha
das
inc
and
jb
jge
rcrl
sbb
call
add
or
xchg
jl
movsl
out
rcrb
push
or
movlps
pusha
dec
jns
add
sahf
mov
or
cmpsl
ja,pt
inc
cli
iret
sub
or
sbb
mov
out
pop
pop
jo
pusha
jecxz
test
int3
and
mov
jnp
xor
data16
jecxz
dec
stos
mov
sub
cmp
mov
rcll
daa
in
lahf
xchg
call
push
push
or
pop
fimuls
fadds
out
stos
pop
mov
xchg
call
loopne
imul
inc
scas
jne
xchg
dec
ret
cmp
iret
enter
js
cld
xchg
fs
xor
or
and
xchg
dec
dec
ds
dec
popf
rclb
jbe
lcall
xor
xor
sbb
pop
pop
push
push
mov
cmp
ficomps
pushl
ljmp
cmp
xor
xlat
imul
clc
push
xchg
je
gs
jmp
icebp
sub
inc
movsl
push
imul
pop
lods
stos
cs
jp
or
mov
jecxz
or
movsb
ljmp
jae
shlb
decl
jle
movsb
jle
xchg
xor
lahf
insb
push
xor
sbb
adc
std
js
add
mov
sbb
mov
and
cs
popf
test
adc
imul
sbb
mov
xor
adcb
ss
into
lahf
push
jmp
stos
outsb
daa
xor
dec
mov
inc
jg
sub
repz
pop
inc
sub
pop
pop
std
stos
insb
ret
mov
incl
aas
push
enter
add
sti
xlat
push
sbb
xchg
mov
movsl
and
mov
sub
dec
in
ljmp
sahf
fidivrl
and
fcomp
and
add
dec
test
loope
mov
inc
xchg
mov
mov
mov
pop
cmp
mov
fwait
dec
xlat
add
incl
pop
mov
or
lock
stc
adc
mov
movsb
imul
inc
cmp
or
pop
test
addr16
scas
mov
js
sahf
xor
cmpsl
add
ljmp
call
jge
lret
fldcw
and
sbb
mov
rcr
lahf
xor
out
clc
jle
icebp
mov
dec
xchg
mov
sbb
jp
push
xchg
fnstsw
sbb
add
aad
lcall
jmp
jp
stos
daa
ret
loope
rcrb
push
or
aas
in
decl
sub
lahf
xchg
mov
xchg
push
dec
out
rorb
shrl
inc
push
push
scas
hlt
cmp
imul
dec
decl
fcmovnu
push
add
es
xchg
pop
push
or
call
add
movb
cmp
jb
xchg
fwait
jnp
int
pop
adc
mov
icebp
mov
mov
int
mov
mov
sar
ljmp
cmp
lret
xchg
or
pop
les
jmp
mov
inc
adc
xlat
mov
or
rorb
cmc
fcomip
mov
push
icebp
add
shl
and
jmp
add
cmp
adc
pop
inc
adcb
mov
dec
and
incl
sub
shlb
add
push
jae
mov
ja
mov
fimull
das
push
lret
jbe
mov
pop
push
pop
mov
lcall
jnp
push
shlb
pop
xlat
inc
xor
bound
fimull
data16
or
out
cli
pop
mov
inc
out
int
test
inc
nop
fildll
and
jecxz
adc
mov
outsb
lods
shrl
insb
jge
js
fildll
cmp
out
xchg
fs
pushl
and
or
hlt
add
lds
fwait
test
mov
xor
pushl
xchg
inc
add
das
data16
cmp
push
cmovo
in
ss
incl
sbb
cli
ficoml
mov
sub
mov
loopne
push
data16
adc
lcall
mov
sub
pop
xchg
adc
mov
es
xchg
sarb
and
jmp
xorl
pop
dec
and
sbb
adc
sti
inc
mulb
jbe
ljmp
cli
push
orl
dec
test
nop
push
gs
subb
cmp
negl
popf
daa
outsl
jg
mov
negl
cmc
cmc
adc
loop
push
dec
ret
jae
pop
ljmp
callw
inc
pop
fcom
push
mov
dec
leave
cmc
adc
sub
sub
es
mov
push
xchg
mov
fcompl
aaa
jl
ss
inc
fs
hlt
fwait
stos
incl
pushf
cmp
call
mov
push
dec
jae
or
decl
hlt
mov
mov
or
fdivr
cmp
sti
cmp
pop
shlb
adc
cli
sub
jae
fsincos
dec
push
adc
jmp
in
int3
push
shl
push
test
add
mov
and
pop
or
xor
mov
mov
push
xchg
add
insl
scas
mov
or
or
lock
jmp
pop
out
ja
cmc
jle
and
inc
mov
mov
sti
gs
or
dec
mov
jb
inc
bound
xchg
push
test
ljmp
popf
and
cmp
int
jmp
cmc
or
decl
mov
loop,pt
push
pop
loope
lret
xchg
call
lret
mov
loopne
sbb
push
xchg
mov
fistpll
mov
pop
mov
mov
dec
or
bound
sti
jne
jle
bound
push
hlt
adc
mov
or
sbb
and
ret
adc
dec
aam
add
push
lods
jp
call
jnp
mov
xor
loop
jmp
mov
mov
sub
imul
xorl
lds
lret
out
fiaddl
popa
dec
xor
mov
je
or
push
jo
sti
add
jg
and
aas
inc
push
inc
add
rcll
pop
dec
cmpsl
pop
lcall
fs
push
imul
pop
shlb
loop
and
ja
pop
mov
fs
sbb
aas
pop
push
sbb
std
jle
pushf
sub
lods
outsl
sub
call
mov
aad
decl
mov
mov
push
pop
ljmp
xchg
clc
xchg
and
xchg
fdivs
jg
jg
pop
fs
push
popa
fldt
add
mov
mov
push
pop
and
push
hlt
test
add
inc
insb
adc
aam
std
stos
notb
and
jmp
filds
cli
xor
fldl
jns
into
arpl
jmp
and
popa
sbb
fnstcw
push
dec
xchg
adc
cs
outsl
loopne
orl
decl
mov
add
mov
jno
mov
fxch
jle
push
cs
mov
inc
cld
fwait
loop
or
ljmp
js
mov
push
fmull
lcall
clc
std
push
ljmp
xor
xchg
and
popf
ss
aas
js
pushl
rcr
fdivrs
ret
mov
icebp
xor
xchg
scas
mov
or
ficomps
xchg
movsl
xor
shlb
jbe
xor
cmp
pop
xchg
std
iret
call
push
icebp
push
push
xchg
fs
and
sbb
lods
lidtl
push
std
repz
jbe
fcmovu
imul
decl
mov
popa
punpckhwd
xchg
orb
add
outsl
add
insb
div
iret
inc
push
dec
fs
insl
pop
push
push
fisubrl
rcrl
ss
xor
orl
icebp
jge
cmc
lcall
or
leave
jp
leave
lahf
imul
sbb
mov
arpl
mov
mov
mov
and
push
ds
fsubl
jmp
and
sbbl
mov
adc
imul
dec
leave
mov
ss
sub
lock
jg
or
sub
test
movsl
negb
gs
repz
insl
ss
mov
decl
js
lret
jo
shl
sbb
sbb
sbb
xchg
cmp
in
inc
lcall
std
je
xor
mov
xchg
or
sub
push
cli
dec
ja
mov
add
mov
pop
adc
ss
out
jmp
mov
push
popf
add
jp
movsl
daa
fildll
cltd
je
insl
pop
call
cmpsl
cmp
mov
add
adc
loop
xor
leave
or
push
add
rcr
mov
jae
aam
cmp
bound
sub
test
into
fidivrl
clc
call
push
sub
sbb
je
dec
pop
aas
popa
in
dec
sbb
icebp
incl
add
sahf
sub
stos
imul
les
lret
ljmp
sub
icebp
jb
enter
test
cmc
mov
xchg
adc
icebp
pop
test
incl
rol
xor
and
fcomps
lods
lret
dec
mov
push
loope
pop
sarb
mov
add
xor
xchg
imul
adc
pop
lods
cmpsb
add
call
cmp
imul
lret
inc
addr16
test
ljmp
cmp
jge
sbb
fwait
sbb
in
xor
or
sub
mov
pushl
mov
xchg
mov
fbstp
jns
stos
aad
pushf
adc
clc
cmp
lcall
jmp
jne
add
push
popf
sti
xlat
cmp
dec
mov
push
int
jmp
fmuls
cmp
dec
movsl
in
sub
add
loopne
mov
mov
hlt
fld
push
xor
into
xor
push
xchg
fdivp
outsb
sub
incl
push
and
scas
cltd
pop
sub
add
out
xchg
daa
pop
cmp
in
loop
pushl
and
mov
dec
jne
stc
inc
popa
xchg
es
xchg
push
jp
mov
sbb
jbe
mov
dec
cltd
data16
pop
jb
adc
sti
bound
ret
test
clc
mov
insl
ds
jg
sub
insl
or
divl
pushf
push
sub
repnz
ljmp
repz
test
jle
js
and
sbb
push
andl
ljmp
cli
adc
inc
fdivr
xchg
out
sbb
pop
decb
inc
aam
in
addr16
pusha
inc
or
add
mull
mov
push
lods
fidivrs
jecxz
adc
je
dec
call
or
jmp
xchg
mov
stc
mov
and
sub
aad
in
es
jmp
jns
nop
sti
icebp
pusha
dec
repnz
int
inc
mov
mov
test
cmp
loopne
cmpsl
popf
ret
mov
jecxz
mov
sbbl
or
cmp
call
adc
mov
arpl
fsubs
or
lret
leave
cmp
call
std
pop
or
out
outsb
out
add
adc
in
sbb
push
and
ljmp
add
mov
inc
out
ljmp
mov
addb
add
pushl
cmpsb
and
sub
movsl
stc
xchg
rol
or
cmc
arpl
cmc
dec
fs
call
out
and
xor
std
into
cld
ret
cmpsb
icebp
imul
xchg
repz
xchg
ficoms
xchg
mov
test
jg
test
inc
and
adcb
movsl
adc
pop
dec
aaa
xchg
incl
shr
andb
push
mov
push
jae
pop
shrb
dec
loopne
inc
cmpsb
sub
sub
mov
in
push
mov
inc
pop
mov
cmp
cmp
lahf
push
or
outsb
pop
nop
dec
mov
das
outsb
cmp
test
inc
popf
mov
push
mov
xchg
es
popa
mov
sbb
sbb
xchg
pop
ljmp
ljmp
dec
dec
push
mov
jnp
pushf
push
loope
sbb
push
add
push
cmpsl
cmp
inc
mov
inc
ficomps
movsl
sub
sbb
dec
sbb
int
hlt
xchg
fsubrl
sbb
mov
mov
fnstcw
fcomp
or
stc
cmc
jnp
mov
ljmp
mov
jecxz
push
jno
adc
add
dec
jl
fdivrs
into
pop
loopne
push
xchg
or
push
mov
cmp
rcl
and
lcall
mov
ss
and
jl
inc
mov
pop
jo
lret
or
jmp
dec
cmp
leave
mov
cs
cli
mov
adc
pop
test
ss
mov
in
scas
sub
in
dec
in
jbe
sahf
fistps
mov
fadds
sbb
call
cmp
push
pop
xchg
js
leave
sbb
pushf
loopne
dec
lcall
cli
loopne
shlb
pop
adc
dec
add
bswap
int
outsb
test
push
pop
fdivrp
dec
sti
mov
sahf
jne
pop
jl
push
out
enter
leave
call
cli
ficoml
les
mov
xchg
ret
push
jmp
sub
adc
dec
mov
pop
das
inc
mov
ljmp
pop
xlat
fimull
loop
sahf
dec
dec
jnp
push
mov
push
jl
lret
cltd
rclb
jnp
sahf
xlat
sub
scas
add
jg
aad
xchg
xchg
stc
dec
scas
mov
fstp
mov
xor
and
inc
xchg
pop
pop
lcall
insl
xor
test
jle
fdivl
mov
jecxz
lods
add
roll
push
cmp
out
decl
outsb
lcall
mov
jb
lcall
push
enter
incl
and
inc
pop
mov
in
pop
push
lods
fmul
into
subl
lcall
push
fsub
lea
loop
mov
int3
sbb
inc
push
and
adc
js
in
mov
icebp
stc
loope
imul
mov
add
decl
xchg
mov
dec
mov
and
pop
adc
jns
jno
insl
leave
xor
lcall
jae
adcb
lahf
cmp
pop
imul
pop
imul
out
mov
cmp
jg
in
mov
push
jg
clc
cmc
push
jo
sbb
inc
out
inc
pop
xchg
sub
out
sbb
fcomip
dec
sbb
outsl
cmp
inc
xlat
outsb
shll
std
pop
inc
mov
mov
cmp
cmpsb
sarb
pushl
mov
xor
je
and
shr
push
pushl
mov
jle
jmp
repz
inc
mov
loope
lds
jbe
popf
adc
pop
mov
lcall
jno
jae
inc
cs
mov
xor
lcall
cmp
jg
les
shll
pusha
outsl
jl
xor
mov
cld
addb
jle
mov
hlt
lcall
outsb
or
pop
ja
fistpl
rcll
jle
cli
decl
sub
std
mov
mov
jns
xor
add
gs
push
iret
add
call
testb
sbb
mov
mov
sarl
sub
sti
es
dec
xchg
flds
push
ret
shlb
scas
xor
dec
xor
and
mov
andb
cli
inc
mov
hlt
mov
aas
lea
js
jne
jge
in
mov
sbb
pusha
ret
xor
icebp
movsl
pop
lea
dec
xor
xchg
mov
adc
cmpsl
decl
cmp
test
outsb
xchg
shll
mov
or
jns
xor
add
call
add
sbb
push
mov
fs
ret
dec
mov
xor
in
call
rclb
insb
inc
jmp
into
aad
add
mov
pop
sub
cli
sbb
loope
add
pop
fistpl
imul
in
sbb
insb
aad
call
arpl
fcompl
add
ljmp
mov
jecxz
in
mov
jg
fcmove
cmp
jmp
loop
sbb
add
decl
mov
xchg
sub
push
xor
mov
jns
jg
lods
das
jp
dec
pushf
rorl
test
in
lahf
xor
call
ret
jb
xor
das
cmp
xor
clc
cmp
dec
or
lcall
lcall
enter
cmp
push
or
adc
pop
xchg
mov
jb
add
xchg
cmp
idiv
jmp
jno
dec
xchg
sbb
into
int3
mov
xchg
ret
gs
mov
push
cli
lcall
inc
adc
addr16
jns
addr16
mov
push
shl
mov
popf
push
ljmp
jmp
mov
std
push
jmp
call
adc
std
jg
into
push
cli
out
adc
popa
aas
idivb
push
sub
pop
jg
or
pop
jnp
mov
jecxz,pn
daa
cmpb
and
loope
mov
mov
and
shrl
push
mov
test
adc
lret
gs
shlb
pusha
inc
adc
sub
xchg
loop
mov
inc
loop
adcl
push
call
adc
add
pop
insl
call
dec
iret
xor
adc
jmp
mov
call
mov
jp
xor
icebp
testb
jo
mov
ud0
scas
clc
cmpsb
or
daa
jmp
stc
fldenv
mov
pushf
jns
xchg
push
lock
mov
mov
mov
ds
jns
ljmp
inc
pusha
out
mull
leave
push
jp
mov
mov
xor
inc
leave
mov
cmpsl
ja
sbb
pop
add
fildll
xchg
inc
fcoms
sub
cmp
cmp
or
pop
pop
pop
stos
jns
sahf
inc
sbb
xor
pop
test
pop
pop
or
lahf
movb
xchg
jecxz
cmpsl
sahf
shlb
inc
mov
mov
test
scas
cmpsl
push
sub
xchg
loopne
call
divl
lods
adc
in
inc
jecxz
out
dec
mov
jg
cs
cmp
pop
mov
rorb
jl
icebp
xchg
cmp
fadds
fsubrs
mov
dec
adc
test
nop
icebp
adc
fnstcw
xchg
cmpsb
mull
scas
test
and
out
pop
lcall
out
setbe
sbb
cltd
repnz
inc
lock
xchg
cmpb
or
cmp
outsl
cli
ficoms
test
cmp
sahf
cmpsl
or
out
sbb
mov
push
daa
sbb
popa
fdivr
ljmpw
sti
jle
jp,pt
ja
xor
sbb
jg
mov
ret
xchg
dec
ret
inc
cmp
push
mov
decb
in
insb
mov
dec
repnz
mov
addr16
cwtl
inc
lret
dec
and
icebp
jmp
negl
mov
out
dec
gs
jge
call
push
cmp
popf
pop
andl
outsl
mov
pop
xor
push
aad
dec
mov
pushl
add
pop
fwait
push
lods
or
jo
dec
rolb
test
adc
mov
jmp
and
bound
inc
outsl
out
xchg
int
out
or
or
pushl
xchg
sbb
mov
pop
cmp
test
mov
hlt
jmp
stc
lcall
and
mov
xor
ret
clc
fcomi
mov
jg
lret
dec
inc
mov
sar
popf
mov
enter
bound
call
jae
test
adc
lock
mov
xorb
pop
scas
jo
inc
adc
in
fcmove
scas
dec
lret
cld
ljmp
out
mov
aad
xor
add
call
mov
jae
lods
xlat
add
pushl
movsb
xor
das
iret
pop
fisttpll
test
loop
mov
adc
int
lcall
cmc
scas
out
add
add
dec
fucomip
outsb
adc
mov
popa
call
fwait
leave
sbb
adc
xor
push
push
mov
dec
push
and
insl
mov
lcall
repz
cmp
mov
test
and
mov
call
mov
fstpt
dec
and
sbb
mov
dec
mov
inc
adc
xchg
jb
jo
gs
cmp
lret
sti
inc
sub
xchg
jle
mov
sbb
cld
pop
cmp
aaa
ret
aam
dec
push
pop
iret
sub
add
mov
decl
sbb
xlat
jno
repz
or
pop
lret
pop
mov
xor
mov
sbb
and
shlb
rorl
outsb
cmpsb
mov
jecxz
fstpl
add
jne
inc
or
ljmp
scas
mov
lret
fsubrs
and
xor
mov
xchg
fs
stc
mov
int3
adc
outsb
and
das
decl
jae
adc
nop
jnp
jmp
or
push
jno
pop
push
mov
push
and
dec
sbb
mov
sbb
fldt
inc
out
inc
jmp
dec
inc
or
andl
and
fimull
inc
adc
cmp
sub
js,pt
push
ljmp
and
scas
sub
ficompl
lret
adc
xchg
sti
repnz
aad
incl
in
sahf
mov
bound
jno
mov
fildll
and
inc
xchg
popf
dec
hlt
xchg
jb
fucomi
xchg
shl
adc
into
mov
add
xor
ljmp
cld
inc
adc
xor
jmp
fnstcw
sub
inc
addl
fwait
std
xor
push
or
mov
jg
mov
add
dec
push
loope
aad
fsub
mov
and
ljmp
in
jne,pt
adc
movsl
in
xlat
push
lcall
decl
inc
mov
dec
repz
push
cli
imul
ja
sar
test
cmp
jae
scas
xlat
pop
dec
dec
inc
cli
fucomip
pop
sbb
add
aad
lods
mov
mov
nop
lret
dec
mov
loopne
mov
inc
dec
ljmp
mov
sahf
ss
fisttps
negb
mov
mov
pop
sbb
fistpll
jbe
loop
loop
ss
add
aad
sub
sub
loope
mov
cmp
notl
arpl
loope
lret
sar
ljmp
gs
lahf
xchg
icebp
dec
adcb
pop
add
idivl
addr16
push
mov
test
ljmp
aam
xchg
mov
lcall
dec
pop
dec
cmpsb
mov
mov
in
sub
mov
in
es
movswl
or
jl
mov
inc
cmpsb
hlt
jnp
es
pop
icebp
jmp
adc
shrb
dec
jl
test
gs
adc
in
aas
addb
cs
push
lock
push
and
xchg
pop
out
mov
fwait
and
hlt
xor
mov
mov
jecxz
fld
jo
in
decl
cs
icebp
movsb
pop
fwait
or
loopne
adc
and
insb
mov
lcall
xlat
imul
or
shlb
jmp
mov
aam
cmp
jl
adc
sub
fcompl
xlat
fnstenv
or
sbb
sub
add
repnz
cmpsb
sub
mov
sbb
xchg
inc
pop
or
cmpsl
ljmp
pop
pop
repz
andb
push
cmp
out
adcb
hlt
popf
inc
pushf
stc
insl
outsl
inc
adc
decl
jge
and
test
or
jae
lcall
inc
aaa
sub
add
test
cmp
xchg
and
loope
cmp
cmp
incl
dec
cmp
xchg
mov
call
out
xor
shll
lea
cmpsb
call
push
out
fsubrp
scas
into
push
mov
jo
sbb
call
xchg
pop
es
mov
out
pop
inc
in
es
push
sub
paddb
je
lock
adc
scas
mov
call
sub
jecxz
jb
sub
xor
or
lods
inc
das
test
stc
push
push
subb
mov
cmp
jmp
dec
mov
fisubs
stos
incl
aas
lret
in
int
stos
and
pop
mov
nop
mov
add
ljmp
and
jge
push
ret
cwtl
jnp
or
rcr
adc
mov
adcl
pushl
sbb
pusha
inc
pop
cmp
jb
call
cmp
int3
scas
sub
inc
inc
out
mov
decl
pop
push
and
push
mov
inc
mov
sbb
sbbl
xor
fisubrl
test
ljmp
xchg
pop
xlat
mov
dec
outsl
data16
sbb
daa
out
inc
push
fwait
in
mov
lret
jl
mov
fisubrl
add
std
movsl
fnstcw
movsl
lods
jge
adc
mov
test
cld
addr16
iret
push
add
nop
sub
sbb
xor
adc
mov
in
roll
fdivs
jmp
inc
call
pop
pop
fsubr
push
push
or
pop
in
push
mov
aas
ja
push
jmp
pop
loope
jno
fs
aad
daa
sbb
icebp
stos
sub
cmp
fs
inc
or
incl
sub
and
cmpsl
aad
inc
stos
test
pop
sub
out
clc
mov
mov
or
dec
icebp
loopne
pop
mov
adc
out
les
or
push
xchg
sub
xor
lds
jmp
sbb
jg
je
jmp
inc
xchg
cmp
aas
mov
jo
ds
xchg
push
flds
xor
xchg
lea
sar
xor
push
xchg
inc
imul
xor
test
xchg
jmp
and
xchg
dec
xchg
loopne
shrb
pop
fmuls
enter
lcall
decb
aam
clc
sub
pop
enter
xchg
or
ss
loopne
and
lods
insb
push
jp
push
repz
js
addr16
and
icebp
jl
jmp
sahf
lods
mov
and
in
or
xor
or
rorb
push
xor
xor
push
jge
jmp
aad
dec
sbb
cmp
int
orb
scas
xchg
ljmp
cmpsb
jge
gs
sbb
jmp
xorl
adc
les
iret
mov
movsb
pop
int3
gs
push
lcall
aaa
aas
loope
adc
std
leave
jns
mull
sar
pop
lret
jg
mov
repnz
jmp
dec
mov
inc
cmp
cmp
test
call
dec
out
iret
mov
push
xor
lds
aaa
jnp
add
inc
aad
mov
lds
mov
test
push
push
jmp
fwait
mov
pushl
pop
scas
out
rorl
jl
arpl
adc
jp
sti
mov
sbb
les
incl
test
lahf
and
mov
ror
jle
jo
shll
dec
sub
loope
push
jl
inc
iret
xlat
jb
and
sbb
fdivs
add
xor
pop
es
jmp
outsl
fldl
cmp
pushl
or
out
gs
imul
dec
cmc
aas
and
in
std
sbb
hlt
add
adc
or
aam
ss
xor
sub
jae
mov
pop
hlt
ds
inc
in
ljmp
dec
out
out
loop
and
jl
hlt
cld
call
cmp
adc
xor
cmp
ret
in
push
lea
xchg
es
in
arpl
call
pop
dec
xlat
xchg
xor
cmpsl
mov
push
mov
add
les
pop
pop
hlt
call
pop
fbstp
push
aaa
mov
addr16
inc
xchg
int3
or
fistpl
and
ljmp
pop
jo
leave
bound
and
pop
push
xchg
dec
out
and
dec
adc
add
pushf
int
scas
xor
fbld
lahf
inc
aas
mov
pushl
add
imul
and
stos
pop
cmp
push
test
and
inc
icebp
popa
sti
jmp
test
jp
dec
test
ljmp
ret
enter
in
cmc
pop
and
test
sbb
lods
jmp
adc
fwait
sub
call
jle
pop
mov
imul
test
outsb
push
xchg
sub
ljmp
icebp
movsb
cmpsb
adc
add
sub
fcomip
pop
stos
push
decl
sbb
rcll
push
pop
clc
or
lcall
mov
mov
inc
add
andl
sub
push
lods
lods
mov
out
pop
pop
sub
xor
sar
fistpll
sub
das
adc
cmp
arpl
test
mov
mov
mov
xchg
testl
incl
mov
lock
cmp
mov
enter
clc
mov
roll
mov
stc
jmp
mov
addr16
jp
xor
mov
inc
xchg
push
mov
or
jmp
xchg
mov
sub
repz
mov
test
push
push
mov
jp
jg
js
std
or
es
jmp
test
mov
lcall
and
dec
push
stos
arpl
sub
pusha
mov
jle
inc
notb
push
insb
aad
aad
jmp
cmp
or
sub
xchg
sbb
lret
ss
or
stc
repz
test
mov
addr16
outsl
pusha
lds
push
sbb
icebp
decl
pusha
pop
fsubr
xchg
shr
pusha
scas
mov
fidivrl
nop
push
ljmp
cmp
jmp
lahf
lcall
cli
scas
pusha
test
push
pop
popf
out
aam
lea
pushf
jne
arpl
call
cld
or
or
data16
mov
movsl
xchg
jecxz
and
pop
xor
cmp
bound
loop
inc
ds
negb
jns
mov
push
cmp
popa
xchg
jl
add
in
addb
inc
inc
and
cli
stos
add
cwtl
jle
cs
mov
ljmp
push
sbb
dec
call
cmp
sbb
orb
add
bound
cli
shl
ljmp
ljmp
push
fbld
and
outsb
stc
xor
decl
idiv
mov
mov
add
jb
inc
xor
adc
icebp
repnz
mov
mov
icebp
test
filds
call
pop
push
push
jb
push
data16
lcall
or
sbb
incl
fs
aaa
in
icebp
inc
addl
fisubs
lds
sahf
repnz
dec
loope
push
popf
mov
loopne
lret
ljmp
push
inc
andb
mov
or
lods
dec
out
adc
test
jbe
decl
bound
std
xchg
inc
pop
jns
out
fisubs
sbb
mov
sbb
sbbl
push
dec
std
out
sti
push
sub
pop
jo
fcmovb
gs
outsb
inc
cmpsb
fbstp
lock
dec
sar
aaa
push
aam
enter
out
sub
rclb
fdivrp
pushl
add
shlb
and
movsl
cli
imul
rcr
jg
jnp
incl
in
sub
inc
daa
push
in
cli
int
mov
push
call
dec
lcall
dec
add
or
jg
adc
cmp
scas
std
or
imul
jb
movsw
loopne
and
decl
sbb
jb
or
mov
push
pop
mov
outsl
imul
in
mov
add
cmp
adc
test
cmp
les
lcall
xorb
mov
fs
sub
pop
jp
cmpsb
movsl
data16
and
outsl
in
mov
mov
xchg
add
pop
cmp
in
clc
mov
adc
mov
cmp
leave
and
jnp
inc
mov
dec
mov
in
ljmp
push
inc
lahf
mul
enter
je
shll
jg
dec
outsl
rcpps
adcb
pushf
xor
arpl
insb
outsl
pop
cmp
cmp
pop
xor
mov
ja
cmc
lahf
sub
push
push
mov
push
decb
pushl
pop
adc
mov
inc
push
and
ja
adc
outsb
jmp
mov
xor
mov
jb
mov
arpl
fsubl
mov
lods
lret
ljmp
cmp
push
inc
sbb
stos
mov
jmp
loopne
stc
movsl
jecxz
jno
ret
pop
addr16
ljmp
clc
mov
outsb
jp
push
cmp
mov
shlb
push
sub
jg
pop
ret
lods
daa
icebp
mov
out
pop
ds
jb
or
cmp
jmp
pushl
std
xchg
sub
jecxz
lcall
fsubr
pop
push
xchg
xchg
pop
pushw
cmp
incl
call
iret
leave
pop
test
addr16
mov
stc
lds
lcall
sub
sbb
lds
test
negl
sbbl
jg
hlt
ljmp
inc
aaa
idivl
push
lods
mov
inc
sub
scas
xchg
ljmp
mov
dec
pop
out
mov
insl
shll
in
fcomip
push
test
mov
mov
sahf
shl
pop
sub
mov
xor
sbb
sar
loope
jmp
fsubs
rorl
mov
push
jo
mov
call
decl
pop
jl
faddl
or
negl
cltd
fldenv
xor
pop
outsl
icebp
inc
lcall
jmp
xchg
popa
imul
mov
stos
pop
jle
cld
mov
call
inc
incl
pop
xchg
push
sti
popa
pop
mov
adc
mov
adc
loop
inc
dec
mov
call
decl
sbb
loop
lods
jmp
mov
push
getsec
dec
or
test
cmp
jle
mov
xchg
shrb
ffree
add
stos
jb,pt
jmp
loop
je
cmp
das
cli
lea
mov
xchg
sbb
mov
aas
lods
ret
push
and
cltd
mov
into
or
xchg
aam
mov
std
fs
jmp
je
out
les
sbb
cmp
daa
sub
dec
or
sbbl
rcrl
lret
rorb
or
test
call
inc
insb
lock
sbb
sahf
or
pusha
jmp
int
cmp
jecxz
sbb
call
push
xor
into
mov
pop
push
xor
or
test
pop
mov
fnstsw
sbb
and
and
jbe
dec
xchg
mov
lcall
adc
cmp
cmp
cs
push
mov
xor
push
dec
jecxz
popf
sub
stc
pop
call
call
call
push
pop
dec
cld
add
mov
xor
ret
insl
and
mov
cmp
test
jge
aaa
clc
std
cmpl
mov
mov
xor
fistpl
mov
pop
pusha
rcrl
enter
loopne
xchg
pop
pop
jmp
decl
vxorps
mov
add
testb
inc
add
xor
pop
and
movsb
decl
cltd
pop
mov
sbb
addl
or
xor
cmpsb
jle
mov
mov
xchg
xchg
adc
lea
mov
dec
fadds
gs
rclb
push
jg
mov
cmp
or
fmulp
inc
inc
outsb
inc
clc
jmp
dec
mov
xchg
into
xchg
or
and
xor
xor
mov
cltd
les
into
push
cwtl
push
pop
outsb
dec
test
inc
add
jnp
fwait
xchg
das
orb
nop
add
add
dec
fists
add
scas
adc
and
push
shrb
mov
out
jbe
dec
sub
lret
addb
inc
xlat
out
lret
jae
bound
insl
jmp
je
aaa
and
jne
jnp
filds
jo
imul
or
fsubs
scas
ds
add
daa
pop
add
out
adc
xchg
and
lret
js
dec
adc
fs
sub
ljmp
sub
insl
mov
or
ds
sbb
rolb
std
push
dec
incl
and
gs
pop
push
outsl
outsl
insb
push
fldt
push
outsb
popa
jo
push
inc
js
test
mov
mov
mov
push
or
cmp
ss
xchg
subb
dec
adc
insb
push
or
dec
jne
js
arpl
mov
jo
lea
movsb
fildl
fnstsw
xchg
push
inc
jns
push
imul
inc
jmp
pop
mov
dec
ljmp
dec
jecxz
movsb
push
dec
add
insl
cmp
inc
test
call
outsb
mov
jo
or
daa
lmsw
cmp
cltd
flds
loopne
sub
lahf
push
add
data16
inc
cwtl
sahf
fwait
xchg
ret
ficoms
push
outsb
flds
sub
xchg
faddp
pop
dec
inc
sbb
xor
adc
out
or
jo
mov
inc
sbb
sarb
bound
fwait
push
adc
jo
ds
insb
jne
addl
xchg
gs
popa
pop
mov
mov
inc
sbb
jo
xchg
fcmovu
add
push
fildl
inc
pusha
inc
push
pop
push
shrl
mov
pop
sub
in
jne
subl
jo
lods
pop
jb
loope
sub
das
push
jns
jae
addl
adc
loope
imul
push
push
xchg
mov
xor
jecxz
dec
lock
xor
sbb
jae
mov
pop
int
xor
push
pop
jno
inc
flds
push
jo
nop
movsl
rorb
dec
push
pop
mov
mov
inc
dec
sbb
movsb
add
push
rorb
mov
xor
arpl
ffreep
pop
adc
cmp
cmp
pop
inc
mov
or
loopne
push
and
pusha
fs
mov
mov
loope
and
popw
push
rcrb
sub
lret
jmp
mov
mov
inc
xchg
popa
and
cmp
xlat
das
ljmp
jae
pushf
inc
or
mov
hlt
sbbl
dec
or
inc
movhps
or
pop
mov
adc
mov
gs
lahf
or
lds
push
jecxz
xchg
lods
xor
aaa
mov
ja
mov
je
jg
pop
push
je
add
sbb
insl
or
and
and
out
or
es
jp
bound
fildl
sbb
xor
test
fcoms
mov
shll
orb
adc
jle,pn
pop
test
mov
or
daa
dec
push
rolb
jmp
fldl
mov
mov
lock
inc
je
push
inc
test
jp
out
sti
pusha
shrl
sub
xor
lods
pop
into
mov
test
shlb
dec
insl
adc
ds
rorb
and
fisubrl
xor
add
push
dec
nop
inc
stos
loope
adc
test
mov
mov
jbe
add
out
ret
pop
aaa
cmp
mov
test
or
sub
stc
pushf
push
jne
inc
push
adc
aad
add
or
dec
xor
jbe
cltd
dec
mov
push
inc
add
push
or
imul
andl
pushf
rcrl
mov
inc
adc
sbb
inc
and
pusha
and
outsl
or
xor
add
add
ret
cmp
jno
cmp
insl
xor
adc
adc
cmp
dec
gs
jne
cltd
out
fldenv
push
xor
adc
xchg
arpl
std
push
popa
push
fsubl
adcl
inc
jge
inc
jo
jg
inc
cmpxchg
mov
inc
mov
clc
jp
pop
jmp
out
sbb
sbb
imul
andl
aad
shll
sub
pushf
test
or
mov
out
jo
or
aaa
mov
outsb
lds
ja
mov
push
dec
xchg
je
inc
cmc
pop
loopne
jae
outsl
adc
pop
jbe
jb
and
nop
nop
inc
cs
jo
mov
cmpsl
push
inc
inc
gs
arpl
pop
sbb
popa
mov
leave
mov
fcomi
jecxz
pop
mov
js
insb
mov
push
inc
insb
jle
lar
push
pop
lea
inc
subb
nop
lcall
dec
jae
jno
aad
pop
jne
pop
adc
jne
adc
in
insl
adc
js
inc
lcall
xor
andl
fs
les
movsl
xchg
out
cmp
xor
push
popa
outsl
sub
shlb
sub
adc
test
ficomps
push
adc
movsb
pop
ja
pop
ja
bound
jns
je
push
or
dec
push
scas
mov
cmp
jnp
rcrb
pop
add
add
mov
mov
shrl
xchg
movsb
dec
adc
imul
mov
mov
add
into
cmpsl
mov
mov
addb
add
mov
inc
xchg
shrb
bound
mov
test
dec
roll
mulb
cmc
das
and
inc
jb
push
jb
inc
jae
pop
pop
inc
fiadds
add
imul
iret
push
repz
jo
cmpsb
in
mov
test
cmpsl
loopne
ss
fcompl
jo
test
or
mov
mov
adc
imul
movsb
jo
repnz
push
lret
sbbb
mov
jmp
push
and
mov
push
adc
xor
and
sti
adc
pop
test
inc
filds
sub
xchg
push
shrb
mov
movsb
sysexit
cmp
enter
cmp
and
std
mov
je
jb
sub
xor
addr16
mov
sub
push
push
insb
mov
add
add
xchg
ret
lret
mov
dec
push
repz
jge
pusha
sbb
aad
enter
fimuls
xor
push
andb
enter
in
and
pushf
insb
adc
jno
ret
in
sub
xchg
ja
push
test
sbb
cmp
sahf
out
push
push
or
pop
data16
call
push
sub
or
repnz
pextrw
dec
insl
fs
mov
jnp
dec
mov
xchg
jg
pop
sbb
and
inc
sbb
cs
andl
vmovapd
dec
xlat
mov
push
aam
push
mov
mov
outsb
shll
mov
mov
jbe
dec
mov
icebp
mov
jg
or
mov
enterw
lea
mov
xchg
lods
jnp
push
lods
add
cmp
xor
lea
push
jmp
mov
jp
in
data16
mov
push
cmp
push
sbbl
into
ja
shrl
pop
pop
fisubrs
jl
push
lahf
enter
sbb
adc
adc
js
and
push
dec
in
add
std
stos
adc
out
adc
add
sub
cmc
push
int
xchg
dec
push
leave
push
imul
jae
test
inc
sub
mov
cmp
push
jl
mov
shlb
add
add
pop
movsb
pop
add
jae
negl
loop
pop
bound
fwait
sbb
inc
test
xchg
ret
mov
xchg
mov
std
pop
dec
add
add
shll
add
push
add
imul
xor
cmp
mov
push
mov
push
push
movlps
cmp
add
jo
add
pusha
push
mov
sub
dec
push
sbb
mov
and
add
stos
iret
les
popa
adc
add
sub
into
mov
inc
imul
loopne
roll
sub
cmpl
sahf
jae
arpl
xlat
lea
and
mov
lahf
mov
or
jg
xor
xchg
add
add
xchg
incl
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
and
inc
add
insb
inc
add
add
