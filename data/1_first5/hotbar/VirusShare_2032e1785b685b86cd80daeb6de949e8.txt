fcomp
decl
pusha
jns
add
mov
or
push
add
cmp
jg
push
mov
mov
push
push
call
test
jne
pop
pop
ret
push
push
fwait
jmp
rcrl
mov
test
je
cmp
std
mov
pcmpeqd
lea
jae
sub
movzwl
je
add
fnstsw
pop
pop
xor
andb
fcomps
shlb
pop
lcall
push
push
xor
push
mov
adc
cmc
and
fisubrs
les
adc
incl
sbb
clc
imul
add
push
mov
push
push
push
xor
je
push
push
push
push
idiv
data16
in
sbb
clc
add
pop
sbb
inc
pop
shlb
nop
jne
pop
pop
pop
lcall
repnz
add
or
inc
or
jle
dec
push
xadd
dec
test
jg
mov
mov
push
mov
mov
call
ret
pop
add
fdivr
inc
push
push
mov
pop
mov
mov
les
insb
and
aaa
cld
ja
mov
push
push
mov
orl
jno
outsb
push
mov
std
orl
dec
adc
out
sub
sbb
push
and
push
jno
into
notl
dec
je
sbb
add
pop
rclb
rclb
jmp
adc
dec
add
jnp
incl
cmpl
jne
push
mull
pop
mov
jmp
lahf
sarl
add
inc
shlb
add
sub
jo
hlt
push
and
enter
in
pop
sbb
xor
jb
sbb
push
push
mov
adc
data16
mov
out
and
xor
lret
add
jp
sub
inc
mov
and
fbld
jb
lret
and
mov
pop
jl
or
mov
add
push
inc
xchg
sub
xchg
pandn
cmp
add
lods
push
push
xor
dec
add
ss
push
aaa
jl
notb
loop
or
mov
sete
sub
push
push
into
lds
and
nop
or
leave
mov
dec
in
sub
xlat
cmp
outsb
pmaxub
les
add
push
push
add
inc
xor
bound
sbb
inc
add
dec
pop
ss
and
push
inc
add
ror
inc
and
add
mov
xor
mov
push
daa
frstor
inc
aam
xor
leave
xchg
jg
push
push
dec
push
mov
lea
cld
js
lret
mov
dec
jl
leave
adc
in
dec
add
sbb
inc
lret
add
and
sbb
test
stos
cmp
and
pop
sub
stc
icebp
cmpsl
jmp
mov
and
mov
cmpsl
dec
pop
xchg
jmp
push
lea
mov
clc
pop
jge
mov
movsb
pop
pop
cmpsb
mov
pop
ret
xor
stos
out
pop
adc
dec
push
sub
push
insb
insl
push
add
and
jl
mov
dec
xchg
adc
pushf
inc
les
add
leave
lcall
pop
add
std
in
test
clc
mov
sub
push
mov
dec
lea
mov
push
pusha
lods
or
rcll
inc
enter
push
and
mov
sub
push
in
push
int
and
push
add
out
in
push
push
and
fucom
imul
popf
add
bnd
xchg
out
sbb
add
inc
add
dec
in
dec
inc
push
cmp
bswap
push
add
call
inc
mov
negb
cmp
lock
je
or
pop
lahf
push
push
pop
mov
aas
sub
push
das
repz
sbb
inc
hlt
nop
test
gs
je
dec
hlt
mov
mov
push
cmpsl
cwtl
nop
sbb
inc
add
insb
stos
gs
and
inc
xor
popa
dec
mov
mov
bnd
imul
mov
sub
notl
cld
loope
and
lea
cwtl
lret
test
push
cltd
or
push
cmc
dec
inc
xor
jge
dec
add
push
subb
jg
mov
or
test
push
adc
push
addl
lock
add
popf
cltd
push
inc
sbb
insl
jns
pop
jbe
mov
xor
sbb
xchg
lret
pop
and
and
jb
add
jne
fmull
pop
imul
sti
mov
pusha
push
push
es
or
push
arpl
mov
add
sub
push
and
jle
cmp
outsl
cmpsl
in
test
sete
test
test
dec
xchg
or
add
sbb
iret
scas
push
enter
adc
add
adc
pop
int3
lret
dec
xor
and
push
cmp
dec
pop
xchg
adc
or
test
test
mov
test
jne
mov
inc
jo
pop
mov
push
jle
mov
or
je
adc
icebp
and
or
and
movd
or
push
xchg
adc
adc
inc
enter
ss
or
fwait
inc
or
ss
inc
punpckhbw
and
pop
adc
clc
push
push
sbb
push
jo
popa
push
or
xor
cmpsb
jo
ja
xlat
sbb
dec
add
ret
push
sbb
mov
loopne
scas
dec
push
cmp
cmpsl
sbb
push
inc
or
add
xor
or
jmp
jo
jns
cmp
fdivs
loopne
movd
sbb
jns
mov
jecxz
pslld
cmpsb
mov
aad
movsl
sbb
xor
mov
cmpsl
popf
dec
cmpsl
and
mov
int
inc
jle
pop
pop
nopl
push
push
and
out
call
leave
pop
movsb
mov
test
mov
add
dec
fwait
dec
inc
and
push
mov
xor
sti
pop
sbb
or
mov
inc
add
sti
rclb
push
push
sub
push
lahf
into
mov
xor
push
adc
std
xor
cmp
mov
mov
push
outsl
xchg
xor
mov
xor
inc
imul
fs
or
rol
ret
movlhps
mov
pop
push
data16
mov
js
or
mov
cmpl
je
adc
xchg
push
mov
pop
push
call
fcoml
push
push
movsb
imul
add
dec
xchg
push
mov
xchg
mov
cltd
sbb
inc
mov
sub
in
inc
in
xchg
sbb
adc
adc
jl
push
test
daa
add
adc
inc
jbe
adc
das
cltd
das
lahf
cmp
insb
or
mov
mov
fcmovnb
add
adc
cmp
and
push
jmp
inc
mov
inc
sar
in
push
mov
adc
sub
ret
aaa
push
sbbl
adc
lea
pop
pop
icebp
jns
jns
in
jl
aad
cmp
push
sbb
mov
push
lcall
dec
add
push
xchg
push
jl
lods
mov
or
sub
in
jg
sub
ss
jmp
cmc
lea
mov
dec
insb
mov
jg
jns
pop
pop
and
add
jp
ret
filds
mov
push
jne
sub
sub
stos
enter
leave
mov
adc
cmp
push
xor
adc
or
sbb
sub
jmp
in
push
inc
add
mov
pop
and
cmp
jne
mov
ds
mov
inc
xor
inc
lods
sbb
push
lahf
sub
je
sub
cmp
je
ljmp
leave
sbb
or
pop
and
sbb
das
and
sbb
mov
ss
mov
cltd
aaa
inc
pusha
jo
adc
fsubl
add
movl
push
push
lcall
sbb
mov
ret
aas
add
push
push
xor
inc
jg
cmpsl
call
adc
adc
call
pop
cld
add
inc
cmp
jl
xlat
ret
test
decb
pop
push
push
xchg
push
js
jne
ss
in
cmp
jbe
test
xor
adc
mov
mov
inc
ljmp
daa
add
dec
mov
sub
js
aaa
adc
popf
pop
mov
or
rcll
rol
rorb
shrb
mov
ret
jne
movswl
shll
ja
sub
loopne
push
jmp
ss
mov
lea
std
call
add
inc
test
jne
sub
push
push
inc
sbb
inc
dec
jb
cs
adcb
cmp
xchg
push
xchg
cmp
fistl
test
aas
push
push
mov
mov
xor
jne
shlb
out
lea
fidivl
loopne
cmp
mov
idivb
xor
mov
sbb
mov
cmp
jl
repnz
dec
sbb
pop
pop
ret
mov
push
aaa
pop
sbb
adc
inc
cmovg
fisubrs
daa
push
jl
rcrl
or
inc
pusha
loop
lahf
push
jbe
or
movsl
pop
jne
pop
aad
pusha
mov
sbb
xor
rol
xchg
shl
inc
adcl
mov
adc
mov
dec
rcrb
fists
pop
mov
scas
cld
or
mov
call
jge
push
call
mov
or
clc
jle
mov
xchg
clc
mov
cmp
pop
fsub
insb
sti
mov
mov
push
cld
lea
push
or
cmp
mov
push
cld
adc
cmp
ja
clc
icebp
add
call
push
push
add
push
xchg
add
pusha
mov
jo
jg
mov
pop
mov
fsubrs
movb
pop
pop
pop
pop
ret
pop
ds
icebp
mov
push
xchg
lods
pop
jbe
je
js
push
sub
pop
sub
aas
cli
sbb
inc
hlt
jnp
pop
mov
push
insl
or
aad
pop
lcall
push
dec
push
jnp
sbb
rclb
les
cmp
pop
push
ds
jne
call
cmp
xor
mov
pop
notl
mov
or
lret
repz
test
cld
cmp
ja
push
clc
lea
push
push
push
sbb
sub
negl
or
add
rorb
mov
xor
sub
mov
repnz
push
loop
rclb
sub
loopne
pop
adc
out
mov
add
stos
add
imul
enter
push
add
xor
push
push
push
mov
mov
push
pop
testl
jmp
jl
push
ds
or
jbe
movsl
or
or
shlb
jo
or
sbb
mov
adc
pop
repnz
mov
pushf
jecxz
ja
cmp
dec
lds
or
push
xlat
add
daa
daa
test
mov
mov
jg
es
movsb
sub
cmp
je
cmpl
lea
or
testb
mov
push
jne
push
stos
call
pop
enter
test
push
in
subb
das
pusha
xchg
pop
call
hlt
push
push
mov
js
popf
call
adc
xor
push
or
inc
or
push
jp
out
idivl
pop
jne
ret
loope
dec
and
ret
jo
cmp
aas
push
ficoml
lret
sub
fs
or
lahf
sbb
push
adc
mov
jp,pn
add
push
icebp
dec
inc
push
arpl
jo
push
adc
loope
mov
loop
mov
fcoms
loope
loopne
in
aaa
mov
push
cmp
add
fucomi
xor
mov
pop
push
push
in
mov
cmp
clc
sub
push
push
stos
mov
mov
mov
xor
dec
mov
adc
adc
adc
fsts
cmp
jge
jmp
inc
add
pop
imul
dec
adc
adc
mov
lea
test
or
xor
scas
inc
mov
push
pop
sub
dec
fisubl
xchg
jo
cmp
push
push
cmp
pop
jle
mov
jmp
ret
add
jle
add
shrb
es
ret
pop
mov
or
sarl
mov
adc
push
outsb
out
addb
ret
mov
enter
add
mov
add
in
rcr
add
inc
push
add
ret
push
pop
test
jae
daa
fdiv
pop
scas
dec
mov
push
or
push
jle
inc
test
test
cmp
inc
sub
call
dec
in
repz
cli
lret
sbb
clc
xor
rorb
rorl
add
repz
rcl
dec
int3
and
ud2
lds
jecxz
loop
insl
mov
mov
push
add
xor
inc
mov
adc
imul
fists
imulb
ss
and
test
or
clc
add
ficoms
call
das
scas
jp
pop
xor
fs
pop
or
xchg
fdivl
or
insb
mov
fwait
push
mov
addps
add
mov
insb
push
adc
xor
mov
pop
pop
aas
pop
fsubrp
adc
xlat
loope
aas
xchg
or
sbb
push
cwtl
cltd
inc
pushf
sub
adc
dec
cmp
test
and
or
xchg
sbb
rol
orb
aaa
ds
or
subl
mov
inc
repz
xor
movsb
push
push
int
scas
xchg
mov
add
mov
or
pop
and
sbb
ljmp
cmp
adc
rclb
dec
pop
outsb
or
fwait
add
add
jl
xlat
push
lea
add
mov
ds
inc
pop
xor
cmpsb
lahf
mov
push
xor
mov
aas
mov
mov
pop
or
dec
pushf
icebp
add
pop
ret
cmp
push
out
outsl
movsb
cmp
add
push
mov
inc
enter
xchg
jg
adc
addb
sbb
mov
sub
push
mov
sbb
sbb
pop
add
inc
add
ret
sub
into
rcrb
or
call
das
outsb
stos
test
pop
aad
push
jp
inc
or
inc
cmp
mov
or
les
je
jp
mov
or
push
or
jne
pop
mov
push
push
push
test
ljmp
push
scas
cmp
mov
push
adc
aas
fists
cmp
in
cmpl
inc
pop
sbb
and
jle
lock
out
dec
or
mov
add
jmp
ret
pop
add
fcomps
sub
jnp
mov
add
cmp
fidivrs
repz
mov
push
stos
mov
push
mov
cmp
cmpb
sub
mov
add
je
incb
dec
sub
je
mov
pop
cmp
shll
jecxz
xchg
jne
fidivrl
ds
or
movb
mov
sbb
inc
inc
or
jns
or
mov
fdivl
aas
sub
jg
pop
sub
stc
or
and
insb
cmp
pop
add
cmpsb
dec
mov
sub
mov
outsl
fldl
fcoms
push
mov
enter
out
cmp
pop
cld
call
or
enter
leave
and
mov
jo
cmp
lods
jo
iret
pusha
rorb
jp
int3
popf
sahf
mov
in
lret
in
and
push
in
push
in
dec
mov
lret
sbb
pop
in
mov
jnp
popf
jns
lds
mov
mov
inc
sbb
xchg
mov
out
movl
xor
mov
stc
sbb
in
lods
scas
sub
cld
xor
je
push
jle
xor
cmc
pushl
aaa
iret
shrl
stc
ss
bound
outsl
andb
and
das
pop
push
jl
aaa
out
or
popf
adcl
pusha
outsb
pop
xchg
sbb
pop
and
rorl
rcrl
movsb
fstl
outsb
pop
pop
lock
push
adc
and
sahf
je
fistpll
or
clc
cmpl
push
adc
add
adc
push
jns
mov
add
mov
xchg
sahf
mov
push
pop
icebp
jg
mov
test
lea
push
ficoml
add
sti
gs
mov
xlat
dec
cmp
repz
aam
and
pop
inc
les
ret
pop
sahf
jno
or
push
popa
or
add
inc
sbb
push
js
adc
add
bound
mov
mov
je
js
jle
add
cs
push
fiaddl
cld
xchg
jbe
nop
xchg
lahf
adc
add
imulb
xchg
cmp
push
nop
xchg
call
mov
mov
push
push
jle
ficompl
movl
adcl
pop
mov
lods
push
xor
imul
loop
scas
sub
mov
cltd
dec
ret
jle
and
leave
or
js
mov
and
cmp
dec
sbb
add
imul
sbb
mov
xchg
push
push
call
in
out
or
xchg
mov
shll
xchg
js
cmp
inc
jbe
out
dec
and
jb
jmp
aam
cmc
fcomip
mov
sub
setne
push
std
fsubrs
xor
dec
and
xor
popl
shrl
mov
imul
dec
in
push
std
mov
push
push
inc
test
rcl
push
pop
cmp
je
lea
add
test
and
add
pushf
loope
pushf
mov
mov
mov
sahf
pop
mov
mov
xchg
push
and
sbb
ret
aas
fsubs
jne
mov
cli
sub
sahf
rclb
pop
add
test
add
sub
add
mov
repnz
push
push
sub
loopne
lea
pop
notl
pop
ss
mov
mov
test
jg
insb
push
dec
dec
mov
push
push
xor
adc
incb
mov
out
je
sub
mov
pushl
test
rcrl
rol
and
xchg
sub
and
jmp
mov
add
sahf
inc
add
mov
sub
fildll
push
mov
xor
xchg
xor
push
inc
loop
inc
in
movsb
fadd
push
in
ficomps
adc
xor
jl
repz
cmp
inc
or
jle
inc
xor
mov
mov
pop
popf
sbb
ja
rcll
jp
movsl
roll
mov
xor
neg
sbb
addb
jae
flds
add
ret
xor
jg
into
loope
subl
push
adc
dec
fisubrl
adcb
push
sub
sub
test
mov
cmp
jg
pop
movzbl
std
mov
scas
mov
mov
lret
sbb
xor
ficomps
scas
and
fsubl
loopne
roll
aas
mov
adc
lock
rcrb
adc
or
repz
mov
call
jmp
mov
out
push
push
shlb
repz
test
push
add
mov
cs
jo
lret
push
mov
xor
xor
sbb
sahf
lds
and
cs
mov
add
sub
loop
pop
dec
sub
lock
clc
add
sbb
or
mov
out
sbb
or
sbb
xchg
call
lea
jmp
pop
mov
or
in
movl
push
pop
cmpsl
test
adc
rcrb
add
push
enter
inc
cmp
add
adc
and
xchg
push
or
loop
fsubs
dec
adc
adc
add
bt
scas
nop
mov
mov
cmp
mov
add
push
xchg
dec
sbb
sbb
incl
jecxz
dec
shll
mov
xor
fwait
addl
or
mov
push
lods
js
xor
pop
push
fstpl
shufps
test
fistpll
push
movsl
push
mov
cmp
ds
sbb
in
jl
push
sub
lods
and
inc
movsb
adc
mov
in
jno
pop
cld
fucomi
nop
add
dec
push
dec
pop
push
push
dec
sbb
dec
roll
bound
inc
push
push
sub
repnz
push
push
addb
inc
inc
js
ja
lahf
push
rclb
push
pusha
mov
addl
test
push
pop
test
add
pop
pop
add
iret
push
push
lea
mov
neg
push
jp
xor
push
sub
dec
sbb
ss
push
cmp
or
je
rorb
jg
cmp
addl
or
push
push
je
add
int
or
jo
unpcklps
xor
ror
add
je
addr16
push
or
jge
lods
mov
call
mov
and
push
add
jns
sahf
jbe
jo
push
sbb
jo
inc
and
js
je
push
jbe
ja
mov
push
dec
mov
sbbl
sub
movsl
sbb
cmp
clc
rdpmc
inc
fldl
fmull
add
pop
cmp
push
inc
sub
cltd
xor
jae
enter
mov
js
pusha
leave
adc
sub
cmp
adc
scas
add
cmp
shlb
popa
mov
in
push
push
loope
or
mov
pop
push
jp
ret
inc
sub
cmp
daa
mov
or
sti
ja
dec
inc
push
add
push
mov
or
subb
out
and
push
and
jp
loop
ret
push
cmp
sub
dec
pop
xchg
or
dec
jb
es
and
arpl
fsubrs
xorb
inc
xor
jno
adc
push
enter
in
shll
inc
punpcklwd
outsl
jecxz
mov
addb
push
xchg
push
push
lds
pop
cmp
mov
cs
cld
add
ficomps
dec
mov
jns
mov
lock
push
stos
orb
incl
out
or
inc
test
fs
mov
int
dec
push
mov
bound
push
push
and
xchg
add
loopne
ret
sub
fdivl
enter
fisubs
cmp
int
adc
adc
dec
sbb
int3
int3
mov
push
push
push
lods
test
fdiv
dec
repnz
shll
sahf
dec
xchg
mov
cmp
add
outsb
mov
sbb
js
dec
adc
push
call
movsl
jno
and
and
popa
dec
shll
xor
in
enter
loopne
incl
sahf
adc
movsl
sub
mov
mov
inc
orb
sbbl
cmp
jl
cltd
mov
loop
add
push
sar
push
xchg
arpl
fstpl
daa
jl
xchg
nop
lret
add
and
add
out
fistpll
dec
bound
imul
sar
mov
shr
add
mov
imul
lock
push
push
lahf
shlb
mov
mov
pushf
nop
imul
in
add
jmp
or
aaa
adc
sub
mov
stc
filds
push
adc
sarl
push
enter
lea
call
cmp
je
cmpl
push
or
dec
cmp
cmp
jne
push
xor
das
lea
call
fisubl
dec
xor
ficomps
shr
push
data16
icebp
lea
or
mov
stos
mov
outsl
sbb
xor
cmp
out
pop
adc
inc
pop
inc
dec
push
rolb
lea
jmp
add
xchg
push
cmpsl
sbb
inc
sub
cli
dec
mov
out
data16
push
dec
cmp
lods
sub
mov
int3
sbb
fwait
call
je
test
jl
lcall
insb
ja
arpl
inc
push
aaa
ds
outsb
outsl
xor
and
mov
cmp
jbe
popf
mov
push
test
arpl
mov
in
jle
fidivrs
cmp
add
xor
sbb
inc
test
pop
and
mov
pop
lea
dec
sub
cmp
or
out
or
jmp
mov
lea
mov
add
sbb
push
faddl
ja
xor
sub
xor
mov
fdivrp
rorl
xor
sbb
cs
sub
cmp
inc
push
lock
xchg
xchg
cmp
add
inc
bound
mov
loope
push
inc
pop
or
adc
je
add
lods
add
rorb
sbbb
in
sbb
pop
movb
imul
leave
jge
and
mov
adc
adc
pop
mov
push
mov
add
inc
mov
cs
cmp
mov
sub
mov
call
test
xchg
mov
js
sbb
lret
xor
or
aam
cmpl
mov
insl
rcrl
xor
sub
push
dec
dec
inc
mov
adcl
sub
xor
adcb
jp
rcrl
int3
jo
jge
lea
nop
bound
or
push
pop
test
test
or
sub
inc
add
inc
fildl
push
pop
lods
mov
aas
jb
xchg
outsl
loopne
popa
ret
sbb
jmp
jecxz
inc
jo
add
pop
add
mov
xchg
cmp
jne
and
adc
xor
xor
lock
rcrb
scas
pop
clc
jns
sub
rcrb
or
outsl
cmp
mov
addb
sahf
or
add
push
sbb
mov
pop
addb
xchg
rcll
ljmp
out
adc
fisttps
aas
lea
push
push
insl
sbb
mov
push
xor
jg
pop
sbb
data16
fstpl
inc
mov
jbe
lahf
add
subl
adc
dec
mov
adc
push
dec
and
jl
push
imul
push
inc
dec
xchg
pop
mov
push
adc
mov
pop
and
jmp
cmp
push
rol
push
inc
cs
or
pop
sbb
or
pusha
cvtdq2ps
dec
mov
mov
mov
xchg
or
jns
sbb
xchg
push
push
mov
or
ret
lahf
or
or
sbb
aaa
popa
addb
and
lds
jp
mov
sar
push
sub
clc
setb
pop
cld
pop
inc
insb
push
mov
sub
cmp
setae
lcall
and
add
mov
xor
xor
push
or
add
aam
outsl
inc
pop
les
sub
add
inc
push
cltd
xorb
push
pusha
mov
push
aad
push
movsl
push
adc
pop
pop
pop
pop
cmp
jno
ffreep
mov
or
mov
xor
push
les
inc
insl
pop
cmp
sbb
inc
mov
xchg
adc
outsl
loope
fnsave
sbb
sub
incl
inc
adc
or
push
imul
push
dec
push
adc
jg
repnz
inc
in
std
mov
adc
add
popa
pusha
ret
jge
iret
xor
mov
pop
cmp
mov
filds
movzbl
cmpsl
shr
sbb
jno
and
and
in
repz
xchg
xchg
fwait
add
add
adc
sub
add
push
sub
pop
or
push
test
adc
aaa
inc
stos
cmpsl
xor
inc
insb
and
add
mov
jb
gs
ds
add
inc
adc
movl
xor
inc
xor
mov
pop
jmp
in
lret
dec
pusha
pop
xor
lods
jmp
adcb
push
inc
xor
jmp
adc
lret
lret
sbb
and
and
inc
iret
cmp
add
inc
push
dec
xor
cmp
jbe
jg
lea
cmp
push
push
pop
adc
mov
lcall
add
std
sbb
add
in
aaa
inc
add
dec
add
sahf
adc
aam
mov
cli
and
add
movsl
sub
sbb
and
stos
adc
addb
or
sbb
sub
lds
jl
mov
ficoml
cld
push
outsl
repz
cli
jo
or
push
lds
int
rcll
add
subps
leave
rorl
pop
or
test
int
sbb
push
cli
mov
dec
add
imul
stos
movsb
dec
mov
push
pop
pusha
inc
push
ret
aaa
xchg
xor
in
or
mov
jg
push
jg
nop
and
leave
es
shl
xor
jmp
mov
je
loop
enter
jbe
jne
push
imul
push
add
cmpsl
je
and
mov
jno
push
inc
in
mov
subb
cmpsb
std
imul
mov
dec
and
lahf
out
scas
or
dec
fimuls
ja
xchg
xchg
or
add
push
or
add
insl
cmp
outsb
cwtl
mov
dec
pushf
shll
loopne
jge
xchg
or
jp
dec
daa
cs
adc
mov
popa
cmpsb
mov
add
and
sbb
dec
sbb
and
xchg
add
mov
cmp
add
aas
sbb
les
gs
jbe
push
push
push
sahf
mov
lret
push
push
clc
pop
xchg
loopne
add
insb
cld
xchg
aam
push
insb
cmp
ret
insl
and
push
or
cmp
add
adc
or
add
add
add
fcmovnu
nop
xchg
das
vpsubusw
mov
inc
xchg
add
or
stc
adc
roll
push
adc
or
and
push
mov
add
nop
mov
and
pushf
dec
xor
insl
fbld
or
add
jne
ja
pop
rclb
add
test
fs
push
inc
mov
out
fs
pop
call
jbe
xchg
insb
mov
xchg
mov
stos
push
jno
aam
rolb
or
lock
jge
add
push
mov
jmp
pushf
pushf
or
cmpsb
ret
add
out
cmpb
or
mov
imul
cmp
ss
es
pop
movl
mov
add
jne
push
sbb
pop
and
push
js
xlat
rorb
data16
mov
lds
cmp
sub
push
test
repnz
nop
ss
cmc
or
adc
and
adc
add
adc
mov
xchg
test
scas
movsb
pop
push
xor
mov
mov
icebp
xchg
test
out
xor
jo
inc
in
and
icebp
mov
adc
mov
lea
pop
dec
adc
push
inc
xchg
ja
mov
jae
imul
mov
mov
ss
push
jae
mov
push
add
mov
inc
ljmp
jmp
push
in
or
add
add
xor
mov
loope
fstps
ss
sub
push
adc
xchg
mov
dec
push
push
sbb
jl
mov
or
test
or
and
mov
adc
xor
lret
ret
shll
pop
add
xor
push
dec
jbe
std
or
mov
shlb
xchg
jb
fwait
and
insb
test
movb
add
test
int3
add
push
inc
mov
sub
dec
mov
std
stc
xor
int3
mov
shlb
or
or
sub
jo
xchg
scas
sub
jle
dec
das
hlt
cli
into
movl
jge
sbbb
jne
aaa
push
lods
insb
mov
les
insb
clc
pop
push
sbb
cmpb
xor
sub
pop
mov
adc
add
xor
mov
or
mov
imull
sub
je
movsl
daa
jne
loope
xor
or
pop
leave
sbb
xor
enter
and
pop
add
pop
insb
xorb
jne
cmp
cmp
das
mov
dec
ss
sub
push
stc
mov
sbb
add
and
stos
adc
cmpl
daa
stos
dec
sbb
jns
in
cmpsb
sbb
push
out
add
xor
inc
mov
sbb
in
lock
inc
cltd
out
mov
push
fmull
push
push
sub
jecxz
rclb
pop
imul
sbb
sarb
and
add
dec
dec
inc
sbb
xor
push
clc
dec
mov
xchg
and
adc
shlb
add
xchg
mov
cmp
and
das
add
sbb
mov
das
add
push
xor
mov
and
dec
xchg
cmp
loopne
in
jne
push
dec
push
add
and
adc
pop
mov
ss
push
addl
sbb
subb
push
and
icebp
push
sub
jne
xlat
inc
pop
sbb
pop
add
jmp
sbb
jne
adc
xchg
pushf
or
push
adc
pusha
inc
pop
cmc
pushw
movsb
or
xlat
jmp
or
and
loope
xor
xchg
xor
and
xor
xor
dec
xor
and
cmp
jb
and
bound
sbb
loopne
ja
mov
jmp
pop
dec
cmpsl
or
sub
add
mov
test
nop
adcl
push
incb
mov
and
and
inc
inc
clc
std
fists
push
add
pop
sub
jecxz
imul
cltd
inc
xor
lds
nop
fst
jmp
stos
stos
xlat
mov
fsts
in
adc
or
push
sub
es
or
add
shrb
aas
sti
push
js
out
adc
jno
mov
xor
mov
shrb
and
mov
scas
lea
adcb
inc
push
or
mov
cwtl
jl
xchg
popa
rcll
or
in
add
inc
or
out
or
or
push
jns
push
push
pop
adc
mov
inc
dec
jl
rcrb
loope
sbb
mov
mov
pop
in
sub
add
add
loop
push
and
ret
imul
push
push
or
xor
push
push
ds
push
push
or
nop
and
push
jo
ljmp
xor
pop
dec
xchg
cmp
dec
aas
pop
add
sub
adc
jl
jl
lods
xchg
push
add
push
add
pop
ljmp
dec
ss
push
or
push
or
lods
sbb
nop
push
adc
push
scas
aaa
push
test
inc
or
scas
and
or
pop
pusha
cmp
push
sub
xor
cmp
xor
sbb
or
repnz
add
movsl
mov
adc
xor
push
andl
mov
movsl
lock
xor
cmp
mov
pop
shlb
inc
cmp
stos
out
push
cmp
xchg
rolb
daa
or
cmp
sub
xchg
pop
jp
xor
mov
add
push
pop
mulb
divl
leave
into
in
mov
adc
orl
sbb
insl
dec
jge
push
or
pusha
aad
or
movl
push
dec
and
cmp
cltd
dec
sahf
dec
cmp
sub
inc
mov
sub
push
sbb
lcall
ret
mov
stc
addl
pop
inc
data16
pop
rclb
test
cmp
popa
jo
sub
icebp
inc
push
rol
sub
or
xchg
mov
jg
adc
pop
inc
movb
mov
sti
cmp
rolb
cmp
fldenv
adc
fsubs
mov
movsb
and
aad
mov
call
and
pop
push
and
fisttpll
movsb
sbb
call
call
add
mov
mov
push
and
add
stos
ret
popa
pop
sub
bound
ljmp
add
sub
test
dec
cmpsb
xor
movsl
inc
dec
sub
sbbb
or
jmp
dec
push
out
hlt
push
mov
or
movsb
sub
jmp
jmp
xor
push
xchg
push
dec
mov
fsubl
mov
fs
insb
sbb
mov
sbb
mov
mov
or
imul
mov
enter
push
jp
cld
mov
xchg
mov
xor
aad
inc
cmp
and
mov
hlt
into
xor
fwait
int
xor
pop
aaa
xor
or
lds
inc
dec
mov
loopne
addl
inc
push
pop
push
mov
dec
sbbl
cld
imul
lea
dec
out
fs
fidivrl
ret
xor
dec
cmp
insl
push
iret
test
or
rorb
sub
mov
addr16
mov
add
or
jecxz
push
int3
pop
mov
testb
mov
fs
sbb
in
or
or
jl
scas
ret
push
sbb
push
add
mov
push
and
js
xchg
enter
adc
sbb
push
push
lds
fnstsw
andb
fisttps
push
call
cmpsl
cmp
sbb
or
xchg
and
or
and
pop
pop
mov
add
je
shr
mov
std
or
or
mov
xorl
or
int
sti
ja
orl
or
repnz
adcl
adc
or
ret
mov
in
jl
cmp
jb
nop
mull
jbe
push
sub
sub
adc
lock
inc
pop
xlat
adc
xchg
adc
sbb
shll
push
sub
leave
test
xor
cwtl
or
lcall
and
push
mov
adc
sub
and
push
or
xor
jo
sbb
adc
ret
nop
cmpsl
fnstcw
enter
mov
adc
inc
and
cmp
inc
loope
mov
mov
cmpb
iret
add
adc
lock
adc
adc
int
sub
adc
pushf
call
or
cmp
add
push
and
adc
add
xchg
pop
and
pushf
xchg
xor
decb
push
sub
jb
pop
add
mov
sub
in
and
dec
adc
jns
push
add
test
pushf
sbb
inc
add
mov
mov
adc
mov
mov
aam
add
es
sbb
push
ret
das
test
cmpsl
rcll
inc
and
pop
add
jno
xor
lret
rcrb
insl
lock
mov
cs
mov
dec
loopne
cmp
sbb
inc
jns
sbb
sahf
sbb
in
mov
or
int
pop
jb
xor
jmp
sub
loop
push
mov
cmp
add
rorb
into
mov
cmp
mov
stos
xchg
jmp
aad
lea
dec
sub
sub
push
enter
ret
adc
mov
dec
pop
pop
imul
push
dec
in
sbb
mov
imul
and
sbb
loopne
pop
push
sub
adc
xchg
inc
pop
or
mov
push
add
sahf
jl
pop
movsb
sub
fstpt
int
adc
jmp
adc
inc
mov
mov
adc
mov
and
or
inc
and
jg
xchg
xchg
add
and
test
stos
or
sub
inc
stos
cmp
and
scas
dec
mov
mov
jmp
mov
jne
out
fdivs
add
adc
adc
lret
xor
nopl
adc
push
test
rcrl
insb
push
test
xor
pop
add
dec
push
dec
xchg
push
xor
push
jns
lds
xor
mov
fwait
adc
out
sub
mov
mov
or
je
pop
adc
je
dec
iret
frstor
jb
push
popf
outsl
add
movsl
and
jnp
jne
out
cmp
in
adc
mov
add
lea
dec
in
aaa
loopne
stos
and
clc
and
sub
sub
or
jge
fsubrs
dec
iret
les
push
test
or
mov
cmpsb
mov
clc
jg
or
add
add
into
or
xor
icebp
rclb
inc
push
or
cltd
int
xchg
cltd
xor
pop
jne
insb
hlt
xchg
sbb
or
int3
xor
inc
add
movsb
push
cmp
popf
pop
jmp
rolb
popa
add
pop
jb
inc
cmp
mov
rcll
lock
push
mov
and
test
rclb
mov
aaa
clc
push
cs
jb
rorb
inc
add
pushf
mov
ja
push
lea
addb
mov
push
push
cmp
roll
aad
test
in
mov
popa
roll
in
sbb
es
pop
test
or
jne
aaa
test
rclb
test
in
dec
arpl
xchg
jle
push
add
popa
sti
sbb
shlb
in
lea
push
push
test
add
sub
mov
out
fildl
dec
dec
xchg
shlb
push
movsl
mov
sbb
mov
test
or
add
fisttpl
pusha
adc
notl
dec
add
pop
add
repz
pusha
add
add
mov
inc
shrb
test
sti
mov
or
push
or
and
dec
jae
pop
ja
or
mov
inc
in
add
xchg
mov
cmpsb
mov
mov
sbb
add
sbb
call
pop
push
addl
stos
subb
jo,pt
fimull
jo
jecxz
aaa
cwtl
test
pushf
sbbb
sbb
inc
rcrb
incb
jle
mov
add
push
add
mov
or
or
jecxz,pn
jo
cli
add
dec
mov
cld
xchg
hlt
jg
xor
incb
stos
inc
xor
pop
adcl
and
push
push
cmc
mov
pop
xlat
ret
inc
and
stc
xor
mov
inc
cmp
xchg
pusha
ja
inc
pop
lock
test
jle
aas
pop
in
roll
andl
lea
sub
mov
js
pop
mov
fimuls
add
dec
sbb
add
xor
sbb
mov
push
sbb
not
mov
inc
xor
subl
dec
rorb
cmp
xor
call
cmpb
add
imul
adc
xor
and
pop
or
ljmp
test
sub
fimuls
loope
or
or
in
add
inc
lds
inc
int
jb
je
test
mov
add
pusha
aam
repz
or
push
imul
mov
add
push
add
dec
outsb
push
addl
add
push
xchg
xorl
icebp
pop
dec
mov
sub
push
adc
sub
shlb
das
push
cmpsl
inc
insb
pushf
xchg
jmp
pop
pop
and
dec
push
outsb
sbb
add
fstpl
cmpsl
fidivl
mov
jo
sub
test
lahf
pop
hlt
add
ret
je
and
into
mov
aas
push
push
outsb
pop
std
xchg
mov
mov
jmp
push
cmp
test
std
push
push
push
push
inc
or
adc
shlb
cmp
add
add
int3
jbe
mull
cmc
adc
push
push
scas
push
ja
sub
inc
jb
dec
sub
and
xchg
and
add
leave
mov
push
inc
imul
jmp
cmp
and
jne
xchg
inc
add
jns
sbb
and
xchg
ret
ficompl
daa
push
sbb
mov
movsl
ficompl
dec
loopne
cs
or
pop
loope
cmp
adc
add
repz
mov
add
or
dec
jle
adcb
addr16
ss
and
lock
dec
ret
clc
incl
sub
push
add
or
sbb
clc
subl
ljmp
nop
xor
add
ljmp
imul
lock
sub
es
sub
daa
and
push
and
pop
add
or
inc
push
xor
pusha
xchg
fsubrl
mov
fwait
cmc
and
out
lcall
or
popa
xorl
mov
pop
push
xor
test
cmp
dec
mov
adc
mov
push
adcb
xchg
rorl
mov
mov
xchg
adcl
setge
sub
push
mov
xor
push
mov
cmp
sbb
xchg
and
mov
xchg
inc
jle
jl
sub
dec
cwtl
cmc
fmuls
adc
fcoms
inc
ret
xchg
and
sbb
psubb
xchg
pop
leave
testb
lret
pusha
testl
push
and
adc
add
int3
jo
inc
dec
xchg
test
dec
loope
inc
pop
adc
mov
inc
mov
sub
je
inc
sbb
jmp
add
jle
pop
popa
adc
xchg
adcl
push
jno
ret
sbb
not
jle
andl
and
add
inc
inc
orl
bound
adc
stos
or
outsb
push
push
push
andl
pop
or
sbb
or
shrb
mov
cs
fisttpl
loopne
inc
push
push
icebp
fcoml
jns
and
sbb
adc
adc
push
push
out
fcmove
xchg
inc
lock
sub
and
jae
aas
jge
clc
push
adc
push
std
push
sbb
sbb
imul
inc
outsl
mov
sub
or
sbb
jbe
inc
mov
add
push
dec
or
push
mov
adc
or
shll
push
push
jo
and
mov
add
dec
or
mov
cmp
shlb
adc
iret
push
mov
and
mov
sbb
popf
mov
mov
dec
stc
mov
push
mov
aaa
jb
xor
pop
dec
mov
movsb
rcll
jo
sti
movsb
push
and
mov
push
aam
inc
lcall
shl
ret
je
push
mov
xor
add
mov
ret
repnz
xchg
insb
mov
adc
or
fwait
mov
inc
or
pop
push
mov
decl
xor
hlt
cmp
jne
cmp
imul
inc
aas
mov
ja
bnd
jmp
loop
sbbb
aaa
int3
loope
repnz
mov
push
mov
cmpb
adc
clc
mov
sub
sbb
sub
pop
adc
xor
dec
lea
adc
add
sub
or
lea
dec
adc
push
push
push
imul
sbb
pop
inc
aad
cli
pop
push
add
jo
adc
sub
ljmp
out
xchg
xor
rol
sti
pushl
mov
sub
mov
sub
sbb
mulb
mov
sbb
push
hlt
mov
and
bsr
popf
mov
out
and
inc
imul
or
and
and
add
mov
xchg
int
roll
push
insl
lds
enter
aam
fadd
push
int3
sar
ret
outsl
push
sub
je
cmpb
pop
jg
jp
aas
add
lock
icebp
jge
sbb
rclb
adc
xchg
add
sub
int
push
sarb
jns
xorb
lret
test
add
push
mov
xchg
or
mov
orl
sbb
cmp
jge
and
add
cmp
add
lahf
inc
addb
xchg
pop
sbb
xchg
push
movl
outsl
mov
jno
pop
xlat
mov
cld
sub
push
es
add
adc
inc
fcmovnb
adc
sahf
jl
mov
push
jg
push
add
push
or
sub
repz
push
ret
enter
jne
in
bound
pop
cmc
mov
cld
sub
loope
xchg
sub
jecxz
dec
add
pop
call
stos
add
ret
out
jno
adc
push
hlt
sub
push
test
xor
push
and
and
or
or
stc
inc
fisttpl
jo
sbb
xchg
dec
lods
mov
ret
shl
repnz
fidivrl
jns
push
test
fwait
xor
repz
mov
or
jg
pop
dec
repnz
sub
nop
adc
mov
sbb
inc
repnz
adc
outsl
dec
add
out
and
push
push
lods
push
sbb
roll
push
cltd
push
dec
test
inc
cmp
push
addr16
insl
fs
pop
cmc
inc
jle
pop
pop
mov
ret
adc
loopne
filds
add
sbb
add
push
add
fiaddl
or
mov
popf
iret
outsb
add
in
inc
push
mov
ret
pop
leave
dec
add
js
repnz
xchg
sbbb
xchg
es
push
or
arpl
adc
adc
adc
and
imulb
push
cmp
pop
push
sbb
and
and
cmpsl
lcall
jge
dec
movsl
dec
or
call
filds
jl
mov
xorb
and
adc
cmp
jle
lock
rclb
testb
jne
pop
popa
test
loop
push
xor
xor
pop
pop
decb
addb
dec
popf
inc
clc
pusha
jo
je
add
push
das
mov
lea
cmpsl
push
lea
rclb
add
cltd
or
test
int
push
mov
jecxz
outsl
pusha
push
push
std
jp
lret
push
outsb
push
add
and
sbb
xchg
rcll
fidivs
lods
ror
xorb
pop
hlt
push
rolb
jae
lea
jbe
or
mov
sbb
int3
sahf
shlb
pop
pop
mov
ret
add
rol
inc
xorl
sbb
popa
aas
outsb
add
inc
add
adc
inc
or
in
sub
adc
inc
fisubl
sbb
inc
mov
movsl
mov
lcall
inc
inc
add
mov
add
scas
loop
jp
stos
call
movsb
pop
ljmp
inc
pop
jecxz
sbb
cmpsb
push
mov
js
xchg
orl
adcb
xchg
or
mov
rorb
aas
iret
das
adc
cmp
cwtl
test
push
mov
xor
jns
xchg
dec
shl
outsb
push
sahf
inc
pop
mov
movsb
xchg
pop
push
push
inc
mov
insb
or
mov
test
sbb
push
test
xchg
and
push
js
sub
inc
xchg
rorl
pop
andb
push
dec
daa
jmp
ja
xor
dec
sub
or
mov
dec
ret
imul
icebp
setge
loopne
cs
add
xor
or
arpl
pusha
cmp
sbb
sbb
shlb
jne
stos
adc
in
mov
fdivrl
les
fldt
jmp
sub
jne
lock
push
push
js
addb
inc
mov
sub
lea
dec
repnz
sub
sahf
or
cmp
xor
sahf
push
xchg
mov
mov
mov
push
sub
dec
aas
adc
mov
push
push
fildll
push
add
sub
pminub
dec
cwtl
mov
mov
push
cmc
adc
xchg
es
leave
or
incl
mov
and
lods
add
or
orl
pop
imul
and
adc
push
mov
repz
mov
inc
fmulp
mov
popa
pushf
fadds
add
jb
jne
sbb
jl
mov
in
push
ds
dec
rorb
cltd
loopne
adc
cmp
pop
fmulp
lods
push
add
and
push
add
pop
jmp
idiv
je
cmp
mov
jge
popa
es
jne
add
add
sbb
or
pop
add
sbb
add
xor
push
std
movsb
setle
push
sbb
jnp
fldenv
popf
int3
and
icebp
add
subl
xchg
or
mov
out
shr
add
push
out
sub
shrb
scas
xor
lret
add
cld
cmp
jmp
test
or
cmc
xor
mov
or
jb
and
sbb
lods
call
pop
scas
add
push
dec
adc
mov
and
stos
adc
lret
xor
xchg
jecxz
mov
xor
data16
sahf
sub
pop
imul
cli
and
push
shrb
dec
cmp
sub
push
cltd
int
sarl
add
dec
jo
sbb
test
icebp
mov
outsb
test
or
push
pusha
mov
jne
pop
jle
pop
jne
ret
nop
enter
adc
cmp
add
mov
or
cmpsb
in
push
add
lds
pop
xlat
lahf
or
mov
xchg
xchg
das
inc
or
loope
and
dec
repnz
sahf
dec
xchg
pop
pusha
shl
sub
lcall
jle
loopne
adc
add
and
push
jb
xchg
jno
inc
adc
and
cmp
cld
sub
and
ja
icebp
mov
lods
push
sub
push
pop
or
lea
cmp
mov
sub
cli
push
test
stos
jg
les
aaa
addl
stos
pop
adc
mov
mov
dec
dec
outsl
outsl
add
sbb
push
mov
mov
and
add
sub
js
sub
lock
mov
push
and
stc
cltd
dec
add
sub
inc
popf
and
add
jnp
insl
mov
ret
jecxz
adc
fcoms
mov
mov
jp
insl
lock
and
testl
or
xchg
xchg
roll
movsl
sysret
es
pop
dec
mov
cwtl
nop
jp
xchg
dec
pop
push
mov
pop
int
cmp
inc
popf
fwait
outsl
lcall
add
jl
pop
test
jge
movsl
testl
add
xor
stos
mov
inc
and
movsb
inc
xchg
xchg
xor
fsubl
rorb
pop
cmp
lock
mov
pop
pop
and
add
int
sub
push
movsb
insl
sti
push
aaa
sub
dec
add
push
test
push
xor
mov
mov
push
mov
cs
test
jecxz
jecxz
and
pop
add
push
fisubl
fisubs
ret
aad
and
scas
add
jl
std
dec
pop
mov
mov
js
xor
sbb
repnz
pusha
push
inc
or
pop
and
and
mov
ds
mov
test
sbb
jp
aaa
xchg
int
or
je
dec
in
mov
inc
nop
cmpsl
cmp
or
adc
push
nop
adc
int
shr
xchg
xchg
andb
push
xor
inc
dec
push
loopne
fildl
dec
scas
mov
adc
lahf
dec
pusha
fcoml
dec
stc
and
xor
sub
mov
pop
inc
mov
adc
stos
movsb
mov
add
push
or
or
add
xchg
lock
ljmp
add
sbb
decb
cmp
test
je
lea
test
dec
aas
add
rcr
fildl
sub
call
out
add
xor
pop
cmp
jb
pop
pop
adc
fwait
js
nop
je
push
dec
sti
cmp
sub
inc
sub
loopne
mov
inc
pop
add
add
push
ror
jl
mov
test
aas
mov
mov
sub
imul
add
in
in
test
xchg
mov
cmpb
jno
mov
sub
or
jge
lret
fisubl
jo
or
push
ss
add
out
scas
cmp
sahf
or
daa
movsb
in
push
and
test
bound
loopne
imull
xor
jp
lea
sub
push
push
push
push
fwait
add
inc
sahf
push
push
push
push
test
je
sub
push
add
add
push
movb
mov
rol
xor
mov
cmp
lds
xor
cmp
loop
mov
or
js,pn
jg
ja
add
mov
js
sbb
imul
lcall
jns
push
sbb
cli
dec
and
ljmp
push
pop
push
fsubrs
dec
jno
pop
push
xchg
jmp
sbb
mov
add
or
pop
jle
inc
push
push
inc
lcall
and
inc
add
or
sbb
enter
imul
ret
add
or
sbb
jecxz
mov
push
or
jo
adc
fwait
cmpb
add
xchg
or
pop
pop
or
fldcw
test
pop
ljmp
or
cmpsl
jmp
or
mov
sbb
jle
mov
dec
add
imul
sbb
adc
ret
add
cmp
push
andl
call
dec
insb
mov
jnp
pushf
rcrl
sbb
or
lock
mov
xor
lret
jno
and
test
lock
es
push
inc
ret
test
adc
add
inc
in
or
cmp
sbb
mov
sahf
jne
mov
sbb
add
jl
mov
push
das
pop
subb
popf
subl
pop
add
cmp
push
add
mov
cmp
je
idivb
mov
pop
out
mov
pop
mov
or
pop
push
add
pop
push
xlat
jge
insb
inc
mov
add
fdivrs
sub
mov
sbb
daa
push
or
pop
ds
aaa
push
enter
add
inc
repz
cmpl
shl
sahf
cmp
leave
enter
sbb
sbb
sbb
test
dec
pop
out
fiadds
dec
jmp
je
mov
xor
push
cmp
in
xor
sub
outsl
or
push
or
or
rclb
jl
add
fs
shlb
dec
jbe
mov
pop
fcoms
mov
mov
js
sbb
loopne
sub
addr16
push
or
rcrb
jns
lea
push
pop
xor
and
mov
dec
cmp
push
dec
sub
pop
push
addr16
inc
jno
push
repnz
cmp
adc
pop
ret
lahf
std
loop
pushf
sbb
mov
stos
or
lcall
ret
mov
push
push
inc
icebp
dec
mov
or
inc
clc
xor
push
fdivr
add
call
add
adc
enter
push
pop
js
mov
sbb
adc
sbb
mov
push
mov
pusha
decb
or
adc
pop
stos
sbb
inc
or
movl
inc
xchg
push
sti
push
dec
mov
fnstenv
cmp
or
jnp
jae
mov
ret
mov
pop
pop
aas
inc
cmc
out
into
sbb
add
dec
jb
pop
lea
pop
fcoms
rcrl
jl
mov
add
mov
dec
lock
pop
and
add
sahf
sub
pop
dec
jl
mov
dec
push
stc
or
sbb
test
and
add
imul
sbb
scas
pop
ret
js
sti
mov
movsb
cmp
ret
dec
imul
or
cld
xchg
rclb
sub
clc
or
aas
cmpsb
sarb
jns
lea
jne
push
push
inc
lods
mov
inc
js
pop
sarl
add
push
or
and
pcmpeqb
sbb
aam
jb
fsubrs
jae
movsb
movsl
push
pop
adc
pop
pop
sahf
inc
cmp
jl
rorl
add
add
jo
pop
movl
ds
ss
jb
ja
loop
cli
pop
mov
add
pop
add
dec
add
lods
sub
inc
pop
mov
mov
push
fisubs
fs
cmpsb
test
xchg
hlt
imul
xchg
out
movzbl
xchg
loopne
jnp
loopne
pop
ja
adc
inc
roll
or
test
jb
or
add
jae
sub
push
add
or
or
xor
add
add
out
pop
ja
and
mov
or
lret
mov
sahf
out
dec
mov
enter
inc
pushf
dec
aam
pop
xor
sbb
mov
push
ja
sbb
mulb
int
xchg
sbb
enter
mov
repnz
outsb
xor
dec
mov
das
je
or
sub
nopl
or
jne
mov
inc
adc
pop
cmp
pop
lea
dec
jle,pn
xor
mov
sahf
inc
clc
xchg
pop
decl
cmp
mov
cmp
test
jmp
es
jbe
xchg
aad
or
jg
add
or
add
std
cmp
inc
jmp
inc
and
mov
fimull
mov
pop
fnsave
cmp
sub
jnp
push
sarb
out
mov
dec
lcall
idiv
sbb
mov
mov
or
adc
adc
and
dec
and
shlb
fdivrs
out
outsb
sub
cmp
out
xchg
cmp
sbb
mov
jl
jb
lock
orl
adc
sub
mov
cmp
adcb
decb
dec
push
sub
inc
push
cmp
ljmp
add
push
mov
cld
push
push
mov
adc
adc
enter
push
incb
jecxz
and
add
or
sub
lcall
cmp
jb
cmp
ja
pushw
sar
std
jmp
call
inc
jb
cmp
ja
and
ljmp
cmp
cltd
int
popa
xor
add
cmp
pop
push
cmp
mov
loope
add
fdivs
fwait
xor
mov
mov
out
fidivs
pop
mov
push
lock
jmp
cwtl
aas
xor
and
lcall
leave
add
mov
je
lock
jne
stos
jne
ret
push
test
mov
and
incl
jae
mov
jmp
push
pusha
aas
in
fcoml
adc
jo
jne
adc
dec
test
fiadds
fisubrs
mov
xorb
and
xchg
lret
cmp
add
dec
adc
add
adc
adc
out
mov
or
je,pn
test
jne
into
lahf
cmpb
jb
xor
dec
leave
inc
lds
xor
and
repnz
adc
movb
inc
ss
push
pop
fcoml
push
or
push
push
lret
lret
cmp
add
mov
inc
and
adcb
and
and
out
aas
add
insl
lods
out
dec
divl
mov
or
add
inc
pop
outsl
mov
push
pop
ja
ret
sbb
pop
sub
jp
fnsave
sbb
ret
inc
repnz
push
aad
xchg
les
cmp
jecxz
jl
pushf
inc
lcall
aam
ret
ret
pop
jno
xchg
mov
das
jmp
lods
push
jl
aas
sub
sahf
add
cmpb
mov
jo
sbb
xchg
int
mov
shrl
ljmp
pop
add
jge
stc
cmp
jae
cmpl
std
jge
jbe
aam
push
das
mov
or
mov
ficompl
or
push
xor
std
mov
mov
inc
and
xchg
adc
pop
inc
mov
jbe
fs
dec
out
add
jg
test
in
add
dec
and
push
ret
sub
insl
push
sub
mov
lods
cmp
aam
test
dec
les
sbb
testl
movb
jecxz
sub
cmc
movsl
icebp
and
sub
add
jg
cmp
je
cmp
je
xchg
jae
jecxz
add
js
or
es
lret
out
mov
or
and
cmp
pop
in
add
jmp
xor
xor
aas
mov
dec
mov
out
aas
mov
pop
sub
add
sub
mov
add
je
add
js
ret
xchg
cmp
and
test
in
dec
add
mov
ja
hlt
fisttpl
addr16
mov
push
mov
mov
push
adc
dec
rorl
add
cmp
je
push
xor
adc
hlt
xor
lock
add
repz
mov
push
adc
mov
jae
and
add
in
mov
inc
push
xor
xor
paddusw
mov
cmpb
je
cmc
icebp
pop
add
pusha
jb
mov
push
icebp
xor
pushf
jb
mov
pop
push
das
add
xor
pop
clc
pushf
cmp
push
jne
pushl
add
mov
mov
dec
xor
adc
sbb
mov
insb
repnz
cltd
clc
push
jecxz
and
mov
mov
add
and
mov
mov
mov
daa
lahf
enter
nop
lea
mov
adc
push
inc
mov
pop
jmp
lock
or
adc
les
lea
inc
je
xchg
mov
in
sbb
add
mov
incl
xor
mov
mov
sbb
push
mov
fs
fstl
lea
adc
mov
dec
or
inc
mov
pop
add
sbb
and
inc
or
sub
mov
xchg
add
lods
mov
mov
cld
mull
ret
inc
cmp
roll
adc
and
mov
mov
jns
aam
cwtl
cwtl
cli
add
sbb
in
inc
xchg
push
lahf
xchg
inc
dec
cld
sub
shr
adc
cwtl
jno
cld
out
mov
mov
xor
mov
mov
pop
movsl
nop
movsl
pop
cmpsb
pop
cmp
jge
jae
test
js
repz
and
rol
inc
in
fucomip
rol
pop
cmp
mov
add
xchg
ss
sar
cmp
jne
pop
stos
mov
or
iretw
cmpsb
iret
cmpl
dec
stos
mov
push
inc
mov
add
mov
insl
add
or
addb
jmp
push
rolb
jns
shlb
lahf
lock
je
ficoml
cmp
inc
mov
xchg
fdivs
inc
jne
pop
movb
inc
bound
cmp
cmp
mov
rcrl
xlat
pop
or
jbe
orb
andl
pop
cmpsb
inc
xor
out
popa
cmpsl
fnstenv
ljmp
es
pop
idivl
mov
je
inc
popl
jne
stos
and
and
xchg
mov
das
clc
jmp
xchg
insb
push
push
xchg
push
xchg
push
mov
xor
add
mov
jp
jmp
jmp
lock
cmp
je
cmpb
cmp
jne
arpl
add
push
push
cmp
aaa
gs
cmp
adcl
cmp
inc
inc
inc
inc
mov
outsl
mov
jbe
sub
jecxz
mov
test
adc
fsubs
lret
scas
sub
out
sahf
add
xchg
jge
dec
and
mov
stos
out
mov
cmp
je
cmp
mov
pop
push
test
bound
mov
int
mov
shl
mov
lock
rorb
and
incl
xchg
and
jo
cmp
inc
mov
imul
add
lret
or
or
cmp
int3
outsb
mov
dec
sub
je
or
je
ficoml
pop
push
push
pop
jne
shr
sbb
rorb
out
rclb
sub
add
bswap
and
movsb
mov
lods
je
mov
subb
pop
cs
jbe
xor
cmp
mov
dec
and
gs
mov
je
sarb
scas
mov
xor
in
popl
cmp
mov
dec
cmp
mov
fxch
dec
dec
mov
loop
cmp
pushf
push
loop
sbb
xchg
or
or
mov
pop
adc
fisttps
xchg
sub
mov
pop
lds
inc
xor
mov
cmp
sti
mov
sub
adc
enter
decl
or
inc
loopne
jmp
adc
mov
jne
inc
in
sub
mov
or
push
push
push
orb
inc
mov
fcmovb
xor
push
scas
and
push
pop
lods
cmp
xchg
or
mov
fsubrs
outsl
adc
loop
popf
pop
push
jns
in
push
ds
or
add
repnz
add
mov
and
in
int3
aaa
loopne
xchg
pusha
lahf
fwait
out
jno
add
or
imul
adc
push
push
push
cmp
fldl
mov
dec
dec
les
cmp
pop
mov
inc
fisttps
pop
inc
sbb
lret
mov
ret
nop
je
push
add
lock
cmpb
dec
mov
scas
loopne
lock
push
push
or
mov
fidivl
jne
cmp
je
mov
add
xlat
xor
sbb
outsb
punpckhwd
pop
push
pop
xchg
stos
cmp
jle
mov
sub
ljmp
xor
mov
fisubrl
dec
pop
sbb
mov
jo
in
xchg
or
dec
ljmp
or
mov
cmpb
push
je
mov
test
mov
lahf
push
enter
iret
xor
cmp
inc
jo
orb
cmpl
es
or
push
test
loopne
nop
les
mov
adc
lds
imul
in
rclb
or
inc
lock
jle
or
ret
loopne
xchg
push
pushf
push
mov
test
sbb
mov
fucomp
mov
push
jne
push
and
dec
cld
les
sbb
sub
aas
movsl
mov
jno
mov
jb
js
sub
mov
push
sub
shrb
cltd
mov
popf
lods
rcll
ljmp
into
fimull
movsb
pop
jmp
xor
cmp
mov
loop
push
lea
push
popf
and
ror
shl
or
dec
or
jmp
repnz
ljmp
xor
rol
push
ds
pushf
mov
sub
insb
into
xor
hlt
adc
js
xor
js
pop
stos
sbb
aam
jno
es
sbb
and
and
mov
ret
rcl
jge
rolb
add
jne
xor
mov
push
jo
mov
add
mov
mov
ret
adc
sub
out
xchg
or
jo
or
faddl
jno
cmp
jl
xor
pop
xor
popa
andl
in
adc
aaa
push
cmp
jmp
lods
push
push
insl
cmp
or
or
xlat
push
inc
push
push
adc
cmpsb
cmp
or
push
cmp
mov
jo
clc
and
pusha
shll
pop
ret
xor
sbb
add
jmp
pop
mov
bound
push
loope
sub
scas
movl
cmp
pusha
repz
add
push
adc
test
add
jbe
fwait
cmpsb
imul
out
cmp
ds
adc
repz
movl
out
mov
or
in
dec
and
add
sbb
jge
rcr
imul
add
lret
mov
mov
pop
push
pusha
test
push
test
push
mov
mov
cltd
sarb
outsl
or
add
jg
shl
data16
and
inc
jnp
push
or
lods
or
in
or
rcrb
lods
movsb
int3
repz
pop
pop
dec
add
xor
cmpsl
mov
sub
int3
aam
push
add
aas
test
test
or
jnp
adc
pop
add
inc
inc
mov
adc
mov
push
dec
test
sbb
mov
mov
test
jle,pt
mov
mull
pop
pushf
jg
inc
es
inc
les
lods
push
or
xchg
icebp
adc
sub
jmp
lods
and
sub
js
enter
and
mov
out
mov
test
sbb
aam
add
rclb
fsubs
pusha
cmp
leave
bound
cwtl
int3
and
loope
int3
inc
inc
jecxz
jmp
and
sbb
shll
add
clc
sbb
pop
pop
xor
jb
and
lcall
pop
mov
adcl
les
push
and
xchg
outsb
fwait
mov
in
les
clc
xlat
rorl
pop
or
mov
lcall
pop
cmp
or
ret
mov
clc
sbb
cmp
fsub
xchg
mov
lock
outsl
inc
inc
jmp
pop
jo
shlb
rorl
sar
lods
mov
sbb
and
cmp
dec
jecxz
xchg
add
dec
in
addr16
or
xor
pop
cmp
xor
push
aam
inc
div
or
jl
inc
cmp
shrb
jecxz
nop
shlb
pop
add
sbb
add
cmp
ret
mov
sub
pusha
or
mov
sti
pop
dec
pusha
orb
adc
ret
xchg
dec
mov
aas
imul
jae
add
pop
scas
adc
stos
leave
mov
sub
arpl
or
insb
or
lods
dec
out
xchg
add
aad
sub
jne
push
inc
icebp
jge
sbb
lods
jp
orb
fs
or
cmp
dec
in
dec
sahf
push
xor
inc
test
lods
stos
add
add
and
inc
js
mov
loopne
test
xchg
pushl
or
enter
xor
push
popf
les
sbb
mov
and
adc
dec
stc
mov
mov
fimuls
into
fnstenv
mov
popf
and
aaa
cmpsl
sub
or
iret
insb
pop
add
ror
sub
and
ret
dec
mov
out
add
and
fbstp
fs
aam
push
addr16
fistpl
fmull
inc
mov
and
xchg
lea
sbb
or
mov
pop
sete
test
stos
cmpsl
repnz
sbb
xor
xchg
ret
mov
xorl
xor
push
add
ds
mov
mov
jo
dec
subb
lcall
gs
inc
cmp
mov
jbe
mov
cmc
push
xor
orl
in
paddusb
icebp
add
pop
sub
and
ss
pop
push
into
mov
int3
mov
push
ret
cwtl
lahf
rcrb
inc
adc
test
jnp
jnp
sbb
push
and
cmp
imul
or
add
int3
lea
push
mov
cmp
iret
push
inc
xchg
dec
push
test
adc
in
add
or
in
inc
and
push
in
xor
cmp
stos
xor
enter
les
mov
add
push
sbb
push
dec
clc
mov
adc
jge
xchg
pop
mov
xchg
fldenv
mov
sub
push
sbb
mov
shll
sbb
popf
xor
sub
and
or
and
inc
and
fcoms
adc
orb
and
or
inc
jle
mov
add
xor
sbb
ds
xor
adcl
sbb
push
popa
xorl
sub
fisttpl
push
mov
dec
mov
sub
cmp
iret
or
and
add
fwait
pop
adc
xor
pop
shll
cmp
mov
add
sbb
sbb
mov
sbb
push
fcoml
imul
fabs
fsts
mov
jbe
pusha
push
xchg
and
mov
cmp
jae
or
cld
pop
test
add
add
adc
bound
adc
mov
xor
adc
mov
xor
adc
and
adc
ja
fsubs
cmp
movsb
inc
push
pop
xor
push
add
jne
jno
xchg
mov
adcb
add
nop
nop
or
popa
fisttps
cmp
mov
add
inc
or
or
icebp
test
mov
push
call
push
and
loopne
pop
mov
in
ja
push
dec
jo
xor
scas
and
add
inc
repz
in
pushf
xor
ss
leave
cmp
pop
sete
fnstsw
pop
ljmp
scas
push
xor
push
orl
mov
adcl
add
in
xchg
sbb
mov
aaa
and
xchg
and
xor
and
das
test
shll
pop
mov
sbb
pop
scas
popa
mov
pusha
mov
mov
sub
mov
sub
sub
sub
sbb
out
sub
stc
out
sub
push
jle
pop
int
add
jmp
fistpl
je
push
pop
jo
jnp
popa
sbbb
jno
loopne
ss
adc
and
das
mov
adc
lock
jne
mov
dec
add
push
test
lock
add
ja
inc
xor
push
add
in
dec
mov
dec
fcoml
mov
add
or
sbb
sbb
xor
aaa
mov
push
bndstx
dec
and
or
nop
sub
add
cmp
sbb
xor
and
xor
xchg
inc
rorl
scas
lods
idiv
ljmp
fcmovnu
mov
mov
mov
mov
ret
cltd
add
push
and
sbb
rcl
js
fdivl
cmp
sub
inc
dec
mov
and
mul
add
mov
sar
sbb
mov
pop
arpl
dec
mov
and
push
push
ss
pop
aaa
ret
pusha
rorb
sbb
dec
xor
jae
xor
mov
sub
inc
adc
add
jg
in
and
daa
inc
adc
outsl
jl
iret
add
and
jns
cs
clc
pop
ret
add
lea
xchg
jle
mov
orb
dec
xchg
or
and
testb
add
cmp
cmpl
xor
add
pop
cmp
xchg
out
push
movsl
out
in
inc
adc
push
xor
sbb
sub
xor
nop
aad
mov
rorb
lods
enter
mov
es
xor
and
push
cmp
loope
mov
mov
xchg
popf
mov
xchg
jo
mov
in
sahf
test
add
push
cmp
mov
aaa
stos
es
imul
push
loop
xor
mov
inc
sub
mov
inc
lods
xor
or
inc
dec
add
adc
cmp
xor
inc
add
pop
mov
mov
add
adc
cltd
psubusb
imul
fwait
clc
insb
mov
jg
in
push
arpl
inc
xor
push
pop
fnsave
push
push
add
daa
cmp
je
or
shll
ror
lods
cmp
test
fsubr
and
lret
test
add
add
sbb
push
outsl
fsubrs
rclb
dec
or
addb
push
pop
ljmp
xor
inc
xlat
mov
jg
mov
add
sbb
dec
mov
adc
or
dec
sub
push
pop
cmpsl
or
push
xlat
push
jp
xchg
inc
or
pop
stc
sbb
pusha
inc
or
mov
jl
jo
push
push
pop
xor
fstl
sbb
arpl
xchg
das
add
and
popa
xor
xchg
dec
push
or
movb
push
or
loopne
add
jl
push
xchg
mov
sub
js
daa
push
enter
decb
pusha
push
xchg
pusha
outsb
and
fadds
pusha
stos
pop
test
adc
dec
push
jmp
sub
push
push
stc
sub
sbb
mov
ljmp
or
push
popf
xor
lds
sbb
sbb
and
and
je
push
pusha
je
je
mov
popf
cmpb
mov
and
inc
dec
insl
pop
ret
pop
in
sub
or
fisttpll
ret
cmc
test
sub
pusha
inc
jbe
pop
pop
in
decb
mov
lds
inc
mov
popa
inc
roll
das
adc
sub
arpl
pop
cltd
mov
push
icebp
scas
dec
jns
pop
and
in
pushf
out
push
sahf
pop
stos
add
dec
add
dec
add
in
dec
sahf
add
cmp
dec
sahf
mov
mov
xchg
jp
stos
ja
mov
cmp
cwtl
mov
lods
push
or
arpl
mov
xorl
sub
or
or
inc
adc
add
mov
xchg
aaa
gs
mov
or
js
in
dec
loopne
add
adc
adc
xor
and
and
dec
insl
fs
push
add
jp
pop
xor
mov
inc
jne
dec
add
push
imul
ror
scas
dec
daa
add
mov
dec
fld
aaa
mov
movsl
push
out
test
daa
call
or
aad
mov
or
inc
pushf
mov
lods
in
setp
adc
adc
cltd
inc
pop
inc
or
or
or
and
adc
add
or
push
sbb
inc
outsb
loope
aad
add
xor
rorb
push
hlt
lock
xchg
lock
mov
icebp
or
jecxz
movsb
add
mov
clc
call
and
cmp
pop
mov
push
xchg
out
sbb
or
das
jecxz
xor
adc
mov
and
push
aas
or
je
or
push
lea
pop
inc
call
pushf
pop
cld
cmpl
pusha
dec
adc
xor
int3
das
lcall
dec
lret
testl
das
lea
xchg
mov
sub
jb
call
push
ret
push
ret
pop
mov
cmpb
je
and
push
sar
or
push
call
add
mov
inc
rcll
or
jge
cmp
mov
orb
gs
push
mov
inc
hlt
xor
fs
fnsave
sbb
inc
and
bound
mov
xchg
icebp
dec
xor
mov
pop
push
and
pop
sub
out
fdivp
and
sbb
popa
dec
das
mov
je
sbb
out
add
or
sbb
mov
js
sub
add
mov
fistps
xchg
push
std
or
movsb
push
and
mov
and
adc
pop
add
sub
dec
mov
adcb
push
add
mov
xchg
ljmp
in
add
add
leave
adc
sbbl
add
and
push
mov
imul
adc
inc
lar
mov
cmp
sub
pop
jb
xorb
or
cmp
or
lahf
inc
ss
pop
mov
dec
sbb
insl
aad
mov
mov
dec
push
sub
xor
and
inc
cmp
aas
cmp
pop
inc
adc
enter
or
pop
jp
adc
push
gs
jo
lahf
xor
lea
add
xchg
loope
ds
fsub
cmpsl
fadds
xor
adc
mov
mov
shr
adc
push
push
push
jl
scas
add
jle
test
cmp
mov
jne
lds
push
outsl
sbb
jo
sbb
add
in
in
add
movsb
dec
xor
mov
pusha
jo
arpl
mov
push
loope
push
pop
sahf
cmpl
push
mov
push
addr16
ret
leave
or
pop
sbb
push
fcmovu
add
andl
pop
pop
sbbb
subb
iret
out
cmc
iret
xchg
mov
push
add
and
or
movsb
cmp
jp
inc
jg
push
adc
or
and
leave
leave
dec
and
das
push
or
add
xor
or
mov
jmp
inc
mov
jl
add
dec
mov
push
jne
fistl
mov
push
adc
or
sub
dec
adc
cmp
sub
dec
pop
xor
xor
cmp
mov
add
jmp
daa
push
sub
dec
add
pop
cmp
fstl
jg
add
test
clts
lea
je
xchg
cld
cmpl
push
add
sar
xor
addb
cmpb
adc
adc
pop
int3
inc
pop
push
lahf
push
sbb
xor
sub
inc
cmp
dec
call
inc
cmp
jl
pop
push
sub
adc
add
jecxz
ret
mov
mov
hlt
mov
addl
cli
sub
or
pushl
xor
xchg
or
push
gs
pop
movsl
fadd
pop
clc
mov
loopne
into
xchg
adc
push
push
insb
xchg
pop
xor
sahf
inc
pop
out
fisubrs
xchg
movsl
cltd
push
sub
insl
mov
inc
pop
mov
push
mov
ljmp
loopne
or
ret
filds
and
add
shll
jbe
and
nop
lock
or
sbb
cmp
xchg
or
dec
push
stc
sub
inc
mov
jmp
bound
push
pushf
push
add
push
push
in
fildl
mov
pop
push
mov
movsb
push
push
inc
les
or
fisubs
sub
add
sbb
lds
mov
ret
sarl
add
sbb
js
lea
or
lea
lea
mov
adc
mov
push
sub
bound
enter
cmp
sahf
test
pop
add
popa
pop
test
or
push
into
outsb
mov
movsbl
inc
sbb
lahf
pushf
test
lcall
and
aad
and
inc
sub
je
sub
mov
xlat
push
fs
sub
adc
mov
sahf
jecxz
add
xchg
pop
cmp
insb
popa
add
in
sbb
cs
push
push
loopne
lcall
stos
adc
push
loopne
std
rorl
push
mov
lock
fbstp
rep
add
adc
push
inc
push
xchg
rolb
xchg
rolb
popa
lods
lcall
mov
and
jo
in
add
mov
jl
pop
mov
clc
inc
cmp
jne
push
sbb
lods
mov
sbbb
lea
pop
stos
push
pusha
mov
jbe
pop
test
jge
mull
rclb
rcrb
pop
enter
jmp
cmp
jae
cltd
call
outsl
push
in
add
fcom
cli
fsts
push
mov
inc
shrb
fidivl
sub
pushl
loopne
and
outsb
inc
movsl
push
sub
sbbl
xchg
in
sti
mov
mov
add
dec
fcoms
or
cmpb
inc
lock
or
sbb
sub
push
add
xchg
decl
adc
dec
mov
mov
aad
aad
aas
aad
ret
pushf
flds
imul
and
adc
roll
adc
sbb
mov
sbb
inc
or
sub
and
and
sub
add
fnstsw
pushf
jo
jbe
mov
jb
push
cmp
mov
rolb
scas
mov
lods
inc
mov
js
popf
mov
test
push
fsub
lds
dec
add
mov
xor
jmp
das
ds
test
pop
pop
or
lods
imul
inc
sbb
shrb
je
or
and
data16
xchg
add
nop
jno
or
mov
add
add
or
push
push
cmp
mov
sub
xor
movsl
rcll
ss
push
mov
mov
sub
xchg
inc
mov
jnp
sub
pop
jae
and
lods
mov
add
mov
sbb
arpl
orl
dec
loope
xchg
aas
lea
pop
ds
mov
lock
push
and
daa
cmpsb
sarl
xor
pop
pop
jle
mov
sbb
mov
mov
inc
popf
push
scas
push
add
fisttpl
cmp
jl
mov
sub
or
js
jle
or
icebp
dec
mov
mov
call
mov
lahf
add
inc
push
add
adc
dec
shlb
mov
lea
clc
pusha
ror
shlb
xor
dec
movsb
and
test
or
sbb
add
out
push
repnz
push
jp
nop
sbb
in
mov
add
repnz
lret
ds
roll
dec
jge
add
test
cli
sti
sar
lods
popf
fcomps
in
sbb
jge
ljmp
call
adc
dec
sbb
mov
or
or
rcrb
or
dec
lock
sub
push
sbb
out
cmp
mov
jmp
or
or
or
jl
stc
or
and
sbb
dec
xchg
pop
inc
ja
insl
lcall
mov
shld
and
aas
test
push
adc
push
cmp
jge
push
fcoml
push
pop
pusha
jle
mov
push
xchg
mov
fnstcw
jl
cmp
jg
mov
inc
dec
mov
rcrb
roll
and
push
add
add
xor
fdivrl
aaa
addb
mov
imul
out
jo
xorb
mov
inc
push
and
push
cmpsb
add
inc
or
scas
fsubrs
or
or
inc
int3
jmp
ret
jmp
mov
mov
pop
jl
decl
xchg
and
inc
jbe
xchg
inc
cmp
rorl
lea
int
sbb
sbbb
test
inc
pop
mov
add
add
push
push
dec
in
or
and
push
xchg
push
cli
js
cmp
adc
add
inc
mov
xor
loopne
xchg
adc
aaa
dec
jecxz
add
andl
cmp
cmp
loopne
mov
sbb
mov
inc
hlt
nop
jge
or
decb
dec
and
nop
subl
scas
push
fiadds
out
push
enter
or
inc
xor
lds
add
shlb
add
stc
imul
mov
jmp
pushl
push
je
lods
stos
pop
les
push
push
std
add
fwait
mov
inc
aaa
imul
aad
popf
fldenv
xor
icebp
out
adc
aad
iret
decl
scas
sub
cmpl
jo
je
sbb
mov
mov
inc
push
mov
scas
pop
call
pop
fildll
fs
fabs
es
cmp
add
ret
pop
movzwl
jb
mov
pop
icebp
leave
push
dec
add
jmp
adc
lea
mov
jge
lock
push
movsl
mov
nop
clc
dec
mov
or
dec
daa
add
lock
shl
lea
push
cld
adc
mov
adc
int
mov
enter
sti
outsb
sub
xchg
rolb
call
xchg
push
adcl
dec
sbb
out
mov
mov
push
adc
mov
cmp
or
and
ds
dec
and
dec
jp
lea
lods
adc
add
movsb
or
das
lcall
lea
lea
push
push
dec
orl
aaa
pop
test
fiadds
push
andl
cli
jle
nop
ljmp
into
stos
or
mov
jbe
pusha
cmp
mov
jge
loop
mov
or
in
lcall
mov
jb
sahf
roll
hlt
xchg
jle
cmp
push
adc
lcall
lods
mov
pop
push
dec
mov
lds
stos
out
cmp
and
jb
sbbb
dec
and
push
xor
sbb
sbb
lods
jg
movsb
mov
sbb
clc
and
pop
js
jge
je
aas
movsb
roll
add
rolb
movl
sarl
adc
jl
mov
xor
push
faddl
in
int3
or
mov
dec
test
pusha
je
mov
push
inc
jle
lods
repz
add
mov
add
xor
adc
mov
popa
call
jmp
jmp
inc
mov
jne
inc
push
mov
push
sbb
and
gs
mov
dec
add
mov
add
or
adc
scas
adc
jecxz
fs
or
lret
cmpsb
adc
sbb
jp
xlat
aam
and
xor
xor
and
lods
ss
sbbb
add
mov
rcr
mov
pop
or
add
stc
test
je
cmp
add
pop
sbb
std
iret
pushf
bound
sbb
adc
lods
jmp
mov
movq
adc
ror
jo
pop
push
or
inc
adc
add
lock
or
jl
loope
clc
in
mov
es
and
adc
or
sbb
push
sub
inc
add
mov
inc
imul
push
mov
or
or
add
sub
mov
add
sti
lock
push
sub
or
mov
loop
push
ljmp
dec
mov
in
adc
jecxz
call
xor
pusha
movb
scas
adc
rolw
mov
loop
add
sub
adc
sarb
in
mov
or
enter
mov
or
aam
jno,pn
ss
adc
sbb
mov
xchg
fadds
cmp
ja
mov
sarb
mov
sub
jl
xor
lret
jo
hlt
insb
push
fcoms
clc
mov
movsl
test
test
in
je
add
movsb
mov
jl
loopne
and
cbtw
sub
adc
clc
jmp
pop
mov
fdiv
adc
sbb
in
mov
test
aam
in
push
jno
cmp
inc
in
mov
mov
mov
jmp
test
shll
jge
dec
in
lea
sub
ds
aam
fadds
idivb
fmull
sbb
inc
lea
addr16
ljmp
dec
adc
test
push
lods
out
loopne
inc
add
lcall
dec
ds
push
testl
adc
add
jmp
cmp
aam
stos
push
subl
dec
adc
adc
xchg
out
in
xchg
sub
ljmp
push
push
inc
clc
push
add
mov
sub
mov
push
call
mov
cmp
cmp
add
repz
or
jo
outsb
xor
adc
add
ds
inc
nop
add
mov
dec
xor
sbb
mov
and
and
lahf
or
sbb
jmp
ljmp
enter
shl
add
inc
add
mov
jecxz
ficoms
pop
loopne
mov
or
adc
mov
push
mov
mov
scas
popa
enter
enter
push
mul
seto
add
or
push
adc
outsb
lock
and
stos
ret
or
push
xchg
push
outsl
lods
xor
or
aam
aas
movsb
add
push
push
pop
adc
das
pop
fdivs
fnstcw
call
data16
addr16
fldcw
sub
shlb
inc
mov
sub
adc
cmp
js
inc
call
or
shrb
push
je
rorl
aas
out
inc
add
or
cmp
sub
dec
or
dec
fsubrs
inc
sbb
adc
xorb
mov
imul
shrl
add
jne
loopne
or
aas
jg
ret
jno
and
decb
scas
adc
shl
jbe
mov
ret
adc
xchg
mov
lods
xor
lock
add
xor
addl
or
cmp
cmpsl
or
push
cmp
or
fimuls
xchg
nop
inc
daa
inc
sbb
sbb
loopne
incl
jb
inc
pop
mov
lahf
in
cmpl
int3
sbb
jg
ret
iret
ret
mov
andl
and
fs
and
cmp
sbb
outsb
cmp
imul
fistps
cmp
pop
ss
pop
mov
push
sbb
cltd
sub
lret
pop
cli
or
cmp
fdiv
jg
inc
out
add
sti
jmp
inc
cmp
movl
sub
ss
jle
lea
into
jnp
loop
pop
push
or
cld
fiadds
loopne
insl
add
mov
sarb
sub
sbb
and
in
hlt
iret
lcall
aaa
dec
loope
push
adc
xchg
nop
sarb
aad
cmp
out
rcrb
and
sub
dec
inc
lahf
jbe
cltd
adc
repz
rolb
out
add
xchg
out
sub
mov
and
push
jnp
or
movsb
sahf
lret
mov
call
lock
inc
cmp
pop
push
xor
xor
xchg
pop
xor
loop
cmpsl
stc
mov
and
jb
cmp
add
sub
and
cli
in
lea
mov
sbb
es
and
frstor
addr16
mov
sub
pop
shlb
xchg
cli
adc
xchg
dec
rolb
and
add
or
out
adc
push
dec
fldenv
pop
fcoml
xor
fadds
movzwl
lea
cmp
je
ljmp
xchg
adc
xchg
sub
insb
jg
xchg
clc
into
pop
in
inc
hlt
push
push
roll
inc
push
jbe
scas
and
orl
enter
das
xorb
sahf
nop
inc
hlt
das
test
outsl
pushf
lea
mov
xchg
cmpl
cmp
sub
sbb
jno
cmp
xchg
popf
movsb
xor
lds
and
push
cwtl
movsl
cmp
orb
adcb
sub
lock
lock
sbb
adc
ljmp
out
pop
xchg
sub
dec
std
sbb
aam
cmp
gs
add
xchg
add
cmp
xor
or
jmp
add
shlb
outsb
push
jne
popa
repnz
filds
outsl
roll
mov
movsl
xchg
xchg
dec
mov
add
jb
mov
subb
call
test
adc
fs
inc
or
or
ret
iret
lock
cmp
bound
fs
dec
and
push
inc
xchg
jne
das
rol
xor
in
or
xor
pop
movsl
notb
out
sahf
testb
adc
sub
hlt
push
mulb
cmp
add
mov
mov
insl
pop
js
fs
xchg
cmp
pop
imul
ljmp
pop
shlb
pop
or
pushf
push
ror
repz
inc
push
cmc
aad
cmp
jns
lods
add
push
call
pusha
mov
loope
cs
or
jne
mov
or
aam
or
loope
pop
adc
xor
sbb
push
and
and
or
and
sub
xchg
jo
aad
inc
pop
ret
pop
ficompl
jbe
pop
add
or
xchg
xchg
lds
fisttpl
imul
testb
movsb
cmp
jae
dec
sbb
dec
sbb
or
inc
add
add
cld
sbb
sbb
xchg
call
adc
and
insl
jne
pop
cli
push
rol
adcl
mov
and
xor
mov
mov
jae
loop
push
fisubl
and
push
or
je
bound
pop
xchg
mov
out
add
cmpl
push
and
dec
jnp
call
mov
sti
or
cmp
and
mov
xchg
xchg
rcll
adc
std
mov
es
jnp
xchg
lock
or
shlb
mov
xor
cmp
push
stc
pop
mov
je
jmp
jg
inc
cs
push
scas
inc
call
add
call
lea
mov
aas
mov
mov
inc
and
test
adc
js
adc
unpcklps
mov
imull
std
inc
loopne
or
mov
xchg
and
ret
mov
mov
movl
mov
adc
pop
in
lea
arpl
and
cld
pop
imul
sarb
sub
adc
loopne
or
add
xchg
int
loope
push
adc
sbb
jl
mov
jne
add
add
push
adc
insl
pop
call
insl
divl
lea
add
shr
and
popf
fwait
jmp
lea
or
push
mov
sub
add
sub
mov
inc
in
push
dec
imul
xchg
in
inc
or
adc
std
jo
jge
push
dec
imul
data16
pop
ret
inc
nop
push
mov
pop
mov
inc
pop
pusha
cmp
dec
scas
add
and
leave
pop
call
test
repz
sub
push
out
fstps
dec
mov
add
les
sbb
cmp
testb
lods
adc
ret
push
and
inc
mov
pop
repz
add
imul
imul
leave
push
jne
or
filds
and
push
dec
scas
in
push
sub
or
lock
cmp
aam
jae
into
mov
sub
pop
push
movsl
shrb
adc
cmpsb
adc
adc
pop
ret
jne
mov
fimuls
ror
add
cmp
lea
ret
xor
ss
cmpsl
orb
or
sbb
stos
adc
scas
or
fmuls
inc
adc
add
xchg
sbb
pop
data16
sarb
xor
scas
pop
inc
bound
jb
aaa
adc
jnp
jae
jg
nop
imul
sahf
fwait
jge
test
inc
clc
mov
addr16
push
jns
sbb
push
xchg
or
jb
dec
fisttpl
test
in
xchg
push
jns
xchg
into
lret
add
inc
shlb
arpl
pop
and
rcrl
inc
or
xor
or
pusha
subl
rcr
lea
sbb
test
adc
push
push
push
jo
xchg
aam
sbb
push
cmp
nop
dec
and
fildl
adc
inc
mov
inc
cmp
nop
rcrl
jl
jmp
es
lea
test
mov
clc
stos
call
lock
test
mov
mov
dec
jecxz
dec
mov
mov
orl
mov
xchg
add
in
lcall
or
ret
jae
lea
cmp
ja
aas
mov
add
es
mov
scas
mov
mov
xorb
outsb
bound
mov
scas
bound
push
sbb
sbb
cmp
sbb
or
inc
xor
daa
push
push
aaa
add
add
int3
add
mov
cmc
les
or
xor
outsb
lods
inc
pop
sbb
in
inc
rolb
pop
add
sbb
aas
enter
nop
and
push
adc
stc
push
push
adc
mov
adc
fisubs
out
repz
cmp
mov
push
or
mov
jg
add
jbe
sti
or
mov
jb
jae
push
push
test
je
mov
or
inc
inc
cmp
add
rorl
adc
or
lock
and
sahf
xchg
mov
vmptrld
cmpb
add
sbb
shlb
movsb
or
rol
stc
add
movsl
add
stc
mov
lods
insl
xchg
jmp
dec
call
or
add
push
dec
pop
mov
int3
je
inc
inc
popa
add
arpl
mov
sub
pop
jno
push
push
and
add
pop
adc
mov
pop
mov
arpl
pop
add
jg
ja
sub
pop
sub
jp
out
jo
aam
cwtl
adc
add
xor
mov
xor
loopne
xor
adc
mov
xor
jno
loope
iret
iret
pop
mov
fdivr
jmp
jae
scas
sbb
or
pop
sbb
add
cs
in
aaa
int
arpl
testl
orl
xchg
test
add
leave
hlt
fisttpll
lods
loopne
movl
jne
lea
loop
jo
call
xchg
mov
push
cmp
mov
adc
mov
faddl
or
fcoml
sbb
loopne
add
bndldx
add
pop
aas
cmp
popa
lea
pusha
cmp
mov
mov
cmpsb
mov
cmpb
fcomps
jns
ja
push
push
call
js
add
inc
pop
sarb
cmp
jmp
add
scas
jmp
add
mov
mov
mov
roll
mul
pop
or
push
or
push
mov
xchg
mov
ret
jl
mov
fsubs
mov
roll
cmp
fistpll
xor
or
xchg
lds
pop
pop
cmp
mov
push
loopne
sub
mov
inc
cmp
mov
aam
xchg
inc
imul
in
inc
dec
adcl
push
push
jl
mov
ds
push
daa
rorl
cmpsl
loopne
rorb
mov
jg
inc
sbbl
cmpsb
jns
push
call
push
push
jne
fdivs
cmpl
shlb
adcb
in
push
test
dec
in
xchg
xor
cmp
xor
pop
xchg
lods
cmp
jnp
or
add
pusha
mov
push
jno
in
das
dec
inc
gs
or
insb
jb
add
inc
lods
add
mulb
loopne
sub
sbb
cmp
push
push
push
jecxz
data16
mov
jmp
sbb
inc
aas
sti
push
lds
pop
int
xor
mov
push
dec
cmp
dec
sahf
scas
mov
mov
cmp
popf
in
mov
inc
mov
mov
and
pop
mov
ja
je
rclb
and
mov
lret
sbbl
jmp
fsubrs
sub
cmp
jge
repz
pop
shrb
and
cmc
lods
sbb
inc
rcll
mov
ret
xchg
or
xor
dec
dec
sub
lock
jo
jb
xor
and
testb
sub
push
mov
push
ss
mov
fisubl
dec
fsts
je
test
add
add
arpl
ja
les
loopne
sbb
and
dec
inc
je
pop
mov
pop
jns
in
mov
xor
sbb
mov
sub
sub
add
inc
fimuls
pop
pop
jle
push
add
and
insb
in
outsl
std
jmp
cltd
sub
pusha
or
loopne
sub
jle
push
cltd
mov
call
sub
pushf
adc
add
pusha
adc
xchg
add
sbb
jb
mov
jo
cmp
stc
mov
mov
dec
sbb
in
icebp
call
mov
nop
out
jmp
adc
and
sub
mov
cmp
jae
mov
xor
sub
push
jmp
adc
push
cmc
ljmp
inc
inc
inc
jmp
daa
cld
popa
test
clc
jae
lea
int
loope
push
cmpb
jne
cmpb
jne
lds
sti
sarb
lock
ljmp
out
in
jg
neg
sbb
and
add
sbb
repz
mov
pushf
sbb
or
cmp
or
cwtl
je
insb
push
outsb
xor
add
mov
inc
cmp
lcall
and
push
test
push
jl
xchg
imul
sub
stc
inc
push
push
sbb
sbb
das
pop
and
push
arpl
nop
shll
jmp
mov
jp
jmp
xor
xor
mov
aad
mov
pushf
mov
and
push
ljmp
pop
jmp
pop
push
xchg
adc
ret
sub
ds
adc
bndstx
push
mov
repz
cmp
ret
scas
les
push
insb
and
hlt
jg
test
jne
pop
push
mov
int
lock
mov
leave
xor
into
cmpw
mov
add
aam
data16
mov
ret
add
call
push
mov
inc
nop
jecxz
into
fdivr
jle
xor
xlat
or
and
fcoml
aam
push
jne
stos
jmp
mov
pop
inc
mov
inc
test
mov
jne
or
popf
shll
mov
sahf
xchg
xchg
jmp
jae
mov
test
je
call
jle
pop
add
ret
push
jae
jo
sub
sbbl
je
push
or
pop
push
popa
iret
cmp
lcall
fbstp
insb
push
lea
sbb
scas
inc
clc
in
ret
aas
hlt
testb
sbb
push
stos
xchg
or
les
fstl
mov
sbb
pop
and
rolb
push
fistl
ret
lret
cmpb
je
popf
sbb
mov
hlt
push
test
addr16
and
sub
cmp
mov
lea
push
jmp
sbb
add
jge
je
cmc
add
ljmp
push
xchg
or
pusha
or
xorb
and
lea
add
decb
insb
jnp
inc
mov
mov
sub
jns
push
loop
sub
mov
push
add
mov
fimull
mov
push
orb
push
push
push
andl
push
imulb
movsb
push
sbb
adc
repnz
lea
add
aaa
sub
add
outsl
aas
add
in
ret
filds
je
mov
pop
pop
push
push
fsubl
ja
mov
xor
adc
sub
mov
pop
jno
lret
push
fidivl
pop
mov
pop
push
and
push
sbb
repnz
mov
or
lods
push
pop
pop
pop
sarb
jno
js
push
or
jb
or
mov
testl
nop
stos
add
xor
int
inc
aaa
pushf
adc
pop
mov
or
or
test
pop
jp
mov
adc
sarb
rorb
or
pop
cmp
jl
cmpsb
jmp
in
pop
jae
xor
add
cmp
sbb
sbb
push
pop
je
mov
ljmp
aas
adc
shlb
es
das
sub
rorl
sbb
cmp
aas
mov
push
hlt
adc
jae
inc
xor
push
pop
add
jmp
or
xchg
inc
outsb
add
outsb
es
mov
jmp
xor
pop
add
or
xor
mov
cmp
push
push
push
movsb
push
mov
fsubr
jnp
mov
in
mov
sub
push
or
adc
or
mov
and
imul
push
sbbl
and
leave
movsl
test
mov
cmpsl
fistpl
bnd
mov
pop
sub
mov
call
loopne
or
push
sti
mov
xor
incl
rcll
lret
stos
cmp
pop
or
mov
outsb
inc
inc
cmp
mov
sub
inc
mov
dec
jmp
pop
and
cltd
fidivl
cmp
or
sub
int3
inc
push
les
dec
add
inc
ds
cmpsl
xchg
lods
xchg
pop
fcomps
mov
inc
pushf
mov
outsb
pop
push
arpl
inc
cs
ret
fisubrs
add
leave
aas
add
dec
xor
jbe
decb
rorb
je
mov
cmc
and
pop
clc
push
clc
mov
adc
mov
sar
pop
sbb
outsb
stos
js
or
mov
and
or
test
inc
and
push
loope
xchg
inc
or
gs
inc
dec
loope
gs
jb
pop
lret
clc
inc
mov
inc
inc
sub
aas
jb
mov
hlt
mov
hlt
js
das
jmp
sub
push
ss
loopne
or
jmp
rorb
out
push
aaa
dec
adc
cmp
in
fs
push
or
scas
es
push
outsb
add
cmp
shlb
mov
fmuls
inc
mov
dec
mov
sbb
or
bound
mov
fisttpll
outsb
or
push
daa
lods
sub
or
test
rcrl
xlat
jae
aad
push
mov
jno
push
dec
or
or
ret
push
push
push
xor
lds
pop
insl
push
xchg
bound
pop
bound
jmp
sarb
cmp
or
sahf
pushf
sub
dec
inc
out
fstpl
mov
mov
inc
mov
sub
std
sahf
adc
lret
or
pop
add
adc
add
dec
inc
or
js
aas
add
loop
in
testl
cld
sub
inc
mov
push
mov
sti
jb
test
and
add
or
push
lds
add
mov
sbb
pusha
hlt
popf
punpckhbw
adc
mov
push
or
push
or
ret
sbb
shll
inc
push
xchg
and
inc
jp
dec
hlt
jbe
sbb
fistl
push
jl,pt
push
jg
cmpb
jne
inc
inc
in
xchg
adcl
inc
or
inc
cld
adc
adc
das
xor
and
add
or
sub
and
cmp
in
call
sbb
jmp
push
push
outsb
test
mov
pop
sub
sbb
leave
out
ret
mov
jl
aaa
inc
pop
sbb
push
test
or
cs
xor
add
and
mov
xor
add
testb
or
rcll
inc
or
jmp
inc
mov
and
or
pop
push
inc
lea
xor
pop
add
lods
dec
add
adc
add
out
movsl
mov
mov
push
call
adc
iret
pop
jmp
xchg
lahf
imul
mov
inc
and
mov
mov
rolb
adc
cs
mov
sbb
push
sub
xor
sbb
sbb
imul
lods
pop
sbb
add
lahf
push
incb
pop
push
xor
or
xor
fucomp
or
adc
movsl
mov
inc
sub
nop
sub
xor
adc
jne
mov
add
cmp
daa
push
sti
sbb
clc
clc
cmp
icebp
add
xor
lods
out
insb
or
adc
lods
in
gs
dec
movl
clc
inc
and
mov
adc
sub
sub
mov
dec
sahf
adc
ret
leave
enter
adc
and
adc
or
mov
dec
add
pop
push
movsb
fstps
rcl
out
lahf
pop
and
and
sbb
adc
in
xlat
lahf
xchg
orl
icebp
test
or
inc
in
mov
cmp
mov
push
int
fsubrs
xchg
pop
xchg
fwait
loop
inc
iret
cmp
jne
cmpl
lahf
add
xorl
mov
loope
or
daa
add
mov
push
aaa
mov
mov
push
fstpt
loopne
movsb
je
fstl
xor
adc
push
cmp
xchg
push
test
xor
pop
add
push
pusha
cmp
sub
and
loopne
sbb
xchg
adc
inc
add
outsl
dec
sbb
sub
and
push
dec
mov
adcb
and
mov
mov
add
movsb
sbb
dec
sbb
movsl
rcrb
loopne
xchg
or
xchg
ja
mov
mov
cmp
xor
and
lods
jle
pop
adc
pop
xor
push
push
mov
fimull
pop
mov
stc
sahf
xor
push
pushf
sbb
xor
sub
or
sbb
subl
shll
xor
insl
jmp
mov
jnp
xchg
mov
push
jnp
adc
loop
sahf
push
sarb
push
xor
fnsave
in
cmpsl
inc
adc
jno
mov
rcll
mov
and
arpl
push
add
fistps
jge
call
adc
cmp
adc
push
add
mov
inc
sub
or
imul
enter
adc
insl
inc
clc
adc
xchg
and
inc
add
xlat
add
loopne
pop
int3
mov
push
add
and
mov
xor
add
or
sbb
or
mov
lods
nop
xchg
dec
sbb
inc
push
inc
cmp
add
cmp
sbb
orl
adc
jg
add
push
jbe
pop
incl
inc
faddl
sbb
sbb
cmc
xchg
test
aam
jno
mov
aad
pop
add
push
shr
inc
xchg
je
dec
call
mov
mov
xchg
mov
cmp
bound
pop
add
adc
mov
pop
mov
mov
jp
and
add
lcall
mov
sub
or
add
mov
ret
cwtl
add
rorb
movups
ret
dec
or
mov
jno
outsl
push
mov
fwait
mov
push
dec
fidivl
dec
mov
or
stos
dec
daa
xor
or
and
pop
enter
add
xchg
daa
or
push
inc
mov
and
fwait
popf
or
sub
push
cs
add
mov
sahf
mov
xor
sub
sub
mov
add
rcrl
xor
imul
cmp
mov
rol
pop
inc
lret
push
xor
xchg
mov
push
test
push
inc
imul
adc
add
lds
sbb
and
push
and
or
faddl
fwait
cmp
adcl
and
pushf
push
xchg
cmp
push
push
fmul
push
adc
hlt
sub
xor
adc
adc
sub
pop
pop
jp
and
mov
rcrb
test
mov
incb
jl
adc
lea
cmpb
test
lea
aas
fmuls
adc
outsl
fld
mov
pop
and
movsl
mov
shrb
sbbb
cmpl
mov
clc
push
jne
fcomps
mov
imul
call
mov
lods
xchg
lcall
lock
adc
stos
mov
pop
test
or
jle
xchg
adc
pop
int
inc
stos
adc
cmpsb
lock
pop
sub
mov
push
shrl
dec
push
xchg
and
enter
dec
or
jge
inc
loopne
loopne
jo
xor
xchg
hlt
rclb
fs
pushf
pushf
mov
mov
aam
in
mov
call
sub
adc
xor
scas
jnp
pusha
or
sub
xor
push
or
mov
aad
mov
rcl
mov
enter
adc
push
aas
int3
call
inc
pop
dec
push
rcrb
pop
push
nop
push
push
adc
ljmp
lods
insl
and
into
inc
push
lsl
lock
pop
imul
or
or
dec
arpl
gs
mov
add
lret
int
xchg
add
es
or
cld
adc
sahf
inc
push
xchg
cmp
push
adc
outsl
xchg
mov
jl
jno
js
xchg
call
jb
jae
repnz
and
mov
enter
movsb
jns
inc
sahf
repz
cwtl
adc
in
inc
cs
pop
adc
pop
icebp
xor
mov
mov
cmp
xor
test
jno
addl
pop
adc
call
dec
xchg
add
lret
inc
or
jb
jne
cmp
aaa
imul
sbb
mov
push
pop
or
mov
mov
mov
add
mov
scas
outsb
cmp
arpl
adc
xchg
xchg
sbb
sub
insb
pop
pop
fwait
or
imul
push
pop
inc
loop
sub
test
inc
mov
cmpsb
push
mov
jnp
rolb
add
mov
jle
xchg
pushf
nop
and
mov
sbb
sub
mov
out
cmc
push
jge
scas
xchg
cltd
add
ds
push
and
pop
movsl
lods
ret
pop
mov
sbb
leave
dec
sbb
sbb
loope
enter
and
ds
mov
hlt
lea
subb
jo
sub
setns
cmpb
mov
sub
mov
mov
adc
dec
and
push
icebp
adc
je
push
xchg
xchg
pop
lock
inc
stc
cli
inc
scas
inc
cmp
or
in
mov
pop
dec
add
push
sbb
mov
je
jne
mov
sti
or
inc
cmpsb
sub
dec
lods
mov
subl
mov
adc
addb
sub
dec
clc
jo
jmp
aas
lret
xchg
dec
push
call
rcrb
and
push
mov
inc
add
imul
push
in
push
in
cmp
pop
in
pop
sub
push
lods
cmp
mov
addr16
lret
add
enter
enter
movsl
ja
adc
mov
push
add
sbb
repnz
dec
les
rcll
insl
jns
js
push
push
push
and
lcall
pusha
popf
push
js
add
dec
ja
addb
jge
mov
inc
push
sub
popa
mov
push
fists
lret
add
dec
and
push
test
cmpb
dec
mov
sbb
push
mov
mov
add
cmp
xor
sub
imul
push
xchg
and
pop
cmp
adc
movsb
mov
jl
adc
cmp
add
cli
or
push
mov
add
push
mov
pop
adc
stos
sub
inc
pop
inc
movb
sub
enter
adc
mov
sub
adc
subl
pop
pop
cmp
cmp
inc
repnz
enter
inc
les
stos
xchg
popa
sbb
nop
cmpsl
sbbb
fnsave
movsb
outsl
sbb
or
sub
mov
stos
inc
or
stos
mov
or
xchg
push
clc
or
inc
outsl
fwait
ss
add
cmp
jae
pop
out
pop
mov
test
ss
mov
sbb
cld
in
cmp
sub
push
push
dec
pop
clc
add
je
repnz
sbb
pop
lods
dec
cmp
pop
sub
loopne
xchg
or
mov
je
add
das
inc
mov
call
inc
add
cmp
jl
pop
std
inc
add
sti
cs
mov
or
sbbl
push
popf
test
xchg
gs
fwait
adc
push
xchg
mov
sub
mov
add
push
push
nop
cld
sub
je
mov
xor
inc
xor
mov
fwait
or
adc
or
pop
xlat
int
test
adc
mov
mov
fildll
push
pop
or
add
imul
push
ret
in
icebp
push
ret
rcrl
add
mov
in
add
dec
adc
inc
cld
add
mov
and
or
inc
sbb
mov
inc
add
push
mov
mov
loop,pt
js
pushf
cmp
push
cmpb
inc
fucom
xchg
adc
rolb
enter
negl
and
daa
add
sub
mov
add
sti
and
adc
mov
icebp
test
or
loopne
mov
pop
je
test
daa
shrl
dec
or
pop
xor
pop
clc
mov
sarb
xchg
ljmp
fcoms
adc
test
outsb
pop
or
test
int
add
lea
lock
inc
pushf
jge
stos
nop
ja
into
sbb
andps
es
sahf
or
adc
push
ret
adc
scas
cwtl
icebp
cmp
jecxz
lock
adc
mov
mov
daa
sbb
push
loope
sbb
jno
or
int3
mov
xlat
jbe
dec
or
or
popl
cwtl
pushf
dec
test
mov
popf
imul
fsubr
insl
lods
addb
insb
add
lock
fdiv
sbb
sub
mov
mov
mov
inc
hlt
adc
fisttpll
out
dec
cs
imul
sub
mov
add
or
in
push
or
pop
scas
fcompl
inc
adc
and
cmpsb
shr
mov
sbb
arpl
push
ja
sti
inc
push
lret
sub
cld
scas
sub
cmp
add
cltd
hlt
das
inc
daa
pop
mov
add
inc
push
or
push
mov
add
leave
xchg
sub
jge
icebp
les
pop
mov
mov
add
in
add
push
sub
inc
push
push
call
pop
mov
push
jnp
push
adc
inc
dec
jae
cmp
adc
adc
adc
xorb
and
lds
inc
sbb
ss
dec
sbb
lcall
mov
dec
orl
xchg
aam
xchg
dec
fisubrs
or
adc
inc
inc
and
add
add
dec
lcall
inc
mov
xchg
inc
add
xchg
sbb
add
in
int
jmp
xchg
mov
lcall
and
and
inc
push
rolb
shll
push
nop
lret
add
movsb
xor
or
xchg
add
add
test
inc
sub
sub
xor
xor
xor
cmp
xchg
add
test
inc
sub
dec
pcmpgtb
dec
sub
adc
or
sub
adc
fimull
xchg
and
mov
cs
mov
and
xchg
xor
int3
enter
rcl
div
sbb
cwtl
pop
add
dec
mov
or
mov
and
fdivrs
push
movl
sbb
jmp
pop
mov
pop
arpl
push
jns
mov
or
lea
cmc
sbb
ss
lods
je
push
mov
push
sbb
icebp
mov
sbb
test
xchg
int
sbb
lcall
int3
stos
movsb
mov
mov
lcall
in
xchg
sbb
pop
jbe
insb
push
enter
fldenv
fs
dec
sbb
mov
lcall
mov
or
movsb
sbb
xor
push
and
dec
lcall
mov
lcall
or
movsb
sbb
or
pop
push
inc
xchg
aas
sub
es
sub
add
nop
mov
add
add
lret
and
in
imul
xor
ds
orb
jecxz
cli
pop
ret
clc
cwtl
jae
add
add
jno
dec
and
add
and
push
scas
mov
js
jmp
sbb
jne
orl
cmp
push
cld
sbb
sub
int
and
jbe
mov
mov
mov
daa
dec
sbb
sbb
and
and
add
push
cmp
mov
int3
add
outsl
xor
pop
inc
stos
or
adc
mov
in
xor
leave
add
mov
or
leave
and
add
cwtl
inc
cmpsb
push
cld
sub
adc
xor
pop
call
movsb
xchg
dec
sub
sub
or
and
subl
sbb
or
inc
push
sbb
cli
sbb
mov
push
xchg
orb
dec
es
aam
push
push
push
cmpl
or
mov
ja
sub
fs
loope
push
out
push
sbb
pop
or
sub
and
loopne
inc
imul
jmp
push
call
iret
pushfw
xchg
clc
pop
push
mov
xchg
mov
test
lea
sbb
ficoms
sub
and
inc
pop
lock
pop
mov
mov
sbb
inc
sahf
in
push
add
and
sub
leave
jae
sbb
cmp
adc
ret
jno
dec
xor
push
xchg
or
xchg
sbb
or
add
inc
cmc
mov
push
or
lcall
add
insb
or
add
mov
xorl
pushf
and
js
mov
je
pop
lahf
orb
cltd
push
pop
dec
add
and
call
sbb
cmp
je
adc
clc
add
pop
cmc
sub
sbb
lcall
sbb
push
push
push
nop
push
icebp
add
fildl
lea
push
add
lods
cld
aad
je
mov
cmp
sbb
lods
orb
sub
sbb
dec
xor
mov
cmovle
mov
movsb
es
jg
and
icebp
xor
call
lock
jmp
fs
jp
add
insb
test
dec
pusha
sub
pop
int
daa
bound
dec
push
dec
aam
sub
orb
push
xlat
lods
call
aam
push
loopne
cmp
das
sbb
mov
shr
scas
dec
in
push
jle
push
adc
inc
in
js
xchg
sarb
cmp
ds
lods
cmp
and
int
sub
adc
mov
movsl
cmp
mov
jp
mov
dec
fsubl
inc
lret
cmp
pop
mov
ficoms
movsb
pop
ret
pop
add
sbb
insb
mov
xchg
push
iret
pop
ret
inc
or
add
or
and
sub
ret
mov
cmpb
popa
mov
or
xchg
fimull
xor
adc
jne
lea
insb
cld
out
lea
sbb
mov
lea
movsl
inc
jbe
orl
pop
leave
pop
adc
lods
mov
push
push
cmp
mov
push
fcomip
sub
rolb
mov
lds
jge
jae
push
add
sti
jmp
mov
adc
inc
or
enter
call
inc
mov
js
push
jbe
and
adc
jo
test
shlb
mov
scas
or
in
shrb
int
xchg
shr
or
xchg
push
add
xchg
xchg
je
add
jecxz
mov
dec
add
stc
add
in
rclb
cmp
xchg
push
lret
push
popa
push
pushf
jo
xchg
loopne
and
or
dec
and
or
and
cmpl
jmp
xchg
test
jnp
test
mov
mov
insl
sbb
roll
xchg
or
dec
push
pop
and
adcl
ljmp
and
test
in
inc
jmp
es
xchg
dec
pop
lds
mov
pushf
pop
es
pop
lds
mov
dec
mov
push
cvttps2pi
dec
adc
loop
mov
xchg
sbb
adc
and
addb
insb
add
es
jle
dec
and
jmp
jns
test
mov
mov
jle
loope
and
sbb
jp
jl
push
ja
and
movsl
dec
fidivs
fwait
pop
sbb
adc
roll
pop
and
pop
jae
xor
js
push
je
add
je
push
cld
sub
jo
sbb
inc
rorb
adc
movsb
xor
jae
iret
add
xor
or
dec
and
xchg
and
cmp
lods
andb
sub
imul
js
push
pop
cli
mov
pop
rcr
movsl
sub
sbb
push
lods
push
jno
mov
add
shrl
jb
mov
dec
sbb
fsubl
daa
adc
pop
xor
pusha
shl
sbb
cmp
cli
xchg
call
cmp
xchg
in
cmp
xchg
inc
sbb
popf
and
sbb
push
push
sub
or
nop
xchg
xchg
push
fcmovnb
push
push
mov
dec
sbb
in
or
inc
imul
cmp
sti
sahf
fldt
push
mov
rcr
jns
cmp
filds
adcl
fs
lret
out
adcl
jns
fs
add
fs
pusha
xor
add
push
fiaddl
pusha
pop
aas
push
fdivrl
push
insl
mov
data16
call
pop
ret
jmp
cmp
jp
movsl
adc
dec
aaa
dec
xor
pop
lea
jo
adc
pop
mov
mov
pop
iret
cmp
dec
insb
push
add
or
mov
push
jmp
jmp
adc
dec
mov
push
imul
add
and
mov
insb
std
push
mov
dec
or
push
mov
or
mov
aad
dec
adc
imul
repz
cmp
xor
mov
push
stos
dec
pop
and
rclb
or
xor
or
mov
and
sbb
jno
lods
int
ret
je
cmp
out
clc
add
in
jl
mov
ds
mov
dec
popf
fisubl
push
sbb
xchg
mov
cld
adc
jns
rcll
sahf
sbb
mov
adc
add
inc
xchg
or
add
add
and
add
push
push
adc
mov
sub
aaa
pop
adc
dec
mov
adc
fbstp
lea
push
daa
push
jmp
add
int3
pusha
mov
dec
mov
js
divl
add
pop
ret
addr16
insb
sbb
push
adc
dec
adc
shll
adc
nop
call
xchg
test
or
js
je
cmpb
cmp
mov
jns
jmp
ret
sahf
add
add
xor
dec
inc
dec
sub
add
es
xor
xor
les
enter
add
jp
mov
pop
add
adc
jge
cmp
xchg
cmpsb
cmp
xchg
les
mov
fisttpl
or
sbb
xchg
int3
adc
mov
dec
add
sub
pusha
lods
adc
xchg
shrl
pop
jo
fwait
adc
push
pop
dec
add
js
loope
cmp
scas
or
test
add
nop
out
nop
add
inc
loop
inc
aam
les
aam
dec
rcll
sbb
push
cmpsb
jmp
mov
mov
and
add
push
mov
cmpsl
ret
pop
xor
imull
and
xor
mov
mov
pop
andl
adc
nop
cmp
dec
roll
inc
aam
inc
cmc
dec
faddl
adc
mov
movsl
mov
xor
and
push
fbstp
out
mov
loop
cmpsl
push
cmpl
popf
rorb
js
and
xor
pusha
mov
adc
call
add
mov
jno
dec
lods
and
aam
loopne
aad
mov
add
shlb
adc
and
sysenter
jle
sub
mov
jo
out
push
adc
mov
push
dec
or
add
mov
call
mov
add
mov
jecxz
sbb
andl
and
sahf
cmp
add
mov
or
outsb
adc
or
rclb
sbb
iret
cmp
loope
mov
movsb
jno
add
mov
xchg
jge
add
sub
cwtl
data16
ret
sub
fadds
add
mov
pop
mov
dec
push
imul
mov
out
sbbl
add
loop
cmp
adc
mov
enter
arpl
dec
nop
mov
jae
inc
je
outsb
addl
push
push
inc
dec
xor
adc
call
adcb
mov
decl
out
add
pushf
cmp
or
int3
mov
in
leave
std
add
jo
sub
addr16
add
stos
add
adc
pusha
push
test
or
adc
adc
adc
pusha
jb
lods
repnz
push
adc
add
push
nop
cmp
fs
data16
dec
cs
push
je
and
test
mov
loope
sahf
out
lock
push
inc
jg
pop
loop
cs
andl
adc
cmp
add
inc
adc
and
invlpg
add
mov
nop
out
outsl
nop
pop
nop
mov
imul
cltd
fs
adc
add
jne
mov
daa
inc
push
dec
insb
sbb
jae
jnp
shlb
xor
jg
adc
xchg
xor
popf
xchg
pop
push
movsb
je
jo
inc
cmpsl
pop
fstpt
add
cli
pop
adc
pop
nop
sbb
mov
xor
adc
aas
dec
jp
stos
cmp
pusha
outsb
xchg
dec
mov
pop
subb
leave
adc
cmpsb
outsb
adc
or
or
xor
lods
jns
xchg
inc
scas
add
js
es
and
pop
cmp
add
jg
je
jo
enter
or
inc
xor
cvttps2pi
movsb
sub
je
mov
test
adc
enter
jp
adc
mov
cmpl
out
adc
wrmsr
add
dec
hlt
pop
nop
jl
xchg
xlat
xlat
sub
or
dec
mov
inc
repnz
adc
je
push
mov
aaa
and
psubusw
inc
add
test
sub
jo
or
sbb
push
sbb
dec
into
mov
lea
and
mov
push
or
or
xchg
push
imul
mov
sbb
jb
cmpb
movsb
push
sub
add
negb
mov
adc
dec
nop
jecxz
adc
adc
and
xchg
addl
sub
xor
mov
or
addl
add
stos
mov
insb
add
in
insl
leave
pop
imul
fstl
mov
add
ljmp
lret
mov
cmp
xor
imul
das
add
cmp
sbb
jno
mov
pop
mov
test
dec
and
test
cli
push
jo
pop
mov
insb
mov
mov
dec
cld
movsl
pop
mov
gs
adc
xor
dec
mov
sub
jne
in
inc
rcl
mov
add
pop
add
inc
orl
nop
pushf
mov
sbb
mov
sbb
idivb
and
shrl
std
jmp
xchg
cmpsb
xchg
dec
add
mov
xchg
es
sub
inc
fs
or
sbb
push
pop
pop
roll
mov
xor
sub
xor
push
inc
inc
out
cltd
add
push
mov
roll
fisttpl
adc
or
jns
cmc
mov
inc
and
sbb
pop
push
pop
rorb
pushf
sub
pop
push
aas
leave
andl
lahf
fldcw
cmc
jae
mov
xor
andb
mov
and
xor
faddl
and
push
gs
sub
and
mov
mov
push
push
mov
std
fistl
xchg
outsb
outsb
mov
xchg
outsb
in
add
mov
rorl
or
push
jecxz
sti
push
push
nop
adc
aam
add
mov
jne
lods
fimull
gs
dec
add
cmpsl
rolb
in
xor
pop
xor
sbb
repz
and
stc
push
pop
repz
add
hlt
add
clc
mov
jo
xchg
popa
cmc
or
mov
mov
sbb
and
pop
repz
sub
je
lock
pop
or
mov
jo
adc
pop
and
sbb
or
cmp
xor
gs
cmp
jbe
or
push
inc
enter
fisttpl
and
sbb
sbb
cwtl
jp
add
sbb
push
push
loope
in
and
inc
leave
into
inc
loope
xor
addl
jo
dec
test
or
jecxz
sub
add
and
roll
add
cmpl
and
xor
cmp
add
test
push
mull
push
idivl
call
pop
mov
pop
xor
mov
mov
push
out
mov
or
loope
cli
xor
add
imul
inc
lods
dec
mov
add
daa
sub
pusha
data16
cmp
je
push
jg
cmp
inc
dec
mov
testl
xor
fimuls
adc
fcomp
fs
mov
add
je
lods
push
jb
sub
and
sbb
push
add
lods
mov
bound
sbb
ret
cmp
jae
iret
nop
or
cmp
mov
mov
and
fildll
pusha
sbb
and
mov
inc
pop
xor
mov
popa
jb
xchg
cmp
leave
or
popa
inc
fstl
lcall
sub
mov
add
adc
movsb
push
leave
and
xorb
xor
inc
add
push
and
cmpsl
inc
popa
repnz
aam
aaa
call
pop
mov
fucomi
xor
test
mov
jnp
push
push
fwait
sbb
mov
fiadds
lods
xchg
sahf
cmpsl
or
adc
sbb
inc
jae
notl
xor
dec
rclb
and
test
sbb
in
add
dec
cwtl
dec
pushf
adc
sbbb
cmc
adc
jns
xor
push
push
sbb
add
xchg
xchg
add
outsl
push
push
mov
dec
pushf
xchg
dec
dec
mov
cltd
xchg
or
inc
fimull
dec
outsb
jle
add
adc
aaa
pusha
pushf
setge
jno
xchg
or
inc
or
in
test
lea
adc
inc
loop
adc
sti
jnp
sbb
in
mov
cmp
cmpsb
lret
ret
add
inc
inc
push
jns
mov
mov
rol
fcmovnb
and
cmp
inc
dec
inc
and
adc
inc
es
cs
add
jmp
fs
xchg
jp
sub
add
aam
fisttps
inc
pop
test
pushf
inc
add
inc
mov
push
mov
insb
leave
push
call
jge
jg
ret
adc
mov
push
fcoml
sbb
add
inc
xchg
lea
ret
push
stos
add
mov
cmc
xorb
int3
in
pop
sbb
jno
mov
push
mov
mov
add
mov
add
pop
mov
mov
mov
aam
ja
jno
mov
pop
repnz
dec
xor
test
jg
inc
les
inc
add
lds
bound
push
xchg
inc
jecxz
mov
sub
or
outsb
loope
fadds
nop
or
push
jo
sti
and
adc
scas
inc
fsubrs
push
cmp
jae
rcrb
cmp
sub
lret
or
xor
jns
sub
mov
into
or
js
adc
jne
pop
push
or
xchg
in
or
xchg
xchg
add
imul
push
lahf
sub
and
ret
sbb
int3
ds
stos
or
adc
sub
aaa
jns
js
dec
pop
pop
or
push
add
add
mov
jae
sti
pop
leave
adc
mov
imul
pop
test
and
enter
add
shlb
sub
lods
enter
mov
inc
aam
add
gs
add
rcr
fnstcw
xor
sbbb
aas
adc
sbb
xor
sbbb
xchg
sub
dec
outsb
jle
dec
dec
jo
sbb
fists
mov
stos
push
cmc
iret
push
mov
push
push
cmp
sub
jmp
orb
loopne
jo
push
movsb
jb
shrl
pop
aaa
jb
xlat
test
jecxz
mov
lock
je
addr16
js
in
ljmp
adc
mov
lret
mov
jb
fs
fbld
xchg
add
fdivrp
cmp
push
arpl
stc
jbe
jne
adc
xor
add
popa
pushf
and
xchg
cwtl
ret
pop
add
sub
ret
and
or
gs
sbb
pop
mov
lea
inc
test
ret
scas
mov
mov
fsts
xchg
das
add
add
xchg
lcall
testb
mov
mov
fildll
es
adc
mov
and
adc
inc
std
adc
jns
cmp
hlt
jle
push
xchg
add
mov
repnz
lret
adc
inc
mov
test
rorl
mov
mov
xchg
adc
lahf
cld
add
mov
lahf
ja
sub
js
lods
sub
jae
shrb
stos
repnz
fcomps
mov
inc
int
xor
add
sub
push
push
mov
call
movsl
add
add
shl
stc
lcall
leave
dec
push
and
movsl
xchg
or
movsb
adc
and
add
sbb
sub
int
add
or
fisttpll
lea
jno
add
int3
cmp
outsb
sub
pop
sub
mov
xor
xor
dec
mov
stos
imul
pop
xor
pop
add
xchg
pop
cmp
add
in
sbb
mov
js
or
push
pop
jl
andb
xchg
negl
and
mov
es
imul
push
pop
xchg
sbbb
cmp
inc
loopne
fs
scas
or
nop
insl
inc
add
adc
add
dec
lods
jns
cwtl
xorb
dec
sti
push
pop
inc
dec
pop
adc
adc
mov
and
insb
push
sbb
and
orb
fildl
ljmp
xchg
test
je
or
pop
insb
mov
movsb
add
mov
movsb
or
int3
pop
sbb
xchg
dec
push
or
or
add
push
and
add
mov
rorb
test
cwtl
and
mov
adc
es
push
sbb
jg,pn
push
and
or
push
pop
lea
add
loope
or
imul
xchg
add
iret
nop
sub
mov
pop
sbbb
daa
adc
in
xor
adc
add
fildll
push
cmp
cmp
inc
test
dec
stc
seto
mov
push
cmp
sub
fistpll
outsb
xchg
inc
add
ret
or
push
push
or
testb
lods
mov
dec
push
iret
int3
iret
fwait
sub
adc
xor
inc
inc
mov
xchg
or
loope
sbb
mov
mov
cld
cmp
and
repz
mov
push
call
testl
add
and
mov
aad
jbe
push
jb
jle
push
adc
gs
cmp
push
xchg
jno
sub
mov
out
mov
add
pminsw
mov
cmp
or
test
les
xor
in
nop
mov
add
shrl
mov
lea
xchg
and
xchg
mov
scas
roll
cmp
add
es
test
inc
cs
mov
or
or
pushf
sbb
fs
insb
lahf
push
and
movsb
adc
pop
push
hlt
aad
mov
jns
add
in
push
jne
cmp
in
movsl
cmp
xchg
push
mov
mov
dec
mov
int3
pop
lcall
xor
push
sub
and
adc
pop
mov
test
cmpsl
decb
sti
dec
cmpsl
sarb
das
dec
add
dec
push
or
ret
adc
sbb
rorl
cmp
inc
add
pop
sbb
xchg
pop
and
movsb
jb
xor
inc
lret
lcall
xor
js
dec
xchg
add
clc
jae
xchg
xchg
mov
fwait
jae
jne
mov
mov
pop
sub
adc
add
clc
xchg
mov
call
adc
leave
insb
loopne
cmc
push
jecxz
mov
add
and
orb
mov
push
inc
sbb
push
xor
cmp
mov
shlb
lea
jo
repnz
sbb
je
pop
add
xchg
xchg
push
cmp
mov
insb
xor
sub
je
push
jne
lea
cmp
sbb
add
je
dec
fmuls
testl
pop
enter
push
aam
aad
sahf
mov
mov
addb
push
add
push
xor
mov
pop
mov
pop
movsl
lock
mov
inc
sbb
lods
dec
loop
testl
xor
jmp
jle
jb
sbb
popa
mov
dec
ret
pop
test
jle
adc
cmp
inc
and
jmp
mov
adc
sbb
adc
sub
add
and
xor
aad
push
add
sub
fcompl
sbb
mov
pusha
clc
or
dec
sbb
add
addl
rcll
push
shlb
pop
sbb
iret
mov
cmp
dec
fs
sbb
pop
dec
cwtl
cmp
loopne
dec
push
cmpsl
lret
stc
decl
inc
adc
cli
inc
push
add
out
pop
lcall
or
std
cmp
and
mov
dec
jo
cmp
push
aaa
outsl
nop
mov
mov
push
cwtl
xor
mov
dec
sbb
ss
cwtl
lea
popa
inc
sbb
sub
mov
jno
push
mov
sbb
and
add
inc
pusha
test
mov
inc
lahf
xor
push
inc
dec
push
shlb
pushf
cs
fcmove
mov
mov
outsb
adc
sbb
push
jl
mov
jecxz
sbb
test
jo
sub
jo
xor
shr
lock
or
rorl
pushf
fs
sub
push
rclb
hlt
adc
jb
push
sbb
int3
mov
mov
mov
jecxz
mov
mov
add
push
push
add
lock
and
sbb
inc
cmp
xor
dec
cltd
lcall
outsb
mov
into
inc
xor
pop
roll
sbbl
loop
adc
jno
sub
push
je
pop
or
ret
punpckhbw
sar
pop
xor
rcll
leave
test
pop
call
push
test
ret
sbb
lea
mov
adc
pop
mov
addr16
xchg
xchg
pop
in
and
xchg
pop
pusha
dec
pusha
jne
lret
push
xor
pop
adc
and
enter
leave
ret
xor
mov
push
push
dec
push
and
out
push
pop
movl
and
mov
sbb
adc
inc
mov
out
pop
or
inc
inc
add
dec
adc
push
cmpb
or
ficompl
mov
jb
sbb
sti
push
dec
lea
dec
pop
and
mov
cmc
xor
sub
daa
insl
pop
jb
lods
outsl
push
sub
leave
sbb
and
xchg
pop
cmpl
and
sub
inc
push
xor
xchg
cmp
or
andb
and
pop
cmpsb
sbb
movl
xor
inc
aad
mov
in
mov
jl
jp
and
fs
movsb
add
mov
test
lcall
pusha
sbb
sub
out
fs
insb
icebp
dec
ret
pop
sub
inc
add
inc
cmpsb
or
pop
adc
and
push
and
cmp
in
push
sub
adc
imul
enter
mov
sub
add
push
ret
insb
pop
addl
xor
aam
lods
xchg
pusha
dec
inc
shrb
sub
mov
insl
iret
push
nop
add
lods
enter
inc
mov
fisubs
les
dec
nop
jl
xor
les
test
shlb
cltd
pop
lea
in
xlat
jo
flds
xor
aaa
add
sub
xchg
test
push
fucomp
dec
test
push
adc
and
addr16
inc
push
dec
push
adc
sbb
add
popa
push
out
xchg
adc
sub
adc
lods
xor
and
hlt
add
cmp
scas
fs
mov
cs
inc
xor
movsb
push
lds
add
loope
insl
add
into
adc
add
lock
shr
ret
lock
push
sub
adc
xor
add
sbb
imul
dec
or
add
xchg
or
jnp
mov
incl
cli
sub
sbb
clc
adc
cmpsb
pop
ret
insl
cmp
sub
xchg
cmp
je
loopne
mov
bnd
inc
pop
nop
mov
test
adc
sub
sbb
pop
pop
nop
scas
push
or
xorl
adc
add
mov
mov
test
cltd
cmc
out
xchg
int3
je
movsl
popa
or
bound
rol
lahf
dec
aaa
xchg
insl
or
pop
sbb
adc
or
or
mov
adc
or
pop
test
xor
or
stos
dec
adc
test
add
pop
iret
stos
push
rolb
rcrl
sbb
mov
mov
inc
sub
add
sbb
push
add
sti
pshufw
dec
aaa
xlat
add
andl
mov
cmp
repnz
push
js
test
sub
test
mov
les
jge
jp
test
cld
pushf
sbb
pop
arpl
lods
or
cwtl
clc
scas
push
mov
xchg
rolb
push
adc
imul
fldenv
sbb
pop
int
jb
movsl
pop
js,pt
push
and
and
sub
adc
push
leave
add
shll
mov
inc
cmp
or
and
xor
pop
adc
enter
push
sub
and
lcall
lea
jp
test
jne
mov
pop
cmp
cmpsl
pop
mov
sbb
in
hlt
aam
xchg
out
dec
xchg
adcb
imul
ja
mov
insl
sbb
ret
mov
push
pushf
psubusw
sbb
sub
lds
and
push
push
lods
inc
add
fistps
mov
adc
rcrb
push
xor
mov
sbb
mov
push
push
nop
adc
sti
mov
inc
add
mov
cmc
pop
push
cmp
pushf
pushf
and
cmpsl
nop
add
mov
inc
rcll
and
and
dec
add
or
dec
in
sbb
mulb
movsb
xchg
fimuls
repnz
cmpb
insb
cs
sbb
or
xchg
or
xor
inc
ret
adc
leave
jae
test
es
and
dec
push
es
fs
popa
add
inc
pop
leave
xor
and
and
dec
imul
pushl
lods
push
xchg
add
push
inc
and
lahf
clc
push
xchg
or
adc
fiaddl
push
rcrb
test
lea
inc
std
add
or
daa
in
add
lds
jo
mov
inc
sub
daa
aam
add
mov
mov
push
test
cs
dec
sbb
pop
sub
xor
cmpsl
cmp
movsl
dec
arpl
add
sar
push
loope
jo
adc
xchg
mov
das
les
jns
mov
pop
add
push
push
xor
in
push
inc
pop
push
add
xchg
add
call
imul
inc
adc
or
mov
shrb
das
and
inc
mov
insb
aam
ror
shlb
fmull
pusha
aam
xchg
add
add
push
fadds
repnz
push
push
sahf
xchg
adc
subb
mov
incl
add
add
jmp
in
or
imul
aad
xchg
xchg
xchg
or
adc
inc
call
adc
mov
cmp
sub
insl
std
mov
pop
xchg
push
push
xor
push
mov
adc
and
or
push
mov
incl
cmp
dec
pop
inc
or
dec
push
add
dec
test
loop
cwtl
push
test
or
ret
push
mov
loopne
push
pop
jb
and
insl
mov
repz
xor
stos
mov
push
push
js
imul
xchg
cmpsb
adc
sub
andb
cmp
push
sub
repnz
and
pusha
mov
xchg
inc
cs
fidivl
jmp
aad
pusha
or
dec
sahf
or
or
dec
sahf
stos
or
or
movsb
or
xor
and
xchg
fmull
sub
adc
adc
les
xor
jl
pusha
popa
add
aad
test
rcll
jnp
popf
push
nop
adc
lret
adc
mov
cs
sub
insl
xchg
mov
adc
xchg
push
cmp
xchg
mov
call
xchg
push
xchg
lret
cld
push
xchg
sbb
add
repz
imul
sub
fcomps
xchg
fcom
lea
xor
sbb
xchg
or
insl
xchg
sbb
out
sbb
test
add
add
adc
and
jb
push
add
leave
sbbb
es
xchg
and
push
pusha
and
mov
enter
and
and
andb
es
faddl
enter
dec
sub
enter
fisttpll
sub
cmp
aad
in
fldenv
test
adc
hlt
test
pop
xor
xor
mov
jbe
sub
dec
aam
cwtl
int3
dec
shll
aam
and
and
rol
and
cmpsl
mov
adc
dec
inc
rorl
push
jl
sub
and
xor
in
cmpsb
pop
dec
mov
cmp
jge
add
or
jl
rol
popa
add
or
mov
loop
addr16
and
push
add
fs
xor
jmp
sbb
mov
mov
push
or
and
sbb
adc
dec
cmp
sub
stos
insb
pop
cmp
sub
cmp
jo
adc
add
mov
push
inc
pop
xor
inc
imul
push
mov
in
aas
sahf
outsb
push
addl
inc
sahf
xchg
inc
cld
inc
fadds
in
sbb
bound
inc
int
hlt
or
inc
xchg
out
fstl
adc
test
mov
inc
les
and
es
jmp
out
mov
dec
and
ret
jb
sbb
fisubrl
or
stos
addr16
out
mov
mov
push
shlb
repnz
inc
fadds
iret
add
mov
cmp
aas
lods
ds
insl
dec
push
dec
cmp
xchg
cmp
cmp
push
cmp
mov
cmp
mov
xchg
xchg
scas
push
out
inc
jge
sub
outsl
sahf
inc
lea
std
push
adc
xchg
xchg
test
cltd
sarb
gs
icebp
loop
ror
in
cmpsl
adc
sub
or
push
rolb
push
sbb
dec
push
jg
cs
inc
cmp
pusha
call
xchg
add
cltd
in
adcl
inc
mov
mov
dec
push
test
sub
push
iret
jl
imul
hlt
xchg
xor
or
sub
or
cmp
jb
enter
push
lods
enter
and
dec
push
mov
pop
jnp
push
inc
mov
xor
and
inc
pusha
popa
adc
xchg
or
inc
and
adc
testb
daa
ret
sbb
in
in
outsl
and
pop
test
pop
inc
jecxz
in
and
or
sbb
pop
add
or
jb
push
push
push
lds
add
push
mov
cli
cld
lock
movb
jo
scas
inc
mov
push
mov
inc
push
or
xor
xor
and
and
nop
pop
dec
dec
push
fcomps
sbb
fdivrs
sbbb
push
and
push
and
add
and
in
fmull
pusha
push
lret
dec
add
nop
pop
cmpb
mov
xchg
add
ds
fs
lock
pop
inc
add
add
pop
sub
and
add
xor
add
fmuls
inc
dec
cmpsb
in
and
or
cmp
mov
call
dec
loope
or
sbb
inc
repz
sbb
ret
or
subb
popf
fldl
push
mov
lret
lods
push
ret
sub
loop
jno
inc
fcoml
xchg
lds
push
cli
sbb
insb
popa
or
nop
outsb
popa
and
add
cld
sub
or
and
sub
adc
sahf
xchg
pusha
adc
adc
inc
push
data16
fdivrl
xchg
je
out
aam
mov
xor
dec
sbb
push
sub
push
cmpsb
xchg
cmp
add
sub
and
popa
or
jns
roll
enter
inc
xchg
inc
mov
xchg
add
test
lea
adc
fsub
sub
xor
in
rorb
lods
divb
xor
lret
clc
add
rcll
aam
mov
push
cltd
add
xchg
aad
lret
push
mov
push
sbb
mov
sub
sbb
inc
xor
or
add
push
hlt
adc
imul
enter
imul
xchg
mov
add
int3
add
adc
xchg
orb
fs
rolb
inc
ss
pop
pushf
sbb
jle
leave
js,pn
enter
pop
inc
insl
lock
push
mov
mov
push
or
xchg
jo
xor
inc
and
adcb
push
test
rcrl
test
hlt
test
push
and
adc
cmpsl
cmp
dec
arpl
out
xor
jae
test
cli
mov
fdivs
pop
imul
js
lods
adc
sbb
mov
xchg
pop
dec
mov
xor
xchg
add
dec
pop
jae
mov
fldenv
enter
stos
and
dec
xchg
loopne
inc
add
jl
lcall
add
nop
out
jno
int3
out
sbb
push
sub
xchg
xor
out
push
add
ret
je
inc
lcall
ret
lret
jno
sub
les
stos
or
mov
jge
pop
push
pusha
mov
cs
jb
sbb
jne
push
in
cmp
pop
pop
push
and
and
fcomp
sub
push
push
lods
and
sbb
adc
push
cmp
jae
call
inc
clc
cli
push
dec
mov
sbb
mov
pop
cmp
jg
jae
mov
add
mov
pop
inc
jne
mov
sarl
push
push
push
leave
and
pop
jge
popa
test
push
sbb
mov
lods
pop
adc
xor
addb
xchg
decb
sub
add
ret
dec
inc
add
xlat
mov
or
add
cltd
pop
add
add
jl
or
cmpsb
pop
callw
fsubs
or
jle
jmp
push
adc
xor
cmp
mov
incb
push
push
sbb
jp
mov
inc
dec
jns
push
mov
out
sbb
sbb
inc
and
cmp
lret
sub
add
ret
push
push
or
jbe
shlb
sub
pop
pop
or
repz
fnstcw
jl
push
inc
push
sar
test
ret
add
dec
shrb
sbb
fbld
or
adc
pop
imul
lods
mov
sarl
stos
add
or
pop
test
pop
pushf
rcl
and
rol
inc
sub
movsl
pop
in
addl
aaa
inc
or
jae
and
hlt
adc
leave
jae
xor
push
lods
test
adc
dec
cmp
and
add
pop
adc
sub
inc
and
repnz
mov
xchg
lea
sbb
jmp
pop
dec
sbb
sbb
push
mov
lods
dec
xchg
xchg
cmp
and
movsl
shll
sub
mov
mov
pop
test
notl
mov
pop
sub
and
inc
sub
cmpsb
inc
sbb
sbb
sbb
test
xor
cmpsb
and
ret
test
mov
dec
push
mov
sbb
pop
mov
cmp
adc
xor
cmp
lret
fmull
or
dec
insl
jp
das
mov
cmp
inc
bnd
inc
test
push
test
aaa
pop
rolb
sub
or
lcall
jge
or
jbe
or
cli
cltd
inc
xchg
addr16
cmpsb
and
pop
xchg
adc
xchg
inc
stos
fwait
jno
mov
or
es
bound
add
inc
test
int3
sub
lcall
mov
insl
test
addl
addb
dec
int
xor
push
add
or
adc
ja
inc
loopne
add
aas
in
mov
add
mov
ret
inc
add
add
std
adc
pop
in
pop
mov
mov
push
decl
mov
jnp
jae
mov
rorb
or
mov
mov
std
jl
aad
pop
inc
clc
jo
push
sti
std
incl
push
imul
xchg
xor
std
mov
mov
mov
xorl
push
mov
add
jbe
inc
add
pop
add
enter
es
test
in
or
mov
int3
and
pusha
icebp
or
adc
je
in
movsl
cmpsb
mov
dec
adc
adc
leave
pop
imul
loopne
add
das
pop
sbb
fistl
lea
loopne
pop
sti
add
adc
inc
or
nop
xchg
mov
dec
sub
push
add
mov
or
pop
push
pusha
push
rorl
add
insb
into
xchg
ss
pop
cmp
sub
pop
add
rorb
pop
adc
sub
or
psubusb
shrb
push
mov
mov
int3
cmp
mov
adc
push
out
pop
imul
cmp
mov
cmp
mov
sbb
dec
aaa
jg
pop
pushf
xor
adcb
push
pop
pop
cmp
addr16
ja
fwait
cmp
push
cs
sbb
insb
mov
sub
pop
push
or
cmp
lock
dec
mov
rcrl
mov
mov
inc
cmp
cmp
roll
adc
insb
and
inc
xchg
cld
sub
cmc
iret
adcb
inc
inc
inc
dec
xchg
mov
scas
std
ss
mov
adc
xchg
mov
pop
pop
test
popf
mov
dec
ficompl
adcl
push
sbb
inc
and
cmp
and
cmp
dec
dec
dec
jbe
in
rorl
lea
jo
mov
divl
inc
inc
out
test
add
and
dec
sar
fcompl
adc
pop
pop
ret
jge
xchg
adc
jnp
xor
mov
imul
je
mov
or
dec
mov
mov
jne
jno
aaa
mov
jne
nop
cmp
xor
jge
inc
shrb
cmpb
andl
cwtl
xor
mov
rolb
and
les
cmc
icebp
int
push
add
mov
and
es
jbe
jmp
sub
sbb
and
dec
or
and
das
mov
fildll
pop
sbb
add
or
pop
in
fiadds
in
cmp
pushf
add
add
sub
push
pop
js
sahf
xchg
sbbl
int3
push
jl
sub
add
inc
aam
cmp
ret
pop
lock
subl
sbb
push
pop
mov
in
test
jmp
daa
mov
ficomps
stc
testl
mov
or
adc
je
cmp
je
cmp
in
pop
xchg
std
je
cmp
je
push
jnp
in
lods
rorl
mov
loopne
push
fwait
mov
testl
insb
pop
shll
mov
loope
das
jmp
add
push
ret
push
mov
aas
jnp
inc
and
dec
inc
hlt
inc
and
mov
rcr
roll
or
lods
dec
adc
mov
xchg
cmpb
movsl
lods
rolb
jecxz
jne
add
icebp
cmp
je
adc
leave
call
ret
addb
pop
jbe
jbe
add
cwtl
pushf
add
xor
xor
jle
adc
jge
cmp
adc
inc
xchg
dec
pop
andb
mov
adc
jb
push
push
movsb
add
add
inc
and
add
mov
or
cmp
push
ds
stos
push
int3
xor
cmp
pop
das
popa
mov
rorb
inc
mov
aaa
inc
mov
rclb
or
fs
loopne
or
dec
cmpb
jmp
mov
and
in
mov
inc
and
sti
push
mov
jne
and
jo
xor
xor
and
mov
mov
mov
mov
dec
icebp
cmp
imul
loop
mov
in
dec
or
dec
mov
sbb
pop
and
cmp
push
xor
and
loopne
sub
mov
xor
sbb
sbb
and
push
dec
les
nop
push
lret
and
fwait
loop
cld
psubb
pop
cld
dec
dec
pop
nop
mov
add
or
je
and
add
lock
leave
pop
and
data16
lcall
and
dec
add
and
and
adc
enter
ret
jge
out
pop
pop
cmp
mov
sub
push
xchg
xorl
or
outsb
xorl
icebp
and
mov
add
push
arpl
inc
lods
ret
xor
lock
aad
and
mov
mov
shrl
push
jno
dec
adc
scas
and
orl
and
dec
xchg
scas
mov
rcll
int3
mov
inc
data16
inc
sub
or
fistpl
jae
adc
pop
inc
shrl
js
jbe
mov
out
fsts
stos
bound
dec
enter
dec
push
pop
lcall
adc
test
mov
adc
adc
inc
mov
mov
and
dec
call
lcall
push
xor
dec
in
or
xchg
xor
loopne
push
jno
xor
inc
test
xor
or
sub
rclb
sub
adc
dec
dec
and
push
inc
xchg
push
xchg
add
add
ret
inc
adcl
dec
or
pop
add
jns
dec
out
aas
jge
mov
push
aaa
into
xchg
xor
inc
cwtl
dec
jns
adc
movsl
test
fs
add
sarb
nop
and
shlb
in
jae
sbbl
fcoms
dec
gs
outsl
mov
shlb
jne
mov
add
cmc
add
mov
xchg
lea
enter
push
adc
enter
outsl
cmpl
mov
push
pop
mov
inc
push
push
insl
jno
pop
sbb
subl
xor
mov
inc
xchg
sub
aad
sbb
nop
xor
lahf
lahf
mov
or
cwtl
int
sbb
fistpll
pop
xor
dec
enter
in
lcall
adc
leave
mov
xchg
scas
sbb
jg
roll
push
lods
cmc
push
ja
mov
push
push
mov
ljmp
dec
pusha
push
push
leave
push
mov
scas
xchg
cmp
push
cmp
mov
xor
aad
insl
or
mov
mov
nop
in
sub
ret
inc
mov
pop
das
or
push
add
or
xor
mov
bound
push
cmpsb
adc
add
inc
sub
inc
dec
ljmp
and
pop
lea
mov
and
cmp
adc
jnp
aaa
lods
daa
sub
imul
xchg
pop
xor
xchg
lods
xchg
test
movsl
and
jl
lahf
mov
es
xor
je
lahf
jl
mov
add
sub
adc
cmpb
in
addl
push
lods
loop
adc
add
int3
xor
sub
and
xorb
add
or
lahf
adc
test
loopne
cwtl
cltd
stc
add
jge
add
and
sub
jo
ret
sbb
out
dec
leave
sub
sbb
sar
je
loope
xor
push
add
push
outsb
insb
test
mov
and
or
sub
push
jl
fisttpll
push
mov
cmpb
add
sub
inc
inc
clc
incl
cmp
jne
pop
and
inc
push
sbb
inc
pop
mov
icebp
add
inc
cmp
mov
xor
sub
xchg
mov
add
jbe
or
aam
xchg
add
scas
fsubrl
push
and
pushf
les
movsb
pop
daa
inc
add
xchg
lds
jecxz
sub
jmp
push
mov
mov
and
pop
cs
push
inc
inc
fs
out
lcall
push
push
jo
js
inc
das
imul
and
imul
lods
divl
pop
pop
mov
push
pop
inc
mov
aaa
mov
cmp
adc
pop
cmp
inc
sbb
mov
pushf
pop
adc
mov
push
inc
or
addr16
xor
lods
sbb
pop
sub
sub
bound
out
mov
stos
cli
or
mov
push
xor
mov
das
push
lea
test
push
mov
jmp
sub
push
sub
push
push
push
push
sti
cmp
mov
push
push
inc
add
mov
sbb
inc
adc
mov
dec
cmp
jnp
push
or
mov
add
addb
push
dec
lcall
sbb
jb
shr
or
mov
xlat
sbb
cmp
cmp
jns
je
push
outsb
inc
add
inc
shrb
je
sbb
test
push
pop
pop
dec
jg
movb
adc
jge
sub
das
xchg
xchg
and
dec
cmp
leave
enter
dec
mov
xchg
jg
mov
xchg
push
sub
add
pop
addr16
inc
pop
test
and
jb,pn
std
or
or
push
mov
lock
push
iret
aas
fwait
clc
cltd
testl
jb
addr16
mov
or
sbb
sbb
sbb
rol
popa
pop
add
int3
jecxz
or
insl
or
cmp
lret
cmp
test
mov
xlat
mov
mov
mov
cmp
jne
push
lds
cmpsb
push
mov
cmp
push
inc
lea
add
imul
ret
add
mov
aad
push
inc
arpl
mov
sarb
idivb
inc
test
pop
or
or
sub
pop
sub
das
and
sbbl
and
imul
fdivl
mov
dec
dec
ljmp
loop
mov
dec
push
enter
sbb
arpl
push
cmp
sahf
sar
xchg
add
dec
inc
cmpsb
xor
and
and
lcall
cmp
pop
push
mov
xchg
mov
dec
ss
sub
or
imul
add
dec
jo
shrb
mov
testl
add
or
push
xchg
push
sarb
cmp
or
movl
aad
mov
cmpsl
lods
mov
mov
jp
out
inc
xchg
dec
sub
and
jp
push
pop
jmp
push
add
adc
adc
mov
sub
inc
dec
sub
leave
jecxz
adc
add
movsl
push
dec
xchg
imul
js
push
xor
loope
dec
mov
and
test
mov
cmp
ficomps
flds
push
mov
aas
je
xor
dec
mov
push
jl
push
push
sbb
mov
fstl
mov
sub
inc
bound
into
jle
cmpsl
aas
addr16
pop
mov
sub
test
sbb
insl
mov
in
and
pop
sbb
xchg
or
add
ffree
stos
sub
push
inc
or
cmp
test
jo
ret
add
leave
sbb
es
pop
xchg
push
or
pop
dec
pop
or
add
add
inc
inc
xor
push
or
xor
dec
add
jmp
and
fisttpl
or
les
xor
pop
xchg
add
inc
or
pusha
cmp
test
cmp
add
mov
rol
cwtl
dec
ss
icebp
inc
arpl
cli
inc
xchg
cmp
dec
pop
addb
cmp
cmp
mov
iret
clc
jle
add
jg
add
add
adc
xlat
inc
cmpsl
mov
adc
leave
pop
cmpsl
mov
or
xchg
pusha
jl
mov
aaa
dec
rclb
push
scas
mov
lods
inc
pushf
sbbb
xchg
xor
and
push
sub
add
in
and
xor
cmp
inc
or
in
aas
dec
in
dec
push
jne
cmp
jb
sub
jmp
push
dec
mov
mov
pop
dec
push
jle
jle
setl
movzbl
mov
mov
adcb
push
push
push
or
mov
fiadds
sub
mov
hlt
dec
push
sbb
ljmp
pusha
add
mov
lcall
add
dec
push
pop
ret
push
push
rorl
mov
jo
cmp
lahf
jmp
push
cmp
xor
jg
jle
push
jne
or
cmp
bound
gs
iret
pop
jns,pt
test
xchg
adcl
push
inc
mov
sub
add
mov
push
mov
inc
inc
xchg
inc
pop
add
bound
clc
imul
dec
or
xor
push
pop
aas
loope
pop
gs
push
push
mov
mov
dec
sub
xchg
adc
add
or
scas
push
xchg
dec
mov
sbb
movl
mov
mov
or
ds
dec
imul
or
lds
xchg
fs
add
add
lret
mov
sbb
cmp
or
push
cmc
pop
cmpsb
push
loopne
ja
jo
add
mov
adc
mov
ret
add
mov
loopne
and
mov
and
sub
xor
xor
out
inc
dec
cmp
inc
adc
and
test
leave
inc
cmpsl
test
pop
or
aas
sub
fnstenv
cmp
add
pop
popa
add
jp
outsl
mov
adcl
sub
fstpl
sbb
adc
and
xorl
pop
or
lret
and
push
nop
faddl
adc
or
push
jo
ret
in
adc
sub
mov
xor
rorb
data16
pop
adc
dec
scas
mov
push
xor
mov
push
sub
inc
pop
xor
adc
add
lds
cmpsl
add
and
mov
mov
xor
xor
jbe
add
mov
xor
jmp
lret
add
push
and
fldcw
sbb
add
sub
icebp
push
cmovae
ret
jo
mov
inc
xchg
mov
jnp
fdivrl
inc
jo
xor
xchg
enter
or
xchg
mov
loopne
mov
push
xor
cmp
dec
inc
out
push
dec
and
or
or
insl
testl
lea
push
mov
inc
mov
add
repz
cmpb
jne
imul
cmp
mov
pop
mov
js
xor
add
inc
pop
adc
stc
sbb
add
push
leave
sbb
icebp
push
mov
fcmovu
add
mov
ret
sub
pushf
and
mov
add
fimuls
sbb
in
mov
les
push
sub
sbb
lret
adc
sub
and
or
cmp
enter
xor
sub
xchg
adc
sub
sub
fimuls
loopne
rcrb
inc
cmp
inc
and
mov
push
xor
subb
cld
xor
inc
test
dec
lret
xor
add
aaa
and
mov
add
aad
ljmp
push
xchg
stos
or
add
xchg
sub
nop
push
fsubrs
stos
outsl
pop
lahf
add
add
or
stos
or
xchg
push
mov
xor
add
test
xor
out
add
xchg
adc
adc
pop
cs
xor
add
fdivs
xchg
leave
push
pop
jg
or
pop
ret
push
cmpsb
pop
push
mov
sub
jne
and
xchg
jp
inc
iret
add
lahf
mov
nop
adc
repz
jg
cmpl
das
shrb
fmuls
sub
push
imul
sbb
or
rclb
pusha
jo
cmpsb
test
pusha
mov
sub
pop
xchg
call
pop
js
adc
aam
adc
test
mov
aaa
push
add
pop
add
adc
push
pop
xor
xchg
adc
lods
imul
cmp
push
jl
js
xchg
outsb
sbb
sbb
add
pushf
rcll
repnz
sub
cmpsb
pop
xor
dec
outsl
sbb
sbb
jne
pop
inc
pusha
adc
sti
and
cs
pop
into
push
xchg
pop
mov
add
push
sbb
mov
pusha
js
xchg
adc
loopne
andb
nop
call
lcall
ret
cwtl
dec
dec
push
xchg
mov
loope
adc
and
je
loope
or
js
enter
aaa
or
or
xor
movl
pop
xchg
sbb
imul
cmp
cmp
xor
cmpb
pop
cmp
xchg
into
push
xorl
nop
mov
dec
or
lcall
pop
pop
paddw
ljmp
xchg
cmp
and
lret
inc
cmp
repnz
xchg
push
cmovp
dec
inc
push
mov
mov
repnz
cmp
sbb
mov
fwait
add
sub
add
or
and
test
adc
daa
add
or
rcl
jae
inc
sub
jmp
push
push
lock
aaa
pushf
mov
dec
dec
out
testl
pop
jle
inc
sahf
fs
pop
or
shr
in
xor
xor
sbb
push
outsl
add
inc
pusha
cmp
cmp
cmp
sbb
shlb
cmp
pusha
push
xchg
sub
sbb
or
add
out
clc
jo
cmp
mov
jo
jno
push
ret
popa
seto
setno
aad
xor
cmp
rolb
and
push
jp
sub
addr16
dec
xchg
jmp
cli
adc
add
in
and
add
inc
jge
push
add
inc
add
cmpsl
aam
push
sahf
shl
popa
add
sbb
or
leave
outsb
push
mov
jmp
ret
pop
sbb
mov
test
jo
adc
sbb
add
sub
pop
test
mov
mov
pop
sbb
cld
enter
mov
and
or
adc
inc
test
jmp
dec
add
add
inc
daa
xor
inc
mov
loopne
pop
sbb
xchg
push
add
sub
leave
ljmp
push
mov
pop
pop
rclb
pop
adc
inc
jmp
pop
add
pop
movl
ss
and
ret
push
lcall
add
es
or
nop
and
jmp
cmp
or
daa
sbb
xchg
sbb
and
ret
mov
mov
push
aaa
mov
fsubr
pushf
rcrl
jle
mov
mov
cmp
fimuls
test
cmpsl
lods
add
jmp
aad
lret
or
popa
add
add
lcall
incb
xchg
add
imull
outsb
cmp
jl
lea
add
dec
xor
mov
cmp
mov
xor
out
mov
clc
xorb
es
mov
mov
stos
dec
dec
mov
movsb
push
push
aad
mov
stos
loope
repz
es
rclb
fcomps
xchg
sub
add
imul
pop
scas
loope
mov
je
or
ljmp
add
or
push
or
push
push
outsb
xor
mov
pop
ret
setne
push
push
xchg
mov
imul
or
jo
xchg
push
adc
dec
xchg
sub
fldl
mov
dec
test
sub
xor
and
pop
push
mov
cmp
pop
cmp
or
into
add
shll
pop
jp
movsb
pusha
lret
jno
mov
push
pop
or
pop
inc
push
adc
jo
add
xchg
pop
nop
in
enter
shll
pop
xor
inc
mov
sbb
xor
pop
push
movsl
sub
enter
push
mov
cld
mov
push
xchg
jbe
or
mov
sub
or
dec
or
mov
dec
or
fcomps
cmp
add
mov
pop
flds
add
mov
and
pop
lahf
popa
mov
add
stos
cmp
fstps
flds
flds
cmp
mov
testb
or
lods
sahf
jmp
out
insl
decl
adc
fldcw
fmuls
push
into
mov
popa
cmp
sbb
fadd
mov
jae
adc
or
xor
repnz
fnstenv
rcrb
add
outsl
cmp
mov
inc
or
lret
adc
push
ds
push
or
push
add
dec
mov
or
or
xchg
cwtl
inc
cmp
je
jg
push
fidivrl
loopne
pop
cmp
xchg
mov
push
pop
jp
ljmp
jecxz
test
add
in
cmp
movsl
mov
and
mov
aas
sub
mov
jmp
fdiv
ret
fcmovnbe
dec
in
jmp
sub
inc
pusha
add
je
std
loopne
push
sub
gs
sub
sarb
pop
adc
add
mov
lea
into
pop
xor
mov
adc
ret
push
cmpsl
sub
mov
lods
filds
push
push
and
adc
cmpsb
adc
or
in
inc
xor
mov
lcall
popw
push
call
loopne
xor
mov
in
xor
push
and
les
or
pusha
cmp
fucomi
jmp
test
outsb
push
xchg
aam
in
add
mov
push
lea
jl
mov
imul
test
push
xchg
ret
jnp
or
dec
cld
xor
into
pop
leave
ficoml
mov
mov
inc
ret
push
punpckhdq
pop
int3
iret
inc
mov
cld
loop
scas
das
push
imul
jne
push
dec
mov
push
adc
jl
mov
pop
fdiv
jne
push
push
dec
pop
imul
mov
or
pushf
mov
inc
and
stos
mov
adc
jg
adc
aam
xchg
push
adc
fdivrp
xor
cmp
pop
jmp
xor
adc
dec
or
push
inc
call
in
sub
lea
cmc
iret
cli
xor
mov
inc
lock
dec
pop
sub
inc
dec
sbb
jne
and
into
insb
cltd
mov
mov
mov
fsubrs
xchg
push
push
push
mov
ljmp
inc
cmpl
fisttps
and
pop
xchg
sbb
push
pop
test
mov
testb
inc
je
test
imul
insb
cmp
mov
dec
fsts
pop
push
mov
sbb
or
jge
hlt
adcl
sbb
sub
mov
pop
push
cmpl
or
inc
add
lock
test
loopne
mov
sbb
inc
clc
add
sti
andl
div
mov
pop
xchg
or
or
test
incl
mov
add
loopne
lea
push
push
mov
jl
mov
ds
mov
ss
push
in
or
adc
adc
addr16
or
adc
adc
sub
mov
sbb
leave
push
xchg
mov
xchg
out
nop
dec
or
jecxz
sbb
and
xchg
mov
je
mov
pop
jmp
jb
out
cmp
and
jno
mov
add
mov
shrl
and
push
insb
fs
sub
pusha
push
movsb
fwait
incl
je
jmp
jmp
sbb
xlat
sub
popa
outsb
or
in
push
add
jle
jo
jge
mov
pop
sub
into
je
stos
pop
mov
pusha
dec
ret
sbb
inc
imul
mov
and
es
pop
jne
adcb
or
aam
push
mov
inc
or
xor
dec
add
xchg
pop
lahf
push
jl
shr
or
dec
cmp
inc
push
ret
ret
enter
inc
and
pop
rcrb
test
lock
cld
add
and
jbe
push
outsl
xor
lods
imul
popf
test
lods
xor
push
mov
add
mov
das
sbb
and
add
pop
in
pop
inc
xchg
mov
psubb
sub
jne
mov
push
push
pop
lcall
mov
add
or
push
add
push
cs
push
inc
lret
cld
cmp
rcll
push
jnp
popf
out
mov
add
push
push
icebp
cli
sbbb
dec
aam
push
mov
cmp
inc
or
inc
mov
dec
inc
inc
mov
jl
subl
je
mov
insl
movsb
lock
jb
mov
adc
fnstsw
shl
push
mov
sub
jne
xor
call
mov
sbb
std
push
inc
or
incl
int3
xor
pushf
pop
xchg
mov
ret
and
loop
inc
inc
sbb
fiaddl
cmp
xchg
add
stc
mov
dec
mov
or
sub
fwait
mov
sub
push
movl
or
mov
sbb
mov
movsb
sub
mov
add
push
cmp
into
inc
or
sub
mov
push
ss
pop
push
push
push
xor
inc
sarl
in
xchg
inc
repz
push
out
add
rcll
ja
push
adc
adc
xor
xchg
ret
rcll
stos
in
iret
int
fxch
fst
or
push
sbb
and
cmp
push
inc
dec
shr
in
rcrl
je
cmp
push
dec
into
fsubrp
mov
jae
push
repnz
push
sti
imul
mov
inc
icebp
dec
cmp
pusha
cs
imul
mov
add
dec
xor
or
add
pop
test
sti
inc
call
dec
sub
idivb
add
mov
popa
ljmp
fsubrs
xor
mov
stos
in
ss
pop
cs
jmp
mov
jmp
test
inc
dec
movzwl
mov
push
jae
andl
xor
pop
mul
xor
adcb
cmp
cmp
jb
shll
lret
sub
adc
mov
scas
or
xchg
jo
je
pop
pop
dec
pcmpeqw
rcr
jmp
adc
cmpsb
mov
push
lret
and
and
mov
adc
call
push
aas
jbe
scas
movsl
test
int3
mov
push
mov
daa
sub
dec
mull
add
jge
lods
xor
xor
stos
and
jno
push
jl
loop
jge
push
mov
pushl
outsl
sahf
dec
mov
faddp
pop
mov
test
imul
inc
push
dec
sbb
push
sbb
pop
cmp
scas
adcl
mov
push
jns
mov
arpl
inc
or
jle
push
repnz
sbb
lea
ffree
rol
aaa
dec
popl
adc
jge
add
lret
sbb
add
add
pop
movsl
std
call
xor
dec
mov
push
stos
imul
or
mov
mov
insb
mov
xchg
or
push
sbb
xchg
jnp
andl
lret
testl
pop
call
inc
sub
fldl
push
test
loopne
dec
ret
pop
cli
cmp
and
or
cmpsb
adc
loop
or
dec
xor
imul
xor
ret
xor
lock
lahf
xchg
pop
enter
rcll
jl
pop
lock
adc
scas
pop
rorb
adc
dec
cmp
pop
cmp
pushf
push
sub
sub
dec
cmp
push
jmp
gs
mov
aad
or
add
jo
mov
clc
adc
mov
dec
mov
lahf
and
pop
xor
jge
pop
xchg
add
stos
xorb
push
arpl
pop
in
mov
push
xor
jl
mov
pop
in
jnp
mov
fisubrl
stos
int3
rolb
jne
add
imul
cs
shlb
pop
sbb
in
and
adc
mov
out
adc
mov
cmp
aam
sbb
divl
pop
jp
test
or
adc
and
stos
sub
js
and
lcall
push
xchg
mov
pop
pop
mov
bound
clc
add
aam
push
pusha
fisttpl
cmpsl
push
enter
dec
xor
insl
jne
cs
add
repz
push
push
jae
arpl
cmp
jne
push
push
je
inc
or
lret
repz
jg
push
or
and
jle
adc
or
into
push
push
mov
inc
sbb
cmp
mov
cmp
dec
push
jo
mov
lods
or
je
sbb
push
pusha
xor
and
mov
adc
push
push
fidivs
into
xchg
adcb
fwait
sub
cmp
add
out
dec
jne
sub
mov
jb
cmp
push
in
push
movb
mov
sbb
pop
mov
dec
test
or
jnp
sti
push
hlt
ss
cmp
jmp
push
inc
fimuls
jl
mov
neg
add
push
push
fcoms
sub
push
loopne
inc
pop
jae
and
pop
xor
sbb
nopl
push
sub
loopne
mov
mov
xor
ja
sbb
jnp
rolb
push
jae
add
xor
adc
stc
jmp
and
loopne
adc
out
hlt
mov
or
mov
mov
je
int3
or
ja
test
rcrb
shrl
and
push
push
lods
pop
cmpsb
lcall
ds
stos
mov
push
inc
jae
or
dec
mov
sbb
clc
out
lret
dec
ja
xchg
mov
pop
pop
jle
mov
adc
adc
or
add
shll
fs
insb
jo
js
movsl
cltd
movb
lds
cmpsb
cwtl
xchg
sti
das
adc
std
or
push
mov
inc
int3
lods
insl
lods
int
faddl
xor
addr16
scas
dec
jnp
xor
and
pop
les
xchg
add
xchg
int
or
fiaddl
adc
and
popf
pop
loop
pushl
int3
cmpsl
xchg
add
fadds
jl
js
orb
jo
or
orb
pusha
push
or
adcb
mov
int
notb
and
adc
pushf
imul
push
dec
sbb
test
clc
adc
js
inc
call
cmp
jne
mov
adc
test
xor
or
bound
pcmpeqw
push
imul
data16
adc
add
test
jecxz
or
push
jle
insb
dec
adc
fbld
jmp
cmp
decb
xor
fs
push
add
sbb
shr
sar
lret
or
xor
cli
push
ja
nop
or
sbb
es
shll
mov
movswl
or
mov
or
mov
adc
es
or
add
jge
cmpsb
adc
daa
mov
mov
jno
test
in
repnz
push
or
add
incl
mov
inc
shll
jo
movsb
ffree
call
shr
and
test
add
adc
add
test
cld
out
int
xchg
pop
jne
lea
add
push
lods
cmp
or
adc
sbb
lret
notb
in
or
ret
inc
sbb
imul
fdivrs
pop
add
fnstcw
adc
add
test
popf
add
jb
je
pop
mov
out
nop
mov
incb
repnz
out
out
addr16
xchg
add
iret
cmp
clc
xchg
jnp
out
stc
xchg
mov
inc
xchg
out
lret
sub
rolb
ret
roll
mov
push
shrb
mov
test
jne
stc
lock
sbb
sbb
je
icebp
sti
mov
adc
xor
imul
in
or
mov
je
dec
sub
push
scas
ja
add
cmc
fstps
mov
div
aad
push
nop
lahf
or
adc
in
mov
test
inc
push
mov
mov
fdivs
lret
clc
or
in
movsl
cmp
or
jmp
cmp
mov
jnp
add
iret
cwtl
dec
xchg
push
in
or
push
orl
ja
sar
or
cmp
sub
cmovb
add
and
rolb
push
cmp
arpl
out
movsl
add
jmp
pop
xor
jecxz
pop
push
push
or
loop
mov
inc
icebp
icebp
test
lock
or
cmp
test
decl
xor
mov
or
add
sub
xor
push
or
dec
out
xor
int
jo
pushl
cld
and
sbb
fimull
dec
xor
int3
cmpsb
shrb
clc
and
popa
or
inc
notl
add
sbb
adc
sbb
lods
in
mov
push
gs
je
pop
push
sbb
fs
pusha
insb
xchg
xchg
inc
inc
insb
push
or
movsb
xor
jbe
cmp
in
lea
jl
ret
ja
and
shll
inc
mov
movzwl
adc
je
cmp
je
mulb
aam
sub
loope
jl
pop
and
iret
je
xor
cmp
push
mov
push
adc
lds
xchg
inc
pop
xchg
andb
clc
jmp
lea
cmp
out
dec
leave
sbb
push
xor
andps
pop
lcall
into
adc
lock
jnp
xchg
xchg
lock
cmpsl
addb
jmp
rcll
adc
fisttps
pusha
pop
adc
sbb
jns
pop
dec
ss
out
sbb
int
mov
mov
sbb
dec
dec
add
add
push
mov
lods
jnp
into
lea
mov
sub
cs
lods
push
hlt
cltd
push
sbb
lods
sub
inc
push
je
adcl
pop
jl
bound
testb
and
add
in
add
orl
test
test
ljmp
sbb
adc
xor
out
scas
sbb
adc
sbb
in
lcall
mov
mov
movsb
fsubrs
push
jge
jne
push
mov
sbb
inc
mov
and
sbb
cs
adc
popa
pop
imul
mov
or
sbb
insb
xchg
call
cltd
addr16
xchg
scas
inc
or
pushf
pop
mov
int
fidivrs
inc
movsb
das
clc
outsb
mov
mov
fwait
jns
and
fs
iret
pop
shll
push
and
dec
dec
rorb
ficoms
xchg
cwtl
push
ret
sub
add
pop
sbb
nop
lea
dec
push
or
data16
sbb
shrl
adc
test
dec
popa
rcr
xchg
jecxz
bnd
cli
les
out
xchg
pop
xor
add
or
add
push
int
mov
in
out
push
adc
sub
enter
mov
pop
arpl
push
and
sbb
pop
sbb
popf
add
add
pop
mov
std
mov
andb
pmulhw
push
or
jbe
sub
adc
jle
fiadds
mov
jbe
icebp
dec
jne
inc
add
cmp
je
aaa
jnp
addl
mov
es
and
sbb
jg
out
adc
sbb
scas
add
and
js
ret
pop
icebp
or
add
xchg
or
mov
add
push
xchg
adc
ds
pop
inc
push
movsb
inc
lods
or
xchg
pop
fldt
push
push
pop
into
jecxz
adc
clc
mov
js
adc
loopne
cmp
push
leave
int3
lret
insb
mov
aam
lret
in
sub
push
push
sar
lock
out
pop
add
lcall
enter
sbb
or
mov
push
mov
add
mov
mov
sti
lcall
add
por
popa
mov
cbtw
jno
and
sub
mov
jo
lea
ja
pop
movsl
pop
pop
aam
arpl
push
in
mov
loop
xor
pop
mov
movsl
xor
idivb
je
mov
mov
pop
out
adc
add
ret
push
cli
mov
jno
push
add
cmp
rolb
loopne
fcomps
xor
push
cmpsb
fcmovbe
test
jb
mov
jecxz
das
inc
cmp
loopne
jo
out
push
cmp
insl
aaa
int3
add
enter
lods
pop
aas
xchg
jmp
movzwl
pop
or
test
cli
jne
daa
mov
push
dec
push
push
push
push
je
push
xchg
orl
or
jbe
or
adc
push
arpl
push
xchg
and
jno
aaa
hlt
fs
sub
in
into
mov
pop
sub
dec
push
pop
jb
mov
aaa
xor
or
lods
add
mov
inc
aas
call
js
add
and
mov
sub
sbb
fcom
or
cmp
cmc
subb
aaa
int3
test
mov
ds
mov
push
dec
pop
adc
xchg
pop
add
ret
xchg
daa
jmp
ret
fcomps
dec
xor
inc
clc
sbb
xor
js
xlat
sbb
movsb
adc
xor
push
add
roll
push
pop
sub
adc
adc
pop
cwtl
stos
inc
jle
and
std
ljmp
cmp
sbb
xchg
jnp,pn
and
cmpsl
add
xor
stc
stos
xchg
inc
xchg
insl
js
push
adcb
test
mov
and
mov
mov
push
jo
cvtpi2ps
mov
dec
mov
cmp
sbb
mov
xor
or
push
inc
insb
ffreep
or
push
and
adc
rolb
mov
sahf
ficoml
dec
or
add
or
xchg
add
ficomps
out
std
push
and
filds
xor
mov
sub
popa
sub
and
fs
and
xor
or
jecxz
cmp
jg
cmpsl
mov
adc
adc
je
add
cmpl
insl
inc
insb
js
add
xor
rorb
inc
in
dec
testl
addl
addb
and
mov
inc
sbb
push
rclb
inc
pop
inc
inc
rcrb
adc
inc
outsb
jl
aas
jmp
outsl
dec
sbb
inc
jmp
pushl
jo
push
pop
mov
lea
mov
adc
inc
cmc
ss
xchg
lret
fcomps
push
pop
lcall
shlb
test
test
sbb
hlt
pop
xor
idivb
gs
mov
clc
jge
xor
jl
andl
lods
enter
pop
or
icebp
sbb
and
ret
inc
cltd
addb
pop
adc
loopne
jecxz
dec
repz
pop
jl
mov
push
dec
push
test
adc
xor
xor
inc
shlb
aad
add
test
ret
adc
or
in
scas
sub
xchg
inc
mov
fsubrl
add
push
mov
push
sub
loopne
lds
jle
lods
jl
dec
cmp
adc
sbb
jl
push
mov
inc
sub
inc
call
sbb
mov
xlat
shr
pop
add
js
insb
dec
dec
adc
adc
push
inc
sbb
inc
push
add
lock
and
fdivs
mul
sbb
sbbb
xchg
repnz
jmp
pop
cmp
mul
insb
test
xor
xor
call
je
sbb
or
test
add
jne
sarb
imul
xchg
lock
sbb
testb
jle
jbe
and
ljmp
adc
xor
and
xor
jmp
rolb
or
popf
sbb
shrb
or
lret
jbe
sub
adc
pop
or
push
push
xor
inc
out
inc
jnp
scas
push
mov
ds
outsl
nop
sbb
enter
xor
add
fisttpll
mov
and
cmp
rorb
subb
in
fadds
inc
add
jb
lahf
aaa
add
mov
add
mov
push
add
add
out
push
push
push
test
sbb
mov
dec
insb
scas
xchg
push
pop
fs
lret
fbstp
add
insl
mov
xor
cmp
lret
add
mov
adc
push
push
subps
dec
loopne
or
mov
jnp
sub
andl
push
xor
push
ret
sbb
and
jb
dec
mov
fmull
add
gs
pop
xor
insl
fcomps
pushf
pushfw
inc
xlat
sahf
out
out
adc
aad
mov
dec
rcl
mov
test
test
and
and
add
pop
ret
mov
jo
jmp
xor
push
mov
pop
bound
mov
lret
push
push
pop
cmp
aaa
mov
cltd
idiv
dec
dec
mov
cwtl
jl
xlat
and
insb
mov
cwtl
andl
pusha
add
fcoms
out
ret
inc
xorl
loopne
mov
out
stos
and
leave
inc
mov
add
mov
dec
icebp
mov
inc
push
mov
leave
movsl
fsubs
mov
sub
add
xchg
outsl
mov
push
addl
cmp
inc
cmc
les
add
inc
fiaddl
cmp
cmpb
add
adc
shrb
andl
adc
mov
mov
insl
imul
outsl
inc
or
test
jle
into
add
pusha
pushf
push
jae
movsb
mov
test
cmp
or
lock
mov
sbb
cmpsl
xchg
sub
movsl
adc
sub
mov
or
add
mov
push
test
xor
out
or
inc
cld
sbb
add
jbe
and
push
cli
adc
mov
sbb
xchg
pop
int3
mov
mov
pop
jae
jno
and
call
sub
add
mov
orl
jbe
or
es
in
andl
lods
sub
dec
push
push
adc
add
lods
test
jo
cmp
pop
push
pop
xor
ds
or
adc
or
rclb
add
sti
add
dec
xor
pop
cmp
cmp
roll
negl
mov
xor
cmp
scas
in
inc
and
test
lea
loop
dec
repz
lret
mov
stos
rorl
mov
and
addr16
mov
test
jbe
push
pop
and
je
cwtl
hlt
aas
xchg
int
sarl
adc
mov
mov
and
push
sahf
test
mov
xchg
clc
jle
sar
dec
in
jge
movl
xorl
inc
add
mov
xor
arpl
iret
inc
cwtl
repnz
dec
xchg
inc
adc
les
gs
fcomi
pusha
insb
std
mov
decb
mov
fucom
xor
js
or
dec
shlb
lock
jle
dec
mov
lock
cmpsl
add
mov
bound
clc
inc
dec
imul
mov
les
fists
pop
adc
sub
insl
xlat
dec
cmp
fisubrl
xchg
jne
add
dec
jp
sahf
ss
push
cmpsl
dec
jnp
jge
icebp
push
rcrb
sbb
cmpsl
enter
dec
push
push
mov
xchg
mov
push
data16
roll
call
or
scas
test
and
or
rclb
mov
pushf
jne
mov
add
repz
jmp
lea
add
cmpl
pop
jmp
fwait
mov
fldt
out
movsl
addl
insb
ret
test
sbb
mov
xor
ud0
mov
leave
pop
sbb
cwtl
dec
push
mov
cmpsb
add
enter
sub
je
adc
mov
add
movsb
add
pop
adc
sbb
add
push
sbb
mov
mov
pop
mov
enter
lea
push
sarb
mov
or
je
aaa
jbe
lea
rolb
cmp
sub
pop
sarb
mov
inc
or
pop
or
xchg
jns
mov
testb
cmp
in
fs
sbb
jae
popf
test
shlb
into
ret
je
xchg
dec
inc
loope
adc
lcall
lds
pusha
or
mov
cs
leave
or
adc
and
aas
adc
jg
push
mov
push
jle
shrl
shrl
mov
or
push
test
js
dec
jp
lea
mov
call
push
stos
cmp
inc
push
mov
pop
ja
dec
push
and
loop
cwtl
clc
lret
mov
mov
lock
pop
test
adc
mov
cmp
or
push
mov
jae
inc
pusha
decb
xor
xor
jp
out
inc
jnp
pop
lods
sub
out
pop
test
cld
add
mov
pop
in
loopne
mov
push
dec
arpl
adc
lret
mov
push
push
add
inc
test
push
inc
mov
test
dec
or
fadds
push
test
xor
or
inc
inc
rcrl
aad
aaa
sbb
xor
mov
push
fdivrl
dec
jmp
or
pushf
or
add
inc
sub
xor
fldl
push
add
fcoml
nop
adc
xchg
mov
jl
int3
out
pop
shll
ret
sar
xchg
shl
inc
mov
testl
mov
pop
nop
jle
xor
add
push
xchg
ret
mov
rorl
mov
and
andb
insl
jne
ds
es
xchg
mov
stc
push
sub
mov
mov
cwtl
lock
int3
lret
jle
sbb
sbbl
sub
pop
and
fmull
aas
add
push
xor
jle
xor
test
lea
sbbl
mov
fmull
lods
or
push
pop
pusha
push
gs
jg
cmpsb
ljmp
mov
mov
js
rclb
jae
cmpl
mov
push
rolb
arpl
pop
xor
dec
mov
pop
lods
push
or
mov
and
shlb
shlb
add
jns
adc
cmp
xchg
or
sti
sub
xchg
add
sub
in
push
mov
push
cmp
xchg
and
in
outsb
xchg
xchg
lock
arpl
push
das
mov
in
mov
ds
mov
xor
or
loopne
or
push
push
in
in
rcr
mov
dec
aaa
sbb
jbe
push
push
xchg
mov
add
dec
mov
mov
cld
fcmovnb
loopne
add
ret
div
add
or
les
pop
xor
pop
mov
jno
addr16
jbe
pop
mov
and
out
ret
outsl
test
mov
aas
add
sti
dec
ja
je
or
je
or
sub
sub
mov
scas
cmp
rclb
sbb
pop
fiaddl
add
clc
sahf
test
sbb
lcall
mov
xbegin
outsb
cmp
adc
dec
movsl
stc
jbe
adc
inc
push
imul
add
and
lds
test
sti
scas
movzwl
dec
lods
or
and
sub
push
mov
mov
mov
es
add
sub
mov
gs
gs
add
movsl
mov
shlb
pop
or
rolb
or
push
pusha
mov
daa
imul
into
test
add
jge
scas
and
xor
xor
ficoml
push
mov
loop
movsb
js
mov
fistps
or
je
sub
sub
rorb
push
adc
add
shlb
lahf
imul
repz
xor
pop
fs
frstor
or
push
adc
movsl
enter
mov
adc
dec
in
pop
cli
sahf
add
inc
in
add
pop
ja
push
inc
and
push
fiadds
jmp
and
mov
or
xchg
xor
stos
enter
mov
roll
mov
rorb
xchg
stos
sbb
mov
pop
fcoml
inc
mov
dec
mov
xor
xchg
ss
inc
xor
or
inc
popf
ficomps
pop
loopne
xchg
pop
sbb
mov
xchg
and
fcomp
push
sub
and
fs
push
push
or
enter
ret
js
enter
cld
stos
xor
sbb
pop
call
mov
sbb
ds
xchg
fdivrl
inc
xchg
adc
pop
adc
cmpsl
jmp
add
out
jl
or
push
lea
push
push
and
mov
dec
xor
test
imul
mov
shlb
cmp
xchg
aam
push
lock
repz
push
iret
adc
call
and
outsl
mov
push
xchg
and
das
sbb
mov
add
in
repnz
xchg
xchg
fcoml
in
xchg
xor
add
and
in
lea
xor
aam
lds
adcl
and
mov
mov
ljmp
fstl
sub
inc
aaa
add
mov
dec
je
jl
cmp
or
inc
cmp
loop
sbb
sub
and
xchg
mov
sti
insb
aam
fisubl
mov
sbb
sub
scas
test
daa
mov
out
cmp
adc
or
push
or
add
xor
or
adc
or
xchg
sbb
sbb
inc
push
sub
sub
push
mov
hlt
push
xor
movsl
inc
and
mov
xchg
js
ret
adc
mov
push
xor
xchg
and
push
jmp
fidivrs
lcall
jecxz
imul
movl
push
jnp
jge
inc
push
jne
jle
addl
loopne
inc
addr16
dec
in
sbb
in
cmp
je
lock
nop
into
mov
test
jp
mov
fcoms
push
dec
sbb
aaa
sub
sub
test
subb
cwtl
push
push
and
pop
or
or
icebp
inc
loopne
xor
pop
add
aas
das
mov
sbb
mov
int
mov
mov
sbb
sbb
testl
clc
lock
xor
push
or
rclb
xchg
mov
add
lods
pop
mov
push
test
inc
add
cmp
push
js
fimuls
add
jg
cmp
pop
dec
movsl
cmp
call
xchg
jbe
adc
pushf
pop
push
iret
pusha
add
incl
sub
mov
and
and
pop
pushf
or
rcll
pop
mov
aam
dec
hlt
sub
shll
inc
out
pop
jp
push
in
cmpsb
fs
cli
lods
add
dec
stos
mov
lods
lea
shlb
xor
push
js
push
dec
pushf
push
add
sbb
dec
fsub
push
sahf
mov
iret
xchg
or
push
add
cltd
add
ja
gs
adc
sub
test
xor
mov
or
or
mov
lods
push
push
xchg
push
cmpb
push
xchg
pop
dec
inc
jbe
add
xor
test
jg
xor
fchs
pandn
mov
icebp
add
push
pop
je
xor
insl
dec
repnz
cmp
add
and
fimuls
inc
nop
mov
jg
xlat
add
push
lock
mov
sti
andb
fs
jne
es
lods
jo
add
shl
or
data16
leave
or
dec
jo
aaa
mov
mov
movsl
inc
psraw
mov
ja
push
pop
lret
xchg
movsb
jns
add
loopne
or
add
xchg
je
push
jg
xor
ds
out
dec
or
fidivs
dec
clc
add
jl
sbb
xchg
shl
jns
and
push
inc
adc
fisubl
inc
add
in
add
or
jecxz
sbb
or
dec
adc
and
sbb
sub
hlt
rcrb
adc
pop
push
aam
js
sbb
xor
mov
adc
dec
sti
mov
adc
es
sbb
sub
pop
ret
mov
adc
pop
xchg
sub
adc
adc
jle
dec
fisttps
xor
stos
testl
je
mov
mov
scas
fmull
inc
cmp
dec
push
adc
pop
sbb
imul
push
push
jo
adc
sub
sub
or
sub
es
add
xchg
add
jl
sbb
pushf
out
jnp
or
and
sub
sbb
push
out
sbb
push
out
call
test
rorb
and
shr
stos
or
mov
jne
es
jge
xchg
mov
subl
stos
add
mov
jne
in
push
ficoml
call
cmpsl
jne
in
mov
sbb
sbb
adcb
or
inc
lret
push
adc
ret
pusha
sub
mov
push
fmull
cmpsl
push
fcoms
sbb
pop
xchg
and
add
nop
hlt
test
nop
sbb
dec
cli
add
mov
std
jmp
or
push
cmp
es
fmull
xor
movsb
and
sbb
cld
mov
lret
and
jbe
lcall
jmp
or
into
add
add
mov
jmp
push
sub
fisttpl
cli
fiadds
adc
pop
ss
push
mov
pop
ret
mov
pushf
lret
loope
icebp
push
adc
and
jne
push
adc
int
stos
clc
push
cld
push
sbb
or
repz
in
or
call
scas
inc
cs
push
mov
mov
pusha
movb
sbb
inc
xchg
xchg
sbb
jns
rcrb
sbb
mov
sahf
je
dec
repnz
lods
out
add
push
xor
mov
add
inc
sbb
mov
fstps
adc
inc
push
cltd
inc
add
xchg
cmp
test
daa
adcl
repz
enter
or
orb
loopne
jmp
or
pop
push
push
mov
add
sub
add
lea
or
xchg
add
and
cmp
mov
cmp
push
sub
push
fsts
jns
push
mov
ret
xor
and
xor
push
mov
repnz
push
jo
leave
pop
inc
ret
cmp
sahf
xchg
addr16
or
jo
fwait
cmp
and
fwait
inc
xchg
or
mov
fsubs
dec
adc
sahf
sbb
mov
int3
in
jmp
sbb
dec
in
push
and
or
stc
in
jo
dec
jmp
push
lock
rcrb
mov
jecxz
nop
and
clc
ss
rol
mov
cmp
xchg
addl
adc
stc
cmp
pop
test
repnz
pushf
into
xchg
pop
or
ret
dec
mov
adc
call
sub
movsl
mov
mov
add
lret
pusha
outsb
dec
adc
movsb
or
sbb
and
adc
and
jmp
pushl
sub
push
scas
cwtl
and
leave
addr16
lods
insb
pop
lret
dec
loopne
mov
xchg
ret
sbb
aas
stos
adc
or
sbb
loope
inc
add
movsl
sub
addl
adc
or
sub
fdivr
sbb
out
push
xlat
dec
ja
and
aaa
push
scas
fmuls
add
push
pop
xchg
jae
cltd
mov
sub
stc
sbb
cmp
xchg
add
xor
push
aam
icebp
loopne
enter
filds
in
push
in
imul
pop
in
add
jns
cmp
or
jo
add
lock
jne
orl
add
sbb
leave
xchg
clc
xor
lock
mov
lods
add
cwtl
mov
xor
cmp
inc
call
lock
jo
sub
jne
pop
add
or
sbb
pop
mov
daa
or
adc
mov
or
xchg
add
xor
js
inc
push
cmp
xchg
mov
pop
fcoml
cli
or
iret
sbb
or
jne
fnstcw
push
pop
mov
xchg
mov
xor
add
mov
addr16
xchg
in
popa
jge
xor
mov
lea
cltd
xor
inc
pop
cmp
filds
push
jbe
inc
mov
imul
mov
mov
mov
lock
inc
dec
mov
sub
push
out
xchg
addb
andb
add
clc
fmull
push
cmp
mov
dec
cmp
or
in
inc
mov
add
xor
cmp
xchg
or
and
popf
enter
dec
push
jns
stc
jnp
jae
mov
push
test
jl
cmp
jae
cld
mov
repz
mov
and
out
cmp
jne
andl
insb
insl
icebp
mov
je
hlt
pop
adc
or
mov
push
js
adc
arpl
inc
jmp
inc
movsl
movsb
mov
jl
fisubrs
pusha
or
loope
push
and
movsl
or
fisubl
mov
loopne
jl
repnz
sbb
rclb
or
add
call
xchg
push
lods
sbb
push
xchg
ficoml
mov
scas
cs
adc
xchg
push
adc
mov
sbb
push
js
pmullw
das
lods
xchg
rcr
or
pop
cli
and
shrb
pop
push
adcl
cli
dec
xor
lcall
test
or
xchg
dec
ret
sub
sbb
xchg
mov
rcrb
or
imul
mov
adc
mov
add
or
decl
mov
scas
xchg
sbb
or
adc
adc
pop
hlt
or
sub
jne
imul
imul
insb
call
imul
sub
test
adc
or
cmp
jns
andl
sbb
je
fdivrp
jecxz
nop
fiaddl
test
and
dec
xchg
test
mov
jmp
cli
add
mov
loopne
ret
push
xor
push
lds
nop
pop
or
or
cmp
xchg
pushf
add
pop
iret
xchg
mov
icebp
popa
mov
and
stos
movsl
sbb
addb
aaa
fs
mov
fs
dec
cltd
dec
pop
repnz
mov
clc
push
fs
dec
test
push
push
push
stc
add
mov
add
dec
stc
add
test
ds
xchg
pop
push
cmp
jo
add
mov
mov
inc
push
cmp
push
sbb
push
pop
iret
sbb
xor
jmp
arpl
push
outsl
add
leave
inc
mov
mov
mov
cmpsl
add
lea
movb
in
pop
and
mov
iret
mov
xor
daa
xor
fwait
inc
enter
repz
pop
mov
fs
xchg
add
push
xor
or
jmp
xor
fisttpll
adc
add
push
xchg
scas
outsl
xor
pusha
or
inc
push
cmp
jb
dec
jmp
ret
cmp
inc
pop
pop
std
push
adc
sub
incl
rdmsr
or
cmp
add
ja
push
push
push
inc
pop
andb
mov
inc
or
mov
ret
test
adc
in
sbb
and
je
push
mov
dec
pop
or
andb
dec
negl
mov
jle
dec
sbb
adc
int3
adc
cmp
into
xor
pop
jmp
mov
dec
adcl
xorb
or
inc
or
out
or
cmp
adc
mov
js
mov
inc
push
push
mov
pushf
add
or
pop
clc
adc
inc
xchg
mov
leave
dec
inc
mov
add
adc
shlb
and
push
adc
push
jb
jecxz
scas
lea
push
xchg
ret
dec
lea
mov
dec
int
rcl
inc
int
push
shrl
adc
push
add
stc
xchg
or
add
mov
insl
xor
add
xor
mov
mov
sub
cmp
or
popa
mov
mov
pcmpeqw
xor
add
inc
adc
fcmovnbe
dec
enter
cli
adc
pop
dec
xchg
pop
ret
gs
imul
test
movsb
xor
fcmove
dec
arpl
and
and
std
add
sbb
dec
add
pop
inc
or
divl
loopne
cmp
cld
pop
loopne
pop
jbe
inc
mov
gs
imul
loop
mov
inc
repnz
sub
push
ss
dec
fdivr
pop
loopne
addr16
add
inc
pop
repnz
test
mov
jo
push
or
lea
push
sarl
rep
mov
push
or
add
sbb
mov
mov
xor
rol
mov
push
cld
inc
pop
xchg
int3
lock
sub
push
or
xor
bound
mov
nop
add
adc
enter
in
pushl
leave
and
bound
push
mov
les
push
ret
xor
mov
xor
sbb
pop
mov
ds
mov
mov
mov
adc
sbb
add
xchg
shrb
add
inc
or
add
mov
push
sbb
mov
and
add
add
pop
mov
or
in
pushf
loop
pop
or
adc
mov
push
adc
nop
mov
clc
xchg
xchg
cmp
jbe
or
jl
das
lock
inc
and
push
dec
jge
ljmp
cld
clc
loop
call
icebp
cld
sub
lods
lods
les
jno
inc
xchg
repz
inc
and
jae
lods
jbe
sub
lea
ret
push
jno
shrl
out
push
and
or
mov
cld
iret
test
dec
dec
stos
test
mov
movsl
add
jmp
shrb
lea
nop
fadds
lret
dec
push
mov
mov
adc
add
cli
push
push
cld
push
xor
stos
insb
jge
lods
jg
neg
sbb
inc
je
dec
jp
inc
je
imulb
cmpsl
inc
mov
and
popf
xchg
je
jecxz
mov
loope
das
cmp
daa
shl
je
xor
adc
jecxz
add
inc
test
inc
push
lds
xchg
pop
push
sti
jl
test
mov
push
cmp
mov
inc
or
mov
sub
mov
pop
jo
mov
popa
or
mov
jno
mov
xor
push
enter
shr
not
rorb
push
aas
xchg
int3
scas
repz
out
or
push
roll
push
xor
subb
loop
add
adc
stos
int
or
fdivl
stc
lea
xor
mov
mov
test
les
gs
dec
sub
aam
cs
and
add
adc
lds
jb
lock
add
sbb
pop
pop
sbb
add
mov
inc
movsl
sub
add
test
sub
dec
cmp
add
je
jo
scas
or
push
adc
stos
push
xchg
push
lods
fmulp
and
mov
scas
and
jne
push
insb
psrld
adc
push
mov
or
aad
fidivrl
or
pop
out
push
sbb
or
es
fsubrl
push
mov
scas
xor
js
pusha
and
lea
or
inc
add
sbb
mov
or
insb
jbe
xor
rolb
push
pop
imul
cmp
sbb
repz
dec
adc
call
inc
icebp
ret
jns
inc
sbbl
or
mov
jl
xchg
je
cmp
movsl
add
inc
cmp
mov
movsl
adc
pop
orl
xor
ficoml
adc
sub
lcall
add
scas
aaa
lods
mov
adc
or
loopne
rcrl
dec
adc
fisttpll
cmc
sti
rep
bound
dec
jnp
or
adc
jmp
sub
jae
add
dec
not
and
loop
arpl
sbb
mov
sub
jne
push
push
adc
inc
push
push
add
gs
mov
push
repz
fistpl
lock
adc
data16
inc
sbb
aaa
sub
mov
loopne
inc
sub
xor
mov
inc
mov
adc
testb
mov
or
clc
movsb
jle
mov
orl
cmp
xor
fsubrl
xor
scas
shlb
and
cld
rol
add
sahf
jns
ficoml
add
push
jp
loopne
lret
popf
hlt
mov
clc
push
mov
ret
push
add
inc
call
cmp
sar
dec
adc
outsl
mov
jmp
or
jns
jecxz
stos
add
outsl
add
stos
cld
sub
add
and
lret
into
mov
repnz
ds
dec
sub
mov
test
cld
clc
pop
add
xor
add
lret
loop
les
mov
push
push
arpl
popa
pushf
sar
rcll
and
adc
mov
insb
inc
je
and
dec
add
mov
hlt
fists
push
mov
push
pushf
sub
push
add
pop
dec
bound
jge
sub
ljmp
sahf
mov
mov
scas
or
jecxz
rclb
adc
daa
imul
mov
adc
jmp
sub
and
add
daa
mov
mov
bound
mov
stos
cltd
lods
ret
push
sbb
fmuls
lock
sarb
dec
jne
cld
loopne
mov
sub
push
lods
mov
roll
xor
jmp
shrl
pusha
sub
or
int3
add
dec
lahf
movsl
repnz
movsl
pop
mov
xor
and
je
mov
dec
xchg
mov
testl
cs
cltd
cmp
add
rcrl
mov
push
or
mov
cwtl
push
sbb
push
icebp
subb
sub
sbb
test
sbbl
or
adc
mov
js
jo
dec
mov
pop
hlt
adc
in
lods
dec
mov
mov
adc
add
xchg
pusha
xchg
sahf
outsl
sub
add
inc
push
clc
loop
inc
call
sti
dec
add
cmp
or
sub
inc
jbe
jns
inc
sti
push
sub
imul
pop
push
xchg
inc
adc
and
mov
add
adc
add
mov
popa
jp
stos
sbb
loope
dec
lds
imulb
adc
roll
popf
push
movsb
or
cmp
xorl
mov
inc
push
pushf
or
aas
jge
xlat
outsb
cmp
je
or
push
sbb
je
dec
adc
decl
shrb
sub
sar
cmp
jbe
or
sahf
faddp
jb
mov
jmp
jl
pusha
lret
dec
inc
mov
dec
cmp
adc
sub
js
fnstsw
fmull
mov
push
movsb
sahf
shrb
in
mov
add
mov
movsb
outsl
sbb
and
fwait
jns
cmp
insb
and
sbb
sub
pop
push
lea
mov
fdivp
test
out
pop
inc
jmp
inc
es
rolb
movsl
cmpsb
or
xchg
pop
push
jmp
jnp
in
mov
aad
test
and
lea
xchg
mov
or
push
cmp
dec
int3
or
mov
pop
sbb
xor
imul
lods
test
iret
pop
loop
xchg
popf
out
add
or
add
cmp
or
push
enter
add
ret
pop
xchg
inc
adc
cmpsl
pop
nop
adc
xor
cmp
pop
rclb
jno
testb
pop
sbb
enter
mov
sbb
dec
add
jne
sub
ljmpw
add
cmp
xor
push
mov
jae
jb
pushl
mov
jae
push
pop
jmp
add
les
xor
jae
add
aam
hlt
in
and
sub
push
int
insb
dec
jg
sahf
cmp
pop
cltd
test
insl
inc
std
negl
xor
inc
out
sub
leave
add
mov
dec
mov
or
inc
and
lods
dec
icebp
mov
xchg
xchg
xchg
cmc
test
adc
fbld
mov
ret
mov
or
cmp
cmp
inc
push
enter
lret
mov
dec
negl
jo
mov
adc
enter
icebp
daa
or
cmp
jb
movsl
jb
adc
in
mov
insb
daa
mov
mov
mov
ja
or
nop
arpl
ja
add
addr16
lods
pusha
leave
insl
fldt
aas
mov
add
sbb
jmp
push
mov
xor
fidivl
daa
xor
cmpb
cmp
mov
or
mov
and
cmpsb
mov
addb
or
jne
repnz
xor
je
pusha
mov
inc
pop
popa
dec
stos
or
cmpsb
mov
dec
jge
jne
ss
outsl
lods
shlb
add
ss
call
cld
pop
pop
stos
push
mov
xchg
pop
pop
push
sbb
xor
inc
aas
and
push
cmp
push
cmp
cmp
insb
and
cmp
mov
inc
es
sub
daa
xchg
unpcklps
sub
xchg
sub
and
xchg
add
out
jmp
push
nop
sub
enter
inc
push
push
xor
cld
xor
loopne
negb
or
xor
mov
mov
jo
sti
sbb
lea
movsl
fstpt
fs
or
jmp
push
sbb
add
dec
push
add
mov
out
lods
mov
fisttpll
outsl
adc
add
sbb
pop
adc
add
adc
mov
imul
or
pusha
adc
sbb
cmp
add
lods
and
mov
dec
cmp
pop
adc
out
adc
adc
daa
adc
adc
mov
cwtl
sub
push
aaa
mov
ja
ja
push
xor
pop
xor
lret
pop
out
sti
dec
adc
sysexit
ja
add
mov
adc
dec
push
lds
sbb
cltd
shrl
popf
js
in
fdivrl
rclb
rol
imul
mov
or
sbbl
dec
sbb
add
movsb
icebp
mov
xchg
sbb
shll
jb
cwtl
inc
fiadds
or
js
ds
ret
lods
scas
loope
adc
shll
fsubrl
sub
jecxz
sarl
mov
lock
inc
or
fildl
pop
pop
cmpl
fwait
mov
adc
loopne
push
pop
xor
je
shr
push
mov
xor
call
lock
jmp
pop
fcoml
pusha
mulb
out
je
xchg
push
xchg
in
mov
stos
mov
gs
es
dec
das
sahf
push
or
sarl
adc
clc
push
xor
jae
jne
sbb
pop
sbb
imul
sbb
inc
call
lahf
gs
je
les
inc
les
lret
push
cmp
adc
or
mov
push
popa
push
scas
loope
jge
push
jae,pn
outsb
mov
int3
rorb
push
lock
sbb
cmp
mov
add
cmp
add
cmc
frstor
lock
add
mov
jecxz
xor
add
dec
pop
jecxz
sbb
mov
push
push
mov
cmp
jg
bound
add
fidivs
iret
int
and
loop
in
sbb
and
repz
sahf
stos
shrl
xchg
es
add
push
push
outsb
push
je
faddl
ss
call
dec
pushf
loopne
rorl
mov
loop
or
sub
pop
jmp
cmp
cmpl
xchg
shlb
dec
or
push
dec
sahf
pop
and
ficomps
out
dec
mov
push
jne
mov
dec
cmp
dec
cmp
jmp
add
mov
xchg
pop
or
or
test
lret
dec
gs
push
sub
or
pop
or
pop
inc
ljmp
dec
aam
or
repnz
adc
adc
or
mov
iret
sbbb
adc
lock
jmp
or
inc
fadd
enter
pop
hlt
xor
jmp
push
popa
xchg
outsb
imul
in
mov
pop
in
enter
inc
nop
xchg
inc
cld
add
mov
ret
push
xlat
jne
xor
mov
push
pop
xchg
inc
and
out
sbb
lock
cltd
in
loopne
fdivrs
jns
xor
hlt
add
cld
xchg
inc
sbb
nop
iret
or
jno
lock
aas
dec
pushf
inc
pop
gs
lcall
aaa
and
or
push
ret
pop
xor
pop
popf
data16
lock
mov
lds
mov
enter
or
push
test
loope
mov
in
cli
idiv
mov
cmp
jl
cmp
jle
cmp
push
jp
or
pop
inc
cmp
dec
mov
pop
xor
inc
pop
cmp
xor
jge
mov
pop
and
cmp
mov
cmp
je
cmp
je
jne
pop
pusha
orb
mov
sub
cmp
cs
pop
jg
sub
mov
pop
cmp
aas
sbb
testl
iret
repz
mov
xorb
ret
dec
xlat
test
jp
mov
lock
sub
loope
arpl
jl
leave
testb
lods
aam
mov
or
and
pop
add
jge
jbe
aaa
sub
rolb
jmp
dec
sbb
inc
mov
sub
lret
andb
mov
loope
mov
ficoms
mov
mov
cmpsb
jbe
loopne
add
cld
lock
int3
imul
mov
mov
mov
inc
xchg
xor
mov
mov
mov
pop
movl
xlat
pusha
cmp
inc
outsb
popf
sbb
nop
cli
jbe
sub
ja
sahf
jle
stos
movsb
fstpl
ficoms
shl
es
dec
out
mov
inc
or
xor
cmp
pop
sub
fistl
test
inc
push
mov
scas
mov
pop
mov
mov
add
lods
inc
inc
fbld
jl
add
subb
nop
add
xchg
sub
jle
loope
sbb
leave
fsub
lock
lea
mov
fisubrl
movsl
add
aas
pusha
movl
add
je
mov
and
add
xchg
adc
push
mov
or
push
pop
adc
mov
push
mov
xchg
jnp
mov
adc
das
sbb
or
rcr
push
jns
pop
lret
push
push
pop
pop
addl
mov
cmp
pop
lcall
cmp
faddl
sub
rolb
cmp
sub
fiadds
dec
inc
dec
push
cmpsl
int
ret
dec
adc
push
pushf
mov
dec
je
adc
adc
icebp
push
pop
add
lods
out
xor
pop
push
call
push
ja
jae
je
xor
or
scas
loope
pop
test
loope
shlb
ret
add
pop
jbe
cltd
imul
push
or
push
pop
or
sti
imul
xchg
ret
addb
xchg
icebp
cmp
inc
dec
jle
and
add
push
cmp
push
imul
aaa
xchg
push
lods
arpl
pop
push
mov
cmp
dec
or
adc
push
rol
dec
cli
jne
stc
lock
xchg
jbe
jmp
push
femms
movsb
ret
add
cmp
and
cmpsb
sbb
inc
add
sar
dec
add
in
pop
xchg
add
cli
sub
add
icebp
mov
jecxz
dec
pop
fucomi
jae
xchg
popa
sarl
sbb
fcoml
push
mov
popf
adc
inc
or
xor
enter
jnp
jmp
shlb
inc
and
sub
push
xor
add
sub
or
test
fisttpl
insl
or
mov
icebp
fwait
movb
inc
and
out
fsubrl
test
int
lret
or
in
xor
inc
mov
and
imul
popa
add
mov
inc
sub
in
inc
ljmp
daa
je
cmp
lock
xchg
subl
push
nop
rcrl
mov
xchg
cmp
mov
iret
sub
add
xor
aam
clc
mov
je
jge
pop
insb
push
jle
dec
add
and
sbb
stos
push
jne
in
fisubrl
movsb
dec
into
sbb
or
adc
iret
inc
repnz
mov
xlat
adc
sub
jne
inc
sarb
add
and
mov
fwait
push
or
fs
inc
int
add
ret
loop
lahf
push
lods
add
arpl
mov
xor
daa
sbbb
roll
repz
or
xchg
sbb
inc
jle
or
mov
mov
adc
mov
add
icebp
shrb
std
fs
jmp
or
addl
ret
jmp
int3
mov
inc
add
pusha
mov
call
aaa
fdivl
jle
mov
sub
inc
jle
enter
mov
sub
inc
ds
or
add
cmpsl
rclb
sbb
inc
xor
xchg
or
pop
dec
mov
hlt
pop
addr16
lret
cli
fisttpl
sub
fcompl
jge
jl
cmp
jg
mov
sub
pushf
xor
pop
das
mov
aas
add
or
xchg
ret
mov
and
cmp
orps
orl
repnz
lock
or
mov
sbb
sub
lea
xor
fisubl
pusha
pop
mov
adc
aam
and
push
and
mov
lods
pop
pop
add
test
cs
adc
shrl
mov
push
jne
add
mov
xchg
mov
or
jns
jb
movl
adc
lods
sub
and
mov
ficoml
mov
or
mov
data16
ljmp
clc
cli
jmp
shll
lret
into
cmp
sbb
test
jne
mov
jle
ja
mov
ds
jp
mov
push
push
shlb
ret
arpl
cs
pushf
add
fldl
jmp
ret
jae
xor
pop
dec
cwtl
mov
jmp
xor
cmpsl
test
and
inc
jecxz
adc
sbb
add
jg
rorl
jmp
mov
outsl
add
lea
movsb
pop
push
or
push
movsb
or
or
xchg
push
ja
in
push
adc
fwait
rclb
test
xor
or
stos
sub
add
fisubrl
mov
add
lret
sahf
sub
ret
add
jae
dec
mov
je
dec
shlb
inc
and
movsl
add
incl
mov
or
sarl
adc
inc
pushf
pop
jle
adc
push
adc
pop
imul
mov
xor
push
hlt
push
fsubrs
movsl
push
pop
je
fldl
rcll
pop
pushf
notb
sbb
dec
in
ss
pop
data16
insl
xor
aaa
adc
adc
jne
push
iret
repz
divb
or
jne
or
inc
or
jne
or
scas
leave
add
fiaddl
push
fldz
into
fstpl
andl
inc
or
repnz
add
jle
fsubrl
sub
mov
push
pop
and
mov
adc
arpl
test
lea
fstl
jecxz
aaa
jo
push
scas
mov
push
pushf
lea
movsl
ret
mov
cld
inc
lods
inc
loop
mov
mov
pop
in
cmpsl
mov
adc
cmc
out
dec
push
lea
loope
ficomps
mov
adc
adc
mov
inc
nop
jge
jne
cmp
pop
ret
inc
in
dec
loop
or
sti
jbe
scas
fimuls
sti
movsl
pminub
hlt
mov
push
and
movsb
jne
icebp
jnp
shll
movsb
mov
push
icebp
hlt
pusha
pop
adcl
ror
pop
cmpsb
fmull
add
jp
pusha
and
outsb
jl
leave
xor
shrb
outsb
dec
fsubl
or
push
pop
fcmovbe
jb
push
outsb
sbb
jge
pop
mov
je
imul
dec
aad
jge
push
pop
jle
adc
adcl
stos
sub
push
movsb
jnp
clc
mulb
jmp
insl
xlat
and
or
and
pop
add
out
sub
push
lods
out
adc
mov
push
rcrb
push
cmpb
xor
repnz
or
add
insb
cmp
push
xor
add
bswap
push
mov
add
test
or
sbb
push
call
add
popa
mov
bound
adc
fs
popf
xchg
icebp
aad
popf
cmp
xchg
lods
push
outsl
mov
pusha
mov
sbb
lret
outsl
mov
push
and
mov
and
xchg
faddl
mov
push
adc
outsb
and
les
mov
add
and
inc
dec
pop
fisttpll
lcall
cmpsb
add
inc
jo
nop
popa
loope
imul
lea
xor
or
ficoms
inc
jo
shlb
loopne
in
or
dec
inc
es
call
and
adc
in
imul
rorb
dec
dec
int3
enter
dec
dec
dec
mov
xor
dec
lods
test
sbb
jbe
jge
cmp
pop
mov
xor
xor
aaa
movsb
mov
add
sub
ret
shrb
sub
sbb
inc
dec
sub
push
push
mov
and
jns
push
mov
cmpsl
pop
ret
cs
cmp
xor
ret
pusha
fdivr
dec
or
cmp
jle
push
pop
add
fiaddl
pop
shlb
inc
add
or
add
fistpl
and
push
adc
jle
and
or
add
sbb
mov
push
add
loopne
mov
cs
data16
test
mov
jbe
xor
sub
cmpsb
dec
and
jl
aad
add
into
cmpsl
pop
cli
pop
das
sub
das
cmpl
cmp
imul
sub
test
loopne
add
inc
or
or
jle
vunpcklpd
push
fldl
dec
dec
mov
or
mov
pop
push
mov
aas
adcl
ffree
push
push
lcall
dec
add
push
mov
push
les
test
lret
dec
jb
cmp
insb
adc
test
mov
jnp
insb
add
add
mov
sub
movsl
and
mov
movsb
mov
xchg
cs
js
inc
repnz
cmp
aas
xor
add
test
mov
inc
rcll
inc
mov
sub
push
movlps
jne
xor
adc
out
arpl
ret
cmp
lock
enter
arpl
pop
cmpsl
test
dec
mov
mov
fdivrl
cmp
sbb
cmp
push
dec
adc
or
lock
mov
mov
popf
sub
pop
leave
call
push
scas
add
pop
jle
pop
shr
push
mov
arpl
pop
mov
adc
mov
and
cmp
and
inc
jmp
lods
and
push
dec
cmp
inc
dec
loope
adc
push
and
popa
out
mov
xor
push
inc
shl
movl
or
cs
mov
jno
sti
inc
bound
xor
lcall
movsl
daa
movsl
cli
lea
push
and
iret
pop
in
pop
jecxz
push
movsl
sub
iret
fs
imul
dec
pusha
xor
pop
inc
sbb
inc
lods
prefetchw
xor
jp
xor
in
repz
pusha
ret
inc
cs
aam
cmp
lea
or
xchg
push
aaa
movsb
shll
or
pop
xchg
loopne
dec
push
add
add
clc
outsb
and
push
ja
outsb
dec
clc
sub
inc
or
in
or
popa
fadds
pop
or
cwtl
pushf
mov
cs
add
js
adc
and
cmpl
mov
adc
mov
pop
icebp
pop
insb
mov
add
push
push
dec
cmp
cmpsl
xchg
cmpsl
add
push
jle
cmc
add
and
stc
xchg
imul
sbb
mov
add
movsb
push
pop
icebp
lock
push
pop
xchg
pop
pop
popa
inc
or
xchg
inc
ffree
lahf
test
lahf
stos
andb
lea
jb
push
daa
jne
les
xor
xchg
ret
sbb
inc
jno
andb
xchg
inc
or
lahf
add
xor
arpl
les
test
aad
loopne
lahf
or
mov
pop
adc
push
repz
push
lahf
dec
xchg
add
stos
popa
cmp
push
mov
push
fwait
in
or
adc
mov
outsl
jne
inc
cmp
inc
out
insb
incb
les
lcall
shlb
dec
sbb
call
mov
adcl
add
and
je
in
adc
mov
cmp
imul
jle
jo
dec
jp
fadd
xor
add
fiadds
rcrb
jbe
jp
int
cs
mov
addr16
mov
sbb
pop
cmpsl
adc
arpl
shrl
mov
sbb
sub
idivb
fstps
or
aaa
jo
mov
cmp
add
pop
andb
or
inc
shlb
sbb
push
mov
ficoml
andb
push
jl
jmp
aaa
pop
pop
xor
push
test
shrb
xor
jecxz
push
in
ja
cwtl
std
dec
sub
loope
mov
adc
incb
xor
jle
push
sbb
aaa
mov
pop
mov
mov
aad
push
imul
pop
ret
pushf
push
mov
lock
notb
sub
dec
dec
and
add
jge
push
push
jno
ret
rcll
sahf
adc
iret
push
insl
loopne
cmp
cmp
pushf
cmpsb
push
sub
ret
add
jb
mov
mov
fmull
in
sub
cmp
les
aas
into
sti
jmp
sbb
push
movsl
lock
insb
push
dec
out
dec
aam
dec
adc
jmp
adc
pop
pop
sub
push
mov
lret
adc
mov
add
push
add
push
sub
in
leave
xchg
cmpsb
dec
pop
sub
in
sub
xchg
sub
fwait
xchg
jge
negl
sbb
decb
lea
mov
test
dec
xlat
sub
inc
add
aad
lea
movsb
out
push
jmp
pop
lock
sbb
jne
popf
clc
jno
mov
cmc
and
push
mov
pop
jle
nop
sahf
add
sbb
jne
inc
xor
and
sarl
cld
out
pop
mov
push
test
pop
js,pn
jp
fldenv
hlt
jp
dec
outsl
outsl
lods
add
dec
add
decb
iret
mov
dec
add
loopne
push
xchg
dec
es
daa
mov
js
nop
adc
loope
popf
imul
jb
subb
push
mov
sbb
mov
ljmp
jne
or
jo
ss
pop
push
mov
or
pushl
sbb
jmp
repnz
test
add
add
dec
inc
jne
stos
sti
rcll
andl
adc
add
je
mov
add
push
ret
aas
sub
push
movsb
add
loopne
pop
mov
or
outsb
cmp
mov
ja
dec
xchg
out
out
add
sbb
add
adcb
enter
xchg
inc
sahf
pushf
pop
pop
xor
add
dec
pusha
lods
or
cmpb
lret
enter
inc
sub
outsl
or
xchg
arpl
jne
iret
movsb
or
xorb
push
adc
xor
jns
test
daa
daa
iret
inc
dec
dec
enter
push
pop
hlt
mov
and
mov
push
mov
cmp
xorb
iret
mov
inc
and
inc
popf
add
sub
adc
scas
sbb
cmp
or
adc
mov
push
dec
sub
or
push
cmp
mov
xorl
or
fs
lock
and
lea
cltd
xor
pop
xor
push
or
pop
mov
repz
subl
or
cmp
ljmp
push
jb
shll
push
cmp
mov
movsb
pop
or
sbb
adc
fsubp
inc
subb
jnp
sub
dec
gs
cwtl
and
js
jnp
push
sub
cmp
test
and
or
daa
jecxz
inc
push
or
or
adc
push
adc
out
lret
ljmp
and
push
mov
mov
ret
mov
mov
pop
xchg
xor
jge
dec
add
int3
jnp
mov
jge
mov
xorl
out
sbb
dec
aas
add
lcall
adc
add
add
pop
push
pop
int3
inc
pusha
and
sahf
sbb
popf
shll
cmpsb
ret
cmc
je
out
or
mul
pop
es
call
in
add
xor
pop
addl
inc
add
cmp
and
xor
mov
subl
xchg
mov
add
outsl
pop
sub
lea
inc
pop
cmpsb
jo
inc
loop
or
xor
push
dec
xor
sub
loopne
adc
pop
push
xor
mov
push
sahf
cs
mov
popf
inc
call
and
imul
nop
lret
call
xor
sub
int3
add
cli
and
das
arpl
int3
mov
sbb
adcb
shrb
jne
xor
je
adc
xchg
jnp
orl
add
add
sbb
cmp
add
add
inc
inc
out
push
mov
mov
dec
aad
flds
lock
fstps
sbb
fs
xchg
xchg
xchg
or
nop
cmp
lods
sbb
adc
jae
sbb
sub
enter
sti
fstps
les
hlt
ss
and
lods
enter
hlt
push
or
xlat
enter
jp
xchg
xchg
push
fmuls
test
insl
cmp
cmp
jne
lock
nop
testb
clc
pop
cmp
push
aam
or
inc
test
mul
lock
inc
xchg
or
pop
mov
xchg
and
add
adc
cmpb
sub
jle
jbe
push
test
insb
push
mov
xor
dec
sti
mov
stc
and
repnz
xchg
decb
pop
pop
pushl
inc
int
cmp
add
xor
insb
mov
push
dec
dec
add
loope
jle,pt
xor
leave
inc
mov
xor
imul
xchg
jb
adc
jp
or
dec
shll
inc
das
outsb
dec
mov
nop
or
xor
pop
or
inc
test
dec
jne
pusha
xor
repz
cmp
jae
fs
or
mov
pop
mov
and
push
xor
in
inc
mov
enter
shrb
jge
xor
jg
mov
ret
inc
popa
loop
insl
fmuls
xchg
or
pop
in
cmp
xor
inc
dec
add
jmp
shll
imul
in
inc
imulb
xor
lods
xchg
test
stc
push
cld
in
imul
stos
test
pop
adc
mov
je
hlt
pop
mov
dec
pop
pop
dec
repz
nop
adc
or
sbb
xchg
sbb
pop
test
inc
dec
js
mov
push
es
add
push
dec
fsubl
fdivs
or
orl
loopne
ja
lods
shll
sbb
push
scas
dec
add
and
inc
in
xor
jb
imul
or
mov
out
sub
push
sbb
in
hlt
sbb
fcmovnb
push
push
lcall
jmp
imul
movsbl
add
inc
mov
nop
adcb
lods
icebp
jle
add
or
cmp
je
cmp
and
adc
icebp
test
and
cmp
jne
cmp
ljmp
call
jle
dec
and
jmp
mov
xor
dec
inc
and
push
xchg
mov
lret
ds
cwtl
dec
aad
inc
or
xor
cmp
lods
cld
inc
in
jmp
js
xchg
cmp
pop
xchg
mov
shl
mov
pop
or
pusha
cs
dec
xor
rol
scas
cld
or
cmp
je
int
nop
cmp
or
shrb
xchg
fs
sbb
test
jno
imul
insl
imul
jge
push
imul
push
fs
pop
inc
adc
aad
loop
fisubl
push
mov
dec
jns
ja
es
in
xchg
pop
jmp
in
sahf
or
inc
inc
test
add
dec
aad
xchg
cwtl
adc
and
xorb
paddd
push
es
adc
xor
sbb
sbb
jg
push
xor
pushw
xchg
inc
xchg
push
cld
push
mov
mov
add
xor
imul
out
add
dec
sub
test
and
and
cmp
aaa
cmp
test
fnstsw
push
fstpl
aaa
dec
les
loopne
les
adc
xchg
xchg
xor
add
loopne
adcl
add
and
pop
pop
adc
out
sbb
std
jge
pop
clc
and
insl
clc
push
sub
bound
sub
out
fildl
cmpl
or
mov
std
pop
fsub
pop
fsubrp
inc
jge
dec
push
push
lret
pop
jns
and
and
jno
sbb
add
and
xor
push
rorb
add
sub
adc
sub
dec
je
add
imul
inc
insb
or
xor
adc
cmp
scas
inc
sbb
cmp
lods
cld
mov
or
push
push
hlt
in
push
xor
inc
es
sbb
mov
add
mov
insl
inc
sbb
mov
mov
pop
sahf
sbb
sbb
sub
mov
iret
dec
sub
int3
add
jne
int3
add
outsb
jnp
sahf
out
or
call
cmp
xchg
out
xor
mov
sbb
mull
mov
and
dec
ds
fs
add
push
lea
es
xchg
adc
popa
lods
jnp
dec
xchg
xchg
dec
and
mulb
and
push
sub
adc
repnz
movups
lcall
lss
ss
xchg
fucomp
lret
xor
xor
adc
sbb
aas
push
in
and
popf
sbb
mov
or
pop
and
js
add
sub
push
jecxz
sub
sbb
dec
mov
add
or
outsb
or
pop
int3
out
mov
cmp
xor
pop
sbb
out
or
pop
xor
hlt
and
sub
pop
and
inc
and
add
push
or
pop
jne
push
mov
lahf
js
jae
mov
cs
pushf
and
xor
shll
push
fcmovnb
and
dec
jbe
sub
gs
xor
xchg
es
pop
in
adc
and
sbb
add
push
fsts
mov
adc
loopne
inc
sbb
and
dec
inc
shll
push
and
shll
and
daa
js
frstor
aaa
pop
add
mov
and
pusha
jge
jns
mov
push
or
push
mov
sahf
ret
cmc
push
movhps
repz
cmp
xchg
repz
rep
mov
xlat
call
stc
or
sbb
dec
pop
jo
xchg
mov
mov
out
repz
repz
sbb
cmp
fwait
test
outsl
pop
inc
test
push
add
or
inc
bound
in
jns
sbb
pop
sbb
pop
adc
mov
bound
add
jbe
dec
xchg
call
nop
mov
dec
xchg
lods
add
or
adc
lsl
aad
in
pop
call
in
imul
add
pop
sub
push
lahf
out
andb
pop
push
sysret
xor
scas
bound
cld
cmp
pop
daa
lds
pop
test
daa
mov
fsub
push
mov
xchg
cmp
add
sub
les
mov
sbb
adc
push
push
testb
push
dec
and
dec
mov
or
xor
sbb
lods
cmp
push
rcll
dec
adc
push
imul
daa
push
mov
dec
sbb
xchg
adc
iret
rclb
mov
xchg
xchg
cmpsl
or
push
xchg
cmp
add
and
jno
lods
call
lds
xor
add
and
sub
add
pop
add
push
jmp
xor
jp
in
mov
js
popa
sbb
mov
scas
dec
hlt
mov
or
addr16
icebp
add
xor
jl
pop
sub
sub
ds
dec
jle
jo
add
rolb
call
ret
ret
sub
loopne
inc
push
sbb
call
call
jge
pop
add
push
or
inc
pusha
inc
xorl
mov
push
aaa
xor
lret
shlb
inc
lcall
or
add
and
ret
out
lock
add
or
add
push
scas
push
daa
mov
out
pop
out
fsub
hlt
mov
sbb
cmp
cli
outsl
add
add
rol
and
das
or
add
or
and
enter
or
sbbl
or
and
cmp
or
nop
sbb
inc
test
dec
xor
ret
or
es
fdivs
mov
pushf
mov
test
cmp
cmp
push
lock
movsl
adcl
add
mov
in
cmpsb
xor
push
in
push
nop
xchg
push
leave
rcrl
dec
add
or
xchg
add
outsb
mov
cwtl
cmp
add
and
repnz
adc
dec
adc
sbb
mov
adc
dec
cmpsb
or
xchg
dec
test
ret
push
jl
add
dec
adc
jg
and
test
jge
mov
jnp
iret
xor
in
add
enter
jns
in
pop
adc
dec
pop
push
xor
mov
or
dec
xor
test
icebp
in
test
add
mov
roll
add
add
add
jl
orb
sub
pop
adcb
mov
inc
or
outsb
adc
arpl
xchg
adc
mov
ss
or
jo
xor
or
sbbb
add
mov
xor
adc
test
test
loopne
ret
jg
jg
push
leave
push
mov
adc
adc
lret
sbb
push
jle
inc
pop
push
pop
add
xorl
jb
pop
sbb
inc
add
sbb
cmp
xchg
push
je
push
sbb
popf
leave
push
ljmp
stos
inc
xchg
aad
inc
push
pop
in
push
rol
or
shll
stos
inc
cmc
or
push
nop
imul
roll
sbb
lods
xchg
or
or
loop
push
push
push
push
shrb
jb
sub
lods
adc
inc
or
sbb
mov
js
mov
sbb
and
enter
and
adc
sub
fwait
xor
adc
movsb
or
or
lcall
inc
aad
test
push
jno
pop
mov
in
sahf
dec
adc
add
xorb
pop
inc
or
xchg
inc
ret
sub
inc
xchg
rolb
dec
add
xor
adc
cli
call
or
mov
and
cmp
aaa
xor
cmp
mov
jno
xor
xchg
jae
cwtl
adc
aas
mov
xor
jb
push
push
or
shl
add
add
sbbb
ret
jl
stos
adc
add
lock
jne
push
push
insb
shlb
xchg
xchg
cmpl
imulb
push
push
cmp
mov
dec
pop
lods
or
or
roll
mov
aam
addb
in
inc
mov
pop
insl
push
mov
adc
push
add
mov
ds
scas
push
cmpb
add
testb
jnp
and
roll
inc
std
out
push
and
xor
dec
test
sbbb
sbb
dec
je
xlat
add
add
loopne
in
dec
xchg
ficoms
aam
sub
sbb
jecxz
inc
push
test
cmp
adc
xlat
lret
stc
bound
push
arpl
popa
mov
lods
jne
mov
and
push
sbb
call
ja
sbb
mov
mov
sbb
rcl
inc
xchg
cmp
mov
and
sbb
fwait
out
inc
jnp
or
add
nop
ret
cmp
inc
out
fld
push
mov
or
sbb
lret
movsl
mov
jl
add
scas
mov
inc
push
inc
pop
daa
ds
inc
pusha
aaa
adc
push
dec
lods
and
push
push
mov
sbb
enter
popa
xor
adc
jbe
mov
dec
pop
cli
add
mov
jbe
sbbl
sbb
dec
push
pusha
out
popa
out
pop
and
lods
mov
sbb
lahf
shll
adc
xchg
call
test
push
push
inc
sub
test
adc
pop
xor
dec
and
pop
inc
cmpl
add
ret
enter
outsb
iret
test
sbb
jl
test
nop
inc
inc
aad
or
movl
jb
xor
sub
dec
add
add
jbe
scas
gs
and
sbb
push
jns
sub
push
inc
sub
fdivrl
inc
lea
mov
mov
sbb
pop
xor
jmp
icebp
lea
rclb
data16
or
push
andb
or
insb
lods
sub
mov
adc
pop
call
inc
adc
and
shlb
mov
adc
mov
icebp
test
add
or
pop
loopne
xor
in
incl
outsb
mov
xor
sub
cmp
mov
jl
xor
jmp
cmp
add
or
sbb
popa
jp
adc
ret
jg
jle
cmp
je
mov
mov
push
add
inc
jmp
movb
mov
inc
lcall
xor
cltd
pop
idiv
inc
cmp
jbe
repnz
in
xor
pop
pop
cmp
je
stos
cmp
lock
adc
push
outsl
stos
inc
or
loopne
push
test
pop
js
cli
mov
and
dec
pop
cltd
call
cmp
cmp
shr
add
or
add
dec
inc
push
lock
stc
push
lock
hlt
incb
sub
sbb
mov
cmp
iret
cmp
pop
sahf
lret
inc
mov
dec
fsubrl
mov
add
push
jne
push
lock
push
push
dec
pop
lret
outsl
or
or
inc
sti
idiv
or
add
enter
pop
je
enter
jmp
pop
sub
in
jge
out
xchg
arpl
rolb
lea
sbb
lods
ja
and
add
or
inc
in
add
mov
daa
fmuls
addr16
xor
je
jge
jo
or
test
jl
xor
dec
or
mov
es
push
and
shlb
ljmp
xchg
adc
pushf
mov
pop
jo
adc
jmp
sub
popa
mov
rcll
push
lods
adc
aad
mov
adc
pop
nop
lret
sbb
pop
cmp
pop
push
fs
in
jle
mov
push
push
pop
movsb
adc
xor
pop
ret
inc
pop
lock
mov
loop
xchg
js
daa
fsts
push
fdivrs
jbe
jns
cs
loopne
nop
enterw
xchg
xchg
lret
scas
dec
cmp
bound
sbb
add
push
sbb
ja
xchg
lret
lret
push
push
nop
xchg
call
xor
js
sbb
sbb
in
je
out
jns
les
push
push
scas
pusha
inc
cs
dec
imul
cmp
imul
arpl
and
pusha
xor
out
mov
pop
jo
ja
and
imul
xchg
loopne
test
fwait
insb
rorb
and
sbb
xor
mov
push
sub
jo
fwait
leave
mov
daa
jns
aaa
stc
andl
adc
adc
imul
in
test
mov
es
dec
nop
cltd
in
xchg
pop
mov
out
leave
adc
dec
es
xchg
xchg
xchg
fldt
and
xchg
mov
xchg
xor
xchg
dec
test
test
sub
mov
ja
imull
iret
leave
pop
jbe
lock
mov
fsubs
xor
stos
pusha
cld
pop
cmpsl
xor
movb
push
in
mov
in
repnz
xor
jp
mov
adc
pop
rorl
dec
xor
or
sbb
sub
repnz
push
mov
das
int3
shr
fldz
mov
fisubs
int3
clc
add
fmull
cmc
lods
scas
fildl
sbb
pop
mov
or
xor
ret
sbb
pusha
jl
arpl
inc
mov
cltd
or
ds
pop
add
or
pop
inc
mov
scas
pushf
pop
jbe
mov
fwait
dec
and
enter
mov
insl
call
out
add
jge
cwtl
or
xchg
jp
pusha
sti
roll
xchg
shlb
adc
loope
loopne
in
cmp
dec
lods
or
fcoms
insb
int
repz
cmp
sbb
cs
ljmp
sub
add
pushf
or
xor
xchg
add
sub
scas
test
mov
mov
push
xor
jb
in
into
adc
cmc
shll
ret
mov
push
xchg
inc
or
outsl
jmp
cmpsl
test
xor
and
or
repnz
addb
outsl
pusha
fs
add
ret
xor
sbb
sub
sbb
arpl
xchg
jle
test
dec
push
fcoms
add
rclb
pushf
mov
push
cmp
mov
aam
sbb
jmp
neg
sub
or
idivb
dec
shlb
dec
push
dec
cmp
cmp
xor
and
mov
js
xor
movsl
or
sub
mov
mov
movsb
cld
inc
outsb
add
add
pop
inc
xor
dec
je
inc
add
ja
xor
inc
dec
sbb
xor
dec
pop
iret
inc
push
dec
fdivrs
shrl
pop
and
xchg
or
pop
dec
daa
mov
or
movsb
and
rorl
push
sbb
pop
scas
outsb
xchg
clc
imul
mov
push
stc
add
test
test
push
or
std
push
popf
push
sti
inc
ret
push
add
out
and
xorb
mov
mov
pop
aas
or
call
out
loopne
rolb
dec
es
lea
push
lods
mov
fsubrs
cmp
ja
fcomps
cmp
outsl
or
jmp
and
xchg
mov
push
push
enter
rcrl
push
lds
pop
lcall
inc
pop
pop
dec
jb
push
icebp
adc
cs
pop
mov
aam
repnz
jge
push
xchg
int3
cmp
fiaddl
pop
cli
cmc
movsl
xor
push
xor
or
add
loop
jns
push
cld
jo
pop
incl
jl
xchg
jbe
mov
and
test
sbb
and
imul
rolb
or
sub
rorb
loop
pop
andb
in
push
push
xchg
mov
or
xor
faddl
aaa
mov
add
cmp
mov
cmpb
cli
shld
das
fidivl
cmp
loopne
rcll
push
sbb
jl
imul
adc
out
es
pop
cli
test
add
sbb
or
cmp
mov
cmpl
push
jae
fisttpll
cmp
jne
iret
push
shrl
xchg
dec
xor
aam
loopne
pop
sbb
xor
xchg
data16
push
test
and
xchg
rcrb
inc
cmpb
or
and
adc
mov
mov
loopne
adc
push
push
lds
pop
sbb
pop
cmpl
ss
dec
cmpsb
adc
loopne
cmp
int
popa
mov
add
nop
pop
mov
mov
cltd
adc
pushl
mov
pop
les
adc
adc
and
adc
pop
xor
fwait
push
pop
fcomps
cmp
pop
ljmp
fcmovne
fmulp
daa
hlt
push
xchg
aad
push
in
cmp
or
repz
xchg
iret
rcll
or
enter
mov
cmp
xorb
shr
jl
outsb
idivb
sub
and
mov
xor
les
xchg
dec
and
inc
cmp
mov
std
nop
add
pusha
mov
ds
or
mov
push
cmp
ret
xchg
enter
sub
mov
adc
fiaddl
sub
xabort
or
mov
mov
movsb
pcmpeqd
daa
jnp
jbe
popa
jne
ja
sub
xor
imul
pop
sti
in
hlt
cs
int
test
xchg
dec
in
iret
adc
out
jp
rorl
cmp
sub
pop
pop
cmp
push
cmp
in
xchg
loope
cmp
xor
ljmp
in
es
sbb
sub
cmp
pop
or
cmp
mov
mov
push
in
movsb
and
inc
add
add
sbb
or
xor
cmp
insl
jmp
popf
push
add
addb
xchg
jl
jge
scas
xchg
aam
pusha
push
std
xor
and
orb
cli
pavgb
aaa
adc
pop
mov
test
pop
and
cld
aas
je
inc
inc
mov
in
cmp
mov
loopne
pop
xchg
lret
imul
test
push
push
and
lret
or
push
sub
pop
int3
sbb
es
sub
mov
dec
adc
in
stos
leave
rclb
adc
xorb
inc
fs
aad
sub
adc
sbb
add
mov
movsl
and
movsl
jne
fwait
outsb
ret
mov
outsb
out
inc
rcr
xor
sbbl
pop
call
mov
leave
pop
add
out
loopne
mov
cmp
jne
and
pusha
pushf
cmp
push
mov
cld
xchg
mov
add
rorl
std
sahf
scas
xchg
cmp
xchg
fdiv
jge
inc
les
or
nop
jne
mov
call
inc
push
pop
cltd
or
enter
in
or
test
enter
mov
insb
mov
or
cmp
xchg
push
sbb
sub
mov
sbb
or
xchg
sub
jl
xchg
sub
mov
in
inc
pushl
mov
inc
div
scas
push
mov
cwtl
push
push
test
add
sbb
rclb
adc
push
adc
stos
jno
shrl
aam
in
addr16
add
ret
sbb
mov
ss
push
dec
aam
test
sahf
push
and
inc
les
push
or
and
adc
stos
mov
mov
mov
loop
mov
pop
loop
push
les
add
out
adc
adc
mov
enter
inc
sbb
push
frstor
push
or
loop
popa
adcl
mov
or
data16
out
lea
ror
push
xor
stos
jo
cmpl
jnp
ds
adc
push
fdivr
jge,pn
mov
cmc
test
jmp
push
pop
pop
mov
daa
push
xchg
xchg
into
xchg
add
add
adc
or
adc
or
add
xchg
xchg
jmp
cld
adc
jp
mov
sbb
jo
call
ljmp
shll
mov
mov
mov
adc
pop
lcall
pop
outsb
int
mov
decb
add
push
inc
cmp
mov
adc
or
stc
lret
inc
xorb
cmp
notb
mov
call
cmpl
jne
shl
jg
push
xchg
jp
lea
or
xchg
cltd
cmpb
jp
and
jne
sub
aas
inc
inc
cmp
jae
mov
pop
cmp
or
dec
clc
mov
inc
xchg
mov
jmp
incl
lret
mov
mov
sbb
pop
pop
jne
add
test
mov
sub
xor
addr16
pop
push
daa
xchg
push
pop
pop
mov
xchg
test
sbb
xor
ljmp
adc
test
fsts
dec
push
ljmp
sub
and
cmp
or
push
cmp
lods
and
xor
roll
stos
mov
push
mov
negb
ja
pop
pop
push
fisttps
loope
pop
add
sbb
mov
push
mulb
sub
ss
cmp
movsb
sub
inc
stos
add
pop
jp
cmp
sub
sub
cmp
mov
xor
xor
fwait
loopne
pusha
nop
xlat
push
xchg
inc
pop
andl
cwtl
popf
pop
push
inc
or
cmp
add
mov
xlat
in
dec
lock
pop
dec
loop
cmp
out
jge
push
xchg
mov
inc
lea
pop
jb
cmp
jne
add
mov
or
decl
loope
sub
testl
pop
or
add
sub
or
and
movsl
fs
pop
inc
and
pop
test
xlat
fstp
xchg
movsb
adc
cmpb
mov
pop
pop
sbb
stc
mov
pop
or
sbb
push
shrl
push
cmp
jecxz
xchg
es
mov
xor
xchg
sub
or
aad
inc
xchg
nop
dec
inc
push
in
dec
dec
test
sbb
aad
add
ret
adc
arpl
mov
add
aad
addr16
mov
lock
dec
or
sub
push
or
pop
sbb
mov
stos
fs
inc
jbe
jb
sub
out
xor
push
or
xlat
orl
fistpl
fwait
xchg
das
fisttpl
mov
mov
cmpb
mov
fldl
je
loopne
movsl
mov
push
inc
cmp
cmpsl
or
inc
pop
movsb
cs
mov
mov
enter
arpl
sti
inc
ret
fs
insl
add
mov
outsl
test
mov
dec
daa
push
sbb
cmp
dec
sub
ljmp
out
ja
fbstp
pop
cmpl
inc
add
and
xor
or
jnp
ret
or
or
hlt
xor
icebp
insb
pop
icebp
fs
and
inc
enter
inc
lea
inc
insb
stos
xor
push
dec
pop
cwtl
and
pop
push
xchg
push
repnz
and
or
xor
test
nop
or
sub
cmp
insb
fwait
in
dec
inc
push
scas
pop
in
mov
sub
add
iret
mov
lds
xchg
xchg
mov
mov
jb
test
lock
dec
and
das
mov
shrb
sub
and
or
into
out
or
fs
cmp
adc
mov
or
xchg
add
pop
jp
sub
jo
movsl
loop
inc
sahf
lret
lret
add
jo
dec
sbb
pop
or
adc
jecxz
pushf
mov
rolb
xchg
out
sbb
andb
dec
cmp
scas
mov
scas
push
inc
sbb
rcl
xchg
ljmp
add
popa
pushf
inc
fnstenv
pop
nop
mov
sub
test
ficoms
fidivrs
xor
or
test
rcrb
or
sub
push
gs
mov
dec
leave
popf
les
jmp
mov
call
daa
lds
stos
mov
xor
push
sub
or
or
sub
enter
add
loopne
imul
add
fnstenv
leave
or
push
add
popf
xchg
cmpsb
xor
je
mov
push
dec
and
std
dec
sbb
dec
mov
lock
test
push
cmpsb
loopne
or
fsubrl
xor
xor
test
movsl
and
shrl
not
adc
cmp
ljmp
shll
push
mov
or
xchg
pop
pop
repnz
and
shl
xor
outsl
push
addr16
mov
hlt
adc
add
loop
jo
addr16
sub
aaa
mull
leave
dec
adc
sbb
nop
bts
inc
pop
adc
mov
add
fwait
push
sub
add
adc
daa
or
leave
jo
test
jl
popa
lods
movsl
in
mov
adc
pop
out
and
inc
adc
repz
and
in
sub
xchg
je
push
adc
jnp
sub
mov
fcompl
and
sub
aam
mov
lods
pop
lcall
loopne
push
or
mul
pusha
xchg
adc
addl
sub
dec
mov
dec
dec
pushf
mov
inc
add
mov
mov
cmp
add
or
add
lods
sub
cmp
push
inc
rorb
rolb
sbb
pop
aad
adcb
pusha
adc
mov
lahf
xor
push
in
jmp
sub
iret
mov
xlat
sub
inc
pop
sub
inc
lock
adc
push
cmp
dec
cwtl
stos
lods
sbb
or
stos
and
sub
add
insb
adc
movsl
add
fstps
ds
es
lock
sub
mov
lods
add
hlt
pop
dec
pop
dec
cmp
xor
add
or
cmp
cltd
sbb
loope
lods
cld
decb
dec
lcall
aad
cmpsb
leave
icebp
pusha
xchg
outsb
out
lods
cld
stc
xchg
add
jp
das
or
inc
or
sbb
mov
add
add
adcb
pop
push
and
scas
out
mov
sub
mov
xchg
adc
stos
xlat
mov
add
incl
xor
xlat
add
push
mov
push
cmpsb
hlt
adc
insl
outsl
and
sbb
gs
cmp
inc
jb
pop
pop
jmp
packssdw
sbb
sbb
push
movsb
shrb
lock
in
or
push
inc
decl
and
and
mov
adc
aad
nop
or
ds
cmp
scas
sub
rolb
out
pop
push
inc
lcall
insl
and
or
ja
or
cmp
je
adc
cmp
mov
arpl
add
cmp
pop
enter
push
dec
and
xor
jmp
add
test
xchg
jnp
ja
ds
xchg
sub
lock
fldl
xchg
push
add
cld
shll
int3
sbb
sub
sti
stos
mov
add
push
pop
cmpl
xor
jo
push
xor
das
ss
cmpsb
dec
in
cmp
jb
jb
int
cmpsl
xchg
cmp
pop
adc
aaa
cmp
xor
mov
jl
jne
mov
mov
loopne
pop
test
xor
out
mov
in
adc
jne
mov
add
xor
add
mov
rcrb
lahf
push
inc
mov
adc
sbb
jno
js
push
sbb
pop
mov
add
dec
inc
adc
jo
test
add
jmp
push
mov
ljmp
cltd
std
and
jae
jp
add
push
add
in
mov
addl
or
sub
xor
mov
mov
adc
mov
fs
iret
pusha
mov
sub
pushf
adc
sbb
inc
and
sub
std
cs
es
mov
adc
lods
inc
testl
loop
dec
cmpsb
xor
add
ficompl
dec
push
push
roll
inc
add
call
add
fwait
les
push
repz
jne
pop
and
xchg
or
xor
je
rcll
repz
iret
sub
fisttpll
push
push
lret
sbb
pop
fistl
dec
add
xor
mov
jbe
push
pushf
xchg
pop
push
loope
sbb
push
insb
popa
jnp
xor
dec
shlb
stos
sti
or
test
push
push
mov
cmp
mov
pushf
lret
int3
rolb
js
cmpl
movsb
mov
daa
jl
or
mov
mov
pop
fsubrp
nop
xor
add
pop
sarb
mov
sub
cmp
lea
lahf
cmp
adc
sbb
dec
adc
dec
mov
test
and
jae
or
mov
lret
dec
lea
mov
sbb
add
adc
scas
cmpl
pushl
xorl
jmp
popa
fwait
xor
aaa
test
sub
add
push
dec
inc
push
push
daa
clc
xor
xor
mov
xchg
inc
push
or
add
sbb
shll
mov
dec
add
push
or
push
iret
fimuls
xchg
add
inc
jmp
pushl
nop
dec
rcrb
enter
sbb
sbb
fsubs
leave
pop
mov
aam
xor
in
pop
in
je
add
jl
andb
mov
movsb
mov
adc
inc
inc
es
rcr
pop
sbb
fisubrl
xchg
shrb
mov
ret
add
lea
fwait
add
or
test
push
int
cmp
push
sbbl
jne
scas
mov
pop
pop
mov
or
add
je
loopne
adc
cmp
ficoml
inc
test
xorb
pop
inc
cmpsb
rcrl
fmuls
mov
and
or
mov
and
mov
movsb
fs
xor
loopne
js
jmp
ljmp
lods
insl
fdivl
add
mov
cmpsb
jnp
adc
xchg
cmpsb
jnp
inc
xchg
shll
and
push
xor
fs
fdivl
inc
loope
adc
enter
or
cmc
ljmp
fstpl
mov
cmpb
xorb
rolb
ret
sahf
sbb
push
adc
dec
jl
xchg
push
push
adc
push
push
clc
adc
pushl
ljmp
pop
nop
inc
and
inc
inc
pusha
test
movsl
jae
sub
mov
outsl
mov
pusha
cmp
jl
add
inc
jmp
push
out
push
push
inc
in
inc
push
xchg
xlat
mov
jge
popf
pop
xor
jbe
sarb
push
filds
sbb
sbb
sbb
sbb
jae
push
sar
and
sbb
jecxz
jns
mov
mov
repnz
enter
frstor
nop
sbb
dec
adc
dec
not
pop
xor
arpl
and
push
or
inc
and
or
inc
and
dec
dec
imul
in
or
es
enter
jge
int3
outsl
movsl
inc
aas
mov
xor
into
movsb
movzbl
movsl
push
test
in
in
jmp
aaa
xchg
dec
ljmp
rorl
add
ljmp
jmp
iret
fbstp
mov
repnz
negb
dec
stos
movsb
cmp
stc
adc
arpl
jno
push
stos
insb
push
scas
das
mov
jmp
addl
test
pop
into
inc
hlt
shl
sbb
or
das
sar
xor
pop
mov
cli
jbe
or
sbbl
pusha
add
jl
scas
mov
jmp
mov
roll
outsb
roll
ja
pop
xchg
pusha
xchg
push
lock
push
push
ret
adc
push
out
arpl
pop
or
pop
rclb
inc
push
sahf
mov
inc
movl
mov
and
adc
add
call
xor
js
dec
push
push
shr
jo
lods
cmpsl
add
add
add
or
gs
cmpsb
or
xor
mov
adc
inc
mov
push
test
or
inc
cld
and
push
add
xchg
dec
fisttps
lahf
dec
push
and
jl
xchg
in
pop
daa
fs
adcl
xchg
mov
ljmp
sub
aam
aam
adc
test
data16
leave
sbb
add
roll
lret
adc
jo
push
icebp
push
fstpt
jmp
xchg
mov
fidivl
inc
mov
adc
inc
add
lret
adc
and
test
fisttpll
in
adc
mov
mov
sti
xor
and
adc
push
lock
xor
hlt
jne
mov
cmpsl
xchg
nop
inc
push
lea
ret
loopne
cmp
and
test
test
jb
xor
cmp
cs
mov
nop
or
outsb
int3
cmp
pop
icebp
inc
test
lods
jnp
and
inc
in
jne
mov
clc
in
lcall
incl
out
loope
test
push
jo
jge
fcoml
xchg
adc
adc
ret
mov
pop
dec
add
adc
sub
jae
sub
xor
pop
adc
sbb
rep
out
pop
imul
lds
shrl
mov
mov
and
sub
ror
das
mov
adc
xchg
fisubrs
clc
test
mov
ljmp
push
push
cmc
and
outsl
jge
iret
adc
insb
or
push
jge
data16
push
xchg
ret
lock
and
divl
cmpl
jl
popa
lock
andl
ja
mov
mov
add
xorl
jecxz
fdivrs
mov
movsl
dec
jmp
jne
add
divl
push
jmp
call
mov
daa
and
mov
or
mov
mov
and
add
adc
ud1
scas
or
cld
add
adc
inc
mov
ffreep
in
mov
dec
mov
xor
sbb
and
jmp
ss
sbb
cmp
and
inc
ror
mov
scas
ja
push
mov
mov
cmc
and
mov
movsl
loopne
loope
cmp
inc
cld
pop
pop
in
cltd
xor
push
les
pop
mov
inc
cmp
sub
push
xor
jg
inc
lahf
ret
neg
pop
sbb
pop
inc
inc
push
sub
icebp
outsb
adc
loope
pop
test
push
fwait
cmp
mov
mov
mov
jae
mov
sub
push
mov
push
rcl
out
fidivrl
push
jns
daa
cmp
sarb
rol
add
repz
and
sub
cmp
mov
rclb
in
cltd
push
push
sbb
add
daa
popa
fucomip
push
push
insb
incl
les
scas
mov
mov
outsl
push
xchg
sub
aas
inc
sbb
ljmp
mov
rcr
or
es
je
mov
push
ret
push
mov
iret
mov
push
hlt
xor
jmp
rolb
xor
push
addb
add
mov
adc
and
dec
testl
cmc
test
lea
movsb
sbb
pop
clc
jne
loopne
add
mov
cmp
pushf
dec
jge
push
xor
mov
mov
xchg
clc
cmp
mov
rorl
and
cmp
mov
sarb
adc
xor
mov
xor
sti
mov
fwait
pushf
rolb
dec
ret
sbb
push
push
xchg
and
iret
insb
addr16
sbb
xor
mov
cld
dec
push
sbb
push
aam
pop
inc
pop
lock
scas
sarb
cwtl
pop
pushf
sub
xlat
push
push
and
imul
add
cs
pop
repnz
scas
daa
xor
sbb
fidivrl
mov
sub
pop
mov
xor
sbb
add
jg
bound
add
in
pop
icebp
and
or
lock
push
push
leave
xorb
andl
sub
sub
or
movsb
hlt
int
dec
mov
mov
add
les
push
ret
test
lea
jnp
push
jne
sbb
jae
or
rcrb
rorb
cmp
inc
pop
add
sahf
mov
push
repz
scas
sbb
xchg
add
in
ficoml
pop
mov
int
cmp
push
cmc
ss
imul
addb
movsl
rorl
fwait
push
cmp
jbe
mov
call
adc
test
mov
in
mov
mov
into
sahf
loop
vmread
push
and
pop
fimull
js
mov
and
loope
in
push
into
shl
aad
fmul
pop
xorb
sub
jbe
cli
mov
lock
mov
inc
mov
inc
sbb
stc
lock
shr
xchg
insl
push
jl
cmp
insl
or
mov
adc
lea
xor
push
cmp
cmp
imul
and
cmp
pop
mov
aam
pusha
sub
mov
jle
mov
sbb
cmp
roll
outsb
adc
adc
movsb
aas
xchg
dec
in
add
add
sub
fcomps
sbb
ret
insl
xor
rolb
test
push
loop
cld
sbb
hlt
or
cmp
mov
mov
push
shll
mov
ret
fstpt
jl
mov
pop
inc
mov
es
cmp
cs
cld
mov
pop
lods
sbbb
js
jle
pop
mov
sti
rep
data16
gs
jmp
add
cld
movsb
mov
push
mov
aas
std
incl
mov
adc
ljmp
or
mov
jle
filds
movb
cmpb
dec
or
out
xor
pop
jne
dec
in
push
flds
mov
or
inc
mov
cmp
movsbl
xor
add
adc
push
cmpsl
stc
push
in
cmpsb
add
jb
and
push
cld
test
push
push
xor
and
sbb
stos
cmpsb
push
cli
inc
sbb
and
mov
cmpl
ret
or
push
jl
stos
test
jge
aam
mov
inc
add
mov
inc
subl
and
movsl
scas
or
fs
or
faddl
cmp
jl
adc
sbb
mov
fs
mov
lahf
xor
push
dec
cmp
inc
sbb
cs
inc
ret
sub
or
add
ss
mov
stos
loopne
push
xor
loope
shrl
roll
dec
ficompl
clc
dec
loope
jnp
xor
fadds
lcall
in
movsb
mov
add
add
in
in
push
pop
or
sti
in
or
jnp
or
jbe
jmp
jae
jae
or
por
jmp
jae
jae
adc
pop
adc
push
adc
dec
adc
dec
jae
jae
adc
aas
pop
jmp
sbb
xor
sbb
xor
jmp
sbb
es
and
jae
sbb
pop
pop
jmp
and
or
and
or
jmp
and
subps
fs
push
imul
loop
testl
sbb
in
push
jg
pop
arpl
jnp
iret
repz
mov
iret
rep
stos
scas
mov
iret
repz
mov
xlat
cmp
repz
loope
jmp
imul
incl
or
jns
out
adc
sbb
imul
mov
pop
or
and
or
or
push
movups
adc
adc
aam
call
sbb
sbb
push
pop
and
and
aas
dec
mov
repz
sbb
mov
sbb
sarl
inc
inc
popf
addl
repnz
or
xor
or
idivl
mov
lfs
shl
mov
fdivrs
xor
fdivs
sub
push
or
out
mov
xor
add
jl
les
ficompl
std
mov
sub
sub
mov
mov
cmp
jbe
fiadds
push
inc
or
sub
ret
push
enter
aaa
push
push
subl
int3
inc
add
or
js
jge
and
inc
add
lcall
adc
cld
and
push
pop
mov
and
adcb
inc
cmpsb
lock
je
cmp
or
cmpsb
sub
rol
mov
aaa
pop
shrl
cli
sub
xchg
fsubr
sub
mov
inc
jbe
mul
dec
mov
jp
cmp
fimuls
sbb
or
adc
loop
jo
nop
add
xor
sub
xchg
sti
add
adc
push
jle
and
add
push
ja
inc
test
jge
mov
test
inc
daa
jno
sub
das
nop
pop
push
inc
dec
sub
push
push
fs
jp
jo
ja
daa
shlb
mov
add
into
xchg
sub
add
push
jmp
popf
cmp
push
sub
nop
sub
stos
test
lods
fucomi
push
jne
cmp
push
and
sbb
mov
imul
dec
repnz
sub
push
mov
fmuls
mov
jb
mov
push
xchg
adc
or
into
add
cmc
roll
fcoml
cmp
loopne
and
inc
outsb
aaa
push
hlt
mov
xor
notb
adc
es
mov
xor
jne
or
add
in
push
mov
test
popf
push
push
sbb
mov
rclb
mov
push
and
mov
lock
rorl
xchg
pop
or
out
mov
jmp
scas
add
sbb
push
aaa
ljmp
jmp
inc
in
mov
push
rcrl
es
inc
add
loopne
sbb
xchg
insb
loopne
test
push
test
cs
xchg
sbb
inc
and
repz
inc
imul
insb
or
jo
xchg
cld
push
sbb
lock
xor
xchg
clc
lock
push
rcrl
pop
push
adcb
clc
ja
push
inc
adc
nop
sub
insb
add
mov
sub
or
idivl
sub
adc
xchg
ret
dec
loopne
mov
lret
mov
cs
leave
mov
xor
xchg
mov
inc
ficoml
fists
popl
mov
mov
add
pop
pop
add
push
addr16
add
popa
sub
enter
inc
cmp
or
push
insl
sar
jo
mov
pop
mov
xor
sub
cmp
test
dec
pop
ss
mov
aaa
and
xchg
and
pop
mov
inc
and
lret
add
pop
cmp
push
jecxz
xchg
xor
repz
xchg
inc
or
sbbl
call
loop
push
inc
and
inc
lret
cltd
add
mov
popf
push
rorb
enter
and
popa
int3
sbb
xor
roll
shl
ror
lods
dec
pop
enter
mov
mov
aas
and
jecxz
sub
icebp
andl
loopne
stos
lret
int
adc
mov
in
add
sbb
xor
cmp
jne
mov
insl
cmc
inc
enter
arpl
add
push
adcb
jne
inc
dec
cmp
xchg
adc
xchg
cmpsb
push
repnz
mov
mov
inc
sub
and
es
dec
xor
decb
jo
dec
sti
loop
je
nop
push
lock
movb
cmp
roll
mov
sbb
cmp
iret
sbbl
enter
and
xor
cs
leave
repz
and
enter
imul
enter
testl
sti
ret
negl
shl
aam
xchg
fnstcw
adc
mov
dec
push
les
cmp
add
push
shrl
or
pop
push
shlb
push
mov
add
cmp
sbb
xor
stos
pushl
ljmp
fidivl
xchg
hlt
popf
shll
sub
pop
xchg
mov
es
push
dec
sbb
ja
arpl
adc
cmpsb
and
pop
add
push
int3
fwait
xlat
inc
test
xchg
mov
or
pop
jle
loop
cmpsl
push
cmp
fsubs
jnp
mov
sub
sub
add
movsl
jo
faddl
fsts
pop
stos
shl
add
mov
rclb
or
or
movsl
xlat
push
cwtl
test
jg
data16
stos
xor
xor
add
jmp
inc
or
iret
test
cmp
fisttpll
push
out
xadd
sub
in
add
into
cmp
pop
push
popf
pop
push
testb
cmp
cmc
add
popa
push
adc
dec
pushf
jo
adcb
data16
dec
inc
sub
js
rclb
xor
cmp
add
xchg
rcrb
je
pop
dec
xchg
push
push
mov
scas
bound
cmp
js
sbb
add
cmp
jns
fsubrl
add
xor
xchg
add
xor
movb
out
movsl
push
jb
mov
cmpsl
pop
inc
push
cmp
dec
inc
ljmp
lret
jb
dec
loope
mov
insb
jle
cmp
cmp
or
cmp
jne
lcall
cmp
je
mov
sti
or
mov
ret
rorb
xor
inc
dec
cmp
adc
adcb
xchg
cli
sbb
push
in
adc
je
mov
mov
push
push
mov
ss
inc
lock
pusha
cmp
and
pusha
fs
fildl
cmp
sbb
xchg
cltd
jne
mov
push
pop
adc
adc
add
and
icebp
imul
push
lods
mov
daa
dec
iret
pusha
rcrb
fildll
jge
dec
xor
jl
xorl
and
insl
sbb
jecxz
and
pop
in
cmpb
pop
and
and
cmp
xor
inc
sub
into
push
psraw
jle
adc
sahf
aam
repnz
and
sbb
inc
mov
or
dec
adc
shll
dec
rclb
cltd
sbb
xor
mov
or
popf
shlb
and
nop
xchg
pop
xor
cmp
sbb
fs
sbb
xchg
xchg
xor
ror
push
dec
imul
push
push
adc
pop
sub
ret
dec
inc
rclb
adc
jg
cmp
fadds
inc
in
dec
cmpb
in
ds
adc
shl
inc
add
push
push
mov
movb
mov
inc
push
and
adc
movsb
test
lods
mov
pop
cmp
mov
add
add
loope
inc
fs
dec
ja
lahf
enter
rorb
cmp
mov
dec
rorb
pop
fsub
in
xchg
push
es
or
pop
xchg
and
inc
sbb
push
out
je
pinsrw
popf
inc
incl
lret
xor
push
test
int3
sahf
imul
ret
insl
and
xchg
lret
je
jl
and
or
or
jl
cmp
inc
subb
mov
inc
shl
inc
cwtl
repnz
je
dec
jnp
dec
mov
push
or
push
push
stc
dec
sbbl
fildl
xchg
cmp
mov
repnz
lods
sub
and
rorb
cmp
jl
int3
mov
out
push
enter
lret
cmp
sahf
dec
les
pop
lcall
sti
cmp
je
shlb
lret
or
and
enter
call
rcrl
inc
mov
or
xor
sbb
andb
lahf
and
daa
cmp
sbb
js
roll
mov
sbb
sub
jmp
fwait
mov
imul
sub
insl
leave
mov
xchg
push
ret
cmpsb
call
js
push
mov
add
xlat
lret
mov
cmp
jle
pop
jle
into
es
lock
mov
push
push
fistpl
in
pop
cli
sbb
mov
decb
pop
outsl
rcrl
jo
cli
xor
aaa
test
sbb
pop
add
cmp
sub
and
js
adc
xor
jg
add
push
cmp
je
cmp
jne
push
inc
pop
inc
and
orb
xchg
push
rolb
push
push
cli
cmpl
cld
mov
inc
or
xor
out
movsb
pop
add
push
clc
mov
ljmp
or
adc
sbb
xor
shrl
dec
mov
pop
xor
inc
or
hlt
adc
inc
cwtl
sub
std
xor
dec
call
cmp
outsb
les
push
daa
mov
push
push
pop
bound
sarb
jmp
mov
cs
mov
sub
jbe
imul
fwait
push
push
jnp
sbb
les
ss
mov
push
rcrb
call
and
gs
outsb
pop
mov
push
xor
sub
jne
push
inc
lock
in
mov
adc
cmpsl
cmc
insl
adc
mov
inc
and
enter
sbb
mov
xchg
lcall
pop
outsl
dec
loopne
mov
add
in
mov
dec
sbb
sub
mov
stos
push
push
imul
fnstsw
jo
shlb
push
xor
sub
mov
add
lock
or
or
push
sub
add
jmp
or
add
and
or
jmp
inc
jnp
push
push
mov
outsl
push
popa
in
inc
dec
push
clc
mov
jecxz
add
xchg
xchg
lea
dec
push
or
xor
fninit
push
or
add
or
inc
add
pop
jnp
rcll
aad
mov
xchg
int
movl
pop
mov
mov
xor
pop
cmc
push
cwtl
bound
aad
in
into
fmull
cmp
or
push
mov
mov
mov
push
addr16
repnz
sbb
ss
add
push
sbb
add
pop
inc
sbb
xor
and
data16
test
and
jmp
cmp
test
hlt
sbbl
movzbl
sbb
push
cmp
mov
xchg
sarl
orb
sahf
sbb
out
jmp
lods
cmp
hlt
mov
leave
mov
fstpl
daa
and
shlb
add
mov
add
adc
jmp
loopne
bound
lret
push
stos
je
push
dec
outsl
or
adc
orl
in
xor
insl
dec
xor
rorb
jle
or
mov
lods
jmp
pusha
cmp
jo
cmp
clc
mov
mov
pop
mov
subl
testl
or
inc
lods
pop
aas
pop
pop
out
popa
sub
pop
sub
jg
push
mov
test
push
inc
orl
rcrl
jecxz
inc
xchg
push
cmc
mov
inc
push
inc
jp
rorb
or
pop
inc
xorl
push
xchg
inc
aaa
jle
inc
pop
rcrl
sti
dec
mov
jo
je
xchg
sub
xorb
push
ljmp
jmp
inc
mov
adc
xorl
out
add
xor
add
inc
sbb
pusha
sub
ficoms
push
ds
xchg
push
xchg
insb
ds
xor
dec
inc
and
leave
dec
and
test
pop
lods
push
repnz
mov
or
inc
lods
add
and
cmp
and
enter
sbbl
in
push
lods
pop
inc
adc
push
push
loopne
pop
add
sbb
test
sahf
sbb
add
jnp
leave
xchg
adc
dec
sbb
push
jge
pop
and
adc
push
insl
and
dec
xchg
pop
mov
jmp
les
inc
cwtl
mov
mov
add
add
add
fstl
fcomp
fnstsw
add
mov
ffree
test
add
pop
faddp
outsb
fstpl
cmp
add
adc
and
pop
sub
or
or
sub
bound
sbb
sub
or
and
enter
test
lock
cmp
and
push
clc
hlt
inc
adc
int3
test
jp
push
call
dec
stos
inc
xor
mov
insl
imul
pop
sti
sub
sub
fldl
and
out
cmp
fistpl
dec
mov
bound
mov
cmp
xchg
push
add
mov
subb
lret
fbstp
ss
nop
xchg
data16
test
mov
test
nop
sub
into
int3
or
sbb
lods
pop
mov
imul
addr16
icebp
jbe
mov
inc
dec
in
or
push
cmp
out
adc
sar
lahf
out
fimuls
enter
cmpsl
jns
cwtl
cmpsb
xor
loopne
mov
dec
lahf
cmp
enter
xor
lods
stos
ficomps
aaa
je
sub
xor
scas
push
stc
dec
rolb
add
nop
in
outsb
xchg
ret
lods
ljmp
rorb
mov
sub
dec
push
add
negl
or
rclb
rcr
mov
ret
movsb
push
sub
addr16
iret
stc
mov
les
icebp
fcomps
mov
mov
mov
pop
xchg
je
xchg
popf
push
push
sbb
lcall
jmp
cmpl
lods
and
or
cmp
cmpl
xor
add
cmp
in
das
or
js
lret
adc
fdivs
push
mov
pop
sub
add
mov
mov
in
xlat
mov
clc
add
or
aaa
add
cmp
jne
xchg
and
push
cmp
and
jo
jl
inc
stc
cmpsl
repnz
hlt
sbb
mov
sub
mov
out
inc
daa
dec
pop
jb
adc
or
es
adc
or
das
push
pop
inc
popf
lock
lods
adc
adc
fmuls
adc
adc
mov
shlb
nop
add
daa
stc
mov
inc
xchg
fwait
testb
addr16
add
mov
sbb
mov
stos
jo
and
jb
push
pop
icebp
test
or
in
push
mov
int3
mov
inc
inc
jle
sub
jl
mov
and
dec
in
pop
cmpsl
push
adc
xorl
sub
dec
jns
in
inc
enter
mov
add
movsb
push
sub
add
add
and
pop
bound
sbb
or
mov
push
in
in
inc
push
jnp
cmp
test
mov
jno
test
pop
adc
adc
push
cld
or
lods
adc
add
cmpsl
cmp
add
or
jae
test
add
xor
cwtl
js
jno
les
iret
pop
or
outsb
int3
jl
mov
sub
sbb
push
jmp
and
dec
int
mov
sub
es
push
and
andb
add
hlt
xlat
xor
ficomps
loope
imul
je
rcl
aam
ret
aam
and
ret
xchg
int
and
add
into
and
repz
shrb
loope
push
or
sbb
jae
je
cmp
jb
mov
jae
push
fldenv
add
insb
adc
inc
push
dec
mov
roll
aas
dec
push
push
movb
ret
test
add
or
inc
sbb
ficoms
jne
sub
push
cmpsl
aam
aaa
push
dec
repz
pop
dec
add
test
fcompl
and
cltd
inc
xchg
loope
shrb
movsb
or
dec
mull
idivl
adc
jo
cmpsb
add
inc
ret
jp
cmp
cwtl
int
jp
sub
push
mov
push
jo
dec
mov
adc
push
pop
dec
loop
mov
add
stos
xor
add
jns
mov
or
shlb
dec
xor
jmp
popa
and
dec
sbb
cld
ret
movl
in
xchg
and
xor
stos
mov
icebp
les
imul
outsl
loop
and
xchg
jp
cmp
test
add
sti
test
mov
dec
cli
or
es
add
pop
fnstcw
fists
pop
sbb
xchg
daa
shlb
imul
lds
stos
pop
outsl
mov
jne
fidivs
add
gs
lock
fnstcw
dec
mov
mov
lret
mov
add
dec
or
in
push
mov
pmulhw
inc
je
or
mov
orb
pop
mov
ljmp
call
dec
sub
pop
ljmp
fists
lock
dec
xchg
dec
leave
cs
dec
add
lcall
push
or
jbe
ret
sbb
sub
fdivl
imul
in
push
adc
and
insl
sbb
lret
andb
pop
ficoml
and
lret
sub
aam
or
inc
or
in
add
test
adc
call
js
inc
add
cmp
sbb
jl
xor
into
and
sub
mov
add
jno
or
aam
sahf
jle
adc
nop
pop
in
pusha
xor
lods
xor
push
sti
sub
in
sub
mov
imul
mov
ss
test
dec
mov
xor
lret
jge
dec
insb
xchg
sub
sub
pop
cmpsl
or
xlat
imul
add
mov
push
in
mov
lods
ds
push
sub
xor
push
xchg
je
add
inc
dec
in
movsb
mov
mov
cmp
jl
inc
push
sub
mov
dec
dec
dec
add
mov
fcmovbe
inc
fs
insl
loop
ljmp
inc
sbb
scas
fdivrl
mov
xor
push
adc
pop
nop
add
jp
mov
mov
sbbb
cmpsl
jmp
popf
add
or
or
push
push
nop
mov
lcall
and
pop
shlb
aas
inc
add
fidivs
or
add
or
subb
push
adc
mov
or
clc
mov
shll
mov
sub
jno
push
dec
pop
xor
mov
adcb
fidivs
jo
stos
testb
mov
andw
pop
add
divb
xchg
rclb
popf
pop
movl
jge
jno
xor
mov
lds
and
pop
rolb
lcall
inc
push
stc
jae
xchg
loope
pop
loopne
add
lods
daa
int3
cwtl
add
cmpsb
mov
push
mov
popa
into
xchg
dec
shlb
mov
add
or
ja
push
pop
xor
dec
inc
sbb
incb
or
or
cwtl
lea
pop
mov
incb
bound
inc
sbb
testb
dec
push
jge
pop
push
subb
add
cld
dec
push
jp
jno
jmp
fcompl
test
push
cmpsl
sbb
test
mov
xor
add
fs
fimuls
cli
xor
orb
das
push
aad
xor
mov
lods
push
mov
pop
sub
lret
adc
jne
sbb
xchg
push
rclb
lods
mov
jnp
std
loopne
enter
or
lret
stos
add
add
ja
hlt
or
or
leave
fisttpl
push
pop
or
lahf
dec
cmp
mov
jb
mov
and
rcrl
sub
mov
sbb
test
dec
push
xor
lock
push
xor
test
dec
or
ficomps
fs
xchg
test
mov
stos
rorl
lret
inc
mov
jbe
xor
aaa
fimull
aam
mov
mov
or
pop
mov
xor
or
bswap
or
cltd
in
arpl
mov
or
mov
imul
pop
sub
and
or
rolb
sbb
loopne
and
lock
inc
int3
mov
insl
or
pop
jo
arpl
xchg
clc
fstpl
add
js
xor
jns
sub
mov
mov
and
sub
ja
ret
icebp
jmp
cmp
sub
lock
push
scas
add
pop
movsl
les
sbb
add
push
mov
sub
sar
add
pop
push
out
rorl
push
add
cmp
cmpsb
movl
test
movsl
and
incb
adc
dec
mov
jge
test
pop
shrl
movsb
xchg
int3
enter
or
daa
mov
lret
cld
and
ds
iret
mov
dec
in
cwtl
mov
jne
pushl
xchg
mov
push
sbb
jne
push
fisttpll
mov
cmpsl
push
insb
test
sub
add
mov
and
mov
push
and
int3
lea
dec
sarb
test
pop
sub
aam
sti
jae
sbb
push
fadd
push
and
jne
loopne
sahf
mov
push
push
pop
pop
push
je
shlb
out
and
cmp
loopne
jl
es
cmp
push
pop
lcall
imul
subl
and
mov
and
adc
mov
mov
or
lcall
loop
je
mov
in
and
or
and
sub
or
add
insb
jl
mov
add
ja
dec
jle
cmpl
or
or
mov
movsl
je
idivb
and
fdivs
add
into
push
movzbl
xor
orl
pop
mov
add
loopne
inc
and
push
cmpl
pop
mov
subb
sub
lock
pop
xchg
add
add
jns
inc
imul
xlat
fistpl
cmc
ds
cmp
push
mov
jmp
rcll
or
push
pusha
mov
add
sub
inc
sbb
inc
adc
aad
nop
mov
or
mov
in
mov
inc
add
cmp
lret
jno
mov
or
js
out
scas
mov
shlb
or
push
pop
xchg
add
mov
push
and
shlb
lret
or
jno
nop
adc
cli
jmp
shrb
sub
out
hlt
fisttpl
mov
push
aaa
enter
jne
outsl
leave
dec
inc
pop
adc
push
je
or
je
mov
imul
jne
mov
inc
shrb
dec
jne
add
mov
rolb
inc
clc
xor
push
mov
into
xchg
add
adc
sahf
mov
stos
mov
imul
add
jp
mov
mov
rcrl
pop
sbb
scas
pusha
push
sti
ret
cmp
mov
in
repnz
test
xor
sti
add
aad
cmp
lods
or
shrb
xor
scas
pop
push
mov
cs
nop
pop
add
cmp
xchg
xor
fmuls
popf
mov
inc
lcall
cmp
sti
mov
adc
aaa
lea
adc
not
pushf
mov
add
inc
add
mov
add
test
push
mov
shrb
and
loope
inc
sti
cmp
sbb
xchg
push
dec
mov
adc
aaa
mov
test
lock
pushl
cmpb
adc
es
test
cmpsl
sbb
sbb
cmp
push
xor
push
mov
mov
aam
adc
dec
or
adcb
orl
divb
jl
mov
mov
push
iret
imul
xor
out
out
dec
or
inc
adc
push
lcall
jl
shl
push
jno
insb
pop
or
mov
xchg
fs
inc
jo
or
inc
dec
test
cld
cld
or
repz
rol
movsl
mov
inc
idivl
sbb
sahf
and
rclb
xorb
nop
pop
add
jg
fstl
pop
mov
or
lret
inc
mov
mov
fdivrl
push
stos
xchg
ljmp
xchg
pop
jns
adc
xor
je
popa
inc
nop
cmp
lea
xor
in
int3
call
enter
icebp
call
jbe
cwtl
mov
rcll
and
pop
ja
les
pop
cmp
jg
xor
cs
adc
dec
lock
sbb
inc
or
add
add
sub
sarb
xchg
movl
jle
pop
sub
fdivl
lods
or
sbb
mov
xor
cmp
cmp
mov
and
cmp
and
call
and
xchg
mov
jp
insl
stos
or
sub
mov
test
rcll
adc
pop
add
mov
mov
sti
pop
push
or
cmp
xchg
out
lock
adc
or
mov
cmp
adc
out
push
or
dec
mov
and
outsl
lds
pop
sbb
lea
fdivs
and
pop
fucom
push
push
cs
orb
in
jb
fstpt
stos
push
jge
mov
rclb
lea
sbb
in
pop
fsubrs
lods
pop
and
add
or
push
xorb
jns
xchg
dec
push
adc
insb
jle
pop
int
push
popa
add
test
jg
mov
dec
sbb
iret
cli
in
mov
or
pushl
sub
mov
lea
popf
dec
inc
cmp
leave
mov
movsb
test
and
loopne
add
or
orl
xchg
adc
test
push
aad
dec
dec
mov
and
addl
and
les
bound
inc
inc
sbb
push
jnp
xchg
push
jecxz
sub
dec
pop
xor
loope
pushf
pusha
pop
out
push
hlt
pop
cmp
dec
jl
mov
sarb
test
sbb
jne
sub
test
imul
dec
movsb
pop
adc
imul
mov
push
addr16
push
cwtl
sub
sbb
and
ficoms
sbb
arpl
or
add
xchg
jne
push
mov
cmp
xchg
adc
pusha
loopne
dec
btr
dec
xchg
or
add
cwtl
or
dec
in
iret
pop
xchg
lock
xchg
sbb
xor
pop
mov
fnstcw
lcall
shlb
add
sbb
ret
xor
sbb
mov
or
inc
cmp
xchg
jle
mov
icebp
test
rcll
inc
mov
lahf
sub
hlt
orb
sbb
mov
ret
push
mov
aaa
mov
dec
push
dec
mov
cmp
or
xchg
icebp
inc
or
and
aad
ret
jg
mov
add
stc
push
or
push
add
mov
lea
ja
ja
cmpsl
mov
or
pop
adc
xor
fwait
nop
dec
hlt
cmp
jge
fwait
add
test
sahf
jne
mov
pop
inc
sarb
ror
push
imul
jg
stos
je
push
cmp
jne
inc
inc
jmp
pushf
push
fisubrs
and
mov
aas
cmp
cld
icebp
dec
fbstp
lds
sub
xor
mov
rolb
xlat
ret
repnz
or
adc
shl
jne
mov
aam
cmpsb
jmp
arpl
in
push
push
hlt
sub
inc
ljmp
addb
cmp
add
and
push
or
sbb
dec
lea
pop
push
bound
sub
jae
pop
pop
in
mov
push
in
in
gs
sbb
or
shll
lock
push
cmp
xchg
mov
sub
dec
cmp
sbb
movl
push
pop
push
inc
mov
and
sub
mov
fsubl
adcb
sub
incb
add
add
fcoml
cli
and
xchg
daa
cmp
sbb
cmp
rcr
ja
fs
jnp
in
aam
daa
add
or
push
mov
loope
lds
push
fiaddl
push
sbb
push
dec
clc
and
push
leave
or
je
sub
add
jl
roll
outsl
cli
lock
dec
cs
pop
mov
mov
repz
loope
or
popl
push
xchg
jo
fdiv
push
mov
jmp
xor
pop
pop
push
sbb
and
clc
out
xor
sub
adc
cmpsl
jnp
ret
xor
inc
and
outsl
inc
push
push
adc
inc
cmp
push
out
add
xor
jo
inc
mov
mov
add
clc
add
mov
inc
cmp
push
ret
and
lcall
xchg
or
push
aad
add
jo
xchg
xchg
xchg
jne
out
pop
les
adc
adc
push
adc
add
xchg
pop
push
and
sub
out
int3
adc
push
mov
inc
imul
adc
xor
xor
push
push
je
ret
cmc
hlt
cltd
adc
or
push
sbb
jl
sub
je
or
test
es
push
push
loop
dec
xor
sbb
cmp
sbb
pop
cmp
loopne
add
mov
sub
dec
and
or
int3
fcoml
int3
mov
or
shlb
pop
aad
cmp
push
adc
add
test
xor
cltd
push
ficomps
push
and
je
fsts
jl
lcall
sub
pushf
rcl
jle
andl
fcomps
jo
adc
push
addl
jmp
sbb
add
add
xor
adc
cltd
pop
pop
mov
clc
jnp
inc
out
mov
mov
sub
hlt
adc
xor
mov
mov
pop
sub
and
cli
shr
xor
test
inc
adc
mov
fwait
dec
not
cld
lea
xchg
xlat
movl
fmull
cmp
jbe
add
jmp
add
mov
sbb
jmp
cmp
pop
and
jmp
add
inc
push
out
dec
adc
loope
jl
mov
push
lock
add
pusha
xor
pusha
adc
sbb
icebp
xor
push
push
jg
daa
add
adc
xchg
jbe
shll
mov
push
push
mov
fsubrl
mov
aaa
mov
pop
sub
scas
inc
push
inc
cmp
inc
dec
inc
adc
dec
add
mov
stc
jne
push
inc
adc
js
pop
fistps
and
add
cmp
ret
cs
and
push
jg
dec
cmp
mov
shrb
scas
add
xor
push
dec
sbb
dec
xchg
add
add
inc
fwait
sbb
mov
les
push
pop
xor
xchg
xchg
fs
sbb
xchg
cmpl
loopne
ret
jmp
int
add
and
filds
in
cli
lods
cmp
mov
psrld
mov
les
clc
or
push
mov
inc
inc
cmp
es
je
or
mov
mov
or
push
mov
pop
rorb
and
inc
test
add
mov
mov
sbb
cs
or
ja
or
push
or
xor
xchg
mov
push
lret
add
adc
test
daa
push
jmp
orb
sbb
or
cmp
mov
sub
jns
sub
lret
mov
xchg
sbb
fldcw
push
in
or
and
push
add
cltd
testb
sub
add
mov
and
addl
mov
popa
dec
sbb
fs
dec
lods
sub
jns
mov
cmp
mov
stc
push
loop
pusha
add
dec
or
jp
jmp
mov
or
shr
add
or
xorb
push
out
jp
jle
in
adc
adc
ds
cmpsl
inc
and
add
xor
pop
adc
insl
or
mov
aaa
lods
out
ss
jge
sub
jl
fisttpll
jl
mov
mov
movups
jns
test
je
aas
xchg
fs
pop
jb
jg
cmp
jb
and
sbb
shll
push
nop
inc
mov
movsl
mov
pop
aad
jbe
aaa
adc
insl
les
inc
pop
jmp
popa
loope
adc
adc
pop
cmp
and
add
sub
and
pop
push
lds
fsubs
cmp
adc
pop
jne
add
dec
ss
or
mov
hlt
lods
pop
negl
pop
loope
inc
mov
mov
inc
lock
add
daa
jns
and
and
and
and
inc
lods
test
nop
xlat
dec
daa
daa
xchg
add
lods
pushf
add
fdivrl
les
sub
cmp
add
arpl
sbb
xchg
orl
pop
add
insb
ret
push
push
mov
and
push
jnp
mov
xchg
jno
and
inc
jne
cmp
dec
add
adc
ss
push
cwtl
rclb
clc
and
cmpsb
sbb
sahf
mov
sbb
pop
stc
enter
aam
mull
xorl
daa
mov
push
mov
mov
mov
test
mov
lods
loope
and
das
lods
mov
lods
nop
daa
lods
insb
and
xchg
xchg
popa
sub
cltd
movsl
adc
dec
add
test
cs
xor
mov
movsl
sub
test
popf
mov
push
xor
mov
push
fstps
mov
inc
add
repnz
in
mov
or
jecxz
sbb
scas
and
bound
les
ret
iret
mov
or
dec
lods
rorb
lock
xchg
push
sub
pop
inc
jne
flds
add
scas
jge
loop
adc
dec
adc
adc
rolb
push
fldcw
dec
sub
inc
js
adc
sub
dec
loop
xor
cmp
inc
cmp
sbb
mov
cltd
jne
lods
fs
adc
push
dec
add
add
fldt
cmpsl
in
lods
and
add
mov
add
test
push
sbb
inc
dec
jp
shlb
clc
scas
add
inc
scas
mov
call
rclb
sub
and
scas
add
call
stos
xor
push
adc
pop
sbb
ficoml
jg
mov
outsl
adc
cmp
add
mov
iret
adc
mov
cmp
shrl
jmp
sub
inc
xchg
scas
test
sahf
adc
mov
sub
enter
dec
xchg
xchg
lock
test
stos
dec
inc
sub
push
inc
mov
add
jbe
pop
movsb
outsl
xchg
addl
cmp
shl
inc
es
adc
sub
add
mov
dec
add
mov
insb
lds
mov
les
inc
dec
jb
clc
adc
push
cld
leave
xchg
or
in
js
xor
sub
cli
add
jno
call
push
test
dec
stos
jno
in
test
sahf
aaa
dec
xchg
or
xchg
inc
repnz
and
add
lods
jno
jne
push
incl
test
push
cmovno
outsb
push
ljmp
repnz
ja
jl
dec
je
or
and
je
pop
arpl
in
adc
ds
inc
fdivs
cmc
jl
mov
nop
dec
adc
js
loope
sub
test
push
in
push
shlb
mov
dec
movsl
lea
adc
fadds
std
call
mov
hlt
rolb
and
pop
push
jmp
in
insb
fsubl
fstpl
je
imul
adc
adc
leave
xor
cmp
or
xor
or
xor
or
mov
and
frstor
or
push
addr16
rclb
xchg
cmp
mov
dec
imul
and
lods
rolb
enter
outsb
lret
in
mov
daa
inc
cmp
adc
sbb
adcb
ss
movsl
in
repz
push
add
andl
ret
mov
popa
dec
jecxz
loop
ror
outsl
movsb
addr16
das
sbb
xchg
xchg
enter
mov
inc
jae
decb
mov
push
into
bound
rcrl
imul
cli
or
mov
jle
push
add
push
iret
push
dec
outsl
lcall
sub
sub
inc
lea
push
sub
push
add
and
push
push
adc
jp
push
adc
lods
inc
or
pop
mov
dec
dec
cmp
or
xor
or
or
xchg
aaa
mov
jne
mov
sbb
int
sbb
lcall
lcall
and
mov
cmpsb
jmp
ljmp
or
push
mov
adc
decl
mov
adc
shll
dec
jl
and
adc
fisttpll
loop
in
mov
cmp
sub
mov
and
dec
cmp
push
bound
add
and
lock
inc
arpl
test
push
sub
pop
les
adc
cmpsb
jns
in
mov
ljmp
leave
enter
jae
sbb
dec
cld
push
movl
add
pusha
push
xor
lods
cmp
inc
mov
cwtl
push
xchg
and
sub
and
cmp
outsl
mov
inc
add
pusha
insl
out
es
inc
lcall
or
sbb
lods
jo
ficompl
mov
add
shll
sub
or
in
cs
push
adc
in
adc
int3
jmp
dec
loopne
data16
sbb
jns
repnz
pop
adc
push
xchg
loopne
push
scas
test
and
xor
pop
push
movb
dec
test
jmp
test
pop
add
insb
xor
pop
inc
mov
inc
pop
push
pushf
pop
cmp
and
push
insl
test
push
cltd
jmp
inc
xlat
pop
cmp
cli
jcxz
mov
sub
sbb
clc
daa
jg
mov
inc
and
mov
lahf
movl
mov
xor
mov
or
push
loopne
push
dec
pushf
dec
enter
add
ja
sti
in
push
pop
inc
push
bound
fidivrs
mov
ror
push
aad
xchg
sbb
addr16
arpl
xchg
pop
push
outsl
push
push
insb
aam
cmpsb
jo
loop
aas
mov
mov
mov
xchg
xor
jo
test
or
nop
mov
outsl
in
push
inc
nop
test
in
std
mov
loopne
aam
mov
inc
sub
push
mov
inc
mov
mov
icebp
push
lret
adcl
int3
clc
or
mov
lcall
sbb
adc
mov
sti
je
push
jge
mov
push
jl
push
sbb
jbe
push
mov
xor
mov
xor
adc
ret
into
les
and
dec
sbb
movsb
dec
rclb
mov
xchg
sbb
cmp
mov
sbb
iret
cmp
repnz
xor
in
add
adc
shrb
loopne
subb
push
stc
pusha
or
in
rolb
and
repnz
mov
cld
mov
push
cmp
jle
je
bound
xor
mov
adc
adc
jmp
mov
push
in
push
mov
adc
add
sbb
mov
pop
int3
call
dec
inc
enter
push
ret
and
xor
pop
add
int
adc
mov
aad
pop
and
fstl
leave
push
add
push
push
lret
dec
ret
sbb
sub
mov
add
adc
into
mov
adc
jp
shrb
push
lea
push
sbb
and
lea
sub
inc
xchg
mov
push
push
cmp
in
stc
shl
je
out
sbb
push
pop
and
repnz
pop
loopne
xchg
cmpsb
sbb
dec
push
cmc
sbb
pop
dec
fwait
sbb
in
pop
mov
mov
adc
mov
add
imul
mov
mov
push
add
inc
ret
shlb
insb
push
hlt
dec
cmc
ret
imul
mov
insl
pop
jge
mov
lahf
in
add
int
or
adc
or
inc
xor
call
aam
lods
add
add
inc
xlat
cmp
or
add
loopne
dec
js
sbb
pop
cmp
add
xor
rcrl
xor
js
fcmovnbe
jo
pop
adc
aaa
ret
and
in
xor
ljmp
dec
pusha
mov
rol
mov
ror
xor
shr
xor
sub
jnp
fld
ret
or
or
icebp
add
add
add
mov
cmp
push
xorb
mov
and
not
and
xor
add
add
mov
outsb
sub
jge
add
push
jno
add
cwtl
repnz
cli
fidivs
testl
cli
and
and
xchg
push
inc
sbb
cmp
push
repnz
ljmp
sub
fmull
sarb
or
xlat
ret
cmp
push
sbb
rolb
testl
hlt
add
dec
push
mov
in
push
sbb
call
push
xor
sub
out
repz
cli
mov
rol
rol
out
add
out
add
push
xor
and
fsub
in
sub
inc
lcall
or
push
cmp
shl
in
or
bound
and
or
push
bound
pop
add
pop
aaa
cmp
xor
push
rcll
cltd
call
loopne
sbb
dec
shl
call
sbb
loopne
xor
pop
cmp
aam
jbe
lods
xor
xor
jge
or
int3
push
mov
lcall
xor
and
and
in
sub
or
xor
and
cwtl
push
test
lock
and
mov
jb
mov
inc
jo
ret
push
jo
ficoms
add
mov
movsl
pusha
je
xor
mov
iret
push
loop
mov
imul
add
add
pop
jbe
sti
rcll
call
lretw
rsm
sub
clc
jp
push
and
mov
lret
cmp
nop
cmpsb
imul
popl
lret
inc
mov
ret
fcoms
or
cli
stos
adcb
aam
aaa
cmp
shll
and
inc
in
and
call
fstps
add
push
or
push
cli
xor
xor
lcall
dec
inc
imul
sub
xchg
pop
lahf
jo
add
push
orb
push
xor
add
dec
lcall
push
xchg
pop
mov
push
add
or
adc
cmp
and
push
push
pop
add
dec
cmpb
xchg
or
push
pop
rcrb
push
mov
push
add
xadd
or
inc
lcall
nop
pop
pop
sbb
imul
and
pusha
xchg
xchg
pop
mov
adcb
dec
jno
arpl
fs
adcl
pop
fs
cmpsb
imul
stc
cmp
stc
mov
adc
inc
dec
mov
outsb
loope
inc
dec
testb
imul
jns
push
cltd
sbb
jo
adc
in
add
add
sti
lret
inc
adc
es
jg
push
push
out
pop
add
sub
mov
fisubrs
pop
cmp
jb
add
popl
pop
lea
mov
outsl
outsl
cld
add
sub
lea
pop
xor
jmp
test
enter
sub
sti
mov
sarb
add
rorb
or
jne
lock
rorb
fwait
jbe
mov
xchg
int3
inc
jae
mov
sub
or
jno
outsl
xor
mov
lea
jmp
fidivrl
mov
push
sub
pop
add
ret
dec
or
mov
dec
jne
pop
add
les
loope
lock
out
dec
sub
xchg
sub
mov
cmp
jbe
mov
cmp
fs
jne
jbe
lea
or
jae
push
pop
fadds
rep
or
std
into
sub
mov
or
mov
mov
outsl
pop
loopne
mov
int
push
xchg
or
xchg
ljmp
adc
mov
push
loop
xor
jns
fsubs
push
inc
push
outsl
xor
dec
sbb
jge
sbb
sbb
ja
adc
push
add
in
inc
add
dec
lea
in
xchg
dec
adc
inc
or
lahf
mov
cltd
jecxz
and
sbb
jbe
sub
mov
leave
test
pop
or
dec
pop
pop
and
jmp
add
jecxz
or
movl
and
or
mov
xchg
mov
sub
push
stos
push
sbb
aad
or
or
les
pushf
outsb
ljmp
fcmovb
mul
hlt
andl
or
addb
jnp
scas
mov
sarb
sub
add
dec
sub
in
jb
dec
insb
fs
push
push
mov
ja
outsb
mov
sti
mov
leave
dec
adc
adc
push
xchg
ret
xchg
sbb
jnp
push
sbb
aam
xor
sti
jns
pusha
ljmp
add
sub
dec
inc
shll
and
dec
inc
xchg
sub
inc
jecxz
ret
orb
ffree
or
dec
call
and
sub
inc
mov
push
jnp
scas
cmpsb
inc
jno
mov
cmp
enter
pop
les
data16
andl
inc
adc
mov
fsubrl
cmp
pop
in
or
loop
inc
cmp
sub
pop
add
cmp
mov
fmulp
nop
adc
test
sub
incl
fdivrs
cmpsb
and
adc
mov
xchg
in
lock
dec
fsubs
add
lock
orl
es
imul
fcom
pop
push
add
add
ss
inc
arpl
inc
mov
xchg
and
in
pusha
inc
jle
out
lods
nop
xor
jl
pop
in
mov
cmpsl
test
cmp
in
jo
push
das
fucomi
sbb
mov
test
jecxz
inc
adc
and
add
dec
add
cmp
sbb
mov
inc
ret
mov
je
xor
lea
or
or
add
lea
mov
cmc
fwait
adc
call
sbb
mov
enter
adc
addl
pop
shlb
jle
sbb
mov
scas
into
pop
sub
xorl
push
test
daa
sub
int
dec
loopne
or
inc
xor
pop
jbe
inc
mov
xchg
mov
ja
dec
mov
and
insb
loopne
cli
inc
sarb
mov
das
pop
push
adc
jae
jne
dec
dec
mov
rorl
js
jmp
mov
mov
sub
and
test
dec
ret
mov
mov
test
arpl
xor
enter
test
push
add
mov
cmpsb
mov
loopne
je
cmp
mov
xchg
push
iret
stc
xor
roll
daa
push
push
leave
pop
adc
cmp
mov
sub
adc
sub
and
push
lock
aam
subl
sub
jo
je
cmp
jbe
jns
stos
sub
or
add
mov
xor
in
and
scas
ret
or
lods
cld
lds
push
push
lcall
xchg
inc
in
ficoml
arpl
clc
repz
push
or
pop
or
iret
jmp
push
cli
xchg
iret
adc
jbe
mov
aaa
push
cmp
dec
push
gs
jbe
push
es
or
mov
cmp
cmp
lcall
and
adc
cmc
ss
push
je
fsubrl
in
add
sbb
lea
pop
add
or
mov
int3
scas
adc
insb
inc
ret
cli
xor
out
push
ss
cld
pop
pop
mov
in
ret
pusha
and
sbb
es
push
xchg
orb
pop
mov
aam
in
sbb
mov
push
jae
push
adc
mov
out
jb
jmp
test
adc
mov
or
sbb
scas
xchg
xchg
sub
rcll
movsl
and
adc
push
cmp
cmp
mov
sub
xor
movsl
jecxz
lea
sbb
push
xor
push
std
hlt
mov
imul
xchg
inc
dec
adc
aam
jne
cs
sbb
shr
sti
add
dec
or
push
sti
subl
add
cmp
jne
gs
les
iret
jbe
add
push
dec
cmp
inc
cmc
inc
and
or
insl
push
inc
scas
and
lcall
and
push
mov
adc
or
sbb
push
and
popa
fiadds
loopne
subl
inc
inc
mov
sar
sub
cmp
shlb
dec
das
adc
sub
add
add
add
sahf
push
insb
pop
int3
inc
jno
out
add
add
mul
mov
daa
adc
adc
lret
jb
xor
xchg
rcll
js
inc
push
ret
fs
add
and
mov
pop
mov
and
pop
mov
mov
push
fidivrs
add
shlb
sub
addl
or
inc
cmp
xchg
mov
je
sub
clc
popf
add
add
movsb
sub
lods
test
movsl
nop
and
xorb
pop
push
or
in
hlt
add
fildl
rcll
inc
add
je
inc
add
pop
xchg
inc
dec
orb
movsb
popfw
or
push
enter
hlt
jo
jo
dec
pop
cmp
and
mov
aam
add
adc
sub
lea
inc
and
push
dec
cmp
push
test
shrl
push
cmp
xchg
push
sbb
pop
pop
xor
cld
cmp
mov
sub
push
cmp
mov
adc
add
ss
cmp
xor
ds
out
subl
cmp
ja
xor
ss
jb
adcl
test
loope
mov
adc
jle
sub
into
mov
inc
mov
lods
pusha
hlt
pop
or
or
jmp
insb
push
mov
scas
mov
dec
iret
push
jmp
or
daa
dec
push
inc
dec
mov
data16
int3
lods
dec
xchg
mov
shr
dec
xor
pop
enter
lahf
mov
pop
cmp
shll
es
pop
inc
dec
xor
das
xchg
mov
push
jmp
lods
int3
in
loope
sub
shrb
jo
in
sub
or
add
in
jno
jb
and
mov
hlt
xchg
test
shrb
stc
mov
fistpll
mov
mov
or
mov
jl
inc
cmp
mov
jp
fstpt
sub
fidivs
clc
pop
adc
movsb
nop
sub
popa
lahf
in
in
mov
adc
mov
pop
cwtl
xor
xchg
adcb
mov
jne
pop
and
orb
or
pop
push
int
jnp
incb
rorl
mov
or
dec
out
pop
xor
pop
push
fsubrl
add
imul
cli
scas
pusha
cmp
mov
fnstcw
jge
je
jno
jge
sbb
jno
jle
pop
push
adc
adc
loop
out
cmp
push
inc
cmp
jl
aam
add
push
add
sub
in
jle
shlb
push
pusha
sub
ljmp
inc
lock
inc
int
adc
sbb
push
jp
outsb
mov
mov
sbb
jle
push
add
xor
flds
fcomps
push
das
add
mov
mov
sub
push
jl
mov
lock
sbb
inc
mov
adcb
mov
das
nop
adc
pop
mov
mov
add
pop
inc
add
in
inc
mov
adc
idivb
inc
les
lahf
cmp
mov
jmp
fstpt
arpl
pop
or
sbb
sub
or
jne
xor
in
inc
mov
jne
or
xor
in
inc
xor
mov
hlt
test
popa
mov
mov
mov
mov
rclb
shl
and
add
jg
mov
enter
shl
add
and
shl
xor
mov
mov
sbb
dec
icebp
fdivrl
mov
add
push
xchg
add
mov
inc
jmp
pop
adc
jge
dec
lods
mov
ret
aas
and
push
adc
add
shlb
xor
push
imul
add
lock
sub
mov
pop
cmp
popl
idivb
xchg
sub
pop
mov
fnstcw
lods
push
outsl
dec
clc
add
lock
adcl
push
lcall
and
icebp
gs
push
lahf
stc
in
pop
test
sub
int
cmp
add
cmp
jl
roll
and
je
daa
adc
add
xchg
pop
dec
lods
call
push
mov
pop
lock
push
mov
lods
test
fidivl
jl
es
jle
push
xor
roll
stos
xlat
out
iret
and
sub
xor
es
cmp
xor
adc
sbb
push
loop
test
and
adc
add
xchg
push
orb
test
dec
dec
dec
in
pop
adc
loop
and
push
movups
test
and
lcall
or
es
dec
adc
in
fs
dec
mov
ficoms
push
adc
add
and
es
cmp
dec
outsb
push
stos
mov
mov
dec
addl
testl
xor
pop
add
pushf
sbb
aaa
inc
adc
sub
sub
adc
outsl
test
int
ss
mov
es
and
enter
pop
push
mov
pop
push
les
or
in
jmp
push
js
mov
rorl
fnsave
cmp
sub
cmp
mov
mov
mov
pop
add
add
adc
out
dec
or
test
pop
gs
push
jno
mov
cmp
in
push
dec
mov
xor
pop
push
ret
adc
fnstenv
jecxz
cmp
sbb
loopne
push
lea
lods
dec
stos
in
aam
and
and
or
pusha
cmp
cmp
dec
jmp
mov
sub
lods
or
repnz
testb
fsubs
incl
rorl
add
xchg
xor
mov
clc
nop
mulb
sbb
mov
popa
jb
insl
pop
and
adc
pop
icebp
addb
pop
ret
mov
or
pop
jmp
rorb
rclb
push
or
sarl
xor
cmp
add
sub
mov
shll
clc
lea
xor
cmp
bound
lods
mov
sbb
cli
or
cmp
xor
push
push
adc
dec
mov
mov
nop
mov
mov
ds
or
pop
or
or
adc
mulb
ja
sub
add
insl
int
enter
and
or
xchg
xchg
push
adc
fidivrs
mov
inc
or
sahf
sbb
cmpsl
or
push
and
loopne
cmpsb
mov
pop
inc
mov
push
mov
push
sbb
ret
jl
insl
inc
jmp
xor
and
push
mov
addr16
push
push
push
enter
mov
and
out
movsb
xor
out
push
adc
mov
sbb
sbb
mov
pop
ret
mov
mov
inc
xor
jne
push
pop
xor
repnz
mov
nop
jo
mov
and
nop
aaa
test
fadd
imul
jp
push
push
das
and
xor
clc
or
inc
imul
cmp
push
sti
pop
push
out
cmovle
mov
pop
push
aam
lea
push
push
push
sbb
jmp
inc
sub
cwtl
push
dec
gs
sub
dec
add
mov
sbb
incb
es
and
lods
test
inc
xchg
in
testl
add
push
movsb
mov
sub
hlt
sbb
jne
test
mov
ja
shlb
mov
cld
pop
sbb
sbb
add
inc
roll
and
sub
push
mov
pop
cs
inc
jae
jo
inc
andl
out
cmp
jle
enter
rcll
dec
fisubs
movsb
aad
cmp
pushf
dec
fnstsw
in
xchg
pop
shrb
mov
rorl
mov
sbb
sub
fsub
test
push
movsl
jo
push
in
adcb
jno
jo
jo
mov
jmp
or
add
pushf
add
push
ret
arpl
fwait
add
scas
imul
mov
push
xor
inc
push
mov
lock
dec
sbb
dec
jo
data16
fidivs
push
push
aas
or
jg
jl
xchg
nop
sub
inc
jo
jne
sbbl
add
jne
add
cmp
jl
mov
cli
hlt
lret
xor
loope
adc
add
jl
jle
pusha
cld
cmp
lret
jne
and
call
movl
mov
cmp
push
xchg
mov
jo
lods
mov
jbe
sarl
sbb
pop
call
adc
testb
je
cmp
mov
add
mov
fsts
test
push
cmp
mov
jmp
sub
and
inc
push
mov
push
adc
ja
cmpsb
pop
add
add
mov
sub
imul
rcr
popa
sub
push
add
mov
jnp
pop
add
pop
in
push
push
cmp
incb
push
pop
mov
push
add
push
adc
je
loop
adc
jae
dec
and
out
xchg
mov
mov
aas
dec
ret
adcl
xor
das
jg
add
or
orl
movb
dec
hlt
lahf
cmp
fistps
ficomps
mov
sahf
jo
lods
sub
and
push
pop
jne
jo
imul
mov
dec
imul
add
mov
xchg
sbb
or
inc
mov
push
ss
adc
push
dec
pop
or
jo
call
dec
add
push
push
sbb
pusha
arpl
je
adc
pop
subb
jmp
cmp
pop
mov
and
scas
rcrl
std
add
mov
jae
ds
or
testb
or
cmp
sbb
or
loopne
loop
sbb
roll
add
cmp
clc
sbb
lea
push
sbb
pop
cltd
mov
mov
sub
enter
sbb
leave
lret
sub
jl
xor
les
pop
std
jno
sbb
adc
stc
jmp
xchg
xchg
or
add
sbb
mov
imul
sqrtps
pop
xor
xor
pushf
cld
mov
xchg
xor
sbb
sbb
enter
cmp
adc
int3
out
std
cwtl
adc
push
aaa
nop
inc
movsb
sbb
push
hlt
fucomi
popf
lea
cmp
push
mov
stc
cmp
jae
mov
jl
std
addl
cmp
jne
scas
add
pop
push
adc
dec
mov
mov
cs
flds
mov
pop
xlat
xchg
add
aaa
les
jae
cmp
cmp
arpl
add
in
jbe
les
inc
addl
pop
add
sbb
jl
cmpsb
adc
and
xor
push
sbb
sbb
or
je
mov
sti
dec
jmp
loopne
xchg
cmp
or
add
push
pusha
and
sub
xchg
mov
pop
rcl
nop
push
sbb
hlt
jo
mov
mov
cmp
and
mov
arpl
xchg
or
cli
pop
inc
or
inc
add
or
xorps
pop
cmp
dec
sbb
cmp
out
out
lcall
cltd
jmp
xor
outsb
dec
rcrl
push
rorb
adc
ss
mov
and
pop
shll
sub
dec
push
cltd
lods
push
push
xchg
or
lea
lea
mov
sub
xor
mov
loopne
lods
into
mov
add
pop
leavew
das
push
inc
loope
fldcw
mov
cld
pusha
dec
adc
cmp
subb
dec
rorb
adc
in
pop
mov
mov
xor
das
mov
jae
loopne
ljmp
fadd
ljmp
ljmp
pop
or
jo
xor
or
adc
xor
sub
aad
imul
add
stos
and
push
dec
adc
or
test
inc
xor
and
loop
and
cmp
xchg
pushf
insl
andb
mov
pop
push
cmp
or
jns
dec
aad
test
ds
pop
stos
or
pusha
push
subl
mov
push
and
xor
pop
mov
jbe
or
cwtl
inc
cmp
jbe
insl
jmp
aas
pop
cmp
loop
popa
pop
or
in
jle
adc
dec
dec
pop
dec
aad
and
in
pop
ficompl
pop
movl
ja
in
jmp
add
cmp
stos
adc
in
add
pusha
inc
dec
mov
xchg
inc
clc
dec
push
cmp
mov
je
xchg
aaa
add
cmp
je
mov
icebp
adc
popa
mov
pop
ds
testl
jmp
fisubrs
fistpll
shll
sub
adc
ds
jae
dec
loopne
add
sub
mov
cwtl
sbb
sbbl
and
push
sub
xor
sti
push
into
mov
repz
mov
adc
sbb
repz
pusha
xor
jo
ret
mov
xor
inc
sahf
cmc
dec
loopne
int3
adc
jmp
mov
ret
fisttpl
add
fidivl
sbb
add
out
add
inc
push
lds
test
lea
mov
rclb
inc
cmp
pushf
gs
adc
sahf
inc
push
out
jb
mov
push
cmpsl
sbb
shl
dec
xchg
outsb
xor
pop
bound
pop
inc
test
add
flds
dec
jg
mov
pop
jp
pop
rolb
sub
and
push
addr16
lret
loopne
sub
mov
cmc
mov
cmp
jbe
cld
mov
adc
insb
push
sub
inc
test
jp
pop
jb
cmp
das
cmp
test
jns
shll
jp
outsb
sub
cmp
aam
jne
xlat
fs
cmp
adc
add
ja
insb
dec
add
add
lods
mov
adc
push
push
adc
loope
inc
cmp
je
inc
push
and
push
outsl
jne
fisubrs
aad
loopne
sbb
push
movl
aam
rolb
or
jmp
sahf
roll
push
dec
adc
add
or
xlat
and
mov
or
pop
je
jmp
or
push
push
movl
cwtl
mov
mov
xchg
mov
sub
push
or
mov
sub
cli
jg
jmp
pop
and
jecxz
or
dec
nop
pop
icebp
jnp
mov
mov
mull
cmp
mov
leave
add
adc
push
dec
andl
test
leave
dec
inc
sbb
movl
orl
mov
add
inc
pop
rolb
out
adc
pop
add
pop
dec
test
mov
sbb
addb
jmp
dec
push
out
test
fdivrl
jmp
adc
stos
cmpsb
outsb
test
xchg
cld
ss
jb
mov
push
pop
in
pushf
push
gs
dec
jge
cmp
push
inc
mov
lock
push
xchg
or
repz
mov
cmpsl
mov
pop
add
add
or
mov
jne
cmp
lea
mov
cmp
or
and
in
inc
in
mov
loope
cmp
sbb
loop
sub
mov
sub
pop
pop
jno
jmp
push
addb
push
pop
scas
mov
inc
xor
dec
sbb
adcb
adc
pop
mov
mov
pop
scas
shlb
add
push
cmp
test
and
add
leave
mov
test
lods
or
fsubrl
jle
rcrb
js
inc
repz
ret
and
push
mov
sbb
mov
jo
and
int3
add
pop
mov
cltd
pop
xor
inc
dec
or
scas
pop
sub
jbe
les
jne
pusha
jae
dec
jp
mov
and
clc
jg
mov
outsb
dec
test
movd
ficomps
cld
movapd
push
clc
jae
xor
repz
or
xor
cli
rcl
lret
or
scas
je
mov
mov
lret
or
jg
fimull
mov
adc
jnp
mov
fidivs
xor
add
add
adc
push
or
stc
cmc
add
adc
or
mov
ja
repnz
roll
add
sahf
add
pop
jo
addps
int
idivl
fldl
sbb
sbb
inc
pop
jecxz
cmpsl
nop
xchg
xor
sbb
leave
inc
daa
jae
ja
adc
pop
or
cwtl
adc
sub
adc
xor
inc
mov
push
mov
mov
inc
roll
movsb
adc
aam
pop
xor
mov
dec
push
push
ret
jge
mov
push
loop
dec
test
test
or
push
adc
out
adcl
add
and
shlb
mov
xchg
dec
lock
mov
pop
push
or
fisttps
shl
dec
mov
bound
xor
cmpsb
bound
leave
movsl
dec
stos
je
adc
pop
mov
xor
mov
or
test
mov
inc
inc
or
push
jle,pn
mov
cmp
mov
movsl
cs
subb
mov
mov
cmp
jne
lods
add
xor
or
xor
push
inc
sahf
add
neg
gs
inc
insb
cmp
jnp
sbb
cmp
je
cmpsl
lret
mov
cmp
adc
loop
mov
push
sbb
fcomps
ss
in
jne
popf
and
mov
hlt
sbb
lock
test
add
lret
cmc
and
arpl
push
subl
stc
popa
xchg
jmp
push
cwtl
or
add
push
or
pop
sub
add
push
ret
push
xchg
inc
push
mov
and
lcall
adc
push
repz
inc
cmp
jne
inc
cmp
push
xor
decl
inc
in
push
or
inc
mov
push
push
adc
sub
fadds
and
sbb
das
rsqrtps
xor
dec
ucomiss
pop
mov
inc
cmp
cmp
fs
xor
push
adc
adc
jns
inc
xor
mov
push
add
push
push
nopl
aam
adc
add
mov
rclb
push
xor
sub
mov
iret
pop
adc
imul
sahf
mov
imul
cmp
mov
out
mov
jmp
imul
sub
add
ret
jnp
mov
loope
shlb
dec
leave
sbb
or
clc
imul
cmp
mov
mov
shl
rol
inc
jno
std
inc
inc
cmp
aam
lret
jne
sbb
jo
lock
xor
jmp
jnp
movsl
push
xor
inc
dec
push
sahf
xor
rcrb
gs
std
add
movl
fildl
int3
and
imul
adc
sub
inc
or
pop
jne
add
out
testb
pause
loopne
sbb
add
aaa
mov
cld
ret
mov
movsb
xor
jae
aam
or
mov
aad
sub
imul
ret
xchg
mov
mov
xor
cmpsl
mov
ss
push
sbb
fisubl
gs
mov
pop
adc
inc
cltd
aaa
adcb
mov
push
add
sahf
inc
jbe
cmp
jne
jmp
mov
incb
pop
into
adc
and
shufps
and
push
daa
xor
mov
outsb
dec
cli
or
popa
jbe
add
jmp
or
mov
inc
mov
jbe
fwait
cld
jb
in
mov
sub
add
jmp
mov
dec
mov
mov
dec
dec
mov
popa
loop
pop
inc
int3
repnz
and
push
ret
jnp
adc
mov
cld
or
add
cmp
insl
mov
push
cmp
inc
lods
xor
cmp
xchg
cld
decl
jle
push
mov
jb
lea
mov
outsb
mov
loopne
faddl
push
cmpsl
mov
cld
jne
mov
push
cmp
jne
lcall
and
adc
or
push
jb
jmp
mov
adc
push
dec
jmp
adc
jmp
mov
stc
jns
std
jmp
cld
cld
ret
addr16
pmaxub
jecxz
dec
push
pop
inc
jb
push
xor
movb
or
or
stc
hlt
or
add
jle
into
cmp
or
lret
or
inc
or
testb
fimull
adc
jl
or
or
mov
mov
and
pushf
jb
cmp
inc
loop
and
in
jecxz
scas
aad
or
fs
or
or
cs
push
lods
add
xor
push
and
push
lock
pop
or
jne
arpl
nop
cltd
cmp
enter
add
sub
aad
adc
adc
inc
imul
pop
lcall
pop
jg
add
mov
mov
js
mov
jno
andb
sahf
jo
popa
xchg
xchg
and
sub
and
jae
xor
xchg
dec
pop
cmc
mulb
pop
pop
jle
push
push
pop
div
lret
add
cmp
mov
sbb
sahf
stos
xor
or
push
pop
sub
pop
adc
push
or
das
clc
pop
rol
xor
jb
mov
cmp
add
cmp
adc
stos
adc
in
stc
or
sbb
int
ret
jb
jns
mov
fsubr
lcall
outsl
in
loopne
and
clc
mov
xchg
fcoms
cmc
jb
adc
sbb
pop
test
sub
iret
cli
and
and
push
push
call
add
and
lods
push
mov
inc
outsl
dec
mov
pusha
cmpl
jo
cld
fidivrs
cmpsb
cmp
inc
fstl
jns
inc
bound
cmp
jne
orl
out
negb
add
add
sub
fadds
and
repz
je
cmp
push
xor
dec
or
out
add
mov
and
adc
insb
adc
pop
jne
dec
add
xor
outsb
jne
inc
lds
cmpsb
loopne
sub
lret
or
test
idivl
lret
sub
jmp
test
mov
sub
cmpb
outsl
sbb
ja
xor
add
cmp
jae
push
fucom
jb
movsb
inc
and
scas
push
inc
or
or
sbb
frstor
cld
imul
add
pop
bound
adc
mov
cmp
test
jne
push
xorl
or
or
sub
mov
inc
mulb
sub
mov
fisttps
and
pop
or
add
into
mov
out
or
rorb
stos
orl
mov
pop
aaa
push
push
inc
shr
xchg
cmp
push
sbb
loop
add
sbb
sub
xchg
add
mov
mov
and
pushf
addl
pop
insb
mov
push
data16
jge
stos
mov
add
movsb
jb
mov
mov
pop
sub
imul
roll
out
mov
push
or
add
mov
jnp
andl
iret
data16
jne
idivb
sub
test
xchg
shlb
jmp
sbb
mov
lret
push
adc
lret
pop
push
xor
adc
adc
cwtl
je
hlt
xor
xor
jl
mov
sbb
adc
testb
inc
mov
mov
pusha
xor
pop
or
mov
mov
jmp
pop
xor
in
fstpl
or
aas
push
dec
in
in
repnz
push
jmp
xchg
sbb
sub
push
dec
scas
andl
sub
inc
test
stos
lock
arpl
xchg
mov
sbb
arpl
inc
pop
adc
cwtl
lret
js
or
adc
mov
add
add
movaps
out
pop
jb
and
cmp
cmp
inc
push
je
sub
push
sbbb
andb
mov
add
data16
fimuls
das
adc
sbb
or
movsl
adc
fidivs
sub
loopne
and
lret
arpl
add
loopne
je
inc
cmp
jb
lea
push
adc
fisubrl
push
push
pop
dec
ss
add
out
cwtl
cmp
mov
adc
andb
les
ss
push
andb
dec
or
jl
leave
push
int
dec
push
mov
enter
or
mov
aad
add
sub
or
pop
rcrb
inc
adc
nop
sub
jmp
pop
or
pop
and
pop
jb
lods
jno
test
push
xchg
addb
mov
push
lret
pop
add
and
xor
pop
pop
das
xor
xchg
out
mov
pop
adc
add
xor
in
popa
sbbl
xchg
and
mov
lods
pop
push
and
xchg
add
daa
test
call
ret
clc
or
or
sbb
adc
jg
mov
inc
incb
sub
aaa
insl
and
add
les
lahf
arpl
push
push
pusha
outsl
rcrl
mov
mov
mov
je
pop
shrb
rorl
mov
mov
lahf
sbb
loopne
inc
push
and
cmp
xchg
mov
fisubrl
sub
popa
sti
and
ficomps
roll
lea
mov
sub
call
insl
jecxz
es
push
adc
js
out
xchg
aad
fbstp
and
call
pop
add
xchg
jge
adc
or
lock
inc
inc
ret
add
and
lock
add
seta
jno
adc
fadds
shl
sbb
scas
mov
or
or
and
dec
enter
in
or
pop
and
and
inc
push
add
push
out
dec
xchg
je
push
shrb
es
mov
push
test
xor
imulb
or
mov
cmp
mov
sbb
mov
lock
xorl
pop
or
gs
pop
fsubs
nop
movsb
jge
js
jo
ficomps
inc
fdivrl
sub
push
cmp
jb
cmp
call
sbb
ss
jp
int
push
and
xlat
test
mov
inc
loopne
push
cmpsb
fsubr
mov
into
jmp
push
pop
cld
mov
clc
pop
hlt
mov
or
and
mov
insb
lods
sub
xor
loopne
test
xlat
sub
and
sbb
mov
out
sbb
pop
sbb
push
mov
imul
pop
lea
lret
sub
leave
insl
lods
shrl
loope
push
and
fistpl
push
xchg
add
mov
bound
and
push
adc
pusha
mov
cmpsb
cwtl
add
mov
pop
adc
mov
add
cmp
cmpl
mov
sbb
mov
push
push
jbe
test
or
mov
adc
lock
or
push
in
ds
imul
and
lea
enter
int
sub
rcl
jge
pop
push
pop
push
jl
sbb
push
fnstsw
pushf
mov
loope
sbbb
and
imul
cmpsl
mov
inc
or
adc
ss
stos
add
jecxz
ss
cli
sbb
pop
mov
jne
jl
and
and
out
or
push
push
jle
lret
or
add
and
mov
adc
mov
add
daa
jmp
cmovs
scas
in
xor
lcall
mov
adc
push
push
pop
jle
mov
pushl
cmp
je
movzbl
add
sub
xchg
ficoml
adc
pop
sbb
adc
mov
addl
pop
add
add
sahf
addr16
daa
add
adc
inc
rolb
add
inc
dec
cmp
mov
add
add
enter
push
jb
jb
xchg
pop
push
pop
cs
in
jb
or
or
add
dec
or
push
nop
or
or
nop
addr16
pop
or
ja
sub
or
repnz
add
enter
push
test
sbb
nopl
mov
adc
pop
adc
mov
in
fwait
sub
adc
cmp
sbb
adc
adc
jae
out
adc
ret
xor
add
adc
adc
jns
pop
cltd
adc
pusha
in
push
push
push
cmp
xchg
push
pop
pop
xor
sbb
lcall
sbb
call
sbb
lret
pusha
sbb
sbb
fwait
sbb
je
pop
sbb
and
jmp
dec
jge
sbb
or
push
push
inc
jg
cmp
push
pop
pop
jne
add
add
or
dec
sub
cmp
jae
add
cmp
cmpsl
mov
xchg
pop
and
or
aaa
xchg
das
lods
mov
cmp
je
lcall
cmp
ret
adc
aad
jns
add
cmp
mov
add
js
or
push
sub
sbb
je
call
dec
pop
dec
dec
cwtl
jmp
inc
push
sub
pusha
in
jmp
jmp
inc
lcall
cltd
add
pop
push
mov
cmp
xchg
sahf
out
out
jge
or
sbb
sbb
pop
pop
enter
lock
cmp
icebp
icebp
seta
enter
out
std
repz
jns
cmp
leave
std
hlt
pop
in
cltd
push
hlt
rorl
pusha
hlt
fwait
mov
cmc
cmc
inc
jg
push
nop
addr16
pop
imull
idivl
std
clc
enter
clc
clc
cltd
adc
inc
stc
lock
cli
adcl
sbb
sub
cld
cld
je
sbbl
cld
push
cmovl
jnp
xor
and
repz
adc
test
in
ficompl
dec
arpl
roll
lahf
sahf
adc
in
mov
or
xor
scas
cmpsb
cmp
jecxz
xchg
pop
add
std
sti
in
in
push
in
fdiv
inc
bound
daa
push
sub
sbb
out
xor
call
jns
sti
sub
dec
jae
and
lret
add
jmp
in
add
cli
popf
cli
dec
in
rcrl
push
fsubs
out
cltd
push
lock
and
mov
cli
xchg
inc
add
sbb
pusha
xorl
cltd
sar
add
stc
and
jns
lcall
pop
mov
sbbb
inc
repnz
out
clc
dec
push
cmp
cmp
mov
cltd
mov
sub
orl
mov
cmc
sbb
inc
sbb
hlt
cld
sub
mov
frstor
scas
lret
add
mul
pop
ret
xchg
pop
leave
shl
scas
idivl
inc
in
mov
out
out
xchg
add
out
out
xchg
pop
leave
and
and
dec
in
rcrl
and
sub
shl
das
xchg
inc
pop
pop
mov
xchg
notb
insb
out
xchg
inc
testb
sub
or
jno
imul
loop
push
mov
pop
xchg
cmc
jno
jns
jae
pop
jmp
push
push
dec
cmc
div
imul
cmp
int3
jns
and
cmp
clc
clc
jecxz
or
xchg
hlt
stc
popa
cmp
xchg
hlt
cli
cli
jno
jno
xchg
or
sbb
das
pushw
data16
cmp
out
push
push
jo
xchg
add
pusha
xor
pop
mov
xor
shl
loope
call
loop
scas
repz
test
imul
mov
andl
add
pop
and
repnz
jmp
mov
repnz
sbb
dec
in
in
dec
and
mov
repnz
sbb
mov
xchg
pop
dec
aaa
divb
icebp
xchg
pop
pop
daa
jb
test
dec
in
ret
cmp
leave
and
cmc
add
ljmp
mov
lock
movsl
test
jne
cmp
push
lock
sub
xor
sbb
xlat
mov
lret
ret
ret
fisttps
sbb
sub
out
push
xchg
and
hlt
in
inc
push
fcom
cmovno
push
add
add
add
stos
add
cmp
dec
add
push
jnp
mov
xchg
adc
jo
adc
cmp
or
dec
add
jmp
and
inc
add
sub
pop
movsl
and
mov
inc
push
lods
inc
int
xor
adc
mov
inc
scas
cmpsl
fnstcw
adc
inc
incb
mov
cmp
cmpl
cmp
cmp
data16
loopne
add
out
mov
push
jb
loop
mov
loope
pusha
pushf
loop
add
or
dec
sbb
daa
dec
or
pusha
scas
gs
dec
and
add
call
or
jle
rolb
and
push
test
inc
cld
and
aad
jb
test
mov
into
sub
je
int
cmp
adc
std
dec
inc
dec
push
cld
push
add
push
mov
hlt
push
xchg
lods
addl
imul
xchg
push
cmp
adc
add
or
addl
or
push
add
xchg
adc
fwait
or
lea
lea
test
dec
push
fbld
test
fcmovnu
fmuls
and
add
mov
sub
xchg
cmpsl
xor
hlt
div
add
clc
and
mov
popf
lods
dec
push
inc
lahf
or
and
dec
mov
or
shl
jmp
push
mov
push
shlb
push
mov
neg
mov
mov
movl
pushf
testb
ljmp
loop
gs
data16
rep
mov
dec
ljmp
xor
mov
add
lcall
mov
test
and
fs
andl
in
inc
xor
pop
and
rcll
sbb
dec
adc
xchg
jno
ret
js
cmp
fdivrp
add
inc
clc
arpl
insl
test
dec
inc
negl
jne
inc
xor
add
jb
pop
inc
lcall
sub
dec
leave
popa
cld
inc
inc
inc
inc
adc
jo
sbb
cmp
enter
mov
mov
inc
push
jb
insb
mov
add
iret
pop
cmpsb
adc
pusha
and
xorps
xor
lahf
push
or
repz
je
pop
or
sti
push
roll
sub
inc
inc
aam
lret
cmp
enter
add
jp
test
cmp
loop
nop
cltd
sbb
andb
sarl
lret
sbb
ja
insl
movsb
pop
sqrtps
inc
clc
pop
xor
mov
add
sbb
fimull
inc
or
add
repz
sub
faddp
shlb
mov
push
arpl
mov
mov
add
adc
stc
cmp
fcoml
jne
lret
mov
adc
pop
je
jp
cmp
imul
sbb
outsb
out
jns
cwtl
cmp
mov
jno
dec
mov
xchg
push
lcall
push
add
pop
inc
adc
ja
add
add
imul
enter
and
ret
lods
shll
popa
popa
or
add
testb
sub
pushf
mov
or
add
adc
orb
dec
loope
pop
jmp
stos
add
testb
out
adcb
fstpl
inc
cmpsl
inc
enter
loopne
mov
fimuls
pop
or
dec
jne
icebp
adc
lahf
pop
pop
inc
and
xchg
add
test
or
sbb
cmp
insb
in
in
xor
das
push
js
sub
notb
mov
inc
roll
dec
push
js
shlb
andb
mov
pop
push
pop
and
cmovs
addr16
pop
mov
test
arpl
iret
adc
sub
movsl
push
or
push
xor
add
cmp
or
jae
inc
sub
enter
push
lea
sbb
mov
lods
pop
mov
imul
mov
int3
add
movsl
cmp
add
lret
lret
cmpsb
inc
add
add
xchg
mov
push
fisubs
pop
push
dec
inc
cmp
repz
inc
mov
mov
call
iret
repz
lock
hlt
cs
cld
cmp
insb
add
add
fldenv
cmp
jmp
and
sub
nop
inc
pop
sti
push
andl
inc
and
mov
ret
push
lea
jl
cld
or
repnz
cld
out
and
fldenv
inc
mov
fimuls
sub
fldt
nop
xor
pop
push
sbb
xchg
add
out
add
xchg
add
mov
add
dec
dec
addr16
add
je
add
push
loop
repz
pusha
aam
faddl
in
hlt
jns
jl
cld
add
pop
pop
aaa
sbb
out
sahf
out
sbb
adc
or
or
add
or
jns
inc
xor
cmp
repz
dec
pop
pop
aaa
push
add
lds
add
nopl
mov
daa
ja
cmp
jbe
push
fsubrl
out
jg
mov
mov
incl
inc
decl
jne,pn
pop
pop
fwait
ljmp
cld
cmp
in
data16
cmpl
aaa
jbe
push
cltd
pop
idiv
push
dec
mov
or
pusha
mov
push
idivb
loopne
dec
mov
mov
xor
or
jmp
outsb
bnd
cmp
jae
dec
pop
xor
lods
adc
pop
jae
pop
jbe
imul
mov
adc
dec
push
jmp
mov
pop
sub
adc
in
pop
hlt
sub
clc
pop
add
jg
fwait
pop
test
dec
sbb
sub
push
xchg
add
test
jge
mov
sbb
dec
dec
je
push
push
dec
dec
push
pop
cmpsb
insl
xchg
or
jmp
outsb
jne
xchg
insb
adc
push
mov
cmp
dec
repz
pop
decb
push
xchg
out
lret
je
mov
inc
dec
in
and
das
sbb
or
and
mov
xchg
in
filds
xor
xor
add
push
push
pop
add
insb
cltd
or
jae
push
pop
push
test
dec
sti
or
push
fimull
and
mov
stos
inc
fisttpll
xchg
mov
pushf
xchg
arpl
xchg
pop
cmp
js
sub
insl
jl
fnstsw
or
aas
jge
stos
sub
pop
cltd
pop
idiv
dec
mov
pop
xor
xor
xchg
inc
out
cmp
fs
dec
jb
jmp
or
adc
pop
mov
sahf
jle
pop
imul
inc
cmp
fidivrl
shlb
jbe
insl
mov
shll
adc
fisubrs
or
je
insb
sub
and
sbb
xchg
dec
loopne
outsl
jae
addl
or
add
aad
pop
sbb
pop
incb
inc
jns
adc
mov
sub
incl
pop
pop
pop
jl
cmp
cmp
pop
sub
loopne
xchg
das
and
rolb
hlt
add
dec
loop
jae
pushf
loop
into
cmp
push
mov
popf
push
pop
xchg
push
cmp
mov
jge
pop
je
add
jg
insl
cmp
pop
push
mov
jle
sti
decl
insl
mov
outsl
mov
mov
in
pop
je
jge
insb
xor
rorl
or
inc
mov
cs
lretw
add
and
jl
loope
icebp
lahf
pop
popl
je
shrl
or
and
mov
cmp
push
movsb
push
or
cwtl
mov
pop
inc
sub
or
stc
pop
or
xor
jg
xchg
ds
lods
inc
jmp
push
pushf
xchg
or
jno
jmp
fmull
sbb
clc
bound
sub
push
je
mov
lret
push
push
movsb
xchg
or
cmpl
xor
loop
clc
sub
popa
cmp
jne
push
cld
mov
jbe
ret
mov
jns
repz
push
inc
adc
or
out
sbb
out
add
cltd
push
in
and
std
pushl
jbe
dec
ljmp
lcall
cmp
imul
sti
rol
pushf
fcoms
mov
lock
and
inc
adc
scas
xchg
push
jo
aam
add
push
add
push
inc
jg
shrb
and
push
gs
leave
inc
bound
in
xchg
add
fcmovb
loopne
add
mov
inc
inc
cmp
je
xchg
dec
pop
leave
stos
cmp
cli
orb
mov
sbb
adc
add
push
lcall
je
popa
push
jecxz
push
cmpsl
ficoms
movsl
and
add
shll
add
mov
incl
fdivr
push
or
mov
push
mov
push
inc
sbb
loopne
inc
dec
daa
lret
fisubs
adc
sbb
lods
mov
push
sub
lock
sbb
ret
outsb
mov
xchg
dec
push
mov
mov
mov
inc
sbb
add
add
mov
jo
xor
ret
xor
js
pop
test
mov
bound
and
cmp
je
mov
lock
enter
les
jne
mov
sbb
push
mov
pop
inc
ror
dec
int
shll
sub
push
cs
and
repnz
lods
sbb
dec
movsb
jb
push
mov
push
dec
sahf
dec
lret
mov
push
adc
fildl
fcom
popf
and
push
roll
mov
popa
jmp
jne
jmp
dec
or
repnz
push
jmp
das
jne
inc
ds
jmp
dec
sbb
jno
call
and
dec
xor
and
and
shl
sbb
xchg
or
dec
ret
dec
stos
xchg
in
cmpsb
push
repnz
call
adc
inc
xchg
push
xchg
mov
cmovo
xor
or
popa
xchg
outsb
xchg
cmp
test
inc
push
pop
dec
aad
loope
mov
call
inc
sbb
mov
dec
or
cmp
ret
sbb
add
push
jmp
cmp
cli
or
or
inc
inc
dec
pusha
out
orb
shrb
ja
or
inc
xorl
cltd
pop
pop
xlat
xchg
xchg
add
push
mov
xor
mov
and
adc
es
inc
jmp
sbb
pop
dec
sub
in
inc
sub
jb
mov
inc
cs
add
add
jge
mov
push
pop
repnz
inc
lahf
pusha
jmp
fidivrl
adc
add
mov
jo
aad
mov
loopne
push
nop
sti
rep
testb
mov
ret
sbb
and
inc
add
xchg
cltd
add
or
lret
mov
mov
clc
mov
sbb
in
xor
fwait
sbb
mov
cld
jmp
pop
arpl
xchg
dec
sbb
push
jno
fs
xor
icebp
fs
mov
dec
addl
std
mov
fldl
xchg
cmp
fnstsw
mov
lods
or
sbb
cmp
mov
push
into
sub
jno
in
ret
sbb
dec
into
stos
pop
add
jbe
jbe
xchg
jl
or
jbe
cld
nop
mov
jge
and
push
mov
or
add
mov
push
push
andl
fcompl
lods
pop
and
bound
rcrl
or
or
sbb
rolb
or
push
mov
dec
gs
clc
or
xchg
and
popf
sahf
enter
imul
sub
or
shrb
cs
int3
imul
or
pop
sub
xlat
leave
mov
jmp
mov
cwtl
cmpsb
popa
or
adc
dec
lock
lcall
add
inc
and
inc
or
insb
jmp
push
xor
lock
push
cmp
push
ret
aad
rcl
jl
xchg
pop
push
jg
jo
sub
mov
fidivrl
lea
loope
icebp
sarb
fsubrp
sub
mov
pop
imul
mov
loop
add
and
fiadds
rclb
rol
adc
mov
nop
inc
mov
sbb
sbb
pop
or
clc
jbe
sbb
dec
fdiv
add
mov
fildl
and
mov
sbb
inc
mov
cmp
or
repnz
aam
adc
dec
jmp
std
push
aam
jne
pop
dec
sbb
popf
lcall
add
xchg
shll
fistpl
push
pop
xor
shlb
rcll
movsl
inc
add
fsubr
shl
add
shl
inc
sbb
push
gs
mov
mov
hlt
cmpsl
hlt
or
push
sti
jmp
fnsave
sub
sub
push
fs
in
mov
pop
inc
or
fs
movsl
xchg
sbbb
adc
sub
inc
and
gs
add
or
sub
in
fstl
clc
or
pop
push
ret
inc
rolb
inc
inc
dec
enter
mov
sub
shrl
call
loopne
cmpb
notb
push
imul
rorb
test
daa
add
xor
push
inc
sbbl
mov
or
or
push
push
lods
mov
pop
jo
inc
push
test
fs
mov
mov
mov
lods
sti
sbbb
add
dec
xchg
loope
sbb
jle
popf
inc
add
sbbb
lock
push
les
into
addb
and
add
leave
cmp
or
jo
leave
ret
inc
call
cmpsb
jne
cmpl
adc
push
cmp
int3
call
das
and
pop
in
sbb
inc
and
ficompl
aam
and
je
rorl
pop
test
xor
rorl
lock
mov
cmp
icebp
outsb
push
fcoml
lods
lret
test
ds
mov
out
adcl
adc
out
iret
lret
cmp
push
or
lret
lret
sbb
sbb
add
popl
mov
movsb
mov
push
movl
cmp
pop
movsl
test
xor
sarb
xor
sbb
sbb
sarb
iret
adc
mov
xchg
mov
mov
in
inc
mov
rclb
lock
inc
fdivl
push
adc
pop
cld
sub
je
pop
or
adc
dec
popf
jbe
sarl
xor
in
or
push
stos
xor
inc
sbb
bound
dec
loop
movsb
shll
or
loope
or
clc
stos
add
sbb
sub
mov
add
dec
jne
lea
pop
out
daa
or
adc
stc
popa
negb
fsubr
test
out
loopne
fucom
mov
and
sti
mov
rcll
inc
mov
pop
ss
movb
clc
ret
out
and
pop
and
pop
ja
sub
sub
aas
push
push
xchg
std
mov
cmp
cld
ficoml
adc
repnz
push
aaa
mov
int
adc
cs
push
cmp
push
push
cld
cmpsb
sbb
and
jo
xchg
fstpt
incb
push
orb
mov
movsl
jb
je
and
inc
cmpl
adc
movsl
mov
jmp
mov
mov
mov
ja
test
cmp
ljmp
sub
ja
lret
add
jmp
cmp
push
add
and
jmp
push
mov
add
ret
pop
jle
pop
and
inc
ja
mov
ret
inc
jo
jg
or
ja
and
fdivs
inc
pushf
call
push
push
push
inc
aaa
pop
inc
call
add
jecxz
add
clc
xor
cmp
push
mov
pop
mov
and
ja
push
cld
mov
loopne
jmp
add
pop
cwtl
cmp
outsb
dec
mov
cmp
imul
push
cmpsb
push
cmp
cmp
out
fcompl
imul
fldt
cmp
xchg
stos
enter
les
lods
push
mov
add
mov
push
mov
mov
pop
popf
lods
pusha
popa
mov
inc
push
sbb
das
jle
or
xchg
ds
andl
push
jmp
cmp
sub
fsub
push
add
in
les
inc
sbb
sbb
ljmp
push
call
push
dec
dec
stos
in
lea
mov
mov
ret
jl
push
dec
pop
leave
inc
xor
push
pop
and
imul
push
lea
cmp
into
sub
div
xchg
mov
fs
adcb
cmp
ret
in
ljmp
add
shrl
inc
loopne
inc
add
jge
add
jb
mov
ljmp
outsb
ficoms
dec
into
inc
or
adc
mov
inc
push
add
jmp
xor
inc
dec
jne
mov
inc
pop
cmp
movsb
out
cmpsb
mov
add
shll
jle
aaa
clc
pop
sbb
xor
inc
push
mov
inc
jle
or
dec
jne
or
add
mov
inc
push
jnp
test
xor
or
cli
xor
or
enter
pop
orl
adc
mov
pop
add
mov
fisubs
mov
cld
pusha
and
mov
adc
mov
lock
mov
loopne
sub
add
adc
adc
adc
push
sbbb
sub
xlat
cli
addb
inc
dec
test
leave
push
lret
xor
add
fs
lds
pop
or
insb
mov
js
add
loopne
or
pop
mov
inc
jmp
xor
stos
sbb
mov
sbb
jmp
mov
jns
ss
push
out
arpl
push
inc
insl
adc
aad
es
xchg
cmp
adcl
xor
jne
es
push
lahf
leave
cmpl
and
pop
ret
add
fdivrs
fistl
outsl
cmp
cmp
mov
pop
andb
rcrb
pop
adc
int3
or
mov
ds
sub
out
out
call
xor
mov
inc
sbb
adc
xchg
int3
mov
fwait
inc
scas
subb
and
xorb
je
aam
pop
cmp
xchg
push
sbbl
loopne
pusha
cmp
lea
idiv
pop
and
push
push
cmpl
add
sub
mov
cld
xchg
das
es
inc
add
loop
dec
or
pop
dec
add
and
dec
xor
jp
xchg
ljmp
mov
inc
jo
pop
sub
aaa
sbb
sub
cmpl
push
pop
ret
xorb
jo
sbb
or
xor
xor
pop
inc
lea
adc
xor
add
aam
sub
rcr
lret
xor
or
gs
pop
cmp
ds
sbb
push
pop
jbe
xchg
nop
daa
call
test
dec
jle
sbb
jo
xor
loope
or
pusha
adc
popf
jmp
jmp
rcll
shlb
mov
inc
pop
mov
and
jmp
sbb
push
cmp
shrb
add
daa
mov
roll
pop
repnz
jmp
push
and
mov
add
stos
popa
cmc
nop
sbb
add
test
ror
cmp
into
call
cmp
arpl
loope
loopne
inc
sub
jbe
inc
or
mov
jbe
push
decb
cs
out
or
pop
dec
push
dec
dec
adc
adc
ljmp
rorl
and
pop
xorb
cmpsb
xchg
sbb
push
cld
pop
outsl
or
push
jo
std
inc
or
xor
mov
push
jne
movsb
xchg
adc
loope
push
sub
pop
cmpsb
insb
cld
mov
jae
bound
mov
fnstcw
outsl
xorb
adc
inc
and
aas
mov
insl
addr16
rol
dec
push
add
test
pop
xor
inc
mov
push
push
movsb
pushf
and
jns
pop
mov
orl
fimull
push
xor
shlb
pop
push
sbb
xchg
je
sbb
jns
test
clc
imul
cmp
add
nop
inc
inc
dec
sub
and
rorl
sbb
decl
repnz
push
dec
push
imul
cmc
and
pop
cmp
je
jle
cmp
mov
mov
jg
lds
cmpl
pushf
push
scas
and
xchg
jns
fucom
mov
test
mov
out
in
jb
xchg
pushf
cmpl
jbe
mov
sub
or
lahf
aad
mov
fiadds
ja
dec
ja
shll
fmull
jecxz
mov
jecxz
xor
jbe
xor
fisubl
ljmp
cmp
mov
push
fwait
mov
push
xchg
stos
push
dec
mov
xor
sbb
fldl
adc
xchg
pop
inc
sbb
mov
movsl
dec
inc
lock
ret
inc
and
into
push
xchg
das
mov
call
sub
pop
pop
imul
fcomps
pop
mov
mov
clc
or
jns
popf
enter
shrb
pushf
popl
ljmp
enter
imul
pop
test
or
pop
xchg
mov
push
add
mov
jno
mov
pop
test
mov
ret
pop
popa
dec
ret
stos
daa
in
add
js
jmp
jge
insb
and
push
or
icebp
mov
and
add
insb
or
jmp
lahf
mov
adc
inc
push
dec
jmp
and
add
adc
mov
dec
jle
negl
pop
or
add
pop
xor
out
fstl
xor
xchg
or
push
adc
add
jle
call
adc
out
push
push
jmp
jg
jns
test
addb
aam
pop
nop
in
test
out
adc
sbbb
enter
rolb
mov
or
push
xchg
pushf
movsb
or
movl
call
nop
clc
or
pop
test
cmpsb
jg
sub
cmp
lods
insl
mov
shr
sub
test
adc
pop
dec
cmp
js
rolb
or
add
jle
test
sub
cli
dec
pusha
pop
dec
cwtl
mov
lret
jne
notb
rorl
xlat
push
pop
repz
inc
mov
loopne
mov
cmc
add
popa
test
stc
and
push
les
subl
sbb
loop
clc
adc
shlb
sbb
mov
and
jne
and
and
subb
jb
mov
and
sbb
pop
test
sahf
hlt
mov
cmp
call
push
and
and
cmp
daa
and
add
pop
orb
addb
testl
jne
test
dec
dec
adc
subl
jl
sbb
int
or
cmp
add
mov
movsl
imul
sbb
popa
je
ret
inc
mov
and
jne
lock
insb
or
push
adc
and
or
xor
add
mov
jbe
push
dec
bound
cmp
or
test
and
push
xor
clc
movsl
or
inc
pop
jnp
pop
outsb
cmp
or
mov
out
and
mov
cwtl
outsl
push
sahf
imul
test
sub
loope
notb
ja
enter
or
call
and
inc
ds
mov
js
out
push
mov
mov
push
mov
add
mov
pop
or
sbb
and
sbb
lock
and
adc
jl
ljmp
lahf
cmp
ret
daa
xchg
adc
jno
incl
inc
or
inc
sbb
loopne
cmp
or
test
add
shll
jno
sub
fisubrs
add
inc
mov
jno
sub
sbb
lea
add
cmp
add
push
mov
push
pop
sub
jbe
sbb
insb
push
int
jmp
inc
pop
push
mov
or
mov
jmp
inc
mov
dec
repnz
incl
dec
rolb
and
mov
in
pushf
shrb
add
das
test
cmp
loopne
fwait
adcl
or
test
clc
or
and
or
dec
or
inc
or
arpl
or
jecxz
push
lret
int3
push
pop
push
or
test
xchg
aam
mov
fnsave
jbe
push
inc
mov
test
in
cmpl
out
xchg
jno
jp
std
inc
adcb
ficompl
jbe
in
push
jno
loope
adc
push
mov
into
sbb
clc
dec
xchg
mov
out
rcrl
fs
loopne
sub
dec
ljmp
jns
xchg
and
cs
push
sub
pop
sub
pop
outsb
cli
add
add
inc
pusha
sub
in
adc
sbb
and
dec
dec
scas
ret
les
ret
and
lcall
add
add
sbb
jmp
push
xor
push
push
push
jns
or
out
mov
aam
decl
rcrb
add
orl
mov
pop
sub
nop
xchg
dec
mov
mov
lcall
push
jg
adcb
sbb
dec
mov
jecxz
std
xor
mov
rorb
popf
in
mov
jb
hlt
fadd
fcomps
cmp
cmp
jo
dec
mov
mov
mov
mov
sbb
push
cmpl
leave
movzwl
pushf
xchg
out
shrb
xchg
call
out
xlat
or
adc
sti
inc
adc
mov
cld
jbe
icebp
lea
ficompl
jl
dec
icebp
fstp
es
test
push
sbb
pop
sar
pop
mov
mov
xchg
pop
dec
dec
xchg
inc
jnp
jo
xchg
lea
cs
lret
movsl
aam
clc
fsubrs
and
sub
dec
or
nop
out
adc
ljmp
pop
addr16
scas
pushf
pop
or
add
pop
cs
add
out
loope
int
nop
cli
sub
notb
pop
push
or
fcoms
aas
mov
add
sub
push
imul
adc
lret
or
ja
movsl
xor
rcrl
mov
mov
hlt
and
dec
jns
or
movsl
hlt
cwtl
je
or
xor
insb
je
lock
mov
outsb
loope
insb
pop
icebp
cmpsb
jo
pusha
sub
and
in
in
ss
or
xor
mov
sub
and
xor
movsl
jg
jbe
enter
jb
or
sbb
fwait
imul
lcall
pop
xlat
cmc
test
mov
add
push
jno
lock
rcrl
loope
xor
jb
or
sbb
je
cmp
adc
or
xlat
inc
clc
add
mov
ret
add
hlt
lock
test
fdivr
push
scas
inc
jmp
test
test
mov
je
push
jae
sahf
testl
stos
out
jbe
jl
aaa
jne
das
mov
adcl
xchg
add
dec
and
and
or
lock
es
mov
adc
cmp
mov
push
or
add
push
insl
xor
stos
cmp
push
xor
xor
negl
cmp
notb
rolb
sbb
adc
cmp
mov
xor
mov
jbe
mov
push
mov
decl
pop
test
pop
aas
push
mulb
es
add
bswap
fimuls
mov
inc
dec
pop
sub
mov
or
sbb
xor
xor
add
adc
je
out
ret
out
pop
jns
push
sbb
push
pop
pop
adc
shrl
cli
add
add
rclb
push
add
addr16
mov
pop
sbb
cmp
je
test
or
sbb
push
mov
popa
aas
add
xor
rorl
fistps
xor
adcb
mov
push
pusha
pop
add
mov
adc
push
jb
add
lds
adc
pop
jo
adcb
jmp
pusha
pop
fstl
into
ret
sbbb
adc
testl
mov
jmp
cmp
jle
sahf
jecxz
popf
insl
cmpl
dec
or
mov
scas
cwtl
mov
adc
push
mov
movsb
mov
xchg
xor
adc
imul
add
mov
xchg
sbb
xchg
lea
stc
mov
push
pop
test
roll
sbb
dec
out
aas
nop
addb
add
adcl
inc
push
enter
outsb
mov
lret
out
addr16
decb
mov
test
pop
je
in
jecxz
movsl
loope
js
pop
data16
push
subl
lret
stos
into
ja
push
jne
push
nop
popa
jbe
sbb
inc
push
jbe
insl
push
add
or
lcall
nop
rorb
add
sbb
sbb
jl
inc
dec
push
rolb
jno
inc
in
pop
fimull
push
or
jecxz
popf
jmp
lret
mov
mov
or
jne
and
lea
jbe
sbb
xchg
cli
loope
adc
inc
je
mov
cltd
push
adc
jl
shll
stc
cmp
xchg
clc
cmp
jg
sahf
add
mov
dec
jmp
pop
xchg
sub
mov
faddl
aas
adc
xorb
cmp
lods
push
mov
shlb
xor
ss
or
dec
cmpsl
loope
or
jbe
inc
inc
cwtl
std
push
inc
sub
sub
icebp
xchg
dec
mov
test
pop
mov
cmp
adc
int3
clc
push
jmp
sub
sub
push
test
inc
xchg
mov
cmpsb
and
pop
lds
jb
cltd
sub
sub
pop
and
cs
shl
push
jp
jb
cmp
ja
dec
fdivrl
mov
ret
lea
stos
pushw
add
adc
push
dec
push
pop
jbe
dec
sbbl
pop
pop
xchg
test
jno
aaa
add
mov
call
pushf
push
rcll
pop
popa
jle
sbb
popa
lret
jge
mov
jg
push
push
dec
enter
pop
xor
push
sti
push
and
jo
icebp
jl
testl
push
xchg
sarb
loop
dec
jo
outsl
movsl
daa
pop
mov
dec
cmp
insl
mov
mov
test
sbb
add
fbld
adc
push
mov
pop
shrl
lods
push
mov
mov
sub
iret
aam
daa
mov
mov
push
xchg
rolb
pop
xor
fidivrl
inc
js
dec
xor
mov
rcrb
idivb
push
incb
pop
sbb
pop
les
jp
cmp
mov
inc
sbb
int
or
rcr
pusha
and
rolb
and
lcall
mov
xchg
orb
xchg
nop
test
add
call
rcll
icebp
insl
stos
push
jl
push
pop
xor
mov
push
aas
sbb
fdivl
in
dec
xor
pop
addl
in
pop
addl
sahf
les
outsb
or
sub
and
jmp
mov
sbb
pop
jne
xor
push
push
xchg
arpl
xor
sbb
lods
and
imul
mov
test
xchg
xchg
and
cwtl
test
out
cmp
jge
cwtl
dec
daa
ss
jne
dec
jbe
push
or
dec
nop
cwtl
clc
adc
enter
ret
test
jb
xor
sbb
inc
mov
inc
and
sub
hlt
scas
add
cld
shr
mov
imul
mov
clc
push
inc
dec
inc
mov
or
jbe
cmp
jg
push
lea
mov
mov
mov
ljmp
divb
scas
adc
inc
cli
add
cmp
jbe
push
pop
mov
dec
or
fisttps
sub
jae
mov
shr
lea
not
stos
mov
and
decb
jne
and
adc
push
js
lea
xor
js
push
pop
add
push
dec
pop
add
cltd
push
ljmp
or
fimull
add
sub
jmp
add
jecxz
push
popl
or
jnp
jne
and
sti
add
xor
and
dec
pop
cmp
mov
mov
imul
jge
cmp
and
cmp
je
insb
jno
out
sub
cmp
shr
not
and
pop
dec
add
xor
dec
loopne
mov
mov
cltd
repnz
dec
add
cltd
xchg
mov
and
sbb
dec
jmp
std
xchg
push
fisubrs
mov
or
mov
inc
adc
dec
pop
ss
dec
pusha
mov
mov
lods
push
testl
mov
mov
roll
mov
jmp
dec
in
adc
loopne
lock
dec
call
cld
ficompl
mov
repz
ds
je
inc
pop
stos
pusha
mov
pushf
add
sbb
xchg
std
sar
loope
add
scas
jp
push
call
aas
shll
mov
or
sbb
add
andl
inc
adc
dec
adc
add
and
pushl
push
push
mov
and
loopne
int
mov
fildll
enter
sbb
sbb
sbb
cmp
or
push
out
cmpsl
adc
mov
in
dec
shlb
inc
inc
mov
ret
imul
jne
data16
outsl
push
cmpsl
rcr
add
cmp
outsl
js
add
stc
xor
stc
negb
les
dec
ret
ret
sub
inc
adc
push
aam
aad
stos
xor
or
adc
fcomi
xchg
jmp
orl
incl
mov
ss
xchg
push
mov
xor
loope
shlb
loop
rolb
mov
imul
sub
clc
pop
scas
mov
inc
xchg
add
or
hlt
or
push
mov
pop
or
add
popa
mov
xchg
jp
mov
cli
ja
sub
shr
mov
inc
orl
orl
test
or
adc
out
xchg
inc
cld
mov
sbb
call
dec
jne
rclb
je
clc
add
roll
rorl
inc
fs
inc
bsf
mov
icebp
pop
inc
mov
test
cmp
inc
jne
or
adc
jle
lds
not
and
les
scas
inc
cmpsl
or
adc
cld
sub
push
mov
pop
shr
jb
cld
loopnew
or
cmp
add
ja
fimull
jle
inc
call
xchg
flds
cmp
jl
add
dec
push
xchg
push
mov
int3
push
pop
inc
lcall
inc
stc
xchg
add
iret
clc
rolb
rcr
sub
pop
add
cmp
fimuls
sub
nop
dec
or
addb
sub
add
add
in
repnz
adc
pushf
sar
dec
mov
ljmp
pop
hlt
lea
add
cmpsb
jmp
jle
mov
xchg
cmpsl
imul
shll
sbb
iret
jp
rclb
aaa
mov
dec
test
loope
sbb
mov
xchg
mov
push
cmp
out
dec
aas
lcall
inc
or
pop
add
mov
inc
dec
insb
jl
cld
loop
xor
push
sar
dec
jp
cmp
fiaddl
push
movsl
pop
xor
cld
xor
cmp
dec
jecxz
xor
fisttps
mov
dec
push
push
push
fnstenv
dec
faddp
pusha
push
adc
fimull
dec
cmp
icebp
mov
sahf
jbe
inc
cmp
mov
mov
mov
cmp
lods
decb
lret
pop
into
mov
pop
sbb
xchg
push
addb
imul
insb
mov
ret
jp
ret
pop
and
inc
cmp
pop
inc
add
push
push
push
jge
sub
out
cmp
push
jo
ljmp
inc
subb
pop
out
fldcw
push
nop
cmp
and
decb
xlat
jne
add
pop
cmp
jb
aas
pop
int3
mov
sbb
jne
leave
jae
cmpsb
jmp
jnp
add
xor
cmp
fimull
aaa
arpl
push
inc
mov
mov
and
cwtl
or
ficompl
mov
sbb
shrl
pushl
sbb
in
cmovle
mov
and
inc
sub
jl
and
iret
jne
adc
loopne
jno
mov
dec
aam
dec
xchg
nop
push
mov
out
repz
mov
and
jne
mov
push
pop
or
leave
inc
test
inc
push
pushf
mov
les
sub
icebp
sbb
sub
and
cmpsb
mov
xchg
sbb
ror
push
sahf
cmp
mov
and
mov
mov
jne
adc
and
jmp
lret
cmp
mov
es
dec
bound
dec
push
and
push
clc
into
xor
pop
and
cmp
inc
xor
push
or
and
roll
sub
fwait
rolb
and
pmaddwd
or
dec
cld
or
push
push
mov
push
mov
ljmp
sub
xor
cmpsl
call
shll
ljmp
push
lea
ds
jne
cmp
mov
and
sbb
inc
mov
xchg
repnz
xor
idivb
add
nop
in
jb
mov
jae
add
pop
adc
cmp
xor
jbe
inc
sbb
mov
ret
clc
dec
daa
cmp
psllw
lock
add
or
mov
push
and
and
and
or
aas
adc
cld
jle
xor
es
add
test
xchg
sti
loopne
mov
cmp
cmp
sub
add
xchg
push
sbb
sahf
adc
rcll
test
add
adc
or
inc
push
out
loope
push
jl
dec
cmp
and
inc
xchg
inc
push
mov
repz
push
push
push
or
or
push
orb
sti
lods
fstpl
pushl
adcl
push
pop
push
jl
or
out
pop
jne
push
in
adc
mov
inc
mov
std
pop
insl
inc
adc
push
dec
lods
mov
jno
add
mov
js
push
or
pusha
es
jmp
lds
and
shr
cmpsl
pop
jl
mov
sub
shl
and
insb
int3
push
les
ja
test
inc
or
xor
aas
cmp
cmpl
mov
mov
cli
or
rolb
jne
inc
mov
sub
pop
adc
jg
lods
or
cwtl
add
adc
jae
jbe
and
and
jo
popf
call
jp
mov
popa
push
jns
xor
jecxz
shlb
jg
loopne
fs
adc
jge
jmp
rcrb
or
xchg
iret
shl
test
in
rcrb
je
push
mov
into
mov
mov
test
gs
push
mov
xor
inc
mov
bound
test
and
mov
test
sub
repnz
xchg
scas
movsb
mov
sarb
dec
push
add
sub
adc
adc
std
cmp
cmp
push
mov
fisttpl
pop
add
pop
xor
sbb
xchg
arpl
stc
fsubrl
mov
rol
jge
fs
cmp
sahf
cmp
and
cs
xor
iret
rorb
mov
and
jne
xlat
xor
jp
or
cmp
mov
pop
and
jb
rorb
jg
adc
inc
fidivrs
xor
xor
adc
cmp
or
push
lcall
les
sub
inc
pop
std
lcall
ret
sarb
ret
in
shll
lea
jb
xchg
fisubl
nop
call
push
sbb
mov
mov
lock
add
dec
movb
mov
lahf
call
push
mov
leave
enter
test
sub
cwtl
pushf
lcall
neg
lret
jb
call
rcll
push
cwtl
xchg
call
pushf
pusha
xchg
mov
nop
inc
push
sahf
adc
add
mov
frndint
mov
mov
fwait
data16
lcall
push
test
dec
sub
call
mov
push
inc
cs
mov
hlt
cltd
xor
xchg
cs
sahf
push
lods
in
dec
gs
shrb
xchg
cltd
call
call
dec
lods
add
xor
and
jb
fisubs
xor
loop
in
push
push
add
xchg
and
inc
cs
in
in
sbb
test
mov
cmp
cmp
mov
clc
jmp
xchg
repnz
shlb
pop
adcl
add
cmpsb
out
mov
movsb
push
mov
xor
sahf
inc
xchg
sub
inc
loope
daa
cmp
push
sbb
jge
dec
lea
int
add
or
lret
mov
pop
xchg
test
mov
enter
or
movsb
jo
pop
mov
fwait
rcll
je
inc
xor
into
add
or
xchg
or
fwait
loopne
xor
and
test
pop
cmp
inc
out
sarl
push
mov
xchg
jns
mov
inc
add
les
jnp
adc
sbb
push
ficoms
popf
shr
lds
or
ret
mov
add
add
push
cmp
ret
adc
fdivrs
inc
push
sub
add
cmp
out
ret
jne
icebp
bound
mov
pop
lock
aam
ret
xchg
imul
je
add
push
fsubrl
add
jnp
dec
ja
mov
dec
lock
je
jmp
add
add
cpuid
add
or
mov
divl
and
adc
jp
xor
push
mov
jne
add
or
or
pop
mov
ds
add
rolb
enter
dec
adc
rclb
das
movsl
push
call
test
enter
andl
push
or
shll
enter
sbb
or
mov
sbb
adc
sub
or
pop
inc
shll
stc
cli
sti
push
aam
dec
cld
std
dec
inc
and
orl
push
in
cli
xchg
mov
test
jg
add
fisttpl
xchg
sub
sbb
cmpsb
sbb
dec
mov
ljmp
inc
xchg
je
push
or
or
sub
enter
pop
fisubl
fistps
fstpl
push
fldl
or
fldl
or
sub
add
xor
mov
mov
inc
lcall
push
leave
pop
jmp
jo
mov
rorl
mov
fistps
sbb
cmp
das
cmp
xchg
dec
je
add
and
imul
push
sti
fnstenv
neg
sub
insl
ljmp
pop
fstpl
adc
mov
pusha
or
rcrl
out
adc
stc
fwait
add
jmp
inc
add
jno
mov
lret
xchg
adc
add
jae
mov
movsb
jno
pop
lock
sub
jmp
adc
pop
push
call
popa
add
fstl
push
shl
push
mov
aaa
jne
xchg
pusha
xchg
das
and
inc
lock
pop
push
cmp
fs
jbe
lahf
out
jg
mov
mov
pop
lahf
cmpsl
stc
xchg
mov
test
aas
pop
std
add
xor
or
fnstcw
adc
inc
inc
push
sbb
or
adc
daa
push
push
dec
lock
fcoms
pop
call
push
ds
xchg
jle
push
dec
sub
push
jle
scas
and
mov
or
daa
lcall
fs
faddl
xor
adc
pop
inc
imul
and
or
aas
test
fsubl
subb
push
aaa
mov
lahf
clc
and
ret
and
push
push
adcl
inc
fnstcw
testb
mov
push
or
inc
adcb
pop
paddq
mov
sbb
add
sbb
and
push
adc
or
mov
popf
enter
pop
cltd
push
lret
test
add
pop
and
lret
lfs
mov
pop
cs
lock
call
cmp
cltd
sbbb
mov
lods
std
mov
testb
movb
mov
or
push
clc
cmpsb
jo
adc
sar
sbb
dec
lret
mov
sarb
and
jne
dec
sbb
xchg
icebp
cmpsl
adc
pop
sar
lea
dec
xor
and
repnz
cmp
xchg
mov
adc
or
mov
shlb
inc
sbb
inc
cmpsb
pop
or
icebp
popf
loop
or
sbb
mov
in
pop
ja
adc
xor
repnz
in
fadds
fsts
lods
fld
mov
in
sarb
rol
jne
xchg
lock
push
inc
dec
inc
aad
dec
push
pop
xchg
dec
scas
or
add
adcl
pushf
sbb
aam
iret
in
movsl
inc
clc
mov
cmp
hlt
ss
or
adc
pop
dec
cs
popa
int
es
lret
gs
mov
and
push
lods
xchg
or
std
pop
lods
or
jne
inc
sub
adc
aad
pop
and
mov
cmp
jne
cmpb
testl
cmp
inc
mov
xchg
lret
xor
push
sub
int
cmpsb
rclb
jne
js
cmpsl
test
cmp
fs
mov
fcoms
leave
fwait
test
and
mov
mov
add
lret
xrelease
dec
andl
inc
repz
jecxz
push
outsb
call
leave
jns
add
ja
pop
lcall
adc
adc
sti
push
inc
cmp
mov
popf
fnstcw
in
cld
jne
in
mov
cmc
cmc
aad
lods
popa
testl
mov
dec
stos
fs
aad
inc
cwtl
xchg
push
adc
push
xorl
out
jge
mov
push
push
imul
sbb
fidivrl
jns
daa
mov
mov
add
stc
lods
test
enter
or
dec
sub
add
adc
pop
mov
loopne
sub
mov
pop
pop
mov
cmp
into
je
testl
insb
lcall
jb
ret
in
or
test
sti
jecxz
pop
lret
xor
mov
add
jg
std
xor
pop
xor
addr16
mov
jns
lock
fdivr
adc
insl
xor
imul
out
and
shr
mov
js
adc
push
xor
jno
lret
inc
xchg
andb
in
pop
out
pop
cmp
call
repnz
je
mov
call
jecxz
mov
std
popf
cwtd
inc
push
mov
fdivs
xor
daa
in
mov
lea
test
std
lds
sub
cmc
arpl
mov
gs
and
mov
data16
mov
imul
cs
cmp
mov
push
ds
icebp
push
push
lods
and
cmp
mov
in
xchg
xorl
mov
push
bound
mov
out
out
push
test
test
in
push
cmpsb
mov
push
loope
xchg
nop
sbb
adc
cmpsb
repnz
inc
into
inc
inc
adc
sub
dec
and
pop
push
cmp
cmp
mov
sbb
std
nop
xchg
std
lock
xor
push
imul
test
push
loopne
mov
xor
inc
repz
mov
frstor
mov
ficoms
or
ds
cs
adcb
js
sub
test
sub
or
dec
jmp
dec
mov
pusha
add
cs
xchg
lret
pop
lock
xor
jge
jmp
push
sub
sub
or
sbb
jge
mov
cmp
jmp
test
push
jle
cmpsb
aaa
dec
test
push
lods
add
xchg
lahf
xchg
jns
lock
dec
addr16
or
cmpl
je
jmp
bound
iret
cmpsb
rcr
mov
movsb
adc
hlt
or
push
dec
dec
inc
push
inc
lret
inc
sub
sub
into
push
dec
dec
hlt
or
enter
fdivr
das
push
and
jno
push
and
and
in
xchg
std
std
std
lods
pusha
push
loopne
sub
xchg
mov
enter
das
movsb
bound
mov
nop
in
inc
add
mov
sahf
cmpsl
flds
adc
adc
jb
or
ds
loope
sub
mov
iret
xchg
lock
mov
data16
test
aas
xor
aad
pop
leave
mov
and
push
mov
sbb
mov
in
loope
mov
repnz
and
loopne
inc
lea
aad
pop
out
adc
adc
sub
cmp
ja
fisubrl
sarl
or
add
leave
or
js
mov
int
lock
add
xchg
popa
enter
lock
or
push
sub
adc
push
lock
repz
xor
repz
add
jb
sbb
orl
movsl
call
fs
call
and
in
cmc
mov
pop
bound
add
adc
and
cmpl
mov
mov
lods
lea
mov
push
jecxz
add
mov
mov
test
adcl
dec
test
sti
pushf
add
or
and
stos
xchg
bound
push
pop
mov
push
and
and
inc
xchg
cld
fdivrs
sti
mov
push
jecxz
std
mov
cmp
jns
in
fwait
mov
cmc
sbb
mov
mov
mov
dec
cs
cld
mov
lcall
push
fyl2xp1
pushf
pop
xchg
pop
repz
sbbb
clc
mov
inc
lea
xchg
mov
lods
add
ds
mov
mov
cmp
mov
in
dec
repnz
orb
movsb
cmp
or
push
aas
dec
push
xchg
sti
leave
adc
or
cmp
incl
nop
test
in
sub
xchg
sub
cmpsb
add
push
nop
inc
lods
or
dec
mov
push
xchg
clc
test
pop
je
movsb
data16
stc
dec
mov
add
pop
add
dec
lds
repz
ffreep
push
adc
insl
mov
sarl
lret
imul
inc
js
ficoml
data16
stos
lret
sbb
cltd
inc
or
jnp
mov
pop
les
mov
testb
and
and
mov
inc
movb
ja
inc
dec
addl
roll
movb
test
jge
out
mov
adc
sbb
js
or
jne
push
lds
and
shrb
xor
and
addl
sbb
cmp
jl
adc
int3
hlt
dec
movb
inc
cmpsb
xchg
fistpll
xchg
and
mov
jbe
mov
test
shrd
adc
bound
ret
mov
je
cmpsl
mov
sbb
or
push
push
cld
int3
xchg
and
jle
popa
add
sti
ja
pop
sub
mov
sbb
push
nop
shll
fucomip
stos
bound
mov
jb,pt
and
sbb
or
les
loop
sahf
xchg
cld
lods
or
mov
inc
push
mov
add
cld
pop
add
repnz
fwait
cli
das
sbb
adc
and
arpl
or
mov
xor
addb
dec
sbb
loope
add
lahf
or
add
and
sub
cmp
les
inc
push
add
je
push
push
stc
in
daa
clc
inc
push
inc
sbb
jae
dec
cwtl
inc
testl
imul
aaa
in
pop
test
sbbb
jp
add
xor
xor
dec
in
and
add
add
or
insb
lcall
mov
cmp
lock
or
jbe
mull
ud0
mov
inc
push
pop
push
push
inc
shr
rcr
shr
rcr
insl
repz
std
or
jne
div
pop
dec
adc
inc
mul
pop
jb
out
out
fisttps
cmp
or
cmp
or
xor
and
lahf
daa
mov
adc
or
fisubrl
and
rorb
fmul
fxch
fwait
cmp
arpl
das
push
pop
or
ja
aam
clc
add
xchg
pop
jmp
sar
pop
adc
clc
mov
movb
les
aas
adc
clc
movb
into
rcrb
daa
nop
sbb
mov
sbb
dec
adc
push
or
xor
and
mov
sub
sub
andb
dec
cmp
pop
movsb
lsl
sbb
or
push
xchg
test
gs
add
adc
xor
jecxz
or
leave
mov
les
jne
mov
les
push
push
lock
mov
cld
adc
orb
jno
rorb
and
int
jmp
pop
dec
sbb
and
ss
inc
std
add
daa
clc
ja
jle
jne
lea
jb
mov
test
rol
repnz
mov
les
sub
bound
mov
jne
cmpsl
std
sub
cmp
adc
cmp
adc
out
gs
or
test
movsbl
movsl
xchg
iret
push
pop
aaa
mov
jne
add
push
fs
and
or
jl
mov
xchg
mov
cld
sbb
xchg
lock
lds
add
push
cmc
shlb
sub
jecxz
in
sar
fistl
shrl
xchg
arpl
es
dec
js
dec
repz
xor
mov
mov
pop
mov
iret
add
inc
pop
movl
push
jns
test
push
outsl
sahf
sbb
stos
add
push
mov
xor
fiaddl
push
xchg
imul
push
lea
imul
pop
sarl
and
or
test
insb
sub
sbb
xor
js
adc
fdivs
pop
adcl
mov
inc
inc
cmp
pusha
mov
lods
dec
lret
loopne
cltd
aas
pop
cs
cmp
fcoml
push
dec
mov
jl
repz
add
gs
inc
imul
pop
add
mov
and
sbb
lds
mov
adc
push
mov
call
push
loopne
mov
fdivrp
iret
sbb
push
cmp
or
push
ret
popa
dec
loope
shl
push
adc
and
pop
loopne
xor
inc
stc
xor
sub
mov
ss
dec
xor
pop
dec
inc
in
and
mov
les
int3
ja
push
movb
push
out
cmp
fimull
ss
and
or
out
faddl
aam
xchg
pop
addr16
in
inc
outsb
or
cld
inc
mov
popa
pop
ret
repnz
dec
inc
test
jmp
std
sbb
sub
je
test
popa
xor
rcrb
iret
push
mov
and
shrb
setl
sbb
icebp
repnz
jb
jb
adc
sub
mov
sbb
jbe
ret
jge
mov
ljmp
jb
inc
fisttps
out
sub
adc
push
roll
les
rcrb
rorb
pop
imul
jne
mov
mov
test
insl
jae
or
push
mov
and
sbb
dec
or
nop
fisubrs
mov
xchg
sti
jb
inc
mov
roll
cmp
or
popf
repnz
mov
and
sbb
jp
enter
xor
sbb
xor
push
mov
and
sub
fadds
mov
movsl
adc
jnp
fistl
jbe
inc
adc
test
and
test
and
icebp
push
pop
mov
push
or
xchg
or
dec
call
add
or
mov
rclb
or
mov
test
xor
fldl
pop
into
xor
and
popa
test
and
dec
pusha
xchg
or
lods
adc
adc
test
insl
mov
or
adc
imul
jle
mov
or
cmp
xorl
jl
mov
mov
jle
cmp
add
mov
sbbl
lret
xchg
orl
sbb
ds
lea
push
cmp
xchg
xor
test
sbb
adc
lock
leave
push
add
into
pusha
test
pop
jb
xor
dec
mov
inc
loopne
rorl
out
push
cmp
pushf
xor
gs
imul
and
mov
hlt
add
push
add
add
adc
fldcw
sti
dec
push
inc
cwtl
outsl
cltd
test
add
sti
or
repnz
mov
or
xor
dec
fxch
jne
imul
ja
ss
pusha
pushl
mov
lret
dec
lods
xor
jmp
xchg
and
xor
mov
dec
je
stos
jmp
mov
push
xchg
push
push
mov
mov
push
or
addr16
inc
inc
data16
jge
testb
les
in
pop
push
in
and
dec
aaa
add
scas
mov
aas
push
lcall
mov
mov
jne,pn
sbb
inc
mov
cs
sub
adc
in
jbe
lret
jge
mov
mov
and
dec
push
or
jno
and
mov
fmulp
mov
ja
push
push
dec
jmp
xor
sbb
insb
mov
insb
test
aaa
inc
adc
shll
gs
or
push
adc
fs
jno
mov
ret
sbb
cmpsb
cmp
add
jl
arpl
das
dec
les
mov
xchg
xor
pop
addl
les
imul
je
rcrb
mov
mov
sub
lea
sbb
and
and
sub
push
cmp
xchg
shlb
or
pop
in
mov
sbb
cwtl
add
mov
dec
arpl
ss
fiadds
push
ja
ret
pusha
cli
mov
and
inc
or
in
and
cmp
arpl
rcll
cltd
rolb
cmc
sbb
ret
and
outsl
iret
sub
jg
dec
js
pop
mov
loopne
fadds
sahf
cmc
lods
mov
in
popf
mov
lret
adcl
popa
adc
mov
orb
je
jno
mov
push
pop
push
xor
xchg
pop
test
add
dec
mov
cmc
lahf
aaa
and
adc
push
or
dec
fcmovbe
pop
or
dec
add
jmp
push
add
dec
xchg
out
mov
jb
stos
jecxz
movl
mov
add
push
rorl
adc
scas
stc
or
mov
inc
and
cmp
push
rorb
lods
test
push
test
mov
mov
xchg
mov
pop
mov
lea
mov
xor
test
lods
and
or
xchg
add
inc
pushl
pusha
cwtl
fcomps
test
cmp
ss
jmp
xor
xchg
addl
ret
dec
loop
incl
dec
push
mov
inc
inc
pop
je
pop
mov
jb
je
out
movsb
cs
and
or
testb
jmp
inc
mov
add
xchg
xchg
loopne
or
inc
or
adc
push
dec
stos
inc
cli
cmp
movsb
pop
and
inc
push
pusha
or
mov
jbe
int3
into
inc
add
xor
inc
pop
mov
adc
pop
add
adc
adc
xchg
insb
pop
mov
inc
inc
out
cwtl
xor
fcmove
ret
sbb
dec
mov
sbb
aaa
inc
ja
jmp
rorl
jl
mov
add
jecxz
mov
or
jge
adc
jp
inc
sbb
push
sbb
loopne
shl
push
dec
addb
into
ss
lds
pop
add
mov
sub
fsubrs
add
push
push
orl
mov
and
mov
cltd
xchg
xbegin
pushf
dec
icebp
lea
sbb
inc
inc
daa
add
jo
lret
jl
sub
fs
cwtl
jne
rcr
jbe
imul
inc
inc
or
jne
mov
fcmovb
cmp
push
sar
sub
sbb
mov
adc
mov
je
mov
cmp
addr16
and
lea
rorb
inc
xor
scas
push
dec
cmpsb
push
add
addb
and
aaa
jb
nop
shll
pop
sti
or
sub
out
int
pop
add
dec
lods
jo
pusha
ret
dec
rcl
pop
xchg
pusha
fldt
xor
loope
push
mov
push
push
pop
push
dec
aas
adc
push
xchg
sub
or
lea
pop
jmp
add
or
or
or
js
and
push
and
xor
mov
inc
xchg
inc
mov
in
xor
xchg
js
into
mov
imul
fs
mov
push
jl
roll
adcl
pop
pop
sbb
sub
rcrb
xchg
pop
aaa
and
lea
add
and
and
fisttpl
js
add
sub
inc
cmp
jg
popf
dec
adc
xor
adc
loopne
or
sbb
cmp
push
push
mov
push
cs
cmp
sar
and
shl
clc
imul
and
mov
pusha
inc
add
and
imul
fmul
pusha
mov
or
inc
adcl
cmpsb
push
and
loop
mov
or
orb
aam
add
xchg
xorl
ret
dec
into
lds
adc
shl
push
sub
add
push
ss
jge
aaa
xor
ds
add
sbb
inc
clc
stos
add
shrl
aaa
and
movl
mov
mov
scas
pusha
aad
xchg
sahf
notb
in
adc
xor
bound
loopne
cmp
out
mov
fwait
hlt
or
mov
aam
adc
xlat
cs
push
xor
lock
shrb
push
sahf
lods
loope
lock
lahf
add
and
popa
jg
jmp
test
adc
loopne
or
xor
and
push
roll
incl
enter
mov
and
jb
hlt
mov
movsb
rcrl
add
ret
sub
cmc
cmp
fwait
addr16
sub
inc
mov
shlb
jg
jg
adc
and
xchg
dec
xor
pusha
jo
adc
inc
sbb
xchg
or
inc
clc
popa
adc
cli
lds
add
or
inc
add
and
push
cmp
je
sub
mov
loop
add
sub
inc
sub
jmp
hlt
rep
ss
neg
add
lock
movsl
lock
push
repz
push
dec
mov
or
sbb
jne
jae
xor
ret
adc
push
in
mov
sub
dec
sar
stos
aaa
or
ljmp
add
lock
jae
pop
sahf
lcall
test
dec
cmp
decb
add
jmp
pushl
jae
sub
add
cmpsb
push
push
jae
or
xchg
out
fldenv
add
pop
lds
notl
xor
movl
inc
adc
insb
inc
in
mov
pop
je
xor
cmp
jns
pop
jl
lds
andb
loopne
and
mov
repz
pushf
mov
mov
adc
pop
cmp
pop
jno
fnclex
mov
call
adc
outsl
push
push
dec
adc
push
and
jne
push
lahf
iret
notl
outsl
inc
or
jbe
jle
test
outsl
ja
sbb
mov
loopne
pop
sbb
hlt
mov
adc
mov
dec
add
mov
or
dec
rclb
dec
test
into
and
call
inc
sub
sbb
pop
dec
sub
pop
lret
or
sahf
mov
shrl
shrl
and
xor
mov
or
jge
in
lock
rep
add
jne
jle
adc
sbb
ss
and
or
push
pop
sbb
push
ret
cmpsb
and
mov
jmp
pop
divl
xchg
fs
test
test
aam
hlt
push
cmp
je
cmp
aaa
push
mov
sbb
adc
pop
jno
inc
and
clc
lock
clc
lock
sub
ljmp
pop
and
inc
ffreep
in
dec
sub
js
enter
push
add
in
mov
iret
add
aad
inc
lret
in
pavgb
fsincos
or
pop
cltd
xor
mov
push
mov
mov
dec
or
mov
addr16
cmp
lret
push
add
push
mov
nop
jl
js
xor
pop
test
mov
and
push
xor
sbb
mov
or
push
fldenv
pushl
or
sbb
dec
jmp
pop
or
mov
push
or
iret
es
mov
cld
or
jne
loopne
sarb
sbb
ja
add
add
sub
or
mov
aam
fsubrs
inc
movsb
push
fisubl
out
push
mov
push
sub
int3
sti
call
adc
jne
imul
aas
jmp
adc
outsl
outsl
pop
nop
les
stos
jae
mov
or
imul
and
add
fisubrl
fmull
inc
movsl
inc
pop
dec
mov
shll
push
inc
jae
add
fs
inc
push
adc
enter
push
clc
xchg
rorb
or
aaa
adc
shrb
cmp
nop
sub
icebp
mov
cmp
inc
jmp
xor
fstpl
pop
dec
jbe
jne
imul
lcall
fldt
cmc
aas
sbb
sbb
dec
cmp
push
lcall
and
bound
mov
pop
adc
mov
mov
in
sbb
inc
mov
adc
xor
je
push
cmp
shl
cmp
cmpl
and
add
fmull
or
jb
leave
mov
jb
or
adc
pop
rcrl
jae
movl
sbb
pop
adc
leave
sbb
adcl
push
or
loopne
push
aas
fidivrs
adc
push
lcall
and
push
add
pop
or
ret
lcall
cmp
divb
or
fsubp
aas
xchg
or
inc
cmp
push
dec
sbb
lret
sub
cmp
push
lahf
andl
int3
fwait
and
sbb
popa
rcrb
pop
or
add
es
aaa
sub
jae
mov
mov
push
rcl
jne
fadds
add
mov
jl
fisubrl
add
mov
fs
movsb
sbb
xor
adc
ds
shrb
je
cltd
jmp
xchg
xchg
xor
in
cwtl
pop
jge
and
and
xchg
shll
adc
loopne
jmp
sahf
sub
mov
cmp
xchg
sbbl
or
fmuls
jge
pop
inc
sbb
jmp
sbb
cmp
mov
fs
dec
and
add
test
sub
outsb
push
lcall
pop
je
xor
cmp
mov
outsl
mov
inc
or
and
inc
fs
pop
clc
and
popl
adc
push
jl
push
sbb
add
lret
jecxz
pop
dec
ret
jg
sub
jnp
aas
add
lods
xor
add
or
fstpl
xor
push
test
add
bound
sbb
and
push
push
adc
push
or
inc
call
ret
rcrb
push
rcrl
push
pop
jl
and
xor
push
sub
adc
leave
xchg
or
fstl
bound
call
fneni(8087
fsubs
and
or
jo
xchg
pop
ja
fstps
pop
test
ss
sbb
test
sbb
push
mov
fcoml
push
loope
dec
stc
pop
outsb
sbb
mov
rcr
adc
ss
inc
inc
push
enter
clc
or
insb
rorb
pop
sub
push
jp
outsl
mov
mov
insb
jb
gs
pop
dec
cmp
pop
dec
or
sbb
ret
sbbb
sbb
add
cld
es
jg
mov
test
loope
dec
or
sub
pop
sbb
or
jcxz
xchg
mov
popa
and
ret
cmpsl
and
add
push
mov
jo
or
rolb
mov
cmp
inc
push
pop
cmp
movsl
and
movsb
ljmp
ret
ds
cmc
xchg
loope
or
mov
jo
aaa
or
xchg
push
cmp
adc
sub
xor
add
mov
js
push
or
cld
sub
and
rclb
sbb
xor
repnz
mov
je
jo
stos
adc
loope
test
inc
sbb
pop
jnp
loop
pop
je
int
cltd
aam
push
lock
add
add
filds
push
jmp
cmp
fisubl
sbb
je
xchg
je
mov
mov
sbb
jmp
inc
xor
shrl
sbb
jl
icebp
and
testb
and
nop
imul
push
jg
xchg
mov
xacquire
or
rorb
in
pop
adc
xchg
popa
mov
jno
leave
jecxz
mov
fiadds
xchg
pop
mov
fcoms
add
inc
push
push
add
push
shlb
out
fsubrl
or
pop
push
and
jne
push
cli
and
cmp
pushl
xchg
adc
cmp
enter
mov
inc
cs
arpl
pusha
dec
xor
mov
dec
sub
cs
lahf
mov
push
je
test
mov
xchg
out
jb
jb
cmpb
lea
in
xor
pop
je
pop
cmc
add
mov
test
push
cmp
lcall
jle
fwait
cld
ret
push
sti
xor
cmp
add
push
cmp
jl
mov
inc
sbb
cmp
adc
sub
shrl
or
mov
add
and
ret
mov
dec
addr16
aaa
test
ljmp
shlb
movsb
sub
add
mov
cmp
mov
addb
repnz
dec
dec
add
or
leave
mov
mov
stos
mov
mov
adcb
gs
pop
popf
js
data16
or
pushf
xor
dec
jmp
cmc
lods
mov
mov
mov
adc
xchg
or
inc
fs
xlat
jns
jne
fadd
cmc
jle
and
in
rcll
arpl
lods
xchg
cmp
add
adc
add
out
fs
jle
xchg
xor
jmp
dec
clc
xor
inc
into
sub
jl
mov
inc
movl
xchg
stc
push
sbb
jmp
pop
inc
sbb
pop
mov
push
jle
lock
add
xchg
jne
clc
enter
dec
inc
push
lock
and
sahf
gs
sbb
cmp
jl
push
mov
pusha
add
insb
aam
mov
adc
in
pusha
loope
add
jbe
add
lods
ret
cli
push
sbb
decl
mov
dec
jg
jecxz
mov
adc
orl
sub
jne
lret
pop
hlt
mov
mov
xlat
fadds
rolb
xor
xchg
test
out
jae
and
dec
dec
out
jb
mov
pop
mov
out
loop
pop
or
adc
test
push
ljmp
and
test
ja
push
push
dec
or
dec
shl
xor
jnp
sub
xor
es
lret
mov
xlat
inc
cmc
clc
push
mov
ljmp
add
jo
mov
add
mov
mov
mov
xlat
je
cmp
jg
adc
shll
testb
repz
xchg
loop
inc
and
sub
cmpb
jmp
inc
jl
mov
test
pop
je
cld
ja
sub
cmpl
sub
pop
adc
daa
mov
and
push
push
or
push
in
push
pop
push
mulb
and
das
jge
pop
xor
out
cmp
push
mov
adc
dec
and
pop
std
aam
xchg
push
push
insl
cld
mov
in
outsb
test
test
push
fstpl
pop
jmp
mov
cmp
std
cmp
scas
test
inc
sbb
jo
xor
outsl
push
push
mov
mov
pop
xchg
adc
jmp
sub
push
inc
sub
hlt
jo
je
xchg
pusha
push
divb
cli
adc
lea
adc
pop
mov
or
xor
arpl
popa
mov
pushf
repz
push
sbb
jmp
popl
lods
xor
xchg
or
or
mov
scas
outsl
and
sub
or
popf
test
pusha
in
jmp
push
mov
mov
mov
dec
dec
and
sbb
cmp
imul
repnz
adc
loop
mov
xor
sbb
mov
pop
shr
stc
cmp
xor
cmp
xor
ret
xchg
jecxz
mov
push
xor
jne
pop
sub
cmp
andb
add
nop
push
popa
sbb
movsb
iret
xchg
mov
fiaddl
push
or
adc
dec
dec
outsb
mov
sbb
sub
dec
dec
dec
xor
cmp
xchg
adc
cmp
inc
and
pushf
pushf
fmull
cmovs
pop
pushf
pushf
push
pop
add
daa
daa
fs
daa
daa
je
jl
imulb
mov
adc
dec
es
mov
xchg
cwtl
pushf
mov
movsb
test
sub
popf
bound
adc
adc
push
add
or
sub
insl
xchg
mov
and
mov
adc
movsb
cltd
nop
in
adc
sbb
sbb
clc
insb
movsb
cltd
and
and
sbb
mov
pop
lret
adcb
adc
cltd
ret
test
mov
sbb
cmp
inc
js
mov
dec
jne
roll
out
rorb
inc
push
jmp
ss
pop
mov
mov
and
mov
orb
popa
dec
fwait
sub
ret
jb
sbb
icebp
es
push
push
mov
arpl
add
lods
int3
xchg
aam
add
pop
incl
mov
sbb
fdivrl
sub
add
push
or
and
sub
jmp
sbb
out
es
xchg
addb
cmp
jecxz
lea
je
test
dec
jnp
push
push
je
orl
sbb
sahf
ret
and
lcall
mov
inc
outsl
nop
push
add
fmuls
add
push
jle
jno
clc
cwtl
aam
popf
mov
scas
sbb
sarb
lock
cmp
jae
orb
sbb
push
aam
add
or
cmp
pushf
dec
and
or
dec
and
and
and
nop
mov
dec
or
mov
add
stos
ret
sbb
addr16
fs
adc
repz
pop
mov
int3
nop
cmp
xchg
push
repz
jecxz
xor
cmp
in
xchg
mov
push
push
popa
fs
add
ret
jl,pt
sub
mov
or
clc
dec
mov
mov
adc
ss
les
mov
jmp
sub
dec
fsubrs
iret
jo
test
lcall
pop
std
clc
ja
mov
mov
loop
xchg
and
outsb
insb
sbb
adc
shrb
push
and
or
adc
and
filds
jb
push
mov
push
add
jmp
enter
dec
lods
lea
rorb
sbb
mov
loope
xorl
jnp
call
notb
pop
sub
out
mov
pusha
pop
sub
popf
sub
lock
ds
daa
mov
jnp
adc
test
xor
mov
test
and
pop
mov
xor
xchg
or
jne
cld
push
imul
xor
push
push
mov
ret
xor
pop
push
icebp
push
and
divb
sbb
int3
mov
add
sar
mov
sub
sti
add
or
mov
pusha
or
insb
mov
inc
int3
jne
aad
dec
call
adc
cwtl
and
push
adc
std
mov
sbb
xor
nop
mov
mov
test
call
push
inc
pushl
mov
je
add
jns
dec
sub
push
ss
je
and
adcl
add
mov
adc
push
push
mov
mov
rorl
mov
pop
cmp
in
andl
sub
adc
push
hlt
mov
sbb
stos
jmp
mov
pop
mov
mov
out
lret
mov
push
les
enter
push
in
js
lret
xchg
cmp
cmpsl
cmpsb
ds
inc
call
pushf
pop
ss
push
dec
inc
lea
or
dec
jno
add
sub
lea
mov
pop
movb
xchg
mov
fcoms
mov
mov
sub
pop
pop
dec
sub
cmp
mov
mov
dec
jo
cmpl
mov
insl
mov
test
subb
rolb
jno
add
clc
jecxz
mov
cltd
cmp
pop
add
push
cmp
enter
ret
sub
aam
adc
jecxz
jle
add
inc
int
cmp
daa
inc
movsl
pop
lds
push
clc
test
and
push
add
pop
cmp
or
jmp
cmp
sti
aam
iret
sbb
adc
push
sysenter
sbb
adc
xorb
pop
mov
inc
and
lret
fucom
jecxz
and
jmp
xchg
mov
andl
pop
mov
aaa
movsb
xlat
mov
cmp
mov
inc
cmp
cmp
pop
mov
or
adc
test
adc
mov
sub
and
mov
inc
pop
inc
ja
jmp
add
xor
mov
push
cltd
sbb
pushl
in
loopne
and
movsl
dec
add
xchg
add
out
adc
cmp
sti
mov
orl
pop
mov
inc
inc
sbb
cmpsb
insl
dec
cmp
and
mov
cmp
mov
add
xchg
pop
add
jo
andb
stos
dec
dec
stc
pop
xchg
cmp
sbb
mov
mov
add
xchg
push
xchg
cmp
add
sub
addb
mov
push
mov
mov
push
or
or
xchg
test
jae
cmp
std
jno
xchg
add
dec
and
iret
lea
jns
je
add
scas
lock
jmp
or
and
push
sub
mov
cmp
jecxz
lea
cmp
pushl
lods
adc
jns
inc
ja
shlb
insb
ljmp
loopne
inc
jne
das
lods
mov
divl
fidivrs
and
xor
add
cmp
xchg
and
pop
jecxz
leave
sbb
orb
mov
pop
and
pop
ret
add
js
sub
and
and
or
push
je
aaa
push
mov
cmc
xor
pop
pop
sub
and
ss
popa
or
or
bound
or
lret
mov
mov
sbb
jmp
sbb
xor
mov
adc
movsb
test
jmp
unpckhps
or
inc
mov
sbb
or
push
pop
adcl
push
mov
jge
andl
inc
add
inc
jo
sbb
dec
jg
push
push
pop
popf
add
jmp
fidivrl
add
fldenv
push
sbb
push
and
and
xor
sbb
add
mov
shrb
and
fdivs
mov
pop
inc
xor
inc
in
les
test
push
mov
mov
add
nop
sbb
and
aam
xchg
cmpb
aaa
xor
xor
xlat
cmp
cmp
addr16
mov
ja
into
sub
push
pop
adc
pop
orl
mov
add
pop
imull
pop
unpcklps
dec
pop
addr16
mov
mov
out
pop
imul
repz
pop
cmp
lods
jg
xchg
fnstcw
cmp
mov
adc
jge
sub
dec
pop
dec
sub
test
push
adc
push
add
aas
pop
mov
push
jne
mov
fs
icebp
cs
lea
cmc
lods
pop
cld
pop
pop
arpl
inc
and
jg
mov
add
xchg
add
clc
je
xor
fsubl
cltd
into
call
mov
lock
fildll
mov
mov
mov
push
rorb
je
mov
jmp
push
and
loop
sub
je
inc
cmp
shlb
ret
inc
test
add
js
pop
sbb
outsb
dec
mov
or
dec
sub
aad
cld
dec
push
enter
inc
mov
and
adcl
adc
push
call
push
leave
js
xor
outsb
test
ret
dec
inc
imull
push
dec
repz
lret
push
jecxz
jmp
mov
fadds
out
loop
jle
mov
cmp
into
xchg
ret
xchg
insb
push
xchg
jp
addr16
pop
movsl
cmp
and
pop
adc
cli
sbbb
push
gs
nop
add
ja
adc
sbb
or
sub
cmp
dec
int3
dec
mov
inc
cmova
push
cmp
mov
or
jbe
push
cmp
mov
test
push
cmp
fsubs
sarb
stc
add
sub
inc
sub
nop
sti
adc
scas
dec
rolb
sub
das
enter
mov
dec
mov
dec
pop
mov
sub
push
testl
dec
ret
je
inc
push
jge
sub
daa
inc
sbb
mov
stos
sub
sbb
push
mov
push
imulb
jno
inc
jne
adcl
scas
xor
outsl
adc
cld
dec
mov
cmp
lock
dec
jnp
repnz
das
adc
xlat
es
outsl
inc
jae
mov
cli
jb
into
jl
out
jle
xchg
mov
mov
out
jmp
or
or
pop
icebp
in
pop
or
test
je
gs
mov
xor
mov
add
jle
data16
and
movsb
loope
shlb
sahf
or
adc
and
push
stc
add
mov
and
mov
jbe
test
dec
or
ror
stos
mov
adc
adc
sub
fldenv
xlat
dec
add
int
sbb
pop
add
lea
push
mov
rolb
test
pushf
pop
mov
xor
dec
push
popf
pushf
pop
sub
je
push
popf
ds
cmp
add
add
stos
outsl
call
push
data16
pop
imull
movb
jecxz
or
cmp
sub
sbb
pop
test
add
js
or
xchg
in
imul
lahf
mov
pop
add
bound
dec
sti
mov
mov
xchg
test
and
movsl
or
add
or
iret
and
mov
and
shll
dec
xor
adc
or
inc
outsb
aas
and
shr
es
jmp
push
clc
loopne
and
and
or
in
inc
cmp
cmp
test
adc
cmp
adc
test
xor
xchg
cmp
inc
mov
xor
je
sbb
push
dec
push
sahf
or
sub
inc
jmp
push
divl
jmp
sbb
lock
cmp
outsb
and
mov
and
aaa
jbe
xor
jecxz
jge
add
or
jmp
jnp
xor
inc
mov
or
xor
pusha
xor
sub
add
es
test
and
and
add
fstps
lcall
pusha
pusha
loope
pop
sub
dec
shrl
dec
and
adc
mov
xchg
fstp
ds
pusha
inc
cmpsl
pop
cmp
push
or
push
insb
cmp
adc
es
adc
lret
sub
add
add
add
pop
xor
mov
js
dec
jge
loop
push
xor
dec
je
add
or
cld
or
sub
push
mov
shlb
or
negl
std
sub
out
and
subb
cmp
pop
xorb
sbb
jmp
leave
int
jbe
and
inc
add
adc
outsl
bound
fldenv
jecxz
mov
or
pop
push
cmpb
mov
std
out
mov
inc
movsb
and
xchg
adc
cld
pop
cmp
notb
inc
pop
sub
fimuls
popa
adcb
fs
adc
sub
sbb
xor
lret
out
sar
cmp
jo
jmp
aam
xchg
pop
iret
enter
sbb
test
in
fcompl
fstp
outsl
out
ljmp
add
sub
sub
jb
addr16
push
push
in
cmpsb
xor
or
mov
add
int3
adc
dec
popa
mov
hlt
add
mov
add
mov
add
sub
mov
fstpl
lds
mov
add
jge
ffree
repz
jge
push
mov
inc
add
mov
js
repnz
push
add
or
hlt
insl
cld
mov
bound
lahf
sbb
pop
test
ss
insl
sbb
push
mov
sbb
jp
dec
in
jo
loopne
push
inc
lock
pop
mov
pop
push
push
sahf
jmp
pop
movsb
addb
add
aam
std
repnz
and
sbb
or
and
inc
lods
add
lock
add
add
sub
jle
push
add
mov
fidivs
add
and
dec
jmp
jmp
push
xchg
push
or
out
loopw
push
rolb
and
pop
cld
and
mov
or
mov
stos
icebp
mov
dec
cmp
je
inc
loop
or
sbb
daa
loopne
or
adc
fists
sub
js
xchg
adc
loopne
subb
lods
push
xchg
pop
pop
push
rcrb
add
add
xchg
out
pop
adc
push
ss
push
inc
das
in
sti
or
jno
mov
dec
inc
and
xorl
or
or
mov
ret
mov
or
mov
in
insl
jo
imulb
out
gs
mov
mov
push
pop
call
mov
mov
nop
sub
rolb
mov
push
or
mov
mov
rcr
sar
xor
fmull
push
icebp
inc
pop
adcb
into
xchg
push
popa
or
xchg
push
sahf
fisttpll
fidivrs
adc
adc
inc
jmp
jno
jbe
mov
fdivs
pushf
mov
mov
adcb
leave
int3
sub
adc
outsb
adc
push
subl
xlat
add
loope
ret
fcmovbe
or
sahf
push
rolb
cld
shl
jne
mov
sti
gs
popa
fs
mov
and
mov
sbb
sahf
push
les
inc
repnz
pop
fadds
into
push
sbb
mov
cmp
dec
push
or
insb
ljmp
bswap
imul
mov
nop
adc
sbb
mov
or
stos
inc
mov
dec
pop
add
or
push
out
mov
pop
sbb
jne
pop
dec
jo
fdivs
xor
push
add
or
jl
sbb
sub
ror
fdivl
ljmp
loopne
popa
in
aad
push
fsave
cmp
test
sbb
loop
flds
mov
sbb
mov
mov
or
cld
xchg
mov
push
mov
fldt
add
adc
int3
and
sbb
mov
and
jle
call
test
jb
mov
inc
dec
out
jo
push
add
je
sbb
call
inc
xchg
scas
push
inc
es
mov
mov
ret
or
and
push
push
jp
imul
adc
mov
mov
bsr
add
adc
sbb
jbe
xchg
rclb
dec
jmp
sbb
lods
adc
xlat
daa
pop
data16
mov
movsb
shlb
adc
arpl
sub
pop
insl
push
mov
cwtl
movsl
data16
mov
arpl
out
mov
ds
xor
push
mov
adc
loopne
add
imul
adc
jb
inc
mov
pop
gs
lea
mov
inc
xor
jns
scas
psubq
xchg
sarl
test
lds
enter
sti
or
loope
mov
add
push
cltd
lret
pop
xor
popf
aam
add
adc
lods
or
xchg
in
rorb
and
add
inc
xor
push
add
dec
dec
inc
add
and
sub
scas
pop
dec
cmpl
push
inc
add
fwait
add
or
test
and
push
clc
sub
push
push
cli
sti
add
and
xchg
mov
pop
test
jne
or
jl
mov
dec
mov
test
or
aam
sbb
mov
dec
fxch
cli
sub
mov
cltd
and
add
or
jns
insl
push
rcrl
loopne
mov
pop
jbe
pop
sub
sub
inc
shl
mov
les
arpl
loop
rolb
push
inc
jmp
adcl
out
ja
cli
repz
push
cltd
insb
pop
and
mov
out
lcall
into
loopne
insb
sub
dec
loop
push
test
lea
xor
repnz
icebp
je
fs
jb
cmp
sbb
sub
adc
pop
pop
sub
cli
repnz
pop
movb
pushl
push
mov
sarb
jo
and
pop
and
or
or
imul
inc
mov
xor
cmp
dec
and
ret
or
int3
andl
add
push
rclb
xor
cmp
enter
mov
movsl
xor
or
mov
cmp
sub
not
cmpsl
rclb
cmp
pop
popf
je
mov
and
pop
ds
push
or
out
inc
sbb
mov
jl
mov
shl
sbb
pop
sub
sarb
je
mov
cltd
xchg
aam
test
sbb
xchg
test
pop
in
addr16
dec
mov
hlt
test
pop
push
pop
or
data16
sub
push
mov
sub
cmp
add
imul
das
mov
mov
push
pop
xor
pop
icebp
das
sub
cli
xor
lock
push
inc
lock
inc
jo
inc
mov
sbb
jle
icebp
dec
jae
cmp
mov
out
addl
mov
xor
lea
jl
xor
add
andl
xor
mov
fdiv
dec
xor
lea
nop
pushf
inc
jp
or
cmp
rclb
pop
or
jecxz
push
sbb
adc
and
jg
mov
or
cmp
mov
test
xor
in
test
and
push
les
pop
xchg
in
cmp
jne
jne
and
scas
mov
addl
sbb
add
sub
adc
and
je
sbb
nop
fs
or
jl
push
enter
xchg
movsl
sub
mov
aad
es
add
mov
xor
push
adc
into
mov
cwtl
or
xor
mov
shl
xchg
dec
jne
mov
nop
and
stos
test
lods
mov
js
or
xor
push
in
jne
inc
jmp
mov
sub
cs
jp
clc
or
xchg
add
test
cs
out
lods
mov
sub
cmp
ja
push
dec
jmp
jbe
inc
mov
mov
outsl
sarb
add
add
or
lock
or
mov
jmp
xor
int3
dec
add
sbb
push
adc
sar
jmp
cmpsl
mov
mov
lods
pusha
sub
lock
or
mov
jbe
inc
jle
cmp
push
xor
xchg
add
gs
dec
push
push
roll
jbe
lods
xor
pushf
push
cmp
add
push
jmp
lcall
sbb
mov
xchg
es
pushf
mov
pop
jge
pop
in
pop
negl
mov
nop
add
sti
lods
xchg
les
stos
dec
jae
imul
sbb
aad
cmp
jmp
subb
and
outsb
mov
ja
pop
lea
sbb
pop
push
sub
jle
pop
cmp
in
orl
cmp
aas
push
and
addl
std
xorb
jmp
je,pn
mov
xchg
scas
call
mov
add
mov
mov
mov
dec
addr16
cmp
adc
push
incb
testl
movsb
pop
mov
loop
push
adc
ret
xchg
sub
cld
in
cli
mov
imul
mov
stc
aas
roll
jg
std
jecxz
add
in
jbe
out
pushf
jmp
push
cwtl
pop
mov
xor
mov
dec
inc
and
insb
dec
hlt
mov
jne
xor
xor
dec
push
pop
inc
push
push
cwtl
jge
shll
mov
dec
adc
mov
lcall
test
cmp
cli
sahf
mov
sbb
lods
test
cmp
mov
jge
mov
popf
fnstsw
lock
xor
jne
add
xchg
lahf
adc
inc
xabort
jo
out
dec
test
add
xchg
pop
push
inc
mov
call
popf
fdivrp
dec
sbb
jb
mov
loopne
and
mov
or
dec
or
sbb
push
jno
push
out
decl
icebp
mov
ret
and
mov
into
nop
fs
mov
inc
mov
iret
sbb
jns
mov
ja
ja
popa
lret
mov
pop
mov
loop
int
movb
testl
add
jne
or
jne
das
fwait
pop
imull
into
jne
inc
or
cmp
mov
jae
cmp
jne
hlt
int3
add
adc
xchg
jne
mov
hlt
rolb
xor
test
rolb
popf
mov
or
les
mov
or
sbb
les
scas
sbb
cld
jns
hlt
fs
aad
loope
dec
ja
shr
aaa
mov
insl
mov
pushf
jnp
data16
mov
stc
jg
stos
and
lock
aaa
lret
clc
popf
mov
test
js
mov
cltd
add
aam
add
or
shr
loop
rcll
inc
lock
mov
jg
or
movsb
clc
lret
sub
mov
xor
mov
notb
mov
xchg
rcrb
insl
dec
lods
jge
fadd
loopne
shr
or
mov
sahf
dec
adc
jo
in
jne
insb
mov
das
int3
movsb
les
mov
push
ja
aam
loope
or
rorl
sub
sahf
cmpsb
insl
xchg
push
add
fisubl
in
cmp
pop
es
orl
push
call
lods
jmp
fidivl
rol
pop
jle
jb
xor
loope
adc
fmull
jo
dec
ja
orb
sbb
or
addr16
cmp
movb
lds
push
push
into
jmp
scas
jmp
shll
mov
fadds
movsb
int3
adc
rcr
test
int3
popf
add
jp
lret
jnp
into
mov
sub
add
negb
cmp
sbb
movups
sbb
xor
or
push
stos
mov
call
xchg
xchg
and
add
sub
add
push
add
repz
repz
or
pop
test
iret
cmpsl
lea
repz
es
inc
mov
test
jne
cmp
and
xor
inc
inc
scas
inc
mov
adc
mov
mov
pusha
mov
adc
adc
mov
movsl
push
or
test
imul
adc
xchg
xchg
adc
inc
cs
scas
cmp
ss
pop
pop
push
or
out
mov
dec
cmpb
je
mov
add
sbb
sbb
add
or
mov
lock
add
out
call
mov
pop
inc
gs
pop
push
sub
out
clc
cmp
loope
xchg
rorb
add
in
lcall
mov
std
imul
roll
leave
ds
xchg
add
popa
adc
jns
or
and
test
add
xchg
test
test
sbb
in
sub
mov
mov
jge
cmc
jmp
mov
shlb
and
outsb
or
add
dec
or
adc
andb
test
lahf
push
cmpl
or
cmpl
add
mov
and
sbb
cmpsb
aas
sub
movb
pop
dec
rolb
add
adc
adc
push
ficompl
cld
loop
xorb
mov
mov
sbb
loop
lock
incl
mov
or
jmp
sub
add
cmp
lock
imul
add
test
mov
mov
cs
data16
jne
jns
les
sub
call
pop
idiv
add
ret
or
sub
add
cwtl
aam
pushf
fiaddl
xchg
add
adc
add
push
push
addr16
sub
dec
mov
xor
adc
dec
dec
xor
inc
xor
adc
addb
mov
call
xor
lahf
or
push
ret
jbe
xchg
dec
adc
push
add
sub
adc
lahf
ret
fcoml
lods
aaa
mov
insl
fbstp
cmp
xor
cltd
pcmpgtd
add
shll
sbb
orb
cwtl
add
mov
mov
bound
loopne
mov
add
popa
mov
sub
xorb
lds
push
call
jge
adc
testl
xchg
lret
sub
cmp
ret
jge
xchg
or
and
xchg
rclb
pop
adc
add
sub
adc
lret
lret
xchg
or
mov
nop
jge
daa
cmp
add
push
subb
or
sar
lea
test
mov
add
xchg
xchg
into
dec
cmp
inc
sub
cld
push
lds
das
push
add
push
xor
enter
test
loopne
js
push
cmpsb
movsl
icebp
dec
add
fdiv
mov
leave
and
add
cmpsb
movb
pusha
and
gs
je
rolb
dec
and
dec
fwait
mov
aad
adc
neg
sbb
jecxz
out
pop
aas
mov
jg
ret
daa
xor
or
jne
pop
cmp
mov
add
mov
or
sub
aam
adc
add
andb
xor
or
push
add
xor
sub
mov
mov
push
sub
adc
out
mov
mov
inc
and
and
retw
mov
sbb
add
add
ret
mov
add
dec
sub
lods
enter
out
pop
pushf
int3
sbb
ss
mov
push
cmpsl
clc
mov
or
jg
outsb
cmp
xchg
stc
inc
add
dec
lret
cltd
pop
shr
out
xchg
clc
sub
mov
push
shrl
or
js
push
jo
incb
push
dec
push
pusha
and
mov
add
push
or
xchg
lock
cmp
and
mov
pop
sbb
js
jg
clc
add
jb
push
sub
or
inc
adc
neg
cmp
mov
lock
and
inc
shll
mov
int3
nop
cmp
add
jbe
mov
mov
mov
outsb
add
push
jg
lods
jb
outsl
in
ret
dec
dec
inc
dec
pusha
and
xchg
pop
or
or
lods
jo
lcall
push
popa
imul
cmpsb
stc
test
inc
test
dec
push
es
mov
add
mov
xor
add
arpl
loopne
ret
call
lock
cmp
mov
and
sub
mov
xchg
add
or
inc
and
inc
adc
inc
daa
jp
sarb
mov
jne
add
mov
vpcmpgtd
mov
pop
xor
add
add
out
into
mov
es
xchg
adc
loopne
test
pop
dec
shrl
xor
pop
push
rolb
jne
cmp
dec
loop
push
sub
inc
lret
jbe
rol
or
shlb
xor
lea
mov
mov
enter
fldl
rcll
push
jmp
insl
cmp
add
cld
jl
lock
call
or
popl
mov
rorb
push
insl
or
loop
mov
jbe
sbb
jns
testb
cmp
clc
gs
or
je
data16
fwait
fwait
fwait
repnz
popa
je
inc
je
jnp
and
out
xor
xchg
or
stc
es
dec
push
in
add
sub
and
aad
push
or
sbb
cmp
mov
repz
loop
and
adc
call
jne
fmull
insl
push
pop
clc
fstps
add
pop
xor
out
dec
imulb
xlat
push
pop
repnz
add
rol
add
push
pop
ret
xor
dec
pushf
add
push
or
clc
inc
mov
or
je
ds
mov
dec
inc
push
inc
mov
mov
ja
nop/reserved
or
test
mov
cmpb
jne
dec
rol
jp
ds
xor
xchg
sarl
xchg
sarb
hlt
xchg
hlt
xor
xchg
cmp
push
addb
cmp
add
ret
dec
lahf
xor
cmpsl
hlt
icebp
cld
lahf
dec
push
sub
aas
sub
push
into
add
shrb
popf
ret
inc
outsl
push
sub
enter
xchg
aaa
je
xchg
decb
sub
and
mov
push
int
out
rorb
je
sub
fld
or
jle
dec
mov
sub
mov
pop
inc
mov
loopne
iret
xor
in
jmp
insl
loop
dec
inc
mov
bound
mull
mov
cmpl
mov
cmp
dec
test
push
mov
push
mov
or
or
cmp
imul
pop
pop
pop
out
adcb
popa
jle
ds
lret
pop
adc
dec
imul
fsubl
pop
or
push
fdivs
jge
pusha
cmp
adc
mov
fidivrl
aas
adc
mov
add
sbb
and
je
adc
sub
mov
xchg
xchg
cmp
or
mov
mov
icebp
dec
and
pop
mov
sahf
inc
fsubl
add
xor
loopne
and
dec
dec
int
ffreep
dec
jne
push
push
jmp
or
jmp
testb
je
push
ljmp
inc
mov
adc
shl
sbb
ficompl
int
jae
or
xchg
cmp
jne
dec
arpl
xchg
sbb
add
movsb
hlt
js
mov
sbb
les
push
jnp
shll
loopne
scas
push
sbb
jne
in
inc
subl
push
adc
cmpsl
mov
and
jns
es
push
into
push
int
pop
sub
aad
add
cmp
jae
in
cld
mov
dec
dec
and
or
add
mov
jecxz
push
push
jbe
mov
addr16
jns
jne
arpl
mov
cwtl
push
jp
cmpsl
gs
cmp
add
mov
mov
adc
and
jae
faddl
movl
cwtl
or
add
ret
sbb
mov
jmp
fcmove
cmp
push
cmp
adc
mov
jb
cmovbe
add
mov
add
call
sub
push
cmp
outsl
arpl
and
xor
adc
daa
sbb
inc
jmp
arpl
push
xor
or
mov
ss
es
stc
inc
inc
test
data16
sub
cmpsb
ss
mov
push
cmp
movsb
add
insb
dec
cmp
test
jns
mov
loopne
or
jo
add
mov
aad
rcrb
xchg
aaa
push
inc
sbb
or
mov
xor
mov
inc
in
adc
pop
xchg
mov
pop
cmp
sbb
repnz
pusha
and
out
pop
fmull
jge
xchg
mov
sub
lea
mov
enter
xchg
push
lea
mov
pop
rorl
dec
movsb
cmp
sub
jmp
xor
push
leave
mov
jp
xchg
test
rorb
sub
ljmp
ja
pop
cwtl
loopne
mov
jae
jno
xchg
or
xor
adc
or
cmp
adc
add
sbb
mov
aaa
or
mov
sub
inc
jb
lea
cwtl
stos
fs
xchg
push
sbb
ret
nop
subl
sub
or
push
and
adc
adc
cmp
add
pop
xor
jmp
hlt
dec
inc
dec
pushf
ja
sti
and
les
or
inc
and
push
idivb
mov
sbb
mov
jge
adc
push
loop
jne
js
mov
js
js
imulb
or
cmp
lret
ret
cmp
cli
popl
dec
cmp
lea
or
adc
shll
repz
add
or
mov
add
shr
incb
pop
or
mov
add
add
or
bound
scas
sahf
sbbb
mov
mov
cmp
push
mov
mov
or
add
int3
cld
jmp
orl
dec
fstp
inc
ds
add
inc
dec
add
add
testl
cli
mov
scas
and
adc
push
sub
adc
push
jp
adc
repnz
adc
pop
mov
push
dec
test
iret
adc
pop
add
sub
data16
sub
dec
imul
xchg
sbb
es
ficoms
adc
or
shl
adcl
lock
mov
pop
inc
adc
rcl
sbb
int3
sub
add
incl
stos
imulb
mov
test
test
adc
inc
aaa
sbb
lret
je
dec
call
inc
pop
or
sub
or
cmp
ret
mov
movsb
icebp
cs
ficoml
fdiv
sbb
mov
cmp
xor
lods
fldenv
push
add
xchg
adc
push
pop
enter
sub
jne
add
call
pusha
push
ljmp
and
dec
push
je
mov
jne
ljmp
shrb
cmp
out
add
mov
add
inc
inc
add
push
add
fld
or
cmp
lret
mov
or
out
leave
inc
xor
dec
cmp
mov
mov
jl
cmpb
jl
xor
subb
idiv
dec
xor
inc
xchg
adc
inc
push
xlat
push
shll
bound
stos
push
adc
push
jg
dec
inc
push
push
mov
push
push
and
pop
nop
iret
ds
mov
rorl
inc
adc
dec
ljmp
adc
mov
cmp
sub
jmp
adc
cmp
mov
mov
cmpsl
call
loope
aad
fs
and
enter
adc
or
test
jne
jle
jle
out
add
roll
inc
mov
test
jp
xor
je
mov
pop
mov
push
pop
add
pop
ljmpw
fnstenv
fwait
ret
or
sarb
movsb
test
movsw
xor
or
outsb
rorb
sbb
les
or
and
nop
inc
dec
or
push
pop
mov
dec
pop
hlt
iret
adc
jge
inc
inc
div
fcomps
fiaddl
sbb
sbb
inc
inc
js
jns
sbb
xor
xor
xorl
sbb
fcoms
test
cltd
push
inc
and
fnstenv
sub
sbb
mov
xchg
adc
sbb
and
xor
cmp
dec
jns
jp
mov
daa
pop
pop
pop
push
cmp
jae
or
jae
pop
push
mov
ljmp
shr
and
stc
push
je
mov
push
idiv
and
cld
xchg
and
aam
xor
shlb
jl
or
add
and
or
mov
ljmp
mov
add
les
jge
push
xchg
adc
es
shlb
rolb
gs
int
or
mov
jns
aas
cmc
push
add
sub
jne,pn
pop
push
ds
add
and
cmp
push
or
adc
hlt
cmpsb
test
push
movsb
or
mov
insb
mov
mov
cmp
push
pop
and
lock
cmc
nop
dec
gs
add
mov
mov
or
cmp
push
int3
ljmpw
and
jo
enter
aaa
dec
fidivs
or
push
in
jge
dec
addl
fimull
mov
mov
testb
sub
push
sub
leave
je
wbinvd
incl
dec
mov
mov
mov
into
xor
in
pop
je
movsb
and
add
out
push
cmp
ja
add
cmp
adc
cmp
jne
shll
dec
push
shll
leave
adc
mov
xor
idivl
pop
add
nop
sbb
dec
insl
and
push
cmp
adc
cmp
mov
mov
push
xor
pop
pop
jne
push
es
scas
sbb
das
mov
jmp
idiv
fidivl
iret
push
push
pop
cwtl
jl
js
mov
inc
ljmp
mov
pop
and
mov
lods
movsl
dec
loopne
push
sub
inc
jne
or
adc
add
cltd
std
mov
xor
mov
in
jmp
mov
dec
aaa
pop
mov
jns
inc
inc
sbb
test
pop
cmpb
mov
jb
jno
cmp
push
xchg
xor
inc
jmp
sub
xchg
xor
push
inc
mov
adc
push
sbb
sahf
push
push
in
or
les
jns
cltd
add
xor
in
inc
sbb
add
sub
xor
pop
mov
or
pusha
sub
sarb
dec
mov
push
rcl
repz
repz
aad
xlat
inc
insb
ds
fcomp
fstpt
orb
data16
xor
movb
jmp
or
je
lea
data16
data16
sub
shl
cmp
mov
or
test
mov
mov
add
push
or
or
add
cltd
mov
aas
in
mov
add
or
gs
outsb
or
je
test
and
call
cmp
es
push
xor
mov
pusha
push
jns
sub
push
bound
and
jg
add
push
fisttps
rcrb
leave
adc
or
idiv
jg
sbb
dec
lea
sar
inc
bound
aaa
js
mov
bound
or
fisttpl
mov
push
xlat
add
out
loop
push
pushf
push
mov
lock
sub
testb
push
mov
add
es
xchg
dec
or
jle
insb
jp
mov
jo
adc
les
decl
inc
fmuls
sub
add
hlt
mov
dec
and
not
decb
or
mov
and
lea
pop
sbb
les
movsl
jns
jae
xchg
inc
adc
add
push
adc
push
inc
pop
pop
les
or
dec
testl
lods
loopne
and
inc
inc
or
push
rcrl
sub
mov
mov
jne
inc
notb
mov
dec
test
test
js
mov
imul
loopne
push
and
fimull
mov
fimuls
cltd
cwtl
dec
push
dec
enter
jns
je
sub
cmp
pop
shll
inc
repz
addl
ror
fwait
cwtl
mov
jge
jl
test
test
rol
add
stc
jle
jle
shrl
mov
shr
movb
cld
or
and
hlt
rorb
add
ds
push
push
push
lret
mov
inc
xchg
int3
or
lods
outsl
loope
popf
ss
shrl
in
lea
mov
or
dec
mov
pop
sbb
inc
lods
cs
movsb
lock
cli
and
push
pop
cli
inc
cli
div
pop
adc
clc
inc
mov
ljmp
call
push
push
jnp
sbb
adc
mov
or
ret
sub
cmp
scas
outsl
mov
mov
xor
mov
icebp
js
and
and
out
je
xor
mov
imul
mov
xor
and
dec
cmpsl
add
jge
divb
or
pushw
sub
shll
jge
adc
mov
jb
dec
enter
add
or
sbb
xor
mov
sbb
dec
sbb
andb
ss
inc
arpl
fldl
sarl
cmpsb
push
sub
jl
mov
adc
or
call
out
xor
push
cmp
cld
lea
fisubl
mov
bound
pop
insl
xchg
inc
sub
lods
rolb
cmp
daa
loop
add
scas
xor
sbb
movb
and
sbb
sbb
orl
push
in
sub
or
jge
or
cwtl
mov
lock
jmp
add
nop
lret
jne
sbb
in
sbb
cmp
mov
and
mov
adc
push
push
subl
sbb
add
fistpl
and
inc
add
add
push
nop
push
mov
cmp
cmp
push
pop
add
jge
jle
out
adc
fs
mov
mov
popa
mov
call
stos
fisttpl
jb
push
test
rcll
cmpsb
mov
daa
add
bound
dec
mov
imul
jmp
cs
loopnew
fmuls
rclb
pop
add
and
inc
testl
adc
cltd
into
in
out
adc
pushf
rcrl
add
ds
repnz
mov
add
lahf
stos
xchg
or
out
enter
jl
or
xor
ljmp
push
movsb
xabort
mov
add
enter
test
ja
cmp
push
shlb
add
testl
jne
incl
mov
add
in
into
or
mov
inc
xor
add
pop
dec
aad
bswap
jmp
dec
nop
dec
add
add
xor
adc
jle
cmp
movb
dec
cmp
mov
mov
add
add
fadds
push
mov
mov
test
mov
jne
or
mov
jb
int
pushf
cld
sub
enter
inc
ret
and
add
push
rcll
add
xchg
jbe
add
rclb
mov
add
add
add
cmpsb
adc
and
popf
loop
mov
mov
je
push
mov
inc
jl
je
cmp
dec
popf
movsl
dec
loopne
or
dec
cmp
jmp
mov
sahf
mov
add
or
sub
add
nop
movsl
xchg
mov
sub
imul
mov
movsl
shlb
add
pusha
and
add
test
inc
pop
mov
mov
iret
enter
xor
into
pusha
inc
cmp
pop
and
pop
pop
cmpb
cmpps
jne
or
or
aam
jns
pop
or
sbb
inc
push
dec
cmp
adc
lret
or
fsubl
add
adc
sbb
jl
insl
lock
mov
and
jns
pop
add
or
dec
pop
lahf
push
add
push
and
xchg
xor
and
enter
outsl
icebp
add
xchg
mov
nop
mov
test
push
jle
cmp
fldcw
mov
pop
nop
and
xorb
inc
es
or
inc
stos
add
or
add
ret
dec
cmp
dec
aam
adc
mov
sete
nop
mov
bound
data16
cmp
or
add
addr16
lcall
cmp
pop
jbe
jle
pusha
xor
pop
mov
xor
inc
jg
daa
daa
iret
lret
into
into
into
xor
pop
and
pop
sub
push
pop
nop
pop
push
shl
cmp
push
loop
xchg
mov
or
pop
xor
bound
dec
push
add
jp
popf
pop
lcall
add
or
shl
adc
enter
add
add
mov
or
int
sbb
je
and
leave
adc
inc
pop
jo
mov
sub
jmp
jmp
lret
ret
cwtl
aad
xor
xchg
incb
push
push
scas
sbb
push
pop
or
and
pushf
add
shll
ret
pushf
pop
fsubrl
cmp
call
push
dec
xor
xor
wbinvd
sbb
adc
sub
nop
sahf
jle
xchg
loopne
mov
fimuls
adc
sbb
xlat
jle
sbbb
or
and
mov
jge
addr16
ljmp
ljmp
xor
pop
pushf
icebp
daa
sbbb
mov
and
lock
sbb
aas
push
test
push
adc
addr16
xchg
pop
cltd
cmpb
loopne
insl
add
inc
jmp
adc
je
addb
sub
add
add
divb
push
out
je
sbb
mov
cmp
adc
jbe
inc
inc
int3
call
push
outsb
pop
sbb
rolb
and
in
lds
mov
mov
jo
jbe
ljmp
jnp
les
push
or
dec
aam
fists
mov
inc
push
inc
fpatan
cltd
inc
inc
xor
sbb
loope
shlb
je
mov
pop
pop
lods
test
xorb
imul
pusha
iret
or
sub
in
sbb
inc
pushl
and
inc
shlb
fstpt
jns
rclb
push
mov
push
je
and
inc
cmpb
mov
push
js
xor
or
enter
push
jns
scas
jge
sbb
sub
add
and
test
dec
shlb
cmpsb
jo
or
adc
push
hlt
rorl
stos
fisttpl
sub
in
cmp
push
and
jge
or
xchg
sbb
pop
push
sub
adc
add
stos
and
xchg
xor
add
jns
push
lods
push
sarl
xor
or
dec
sbb
adc
dec
es
ret
mov
out
aas
jo
rcr
insb
cs
pop
add
add
lds
rorb
loop
jmp
push
push
xlat
xchg
mov
mov
push
mov
out
fldt
sub
lea
add
push
push
popa
sbb
pop
andl
inc
xchg
or
push
jne
push
inc
das
add
js
movsb
sbb
push
xchg
pop
leave
aaa
add
adc
pop
fisubrl
xor
pop
mov
test
inc
fs
sub
sub
mov
mov
mov
add
loope
xchg
rolb
jecxz,pn
jle
pop
add
aaa
fadds
cmp
cmp
or
mov
dec
les
dec
sbb
dec
pop
ret
je
rcl
mov
sbb
test
and
mov
mov
fs
xor
nop
sar
lock
dec
push
add
jecxz
sbb
pop
jl
xchg
dec
lea
adc
test
int3
lock
push
push
fsts
js
push
andb
and
sbb
pop
nop
mov
jae
fsubs
out
adc
mov
jmp
dec
adc
sub
xlat
pop
push
jp
lea
dec
ss
push
push
sub
js
unpcklps
adc
or
sbb
mov
sbb
cmpsb
cmp
inc
js
mov
push
rorl
fcompl
adc
pop
push
rorl
sub
add
cmp
adc
push
das
or
and
orl
xchg
fwait
push
and
push
adc
cmpsb
inc
hlt
xor
sub
or
add
rclb
push
mov
xchg
pop
testb
mov
testb
or
ds
push
mov
inc
and
sbb
cs
xchg
stos
add
dec
inc
adc
scas
add
push
pop
or
xchg
mov
pop
inc
sahf
add
int3
and
pop
mov
jo
mov
test
adc
scas
mov
mov
sbb
ret
xchg
jg
pop
mov
test
lods
add
sub
or
xorb
jne
inc
and
mov
pop
rol
mov
mov
and
loop
loope
inc
xchg
shlb
scas
xor
loopne
clc
out
or
cvttsd2si
mov
test
popa
sbb
rcll
add
and
rcr
fbstp
pop
ljmp
sbb
inc
cmp
jmp
fstps
nop
xor
mov
insb
pop
and
outsl
mov
sub
das
mov
int
fcomp
adc
test
mov
pop
sbb
sub
test
mov
add
ror
lea
testl
icebp
dec
sbb
jmp
mov
push
cltd
ud2
das
inc
dec
or
jge
inc
idiv
sbb
ret
fmull
nop
inc
inc
mov
fs
in
xchg
or
loopne
jb
jecxz
mov
cmpb
xor
call
jecxz
ja
xor
fdivrs
jp
add
dec
insl
dec
test
dec
or
stos
dec
jns
xchg
jp
loopne
add
lea
rcrb
shlb
xchg
sbbl
jnp
call
in
test
lods
subb
fs
cmpsb
inc
or
aam
pop
add
adc
shl
subb
adc
sub
jl
adc
testl
pop
fdivs
repnz
mov
ss
lahf
arpl
add
sbb
adc
fs
cld
cld
int3
add
push
jle
aas
leave
inc
es
lods
in
add
pop
push
xchg
pop
jg
adc
sbb
jne
cmp
ss
enter
inc
adc
push
rcrl
iret
dec
pop
mov
gs
clc
in
scas
xor
loopne
bound
rclb
and
mov
mov
fsubrl
cmpsb
fcomp
aam
mov
dec
loopne
in
dec
lock
shr
and
sub
mov
pop
dec
dec
fidivl
xchg
movsl
pop
and
sub
or
call
lahf
aam
int3
insl
adcl
fildll
movsb
sub
shrb
orb
movups
pop
fwait
ss
inc
mov
fwait
push
mov
aad
cmpb
add
sub
in
xlat
mov
add
hlt
push
and
hlt
add
add
pop
dec
mov
mov
sub
add
jb
push
add
add
or
sar
fidivl
ljmp
imul
cmpsb
mov
pop
mov
jmp
dec
or
jo
lock
lock
or
rcll
xor
jns
shlb
stos
cmp
dec
mov
mov
loopne
int3
dec
cmpsb
dec
adc
in
test
call
dec
loopne
cmp
xchg
dec
leave
xor
sub
mov
add
xchg
imul
cltd
adc
and
cltd
fs
xor
cltd
fs
xor
cmp
cltd
fs
dec
inc
dec
fsubrl
push
push
iret
ds
sti
sbb
add
mov
mov
pusha
add
sbbl
in
sbb
loopne
lret
or
dec
xor
hlt
pusha
xchg
inc
jae
inc
cld
clc
jmp
leave
and
lock
scas
push
jno
cmpl
inc
xor
jbe
cltd
sbb
in
sbb
cmp
aam
movsb
imul
cmpsb
adc
rorl
fwait
cmp
mov
jp
or
mov
ss
cmp
mov
push
in
cwtl
lcall
loope
adc
and
pop
int3
fidivl
out
das
ljmp
mov
inc
inc
andb
pop
imul
out
xor
inc
std
ret
add
ss
jmp
sbb
int3
push
mov
jl
pop
cmp
jl
js
enter
jg
add
out
in
leave
mov
mov
inc
pop
or
jne
pop
jo
add
inc
lcall
outsl
mov
rcll
subb
in
and
mov
mov
cs
mov
stos
xchg
xor
mov
mov
pusha
lea
in
mov
dec
call
in
mov
mov
pop
fsubr
push
stos
or
dec
or
lea
movsb
adc
mov
adc
out
lock
mov
dec
pushf
lea
xchg
or
xchg
jg
gs
push
pop
pop
outsb
push
in
or
ret
inc
in
inc
push
or
mov
mov
cmp
sbb
cmp
fmuls
clc
or
adcl
enter
mov
les
rorb
mov
addl
popa
mov
loop
pop
in
xchg
jge
adc
leave
fcomp
aam
lds
lds
mov
test
je
dec
sub
mov
cmp
xchg
fistl
test
lods
mov
xchg
xchg
xchg
mov
mov
xchg
enter
push
or
leave
mov
cs
movsb
les
xchg
sbb
fists
pop
dec
imul
ret
sbb
cmp
dec
add
fstpl
or
xchg
ja
xchg
or
test
cmpl
clc
push
jno
add
insl
mov
stos
sbb
mov
mov
bound
pop
and
push
call
sbbb
cmp
ss
pop
push
cwtl
insb
pop
lods
int3
inc
orl
sbb
movsl
movsl
mov
inc
cmp
rorb
push
xchg
loopne
inc
bound
adc
mov
mov
mov
sbb
test
dec
or
sti
xor
daa
enter
mov
cltd
sub
es
or
and
xlat
ljmp
in
fsubr
sbbb
arpl
mov
jmp
or
pop
test
jo
mov
fsub
fisttps
adc
mov
movsl
mov
dec
push
pop
xchg
add
fisubl
adc
jb
aad
xchg
rorl
jb
adc
movl
iret
lods
xchg
bound
adc
mov
sbb
pop
mov
lods
test
dec
scas
popa
xchg
iret
and
in
lock
add
dec
jb
jo
mov
xchg
push
adc
lahf
mov
fildl
sub
mov
repz
inc
enter
xorb
aaa
lods
dec
sub
mov
adc
sub
dec
jle
xor
xchg
lcall
in
sahf
hlt
sbb
aad
add
dec
hlt
pop
pushf
cmp
and
xor
mov
cmp
pop
cmp
enter
dec
in
add
in
in
or
fucomip
mov
cld
pop
sub
call
insl
out
loopne
pusha
mov
enter
pushf
mov
int
leave
xchg
scas
je
push
pop
scas
and
stos
sub
fadds
sbb
mov
push
xchg
mov
sbb
in
or
or
in
inc
or
or
nop
inc
push
or
or
cmp
test
in
or
daa
pusha
popf
push
cltd
and
push
add
dec
sub
pusha
sahf
insl
xchg
mov
add
js
jl
inc
or
xor
sahf
inc
xor
or
jg
or
xchg
and
test
pusha
mov
decb
xchg
jbe
ret
jge
shrb
cmp
insb
lahf
mov
sub
lds
in
lods
push
pushf
jp
lahf
sub
inc
mov
stos
push
add
lods
jl
adc
mov
xor
mov
in
aam
add
jno
and
mov
inc
mov
mov
stos
movsb
leave
push
js
xchg
xor
pop
jb
add
cmp
mov
mov
mov
sub
lock
inc
daa
mov
mov
or
push
inc
sbb
bound
inc
add
es
mov
dec
mov
xchg
adc
pop
mov
jno
int3
lea
dec
popa
andl
push
add
fldenv
je
or
ja
dec
mov
mov
cmp
mov
sarb
cmp
mov
cmp
cmp
cmpsb
bound
dec
outsl
adc
lds
out
push
sub
push
imul
movsl
insb
jno
and
or
sbb
ret
adc
nop
ss
test
cmp
sub
and
push
mov
and
xchg
push
adc
int3
jle
ret
fiaddl
mov
lock
pop
mov
cwtl
mov
mov
shlb
xchg
arpl
sub
nop
cmpsb
pop
pop
xchg
mov
xor
lods
cmpsl
adc
pslld
cmp
das
xchg
clc
test
sbb
xchg
mov
xlat
pusha
cmpsl
imul
or
fcompl
and
or
hlt
mov
in
inc
push
nop
in
cmp
repz
sbb
pusha
test
mulb
pop
mov
lods
and
xchg
sub
xor
sbb
lahf
shrb
or
adc
push
lea
pop
dec
jecxz
push
jnp
subps
insb
mov
pop
sarb
and
xor
sbb
xor
lods
test
adc
insb
je
push
jmp
movsb
add
imul
inc
outsb
xor
aas
bsr
mov
outsb
popa
mov
repz
enter
enter
inc
cmpsl
pop
out
stos
in
jb
dec
xchg
jno
loopne
pusha
ret
pop
gs
sbb
mov
in
scas
xchg
adc
adcb
jne
cmp
push
mov
fsubs
fbstp
add
ret
xor
fadd
and
std
int3
jae
inc
jb
aaa
in
movsl
or
cmp
push
dec
adc
sbb
sbb
xor
xchg
mul
test
add
inc
aam
popa
adc
in
fsubrl
popa
popa
or
nop
mov
and
jae
rcl
xchg
pushf
fdivl
aam
enter
dec
sbb
aam
stos
mov
pop
pusha
lods
cmp
xor
push
adc
inc
fsubrs
aas
fmuls
inc
xchg
add
xor
add
ficoml
int3
push
push
push
inc
xor
fwait
jns
ret
notl
inc
and
gs
jo
xchg
sbb
adc
ljmp
fucomp
rorb
mov
test
sarb
adc
mov
das
leave
cwtl
push
xor
lock
pop
bound
xor
arpl
cmp
sti
leave
aam
dec
and
jg
pop
clc
or
add
shl
bound
inc
jno
mov
addr16
xor
dec
pop
xchg
ljmp
call
movsb
iret
push
rolb
mov
insl
nop
cwtl
jne
pushf
add
aaa
test
dec
daa
es
fcoml
loopne
and
push
jo
ja
in
int3
enter
push
inc
les
mov
bound
or
in
mov
rclb
pop
jle
add
mov
lods
test
cld
call
das
aas
shrb
pop
aas
loopne
mov
repnz
in
jg
sub
adc
mov
lods
adc
xor
inc
xchg
or
sub
sbb
mov
add
mov
cltd
cmp
add
xor
leave
lret
js
pushf
std
lret
and
int3
call
test
leave
mov
shrl
push
cmp
or
xchg
mov
mov
xchg
inc
mov
and
sbb
sbb
jns
ja
mov
pop
scas
ljmp
adc
mov
cmpsl
in
dec
fwait
dec
mov
es
jne
das
sub
or
and
inc
dec
cs
lea
jbe
push
aam
or
mov
and
cmc
fwait
mov
lcall
and
adc
and
sbb
mov
pop
sbb
mov
rolb
pop
pushf
bound
or
xor
inc
mov
fwait
sarb
sub
xchg
sub
lods
lods
dec
sub
ret
xchg
add
enter
daa
pop
dec
test
sub
dec
ja
mov
jecxz
out
iret
jecxz
or
movsb
pop
adc
jno
lcall
cmovo
cwtl
out
mov
sbb
xlat
mov
mov
sbb
fwait
lahf
or
xor
lcall
adc
enter
or
orl
outsl
mov
test
es
rcl
cmp
ret
int3
fisttpll
repnz
or
lods
add
jne
stos
dec
jb
pop
insl
add
sub
adc
incl
pop
and
jo
lea
xor
adc
and
out
out
add
dec
push
mov
xor
inc
fcom
inc
xor
mov
lds
push
mov
adc
rorb
lock
jmp
mov
mov
sub
sbb
mov
enter
addb
xor
adc
test
repnz
add
push
adc
rclb
or
cmp
nop
rorl
rcrl
push
fucomip
push
test
and
mov
das
or
stos
xchg
or
aas
push
add
add
movsb
insl
or
mov
jg
test
sbb
leave
int3
int3
sub
sub
fsub
rcll
popa
xor
das
enter
inc
adc
adc
nop
ret
ret
push
and
mov
or
fdiv
test
push
insl
add
bound
sbb
int3
out
xor
shlb
and
add
xchg
mov
push
adcl
stos
je
cmp
sub
dec
test
mov
xchg
xor
aas
push
inc
mov
ljmp
addr16
mov
and
stos
ret
or
pop
aad
in
dec
shlb
or
or
mov
inc
add
mov
add
pop
lods
test
js
or
xlat
sub
aad
mov
pop
je
pop
les
xor
jne
fisubl
stos
push
test
mov
jbe
enter
sbb
insl
mov
fs
sub
nop
add
insb
js
fcompl
mov
push
inc
mov
adc
mov
cmp
add
pushf
or
and
rclb
xor
int
out
mov
push
xor
fisttps
xor
pop
inc
mov
ret
lcall
jg
iret
inc
add
nop
or
add
adc
std
mov
jae
insl
mov
roll
and
cwtl
or
dec
aaa
adc
out
fisubs
mov
iret
jo
sbb
mov
cmp
int3
mov
push
in
stos
xor
leave
lcall
leave
aas
in
jp
dec
daa
enter
loopne
pop
out
add
and
out
out
aas
xchg
adc
lret
add
push
nop
addl
add
or
xchg
imul
icebp
mov
out
lret
push
and
fwait
add
loop
lock
mov
cmp
popf
lock
pop
jb
mov
dec
fsubs
inc
cmp
rcrl
mov
in
scas
ja
jne
pop
sti
mov
xchg
lods
or
adc
mov
xlat
push
andb
mov
xchg
xchg
dec
cwtl
pusha
in
leave
xchg
or
push
xor
fmuls
test
lock
sub
enter
aad
and
jecxz
mov
aad
nop
int
loopne
inc
mov
dec
loopne
fsubrl
inc
cltd
or
int3
or
jns
xchg
mov
mov
das
xchg
add
add
test
and
and
jb
or
adc
dec
enter
push
inc
mov
inc
fimuls
mov
xorl
push
adc
mov
cmp
xchg
in
mov
mov
mov
pop
add
xor
std
in
add
movsb
xor
sti
add
ja
andb
or
sbb
sub
adc
inc
add
inc
in
in
andl
faddl
setbe
lret
orb
xor
add
mov
fdivrl
std
xchg
lods
ss
invd
pop
sbb
add
shlb
or
int
rorb
mov
dec
gs
enter
xchg
cmp
or
js
mov
out
mov
or
stos
xchg
add
push
push
dec
lahf
shl
or
or
sub
inc
lret
inc
mov
les
push
pop
decl
cld
adc
in
and
inc
imul
lret
add
sarb
clc
cltd
mov
fadds
jae
push
or
in
rcrl
les
adc
mov
mov
cmp
pop
std
rcl
decl
cld
shrb
and
in
outsl
insb
test
rcrl
inc
aam
in
push
adc
or
loopne
or
in
gs
aad
bound
loopne
scas
add
aam
movsl
push
shrl
push
imul
mov
and
loop
or
rcll
sbb
push
adc
push
xor
ficoml
sbb
dec
xor
adc
sbb
insl
push
nop
push
push
and
js
mov
xchg
jne
fmuls
shrb
test
and
inc
aad
or
mov
pop
rorl
fldcw
imul
loopne
jbe
pusha
nop
sbb
xchg
bound
inc
lret
push
cmpsb
ss
adc
gs
jno
xor
push
adc
cmp
pop
or
inc
mov
jns
sti
pop
adc
daa
sub
out
dec
cmpsl
lahf
mov
sbb
pop
mov
cmp
imul
jl
insl
pop
xchg
dec
es
insb
hlt
pop
dec
es
fs
js
mov
fs
dec
inc
jo
rclb
mov
cwtl
inc
pusha
cmpl
fdivs
bound
add
mov
inc
cmc
les
sbb
enter
orb
xchg
mov
rorl
sbb
adc
leave
je
aam
push
and
and
xor
int
mov
pop
mov
test
adc
mov
pop
mov
add
imul
andl
push
jp
push
cmpsb
push
cmp
fidivs
add
jo
lods
test
mov
lahf
mov
mov
or
lods
mov
add
or
push
and
and
sbb
add
jno
pop
aam
inc
sub
test
cmp
andl
mov
sbb
pop
das
and
daa
dec
add
pop
ret
lahf
sub
mov
fdivs
pop
outsl
rcr
dec
test
mov
subb
pop
pop
es
push
loop
enter
adcb
push
cmp
push
enter
mov
clc
fistl
mov
xchg
imul
int3
or
fcmovnb
dec
and
pop
sub
lock
test
and
push
pop
in
mov
sub
pop
lods
test
mov
test
jb
mov
add
add
xor
adc
xor
or
mov
sbb
pop
ret
ret
pop
test
push
or
pusha
mov
add
jl
push
in
sub
add
nop
xor
mov
stc
test
inc
push
lock
xlat
xor
cld
inc
fcmovne
fcoms
pusha
push
mov
lock
outsb
pusha
adc
rolb
and
xchg
sbb
popf
xchg
jo
add
in
xchg
dec
mov
adc
dec
lods
fisubrl
adc
addr16
lock
and
mov
addb
lret
mov
pop
jno
fildll
xchg
add
and
call
rolb
out
out
dec
mov
imul
mov
add
pop
es
test
inc
pop
add
fdivrp
xor
mov
mov
and
dec
adc
hlt
cli
jb
and
cli
scas
fs
and
dec
pop
cmp
xor
add
dec
cmp
cmp
rorb
adc
jo
out
mov
sti
mov
push
adc
adc
insl
fidivrl
adc
cltd
fidivl
pop
insl
sbb
mov
sbb
stos
or
and
cli
call
in
jmp
rolb
adc
shll
jns
push
fs
leave
push
fsubrs
enter
adc
test
fcmovb
jo
jo
stos
sbb
cltd
pop
dec
and
push
icebp
push
in
sbbb
scas
lea
dec
insl
adc
or
push
and
and
adcb
adc
inc
fcoml
cwtl
ret
stc
cmp
push
ret
mov
inc
imul
gs
or
adc
inc
ds
aas
pusha
fsts
imul
sub
enter
jbe
mov
bound
loop
and
xchg
push
lods
sub
xchg
std
shll
out
xor
rcrb
rcr
mov
es
jo
enter
push
shlb
movl
add
fdivl
test
jno
ds
sub
push
xchg
mov
cwtl
push
daa
adc
lcall
and
mov
insb
sub
mov
imul
loope
pop
inc
xor
into
and
push
lods
lea
xchg
or
mov
fimull
xor
xor
xor
roll
mov
push
mov
repz
dec
sbb
pop
adc
pushf
cmpsl
loop
sbb
clc
ret
lahf
out
clc
push
scas
or
cmp
shl
out
cwtl
shlb
add
jo
out
pop
inc
push
push
fwait
adc
and
mov
cmp
addb
pop
ds
jnp
rcl
out
push
fcomps
lods
sarl
aad
shlb
mov
neg
testl
push
lea
mov
ljmp
dec
mov
fistpl
or
jnp
mov
add
dec
push
mov
inc
xchg
sub
rcll
mov
pushl
dec
mov
out
leave
ljmp
cmpb
or
data16
cmpb
sahf
out
pusha
pop
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
inc
fwait
inc
call
push
push
decl
pop
pop
pop
popa
bound
gs
imul
jo
jb
je
cld
cmp
jbe
js
jp
xor
xor
sub
mov
das
mov
repz
push
push
xchg
adc
clc
push
or
cmp
rclb
cmpl
mov
add
push
cmp
push
push
or
lret
out
std
jns
jmp
jb
outsl
arpl
fs
out
sbb
pcmpeqd
jns
dec
imul
push
insl
es
gs
xor
cs
adc
popa
and
sbb
lahf
insb
popa
je
outsl
outsb
push
loopne
mov
push
pop
lock
rdpmc
add
ds
scas
testb
incl
sub
pushl
stc
rolb
inc
outsl
jb
js
je
jb
gs
clc
mov
add
arpl
add
add
outsl
loopw
add
je
push
je
mov
subl
inc
jne
jb
mov
outsb
push
aam
in
dec
xor
xor
jle
std
lcall
fs
dec
and
sti
scas
imul
push
dec
push
cmp
orb
gs
insl
bound
daa
dec
outsl
fadds
dec
arpl
push
jo
sub
jne
jne
dec
jne
xchg
mov
jl
roll
jb
insb
dec
popa
jb
push
xorl
insb
adc
into
mov
xchg
jae
mov
addr16
push
data16
out
jne
xor
in
int
mov
daa
push
scas
clc
sbb
pushf
insl
aas
lds
and
jbe
out
pop
dec
inc
ds
popa
das
jo
mov
pop
fildll
sub
lock
and
and
test
and
xor
mov
and
std
std
aas
inc
dec
out
and
sub
sub
cs
push
push
pushl
ds
inc
das
pop
adc
orl
jnp
jge
jg
cmp
inc
test
lds
addr16
and
push
pop
or
jnp
movl
aaa
xor
jae
cs
fs
dec
xchg
jl
mov
inc
inc
mov
fwait
and
xor
insl
and
fldcw
add
jbe
dec
push
push
sbb
pop
mov
fimuls
inc
and
pop
mov
jle
push
xor
sbb
push
jo
imul
push
pop
mov
je,pn
adc
and
mov
in
je
sub
and
fs
add
imul
cs
push
insb
xorb
inc
popa
and
xor
scas
mov
sbb
xor
and
mov
push
xchg
int
aas
xor
or
scas
loopne
dec
mov
lcall
imul
dec
mov
and
or
dec
inc
jnp
imul
push
pop
cmp
xlat
loopne
fs
xchg
mov
add
and
push
add
cmpb
fisubrl
imul
jb
loopne
outsl
data16
aaa
cmpb
mov
addb
das
arpl
jo
subb
push
arpl
insb
or
outsb
mov
stos
in
cmp
inc
xchg
insb
imul
out
xor
int3
or
xor
cmp
push
lcall
mov
or
xor
mull
sarl
sbb
cmpsb
xchg
add
xor
shll
xor
xchg
cmp
pop
dec
xor
inc
add
aaa
inc
popa
push
add
ja
outsl
enter
outsl
ss
mov
jo
cli
jbe
add
test
xchg
push
mov
xor
push
gs
or
lds
xor
out
inc
jle
jb
mov
outsl
push
or
arpl
jb
pushf
ficomps
movl
push
inc
mov
fwait
or
sbbb
das
imul
pop
or
stos
jle
add
rclb
leave
call
insl
imul
cmp
adcl
in
fadd
inc
enter
push
and
push
cmp
pop
mov
sub
push
jae
xor
mov
fsubl
out
mov
test
test
jb
push
loopne
jle
sub
lret
inc
sub
pop
dec
push
jmp
jmp
jo
and
ja
mov
cmp
cwtl
ja
ds
inc
inc
cmp
inc
and
dec
cmp
pushl
lcall
loopne
imul
jg
push
rcrb
das
lret
jno
icebp
pusha
inc
mov
adc
ret
movsl
add
xorl
jae
jae
push
loop
imul
and
cmpsb
gs
popa
dec
es
cmp
enter
popa
sahf
imul
js
jae
je
pop
dec
mov
lock
add
add
xchg
xchg
jecxz
jae
imul
xchg
adc
add
outsb
pop
movsl
mov
adc
push
push
pop
icebp
lcall
cmp
pop
or
aaa
ds
push
pop
hlt
and
divl
push
js
or
sub
add
sbb
addb
fiadds
xchg
test
add
aaa
mov
pop
daa
push
cmpb
addr16
push
push
and
sub
jb
int3
push
xor
ja
mov
jbe
push
rcll
int3
js
fisttpl
int3
rorb
iret
and
xchg
lea
jb
and
leave
and
xchg
mov
repnz
int
push
test
dec
sub
xor
dec
sub
pushf
jo
pop
add
and
dec
jo
or
pop
data16
mov
pushf
adcb
pminub
icebp
mov
or
fcoml
sub
push
jb
dec
add
leave
sbbl
add
adc
add
and
add
add
pop
ficoml
add
inc
cmpsb
sbb
add
mov
ja
dec
pop
stos
incl
adc
push
add
pop
mov
pusha
inc
shr
and
jmp
addl
mov
call
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
pushl
mov
mov
mov
mov
ret
enter
int3
int
iret
call
rcl
rcl
aad
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
stos
dec
push
icebp
repnz
cmc
div
clc
stc
cli
sti
cld
std
inc
and
or
add
call
roll
sub
test
sbb
push
repz
outsl
ja
inc
cs
mov
gs
bound
dec
stos
dec
cmp
dec
popa
mov
mov
in
repnz
lea
jbe
in
mov
gs
outsl
js
push
push
inc
push
mov
imul
in
lods
xor
daa
add
insb
sti
pop
jbe
in
dec
imul
mov
inc
insl
jnp
jb
jo
ds
and
push
pop
fildl
inc
jns
daa
pop
pop
in
adc
push
jns
mov
shlb
aad
lcall
addr16
cmp
outsb
mov
rolb
push
mov
adc
push
out
in
add
inc
jbe
push
outsb
pushf
push
push
lahf
fs
cwtl
sub
dec
dec
pop
ss
popl
rorl
push
add
push
pop
insl
xor
dec
dec
movsb
nop
les
sub
pop
push
push
jae
stos
popf
dec
jp
aas
cmp
insb
call
push
or
mov
das
outsb
gs
mov
or
xchg
and
push
push
dec
testl
insb
jne
repnz
mov
into
mov
xchg
push
lods
scas
dec
jge
sbb
cmpl
mov
inc
call
jo
fbstp
push
adc
and
xor
jg
popa
jl
fcoms
mov
sub
or
pop
das
je
push
mov
xchg
daa
xchg
mov
rcrl
jmp
popw
pop
cmp
out
scas
stc
cmp
add
ds
sub
data16
sub
es
jle
sub
sub
fcmove
cmp
sub
sub
ret
gs
push
cmp
je
lahf
xlat
jmp
cmp
in
mov
inc
dec
pop
pop
cwtl
cmpsb
shrl
addr16
push
jb
imul
push
lret
sahf
sbb
push
cwtl
pop
popa
pop
and
es
xor
sub
out
outsb
xchg
add
add
clc
add
loopne
enter
out
jns
mov
sti
push
in
jnp
repz
lods
inc
push
xchg
sahf
out
ds
add
out
je
push
or
fnstsw
push
fs
outsb
data16
push
inc
adc
repnz
decl
pop
jbe
push
cmpsl
stc
xor
push
faddl
dec
add
out
sahf
inc
inc
cmp
xor
jnp
out
sub
and
adc
iret
xor
iret
or
hlt
incl
sarb
jl
cmp
iret
repz
push
mov
iret
repz
inc
cmp
add
sahf
cmpsl
stc
cld
std
lock
movsb
repz
out
push
sub
in
into
repz
rcrb
sbb
lcallw
shlb
jns
push
ficoml
into
xor
data16
and
outsl
pop
in
iret
or
aas
sbb
jae
jb
xor
push
ljmp
scas
lock
sti
sub
add
sarb
insb
adcb
mov
dec
jae
xor
mov
inc
push
sbb
sub
negl
dec
inc
dec
xor
inc
dec
dec
dec
push
push
lret
enter
xor
push
dec
inc
dec
add
dec
dec
inc
add
mov
sub
adc
pushl
popa
into
mov
mov
adc
outsb
mov
ds
cmp
adc
clc
lret
sbb
jb
stc
lcall
arpl
cmp
adc
dec
scas
jp
repnz
jno
in
fstl
mov
and
jg
stc
cmp
dec
imul
lret
add
inc
mov
mov
and
incb
sub
fwait
ss
sbb
pop
pushl
out
vmwrite
inc
xor
incb
int3
dec
dec
xor
dec
popf
pxor
decl
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
pop
call
and
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
mov
out
fcoml
or
scas
int
mov
pop
leave
loop
inc
pop
hlt
stc
mov
xchg
dec
xchg
scas
lods
incb
cmp
push
xor
out
mov
and
in
pop
pop
repnz
mov
aas
and
es
sbb
adc
or
pshufw
dec
push
push
inc
inc
or
outsb
jbe
and
add
inc
push
push
shrb
inc
loope
and
jge
push
gs
int
js
push
imul
xlat
push
hlt
inc
dec
push
dec
push
cs
aas
sub
mov
xor
adc
inc
sub
sub
ljmp
dec
or
and
sub
or
and
pop
sbb
add
dec
jg
push
push
mov
dec
mov
imul
sub
add
and
dec
jno
jb
outsl
idivb
jbe
pop
add
or
and
xchg
add
cmp
sub
jbe
aas
add
sbb
sub
and
pop
pop
push
divb
sysenter
aas
dec
cmp
aaa
cs
sub
lods
imulb
out
add
push
sbb
inc
ljmp
cmp
push
sbb
adc
pop
push
add
push
inc
sbb
or
jg
idiv
out
and
adc
jnp
sub
mov
cmp
stc
ljmp
inc
dec
cmp
xor
or
cmp
inc
pop
or
xor
inc
push
test
push
inc
mov
mov
dec
inc
pop
push
cmovs
mov
pop
aas
leave
xlat
pop
aad
or
pop
push
add
sub
addb
inc
je
lea
push
push
cmp
adc
inc
or
outsb
mov
cmp
pop
cmp
pop
and
fsts
repnz
sbb
dec
and
fiaddl
sbb
xor
jo
mov
cmp
adc
inc
xor
testb
add
add
dec
jle
mov
push
pop
push
pop
and
and
or
lret
push
cmp
push
cmp
pop
mov
xchg
cmp
arpl
pop
push
gs
inc
jg
mov
adc
pop
adc
pop
inc
adc
or
inc
mov
pop
inc
dec
adc
inc
fimull
and
sub
sbb
shll
sbb
negb
ja
loope
pop
pop
push
dec
mov
and
push
and
mov
inc
pop
adc
dec
nop
dec
cwtl
in
push
cmp
xchg
pop
adc
pusha
xor
sarl
push
push
mov
push
sarb
repz
adc
push
pusha
out
out
lods
push
inc
outsl
jg
push
mov
shl
es
mov
xor
fiadds
es
das
divl
adc
sub
hlt
fxrstor
cwtl
xor
add
push
and
mulps
jp
cmp
outsl
insl
rcr
xor
popa
outsb
fmul
and
or
push
popa
adc
xchg
inc
and
popf
fildl
dec
bound
xor
and
push
or
loopne
push
scas
inc
push
shr
sbb
push
mov
lock
test
jns
fwait
scas
xor
pusha
push
nop
loopne
push
lahf
out
jae
push
push
push
push
pusha
rclb
repz
cmp
xor
arpl
fidivrs
push
push
cs
mov
pusha
rcrl
add
mov
pop
sub
or
fisubs
adc
inc
add
ss
push
push
popa
adc
js
inc
jbe
std
into
aad
mov
inc
pop
or
add
inc
and
dec
nop
pop
or
jmp
pop
negb
sti
fisttpll
and
or
mulps
and
mov
pop
aad
push
arpl
xor
mov
cmp
jb
dec
and
dec
push
insb
push
dec
pop
pop
mov
inc
pop
cmp
add
fildll
shrl
sbb
in
sbb
pop
push
shll
mov
iret
faddp
cmp
dec
cmp
or
push
out
dec
ja
ja
ret
test
out
sub
ret
cld
xor
and
and
pop
or
inc
jecxz
and
mov
and
mull
hlt
mov
xlat
push
outsb
scas
and
pop
dec
popa
or
dec
pop
test
pusha
xor
push
pop
popa
mov
xor
cmp
jo
jl
inc
cmp
or
pusha
mov
add
inc
adc
das
fwait
lcall
das
push
bound
shll
push
daa
addl
add
jne
into
sahf
adc
add
lock
sub
or
mov
ss
and
and
xchg
stos
pop
and
and
fimuls
cmp
dec
push
jle
fiaddl
scas
add
inc
sbb
xor
add
add
and
adc
lcall
popa
cmp
stc
and
in
in
pop
ds
daa
ja
daa
sub
adc
xor
ja
sbb
in
sub
outsl
je
es
push
push
fisubs
xor
and
pop
ret
scas
pusha
push
cmp
mov
xchg
iret
daa
in
inc
xor
scas
stos
enter
lods
sbb
lods
inc
aaa
jnp
or
dec
and
cmp
fidivs
dec
xor
loope
sub
mov
dec
sub
pop
lcall
add
jp
sub
sbb
adc
dec
xchg
add
cmp
movsb
xor
aas
push
push
xor
scas
lahf
and
sahf
add
add
add
sbb
lret
dec
dec
xor
popf
repnz
mov
pop
adc
dec
sbb
mov
and
lcall
cmpsb
and
xchg
sub
bound
into
mov
js
xor
add
add
sub
mov
push
and
inc
and
and
push
inc
pop
or
shlb
pop
mov
push
sbb
xchg
adc
and
ret
mov
pop
and
fwait
daa
add
addr16
and
pushf
cmp
aas
or
adc
dec
and
dec
and
sbb
std
cmc
ret
sub
dec
dec
add
and
add
push
pop
and
or
popf
sbb
or
insb
xor
sbb
push
sbb
mov
sub
imul
push
sub
mov
add
xchg
cld
xlat
push
jae
insl
popa
imul
leave
mov
push
pop
outsl
jo
mov
data16
push
ja
or
stos
faddl
adc
push
hlt
push
cmp
repz
in
add
in
push
test
add
das
add
adc
aam
add
inc
in
fstpl
cmp
into
das
or
cmp
outsl
imul
fs
pop
je
and
dec
or
inc
push
cmc
jg
pop
inc
and
inc
mov
lock
inc
adc
cmp
pop
nop
call
push
out
cmp
fidivl
xor
and
pop
hlt
ja
and
pop
pop
sbb
xor
sbb
dec
or
psubb
sub
xchg
dec
fwait
add
push
icebp
das
sub
fcoms
push
push
sbb
sub
pop
into
ds
sbbb
cltd
and
and
mov
nop
push
imul
fsubrs
cmp
xor
push
push
add
mov
aaa
cmp
outsb
aaa
inc
popf
xor
push
adc
adc
xor
popa
lock
stc
push
or
cs
adc
sbb
aaa
pop
mov
fwait
cs
and
das
inc
ret
out
mov
cs
outsb
insb
outsl
jle
outsb
std
jb
bound
scas
pop
push
mov
je
and
jae
popa
test
mov
ficomps
je
in
and
fisubs
xorb
jae
and
es
aas
aam
adc
dec
jg
push
mov
imul
hlt
inc
data16
loop
out
sahf
ja
push
adc
sbb
sahf
sub
cmp
out
mov
cltd
dec
shll
xor
inc
fwait
inc
lar
add
mov
mov
fwait
or
adc
jns
and
sub
data16
inc
iret
xor
inc
mov
mov
fnstsw
mov
mov
popa
xchg
sbb
add
test
sub
add
or
int
mov
pop
adc
pop
add
fldcw
pop
adc
push
push
insb
ss
int
lret
str
add
pop
mov
and
das
incl
and
push
push
das
xor
xor
sub
sahf
aam
jo
and
icebp
pop
sbb
or
sti
adc
sbb
mov
inc
addr16
test
push
dec
sub
dec
cltd
das
cmp
xor
je
xchg
pushf
mov
scas
jae
push
or
outsb
add
arpl
gs
loop
mov
jb
outsl
imul
fldpi
lea
add
pop
adc
fadds
fsubp
xor
pop
pop
call
add
jnp
js
cmpsl
mov
mov
pop
or
push
inc
sub
inc
and
adc
and
add
das
pop
cmc
pop
lahf
adc
sbb
push
sub
push
xorl
pop
mov
scas
xor
ljmp
push
aaa
aaa
int
jle
adc
sbb
push
les
jle
cmpl
and
xor
mov
insl
fwait
add
mov
call
into
mov
mov
fadds
leave
fisubl
bound
ret
xor
cmp
dec
push
cmp
or
insb
and
bound
inc
dec
dec
adc
addr16
and
xchg
cmp
cmp
add
es
cmp
cmp
sub
pop
adc
rcl
dec
inc
pop
push
inc
test
pop
and
inc
push
jns
inc
sti
push
pop
les
faddl
es
jbe
cmp
cmp
add
pop
sbb
xchg
out
roll
frstor
pop
fnstenv
jo
roll
dec
mov
sbb
or
sub
sub
wrmsr
sarl
adc
add
ljmp
or
pop
push
sbb
xor
test
or
push
push
sbb
stc
pop
out
add
sub
adc
push
das
or
sbb
je
icebp
repnz
add
push
sbb
add
add
inc
xchg
inc
push
push
mov
push
ds
push
push
inc
mov
rcrb
imulb
mov
jecxz
ja
je
push
cmp
and
mov
push
nop
ljmp
xchg
les
jo
add
cs
fcmove
das
cmp
mov
pusha
les
inc
call
lea
pop
jo
inc
inc
loopne
and
popa
jle
in
rolb
sub
sbb
loopne
push
push
cmp
pop
cmp
daa
and
bound
mov
pop
and
out
in
repnz
and
mov
lahf
inc
push
js
mov
and
or
push
and
or
add
add
cmpsb
inc
sub
and
sbb
in
clc
xor
adc
xchg
jb
sub
nopl
inc
add
mov
pop
adc
inc
jnp
sub
xchg
adc
add
adc
lea
jecxz
sub
add
inc
pop
sbb
push
cmpl
icebp
mov
fldcw
xchg
lea
push
stos
nop
inc
bound
inc
adc
and
sub
push
add
cmp
mov
into
daa
dec
jb
das
mov
push
jbe
mov
aas
pop
xchg
sub
sbbb
cmp
jle
add
mov
jno
ficoms
adc
fcompl
add
daa
pop
pop
xor
int3
inc
xchg
pop
call
stc
or
add
cld
pop
push
int3
or
orb
inc
outsl
mov
or
addb
jmp
push
aaa
fisubl
jg
negl
adc
test
cmp
cmp
and
cmp
mov
sub
sub
and
xor
xor
sub
pop
int3
inc
inc
adc
sbb
or
adc
sahf
jo
test
cmp
pushf
cmp
add
push
adc
mov
out
mov
and
daa
aaa
adc
loopne
ss
adc
sbbb
scas
and
cmp
pop
inc
cmp
and
sahf
push
mov
xor
and
sarb
and
xchg
sub
pop
adc
or
dec
cmp
out
add
iret
mov
xchg
cltd
insl
pop
outsb
mov
test
cmp
or
pop
out
pop
outsb
sub
jmp
out
pop
std
and
mov
das
sbb
mov
sbb
pop
inc
sub
push
or
movsl
sbb
test
popf
cmp
test
mov
and
jno
and
movsl
or
aam
xor
cmp
sbb
stos
cmp
and
cmp
xchg
inc
xchg
cmp
and
mov
insl
std
pop
cwtl
mov
push
fcoms
shll
mov
sbb
push
xor
stos
sub
les
inc
call
loope
scas
cltd
add
inc
test
je
popf
pop
fisubl
dec
lods
pop
pushf
or
xor
cmp
pop
xor
pop
cmp
mov
push
add
imull
movq
or
jg
add
push
cmpsb
sbb
sub
lock
inc
popf
mov
loop
repnz
sub
mov
ss
fisttps
js
testl
push
cmp
jl
sbb
sbb
cs
dec
lahf
mov
ds
and
scas
xchg
or
daa
bndldx
pusha
jecxz
data16
daa
pop
sub
pop
das
aas
bound
xchg
lods
pop
insb
xor
push
cmp
push
add
data16
cmp
dec
adc
int
add
idivb
inc
sub
inc
adc
dec
xlat
mov
push
inc
aam
andl
dec
push
pop
testl
pushw
icebp
aaa
mov
daa
adcb
jne
add
aaa
xor
es
add
sub
inc
std
mov
add
je
ja
fs
sub
pop
jmp
mov
das
and
or
aad
inc
outsl
insb
sbb
jb
push
pop
sbb
jae
push
adcb
lahf
repz
add
sub
sub
push
fnstcw
xor
ss
pusha
cmp
data16
cmp
ds
inc
es
sahf
out
jns
push
mov
inc
inc
hlt
aas
int
dec
push
push
nop
dec
push
or
add
inc
test
add
loop,pn
dec
push
dec
dec
sub
or
das
shlb
mov
mov
jg
push
lcall
mov
adc
mov
mov
lods
pop
dec
movsl
enter
push
push
insb
out
pushl
ss
adc
cli
mov
sub
sub
das
es
cmp
mov
mov
mov
sub
and
xor
pop
sbb
ss
jle
jo
fsubs
jg
or
pop
test
xor
dec
xchg
pop
shr
pop
repnz
dec
push
adc
adc
pop
push
xor
test
cmp
stos
test
scas
test
mov
push
sbb
rorb
inc
jb
fisubl
pusha
outsl
push
dec
imul
mov
dec
js
pop
pop
sub
sub
sub
jae
and
lcall
cmp
in
cmp
fmuls
out
mov
mov
jbe
add
js
cmp
ret
mov
dec
push
dec
pop
int3
pop
sbb
test
dec
call
pop
fcoms
mov
cmp
incl
xor
sub
sub
xor
inc
xor
inc
adc
inc
xor
scas
subb
jne
cmp
insb
push
outsb
add
addb
gs
adc
loopne
js
nop
sub
nop
add
push
dec
jp
ficoms
mov
scas
dec
or
bound
xchg
lock
std
je
bound
mov
inc
sbb
or
mov
add
jg
adc
xchg
xchg
ja
rorb
das
lea
xlat
das
not
mov
sub
xor
or
lock
fs
push
sbb
add
mov
adc
mov
inc
negb
xor
ja
xor
cli
movsl
out
and
xor
or
sbb
adc
and
cmp
xor
and
mov
and
jbe
cmp
pop
xor
add
cmp
xor
and
mov
or
dec
and
loop
lea
nop
jmp
or
pop
inc
or
cmovge
cmp
xchg
arpl
out
icebp
dec
sahf
mov
lock
imul
push
sahf
fsubl
fs
lahf
data16
cli
pop
add
push
xchg
mov
pop
mov
inc
outsl
enter
int3
pop
xchg
iret
lcall
xchg
mov
out
xchg
or
iret
fwait
in
iret
mov
rclb
scas
insb
fldt
mov
stos
mov
int
repz
mov
mov
jmp
lret
data16
ds
mov
mov
pop
push
add
fadds
pop
in
scas
rorb
cmpsl
jge
push
mov
pusha
jge
imul
push
mov
sti
sahf
data16
add
cmpsb
sbb
jnp
enter
push
sarb
add
int
push
ficoms
cwtl
push
ds
cmpsl
stc
cmp
add
iret
push
icebp
jns
lock
inc
xchg
inc
dec
sti
mov
fwait
int3
push
fmull
daa
fcomi
sahf
aaa
fmull
addb
jb
int
mov
enter
mov
jge
idivb
push
dec
push
aad
cmp
out
ficomps
push
jle
mov
fsubrs
push
xchg
out
jnp
repz
enter
push
cmp
aaa
int
cmp
mov
popf
mov
mov
negl
dec
out
push
mov
repz
push
push
mov
mov
popa
mov
xor
or
add
lahf
out
out
xchg
outsb
sub
mov
cmp
pop
mov
pop
lcall
jge
movd
sahf
out
popa
ja
mov
iret
mov
push
push
add
lds
push
outsl
mov
movl
negl
mov
fidivrs
sar
sub
sarl
lods
int
sbb
inc
out
ds
insb
pushf
nop
xchg
lahf
in
add
jbe
iret
repz
mov
mov
mov
out
push
or
aad
pop
dec
sbb
scas
dec
test
sub
adc
and
rcrb
push
push
mov
xor
adc
mov
pop
pop
mov
inc
cs
mov
ljmp
mov
bound
push
and
pop
sbb
enter
cmp
adc
or
adc
stc
pusha
or
add
sub
add
int3
dec
psrad
inc
jnp
pop
inc
in
lcall
push
push
jae
push
stos
or
popa
lahf
aas
inc
out
adc
or
fbld
or
inc
imul
cmp
sbb
dec
fisubl
inc
aam
sbb
jae
les
dec
cmp
dec
mov
out
imul
insl
pop
fcmovb
inc
or
push
in
in
xchg
push
insb
pop
push
scas
jne
fimuls
je
jns
push
loop
out
push
fisttps
jp
das
push
loope
enter
outsb
push
inc
pop
ja
imulb
iret
push
pop
retw
sub
jnp
dec
or
es
sbb
in
push
xor
dec
push
shrb
cli
int3
leave
and
mov
jnp
pop
cmp
push
ds
and
mov
mov
insl
jo
es
insb
je
sub
jns
addr16
jo
jae
es
outsl
and
push
cmpb
sub
out
into
or
cmpsb
mov
mov
ljmp
xor
xor
xor
xor
cmp
out
sti
jbe
xor
push
xor
xor
cmp
push
add
inc
push
pop
push
cmp
inc
les
inc
or
push
sbb
add
imul
dec
or
mov
inc
add
xlat
adc
inc
sub
adcb
sarl
es
pop
or
cmp
sub
xor
jge
or
cmp
jg
movsl
outsb
sub
push
fistpl
shlb
aas
add
mov
push
negb
ss
or
outsl
add
dec
push
dec
push
add
push
mov
or
push
cmp
add
cmp
mov
lsl
xor
mov
mov
xor
roll
daa
or
push
dec
push
push
jmp
loope
enter
push
xorl
adc
sti
adc
adc
sbb
inc
and
sahf
mov
int
dec
unpcklps
call
and
shll
adc
pop
and
push
adc
adc
repnz
int3
test
das
sub
pop
add
mov
fcomps
push
addr16
dec
pop
jnp
rcr
daa
inc
xor
sbb
add
lock
or
frstor
inc
aaa
daa
inc
mov
jmp
sbb
daa
daa
dec
or
mov
jo
insl
aaa
adc
pop
popf
xor
stos
sub
adc
inc
mov
lods
fldt
shll
and
mov
add
push
fdivrs
mov
daa
lods
and
fisubrs
jge
push
jnp
xchg
das
das
xorl
pop
jecxz
addr16
push
mov
xor
mov
and
mov
mov
das
popa
daa
push
sub
sub
push
loope
pop
icebp
das
dec
sahf
jbe
or
adc
mov
push
and
fidivrs
repnz
or
adc
ja
fnstcw
xchg
adc
js
js
cltd
daa
lahf
pop
pusha
adc
sub
cmpsb
pop
add
lea
inc
addr16
add
sar
pop
mov
cmc
push
wbinvd
pop
fs
ret
mov
enter
pop
dec
sbb
jbe
inc
imul
add
jo
sbb
icebp
or
sbb
fcoml
sbb
fucomip
adc
push
js
add
or
data16
dec
cmp
rol
push
imul
or
loopne
pop
fmull
rcr
out
and
aaa
add
mov
dec
js
xchg
mov
mov
pop
ret
xchg
xchg
rorl
aad
mov
data16
les
jmp
mov
addr16
dec
js
inc
aas
outsl
push
aaa
push
loop
xchg
add
es
les
das
xlat
or
or
xchg
and
mov
js
data16
cmp
pushf
bswap
adc
lods
pop
add
addr16
push
es
sub
enter
push
jp
and
xor
dec
pop
cmp
cmp
jl
sbb
dec
push
jo
push
xchg
push
push
cmc
xchg
fadd
repz
pop
adc
sbb
mov
and
or
and
and
test
xchg
jbe
test
sub
sbb
sbb
dec
pop
add
adc
add
lret
xor
test
or
push
push
and
test
pop
push
cmpsb
fs
cmp
and
nop
pushf
adc
imul
loopne
fidivs
xorb
loopne
into
adc
xor
roll
aas
xchg
dec
or
dec
jbe
gs
push
rcll
jae
or
sbb
xor
clc
cli
stos
out
mov
test
dec
cmp
or
repnz
in
not
push
inc
cmpsb
inc
or
push
sub
loop
fldcw
fcoml
sbb
fcomps
add
fs
cwtl
cmp
push
sbb
add
and
push
push
or
push
push
sub
lods
adc
jb
and
sbb
int3
xchg
fs
psrad
inc
push
xor
dec
mov
push
xor
mov
adc
and
ja
dec
pop
push
xchg
fisttpll
pusha
inc
jl
push
xorb
push
or
aas
sti
addr16
xor
aas
add
sub
xor
or
push
push
mov
lret
xor
xorb
adcb
and
xchg
push
or
adcb
gs
sbbb
out
mov
rcrb
aam
dec
adc
sbb
js
add
mov
retw
sbb
jb
jno
xchg
ret
fcoms
jg
pop
sub
cmp
pop
inc
push
inc
iret
dec
xorl
inc
test
pop
dec
dec
int3
jno
add
adc
and
shll
pop
and
and
mov
push
xor
in
and
push
add
add
std
pop
aaa
pop
push
arpl
subps
inc
lds
aaa
out
inc
enter
pop
aaa
sbb
pusha
rorb
or
cmp
arpl
xor
rcrb
jns
je
pop
inc
or
jo
pushf
sbb
imul
xor
xor
add
jle
dec
jl
cmp
mov
jge
or
pop
adc
jp
subb
or
add
sub
jne
cli
push
pop
inc
add
adc
inc
dec
dec
cmp
xor
ljmp
dec
cmp
and
es
or
add
sbb
cmp
aas
movntps
pushl
sbb
adc
pop
dec
aas
aas
xor
sbb
daa
dec
sub
sub
dec
push
cmp
sub
scas
and
dec
add
adc
daa
lret
jg
movsl
or
or
das
sub
dec
pop
sbb
pop
xor
and
popa
ljmp
dec
aaa
xor
and
or
dec
xchg
mov
push
cmp
pop
mov
test
sub
das
xor
add
aas
and
add
ljmp
es
dec
xor
sub
push
inc
pop
add
push
inc
sbb
popa
and
leave
add
mov
ret
test
dec
inc
mov
inc
out
push
ret
cmp
adc
add
cmpsl
dec
mov
inc
inc
daa
and
pop
xchg
inc
mov
adc
cmc
push
inc
jne
dec
cmc
das
and
outsb
sub
popa
adc
pmaddwd
adc
inc
out
mov
fdivp
inc
push
pop
and
bound
jecxz
sub
pop
xchg
stos
pop
pop
clc
movsl
mov
xchg
push
push
dec
imul
outsl
inc
nop
inc
inc
sub
nop
pop
mov
gs
mov
loop
adc
lcall
adc
add
clc
adc
jo
jb,pn
jmp
push
push
dec
push
sub
push
push
inc
push
dec
jb
dec
lret
sbb
daa
add
add
out
inc
sub
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
aad
cmc
jmp
sbb
cwtl
stos
pop
fmul
adc
mov
jge
push
je
mov
andb
fwait
rol
fwait
in
inc
mov
lock
popf
rorl
and
sub
sub
fsubrl
lcall
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
incl
sub
adc
or
cs
insl
sub
adc
or
or
cs
ret
incl
mov
data16
mov
call
cltd
test
push
jo
push
push
shll
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
lcall
pop
rep
cs
arpl
test
add
mov
mov
call
mull
jno
addr16
push
scas
addr16
cmp
dec
movsl
jg
push
push
mov
incl
pop
sbb
loopne
pop
pop
insl
jae
add
pop
ds
inc
dec
popa
or
dec
inc
jge
jmp
jl
jnp
sub
or
push
push
dec
dec
and
cmp
cmp
push
aas
inc
add
xor
xor
cmp
jns
jne
mov
jecxz
cli
jp
js
push
pop
pop
outsl
cmp
or
pop
sub
bound
mov
inc
sar
dec
enter
xchg
enter
mov
lods
push
push
adc
adc
ljmp
push
daa
daa
inc
daa
pop
fisubs
pop
daa
and
in
les
aas
pop
data16
callw
and
pop
aaa
jbe
pop
aaa
pop
sub
negb
xor
and
adc
and
xchg
das
pop
sub
dec
daa
push
out
lods
mov
es
aaa
push
xor
inc
add
xor
xor
scas
cmp
push
inc
add
inc
pop
inc
inc
xor
and
aaa
inc
push
inc
cs
cmp
ss
xsha1
cmpsb
sysexit
inc
lods
scas
ss
cmpsl
ss
fisubs
fdivs
arpl
xchg
push
or
test
cmp
das
sub
or
sub
pmaddwd
pop
dec
dec
shlb
fs
bound
add
cmp
add
out
adc
sbb
pop
fcmovnu
cwtl
mov
mov
cmp
or
sub
cs
add
push
cld
dec
cld
pop
leave
in
mov
dec
and
sbb
adc
add
adc
movsb
js
mov
and
sub
sbb
adcl
cmp
mov
adc
xor
inc
sub
push
and
test
cmp
push
frstor
pusha
int
sbb
je
and
bound
sbb
stos
rcll
pop
pop
fdivs
icebp
or
xchg
fldenv
and
mov
gs
add
loop
or
pop
add
mov
adc
adc
call
test
mov
lret
shll
or
fistpll
and
addb
and
and
xchg
mov
inc
imul
add
sbb
adc
shlb
imul
cmp
pop
push
dec
push
mov
fs
inc
insb
mov
insb
adc
sub
xor
add
sub
enter
xchg
adc
push
fisttpll
push
pop
inc
ret
add
in
in
push
les
outsb
je
xor
inc
mov
xor
jae
popa
insl
gs
cmp
addr16
cmp
mov
add
push
xchg
test
out
aad
movsb
ficoml
je
loop
and
test
out
int
ret
dec
sbb
insb
stos
push
fiadds
sbb
popa
je
mov
insl
fwait
sbb
xlat
and
les
xor
sti
ds
and
inc
dec
or
and
add
jnp
dec
jecxz
xor
pop
sub
rorb
or
add
loopne
aas
push
pop
les
sub
sub
push
add
les
rcrb
sub
mov
daa
mov
inc
pop
xor
cmp
cs
push
jae
adc
pmulhw
and
imul
xchg
aaa
xor
ds
adc
subb
ret
fsubs
addr16
pop
addl
add
and
pop
push
add
adc
mov
pop
and
adcb
inc
sbb
push
mov
push
adc
fmuls
fs
dec
push
in
mov
ja
pop
push
ss
popa
jb
pop
push
pop
sub
jae
inc
jne
sahf
jp
movsl
vmovq
leave
pusha
push
sbb
adc
mov
addr16
push
dec
bound
sub
push
push
test
and
mov
roll
dec
cmp
fiadds
adc
sub
ret
and
pop
pop
fcoms
sub
xor
daa
cmc
scas
mov
fs
jo
gs
and
pop
or
or
imul
push
jb
movsl
sbb
adc
pop
cs
unpckhps
fsubrl
cmp
mov
cld
incb
cmp
add
pop
scas
push
push
arpl
add
pop
pop
mov
inc
test
scas
je
or
dec
cmp
push
add
test
pop
sub
xor
sahf
mov
das
insb
and
aam
mov
and
sbb
xchg
cmp
dec
xor
inc
outsl
sbb
add
adc
ja
inc
xchg
push
sub
ljmp
xor
add
je
movzbl
push
int3
notl
jmp
fistps
dec
add
inc
xor
and
jne
out
imul
out
aaa
mov
xchg
in
pop
pop
pop
movsl
pop
jmp
xchg
insb
in
sbb
pop
pop
pop
test
push
imul
dec
pop
fwait
and
movsl
cmp
or
pop
repz
cs
cmp
cmp
inc
andl
lea
fistl
lods
scas
aad
mov
cwtl
bound
pop
inc
orl
ljmp
push
and
and
mov
out
pushf
aas
add
inc
dec
shl
andb
or
and
negb
cmp
cltd
js
and
dec
and
subl
gs
pop
lods
mov
pop
inc
insb
fs
push
cmp
cwtl
dec
and
lods
cwtl
cwtl
call
test
jae
in
or
or
mov
inc
push
punpckhwd
inc
out
and
dec
outsb
push
je
scas
cmp
push
insb
pop
xchg
sub
and
dec
push
inc
pop
push
jns
pusha
std
dec
inc
dec
inc
push
pop
clc
dec
xlat
jb
gs
nop
cs
mov
mov
daa
or
push
dec
push
dec
jb
roll
mov
aas
dec
cmc
and
test
mov
lret
add
xchg
and
enter
sbb
ret
mov
imul
sub
mov
pop
add
aaa
jns
sbb
insl
push
mov
testb
pop
faddp
jns
jb
sub
adc
push
fabs
push
dec
pop
push
or
add
mov
xchg
pop
dec
sbb
pop
sub
call
fildl
sbb
lcall
mov
dec
add
dec
sbb
xor
dec
loopne
sbbb
pop
add
movl
sbb
jb
sbb
adc
dec
add
xchg
in
stos
aam
push
mov
add
sub
push
aas
lea
inc
mov
sbb
mov
lods
pop
lret
faddp
push
pop
cmp
test
in
add
push
sub
pop
nop
pusha
outsl
mov
xlat
sahf
pop
inc
lods
ud0
mov
loopne
adc
aas
ret
mov
mov
push
or
out
rolb
mov
stc
rcl
sarl
das
js
push
push
repnz
rolb
inc
in
insb
dec
mulb
xchg
add
dec
inc
and
out
shll
cmc
inc
outsl
mov
out
xchg
inc
cmovo
jnp
inc
adc
cmpb
aas
mov
in
mov
nop
jo
maxps
dec
add
in
shll
xchg
and
outsb
dec
adcb
push
inc
pop
cmp
ret
or
aas
add
jge
mov
test
addr16
movsb
cmp
in
add
pop
xchg
je
mov
out
add
iret
pop
jmp
cs
cmpsl
ja
lahf
add
rcr
jg
daa
test
pop
repnz
dec
shl
in
test
fwait
pop
fwait
inc
rclb
mov
sub
xor
aas
stc
jbe
adc
mov
lods
push
daa
dec
inc
leave
xchg
pop
leave
inc
cmp
leave
xchg
pop
xor
xchg
pop
leave
xchg
and
mov
dec
pop
pusha
jns
testl
push
hlt
pop
push
fcoms
gs
lods
iret
repz
inc
push
call
sbbb
dec
sub
mov
insb
sahf
mov
ds
sahf
ja
out
pop
pop
push
dec
xor
dec
repz
clc
pop
sbb
in
imul
push
push
enter
add
fsts
pop
xchg
or
rclb
push
xor
add
lcall
add
jns
jl
sub
ret
into
xchg
cmp
add
cmp
faddl
pusha
mov
inc
mov
in
mov
sbb
ja
shrl
mov
sbb
dec
jns
xchg
sub
xor
dec
es
lock
adcb
pop
das
js
test
xor
jns
ret
filds
sub
mov
hlt
pop
jb
mov
cmp
outsl
cmp
cmpsl
ss
add
and
xchg
pop
add
dec
xchg
fsubs
out
pushf
pop
leave
adc
xchg
out
push
fiadds
test
dec
pop
mov
popa
sub
scas
add
insb
mov
ljmp
add
xor
cs
dec
xor
inc
es
enter
sub
sub
cmp
mov
aaa
and
enter
or
loopne
enter
sub
pushf
pop
lock
dec
lods
push
inc
xchg
les
add
imul
adc
add
jbe
pop
leave
add
xor
pop
leave
adc
mov
sub
es
xchg
pop
movsb
fidivs
and
fsubrl
and
adc
jmp
notl
xor
js
inc
pop
pop
adcb
leave
mov
push
insb
outsl
out
mov
cmpsl
mov
add
rcl
mov
pop
push
aaa
sub
mov
sub
outsl
sub
pop
cmp
leave
mov
push
inc
daa
add
lods
in
movl
cmpsb
lahf
mov
xor
push
mov
pop
push
inc
jl
imul
push
or
mov
mov
fcoml
ret
nop
push
mov
add
inc
jbe
in
test
idivl
cmpl
or
mov
cmp
jg
mov
clc
xchg
daa
testl
or
cmp
data16
bound
push
lock
enter
xorps
aaa
in
pop
bound
dec
enter
pop
mov
les
mov
or
pop
adc
clc
popa
mov
clc
lods
mov
lcall
mov
sub
push
fs
and
adc
test
inc
adc
or
arpl
testl
xchg
fdivs
add
lock
sahf
cld
add
fs
addl
cmp
rolb
pop
fs
shlb
inc
mov
mov
add
subl
dec
xchg
call
or
or
gs
mov
xchg
dec
iret
add
sub
pop
add
mov
repnz
sbb
enter
ret
jg
addr16
nop
int
mov
mov
cltd
add
jb
bound
sub
data16
fdivp
adc
test
dec
addr16
outsl
add
ss
sub
push
pop
pop
cmpsb
shlb
loope
stc
cmp
data16
leave
adc
xor
add
jl
and
cmp
jl
dec
addr16
pop
leave
test
iret
push
xor
xlat
add
jo
sahf
iret
leave
in
aad
daa
dec
out
add
daa
or
xchg
pop
add
jnp
pop
xor
xchg
adc
mov
push
iret
repz
cmp
imul
xchg
fsubrp
cmp
and
or
pop
push
sub
jns
jae
xchg
xor
or
push
fsubrl
push
add
or
call
pop
testl
mov
ss
jo
loopne
imul
scas
add
or
out
mov
add
rorb
inc
out
push
addr16
aam
xor
or
jb
es
push
adc
add
xor
push
pop
insl
and
push
sub
push
xor
iret
xor
jl
das
jbe
insl
xlat
mov
daa
sub
jge
xchg
xor
cmpsl
mov
mov
jae
xchg
push
cmp
aaa
ss
cmp
loopne
das
lock
or
pop
test
insb
outsl
movsb
xor
mov
fs
pmaxub
add
push
pop
das
push
aaa
jns
idivb
insb
sbb
addr16
mov
xor
pop
out
mov
push
gs
push
loopne
mov
lahf
out
jle
ds
mov
iret
repz
insl
mov
stc
adc
xchg
mov
shr
or
pop
out
cmp
jl
shl
adc
repz
pushf
mov
add
push
cmpsl
stc
cmp
push
jo
movsb
cmp
sarl
inc
jo
mov
sahf
out
call
je
ja
out
cld
and
push
lods
je
sahf
out
or
push
fwait
xlat
out
fidivrs
jbe
push
inc
insb
fwait
iret
repz
clc
cmp
test
sub
out
lcall
inc
ds
repz
mov
jl
out
js
into
jmp
jnp
mov
or
xchg
in
jge
adc
iret
repz
jp
sub
cmp
out
jl
and
mov
stc
pop
or
cmpl
imul
cmpb
rep
shrb
test
stc
cmp
out
dec
xchg
adc
push
xchg
sub
jns
cmpsl
jge
ret
idivb
mov
imul
mov
out
xor
in
jp
mov
idivl
push
xchg
shrl
jl
out
enter
call
out
movsl
add
repz
rcl
mov
sahf
out
jl
xchg
outsl
push
xchg
sub
xchg
shlb
pop
cmpb
cltd
push
stc
add
shlb
stc
bound
jns
out
enter
xchg
shrb
dec
xrelease
lahf
repz
out
cmc
cmp
sahf
out
mov
mov
adc
movsl
lcall
xor
cmp
out
jo
xor
out
fcoms
test
ds
repz
out
push
lods
sahf
inc
lods
cmp
int
enter
in
mov
int
stc
mov
xor
ds
mov
mov
fnstsw
out
push
ss
enter
xor
cmpsl
stc
xor
mov
stc
push
mov
shrb
rcrl
lret
sarl
lahf
out
negl
int
ret
repz
cmpsl
push
sahf
leave
cld
push
fldcw
nop
fldt
lock
iret
mov
andb
push
push
rcrl
int
and
cmc
iret
mov
ret
shll
xchg
add
addr16
inc
pop
cmp
push
fs
or
mov
add
push
add
mov
mov
addr16
leave
repz
loop
ljmp
sbb
imul
xlat
lods
nop
fadds
pop
paddq
sahf
mov
cmove
inc
adc
adc
fidivl
int3
fnsave
push
adc
sarl
cmp
push
sbb
ret
add
paddb
mov
lcall
scas
outsl
or
xor
aaa
xchg
enter
inc
pop
enter
mov
dec
mov
ss
push
pop
mov
mov
cmp
outsl
xlat
dec
xchg
bound
push
out
xor
setle
fidivl
outsb
jbe
mov
inc
mov
mov
leave
and
jle
fists
xchg
push
insb
jnp
dec
mov
popf
push
mov
arpl
popf
or
scas
flds
sar
xchg
dec
insb
cmp
ss
fnstsw
mov
sbb
aas
mov
inc
sub
sub
iret
pmaxsw
mov
addr16
jno
pop
aad
pop
dec
icebp
cs
push
inc
pushl
insl
inc
mov
aaa
pop
mov
jbe
or
inc
daa
sbb
out
or
call
inc
adc
fucom
repnz
push
cmc
inc
add
stos
daa
outsl
or
ds
or
lahf
and
ja
ja
sbb
sahf
push
sub
mov
cmp
and
outsl
into
push
ss
je
incl
inc
cmpsl
mov
jg
inc
pop
pop
cmp
push
pop
push
aas
or
loope
xchg
push
test
xor
nop
sub
sahf
out
in
jo
inc
jo
push
jg
inc
mov
mov
inc
enter
dec
mov
movsb
jns
mov
scas
cmpsl
or
cld
jns
loopne
xor
xchg
cmp
scas
cmpsb
inc
push
out
and
inc
xor
jns
test
mov
movsl
mov
lret
imul
in
jp
pop
xlat
cltd
icebp
add
push
pop
insb
inc
adc
testb
xchg
jnp
leave
leave
enter
insb
cmp
sahf
fildl
pop
addr16
add
mov
mov
cs
cmp
dec
pop
fs
inc
in
je
and
daa
inc
scas
xchg
dec
cmpsb
in
or
pushf
scas
enter
nop
xchg
dec
aam
pop
repnz
cs
inc
iret
mov
add
jge
cs
sbb
sub
pop
jge
ss
popa
lods
mov
add
cmp
xor
cmp
xor
push
daa
xchg
sbb
popf
inc
scas
inc
xor
jb
leave
mov
in
sub
or
shrb
mov
jg
jb
and
jg
jg
mov
outsb
inc
outsb
dec
repz
repz
add
bound
insl
push
js
orl
mov
or
orb
bound
orb
es
jns
xchg
sbb
or
mov
in
inc
cmc
shll
ret
pop
insl
xchg
inc
sbb
push
inc
sbb
jb
outsl
pop
dec
outsl
push
outsl
pop
xchg
add
test
mov
popf
cmpsb
add
add
push
dec
jb
jb
fsubp
out
xchg
pop
jb
idiv
pushf
inc
mov
and
jo
jo
jo
leave
xchg
and
dec
jo
fnstsw
cmpsl
jl
in
jbe
pop
test
mov
repnz
pop
incb
jo
roll
out
mov
bswap
mov
out
add
int3
aas
jno
adc
adc
fcompl
nop
mov
inc
andl
insb
jo
push
mov
iret
insl
call
pushf
leave
adc
cld
loopne
jno
into
push
cmpsl
push
dec
ds
cmp
add
test
cmp
test
or
add
test
cmp
fldenv
pop
out
push
aaa
leave
and
mov
push
jb
loope
daa
cmp
jb
adc
jb
cmpsl
jb
and
leave
scas
jb
test
xchg
mov
leave
leave
in
hlt
xchg
cmpsl
in
leave
rolb
rcr
and
push
daa
and
and
leave
add
pop
xchg
jae
js
xorl
xchg
xchg
xchg
jae
jae
jae
jae
out
xchg
xchg
jae
jae
push
or
sahf
out
sahf
or
or
or
cmp
repz
pop
je
adc
repz
repz
iret
repz
adc
adc
cmp
repz
addr16
jne
pop
cmp
repz
sbb
or
sbb
imulb
xchg
xor
mov
mov
jne
in
loopne
inc
jne
dec
jne
leave
inc
fwait
mov
jb
add
add
leave
and
js
daa
sub
lahf
lods
mov
cmp
mov
clc
scas
adc
inc
mov
push
mov
xor
mov
nop
push
add
mov
inc
into
hlt
jbe
das
loopne
mov
mov
daa
mov
mov
rorl
mov
add
nop
scas
or
inc
dec
cmp
out
sbb
xchg
negl
out
pop
add
test
jo
repnz
push
mov
mov
push
add
shlb
js
mov
pop
mov
js
aas
rclb
inc
aas
add
repnz
mov
mov
dec
cmp
and
jb
pop
mov
cs
dec
pop
add
dec
add
pop
pop
and
pop
daa
test
pop
and
mov
jns
xchg
mov
leave
mov
fdivrl
cmc
adc
jmp
lea
mov
pusha
pop
pop
jp
jbe
fldl
push
punpckhbw
jno
xchg
out
rclb
addr16
adc
mov
mov
mov
jmp
hlt
mov
inc
push
leave
pop
xchg
jns
test
nop
pop
enter
mov
in
repnz
jp
lahf
frstpm(287
in
jnp
jnp
xchg
add
dec
and
aam
dec
es
paddw
cmp
mov
push
data16
or
pop
push
jb
loopne
or
in
faddl
push
nop
add
nop
scas
pusha
mov
js
nop
mov
daa
pop
mov
les
jge
repnz
jge
jge
jge
repnz
jge
jge
jge
repnz
jge
jge
jge
jge
repnz
jge
jge
mov
nop
pop
femms
dec
dec
dec
dec
or
dec
dec
dec
or
pop
push
dec
dec
dec
dec
add
dec
dec
dec
add
xchg
in
jns
mov
iret
in
in
lret
fsub
xchg
add
xchg
xchg
or
mov
leave
subb
bound
push
jb
mov
ja
ja
cltd
dec
ds
filds
sbb
rcll
loope
daa
jmp
mov
aas
stc
invlpg
or
add
sahf
out
adc
sbb
mulb
jg
mov
sbb
push
inc
push
add
fs
sahf
addr16
add
xchg
mov
xchg
loop
pop
xor
add
fwait
inc
das
aam
paddusb
xchg
jl
dec
in
dec
or
or
or
add
jns
hlt
or
and
sbb
cld
movd
js
les
mov
mov
add
xor
js
add
pop
or
leave
imul
pop
or
sarb
adc
pusha
test
dec
das
aas
cmpb
adcb
cmp
jae
pop
insl
add
js
jge
sub
cmpb
mov
cmp
int3
aam
xchg
add
in
add
insl
in
subl
cmp
sahf
xchg
out
inc
dec
pop
push
or
cmp
leave
mov
mov
mov
movsb
enter
lock
add
push
sbbb
and
das
push
iret
repz
push
cmp
inc
or
iret
repz
pop
or
push
cmp
repz
jl
mov
lgdtl
rolb
mov
fiadds
lods
ljmp
xorl
cmpl
jns
pop
xchg
push
cltd
mov
or
sbbl
sub
or
pop
leave
jae
xchg
xor
rcrb
pop
sbb
nop
xchg
int
cltd
add
cwtl
cltd
dec
mov
orl
cltd
adc
scas
insb
mov
in
cltd
rorb
adc
aas
xlat
outsl
xor
repz
dec
sahf
add
lock
rorb
lcall
ss
test
pop
sbb
and
xlat
movaps
in
lcall
push
jb
adc
lcall
fdivs
xor
rorb
test
mov
add
lds
mov
xchg
sub
mov
push
xchg
xchg
dec
repnz
hlt
push
ret
mov
xchg
mov
and
in
enter
xchg
inc
pop
xor
add
in
jns
orb
add
mov
repnz
sahf
movl
bnd
xchg
mov
pop
lock
and
mov
push
mov
enter
data16
jl
jb
jb
xchg
iret
leave
jae
mov
or
pop
and
and
add
cmp
enter
mov
mov
xchg
jl
testl
pop
leave
jae
jne
add
push
add
mov
mov
pop
jo
popl
lahf
lods
insl
test
sidtl
ficoml
out
dec
xchg
mov
insl
in
incl
cs
xchg
out
lahf
add
jbe
cmp
push
adc
xchg
out
cld
sbb
in
mov
mov
leave
dec
mov
mov
push
add
or
aaa
mov
iret
mov
xchg
test
push
add
ja
mov
jbe
mov
mov
push
add
fldcw
dec
verw
cmp
mov
push
push
or
out
es
bound
and
adc
mov
mov
popf
notl
leave
leave
inc
repnz
fabs
pushf
call
mov
mov
mov
dec
into
sahf
aas
fisttps
jo
xchg
sub
lea
lea
das
cmp
fimuls
push
in
neg
in
add
add
push
add
adc
mov
sub
pop
dec
mov
pop
add
pusha
push
xchg
jo
orb
das
nop
mov
mov
pop
pop
mov
mov
xchg
xchg
xchg
xchg
or
or
xchg
xchg
xchg
xchg
push
add
sahf
xchg
add
rcrb
sahf
out
sahf
sbb
sbb
sbb
jns
call
leave
rorl
and
add
sahf
and
and
adc
ljmp
cwtl
mov
inc
pop
movsb
addr16
cmp
jg
xchg
dec
push
add
mov
out
jb
ds
dec
and
xchg
rorb
movsl
jecxz
xchg
out
jmp
add
or
xchg
add
cmpsl
push
pushf
mov
nop
cmp
cmp
adc
aas
pop
pop
vmwrite
punpckhbw
jo
out
sahf
out
or
dec
or
nop
pop
cmovg
adc
repz
call
movsl
in
xor
loopne
cmpsb
adc
sbb
sub
arpl
enter
xchg
test
add
repz
lcall
insl
cltd
shrb
iret
loope
pushf
xchg
xchg
fndisi(8087
iret
jmp
scas
es
jbe
inc
xchg
out
outsb
pusha
or
shlb
lret
mov
ja
xchg
fisttps
add
das
cmp
iret
leave
repz
add
push
push
cmp
xchg
inc
into
pop
xchg
xchg
sbb
addr16
xlat
cwtl
add
add
mov
loopne
or
lods
test
add
test
ror
call
cmpsl
jb
inc
hlt
test
and
daa
cmp
xchg
cmp
cmp
imul
test
repz
xchg
mov
mov
and
pop
je
push
fsubl
add
xchg
and
xchg
xchg
pushf
fsubl
and
and
or
addps
xchg
iret
sub
pop
js
jmp
repz
adc
add
mov
mov
add
xchg
paddusb
iret
repz
in
in
jl
pop
popf
iret
ror
push
mov
mov
or
stos
inc
mov
sub
leave
repz
xor
cmp
push
inc
xchg
push
stos
lahf
and
xchg
xchg
lods
stos
insl
xchg
pop
setb
and
push
add
in
jb
pop
leave
fsubs
xchg
xor
sub
inc
inc
xchg
dec
xchg
fcmove
jnp
out
push
add
gs
into
rep
fisttpll
jnp
xchg
or
jg
push
add
mov
xchg
push
out
or
pusha
aas
rcr
cltd
or
int3
pop
mov
pop
xchg
push
add
xchg
outsb
repnz
add
js,pn
mov
or
adc
dec
nopl
and
xchg
dec
push
add
repz
enter
add
in
es
add
pop
pushf
cmp
sbbb
mov
out
ds
or
test
xadd
inc
ja
xchg
lods
xchg
xchg
xchg
xchg
xchg
xchg
add
or
adc
sbb
mov
cwtl
lcall
mov
cwtl
push
cs
out
pop
push
ja
mov
fmul
add
popf
shl
imul
dec
repnz
pop
xor
or
daa
inc
fistpll
ret
leave
rcr
jcxz
cwtl
andl
add
scas
xchg
push
sub
daa
dec
mov
cmpsl
cltd
lahf
cltd
push
leave
add
pusha
cltd
dec
mov
or
repnz
fiadds
cmpsb
scas
cs
adc
add
cltd
add
push
jns
cltd
pop
mov
and
loopne
dec
xchg
mov
popf
out
push
mov
in
mov
and
lcall
dec
lcall
repz
push
dec
jne
mov
lcall
iret
repz
or
or
inc
pop
cmp
fcomps
xchg
lcall
in
fwait
push
push
popa
movsb
mov
in
inc
pop
ja
ja
fwait
nop
fwait
out
pop
in
fwait
push
add
push
pushf
mov
mov
scas
cmpsl
nop
pusha
pop
or
mov
mov
in
enter
add
inc
mov
adc
jb
mov
pop
push
pop
xor
cmp
dec
rsqrtps
iret
or
bswap
in
in
addr16
pushf
pushf
add
in
pushf
push
lahf
mov
pushf
mov
pop
fs
cs
and
mov
mov
cmpl
popf
enter
and
cs
popf
dec
ds
les
es
jb
mov
mov
mov
ja
inc
pusha
scas
push
js
or
mov
pop
test
cmpsl
mov
test
mov
sahf
xchg
out
mov
cld
cmp
mov
mov
jae
sti
xchg
mov
insl
in
push
sahf
aaa
sahf
aas
pop
lsl
dec
sahf
jmp
jb
jp
cs
out
mov
mov
rcrb
and
mov
or
inc
out
lahf
and
mov
cs
inc
lahf
dec
lahf
in
xchg
push
pop
pop
lahf
gs
jo
inc
repnz
jo
lahf
pop
or
fldt
mov
loope
cmp
outsb
mov
imul
pop
icebp
cmpsl
push
aaa
repnz
adc
sbb
inc
into
cmp
scas
mov
mov
xchg
add
in
pop
outsl
emms
pop
xchg
out
sahf
jg
xchg
out
popf
je
add
notb
xchg
fdivrs
dec
fnsave
mov
mov
nop
mov
fidivl
mov
repz
pop
xchg
data16
iret
add
lcall
pop
movsb
cmp
ja
pop
repnz
add
cmp
and
fnstsw
arpl
mov
mov
daa
mov
mov
cmpxchg
mov
or
js
mov
mov
hlt
aas
mov
ror
mov
mov
iret
sbb
cmp
add
push
push
pop
pusha
pop
pop
bound
sgdtl
dec
push
pop
jo
js
andb
mov
repz
sahf
xchg
or
test
push
iret
repz
mov
mov
out
cmp
rcrb
sbb
sub
aaa
ret
loopne
das
push
push
das
and
adc
in
mov
mov
mov
stos
pushl
movsb
mov
push
pop
mov
dec
ja
xchg
fwait
xchg
add
push
jg
sbb
pop
test
sbb
push
movsb
movsb
mov
fsubs
btsl
sysret
vmread
clc
inc
das
inc
and
or
and
dec
movsl
insb
mov
adc
addr16
mov
lret
nop
push
movsl
movsl
pop
leave
jae
xchg
loopne
cmpsb
daa
daa
call
movsl
pushfw
sbb
cmpsb
dec
pop
cmpsb
push
repnz
push
outsl
or
mov
jo
jp
andb
mov
xchg
lcall
fldt
das
ret
pop
clts
jb
push
ret
outsl
stos
cmpsb
inc
mov
mov
shlb
leave
repz
ljmp
inc
add
adc
stos
mov
mov
das
sbb
xchg
inc
repnz
stc
inc
jl
es
lahf
jno
mov
or
faddl
pop
push
dec
in
and
mov
cmp
jmp
fwait
push
add
cmp
add
add
repz
lds
or
or
or
repz
or
or
mov
or
enter
pop
inc
adc
sbb
scas
pushf
pushf
pop
mov
xchg
pop
jns
test
insl
enter
pcmpeqw
or
jge
or
pop
test
insb
inc
inc
mov
add
dec
fdivp
dec
roll
or
pop
out
xchg
or
aas
dec
pop
ljmp
bound
shl
pushf
ret
mov
jo
or
or
jb
adc
cmp
test
dec
xchg
mov
xchg
nop
mov
adc
addr16
ret
es
dec
lock
clc
pusha
sahf
out
cltd
invd
and
add
xor
dec
cmp
inc
jbe
cmp
or
push
pop
outsl
pushf
cmp
fisttpll
add
sahf
pushf
jno
stos
xlat
adc
ret
fldl
and
stos
pushf
mov
jns
pop
mov
lsl
sub
call
xchg
pop
fnsave
stos
inc
fwait
in
xor
sub
mov
push
add
mov
daa
stos
ret
push
add
out
pop
fsub
jns
add
push
fldt
jecxz
jmp
rep
add
in
insl
sti
aas
add
mov
lods
scas
adc
mov
lods
add
out
outsb
xchg
lods
das
imul
push
push
dec
aaa
jns
jnp
orl
leave
leave
ror
or
mov
pusha
js
dec
sahf
add
fsub
add
or
push
lods
psubb
insl
in
wrmsr
pop
or
cmp
adc
sbb
movntps
ss
outsb
xor
aam
shlb
xchg
xchg
lods
js
mov
jb
dec
lods
cmpxchg
sahf
add
add
in
lock
clc
and
ljmp
scas
pop
mov
jb
scas
pop
scas
jnp
subl
setbe
mov
or
jo
repnz
ret
ror
or
dec
adc
xchg
push
leave
mov
scas
or
pop
scas
scas
and
dec
sahf
out
xor
push
pop
arpl
fmuls
packssdw
pmulhuw
in
jle
movsl
les
repnz
add
in
dec
das
insb
nop
mov
sahf
out
fsub
sbb
sbb
in
in
clc
mov
xchg
out
mov
push
and
jbe
mov
jns
test
lock
mov
leave
out
dec
push
add
lock
cmp
mov
sbb
mov
mov
xchg
cmc
in
in
ja
lea
jg
mov
mov
mov
dec
ds
or
lret
cmp
cmp
repnz
add
mov
mov
pop
cmp
and
dec
mov
mov
pushf
mov
mov
jle
jns
out
mov
push
xchg
pop
sahf
loopne
sahf
out
cmpsb
or
push
cs
mov
mov
cmp
call
mov
mov
in
cmpsl
lcall
sahf
out
jb
mov
pop
adc
mov
and
mov
inc
mov
mov
mov
mov
mov
jo
jnp
xchg
mov
mov
mov
mov
mov
mov
mov
in
mov
mov
mov
repnz
in
mov
mov
mov
mov
sahf
out
scas
or
pop
and
jns
out
sub
xor
ds
sahf
out
inc
and
and
pop
es
insb
sub
out
ja
subb
cmp
dec
aaa
cvttps2pi
inc
pop
dec
mov
dec
jecxz
aaa
enter
iret
outsb
repnz
pop
loopne
call
adc
int
mov
and
xchg
out
inc
mov
add
pushf
je
add
pop
ficoms
push
leave
xor
mov
daa
daa
nop
cwtl
mov
dec
dec
shr
add
sbb
ss
jne
cmp
daa
jge
jge
adc
fwait
cmp
in
lods
lgs
fnstsw
invlpg
sahf
cmp
dec
das
cmp
daa
mov
punpcklbw
and
es
repz
xchg
add
in
in
mov
aas
sahf
outsb
daa
cmpsb
mov
leave
xlat
sub
jns
mov
add
sub
jns
xchg
out
push
outsl
xor
sahf
ja
jg
xchg
xor
in
aaa
lahf
cmpsl
imul
cmp
pop
cmp
mov
mov
xor
xchg
into
clc
mov
sbb
mov
pop
sub
push
push
mov
mov
add
leave
xchg
add
and
call
push
int3
unpcklps
in
inc
mov
or
pop
fs
mov
jns
mov
repnz
mov
pop
call
repnz
into
or
fistpl
pop
sub
adc
xchg
out
dec
adc
adc
out
jns
jp
test
cmp
nop
sbb
jns
cmpsb
sbb
sahf
xchg
rcrb
fucomp
add
repz
or
sub
ljmp
nop
sarl
rclb
and
sbb
pop
movsb
push
mov
cs
iret
add
fadds
loopne
jns
iret
pop
call
out
inc
sahf
mov
or
adc
and
mov
and
cmp
dec
sahf
ja
push
adc
lar
pop
pop
sbb
or
inc
dec
pop
mov
sbb
sub
sbb
cmp
rorl
enter
mov
and
outsb
xchg
mov
mov
push
pop
mov
cltd
dec
ss
mov
sahf
add
divb
rorb
sub
xlat
inc
mov
ds
add
jb
cmp
test
jl
mov
mov
xlat
mov
out
filds
out
enter
dec
or
adc
sbb
leave
inc
repnz
ja
sub
cmp
inc
xchg
push
add
xchg
mov
push
cs
imul
xchg
xchg
pop
xor
out
out
divb
pop
push
sarl
js
cmp
push
rcll
jg
fs
in
push
mulps
xlat
popa
shrl
iret
in
jno
push
pushf
xchg
mov
movsb
lods
xchg
xchg
mov
lock
xlat
pandn
cmpsb
daa
out
pop
out
shll
cltd
test
mov
ret
out
pop
sub
xor
into
cmc
in
add
push
ret
lds
fdivrs
outsb
mov
jge
jge
loopne
jbe
fbld
pop
mov
imul
ret
in
in
call
or
or
insb
fsts
sub
xor
cmp
inc
pop
and
pushf
dec
mov
popf
jbe
jle
xchg
in
push
add
mov
shll
jae
mov
hlt
ja
enter
mov
les
les
jns
pop
das
add
aas
sub
xchg
out
inc
dec
jmp
mov
mov
or
push
les
and
and
les
arpl
add
sbb
or
adc
lods
cmp
mov
pushw
outsb
repnz
add
jl
das
cld
nop
mov
in
in
lds
in
leave
ffreep
ljmp
lds
or
push
pop
pop
pop
pop
and
sub
aaa
movb
pop
pop
pop
dec
pop
arpl
outsb
pop
pop
pop
pop
jns
test
pop
lcall
pop
nopl
xchg
xchg
fistpl
aas
sbb
sbb
push
adc
sahf
sub
cmp
in
cs
push
xor
sub
sahf
mov
xchg
xchg
cmp
es
sysexit
aas
mov
cmpsl
jns
cmp
cmp
or
push
adc
cmp
jnp
cmpsl
push
aas
aas
inc
sahf
out
sahf
dec
inc
push
inc
pusha
inc
repnz
jns
inc
fidivs
cmpl
inc
ret
into
dec
out
fucom
dec
cs
jns
mov
out
cli
syscall
enter
jns
out
sbb
push
daa
daa
mov
xor
inc
push
pop
outsb
repnz
push
dec
dec
sahf
pop
jle
xchg
lahf
jl
fimuls
fbstp
repnz
call
enter
repnz
or
adc
push
add
leave
repz
push
sub
hlt
jbe
add
pop
inc
push
leave
outsb
and
pop
mov
mov
jns
leave
repz
dec
adc
jns
out
pop
adc
push
out
daa
iret
adc
and
jp
sbb
push
mov
xchg
leave
leave
leave
dec
and
push
add
mov
dec
sub
dec
pop
leave
repz
cmp
add
loope
lret
lret
and
addb
addr16
loopne
ja
mov
int3
in
mov
inc
cmp
leave
leave
shrl
clts
rcr
cmp
fs
lret
sbb
outsb
or
inc
outsl
jecxz
lock
lret
lret
pop
pop
add
or
or
jg
stos
sbb
xor
das
push
lret
scas
lret
inc
fs
pop
lret
lret
pop
and
js
lret
fistpll
in
fwait
mov
daa
stos
mov
jbe
jb
ret
lret
mov
leave
add
out
jg
gs
jbe
add
bswap
pop
push
xchg
lock
pop
int3
and
cmp
repnz
inc
int3
push
or
mov
jge
xchg
out
cmp
jns
rorl
mov
cs
sahf
push
aad
push
sbb
sbb
pop
int
repnz
pushf
mov
push
pop
jns
iret
jae
and
leave
in
in
dec
mulps
jbe
mov
test
nop
int
sub
int3
jg
js
fcomps
cmpsl
cmp
cmp
aas
into
wbinvd
add
push
adc
into
jg
jecxz
xchg
and
push
into
inc
into
dec
into
popf
cmp
enter
add
xchg
aaa
jns
out
push
sahf
pop
test
dec
add
into
and
hlt
mov
aad
loopne
shrb
mov
into
test
out
adc
or
adc
repz
and
jns
inc
sbb
pop
in
xchg
je
push
fs
pop
outsl
leave
repz
mov
and
nop
push
and
cmpsb
push
es
dec
push
cmp
fidivrs
jns
imull
push
shrb
fisubrl
add
shlb
jne
inc
add
sub
fsub
or
gs
pusha
in
in
ss
sarb
shlb
pop
inc
cs
leave
repz
add
bound
inc
call
js
cs
rep
xchg
sarb
nop
push
or
cmp
add
mov
dec
call
lock
push
shl
cmp
adc
add
xchg
out
sahf
xor
cmp
xchg
je
pop
push
ror
pop
shl
js
cmp
outsb
lahf
jbe
iret
adc
mov
xchg
shll
jb
sarl
inc
mov
shr
repnz
outsl
sbb
and
add
leave
repz
add
xor
jg
cmovnp
out
or
test
in
ret
xchg
sarb
aas
jae
je
mov
shll
sbb
neg
rorb
jmp
inc
into
mov
aas
adc
jae
or
and
repz
leave
ss
push
dec
pop
cmp
leave
push
bound
sbb
aas
repz
jae
sbb
sbb
iret
push
cmpsl
mov
shlb
iret
and
and
in
jl
out
out
push
and
repnz
out
adc
sub
sub
sub
aam
aas
aam
aam
dec
ss
das
cs
aam
jbe
add
aam
and
das
lods
aam
aam
push
push
in
sahf
out
pop
fmuls
jecxz
enter
or
stc
aam
aad
cmp
femms
or
xor
sahf
out
in
inc
push
adc
out
adc
adc
ret
cmovle
aad
cmp
jbe
das
sahf
dec
aad
test
iret
repz
mov
mov
cmpsl
fwait
mov
jmp
fsts
aad
or
pop
out
jns
pop
sub
sub
xchg
cmp
sub
sub
daa
fs
das
outsl
test
xor
popf
cmp
fwait
pop
jp
daa
iret
jae
ss
es
iret
adc
cmp
jmp
add
mov
and
xchg
aas
xchg
adc
adc
inc
add
insb
push
push
xchg
inc
push
sub
fimull
jnp
push
imul
dec
aaa
ja
test
aaa
cmp
rcr
dec
sahf
push
add
cmovbe
add
dec
es
wbinvd
fldl
or
or
outsb
imul
daa
adc
adc
xor
jbe
popf
push
addr16
das
push
xorps
pop
imull
push
and
fcmovne
repz
push
pop
andb
fucomi
orl
xchg
insb
loop
jns
sub
fucomi
fbld
xor
mov
data16
fldl
or
add
cmp
jae
cmpsb
push
inc
cmp
repz
repz
sub
sbb
imul
call
jns
in
aam
repz
out
int3
enter
mov
mov
mov
out
sahf
mov
jns
out
push
dec
inc
sub
sub
adc
or
pusha
adc
std
test
mov
add
jb
inc
push
adc
and
test
and
mov
cmpsb
push
std
dec
cmp
test
stos
adc
sub
testb
add
in
leave
pop
lods
pusha
cmpb
cmpsb
fisttps
mov
jl
lahf
loopne
inc
jle
test
shll
push
mov
mov
cmp
mov
sbb
in
out
adc
mov
mov
ficompl
dec
leave
mov
mov
xor
fcomp
loopne
jb
jle
xchg
mov
xor
xlat
inc
and
add
into
dec
pop
add
test
pop
fcompl
xor
ficomps
sub
clc
outsb
cli
inc
daa
pop
jle
insb
sub
incl
xchg
insb
xor
das
push
push
mov
aas
pop
push
add
gs
mov
iret
repz
or
sahf
out
lcall
mov
sbb
cmp
mov
sahf
hlt
in
push
sbb
pop
push
cmp
stos
jl
pop
jle
in
mov
or
mov
in
cmp
cmp
ljmp
sbb
push
les
sub
mov
pop
icebp
sahf
icebp
aas
add
add
aam
inc
pop
mov
scas
or
add
dec
dec
add
xchg
lock
test
mov
push
push
pop
divl
fwait
inc
jg
inc
push
aaa
push
insb
dec
xchg
aas
pop
pop
stos
push
lea
xlat
pop
fisubl
fisubrs
scas
cmp
stc
mov
cmpsb
jg
out
cs
fidivs
sub
pop
adc
mov
add
adc
push
pop
jg
adcb
icebp
add
mov
sbb
icebp
or
inc
aas
add
and
jnp
repz
add
xor
popf
idivl
adc
lock
add
pop
lock
in
push
and
jnp
jae
push
or
add
push
cld
adc
pop
loopne
push
hlt
sbb
sahf
out
ficoms
push
rcrb
enter
sahf
out
pop
mov
jns
out
and
and
sahf
es
pop
es
cmp
mov
push
dec
ret
movups
xor
pop
dec
jmp
and
inc
pop
inc
cmp
xorl
jg
sahf
out
pop
cmp
pop
js
mov
ds
repz
adc
xor
add
cmp
movsb
imul
jns
dec
insb
addr16
push
loopne
add
mov
and
jb
add
or
and
repnz
ret
mov
adc
dec
pop
and
sbb
dec
sbb
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
call
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
js
fistpll
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
stc
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
dec
pop
inc
in
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
jmp
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
lock
xchg
and
and
add
pushl
sti
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shrl
jmp
pop
pop
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
cmp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
jmp
leave
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
ljmp
mov
jp
popa
push
pop
sarl
jl
mov
aas
xlat
out
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
mov
in
fs
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
pushl
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
call
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
lcall
sahf
out
pop
push
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
ror
add
cmpsb
fmuls
filds
jns
mov
je
inc
inc
push
dec
test
jnp
cmpsl
mov
xor
ja
popa
push
out
mov
les
hlt
push
or
cli
pushl
xchg
fs
xor
lcall
jmp
rclb
mov
sub
mov
sbb
decl
mov
test
ficompl
jmp
mov
hlt
movl
imul
sarl
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
imul
addr16
add
aam
dec
std
test
movsl
cli
test
jmp
mov
leave
mov
jecxz
fdivs
jne
filds
or
pushl
shrl
push
ficoms
push
xlat
enter
mov
and
mov
cltd
call
mov
sub
mov
and
or
adc
stos
lcall
data16
inc
fdivl
jno
add
aad
mov
mov
movsl
bswap
cli
jmp
mov
call
xor
mov
decl
xchg
sbb
push
sub
insb
fs
add
hlt
push
imul
insb
sbb
xor
jmp
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fnstenv
adc
mov
mov
cld
fistps
ficoml
gs
aam
pop
popa
mov
into
fistpll
je
mov
aam
movsl
fisttps
fadd
shll
call
shrl
imul
mov
sarb
add
in
add
pop
dec
or
decl
push
stos
inc
add
adc
or
and
test
or
mov
jmp
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
mov
incl
jge
xchg
shlb
add
inc
push
imul
xorb
sbb
push
ljmp
jbe
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
mov
aad
lcall
pushl
jle
shll
push
repnz
addr16
cmpsb
incl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
fcomip
decl
imul
andl
shrb
rclb
or
or
incl
inc
or
das
es
lds
or
decl
lock
mov
cmpsl
call
ret
shlb
scas
ficomps
ret
jmp
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
push
add
call
mov
jnp
sbb
xchg
or
out
fdivrl
fisttpl
aam
roll
inc
loop
icebp
clc
mov
push
int
mov
mul
ja
outsl
ja
mov
out
cli
pushl
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
ljmp
mov
loop
mov
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
pop
add
stos
dec
push
scas
fcompl
fldenv
filds
stos
xchg
and
aaa
pusha
mov
fdivrp
dec
add
jg
mov
jmp
mov
pushl
xchg
mov
cmpsb
mov
sarb
sub
push
mov
jp
mov
dec
popa
les
incl
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
sahf
push
pop
push
xor
leave
xor
xor
inc
cmp
push
pop
sahf
and
inc
sahf
out
pop
push
xlat
fcomp
fcmovu
jns
out
fsubp
jecxz
out
in
in
jmp
jns
in
in
repz
out
sahf
out
div
clc
stc
xor
js
cli
sti
cld
daa
adc
add
inc
aas
xlat
adc
inc
mov
xchg
scas
inc
sub
pusha
adc
jnp
inc
add
cltd
push
dec
bound
je
mov
add
vprotq
bound
inc
xchg
push
cltd
push
popa
je
push
xor
out
and
inc
dec
std
adc
xor
inc
jns
xor
pop
inc
mov
mov
xor
aaa
cmp
popa
arpl
cmp
arpl
or
xor
bound
std
mov
inc
popa
push
inc
jbe
pop
insb
imul
imulb
add
dec
inc
mov
cltd
jp
add
push
inc
dec
cmp
lock
ret
lret
sub
xchg
popa
or
rorl
fs
push
je
inc
inc
imul
inc
add
inc
mov
xor
mov
mov
xor
push
adc
or
inc
repnz
adc
adc
insb
popa
jns
pop
mov
orb
insb
mov
add
aaa
je
aaa
rcl
pop
aas
inc
push
bound
add
and
or
andb
cltd
and
jae
push
inc
iret
arpl
das
xchg
adc
sbb
inc
aas
enter
xchg
pop
inc
inc
insl
outsl
ss
sbb
inc
pop
ficomps
scas
inc
push
je
jo
inc
inc
add
mov
in
adc
ds
mov
scas
add
mov
iret
int
push
dec
cmp
push
sbb
inc
mov
in
and
fistpll
add
inc
outsb
jne
jb
insl
dec
push
popa
mov
lods
jge
xor
xor
adc
arpl
add
jns
ja
addr16
clc
xchg
into
pop
xorl
jo
insl
pop
adc
sub
sub
aaa
inc
stc
xchg
cmc
cltd
dec
int3
push
adcb
outsl
and
mov
mov
mov
mov
pop
insl
xlat
mov
inc
sbbb
out
jb
addr16
adc
dec
popa
jo
mov
lahf
adc
push
outsl
outsl
test
lds
push
jno
inc
xor
mov
in
push
sbb
pop
in
nop
lods
mov
xchg
push
arpl
inc
mov
fcomps
mov
jo,pn
push
inc
adc
outsl
insb
jns
lods
add
das
inc
jb
push
out
test
je
inc
outsl
arpl
adc
mov
fimull
xlat
inc
push
bound
ja
aad
sub
xor
xlat
rolb
inc
mov
xor
daa
cmp
cmpsb
arpl
xor
adc
inc
add
rolb
or
jg
sub
mov
subb
outsl
pop
jmp
dec
outsb
dec
mov
inc
and
or
sbb
sbb
xor
jo
sbb
push
mov
push
inc
dec
pop
bound
push
jns
arpl
je
pop
imul
inc
adc
repnz
add
add
fisttpl
and
xlat
imull
daa
sub
inc
enter
inc
and
adc
push
xor
ljmp
pop
add
fdivr
loopne
adc
out
sbb
pop
pop
sbb
out
adc
fistl
fstpt
add
pop
pop
push
or
or
or
or
or
or
push
adc
adc
push
adc
push
add
pop
sbb
adc
adc
adc
add
data16
clc
push
lods
fisttpll
adc
pop
adc
inc
add
fldcw
or
add
and
add
sahf
lock
add
ljmp
rcrl
jb
imul
add
call
xor
adc
pop
and
xor
jmp
rcll
bound
js
filds
lods
out
mov
inc
add
push
mov
mov
shrb
cmpsl
test
push
jno
or
addl
and
sub
or
and
scas
pushf
into
cmp
add
add
sub
cmp
adc
aaa
incl
push
pop
popa
jno
and
adc
xchg
mov
stc
and
push
lock
loope
icebp
mov
or
push
mov
xorb
scas
adc
or
js
ljmp
jo
sub
rcr
push
ret
xchg
and
sub
hlt
std
cmpsb
xor
aas
imul
fdivrl
add
mov
mov
loopne
mov
adc
fsts
dec
mov
loope
mov
cmp
outsl
inc
out
cmp
xor
and
fistpl
jg
inc
cmc
iret
xchg
inc
jl
repnz
add
or
adc
pop
inc
inc
xchg
pop
inc
leave
push
pusha
add
sti
or
add
lds
cld
cli
and
mov
incl
jg
fnstsw
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
fldl
aas
dec
jmp
clc
incl
loope
inc
repnz
addr16
out
or
push
push
xchg
add
cli
mov
fstl
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
xorb
xor
lcall
fs
scas
mov
pop
pop
mov
popl
lcall
sub
mov
ret
scas
adc
mov
xor
lods
scas
xchg
test
jns
jecxz
aam
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
outsl
call
out
in
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
ljmp
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
mov
lcall
leave
mov
jp
push
out
or
push
lcall
lea
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
inc
sub
jmp
sbb
jle
push
mov
mov
out
pop
jb
mov
mov
mov
incl
int
inc
fwait
sbbb
mov
dec
jp
push
gs
jg
aas
add
add
stc
loope
mov
sar
andl
outsb
outsl
adc
icebp
testb
mov
jg
xor
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
xor
cli
sbb
cld
andb
sbb
clc
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
loopne
xlat
cmp
test
loopne
cli
adc
aaa
xchg
in
add
es
or
dec
fisttpll
out
aas
std
cli
mov
push
push
idivl
cmp
sub
inc
scas
incl
cmpb
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
dec
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
clc
sub
sub
cmp
dec
inc
push
sub
xchg
pop
clc
pop
hlt
sub
movsb
add
add
lea
jg
gs
std
xorb
jg
pushl
outsl
adc
ret
das
pop
pop
pop
shlb
mov
sarb
sbbl
jno
or
sarb
std
pop
les
cli
ss
jmp
mov
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
lcall
jge
push
shrl
mov
push
mov
adc
and
sbb
xchg
jo
jg
and
out
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
js
cmp
scas
lods
push
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
lock
ds
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
ljmp
push
push
jo
pusha
imul
add
mov
cmp
xchg
mov
sti
es
sub
loop
pop
xchg
ftst
jbe
xchg
and
ljmp
out
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
fidivrl
lock
adc
pop
cld
addl
adc
clc
mov
repnz
cmp
fmull
enter
jecxz
stc
int3
mov
pop
mov
sub
mov
dec
incb
fisubrl
aas
mov
or
cld
inc
or
pop
jo
pop
ret
cmpsb
push
pop
jg
add
jg
mov
cmp
sub
adc
mov
mov
iret
call
mov
push
push
sbb
stos
icebp
pop
incb
jg
out
dec
jno
adc
push
inc
jecxz
sbb
sarl
jbe
adc
loopne
sar
adc
lahf
push
sti
rorb
xor
imul
dec
loope
clc
sti
push
in
aas
mov
fsubrl
pop
fcom
ss
and
pop
inc
call
xchg
pushf
mov
repnz
and
mov
push
jle
icebp
adc
inc
aas
push
rcrl
negb
call
pop
pop
inc
jb
fistpl
adc
call
jno
pop
aaa
ljmp
repz
inc
sti
arpl
daa
std
or
sbb
mov
ud0
incb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fistps
mov
idiv
lds
fidivrl
jg
stos
pop
out
incl
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
jg
mov
push
cld
addl
sbb
mov
lahf
outsl
int3
push
sbb
mov
push
mov
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
ret
call
loopne
push
test
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
sar
jg
adc
lahf
mov
or
out
lcall
in
pop
shl
cld
mov
adc
stos
pop
jg
pop
shrb
sar
ljmp
sarb
adc
xor
pop
rcr
dec
mov
gs
pushf
lea
ds
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
cmc
dec
imul
or
inc
pop
xor
sar
ljmp
lods
test
xchg
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
clc
in
pushl
xchg
movsb
insb
or
and
xchg
ficomps
aam
jp
clc
insb
test
aas
repz
aaa
fistps
outsl
lock
in
jmp
stc
out
mov
clc
push
std
mov
jl
icebp
or
ljmp
xchg
pmullw
mov
push
mov
fsubrp
dec
sahf
enter
adc
lcall
ret
faddl
xchg
lcall
mov
mov
or
dec
ss
lods
lock
mov
or
repnz
mov
pop
adc
call
cmpsl
lret
stos
fisttps
pop
in
cmp
jmp
mov
and
outsl
insl
pop
lock
jmp
hlt
dec
mov
ja
pop
in
xlat
inc
aas
mov
jg
mov
sub
addr16
mov
out
daa
jp
std
adc
cltd
or
and
leave
mov
ret
nop
cmp
das
incb
lock
pop
pop
addl
cld
idivl
fs
sbb
stc
lahf
loope
jae
jmp
add
mov
fbstp
out
xchg
add
out
icebp
mov
loope
mov
pop
leave
xchg
cmpsl
popf
sti
mov
fbld
mov
outsl
das
push
in
jge
out
ret
cmpsb
cmp
call
xor
decb
jbe
add
decb
dec
adc
sbb
jo
call
popf
iret
jb
jo
or
mov
cmp
int
add
push
pop
aaa
std
ja
test
dec
inc
das
js
xchg
xchg
fimull
ret
and
pusha
dec
ror
sbb
aaa
inc
push
pushf
jecxz
adc
shrb
adc
aas
pop
clc
loope
loope
mov
lahf
jp
push
sub
in
cwtl
pop
inc
jmp
xor
mov
xchg
lcall
decb
js
pop
gs
into
sarl
pop
out
jg
jno
xor
loop
ret
cmp
arpl
out
iret
call
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
jmp
outsl
jmp
std
mov
daa
jmp
fsubrl
rolb
mov
ret
outsl
pop
jmp
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
cmp
inc
xchg
cmc
out
daa
icebp
push
lahf
sti
inc
pop
ljmp
sbb
cmpsb
scas
les
pop
xor
mov
xchg
mov
fildll
fsubrl
dec
or
push
add
or
jns
add
sti
push
sti
pop
inc
fs
test
mov
push
rorl
stos
cmp
int3
pop
iret
and
incl
add
mov
mov
push
and
imul
push
and
fwait
mov
call
out
push
sbb
xor
cmp
inc
sub
xor
jmp
adc
imul
fistps
sub
jnp
push
push
mov
push
out
jecxz
mov
in
push
mov
push
dec
jle
mov
movsb
xchg
outsb
push
push
sub
dec
and
jmp
stc
vprotb
xchg
inc
jge
imul
clc
and
nop
and
adc
aam
call
addr16
xorb
adc
aam
call
mov
std
push
lea
decl
xchg
dec
cmp
dec
and
fistpll
jo
ror
dec
push
sub
fdivrp
jl
out
ljmp
iret
arpl
mov
cmp
call
sbbl
call
movsb
daa
addr16
test
cmp
add
push
les
mov
sbb
fdivs
loope
mov
mov
bound
inc
arpl
mov
sub
out
es
mov
jmp
and
out
ss
out
lea
and
ret
data16
rolb
lahf
fildll
or
movsl
mov
pushl
mov
mov
out
into
sbb
es
iret
sti
mov
out
ss
call
aam
sbb
jl
popa
nop
lods
inc
sti
ljmp
push
adc
jb
enter
cmp
sarb
pop
jle
mov
or
iret
jmp
popf
ds
push
pop
repz
and
sbb
adc
int3
outsl
sub
sti
mov
test
ucomiss
and
mov
xchg
pushf
call
pushf
adc
iret
jbe
call
xchg
mov
jle
shrl
mov
movsl
xchg
js
aaa
xor
fiaddl
je
pushl
xor
pmaxsw
inc
push
clc
cmp
add
rorb
pushl
dec
lret
jl
adc
les
cli
push
sbb
clc
mov
push
xchg
std
add
jl
imul
lcall
push
ja
mov
add
pop
adc
sub
push
or
imul
cmp
mov
incl
sub
lcall
lock
xor
stos
jl
jno
sbb
xor
arpl
fiadds
ficoms
cmp
mov
inc
sub
sub
dec
sbb
mov
hlt
incl
fsubl
and
das
loopne
les
jp
dec
insl
into
das
imul
jmp
inc
lcall
lcall
add
inc
test
sbb
push
jg
add
inc
jns
xor
ljmp
xor
inc
lock
cmp
loop
adc
cmp
jns
fidivs
loope
ljmp
jb
int
push
push
pusha
jecxz
cmp
loopne
dec
mov
mov
roll
sub
call
pop
mov
push
or
ss
jecxz
bnd
pop
xchg
test
push
popf
ficoms
push
xor
mov
pop
cmp
mov
mov
xor
out
jl
arpl
sbb
push
repz
mov
call
mov
xor
jle
mov
filds
pop
gs
add
pop
mov
popl
sub
pushl
rcl
mov
out
add
mov
sub
ljmp
movsl
icebp
int
movsl
inc
jecxz
xor
mov
addr16
xchg
call
and
imul
inc
and
xor
das
shl
imull
aas
lds
hlt
call
xchg
xchg
je
int3
out
lods
mov
ffreep
push
cmp
fneni(8087
mov
loope
lret
mov
jp
add
mov
xor
jge
pushl
sbb
jmp
inc
rcrb
lods
sub
xchg
cltd
or
loop
movsb
loopne
in
fisubrl
adc
mov
pushf
cmpsb
jecxz
cltd
and
cmc
jb
mov
ret
mov
cwtl
sbb
push
loope
ret
pop
add
pusha
leave
fisttps
lds
xchg
jo
sbb
call
je
and
pop
sbb
lret
movsb
jb
or
call
jns
and
mov
gs
ficoms
ja
sahf
loopne
ljmp
sbb
xor
outsb
mov
loop
pushl
std
ret
aas
xchg
lock
les
jno
add
and
sbb
mov
in
outsl
cli
call
sti
daa
nop
mov
and
sbb
mov
jp
popa
inc
add
in
into
jg
lcall
aam
sub
xchg
sarb
cld
cmpsl
lds
decl
cmc
mov
scas
shrd
test
cmpsb
xchg
sub
imul
ja
lods
jns
scas
pushl
and
adc
aaa
xor
sub
fcomp
or
cmpl
dec
mov
cmpsl
adc
sti
clc
test
jmp
aad
outsl
dec
xchg
andl
scas
clc
pop
mov
rclb
movb
hlt
mov
sbb
cmc
rcrb
imul
adc
fbld
ja
pushf
cmp
aam
adc
clc
in
test
dec
xchg
xor
inc
outsl
cmc
gs
mov
jns
test
mov
jbe
lods
or
cld
lcall
ret
jne
adc
out
out
jecxz
push
sub
inc
push
inc
ds
jg
pop
ret
xchg
and
mov
pop
into
xor
into
pop
push
lock
data16
jmp
imul
arpl
dec
aad
mov
call
std
mov
jecxz
into
clc
and
push
pushf
pushf
lret
lods
icebp
out
incl
ja
or
pop
rcr
sub
pushl
cltd
pushf
divl
inc
int
ds
push
stc
outsb
jmp
xchg
and
pushl
testb
ljmp
imul
sbb
pop
or
adc
mov
sub
push
inc
jno
mov
clc
xchg
lret
mov
dec
in
ror
push
xor
in
sbb
xlat
xchg
in
inc
xchg
les
scas
es
pushl
fldcw
and
pop
fistpll
jmp
popf
nop
jbe
push
scas
nop
pop
jmp
mov
shll
loope
dec
cli
pop
out
jl
fstpl
adc
dec
or
std
mov
fcos
ljmp
outsb
scas
sbb
and
test
in
lahf
xor
dec
and
cmp
cmp
sti
pushl
ljmp
add
mov
fdivl
std
call
scas
sahf
mov
ljmp
rclb
cmp
sbb
and
and
int3
aam
popf
inc
ret
ljmp
sbb
mov
hlt
fistpl
loope
mov
fwait
pop
andb
ljmp
pushl
cmpsb
and
pop
loop
pop
cltd
xchg
shlb
cltd
sbb
aad
fldt
pushl
test
aaa
in
cmc
fsubl
stc
push
addr16
pop
sbb
mov
xor
sub
push
in
sbb
cwtl
cmp
mov
rcll
mov
inc
mov
push
jecxz
inc
sbb
mov
aad
pop
loope
pop
sub
dec
jnp
mov
dec
cmc
sbb
into
jo
mov
dec
in
stos
pushf
icebp
repz
xchg
xor
outsl
sub
mov
aaa
lds
mov
lds
lcall
pop
in
xchg
hlt
push
mov
mov
dec
and
addr16
cvtdq2ps
cmpsb
mov
decl
es
bound
jp
rorl
push
in
clc
cmp
icebp
dec
shrl
test
jg
subl
add
ja
xchg
jne
rcll
cmp
mov
arpl
xchg
push
test
jecxz
out
cld
imul
xchg
xor
and
sub
dec
lods
out
adc
das
scas
adc
mov
pop
in
insb
dec
and
mov
push
mov
sub
add
in
call
fisttps
xchg
push
or
mov
mov
jecxz
pushl
xchg
xchg
incb
cmp
scas
daa
dec
push
pop
cld
fisttpl
leave
decl
lcall
sahf
or
shrb
cmp
sti
jne
push
xchg
dec
pushf
lcall
pusha
scas
in
push
aas
js
fistpl
pop
lahf
pop
dec
enter
outsb
pop
ljmp
ja
mov
mov
iret
cwtl
stos
mov
xor
adc
pop
jb
adc
or
jb
out
push
inc
repnz
cltd
cmp
daa
adc
std
xor
movsl
in
sub
ljmp
dec
sbb
icebp
push
testb
jno
mov
icebp
dec
filds
scas
clc
pushl
into
cmp
mov
push
enter
xchg
pop
in
cmp
das
cli
pop
or
lods
daa
shll
in
or
lahf
shlb
movsl
or
inc
cmp
test
js
jle,pt
pop
les
jle
cmc
dec
pop
dec
or
adc
clc
aam
aad
cmp
push
int3
pop
out
fistl
xor
call
or
adc
mov
aad
in
cmp
jo
jl
or
push
jbe
cmp
inc
mov
shl
mov
stos
les
xor
mov
scas
ss
jp
sbb
call
subl
pusha
mov
jmp
sub
data16
in
pop
pop
mov
and
fisubrs
iret
dec
mov
mov
sub
mov
jge
dec
faddp
stos
pop
add
cmc
inc
jl
push
ret
jmp
and
xor
ficomps
jbe
fs
add
ss
int
ret
mov
fimuls
jecxz
outsl
out
sbb
lcall
popf
mov
sub
mov
push
push
incl
cli
xor
jns
jne
sub
rcl
out
cmp
or
push
je
fimuls
mov
loop
push
ret
ljmp
loope
sti
je
cmp
dec
push
add
clc
mov
cltd
pusha
mov
jbe
movsb
test
mov
push
adc
fnsave
lock
jge
mov
and
mov
imul
sub
lcall
jge
and
pop
stos
clc
das
mov
jg
in
out
movsl
arpl
push
inc
pop
pop
push
imul
jl
cld
loope
push
jb
mov
cmp
sub
pop
pop
clc
call
mul
decl
push
stc
insl
mov
jle
rcll
push
in
call
test
shll
scas
mov
push
jae
pusha
js
shll
jnp
cwtl
push
imul
repz
lahf
jle
out
xor
xchg
add
js
sbb
testl
cli
ret
dec
push
xorl
adc
cmp
push
cmp
fdivrs
outsl
imul
jg
or
mov
jns
aam
lock
loope
jb
sub
decl
notb
pop
inc
xor
xor
imul
insb
inc
adc
loope
ljmp
adc
mov
in
and
bound
bound
push
xor
jmp
stos
pop
ret
ret
mov
mov
orl
aam
add
sub
sub
decl
inc
rorl
sbb
popf
out
bound
xchg
inc
aad
scas
pop
push
orb
fimuls
rorl
outsb
inc
push
xchg
aaa
and
aas
cmpsb
shll
lret
or
jp
dec
mov
divl
idiv
pushl
je
jo
in
fs
inc
lea
mov
mov
jnp
test
sub
sti
cmp
jecxz
shlb
subl
ljmp
enter
mov
xchg
pushl
call
int
popa
out
pop
leave
push
mov
test
push
shlb
jmp
mov
mov
popf
lcall
sbb
hlt
stos
punpckhdq
lcall
xor
lds
adc
mov
incl
xchg
jno
add
or
adc
push
xor
xlat
vmovntdq
ljmp
lret
out
mov
push
add
cmpl
jo
xchg
or
pop
int
mov
sar
je
popl
mov
xor
stos
ljmp
push
mov
loop
movsb
leave
and
ljmp
jg
pop
addl
push
popa
xor
sbb
add
inc
sbb
ljmp
fcmovb
iret
loopne
adc
ficoms
and
jne
mov
mov
lcall
ds
sbb
mov
fwait
push
xchg
and
xorl
decl
fcomps
sar
aad
pop
push
sti
mov
mov
in
icebp
mov
dec
dec
into
shll
mov
push
cltd
mov
aaa
frstor
int3
js
fldcw
jl
iret
iret
dec
scas
cwtl
jmp
lods
cmp
outsl
adc
cmp
and
adc
sub
aaa
loop
jl
pushf
sbb
pop
cld
adc
out
lods
cmp
xchg
stos
inc
loopne
je
adc
fistl
push
lods
int3
push
std
stos
or
repnz
pushl
sbb
adc
dec
in
push
add
out
xchg
mov
test
repz
lcall
push
push
pusha
mov
and
insl
cli
stos
loope
adc
mov
fcmovnbe
push
sbb
add
das
cli
pop
gs
loope
test
cmp
enter
fidivrs
cmp
addl
sbb
negb
cwtl
fdivl
mov
mov
enter
jg
cmpsb
xor
stc
dec
pop
xchg
cmp
jecxz
gs
push
dec
push
adc
xchg
xor
shl
xchg
fcomps
mov
ljmp
or
jno
push
add
cmp
pop
add
pushf
mov
ja
push
fs
call
mov
fs
dec
fcoml
xchg
jae
out
and
jne
mov
cmpsb
jmp
mov
fildl
xchg
aam
fdivs
xor
subl
lea
lcall
cmp
pop
mov
or
and
fisttps
std
movb
test
xor
mov
jmp
mov
stos
mov
ret
decl
add
cmc
aam
xchg
fwait
ret
pop
xor
mov
and
es
hlt
decl
add
mov
pop
cmp
lcall
les
ja
dec
repz
ja
neg
repz
add
mov
mov
decl
xchg
or
popl
les
jo
xor
jmp
xchg
in
dec
pushf
ljmp
mov
bound
fbld
mov
ret
jbe
mov
xor
push
jl
mov
cmc
adc
lcall
fucomip
push
lahf
popf
call
pushf
fs
decl
jne
cmp
jo
xlat
jno
sub
jle
add
test
jno
clc
ljmp
push
and
cmpb
push
test
sub
jmp
push
sub
dec
or
sbb
add
pushf
daa
outsb
out
jp
sub
lcall
stos
xchg
das
push
sub
mov
dec
or
adc
in
inc
mov
inc
cmpsl
mov
call
jp
cwtl
cmp
xchg
test
mov
cmp
adc
xor
cmpl
lahf
hlt
sbbb
clc
jle
dec
cmp
pop
shll
aas
and
and
sbb
mov
cmp
mov
mov
dec
cmp
xlat
pop
mov
xor
ja
pop
insb
jp
pusha
inc
ss
in
pop
or
xor
adc
mov
cli
sub
pop
jle
sbbl
ss
lcall
jmp
loop
mov
jmp
aad
dec
test
xchg
dec
push
mov
mov
bnd
cltd
sbb
push
pop
adc
scas
adc
jae
mov
sub
aad
inc
call
pop
push
into
mov
pop
pop
cltd
negl
sahf
cmpb
lcall
fstpl
loop
pop
or
js
inc
repnz
xchg
clc
dec
sbb
pop
cmpsl
jp
jmp
gs
dec
mov
xor
inc
jo
xchg
jg
mov
mov
mov
addl
aad
sub
in
mov
mov
adc
fbld
inc
mov
cmp
aam
in
jg
inc
pop
pop
jecxz
mov
movsl
popf
xor
pop
loopne
lcall
dec
decl
add
mov
ret
and
xchg
sbb
mov
cmp
pop
sub
mov
and
jbe
and
fisttps
mov
std
mov
sbb
int3
push
sbb
mov
mov
and
ljmp
mov
cmpsl
jmp
rep
fs
in
js
xor
repz
incl
out
arpl
andb
rcr
jge
aad
mov
jno
ljmp
push
test
lock
mov
mov
add
push
ret
cmp
loop
mov
mov
mov
mov
adc
xchg
icebp
mov
call
out
xor
int3
ret
xchg
subb
stos
mov
and
dec
decl
fiaddl
jl
stos
sbb
xor
mov
mov
add
jmp
or
or
pop
jne
push
mov
xchg
sub
sub
out
and
jae
xchg
bound
pushl
pop
pusha
adc
aas
notb
pop
sahf
sbb
pop
xchg
out
jns
push
loope
decl
xchg
idivl
cmp
jp
ret
lret
xchg
rorl
lods
inc
pop
push
scas
fnsave
pop
nop
and
xchg
rorl
push
jg
mov
pop
fdiv
arpl
sbb
shr
mov
icebp
jo
cmp
std
jbe
push
inc
sub
loop
jl
cmpsl
or
xor
xchg
cmp
sbb
aaa
fwait
jecxz
mov
adc
jmp
push
xor
mov
scas
xchg
mov
xor
jo
or
cltd
jo
insb
xor
les
pop
jns
mov
jmp
pop
popa
lret
scas
mov
xlat
xchg
stc
hlt
lcall
cltd
mov
movsl
sbb
hlt
out
inc
insl
ret
push
fldcw
test
pop
xor
jg
cld
mov
loop
not
fldl
cld
rclb
cmp
mov
jg
sub
mov
inc
cmp
les
dec
out
std
test
cld
fwait
cmp
outsb
jbe
jno
scas
pusha
sbb
cmp
push
mov
stc
jns
jp
and
shll
jmp
cmc
mov
mov
add
or
and
addr16
cmc
nop
or
push
outsb
sub
xchg
incl
dec
bound
repz
xchg
or
insl
bound
adc
xchg
addr16
mov
call
adc
dec
ja
lods
push
stos
or
loopne
push
cli
adc
jno
mov
std
decl
clc
hlt
into
bound
arpl
inc
add
ljmp
adcb
mov
das
in
and
cmpsl
les
stos
mov
test
aad
cld
aaa
std
in
push
sub
xchg
cs
fs
inc
hlt
insl
jg
push
into
push
out
clc
xchg
and
or
loop
push
push
dec
sti
or
aas
cmp
decl
fldl
jle
cmp
mov
jae
mov
jle
cmp
push
jge
pop
fldcw
enter
jle
shr
lock
mov
sub
mov
clc
ljmp
sub
mov
sbb
cvtpi2ps
and
test
jmp
cmovbe
jp
bound
pop
adc
loopne
cmp
loop
mov
inc
dec
lods
mov
cld
decl
cmc
or
inc
ret
mov
and
lcall
xlat
mov
fcomip
test
inc
cwtl
pop
int
lahf
insb
pushf
leave
push
cmp
pop
imull
push
inc
cli
mov
sub
ja
dec
call
into
addb
push
ficoms
pusha
push
in
mov
fistps
insl
sbb
sahf
xor
stos
mov
pushf
xchg
movsl
xor
cld
push
and
jge
xor
test
fcomip
push
repz
and
cli
test
negl
xchg
push
push
ret
sub
adc
inc
or
clc
popa
jg
call
dec
ret
ds
add
jo
xchg
pop
xchg
pushf
loopne
sbb
leave
inc
mov
jmp
and
mov
scas
scas
test
cmp
shl
push
and
mov
add
lea
push
adc
dec
lods
ss
mov
nop
mov
insb
jbe
xchg
std
fs
scas
xchg
loopne
pop
fdivr
jae
and
sbb
movsb
aad
bound
and
jmp
push
cmc
mov
mov
dec
push
test
adc
in
mov
and
jmp
pusha
xchg
dec
sub
in
mov
inc
lea
fsub
je
ret
addb
jecxz
jo
mov
push
jl
lock
pushl
push
addb
aam
push
stos
inc
xchg
push
imul
push
ljmp
adc
lahf
bound
fsts
out
or
loop
cmp
incl
push
push
test
jne
pop
pop
jne
adc
test
pop
outsl
in
inc
mov
movsb
push
or
mov
sbb
outsb
pop
das
lods
push
dec
daa
push
lcall
or
fimuls
sti
fucomip
and
xchg
pushf
sbb
call
cld
jns
das
arpl
mov
gs
test
sbb
int3
adcl
popa
lods
faddl
and
add
fildl
xchg
pop
fildll
or
pusha
jmp
in
push
mov
dec
test
push
loope
loope
test
das
aam
scas
in
add
mov
cld
dec
mov
pop
lock
jno
lods
stos
seto
divl
movsl
add
push
ret
fdivr
call
and
call
es
fisubs
push
jmp
mov
jmp
cmpsb
xchg
cmp
lods
push
adc
out
test
cmc
iret
mulb
jmp
ret
push
push
sub
mov
cmp
test
pop
shlb
xchg
ret
inc
pop
sub
jb
aad
mov
addr16
and
notl
jl
fldt
jp
mov
jmp
lcall
test
ja
fidivl
jbe
lcall
adc
mov
xor
inc
adc
add
shlb
jge
adc
sub
sbb
sub
mov
andl
pop
scas
jge
push
xchg
fdivr
dec
cmp
dec
pop
inc
mov
xchg
into
scas
inc
push
in
jnp
dec
sub
pusha
add
popa
push
movsb
call
xor
icebp
in
imul
outsl
cwtl
imul
int
and
cli
js
dec
negb
stos
jg
rclb
mov
sbb
push
add
cmc
dec
sbb
lcall
fsubr
mov
push
imul
sbb
jl
adc
xor
push
inc
add
jmp
xchg
fdivl
and
rcrb
cld
sub
dec
cmp
ljmp
shl
ds
outsl
jmp
imul
xor
test
jge
cmp
dec
xor
icebp
and
repnz
stc
outsb
cmpsb
and
dec
dec
test
jmp
mov
push
dec
ret
out
adc
pop
scas
adc
mov
adc
or
in
mov
dec
int3
mov
pop
jle
lods
xor
pop
addb
mov
push
dec
mov
or
pop
arpl
decl
pushf
shrb
jb
inc
mov
out
ror
mov
dec
ret
fcomip
ljmp
fcom
fisttpll
xor
arpl
stc
jns
stos
aam
sub
pop
push
out
xor
jb
xor
mov
out
mov
jae
add
decl
ja
sbb
push
sbb
jg
mov
jae
notb
cwtl
mov
push
xchg
stos
sbb
push
push
sarl
scas
push
inc
pop
inc
mov
fcmovnu
loop
shrl
mov
jne
pop
jge
out
or
jmp
cmp
daa
xchg
lret
sbb
dec
fbld
mov
pop
mov
out
lds
inc
out
add
decl
pusha
sti
out
sbb
mov
mov
mov
or
pop
push
pushf
movsl
push
in
push
pop
stc
lcall
mov
sbb
push
addl
inc
lds
loope
inc
notl
fstpt
sub
push
dec
push
lcall
lcall
mov
iretw
or
dec
dec
ljmp
cli
inc
mov
mov
in
cli
sbb
insb
cmpsl
jbe
mov
or
call
xor
mov
add
push
xchg
movsb
jg
scas
xor
insl
jl
insl
stc
push
and
in
rcll
jno
sbb
push
push
lods
jb
cmp
lock
fstpl
iret
setae
sarb
scas
pop
xchg
xchg
fcmovbe
lcall
pop
dec
rcll
jnp
fistps
cwtl
adc
incl
scas
dec
bound
xchg
jno
mov
or
loopne
out
ret
pop
repz
mov
fcoms
add
inc
cmp
and
xlat
shll
pop
xchg
ljmp
mov
ljmp
in
sbb
incl
mov
pop
jl
mov
es
sbb
je
dec
lods
pushf
pop
cmp
inc
sub
push
sahf
fldl
xchg
std
jl
arpl
pop
gs
mov
pop
lock
cmp
pop
add
pop
pop
lods
lcall
push
repz
push
rcrb
xchg
jae
adc
roll
loop
xor
mov
cli
inc
mov
and
incb
notb
lock
popf
mov
cmpsl
cmp
ljmp
negl
imul
or
xchg
arpl
inc
dec
stos
fdivs
ss
mov
daa
xchg
ljmp
inc
sub
lods
shrb
shll
ljmp
xor
lcall
jp
adc
adc
push
movsl
aaa
adc
add
ljmp
cmp
lahf
leave
push
adc
or
test
sub
mov
push
pusha
mov
pushl
insb
pop
in
jae
inc
aam
mov
mov
loopne
mov
pop
js
jmp
enter
or
sbb
es
push
out
or
pop
loopne
push
push
sbb
call
nop
outsl
insb
adc
sar
call
loopne
dec
out
push
xchg
unpckhps
sti
push
mov
nop
aas
les
inc
dec
pop
pop
sbb
in
lcall
or
imul
jg
addr16
add
xchg
sbb
xchg
out
jge
pusha
faddl
dec
pop
int
aam
jp
data16
jae
shl
out
pop
lret
adc
sbb
push
nop
pop
and
push
out
loop
pop
inc
lods
and
jmp
pop
pop
jmp
adc
sub
divb
or
clc
ffreep
mov
mov
pop
pop
pushl
lret
cli
sbb
jle
mov
in
push
mov
in
out
jae
xchg
imul
popf
push
ret
add
js
sub
lcall
jp
pop
test
in
mov
daa
data16
push
pushf
jle
jmp
jg
int3
nop
jmp
mov
ja
insl
sbb
mov
xorb
sub
jge
pop
sub
incl
sub
xchg
push
repnz
add
and
jmp
inc
bound
xor
pushl
pop
mov
jge
mov
loope
insl
fucomp
adc
mov
jge
xchg
dec
imul
loop
add
jp
jbe
out
je
or
divl
cmp
lret
jg
icebp
pushl
jecxz
inc
cmp
leave
iret
dec
or
sbb
ljmp
lret
push
insl
mov
divb
imul
sbb
lcall
loope
lcall
xlat
test
popf
popa
dec
popf
push
cmp
decl
int3
testl
fmull
dec
jae
dec
mov
mov
incl
jae
call
adc
push
cli
push
jbe
rcll
sbb
mov
mov
lcall
repnz
pop
push
sbb
std
ja
out
sub
jl
or
sub
jg
dec
mov
push
std
fisubl
dec
es
imul
cs
jmp
inc
ljmp
je
cmpsb
insb
add
insb
jb
xor
cmp
jae
pop
mov
test
jae
lcall
decl
mov
mov
subb
jle
push
push
or
dec
inc
mov
int3
addr16
adc
mov
insb
adc
lcall
call
mov
stc
mov
je
and
add
ret
lahf
lods
sbb
outsb
push
das
dec
das
xchg
mov
mov
sub
adc
ljmp
stc
lea
fsubr
out
jg
decl
cli
mov
xor
jb
push
negl
rcll
mov
ja
notb
cli
xor
pushl
out
enter
testl
xchg
cmp
mov
lcall
xchg
dec
std
mov
mov
inc
popa
push
pop
mov
jg
mov
lock
lea
dec
dec
stos
dec
push
and
enter
in
scas
je
rep
insl
mov
outsl
xchg
xchg
test
hlt
xchg
mov
imul
into
mov
call
js
movsb
or
out
fwait
xor
sbb
push
jb
adc
cmpsb
cmpsb
fbld
pop
or
jle
mov
dec
call
scas
jg
dec
ss
fdivs
add
inc
jl
fcompl
push
add
inc
mov
mov
sbbl
and
fwait
clc
mov
aam
sub
mov
jo
dec
es
ss
pop
ret
sbb
push
mov
mov
lods
pop
lea
lcall
cmp
jne
cwtl
and
xor
mov
cmp
pop
and
mov
decl
xor
jae
mov
adc
popa
xchg
js
ss
mov
shrl
or
lcall
test
aad
mov
sbb
pushf
add
in
and
aad
sti
not
lea
xchg
mov
ljmp
mov
cs
pop
loop
jno
fbstp
jecxz
adc
in
mov
pop
jl
out
das
lods
sbb
push
cmp
icebp
or
lret
adc
pop
add
mov
popa
mov
and
std
stc
pop
mov
sbb
shr
test
js
adc
repnz
push
mov
ret
xor
fnstcw
fdivl
sbb
repz
and
aam
call
cld
and
shrb
inc
outsl
adc
scas
mov
and
icebp
call
stos
push
or
std
jmp
dec
and
push
sbb
pop
fildll
sbb
cmp
cli
lahf
dec
nop
inc
dec
std
or
stos
xchg
repnz
call
mov
mov
mov
jno
mov
cmpsb
or
outsb
aad
mov
push
push
add
add
cltd
shr
stos
inc
adc
dec
mov
xchg
repz
decl
mov
sub
dec
cmp
sti
faddp
mov
sub
mov
xchg
ljmp
dec
xlat
insl
and
cmp
lock
aas
dec
gs
ret
decl
popf
jo
dec
test
mov
lret
insl
filds
ljmp
jno
dec
push
add
or
add
loope
ret
ret
cmpsl
outsb
and
adc
cld
lcall
in
or
mov
clc
aaa
jle
test
inc
mov
jmp
xchg
mov
arpl
shrb
jns
adc
push
jmp
std
jmp
lods
dec
pop
ss
cmp
sbb
cmp
jns
mov
mov
add
jecxz
lds
nop
cmp
aad
push
jge
cmp
sub
dec
push
imul
test
mov
push
movsl
fsubs
adc
or
icebp
ljmp
fcomp
cmc
xchg
add
rclb
test
ret
out
dec
ss
ljmp
cmpb
mov
add
test
dec
pop
sbb
test
dec
lret
mov
fstpl
lods
or
cli
scas
mov
pop
mov
shll
aad
incl
and
mov
jne
mov
and
aad
and
decl
pop
popf
sub
xchg
pushf
clc
jb
rcrl
ja
mov
cmp
sbb
mov
decl
adc
ja
sub
pop
lret
and
dec
sbb
jno
sbb
jno
loope
push
mov
xchg
push
cmp
and
sti
jo
mov
jnp
pop
mov
push
and
int3
iret
or
outsb
stos
bound
xor
call
cmp
jnp
lods
jns
rcrl
stos
iret
addb
cmpsl
ss
and
push
repz
call
test
les
jno
sub
imul
sub
and
mov
fmulp
mov
adc
adc
or
es
lods
push
pusha
fisttpll
scas
push
ljmp
sub
mov
ss
xchg
pop
inc
gs
mov
loope
mov
jle
xor
adc
or
jg
in
jae
push
loopne
mov
outsl
cld
call
inc
lahf
xor
setp
fcomp
or
push
jo
xchg
fwait
lret
lahf
imul
push
js
outsb
pop
dec
push
loopne
std
add
mov
add
lods
test
insl
jbe
pop
out
imul
sub
sbb
call
enter
cs
cmp
iret
movsb
mov
mov
call
sarl
dec
mov
das
je
pop
jne
popf
xchg
scas
movsl
and
dec
scas
sbb
inc
in
addr16
popa
test
aad
call
mov
mov
test
sbb
pop
inc
imul
fdivr
pushl
add
inc
ja
lcall
sbb
shll
xor
mov
lcall
add
loop
mov
add
pop
in
outsl
jp
adcb
xchg
lods
popf
cltd
and
decb
mov
push
xchg
inc
or
jbe
lcall
neg
inc
aam
pop
call
aaa
orb
pushf
insb
push
out
jecxz
mov
movsl
jne
adc
out
add
mov
jl
mov
inc
stc
mov
mov
xchg
and
movsl
cmpsb
jge
jg
sub
and
adc
decl
push
jnp
leave
and
dec
shll
movsl
testb
data16
mov
sub
mov
das
mov
xor
das
stc
push
out
push
test
jmp
cld
das
test
es
pop
mov
or
cwtl
pusha
fbstp
std
incl
xchg
jb
lret
cwtl
rcr
mov
cs
lock
cmp
jmp
jo
push
out
xor
push
into
cs
push
xor
add
mov
ljmp
sbb
mov
test
in
ficomps
inc
xchg
ss
roll
xlat
addr16
incl
ret
jg
dec
fsubrl
mov
into
loop
xor
movsl
popa
cmpsl
push
outsl
cmp
incl
nop
push
mov
jl
mov
sub
je
call
shrl
jno
hlt
stos
enter
inc
dec
pop
pop
daa
aam
test
mov
cli
ds
inc
cs
mov
adc
fiadds
aam
push
lahf
push
insl
cmp
outsb
or
and
call
jle
insb
loopne
or
movsb
xchg
cmp
scas
pop
or
lcall
shrb
mov
xor
cli
notb
mov
loope
mov
jmp
pop
jae
sub
mov
arpl
mov
fcmovbe
bound
call
mov
jbe
lahf
scas
add
sbb
add
jno
xchg
pop
sbb
push
fs
cld
jo
cmp
cmp
imul
popa
sahf
inc
mov
cld
jecxz
imul
push
mov
lcall
enter
mov
mov
cmp
inc
inc
cli
and
insb
stos
rorb
or
lcall
rol
lret
gs
dec
stos
fldcw
push
jg
in
sub
mov
xchg
mov
negb
les
mov
ljmp
outsb
inc
fsub
xchg
cmpsl
mov
mov
sarl
jle,pt
xchg
pop
fdivl
sub
ja
mov
xchg
scas
push
push
sbb
dec
rcll
call
std
xchg
add
loope
lcall
fbstp
loope
shrl
mov
dec
insb
adc
les
xchg
xchg
xor
xchg
scas
sahf
nop
xor
mov
loopne
lods
repnz
out
fistl
sbb
mov
inc
int
rorb
aas
lock
push
mov
jle
shll
scas
pushl
add
lea
outsb
daa
push
addr16
addr16
imul
fimuls
mov
adc
dec
cmc
mov
int3
fldcw
push
push
push
clc
incl
push
dec
mov
or
add
xor
xor
std
decl
inc
mov
pop
out
clc
mov
cli
mov
jg
fstpl
das
inc
in
mov
stc
insb
xor
xchg
xchg
adc
cmp
fldcw
ljmp
xchg
dec
fs
adc
lds
mov
mov
or
inc
jmp
arpl
cmp
mov
adc
lock
sub
ret
aaa
ucomiss
mov
jb
inc
outsl
inc
cmp
inc
popa
xchg
cs
inc
popf
leave
cmpl
mov
push
nop
xchg
in
fwait
pushl
add
lahf
fsts
adc
fcoml
and
lahf
mov
dec
pop
jb
jg
add
les
sbb
shll
stos
data16
insl
cmp
ror
fnstenv
jle
dec
mov
pushl
rcrl
pushf
sti
xor
mov
dec
andb
xchg
or
push
adc
jmp
mov
pop
stos
pop
cmpsl
nop
into
jae
in
fdivr
int
pop
pushl
xchg
stos
xchg
es
push
ret
cld
sub
gs
into
xor
nop
push
incl
icebp
jns
sub
lret
xchg
push
push
dec
rclb
aaa
sub
sar
call
pop
mov
pop
mov
inc
insl
mov
cmp
adc
cmp
stc
pusha
and
call
jne
pop
sbb
mov
das
ja
movsb
test
ret
jmp
fisubs
sbb
pusha
inc
imul
mov
repz
add
mov
hlt
ficompl
out
mov
mov
fcomip
std
ds
adc
loop
arpl
mov
push
subb
dec
pusha
push
rorl
push
cmp
inc
cld
fcompl
xorl
jg
sbb
addr16
loop
mov
adc
or
pushf
ret
sbb
add
mov
iret
xor
sbb
or
lods
imul
jae
cmpsb
fwait
insl
lret
lcall
or
push
cmp
mov
lods
jb
inc
sub
xchg
addr16
pusha
xchg
mov
lcall
sub
sbb
xchg
das
adc
mov
jle
cli
jecxz
cmp
jnp
push
sub
ljmp
incb
adc
mov
and
test
pop
mov
cmp
inc
and
clc
push
add
push
hlt
iret
push
fidivrs
pop
or
stc
in
rcll
les
int
aad
cmpsl
cmp
scas
rcrb
int
outsb
repnz
jmp
mov
shr
popa
mov
sub
cmp
pushf
adc
out
cld
mov
movsb
pop
push
sub
out
testb
mov
aam
sbb
js
mov
pusha
loope
mov
xchg
mov
std
aas
inc
fdivrl
dec
loopne
xor
les
or
sbb
and
adc
mov
xchg
jo
lcall
jb
cmc
pop
mov
cmp
out
out
xchg
jne
sti
dec
adc
and
rcrl
mov
lahf
mov
push
inc
and
test
sbb
pop
pop
dec
scas
and
mov
nop
xor
sbb
lods
cmp
push
inc
xor
shl
fwait
ljmp
mov
cmp
icebp
fsubs
xchg
dec
movsl
dec
mov
xor
sub
fbld
pop
dec
xor
xchg
mov
insl
and
add
add
xchg
adc
lock
lds
aas
clc
mov
decl
insb
in
mov
insl
mov
mov
in
sub
add
cmc
addr16
lcall
sbb
lret
lods
mov
aas
daa
mov
arpl
push
fcom
sbb
mov
mov
testb
or
or
push
repnz
test
mulb
lods
jnp
std
lock
shlb
fisttps
mov
cmp
xchg
in
pop
xchg
sbb
mov
jmp
jne
xchg
pop
fsts
std
xlat
jbe
cltd
outsb
aas
iret
pusha
popa
pop
popf
popf
lock
pop
cld
incl
fucomip
fld
inc
fbstp
repz
mov
mov
pop
xor
jg
sub
or
jmp
cwtl
add
decl
push
stos
dec
push
rcr
pop
mov
popf
daa
lahf
push
fsubr
adc
fs
lcall
sarb
lock
stos
inc
leave
inc
sbb
mov
adc
cli
add
inc
sbb
stc
in
pop
pop
test
std
mov
test
mov
add
fsubl
mov
call
daa
insl
fs
lods
mov
sbb
movsl
lds
out
notb
cld
ljmp
cmp
ljmp
sahf
sub
scas
jo
mov
cli
lcall
add
sub
xor
dec
cmc
fdivrl
mov
lcall
incl
pushf
imul
inc
or
cmp
xlat
pop
cmp
aam
xor
decl
dec
cmp
ficomps
fwait
mov
push
cmp
xor
inc
mov
inc
icebp
mov
adc
insl
sbb
adc
ljmp
push
dec
sbb
push
divl
in
dec
push
insl
sbb
and
std
push
popf
add
push
ljmp
inc
jl
inc
out
shlb
ret
les
mov
xchg
xchg
jp
xchg
push
mov
cwtl
xlat
lock
sbb
cmc
aaa
js
mov
sbb
xor
ficoms
adc
and
cmpsb
cmpl
in
call
jle
fcmove
dec
lret
std
in
mov
movsb
push
or
adc
add
push
push
xchg
clc
call
and
mov
mov
mov
or
ss
ljmp
out
iret
out
addr16
inc
pop
xor
jb
adc
adc
adc
jae
xchg
push
decb
or
sbb
xchg
and
loopne
call
cmp
in
hlt
fstpl
cmp
int
js
sbb
movsl
out
push
pop
xor
movl
or
shrb
ds
aad
int
cmc
xor
and
inc
push
addr16
mov
cmp
jmp
mov
outsl
ret
sub
ljmp
arpl
cli
in
mov
inc
rol
xor
mov
and
outsb
out
and
xlat
add
jg
push
sbb
add
in
xchg
pop
shlb
mov
iret
repz
dec
mov
ljmp
and
into
push
lea
das
aas
loopne
jg
xor
dec
and
out
clc
dec
fsubl
int
in
sar
push
test
aam
jg
jns
xor
negl
fistps
ss
lock
lds
mov
loop
test
sub
xlat
mov
fbld
dec
jo
ljmp
pop
outsb
psllq
sub
subb
ret
mov
sti
dec
add
rol
addl
or
xor
xor
mov
sub
das
fadds
adc
mov
xchg
sbb
or
daa
add
imul
movsb
out
call
push
push
cmp
and
pop
or
test
xchg
cli
imul
jg
aaa
cmp
sbb
lret
lcall
sbb
and
decl
pop
xchg
dec
lods
fbstp
rcll
mov
leave
popf
hlt
jle
mov
sub
outsl
clc
incl
jl
nop
std
sbb
insl
scas
inc
popa
cmp
je
cmpsl
iret
stc
scas
fwait
mov
aam
dec
fsubr
push
xor
cmc
outsb
dec
push
add
xor
xchg
mov
aas
fs
arpl
mov
xchg
out
or
ret
xchg
mov
jb
and
mov
loop
inc
js
js
inc
push
faddl
cmp
insb
mov
add
mov
xorl
cmpsl
out
mov
imul
jmp
push
icebp
xor
jb
mov
jl
pushl
orl
xchg
fsubp
mov
fldcw
jb
xchg
mov
push
jg
ljmp
pop
insb
arpl
xor
lds
lods
add
fsubs
jno
aas
push
pop
out
ljmp
cmp
sbb
inc
cltd
imul
push
movsb
lcall
inc
aaa
inc
push
pop
scas
idivb
mov
mov
fs
sarb
fdivrl
shr
ljmp
decl
sbb
xlat
push
ret
jae
adcl
pop
xchg
mov
sahf
push
jo
rol
fisttps
inc
mov
out
and
jno
or
ds
jg
sar
test
pusha
test
or
or
sub
push
dec
or
call
jecxz
pop
xlat
or
or
push
adc
sbb
dec
fwait
into
pushf
adc
push
stc
or
cmc
pushl
nop
mov
or
jnp
xchg
rcrl
or
int
mov
rolb
add
inc
repz
cmpsl
cmp
sti
dec
in
pop
push
xor
in
fimuls
popf
ret
loop
scas
clc
pop
mov
jmp
dec
xchg
xor
and
sahf
jne
inc
push
xchg
flds
out
aaa
or
xchg
push
xor
xchg
in
lock
insb
add
cli
ljmp
lock
incl
lods
sbb
add
xor
in
add
enter
cmp
dec
dec
dec
or
jmp
in
cmpsb
mov
rcrb
add
lcall
push
add
cmp
cld
dec
shl
ja
or
sbb
loopne
inc
mov
jb
mov
js
cmc
popa
lods
jbe
push
dec
outsl
lret
daa
je
sub
call
sub
cltd
insl
pop
sbb
mov
inc
dec
push
dec
sbb
and
or
mov
out
sti
ljmp
popf
pop
cmp
jmp
stos
call
movsb
and
stc
sub
in
call
adc
cmp
into
out
and
adc
fs
pushf
stc
lea
cs
fldt
movsb
popf
jmp
inc
sbb
sbb
xchg
mov
daa
stos
in
cmp
bound
mov
decl
mov
stc
movsb
push
or
cmp
jle
ret
cmp
inc
popf
jmp
xchg
test
outsl
mov
push
sbb
into
mov
add
jno
loope
push
and
inc
push
repnz
insb
sub
or
jb
out
push
pop
cmp
xchg
into
adc
jecxz
inc
mov
in
jecxz
and
cmp
pop
jo
push
cli
or
mov
jmp
dec
and
sti
data16
cmp
and
mov
push
sub
rolb
outsl
leave
hlt
xchg
pushf
lret
int3
add
fcomip
shll
lahf
cs
or
outsl
jnp
cmp
push
sub
sub
push
adc
jge
decl
push
lock
popa
cmp
fcoms
ljmp
pushl
pop
mov
pop
or
dec
cmp
inc
in
test
cmp
xor
scas
push
ds
xchg
pushl
sub
and
int
pushf
lahf
ja
arpl
mov
das
das
jns
gs
pop
pop
loopne
incl
lock
pop
sub
jp
add
inc
jae
sbbl
cmp
movsb
or
movsb
xor
pop
in
cmp
xor
xchg
or
loop
jo
add
jmp
lea
adc
and
aam
add
push
mov
lcall
sbbb
imul
scas
sub
adc
or
adc
inc
sbb
cmpsl
lcall
aas
aam
aaa
lret
xchg
stos
sub
sbb
sub
movsb
and
call
mov
jl
test
outsb
js
xchg
mov
decl
pop
sub
add
repnz
fisubrs
mov
pop
sub
mov
icebp
mov
aaa
loop
jnp
and
sar
xlat
jmp
cld
sti
adc
jno
movsb
imul
sbb
sbbl
mov
pushl
decl
fistl
movsl
sbb
scas
int3
pop
push
push
lods
mov
pop
std
pushl
lods
insl
sub
testb
cltd
stos
mov
loop
jno
clc
sbb
out
cmp
ljmp
mov
test
js
jne
add
out
movsb
xchg
push
dec
fnstenv
rol
fwait
dec
call
shll
xor
adc
pop
in
clc
call
xchg
lahf
mov
aad
xchg
insb
xchg
in
lods
adc
je
lret
pushl
pop
and
test
mov
int
loope
mov
ret
push
das
push
cmpsb
in
mov
ljmp
sub
jecxz
xchg
or
dec
jecxz
lret
mov
jp
dec
leave
movsl
out
je
or
sarl
mov
jmp
adc
stc
dec
outsb
stos
in
int
mov
xchg
lcall
ljmp
in
xchg
imul
and
mov
add
sub
movsb
pop
call
aaa
xchg
divb
or
mov
adc
ret
loope
pusha
or
rcl
and
fmulp
sbb
out
sbb
out
mov
idiv
mov
sar
or
iret
loop
cli
mov
lcall
jae
inc
adc
jno
incl
adc
lods
mov
mov
mov
xor
xor
loope
iret
dec
lock
push
or
mov
add
lcall
jno
pop
insl
aaa
pop
mov
pop
cmp
and
cmpsl
mov
push
leave
stos
sub
jmp
cmp
outsb
fstps
cwtl
outsl
ret
jae
mov
push
cli
push
or
inc
dec
jns
jno
mov
pop
mov
mov
mov
lods
jmp
incl
insb
jge
fsubs
lods
adc
mov
sbb
jmp
jb
in
out
call
loopne
dec
mov
sub
outsl
sbb
add
push
cs
xchg
jge
ljmp
cmp
sub
test
fs
je
cs
js
xlat
push
add
xor
adc
xchg
fdivp
aaa
aas
sbb
xor
push
dec
js
cmp
clc
and
xchg
sarb
into
mov
jge
push
add
imul
lcall
mov
dec
call
imulb
pop
faddl
cmpb
stc
dec
push
adc
in
jbe
shll
iret
inc
and
or
add
cli
and
pop
out
rclb
ret
push
addr16
xchg
sub
adc
mov
mov
pop
fcomip
sti
add
cmp
jno
xchg
lock
push
test
push
sar
adc
sbb
fcomip
jmp
adc
scas
cmp
cmp
stc
mov
lahf
sti
inc
cld
call
xchg
adc
inc
js
lret
lcall
daa
aaa
lods
jg
push
aas
stos
rcll
mov
imul
decl
in
inc
rclb
cmp
rolb
xchg
push
and
stc
dec
cld
int3
or
loopne
mov
xchg
push
aaa
push
mov
fld
cli
mov
pop
icebp
sbb
outsl
sub
or
std
icebp
dec
jmp
mov
sbb
adc
jge
mov
shrb
call
pop
adc
or
mov
add
mov
loop
sbb
mov
call
push
arpl
sti
jbe
adcb
xor
idivl
lods
loop
test
outsl
clc
incl
mov
xor
pop
pop
in
repz
jle
jmp
push
mov
aas
push
lds
insb
pop
pusha
mov
push
in
cwtl
pop
xor
add
jg
lods
adcb
sbb
jle
decb
mov
xchg
inc
ljmp
aam
call
lret
adc
cmpxchg
cmpsl
mov
pop
fldl
mov
add
push
adc
dec
sub
cli
les
daa
fwait
cmc
sub
jne
mov
aam
loopne
mov
or
stos
xchg
inc
adc
lds
repz
sti
xchg
es
push
testb
pop
aaa
aaa
xchg
or
insl
xlat
dec
dec
add
ljmp
push
inc
in
xchg
inc
ret
pushf
adc
xor
jmp
nopl
in
in
push
adcl
pop
ficomps
call
mov
decl
shrb
les
jmp
je
fbstp
lcall
es
fcomip
pushl
lods
pop
aam
fstpt
cmp
imul
sar
lods
mov
mov
addb
subps
xlat
int3
sub
push
xor
testl
cs
jmp
mov
or
mov
popa
cs
subl
in
js
sub
pop
jns
jmp
pusha
inc
pop
out
mov
fmull
leave
test
dec
pop
mov
mov
addb
cmp
ljmp
rcll
adc
xor
fisubl
sar
push
sahf
sbb
lcall
jno
nop
push
mov
xchg
int3
and
out
adc
sub
jmp
cmp
xor
or
sbb
lds
repz
cld
cld
mov
mov
mov
add
jle
mov
mov
je
sub
insl
cmp
dec
push
pop
out
mov
cmpsb
dec
fiadds
fnstsw
ja
lods
test
fdiv
fdivrp
ljmp
clc
adc
xor
push
xchg
mov
std
push
jp
mov
xchg
mov
pushl
pushf
mov
rcrb
loope
add
pop
cmp
pushl
stos
dec
ds
pop
push
out
test
xchg
mov
push
popa
lods
jmp
jle
repz
int3
mov
lcall
jb
pop
xchg
cmp
in
mov
mov
sub
flds
add
lcall
sub
shl
fmuls
lret
or
aad
xor
push
lds
sbb
pop
aam
jg
add
cltd
movsl
fwait
stc
fcoml
sbb
aas
sub
es
pushl
sub
insl
rol
add
dec
xor
scas
int3
fs
jl
and
mov
js
xchg
adc
pop
scas
stos
aas
xor
cwtl
adcb
inc
mov
push
dec
pop
in
fists
test
rcrl
test
xchg
adc
popa
mov
cmp
sarl
add
sbb
jp
fldt
jnp
mov
js
lea
xchg
pusha
daa
xor
lcall
movsl
sub
push
insl
xchg
push
cmp
scas
lahf
aad
mov
push
aas
ljmp
mov
mov
nop
outsb
test
push
in
clc
stc
sbb
imul
bound
incl
mov
decl
js
pop
ljmp
jg
mov
les
ret
out
jo
add
push
fisttpll
mov
xor
jmp
push
push
xor
insb
mov
repnz
ljmp
out
mov
testl
jmp
cmpsb
jle
testb
loopne
jg
scas
lret
add
dec
jmp
ficomps
rolb
pop
sahf
mov
add
sbb
fstpl
jl
push
mov
popa
sbb
call
jge
cmpsb
push
xor
push
sub
mov
aad
les
jns
mov
jmp
pop
mov
stos
mov
sub
sbbl
lods
and
cmp
cmp
fwait
jg
lds
insb
lcall
inc
push
pushf
leave
fidivrl
movsb
xchg
fsubl
outsb
xor
jbe,pt
pop
pslld
xchg
sarb
pop
dec
adc
sahf
xchg
dec
jp
adc
decl
push
test
sbb
jge
adc
mov
jo
pusha
add
push
outsb
sub
incl
adc
loope
dec
mov
mov
adc
and
mov
inc
xchg
push
call
dec
and
sbb
add
call
scas
arpl
mov
pop
or
mov
adc
aad
push
sti
pop
mov
pop
jecxz
in
inc
cs
cwtl
es
or
xchg
stos
nop
inc
insl
lds
mov
inc
cmc
inc
ds
es
imul
lret
sub
je
jae
or
fiaddl
mov
cmpsb
in
in
lea
loopne
lcall
aas
js
pop
aam
je
add
cwtl
jecxz
lock
sub
mov
je
inc
call
mov
xor
sub
cmp
nop
scas
pop
subb
mov
push
jg
movsb
sbb
pop
popa
mov
push
out
add
mov
inc
xchg
imul
or
cwtl
dec
mov
xor
mov
pop
out
repnz
es
sbb
push
in
out
cli
fwait
jmp
xor
inc
and
cmp
daa
loope
mov
lcall
addb
int
mov
in
mov
add
push
fisubrl
or
fldl
aad
ljmp
and
std
jno
add
lcall
inc
and
inc
adc
adc
cmp
outsl
pushl
dec
pop
sub
cs
insl
out
pop
sub
mov
add
js
pop
xor
decl
jecxz
sbb
sarl
ret
jbe
out
cmp
in
insl
sahf
into
add
call
mov
or
loopne
outsb
mov
jae
es
add
dec
jge
cld
decl
int3
mov
and
sbb
loop
push
stos
sub
mov
aaa
push
ss
fstl
ror
cmp
gs
vmovaps
add
mov
mov
arpl
push
rorl
cmc
sbb
mov
call
or
push
cmp
jg
imul
fisttps
paddusw
pop
pushl
mulb
mov
mov
and
rorb
dec
cmp
jnp
jg
cmp
lcall
xchg
mov
xor
aam
push
xchg
jl
or
pushl
fcoms
mov
rcll
and
mov
scas
push
jg
cli
xchg
adc
jge
repnz
mov
fmuls
mov
decl
push
cmpsb
into
cs
mov
sarb
and
outsl
xor
lcall
pushf
lods
hlt
adc
scas
xor
mov
dec
fs
lret
in
sub
and
dec
and
pushl
sarb
adc
add
xor
pop
push
push
cmp
xchg
fcomip
call
jnp
or
in
jle
push
int3
push
sub
inc
mov
inc
je
xor
ja
jns
and
outsl
dec
xchg
lcall
dec
sti
fdivr
ljmp
in
pop
pop
test
scas
push
fs
dec
and
or
cmc
push
dec
mov
dec
inc
sbb
out
xor
test
neg
imul
hlt
mov
aam
sarb
inc
mulb
incl
mov
xchg
ljmp
xchg
add
xchg
sbb
ljmp
leave
aam
inc
fdiv
ss
ljmp
jl
mov
jle
cmp
jg
dec
gs
push
adc
xor
jge
fildll
in
out
sbb
incl
cmp
lock
xor
xchg
ljmp
cmp
lret
jmp
pop
xchg
jb
mov
outsl
xchg
shrb
jo
nop
jmp
call
mov
sti
int
push
add
xor
push
xchg
cmp
jnp
mov
lds
push
mov
mov
jle
es
bound
and
and
incl
lcall
jmp
push
fdivr
clc
and
pushl
ljmp
into
clc
imul
fwait
ss
sub
sub
sbb
jle
fucomi
sub
fwait
mov
push
dec
pop
add
adc
mov
inc
movsl
cli
ljmp
movsl
sub
xchg
inc
dec
pop
inc
push
push
cmpsl
adc
sub
ja
scas
jb
cmpsb
or
push
jb
mov
cmpsl
loop
cmp
sbb
xchg
jle
hlt
imul
movsl
mov
dec
jmp
cmpsb
ffreep
pop
sub
incl
pushf
add
push
sti
xor
pop
ljmp
nop
sbb
inc
ljmp
jg
pop
leave
add
mov
insl
aas
jno
and
mov
pop
push
jae
sbb
and
adc
cmc
aad
aad
lret
es
call
cmp
pop
test
shll
outsl
cmp
or
sbb
pushl
clc
enter
addl
ss
mov
mov
adcb
dec
in
jne
add
mov
addr16
jecxz
adc
pop
sahf
std
movsl
pop
sbb
jae
cs
int
sahf
ret
in
pop
mov
and
sbb
sub
mov
mov
push
jg
jp
divl
add
inc
daa
and
je
push
push
movsl
xor
dec
pop
xor
mov
dec
jb
lea
dec
adc
mov
mov
ljmp
adc
sub
adc
in
push
jg
mov
ljmp
cld
js
pop
push
jno
imul
stos
jno
adc
jmp
cltd
mov
cmp
ljmp
rcr
in
loopne
mov
aas
call
jecxz
scas
cltd
xchg
add
call
sarb
es
in
add
popf
fstps
into
push
jno
pop
adc
pop
addb
clc
inc
aaa
pop
gs
outsl
push
outsb
push
lret
xchg
add
andb
mov
and
lods
cmp
arpl
mov
jnp
jno
es
sub
es
mov
pushl
dec
pop
mov
jecxz
inc
ja
andl
adc
mov
ljmp
mov
fildl
in
jg
lcall
mov
adc
cmc
adc
or
and
cmpsl
test
and
mov
incl
push
stc
dec
loope
xlat
mov
out
xor
clc
mov
inc
jg
pop
cmp
sar
call
xlat
inc
dec
pop
ja
add
stc
cwtl
mov
pop
cmpsb
js
mov
pop
add
rorb
jne
jg
push
js
cmp
outsl
cmc
loopne
push
jp
stos
inc
cltd
push
xor
jbe
cwtl
vshufps
inc
inc
adc
int3
adc
jecxz
test
adc
mov
mov
arpl
aas
ret
xor
das
clc
inc
add
stc
xchg
lcall
loopne
ret
pop
cmp
ljmp
sub
xchg
pop
jmp
into
xchg
and
pop
inc
push
das
cmpsb
movsl
jb
fisttpll
jl
sub
movsb
cmp
pushl
push
pcmpgtd
cmp
cmp
inc
jmp
fiaddl
mov
lcall
push
mov
jl
arpl
xor
stos
testl
test
jp
test
add
and
pop
mov
lcall
loop
inc
dec
scas
adc
pushl
pop
enter
dec
int3
fmuls
and
in
js
cltd
call
inc
nop
sbb
ss
ljmp
dec
pop
cltd
or
xlat
sbb
sbb
shrb
es
call
shrl
outsb
clc
lcall
std
or
inc
mov
or
pop
cli
mov
call
ljmp
dec
mov
ret
int3
idivl
mov
cwtl
js
sub
mov
jbe
push
lea
aas
or
push
std
inc
out
leave
inc
aaa
or
jmp
jmp
xor
xchg
nop
das
jns
mov
jns
imul
push
or
cmpsl
jmp
or
cmp
xchg
out
loope
pop
int
pusha
sbb
add
fcmove
shlb
xor
xor
in
fadds
jg
loopne
mov
inc
lods
xchg
lock
lcall
jge
shl
dec
aaa
rcrb
fadd
test
cwtl
aad
and
dec
push
mov
jae
pop
rcrl
xor
out
dec
xor
int3
and
jle
aam
out
fdivrp
lcall
inc
add
outsl
scas
repz
imul
clc
rorl
addr16
outsl
cli
iret
xor
xor
xchg
mov
lds
adc
mov
cs
sub
mov
hlt
stos
cwtl
cltd
mov
adc
sti
bound
idivb
jmp
test
mov
xchg
adc
mov
call
test
in
idivl
sub
fwait
cmc
pushaw
aaa
lods
add
xor
sar
ljmp
cli
cmpsl
addr16
add
pusha
push
inc
mov
out
aaa
insb
adc
sub
in
pop
loop
lods
sub
add
sub
lret
loop
cmp
and
ja
decl
andl
sbb
sbb
scas
das
pop
loope
call
cmpsl
push
sahf
movsl
mov
cmc
cs
lret
mov
cmp
mov
sbb
cmp
dec
popf
inc
dec
push
mov
cmpsb
ja
ret
pushl
fsub
sub
mov
lock
repz
cmpl
jmp
gs
cli
or
movsl
scas
mov
mov
inc
or
jg
lcall
sbb
bound
out
or
dec
movb
test
out
fs
cltd
mov
pop
sbb
outsl
pop
cld
call
xor
pusha
xor
insb
xchg
sahf
popa
sub
insb
inc
push
scas
in
mov
fisubrs
leave
jmp
scas
inc
or
inc
dec
out
push
pop
pop
addr16
testb
idiv
ljmp
aas
mov
inc
aaa
scas
jg,pt
rol
and
cmpsb
lods
addr16
lret
loopne
sub
lcall
xchg
xchg
pop
ds
push
and
cmp
repnz
cmp
jmp
mov
arpl
aaa
or
fwait
adc
xor
je
repnz
jo
mov
ljmp
ljmp
aaa
jp
jnp
gs
dec
jae
mov
cli
pushl
or
and
sub
outsb
ror
fsubl
sbb
ljmp
cli
xchg
dec
stos
ljmp
stos
and
sub
mov
decl
pop
add
call
rclb
mov
pop
add
mov
incl
lret
ljmp
out
sbb
fimull
mov
jns
fdivrs
inc
cmpsl
insb
mov
pop
fsts
popa
or
ljmp
adc
mov
sti
add
arpl
sti
in
mov
int3
jnp
push
push
sbb
and
outsb
mov
sbb
dec
cmp
int
pushf
pop
sti
mov
push
call
in
jmp
cmc
roll
ja
pushf
sub
mov
push
sbb
ljmp
xchg
lret
mov
mov
sub
pop
or
imul
subb
xchg
mov
nop
pop
call
mov
mov
scas
int3
sbb
repz
in
adcl
xchg
jge
aam
jmp
loope
mov
cmp
daa
and
lcall
jb
dec
test
rcll
lcall
ret
mov
test
repz
push
rcrb
movsl
and
push
test
lods
mov
fidivrs
cmpsl
inc
cld
fucomi
jg
in
xchg
push
lret
sar
call
in
enter
mov
cltd
stc
nop
sbb
and
xchg
test
mov
loope
cs
ret
leave
pop
jecxz
push
mov
push
xchg
rcll
dec
scas
and
loop
das
mov
incl
ja
jl
jne
jecxz
mov
out
vandnps
lret
mov
mov
mov
lahf
add
in
xor
xor
push
mov
call
jnp
arpl
aaa
pop
stos
pusha
sbb
pop
dec
sbb
out
ljmp
cmp
ljmp
scas
adc
mov
push
pop
jne
subl
add
xchg
pop
leave
cld
pushl
jns
mov
xlat
test
mov
or
add
lock
call
cmp
loop
shrl
and
pop
sub
lret
mov
ror
decl
sbb
cld
sahf
inc
mov
push
mov
das
aam
jecxz
and
loope
pushl
lock
lods
fs
mov
jbe
bound
aaa
sti
and
fisttps
pushl
add
push
or
pushl
add
or
jns
dec
loope
imul
loop
push
popf
push
lea
cmp
add
sub
and
mov
out
scas
clc
out
jecxz
xchg
decb
cmp
mov
out
push
fldl
push
pushf
mov
mov
sbb
in
cmp
xchg
jge
aad
aaa
push
stos
fs
nop
mov
test
or
adc
adcb
sbb
scas
cli
inc
bound
mov
mov
sub
push
lcall
xchg
xchg
pop
sub
sbb
out
cli
xchg
je
mov
jae
jle
fwait
adc
imulb
sub
pop
ds
pop
pop
xchg
idiv
xchg
inc
shlb
adc
sar
std
lcall
cmp
push
mov
cli
sub
jae
pop
out
jg
push
pop
int3
xor
adc
scas
subb
push
bswap
dec
mov
fnstcw
cmp
push
subb
inc
mov
inc
dec
fcmovu
daa
xor
dec
jno
push
dec
jmp
xchg
std
push
data16
sub
mov
mulb
sbb
les
dec
out
scas
jmp
sbbb
gs
fdivrl
pop
xchg
xchg
pushf
push
movsb
insb
fisttpl
leave
add
sbb
jnp
decl
pusha
jmp
out
sbb
pushf
movl
into
stc
sub
push
pushf
pop
lods
fwait
xchg
decl
lock
sarl
dec
ds
loopne
add
insl
rcrl
jg
in
cmp
jecxz
ftst
jnp
inc
fcmovnu
mov
jmp
mov
jg
push
pop
divl
pop
pop
icebp
jb
subb
int3
outsb
pop
jp
test
cmpsb
jg
hlt
pushl
mov
xchg
sub
or
xlat
sub
jae
jmp
mov
icebp
in
mov
and
nop
fldenv
xor
add
scas
leave
leave
mov
xchg
sbb
out
pop
insl
cmp
in
dec
dec
pop
lcall
adc
test
into
subb
lods
mov
mov
dec
decl
mov
dec
xor
mov
popf
mov
cli
loope
cmpsl
add
aas
jmp
sub
repz
loopne
pop
loop
dec
push
inc
cwtl
inc
cmpsb
xor
out
dec
jno
repz
inc
sbb
pop
sub
cmp
ss
adc
subl
pop
mov
mov
imul
aam
lcall
dec
adc
push
xor
adc
in
mov
int3
add
sbb
xchg
addb
es
adc
lcall
ret
cmp
mov
insl
sbb
cmp
jb
loope
out
clc
lcall
pop
mov
fwait
or
and
mov
lcall
call
loop
out
mov
push
into
mov
repz
push
xchg
iret
xor
aas
sar
decl
or
push
scas
adc
sub
xchg
insb
add
cmpsl
int
cmp
sar
mov
inc
and
jne
jmp
mov
jecxz
cmpb
mov
movsl
cmpb
inc
adcb
cmp
aaa
fcomip
cwtl
lcall
repnz
leave
cli
call
in
pop
test
decl
movsl
rorl
push
or
cld
mov
testb
mov
xor
out
clc
fists
lahf
loop
js
cli
push
inc
stos
add
cmp
adc
cli
sub
ret
jmp
stos
and
in
hlt
push
sbb
sbb
fnstenvs
sub
push
mov
hlt
pop
lods
scas
mov
mov
jmp
or
cmp
fadds
leave
sub
mov
icebp
add
insb
mov
inc
jg
jae
mov
sti
scas
int
jno
sbb
stc
jle
pop
mov
pop
stc
scas
aad
stos
push
jg
mov
outsl
and
ljmp
incl
push
add
adc
bound
test
hlt
shlb
lcall
push
nop
sahf
incl
pop
js
rol
out
adc
jecxz
shrl
xchg
lock
loopne
cmc
xchg
fcos
jg
push
outsl
arpl
push
js
mov
xchg
and
test
and
cltd
int3
cltd
xchg
neg
sahf
mov
mov
xor
add
add
push
xor
pop
dec
jg
fmull
push
call
mov
sbb
test
push
loope
das
sbb
outsl
mov
call
push
push
dec
pop
outsb
adc
imul
repnz
jno
mov
leave
sarb
cmp
fcomip
mov
lock
les
and
xlat
filds
sub
sub
inc
imul
stos
call
mov
pop
lock
pushl
jno
pop
icebp
jecxz
fcomi
insb
sbb
rol
pop
mov
icebp
les
mov
das
xor
cmp
ja
clc
in
imul
or
jo
mov
xor
decl
inc
icebp
jg
push
rol
fiadds
aas
push
jle
adc
adc
jecxz
popf
jmp
lcall
out
popa
push
jnp
lods
in
pop
mov
ss
nop
xchg
xor
aad
fmul
in
adc
js
lods
xchg
push
repz
icebp
cld
lods
loop
adc
sbb
or
or
inc
ret
decl
mov
dec
iret
mov
xchg
in
add
inc
dec
or
fiadds
xchg
lret
call
data16
aad
inc
mov
bound
cmp
out
sub
or
loopne
add
push
rorl
dec
mov
jne
xchg
cmp
stos
add
cmp
cmp
imul
mov
cmp
lods
icebp
incl
pop
fnstenv
cmp
or
add
push
cmpsb
mov
out
out
ss
cwtl
push
nop
xchg
aad
idivl
lret
and
out
loope
into
jnp
inc
jns
lcall
into
push
mov
test
loopne
cmpsl
shl
jbe
mov
incl
xchg
xor
pop
mov
sub
fwait
loop
dec
mov
push
cmp
call
testb
push
cmpsb
pop
popa
cld
lret
jnp
ss
sbb
sbb
mov
ret
sub
in
jns
into
jg
sub
out
jbe
dec
jne
pop
sbb
decl
incl
jo
pop
fwait
cmp
sub
test
repz
cld
fs
inc
mov
lock
decl
sub
dec
push
jne
cltd
cmp
lds
pushf
dec
out
std
jecxz
aam
js
cmp
lcall
testl
inc
stos
xchg
pop
push
and
lcall
sub
adc
call
dec
add
fidivs
jle
cmpb
jne
xor
in
stc
xchg
ljmp
and
xchg
mov
daa
inc
int3
roll
dec
pop
iret
je
lcall
repz
and
outsb
mov
or
aaa
mov
dec
sbb
in
clc
xor
lods
mov
mov
pop
mov
test
mov
lcall
mov
pop
sar
rolb
adc
arpl
loop
cmc
fs
stos
cmp
dec
sti
outsl
hlt
sahf
outsl
mov
dec
push
xor
movsl
addl
jle
pop
dec
popa
cmpb
jecxz
icebp
ljmp
inc
pop
jmp
lret
jg
and
aaa
out
addr16
ljmp
ljmp
jmp
dec
or
les
and
push
xchg
mov
mov
les
in
lcall
or
scas
mov
gs
jmp
lret
adc
jmp
rolb
xor
das
ficoml
dec
mov
imul
cltd
cmpb
ljmp
pop
cmpsl
xor
xchg
and
stos
out
shll
sub
lcall
xor
dec
xor
insl
xchg
sub
aas
sub
adc
ljmp
sahf
pusha
out
call
inc
int
and
stos
dec
shll
pop
mov
cmp
call
roll
mov
mov
inc
sar
das
mov
adcb
cmp
cltd
and
add
mov
lret
sbb
call
dec
orb
jecxz
pop
adc
lods
mov
enter
cmpsl
lcall
jle
inc
lret
shrb
jb
jne
stos
mov
loopne
inc
repnz
jmp
movsb
pop
nop
ljmp
mov
sub
inc
jge
call
and
ret
int
out
xchg
cli
and
fiaddl
jmp
xchg
icebp
out
mov
mov
and
sbb
clc
std
cmc
outsl
or
mov
mov
int3
loop
outsl
lret
sub
add
mov
sbb
sub
jmp
popf
xchg
daa
shl
lret
xchg
push
push
push
cli
shrl
mov
addb
stc
rorb
inc
jne
pop
iret
inc
cmpsl
sub
push
lcall
or
and
stc
mov
jle
pusha
push
cs
call
sbb
mov
orl
mov
sbb
test
lods
pop
jp
shl
ja
lret
jmp
cmpps
push
push
jns
inc
cltd
lret
add
mov
and
rclb
fidivs
lahf
xchg
data16
js
xchg
pop
or
aas
push
mov
daa
sbb
push
xor
adc
and
in
dec
ret
fs
jmp
xor
sbb
addl
xchg
ja
fildl
cltd
bound
pushf
jg
xchg
jle
xchg
lahf
aam
xor
xacquire
cmpsb
rorb
xchg
xchg
outsb
mov
xchg
push
icebp
push
xchg
push
ret
mov
or
stc
addr16
std
decl
add
sub
jbe
outsl
std
js
loope
ret
mov
stos
xor
mov
shl
add
dec
xchg
je
cmp
in
mov
mov
mov
aaa
fisttpl
jmp
add
in
push
scas
lods
dec
mov
xor
out
out
arpl
enter
sti
in
stos
pop
insl
inc
lea
xchg
pop
outsl
mov
push
and
xchg
loop
push
test
and
stc
and
cmpsb
and
add
call
enter
outsl
or
push
and
add
mov
adc
inc
xlat
mov
out
ss
push
arpl
bound
cmp
mov
or
lock
push
xchg
xor
inc
pop
sbb
xchg
aad
dec
dec
lret
loopne
push
shl
jno
cmpsb
push
cltd
sahf
in
inc
lock
decl
push
call
mov
insl
arpl
pop
subl
aad
cmp
pop
and
jg
cmp
pop
mov
adc
or
jge
mov
push
daa
outsl
sar
fcomip
xor
pop
hlt
adc
mov
sub
pusha
mov
std
cmp
outsl
sub
jge
sbb
cmpsb
xor
cld
fistl
frstor
in
lods
adc
decl
xor
xor
pop
sub
push
mov
pop
push
add
pop
mov
cli
pop
adc
lds
stos
fdivl
outsl
mov
incl
jne
jg
repz
sbb
iret
mov
or
mov
je
dec
mov
add
out
cli
call
scas
xchg
inc
sbb
sbb
jp
xchg
mull
and
mov
cld
ljmp
mov
sub
mov
inc
mov
call
jg
jns
mov
inc
mov
xor
pop
lret
aam
scas
js
mov
adc
sbb
cmp
std
imul
stos
andb
fs
jmp
popf
out
push
mov
xchg
clc
jb
xor
pushf
inc
adc
pop
jmp
ljmp
popa
fstl
add
inc
cmp
pusha
ss
xor
incl
out
testl
out
les
or
decl
jmp
dec
or
or
fdivp
jecxz
cli
sub
push
sbb
aam
mov
test
xor
outsl
aam
dec
mov
xchg
hlt
cmp
push
std
call
push
es
push
inc
mov
fwait
cld
pop
es
data16
jg
and
loop
outsl
and
cld
jno
fstl
jl
cmpsl
mov
or
or
fwait
repz
es
retw
incl
push
sub
into
mov
repz
jg
adc
scas
pop
sbb
inc
fidivl
inc
xor
cltd
mov
inc
cli
and
in
push
mov
pop
jne
ljmp
inc
out
mov
adc
imul
pop
inc
jb
icebp
pop
lock
jmp
dec
lahf
cwtl
stos
out
adc
mov
dec
test
jmp
jmp
nop
cmp
dec
xor
cmp
push
icebp
mov
lock
mov
inc
fdivp
jmp
adc
push
enter
rcr
adc
pop
addr16
cmp
mov
leave
test
mov
sarb
in
push
push
bound
jae
dec
add
cmc
decl
jnp
int3
adcl
pop
testl
adc
call
leave
cltd
aaa
add
out
ja
sbb
lods
test
mov
or
ds
jnp
cmpsb
ljmp
cli
pop
in
mov
jp
shll
mov
mov
ja
jmp
cmp
sub
icebp
bound
or
insl
daa
jbe
and
jg
je
pop
cmpl
mov
add
push
mov
xchg
mov
push
cwtl
inc
repnz
pop
mov
decl
jo
pop
enter
loop
mov
fcmovb
mov
pop
cmp
mov
jmp
js
dec
mov
je
xchg
jg
stos
decl
adc
cmpsb
lcall
shrb
stos
xchg
mov
add
or
mov
fstpl
insl
std
fxch
inc
repz
push
bound
pop
fnstcw
cmpsl
push
push
dec
inc
mov
jle
fsts
and
incl
js
stos
pop
fimull
in
ret
mov
mov
cmp
push
aas
sti
add
push
iret
mov
mov
lcall
stc
fs
mov
dec
xor
ror
xchg
popa
mov
cmpsl
add
roll
or
inc
add
mov
fcmovnu
jp
mov
adc
or
pushl
sbb
xchg
pop
insb
and
jo
cs
push
mov
nop
mov
xlat
out
mov
std
lcall
mov
sbb
add
fcmovnbe
pop
mov
push
insl
mov
pushl
inc
fstpl
popa
dec
cs
int3
or
push
cmpsl
mov
out
lret
pop
loopne
pop
cmpl
iret
jg
xor
add
leave
xchg
push
jo
jg
ss
xchg
jecxz
mov
inc
xor
stos
addl
push
decl
dec
pop
push
mov
aam
mov
ljmp
aas
push
jne
fldcw
out
push
scas
fdivrl
movsl
mov
jnp
and
loopne
popf
test
xor
call
push
stos
jae,pt
pop
mov
and
add
cmp
push
xlat
popl
ljmp
push
cmpsb
pop
pop
mov
push
push
pop
daa
lea
in
loopne
stc
movsb
push
add
repz
inc
jnp
dec
push
std
decl
mov
mov
mov
cwtl
ds
xchg
jle
xor
decl
push
in
decb
enter
add
mov
xchg
or
jg
das
xchg
insb
in
jmp
ljmp
pop
mov
mov
jae
mov
out
cmp
fistpll
ja
adc
jnp
or
push
inc
xchg
outsb
data16
jns
adc
call
lcall
or
shll
push
mov
jecxz
mov
fcomip
pop
mov
adc
push
fdivs
xlat
mul
testb
cli
mov
ljmp
pop
dec
and
mov
repz
movsl
cwtl
fimuls
ss
cli
sbb
sub
mov
jo
jecxz
jmp
push
pop
repz
cmp
fisubrl
test
push
stos
jmp
dec
ljmp
movsb
and
hlt
fbld
push
out
es
dec
es
leave
push
ret
std
mov
fcomip
pushl
jp
test
dec
std
loope
int
cltd
fcompl
sbb
push
mov
decl
mov
adc
test
push
or
dec
mov
xchg
jnp
mov
and
jle
faddl
repz
into
stos
push
and
rep
jp
in
sbb
mov
bound
incl
xor
sub
jb
adc
mov
popa
lret
pop
popa
leave
cld
sub
push
shlb
mov
aaa
out
sub
add
mulb
icebp
push
addr16
nop
loope
outsl
lods
or
sub
incl
xchg
add
xchg
es
cli
mov
jg
sbb
sbb
inc
cmpsl
rorb
inc
and
fs
test
ret
cmc
shl
loope
xchg
call
loopne
inc
fdiv
imul
shr
push
pop
sahf
in
leave
adc
pop
cs
pop
rcrb
enter
jns
orb
ljmp
sarl
out
push
mov
mov
mov
adc
sbb
jbe
jmp
add
js
dec
ljmp
jno
fisttpll
mov
adc
jne
fdivr
cli
call
sub
adc
push
lret
aad
pop
lret
dec
sub
push
aam
ljmp
inc
mov
aaa
stc
and
aaa
jnp
mov
sub
shlb
mov
clc
call
adc
out
pop
push
movsb
mov
sahf
jno
call
sbbb
incl
ljmp
push
xor
repz
icebp
scas
push
xchg
inc
mov
enter
out
lds
aaa
xchg
inc
mov
cmp
inc
adc
test
or
push
js
inc
int
push
lds
cmc
or
aaa
mov
loope
idiv
inc
ja
cmpsb
cmp
cmp
hlt
dec
in
fisubrl
in
pushf
fiaddl
jge
mov
stc
pop
mov
xor
mov
pop
cmp
icebp
data16
add
pop
ret
mov
add
pop
rorl
fiaddl
cli
ljmp
std
mov
and
dec
push
dec
clc
int
adc
cmc
xchg
arpl
nop
cmpsb
ss
mov
dec
cmp
mov
pop
jge
aas
aad
jmp
pushl
xchg
ljmp
fdivl
cwtl
inc
cmpsb
sub
leave
fbld
pop
hlt
aaa
std
lods
mov
fidivrl
scas
ljmp
xchg
and
jmp
stc
lods
stos
push
xchg
mulb
xor
in
je
sub
add
movsl
jbe
out
inc
in
les
popa
adc
jle
arpl
xchg
mov
stos
out
push
push
jo
decl
outsl
ljmp
xchg
add
jbe
scas
mov
pusha
cltd
pop
sub
or
decl
mov
push
mov
fwait
ss
cmp
xchg
jae
pop
cli
mov
xor
jmp
add
shll
dec
lret
dec
pop
mov
push
outsl
xchg
mov
mov
scas
jp
out
into
dec
or
mov
dec
sbb
push
aam
ret
ds
jns
dec
dec
ljmp
clc
call
sbb
shrl
adc
push
or
dec
dec
dec
dec
popa
enter
jge
push
sub
aas
jns
xlat
mov
sbb
loop
sub
adc
aam
cmpsb
iret
jmp
adc
pop
push
push
ss
pushf
sahf
pop
push
mov
mov
add
and
arpl
add
cmp
xchg
sbb
ret
sbb
fnstenv
adc
loope
hlt
sbb
scas
iret
add
dec
mov
shrl
xchg
xor
ljmp
mov
inc
xor
test
xchg
sub
ret
jbe
int
xor
test
loop
mov
or
lock
ljmp
daa
add
call
adc
cmp
pop
cmp
sbb
subb
pop
fcompl
cmp
aaa
gs
mov
incl
xor
push
adc
xor
insb
clc
inc
testb
insl
mulb
test
stos
adc
gs
mov
adc
pushl
dec
bsr
sbb
push
and
adc
hlt
push
mov
and
mov
test
cmpsb
adcb
decl
std
enter
mov
jg
sbb
ljmp
insl
sub
icebp
fwait
sbb
jmp
pushf
mov
ljmp
or
movsb
xchg
or
rcr
xchg
jo
pusha
or
decl
xor
loop
inc
bound
scas
or
jg
mov
sbb
push
pop
sub
jmp
loopne
lret
sub
fwait
xchg
jb
out
test
out
pop
sub
push
pop
add
in
push
mov
stos
jnp
cmp
shlb
std
jmp
or
xor
mov
sub
jl
fcmovne
cmc
xchg
xor
xchg
incl
cmp
popf
cmp
loopne
mov
rorb
lds
cmp
jmp
std
sub
sub
rcr
into
jno
mov
js
in
clc
ljmp
add
or
fwait
lcall
pop
out
into
and
inc
insb
lods
out
push
ljmp
movsb
ret
lods
xchg
pusha
arpl
mov
imul
mov
pushl
mov
jno
cmp
inc
incb
mov
mov
pop
add
jg
xchg
pushf
mov
push
cltd
pushf
mov
jne
shl
shll
mov
clc
dec
pop
cmp
lcall
add
jle
xchg
and
mov
nop
jp
sub
call
lcall
dec
scas
shll
mov
ret
in
pop
popa
push
lods
add
add
test
dec
and
lret
arpl
push
mov
adc
push
mov
mov
jne
loopne
loope
push
xor
push
xor
int3
dec
aad
xchg
call
add
cmp
mov
push
jb
add
jecxz
test
push
or
sub
hlt
call
sahf
sbb
sub
bound
es
in
xor
fs
mov
lcall
add
sbb
cmpsl
cmpsl
stos
movsl
fbstp
push
or
dec
push
mov
push
aas
popa
ret
pushl
mov
lea
xchg
imul
ds
mov
push
mull
push
push
pop
xchg
adc
pushl
enter
cmp
mov
inc
rcrb
and
xor
xchg
add
hlt
jno
xchg
lds
jp
push
jo
std
sbb
push
lods
jmp
mov
insl
scas
add
adc
orl
and
mov
decl
pop
sbb
mov
out
sub
add
jb
dec
push
test
xchg
dec
push
ret
push
in
mov
fistpll
aas
push
inc
mov
stc
das
je
jge
jno
push
mov
clc
push
jg
out
lcall
sub
pop
and
jmp
fcmovne
pusha
in
dec
sub
jo
lods
test
insb
adc
loope
sub
jmp
jmp
leave
movsl
push
shlb
and
popf
lcall
push
mov
jmp
nop
jns
roll
hlt
adc
sub
jno
das
mov
xor
incl
xchg
mov
push
push
push
xchg
and
or
or
mov
xchg
outsb
pop
out
and
nop
outsl
es
cli
pop
xchg
jg
xchg
ret
xor
fmull
daa
mov
xchg
xor
mov
bound
inc
ljmp
jns
cli
push
clc
mov
sub
cmp
pushl
popa
jno
pop
cmp
pushf
xor
pop
adc
adc
ss
adc
outsb
mov
addb
incl
cmp
mov
lea
rcrb
popa
cli
dec
pushf
imul
cld
les
fisttps
jb
gs
aaa
dec
jecxz
bound
lcall
xor
pop
adc
nop
mov
ljmp
ret
add
aaa
inc
push
movsl
aaa
mov
push
adc
mov
cltd
pop
jp
rcrb
lret
insl
sbb
ljmp
cli
push
imul
adcl
mov
loope
fpatan
add
aam
adc
pushl
inc
mov
cwtl
and
cmp
in
test
in
lcall
ja
fidivl
inc
xor
leave
rep
repz
mov
aas
sbb
and
mov
jp
stos
test
jge
cmp
aas
sbb
pop
ljmp
test
sub
dec
and
insl
dec
sbb
sbb
mov
iret
loope
pusha
ret
and
mov
xchg
cmp
jnp
fisubrl
xchg
sbb
out
test
mov
loop
or
loopne
hlt
dec
and
ds
test
pop
dec
ficoml
cli
stc
adc
push
and
decl
lods
add
rcll
into
jnp
shl
outsb
shrb
lret
loopne
icebp
lret
pop
scas
sbb
fcomip
pushl
jne
sub
sbb
outsb
jo
in
lea
addl
pop
out
add
cmpsb
push
and
jbe
push
xchg
out
iret
std
inc
int3
dec
xor
pushf
fwait
dec
cmp
fldcw
inc
cmp
sub
insb
mov
sub
ds
daa
mov
test
cltd
insb
mov
jp
pop
pop
pop
hlt
incl
outsl
loop
mov
data16
fiaddl
fsubl
incl
jmp
sarb
xchg
sahf
pusha
sbb
mov
xor
jno
fs
xchg
jmp
cmpb
xchg
out
cmp
mov
pushf
lcall
push
add
and
out
jl
cmp
pop
das
push
pop
mov
mov
push
pop
mov
into
pusha
popl
and
mov
test
out
xor
pop
sbb
cmp
mov
aam
lea
sbb
outsl
xor
inc
mov
jle
mov
fs
out
xor
lds
loop
mov
orb
insb
testl
jp
call
fldenv
gs
loopne
xchg
hlt
dec
cmc
pop
ret
dec
andb
mov
pushl
cmc
cmpsb
aas
mov
repnz
fisttpll
push
jecxz
sub
dec
imull
lcall
call
into
adcb
sbb
ds
imul
fldenv
decl
dec
inc
shl
ficoml
and
outsb
mov
popa
cs
repz
ljmp
sub
sbb
pop
lahf
inc
repz
sub
test
ss
push
lock
push
pushl
mov
out
seto
ds
pop
pop
adc
or
dec
adc
cmc
loopne
sti
lret
xor
fistpl
mov
fmulp
jmp
lcall
test
fs
movsl
stos
push
sub
mov
cmpsl
mov
call
addr16
sti
aam
pop
inc
imul
inc
adc
adc
fcmovu
ds
jle
movsb
mov
mov
jmp
enter
gs
jle
or
int3
loope
cltd
xchg
mov
jg
cmp
out
stos
adc
call
adc
push
ret
out
mov
pop
cmpsl
decb
stos
fdivs
rep
jmp
add
adc
and
adc
das
popa
jne
xor
push
add
dec
cmpsb
jb
or
pop
inc
fisttps
xchg
cmp
addr16
ljmp
add
jnp,pt
enter
inc
loop
inc
pop
addr16
inc
add
mov
ret
shrb
mov
sbb
in
es
jmp
stos
add
cli
jg
ficomps
push
outsb
mov
stc
jb
jecxz
scas
les
call
xor
or
cmpb
sbb
mov
jmp
out
pushw
lcall
lods
movsb
btr
lahf
clc
xchg
cmp
cld
in
decl
in
fcmovnbe
ss
mov
in
jmp
sbb
xor
jg
incl
dec
fs
cmp
cmp
push
cmp
movl
hlt
ss
stos
mov
lcall
int3
call
inc
dec
imul
out
lods
scas
push
int
push
lahf
cwtl
pop
mov
or
dec
pop
repz
dec
or
sti
mov
mov
mov
mov
fidivrs
xchg
js
add
arpl
ljmp
enter
push
cltd
jbe
dec
es
mov
call
ret
sbb
mov
and
xor
sbb
xorl
imul
or
xchg
sarb
addr16
sub
mov
pop
jns
test
lret
xchg
sarb
enter
inc
mov
incl
push
pop
flds
imul
xlat
jmp
mov
rclb
nop
pop
sbb
aad
inc
out
in
jg
js
or
test
add
xchg
ss
daa
mov
or
ss
ljmp
call
push
pop
int3
xor
inc
imul
das
mov
mov
cwtl
shl
xor
pushl
push
aad
cmp
dec
xchg
in
inc
dec
icebp
cmpsl
lahf
jmp
mov
adc
xor
rorb
ja
jae
pop
mov
and
lcall
test
pop
add
xchg
lret
cmp
xor
stos
push
inc
add
pop
data16
jl
cmp
sahf
or
jae
in
mov
dec
inc
stc
cwtl
cmp
popf
aaa
fcmovnb
ret
sbb
data16
imul
lds
hlt
add
mov
test
jg
or
and
xor
shrb
decl
sub
push
sbb
das
gs
xor
mov
mov
call
ljmp
push
jnp
and
lret
sub
mov
ljmp
sar
jge
pop
add
mov
ss
je
shl
xor
jmp
mov
sbb
push
rcll
loope
mov
bnd
add
mov
sub
xor
jmp
sub
pushf
andl
pop
sub
es
push
dec
les
imul
int
incl
adc
sbb
ficoml
mov
inc
lret
outsl
clc
call
push
pusha
fwait
ret
popl
ret
addl
dec
cwtl
xchg
pop
ret
incl
inc
ds
stos
push
dec
decl
push
cmpsl
jle
out
cld
mov
testb
lcall
jae
fs
adc
sub
mov
ds
in
xlat
adc
decl
mov
mov
or
cmpsl
pop
out
stos
ror
jp
or
lcall
and
pusha
adc
popa
or
mov
outsl
adc
xlat
xlat
add
mov
mov
pop
ret
lcall
dec
shll
jns
mov
in
adc
popa
or
loope
push
cwtl
pushl
sub
sbb
rcrb
lcall
or
ss
xchg
mov
clc
gs
add
mov
mov
xor
and
test
lret
addr16
xchg
call
mov
cmc
movsb
insl
xor
in
cmc
xchg
mov
mov
dec
inc
int3
pop
movsl
jl
jno
fsubr
dec
inc
push
testl
adc
stos
jno
rclb
imul
loope
scas
lcall
shll
dec
clc
icebp
sbb
add
lea
lods
enter
fwait
repz
dec
loopne
into
sarb
lock
repz
je
popa
mov
lret
xorl
mov
inc
in
stc
in
jb
xchg
mov
add
push
xor
loop
test
pop
cmc
lea
mov
stos
add
js
ss
sub
pop
add
push
push
dec
icebp
xchg
and
cmp
loop
mov
lcall
dec
lcall
add
mov
cmc
scas
insl
inc
mov
outsb
push
sahf
jecxz
out
rorb
int
adc
cld
popf
push
bound
push
fsubs
mov
add
mov
call
lcall
out
lods
and
cmp
xchg
out
std
enter
jmp
push
mov
cli
and
jecxz
jmp
xchg
shll
xor
jmp
dec
dec
sub
mov
mov
jae
or
inc
clc
imul
sub
jg
mov
jnp
pop
test
jno
scas
movsb
mov
shlb
push
incl
loope
fnsave
in
adc
scas
fdiv
cmp
sub
sbb
fwait
and
inc
insb
call
decl
outsl
aam
cmpsb
or
pop
enter
adc
push
push
aam
lret
pop
push
adcl
fistpl
push
sbb
mov
ds
mov
push
addr16
ljmp
inc
mov
add
mov
adc
jl
pop
addr16
xchg
xor
sbb
pop
pop
jg
lcall
and
and
add
out
loopne
in
leave
gs
mov
outsl
outsb
pop
call
ja
into
rcrl
inc
inc
cmc
sbb
mov
sub
aas
insl
test
xor
jmp
gs
fisubl
aam
xchg
push
stos
and
adc
bound
dec
ds
fcomip
call
mov
jae
xchg
pop
pushf
add
mov
lret
into
sbb
ljmp
cmpsl
mov
sbb
xor
push
sub
ja
ja
mov
aam
xchg
cld
call
outsl
hlt
mov
pop
clc
xchg
pop
xor
cmc
cld
mov
mov
ljmp
jno
std
repnz
jne
imul
mov
sahf
mull
pop
out
or
sahf
sbb
adc
imul
pop
pop
jae
insl
cmpsb
push
mov
incl
lret
call
in
out
jmp
mov
cwtl
lods
push
ficompl
mov
pushf
jno
jmp
movsl
enter
sub
xor
xor
inc
loop
lahf
pusha
and
fwait
fistpll
cmp
scas
aad
or
out
cltd
pushf
dec
arpl
das
inc
push
insl
incl
inc
xchg
xchg
sub
mov
dec
inc
nop
xchg
pop
pop
and
jg
cs
cmp
mov
hlt
ret
mov
fistpll
shrb
cmpsl
rolb
lret
jmp
mov
out
xor
push
fists
mov
fs
jle
call
push
push
sbb
dec
jmp
sbb
add
dec
jle
cmpsb
jp
push
mov
cwtl
mov
cld
outsl
xor
mov
dec
inc
repnz
out
sbb
jecxz
ss
fcomip
aas
add
mov
decb
dec
mov
xlat
sub
cmp
push
cmp
mov
jp
and
push
fisttps
js
fidivrl
arpl
inc
mov
stos
mov
sar
call
sbb
or
leave
xor
sbb
scas
mov
mov
popf
ud0
pushl
jl
inc
fs
test
inc
das
sbb
rcll
das
sbb
add
jl
les
and
ljmp
cmc
push
scas
lcall
dec
sub
and
cmpb
add
pushl
clc
outsb
cmpsl
ficoms
sub
test
in
mov
ds
adc
xor
lcall
fcmovnu
orb
xchg
cltd
xor
cmp
dec
cmp
dec
add
dec
mov
insb
sub
xor
xchg
loopne
fsub
mov
adc
les
xor
mov
lret
imul
lock
pusha
faddl
push
ljmp
jb
pushf
je
or
sub
enter
push
xchg
xchg
mov
fimull
and
cld
sbb
arpl
or
je
jecxz
xchg
dec
mov
lcall
jae
pop
pop
cmp
push
sbb
es
fldenv
push
mov
and
dec
jmp
pop
jns
jmp
cwtl
mov
repz
aaa
in
xchg
ss
hlt
negl
jae
stc
jp
out
sub
dec
mov
dec
rorb
pushf
push
xor
add
aas
sub
and
dec
or
cs
cli
ret
and
dec
or
and
push
sarb
inc
or
mov
push
xor
jno
lret
testl
inc
dec
jae
je
repnz
imul
mov
jne
jo
imul
xor
ss
add
adc
push
inc
push
or
and
add
add
adc
scas
dec
cmpsb
cmpsb
hlt
fwait
sub
and
add
daa
sbb
out
imul
push
dec
gs
std
in
fucomi
push
outsl
outsl
insb
push
push
outsb
popa
jo
push
mov
mov
dec
jne
sbb
fisubrl
movsl
mov
loopne
and
aaa
cmp
mov
mov
cmp
and
jae
push
jne
js
arpl
inc
adc
lea
inc
jp
popa
and
fnstsw
push
inc
jns
jp
sbb
push
and
sbb
cmp
push
adc
adc
dec
ljmp
pop
jecxz
push
popa
test
and
dec
mov
into
inc
call
xchg
jo
or
pushf
push
or
add
popf
mov
inc
jl
loopne
pcmpgtd
sub
imul
insb
stos
ds
inc
movsb
sub
sub
out
xor
ja
mov
flds
sub
inc
sub
jae
adc
sub
out
or
inc
sub
sbb
sbb
mov
cmp
sbb
lds
inc
insb
jne
fadds
jne
xchg
mov
push
pop
mov
mov
outsl
sbb
jo
inc
push
fildl
filds
outsb
sbb
push
mov
mov
in
fadd
add
subl
fiaddl
into
pusha
clc
movsl
arpl
push
jns
mov
fiaddl
out
faddl
xchg
adc
jbe
js
xor
push
hlt
fs
mov
jecxz
std
mov
notl
dec
cmp
sbb
or
sbb
insb
shll
fldcw
mov
push
inc
or
dec
jle
dec
push
pop
pop
adc
sub
mov
popa
shrl
pop
xchg
mov
cs
adc
shlb
adcl
mov
leave
xchg
test
and
fldl
push
sub
mov
inc
mov
jecxz
push
mov
sub
adc
pop
or
outsl
data16
test
shlb
lret
mov
mov
popa
and
out
and
fwait
das
ljmp
jno
pushf
inc
or
pop
dec
inc
dec
repz
sbb
adc
or
pop
out
add
sbb
adc
jb
lahf
mov
repz
xchg
scas
dec
mov
lods
xor
js
sbb
mov
ret
stos
pop
push
adcb
and
rcrl
cmp
and
inc
popa
xchg
jnp
jo
jp
popa
insb
test
push
push
jg
and
mov
sbb
add
xorl
cmp
aam
pop
xchg
or
pop
test
or
dec
push
adc
and
jmp
jmp
insl
aaa
add
stos
mov
outsl
jns
inc
je
fisubs
adc
push
inc
inc
out
mov
and
sti
sub
mov
sbb
adc
or
rcr
xchg
jno
insl
cmp
cmp
sub
push
es
mov
add
xor
and
outsl
xor
loope
xchg
stos
loope
adc
cmp
push
xchg
out
and
or
add
ret
aaa
cmp
ljmp
mov
and
pushf
scas
ret
add
jne
inc
fmuls
inc
adcl
xor
jecxz
mov
xor
test
orl
cs
add
sbb
jnp
arpl
inc
inc
dec
outsl
movsb
xchg
and
xor
or
imul
inc
cmp
lea
enter
outsl
add
add
inc
cmp
inc
arpl
fisttpl
sub
or
inc
rcl
cmp
jnp
test
dec
gs
jne
lods
int3
or
cmpsb
push
adc
sbb
std
movsb
jp
adcb
ds
pop
adc
pop
mov
gs
adc
sarl
sub
movsl
inc
sbb
sub
and
dec
xchg
sbb
in
adc
fiadds
in
shl
mov
push
addr16
mov
test
sub
ret
in
mov
out
dec
mov
int3
outsb
lds
lds
push
mov
xchg
je
and
push
outsl
jbe
jb
test
pop
test
lahf
nop
nop
inc
jmp
out
jo
inc
inc
int
push
arpl
rorl
inc
imul
mov
pop
mov
xlat
idivb
insb
push
inc
push
out
outsb
inc
insb
jle
jge
mov
stos
fs
lcall
inc
jae
jno
pop
in
jl
aad
adc
sbb
pop
add
insl
adc
test
pop
js
inc
xor
call
xor
sbb
dec
pusha
pushf
int3
mov
mov
or
xchg
out
lret
pushf
jge
movsb
xor
push
pop
xor
and
pop
shlb
loop
mov
outsb
inc
push
push
adc
js
cmp
pop
xor
pop
cmp
cld
pop
xchg
jnp
or
dec
outsb
dec
push
sub
xchg
subb
xor
jnp
sar
pop
add
add
mov
mov
imul
movsb
lcall
sub
paddsw
xchg
mov
cmpsb
xor
adc
loope
repz
outsl
mov
adc
jo
rolb
lea
jl
outsl
bound
dec
movsb
bound
or
inc
out
inc
jb
push
std
or
jae
adc
leave
inc
shll
ss
jo
js
add
push
repz
insb
push
popl
cwtl
sbb
mov
in
js
rclb
aaa
push
or
xchg
les
and
or
fs
repnz
add
sti
pop
push
add
sbbb
lods
and
push
inc
mov
push
mov
mulb
and
or
loope
adc
push
popa
inc
mov
adc
push
inc
fildll
xchg
push
rolb
inc
mov
xor
movsb
xor
or
std
or
out
pusha
mov
xchg
pusha
mov
ret
or
and
cmpsb
aaa
in
mov
mov
std
rorb
gs
xchg
dec
push
xchg
lock
xchg
jge
aaa
ret
and
dec
xor
xor
int3
mov
paddsb
ret
or
and
mov
dec
sub
sbb
rclb
mov
loope
sbb
cmp
jo
outsb
push
push
adc
add
insb
ret
pop
push
sub
push
lcall
and
or
repnz
fcomp
mov
insl
fs
dec
mov
xchg
arpl
jg
jo
rclb
adc
mov
cmp
addb
inc
fisubl
sub
adcl
aaa
aam
lds
mov
xchg
mov
cs
jbe
cmp
icebp
icebp
test
lods
jg
outsb
push
cmp
jmp
lea
sbb
lods
adc
addb
test
cmp
pop
aad
xor
aad
lods
psrlq
lods
loop
in
data16
fs
cmp
xor
sbb
ja
push
xchg
push
popa
ficomps
je
lods
pop
fildl
lahf
outsb
test
aaa
enter
add
xchg
js
and
sbb
mov
fsubs
test
sarb
push
push
inc
out
adc
mov
lea
xchg
push
sarb
dec
push
adc
aad
jae
iret
push
inc
mov
jne
fsub
or
mov
pop
lcall
jae
pop
lret
push
sti
negl
fwait
xchg
sbb
and
inc
shrb
xchg
inc
rclb
inc
addb
xchg
lock
shlb
sub
or
mov
je
cmpsb
add
aaa
add
loopne
in
shrb
pop
add
divb
add
or
imul
adcb
mov
push
add
or
test
fdivl
add
cmp
pop
dec
push
ret
mov
dec
in
rol
add
and
mov
jb
popa
adc
pop
out
dec
in
push
shlb
loopne
and
push
roll
clc
push
cmp
rcrb
jo
ss
dec
stos
and
lahf
xchg
jle
ret
mov
dec
add
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
and
inc
add
insl
inc
add
add
