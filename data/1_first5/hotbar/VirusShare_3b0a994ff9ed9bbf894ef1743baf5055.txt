divb
in
mov
mov
add
push
call
int3
das
int
in
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
out
divl
jne
mov
or
call
xchg
push
pop
aas
in
adc
and
movl
dec
in
mov
movzwl
lea
jne
sbb
xor
jmp
and
neg
sbb
and
pop
pop
mov
das
js
and
call
push
push
rcll
mov
mov
jp,pt
add
fistps
pop
push
push
push
push
xor
mov
push
mov
scas
and
sti
add
jmp
test
jne
pushf
or
push
jle
repz
adc
push
xchg
mov
add
iret
xchg
push
sbb
out
mov
jne
inc
sub
ret
mov
jmp
pushl
ja
cmp
jecxz
ret
lea
or
lock
dec
test
jg
add
pop
xor
sub
push
add
outsb
xchg
add
test
ret
pop
inc
push
adc
and
std
push
fcomi
insl
roll
les
pushl
cltd
push
mov
fstpt
xor
cwtl
mov
mov
mov
call
pushl
mov
cwtl
pop
mov
or
data16
cmpl
mov
movsb
mov
lahf
add
andl
sbb
cld
push
sub
mov
hlt
cs
add
push
adc
mov
add
sub
dec
rcrb
mov
or
fsubs
or
scas
hlt
or
pop
cmpsl
lret
mov
sbb
sbb
cmpsb
cmp
lea
or
int
push
call
sub
xlat
or
pop
push
loopne
std
mov
ret
add
in
sbb
into
lahf
mov
adc
inc
loopne
push
sub
or
mov
mov
jbe
ret
ja
enter
or
xchg
adc
jl
inc
cmp
adc
cmp
push
in
popa
and
add
mov
aaa
sub
jmp
or
sbb
push
and
add
push
dec
dec
cmp
je
out
push
out
jmp
mov
xchg
push
pop
pop
fs
pop
lods
mov
aad
add
mov
push
sub
mov
pop
push
insl
sbb
add
shl
push
push
push
iret
bound
pop
sub
inc
pop
pop
ljmp
ss
xor
push
mov
cmp
or
jge
dec
add
gs
sti
mov
mov
xor
mov
xchg
jmp
arpl
rcrl
js
push
pop
imul
sar
sub
inc
sub
inc
clc
sub
enter
xorl
ss
shll
inc
jmp
fs
pop
or
sbb
adc
stos
mov
jecxz
fdivr
or
js
mov
cmp
jg
mov
adc
loopne
or
ret
shrl
push
and
pop
outsl
jmp
xchg
dec
add
sbb
dec
hlt
sub
push
mov
idiv
loope
sar
xor
cmp
ja
adc
sub
clc
add
push
push
lds
adc
scas
sbb
and
push
jo
add
stc
clc
mov
loop
lds
iret
jle
mov
cmpl
or
icebp
xchg
sub
sbb
push
inc
jle
add
pop
cltd
sub
shr
enter
mov
sarl
dec
jg
push
test
cmp
jl
cmp
jne
aaa
loopne
or
incb
add
xor
std
shlb
adc
add
add
movsb
loopne
filds
or
add
push
push
lea
sub
fld
push
xor
out
jle
mov
pop
hlt
into
mov
aam
out
rorl
cmp
cmpsl
jmp
mov
mov
cld
fsubrs
xchg
xchg
leave
mov
mov
mov
or
test
jle
cmp
mov
or
test
jne
clc
test
mov
pop
pop
lds
loope
push
push
xchg
jo
jecxz
decl
mov
jns
mov
jmp
push
mov
inc
pop
xchg
sub
aad
dec
pusha
or
loopne
es
add
xchg
andl
mov
sti
adcb
or
or
inc
cmpsb
pusha
cmp
adc
out
scas
cmp
push
sar
push
push
adc
cmp
fsubr
jle
mov
out
lock
lret
add
cmp
cmp
jae
add
lods
sub
sbb
andl
ret
add
adc
jb
pop
add
xchg
pop
cli
in
das
push
leave
ret
lea
ljmp
xor
aaa
cmp
ret
push
push
sarb
or
adc
or
ret
push
cmpsb
imul
pop
xor
lods
lods
jo
and
and
inc
sub
test
aad
aaa
stos
shl
pushf
pop
orb
pop
pop
or
cmp
pop
mov
push
mov
lea
cmp
jne
push
xchg
jp
outsb
insl
sbb
lock
push
add
adc
pusha
js
push
push
add
pop
pop
pop
sub
ret
or
cmp
xor
mov
and
sub
jo
test
test
dec
fadd
mov
fcmovnu
lods
add
push
lret
add
sbb
ja
adc
mov
nop
xchg
add
jne
mov
lret
pusha
mov
mov
or
lret
xchg
lret
divl
mov
pushf
movsb
add
les
popa
xchg
adc
stos
or
or
mov
push
or
sbb
dec
push
movl
lret
or
inc
sub
lea
dec
push
xor
push
mov
xchg
pop
in
icebp
add
imul
imul
push
add
add
filds
push
dec
lods
xchg
cmpl
popf
lea
push
add
push
outsb
scas
sbb
lret
lret
xor
cs
sbb
inc
push
stos
mov
adc
loopne
scas
cld
xor
xor
call
ss
cmp
push
popa
cmp
je
stos
xchg
out
xchg
adc
sub
lea
imul
cmc
mov
pop
mov
popf
ret
mov
xchg
jbe
into
mov
sbb
ret
ljmp
adc
into
sti
cmp
out
js
mov
aam
or
or
movsl
jl
cmp
lock
idiv
std
or
adc
jge
xor
and
add
or
inc
lock
cmp
or
mov
inc
je
outsb
mov
sbb
mov
mov
add
adc
or
push
lock
add
enter
movsb
popa
imul
push
jl
add
mov
mov
or
sub
xchg
ret
ret
out
enter
or
stos
ret
out
ljmp
adc
xor
mov
loop
sarl
lds
xchg
inc
lea
lods
pop
or
enter
mov
js
std
jae
ja
sub
je
dec
je
push
adc
or
or
inc
shll
mov
lea
push
adc
sub
loope
bound
cmp
rcll
inc
or
jge
popf
aas
add
loopne
hlt
in
push
push
mov
add
in
push
cmp
addb
mov
xchg
sbb
mov
add
incb
mul
and
jl
xor
mov
sbb
adc
or
mov
leave
ljmp
lret
pop
mov
pop
push
test
push
addr16
jge
pop
pop
aad
xchg
lods
xchg
add
insl
push
sub
out
rol
inc
rorl
or
dec
divb
sub
js
and
adc
dec
clc
xlat
cmp
fwait
add
adc
in
dec
fsubl
daa
in
or
pushl
insl
bound
call
sar
inc
pop
xlat
andb
add
or
cmpb
lea
not
sbbb
sub
dec
mov
mov
movsl
mov
je
pop
ds
pusha
das
dec
pop
fsubrp
adcl
adc
mov
jl
cmp
jmp
call
push
jo
pusha
cs
adc
aaa
pop
sbb
xchg
or
nop
add
sarb
lock
mov
js
jl
pop
adc
mov
shll
fmuls
js
xor
mov
cmp
js
or
dec
js
xchg
fimuls
movsl
cmp
xchg
addb
movsb
sub
jo
daa
xchg
and
into
or
or
mov
je
mov
or
sbb
or
add
fs
push
xor
data16
mov
pop
add
sub
aas
ret
fadds
inc
roll
jo
fsts
in
jae
in
sub
adc
adc
bound
and
cmp
xorl
das
and
lahf
jne
adc
nop
adc
push
push
mov
loop
or
mov
xor
add
outsb
mov
lea
call
aad
stos
or
xchg
xor
cmpsl
add
xchg
sbb
dec
jmp
mov
pop
clc
jl
dec
in
or
mov
push
inc
fstps
lock
jmp
xor
mov
inc
call
push
adc
cmpl
das
pop
sub
ficoml
in
xchg
add
in
sbb
dec
push
cmpsl
flds
loopne
jp
add
pusha
jp
dec
push
mov
adc
mov
into
sahf
mov
ret
jmp
repnz
je
mov
in
mov
shll
xchg
xor
add
in
test
lahf
lock
jmp
xchg
sbb
loope
adc
xchg
cmp
mov
aam
jge
xlat
pusha
push
inc
adc
pop
fsubr
out
add
push
and
clc
nop
lock
out
rcrb
jle
push
loopne
imul
mov
je
outsb
cltd
fimuls
popa
nop
push
cmpsl
sbb
mov
add
fstl
decl
and
add
add
fldt
pop
roll
jbe
inc
pop
je
in
repz
adc
push
shll
adc
mov
loope
cmp
mov
fstl
movsb
sarl
test
sbb
mov
xor
pop
push
sbb
jmp
neg
sbb
pop
les
ret
je
arpl
mov
loope
jmp
rcr
ret
mov
cmp
or
push
cwtl
or
cwtl
mov
mov
dec
repz
test
dec
call
rcll
nop
out
je
and
aaa
je
adc
or
sbbb
add
mov
mov
xchg
pop
cltd
mov
mov
push
sahf
fs
in
iret
lcall
das
adc
add
mov
push
xor
sub
aad
mov
fcoml
cmp
ficomps
out
jge
jne
outsb
out
sti
shrb
shlb
lret
adc
mov
pop
or
movsl
lcall
nop
sarb
xchg
xchg
inc
adc
sarb
xor
adc
cmp
xchg
xchg
ret
movsb
pushf
nop
and
cmp
pushf
pushf
xchg
out
out
mov
mov
add
cmp
xchg
push
repnz
pop
enter
enter
and
fadd
sbb
nop
and
rol
cltd
xchg
out
mov
sarb
adc
mov
push
hlt
xchg
mov
pusha
jb
int
sbb
inc
xor
push
dec
mov
mov
aas
add
xor
add
and
xchg
inc
pop
sbb
adc
push
push
jl
cmpsl
mov
stos
lfs
nop
xchg
jo
aaa
fcoms
fmuls
call
insb
shlb
push
rorl
dec
sub
push
push
ficoml
xchg
adc
push
push
mov
sub
push
imull
pop
push
xor
sbb
mov
mov
push
inc
cld
out
add
stc
test
loope
lock
xchg
and
fdivl
aam
lret
xlat
cld
xor
in
sbbb
call
nop
and
cwtl
and
adc
jg
loop
or
and
push
ficoml
push
jle
inc
sbb
jne
mov
daa
or
push
mov
loopne
mov
aaa
fiadds
mov
xchg
arpl
nop
test
jmp
xchg
adc
sti
popw
xchg
sti
shlb
mov
mov
pushf
sub
adc
pop
add
je
ds
dec
jae
fsubl
add
je
or
push
data16
jl
scas
jmp
lcall
jne
mov
mov
fcmovne
push
pop
sahf
push
addb
nop
enter
imul
pusha
and
decb
push
and
test
inc
or
adc
jbe
ja
das
clc
dec
or
mov
pop
sbb
mov
into
push
sbb
and
lea
cmp
dec
push
or
jecxz
dec
mov
stos
or
lret
adcl
movsb
mov
aaa
adc
mov
rcrb
icebp
aad
insb
inc
adc
lret
jl
ret
movsw
jno
shll
or
fsub
sbb
repnz
into
adc
cmc
xor
inc
adc
push
sbb
xchg
mov
pop
cmpsl
add
push
hlt
sub
mov
adc
push
adc
imul
fstl
sub
or
loop
ss
mov
fistpl
jne
dec
cmp
inc
test
push
ds
inc
push
pop
push
hlt
push
jmp
xchg
fs
popf
pop
mov
sbbl
je
mov
shlb
sahf
les
loopne
pushf
pop
nopl
sbb
sbb
sub
testl
sub
clc
add
mov
mov
xor
push
push
pushw
or
popa
or
movsb
in
inc
pop
cmp
in
xchg
adc
push
adc
and
xlat
or
add
ret
or
add
fstl
mov
jl
cmp
cmp
xor
rorb
js
and
fldt
sbb
aaa
push
push
pop
and
lock
insb
sbb
test
subb
pusha
lock
pop
mov
sub
int3
cmp
cmp
leave
dec
test
adc
jg
push
pop
mov
jne
data16
adc
xor
cmp
and
shl
and
cltd
add
test
inc
mov
and
and
pop
add
sahf
inc
and
add
xorl
pop
leave
mov
cmpsl
and
add
and
add
mulb
incb
and
jp
mov
sub
jb
and
push
es
or
js
add
fnstcw
cmp
push
add
scas
sub
pop
sub
push
ljmp
sub
push
xchg
adc
jecxz
adc
jno
xor
xchg
ret
inc
lret
ret
test
lret
xchg
push
or
jmp
je
cmp
push
stos
add
adc
and
outsl
mov
clc
push
insb
push
daa
and
mov
ss
pusha
insb
adc
mov
sbb
or
data16
stos
mov
jne
and
adc
mov
or
int
nop
out
cmp
inc
inc
sarb
ror
xchg
sbb
das
sub
cmpsl
add
pusha
mov
lock
jg
push
jg
add
rclb
call
mov
inc
in
inc
dec
push
push
push
out
push
mov
and
cmp
jo
shlb
dec
orb
fcomps
test
dec
and
test
test
sub
lret
ret
shlb
cvttps2pi
inc
mov
cmp
dec
add
cmpb
negl
cmc
pusha
or
jge
sarl
pop
leave
xor
xor
mov
call
dec
or
cmp
add
gs
ficompl
push
cmp
outsl
inc
push
lods
testl
push
inc
repnz
loopne
cmp
and
and
movsb
ret
and
xor
stc
pop
outsl
dec
dec
xchg
xor
ficoml
cmp
and
sbb
or
cmp
mov
inc
inc
or
daa
pop
or
cmp
mov
nop
addr16
and
mov
xchg
and
xor
and
or
fucom
jae
das
adc
js
or
jne
gs
xchg
pop
into
inc
inc
mov
int3
ds
movsb
sbb
js
mov
push
adc
and
fs
dec
pop
sub
jl
pop
pusha
inc
push
pushl
stos
stos
jnp
adc
and
test
and
pop
inc
fisubl
jnp
xchg
jbe
ret
push
je
ds
and
sub
into
jbe
jno
jge
adc
je
mov
fists
call
add
xchg
inc
inc
push
dec
adc
mov
cmpsl
add
cltd
call
jl
adc
jne
push
sub
call
or
push
lods
je
inc
mov
rorl
movsl
jmp
cmp
push
jl
orb
add
adc
repnz
mov
dec
sarb
jmp
mov
xchg
lock
sbb
adc
insb
stos
push
inc
das
and
popf
adc
pop
xor
xor
fwait
and
add
ret
push
pop
xchg
or
inc
repz
test
push
and
add
mov
scas
outsb
lret
shl
popf
push
pushf
lods
mov
xchg
outsl
in
cmp
shl
call
sub
or
into
out
add
sub
out
arpl
loopne
dec
ret
lcall
setne
or
in
and
mov
movl
push
fisttps
jne
or
je
sub
loopne
cld
xor
xchg
mov
inc
aaa
xchg
fcoms
mull
sub
push
sbbb
inc
faddl
dec
orl
pop
test
mov
insl
cmpsl
sbb
hlt
fsubrp
test
jne
cmp
jo
or
xchg
cmp
addl
add
loopne
std
mov
not
add
mov
repz
je
pop
mov
jp
shlb
sbb
push
or
fsub
push
out
shlb
insb
inc
out
add
inc
aad
xor
add
fstps
add
jecxz
lds
test
mov
push
jo
xor
add
xor
mov
inc
inc
cmpsl
sarb
push
mov
or
fimull
aaa
les
or
das
cmp
fisubrl
mov
or
jge
push
faddl
pop
out
call
imul
ds
test
mov
inc
mov
lock
jmp
xor
dec
dec
je
sub
jmp
bound
jge
imul
sahf
cs
fs
adc
movsb
add
xlat
pop
ror
mov
loope
rcrl
dec
popf
insb
lock
pop
nop
xor
pop
push
cmp
arpl
or
jbe
das
aam
pop
dec
cld
xchg
stos
call
rolb
or
imul
push
mov
xor
inc
mov
sarl
cmp
lods
push
jbe
inc
addb
push
push
or
mov
jle
in
bound
into
movsl
push
sbb
aaa
icebp
push
cld
push
pop
push
push
mov
xchg
ds
lahf
add
pop
sub
in
paddusb
mov
jle
pop
or
push
cmpsl
sarb
add
movsb
mov
inc
dec
sarb
pop
adc
jae
scas
dec
das
sub
xorb
sbb
call
scas
fwait
or
hlt
jge
lea
loopne,pt
call
insl
or
daa
test
subl
pop
lahf
or
add
sbb
push
mov
or
in
inc
flds
lods
add
mov
cmp
mov
call
mov
fwait
push
int3
add
or
jne
sbb
insb
mov
mov
pusha
ss
add
bound
arpl
int3
mov
push
add
jge
mov
add
or
inc
repnz
cmpsl
xchg
cmp
cwtl
movsb
ljmp
call
add
or
or
nop
dec
pop
test
push
and
or
fsubrl
rolb
test
imul
loopne
pop
cld
loopne
add
and
enter
ficomps
dec
mov
lahf
call
push
pusha
lcall
mov
sbb
xorl
or
pop
inc
arpl
into
and
xchg
movsl
mov
cmp
cli
in
mov
mov
mov
cmp
adc
mov
jp
dec
dec
xchg
in
fsubl
mov
push
mov
lret
sbb
jno
bound
sbb
and
mov
xchg
or
inc
mov
adc
cmp
sbb
shrb
sbb
ret
push
sbb
push
call
mov
adc
push
jp
je
fs
addr16
outsb
stc
add
popl
negb
call
push
inc
mov
call
jge
out
mov
inc
aaa
jbe
orb
subb
push
jo
aas
xchg
addl
pop
loopne
sbb
jge
and
in
fcoms
dec
mov
dec
xor
orb
loopne
and
fdivrp
inc
push
and
add
pop
sahf
mov
adc
add
xor
mov
rolb
mov
push
mov
les
pop
int3
insb
and
mov
rclb
sbb
inc
fcoms
clc
pop
ss
fsubl
in
mov
loopne
data16
xchg
xor
mov
fwait
inc
mov
pushl
push
js
mov
cmp
ret
shr
movzbl
push
adc
push
ret
push
push
inc
push
add
mov
sbb
sbb
insl
mov
shr
mov
popf
cmp
in
xor
add
and
or
pop
pusha
mov
pop
mov
insb
mov
mov
push
xor
add
pop
or
into
push
jb
or
mov
sbb
add
sti
jle
or
ds
aaa
xchg
inc
push
push
sbb
dec
decl
jg
mov
mov
jmp
add
pop
xchg
mov
dec
arpl
shl
mov
ljmp
adc
popa
jns
mov
mov
jae
pop
mov
ss
jae
adcl
sbb
aaa
outsb
sub
cmp
subl
adc
sbb
inc
loop
jo
xor
ret
xor
mov
mov
push
stc
add
mov
and
push
sbb
shlb
ficomps
stos
or
add
sub
jne
xor
dec
movsl
cmp
adc
lock
mov
xor
clc
cmp
cmp
cmp
jae
mov
aad
cld
inc
hlt
lea
ja
xor
pop
add
test
je
push
mov
je
add
mov
outsl
push
sub
fcomps
hlt
sub
imul
add
adcb
ret
jo
in
cmp
jg
push
push
push
jnp
shrb
stos
adc
cmpsb
mov
clc
shll
into
popa
nop
add
mov
int3
sub
xor
adc
call
lea
ljmp
daa
loopne
sbb
incb
xor
jo
fnstenv
fcmove
pop
in
mov
mov
roll
mov
mov
push
sub
inc
js
or
cli
xchg
adcb
out
inc
insl
fsubrl
cmpsb
hlt
pop
pop
outsb
pushf
xchg
je
test
js
inc
dec
hlt
aaa
cmp
fidivrl
hlt
or
je
inc
and
sub
pop
movb
push
push
inc
inc
xor
xchg
add
xor
add
inc
pusha
push
push
mov
insb
sbb
adc
mov
cmp
mov
aaa
outsb
loope
mov
fdivp
add
mov
or
cmp
jl
push
cld
testb
push
or
mov
enter
sbb
je
xor
cld
inc
aam
ret
or
fnstenv
push
pop
jbe
sub
mov
test
pop
or
xchg
bound
je
sub
mov
push
std
jns
lods
sarl
push
mov
push
and
add
or
cmp
mov
ret
je
mov
jmp
ret
mov
push
mov
pop
test
test
dec
mov
stc
sbb
or
or
out
mov
cmp
clc
pop
pop
jecxz
mov
or
mov
and
outsb
rolb
enter
mov
mov
fcomip
ss
jae
dec
mov
ficomps
ljmp
mov
jge
mov
add
movb
xchg
jle
adcl
ljmp
push
fs
imull
and
or
idivb
sub
fsub
pop
lcall
pop
mov
fs
jne
cmp
je
jbe
decb
cmp
or
and
add
lea
or
or
sbb
mov
pop
xor
push
ss
rol
or
insl
adc
test
fdivp
or
pop
pop
mov
pusha
add
scas
setne
shlb
mov
in
xor
pop
lret
ljmp
cmp
js
lcall
divb
psrad
mov
lahf
or
push
dec
pop
mov
push
mov
push
push
push
push
adc
add
and
cmp
jle
decl
or
lret
or
add
add
arpl
jl
shrl
sar
jmp
jnp
xor
orb
sahf
pushf
mov
push
cmp
sbb
pop
add
scas
mov
cld
ficoms
xor
push
add
imul
jb
stc
add
mov
mov
and
std
pop
sub
push
cmp
movb
hlt
sub
ljmp
mov
lcall
je
in
loopne
test
cs
jb
push
pop
push
incb
ret
insb
cld
cmp
lea
jbe
mov
dec
or
push
push
test
push
mov
cld
arpl
inc
test
add
add
inc
das
ds
movl
xchg
jns
dec
add
and
jmp
sbb
loop
jg
es
cmpb
add
es
inc
loopne
daa
or
xchg
inc
cmpsb
pusha
inc
jnp
jecxz
and
add
inc
push
mov
dec
mov
mov
lea
sbb
and
pop
mov
mov
cmp
add
fsts
push
xor
sbb
push
pusha
or
aaa
sbb
aas
lods
sub
loope
jo
imul
inc
fcoms
sub
add
dec
scas
xor
dec
imul
pop
sub
movsl
into
add
dec
roll
shrl
push
nop
push
push
aad
sbbb
in
jo
push
and
mov
cmpsl
dec
or
jne
call
mov
mov
subl
cmp
data16
cmp
daa
xchg
test
lret
pushf
xchg
mov
cmpsl
fnstcw
je
sub
inc
or
pop
test
inc
jl
nop
add
mov
push
jo
xchg
add
sbb
clc
adc
sarb
call
push
popa
inc
mov
inc
add
ljmpw
rol
popa
add
mov
sub
xchg
inc
mov
inc
inc
add
or
or
pop
nop
mov
add
outsl
and
mov
imul
movsl
and
fs
pop
jecxz
mov
fisubl
jmp
push
pop
jnp
imul
addb
mov
out
mov
and
xchg
hlt
jecxz
and
inc
or
fwait
jns
dec
test
add
or
in
jmp
imul
test
inc
sbb
lods
mov
pop
clc
loope
lret
cmp
andl
in
inc
stos
lock
shlb
popa
sbb
inc
leave
push
adc
sbb
and
and
rcll
dec
cwtl
adc
xchg
inc
imul
test
ror
lea
mov
add
adc
lcall
sbb
xor
mov
ret
pop
sub
sbb
pop
ret
mov
add
movsb
and
mov
pop
sub
and
sbb
shrb
adcl
push
adc
jge
gs
lea
addr16
gs
adc
imul
mov
or
and
repnz
xchg
cs
sbb
sbb
inc
cwtl
mov
ljmp
sahf
pop
insl
shll
and
xor
insb
push
cmpsb
add
pop
jmp
xchg
xor
cmp
adc
je
jl
and
stc
adc
cmp
popf
cmpl
in
or
lock
push
mov
jg
jo
push
cltd
pop
negl
mov
add
cmp
je
pop
add
push
adc
mov
lcall
popa
inc
bound
cmp
push
jbe
dec
fists
cmp
cmp
sbb
outsb
ja
dec
jmp
sub
dec
je
into
adc
mov
es
test
jb
xchg
or
das
jmp
jmp
mov
mov
mov
mull
enter
jmp
pop
jne
pushl
in
add
popa
adc
rclb
sar
call
popl
push
fsubl
or
mov
mov
fildl
sub
push
or
into
out
fildll
pop
push
mov
mov
fs
idivl
dec
jge
add
pushl
cld
ret
loopne
push
or
add
pop
mov
pushl
js
mov
inc
ret
lea
test
xor
sub
mov
shl
fistps
shr
cmp
je
cmp
xlat
shrl
sub
fs
sbb
leave
std
cld
xchg
cmpsb
adc
cli
mov
sbb
fstpl
cmp
jmp
sbb
fldcw
sbb
jmp
and
mov
xchg
sbb
mov
push
dec
xchg
push
pop
ret
cmp
out
shl
cld
dec
pop
inc
repz
repz
js
sbb
shlb
mov
pop
cmc
scas
and
pushw
and
sub
movsl
shrl
stc
insb
fstl
lea
jecxz
xor
sub
or
popa
mov
fmuls
xchg
add
fsubp
cmp
sbb
sub
imull
sbb
push
mov
bnd
lea
push
sbb
call
shll
lea
or
lret
dec
cmp
nop
mov
dec
mov
xor
cmp
ret
mov
call
or
sbb
mov
xor
add
sbb
imul
push
sbb
push
je
xchg
cmpsl
sbb
push
or
pop
push
push
add
jl
inc
xor
add
popf
push
js
stc
xchg
test
xor
ret
lods
mov
rcrb
dec
adc
dec
adc
or
push
cmp
in
add
mov
push
int3
jno
jle
ss
dec
ljmp
jp
mov
push
sub
cmp
es
insb
mov
mov
add
xorb
mov
jns
andl
add
ret
push
or
xchg
inc
add
mov
mov
je
xchg
and
lcall
adc
imul
out
call
inc
scas
mov
adcl
call
mov
add
shl
loop
xor
pop
push
xchg
pop
lea
test
insb
jno
push
mov
jne
data16
push
push
dec
pop
add
jnp
push
inc
push
cmp
cwtl
mov
cld
mov
loop
jl
sbb
or
rolb
mov
lea
inc
jl
sbb
xor
jecxz
jbe
pop
cmp
xchg
add
rol
sbb
push
xchg
pop
js
fbld
push
aam
das
in
sbb
in
dec
inc
jl
sub
jne
int3
push
sub
and
roll
aam
mov
call
dec
fildl
cmp
shr
ds
xchg
inc
add
xchg
mov
and
std
ret
rcll
sub
rclb
adc
les
in
mov
jne
push
sub
xor
or
js
mov
xor
dec
je
lea
push
loopne
add
dec
mov
lret
jo
sub
ret
or
mov
pushl
pushl
adc
xlat
push
or
adc
dec
mov
in
or
aam
or
lds
addr16
les
jge
pop
lcall
dec
lock
div
push
dec
cld
daa
icebp
xorl
cmp
lods
ret
lea
lods
sub
sub
adc
pop
sub
aaa
push
sub
in
lcall
mov
add
mov
inc
adc
dec
bound
mov
xor
jno
dec
lret
loope
push
in
add
adc
and
or
and
rcr
clc
sub
or
fisubs
sbb
fcoms
fistps
cmp
and
jo
mov
popa
adc
les
mov
lret
xor
xor
in
and
dec
dec
outsl
notl
cmp
loop
adcb
push
iret
ss
push
imul
mov
cld
pop
mov
mov
neg
sbb
and
push
push
or
cmp
sbb
cmpl
lods
mov
iret
inc
call
jge
pushl
mov
add
push
inc
and
clc
dec
or
popa
adc
jmp
sbb
mov
imul
or
pusha
push
sti
aas
xor
notb
adcb
pop
jge
les
mov
test
das
and
sar
fcomip
pop
adc
adc
adc
ja
pop
pop
es
dec
sbb
push
cs
rorb
xchg
lds
loop
mov
adc
nop
jmp
sbb
push
push
push
add
dec
sub
mov
add
cwtl
push
test
lret
inc
ljmp
sti
je
cmp
mov
jo
pushf
sbb
repz
or
xchg
mov
mov
pop
inc
lret
ja
arpl
or
test
cmp
insb
xor
clc
xor
sbb
push
jne
movb
clc
mov
cmp
jne
popf
movsl
cmpsl
adc
fldz
xor
push
mov
movb
notb
addr16
dec
aas
mov
xor
xchg
dec
ja
push
lea
fcoml
mov
sub
xor
pop
outsb
test
and
lea
or
popf
sub
mov
sbb
dec
sbb
faddl
mov
es
sbb
test
push
mov
shlb
jl
imul
push
adc
enter
xchg
and
push
cltd
add
xor
nop
sub
push
imull
rorb
or
addl
int3
ja
adc
dec
popa
mov
pop
xchg
mov
sbb
add
push
push
cmp
push
loop
push
adc
test
mov
cs
pop
push
or
dec
popf
cmpsl
rcll
nop
out
sbb
mov
dec
mov
and
jge
inc
imul
fwait
jnp
sbb
test
add
mov
lcall
inc
mov
inc
pusha
fsubrl
xchg
push
pop
mov
dec
and
mov
push
push
push
push
aaa
movsl
cmp
outsb
add
mov
stos
jl
cltd
mov
adc
add
out
ja
out
andl
mulb
add
add
fs
out
sbb
pop
into
popa
xor
cmp
in
ja,pt
pop
pop
or
lea
sbb
insb
fsubrs
jge
adc
mov
add
fmuls
xor
add
repz
or
mov
loopne
cmc
jmp
mov
adc
fs
mov
sbb
fs
xlat
push
pusha
sub
adc
jo
movsl
repnz
cmpb
xor
je
push
pop
pop
sub
or
mov
mov
push
inc
shlb
cs
sbb
mov
or
add
jmp
adc
sbb
mov
fidivrs
and
repz
in
cmp
mov
bound
dec
insl
mov
inc
xchg
sbb
xor
das
pusha
mov
pop
test
push
fsts
sbb
call
jmp
pop
push
popa
push
sbb
sub
push
jecxz
nop
or
pop
and
sbb
pop
jnp
or
out
push
movsb
insl
lea
outsl
sbb
mov
xchg
cmpb
movsb
pop
ficompl
mov
loopne
sbb
add
scas
pop
jl
mov
cltd
mov
lea
mov
cld
in
mov
or
and
into
sbb
ja
pushf
dec
ret
add
out
sti
enter
add
mov
idiv
push
mov
push
push
adc
ret
xor
idiv
xchg
push
add
push
in
cli
lret
jp
lds
add
shrb
xor
rolb
mov
imul
xchg
sbb
push
dec
inc
not
mov
aas
add
add
push
and
push
lock
and
or
out
pusha
fstpl
push
pop
aas
push
cld
fistpll
mov
sub
clc
je
jg
xorb
sbb
mov
dec
push
into
jp
xor
or
pusha
js
fistpll
popa
jg
fs
sub
jl
movl
adc
test
stos
int
dec
mov
lahf
xor
std
pop
negl
pushf
movb
sbb
sbb
xchg
dec
lea
add
mov
iret
ds
xchg
sub
cmp
or
xlat
std
scas
nop
or
out
insb
mov
cmc
mov
inc
hlt
mov
test
jns
faddl
pop
or
or
mov
fdivrp
mov
sub
rcr
lea
int3
mov
mov
hlt
mov
inc
les
movsl
shl
jmp
into
push
jbe
mov
jge
je
into
clc
fidivl
jmp
loopne
xor
push
xchg
cli
cli
sbb
mov
ret
or
out
out
pop
jne
pop
pop
movb
push
xor
xor
mov
push
inc
xchg
pop
in
hlt
lcall
rorl
daa
or
fmul
mov
lock
mov
xchg
cmp
adc
gs
xchg
push
gs
bound
fstps
or
xchg
jne
push
andb
jmp
sbb
test
mov
out
push
pop
pop
inc
movsl
and
into
pop
leave
testl
add
int3
ljmp
pop
insb
call
add
mov
push
and
cltd
add
push
pushf
inc
repnz
ret
in
push
mov
int
sbb
loope
pop
inc
mov
sub
arpl
xor
mov
inc
jne
sti
mov
adc
mov
pop
test
jmp
xchg
lea
punpckhdq
leave
fs
leave
xor
jnp
pop
xor
sbbb
sub
mov
lea
hlt
ret
std
or
sbb
inc
mov
push
push
pop
in
lea
adc
mov
fnstsw
xor
mov
dec
or
dec
or
add
fisubrl
loopne
insl
or
adc
mov
imul
andl
push
setp
sbb
mov
mov
add
add
mov
les
mov
sbb
popa
add
mov
mov
add
sbb
leave
add
push
sbb
lahf
sub
jbe
shlb
mov
mov
push
pop
cmp
sbb
add
stc
pusha
dec
sbb
push
push
and
dec
and
inc
cli
cwtl
push
nop
lret
and
cmp
roll
aaa
sbb
cmpb
inc
and
mov
adc
xor
and
mov
mov
data16
adcl
rcrl
sbb
add
push
mov
cmpb
clc
setb
test
enter
enter
mov
or
dec
adc
data16
push
lea
push
or
cmp
icebp
sub
or
jmp
insl
push
mov
cs
cld
mov
dec
dec
mov
pop
push
mov
arpl
push
inc
hlt
pop
call
and
sub
in
fcomp
gs
shrl
inc
mov
xlat
das
push
mov
jp
pop
mov
js
jo
and
sbb
es
or
sbb
icebp
xchg
xor
jbe
add
shr
sub
pusha
sbb
popf
inc
bound
adc
sub
sub
mov
in
aas
jmp
lds
test
xchg
addr16
add
sti
in
aas
mov
pop
push
and
xor
js
add
or
pop
pop
lock
gs
add
xor
and
add
pusha
pop
and
aas
push
and
das
inc
xor
inc
shrb
into
xchg
mov
addr16
mov
mov
sbb
add
jl
cmpsl
fisubl
jno
sbb
and
jecxz
loop
jb
dec
gs
sub
movb
cmp
je
stc
mov
push
add
idivl
inc
sbb
cmp
loop
jp
pop
push
dec
in
out
enter
leave
xor
or
xadd
and
push
mov
aam
inc
add
adc
or
adcb
dec
int3
add
nop
testb
jne
add
pop
rol
xor
out
cmp
fstl
sbb
adcl
test
xor
cmp
mov
jle
stos
mov
pop
hlt
dec
xchg
pop
pop
je
sarb
addr16
adc
sbb
test
imul
pop
je
or
mov
xchg
add
or
jb
pop
add
xchg
loope
aam
and
pop
mov
cmp
movsb
stc
outsb
mov
push
outsb
scas
les
xchg
sub
inc
cwtl
xor
push
in
adc
shlb
pop
push
sbb
adc
mov
adc
xchg
mov
add
xchg
mov
xchg
or
mov
adc
fisubs
daa
jne
mov
aaa
xorl
dec
sbbl
push
xchg
push
jl
pushl
push
lret
jmp
scas
mov
xchg
andl
mov
cmp
mov
sbb
inc
ret
sbb
in
jae
xchg
mov
ja
fnstsw
test
je
stc
loop
dec
mov
jmp
dec
mov
pop
mov
jmp
imul
and
mov
test
dec
add
xor
inc
pusha
inc
xor
rcl
xchg
shlb
lcall
fmulp
js
cmp
jge
mov
mov
mov
cmp
add
sbbb
cmp
jle
movsl
jne
sbb
pushl
inc
mov
or
and
xchg
fsubr
mov
lcall
je
fidivrl
xchg
mov
or
in
sbb
aam
xor
or
jae
push
test
mov
cmp
jg
repnz
in
mov
add
and
cmp
cmovbe
testb
xchg
add
shlb
xorb
mov
hlt
mov
stc
stos
push
push
fsubs
or
lahf
push
cmp
cli
jno
dec
dec
ficoml
out
mov
pop
add
scas
sbb
and
mov
xchg
je
or
in
bnd
cwtl
movsb
push
loopne
mov
fcompl
add
mov
sarl
lock
pop
push
cmp
insb
sbb
js
and
add
fwait
mov
clc
sar
push
dec
lock
or
sub
push
shrb
jno
mov
or
cltd
mov
dec
xchg
insb
or
push
jo
std
mov
arpl
mov
lcall
cld
jnp
test
ja
fcoml
ss
add
add
dec
andl
into
sub
daa
push
cltd
pop
dec
or
test
xchg
popa
sti
add
in
das
adc
sbb
or
nop
or
aam
jns
pop
outsl
mov
jne
repnz
int
adc
push
pop
pop
or
pop
adc
cld
mov
int
andl
xor
fisubrs
lock
popa
sbb
in
repnz
push
mov
lock
and
sub
sbb
inc
lea
pop
popa
cmp
mov
xor
or
stos
and
rclb
lock
cmp
xchg
inc
sahf
jge
popf
push
push
insb
sti
add
xchg
jle
jge
ret
pushf
adc
pop
mov
or
insb
mov
je
dec
push
inc
add
shll
xchg
mov
jno
or
ss
xchg
push
popa
ror
jae
jb
pop
inc
mov
pop
add
cmpsl
adc
sub
call
cs
cmp
out
stos
lock
mov
hlt
add
cmpsb
lock
and
jnp
clc
incl
dec
push
push
hlt
lret
xchg
shlb
jle
nop
jb
and
clc
lock
mov
xchg
add
mov
lods
hlt
cmp
jmp
inc
hlt
mov
std
in
dec
jo
or
jbe
into
push
push
add
push
rorb
sbb
gs
mov
cmp
push
hlt
loopne
add
in
testb
sbbb
hlt
hlt
insl
inc
inc
in
popl
jl
jb
sbb
xor
pop
clc
jg
mov
cwtl
add
ret
shlb
ja
addr16
pop
enter
inc
dec
rorb
add
and
sub
pop
or
pop
pop
mulb
cmpb
add
clc
icebp
cmp
pop
sbb
push
mov
sarb
inc
adc
push
xor
xor
cld
and
xchg
test
movzwl
lods
or
xor
fdivrl
inc
push
adcb
cwtl
push
lea
push
cmp
incb
push
roll
pop
adc
mov
jbe
pop
push
mov
cmp
jo
fnsave
cld
pop
mov
xor
jo
and
sbb
test
add
jg
sarb
loope
and
or
sbb
cmp
cs
xchg
scas
loop
call
testb
enter
cmp
daa
sub
mull
test
xor
and
jbe
mov
lods
cli
sbb
push
inc
inc
push
test
cld
xchg
add
in
jbe
sub
sub
add
mov
adc
mov
push
xchg
push
leave
ret
xchg
push
outsb
and
cmp
sub
jle
xor
andl
ret
mov
xchg
pop
and
lods
jo
mov
sarb
addr16
movl
lock
xchg
dec
cmpsl
inc
jle
sub
jmp
imul
xor
push
mov
clc
push
xchg
arpl
xor
sub
inc
push
cmp
lret
xchg
mov
enter
dec
test
xchg
sub
xchg
mov
rorb
ja
add
jb
push
hlt
jle
aas
fbstp
lret
imul
aaa
adcl
xlat
outsb
xchg
and
xchg
cmpsb
mov
add
jle
jg
lds
int3
jmp
mov
dec
aaa
or
xchg
jbe
rorb
push
inc
call
fisttpl
add
test
mov
shr
aad
add
xchg
pop
add
shrl
adc
sbb
ljmp
xchg
adc
xchg
mov
cmp
mov
test
mov
dec
xor
in
adc
sbb
test
add
js
icebp
or
jno
sahf
mov
dec
subw
fs
adc
fs
mov
push
jnp
mov
or
mov
stos
orb
aam
add
movl
int
pusha
xchg
add
fdivs
andb
mov
mov
inc
and
out
xchg
push
add
pop
mov
jns
add
pop
lret
xchg
inc
mov
add
imul
iret
outsb
cwtl
out
add
adc
in
call
adc
nop
sbb
pop
pop
ds
adc
in
lea
aad
dec
nop
add
or
push
repz
push
mov
lea
xor
or
pop
ds
xchg
sub
jg
dec
sbb
fstps
pop
les
rclb
jbe
sbb
mov
sbb
inc
or
lcall
out
sbb
sub
xchg
lock
jecxz
mov
fimull
mov
fwait
or
mov
sub
test
loopne
outsb
cmp
test
or
sub
add
xchg
repz
iret
nop
lea
pop
push
outsb
mov
testl
dec
or
push
std
rcr
jge
or
xchg
test
mov
xchg
dec
ljmp
gs
cmpb
aad
push
or
pop
lea
negl
roll
scas
lea
lods
aad
push
or
push
and
and
insl
dec
add
lcall
or
pusha
push
ret
je
fcompl
pusha
enter
xor
add
cmp
or
push
dec
or
adc
mov
ficoms
mov
adc
jge
lcall
add
fldl
and
push
mov
dec
push
push
cmp
nop
push
subl
mov
je
data16
xchg
mov
jle
jns
dec
xchg
mov
js
adc
jnp
movsb
fwait
orb
hlt
mov
mov
js
adc
sub
adc
pop
rcll
loop
jne
repz
dec
sub
push
int3
push
jo
ds
push
sti
lcall
cmp
in
popl
gs
xchg
dec
mov
fsub
add
cmp
test
pop
rcrb
inc
cmpsl
aaa
stos
mov
mov
and
aas
icebp
fdivl
add
popa
repz
or
lret
jne
fmull
sub
jae
pop
sti
in
cmp
or
adc
sbb
add
sbb
inc
adc
mov
cld
xchg
or
jmp
xor
jl
adc
imul
jl
nop
and
fiadds
pop
mov
sbb
rorb
add
adcb
xor
add
pop
loope
xchg
fwait
aad
add
xlat
test
push
loope
int3
dec
in
add
cmp
adcl
push
aad
stos
sub
cmpb
cmp
cli
jle
add
adc
rorb
mov
mov
fwait
lea
mov
pop
pop
mov
shrb
in
popf
cld
mov
xchg
arpl
test
dec
sbb
pushf
jbe
cmp
cwtl
cltd
jecxz
ja
xchg
mov
test
push
cs
roll
rorl
push
adc
inc
or
ja
push
lods
sti
mov
repnz
mov
push
mov
ds
outsl
test
fs
data16
xchg
orb
outsl
push
lock
lcall
cmp
ret
subb
mov
cmp
lahf
cmp
adc
adcb
notl
test
adc
xchg
ret
hlt
lock
ret
jno
pop
movsl
jne
and
push
mov
xorl
lret
dec
popa
and
pushfw
mov
in
in
inc
adc
sub
inc
add
enter
es
sbb
in
incb
add
mov
aaa
mov
cmp
mov
mov
outsl
sbb
loopne
mov
inc
loopne
out
loopne
sub
cli
insl
sub
roll
roll
dec
jo
dec
ret
imul
sub
push
loop
lret
test
ljmp
sarb
popa
lea
mov
pop
xchg
inc
xor
clc
jecxz
add
mov
add
inc
out
cli
sbb
dec
iret
aam
or
mov
popl
cmp
outsl
jmp
ss
xchg
jne
mov
push
add
and
push
jb
push
sub
aas
fcom
add
cs
out
add
jnp
enter
push
outsl
mov
jne
jge
or
enter
fs
enter
cmpsl
addl
xor
or
or
jns
jno
bound
and
fisttps
xchg
popa
in
outsb
stos
push
gs
or
mov
lea
fs
adc
in
imul
and
add
xchg
leave
cmp
imul
daa
xor
adc
sbb
push
pop
cmp
jo
push
or
sbb
mov
in
leave
adc
xchg
add
adcb
dec
movsl
or
and
jne
adc
add
movsb
mov
adc
adc
mov
mov
pop
test
sahf
push
imul
xchg
adc
je
sbb
rcrl
add
orl
jecxz
push
jmp
in
push
mov
xlat
int
or
daa
xchg
daa
add
push
push
loopne
and
cmpsl
mov
jne
cmp
add
pop
loope
add
icebp
mov
lea
jge
leave
pop
add
fstl
and
cwtl
loop
cmp
testl
call
mov
adc
leave
cmp
and
fninit
test
je
enter
inc
push
cmpsl
pop
pop
lahf
pop
out
ret
push
cmp
push
mov
or
out
xchg
adc
scas
jmp
test
sbb
xor
or
pop
xchg
lods
xlat
sbb
aad
lcall
adc
sbb
stc
mov
xor
in
imul
rcrb
cmc
lds
mov
call
push
push
pop
cmp
je
es
mov
xor
xlat
jno
add
or
or
sbb
rcll
xor
sbb
or
pop
add
test
pop
and
pop
pop
test
adc
pop
cmp
jge
fisttpll
and
orl
mov
sub
mov
add
stos
mov
sbb
adc
nop
xlat
and
add
sub
fsubrl
test
jge
inc
sub
jnp
fidivl
push
mov
shlb
sub
dec
loopne
xchg
dec
testl
push
sub
aas
aam
lods
daa
das
popa
call
std
xor
das
jns,pn
cmp
add
icebp
and
sbb
mov
add
jns
shll
into
int3
xor
insb
dec
push
rorb
pmaddwd
mov
leave
push
xor
mov
jge
sub
pop
and
jns
fdivr
sarb
cwtl
inc
add
mov
and
pusha
dec
jae
enter
push
popf
call
xchg
xchg
mov
lods
and
sub
mov
jmp
add
push
or
loopne
xor
mov
jbe
fldl
ja
xor
mov
xchg
je
loopne
lock
add
loopne
out
cmova
pop
pop
mov
push
jbe
add
faddl
mov
adc
xchg
add
add
mov
sti
adc
mov
pop
push
orl
cld
and
pushf
cli
lea
pop
and
out
pushf
sbb
lret
rorb
push
fdivl
xchg
mov
insl
push
or
out
or
lds
cwtl
lock
xchg
rcrb
inc
les
insb
mov
nop
sub
or
jb
sub
js
or
das
les
rcr
jge
test
outsl
add
ret
ljmp
cmp
dec
test
divb
mov
add
mov
jnp
popa
movsl
xchg
or
and
jae
fildl
enter
adc
jge
sbb
adc
ss
int3
push
or
or
xor
lret
xchg
js
sub
lcall
fldl
insl
xlat
xchg
adc
mov
es
and
data16
add
pop
roll
das
add
cmp
sub
add
test
les
and
jmp
test
jae
loope
or
pop
pusha
cmpb
push
mov
mov
or
rolb
dec
mov
shr
add
cmp
xchg
mov
jp
roll
sub
adc
pop
mov
icebp
or
push
sub
mov
mov
jo
mov
pushf
sbb
add
mov
lock
push
aaa
lods
int3
fisubrl
add
insl
jmp
and
cld
dec
hlt
sub
push
je
xor
lods
lea
jo
jno
in
add
push
sub
je
iret
cmp
add
lds
or
push
xchg
movsb
cmp
sub
sbbb
test
into
mov
or
hlt
sub
fnstenv
add
adc
and
cmc
add
inc
cmpl
adc
into
in
mov
jbe
loope
js
adc
out
or
or
jl
xchg
fstpt
inc
bound
mov
push
ret
xchg
xchg
push
xorb
pop
js
adc
iret
push
in
scas
jl
pop
cmc
cmp
or
dec
in
adcb
cmp
push
inc
add
add
fmuls
lds
or
enter
sub
inc
or
mov
loop
ljmp
inc
jp
lock
imul
xchg
pusha
xchg
mov
loope
push
fidivs
push
mov
xor
faddl
add
mov
pop
push
pop
leave
add
adc
fiadds
adc
stos
sub
mov
leave
test
sub
ljmp
pop
arpl
pusha
adc
scas
fsubr
add
je
cmpb
jne
mov
jmp
ret
push
mov
xorps
push
ss
je
jl
clc
aas
cmc
sbb
stc
sub
lea
push
lea
mov
loope
inc
push
in
fwait
push
mov
movsb
ret
test
lret
insb
ficoml
gs
arpl
fldt
lret
fidivrl
jl
test
cmp
jle
pop
sub
loopne
test
lcall
jne
jns
imul
push
add
imul
rcr
jmp
int3
jo
push
sub
dec
cmp
je
sub
xlat
pop
xchg
shlb
stc
cmp
outsb
jns
fcmovnu
js
add
lock
shufps
adc
push
sar
xorb
mov
adcl
xchg
pop
adc
in
push
xchg
pmulhw
xchg
fldcw
fisttps
js
dec
or
push
dec
sub
in
out
xorl
mov
mov
daa
or
sbb
insl
jbe
xchg
xor
ja
push
or
or
ja
cmp
call
hlt
jmp
lock
test
mov
push
popf
mov
or
add
xor
clc
and
jbe
add
cmp
mov
or
mov
dec
les
sub
jne
xchg
cltd
lods
inc
sub
xchg
decl
call
cmp
xor
jle
incl
testb
sub
mov
fbstp
or
mov
xchg
inc
repnz
test
outsl
outsl
rolb
inc
or
pop
pushl
sub
and
mov
mov
adc
jbe
push
movl
dec
xchg
decl
xchg
js
xchg
push
or
cmpsb
dec
or
lret
push
rcl
add
and
bound
mov
inc
shrl
popa
add
rorl
and
adc
adc
push
lahf
add
stos
test
pusha
arpl
popa
adc
call
inc
add
sbb
repnz
pusha
mov
ret
dec
bound
movsb
cs
sub
or
xor
pop
leave
push
cmp
je
xor
sbb
mul
pminsw
dec
ret
mov
enter
fucomp
imul
dec
push
jmp
cmpsl
mov
rclb
pop
sbbl
xchg
jecxz
shl
dec
test
mov
add
adc
outsl
sub
popa
out
inc
add
cmp
mov
mov
cwtl
fldl
jae
subl
loopne
xor
rcll
pcmpeqd
and
data16
inc
inc
jecxz
or
xor
add
gs
fs
xor
adc
in
or
mov
push
pop
xchg
xor
adc
cmpsb
xor
fidivrl
mov
shr
push
sahf
and
leave
add
nop
popf
push
sbb
push
in
pop
mov
test
lds
add
push
pop
sbb
cmp
je
sbbb
mov
xor
cmp
lock
adc
loop
add
ds
adc
dec
cmp
repnz
jae
aaa
xor
sub
or
mov
lahf
cmp
faddp
jmp
ret
lahf
mov
pop
push
test
je
cli
jmp
mov
loope
pop
fwait
inc
jno
cmp
push
inc
cmp
jae
xor
test
cwtl
scas
cmp
push
add
push
pop
jbe
ja
xchg
jl
ret
sti
jne
mov
pop
jl
pop
add
cmpb
xor
mov
ss
push
inc
jmp
imul
mov
pop
cmp
cmp
imul
loopne
cmp
out
mov
pop
or
pop
push
adc
mov
je
adcl
pop
or
mov
push
or
and
mov
inc
mov
dec
adc
push
push
loope
mov
push
adc
mov
sbb
inc
or
add
mov
call
xchg
lock
fmul
sbb
in
adc
shlb
mov
pop
mov
cmp
jae
data16
inc
inc
pop
pop
orb
pop
leave
and
lcall
sub
popa
inc
sbb
filds
lea
push
mov
and
roll
negb
sti
or
xchg
sbb
push
je
sti
jp
push
and
pop
mov
test
cwtl
outsb
pop
into
xlat
jl
cld
inc
push
jge
push
sub
icebp
dec
push
sub
cld
sub
push
clc
pop
in
imul
sbb
push
xchg
cmp
jecxz
imul
add
xchg
fstpl
movsl
ja
and
and
add
jp
stc
bound
insl
daa
mov
in
push
loopne
jns
test
add
imul
add
mov
neg
push
cmp
ret
into
mov
push
rorb
jne
insl
and
mov
jge
mov
push
je
mov
jmp
mov
push
mov
push
fwait
repz
inc
push
mov
xchg
cmp
add
rcrb
gs
mov
andl
pop
ret
push
test
push
add
imul
pushf
pop
outsl
ret
xchg
pushf
add
dec
cmc
inc
and
popf
xchg
xor
mov
push
orb
xchg
test
outsl
mov
ja
dec
sbb
jo
fdivs
xchg
pop
inc
add
cmc
and
imul
aad
cmp
xor
fmull
inc
dec
lock
je
and
es
and
inc
movl
mov
push
or
imul
jno
into
jbe
jle
adc
test
nop
js
fidivl
fidivl
sbb
pop
in
movsl
inc
roll
mov
pop
sbb
insb
mov
inc
push
je
push
xor
pop
mov
test
js
jl
orl
lods
inc
iret
repz
int
sahf
aad
add
imul
cmp
push
add
push
sub
pop
jg
pop
sti
or
mov
push
or
xchg
pop
sub
mov
loope
je
jo
pop
bound
in
dec
pushf
fsubrl
enter
movaps
shr
mov
nop
jmp
cmp
push
ret
ret
push
xor
subl
repz
xor
cmp
mov
and
sub
sub
inc
js
test
sub
push
sbb
push
jae
or
dec
adc
movsl
mov
lret
jno
rcll
or
push
rcrb
cmp
je
mov
aaa
pop
jno
dec
sbb
mov
mov
fdivl
inc
mov
mov
dec
fistl
rolb
scas
mov
sub
mov
add
cmp
push
adc
push
inc
orl
lock
adc
push
jnp
sub
xor
repz
ror
sub
xor
jge
lcall
jg
sub
sbb
sub
inc
dec
js,pn
inc
sub
sub
sbb
inc
lcall
mov
jnp
inc
and
xor
sbb
adc
das
mov
mov
in
lods
pop
imul
call
loopne
repz
imul
lods
orl
add
mov
adc
popf
or
xchg
mov
out
mov
cmc
mov
repz
in
cmp
push
push
jnp
jbe
ficoms
insb
cmc
and
fcom
xorb
ret
sub
enter
mov
xor
ror
mov
scas
jae
add
scas
imul
sbb
lret
xlat
sub
loopne
push
xor
xlat
push
dec
xor
js
cmp
mov
push
push
add
add
cmp
push
lock
pushl
mov
cmp
mov
dec
movsl
daa
loopne
and
sti
sbb
sbb
adc
pop
cmpsl
xor
jge
add
pop
hlt
gs
dec
push
pop
or
cmp
int3
mov
scas
push
shlb
xchg
push
xchg
hlt
lea
push
cmpsb
sub
mov
xchg
adc
cmp
insl
lds
mov
sub
inc
loopne
pop
jns
rolb
inc
pop
pop
dec
and
inc
or
movsl
cs
xchg
pop
dec
inc
cmpsb
fnsave
push
ret
sti
and
inc
or
sbb
aas
leave
mov
xchg
ja
mov
xchg
add
xchg
dec
repnz
mov
sbb
sbb
push
mov
mov
xchg
inc
movsb
leave
mov
inc
int
sbb
movsl
and
shrb
addr16
push
stc
fdivr
faddp
push
xchg
pop
outsl
cmpb
add
pop
or
pop
loopne
fisttpl
inc
inc
mov
adc
jb
add
lcall
push
pop
aad
or
mov
mov
mov
adc
sub
add
shl
xor
daa
std
dec
inc
or
test
push
sbb
cmc
and
add
popa
add
ret
dec
adc
into
and
hlt
aad
loope
jbe
stc
mov
cld
sbb
mov
aas
ret
and
sub
pushl
mov
pop
ret
frstor
repz
mov
adc
add
scas
lock
mov
and
adc
sub
fwait
out
inc
test
mov
daa
insb
test
mov
and
test
mov
lret
inc
fstpl
push
xchg
pop
je
mov
pop
xor
mov
in
pusha
jmp
xor
icebp
sub
push
fcmovb
cmp
in
jmp
jns
rorb
mov
in
test
sbb
mov
icebp
xchg
inc
xor
rclb
dec
sar
js
loop
inc
jge
test
outsb
cmpsl
mov
in
lea
out
lock
int
xchg
jp
jne
adc
pop
push
negb
dec
hlt
add
push
imul
push
rcr
ret
pushl
lret
mov
out
sub
movb
inc
jb
imul
lds
rorl
cmp
ret
xchg
stos
inc
cmp
xor
adc
aaa
sub
lea
mov
cmpb
pusha
jo
inc
insb
pop
push
cmpb
test
add
sbb
or
mov
push
test
mov
mov
sbb
mov
inc
push
add
adc
adc
or
sub
add
cmp
dec
ret
in
mov
jo
ja
sbb
xor
add
push
je
push
mov
and
in
jmp
leave
inc
jno
or
jo
notl
mov
push
loope
mov
push
stos
stos
jne
je
popa
sub
push
mov
xchg
sbb
or
cmp
andl
mov
adc
dec
aas
mov
sbb
lcall
push
pusha
fstpl
das
cmp
xchg
aad
cmp
test
test
push
fnstsw
movsb
jecxz
sub
or
test
imul
cmp
ds
jne
fadd
mov
into
or
dec
icebp
mov
mov
rorl
dec
add
shlb
xor
sahf
ficompl
js
test
cli
push
push
pop
in
sbb
mov
les
negb
add
ret
cmp
sbb
loopne
daa
in
in
mov
rorl
add
add
xchg
push
sub
adc
movsb
push
movsl
neg
test
dec
int3
add
enter
add
iret
outsl
mov
xchg
adc
mov
sbb
int3
xor
cmp
add
or
xor
push
adc
push
sub
adc
mov
js
xor
nop
leave
add
pushf
mov
in
cmpsb
xlat
push
adc
mov
push
adc
loop
mov
fwait
adc
dec
int3
mov
cs
or
mov
movl
ja
mov
nop
fsubs
test
icebp
jne
xchg
loopne
cmp
lods
mov
out
test
loopne
and
je
cmpb
jmp
js
sbb
mov
int
xor
fcomps
out
jnp
adc
xchg
decb
call
shlb
mov
and
xor
mov
ror
sub
inc
pop
cmp
sahf
jl
decl
add
xchg
inc
ret
mov
mov
cmp
subps
test
mov
es
xor
sub
ja
mov
cmp
lea
decl
or
push
push
loop
add
jl
sbb
adc
push
inc
dec
inc
xchg
add
loopne
add
dec
lods
scas
or
adc
icebp
push
cli
cmp
pushf
push
clc
push
jmp
inc
sub
lods
gs
cmp
inc
loopne
pushf
push
sbb
les
dec
fdivs
push
inc
push
ss
cs
fsubr
shr
add
jne
inc
sub
fsubs
enter
add
inc
dec
ds
sub
and
setg
or
rol
test
jmp
fcompl
inc
cwtl
inc
jmp
jmp
rclb
mov
jg
insb
push
push
push
cmc
nop
roll
xchg
sbb
or
adc
mov
arpl
push
das
xchg
sbb
sbb
popf
mov
dec
out
mov
adc
adc
and
pop
push
or
pushl
and
xchg
sub
pusha
scas
in
cmp
inc
adc
xchg
iret
loopne
sbb
xor
clc
xchg
jmp
sbb
in
nop
add
in
adc
or
adc
xchg
push
sub
adc
and
pusha
and
adc
adc
inc
adc
push
sbb
jmp
dec
mov
mov
les
enter
sub
xor
or
into
cmp
es
daa
sub
cmp
popa
xchg
xchg
add
add
loopne
data16
mov
dec
or
fistps
loope
cmpb
loope
cs
movsb
sbb
sbb
or
inc
xchg
push
cmp
lret
push
push
rorl
cmp
inc
jmp
mov
pusha
clc
sbb
cmc
mov
add
mov
inc
xor
mov
xchg
orl
lret
inc
add
push
in
and
lret
sbb
adc
jmp
and
daa
in
or
cmp
cmp
scas
pop
fstpl
cmp
dec
in
jno
lea
lea
mov
mov
mov
dec
and
or
imul
mov
imul
loop
mov
imul
test
aam
push
sbb
cmc
mov
jmp
nop
das
pop
mov
add
sbb
js
movsl
mov
data16
repnz
mov
sbb
daa
jo
jno
or
sti
cmpsb
shl
leave
mov
lods
into
cmpsb
sbb
cs
and
mov
cmp
cmpb
adc
subl
test
and
and
mov
mov
xchg
jo
std
dec
cmp
inc
test
lods
call
sbb
or
hlt
call
mov
add
jno
mov
xor
mov
ret
ret
mov
mov
and
and
adc
out
pop
movsl
in
movsl
fdivr
roll
ret
scas
lods
outsb
xor
aam
lds
cwtl
shl
nop
imul
adc
sahf
add
pop
xchg
mov
into
movsb
add
jl
jmp
rcrb
rolb
dec
xlat
loope
ja
scas
sub
popf
jb
sbb
mov
fildl
pop
insl
push
or
push
lea
aam
ss
add
loop
out
cs
ficompl
jne
dec
ljmp
shlb
sarb
ret
fstl
add
mov
cltd
fwait
jns
push
lock
jge
and
push
mov
cmp
stos
add
fiadds
xlat
out
andl
mov
ss
pop
movsb
add
add
sahf
adc
mov
jmp
shl
pop
jp
push
xor
dec
push
je
dec
jne
xor
mov
xor
xchg
shr
and
push
cmc
lahf
mov
movsl
nop
pop
push
mov
rcr
xchg
xchg
push
fst
das
pushf
mov
test
pop
repnz
ficoms
cmp
je
cltd
imul
ret
lock
push
add
aaa
or
movl
or
inc
add
daa
xor
mov
mov
lea
cli
jb
adc
into
and
orb
or
pop
dec
popa
inc
dec
fsubr
jge
push
adc
das
lahf
pop
ja
xor
adc
xchg
aas
pop
and
lds
mov
sar
sub
push
data16
mov
test
popa
test
nop
xchg
or
jecxz
cmp
sbb
and
push
and
ss
cmp
adc
and
or
fcmovnb
out
push
push
lods
and
cmpb
or
add
and
jo
frstor
cmp
testb
inc
je
and
push
push
xor
ja
loop
ds
je
outsb
rorb
mov
jge
and
test
mov
insl
lcall
sub
outsb
lock
sbb
xor
lahf
mov
adc
jmp
sub
icebp
xchg
inc
lea
push
sub
add
fmuls
ja
dec
hlt
xor
cmp
mov
dec
dec
sbb
sub
aaa
push
xchg
nop
enter
cld
leave
fildll
jle
jmp
cmp
je
aaa
jns
jo
add
rcrl
inc
push
pop
fiadds
int
mov
xor
xor
jmp
jmp
adcb
jno
sbb
dec
shr
add
ret
cmpsb
inc
lcall
pop
sub
lea
xchg
pop
popa
add
fcmovnb
ss
cld
incb
lds
or
mov
xchg
iret
sbbl
xorb
pop
add
iret
mov
push
inc
mov
mov
adc
js
loop,pn
adcb
adc
fisttpl
dec
das
bound
lret
sub
sbb
leave
adc
sub
sub
jbe
les
loope
imul
lret
jg
jge
or
add
mov
and
xor
adc
push
xor
add
sub
inc
fmuls
and
inc
in
mulb
rcll
dec
pop
fwait
dec
les
push
mov
jns
ret
xchg
or
ljmp
bound
mov
and
rorb
nop
cld
data16
sbb
and
jg
ja
jge
icebp
mov
mov
or
adc
fdivrs
and
fldcw
imul
dec
add
sbb
imul
xor
adc
popf
and
add
pop
aam
mov
dec
jmp
jo
enter
insb
mov
mov
fsubrl
lea
rorb
mov
rcr
inc
adc
and
mov
movsl
gs
js
push
lret
sub
fs
inc
mov
xor
mov
dec
pop
insl
jae
inc
lret
fmul
add
shrb
jns
xchg
add
xchg
sbb
push
mov
sub
popf
mov
inc
cmp
addb
add
mov
sbb
ss
rcr
push
jae
adc
mov
push
sub
push
xchg
cmpsb
mov
lods
or
fdivrl
inc
lods
loope
insb
xchg
inc
adc
push
cltd
pop
or
sub
and
or
mov
inc
std
fs
rcr
movsl
popf
mov
and
das
fmuls
mov
movsl
and
push
push
lret
mov
imul
lret
mov
rorb
sub
in
dec
repz
or
adcl
das
add
movsl
push
xor
push
or
adc
aam
into
ret
inc
dec
adc
add
mov
das
jl
sub
mov
jae
outsb
fistpl
movsb
in
push
mov
loopne
mov
mov
xchg
fnsave
mov
adcb
xchg
imul
push
faddl
adc
stos
pop
dec
je
mov
sbb
mov
inc
enter
push
sub
jns
mov
push
and
mov
psubsw
mov
inc
inc
dec
xor
aam
dec
inc
pop
mov
and
dec
inc
or
mov
lods
test
cli
dec
mov
popa
addr16
and
jae
sub
lea
add
dec
test
adc
adc
adc
fildll
push
aad
shlb
push
outsl
ja
mov
mov
cmp
mov
insl
cmp
cmp
mov
bound
in
push
push
mov
stc
push
stc
sbb
adc
dec
cwtl
cmp
mov
mov
mov
or
sbb
or
and
cmp
cmp
popf
or
aas
dec
cwtl
push
inc
pop
subb
jnp
inc
jo
or
inc
dec
jle
push
mov
test
mov
fstl
fs
nop
filds
sub
sbb
es
cmp
pop
dec
dec
and
add
add
pop
push
in
mov
push
out
push
inc
add
fstps
movsb
lods
leave
cmpsl
and
and
push
mov
roll
jmp
lgdtl
jmp
sbb
add
cmp
lods
sarl
imul
test
push
stc
mov
inc
sub
xchg
and
jl
mov
sub
xchg
mov
mov
push
je
sbb
or
es
fidivrs
push
out
pop
push
lock
mov
adc
jb
add
adc
dec
sbb
orl
lret
cmp
adc
cmp
pop
orl
add
fistps
xor
mov
andb
push
mov
fwait
loopne
lahf
push
mov
sub
movsl
adc
push
adc
xor
or
movsb
jb
fwait
dec
pop
add
xchg
inc
cs
pop
add
ret
and
aas
movl
pop
cmp
mov
pushf
sub
cwtl
popf
push
sti
push
dec
sub
xchg
push
mov
xor
xchg
das
jnp
push
arpl
sbb
push
sub
imul
jo
cmp
mov
xor
and
imul
jns
add
addb
pusha
mov
cmp
int3
js
pop
sub
daa
jmp
pop
lea
out
test
jns
or
aaa
sub
dec
xor
jne
jmp
pop
cltd
adcl
jo
cmp
jl
lea
mov
jp
subl
mov
out
lret
cmp
inc
dec
nop
out
nop
sub
das
adc
or
inc
xor
xor
xor
add
lea
enter
mov
xor
and
dec
inc
pop
push
rorl
popf
push
movsb
mov
pop
popf
adc
nop
or
or
sbb
pushf
inc
aaa
adc
ljmp
and
cmp
dec
xor
jae
mov
out
adc
jno
mov
push
stos
pop
jb
in
mov
addl
xor
or
loope
cwtl
movsb
or
jne
lea
xor
psubw
lds
xor
rclb
mov
test
adc
sarb
outsl
mov
fldl
sub
adcb
or
dec
fiaddl
scas
rcll
daa
int
add
add
pop
dec
cmp
lea
cmpsl
jne
push
or
xchg
cmp
mov
cmp
cmpsl
negl
adc
cmp
or
mov
cmpsl
jl
cli
pop
inc
push
and
scas
xor
xor
inc
xor
imul
fs
and
lcall
dec
mov
testl
mov
insb
inc
or
sti
xor
sub
lahf
jb
loopne
adc
aad
jb
xor
ds
or
add
dec
inc
fldl
inc
pop
mov
fisubrs
mov
int3
cmp
mov
fcmovnb
ljmp
jbe
pop
xchg
test
stc
push
lea
popf
lea
dec
out
inc
inc
repz
daa
call
adc
lret
shlb
fildl
inc
jo
dec
negb
cmpsb
into
or
xchg
bndstx
pusha
mov
jmp
ds
pop
xlat
not
imul
xchg
add
iret
xor
mov
popf
xchg
mov
dec
or
sbb
pop
or
je
idiv
xor
iret
xor
icebp
add
add
inc
and
or
mov
xchg
add
iret
adc
xchg
dec
int
lea
dec
and
negl
cltd
add
mov
push
and
add
in
fadds
dec
cmp
popf
or
cwtl
cmp
xchg
add
push
xlat
sub
mov
sbb
xor
stos
xchg
test
lcall
outsl
pop
sbb
mov
cmp
push
pop
jge
loop
cli
orl
lret
outsb
mov
pop
sub
jo
mov
inc
adc
mov
jae
xchg
dec
inc
cmpsl
mov
xchg
inc
subb
jno
fisubrs
push
xor
sbb
mov
insb
cmp
dec
mov
rcll
cmp
push
push
xor
add
arpl
add
and
lds
and
xchg
cmpsl
jle
rorb
or
enter
ret
out
lea
jae
xchg
mov
bound
int
nop
dec
jb
lock
or
daa
loopne
andl
add
cs
add
and
and
xor
and
push
andl
mov
push
jne
mov
ret
dec
and
es
cmp
lds
sbbl
leave
adc
daa
xchg
pop
push
pop
mov
jmp
sub
pop
xor
sub
leave
mov
jae
sub
dec
dec
and
sub
sub
sbb
cmpsl
nop
sub
js
xor
adc
sub
mov
push
stos
notb
inc
dec
push
push
sbb
dec
or
nop
adc
loopne
das
and
in
xchg
lods
jae
icebp
dec
and
mov
sub
leave
mov
dec
adcl
push
add
mov
rorb
and
xor
rcl
xor
xchg
andb
pop
jns
lcall
push
movsb
or
lea
fadds
movsb
jns
push
adc
and
sbb
sbb
dec
xor
add
add
xor
mov
out
add
pop
sti
xchg
sub
xchg
inc
testl
xchg
and
sub
push
inc
pop
or
fldenv
pop
in
sbb
pushf
jle
or
cmp
add
fs
inc
movsl
test
in
mov
ds
inc
repz
testb
or
and
sbbb
cmp
push
dec
sbb
ret
fcomp
jno
lock
daa
mov
loopne
lock
imul
and
push
jp
aaa
dec
xchg
sbb
and
insl
push
add
inc
sbb
into
fcoml
sbb
testb
adc
adc
adc
test
sbb
pop
addl
push
lods
movsl
or
subl
test
out
or
inc
xor
mov
shrb
stos
lret
nop
xchg
lock
fisttps
mov
inc
pop
push
xor
mov
adc
jp
push
dec
daa
pop
dec
cld
nop
and
xor
testl
aam
xchg
lock
pop
cmpl
test
push
push
icebp
or
xor
ds
add
sbb
call
xor
scas
cmpsb
sarb
je
inc
xlat
adc
hlt
insb
dec
push
push
xchg
ret
dec
push
lds
stc
mov
add
addb
or
rol
push
sbb
add
stc
pop
add
xchg
dec
add
ja
mov
push
je
cmp
ror
or
and
call
adc
imul
bnd
je
cmp
mov
stos
loop
fidivrs
or
fs
or
xchg
inc
or
mov
insl
rol
test
xor
dec
je
push
les
lods
test
or
fcomp
inc
mov
fwait
xorb
pop
fucomp
and
orl
loopne
jmp
icebp
std
movsb
xchg
nop
push
pushl
and
lahf
dec
cmpb
fmuls
push
nop
aaa
lock
pop
loopne
jp
inc
out
repz
sbb
shll
or
repnz
fadd
mov
sbb
mov
dec
ds
dec
call
mov
shufps
cmp
punpckhdq
loopne
ja
scas
mov
xor
mov
jge
mov
mov
cld
mov
jne
sbb
jnp
sbb
aaa
add
xor
xlat
aaa
add
es
and
add
stc
push
andl
or
xor
movl
sbb
sbb
inc
cs
mov
movsb
xchg
outsl
mov
outsl
adc
pop
add
imul
jns
aad
adc
and
les
ffree
inc
or
push
adc
mov
xchg
das
inc
aam
xchg
lods
sbb
push
inc
mov
js
jns
mov
ret
icebp
jae
jle
pop
xchg
sbb
adc
push
mov
lea
into
mov
push
sub
bound
pusha
jl
loop
int
das
pop
jmp
in
and
fwait
pop
cmpsb
add
cwtl
pop
inc
mov
in
shl
dec
xlat
sbb
dec
or
cmpl
inc
jo
mov
jmp
mov
push
sbb
or
dec
fcoms
xor
adc
mov
mov
adc
mov
push
jmp
sub
ds
movl
stos
xor
inc
sbb
xchg
add
mov
push
dec
add
add
movsb
inc
shll
push
stos
mov
xchg
lcall
std
mov
mov
sbb
lcall
pop
mov
mov
inc
outsl
and
mov
push
add
aam
pop
xor
cmpsl
or
sbb
jbe
aas
or
sub
les
inc
or
bound
fcoml
mov
aad
xchg
sbb
cmc
push
or
push
aad
popf
dec
clc
test
and
pop
push
in
mov
and
pop
mov
in
inc
sub
sbb
jg
loop
enter
jae
inc
add
outsb
mov
loopne
outsb
loope
sbb
and
loopne
ret
and
daa
cmp
sbb
ficomps
or
faddl
outsl
fiadds
inc
jbe
sub
dec
sbb
inc
lret
jp
cltd
add
and
lock
js
add
into
sbb
js
mov
push
loopne
dec
sub
stc
mov
icebp
repnz
pop
inc
push
add
sub
cmpsl
mov
lods
add
push
rcl
leave
ss
mov
cmpsb
jle
aaa
stos
xor
dec
loopne
sub
sub
adc
dec
pop
jmp
sbb
es
lar
in
dec
add
dec
add
lea
enter
add
push
add
test
popa
jns
inc
lods
jp
pop
push
inc
cltd
add
add
js
ficoms
nop
lea
dec
cmp
or
pop
dec
dec
inc
or
bound
or
sub
cs
or
sub
or
sti
cmp
push
in
push
add
adc
das
mov
and
or
lcall
movl
adc
add
popa
scas
add
dec
adc
xor
xchg
or
mov
mov
xor
xorl
call
rcll
or
adc
adc
cmp
adc
adcl
dec
adc
push
jl
sbb
ret
xchg
jbe
scas
jne
test
dec
and
das
lock
nop
cmp
inc
push
xor
sarb
inc
movl
sub
lret
adc
sti
in
xor
loopne
in
stos
inc
cmp
dec
inc
mov
xor
ljmp
lock
xor
mov
inc
lea
lods
or
inc
lret
and
push
inc
xor
popa
xchg
ret
push
aas
jmp
adc
and
push
imul
and
adc
push
or
push
inc
nop
or
fcmovne
movsl
or
add
mov
xchg
jo
cmp
adc
dec
jl
mov
out
popf
sbb
mov
adc
hlt
mov
sbb
dec
scas
enter
push
pop
sub
push
xchg
sbb
add
cmp
mov
xor
jl
lea
pop
push
inc
test
dec
sbb
sbb
push
daa
mov
sbb
jle
xchg
sahf
incl
push
sbb
push
das
inc
lds
lock
mov
cmp
push
fdivr
loope
add
cmp
cmp
dec
rorl
jno
inc
adc
sbb
loope
adc
inc
mov
incl
shll
rol
sub
push
sub
or
cmp
xchg
inc
lcall
mov
test
pusha
bound
cwtl
sbb
stos
psubusb
add
ljmp
adc
push
loopne
pusha
jns
adc
xlat
mov
add
cmp
sarb
mov
shr
ffree
xchg
insl
or
inc
test
add
hlt
popl
mov
js
jecxz
fistpll
push
mov
rcrl
hlt
call
or
and
aas
and
notb
or
or
lea
push
pop
or
lods
test
jmp
test
testb
lock
xchg
adcb
xchg
adc
xor
inc
cmpsb
out
sbb
xchg
add
jo
adc
xlat
aam
popa
push
mov
sbb
push
inc
test
dec
mov
sub
mov
out
fiadds
mov
cmp
inc
push
fldenv
repz
inc
adc
sbb
sub
pop
pop
sahf
dec
add
leave
mov
popa
scas
loope
rorb
mov
popa
addb
cli
add
cmp
or
fwait
cmc
gs
adc
stos
push
xor
mov
add
jmp
inc
push
mov
add
scas
fisttpll
sub
sbb
dec
or
xchg
add
push
ret
pop
inc
aaa
jecxz
mov
jecxz
and
insb
jo
fwait
in
sbb
and
les
fdivrs
je
rclb
mov
pop
sbb
mov
adc
inc
jl
sbb
jle
movl
popa
jns
lods
sbb
adc
mov
test
xchg
or
or
scas
inc
movb
mov
inc
insb
push
mov
aas
sbb
add
test
fsubrs
icebp
in
icebp
or
insl
pop
jns
push
fldt
and
sbb
lea
jg
push
sti
and
cwtl
call
mov
cmp
push
shlb
push
sbb
mov
add
adcl
xchg
shrb
cmp
mov
sbb
mov
xorl
add
add
xor
push
ret
lock
xor
int3
pushf
aaa
rclb
jnp
repnz
jge
mov
movsl
in
sbb
mov
add
mov
sub
mov
sub
call
repz
rorb
out
movsl
and
sbb
pop
bnd
sbb
xor
subl
subps
xchg
mov
outsl
leave
test
lods
inc
mov
imul
shlb
fmuls
sbb
xor
test
cld
mov
add
mov
xor
add
roll
outsb
add
nop
push
in
or
lods
mov
dec
mov
cmc
adc
test
subl
mov
ret
test
add
push
push
push
push
out
push
cmp
lret
pop
rorl
iret
push
fsincos
push
loopne
inc
sbb
dec
and
mov
mov
and
xchg
fwait
ret
or
sbb
sub
push
dec
or
pusha
popf
adc
cmpsb
into
jo
in
add
add
int3
add
pusha
jne
add
pop
je
or
addb
shlb
mov
adc
adc
adcl
add
jmp
mov
inc
out
push
push
xor
loope
cmp
and
push
pop
jecxz
mov
dec
dec
inc
std
je
mov
int3
shrb
add
cmc
cmp
or
pop
xor
adc
mov
xchg
fwait
jp
pop
push
adc
and
push
decl
lods
dec
out
add
dec
arpl
adc
std
add
movsbw
ds
dec
inc
outsl
jno
jne
and
or
xchg
or
fwait
dec
inc
push
xchg
icebp
ds
add
mov
adc
xchg
mov
cmp
mov
hlt
push
inc
xchg
sub
sbb
inc
mov
pop
dec
cmp
adc
and
fmull
sbb
cs
mov
cld
adc
push
aad
sbb
jo
punpckhwd
sub
dec
and
fisttpl
aam
push
test
lea
stc
lock
fwait
ja
lea
out
cmpsb
pop
pop
dec
lods
repnz
xchg
sbb
xor
movl
mov
cmp
mov
popf
or
jne
pop
pop
iret
gs
in
js
gs
fwait
shrb
shll
push
sub
in
test
dec
sbb
jns
std
lock
mov
xchg
gs
and
inc
and
and
or
mov
adc
das
push
and
ficoml
faddl
loope
ficomps
sub
push
add
mov
insb
or
add
inc
pop
test
jmp
loop
adc
mov
ret
mov
pop
rorb
and
inc
loope
out
jmp
sbb
leave
inc
mov
push
rorb
sbb
and
jo
adc
add
or
sub
push
or
and
xor
adc
push
cmp
inc
mov
sub
jne
mov
das
push
mov
jmp
mov
ret
test
mov
adc
repz
mov
and
mov
clc
add
mov
mov
adc
xchg
add
imull
shrb
cld
leave
daa
ret
test
dec
xor
or
lds
lret
or
int
orl
cld
cmp
mov
clc
sbb
mov
lock
xchg
pop
dec
fsubs
mov
lods
fstps
fs
jne
loope
jnp
push
xor
repz
jno
mov
in
lret
xchg
sub
or
in
lds
pop
pop
dec
mov
mov
hlt
in
mov
add
movl
stos
mov
mov
gs
jo
and
mov
iret
es
jb
push
mov
mov
test
xchg
lock
mov
cmp
xchg
aaa
enter
fcomps
sub
mov
or
call
adc
add
push
inc
xor
jecxz
adc
adc
cmp
not
and
jne
or
and
jg
mov
movl
ficomps
inc
dec
inc
pop
inc
or
mov
scas
mov
inc
outsl
les
int3
arpl
sarb
insb
loope
add
push
repz
pusha
loopne
popa
push
ss
xchg
pop
adc
popf
mov
cmp
inc
xor
sbb
jmp
sub
and
jge
add
cmpl
cld
pop
bound
movsl
add
sbb
or
add
rol
pop
repnz
or
popa
rolb
push
cwtl
inc
aas
test
repnz
cmc
mov
inc
hlt
pop
test
and
sub
sub
cmp
aaa
xor
clc
mov
add
push
push
push
push
popa
call
mov
xor
mov
push
xchg
mov
sub
or
insb
jne
mov
nop
call
sub
lcall
lret
cmp
jne
lods
dec
fsubrs
mov
test
lcall
popa
add
xor
add
lahf
rclb
push
mov
test
stos
mov
pushw
dec
dec
xor
jecxz
jo
adc
push
inc
mov
lcall
adc
insl
mov
sbb
xchg
lret
and
mov
dec
mov
add
sub
mov
xor
cmp
dec
fists
scas
movsl
das
mov
jle
jmp
push
inc
cwtl
lcall
imul
imul
lea
inc
add
inc
lea
in
imul
push
lret
lods
fnstsw
mov
mov
imul
jb
pushf
cmp
jle
cmp
js
add
xor
jbe
jp
xchg
xchg
jbe
dec
insb
enter
xchg
scas
dec
mov
adc
push
aas
lret
jnp
pop
push
subb
sbb
push
movsl
mov
add
ss
cmp
and
ljmp
mov
add
dec
insl
push
rcr
pop
adc
js
xchg
inc
shlb
add
sub
xchg
mov
test
cltd
lock
pop
push
imul
enter
cmp
xor
pop
xor
add
adc
and
push
jne
jecxz
dec
jbe
and
inc
xchg
push
sarl
push
popa
shlb
adc
outsl
stc
mov
movsb
adc
insb
enter
mov
mov
xchg
push
cli
shll
and
cmp
push
frstor
fwait
cmp
inc
jne
loop
imul
clc
jo
or
jnp
add
scas
jl
mov
sbb
lods
and
aas
adc
cwtl
lea
and
shll
lea
xchg
add
adc
fstps
add
outsl
nop
mov
jecxz
rol
out
jg
xor
cmp
push
jo
inc
jbe
sbb
test
add
nop
cs
ja
mov
les
mov
jmp
adc
add
xchg
mov
std
arpl
xor
rcrb
mov
xchg
outsl
sbb
and
jge
scas
bound
enter
or
ficompl
pop
jnp
les
add
push
mov
lcall
xorl
nop
cmp
cmp
pavgw
in
jp
mov
add
fdivrs
pop
dec
pop
or
pop
mov
add
les
outsb
aam
adc
or
pop
int3
je
mov
clc
xchg
and
pop
push
loopne
loope
jbe
in
loopne
sti
push
pop
ret
iret
jmp
xchg
xlat
add
shll
in
sbb
or
dec
add
lcall
ret
xchg
adc
mov
push
daa
dec
mov
test
insb
xor
pop
cmp
test
jle
jno
xchg
pop
repz
dec
leave
or
fsubl
pop
sbb
loop
dec
test
and
add
pusha
or
dec
loope
sub
fstpt
sub
mov
sbb
lret
test
inc
adc
inc
pop
xchg
or
cmp
dec
adc
inc
test
mov
adc
lock
mov
repz
xchg
into
push
push
mov
push
shll
mov
cmp
fldenv
sbb
loopne
cmp
push
loopne
pop
rol
or
loopne
inc
mov
cmp
pop
rolb
mov
jnp
lret
mov
sbb
scas
aad
inc
xchg
sbb
out
mov
push
xchg
push
adc
nop
stc
jle
add
cmpw
stos
andb
sbb
cmpb
push
sbb
push
pop
add
ss
push
push
mov
add
sar
push
loopne
inc
jmp
xorb
jns
adc
pop
xor
ljmp
dec
jo
pop
xor
jb
test
mov
add
cld
xchg
cltd
lock
pusha
jne
dec
dec
push
sub
jl
sub
jmp
aad
mov
lcall
dec
movzwl
cmpl
push
adc
rorl
cltd
or
and
add
add
sbb
push
cs
jmp
sbb
add
mov
or
fimull
lea
jae
dec
xchg
sub
mov
mov
cmp
mov
cs
sub
test
mov
adc
and
pop
and
loope
mov
punpckldq
hlt
jne
jb
fs
and
dec
push
push
insl
add
shl
ret
add
pop
push
pop
push
dec
xor
jo
cmp
inc
and
lock
leave
dec
mov
mov
cmc
and
lret
add
sub
mov
and
pusha
sub
push
imul
or
test
or
lock
sbb
pop
loopne
gs
mov
or
sbb
or
inc
adc
xor
ret
inc
dec
and
lock
xor
add
sub
call
pop
xor
add
xorb
sbb
sub
out
push
inc
sub
pop
test
shll
xor
jmp
mov
xchg
int
mov
sub
or
sub
xchg
sbb
adc
xor
add
xor
inc
and
mov
dec
dec
or
add
adc
jb
xchg
adc
mov
js
stos
mov
cmp
rclb
stc
orl
fcoms
cmp
sub
sbb
ret
and
mov
push
sar
pop
movsb
or
shrb
pop
dec
daa
outsl
adc
imul
pop
je
or
jnp
jne
xor
push
and
xor
test
leave
or
dec
dec
xor
mov
cli
push
mov
inc
in
mov
shl
iret
jl
jne
lods
nop
mov
or
enter
dec
inc
sbb
sub
mov
mov
stos
mov
dec
pop
jne
mov
test
lret
xchg
xchg
or
mov
mov
push
rcll
ret
scas
adc
add
daa
xor
xor
mov
mov
jle
push
sbb
scas
xor
add
push
idiv
call
mov
ja
mov
inc
icebp
jmp
sbb
fmuls
xchg
sbb
jg
fadds
add
xor
test
lea
out
pop
adc
sbb
mov
push
jne
movsl
incl
cli
dec
xor
int3
and
mov
jge
mov
adc
lahf
in
jle
jb
adc
inc
mov
adc
clc
popf
fidivl
iret
inc
push
sub
nop
dec
and
pop
mov
mov
movsb
shll
outsl
and
test
mov
shrb
push
jecxz
push
xchg
inc
dec
cld
mov
rclb
aaa
pop
dec
sti
pop
or
jmp
push
push
das
popa
lret
addl
jmp
loop
jmp
je
or
push
mov
push
sub
inc
sti
pop
or
mov
mov
or
test
shrl
and
call
mov
add
test
xchg
xor
mov
add
pushf
xchg
xor
add
pop
jns
daa
add
or
jns
or
and
add
xchg
divl
adc
mov
sar
xchg
cmp
pop
ret
test
mov
les
aas
mov
push
dec
sub
push
or
push
in
add
jmp
sbb
adc
cmp
inc
inc
jmp
fwait
mov
jmp
sub
out
jnp
add
mov
jns
in
dec
inc
inc
dec
cmpsl
jno
push
inc
jne
mov
aas
and
adc
call
sbb
sub
sbb
or
dec
ja
xorl
mov
lock
inc
sub
adc
and
xchg
push
pop
ficomps
movsl
inc
xor
sbb
ret
push
hlt
lea
mov
arpl
call
fidivrs
movsb
pop
pop
movsb
xor
adc
jae
lret
dec
shlb
loopne
nop
mov
sbb
mov
aaa
lret
xor
ret
inc
int3
cmp
xchg
lahf
into
pop
mov
inc
inc
pop
cmp
jnp
sahf
sub
push
call
sbb
mov
pop
addl
dec
arpl
cmpl
movsl
push
addb
lahf
call
in
jl
pop
sub
imul
inc
lahf
outsl
loopne
pop
mov
xchg
add
dec
add
dec
shr
inc
enter
scas
sub
inc
movsl
cmp
mov
rolb
push
jb
rolb
cwtl
call
adc
ret
inc
mov
into
adc
and
add
in
int3
icebp
xchg
and
cmp
jno
push
pop
test
add
loop
dec
lock
jmp
add
gs
syscall
pop
lea
sub
dec
inc
leave
js
adc
xor
pop
lds
lea
push
push
mov
test
jne
cmp
pop
jae
mov
es
fucomp
adc
push
loope
mov
and
sbb
roll
cwtl
xor
icebp
mov
adc
leave
adc
gs
adc
mov
loop
or
adc
aad
push
pop
repz
cmpsb
adcb
jl
cmp
push
cmp
or
ret
push
je
adc
mov
push
adc
cmp
jmp
mov
lods
mov
jg
lods
clc
repz
cmp
out
push
xchg
cmpsb
sbb
push
iret
adc
out
xchg
or
mov
xchg
and
clc
fwait
in
lock
popa
loop
sub
cmp
sahf
push
jbe
ja
sahf
push
sbbl
test
mov
ss
cli
and
roll
rcl
shl
dec
push
loopne
push
mov
push
sub
jbe
enter
dec
jns
mov
hlt
hlt
lea
ret
mov
inc
dec
add
lock
ret
mov
and
or
inc
or
add
pop
incl
outsl
sbb
or
mov
inc
sbb
or
adc
rdtsc
cs
or
push
sub
inc
push
sbb
lret
push
mov
xor
lret
in
adc
lea
loope
int
repnz
les
cmpsl
mov
dec
fwait
mov
sbb
mull
or
pop
iret
or
aaa
dec
cli
push
aaa
mov
leave
cmc
in
push
mov
arpl
aam
sbb
sub
push
sar
fadds
shl
icebp
subb
lock
scas
test
inc
add
or
mov
sbb
fs
shl
jp
jne
mov
sbb
inc
loope
pushf
lea
mov
push
mov
push
mov
jne
push
inc
inc
icebp
lea
mov
xchg
xchg
add
sbb
lea
ret
rol
roll
sbb
or
or
jb
sub
xor
test
sub
in
and
xor
adc
cmp
int
roll
insl
pusha
les
push
mov
xorl
mov
xchg
push
or
dec
sbbb
mov
or
xchg
push
or
in
or
push
inc
mov
mov
insb
loopne
push
popf
mov
or
pop
sbb
push
pushl
pop
pushf
push
sbb
xlat
sbb
ja
test
icebp
adc
and
push
push
push
jecxz
mov
xor
add
lock
mov
icebp
loope
push
or
pop
inc
pushf
cwtl
add
lds
cmp
xchg
xchg
mov
in
or
popa
ret
jecxz
in
test
mov
mov
pop
xchg
aad
and
sub
cmp
test
mov
xor
adcb
xor
cmpsl
lret
mov
sub
leave
movsl
cmpsl
adcl
add
test
xchg
add
pop
add
adc
iret
pop
inc
prefetchnta
in
jmp
cmpsl
bound
mov
rcr
mov
call
dec
dec
mov
pushf
mov
mov
cs
idivb
push
or
imull
pop
or
cmp
push
add
aaa
pop
xchg
adcl
push
sub
pop
inc
loopne
push
cmp
movsl
fadds
pop
lea
daa
movsb
je
push
cmp
push
popa
cmpsl
mov
and
rorb
or
sub
pop
in
push
jmp
mov
inc
rorb
push
inc
dec
push
test
scas
cmp
cwtl
lods
sti
sub
andl
sbb
jb
lret
and
fwait
mov
mov
cmc
sbb
xor
bnd
pushf
pusha
pop
xorl
in
es
push
divb
xor
inc
and
mov
mov
movsb
inc
sub
push
daa
es
xchg
cwtl
pop
jns
int
jl
push
aad
push
add
and
sub
add
test
scas
jns
popf
cld
icebp
roll
dec
pop
sub
jge
xchg
jl
in
repz
or
sbbb
sbb
sub
cmpsb
into
shlb
adc
mov
pop
jmp
mov
cmp
sub
test
sti
inc
sub
popa
loope
shlb
sbb
rcr
test
je
insl
fwait
clc
add
cmp
and
adc
dec
or
add
mov
cmp
rorb
lea
and
fcom
mov
fisttps
and
sub
xchg
and
insl
add
jnp
xchg
mov
xchg
add
sub
sbb
add
and
xchg
daa
das
mov
add
aad
je
sbb
sub
inc
sbb
and
add
push
and
sbb
imul
push
or
and
mov
add
add
xchg
or
test
jne
insb
or
mov
xor
call
and
test
cmpsb
sub
cmp
fdivs
sub
fcoml
jns
sbb
sbb
push
dec
inc
lahf
nop
jge
les
and
sbb
imul
lock
add
mov
dec
out
push
inc
repz
adc
mov
mov
push
xor
xor
sbb
push
jge
sbb
cwtl
xchg
imul
in
and
pop
inc
dec
sbb
cmpsl
pop
test
and
test
and
jnp
dec
inc
rclb
outsl
mov
or
jno
cmp
shr
cmp
dec
mov
mov
inc
add
adc
lods
add
fldl
sbb
push
daa
mov
lods
sub
test
cwtl
pop
sbb
jl
mov
inc
hlt
xor
outsb
cmp
decl
dec
and
add
movzwl
add
pop
movsb
cmpsl
push
lock
sbb
mov
sbb
pusha
add
test
inc
or
pushl
rcrb
test
mov
lods
jns
sbb
fiadds
sub
daa
jne
mov
mov
xor
adc
in
or
jo
cltd
pop
xchg
xchg
mov
push
idivb
mov
mov
movsl
scas
repz
into
out
sbb
dec
fimull
add
adc
pushf
jbe
pushf
dec
mov
es
mov
or
xor
adc
out
jo
test
cmp
xor
inc
push
mov
clc
out
or
sub
push
pop
push
xor
lods
mov
sarl
fmuls
fidivs
cld
gs
cli
add
jl
adc
in
cmpsb
sbb
sbb
push
into
xlat
jp
setb
add
in
sbb
icebp
mov
loopne
and
daa
in
ret
add
xor
adc
in
inc
adc
push
adc
add
rcl
pop
lcall
jbe
mov
jno
push
jmp
pop
push
pop
or
mov
mov
adc
scas
xor
int3
mov
mov
movsb
pop
orl
add
sub
sbb
jecxz
push
xlat
or
adc
ret
les
arpl
push
and
cmc
test
or
ss
jl
push
and
adc
sub
jo
and
cmpsb
js
orl
ficompl
call
je
loop
cmp
add
add
push
arpl
push
adc
pop
stos
aaa
jno
jne
and
adc
mov
jle
cmp
jp
add
sub
dec
pop
divl
nop
or
scas
jns
insl
sbb
cmp
inc
icebp
adc
mov
test
sbb
push
inc
es
repnz
xorl
xor
cmp
sbb
gs
inc
cmpsl
add
pop
sbb
add
enter
cmp
stos
inc
es
and
lea
mov
or
or
sub
ficoms
mov
adc
mov
sbb
push
jmp
mov
mov
lds
dec
add
lock
jge
mov
push
add
dec
cmp
or
dec
cmp
inc
push
ds
or
ja
punpcklbw
cmp
push
in
aam
loope
mov
sbb
inc
daa
cmp
mov
mov
fdivl
mov
js
and
and
xchg
push
and
or
jb
repz
sub
addl
sbb
add
mov
push
or
pop
inc
lret
push
pop
and
notb
lock
add
cs
cmpsl
and
rcll
mov
inc
es
pop
jge
pop
jns
std
add
push
push
mov
jp
push
jno
filds
jne
mov
fwait
cmp
out
or
lds
mov
mov
je
mov
or
insb
enter
push
cli
push
dec
inc
push
and
bts
test
pusha
mov
xor
hlt
and
sbb
and
jae
adc
aaa
je
lds
dec
push
adc
ret
inc
and
mov
push
addl
inc
and
inc
pushf
or
xchg
add
test
dec
test
pushf
out
sub
test
sbb
adc
or
cwtl
adc
test
daa
fs
mov
pop
push
dec
pop
push
shlb
mov
jnp
sub
pop
or
xor
adc
scas
xor
fldz
sarb
ja
xchg
cmp
rorb
lods
in
js
clc
aaa
je
sbb
adc
xor
pop
cltd
pop
or
inc
in
or
mov
int3
aam
or
jns
add
and
fimuls
ret
or
adc
lea
push
or
sbb
xchg
sub
sbb
pusha
sbb
xchg
test
jnp
mov
insb
fcoml
inc
sub
cmp
js
roll
repz
sbb
out
and
cltd
fldt
test
add
fisttpll
mov
lds
leave
mov
lret
stos
xchg
mov
mov
and
push
push
sbb
pusha
mov
xlat
popf
ljmp
cmp
out
inc
adc
push
mov
cmp
and
iret
or
test
dec
int3
xchg
push
push
sub
xchg
mov
add
nop
cmpsb
jl
ret
xchg
leave
rolb
xor
leave
lahf
jne
scas
ja
add
das
or
pop
add
pop
pop
and
push
jle
jne
das
lds
jo
sbb
push
adc
sahf
add
jg
push
add
cmp
pop
aam
les
pop
pop
mov
sub
push
push
adc
sbbb
icebp
jne
mov
int
inc
pop
add
push
je
movsb
xor
popa
push
pop
cmpps
jb
xor
mov
push
popa
mov
add
cmc
cmp
test
mov
lods
pop
or
jbe
mov
sub
sub
or
pop
adc
movsl
addl
push
push
sub
xchg
push
inc
imul
scas
mov
or
inc
and
ret
sub
inc
sub
es
sub
push
stos
in
addr16
sbb
mov
sbb
pop
mov
mov
cmpsb
push
stos
sub
data16
fldenv
adc
push
addr16
ja
ret
inc
or
pop
subl
lcall
adc
cli
mov
dec
mov
in
add
nop
mov
jo
cmpsb
adc
inc
dec
jcxz,pn
xor
sbb
or
sub
popf
sub
ret
lcall
aas
mov
jb
iret
push
sub
lea
push
push
or
sbb
outsl
inc
movups
mov
pop
jo
sub
push
leave
mov
ret
xor
hlt
mov
ret
sti
mov
and
cmp
test
push
ret
in
les
insl
mov
cltd
ss
fcoml
es
or
and
rolb
pop
out
enter
inc
mov
inc
stos
fisubs
push
pop
xor
jne
repz
and
popa
add
int3
mov
pop
adc
push
and
rcrl
pop
ret
das
cmpsl
lea
lods
adc
test
outsb
inc
mov
fstl
sub
gs
imul
mov
lock
mov
pop
arpl
push
idivl
push
les
lahf
dec
call
es
add
mov
in
adc
stos
pop
ret
jno
cmpsl
and
cld
adc
jnp
fwait
testl
leave
pop
cmp
jbe
inc
pusha
push
adc
push
repnz
push
jb
lods
mov
andl
test
jbe
jl
adc
into
inc
push
adc
mov
call
inc
dec
ds
push
aas
inc
sub
inc
adc
imul
fldz
and
add
and
cmp
and
scas
jge
add
sub
pop
xor
cmp
sbb
fidivs
xchg
rcr
ss
push
add
sbb
testb
cmpsb
or
fidivrs
mov
xor
jecxz
add
enter
sub
ficoml
mov
rcrb
or
adc
addr16
pop
fmuls
mov
incb
push
data16
add
sub
movsl
les
dec
movsl
mov
or
add
call
cwtl
xchg
pop
fwait
pop
lahf
xor
xchg
push
inc
sbb
jle
push
add
outsb
scas
in
faddl
cmpl
push
or
fsts
add
cmp
jle
lds
jl
push
cmp
push
cmp
jle
cmp
jp
push
cmp
fisttps
push
cmp
mov
mov
push
add
inc
jmp
pop
or
push
movw
and
mov
push
mov
idiv
iret
mov
dec
fwait
inc
or
fs
pop
idiv
imul
call
inc
andl
clc
std
adc
and
mov
jnp
add
inc
jbe
mov
mov
je
loopne
jno
push
mov
outsb
push
push
hlt
cmpsl
test
imull
mov
fldt
mov
or
mov
int
sub
je
rcl
inc
sbb
cmp
sub
dec
addr16
cs
push
cmp
adc
adc
or
sbbl
inc
outsl
int3
cmp
fdivs
pop
int
cmp
push
mov
xor
mov
ds
addr16
lahf
add
xchg
in
cmp
push
into
aas
adc
inc
jb
push
iret
cmp
push
fs
ds
jne
pop
adc
pop
or
popf
mov
imul
push
dec
adc
insl
or
andb
or
insl
add
or
add
ss
cwtl
std
imul
or
sub
and
ja
sub
pop
je
das
loopne
fcompl
stos
outsl
mov
jl
mov
pop
adc
adc
pushf
xchg
mov
mov
add
push
data16
add
sub
sub
in
cmp
adc
or
cmp
and
sbb
stos
sub
lcall
and
nop
or
in
pop
popa
adc
enter
xor
insl
add
push
cwtl
outsb
cmp
arpl
jb
sbb
ret
inc
js
sub
jg
sbb
and
push
rcr
leave
enter
sbb
les
and
sbb
fs
dec
popa
mov
pop
cmpsl
sbb
jnp
fwait
mov
es
ds
inc
and
add
subb
inc
add
dec
scas
loopne
pop
sub
fnsave
pop
adcl
ljmp
movsl
inc
and
mov
dec
cs
cmp
in
push
aad
sbb
test
in
xchg
call
sbb
or
nop
sbb
cmp
sbb
popf
or
inc
adcb
sbb
jb
pop
jmp
or
adc
pop
rcll
or
add
or
in
hlt
inc
add
sub
xchg
adc
mov
push
cltd
or
or
or
test
and
sub
fldl
in
push
push
xor
mov
add
outsb
sbb
push
dec
mov
add
fsts
xchg
xor
fwait
loope
inc
mov
inc
mov
or
pusha
les
xchg
lahf
rol
jo
xor
and
and
or
adc
add
inc
dec
add
xchg
sbb
push
cmp
or
add
aaa
inc
icebp
ficoms
inc
xor
xchg
xor
add
mov
shrb
es
insb
mov
dec
rcll
mov
nop
add
or
in
adc
mov
sub
outsl
popa
addl
add
lods
push
bswap
lods
add
pop
fadds
or
lock
nop
adc
add
xchg
sbb
fiadds
or
adc
push
lea
sbb
mov
push
and
pavgb
ja
outsl
fsubr
fdivrl
push
or
outsl
push
jp
add
ror
pop
sub
fadds
push
pop
sbb
and
pop
loopne
pop
das
sbb
jbe
test
roll
or
and
insl
mov
rcr
add
aam
imul
push
lret
mov
les
push
insb
add
gs
pop
fsubs
sbb
push
popa
popa
inc
cmp
jne
stos
or
mov
sub
sub
push
push
xchg
add
xlat
hlt
pop
xor
fildl
xchg
pop
enter
orl
inc
idivl
inc
dec
sbb
jne
or
shll
xlat
and
add
repz
leave
push
pusha
xchg
jae
xor
dec
cmp
cmpsl
movsb
push
nop
imul
popa
jmp
pusha
add
add
sbbb
pop
pop
mov
pop
xor
hlt
das
adc
adc
lea
mov
cld
aaa
add
jo
lea
ret
mov
ret
mov
xor
jecxz
add
mov
jbe
roll
adc
loopne
pop
mov
lods
pop
cmp
cmp
jge
add
mov
pop
cmp
inc
xorb
inc
push
aas
rorl
mov
push
xor
pop
mov
mov
out
mov
sub
movsb
add
testl
or
xchg
outsb
push
sub
xchg
cltd
std
jg
jo
loop
fcompl
fnstsw
test
je
add
aas
repnz
movl
xor
push
sbb
std
jbe
ds
incb
fstpl
and
fstpl
add
mov
fstpl
pop
cltd
mov
mov
das
or
mov
fcompl
mov
jo
add
adc
pop
fsub
pop
fsubrp
mov
enter
rorb
and
fcoml
cmp
pusha
mov
dec
pop
lds
neg
jbe
imulb
aaa
inc
xorl
xor
mov
sub
add
movsl
sbb
push
or
push
adc
shll
inc
dec
mov
adc
jns
stc
jge
sahf
adc
je
das
inc
sbb
into
mov
and
mov
cwtl
pop
and
pushf
sub
adc
sbb
iret
mov
fldt
jns
call
js
dec
adcl
aaa
push
adc
sarb
and
sub
mov
les
or
in
add
in
lret
and
inc
or
mov
and
mov
mov
mov
jo
add
mov
add
push
adc
jp
lock
pop
add
out
stos
xor
shld
add
ja
jb
clc
ltr
ja
lea
push
push
and
add
push
je
popa
pop
sbb
mov
leave
adc
mov
push
adc
push
push
push
mov
or
mov
or
cli
insl
adc
pop
mov
push
testb
push
outsb
leave
and
lea
inc
insl
sub
cwtl
int
push
mov
adc
mov
push
mov
push
ja
ja
fmull
test
inc
fadds
ja
inc
ja
add
adc
push
orb
das
test
jb
incl
mov
cmpw
jne
fbld
inc
cld
cmp
filds
inc
push
jge
mov
insl
ljmp
insl
lea
cmp
or
or
sbb
leave
out
psrld
pushf
or
xchg
inc
xchg
divl
push
push
nopl
dec
inc
test
cmp
inc
push
dec
ret
movsl
dec
scas
mov
dec
lds
nop
in
insb
jge
sub
or
xchg
mov
mov
xchg
dec
xor
rclb
push
sbb
fidivl
adc
add
add
xor
jle
cmp
mov
mov
mov
std
jnp
rcl
adc
push
or
fs
pusha
sub
stos
insl
sbb
ja
fnstenv
movsl
jne
add
mov
mov
lahf
push
pop
imul
es
test
mov
stos
dec
xor
adc
mov
mov
mov
jae
movsb
std
sub
adc
les
int
cs
xor
imul
movsl
jl
out
push
adc
add
pop
ss
xchg
dec
daa
and
adc
pushf
scas
or
mov
or
and
adc
or
push
inc
add
xor
jg
fmuls
idivl
out
xchg
lods
js
inc
addb
cwtl
push
insl
nop
add
xchg
sti
pop
je
push
addr16
push
and
enter
ret
pop
add
sbbb
dec
ds
xorb
push
pop
loop
in
mov
test
mov
pop
wrmsr
int3
xor
add
pop
mov
aaa
lahf
sub
inc
ret
inc
add
inc
das
jge
add
inc
adc
sub
rclb
or
test
pusha
xchg
aas
fidivrs
cli
push
mov
or
push
adc
ret
ljmp
or
xchg
or
test
cmp
xchg
sbb
and
movl
pop
in
outsb
ljmp
js
arpl
cs
push
or
outsb
add
xchg
sub
lock
cmpb
popf
xor
push
inc
les
push
and
adc
xchg
adc
stos
mov
push
push
push
cmpl
outsb
or
dec
and
int
scas
sub
popa
sub
push
popa
jge
push
pushf
aam
loope
ljmp
jno
dec
jmp
mov
xor
orb
stos
add
cmp
mull
xor
mov
fs
or
xchg
jl
fwait
cmpsb
std
fildl
int3
and
je
add
sbb
dec
ja
dec
ljmp
jmp
or
xchg
or
xchg
jmp
or
fsubs
push
push
insb
imul
dec
mov
out
out
sub
and
or
jmp
or
mov
mov
jmp
jge
jmp
or
xchg
sbb
lea
scas
imul
fmul
test
loopne
cmp
hlt
push
jb
inc
mov
or
enter
push
je
nop
sbbl
loopne
or
cmp
xor
cwtl
xchg
and
int3
fcoml
push
xorl
pop
push
cld
dec
sbb
enter
dec
jo
jb
and
nop
inc
push
dec
adc
fs
inc
push
cmp
and
cmp
fdivr
dec
sbb
sbb
enter
nop
sbb
enter
lock
orl
lahf
inc
mov
cmp
adcb
push
and
dec
xchg
cmp
push
inc
push
push
pop
outsl
out
sahf
out
orl
sahf
stos
mov
leave
repz
cmp
rep
push
pop
adc
and
repz
push
popa
iret
repz
imul
xchg
popf
cmp
repz
mov
cmp
repz
in
notl
add
push
xchg
sbb
and
xchg
scas
cs
pop
push
jae
push
aaa
add
loopne
push
mov
aaa
sub
dec
mov
xor
adc
cltd
inc
je
push
addr16
mov
out
lea
imul
roll
sub
lock
or
ja
jo
hlt
adc
xor
std
mov
lahf
fwait
jmp
jl
mov
mov
cmp
pop
lock
je
and
inc
mov
push
mov
mov
out
faddl
ud1
leave
mov
nop
faddl
push
jne
popf
dec
mov
fsubl
cmp
js
insl
xlat
cmp
xor
or
cmpsl
xor
int3
loope
dec
shlb
xor
mov
nop
pop
dec
addr16
pop
test
test
adc
push
outsl
les
jecxz
xchg
popa
lcall
add
dec
mov
xor
push
adc
jg
cmpb
jge
jnp
inc
pop
push
cmp
push
xchg
or
mov
mov
adc
xchg
icebp
add
idivl
jg
dec
xor
filds
ja
or
inc
inc
and
rcr
sub
pushf
mov
dec
je
call
push
push
xchg
cmp
dec
fxch
mov
sbb
ret
test
fadds
shrb
enter
sub
push
add
pop
xor
adc
sar
or
sub
push
jmp
sbb
test
out
jmp
cmp
loop
orl
sbb
jb
loope
fadds
test
ficoml
pop
jp
push
enter
scas
sub
lahf
and
or
and
aad
push
arpl
jae
insb
mov
xchg
dec
sub
movhps
adc
mov
or
push
out
mov
sbb
xchg
sbb
les
push
and
inc
jg
jne
mov
je
mov
repnz
loop
mov
out
push
cmp
or
sub
add
rolb
sub
push
jb
xor
mov
mov
icebp
push
and
adc
insl
mov
lahf
sub
pop
mov
fs
push
in
mov
shlb
dec
jl
cs
and
xchg
sub
mov
pusha
cwtl
nop
negb
sub
xor
fwait
nop
and
xor
imul
or
jle
icebp
xlat
jno
xor
xor
mov
jbe
sbb
enter
and
int
int
jo,pn
jl
and
sub
sub
dec
mov
in
mov
pop
ss
js
mov
mov
lds
stos
int3
jl
mov
test
dec
stos
push
adc
shlb
lret
pop
enter
mov
xlat
pop
inc
pop
mov
sbb
imul
les
xchg
pop
pop
pop
and
mov
js
add
in
add
and
nop
cmp
int
lahf
pop
inc
push
mov
imul
lods
jl
add
inc
add
in
lock
sbb
cmp
push
xor
dec
push
mov
mov
inc
xchg
mov
xchg
and
push
add
int
sbb
sub
movsb
jmp
sbb
es
test
mov
adc
or
adc
dec
pusha
xchg
orl
bound
cmp
pop
push
mov
cmp
inc
xchg
jnp
hlt
pushf
or
pop
cwtl
xchg
enter
addl
nop
imul
cld
test
cmp
rorl
mov
fmul
dec
roll
lret
lret
cmp
in
mov
sub
dec
pop
movsb
jne
jne
aas
pop
test
mov
sbb
push
add
xchg
jnp
jb
and
test
inc
lock
and
test
inc
push
adc
daa
cmp
dec
xor
in
push
inc
adc
push
popa
lds
inc
push
add
fsubr
test
and
pop
cmpsl
fwait
shl
xchg
jo
cmp
cmpl
inc
cmp
dec
jno
sti
daa
dec
or
inc
arpl
sbb
fmull
out
and
sahf
inc
sub
imul
nop
mov
scas
or
sub
jmp
push
sub
vpunpcklbw
aad
stc
nop
cwtl
mov
lea
push
cmp
pop
dec
push
dec
in
xor
mov
mov
dec
add
mov
pop
ljmp
sbb
ret
popa
jnp
push
cmp
call
mov
push
js
js
out
sbb
int
dec
fs
shrb
sub
pushf
add
movsl
or
push
or
lcall
addl
add
and
mov
push
add
inc
add
nop
faddl
loope
mov
mov
pop
int
push
fidivrl
inc
mov
lcall
dec
dec
push
movsl
sub
add
enter
into
sub
or
mov
dec
iret
les
mul
mov
or
fld
add
fidivl
mov
rol
rcrl
or
leave
nop
push
cwtl
int3
outsl
leave
jae
paddusb
adc
push
adc
mov
lahf
imul
xchg
out
or
es
mov
lock
push
push
imul
mov
cmp
add
jae
push
pop
xchg
cwtl
and
fcoms
je
lcall
nop
sbb
sbb
mov
movsb
imul
jo
push
imul
pop
pop
mov
cmpsl
mov
js
mov
lcall
push
mov
outsb
xor
leave
xor
push
add
addl
mov
inc
sbb
push
pop
xchg
xor
sub
daa
cmc
rolb
xor
adc
cs
imul
imul
test
cwtl
mov
xor
inc
or
imul
xchg
xchg
and
jo
push
pop
pusha
push
pop
and
or
fmul
xor
dec
push
inc
xor
aad
into
and
or
pushl
mov
les
arpl
or
push
cs
push
mov
pop
pusha
rolb
add
lock
outsl
push
pop
sti
mov
jne
rcll
imul
test
pop
aaa
mov
test
xchg
faddl
xor
mov
shlb
xchg
mov
pushf
int3
push
repz
xchg
call
push
or
push
jbe
js
mov
jp
mov
jge
rclb
push
or
xor
add
mov
mov
dec
add
lea
jmp
pop
mov
jl
jp
lds
and
std
inc
add
jge
and
subl
adc
push
adc
xor
je
mov
inc
mov
push
fadds
jbe
movsl
pop
pop
pop
push
shll
dec
lods
pushl
mov
fists
mov
mov
mov
lods
mov
sbb
mov
cwtl
sbb
pop
inc
sbb
push
sbb
or
mov
roll
inc
ss
mov
and
les
ljmp
xchg
and
cmp
mov
pushf
cwtl
mov
push
adc
int
pop
xchg
add
int
insb
or
daa
adcl
sub
mov
jbe
enter
dec
cmp
push
lret
pop
je
jo
add
flds
int3
pop
arpl
mov
jbe
push
xor
xlat
cmpsl
push
cmp
sub
mov
pop
mov
dec
mov
mov
sbb
sub
mov
jo
movsl
xchg
insb
mov
mov
add
and
and
andl
and
stos
out
int3
xchg
sbbl
enter
sbb
sbbl
push
add
pop
pop
or
sbb
push
adc
or
adc
cmp
xchg
push
sub
bound
or
aas
add
xor
mov
dec
push
jmp
and
xchg
push
sub
lea
add
imul
outsb
pop
lea
add
add
dec
mov
inc
rolb
test
and
mov
add
rclb
clc
out
aaa
clc
cmp
movsb
and
push
aas
daa
lea
sbb
shll
push
ret
adc
stos
push
cmp
sub
notl
into
add
test
stos
sbb
xchg
fcoms
mov
or
add
dec
loopne
cmp
inc
cmpsl
and
test
cmp
cmp
jbe
clc
add
fcoml
pop
push
pop
push
jmp
and
aas
xchg
jp
ljmp
xchg
sub
aad
sbb
adcl
inc
daa
movups
and
ss
out
inc
jl
and
xchg
add
cmp
inc
adc
pop
jo
pop
inc
jg
sbb
stos
mov
cmp
and
pusha
ljmp
clc
sbb
xchg
or
sub
jb
mov
fsubp
js
mov
sbb
je
push
addl
and
repnz
fnstcw
add
leave
js
mov
pop
cmp
add
icebp
fisttps
jbe
mov
xchg
cmp
jne
inc
add
jb
jl
les
xor
inc
popa
pop
add
hlt
subl
adc
aam
or
iret
jne
pop
fiadds
push
jnp
movsb
repz
jae
inc
add
nop
cmp
cmc
mov
and
je
mov
dec
rcl
or
mov
scas
push
inc
loope
xchg
pop
mov
adc
imul
shlb
xchg
aad
pop
test
popf
inc
xor
into
add
test
fadd
xor
cltd
sahf
jo
ret
gs
dec
xlat
aad
xor
or
add
imul
mov
sbb
adc
pop
inc
ljmp
cs
add
jp
or
or
shlb
daa
sbb
add
add
call
xchg
pop
dec
call
xchg
and
scas
and
add
fadds
and
jno
stos
arpl
dec
ds
sub
and
dec
lret
add
aaa
xchg
jmp
cmp
jl
or
je
cmp
pushl
or
and
mov
movb
movsbl
shr
mov
pop
mov
and
mov
nop
inc
mov
into
push
adc
leave
jne
pop
push
movsl
nop
fidivrl
xor
jmp
add
pop
jne
push
sub
sbb
add
mov
loopne
mov
dec
mov
out
insb
loop
clc
xchg
cmc
int
jo
je
push
stc
dec
mov
movsb
aaa
jns
jge
test
add
adc
add
push
ror
test
add
dec
sbb
lret
loopne
and
lods
shrb
jnp
orl
lock
and
inc
sbb
or
je
dec
and
add
xchg
mov
mov
mov
mov
das
mov
mov
or
mov
popa
shlb
lock
int
jge
push
cmpsl
mov
bound
pop
test
add
push
enter
or
sub
pushf
nop
xchg
insb
ja
imul
jns
in
je
and
xlat
add
adc
xchg
push
test
repnz
hlt
and
mov
ss
idivl
mov
decl
sbb
and
jmp
cmp
pop
cmpsb
xchg
hlt
cmp
fcomps
push
les
out
xor
mov
clc
test
push
mov
cwtl
jb
dec
shlb
sahf
dec
mov
pusha
mov
xchg
jl
mov
cmpsl
or
dec
xchg
add
out
cmp
shl
mov
addr16
jl
or
xor
mov
decb
dec
nop
pop
or
daa
pop
dec
pusha
mov
inc
daa
inc
nop
push
popa
lcall
mov
jecxz
leave
dec
loopne
sbb
adc
faddl
mov
and
inc
dec
and
leave
add
add
out
imul
sbb
push
repnz
mov
inc
and
or
hlt
push
addr16
sub
dec
mov
and
and
addr16
mov
lcall
sbb
insl
xchg
sub
insl
inc
in
sbb
mov
sub
shll
pop
ret
or
leave
inc
dec
mov
lcall
mov
outsl
mov
imul
mov
jne
repz
lret
dec
sbb
ret
and
mov
xor
push
xor
inc
js
mov
sub
repnz
jne
or
push
push
add
dec
jns
adcl
cmovl
pop
nop
xchg
xchg
mov
xchg
sbb
cmp
pusha
arpl
xchg
xchg
add
cmp
movsl
push
fistl
fistps
xchg
adc
lods
insb
orl
jle
call
mov
dec
test
add
add
or
jnp
imul
out
rolb
adc
pop
push
add
test
dec
shll
push
adc
or
movsb
mov
test
sbb
test
lods
push
push
scas
nop
mov
call
lea
jnp
ljmp
xor
enter
rcl
fwait
jns
lods
aam
lea
xchg
pop
xor
or
iret
int3
adc
xchg
ret
jp
ret
or
sbb
xor
or
xor
gs
sub
stos
mov
fstpt
and
lret
rclb
cmp
xchg
sbbl
xor
fdivrl
int3
and
jne
pusha
inc
test
inc
data16
and
gs
sub
xorl
jp
xchg
mov
and
cmpsl
je
stos
mov
test
lock
sub
adc
pop
cmp
sbb
push
xorb
leave
mov
movsb
mov
in
and
cmp
je
push
les
xlat
cmp
iret
ljmp
je
insl
dec
sbb
and
adc
shl
les
sbbb
hlt
popa
mov
and
and
xchg
sub
mov
insl
pop
shr
jecxz
cld
xor
jl
das
scas
movsl
push
cli
shrl
dec
sbb
test
in
test
in
cmp
out
clc
adc
dec
push
dec
rcl
mov
xor
jne
add
add
je
inc
dec
cmp
jl
jl
mov
js
jge
popf
imul
hlt
add
sub
scas
test
int3
ret
push
mov
shlb
and
les
nop
cs
cmp
xchg
aam
ret
push
pop
sub
dec
leave
add
cmpsb
movsb
enter
inc
cmp
icebp
xor
xor
mov
adc
lea
std
jo
mov
cmp
inc
jne
xchg
out
sub
in
pop
and
jl
andl
adc
pop
pop
inc
daa
inc
scas
loopne
mov
xor
or
push
lahf
mov
dec
xchg
call
setl
mov
sbb
dec
mov
add
mov
xor
lods
in
push
push
aad
or
xchg
adc
inc
das
je
jge
sti
and
jg
mov
sub
inc
sbb
push
test
xor
nop
xchg
mov
mov
cs
in
lret
movsl
in
jle
cmp
call
jo
pcmpeqw
jno
loope
jle
fisubs
inc
sbb
mov
out
int
pop
imul
mov
xchg
insl
mov
inc
push
sub
sub
xchg
xchg
push
fisttpll
cmp
xor
sbb
sbb
cmc
jno
rorb
jmp
inc
inc
stc
sbb
lret
and
inc
and
adc
or
cli
sti
test
mov
ljmp
jne
ja
mov
jbe
cmp
push
or
pop
inc
inc
cld
push
insl
roll
mov
mov
call
jl
push
loop
test
jns
cld
pop
add
xchg
sbb
adcl
pop
ret
hlt
add
jmp
es
pop
pop
pop
ret
pop
pop
test
add
push
rclb
adc
daa
mov
dec
out
push
fldl
xor
mov
lahf
inc
sbb
inc
data16
into
outsl
inc
add
out
jne
daa
bnd
adc
cmp
iret
repz
jne
or
jne
or
je
and
dec
sahf
push
push
and
int
js
nop
ret
add
pop
mov
bound
popa
imul
mov
push
lea
mov
fistpl
inc
dec
iret
clc
ja
push
inc
inc
pop
sub
push
jl
mov
lea
repnz
or
fstpl
lea
cmp
mov
mov
or
xchg
xor
orl
cmpb
ret
mov
sbbl
jl
lds
clc
sub
sub
xor
or
adc
movsb
insb
dec
cmc
mov
adc
addr16
cmc
int3
imul
push
shll
je
movsl
jne
adc
xor
adc
cmp
and
popf
or
pop
fstl
jmp
int
inc
sub
fcom
loopne
ror
sti
gs
inc
lea
jo
adc
xchg
shll
popf
add
dec
jl
icebp
loopne
mov
sbb
push
ss
ret
lock
shlb
loopne
movsb
lock
sbbl
push
xchg
insl
mov
adcl
jmp
orl
outsl
pusha
cmp
pusha
inc
enter
xchg
test
in
sbb
mov
fs
insb
push
fs
push
jne
iret
push
repnz
fs
xor
add
fs
pushl
pop
add
icebp
les
mov
dec
dec
push
xor
sbb
push
popa
xor
jl
adc
or
mov
pop
nop
idiv
or
add
inc
sub
cwtl
call
or
into
testl
int
mov
sub
dec
filds
xor
jnp
loopne
mov
add
enter
repz
add
dec
pop
addr16
or
test
rol
lods
fs
push
or
sub
pop
xor
and
push
mov
mov
fdivl
push
jb
clc
sahf
mov
push
add
pop
mov
pushl
dec
cltd
jge
mov
or
sub
cmp
pop
add
andb
leave
or
mov
inc
dec
mov
addl
add
or
sub
pop
inc
inc
xorl
movsl
mov
add
or
inc
cmpsl
rep
mov
scas
fcoms
push
xchg
pusha
sbb
daa
das
sbb
jo
xor
js
jmp
xorl
in
push
les
and
push
dec
das
test
sbb
xor
call
cmp
push
or
push
nopl
and
adc
xor
mov
leave
and
inc
adc
fmuls
arpl
and
adc
lds
cmp
inc
adc
fadds
dec
enter
or
dec
add
xchg
outsl
push
adc
sbb
adc
sbb
repnz
jae
push
sbb
aam
inc
lcall
test
sti
loopne
push
inc
and
daa
inc
mov
das
and
inc
es
daa
ret
sbb
jmp
add
hlt
data16
sbbb
cli
or
adc
add
and
dec
dec
repz
pop
cmpsb
push
mov
sub
or
mov
insb
and
imul
cwtl
add
push
or
sbb
in
pop
js
xchg
xchg
dec
mov
lods
xchg
inc
adc
add
imul
shlb
inc
or
pop
adc
sub
xor
and
js
adc
adcb
add
push
xchg
pop
lea
fs
or
sbb
fdivrl
sub
testl
push
lahf
test
xor
sub
xor
jne
xchg
loopne,pn
in
aam
cmpsb
test
mov
dec
add
and
push
push
jo
movsb
sbb
ret
push
add
sahf
pushl
ljmp
hlt
fsubrl
pop
dec
pop
inc
sbb
les
je
lcall
xchg
fldpi
lods
or
in
call
xchg
add
mov
out
or
mov
xor
sbb
cmpb
pusha
adc
mov
jge
jecxz
mov
shlb
sub
or
dec
pop
inc
pop
xchg
andb
dec
sub
and
inc
je
aas
roll
mov
sbb
mov
or
push
call
outsb
sub
mov
fcomip
add
mov
pop
emms
fsts
out
sub
repnz
ja
xorl
test
or
lahf
sub
out
add
xor
cs
repnz
aaa
push
cmpsl
adc
adc
scas
inc
cld
and
push
inc
or
xchg
add
jne
pop
mov
inc
cmpsl
test
inc
fsubrs
mov
and
jne
sub
or
jmp
sub
jle
xor
adc
sysexit
adc
sub
cmp
js
sbb
push
xor
bound
xor
pop
aaa
add
cmp
push
sub
add
enter
sub
and
fdiv
add
in
inc
inc
sub
movsl
push
popa
mov
aas
dec
ret
dec
shlb
add
cld
dec
icebp
mov
ret
daa
add
js
les
cmp
pop
push
mov
je
adc
stos
cmp
ret
rcrb
sub
imul
mov
push
test
xchg
dec
loope
es
mov
mov
pop
hlt
pop
xor
push
inc
hlt
add
add
enter
sti
mov
loope
les
xor
ret
stos
loopne
psubd
mov
sbb
call
inc
ja
pop
jmp
out
je
loop
jmp
call
mov
fisubrl
add
pop
adc
dec
subb
cli
and
sbb
jne
add
mov
test
add
nop
xchg
rcll
xor
xor
push
fisttps
and
add
or
pop
je
xchg
movsl
test
pusha
shlb
stc
sbb
jo
pop
cmpsb
pushf
jmp
mov
xor
mov
inc
or
subl
inc
pusha
mov
aam
addr16
pusha
pusha
inc
imul
sub
cmpsl
sbb
push
es
inc
add
mov
inc
xchg
add
jo
ror
rol
addb
mov
add
xchg
push
mov
push
aas
lret
mov
pop
nop
mov
repnz
mov
in
add
mov
pop
lock
sarl
adc
aam
jno
outsb
jo
and
add
dec
ret
push
je
movsl
ja
leave
pushf
dec
or
cmpsl
mov
mov
leave
cmp
je
mov
cmp
adc
rolb
sbb
sete
cmpsb
mov
aam
xor
pusha
push
cmpb
adc
lret
js
hlt
outsb
clc
or
jae
movsbl
sbb
inc
mov
pusha
rcrb
lahf
cwtl
es
or
jmp
cmp
cwtl
ds
jmp
cmp
lcall
inc
incl
cmc
decl
or
jecxz
or
add
inc
cmp
jl
cmpl
xchg
cltd
and
add
xor
adc
sar
add
sub
clc
xor
fldcw
loopne
ss
cmp
jecxz
sbb
inc
jbe
lahf
lock
enter
adc
or
dec
lock
out
mov
pop
pop
sahf
leave
sbb
pop
push
lock
arpl
push
les
push
pop
dec
ficompl
mov
jbe
pushl
shld
lea
roll
inc
adc
roll
pop
adcb
fisubrl
stos
test
std
popa
push
push
jecxz
xor
cmp
jl
aam
jle
insb
aas
mov
loopne
ret
mov
out
cmp
out
mov
mov
add
fcmovnb
and
xchg
cmp
pop
aam
sarb
mov
ds
lahf
push
ret
or
mov
adc
mov
dec
fs
pop
mov
pop
enter
push
adc
std
push
inc
push
fwait
imul
mov
mov
jl
sbb
add
adc
stos
xor
mov
adc
or
and
inc
jmp
fwait
xor
fldt
mov
cmpsl
loop
repnz
sahf
or
stos
sub
fildl
outsb
dec
or
add
nop
cmp
add
fsts
rclb
lahf
rolb
mov
jecxz
dec
sbb
pop
mov
movsb
mov
movsl
push
push
outsb
rcrl
sbb
out
fcomps
jbe
data16
pop
pop
rorb
add
jnp
sbb
sub
xchg
in
jl
dec
sbb
add
add
out
nop
aad
pop
dec
dec
mov
in
inc
or
or
pop
flds
fs
add
idivb
dec
es
push
and
push
lahf
mov
pop
ss
jns
push
push
xor
mov
inc
sub
addl
stc
pop
sar
xor
sub
inc
xchg
fildll
fists
sahf
lea
inc
das
in
popa
test
jge
and
rorl
mov
adc
mov
iret
push
cltd
pop
add
inc
sub
lds
sarb
or
mov
mov
jmp
mov
or
and
or
adc
scas
rol
rcll
adc
dec
test
or
pushf
cmp
je
aaa
mov
sub
ret
into
das
call
aam
ret
dec
xor
dec
push
lret
or
inc
xchg
lahf
mov
je
call
xchg
xchg
ss
hlt
add
int3
nop
les
add
pop
outsl
aaa
xchg
push
push
daa
lret
je
mov
or
push
aam
mov
addr16
test
push
shll
adc
imul
aam
imul
jno
leave
and
adcb
aam
cmc
stos
rorb
mov
orb
or
ja
or
mov
jmp
mov
inc
adc
adc
roll
inc
pop
adc
push
cmp
xchg
mov
or
aad
loope
cmp
pop
mov
int3
add
mov
loope
sbb
sbb
clc
pop
bound
cmp
sarb
mov
je
mov
pop
pop
dec
fmuls
pop
adc
add
mov
push
inc
sbb
pusha
and
incl
mov
cmp
insl
bound
xchg
orb
adc
enter
and
mov
lret
xor
daa
test
xchg
xchg
or
push
inc
aam
add
or
rclb
add
adc
xchg
xchg
xchg
roll
add
pop
mov
lret
mov
cmp
jl
cwtl
loopne
shl
jge
push
mov
xchg
loope
cs
clc
push
sbb
outsb
xor
push
daa
movsbl
shl
call
sbb
ss
call
inc
loopne
jmp
mov
out
test
mov
mov
test
fadds
sbb
lret
movb
sub
sub
rorb
rclb
pop
add
shrb
daa
jecxz
pop
cmp
adc
fadds
cwtl
inc
je
cmp
adc
rorl
nop
movsb
add
cs
xchg
lcall
adc
ret
xchg
stc
mov
adc
les
sub
mov
mov
iret
popf
dec
pop
or
mov
or
or
es
add
call
pop
add
or
adcb
ja
push
scas
inc
inc
mov
inc
mov
pop
dec
jmp
or
and
cmp
fcmovu
stos
rcl
add
pushl
or
mov
mov
ljmp
mov
add
mov
adc
clc
sub
imul
or
mov
inc
or
jo
jecxz
pop
jl
hlt
mov
add
dec
mov
mov
mov
add
mov
add
movzbl
cmp
outsl
push
mov
inc
mov
mov
cmp
jl
mov
fldenv
mov
ffreep
aam
sarl
sub
pop
jae
lea
or
orb
or
sti
or
add
add
push
mov
jp
insl
push
nop
and
or
ljmp
cld
push
leave
push
xor
mov
inc
call
jne
jecxz
scas
pop
arpl
sbb
fwait
jb
and
into
in
mov
ds
xchg
call
hlt
sbb
pop
add
orl
xchg
arpl
repz
js
test
icebp
xchg
in
aaa
ret
push
notb
mov
rcll
sub
sbb
fistl
jno
mov
inc
pushf
mov
cmp
mov
aas
and
into
sub
js
xor
inc
iret
test
adc
imul
imul
sub
mov
inc
imul
push
jo
adc
or
adc
dec
cmp
mov
jae
and
mov
nop
mov
push
sbb
pop
mov
and
enter
rcr
popf
and
pop
sbb
push
push
fldcw
dec
mov
mov
je
in
loop
rclb
mov
sbb
scas
mov
sbb
or
iret
pop
orb
xchg
push
adc
push
call
or
cwtl
mov
stc
sub
jmp
mov
ss
lea
cmp
jbe
cmp
jbe
mov
aad
lret
pop
pushf
dec
mov
ljmp
into
xchg
iret
and
insl
mov
lcall
add
dec
outsb
jnp
invlpg
xor
test
push
movl
test
ss
cmp
out
mov
mov
push
fsubs
iret
push
call
push
push
aas
cltd
jp
push
cmp
and
and
add
hlt
sbb
test
mov
jmp
ret
and
enter
sub
lds
mov
subl
mov
shlb
aam
mov
js
scas
bound
cmp
cmpsl
js
sti
lea
ss
add
xchg
push
push
xchg
xor
or
push
subl
jnp
lods
or
addr16
std
pop
or
cmpsb
mov
icebp
adc
pop
in
mov
into
mov
mov
xchg
aam
jne
xor
pushf
adc
fcomps
mov
out
or
jo
aas
jb
push
sub
add
adc
sub
pop
inc
pop
add
pop
adc
lcall
adc
xor
inc
adc
aam
lds
in
adc
adc
add
and
push
subl
pop
xchg
xchg
cmpl
jp
mov
pop
stos
pop
and
sub
test
aam
push
or
aas
add
add
jnp
push
shl
and
mov
pop
xor
test
adc
ss
xchg
rolb
push
mov
push
xor
je
nop
mov
mov
sbb
cmp
rcll
fisttpl
push
loopne
mov
pop
inc
jp
sti
dec
stos
aam
dec
orl
ret
mov
enter
sub
test
or
add
insb
ss
scas
add
push
aam
push
or
inc
mov
xchg
shrb
or
cmp
shrb
adc
test
icebp
jg
repnz
jo
jae
mov
je
cmp
rcpps
mov
ficomps
roll
and
mov
negl
test
fnstcw
int3
mov
aaa
push
call
std
inc
mov
lea
push
push
dec
mov
movl
aas
clc
and
fs
or
xchg
shlb
stos
mov
jge
cmp
pop
jle
add
mov
xchg
outsl
pop
fdivl
pusha
xchg
adc
inc
add
leave
push
aaa
and
insb
or
sub
add
cmpsl
cmp
cmp
mov
pop
fadd
add
pop
je
aam
or
testl
andl
popf
cmpl
aad
or
mov
sub
pop
fs
stos
sub
push
add
lcall
in
hlt
sbbl
jge
loope
rolb
or
orb
jmp
sti
movsb
and
sbb
inc
incl
imul
mov
pop
add
xchg
aad
push
ss
and
jmp
ret
sbb
fsubl
jmp
push
aad
xchg
loopne
test
sbb
hlt
pop
inc
bound
pop
push
push
jbe
jp
lods
lods
mov
cld
mov
sub
nop
mov
jne
and
sbbb
ret
test
lahf
ret
je
pop
imul
rcll
ja
cmp
loope
mov
sub
out
jg
ss
sub
cmp
pop
push
sbb
nop
ds
mov
jb
add
fisubrl
lret
ds
push
loopne
cmpsl
or
cmp
jmp
sub
push
xor
jmp
cmp
jne
mov
push
cmp
adc
call
loopne
pop
mov
rolb
pop
leave
test
fistps
add
je
in
xor
and
or
sbb
jle
push
and
cmp
sbb
adc
push
push
call
cmp
sbb
mov
sahf
and
in
add
or
int
jmp
jg
pop
lods
push
pop
or
cmp
add
rorb
shll
push
or
jmp
add
mov
dec
enter
jbe
xor
or
or
popa
fcompl
push
add
cmp
pop
and
and
repz
in
inc
dec
mov
sbb
pop
mov
cmp
dec
xchg
mov
sub
add
andl
jns
pusha
dec
add
mov
stc
and
inc
add
add
into
ret
push
mov
sub
daa
and
call
dec
ds
and
xor
jnp
jae
inc
mov
cmp
fbstp
pop
jmp
cmp
cmp
into
adc
nop
pop
or
lea
rclb
and
fcoms
pusha
xchg
or
sahf
mov
dec
pop
test
dec
xor
test
inc
lcall
or
sbb
leave
das
andb
inc
jle
or
addl
push
and
jl
push
or
test
push
sub
pop
pop
sub
or
inc
mov
inc
adc
jle
or
andl
ret
loopne
movsl
jae
shrl
sbb
in
add
cwtl
xorb
sub
stos
stos
dec
or
popa
and
lods
les
cltd
loope
sbbb
das
data16
mov
or
inc
mov
ja
add
or
jl
jae
push
lods
mov
xchg
stos
push
fs
add
mov
fnstenv
pop
xor
dec
pop
movsl
sbb
std
divl
sbb
inc
push
mov
mov
xchg
or
lea
or
out
sub
pop
xchg
adc
or
and
jnp
mov
pop
adc
and
pop
dec
adc
sbb
adc
std
adc
test
movsb
cmp
sub
mov
dec
shlb
sub
adc
sbb
in
dec
adc
pop
pushf
les
mov
push
mov
sbb
jnp
fcompl
dec
jnp
xchg
and
aam
inc
mov
inc
cmp
dec
jg
mov
and
ds
in
ret
ficomps
and
pop
movsl
fmul
push
inc
or
adc
xchg
pop
loope
pop
jns
mov
xchg
push
mov
ja
push
sub
sub
pop
pop
sub
push
fwait
popa
cmp
sti
mov
inc
pop
push
add
cs
inc
rclb
mov
add
mov
inc
andl
aaa
xorl
filds
mov
ror
sarl
inc
push
adc
fidivl
test
fs
punpckhdq
cmp
jecxz
rcr
sub
jbe
or
jle
fdiv
jne
jmp
pop
jecxz
sub
jnp
add
pushf
in
add
leave
cmp
lret
aam
mov
imul
cmp
mov
mov
push
lea
iret
in
js
rclb
sbb
clc
dec
dec
mov
push
stos
or
adc
mov
and
sub
arpl
xor
dec
out
in
dec
lea
fnstenv
add
movb
lock
ss
int
cmp
jb
cmp
inc
int
rorl
sbb
inc
aaa
popa
xor
loop
mov
mov
je
add
push
sbb
sbb
pop
mov
jl
xchg
push
push
pop
push
inc
adc
add
stc
hlt
insb
cmp
or
cltd
clc
dec
je
in
loopne
jbe
jmp
aaa
in
xor
imulb
dec
filds
or
mov
cmp
addr16
je
cmp
add
std
jne,pn
mov
sbb
sbb
dec
lea
out
es
mov
pop
dec
xor
or
out
mov
cmpsb
mov
sub
inc
adc
je
testl
lods
and
in
cmp
jbe
lahf
inc
mov
add
inc
cmp
je
and
incl
sub
inc
jmp
inc
and
test
hlt
adc
test
fistpl
cld
pop
iret
bound
mov
xor
lods
dec
cmpsb
repnz
je
fs
out
aam
mov
push
push
adc
adc
add
inc
jmp
loop
pop
cli
sbbb
push
ja
sub
cld
inc
xchg
cmp
add
dec
insl
shll
hlt
cmpb
pop
pop
xchg
adc
je
lret
ljmp
jbe
jb
fdivs
js
sub
subb
sbb
es
and
push
add
loopne
sbb
lods
sub
loop
mov
push
pushf
mov
sahf
pop
jmp
push
push
jno
loopne
jne
mov
mov
jbe
in
pop
mov
xchg
pop
add
je
aam
add
inc
add
jae
movl
pop
inc
shrb
shl
loope
sti
add
fsubr
adc
aas
insb
sti
and
cmpsb
and
sbb
xchg
pushf
or
in
mov
js
fs
jne
xor
or
lock
mov
mov
inc
rorl
call
cmp
dec
jge
jno
shlb
fsubrl
push
jo
add
push
addl
call
addl
fs
int3
push
jp
sarb
jbe
add
cmp
or
out
out
jle
es
sub
sub
and
pop
or
mov
jbe
jl
or
adc
cwtl
inc
test
jbe
lea
cmp
jbe
push
adc
loopne
hlt
pop
arpl
pop
add
inc
adc
je,pn
test
jne
pop
push
adc
cmp
std
sub
jb
clc
add
push
xor
stos
dec
cld
lods
xor
adc
movb
inc
adc
adc
xchg
leave
ret
test
xor
test
pop
rorb
xchg
data16
mov
inc
and
dec
sub
sbb
push
adc
mov
js
inc
xorl
adc
cmp
add
sbb
jp
sbb
push
je
mov
cmp
lock
out
xchg
lea
xor
fs
lods
adc
movhlps
dec
jae
mov
dec
cs
adc
mov
mov
lea
rorl
repz
inc
push
mov
popf
dec
jl
and
ret
add
aas
and
add
lret
jne
mov
test
xor
jle
inc
sahf
test
push
push
push
imul
xor
inc
inc
xchg
mov
imul
ja
cmp
addl
ljmp
and
cmp
int
cmp
jae
xor
or
add
sbb
lock
adc
push
mov
or
inc
fsubr
push
sbb
andb
ja
test
add
pop
fisubrs
add
sbb
jmp
sahf
mov
loopne
sbb
and
ss
cmp
dec
mov
jmp
andl
imul
cltd
aaa
jp
call
mov
hlt
dec
nop
imul
sub
ret
decl
pop
cmp
out
cmp
pop
push
movl
push
adc
loopne
fisttps
jb
push
push
lahf
and
add
add
insb
cli
clc
jle
push
incb
push
mov
mov
adc
int3
add
cmc
jo
jb
mov
hlt
mov
mov
cmp
push
jg
loopne
jmp
ds
rcrl
lret
pop
outsb
je
pushl
xchg
jne
mov
lea
outsb
fsubr
jae
std
jo
cmp
inc
cmpl
push
addb
shrl
psubd
jge
cmp
lea
jb
dec
shlb
dec
movsb
push
mov
shlb
xor
and
jbe
out
in
lea
jge
push
gs
popa
iret
icebp
add
inc
inc
fwait
cmp
insl
dec
cmp
pop
pop
outsb
orb
push
out
cmp
je
cmpsl
popf
dec
or
aad
or
cmc
inc
mov
pop
cmp
xchg
jl
pop
mov
pop
adc
xchg
sbb
cmp
pop
je
test
dec
sbb
jmp
pusha
add
call
xorl
adc
add
push
push
lock
mov
pop
adcl
icebp
in
clc
mov
pushf
mov
nop
testb
addl
jecxz
sbb
inc
push
in
sub
cmp
push
or
add
lahf
shll
fdivs
aaa
pusha
xchg
sub
cmp
cwtl
push
add
add
pop
ja
mov
cwtl
cmc
stos
int3
sbb
outsb
enter
es
adc
sub
sbb
ret
or
sti
pusha
jb
outsb
lock
ficoms
mov
adc
repz
rol
add
cli
mov
in
jbe
push
adcl
fisttpl
mov
cmp
adc
sub
xchg
sarb
das
mov
and
gs
imul
inc
push
subl
mov
rolb
inc
push
jbe
loop
sti
into
mov
arpl
xchg
fimull
inc
push
push
popf
test
jns
inc
pop
xchg
addl
cmpsl
lret
and
dec
cmpsb
xchg
xchg
movsl
mov
inc
lea
or
dec
addr16
loope
fstpl
frstor
fwait
xchg
imul
in
cmp
sbb
shll
push
fsubs
and
dec
je
cmc
call
pop
and
cmp
xor
add
fmul
ja
je
shl
enter
mov
xchg
push
mov
clc
add
inc
xchg
lcall
imul
push
or
sbb
pop
xlat
jge
ds
cwtl
cmpl
je
xor
xor
cmpsl
mov
lret
or
jne
mov
sti
rclb
cmp
adc
add
movl
add
js
sub
cld
sub
rcrb
mov
out
in
andl
aas
sub
inc
or
pop
dec
fs
pop
fcmovu
inc
cs
xchg
and
add
lahf
jmp
jnp
add
bound
and
push
cmp
dec
inc
mov
sbb
add
push
sbb
or
ds
inc
push
push
cmp
or
sbb
jno
jmp
sbb
xchg
stos
ja
adc
iret
push
addl
dec
cmp
adc
push
adc
mov
sub
add
into
cmp
test
pop
jnp
jbe
pop
sbb
xchg
jne
sbb
mov
icebp
cmpsl
lods
bsr
xchg
test
cmpsl
mov
out
inc
mov
dec
xlat
push
aas
je
cmp
cwtl
dec
ret
in
push
pop
jne
aam
imul
sbb
imul
and
icebp
pop
jne
pop
call
cmp
xchg
test
pop
add
insl
in
xor
in
cmp
jne
jmp
sbb
into
shlb
call
cmp
push
add
mov
sub
mov
cmp
pop
scas
sbb
or
mov
je
pop
in
addb
add
xchg
scas
loop
je
imul
repz
jecxz
inc
div
jmp
pusha
mov
jae
xchg
fisttpl
add
mov
add
jne
daa
mov
testb
mov
sub
incb
je
add
cmpl
lock
pop
xchg
mov
orl
sbb
or
pusha
push
scas
or
inc
decb
cmp
push
scas
or
or
lock
push
add
add
push
jo
jge
mov
push
cmp
aas
mov
std
push
mov
test
dec
adc
push
inc
fdivs
les
pusha
add
test
xchg
and
pop
pop
xchg
sub
mov
push
xchg
rcll
xlat
push
mov
push
push
pop
pop
xchg
lret
in
pop
pop
pusha
pusha
fs
ret
mov
jbe
inc
pop
ja
xor
add
sbb
push
add
adc
dec
sub
pop
inc
xchg
int3
mov
push
pushf
subb
and
sti
cmp
adc
and
fildll
sbb
jmp
push
adc
push
lret
mov
cltd
sbb
push
add
jne
or
push
or
inc
adc
dec
jns
xor
int3
adc
aad
fs
pusha
sbb
popa
mov
scas
stos
add
or
or
cmpsl
stos
gs
add
daa
mov
cli
xor
leave
xor
pop
jo
cmp
sbb
ljmp
sbbb
or
incl
pop
inc
push
sti
cli
jp
push
pop
jmp
mov
in
int3
mov
je
mov
or
sti
and
add
mov
push
or
mov
and
push
push
fwait
sbb
pop
loope
inc
je
lock
test
lock
and
popf
hlt
or
push
xor
inc
ss
sti
es
sti
in
cmpl
push
mov
push
xor
sub
nop
and
mov
sbb
sbb
test
mov
cmp
fucomp
push
push
data16
je
pusha
cmp
inc
enter
push
jo
jg
mov
je
mov
cmp
jne
ss
lock
adc
in
sbb
xlat
loopne
test
out
or
je
jg
mov
cmp
mov
xorb
cmp
test
nop
mov
mov
pop
sbb
pop
outsb
mov
mov
add
pop
xor
pop
add
clc
cmp
adc
sbb
arpl
cmp
nop
pop
fisubl
test
into
sbb
je
jnp
jbe
push
adc
ds
adc
pop
jne
lods
outsl
jecxz
add
adc
jp
and
add
in
insl
out
add
xor
shlb
sbb
jne
adc
pop
insb
jecxz
add
pop
jbe
jo
insl
sub
push
adc
adc
dec
ret
movsl
mov
mov
sbb
ret
add
es
cs
mov
or
jae
xchg
adc
sbb
pop
adc
add
incl
cmp
test
pop
sbb
adc
sub
or
jne
sub
mov
sbb
jne
dec
stc
in
sub
or
mov
adc
hlt
cmpsl
adc
cmpb
in
je
divb
mov
arpl
mov
adc
out
xor
lea
inc
add
xor
and
data16
into
andb
sub
rclb
jge
jb
xor
aaa
imull
xchg
rorl
inc
hlt
shlb
cli
hlt
inc
adc
adc
arpl
add
cltd
adc
add
mov
sub
ljmp
add
pop
enter
das
xor
adc
add
xor
mov
jecxz
mov
pop
adc
mov
mov
xor
ret
and
add
mov
xchg
jg
fcoml
mov
mov
add
shl
sbb
orl
int
jp
jmp
pop
outsb
xchg
in
inc
jne
addr16
mov
push
mov
adc
test
lea
add
das
je
aaa
add
lock
mov
out
adc
sbb
dec
add
pusha
scas
xchg
add
push
lcall
push
rolb
add
lock
and
mov
movsl
movsw
lret
test
call
adc
mov
sub
sbb
inc
es
mov
int3
mov
jb
fsub
push
adc
js
lods
popf
pop
sbb
push
bswap
mov
push
test
pusha
rorb
je
adc
repnz
or
mov
sbb
mov
dec
clc
jmp
sub
mov
pushf
loop
cmp
push
inc
ret
orl
shlb
mov
sub
sbb
in
dec
dec
popf
cmpsb
adc
je
cld
fcom
and
add
jo
andl
pop
add
int3
mov
adc
inc
pop
push
push
ss
orb
mov
loopne
mov
pushf
and
add
pop
dec
sbb
xor
jl
push
inc
mov
sbb
or
loope
adc
lds
in
xchg
cmp
mov
jmp
xchg
cmp
test
rolb
es
jp
arpl
xchg
push
movsb
mov
adc
lret
shlb
rcrb
cmp
lret
inc
dec
fsubrs
aaa
and
add
stc
mov
xor
sbb
sub
rclb
aam
lea
and
push
mov
dec
cmp
nop
rorl
rcll
gs
and
and
scas
ljmp
sbb
test
out
ret
push
mov
daa
inc
mov
das
xchg
inc
cmp
jl
jmp
ret
outsb
xor
add
lock
or
stos
cmp
clc
sbb
add
ret
add
push
mov
lds
mov
pop
cmpsl
test
into
ret
and
xchg
out
push
cmp
addl
mov
xor
clc
data16
add
push
xchg
int
mov
mov
lock
insb
xor
testb
pop
add
xor
sbb
and
jl
and
push
rep
clc
int3
subb
adc
add
cmp
lods
orb
jmp
and
lock
aaa
loop
lea
inc
push
xor
rol
jns
and
inc
ds
js
pop
jo
test
push
push
adc
fistps
clc
inc
lods
or
jmp
push
mov
cmp
add
mov
push
addr16
movsb
mov
int3
or
test
ret
or
ret
pop
pop
adc
aas
sbb
push
ret
outsl
sbb
push
sbb
hlt
sub
xor
aas
pop
daa
sbb
divb
pusha
xchg
sbb
sbb
adc
adc
fnsave
jle
clc
inc
push
enter
notb
aad
es
ss
mov
add
sbb
mov
or
popa
pop
leave
sub
std
mov
clc
pop
mov
cmp
js
test
fstps
or
fs
adc
add
cmp
mov
mov
out
inc
or
jmp
push
daa
lock
mov
cmp
repnz
dec
rcr
shll
fdivs
add
pop
jge
rolb
jne
and
dec
nop
push
add
xor
lock
push
push
in
out
mov
fnsave
or
pop
ret
pushl
push
add
fcmove
mov
ja
cmpsl
mov
add
iret
add
clc
mov
repz
inc
inc
pop
into
cmp
pop
jg
pop
and
sub
add
lcall
sbb
addr16
clts
test
loopne
mov
pop
sub
iret
mov
mov
dec
push
stos
pop
movsb
mov
add
dec
loopne
and
or
bound
movsb
jnp
cmp
xchg
test
sub
inc
jle
dec
jecxz
or
push
xchg
inc
mov
push
outsb
jns
in
xor
scas
sub
jmp
shlb
ja
arpl
jecxz
inc
mov
outsb
bound
xchg
icebp
loopne
out
xor
xchg
xchg
or
add
mov
stos
cmpsl
dec
add
stos
mov
xchg
add
mov
add
xchg
cmc
lret
pop
loopne
popa
inc
sahf
and
add
push
dec
addl
jbe
push
leave
loopne
push
mov
sub
push
outsl
adcb
iret
or
xor
pop
mov
push
in
adc
scas
sub
popa
adc
pop
sbb
dec
sahf
loopne
pop
ud0
adc
ja
in
outsb
cmc
pushf
push
and
xlat
mov
push
pop
sbb
adc
or
leave
jb
inc
inc
sbb
adc
push
mov
inc
dec
js
pop
inc
sub
testb
adc
ret
rcrl
add
push
mov
add
push
adc
pop
and
sbb
xor
cmp
and
je
pop
sub
cltd
inc
cmpsb
add
cmp
cmpsl
or
sbb
mov
pusha
pusha
ljmp
arpl
add
cmp
inc
xor
scas
sbb
add
jo
movsl
push
fidivl
jns
pushf
mov
pushf
pop
fmuls
push
lds
pop
sahf
add
or
pop
cmp
pop
leave
or
fadds
sub
jle
sbb
ss
test
jns
cmp
or
or
test
lods
add
mov
mov
shl
outsb
cmpb
pop
es
add
dec
cmp
popf
fcomp
jnp
lds
or
lea
rorb
repnz
bound
sbb
dec
sub
sub
lret
das
push
jge
add
movl
leave
mov
clc
or
jo
push
std
and
addb
adc
inc
push
and
mov
adc
dec
xchg
bound
jnp
or
push
cmp
addr16
and
inc
sbb
test
xchg
push
out
cmp
rol
inc
lock
mov
or
mov
sti
xor
fistpl
or
addl
cmp
fiaddl
and
push
inc
mov
fs
cmp
cmp
or
repz
and
sub
shll
sahf
loopne
adc
insl
rcr
dec
push
cltd
xlat
mov
or
jno
dec
or
mov
sub
ret
adc
jnp
inc
cmp
lcall
pop
adc
pop
dec
imul
and
dec
cmp
dec
jbe
popf
sub
mulb
mov
dec
add
sub
dec
repnz
cli
outsb
aam
mov
and
push
pop
adc
aaa
and
and
inc
in
hlt
movsb
fistpll
subl
sbb
dec
mov
and
test
fwait
jl
add
push
je
outsb
xchg
sbb
mov
adcl
mov
or
jmp
or
pop
and
pop
fldenv
sbbl
popa
dec
mov
das
push
movsb
inc
mov
loopne
mov
test
inc
jg
xchg
mov
add
xchg
cmpl
add
addl
in
push
or
cmpsb
call
inc
in
mov
jne
adc
push
mov
ds
inc
and
not
ficoms
mov
and
xor
pop
ss
add
mov
pushf
js
mov
or
mov
inc
lods
add
xor
dec
lods
or
jns
mov
mov
loope
sbb
or
mov
sbb
jge
and
xor
jmp
sbb
rolb
push
sbb
or
push
sub
and
clc
push
in
mov
mov
dec
xor
or
jmp
adc
push
xchg
sbb
int3
add
adc
test
lods
xchg
lods
scas
jge
and
and
push
and
clc
xchg
dec
push
lock
inc
add
int
and
out
repz
addb
adc
addr16
data16
jle
pop
add
jecxz
adc
cmp
inc
loopne
sub
test
xchg
popf
xchg
pusha
fbld
sub
pop
push
nop
fmul
sub
sbb
pop
jbe,pn
fdivl
ret
mov
jbe
test
dec
sbb
mov
je
mov
jo
adc
push
pusha
push
dec
mov
pop
mov
in
mov
jno
enter
mov
inc
sbb
jne
cmp
push
fsubr
adc
std
nop
outsb
mov
and
scas
dec
bound
loopne
movsb
rorb
test
mov
les
lea
add
rolb
cli
cmp
add
cmp
fucompp
mov
sarl
popa
incw
cmp
and
leave
andb
test
xor
iret
jmp
mov
nop
mov
push
nop
addr16
mov
sbb
dec
cmp
push
push
pop
test
or
scas
ds
jo
jne
xchg
dec
lds
cltd
cltd
push
or
loopne
push
push
jmp
movsl
adc
subl
loope
or
mov
mulb
sub
and
inc
std
pushf
mov
push
pushf
fs
bound
js
mov
inc
add
sbb
js
xor
call
xor
cmpsb
mov
rcrb
out
add
inc
and
and
fst
jne
jne
popf
cmp
lcall
leave
jle
pop
mov
xorb
sbb
bound
xor
lods
push
inc
hlt
or
add
mov
sarl
mov
sbb
sub
add
rolb
movsb
push
mov
fcoml
or
add
popw
mov
rol
xchg
inc
push
sarb
es
ss
jb
jnp
lods
mov
ja
imull
push
rorl
lods
orb
lods
jbe
jne
mov
push
es
aas
xor
or
mov
xor
cmp
loopne
inc
jbe
addr16
mov
push
jp
ds
in
ret
enter
je
hlt
sub
add
jb
cmp
xor
add
dec
add
pop
ss
push
add
pop
mov
dec
cmp
rorb
aaa
add
sbb
mov
xor
xorb
mov
rolb
mov
ret
add
or
cmp
je
push
sub
jbe
movsb
lcall
push
call
pop
fldcw
fcoms
loope
imul
push
inc
and
push
imul
or
adc
leave
and
adc
inc
shrb
inc
dec
xor
in
stc
jmp
arpl
sub
lods
fisubrs
cmc
out
add
mov
lods
cld
jmp
test
push
jl,pt
jne
lds
add
ficomps
testb
xchg
icebp
fisttpll
cld
add
ds
ss
clc
mov
mov
add
outsb
add
sbb
mov
stc
in
mov
xchg
test
sbb
jge
call
hlt
cmpsl
cld
adc
rcll
xlat
arpl
mov
cmp
inc
mov
lods
testb
jo
jae
enter
adc
in
enter
adc
adc
test
jb
in
adc
adc
enter
adc
adc
movb
jno
mov
sub
mov
xchg
add
aas
js
repz
push
mov
cmpw
je
xorl
mov
out
xchg
lock
add
cltd
mov
push
xor
xchg
leave
and
xor
jmp
dec
test
push
mov
xchg
adc
cmp
icebp
lret
adc
cwtl
mov
sbb
in
test
pusha
popf
mov
iret
pushf
std
sub
jl
inc
and
das
jmp
cmp
push
add
sbbb
shrb
sub
cmp
bound
pop
jns
out
enter
adc
mov
jno
es
lret
cmp
pop
or
mov
add
fdiv
xchg
into
mov
add
fbstp
jbe
addr16
dec
sub
shlb
pushf
out
outsl
lret
fistl
mov
test
add
xor
pop
push
adc
mov
push
fimull
push
xor
xor
or
or
mov
sbb
mov
pop
mov
es
mov
inc
mov
jb
in
dec
call
out
adc
rolb
loope
push
dec
jecxz
sub
push
gs
jecxz
cmp
inc
xchg
push
xchg
mov
lar
movsl
mov
push
push
mov
cld
add
out
pop
sub
into
jp
fsubrs
aam
mov
imul
mov
push
mov
inc
or
daa
popa
stos
aam
in
pop
adc
fwait
insb
into
jmp
xor
dec
cmp
lea
add
roll
in
insl
cmp
cmpb
aad
mov
and
xchg
push
jae
inc
dec
notl
jne
call
ss
inc
test
dec
jno
mov
mov
mov
push
stc
inc
dec
and
jns
in
fucomp
push
push
cmpl
insb
js
imul
addl
sti
inc
xor
cmp
cmp
pop
fistpll
add
ja
jno
cmp
xchg
in
hlt
jmp
sbbb
xchg
daa
pusha
lds
je
jl
push
mov
mov
sub
lfs
out
push
and
push
insb
out
inc
push
int3
push
sahf
cs
push
or
inc
jecxz
loope
adc
ror
push
jo,pt
syscall
test
ret
pop
lock
fcom
mov
ds
inc
enter
add
push
mov
and
mov
popa
mov
and
pop
add
jecxz
clc
add
mov
rcrb
out
xorb
fs
aad
stc
ss
xor
push
and
and
dec
pop
test
mov
out
cmp
and
inc
js
pop
push
rorb
movsb
test
and
incb
push
lods
xor
orb
fwait
mov
popa
inc
xor
sbb
leave
dec
jmp
adc
push
pop
push
ret
or
inc
arpl
inc
repnz
in
popa
xchg
push
inc
insl
aad
mov
jecxz
xchg
adc
xchg
jo
stc
call
shlb
push
popa
lea
xchg
jp
rolb
inc
pop
ret
add
add
pop
adc
sbb
repz
lcall
es
dec
adc
roll
push
push
xlat
lcall
outsb
cmpl
push
mov
shlb
inc
sbb
lret
arpl
fdiv
sbb
sahf
cmp
dec
popf
dec
inc
rcll
outsl
push
cmc
fistpl
mov
or
dec
test
inc
jmp
subl
xchg
stc
and
push
cmp
xor
xchg
inc
call
xor
std
ss
psubw
ds
cmp
mov
add
scas
dec
sarl
scas
push
ljmp
and
inc
aaa
call
push
pop
and
das
in
xor
mov
shlb
fs
fsubrl
jo
push
cmpsb
xchg
pop
cld
xor
ret
sbb
pushf
imul
add
das
mov
pop
sub
shrl
mov
mov
xor
mov
mov
mov
ja
push
push
sbb
mov
mov
orl
mov
sbb
repnz
jge
outsb
cli
sbb
sbb
cmpsb
xorl
dec
faddl
xor
mov
mov
pop
cmp
orb
push
ret
mov
pushf
fimuls
mov
pop
xor
fdivrs
mov
lock
mov
xor
stc
cmpsb
lea
push
cmp
mov
mov
imul
push
pushf
push
push
ret
test
nop
out
int3
mov
push
pop
out
mov
bound
and
xchg
add
dec
xchg
enter
push
iret
pop
jmp
jne
pop
mov
dec
aas
jl
in
xchg
or
std
stos
pop
sub
adc
mov
test
adc
inc
shlb
sbb
inc
fucomp
inc
ret
xor
mov
jmp
adc
incl
das
add
add
or
sub
push
jecxz
inc
jl
inc
rorl
xor
loope
insl
xor
xchg
xor
add
xor
adc
dec
adc
and
sbb
fs
nop
cmp
jmp
pop
inc
mov
or
adc
loope
ds
sub
mov
outsb
insb
push
pusha
xor
jle
pop
xor
je
dec
iret
or
jns
xor
jmp
inc
lcall
jl
pop
add
pop
dec
inc
rcrb
fisttps
outsl
fildll
adc
or
je
inc
cmp
jbe
repnz
mov
push
xlat
test
nop
test
or
add
lods
movsb
jmp
mov
in
inc
sbb
into
rcll
mov
pop
lahf
std
scas
or
lret
xor
jbe
adc
xchg
lock
or
pop
mov
add
lods
hlt
sbb
add
sbb
cwtl
cs
daa
xchg
dec
add
lret
mov
mov
inc
jo
pop
stc
xchg
ja
sti
loopne
shlb
push
push
jnp
pop
rol
pop
adc
cmpsb
add
popf
sbb
or
or
or
pop
mov
add
lret
test
or
or
orb
adc
bnd
lea
jl
lea
cmp
jb
je
bound
add
add
cmp
mov
aam
push
pop
ss
shll
popa
mov
and
pop
push
add
icebp
sub
and
cmp
movsl
push
je
cwtl
xchg
pop
dec
sub
sahf
sub
xlat
cmp
lock
mov
fdivs
jbe
stc
xchg
test
dec
xlat
mov
outsb
or
rclb
pushl
xchg
test
or
roll
push
dec
mov
fisubrl
lods
fimuls
test
inc
mov
dec
jp
aam
pushf
loop
jmp
xor
add
fwait
sbb
inc
leave
lods
packuswb
scas
sbb
mov
or
addl
ja
je
and
dec
mov
inc
and
cmc
std
cmp
mov
add
dec
enter
mov
adc
or
sarb
mov
push
or
dec
pop
add
out
add
xchg
push
pushf
dec
and
pushl
push
xchg
or
inc
mov
outsl
adc
mov
or
in
mull
mov
cwtl
sub
ret
dec
mov
scas
mov
xor
push
testb
or
add
lahf
mov
cmp
testb
aaa
jbe
out
sbb
ja
pop
or
outsl
jnp
cmp
inc
pop
add
push
push
cmp
data16
loopne
dec
push
push
jmp
test
push
or
je
test
dec
iretw
mov
out
jne
mov
push
test
push
or
or
sub
or
lock
es
add
aas
pop
push
enter
sbb
xchg
or
leave
and
jns
test
js
or
jp
cmp
pop
pop
cmp
subb
cmp
jae
pusha
or
test
sub
sbb
roll
jne
push
js
jle
mov
loopne
fnstenv
fadd
inc
or
mov
cmp
cwtl
push
cmpsb
add
orl
out
or
lahf
or
cmp
pop
mov
in
dec
mov
or
popa
clc
lea
cmp
cltd
pop
inc
jb
pop
fimull
push
fs
xchg
jbe
inc
mov
push
hlt
imul
sbb
shlb
shl
jo
movzwl
mov
push
adc
add
add
xchg
cmpl
test
or
daa
mov
mov
sarl
xlat
imul
add
mov
add
add
jecxz
add
xor
into
out
xchg
pushf
jp
insb
fcmovnu
adc
mov
lcall
arpl
sti
ret
rolb
jne
cmp
jbe
or
fidivrs
jne
add
mov
cld
inc
cmp
xchg
add
add
scas
ds
data16
push
xchg
sbb
inc
cmc
jmp
pusha
adc
jno
addl
out
push
pushf
ja
mov
jp
inc
adc
in
push
out
xchg
ja
cwtl
sbb
add
sub
sub
xchg
mov
jne
pop
orl
cmpsl
rclb
out
lea
push
mov
or
inc
pop
fisttpll
jmp
enter
movsl
push
rorb
js
cmp
movsl
cmpsl
add
xor
xor
andb
push
mov
jo
or
add
mov
inc
dec
loopne
push
lds
and
clc
cmp
call
adc
xlat
adc
cmp
sbb
daa
rcrl
lds
stos
push
gs
ds
adc
outsb
add
outsb
inc
sbb
pop
xor
mov
fisttpl
cmpl
xor
or
jle
push
jp
ret
out
pushf
out
mov
and
rcl
xor
popa
mov
or
xlat
pop
lahf
icebp
sub
or
pop
push
andb
ljmp
rolb
add
jmp
pusha
mov
mov
pusha
adc
xchg
push
dec
iret
decl
insb
ja
cmp
jae
cmp
xchg
dec
mov
sbb
cmp
cld
cmp
sbb
inc
xor
or
orl
or
cmp
mov
or
pop
movsb
jb
push
jae
repz
xchg
xchg
insb
add
and
and
pop
imul
inc
cld
test
cmp
daa
orl
adc
out
add
lret
std
xlat
ret
cs
incl
or
sbb
popf
lea
add
dec
jno
outsb
push
jmp
mov
std
fs
sub
int
rorb
outsl
mov
push
js
test
add
popf
ret
xor
mov
jbe
fimuls
insl
cmpsb
movsl
pop
xchg
xor
ds
incl
cmp
sahf
negb
sbb
cmp
push
sarl
lea
mov
dec
and
fnstcw
adc
cli
xor
arpl
sub
test
sahf
pop
lock
test
pop
addl
or
call
jmp
dec
mov
call
pop
iret
loop
arpl
test
cmpsl
cmp
fdivl
or
xor
loopne
cmp
sbb
xchg
repnz
xlat
ja
loopne
xor
jp
and
loopne
dec
lods
pop
jl
das
sbb
push
and
mov
mov
and
adc
xor
pop
and
xchg
xchg
inc
sub
aam
sbbb
add
pop
xchg
and
pop
push
jno
push
leave
rcll
fsin
pop
loope
jecxz
faddl
pusha
insl
je
mov
jbe
sbb
jp
or
xor
lods
mov
or
xchg
cmp
aam
out
pop
inc
inc
fcomps
add
cmpsl
jne
fsubs
popf
sbb
fsub
add
dec
mov
jle
fisubs
mov
ret
xchg
mov
add
add
je
dec
loope
mov
xor
adc
sti
mov
xor
fdivs
subl
gs
push
cld
and
test
pushl
mov
std
dec
add
call
mov
popa
andl
popf
mov
sarb
ret
jns
mov
mov
xchg
push
mulb
arpl
cmp
jb
mov
jb
mov
mov
sub
or
ret
cmpb
test
insl
addr16
dec
mov
fistpl
cmp
add
mov
cmp
imulb
cmp
scas
jl
mov
add
pop
je
dec
pop
loopne
ret
push
jae
lea
add
add
cmpb
jne
fidivl
test
test
out
jmp
mov
pushl
popa
pop
push
jb
and
mov
daa
pop
lock
movl
add
fdivrl
sbb
pop
push
sub
jle
dec
or
dec
mov
or
lea
pop
out
hlt
fwait
pop
jae
aam
xor
xor
xor
jmp
push
inc
sub
sub
and
dec
rcll
push
xchg
xchg
mov
bound
lsl
mov
pusha
pusha
sbb
xchg
incb
cltd
rcrb
cmpsb
pop
push
sbb
shrl
and
mov
inc
lea
lods
xor
pushl
add
adc
cmp
jmp
imulb
loopne
cmc
inc
sub
inc
mov
pop
das
dec
and
cmpsl
and
sub
inc
push
lods
inc
bound
fs
and
jne
lret
ljmp
add
in
jle
sub
sub
popf
in
xchg
stos
or
or
adc
fisttps
cmp
clc
or
pushf
into
je
fsub
add
push
nop
add
add
xor
push
pop
int3
add
cmc
ret
xchg
and
pop
lahf
mov
and
lret
xor
jo
xor
loop
pop
mov
cld
sbb
mov
dec
or
or
inc
out
inc
cmpl
in
add
adc
pop
movsl
sbb
sbb
xorl
mov
inc
and
data16
or
lock
xor
sbb
xchg
sub
fcoms
sub
je
xchg
jne
in
dec
add
pusha
jmp
les
orl
or
clc
std
incl
add
xchg
rcrb
test
add
inc
xchg
cmpsl
ljmp
daa
aam
cs
pop
adc
sbb
ja
or
jno
jo
push
push
push
mov
daa
bnd
mov
insb
adc
mov
js
dec
ret
push
xor
lea
push
sub
sbb
les
adc
add
popa
stos
pushf
dec
fistps
inc
ja
test
ret
cmp
or
xchg
lods
fdiv
loopne
dec
sti
xor
leave
pusha
clc
pop
sarb
mov
cmp
lcall
add
out
push
cmp
cmp
arpl
test
lea
ficoml
mov
and
movb
or
push
xchg
iret
ja
hlt
fdivs
sub
xchg
out
push
cmpsl
xor
sti
xor
push
mov
repnz
jp
testb
mulb
testb
mov
cmc
dec
in
sti
sbb
cmpsb
or
popa
pop
mov
jo
cmp
sub
dec
mov
dec
shll
adc
mov
add
jecxz
push
negb
adc
testb
cmp
adc
mov
lret
adc
fistpl
inc
mov
xlat
push
fnstcw
jnp
xrelease
push
aad
xor
fmull
or
mov
push
inc
xor
adc
cltd
push
mov
sbb
inc
jbe
add
cld
or
je
into
shlb
cmp
cmp
or
aam
add
lahf
mov
inc
mov
jb
inc
mov
lock
mov
adc
inc
add
pop
mov
cmp
cmp
jmp
pop
and
push
bound
inc
or
add
stos
adc
es
clc
loop
push
lcall
test
sbb
adc
xchg
addb
ret
cmc
imul
addl
push
stc
xor
jb
arpl
arpl
addr16
xchg
cmp
push
imul
sbb
shlb
mov
jno
test
inc
sbb
mov
adc
stos
xor
and
jbe
and
dec
adc
cld
repz
add
enter
mov
add
inc
add
mov
fcoml
sub
adc
or
loopne
mov
push
jo
and
cmp
or
jno
mov
sbb
addl
push
push
xor
sarb
cmp
add
shrb
rolb
movsb
sbb
or
inc
jp
aad
sub
xchg
pusha
mov
or
adc
ss
in
pop
add
or
repnz
xor
dec
sbb
xorb
fisttpll
loope
or
dec
xchg
frstor
movb
jl
dec
sub
xor
fs
clc
add
mov
pop
repnz
adc
mov
aas
roll
or
mov
add
mov
add
pop
mov
adc
andl
incb
push
xchg
or
cmpl
mov
jne
pushl
imul
push
fsts
jno
cltd
pusha
jo
lret
or
dec
adcl
mov
js
push
cmp
inc
mulb
in
pop
es
sbb
ficoml
add
or
shlb
and
dec
cmp
pusha
and
mov
or
fimull
data16
mov
xchg
aaa
ljmp
inc
push
mov
sub
inc
mov
adc
add
les
sbb
inc
in
ja
rcl
dec
sar
shlb
loope
mov
orl
and
adc
or
or
push
aam
jbe
jo
sbb
push
fs
mov
mov
or
ja
outsl
pop
inc
test
and
push
pop
push
lret
mov
pop
sbb
sub
mov
repz
sub
mov
mov
cmp
xchg
mov
mov
sarb
pusha
scas
test
rol
push
dec
repz
popf
fildl
sub
or
add
sub
xchg
mov
mov
mov
inc
je
stos
cmp
mov
adc
adc
fldt
imul
sarb
ret
mov
pop
push
push
int3
adc
mov
lock
mov
inc
inc
add
in
test
xor
adc
adc
or
loopne
mov
or
pusha
hlt
test
cmc
in
std
pop
leave
adcl
push
sub
adc
out
movsb
push
clc
or
aad
inc
test
ficoml
or
inc
push
mov
push
or
ret
ret
clc
arpl
or
dec
or
out
scas
or
push
add
or
push
or
lahf
inc
xchg
sarb
leave
push
and
mov
add
dec
daa
jmp
seto
push
jmp
sub
aas
adc
push
fisttpll
fs
pop
lea
pusha
mov
xor
out
sub
xchg
adc
cs
mov
jmp
mov
sbb
adc
jo
loop
xchg
scas
dec
shlb
and
pop
fwait
sbb
leave
sbb
mov
push
loope
push
push
out
jle
das
hlt
das
aam
cmp
insb
cmp
sub
das
xchg
adc
movzwl
test
je
test
dec
jp
or
push
or
jo
test
cmpsb
loopne
push
pop
push
mov
out
mov
xchg
daa
push
cmpl
imul
dec
sub
pop
loope
pop
das
jmp
cmp
add
mov
jbe
adc
mov
fdivrl
fdivrl
sub
push
loopne
jecxz
fistl
sub
dec
rorb
fwait
add
cs
pop
dec
jo
add
pop
jl
pop
xor
push
jecxz
clc
shrb
mov
push
dec
and
test
adc
and
sbb
adc
push
push
cld
dec
or
add
movsl
mov
inc
sub
push
ret
insb
popa
repz
rcrb
call
adc
pop
mov
movsl
hlt
mov
mov
or
stos
and
in
je
or
add
jle
mov
mov
adc
or
cmp
pop
sbb
push
sbb
jno
push
mov
add
inc
ret
dec
jno
cmp
int
or
stos
cmpl
nop
add
int3
movl
pop
cli
cld
lea
push
leave
inc
stos
enter
pop
sbb
mov
push
test
daa
xchg
pop
dec
les
sub
sbb
test
push
mov
loop
jl
clc
push
cld
sbb
repz
je
push
adc
cld
fsubs
pop
xchg
mov
nop
pop
mov
add
sti
dec
nop
stos
or
clc
xor
inc
outsb
in
lods
add
lahf
mov
jne
orb
mov
xchg
stos
ret
mov
cs
or
rcr
sbb
and
mov
popa
push
lret
enter
mov
adc
sub
push
xorb
and
jecxz
lds
daa
jge
adc
imul
mov
sarl
lock
cmp
adc
mov
das
bound
frstor
inc
subl
call
sbb
gs
testl
xchg
outsl
push
mov
aam
mov
testb
sub
int
ljmp
inc
test
xchg
mov
mov
sub
push
movl
push
dec
add
inc
or
mov
jp
orb
mov
js
lret
xchg
xorb
loop
pop
call
repnz
lret
sbb
es
or
push
push
cmp
into
dec
dec
push
cmp
pop
push
outsb
and
mov
rcl
mov
push
adc
pop
mov
sub
ret
out
mov
into
jmp
fidivrl
into
out
push
loope
roll
dec
xor
push
mov
lock
scas
push
cmp
ret
push
mov
je
adc
sbb
das
outsl
push
xor
inc
pop
mov
inc
add
sub
dec
jl
mov
leave
add
sub
jne
sahf
daa
hlt
inc
pop
aas
lea
pop
ss
cmpsb
clc
sub
ffree
sti
add
pop
adc
or
push
shrb
push
ret
imul
inc
add
jmp
nop
rclb
rol
mov
rorl
fdivl
dec
in
sbb
roll
mov
inc
sub
dec
mov
inc
ret
mov
dec
setb
pop
and
dec
mov
jbe
lahf
add
xchg
or
sbb
pusha
loop
adc
bound
mov
loop
or
loopne
repz
sbb
or
add
lcall
lret
sbb
mov
push
push
call
rorl
mov
js
call
and
pop
inc
test
aam
sbbb
fwait
dec
push
inc
push
xor
adc
mov
jb
dec
fmuls
sahf
mov
js
enter
dec
push
or
dec
sub
and
push
shrl
cmp
daa
bound
xchg
je
jno
inc
in
mov
or
jne
pop
test
aaa
sbb
inc
adc
scas
jne
and
push
push
mov
enter
sub
push
mov
inc
adc
lds
add
or
add
pop
sti
scas
shrd
push
pop
bswap
inc
addr16
clc
inc
mov
mov
les
ffreep
test
add
mov
rcll
or
add
in
cmp
mov
or
insl
xor
jne
push
push
leave
js
jne
mul
jb
adc
or
outsb
pop
sbb
jne
out
xchg
test
pop
ja
dec
mov
les
mov
jl
movsb
loop
pop
add
fists
lahf
std
rcl
test
call
push
sub
push
lret
fcoms
ds
sbb
xlat
loopne
or
insl
repnz
cld
pushf
testb
add
in
dec
add
mov
mov
xchg
rorb
push
cwtl
pop
mov
clc
ja
aas
adc
jle
inc
mov
jge
push
inc
mov
dec
and
xor
cmp
sub
push
mov
adc
scas
cmp
pop
push
jge
mov
mov
mov
pop
lea
push
or
and
outsl
jp
or
mov
out
fs
sbb
sbb
addr16
mov
dec
scas
lcall
inc
inc
push
testb
fbstp
adc
dec
lock
jg
sbb
xchg
pop
push
or
sbb
mov
push
out
rcll
cmp
push
sbb
push
icebp
dec
lock
cmp
sbb
leave
push
xchg
nop
call
dec
cmp
stc
pop
test
or
push
ret
dec
aam
push
rorb
sub
orb
fdivs
cmp
ret
mov
sbb
rolb
push
jne
dec
scas
mov
cmpsb
cli
or
pop
sub
sbb
jne
int
movsl
jns
dec
push
jns
sahf
sub
or
sbb
sub
movsl
dec
insb
jne
data16
mov
adc
test
inc
xor
fiadds
push
pop
push
dec
and
fs
pop
or
cmp
je
add
orl
loopne
dec
jp
fadds
adc
rcl
adc
fsubs
imul
data16
cmp
inc
fists
jnp
push
dec
addr16
cmp
cmp
fsubl
mov
cmp
jl
mov
mov
loope
divl
fmulp
les
jae
int3
ds
lret
pop
sbb
in
adc
cmp
push
imul
cmp
fcomps
outsb
rcr
rcrl
push
test
pop
push
push
or
jmp
inc
inc
sbb
icebp
pop
aaa
jecxz
stc
mov
loopne
adc
or
lea
dec
loope
les
inc
loopne
pop
jge
inc
frstor
jge
and
add
jmp
ds
pushf
or
mov
inc
fsubl
sbb
add
sub
test
addb
xchg
aaa
pop
add
icebp
sub
js
inc
add
outsb
add
les
or
shlb
xchg
lock
incb
mov
clc
inc
adc
push
push
push
inc
jbe
and
mov
xor
add
mov
adc
xor
sub
add
pusha
shll
jo
repz
orl
and
test
cmp
or
mov
enter
dec
inc
in
sub
js
imul
mov
scas
sub
dec
xor
addr16
adc
push
or
int
adc
and
nop
in
jle
movb
sbb
dec
mov
or
das
push
nop
sbbl
add
je
insb
add
nop
add
xchg
add
nop
pusha
push
cmp
xchg
cmpsb
loop
cmp
push
test
xor
xchg
add
add
sbb
dec
lock
cs
pop
sbb
inc
adc
push
mov
sub
and
test
mov
mov
pop
mov
scas
xor
pop
adc
xor
push
les
add
mov
pop
adc
cmc
lea
add
push
das
or
and
jne
sbb
jb
mov
int
rcll
sbb
mov
push
ret
pushl
pushf
mov
push
push
sbb
popf
loop
sbb
rcrb
mov
js
xor
test
loope
shlb
push
mov
inc
inc
bound
pop
pusha
inc
mov
sub
shll
sbb
and
test
and
xchg
add
add
lock
pusha
and
loop
add
je
sub
sub
jne
das
xorl
jne
roll
je
loopne
jne
orl
cmp
loop
xchg
test
xor
aas
jb
cli
xchg
mov
leave
or
call
mov
adc
jge
mov
stc
frstor
sar
lds
add
cmp
mov
sub
popf
mov
out
cltd
imul
mov
dec
sub
add
xchg
stc
push
jne
mov
sub
inc
icebp
shrl
xchg
and
sbb
cmp
je
xor
stc
mov
xorl
fwait
jle
or
imul
and
add
xlat
lods
xor
add
or
into
js
pop
test
sub
or
invd
inc
pop
cmp
rcrl
dec
add
sbb
into
cmc
add
dec
mov
xor
leave
or
rorl
out
popf
lock
aas
push
or
sbbl
inc
mov
lahf
rcll
mov
mov
pop
mov
sub
pop
ret
push
xchg
mov
andb
dec
adc
adc
or
inc
pop
push
addb
inc
loope
jge
and
dec
adc
xlat
insl
adc
test
es
sub
mov
add
test
je
and
and
repnz
push
push
dec
push
mov
bound
je
andl
push
adc
lea
add
bound
sti
in
push
fdivl
and
mov
adc
jno
orb
inc
test
faddl
call
lock
lea
ja
and
or
pushf
add
je
mov
push
or
sub
fs
push
sbb
pusha
pusha
insb
insb
faddl
scas
les
rcrb
out
movsb
xor
stc
inc
cmp
mov
testl
je
cmp
je
inc
cmpsl
test
loop
lds
arpl
push
ret
cmp
lea
mov
hlt
sti
push
sub
cmp
pop
fwait
inc
and
cmp
dec
jne
sub
or
sub
add
sub
xor
push
outsb
dec
adc
pop
push
mov
jnp
lock
jb
cld
lock
int3
inc
mov
cmpsl
dec
dec
jmp
icebp
loope
jmp
mov
pop
xor
sbb
sbb
lods
lcall
jo
movsl
movswl
in
push
mov
xor
cli
add
add
push
and
mov
push
lock
ret
sub
mov
sbb
cmc
jecxz
rorl
push
flds
pop
adcl
push
push
test
sbb
push
scas
test
xor
fs
out
add
into
roll
push
and
jle
test
shll
jp
and
jne
adcb
cmp
xchg
xchg
out
sbb
jns
cmp
jno
xchg
mov
jo
popa
ret
popf
or
shl
nop
mov
inc
dec
leave
call
dec
add
je
push
jge
dec
scas
mov
lock
cmp
fstpt
stos
or
sub
pushf
cwtl
fidivrs
or
sub
sub
cmp
jge
cmpb
fwait
sbb
add
xor
add
js
push
push
fisttpl
and
dec
push
lea
rcrb
push
out
add
adc
mov
dec
push
or
mov
dec
pop
lock
shrb
int
pushfw
pop
fcoms
push
notl
pop
aam
popa
add
in
add
ret
out
xchg
inc
mov
push
rcll
or
sub
and
push
push
ret
imul
xor
sbb
aaa
cmp
das
shlb
cmp
rcr
ret
pop
add
mov
fs
dec
jle
dec
dec
pop
cmp
jne
popa
fs
inc
cmp
mov
inc
ret
jge
int3
mov
ds
push
lock
add
push
mov
xor
cli
shl
adc
or
add
adcb
push
popa
and
pop
cmp
lods
out
fimull
xor
repz
jno
and
adc
dec
sub
cmpsl
mov
shl
jo
mov
adc
xor
shrb
and
adc
mov
adc
cmc
rcr
test
and
xor
cli
sub
popa
dec
enter
lcall
cltd
or
js
push
push
push
push
ja
pop
mov
cmp
adc
fiadds
mov
mov
adc
js
cmpl
iret
inc
gs
push
fmuls
lods
mov
cwtl
fcmovbe
cmp
f2xm1
imul
inc
je
push
or
xor
jb
push
cmpsb
hlt
xor
pop
pop
ret
inc
into
lcall
xor
xor
dec
mov
xor
mov
movsl
add
jl
mov
sbb
sbb
and
cmp
xor
push
adc
out
xchg
jmp
daa
ret
xchg
rcl
mov
lock
lods
jmp
xchg
adc
or
mov
scas
ret
xor
xchg
mov
sbb
loop
xchg
mov
dec
sbb
ficoms
push
shl
fdivp
sub
mov
or
test
fimull
int
pop
and
daa
mov
push
imul
divl
jne
mov
aas
and
test
sub
adc
insl
lea
add
inc
push
js
xchg
add
mov
aam
mov
sbb
sub
inc
sbb
push
mov
inc
jnp
pop
mov
and
js
outsb
outsl
inc
aas
adc
fsubl
jb
inc
add
and
shl
jbe
sbb
add
insb
subl
mov
mov
lock
cmp
test
movb
push
fwait
jp
mov
push
adc
stc
fcomps
in
xchg
jo
or
cmp
jge
push
cld
push
ljmp
and
lock
je
pop
flds
mov
push
lods
sbb
mov
lea
popf
push
and
cmp
xor
or
xor
nop
xchg
pop
pop
push
inc
jge
cmp
push
add
mov
pop
add
and
sub
pop
dec
xor
call
addb
add
sahf
push
mov
pop
or
inc
jo
and
jge
or
sub
cmpsl
mov
leave
xor
and
mov
or
or
push
jbe
jp
mov
push
mov
sarl
dec
int3
add
add
xchg
push
sbb
dec
sbb
das
inc
mov
jbe
push
push
nop
ss
sub
add
dec
and
ss
sti
test
push
inc
xor
push
xor
addb
adc
lock
jg
add
fwait
cmp
lock
cmp
xchg
lock
ss
add
add
sbb
js
jg
icebp
dec
loope
mov
push
sub
icebp
push
inc
xor
jle
loopne
lret
iret
leave
adc
std
jmp
and
add
ljmp
dec
ss
incb
testb
pop
dec
pop
test
mov
cmp
push
inc
in
mov
dec
add
and
je
xor
sbb
mov
aas
xchg
sbb
pushl
jmp
push
pop
mov
pop
add
ret
rol
bound
mov
mov
loope
dec
push
inc
push
roll
add
sarl
sbb
pop
wbinvd
dec
cwtl
mov
test
and
pop
mov
inc
negb
jmp
mov
jl
orl
jle
add
xchg
add
pop
rcll
pushf
pop
and
cltd
ds
filds
dec
cmpsb
popf
mov
jecxz
inc
mov
repnz
jo
push
dec
jo
sbb
adc
fmuls
xor
push
ret
push
fcoml
dec
aaa
adcb
jo
dec
push
inc
inc
or
loop
clc
pop
adc
pop
adc
inc
fmuls
adc
cmp
cmpsb
shlb
xor
rclb
ds
xor
jl
push
push
or
and
test
xor
je
push
adc
push
cmp
int3
sub
xor
pop
push
sbb
jmp
and
push
cs
sbb
pop
mov
push
mov
mov
xor
inc
add
rcrl
push
mov
ret
cwtl
pop
lcall
hlt
movsb
add
pop
pop
sub
xor
xor
cs
xor
pop
lock
cwtl
sub
lds
sub
pop
mov
outsl
movsl
cmp
cmp
mov
mov
xor
add
mov
testb
je
sbb
mov
aaa
into
or
lock
mov
dec
jl
loope
xor
push
ret
sbb
adc
cmp
roll
and
or
rorb
inc
mov
arpl
adc
xchg
lcall
mov
in
cmp
test
sbb
roll
or
lret
add
cli
jo
out
ret
add
inc
push
dec
mov
pop
popa
add
movsl
mov
movsl
sarl
aaa
add
pop
leave
adc
cmp
jle
ja
jno
movsl
push
push
js
xorb
arpl
aaa
and
or
or
xchg
push
xlat
inc
decb
add
push
test
push
out
dec
inc
mov
in
push
rol
jmp
lcall
mov
xchg
add
xlat
pop
mov
mov
data16
loopne
push
xchg
or
mov
mov
call
mov
cld
pop
adc
xchg
neg
adc
loopne
out
jmp
xor
daa
out
nop
or
mov
inc
pushf
jmp
insl
jl
ja
mov
dec
fwait
or
mov
imul
test
imul
cltd
idivl
push
addl
sahf
ja
mov
lea
push
loop
xchg
int3
jmp
sbb
mov
js
cmp
add
or
push
pusha
mov
add
inc
mov
pop
pop
sub
push
out
xor
and
dec
inc
adc
sub
xor
and
xor
mov
rorb
sbb
add
inc
adc
xchg
fdivs
inc
dec
mov
xchg
cmp
js
pop
arpl
add
push
jge
faddp
jns
mov
mov
add
sbb
mov
nop
sub
adc
mov
insb
sub
push
push
jns
adc
test
sub
cwtl
push
add
outsb
sub
push
pop
or
push
push
cli
cltd
sub
push
sbb
rcll
mov
xor
mov
push
pop
push
or
jae
mov
testb
lods
mov
fnstcw
clc
cwtl
add
sbbl
xor
lahf
ss
data16
negl
sub
mov
pop
dec
mov
sbb
add
adc
in
adc
sbb
adc
fs
cmovle
jge
adc
sbb
dec
sti
into
add
push
cmp
jmp
jno
mov
xor
sub
add
fldcw
cwtl
or
not
push
xor
jo
add
mov
push
and
add
jnp
xor
aas
aad
pop
jmp
mov
mov
jae
mov
int3
and
aas
orb
movb
sub
pop
cli
test
pop
adc
inc
insb
shr
xor
stc
push
ljmp
adc
adc
pusha
sbb
add
hlt
dec
sbb
or
pusha
insb
std
adc
mov
cmp
mov
std
dec
mov
psllq
iret
arpl
or
imul
jge
and
jae
movsl
push
pop
in
stos
in
or
hlt
sbb
xchg
or
or
sbb
sub
repz
push
push
pop
adc
add
cld
push
cwtl
sub
jns
inc
sbbl
mov
int
dec
jae
fsubp
add
xor
adc
push
push
pop
adc
js
or
js
and
and
xor
aam
std
arpl
push
not
bound
sub
or
test
ds
adc
fldl
fs
mov
and
insb
insb
test
lds
popw
cmpb
xor
ficompl
add
call
out
movb
mov
push
adc
mov
mov
ljmp
dec
jne
dec
mov
jno
sbbb
rcrb
aad
lret
xor
xor
lock
push
jne
cmp
dec
adc
push
pop
mov
sbb
rclb
pop
mov
sub
xchg
pop
adc
xor
addr16
mov
pop
sbb
push
ret
jbe
daa
pop
fsts
xchg
push
mov
adc
cmp
or
pusha
bound
and
sbb
sub
fisttpl
xor
cs
aas
adc
inc
dec
hlt
daa
add
nop
jg
and
inc
das
push
cmp
loopne
fwait
or
jmp
mov
out
ljmp
xor
pusha
pop
mov
jp
clc
rorl
inc
adc
mov
and
sub
sti
xor
cmp
loop
cmovge
or
dec
popf
inc
js
dec
jp
dec
pop
inc
or
lea
mov
stos
xor
jp
je
jl
adc
adc
push
daa
andl
mov
or
sbb
pop
rorl
fwait
pop
and
xlat
xorl
lds
incl
rorb
push
adc
xor
xchg
fs
xor
mov
les
scas
jbe
jnp
mov
pop
test
fs
adc
sub
repnz
pop
testl
and
dec
cmp
ja
call
dec
mov
or
add
out
add
adc
fisttpll
cmpsb
or
sbb
loop
jb
add
and
jno
push
dec
dec
sub
es
jmp
hlt
lret
shlb
jbe
push
pushf
jne
adc
mov
jl
ret
cmc
je
add
adc
jge
lret
ret
shl
dec
jnp
aas
jnp
mov
adc
or
ret
add
and
ret
dec
jae
loope
rcll
adc
mov
add
add
loope
dec
js
imul
adc
pop
iret
jo
jo
pusha
pusha
jp
push
cwtl
push
and
daa
fs
movl
pop
pop
push
push
je
js
sbb
out
test
in
dec
inc
xor
pop
loopne
mov
loopne
mov
push
xor
call
int
sbb
mov
ljmp
rolb
xchg
andl
pop
loopne
mov
mov
lret
lods
call
sub
mov
jbe
and
sub
mov
sbbl
loope
cmp
imul
cmp
mov
push
cwtl
add
mov
imul
add
rorb
adc
pop
pop
xchg
adc
inc
mov
mov
subb
push
js
jecxz
mov
cmpsb
or
das
in
daa
xchg
les
add
rcrl
sbb
xor
xor
mov
cmc
adc
inc
mov
outsb
push
or
lea
push
cmpl
push
cmp
imul
test
pop
cld
push
mov
je
pop
xor
inc
shl
fwait
adc
add
cmpsl
lock
xchg
adc
es
adc
aaa
test
pop
adc
and
cmc
xor
outsb
adc
je
cmpsb
jne
ret
jae
outsb
decl
ja
je
or
je
add
sub
sub
jno
mov
adc
jge
sub
jb
xchg
push
or
test
cmpl
movsb
xchg
add
or
xor
sbb
sahf
pop
jnp
add
popa
jbe
push
jmp
cmp
mov
pusha
push
adc
adc
push
xor
inc
dec
sbb
inc
adc
fdivs
rorb
mov
xor
mov
dec
ret
adcl
lock
xchg
call
cmp
xor
lea
test
aam
inc
daa
inc
lods
stos
inc
mov
loop
rclb
enter
add
sbb
or
repz
std
dec
cmp
jmp
ret
andl
mov
ljmp
add
add
xchg
cmpsb
push
cld
mov
or
sbb
lock
mov
je
sub
mov
sub
or
jbe
hlt
add
loop
lods
and
sbb
in
push
fs
fwait
mov
mov
or
ret
push
adc
dec
add
sub
sbb
jbe
pop
aas
in
and
push
insl
inc
fidivrs
or
inc
adc
and
imull
adc
and
ljmp
cmp
mov
mov
and
pop
fidivl
push
icebp
dec
test
and
in
outsb
inc
cmp
dec
inc
push
popa
pop
and
loope
cld
adc
pop
fsubl
test
loopne
pusha
push
int
je
push
rorl
adc
clc
and
rorb
sub
or
xor
loop
insl
mov
push
add
xchg
inc
pop
mov
adc
add
push
aam
cmp
jb
lods
sqrtps
jge
push
packsswb
jmp
dec
mov
pop
push
xchg
dec
add
shl
fcompl
sub
shrl
sbb
mov
dec
push
dec
aas
lods
adc
cltd
inc
lea
pop
pop
gs
push
xchg
xchg
inc
add
add
add
add
orb
and
pop
pop
jb
mov
and
push
and
cmp
shll
fdivrl
gs
mov
jge
mov
les
data16
cmp
js
or
mov
xchg
sbb
fcoml
jo
cmp
fsubrp
push
xor
rcrb
int
push
ret
sbb
fmuls
and
inc
nop
andl
iret
pop
bound
add
pushw
ds
xchg
jno
sub
loope
mov
call
jno
sahf
aas
jl
sub
sbbb
je
cltd
xor
sbb
in
mov
sub
add
loope
roll
sbb
mov
push
fidivs
or
jmp
cltd
negb
popl
movsb
inc
jb
std
decl
jns
sbb
or
adc
push
cmp
adc
or
or
xchg
test
sub
mov
mov
addr16
pop
jl
je
es
jbe
sub
pop
adc
lock
fdivrs
mov
das
pushf
mov
dec
jo
nop
jne
mov
sub
jns
test
xchg
out
add
or
pop
push
fcoml
fnstsw
fsubl
pop
hlt
or
popf
icebp
test
inc
stos
sbb
pop
mov
imul
or
pop
sub
inc
and
nop
outsl
dec
pop
je
outsb
or
push
daa
xor
cmpsb
rorl
add
dec
sub
cmp
mov
or
or
dec
repz
rclb
or
mov
rol
push
lcall
mov
pop
cmove
and
sub
jl
sahf
pop
push
sbb
bound
add
andl
or
lret
enter
inc
sbb
pop
orl
pushf
push
pop
lcall
pushf
fstl
push
add
or
adc
mov
fsts
ret
xor
in
cmpsb
push
mov
in
mov
nop
mov
push
fmull
push
inc
leave
ss
int
je
rcl
add
pop
test
xor
cmp
adc
sub
or
icebp
add
jge
push
sub
sahf
xor
push
insl
repz
inc
xor
xor
xchg
loope
aaa
divps
in
mov
xor
dec
or
xor
xor
pusha
sub
test
and
cs
lret
fadds
cltd
inc
add
pop
in
push
add
loop
nop
cmp
sbb
lock
mov
mov
mov
arpl
mov
pcmpeqb
bound
jb
or
pop
adc
jl
push
decb
cmp
inc
and
arpl
and
add
jle
sub
test
xchg
adc
aad
mov
stos
enter
inc
jecxz
cmpsl
or
int3
mov
inc
xor
movsl
or
push
mov
cmp
jne
cmpsl
inc
or
lock
movb
icebp
popf
adc
cld
adc
inc
cs
sub
inc
adc
jp
push
mov
cmp
or
pop
jmp
add
dec
bound
or
jnp
mov
adcl
xchg
add
xchg
cmp
test
sbb
pop
dec
pop
les
pop
jne
xor
adc
or
movsl
enter
jge
ss
pop
mov
imul
sbb
js
repnz
test
inc
cmp
push
xchg
inc
fstpt
adc
jge
lock
mov
arpl
sti
or
sbb
push
sbb
xchg
mov
sbb
cmpl
imul
cwtl
or
push
addb
outsb
and
jp
sub
adc
sbbl
lret
movsl
pop
fwait
xor
sub
add
jnp
cmc
add
aad
xor
loop
sub
adc
push
inc
and
pusha
push
js
sti
popa
and
divb
jg
ret
inc
sub
into
jle
sti
push
arpl
sub
jb
mov
mov
lea
pusha
aad
mov
sbb
lcall
sbb
adc
nop
adc
xchg
fiadds
call
add
push
sub
jo
in
xlat
adc
xor
sbb
roll
bound
das
imul
nop
nop
cmp
cwtl
sbb
jns
out
adc
or
sbb
add
mov
add
adc
arpl
in
or
sysexit
addr16
push
lods
ret
cmpsl
int3
shrb
popa
pop
sub
cmpsl
repnz
test
mov
loope
mov
cmp
lods
repz
lock
cltd
sahf
inc
add
test
cmp
mov
pop
cmp
and
xchg
enter
or
or
push
movsl
repz
sub
xchg
pop
add
add
test
lret
dec
or
rorl
stc
or
pop
add
repnz
subb
cmp
andb
jg
je
cmp
je
rclb
push
mov
insb
xchg
test
in
dec
mov
mov
dec
adc
push
or
mov
and
aad
inc
adc
roll
and
dec
push
repnz
jmp
add
cmp
and
sbb
cs
mov
pop
push
cmpsl
push
or
fsubs
cld
push
mov
arpl
jecxz
hlt
sbb
leave
ljmp
mov
push
outsb
jmp
cmp
pop
adc
adc
outsl
and
cmpb
outsl
test
loope
push
data16
and
mov
dec
loop
jp
inc
add
jmp
in
cmpsb
xorl
inc
pop
jg
adc
push
cld
out
xchg
into
insl
test
popf
std
pop
jl
push
in
shl
in
enter
stos
cltd
push
dec
orl
clc
add
andl
sbb
push
lret
add
stos
pop
jmp
sbb
xorb
test
lret
inc
scas
outsl
cmp
bnd
add
jne
and
adc
flds
sbb
jbe
push
outsb
cld
and
jmp
lret
jae
and
sub
jae
or
pop
sub
lret
add
push
frndint
sub
cmc
push
cwtl
outsb
xchg
xchg
cmpsl
sarb
push
mov
enter
push
adc
ja
jb
cld
xor
sub
and
cmp
cs
and
xor
cmp
iret
inc
push
inc
cmp
inc
mov
sub
lret
sarl
cmp
inc
push
and
push
dec
xchg
pop
ja
add
inc
gs
or
imul
sahf
out
dec
jmp
outsl
test
dec
mov
jmp
insl
test
sub
int
xor
push
out
lcall
int
addr16
sahf
xchg
pop
pop
inc
jge
add
inc
mov
call
dec
sub
jne
adc
push
push
imul
adc
test
push
and
hlt
add
add
mov
js
rcll
sbb
pop
adc
and
adc
dec
test
push
fs
sub
arpl
add
push
js
dec
inc
pop
jbe
sbb
pusha
test
fsubl
nop
rclb
movsl
inc
lods
pusha
push
movsl
jb
inc
ret
add
insl
or
insl
lret
dec
push
orb
jo
int3
outsb
mov
sbb
clc
scas
inc
and
sbb
cmp
push
dec
fdivrl
jg
or
sub
inc
jecxz
pop
icebp
xchg
dec
je
cltd
fdivl
inc
in
xor
mov
add
xchg
sub
cs
jmp
dec
pop
in
test
orl
add
sbb
push
out
call
cmp
lods
xchg
cmpsb
mov
lahf
loopne
outsb
js
add
mov
xchg
loopne
loop
add
jb
lret
cmp
jne
cmc
add
loope
sahf
rolb
imul
xchg
into
popf
std
lcall
das
adc
add
sub
ret
dec
in
adc
and
roll
jl
jne
pusha
push
push
int3
sbb
jne
pushf
sbb
popa
add
inc
push
or
pushf
xlat
aaa
add
popa
lret
loopne
sub
pop
andb
shlb
add
mov
subb
in
push
adcb
cmp
add
add
imul
push
or
cmp
push
gs
add
xchg
push
shl
in
inc
fmuls
add
in
xchg
loopne
scas
mov
or
je
repnz
mov
inc
leave
xchg
cld
jno
push
push
mov
jge
cmp
js
add
cmpsb
jbe
push
lahf
pusha
int
and
xor
jge
cltd
inc
pushf
mov
scas
push
or
notl
stc
add
pop
ret
pop
cwtl
pop
cmp
jne
sbb
int
outsb
push
add
je
or
xchg
pop
cmp
pop
ljmp
mov
lea
insb
addl
push
lahf
cld
xlat
push
dec
adc
stos
stc
or
push
lods
jle
inc
xor
stos
sbbb
orl
jge
add
shlb
pop
push
mov
xchg
xchg
add
call
mov
or
jmp
jo
or
pop
cmp
xor
fsubr
in
or
sub
loop
mov
mov
dec
push
mov
jo
ja
xchg
adc
sbb
sbb
cwtl
sub
fucomip
inc
push
jmp
push
fisubrl
xchg
or
xchg
mov
pop
faddl
add
ret
mov
adc
and
adc
jo
sub
cmpsl
and
mov
sub
cmp
das
jo
jmp
arpl
popa
add
addr16
xchg
dec
icebp
call
xchg
fmull
sbb
xor
and
je
dec
push
push
cmpsl
cmc
int
ja
xorb
adc
arpl
or
rcrl
sarb
push
sub
sbb
subl
jns
pop
clc
or
stos
add
push
xor
andb
das
icebp
cmp
mov
push
jb
or
in
mov
cld
lcall
out
shll
push
leave
push
xor
pusha
sbb
add
cmpb
imul
imul
jns
add
sbb
rorb
lock
push
add
adc
sarl
sub
leave
cld
sbb
xor
push
sbb
nop
and
rclb
test
test
stc
jne
dec
stc
add
pusha
xchg
fstps
sub
adc
jnp
lea
add
mov
cmp
push
loope
mov
cmp
push
pop
pop
jmp
or
xchg
push
adc
outsb
push
or
pop
iret
test
xchg
or
loopne
ret
xor
push
lea
xchg
xor
add
xor
push
sub
xchg
and
cmp
fistpl
test
fs
enter
sub
int3
or
repz
adcl
test
out
inc
cltd
xchg
std
xchg
add
lret
ja
push
pop
push
add
inc
enter
rorl
adcl
cli
adc
jg
mov
add
insb
fdivs
andl
inc
cmpb
mov
ja
inc
mov
cmpsb
daa
scas
les
add
add
jnp
rcrb
ret
pop
jne
stos
call
aam
ja
dec
adc
ret
mov
mov
aaa
loopne
xor
pop
and
mov
xor
and
cmc
addr16
repnz
scas
or
jle
jbe
lods
pushl
clc
or
icebp
or
cwtl
mov
sbb
inc
loopne
pop
nop
add
jb
cld
push
push
filds
push
push
pusha
adc
add
int3
ss
mov
mov
in
test
sbb
push
int3
cmp
addl
mov
mov
shll
ficoms
and
dec
leave
mov
dec
adc
sarb
push
sbb
adc
add
push
jo
cmp
out
lods
shl
jae
movsb
enter
adc
cmp
adc
pusha
xor
into
cmp
dec
or
lret
or
in
sti
hlt
inc
lods
sbb
hlt
mov
mov
adc
or
push
dec
stos
rcrb
pop
inc
add
pusha
pop
cld
int3
add
jae
stos
jns
add
lock
and
andl
mov
jg
lahf
add
ficompl
mov
in
ds
rolb
lcall
or
mov
stc
pop
adc
push
mov
or
sarb
stc
pushf
adc
sub
mov
add
je
adc
fmull
andb
adc
leave
insb
and
lods
rclb
pushw
cs
adc
loope
xchg
imul
call
push
decl
xchg
les
push
sbb
ret
test
aaa
mov
pop
push
jae
sbb
nop
or
test
or
push
sbb
sub
mov
jo
adc
dec
dec
dec
loope
jecxz
push
pop
pushl
mov
or
inc
shrl
inc
lret
fimull
adc
icebp
push
hlt
mov
pop
mov
pusha
pushf
ljmp
notl
in
insb
hlt
je
jb
je
mov
mov
sub
movsb
pusha
dec
mov
adc
ret
sbb
xchg
sbb
inc
or
push
pushf
push
push
pop
dec
mov
hlt
lock
dec
ret
nop
jo
cs
adc
xchg
push
dec
pop
loop
jl
push
clc
shr
call
or
clc
xlat
repz
fsubr
insb
cld
sub
cld
dec
loope
pop
repnz
pop
add
lock
ja
and
jbe
sub
orl
int3
lea
ret
sub
imul
ljmp
outsl
lock
push
cmp
xor
sub
punpckhwd
jno
mov
leave
nop
sbb
cmpsl
orb
cmp
loopne
or
test
sbb
dec
push
push
sbb
add
push
push
rolb
push
xchg
lahf
sbb
add
inc
push
inc
xor
sti
jl
test
jg
cmp
add
mov
ret
mov
sbb
loop
adc
pop
mov
pusha
cmp
nop
inc
incb
and
out
sub
addr16
dec
add
jmp
or
movsb
cmp
mov
test
out
lock
and
movsl
xor
in
xor
push
idivb
xchg
cmp
sbb
addr16
jns
push
fsubs
xor
xor
jnp
adc
sub
mov
call
or
sarl
pusha
dec
shrl
dec
aam
fwait
aam
shlb
add
sbb
mov
xchg
push
scas
jmp
movl
movl
movsl
mov
in
pop
lret
mov
incl
dec
cmp
leave
add
decl
sub
mov
add
or
or
jp
clc
lcall
lea
push
xor
in
mov
push
mov
and
lea
rep
push
sub
add
mov
pop
scas
movl
mov
mov
cmpsl
jmp
mov
pop
jne
mov
or
jmp
add
and
inc
mov
mov
push
or
inc
movsl
jae
add
fs
push
and
push
or
repnz
hlt
mov
dec
cmp
and
cmc
cmpl
mov
pop
sub
inc
xlat
and
dec
mov
xchg
cmc
sub
cmp
push
mov
pop
rclb
and
mov
and
add
or
dec
and
mov
dec
sub
and
sub
push
xor
adc
cmp
xor
cmp
mov
out
mov
jecxz
dec
hlt
cmp
test
dec
ficompl
les
jg
sti
rep
loop
xor
int
push
jl
sub
or
sbb
cmp
loope
or
jae
inc
shlb
add
inc
fwait
xor
arpl
mov
outsb
jnp
and
jne
push
push
int3
mov
lea
push
push
mov
out
int3
mov
push
push
mov
or
loopne
adc
nop
inc
cld
mov
sub
dec
rorb
inc
test
pop
adc
or
fadd
aas
mov
mov
imulb
cmp
fsubs
adc
shlb
pushf
sbb
fildl
fcomps
outsb
sub
adc
mov
xchg
test
repnz
addb
mov
dec
repnz
scas
push
iret
test
and
push
int3
jl
or
jnp
inc
loopne
mov
push
push
push
xchg
cmp
xorl
je
aas
and
inc
push
mov
loopne
xor
jb
movsb
shll
push
push
push
insb
add
lock
movaps
test
inc
mov
push
sbb
cmp
push
push
enter
jl
push
ret
imul
cmp
push
notl
movsb
stos
mov
xchg
dec
xchg
push
aam
pop
pop
lea
in
sbb
mov
adc
bound
cmpsl
pop
arpl
mov
add
test
inc
insl
lods
push
loop
rolb
imul
sarb
dec
jne
mov
lock
es
add
pop
wrmsr
push
inc
sbb
andb
mov
adc
adc
dec
imul
outsb
push
ss
mov
sbb
add
jg
movups
ret
xchg
clc
or
int
lea
add
mov
jns
add
inc
adc
add
adc
push
or
call
push
cmp
and
fs
jnp
pusha
cmp
mov
pop
inc
mov
testb
add
cmpsb
nop
mov
and
popf
es
or
push
inc
dec
dec
loope
stos
movsb
dec
add
test
cmp
mov
adc
pop
inc
cmp
xorb
add
xor
test
add
xor
subb
adc
mov
aas
cli
sub
sar
jo
faddp
lds
or
add
rcrb
mov
xchg
js
dec
lahf
mov
and
dec
mov
add
jecxz
xchg
sbb
or
es
xlat
and
and
in
popf
sub
or
push
lcall
outsl
mov
ret
sahf
ja
xchg
push
lret
shrb
addr16
mov
lds
add
filds
cmp
push
in
roll
cmp
mov
popf
lea
je
pusha
inc
and
mov
shr
mov
shlb
lods
ss
cmp
sarl
mov
std
pusha
js
int3
jge
notb
je
mov
std
cmpsl
sub
xor
push
jo
insl
pop
jl
jno
sbb
push
cmp
ret
mov
jle
push
loopne
add
jbe
call
or
fwait
insl
jne
pushf
sbb
and
icebp
dec
or
add
pop
add
inc
pop
enter
mov
adc
adc
jle
stos
push
orb
mov
sbb
dec
add
jne
sub
outsb
int
and
incb
push
jp
cmp
mov
push
mov
rcr
mov
ror
push
iret
jmp
mov
hlt
jae
imul
add
pop
pushf
inc
sbbb
ret
stos
sub
push
or
icebp
sub
sbb
sub
in
push
loop
inc
inc
push
inc
and
push
loop
sbb
test
in
cmp
or
roll
adc
orl
push
xor
push
mov
mov
pop
cmp
rol
jae
cmp
add
push
sbb
sbb
sbb
mov
sub
jbe
adc
je
sbb
daa
or
cmp
nop
out
nop
and
addb
push
cmp
nop
or
and
fsubl
xchg
arpl
adc
cmp
pop
fwait
dec
and
adc
cltd
nop
and
dec
mov
mov
mov
and
je
mov
mov
jae
jmp
xor
add
orb
dec
mov
icebp
ja
xchg
or
or
sub
sahf
icebp
xor
js
push
sub
inc
jnp
adc
add
mov
mov
imul
or
dec
push
cmp
lods
pop
mov
ret
or
and
sub
adc
sbb
pop
inc
sub
addr16
inc
adcb
jo
out
xor
xchg
mov
mov
dec
dec
and
mov
test
and
nop
sub
call
xchg
sub
outsl
sbb
cmpsb
and
jg
fs
cmpsb
fs
es
cmpsb
fs
cmpsb
sub
inc
cmpsb
fs
cwtl
sub
dec
cmpsb
les
jo
ja
xchg
dec
ja,pn
aas
gs
mov
cmp
xor
push
inc
pop
loope
xor
xchg
dec
inc
test
and
sti
frstor
or
xor
mov
lock
mov
mov
fnstsw
push
aam
lea
leave
add
push
cld
or
int
ret
pusha
adc
add
and
pop
daa
adc
aad
sbb
adc
sbb
sbb
inc
inc
daa
addr16
test
test
adc
repnz
mov
jp
sbb
scas
adc
lea
push
push
add
fiadds
sub
mov
fadds
pop
xorl
xchg
or
and
add
xchg
fldl
xchg
fdiv
push
mov
loop
mov
pop
mov
xor
xor
repz
inc
mov
sar
dec
repz
fimuls
enter
sarl
loopne
cwtl
adc
in
aam
and
cwtl
test
loopne
push
repnz
mov
jo
adc
ret
mov
jns
xchg
hlt
unpcklps
hlt
mov
add
cmpl
mov
popa
pop
loopne
loope
les
inc
out
mov
inc
lahf
mov
mov
test
jae
cmpl
sub
adcb
or
sub
adc
mov
pop
lock
and
test
adc
mov
jle
sbb
mov
jne
push
or
ret
mov
loop
or
and
imul
insl
push
jl
mov
iret
lcall
and
sbb
test
add
xor
repnz
testl
jg
cmp
jle
mov
or
ud2
inc
adc
add
cmp
sbbl
and
addb
insb
outsb
or
movsb
js
jmp
cmp
leave
ja
popf
in
jne
sbb
mov
jmp
cltd
mov
jb
pop
lods
jmp
dec
xchg
jmp
xor
cmp
lds
cmp
jmp
pop
or
cmp
cmp
int3
pushl
leave
test
mov
dec
lea
jl
ret
lods
inc
sbb
or
gs
xchg
ret
jge
popa
or
jo
mov
in
or
or
scas
inc
cmp
addr16
aam
add
sti
cmp
and
mov
mov
sub
xchg
ret
pop
cmp
and
shl
push
fwait
sub
push
jo
sbb
pop
add
dec
sbb
xchg
lahf
and
aam
push
or
ret
adcb
mov
fucomi
inc
adc
or
jnp
pop
or
push
xor
lcall
insl
fcoms
mov
fcomps
aam
popf
cmp
jmp
pop
and
call
lock
addr16
add
pusha
stos
ss
push
mov
cmp
icebp
je
mov
fisubl
jae
sbb
and
inc
cwtl
jmp
popf
jge
and
sub
jmp
je
sub
pop
jnp
adc
jp
dec
inc
jns
pop
ret
and
adc
pop
inc
dec
and
inc
mov
jmp
inc
fcoms
fdivr
aam
add
pop
adc
fcomps
gs
mov
rcr
out
jl
mov
push
sub
push
test
push
add
push
mov
or
inc
jl
jb
or
sti
fwait
sub
push
inc
pop
clc
jl
mov
adc
adc
ficomps
or
test
jbe
jmp
pop
movsb
lock
lahf
pop
je
lds
xor
push
mov
mov
ljmp
pop
mov
or
and
add
mov
scas
or
mov
out
cmp
ja
sub
lock
add
ret
hlt
sub
outsb
test
pop
jge
mov
adcb
dec
movsb
or
push
sub
shrb
clc
fs
popf
data16
jno
cmp
rorb
in
mov
pop
xchg
fwait
pop
add
loope
fsubrs
lahf
add
mov
push
arpl
icebp
mov
loop
call
scas
sub
pop
dec
fsubl
clc
mov
mov
pop
or
dec
and
divl
push
adcb
jb
pop
shlb
jns
and
push
je
push
es
inc
inc
push
fistl
sbb
rclb
insl
mov
xchg
push
das
daa
clc
mov
sub
daa
lahf
xchg
in
fcoms
jle
lock
icebp
stos
dec
popf
mov
push
xor
out
insl
or
and
bound
rdpmc
dec
cli
or
cmp
or
stc
pop
pushl
loope
mov
cmpsb
add
inc
daa
mov
inc
push
mov
push
ljmp
or
push
enter
pop
nop
push
int
loopne
cmpsl
inc
pop
shll
sub
xchg
push
in
jge
mov
xor
cmp
ss
dec
ss
movsl
aam
dec
lcall
rclb
imul
adc
imul
loopne
dec
and
lea
pushf
jne
movsb
pop
shll
into
sbb
pop
add
cmp
sub
lods
mov
or
pop
fwait
sub
shlb
jo
dec
adc
fmull
insb
icebp
mov
and
rorb
push
pop
ret
mov
or
sub
insl
leave
aam
sbb
xacquire
or
pusha
push
jl
or
cmc
fs
out
loope
xor
dec
add
and
ret
loopne
pushf
lea
dec
test
cs
aas
sti
movsl
loopne
jae
pop
enter
mov
lock
or
mov
movsl
mov
jbe
adc
push
sub
adc
xor
into
push
outsl
loopne
sbb
xor
mov
add
aas
mull
xor
xor
inc
je
lods
or
push
das
hlt
xchg
inc
xor
and
xchg
jp
mov
adc
rcrl
arpl
in
or
mov
mov
setl
push
xor
adc
or
jne
and
fs
adc
das
sub
or
lahf
rol
mov
push
test
dec
int3
pop
push
test
pop
xchg
xor
lock
push
inc
inc
push
repz
inc
pop
test
mov
dec
inc
cmpsl
add
add
cmp
lock
push
adc
pop
dec
sbb
shlb
gs
mov
enter
outsb
shll
push
fdivs
push
adc
adc
mov
or
dec
lock
cmp
xor
or
xor
pop
add
scas
inc
ljmp
sbb
mov
popa
push
add
mov
mov
inc
ljmp
xchg
or
rclb
push
push
adc
push
sbb
inc
add
mov
daa
in
rcl
scas
mov
xchg
xor
mov
add
add
cmpb
orb
xchg
hlt
shll
xor
mov
dec
mov
push
mov
daa
inc
nop
adcl
dec
dec
mov
addl
xchg
test
add
ret
mov
popa
lds
mov
push
adc
fxch
jne
test
cmp
jle
xor
dec
adc
lock
xchg
xor
mov
sub
mov
xchg
adc
loope
call
add
pop
lea
cmp
and
sbb
or
movsl
rcrb
dec
in
pop
or
call
mov
and
pop
lods
test
adc
lods
mov
pop
cmp
test
push
mov
pop
xor
sbb
jns
cmp
into
sub
pop
enter
add
lods
inc
hlt
inc
or
stos
inc
jmp
in
push
or
add
iret
xor
in
enter
or
push
mov
add
int3
sbbb
pop
inc
push
inc
imul
or
mov
outsl
push
add
ds
in
pop
dec
clc
je
adc
je
sub
push
movsb
jo
or
jmp
push
and
jl
test
jl
and
mov
nop
xchg
imul
dec
mov
mov
insb
adcl
sub
jp
pop
inc
and
add
add
das
fdivrl
pushf
rcl
mov
dec
mov
sbb
out
sub
mov
fimuls
loopne
shlb
inc
xchg
loop
fidivrs
mov
inc
push
arpl
lods
jmp
dec
xlat
and
fidivl
lea
add
push
xchg
inc
pop
cmp
add
aaa
inc
addr16
fs
mov
push
js
or
add
out
lea
insb
and
mov
fs
mov
push
addb
test
pop
scas
outsl
push
pop
lcall
cltd
xor
jge
mov
dec
push
in
test
mov
jmp
adc
add
xor
cmp
sub
mov
xorb
mov
jne
testl
mov
hlt
dec
or
negl
pop
cs
add
rcrl
push
push
push
push
jbe
and
outsl
shl
cmp
jl
jmp
jnp
cmp
add
mov
imul
sbb
push
call
cmp
pop
xorl
les
and
ljmp
addr16
mov
adc
cmpsb
outsl
xlat
sbb
pop
push
push
repz
adc
lea
mov
lods
lcall
je
rcrl
sub
push
xchg
ret
push
movsl
xchg
loopne
add
or
mov
enter
test
in
push
shl
andl
xlat
sbb
filds
lods
pusha
sbb
xlat
add
sbb
fwait
movsb
or
jo
mov
xor
ret
pushf
pop
dec
or
ds
jbe
mov
jo
xor
inc
mov
fbstp
es
push
ljmp
dec
xchg
mov
adc
or
mov
mov
add
lds
call
jo
jne
push
sub
add
dec
and
sar
dec
sbb
mov
dec
mov
lcall
fildl
push
jl
mov
dec
xchg
stos
dec
xchg
ret
or
pop
mov
sub
xor
sub
mov
inc
xchg
lock
lods
adc
sub
jge
adc
xor
sub
inc
repnz
mov
add
push
and
and
sub
mov
sbb
mov
jnp
sub
nop
mov
mov
xchg
insb
dec
jno
mov
repnz
xchg
sub
insb
inc
rcr
or
inc
push
mov
ljmp
adc
add
mov
sahf
ja
dec
mov
inc
fdivl
add
icebp
mov
ret
icebp
sbb
jae
or
lret
mov
push
mov
sbb
popa
and
add
pop
dec
push
sbb
dec
loop
out
cs
sbb
decb
adc
inc
fs
push
sbb
jl
aaa
enter
jmp
outsb
lock
cmp
sbb
enter
jno
ret
sbb
jno
dec
or
insb
es
dec
cltd
sbb
xor
leave
pop
in
fnstcw
fs
hlt
lret
add
js,pt
mov
and
pusha
or
mov
push
cmpsl
daa
add
enter
inc
jns
lock
mov
test
lods
cmp
je
fs
fnstsw
mov
adc
je
imul
add
jmp
adc
mov
inc
ja
stos
ja
push
fcmovnu
mov
jg
outsb
adc
mov
insl
jbe
or
inc
sub
jge
iret
sbb
jle
xchg
lock
cmp
out
push
outsb
and
pop
bound
jne
jge
fsubs
sbb
fistpl
inc
outsl
push
lock
notb
sbb
je
push
cmpsb
xchg
dec
imul
push
sbb
sbb
mov
dec
fs
inc
jmp
inc
jo
scas
mov
add
addr16
and
jne
je
dec
add
loop
add
daa
mov
clc
nop
and
sbb
out
shrl
mov
jne
add
or
iret
daa
js
lret
jmp
pop
cmpsb
mov
sbb
dec
ret
mov
adc
or
rcll
mov
test
or
cmp
arpl
test
fs
rcll
dec
lcall
clc
loope
cmp
pop
jbe
push
add
sbb
pop
adc
push
mov
es
mov
mov
mov
fsubp
jmp
and
add
fdivl
dec
lret
cmc
je
loop
aam
xchg
pop
mov
sub
push
or
jne
pop
sbb
out
push
shlb
movsb
push
rolb
push
and
daa
movsb
jecxz
sub
negb
test
adc
in
xor
sbb
fcomp
sbb
push
adc
xchg
dec
call
or
mov
sbb
les
xchg
popa
aaa
ja
andl
enter
or
or
popa
test
adc
pop
adcl
ljmp
adc
mov
imul
js
lea
int
add
movlps
lcall
xorb
je
das
mov
sub
aad
xorb
inc
sub
nop
cltd
pop
js
adcl
dec
cwtl
sub
pop
cmp
test
mov
jle
inc
inc
lcall
and
pusha
pop
outsl
mov
mov
inc
add
fldcw
adc
jl
fsts
cwtl
adc
add
fsubs
sub
cmp
inc
rclb
jl
dec
insl
test
aaa
mov
mov
test
inc
dec
xchg
and
inc
mov
dec
fstl
clc
sub
and
cmp
xchg
outsb
adc
fwait
mov
mov
mov
xlat
subb
xchg
adc
xchg
add
and
cmpsl
fldt
jl
mov
test
push
mov
mov
adc
mov
gs
mov
clc
lds
iret
cmp
and
inc
sbb
push
cmp
push
mov
inc
mov
adc
jae
or
inc
movsb
decl
or
daa
dec
push
xor
xor
lods
mov
inc
gs
enter
cmp
xor
clc
shrb
pop
sbb
or
and
arpl
xchg
mov
inc
push
stos
push
add
jo
mov
xlat
jl
inc
sbb
mov
lds
cmpsb
sbb
cmp
cmp
xchg
add
mov
mov
xor
push
pusha
push
pop
mov
adc
pop
imul
lret
mov
in
fdivrs
fmuls
and
jge
jge
add
call
pop
push
addb
push
add
jbe
add
inc
cmp
clc
add
sub
lret
dec
jle
add
cld
in
out
mov
xor
loop
xchg
xor
shr
inc
or
add
sbb
mov
clc
adc
not
dec
cmp
out
popa
testb
call
add
aaa
jmp
add
pop
fwait
orl
and
jns
dec
loop
inc
dec
inc
pusha
jg
adc
mov
mov
andl
dec
xor
aaa
lds
mov
outsl
jo
or
jb
xor
dec
jo
jo
mov
jno
inc
or
mov
mov
push
adc
arpl
inc
out
dec
mov
cmp
add
in
test
and
mov
imul
gs
push
and
lret
loope
and
into
cmpsl
mov
fwait
cmp
cmp
dec
mov
sub
adc
stos
aas
jl
rcll
aam
lock
daa
mov
inc
push
or
inc
popl
stos
loope
mov
into
or
scas
fstps
into
aaa
fisubs
int3
lods
pop
sub
andl
jo
testl
cmp
mov
sbb
lods
mov
enter
cwtl
arpl
inc
sub
mov
or
cmc
jg
ljmp
sbb
mov
jmp
mov
andb
into
add
add
call
jmp
jg
test
mov
adc
xchg
adc
dec
test
insb
fcomi
push
push
inc
cwtl
ljmp
push
shlb
dec
cmp
mov
je
sbb
movsl
arpl
adc
shlb
les
push
lock
dec
mov
xor
push
xor
mov
cmp
sub
stos
call
xor
adc
cs
mov
add
pop
push
cli
dec
aam
test
loopne
add
sti
cmp
push
push
add
enter
fnsave
call
or
insl
in
adcl
jne
xchg
inc
push
nop
iret
xor
adc
push
insl
inc
stos
pop
or
shll
jne
std
cmp
addl
ret
push
std
dec
mov
mov
pusha
je
cmpsb
mov
or
fmul
outsb
and
jle
xor
orb
push
xor
adc
xor
shrb
inc
rolb
sbbl
xor
adc
sub
ss
adc
cmp
fcompl
mov
mov
pop
adc
fcoms
xchg
jnp
or
scas
in
inc
js
xlat
or
push
xchg
test
mov
mov
push
test
leave
mov
mov
rol
cs
call
rcrb
les
push
adc
popa
xchg
or
xor
imul
inc
roll
cmpsb
es
das
aam
fiaddl
test
adc
icebp
ret
icebp
xor
scas
xor
jecxz
insb
roll
pusha
imul
les
loope
faddl
mov
pop
mov
mov
sbb
pop
push
jbe
and
push
xor
clc
sub
sbb
divl
push
push
pop
inc
rep
test
jns
or
lcall
es
sbb
repnz
test
push
push
pusha
lret
add
lock
and
outsl
xor
je
push
mov
sub
lds
jl
push
cli
jmp
addr16
jno
push
ret
inc
sub
fsts
call
cmp
orb
fs
rcl
adc
jle
xor
push
add
adc
dec
push
into
idivb
sub
dec
loopne
arpl
ret
je,pt
es
pop
inc
jge
mov
pop
mov
push
add
push
mov
xchg
xor
inc
dec
repz
push
ret
jp
hlt
push
loop
jne
inc
lock
push
sbb
scas
ret
lret
push
add
lds
icebp
movsl
push
and
rcrl
and
test
imul
and
cli
scas
mov
pop
dec
push
xchg
add
sub
lods
dec
rcrl
add
and
mov
mov
pop
add
ficoml
mov
sbb
push
jns
cmpsl
lods
pushf
mov
mov
cmpsl
jns
int3
mov
in
adc
or
sub
mov
fdivl
add
mov
sub
lock
jmp
push
jl
test
clc
test
add
xlat
ret
pop
push
arpl
cmpsl
sbb
bound
pop
cmc
pushl
orb
xor
mov
mov
mov
stos
xor
mov
mov
fdivs
jg
scas
mov
inc
sahf
cwtl
addl
into
xchg
dec
test
jl
es
add
cs
push
in
inc
add
fisubl
es
sub
nop
add
adc
push
add
add
pop
push
dec
outsb
nop
fsubr
xchg
add
popa
push
and
mov
fistpl
inc
cmp
push
addr16
push
mov
es
clc
mov
lds
inc
sbb
lea
pop
nop
mov
std
xchg
and
cmp
and
ret
jo
fcom
scas
ret
pop
cmp
sbb
sub
lret
lcall
lods
sub
in
sub
inc
pushf
je
push
out
cwtl
xor
cmp
imul
or
bound
adc
dec
push
fyl2xp1
adc
movsb
sbbb
dec
adc
jecxz
les
icebp
mov
add
push
or
and
das
shl
subb
mov
mov
jl
mov
sub
aam
insb
pop
fwait
lcall
pop
push
into
mov
adc
ds
out
movsl
cmp
aam
mov
cs
mov
pusha
stos
pusha
cmpsl
mov
insb
inc
and
xchg
mov
ret
cmp
les
test
and
jo
pmaxsw
test
sub
push
loope
je
incl
js
push
mov
pop
push
cmp
mov
imul
icebp
gs
mov
add
mov
inc
pushf
arpl
outsl
xlat
and
inc
lea
add
outsl
mov
mov
jbe
lcall
mov
jp
xchg
loop
adc
adc
lahf
adc
xchg
cmp
lret
and
loop
mov
mov
jno
mov
sbb
sbb
subb
sub
sarb
gs
jge
dec
inc
mov
push
imul
xchg
xor
xchg
add
inc
mov
pop
out
mov
push
scas
out
adc
inc
push
pop
out
pop
and
adc
sub
sub
and
mov
jmp
pop
xorl
jg
or
rclb
push
push
es
cltd
pop
mov
cmpb
dec
popa
adc
sbb
dec
and
jns
aaa
sub
push
add
add
popa
and
mov
add
push
jecxz
push
std
mov
add
test
push
inc
dec
dec
and
add
mull
mov
sub
test
xchg
or
mov
call
lcall
call
jo
dec
je
inc
sbb
repz
scas
mov
add
int3
mov
sbb
pop
sbb
pop
mov
jmp
mov
jo
in
jmp
rcll
and
call
cmp
es
mov
icebp
sbb
aas
or
movsl
push
push
movsl
add
sti
push
xchg
faddl
fstl
mov
loopne
mov
mov
fsubr
pop
faddp
andl
xorb
dec
or
shrl
mov
ja,pn
test
pusha
lods
mov
inc
loopne
pusha
mov
scas
sub
adc
data16
dec
or
shl
dec
or
adc
std
inc
rolb
fdivrs
inc
adc
subb
rcll
nop
mov
pushf
inc
add
ss
mov
jg
jnp
push
clc
sub
sub
and
or
or
or
xchg
push
ds
cmp
dec
push
xor
std
pop
cltd
test
sbb
flds
iret
pop
aam
mov
dec
cmp
mov
mov
inc
in
dec
mov
int3
dec
sbb
pop
sbb
mov
lock
push
sub
sub
mov
jne
pop
in
sub
mov
add
and
scas
xor
cld
push
jmp
mov
cmp
jge
mov
push
sub
mov
mov
in
adc
push
push
xchg
ret
repnz
xorb
add
jb
adc
lcall
test
repnz
inc
cwtl
lods
cmp
jg
cmp
add
cmp
ficoms
or
pop
mov
in
add
shrl
into
inc
add
xchg
addr16
cmpsb
sbb
xchg
or
jns
mov
es
push
mov
dec
rorb
mov
imul
pop
pop
imul
mov
mov
push
fwait
mov
scas
mov
pop
and
repz
mov
stc
movsb
and
shrb
ja
les
push
mov
nop
hlt
or
ret
incl
dec
cli
jnp
fdivs
hlt
mulb
dec
or
jne
sbb
xchg
xor
pushf
jecxz
inc
mov
mov
nop
les
test
lahf
clc
and
aas
add
and
mov
lahf
mov
js
mov
xchg
dec
fwait
mov
dec
add
sub
or
adc
add
cmc
sbb
pop
sbb
xor
in
in
mov
adc
pop
mov
add
cmpb
test
jmp
add
dec
dec
test
repnz
loop
test
rclb
pop
out
pop
pop
loopne
sub
and
xor
mov
push
mov
push
push
mov
push
mov
cmovo
scas
fnstenv
popa
and
insl
adc
fmull
popa
nop
fidivrl
adc
and
and
fsubl
push
push
and
ret
lock
ds
roll
mov
dec
sbbl
dec
push
or
faddl
push
das
popa
xor
ret
aad
or
movsb
lret
add
andb
popa
and
arpl
imul
sbb
push
add
adc
or
nop
pop
out
mov
nop
mov
xchg
push
lret
icebp
mov
bound
xchg
pusha
lea
xchg
clc
xor
lock
sbbb
dec
ss
negl
mov
lock
clc
and
bound
repz
add
mov
sub
cwtl
adc
push
mov
lret
adc
mov
in
xor
add
ret
jp
adc
jne
mov
pop
cs
out
enter
mov
loop
inc
push
nop
dec
adc
arpl
je
cmp
sbb
xor
pushf
loop
leave
addb
sbb
fs
mov
mov
jbe
test
je
pushf
or
leave
mov
xchg
xchg
cmp
leave
addb
lods
mov
in
inc
inc
dec
push
mov
dec
or
popf
jp
lods
jmp
cltd
movsl
inc
sti
gs
mov
in
sbb
add
add
sub
add
push
inc
out
cmp
inc
sub
push
lea
jge
ret
outsl
cmpsb
pop
cmpsl
movsl
sti
add
sub
outsl
inc
xchg
ficompl
pop
xchg
mov
pop
sbb
pop
mov
push
mov
adc
call
sub
scas
aad
pop
cmp
or
lods
in
xor
push
loopne
dec
pop
dec
dec
sub
add
ljmp
rcll
fstl
jb
in
cmp
sub
jne
or
xchg
push
cmpb
push
lods
dec
or
inc
mov
pop
and
aad
lods
xor
loopne
loopne
test
jbe
jp
sub
call
testl
jne
and
mov
sbbb
mov
xchg
sarl
mov
test
inc
add
sub
push
xor
push
hlt
fnsave
subb
xor
jle
test
test
and
push
jmp
jecxz
not
cmp
push
or
xchg
rcr
xlat
jmp
xor
mov
outsb
pop
adc
or
and
adc
sub
push
dec
test
je
loopne
mov
inc
adc
scas
pop
adc
enter
push
cmp
mov
cmp
lock
ljmp
cmp
call
mov
adc
cmp
sub
dec
lock
lcall
mov
xchg
cmp
inc
push
inc
ds
popf
bound
xchg
xor
add
adc
sahf
into
test
pop
fmuls
dec
xchg
cmpsl
dec
pop
pop
xor
aas
mov
cmp
push
mov
cs
lock
inc
push
loopne
xchg
aas
nop
push
mov
clc
jne
and
lock
nop
or
clc
lret
fimull
ret
sbb
pop
rolb
adc
addl
push
add
xchg
setl
and
or
mov
jnp
add
inc
inc
mov
movsl
inc
pop
outsl
js
cmc
es
leave
lock
shr
mov
add
jmp
pop
js
xchg
call
ffreep
ljmp
loopne
sbb
jnp
cmp
adcb
in
inc
pop
pusha
inc
fistps
out
aam
mov
add
les
cmp
push
stc
es
clc
popa
test
sbb
mov
mov
popa
inc
in
in
xor
push
mov
ja
fmuls
xchg
jne
int3
jo
loopne
mov
add
aas
dec
imul
push
test
pop
icebp
insl
or
mov
pushf
inc
mov
ror
ret
and
enter
add
lods
xor
mov
test
push
inc
or
add
std
and
jb
aaa
enter
push
stos
mov
rolb
jmp
or
mov
clc
test
clc
jl
add
inc
ret
dec
sbb
rorl
rcrb
shll
add
dec
leave
loopne
push
sbb
sbb
cmp
add
add
add
mov
and
or
testl
add
sbb
daa
pushf
xor
or
ljmp
mov
pop
rcl
aaa
add
loope
add
and
or
mov
repnz
aaa
lahf
cmp
shrb
stos
stc
inc
xor
stos
push
mov
pop
push
daa
cmpsl
dec
sbb
push
sub
stc
cmc
bound
sub
mov
ficoms
dec
ret
loop
enter
xor
leave
or
jnp
pusha
gs
idivl
push
mov
cmp
dec
lahf
rcrl
add
mov
adc
addr16
mov
inc
and
clc
stos
push
push
add
push
hlt
jge
inc
adcl
push
aas
sti
cltd
inc
or
or
xor
push
call
xor
sbb
jns
xabort
in
cwtl
popa
out
adc
or
leave
faddl
lcall
call
addl
loopne
xchg
add
movsl
pop
jmp
test
fdivs
daa
mov
add
and
rcrl
pop
ret
xchg
sbb
xchg
inc
jbe
test
in
push
out
mov
fld
sbb
mov
roll
cmp
int3
sub
sbb
mov
sahf
cmp
or
clc
imul
cmp
dec
loop
out
enter
mulb
and
push
decl
es
psubsw
loope
das
enter
out
or
ljmp
rcll
pop
loopne
or
push
decb
inc
sub
jnp
pushf
rorl
push
sbb
leave
or
sbbl
add
push
xor
and
push
cwtl
dec
loopne
jg
sub
lods
into
lds
push
add
or
xlat
sub
cmp
pop
add
cltd
pop
mov
aas
add
sub
push
int
test
imul
inc
pop
sub
inc
test
and
dec
or
fs
sbb
inc
pop
dec
shrb
pop
inc
jmp
push
cmp
inc
inc
cmp
cpuid
outsb
and
jl
add
lea
xchg
push
xor
inc
nop
mov
mov
or
xor
inc
sbb
xchg
jge
loop
fnstenv
in
fidivs
out
add
and
sbb
mov
dec
xor
loopne
sbb
push
add
pop
cmp
xor
lret
inc
pop
add
outsb
sub
in
iret
repz
dec
jl
push
inc
inc
dec
loopne
leave
les
push
mov
push
push
or
push
cmp
sbb
pop
sbb
jbe
and
and
push
xchg
add
jl
inc
push
pop
lea
popf
add
push
clc
mov
roll
gs
cmp
sub
or
in
adcl
insb
pop
or
xor
inc
add
jb
pop
add
jnp
xchg
cmc
and
pop
add
sbb
and
aas
xorb
lahf
cld
jmp
push
xor
mov
or
adc
mov
pop
and
push
pop
or
in
xor
std
sub
push
in
xor
or
cmp
xchg
and
jo
ret
cwtl
sahf
popf
sbb
sbbl
and
or
or
lret
orl
dec
push
and
cmp
sub
and
and
add
sbb
into
imul
dec
je
das
movb
pop
movb
or
xchg
xlat
ret
pop
mov
inc
loope
jne
imul
xchg
movsb
xchg
add
pop
out
push
pop
and
pop
sar
add
or
incl
push
inc
pop
adc
sbb
and
push
and
test
cs
push
lea
sbb
mov
cmp
nop
push
push
inc
mov
xchg
mov
xor
pop
fisubl
popa
dec
mov
jbe
aam
ret
inc
mov
cmpxchg
or
dec
fcomps
test
sbb
inc
sbb
sbb
ds
add
jo
sbb
ret
adc
pop
push
cltd
insb
jbe
xorb
sub
insb
mov
pcmpgtb
adc
and
lcall
sub
jo
insl
call
and
pop
cmp
jl
xor
lret
into
push
dec
fimuls
jne
or
cmp
pop
sti
outsb
addb
cmpb
mov
mov
into
jl
insl
jecxz
inc
sti
push
pop
enterw
es
sahf
aam
pop
out
std
jg
mov
push
pop
je
push
mov
cmp
adc
outsl
and
les
jl
jmp
or
sub
push
xor
and
lahf
push
rcl
mov
inc
and
addr16
or
jns
pop
sbb
repnz
push
jmp
push
sbb
out
mov
dec
sub
dec
xchg
pop
ds
stos
xor
mov
lock
jne
jl
mov
mov
les
mov
dec
push
jge
lret
xor
leave
in
sub
insb
lea
roll
cs
pushf
pop
pop
sub
sbb
xchg
and
ret
or
loop
or
add
pop
popa
mov
pop
fidivl
or
stc
cltd
rcrb
xor
or
inc
loop
xor
nop
xor
cmpl
shrl
std
or
push
push
jno
inc
imul
xchg
mov
mov
lods
call
add
fs
stos
or
aas
add
or
push
test
push
and
pop
js
pusha
xchg
dec
jnp
add
dec
add
xor
addl
inc
adc
adc
or
add
add
add
mov
das
jle,pn
add
and
mov
push
iret
aas
jb
pop
xchg
sbb
adc
and
stc
mov
sub
test
pop
dec
push
pop
sub
in
mov
jg
mov
push
or
xor
insl
popa
adc
mov
jne
mov
jge
pop
or
mov
jge
dec
inc
adc
add
xchg
jb
icebp
adc
shr
jecxz
pusha
pop
adc
or
push
xor
push
cmp
fidivl
ret
mov
popw
push
mov
jne
loop
dec
adc
add
mov
fldcw
sbb
ss
movsl
dec
mov
mov
or
cmp
aam
stos
lea
dec
adc
inc
mov
dec
or
xchg
cmc
adc
mov
rclb
and
rorl
fdiv
je
inc
add
mov
fimull
lock
add
sub
ss
adc
cmpb
jne
push
jmp
cmp
xchg
mov
push
and
scas
mov
push
and
bound
js
insl
dec
test
add
or
inc
sub
cmp
xor
inc
and
and
xor
add
lock
inc
or
sub
int
inc
enter
mov
cld
push
imul
and
push
adc
push
add
cmc
add
aaa
aaa
or
or
add
call
shlb
fiaddl
mov
mov
nop
adc
pushf
fmul
xchg
mov
push
add
rol
mov
ss
shlb
jne
imul
test
pop
and
pusha
dec
inc
add
sub
mov
aam
and
jnp
and
adc
inc
and
lds
push
in
imul
fstl
nop
and
or
mov
or
add
push
sub
pop
and
push
sbb
dec
mov
mov
add
adc
lahf
popf
push
cmpb
ss
fimuls
orl
mov
stos
sub
add
jne
jp
jp
insl
dec
popa
add
rcrb
aad
jno
mov
cmp
xchg
pop
sub
or
push
mov
mov
cmpsb
cmp
dec
mov
dec
sbb
ja
inc
adc
pop
jp
pop
xchg
shrb
push
mov
xor
adc
int
sbb
rorb
and
ljmp
cmp
xlat
rcl
xor
mov
jne
rclb
loopne
push
xor
fisttps
inc
adc
add
sub
or
push
enter
inc
rcrl
dec
pop
xchg
jmp
test
test
insl
in
nop
jmp
jo
xchg
add
lahf
fstpt
sbb
or
rolb
pop
shlb
test
inc
push
out
jbe
or
xchg
dec
mov
daa
movsb
jnp
into
mov
imul
xchg
es
hlt
cmc
int
test
add
insb
sbb
add
push
or
clc
lret
and
out
cmpsl
sub
adc
adc
loope
flds
or
scas
jbe
and
and
adc
and
dec
or
pop
mov
movsl
jg
cmpl
popf
shrb
jo
lods
or
mov
pop
add
jl
inc
mov
movl
push
inc
popa
xchg
or
in
cmpl
lahf
sub
xchg
repz
jo
and
add
add
ds
icebp
adc
cmpb
clc
clc
jnp
sti
fdivl
jmp
inc
lahf
inc
sbb
mov
xlat
and
mov
adc
dec
hlt
jl
push
push
push
add
mov
fiaddl
mov
inc
pop
and
les
xor
loope
in
push
outsl
inc
mov
xor
hlt
adc
test
cli
ret
stos
adc
adc
movsb
and
and
scas
xor
dec
in
pusha
jne
mov
push
and
hlt
mov
jl
subb
in
ficoml
pop
dec
rorb
imul
shlb
add
jp
push
jg
je
rcrb
and
popf
xchg
or
dec
or
call
fucom
adcl
inc
dec
add
mov
pop
je
cmovbe
inc
cwtl
sub
and
inc
inc
jae
test
scas
cmp
push
insb
jb
sub
pop
movsb
xor
pusha
push
push
cltd
js
lds
faddl
faddl
sbb
or
out
inc
dec
add
mov
xchg
adcl
nop
inc
push
call
sbb
or
and
aaa
mov
fadds
test
hlt
mov
mov
mov
jne
imul
mov
xlat
xor
insl
pushf
or
add
pop
add
mov
cmp
fs
in
or
mov
aam
lea
faddl
test
jecxz
movsb
xor
lea
jmp
call
add
mov
cmp
xchg
adc
mov
inc
dec
push
enter
dec
inc
mov
jmp
lods
nop
push
in
sahf
sub
mov
or
sbb
push
adc
sbb
dec
jne
fsubs
cmp
and
lret
dec
adc
rclb
or
or
push
rolb
push
push
sbb
pusha
push
push
xor
or
roll
or
cmpl
aaa
jo
or
or
add
or
mov
sub
or
data16
push
mov
jg
cmp
subb
scas
and
push
dec
push
cli
pop
jb
cmp
xor
adc
mov
cmp
pop
enter
std
add
inc
arpl
in
cmp
shrb
scas
orb
pop
push
inc
xchg
inc
insb
jno
pop
call
xchg
icebp
push
add
add
aad
adc
adc
mov
mov
dec
add
inc
or
rorb
loopne
arpl
inc
js
push
test
sbb
jae
push
inc
addr16
test
adc
inc
leave
test
adc
add
and
inc
pushf
or
in
lock
xchg
addb
lcall
mov
mov
loope
in
jmp
add
cltd
rorl
int
adc
imulb
mov
adcb
cmc
cmp
sbb
pop
movsl
add
pop
adc
jo
in
iret
dec
sbb
aad
notl
xchg
add
addl
rcrb
subb
mov
cmp
lret
test
dec
inc
in
in
lock
jo
sub
add
xor
jbe
push
dec
add
xchg
push
in
push
lea
mov
sub
jns
or
or
pop
jmp
jo
mov
lods
push
cld
xchg
cmp
sbb
jne
test
add
fdivrl
scas
fmul
sbb
or
add
cmpsl
inc
or
outsl
nop
aam
sbb
dec
pop
inc
inc
sub
pop
lret
faddl
adc
fstl
xchg
fdivrs
mov
push
sub
data16
push
fistpll
cmp
imul
add
rclb
mov
ljmp
inc
mov
push
out
xchg
out
mov
add
xchg
mov
add
push
jo
shl
mov
inc
daa
fs
pushf
cs
shl
popf
mov
adc
and
and
adc
mov
or
shll
push
jecxz
sahf
xor
iret
jl
sbb
pop
cmpb
fwait
movups
jo
or
xchg
or
pushf
and
sub
pop
mov
scas
mov
push
xor
or
fiaddl
movsb
push
push
xor
or
gs
popa
mov
mov
mov
rorl
sti
into
imul
jo
imul
xchg
out
sub
pushf
stc
in
cwtl
sub
call
inc
sub
int3
xor
push
sbb
mov
lea
push
cmp
lea
cld
int
add
cmp
jnp
push
or
shll
mulb
out
test
test
and
add
and
push
pop
push
lods
adc
push
data16
cmp
stos
ds
push
add
adc
jb
addb
jo
sbb
das
and
mov
mov
int
lea
shr
push
pop
mov
jg
and
add
jp
mov
lods
stos
mov
lods
cmp
fiaddl
push
mov
push
enter
pop
iret
add
push
and
jbe
in
lods
shl
mov
push
roll
cs
movl
inc
and
movzwl
xor
insb
mov
mov
sbb
fsubs
or
out
mov
dec
fnstcw
sahf
jecxz
aaa
sarl
pop
mov
sbb
into
adcl
push
es
cmp
xchg
mov
cmp
pop
pop
sbb
shrb
mov
sbb
fsubr
rcll
adc
inc
adc
mov
mov
add
movsl
rcrb
mov
sbb
js
rolb
movb
push
popf
hlt
or
cmpb
xchg
push
clc
sar
fs
xchg
ror
int3
inc
cmp
out
fcmovb
xor
mov
cld
mov
sbb
and
add
xchg
test
mov
sbbb
repz
ret
cli
push
call
sbb
movsb
das
insl
or
sbb
cmp
ficomps
mov
shr
mov
mov
les
jb
adc
jmp
xchg
test
or
adcb
or
jg
push
ljmp
mov
fstps
jo
and
sub
jne
movsbl
pop
push
jbe
sub
cmp
mov
adc
and
je
xor
mov
std
pop
es
loopne
add
or
and
push
fcmovnb
ror
movb
add
pop
adc
in
nop
sbb
pop
ret
je
or
jle
fmul
and
or
mov
stos
push
pop
xchg
pop
jnp
push
cmp
jl
cmp
fists
mov
je
mov
add
dec
lods
lea
push
add
adc
imul
push
cltd
dec
add
adc
or
mov
pop
push
rcr
mov
hlt
push
push
dec
ja
and
gs
xchg
ss
jg
and
std
bnd
pushf
pushf
pushf
mov
push
add
add
pushf
pushf
pushf
pushf
push
pop
or
outsb
outsb
outsb
lahf
or
jnp
or
jbe
jmp
or
outsb
outsb
push
jmp
por
jmp
adc
pop
outsb
outsb
outsb
outsb
adc
push
adc
dec
adc
dec
adc
outsb
outsb
push
jmp
pop
jmp
sbb
xor
outsb
outsb
outsb
sbb
sub
jmp
sbb
and
outsb
outsb
push
jmp
pop
jmp
and
or
push
and
and
cmp
pop
test
adc
sub
xchg
mov
xchg
incl
sahf
out
mov
push
icebp
fsub
in
hlt
cld
out
sahf
imull
add
or
sbb
sahf
out
sahf
sub
xor
cmp
jns
dec
push
push
pop
out
sahf
out
gs
je
out
sahf
jns
orl
jns
pushf
mov
add
push
pop
in
or
and
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
rolb
and
aas
push
adc
pop
lahf
lcall
imul
andb
fwait
inc
sub
xor
pusha
xor
push
movsl
jge
cmp
xor
in
test
jo
test
subl
sub
out
addl
insb
mov
sub
lea
sbb
orl
xor
push
mov
decl
jne
shll
sub
pop
cmp
lock
cs
bound
add
xor
xchg
mov
jns
push
fcoml
xlat
mov
jbe
mov
lret
outsl
push
fldenv
add
jo
fdivrl
lock
js
lods
cmp
xchg
adc
xchg
shll
loopne
pushl
inc
jmp
xchg
add
shll
outsl
add
mov
scas
iret
icebp
push
xor
fucom
shlb
pop
push
setns
es
jbe
bound
cmp
push
jl
je
dec
rclb
pop
adc
sbb
ljmp
and
lods
xchg
and
sbb
xor
mov
mov
adcb
xor
stos
mov
cmp
js
cmp
psubq
fadds
pop
xchg
pop
adcb
inc
lret
ja
lret
dec
popa
pop
or
and
shr
cmp
ret
xchg
mov
sbb
jbe
jb
int
dec
adc
dec
mov
mov
push
add
ss
jge
imul
sarb
jnp
ret
dec
sub
lea
daa
cmp
adc
push
movb
daa
mov
subb
add
movl
movsb
ret
xor
movsl
cmp
jbe
mov
or
inc
or
repnz
ret
dec
sbb
fdivl
xlat
push
es
xor
scas
fbld
leave
in
jg
lret
stc
ja
lea
imul
lret
push
shlb
and
stos
addb
cmp
or
fcomip
or
push
mov
inc
or
inc
adc
or
adc
in
lcall
pop
or
adcb
sti
or
xor
pop
scas
imull
add
jnp
jp
add
pop
mov
push
and
icebp
ret
xor
add
push
andl
nop
mov
inc
adc
sbb
fsubrs
pop
stos
xchg
sbb
or
ss
int
enter
xorb
and
inc
or
lahf
add
mov
jno
dec
mov
xchg
nop
lret
xchg
push
popf
adc
push
cmp
lcall
mov
mov
add
sbb
add
lcall
add
out
push
stc
imul
fdivs
mov
rorb
sbb
and
adc
pop
movsb
pop
pop
dec
daa
lret
and
pop
lret
nop
sbbb
ljmp
mov
xor
push
sub
loopne
jno
das
xchg
jb
aam
ja
inc
cmovo
adc
xor
nop
adcl
pop
xchg
ss
call
in
mov
inc
cmp
jl
xchg
orl
fdivr
add
scas
mov
cmp
rclb
cmp
add
cli
fisttps
jmp
jne
lea
cmp
sub
or
jne
fbld
outsl
or
js
movsw
jl
js
xorl
pop
pop
hlt
mov
inc
mov
or
std
push
outsl
or
icebp
jl
dec
lret
jne
insl
mov
or
nop
jmp
sarb
and
dec
mov
jmp
and
movzbl
xchg
or
jle
pop
pop
testl
dec
clc
pop
push
adc
jmp
mov
pop
addl
inc
mov
push
inc
jecxz
addl
jl
pusha
js
ret
call
leave
sbbb
int
hlt
mov
sbb
mov
jne
xchg
lock
outsl
aad
lahf
cltd
ja
jmp
fidivl
lcall
xchg
mov
loope
xchg
cmpsb
mov
cmpsb
mov
pusha
ret
or
pusha
sub
mov
insb
nop
imul
add
cltd
ret
fadd
add
ss
pop
mov
push
fiadds
js
jne
or
xchg
mov
cmp
push
imul
sbb
adc
mov
gs
jae
mov
jecxz
test
dec
sti
js
adc
add
test
int3
mov
sub
add
pop
and
mov
and
rcll
stos
std
mov
mov
inc
or
or
nop
js
orb
xchg
xchg
rorb
aaa
or
nop
pop
cltd
sub
arpl
push
cmpsb
add
rolb
fsubrp
push
subl
mov
inc
and
aam
sbb
add
mov
push
sbb
inc
add
mov
test
cwtl
mov
fs
jnp
mov
data16
jno
mov
cmp
jge
mov
out
je
mov
pop
ja
scas
jne
push
ljmp
mov
adc
fisttps
sub
push
test
cli
imul
jne
repz
and
clc
and
loop
lea
push
js
js
sti
inc
add
je
jmp
xor
xchg
or
neg
imul
nop
jle
outsb
imul
adc
push
pop
jo
jp
call
cmpsb
or
xor
enter
push
cs
jno
push
or
insb
mov
or
push
mov
inc
insl
push
jle
jmp
jae
fisttps
push
jns
or
add
push
sbb
jg
sar
mov
inc
mov
fndisi(8087
test
inc
mov
cmp
or
ret
das
cltd
aad
int
lea
cmpsb
out
jo
je
inc
call
clc
xchg
mov
xchg
push
push
mov
das
mov
jno
and
sbb
fcmovb
sbb
aam
jg
adc
lret
into
sbb
addr16
in
inc
dec
cli
push
xchg
sub
xorl
fcoml
mov
or
test
dec
xor
mov
jnp
pop
cmp
cmp
mov
push
scas
pop
jmp
sub
jae
cwtl
push
inc
lds
daa
pop
push
loope
lods
push
cltd
pop
add
xchg
push
dec
pop
dec
jb
fiaddl
sub
adc
nop
jmp
movsl
xor
dec
repnz
vandnpd
add
cld
ja
sahf
push
js
stos
mov
out
cmp
and
adc
push
inc
adc
rorb
pop
or
pop
addl
xor
pushf
xor
call
or
inc
inc
pop
inc
inc
shll
int
sub
xchg
jbe
or
subb
jle
jp
xor
fiaddl
imul
pop
das
mov
fwait
adc
clc
ret
sub
fstl
adc
shll
cs
xor
adc
cltd
jae
xchg
pop
push
dec
or
cld
cmpl
xchg
repnz
adc
out
or
sbb
in
lds
test
xor
cli
pop
sarl
xchg
mov
in
jl
pop
push
xchg
ret
or
sbb
mov
je
inc
mov
data16
inc
pop
and
cli
lock
add
inc
pop
in
je
xorl
xor
sub
test
jno
adc
or
inc
push
push
mov
adc
inc
jo
sub
enter
test
ljmp
pop
je
mov
cmp
sub
or
add
push
and
sbb
ja
lcall
jae
xor
xchg
shlb
dec
cmp
push
xchg
adc
pushf
jnp
sub
dec
insb
loopne
test
adc
test
pop
mov
adc
xchg
je
or
mov
sbb
mov
or
pop
jecxz
xchg
fstps
stc
xchg
inc
popa
fcompl
outsb
mov
ds
je
rorl
mov
xchg
jne
cmp
xchg
or
mov
pop
inc
lock
icebp
mov
push
xor
insb
mov
mov
insb
cmp
add
sbb
je
sti
call
bound
daa
clc
imul
xor
lea
xor
in
scas
and
addl
cli
xor
js
fimull
hlt
push
and
out
push
push
add
out
sub
cltd
sbb
and
jg
hlt
js
lds
push
and
jl
leave
inc
imul
aam
push
mov
movsl
test
popf
xor
aaa
pusha
adc
inc
jb
cmpsb
xchg
dec
in
pop
enter
or
or
and
adc
sbb
insl
je
xor
mov
cli
dec
sbb
cs
and
cmpsb
imul
pusha
mov
add
push
pop
xchg
sbb
sbb
pop
add
pop
insl
fdivl
fcmovne
leave
sbb
xor
int3
push
ret
movb
and
stos
jne
push
cltd
or
daa
js
out
mov
out
cmp
sbb
js
jle
jecxz
add
repnz
add
jp
ret
arpl
outsl
dec
lea
push
lds
mov
mov
test
mov
sub
jg
popf
fildl
daa
popf
ret
inc
out
mov
pop
mov
adcl
insl
dec
dec
sbb
int
cmp
jle
cmp
call
mov
push
push
and
les
std
mov
inc
fimuls
cmp
je
cmp
push
addl
push
push
push
nop
cmpsb
xchg
sbb
sbb
xchg
push
sub
adc
shll
icebp
or
mov
and
pop
ljmp
add
test
loopne
sub
sbb
add
jb
ret
test
mov
jmp
fstpl
fcmovnb
adc
bound
popf
and
push
leave
imul
xchg
mov
pusha
lods
push
stc
dec
lods
push
mov
addr16
adc
cmp
mov
push
push
adc
jo
pop
mov
add
xchg
and
xchg
jae
add
cwtl
and
aaa
fs
add
mov
push
push
xorb
dec
xor
or
xor
or
cmp
pusha
leave
mov
cmp
jb
mov
roll
in
xchg
cmpsb
les
push
jl
mov
mov
lea
jg
push
cs
mov
ljmp
shrl
push
cmp
jge
mov
hlt
push
pop
mov
inc
inc
mov
add
push
mov
push
push
icebp
add
fadd
mov
mov
adcb
lock
clc
clc
cld
jmp
cld
xor
mov
push
xchg
dec
gs
add
add
add
and
imul
add
adc
cmp
incl
lret
orb
mov
mov
or
push
gs
sub
or
xchg
call
or
mov
adc
std
testb
adc
je
dec
je
pop
pop
and
out
loop
popf
or
mov
rep
add
lret
sub
icebp
ljmp
xchg
testb
mov
test
je
cmp
jne
push
rcrl
sbb
adc
mov
arpl
roll
xor
lock
inc
inc
mov
cmpb
popf
xor
or
gs
lret
idiv
inc
inc
imul
pop
lret
pop
and
clc
jb
addb
sarl
lahf
fnstenv
push
add
rorb
sbb
aas
cmp
mov
imul
cmp
or
push
inc
arpl
xor
lock
ja
sahf
cli
cmp
je
mov
pop
jbe
inc
test
jmp
movsl
enter
pop
cld
mov
sarb
in
clc
jge
pop
test
xchg
imul
jae
insl
mov
ljmp
xor
mov
pop
repnz
dec
push
clc
mov
cmp
je
cmp
push
cmp
jne
inc
jne
xor
push
in
stos
pusha
or
dec
pop
jns
stos
add
insl
xorb
xor
jb
mov
je
dec
cmp
fnstcw
jne
push
dec
add
sub
add
ret
adc
cmp
arpl
cmp
add
add
push
incb
orl
sub
jmp
jp
jl
or
jg
mov
sti
sub
jmp
and
push
jmp
jg
in
inc
jl
inc
jg
aaa
jp
add
shl
dec
xor
jmp
mov
into
enter
repnz
les
outsl
adc
test
or
inc
xchg
xor
in
xchg
adc
rol
push
sbb
mov
push
inc
pop
pusha
push
pusha
js
test
test
js
sub
lods
push
pushl
out
or
cmp
je
jl
pusha
mov
jg
pop
fs
jmp
rolb
or
xor
xorb
inc
lods
iret
dec
jl
aaa
lcall
shll
jl
xor
popa
addl
fldt
pop
das
movsb
add
push
lods
xor
xor
fsubs
inc
cmpb
aaa
inc
pop
inc
mov
mov
shrb
idivb
call
daa
mov
in
rorb
arpl
outsl
mov
push
push
dec
lods
dec
push
scas
std
cs
pop
cmovbe
sti
test
adc
push
cmp
mov
push
inc
xor
sub
jnp
cmp
jnp
ja
lret
pop
and
cmpsb
test
adc
push
js
and
mov
inc
mov
mov
arpl
outsb
add
jne
mov
mov
add
insl
movsl
cld
cmp
mov
xor
inc
mov
add
imul
roll
je
xor
leave
out
lret
rcll
xchg
or
test
jne
xchg
push
mov
ret
dec
jg
loop
sbb
punpckhwd
add
push
mov
dec
dec
out
mov
inc
cwtl
add
or
xchg
push
add
dec
mov
aaa
mov
xchg
lea
inc
mov
inc
sti
adc
mov
aam
shlb
jne
jmp
mov
inc
je
and
sbb
pop
push
add
js
shll
lcall
dec
inc
inc
loop
xor
fimull
xchg
mov
xchg
push
adc
in
movsl
les
ficoml
iret
das
dec
arpl
adc
shl
cmp
push
lahf
add
dec
push
std
jbe
and
adc
data16
ss
pop
or
jmp
push
rolb
mov
lea
fstl
inc
add
cwtl
sbb
jl
adc
fmuls
inc
inc
or
leave
imul
or
jl
and
xchg
xor
or
add
add
mov
xlat
loop
xor
pop
adc
insb
jecxz
pop
jne
push
movb
xor
add
xor
arpl
cmovg
push
cmp
jmp
cmp
addr16
dec
cmp
aaa
sbb
push
lock
jmp
imul
add
push
xor
pop
stc
cmp
cmp
or
notl
xor
cmp
outsb
xor
sbb
push
or
insl
inc
or
or
movsb
jne
sub
cs
sbb
and
or
ss
or
flds
jmp
and
lcall
das
add
jg
cmpb
jne
leave
jb
lods
insl
sbb
imul
shlb
int3
adc
sbb
outsl
dec
ror
sub
ja,pn
or
dec
ret
and
dec
mov
cmp
movsb
xor
mov
adc
mov
mov
adc
or
dec
jnp
stos
cmp
sub
xchg
xchg
xchg
ds
test
push
outsl
xor
add
push
and
mov
rolb
cmp
push
push
clc
gs
mov
lea
jb
pop
sub
jo
repnz
test
arpl
mov
adc
pop
adc
add
sbb
xor
dec
adcb
fwait
mov
mov
adc
xchg
dec
dec
and
jne
push
cmp
ret
push
mov
sub
cmpsb
add
mov
loope
pop
or
or
push
inc
insb
je,pt
rcr
enter
push
clc
and
subl
pop
cmp
hlt
dec
push
sbbl
lea
push
sub
inc
sbb
cmp
leave
jl
sbb
mov
adcl
mov
cwtl
push
mull
add
pop
sbb
pop
adc
sub
xlat
adc
mov
sbb
roll
or
movsbl
ret
push
pop
pop
shl
inc
call
xchg
pop
sub
cmpl
push
cmp
xchg
and
cli
xchg
sub
call
inc
repz
loop
out
pusha
call
out
addr16
rcrb
mov
mov
or
xorl
inc
inc
outsl
sub
mov
mov
jmp
aam
push
adc
leave
sub
sbbb
sahf
xchg
fsubrs
bound
pop
and
xor
lea
lcall
pushl
cmp
jb
dec
jmp
push
arpl
lds
mov
inc
sti
fnstenv
dec
insl
pop
and
sbb
out
sbb
js
ss
push
or
fidivl
addl
hlt
adc
lock
je
pop
mov
xchg
pop
push
cmpsb
add
inc
ljmp
mov
xchg
cli
push
mov
sahf
dec
jne
add
and
sub
aas
inc
je
dec
adc
mulb
rcll
insl
jne
xchg
test
or
dec
cmpb
xor
xor
pusha
outsb
jb
inc
push
scas
push
xchg
xor
push
mov
mov
mov
dec
lods
add
inc
sbb
add
pusha
js
test
orb
or
outsl
ds
push
jecxz
mov
jo
fildl
jmp
push
filds
push
adc
lret
and
xchg
nop
xchg
jo
pop
pop
in
or
sahf
dec
hlt
push
add
mov
in
in
inc
pop
pusha
add
add
dec
and
rolb
iret
test
and
xorl
cmpsb
orb
aaa
mov
or
inc
inc
fsts
daa
pop
xchg
mov
or
cmpsl
cmp
jne
sbb
add
push
bound
sahf
icebp
xchg
cltd
lods
jle
sbb
jno
iret
andl
xchg
out
data16
jge
and
add
into
je
mov
rcrl
enter
pop
pop
push
mov
sub
andl
jmp
sbb
cmp
cmp
test
mov
loopne
mov
in
roll
movsl
lcall
stos
push
cmp
faddl
or
inc
mov
mov
cmp
ret
addr16
loope
add
xchg
mov
pop
push
loopne
jle
dec
inc
sbb
adc
cmc
in
sbb
xor
jo
cmc
jno
or
lods
adc
jmp
push
mov
or
or
push
data16
jno
dec
mov
jns
ret
add
cmp
ds
and
xor
add
cmp
bound
leave
push
sub
push
cmp
pushf
fstpt
scas
cmp
push
dec
push
arpl
mov
mov
pop
daa
sub
push
subl
or
movsb
mov
inc
mov
xor
pop
imul
ds
lock
loop
xchg
dec
push
push
jmp
bound
mov
fsubs
inc
push
push
and
inc
cmp
sahf
push
mov
nop
pop
adc
hlt
xchg
sbb
or
add
js
sbb
fsubl
scas
push
pop
or
test
mov
sub
mov
imul
out
mov
xlat
call
cmpl
popf
add
in
lock
inc
jmp
pusha
push
jae
aad
sbb
adc
and
add
push
addl
imul
add
lahf
mov
dec
ret
mov
push
adc
sub
mov
daa
and
ja
movsb
xor
add
and
shrl
fwait
or
int3
xchg
and
jns
shrb
mov
xchg
push
cmpsl
ret
and
xor
movsb
xchg
fdivrl
inc
fsubrl
test
pusha
lock
push
roll
out
fmull
push
pop
andl
and
adc
rorb
mov
sub
fiaddl
add
pop
in
fadds
dec
pop
hlt
insl
adc
and
and
dec
xchg
lahf
lea
or
and
insl
out
cwtl
pusha
popa
icebp
mov
mov
cs
cmp
inc
adc
cmpsl
insl
cmp
sub
push
xor
xor
mov
xchg
dec
inc
push
xor
pop
mov
mov
and
sub
jle
jle
icebp
and
jg
add
sub
fld
aaa
cli
jmp
data16
or
sub
inc
dec
test
jmp
shlb
adc
xchg
sub
cmp
jmp
mov
or
jbe
pop
adc
push
mov
imul
jp
push
jle
sbb
ret
outsl
and
lea
daa
pushf
jecxz
cmp
dec
push
pusha
cmp
mov
and
popf
jo
js
sbb
rcrb
js
push
dec
push
mov
cwtl
push
popf
pusha
enter
lds
rol
and
xor
fldcw
pop
jl
pop
jmp
rorb
ljmp
lret
fildl
je
dec
push
mov
and
out
cmpsl
sub
adc
dec
ss
adc
add
popa
repz
cmpsb
hlt
or
out
adc
adc
movl
outsl
roll
outsb
in
inc
or
and
dec
in
sub
sbb
int
movsb
pop
jmp
fisttpl
mov
and
adc
inc
jns
and
jo
sti
roll
push
pop
sub
rorb
dec
or
or
push
ret
push
dec
sub
subl
sub
sbb
adc
push
and
imul
lods
or
adc
mov
clc
mov
mov
repnz
out
daa
push
cld
cmp
jge
sbb
je
out
inc
add
add
xor
addr16
adc
dec
adc
jne
push
pop
mov
cmp
cmpl
push
pop
scas
cmp
jne
pop
push
xchg
ret
jae
cmp
jmp
sbbb
sbb
pop
pop
jae
test
and
ds
cli
push
sub
psrad
cmpsl
lea
iret
fmuls
shl
push
jmp
lea
outsb
jecxz
daa
sbb
in
pop
dec
xor
call
mov
mov
clc
adc
sbb
pop
jne
inc
adc
sbb
xor
inc
dec
sub
dec
lock
fwait
dec
mov
popa
popa
arpl
and
pop
and
scas
test
cmp
jge
loopne
mov
js
mov
pop
inc
sub
loopne
scas
xchg
nop
sarb
mov
push
sbb
shll
mov
cmp
test
sub
es
loopne
fsub
jl
jp
pop
jmp
sarb
or
or
rcl
xchg
and
jecxz
cli
mull
adc
pop
or
insl
mov
sub
mov
std
out
jae
cmp
pop
mov
mov
fiadds
cmp
adc
add
fcomps
bound
insl
cmp
jg
dec
fbstp
rorb
or
shr
rep
adc
fiadds
pop
insb
movsl
sbb
mov
cmp
jnp
cmp
jb
lret
add
push
jmp
pop
add
cmp
mov
pop
scas
stos
pop
jg
sub
mov
adc
mov
or
inc
jae
xchg
call
loopne
outsl
testb
add
fs
jg
push
or
sbb
decl
lods
mov
pop
ret
push
mov
rorl
cli
or
pop
pushf
les
lods
adc
adcb
jmp
inc
sarl
pusha
sub
fucomi
adc
daa
movsl
mov
fwait
jne
xor
lods
ret
je
lds
cmp
ljmp
xchg
cmpsb
mov
push
mov
or
fwait
neg
adc
add
push
loopne
adcl
arpl
xchg
mov
ret
jg
jb
addb
rcl
cltd
clc
sbb
and
mov
je
dec
xchg
scas
or
dec
and
call
imul
jne
ror
push
fsubrs
pop
xchg
pop
adc
dec
sbb
mov
rcrb
sbb
cmpsl
aam
mov
sbb
shrl
sub
in
jo
scas
movsb
sbb
repz
sub
addl
subb
adc
add
xor
loopne
inc
mov
xchg
adc
push
pusha
divb
inc
ret
or
cmp
cmp
daa
leave
call
sub
aas
pop
scas
ret
cmp
pop
in
mov
ljmpw
sub
adc
xchg
rcll
in
andl
or
jp
xor
inc
pop
lds
aaa
push
test
aam
clc
push
mov
insl
imull
lret
and
ss
fstps
mov
sar
dec
xor
add
hlt
push
or
je
verw
dec
shlb
cld
sbb
xorb
sti
mov
push
mov
out
jne
or
inc
inc
push
dec
jae
mov
pop
cltd
iret
adc
cwtl
add
cmpsl
adc
pop
mov
inc
fimuls
push
mov
inc
cld
je
sar
xor
adc
push
mov
cwtl
js
enter
lock
mov
push
dec
bswap
mov
cmpsb
ficomps
ds
jg
ret
subb
clc
push
lret
inc
imul
or
xchg
dec
cmpsl
push
movsb
mov
je
push
mov
lds
loope
sbb
mov
inc
push
popa
or
push
cs
push
adc
andb
dec
pop
popf
nop
and
inc
mov
pop
sub
sub
add
or
or
jle
jmp
add
rcrl
lds
cmp
sbb
lret
push
popf
fadds
push
pushf
mov
mov
pop
push
cmp
clc
jmp
nop
sub
cs
sbb
or
or
push
mov
nop
int3
lock
pop
inc
add
sbbl
loop
loop
data16
inc
xchg
mov
in
jge
dec
mov
stos
xchg
test
fs
dec
insb
xchg
or
push
cmp
push
adc
js
xchg
dec
dec
jo
mov
clc
cli
mov
cmp
fcmove
dec
aas
scas
xchg
ja
push
cld
mov
jo
ljmp
fnstenv
outsb
js
ja
js
cmp
xor
loop
rclb
cmp
call
push
adc
mov
jb
and
push
add
add
mov
mov
pusha
push
adc
or
pop
ja
shll
popf
std
xchg
dec
mov
sbb
push
rolb
cmp
mov
jp
jne
mov
lret
pop
aas
adc
jne
mov
adc
fcomi
ss
cmp
es
in
das
pusha
pusha
jle
push
xor
pop
div
xchg
cmpl
inc
or
fwait
cmp
inc
mov
ljmp
lock
lods
push
dec
dec
sbb
movsb
adc
inc
cmpb
loope
push
adc
data16
add
push
adc
lea
outsl
in
shl
jmp
jp
xor
xchg
mov
push
or
cmp
cs
cmp
fsubl
andl
gs
sub
lods
andl
lock
or
rorb
jne
or
cmp
sbb
push
inc
mov
fucomp
shrl
ret
jo
shlb
adc
sub
cmp
insb
hlt
sub
jne
bound
adc
mov
rorl
cmpsl
test
jle
movsl
movsb
insb
clc
int3
add
sub
fisubs
cmp
inc
mov
mov
push
mov
mov
loope
mov
test
cmp
jb
neg
and
je
sub
outsl
push
icebp
fisttpl
jmp
loopne
add
jnp
std
je
adc
and
jmp
stos
mov
dec
jnp
lahf
xor
rcrb
add
imul
add
hlt
inc
add
shrb
repz
leave
xchg
cs
movsl
popa
xor
mov
or
pop
sbb
fimull
jo
adc
xor
xchg
adc
je
mov
xchg
call
or
add
pusha
sub
jb
mov
popa
jbe
scas
pop
push
loop
test
pop
and
pop
or
fnstcw
xchg
loopne
lods
cs
and
clc
jg
fs
in
jno
add
movd
movaps
out
cmp
enter
shlb
jle
adc
mov
push
add
lret
sti
sub
je
cmp
and
lret
or
aaa
xchg
ljmp
pop
xor
cmc
and
in
add
call
adc
or
hlt
adc
sbb
mov
pop
add
ffree
roll
jbe
and
fnsave
addps
int
sub
fcmovb
sbb
adc
push
dec
adc
pop
jo
pop
test
sar
in
sbb
and
orb
xchg
mov
mov
rolb
pop
add
sti
std
or
add
xorl
test
mov
les
mov
or
int3
jmp
dec
mov
sub
ret
adc
pusha
lcall
movsl
or
test
mov
fwait
mov
dec
aad
mov
cmpsb
pop
mov
inc
dec
pusha
imul
jbe
loope
pusha
mov
sub
and
test
push
loopne
aad
incb
ficoms
shr
les
and
inc
sub
clc
ja
mov
sbb
mov
push
ljmp
je
cmp
jne
inc
cmpb
out
addb
and
add
or
adc
add
aam
dec
sub
in
push
or
mov
mov
ret
daa
xchg
ljmp
daa
popa
dec
cwtl
inc
push
ss
adc
mov
cwtl
mov
xor
dec
fs
mov
lret
nop
nop
stos
dec
xchg
mov
js
pop
decl
xor
mov
pop
mov
xor
inc
stos
add
scas
xor
adc
adc
jmp
and
pusha
adc
push
mov
lods
push
cmpb
mov
jmp
jns
movsl
pop
loopne
popa
test
inc
push
adc
inc
aam
and
mov
bound
movb
sub
ret
sbb
pushf
pop
addr16
sbb
sbb
sbb
test
pop
out
inc
mov
enter
cmp
push
rolb
mov
inc
xor
add
inc
add
jno
hlt
addr16
movsb
jnp
shlb
jp
leave
icebp
xor
cmpsb
js
in
insb
mov
dec
sti
and
and
test
or
jp
fldl
pop
cmp
jmp
push
and
fnstenv
add
scas
or
fistpll
out
push
mov
or
inc
jmp
std
add
jnp
hlt
push
mov
pop
or
loope
ja
hlt
jle
inc
imul
and
nop
sbb
stos
fimuls
push
push
mov
jmp
inc
cmp
xor
push
sbbb
jl
push
out
sub
out
in
imul
sub
je
pushf
sbb
shlb
lock
sub
imul
inc
jb
sbb
mov
pop
ja
movsb
dec
mov
jb
adc
xchg
or
push
inc
sahf
aas
data16
lret
add
xchg
fldln2
xor
pop
xchg
out
lret
push
push
ret
add
je
jae
enter
addr16
aam
or
sbb
movsb
push
popa
jo
inc
push
jns
arpl
sbb
repz
cmp
js
pop
shr
arpl
or
mov
icebp
mov
sahf
rcl
add
cmp
push
push
cs
mov
adc
adc
cmp
lea
bswap
aaa
mov
inc
push
test
dec
and
jne
insl
cmp
xlat
test
jmp
jp
outsb
loop
sarl
jne
out
call
adc
inc
xor
mov
ds
loope
cmp
xor
es
loope
or
js
lret
jne
dec
jmp
shl
out
xor
jne
inc
aaa
xchg
fcomps
mov
jmp
loope
jns
inc
shlb
jmp
sub
sub
pop
shr
test
inc
dec
push
jmp
stos
std
lea
jno
int3
mov
test
dec
cmpsb
sahf
mov
mov
cmp
jo
xchg
fsubs
stc
repz
ret
in
adc
out
dec
xor
jno
pop
jne
rcl
sbb
dec
ret
stc
or
rep
jmp
ss
rolb
jb
imulb
mov
add
test
cmp
adcb
add
es
push
shl
rcl
scas
and
repnz
and
lods
repnz
test
dec
mov
pop
lea
push
dec
add
dec
cmpsb
nop
inc
xor
mov
add
sahf
out
push
dec
inc
cmp
testl
mov
mov
push
sahf
out
sahf
call
lock
out
hlt
hlt
clc
clc
cld
cld
lods
mov
mov
add
jns
shll
jmp
or
jecxz
clc
mov
nop
inc
push
fildl
inc
cmp
sbb
lea
dec
scas
mov
pop
and
std
fmull
fwait
pop
cld
out
aas
or
ds
push
daa
stc
sub
adc
nop
push
and
inc
insb
fiaddl
dec
gs
jl
mov
add
sahf
inc
push
out
push
add
nop
dec
dec
rcrb
mov
addr16
mov
bound
rolb
jnp
out
rcr
loopne
lock
repz
lds
ss
sbb
iret
repz
adc
adc
or
and
repz
or
out
iret
and
sbb
and
dec
push
adc
add
dec
adc
pop
mov
pop
push
xor
jmp
leave
cli
shrb
jmp
imul
mov
mov
or
or
inc
nop
push
jl
negl
ret
adc
fidivs
sub
loop
fists
pop
xorb
ror
lea
adc
jp
sub
and
mov
iret
mov
mov
rcrb
mov
addb
inc
test
or
popa
lds
mov
push
jecxz
xchg
daa
fistpl
andl
cmp
or
js
adc
xor
insl
inc
pop
fisubl
int
pop
mov
shl
rol
pop
orb
sbbl
enter
je
and
inc
ret
jb
loope
jmp
inc
and
xor
xchg
cltd
inc
popf
jb
and
in
fmuls
dec
jno
icebp
repz
and
popa
sbb
lock
cmp
jle
test
arpl
fisttpl
dec
push
outsb
ret
jbe
sub
inc
aaa
xchg
cmp
xor
push
add
push
add
lea
cmp
fisubrs
out
cli
lret
sub
cmp
jne
fnstsw
testb
pop
or
add
sbb
fcompl
add
stos
or
sbb
dec
stc
dec
push
add
call
push
mov
add
mov
sbb
je
jne
aad
inc
js
cmc
lock
cmp
and
mov
push
cmp
jg
inc
xor
mov
or
inc
mov
xorl
push
jbe
mov
add
xchg
adc
adc
jp
stc
ss
add
push
arpl
pop
and
jb
leave
fistpll
cmpl
jge
adc
xorb
mov
jo
xchg
or
les
and
mov
add
sub
inc
les
xchg
test
mov
aaa
or
adc
push
pop
loope
cmp
jne
cmp
or
or
push
push
and
loopne
add
sub
pop
movsb
leave
inc
or
sbb
adc
sub
inc
sbb
bound
mov
add
dec
rclb
jne
dec
mov
aas
mov
frstor
xlat
repnz
lods
loopne
out
pop
js
push
ljmp
in
push
fisubrs
lods
jne
adc
jmp
push
sub
mov
jo
mov
jecxz
xor
fs
or
sti
imul
xor
lods
call
pop
gs
push
fisubrs
push
adc
xchg
mov
fadds
shl
mov
sbb
fcoms
es
sub
push
xchg
mov
loopne
ja
pop
jbe
lea
adc
sbb
inc
pop
data16
data16
push
sbb
fwait
shlb
cld
jb
push
clc
jbe
xchg
xchg
sahf
and
and
xor
push
jmp
prefetchnta
js
inc
dec
adc
jmp
cli
lret
test
jne
test
cmp
orl
jl
or
push
jnp
adc
divb
cld
cmc
je
mov
sbb
add
pop
push
cmpsb
sub
arpl
cmp
xor
negl
cld
test
out
inc
popl
adc
outsb
xor
pop
dec
mov
fs
push
ds
or
xor
jo
cld
cmc
inc
lahf
jp
test
xchg
and
jmp
adcl
push
sub
add
loopne
adc
add
mov
js
xor
add
or
or
leave
inc
dec
jns
xor
push
rolb
push
test
shlb
out
rol
sub
outsb
jl
push
pop
sbb
lods
cmp
iret
mov
fiaddl
pushf
or
dec
ret
out
lods
jmp
or
push
loope
pmaddwd
push
push
or
xchg
pop
rcrl
fs
push
sbb
xchg
rolb
test
aam
ret
mov
repnz
pop
and
xchg
clc
dec
jne
jmp
stos
repnz
mov
jl
ret
cmp
dec
jne
mov
shlb
sahf
xchg
frstor
jl
xchg
push
mov
data16
xor
enter
test
sub
rcll
inc
mov
das
insb
dec
insb
push
sarb
cld
rclb
sub
outsb
into
aam
add
or
push
int
sti
scas
in
cmp
jne
mov
push
cmp
jne
dec
rcr
cmp
jne
call
loopne
mov
aam
orl
jb
scas
test
inc
incl
dec
or
adc
scas
loop
aas
jmp
std
push
xor
cld
pop
jae
aas
cld
jmp
fldt
rol
nop
adc
adc
inc
inc
inc
enter
push
or
push
mov
mov
pop
add
push
or
and
inc
ljmp
push
adc
repz
mov
mov
rcrb
push
mov
jns
or
andl
mov
xor
or
pop
std
andl
adcl
pop
pop
sub
nop
pop
pop
or
data16
inc
xor
ror
popf
cmovno
lock
mov
adc
sbb
test
or
add
add
or
cwtl
js
out
sbb
pop
adc
lret
movb
jmp
add
hlt
xchg
aaa
add
fmuls
add
cmp
xchg
inc
and
jg
add
mov
dec
mov
mov
das
mov
mov
clc
arpl
push
push
push
push
daa
mov
sub
rolb
and
mov
adc
adc
mov
jae
out
dec
out
or
jb
lea
inc
and
add
sub
push
mov
sbb
mov
jmp
adc
adc
pop
xorb
or
sbb
outsl
mov
sub
push
pushf
adc
adc
mov
cmp
adc
dec
pop
adc
inc
mov
or
push
xchg
clc
push
mov
push
cmpsl
or
xchg
xor
mov
sub
das
in
mov
mov
lret
xor
iret
int
or
push
push
dec
mov
ljmp
or
adc
or
fsubs
mov
add
idivb
ja
add
not
and
sub
mov
add
sub
inc
or
outsl
xchg
mov
push
sub
call
push
push
add
add
test
adc
push
adc
loope
add
cltd
xor
pop
mov
push
ja
inc
inc
lcall
sti
das
add
cmp
ja
mov
inc
je
mov
lea
in
mov
mov
sbb
or
add
jmp
or
mov
adc
push
mov
or
add
scas
mov
pop
add
mov
inc
cmp
jb
stos
orb
jae
add
data16
dec
ja
add
sbb
pop
ret
and
xchg
xchg
subl
ret
add
or
fiadds
jge
push
push
sub
or
lcall
or
mov
lret
imul
dec
stc
addl
xlat
shr
xor
jo
and
or
xchg
roll
fsub
ret
js
jne
dec
mov
inc
cld
dec
ss
out
cmp
je
repnz
cmp
inc
aam
adc
add
aam
xchg
pop
addr16
mov
dec
std
cld
sbb
and
inc
pop
loop
adc
xor
test
add
in
lea
inc
sub
ror
dec
inc
or
jl
and
lret
adc
mov
mov
cmpl
pop
ss
dec
sbb
mov
xor
jecxz
popa
xor
inc
jmp
cmp
mov
add
add
sub
xchg
mov
push
pop
mov
xor
adc
cmp
fcoms
mov
push
ss
js
or
mov
adc
in
jne
pop
int
mov
add
lods
adc
mov
pop
or
mov
mov
and
cmp
rolb
push
lret
sbb
popa
loopne
loopne
xor
mov
sub
or
or
daa
js
test
jbe
push
or
rolb
and
dec
movsb
xor
sbb
rclb
push
adc
rorl
push
push
cltd
jecxz
xchg
adc
sub
xchg
sbb
sbb
inc
xor
or
pop
sbb
movsb
shl
inc
mov
add
mov
sbb
lds
popa
jmp
les
inc
mov
pop
push
xor
jne
mov
hlt
pop
inc
add
mov
mov
inc
mov
add
mov
jne
fs
add
add
adc
pop
cmp
shlb
aas
push
roll
test
add
dec
mov
lds
push
nop
add
insb
jne
inc
adc
int3
push
xor
adc
sbb
dec
or
push
jns
push
fidivrl
adc
test
je
push
ljmp
jne
test
cwtl
or
push
and
add
jecxz
sti
jno
pusha
mov
jp
je
inc
fldl
icebp
lea
push
adc
or
mov
aaa
xchg
adc
cmp
ret
add
clc
mov
imul
mov
and
jbe
and
or
adc
xor
pop
and
test
or
or
out
fldt
sti
or
test
fadds
or
adcb
inc
dec
movb
xchg
mov
sub
push
xor
sub
movsb
mov
lret
xchg
xchg
mul
dec
mov
or
imul
push
mov
mov
add
mov
adc
xor
ret
pop
pusha
mov
sub
mov
push
ja
xor
stos
mov
pushf
popa
inc
fistpl
or
sub
cmpsb
adc
cmp
inc
hlt
dec
and
repnz
aad
jecxz
ret
push
inc
sub
sub
add
inc
sarb
fdiv
lret
repnz
mov
inc
xor
inc
movsb
sar
add
test
cmp
pop
sub
push
or
sti
or
gs
shlb
add
sbb
rcll
inc
pusha
data16
push
or
cmc
mov
and
jmp
add
jl
adc
loop
or
imul
mov
xchg
sbb
jne
ja
rdpmc
mov
jp
fmuls
xor
test
subb
out
sbb
shrl
andb
lea
cld
dec
sbb
mov
push
jge
arpl
adc
dec
sarb
in
jmp
movl
pushf
out
loopne
in
rcrb
mov
int
je
push
insb
push
lretw
push
cmp
pop
addl
dec
jecxz
adc
or
jne
pop
fldt
or
push
dec
cltd
pop
mov
pop
aad
sti
decl
mov
pop
xor
cli
add
pop
sub
movsl
ljmp
xor
inc
xorb
rol
pusha
or
xchg
xor
mov
inc
aad
or
loopne
dec
ficompl
pusha
add
rclb
aam
mov
push
xchg
xchg
stos
and
mov
adc
dec
or
mov
hlt
rol
add
push
in
sbb
inc
iret
repz
push
repnz
add
add
adc
clc
push
fstpt
mov
loopne
js
pusha
test
test
push
inc
sti
inc
add
push
imul
fcoms
xchg
in
loope
sub
mov
or
jle
adc
cmp
add
or
jg
jb
sbb
cmp
add
pop
iret
or
je
mov
paddusb
idiv
rol
or
jg
mov
adc
aam
or
addl
shr
or
daa
loope
or
push
sbb
jmp
dec
je
add
or
pop
pop
jnp
jmp
pushf
bound
insl
sbb
fstp
inc
add
sub
sbb
and
imul
sub
push
push
fildll
push
lea
push
test
mulb
dec
push
dec
pushf
add
sbb
cmp
xchg
lcall
push
push
addr16
jne
mov
mov
pop
add
dec
into
lahf
orb
inc
jne
pop
sbb
lcall
test
jl
xchg
push
je
cmp
and
jnp
dec
xchg
cmovp
arpl
pop
or
or
jg
mov
mov
imul
mov
iret
or
sub
js
jbe
leave
add
mov
add
jmp
rorb
add
clc
push
and
sub
aad
dec
dec
les
push
pop
inc
and
rorb
or
push
fdiv
and
add
add
jecxz
cmp
into
and
lock
lods
orb
add
arpl
pushf
add
mov
push
mov
adc
sbb
das
xlat
mov
push
add
int3
inc
sub
mov
jmp
lcall
sbb
pop
sub
dec
rolb
sub
adc
test
or
fst
fsubrl
add
xor
je
mov
mov
sbb
dec
and
cwtl
addb
popa
or
mov
pop
jle
mov
cmp
aaa
push
pusha
ss
cli
or
lea
inc
xchg
xchg
and
dec
pop
shll
push
scas
mov
cmp
add
mov
push
decl
das
ficomps
dec
cmpsb
pushl
sub
xor
add
sub
push
add
clc
pop
pop
out
outsb
dec
mov
mov
sub
or
orb
sarb
sbb
xchg
hlt
push
push
dec
push
mov
sbb
mov
add
adc
lret
push
push
add
dec
cmpsb
mov
push
inc
lods
movsl
fldl
push
stos
sbb
mov
rol
scas
sub
cmp
push
mov
mov
push
sarl
inc
xor
bound
pop
icebp
lahf
out
jnp
jns
add
inc
cmp
pop
stos
fdivrl
xchg
clc
push
mov
stc
mov
rorl
mov
int
imul
add
cwtl
jmp
loopne
inc
shlb
pop
adc
push
lods
mov
aaa
dec
or
je
ret
mov
sbb
cmp
xchg
mov
inc
movb
call
and
testb
pop
inc
mov
sbbl
or
pop
mov
push
je
xor
sub
shrb
popa
cmp
jne
or
push
cltd
pop
jne
push
dec
pop
sets
xchg
fisubl
mov
int
push
mov
jg
pop
das
in
add
aam
int3
push
push
add
pop
loope
mov
inc
fdivrs
mov
fs
lret
inc
dec
out
jo
add
scas
push
jne
push
adc
mov
xlat
and
xor
lahf
mov
mov
cwtl
jge
orb
add
inc
jns
das
scas
aaa
jb
jae
push
fstpt
mov
cwtl
hlt
enter
orl
mov
push
pop
and
jmp
inc
and
ss
mov
push
je
lea
cltd
inc
jl
jge
sahf
lods
add
outsl
ljmp
pop
movsb
adc
xor
xor
aam
pop
lret
movsb
sbb
dec
add
push
mov
test
adc
test
iret
fs
xchg
lcall
dec
in
cmp
and
in
jl
pop
imul
test
push
add
jmp
shll
inc
stos
ret
lahf
or
orb
out
div
lods
addr16
sbb
outsb
loopne
cmp
inc
or
adc
rcrl
dec
cld
jmp
adcb
pop
push
movlps
and
xchg
add
push
shr
and
mov
scas
sub
ja
pop
push
ja
or
mov
rorb
add
mov
inc
dec
call
cmpsl
dec
inc
pop
sub
xchg
and
cmp
push
inc
popf
jmp
mov
pop
mov
dec
pop
in
push
leave
cmp
xlat
mov
push
lahf
repnz
jle
mov
cmpsb
mov
std
fsubrl
xchg
ret
pushf
sar
jmp
dec
mov
rcrb
adc
icebp
movsl
ljmp
jbe
pop
jne
mov
in
les
sahf
addr16
jp
arpl
add
add
inc
repnz
xor
aad
jae
add
mov
mov
fidivl
jae
aad
lods
xchg
cvttps2pi
xchg
pop
push
mov
pop
push
leave
pop
les
adc
sar
add
add
gs
fdivrp
mov
add
nop
or
inc
adc
mov
dec
jmp
jns
lods
xchg
push
aam
mov
jns
les
add
loop,pn
sahf
push
or
call
mov
fisubrs
xchg
pop
nop
push
mov
mov
lcall
pop
rolb
fidivrs
mov
push
dec
jns
out
push
pop
pusha
push
loop
inc
repz
push
movsb
mov
or
pop
inc
xchg
inc
lods
cmp
inc
push
test
les
push
mov
or
push
pop
cmp
int
adc
sub
pushf
adc
mov
shlb
push
inc
fmuls
testb
jne
push
fldcw
sbbl
lock
dec
jle
rol
cli
add
push
pop
pusha
add
loopne
jmp
push
mov
jne
lods
and
push
stc
sbb
xor
fcoml
add
mov
inc
and
cmp
mov
jne,pn
out
or
push
scas
push
andl
and
rep
addr16
push
pop
sbb
or
popf
push
andb
xor
inc
notb
cmpl
fbstp
jle
in
push
fnstsw
and
jns
orb
inc
cmp
in
add
daa
ljmp
popa
xor
popa
add
mov
insl
mov
iret
add
test
add
inc
enter
daa
dec
sbb
push
adcb
push
adc
xchg
mov
jns
adc
xor
add
int3
or
int
xor
adc
test
add
sbb
pushl
sbb
in
jge
push
lock
daa
pop
call
test
mov
rcrl
cmpsb
and
enter
lcall
and
dec
mov
movb
jmp
ret
shrl
leave
sub
std
add
mov
aam
mov
mov
xchg
push
rolb
mov
subl
shll
lock
adc
or
cmp
adc
cmp
sub
inc
test
orb
jge
mov
xor
jne
std
pushf
mov
cwtl
or
mov
push
sub
movsl
jge
stc
pop
pushf
nop
clc
lods
test
add
divl
mov
add
fdivl
scas
mov
and
push
adc
imul
mov
imul
shl
jle
sti
rolb
out
lock
xor
jb
test
mov
add
xchg
aaa
push
and
pushf
sub
lea
xor
mov
test
and
pushf
xchg
andl
or
jo
mov
sub
mov
xor
std
gs
fcoml
shrb
mov
jle
clc
or
cmp
das
das
test
movsl
shrb
les
add
hlt
mov
cld
xor
xor
adc
pop
in
xchg
sbbl
stos
clc
jno
insl
push
jne
daa
aad
insb
repnz
jmp
cli
inc
in
jo
imul
push
inc
hlt
insb
ss
ljmp
cmp
add
call
ja
int3
lcall
in
add
and
add
test
clc
or
add
fimuls
and
shr
pop
xchg
outsl
and
dec
lods
jecxz
xchg
push
mov
adc
test
jge
mov
xor
push
loopne
xor
push
inc
fisubrs
fdivs
scas
je
and
or
inc
rolb
fmuls
jp
movsb
notb
loope
pop
divl
push
js
mov
aaa
push
inc
pushf
mov
dec
inc
adc
call
sbb
pop
pushf
call
jns
stc
adcb
add
jbe
mov
mov
lods
add
add
inc
test
push
cmp
or
ret
sti
cmpb
and
jle
or
push
push
mov
cmp
inc
or
fimuls
or
jns
mov
aam
test
sub
push
in
das
dec
sbb
cmpb
lret
in
mov
loopne
mov
cs
hlt
fdivrs
pop
sub
cmp
movsb
sub
xchg
push
cmp
mov
or
in
xchg
shrb
stos
jp
test
popf
out
rclb
xor
lods
call
sbb
sbb
or
sbb
lahf
into
pop
add
cmpl
sar
cltd
lea
jbe
bound
jo
ja
cmp
mov
repz
shlb
inc
sbb
dec
cld
push
sar
pop
mov
loop
cwtl
cmpsb
xchg
push
jp
push
sbb
lea
in
jmp
clc
xor
push
fisubl
lret
adc
or
je
or
lea
mov
ds
enter
jnp
pushf
pop
or
add
xchg
arpl
rcll
mov
sub
cmpsl
push
push
adc
loop
dec
pop
mov
and
arpl
push
cwtl
and
shlb
movsl
mov
in
inc
cmpsb
mov
hlt
adc
test
sbb
outsb
mov
lock
or
inc
insb
test
test
ss
adc
or
inc
cmc
ds
xchg
pusha
sub
xlat
scas
popa
sbb
pop
and
outsb
ss
js
add
movb
inc
xor
push
jbe
popf
movsl
cld
incl
xchg
cmpsb
or
adc
outsl
int
mov
js
in
imul
mov
sbb
call
test
xchg
or
pusha
add
das
add
imul
jb
mov
inc
je
pop
push
lcall
add
cwtl
cs
adc
repz
movsb
dec
insb
popf
adc
dec
or
push
lcall
lea
and
arpl
imull
shll
shll
call
dec
xorb
ja
mov
cmp
in
push
mov
or
xor
rorl
mov
push
add
xchg
testb
jb
push
adc
push
push
popf
cmp
inc
push
insl
cmp
jl
xor
nop
xor
cmc
pushf
daa
rcrb
addl
dec
mov
sbb
ss
cmp
mov
sub
loope
adc
push
sbb
or
test
nop
stc
pop
loop
push
mov
icebp
daa
rorl
jnp
aas
dec
pop
jmp
mov
inc
lods
roll
lret
mov
mov
dec
mov
adc
sub
mov
movswl
mov
addr16
insb
cmp
mov
pop
mov
push
test
adc
imul
mov
add
addr16
lea
pop
stos
pusha
je
or
sub
rol
mov
fsubrs
scas
imul
xchg
adc
clc
aaa
gs
or
xor
mov
sbb
mov
push
adc
inc
fisttps
mov
sbb
or
and
push
cmpsb
cmpsl
shl
cmpsl
add
push
add
mov
push
jne
add
mov
hlt
jmp
cmp
jle
lahf
jecxz
popf
imul
push
test
pop
push
mov
dec
movsb
sbb
pop
and
fimull
movsl
jo
jbe
aam
or
dec
nop
cmp
jmp
jl
js
pop
jb
mov
jp
cli
mov
mov
nop
mov
mov
and
jl
push
add
push
push
mov
sbb
inc
sbb
cmpb
jne
and
push
jg
je
data16
jecxz
hlt
mov
jae
cmpsl
dec
pop
ljmp
xlat
ja
jo
inc
daa
add
and
adc
push
push
decb
mov
push
into
xor
cmp
bound
scas
xchg
shl
je
and
sub
sbb
mov
ret
dec
mov
cltd
jmp
xchg
sub
cltd
andb
xchg
aad
in
adc
jl
jae
xchg
push
and
sbb
fidivrl
adc
mov
jnp
or
jno
psrlq
adc
dec
xchg
clc
les
mov
or
mov
sbb
push
popa
lea
inc
mov
push
inc
mov
mov
stc
cltd
push
push
push
jmp
jl
shll
aas
repnz
jl
in
cmp
sahf
add
jmp
sub
dec
sub
cmp
adc
cmpb
je
pushf
pop
sub
or
call
data16
movsb
aas
mov
es
cld
mov
fsubrs
aas
sar
or
dec
fs
test
or
mov
sub
push
add
sub
adc
push
nop
adc
jl
add
mov
mov
ja
shrl
mov
cmp
out
test
jne
jmp
and
addr16
js
dec
adc
or
push
pop
scas
dec
and
fidivrs
dec
or
push
into
test
or
mov
shrb
adc
iret
or
mov
imul
fs
aam
in
xorl
popa
jo
or
push
adc
movsb
sub
mov
ret
and
fsubrl
dec
loopne
cltd
fst
add
mov
jg
jmp
adc
fldl
and
scas
pushf
adc
cwtl
mov
je
gs
das
fwait
pushf
jp
sbb
filds
jnp
mov
pop
mov
cli
mov
adc
mov
mov
or
enter
mov
jge
mov
jmp
adc
stc
pop
sahf
insl
mov
ret
js
bound
jo
jle
iret
mov
xor
sbbl
or
adc
inc
aam
mov
xor
push
mov
stos
adc
outsb
cmp
xlat
popa
cmc
xchg
pop
pop
imul
pop
adc
int3
shl
rcrl
cmc
add
adc
clc
incb
gs
xchg
mov
add
insb
daa
adcl
cmpb
rcrl
pinsrw
and
inc
pop
popa
lea
lea
push
insl
sub
lods
subb
or
and
inc
idivl
in
or
xchg
xchg
push
dec
add
or
mov
mov
cli
and
test
lods
movsb
sub
jl
aam
jbe
pop
stos
adc
jo
pop
mov
add
dec
pop
ret
pop
or
adcb
inc
inc
pop
not
inc
xchg
add
call
int3
je
mov
or
mov
dec
call
cmp
mov
pop
and
fistpl
sub
push
rolb
adc
lahf
sti
adc
pushl
insl
and
in
pop
call
lahf
and
add
push
fnsave
mov
fisttpll
add
stos
clc
push
faddl
or
notl
adc
jmp
shlb
imul
loopne
stos
mov
loopne
jge
xor
rcl
sub
jmp
les
mov
or
dec
pop
add
addr16
jl
popa
into
push
repnz
sbb
pop
xor
xchg
je
add
les
inc
add
jge
int3
loopne
lods
aam
jle
lds
dec
mov
or
jb
jne
mov
lds
sbbb
pop
push
xor
jbe
push
push
and
sub
lahf
addl
insb
add
add
dec
pop
and
imul
sub
push
xchg
addb
pop
rorb
popl
icebp
or
lcall
fcoms
push
jnp
mov
sbb
inc
xor
rclb
sahf
or
btc
ds
xor
xor
xchg
es
ss
divps
pop
jae
sub
add
sbb
cld
sub
inc
roll
notb
mov
stos
sub
mov
xchg
mov
mov
sub
jne
int3
sub
xor
in
xchg
push
into
xchg
popa
mov
push
pop
movd
add
cli
loope
hlt
arpl
lret
fcoms
jl
inc
inc
xchg
cmp
inc
mov
sbb
cmp
jo
pushf
or
loop
lea
out
and
or
cmc
xchg
imul
jo
pop
leave
inc
dec
inc
add
aad
xchg
add
sub
adc
add
lea
sbb
icebp
pop
cmpsl
push
jns
inc
cwtl
cmp
mov
mov
inc
push
stc
inc
add
xor
cmp
jb
pop
jl
jmp
fnstcw
xchg
mov
xor
push
aas
fisttpll
test
cmp
fidivrl
insb
fldl
pushf
fisttpll
fwait
dec
jl
loopne
xor
test
mov
cmpsb
ss
lock
sbb
lock
addr16
dec
fadds
leave
mov
mov
xor
dec
adcb
jb
adc
xorb
lock
xor
push
sbb
pop
imulb
sbb
cmc
xchg
dec
call
push
cld
mov
and
sti
insb
and
rolb
dec
xchg
inc
addl
sub
xchg
mov
jp
sbbb
dec
call
fnstenv
jg
dec
jl
outsb
fiadds
sbb
push
test
hlt
and
scas
or
leave
cmp
or
mov
add
lcall
das
mov
outsb
mov
xchg
push
and
aad
push
pop
and
jle
mov
je
rcrl
mov
xchg
push
adc
mov
adc
loop
dec
mov
fistl
fdivs
cmp
dec
adc
lret
test
mov
lea
popa
mov
add
inc
mov
push
fmuls
test
push
out
inc
pop
xchg
mov
xor
mov
pop
inc
pop
inc
push
add
cmp
adc
inc
shlb
xor
dec
add
pop
adc
cmpb
cmp
lcall
aas
sub
das
pop
pop
jg
jmp
ret
add
pop
jo
test
lods
addr16
dec
xchg
dec
popf
in
jbe
xchg
dec
lods
clc
hlt
mov
mov
adc
mov
popf
rcrb
and
insb
jne
dec
sub
iret
xchg
mov
dec
cs
call
sub
loopne
bound
rcrb
pop
ficomps
cmp
js
mov
movzbl
xchg
hlt
lods
add
or
test
cs
push
dec
iret
adc
pop
addr16
repnz
mov
ja
in
cmovae
lods
imul
stos
out
sahf
dec
and
pop
les
and
shll
fcom
ljmp
push
fstpl
in
fwait
pop
add
sbb
lea
lds
adc
cmp
add
pusha
adc
lods
aaa
in
mov
aas
jno
insb
imul
jb
mov
and
fistpll
and
mov
icebp
xchg
push
inc
sbb
pop
enter
insb
jne
mov
sbb
lods
imulb
mov
insb
jg
mov
sbb
cmp
mov
xchg
xor
jg
pushf
pushf
je
jb
cmp
pushf
sub
sbb
jo
dec
jae
push
rcrb
dec
mov
in
je
mov
sbb
add
or
mov
mov
je
sub
lock
pop
xchg
jecxz
lea
and
ja
sbb
dec
push
enter
mov
mov
iret
outsl
fstps
adc
fcmovne
jo
dec
inc
mov
ja
lret
nop
mov
mov
jne
rcrl
imul
sbb
js
and
lods
add
xchg
sub
pop
popa
adc
cmpb
lds
sarb
and
fidivrs
pop
enter
outsb
and
outsb
in
popa
sbb
je
jno
sbb
mov
cli
sbb
call
add
jns
ljmp
out
jb
mov
jg
incl
fimuls
cld
mov
push
mov
push
push
dec
adc
call
lea
je
out
test
sbbl
xor
push
cld
dec
cs
jecxz
pop
pop
dec
popf
push
push
ja
mov
loopne
inc
push
aas
cmp
and
push
stc
in
mov
jg
fdivs
call
pushf
push
into
sbb
inc
sub
or
cmpsb
mov
push
pop
push
mov
lret
je
adc
push
popa
imul
pop
aaa
mov
lods
in
in
jae
sub
adc
loopne
jb
xor
cmpb
or
jns
rorb
dec
push
add
leave
lds
dec
xor
add
fsub
outsb
lea
jns
dec
xor
add
test
lea
rclb
and
push
leave
add
mov
aam
inc
push
and
aam
jbe
fists
pop
in
and
sahf
mov
js
and
pop
mov
test
cmp
add
pop
add
cmc
or
adc
fisttpl
test
test
push
fdivp
cmp
add
mov
xlat
hlt
adc
scas
aaa
nop
pop
xchg
lret
jbe
mov
cld
dec
pop
js
xchg
imul
sub
mov
lea
xchg
aam
repz
push
dec
dec
mov
clc
mov
ret
xchg
adc
sub
in
mov
fwait
rcll
outsb
repnz
jmp
mov
mov
inc
jle
push
mov
pusha
das
mov
das
add
add
adc
dec
fdivrs
or
dec
add
inc
push
dec
jno
adc
loope
mov
dec
shr
lds
sub
movb
or
popa
mov
mov
jne
or
cmp
and
or
sti
inc
add
sub
or
mov
xor
shlb
fisubrs
sbb
jo
sbb
sarl
int
add
xchg
push
sbb
in
jp
push
add
add
ja
mov
xor
or
mov
and
outsl
cvttps2pi
or
adc
cmp
dec
test
lock
push
cld
aas
xor
sub
ret
fs
add
or
or
jb
jne
fs
add
push
pop
pop
sub
mov
mov
inc
pushf
push
in
add
sbb
stc
daa
or
or
dec
add
add
cwtl
cli
fmull
addb
add
cmc
mov
mov
pop
jmp
sbb
push
popf
out
cli
out
lea
addb
push
sub
mov
outsb
mov
xchg
or
sub
add
gs
or
cld
dec
add
push
notb
imul
push
into
push
mov
sub
cmp
fsubrl
addr16
sbb
dec
and
mov
push
orb
mov
lods
jmp
and
and
sub
pop
mov
xlat
mov
arpl
mov
leave
sub
mov
mov
lea
and
mov
and
lea
cli
sbb
fcmovnbe
or
jmp
dec
addl
dec
add
clc
ja
mov
add
insb
adc
fidivs
in
cmpsb
adc
das
mov
imull
movsl
add
pop
mov
fdivrl
xor
loopne
jo
and
mov
xchg
mov
mov
xor
out
pop
insb
push
jo
xchg
adc
mov
shll
xor
jb
inc
shl
jne
movl
inc
inc
outsb
pop
pop
inc
cmp
std
jne
sahf
adc
sti
mov
pop
mov
jmp
add
jmp
xchg
and
and
leave
hlt
xor
pop
pop
xchg
sbb
lea
push
notl
cmp
push
mov
movb
or
sbbb
cmp
into
std
cmpsb
movsl
frstor
jmp
inc
in
movsl
mov
mov
das
push
and
push
aaa
inc
pop
les
rolb
jnp
cmp
push
cmp
or
push
call
pop
jmp
mov
lock
test
sbb
pop
inc
inc
sub
inc
sbb
int
and
lea
outsb
push
subb
xchg
mov
enter
stos
jmp
adc
imul
loopne
cmpb
or
lcall
or
faddp
add
shlb
inc
into
jge
rol
fnstsw
add
jb
mov
scas
popa
add
inc
push
push
loopne
jl
xchg
in
mov
adcb
push
fadds
fstpl
dec
push
dec
jne
mov
dec
out
xchg
push
dec
loopne
leave
jle
sbb
jecxz
call
inc
jbe
mov
dec
or
inc
dec
jne
adc
sahf
cld
scas
stos
mov
jmp
add
cmpsb
addr16
jnp
inc
mov
jmp
cmp
enter
push
add
es
pop
fwait
mov
lcall
push
or
sub
adc
loop
in
cmp
inc
popa
push
test
cmc
das
test
xor
jb
mov
and
add
pop
jno
jmp
or
jmp
xchg
pop
push
dec
jbe
cmp
dec
stos
pop
push
aam
xor
xlat
testb
insb
ljmp
add
add
ljmp
sti
lock
or
xor
bound
ss
add
icebp
std
insl
xor
rorb
call
imul
or
mov
mov
add
scas
add
pusha
sbb
aaa
test
ljmp
insl
adc
jno
daa
ljmp
xchg
loope
xor
int3
and
cmp
adc
pop
push
push
mov
js
aam
jle
pop
xchg
sbbb
sbb
ljmp
fwait
jb
fisubl
and
push
fs
mov
shrb
mov
or
aas
test
jnp
xor
int3
mov
mov
aaa
cmpl
ret
das
dec
cmp
adc
orb
fcoml
xchg
mov
outsl
jmp
aaa
xor
test
sbb
enter
clc
aas
cld
dec
rcrb
ret
je
mov
xorb
mov
arpl
pop
and
loop
imul
pushl
imul
lcall
adc
jno
inc
inc
sbb
sub
xchg
xchg
lods
or
sub
and
adc
xor
test
cwtl
daa
cmp
sbbl
lea
dec
xchg
mov
or
inc
call
pop
cld
adc
fadds
sub
jns
add
cmp
inc
push
xor
mov
sub
jbe
add
stos
cwtl
cmp
cwtl
stc
or
mov
cltd
pusha
sub
dec
mov
aam
test
xchg
lock
jle
test
push
add
mov
mov
insb
leave
lcall
pop
fwait
gs
pop
push
out
daa
cwtl
add
pop
clc
ret
or
mov
test
sub
les
hlt
mov
test
jl
mov
inc
test
scas
dec
mov
or
rcr
push
push
scas
push
lret
repnz
sub
inc
inc
movl
outsb
xor
shlb
jo
lods
mov
insl
inc
or
imul
jg
jo
mov
lahf
xchg
pushf
xchg
clc
rcll
ret
mov
scas
subl
bound
pop
dec
pop
arpl
and
push
imul
repz
sbb
dec
mov
sub
pop
cmp
shlb
xchg
cmp
ds
xorl
test
adc
mov
out
fnstenv
not
call
xchg
push
adc
lret
or
xor
pusha
mov
mov
inc
sub
enter
xor
inc
push
enter
dec
pop
cmp
dec
and
jle
jmp
sbb
jmp
cmpsl
bound
push
dec
sahf
push
cli
mov
and
jbe
and
daa
add
pop
cmp
aaa
push
sahf
xchg
mov
mov
jg
mov
push
adcl
add
fnstenv
push
or
subl
mov
gs
jnp
xor
movsb
cmp
and
scas
push
iret
aam
inc
push
daa
inc
or
aam
add
mov
or
adc
jo
jle
mov
stos
idivl
ja
mov
adc
or
adc
mov
pusha
sub
push
fs
in
push
inc
pop
fldt
stos
add
call
push
xchg
arpl
xorb
aas
fwait
sub
stos
popf
out
shlb
es
xlat
xchg
sbb
pop
mov
push
add
mov
adc
ds
add
sub
aam
cmpb
mov
test
mov
jmp
or
jmp
add
imul
int
jmp
inc
ja
xchg
sbb
xor
fs
filds
sub
add
sbb
enter
or
xor
dec
sub
adc
pcmpgtd
out
rclb
cli
or
cmp
jg
loop
shr
je
je
xchg
rcr
jg,pt
push
inc
adc
and
push
test
int3
sbb
loope
lea
shlb
pop
add
add
mov
adc
divb
xor
daa
add
vcvtdq2ps
sub
jne
push
je
sbb
inc
cli
pop
pop
ret
inc
fcmovne
outsb
pop
sbb
rcrl
push
mov
bound
add
cli
shll
mov
pop
sbb
pop
jge
mov
or
or
jb
std
into
loopne
notb
xchg
mov
or
add
mov
jbe
push
adc
mov
push
movsl
sar
fistpll
shll
enter
or
push
dec
add
sub
mov
mov
je
cli
xchg
jle
push
adc
inc
popf
dec
in
push
mov
and
pop
mov
data16
sbb
add
lods
lods
test
ds
movl
add
mov
inc
xorl
dec
fnstenv
mov
push
push
mov
cwtl
in
or
add
inc
or
data16
int
push
fldl
or
mov
sarb
add
jle
fs
or
mov
in
imul
or
xchg
out
js
cmpl
mov
jb
fnstenv
pop
add
into
das
add
pop
test
dec
pop
pusha
mov
add
and
sbb
xor
insl
adc
jmp
adc
jmp
add
xchg
out
pusha
push
push
lahf
icebp
jmp
stos
mov
fs
or
sbb
imul
sbb
pop
jae
pop
stc
cmpsl
xor
rcll
jae
jno
fwait
xchg
jmp
lahf
fnstenv
aam
orb
dec
popw
les
ror
mov
adc
subl
ret
fstl
mov
icebp
lds
mov
pop
adc
loop
aas
mov
jns
fists
call
sahf
int
movsb
or
adc
xor
inc
add
cld
pop
xor
pusha
sti
daa
xor
push
sbbb
es
mov
outsl
mov
jne
inc
pop
or
pop
test
pop
adc
xchg
out
and
inc
and
ret
add
pusha
ja
push
push
cltd
jmp
inc
faddl
xorl
dec
test
sti
push
jmp
push
push
fdiv
clc
sti
lcall
inc
inc
jp
xchg
and
ret
and
push
push
test
fs
mov
es
lock
sbb
adc
arpl
mov
rcl
dec
std
outsl
mov
test
cld
divl
adc
jnp
jmp
je
inc
mov
sbb
mov
adc
jne
lea
mov
shrb
icebp
sti
ja
add
les
mov
push
mov
shll
add
fucomip
stos
bound
shlb
loopne
add
sbb
or
ds
ret
loopne
sub
pusha
mov
or
lock
popa
jne
es
mov
sub
scas
movsb
mov
aad
add
sub
or
movsb
jbe
inc
dec
repz
mov
jb
pop
lock
int3
ret
std
and
mov
std
pop
mov
ljmp
mov
pop
mov
xchg
mov
lea
lret
and
stc
dec
mov
dec
ret
push
xlat
mov
fldcw
rorb
mov
loope
fadds
mov
cmp
mov
ljmp
mov
mov
loopne
or
sub
cmp
mov
sbb
xchg
sub
mov
xor
sti
shlb
ret
mov
xchg
lret
int3
lock
pop
push
and
sub
push
dec
dec
lret
xlat
sub
push
pop
add
adc
xor
add
sbb
xchg
cmp
fistl
sahf
test
notl
mov
xor
leave
test
call
clts
test
mov
dec
jne
add
push
or
or
popa
sub
push
inc
sub
pop
aad
jmp
ficoml
pop
and
push
cmpb
and
ja
cmp
inc
pop
inc
addr16
movsl
cmp
inc
cmp
push
ds
ss
js
cmp
es
push
mov
sub
add
test
cmp
xor
arpl
shrb
pop
inc
in
mov
adc
inc
sahf
scas
test
pop
movsl
pop
xor
sub
mov
or
xor
aad
stos
sub
push
js
xchg
lods
lock
mov
dec
sub
cmpsl
cmp
jb
dec
push
add
adc
jmp
adc
std
dec
mov
testl
scas
icebp
ret
xchg
lret
jnp
or
xchg
stos
loopne
mov
cmp
aam
jo
jecxz
lcall
pop
aam
jmp
mov
rcrb
push
sub
jno
call
mov
rorb
xchg
daa
lods
cmp
dec
adc
lea
add
cmp
pop
pop
sbb
test
add
and
mov
cs
xor
adc
cmpb
jne
ljmp
ja
imul
cmp
push
mov
adc
adc
out
or
mov
fcmovnbe
and
aaa
inc
shl
scas
imulb
or
pop
lea
orb
dec
loopne
mov
call
sub
pop
fs
adc
push
cmp
add
push
jno
or
cmp
scas
aaa
mov
sahf
test
fbstp
inc
mov
push
cwtl
stos
xchg
std
test
popa
ffree
cmp
out
or
pusha
push
inc
notl
sbb
cmp
sub
into
out
cmp
push
dec
cmp
call
cmp
loope
pop
in
test
mov
enter
in
dec
or
ret
cmp
inc
movsb
lds
lcall
push
adc
cs
scas
or
push
lods
lret
inc
adc
adc
sub
mov
sbb
adc
inc
dec
sub
fcoms
neg
ret
cmpsl
add
cmp
aas
jmp
das
out
test
movsl
lea
je
das
pop
enter
adc
in
cmp
cmp
xor
push
mov
sbb
xchg
fadds
bound
add
add
dec
rcr
mov
in
or
ss
sti
xchg
mov
mov
enter
add
dec
xchg
inc
dec
gs
push
mov
xchg
cmp
xchg
push
sub
mulb
jl
jmp
call
adc
mov
xor
out
ljmp
jl
sub
sbb
fwait
or
mov
pushl
sahf
xchg
or
lods
cmpsl
sub
in
or
adc
jmp
rcl
xchg
mov
xor
adc
les
je
jb
xchg
jne
push
mov
popa
add
lea
push
xor
in
add
nop
sbb
mov
cmpl
mov
dec
ficoml
jbe
cmpsb
jmp
sbbl
or
popa
ja
in
dec
pusha
dec
push
add
je
push
mov
inc
imul
jnp
fists
ffreep
mov
jle
pop
mov
mov
ficoml
push
dec
js
lcall
addr16
cmpsl
movsl
adc
push
sbb
test
test
xchg
jns
rcr
cs
push
testb
stos
imul
cmp
loop
add
add
loopne
enter
sbb
sub
or
or
or
and
leave
nop
test
jb
test
mov
add
sbb
push
mov
adcl
push
pop
lea
pop
or
pop
out
rolb
movsl
or
jo
mov
mov
and
xchg
jno
push
popa
repnz
push
pop
sbb
fisubrl
push
movsl
pop
add
lea
or
dec
les
movsl
outsb
fs
das
scas
movsl
push
cmpsl
in
fnstsw
mov
mov
cmpsl
xor
scas
aad
cmpsl
mov
adc
and
inc
dec
aaa
outsb
shll
enter
xor
test
or
xchg
stos
arpl
dec
es
push
xor
push
test
xchg
pop
jb
mov
and
sti
mov
inc
sbb
call
movsb
mov
push
cmp
mov
sub
push
lods
daa
xchg
fidivrs
call
xchg
add
dec
addb
add
movsb
or
in
inc
fucom
sbb
stc
decb
cld
push
inc
fcompl
cwtl
cmpsl
and
xor
sbb
add
or
mov
test
dec
inc
mov
push
mov
and
cmp
push
mov
mov
addr16
push
leave
dec
mov
add
arpl
push
nop
inc
dec
mov
cmp
stc
movsb
repnz
inc
push
dec
push
cwtl
pushf
dec
push
dec
xchg
nop
dec
mov
push
pushf
nop
add
cwtl
add
leave
mov
cmp
punpcklwd
negb
ret
insb
lcall
hlt
arpl
xor
in
sub
dec
jle
cmpb
mov
xor
stos
mov
xchg
sbb
notb
aas
dec
loopne
mov
roll
xchg
sub
sub
clc
jmp
mov
inc
js
addb
shrb
pop
inc
mov
xor
mov
xchg
rolb
add
add
test
popl
or
sub
imul
sbb
push
icebp
adc
jmp
and
xor
mov
out
mov
push
jmp
sub
cwtl
add
adc
jbe
push
jg
mov
dec
stc
sbb
les
dec
or
subl
push
xor
fmuls
insl
sub
testb
enter
shlb
add
aaa
dec
ljmp
or
outsb
cltd
pop
and
or
into
rcrb
push
daa
lea
xchg
test
mov
in
sbb
popl
popf
adc
pop
or
les
dec
stos
or
dec
icebp
loope,pn
and
ljmp
iret
idiv
pop
outsl
push
push
dec
adc
push
and
fwait
out
mov
pop
outsl
dec
clc
jl
inc
or
jbe
jle
cmpl
cmpsb
outsl
ja
jo
jle
daa
ret
jge
jne
push
push
int3
sbb
in
mov
adc
jg
ffreep
lea
lea
inc
out
lret
and
sub
fwait
mov
shrb
mov
xor
dec
jo
mov
or
mov
push
inc
inc
push
negl
ret
mov
mov
shrb
lret
ret
mov
sar
jae
call
jecxz
and
inc
dec
xor
test
outsl
and
pop
into
sbb
adc
pushf
jbe
jmp
sbb
and
sbb
push
push
dec
or
ror
loope
sub
push
lret
add
sub
leave
sbb
inc
bts
jmp
mov
sbb
test
push
or
out
xchg
les
pushf
imul
incb
cmpl
jne
inc
adc
xchg
mov
xchg
sbb
and
cmp
sub
add
orl
call
adc
or
push
cmp
rol
push
mov
cwtl
out
add
adc
jae
xor
ror
mov
jns
mov
jne
rclb
sbb
and
popl
mov
mov
pusha
xor
icebp
orb
shrl
pop
andl
or
stc
mov
mov
mov
adc
inc
fs
popa
aas
jle
nop
pop
subl
xor
cmp
and
leave
sub
mov
cmp
or
pop
pop
mov
and
and
scas
roll
test
jmp
rcll
adcb
pop
cwtl
sbb
pushf
xor
adc
add
xchg
xchg
sub
ja
mov
hlt
sub
sbb
mov
mov
out
pop
inc
ja
adc
fsubl
or
out
cmpb
push
ja
jo
xor
adc
out
add
adc
stos
fisubrs
stc
out
movsb
inc
push
sbb
pop
adc
fcomps
mov
or
jmp
inc
fmuls
outsl
mov
jbe
add
les
fisubs
jle
jno
inc
inc
sbb
out
dec
call
xor
pop
add
incl
dec
and
mov
pop
pop
ljmp
dec
adc
add
inc
imul
adc
pop
andl
mov
shrb
imul
inc
push
push
push
adc
cld
add
push
ret
cli
gs
fndisi(8087
arpl
cld
enter
or
jne
dec
dec
insl
sub
dec
decb
push
call
out
mov
add
xor
fidivrl
movsl
insl
inc
loop
adc
jmp
or
loopne
inc
cs
je
cmp
cmp
dec
mov
mov
js
and
cld
xchg
mov
int3
ljmp
popa
push
pop
jle
add
and
mov
add
sbb
cwtl
inc
pop
xchg
or
push
mov
jnp
or
adc
inc
inc
call
lods
ds
and
mov
out
mov
cmc
jmp
push
shlb
fcomi
pop
xor
loop
cmp
add
scas
decb
mov
pop
clc
int3
int3
xor
ljmp
push
cmp
mov
jbe
pop
gs
xor
lea
add
add
push
xor
fstl
icebp
inc
cmp
lea
sahf
push
xchg
dec
call
loope
xor
pop
negl
sbb
pushf
dec
and
js
and
adc
call
sub
lea
push
fnstenv
or
push
loope
xor
popa
out
and
pop
dec
cmp
sbb
push
std
push
push
pop
push
int
sarl
leave
xlat
lea
xchg
ror
add
ss
dec
lock
mov
adc
mov
std
ffree
inc
and
xor
dec
inc
cld
outsb
mov
mov
movb
push
add
mov
mov
mov
xchg
call
push
add
pop
out
sub
add
mov
ja
fidivrs
cmp
or
inc
ja
aad
aas
or
add
arpl
push
daa
faddl
add
pusha
pop
orb
add
cmp
or
nopl
into
sub
shll
hlt
or
xor
jl
ljmp
hlt
jb
add
pop
push
push
or
sbb
or
dec
or
or
aaa
cld
adcl
mov
and
ret
add
xor
in
jmp
lret
push
pushf
adc
and
sub
shlb
cmp
cmovo
incl
clc
inc
add
push
sbb
dec
out
scas
fildl
xor
aaa
inc
sti
push
push
orb
jmp
mov
add
or
cmpsl
dec
mov
cmpsl
loop
adc
cmp
push
aaa
xor
mov
mov
jne
jmp
xor
mov
mov
je
push
mov
daa
mov
cld
inc
lds
addb
adc
out
sub
fildll
sbb
sarb
mov
push
pop
mov
fmull
inc
pusha
rcrb
addr16
push
sbb
mov
out
mov
js
call
adc
mull
inc
aas
es
addb
je
lahf
jmp
adc
sbb
outsb
mov
aam
int
test
xor
and
jbe
and
out
repz
fadds
inc
jl
inc
or
not
push
shrb
out
shlb
jb
jae
addl
scas
test
pushl
std
push
pusha
push
sbb
ret
fdivp
pop
pop
push
sub
push
lock
daa
mov
or
sub
lea
daa
pop
dec
xor
and
add
out
add
or
or
xor
test
das
inc
xchg
xchg
das
fisubs
push
push
jb
pop
sbb
addr16
xchg
lahf
inc
add
add
jnp
nop
xchg
iret
icebp
incb
cmp
fmul
loopne
daa
jg
xor
xor
add
stos
mov
in
daa
cld
fmul
and
mov
fmuls
xchg
out
jl
cmp
cmp
inc
lret
out
insb
pop
push
lods
inc
xor
fmul
in
sahf
dec
enter
push
adc
mov
int3
insb
xchg
cmp
fnclex
int
into
adc
pusha
and
inc
ja
mov
iret
jmp
addr16
add
sbb
push
shlb
cli
data16
leave
test
rcll
clc
stc
push
hlt
andl
mov
xchg
add
mov
cmp
cld
mov
enter
inc
adc
add
add
js
andb
jns
mov
aam
dec
test
or
and
mov
ja
add
leave
js
xlat
out
pop
add
xchg
or
adc
lret
push
js
leave
add
testl
pop
outsl
or
mov
push
adc
jb
not
in
mov
sbb
inc
push
sbb
or
and
or
push
rorl
js
aam
adcl
inc
loopne
in
idivb
je
das
faddl
test
mov
cld
sti
std
mov
iret
hlt
cmp
aas
mov
dec
test
hlt
jmp
scas
cltd
push
pop
out
fdiv
in
int3
add
fcmovnbe
loopne
sbb
repz
inc
jno
inc
pop
rclb
push
inc
enter
mov
hlt
mov
jno
jno
mov
jp
jle
jns
cmp
push
test
movsb
je
movl
dec
loop
sbb
testl
inc
jo
div
lret
jb
pusha
stos
add
mov
or
push
out
test
pusha
dec
mov
out
xchg
dec
add
sbbb
loope
js
out
pop
lea
mov
inc
mov
addl
lcall
aam
pop
jl
and
sbb
sarb
les
test
mov
pop
xchg
fadds
ret
sub
jae
jmp
pop
push
sub
mov
stos
or
rcr
pop
imul
or
fcoms
or
mov
mov
mull
lsl
jmp
push
pop
add
push
inc
shr
rcr
shr
rcr
or
mov
sbb
ljmp
out
jb
cmp
or
cmp
or
xor
sbb
sbb
adc
lods
mov
loopne
neg
inc
lret
out
mov
fxch
pop
ret
adc
cmp
je
or
outsl
jbe
push
sub
mov
inc
pop
mov
cmc
inc
in
sbbb
mov
mov
fcomip
xchg
jbe
xchg
or
les
sub
mov
lds
mov
mov
sbb
cs
or
push
mov
stos
dec
or
popa
and
lahf
and
mov
push
mov
notb
push
icebp
sbb
push
inc
inc
and
fcmovbe
cmc
lahf
xlat
mov
cmp
icebp
lcall
sarb
addl
pop
xor
loopne
adc
imul
sbb
sbb
dec
fcomps
and
adc
or
inc
inc
mov
and
add
add
shrl
push
xor
ret
cwtl
push
push
pop
lret
xchg
xchg
sbb
add
jo
or
in
fiaddl
test
rcll
scas
pop
pop
jne
push
add
or
fnstsw
xor
jmp
inc
cmp
mov
pop
adc
and
rolb
add
jle
enter
push
mov
push
pop
dec
pop
dec
xchg
inc
or
loope
adc
jmp
popa
movsl
mov
pop
fs
add
add
jl
mov
nop
in
mov
test
push
push
enter
pop
rcrb
pop
or
outsb
cltd
into
push
call
ror
cs
inc
adc
and
jae
jb
pop
lods
fsubs
sub
decl
jge
pusha
es
mov
cwtl
into
clc
adc
cmpsl
sub
xor
ss
outsl
push
mov
jo
push
adc
add
or
pop
bound
dec
mov
addr16
mov
mov
cmp
sub
cmp
cmp
xchg
dec
out
inc
jb
dec
push
add
xor
lds
sub
or
popa
inc
in
lds
mov
je
jo
sarb
cmpsb
in
mov
push
mov
sarb
ret
ret
cli
je
mov
mov
inc
outsl
fsubr
push
fisttpl
add
add
shlb
fs
sub
cld
lods
adc
rcrl
es
insl
testb
jmp
adc
outsl
push
cmp
mov
in
or
imul
adc
ret
scas
rcll
int
adc
sar
fsubs
add
xchg
nop
aam
sarb
and
mov
lcall
xchg
push
mov
sub
xor
inc
out
fstpl
rol
inc
sbb
inc
mov
xor
cmp
cmp
adc
out
mov
lds
in
add
cmp
and
inc
push
dec
mov
jge
aas
sbb
lea
or
mov
and
out
inc
je
push
pusha
mov
je
insb
lock
or
lock
cmp
icebp
xor
fildl
in
dec
sub
add
adc
and
or
incl
mov
ljmp
mov
addb
pop
cmp
push
cmp
jge
mov
shrl
jae
shlb
push
and
dec
and
mov
sbb
test
imul
push
ficoml
pop
stc
sbb
mov
inc
shlb
xor
mov
movsb
idivb
cli
and
shl
sbb
pushf
xor
popa
cwtl
fists
cmp
and
cmpsb
ljmp
and
mov
add
xor
jno
cs
mov
and
cli
lea
ja
mov
sub
movzwl
ret
rcll
orl
dec
jo
push
fadds
and
and
adc
push
fldcw
loopne
jl
pop
int3
orl
inc
ljmp
je
repz
cmp
fadds
lahf
mov
sub
rclb
lock
ja
xlat
push
insb
lods
sbb
dec
push
imul
xor
or
clc
xor
xchg
add
fs
es
xchg
add
decl
fs
mov
fmull
pop
or
xor
mov
xor
cmp
add
in
das
mov
lea
lea
or
sub
stos
add
ret
and
mov
mov
push
add
popl
or
sahf
inc
add
or
mov
pop
add
xor
sub
pop
shrb
adc
in
push
and
mov
mov
mov
fsubs
and
pushl
add
jno
push
lods
jne
adc
test
push
pop
mov
ljmp
out
cmp
leave
ds
sbb
ud0
ficoml
xchg
add
dec
aad
enter
shlb
jns
imul
out
ud2
and
push
jl
movsl
rolb
shrb
aad
add
jns
adc
outsl
and
cmp
and
mov
sub
sub
pop
mov
cli
add
add
xchg
push
xorl
ds
js
fs
add
fwait
sbb
cmp
pop
fmull
mov
scas
mov
or
mov
or
or
cmp
and
pop
aam
sbb
test
sbb
sub
ljmp
sbb
in
push
add
movd
adc
cmpl
or
lods
stos
jl
dec
or
or
loopne
mov
das
xor
shll
inc
adc
addl
js
or
call
sbb
mov
roll
cmp
ret
rolb
adc
sbb
adc
int
fcompl
push
lea
cwtl
sub
fmuls
mov
rolb
dec
cmp
fcoml
push
push
test
ss
push
les
adc
sysexit
daa
inc
fdivrl
popf
rolb
test
cli
popf
pushl
leave
cli
ret
setno
sarb
faddl
push
jo
inc
mov
daa
add
sub
or
cmp
cli
push
mov
push
add
nop
sub
mov
cwtl
shll
test
mov
dec
mov
cmp
arpl
aas
enter
mov
mov
cmp
add
or
or
inc
sti
jmp
push
mov
cs
push
or
xchg
sub
iret
dec
aaa
push
ljmp
push
mov
mov
push
cmp
hlt
add
nop
leave
jnp
je
jp
or
into
subb
movsb
incb
iret
jbe
movsb
andl
jmp
mov
and
popf
add
scas
mov
and
push
clc
mov
cmp
jle
jle
sub
cmp
loope
sbb
xor
mov
or
cmp
cmp
push
jle
jae
out
fistpll
adc
sbb
adc
sbb
mov
xorl
jmp
adc
insl
pop
jge
mov
mov
add
jge
movsb
es
dec
jae
imul
sbb
enter
jmp
and
scas
shlb
xchg
shr
sbb
xchg
lods
leave
pop
push
sub
cs
or
popa
or
shll
ficomps
mov
stos
mov
dec
pop
stc
sub
cmp
mov
adc
mov
sub
mov
loopne
pop
loopne
je
mov
enterw
jge
nop
mov
or
cmp
ret
mov
add
testl
mov
jecxz
fldl
pop
sbb
test
push
dec
dec
or
cmp
xor
and
fdiv
lea
cwtl
pusha
sti
rolb
jg
cmc
jecxz
icebp
shll
jmp
cmp
mov
icebp
sub
add
and
mov
dec
hlt
add
ljmp
adc
and
mov
ljmp
dec
aaa
dec
adc
sbb
mov
and
cmp
adc
and
loopne
jmp
js
adc
ja
insl
fwait
jge
jle
xchg
inc
xor
jne
add
sbb
add
push
push
adc
jmp
call
add
mov
je
lock
pushf
imul
mov
mov
push
jge,pt
movsl
add
test
lea
enter
les
mov
or
jne
mov
or
and
or
test
out
inc
dec
jnp
aaa
mov
adc
pop
stc
jne
aas
mov
push
or
mov
rcrb
ja
mov
call
hlt
pop
inc
testl
out
jne
or
loope
mov
in
int
rorb
dec
inc
jne
inc
or
test
and
pushf
and
cmc
int3
mov
xchg
pop
dec
es
loopne
nop
mov
lock
cwtl
xchg
test
push
pushf
fdecstp
lea
add
test
or
or
adc
mov
es
sub
push
adc
jb
xchg
add
push
mov
inc
ja
ret
lods
incw
cmpl
insl
mov
xchg
pushf
xor
mov
mov
sbb
sti
jg
add
inc
or
push
aaa
loop
arpl
or
sub
call
shr
mov
add
or
shr
xchg
pusha
push
es
or
push
mov
push
mov
dec
sub
inc
movsl
or
add
lcall
or
insl
fadd
loopne
shr
or
mov
shl
call
pop
jne
mov
mov
mov
test
aam
loop
fwait
push
test
or
and
sub
rcr
cmp
lea
orb
mov
ljmp
jmp
push
jnp
or
fisubrl
icebp
mov
push
push
and
popa
mov
mov
jl
dec
int3
int3
jmp
cmp
or
daa
mov
adc
jmp
lods
fdivrs
mov
rolb
pop
sahf
dec
and
les
cmp
jo
lods
add
sub
addb
jne
fsubrs
jp
lret
das
sub
test
sbb
xchg
daa
sbb
movups
mov
sbb
les
mov
inc
mov
jne
inc
mov
push
push
pop
adc
sbb
fstpl
push
neg
inc
jae
lock
rep
filds
sbb
lock
push
mov
or
sub
or
add
testb
push
push
xchg
shrb
sbb
mov
filds
loopne
das
jle
pop
outsb
sbb
cmp
xor
jo
and
faddl
lock
insb
pop
in
mov
mov
adc
xchg
dec
inc
adc
popa
and
xchg
sub
dec
mov
add
dec
mov
popa
in
ret
loopne
dec
or
rcl
repz
and
or
push
mov
push
bnd
jbe
outsl
pop
imulb
es
jecxz
mov
pop
push
mov
mov
pusha
xchg
in
in
push
mov
and
pusha
mov
mov
ja
jbe
inc
je
push
add
sbb
xor
inc
adc
adc
in
ss
aaa
jnp
test
pop
inc
insb
test
push
lock
adc
shl
adc
sar
push
or
icebp
outsb
lretw
cmp
push
adc
jno
inc
enter
iret
and
rcll
andb
push
xchg
pop
dec
cmpsl
xor
aad
xchg
sub
push
sbb
mov
in
push
add
ror
mov
mov
cmovl
test
and
jne
jo
std
in
or
mov
loopne
sbb
jmp
sub
jmp
pop
push
xchg
or
dec
mov
mov
cld
add
shrl
in
cmp
xchg
add
js
inc
mov
pop
inc
mov
push
lea
add
std
incb
leave
sar
mov
aas
or
clc
roll
adc
push
inc
arpl
jmp
popl
call
cmp
inc
popf
or
psadbw
cli
jo
xor
lcall
loop
pop
ret
adc
and
insb
rclb
loopne
mov
jl
add
inc
pushl
mov
jns
pop
dec
lahf
mulb
or
xor
push
push
aas
cmpsl
sbb
subl
es
cli
xchg
push
cmp
jb
inc
mov
fimuls
mov
pop
mov
iret
fsubl
push
add
and
mov
mov
mov
andl
and
dec
and
jae
jmp
pusha
aad
imul
push
xor
push
test
cmp
cmp
es
lock
jmp
mov
ret
inc
outsb
test
mov
inc
adc
hlt
lea
rol
xchg
lods
jnp
inc
cmp
jns
cmp
mov
add
inc
je
add
gs
notb
mov
pop
add
sbb
or
ja
mov
and
mov
cmp
mov
add
ss
push
test
shrl
mov
push
add
icebp
cmp
inc
cmp
test
sub
popa
add
xor
psrld
scas
sbb
and
repz
lahf
ficomps
push
daa
jne
adc
pusha
dec
iret
test
add
sub
sbb
push
adc
push
sbb
fistps
scas
fisttps
cmp
js
lahf
std
in
bound
mov
sbb
add
dec
xor
repnz
movntps
shlb
cmp
pop
ret
xchg
dec
xor
jae
add
ret
inc
inc
mov
cli
or
xorps
sub
movb
mov
push
addl
adc
aad
gs
xchg
aaa
inc
icebp
and
lea
adc
push
ds
add
rcl
dec
cmp
ret
sub
sub
insb
pushl
push
int
shlb
jbe
fs
pop
clc
dec
sbb
jns
adc
fiadds
into
insl
push
jle
jg
sbb
mov
pop
cmp
mov
test
push
mov
or
and
cmp
popa
add
nop
or
daa
jo
push
andl
adc
cmp
push
or
add
sarb
shlb
push
xlat
add
shrb
push
or
test
jmp
mov
push
es
dec
push
or
sub
or
stos
outsb
subl
or
mov
add
fidivs
lret
jmp
inc
mov
pop
and
orl
xchg
jecxz
stos
xchg
aas
push
jae
sbb
fcoml
adc
mov
cmp
sub
fstps
jne
adc
sub
negb
add
adc
fidivrs
or
xor
mov
sbb
jne
mov
sub
inc
and
outsl
rcll
and
add
mov
pop
subl
js
pop
test
push
out
mov
push
ret
xchg
clc
xor
push
dec
or
mov
xor
fnstcw
and
mov
add
and
inc
outsb
int
int
pop
inc
or
mov
push
xchg
and
in
int3
or
xor
and
popa
xor
sti
popf
sbb
mov
mov
int3
inc
fstpt
flds
mov
mov
pop
loopne
mov
nop
fs
mov
and
cmp
mov
jns
add
shlb
mov
out
push
cmovnp
aaa
loop
movb
jmp
xor
add
inc
jbe
shlb
inc
outsb
ds
xchg
push
mov
push
jmp
mov
push
adc
enter
jl
and
testb
or
or
mov
add
mov
mov
cmp
add
and
out
mov
mov
mov
jb
and
add
inc
mov
lahf
and
cmp
push
popf
addr16
dec
cmp
shlb
cmp
les
sbb
pushf
xchg
loope
int
pop
shlb
jge
push
dec
push
push
dec
ret
pop
add
lret
xor
xor
gs
mov
or
jle
push
jl
or
aam
dec
js
cli
xchg
ret
push
or
sub
adc
gs
cmp
xchg
pop
add
sbbb
inc
dec
loope
xchg
data16
or
lods
mov
hlt
add
adc
mov
add
push
fisttpl
sub
xor
nop
stos
xlat
dec
pop
icebp
lock
shl
mov
cmc
les
ja
cmpsb
lea
pop
mov
mov
andl
mov
mul
jo
es
rcrl
push
andl
jo
cmpsl
ljmp
in
mov
movl
rcl
push
mov
decb
cmp
or
js
fcoml
int
sbb
jne
push
aas
mov
inc
sar
xor
pop
dec
adc
lret
rorb
inc
ret
icebp
adc
cmp
cmp
aas
fcoms
ss
push
fiaddl
add
jne
es
aad
push
jg
add
pop
push
pcmpeqw
pop
pop
or
inc
add
mov
jmp
repz
adc
or
nop
or
shll
lea
loop
xchg
xor
es
int
ss
imul
test
dec
ljmp
push
cmp
inc
add
sub
imul
add
scas
jb
imul
dec
or
ret
mov
clc
mov
or
add
das
aad
outsl
fwait
or
jg
test
add
mov
push
or
jne
jne
lea
clc
push
and
xor
add
push
pop
inc
inc
or
sub
rcr
push
mov
je
pop
or
xor
je
ja
mov
jge
sub
pop
jl
jmp
int3
dec
mov
push
adc
adc
jno
mov
jge
add
sbb
pop
loop
push
aad
and
xchg
cs
cwtl
or
dec
lcall
xchg
les
fnstsw
mov
sbb
inc
mov
setge
fcoml
les
sbb
in
jge
mov
mov
and
mov
jmp
mov
adc
pop
add
jmp
pop
and
pop
jmp
cwtl
enter
lcall
mov
sub
data16
push
adc
fs
clc
adc
or
inc
mov
inc
jp
inc
arpl
mov
cmpl
and
dec
sbb
mov
add
adc
jae
bound
mov
loop
jno
pop
add
and
sbb
test
jb
arpl
flds
and
add
int3
lahf
push
xchg
mov
nop
aam
mov
or
int3
push
inc
mov
adc
mov
add
fadds
jo
push
cs
xchg
inc
and
addb
out
mov
cmp
insb
jecxz
pusha
insb
loop
dec
fisttps
pop
cmp
addl
nop
and
push
aaa
add
mov
in
test
mov
push
insl
cmp
cld
xchg
push
jne
or
iret
fwait
sub
nop
push
or
nop
fidivrl
cli
push
xor
jb
cltd
cmp
insb
xchg
push
cmp
adc
cmp
pushf
mov
in
sub
inc
cmp
mov
or
test
push
sub
dec
shrb
xorl
movsb
mov
loop
imulb
mov
cmp
xchg
cmp
int3
mov
mov
ja
cwtl
sbb
inc
movsb
cmp
sarb
fstl
out
or
shlb
mov
jl
and
inc
mov
inc
push
mov
dec
jne
stos
out
rcr
sbb
and
add
inc
or
test
outsl
xor
jle
add
sub
pop
mov
push
cmpsl
fisubs
sbb
cltd
pop
push
add
cmp
xchg
into
sbbl
test
in
adc
shl
xchg
mov
jle
cmpl
xchg
mov
ret
or
xor
sbb
jae
fidivs
pop
sbb
dec
sbb
loope
rol
pop
and
adc
dec
jbe
subb
or
xor
leave
leave
leave
dec
or
adc
mov
enter
and
and
daa
daa
daa
daa
sub
xor
inc
add
daa
cmp
dec
outsb
daa
insl
inc
and
inc
cmovs
dec
dec
push
push
pop
add
pop
pusha
fs
insb
jo
js
rclb
xchg
dec
xor
mov
xchg
cwtl
pushf
xor
and
mov
xchg
addr16
dec
es
cltd
ss
sarb
fs
dec
loopne
call
in
aam
xchg
dec
es
hlt
clc
cld
adcb
or
gs
imul
adc
sbb
es
fs
and
sub
cltd
fs
dec
xor
cmp
or
inc
gs
dec
xor
mov
dec
mov
leave
and
dec
pop
pop
pusha
add
jg
lahf
aam
lock
or
inc
pop
add
test
and
xor
mov
mov
inc
bound
inc
shll
movsl
pop
test
mov
adc
sbb
mov
pushf
and
xchg
pop
mov
and
sti
mov
inc
rolb
pop
cs
enter
push
inc
inc
dec
enter
pop
inc
loopne
add
adc
insl
sub
loope
clc
push
or
sbb
je
icebp
or
shll
mov
jbe
ret
loop
loopne
add
push
or
iret
and
pop
add
ficoms
and
sahf
add
add
and
test
and
mov
and
xorl
mov
and
jnp
shll
dec
xor
adc
or
jnp
xchg
adc
add
jmp
dec
jb
add
pop
clc
sbb
test
js
test
btc
adc
or
xor
fisubl
xor
xchg
add
repnz
je
xchg
inc
and
mov
or
sub
or
call
add
push
add
mov
sbb
lock
in
shr
inc
and
mov
and
fsubrl
jg
jecxz
sbb
add
or
jmp
add
ret
xchg
pop
and
jmp
loope
cli
xor
adc
mov
jge
aaa
jge
je
mov
loope
flds
and
pop
adc
pusha
daa
movsb
mov
loope
pop
sub
xor
sub
xchg
add
adc
fnstsw
pusha
pusha
fldl
cmp
adc
lds
pop
dec
push
mov
inc
testb
lret
push
inc
adc
lret
sub
add
add
out
out
test
fistpll
inc
xchg
sub
mov
ffreep
push
push
or
sub
jo
jmp
push
and
movsl
pop
adc
sbb
and
or
fcmovbe
inc
pop
and
sbb
mov
les
sub
and
or
in
fisttps
inc
push
fstps
jmp
fisttpll
pop
xchg
adc
jp
xchg
fndisi(8087
inc
add
adc
jb
ds
or
pop
sub
jmp
push
xchg
dec
push
xchg
adc
xor
dec
and
test
js
adc
or
push
inc
inc
xchg
push
aaa
loope
jle
sbb
out
cmp
push
xlat
xor
xchg
nop
lock
aaa
mulb
sub
sub
sbbl
mov
lret
or
jmp
fldcw
sarb
imul
bound
mov
enter
xor
mov
dec
pop
and
mov
andl
test
mov
cli
cli
adc
push
adc
adc
jmp
scas
in
and
test
push
cli
repnz
movb
cld
fs
mov
test
jle
ret
cli
shrl
push
pop
orl
scas
dec
stos
nop
loopne
or
push
push
pop
jmp
pop
cs
sub
push
icebp
insb
roll
adc
mov
inc
outsb
mov
cwtl
ja
xor
jle
push
xor
sub
add
jns
mov
sbb
cmpsb
lret
add
pop
adc
popa
and
test
add
ss
mov
add
outsl
push
fsubrl
clc
cmp
je
rorl
or
fidivrl
jns
add
or
xchg
imul
push
hlt
pop
dec
daa
adc
and
pushf
sub
dec
xor
ds
or
movsl
jae
loope
jp
add
xchg
mov
mov
fcomp
add
cld
jmp
jno
scas
popf
dec
inc
and
mov
lock
or
popa
orb
fisttpll
dec
pushf
stc
and
inc
add
testl
adc
mov
sbb
loopne
add
ret
in
push
mov
and
push
pushl
bound
and
and
mov
das
adc
jecxz
incb
loopne
int3
imul
mov
jne
nop
mov
add
jl
push
sbb
mov
mov
orl
cmpb
jo
mov
loopne
jecxz
into
je
mov
add
sub
xchg
pop
xor
cmp
or
mov
movsl
pop
lret
lock
or
sbb
incl
cmp
decb
mov
das
cld
fsubs
into
pop
sbb
mov
jmp
sbb
nop
pusha
fcomps
adc
ret
jecxz
pop
dec
sub
enter
push
dec
out
fld
fucomp
pop
pop
fldenv
out
mov
das
add
jne
orl
dec
pop
and
mov
xchg
das
fstps
insl
shrl
push
or
fidivs
push
or
push
out
mov
and
jne
pop
je
xchg
flds
aad
xor
push
and
lock
sbb
sub
adcb
or
push
push
test
push
mov
dec
ljmp
adc
fnstsw
movswl
xor
or
loop
inc
fldenv
outsl
dec
test
sub
sarb
xor
fmull
or
leave
push
in
fldcw
push
push
mov
inc
shrl
or
sub
fwait
out
and
cld
test
fsubs
outsb
fwait
sbb
add
adc
repnz
adc
nop
call
movsb
fldpi
xor
enter
sub
mov
aad
mov
lds
je
sbb
scas
ss
add
jp
mov
popf
nop
ret
pop
andl
add
mov
or
jmp
and
imul
rclb
mov
sbb
sbb
adc
or
push
fcmovnb
orl
int3
cmpsl
jne
push
lock
insb
add
je
or
adc
mov
sub
push
and
cld
sub
add
movsl
mov
pop
inc
dec
or
inc
xlat
int3
cmp
orb
sub
add
adc
add
xchg
es
xor
out
nop
lret
je
push
mov
cltd
xor
out
pop
inc
push
sti
jbe
xchg
or
test
lock
mov
jb
std
jle
mov
enter
or
add
loope
jge
push
push
or
inc
or
add
loope
rcrl
cmp
pop
stos
or
mov
mov
pushf
pop
dec
imul
dec
push
or
sub
or
outsb
add
mov
aas
dec
push
pop
or
cmovnp
orl
test
sete
add
jl
xchg
adc
jmp
sbb
lock
stos
jp
pop
pop
fcmovbe
xor
xor
cmp
cmp
add
lea
pop
add
pop
pop
and
scas
scas
adc
pushl
ret
dec
or
inc
lea
pop
mov
lret
rolb
adc
mov
call
loop
shrb
push
inc
jmp
cmpl
orb
add
pop
and
ss
out
mov
out
mov
inc
adc
iret
rcr
xor
jbe
dec
mov
add
mov
pop
aam
cmp
jb
cmp
sbb
dec
cmp
inc
fwait
loopne
sub
data16
jae
adc
mov
pusha
add
add
inc
and
jo
test
jge
fcompl
mov
sub
jle
jge
je
inc
push
adc
xor
or
scas
cmp
stos
inc
push
mov
test
sub
dec
ljmp
jl
push
mov
movsl
fiaddl
ss
nop
push
loopne
push
out
push
out
and
push
fdiv
pop
lock
sbb
loopne
pop
popf
jb
mov
and
dec
ds
push
or
faddp
scas
and
aam
out
push
sub
or
es
in
inc
mov
pop
sub
loope
sub
xchg
lahf
or
das
adc
adc
dec
lea
push
shlb
faddl
icebp
add
jnp
out
test
popa
inc
or
xor
xchg
orl
inc
rcrl
dec
xor
mov
cli
sbb
or
push
jb
add
inc
subl
les
mov
dec
jns
cmp
and
jo
ss
hlt
push
arpl
sub
cmp
inc
mov
cmp
fstpl
movsb
adc
add
adc
cwtl
xor
xchg
loopne
push
ss
shll
stos
rolb
sbb
pop
xchg
add
je
mov
gs
into
pop
add
imul
lea
out
and
inc
mov
jge
mov
mov
adc
orb
jecxz
rolb
jle
or
fildl
pop
lock
sbb
cwtl
cmp
push
adc
pop
js
jmp
clc
pop
push
lock
and
adc
mov
adc
cmpsb
mov
adc
push
add
and
inc
sub
dec
add
in
pop
dec
je
or
or
inc
pop
adc
hlt
stos
imul
add
mov
mov
fcomp
enter
cmp
les
pop
jb
adc
mov
push
inc
mov
mov
test
adc
or
repz
inc
rclb
adc
push
mov
shlb
mov
xchg
xchg
adc
inc
mov
cs
or
ss
cmp
je
or
dec
loope
xor
mov
dec
add
mov
add
sbb
sbb
add
or
mov
lods
inc
lock
movsb
int
call
pushf
lret
adc
and
aaa
sub
inc
mov
ficompl
dec
add
adc
or
wrmsr
xchg
cwtl
cmp
adc
push
sub
or
push
add
adc
jno
adc
mov
cmp
cmpsb
add
lods
inc
mov
xlat
mov
or
jbe
or
add
in
cmp
cmp
xor
ret
push
pop
sbb
lea
push
push
movsb
dec
in
xor
adc
sub
je
add
mov
adc
and
imul
mov
popa
addb
add
adc
pushfw
cld
mov
pop
push
mov
cli
sbb
sbb
mov
faddl
lock
lcall
add
stos
dec
cmp
cmp
inc
inc
jecxz
ljmp
dec
addb
mov
sbb
mov
neg
movb
pop
add
ret
js
cltd
push
enter
xor
or
or
add
lahf
and
add
enter
into
nop
or
mov
xor
jmp
daa
jns
mov
unpckhps
rorl
or
push
lea
sbb
inc
xor
cmp
hlt
std
dec
xchg
mov
iret
ret
jmp
daa
pop
clc
dec
and
pusha
push
or
sub
loope
fs
adc
adc
movsb
push
push
adc
shlb
mov
sub
pop
or
lret
dec
fcoml
adcb
andl
jne
mov
pop
bswap
add
and
push
fadd
lret
mov
das
push
cld
pop
adc
xor
into
jge
pop
dec
fcoml
and
call
movb
fdivs
push
xor
add
push
mov
jp
add
out
les
push
lret
xchg
call
es
push
mov
push
imul
mov
lea
add
xchg
ret
fadd
dec
or
divb
addl
mov
add
sub
test
sbbb
add
mov
jo
subb
fists
dec
addr16
mov
loope
add
insb
movb
test
daa
push
enter
insb
mov
neg
sbb
rcrb
and
fwait
sub
mov
ret
pusha
or
xchg
or
jne
bound
xor
xor
add
subb
mov
and
dec
sub
out
jmp
inc
xor
mov
jb
adc
aam
lcall
push
mov
mov
mov
mov
jle
or
push
hlt
nop
inc
push
and
sub
adc
mov
and
sub
pop
addr16
mov
fsubrs
rcll
jl
xor
rcr
cmp
pop
icebp
xchg
cli
fs
cld
add
hlt
shrd
sbb
push
daa
xor
xchg
inc
scas
xor
sbb
clc
cwtl
mov
add
data16
cli
ss
inc
and
xor
out
add
cmp
or
lea
or
rol
jo
mov
adc
push
ljmp
test
rcr
lock
sbb
cmp
in
and
popf
aam
sub
pop
sbb
js
jg
popa
mov
xor
jmp
mov
sub
mov
pop
sbb
das
cmp
sarl
jg
pop
clc
push
shll
xchg
sub
or
pusha
mov
push
lock
or
add
jnp
sub
dec
dec
inc
dec
pop
dec
and
or
or
jo
ficomps
or
cmp
sarl
jnp
in
ja
push
add
dec
fnsave
rolb
xor
and
jbe
add
adc
mov
sbb
movw
lcall
push
jle
sbb
push
sbb
mov
inc
jnp
push
jmp
lock
sahf
fwait
xor
mov
xchg
enter
neg
call
pop
sahf
mov
ret
aaa
push
mov
xor
pop
inc
mov
pop
mov
push
in
add
adc
lock
je
aad
add
or
jbe
inc
sbb
rcrl
push
addl
inc
roll
push
sbb
dec
cmp
inc
nop
xor
sbbb
jne
mov
mov
nop
pop
push
pop
sbb
xchg
cs
sbb
push
sub
cmp
sbb
enter
push
lock
push
push
scas
sbb
out
dec
out
sbb
add
loopne
jge
inc
or
pop
inc
mov
mov
push
add
and
xchg
popf
mov
sbb
mov
ds
andb
fnstenv
outsb
outsb
mov
pop
or
pop
data16
in
add
imul
rolb
aaa
inc
popa
je
inc
je
dec
push
repnz
out
xor
sbb
pop
adc
sbb
dec
loopne
mov
mov
or
mov
popa
fwait
rorb
out
dec
orl
gs
xor
loope
mov
mov
ret
arpl
ret
pop
cmp
mov
sahf
and
sub
inc
and
out
pop
and
adc
push
lcall
cmp
fdiv
jp
adc
shufps
rorl
ss
inc
cmp
or
mov
or
hlt
ja
inc
popa
sub
jne
cltd
inc
fstpl
cmp
cli
jge
mov
adc
sbb
je
add
ja
mov
mov
mov
xor
mov
xlat
loopne
int
sub
xchg
jmp
icebp
add
roll
adc
ret
or
loope
or
call
cmp
xchg
call
push
inc
xor
mov
sub
and
es
test
push
xor
inc
jmp
adc
or
notl
push
leave
xchg
movsb
mov
mov
and
fidivrs
aam
jbe
sbb
push
cmp
push
sub
test
sub
movsb
push
mov
pop
inc
mov
test
mov
insl
fwait
lock
xchg
sub
jns
or
inc
arpl
hlt
jo
push
pop
ficoms
cmp
mov
fisttpl
mov
jmp
adc
or
xor
push
mov
pop
lret
or
push
push
rorb
dec
imul
pop
mov
scas
and
icebp
je
in
jb
pop
stos
andl
adc
or
mov
mov
lret
je
dec
je
dec
push
push
jmp
or
jmp
es
enter
mov
or
lcall
ss
dec
push
xchg
out
repz
pop
ret
enter
rcl
js
adc
bts
test
int
or
add
inc
lcall
cmp
inc
push
es
cmp
pop
mov
popa
push
shll
jne
adc
aas
and
cmp
je
mov
mov
and
cmp
add
and
jbe
push
pop
xor
dec
adc
xor
mov
shlb
pop
inc
sub
into
sub
mov
repz
mov
mov
movsb
and
mov
pop
lods
or
cmpl
xchg
xchg
mov
and
mov
xor
add
lret
je
sbb
sub
inc
xchg
in
mov
cmc
imul
or
or
cmc
xor
les
sub
jge
shr
add
or
sub
pop
or
mov
outsl
fistps
dec
call
and
add
mov
mov
notb
pop
mov
cmp
mov
mov
popf
add
jp
mov
pop
add
dec
inc
cld
shr
mov
je
inc
jl
in
sbb
cmp
dec
es
or
dec
pop
xor
mov
out
or
sti
and
push
es
dec
fidivrs
or
out
bound
xor
or
mov
into
clc
xorb
push
pop
shll
cli
test
add
pusha
ss
lock
ss
and
or
roll
mov
ja
push
add
mov
imul
xchg
push
shlb
icebp
sbb
pusha
push
loope
pusha
or
fsubrl
add
xchg
popf
push
jne
jne
dec
push
rcrb
roll
and
or
xchg
or
mov
je
data16
sub
sub
pop
aaa
popf
push
ja
mov
pushf
xchg
mov
loope
das
pop
add
sbb
add
je
out
leave
jp
cltd
mov
sub
push
sub
out
loope
outsl
stos
pop
loop
dec
inc
aaa
xchg
dec
ljmp
add
adc
ret
cmc
sbb
sbb
dec
leave
dec
testb
js
daa
loope
adc
push
stc
dec
and
adc
add
test
rclb
and
loop
or
daa
mov
mov
jo
mov
stos
mov
pusha
sbbb
popa
movsl
punpcklbw
sub
xchg
and
aam
mov
pushf
sub
outsl
xor
jecxz
inc
pop
outsl
inc
add
sub
outsb
and
and
out
add
jb
nop
xor
or
and
clc
sbb
fistpll
add
inc
lds
add
icebp
scas
jecxz
fsubr
add
add
pop
je
xchg
cs
outsb
mov
and
aaa
mov
push
add
loop
add
push
rolb
inc
sub
jge
test
push
xorb
sub
mov
pop
call
push
ds
push
sbb
inc
fidivl
pusha
push
ljmp
arpl
cmp
test
roll
pop
lods
push
inc
addr16
cmp
push
shlb
in
xlat
lods
aas
mov
cmp
jle
inc
and
inc
pop
xchg
test
pop
cmpsb
sbb
or
xor
dec
dec
cwtl
test
filds
jmpw
adc
cmpb
jl
or
das
xor
inc
xor
mov
add
inc
aam
push
fstpl
sahf
nop
scas
jns
cmp
xor
jmp
cmp
or
dec
imul
mov
ds
mov
cld
or
dec
mov
sub
ljmp
jmp
pop
jne
cmp
jne
adc
xchg
jne
jmp
dec
add
adc
aas
adc
adc
rorb
push
or
jp
or
loop
aam
sar
roll
leave
add
orl
mov
iret
adc
pusha
xor
xchg
cmpsb
cmc
sbb
test
mov
mov
jne
or
iret
lock
xor
mov
cmp
adc
mov
add
test
inc
sbb
inc
adc
add
sub
add
add
rclb
cld
addl
inc
push
out
adc
neg
neg
sbb
sub
sahf
dec
ficoms
sbb
or
fmull
mov
adc
sbb
push
inc
shl
push
inc
and
fldenv
xchg
dec
shll
test
lret
enter
sbb
mov
loopne
add
dec
jns
sub
in
sarb
pop
pop
mov
adc
aam
lods
jae
or
jae
inc
lds
ljmp
shr
add
or
sub
adc
push
idiv
and
maskmovq
add
inc
clc
cld
lock
je
push
loop
jmp
rolb
cmp
mov
sbb
dec
or
into
add
lods
pop
lods
jae
or
adc
nop
ds
incb
or
aad
call
into
jbe
hlt
add
hlt
adc
sbb
inc
adc
test
or
push
xchg
and
mov
jecxz
jae
shrl
or
inc
cmp
js
decl
cs
pop
movsb
lods
or
add
ljmp
sbb
pusha
lea
fs
cs
ljmp
cld
inc
ss
nop
aaa
dec
pop
rolb
mov
imul
jns
cmp
cltd
movsb
cmp
mov
pop
cmp
lods
test
sub
add
jge
xchg
sbb
pop
ss
mov
cmp
test
adc
inc
sbb
lahf
push
dec
adc
jo
or
loopne
adc
shll
es
mov
je
adc
mov
out
push
cmp
ja
add
cmp
adc
cmp
jne
cmp
daa
dec
xchg
xor
adc
mov
sbb
add
jl
pop
pop
sub
cmp
test
fs
testb
jb
dec
lea
call
rclb
mov
subl
aam
pop
dec
insl
insl
sti
aas
cs
push
sbb
add
xchg
pop
mov
movsb
iret
pop
js
je
insb
xbegin
mov
inc
call
pusha
callw
sti
movl
add
cmp
and
int
movsb
pop
xchg
xor
jno
mov
divb
jne
push
adc
jp
adc
sub
sti
stos
sub
mov
mov
mov
dec
js
insb
stos
sarb
sbb
leave
in
push
add
push
add
fwait
xor
add
aas
setbe
and
adc
sar
adc
call
inc
imul
lea
jmp
mov
dec
cmc
dec
jmp
into
movswl
xchg
fcmovnu
cmp
mov
es
ljmp
cwtl
es
mov
out
mov
mov
push
fimull
js
xorl
push
out
mov
fdivr
add
popf
addr16
cwtl
mov
xor
and
mov
and
les
dec
and
mov
mov
loopne
jo
mov
adc
mov
mov
sub
and
and
lea
inc
xor
andl
ss
cmpb
in
cmp
xor
mov
shl
leave
out
and
inc
call
in
ljmp
push
inc
mov
cmp
cld
inc
xor
and
lea
add
in
push
sub
sbb
xor
loop
dec
or
xchg
rcr
sbb
lcall
dec
push
adc
mov
nop
movsb
movsb
repnz
dec
sahf
or
ret
movsb
jae
pop
fldt
mov
pusha
push
imul
insb
xchg
mov
mov
xor
pushf
insb
jl
push
lods
aas
lods
fwait
cmpsb
and
rorb
xchg
jle
cmp
bound
mov
fiadds
add
shr
or
and
frstor
lock
sbb
push
lret
out
imul
or
mov
lods
inc
addb
lahf
std
mov
shrl
loope
shr
or
mov
push
testb
dec
mov
jp
out
inc
jp
jnp
lock
dec
subl
jnp
repnz
mov
add
nop
xchg
out
cli
div
mov
push
mov
cmp
test
and
xor
and
out
mov
sahf
test
sbb
adc
and
push
jnp
pop
fisubrl
xchg
insb
mov
push
jne
in
cli
fidivl
fldenv
enter
jg
or
lret
enter
xchg
dec
rolb
lock
mov
dec
xchg
stos
cmp
or
pushw
sbb
loop
pop
cmp
dec
mov
test
sahf
sub
push
popl
sti
and
aam
daa
sbb
aam
push
testb
cmp
pop
and
adc
jne
fdivrs
pop
xchg
add
jbe
sbb
dec
sub
sbb
fstpt
push
mov
add
int
push
adc
add
or
fmull
or
cmpsl
add
mov
sbb
pusha
mov
fnstcw
dec
add
pop
popa
cmp
mov
sbb
add
pusha
inc
je
jge
inc
xchg
adc
jg
or
orl
mov
in
sub
or
jge
add
mov
and
movsb
loopne
cld
icebp
jmp
add
jne
pop
push
jns
fnsetpm(287
loopne
orb
pushf
pusha
mov
ljmp
xor
xchg
insb
sbb
psubq
shl
inc
add
inc
mov
insl
push
aad
xor
cmp
jle
push
pop
outsb
call
add
add
inc
sbb
rcrb
jb
cli
pop
inc
sarl
fsubrl
fdivs
mov
and
imul
mov
imul
cs
dec
loopnew
fadds
outsb
pusha
lea
push
and
mov
push
in
out
add
pop
fisubs
les
add
lock
sar
sub
ja
into
inc
les
enter
xor
jb
lret
stos
inc
push
sbb
ss
or
sti
je
clc
rolb
lods
add
pop
push
outsl
dec
enter
sahf
mov
add
cmpsl
outsb
and
dec
int3
sub
test
cli
pop
add
sbb
testb
sbb
or
mov
inc
ljmp
jmp
add
cwtl
dec
inc
pop
cmc
cmpsl
mov
cmp
jge
sub
cmpb
or
add
dec
ja
fiaddl
aam
inc
dec
add
add
fadds
add
adc
rorl
mov
lock
jmp
add
or
or
push
adc
cmp
test
inc
test
jbe
subb
and
add
push
add
inc
mov
mov
or
or
dec
push
imul
ret
lcall
add
push
mov
mull
or
push
push
mov
test
or
adc
or
repz
add
pop
jne
xchg
rcl
or
push
pop
scas
in
inc
xor
je,pt
push
ret
sbb
adc
mov
je
mov
rcrb
xchg
adc
and
jae
jo
jbe
test
lret
movsb
repnz
and
cmp
xor
into
pusha
pusha
or
fs
and
sub
and
pop
pop
jo
pop
popa
and
or
prefetchwt1
mov
inc
ret
or
adc
push
loopne
add
stos
push
cmp
or
or
adc
and
pop
jo
fsubl
fisubl
test
mov
je
aaa
jecxz
or
pop
or
inc
call
insl
add
mov
adc
jne
and
and
jl
add
test
pop
loop
jge
out
and
push
dec
std
add
or
ret
and
and
cmp
test
mov
adc
xchg
test
sbb
sbb
or
push
scas
inc
jo
push
orl
mov
shll
xchg
add
sub
daa
mov
loopne
mov
rorb
adc
sti
loopne
sbb
repnz
test
adc
int
add
or
adc
into
mov
xchg
into
mov
mov
sbb
and
sbb
leave
repz
inc
jg
into
into
adc
lret
or
push
mov
pop
sub
push
pop
loopne
ficoms
add
add
insb
test
or
sbb
stos
ds
inc
nop
or
mov
fs
ljmp
pushf
hlt
add
leave
out
jecxz
push
cltd
adc
lock
and
xchg
fwait
stos
mov
sbb
pop
test
mov
and
cmp
mov
popf
ret
cwtl
cmp
inc
sub
jmp
mov
mov
pushf
jb
xchg
lret
ljmp
mov
out
dec
jo
ljmp
mov
adc
fnstenv
scas
add
xchg
add
add
clc
xchg
add
mov
into
lret
dec
gs
mov
scas
push
or
inc
shl
hlt
inc
push
fcom
add
fiaddl
jns
je
adc
cmp
jo,pn
mov
cmp
repz
sbb
ficompl
insb
mov
add
lock
adc
je
dec
sub
icebp
call
cmp
je
mov
scas
push
sub
shl
mov
cmp
pop
adc
mov
lret
dec
sbb
cmp
sub
jmp
push
mov
movsl
sbb
sub
fisubrl
aas
or
leave
mov
mov
mov
ret
into
das
add
jecxz
inc
mov
mov
and
inc
xor
aam
add
test
nop
xor
fcoml
orl
adc
or
sub
pop
cmp
inc
scas
sub
mov
mov
push
push
mov
mov
and
xchg
sub
test
xor
cltd
in
inc
lcall
sbb
push
push
rclb
mov
test
cmpb
cmpsl
in
cmp
je
inc
and
add
xchg
and
test
sbb
cmp
xor
sub
pop
mov
dec
add
test
or
sbb
ret
cmp
ret
pop
add
jne
rorb
xchg
sbb
sar
xchg
pop
inc
std
aam
jmp
mov
or
and
push
inc
mov
mov
scas
ret
adc
xchg
jl
out
or
sub
lahf
inc
xrelease
loope
ret
add
jne
imul
add
call
ja
ss
mov
mov
push
sbb
fwait
dec
cmp
test
inc
insb
cmp
pop
and
pop
jo
arpl
mov
lea
outsb
rcr
push
mov
and
sbb
lds
dec
in
inc
mov
adc
cli
fildll
test
sahf
cmpl
xor
lret
lock
and
xor
lcall
push
mov
dec
lea
in
add
enter
push
aas
in
add
inc
inc
add
lock
dec
mov
mov
lock
cmp
mov
jmp
dec
push
sub
movsb
fisttps
xor
ja
or
cmp
subl
push
js
xor
sub
xor
cld
adc
or
mov
out
push
xchg
inc
insl
cltd
or
push
push
lds
pushf
iret
aam
mov
dec
pushf
xor
mov
sub
add
sbb
in
xorl
dec
hlt
mov
push
pcmpeqb
jg
fs
adc
aam
push
push
ds
inc
jnp
btc
cmp
jbe
inc
mov
push
les
pop
sub
pop
sub
mov
pop
aas
push
sbb
in
mov
inc
pusha
loopne
inc
cmpsl
cmp
test
pop
lods
lea
add
jb
mul
mov
notl
fcomps
sbb
insb
sub
dec
repz
fdivrl
and
les
ds
push
sub
sbb
lret
pop
mov
cmpsl
rcll
xchg
andb
jnp
xchg
mov
jl
push
mov
add
push
xor
adc
outsb
xchg
add
xchg
dec
dec
movsl
dec
in
add
or
xchg
pop
shlb
lock
imul
inc
int
ret
rol
push
xor
mov
ret
data16
sub
mov
push
sar
xor
sbb
dec
pop
push
and
mov
and
pop
sub
add
pop
push
dec
jnp
rol
shl
inc
mov
mov
ret
popa
xchg
push
andb
stc
push
out
xor
in
jecxz
and
adc
cmpsb
jmp
or
andb
and
inc
add
stc
fs
add
pushf
ret
sub
ss
adc
push
icebp
push
add
shr
ljmp
fadds
sbb
pop
or
jo
sbb
xchg
xchg
shl
or
insl
loop
push
loopne
je
ja
pop
pop
xchg
loopne
inc
fdivrs
popa
sbb
pusha
sub
les
hlt
jno
mov
loope
pop
mov
adc
ret
add
test
rorl
cld
adc
pushf
dec
cwtl
mov
xor
pop
call
dec
lret
or
push
mov
jp
mov
inc
mov
xor
jns
js
rclb
orl
shl
adc
dec
xor
add
dec
push
xchg
lock
pop
stos
pop
inc
fwait
mov
repnz
pop
cmpsb
add
and
pop
xor
inc
fisubrl
clc
ret
mov
gs
rcrl
and
aad
sar
addb
mov
sar
shll
enter
icebp
dec
pop
sub
cmpsb
mov
dec
inc
sub
or
push
nop
xchg
pop
fisttps
xor
cld
mov
std
data16
xor
inc
and
pusha
add
jo
jmp
push
pop
xchg
imul
inc
in
adc
imul
adc
adc
lds
test
iret
push
mov
jo
int3
dec
xorb
insb
xchg
cld
arpl
imul
fidivrl
cmp
ja
add
fsubrp
sub
lock
dec
inc
imul
add
xchg
jge
cmp
add
inc
or
movsl
jge
adc
loopne
or
ja
push
test
fnsave
add
jle
dec
mov
sbb
jae
push
inc
scas
inc
mov
clc
cmp
or
jnp
or
test
jg
add
divb
pop
lock
mov
dec
lcall
mov
pop
lods
adc
push
pop
pusha
adc
shlb
sub
inc
pop
xchg
push
into
lock
fadds
in
jbe
mov
dec
mov
enter
daa
hlt
sar
push
cmp
pop
pop
mov
mov
pop
enter
dec
add
inc
dec
push
mov
cmc
jb
lea
clc
adc
rorl
push
lea
and
xor
add
pop
fs
mov
sbb
in
sub
sbb
sub
fcoml
inc
loopne
pop
cmp
cmp
sbb
mov
int3
rclb
jle
sbb
sahf
inc
ret
mov
cmpsl
aas
inc
adc
jg
mov
fdivl
or
imul
or
bound
jo
jp
ja
adc
push
xor
push
add
rorl
mov
pop
pushl
mov
sbb
jl
xorl
out
cltd
xchg
mov
adc
rcrl
or
mov
ret
inc
cmp
xor
inc
imulb
lods
adc
and
and
inc
jle
adc
or
jl
lea
imul
inc
call
inc
jbe
cltd
aam
jno
test
and
sbb
inc
push
hlt
popa
ret
leave
or
sub
mov
es
js
sub
loopne
jo
push
or
add
add
or
xorl
adc
xchg
dec
push
int
loopne
xor
sbb
mov
rorl
icebp
pop
je
push
push
push
add
mov
mov
and
dec
dec
rcrl
xchg
loopne
gs
inc
add
inc
adc
pop
jl
in
mov
aaa
cmp
test
xchg
call
rcll
je
mov
pextrw
mov
xchg
loope
xor
loope
sub
cwtl
fldcw
or
ret
push
inc
inc
mov
les
add
imul
mov
scas
lret
insl
sbb
pushf
fucom
adc
aaa
gs
mov
cmp
cmp
jge
push
cmp
pop
and
fildll
lods
call
adc
cmpsb
mov
rcl
filds
mov
dec
pushf
pop
adc
sbbb
jae
cmp
cld
push
test
jle
cmp
jg
dec
dec
rolb
or
out
dec
xchg
daa
mov
test
add
aam
insl
push
test
loope
ret
inc
outsb
fcoms
fmuls
rcl
jnp
adc
mov
cmp
hlt
xor
cmp
fwait
and
lcall
sbb
lods
xchg
out
mov
rorl
add
dec
jno
sub
sbb
ss
in
mov
sbb
dec
or
andb
andb
push
dec
cmp
repnz
mov
mov
xchg
or
leave
xor
xlat
mov
and
sub
add
into
mov
dec
movb
orb
xlat
fisubs
or
aam
scas
or
jg
or
xchg
add
popf
add
jl
scas
cmp
cmp
add
popa
xchg
je
mov
xor
dec
xchg
sbb
add
xor
jmp
outsl
sub
sub
inc
arpl
testb
inc
cltd
jp
inc
dec
dec
pusha
push
mov
negl
pop
and
loopne
pusha
lret
mov
or
jbe
cmp
cmp
adc
adc
xor
leave
push
dec
dec
je
dec
jne
push
pop
and
dec
stos
ja
fcoms
test
pop
jmp
xor
adcb
cs
sub
and
jge
je
adcl
cli
outsl
inc
sub
jne
push
sub
imul
les
dec
rcl
insl
add
cli
inc
cs
arpl
mov
loop,pn
scas
clc
mov
pushf
call
lea
stos
add
in
loope
inc
sbb
jne
mov
jecxz
jmp
jmp
pop
xchg
inc
mov
xchg
lods
rolb
popa
pushf
push
push
testl
loop
movsb
mov
push
fstpl
fwait
add
jae
popf
clc
push
lea
je
add
aaa
jl
xor
mov
add
fimuls
mov
je
cmpb
sub
or
imul
add
xchg
into
mov
push
pop
clc
popf
jbe
mov
fcmovb
mov
sub
jb
pop
xor
aaa
mov
push
or
cmp
cmp
adc
scas
mov
push
cmp
fnstsw
andb
ret
inc
mov
stos
mov
orl
xor
das
rcll
or
add
adc
or
leave
sahf
jecxz
sub
push
add
add
dec
mov
sbb
jne
pop
add
movups
fisttpl
or
push
mov
out
gs
mov
mov
fs
mov
pop
out
jle
add
icebp
sbb
les
jbe
or
or
shl
jne
inc
je
push
scas
pop
dec
je
sub
or
imul
pop
loop
and
push
or
ss
add
cmp
mov
cmp
jbe
dec
inc
out
lock
inc
jp
lock
mov
adc
push
cld
and
fldt
lea
push
push
mov
and
test
faddl
sbb
mov
cmp
fstl
push
and
mov
mov
jg
xchg
movsl
mov
adc
add
add
and
cmp
mov
ljmp
cmp
ret
jae
jb
or
adc
mov
push
fiadds
pop
aaa
pop
pushf
and
xor
loop
mov
pop
scas
mov
push
loope
jno
and
scas
xchg
arpl
scas
push
xor
dec
and
ret
es
data16
adc
gs
add
es
pop
push
outsb
stc
rolb
pop
sti
push
pop
dec
test
insb
and
js
sub
sub
xor
jg
jns
or
jge
inc
pop
mov
mov
xlat
je
cmp
add
adc
mov
testb
fwait
inc
sbb
xchg
testb
ds
or
cmp
xlat
test
add
jge
push
mov
push
sbbl
je
cmp
push
jbe
mov
cmp
jbe
clc
push
push
or
movsb
in
push
inc
push
js
xchg
push
cmp
call
and
mov
sarb
mov
repz
push
addl
pop
xor
mov
sbb
rcrb
fstpl
sahf
test
pop
jmp
mov
sbb
inc
pop
pop
or
scas
cmc
pop
jnp
hlt
sub
mov
mov
in
push
mov
sbb
ret
gs
add
imul
mov
in
fstpl
nop
xor
aad
lods
jmp
push
xchg
jne
dec
jns
mov
inc
dec
test
add
add
cmpsb
jg
pop
movsb
fidivl
xor
jb
sbb
add
add
dec
xor
subsd
rcll
xlat
int
out
ja
ljmp
push
movups
jne
xchg
jo
stos
inc
sub
adc
mov
ljmp
sbb
stos
xchg
in
fbstp
popa
mov
fld
fldcw
xorb
insb
or
xor
fsubrp
cmp
mov
fstps
icebp
pop
js
cmp
xor
mov
sub
das
fcoms
cmp
test
lea
sbb
bound
pop
push
add
inc
mov
and
mov
and
or
lea
mov
mov
mov
sbb
xlat
jo
test
faddp
jg
movsb
leave
push
pusha
jns
cld
nop
xchg
xchg
mov
jp
or
fmull
jb
fnstcw
lock
add
enter
shl
and
insb
jns
in
cld
xor
insl
or
pop
cmpsb
nop
adc
add
outsl
jns
mov
cmpsb
arpl
imul
xchg
call
adc
cmp
or
mov
dec
sarl
pop
pushf
pop
cmp
lock
rcr
xchg
mov
test
pop
cld
push
and
add
mov
enter
jo
push
repnz
dec
fistpl
test
rclb
xchg
fsubrl
add
sbb
dec
xchg
roll
mov
dec
rcll
dec
pop
cmp
jb
pop
inc
push
add
inc
pop
fmuls
cmpsl
mov
aam
out
mov
jbe
loopne
add
sbb
jno
mov
fists
inc
je
fisubrs
add
ret
addr16
or
push
or
ficoms
mov
mov
mov
mov
rorl
inc
in
inc
cltd
fsubs
adc
add
in
fidivrs
adc
cmpb
popa
or
sbb
and
xchg
scas
xor
fsubr
dec
dec
push
out
pop
or
sbb
loope
in
mov
jne
fs
inc
loopne
xchg
lcall
and
pop
pop
pushf
pop
inc
rorl
jl
push
js
fcoml
adc
int3
loopne
in
and
mov
xchg
push
and
xor
call
or
rolb
les
jb
test
mov
imul
gs
rcrb
add
and
in
orl
fsubs
icebp
jecxz
in
lahf
cmp
outsb
lods
push
jno
xchg
dec
mov
xchg
dec
es
insb
jo
add
cltd
fs
add
mov
fsubr
es
rol
adc
lock
test
pop
shrl
add
adc
movsb
imul
lods
lea
int3
lea
outsb
xor
ret
adc
shrb
mov
enter
repz
daa
fmuls
jecxz
jns
and
jecxz
rolb
dec
lock
lea
adc
cmp
sub
or
mov
jno
push
icebp
out
ret
sbb
mov
add
ss
and
js
js
fisubrs
mov
cmp
mov
push
xor
xor
cmp
and
pop
push
inc
and
iret
in
shl
imul
mov
outsl
mov
hlt
enter
cmp
sub
aam
in
daa
jns
and
or
or
aad
adc
daa
push
in
ret
or
or
cwtl
mov
inc
lock
icebp
xor
sbb
sub
pop
push
dec
pop
pop
out
adc
aam
pusha
push
and
es
mov
fcomps
xchg
in
and
out
call
jmp
xchg
mov
pop
insl
dec
or
mov
shlb
dec
add
aam
jge
inc
fsubrl
ljmp
movsb
or
lock
xor
inc
sbb
xchg
jmp
push
xchg
jmp
and
popa
cltd
ds
jb
sub
ljmp
pushf
loopne
and
mov
jecxz
push
push
ret
jno
fsub
pop
lods
jmp
cmpxchg
mov
or
adc
add
hlt
mov
add
sbb
out
add
xchg
sti
cmpsb
mov
sub
jl
mov
sub
mov
arpl
inc
jmp
or
jnp
or
insb
or
in
hlt
xor
push
mov
and
mov
dec
hlt
mov
xor
mov
ret
lods
lods
add
inc
lds
mov
adc
inc
jb
or
ret
pop
sub
sub
popf
jecxz
es
hlt
or
out
and
inc
mov
sub
xlat
rcrl
scas
mov
in
xor
popa
sbb
lods
add
inc
add
add
cltd
ja
in
or
push
out
fmull
sub
mov
add
pusha
pop
push
aad
in
cmp
fcomps
push
rclb
loopne
sub
scas
cmp
mov
xorb
xchg
fldcw
outsl
mov
xchg
sbb
lock
test
fs
sti
js
pop
cmpsb
nop
or
lock
loopne
faddl
xorb
adc
mov
sub
xchg
inc
jmp
xlat
dec
dec
ret
and
nop
xchg
movd
sbb
cmp
inc
imul
rcrl
in
in
leave
adc
or
or
or
pushf
jl
mov
loopne
test
fcomp
jl
add
sti
sbb
or
xchg
movsb
sti
repnz
inc
scas
cmp
inc
cmpsb
fs
shlb
shrl
mov
adc
push
xor
add
repz
add
repz
in
mov
aam
inc
sub
movnti
in
cmp
lock
dec
xchg
pop
cmp
sti
add
stos
push
hlt
test
popw
push
movsl
aam
test
movsl
es
sbb
dec
or
or
pop
jb
and
or
pop
leave
and
jecxz
je
cmc
xor
xor
xor
cmc
outsb
into
xor
mov
imul
mov
cmc
int3
and
or
or
stos
pusha
leave
or
and
adc
inc
orl
pop
pusha
rolb
dec
arpl
mov
add
aaa
adc
scas
xor
xor
sarb
xchg
jno
xlat
sbb
pop
adc
sbb
data16
lea
rclb
movsb
xor
xchg
faddl
mov
mov
fadds
push
sbb
push
push
lods
adc
add
js
clc
fs
fdivl
iret
nop
fists
ret
xchg
xchg
dec
ficoml
add
aas
cld
clc
int3
jno
daa
xor
movntq
out
seta
pushf
cmpsb
stos
mov
in
and
sbb
inc
imul
ret
adc
sbbl
fmuls
das
rcrb
gs
sbb
stc
aam
imul
cmovae
call
fwait
in
xor
insb
adc
sub
movsl
subb
lods
lods
lds
inc
sub
adc
adc
outsl
mov
lret
sub
xchg
shll
sti
pusha
sbb
or
xchg
insb
add
out
in
bswap
test
push
fdivrs
pop
enter
loopne
and
dec
sbb
loopne
sub
ret
jns
mov
arpl
jno
mov
fs
pop
and
mov
inc
mov
mov
or
cld
inc
adc
insl
or
or
mov
dec
jl
or
and
adc
js
pop
std
mov
adcb
call
je
mov
rorb
jb
mov
fdivs
jge
lods
loop
inc
aas
aad
adc
stc
lahf
mov
movsl
loopne
sub
mov
adc
dec
push
fcoms
js
mov
dec
cmp
call
xchg
inc
dec
popa
jb
xchg
aas
or
rclb
scas
push
test
pop
add
aas
sbb
adc
nop
popa
rclb
repnz
dec
out
lock
js
mov
adc
cmp
mov
push
fs
push
or
or
pop
mov
xor
pop
push
mov
jne
add
cmp
add
cmp
rorl
adc
mov
add
in
lcall
pop
push
loopne
into
div
cmp
cmp
add
pop
cmp
add
mov
in
clc
push
add
cwtl
stc
mov
mov
jae
and
xor
push
leave
sbb
sbb
inc
or
je
rorl
adc
mov
push
loope
mov
add
inc
dec
bound
add
mov
insl
int3
pinsrw
imul
pop
inc
int3
ss
inc
xor
iret
shll
mov
jb
mov
push
add
cmp
aam
dec
inc
or
jg
pushf
je
rclb
outsl
xchg
mov
cmp
xchg
mov
int3
insb
in
sbb
sub
jb
lcall
mov
jmp
sbb
add
dec
lea
cs
mov
rcr
cmp
loopne
cmp
dec
js
pop
pop
std
setp
icebp
stos
or
test
insl
inc
les
test
lahf
int3
das
rsqrtps
cmp
sbb
dec
popa
cmpsl
aas
mov
pop
sub
cwtl
adcl
sbb
dec
mov
cmc
leave
xchg
push
lret
adc
cmc
sub
mov
adc
cmc
in
cmp
mov
and
pushf
mov
in
mov
cltd
fwait
lret
arpl
add
mov
dec
xchg
sub
nop
add
cwtl
pusha
sub
outsl
test
cmp
imul
fwait
aaa
inc
lods
insl
mov
cmpsl
mov
fcmovb
lods
pop
mov
movsl
pop
outsl
mov
sbb
push
and
movsb
fdivr
sbb
call
mov
ss
fnstcw
and
in
in
lea
call
call
cmp
pop
aam
xchg
or
imul
cmp
fadds
imul
sbb
leave
or
cwtl
popa
pusha
mov
xchg
add
pand
adc
sbb
dec
or
mov
sbb
cmp
es
mov
pop
shlb
push
or
aas
adcb
adc
adc
dec
or
popf
testl
movsl
or
bound
or
movsb
push
sub
iret
adc
push
cmp
add
sbb
xchg
and
push
jo
xchg
push
mov
aad
jns
xchg
lcall
in
insb
adc
dec
inc
push
loopne
loope
pop
call
mov
cmp
dec
cmovs
inc
lods
les
mov
sbb
pop
jmp
inc
dec
jno
add
js
test
mov
cmp
and
jno
and
add
sub
or
mov
mov
xchg
jno
jne
jne
mov
push
mov
inc
xchg
push
rolb
mov
push
mov
push
adc
inc
shlb
sbb
arpl
add
pusha
add
std
jg
xor
xchg
jae
sti
or
xchg
adc
fs
lea
addr16
mov
xor
jmp
fsubrl
push
dec
faddp
sub
adc
push
lds
sbb
sbb
fisubrs
or
loopne
call
cmpsb
sub
pop
adc
shrb
or
cmpsl
adc
addb
add
xor
xor
fs
mov
adc
call
adc
xchg
int3
inc
aam
fsubrs
enter
aad
insl
push
aam
xor
loopne
push
adc
fwait
cmp
call
aad
in
and
call
ret
mov
rcl
dec
xor
sub
adc
ja
dec
sbb
mov
adc
bound
dec
xchg
xor
jb
lret
adc
int3
sbb
mov
lea
or
push
inc
mov
and
mov
testl
int3
push
sub
movsl
rolb
xchg
fs
in
pop
jnp
pushf
mov
leave
cs
iret
sub
mov
inc
inc
mov
sub
jb
mov
push
scas
xorb
xor
call
in
and
test
jb
sbb
sub
divl
outsl
loopne
jb
notl
push
js
push
popa
and
pop
data16
pop
mov
cmp
lock
push
arpl
mov
mov
inc
inc
insb
mov
dec
pop
adc
push
nop
or
adc
pop
push
sbb
push
sbb
add
sub
sbb
dec
outsb
pop
rcrl
xchg
in
jne
fiaddl
cmpsl
ud1
cmp
test
loopne
mov
or
test
je
sbb
repz
fwait
adc
aas
cmp
and
or
nop
mov
adc
push
jb
adc
or
inc
xor
jmp
add
pop
sbb
jno
sbb
cmp
scas
sbbb
stos
sbb
and
insb
shrl
inc
mov
add
mov
jb
dec
or
test
shlb
xor
inc
ret
orl
mov
lods
mov
mov
jge
cwtl
ss
adcb
popf
ret
or
imul
inc
dec
leave
sub
mov
or
mov
add
and
and
adc
xor
sub
test
aaa
lods
inc
mov
fcoms
clc
lea
dec
and
lcall
cmp
cs
xchg
xor
ret
jbe
js
int
fcoms
mov
dec
subb
popf
jo
jbe
cltd
push
sub
test
dec
inc
sub
add
in
mov
ret
nop
adc
jl
ret
jo
sub
and
cmc
push
inc
pop
mov
push
sub
fs
mov
mov
lods
pop
mov
pop
cwtl
push
and
adc
dec
shlb
or
in
inc
bound
xchg
dec
add
mov
shl
inc
push
or
test
and
sub
mov
movsb
jge
add
mov
adc
push
bound
push
test
and
jne
test
lods
lcall
sub
test
aas
add
cltd
in
loopne
or
je
and
shlb
fsubrl
mov
and
add
test
mov
pusha
sub
pop
cwtl
adc
and
mov
sbb
in
test
jp
jno
inc
jne
adc
add
and
test
xchg
jnp
push
cmpsl
push
add
cmp
fdivs
ljmp
sarl
xchg
ja
or
add
cwtl
dec
enter
cmp
mull
hlt
jp
idivl
cmpsl
std
movsl
push
mov
leave
add
adc
mov
insl
sbbl
lret
adc
xor
mov
adc
leave
and
and
sbb
and
dec
sbb
inc
and
dec
xor
inc
sub
dec
shrl
pop
jo
sbb
das
fdivr
daa
pop
icebp
dec
cmp
call
dec
inc
or
sub
jne
jmp
in
jne
leave
and
add
movsb
mov
sti
das
push
or
sbb
or
or
insl
xchg
dec
test
sbb
in
addb
sub
or
mov
xor
sub
fldt
mov
and
fdiv
or
jne
xor
inc
sbb
and
and
dec
and
sub
adc
mov
dec
mov
sub
or
in
inc
adc
or
addr16
mov
int
sub
add
mov
or
fmull
int3
ret
int3
adcl
int3
rorb
jns
outsl
inc
push
or
fs
inc
xchg
sbb
xor
nop
cmp
sbb
sbb
ret
add
nop
inc
ljmp
popf
pop
orl
rdtsc
pop
sub
mov
aas
out
mov
xor
inc
push
inc
sub
test
xchg
sbb
sub
fsub
and
pop
pop
fsubrs
xor
adc
xchg
mov
insb
mov
cs
push
mov
and
pop
lea
leave
loopne
and
push
das
or
call
out
das
or
add
xorl
dec
xchg
test
adc
mov
pop
shll
mov
push
cmp
mov
push
xor
test
mov
mov
xor
mov
xchg
and
inc
pop
jnp
mov
push
nop
xchg
mov
mov
es
int3
das
and
push
xor
adc
rdmsr
xor
mov
lret
lcall
mov
pop
mov
and
sti
inc
xor
mov
xor
push
in
ja
jno
push
stos
sub
push
pop
int
or
pop
lea
xlat
les
in
or
stos
sub
inc
xor
fadds
and
rcrb
imul
enter
lock
sub
mov
xchg
leave
ret
mov
inc
aam
push
xchg
adc
xor
pop
dec
jmp
hlt
adc
mov
push
xor
cmpsl
sbb
push
jns
cmp
pushl
flds
test
sub
ret
std
add
cmpsb
in
enter
add
aaa
add
dec
ret
add
adc
and
mov
cmpsb
push
sub
loope
xchg
loopne
or
mov
nop
rcrb
pusha
pop
rcr
or
fiaddl
jg
mov
xorl
cmp
cmc
cmp
pop
pop
xor
sub
xchg
adc
cmp
adc
push
adc
pop
or
stos
fldl
pop
in
in
aam
mov
push
in
sbb
out
fildll
mov
das
aam
sub
movsb
rorl
mov
jg
orl
int3
les
sbb
push
inc
lret
sbb
sbb
repz
push
add
lcall
lods
cmp
lock
add
lods
mov
popa
mov
pop
fsubl
inc
sub
push
mov
pop
les
cltd
push
push
mov
or
jge
xchg
mov
movsb
insl
lahf
xor
xchg
sbb
fs
push
jo
xchg
nop
cwtl
cmp
nop
arpl
mov
inc
push
mov
sbb
int3
adc
push
pushf
shlb
lods
test
sub
mov
lods
xchg
xchg
fucomi
mov
pushf
leave
leave
insl
xchg
pop
xchg
bswap
enter
leave
sarb
push
dec
outsb
push
or
leave
add
fsubl
xor
jnp
mov
leave
and
dec
pushf
pushf
push
xor
inc
sbb
lret
xchg
or
iret
push
push
jns
sub
mov
xor
aam
out
inc
rorl
jl
mov
jecxz
inc
sbb
leave
adc
push
je
enter
pop
sar
dec
push
je
das
sub
ret
or
enter
jge
inc
or
jo
inc
lret
lcall
push
nop
mov
test
rcrl
pop
pop
pop
enter
rolb
mov
xor
or
jmp
or
dec
sub
ret
mov
ja
dec
sbb
inc
inc
or
dec
test
jo
pop
enter
cwtl
test
jb
inc
call
inc
sbb
adcb
mov
nop
mov
pusha
pop
mov
in
dec
dec
imul
cltd
and
xchg
in
pusha
shrd
pop
sbb
or
and
arpl
shlb
and
popf
gs
sub
es
cmp
cmp
xor
rorb
adc
sbb
and
dec
and
push
roll
mov
jecxz
repnz
dec
push
adc
aad
sub
or
imul
dec
push
and
fimull
xor
sub
pop
adc
scas
sub
and
dec
add
faddl
mov
jecxz,pn
dec
shrb
xchg
imul
mov
sbb
pop
dec
rcr
in
push
or
in
popa
or
mov
aas
outsl
fsubrs
aam
shrb
inc
sbb
popf
pop
inc
fs
mov
std
shrb
sbb
mov
nop
mov
int3
or
mov
pop
mov
xchg
xor
mov
ret
enter
push
ss
test
rolb
pushf
cltd
jbe
leave
mov
and
xchg
or
add
mov
fmul
stc
mov
dec
xor
das
mov
enter
mov
movsb
and
jl
imul
enter
fs
xchg
sub
or
xchg
sbb
or
adc
mov
jb
pop
aas
mov
pushf
sbb
orl
mov
pop
mov
jno
or
leave
sbb
addl
and
fwait
movsb
sbb
movsb
adc
mov
fsts
sahf
mov
mov
and
mov
shrl
sub
lcall
scas
add
insb
mov
and
rcl
das
sbb
dec
push
mov
movsb
xchg
ds
fadd
mov
cmp
or
push
or
push
mov
std
jo
mov
xor
mov
je
jo
loopne
dec
jno
jecxz
add
repnz
dec
pop
and
and
outsl
xchg
cmpsb
in
out
or
in
mov
adc
xor
in
adc
cld
sub
push
test
pop
fisubrl
pop
and
adc
xor
inc
je
add
mov
xchg
test
sub
adc
fldl
adc
and
dec
xor
sbb
sub
adcb
les
sbb
push
clc
mov
lea
pushf
in
cld
icebp
out
or
mov
push
nop
inc
inc
adc
icebp
dec
es
mov
inc
inc
mov
xchg
leave
fcompl
int3
sti
rolb
pop
aaa
xor
xor
cmp
stos
pop
leave
rcl
aas
pop
inc
pop
bound
stos
add
rolb
scas
dec
mov
ret
inc
jle
xor
enter
pop
xor
push
lods
add
fwait
add
and
mov
aas
out
and
and
hlt
add
call
outsl
sbb
lods
push
movsl
jmp
cmp
leave
cmpsl
adc
cmpb
test
dec
cmp
sbbl
inc
cmp
xchg
loopne
dec
scas
sbb
rorb
adc
inc
pop
xor
push
movsb
adc
ret
inc
ja
imul
or
add
popf
test
pop
push
sbb
test
pop
inc
or
inc
stc
sub
inc
adc
aam
push
lret
in
jnp,pn
out
adc
sbb
test
test
test
mov
in
call
sbb
lods
notl
sub
or
cmp
push
imul
lods
lea
xchg
add
pop
mov
popa
test
aam
insl
push
or
adc
aam
dec
aad
icebp
pushf
sub
test
xlat
add
in
xor
mov
xor
sbb
sub
js
icebp
add
add
repnz
insb
loopne
fbstp
inc
clc
add
mov
aas
mov
mov
add
andl
add
pop
push
xor
inc
push
adcl
rolb
push
xchg
mov
sbbb
push
insl
mov
call
rolb
mov
jne
incb
bound
fcompp
and
push
rorb
dec
cwtl
xchg
movsb
sub
mov
mov
lret
xor
icebp
lods
cmp
xchg
xor
addr16
je
cmp
insb
mov
ret
inc
xchg
xor
xor
mov
gs
or
and
xchg
jno
ret
add
mov
cmp
js
or
lret
cwtl
jo
nop
dec
xor
mov
sbb
mov
inc
sahf
das
icebp
and
sub
fs
inc
xchg
mov
jb
cmp
fwait
dec
and
add
push
arpl
sub
ds
dec
adc
pusha
inc
mov
inc
mov
scas
int
mov
xchg
neg
rolb
push
mov
sbb
nop
imul
cmp
xorl
adc
orb
or
mov
insl
ret
inc
add
cmpsb
aam
adc
cmc
rorb
push
jb
pop
and
mov
rolb
leave
xchg
lcall
adc
lods
adc
xor
sub
nop
movsb
mov
dec
enter
adc
pop
repnz
pop
test
loop
push
test
mov
sbbl
fimull
int
loop
push
push
mov
daa
popa
mov
add
adcb
cmp
cmp
mov
xchg
sub
mov
mov
jnp
int3
inc
out
rcrb
xchg
faddl
dec
in
out
lods
xor
test
and
fsubr
addb
sub
mov
sub
or
jecxz
cwtl
jmp
fistl
testl
push
and
add
pop
and
push
pop
movl
outsb
adc
fs
xchg
xchg
out
jae
push
sub
xchg
lret
daa
and
sbb
add
pusha
or
xor
in
xchg
push
fcmovnbe
sub
push
pop
inc
call
popf
leave
int3
or
test
sub
icebp
ds
fimull
lret
incl
rolb
fcomp
and
xor
aam
push
or
adc
xchg
cmpb
sbb
jl
shlb
mov
sbb
dec
clc
rcrb
inc
jl
pop
push
or
lret
loope
push
es
xor
and
pushf
sub
iret
mov
push
or
in
mov
push
xchg
mov
add
pop
inc
add
fyl2xp1
mov
push
aaa
inc
pop
jns
addr16
ror
jmp
fldenv
ss
insb
sbb
cmp
xchg
int
jnp
sub
push
cwtl
push
mov
jle
int
ss
add
lods
fsubrs
int3
pop
shrb
orb
clc
jnp
mov
add
adc
mov
rcll
xchg
adc
or
jmp
cmp
rclb
cmpl
test
add
nop
add
into
pop
iret
jnp
in
adc
test
and
push
and
and
addr16
mov
add
push
pop
push
dec
loope
jb
push
cs
pop
jbe
sub
aas
rdpmc
add
vmwrite
in
aad
incl
sub
jmp
bound
and
insb
outsl
arpl
imul
mov
cmpsb
or
sub
popa
arpl
jne
scas
popf
xchg
jb
outsb
je
add
insb
jo
insl
adc
or
rolb
jb
fstpt
je
jb
gs
add
or
outsl
add
add
add
add
jne
les
inc
cs
out
out
pop
and
jb
dec
push
add
add
pusha
pusha
daa
add
aaa
or
mov
add
add
fdivr
push
add
aas
push
add
mov
and
cmp
mov
push
je
and
jae
push
idivl
adc
out
loopne
cmpsl
insl
push
push
or
jae
out
loopne
mov
lret
repz
popa
fstpl
xor
insb
jp
outsl
in
fndisi(8087
or
mov
fsubrp
imul
addr16
and
outsl
pop
rcrb
jmp
jo
mov
in
loopne
dec
lret
stos
insl
sub
push
push
or
pop
imul
fnstsw
inc
push
data16
shll
out
mov
jp
sub
mov
sub
arpl
andb
lahf
popa
push
cmp
jecxz
outsb
inc
arpl
loopne
pop
jnp
jae
daa
dec
jbe
enter
fbstp
outsb
fidivrl
je
adc
sbb
jo
ficomps
jbe
mov
arpl
insl
mov
scas
xor
scas
js
xor
inc
mov
js
sbb
xor
fidivrl
cs
add
das
xor
sub
pop
or
pminub
jg
ds
or
sub
outsl
xchg
lahf
pop
pop
push
sbb
jg
dec
xor
adc
fbstp
adc
adc
push
xor
xor
lods
cmpsb
in
xchg
jb
jne
in
mov
xor
push
bnd
das
pop
jno
jbe
sbb
inc
inc
shrl
ljmp
push
jo
lahf
outsl
aas
push
lods
roll
iret
arpl
sbb
mov
inc
jb
aaa
insl
jno
lahf
cs
imul
add
imul
shll
jnp
sbb
cmpsl
outsl
pop
pop
loopne
subb
das
xchg
mov
daa
mov
pop
in
jno
add
pop
stos
imul
insl
lret
je
scas
cmp
fisubs
adc
jae
subb
pop
pop
jecxz
ret
ja
push
sub
lock
xor
repnz
mov
fs
add
out
js
inc
mov
or
enter
sub
in
xchg
das
in
enter
sub
mov
in
mov
clc
sbb
inc
cmp
ljmp
repnz
enter
js
jns
jp
xchg
jo
cmp
lcall
pusha
dec
aaa
add
mov
test
mov
jp
mov
in
cs
push
push
mov
dec
jb
fcmovne
or
jne
sbb
cmp
mov
loope
cltd
out
xchg
ja
cmp
mov
shll
cmpsl
pop
dec
sbb
push
fwait
cmp
mov
xor
outsb
das
pop
add
and
add
das
das
and
pop
mov
mov
dec
inc
and
sbbl
popa
jmp
je
dec
idivl
stc
lock
aas
dec
inc
lea
sbb
popa
jnp
outsb
clc
ds
daa
outsl
and
pop
pop
dec
and
pop
xor
neg
fsubrs
out
iret
jns
out
shr
arpl
iret
and
mov
push
arpl
pop
cmpsl
imul
jp
jae
push
and
sti
ss
dec
jne
dec
pop
mov
push
ds
test
iret
mov
pop
ret
sbb
jg
cmp
cmp
sub
fs
dec
and
push
das
das
jns
push
dec
push
arpl
arpl
bound
dec
outsl
jbe
pop
mov
testl
jo
sub
addr16
push
dec
jne
xchg
outsb
xchg
inc
jo
cmpl
jb
jg
bound
out
mov
adc
pushf
jnp
cmp
xchg
fnsave
out
addr16
popa
je
jb
xor
std
adc
jae
push
gs
sbb
insl
mov
outsb
and
jbe
out
pop
dec
inc
aas
add
inc
arpl
jnp
mov
dec
add
insb
jae
push
push
mov
push
popa
insb
jne
inc
inc
sbb
dec
xor
mov
ljmp
sub
sub
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
pop
sub
dec
dec
dec
dec
dec
dec
cs
push
mov
pop
adcl
shl
mov
arpl
addr16
insl
outsb
outsl
jo
add
hlt
mov
jns
jnp
jge
jg
adc
incl
dec
popw
loopne
pop
ds
jnp
add
orb
sar
lret
jno
std
aas
incl
icebp
pusha
inc
mov
clc
ret
movsl
add
xorl
outsl
shrb
outsl
imul
inc
pushw
outsl
das
cmp
std
jae
push
add
jo
xor
popa
js
addl
jne
pop
dec
pop
sbb
out
sbb
adc
je
sub
sbb
adc
adc
add
add
add
add
and
dec
movsb
jo
push
pop
push
add
xor
mov
addr16
hlt
and
add
pusha
push
mov
pop
js
or
cmp
add
sbb
mov
addb
add
xchg
mulb
ret
add
orb
jge
push
cmpb
push
and
sub
jb
mov
out
adc
push
jo
add
jg
dec
dec
add
push
push
outsb
imul
outsb
and
push
xor
add
pop
insl
sub
test
cli
and
test
rorb
add
in
in
lea
mov
nop
xchg
and
mov
add
xchg
ja
mov
sahf
or
or
shr
hlt
int3
shrb
pop
popf
dec
out
add
aad
mov
lods
mov
mov
push
sbb
push
pop
sbb
mov
push
inc
sub
dec
inc
pop
dec
test
jge
dec
inc
dec
inc
adc
notl
mov
je
fs
je
rcr
add
dec
dec
bound
je
outsb
data16
mov
insl
xor
ss
out
je
xor
outsl
push
add
push
xchg
daa
pop
push
sti
iret
xchg
lea
mov
outsl
js
push
inc
fstpt
xchg
das
cs
and
insl
jo
jo
and
ficoml
int
dec
xchg
shlb
aaa
insb
les
dec
imul
mov
xor
inc
cmp
dec
inc
jb
cmpsb
and
daa
pop
and
ss
jns
mov
insb
rcrb
arpl
je
and
inc
inc
imul
push
jbe
fisubs
jo
or
jb
and
fldt
je
xchg
pusha
inc
jbe
sbb
push
lahf
fs
adc
mov
lods
jp
ret
es
xchg
pushw
popl
mov
imul
pop
or
jo
sbb
pop
daa
mov
mov
mov
mov
push
outsb
mov
pop
pop
pop
push
push
jae
or
jno
mov
cmp
scas
add
call
push
sub
cmp
gs
mov
adc
jbe
mov
mov
dec
insb
inc
push
push
push
push
dec
testl
fnstenv
repnz
push
pop
or
filds
or
jge
inc
test
ds
jle
jb
shl
subl
inc
call
mov
or
cmp
push
jo
pusha
inc
in
xchg
xor
mov
gs
sbb
mov
stos
mov
or
ljmp
outsl
data16
test
mov
aaa
daa
xchg
mov
sti
cmp
mov
pop
pop
cmp
cmp
cmp
ds
and
sub
or
fst
inc
jl
push
addr16
jle
sahf
imul
add
out
stc
cmp
sub
pop
or
in
mov
push
jb
mov
aaa
and
push
mov
in
mov
xchg
xchg
imul
pop
pop
jne
stos
addr16
push
jbe
jmp
push
add
ss
xor
add
jb
addr16
xor
hlt
dec
sbb
sahf
cmp
pop
sub
popa
loope
mov
sub
iret
sti
or
out
sub
cmp
xor
sahf
int
cmp
adc
out
call
sahf
ja
push
enter
push
sahf
out
sahf
mov
pushf
repz
out
cwtl
xchg
nop
mov
test
cmp
push
jl
rcrl
je
jo
popf
xlat
mov
pusha
aas
pop
push
sahf
out
sahf
push
push
dec
dec
inc
inc
jns
out
cmp
xor
sub
jns
out
adc
add
call
fmul
test
push
cmp
add
call
out
jl
push
dec
inc
rep
sahf
out
adc
cli
cld
in
into
repz
shlb
test
push
int3
stc
xchg
stc
mov
xor
out
fstpl
jg
and
fdivrp
inc
clc
jle
mov
push
aad
ja
add
enter
xchg
sbb
mov
mov
add
and
push
mov
addb
push
sbb
add
and
push
inc
add
loopne
add
add
add
test
pop
mov
add
jnp
outsl
add
in
pop
mov
add
fildll
jle
ud2
or
addl
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
jmp
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
inc
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
std
jmp
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
or
mov
and
mov
stos
test
sub
and
dec
lea
popa
and
mov
outsb
gs
popa
data16
pop
mov
cmpsb
pop
jns
push
xor
movsl
xor
data16
add
in
les
jo
dec
arpl
jne
insl
aas
inc
insb
fs
sbb
mov
cmp
mov
or
lahf
push
outsl
lods
push
setl
gs
xor
push
inc
adc
push
fdivrp
xlat
add
push
xor
push
dec
inc
dec
cmovns
add
jg
inc
inc
das
push
adc
sub
adc
push
mov
inc
call
in
jg
lock
mov
out
xor
jnp
inc
loop
mov
ds
iret
aas
fsubs
pop
adc
clc
lret
sbb
jb
mov
and
adc
dec
scas
jp
and
mov
fstl
mov
and
inc
sahf
jg
cmp
dec
imul
lret
add
inc
mov
cmp
popf
mov
sub
fwait
ss
sbb
jg
inc
pop
jns
ds
xor
incb
int3
dec
dec
xor
cld
decl
out
dec
pushf
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
xchg
jg
pop
and
xchg
lret
sahf
icebp
mov
cld
or
loopne
cmp
xchg
jle
inc
mov
xchg
push
pop
xchg
sub
pop
mov
push
mov
jns
mov
dec
test
shrl
andb
leave
hlt
mov
sahf
xchg
dec
add
les
lods
dec
lock
xor
pop
mov
pop
aas
and
in
repnz
and
push
jle
es
sbb
jne
popa
xor
mov
pushf
subl
sbb
adc
or
pusha
push
jmp
fildl
add
sarb
into
mov
xchg
and
lahf
paddsb
decb
add
dec
xchg
ffree
aaa
and
pop
xchg
mov
das
fwait
imul
ret
es
jae
hlt
adc
lret
out
and
data16
scas
add
sub
out
push
test
sbb
bound
pop
xor
fs
femms
fiadds
jne
sti
or
sbb
mov
jmp
daa
frstor
rcr
daa
je
xorl
mov
add
push
fisttpl
cmp
imul
push
xchg
lret
xchg
push
cmp
fcomi
aad
mov
add
cs
sbb
or
sub
inc
and
jb
ret
arpl
fidivs
jae
insl
jle
xorb
cmpsl
mov
and
cld
push
push
adc
jg
xchg
jo
cmp
repz
mov
push
fsubr
fbstp
out
mov
push
mov
jb
push
mov
jbe
fimull
popa
mov
add
add
mov
pop
ret
jae
sbbb
sti
sbb
sbb
dec
jns
outsb
xlat
cs
js
dec
jg
jg
push
dec
dec
sub
lock
adc
mov
mov
jne
aas
cmpsl
and
mov
inc
or
outsl
and
mov
pop
mov
adc
push
shrl
push
imul
sti
jo
es
es
sti
cmp
divl
cmp
nop
sbb
out
sbb
sub
jmp
inc
sub
insl
ret
dec
mov
rclb
dec
jp
xchg
loope
or
aaa
pop
jecxz
jno
imul
dec
ret
adc
pusha
inc
mov
pop
inc
addr16
daa
fildll
addr16
je
insl
int
inc
and
aas
cmp
insl
aaa
arpl
daa
pop
arpl
add
gs
jne
xor
cmpsl
jo
out
push
lret
xor
addb
cli
pop
fistps
pop
inc
cmp
jbe
mov
add
pop
xorb
imul
add
shrl
xchg
test
fmull
sub
test
daa
ss
push
loopew
scas
or
mov
mov
aas
mov
ret
ds
jecxz
mov
je
jb
push
or
push
mov
push
pop
call
inc
inc
mov
mov
rolb
adcl
or
xor
das
bound
out
jnp
adc
out
inc
push
ja
in
mov
pop
xchg
pop
xor
push
push
mov
dec
stos
ja
push
outsl
push
sub
or
mov
mov
dec
psllw
out
mov
inc
pop
divl
mov
add
dec
xor
dec
imul
call
call
ds
xchg
js
test
push
arpl
push
add
pop
jecxz
test
mov
cmp
jg
xchg
push
sbb
sbb
xor
pop
or
and
jle
pop
push
jnp
aas
ds
inc
mull
jae
push
shl
fiaddl
mov
addr16
lret
and
fidivl
fbstp
jg
bound
dec
outsl
xor
testl
aas
jmp
adc
shlb
inc
addr16
add
aaa
aas
ja
mov
cs
xlat
pop
shr
pop
adc
ja
es
ss
ret
addl
push
inc
jnp
sbb
xchg
jnp
arpl
dec
insb
xchg
ja
in
pop
inc
inc
sbb
sbb
inc
sarl
pusha
imul
inc
ss
mov
and
fdivrl
dec
sbb
jno
push
pop
je
or
cmc
iret
pop
pop
por
scas
adc
pop
sbbl
sub
inc
bound
outsl
mov
andb
lock
mov
cmpsl
xchg
inc
arpl
cmpb
pop
pop
push
jb
inc
jle
inc
cs
or
mov
mov
fadds
jmp
pop
fucomip
mov
imul
sbb
lock
out
mov
lret
sbb
mov
repz
mov
mov
jl
cmp
bnd
ret
aad
jnp
gs
jl
sbb
fwait
jno
jecxz
push
jo
ja
jl
pop
jnp
mov
ret
jmp
es
arpl
cmp
mov
pop
in
pop
pop
ja
outsb
mov
popf
outsb
cs
pop
out
cwtl
dec
lea
shlb
jno
dec
loop
xchg
imul
lret
jl
pushf
add
bound
jns
clc
mov
mov
adc
pop
aaa
aaa
mov
lods
sub
iret
imul
jge
jl
xchg
jl
fdivs
repnz
out
adc
jle
es
flds
xchg
js
nop
and
push
push
pop
pop
incl
outsl
or
stos
push
dec
xchg
add
pop
fstpt
mov
test
clc
pop
daa
mov
pop
push
movb
fs
bound
inc
sub
or
scas
dec
adc
lea
pop
jg
pop
mov
add
mov
outsb
xor
pop
pop
xlat
aad
push
iret
xorl
pop
sbb
divl
push
xchg
insb
mov
test
inc
aas
popa
jbe
add
aaa
mov
pop
sub
jg
test
addr16
xor
aaa
push
pandn
insl
xchg
mov
dec
daa
push
les
or
push
dec
or
push
divl
pop
inc
mov
push
sub
fwait
inc
fwait
ss
xor
out
insl
insl
rolb
pop
inc
inc
inc
push
mov
pop
loopne
imull
mov
and
or
int
xor
inc
push
inc
sbb
fldenv
inc
push
jbe
xchg
int3
inc
or
mov
jg
mov
ds
mov
fimuls
push
or
pop
mov
dec
xor
add
jo
adcb
testb
mov
pop
add
push
inc
lret
dec
or
cmp
shlb
dec
pusha
repz
insl
iret
jg
push
popa
popf
outsl
jle
popf
iret
repz
mov
scas
pop
dec
out
cmp
outsb
dec
sti
ficoms
inc
iret
pop
aaa
dec
and
cmp
inc
ja
lcall
jg
cli
out
ret
and
xorl
mov
mov
mov
aam
es
push
and
arpl
jmp
insl
lret
out
fwait
adc
add
adcl
popa
push
inc
sbb
push
and
outsl
les
loopne
gs
insl
pusha
push
popa
jne
or
jge
or
imul
bound
xor
scas
popa
sbb
pop
cmp
arpl
arpl
sahf
mov
mov
adc
jns
out
aas
outsl
xchg
jns
out
lahf
gs
push
pop
es
dec
out
ss
test
mov
shlb
fwait
pushf
push
xchg
push
lret
ds
cli
sbb
enter
dec
cld
cmp
gs
je
cmp
test
mov
jo
jb
fidivl
add
cmp
ss
mov
into
inc
sbb
and
and
arpl
arpl
xor
cmp
fs
adc
push
loop
jo
loop
or
and
jne
je
ret
adc
decb
mov
imul
sbb
popf
push
fdivs
adc
cmp
jae
movsl
sbb
push
mov
ljmp
divl
fwait
push
cmpsl
adc
pop
push
pop
loop
xchg
scas
ja
inc
push
ja
push
adc
dec
push
ltr
mov
xchg
scas
inc
orl
push
sub
ss
pop
xlat
and
mov
push
push
dec
aam
and
dec
insl
aaa
cmpsl
add
pop
jecxz
lcall
adc
adc
add
cmp
mov
dec
out
add
leave
jbe
ds
pop
push
add
add
mov
iret
add
popf
rclb
or
mov
aad
sbb
cmp
sub
rclb
pop
mov
les
and
fs
bound
and
push
cmp
fiadds
fcmovnu
fbld
inc
and
sarb
pop
or
data16
xor
fiaddl
add
roll
jnp
les
dec
inc
iret
push
sbb
pop
sahf
mov
shll
add
xchg
and
pop
mov
push
imul
inc
jle
add
dec
icebp
dec
outsl
adc
lods
pop
or
fsubrl
pop
repz
scas
subb
sbb
xchg
dec
shll
pop
js
push
fiaddl
mov
das
add
lcall
add
lcall
call
scas
and
mov
cmp
repz
pop
push
popa
add
adc
push
imul
mov
imul
in
add
pop
mov
jp
arpl
sub
add
dec
xor
aaa
pop
bound
shlb
bound
arpl
add
inc
outsl
dec
je
icebp
xchg
jb
fs
les
xchg
int3
js
jbe
jae
cs
js
inc
sahf
iret
mov
fwait
stos
jbe
cmpsb
fsubr
out
add
dec
push
mov
sbb
lret
pushf
fcompl
or
add
mov
add
lahf
xor
adc
jecxz
pop
insl
push
jg
test
xor
jae
adc
inc
or
out
lcall
fiaddl
popa
xchg
addr16
dec
pop
mov
inc
mov
dec
mov
add
stos
call
inc
jg
push
fisubrl
sahf
xor
sbb
repnz
inc
and
out
ss
mov
sub
stos
pminub
jo
icebp
scas
mov
lahf
orb
insl
fwait
ja
nop
lcall
mov
out
popa
insl
sbb
dec
xchg
push
aaa
lahf
push
les
fisubl
push
push
lock
or
xchg
pop
push
sub
test
jb
or
ljmp
outsl
movsl
inc
cwtl
sub
or
mov
cmpsl
push
and
add
cs
and
cmpsl
push
sahf
cmp
shlb
aaa
sbb
je
inc
or
ljmp
nop
sbb
and
pop
in
adc
pop
push
repz
adc
xor
imul
inc
push
imul
pop
pop
xor
jae
sbb
pop
aaa
cmp
mov
pop
dec
shlb
ret
and
popa
int
cmp
xorb
adc
sub
shlb
shrl
pop
ret
shlb
jno
push
in
xchg
cmp
sub
mov
ret
fistl
and
lret
outsl
add
fistpll
ja
add
out
dec
xchg
mov
jnp
mov
lahf
arpl
movsb
insl
adc
jmp
xchg
mov
ds
xlat
mov
pop
sbb
iret
xchg
sub
inc
outsb
cmp
loop
mov
ficomps
fiadds
addb
mov
scas
xchg
push
fsub
push
lods
arpl
mov
pop
xlat
cmp
dec
inc
push
movsl
adc
mov
sub
jnp
jb
xlat
loope
push
outsl
pop
push
ficoms
mov
cmp
inc
test
add
dec
out
mov
ret
sti
xor
pop
shr
je
lahf
aas
xor
push
push
sub
sbb
cmp
pop
inc
outsl
daa
mov
sub
push
mov
cmpsl
sub
pop
mov
test
cmpsl
pop
test
fildll
xchg
je
cmp
int3
sbb
jge
inc
int
rclb
fsubs
pop
int
out
adc
pusha
pop
add
out
cmp
arpl
stos
cs
xchg
clc
and
imull
sbb
sbb
imul
ret
mov
je
push
cwtl
or
mov
js
xor
sub
in
sbb
xor
das
es
lds
inc
dec
aaa
inc
mov
add
add
das
add
ret
sbb
xlat
adc
fsubs
test
sbb
xor
popf
outsl
push
movq
lcall
pop
pop
inc
sahf
inc
rcll
dec
das
movsb
add
rol
insl
scas
je
cmp
lahf
fsubrs
mov
xchg
jmp
les
mov
je
push
sti
xor
add
sbb
mov
cmp
push
xlat
dec
mov
push
mov
mov
xorl
adc
cmp
arpl
inc
mov
and
and
xor
cmp
arpl
or
inc
lcall
xchg
out
and
out
addr16
pop
push
ret
lods
pusha
scas
mov
sbb
les
dec
adc
es
mov
add
and
out
test
scas
push
push
jl
mov
pop
minps
xor
or
lahf
xorl
and
and
jl
mov
push
pop
mov
dec
push
mov
stos
push
scas
inc
mov
jp
add
mull
cmp
cmp
adc
cmp
push
das
outsl
iret
jp
pop
ja
dec
pop
dec
add
cmpsb
or
rcll
adc
fistpl
add
mov
xchg
scas
rol
fistpll
cmp
out
sbb
aaa
ja
daa
push
movntq
insl
and
in
aad
clc
int
jns
dec
arpl
stc
sub
test
dec
pop
cld
insb
sahf
int
cs
push
add
cmp
fnstcw
push
push
pop
mov
jns
fwait
jmp
mov
test
test
or
mov
and
fwait
and
and
es
sahf
pop
pop
bound
xchg
mov
push
jno
pushl
mov
jne
pop
dec
or
icebp
jbe
cmp
les
popa
xor
loope
mov
jo
xchg
add
jae
push
sub
push
cmovg
mov
add
and
loop
sahf
xchg
add
das
add
pop
cmp
jne
pop
jmp
lods
fdivs
add
sti
scas
daa
cmp
cvtps2pd
pop
aas
mov
mov
mov
movsb
lret
push
sub
clc
outsl
out
jns
fidivl
jnp
test
sti
push
xor
out
sbb
cmpsl
iret
or
bound
mov
scas
aas
aad
and
xor
mov
or
mov
pop
aaa
push
sar
pop
lods
ret
pop
adc
adc
xlat
imul
jp
das
daa
and
mov
mov
aaa
jbe
push
mov
push
lods
jae
push
mov
jecxz
cmp
lahf
les
imul
cmp
sti
jnp
jge
popf
pusha
lods
mov
mov
sub
push
xor
and
fs
icebp
pop
jno
jecxz
das
outsb
sbb
aad
daa
daa
aaa
cmp
sbb
push
insl
xor
add
sbb
dec
sbb
test
inc
cmp
cmp
fisttpl
push
insl
arpl
notl
bound
or
pop
pop
mov
or
loope
fcoml
and
mov
xor
xor
dec
scas
xchg
notl
movb
push
jb
pushf
scas
in
pushf
scas
xchg
push
leave
dec
scas
cld
lods
in
mov
push
leave
test
cmp
cmpsl
xchg
stos
in
sbb
enter
and
in
stos
aam
push
dec
scas
xor
mov
pop
and
xchg
inc
in
cmp
push
push
stos
pop
cmpsb
clc
inc
sub
push
stos
fs
ljmp
xchg
movsl
movsl
add
movsb
mov
push
jb
pusha
fildll
xchg
stos
mov
cmp
int3
push
leave
push
aad
mov
mov
inc
mov
cltd
ljmp
stos
mov
stos
imul
stos
in
sahf
cwtl
fildll
dec
popf
popf
test
rorl
and
sub
xchg
adc
int3
pop
and
mov
inc
cs
outsl
xor
pop
pop
rorb
dec
mov
xchg
ret
pop
dec
fildl
sti
inc
mov
fistl
mov
or
dec
inc
inc
sbb
fsubs
aaa
dec
aas
adc
das
inc
xlat
dec
pop
dec
sub
xor
jo
xlat
push
aas
pop
sub
mov
xchg
outsb
xchg
nop
arpl
imul
adc
aas
inc
dec
and
shl
fildll
or
xchg
pusha
aam
ss
not
adc
push
cmpsl
inc
or
pusha
shlb
mov
adc
dec
cmove
pusha
push
xchg
jae
adcl
push
inc
sub
lcall
movsl
mov
dec
xor
push
das
mov
outsl
lods
add
mov
int
add
pop
push
scas
addr16
xor
adc
neg
xor
and
inc
push
mov
scas
push
inc
rcrl
lahf
adc
inc
sub
add
pop
lea
add
push
push
test
loope
nop
cmp
pop
and
push
incl
nop
pusha
das
out
aaa
or
iret
xchg
scas
pusha
add
movl
mov
aaa
outsl
lods
and
lea
mov
pop
adc
gs
add
out
push
fwait
aas
outsl
or
sar
addr16
jg
aaa
pusha
rcrb
out
mov
pop
adc
pusha
scas
pop
dec
inc
mov
iret
inc
daa
adc
ficoms
dec
rcll
sbb
loop
cmp
push
push
dec
cld
js
outsl
outsl
jbe
jno
push
dec
inc
xchg
push
cmp
jae
add
ja
lret
xlat
sub
or
add
dec
arpl
popa
xor
dec
pop
lea
inc
pop
add
add
sti
push
jnp
pop
or
pop
in
mov
movhps
ficoms
out
sbb
add
inc
es
popa
and
popl
xor
fstpt
mov
cmp
shl
pop
jne
addr16
bound
fsubrl
je
or
jae
je
push
cs
sub
cmp
cmp
dec
imul
aam
cmpsl
jno
mov
mov
add
les
jae
ss
dec
fiaddl
imul
dec
js
mov
adc
arpl
in
and
cmp
add
iret
jno
or
and
mov
aad
arpl
xchg
or
jae
jl
adc
push
or
cmp
repz
adc
sbb
cmp
xor
mov
sarl
push
cltd
fwait
int
stc
or
xchg
add
pop
push
aam
pop
dec
sub
add
mov
jns
and
sub
xor
inc
jnp
fldcw
mov
mov
mov
add
add
shrb
ss
int
ret
sub
shrb
xchg
pop
adc
insb
push
adc
pop
add
mov
sbb
lret
ltr
mov
shlb
stc
das
es
inc
mov
data16
popf
add
inc
push
xor
pop
addr16
jo
test
push
push
cmp
repz
lcall
sbbb
pop
push
fisubl
inc
jle
xchg
dec
pop
dec
in
xor
dec
das
xchg
sti
rorb
and
bound
pop
jb
and
lods
adc
inc
xchg
incb
inc
fimull
bound
imul
pop
pop
rolb
pop
push
ret
inc
pop
inc
pusha
adc
movsl
jno
pop
cvttps2pi
lods
test
inc
das
je
adc
fstl
sarb
aam
xor
dec
cmovno
das
or
cltd
ss
cmp
adc
lcall
pusha
adc
mov
test
mov
ficoms
cwtl
add
add
pop
pop
dec
and
je
mov
mov
push
arpl
aam
iret
cmp
xor
aaa
ffreep
mov
push
or
mov
ja
push
shlb
mov
ficompl
push
addl
movl
je
mov
sub
out
or
cmp
push
cs
cmp
out
xor
jnp
and
out
es
add
das
lret
insl
xchg
pop
loopnew
loop
xchg
cmp
fidivrl
xor
jae
fs
out
jns
push
dec
sub
into
xor
pop
sub
pop
xlat
dec
shlb
push
lret
jnp
or
inc
or
xlat
dec
sar
js
xor
inc
cmp
mov
inc
outsl
sub
aaa
jbe
dec
or
inc
push
loop
imul
jb
ss
push
dec
mov
bound
xor
xor
sarl
xor
cs
lret
mov
outsb
jb
loop
push
jo
push
push
cmpsb
xchg
ja
retw
mov
mov
mov
mov
lret
shlb
mov
sbb
cs
fs
inc
and
lock
cmp
add
into
sti
fidivrl
mov
pop
js
inc
clc
pop
mov
and
imul
pop
pop
jae
fidivrs
mov
push
es
ss
outsb
pop
push
ret
div
mov
jb
das
inc
pop
arpl
out
dec
es
das
add
out
sti
push
fisubs
data16
inc
pop
push
sysexit
mov
iret
jns
dec
cs
sahf
push
outsl
js
dec
gs
push
mov
mov
push
scas
push
insl
mov
fidivrl
push
inc
ja,pn
xor
push
jp,pt
ret
repz
push
fimull
mov
jg
dec
das
xor
mov
pop
outsl
pop
sarl
js
push
into
roll
outsl
enter
imul
sbb
pop
push
imul
in
xchg
dec
sub
arpl
movb
daa
xchg
mov
add
lods
inc
pop
lahf
loope
es
jg
mov
cmp
je
pushf
jle
pop
push
adc
adc
sub
mov
add
psrld
imul
mov
xchg
fst
dec
pop
mov
push
orb
aad
rclb
xchg
push
and
mov
loop
jmp
dec
pop
mov
xor
adc
movsb
dec
lret
bound
xchg
ja
pusha
push
adc
std
ret
inc
add
mov
arpl
lock
lea
cwtl
adc
or
fsubrs
mov
lret
mov
and
add
pop
xor
pop
dec
daa
fimull
jmp
push
sub
and
dec
mov
dec
dec
or
xor
sbb
mov
test
mov
ret
cmp
mov
or
push
xor
xchg
test
in
mov
pop
xor
mov
add
dec
into
insb
outsl
popa
fs
outsl
insb
pusha
adc
addps
rolb
push
sbbl
mov
inc
ret
mov
pop
push
dec
mov
xlat
lcall
jmp
popa
cs
add
data16
aam
dec
outsl
addr16
sbb
push
xor
jo
leave
outsl
add
data16
jmp
jg
ja
aam
cmp
push
outsb
jno
pop
push
xor
or
mov
bound
mov
repnz
xchg
add
mov
mov
pop
jo
imul
fs
arpl
sub
jle
pop
pop
ja
xor
add
fnsave
xor
push
adc
movb
mov
add
jnp
arpl
or
test
les
jmp
adc
cs
mov
fwait
add
jae
fdivs
sbb
lret
add
outsl
adcb
test
or
jnp
push
pop
outsl
cld
shlb
cli
fisubrs
lahf
lcall
aam
in
cmc
fildll
push
pop
adc
outsl
xchg
add
push
mov
sub
mov
mov
imul
jp
sbb
fistl
and
ret
push
das
xchg
xchg
stos
arpl
mov
inc
clc
jle
pop
popa
fldt
push
xor
repz
dec
lods
sbb
mov
push
lods
push
adcl
mov
xchg
sbb
mov
inc
pusha
pop
pop
ds
jns
mov
out
sub
ret
add
sub
xchg
leave
arpl
and
jbe
inc
sbb
jl
insl
lods
outsl
call
inc
insl
push
repz
or
xor
insb
aam
sub
push
fs
push
inc
inc
push
mov
sbb
sub
ljmp
xorb
out
push
sarb
add
imul
data16
movsl
ss
inc
aas
push
lock
mull
fisubrl
lahf
jo
add
sub
mov
adc
add
test
int3
add
or
data16
add
mov
inc
outsb
adc
leave
push
lret
mov
dec
mov
add
test
push
ss
nop
and
mov
mov
idivb
add
sbb
ljmp
mov
decl
xchg
mov
mov
lods
pop
dec
movsl
enter
push
push
mov
inc
push
insl
ss
adc
lcall
or
mov
sub
sub
test
std
mov
mov
sbb
mov
ds
pop
sbb
lods
sub
and
jle
jo
fsubs
pop
ljmp
sbb
mov
pop
dec
xchg
inc
lock
mov
pop
add
pop
mov
jg
pop
push
mov
movsb
or
add
aaa
push
dec
sub
and
pop
xchg
and
add
adc
or
lods
inc
and
cmp
jb
xchg
add
dec
pop
and
in
das
cltd
dec
cmp
sub
xchg
dec
cs
sbb
jl
and
jns
cld
xor
xor
cmp
pushf
int3
inc
mov
xchg
mov
outsl
or
cmp
repnz
rcrb
xorb
lahf
adc
stos
xchg
out
out
inc
shrb
pop
dec
xchg
aaa
cmpsl
shr
sbbl
dec
sub
xorl
test
into
pop
fwait
mov
pop
jecxz
stos
pop
shl
jnp
cmp
idivl
ficompl
cmp
sub
adc
inc
push
mov
inc
xlat
or
addr16
mov
icebp
mov
push
xchg
adc
aas
imul
add
and
nop
stos
adc
inc
dec
jp
and
xchg
imul
outsl
jne
cmp
popa
outsb
imul
add
inc
dec
mov
dec
dec
pop
cmp
add
scas
aas
pop
shlb
daa
jnp
je
dec
aas
aaa
push
lahf
nop
mov
fidivrl
aas
jae
push
mov
pop
mov
adc
adc
cmp
dec
nop
pusha
insl
xor
push
scas
mov
fidivl
aaa
test
iret
test
mov
xor
or
addr16
cmp
dec
out
pop
fisubs
mov
push
xlat
rclb
sarl
push
jne
fnsave
xor
add
mov
mov
add
mov
and
shlb
out
xor
pop
jb
pop
insl
mov
or
pop
pop
outsb
repz
and
adc
push
push
pop
jmp
mov
jmp
test
add
add
jno
jbe
adc
outsl
dec
xor
cmp
rorb
aaa
sets
dec
inc
arpl
jl
cs
mov
fnstenv
or
push
cwtl
es
hlt
jns
and
xor
orb
addr16
mov
pop
pushf
outsl
inc
loopne
mov
fiadds
inc
fcoml
test
leave
stc
pushl
or
repz
mov
xchg
int3
mov
ds
inc
fiadds
add
push
insl
mov
sahf
scas
mov
and
mov
adc
add
jbe
aaa
pop
lock
push
and
push
mov
mov
push
push
cmp
nop
xchg
in
repz
sar
es
cmpsb
call
xchg
imul
in
push
jl
mov
push
push
xlat
cmpsb
sahf
mov
jnp
imul
push
push
ss
sti
into
sub
sub
cs
icebp
sahf
out
jp
mov
int
pop
inc
sub
andl
push
outsb
loopne
xchg
mov
lret
jnp
push
fisubrl
push
call
in
aas
and
push
jb
movb
iret
out
xchg
pop
mov
push
mov
fidivs
pop
aaa
push
dec
fistpl
iret
cmpsl
inc
inc
enter
testb
cmc
cmp
push
or
sahf
xchg
cld
jno
aaa
sub
inc
push
dec
int3
out
out
push
js
shrb
outsb
ss
out
iret
inc
push
mov
push
cmp
insb
outsb
jmp
xchg
push
bound
push
cmp
dec
repnz
movb
mov
outsl
jns
rorl
das
inc
jl
push
mov
repz
mov
or
out
sahf
int
xor
inc
popa
xchg
push
repz
ss
sahf
push
push
jbe
insb
sahf
outsl
and
xchg
cmp
mov
mov
pop
iret
out
sahf
jl
shr
adc
rep
fistpll
sahf
cmp
sbb
repz
push
outsb
mov
jns
cmp
pop
inc
mov
add
iret
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
jmp
push
mov
xor
adc
mov
pop
in
pop
mov
clc
pop
mov
idivb
mov
pop
int3
push
and
pop
sbb
pop
repnz
ds
adc
or
adc
iret
pusha
or
fadd
lea
das
add
pop
adc
pop
or
inc
in
push
sub
leave
cld
inc
or
jno
cmpb
mov
leave
sarb
outsb
jp
xor
cmpl
js
xor
int3
inc
adc
insl
seto
in
cmp
xor
push
inc
mov
mov
arpl
pop
sub
imul
push
xor
add
xchg
mov
pop
push
dec
loopne
or
les
popa
je
test
add
jnp
jmp
push
pop
or
aam
cmp
mov
movsb
sub
pop
push
ficoml
pop
fs
mov
jae
stc
push
les
jb
push
dec
push
add
or
inc
rorl
imul
inc
mov
stos
mov
pop
mov
pop
addr16
push
dec
rcrl
and
or
pop
outsl
xlat
popf
hlt
dec
shlb
push
fidivrl
jl
jo
inc
sub
mov
les
pop
pop
inc
jecxz
inc
shl
outsb
insl
xchg
xor
cs
lret
in
mov
pop
xchg
push
sbb
aaa
fs
out
jb
lea
xor
scas
jne
sub
lods
or
sub
xor
pop
add
outsb
sysexit
ja
mov
bswap
inc
mov
jg
mov
add
jbe
jo
xor
mov
xchg
push
cli
jle
sbb
outsb
push
jnp
or
inc
rorb
xchg
push
das
aaa
inc
inc
pusha
sub
lahf
lock
dec
enter
or
lods
mov
adc
or
pop
pop
push
mov
adc
xor
repnz
sbb
and
fisubrl
aas
sbb
iret
inc
xchg
iret
mov
sbb
inc
addr16
xor
add
gs
ljmp
frstor
inc
out
aam
fisubrs
cmpsl
je
rol
xchg
xor
pop
xchg
push
mov
fmuls
xor
fisttps
test
jae
fs
adc
sbb
das
decl
psubq
test
mov
ja
jo
jno
insl
dec
xlat
das
aas
and
fcomi
push
pop
adc
mov
sub
pop
pop
mov
jbe
push
mov
daa
mov
rcl
outsl
aaa
imul
xchg
das
testl
mov
lock
jb
das
cmpsb
pusha
mov
pop
sbb
insb
sub
das
pop
pop
insb
sbb
jne
setbe
add
mov
pop
pop
sbb
push
jecxz
jo
add
pop
jmp
lods
add
and
arpl
out
jbe
inc
mov
inc
pusha
pop
push
out
inc
insb
or
xchg
aas
add
stos
sbb
push
push
push
sub
aas
rcl
loopne
repz
xchg
push
push
test
sbb
aas
xor
cmpsb
push
arpl
ret
add
roll
aas
mov
sbb
add
jbe
adc
xlat
orb
inc
and
outsl
jmp
subb
dec
imul
cli
jg
mov
inc
inc
push
inc
xchg
sbb
repnz
cli
cmp
dec
push
xorl
popl
pop
or
scas
in
lods
mov
jno
mov
dec
inc
mov
psrld
bound
sub
pop
dec
mov
inc
mov
clc
les
xchg
inc
pop
lahf
mov
xor
lock
out
dec
add
shlb
xlat
or
mov
into
shlb
inc
iret
pop
pop
pop
test
jno
lret
push
aaa
adc
jg
iret
or
pop
and
out
mov
adc
and
or
or
shr
jbe
es
insl
jo
je
add
addr16
aas
jo
jae
daa
pop
jno
outsl
xor
cmp
es
jg
mov
add
pop
pop
jg
inc
dec
sub
cmpsb
jns
je
loope
sub
jne
or
lcall
mov
pop
aas
adc
out
test
mov
mov
jae
mov
xchg
mov
mov
dec
dec
inc
pusha
rcrl
mov
icebp
dec
inc
push
punpckhwd
arpl
dec
outsb
or
test
gs
lods
mov
sti
inc
rolb
das
mov
ret
push
divl
cmpsl
pop
inc
dec
adc
and
movsb
push
outsb
loope
cmovns
inc
mov
test
adc
test
jmp
into
dec
inc
or
push
xchg
push
and
pop
dec
sub
jo
das
cmpsl
test
cli
push
stos
outsl
fistps
insl
push
push
addr16
hlt
push
push
adc
aam
jns
jb
jo
add
mov
arpl
mov
inc
mov
mov
outsl
outsb
or
aaa
aad
or
inc
insb
enter
mov
dec
daa
lahf
lret
pusha
jecxz
pop
cmpsb
jb
fdivs
push
mov
push
pop
add
push
mov
cmpsl
pop
pop
outsl
inc
push
dec
inc
dec
push
xchg
add
inc
pop
leave
xor
pop
mov
fiadds
jg
ret
mov
add
pop
sub
pop
add
xor
push
add
call
sbb
insb
jnp
and
loop
test
pop
outsl
or
xor
das
ds
das
sbb
out
dec
push
adc
fistps
push
and
push
pop
inc
mov
inc
push
inc
pop
and
or
aas
js
insb
cwtl
dec
mov
pop
push
or
add
or
imul
pop
xor
nop
insb
pop
gs
lea
loopne
xor
popw
push
add
dec
aaa
push
addr16
bound
push
mov
adc
add
push
adc
mov
stc
mov
sbb
pop
rorl
fdivs
sbb
jns
pop
sub
sbb
int3
pop
sbb
lahf
fidivs
jbe
push
lret
push
ds
jnp
fstps
sbb
subb
mov
pop
rcr
ja
add
loopne
into
xchg
add
and
clc
shll
add
pop
outsl
add
mov
adc
bound
outsl
xlat
icebp
mov
or
cmpsl
push
or
incl
int3
and
pop
xchg
jmp
out
nop
fsts
and
xchg
or
jnp
cmp
or
test
xchg
jb
fildl
adc
ja
out
push
imul
inc
outsl
arpl
popa
push
testb
outsl
and
and
arpl
mov
into
sub
je
push
inc
fsubrl
xchg
je
and
je
mov
popa
stos
orl
nop
dec
cs
inc
fcompl
and
xor
and
mov
jo
mov
dec
inc
dec
sbb
xor
and
push
push
pop
jbe
add
outsl
fs
gs
jo
or
mov
mov
push
andl
jne
imul
das
dec
pop
adc
add
or
addr16
and
push
mov
pop
gs
inc
and
adc
push
loope
pop
inc
popa
imul
xor
aaa
sbb
outsl
jo
popa
imul
xor
gs
mov
cmp
orb
inc
or
inc
xadd
pushf
cmp
sti
sbb
inc
cmovo
fcmovnb
adc
cmpb
aas
nop
jo
wrmsr
xchg
pop
pavgb
or
push
scas
sti
inc
roll
cmovne
jecxz
bound
push
xorb
add
push
sbbb
pop
mov
pushf
sbb
mov
in
loope
insl
add
mov
es
inc
ss
cltd
insb
hlt
push
cld
push
sbb
add
in
pop
xchg
cmp
fisubl
aaa
sahf
dec
incl
push
daa
xchg
les
xorb
daa
xchg
mov
or
xchg
xchg
mov
pop
daa
xchg
outsl
call
int
and
and
aam
pop
jnp
add
fsubrl
shl
inc
test
pop
xchg
cmp
cmp
insl
ss
dec
mov
imul
jbe
or
enter
mov
sbb
mov
outsl
xchg
ret
aad
jmp
or
lock
pop
insb
andb
push
push
jb
pop
fsubl
pop
xchg
and
mov
xchg
cwtl
push
movsb
cwtl
rolb
xchg
test
xor
and
aam
mov
and
and
or
fidivrl
js
sahf
or
xchg
movsb
insb
jl
inc
cs
dec
movsb
insb
movsb
or
out
mov
inc
scas
xorb
fs
add
add
andb
fs
daa
outsl
or
daa
mov
fsts
out
inc
sahf
mov
push
xchg
movsb
xchg
mov
or
and
mov
mov
push
add
idivb
lcall
pop
enter
xor
or
mov
mov
mov
adc
outsl
das
scas
dec
and
pop
repnz
sub
lock
cld
xor
ss
add
in
aaa
adc
fwait
daa
dec
jo
pop
mov
negl
inc
data16
or
mov
add
lahf
inc
fisubrs
rorb
out
call
nop
int
mov
insl
in
push
xor
addr16
fimuls
push
pushf
jo
jl
or
jae
iret
add
enter
les
daa
lods
fimuls
jns
cltd
and
popf
add
inc
in
add
jnp
xchg
cld
popf
sub
sarl
add
or
xor
jo
je
rol
test
mov
pop
popf
int3
push
roll
inc
dec
add
mov
jb
ja
sbb
sub
rolb
lahf
lcall
insb
jl
lahf
or
in
xor
or
inc
sahf
mov
mov
lahf
pop
and
sti
mov
iret
mov
lahf
pop
insb
dec
xor
xlat
ja
enter
mov
pop
repnz
iret
test
in
pop
repnz
fistpl
test
les
mov
bound
pop
pop
cmpb
out
sahf
cmp
add
imul
clc
xchg
mov
stos
or
mov
cmpsl
mov
test
mov
repnz
jg
mov
mov
lods
push
cmpsl
mov
cmp
jb
in
in
inc
sahf
int
mov
popf
nop
or
pushf
and
cmpsl
sub
dec
fisubrs
in
push
cmpsl
jg
dec
fnstcw
repnz
nop
or
mov
lock
enter
ja
jp
mov
inc
push
sub
lahf
mov
iret
sub
jb
pop
enter
iret
test
clc
aam
hlt
enter
clc
aam
test
and
and
xor
inc
mov
jnp
lahf
dec
lahf
ja
test
lahf
push
je
xchg
enter
push
je
test
aam
call
orps
cmpsl
les
out
test
sbb
hlt
push
cmp
push
cmpsl
test
mov
cmpsl
loopne
xor
iret
jl
addr16
cmpsl
nop
out
pop
insb
sahf
adc
test
shl
addr16
cmpsl
mov
nop
or
inc
cmpsb
adc
xor
push
cmp
iret
mov
shll
testb
cmpsb
js
mov
sub
ja
movsb
adc
enter
es
dec
push
add
out
cmpsl
or
sbb
xor
push
cmpsl
jg
pop
jmp
cmpsl
lahf
jg
cmpsl
jo
jb
sub
aas
push
cmpsl
pusha
iret
test
pop
mov
fcomps
adc
daa
lds
test
adc
jnp
sub
ja
rcrb
enter
rcrb
jae
lock
test
lea
mov
add
test
and
or
dec
add
cld
dec
jbe
inc
mov
pop
jo
mov
inc
pusha
push
inc
jg
stos
pop
add
js
inc
mov
add
inc
ja
inc
aaa
and
mov
pop
adc
push
fisttpll
fiadds
lahf
push
sub
inc
ja
add
mov
lock
inc
movsb
mov
push
mov
mov
inc
mov
push
clc
lahf
dec
add
call
test
push
pop
call
mov
inc
inc
jg
jo
pop
dec
sbb
sahf
pushf
jo
dec
dec
adc
inc
cwtl
cwtl
adc
jns
push
pushf
add
push
inc
mov
int3
jbe
add
inc
xlat
and
scas
mov
addb
ret
nop
movsb
iret
mov
push
xorb
xchg
ss
sahf
in
fwait
or
lods
and
sarb
lods
xor
dec
das
dec
dec
adc
push
inc
jg
insl
adc
js
sahf
mov
pusha
and
cs
inc
mov
sahf
fsubr
iret
push
shrb
ja
adc
inc
scas
sub
in
inc
mov
fimull
lahf
mov
inc
ljmp
pop
enter
add
test
rcl
inc
add
pop
xor
jb
ja
scas
and
xor
add
lahf
mov
and
test
mov
pop
enter
mov
test
rcl
fisubrs
pop
mov
and
lahf
mov
push
and
and
push
lahf
mov
in
pusha
jo
lahf
and
test
mov
mov
inc
push
pop
jb
je
notl
bound
mov
xchg
je
dec
fimull
outsl
aas
data16
jns
push
outsb
pushl
push
jbe
pop
mov
orb
out
js
sbb
add
pop
clc
data16
mov
push
and
inc
xchg
outsl
add
adc
addr16
mov
mov
add
jns
add
jo
test
sahf
or
aam
mov
add
or
mov
aas
sahf
mov
aad
addr16
mov
popf
or
mov
push
pushf
push
mov
xchg
arpl
cmpb
mov
sbb
daa
mov
sahf
out
es
enter
js
adc
mov
scas
movsb
or
and
dec
pop
pop
outsb
insb
popw
and
dec
dec
dec
xchg
inc
sahf
sbb
data16
lods
rorl
pop
in
movsl
and
xchg
sbb
mov
push
adc
mov
addr16
addb
pop
out
arpl
mov
jb
xchg
int
clc
mov
dec
inc
push
jb
push
inc
cmp
sub
and
add
xor
push
scas
push
fwait
negl
mov
push
or
lock
fnstcw
les
ss
les
iret
sti
out
es
pop
mov
mov
jns
pusha
inc
xchg
iret
popf
mov
ds
mov
fs
sub
int
jns
mov
loopne
cmp
jo
scas
fsubs
mov
or
cmp
xchg
mov
mov
xchg
inc
iret
jo
inc
add
int
test
stos
dec
add
pop
mov
mov
add
mov
pop
pusha
push
hlt
js
out
add
sbb
add
jle
push
arpl
in
pusha
and
ja
jb
pop
push
xchg
dec
or
push
outsl
enter
vmread
or
add
mov
pushf
dec
mov
add
inc
xchg
xchg
outsb
add
jb
fwait
or
mov
add
enter
in
and
pushf
outsl
cmp
cmp
or
mov
or
aam
scas
add
enter
inc
jo
outsl
jl
xor
movsb
ret
xchg
cld
fbstp
aam
pop
jp
aas
aaa
or
push
push
pushf
fs
sub
and
scas
add
outsb
nop
out
testl
xor
dec
dec
xor
mov
adc
cmp
mov
outsl
sub
sarb
add
mov
bnd
mov
jmp
aaa
mov
mov
or
repz
fcompl
mov
mov
and
jle
lods
in
add
mov
mov
scas
sbb
ja
push
sbb
popf
rolb
out
ja
cmp
outsl
add
add
or
and
outsl
and
dec
js
mov
mov
mov
nop
outsl
leave
mov
test
dec
and
aad
cmp
sub
xchg
cs
jp
add
fcom
cmp
mov
mulb
nop
out
jl
mov
inc
testb
mov
push
pop
leave
in
adc
add
lods
in
movl
jnp
iret
pop
sahf
ror
fcomps
xchg
jg
dec
and
pop
cmp
and
scas
clc
add
dec
aaa
mov
add
sbb
mov
lds
test
sar
test
and
nop
ja
scas
cmp
mov
xchg
push
out
and
add
xchg
mov
movsb
jbe
rcrl
or
int
pop
shll
hlt
push
lds
cmp
xchg
sbb
ret
push
rcr
xchg
fmuls
movsbl
mov
js
test
fcoml
enter
xchg
or
dec
stos
dec
or
mov
ret
jne
daa
xlat
or
sbb
lds
add
daa
or
push
mov
pop
ret
rorb
pop
ret
and
inc
outsl
and
and
dec
ss
add
insb
add
addl
jnp
pusha
push
call
inc
data16
aaa
aad
push
bnd
addr16
rolb
ror
aaa
outsb
fsubl
push
outsl
push
cmpsb
mov
sub
or
and
xor
add
nop
testb
jmp
movsb
mov
jbe
daa
in
cmp
jg
lock
xchg
cmpl
nop
sbb
mov
nop
push
pushf
push
mov
filds
aaa
pop
int3
pop
pop
cmpsl
or
clc
aaa
nop
imul
push
sub
or
add
subb
push
sbbb
xchg
xchg
and
mov
shll
addr16
lahf
iret
and
nop
and
daa
out
dec
sub
es
sbb
add
call
aas
sbb
sub
movsb
push
push
push
idivl
mov
enter
cmp
add
les
xchg
or
je
push
or
aaa
or
push
xchg
es
pop
outsl
in
lods
add
or
mov
sub
movsb
xchg
xchg
cmp
xchg
xor
sub
add
test
mov
aaa
enter
xor
enter
or
mov
pop
scas
add
sub
or
adc
in
sub
sahf
andb
and
mov
mov
or
add
dec
enter
sbb
and
xor
inc
xor
push
cmp
das
addr16
and
call
sub
mov
adc
mov
inc
xchg
addr16
xchg
icebp
dec
lret
dec
idivl
shll
xchg
insb
pop
and
xchg
hlt
lret
add
es
add
test
ja
adc
lret
inc
push
push
aaa
xchg
xchg
inc
test
in
nop
out
adcb
mov
sahf
mov
in
mov
lea
int3
dec
xor
xchg
inc
ja
jno
insl
outsl
xchg
hlt
pushl
pop
rolb
mov
push
mov
xchg
xchg
lock
pop
lcall
shrb
adc
jl
out
fs
lret
stc
sbb
repz
roll
mov
sahf
out
jo
pop
mov
pop
jno
push
mov
shlb
jb
jge
cmp
repz
add
dec
jne
imul
je
jb
cmp
repz
es
jbe,pn
mov
ja
cmpsl
ret
cmp
repz
mov
add
jns
cmpsl
xor
xchg
mov
call
mov
ds
jnp
push
dec
fs
cmp
ds
fsin
sub
mov
enter
mov
stc
cmp
repz
jle
lods
loope
jg
jns
cmpsl
sub
cmp
add
inc
dec
repz
orl
cmp
sub
iret
sarl
cs
cmp
out
out
xchg
lret
adc
repz
jmp
mov
or
mov
mov
in
mov
mov
xchg
roll
cmpl
jns
iret
repz
lret
fs
cmp
out
sub
sarl
ds
out
lcall
mov
hlt
iret
xchg
inc
xchg
scas
out
stc
cmp
cs
outsb
stos
cs
push
out
jl
jno
adc
repz
and
lcall
aam
push
fwait
sbbl
loope
iret
sarl
push
lahf
rclb
imul
push
iret
sarl
in
mov
sarl
out
mov
sarl
aam
movsb
lods
filds
ret
jns
movsl
insl
mov
incb
cmpsl
stc
cmp
pop
shl
cmpsl
iret
sarl
call
in
out
ds
test
ds
sarl
jno
jmp
ds
repz
jecxz
lcall
jns
scas
lcall
inc
cltd
hlt
xor
subl
fwait
iret
rep
rorb
mov
mov
jge
cmpsl
stc
pop
mov
jp
adc
pop
push
mov
out
repz
mov
out
jl
out
mov
push
movsb
loopne
mov
xor
cmpsl
stc
and
iret
mov
add
dec
repz
mov
push
xchg
sahf
cmpsl
stc
cmp
shrl
fwait
iret
sarl
mov
les
and
insb
mov
enter
ss
xchg
outsb
dec
data16
fwait
into
xchg
sarb
aad
idivb
int
xlat
jmp
push
pushf
fcompl
imul
xor
pop
loope
hlt
sub
xlat
in
cld
out
fistl
pusha
icebp
outsl
int3
add
pop
add
popf
push
aas
aam
inc
mov
sub
sub
movsb
aaa
repnz
cmp
shlb
scas
add
xchg
pop
orb
mov
pop
mov
out
addl
mov
xchg
push
add
aas
inc
xor
daa
imul
sbb
pop
push
mov
pop
mov
aas
scas
mov
inc
adc
ficoml
lahf
and
xchg
cld
jg
in
imul
aas
pushf
xchg
pop
mov
ficompl
mov
adc
outsl
lahf
fstl
fmul
out
mov
out
outsl
mov
inc
out
mov
mov
idivl
push
dec
aas
repnz
sar
or
push
aaa
aas
add
lds
and
and
sar
in
inc
pop
push
sbb
flds
lea
lahf
pop
daa
ret
inc
fwait
jge
rcl
sub
pop
jl
mov
push
adc
dec
add
scas
leave
aam
movsb
mov
xor
dec
adc
dec
rolb
fcompl
mov
push
rcrl
jb
cmp
dec
xlat
pop
out
notb
push
filds
rorb
inc
push
dec
cmp
pop
adc
add
mov
cmp
push
push
push
push
dec
je
and
lret
fmuls
sbb
add
dec
aaa
lock
lods
add
fnstsw
jb
inc
or
add
mov
test
pop
push
addr16
xchg
testl
jmp
fcomp
pusha
mov
dec
fmul
daa
call
lret
push
dec
add
sub
fldenv
ffreep
ja
je
leave
jg
fbld
mov
fbstp
in
out
int3
mov
jo
pop
adc
fiaddl
push
pop
and
pop
aaa
sub
mov
xchg
in
and
add
fidivs
and
test
leave
inc
mov
adc
inc
fdivp
sar
stos
shl
add
sbb
cmp
fstpt
leave
inc
jb
cs
jno
out
je
jl
or
xlat
cmp
sub
jnp
push
faddl
hlt
daa
adc
mov
pusha
rclb
and
fmull
and
xchg
push
push
movaps
jbe
push
sbb
testl
mov
iret
nop
daa
rolb
pushf
sbb
xor
push
aas
aam
cmpsl
ljmp
and
or
scas
push
fstpl
js
or
jo
mov
in
mov
lret
xchg
pushf
fimuls
in
inc
sbb
jb
pop
push
bound
add
add
add
xor
lea
cmpsl
push
xor
js
dec
or
xchg
mov
pop
ficomps
addr16
dec
adc
bound
xlat
inc
shll
out
jmp
adc
mov
and
filds
in
loopne
jb
hlt
je
sbb
test
mov
dec
push
iret
mov
add
in
adc
daa
cld
out
dec
shr
gs
add
xchg
loopne
xlat
insl
outsl
pop
mov
and
xchg
imulb
addr16
pushf
pop
idiv
fs
add
lsl
xchg
and
add
xchg
xchg
mov
leave
fsubs
fs
xchg
xchg
xchg
xchg
push
pop
bound
add
loope
lea
fistl
shrd
mov
addb
pushf
pop
inc
loopnew
repz
incb
or
add
pop
push
sub
xor
inc
mov
or
arpl
daa
xchg
xchg
push
aaa
push
loope
gs
popf
cmp
add
mov
cmp
mov
out
lds
je
gs
data16
rorb
sbb
and
xor
addr16
jecxz
add
or
in
and
jecxz
jecxz
daa
push
mov
pop
mov
in
or
rclb
and
push
lret
add
add
repnz
in
add
add
pop
xor
lea
clc
insl
cmp
push
out
addr16
out
pop
push
addr16
mov
aaa
in
push
subb
jbe
das
outsb
fmull
in
in
daa
fmuls
mov
xchg
pushf
in
in
daa
xor
stos
fwait
and
pop
inc
push
test
sbb
and
sbb
add
add
stc
push
inc
lods
xlat
out
dec
or
cwtl
adc
push
adc
rolb
pop
cwtl
daa
es
je
daa
push
ss
push
mov
sbb
and
mov
les
mov
lock
imul
out
jl
in
out
daa
dec
out
jp
mov
xchg
out
daa
movsb
cmp
loopne
imul
call
xchg
aad
push
fstl
into
adc
push
in
pushf
inc
jb
call
popf
call
push
inc
mov
cmp
inc
add
inc
jb
mov
enter
pushf
pushf
pushf
jge
lea
add
adc
inc
mov
jmp
leave
dec
dec
push
dec
push
jmp
adc
push
fadd
lds
mov
imul
add
aas
ljmp
or
xor
leave
add
add
nop
xchg
xchg
dec
js
push
mov
rol
sbb
es
ja
imul
fidivl
imul
xchg
mov
hlt
out
daa
sub
sbb
and
iret
cmp
cmp
dec
pop
mov
adc
add
cmpsl
jmp
cmpsl
jmp
daa
cltd
xchg
pop
push
call
mov
rorl
in
in
out
mov
out
inc
jb
mov
mov
shl
insb
insl
push
inc
mov
lahf
push
and
das
push
xchg
xchg
and
pop
inc
push
jg
das
xchg
dec
or
insl
subl
in
mov
imul
shlb
xor
sbb
insl
push
inc
out
enter
outsl
outsb
adc
mov
sbb
out
inc
ja
inc
dec
cs
imul
outsl
jb
popf
negb
jns
xchg
mov
movsb
push
lods
enter
pop
in
out
add
xchg
imul
ljmp
push
pop
cs
dec
cs
test
sbb
mov
and
and
imul
push
inc
jo
pop
cmp
jo
fbstp
scas
pushf
and
enter
les
mov
add
dec
lock
in
inc
jb
jno
fcomip
cmp
setl
fidivs
push
jp
fcomip
fs
jb
movsl
test
dec
and
pop
out
aam
cmp
inc
mov
aaa
das
lcall
repnz
adc
mov
daa
sub
and
pusha
push
mov
lahf
mov
sbb
jno
and
daa
mov
add
dec
mov
repnz
daa
adc
jb
stos
cmp
repz
jbe
inc
jo
xlat
jnp
addr16
aas
cmpsb
scas
add
mov
aam
fsts
in
or
inc
mov
xchg
cli
or
jbe
and
inc
pop
ljmp
outsl
xlat
cs
add
hlt
dec
dec
xor
sahf
hlt
dec
add
xchg
pcmpeqb
enter
push
popa
add
mov
jb
add
in
and
pop
mov
je
dec
dec
adc
hlt
loopne
je
jb
adc
cmc
push
jne
aas
jne
xchg
outsl
shl
xor
popl
pop
cmc
test
lea
pop
fistpll
push
insb
add
mov
inc
lock
pop
in
divb
lock
jbe
dec
mulb
mov
jbe
jbe
pushf
push
pusha
punpckhwd
fs
push
jae
jge
das
rcrb
cltd
mov
inc
xor
rcl
dec
je
xchg
jbe
emms
add
xchg
dec
into
addr16
pusha
cmp
inc
addr16
aaa
pop
leave
dec
movsl
push
fs
xchg
pop
jbe
dec
fimull
ret
int
clc
and
and
mov
clc
out
adc
fimull
scas
js
xchg
in
adc
daa
leave
leave
inc
mov
or
mov
add
lock
popf
fmull
cmp
jns
xor
add
jns
repnz
pop
push
and
sbb
out
pop
cmpsb
lods
iret
push
into
lret
enter
out
mov
pop
clc
jg
adc
mov
das
jp
pop
daa
add
mov
jns
add
push
push
pop
stc
or
out
jp
dec
dec
fisubrs
mov
push
xchg
xchg
daa
and
movsl
ret
enter
inc
adc
pop
test
push
push
push
cmovnp
sbb
push
dec
lods
xchg
push
xchg
mov
mov
pop
push
mov
ror
add
inc
mov
mulb
jl
add
or
add
sbb
jb
add
adc
push
jle
cld
jl
dec
daa
mov
xlat
imul
test
into
test
sbb
imul
cld
aam
push
push
pusha
aas
jge
xchg
inc
sub
jge
ds
notb
std
inc
std
sbb
jns
and
push
incl
call
and
std
std
sbb
fmull
jge
push
inc
dec
jnp
mov
cmpsl
mov
and
out
test
lods
subb
scas
inc
daa
fildl
in
push
je
ret
in
add
cmc
std
mov
xchg
cwtl
jle
push
sub
leave
enter
add
add
ja
fimuls
push
push
pop
iret
or
cmp
fistpll
incl
mov
jg
dec
dec
scas
shr
repnz
cli
mov
mov
jg
add
or
push
adcb
jmp
inc
jg
jg
dec
push
sbb
fiaddl
or
adcl
sbb
mov
cmp
jns
jg
jg
add
fbld
into
sti
or
mov
push
movl
xchg
xchg
pop
outsl
xchg
and
mov
xchg
enter
scas
add
and
loope
xlat
add
pop
dec
sbbl
cmp
and
add
dec
add
pop
push
addr16
jne
or
sahf
call
dec
push
push
add
rcr
ja
int3
xlat
ja
dec
iret
repnz
emms
push
sbb
push
leave
dec
aaa
and
repnz
dec
pop
jmp
movsb
or
xchg
mov
add
mov
mov
inc
iret
aam
fmul
es
shr
paddsb
add
insl
cmp
mov
push
pop
in
xchg
daa
daa
add
add
add
aas
push
inc
dec
or
sahf
mov
or
or
or
jg
xchg
leave
xchg
lahf
adc
sbb
scas
adc
mov
sbb
push
test
add
sub
add
jns
inc
pop
cmpsl
push
add
out
jbe
jb
imul
cs
xchg
add
fmulp
mov
outsl
add
in
and
push
str
pop
data16
add
pop
test
mov
fmuls
mov
into
jg
ja
pop
in
in
fimuls
out
testb
fs
decb
xchg
inc
fiadds
or
add
invd
addb
push
add
pushf
jbe
pop
fs
adc
push
gs
data16
popf
add
push
movsb
dec
testb
push
mov
fsubp
xor
shlb
sarb
adc
sbb
cmova
in
rcrl
dec
in
pop
inc
fisttps
in
adc
pop
jo
pop
push
daa
subb
loop
or
xchg
sub
fcomps
cmp
adc
das
mov
xchg
dec
adc
or
pop
cmc
nop
idivl
das
pop
fildl
lods
adc
push
outsl
sbb
xchg
in
pop
sti
ja
cmp
push
pop
push
pushl
cltd
rolb
shlb
cmp
xlat
xchg
incl
jbe
or
gs
in
and
in
and
or
dec
dec
fcoms
cwtl
cmpsb
mov
mov
dec
out
les
push
loopne
enter
out
push
incb
mov
or
jb
sbb
sub
addb
mov
mov
mov
jb
jns
mov
xchg
and
mov
rorl
loope
mov
push
or
in
inc
and
push
or
xor
add
daa
repnz
hlt
mov
pop
mov
pop
pop
mov
add
xchg
data16
orb
sahf
decl
xor
mov
dec
or
inc
fistps
mov
ja
and
in
and
mov
or
add
out
and
sbb
enter
or
mov
mov
xchg
cmpsb
or
cmpsl
rcl
push
adc
mov
orl
cltd
add
ss
and
pop
in
shlb
negl
je
or
mov
mov
cmp
rorb
or
insl
cmpsb
imul
in
leave
leave
inc
test
insl
ja
leave
rcrl
dec
sub
push
pop
mov
inc
movsb
xor
or
add
xchg
dec
push
cmp
pop
imul
addr16
or
mov
mov
and
enter
stos
out
mov
popf
mov
push
mov
adc
mov
outsl
mov
jg
jbe
mov
lea
enter
add
cmpsl
ds
xchg
mov
cmpsl
push
cwtl
dec
ja
jb
jb
ja
daa
daa
pop
leave
in
mov
in
adc
in
jb
mov
cmc
std
das
mov
pushf
dec
dec
adc
mov
insl
rorb
outsl
mov
ja
gs
rorl
inc
mov
sub
mov
push
mov
adc
shlb
pop
pop
jb
cs
adc
pop
jo
ret
aaa
mov
pushf
pushf
mov
add
mov
cmpsl
nop
pop
movsb
jb
addr16
xchg
mov
mov
ja
add
push
add
das
pop
add
das
xchg
xchg
mov
cmpsl
lahf
mov
mov
pop
leave
mov
cmpsl
in
repz
cmp
adc
adc
pop
cwtl
ljmp
xchg
testl
insl
add
in
in
fs
aas
js
das
orl
jnp
jb
or
mov
jns
pop
push
lds
shlb
pop
adc
inc
ds
dec
xchg
out
push
push
add
mov
es
inc
sahf
pushf
cs
ds
add
imul
adc
fimuls
and
mov
sbb
dec
inc
lcall
in
fdivp
add
xchg
add
inc
mov
or
adc
daa
and
sub
inc
inc
lds
lahf
adc
push
data16
cmovle
xchg
outsb
addr16
stos
mov
add
sub
and
xchg
aas
jnp
sub
sbb
xor
dec
cmp
push
add
cmp
jae
pop
pop
mov
dec
ja
xchg
dec
mov
popa
add
movsb
mov
maxps
pop
xor
repnz
add
das
add
sbb
pop
aas
xlat
or
xchg
pushf
orb
dec
es
add
popf
movsl
pop
movsl
movsb
rcrb
mov
iret
cmpsb
lods
push
mov
mov
fmuls
loopne
outsb
daa
mov
pop
call
push
mov
daa
cmp
dec
and
scas
xchg
xor
and
mov
xchg
xchg
fs
sbbl
daa
xchg
add
sbb
test
jb
inc
xor
test
xchg
pop
add
lar
dec
popw
pop
pop
sbb
xchg
fcmovne
leave
mov
pop
and
xchg
pop
add
jge
cmp
popf
test
lea
fisubl
in
ja
xchg
xchg
loopne
aaa
xchg
pushf
sbb
std
push
or
jge
sahf
adc
push
and
repnz
xor
cmp
or
leave
push
pop
data16
arpl
xchg
inc
sub
mov
mov
aam
xchg
pushf
jbe
xchg
sub
imull
emms
add
xor
leave
dec
in
add
fbld
insl
loopne
xor
nop
aas
sbb
xchg
fucomi
inc
cltd
mov
mov
or
dec
lcall
sbb
out
mov
add
xchg
xchg
das
lcall
sub
sbb
or
xor
dec
outsb
pop
in
hlt
ja
setbe
test
sbb
outsb
mov
out
rorl
frstpm(287
in
adc
jmp
je
in
mov
push
sub
cmp
inc
dec
mov
push
movsb
pop
aas
fwait
mov
add
lods
add
inc
ret
add
mov
dec
jb
out
pop
push
and
pushf
adc
push
iret
xchg
xchg
dec
cmp
loopne
in
pop
add
outsb
jbe
inc
xor
sysret
rcrb
mov
das
bnd
pop
rorl
fdivl
pslld
pushf
cmp
cmp
add
or
add
sahf
int3
sahf
mov
sub
pop
xor
or
addr16
inc
dec
push
or
xchg
xchg
daa
daa
jl
adc
adc
mov
lahf
ret
ror
pop
fcom
sbb
or
adc
mov
xchg
mov
push
ds
xor
pop
cmovbe
cmp
out
imul
addr16
out
pushf
pushf
in
test
add
cmp
fs
push
mov
dec
inc
mov
or
fmull
in
pop
stc
add
pop
lahf
push
push
lahf
push
les
lock
inc
popw
enter
arpl
loopne
dec
dec
test
pop
add
adc
inc
push
mov
daa
pushl
mov
ret
or
add
add
fiaddl
loop
pop
ljmp
sbb
pop
mov
sbb
and
adc
mov
daa
out
and
add
orl
shrb
pushf
pushf
fmull
mov
mov
fcompl
push
fcoml
in
pop
or
cmp
xor
ret
adc
and
dec
cmp
lcall
jo
jb
jae
pop
pop
in
and
fcomps
pushf
and
leave
rorl
sbb
in
fldcw
and
dec
jae
cmpsl
mov
mov
or
jb
leave
adc
add
add
arpl
fisttps
mov
fildl
dec
dec
out
add
add
daa
mov
and
in
jno
inc
ja
cmp
push
pop
mov
add
fimuls
push
pop
test
mov
or
cwtl
pop
jg
jb
loop
push
inc
in
mov
cmp
mov
outsl
inc
add
dec
pop
pop
fs
enter
add
jb
in
nop
or
fwait
or
mov
mov
fisttpll
in
xchg
and
adc
adc
adc
or
adc
pop
adc
and
pop
inc
sbb
jb
jb
push
sbb
sbb
jb
jb
push
adc
jb
adc
adc
pop
popa
jb
push
or
xchg
sub
push
movsb
xchg
add
pop
add
pushf
pop
movsb
movsb
add
lods
in
mov
mov
pop
daa
in
daa
mov
dec
mov
iret
fsts
fcomip
out
add
test
pop
inc
cmp
dec
sub
push
sub
daa
nop
lcall
pop
push
movsl
and
inc
movsb
or
push
sbb
loop
incl
sub
xchg
popf
sahf
and
inc
mov
push
flds
loope
jmp
enter
add
aaa
enter
or
sub
inc
mov
addr16
fwait
cmp
push
sub
iret
mov
push
inc
mov
cmp
jo
repnz
ja
out
add
leave
xchg
adc
movsb
cmpsl
and
fucomi
xor
inc
add
and
jo
cs
mov
sub
mov
stos
pop
mov
sub
xchg
jo
jg
add
out
rclb
idiv
add
dec
test
push
add
in
or
or
cs
popf
mov
ss
dec
sub
aas
inc
mov
sub
add
jns
loopne
pushf
subl
mov
test
xchg
jo
jb
add
fildl
out
loopne
sub
cmpsl
adc
sub
daa
ljmp
sbb
add
add
xchg
daa
and
ss
leave
enter
or
subb
and
xchg
jno
out
fildl
pop
aas
sub
xor
sub
iret
test
push
lods
add
xchg
add
enter
pop
imull
out
stos
or
inc
and
daa
dec
push
addps
pusha
jb
mov
mov
add
pushw
xchg
xchg
ss
xor
xchg
jl
das
xor
adc
xchg
dec
out
stos
inc
dec
dec
fisubrl
dec
cs
fdivrl
push
loop
aaa
xor
pushl
cmp
add
mov
push
add
dec
add
cmpsl
lods
sbb
fimull
sub
cs
or
scas
lahf
or
test
xor
pusha
xchg
cmp
imul
addr16
cmpsl
xor
rorb
push
xchg
add
mov
stos
lahf
lods
mov
out
push
jb
leave
enter
flds
add
jmp
xor
push
add
stc
lods
add
mov
movups
sbb
subb
xor
into
pop
mov
dec
divl
pop
mov
mov
mov
out
out
or
cmp
rcrb
imul
popf
aas
scas
sub
xor
in
add
add
dec
jb
jb
push
pop
addr16
cmp
jns
or
mov
popf
pushl
add
cmp
scas
shrb
ss
jmp
scas
insl
push
or
push
call
cmp
push
pop
push
inc
add
dec
mov
add
or
jge
mov
dec
mov
sahf
aas
punpcklwd
scas
shll
add
hlt
and
cmp
lahf
mov
add
mov
cmc
add
loopne
clc
fistpll
push
bswap
in
dec
mov
das
add
mov
mov
dec
fbstp
pop
cmpsl
dec
jp
into
pop
mov
sub
ss
mov
mov
xor
cmp
xor
out
mov
mov
mov
mov
movsb
add
addr16
popf
pushf
mov
addr16
mov
leave
inc
xor
cmpsl
push
pop
pop
scas
loopne
enter
pop
mov
pop
mov
cmp
shll
inc
dec
punpckldq
in
and
dec
cs
xchg
add
sub
roll
leave
mov
or
inc
sbb
mov
lahf
jb
in
mov
push
add
pop
add
mov
pusha
add
add
dec
dec
dec
add
add
xchg
and
or
popa
in
leave
or
nop
adc
pop
adc
mov
or
pop
cmp
mov
mov
sbb
sarb
lsl
add
add
mov
in
and
or
or
test
fs
mov
mov
jb
pop
sub
pop
sahf
sub
rorb
jg
daa
pusha
rcrb
ljmp
popf
xchg
setp
mov
mov
adc
cmp
adc
adc
push
leave
in
in
mov
or
adc
fs
sbb
sbb
sub
xor
pop
cmovb
and
cltd
cmp
pop
pop
bound
jnp
jnp
es
jb
sub
sub
inc
mov
sub
fs
xchg
sub
mov
jns
in
mov
cmp
bound
mov
push
inc
test
enter
and
mov
or
sbb
pcmpgtb
add
mov
add
jmp
sub
push
cmp
mov
inc
add
cmp
cltd
cmpsb
push
jo
mov
aas
in
adc
test
push
fsub
enter
loopne
add
add
repnz
cld
or
cmp
pop
sbb
sub
xor
adc
adc
jle
mov
xchg
and
adc
sbb
jb
mov
sbb
sbb
sbb
sbb
jb
enter
and
push
and
inc
mov
and
jb
enter
daa
pusha
sub
jbe
sbb
je
jl
aas
xchg
pop
outsb
mov
in
pushf
jg
lahf
scas
mov
inc
into
fdivrp
and
shlb
ficompl
loop
in
xchg
push
ljmp
mov
mov
adc
sbb
in
xchg
and
adc
xchg
adc
jb
adc
popl
out
mov
inc
andb
dec
mov
sbb
mov
testl
movl
in
cmp
in
icebp
or
or
and
sbb
or
inc
jb
enter
adc
adc
sbb
push
push
xchg
in
xchg
and
sbb
sbb
sbb
sbb
and
pop
out
and
sbb
jb
mov
adc
inc
mov
sbb
sbb
sbb
jb
enter
pop
push
push
pop
adc
push
jb
jp
xorb
xchg
adc
push
inc
mov
mov
or
and
or
or
pop
mov
push
out
add
cmp
dec
inc
dec
aas
or
cmp
push
and
fucomi
push
mov
pop
insb
pop
testb
arpl
imul
jnp
or
or
fistpl
xchg
or
jbe
jb
stos
adc
in
xor
lret
adc
fstpl
in
xor
in
negl
mov
stmxcsr
and
inc
and
in
xchg
in
out
pop
add
push
fs
add
xchg
xchg
fcmovne
mov
enter
ror
repnz
adc
cli
adc
mov
jb
or
in
in
sub
cmp
in
push
sbb
add
and
push
mov
mov
lods
add
xor
int3
add
pushf
sbb
cmp
psadbw
incb
or
int3
sahf
mov
pop
push
push
add
and
adc
ss
push
stc
xor
ds
inc
leave
mov
push
mov
jb
in
addl
add
add
scas
push
mov
in
xchg
and
or
mov
shrl
repz
decb
das
or
psadbw
cmp
pop
xor
pop
enter
push
popa
pop
ja
xor
fs
sbb
cmp
jns
sbb
and
sahf
fisubl
in
and
xchg
mov
and
push
and
daa
daa
daa
mov
daa
xor
cmp
daa
daa
pop
imul
ror
jg
pop
xor
cmp
test
add
inc
mov
add
add
add
repnz
xchg
add
roll
fnstcw
fisttps
and
pushf
pushf
mov
sahf
pushf
pushf
pushf
dec
push
pop
adc
dec
inc
insl
jne
jge
test
pop
dec
dec
push
xchg
adc
mov
sbb
adc
mov
and
xor
push
rcr
repnz
dec
dec
dec
mov
add
adc
in
sbb
dec
ret
xor
sbb
iret
inc
shr
push
mov
ret
js
int3
into
cs
add
pushf
daa
pop
pushf
pushf
test
mov
iret
ret
or
or
ret
add
or
enter
pop
add
mov
jnp
adc
dec
adc
push
mov
les
sbb
xchg
and
outsb
sbb
sbb
in
xchg
xchg
and
mov
mov
mov
mov
seta
sub
enter
sub
sub
cmp
das
out
xor
xor
add
mov
xor
xor
xor
enter
aas
ds
dec
cmp
cmp
cli
lds
outsl
and
sbb
dec
ds
cmovns
inc
in
fs
push
ja
test
fistpl
add
dec
popa
orl
lahf
dec
cmp
add
dec
aas
mov
in
enter
pop
sti
ffreep
jb
in
sub
adc
sbb
sub
pushf
cmp
aas
dec
or
push
or
outsl
pop
jp
xchg
enter
xchg
pop
adc
in
adc
scas
push
repnz
ficoms
jb
sbb
or
adc
cmp
jns
sbb
and
in
jbe
push
and
dec
loopne
dec
es
repnz
dec
int
aad
fbld
cmp
sbb
pop
enter
push
fisttpll
lidtl
add
dec
add
add
mov
push
or
pop
or
pop
xchg
fnstenv
pop
jge
dec
xchg
fs
xchg
push
sahf
pop
adc
rorl
adc
adc
adc
sbb
push
in
pop
clc
sbb
add
and
and
pop
sbb
das
and
das
daa
daa
mov
cmp
cmovne
in
xchg
daa
pop
and
jno
outsl
adc
and
popf
sub
sub
dec
enter
sub
loop
movsb
repnz
dec
add
daa
in
mov
pop
lret
inc
add
mov
jb
add
add
jbe
popf
je
jl
test
mov
dec
int3
jb
cltd
mov
mov
dec
dec
dec
cs
lock
xchg
mov
iret
bswap
push
or
or
sbb
imulb
or
fsts
push
adc
mov
adc
pop
add
inc
inc
mov
mov
sbb
int3
pop
lahf
push
mov
and
push
rcrb
frstor
sbb
in
ljmp
daa
and
sbb
or
mov
int3
inc
sbb
push
int3
cmp
sbb
pop
int3
pmaddwd
push
xor
or
subl
scas
jb
movsb
or
pminub
mov
add
int
xchg
and
adc
pop
push
or
or
jb
enter
or
pop
or
data16
adc
inc
xchg
adc
xchg
fnstenv
outsl
fmuls
jecxz
mov
and
lock
into
push
movups
test
dec
inc
ds
pop
std
push
dec
add
dec
dec
pop
lahf
into
jne
sbb
mov
jge
test
lea
dec
inc
dec
or
daa
and
lods
or
enter
outsb
aas
rorl
fistl
pop
jecxz
adc
inc
inc
into
psllq
aaa
cmpsb
iret
iret
jg
sbb
and
in
enter
sbb
sbb
cmp
jb
in
inc
push
cmovl
push
and
xchg
push
sbb
push
gs
or
iret
dec
iret
xorb
scas
btc
sbb
add
mulb
std
or
or
inc
dec
mov
or
or
sub
leave
enter
adc
adc
in
fs
adc
das
jbe
and
mov
jg
lahf
jbe
aas
sbbl
xchg
sbb
jb
idivb
and
fildl
pop
mov
out
icebp
and
and
repnz
push
sbb
aaa
push
sub
js
or
das
fidivrl
ret
push
aam
push
les
movsb
pusha
shlb
push
jbe
mov
xchg
shll
cs
pop
xchg
ss
sub
insb
out
movsb
sarb
push
xchg
adc
dec
inc
dec
mov
leave
xchg
and
or
push
or
leave
add
xchg
mov
in
jne
orb
pop
lods
adc
leave
enter
pop
push
fs
lret
fsts
shll
pop
cmp
pop
inc
cmp
repnz
sbb
sbb
jae
inc
mov
jle
pop
stos
and
mov
dec
out
and
cli
aam
and
adc
sbb
daa
xor
pop
cmp
outsb
outsl
daa
cmp
cmp
das
sub
sub
push
pop
das
pop
push
xchg
jae
aas
jae
das
jle
mov
fsts
lahf
stos
bswap
fs
xchg
push
shl
cmp
or
sbb
jns
add
aas
es
and
push
js
decl
sarl
dec
aad
addr16
adc
daa
and
cmp
inc
push
cmovle
data16
or
inc
sahf
xchg
lahf
das
stos
sahf
mov
rclb
adc
popf
int3
psraw
das
stc
add
mov
sbb
sbb
jns
jb
dec
push
push
pusha
mov
cmp
jbe
andl
popf
fistpl
mov
mov
xlat
pop
sub
xchg
daa
mov
jbe
das
orl
xor
mov
ret
xor
sbb
xchg
fucomi
xor
aas
cmovp
sbb
repnz
movsb
push
in
dec
inc
push
test
or
push
fcomps
mov
add
daa
pop
outsb
dec
dec
inc
das
aaa
inc
pop
or
rcpps
pcmpeqd
insl
lahf
fdivrs
push
mov
mov
pop
push
in
pop
or
inc
jbe,pn
jnp
sbb
push
loopne
mov
xchg
mov
xor
imul
daa
mov
dec
pop
pop
rolb
daa
enter
jne
add
or
adc
or
push
xorb
js
lret
cs
inc
push
test
mov
inc
or
inc
scas
pop
inc
add
cmp
insl
or
pop
aaa
xlat
add
push
xchg
ja
cs
mov
sahf
out
sbb
sahf
out
pop
or
or
aaa
or
mov
imul
daa
xlat
xchg
fistl
add
mov
inc
push
addr16
das
push
xorps
loopne
mov
das
insl
push
and
jns
jo
jb
pop
xorb
pop
orl
leave
leave
repz
pop
xchg
sub
aas
mov
loope
xlat
sbb
data16
loopne
xor
sbb
fadds
adc
jmp
add
xchg
adcb
push
dec
inc
add
ljmp
mov
test
inc
test
clc
add
add
pusha
pusha
cmpb
mov
inc
fldenv
cmc
ja
repnz
mov
cmp
decb
inc
mov
out
in
inc
mov
iret
mov
in
call
mov
cmpsl
in
jle
push
ficompl
push
pop
fisubrl
xor
fsubrs
xchg
in
fsubp
stc
jb
jle
out
aas
dec
xchg
hlt
jl
js
sahf
out
sahf
jo
push
sahf
out
dec
inc
xor
and
jns
out
sbb
or
fidivs
or
repz
push
clc
hlt
in
jns
out
call
iret
repz
repz
mov
cmp
repz
test
sub
das
mov
out
inc
cmp
sub
jns
negl
push
in
fadd
out
sahf
out
mov
iret
jnp
cmpb
push
iret
repz
dec
inc
xor
mov
icebp
clc
push
in
fcoml
mov
out
mov
mov
or
add
add
leave
pusha
and
adc
bound
mov
xor
test
pop
sahf
xchg
in
insl
push
fcom
cmp
mov
xor
add
ja
sbb
inc
ja
pop
mulb
daa
mov
pop
orb
add
sub
push
xorb
mov
call
push
mov
outsl
inc
mov
push
pop
popa
cmpsl
popa
add
andps
add
loopne
inc
movl
add
sbb
arpl
mov
add
pushf
push
mov
mov
imulb
pop
mov
add
iret
sub
sbb
xchg
pop
xchg
push
into
push
cs
insb
add
push
enter
adcl
pop
or
add
add
out
std
inc
mov
es
or
sub
pushf
movups
add
add
add
enter
and
das
cmp
jb
cmc
clc
or
adc
xor
cmp
push
das
mov
mov
addr16
mov
or
adc
mov
and
adc
adc
or
sbb
repnz
pop
pop
clc
and
and
and
and
in
and
jo
or
or
imul
daa
xor
dec
testb
es
incl
xorl
fistl
cmp
out
push
pop
js
mov
jnp
add
xor
dec
insl
out
fidivs
ja
fidivs
js
mov
bnd
das
push
dec
or
sub
dec
push
repnz
pop
pop
mov
xchg
cli
or
or
in
jl
ret
mov
adc
stc
and
and
sbb
into
sbb
inc
rorl
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
sti
incl
add
inc
stc
mov
adc
mov
decl
js
jg
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
decl
lock
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
call
jecxz
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
call
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
call
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
mov
outsb
dec
leave
fwait
xchg
and
add
int
add
aas
jno
or
mov
lcall
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
inc
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
jmp
adc
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
fisubs
xchg
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
call
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
jmp
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
ljmp
addb
add
xlat
cmp
mov
sbb
lcall
movsb
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
lcall
cmpsb
xchg
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
decl
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
dec
gs
std
orl
pop
ficomps
frstor
test
cmc
add
sbb
and
dec
adc
sbbb
xlat
add
pop
repnz
push
inc
inc
je
inc
inc
push
dec
jnp
addr16
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
mov
xchg
jg
or
cmp
mov
mov
pop
fisubl
call
dec
inc
jo
inc
popa
push
outsb
jbe
imul
push
mov
gs
outsl
cmp
pop
push
aas
dec
insb
imul
addb
cmp
adc
mov
adcl
push
inc
dec
push
mov
dec
shr
jo
jb
push
inc
rorl
out
add
xor
gs
gs
daa
mov
and
inc
ds
arpl
adc
push
pop
sti
sub
dec
outsl
push
dec
pop
mov
push
push
xchg
xchg
sub
and
xorb
aam
push
xchg
push
mov
push
mov
add
pop
das
push
fs
or
sbb
aas
pusha
push
or
dec
imul
ret
inc
dec
daa
daa
and
imul
dec
jae
imul
xor
inc
jg
in
sbb
inc
inc
jns
dec
lahf
push
lcall
push
cmp
jmp
adc
data16
jns
add
inc
ljmp
cltd
dec
in
inc
movups
out
dec
push
dec
imul
orl
push
stos
sub
push
dec
test
push
mov
inc
adc
int
cmpsb
dec
inc
add
iret
push
xchg
inc
pop
dec
popa
jne
arpl
test
push
shrb
dec
pop
repz
adc
mov
add
sub
ja
inc
xchg
push
cmp
loopne
shr
js
cli
dec
sub
push
ss
push
sub
dec
negl
push
testl
imul
pop
arpl
outsl
push
mov
jbe
lds
das
sbb
test
outsb
or
lock
push
push
and
gs
stos
and
sbb
outsl
stos
push
pop
mov
push
push
adc
movsb
pop
cmpsl
pusha
out
ret
pop
jg
push
sub
outsl
xchg
andb
xchg
lock
in
and
hlt
or
push
add
andb
insb
and
xchg
pop
ja
andb
ja
sbb
sub
pop
sbb
and
roll
stc
lahf
fsubrs
scas
movsl
cmpsb
shll
xchg
push
dec
scas
mov
adc
add
inc
dec
or
stos
pusha
mov
add
sarb
jg
pop
jb
add
loopne
mov
iret
aas
jmp
pushf
add
stos
mov
adc
cmp
cmpsl
push
aad
arpl
test
inc
xchg
dec
xchg
mov
dec
dec
lret
test
fmuls
inc
lods
xchg
jae
popf
fimull
mov
ja
ret
outsb
push
dec
push
stos
loopne
jle
push
jne
les
outsl
jo
lock
adc
imul
outsl
addb
aad
iret
fwait
mov
pop
les
pop
shll
aaa
mov
push
movsb
out
jg
repz
add
inc
sub
xchg
sahf
out
sahf
lock
test
js
fwait
out
pop
inc
or
hlt
cwtl
xchg
push
inc
sahf
outsl
push
push
add
pusha
ds
sbb
js
and
decl
lahf
xchg
xor
ja
popa
push
out
mov
les
hlt
push
pushl
movsl
arpl
mov
mov
push
movsb
mov
aad
mov
rclb
mov
jle
sub
mov
sbb
dec
jno
repz
test
ficompl
jmp
ljmp
mov
hlt
movl
imul
std
in
leave
mov
add
call
add
cmp
or
pop
adc
in
pusha
aad
jno
mov
incl
cmp
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
fsqrt
fdivs
jne
filds
or
shrl
cmp
fdivrp
decl
xlat
enter
mov
and
mov
cltd
xchg
mov
mov
test
add
or
or
or
ljmp
adc
stos
sbb
data16
inc
fdivl
jno
add
aad
mov
mov
pop
mov
push
movsl
in
lahf
xor
mov
js
stc
incl
sbb
push
sub
insb
fs
add
hlt
push
ljmp
bound
sbb
xor
dec
add
in
xchg
push
insb
jnp
add
shl
adcb
cmc
fcos
pushl
adc
mov
mov
bound
ficoml
gs
aam
pop
popa
mov
pop
cmp
mov
inc
movsl
fisttps
xchg
fadd
sar
jmp
jmp
outsb
xor
mov
sarb
add
in
add
pop
dec
or
ljmp
cmp
add
daa
adc
or
and
test
or
data16
mov
push
stc
ficomps
leave
fldcw
and
xlat
pop
cmp
mov
cmp
pushl
and
mov
add
inc
aad
scas
ja
popf
adc
incl
push
fdivl
or
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
decl
mov
pop
jge
xchg
shlb
add
inc
push
imul
xorb
lcall
sbb
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
pop
aad
mov
call
xchg
shll
push
repnz
addr16
mov
aas
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
jmp
out
mov
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
decl
mov
das
es
lds
or
sub
mov
cmpsl
call
ret
call
mov
sahf
fldcw
ret
es
pushf
mov
insl
add
ss
decl
push
jmp
addr16
jb
push
pop
orb
adc
mov
jnp
sbb
decl
aad
mov
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
call
mov
mul
ja
outsl
ja
mov
out
cli
jo
ud0
cmp
incw
lcall
adc
sahf
gs
clc
sar
imul
push
js
or
call
push
addl
mov
cmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
dec
xor
mov
add
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
or
add
push
sub
mov
or
sbb
mov
out
add
xchg
incb
pop
mov
xchg
jg
rolb
jne
fistpl
xor
push
imul
insb
imul
xlat
jmp
push
and
pop
inc
jbe
push
jns
arpl
add
push
outsl
arpl
ja
subb
push
inc
insl
jns
dec
adc
cli
outsl
insl
addr16
sub
add
fildl
push
lcall
xor
cli
push
cmp
jns
shl
sub
mov
dec
inc
js
inc
insl
bound
add
or
loopne
add
js
mov
popa
or
sbb
ljmp
dec
and
aas
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
ljmp
cmp
arpl
or
xor
bound
pop
xor
popa
add
xchg
pop
sbb
in
inc
mov
push
dec
inc
sbb
add
ror
mov
cmp
ret
dec
mov
add
fs
pop
or
ss
jbe
in
gs
cmp
or
inc
aas
push
inc
movsb
push
xchg
stos
popa
fs
inc
jle
inc
rcl
bound
sub
mov
getsec
pop
orl
insb
popa
jns
push
add
ljmp
push
push
mov
aaa
je
aaa
mov
inc
push
ljmp
jg
ficoml
jae
inc
ljmp
sahf
bound
push
inc
adc
stos
aaa
inc
and
sbb
inc
pop
jnp
adc
pop
es
inc
inc
inc
add
fimull
mov
ds
in
scas
add
mov
iret
int
push
dec
dec
lea
xchg
orl
adc
inc
outsb
jne
mov
sti
mov
push
jge
xor
fidivs
adc
arpl
add
aaa
mov
test
push
push
add
pop
inc
cmp
xlat
scas
inc
adc
add
imul
push
shrb
orb
and
mov
lahf
push
mov
dec
jo
fisubl
pop
mov
xlat
mov
push
and
pop
xchg
loopne
cmpsl
sbb
inc
jb
iret
or
mov
dec
popa
jo
roll
push
cmpb
outsl
outsl
test
add
push
push
mov
inc
bound
adc
in
push
andl
test
sub
add
pop
test
arpl
aad
adc
push
cmp
mov
jo
popl
pop
push
outsl
inc
xchg
stos
shrb
fcom
aad
inc
and
pusha
adc
sahf
mov
stos
cmp
insb
daa
sub
mov
adc
inc
xchg
jne
xor
jg
rcl
movsl
divl
arpl
sbb
xchg
add
adc
js
fmuls
pop
sub
sbb
jg
imull
add
cmp
add
jo
imul
pop
and
movsb
push
xchg
mov
outsl
xchg
fisubl
add
pusha
and
and
rcll
push
or
and
pop
insb
mov
push
loop
aaa
pushf
and
cwtl
jb
adc
dec
test
daa
push
inc
lds
aas
pop
inc
mov
or
and
add
push
inc
sbb
lock
cmpsl
adc
inc
inc
or
mov
in
xchg
icebp
nop
xor
je
and
insb
lods
push
pop
mov
int
mov
cld
adc
add
add
mov
sub
je
push
adc
jb
mov
inc
dec
push
push
test
and
cs
cmpsb
dec
shrd
push
gs
repnz
movq
stc
repnz
mov
out
ud0
jmp
bnd
push
pusha
ljmp
lret
cli
push
sar
push
cld
push
imul
fisttpl
push
inc
es
add
dec
cmpsl
mov
or
or
pop
mov
mov
daa
aam
cmp
add
pop
add
dec
xor
arpl
out
mov
add
inc
sbb
add
prefetch
pop
xor
push
test
mov
mov
insb
push
adc
or
loop
les
ret
mov
stc
push
pusha
push
add
pop
add
lock
add
les
pop
and
lods
add
jb,pn
addb
and
and
pop
inc
fiadds
lret
cs
leave
jbe
sub
fs
dec
or
addb
jb
push
xlat
out
push
repnz
adc
sbb
and
loopne
inc
pop
lods
or
or
push
and
mov
les
inc
enter
add
addl
mov
add
popa
jmp
leave
mov
and
ficompl
lods
imul
mov
mov
or
and
mov
xor
addr16
add
stc
jbe
imul
push
negl
xor
mov
sbb
fsqrt
fucomi
gs
add
movsl
imull
fld
ja
jne
jmp
mov
test
mov
cmpsl
or
call
sbb
in
orb
mov
int3
loope
aas
pop
adc
mov
xor
mov
insl
adc
dec
mov
jl
out
jo
add
xor
adc
mov
push
pop
adc
lret
xchg
stc
or
mov
or
icebp
sub
fstpt
mov
sbb
push
movzbl
or
rcll
test
fcmovu
add
imul
mov
cmp
jbe
mov
sub
pop
aad
popa
push
out
call
outsl
add
nop
test
dec
arpl
sub
xchg
add
movsl
adcb
dec
pop
ret
pop
and
divl
xor
movsl
mov
push
call
insb
push
xor
add
outsb
cli
push
or
in
mov
clc
pushf
and
imul
test
pop
out
insl
jne
push
inc
imul
add
adc
cltd
xchg
int3
dec
inc
push
lds
mov
arpl
subb
and
pop
in
inc
dec
mov
cmp
jne
in
lret
push
call
cmp
dec
insb
sbb
loopne
shlb
mov
invd
rolb
pop
jl
mov
cld
add
xchg
add
adc
imul
or
mov
adc
push
push
push
mov
sub
dec
pushf
out
mov
mov
leave
push
fcoml
mov
or
push
nop
inc
jmp
push
push
test
cmp
sub
cmpsl
inc
push
clc
xor
sahf
jp
loopne
movsb
je
pop
push
ret
dec
sub
pop
pop
pop
adc
pop
cltd
test
lds
mov
and
sub
jg
mov
jle
sbb
push
push
add
in
xchg
sub
push
sub
addb
push
clc
das
jp
aam
je
inc
test
movb
and
dec
adc
add
push
mov
jo
jae
aam
lea
and
sbb
sub
sbb
shrb
push
add
push
jo
add
jno
add
add
mov
or
inc
mov
and
lock
or
mov
jecxz
rclb
add
xor
test
xor
loope
dec
jmp
push
push
pop
movl
xchg
xor
hlt
add
rcl
mov
jne
jge
in
push
mov
push
pop
test
sub
popf
icebp
jne
or
fcoml
and
add
rolb
add
push
enter
mov
sar
pop
je
call
push
push
insb
add
sub
mov
lahf
push
imul
aam
mov
mov
and
adc
add
or
cmc
cmpsl
add
jl
jno
dec
xchg
sbb
pushf
mov
push
mov
stc
mov
mov
push
pop
or
ljmp
cmpsb
out
mov
jp
push
or
inc
clc
push
subl
or
and
and
push
lahf
pop
xchg
sbb
test
ja
xchg
sbbl
mov
rolb
fnstsw
inc
outsb
push
lcall
mov
cs
aaa
jl
andl
std
imul
pop
call
add
mov
aam
dec
add
in
add
sbb
xchg
ficomps
inc
add
addr16
add
dec
sbb
scas
xchg
lret
adc
xchg
rcll
xchg
loope
aaa
mov
sbb
test
xchg
pop
clc
add
jo
mov
aad
add
sub
cmp
xchg
dec
call
call
dec
gs
jne
xchg
lea
xor
mov
or
sbb
xchg
cmpsb
repnz
nop
push
mov
or
dec
sbb
add
into
sbb
les
dec
inc
lock
nop
mov
pop
push
fs
push
dec
adc
mov
shrb
lds
lods
or
mov
or
jmp
mov
add
mov
jl
dec
call
nop
mov
push
inc
xor
je
or
or
dec
aad
add
add
mov
dec
imul
adc
in
sbb
push
je
and
mov
repz
in
shl
or
mov
and
push
cwtl
pop
sub
cmpsb
rolb
xor
mov
jp
clc
sbb
dec
movsb
sbb
repnz
fsubr
hlt
or
add
ret
sub
or
jle
fisttpl
jecxz
push
mov
mov
push
idivl
movl
fimull
fsubr
xchg
sbb
fldcw
jp
mov
or
lds
and
push
pop
lahf
sbb
mov
mov
movsl
gs
in
or
push
test
pop
je
sub
pop
cmpsb
push
loopne
or
push
inc
cmp
sub
inc
add
push
jns
and
adc
pop
loop
jo
add
les
jne
push
pop
ss
sbb
rcrb
fwait
mov
ficoms
dec
adcl
sti
andb
jnp
xchg
ja
ds
sbb
push
sbb
popa
subps
sbb
sbb
loop
sub
das
inc
jecxz
xorb
es
mov
movsl
insl
push
push
push
dec
fdiv
pop
es
cmp
loopne
jbe
xchg
inc
pop
pop
pusha
push
push
call
insl
inc
or
movsl
mull
sub
pop
and
and
sar
mov
cmp
xchg
aam
or
pop
pop
and
test
into
xor
push
jb
call
jge
mov
ds
xlat
rolb
vunpcklps
addr16
xchg
xchg
test
pusha
jo
jne
in
push
lds
sbb
or
push
faddl
cmp
and
popa
and
or
and
rorb
mov
imul
mov
or
mov
dec
fidivrl
push
faddl
cmpsb
imul
mov
mov
xlat
call
rcl
mov
xor
xor
pop
mov
mov
loop
ret
add
lea
and
add
stos
pop
mov
add
jmp
enter
sub
xchg
aas
xor
es
call
mov
jle
push
mov
mov
in
push
adc
and
rcrb
push
adc
pop
xor
rcrb
push
add
lea
aaa
popa
dec
lcall
jl
mov
rep
xor
sbb
movsb
push
ret
push
mov
sub
dec
shll
jle
rcll
jnp
mov
cmp
jne
cli
addr16
es
add
xchg
mov
jne
pop
sub
push
mov
mov
aam
push
pop
lahf
fld1
xchg
repnz
shlb
cmp
mov
shlb
orl
loope
lock
jb
sbb
dec
mov
and
ljmp
pop
pop
stos
je
xchg
add
or
nop
or
cmpl
push
mov
push
nop
jle
je
xchg
outsl
ret
mov
call
addl
ds
xchg
cmc
mov
ret
sbb
iret
movsl
pop
xchg
jb
adc
xchg
pushf
lea
push
ss
imul
into
rcl
divb
add
ret
lret
xor
jo
push
loopne
mov
cmpsl
cmp
mov
adc
aas
js
cmpsl
xor
mov
sbb
cmpsb
std
sub
adc
mov
enter
push
adc
push
push
or
insb
or
and
scas
adc
insl
push
sbb
rclb
xchg
sbb
add
add
adc
call
inc
cmp
jle
jmp
pop
xor
push
adc
dec
decl
push
gs
in
pop
add
dec
in
in
imul
push
and
adc
outsb
adc
mov
jg
scas
adc
and
in
xor
sub
xor
mov
pop
or
and
sub
xchg
in
enter
les
dec
lds
push
adcl
mov
leave
sub
mov
jno
inc
nop
push
or
sbb
in
mov
push
loope
pop
mov
orb
lds
stos
repnz
mov
mov
mov
mov
mov
cmp
mov
and
je
in
in
js
dec
fsub
push
cmp
adc
mov
jge
fcomps
imul
mov
imul
sbb
popa
mov
ja
push
cmpsl
adc
mulb
pop
aam
adc
dec
out
sub
sbb
jne
mov
sbb
xor
lods
lods
push
cmp
arpl
ja
std
fidivrs
push
jbe
xor
sbb
push
test
add
mov
mov
xor
outsb
cmpsb
adc
jmp
div
push
mov
test
inc
enter
fcom
sub
adc
sub
add
fcomps
pop
popa
add
lcall
aad
mov
mov
mov
jecxz
repz
push
sub
mov
push
call
jb
fstps
fs
in
dec
adc
imul
rorb
int3
adc
sub
cmp
mov
rclb
sbb
add
call
loop
test
cld
rcrb
movl
add
ss
or
or
scas
and
xorb
jo
lea
scas
jns
dec
das
ret
push
or
push
icebp
or
gs
pop
filds
add
xor
push
add
add
out
enter
add
sbb
fisttpll
or
mov
jbe
clc
jb
add
mov
or
inc
ret
mov
inc
and
iret
in
inc
xchg
ja
xor
inc
dec
pop
and
je
or
jne
addb
or
je
mov
mov
cmp
adc
or
loopne
outsb
adcb
dec
or
inc
sti
inc
movsb
mov
jmp
add
xor
bound
jmp
mov
fs
sbb
mov
adc
xor
hlt
shll
push
nop
push
cld
lcall
call
popf
rorl
adc
push
hlt
xor
test
sub
lds
clc
push
mov
add
lcall
mov
xor
lods
jbe
jp
aam
cmp
xor
sbb
xor
nop
push
xchg
xchg
fiadds
xor
sarb
sbb
inc
test
loope
cmp
jle
jg
jne
push
loopne
lods
sbb
push
mov
mov
notl
push
inc
rcrb
fildl
add
out
fiaddl
lret
dec
test
rcrl
imul
add
pop
mov
or
jnp
mov
ss
stos
std
std
xchg
movhps
sbb
cld
cmp
cli
adc
inc
inc
test
rorl
xlat
out
call
sub
mov
ljmp
or
push
push
xchg
xor
inc
adc
push
sbb
pop
push
sahf
cmp
pop
push
jnp
sub
pop
or
adc
std
adc
out
and
push
push
ds
test
cmp
outsl
mov
jne
cmc
aad
xchg
cmp
bound
mov
pop
mov
lock
add
mov
or
mov
mov
sahf
inc
xchg
imul
lock
test
sbb
je
aaa
sub
subl
push
pop
jnp
cmp
add
int
mov
dec
adc
or
sub
movsl
mov
jmp
mov
push
xor
jl
mov
or
mov
or
sahf
or
sbb
fidivl
aaa
sbb
push
push
jge
pop
inc
icebp
daa
js
cmp
mov
adc
pop
cmp
or
push
ret
xchg
les
push
sbb
mov
xor
fcmovnu
xchg
test
push
mov
sbb
mov
push
call
mov
ret
sub
fwait
jo
in
jbe
shll
decb
sbb
sbb
push
xor
xchg
sarb
mov
dec
push
or
enter
add
and
or
in
std
jmp
and
xor
outsb
mov
and
push
in
mov
or
or
or
imul
js
add
pusha
test
mov
mov
cmpb
jl
rorb
cmp
add
andb
mov
cmp
add
pop
sub
push
push
add
mov
rolb
mov
push
add
fcomps
in
test
dec
and
push
pop
adc
mov
dec
repz
sbb
cmp
add
add
jns
sbb
adc
jne
mov
jmp
or
xchg
mov
inc
sbb
or
sbb
push
xchg
mov
dec
add
xchg
xor
mov
or
push
jo
sbb
push
adcl
out
and
loop
addb
add
call
mov
pop
loope
test
ljmp
add
pop
jo
cmpsb
and
mov
dec
icebp
push
push
mov
test
loopne
cmp
outsl
sbb
movsl
mov
mov
mov
xorb
push
push
mov
arpl
or
das
in
add
xchg
stos
jg
mov
push
fucomip
cmp
je
cmp
jbe
movsb
xchg
or
cli
mov
subb
clc
push
and
mov
pop
jbe
sbb
add
jne
or
daa
loopne
loope
inc
push
in
std
dec
push
mov
int
hlt
pushf
cli
adc
adc
lods
and
xor
pushf
loop
fmull
test
inc
jmp
sbb
scas
into
or
xor
fwait
add
movsb
adc
xchg
test
xor
mov
data16
mov
and
mov
push
push
inc
mov
imulb
enter
jmp
push
push
mov
popf
in
fsubr
jo
cmpsb
clc
icebp
mov
sbb
lock
cltd
adc
pop
mov
sub
sbb
lods
stos
cmp
inc
adc
movsl
rolb
loopne
into
gs
adc
push
and
and
rolb
test
lods
out
xchg
addb
and
dec
dec
movsl
jp
loop
cmpsl
roll
loop
pop
jl
pop
push
lea
mov
movsl
sbbl
ljmp
xchg
aam
xor
mull
push
sub
push
push
cmpsb
aam
aaa
aad
push
in
sbb
push
pop
popa
fsubrl
call
pop
addb
je
xorb
mov
push
push
in
fdivrs
ret
pop
scas
ret
scas
mov
jae
js
lret
ja
push
xor
sub
add
add
or
push
adcl
adc
mov
lods
in
or
addr16
fsubrs
sbb
mov
nop
mov
shrl
mov
pop
rcll
and
or
mov
inc
inc
mov
fcmovu
add
xchg
in
mov
mov
lock
dec
push
hlt
mov
pop
cmp
adc
fsts
ss
clc
repz
cmp
push
sbb
or
mov
je
std
mov
pop
mov
add
or
pop
adc
insb
sub
dec
movl
mov
push
dec
shl
adc
add
jge
push
imul
jne
ss
call
lea
sbb
mov
or
subb
jne
addr16
push
sbb
push
mov
int3
sbb
jne
into
cmp
pop
int3
inc
addr16
ss
sbb
mulb
push
and
pop
and
out
je
int3
jecxz
outsb
bound
jns
outsl
sbb
lds
aaa
jmp
nop
xor
push
sahf
jae
imul
inc
sarl
mov
icebp
call
notl
sarb
mov
pop
cld
push
mov
aaa
dec
setb
outsl
je
push
cmp
xchg
mov
int
jmp
repnz
sbb
call
ljmp
ret
cs
xor
sbb
sahf
mov
push
dec
xor
fnstcw
dec
pusha
mov
jmp
pop
xorb
jmp
mov
inc
or
mov
xor
push
pusha
movl
push
icebp
dec
sbb
fadds
inc
ret
aad
mov
out
out
std
jmp
xchg
jne
add
push
call
jb
sbb
in
movsb
jmp
js
sbb
aad
test
or
aad
mov
sbbl
push
xor
call
int3
jbe
clc
xor
adc
mov
add
cmpsb
and
out
bound
push
cld
outsb
je
push
stc
sub
pusha
push
inc
pop
adc
mov
push
sbb
lahf
xor
jo
or
fisttps
cwtl
or
popf
pushf
or
cmp
insb
mov
call
and
rolb
push
fs
inc
mov
mov
lock
loopne
or
pusha
ja
cmp
jg
push
or
mov
je
or
mov
pop
mov
orb
sbb
mov
xor
mov
icebp
mov
insb
adc
and
nop
push
push
scas
clc
dec
or
mov
cmp
fadds
dec
jne
movzbl
add
push
push
adc
xor
movsb
nop
lret
mov
or
test
sbb
icebp
lea
out
or
pusha
dec
dec
rorl
xchg
shlb
fsubl
jmp
lods
jmp
fistpl
fldt
push
cli
sub
pushf
jecxz
test
xor
or
and
ja
xchg
jne
inc
xorb
adc
inc
xor
inc
pop
rclb
test
mov
into
inc
shrb
dec
and
out
add
pop
shrb
imul
dec
call
stc
loopne
mov
xchg
daa
sahf
add
sub
nop
movsb
adc
xchg
movsb
xchg
lock
push
push
call
outsb
sub
or
mov
push
jp
test
dec
dec
and
shrb
inc
je
icebp
push
push
xor
jmp
mov
push
pop
or
aas
dec
jnp
mov
inc
mov
pusha
xor
sti
enter
jnp
xchg
insl
lods
shll
aad
mov
jge
lock
xchg
adc
pop
inc
sahf
xchg
xor
rcrl
mov
mov
cmp
fstpt
shrl
or
flds
ror
ss
add
adc
mov
sarl
insb
ret
jbe
shr
xor
xor
and
sbb
adc
xor
loopne
sbb
sub
scas
leave
ficomps
shll
push
roll
dec
rcll
daa
and
rcl
mov
adc
or
mov
push
mov
dec
pop
pop
popa
pusha
xor
lds
adc
lahf
push
andb
or
or
or
call
out
out
in
inc
callw
pop
call
call
jle
cmp
dec
aam
sti
mov
mov
push
jns
cmp
call
sbb
call
int3
pop
jmp
xchg
sbb
aam
mov
sti
pop
cmp
and
mov
decl
inc
jge
mov
or
pop
psubsb
add
out
clc
scas
pop
jmp
mov
xor
pop
xchg
pushl
cmp
jmp
add
pop
xchg
sbb
mov
les
cmp
push
test
jecxz
popf
xor
je
push
into
cmp
adc
fimull
jmp
mov
fldcw
lds
rolb
or
inc
inc
push
push
mov
call
inc
add
push
pop
mov
mov
sbb
or
adc
leave
test
pop
pushf
or
lock
dec
mov
or
or
pop
mov
push
pushf
mov
mov
test
and
arpl
mov
incb
mov
stos
shll
dec
cmpsb
add
movsl
or
cld
aad
es
add
repz
stc
mov
sarl
je
jmp
movsb
imul
xchg
imul
add
cs
mov
iret
pop
fadd
jmp
or
and
mov
ficomps
cltd
and
cmp
push
inc
and
js
shrb
int3
pop
addr16
push
xor
jbe
and
imul
xor
push
push
push
sbb
rcll
inc
fistpl
scas
sub
push
clc
icebp
enter
outsl
pop
aaa
or
outsl
roll
shr
aad
cmp
movsl
adc
add
add
int3
jns
cmp
in
inc
pop
or
and
add
inc
aad
inc
ja
push
inc
cmp
push
xchg
pop
rolb
push
addl
cmp
mov
push
fld
and
movl
test
out
addl
mov
test
nop
ficompl
imull
inc
lods
lret
call
nop
add
out
andl
add
push
lods
out
gs
cmc
push
inc
dec
out
cmp
cs
pusha
nop
push
in
nop
sub
or
or
out
lret
nop
sbb
dec
mov
xchg
xor
sub
cmp
repz
adc
add
loopne
mov
nop
jmp
push
jno
shl
out
mov
pushf
daa
mov
lock
popf
divl
daa
pop
nop
add
and
dec
mov
pop
outsb
add
les
repz
push
mov
ror
mov
fisttps
loopne
inc
cld
or
sub
adc
push
bound
shl
add
jno
daa
or
mov
inc
push
lahf
sbb
lea
mov
or
jmp
outsb
loop
or
insb
and
adc
dec
pushf
push
add
jmp
cmp
je
mov
add
sub
cltd
cli
mov
lahf
ret
lea
jge
call
xor
push
pop
add
xchg
stos
cmp
sahf
out
in
add
add
test
inc
dec
sbb
iret
sti
pop
jo,pt
cmp
je
xchg
add
mov
add
sub
sbb
push
push
gs
inc
sahf
pop
pop
inc
or
xchg
mov
or
out
dec
fimuls
cmp
cld
add
loopne
mov
or
and
or
push
repnz
or
or
push
or
pop
leave
push
push
orps
adc
jnp
scas
negb
or
adc
in
add
adc
enter
adc
adc
add
adc
adc
sbb
pop
adcl
enter
inc
cs
enter
and
mov
sbb
sahf
mov
cmp
sbb
sbb
mov
cmp
sbb
cmp
sbb
push
sbb
addr16
sahf
push
jo
xor
sbb
sahf
push
push
inc
negb
pop
rclb
ret
popa
test
xchg
push
add
cmp
xchg
jmp
cwtl
xchg
jns
xor
push
in
imul
rcl
repnz
dec
push
ret
in
in
repnz
mov
push
repnz
out
in
fdivl
jne
adcb
or
push
ud2
mov
sahf
xchg
sub
jmp
pusha
in
push
jmp
jmp
dec
pop
lods
call
in
repnz
xor
in
xchg
aad
xor
out
in
cmp
mov
sbb
pop
leave
out
xchg
out
or
nop
out
xorl
lock
dec
icebp
cmp
push
rolb
das
jnp
or
adc
repz
std
jnp
aam
hlt
hlt
imul
cmp
cmc
cmc
cmp
cmpsl
div
mov
or
popa
negl
gs
scas
addb
clc
clc
or
inc
stc
stc
and
dec
sahf
cli
cli
add
outsb
sub
nop
sti
fdivrp
cld
cld
je
mov
push
push
nop
shlb
mov
leave
repz
in
std
sbb
scas
xchg
lea
ret
sarb
shll
jle
or
pushf
call
jmp
fwait
or
jecxz
jecxz
and
xor
pop
in
sub
cmpl
aam
dec
push
jo
or
out
xchg
das
test
scas
scas
call
movsl
sbb
cltd
rcrb
or
xchg
stos
or
cltd
xchg
pop
leave
or
sti
jmp
rorl
mov
mov
mov
cli
mov
aas
repz
movsb
repz
sbb
push
cli
stc
dec
jo
jns
stc
imul
mov
pop
push
lea
cltd
jb
sbb
sbb
xor
sti
sti
sti
dec
fmulp
aad
or
cmp
mov
clc
mov
jo
test
and
aad
mov
dec
subl
cld
dec
loop
sbb
arpl
jns
mov
and
sub
add
or
xor
out
fdiv
inc
repnz
loope
idivl
inc
mov
sahf
testl
ljmp
jmp
notl
add
push
pop
testl
xchg
pop
push
sub
scas
testb
cmp
nop
testb
repnz
repz
xchg
pop
leave
sub
or
mov
out
div
notb
aad
add
in
pop
mov
das
sbb
cmc
push
popa
imul
mov
loope
cmc
adc
nop
cli
hlt
or
xlat
inc
aad
jle
lock
push
jo
push
lods
or
mov
je
or
clc
sti
mov
jb
out
loope
loope
jp
jns
xor
pushf
pusha
pop
repnz
mov
hlt
roll
repnz
repz
repz
mov
inc
mov
or
xchg
repz
andb
pop
repnz
sbb
cltd
or
in
jmp
jb
mov
and
mov
jne
jp
test
cmp
icebp
icebp
jno
scas
out
xchg
pop
adc
repnz
repnz
icebp
cmc
cmc
dec
dec
push
arpl
and
mov
lock
jb
mov
cwtl
icebp
or
out
stc
mov
dec
icebp
xor
mov
adc
or
push
jmp
mov
test
pop
sahf
push
jp
jmp
insb
add
sub
fildll
push
inc
insb
loope
push
sti
jp
inc
cmp
cmp
xchg
cmp
mov
adc
mov
rol
btc
fiaddl
jne
stc
xor
sarl
dec
add
movsb
xchg
dec
add
cs
inc
ss
movsb
sti
or
push
adc
int3
dec
mov
popa
mov
nop
push
jns
adc
aaa
ss
out
or
push
add
dec
repz
jecxz
iret
shrl
dec
mov
int
sti
cmp
in
push
push
aad
in
xchg
idivl
jnp
gs
dec
outsb
or
sub
or
add
daa
inc
cli
mov
push
push
inc
and
lea
inc
cmp
and
xor
cmp
push
nop
xchg
imul
call
int
aam
je
jg
fists
push
cmp
jo
push
or
dec
push
inc
sarb
push
aaa
addb
push
sbb
jnp
add
sub
xor
mov
mov
daa
cmpsb
loopne
or
pop
call
jo
xor
add
shrb
jmp
and
pop
add
call
push
repnz
push
or
call
dec
push
fwait
adc
mov
sub
lret
adc
xchg
push
movb
adc
sbbb
insb
sbb
mov
icebp
imulb
dec
jb
icebp
xor
ret
movsl
lock
ja
pop
cli
adc
les
js
ja
sbb
pop
xor
stos
adc
push
adc
or
sub
add
pop
rorb
sarl
cmp
rclb
dec
int
jb
xor
and
and
push
jbe
add
xchg
jns
call
xchg
dec
pop
xchg
sbb
inc
and
inc
push
add
add
and
xchg
pop
xchg
pop
loope
inc
arpl
sub
js
orw
push
jo
and
add
push
ljmp
mov
and
or
pushf
ret
mov
mov
sbb
inc
mov
mov
dec
testb
dec
pop
push
mov
mov
pusha
push
add
andb
add
add
andb
inc
mov
rcl
pusha
sub
xchg
int3
pop
adc
inc
add
je
addl
jb
cmpsb
xor
pop
movsl
mov
or
or
xchg
inc
add
mov
xor
push
push
addr16
pushf
add
je
inc
scas
or
push
or
sub
sti
adc
dec
dec
loop
lahf
stc
push
push
dec
jle
lahf
push
xor
and
shlb
shll
or
dec
adc
xchg
je
fsubrl
inc
mov
lret
in
and
sti
and
xchg
push
lahf
mov
in
adc
fwait
in
adc
repz
add
mov
jmp
mov
or
lahf
adc
cli
xchg
or
cmp
sbb
lahf
into
mov
sbb
inc
or
addb
lret
leave
test
push
sbb
add
add
loopne
or
lahf
inc
mov
or
mov
cmp
jl
add
pushf
pop
and
nop
jmp
imul
inc
daa
daa
test
sub
daa
daa
and
shld
xchg
inc
push
xor
push
out
or
pop
lahf
xchg
or
jecxz
mov
lahf
mov
mov
inc
inc
lahf
mov
inc
lahf
sbb
outsl
in
adc
or
sbbb
dec
pop
lahf
inc
inc
mov
test
dec
inc
mov
in
inc
inc
sbb
pusha
or
push
addb
mov
add
fdivs
test
insb
pop
add
nop
fs
add
add
inc
dec
or
mov
loopne,pn
call
lods
sahf
push
stc
aaa
or
iret
adc
je
fcompl
das
inc
xorb
pop
outsl
jmp
mov
cmp
add
add
dec
les
lahf
aam
jmp
push
fidivs
xchg
les
inc
nop
dec
movsl
sbbb
mov
xchg
sbb
xchg
xchg
xor
outsl
push
inc
inc
pop
popf
add
push
cmp
push
cmp
sub
lods
and
pusha
addl
arpl
rcrb
ds
push
xor
pop
mov
in
lds
in
pop
mov
fcmovnb
or
inc
inc
xchg
dec
inc
clc
orb
add
test
inc
jle
mov
pop
addb
add
aaa
adc
xor
sbb
sbb
or
cmpsl
scas
sub
subl
or
decl
and
mov
jle
push
add
adc
add
xor
mov
std
ss
int3
xchg
cmc
cmpsl
or
bound
xor
or
lods
jo
shl
adc
jle
movb
mov
or
lea
jb
loopne
aam
inc
jp
in
add
mov
loopne
shlb
sti
jmp
mov
lds
rolb
nop
add
cmp
movsl
imul
cltd
or
test
fistpll
sti
shr
data16
data16
and
test
or
test
pop
iret
dec
int
bound
or
cmp
xlat
jl
popa
aas
ss
xor
inc
pop
mov
add
mov
sub
stos
cmp
loopne
and
and
sarb
adc
cmp
cmp
int3
push
test
add
dec
cmp
aam
pop
vorps
inc
inc
dec
aaa
dec
mov
xor
movsb
adc
pop
test
cwtl
mov
sahf
xor
cmp
mov
adcl
push
dec
ja
sub
shrb
mov
and
xor
into
and
mov
loop
cmp
mov
lods
mov
push
mov
cmp
int3
xchg
adc
sub
sbb
push
jo
rcl
sub
or
loopne
adc
shlb
test
addb
jb
mov
aad
sbb
dec
dec
repz
clc
xor
cmp
nop
adc
mov
shrb
sbb
lahf
call
je
sub
inc
sub
add
repnz
fs
or
sbb
mov
add
pop
insb
in
rcr
les
pop
shrb
je
ljmp
mov
sarb
sub
or
or
inc
pop
xor
adc
sub
inc
mov
add
push
inc
sub
addb
or
sub
push
sub
jae
inc
dec
sub
sub
inc
leave
loopne
cmpl
cli
enter
xchg
shrb
inc
inc
inc
sub
sub
inc
inc
sub
sub
dec
add
xlat
inc
inc
das
ss
mov
fs
adc
sub
lret
add
adc
rcl
or
sub
sub
rcl
shrb
lods
mov
or
stos
sub
sub
sub
movsb
inc
inc
sbb
fsubs
xor
nop
aad
sub
addb
push
repz
mov
or
outsb
sub
ja
addb
inc
inc
inc
sub
jo
out
imul
inc
out
jb
jno
sbb
inc
sub
in
loopne
pop
movsl
test
test
push
ds
pop
add
inc
imul
rcl
cmpl
inc
sub
pusha
push
add
addb
sbb
and
add
xchg
and
add
subb
aam
push
inc
inc
sub
movsl
add
cs
into
inc
add
lods
rclb
mov
das
push
inc
inc
aaa
sbb
sub
movsb
into
in
fwait
or
jmp
mov
rclb
mov
mov
mov
cmp
aam
nop
or
sub
sub
dec
sub
je
inc
inc
sub
add
sub
call
out
adc
ret
sub
cmp
jae
add
sbb
adc
add
gs
add
push
call
or
int
dec
mov
loope
enter
popa
inc
inc
sub
out
mov
in
mov
or
add
or
sub
pop
or
insl
movb
xor
and
jo
mov
pop
shrb
xchg
ja
or
je
dec
add
addr16
int
cld
add
sti
lret
outsb
sbb
push
adc
sub
jbe
pop
addl
pop
dec
or
cmp
xchg
and
pop
inc
and
adc
nop
sub
ret
imul
jp
hlt
and
dec
push
inc
xor
inc
les
rcl
je
lods
push
or
fisubrl
add
pop
add
and
clc
js
je
xor
push
pop
xor
shlb
jg
cmp
mov
cmp
sub
sub
fs
xor
cmp
fs
push
jno
fs
dec
dec
pop
cmp
dec
and
add
sti
xor
push
call
adc
rorb
sub
cmp
daa
adc
mov
sub
sbb
jno
ds
jle
icebp
leave
jmp
xor
jecxz
jbe
imul
and
adc
dec
add
daa
icebp
mov
repz
mov
in
pop
xchg
cmp
or
add
push
xor
or
rorb
sub
in
testb
bt
sbb
cmp
mov
cmp
jbe
and
mov
mov
nop
jae
dec
add
popf
test
jbe
fiadds
std
ss
andb
in
add
mov
pushf
jl
dec
inc
pop
in
nop
popa
and
add
push
sbb
add
call
fwait
add
xchg
add
dec
enter
sbb
dec
add
les
sbb
or
mov
mov
sbb
popf
ret
or
sbb
popf
xchg
pusha
cmp
xchg
pop
mov
add
popf
xchg
push
sub
and
orb
out
sbb
test
push
mov
addr16
cltd
imul
cmp
es
dec
insb
cmp
jge
inc
push
dec
sbb
fcoml
cmpsl
sbb
push
mov
add
jb
movsl
cwtl
xchg
inc
xchg
jb
arpl
inc
push
xchg
leave
ret
inc
shlb
add
or
sub
push
xchg
call
xchg
inc
rolb
jl
mov
jp
aam
in
cli
xchg
dec
orl
and
and
add
or
je
pop
test
and
mov
xchg
leave
xchg
es
popa
adcb
pop
add
pop
fwait
add
add
xchg
hlt
out
or
or
cmpb
xchg
enter
sbbb
and
xor
adc
stc
add
and
lcall
ss
pop
sbb
or
push
jle
inc
cmp
mov
push
sbb
or
adc
jp
or
pop
call
and
inc
fimuls
call
cmp
inc
cmp
or
or
inc
mov
cwtl
inc
adc
ret
movsb
sub
inc
jb
inc
sub
sarl
inc
xchg
ret
testb
outsb
mov
nop
push
push
inc
mov
inc
mov
movsb
inc
dec
mov
or
sbb
inc
mov
sub
xor
outsb
mov
ret
negl
loope
inc
and
push
sbb
push
inc
xor
sbb
stc
sbb
cmp
dec
push
inc
loopne
rorl
inc
jmp
pop
push
sbb
mov
lea
mov
call
nop
out
mov
cmp
scas
sbb
jo
pop
adc
or
pop
test
adc
mov
and
cmp
je
cmp
and
mov
pop
cs
mov
mov
push
push
sub
inc
imul
ret
iret
mov
mov
mov
inc
lea
and
sbb
test
mov
pop
test
mov
sbbb
xorl
cmpsb
mov
mov
test
inc
daa
je
ret
mov
push
dec
aam
mov
mov
mov
xor
outsb
jae
loop
sub
push
cmp
adc
add
push
pop
jmp
call
movsb
add
inc
sub
cmpsl
inc
out
jl
je
add
call
call
or
fs
and
cmc
adc
add
lds
hlt
mov
adcl
pusha
out
test
jo
sub
push
fcmovnu
gs
jns
push
cmp
xor
and
add
lods
mov
sub
adc
aad
pusha
arpl
loopne
adc
push
adc
out
pop
sbbl
ljmp
rorl
and
or
adc
in
aam
cld
mov
nop
inc
and
cmp
pop
push
push
inc
jb
shlb
in
add
jb
xor
push
inc
call
icebp
pushf
inc
pop
inc
inc
imul
ss
pushl
mov
mov
add
test
dec
dec
dec
or
jne
push
or
lret
xor
cmp
add
cmp
inc
jmp
dec
jmp
pop
das
or
xor
push
inc
inc
or
and
sbb
fidivs
inc
inc
inc
pop
je
pop
testb
and
sarl
push
popa
add
and
adc
xor
xor
xor
add
mov
rorl
xchg
xorb
subb
cmp
cld
sbb
and
cmp
leave
or
pusha
mov
call
pop
inc
add
xor
inc
jmp
xchg
pop
add
adc
push
movsb
lods
popf
pop
pop
loope
add
cwtl
jg
mov
add
int3
adc
std
enter
arpl
add
loop
pusha
popa
push
mov
cmpsb
xor
and
jnp
push
sbb
shl
popa
jecxz
inc
cld
shll
call
cmp
div
fdivs
inc
shl
shlb
jb
cmp
repz
jbe
jne
fisubrs
jge
push
push
or
inc
dec
mov
cmpsl
add
aam
xor
test
xchg
add
ja
cmp
xor
movzwl
loopne
adc
push
add
ret
push
sbb
cwtl
loopne
clc
inc
push
adc
xlat
xchg
dec
cli
sub
cmp
mov
ds
sub
ss
pop
hlt
dec
sub
lcall
adc
sub
fistl
xlat
test
nop
mov
and
sbb
roll
andl
ret
test
arpl
mov
jecxz
inc
and
dec
call
xor
cmpsl
mov
mov
add
sub
xchg
mov
stos
add
mov
in
orl
mov
das
xchg
or
and
je
cli
or
lock
mov
lock
addl
das
add
mov
cs
shl
push
xchg
xchg
push
sub
or
push
sub
mov
ret
xchg
lock
loopne
cmp
sarb
mov
dec
js
insb
push
push
jbe
rol
or
lret
in
mov
out
mov
stos
inc
push
enter
push
xlat
cmc
fists
cmp
loopne
xor
xlat
sbb
call
mov
mov
popa
mov
xchg
inc
pop
call
dec
loopne
and
or
les
mov
ja
cmp
mov
sbb
pop
xchg
push
lea
nop
mov
xchg
int3
shl
jge
xchg
cmpsb
cmp
mov
dec
push
add
pop
add
push
fwait
dec
sbb
pop
inc
xor
add
aaa
pop
sahf
or
loop
add
int
push
ss
dec
lea
mov
imull
int3
push
int3
clc
adc
popf
ret
xchg
xchg
or
cmp
xchg
jnp
push
mov
xchg
adc
nop
stos
adc
pop
dec
cmp
inc
pop
notb
fsubrp
pop
rcll
jge
and
inc
mov
mov
jg
add
sbb
hlt
mov
mov
pushf
sub
dec
push
imul
push
lcall
xchg
or
inc
xchg
ret
xchg
or
mov
mov
fdivrl
fs
rcl
cmc
es
or
jle
movzbl
and
dec
sbb
adc
push
mov
dec
jns
add
pushf
fsubrl
inc
sbb
cmpsb
mov
lret
adc
cmpsl
xor
dec
push
popf
xor
mov
jns
add
dec
add
or
test
mov
movsb
fsubp
sub
or
xor
outsl
shll
cmpb
pop
cmp
and
cmp
nop
and
dec
and
xchg
xor
enter
or
inc
push
loopne
adc
sbb
das
add
push
inc
mov
in
ljmp
fbstp
in
mov
pop
and
push
jmp
daa
iret
hlt
add
mov
xor
sbb
dec
insl
xor
addl
sub
enter
ret
pusha
add
add
xchg
jmp
into
sbb
es
xchg
sbb
inc
in
clc
mov
mov
in
out
nop
mov
nop
jge
mov
sub
pop
or
xchg
xor
sbb
fildl
aaa
sbb
aaa
sbb
loope
pop
sub
popa
xchg
mov
lock
nop
sbb
push
mov
mov
loopne,pn
mov
rorb
push
rol
bnd
sbb
leave
inc
inc
inc
adcb
dec
in
sub
mov
in
rcrb
pop
sub
lods
sbb
movb
adc
rcrl
fwait
pop
xchg
mov
xchg
sbb
in
in
in
xchg
lods
cmp
mov
push
jne
movsb
xchg
shlb
mov
loopne
rol
mov
hlt
loopne
mov
sbb
sbb
and
push
adcl
loopne
sub
sbb
xchg
xchg
outsl
and
sbb
test
insl
jb
mov
mov
lret
call
je
jne
or
pop
mov
bound
call
and
jecxz
mov
addb
scas
or
or
push
test
hlt
dec
stos
dec
sub
jne
cmp
lahf
add
mov
mov
ss
cmpsb
and
call
enter
ss
lock
adc
push
mov
dec
xchg
lds
mov
test
jbe
pop
sub
sbb
push
xchg
adc
and
insb
push
aas
adc
xlat
inc
out
mov
rolb
je
push
mov
mov
mov
bound
cwtl
daa
rolb
addr16
pop
inc
add
cltd
sbb
xor
adc
push
adc
sbb
inc
inc
aaa
add
shlb
pop
push
cwtl
dec
addr16
push
call
push
mov
inc
mov
mov
push
shll
adc
sub
orb
je
lea
sub
daa
push
xor
push
cmp
int
push
cmp
mov
mov
xchg
or
scas
push
mov
jne
fldl
cs
mov
xchg
mov
loop
mov
xchg
mov
dec
lods
mov
daa
sub
dec
jl
ss
movsl
sub
mov
xor
aad
xchg
call
mov
push
sbb
dec
pop
and
pop
or
pop
push
jbe
test
push
push
fcoms
dec
pop
inc
sbb
add
packuswb
ja
test
mov
jnp
mov
push
fcom
push
inc
or
pop
js
ja
mov
aam
pop
call
inc
push
push
popa
dec
scas
out
dec
hlt
push
call
int3
jns
and
sub
adc
movsl
xor
bound
and
popa
mov
jge
jns
inc
call
jp
mov
jns
stos
cmp
mov
sub
pushf
cs
add
sub
aad
rol
lret
xchg
jb
adc
js
dec
push
and
inc
enter
add
sbb
adc
movsl
adc
jns
lea
mov
jns
int
sbb
sbb
jns
adc
sbb
jns
movsb
inc
scas
adc
ljmp
sub
xor
adcb
scas
xlat
push
test
aaa
call
mov
int
xlat
lods
movsl
xor
ss
mov
sub
jecxz
mov
jns
int3
ror
mov
mov
sbb
jns
std
enter
xor
mov
jns
fadds
push
mov
jns
pop
out
mov
jns
cmpsl
mov
fildl
mov
fs
jns
test
out
mov
and
push
pusha
adc
movsb
xor
adc
xor
mov
xchg
xchg
jns
mov
mov
jmp
xor
xor
inc
adc
out
lcall
push
and
inc
jns
push
test
jns
mov
aad
pusha
jns
push
add
mov
or
xor
inc
mov
hlt
lods
jns
lea
in
jns
and
mov
adc
inc
aaa
lea
sbb
lret
jns
jg
cmpsl
in
inc
mov
sbb
add
push
popf
sbb
sbb
dec
imul
pop
loope
and
cmpsl
loopne
rcrb
int3
lds
bound
xor
xor
aam
lea
je
in
jns
push
sbb
into
mov
mov
lds
test
and
cmp
aad
pushf
sbb
inc
inc
cld
jecxz
mov
inc
inc
fdivrl
mov
pusha
popa
add
xor
cmpsl
adc
push
int
call
enter
jns
and
adc
jns
ja
push
mov
and
sbb
or
popa
push
insb
sbb
push
sub
pop
test
sub
imul
je
pop
sbb
and
dec
pop
test
sbb
inc
pop
cmp
or
or
js
test
and
sbb
loop
cmp
icebp
push
sub
and
pop
popa
enter
cmp
inc
sbb
dec
pop
dec
pop
and
and
cmp
push
gs
sbb
inc
sbb
xor
inc
pop
or
jge
xchg
cmp
fiaddl
xor
rolb
adc
ret
or
call
pop
jae
pop
test
sub
test
mov
mov
les
push
aas
jnp
ror
xchg
push
push
push
sbb
mov
in
das
xchg
pop
dec
cmp
movsl
mov
roll
repz
leave
pusha
push
mov
pop
inc
push
sub
push
shlb
inc
enter
mov
sub
sub
and
ss
int
inc
sub
scas
cltd
sub
push
inc
test
shrl
jle
decl
mov
sbbl
bound
or
pop
sbb
inc
mov
or
fldl
mov
cmp
mov
jp
adc
add
and
out
scas
test
and
dec
xor
insb
xchg
mov
dec
pop
cmp
mov
jae
add
or
push
sbb
or
jle
push
or
mov
or
sbb
sbb
add
mov
rclb
and
sbb
or
sbb
mov
adc
jmp
sbb
xchg
inc
adc
roll
sbb
adc
dec
sub
push
mov
nop
sub
push
mov
adc
sbb
adc
fcmovnb
mov
mov
loop
dec
push
xor
in
mov
repz
xchg
decb
fs
daa
adc
test
add
push
inc
in
dec
call
adc
lcall
push
push
negl
push
mov
and
icebp
adc
push
pusha
cmp
push
fcoml
xor
xor
xchg
nop
jge
and
dec
xchg
test
mov
mov
hlt
fidivs
pusha
and
inc
addr16
xchg
nop
lret
inc
push
mov
mov
sub
outsl
push
push
mov
rorb
and
popa
rsqrtps
and
cmpb
pop
ret
or
repz
stos
sub
test
lods
mov
and
cmp
mov
push
xor
mov
dec
aam
scas
popa
stc
jb
call
xor
movsbl
das
shlb
call
mov
and
adc
call
repnz
das
xor
clc
lret
xor
lock
call
cmp
loopne
call
mov
call
mov
lret
call
push
call
in
xchg
popf
pop
call
fs
stc
push
jne
call
test
xchg
das
js
pop
jl
push
sub
mov
inc
sbb
cmp
jb
pop
mov
mov
pop
sub
adc
add
push
cs
dec
out
movsb
in
fldcw
fists
ret
movsl
jb
pop
les
ror
mov
xchg
jb
pop
mov
jle
sub
push
test
inc
pop
sub
xor
lret
test
lods
pop
sahf
xchg
adc
add
cs
test
or
loope
xchg
dec
ja
adc
in
mov
and
dec
stos
and
sub
mov
jle
push
cs
xor
cmp
orl
pop
inc
push
inc
frstor
xchg
dec
inc
dec
cmp
xor
movsl
jb
cs
adc
sub
add
nop
add
dec
jo
push
jle
rclb
insb
jb
mov
and
or
inc
lret
dec
xor
cwtl
sahf
mov
pushf
and
mov
loop
std
je
lcallw
and
adc
cmp
dec
inc
sbb
sbb
push
and
xchg
xchg
mov
mov
sbb
imul
xchg
data16
movsb
inc
test
dec
lcall
imul
mov
inc
mov
addr16
nop
out
add
push
rorb
stos
addr16
mov
inc
je
and
lock
shlb
xchg
je
xor
insb
jmp
push
inc
adcb
leave
or
rorl
pop
mov
inc
sub
shl
pop
mov
sub
pop
test
or
pop
das
test
mov
adc
inc
cmp
mov
mov
popa
fst
insl
inc
lods
dec
adcb
lods
and
fbstp
xchg
lods
sbb
dec
fadds
mov
sub
add
cmpb
mov
inc
nop
call
mov
push
ds
rcrb
mov
add
add
xchg
das
add
inc
mov
movsb
inc
shlb
dec
add
cmpb
mov
pop
adc
adc
add
sub
aaa
push
push
dec
sbb
jno
es
mov
mov
movsl
xchg
or
push
mov
test
xchg
shll
rolb
xor
rorl
mov
or
fwait
rcrl
cmp
ret
stc
mov
in
dec
push
mov
push
scas
je
rclb
push
or
cltd
nop
shll
shll
data16
add
dec
es
mov
xor
divl
mov
add
pusha
shl
mov
sub
mov
sbb
xchg
repnz
xor
fs
mov
push
nop
rclb
push
aaa
dec
mov
dec
push
mov
cmpsl
push
arpl
lods
mov
shll
cmp
and
shll
sub
flds
fucomp
inc
cmp
and
cmpsl
dec
rorl
fisubl
mov
test
xor
gs
mov
pop
adc
jecxz
push
jae
rclb
adc
mov
mov
mov
xchg
adc
jmp
and
mov
adc
xchg
adc
dec
adc
fs
adc
leave
and
cmp
movsb
fs
xchg
out
push
call
inc
push
mov
dec
push
xchg
xchg
mov
loopne
adc
sbb
mov
xchg
dec
adc
xor
adc
sub
xchg
outsb
sbb
cmp
dec
jmp
xor
mov
adc
adc
sub
add
jle
and
ret
xor
jns
and
xor
and
cs
pusha
lea
add
xchg
and
and
leave
or
pop
cmpb
outsb
adc
leave
pop
push
jb
fwait
shlb
popa
and
or
adc
or
mov
stos
rorl
adc
and
add
adc
pop
and
call
xchg
or
xchg
adc
and
jno
and
cmp
cmp
inc
inc
arpl
popa
les
adc
dec
js
aad
inc
imul
pop
push
cmp
lret
les
and
mov
inc
push
ret
push
and
ja
addr16
adcl
xchg
addb
ja
call
sahf
lea
sbb
and
mov
movb
cwtl
jmp
adc
and
or
xor
orl
inc
add
xor
nop
or
movsb
push
dec
andl
pusha
leave
pop
push
subl
loopne
add
inc
push
mov
pop
scas
push
inc
push
mov
and
popa
dec
push
dec
repz
mov
nop
push
or
push
sbb
and
int
movsb
mov
push
mov
call
mov
adc
cmpb
jbe
fs
add
jnp
dec
push
mov
cmp
pop
int3
lea
sub
adc
imul
xchg
xor
out
adc
adc
rcrb
dec
aam
rcrb
push
push
aaa
mov
add
and
push
aaa
nop
cmpsb
aam
je
sub
scas
test
jl
popa
pop
inc
inc
sbb
mov
fistpl
cmp
and
xchg
mov
mulb
push
aaa
sbb
aaa
xor
nop
push
aaa
push
dec
inc
pop
dec
aaa
push
xor
aaa
adc
in
aaa
inc
addl
je
push
sbb
jmp
ret
sub
movsb
and
push
nop
sbb
mov
dec
adc
adc
mov
fwait
sub
push
iret
dec
dec
xchg
add
pop
rorb
iret
cwtl
sub
and
iret
mov
movsl
mov
dec
ret
iret
dec
inc
and
or
cmp
into
sahf
sub
fisttpll
pop
pop
pop
daa
mov
adc
and
xorl
or
push
add
ret
push
andb
add
sub
mov
in
ror
jle
mov
and
jp
je
push
fcompl
adc
push
sub
and
movsb
mov
dec
outsl
add
rcll
xor
rcrb
and
movsl
movsl
sbb
add
or
ret
add
popf
push
sbb
and
push
xlat
adc
scas
push
xorb
je
sbb
push
sbb
pop
sahf
cmp
pop
mov
loopne
xor
push
adc
mov
pop
jmp
and
adc
adc
add
mov
xchg
adc
sbb
popa
nop
mov
shll
pop
xor
sbb
loopne
int3
adc
pop
mov
dec
imul
pop
xchg
sbb
inc
cmpsl
cli
push
ret
enter
xchg
sub
inc
adc
mov
imulb
mov
push
out
cmp
int
dec
jns
adc
hlt
cmp
mov
push
push
int3
jns
sahf
jg
push
mov
test
xchg
je
enter
arpl
and
movsb
xchg
sar
and
push
add
pop
pop
imul
pop
inc
dec
xor
mov
mov
push
xor
and
cmp
and
push
ja
lret
or
cltd
sub
daa
mov
or
xor
inc
fwait
nop
and
and
push
sbb
repz
or
fs
sub
or
repz
nop
loope
xor
insb
xchg
cmp
jno
xor
sub
orl
jmp
stos
sahf
sbb
inc
mov
enter
xchg
jmp
hlt
cltd
sbb
shll
adc
fwait
enter
jg
mov
sub
cmp
addr16
arpl
mov
insl
xchg
in
outsl
mov
or
pop
je
push
call
mov
mov
sub
push
jb
pop
fstl
xor
or
out
xor
mov
movsl
hlt
les
inc
sub
sbb
or
sub
mov
sub
pop
mov
inc
fistpl
adc
movsl
xchg
or
ret
mov
inc
ss
xor
or
and
jo
fldcw
sub
add
sub
xchg
out
fdivr
fwait
repz
adc
mov
test
repnz
xlat
fwait
push
out
gs
jnp
add
sub
dec
xchg
out
jb
adc
pop
jb
les
rcrb
loop
jb
insl
adc
mov
or
mov
adc
lods
mov
jge
adc
ret
in
pop
jnp
lcall
adc
xlat
ret
aam
inc
daa
pop
icebp
dec
andb
and
or
mov
aaa
add
adc
pop
inc
fs
addb
shl
xchg
add
xchg
add
push
int
in
inc
jns,pn
cltd
test
jecxz
cltd
cmp
cltd
es
sbb
push
xchg
imul
xchg
cltd
adcl
add
nop
push
cmp
dec
push
imul
or
and
rolb
add
and
push
mov
push
sbb
dec
iret
jle
pusha
or
cmp
add
and
int
jns
or
sbb
ret
iret
repz
sahf
mov
iret
repz
push
ds
or
mov
call
add
repz
lods
push
mov
cmp
cmp
sub
push
sahf
out
fists
xchg
jl
push
out
out
inc
cmpb
push
push
pop
dec
cmp
sbb
cmp
sarl
fmulp
mov
repz
mov
ret
into
sbb
lahf
out
out
add
es
loop
sbb
out
aam
mov
xrelease
sbb
out
sahf
out
scas
lret
iret
repz
or
and
pop
data16
repz
test
iret
repz
fsubrp
sbb
repz
ss
inc
push
sarb
out
pusha
inc
out
jb
jle
sahf
mov
mov
rol
loop
clc
adc
sub
pusha
testb
sbb
je
fs
push
cmp
push
daa
pop
mov
jbe
cmp
cli
jbe
insl
push
jnp
push
cwtl
cmpsl
insl
mov
iret
dec
test
mov
mov
fidivs
xchg
push
jbe
push
scas
test
sub
pop
les
cmp
js
pop
aaa
jo
xor
outsl
jne
push
lret
pop
jle
sub
sub
scas
lea
or
dec
push
dec
dec
adc
pop
ja
jb
pop
icebp
push
cwtl
repnz
ja
or
add
pusha
pop
add
loop
xchg
lahf
lcall
jb
dec
out
js
xor
xor
fndisi(8087
mov
fwait
pop
jae
outsl
ss
in
test
xor
cwtl
gs
add
imulb
test
adc
out
xor
fnsave
out
mov
inc
mov
pop
rol
negb
outsb
aas
das
pop
fisubrs
jmp
imul
add
lcall
filds
mov
and
dec
lahf
pop
testl
pusha
mov
cmp
or
mov
jecxz
and
sub
xchg
cmpb
subl
or
loope
outsl
rcrl
data16
add
mov
das
cmp
mov
jg
clc
xchg
je
add
and
pop
arpl
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
outsl
dec
cltd
aaa
mov
and
mov
xchg
jb
inc
adc
push
fisubs
das
fmuls
xor
jg
jmp
jae
pop
dec
imul
ret
pop
mov
inc
jne
outsb
je
fwait
mov
fwait
repz
inc
js
outsl
jg
inc
add
lret
inc
inc
xor
sub
pushl
cmp
sub
inc
inc
xor
xor
xor
jge
outsl
call
inc
xor
xor
ss
xor
cmp
fdivl
cmp
xor
clc
inc
inc
xor
mov
adc
sbb
cltd
pop
lret
punpcklbw
jo
mov
push
jo
or
loopne
xchg
fidivrs
cmp
decl
inc
inc
or
push
and
inc
enter
aaa
adc
xor
inc
pop
dec
jo
and
outsb
jl
pop
pop
imul
lock
cmp
inc
push
dec
and
cmp
ss
pushf
xor
add
xchg
add
mov
dec
dec
add
and
pop
clc
mov
push
push
insb
push
pop
inc
dec
hlt
imul
ficoml
pop
push
sub
inc
push
inc
out
adc
push
sub
cmpsl
stc
enter
adc
lods
sbb
addr16
mov
lods
sahf
add
setl
insb
mov
call
adc
icebp
sahf
loope
jb
adc
sub
jg
and
lock
and
outsl
xor
imul
xchg
dec
fsubrl
push
push
mov
and
inc
cmp
add
sub
sbb
xchg
push
outsb
xchg
sub
add
int
lea
sub
xchg
jnp
jmp
arpl
mov
mov
xchg
and
outsb
or
fwait
js
or
inc
and
inc
xor
or
pop
inc
push
xorl
mov
rcrl
mov
jo
adc
or
jp
push
stos
inc
in
jnp
out
push
and
shrl
and
jnp
inc
cmc
movhps
imul
bound
jo
xchg
loopne
jns
dec
outsl
add
das
dec
fs
push
imul
imul
push
jo
ss
or
orb
xchg
pop
add
xor
push
fsubrs
aaa
dec
movsb
jnp
enter
dec
jae
outsl
push
repz
xchg
pop
arpl
inc
cs
push
push
push
add
push
add
shrb
mov
je
outsb
outsl
lret
mov
popa
imul
xchg
add
ds
push
sbb
mov
pop
add
or
aas
sbb
push
push
or
and
dec
loopne
repnz
rolb
inc
inc
sbb
push
and
add
jg
adc
pusha
ja
cmovs
negb
xchg
pushf
add
sbb
push
mov
cmpsl
inc
push
or
inc
mov
sub
xlat
dec
add
or
sbb
fadds
adc
jns
out
orb
or
add
cmp
das
push
adc
cmp
push
adc
sbb
out
sbb
sbb
iret
cmp
sbb
push
das
push
pop
stc
sahf
imul
cld
and
cli
scas
stc
cmp
js
jns
stc
jp
jno
out
push
cld
fdivr
mov
out
sbb
popa
fwait
mov
add
mull
push
adc
lahf
mov
mov
lds
xchg
inc
bound
mov
inc
adc
mov
jns
ds
cmp
xor
adc
adc
adc
cmp
sarl
or
in
int3
jecxz
iret
repz
pusha
xor
out
sahf
testl
jo
push
cmp
repz
dec
sahf
cmpsl
cmp
inc
inc
cmp
xor
jns
out
sub
and
sbb
jns
out
adc
or
iret
sarl
add
or
hlt
call
enter
cmp
pause
jo
xor
out
sahf
out
pop
int3
mov
insb
lahf
out
sahf
inc
sub
adc
cld
push
cmp
repz
rol
mov
stc
cmp
repz
sub
aam
out
sahf
cmpsl
mov
repz
jg
push
int3
push
mov
into
jl
inc
xchg
cwtl
cbtw
fistpl
push
sub
lods
sbb
fsubl
adc
bound
cmp
inc
or
dec
adc
fnstsw
sub
inc
inc
add
adc
adc
fiadds
inc
dec
cmp
rol
pop
enter
and
pusha
add
or
mov
nop
xorb
jecxz
addl
mov
add
adc
and
pop
cmp
mov
pop
sbb
les
imul
jmp
push
sbbb
pop
lret
and
jno
ss
jae
adc
mov
inc
or
mov
adc
stos
xchg
icebp
or
mov
pushf
andb
mov
shrb
inc
mov
dec
ret
jns
addr16
inc
push
pushl
roll
add
movl
rolb
mov
inc
cmp
pop
jne
pop
mov
add
shll
adc
add
jne
imul
xor
pop
dec
mov
arpl
imul
adc
mov
or
adc
sub
scas
adcl
push
xor
filds
push
push
push
insb
das
inc
jns
ljmp
mov
ja
lahf
loopne
mov
das
loopne
fwait
cmp
sbb
and
mov
addr16
mov
test
ret
sbb
shr
pop
mov
insb
pop
enter
sarb
jg
fdivrs
cmp
mov
les
mov
ret
sete
cmp
pop
enter
jg
jbe
data16
add
and
fmuls
jns
pop
popf
inc
pop
in
rcr
cmp
xor
push
lcall
lret
clc
cmp
test
adc
or
jl
in
lds
push
xchg
sbb
inc
call
mov
adc
or
mov
xor
and
push
sbb
jmp
mov
in
rorl
iret
dec
mov
leave
fcmovnbe
mov
aas
jbe
mov
imul
aam
lods
xor
insl
insb
adc
fs
loopne
jns
ficoml
dec
adc
repz
daa
popf
mov
lock
enter
mov
loope
cwtl
xchg
imul
test
lea
cmpsl
sti
pop
add
inc
je
dec
imul
fadds
ltr
mov
fidivs
push
lcall
or
loope
gs
dec
dec
add
push
push
push
add
push
outsl
ja
xor
pop
pop
test
xor
mov
push
sub
add
jno
fadds
out
daa
movsb
and
pop
arpl
push
inc
repnz
xor
lods
testb
cmc
rclb
mov
mov
bound
push
xor
andl
mov
insb
jae
arpl
adc
outsb
push
add
push
imul
ss
push
mov
jae
in
insb
push
push
jae
push
adc
xchg
mov
push
sub
hlt
push
mov
test
add
mov
out
adc
mov
jecxz
inc
cmp
addb
adc
shll
fs
xchg
popa
xorb
jno
add
push
mov
movsb
jo
pop
das
push
mov
mov
push
jo
jb
jns
xchg
mov
dec
imul
xor
roll
push
push
lods
cmpsl
xor
xchg
imul
push
sbb
imulb
push
jnp
dec
ja
inc
pop
ja
dec
popa
jge
and
call
pusha
inc
and
dec
enter
inc
fiaddl
das
imul
mov
mov
add
pop
add
inc
shll
ja
inc
add
adc
push
fbld
jne
ds
cmp
or
insl
popf
cmp
sub
xchg
mov
jp
stos
outsb
aaa
cs
es
pop
push
scas
xor
lea
xchg
and
sub
jo
xlat
push
nop
pop
ds
fs
ja
inc
inc
lahf
xor
iret
mov
dec
or
nop
mov
push
ds
pushf
cltd
inc
cs
jle
loope
adc
jle
and
push
jo
loope
call
rcr
dec
rcrl
adc
ret
inc
gs
loopne
add
add
push
jnp
aas
das
pop
outsl
mov
fdivl
mov
inc
add
sbb
sub
xor
sbb
push
scas
mov
addb
dec
dec
pop
sub
mov
inc
jns
pop
roll
xchg
fs
lds
xor
and
mov
in
bound
push
outsl
jl
xchg
in
xchg
mov
dec
and
roll
sbbb
push
push
popa
in
pop
sbb
cmp
loopne
push
cmp
cwtl
lret
mov
rolb
insl
imul
push
mov
out
add
adc
mov
inc
jmp
fnsave
or
das
push
mov
rcr
aaa
dec
inc
dec
pop
or
aas
push
and
sbb
inc
xchg
popa
out
mov
inc
sbb
enter
pop
sub
sarb
push
inc
jp
mov
push
iret
add
jo
add
add
cmp
outsl
inc
pop
push
or
push
and
jo
sub
jo
ds
xor
jl
dec
pusha
push
jo
jno
fldcw
pop
cmp
and
arpl
scas
into
pop
roll
dec
adc
in
xchg
adc
loope
ljmp
dec
imul
add
iret
dec
pop
pop
cwtl
pop
add
lret
xchg
into
out
outsl
cmpsl
das
jnp
inc
cmpsl
add
push
mov
addb
pop
imul
push
push
and
in
imul
jns
bound
sbbl
inc
jae
adc
add
je
add
add
jl
out
xor
and
xor
xor
pop
test
pop
loope
pop
push
sarb
into
insb
mov
push
add
mov
mov
mov
imul
fbld
lret
fbld
pop
push
sbb
inc
mov
out
std
fwait
xchg
imul
pop
and
inc
cwtl
aam
int
icebp
jmp
jecxz
out
cmp
aam
or
jo
lret
jae
or
add
mov
add
jns
fistpl
pop
push
insb
push
sbbb
popa
fsubrs
xchg
push
punpcklbw
popf
cs
and
pop
xor
mov
and
jecxz
repnz
jns
cmp
test
test
incl
bound
pop
shrb
mov
mov
in
add
inc
cmp
inc
fsubrs
sti
fsubrl
imul
xor
inc
pusha
out
add
add
shl
mov
xchg
add
or
mov
adc
add
push
and
fs
fs
mov
daa
jne
add
mov
out
adc
add
iret
repz
clc
out
lock
iret
repz
mov
jns
repz
pop
mov
jns
xchg
nop
mov
jns
pusha
push
pop
push
inc
repz
repz
and
sbb
jo
iret
adc
in
lock
push
loopne
fcom
iret
repz
enter
cwtl
mov
repz
pusha
push
cmp
repz
repz
sbb
or
jns
iret
add
in
hlt
in
in
out
sahf
fmul
mov
jns
out
xchg
push
mov
js
push
inc
out
cmp
sub
and
or
jmp
test
jo
es
arpl
and
pop
push
rcll
push
push
divl
ja
testl
cmp
or
out
jno
cs
shl
add
add
push
nop
pop
pop
leave
xchg
data16
jnp
dec
or
push
aaa
sqrtps
shl
pusha
mov
pop
and
xchg
add
push
or
pop
movsb
fdivs
jg
fs
inc
dec
pop
push
push
mov
add
dec
add
add
mov
fs
movb
dec
inc
mov
jae
xorb
subl
add
sahf
inc
add
inc
cmp
pop
add
in
pusha
xchg
add
and
and
and
cmpsl
jbe
dec
cmp
insl
xor
push
sub
sbb
xor
and
lahf
xor
xor
ds
je
add
pop
mov
or
add
movsl
popa
fcoml
push
imul
gs
imul
sahf
sbb
cmp
or
rorb
insb
or
mov
or
adc
movups
jae
data16
popa
fsubs
into
mov
pop
stc
das
sti
ss
sbb
aad
push
lahf
ds
inc
add
inc
pop
pop
push
and
adc
fcmovbe
add
filds
les
xor
sbb
bound
loopne
sbb
das
xor
xorb
xor
xor
xor
xor
pushl
push
xor
jp
movsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushl
dec
xor
xchg
shll
inc
ss
ss
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
dec
cmp
cmp
incl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cltd
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fcomip
sarb
add
push
lock
idivl
or
lcall
lea
xor
xor
push
xor
xor
js
popf
incl
add
or
adc
xor
xor
xor
xor
mov
paddd
aam
fnsave
xor
xor
xor
out
xor
xor
xor
femms
decb
xor
fidivl
scas
xor
shlb
fnsave
out
xor
push
ss
cltd
pop
cld
pushl
mov
ss
ss
aaa
sbb
jno
mov
aaa
loopne
add
or
das
xchg
lods
cmp
cmp
loopne
jmp
cmp
cmp
cmp
cmp
push
cmp
jl
cmpl
mov
cmp
decl
push
adc
cmp
cmp
cmp
cmp
pop
cmp
imul
pop
insl
dec
cmp
cmp
sahf
test
jo,pt
test
mov
aas
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
pusha
shr
repz
andl
xor
xor
xor
xor
jl
mov
mov
xor
xor
xor
clc
pushl
dec
xor
insb
xor
mov
mov
mov
xor
xor
xor
xor
xor
xor
ljmp
inc
xor
pop
xor
jo
xchg
xor
xor
xor
xor
xor
aaa
cld
lcall
xor
xor
xor
push
aaa
push
sub
ss
clc
loop
call
cmp
mov
mov
cmp
cmp
cmp
cmp
mov
xchg
cmp
hlt
cmp
cmp
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
pop
or
push
pusha
pop
push
or
aas
clc
decl
arpl
push
xor
xor
xor
pop
cmp
xor
xor
xor
xor
ret
xor
xor
push
incl
lcall
clc
xor
xor
test
mov
mov
pop
cld
pushl
nop
xor
out
in
xor
scas
clc
xor
cmp
jmp
pop
lods
cmp
cmp
cmp
cmp
mov
sarl
aad
fnstcw
fnstsw
loope
in
in
cmp
cmp
pop
sub
std
cmp
cmp
push
lcall
pop
mov
cmpb
ds
aas
jmp
punpckhbw
and
cmp
ss
sbb
pushl
sbb
xchg
cmp
cmp
mov
mov
mov
inc
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
dec
aas
push
xor
ljmp
mov
cmpb
aas
sarl
aas
in
out
out
jo
call
xchg
xor
xor
xor
jg
loop
xor
fisubrl
xor
loop
push
pushl
and
xor
xor
mov
xor
xor
scas
std
std
call
xor
cmpsb
data16
ss
add
or
aaa
and
fildll
cmp
aaa
push
aaa
pop
aaa
imul
xchg
mov
xchg
call
mov
aaa
xor
cmp
xchg
outsl
cmp
jne
mov
push
mov
cmp
cmp
sbb
push
cmp
inc
cmp
dec
cmp
popa
cmp
cmpb
cmp
push
call
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
ret
mov
cmp
sub
xor
cmp
jg
inc
cmp
push
cmp
pop
cmp
jb
js
cmpl
mov
cmp
cmp
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
aas
cld
cmp
dec
cmp
addr16
lea
scas
cmp
cmp
cwtl
ds
ds
jecxz,pt
out
ds
das
aas
cmp
je
jge
jns
loope
mov
movsl
aas
stos
aas
mov
mov
rcrb
pop
xor
lcall
aas
xchg
les
fidivl
in
or
adc
decl
xor
xor
xor
xor
mov
xor
xor
xor
xor
ja
xor
xor
xor
mov
jl
cmpsl
xor
xor
jmp
lock
lcall
xor
xor
mov
pushf
xor
ret
aaa
xchg
aaa
fwait
sahf
cmpsb
mov
sbb
scas
cmp
loope
add
cmp
fdivrl
aaa
cmp
mov
shl
xor
mov
xchg
movsb
cmc
fisttps
nop
cmp
cmp
cmp
scas
call
mov
jle
push
or
xor
cmp
sar
xor
bound
data16
push
outsb
aaa
jb
jbe
xchg
ja
js
xchg
jge
cmp
cmp
cmp
cmp
cmp
cmp
jle
call
adc
mov
sbb
ds
xor
xchg
ljmp
pop
inc
xor
xabort
cld
or
xor
xor
xor
jl
clc
xor
fiadds
aaa
ret
lcall
lock
jmp
repnz
or
cmp
pop
cmp
jge
mov
lcall
cmp
jbe
xchg
cmp
cmp
cmp
mov
lcall
and
cmp
cmp
fdivrs
push
aas
jne
mov
pop
popf
mov
or
mov
fwait
xor
cmc
cmc
xor
xor
dec
or
repnz
aas
hlt
or
ljmp
xor
pop
std
jg
adc
es
dec
ss
outsb
notb
ss
in
ret
ljmp
cmp
cmp
mov
jo
cmp
cmp
decb
imul
cmp
test
mov
adc
cmp
cmp
dec
cmp
cmp
jae
sar
cmp
cmp
cmp
cmp
jp
mov
cmp
cmp
pop
sarb
inc
cmp
orb
pop
ds
ds
cmpb
cmpsl
ds
ds
ret
idivl
add
sbb
addr16
pop
add
rol
cld
pop
inc
jl
xor
xor
pop
xor
xor
cmp
clc
xor
xor
xor
xor
xor
xor
xor
mov
xor
push
ljmp
add
xor
ds
dec
aaa
pop
aaa
js
mov
stos
cli
ljmp
aaa
in
aaa
cli
aaa
mov
cmp
mov
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
clc
ljmp
pop
adc
jbe
cmpl
cmp
cmp
mov
pushl
adc
and
pusha
aas
cmpb
aas
fdivrl
loop
out
out
pop
mov
push
sub
jne
adc
xor
jg
loop
xor
xor
jg
xchg
xor
xor
xor
addb
js
xor
xor
ljmp
jne
loopne
adc
adc
sbb
sbb
sub
test
ljmp
nop
cmp
mov
cmp
cmp
cmp
cmp
cmp
jecxz
jno
ljmp
cmp
ljmp
and
aaa
into
cmp
inc
xor
xor
mov
jl
mov
decl
negb
mov
mov
mov
mov
in
test
lods
xor
xor
xor
cmp
dec
add
cmp
cmp
xor
cmp
inc
cmp
cmp
jno
cmp
push
rcrb
cmp
clc
mov
cmp
jl
cmpb
cmp
add
inc
aad
cmp
rcr
cmp
mov
ljmp
fdivl
lock
lods
ds
add
or
adc
add
pop
stos
sbb
and
and
sub
sub
xor
pop
jg
cmp
inc
cmp
cmp
pop
cmp
lock
insb
cmp
je
jl
cmpb
jne
or
mov
nop
xchg
cwtl
mov
push
mov
aas
inc
mov
push
aas
push
aas
xchg
aas
push
jg
cwtl
aas
lods
aas
mov
shrb
aas
fdivrs
loopne
clc
jbe
cmpsl
filds
xor
xchg
xor
lcall
clc
xor
xor
inc
xor
xor
cwtl
xor
unpckhps
cld
xor
xor
xor
cmpsb
cmp
ret
xchg
mov
jb
inc
adc
cmpsl
icebp
xor
andb
add
jg
dec
testb
or
ss
sahf
int3
shlb
jmp
fdivl
loopne
in
call
ss
ss
add
add
or
mov
aaa
adc
adc
aaa
sbb
and
and
sub
sub
call
aaa
cmp
inc
aaa
inc
aaa
dec
jb
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
inc
clc
xorb
aaa
mov
nop
aaa
xchg
aaa
cwtl
or
loopne
into
mov
dec
mov
mov
loop
mov
aaa
les
enter
shlb
aam
fdivs
fcompl
in
les
push
out
aaa
hlt
xor
aaa
add
cmp
adc
adc
sbb
jbe
arpl
mov
ret
fdivrl
call
ret
mov
cmp
cmp
mov
cmp
sub
cmp
cmp
cmp
cmp
push
pop
jne
jo
je
jl
test
ret
decl
mov
cmp
mov
mov
cmp
adc
and
jmp
popa
jmp
dec
pop
idivb
or
sti
in
loopne
or
mov
cltd
or
ljmp
mov
cmc
push
and
mov
sarb
stc
leave
addb
nop
mov
dec
xor
push
lret
push
test
add
rorw
add
push
add
ljmp
movsl
add
add
out
xor
dec
or
loop
imul
and
leave
test
push
lods
or
sub
sub
jns
sbb
and
dec
mov
xor
xchg
cmp
mov
cmpsb
cmp
lods
out
xchg
adc
add
add
pusha
push
pop
dec
jo
and
aas
xchg
shrl
inc
flds
jb
test
push
sub
add
inc
add
sub
dec
pop
xchg
lea
or
xorb
push
and
dec
or
jae
mov
sahf
lea
ss
enter
pop
in
or
int
sbb
xor
push
mov
loopne
jp
les
add
fistpl
in
sbb
xor
push
mov
jae
loopne
adc
and
xchg
popa
pushf
mov
je
xor
xor
das
inc
xor
dec
ror
add
or
lea
insb
push
add
push
and
pop
daa
mov
fnstenv
xlat
jns
shlb
movsb
mov
in
push
sbbl
adc
subl
negb
or
and
and
xor
insl
mov
sub
fists
cmp
outsb
push
lcall
subl
mov
pushf
or
adc
loopne
xor
idivb
inc
mov
mov
cmp
and
and
or
mov
push
lea
jge
jnp
mov
cmp
fs
push
in
add
add
push
adc
lahf
inc
jnp
je
subb
push
push
mov
mov
mov
dec
adc
mov
or
insl
pop
jb
cmpb
insl
fsts
js
cmpsb
add
bound
fildll
add
rolb
fcoml
mov
pusha
mulb
movsb
push
movsl
xor
push
mov
inc
shrl
push
mov
std
inc
cmp
inc
push
mov
mov
fisubrl
lahf
fidivs
inc
cmp
andb
call
mov
sbb
nop
pop
cmp
js
add
in
mov
or
ud0
cltd
mov
add
adc
jb
lock
jne
mov
jo
inc
and
adc
test
sbb
push
aad
jne
inc
push
scas
sti
add
movl
cmc
adcl
mov
xor
cs
push
loop
shl
test
adc
add
adc
es
inc
shl
jg
pop
or
adc
mov
dec
add
mov
jl
pop
or
cwtl
cmpsl
push
mov
push
subl
cld
sub
or
jge
insl
loopne
int
cmp
xchg
or
xchg
test
xchg
mov
and
xchg
and
mov
and
cmp
stos
lret
push
push
aad
or
cmc
mov
lock
out
fcmovnu
jo
movsb
lods
pop
or
and
fxch
pop
mov
hlt
das
add
pop
or
or
leave
push
push
in
orb
cmp
rcrb
push
fs
and
mov
and
lock
shrb
jmp
xor
out
and
loope
or
or
out
orl
call
push
and
or
xor
xchg
push
push
dec
push
sub
in
pop
rorb
push
mov
push
sbb
inc
dec
push
xchg
ret
dec
push
movlps
imul
cmpl
or
xchg
and
adc
xor
adc
pop
pop
hlt
sub
movsl
sub
fs
test
test
push
test
or
or
push
adc
dec
ret
pop
call
pop
add
xor
push
mov
lock
xor
or
mov
pop
inc
or
lock
pop
inc
adc
adc
lds
inc
or
shlb
push
ja
and
idiv
dec
inc
into
pop
leave
mov
and
flds
jl
pop
xor
sbb
mov
pushf
mov
push
pop
xchg
sub
lret
stos
add
or
leave
into
sub
add
jge
fstl
jno
cmpsb
xchg
mov
mov
shll
call
add
ret
pop
add
and
jnp
rolb
jp
inc
fnstsw
push
ja
ret
sti
imul
and
add
movsl
adc
adc
push
dec
add
pop
cmpsb
or
roll
in
imull
add
imul
add
push
add
sub
add
add
or
pushf
testb
push
adc
push
mov
imul
rolb
sub
push
sub
sarb
sarb
imul
dec
cmp
inc
lea
inc
adc
xor
pop
xlat
test
adcb
lea
push
xor
adc
lea
aaa
inc
add
cmp
sbb
cmp
and
add
inc
push
xchg
movsb
xor
xor
mov
andl
add
inc
mov
fbstp
push
adc
fbld
pop
fcomip
push
adcb
pop
aaa
inc
fisttps
pop
inc
or
aad
aam
push
arpl
in
shrl
dec
push
mov
sub
dec
stos
gs
lock
jmp
dec
test
fadds
in
adc
xor
adc
jne
test
or
mov
test
push
xchg
mov
adc
fstl
orl
outsb
lret
pop
orl
out
cmpsb
push
subl
ret
lds
clc
push
call
cmc
movsb
jo
pop
ret
mov
push
xchg
sbb
push
inc
sbb
lods
adc
adc
adc
sub
cmp
out
scas
xor
scas
sub
push
pop
rol
adc
adc
movsb
sbb
inc
sbb
sbb
dec
pop
sub
lea
outsb
test
sbb
and
cmp
mov
adc
adc
mov
gs
mov
sbb
or
enter
scas
mov
roll
bound
dec
mov
sbb
call
mov
lods
fldl
mov
or
lret
xchg
add
addl
mov
or
rorl
push
dec
jo
push
mov
pop
adc
fs
or
inc
xchg
dec
add
es
inc
cld
jo
cmpsb
stos
dec
pop
ret
call
loopne
lods
sub
xor
add
fdivr
mov
dec
and
in
andl
xor
ds
push
add
fcoml
inc
aaa
and
xlat
inc
bound
or
shrl
push
push
or
mov
addb
sbb
inc
sbb
adc
fwait
sub
test
pop
pop
inc
xor
sbb
xor
imul
adc
sbb
adc
inc
and
and
mov
inc
addr16
and
das
mov
or
sbb
cmp
das
and
adc
push
mov
dec
inc
out
mov
addb
mov
ja
mov
xor
jnp
add
cmpsb
add
dec
mov
mov
push
adc
and
ds
xor
push
pusha
pop
inc
xchg
sub
mov
sahf
mov
pop
push
rcrb
int3
test
adcb
mov
mov
mov
mov
mov
insb
lret
dec
fs
mov
inc
jae
xor
cmpsl
cs
ja
and
pop
xchg
and
iret
data16
nop
nop
push
adc
rolb
pop
test
xchg
or
fmull
repz
fldl
pop
push
dec
add
cmp
push
pop
push
rcrb
jmp
cwtl
push
movsb
mov
adc
or
pop
repz
outsb
and
pop
nop
xor
push
push
jl
inc
pop
test
pop
jb
mov
push
jno
pop
mov
jns
out
push
fadds
loopne
lock
loopne
jne
add
push
pop
repz
inc
sub
xor
inc
addb
cmp
in
out
sub
imul
ds
stc
push
or
jns
push
lods
nop
and
dec
sbb
hlt
and
push
addr16
popf
pusha
push
mov
in
cmpsl
or
or
push
add
adc
retw
test
mov
pop
or
enter
pusha
hlt
push
hlt
pop
popa
loope
test
pop
push
addb
pop
cmpsl
ret
xchg
dec
pop
addl
sbb
xor
add
sub
sub
and
add
int
sub
sub
sub
shlb
lcall
sub
in
add
sub
cmp
and
sub
sub
pop
dec
sub
sub
inc
and
sub
cmpsb
imul
or
or
xor
sub
cmp
and
mov
test
mov
popa
cmpsb
add
and
and
add
aaa
adc
cmp
sbb
jns
mov
push
lods
subl
inc
shl
insb
into
fistl
stc
push
scas
or
dec
movsb
mov
push
lret
ret
xchg
pop
adc
sbb
addr16
adc
xor
fstpl
inc
nop
inc
psubsb
push
inc
and
adc
inc
shrb
or
cli
push
les
inc
repz
sarb
rolb
mov
out
addb
inc
bound
jo
mov
enter
jo
enter
ds
mov
iret
push
xchg
in
inc
aaa
mov
nop
adc
mov
push
inc
mov
inc
adc
repnz
inc
bound
pop
push
sub
sub
es
and
sahf
push
sub
jnp
test
sub
jo
push
inc
xor
mov
cmp
cmp
adc
cmp
les
adc
push
and
sub
call
out
add
mov
adcb
fldl
imul
hlt
ffreep
orl
or
mov
adc
jns
xchg
jae
jns
push
adc
mov
xchg
mov
push
or
lock
pop
add
jno
jb
js
xor
pop
jge
js
roll
mov
subb
jne
lcall
mov
xor
dec
fdivl
jns
sbb
adc
cvtdq2ps
subb
daa
adc
sbb
loop
jns
sbb
and
cs
daa
jns
inc
bound
sbb
dec
or
andb
adc
mov
xchg
jns
ljmp
icebp
sbb
dec
dec
jns
push
or
int3
or
aam
imul
fbstp
stos
test
clc
mov
fidivl
xchg
jmp
outsb
pop
addl
addr16
ja
push
jne
addr16
aad
push
addr16
popf
add
adc
addr16
jbe
pop
adc
dec
gs
push
in
adc
push
mov
addr16
inc
adc
pusha
addr16
adc
or
iret
inc
sub
lret
pop
mov
test
adc
push
pusha
mov
aam
out
push
test
sbb
les
sbb
filds
xchg
mov
push
ja
andl
push
jne
pusha
mov
sub
addr16
in
fimuls
dec
mov
sbb
mov
lret
mov
daa
loopne
and
or
addr16
dec
enter
fstl
add
inc
call
mov
mov
mov
inc
cs
lea
adc
xchg
fs
sbb
cmp
sbb
and
adcb
mov
or
and
xor
mov
or
cmpsl
cmp
push
nop
jmp
lds
add
mov
nop
jnp
dec
dec
xor
jb
jnp
popf
testb
ret
or
inc
cmp
fwait
mov
mov
mov
mov
and
jmp
sbb
fldl
fcoms
jb
xor
adc
aaa
mov
xor
sub
pushf
icebp
pusha
push
dec
or
push
push
into
mov
or
mov
or
inc
mov
es
aaa
sub
mov
je
in
fimull
test
pop
loope
and
jmp
mov
cwtl
and
xor
xor
cmp
cwtl
pop
push
mov
rclb
inc
mov
loope
xor
add
mov
in
lea
js
mov
stos
hlt
mov
cltd
inc
inc
inc
lcall
inc
inc
inc
cmp
inc
cmp
inc
inc
inc
sub
jmp
cmp
fs
add
mov
inc
cmp
mov
mov
fcomip
movsb
fwait
cwtl
and
inc
adc
mov
lods
adc
enter
xorb
or
in
scas
call
or
cmp
xor
call
or
and
xor
jo
dec
out
add
in
push
mov
jo
mov
adc
cmpsl
dec
or
inc
scas
sub
adc
push
sub
dec
aad
loop
cmp
jno
mov
cmp
mov
mov
shlb
mov
test
dec
or
out
jl
xor
pop
dec
mov
fistpl
mov
std
sub
push
aam
call
xor
inc
xor
inc
aad
inc
lahf
enter
nop
add
movsb
push
je
aad
cld
xchg
std
sub
add
cmp
dec
lahf
adc
andb
cmpsb
pop
repnz
fiadds
dec
xor
push
mov
inc
dec
inc
mov
adc
jecxz
jo
ret
xor
xor
je
or
inc
add
sub
gs
xchg
or
inc
add
push
mov
leave
add
sbb
jb
and
lret
call
jmp
mov
inc
xor
mov
push
dec
dec
inc
loope
enter
movsb
cmp
push
mov
daa
mov
mov
add
dec
dec
inc
out
push
lret
push
mov
int3
pop
fsubrl
dec
jmp
mov
aaa
xor
inc
dec
add
push
les
pop
mov
or
add
sub
jp
pop
hlt
push
dec
loope
inc
faddl
jbe
mov
jnp
das
shl
adc
sbb
cmp
imul
loopne
out
cmp
push
xor
xchg
cmc
xorb
rclb
and
or
rclb
mov
xchg
xchg
pop
rcl
fwait
roll
add
pop
lea
stc
mov
cmp
jecxz
shll
stc
adc
xor
shll
mov
push
jo
mov
mov
jns
sar
push
fdivs
mov
sbb
stc
lds
lods
aas
stc
add
mov
mov
sbb
int
sub
mov
in
dec
push
enter
call
xchg
call
mov
adc
xor
and
adc
fstl
enter
xlat
mov
dec
pop
xor
daa
stc
sub
xor
repnz
sub
daa
fnstsw
xchg
gs
icebp
fcompl
adc
ret
lret
jne
pop
xchg
ret
pop
jmp
jmp
jne
out
push
dec
mov
jne
jl
iret
xor
jecxz
sbb
lods
jae
call
cwtl
addr16
mov
aas
mov
movl
cmpsl
mov
int3
cwtl
adc
sbb
test
and
in
sub
iret
aam
adc
call
adc
call
and
inc
sub
insb
xor
xorl
icebp
imul
mov
lods
sub
jmp
pop
popa
mov
call
sub
je
loop
and
fcom
xor
or
add
cld
push
lret
inc
and
xchg
js
cmpsl
sarb
jl
addb
lods
sbb
adc
roll
xor
and
mov
inc
push
shrl
inc
mov
push
repnz
fldl
push
sarb
mov
sub
shll
gs
shrl
mov
and
cli
pop
pop
pushf
rcrl
sbb
shrl
adc
shll
mov
sbb
inc
js
xor
les
mov
inc
sub
call
mov
mov
pop
mov
inc
mov
pop
push
adc
pusha
xor
int3
mov
sbb
adcb
in
xchg
mov
pop
pop
adc
push
push
xor
adc
add
sbb
add
xor
mov
pop
adc
xchg
xchg
pushf
mov
mov
daa
mov
add
testl
push
sbb
adc
inc
pop
adc
adc
adc
in
jb
into
jp
flds
aam
shll
xchg
daa
add
pop
roll
shll
fsubs
shrb
or
movsl
xchg
xchg
ret
mov
dec
punpcklbw
dec
adc
and
add
bound
adc
dec
jo
mov
mov
incl
dec
xcrypt-ctr
cmpsl
pop
enter
inc
mov
dec
adc
das
or
adc
lcall
xchg
fcompl
jns
outsb
mov
dec
dec
adc
add
leave
int3
insb
jecxz
cmp
imul
movsl
adc
dec
xchg
xchg
outsb
stos
adc
sub
imul
or
adc
cmp
or
xchg
ds
mov
and
adc
sub
loopne
pop
adc
fcoml
fstpt
or
adc
adc
jnp
in
test
add
add
and
test
sbbl
pop
adc
rcll
sub
ds
add
sahf
iret
inc
xchg
aaa
and
dec
in
mov
cmp
shlb
call
sbb
pusha
xor
jb
out
xchg
cmp
das
lcall
mov
push
stos
inc
jge
add
mov
call
in
vpand
lods
fcmovnu
lds
fdivl
adc
mov
xlat
or
and
ret
pop
gs
test
inc
cs
sub
frstor
in
or
loopne
inc
mov
mov
pop
aam
dec
xchg
fdiv
mov
call
sbbl
nop
push
aaa
pop
repz
mov
call
fcompl
cmp
and
cli
fcoml
pop
push
lret
cmp
cli
iret
aad
rorl
add
push
mov
in
mov
hlt
push
mov
pop
push
rorb
pop
mov
pop
push
adc
aaa
sub
fsubl
mov
mov
xchg
mov
or
rcl
frstor
ja
sbb
mov
scas
fisttpll
outsb
pop
sarb
and
cmp
jne
jb
xor
test
das
subb
push
and
sub
jecxz
jmp
cmc
es
movsb
jb
jb
pop
dec
and
insb
movsb
add
pop
sbbb
pop
dec
or
add
mov
test
sub
xchg
cmpsl
mov
movb
and
insb
insb
fwait
xchg
cs
adc
lea
in
dec
add
push
leave
in
loopne
sub
leave
orl
push
push
adc
stc
xchg
mov
lret
pop
or
lret
lret
add
push
bound
pop
mov
inc
mov
cmp
and
sbb
add
sti
mov
loopne
jns
jns
fdivrs
sarb
mov
mov
jns
mov
cmpb
mov
jb
sbbl
dec
mov
inc
push
xor
sbb
and
adc
push
jb
xor
out
fstpt
sarb
sbbl
lods
mov
push
jb
mov
and
cmp
jne
push
pop
mov
push
mov
enter
xor
in
das
cmp
mov
jb
sbbl
jecxz
fdivrs
mov
sbb
and
lods
mov
push
jb
orl
das
cmp
inc
push
pop
mov
in
inc
mov
push
jb
mov
mov
or
mov
hlt
and
or
xor
and
call
sarl
and
xchg
data16
int
mov
add
adc
sbb
imul
or
imul
and
in
sbb
sbb
lret
xchg
data16
stc
mov
inc
dec
out
xor
mov
cli
cmp
mov
movsb
cmp
mov
and
or
mov
add
xchg
nop
or
aad
and
cmp
int3
or
lcall
inc
adcl
xchg
inc
jb
xor
sub
mov
pushf
dec
repnz
cmp
test
or
inc
xchg
test
ret
and
mov
rol
xchg
hlt
imul
testl
push
mov
inc
sub
mov
adc
jmp
add
enter
mov
cmpsl
adc
add
push
adc
cwtl
je
adc
imul
push
adc
sbb
into
pop
push
inc
and
xchg
inc
popl
nop
movsl
mov
out
pop
cmp
xchg
push
rolb
hlt
xchg
aaa
sahf
inc
adc
mov
xor
push
cmp
mov
and
add
mov
je
enter
mov
jbe
sub
jb
mov
es
pop
mov
sarb
nop
movsl
sbb
mov
sub
out
stos
jle
add
outsb
pop
popl
ja
and
xor
jmp
sub
push
pop
inc
xchg
aam
inc
out
lds
inc
jmp
xor
add
test
nop
and
imul
and
scas
popa
jmp
mov
out
test
add
xchg
in
roll
shrl
or
mov
lret
fidivl
and
mov
dec
popl
scas
sub
add
jmp
in
cmp
pop
outsb
and
xor
mov
inc
xchg
in
jo
enter
test
mov
ljmp
add
shlb
sbb
mov
push
sub
fs
inc
rorb
cmp
ljmp
loopw
and
or
shr
mov
mov
sub
dec
cld
sbb
call
jmp
enter
mov
movsl
imul
popa
add
out
subl
mov
push
sbb
sub
add
push
and
cmp
inc
and
fisubrs
out
adc
sub
nop
movsl
popl
or
adc
xchg
inc
cmp
nop
movsl
fsubl
xorl
xchg
out
or
fwait
test
pop
lods
and
and
mov
vprotd
xor
add
hlt
xor
mov
icebp
sub
data16
int
jmp
pop
orl
out
mov
repz
stos
ja
popa
nop
sahf
mul
sub
inc
pcmpgtb
in
push
jae
dec
sahf
popa
outsl
sub
dec
out
orl
cmp
mov
cs
mov
scas
push
or
pop
popl
cmpsl
test
jg
cmp
movsl
pop
xchg
xchg
or
mov
jge
push
push
xor
adc
xor
enter
adc
push
popl
dec
aaa
cmp
add
pop
or
and
lds
pusha
ficoms
enter
push
sbb
dec
inc
or
push
inc
in
add
xor
sahf
add
popl
pop
cmp
mov
mov
ret
push
add
out
and
in
inc
xlat
sbb
jp
addr16
fs
inc
push
mov
mov
mov
into
cmp
jp
and
cmp
pop
sahf
cmpsl
push
subl
inc
xchg
int3
shrb
mov
sbb
push
scas
inc
xchg
sbb
popl
inc
sbb
test
aam
or
testl
add
pop
pop
stos
mov
sbb
movsb
mov
pop
ret
add
xor
dec
and
inc
test
lds
les
inc
add
je
jecxz
pop
sbb
orb
jmp
pop
addr16
adc
lock
loope
adc
scas
ja
push
cmp
mov
fcoms
mov
ljmp
data16
mov
loope
xchg
and
popl
jns
enter
xchg
ret
lea
xchg
push
and
dec
push
leave
adc
bswap
add
shlb
mov
sarb
push
dec
push
dec
mov
in
add
and
scas
push
mov
pop
scas
addb
pop
adc
xor
pusha
pop
mov
inc
sbb
fisttpll
flds
push
jmp
add
ret
mov
movsb
mov
ss
or
rolb
data16
out
push
cwtl
or
dec
or
adc
rolb
in
add
movsl
repnz
clc
xchg
sbb
pop
inc
add
sub
mov
dec
loop
pusha
pop
xchg
and
add
sub
lods
mov
and
dec
out
xchg
fisttpll
push
xchg
cmpsb
inc
int
ficompl
js
mov
and
sbb
jns
cmpsl
sbb
ds
pusha
repz
out
ret
add
iret
repz
adc
push
bound
cmp
repz
xchg
cmpsb
mov
repz
add
sahf
out
fs
cwtl
lahf
out
sahf
cmpsb
mov
fdiv
or
cmp
repz
sub
dec
pop
repz
repz
cwtl
scas
cmpsl
stc
cmp
loopne
push
stos
and
inc
push
pusha
insb
jbe
sahf
out
adcb
inc
nop
mov
aas
adc
jge
fstpt
daa
adc
adc
push
int
sbb
nop
shlb
adc
sbb
push
fcoms
sbb
mov
push
outsb
cmp
jl
push
lea
mov
mov
mov
pop
inc
jno
aaa
add
mov
mov
clc
mov
push
mov
or
add
test
fnsave
imul
adc
xchg
out
push
sbb
sbb
xchg
repz
or
mov
dec
push
push
pop
sahf
mov
and
out
push
and
js
jns
xor
out
jp
cmp
iret
call
aas
sub
push
test
mov
test
or
adc
mov
aas
push
xchg
iret
repz
or
xor
sbb
sahf
cmpsl
stc
cmp
cld
xchg
hlt
call
jns
aam
enter
sahf
out
mov
out
sahf
movsb
mov
jns
out
mov
jns
out
je
insb
push
fs
pop
pop
push
push
jns
out
dec
dec
inc
inc
cmp
jns
out
xor
sub
dec
repz
sbb
or
nop
in
cmp
repz
movsb
test
imul
popl
shlb
pop
dec
dec
inc
xor
clc
mov
int3
repz
rep
test
out
sahf
out
enter
out
mov
jg
push
add
in
mov
mov
add
xor
and
adc
test
push
and
mov
dec
adc
mov
xor
push
push
add
inc
pop
xor
xor
cltd
int
mov
xor
ja
pop
xchg
or
ss
js
adc
subl
in
jge
loopne
or
sbb
outsb
jnp
mov
add
and
aas
insl
leave
data16
outsl
add
push
daa
mov
imull
push
mov
inc
adc
add
test
lods
pop
add
mov
das
idivb
das
xor
je
int
addr16
enter
shrb
or
and
test
lea
and
daa
jl
push
or
rcrl
and
jb
enter
shlb
pop
outsb
cmp
jge
adc
dec
jb
cmp
pop
sub
inc
out
push
mov
lds
sbb
dec
lahf
ret
out
cmp
dec
jg
dec
mov
in
inc
je
aas
cmp
enter
xchg
pop
jo
mov
fsubl
push
clc
push
dec
sar
icebp
bound
jb
std
mov
push
lock
cli
ud0
jnp,pn
jns
fistpll
int
xor
das
les
xchg
xor
imul
xchg
jne
inc
sbb
mov
es
aaa
les
dec
enter
in
fldenv
pop
neg
insl
jno
daa
cmp
insl
jo
jno
setl
or
push
xchg
movsl
fs
roll
mov
sub
jne
mov
mov
adc
fiaddl
mov
push
sbb
scas
cld
andb
stos
dec
in
jecxz
pop
inc
aas
mov
xchg
and
outsl
jne
xchg
jno
out
push
push
arpl
add
dec
cmpsl
std
mov
and
loop
insb
sbb
sbb
sarb
rcrl
xor
xchg
jno
cmp
inc
sbb
xchg
inc
sub
or
mov
sbb
stos
mov
gs
dec
add
and
dec
sub
xchg
mov
push
xorl
cmpsb
mov
mov
ljmp
push
rol
cmpsb
xlat
or
sbb
sbb
add
mov
sbb
push
sbb
sbb
push
cmpsl
aas
test
mov
sbb
xchg
inc
push
add
sub
sbb
bndstx
cs
lods
mov
add
push
movsb
mov
insb
or
imul
jmp
sbb
dec
xchg
les
icebp
fidivrs
leave
mov
add
jbe
aad
push
lds
fs
sub
push
pop
lahf
rolb
pop
incb
test
xchg
movsb
xchg
mul
jns
out
pushf
cwtl
xchg
nop
mov
jl
push
iret
repz
dec
inc
inc
cmp
iret
repz
xor
sub
and
ds
repz
sbb
add
xchg
cmp
lea
in
push
in
repz
repz
test
jecxz
iret
pushf
mov
jnp
dec
je
insb
push
fs
push
iret
repz
testl
repz
jl
in
xchg
push
enter
repz
mov
mov
sahf
idivl
js
jo
pop
repz
sahf
out
cmp
push
adc
jns
iret
add
xchg
loopne
mov
mov
xchg
insb
pop
inc
test
gs
xchg
rclb
sbb
shrl
cwtl
into
xor
mov
enter
inc
arpl
and
lldt
mov
pop
mov
call
mov
leave
pop
jg
push
in
mov
leave
pop
jbe
pop
pusha
test
push
lods
sbb
lds
or
push
mov
mov
aas
iret
push
and
inc
mov
incl
push
and
adc
add
jg
or
pop
xor
mov
mov
mov
mov
jnp
iret
xor
xor
sahf
xor
jg
mov
xor
xor
aaa
fbstp
sbb
add
sub
cmp
ja
clc
sti
cmp
cmp
notb
cmp
bound
scas
xchg
mov
cmp
fwait
popa
cld
pop
sahf
fdivrs
bound
cmp
xchg
lahf
cmp
movsl
cmp
lret
and
pop
ds
ds
ljmp
sbb
imul
aas
jecxz
call
push
leave
xchg
mov
and
sub
mov
inc
inc
xor
mov
jecxz
xor
push
shl
loope
xor
nop
push
out
xor
repnz
pushl
sbb
and
daa
xor
cmp
inc
xor
push
xor
imul
xor
lea
xchg
mov
adc
xor
xor
xor
push
sbb
push
test
mov
xchg
xor
fwait
mov
adc
sbb
sbb
and
or
xor
xor
xor
xorb
xor
xor
ss
xor
xor
xor
xor
xor
push
jg
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
sub
insb
jecxz
pusha
cld
ss
xorl
out
push
popa
cld
fbld
jp
aaa
cmp
insb
cmp
xor
jbe
cmp
sbb
sbb
scas
xchg
cmp
cmp
sub
xor
jp
test
mov
test
mov
mov
repnz
cmp
pop
sbb
ja
test
jo
arpl
cmp
decb
jg
cmp
cmp
cmp
inc
idivb
cmp
cmp
xor
xor
cmp
sbb
cmp
mov
mov
cmp
add
dec
ds
ds
cmp
dec
sbb
cmpsl
aas
mov
cld
xchg
cmpsb
lds
repnz
and
inc
xor
xchg
cmp
xor
xor
xor
push
xor
das
repnz
fildll
jecxz
xor
aam
fimull
xor
xor
icebp
xor
repz
cmp
xor
outsl
test
lret
push
add
stos
mov
mov
aaa
in
aas
cmp
xchg
sub
cmp
sar
pop
inc
js
jle
xchg
adc
push
push
mov
mov
ret
push
or
loope
in
adc
mov
xchg
cmp
testb
jb
cmp
cmp
mov
push
cmp
jne
jnp
std
jg
mov
cmp
cmp
movsb
push
adc
cmp
and
loopne
in
jmp
lock
xor
cmp
xchg
xor
mov
pop
incl
sti
mov
xchg
cmp
cmp
cmp
sub
ds
ds
ljmp
ds
clc
es
adc
and
dec
aas
push
aas
jmp
insb
sbb
out
xchg
mov
xor
jno
test
mov
out
xor
inc
daa
pop
lret
loop
jg
mov
xor
jle
loope
xor
xor
shlb
inc
xor
insl
xor
cmp
fwait
mov
test
cli
xor
fildll
jecxz
adc
xor
sub
mov
pop
mov
or
cmp
inc
icebp
ret
int
adcb
bound
push
sub
xor
push
inc
outsl
clc
mov
mov
pop
cmp
outsl
movd
ss
sub
jno
ja
or
or
sbb
cmp
cmp
cmp
scas
push
out
nop
icebp
dec
addr16
cmpb
cltd
cmp
cmp
fbld
scas
cmp
sbbb
sub
sub
sysret
jmp
inc
outsl
or
mov
dec
xor
lock
xor
adc
xor
orl
mov
pop
xor
jns
mov
out
push
and
ss
das
ss
mov
mov
aaa
pop
dec
xor
xchg
jno
cmp
push
mov
lret
cld
fdivp
cmp
cmp
cmp
mov
decl
imul
cmp
cmpsb
cmp
cmp
cmp
cmp
cmp
aas
iret
aas
loope
or
scas
pusha
add
cmp
sbb
xor
jae
test
xchg
mov
fbstp
icebp
push
sbb
push
push
push
fcomip
push
sarl
or
ss
aaa
jg
mov
sarl
icebp
cmp
cmp
cmp
cmp
fidivrl
test
fidivrs
xor
xor
xor
ss
jle
cmp
pop
jg
jg
cmpb
cmp
inc
cmp
push
inc
add
ljmp
add
cmp
mov
xor
adc
fisttps
sbb
mov
xor
je
jl
fcompl
xor
sbb
out
or
cwtl
xor
outsb
sbb
mov
sbb
xchg
mov
inc
movsb
jle
lret
rorl
in
jbe
call
cmp
int3
mov
stos
pusha
xor
push
and
pop
movb
inc
inc
orl
mov
fcmovb
xor
int3
xor
out
mov
loopne
insl
xchg
push
out
call
loopne
test
xor
xor
adc
xor
mov
movb
popa
cld
or
xor
pop
xor
insb
push
je
aas
or
mov
xor
and
movsb
xor
shlb
mov
rcl
adcl
out
xchg
jo
je
xor
lcall
orl
push
ret
mov
push
push
cmpsl
xchg
xchg
int3
xor
cmp
pop
nopl
dec
add
nopl
mov
pop
daa
cwtl
fwait
js,pn
out
fsubrs
xor
inc
xor
pop
inc
jecxz
xor
xchg
xor
xor
inc
sbb
jnp
loop
xor
mov
xor
pusha
xorb
inc
mov
add
dec
mov
xor
lock
xchg
loopne
xchg
fmull
xor
xor
xor
out
data16
jg
jo
sub
xor
jb
xor
jo
gs
cmp
inc
xchg
dec
xlat
pop
jl
xchg
push
lcall
insb
xor
jp
js
js
jl
xorb
mov
xor
xchg
rcrb
test
lods
and
xor
clc
addl
xchg
xlat
mov
arpl
mov
pop
jo
nop
or
and
lea
add
push
jmp
mov
add
inc
dec
inc
push
dec
mov
fcomi
fcoml
clc
add
add
jg
add
or
pop
pop
push
or
or
or
or
or
adc
dec
push
push
adc
add
or
outsb
xlat
decb
pop
sbb
adc
adc
adc
add
data16
lock
mov
or
rolb
or
in
pop
and
xchg
add
add
adc
or
sti
add
or
pop
inc
mov
jmp
add
jge
mov
and
inc
push
adc
pop
and
xor
and
jmp
inc
mov
adc
xor
cmpb
inc
jb
jne
inc
fs
inc
adc
sbbl
or
icebp
mov
aad
inc
inc
or
add
xor
push
sbb
movsb
xchg
scas
adc
scas
push
lods
loopne
adc
cld
pop
pop
idivl
ja
adc
push
adc
pop
popa
jno
and
das
adc
or
mov
or
xor
adc
add
and
adc
inc
mov
mov
dec
rorl
scas
fiaddl
or
push
sbb
sub
dec
jo
or
mov
add
add
lds
cld
cli
and
mov
ffreep
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
test
pop
lahf
mov
movsl
jecxz
or
jg
pop
mov
stc
or
incl
xchg
jg
or
insb
sub
addr16
out
or
push
push
xchg
add
push
fstl
inc
lock
scas
jle
fcmovnu
clc
cmp
fisubrl
in
mov
orb
ja
xor
lcall
mov
push
pop
mov
pop
pop
mov
popl
incl
mov
sbb
scas
adc
mov
xor
lods
scas
xchg
test
decl
and
sbb
sarl
and
roll
fwait
movsb
jmp
push
lret
push
out
jge
ljmp
and
ss
repz
cmpsb
pop
outsl
icebp
mov
pop
lock
std
decl
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
loope
rorl
mov
int
cltd
cli
ljmp
lods
leave
mov
jp
push
out
or
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
roll
stc
xor
hlt
and
xchg
jmp
sbb
pop
hlt
xchg
add
dec
mov
andb
dec
in
push
mov
sub
pop
mov
jl
rorl
adc
sub
push
add
stc
loope
mov
jbe
sti
clc
sar
andl
aas
icebp
testb
mov
jmp
inc
gs
sub
jno
pop
sub
jg
scas
cld
jg
decl
cli
push
inc
sbb
paddb
inc
mov
dec
call
cld
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
sti
jae
cmp
test
loopne
cli
adc
aaa
xchg
in
add
in
testb
adc
loope
fisttpll
out
aas
std
cli
push
ljmp
int
push
idivl
cmp
sub
inc
scas
inc
mov
cmp
jg
je,pn
sub
jg
imul
mov
mov
inc
es
gs
jns
dec
fsubl
or
push
pushf
push
scas
xlat
sub
cmp
sti
punpckhbw
cmpsb
orb
mov
pop
xor
fidivrl
push
sub
xchg
pop
clc
pop
hlt
lret
movsb
add
add
lea
jg
gs
std
xorb
jg
jmp
js
ret
das
pop
pop
pop
shlb
call
mov
push
jno
outsb
lock
or
sarb
std
pop
les
cli
mov
dec
xchg
mov
inc
arpl
stos
mov
and
insl
add
leave
push
scas
loop
jge
call
sub
mov
push
mov
adc
and
sbb
xchg
jo
and
js
test
jae
push
iret
sti
cmp
ficoms
aam
sahf
imul
fcmovnu
sar
decl
mov
nop
enter
add
cld
call
js
cmp
scas
lods
hlt
cmp
decl
outsl
fistl
mov
adc
push
movsb
xchg
or
mov
stos
dec
lods
xor
sbbb
jg,pn
cmpsl
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
mov
adc
adc
decl
push
jo
pusha
imul
add
mov
cmp
xchg
mov
gs
fcmovnu
loop
pop
xchg
ftst
jbe
xchg
and
mov
add
jg
jle
jg
mov
lahf
cld
sub
aas
stc
add
out
in
jmp
jno
fidivrl
lock
adc
pop
cld
addl
adc
imulb
and
lahf
fmull
enter
jecxz
paddd
scas
sub
in
pop
mov
sub
mov
dec
fucomi
pop
decl
das
aas
mov
or
cld
inc
or
add
push
pop
jg
add
jg
mov
cmp
sub
adc
mov
mov
iret
inc
ljmp
push
jbe
push
sbb
stos
icebp
pop
incb
mov
sub
push
inc
jecxz
sbb
sarl
adc
neg
lods
loopne
and
clc
xorl
push
imul
dec
lock
std
push
in
aas
mov
fsubrl
add
lock
and
mov
xchg
pushf
mov
repnz
and
bound
mov
xchg
lahf
or
push
rcrl
sti
or
call
pop
pop
inc
jb
fistpl
adc
call
jno
pop
fwait
call
nop
mov
inc
sti
arpl
daa
std
or
sbb
mov
xchg
jg
inc
cmpsb
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fistps
ljmp
cld
lds
fidivrl
jg
stos
pop
repz
jg
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
aas
mov
sbb
cld
addl
sbb
mov
lahf
outsl
int3
push
sbb
std
cmpsl
cmp
aas
test
bound
pop
outsl
xchg
inc
test
in
jge
decl
lock
lcall
fsubs
shl
dec
cs
dec
adc
lahf
mov
or
out
lcall
jg
addl
mov
adc
stos
pop
jg
pop
shrb
decl
in
pop
cld
or
xor
pop
rcr
dec
mov
gs
pushf
cmp
jmp
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
dec
mov
imul
or
inc
pop
xor
rorb
and
add
ljmp
cmpsl
push
sbb
mov
pop
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
cwtl
xor
and
xchg
fidivrs
push
mov
aas
repz
sbb
lock
pop
jle
shr
out
sbb
aaa
clc
push
std
mov
and
or
out
sub
cmc
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
outsl
sub
call
faddl
xchg
lcall
jne
pop
sti
adc
dec
ss
lods
movsb
or
incl
pslld
pushf
imul
jl
in
add
imul
out
scas
cli
pop
in
cmp
jmp
mov
sub
ljmp
lock
jmp
hlt
dec
mov
xlat
inc
jo
inc
aas
mov
jg
mov
sub
outsl
mov
or
daa
jp
std
adc
cltd
or
mov
ret
das
ret
nop
cmp
das
incb
lock
pop
pop
div
cld
adc
push
mov
js
fs
sbb
stc
lahf
loope
jae
jmp
push
das
je
jge
pop
jb
out
xchg
add
out
icebp
mov
loope
mov
jle
insb
sbb
fbstp
cmpsb
bound
das
hlt
mov
out
es
call
xor
decb
pusha
xlat
pop
push
adc
mov
and
call
or
dec
in
loope
or
mov
cmp
int
add
push
pop
aaa
std
out
nop
or
sbb
mov
mov
aas
icebp
ret
inc
xchg
sahf
ror
sbb
aaa
inc
stos
cmp
cmp
shrb
mov
push
clc
loope
loope
mov
lahf
jp
inc
rcl
dec
add
xlat
rcrl
sbb
iret
fdivrl
xchg
lcall
xchg
mov
repz
movsb
pusha
shlb
xchg
sarl
pop
out
jg
jno
ret
fs
cwtl
scas
xchg
cmp
inc
sbb
incl
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
xor
mov
in
sbb
xchg
imul
loopne
adc
sbb
mov
daa
jmp
fsubl
mov
or
outsl
pop
movsb
ljmp
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
les
push
inc
xchg
scas
or
or
add
push
sti
pop
inc
add
inc
cs
push
nop
mov
sbb
popf
test
and
pushl
jb
shlb
fistps
dec
dec
mov
enter
dec
leave
add
cmpb
dec
xor
xchg
rclb
push
cld
sbb
std
add
inc
fisttpl
mov
adc
mov
dec
pop
lahf
jo
pop
add
in
dec
xor
pop
lcall
pushl
or
pop
jnp
out
pop
cs
out
stc
mov
loopne
xor
jns
mov
loopne
ljmp
ficoml
add
sub
push
push
xchg
imul
and
inc
bound
jl
daa
ds
bound
pop
adc
add
decl
fmull
adc
xchg
dec
xchg
mov
and
inc
adc
mov
xor
jbe
incl
int3
cmp
pushf
push
xor
int
int3
inc
sbb
jae
adc
jns
jmp
pop
rorb
call
in
shlb
push
stos
mov
jbe
pop
cmp
xor
pop
stc
jmp
stc
xchg
cltd
lret
dec
pop
sbb
jmp
ds
ljmp
ret
sub
mov
jnp
push
xchg
decl
jecxz
jg
xchg
fnstsw
push
push
sbb
jg
mov
inc
lahf
test
pop
sbb
mov
stos
out
push
iret
fcomps
xchg
xchg
call
inc
nop
mov
into
mov
xchg
jecxz
xor
inc
mov
scas
mov
lds
incl
jmp
inc
setge
aam
sub
popw
leave
mov
mov
mov
rorb
rcl
pop
inc
push
mov
lods
into
aad
lds
xchg
and
ljmp
or
dec
mov
add
xchg
std
int
psubsw
ljmp
sbb
call
sbb
repz
stc
mov
inc
jl
subb
lcall
xlat
dec
and
lods
cmovno
aam
xor
fidivrl
jle
inc
inc
in
pusha
loope
in
sub
js
ljmp
push
cmpsl
xchg
popf
test
cltd
jns
push
xchg
adc
xor
dec
addl
and
dec
adc
mov
shrl
mov
jno
hlt
insl
mov
cmp
out
pop
pusha
rcrb
popa
in
mov
ret
dec
and
xor
decl
mov
mov
sbb
cmp
dec
scas
jb
outsl
and
push
out
mov
push
ljmp
mov
hlt
out
lret
mov
mov
cli
lods
dec
std
sbb
std
inc
jne
ret
mov
inc
push
xchg
xor
jne
adc
clc
stc
shll
call
lock
jnp
dec
xlat
lcall
xchg
mov
mov
incl
xchg
cld
fwait
and
xor
push
adc
xor
mov
decl
lock
xor
loop
mov
bound
sbb
mov
add
push
leave
rcr
out
icebp
xchg
or
cmp
push
mov
cmc
sub
add
pushl
cld
lods
popa
mov
jecxz
mov
mov
sar
out
jge
jmp
jg
or
aaa
or
or
aad
outsb
cld
aam
into
xor
incl
loop
adc
adc
sahf
jno
or
jo
cmp
pushf
mov
jb
clc
lcall
rclb
mov
test
xlat
push
push
adc
sbb
inc
dec
leave
or
int
loopne
es
jo
xchg
jae
push
jp
inc
cmp
jns
jl
mov
and
sbb
fimuls
add
pushf
inc
add
add
ss
mov
and
jp
icebp
lret
jmp
iret
push
inc
pusha
pop
popa
add
test
add
mov
fmuls
stos
pop
jl
shll
xchg
into
push
mov
jnp
sbb
movsb
imul
jb
cltd
xor
xchg
pusha
cmpsb
push
test
pushl
addr16
mov
movsb
cmp
scas
pop
add
roll
scas
mov
cmp
in
das
adc
lds
cmp
mov
inc
fdivrs
inc
sbb
mov
cltd
pop
add
mov
xor
testl
outsb
aaa
sub
movsb
jg
dec
sbb
in
cmp
or
sub
and
scas
cmp
call
cld
call
jle
mov
sarl
shlb
xor
sub
jmp
sub
shrb
mov
jl
cmpsl
scas
negl
into
std
xor
mov
cmp
loope
lcall
inc
xchg
push
pop
and
or
aas
dec
and
rorb
lahf
cmc
and
imul
mov
fildll
push
sub
pop
pop
xchg
outsb
cmpsl
dec
jg
jae
fdivl
mov
mov
sub
jbe
lret
push
incl
outsl
shl
push
mov
fwait
adc
sbb
int
jbe
fiaddl
and
dec
ss
inc
dec
es
cltd
sub
xchg
xchg
or
mov
leave
imul
adc
pop
and
fcomip
fwait
jl
xchg
pushf
movsb
push
xchg
and
cmpsb
xorb
mov
mov
inc
stc
jmp
add
add
push
popa
loop
je
sub
ss
pusha
pop
popa
fimull
add
cmpsl
cltd
mov
fiadds
xchg
sub
fisubl
add
mov
mov
in
and
sub
fiadds
bound
push
jnp
and
sbb
jae
inc
cmp
sub
pop
inc
sti
and
dec
pop
pushf
adc
mov
aaa
inc
add
cli
inc
loop
jmp
popf
xchg
lcall
dec
and
mov
push
call
cld
mov
sbb
mov
jmp
aam
add
lcall
inc
pop
repnz
fndisi(8087
callw
pop
daa
jae
sub
ja
and
jmp
shlb
mov
sub
fldenv
test
jae
mov
adc
lcall
jge
cmpsb
mov
fnstenv
jbe
aad
jmp
push
jns
arpl
call
les
stc
nop
pop
pop
push
mov
icebp
fildll
jnp
subl
into
ret
loop
andb
sahf
or
repz
cmp
out
push
dec
xchg
inc
sub
sti
cmp
loop
pop
sbb
mov
hlt
xorl
call
lods
xor
xchg
iret
mov
jns
cmpsb
jbe
add
push
mov
or
lcall
pop
dec
or
lds
pusha
sub
pusha
xchg
inc
and
xor
clc
aad
sahf
mov
pop
out
divl
jb
arpl
sub
ljmp
mov
push
pop
add
aam
push
fnstsw
mov
in
das
sti
mov
inc
add
or
add
jge
aam
mov
addl
xlat
clc
cltd
cmpl
in
mov
xchg
lds
movsl
cli
loopne
mov
les
int
fs
cmpsb
jp
ds
call
jge
sbb
clc
sbbl
sbb
or
in
and
in
mov
inc
push
incl
cmc
inc
aaa
in
and
xchg
and
or
clc
mov
pushl
inc
push
call
mov
mov
loop
mov
push
sbb
jb
push
decl
xor
lcall
dec
aam
lds
pusha
or
shll
js
and
imul
cltd
cmpsl
or
lcall
bnd
ret
lods
clc
pop
mov
orl
xorb
sahf
es
jg
jb
divl
aaa
jbe
sub
cmp
stc
lods
pop
faddl
scas
or
pop
jecxz
mov
hlt
inc
cmpsl
lret
inc
jae
fcoml
arpl
jge
fmull
out
rcrb
movsb
imul
daa
sbb
xchg
xchg
call
ret
scas
decl
add
mov
mov
scas
dec
ljmp
cmp
xchg
ss
jno
cmp
or
mov
and
push
pop
mov
jno
shr
or
pop
add
dec
movb
adc
jecxz
and
jp
aam
xor
movsb
lret
adc
sbb
mov
mov
xlat
cld
pop
sub
call
popl
mov
sub
int3
popf
clc
movsl
out
push
sbb
jp
push
shll
and
mov
mov
int3
xor
call
pushf
leave
clc
jl
orb
cmp
jmp
stc
test
fcompl
imul
stos
rclb
lods
lret
xchg
inc
pushf
push
sbb
mov
xchg
jg
movsb
ret
jecxz
inc
scas
imull
inc
decl
sbb
fnstsw
jmp
iret
scas
sub
lret
insl
lods
daa
jns
add
aas
mov
arpl
or
cs
jnp
in
hlt
aas
shll
jl
scas
jo
pop
addr16
and
add
pop
hlt
out
out
pop
fucomip
or
fsubl
bound
adc
pushl
std
out
xchg
repnz
xchg
xchg
out
jle
push
repnz
dec
testb
dec
mov
mov
daa
jecxz
xlat
sub
mov
cli
mov
inc
pop
inc
out
xlat
pop
es
iret
xor
mov
pop
push
and
or
movsl
popf
iret
inc
mov
inc
lods
nop
pop
push
inc
dec
fmul
rcrb
incl
rclb
mov
insb
pop
pop
jns
pop
xlat
xchg
or
dec
div
mov
test
jp
mov
xchg
dec
je
lea
pushf
sti
inc
cmp
jg
pop
addl
lret
jp
in
and
lret
push
xor
pop
clc
lods
dec
test
cld
call
dec
fistps
xchg
mov
bound
pop
inc
sub
xor
jno
icebp
cmpsb
push
mov
cmp
loopne
xchg
outsb
push
inc
gs
call
das
cmp
mov
ficoml
stos
push
jecxz
inc
inc
sub
mov
lock
cmp
xor
xchg
push
push
test
iret
lds
jno
shlb
in
push
call
movl
lock
sbb
test
and
xor
inc
call
hlt
add
xor
test
lahf
jle
ss
mov
pushl
mov
in
out
clc
xchg
jae
push
fsubrl
dec
pop
ljmp
add
addl
enter
fsubr
mov
xor
push
inc
repnz
mov
flds
push
negl
fldl
pop
call
rcrl
ja
sbbb
repnz
cmp
jmp
cs
imul
ljmp
or
fsubp
and
dec
adc
decl
imul
imul
imul
xor
fcos
jg
ljmp
jnp
push
jg
cmpsl
xor
push
leave
push
movsb
xor
or
xor
decl
int3
scas
cli
gs
out
dec
aam
pop
xor
xchg
mov
cmpsb
xchg
insb
dec
push
in
sar
scas
shlb
aad
mov
pop
mov
incl
enter
mov
por
inc
in
mov
es
lcall
movsb
add
jmp
ljmp
pusha
fsubrs
cmp
ret
fwait
and
rol
inc
lcall
incl
jge
xor
mov
mov
aad
or
aad
adcb
icebp
aam
and
pop
into
push
mov
loopne
jns
sub
pop
dec
mov
push
push
adcl
ficompl
mov
push
xchg
push
mov
push
out
clc
pushl
fsubrp
fwait
loope
inc
or
cmp
je
call
shrl
sbb
sub
mov
cmp
add
cli
xor
fidivl
fs
pusha
std
cs
cwtl
push
add
sub
jnp
inc
sar
call
ds
lret
nop
leave
inc
test
fstl
mov
ljmp
mov
arpl
sbb
das
mov
insb
jnp
stos
xor
out
out
stc
mov
inc
mov
xchg
loopne
inc
and
out
dec
xor
movsb
icebp
cli
add
lods
andl
pop
inc
ds
or
fsubrs
add
mov
lds
mov
iret
int
dec
out
mov
fdivrs
dec
mov
call
dec
pusha
mov
jle
cli
js
iret
sbb
dec
repnz
xlat
pop
xchg
cmp
xor
aad
lahf
mov
enter
and
mov
aas
pop
mov
jb
jnp
call
outsb
insb
mov
dec
xchg
lret
nop
push
imul
fisttpll
popf
daa
push
leave
xchg
call
mov
ds
push
xor
or
mov
or
mov
cld
jns
mov
loopne
daa
jle
mov
loope
xchg
dec
pop
hlt
call
in
stos
add
outsl
xor
scas
daa
inc
sub
and
mov
mov
loopne
stos
rorb
ss
mov
push
movsl
push
push
and
movsl
adc
lcall
xor
pop
and
insl
stos
jle
jle
sar
ss
jo
add
and
pop
icebp
inc
adc
xchg
mov
push
mov
fsubl
scas
aam
out
repz
sahf
mov
decl
xchg
pop
xor
mov
movsb
cmc
jecxz
add
push
aam
jne
aad
fimuls
call
and
and
jns
cmp
pop
test
xchg
out
scas
test
push
rclb
aad
push
sub
mov
dec
sbb
addl
cli
mov
scas
test
dec
call
pop
mov
cli
mov
inc
mov
pop
arpl
push
cmpsl
xor
xchg
mov
leave
jl
decl
ljmp
int
xor
jae
mov
and
nop
sub
inc
mov
add
or
mov
mov
fwait
jl
notb
mov
bound
call
adc
push
sbb
subl
and
cmp
mov
loopne
sub
sbb
popa
and
ljmp
stos
test
dec
bound
outsl
sub
mov
xchg
jmp
cld
pop
addr16
int3
das
mov
clc
sbb
mov
decl
outsb
daa
enter
cwtl
aaa
mov
mov
adc
pushf
jae
or
jmp
notl
adc
stos
pusha
cltd
cld
popf
xor
loope
mov
jl
sti
enter
inc
add
aaa
sti
decl
dec
jo
inc
inc
mov
mov
cmp
mov
sahf
out
fwait
outsl
loopne
clc
add
pop
arpl
and
mov
jo
stos
inc
enter
lcall
icebp
cmp
notl
insl
inc
cltd
loop
mov
js
push
xor
sti
mulb
push
inc
out
or
inc
mov
enter
lea
mov
add
add
scas
cli
lcall
jle
pushf
in
mov
dec
dec
cmpsb
aad
adc
ja
cmp
jmp
and
ret
pop
cs
and
sbb
cli
clc
cmp
cmp
aaa
in
mov
jnp
inc
rclb
adc
mov
decl
pop
cs
cmp
and
iret
jns
or
push
push
aaa
std
jns
xor
and
adc
mov
leave
pop
out
pop
cmpsl
int3
add
or
inc
mov
loope
and
push
imul
pop
mov
decl
xchg
movsb
arpl
decb
and
sub
bound
rclb
xchg
sub
fidivrs
es
inc
mov
lcall
and
adc
or
pushf
mov
xchg
insl
jne
adc
ret
xor
mov
sub
xor
inc
pop
ds
mov
lcall
ljmp
cmp
rcl
sbb
xchg
das
cmpsl
jbe
ja
idiv
jg
fsts
out
sub
orb
fdivs
add
js
jno
jg
aad
je
or
and
cmp
popf
sahf
pop
cld
add
cmp
mov
das
sar
dec
cld
and
int
or
dec
cs
rorb
xor
sbb
fcmovnb
stos
nop
iret
andl
jne
mov
popf
lahf
inc
adc
aaa
cs
xor
mov
pushl
xor
aas
cmp
xor
add
inc
adc
in
inc
xor
scas
add
in
fwait
inc
ss
pushl
sub
or
fwait
push
inc
push
add
int3
jle
das
mov
xchg
fsubr
sub
pop
daa
lods
push
jg
enter
test
mov
jg
mov
pop
cmc
rolb
cli
adcl
inc
dec
test
adc
fs
std
decl
jp
repz
shlb
pop
mov
fildll
cmp
mov
dec
cmp
mov
push
xchg
adc
add
scas
adc
rcll
cmovb
pop
jecxz
xor
adc
cld
decl
push
out
push
dec
test
and
fcompl
xor
lcall
xor
jp
pusha
in
and
fbld
mov
popl
pop
mov
insb
cld
mov
movsl
lahf
xor
sbbb
ljmp
jp
push
ret
shl
jb
inc
loop
test
shrl
xor
push
mov
test
xor
sarl
pop
sub
sti
inc
stos
pop
out
movsb
pushf
dec
cmp
cwtl
pushl
es
test
mov
outsb
lret
fiaddl
bound
imul
cmp
ret
hlt
push
push
inc
mov
fadd
add
fbld
cmp
out
negb
ljmp
push
in
je
cmp
sub
sar
mov
or
lcall
enter
add
fdivs
dec
in
push
test
cli
mov
decl
adc
or
push
loopne
pusha
shl
xchg
arpl
cli
ja
repnz
call
pop
fistpl
dec
ja
xchg
je
inc
mov
mov
sub
out
add
out
notb
rorb
mov
pusha
fdivrl
xchg
ds
mov
in
in
shlb
push
call
inc
stos
sbb
mov
ljmp
xor
jge
adc
sbb
and
push
rorl
sbb
jl
das
jp
lret
cmp
mov
adc
out
loop
loope
lods
pop
loopne
js
incl
enter
scas
and
clc
pusha
test
sub
sub
pushl
mov
bndldx
push
add
xchg
cmpsl
in
xchg
lods
mov
std
cmp
incl
sbb
mov
out
fwait
enter
in
je
popf
mov
dec
imul
fwait
or
rol
es
adc
jp
pop
mov
mov
daa
mov
cmp
aas
fldt
mov
std
xor
pxor
mov
jmp
xorl
cwtl
push
in
adc
js
xor
sti
and
pop
pop
sbb
call
data16
fistps
lock
or
fbstp
dec
push
roll
or
jg
ljmp
les
add
jge
xchg
adc
inc
aaa
fs
ljmp
es
cltd
lahf
pushf
scas
into
jo
and
call
mov
popa
sti
cmpsl
sub
es
pop
movsl
ljmp
adc
fldenv
cmp
movsb
outsl
xor
int
xor
lcall
loope
in
xor
sahf
and
mov
cmpsb
jmp
mov
cltd
or
cwtl
ret
fdivr
push
mov
mov
xor
fcomps
sahf
jb
sub
mov
mov
mov
push
dec
cmc
xchg
or
add
movl
xor
imul
in
pushl
flds
cmc
push
jge
xchg
cmpsl
jne
rolb
xor
sbb
xor
lcall
repnz
outsl
add
jge
ss
and
add
jg
ss
sbb
ret
sub
int
pop
subb
pop
test
jmp
cmp
jae
lods
fidivrl
mov
or
adc
xchg
inc
fildll
jae
xchg
incl
add
jle
rclb
inc
dec
mov
das
clc
ljmp
aas
ja
aaa
cmovp
pushfw
mov
jnp,pt
mov
call
push
jbe
mov
ja
inc
jbe
jge
in
adc
sbb
and
mov
scas
iret
lret
sub
icebp
aas
mov
push
xor
cld
in
ljmp
stc
adc
adc
sub
jecxz
xor
cmp
stos
jnp
in
mov
inc
jae
push
dec
xor
lock
sbb
pushf
rcrb
test
addr16
sbbb
fisttps
js
pop
jo
push
negb
sbb
cmp
xor
in
add
add
and
push
mov
imul
jb
add
dec
or
ljmp
bswap
or
fstpl
xor
gs
pop
jb
jne
in
test
scas
repz
mulb
out
and
ljmp
lcall
mov
dec
mov
hlt
adc
push
lock
je
mov
pop
insl
mov
call
or
and
jo
push
fdivrl
xor
mov
jnp
decl
outsb
ljmp
fildl
mov
xor
std
jns
decl
enter
dec
stos
mov
sahf
sahf
imul
int3
daa
rcrb
dec
adc
out
mov
stos
mov
scas
mov
cmp
call
mov
cmpsb
mov
fiaddl
mov
jne
lock
arpl
sbb
ljmp
movsb
aaa
enter
push
subb
mov
mov
rol
inc
sub
and
jmp
xchg
sbb
adc
movsl
loope
in
xchg
sub
scas
ss
ljmp
xor
jge
mov
out
fdiv
clc
and
js
dec
dec
out
negb
insl
cld
loopne
sti
inc
push
decb
mov
mov
sub
fistpll
sub
into
pop
hlt
push
lock
lcall
scas
je
incl
mov
push
fstpt
ja
inc
jne
xlat
inc
scas
xchg
bound
dec
mov
lcall
fwait
bound
xor
push
repz
sub
leave
int
daa
loope
decl
push
and
jnp
mov
nop
fstl
or
add
popa
pop
pushl
out
clc
inc
ss
pop
push
or
cmp
jmp
lret
nop
mov
add
fsubl
push
mov
fidivrs
mov
sbb
dec
cmp
arpl
incl
mov
xchg
out
pop
jecxz
les
xor
push
push
idiv
decl
sbb
insl
jo
dec
int3
out
xchg
scas
ljmp
add
dec
xchg
dec
adc
aam
mov
mov
jne
outsl
mov
add
adc
jg
stos
dec
xor
xor
mov
push
sbb
std
jmp
push
push
lcall
sahf
inc
jg
sub
lahf
out
jg
mov
pop
push
fsubs
jg
xor
sub
and
sbb
and
pop
rcrl
xor
inc
lcall
mov
int3
scas
in
pop
push
dec
mov
jne
mov
cwtl
xchg
and
sub
cli
adc
jb
scas
sar
addr16
cltd
aam
pushl
out
xor
push
aad
mov
idivb
mov
xchg
lret
push
ljmp
xchg
push
test
mov
fidivl
lock
jp
mov
aaa
or
ss
in
pushl
and
decl
repnz
xlat
movsb
xchg
lcall
adc
mov
dec
arpl
pop
and
cmp
mov
sub
lret
inc
and
test
ljmp
or
and
cmpsb
or
pop
sbb
sub
mov
dec
jle
lods
jo
jg
lcall
xor
dec
or
or
stc
into
push
cmc
clc
es
ret
add
push
jl
jne
push
decl
jle
orb
mov
dec
outsb
push
fiaddl
imul
imul
loopne,pt
incl
stc
pop
popf
mov
mov
push
sti
xchg
les
xchg
jb
cwtl
cmpsb
call
inc
ja
pop
ret
and
push
scas
pop
ficomps
inc
add
cli
mov
pop
and
ljmp
pop
scas
xchg
push
pop
nop
jb
js
pop
cmc
iret
mov
test
mov
add
incl
jo
ffree
stos
loop
shl
imul
xlat
pushf
les
ljmp
xchg
lods
mov
xor
push
cmp
fstpl
lret
jae
push
jmp
es
rorb
xchg
insl
test
pop
or
pusha
clc
cmpl
ret
mov
arpl
les
arpl
cmc
dec
add
sub
lcall
aas
inc
lds
push
mov
cs
das
pop
enter
jg
push
stos
aad
out
adc
add
jmp
cmp
cmp
sbb
in
mov
mov
enter
mov
pop
es
mov
xchg
incl
dec
pusha
dec
pop
push
mov
xor
cwtl
in
clc
lds
add
scas
rolb
and
ror
pop
inc
xchg
imul
fists
mov
flds
pop
dec
inc
cwtl
dec
lea
decl
clc
adc
test
popf
xchg
int
iret
movsl
sbb
call
pop
sub
je
lods
mov
mov
dec
push
or
push
outsl
adc
call
pop
sti
incl
lock
mov
in
mov
in
push
xchg
ret
mul
jp
aaa
and
jmp
loope
xchg
lret
adc
fisubrs
ljmp
mov
mov
cmpb
ret
jae
mov
lcall
inc
push
cli
sbb
pop
pop
ljmp
jmp
xchg
jno
fidivrl
sti
sub
pop
jge
mov
and
sub
add
sbb
imull
mov
jg
jmp
xchg
mov
jg
xchg
sahf
fs
ficoms
dec
sbb
test
decl
add
add
cmp
xor
sbb
leave
dec
fisttps
cmp
cmp
in
fists
incl
andb
aas
adc
jnp
mov
imul
cmp
call
pop
xor
fwait
sub
sub
cmp
fiadds
jno
inc
nop
or
xchg
ljmp
nop
sarl
push
not
fisttps
fsubrs
icebp
out
clc
adc
cltd
fsub
dec
in
cmp
xchg
sti
inc
lcall
sub
test
inc
and
inc
aas
fldcw
mov
add
pusha
jo
hlt
inc
and
out
call
sarb
push
fdivl
popa
dec
add
push
call
aad
cmp
outsl
mov
lea
movsl
mov
push
scas
mov
or
bnd
cmc
das
into
mov
cmp
movups
dec
jge
and
cmpl
repz
xor
loope
cmp
mov
dec
loopne
or
sub
push
push
lock
mov
stos
sbb
test
arpl
data16
decl
enter
pop
push
into
std
into
scas
xchg
xlat
into
mov
paddsw
inc
imul
outsl
cli
push
mov
push
jns
lcall
cmp
adc
dec
loop
jno
imul
iret
dec
jne
scas
lcall
xor
sub
sub
jmp
cmpsb
cwtl
push
test
mov
nop
pushf
int3
push
or
mov
mov
das
enter
xor
les
jne
ficomps
jl
bound
mov
out
push
add
and
push
repz
repz
test
push
cmp
dec
adcb
push
add
movsl
movb
push
aad
mov
imull
roll
sub
loop
mov
ret
in
fistpl
fisubrl
mov
popl
lret
hlt
add
insb
adc
stos
mov
ljmp
scas
mov
lahf
setnp
add
lods
jg
shll
mov
incl
pop
in
aas
fisubrs
sub
clc
sub
ss
aam
xchg
add
popf
lahf
jmp
aaa
in
or
jp
bound
ret
push
xorb
andl
call
das
inc
in
push
fnstenv
mov
cmp
sub
test
cmp
test
fstpl
inc
pushl
push
adc
test
rclb
jge
pop
or
icebp
push
lock
dec
cli
js
fstpl
sbb
lea
cli
les
sarl
sahf
xchg
adc
repz
ljmp
mov
in
ret
cmp
das
aaa
lods
int3
fdivs
xchg
xor
adc
daa
pop
jae
jno
out
jmp
xlat
in
pop
std
test
mov
inc
dec
out
pop
popf
sub
push
lods
ss
dec
pop
sbb
ljmp
addb
add
clc
clc
xor
jbe
stos
cltd
dec
testl
push
mov
mov
jg
fisttps
mov
push
ficomps
adc
and
add
daa
movsl
clc
call
push
lcall
mov
jbe
mov
dec
fwait
or
push
sbb
adc
jmp
xchg
xchg
cli
lahf
flds
xchg
xorl
pushf
data16
sbb
enter
movsb
rorl
xchg
pop
rcrb
lods
test
out
lret
or
aaa
adc
and
jge
cmp
mov
stos
jno
jp
les
jge
pushl
inc
push
fwait
cmp
push
push
cli
mov
sbb
dec
aam
popf
and
mov
rorl
loop
call
push
popf
jmp
pop
and
scas
sub
fsubrp
inc
test
add
jnp
out
in
insl
stos
daa
lret
mov
aam
dec
stos
sub
or
or
jg
data16
lret
out
push
dec
sub
push
mov
jns
lock
pusha
lods
decl
inc
rorb
das
stos
sbb
andb
ret
int3
fidivrs
jg
stc
inc
pop
into
ljmp
addl
notb
push
xchg
leave
std
cwtl
dec
call
lcall
inc
xchg
sub
or
mov
test
ljmp
cmp
shr
sbb
add
out
adc
iret
mov
and
insl
or
dec
mov
lcall
mov
add
mov
mov
sbbl
leave
jbe
icebp
sbb
jle
lods
cmpsl
sbb
pop
lock
and
das
std
aad
push
leave
adcb
imul
mov
in
pop
or
cmp
data16
cs
mov
jae
pop
icebp
cmp
inc
sbb
ljmp
fldt
cs
jno
add
cmp
push
add
lea
push
cmpsl
dec
mov
inc
test
jno
add
aad
xchg
sub
aad
add
mov
pushl
mov
insl
shr
fs
jo
leave
nop
cli
cmp
push
cmp
xchg
xchg
xchg
pop
sub
stos
mov
fisubs
add
and
shl
ud0
pop
mov
add
ds
test
mov
xchg
fdivs
adc
out
sub
leave
incl
incl
jge
bound
add
hlt
loop
xchg
mov
lcall
sbb
push
popa
pop
fnstsw
bound
in
inc
int3
mov
sub
int
dec
aad
hlt
cld
std
and
in
inc
jp
push
cmp
sub
and
push
xchg
fsub
fisttpll
popa
jle
or
add
cmp
sub
rol
scas
cli
movsb
pusha
sub
sbb
movsb
or
lcall
cwtl
nop
repnz
adc
add
push
pop
or
jo
incl
mov
gs
enter
std
fsubl
or
lods
inc
mov
decl
shl
jnp
loopne
and
in
cli
ror
out
or
ljmp
sbb
fsubrs
pop
add
sub
mov
aad
ret
test
mov
push
inc
or
test
dec
adc
sub
pushl
testl
cmp
jne
mov
xor
mov
xor
xor
ljmp
cli
sbb
push
pop
and
je
out
jg
sbb
jmp
or
in
mov
add
inc
pop
popa
inc
mov
dec
xchg
sbb
fcomi
clc
add
inc
or
adc
cli
pop
push
popa
out
lcall
sbb
iret
in
pop
clc
test
push
aaa
popa
add
mov
and
cs
xchg
mov
pop
mov
lea
dec
cmp
dec
jg
pushl
mov
pop
xchg
popf
clc
lret
stos
xchg
ljmp
loop
in
jo
lret
push
mov
xor
pop
push
decl
mov
ret
xchg
fnstcw
aad
mov
inc
push
ret
cli
bnd
fwait
arpl
lcall
shr
mov
add
nop
mov
xchg
bound
or
gs
add
pop
inc
cmp
mov
orl
fdivrs
jge
jnp
sub
aaa
jb
cmpsb
xchg
and
test
out
pop
add
fwait
jbe
fcomip
aas
cwtl
sbb
sbb
jb
or
inc
pop
test
jb
sahf
inc
xor
ljmp
subb
js
call
add
mov
mov
loopnew
sub
jmp
lods
or
cmc
push
and
jecxz
sbb
hlt
pop
pop
fdivr
mov
aam
adc
stos
jae
lcall
call
sbb
jno
xchg
cmp
or
cmp
push
rcr
adc
sahf
or
lock
mov
call
rcrl
in
lods
inc
and
jl
and
das
scas
pop
mov
xorb
jne
incl
lret
mov
cmp
dec
push
and
loope
mov
xor
sete
out
lods
pop
lea
sbb
dec
call
ds
cmc
xor
jle
in
mov
hlt
xor
nop
cmp
dec
mov
icebp
shlb
mov
pop
xor
or
lret
lret
scas
cmpsb
cmp
dec
push
mov
cmp
setge
das
insl
xchg
nop
std
pushf
call
add
pop
xchg
fcomp
ja
lea
subb
jp
gs
or
ljmp
and
cmp
mov
hlt
in
dec
adc
push
incl
fimull
aas
or
sub
sub
cmc
icebp
pop
test
mov
fdivp
add
dec
sub
ret
jg
nop
add
data16
cmp
adc
cmp
push
sub
push
movsb
mov
jmp
aad
lcall
cmpsb
inc
mov
or
ljmp
std
stos
pushl
mov
dec
aas
pop
stos
les
pusha
ret
addr16
pushl
pop
movsb
insl
dec
jmp
in
mov
popa
lds
push
xchg
mov
mov
lea
test
mov
jmp
xchg
in
fdivrs
jno
stos
xor
in
or
lret
adc
hlt
lods
std
mov
ljmp
cmp
mov
sbb
cmp
sbb
sbb
ja
adcl
out
inc
xor
dec
xchg
sub
add
jle
aaa
mov
jl
popa
call
iret
push
or
orb
in
lds
imull
mov
dec
mov
dec
or
adc
lea
call
jns
push
std
dec
jecxz
sbb
mov
rorl
mov
mov
shll
cmp
sub
pop
ret
in
scas
in
sbb
push
xor
loopne
mov
call
add
movsl
lods
push
pop
je
sahf
adc
in
ja
je
sbb
push
sbb
add
lcall
leave
push
push
add
jo
mov
fwait
mov
in
in
add
sub
jbe
clc
jo
mov
inc
cld
frstor
push
mov
or
dec
push
sbb
pop
mov
out
aam
je
lds
outsl
xchg
call
cmp
push
cli
xchg
add
mov
int
add
add
push
push
mov
movsl
incl
je
dec
push
ror
lods
rclb
pop
or
fdivrl
shrb
decl
aas
xchg
push
aas
xchg
fsubl
outsb
lods
adc
shlb
addr16
adc
incl
xor
xchg
pop
ficoml
inc
test
lods
sbb
pushf
jne
and
mov
out
mov
mov
sub
and
ret
insb
out
cwtl
ljmp
mov
jno
and
sar
adc
ljmp
test
cmp
fpatan
inc
fcmovu
dec
or
ljmp
pop
js,pn
imul
mov
mov
outsl
imul
xor
xchg
mov
pusha
mov
mov
fmuls
shlb
pop
outsb
sbb
adc
jmp
cld
in
xchg
xor
fwait
pushl
sbb
sub
mov
push
lods
pop
dec
leave
push
jno
inc
dec
int3
cmc
sahf
adc
xor
push
ljmp
sbb
inc
insl
out
lahf
or
xor
xor
and
fwait
cmp
shl
int
cmp
test
dec
pop
sbb
inc
pop
test
push
test
mov
lcall
push
adc
je
pop
scas
sub
or
cld
fcomip
jg
ficompl
call
mov
dec
mov
out
sub
call
jle
xor
pop
mov
cmpl
xchg
lods
movl
jbe
sbb
cltd
add
outsb
lods
jp
movsb
or
data16
pusha
fisttps
ss
mov
or
cmpsb
clc
repz
push
cmp
imul
call
and
vcvttsd2si
ret
iret
xor
pop
dec
fidivrl
aas
add
call
or
ja
lcall
lahf
lods
sbbl
lcall
lods
adc
test
in
cmp
sbb
cli
cmc
jg
decb
mov
cltd
cmp
jp
and
dec
inc
xchg
jmp
jns
cmp
xchg
shll
mov
fwait
add
jb
fistps
push
loope
lds
pop
std
jge
jne
mov
test
jp
sbb
cltd
out
inc
repz
cmp
sti
mov
mov
ret
mov
lcall
jae
jg
xor
clc
enter
lcall
int3
mov
fmull
fisttpll
ja
xchg
out
mov
xor
incl
bound
je
jg
imul
xchg
out
ds
mov
out
lahf
int3
lods
fs
pushl
cmc
mov
pop
jge
push
and
sbb
popa
xor
mov
shlb
add
lds
mov
cs
xchg
push
cmpsl
test
pop
imul
incl
mov
stos
les
push
dec
stc
lods
fimuls
cs
push
mov
rcrl
sarb
jl
ret
mov
lahf
and
push
lcall
pop
scas
imul
fst
inc
push
sbb
add
inc
jle
sarb
push
xlat
jne
fistpl
sub
call
mov
int
pop
cli
add
inc
sub
pop
or
outsb
in
sub
and
xor
pop
hlt
ljmp
and
rorl
test
push
adc
push
jp
dec
xor
sub
jnp
jns
cli
iret
lahf
mov
dec
js
and
jecxz
xchg
push
movsb
out
leave
loope
inc
mov
std
jmp
cli
movsb
jo
es
jle
push
sbb
scas
xchg
in
jge
xor
xor
das
push
sbb
jg
insl
inc
lret
fs
mov
inc
outsb
push
push
imul
sub
ds
xlat
push
xor
stos
pushl
sbb
inc
and
incl
fwait
jmp
inc
fidivl
and
shlb
pop
mov
add
push
fisttpll
negl
decl
inc
push
sbb
lea
inc
pop
xchg
pminub
loope
in
xor
xchg
pusha
fildll
xchg
mov
cmp
call
adc
inc
insl
jne
jne
inc
call
mov
stos
jmp
adc
call
pop
inc
inc
imul
cltd
xor
ljmp
clc
call
pusha
je
aas
adc
js
jmp
adc
xchg
cs
and
sbb
pop
loopne
pop
xlat
shl
mov
mov
sahf
test
dec
scas
jl
pop
lahf
adc
fcoml
mov
inc
jns
inc
ret
xchg
xor
pop
lods
sbb
xor
sub
jmp
pop
sti
and
cmp
mov
gs
lods
add
or
and
push
cmp
incl
mov
imul
lds
jmp
repz
mov
ljmp
xchg
test
pop
loop
add
mov
clc
mov
pop
mov
mov
scas
lods
enter
pop
or
pop
mov
faddp
mov
idiv
call
cld
pop
ds
insb
mov
adc
push
mov
aam
xor
xchg
outsb
mov
cli
imul
dec
cmovs
cmp
enter
pusha
mov
jmp
push
dec
cmc
jns
cmp
sub
in
add
cmp
cmc
xchg
in
mov
xchg
lds
cltd
sbbl
sub
sub
movb
leave
pop
xchg
mov
push
gs
sti
and
sub
aaa
inc
js
jns
adc
and
aas
out
or
repnz
jp
aad
mov
or
mov
mov
jmp
adc
das
cltd
ret
mov
pushl
xchg
adc
lods
adc
iret
jl
mov
xor
icebp
dec
movsb
push
fwait
mov
mov
decl
mov
test
jno
andl
int
loope
or
xor
lcall
sarl
pusha
push
call
push
push
ss
sbbl
insb
jns
xor
popf
push
lcall
push
lods
inc
iret
inc
nop
into
data16
xchg
pop
pop
add
jb
aad
xchg
sub
fwait
jmp
pop
outsl
jge
inc
fdivr
mov
xchg
or
add
fs
jg
lods
cmpsb
loop
lcall
xor
ret
subb
fstl
test
xorl
test
dec
out
jbe
lcall
lods
cmc
addr16
pop
sbb
cmp
ret
dec
scas
imulb
repz
aad
push
rcl
call
je
pop
inc
lret
mov
cltd
and
lret
or
and
leave
mov
lock
fdivrs
push
movsl
movsb
movsl
andb
xor
lcall
stos
stos
pop
xchg
ficompl
cmp
pop
loope
cmp
decl
lock
movsl
clc
add
test
xor
mov
fwait
push
and
ljmp
inc
jg
or
cmp
sub
jp
out
push
shrw
lret
lret
scas
push
push
mov
out
push
aam
lock
and
sbb
xchg
or
outsb
clc
out
jg
xchg
repz
call
inc
ror
cmp
and
out
jg
mov
jg
decl
jne
add
flds
push
sbb
fbld
add
nop
adc
inc
push
push
xor
cmp
scas
sbb
bound
mov
mov
adc
xchg
in
mov
mov
ret
dec
or
jae
cltd
inc
loope
mov
lahf
inc
inc
cld
hlt
mov
aas
into
mov
outsb
lcall
pop
rclb
shlb
sub
xchg
icebp
push
push
ss
inc
and
sub
xchg
fcmovu
imul
nop
in
pop
push
incb
inc
test
in
push
mov
flds
sbbb
arpl
in
ljmp
clc
cmp
cmp
or
out
popf
jecxz
push
daa
data16
pop
ret
mov
and
loop
push
jp
stc
xlat
mov
add
pop
testb
xchg
nop
outsb
jbe
ljmp
jb
pop
stc
lea
aaa
add
and
jno
xchg
in
or
std
push
push
mov
xchg
aas
out
arpl
rcll
std
es
subl
pop
add
cmp
jg
sbb
decl
and
iret
xchg
mov
adc
stos
fucomip
cmpsb
or
push
shlb
ljmp
ror
mov
push
add
xchg
push
sub
pushf
rcrb
enter
jmp
mov
out
std
jbe
inc
pusha
call
dec
pop
cmpsl
imul
xchg
cmp
incl
jmp
fidivs
jmp
pop
in
push
fldln2
shll
pop
adc
rorb
daa
jns
or
dec
insl
mov
dec
cmp
repnz
lock
cmpsl
pushf
jne
push
adc
rcrb
sub
ljmp
pop
mov
imul
mov
test
sar
call
dec
jl
adc
in
push
in
mov
jae
xchg
stos
and
mov
fdivrp
cmp
sub
icebp
xchg
cmpsl
cmp
enter
sar
pushl
inc
inc
sub
sbbb
loope
je
movsb
cmc
bound
loopne
pusha
jle
pushl
roll
xor
xchg
xor
cmp
into
jne
inc
mov
push
cltd
repz
mov
xlat
incl
dec
jecxz
add
sub
arpl
cwtl
jbe
das
pop
call
decl
pop
dec
leave
pushf
fisttpll
inc
jmp
pop
jo
cmp
pop
jns
jmp
mov
jg
je
scas
push
out
mov
sub
shrl
xor
pusha
sub
sbb
ljmp
mov
fcmovnbe
lds
clc
dec
arpl
imul
cmp
out
push
in
out
dec
xlat
ljmp
incl
aad
add
ret
xchg
jecxz
popa
dec
outsl
loope
sub
xorl
xchg
jnp
ffree
test
mov
add
mov
int
add
clc
mov
out
je
xchg
iret
xlat
push
cmp
int3
js
ja
push
decb
mov
into
push
les
aas
mov
cmp
or
pop
fwait
call
cmc
ja
incl
sub
pop
jle
rolb
cli
not
outsl
sub
pop
mov
fbld
pop
pop
sub
scas
push
aam
sbbb
push
inc
shl
mov
or
sub
ljmp
add
in
mov
insl
addb
ss
mov
cmp
ljmp
jp
mov
cli
pop
popa
xor
fildll
test
les
sub
dec
jle
add
fxch
jb
pushl
mov
jne
orb
pop
std
jl
cmc
rorb
push
mov
out
adc
jg
inc
mov
or
out
adc
pop
xchg
sbb
push
testl
call
scas
pop
jl
inc
je
jmp
and
repnz
cmp
pop
adc
xchg
jmp
gs
mov
inc
adc
mov
dec
dec
push
cmp
scas
lahf
xchg
dec
sub
cs
jl
icebp
add
imul
leave
inc
pop
scas
push
mov
jae
divb
iret
jge
jl
fnstenv
scas
pop
pop
mov
sbb
out
jl
sub
lcall
pop
inc
fidivs
repnz
mov
pushl
jmp
in
hlt
shl
fistpl
add
jo
or
mov
incl
stos
push
lods
nop
xchg
xchg
pop
nop
mov
nop
mov
sub
pushl
jnp
inc
aas
rcll
addr16
xchg
aad
addr16
push
and
jge
sbb
xchg
loopne
aas
push
jl
pusha
out
cmpsl
andl
in
repnz
adc
decb
add
cmc
call
ficomps
scas
bound
not
leave
fdivs
adc
mov
sub
cmp
or
sub
loopne
fnstsw
pushf
cld
mov
xor
sti
and
jge
insl
ja
out
das
ficomps
scas
push
cmp
in
scas
mov
add
sub
sub
mov
decl
jne
fdivl
popa
push
push
ljmp
dec
mov
pop
mov
and
jns
mov
and
lea
cmp
dec
sub
ds
icebp
or
mov
dec
pop
xchg
loope
jmp
aad
mov
sbb
mov
ss
decl
dec
jnp
sbb
inc
sbb
cs
insb
loope
and
shll
loope
or
imul
idiv
mov
lcall
sbb
push
mov
mov
mov
pop
movsl
int
cwtl
jge
call
pop
jns
loop
sub
in
aaa
mov
fdivr
stos
mov
push
mov
dec
pop
mov
jmp
add
xor
stc
mov
pop
adc
adcb
sti
lods
mov
push
in
mov
xchg
shlb
adcb
cmpl
inc
jb
mov
lcall
scas
sub
aam
push
aaa
das
xchg
shlb
inc
pusha
lcall
and
xor
out
ds
or
or
and
dec
iret
adc
push
stc
dec
jmp
mov
jle
jmp
loope
stos
jno
dec
aas
hlt
lds
jb
bound
imul
loopne
incl
pop
adc
xchg
out
add
aam
stos
mov
push
sbb
inc
mov
ja
push
pushl
inc
aad
and
push
xchg
inc
xor
mov
and
add
out
dec
pop
sub
dec
daa
jns
xchg
mov
jmp
nop
add
cli
fisttps
loope
es
sub
jg
add
mov
inc
inc
mov
mov
popa
dec
mov
adc
jmp
ljmp
xlat
imul
dec
push
xchg
lret
dec
das
xchg
insl
incl
mov
push
pusha
push
adc
movsl
lret
and
dec
test
jns
jecxz
mov
ljmp
into
shll
pop
stos
insl
dec
rcr
and
and
imul
jb
hlt
jmp
push
mulb
lret
xchg
jge
mov
enter
fs
jmp
ljmp
pop
adc
cld
xor
lea
lock
test
mov
int
mov
inc
test
rcrb
ljmp
idivl
mov
push
cmpsb
add
shll
mov
into
xor
pushl
mov
ss
imulb
mov
pop
lret
enter
jns
or
mov
insl
sbb
push
stos
icebp
jns
cvttps2pi
mov
rorb
xchg
jp
mov
sbb
incl
xchg
stos
and
scas
cld
push
jge
daa
outsb
jb
insb
pusha
addr16
in
mov
mov
insl
mov
cmp
push
adc
jnp
out
in
dec
ret
lcall
loop
or
and
shl
lods
cmp
addr16
xor
dec
jg
movsl
lahf
lods
aas
sub
call
cmc
sahf
or
add
notl
js
lahf
aad
push
push
mov
dec
cmp
hlt
dec
sbb
add
add
add
or
bnd
pop
das
xor
rorl
inc
ficoml
cld
mov
cwtl
arpl
xor
push
or
jg
mov
out
add
sarb
roll
jg
lret
pop
lcall
cwtl
sar
mov
out
cmpsl
scas
enter
sahf
in
pushf
sti
sub
scas
sbb
push
pop
lcall
jle
mov
push
mov
ret
pusha
adc
jno
pop
xor
xor
shrl
je
push
pop
xor
push
xorb
adc
push
mov
cmpl
mov
dec
push
ss
cmp
fwait
iret
cmp
dec
sbb
sbb
inc
test
ljmp
cli
shl
dec
or
add
jge
cmp
inc
call
or
call
arpl
lods
jmp
mov
mov
aam
and
filds
int
outsb
jmp
and
pop
push
mov
insb
aam
xchg
js
out
jbe
decl
dec
sbb
lds
cwtl
mov
daa
push
inc
jg
outsl
push
cld
add
outsb
mov
rolb
fndisi(8087
ljmp
xorb
in
cld
xchg
sahf
mov
cmp
sub
ljmp
mov
lret
enter
add
mov
add
movsl
insl
mov
pop
jmp
sti
test
and
lret
daa
push
adc
jbe
cmp
lcall
xor
or
inc
mov
mov
and
cmpsl
adc
adc
push
dec
xchg
sub
mov
loop
and
stos
lods
out
xchg
push
out
ljmp
imul
out
pop
mov
pop
adc
pop
int
add
sti
arpl
test
cld
pushl
or
jns
push
xor
mov
sub
xor
ja
aam
cmp
nop
loop
jmp
pop
push
push
insl
jo
cmp
pop
sub
pop
add
mov
pop
inc
subb
notb
mov
icebp
std
mov
sbb
xchg
test
jp
mov
iret
and
xchg
ret
xor
pop
icebp
cmp
xor
xchg
ret
shlb
in
adc
or
mov
mov
sub
adc
xchg
mov
jne
psubsb
mov
imul
jmp
imul
je
icebp
in
int3
test
push
ds
sbb
or
pop
xor
ljmp
inc
les
out
mov
push
mov
pop
cmpsb
xor
lcall
insl
iret
sbb
inc
cmc
jg
imul
cmpsb
mov
lock
mov
decl
bound
sarb
lds
or
lods
cltd
mov
nop
push
adc
pslld
inc
imul
add
sbbl
lahf
xchg
xor
dec
dec
xlat
push
out
mov
jmp
cs
scas
test
in
scas
movsb
negb
dec
cmp
call
pop
lods
pop
push
insl
push
rclb
clc
jmp
cmpsb
xchg
fnsave
mov
jg
loope
loope
mov
xor
std
sub
aaa
mov
mov
idiv
mov
pop
jg
jno
xor
rcrb
mov
sbb
jg
dec
xor
js
jnp
sub
mov
mov
inc
sub
lahf
iret
addr16
push
int3
ljmp
adc
mov
movsl
pop
out
cli
test
test
pushl
enter
mov
es
mov
xchg
inc
xchg
enter
mov
test
pushl
andb
or
pop
xchg
sbb
mov
cli
loope
jl
jmp
xchg
adc
fwait
sahf
gs
sub
sar
adc
ss
enter
ret
jmp
push
cmp
ja
push
subb
test
xlat
or
into
mov
mov
es
es
outsb
test
hlt
lahf
es
shll
call
jno
push
add
mov
jnp
mov
inc
jmp
push
xchg
sbb
xchg
pusha
sub
sbb
out
push
push
js
jmp
inc
in
lcall
pop
sahf
loopne
xlat
sbb
pop
cmp
leave
popf
and
xchg
sub
inc
decl
cmc
iret
mov
test
cmp
xchg
xchg
push
jnp
popa
cmp
mov
incl
cmp
inc
mov
clc
imul
fidivs
lret
push
mov
popf
adc
sub
clc
inc
push
xor
cmp
addr16
ret
xorl
push
mov
std
ljmp
in
push
enter
dec
loop
xchg
jge
js
or
jecxz
loopne
push
mov
dec
inc
enter
mov
fdivl
and
xorb
inc
mov
and
lcall
loopne
mov
dec
cmpsl
movsl
arpl
xchg
and
mov
mov
jmp
adc
dec
mov
dec
inc
cltd
jb
xor
shrl
dec
jmp
jmp
mov
jg
mulb
test
inc
push
adcb
push
arpl
lock
mov
call
repz
or
sbb
cmpsb
ret
jne
xor
sbb
xor
ja
mov
popa
loop
push
pop
add
push
js
mov
inc
lahf
mov
push
jne
xchg
jae
pop
dec
sub
and
aaa
sub
add
dec
pop
sbb
push
loop
call
jmp
cmc
or
xchg
dec
cmpsb
push
push
aaa
test
push
cmp
and
scas
jo
xchg
jp
and
das
push
lods
mov
sub
pop
pusha
jecxz
out
test
or
push
sahf
cmpsb
frstor
mov
cwtl
lods
push
mov
ljmp
push
ret
pop
add
cltd
lret
test
out
or
mov
and
incl
adc
jo
loope
aaa
mov
lods
sbb
nop
and
pop
jle
cs
or
sub
call
jmp
dec
fsubl
roll
lcall
ljmp
xchg
ljmp
cltd
mov
cld
push
sar
mov
jp
pushl
mov
mov
push
add
js
dec
mov
push
lods
out
cmp
sbb
jmp
add
pop
loope
ss
icebp
mov
mov
mov
gs
or
jecxz
mov
test
ds
push
sub
mov
scas
push
lods
push
outsb
mov
cs
jle
fidivrl
mov
cli
or
out
pop
push
fcoms
shl
lods
enter
iret
ds
popa
fstl
ss
mov
xchg
movsl
adc
push
push
hlt
aam
mov
pushl
dec
mov
enter
mov
push
adc
mov
jmp
inc
push
xor
cmp
mov
mov
sbb
cmpsb
dec
addb
movl
jmp
popf
movsl
mov
xor
fsubrl
shlb
mov
jbe
call
mov
push
adc
call
pop
inc
je
sub
xchg
fisttpl
and
mov
and
add
or
call
and
js
jnp
inc
mov
adc
dec
lods
xchg
std
cmp
pushl
shr
test
adc
movsb
lahf
mov
movsl
punpckldq
jae
xchg
int3
push
leave
xchg
adc
call
das
xchg
sbb
mov
mov
stos
push
es
mov
or
push
mov
jmp
mov
popa
cmp
xlat
enter
imul
inc
les
jne
push
test
xlat
aas
lods
fcompl
fs
sbb
out
hlt
bound
int
mov
out
mov
add
fcomps
cmp
jecxz
imul
adcl
ljmp
icebp
movsl
cmp
and
lret
rcrl
push
icebp
and
push
icebp
call
insb
sbb
decl
lods
dec
jge
adc
pop
divb
xor
in
ljmp
fdivr
cmp
mov
aaa
add
test
mov
enter
ljmp
sarb
cmp
push
push
pushf
or
add
ret
aaa
xchg
cs
decl
jecxz
jle
in
dec
add
xlat
mov
fsub
dec
js
ljmp
and
out
out
test
jp
mov
adc
ja
mov
push
sarb
cli
pop
pushf
aam
bnd
cld
fidivs
mov
push
or
mov
cmp
test
sti
enter
ljmp
sbb
inc
cmpsl
add
dec
pop
lods
imul
aaa
into
mov
mov
es
es
sahf
inc
ss
hlt
push
das
sar
in
insl
hlt
repz
dec
addr16
dec
and
mov
inc
sbb
mov
incl
sti
jg
sub
out
adc
mov
imull
xor
in
pop
subl
jns
lcall
cmp
pushl
adc
inc
mov
fsubrl
mov
insl
and
call
jbe
push
mov
xchg
insl
xchg
fsts
fs
js
adc
mov
daa
mov
ljmp
or
sub
ss
mov
jmp
sahf
icebp
or
adc
pop
adc
mov
icebp
in
inc
xor
test
sar
pushf
xor
inc
sahf
lcall
pop
add
pushl
adc
and
mov
xchg
loopne
dec
fs
pop
imul
mov
mov
mov
cmp
dec
rol
aas
cld
pop
mov
add
jecxz
jmp
jl
pop
repnz
test
inc
decl
add
lcall
mov
je
shlb
out
mov
je
adc
lods
cmp
aaa
stos
test
add
incl
xchg
inc
cmpsb
sub
dec
sub
inc
rcrl
in
or
inc
cmp
clc
ljmp
inc
xchg
fimuls
rolb
scas
push
mov
int3
xchg
pop
jecxz
std
repnz
cli
pushl
jl
shlb
pop
dec
add
ss
xchg
add
out
lds
cld
arpl
cmp
int3
pop
imul
pop
sbb
pop
outsb
ja
call
xor
lea
cmp
cmpsl
cmpl
push
loope
cmp
jecxz
inc
jg
pusha
jbe
pop
fwait
and
inc
lods
aaa
adc
jg
call
inc
mov
push
sbb
test
xchg
in
xchg
movsl
ljmp
gs
dec
and
das
cld
fwait
ds
jb
and
test
leave
jnp
addr16
jp
roll
int
imul
ss
inc
popl
lock
cli
and
cmpsb
or
mov
loop
out
mov
lahf
mov
push
mov
push
mov
inc
jns
mov
inc
sub
inc
jno
mov
rclb
sti
xor
lret
mov
pop
sbb
lahf
repnz
ljmp
inc
je
or
cmp
popf
add
push
and
jg
cld
loope
add
ljmp
insl
push
out
or
sahf
or
add
incl
imul
push
cld
decb
je
popf
pop
icebp
jg
incl
popf
fwait
rclb
inc
xchg
lock
pop
xor
mov
call
lret
xor
or
cltd
bound
lcall
loop
dec
insl
in
or
adc
jae
popf
imul
fisubs
cmp
scas
mov
mov
dec
pop
and
jno
jns
lret
std
xor
cmp
jecxz
pop
mov
push
call
jbe
push
nop
add
xchg
xchg
sub
push
mov
repnz
fidivrs
in
jmp
andb
dec
and
pop
ljmp
or
xchg
addr16
incl
stos
aad
jbe
mov
dec
shll
mov
pop
inc
inc
dec
clc
bound
bt
cmp
cmp
test
jne
ret
imul
loop
pop
sub
or
fwait
jp
pushw
mov
inc
and
cmp
pop
outsl
pop
pop
or
stc
ljmp
push
lret
jp
cs
fwait
mov
xor
xor
or
mov
xlat
scas
test
xchg
push
lds
cli
sbb
xchg
outsl
cli
push
cmpsl
jae
or
xchg
adc
mov
loopne
pop
cltd
mov
mov
pop
pushf
sbb
mov
sar
decl
xchg
pop
int3
cmp
test
and
popa
xchg
add
jg
lea
in
aad
jmp
dec
and
jns
mov
pushl
add
enter
jno
sub
std
loop
mov
mov
lcall
shr
andl
dec
and
rclb
and
push
inc
add
pushf
mov
mov
hlt
mov
aam
rcrl
test
cmp
xchg
cli
incl
aaa
dec
push
cmpl
cmpsb
jae
mov
xchg
out
mov
cmp
lock
gs
cmp
enter
movsb
ds
add
jecxz
decl
sub
test
dec
sub
xchg
cmp
outsl
adc
daa
test
cli
or
mov
fmul
cmp
in
cwtl
xchg
das
and
mov
mov
fwait
int
add
pop
inc
pop
cwtl
lcall
lock
xchg
rcrw
jecxz
inc
lods
adc
sbbl
mov
jns
xor
mov
sbb
sub
testb
repnz
icebp
dec
sbb
cmpsl
lret
pop
rorl
lcall
dec
inc
mov
and
cld
mov
mov
dec
lahf
mov
and
jno
test
outsb
mov
pop
daa
cmp
std
pop
sub
divb
loope
dec
or
scas
daa
cwtl
xlat
daa
adc
inc
sbb
mov
inc
sub
sbb
or
jae
mov
xor
clc
xor
mov
incl
data16
pop
hlt
mov
cmp
mov
dec
lock
pop
jg
mov
mov
push
ja
and
mov
sahf
jg
add
cmpl
decl
imul
cld
add
or
es
and
insb
push
sub
outsb
inc
fs
lcall
shlb
mov
add
add
ret
jmp
jmp
add
jns
add
mov
ret
and
jmp
repz
inc
hlt
nop
pop
ficompl
add
pop
ja
inc
mov
cs
jmp
insb
inc
cld
mov
enter
shr
clc
insl
insl
push
repz
cmpsl
into
xchg
iret
fstp
insb
pop
call
inc
xor
ret
fidivs
or
rolb
xor
scas
jbe
inc
insl
mov
jmp
pop
lods
sbb
cld
dec
pop
subb
dec
mov
sub
mov
mov
mov
out
cltd
aam
pop
mov
sbb
sub
pop
fcoml
test
aam
pushl
aaa
mov
shrl
and
lods
mov
cmpsl
mov
and
jg
inc
adc
push
mov
lods
lods
add
sbb
vcvttsd2si
lret
andl
mov
sub
gs
lock
adc
xor
ret
pop
mov
faddl
xchg
xchg
pop
jg
mov
hlt
xchg
repz
sub
aad
sub
mov
push
decl
push
and
push
orb
in
idiv
daa
push
adc
out
push
pop
jo
or
or
add
dec
cs
push
adc
jmp
dec
jle
outsb
adc
pushf
sbbb
jnp
jp
cmp
ds
pushl
rorl
jo
pop
rcrl
push
mov
in
xor
mov
push
shrb
call
inc
roll
cltd
cmp
cmp
mov
aaa
ljmp
repz
jg
ljmp
cmp
pop
mov
enter
mov
dec
sbb
mov
popa
pop
pop
lcall
insb
mov
rcll
pop
ljmp
addl
and
js
mov
scas
ret
inc
xchg
mov
or
push
xchg
cmp
and
jmp
cmp
add
cmp
pop
arpl
and
pop
push
test
push
dec
out
mov
pushl
fstp
psubusw
sub
push
push
les
cmp
mov
je
jns
jmp
or
outsb
stos
cmp
sahf
smsw
int
mov
or
daa
push
xor
dec
daa
inc
fwait
icebp
mov
hlt
sbb
scas
std
cmpsl
nop
dec
xchg
push
negl
incl
icebp
xchg
inc
sahf
jb
test
mov
mov
loope
movsl
ljmp
adc
repz
shlb
insl
jb
xchg
or
and
pop
shr
in
jle
pop
icebp
decl
cmp
mov
adc
jmp
shl
adc
out
mov
sahf
dec
pushl
mov
and
fbstp
mov
pop
addps
int
outsl
xchg
das
push
inc
outsb
push
cmp
lods
and
jle
les
dec
sub
call
or
mov
cld
cmp
jle
stc
and
fisubrl
pushf
dec
pop
jmp
std
lcall
stc
mov
xchg
jp
ficomps
std
jb
cmp
call
decl
ficoms
pop
fists
das
mov
push
inc
and
shl
es
mov
lods
mov
call
cwtl
xchg
inc
frstor
inc
cmp
shl
adc
cmp
adc
xchg
inc
jg
xor
inc
add
loope
lahf
jbe
pop
push
jmp
jo
jne
push
loope
mov
testb
inc
mov
inc
inc
outsb
jecxz
fwait
mov
mulb
stos
test
fildl
inc
push
loope
pop
or
mov
leave
pop
in
xchg
clc
cli
dec
dec
or
mov
out
ljmp
popf
adc
icebp
sbb
or
pop
fstl
xchg
jbe
js
lret
aas
sbbl
xchg
xchg
fiadds
jno
dec
imul
ja
sbb
aam
call
imul
repnz
lods
xchg
shrl
cmp
sahf
mov
in
jge
js
neg
arpl
in
push
inc
jnp
test
jmp
cs
call
iret
out
test
mov
je
sahf
jo
pusha
and
mov
push
pop
aas
dec
xchg
push
mov
jno
int3
mov
imul
adc
int3
dec
and
js
pop
pop
adc
ljmp
push
or
push
call
or
inc
in
stos
mov
popf
lcall
cli
js
movsb
cmpl
push
cmp
jg
faddl
jno
jp
cld
jne
or
call
imul
fimull
les
inc
int
add
rclb
mov
sbb
add
out
push
adc
cmp
sbb
dec
fisttpl
cld
mov
mov
cmp
sbb
mov
jl
scas
out
cmp
stos
mov
push
or
adc
pushl
push
xor
ljmp
mov
mov
mov
jae
test
imul
xchg
clc
jmp
push
mov
clc
cmp
jg
xor
scas
orl
insl
mov
mov
in
cmpsl
inc
or
cmp
ljmp
sub
in
xlat
sub
sahf
lret
pop
faddl
repnz
xchg
je
push
aad
jg
pushl
shlb
aad
adc
aam
out
pop
fsts
cmpsb
sarb
int3
pop
dec
jg
ljmp
xor
cli
sbb
adc
xchg
out
test
popf
roll
pop
sbb
sbb
pop
and
imul
lahf
sbb
adc
jmp
clc
pop
arpl
fadds
fmulp
dec
in
push
dec
fstpt
pop
mov
push
loop
ds
pusha
cmp
std
popa
push
ret
or
lds
decl
pop
ror
or
pop
stc
xor
bound
inc
ficoml
push
out
push
jp
popf
cmpsb
incl
stos
and
insl
stos
outsb
and
pop
decl
dec
sub
adc
cmp
xor
call
in
add
mov
adc
inc
sti
scas
sbb
jns
sub
dec
pushf
pop
pop
incl
adc
repnz
sar
fs
andb
jne
jns
aas
sub
sti
das
inc
arpl
mov
inc
in
pop
cmpsb
push
loop
loop
dec
ror
out
imul
ljmp
call
fbstp
repnz
mov
pop
or
mov
les
sub
cmp
mov
adc
mov
and
mov
mov
xor
incl
ficompl
add
cmp
jecxz
movsb
inc
sub
loop
mov
out
lods
xor
sub
call
jl
ret
xor
inc
enter
daa
popa
or
sub
mov
mov
ret
ficoml
test
sub
push
pop
xchg
push
das
cmp
iret
sahf
lret
movsl
push
repz
or
and
ljmp
shll
orb
movsl
imul
mov
pop
lods
pop
repz
arpl
in
xorl
adc
cmpsb
add
mov
jmp
cmc
dec
nop
insb
fsts
lahf
adc
in
sbb
lahf
frstor
in
imul
in
ja
cmpsl
fstl
sub
xchg
pop
adc
mov
pusha
jb
or
cmpsl
cmpsb
das
cmpl
mov
subl
in
jg
les
inc
add
pop
gs
sbb
enter
iret
jp
hlt
jmp
mov
daa
loopne
sbb
hlt
ret
push
notb
sbb
in
mov
int
push
test
push
xchg
sub
mov
inc
mov
sbb
cli
lock
incl
movsb
sbb
adc
and
mov
in
adc
fs
jecxz
jno
xor
in
je
cli
ljmp
mov
sub
sbb
cmp
inc
lcall
push
mov
dec
push
addr16
mov
jp
mov
push
rclb
mov
jecxz
popa
in
das
mov
mov
dec
inc
sbb
rcll
jns
push
push
cmpsb
sbb
js
or
scas
dec
fucomi
popa
cltd
push
pop
pop
mov
pop
or
cmpsl
aaa
adcb
jae
fprem1
pushl
sub
fwait
addb
adc
lret
jge
cmp
mov
mov
ds
inc
imul
neg
mov
icebp
in
inc
fldcw
cli
sbb
fdivs
movsb
xchg
incl
bound
sahf
xorl
ds
xchg
cmp
xchg
negb
dec
sbb
xchg
inc
xlat
and
rcrl
dec
pop
fsubrl
dec
inc
call
adc
filds
rcrl
int3
cwtl
push
xchg
ljmp
int3
inc
cli
cmp
xlat
dec
popa
pop
mov
add
nop
jae
cmp
mov
ljmp
jp
pop
push
and
jge
pop
push
jns
pushf
push
cmp
push
cld
pushl
mov
imul
push
add
jmp
rcll
fwait
inc
pushl
lcall
xchg
sbbl
or
xchg
movsl
and
incl
cmp
jge
xor
jo
adc
mov
mov
pusha
pop
mov
ljmp
mov
loopne
lock
ret
andl
jbe
sub
lea
es
mov
lds
and
dec
lds
adc
scas
jne
push
jl
movsb
dec
xchg
addl
adc
ljmp
xor
mov
add
or
jns
sti
shrb
ljmp
xor
out
dec
fstl
lock
outsl
pop
sub
dec
sub
add
jge
arpl
xchg
pushf
loopne
pop
dec
mov
into
test
ljmp
xchg
jge
push
jbe
push
call
mov
lock
jae
push
push
push
add
aaa
sbbb
jmp
and
push
pop
dec
inc
aas
jmp
mov
lea
lret
call
les
sbb
in
push
out
jns
lcall
jg
mov
or
add
mov
es
pop
mov
cltd
test
mov
incl
xchg
js
movsb
mov
adc
lcall
inc
lret
repnz
adc
icebp
inc
or
call
inc
pop
sti
idivb
sub
lock
add
xor
fisttps
cwtl
pop
in
push
jge
fnsave
jg
add
loopne
lock
xchg
lcall
std
rep
incl
add
mov
dec
iret
lahf
iret
jae
xor
sbb
cld
js
and
pop
xor
push
outsl
push
pop
ljmp
pushf
movsb
ficoms
fisubrs
pop
xlat
rcll
icebp
jbe
jne
imul
enter
mov
cmpsb
jmp
in
gs
rcr
mov
aad
push
outsl
mov
decl
sahf
dec
fwait
sahf
pop
fisubl
loope
fcoml
cmpsl
cmpsl
and
rcrl
scas
inc
addr16
dec
jo
cmp
pop
push
ficomps
ret
mov
lcall
sub
xor
cmp
inc
jl
mov
div
and
pop
mov
stos
pusha
das
adc
int
loope
loopne
and
mov
popf
enter
mov
nop
inc
add
call
mov
inc
jno
daa
dec
call
jns
cmp
adc
xchg
daa
xchg
loopne
or
call
sbb
pusha
push
mov
jo
xchg
hlt
inc
add
into
adc
pusha
jne
jg
sub
call
adc
frstor
mov
nop
dec
fs
inc
mov
loope
jp
mov
incl
jno
movsl
or
pop
adc
pop
repz
ret
sti
pop
pushl
std
mov
add
or
mov
mov
sbb
mov
cmp
call
mov
pop
push
out
icebp
mov
mov
das
loope
mov
mov
roll
clc
mov
outsl
shll
push
pop
movsl
jb
lcall
ss
push
push
ljmp
loope
gs
andb
imul
fistpl
add
add
mov
xchg
fsubp
mov
packssdw
lea
andl
inc
mov
pop
xor
cmp
jbe
nop
ja
incb
bound
cmp
pop
lret
inc
pop
inc
les
lock
and
es
lock
incl
jge
outsl
jmp
scas
push
jl
leave
fidivs
test
movb
mov
sti
pop
scas
adc
int3
xchg
adc
test
or
mov
sub
into
jle
mov
add
cmp
mov
xchg
ss
fwait
cmc
pop
in
push
cmp
fdivl
mov
aam
cmp
jmp
and
pop
mov
pop
ret
pusha
stc
jp
fld
adc
and
mov
out
in
insb
jecxz
pushl
push
dec
dec
fwait
cli
fxch
loope
je
add
faddp
pop
push
jecxz
ret
jg
add
sbb
mov
mov
pop
sbb
cltd
popf
out
sub
push
outsl
stos
aas
sub
mov
loope
jns
adc
add
mov
arpl
gs
repnz
outsb
out
sahf
rol
incl
jo
subl
jo
ret
jns
jg
push
lock
fcmovne
or
xchg
xchg
xchg
cmc
fistpl
popa
test
and
scas
call
shrl
push
fs
mov
lret
jbe
inc
pop
mov
jp
insl
or
incl
std
decl
add
sub
adc
mov
inc
mov
jmp
push
mov
push
add
adc
call
lea
aam
es
outsl
ret
lcall
pop
push
and
jns
sub
fiadds
pop
adc
lret
add
aad
pop
shll
push
test
int
push
or
lcall
adc
dec
popf
addl
push
or
ss
out
xchg
mov
push
ja
xchg
and
ljmp
xchg
or
sub
inc
hlt
mov
cmp
movsb
ret
ljmp
and
mov
decb
push
sbb
cmp
jg
adc
push
xchg
pop
ljmp
adc
or
mov
ja
lcall
dec
adc
mov
out
push
mov
lcall
das
bound
pop
in
ja
das
sar
mov
stc
in
mov
outsb
jnp
rorl
xor
dec
ljmp
lods
iret
pop
pop
and
xchg
and
into
stc
dec
ficoml
inc
push
pop
cmp
flds
icebp
pop
loopne
daa
shlb
push
pop
xchg
sbb
in
scas
clc
in
repz
call
mov
in
mov
imul
lods
repz
sbb
mov
inc
add
sar
vpunpckhbw
sub
cmpsl
stc
sbb
les
sbbl
cmp
test
xchg
cmc
dec
insl
jp
cmp
jmp
xchg
sub
ljmp
addr16
jnp
test
loopne
or
mov
iret
hlt
add
xchg
mov
mov
pushl
loope
pop
hlt
push
dec
mov
scas
cmpsl
repnz
inc
imul
test
or
jecxz
jb
mov
inc
mov
clc
outsl
std
subb
pop
fmulp
xchg
inc
push
gs
pop
and
lcall
imul
dec
jbe
stos
mov
push
adc
ljmp
mov
lcall
shl
inc
fcomps
xchg
stos
ljmp
jmp
dec
lahf
jmp
mov
mov
loope
inc
es
jl
call
out
and
sub
in
repz
test
and
pop
xor
jbe
sti
ja
loop
cli
les
add
pop
scas
jbe
adc
decl
sub
xor
enter
sbb
add
pop
mov
xor
into
out
sar
aaa
int
ret
push
push
cmp
inc
lea
add
lods
dec
cs
in
push
xor
popa
pop
incl
mov
push
pop
jns
repz
ret
xor
nop
fs
fisttps
add
filds
test
xor
into
mov
enter
out
sbb
sbb
in
mov
sbb
pushl
fimuls
popf
jns
cltd
push
lods
dec
mov
and
or
jp
pop
mov
clc
sbb
or
pushl
lret
dec
loop
dec
pop
cs
out
repz
mov
jl
dec
mov
scas
test
dec
incl
cld
jmp
jnp
stc
stos
ror
dec
cmp
xchg
mov
cmpsl
loop
ljmp
dec
popf
and
xor
xchg
jmp
popa
scas
pop
adc
xor
pop
jb
mov
push
pop
sub
scas
call
call
xchg
scas
sbb
xchg
mov
cmpsb
xor
jge
mov
hlt
push
sbb
popa
or
cld
adc
mov
sub
mov
or
push
lods
jb
xchg
pop
ss
add
movsl
and
or
out
shrl
scas
sub
fdivl
sub
daa
fwait
inc
lret
iret
bound
insl
cmp
jae
bound
lcall
mov
int3
inc
or
or
jnp
imul
pop
or
jecxz
test
ljmp
pop
or
pop
mov
xor
adc
ja
xchg
xor
lds
test
daa
in
fsub
mov
pop
push
and
xchg
enter
mov
ljmp
decl
push
mov
in
fildl
mov
push
mov
lcall
ljmp
sti
inc
mov
adc
subl
fwait
cmp
mov
xor
push
push
and
pushl
adc
es
sbb
or
xchg
les
jns
or
xchg
inc
sub
call
cmc
push
pop
mov
imul
mov
js
mov
ds
mov
mov
add
adc
sbb
sbb
cwtl
mov
je
testl
sahf
ljmp
sub
kmovb
mov
pop
pop
loopne
test
fdiv
test
ret
rcl
ljmp
icebp
xor
fadds
jnp
add
lods
cld
repz
ds
lods
jge
lods
cmpsb
xor
decl
inc
aad
lret
std
mov
call
loop
pop
mov
call
in
incl
xor
sbb
adc
addr16
ficomps
pop
nop
or
pusha
lcall
cmp
push
je
xchg
rcrb
lahf
faddl
push
mov
xlat
cmpsb
mov
mov
ret
gs
and
or
loop
push
cli
es
mov
decb
stos
lds
or
out
fpatan
cwtl
mov
test
push
mov
clc
call
and
test
int
fmuls
pusha
pusha
push
cmp
inc
mov
fsubp
cmp
xchg
enter
cmp
lcall
inc
cmp
cmp
call
and
xor
sub
fnsave
mov
jno
and
sar
pushl
loopne
inc
mov
stos
jp
push
stos
xchg
adc
das
test
ret
ljmp
icebp
sub
sbb
ret
xchg
sahf
ja
lahf
mov
popf
scas
daa
xchg
les
decl
xor
and
dec
push
or
sub
leave
hlt
je
out
mov
pop
into
gs
into
sahf
mov
push
outsl
decl
int3
aam
sub
arpl
xchg
jmp
int3
jns
into
mov
mov
sub
incl
ret
shll
jbe
iret
and
pop
dec
lds
mov
adc
popa
push
xlat
incl
int
mov
add
jg
adc
add
cld
fsub
ljmp
in
lret
bound
popl
outsb
adcl
jbe
lods
divb
cmp
pop
pop
pop
xorl
pop
mov
popa
xchg
mov
adc
sbb
in
sahf
in
call
fdivl
xchg
mov
lret
arpl
jp
scas
jp
hlt
stc
xchg
dec
add
fildl
out
or
loopne
mov
int3
push
pop
out
mov
incl
in
test
xchg
dec
sub
push
push
mov
inc
push
jnp
in
icebp
xchg
add
jb
dec
xor
jl
dec
js
rcrb
push
arpl
pop
lret
sub
lahf
add
cmp
test
fcomps
lcall
cmp
pushf
test
outsb
xor
bnd
xchg
inc
adc
in
push
xchg
sub
dec
pop
sahf
inc
stc
mov
lods
bound
jl
aaa
ljmp
clc
jno
dec
add
sub
cwtl
das
scas
sbb
push
shll
lcall
jae
cmp
negl
icebp
pop
sbb
aaa
lahf
aas
aaa
lret
adc
aaa
mov
pushl
add
adc
mov
in
call
std
cld
stos
gs
sbb
and
test
cwtl
rcl
fildl
xchg
movsb
js
xchg
jnp
in
xor
push
adc
out
aad
stos
xor
pushl
add
push
sub
scas
cmp
in
fwait
pop
ret
sbb
xchg
int
incl
int
into
pop
fmuls
pushf
out
xlat
mov
mov
sbb
pop
hlt
mov
push
or
jmp
fwait
in
movsb
imul
icebp
notb
inc
pop
test
insb
arpl
shl
fcos
pushl
stos
push
xor
dec
dec
pop
inc
dec
inc
cli
dec
jb
inc
jle
add
push
out
jmp
je
imul
jns
aad
jae
mov
xchg
push
scas
push
xchg
ret
pop
fwait
cmp
outsb
stos
ret
shr
popa
popf
dec
pop
gs
std
lcall
jbe
ja
in
mov
jmp
outsb
or
sub
xchg
cmp
push
cmpl
inc
jae
mov
sub
sahf
mov
jle
jmp
lods
sbb
xchg
mov
scas
cmc
fcompl
cld
mov
out
push
pushf
push
aad
lcall
cmp
inc
movsl
sub
inc
ret
stc
test
sbb
ud0
fcmovb
add
adc
aam
adc
lock
inc
sbb
inc
mov
add
mov
jge
fnstenv
enter
je
ja
xlat
cmpsl
inc
sub
addr16
test
mov
stos
lahf
push
mov
mov
cli
loopne
out
pushf
cmp
jnp
add
inc
fldenv
movsb
sbb
pop
mov
jb
in
jg
rcrb
aam
sarb
call
sbb
movsl
xchg
dec
mov
hlt
pop
xchg
inc
das
jae
stc
dec
add
mov
je
ds
jmp
push
dec
jle
push
sbb
push
or
insb
cmc
mov
mov
adc
leave
mov
rcrl
scas
push
call
mov
xchg
lret
pop
sub
jg
in
jns
int3
out
int
fs
ficomps
ror
lock
add
pushl
and
dec
movsb
sbb
cli
call
scas
jbe
aad
movsb
fcomip
push
jecxz
mov
ljmp
clc
outsl
xchg
stos
fcomps
add
jns
mulb
mov
ss
pushl
jbe
cli
xor
sbb
cwtl
sub
xchg
xor
jg
call
jb
cmp
sbb
ds
inc
mov
sarl
jl
mov
push
cld
ljmp
xchg
negl
sbb
mov
or
jnp
mov
jmp
pop
stc
test
pop
sti
mov
sbbl
daa
inc
stos
push
add
das
sahf
cmpb
je
pushl
cmp
loop
repz
call
pop
adc
fwait
negb
gs
sbb
lcall
xchg
mov
daa
xor
sbb
sarb
inc
push
mov
ret
fimull
ja
jo
jp
out
cli
mov
fisubs
push
jg
xorb
mov
dec
push
cli
ljmp
js
sub
ja
clc
or
incl
mov
push
test
xor
xchg
outsb
out
jno
stos
sbb
lea
out
cli
lcall
pop
scas
test
mov
out
sub
adc
outsl
popa
in
ljmp
cli
sahf
das
xor
in
xchg
sbb
mov
inc
in
stc
gs
incl
push
cmp
mov
lock
in
movsb
repz
insb
dec
lods
int3
aad
mov
imul
ss
jmp
pop
jb
add
and
dec
jb
lods
pop
rol
rorb
lahf
xor
rorl
pushl
aaa
js
sub
xchg
test
push
std
mov
xor
push
ret
xor
adc
mov
push
inc
mov
pop
stos
pop
repz
mov
cmpsl
mov
in
ret
push
push
in
xchg
rcr
xchg
sbb
and
out
les
pop
sbb
push
loopne
dec
movsl
push
orl
xchg
or
nop
loope
add
dec
or
daa
push
add
cld
dec
cmpl
js
or
push
mov
jne
fadds
stos
insl
imul
popf
iret
pushl
fistpl
mov
lahf
jle
dec
aad
sbb
mov
out
or
pop
mov
fstpt
clc
mov
cld
jl
loop
mov
mov
adc
sbb
int3
jns
movsl
pop
in
js
jmp
fiaddl
mov
outsb
push
and
inc
repz
das
subl
sub
testl
or
xchg
enter
icebp
and
rorb
cmpl
push
sar
inc
mov
jecxz
push
mov
cld
mov
mov
cmp
mov
das
xchg
mov
enter
push
in
loopne
fcmovnu
mov
add
jmp
mov
mov
jb
jbe
int3
mov
sbb
orb
sbb
pop
xchg
iret
je
pop
mov
pop
scas
add
or
mov
cmp
shll
xor
lods
cmp
in
sahf
dec
dec
mov
addl
mov
pop
xchg
in
mov
mov
pop
pusha
mov
jne
mov
jmp
ljmp
lcall
fildl
push
pusha
pop
mov
dec
lahf
sub
adc
and
mov
mov
negb
cli
test
ds
les
stos
lcall
adc
call
xchg
adc
stos
das
mov
cmpsl
idivl
mov
xchg
clc
pushf
fcomps
cmp
loopne
inc
iret
adc
les
in
mov
outsl
pop
sbb
xchg
lods
xchg
hlt
in
add
mov
sbb
sbb
scas
ss
aaa
jl
call
orl
jns
pop
inc
leave
repnz
xor
mov
cld
call
sti
movsl
fcmovnbe
adc
xor
fcomps
pop
lods
and
push
inc
xchg
int
adc
clc
sar
pushl
lods
mov
mov
sub
je
js
sbb
or
ret
sbb
imul
pushl
mov
dec
mov
cmpsl
inc
pusha
xlat
popf
lods
addr16
outsb
stos
pusha
bound
hlt
decl
jl
add
imull
mov
gs
or
push
scas
enter
stos
push
inc
test
pop
xor
push
adc
lea
jmp
inc
sbb
fnstcw
or
xchg
data16
push
push
xchg
sub
call
pop
pop
push
ret
ljmp
jecxz
leave
push
mov
outsb
fsubl
pop
and
dec
aam
sar
dec
js
jo
xchg
inc
pop
pop
xor
xchg
and
into
int3
hlt
and
cltd
loope,pt
rcr
repnz
pushl
scas
icebp
lcall
loope
std
mov
cltd
cmp
stos
fld
or
mov
decl
and
and
dec
inc
cmp
leave
cmp
or
pop
xor
scas
into
shlb
decl
lock
fidivrs
mov
xor
mov
movsl
lock
dec
fldt
and
ret
mov
rol
mov
jmp
shr
in
xchg
das
push
ljmp
movsb
popf
lds
mov
cmp
mov
inc
xchg
idiv
pop
rolb
es
fcomi
pop
outsl
incl
jle
call
repz
sub
sub
mov
pop
popf
test
or
cmp
jmp
pop
inc
cmpsl
in
jge
cmp
lahf
dec
lods
jge
or
mov
gs
xorl
sbb
test
jo
cli
and
movsl
jp
rcr
pop
or
push
lock
cmp
std
mov
jo
mov
inc
jo
push
pop
mov
xchg
mov
mov
push
cli
mov
cld
shrb
mov
sbb
shll
pop
adc
cmp
incl
test
lret
pop
push
mov
mov
fucomp
add
je
fstp
imul
aaa
sub
pop
inc
lods
xchg
fstpl
aam
inc
sub
movsb
out
aas
in
jmp
xor
sbb
pop
adc
xbegin
addb
and
xor
lea
mov
mov
addl
fs
incl
add
push
popa
movsl
mov
loopne
adc
xor
test
adc
stc
jecxz
lcall
roll
sbb
out
mov
outsb
inc
mov
push
les
call
ret
dec
xchg
loopne
call
lods
mov
out
and
cmp
fidivs
add
dec
push
adc
pusha
mov
and
lret
jmp
push
pushl
mov
nop
cmp
push
outsb
loopne
in
jl
jae
out
fcomp
in
push
clc
lcall
cli
jnp
cmp
enter
sbb
movsl
call
jae
mov
pop
xchg
pushf
xor
mov
sbb
add
js
xlat
aam
stos
jbe
fidivl
cmpb
cltd
in
mov
rol
add
xchg
pop
and
dec
jmp
pop
sub
or
in
adcl
data16
dec
out
xchg
adcl
sub
cltd
jle
inc
outsb
adcl
jbe
cmp
push
int3
inc
imul
pop
adc
mov
test
jne
lea
in
lret
mov
js
stos
xor
test
incl
xchg
inc
mov
movsl
jbe
dec
decl
add
dec
mov
sbb
mov
daa
aaa
aam
bound
enter
pop
cmc
decl
mov
jmp
sbb
cli
gs
and
decl
sbb
and
cmp
and
outsl
les
shll
fstpt
dec
jmp
fldenv
cmp
push
fs
lcall
adcb
cltd
jbe
inc
dec
sbb
cmp
sarb
add
aam
xorb
jg
lcall
shr
in
inc
fadds
dec
daa
rcr
sub
addr16
mov
into
jmp
call
les
in
xchg
cmp
sbb
lahf
mov
imul
fs
and
jae
lcall
and
out
hlt
fisttpl
mov
mov
jg
cmc
std
xchg
ret
push
inc
addr16
fcmovnb
roll
mov
xor
clc
sbb
dec
inc
inc
es
repz
add
sub
aaa
and
mov
je
and
shll
lahf
adc
ja
inc
mov
iret
mov
enter
jecxz
sub
cmpsl
lods
adc
incl
subb
sub
inc
insl
and
fcmovne
fistps
add
dec
pop
sbb
out
push
sar
decl
cmp
std
pop
inc
pop
pop
dec
lcall
loop
pop
ss
push
inc
mov
sub
lds
ljmp
dec
sub
jg
clc
rorb
inc
or
data16
jb
mov
out
sbb
pop
cmp
lret
jne
test
in
call
pop
xlat
data16
sarb
sbb
repnz
sahf
out
dec
mov
ret
push
div
loop
xor
jnp
or
adc
push
push
sub
iret
lcall
in
stos
pop
bound
pusha
pop
adc
mov
adc
jl
clc
inc
sub
cld
xchg
mov
lcall
push
out
push
push
cmc
outsl
xor
cmp
jl
lods
mov
nop
jae
pop
stos
ss
lcall
imul
sub
inc
adc
pop
xchg
movsb
xor
dec
cld
ljmp
cli
call
add
jae
test
dec
jge
and
sbb
lea
or
int3
xchg
ljmp
sbb
jp
or
cmpsb
dec
add
das
movsl
cmpsb
rcll
pushl
xchg
dec
and
test
in
pop
dec
ret
es
or
dec
jl
xor
test
lcall
decl
dec
pop
dec
lods
inc
mov
lods
movsl
out
pop
fwait
or
movb
testb
adc
cmc
dec
push
pusha
sbb
out
push
add
jg
test
mov
jnp
push
js
stc
pop
ret
sbb
data16
popf
mov
inc
cli
call
xor
fmuls
adc
pop
sbb
mov
test
or
ljmp
test
call
in
pop
leave
adc
jmp
cmpsb
out
in
hlt
or
lcall
lret
inc
xchg
fmull
dec
decl
mov
mov
pop
mov
dec
mov
mov
sub
call
rcl
inc
mov
jne
je
inc
inc
ffreep
push
cmpsb
inc
aaa
push
xchg
in
add
inc
int
popa
out
fsubrs
loopne
clc
and
cmpsb
inc
mov
push
mov
pusha
adc
mov
jae
mov
aam
pop
addl
sub
daa
outsl
or
pop
ss
incl
lods
and
lret
leave
pop
les
dec
cltd
addr16
adc
or
in
out
sbb
fcomip
rorb
addr16
mov
or
add
jp
aas
fwait
inc
push
jmp
ret
xor
sarl
xchg
mov
sub
cmp
push
hlt
fcomip
ljmp
cmp
pop
add
or
out
or
or
jbe
inc
jg
nop
pop
je
xchg
cld
test
aaa
shlb
sbb
push
dec
and
cmp
mov
pop
std
lcall
inc
add
jno
or
jno
or
sti
fisubrl
pop
aaa
jle
pop
push
pushf
pusha
aam
sbb
adc
jmp
stos
push
dec
fcmove
cmpsl
decl
cmp
das
cmc
mov
add
imul
mov
jns
mov
stc
xchg
shrb
inc
cltd
decl
dec
hlt
xchg
fsub
movsb
mov
mov
call
pushf
pop
maxps
jo
incl
jg
fsubrl
sbb
das
push
mov
pop
or
and
lcall
cmpsb
xor
xchg
sarb
mov
sub
mov
add
mov
lcall
das
mov
sarl
and
adc
dec
push
pop
cmp
les
and
call
notb
push
cltd
mov
xchg
outsb
sbb
aas
arpl
loop
imul
and
pop
ret
clc
sub
sbb
or
imul
aaa
dec
jne
inc
stos
arpl
jmp
dec
mov
xor
mov
mov
aaa
sbb
call
jns
adc
cld
jp
pop
inc
testl
push
mov
aaa
push
fsubr
dec
mov
cld
dec
mov
cmp
enter
lds
jno
mov
mov
push
dec
sub
pop
inc
jmp
icebp
std
cmc
or
lahf
arpl
daa
ret
icebp
adc
pop
push
pop
xor
xlat
lcall
mov
jo
addr16
pushf
sub
idivb
cmp
push
cmpsl
cld
sar
jmp
mov
cmpsb
or
pop
shl
repz
fistpl
subb
stos
incl
or
xor
shll
aas
daa
sbb
mov
jae
dec
or
shr
sahf
cs
shlb
bound
pop
sbb
arpl
decl
rcr
leave
fs
or
arpl
push
xchg
lods
pop
sbb
pushl
lret
mov
subw
dec
pushw
js
std
mov
sbb
fs
in
xor
js
inc
and
mov
enter
testl
ja
jg
or
rorb
pusha
les
stos
mov
mov
and
push
fidivs
cld
inc
leave
loop
sub
popf
insl
dec
test
sbb
pop
inc
enter
inc
pop
enter
sub
ljmp
and
hlt
pop
data16
cltd
pop
and
shlb
mov
dec
xchg
stos
mov
sbbl
scas
mov
cmp
sbb
cmp
mov
fwait
stc
inc
jg
mov
fcoms
mov
mov
pop
scas
pop
push
cld
call
jmp
lods
je
or
and
jmp
jno
add
orl
sbb
jmp
add
lcall
and
dec
loopne
mov
xor
fsubl
sub
lock
add
and
sub
js
cmp
push
les
ret
out
push
or
jp
mov
fdivl
incl
ja
loope
test
inc
mov
test
mov
sbb
cld
cli
jmp
sbb
js
pop
pop
ret
mov
ljmp
jno
xlat
fisubrl
int3
lds
dec
mov
mov
js
dec
int3
xchg
jg
dec
cmpsb
xorb
sub
rcr
fdivrl
ss
stc
cmp
call
fnstenv
jnp
repnz
pop
mov
push
jp
mov
jno
sbb
clc
std
jmp
xchg
outsb
fstpl
addr16
lds
or
adcb
inc
and
pop
jg
pushl
push
jp
xor
in
cltd
cmpsb
test
or
mov
test
fcomp
mov
fdivp
popf
push
rcll
push
int
or
jmp
mov
push
mov
jae
sti
rclb
decl
out
pushf
xchg
inc
adc
jns
inc
xchg
cmp
pop
adc
incl
mov
pop
in
pop
adc
mov
sub
push
lret
and
ljmp
loope
cmpsl
je
mov
xchg
xor
fstpt
daa
int
aam
pushl
add
and
ret
aas
add
mov
pop
adc
int3
inc
xchg
gs
xlat
stos
imul
dec
popa
dec
pop
push
lcall
ds
mov
cmp
cmp
mov
popa
lcall
data16
ror
xchg
jmp
lret
cmp
daa
ret
lahf
test
fadds
mov
mov
jbe
jmp
test
mov
fmul
popa
notb
movsl
in
dec
push
imul
dec
inc
lahf
std
loopne
push
flds
jmp
lods
lock
nop
les
rcrb
cmc
fnsave
cmp
jp
xchg
lret
push
rcrl
shl
pop
mov
lea
add
xchg
cmp
sbb
ljmp
sbb
insb
jbe
fs
insb
pop
lods
pop
insl
xchg
mov
std
add
jecxz
or
andb
je
mov
sub
fnstcw
repz
mov
out
cmc
cli
jmp
call
xchg
shrl
add
sub
xor
shl
in
call
pop
cmc
ljmp
sarb
xchg
jmp
mov
push
je
inc
fisttpll
push
les
dec
sbb
lods
xor
cmpsl
loopew
or
ss
in
push
push
cltd
cmp
decl
test
addr16
mov
aam
sbb
iret
add
inc
xor
push
mov
mov
cmp
lods
mov
dec
ljmp
sub
ds
push
jg
pop
mov
scas
roll
mov
loop
insl
lcall
xchg
add
out
and
ja
mov
adc
pushf
adc
lahf
cmp
mov
jmp
inc
into
and
xchg
adc
dec
xchg
jmp
cmpl
roll
shrb
out
int3
xor
mov
decl
inc
xchg
add
add
loope
les
jg
shl
sbb
push
cmc
ss
cmp
daa
sbb
pushf
ss
insl
xchg
hlt
inc
inc
adc
movsl
mov
add
pop
loopne
mov
sub
inc
aad
and
aam
lcall
aas
subb
adc
cmp
pusha
ret
jne
in
dec
or
movsb
shll
or
jmp
sbb
lds
and
icebp
cmp
mov
js
xchg
cmp
or
dec
adcb
or
lcall
out
movsl
mov
out
dec
add
lcall
push
mov
call
push
mov
cs
xchg
cs
jg
jg
mov
lret
mov
lcall
dec
sbb
andb
popf
shlb
dec
mov
out
outsb
sti
fwait
pop
lcall
mov
mov
adc
lcall
mov
add
test
pop
shr
fiaddl
fdivl
popa
test
sbb
lods
addr16
fiadds
ljmp
sbb
inc
imull
mov
movsl
cmp
into
subb
ljmp
mov
pushf
frstor
sbb
mov
or
add
es
outsb
dec
outsl
daa
or
rcrb
decl
mov
mov
or
xlat
lcall
pusha
fidivs
dec
mov
push
sub
movsl
test
and
mov
mov
movsl
or
push
call
dec
popf
int
test
jo
lret
cli
and
incl
and
mov
sbb
add
shl
daa
data16
add
stc
pushf
xor
jecxz
sbb
sbb
mov
jecxz
cld
mov
cld
sar
sbb
xchg
mov
push
push
sub
mov
fimuls
sbb
lods
insl
sbb
mov
ret
mov
mov
and
lock
movsb
je
outsl
sbb
cli
mov
fidivl
xchg
arpl
sub
and
add
pop
or
mov
add
jmp
xor
or
mov
and
push
test
and
ds
adc
cld
inc
lods
test
mov
call
std
mov
pop
inc
cmp
daa
dec
jle
dec
mov
mov
popf
xchg
jmp
jmp
popa
fwait
std
push
nop
add
notl
push
idivl
pop
lods
pop
clc
aaa
mov
cmp
xor
pop
pop
in
xchg
pop
ss
sti
aad
mov
pushl
pop
cmp
inc
adc
mov
ud1
js
pushl
lcall
imul
cmp
cmpsl
lret
push
push
scas
xchg
pusha
jo
sbb
clc
sbb
and
push
ficomps
loop
inc
popf
test
xchg
cld
fadds
aas
xor
jns
cmp
sub
jl
inc
sub
loopne
popf
sub
cmp
aas
sbb
std
sbb
popf
push
dec
push
mov
xchg
adc
rcll
push
decl
aaa
js
gs
push
icebp
flds
dec
fsubr
inc
arpl
jmp
pop
xchg
mov
sbb
loop
aaa
jae
call
pop
fldt
mov
fdivs
xchg
jb
xlat
xor
pop
cmpb
cli
or
in
lods
inc
jg
imul
in
or
inc
imulb
mov
fildll
cli
pop
test
scas
xchg
arpl
out
in
xorl
cs
in
decl
sub
or
insl
ficompl
cld
ljmp
lea
mov
cli
call
sbb
mov
hlt
in
in
sti
inc
xor
idivb
or
push
push
jmp
pop
mov
mov
icebp
clc
mov
ljmp
cmpsb
push
inc
ds
xlat
mov
add
mov
mov
cmc
ljmp
iret
pop
mov
pop
imul
into
pop
inc
xor
lret
pushl
sbb
and
leave
sarl
sbb
clc
mov
jmp
daa
cld
sbb
and
out
jbe
xchg
daa
call
mov
fsts
ficompl
mov
repz
cmpb
dec
pop
pop
sbb
jno
jmp
in
mov
adc
outsl
sbb
idivb
jbe
adcb
cli
sub
inc
mov
jge
mov
lods
les
push
aad
and
xor
dec
frstor
js
mov
jmp
cs
mov
aas
cmc
jg
cmpb
hlt
test
out
movsl
adc
sbb
push
ljmp
sub
mov
out
jbe
js
push
sbb
lods
and
dec
leave
sbb
cmp
scas
sbb
fcmovnbe
pop
sbb
cmp
fisttps
daa
and
mov
inc
es
mov
cmp
sbb
mov
mov
inc
jb
std
dec
fdivr
mov
push
imul
daa
mov
jns
repz
mov
cltd
add
inc
popl
cmp
pop
add
mov
dec
push
fs
lods
jae
leave
and
dec
lcall
mov
decl
jae
dec
test
jp
out
in
mov
and
jae
repz
lcall
cmpsb
fildll
repnz
push
gs
push
sub
lds
xor
jae
cli
xchg
inc
mov
push
outsl
adc
mov
xchg
adc
cmp
jg
sbbl
mov
cmp
and
fistpll
ret
lock
nop
adc
or
jle
jno
sbb
ljmp
dec
dec
bound
jno
addr16
cmp
xchg
ret
push
hlt
outsb
iret
and
push
outsl
ljmp
cwtl
dec
movsb
pop
pop
lock
mov
shrb
xchg
fistpll
decl
imul
lret
rol
movsl
inc
enter
adc
mov
mov
push
aaa
cmp
fwait
xchg
xor
sahf
in
subl
jg
out
mov
adc
movsl
lods
mov
push
sbb
cld
dec
les
xorb
sar
lcall
lret
or
aam
idiv
xor
iret
mov
pop
loopne
xchg
mov
pushl
add
inc
jnp
sub
mov
dec
das
sub
inc
xor
aas
dec
cmp
adc
push
pushl
pushl
jno
push
mov
mov
les
lcall
ljmp
or
jns
dec
lahf
adc
das
cld
out
ret
mov
inc
mov
in
cs
pop
lret
into
jg
orb
int3
xor
push
sub
sub
dec
jmp
roll
ja
cmpsl
add
and
pop
sbb
mov
cmpsb
int3
xchg
mov
cmp
fdivrp
sqrtps
stc
cmc
shll
leave
xlat
jo
mov
dec
fnstcw
ljmp
push
fxch
in
adc
loopne
jo
jl
cs
shlb
popa
pushf
or
popa
jmp
mov
lods
mov
scas
add
stc
shrb
test
sarb
jne
inc
sub
lock
std
pushf
dec
or
push
sbb
iret
loope
mov
sahf
push
xchg
sub
pop
stc
adc
inc
out
mov
lahf
scas
sub
sbb
cmc
pop
pushf
add
sarb
inc
cmpsb
movl
pop
add
sub
xor
les
popa
loopne
ficoms
sbb
popf
cmp
cmp
jb
mov
jb
and
mov
loopnew
lcall
mov
or
outsb
push
movsl
mov
mov
or
mov
mov
lcall
decl
xchg
xor
inc
pop
sahf
pop
mov
lahf
cmpsl
shll
mov
daa
rorl
cmp
jmp
mov
shrb
mov
jl
into
fidivl
add
out
ss
xorb
adc
lea
push
stos
outsl
mov
sti
add
sbb
pushf
cltd
stc
inc
pop
bnd
inc
fcmovb
mov
adc
lock
in
xor
push
adc
loope
sbb
hlt
jl
xor
sub
or
out
push
and
loop
jmp
addb
aaa
add
push
jne
out
and
cmc
cmpsb
xchg
sub
decl
and
adc
clc
in
mov
xlat
and
inc
call
incl
stos
jge
push
fldl
sahf
mov
ljmp
sahf
fnstenv
aas
push
pop
lock
incl
push
pop
imul
data16
sub
xchg
xor
dec
adc
inc
xchg
out
arpl
jb
lret
pop
jbe
pop
ret
xchg
mov
clc
decl
xor
iret
test
pop
adc
push
pop
pushf
call
push
pop
not
xor
cmp
jp
xor
fs
inc
xchg
adc
loopne
test
jmp
and
and
std
cmpl
pushf
jmp
out
ss
mov
paddd
sbb
jmp
jnp
scas
pop
dec
sub
pop
data16
pop
test
sbb
decl
and
insl
cmpsb
nop
icebp
dec
mov
mov
xchg
cs
outsl
xchg
mov
fs
fdivp
es
dec
cmp
xor
xchg
andl
rcrb
cmpb
mov
xlat
mov
cli
lret
push
sbb
imull
push
fcomp
cwtl
add
dec
pop
in
fs
mov
aas
popf
jmp
lods
mov
repnz
int3
cmp
mov
inc
push
add
add
pushf
lods
divb
pop
dec
pop
movsl
dec
xchg
loopne
ljmp
cmp
mov
push
sti
sub
mov
xchg
lock
jae
mov
fcomip
and
lcall
sbb
inc
cld
in
sahf
rorl
scas
scas
pop
pop
add
pop
or
decl
call
mov
arpl
ror
cli
subb
repz
jle
jg
dec
jp
push
xor
out
cmp
data16
sbb
jno
xchg
cmp
lcall
inc
ret
cmp
push
lahf
das
jle
push
mov
and
filds
rcrl
pop
enter
xlat
call
pop
and
mov
test
push
lret
add
xor
incl
sti
movsb
mov
scas
rcl
out
fsubs
pop
mov
xlat
xor
outsb
pop
and
ja
jbe
jge
push
push
adc
inc
cmp
nop
in
ds
jno
jns
ja
call
xchg
inc
out
inc
mov
adc
bound
add
inc
pop
pop
into
ljmp
inc
mov
sarb
ret
mov
fwait
inc
mov
call
cld
xor
mov
lcall
pop
push
sub
cli
inc
repz
jmp
xor
andl
fwait
negb
mov
jp
jne
cli
dec
jno
dec
mov
xchg
mov
cltd
out
std
adc
cltd
mov
cmpsb
mov
loope
in
repz
dec
cmp
cwtl
inc
xor
mov
shl
arpl
mov
inc
cmpsb
push
ss
sbb
pop
jg
loop
in
call
mov
sbb
xchg
pop
ficoms
add
jmp
dec
clc
jne
sbb
lcall
mov
seta
stos
sahf
pop
dec
jmp
pop
icebp
ljmp
shlb
movsl
adc
cmp
dec
pop
nop
push
jp
jb
add
dec
pop
mov
incl
cli
scas
mov
pop
inc
int3
cmp
pop
and
mov
fistl
cmp
call
nop
mov
sub
jne
roll
sub
mov
mov
push
in
hlt
lds
outsb
push
cmpsb
xchg
or
pop
xor
ljmp
jp
mov
mov
add
lods
lods
push
cmp
pop
insb
sbb
mov
js
cmp
mov
xchg
lcall
cmp
or
mov
lret
add
jmp
xor
imul
out
ljmp
arpl
gs
sub
adc
sarl
and
mov
cmp
ja
sarb
movsb
and
mov
test
call
add
aaa
aas
sub
movhps
aad
out
jle
dec
leave
loope
out
push
adc
xor
dec
repz
std
cmpsl
cltd
test
cld
mov
arpl
sahf
cmp
mov
das
les
iret
lock
incl
push
jo
into
fwait
dec
jl
cmpsl
and
out
mov
dec
lcall
mov
into
push
call
test
insb
gs
ficoml
stc
stc
jbe
test
or
pop
fs
lcall
int
fildll
cmp
push
xlat
dec
aad
or
mov
movsl
mov
mov
decl
mov
stc
rorl
pop
incl
ss
inc
dec
or
xor
movsl
and
mov
out
dec
xchg
jle
test
outsl
lock
dec
repnz
dec
test
cmp
inc
mov
incl
mov
push
lods
xchg
sbb
enter
xchg
jg
or
mov
shlb
mov
test
jo
in
mov
movsl
pushl
aaa
jg
cs
or
mov
test
push
lahf
cmp
sbb
cld
add
out
ja
mov
push
or
fcomp
pop
sub
adc
loopne
mov
aam
aam
nop
push
ds
jle
pop
cmc
nop
lock
call
fwait
lahf
mov
test
pop
icebp
sbb
popa
das
sar
loop
orl
jo
push
pop
pushf
push
andl
insb
pusha
aas
add
xchg
enter
shrb
mov
sub
xchg
jl
lahf
cs
ja
pop
xchg
xchg
outsb
push
jnp
sub
das
aam
lods
fisubrs
call
rcll
xchg
mov
fstpl
or
andb
jns
hlt
es
icebp
adc
push
test
xchg
push
mov
mov
cmpsb
or
lods
jle
notb
push
movsl
fs
jnp
pop
and
mov
push
outsb
shll
jmp
cld
push
scas
push
adcl
out
add
dec
push
sub
iret
pop
sbb
xor
or
out
ljmp
xchg
cmp
sub
mov
lcall
stc
int
push
xor
inc
pushf
das
adc
add
fnstsw
fsub
mov
ljmp
jbe
or
out
mov
cmp
insl
add
xor
lea
decl
jne
pop
dec
dec
mov
mov
nop
dec
mov
test
loope
add
inc
mov
icebp
jmp
test
jmp
push
push
pop
or
int3
jmp
lds
incl
repz
adc
call
fs
or
mov
xor
cmp
inc
outsl
cli
mov
adc
mov
jg
cltd
fsubrs
shll
push
mov
lock
cli
add
cwtl
testl
jp
in
ret
cmpsb
ja
dec
stos
pop
lods
ljmp
in
inc
mov
or
mov
aam
sbb
incl
or
mov
cwtl
pop
add
pop
inc
sahf
sbb
inc
pop
mov
call
xor
imul
push
mov
lock
sub
jmp
repnz
inc
jo
mov
ret
jle
mov
fs
ret
scas
mov
mov
add
mov
mov
sub
add
xor
rcrb
mov
cmp
jmp
jnp
and
jl
xor
or
pop
adc
pop
mov
repnz
mov
jg
push
xchg
jns
ss
add
test
pusha
push
lock
push
andb
decl
sbb
jle
xchg
xor
lahf
mov
out
sbb
dec
movsb
lea
incl
jecxz
pusha
pushf
jne
std
fistps
shll
imul
loop
xor
nop
lods
pop
decl
subb
les
add
lods
pushf
pop
into
loopne
rcrb
incl
add
inc
and
jmp
pusha
dec
clc
dec
cmp
lcall
sub
jnp
xchg
push
orb
mov
aaa
bound
xlat
xor
mov
mov
out
pop
pop
std
pop
cld
decl
push
xchg
les
push
sbb
mov
inc
insb
sub
sbb
sarb
sub
dec
cmpsl
repz
rcrb
das
and
leave
xor
xor
or
in
fbld
int3
dec
cmp
xchg
dec
imul
lahf
addr16
nop
aas
add
inc
inc
mov
clc
mov
mov
dec
xchg
lods
ja
pop
ljmp
out
pop
test
das
pop
icebp
sar
ljmp
jle
in
mov
and
push
jle
aas
pop
mov
lcall
hlt
les
lahf
xchg
es
loope
sbb
add
daa
mov
inc
das
mov
add
cwtl
pop
stos
sbb
cmp
push
mov
fldenv
pop
jg
add
sbb
adc
sbb
hlt
out
push
add
lds
in
sahf
push
cmp
repnz
jmp
push
push
ja
int3
jp
or
and
cmp
sub
inc
sbb
add
lret
enter
aaa
cld
inc
testb
sbb
cli
rorb
notl
xchg
enter
mov
ja
xchg
jmp
out
mov
outsl
sbb
sti
int3
mov
test
das
pop
cs
mov
xchg
mov
mov
add
jmp
popf
or
jns
imul
cld
loopne
mov
test
cmc
pop
incl
adc
mov
daa
dec
rcl
int
mov
rclb
sub
pop
sar
aaa
pushl
jmp
or
es
fdivrp
fsts
cmp
adc
inc
shlb
inc
xlat
shlb
mov
xor
lods
push
or
add
sarl
int3
sub
ljmp
pop
xchg
pop
mov
mov
xor
lcall
jmp
or
inc
fcoml
mov
or
or
inc
test
add
mov
mov
push
rclb
rcll
or
push
pop
sbb
je
call
xchg
test
addr16
pop
mov
les
adc
ret
test
imul
sbb
aas
and
lret
mov
mov
fistps
mov
insl
cld
push
repz
mov
in
pop
or
push
mov
popa
repnz
sti
jb
imul
out
cli
or
in
xor
loope
and
jp
xchg
inc
mov
xchg
ja
rorl
pop
and
adc
imul
mov
addr16
jmp
cli
inc
gs
call
mov
pushl
in
mov
xor
or
in
arpl
pop
add
cmpsl
lea
inc
sbb
fisubs
jl
shlb
inc
or
push
nop
rolw
mov
pop
icebp
mov
adc
mov
popf
pop
push
dec
test
ficoms
add
pushl
adc
lods
mov
aas
iret
test
loopne
pusha
test
xor
sub
ja
pop
jnp
insb
cmp
adc
mov
iret
xor
out
push
repnz
xchg
ret
cmpsb
xor
cs
mov
flds
aam
faddp
jmp
fidivs
adc
mov
mov
test
jg
call
popa
sbb
sti
test
sub
incl
mov
outsb
adc
push
in
pop
jbe
adc
insb
push
sbb
jb
cli
inc
sbb
jg
aaa
mov
push
icebp
ret
aas
mov
push
cmpsl
jl
mov
std
fldt
fldl
pop
inc
fwait
shlb
and
xor
pop
jo
subl
jl
int
sbb
cs
in
pop
imul
lcall
push
ljmp
leave
iret
scas
and
xor
or
cmc
mov
push
imul
lcall
push
pop
and
cs
mov
xchg
inc
es
sbb
cmpsl
adc
sbb
xlat
push
or
cmp
dec
sub
cmp
add
loop
mov
jb
jnp
idiv
sbb
popf
into
jb
pop
pop
ss
loopne
and
call
pop
loop
std
jmp
pop
neg
test
enter
jl
fildl
mov
test
or
fdivrp
xchg
sub
cmp
xchg
sub
in
cmp
push
fdivl
ds
xor
jmp
mov
fwait
decl
dec
sbb
sbb
out
insl
sub
repz
jns
pop
pop
jne
aam
fadds
jnp
add
dec
cwtl
lret
sub
ja
loope
rclb
or
dec
add
adc
mov
cmc
iret
sarl
fsub
dec
xor
dec
jmp
outsb
fmull
jo
outsb
test
push
inc
xor
inc
or
xchg
lret
sub
sub
movsl
sbb
mov
jns
js
cmpsl
cltd
jne
inc
enter
outsl
ljmp
fwait
cmp
int
decl
sbb
int
insb
mov
xor
popf
cmp
jmp
loope
mov
cmp
pusha
jo
in
mov
pop
and
inc
xlat
jl
insb
inc
inc
orl
fimuls
addb
or
test
outsb
xchg
repnz
push
cmp
mov
cmpsb
scas
pop
or
insb
sub
decl
xor
push
push
testb
sub
out
cwtl
mov
ljmp
lea
mov
push
data16
cwtl
es
mov
dec
cmpsb
cmp
mov
mov
mov
lds
sarb
cmp
adc
decl
add
lods
or
out
addr16
push
addr16
and
and
ljmp
pop
ja
jge
adcb
cmp
dec
test
outsl
cmpsb
stos
push
hlt
mov
jmp
dec
pop
mov
lods
ljmp
adc
adc
mov
add
pop
incl
rcll
pop
test
add
out
push
jmp
lds
lock
ljmp
andps
mov
or
inc
test
xor
inc
cmp
cld
sub
lods
mov
fucomi
jne
repz
adc
jne
je
call
cld
cli
lds
aad
jge
in
int3
outsl
sub
testl
mov
cmp
lcall
clc
xchg
lock
or
inc
cmp
shrl
jnp
jmp
pushf
sub
push
sahf
jg
push
xchg
jl
lods
push
dec
mov
xor
es
adc
xchg
add
js
lods
decl
rolb
je
jp
pusha
ds
fsubs
shl
pop
test
xchg
xor
test
pop
imul
js
sbb
fdivs
mov
insl
push
sub
dec
fs
or
pop
add
ljmp
dec
out
dec
xchg
pop
cld
ss
int3
popf
repnz
cmp
movsb
or
decl
push
aam
mov
push
mov
negl
or
stos
jmp
sbb
call
jo
lahf
sbb
push
inc
fdivr
jge
cmp
pop
repnz
jmp
add
sub
jl
push
xchg
jns
inc
and
sub
sbb
pushl
cld
call
in
popa
mov
mov
cltd
jae
mov
test
mov
lcall
ljmp
mov
dec
outsb
or
stos
jecxz
xchg
or
cmp
insb
loop
sti
mov
adc
or
dec
das
pop
dec
inc
ljmp
cld
adc
and
mov
nop
cltd
imul
notb
out
jg
jmp
jmp
sbb
mov
dec
stos
mov
imul
jnp
or
xchg
out
outsl
cmp
ljmp
cmp
out
ret
adc
decb
push
nop
mov
std
in
jmp
nop
repz
fisttpl
jl
out
mov
lcall
xor
push
and
cli
mov
scas
and
dec
lcall
mov
pop
and
pop
mov
xchg
aam
popf
push
in
push
bound
outsb
adc
mov
inc
imul
and
or
and
test
cmp
sub
mov
lret
mov
pushl
out
mov
mov
enter
lret
stos
and
push
pushf
or
and
negb
insl
jmp
in
pushl
sub
push
ds
xor
frstor
sbb
popa
or
insl
mov
test
int
ljmp
popa
dec
lock
xchg
mov
inc
sbb
add
imulb
in
dec
aad
cltd
mov
stc
add
cltd
dec
jns,pt
pop
je
andl
sarb
xchg
imul
xchg
out
andl
mov
pop
lret
std
aad
scas
aad
add
push
xchg
popf
xchg
dec
test
xchg
lcall
push
xchg
inc
inc
push
shll
cmpb
loope
pop
popf
mov
in
push
cmp
xchg
xchg
shll
jg
shll
or
adc
mov
pushl
test
mov
xor
daa
fisubl
scas
nop
fistpll
mov
xor
mov
push
or
or
insl
adc
sahf
add
loop
sub
and
call
mov
cmp
xor
add
and
pop
aam
ss
mov
inc
sub
jmp
jb
insl
sbb
mov
std
xlat
rcl
push
sub
cs
rcrb
cmc
pushl
ljmp
mov
sub
mov
sub
mov
sahf
mov
icebp
push
fwait
jbe
jg
inc
ja
popa
mov
out
sbb
shll
dec
outsl
push
mov
cmc
pop
xor
sbb
fbld
and
loop
jmp
ret
mov
call
and
inc
or
push
mov
lea
xchg
xchg
mov
ret
cmp
decl
jno
addr16
cmc
imul
mov
mov
scas
sti
inc
andb
decl
std
bound
shl
lret
out
aam
mov
add
sbb
popa
test
jmp
sbb
mov
mov
lds
and
sub
out
call
ljmp
adc
jns
mov
rep
mov
xor
mov
mov
pop
enter
mov
cmp
xor
push
cmp
sti
jae
hlt
dec
out
push
fwait
adc
xchg
mov
fwait
push
xlat
nop
test
sbb
mov
shlb
cli
push
mov
pop
mov
incl
jle
or
mov
mov
fdivrp
incl
sub
aad
push
mov
stc
or
push
mov
or
ja
out
xor
dec
xchg
int
jno
enter
roll
stos
ret
bound
mov
mov
mov
movb
inc
mov
lods
outsl
stc
pop
es
xchg
dec
loop
add
fisubl
mov
out
int3
sbb
adc
mov
pop
fidivrl
add
out
jns
scas
mov
inc
mov
xor
mov
cmp
pop
and
or
ret
cmp
jle
sub
cmp
xchg
push
sub
mov
push
sub
ret
pop
push
shlb
pushl
int3
adc
xor
cmp
imul
mov
pop
jge
dec
ja
fisttpll
fcomps
dec
add
jge
in
je
mov
cmp
cmpsl
enter
inc
dec
enter
insl
sub
orb
mov
and
xlat
pushf
imul
mov
aaa
adc
push
mov
ss
sub
cs
jecxz
pop
lret
aam
jg
mov
or
scas
fidivl
adc
pop
mov
fstpt
and
xor
out
lret
dec
outsl
jecxz,pt
jns
sub
mov
pop
xchg
mov
and
xchg
clc
std
push
xor
jle
imul
inc
shr
adc
hlt
cli
and
enter
cmp
mov
insl
out
sbb
test
std
inc
xchg
adc
or
scas
mov
pushf
mov
xchg
mov
loope
adc
mov
stc
fxch
xchg
add
fisttpl
psllq
ret
push
subl
and
sahf
adc
cmp
cmp
add
jle
imul
scas
insb
mov
jecxz
inc
xchg
pop
cwtl
lds
push
decl
adc
and
push
dec
inc
jnp
push
xor
es
dec
jnp
push
das
fwait
sub
popf
or
mov
mov
rep
xchg
push
jl
sub
ljmp
pop
cltd
xchg
dec
push
inc
add
and
clc
mov
ljmp
out
mov
xchg
icebp
je
push
aam
mov
jbe
popa
sub
decl
jle
adc
repz
push
xchg
pop
mov
iret
mov
push
inc
sub
clc
call
cli
mov
out
sbb
push
jl
sub
movsb
orb
dec
int3
addr16
pushl
adc
mov
sub
hlt
mov
rclb
ds
stc
cmc
repnz
popa
and
inc
mov
sub
cmp
xchg
and
sub
xor
iret
outsb
lods
and
dec
in
sbb
and
jns
xor
incl
mov
or
jne
insl
mov
cmp
mov
cli
push
or
jmp
aas
xchg
cs
mov
lcall
into
inc
ret
push
sets
rolb
icebp
loop
lods
idiv
push
push
mov
in
or
inc
fsubs
cltd
cmpsb
add
and
mov
ljmp
or
ljmp
daa
and
decl
xchg
mov
loop
out
stos
testb
inc
stc
push
pushl
faddp
xor
icebp
push
leave
or
xor
sbb
ds
xrelease
add
mov
push
push
imull
test
cmp
stos
jg
scas
dec
repz
xor
mov
test
sahf
push
sub
ret
jmp
cmp
xchg
shrb
and
mov
inc
daa
imul
subb
mov
fwait
xchg
xor
mov
push
call
aad
xor
cmp
xchg
dec
rorl
and
mov
push
bound
lret
fnsave
pop
mov
int3
push
ss
jge
insb
out
xorb
int
xor
fwait
mov
adc
inc
inc
ds
jne
pop
mov
inc
fs
incl
adc
imul
jg
inc
and
fsubr
cmp
test
sbb
call
mov
addr16
loopne
jb
fiaddl
lahf
mov
cmp
incl
repz
mov
mov
sti
pop
scas
mov
mov
in
jb
add
and
into
xlat
cmp
mov
sub
ljmp
fisubrs
lods
xchg
shlb
push
sub
test
outsl
push
decl
mov
ficomps
mov
cmpsb
in
loope
insb
adc
lcall
adc
ja
pop
xor
aad
mov
pop
inc
pop
cmp
inc
cltd
lret
pop
and
cwtl
daa
cmp
mov
aam
xchg
js
pop
cwtl
inc
adc
or
mov
sbb
sbb
cmp
push
mov
or
pop
mov
jo
movsb
push
pop
jg
stos
mov
ret
push
out
lahf
mov
cmpsb
clc
or
and
sbb
nop
movsb
add
dec
xchg
mov
nop
insb
sub
incl
out
data16
mov
stos
push
out
jp
inc
shl
mov
and
mov
xchg
and
mov
in
jmp
fcomps
pusha
ss
pop
out
mov
or
icebp
xchg
dec
leave
fildll
test
sub
inc
lods
mov
add
sub
lcall
adc
movsl
es
jnp
xor
mov
mov
jg
icebp
adc
mov
lahf
mov
push
xchg
sahf
inc
xchg
nop
test
jp
enter
mov
call
jle
push
jno
add
scas
xor
fists
cmp
mov
icebp
ret
cwtl
movb
outsl
js
mov
adc
ja
popa
les
cmp
jecxz
push
or
cmpsb
jge
outsl
sub
mov
pause
mov
ljmp
popf
ljmp
jne
enter
xchg
ljmp
jne
sbb
jns
add
jle
or
pop
lock
inc
shrb
and
test
xor
pop
cmp
imul
rorb
mov
std
ja
xor
lret
adc
lods
adc
dec
cmp
fcos
add
dec
push
dec
xor
jbe
and
mov
pop
mov
lods
ljmp
std
rclb
divl
test
outsb
pop
push
sub
movsl
cwtl
out
pushl
clc
inc
mov
or
push
call
loopne
js
inc
mov
loope
icebp
push
sar
pop
bound
nop
jg
jmp
push
iret
outsl
test
mov
or
xor
call
and
ljmp
adc
add
loopne
mov
clc
pop
ret
sbb
rorl
rcrl
xchg
mov
cmp
lds
fst
mov
rcll
inc
int3
pop
adc
rcrl
jg
imul
scas
call
jmp
ljmp
or
rcr
icebp
jb
arpl
push
cld
mov
clc
inc
imul
mov
dec
movsb
adc
inc
push
lods
dec
adc
cmp
mov
lret
aad
lea
lahf
inc
mov
js
pop
ret
mov
pusha
xchg
xor
dec
into
push
aad
jmp
ds
mov
out
test
lea
iret
insl
fisubrs
jbe
es
out
out
scas
mov
cmpsl
jno
cmp
jp
mov
je
daa
push
je
mov
fstps
movsb
in
and
in
ja
mov
je
fcompl
add
out
test
jbe
jp
call
sub
das
mov
mov
cmp
jmp
mov
mov
les
cli
shrb
mov
fidivrl
cld
pop
sbb
mov
fisubl
ljmp
cmpsl
repz
fcmovnu
pop
aaa
popa
mov
cs
mov
cmpsb
sub
mov
repnz
inc
push
ljmp
ja
int3
rcll
out
je
test
and
push
jmp
jmp
scas
test
cmp
rcrl
lret
mov
xchg
sti
jno
call
out
nop
adc
div
pusha
ja
iret
repnz
adc
adc
cmp
cld
dec
push
jo
clc
out
mov
ljmp
sar
adc
pushf
push
cmp
out
adc
cmp
add
jmp
rorl
sti
rcr
push
pusha
imul
mov
insb
pushf
je
inc
aad
lret
mov
mov
rcr
add
scas
dec
cltd
push
add
jbe
lock
jne
jmp
mov
xchg
ljmp
xor
xchg
clc
dec
or
sub
dec
insl
fstl
ret
mov
jge
iret
out
xlat
mov
lcall
and
add
and
ljmp
aas
int
nop
andl
call
lods
arpl
jmp
add
lret
mov
sub
in
movb
adc
mov
in
xchg
inc
shll
divl
sub
mov
push
cld
jmp
sbb
cmc
dec
cmp
and
mov
mov
or
jno
ja
push
or
pushl
or
faddl
lock
aam
xchg
cmp
ljmp
test
int
jnp
lret
push
pop
cmp
ficoms
adc
xchg
test
jns
or
dec
sarb
adc
xchg
in
or
mov
mov
dec
in
out
lcall
call
in
mov
mov
icebp
mov
mov
es
push
ret
ja
in
sbb
outsb
jecxz
std
test
outsl
dec
sub
das
dec
hlt
push
sti
popa
out
xor
in
pop
hlt
sbb
xchg
test
mov
in
mov
adc
jmp
or
scas
int
test
mov
jmp
xchg
adc
loop
out
push
adc
enter
mov
fs
cmp
test
pusha
jg
or
or
push
lcall
imul
and
aaa
imul
hlt
mov
aad
scas
aas
arpl
inc
xchg
sbb
add
cs
cmp
sar
fbld
loop
or
ss
enter
jne
mov
adc
icebp
into
add
xchg
dec
test
lret
iret
fsubr
jns
xor
cmp
mov
xchg
lods
shlb
data16
call
cmp
js
inc
rcl
insb
jnp
int
and
psubb
scas
fisttps
push
jp
xchg
jne
mov
scas
das
int
sbb
adc
inc
aas
popf
cwtl
arpl
jmp
inc
add
xchg
adc
in
mov
jl
pushf
jbe
xchg
movsl
fsubrl
sbb
push
call
cmp
jae
add
fsts
gs
ret
cmpl
and
incl
adc
inc
inc
jne
inc
xchg
push
xchg
movsb
xlat
fistl
sahf
add
fnsave
mov
dec
or
pop
std
mov
xchg
xlat
lcall
into
xor
jp
scas
mov
jae
fdivr
cmp
in
add
fcomps
nop
cmp
mov
jl
or
sbb
mov
ljmp
mov
jg
xor
sbb
mov
push
inc
es
push
or
mov
and
ljmp
sbb
mov
xor
movsl
mov
outsl
sub
fs
call
mov
incl
dec
adc
jbe
jmp
daa
cmp
or
adc
dec
cli
call
mov
sbb
outsl
clc
jmp
scas
clc
ss
lock
in
decb
rolb
jmp
incl
scas
or
push
leave
jnp
inc
or
and
das
fisttpl
xlat
out
outsl
push
pushl
in
xlat
in
imul
mov
push
push
int
dec
xchg
in
mov
jns
shl
ljmp
or
push
xchg
pop
pop
in
add
or
ret
mov
jg
and
cs
xor
jnp
mov
nop
sahf
int
mov
xor
popf
mov
daa
sbb
fnstsw
loopne
xor
je
pusha
lock
cmpsl
mov
leave
call
subl
xchg
ljmp
pop
sbb
jne
mov
mov
add
xor
lods
xlat
shll
xlat
incl
jae
pop
ret
loopne
int
dec
ljmp
push
mov
jg
lds
xchg
mov
icebp
dec
les
flds
bound
into
xor
xchg
addb
in
movsl
jl
call
mov
loope
bound
pop
cmpsl
mov
or
aaa
movsb
xchg
add
pop
xor
dec
cmpsb
icebp
call
sbb
mov
fadds
cmp
fsubs
pop
cmp
aaa
pop
push
dec
arpl
sub
or
push
fdivrl
ficompl
shl
mov
jno
add
stos
push
xor
jns
sbb
test
scas
pop
lock
lret
add
mov
into
sbb
pop
stos
dec
clc
xor
mov
push
inc
je
jp
xchg
xor
mov
lcall
xchg
mov
push
jl
fsubrs
add
pop
push
and
adc
jmp
pushf
lahf
cmp
adc
jne
shrb
jecxz
dec
jg
pop
push
push
and
xor
lods
ds
xchg
dec
rolb
sub
in
decl
lds
xchg
lahf
push
cwtl
xor
testb
mov
lea
pop
popf
sub
mov
rorl
push
jmp
daa
lcall
insb
int3
xchg
pushf
stc
jbe
sub
add
jmp
add
incl
jbe
stc
loop
leave
test
out
cmpsb
adcb
psraw
lahf
shrb
push
sub
mov
or
cmc
aam
out
es
hlt
outsl
push
dec
aaa
daa
and
daa
lcall
cmp
fistpl
mov
and
inc
repnz
xchg
cmp
aaa
push
fidivrl
sbb
ss
cmp
xor
lods
jmp
lea
inc
je
pop
icebp
pushl
or
test
enter
sahf
clc
divb
popa
dec
fs
mov
pop
ja
repz
es
fdivrp
decl
mov
outsl
js
cltd
push
sbb
add
add
rcll
aam
adc
xor
mov
mov
jl
test
push
dec
pop
sahf
cmp
ja
clc
mov
inc
jns
mov
jne
xor
popf
adc
ja
ret
out
and
js
in
test
shlb
gs
inc
loope
sub
loope
sbb
fdivr
imul
lahf
xchg
ljmp
sub
mov
xchg
push
mov
fs
cli
adc
pushl
add
and
inc
pop
pusha
sub
push
add
lods
jp
decl
mov
rolb
out
out
push
test
add
imul
jg
pushl
inc
mov
xchg
lret
cli
int3
ljmp
sub
lcall
dec
mov
push
sbb
jecxz
hlt
or
lock
jns
fadds
jmp
int
pop
js
aad
out
jmp
js
subb
dec
xlat
sarb
cli
pushl
vpsrld
insl
pop
cld
aaa
add
outsl
dec
sti
pop
and
or
stos
pop
push
adc
and
pop
jnp
inc
fs
push
iret
pop
jmp
pop
and
lods
pusha
mov
jmp
cmp
imulb
ret
jg
mov
mov
pop
jo
aas
push
cltd
or
fldl
cmp
fsubrs
les
xor
xor
adc
flds
mov
inc
test
repnz
lcall
loop
movsb
arpl
mov
sbb
fs
jae
pushl
popl
mov
paddb
fs
decl
xchg
in
dec
ret
ljmp
xor
and
jge
pop
push
mov
inc
dec
jge
dec
xlat
cmp
in
mov
call
push
jnp
cmp
int
add
push
cwtl
cmp
mov
das
clc
fcomip
mov
pusha
adc
cltd
ret
fmul
and
pushl
addb
fisttpl
sbb
mov
mov
adc
rolb
push
sti
test
fcomps
xchg
sub
sub
mov
push
jne
jl
fidivl
mov
xchg
stos
jb
out
and
pushl
in
hlt
lds
daa
jmp
jg
hlt
mov
add
imul
out
in
and
sahf
ds
mov
add
out
imul
xor
mov
push
in
jle
and
stos
xchg
std
or
xchg
mov
mov
mov
push
mov
sbb
mov
ljmp
jnp
push
lock
and
adc
inc
xchg
sbb
inc
xchg
push
mov
sub
loope
sub
mov
sbbl
icebp
jg
call
mov
lock
fadd
loope
mov
les
pop
leave
or
inc
push
fcoml
add
std
addb
or
ret
jecxz
test
push
cmc
add
mov
inc
or
scas
clc
xlat
invd
xchg
insb
dec
or
out
jmp
xor
notb
call
dec
ja
nop
cmpsl
les
mov
cmpsl
popf
out
notl
sbb
popl
jg
decl
movsl
cmp
xchg
lock
dec
or
jnp
xchg
mov
mov
imul
sbb
jns
popa
daa
scas
lods
lret
loopne
bound
out
xchg
cwtl
sti
add
add
call
sar
ljmp
sbb
into
inc
xor
popf
frstor
xor
test
scas
adc
mov
call
loopne
outsb
sbb
mov
push
pop
sub
movb
aas
jb
repz
cmp
jmp
sbb
iret
xor
shl
jmp
pop
or
loopne
addr16
or
ja
loopne
test
adc
dec
scas
adc
mov
test
mov
insl
lods
loop
mov
lcall
mov
ja
mov
out
packsswb
bsr
pop
int3
les
mov
fnstcw
movq
stos
xchg
cmc
lods
inc
ret
lds
out
adc
xchg
nop
call
lcall
or
leave
xchg
imul
mov
test
lcall
cwtl
or
mov
outsl
sub
jecxz
lods
ljmp
push
mov
jb
jne
cwtl
xor
sahf
mov
bound
or
loopne
xchg
push
rclb
push
int
lahf
outsl
bound
jmp
sbb
fidivrl
int3
lcall
ljmp
sbbl
in
xor
orb
stc
jns
fistps
js
insl
les
ret
ret
movsl
fsubs
adc
lcall
and
mov
stos
data16
add
out
loopne
mov
pop
or
jmp
cmp
mov
mov
push
fsub
inc
out
mov
cmpsb
cmp
pusha
outsl
cmp
inc
sub
adc
sub
lret
mov
xchg
xor
insl
psrlq
clc
dec
sar
stos
add
daa
ret
das
push
mov
sbb
in
mov
mov
pushf
cmc
lret
mov
movsl
mov
cltd
jnp
stos
lock
jmp
cli
loopne
push
cmp
jg
mov
lods
mov
jno,pn
test
mov
lock
incl
popa
lds
loope
mov
or
sub
pop
mov
les
rorb
pop
dec
pushl
sbb
andl
push
add
sahf
shrb
ret
mov
out
jl
add
mov
dec
mov
loop
inc
fs
add
mov
pop
push
nop
mov
rcl
xchg
std
adc
lret
jbe
lret
loopne
sub
das
je
pushl
ja
jp
jge
mov
movsl
adc
fldl
and
sahf
xchg
or
jmp
rorb
sahf
jl
mov
dec
jecxz
div
mov
pop
sahf
lcall
jecxz
add
pop
pop
xchg
push
mov
enter
data16
addl
jg
insl
insl
jno
xchg
call
popf
aas
and
bound
movsl
sti
pop
sbb
lock
rorl
js
out
mov
jae
jb
jg
pop
fists
sbb
push
cltd
xor
fdivrs
loopne
loop
aam
mov
jmp
push
imul
sbb
out
insl
fucom
push
mov
roll
decl
xchg
cmp
xor
data16
leave
xor
sub
inc
imul
mov
ds
mov
inc
stc
add
scas
aas
sub
testl
hlt
push
std
cmp
repz
pop
adc
outsl
jge
jge
icebp
push
cmpsl
sub
fbstp
aas
push
enter
mov
jne
aad
in
fstsw
repnz
idiv
jg
call
cld
jno
lret
mov
and
loope
fldcw
mov
sbb
lret
sbb
decl
mov
test
inc
lret
pop
hlt
lods
inc
mov
xchg
pop
and
shrb
loopne
clc
sub
stos
bound
xchg
jmp
push
fimull
dec
and
loop
mov
xor
mov
inc
mov
adc
clc
pop
cld
int
and
sbb
cli
cwtl
fisubs
cmpsb
pop
stc
js
cmp
pop
cmp
fisubl
mov
pop
inc
popa
push
pop
cmp
aas
ret
ds
fnstsw
data16
arpl
cmp
scas
jecxz
mov
lret
dec
stc
insb
sub
roll
mov
je
data16
cmpsb
xor
dec
sbb
das
in
mov
inc
addr16
gs
mov
lcall
hlt
in
cmp
into
mov
mov
call
jne
push
mov
and
call
in
les
inc
jns
mov
aam
into
loopne
pusha
outsb
dec
out
aaa
and
orb
js
mov
pushf
xor
loop
decl
ljmp
popf
xor
and
mov
iret
rcl
push
int3
ja
lcall
dec
mov
loop
push
mov
lea
dec
mov
out
test
push
xchg
mov
sub
jl
outsl
mov
lret
cs
insb
jo
mov
fidivl
cmp
xor
pushf
fcmovbe
pop
dec
cmpsl
fxam
mov
popf
imul
not
mov
imul
mov
adc
call
dec
out
mov
out
add
jmp
xchg
cmp
cmp
ret
push
push
add
jb
pop
inc
test
pushl
mov
xlat
dec
fnstcw
jae
xor
mov
jecxz
mov
shl
call
xchg
xor
dec
mov
orl
pop
pop
cmp
aas
lret
adc
adc
sti
add
pushl
lret
pop
ffree
jmp
add
shll
pop
rorb
jl
popf
decl
inc
mov
nop
repnz
xlat
pop
fwait
in
xchg
sbb
mov
loope
out
cli
ja
pushf
jo
xor
xchg
ljmp
lock
outsl
mov
out
xlat
jg
or
push
xchg
pop
jl
aam
fsubrl
add
inc
cs
dec
jg
jl
cmp
pop
jp
jl
test
pop
inc
add
jle
test
call
into
das
mov
std
addr16
cmp
shlb
das
shl
adc
lret
call
sahf
ret
or
out
punpckldq
mov
adc
imul
lahf
push
out
lods
add
jne
fmuls
mov
rcll
and
lods
pop
mov
jae
sub
call
sti
mov
shll
cmp
sarb
fisubs
lock
std
or
or
or
incl
mov
jle
push
leave
es
mov
loopne
rcrb
and
rclb
dec
dec
repnz
sbb
mov
daa
arpl
pop
pop
loope
out
cli
ljmp
cmp
inc
pop
sub
das
fwait
addr16
in
cwtl
mov
xchg
divb
cwtl
xchg
ljmp
xchg
mov
lock
jmp
fidivrs
repz
je
cmp
lahf
dec
loope
xchg
sub
sub
cmpsl
xlat
jmp
jbe
xor
lods
sar
inc
insb
je
dec
repz
ja
dec
mov
roll
shlb
pushl
jb
sbb
cmp
fildll
mov
mov
out
outsb
dec
inc
inc
dec
cltd
and
ljmp
icebp
pop
insl
cmp
aas
sub
cli
or
mov
inc
xor
nop
jge
lahf
mov
mov
nop
hlt
jecxz
jge
sbb
mov
mov
fsubrl
testl
je
mov
test
push
cwtl
jo
push
adc
xor
fisttps
rorb
pushl
and
dec
jmp
enter
movsl
sub
push
lahf
sbb
in
test
in
nop
dec
sub
incl
xor
fwait
loope
sub
push
imul
orl
pop
jp
jl
cli
leave
xchg
decl
ret
mov
aaa
xchg
loopne
lods
pushf
cmp
insl
test
mov
dec
lods
popa
shr
mov
call
jns
aaa
lcall
or
push
mov
andb
cmpsb
pop
inc
adc
mov
pusha
mov
add
test
add
insl
pop
push
and
xlat
mov
xor
into
rolb
and
ret
ljmp
inc
jnp
das
out
into
sbb
rcll
fdivrp
sbb
adc
xchg
dec
sbb
sub
add
jmp
xchg
mov
jbe
push
out
mov
sbb
movsb
adcl
inc
dec
push
mov
jp
loopne,pn
jb
addr16
decl
cmpsb
insl
insl
fmuls
into
enter
cmp
pop
stos
ret
inc
mov
hlt
inc
loope
fwait
cmp
inc
xchg
aaa
into
sub
scas
ljmp
ljmp
xor
dec
dec
cvtps2pi
int
dec
lcall
ficoml
arpl
ljmp
mov
mov
mov
ja
repnz
out
outsb
pop
pop
je
rcl
movsb
clc
dec
and
mov
push
ret
push
push
insl
push
or
int3
lods
dec
leave
std
mov
lods
jae
add
call
or
addb
adc
and
xchg
or
lcall
and
lods
sahf
scas
xchg
xor
add
inc
fs
test
mov
subb
inc
xor
mov
jg
and
in
jg
lcall
add
repnz
pop
movsb
inc
jbe
jae
gs
sub
cmpsl
clc
jbe
add
pushl
dec
insb
ja
fsubrl
repnz
or
mov
cmp
xchg
mov
lcall
jmp
fimull
sbb
rorl
pop
mov
xor
jg
call
loopne
mov
mov
xchg
mov
push
roll
call
sub
cmp
xlat
push
pop
loope
cld
testb
pop
cmp
subl
adc
jg
lcall
das
cltd
adc
jmp
hlt
cltd
add
bound
mov
mov
arpl
sub
in
xor
cs
jg
dec
cld
mov
and
fwait
push
not
or
mov
sbb
int
loopne
or
mov
jnp
incl
pusha
push
mov
pop
in
pusha
and
int3
xchg
cli
push
popf
xor
dec
pop
adc
and
mov
cmc
jb
mov
xchg
dec
cmp
lcall
inc
dec
mov
mov
inc
pop
cmp
dec
insb
arpl
mov
inc
jmp
xchg
jae
pop
cmpsb
dec
pushl
stos
mov
xchg
pop
push
or
lods
dec
jp
jbe
fldl
movaps
mov
jge
mov
mov
aad
add
les
cmp
sub
xor
ljmp
lea
lcall
mov
push
cmp
iret
aaa
dec
cmpsb
xchg
call
ss
orl
mov
mov
sub
aaa
sbb
call
frstor
in
sbb
mov
lcall
cmc
rcll
adc
push
inc
xor
inc
ja
ret
pop
sahf
out
add
xchg
mov
lcall
shrl
and
cmpsb
ss
iret
imul
pusha
mov
cmp
fmuls
repz
mov
rolb
jne
jnp
popa
lods
jmp
std
dec
cmpsl
mov
dec
and
cld
lcall
lods
mov
dec
scas
nop
scas
add
pop
dec
jb
jo
into
loope
pushf
cmp
rorl
decl
pop
out
stc
adc
ret
hlt
icebp
lret
incl
push
in
jg
cmpsb
jnp
ljmp
mov
xlat
push
in
cli
test
leave
jg
add
ret
sub
xchg
pop
jge
sub
xlat
decl
scas
dec
lock
sub
repnz
or
jg
sbb
jne
and
outsl
lock
repnz
dec
int3
xchg
aas
jmp
mov
addl
dec
sahf
lret
cli
push
push
pusha
sub
push
cmp
cld
test
push
jo
pop
ja
std
call
in
data16
das
push
push
mov
or
jle
or
ljmp
popa
subb
fnstenv
push
jecxz
ds
pop
push
cwtl
ds
insl
fwait
cmp
jbe
mov
fs
cmp
cli
aam
popa
scas
mov
addb
cld
xlat
hlt
outsb
sbb
mov
cmp
pop
leave
addr16
icebp
hlt
inc
fsubrl
subb
dec
jg
test
inc
pop
dec
idivb
pushl
jg
xchg
mov
leave
and
fwait
cwtl
das
pop
notl
mov
push
sub
push
loopne
pushl
in
add
pop
sti
add
shll
and
sbb
std
xor
add
inc
add
jg
outsb
pop
lret
outsl
sub
icebp
mov
push
mov
ds
adc
mov
push
mov
xchg
mov
js
add
add
sub
adc
inc
push
popa
mov
mov
mov
ret
mov
aad
das
ror
push
add
cmc
insl
or
mov
mov
ljmp
sub
test
or
shrl
sub
cli
movsb
incl
dec
data16
lret
and
cmpsl
push
sbb
insb
lcall
jmp
xchg
or
add
sub
cld
pushl
decl
add
pand
sbb
sarb
aaa
or
decl
in
out
push
xor
out
add
dec
cmp
push
jle
jp
sahf
pushf
add
movsl
test
call
pushf
adc
or
jle
jnp
or
add
add
xchg
mov
iret
lcall
adc
mov
cmpsb
pop
movd
add
cld
sub
adc
ficoml
shlb
ljmp
mov
xor
sbb
dec
aam
andl
lods
or
mov
and
pushl
cltd
cmpsb
mul
popaw
stos
mov
or
cld
mov
pop
mov
mov
lock
call
mov
adc
sbb
inc
cld
fwait
jb
test
test
decl
fcos
mov
rorl
sahf
ret
sub
xchg
movsl
incl
scas
xchg
xchg
std
xchg
add
sub
in
sbb
sub
mov
pop
jno
lcall
add
add
mov
push
jo
loop
jb
xchg
insl
sub
in
add
pushl
iret
push
xor
aas
fsubs
enter
or
mov
jle
dec
mov
leave
jge
lods
sbbb
call
add
mov
add
push
jae
rorb
jg
lcall
es
adcl
pop
shr
scas
enter
enter
shlb
pushl
sub
aam
inc
sbb
loop
inc
cmc
push
jo
pop
lcall
and
push
into
inc
mov
pop
push
out
in
cmp
rolb
push
pop
icebp
jne
int3
jmp
pop
enter
std
mov
xchg
jge
hlt
lret
nopl
push
popa
int3
sbb
aas
fwait
xchg
std
out
push
xor
inc
sbb
cmp
lret
jbe
fisttps
fbstp
rorb
je
out
sbb
sahf
push
and
lcall
xchg
xlat
negb
aad
inc
mov
cmp
inc
mov
lahf
xchg
nop
mov
ljmp
xlat
or
cmp
fmuls
sbb
pop
xor
inc
push
decl
push
and
movsb
loopne
and
xchg
jo
notl
sbb
lcall
lcall
sahf
in
inc
xchg
adc
and
mov
jg
or
add
dec
nop
imul
pop
arpl
sbb
call
shll
cli
in
jae
push
pop
repz
xor
mov
cmpsb
jae
sub
jo
decl
into
pop
pop
hlt
mov
jnp
in
into
aaa
mov
inc
vmaxsd
pushl
mov
sarl
push
je
inc
adc
inc
mov
lcall
in
inc
push
es
ljmp
mov
cmp
mulb
orb
fadd
leave
mov
push
out
into
mov
cs
jg
vpperm
push
loopne
jns
in
rorl
jge
dec
lret
iret
cltd
add
inc
mov
push
cli
dec
je
xor
in
mov
sti
popf
push
out
nop
mov
incl
sub
cli
xchg
out
adc
cmp
inc
add
mov
aaa
pop
inc
loop
data16
icebp
ja
jmp
hlt
xlat
cmp
adc
adc
dec
popf
mov
scas
jle
or
filds
push
arpl
or
movsl
xchg
outsb
out
mov
sbb
cld
jg
decl
stos
sbb
mov
dec
jnp
add
mov
pop
aad
xchg
mov
sub
lcall
test
in
mov
inc
mov
jne
mov
cld
stos
roll
cmp
aas
shll
jecxz
mov
out
stc
das
xchg
add
clc
add
clc
shll
cs
pushl
leave
jle
jne
jmp
jb
jecxz
lds
popf
icebp
adc
movsb
sub
movb
inc
inc
inc
sti
dec
mov
dec
cmpl
jg
mov
lock
decl
sti
cmp
lret
sub
pusha
mov
jno
mov
outsb
cmp
fcmove
test
incl
adc
xor
adc
dec
sbb
popf
outsl
loope
pusha
push
sbb
sbbl
shrb
subl
dec
cmp
jg
ja
or
xor
mov
push
cwtl
popf
fwait
push
pop
ja
mov
and
mov
daa
call
cmpsl
lret
lds
scas
idivb
lcall
int3
in
lahf
mov
flds
or
jmp
shlb
lock
fbld
outsl
sbb
rorb
mov
decl
jns
pop
loopne
fsubrp
incl
dec
lods
imul
push
shrl
lock
and
ficoms
call
mov
std
adc
and
bound
in
insb
push
mov
xlat
push
pop
cmc
mov
mov
push
push
inc
sarb
mov
sub
jnp
aad
movb
in
push
loope
arpl
xor
mov
mov
sbb
decl
dec
iret
pop
cmpsb
cmp
fwait
and
ss
cwtl
mov
mov
ficoms
cmp
fdivs
roll
pop
dec
or
shll
xor
push
jp
stos
adc
pushf
jo
sub
cld
pop
mov
or
adc
cmp
or
and
jge
inc
inc
and
pop
andl
pop
fdivr
fidivl
out
in
pop
test
sub
ljmp
incl
cmp
sub
mov
dec
pushl
mov
jmp
aam
inc
xlat
push
xor
mov
andl
push
out
inc
xor
ljmp
aad
stos
add
mov
adc
in
or
cmp
imul
lret
andb
call
mov
mov
or
repz
mov
in
into
xchg
rclb
clc
lcall
xchg
jb
or
jp
jo
aad
push
mov
mov
pop
sub
cmp
cmp
push
adc
lcall
imul
pop
xor
arpl
or
pminub
xchg
mov
test
loope
xor
or
pop
cmpsl
icebp
mov
xchg
jp
stos
pop
out
mov
test
imul
les
out
add
jg
jecxz
incl
pop
jae
mov
dec
xorl
push
push
fwait
jecxz
inc
adc
cmp
or
mov
in
loope
cwtl
ret
xor
sub
adc
mov
pusha
shl
sahf
pop
rolb
call
lcall
add
aas
call
lock
icebp
decl
mov
mov
xor
add
cmp
xor
lcall
mov
pop
sarb
pushf
fcompl
push
jge
movsb
inc
xchg
mov
inc
jae
mov
call
jecxz
pop
popf
push
mov
outsb
ljmp
adc
pushf
sbb
outsl
sbb
sbb
jle
aaa
mov
in
fsubrl
orl
movsl
jmp
cs
or
push
adc
sbb
decl
mov
iret
mov
push
pusha
testl
leave
sub
ljmp
or
adc
inc
aam
cltd
ret
mov
imul
mov
ljmp
test
pushf
adc
xchg
dec
jno
enter
cwtl
js
mov
lock
push
sarl
fsubrl
out
ror
scas
sbb
lds
cs
ljmp
mov
inc
push
add
das
inc
sti
and
jecxz
lods
pop
lahf
pop
mov
incl
adc
pop
fldt
cld
pop
cmp
in
sti
das
jno
clc
cmp
dec
dec
ficoms
mov
imul
and
pop
andb
out
lret
orb
lret
andl
orb
xchg
cmpsl
and
ljmp
jb
and
lcall
push
push
xchg
testb
pusha
sub
in
mov
pop
dec
add
xchg
jle
lea
mov
ret
ds
dec
sbb
subl
jg
pop
dec
jecxz
add
cmp
inc
cmp
shrb
shr
xchg
xor
pop
xchg
imul
mov
test
xor
ljmp
js
cmc
pop
cltd
mov
das
dec
xchg
ja
call
rcrl
hlt
push
and
imul
inc
fsubrp
dec
stos
data16
insl
mov
cmpsb
xchg
out
sbb
je
xchg
cmpsl
push
data16
incl
pop
adc
xor
cmpsl
dec
shll
aas
adc
aas
and
pop
lods
jo
in
push
sahf
cld
and
sub
fisttpll
incb
je
mov
incb
jo
out
idivl
lock
data16
lods
mov
decl
cmpb
scas
test
jo
push
fisttpll
bound
decl
mov
mov
ds
dec
cmp
push
sti
popf
sbb
jmp
sub
pushl
test
fbstp
rolb
inc
lret
imul
ss
jnp
push
mov
mov
jmp
mov
and
xchg
mov
arpl
andl
jmp
dec
inc
into
jmp
ret
mov
inc
inc
or
fistps
daa
loop
mov
pusha
pop
push
out
sbb
loop
test
and
imul
jnp
push
cmpsl
insb
mov
pop
sti
push
xlat
pop
dec
or
xor
leave
xor
push
mov
loop
decl
mov
in
dec
aaa
cmpsl
loope
inc
jmp
add
mov
jg
mov
xor
call
dec
sbb
addr16
in
inc
incl
icebp
jle
xlat
out
out
add
add
test
cmp
mov
cld
push
add
stc
lds
sti
shufps
add
cli
pop
xor
mov
sub
jb
mov
nop
dec
inc
mov
lea
leave
test
jae
pushl
adc
data16
sbb
jns
push
xchg
shll
xchg
lods
xchg
jmp
push
or
arpl
cmp
xchg
nop
mov
sbb
ja
aad
ret
mov
push
faddl
jge
push
out
lret
incl
scas
pop
jnp
xchg
push
mov
xor
lretw
inc
negb
adc
lods
mov
in
jno
cvtps2pd
or
sbb
icebp
adc
mov
xor
filds
fcomip
call
movsl
dec
pop
ret
add
ret
add
hlt
cmpsl
xchg
or
and
ja
call
lods
sub
pop
sub
cmpsl
leave
push
fadds
je
lock
mov
xor
xor
or
pop
mov
mov
push
cmp
mov
mov
xor
jp
int
sub
decb
xor
mov
incl
xor
je
das
lret
fstl
ret
cmp
inc
jne
mov
jmp
dec
inc
in
mov
mov
mov
xor
dec
inc
and
orb
xlat
adc
pop
cmc
mov
pop
in
pop
shll
mov
data16
loop
out
outsb
dec
popf
or
ljmp
sbb
mov
pop
dec
rolb
mov
ljmp
and
jbe
or
xchg
cmp
push
pop
pop
and
xchg
xchg
js
fsubrl
ljmp
inc
iret
loop
mov
movsb
jle
loopne
mov
lcall
ljmp
mov
je
pop
popa
je
subl
push
ds
scas
lock
pop
hlt
ljmp
lds
xchg
xlat
jo
iret
adcb
imulb
mov
in
gs
sti
jmp
push
xchg
out
pop
cmp
cwtl
lret
and
mov
jmp
decl
cmpsl
es
movsl
inc
enter
xchg
pop
jno
sbbb
fwait
mov
test
out
pop
test
mov
int
into
je
in
popa
push
push
pop
out
push
scas
iret
aaa
fsts
or
test
and
cli
in
sbb
subl
inc
or
and
mov
push
mov
xchg
sbb
jmp
repz
popa
xchg
aaa
gs
sar
and
push
mov
arpl
jno
mov
ljmp
nop
add
es
dec
adc
add
push
pop
xchg
or
xchg
mov
outsl
leave
push
gs
pushl
std
fisubrl
adc
repnz
jmp
inc
mov
dec
data16
nop
sub
mov
mov
push
in
stos
enter
inc
push
ljmp
mov
mov
xor
cli
iret
loope
lcall
jl
push
or
std
push
pop
js
jne
xchg
cmp
arpl
jmp
xor
push
jecxz
xor
scas
loope
or
stos
mov
fisttps
cmp
mov
cld
xor
sbb
pushl
sub
mov
iret
fcmovnb
xor
fbld
rcr
mov
shlb
jb
lret
out
orl
incl
mov
ret
loopne
scas
xor
aad
fwait
ret
fs
xchg
scas
xchg
pop
mov
call
xorl
adc
xchg
lret
icebp
ffree
inc
dec
dec
popa
scas
hlt
bound
ljmp
lods
mov
test
xorl
aaa
pop
shlb
add
xchg
jns
pop
div
and
call
arpl
stos
dec
ficoml
pushf
imul
call
test
iret
sub
cwtl
ret
in
push
inc
inc
mov
sysenter
jg
mov
mov
inc
sbb
xchg
cmp
insl
js,pn
add
call
pop
pushl
lret
sub
push
pop
sub
mov
push
xor
xorb
adc
aas
call
popw
out
outsb
push
lea
xchg
adc
xchg
loop
mov
insl
pop
and
lods
call
or
adc
jecxz
and
push
xchg
shrb
sarl
mov
shrb
jmp
push
dec
xchg
sub
adc
lods
mov
mov
leave
sub
add
mov
or
out
call
fwait
jmp
push
inc
bound
outsb
cld
popf
outsl
or
push
mov
decl
lock
sti
mov
mov
cs
mov
pusha
pop
mov
cmpsb
and
decl
inc
dec
leave
out
push
mov
jg
scas
push
int
insb
adc
inc
decl
ds
cs
xlat
or
xchg
sub
cmp
fldcw
insb
add
jmp
inc
leave
dec
xchg
ds
scas
ds
and
ss
push
cmc
test
lds
scas
das
icebp
cmp
daa
loopne
andb
fs
clc
or
daa
mov
addb
aas
cmp
stos
in
push
add
inc
pop
jb
pop
sbb
fiadds
incl
insl
xchg
repz
clc
sub
sbb
fld
xchg
enter
xchg
or
out
in
dec
decl
jecxz
mov
cmpsb
push
in
mov
sbb
pop
fimull
mov
das
mov
ret
cmpsb
xchg
test
test
divb
dec
es
push
sar
ljmp
bound
inc
push
adc
enter
cmp
mov
ja
lods
add
les
sahf
lcall
jmp
nop
mov
ss
fwait
cmp
xor
daa
jg
decl
jo
lahf
mov
pop
mov
fidivrl
test
sbb
and
mov
add
ret
mov
arpl
mov
or
sub
subl
pop
mov
mov
movl
lcall
fdivr
test
dec
cmpsl
movups
insb
ds
add
mov
push
lcall
mov
test
inc
adc
mov
xor
incl
add
cltd
jl
les
jle
jne
xor
jg
sbb
dec
jne
inc
shrl
loope
inc
push
sbb
cmp
enter
lcall
inc
push
sub
outsl
mov
aam
or
dec
dec
popf
push
jg
inc
lods
sub
inc
push
outsl
fisubrs
mov
push
shlb
xchg
or
std
xchg
adc
adc
ljmp
inc
lock
xchg
add
incl
movsl
push
mov
mov
icebp
sbb
shrl
imul
incb
pop
cmp
mov
jge
ljmp
dec
lods
imul
mov
push
mov
xchg
call
cwtl
in
cltd
dec
addb
xor
cmp
into
les
dec
loop
inc
mov
dec
inc
popa
jg
sarl
lods
mov
pop
mov
shl
mov
or
jmp
lahf
ja
sti
cmp
sbb
fwait
ja
es
divl
fwait
popf
lds
decl
loopne
mov
cwtl
frstor
outsb
js
add
popa
pushf
dec
inc
cltd
push
mov
out
cs
lcall
jb
xorl
lret
or
xchg
dec
lcall
test
packuswb
inc
sbb
mov
cmp
cmpsb
dec
sub
aas
ret
adc
add
mov
int3
mov
add
aaa
movsl
jnp
int3
lea
add
jecxz
jl
mov
xor
push
mov
mov
call
xor
xchg
sub
in
and
movsl
fstpl
call
pop
ja
xchg
push
das
jno
push
cmp
dec
cmp
cmp
and
dec
xor
out
sub
out
mov
mov
scas
xchg
mov
adc
fisttpll
push
fcomp
dec
fldl
dec
sti
in
fmull
xchg
sbb
jns
mov
sti
inc
pop
sub
mov
or
sub
push
nop
dec
dec
shrl
mov
adc
mov
call
decl
xchg
cwtl
xchg
jbe
mov
sti
dec
fsubp
cwtl
dec
push
cld
in
inc
shlb
lcall
adc
das
call
bound
stc
or
es
leave
enter
and
xor
dec
jnp
fisubs
adc
jae
push
test
jecxz
or
sahf
repz
lahf
into
imul
insl
xor
mov
xor
add
cmp
int
or
in
xor
jmp
out
iret
xchg
pop
imul
jle
push
inc
cmp
dec
test
jecxz
call
adc
fstl
cltd
fs
inc
push
movsb
ljmp
cld
repz
pushf
js
sbb
jp
or
sub
lret
mov
lcall
add
push
out
add
loopne
inc
sbb
add
rorl
xor
lcall
xchg
xchg
test
sbb
nop
stc
jecxz
dec
lds
pusha
mov
rcr
pushl
out
inc
and
push
or
mulb
loopne
jmp
add
repnz
mov
faddl
aam
add
mov
or
jl
xchg
dec
or
dec
dec
movsl
stos
xchg
push
xchg
cmp
and
mov
sub
adc
lcall
dec
push
je
out
dec
add
dec
aad
push
test
inc
xor
sbb
sbb
push
push
ljmp
decl
dec
pop
or
dec
lret
jnp
nop
ficoml
mov
es
arpl
mov
cmpsb
dec
call
hlt
pop
andps
dec
mov
hlt
lcallw
dec
mov
cmp
call
push
arpl
hlt
movsl
imul
fldt
movsl
sub
lahf
push
add
out
jecxz
es
sar
call
test
lock
push
mov
aad
inc
jmp
pop
jecxz
call
fdivp
push
xchg
fadds
mov
mov
scas
dec
add
ficompl
mov
xchg
push
call
dec
lock
ljmp
clc
sbbb
je
adc
dec
pushf
sbb
fcoms
call
dec
in
mov
cld
mov
push
test
jle
dec
cld
fcompp
push
lret
and
decl
and
insb
dec
fs
inc
loop
pop
test
into
fdivs
adc
add
push
inc
call
ror
negl
in
or
cmpsb
popf
loop
jb
xchg
xchg
push
in
inc
cmp
lcall
cmp
push
pushf
daa
sbb
pop
cwtl
push
icebp
xchg
test
fstps
mov
adc
jle
int3
pusha
pop
in
fmul
and
jmp
aam
xchg
push
ret
fsubp
shl
pop
std
push
in
adc
cmp
and
test
inc
xor
jle
mov
loope
scas
mov
rcl
jnp
mov
cmpsb
xchg
stc
in
mov
clc
sbb
call
mov
icebp
vmwrite
pop
rorl
shr
icebp
movsb
mov
xchg
fldz
xor
fidivl
test
push
loop
mov
out
xor
scas
xor
andb
jmp
addb
hlt
loopne
mov
cmpsb
lcall
stos
mov
cmp
push
jl
sarl
pop
or
mov
sbb
adc
dec
mov
xor
pop
push
cld
dec
rol
xchg
lret
data16
pop
scas
push
add
mov
inc
pop
jp
mov
mov
lcall
pop
cmp
in
stos
pop
cmpsl
scas
fwait
es
push
gs
call
lods
cmp
aad
xchg
outsl
pushf
mov
mov
notl
sahf
loop
push
xor
inc
push
out
out
call
mov
mov
stos
out
sahf
xor
lods
std
xchg
hlt
cmpsl
pushf
and
pusha
or
ja
vmaxpd
call
sbb
xchg
xchg
pop
sbb
ret
cli
daa
ret
pop
or
mov
and
mov
pop
repnz
call
shrb
jl
bound
icebp
or
or
push
xchg
dec
add
int
adc
leave
idiv
incl
lea
add
cli
ficompl
cmc
lods
jecxz
mov
mov
mov
lea
jmp
cs
insb
or
outsb
mov
inc
mov
jns
jae
shr
rcl
push
and
jl
fdivr
ljmp
repz
arpl
xchg
sub
hlt
push
adc
fldenv
or
incl
push
jne
inc
popf
adc
push
outsl
mov
or
cmpsb
ficoms
lds
mov
shll
mov
icebp
out
push
mov
cmp
jbe
pushl
insb
sub
inc
inc
jge
sahf
jne
mov
scas
add
cmpsl
js
dec
test
mov
pop
test
call
pusha
insb
dec
andb
mov
ljmp
fcmovu
push
sbb
outsl
mov
pop
testl
dec
and
cmc
mov
xor
mov
mov
inc
inc
loopne
sbb
decl
movsl
pushl
pop
xor
mov
jle
dec
cmp
mov
loopne
ljmp
mov
or
dec
adc
adc
movsb
cli
adc
xchg
or
adc
dec
cld
decl
add
movsl
xor
iret
scas
pop
in
aam
jl
fcmovnb
mov
pushl
mov
and
xor
push
sbb
sbb
out
push
inc
jns
jg
adc
and
imul
sbb
push
popa
mov
mov
and
dec
adc
std
stos
mov
dec
adc
in
outsb
decl
jg
push
xchg
notl
mov
pop
icebp
jnp
adc
and
cmp
fwait
je
push
sbb
inc
jp
stc
test
nop
push
test
fdivrl
lock
pop
cmpsb
gs
int3
mov
xchg
lods
int
movsl
test
or
into
adc
les
cmpl
cmc
ljmp
xchg
sti
push
aaa
mov
rcrl
push
xchg
mov
insl
xchg
mov
inc
or
fcmovne
pusha
sbbl
lea
dec
lods
jbe
lcall
in
pushf
or
xchg
sbb
js
mov
cmp
cmpsb
adc
fiaddl
jl
xorb
rclb
stos
xor
pop
in
xchg
adc
leave
push
insb
inc
xchg
sub
incl
js
inc
sbb
int3
jbe
mov
fwait
into
sbb
fs
loopne
cltd
sub
aad
dec
cmp
cmc
lret
incl
lods
dec
jp
jns
mov
clc
stc
bound
jb
lods
jg
add
push
decl
sbb
insb
out
andl
ret
sbb
sbb
decl
jbe
mov
rclb
ljmp
ret
fdiv
pushl
push
cmp
lds
xchg
mov
mov
es
mov
push
out
stc
push
push
mov
xchg
mov
lds
js
ficoml
loop
xor
shlb
sahf
or
cwtl
adc
ljmp
in
aad
and
mov
lock
dec
pop
pusha
out
dec
std
decl
loop
lcall
jae
inc
into
in
jge
inc
rorb
test
adc
and
mov
dec
fiadds
and
test
enter
inc
gs
pop
and
adc
js
dec
fldenv
out
aaa
adcl
xor
inc
mov
test
decl
cmp
jp
mov
and
das
pushf
mov
mov
movsb
cmp
lock
cmp
mov
jle
outsb
sbb
jl
imul
cmpb
out
ret
inc
adc
vpaddusw
sbb
mov
orb
push
lock
pushl
ret
sbb
dec
mov
shlb
cld
ljmp
cmpsl
mov
jg
cmpsl
cld
xor
cmp
sbb
dec
sub
add
cmp
test
out
enter
fists
lods
push
push
dec
jne
cld
lahf
cli
jp
es
or
jg
mov
or
mov
xor
mov
lea
decl
and
sbb
dec
fidivs
cmp
mov
mov
outsl
testb
cmpsl
gs
pop
xchg
out
scas
repnz
scas
dec
jbe
dec
ljmp
das
push
pop
int
push
xor
iret
sahf
adc
lods
inc
or
sarl
cld
pushl
adc
or
hlt
push
cmp
jge
out
mov
adc
dec
xchg
and
roll
jg
dec
xor
adc
fisttpll
aaa
loope
inc
lock
cli
adc
jo
icebp
in
jg
sbb
push
add
repz
dec
cmpb
incl
pop
jno
push
sbb
jl
leave
and
std
jl
push
cmpsb
dec
out
lods
jns
enter
jmp
int
add
fildll
fstps
mov
mov
movsl
fdivr
call
xor
sbb
dec
cmp
inc
jnp
add
roll
fwait
sub
decl
and
push
sbb
pop
out
les
mov
mov
jg
shr
movsl
mov
jle
lcall
sub
add
aas
or
iret
dec
jle
or
adc
adc
xrelease
mov
pop
and
jge
pop
mov
jmp
cli
mov
xlat
scas
insl
je
repnz
lods
pushf
xor
andb
push
incl
mov
out
hlt
jg
mov
add
pusha
ds
rcrb
adc
insb
or
mov
bound
jp
adc
mov
cld
push
pop
loopne
inc
stc
xor
ljmp
iret
cmp
in
push
jbe
mov
rcrb
xor
lahf
pop
dec
ret
mov
fldt
mov
xchg
lret
orb
pop
xchg
jne
jmp
and
lahf
push
or
sub
push
jmp
mov
push
mov
jp
cli
call
mov
jle
fucomp
push
int
and
and
gs
out
add
jmp
mull
cld
push
sbb
adc
ret
ja
adc
stos
push
imul
mov
ret
repnz
aas
ret
mov
cltd
arpl
mov
sbb
cld
arpl
pop
incl
cld
out
push
jl
cmp
push
testb
and
mov
rol
sbb
mov
arpl
hlt
out
push
mov
cmp
push
cld
push
mov
cli
mov
mov
mulb
inc
outsl
stc
lret
cmp
loope
mov
outsl
dec
lods
push
lods
push
pop
push
aas
mov
shll
enter
push
lcall
std
cltd
xor
aas
cmpsb
fwait
hlt
jge
push
xchg
sub
ljmp
in
mov
cmpsl
and
loopne
inc
xor
or
cmc
dec
cli
sar
ljmp
minps
repnz
inc
and
repnz
stos
scas
push
jae
hlt
add
test
sahf
lock
fs
outsb
pop
jne
sub
mov
sbb
lods
mov
and
xchg
aam
xor
sarl
push
outsl
ljmp
int
mov
jge
mov
lret
call
xor
mov
sahf
lods
mov
out
into
inc
pop
arpl
mov
sbb
inc
pop
cmp
mov
jne
sub
aas
mov
cmp
dec
das
jle
sub
jb
ret
mov
in
ror
ss
mov
jae
call
popa
cmp
sub
mov
push
test
mov
nop
adc
test
out
sbb
cmp
cmpsl
in
sahf
std
pushf
cld
shrl
xchg
and
cmp
repz
jg
sub
pop
cmp
rcr
xlat
pop
cmp
cld
jmp
stos
pusha
gs
sbb
negl
aam
inc
aad
aad
jo
lcall
add
xchg
xchg
push
xor
out
add
loope
into
mov
decl
int
add
push
push
cld
adc
sub
mov
cmp
mov
fwait
std
jne
mov
push
test
decl
icebp
pusha
test
fs
shl
fldl
incl
ror
shlb
mov
xchg
popa
jmp
imul
lcall
std
and
inc
dec
sbb
jecxz
sbb
and
or
data16
out
jno
mov
and
ljmp
rcr
add
pop
jg
sti
pop
adc
cwtl
mov
jmp
jmp
pop
icebp
in
sti
test
dec
test
sub
pop
rorl
fiaddl
mov
sbb
sar
and
stos
mov
in
adc
dec
rclb
stc
xchg
iret
jno
icebp
xchg
cmp
mov
repz
jmp
arpl
fs
and
mov
call
sub
add
fldpi
lods
pop
fmuls
xor
sarb
loop
jnp
rcrb
push
push
mov
lock
loopne
xchg
cmc
into
pushf
inc
int3
rol
scas
out
in
push
pop
push
pop
jge
int3
lds
scas
jno
addr16
push
xor
ljmp
dec
ret
js
mov
aad
or
jp
mov
jge
lret
jae
and
inc
jnp
add
fisttpll
xor
lcall
out
dec
ljmp
jge
inc
fnstcw
ljmp
or
mov
adc
mov
mov
clc
push
ljmp
xchg
pop
call
jmp
loope
cmp
sub
mov
push
outsl
inc
push
lcall
incl
je
xor
jmp
sti
imul
sbb
xchg
scas
stos
idivl
lret
cli
lcall
hlt
clc
nop
pop
das
cmpsl
jg
sbb
add
mov
lcall
lcall
or
mov
mov
mov
jno
repz
mov
push
std
add
xchg
push
xor
cmp
add
sub
lret
movsb
push
mov
dec
decl
lcall
jne
push
mov
int3
mov
rorb
imul
hlt
ret
fs
ljmp
mov
or
sub
sub
sbb
inc
je
or
sbb
call
incl
add
mov
iret
push
and
cmc
adc
jmp
inc
fcmovu
mov
fsts
inc
adc
mov
icebp
inc
add
push
cli
mov
shrb
out
dec
in
arpl
loope
fs
cs
decl
leave
lret
cmp
jne
mov
int
push
or
ret
pop
into
ljmp
cli
cmc
rcl
mov
or
adc
sbbl
add
jmp
cmp
dec
test
pop
cmpsl
jns
jl
dec
push
add
insl
sti
inc
pusha
js
pop
outsb
jae
jmp
jmp
add
stos
repz
ljmp
bnd
adc
decl
push
loopne
and
scas
lea
add
aad
pop
and
cmp
mov
lock
mov
test
jno
out
shll
dec
mov
sub
push
inc
mov
jno
mov
icebp
dec
andb
dec
xor
movsl
arpl
sbb
nop
sub
out
nop
sbb
out
ljmp
jne
sub
sub
push
lret
cmp
idivb
add
pop
in
cmp
test
popa
clc
cmpsb
jnp
mov
cmp
push
pushf
sbb
pop
icebp
and
nop
outsb
dec
mov
sbb
pop
cmp
adc
cmp
call
cmp
adc
popa
test
test
sub
and
dec
jo
pop
mov
mov
insl
cld
incl
mov
clc
jnp
fsubrl
outsl
add
jg
filds
das
dec
pop
fbld
in
cmpsb
stc
ret
mov
dec
fidivrl
cmpsl
mov
pusha
push
mov
aas
mov
sarl
cmp
mov
dec
adc
jae
cmc
and
mov
fcmovnu
iret
pop
xor
mov
imul
adc
leave
dec
inc
adc
push
xor
sub
aas
lds
dec
shrl
pop
xor
out
sub
sub
cld
mov
push
xlat
add
ljmp
sbb
jb
in
fcmove
arpl
inc
and
cmp
dec
adc
jns
imull
stc
lcall
sbb
push
cmc
inc
jg
aas
sub
ja
or
dec
pop
push
call
movsb
mov
push
fistpl
in
adc
sbb
cs
jae
mov
scas
idiv
call
insl
dec
imul
push
and
jns
out
xor
gs
enter
and
pop
js
fld
lcall
inc
cld
shll
dec
inc
fnstsw
cmpsl
sub
mov
mov
fxch
out
cmp
adc
add
mov
out
int3
in
mov
in
jmp
mov
outsl
add
xor
fcmovnu
fnstsw
sub
jg
idiv
outsb
push
mov
mov
in
inc
arpl
lcall
jp
mov
inc
repz
popl
mov
gs
in
fisubrs
popf
rcl
push
rol
sub
leave
xchg
fbstp
lcall
jns
int3
or
mov
lret
stos
and
jecxz
xor
adc
pusha
cmp
mov
mov
out
inc
push
xchg
and
pusha
jecxz
test
mov
incl
add
pushf
inc
sahf
and
sbb
jp
sbb
jnp
dec
mov
lret
icebp
mov
pushl
std
call
xchg
xchg
sbb
mov
or
inc
outsb
popf
and
sub
decl
imul
cmc
adc
mov
in
test
xchg
pop
loopne
pushl
mov
int
mov
jp
out
insb
shll
bnd
and
incl
add
ljmp
jns
mov
sbb
pushl
pushl
and
pop
xor
xchg
shll
mov
lahf
in
and
loope
mov
inc
add
mov
orl
inc
call
out
aaa
rorl
mov
fldl
mov
adc
dec
fsubs
pusha
mov
mov
xor
shl
jbe
outsl
xchg
movsl
dec
dec
gs
push
sti
notl
ja
adc
adc
push
add
sahf
push
push
jmp
or
scas
cld
jbe
lcall
in
pop
cli
call
loopne
cwtl
out
cmp
mov
add
shrl
out
test
addr16
pop
adc
dec
add
lcall
arpl
and
pop
adc
movsl
nop
ljmp
pushl
pop
call
ja
push
mov
ret
jge
movsw
les
mov
xchg
pop
jge
cmc
fiaddl
adc
es
adc
je
pop
mov
xor
dec
ss
std
push
push
les
or
popf
sbb
stos
mov
xor
cmp
ret
sbb
dec
mov
xchg
pushf
rcll
mov
or
xor
imul
cmp
add
inc
loopne
movsb
hlt
push
inc
cmp
mov
pop
mov
ljmp
jp
or
cld
hlt
add
pmulhuw
lcall
cmp
sbbb
mov
push
cs
pop
sub
add
scas
or
xor
sub
out
mov
adc
pusha
flds
mov
jbe
xchg
cmc
jno
jg
pop
sbb
pop
mov
mov
xorl
cmc
lds
fwait
mov
ljmp
add
aas
cmp
mov
mov
pop
std
les
insb
mov
data16
rcr
and
idivb
hlt
cwtl
jle
cmpl
imul
scas
loope
mov
cmc
and
cltd
push
pop
pushf
inc
imul
pop
and
es
lcall
ljmp
push
filds
sub
nop
cli
lret
push
xor
sarl
ja
dec
cli
sahf
dec
mov
fmuls
add
nop
cmp
lods
in
sub
dec
push
in
mov
enter
or
fcomip
call
adc
add
jge
lods
imul
cli
mov
mull
lcall
pop
js
mov
mov
push
lods
mov
stos
enter
xor
std
mov
aam
imul
cmp
and
js
mov
mov
aas
lods
dec
sub
lcall
push
adc
xchg
dec
pop
fnsave
inc
sti
cltd
enter
inc
in
pusha
aas
in
fs
jp
testb
mov
shrb
add
stos
jae
mov
cmp
cmp
jp
arpl
mov
cmp
out
pop
ljmp
ds
mov
xchg
and
lret
cltd
pusha
fisttps
call
incl
mov
pop
and
in
jle
mov
and
sti
mov
rolb
and
loopne
outsl
add
les
stos
icebp
lea
jg
mov
mov
jmp
pop
and
fisttpll
shll
sarl
popa
dec
inc
jmp
mov
jb
sbbl
jle
incl
jb
outsl
mov
cld
nop
xor
loopne
xor
cmp
inc
jno
cmp
lcall
cwtl
push
or
jecxz
test
cli
or
jmp
out
out
fdivrp
call
in
pop
cmp
es
xor
pop
push
or
push
into
in
enter
aad
call
add
repnz
add
sbb
xor
mov
test
shrl
xchg
lret
sbb
outsl
xor
stos
and
add
incl
push
cmp
adcl
xchg
xor
jg
subb
out
cmp
std
sbb
outsl
arpl
inc
pushf
dec
sbb
je
pop
fisttps
mov
mov
stc
and
dec
icebp
ljmp
imul
popf
xor
cmp
hlt
mov
jg
mov
add
daa
push
mov
rorl
out
push
rcll
push
es
addl
xchg
test
mov
dec
addr16
jg
insl
mov
loop
cmp
in
sub
movsl
int3
jne
aaa
jnp
stos
mov
jne
stos
jmp
daa
inc
les
data16
pop
and
pop
frstor
shll
jne
das
arpl
xlat
in
sub
incl
adc
imul
clc
out
adc
add
or
xor
mov
cli
popa
sti
mov
adc
aaa
adc
jle
jg
cs
xchg
and
pushl
pop
jp
jno
push
sub
xchg
adc
inc
int3
inc
sahf
sub
push
push
jo
dec
sti
xorl
test
push
bound
adc
aad
sub
push
jns
cld
inc
mov
push
dec
jg
fmull
jmp
lods
daa
loope
mov
pusha
lds
mov
lahf
mov
bound
push
lcall
inc
xchg
sub
jnp
mov
and
add
mov
hlt
push
sar
pushl
fdivrs
out
push
in
push
mov
nop
mov
sbb
mov
into
cmpsb
pop
jg
js
push
jns
scas
mov
into
loop
lods
imul
xor
test
jnp
incl
aad
outsl
cmp
fidivl
push
inc
dec
jno
test
lcall
ja
mov
rolb
int
test
push
jns
jge
mov
icebp
ljmp
inc
push
jecxz
jae
sub
out
mov
pusha
add
mov
mov
jmp
inc
xchg
mov
cwtl
in
and
popf
xchg
pop
or
xorl
ret
pushl
push
lods
pop
rol
jb
jnp
pop
pop
addr16
and
das
jge
imul
jmp
pop
mov
mov
arpl
shr
xor
out
repnz
xadd
dec
xchg
jae
loopne
int3
pop
jmp
lock
dec
into
lock
jg
push
data16
subl
cmpsb
leave
rorl
icebp
pusha
pop
xchg
or
cmp
add
int
sbb
mov
pushf
mov
jb
mov
je
jg
jne
pop
jno
or
add
jge
iret
enter
clc
incl
mov
xchg
dec
js
out
adcb
jg
lcall
mov
fwait
aad
fisttpl
int3
sahf
sbb
jmp
xchg
jb
cmp
adc
jae
xchg
adc
filds
in
aam
cli
pop
lret
fst
test
movsb
add
out
out
cli
in
sub
int
mov
addr16
inc
mov
mov
imul
pushf
adc
das
enter
jmp
lods
repnz
inc
mov
test
xchg
and
ret
inc
sub
mov
xor
pop
test
mov
std
push
sbb
outsb
or
xor
mov
inc
sti
shrb
scas
jg
in
mov
jbe
in
fldenv
xor
negl
inc
out
add
pop
lcall
jle
fbstp
xor
mov
mov
iret
xor
cld
jno
shr
xor
or
dec
push
pusha
xchg
mov
ror
cmp
xchg
ljmp
rol
push
push
ljmp
clc
incl
sub
iret
xchg
ss
pushf
dec
icebp
jne
jl
push
mov
add
incl
int
in
xor
adc
jno
sar
decl
int3
mov
sub
push
mov
push
pop
lods
push
ljmp
mov
in
mov
cmpsb
mov
jle
inc
das
adc
mov
mov
mov
fwait
call
nop
xor
pop
jg
gs
xchg
lea
aaa
mov
mov
in
dec
pushl
pop
xchg
push
insl
inc
lds
divl
hlt
mov
out
xchg
mov
add
daa
leave
cmc
mov
mov
fsubs
nop
mov
adc
cmpsb
push
out
xchg
int
or
mov
push
fidivs
call
mov
pop
inc
icebp
cmp
loope
js
mov
xchg
add
mov
enter
add
ficoml
push
add
pop
cli
pop
loopne
test
sarl
sbb
lahf
fwait
adc
stos
push
cld
out
add
ja
in
lds
xchg
push
lcall
xchg
mov
outsl
repz
orb
push
cli
dec
lods
cli
xchg
scas
pop
mov
or
incl
pop
add
xchg
movsl
sub
lods
xlat
sub
mov
push
add
jmp
stos
lods
adc
sbb
in
fldcw
movsl
or
sub
and
setnp
cld
fdivr
call
loopne
jl
mov
push
fs
dec
cmp
xchg
xchg
pop
jmp
dec
popl
rclb
xchg
mov
pop
aam
mov
sbb
rcrl
add
xor
sub
sbb
call
fidivl
or
inc
mov
daa
and
mov
fbstp
pop
test
push
mulb
push
fwait
lods
aam
dec
rorb
mov
test
ljmp
cmpsb
int3
xor
mov
sub
shrl
pop
adc
pop
mov
sub
mov
xchg
lret
data16
cmp
inc
movsb
gs
mov
adc
dec
lahf
mov
bnd
sub
xchg
incb
dec
jae
in
or
dec
rclb
test
call
aam
frstor
mov
mov
cmp
cmc
rolw
bound
jo
test
cwtl
cmpsl
out
add
icebp
add
decl
in
jl
push
jle
aaa
aam
fadd
xchg
neg
outsb
pop
lds
jg
adc
lret
cmc
ljmp
inc
jns
adc
call
test
sub
jo
incl
mov
aaa
mov
push
mul
mov
fisubrs
mov
loop
xchg
ljmp
sarl
dec
add
in
sbb
cmp
insb
std
fsubrp
test
mov
lcall
hlt
or
and
xchg
mov
lods
ss
push
xor
aaa
xor
loope
jmp
jge
clc
sbb
outsb
fidivl
loope
xor
cmp
jge
mov
xchg
clc
dec
push
dec
mov
loope
scas
and
and
inc
in
leave
imul
mov
data16
cwtl
jne
inc
aam
xor
ja
mov
and
xor
fcomps
xchg
ljmp
addr16
repnz
mov
sar
xor
mov
mov
inc
out
dec
adc
incl
mov
nop
jne
loopne
js
cmp
mov
ljmp
loope
incl
sub
lret
pusha
popf
cmc
push
int3
imul
movsl
or
shl
mov
push
popf
arpl
aam
xchg
mov
add
in
setae
testl
mov
sbb
int
xchg
stos
and
pop
jg
hlt
sub
cld
cmc
aas
xchg
jmp
ret
scas
clc
sbb
mov
pushl
push
mov
mov
nop
sub
jecxz
insl
out
hlt
andl
aam
ljmp
xlat
mov
cmc
mov
pop
add
shlb
sbb
inc
mov
dec
je
cli
xor
jae
mov
mov
out
or
ss
cmpsl
lret
cmp
std
mov
sarl
out
xchg
adc
add
popa
fisttpll
mov
decl
mov
sub
mov
cmp
or
pop
daa
and
mov
push
repnz
mull
dec
sbb
mov
aaa
add
pop
pop
fcomps
sti
push
push
push
jle
jg
adc
cli
fcoml
adc
repz
outsb
in
sbb
pushf
cmp
fcomip
xchg
insl
push
and
leave
sarb
xchg
cmp
pop
inc
jp
cmpsl
pop
ljmp
cli
jmp
arpl
lea
aam
add
cmp
cltd
push
cmp
jo
cmpsl
incl
call
mov
sbb
jno
pop
add
inc
imul
xchg
ret
mov
fmull
leave
mov
ret
scas
std
lcall
and
ret
packssdw
and
in
inc
daa
lea
lret
push
adc
out
lret
fcomip
dec
add
lret
sti
adc
cmp
pop
adc
xchg
sub
adc
jmp
cmp
in
out
daa
push
and
add
mov
mov
pop
pop
adc
sar
lcall
lods
jne
push
repnz
push
mov
imul
inc
mov
mov
push
push
mov
popa
cmp
pushl
push
insb
jp
leave
fiaddl
sub
and
cmpsb
rclb
xchg
push
and
sbb
dec
call
sbb
sbb
pop
aas
and
xchg
icebp
cltd
sub
xchg
lcall
fcomp
mov
popa
enter
xor
scas
out
cltd
pop
mov
pushl
jbe
std
test
fs
ss
gs
push
scas
subb
loopne
in
incl
inc
mov
or
cmpsb
fistpll
inc
les
xchg
addr16
xchg
clc
fldt
add
dec
popa
mov
shll
adc
push
dec
inc
mov
and
test
and
push
decl
mov
xor
dec
out
movsl
sbb
xor
cmpb
js
inc
adc
scas
jg
scas
lock
mov
cmc
cmpl
dec
sub
stc
dec
incl
jmp
lret
aam
pop
cmp
es
jmp
xchg
cmp
out
fistpl
sub
mov
rcr
loop
decl
sbb
xchg
cmp
sub
lods
iret
jl
in
xor
call
xchg
jne
and
rorl
cltd
and
cmp
das
clc
lcall
repnz
inc
cwtl
dec
xchg
jo
rorl
scas
cmp
lods
mov
push
pandn
inc
dec
push
shrl
jp
sub
inc
push
sub
js
xor
sub
xor
in
es
test
jl
jne
mov
pop
mov
mov
jae
roll
xchg
push
pop
aam
insb
xchg
lea
fidivrs
enter
outsb
fistpll
jmp
cli
pusha
lods
inc
mov
pop
mov
or
sbb
lcall
and
adc
push
dec
push
push
mov
pop
mov
clc
sub
repz
inc
dec
stos
ss
jl
pop
mov
mov
lahf
dec
sub
or
mov
pushl
ret
dec
fdivrs
add
dec
push
mov
repnz
mov
hlt
dec
mov
sbbl
sub
pop
inc
lds
sahf
pusha
adc
add
push
rcl
cmc
push
mov
lcall
jge
inc
scas
dec
adc
nop
mov
je
xlat
dec
lret
daa
cld
imul
mov
jg
mov
shlb
sbb
xchg
inc
loopne
inc
in
dec
scas
cltd
cs
cld
cmp
or
aam
cmp
xchg
mov
jnp
rolb
call
mov
cmp
test
mov
sbb
scas
and
pop
pop
xor
das
subb
out
jg
adc
sub
scas
lods
cmp
js
xchg
mov
jmp
jl
lcall
cmpsb
test
mov
adc
sbb
or
push
sub
and
fistps
jge
pushf
jnp
dec
jno,pn
sub
sub
scas
rcr
movsb
pusha
and
fildl
jg
call
or
out
inc
xor
repz
pop
cmpsb
jno
lret
ss
cmc
sarl
std
call
cmp
xor
aad
int3
ret
cmpl
lea
cs
add
ja
jg
mov
mov
clc
push
xchg
jecxz
jp
fistpll
loope
mov
xchg
push
scas
push
sbb
pop
jge
adc
mov
or
jns
lea
adc
incl
cltd
pushf
sub
es
repz
cmp
sbb
xor
mov
dec
loopne
mov
add
call
lods
inc
inc
fs
lcall
insl
adc
cmp
adc
ds
lret
call
std
pop
xchg
aam
pop
pop
mov
aad
mov
mov
pop
cmp
sahf
dec
clc
fsubr
out
das
cmp
dec
push
int3
enter
jmp
shlb
lret
push
imul
push
pop
fists
clc
sub
push
mov
enter
mov
push
data16
pushl
repz
push
inc
test
out
fcoml
pop
cli
lret
repnz
jle
pop
cmp
add
pop
sub
mov
stos
jb
aas
inc
pop
scas
adc
ret
popl
mov
cs
or
dec
xchg
dec
pop
fisubs
mov
daa
cmp
pop
popa
xchg
jecxz
pushl
sub
mov
test
dec
outsl
idivb
add
add
je
pop
jge
push
push
xor
push
ret
hlt
clc
mov
add
bound
outsb
mov
loop
stos
scas
call
outsl
clc
jns
xchg
imul
les
pop
aad
lahf
pusha
fxch
rorl
xor
mov
pop
aam
dec
pusha
jg
cmc
aad
aas
test
pusha
add
jg
xor
cltd
clc
mov
add
push
cmpsb
inc
pop
sbb
sbb
decl
lahf
pop
gs
out
aas
add
fsubrs
inc
call
push
xor
mov
mov
lret
das
test
sub
pop
data16
mov
lock
jl
mov
push
nop
adc
push
and
insb
addb
fst
es
movsb
push
rcr
cltd
int3
lcall
add
int
xchg
mov
ss
cs
mov
int3
mov
int
out
mov
pushl
pop
inc
jns
sti
lcall
pop
push
cmp
int3
fcomip
call
pop
xor
jo
jle
mov
arpl
movsb
ret
jns
insb
xchg
andb
decl
xchg
cmp
xor
cmp
or
scas
jmp
sub
shll
and
mov
push
pop
rcrb
lds
ja
imulb
jo
push
add
xor
pop
mov
cld
xchg
repz
es
inc
pop
imul
sbb
fwait
add
movsb
sbb
and
pushl
shrl
or
add
ret
cwtl
push
mov
out
lcall
push
arpl
aad
ss
je
push
arpl
scas
dec
in
xor
pop
sub
push
sub
or
mov
shrl
sub
xchg
out
mov
inc
mov
sti
add
or
das
and
sub
ljmp
xchg
dec
loope
lock
idivb
mov
adc
add
xchg
fldenv
push
aad
inc
cmp
and
xchg
mov
jae
or
mov
popa
push
mov
imul
stc
adc
mov
popf
sbb
rol
jge
outsl
push
mov
mov
mov
pushl
std
lcall
push
push
and
xchg
enter
cmp
stc
arpl
jg
je
dec
mov
and
push
sub
jne
lret
add
es
outsl
push
lcall
sub
pop
dec
stos
push
adc
mov
adc
adc
js
ljmp
add
cld
sarl
push
push
mov
mov
dec
adc
sbb
or
call
lods
in
jnp
mov
dec
cli
and
icebp
imul
out
sbb
jmp
inc
or
mov
jb
xor
mov
xchg
adc
leave
dec
cwtl
mov
cs
dec
add
mov
jl
mov
xchg
pop
push
and
dec
loopne
and
push
cld
push
movsl
stc
hlt
cmpsb
mov
cmpsb
stos
test
mov
push
sbb
jne
ljmp
aad
test
sub
out
or
add
idiv
mov
sub
xchg
scas
mov
ljmp
sbb
cmp
outsl
dec
sbb
test
repnz
cmp
mov
xchg
lcall
adc
pop
inc
addb
ds
add
jl
sub
aas
mov
push
add
daa
xchg
sbb
aam
inc
xchg
leave
jp
xor
leave
mov
cmp
xchg
lahf
out
adc
inc
adc
xlat
push
pop
dec
out
pushf
jno
pop
mov
leave
js
lcall
cmc
pop
in
in
xchg
cmp
test
scas
in
jl
push
adc
adc
jge
jmp
or
pop
ret
push
data16
xlat
add
adc
cltd
mov
xchg
pop
cmpsl
jmp
mov
imul
inc
and
push
lods
fldenv
lods
stos
dec
cld
mov
mov
call
mov
xchg
jl
test
arpl
add
es
xor
adc
xchg
decl
or
sub
mov
aas
add
pusha
loope
lds
decl
fisubl
andb
inc
cmpsb
lcall
mov
adc
dec
or
lcall
push
add
or
filds
or
std
adc
enter
mov
lcall
icebp
leave
pop
int
insb
pop
dec
inc
shrb
dec
scas
add
xchg
arpl
mov
pop
mov
sbb
shl
clc
int
mov
mov
outsl
mov
push
iret
adc
incl
mov
jg
int3
in
xor
stos
jae
out
cmp
adc
push
or
jmp
enter
push
dec
jmp
pop
fdivl
jmp
imul
scas
repnz
mov
adc
or
sub
dec
out
jp
pop
rcrb
aam
popf
in
mov
and
lahf
push
dec
pop
jnp
movsb
add
push
add
mov
jmp
push
and
popf
lcall
mov
insl
mov
push
xchg
jg
add
pop
push
lea
das
call
push
movsl
inc
cmp
sub
add
lret
mov
in
inc
jmp
daa
mov
or
popa
daa
pop
loop
cld
test
call
add
mov
push
js
and
lcall
sbb
insb
dec
mov
push
dec
cmp
inc
sub
xor
mov
and
decl
jl
mov
std
aam
mov
popa
stos
aas
sbb
pop
rclb
idiv
nop
cwtl
push
and
movsb
dec
dec
cmpb
push
or
in
rorl
or
sub
cmc
add
rcll
sbbl
lods
sti
mov
xor
ss
sar
mov
adc
inc
dec
add
xor
pop
lahf
in
int3
ret
pop
xchg
outsb
scas
mov
cmc
xlat
pop
pop
imulb
mov
xor
pop
aaa
push
imul
stos
jno,pt
ljmp
push
sti
lret
adc
bound
mov
aad
push
pusha
jp
fwait
and
pop
mov
es
out
inc
dec
xor
cli
pop
notb
jg
xchg
scas
and
cli
ljmp
mov
xor
xchg
out
or
or
xchg
and
loope
pop
push
cmp
leave
mul
xchg
rcrb
dec
and
ss
lcall
sahf
or
in
fldl
iret
push
xor
ljmp
imul
lcall
dec
int
imul
cmp
sbb
mov
leave
aas
loope
push
fmulp
or
cmp
pushl
nop
pop
aaa
pop
scas
dec
xor
cmpsb
int
aad
xchg
movsb
movsl
pop
pop
je
mov
jne
test
std
mov
imul
iret
jp
mov
flds
adc
pop
pushl
mov
pop
cli
dec
ds
mov
xchg
rcrb
xlat
adc
sub
ljmp
pushf
cmpsl
jb
pushf
mov
mov
fs
xchg
xor
dec
lock
and
lahf
adc
cmp
mov
hlt
in
call
stos
bound
mov
dec
cmpsb
jle
lock
movsl
lods
sarb
cmpsl
sub
cltd
lods
andl
inc
ss
mov
cmpsb
je
imul
dec
mov
xor
sbb
decl
mov
or
bound
orb
and
xchg
fs
decl
outsb
test
pop
into
daa
cmp
jle
xor
in
incl
imul
xor
mov
cmp
xor
popa
repz
mov
xor
and
dec
imul
out
cmpsb
frstor
xor
and
lcall
ret
mov
cmp
sub
adc
shrl
insl
ljmp
ret
scas
mov
and
sahf
int3
fists
das
push
out
in
call
jecxz
dec
notl
cmpsb
push
mov
inc
lcall
cmp
mov
dec
mov
mov
mov
lahf
mov
jne
adc
jl
or
pusha
loopne
loopne
xchg
jb
and
cmp
insb
stos
jle
adc
cmp
sub
int3
subl
xchg
inc
xchg
pop
sbb
aam
ljmp
jmp
ds
adc
int
xor
xor
sub
pop
fisubrl
mov
ds
ret
xchg
fdivr
pushl
dec
cmpsb
and
es
and
mov
pushf
pop
mov
in
xor
nop
mov
pop
mov
dec
ja
pop
inc
shrl
bswap
inc
loop
int
sbbb
clc
jp
cs
jge
loopne
xor
add
mov
sub
cld
push
inc
push
mov
mov
minps
inc
push
mov
pop
js
mov
mov
call
cmp
lret
fs
adc
inc
add
insb
mov
idivb
iret
jecxz
mov
mov
push
sub
pusha
pop
jg
cmpsl
movl
gs
lcall
arpl
xor
mov
adcl
push
xorb
mov
push
stos
fmul
or
mov
dec
jbe
shrb
mov
std
imul
push
mov
mov
lcall
adc
imul
xor
dec
lds
int3
sbb
and
add
aam
push
mov
call
icebp
test
mov
idivl
gs
lcall
mov
ljmp
xchg
push
outsb
xchg
fucomip
mov
inc
mov
mov
into
or
pushl
mov
xchg
das
xor
fucomi
inc
jmp
es
cmp
fstpt
fwait
das
xor
mov
lds
pop
cld
call
pushf
fistpl
sbb
in
dec
outsb
push
pop
pop
pushf
or
ficomps
addl
sti
pop
xchg
mov
ja
js
imul
popf
cmp
int3
mov
or
ljmp
and
dec
pop
or
imul
mov
in
inc
insl
push
mov
jmp
sub
add
dec
aad
xor
je
jge
sbb
cmpsl
mov
push
mov
cmp
fsubs
mov
stos
and
int3
xchg
outsl
fsub
in
jne
call
decb
ljmp
jl
sbb
adc
mov
fsubrs
mov
ss
mov
mov
mov
test
adc
dec
xor
or
mov
pop
or
adc
push
xlat
lahf
cmp
inc
cmp
negb
in
jmp
sbb
push
push
stos
jp
stc
pop
jno
sahf
mov
push
pop
or
dec
ret
cld
ljmp
ret
mov
stos
inc
test
sub
pop
lds
xor
jg
and
jle
cmp
pop
mov
cmp
decl
xchg
mov
test
adc
aaa
and
mov
std
push
mov
dec
mov
mov
les
scas
mov
insl
mov
roll
mov
pop
jo
jp
mov
dec
mov
nop
repnz
cwtl
mov
adc
lods
sbb
fdivrs
push
cwtl
dec
jno
loopne
outsl
cli
arpl
and
movsb
insb
lcall
or
and
mov
cmpb
mov
fimuls
sahf
or
mov
loope
aad
ror
or
mov
es
jmp
decl
inc
aam
loop
sub
fs
ficoml
push
loope
mov
lcall
pushf
test
jns
push
pop
sub
mov
mov
ss
test
add
jmp
mov
lahf
jb
xchg
mov
adc
lods
adc
push
mov
dec
pop
xor
adc
jmp
nop
or
out
mov
std
cwtl
mov
sahf
xor
out
adc
lahf
movsb
add
incl
cli
lock
pop
adc
ret
cli
mov
jecxz
mov
incl
dec
ffreep
xlat
fbstp
lret
jb
push
pop
fsubs
add
or
pop
dec
cld
mov
cmp
or
cmp
and
xchg
out
addl
sub
mov
jg
cmp
push
out
icebp
scas
test
sbb
jmp
je
int
shlb
or
ljmp
shlb
lret
in
repz
ret
jg
pop
push
fildll
loope
lods
test
iret
in
lcall
addr16
shufps
hlt
lret
pop
in
push
xchg
push
insl
mov
xchg
mov
clc
addr16
repz
loopne
mov
stc
fcompl
sti
xchg
sbb
ret
and
jne
divl
popl
fdiv
sub
incl
add
push
cwtl
stc
jg
mov
iret
pop
sbb
repz
push
fdivrs
pop
jbe
mov
loop
andb
pop
mov
shrl
ljmp
dec
inc
fcmovnu
rcrb
test
sbb
movsl
jbe
gs
sbb
fwait
cld
ret
incl
cmpsl
mov
xchg
subl
faddp
push
mov
mov
sub
daa
inc
push
in
sub
cmp
mov
push
sub
or
pop
push
mov
cmp
push
call
inc
or
jb
push
out
adc
adc
les
ja
xchg
lods
inc
fimuls
dec
scas
lods
sahf
decl
subb
pop
jae
jl
jno
sbb
dec
scas
sarb
xchg
dec
aam
jmp
cld
test
lret
stc
mov
enter
imul
into
aad
fstpl
sbb
loope
stc
jcxz
pop
mov
or
dec
test
out
ret
negl
mov
lock
sub
repnz
jmp
imulb
inc
add
cmp
cmc
lcall
ljmp
stc
cmp
add
hlt
repnz
xlat
pop
roll
cld
jmp
dec
ret
test
sar
inc
test
jbe
jns
lea
clc
in
or
test
mov
frstor
loopne
cmc
dec
repz
int
lcall
es
popf
arpl
test
and
push
add
movsl
mov
ljmp
mov
pop
rolb
ret
inc
test
jno
push
pop
jno
pop
std
ljmp
adc
fisttpl
sbb
mov
xor
jecxz
mov
cs
ficompl
stos
aad
js
xor
clc
ljmp
aam
sub
push
jns
jne
sahf
lods
jl
mov
daa
imul
jl
fs
pop
into
mov
lcall
pop
jns
mov
aad
xchg
push
pop
fiadds
mov
icebp
bound
or
jg
lcall
and
and
nop
xchg
insb
rcrl
mov
pop
mov
decl
or
ljmp
and
inc
sbb
jo
add
daa
dec
push
popa
push
sbbl
incl
cmp
mov
fs
xchg
inc
adc
decl
pop
scas
std
xchg
stos
jle
mov
lods
arpl
sub
pusha
cltd
fidivrs
test
fptan
bound
lock
stos
sub
iret
or
data16
sub
and
cld
xchg
xchg
xchg
jecxz
call
pushf
cmc
notl
jne
es
filds
xor
adc
daa
push
sar
cld
mov
jecxz
xchg
or
add
jb
push
movsb
dec
aas
pop
in
sbb
js
popa
dec
mov
mov
push
inc
adc
test
andl
mov
imul
jg
xor
fsubrl
cld
push
cmp
pop
sbb
xor
push
cli
jg
pusha
cmpsb
inc
sub
dec
out
popf
dec
xor
pop
fadd
pushl
std
shll
sbb
lcall
shr
adc
pop
insl
cmpsb
dec
inc
lret
aaa
aam
rorb
call
stc
inc
and
inc
subb
xchg
loopne
xor
jmp
push
jg
fcoms
jl
fbld
push
dec
imul
pushf
or
push
mov
adc
fnstsw
sub
cmpsl
popa
mov
lcall
cmpsl
test
mov
ds
mov
arpl
test
repnz
ljmp
or
pusha
scas
jne
or
jmp
test
xlat
dec
movsl
fsts
call
push
outsl
in
jecxz
xchg
repnz
xlat
and
ljmp
lea
xchg
cmpsb
je
clc
xchg
mov
push
int
fsubr
stos
jb
mov
sbbb
push
cltd
sub
lock
jmp
mov
imul
mov
call
aam
xor
scas
adc
dec
sahf
mov
jmp
fisttpll
data16
loop
or
sbbl
mov
jecxz
lods
cld
add
call
xor
fcmovu
rcr
sbb
mov
ret
xchg
fsubrl
clc
inc
js
add
addl
stos
push
sahf
push
push
add
or
pop
cld
or
decl
in
or
test
in
sub
jecxz
aas
into
dec
mov
inc
es
mov
fs
add
incl
icebp
outsb
ja
insb
sarl
inc
stc
hlt
in
xor
fwait
xchg
popa
stos
push
mov
pushl
pop
pop
sbb
in
inc
push
mov
outsl
aaa
mov
popf
ss
jle
push
call
call
jmp
leave
sub
pop
fstpt
adc
cmpsl
clc
hlt
add
cld
decl
or
fistpll
mov
push
mov
mov
fmuls
xchg
ljmp
adc
xor
repz
xchg
push
cli
scas
xchg
mov
dec
inc
js
jno
mov
push
in
fldenv
cmpsb
ljmp
movsl
fmuls
push
lods
mov
shlb
int
jmp
stc
cmc
jmp
adc
outsb
pop
xor
xor
fdivrs
xor
add
daa
sub
add
cmpsb
ret
add
clc
scas
sbb
and
push
aaa
sub
sbb
dec
lods
lea
pop
cmpsb
ljmp
test
jg
out
arpl
aad
push
mov
jns
pop
movsl
aad
jae
std
ficoml
fistpl
adc
mov
cld
scas
subl
push
jl
add
cmpsl
pushl
insb
int
gs
and
jae
mov
cmc
add
or
decl
mov
xor
ljmp
push
inc
cmp
jbe
mov
or
fsubl
xlat
and
cmpsb
cmp
fwait
call
lock
repz
or
ljmp
push
sbb
call
out
xlat
push
adc
and
mov
fwait
lret
pusha
push
sbb
add
sub
jg
addr16
nop
mov
in
fsubs
jge
cmp
sbb
mov
or
pushl
lahf
fwait
dec
sbb
push
jle
clc
and
jle
pushl
xor
push
out
mov
cmp
push
mov
testl
push
jmp
insb
in
add
icebp
mov
pop
dec
cmpl
sbb
pop
or
sbb
fcoms
call
push
mov
push
daa
pop
xchg
and
lahf
push
mov
add
repz
mov
ds
xor
outsl
push
lcall
aam
dec
xor
inc
test
jae,pn
inc
jbe
cmc
out
sub
push
ja
fcoms
int3
dec
loopne
and
sbb
outsl
or
push
xor
fst
or
mov
fcmovne
mov
adc
aaa
pop
push
sub
inc
std
stos
fdivl
leave
dec
cwtl
lahf
xchg
pushl
std
jg
jae
mov
std
mov
imul
mov
aaa
movsl
pop
mov
inc
in
fs
incl
dec
ret
mov
push
pop
cmp
sbb
jbe
ljmp
xchg
jp
inc
dec
dec
jmp
sahf
xchg
or
sbb
jge
sar
cwtl
cmp
mov
mov
add
leave
stos
xchg
mov
sub
lret
jge
jbe
sbb
iret
rcll
dec
fdivl
das
cmp
jo
mov
mov
push
ret
decl
sbb
lods
xchg
xor
data16
sarl
inc
out
xor
add
adc
pop
cmp
pushf
cli
repz
adc
inc
cmpsl
and
push
icebp
cmpsb
aaa
adc
xlat
insb
fstpl
mov
adc
cli
pop
mov
icebp
pusha
sub
mov
decl
and
stos
insb
cli
adc
xchg
push
mov
add
xlat
dec
fistpll
jg
cmc
inc
test
sbbb
inc
loop
pop
fimuls
mov
jl
repnz
test
sub
inc
dec
insb
rol
es
rcrb
movsl
loop
or
in
filds
mov
je
addps
sbb
aad
push
out
pop
jne
je
pusha
dec
mov
adc
in
jno
fcmovnb
mov
add
mov
dec
xchg
mov
xchg
out
rcrl
jae
jle
filds
adc
and
jnp
lret
pusha
or
add
and
jmp
inc
arpl
call
stos
aam
subb
mov
incb
sub
mov
mov
jb
mov
call
mov
outsl
rclb
fisubl
push
or
rcll
add
cmp
ljmp
movsl
data16
push
lea
or
and
lods
mov
ret
push
in
mov
divl
insb
out
leave
xchg
sbb
popf
pop
and
push
rcrl
push
sbb
mov
jg
jg
fstpl
pushl
icebp
sbb
jnp
mov
or
pop
cs
mov
push
mov
mov
add
hlt
adc
push
jb
push
mov
lcall
in
pop
in
bound
popa
adc
xchg
gs
or
and
inc
lcall
jae
bound
dec
jmp
aas
jns
pop
jecxz
inc
outsb
and
sbb
add
decl
gs
xchg
fidivs
xchg
lret
xchg
in
imul
jge
push
fcomip
call
mov
pop
pop
iret
sub
subl
shr
jmp
mov
dec
lock
mov
bsf
xchg
xor
scas
ret
inc
dec
lds
adc
jmp
cmpsb
mov
jp
add
dec
lcall
jns
daa
in
out
push
xor
repnz
mov
xchg
movsb
mov
das
into
daa
or
test
ficomps
out
mov
std
sbb
icebp
xchg
inc
and
push
or
outsl
push
push
out
rcl
hlt
js
sub
shrl
call
and
je
rorl
stos
dec
pop
insb
push
mov
lock
adc
movsl
lock
pop
adc
popa
jg
scas
inc
stos
or
or
jae
div
xchg
mov
jmp
dec
dec
inc
jmp
loopne
flds
dec
pusha
and
inc
jg
mov
add
adc
out
fidivl
xchg
mov
pop
jno
pop
push
or
das
fs
mov
cmpsb
xor
in
fisubrl
stos
cwtl
or
pop
cwtl
add
inc
imul
incl
outsb
push
mov
in
jp
lods
sbb
mov
jno
dec
sub
call
lock
lcall
mov
cmpsl
mov
gs
jno
lock
out
in
push
cmp
dec
flds
mov
movsb
stc
pop
add
cltd
sbb
add
add
filds
mov
dec
xchg
lcall
test
das
mov
ficomps
push
push
mov
insb
cmp
prefetch
inc
jbe
add
in
cs
je
mov
adc
dec
push
jbe
mov
rorl
test
cmp
cmp
mov
add
dec
ss
mov
jg
pushl
cvttps2pi
sbb
jl
sbb
and
sahf
dec
nop
loopne
aam
mov
dec
lods
mov
shrb
mov
sub
ss
jbe
mov
loope
push
jno
icebp
pushl
mov
dec
pop
xor
mov
sahf
ret
adcl
jb
jge
fwait
push
fldenv
adc
push
pop
fisubrs
pop
pop
adc
mov
mov
ljmp
pushf
fucomi
mov
mov
mov
cld
ret
lods
push
mov
xchg
movsl
pop
pop
cmp
subb
fs
imul
lahf
jmp
dec
dec
dec
or
xchg
fnstsw
adc
pushf
ds
stc
test
cmp
jmp
cmp
cs
push
test
js
mov
sub
mov
pop
incl
jo
loope
scas
scas
neg
mov
sub
xor
inc
fmuls
out
mov
mov
movsl
call
mov
mov
movsb
lds
cli
sahf
jb
xchg
insl
fcomip
aaa
js
xchg
out
cwtl
mov
dec
lods
test
push
rcrb
cli
push
and
inc
pop
jno
pusha
cmp
rclb
inc
jb
dec
lds
roll
cs
push
dec
cltd
cmp
pushl
cmp
data16
push
fwait
gs
popa
push
mov
xor
xchg
mov
mov
mov
sbb
mov
sub
pushf
lret
int
in
pop
out
mov
jo
shlb
in
mov
xchg
orb
rorb
mov
mov
pop
and
cmp
cwtl
or
dec
push
jne
push
mov
fistps
aas
inc
jecxz
cmpsl
cmp
call
or
pushf
shll
cmp
icebp
lock
pop
push
flds
pop
loope
sbb
fcomip
mov
mov
rcrl
sub
cltd
subb
push
mov
add
xchg
sub
std
push
mov
shrl
ss
out
aam
test
lcall
inc
adc
ljmp
jns
push
shr
adcb
rorb
xor
adc
mov
inc
call
roll
ss
ljmp
jnp
xor
scas
mov
fs
jge
daa
push
pop
ret
ljmp
lea
dec
jns
loopew
sbb
jb
xchg
lcall
xor
push
dec
add
jg
push
movsl
xchg
mov
cmpsb
mov
mov
into
imul
popa
cltd
popa
std
sar
mov
dec
mov
test
sbb
mov
aad
arpl
xchg
cmc
decl
jo
sbbl
clc
push
or
data16
cld
lret
fimuls
push
cld
incl
cmpsb
ljmp
jo
sub
xor
add
push
stos
iret
xor
pop
mov
mov
and
xchg
cld
and
fidivl
and
mov
pushf
cmpsb
mov
imul
scas
sbb
mov
mov
cmp
mov
inc
dec
pop
cmpsl
test
insb
push
sub
insl
lahf
orb
fisubrs
imul
divb
bound
es
outsl
cli
ljmp
or
and
lret
lahf
mov
or
andb
pop
sbb
ljmp
mov
movsl
fidivrl
iret
mov
or
jns
fnsave
mov
cmp
mov
xor
stos
mov
out
lcall
ror
mov
stc
ficompl
frstpm(287
loopne
mov
loop
data16
hlt
bound
mov
repz
pop
xchg
cld
pushl
cld
imul
sbb
dec
add
or
sub
cmp
lcall
lock
xchg
int3
pop
dec
mov
push
int3
or
push
sbb
insb
inc
sbb
mov
popa
inc
push
sbb
add
ljmp
jl
imul
pop
rorb
and
adc
jp
adc
dec
cmc
insb
mov
dec
notb
mov
js
push
xor
iret
sbb
movsl
rorl
cwtl
xchg
ljmp
or
movd
inc
mov
pop
pop
mov
ljmp
call
sub
or
mov
sub
loop
movsb
sti
nop
or
sti
test
ljmp
cltd
in
outsb
cli
xchg
xchg
push
mov
xor
xor
data16
fisttps
xchg
cltd
mov
push
lods
stos
in
rcll
mov
push
or
fdivrl
push
mov
lods
pop
inc
mov
push
popa
dec
subb
mov
pushl
leave
add
insl
notb
aas
mov
cmp
sahf
jo
imull
shlb
incl
idivb
xchg
daa
sub
add
xlat
adc
in
int3
mov
lahf
jmp
loope
push
loope
cli
subb
int3
and
fldenv
cmp
subb
ret
pushl
loop
ret
dec
or
jbe
xchg
inc
xchg
sbb
test
jmp
cmp
mov
pop
cmc
cmp
and
or
jle
ja
jns
test
fdiv
das
jmp
add
ja
xchg
scas
fs
wbinvd
lods
and
divl
push
xor
sbb
pop
std
gs
add
decl
cmp
js
add
or
lcall
movsl
and
and
mov
insl
gs
pop
pop
dec
push
das
repz
xchg
cmc
jb
jmp
shl
decl
aas
adc
pop
jnp
js
mov
cmp
enter
jg
lret
mov
rolb
push
mov
mov
cmc
push
cwtl
jmp
std
jnp
cmp
in
in
gs
imul
xchg
testl
call
fnsave
and
push
adc
mov
sbb
jmp
xchg
sarl
xor
mov
dec
jmp
sbb
clc
mov
inc
xlat
xor
xchg
sbb
ljmp
les
mov
push
pop
in
das
dec
int3
sbb
add
sbb
push
leave
cmp
sbb
jecxz
push
mov
xor
fs
xor
insl
test
xchg
dec
mov
call
es
ret
addl
add
push
loop
movsl
adc
lock
fs
dec
mov
xor
xlat
sub
push
int3
out
sti
dec
fs
xlat
incl
push
xchg
ss
and
movsb
icebp
hlt
xchg
sbb
pop
sbb
loopne
mov
sub
inc
lds
dec
addl
jbe
pusha
mov
cld
adc
mov
scas
arpl
icebp
ljmp
fildl
das
cmc
cmp
sbb
add
call
bound
sub
and
push
cmp
cmpsl
sub
jno
cld
call
push
dec
aaa
sub
in
rclb
dec
jne
adc
jmp
sbb
push
enter
loopne
addr16
mov
jmp
popa
sub
call
insl
mov
lock
mov
bound
jecxz
add
ljmp
fs
pushl
shrb
jbe
pop
and
pop
in
in
outsb
daa
bnd
inc
xor
std
jp
inc
sarb
jg
add
les
sbb
je
push
pop
enter
mov
mov
icebp
fdivrl
inc
lods
adcb
jmp
inc
push
pushl
leave
pop
mov
cltd
repz
lock
ret
loope
pop
data16
pop
sub
add
mov
jle
cmpsl
lea
pop
jg
jns,pn
pop
cmp
add
xor
int3
cmpsb
mov
jmp
cmp
mov
mov
lcall
xchg
fldt
pop
loope
add
sti
sub
xchg
mov
nop
cmp
adc
fld
push
clc
lahf
jbe
sahf
sti
imul
and
dec
lcall
add
and
loope
jno
xchg
jb
sahf
push
mov
jge
push
mov
lcall
inc
lods
dec
mov
xchg
jae
shll
adc
xor
mov
cmp
inc
daa
lds
push
xchg
out
stc
fwait
cld
cmp
and
jnp
xlat
fcmovu
stos
mov
stos
imul
dec
jnp
lcall
jle
add
lahf
sbb
lea
jecxz
inc
in
sarb
cli
rorl
pop
pusha
mov
repz
iret
aad
sbb
fdivrs
xchg
fcomip
lcall
jns
add
jmp
std
and
jmp
push
inc
fcomip
call
jne
mov
ds
pop
add
or
jno
lea
add
call
int
jp
or
cli
inc
test
cmp
incl
clc
mov
push
ds
xchg
sub
loopne
ljmp
lea
sub
sub
lcall
adcl
nop
cmp
adc
cmpsl
fidivrl
xor
dec
jg
jl
mov
call
jne
jecxz
outsl
movsl
cmp
push
xchg
adc
or
test
push
lcall
in
cmpl
lahf
call
stos
cmpsb
test
mov
fwait
lock
aam
jp
loope
movsl
lcall
orl
mov
ss
xor
ja
aas
pop
cld
das
push
dec
das
lock
and
rorb
push
out
sub
ljmp
push
popa
xor
xor
sbb
or
inc
int3
leave
orl
or
jecxz
ljmp
mov
jno
shlb
cld
stos
cmp
loopne
jmp
add
xlat
in
and
and
mov
adc
fidivrs
jge
xor
insb
testb
jl
outsb
ds
jg
xchg
add
sub
xor
aaa
fs
xor
test
int3
mov
push
hlt
xor
call
testb
mov
pop
xchg
mov
in
out
enter
jmp
jl
mov
pop
jno
fabs
jbe
divl
cmp
rol
in
mov
inc
sbb
mov
repz
adc
int3
adc
dec
pop
inc
dec
add
lcall
jecxz
inc
cld
cmpsl
ljmp
addr16
push
ret
mov
jbe
push
loopne
and
decl
add
sub
fsubrl
mov
data16
imulb
dec
mov
addr16
adc
mov
mov
scas
shrl
pop
xchg
fxch
jg
or
rolb
decl
push
outsb
xchg
dec
push
js
and
call
out
mov
inc
jl
push
mov
ja
test
loop
and
enter
call
push
hlt
clc
enter
mov
dec
addr16
ficoms
daa
mov
jns
sbb
ljmp
stos
pushf
lret
inc
inc
xchg
pop
xor
lods
lahf
arpl
lcall
divb
sub
hlt
mov
inc
push
mov
fidivl
std
lcall
push
jo
in
jo
jbe
dec
lods
cmc
sahf
add
les
div
ss
pop
mov
call
std
dec
or
ds
int3
mov
mov
in
stos
lret
in
and
xlat
lret
mov
movsb
mov
cmp
lcall
sbb
xlat
jl
mov
xlat
outsb
cmpsb
add
ret
mov
lcall
and
jnp
or
std
ret
js
lret
or
int
leave
inc
xor
xchg
or
shll
and
out
clc
push
aad
pop
adc
scas
test
into
add
jg
inc
stos
xor
cmp
jle
cmpsl
loopne
fiadds
push
xchg
jns
loop
clc
pop
in
dec
jnp
lods
lds
incb
dec
inc
test
cmp
xchg
call
mov
xchg
test
sbb
push
enter
push
jbe
sbb
mov
sub
sbb
outsl
cli
lcall
aas
int3
pop
adc
test
cmpsb
mov
cmp
sarl
fmul
in
outsb
cmp
mov
push
xchg
popf
testl
mov
fbld
idiv
aam
cmp
ret
xchg
jmp
mov
aad
mov
fdivrs
das
sbb
decl
sub
movsl
movsb
and
es
sbb
les
dec
sbb
xchg
pushl
ljmp
xchg
or
test
inc
ljmp
push
ljmp
push
aam
fmuls
fbld
pop
and
ljmp
mov
cs
nop
inc
lock
fldcw
jmp
lock
mov
and
popf
sbb
xchg
add
subl
xchg
in
mov
icebp
cmp
aam
outsb
shlb
outsb
dec
out
imul
lods
mov
cmp
les
pop
xlat
sbb
das
inc
cmp
hlt
pop
pop
sbb
loopne
ljmp
movsl
xchg
addr16
sub
insl
imul
cld
pop
push
insb
inc
pusha
test
call
sarb
add
jge
dec
lea
hlt
imul
xchg
mov
cwtl
push
pop
cmp
mov
cmp
pop
ret
daa
mov
push
add
push
sbb
adc
ret
call
cli
shlb
adc
in
mov
pushf
data16
and
fidivrs
and
sub
push
call
sbb
pushf
rclb
shl
push
jg
shll
shlb
addr16
xchg
test
pushl
xchg
ljmp
mov
inc
shrb
adc
dec
sar
lcall
mov
cmc
xor
or
or
pushl
mov
repnz
mov
mov
cli
addr16
fadd
jmp
sub
nop
cmp
jmp
inc
in
call
add
mov
dec
stos
gs
shl
dec
mov
jae
cmp
cmc
mov
adc
sbb
repz
aaa
push
repz
test
enter
sbb
iret
call
fsub
addl
xchg
cmc
push
loope
xchg
and
scas
ret
ljmp
xor
sub
dec
notl
iret
push
sahf
xor
mov
loope
cmpsb
mov
mov
mov
lret
iret
aaa
pop
loop
push
add
xor
cmpb
cmc
adc
icebp
cltd
jo
mov
call
sub
xchg
mul
mov
mov
mov
push
mov
jmp
jmp
xlat
jne
sub
in
ljmp
mov
outsb
mov
xchg
xchg
iret
mov
scas
mov
cwtl
subl
popa
mov
call
mov
sub
dec
inc
cmp
xor
icebp
jle
mov
pop
add
dec
mov
pop
out
outsb
mov
pop
filds
cs
pop
xor
lret
pop
fcmovnb
mov
decl
add
adc
xorl
sar
js
sbb
mov
lret
xchg
jmp
mov
in
and
push
jnp
add
inc
lcall
cmc
mov
inc
cmp
test
xor
add
xlat
cmc
ss
idivb
jns
dec
adc
jnp
ljmp
aas
push
sbb
in
mov
lahf
push
xor
or
xchg
mov
mov
cmp
xchg
mov
mov
mov
incb
mov
call
test
iret
push
cmpsb
sbb
imul
mov
jg
push
imul
data16
insl
aaa
ljmp
pop
aas
in
in
lock
decl
addr16
or
inc
clc
imul
setae
mov
aas
pop
sub
sub
inc
sahf
loopne
loop
xchg
mov
cmp
dec
test
cmp
mov
add
pusha
aad
hlt
lret
int3
fwait
xor
call
mov
rorb
xchg
jns
push
test
je
push
repnz
movsb
jp
push
pop
insb
out
cli
sub
in
testb
jns
cmpsl
dec
mov
aad
inc
jnp,pn
or
lea
call
int3
cwtl
lods
movsl
daa
cmp
sub
cmpsl
sti
loop
push
jle
loop
xchg
xchg
shrb
pop
lcall
lock
decl
add
in
mov
add
daa
popf
and
push
repnz
aas
adc
pop
xchg
ljmp
cmp
divb
subb
dec
cmp
test
nop
jae
mov
xchg
movsl
sarl
imul
lds
dec
cmpsb
pop
ljmp
push
shrb
scas
in
pop
cmpsb
mov
fcomip
inc
ds
inc
fidivrs
cmp
push
pop
cmp
out
mov
ljmp
jmp
in
jns
pop
cmc
call
add
arpl
pop
in
sbb
xchg
push
out
fimull
push
jmp
dec
ret
lea
xchg
es
inc
out
cmpsb
cli
dec
insl
das
push
loopne
shr
aas
mov
inc
cld
adc
in
fcomip
stos
push
push
into
fs
mov
xor
out
mov
outsb
jno
add
lcall
stc
push
mov
sahf
or
cmp
ficoms
cmc
movsb
icebp
aam
shrb
repnz
js,pt
jmp
cmp
push
xchg
inc
jo
aaa
mov
jmp
in
xchg
xor
add
push
jmp
jp
pop
sub
js
mov
cmp
jmp
popf
iret
xchg
push
sti
test
cmp
popf
stc
aad
add
popf
fsubs
pushl
test
mov
movl
mov
addr16
ret
jg
mov
add
xchg
push
mov
popf
enter
shrb
scas
fcomps
add
incl
or
notb
xor
push
mov
dec
inc
mov
mov
cwtl
sbb
mov
das
clc
dec
jecxz
jl
into
add
stos
cli
push
pop
cmpsb
jl
push
mov
mov
xchg
scas
xlat
push
js
xor
cmp
loope
notb
aas
cmc
mov
sbb
psrad
pop
stos
ss
sub
int
test
mov
sti
decl
idiv
pop
xor
xor
frstor
sbb
jbe
pusha
inc
scas
sbb
push
aaa
decl
mov
out
sub
push
add
leave
subb
outsl
cmpsb
sub
push
das
cmc
fnstenv
cmp
andl
pop
fistps
es
pusha
jmp
call
cmc
pop
xchg
pushl
lds
or
cli
sub
or
add
xor
pop
jno
dec
push
insl
je
repnz
mov
xor
sbb
jno
or
sbb
sbb
call
add
leave
push
mov
roll
cld
lret
aad
mov
mov
fisubl
roll
stc
push
mov
dec
xchg
mov
or
xchg
call
loop
fcos
ljmp
mov
xchg
inc
stos
and
push
cmp
sbb
ljmp
and
pop
incl
xchg
push
inc
iret
and
shll
bswap
adc
adc
sbb
ljmp
or
addr16
test
xchg
subb
mov
in
push
push
out
fdivrp
jge
and
std
adc
inc
fbstp
arpl
add
in
mov
jo
dec
subl
es
inc
pop
mov
or
rcrb
pop
ret
inc
in
insb
enter
sarb
push
xchg
sub
dec
and
push
sahf
testl
bound
pop
aam
and
dec
inc
pushl
adc
mov
xchg
add
ljmp
xchg
popa
add
aam
into
data16
insl
ja
mov
inc
pop
lods
ffreep
decl
subl
shlb
mov
mov
pop
lock
mov
sar
fstpt
adc
in
das
cmp
mov
ljmp
mov
fidivrs
clc
sbb
nop
stos
stos
sbb
push
sub
pop
insb
mov
imul
sbb
push
aad
mov
aaa
push
out
mov
adc
cmp
hlt
sbb
ljmp
clc
dec
xchg
xchg
pop
ret
xor
test
dec
out
add
jne
adc
fstpl
dec
in
sub
and
mov
mov
dec
es
mov
add
sub
pushf
stos
jno
pop
std
or
mov
push
push
pop
aas
sbb
push
adc
dec
shll
and
incl
mov
test
xchg
jg
xor
inc
roll
xorb
xor
ss
push
pop
pop
xor
mov
jle
sub
decl
xchg
and
and
pusha
incb
aad
pop
call
imul
movsb
popf
cmp
dec
loop
push
sbb
add
cmp
ret
icebp
and
fistps
in
orb
subb
int3
cmpsb
and
stc
push
jle
arpl
push
fisubs
xor
mov
out
rorl
nop
xor
adc
cld
mov
jl
cmc
fldt
bound
rol
scas
into
mov
add
mov
cmpsb
cmp
dec
shlb
mov
lea
dec
and
xlat
jno
jg
dec
or
outsb
ret
js
pop
cmp
cmp
jg
popf
inc
aam
jns
ds
push
mov
or
push
mov
push
stos
stos
call
sub
movsb
mov
hlt
mov
jne
or
push
out
push
cmc
lock
fwait
movsl
xor
incl
in
popf
lods
xchg
push
dec
out
mov
or
cld
pushf
inc
push
test
incl
stc
lock
je
dec
fistps
push
inc
clc
mov
push
inc
dec
push
mov
add
lea
in
sbb
xor
ret
sar
repz
inc
xor
dec
lret
sbb
in
xchg
adc
jg
inc
adc
xor
sbb
lcall
jae
fwait
out
jns
add
aas
subb
in
popf
pushl
scas
cltd
add
add
push
lcall
jge
ffree
test
adc
incl
add
aad
sbb
and
sub
xor
stos
ds
jl
cmp
cmp
mov
aam
loop
mov
cmpsb
leave
sub
es
mov
jle
out
mov
jns
push
ds
ss
dec
mov
add
icebp
je
mov
and
push
repnz
xchg
xor
ret
ljmp
in
sbb
fcoml
ror
cs
cwtl
xchg
out
dec
xchg
fstpt
mov
xchg
call
inc
mov
nop
cs
or
test
inc
mov
cmp
fists
dec
in
mov
shlb
stos
incb
leave
popf
mov
xchg
sbb
mov
xor
or
add
call
dec
int3
cltd
mov
out
add
sub
and
sarl
fistl
mov
incl
push
cltd
add
sbb
filds
push
adc
inc
pop
jno
sbb
sar
jg
cmc
push
leave
fwait
or
mov
adc
jg
les
lahf
ret
call
xchg
test
or
xchg
mov
sub
xor
lahf
popf
inc
sbb
jl
mov
je
sub
or
call
fwait
or
and
sbb
repz
fdivrs
incl
push
mov
mov
aas
aam
and
pop
and
or
or
push
sti
cmp
or
test
jae
jns
jno
and
stos
mov
mov
jl,pt
or
mov
cmpsl
shrb
loope
xor
mov
outsl
inc
pop
clc
sub
fcomip
add
mov
gs
push
dec
mov
bound
jo
scas
ja
pop
pop
call
mov
mov
mov
sub
pop
insl
or
std
push
and
adc
mov
std
ss
or
pop
int3
xchg
and
mov
mov
jmp
decl
into
dec
cltd
push
loope
ss
in
pop
aad
lret
mov
jmp
mov
insb
mov
adc
dec
pop
rclb
stc
rcll
lret
mov
lcall
or
lods
lahf
and
std
mov
adc
test
push
outsb
sbb
call
ds
or
shrd
cmp
sti
in
scas
dec
sti
jmp
or
out
orb
and
mov
es
cmp
and
mov
push
jg
xchg
sarb
imul
mov
mov
dec
jle
pop
jmp
adc
or
mov
out
enter
jb
sti
pop
xorb
add
jmp
in
je
dec
xchg
and
xlat
int3
outsl
pop
push
adc
add
mov
lcall
xchg
pop
dec
dec
gs
jbe
xlat
sbb
sbb
inc
xor
aas
mov
jbe
and
pop
ficompl
lcall
ret
mov
popa
xor
in
mov
shlb
inc
sub
cmp
es
jmp
cmp
pop
push
sub
sub
push
sbb
ret
jmp
adc
movsb
sub
and
inc
mov
xor
mov
xor
inc
jge
push
mov
jmp
mov
neg
lock
popa
daa
fsubs
sbb
jg
push
or
cli
mov
and
popa
loop
push
pop
js
sub
pushl
mov
lds
in
sbb
andl
test
lahf
mov
int
mov
push
or
dec
xor
bound
popa
lds
sub
push
push
cmp
xor
lcall
mov
jl
shrb
inc
test
lcall
stc
sahf
clc
stc
ss
pop
test
dec
fnstcw
outsl
xchg
mov
das
cwtl
call
dec
cld
inc
and
enter
inc
movsl
imul
fidivrl
call
fisttps
ja
mov
inc
in
pop
loopne
mov
pop
and
xchg
sbb
mov
push
popa
or
pushl
mov
clc
dec
adc
add
inc
cltd
dec
fistpl
loop
cmp
dec
pushl
xchg
jge
push
std
push
aas
icebp
cmp
cli
mov
stos
mov
jg
call
loope
xor
push
inc
mov
ret
sbb
or
push
jns
push
popf
in
lcall
pop
nop
xchg
icebp
das
lret
es
mov
sub
inc
out
popa
or
jmp
decl
mov
or
sub
test
out
mov
repnz
jmp
fs
fstpt
pop
stc
push
cli
data16
ljmp
fmull
enter
mov
add
sbb
leave
in
mov
cmp
sbb
jmp
out
adc
jmp
daa
sbb
or
add
in
mov
flds
mov
xchg
das
xor
sub
fimull
cmp
out
clc
std
loopne
inc
sub
jne
cmpsb
popf
nop
jecxz
popa
inc
inc
divb
lods
clc
push
mov
mov
xchg
fwait
lret
lock
mov
js
dec
and
mov
call
scas
je
mov
fisubl
cli
dec
xchg
mov
xlat
push
dec
shll
in
addl
subb
ret
or
scas
incl
cli
lods
enter
outsb
xchg
jl
dec
ljmp
fiadds
ficompl
add
and
popf
xchg
movsl
lcall
dec
pop
stos
sti
sbb
adc
pop
sti
rol
adc
jg
cs
push
lahf
out
mov
or
int3
mov
inc
dec
ljmp
enter
pop
jecxz
js
aad
inc
lret
xor
lret
lret
in
pop
jo
lock
or
jge
out
pop
repnz
jl
ja
pop
rolb
daa
push
fcomp
aad
push
je
faddp
jecxz
imul
or
add
js
wbinvd
fbld
jg
xor
mov
lock
iret
jmp
mov
iret
sub
hlt
in
lcall
in
ss
fimuls
gs
mov
pop
mov
mov
aad
ljmp
cli
lock
mov
out
lock
lods
or
fcmovnb
imul
sub
leave
call
xchg
cs
cld
cmp
nop
insb
adc
sub
nop
jae
les
cwtl
loopew
aad
incb
rcr
pushf
pop
into
jo
adcb
lods
jmp
cmp
movsl
jl
fimuls
xchg
int
xchg
arpl
push
and
and
xor
push
and
shrl
lods
push
mov
out
jno
sub
dec
shll
divl
cmc
incl
nop
cltd
add
jae
popa
call
jb
mov
outsl
xchg
arpl
cmpsb
call
mov
adc
and
adc
and
call
in
enter
cmpsb
xor
sub
pop
out
cmp
aam
insb
jbe
push
xorl
add
dec
push
pop
mov
ljmp
mov
pushf
fwait
outsl
les
mov
push
sahf
inc
pop
cmp
lcall
xor
push
push
and
leave
aaa
ud2
in
fs
or
ss
xor
fstpt
ficoms
jo
imul
stos
dec
ljmp
iret
popa
pop
rcrl
popf
outsb
pushf
je
decl
outsb
fisubrl
call
sub
call
enter
pushl
push
xor
xor
push
cmpl
fdivs
sbb
pop
push
pop
aas
call
sub
nop
cmp
mov
and
test
or
cmpsb
fisttps
adc
cld
scas
fisttps
pop
cmpsb
dec
dec
popf
push
inc
mov
xchg
mov
jecxz
sbb
jmp
ds
cmp
sbb
ja
das
bound
lds
fcomip
call
sbb
cwtl
push
out
fldl
lods
repz
jle
jnp
push
dec
fcomip
stos
inc
xor
push
pop
push
ds
mov
adc
shrl
jmp
xchg
jb
aaa
stos
out
cmc
and
and
cld
or
inc
es
ja
sub
or
or
test
clc
mov
loopne
dec
paddw
pushl
popf
and
jp
inc
jns
cmc
movsb
arpl
ficompl
lods
jle
xor
sub
leave
cmp
mov
sbb
xor
xchg
jno
test
cmp
mov
lcall
bound
gs
aas
andb
lock
push
pop
add
cmp
movsb
push
mov
cmp
aaa
inc
cmpsl
aad
mov
test
ss
mov
cmpsl
je
shl
pop
xorb
adc
sub
jg
fmull
jmp
pop
ja
sub
push
xor
hlt
lock
pop
push
fildl
imul
incl
pop
nop
stos
mov
mov
cwtl
movsb
and
mov
loope
push
int
sbb
stos
fdivrl
xor
cmp
subb
pusha
addr16
push
add
stc
lock
decl
xchg
shl
pop
test
imulb
cmp
push
ljmp
call
lods
sbb
xchg
mov
sub
ds
in
xor
fsub
call
jmp
dec
and
dec
cmp
xor
fwait
sbb
ret
das
and
nop
cmc
sbb
clc
jmp
xchg
pop
lock
lock
jl
push
sub
rorb
imul
and
ja
out
clc
and
mov
in
jae
aas
or
mov
fsubrl
in
adc
incl
into
jp
adc
add
mov
xchg
fmull
je
mov
fcomip
jg
subl
mov
xchg
push
nop
stos
subl
mov
ljmp
pop
shll
fdivl
pusha
out
mov
fnstsw
mov
or
decl
xchg
mov
mov
loopne
cwtl
xchg
sti
mov
or
test
jbe
mov
call
les
into
add
rorl
jns
push
pop
mov
mov
sbb
add
icebp
mov
pop
lahf
in
cmpsl
mov
jl
cld
call
ret
pop
icebp
lret
lds
push
mov
cmpsl
outsb
dec
imul
call
dec
adc
dec
push
mov
mov
roll
jmp
lfs
dec
daa
mulb
incl
push
subb
or
inc
xor
nop
sub
pop
out
inc
push
aam
cli
ljmp
push
ss
mov
cmp
orl
inc
jg
stos
or
or
xor
pop
jmp
pop
sti
mov
idiv
adc
xchg
insl
shlb
sti
pushf
mov
cmp
cmp
cmp
fdiv
stc
cmovne
adc
scas
add
inc
cmp
fsts
nop
in
lcall
dec
pop
pop
cwtl
arpl
push
xlat
xor
cwtl
repz
push
jbe
cld
sub
scas
add
insl
ljmp
incl
push
fisttps
mov
push
mov
push
push
mov
jb
jmp
scas
mov
dec
sub
aas
mov
stos
lcall
add
dec
bnd
scas
fld1
jns
sarb
pop
popa
mov
pusha
sar
pushl
mov
push
scas
pushf
int3
cmp
xor
lods
pop
adc
cmp
int
add
jecxz
ljmp
xor
mov
out
outsb
fwait
sahf
addr16
leave
push
fwait
or
gs
movsl
aas
roll
aaa
jg
decb
inc
jno
adcb
dec
xor
fwait
dec
adc
cmp
fsub
pop
and
xchg
fdivrp
adc
pusha
cmp
loope
lcall
mov
mov
inc
jbe
sahf
sbb
les
lahf
iret
mov
add
inc
jge
add
add
int
in
xchg
pop
ljmp
pop
fbld
pushl
shlb
push
mov
pushf
dec
clc
lcall
enter
aas
jnp
icebp
mov
faddl
mov
ret
xchg
mov
stos
mov
nop
push
xor
decl
out
jbe
mov
idivb
sub
mov
mov
outsl
pop
adcb
sub
mov
push
pusha
xor
sbb
ljmp
sub
jecxz
aas
cld
jmp
mov
mov
out
js
lcall
inc
adc
lcall
sar
mov
sti
and
rcll
in
pushl
or
mov
cmp
ficomps
cmc
xchg
icebp
jne
jge
adc
sbb
ljmp
jae
stos
xchg
scas
js
subl
sbbb
out
mov
js
pop
sub
loop
jmp
out
jle
mov
fistpl
xor
aad
cs
mov
repz
xchg
sbb
inc
sar
jmp
push
test
ss
mov
inc
movb
aad
xor
pop
out
stc
push
cmp
xchg
mov
cld
jns
push
mov
inc
cld
enter
inc
imul
inc
push
sub
adc
std
incl
dec
fwait
scas
hlt
xchg
cmc
mov
add
cld
decl
push
mov
inc
push
pop
mov
pushf
and
in
inc
push
or
das
pop
jg
pushl
jmp
lods
cs
add
lahf
je
mov
repz
sub
push
adc
call
cld
test
xchg
frstor
outsb
lds
sbb
xor
test
aad
incl
out
or
decl
aam
jno
lret
and
dec
nop
cmp
mov
jmp
xchg
sbbl
inc
iret
cmp
sbb
insb
outsl
add
cwtl
lret
lcall
xor
sbb
ljmp
nop
push
push
sbb
ss
inc
imul
cmpsb
add
aas
jecxz
inc
sbb
sbb
cmp
divb
lea
cmpsb
push
in
cmpsl
xor
jmp
inc
mov
addb
dec
out
shll
insb
js
dec
cmpsl
dec
mov
sbb
mov
in
nop
out
cli
and
and
mov
aad
pushl
inc
adc
add
addl
adc
je
mov
les
mov
lcall
and
addl
call
jg
fs
pop
adc
loope
decl
shl
sbb
or
rorb
pop
and
push
arpl
int
icebp
dec
lcall
jmp
jno
jne
xor
mov
rcrb
jmp
shl
fadds
enter
adc
testl
mov
mov
test
jbe
lea
pop
jne
iret
adc
pusha
pop
xor
push
adc
inc
pop
jae
lods
cli
incl
rorl
jno
repz
pushl
fisttpll
adc
cli
pushl
mov
out
xchg
mov
bound
dec
pop
pop
ljmp
inc
xor
out
popf
js
mov
cli
js
pop
stos
in
mov
test
std
incl
cmpsb
fsubrs
or
mov
test
sarl
mov
jle
xchg
jne
out
jae,pn
dec
fidivl
push
jge
xchg
fndisi(8087
fcmovne
aad
adcb
fwait
ret
test
aam
and
add
imul
std
mov
cmpsb
adc
mov
sbbl
xor
cmpsl
add
lahf
sbb
cmp
inc
arpl
add
cmpsb
dec
and
mov
in
scas
cmp
in
pop
icebp
std
xchg
cmp
ljmp
ja
dec
push
sbb
les
ja
add
popa
inc
ljmp
das
mov
in
das
aam
cmp
int
fnstcw
or
pop
inc
pop
add
mov
pushl
jb
int
jne
jmp
jae
mov
icebp
jnp
mov
int3
inc
push
aas
pushf
sar
jmp
pop
mov
pop
or
lea
xchg
push
cmp
push
cltd
mov
mov
mov
jge
mov
mov
addl
daa
lock
jmp
fcomi
push
xchg
or
xchg
ja
mov
repz
cwtl
mov
dec
lods
fbstp
in
out
call
pop
in
es
jo
sbb
jg
sub
pop
js
imul
or
cmp
jbe
pusha
cmp
mov
fs
adc
aam
out
inc
fcomps
sbb
xorb
jae
pop
xor
xchg
notb
ljmp
sbb
int
jmp
dec
shrl
add
aam
scas
dec
adc
dec
pop
mov
call
xchg
cmp
sbb
inc
xlat
das
ds
mov
insl
dec
or
pop
mov
sbb
gs
lcall
jmp
popa
iret
add
mov
xor
jb
sub
sub
lea
jmp
dec
andl
cli
mov
bound
imul
cmp
jg
popa
sub
test
scas
add
xor
retw
decl
sbb
pop
lock
cmp
ret
mov
les
xchg
cmpsl
inc
mov
sub
dec
cwtl
cmp
or
xchg
jp
mov
xor
idivl
push
lret
sti
sahf
adc
or
mov
arpl
test
pop
mov
push
ljmp
and
inc
pop
inc
insl
lods
js
fiadds
pushf
scas
jmp
pop
je
jg
mov
jns
push
out
call
sbb
jmp
cld
jmp
enter
inc
cmp
dec
fsts
sub
cs
inc
lret
stos
inc
sar
pushl
stos
je
mov
mov
dec
mov
xchg
push
inc
nop
rorb
jne
or
outsl
cli
mov
sbb
and
icebp
fidivrl
dec
jo
adc
pop
and
cmp
ljmp
add
cmc
addr16
lret
jnp
out
das
and
and
subl
mov
jmp
push
insb
mov
cld
sub
lcall
xchg
pushl
mov
pusha
jb
ds
inc
dec
xchg
xchg
in
push
push
stc
test
adc
fwait
lcall
sbb
xchg
mov
adc
or
rcrb
out
in
popf
cli
incl
dec
mov
int
lods
call
decb
mov
loop
jge
test
jnp
or
ret
lcall
add
xor
sbb
and
das
lock
in
mov
repz
cmp
or
inc
lods
jns
je
mov
cltd
fcomip
lea
xchg
fdivrl
insl
ss
jmp
stos
inc
jecxz
dec
mov
mov
or
adc
sbb
xchg
mov
adc
incl
inc
mov
and
push
sub
das
sti
fimull
sahf
loop
push
push
imul
jb
pop
ljmp
sbb
mov
in
divb
call
ds
es
inc
scas
or
std
and
xchg
sub
or
popf
popa
mov
incl
clc
jge
out
jnp
and
lock
xor
pop
mov
icebp
fistl
into
adc
jl
loopne
inc
mov
mov
add
push
es
inc
aad
mov
xchg
sub
enter
call
push
mov
movsb
jns
push
les
rorb
test
mov
incl
idiv
and
pushf
inc
mov
jne
into
add
push
into
daa
dec
leave
into
enter
call
cmpsl
push
adc
push
fnclex
aaa
inc
dec
rclb
in
lods
lahf
pop
xchg
shll
test
jecxz
js
xchg
mov
xchg
lea
icebp
mov
push
push
inc
cltd
movb
movsb
stc
les
nop
outsl
icebp
ljmp
push
sbb
pusha
push
das
push
or
sub
sbb
pop
sarl
adc
test
aad
or
add
sub
decl
mov
jnp
push
push
mov
rcrb
push
test
dec
mov
xor
xchg
or
incl
test
xchg
ja
movsb
orb
mov
hlt
sub
sub
test
call
push
imul
repnz
cmp
jb
stos
sbb
and
jg
jg
pop
and
push
mov
mov
sahf
aad
xchg
lods
je
xchg
gs
rolb
jmp
cmp
lahf
pop
push
mov
call
sub
sbb
decl
and
aaa
push
aam
mov
jo
jns
push
sbb
call
sbb
xchg
imul
aad
mov
xchg
imul
enter
icebp
mov
inc
mov
ja
iret
loopne
in
xchg
orl
fistps
xchg
mov
sub
cmp
je
sub
icebp
or
insb
rcr
jmp
xor
out
imul
scas
movsl
rclb
daa
fldl
aad
inc
jnp
aam
decl
ss
mov
fcmovu
jne
add
rcll
outsl
es
pop
shl
call
in
aas
inc
ret
cwtl
in
xchg
mov
sub
adc
dec
imul
imul
push
mov
xlat
inc
mov
lret
mov
sub
fnstsw
xchg
roll
repnz
or
sar
jmp
movsl
fs
sub
stos
gs
cmp
xchg
pop
jb
jbe
incb
mov
ret
sub
ret
aas
mov
sub
adc
pop
cmpsb
sub
shl
or
shr
xchg
and
add
in
test
xchg
cli
xchg
cmp
jmp
stos
mov
push
cli
cmc
stc
xorl
mov
dec
mov
mul
test
inc
add
int
and
xchg
jg
arpl
cmp
adc
stc
inc
xor
xchg
sahf
xchg
adcb
arpl
in
sarl
cli
and
sti
clc
clc
es
loope
ljmp
jnp
xor
cmp
or
adcb
mov
pop
sbb
icebp
mov
shl
fsubl
jle
cwtl
mov
rcll
mov
movsb
lcall
scas
test
daa
fdivr
pusha
nop
cld
ljmp
xlat
jg
lcall
push
stos
sbb
xor
outsb
pop
mov
in
icebp
jle
leave
push
mov
hlt
or
inc
test
or
enter
out
iret
or
out
mov
pusha
outsb
inc
or
xchg
movsl
cld
jmp
adc
mov
arpl
or
popa
mov
push
adc
sub
lea
nop
sub
incl
fisubl
test
push
bound
cmp
scas
pop
sub
inc
sub
daa
and
daa
dec
or
ret
xchg
daa
or
loop
pop
inc
sub
mov
sub
xchg
xor
incl
cmc
mov
das
sbbl
xchg
jns
and
sub
jmp
or
or
inc
out
adc
inc
mov
inc
in
sahf
jae
insb
add
or
call
cwtl
fldt
mov
fisttps
jle
sarl
xor
and
test
lcall
xor
fwait
and
aaa
lock
mov
out
outsb
rol
adc
ljmp
adc
es
imul
jae
mov
sarb
add
or
sbb
jns
or
das
mov
lcall
fwait
push
fcoml
in
mov
cmp
cli
push
sub
mov
and
ja
sub
dec
dec
lods
in
adc
jo
jp
pop
sub
pop
lock
add
and
mov
push
hlt
loop
lcall
jg
fwait
mov
mov
xchg
xor
sub
sti
pushf
sub
inc
xchg
xchg
lcall
test
and
fisubrs
pop
ljmp
dec
jge
mov
movsl
mov
out
ret
jmp
mov
xchg
iret
cmpsl
jg
lcall
xor
jecxz
xor
leave
scas
adc
mov
mov
xor
call
xor
dec
push
data16
imul
fisubs
int
inc
out
mov
outsl
xchg
in
mov
jle
mov
sub
or
std
push
lock
fiadds
lock
iret
xorl
xchg
pop
mov
pop
out
push
mov
pop
inc
push
decl
stos
jmp
fadd
xchg
ret
mov
sahf
sub
les
testb
sar
cmp
adc
je
pushf
shll
lods
cmp
fisubrs
pushl
inc
clc
repnz
ds
xchg
stos
or
ljmp
pop
push
pop
sbb
mov
cmp
push
jp
jg
stos
mov
call
ja
ret
ficomps
mov
insl
push
in
mov
xchg
movsl
adc
cmp
inc
mov
xchg
push
addr16
in
push
inc
sub
clc
inc
sub
xor
roll
or
rolb
ja
pop
subl
cmp
jb
into
addr16
icebp
inc
xchg
ljmp
incb
push
cwtl
cli
push
fistpll
sub
je
popa
add
cmpsl
mov
jmp
pop
mov
ret
cmpsb
fcoms
sub
dec
fcom
and
mov
sbb
test
sub
loopne
std
jmp
aaa
mov
test
or
cld
aaa
lcall
daa
sbb
inc
inc
xchg
jle
adc
out
lret
xchg
jg
fdivrs
fldlg2
mov
sbb
cld
dec
cmp
mov
cmc
mov
jmp
sbb
and
sub
aad
xor
and
call
and
dec
dec
fimull
or
daa
xor
cmpsl
sub
pop
pop
orb
push
imul
pop
loope
mov
decl
pushf
gs
jl
cmc
call
repnz
test
cmpsb
and
js
fistpll
imul
lea
lds
sub
pushf
push
mov
pop
out
xchg
ss
mov
xor
add
mov
add
push
and
xor
lcall
add
pop
gs
add
daa
in
jnp
or
ljmp
movaps
popa
repz
cmp
lret
andb
lret
mov
insl
pop
cmpsl
lret
lret
jg
sub
insb
cmp
outsb
sbbb
mov
add
push
or
mov
sahf
jecxz
inc
push
sbb
cltd
sar
jg
mov
push
notb
push
push
ss
lcall
mov
dec
test
test
jg
fdivr
decl
xchg
inc
and
pop
or
addr16
cmpsl
sub
mov
call
fstpl
stos
mov
cmpsb
sub
push
pop
jnp
dec
outsb
loop
jmp
push
scas
pop
xor
mov
push
out
inc
imul
fstps
pop
cltd
mov
inc
push
lock
sahf
mov
aad
repnz
push
mov
xor
insb
idivl
jmp
jo
ljmp
mov
pop
cmpsb
inc
daa
lods
and
je
lock
mov
je
sbb
ljmp
sub
mov
sbb
sbb
mov
cwtl
lcall
push
mov
add
xchg
cmp
pop
jbe
push
in
mov
lcall
pushf
xchg
cld
fs
dec
sti
xchg
pushf
xchg
subb
sbb
adc
fbstp
pop
lock
movsl
cmc
cs
cld
jg
adc
out
ljmp
and
sub
decl
adc
adc
push
jle
push
call
and
mov
roll
jge
adc
aas
mov
adc
outsl
push
stc
inc
push
icebp
idivl
cmp
lea
ds
mov
je
call
add
pushl
jecxz
cmp
push
and
pop
pop
out
subb
adc
add
add
or
dec
jnp
or
add
mov
add
insl
mov
and
ja
or
js
push
jg
add
pop
jg
insb
dec
push
js
add
add
dec
orb
in
add
sub
iret
nop
cmp
push
adc
enter
scas
jle
pop
sub
add
push
nopl
or
jo
scas
dec
pop
mov
push
xor
popf
jno
mov
insb
push
add
xchg
movsl
push
daa
add
xchg
dec
and
cmpsl
jnp
jnp
push
and
cs
push
movsb
push
movsb
inc
into
iret
cmc
ljmp
push
and
stos
push
and
push
test
and
xchg
imul
push
inc
pop
pop
add
stc
out
push
mov
pop
sbb
add
mov
inc
mov
jae
push
ds
les
push
adc
in
mov
mov
insb
or
lret
imul
imul
in
fnstsw
imul
push
add
xchg
mov
fdivs
mov
fadd
shrl
stos
mov
or
jb
ss
fildl
mov
push
shll
add
outsl
push
shll
fidivrl
fisttpl
outsb
mov
push
ret
outsl
pop
mov
je
fidivrs
out
jge
fisttps
add
sub
inc
ds
in
movsb
push
add
shll
sbbl
push
mov
ja
arpl
push
push
push
add
jne
outsb
mov
push
aam
push
ret
add
mov
lods
pop
add
push
pop
dec
add
in
or
jbe
push
data16
inc
repz
mov
add
push
push
in
imul
outsb
outsl
stos
aas
add
ja
jne
popf
add
push
xlat
jne
add
fcmovnu
push
fdivl
push
aad
push
xlat
ja
js
push
addr16
in
add
fidivrl
push
jp
jp
inc
push
lds
fidivrl
sarl
ja
fldl
les
je
jmp
ljmp
push
xchg
sub
xchg
in
xchg
sub
jmp
insl
push
xchg
xor
xchg
push
setbe
xor
daa
adcl
idivb
push
cwtl
push
cltd
cmp
cmp
pushf
cmp
addr16
push
out
popf
xchg
popf
aas
push
sahf
inc
push
lahf
inc
jle
outsb
push
dec
push
mov
push
xlat
add
fcomip
test
movl
out
push
sahf
out
sahf
hlt
clc
stc
cli
sti
cld
adc
out
std
incb
jecxz
arpl
inc
fs
lods
jae
add
imul
int
add
pop
add
pop
add
push
sbb
pop
xor
bound
mov
or
out
out
add
mov
or
outsl
aas
fldt
or
or
test
test
lods
stos
stos
cmpsl
or
push
sbb
or
pop
pop
adc
int3
pop
pop
adc
lods
add
pop
add
add
pop
mov
insb
pop
mov
add
scas
insl
adc
pop
lods
pop
pop
adc
and
adc
sbb
repnz
sbb
scas
scas
scas
scas
sbb
sbb
mov
and
mov
movsb
imul
mov
add
mov
shlb
and
mov
lock
and
mov
mov
pop
and
movsb
mov
and
or
sub
pop
sub
mov
or
in
pop
sub
xchg
mov
sub
das
or
es
dec
repz
aas
cmp
pop
insl
push
mov
cmp
pop
aaa
cmpsb
mov
mov
pop
xor
pop
or
xor
xor
or
add
pop
mov
xor
mov
pop
das
push
cs
xor
add
xor
das
pop
mov
xor
adc
pop
push
cs
dec
inc
das
inc
inc
xor
adc
mov
xor
push
push
popa
jbe
cmp
jl
jge
jno
jmp
call
pushw
dec
dec
cmpb
jo
mov
inc
and
incl
movsb
movsl
mov
cwtl
sahf
mov
pushf
fwait
lcall
decl
xchg
nop
xchg
xchg
sub
dec
ja
jns
dec
mov
sub
js
imul
cmp
je
pop
shrb
jg
xor
push
mov
addb
jbe
fmuls
inc
or
pop
scas
inc
pop
mov
aas
outsl
dec
jns
fists
jb
mulps
add
push
mov
movsb
dec
and
cmpsb
push
mov
xor
xor
ja
push
push
icebp
outsl
mov
cs
xor
mov
add
jle
push
pop
jbe
dec
sbb
and
in
shr
fmull
jo
push
inc
mov
incb
mov
inc
add
jae
xchg
jp
inc
lahf
stc
mov
mov
aaa
add
xchg
jno
lret
push
bound
iret
mov
pop
mov
mov
inc
push
mov
dec
sahf
mov
insb
add
outsb
add
xchg
xchg
pop
push
jnp
dec
lret
cmpsb
dec
push
dec
push
mov
sti
dec
movsb
jae
add
jb
shll
outsl
pusha
push
lcall
xlat
pushf
push
rorb
add
aaa
out
adc
dec
rcrb
pop
into
dec
mov
mov
scas
testb
ja
sahf
jbe
fistpl
imul
in
daa
outsb
ds
push
add
and
es
js
fucomp
pop
mov
data16
shrl
insb
ja
out
pop
outsb
push
outsl
ror
push
ds
rcl
sbb
mov
sub
jg
fiadds
call
mov
mov
add
add
test
mov
add
test
and
push
loopne
iret
sahf
mov
divb
add
jb
out
in
push
jle
sbb
or
jecxz
or
push
aad
sarb
push
fildl
adc
push
subl
sbbl
sbb
sbbl
test
jmp
faddl
in
mov
push
pop
mov
int
pop
nop
and
out
xchg
in
xchg
pusha
add
mov
sub
imulb
outsb
out
xchg
das
push
xchg
repnz
xor
cwtl
push
cmc
sahf
xor
push
lcall
cmpsb
pop
cmp
xorb
cmp
aam
sub
sub
cmpsl
push
cmpsb
scas
mov
sahf
pop
shlb
ret
shrb
jle
mov
fmul
mov
lgs
int
mov
mov
rcll
mov
sarl
push
aad
jle
data16
add
add
adc
push
dec
inc
sbb
cmp
je
dec
daa
xor
add
add
mov
movzwl
inc
fimuls
or
or
or
es
push
in
pop
nop
mov
add
adc
adc
ds
pop
enter
mov
mov
mov
xor
ds
xchg
push
mov
and
sbb
add
mov
add
and
cld
push
imul
mov
aas
and
sub
xor
insb
xor
aas
aas
cmp
cmp
adc
cmp
sbb
sub
ds
jbe
cmp
ficompl
inc
cmp
or
ds
mov
jge
lods
popf
dec
aas
adc
ds
xor
cmp
decb
test
mov
jbe
mov
ds
add
sub
ds
mov
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
in
inc
clc
add
test
mov
sahf
ds
or
xor
sub
sub
sub
sub
xchg
mov
ss
pop
and
sar
fildl
ds
push
push
push
push
push
push
imul
push
pop
push
push
push
imul
fs
das
pop
imul
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
insl
popf
jg
aas
mov
jge
jns
jns
jle
addl
jo
lods
mov
outsl
outsb
pushf
sti
popf
shrb
rolb
outsl
adcb
add
push
cs
out
or
incl
push
push
add
cmc
repz
dec
xor
jae
aas
add
xchg
pop
cmp
test
add
mov
add
mov
push
mov
fnstsw
incl
stc
cmc
repnz
xchg
addr16
divb
gs
jecxz
pushf
add
mov
push
in
lcall
sahf
notl
fs
ljmp
imul
push
xchg
add
mov
fcomi
mov
mov
test
js
in
out
xlat
mov
mov
nop
sub
sub
xchg
push
push
nop
sub
xchg
xor
xchg
xor
outsb
lcall
leave
jbe
insb
mov
mov
shlb
iret
push
lret
sub
iret
insb
loopne
push
std
into
decb
stos
or
divl
fwait
int
out
xchg
add
test
jg
jle
jge
or
or
jg
call
add
pop
add
push
dec
or
mov
cmp
adc
dec
or
add
fcomps
mov
add
or
pop
pop
cmovg
aas
jl
inc
push
dec
sbb
inc
adc
ljmp
inc
inc
inc
adc
sbb
dec
add
dec
adc
inc
jg
ds
cmp
cmp
cmp
daa
and
sbb
sbb
and
add
dec
lea
xor
das
xor
sub
sub
push
adc
lcall
nop
insl
mov
mov
mov
mov
mov
adc
cmp
push
outsb
mov
push
bound
inc
and
sub
add
or
enter
mov
jns
outsl
mov
cmpsl
lods
dec
xor
pop
mov
jmp
sub
sbb
inc
shll
pop
xor
or
mov
es
fidivs
xchg
sarb
daa
iret
les
in
lock
shll
hlt
xorps
add
push
jg
lock
sbb
or
push
outsl
pop
sub
shrb
push
or
rcrl
inc
mov
mov
lods
push
out
cli
mov
cmp
ret
cli
fists
xor
add
pop
jg
enter
addr16
or
test
push
xchg
orb
sti
jg
shll
mov
scas
insl
rcll
inc
dec
sti
jg
pusha
adc
add
ret
jg
adc
and
call
push
les
jg
cld
jg
lods
add
cld
bound
and
inc
jo
cmpsb
std
ja
jg
or
push
or
test
add
or
les
jg
jle
push
orl
mov
mov
or
adc
sub
dec
xor
loopne
xor
pop
inc
data16
sbb
fsts
add
incl
add
loope
sbb
push
jbe
mov
rcrb
xor
mov
jle
and
sbb
or
xchg
xor
ffree
push
jmp
lods
sub
and
jle
lret
imul
mov
sbb
inc
scas
jle
mov
adc
dec
mov
popa
mov
adc
jg
adc
push
scas
data16
lea
jg
sub
add
inc
outsb
jg
xor
pop
inc
sub
push
add
and
ljmp
xor
push
cs
jg
jle
mov
fdivrp
mov
ljmp
stos
pop
insl
sbb
pop
pop
add
daa
aas
aaa
xchg
or
mov
pop
add
jle
add
test
loopne
pop
inc
push
jmp
je
or
pop
rcrb
jle
cmp
adc
bound
add
jae
ja
mov
das
pop
mov
jnp
daa
push
arpl
pop
push
mov
xor
call
or
pushl
push
or
and
scas
dec
sbb
or
or
call
dec
push
cmp
push
jne
push
push
jne
pop
push
mov
and
jbe
out
push
jnp
push
insl
adc
jp
push
js
dec
jbe
out
popf
add
add
mov
mov
jbe
es
inc
popf
nop
popf
push
outsb
incl
or
jle
enter
dec
incl
ss
mov
lcall
dec
ja
xchg
inc
add
or
nop
neg
xchg
jp
int
push
push
mov
test
fwait
adc
sahf
inc
out
and
push
xchg
insl
mov
popf
inc
push
pushf
cmp
sub
roll
cltd
mov
neg
mov
xchg
xor
xchg
xor
sub
sub
nop
daa
and
xchg
cs
mov
mov
cmp
xor
mov
push
mov
xchg
jg
pop
fnsave
xor
inc
inc
jae
pop
sahf
movb
es
sbbb
xor
inc
pop
and
ja
dec
inc
stos
fnsave
push
xchg
movb
pinsrw
mov
mov
push
ja
add
adc
in
adcb
cs
dec
sbb
mov
xchg
adc
bound
mov
dec
sahf
or
push
aas
push
adc
pop
push
pop
cmpl
inc
jno
out
mov
jns
imul
mov
sbb
test
push
lock
cmp
mov
icebp
jp
adcl
add
mov
test
fdivrp
decl
out
pop
xchg
cmpsl
pop
add
jmp
sub
and
outsl
daa
push
push
sbb
xor
cmp
jle
and
xorb
add
out
or
and
add
sub
incb
add
pop
xchg
iret
add
outsl
pop
lcall
or
mov
sub
mov
pop
das
pop
push
adc
callw
or
lcall
punpcklwd
daa
std
out
jb
orl
out
lcall
or
mov
sti
ud0
cmp
mov
pop
arpl
ljmp
mov
decl
or
lcall
mov
ljmp
rorb
mov
dec
or
push
lcallw
sub
adc
decb
mov
xchg
jns
clts
add
mov
or
adc
pushw
call
incl
mov
ud0
rcl
push
push
incb
xor
push
decl
add
add
push
jmp
push
outsb
push
dec
or
pushl
imul
add
pop
sti
push
std
or
call
add
incl
adcb
pop
cmpsl
cld
mov
stc
lmsw
jns
and
call
jg
popa
mov
imul
push
je
cmp
and
decl
push
orl
ljmp
repnz
fcmovbe
pop
pop
aaa
xor
sarb
push
xchg
jne
shll
mov
roll
and
add
sahf
ret
pushl
hlt
pop
xchg
push
adc
jmp
ljmp
sahf
int
inc
lahf
inc
inc
push
inc
inc
pop
lea
mov
in
mov
dec
push
stos
push
popf
inc
cmpsb
dec
cmpsb
xchg
int3
jnp
inc
cs
and
negb
add
and
insl
dec
rcrb
push
shrb
rorl
xchg
int
outsb
shrb
es
and
fwait
push
push
jb
imulb
dec
and
insl
pop
daa
dec
xchg
jmp
call
push
push
test
cs
addr16
cmp
dec
push
sti
ficompl
add
repnz
mov
popfw
cmp
aas
jmp
xchg
decb
cwtl
xor
xchg
inc
push
xchg
push
xchg
fisubs
push
aaa
push
lcall
fisubl
push
xchg
es
xchg
xchg
notb
sub
call
and
dec
mov
scas
decl
push
xchg
inc
jmp
or
jb
fimuls
hlt
outsl
add
std
faddl
xchg
fstpt
push
jnp
jp
or
dec
rep
push
jl
or
jl
push
jge
xor
push
movq
es
jbe
adc
fcmovu
mov
push
dec
push
dec
repnz
repnz
jae
pop
int
fnstcw
push
mov
jnp
jge
hlt
in
add
int3
adc
jb
outsb
nop
negl
add
dec
mov
or
pop
add
xchg
fs
lahf
add
adc
adc
jns
outsb
pop
or
imul
cmp
jnp
lahf
dec
es
cmpl
pop
in
and
orb
jg
and
xchg
and
push
sub
iret
out
mov
cli
call
clc
push
idiv
call
jb
sub
jg
mov
icebp
ret
ss
pop
cld
and
sub
jg
mov
icebp
ja
ret
xorb
push
jns
repnz
mov
inc
cld
jp
es
xchg
xor
sbb
dec
and
andb
sbb
in
sarb
stos
push
pop
ja
jmp
and
jge
mulb
push
lcall
push
nop
cs
fsub
pop
push
dec
adc
int3
decl
push
jle
mov
fidivrl
arpl
clc
jbe
int3
cmp
push
pop
movsb
fnstsw
movsb
push
pop
or
dec
ljmp
hlt
sti
and
lcall
jns
or
mov
sub
mov
jmp
xchg
jmp
jle
fisttpl
mov
loop
adc
xchg
out
sbb
loope
ljmp
out
mov
or
cmp
aaa
add
ja
inc
or
nop
xlat
push
cmovno
and
and
insb
adc
adc
add
push
pop
adc
push
ret
add
sub
call
add
push
push
mov
jae
inc
pop
dec
test
and
sbb
fwait
call
stos
adc
sbb
xchg
push
mov
inc
test
pop
idivb
add
push
sbb
push
aaa
imul
insl
jnp
or
push
push
movl
adc
enter
nop
push
add
add
pop
add
add
lods
cwtl
mov
and
push
sbbl
add
dec
jecxz
icebp
inc
push
loop
or
gs
jo
add
cwtl
sub
add
aam
dec
cmp
and
xchg
inc
mov
scas
or
jae
and
loopne
scas
enter
scas
add
dec
test
add
movsb
xchg
inc
in
or
imul
jo
pushf
xor
fstpl
in
add
popa
imul
mov
pop
or
les
xchg
inc
scas
add
sbb
adc
push
pusha
add
pop
xor
aad
add
in
shlb
jmp
ret
adc
xor
cmp
add
insl
popa
adc
faddl
in
jnp
push
jne
popa
shlb
xor
into
cmpsb
jno
jb
sbb
or
adc
shll
or
insb
sbb
mov
add
adc
filds
inc
imul
mov
gs
adc
insb
pop
adc
lea
bound
repz
pop
push
inc
negl
lret
stos
lcall
lahf
push
and
inc
mov
ss
outsl
or
push
push
outsb
dec
push
outsl
xchg
and
jnp
sti
xor
pop
sub
xor
fwait
and
inc
mov
xchg
bound
pop
dec
insb
out
adc
testb
cmpl
loop
sbb
add
mov
jne
sbb
shll
in
in
test
and
fwait
add
pop
and
inc
mov
ss
or
lea
cmp
sbb
arpl
popf
push
xchg
adc
sbb
nop
arpl
push
mov
mov
xor
inc
sti
cmpsb
or
insl
pop
push
jl
ret
xchg
pop
pop
xorb
cmp
or
pop
mov
les
push
add
aam
das
negb
lret
es
dec
rcrl
cmp
dec
in
and
sbb
mov
push
lahf
lods
pop
or
xor
cmp
dec
sub
and
aam
jbe
dec
outsl
dec
nop
xchg
mov
inc
and
in
sbb
xchg
leave
xorb
push
cmp
xor
and
rcll
add
lcall
cmp
arpl
pop
aad
gs
and
lret
xchg
jge
push
mov
mov
arpl
jbe
mov
mov
and
add
pavgw
add
or
ret
pop
push
mov
sub
sub
rolb
popa
ret
popf
jo
sbbb
insb
pop
or
pusha
mov
pop
in
pop
int
lods
jbe
add
mov
int
imul
popf
xor
add
pop
inc
and
fadds
inc
jg
imul
std
xor
je
jne
inc
mov
je
xor
add
inc
dec
dec
fxch
push
and
and
adc
arpl
sub
arpl
dec
pop
sbb
rcr
or
adc
pop
leavew
pop
sub
lods
in
cmp
aad
push
inc
sbb
adc
mov
pop
outsl
notl
shrl
scas
and
pop
mov
sub
pop
imul
mov
sub
adc
insl
sti
shrb
sbb
dec
mov
cmp
and
fnstcw
inc
sbb
fstps
sbb
push
ds
inc
es
insb
inc
cmpsl
fsts
cs
rcpps
mov
inc
jno
push
jo
mov
fs
push
testb
push
jecxz
mov
ja
fcmovu
or
inc
cmp
push
outsl
jo
in
mov
jb
adc
fwait
pop
nop
push
dec
inc
dec
orl
in
jecxz
xchg
or
sub
sub
popf
push
or
popf
js
hlt
cwtl
imul
push
insl
xor
sbb
movsb
adc
push
les
sub
jb
mov
inc
not
xor
pop
xor
mov
adc
or
ds
inc
lret
xchg
sbb
pusha
mov
and
lock
ret
inc
je
insl
dec
outsb
dec
or
stc
add
das
mov
sbb
out
push
js
loop
pop
add
add
sbb
mov
add
sbb
movsb
dec
adc
iret
xor
inc
or
push
lcall
adc
mov
xchg
pop
jbe
add
es
and
inc
andl
inc
fisttps
mov
sbb
and
dec
imul
fistl
shlb
xor
add
test
jns
sbb
or
es
ret
or
sub
cli
cmp
sub
insb
je
out
push
dec
cmp
mov
or
mov
or
rorl
loopne
mov
add
xchg
cltd
mov
les
inc
sbb
aad
in
add
shlb
mov
sub
or
sbb
into
dec
mov
enter
bound
xchg
sarb
sub
pop
xchg
sbb
and
adc
xor
dec
pusha
es
push
ret
test
notl
dec
shr
mov
sub
divb
dec
ja
ret
in
outsb
cmc
dec
pop
lret
inc
or
jns
or
mov
cmp
or
cwtl
mov
adc
andb
inc
or
pop
mov
fwait
cltd
mov
add
inc
xor
xchg
loop
adc
mov
pushf
aaa
outsl
cmp
jbe
je
insb
mov
cmpsl
inc
loopne
mov
mov
push
mov
mov
imul
in
into
icebp
pusha
pop
mov
dec
insl
sbb
push
fstl
sub
mov
orb
fsts
inc
xchg
inc
push
arpl
imul
test
pop
xor
push
pop
pop
xor
mov
mov
nopl
inc
jnp
sub
push
mov
sub
and
fdivrs
cwtl
sbb
scas
sbb
inc
pop
pop
inc
cmp
push
mov
cltd
push
out
pop
sub
inc
xchg
push
daa
outsb
pop
inc
sarb
inc
test
mov
and
imul
pop
mov
push
add
test
insl
dec
jo
jnp
fcmovbe
adc
rcll
mov
mov
inc
mov
fiadds
incl
sub
mov
inc
inc
and
arpl
xchg
add
dec
or
cmp
xchg
xchg
cmp
outsl
in
outsb
inc
je
dec
inc
dec
mov
imul
pop
add
aaa
inc
sbb
pop
sub
sub
push
push
and
sbb
dec
sub
decl
push
push
push
or
inc
and
cmp
or
sbb
add
mov
or
add
and
das
add
push
and
aas
sti
insl
in
adc
add
push
add
push
or
or
add
adc
mov
decb
or
push
sub
mov
outsl
ja
push
or
push
or
adc
or
mov
popf
sub
adc
push
inc
pop
adc
sbb
push
sub
push
mov
mov
push
inc
sbb
sbb
cs
or
sti
in
and
lea
bndldx
add
xor
mov
adc
sbb
push
add
add
adc
cmp
sbb
sbb
add
notb
lods
es
and
cs
or
push
push
fwait
rorl
pop
add
adc
ss
sbb
ds
jg
subps
inc
pop
sbb
push
sub
or
and
jg
in
sbb
or
sbb
add
sub
sbb
lods
add
sbb
fabs
adc
sbb
adc
fisttpl
ss
and
and
xor
sbbb
push
and
daa
in
in
push
or
xor
or
or
or
add
dec
mov
xor
push
push
mov
and
adc
sub
aas
and
push
pusha
mov
jae
or
fimull
xchg
push
adc
jbe
xchg
cmovne
xor
out
mov
adc
daa
add
es
xor
xor
daa
or
cmp
mov
daa
aas
sub
and
sub
or
mov
xor
aas
xor
dec
sbb
das
push
bswap
add
jg
sahf
jns
cmpl
adc
adc
or
push
push
lods
adc
adc
sar
push
sub
push
push
or
pop
aaa
adc
adc
jmp
test
cli
push
pop
sbb
sbb
or
decl
xor
sbb
and
es
mov
xchg
daa
cmp
xor
and
or
fildll
or
adc
or
xor
mov
pop
dec
adc
or
pop
adc
pop
and
or
or
outsb
sbb
adc
pop
jb
sub
mov
mov
sub
sub
jg
lock
shll
lock
mov
pushl
push
inc
sbb
xor
das
xorb
lock
lock
or
fisttps
and
push
sbb
push
push
push
adc
add
or
push
inc
adc
or
cmp
sub
push
or
bound
push
sbb
inc
aaa
jo
or
or
push
sbb
xor
clc
jmp
and
aas
push
sbb
xchg
jb
xor
cmp
adc
es
xor
decl
cmp
cmp
adc
sub
lock
add
cmp
incl
adc
lock
sbb
das
sarb
push
jge
mov
mov
lock
xor
ja
jmp
push
or
adc
mov
unpckhps
sbb
out
clc
repnz
mov
push
xor
mov
outsl
dec
adc
lock
add
sub
fisttpl
outsl
cli
xchg
cmp
push
sub
lock
add
push
nop
ret
pushl
jge
push
pop
adc
adc
inc
dec
outsl
and
xor
jo
push
jae
testb
addr16
push
push
push
and
inc
sbb
outsl
dec
add
dec
sub
cmp
inc
mov
aaa
sub
inc
lcall
xor
sub
and
mov
or
dec
inc
outsb
fadd
shll
xor
bound
adc
jnp
mov
inc
or
outsl
jg
clc
add
insl
fmull
and
aaa
cld
adc
and
push
or
cmp
adc
adc
insb
out
mov
push
and
push
fcoms
psubsb
sub
decb
or
and
jno
xor
adc
adc
and
push
push
sbb
lock
or
sub
or
or
jb
pop
inc
addr16
aas
dec
pop
pop
imul
decl
push
lods
xor
sub
and
lock
add
bound
mov
adc
inc
inc
push
scas
adc
andb
jno
xorb
sub
outsl
stos
aaa
insb
pop
pusha
dec
arpl
sbb
sbb
mov
sbb
inc
pop
sbb
adc
xor
xor
daa
dec
sbb
mov
push
push
sbb
sbb
adc
aaa
and
or
aaa
push
sbb
aaa
jl
jl
lock
adc
hlt
cwtl
or
adc
cmp
dec
jnp
sbb
fdivr
jne
and
adc
arpl
sub
sbb
and
sbb
ret
jg
adc
adc
lock
add
jb
jns
push
cmp
in
outsl
inc
push
sub
sbb
loopne
xor
adc
xor
push
pop
pop
out
ljmp
and
inc
lock
add
sub
add
inc
jg
adc
scas
jp
imul
fdivs
rolb
inc
pop
jno
and
and
cld
cmp
mov
pop
jl
sbb
sub
pop
xor
sub
xor
fldenv
xchg
sbb
nop
jle
adc
mov
inc
xor
and
xor
negl
and
add
push
or
scas
inc
xchg
jmp
xor
push
xor
push
pop
and
out
fsubl
xor
pop
adc
mov
or
movsb
push
xor
adc
dec
inc
aas
pop
mov
and
and
sbb
and
xor
push
dec
pop
ud2
adc
lret
sarl
inc
icebp
ljmp
pop
cs
push
cmp
adc
sub
adc
call
and
jne
dec
sbb
daa
inc
adc
push
or
sub
sub
add
dec
pop
mov
cmp
sbb
add
sbb
movsb
cli
fisttps
inc
and
movsl
or
repz
sti
jmp
incl
ds
sbb
dec
add
loopne
jae
and
push
mov
adc
fisubs
sub
sti
mov
pop
and
sub
sub
and
add
cli
mov
out
sbb
adc
daa
pop
adc
cld
lret
adc
adc
aaa
dec
or
inc
or
inc
push
and
dec
scas
dec
dec
push
shlb
adc
fwait
mov
loop
dec
add
jb
push
push
call
inc
inc
jg
popf
and
ficompl
imul
or
dec
pop
cmp
test
or
negl
outsl
ret
lock
xor
push
dec
ss
add
adc
clc
jg
dec
adc
sbb
add
lock
add
sbb
addr16
pushf
sbb
mov
and
mov
xchg
cmp
add
sbb
sub
jbe
pop
test
sbb
and
lock
or
or
jg
sbb
sub
xor
push
or
pop
inc
adc
cmp
inc
inc
push
sbb
xchg
scas
clc
add
pusha
je
xor
lock
mov
or
pushl
inc
or
xor
insb
inc
and
aas
scas
mov
decl
push
or
add
push
push
pop
push
sbb
shrb
adc
pop
aaa
sub
add
hlt
outsl
add
aas
enter
inc
cs
pop
sbb
sbb
sub
adc
cli
xchg
adc
lock
std
add
lock
add
add
pop
or
add
lock
popa
mov
sbbb
sbb
das
jle
xor
cmp
adc
pop
or
and
mov
cmp
adc
sbb
cmp
unpcklps
cmp
push
sub
or
and
inc
or
sbb
sub
ret
sbb
adc
daa
adc
mov
jae
or
sbb
adc
mov
aas
adc
push
push
sub
adc
pop
sbb
pop
xor
loopne
stos
cmp
pop
mov
mov
dec
test
inc
sbb
sbb
jle
lock
adc
mov
push
xchg
pop
sbb
leave
add
out
add
inc
adc
sbb
add
and
jbe
incl
push
pop
push
jb
pop
sub
aaa
outsl
and
dec
mov
cld
outsl
push
cs
fs
lahf
dec
in
movswl
dec
fsts
xor
or
lock
mov
inc
mov
push
lret
cmpl
inc
in
decl
or
sub
push
pop
adc
adc
push
and
sbb
pop
movsb
clc
xchg
jne
sub
push
sub
sub
sbb
inc
lret
push
sbb
push
push
inc
or
push
cmp
and
mov
and
sub
cmpsb
pop
invd
or
daa
push
cs
sub
dec
aas
insb
mov
or
or
or
cli
call
adc
daa
or
insl
or
add
and
pop
push
xchg
movsl
adc
pop
sub
xchg
fwait
jle
push
sbb
or
js
out
cli
xor
pop
xor
adc
push
or
adc
in
ja
les
sbb
lock
or
xchg
mov
adc
subb
lock
add
and
wbinvd
push
and
lock
push
dec
xor
fildl
subl
scas
xor
sbb
pmuludq
lcall
or
and
shlb
sbb
jb
inc
inc
cmp
ja
pop
mov
cmp
mov
xor
popa
pop
sbb
dec
or
repnz
mov
psadbw
inc
adc
and
sbb
inc
cmp
pusha
jge
inc
aam
pop
mov
dec
pop
adc
les
ret
and
adc
mov
xchg
mov
ss
push
xor
ret
addb
in
sub
add
xor
jp
sbb
mov
push
xor
test
or
xor
inc
mov
addl
or
push
das
adc
cmp
ds
aas
push
cmpsb
push
inc
pusha
push
pop
lock
or
loopne
inc
push
pop
dec
adc
lock
cmp
cmp
fdivp
int
call
pop
pop
mov
jb
sbb
add
or
sbb
ret
dec
jo
mov
mov
es
sbb
xor
or
push
sub
or
adc
mov
rcrb
inc
data16
pop
add
push
sbb
adc
add
jl
jecxz
or
adc
push
push
sub
lcall
lock
sub
xchg
sbb
push
out
filds
and
mov
pop
and
add
push
cld
addr16
xor
push
push
inc
inc
sub
das
sbb
dec
call
pinsrw
and
xor
bswap
or
mov
xor
lea
pop
push
sub
push
aaa
dec
adc
hlt
fbstp
jne
pop
ds
push
mov
xchg
loopne
pop
ds
cmp
and
sbb
movsb
das
rcr
or
dec
pop
sub
xor
adc
mov
sub
std
sbb
or
sbb
ret
std
inc
mov
dec
and
pop
adc
pop
adc
loopne
fwait
sbb
or
push
adc
sub
sbb
in
and
push
pop
and
add
inc
dec
adc
sbb
imul
insb
push
adc
sbb
add
and
out
shrl
or
inc
and
add
push
inc
or
sbb
fs
xor
cmp
adc
mov
and
cmp
cmp
jp
or
or
inc
loop
scas
ret
bound
dec
inc
push
pusha
adc
sub
jle
dec
rorb
or
add
ss
dec
dec
insb
idivb
mov
inc
push
sbb
arpl
or
pusha
imulb
inc
cmp
sbb
clc
idiv
lcall
pop
lock
add
dec
cmp
adc
or
bndldx
adc
push
sub
adc
andl
xchg
sbb
dec
loope
fs
sbb
and
shlb
pop
ds
rorb
xchg
or
incl
add
or
xchg
lock
xchg
std
stos
outsl
xchg
dec
or
xor
adc
mov
xor
cmp
jmp
adc
sbb
inc
or
adc
push
push
adc
pop
pusha
movsb
lock
add
xchg
aaa
popa
push
sub
ljmp
sbb
inc
adc
adc
das
sub
pop
popa
lahf
pop
sub
mov
and
sub
or
inc
es
inc
adc
sub
ljmp
ljmp
in
or
inc
inc
cmp
jo
cmp
subb
push
call
incl
mov
daa
mov
lds
sbb
adc
add
shlb
xchg
decl
inc
push
aaa
stos
add
bound
cmp
daa
inc
add
pop
adc
sbb
jg
sub
pusha
and
out
imul
mov
or
sub
and
inc
pop
adc
das
cli
push
sbb
pop
cmp
adc
add
push
cmp
loopne
sti
mov
push
sbb
add
lcall
sbb
lock
jecxz
nop
dec
and
or
outsl
dec
dec
sub
push
sub
decl
add
daa
cmp
add
outsb
xor
pop
mov
fbstp
push
pop
decb
push
sub
xor
dec
mov
push
loopne
mov
xor
call
sbb
pop
sbb
pop
sarb
ja
dec
outsl
pop
add
or
or
push
push
pop
adc
pop
lock
xor
lahf
push
sbb
push
aad
or
gs
or
lahf
add
jo
push
hlt
add
pop
std
incl
or
push
jo
sbb
cwtd
pop
hlt
mov
xor
pushf
sbb
rcrl
lock
jl
add
sbb
call
sub
push
pop
loope
push
out
sbb
scas
enter
sub
jo
lock
add
or
or
push
loope
mov
or
or
or
mov
push
aaa
and
sbb
dec
pop
push
add
adc
xchg
sbb
adc
daa
bound
lock
lock
add
bound
pop
aad
lea
scas
mov
cltd
cwtl
add
xchg
inc
addb
jge
push
dec
pop
adc
or
xor
pop
mov
inc
gs
lock
add
inc
lock
jne
xchg
ljmp
jne
adc
adc
push
test
or
sbb
mov
or
push
xor
adc
daa
pop
out
mov
or
pop
sbb
push
mov
repz
sbb
mov
jmp
imul
add
cmp
sbb
sarb
cmp
cmp
out
rorb
xor
or
or
and
xor
outsl
pop
je
sbb
or
push
or
add
dec
push
or
dec
dec
push
ret
js,pn
push
lcall
xor
or
jle
or
pop
mov
sub
sbb
jp
or
or
sahf
in
sti
or
add
pop
adc
push
xlat
lcall
add
mov
sbb
adc
sbb
lcall
and
sub
in
or
adc
lcall
or
jg
dec
jmp
sbb
pop
add
dec
sbb
jecxz
add
xchg
fisubl
lods
rcrl
pop
fildl
sbb
int
imul
lock
cld
call
sbb
cs
sbb
aas
cmp
in
fmuls
adc
sbb
or
push
jmp
cmpsb
inc
push
shrb
sbb
jo
sub
ds
in
sbb
mov
add
xchg
pusha
and
or
cltd
shl
les
les
sub
mov
out
add
sbb
sbb
adc
or
and
xor
or
sahf
add
aaa
lods
clc
and
push
adc
das
dec
or
bound
mov
or
dec
dec
xor
add
add
mov
cmp
lcall
xchg
pop
mov
adc
pop
xchg
fcmovbe
xor
pop
lock
pop
popf
ss
and
and
mov
adc
movsb
outsb
das
call
or
pop
push
push
and
sbb
faddl
and
lcall
or
sub
pop
lock
popa
push
mov
out
mov
or
cmpsl
stc
jle
stos
cwtl
or
cmp
sbb
lock
adc
es
pop
sbb
sbb
addl
or
loopne
mov
jo
insb
dec
lock
dec
or
push
xchg
les
cli
pop
mov
add
mov
cwtl
push
mov
sbb
lock
push
inc
lock
add
or
adc
or
push
pop
sarl
sbb
xor
sbb
push
sub
push
jmp
ss
cmp
or
fidivrs
lock
out
clc
add
mov
jl
sub
sbb
imul
inc
movsl
add
jle
mov
adc
push
sysenter
add
pop
cmp
pop
mov
scas
addb
inc
push
adc
and
xor
cmp
push
mov
cmp
into
lock
xor
sub
jg
das
add
lock
ret
xor
outsl
mov
push
imul
dec
arpl
and
and
cmp
sub
jnp
xor
inc
or
xor
pop
sbb
es
sub
dec
mov
fld
dec
push
les
ficoml
ret
and
sub
and
inc
mov
and
mov
mov
sub
and
mov
and
and
fucomi
insl
dec
xor
imul
add
inc
dec
sub
or
es
dec
xor
xor
lock
in
ds
xor
push
fs
cmp
mov
sub
je
and
dec
lret
pop
lret
and
jle
xchg
and
incl
fildl
xor
shl
xor
inc
pop
fdivrl
sub
push
ds
dec
xor
dec
and
pop
and
call
jl
xchg
cmp
movsl
xor
test
mov
inc
pop
ret
sub
dec
jne
and
add
sub
cmpl
dec
stos
ds
add
pushf
fidivl
adc
mov
sub
stos
fs
cmp
and
fwait
add
or
push
and
sub
xor
cmp
xorl
lock
fnstcw
inc
add
mov
push
add
push
cltd
mov
add
aaa
lock
xchg
fistpl
sub
add
aam
lock
push
add
adc
adc
loop
fldt
adc
cwtl
and
dec
push
dec
rclb
mov
mov
add
into
push
in
add
or
adc
fisttpl
jl
push
int
sub
lock
add
push
lock
push
outsl
sbb
mov
push
or
and
adc
xor
add
scas
fldcw
lock
add
adc
pop
sub
test
pop
test
xchg
mov
lock
or
jo
stos
mov
in
or
mov
add
mov
divb
rorb
bound
cmp
nop
shlb
add
add
dec
push
inc
mov
cmp
xchg
fldenv
add
dec
inc
inc
mov
add
pusha
inc
and
fdivrp
aam
sbb
or
adc
sbb
mov
dec
xor
adc
or
mov
das
push
or
mov
test
or
prefetchnta
mov
or
inc
add
mov
arpl
mov
jne
dec
or
movsb
fcoms
sbb
mov
mov
rep
add
jno
cmp
adc
and
aad
adc
out
xchg
and
dec
bound
movsl
push
lea
push
les
pop
notb
and
stc
leave
xchg
or
push
notl
pop
add
shlb
clc
inc
xor
lock
add
add
outsb
imul
add
or
or
and
jbe
mov
insb
pusha
adc
data16
xor
cmp
sbb
or
adc
or
add
jge
fisttpl
xor
push
fwait
jmp
fnsave
sub
adc
or
daa
inc
dec
sti
imul
ret
jmp
sbb
or
divl
test
sub
adc
stc
mov
out
mov
sbb
test
rcrl
sbb
pop
gs
or
mov
popa
jg
sub
in
fdivs
inc
and
mov
pop
add
cmp
xchg
daa
fisttpll
mov
sti
xchg
ret
fisubl
jnp
cmp
inc
pop
push
jne
lock
push
sbb
mov
insl
inc
in
add
jne
mov
push
adc
and
sbb
cmpsl
and
pop
inc
outsl
mov
adc
dec
outsl
jae
pop
clc
mov
scas
or
insl
arpl
adc
xchg
push
arpl
imul
lods
in
pop
push
pop
pop
add
push
adc
insl
mov
roll
shll
or
rcrl
mov
or
das
push
cmp
and
push
bound
jge
xor
out
jp
xchg
cmp
add
sahf
movl
mov
leave
xchg
not
push
popa
int
dec
cs
leave
mov
push
iret
mov
inc
subl
adc
fldenv
cmc
xchg
sub
fdivs
pop
xor
fwait
imul
mov
cmc
or
ret
or
roll
aaa
les
adc
ljmp
inc
loopne
cmp
inc
pop
adc
shrl
push
or
push
xor
inc
push
xor
xor
adc
loopne
and
push
fisttps
iret
shrl
add
stos
fld
add
and
push
in
and
sbb
faddl
inc
xor
int
xor
pusha
into
outsl
jo
mov
addl
adc
mov
out
or
push
jle
sub
xor
and
imul
imul
add
push
add
imul
and
sub
sub
cmp
xor
sbb
mov
fstpt
or
or
jbe
into
pushf
push
xor
pop
add
xor
pop
ret
ds
sub
xor
imul
fidivl
ss
sbb
add
inc
and
add
push
sbb
sbb
fs
inc
sub
pop
push
cs
mov
inc
sbb
add
test
jns,pn
push
cmp
lret
and
sbb
sti
add
mov
lock
mov
or
inc
mov
or
mov
clc
fidivl
push
enter
mov
add
pop
xor
push
sub
or
movsb
add
dec
push
add
jl
fildl
outsl
subb
notl
inc
bound
inc
sbb
fisttpll
or
or
pusha
jbe
xlat
insl
mov
lcall
sbb
pop
popa
sub
loope
insl
gs
or
add
xchg
push
in
fisubs
jle
inc
or
sub
add
incl
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
xchg
inc
add
add
