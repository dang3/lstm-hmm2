divb
in
mov
mov
mov
inc
add
add
int
jg
shlb
or
and
push
je
and
out
je
push
call
push
add
sub
push
ret
in
divl
jne
mov
or
call
xchg
push
push
adc
stc
out
aas
mov
test
je
cmp
movl
cmp
jae
dec
movzwl
lea
jne
sbb
xor
jmp
and
neg
fidivrs
and
pop
pop
mov
or
call
push
push
sarl
stc
shll
jp
jge
add
pop
push
push
push
push
xor
mov
push
mov
scas
stos
mov
std
pop
popf
movl
cmp
pushf
or
jnp
or
push
mov
push
xor
cwtl
pop
jnp
mov
xchg
push
sbb
add
divb
inc
sub
ret
mov
jmp
pushl
sar
insb
jbe
jecxz
lea
or
lock
dec
test
jg
sbb
xor
adc
push
add
outsb
mov
push
scas
adc
mov
add
inc
jne
sub
sar
mov
je
daa
ret
push
repz
outsl
or
fadd
adc
pushl
mov
or
xor
sub
add
push
add
aaa
mov
or
insl
adcb
data16
pop
cld
add
movsb
or
andl
mov
dec
lock
adc
push
adcb
push
jge
pusha
outsl
adc
mov
lock
dec
imul
out
rorb
or
jnp
mov
or
jbe
lcall
mov
in
push
jo
sbb
mov
outsb
xchg
incb
call
and
push
add
pop
pop
pop
outsb
loopne
int3
sbb
ss
inc
mov
lea
mov
adc
lahf
cld
add
out
push
dec
or
jbe
ret
ja
jns
jb
mov
nop
xchg
or
movhps
inc
cmp
mov
lcall
sub
repnz
push
lcall
jbe
jne
push
test
or
sbb
push
ret
stos
cwtl
fisttpl
sahf
add
push
aaa
push
mov
aas
fadd
jae
mov
xlat
jge
pop
pop
push
jno
pop
xlat
cmpsl
jnp
add
pop
or
push
push
sbb
sub
sub
add
cld
scas
enter
add
push
mov
lods
ljmp
inc
pop
fcomi
pop
mov
adc
inc
lock
push
mov
cmp
or
pusha
cmpb
sbb
push
clc
jge
insl
cmp
cmpsb
pushl
mov
mov
xor
mov
pop
ret
push
inc
loopne
mov
push
pop
jae
pop
ja
cwtl
cmp
pop
inc
sub
inc
pop
or
js
enter
push
xor
sub
addr16
push
sbb
lret
add
rorb
fs
pop
adc
sbb
shrl
sarb
mov
mov
inc
clc
jg
mov
adc
adc
ret
shll
xorl
sub
fcompl
jmp
xchg
sbb
add
aas
mov
sub
push
mov
sar
push
pushl
cmp
ja
adc
sbb
add
push
mov
sti
add
adc
scas
and
xchg
jo
push
add
or
jns
leave
ret
decb
or
lret
stc
sub
adc
cmc
cmp
jle
loop
mov
out
jle
push
incl
fsubrp
sub
xor
jge
dec
cmp
outsb
fildl
jmp
cltd
xchg
add
push
test
mov
ret
enter
jg
push
push
outsb
push
hlt
cmp
jl
cmp
jne
mov
incb
add
xor
jbe
mov
call
mov
shll
mov
mov
or
inc
add
adc
lea
mov
nopl
adc
push
xor
fcmovne
pop
hlt
into
mov
aam
push
cmpsl
testl
fdivrs
cmpsl
mov
pop
adc
cld
fsubrs
jp
stos
mov
roll
outsl
or
or
test
jle
cmp
mov
orl
movsl
pop
aas
pushf
inc
add
icebp
sbb
movl
sbb
sub
jns
cs
test
repz
push
sarl
lea
cmp
push
pop
orb
sub
loopne
push
es
and
adcb
jbe
inc
and
xor
xchg
pop
mov
cmp
int
cmp
push
sar
push
shll
push
adc
cmp
jle
mov
icebp
aas
pop
mov
ljmp
push
inc
stos
xchg
or
pop
or
and
cmp
pop
inc
call
lret
adc
addr16
add
jb,pt
pop
add
mov
pop
xchg
pop
leave
ret
jle
fcoms
jnp
ljmp
cld
aaa
cmp
repnz
imul
add
rcrb
ja
jmp
add
sbb
insb
or
cmpsb
imul
sub
mov
cld
pop
test
and
and
adc
jo
inc
sub
aad
adcb
aaa
jecxz
mov
incb
pop
pop
or
cmp
ds
pushl
push
lea
cmp
jne
push
push
lock
push
pusha
mov
stc
js
push
mov
mov
or
mov
pop
pop
pop
popa
lret
inc
mov
jecxz
pop
mov
mov
jne
cmp
divl
add
jo
mov
out
in
mov
in
ja
sbb
add
cli
std
outsb
pop
repnz
xchg
push
mov
scas
sub
es
mov
imul
js
fdivl
pushw
stc
mov
pushf
addl
in
mov
dec
call
stos
or
mulb
add
and
cmp
shl
add
push
add
mov
pop
or
loopne
sub
lea
jge
xchg
lcall
add
push
sbb
imul
pop
add
imul
pushf
mov
cld
push
xor
ds
push
inc
dec
ja
mov
jae
lea
push
add
push
mov
cmp
push
pop
xor
cmp
cmp
ds
ja
sub
mov
push
loopne
scas
ljmp
dec
push
add
sbb
push
and
ret
je
ficomps
cmp
sub
or
jne
dec
fcmovbe
mov
dec
jnp
mov
push
cmp
adc
mov
pop
push
pop
mov
xor
jb
cmp
mulb
cmp
lock
sub
mov
fucomp
push
cmp
dec
or
mov
lock
mov
sbb
out
in
or
push
adc
jge
sub
xor
mov
add
or
cmp
outsb
int3
pop
repnz
push
sbbl
movsbl
sub
add
pusha
pop
or
or
sub
in
mov
push
adc
or
mov
mov
xchg
dec
or
lock
cltd
lock
push
ja
mov
mov
lahf
insb
sbb
pop
mov
push
xchg
sbb
xchg
loopne
sbb
xlat
pushf
out
decb
adc
xor
or
adc
stos
sub
xor
shr
sub
jns
faddl
add
lods
push
mov
and
in
mov
mov
insb
call
xchg
inc
mov
int
adc
and
in
push
push
shrl
mov
dec
ret
fucomp
or
mov
mov
add
sbb
push
js
mov
rcr
jne
sbb
mov
mov
nop
jmp
pop
push
pop
in
jl
mov
rcrb
pop
orb
jne
push
and
sub
mov
mov
fcmovbe
lea
mov
adc
pop
and
ret
mov
js
and
adc
popa
add
lea
es
je
sahf
fldl
pushl
movlps
fcomps
sar
inc
adc
aas
lods
push
andb
add
cmp
rorb
dec
les
sahf
xorb
mov
or
xor
insl
jp
adc
or
inc
or
scas
das
push
and
repnz
cmp
and
adc
inc
xchg
scas
push
cld
cmc
cmp
mov
incl
sbb
lahf
cmp
sbb
repz
xchg
sbb
adc
pop
mov
aaa
pop
cmp
jb
hlt
jl
ret
pop
insb
daa
adcb
ja
fcmovnu
mov
fildll
add
sub
aas
pop
mov
jl
cld
xor
jo
or
dec
nop
popa
fnstsw
cmp
movsl
xor
lock
add
or
shll
and
gs
pusha
jo
dec
mov
mov
mov
scas
mov
dec
pop
push
sub
lret
out
mov
jns
and
aas
push
and
inc
lret
orb
pushf
and
inc
mov
enter
adc
adc
lds
scas
adc
bound
push
lahf
sub
mov
sub
jnp
notl
mov
xor
dec
and
mov
ficompl
mov
push
push
push
jp
push
sub
add
mov
mov
or
movsl
pop
repnz
sbb
mov
mov
paddusb
movsl
lea
insb
or
xchg
sub
push
shrb
insb
pop
loope
xor
inc
ss
jo
lds
andb
fadd
pop
lea
popf
add
lods
dec
add
push
shr
outsb
rcr
mov
mov
out
push
stos
mov
jmp
in
and
fsubrl
shrl
mov
loopne
adc
cmc
scas
shll
push
mov
in
ja
das
inc
and
jl
jne
pop
loopne
nop
sub
orb
in
sub
dec
jbe
daa
push
xor
inc
lret
lock
dec
aam
jge
push
cld
das
and
insl
lock
mov
out
add
in
adc
lock
cmp
jns
or
aam
stos
shll
clc
mov
sbb
or
jle
test
push
and
call
mov
stos
push
ljmp
mov
jmp
xor
push
pop
js
inc
roll
in
sub
mov
enter
jns
mov
mov
test
xchg
adc
cmp
inc
mov
dec
inc
ds
stos
enter
test
mov
stos
pop
fiadds
push
sbb
sub
fistpl
fistpl
repnz
outsl
mov
ret
je
push
jnp
rcrl
stos
and
nop
lret
enter
or
xchg
nop
nop
les
or
xor
pushf
or
pusha
dec
mov
mov
imul
dec
add
std
and
adc
push
sub
xchg
add
push
adc
dec
cs
add
cmp
jge
jl
mov
lea
xor
pshufw
mov
mov
push
xor
mov
popf
sub
mov
sbb
mov
sub
fcoml
dec
out
aaa
sbb
out
sti
push
imul
adc
sub
mov
mov
enter
pop
test
cltd
fs
sahf
adc
test
mov
cwtl
adc
enter
push
pop
es
xchg
int3
int3
pop
les
and
sbb
cmp
adc
push
mov
sbb
xchg
xchg
sbb
jb
sbb
sub
movsb
jecxz
sbb
in
lcall
mov
sbb
cmp
jmp
mov
jmp
ret
pop
push
sbb
loopne
shlb
pop
mov
mov
adc
mov
int3
sub
sbb
or
add
in
jge
jmp
loope
sub
push
mov
enter
pop
mov
std
rcrb
cmp
pop
push
xor
insl
cmpl
push
inc
adc
and
add
jnp
ss
adc
lock
hlt
fsubr
aam
sbb
xor
dec
add
cmp
js
push
test
and
or
mov
arpl
adc
adc
jns
mov
and
push
aaa
adc
xchg
push
rclb
outsl
orl
mov
mov
sti
or
test
into
pop
lea
mov
mov
ret
insl
test
cltd
rclb
sti
cs
jl
jg
in
dec
xchg
test
faddp
fcoml
pop
adc
adc
mov
daa
add
jae
jae
xchg
mov
or
and
jmp
dec
lock
push
jle
pop
jne
mov
fcmovne
sbbb
pop
ss
jo
push
jmp
loopne
xchg
mov
xor
xor
shll
adc
js
or
dec
push
add
adc
xor
hlt
push
jg
int3
mov
xchg
imul
add
adc
scas
sbb
jl
push
nop
xchg
jle
inc
jo
dec
mov
pop
jecxz
push
dec
xor
mov
cmp
mov
cmpb
jo
adc
inc
rorb
inc
adc
add
push
pop
shll
pop
ljmp
sbb
jns
sub
out
into
adc
dec
jno
pushf
mov
arpl
dec
mov
adc
mov
or
mov
jo
sbb
jle
mov
inc
or
movsb
addl
ds
sub
push
xchg
sbb
popa
jae
aas
add
fistpl
jne
add
inc
enter
test
and
pop
push
cli
sub
lea
clc
popf
sti
pop
scas
inc
dec
sbb
cmpb
add
push
pusha
mov
mov
inc
fbld
cmp
in
sbb
pop
sbb
push
out
btr
sub
mov
je
or
je
xor
push
push
or
or
je
insl
add
mov
xor
pushf
in
aam
and
adc
mov
add
xchg
and
add
mov
jl
push
aaa
cmp
test
xorb
sub
sbb
and
fstpt
sbb
jle
fidivrl
pop
hlt
je
push
push
pop
loop
stos
push
fs
sbb
test
rolb
movsl
sub
pusha
lock
mov
mov
cld
lock
sbb
ja
add
dec
add
mov
jne
imul
sub
mov
mov
or
xor
and
push
addb
insb
jno
cmp
and
ret
and
rorb
into
add
xor
add
or
pushf
std
daa
cmp
pusha
aam
and
xchg
out
jo
sub
imul
add
inc
mov
and
pop
cltd
test
js
add
test
aam
mov
repnz
icebp
scas
sub
pop
sub
nop
mov
lock
ljmp
sub
push
test
push
popa
das
cwtl
and
and
jmp
lret
ret
test
jbe
push
jne
or
outsb
inc
mov
cmp
push
stos
add
adc
in
mov
xchg
inc
pop
xor
clc
push
insb
push
daa
cmp
push
cmp
adc
inc
in
in
push
movsb
mov
loope
jno
aaa
sub
fsubs
jne
and
mov
xor
push
stc
mov
adc
xor
mov
mov
inc
sbb
add
adc
stc
add
add
rclb
xchg
andl
push
dec
cmp
inc
add
mov
mov
lahf
mov
pusha
cmc
popa
jo
cmp
ss
in
or
fsub
xchg
and
popf
cmp
cmp
das
sub
mov
jno
pushf
dec
sub
sub
cvttps2pi
sub
enter
imulb
push
aam
jnp
sbb
xchg
in
jge
adc
xor
xor
repnz
adc
or
inc
imul
gs
shl
sbb
and
xor
mov
bound
xchg
popf
sbb
aaa
sbb
mulb
add
xor
arpl
jns
jb
xor
push
test
xor
movsl
sbb
cmc
icebp
cmp
xor
push
add
sbb
cmp
and
cmc
sub
cmp
repnz
sub
cmp
test
sub
fadds
xor
je
int3
ret
jno
jmp
pop
ret
jns
mov
shll
dec
and
cmp
sbb
adc
flds
cmpsb
adc
fisttps
imul
das
insl
enter
js
movsl
xchg
bound
pushf
adcb
push
fwait
imul
cwtl
sub
push
loopne
push
cmpb
daa
imul
push
jo
xor
sbb
jo
loopne
int
inc
mov
pop
dec
loop
xchg
jnp
jge
adc
je
dec
ret
push
push
jle
cmpsb
rolb
je
mov
movsl
jo
lock
mov
movsb
or
and
sub
and
push
sub
in
mov
insb
pop
mov
icebp
sarb
das
xor
roll
mov
jmp
cmp
push
mov
sbb
popa
mov
inc
dec
enter
mov
dec
push
decl
repz
ret
and
dec
int
mov
push
shrb
adc
adc
shlb
rol
cmp
push
sbb
icebp
push
scas
pop
mov
lret
in
xorps
mov
push
inc
cwtl
pop
popf
xor
cs
add
add
dec
mov
jnp
xchg
cmp
or
aas
cmp
sbb
or
add
sub
popa
lahf
js
xor
fsubs
pop
xor
mov
call
push
xchg
mov
xchg
inc
out
pushf
sbb
mov
and
mov
cmpsb
or
push
push
jb
aad
jl
pop
out
jne
or
je
sub
cs
rorb
xchg
mov
mov
sub
loope
push
adc
pusha
push
in
faddl
dec
mov
out
add
or
add
or
mov
in
push
jne
or
xchg
cmp
lret
sti
lds
add
xor
call
inc
lock
rolb
sub
repz
je
incb
push
push
jnp
jbe
push
cld
sub
loop
out
inc
cmp
aas
inc
out
xchg
je
push
fistpl
push
or
fnstenv
lahf
adc
aad
shll
jnp
xor
cvttps2pi
dec
jl
xor
lret
insl
imul
cld
dec
clc
mov
push
mov
or
les
or
pop
push
pop
enter
inc
int3
add
mov
dec
mov
aad
fcomp
mov
add
or
js
loopne
hlt
push
ror
insl
adc
mov
adc
lock
pop
jmp
icebp
dec
dec
je
sub
jmp
adc
cmpw
je
jg
jp
jmp
jbe
xor
jmp
jl
mov
in
enter
pop
xchg
pop
mov
pop
xlat
mov
test
push
mov
repz
and
sbb
xor
mov
scas
rorl
insb
loopne
pop
je
cmpsl
or
into
clc
ja
push
mov
xor
inc
mov
addr16
ljmp
cmp
jne
test
mov
push
inc
sub
cmp
jle
and
jecxz
insl
cmp
pop
add
add
jp
mov
leave
or
inc
mov
add
jl
push
mov
jle
xor
loopne
cltd
or
mov
loope
stos
xor
push
mov
shlb
push
enter
push
xchg
int
mov
into
lea
xor
aas
mov
push
filds
imul
add
mov
rorl
rcl
js
xchg
clc
mov
stc
test
jge
cmp
push
jne
fwait
or
movb
push
fldt
and
testl
or
es
je
subl
xor
sub
xchg
push
mov
mov
push
xlat
xor
fisttpl
sbb
lock
pop
test
dec
jbe
push
ffreep
ljmp
cltd
imul
cmp
outsl
jns
imul
xchg
cs
sahf
les
sub
sti
lock
inc
js
push
or
sti
dec
mov
ret
push
mov
inc
loopne
push
shll
icebp
cli
stos
pop
lcall
call
push
imul
lods
pop
data16
subb
out
and
in
push
sub
pmulhuw
push
push
icebp
jno
adc
ret
mov
imul
nop
pop
add
dec
in
pop
mov
test
mov
or
divl
cltd
test
or
mov
sbb
fcoms
lods
sbb
mov
scas
in
push
movsl
imul
mov
mov
add
movsl
add
mov
mov
push
lahf
addl
loopne
lea
push
add
in
push
clc
push
push
call
and
sbb
addl
iret
add
lods
lret
cmpsl
mov
sbb
rcll
aas
dec
into
adc
cwtl
leave
mov
jbe
mov
or
cwtl
pop
daa
loop
add
xchg
lods
data16
sbb
jo
adc
cmp
lds
or
or
mov
push
adc
cmovns
sbb
mov
xor
and
js
and
add
jle
loope
test
add
xor
mov
mov
out
dec
mov
sub
mov
or
adc
mov
aam
fcoms
fadd
or
iret
mov
sbb
loopne
mov
orb
xchg
push
jo
rorb
cmp
je
pushl
call
fists
iret
mov
call
push
adc
clc
fstl
inc
push
push
mov
jns
in
cmp
xchg
roll
xchg
popf
cmp
data16
mov
aas
lea
xchg
insb
arpl
gs
imul
icebp
mov
jp
enter
xor
ljmp
add
test
pop
mov
jp
sar
jmp
sar
xor
and
inc
push
push
mov
cmp
jg
mov
aas
sbb
adc
jge
leave
xor
mov
adc
out
mov
xchg
out
pop
cs
enter
cmp
and
in
adc
aam
cmp
adc
or
jl
mov
push
jne
lret
aaa
jl
lcall
jmp
cmp
push
fwait
pop
cmp
gs
and
adc
hlt
test
loopne
mov
pop
lods
mov
aam
dec
in
mov
lea
cmp
ss
out
jae
mov
incl
xor
pop
xchg
add
into
mov
fidivs
inc
add
loop
jge
jle
or
add
imul
add
mov
loop
cmp
jg
cwtl
sarl
leave
js
sbb
sbb
leave
lahf
loop
xor
cld
ret
lcall
mov
mov
sub
xor
dec
imul
outsl
add
lea
and
push
push
outsb
push
cmp
nop
adc
xchg
lret
xchg
add
hlt
rolb
lock
mov
mov
stos
sub
mov
lahf
jmp
inc
mov
orl
ret
lret
or
addr16
enter
test
js
popa
sub
push
hlt
jg
in
mov
je
sub
dec
jmp
cmpl
push
inc
inc
mov
pushf
sti
xor
add
inc
outsb
push
push
dec
jecxz
cmp
sbb
movsl
popa
mov
sub
xchg
xor
mov
jae
test
sarb
pop
testb
adc
jns
mulb
ja
jl
repz
clc
fistl
shr
push
or
imul
sub
jl
cmp
pushf
clc
ss
mov
cmpsb
jae
xor
jbe
aas
outsb
mov
bound
mov
push
push
xchg
mov
or
popf
xchg
push
popf
aaa
mov
push
rorb
popf
jb
add
outsb
lods
stos
cmpsl
pop
mov
cltd
push
mov
inc
rorb
mov
or
mov
pop
mov
rep
push
in
ds
sarb
cmp
loop
out
cmp
sbb
jg
ss
add
or
add
xor
stos
mov
mov
pop
mov
je
das
mov
adc
imul
ljmp
je
push
and
adc
sbb
test
or
insb
mov
jnp
int
or
ja
movsl
test
or
mov
or
sub
inc
cmpsl
push
lock
xchg
je
xchg
sub
clc
jne
cmp
je
jbe
movb
in
pop
dec
insl
out
mov
push
and
sbbb
sbb
mov
mov
pop
repnz
int
xchg
mov
sbb
ss
pop
or
scas
ret
hlt
add
je
pop
mov
imul
cmovp
mov
or
movsl
pop
insb
in
aaa
hlt
mov
jne
movsb
pop
fucomi
push
push
enter
mov
sbb
js
jo
jg
lcall
lods
les
test
cmpsl
or
push
daa
adc
insl
cli
std
ret
jge
xchg
dec
inc
cmp
jne
popa
stos
mov
sbb
jne
mov
jne
int3
add
roll
addl
rolb
xor
mov
mov
and
sbb
pop
js
sbb
stos
pushl
sarb
loop
push
pop
cmp
inc
dec
or
or
or
sub
and
push
adcl
ds
std
clc
add
mov
sub
sar
mov
mov
sar
or
cmpb
and
pop
pop
mov
jmp
loope
or
add
insb
cld
cmp
lea
jbe
ss
jbe
dec
or
push
push
test
push
or
addb
ret
repz
mov
movl
inc
rcl
add
shll
jp
fsubr
mov
or
jmp
ja
pop
dec
push
xor
insl
mov
es
inc
lcall
adc
xor
jecxz
adc
addl
dec
mov
push
clc
clc
dec
or
repnz
rclb
xor
mov
fsts
push
pusha
idivl
push
das
push
in
and
lods
add
mov
or
lods
ud1
adc
sub
cmp
sub
add
insb
fdivs
push
xor
enter
pop
fldt
push
sub
test
xor
nop
jecxz
outsl
mov
pushf
dec
push
inc
aad
cmp
and
adc
lds
pop
adc
mov
and
mov
dec
xchg
call
cmp
add
and
adcl
dec
test
xchg
dec
sahf
push
xchg
test
test
jo
mov
lret
cmpsl
jns
pop
leave
fsts
dec
cmp
adc
add
and
in
nop
imul
sub
adc
sbb
xor
push
int
call
daa
les
cmp
add
pusha
test
in
cmp
push
orl
cmp
add
push
and
dec
push
test
inc
enter
in
pusha
inc
xchg
pop
movsb
add
inc
xlat
imul
inc
or
push
lock
jp
stos
and
pop
and
sub
and
xchg
imul
push
pop
stc
push
sub
push
mov
inc
inc
dec
mov
xlat
pop
sub
xor
add
mov
hlt
jle
cmp
sbbl
push
inc
jae
xor
cwtl
mov
out
cs
push
enter
test
movsb
inc
add
ljmp
movsb
add
loope
push
leave
repz
adc
push
push
andb
add
test
cmc
pop
mov
push
xchg
xorb
add
clc
ret
cmp
push
repnz
adc
sbb
jb
adc
sbb
imul
shrb
mov
add
push
jbe
scas
or
and
jb
in
or
xchg
adc
pop
or
xor
add
mov
dec
mov
or
lock
or
push
lea
sbbl
adc
mov
adc
sbb
mov
cmp
ret
in
and
and
mov
cmp
and
das
add
inc
push
movsb
sub
shlb
sub
push
pop
orl
push
push
es
lret
fsubs
cmp
mov
sbb
sub
ja
pop
sbb
sbbb
imul
stc
adc
cmp
popf
cmpl
fisttps
pop
and
push
cltd
pop
lock
or
add
push
adc
sarb
roll
jno
add
push
stos
jmp
loope
lds
pop
mov
push
dec
mov
fldl
dec
pop
fisubrs
addb
mov
jbe
jbe
das
fisttps
dec
jmp
cmp
cmp
adc
jne
sub
dec
je
in
std
xchg
adc
in
jge
adc
inc
push
std
cli
and
dec
loop
adc
mov
and
test
add
je
pusha
leave
jmp
mov
into
cs
jne
adc
sbb
fisttps
jg
call
repnz
add
pop
inc
add
mov
or
loopne
mov
xchg
sbb
push
mov
fdivr
cmp
mov
cmc
dec
and
and
add
add
inc
and
push
outsl
or
stc
or
xor
push
push
daa
pop
jo
xchg
out
pushl
js
dec
push
lea
test
and
std
mov
jmp
mov
rorb
std
xor
cmp
je
cmp
push
mov
xchg
cmpsb
inc
sbb
leave
adc
cli
sti
jbe
jg
fldz
andl
and
dec
xchg
outsb
jmp
sbb
and
lea
push
pop
jmp
and
jmp
xchg
fmull
pop
sbb
cmp
cmp
or
mov
repz
mov
pop
pop
popf
negl
push
fld
mov
push
fcomi
and
pushw
and
mov
sbb
shrl
push
inc
sbb
fstl
lea
jbe
lahf
mov
add
sub
xchg
out
lahf
rorb
fmuls
xchg
push
int
push
ficomps
out
push
or
xchg
xchg
pop
les
movsb
cld
jge
ja
decl
push
mov
mov
pop
push
lea
cmp
push
push
push
add
push
lea
add
gs
cmp
dec
fidivs
add
dec
mov
sbb
mov
test
inc
pop
test
lret
sbbl
push
xor
sti
pop
mov
cmp
sbb
call
insb
sbb
aam
push
test
sub
mov
pop
shrb
xchg
push
aam
or
mov
mov
or
mov
out
add
popfw
popf
push
testl
test
push
xchg
popa
enter
lea
cmp
ret
dec
adc
test
ret
cld
outsb
insb
loope
clc
xor
in
movl
push
addr16
jle
shrl
and
pop
pusha
pusha
and
cmpl
mov
sbbb
iret
mov
fidivl
cwtl
add
aas
mov
or
out
add
add
xor
pop
adc
dec
out
cmp
push
jl
push
inc
orl
daa
jmp
test
dec
loop
lcall
inc
mov
pop
mov
and
fwait
or
out
js
mov
loop
xor
xchg
adc
xchg
data16
je
xor
sub
test
shl
scas
push
or
aad
cmp
push
push
sbb
scas
loope
fsubs
push
cmp
fnstenv
cmp
jl
sbb
jb
pop
rolb
pop
pusha
sub
inc
jl
sbb
push
call
inc
fisubs
fs
cmp
popa
and
popa
rclb
icebp
or
popa
aam
push
rcll
push
aam
das
in
cmpsl
ret
inc
push
jl
jne
sbb
or
int3
push
roll
aam
outsb
cltd
rcr
xchg
or
dec
sub
cmp
xor
fcmovnb
pop
sub
inc
add
adc
stos
fsubl
std
sbb
aam
pop
fsubl
popa
mov
mov
aas
and
add
inc
int3
cmp
jne
and
fstl
push
sub
xor
pop
fdivs
jo
xor
inc
imul
iret
je
lea
push
loopne
add
mov
push
lret
jo
out
sti
ja
add
sbb
cmp
jne
call
push
or
lcall
inc
subb
pop
es
pop
sarl
or
sub
les
sti
in
add
pop
push
dec
lock
div
mov
rcl
dec
je
dec
push
adc
test
adc
jge
je
pusha
sub
sub
popa
or
push
pusha
cmp
fistps
in
jmp
mov
data16
pop
add
inc
inc
dec
cmp
lahf
inc
push
cmp
xor
push
rcl
mov
add
lret
lea
rep
push
xchg
or
in
fimull
mov
add
sarb
fwait
test
sbb
mov
sbb
dec
sbb
arpl
jp
lahf
push
fs
and
lock
cmpsb
imul
jne
fwait
cmp
push
push
mov
bound
add
mov
push
mov
out
sub
pop
into
neg
sbb
and
push
push
lds
sahf
sub
faddp
lds
sub
pushf
in
into
negl
push
mov
pusha
sahf
jl
dec
mov
pop
add
xorl
fs
mov
adc
punpckhdq
or
xor
fbstp
jmp
pushl
and
in
and
push
test
imul
insl
jo
pop
push
and
mov
push
pop
mov
pop
shlb
push
loopne
idivl
leave
ljmp
mov
cmpl
jne
pushl
repz
pop
sbb
push
adc
cltd
insl
rclb
fadds
adc
in
scas
mov
mov
fmuls
and
dec
int
adc
fbld
pop
jg
adc
sti
je
cmp
xchg
jl
sbb
cmp
pop
cs
jno
testb
lods
jo
adc
in
dec
or
push
push
popa
in
push
mov
imul
mov
clc
xor
icebp
incl
jne
movb
jmp
cmp
sub
loop
jne
jae
fldz
xor
dec
pushf
inc
cwtl
ds
cwtl
sahf
dec
pushf
xchg
jo
movb
push
jle
ret
dec
aas
mov
int
hlt
jmp
adc
mov
hlt
pushf
mov
jmp
xor
inc
shlb
shrb
test
and
and
jbe
jl
fimull
popf
sub
fisubl
daa
mov
adcb
or
js
push
ficoml
sbb
es
add
leave
push
mov
hlt
pop
aam
mov
cmp
dec
clc
notb
iret
push
adc
enter
mov
shl
pop
push
push
loop
adcb
in
mov
scas
dec
shlb
add
add
imul
ja
or
push
xor
adc
ret
dec
inc
mov
sbb
push
push
jo
push
push
push
lea
add
test
ds
cmp
test
jl
push
ds
mov
mov
push
lret
jl
iret
cmp
xchg
andb
jbe
xor
ljmp
xor
push
cmpb
sbb
sbb
test
aaa
mov
bound
add
dec
dec
xor
inc
fldl
fmull
jb
jl
out
cmp
sbb
mov
je
add
movsl
mov
out
mov
cmp
stos
push
jp
adc
pop
out
ja
mov
add
inc
add
add
xor
negl
in
push
ds
sub
sbb
adc
mov
cli
dec
adc
inc
jo
popf
fmuls
call
loopne
repz
or
or
test
jo
cmc
jmp
mov
adc
roll
xchg
xchg
push
fcom
push
adc
pop
or
loopne
cmpb
xor
sub
aaa
push
pop
cmp
push
enter
call
adc
scas
das
cs
sub
push
push
mov
adc
mov
cmp
push
insb
repz
push
cmp
fisubrs
add
xchg
sbb
popa
pop
cli
or
push
icebp
pusha
mov
pop
push
or
push
cmp
add
xchg
popf
loope
adc
pop
push
popa
push
pop
sub
cltd
sub
push
jecxz
and
push
shll
daa
push
add
add
popf
jno
lea
outsl
sbb
mov
popa
repnz
call
mov
andb
mov
testb
aas
mov
cltd
mov
lea
ret
jge
add
dec
adc
lea
and
dec
loope
push
mov
cmp
mov
jge
mov
idiv
push
mov
push
push
loop
test
mov
ret
xor
idiv
cmp
das
or
mov
xorl
test
jg
mov
rcrb
popf
xor
sbb
aaa
jmp
bound
mov
pop
fdivr
sbb
xchg
jge
add
dec
andl
fldz
sub
pop
pusha
mov
insb
xor
sti
sub
push
sub
xor
mov
dec
jg
lea
cltd
idivl
add
xchg
or
jnp
rcr
mov
js
out
pop
imull
fs
or
xchg
arpl
mov
leave
jle
cmp
std
pop
stos
int
mov
cld
int
pushf
movb
jnp,pt
and
aas
dec
lea
mov
jl
xchg
sub
std
scas
jmp
or
jae
dec
nop
or
out
insb
mov
test
xchg
mov
fildl
mov
test
mov
push
faddl
xor
xor
mov
fdivrp
jmp
dec
sub
mov
cli
sbb
mov
inc
les
out
movsl
adc
xchg
pop
jl
jmp
into
sbb
mov
cmpb
mov
into
clc
fidivl
jmp
push
xchg
mov
jo
cli
pop
divl
jge
pop
mov
pop
movb
add
mov
adc
leave
xchg
mov
push
das
stos
shrl
rorl
lret
mov
jl
pop
push
cld
inc
aam
clc
lea
add
adc
fstps
popa
pop
push
gs
bound
jbe
push
inc
xchg
xchg
xchg
popa
pop
and
scas
mov
rolb
dec
mov
or
leave
jge
daa
cmpsl
lock
lds
ja
stos
sub
sbb
cmp
add
inc
addr16
add
and
cltd
add
sub
xor
xor
ret
in
push
mov
int
repnz
mov
sub
arpl
xor
mov
push
jle
xor
push
sti
mov
adc
mov
push
movsb
mov
adc
sti
fisttps
push
fldt
pop
leave
adc
pop
xor
out
dec
subl
push
inc
jb
inc
or
sbb
inc
add
cmpb
rorl
in
adc
lods
add
add
mov
sti
das
inc
mov
lea
push
push
cmp
and
ljmp
andl
pop
adc
sub
mov
loopne
xor
cwtl
orb
outsl
pop
cwtl
mov
push
es
pop
push
dec
pop
mov
insb
and
xor
xor
pop
leave
add
mov
lahf
or
fs
cli
cltd
lods
pop
push
pop
sbb
stc
into
int3
out
pop
pop
xlat
enter
and
and
cmp
mov
stos
test
mov
addr16
inc
cli
and
jl
mov
and
aaa
ja
xchg
sbb
or
and
enter
adc
xchg
xchg
fs
test
icebp
add
lock
sub
inc
sub
lock
lcall
setb
test
enter
pop
add
sub
cmp
sbb
xor
sub
rol
adc
data16
push
lea
push
mov
sbbb
aaa
push
mov
je
push
loope
pop
add
sbb
in
dec
sub
popl
mov
icebp
and
jl
dec
mov
call
lea
orl
call
adc
mov
das
xor
sbb
shrl
inc
nop
imul
mov
jp
pop
mov
sbb
shrb
push
cmp
add
or
jp
sbb
jle
adc
idiv
fs
or
inc
andb
adc
jmp
icebp
mov
out
add
dec
test
es
loopne
sub
test
jne
sub
enter
add
cmpsb
mov
aad
jo
cmp
movb
rcll
mov
out
std
jns
das
sub
pusha
sbb
dec
sti
fists
add
pop
jmp
push
adc
sub
jne
jbe
in
in
mov
ret
push
lock
sbb
repnz
clc
dec
lahf
leave
and
push
and
arpl
ja
or
mov
js
outsb
add
dec
jo
xchg
jmp
out
sbb
pop
inc
xor
inc
shrb
into
xchg
mov
out
rorl
mov
cmp
mov
push
mov
dec
sbb
aam
inc
add
dec
sub
and
imul
call
dec
into
lods
enter
outsl
les
call
add
xlat
xchg
out
xlat
in
pop
add
dec
in
push
fadds
sbb
imull
dec
insl
adc
xor
xor
lea
hlt
xchg
orb
aaa
pushl
movsl
imulb
out
xchg
fsubrl
push
xor
add
pop
out
cmp
les
sbb
xchg
xorb
mov
push
or
sbb
lahf
lcall
cltd
push
add
gs
add
ljmp
inc
or
dec
jb
lcall
mov
dec
and
push
pop
pop
push
sahf
pop
test
mov
pusha
xor
lods
jno
cmp
mov
stos
pop
fisttpl
pop
mov
into
and
jle
xchg
outsl
cmp
out
imul
sub
xchg
jnp
add
xchg
cmp
or
cmc
push
mov
push
or
leave
add
dec
adc
dec
sub
in
sti
inc
push
adc
ja
push
adc
add
and
cmp
and
test
cmp
mov
xor
je
or
xchg
cwtl
xchg
dec
sbb
mov
cmp
add
inc
lea
adc
push
ljmp
decl
xchg
icebp
sbb
ret
rorb
test
push
jae
sub
out
clc
insl
sbb
adc
mov
jmp
dec
mov
cli
mov
dec
insb
js
push
mov
cmp
dec
add
jmp
rclb
inc
pusha
inc
xor
shlb
xchg
sub
add
aaa
mov
jle
fmulp
js
cmp
jge
mov
into
dec
adc
pop
sub
or
push
pusha
jle
in
incl
mov
xor
ljmp
mov
std
push
inc
stos
cltd
xchg
and
cltd
adc
sub
mov
add
dec
mov
enter
mov
sbb
adc
ljmp
mov
pop
es
mov
cmp
in
mov
or
jbe
add
and
cmp
sete
and
and
xorb
clc
sub
les
push
or
fwait
aam
pop
add
push
dec
jbe
ficoml
mov
dec
out
les
and
dec
sbb
push
imul
cmp
mov
lcall
fsubs
subb
in
add
ret
aam
pusha
pop
ror
clc
push
sbb
pshufw
adc
add
rcrl
loope
mov
inc
jno
test
scas
test
jo
fildll
sub
mov
loopne
fnstenv
test
jecxz
ja
cmc
xchg
enter
outsb
xor
cmp
in
pop
push
iret
ss
cmp
push
xchg
loopne
popf
jae
cmp
push
popa
insl
pop
or
push
or
aam
xor
pop
xchg
add
iret
mov
add
adc
jnp
cmp
pop
cld
in
inc
adc
push
pop
pop
pop
loop
push
adc
dec
mov
xchg
xchg
in
adc
mov
subb
xor
or
stos
imul
repz
sahf
mov
pushf
call
xchg
push
fdiv
in
and
rolb
pop
addb
sahf
arpl
dec
movsl
imul
in
test
xchg
jle
testb
or
add
xchg
jbe
sbb
cmpsb
adc
enter
adc
or
jno
mov
or
pop
fs
outsb
add
jo
in
or
jl
xchg
lock
dec
xorl
pop
or
jg
outsl
arpl
movzwl
mov
andb
cmp
push
jecxz
daa
aam
punpcklbw
add
icebp
adc
ds
push
pop
je
inc
loopne
pop
jbe
lcall
sbb
push
pop
test
push
and
sbb
pop
cmpsl
jno
iret
adc
movb
mov
movsl
cwtl
rol
insl
loope
data16
adc
xor
add
nop
add
dec
loopne
inc
dec
push
push
inc
mov
in
insl
push
inc
pop
mov
out
jecxz
orb
cmp
lods
push
addr16
mov
adc
xchg
mov
add
adc
and
jbe
mov
rcrl
jge
add
rolb
adc
cld
mov
sub
jns
pop
sahf
sub
nop
mov
ret
push
jae
jp
xchg
fldcw
mov
push
xor
push
cmp
and
test
icebp
cltd
insb
push
lea
andl
mov
sar
lcall
push
ss
mov
pop
loopne
push
mov
data16
movl
mov
pop
stc
xchg
dec
sub
sbb
adc
sub
aaa
sbb
mov
mov
aam
ss
shrb
fadds
cmp
and
push
push
imul
mov
sbb
shrb
mov
stos
test
jb
or
mov
std
inc
add
std
in
sahf
mov
add
and
nop
xchg
inc
add
xor
test
or
sbb
sbb
das
add
shll
fs
out
push
mov
hlt
sahf
not
mov
mov
mov
sbb
aad
sarb
or
mull
sarl
dec
push
test
aam
cmp
jae
adc
sbb
call
js
sub
push
and
loop
add
adc
and
pushf
mov
push
push
lods
in
in
jne
cld
add
xor
inc
cmp
pusha
lods
aam
movsb
call
xchg
lock
rorb
adc
push
add
adc
mov
mov
xor
ds
popf
test
cmpb
in
fdivp
cmp
add
add
add
or
pop
addr16
jg
dec
aad
push
shlb
faddl
daa
cmp
xor
sub
inc
xchg
lret
adc
jl
dec
inc
inc
pop
inc
add
daa
cmp
adc
or
mov
es
jmp
adc
sbb
push
in
call
sbb
std
mov
or
dec
xchg
fstps
push
add
nop
lret
adc
sbb
icebp
inc
js
jo
sbb
inc
or
sbb
pop
andl
adcl
mov
adc
push
jo
mov
test
sub
test
push
mov
fwait
push
mov
xchg
sub
mov
js
adc
icebp
ficomps
mov
shrb
pop
ss
jl
inc
lock
dec
cmpsl
pop
sbb
popf
lds
add
xchg
lea
lods
xchg
push
add
pushf
xchg
lea
fcomps
ss
adc
mov
xor
fadds
jbe
loopne
aaa
cmp
sub
add
push
pop
lods
dec
nop
inc
adc
out
xchg
inc
imul
imul
test
aad
sub
adc
mov
in
pop
sarb
hlt
push
lcall
bound
testl
lods
dec
mov
push
ja
mov
repz
jb
leave
cld
fnclex
ret
pop
xor
lahf
sbb
int3
jge
pop
lods
mov
mov
mov
adc
fimuls
inc
xchg
xor
rclb
mov
fbld
mov
ja
dec
in
pop
jno
testb
mov
mov
inc
mov
and
stos
mov
fwait
push
or
push
or
pop
add
push
pop
push
mov
xor
hlt
outsb
mov
push
xchg
xchg
lods
mov
inc
pop
fbstp
jne
jbe
xor
and
lds
push
pop
shl
out
xchg
sbb
je
mov
pusha
inc
lcall
xchg
je
je
jmp
pop
nop
inc
sahf
iretw
xor
mov
pop
inc
or
or
push
andb
add
test
sub
push
ss
int
popf
int
js
or
ja
mov
mov
in
xor
idiv
add
inc
mov
mov
out
shlb
fisttpl
add
or
adc
gs
cmp
pop
pusha
cmp
pop
scas
out
push
testl
xor
cmp
dec
adc
aad
jne
loopne
push
jge
pushf
xor
jbe
adc
mov
pop
rorb
insl
js
jl
nop
fsts
mov
mov
cli
popa
fnsave
push
int
jle
xor
test
fsubrs
inc
xchg
adc
jge
push
lock
jg
mov
ret
andb
cmp
cmp
mov
fucomip
add
in
sbb
adcb
std
push
outsl
and
adc
xchg
shll
movsl
jb
and
notb
mov
fistpl
inc
lock
pushfw
mov
push
add
loopne
out
mov
sbb
ljmp
lea
push
mov
or
ret
push
in
cmp
fxch
cmc
lock
pop
mov
mov
cmp
stc
adc
pop
out
mov
inc
mov
faddp
stc
into
mov
insl
sub
and
in
pop
sarl
inc
andl
or
mov
test
push
test
rolb
inc
in
xchg
push
add
mov
inc
sub
icebp
imul
mov
add
inc
out
jl
or
das
ss
inc
aam
test
adc
xchg
dec
mov
jmp
movb
test
add
sub
xchg
out
test
pop
and
add
sbb
imul
mov
ror
out
lret
cs
insb
jnp
push
outsl
mov
xchg
pop
jb
loopne
push
and
lock
xor
loop
andl
push
or
lods
lods
repz
inc
lret
test
shrb
test
arpl
fisttps
sbb
and
ds
jae
pop
fiadds
fnstsw
or
lods
test
sbb
jno
jns
inc
jl
fidivl
les
movsb
repnz
push
imul
inc
fnstenv
fdivl
adc
pop
inc
pop
gs
or
popa
sbb
jo
dec
cmp
rcr
xchg
push
mov
rcll
mov
jge
aas
push
pop
ljmp
mov
aaa
inc
test
push
jl
call
inc
cmp
fcoml
push
mov
shrl
dec
xchg
test
adc
loop
in
jbe
push
inc
sub
mov
ret
or
push
int3
shlb
push
add
sbb
push
dec
in
xchg
xchg
inc
mov
mov
or
cmpl
sbb
push
jecxz
and
movl
or
jne
maxps
add
lock
xchg
or
xchg
movsb
adc
adc
xor
adc
adc
adc
daa
jo
adc
negl
cmpsl
or
pop
lea
adc
cmp
cmp
jg
insl
je
push
cmp
les
arpl
inc
dec
mov
and
sbb
aaa
adc
jmp
push
and
sbb
xor
enter
fistpl
push
push
mov
jnp
sbb
cmc
sbb
fs
sbb
daa
in
xor
or
mov
in
rcrb
jno
shr
mov
mov
jne
push
aaa
or
pop
cmp
fadds
or
jbe
jmp
andb
ss
and
adc
pop
movsl
or
imul
jns
out
mov
test
lea
pop
movsl
jne
pop
test
pop
xor
je
shl
lea
and
and
or
das
cmp
xchg
nop
mov
hlt
bound
push
subb
mov
es
pop
inc
jp
nop
sub
repz
stos
sub
fsubrl
mov
addr16
sub
jbe
sbb
xorb
mov
jge
push
adc
sub
mov
iret
pop
add
push
sub
aam
jo
je
movsb
xchg
das
sub
xor
lcall
jno
sub
repnz
movsl
loop
into
int3
xor
cwtl
scas
outsb
push
rorb
cmp
xchg
push
arpl
xor
sub
loop
insl
fdivr
shlb
pop
add
mov
pop
sub
sub
subl
pop
popf
call
je
push
or
mov
dec
call
jecxz
push
or
push
pushf
jno
sub
enter
mov
mov
add
aaa
jne
testl
sub
push
insb
mov
xchg
xchg
rol
clc
pop
aam
push
pop
pop
cmp
mov
loop
mov
jbe
ljmp
leave
mov
sbb
rorb
mov
mov
in
ret
and
fdiv
pop
adc
push
mov
incl
push
adc
xor
je
push
and
aaa
mov
mov
shrb
or
push
and
inc
push
or
adc
jae
pop
and
mov
das
dec
mov
xorb
insb
movsb
xchg
pop
or
in
lea
add
lock
sahf
ljmp
xor
cli
ja
nop
or
rorl
push
jnp
jae
andb
and
cli
inc
xchg
fcmovnbe
jmp
cmpl
inc
in
jne
mov
xor
push
daa
ja
in
ror
fildll
int3
int
fstps
xor
push
nop
mov
push
mov
rorl
jg
jno
popa
dec
push
and
pusha
lds
mov
or
stc
sub
push
sbb
pop
pop
add
dec
and
pusha
cmpb
test
pushf
mov
pop
test
or
add
sub
or
or
push
sub
xchg
or
push
pop
cmp
aad
pop
pop
mov
repz
cmp
pop
push
and
pop
pusha
outsl
orl
add
enter
sub
adc
inc
jl
pop
dec
hlt
sub
push
cmp
jae
stos
out
jno
in
lods
adc
testb
push
icebp
mov
adc
push
jl
clc
fimull
pusha
add
inc
sahf
or
cmpsb
push
push
mov
cmp
out
jae
loopne
test
lock
scas
adc
pushl
or
insl
adc
ret
pop
stos
js
popa
arpl
or
mov
pop
das
add
loop
loopne
mov
xchg
inc
outsl
pop
or
dec
mov
movzwl
sub
inc
push
aam
test
sarl
push
mov
inc
inc
and
jnp
inc
popa
cmp
push
add
jb
out
pop
add
pop
jmp
lods
sub
mov
ja
or
enter
les
cmp
out
clc
or
jb
jbe
std
pop
mov
cmpl
xlat
jle
inc
cmp
push
jae
mov
lcall
push
xorb
xor
lret
push
adcb
ficompl
pop
aam
ret
jmp
nop
jno
pop
cmc
push
ret
nop
adc
addb
fists
pop
enter
test
adc
or
or
cmp
fsub
xorb
inc
aad
cmp
sbb
test
loop
inc
jecxz
stos
pop
xchg
loope
clc
je
mov
mov
push
pop
add
scas
mov
push
lea
push
inc
mov
push
addl
and
push
bound
andnps
cmc
dec
ret
mov
cmc
or
fimull
fistl
push
call
or
into
jl
insb
mov
int3
xor
cmc
dec
imul
sarl
pop
sub
cmp
jle
mov
cmp
jne
out
stos
mov
lahf
sbb
push
add
xchg
add
push
ss
pop
movsb
dec
out
ret
or
dec
cmp
je
sub
pushw
push
loope
into
cmpsb
lock
fcmovnu
xchg
addr16
dec
fstps
sti
sub
cmp
jge
mov
sarb
ret
sub
adc
lret
xchg
in
xor
out
in
sub
lea
out
xchg
xchg
js
dec
or
in
out
xchg
subl
insl
rorb
jae
add
mov
jb
adc
sbb
insb
pop
jae
xor
xchg
fcoms
cmp
sbb
mov
cmp
ret
push
jp
lea
push
push
outsl
in
cltd
ret
out
adc
push
xchg
mov
push
arpl
sub
push
inc
add
add
repnz
cmpsb
adc
xchg
push
push
adc
xor
inc
mov
clc
adc
add
cmp
jns
mov
ljmp
jne
fistl
push
mov
pop
jecxz
inc
and
je,pt
fcomip
cli
add
jbe
push
decb
mov
fistpll
dec
sti
mov
xchg
jle
xchg
add
or
pop
pushl
push
jae
cwtl
cmp
je
cmp
ficoms
push
push
movl
ficomps
add
out
inc
push
sub
dec
and
cmpl
outsb
ret
or
pusha
sbb
dec
sub
sub
inc
addl
jb
push
add
aad
aaa
add
add
cmp
insl
adc
scas
xchg
jns
lock
sbb
adc
aaa
jge
or
jne
test
stos
mov
hlt
add
jb
mov
inc
and
dec
cltd
out
ret
outsl
loop
rorl
leave
push
cmp
je
xor
sbb
pop
and
mul
seto
mov
mov
fs
inc
and
mov
cmpsb
xor
pushf
sti
lds
sbb
pop
mov
push
xor
sbb
pop
mov
loope
insb
or
or
add
out
push
aad
popa
fildll
adc
inc
add
pop
popa
pop
or
or
ja
inc
sbb
adc
dec
inc
push
sbb
sbb
clc
and
data16
daa
inc
dec
arpl
add
push
cld
fs
rorb
repz
add
cmp
aad
add
sub
in
aaa
jl
jmp
imul
adc
add
nop
inc
sub
daa
test
sub
cmp
fisttpl
jne
sub
mov
adc
push
je
sbbb
outsb
jecxz
xor
scas
cmp
je
and
lock
cmp
jne
ds
or
xchg
cmp
add
xchg
inc
xor
je
je
adc
sbb
popa
fidivrl
push
int3
mov
test
faddp
jmp
or
xchg
xchg
pop
push
pop
fwait
jle
into
xchg
cli
jmp
mov
inc
jno
cmp
loop
call
jae
add
enter
pusha
jmp
rolb
popa
add
or
icebp
inc
cmp
jne
and
loopne
addl
test
pop
jno
push
push
ss
push
inc
jmp
fisubrs
ficoml
cmp
xor
ret
clc
mov
sub
lcall
mov
pop
or
pop
shlb
jmp
add
mov
not
jo
dec
cmp
mov
push
dec
or
or
lods
stos
xor
int3
xlat
dec
enter
mov
les
cmp
jne
pop
pop
or
mov
sub
ds
push
pop
mov
roll
rorb
mov
push
jle
test
pop
sbb
cld
dec
jns
mov
lock
stos
das
fwait
lret
jae
dec
or
ds
mov
jae
imul
inc
adc
inc
or
pusha
or
std
jmp
orl
inc
sbb
sbb
push
call
adc
adc
out
mov
and
dec
ljmp
mov
or
dec
imul
mov
jmp
fs
sub
mov
pushf
inc
loope
add
xchg
decb
add
and
lds
cmp
imul
jg
jo
push
mov
jl
stos
cli
mov
lods
ret
push
push
sub
int3
rorb
push
cmp
sti
xchg
jmp
or
addr16
ret
and
cmp
dec
test
ja
es
outsb
push
adc
inc
push
jl
aas
pop
movsb
pop
push
sub
dec
push
test
psubsb
sub
loop
push
clc
and
iret
cmp
sbb
and
int3
popa
sub
imul
push
test
pop
fs
pop
ret
xchg
mov
xchg
add
push
add
inc
jp
push
mul
into
add
dec
jecxz
loopne
in
mov
push
jo
jbe
mov
and
ficoml
loop
in
in
ret
mov
push
insb
add
jne
test
clc
mov
push
je
inc
fdivrs
in
or
int
inc
push
xor
test
push
ret
and
inc
adc
adc
lods
test
mov
loope
aas
mov
and
pop
ret
aad
hlt
adc
push
dec
sbb
adcb
xchg
cwtl
mov
subl
adc
or
or
mov
in
repnz
jno
rcr
shlb
mov
ret
pop
pop
pushf
or
cmp
lods
cmpsb
push
xlat
mov
pop
dec
ret
inc
dec
lock
and
movl
int
inc
add
sbb
jae
push
or
outsb
rolb
test
xor
push
mov
mov
js
mov
cmp
ljmp
add
mov
ds
mov
shrl
push
sbb
jo
add
aaa
adc
aam
pop
inc
and
add
mov
addr16
pop
add
xor
fwait
aaa
shrb
push
add
fsubrs
arpl
fcomps
dec
push
sbb
xchg
push
xor
pop
mov
data16
push
pop
jne
pop
mov
push
mov
push
pusha
or
sub
cmp
push
add
adc
dec
in
nop
inc
push
and
push
dec
lahf
cmp
sub
add
jmp
sub
test
push
rorl
loope
es
mov
test
push
bound
mov
inc
sbb
push
test
add
adc
loopne
outsb
inc
js
test
rol
loopne
into
push
call
lahf
shll
adc
or
dec
add
imul
jle
sbb
jmp
sbb
jmp
dec
cmp
int
in
shlb
shlb
fldcw
out
dec
test
es
lock
xor
mov
repnz
popf
dec
and
dec
loopne
subb
sub
xorl
andb
nop
addl
nop
xor
out
and
mov
andl
imul
loopne
shr
rep
add
loopne
mov
mov
push
shlb
es
pop
pop
jp
push
sub
shl
xor
cwtl
nop
add
mov
or
xchg
and
lds
repnz
pop
xor
ss
jmp
inc
xor
mov
cmp
jb
push
cs
roll
pop
repz
popf
jg
or
and
add
mov
or
pop
push
leave
mov
and
or
jl
cmc
add
sbb
mov
xor
or
push
cmp
push
pop
fistpll
movsb
insb
xor
lret
or
sti
or
mov
pusha
cmp
sub
dec
jo
pushf
leave
lea
sbb
mov
aam
adc
fildl
adc
lock
push
push
sub
cld
push
dec
xor
js
mov
push
cmp
in
push
fadds
push
cmp
aaa
cmp
sbb
pusha
cmp
lock
mov
fsubrs
fisttpll
test
dec
sbb
or
sbb
xor
jbe
sahf
js
push
inc
pop
outsl
and
dec
int3
mov
jecxz
enter
pop
xchg
popf
add
orl
hlt
lea
push
rcll
cs
cltd
sbb
insl
ss
inc
lret
or
loop
lock
jns
jns
rolb
pop
clc
mov
dec
and
inc
or
mov
leave
enter
sub
dec
sbb
mov
mov
shlb
sub
inc
add
jg
mov
sar
roll
add
add
nop
adcb
mov
pop
pop
push
stos
sbb
ja
push
sub
dec
mov
sbb
sbb
sbb
shrb
addr16
push
cmp
push
xchg
pop
adc
inc
xchg
push
ret
pop
pop
loopne
fisttpl
inc
inc
mov
adc
negl
sub
lock
lcall
xchg
pop
aad
and
xchg
sbb
xchg
iret
enter
enter
add
xor
daa
std
xor
sbb
and
jo
cmc
and
adc
add
ret
dec
adc
repnz
or
movsl
xchg
push
adc
mov
cld
jmp
mov
mov
decb
add
and
cmpsl
hlt
jg
pushl
mov
dec
xor
and
adcl
js
push
icebp
or
test
cmp
lcall
adc
test
repnz
cmp
mov
or
sub
gs
sbb
sub
repz
add
or
in
test
push
xor
cmp
ja
ret
push
mov
js
icebp
pushf
test
inc
mov
or
pop
outsb
in
popa
test
add
movsl
or
out
call
icebp
neg
mov
adc
dec
sar
js
mov
and
mov
xchg
lcall
hlt
push
mov
adc
sahf
fnsave
or
lcall
mov
testl
add
mov
push
xor
jbe,pt
imul
dec
icebp
lea
xchg
push
dec
or
icebp
lods
sub
lea
lahf
jmp
or
aas
add
pusha
inc
insb
pop
cmp
push
cmpb
inc
roll
mov
mov
sub
insl
les
inc
pop
lods
inc
lods
or
inc
popa
inc
inc
push
mov
mov
pop
les
out
adc
mov
mov
rorl
cmp
loopne
mov
lahf
push
pop
in
sbb
mov
imul
inc
shlb
sub
or
ret
and
or
mull
insl
push
test
int3
push
adc
insb
xlat
jg
push
test
push
rolb
pop
lock
inc
jmp
dec
mov
decb
xchg
aam
orl
imul
cmp
ss
pop
pop
imul
shlb
jnp
das
jbe
enter
jmp
mov
xchg
dec
shlb
in
xchg
imul
sub
mov
popf
mov
out
rcll
in
int
xchg
xchg
jne
cmp
sarl
cmp
dec
xchg
adc
js
xor
es
inc
push
inc
daa
mov
ret
sub
sbb
mov
adc
negb
cmpsl
popa
xchg
push
nop
mov
inc
fwait
cmpsb
mov
push
xchg
fs
in
js
mov
jnp
add
xchg
push
cli
mov
adc
imul
pop
and
test
cld
add
mov
add
pop
cmpsl
je
mov
dec
adc
pop
js
rorl
adc
sti
sub
push
mov
les
push
mov
movsl
gs
es
mov
int3
cltd
roll
cmpsb
insl
and
xchg
add
push
mov
ret
xchg
sub
sub
test
sarb
sub
enter
mov
arpl
xchg
and
xorl
jne
fdivs
test
and
sub
test
mov
aas
and
in
cmpb
mov
mov
aaa
in
dec
or
out
jnp
orl
push
push
ret
adc
and
dec
sub
ret
addb
shlb
inc
pop
cmp
mov
mov
jne
push
mov
or
daa
dec
fcmovbe
add
dec
out
sarb
popf
or
fcoml
js
jecxz
or
and
or
pusha
nop
nop
dec
lret
ds
xor
testb
mov
dec
in
mov
orl
sbb
adc
push
inc
lds
daa
sub
lods
dec
or
add
jmp
loope
out
fwait
push
test
fsubrs
mov
cmp
xor
dec
fdivs
fdivl
inc
mov
adc
fsubr
aam
orb
repz
inc
mov
into
mov
push
pop
test
popa
and
orps
out
add
test
mov
dec
hlt
or
dec
dec
sub
loopne
rclb
dec
insb
push
push
push
movsb
adc
mov
mov
fwait
es
add
and
faddp
je
xchg
adc
push
cmp
roll
xchg
dec
add
hlt
daa
divl
aas
in
insl
lds
jg
xchg
and
cli
jp
push
and
inc
sub
mov
inc
adc
mov
adc
pop
addr16
and
push
addb
enter
adc
cltd
mov
mov
add
cmpsl
adc
sbb
jl
rorb
adc
adc
adc
mov
outsl
adc
dec
or
ja
cmpsl
lret
je
enter
xor
or
or
adc
ret
imul
cmp
pushf
inc
iret
mov
inc
movsb
xchg
ljmp
out
xor
insb
cmp
les
push
cmp
push
cmp
sbb
and
lcall
and
mov
push
inc
pusha
and
push
push
cmp
shlb
inc
daa
jb
or
dec
xlat
shrb
pusha
orl
dec
jecxz
js
pop
mov
mov
add
jge
orl
lret
inc
add
push
fadds
stc
push
stos
push
sbb
shlb
xlat
pop
and
inc
dec
dec
ficoms
xlat
clc
inc
jb
js
scas
pop
xorl
into
decb
pushl
lea
lea
mov
sbb
jb
and
xchg
dec
or
pop
imul
int3
lahf
les
mov
dec
and
xor
xchg
cld
add
addl
mov
add
adc
in
mov
loope
push
cmp
pop
andl
pop
movsl
cmp
or
cmp
shlb
into
je
xchg
loop
sbb
inc
mov
movsl
add
adc
cmpb
adc
lods
sbb
ret
mov
les
and
and
into
vsubsd
fsubs
aaa
jo
std
dec
adc
in
sti
cmp
lods
call
lea
daa
or
mov
push
cmp
jne
scas
out
and
int
mov
add
xchg
les
push
out
dec
leave
inc
popa
add
call
cmpl
fsubs
pushf
xchg
sbb
nop
imul
testb
in
pop
sbb
adc
movsl
sbb
mov
fisubrs
dec
xlat
scas
sub
popf
lods
ret
jb
sbb
lret
ror
adc
mov
adc
mov
push
popa
or
jl
movl
or
dec
sbb
mov
shrl
dec
xor
xor
mov
test
subl
jge
repnz
jge
and
add
mov
test
sbb
pop
repnz
inc
rolb
ss
pushf
test
dec
jl
and
jge
fildl
ret
mov
test
icebp
fistps
notl
xor
dec
push
je
dec
jne
and
imulb
jmp
xor
adc
push
and
adc
les
lcall
nop
pop
lods
jne
sar
jp
cmp
leave
inc
lahf
xchg
dec
push
int3
pop
dec
mov
repz
jno
ficompl
xchg
sub
sub
js
mov
xchg
jge
or
and
sti
andl
mov
push
or
inc
jg
daa
inc
nop
out
sub
sar
divb
dec
mov
lea
cli
jb
lea
or
adc
cmp
lret
add
lea
sub
rcrl
ja
xchg
fcmovu
dec
das
das
jecxz
je
rolb
xor
adc
and
mov
les
adc
test
xor
push
es
xor
sbb
xchg
mov
xorl
fiaddl
adc
and
dec
filds
lods
cmp
testb
adc
mov
int3
mov
je
xor
dec
adc
inc
fstl
or
test
or
sub
pusha
pop
jp
cmp
es
lock
add
or
or
call
loope
sub
in
dec
and
pop
push
xor
in
inc
mov
mov
or
inc
add
in
pop
dec
cmp
push
dec
push
movsb
ret
xchg
loopne
aaa
push
or
int3
mov
mov
shr
and
xchg
je
aaa
dec
add
cmpsl
js
pop
lret
push
adc
andl
mov
adc
xor
inc
and
mov
jmp
adcb
xchg
pop
sub
cmp
mov
nop
leave
lcall
lea
hlt
xor
icebp
popa
pop
es
aaa
add
or
arpl
loopne
xorb
adc
push
std
push
pop
jl
and
cmp
sub
mov
xor
or
ret
lods
mov
xchg
cmc
or
sbb
push
imul
cmp
out
xchg
das
adc
push
movsl
adc
and
fistl
jne
adc
pop
mov
dec
add
gs
mov
rol
inc
add
push
and
push
add
mov
dec
les
dec
add
push
ds
lret
xor
mov
dec
cltd
cmpb
xor
cmp
push
push
and
sub
xchg
lods
mov
leave
mov
es
inc
dec
adc
lods
test
add
push
mov
push
repnz
mov
bound
pusha
fwait
push
adc
data16
jo
or
adc
push
cld
nop
push
adc
sbb
and
jg
ja
pop
data16
jge
in
mov
movsl
push
iret
test
call
inc
cmp
jl
adc
mov
pop
jae
repz
sbb
dec
add
ret
inc
ret
sbb
int3
rcll
and
mov
popl
and
scas
push
movsl
add
sti
dec
jmp
pop
enter
insb
mov
scas
add
mov
mov
lea
add
xchg
inc
shll
in
mov
addb
sub
in
ja
push
pop
sub
andb
xchg
sbb
dec
pop
insl
cmp
push
pop
jae
inc
popf
fmul
mov
add
sub
in
fcmovnb
xchg
push
mov
fcom
mov
inc
cmp
rorl
add
mov
out
call
cmpsb
mov
xchg
cmp
push
sub
in
imul
nop
pop
sti
ret
xor
in
or
pop
or
enter
or
dec
push
movsb
mov
scas
mov
or
mov
lods
mov
stc
and
pusha
sub
mov
clc
or
fiadds
lret
sahf
and
mov
jae
pop
mov
dec
mov
cmp
sbb
sbb
inc
in
cmp
adc
lods
lock
push
add
das
mov
addb
adc
sub
or
inc
dec
sbbl
test
push
mov
das
jp
adc
shll
addr16
mov
dec
xor
xor
push
mov
subl
sarb
pop
test
test
sbb
inc
pop
adc
aam
sbb
je
mov
sbb
lock
push
je
incl
inc
cs
mov
cmp
jle
dec
pop
movsl
je
aam
dec
and
dec
mov
inc
add
int3
rcrb
sbb
pop
push
addr16
add
push
lea
and
mov
xor
push
lea
shl
fwait
popf
mov
adc
pop
push
mov
jnp
rolb
pusha
loopne
push
outsb
push
xchg
sub
aad
sub
cmp
out
sbb
cmp
cmp
dec
jne
xor
adcl
jl
test
dec
popa
sahf
aam
rcrl
push
test
mov
push
push
sbb
cmp
jne
popf
pop
lock
dec
cwtl
mov
ds
push
push
push
test
or
inc
ret
jge
inc
addr16
jns
dec
in
jo
adc
xchg
sub
push
aas
add
inc
pop
and
cli
ret
dec
insb
cmp
pop
imul
add
or
add
lods
or
aad
pop
jge
cmpsb
jge
call
push
fstps
add
ret
mov
push
pop
mov
stc
fwait
add
fimull
xor
movsb
dec
dec
sbb
cmp
and
jl
in
jl
fwait
pushf
sbb
lds
leave
xchg
xor
sbb
add
pop
sbb
js
inc
fidivrs
xor
and
sub
or
push
add
dec
xor
push
xchg
adc
jmp
or
in
or
addl
add
add
shll
fistps
xor
mov
andb
push
mov
or
sbb
fwait
and
adc
adc
inc
sahf
inc
push
xor
or
push
jns
testl
and
xchg
movsb
pop
std
aas
movl
test
jae
xchg
add
push
sti
push
test
xchg
or
in
mov
gs
cmp
add
popa
out
movsb
arpl
jb
pop
push
sub
insl
cmp
inc
shrb
orb
xchg
add
in
pushl
loopne
not
cld
pusha
mov
dec
or
js
pop
sub
dec
cmp
xor
jns
jge
and
push
or
xor
or
mov
mov
inc
out
sbb
or
push
xchg
repnz
sarb
and
push
xor
cwtl
pop
mov
subl
mov
lods
mov
bound
cltd
loopne
out
das
pop
sub
dec
xor
sbb
nop
mov
mov
and
fs
add
lea
cmp
cmpl
xor
pop
test
sbb
xor
ss
inc
mov
sub
mov
or
dec
cmp
je
jae
mov
cmp
int3
jno
cmc
mov
nop
lret
adc
das
je
cwtl
xlat
inc
lret
loop
dec
inc
dec
mov
inc
cmp
mov
pop
add
movsb
outsl
jne
mov
cmp
sub
inc
mov
mov
movsb
sbb
adc
sub
inc
inc
imull
movl
push
adc
mov
inc
push
mov
push
and
push
jl
adc
sub
push
lcall
sub
jns
js
mov
test
mov
shlb
push
clc
test
ja
ret
movsb
ljmp
push
mov
sahf
adc
adcb
popa
jle,pn
cmp
add
dec
lock
pop
mov
mov
push
jecxz
fmuls
sbb
mov
sub
jnp
or
adc
pminsw
shlb
pop
xlat
xor
push
inc
cld
xchg
filds
jne
fists
add
sahf
into
xor
mov
pop
adc
cmpsl
pop
mov
dec
push
mov
sub
push
jbe
jmp
mov
imul
fwait
dec
and
mul
dec
or
sbb
imul
pop
or
cltd
addb
mov
adc
sub
xlat
rcr
mov
mov
mov
mov
incl
pop
or
fwait
push
push
xor
sbb
push
dec
nop
jne
call
add
cmp
inc
sub
mov
sub
sbb
adc
sbb
int3
loopne
leave
sub
push
sbbb
push
or
adc
jmp
jmp
movsb
loope
mov
jecxz
clc
mulb
ret
xor
mov
pop
arpl
adc
mov
mov
xchg
lret
xor
jge
xchg
jl
dec
jmp
xor
adc
adc
push
cmpsb
or
cmpsl
fistl
mov
sub
out
push
mov
call
ret
push
lret
mov
and
push
xor
jge
cmp
or
hlt
cmp
cmp
pushf
xchg
add
pop
adc
adc
sub
inc
jnp
lea
pusha
and
iret
sub
lds
adc
or
mov
nop
sub
push
test
out
lea
mov
jae
test
xchg
adc
mov
leave
sbb
sbb
mov
les
sbb
push
fs
mov
sbb
push
sbb
sbb
mulb
jl
iret
fadds
xchg
add
pop
loop
xchg
enter
in
and
hlt
xor
mov
dec
stos
ficoms
pop
push
adc
pusha
inc
push
xchg
and
je,pn
jmp
and
imull
pop
pop
dec
aaa
cltd
xchg
xor
inc
leave
hlt
adc
xchg
leave
inc
sub
sub
push
inc
inc
shr
pop
leave
and
ss
or
test
jae
pop
leave
and
pop
xchg
adc
leave
xchg
jbe
push
adcl
imul
xchg
addr16
pusha
add
test
scas
mov
aad
sbb
xor
roll
inc
add
je
adc
and
and
inc
loopne
xchg
cwtl
xchg
nop
and
popa
ret
inc
popa
pop
push
add
mov
push
inc
mov
or
or
repnz
arpl
nop
adc
arpl
mov
pusha
xor
mov
sbb
bound
mov
sarl
push
push
loopne
pushf
popa
lahf
lock
xor
push
mov
sub
adc
decb
xchg
pop
pop
inc
popa
mov
loopne
dec
call
insl
and
add
and
pop
sbb
add
push
or
fcoml
push
add
mov
out
pop
enter
test
in
loopne
adc
mov
jg
cmp
jne
cmp
divb
push
and
pop
push
mov
lock
aad
fdiv
mov
sarl
dec
xchg
push
add
push
or
or
xchg
push
pop
jl
add
sub
loopne
in
push
jge
dec
js
test
shrb
lock
stos
stos
adc
or
xor
pop
sbb
push
inc
push
int3
cld
pop
cli
flds
inc
daa
push
loopne
ret
in
push
xchg
sti
jle
cwtl
loopne
or
add
sbb
cmp
add
lods
xlat
adc
lock
xchg
ja
addb
pop
es
add
sub
test
add
rclb
pop
cmpsl
test
jecxz
movsb
dec
repz
shrb
bound
mov
mov
lea
inc
fisttpl
sbb
lret
lret
lahf
mov
pop
mov
arpl
push
je
lds
dec
stos
adc
fidivl
mov
ja
and
jno
ljmp
sub
mov
in
pop
add
adc
cmp
xlat
mov
les
add
add
repnz
push
and
sbbl
inc
push
xor
mov
insb
aam
sarb
xchg
icebp
ds
or
and
cmp
icebp
mov
aas
rcrb
popf
movsb
xchg
in
or
push
and
rorb
push
and
sub
inc
push
fdivs
xor
jne
dec
jg
inc
sub
lock
mov
movb
dec
les
fidivl
popf
cwtl
adc
and
sub
jo
inc
mov
jl
sub
fmuls
jmp
mov
in
test
shlb
mov
adc
lods
jecxz
mov
movsb
inc
inc
add
jmp
shrl
movsb
jmp
fwait
dec
jmp
movsb
mov
lods
mov
es
xor
rclb
enter
orb
fsubrs
ret
adc
add
adc
ja
jl
mov
mov
adc
flds
jecxz
xor
jns
adc
jae
jle
xlat
inc
je
test
shrb
cmp
std
pop
lea
pop
mov
mov
mov
mov
cmp
push
pop
cmp
jno
rol
loopne
xchg
mov
adc
call
jbe
dec
xchg
inc
cli
inc
mov
add
inc
test
inc
push
xor
dec
sahf
bound
xor
adc
sub
jmp
cmp
xor
cmp
adc
stos
sbb
orl
ret
inc
dec
sub
mov
in
fs
sbb
jno
and
push
or
inc
jb
push
add
and
stos
mov
xchg
lcall
cld
out
inc
es
lods
sbb
sbb
cwtl
jb
sbb
test
jb
or
sbb
add
mov
pop
shr
xorb
int3
xchg
rolb
mov
inc
nop
add
sbb
loop
pop
or
jmp
xor
sbb
enter
ljmp
sbb
sbb
dec
mov
cltd
mov
mov
or
or
inc
data16
mov
adc
hlt
aaa
loopne
or
pop
cmp
jle
scas
sub
jae
inc
add
outsb
mov
sub
add
clc
roll
and
outsl
mov
lea
mov
loopne
add
aad
loopne
incb
mov
pushf
inc
lret
mov
movsb
nop
les
cmp
lock
sub
and
mov
aas
xor
jb
daa
es
inc
stc
push
dec
adc
xchg
or
xchg
push
cmpsl
push
dec
rcpps
into
pushf
imul
push
mov
dec
addr16
push
int3
dec
inc
cs
adc
push
sub
sub
mov
sub
mov
xor
xor
xor
test
add
add
popa
insb
sub
iret
pop
ret
mov
out
fistl
in
jle
jbe
test
inc
pop
inc
mov
push
dec
cltd
add
mov
insl
pop
mov
in
xor
cmp
or
nop
and
pop
or
cs
cli
sub
sbb
test
and
insb
sahf
fisubl
mov
push
push
jno
xchg
pmaxub
aam
sbb
lret
mov
sbb
xchg
testl
inc
mov
or
xchg
adc
imul
ret
add
pusha
lret
and
jnp
orb
lcall
repz
dec
insb
jns
arpl
roll
pop
push
add
lods
push
and
cmp
add
mov
mov
mov
sbb
inc
pushf
shlb
jns
sbb
and
xor
or
inc
test
mov
in
adc
movsb
push
inc
in
or
or
lcall
or
sbb
add
xor
loopne
cs
ret
mov
inc
xor
fsubs
sbb
push
das
push
pop
icebp
pop
mov
pop
add
adc
inc
lea
fisttpll
je
pop
data16
jmp
fs
xchg
jo
xchg
push
inc
adc
adc
mov
dec
adc
arpl
pop
movsb
and
lret
rorb
out
pop
lret
enterw
addb
les
cmp
hlt
shll
push
xchg
add
mov
test
fsubl
inc
faddl
sbb
clc
mov
pop
jb
xlat
jge
xor
push
cs
xor
xchg
pop
lea
inc
jge
int
push
push
xor
sbb
push
cmp
stos
push
sbb
dec
lret
enter
mov
je
stos
incl
or
xor
mov
sub
push
lock
movb
or
nop
das
jae
fimuls
mov
fs
cmp
mov
mov
movsb
rcl
adc
sub
das
leave
sub
adc
or
inc
inc
or
mov
push
mov
das
push
pusha
dec
push
sub
add
fwait
cwtl
popa
add
xor
jns
inc
add
fistpll
repz
and
adc
mov
or
xor
call
xor
out
js
stos
stc
nop
cmp
mov
test
in
add
loop
pop
inc
mov
xchg
dec
add
and
sbb
add
inc
cs
iret
clc
outsl
cmpsb
push
add
add
loopne
testl
pusha
add
push
or
jmp
inc
and
leave
cmpsl
mov
add
and
pop
in
sbb
pop
add
add
dec
push
outsl
jmp
loope
and
cmp
les
xor
fstpl
mov
mov
orl
out
cmpb
ss
js
fwait
cmp
jge
fsubrs
inc
aas
pop
sub
dec
mov
pop
jns
add
mov
push
xchg
dec
inc
ret
push
sbb
cmp
mov
inc
repnz
sbb
xor
inc
sbb
adc
mov
ret
xor
or
xchg
verw
std
adc
xor
adc
test
sub
inc
in
mov
add
dec
lahf
and
add
pop
fwait
movsb
or
add
sbb
insl
frstor
sahf
mov
sarl
jo
rol
add
xor
je
cli
push
addr16
cmp
orb
mov
cmp
in
add
jnp
sbb
cmc
dec
sbb
push
inc
inc
push
mov
add
cmp
pop
mov
inc
icebp
push
add
add
movb
fwait
push
inc
push
pop
sub
aaa
jne
pusha
add
fidivs
push
and
aam
aam
mov
ficompl
pop
fidivl
dec
add
or
test
nop
or
sti
mov
adc
movl
mov
ss
aaa
lods
mov
add
adc
jp
sub
or
push
sbb
in
ss
movb
and
cmp
dec
sbb
and
scas
add
addl
or
cmpsl
loop
mov
movl
mov
cmc
lods
cmp
push
push
or
xlat
mov
imul
popf
or
mov
add
push
and
and
jne
add
orb
pop
cwtl
inc
jl
dec
pusha
mov
lcall
or
xchg
lea
sti
inc
pop
addl
push
mov
rcr
imul
cmp
and
pop
mov
icebp
mov
fdivrs
fcoml
sbb
out
lock
mov
pusha
xor
or
out
mov
in
out
inc
jmp
xor
mov
jle
popa
loopne
adc
cmp
pop
out
lret
jle
pop
mov
and
jo
loop
aas
xchg
das
movsb
adc
test
movl
cmpl
pop
mov
lea
push
push
add
mov
pusha
push
jecxz
pop
inc
or
iret
sti
lds
les
adc
jne
cmpb
or
mov
das
imul
ficompl
test
shl
mov
fistl
aas
mov
jae
out
and
xor
jl
cmp
mov
push
push
mov
fists
imul
movsl
in
mov
cmp
std
sub
mov
pop
insb
leave
cmpl
loopne
cmp
add
jno
scas
test
scas
jecxz
adc
inc
adc
test
fdivl
pop
cmp
nop
ja
push
cld
sbb
in
push
jmp
in
add
or
push
sbb
out
ret
push
mov
lret
sahf
mov
or
loope
mov
xlat
stos
dec
arpl
jne
movsbw
xor
jno
in
jbe
mov
stos
or
je
adc
je
or
inc
push
arpl
js
aad
es
hlt
mov
insl
hlt
push
ret
outsl
adc
mov
in
cmp
adc
mov
outsb
or
outsb
lea
rcrl
xchg
mov
mov
sbbl
movsl
orl
push
loopne
addr16
es
inc
adc
pop
and
cmp
arpl
mov
sub
sti
dec
dec
inc
lcall
lods
cmpsb
or
aad
je
pop
sub
fwait
sub
rcll
sbb
xor
lea
movsb
or
dec
fcomps
lods
sbb
sub
loope
lock
out
sub
and
jb
mov
sub
xchg
push
xor
pop
jmp
arpl
or
add
pop
fcomps
mov
mov
mov
sti
int3
sbb
xchg
push
inc
mov
pop
sarb
lea
fsubs
enter
adc
sub
xchg
mov
or
ret
sahf
scas
pop
call
or
mov
movsl
adc
add
pusha
out
cli
sub
sbb
lret
in
stos
popa
xor
icebp
mov
ja
test
jne
pop
test
cs
jg
lock
int3
push
mov
dec
and
ljmp
push
in
jg
or
cmp
mov
sub
push
ret
imul
jmp
inc
imul
lret
mov
int
in
sbb
sbb
add
and
clc
or
pop
add
jne
dec
call
test
and
fldt
add
push
fnstenv
adc
jge
std
les
icebp
add
cmp
xchg
stos
add
std
push
mov
dec
or
in
rclb
cmp
pop
mov
popf
dec
cmp
stos
mov
dec
icebp
jnp
rorb
add
movl
gs
or
pop
dec
push
cli
or
mov
inc
mov
jns
and
adc
dec
movsb
pop
xor
loope
mov
daa
adc
mov
push
inc
bound
inc
jl
icebp
mov
xorl
mov
adc
test
jae
repnz
cmp
or
adc
xchg
inc
xor
jne
or
decl
scas
mov
movl
enter
mov
inc
lea
mov
push
pop
push
jle
clc
mov
test
jg
adc
clc
mov
into
popa
mov
aam
rcrb
push
mov
add
jno
add
xchg
xchg
shrb
sbb
xor
rolb
xchg
in
adc
mov
jbe
loopne
add
mov
mov
pusha
mov
out
inc
enter
aas
inc
adc
push
hlt
js
push
and
inc
lea
and
popa
ja
sub
sub
pop
adc
dec
aam
clc
sub
aam
cmpsb
mov
and
push
add
push
push
push
push
pusha
in
mov
shlb
sub
add
je
mov
jge
add
ljmp
call
cmp
jne
sub
das
jbe
cmp
jne
out
sahf
fiadds
outsb
adc
jle
add
repnz
cmp
adc
lea
mov
iret
xchg
nop
xor
clc
push
push
inc
dec
add
out
xor
fwait
repnz
xchg
nop
xchg
shrb
adc
pushl
pushf
nop
push
fimull
sbb
cs
sahf
jge
inc
loopne
pop
addr16
or
mov
sub
ds
mov
cmpb
jo
movsl
ficoml
pushf
jmp
push
inc
cwtl
sub
dec
mov
push
mov
cmpsl
adc
push
mov
xchg
lea
in
js
imul
mov
xchg
call
cwtl
mov
jne
std
stc
or
cmp
js
add
xor
push
sbb
jbe
push
test
xchg
cmpb
adc
sbb
les
cmpl
push
rcll
popf
or
scas
movsb
mov
ret
ss
cmp
out
mov
ret
ljmp
ret
adcb
push
shl
sbb
jp
add
adc
sbb
dec
and
dec
test
test
pop
pop
aaa
arpl
stos
enter
push
add
xor
push
sub
outsl
mov
pop
and
jecxz
cmp
xchg
push
test
divl
jg
push
push
shll
arpl
sub
adc
pop
in
and
jno
add
cli
mov
adc
jb
cmp
out
push
cmp
lcall
adc
adc
popa
mov
or
add
and
mov
aad
jmp
add
xchg
adc
adc
mov
dec
cmp
fcomip
xor
add
xchg
pop
sahf
mov
mov
xor
jg
pop
and
ss
stos
push
xorb
hlt
push
outsb
mov
adc
jbe
testl
push
in
cld
push
sbb
adc
pop
dec
aaa
call
inc
shll
or
inc
das
aad
andl
adc
and
shlb
and
insb
lods
jle
jno
in
cmc
stc
rcrb
cmp
sti
jnp
jb
pop
jmp
and
dec
mov
push
fnstcw
scas
push
int3
pop
cs
or
cmp
or
xor
mov
jae
enter
in
rorb
push
sbb
dec
pop
mov
and
pusha
dec
inc
rol
jmp
outsl
adc
imul
je
push
sub
loopne
int3
pop
push
mov
pop
clc
cwtl
les
push
test
fsubl
xor
xor
xchg
inc
cmp
push
xchg
dec
roll
mov
inc
or
push
inc
popf
dec
loopne
fiaddl
push
jbe
aaa
xchg
xchg
or
arpl
stc
test
andb
add
and
popa
xchg
dec
and
sbb
add
shl
jnp
push
sub
jge
or
and
pushl
ret
mov
frstor
xchg
adc
mov
xchg
mov
sbb
dec
popa
pop
stos
and
push
pop
add
into
aas
rcll
and
popa
addr16
imul
pop
push
cmpsl
cmp
fsubrs
sub
test
fadds
lea
push
loopne
or
sub
push
inc
loopne
lret
adc
xchg
mov
dec
push
xor
idivl
nop
push
pusha
mov
insb
lea
lret
pop
inc
fimull
clts
xchg
xor
hlt
xchg
out
mov
pop
add
mov
mov
stc
jle
add
cmpw
sbb
mov
jne
push
push
adc
pop
pop
adc
ljmp
pop
mov
add
sar
or
push
je
fdivl
mov
pop
cmp
sahf
mov
pusha
adc
pop
jns
rcr
ss
sbb
mov
add
nop
pop
and
icebp
jb
mov
pop
imulb
or
les
pusha
pusha
es
shlb
dec
push
sub
ret
or
sbb
sub
jmp
pop
xchg
or
jnp
pop
lcall
dec
movzwl
jnp
add
pop
or
movzbl
push
sti
sarb
adc
andl
jmp
xchg
sbb
faddl
daa
mov
mov
adc
jae
lea
rol
xorl
mov
cltd
nop
add
add
mov
cmp
icebp
aad
icebp
adc
mov
cs
mov
pop
cmp
mov
fs
pop
cs
bound
hlt
jne
jb
fs
or
add
nop
insl
mov
add
pop
push
pop
push
dec
xor
jo
push
insb
cmp
fdivl
and
pushf
xor
adc
divps
insl
adc
sbb
inc
mov
push
and
je
roll
inc
lds
imul
mov
pushf
push
sbb
inc
jge
loopne
pop
add
sbb
enter
shlb
mov
xlat
sbb
or
push
push
cmp
mov
scas
mov
jne
push
mov
add
push
cltd
pop
fnstcw
pushf
adc
shlb
imul
xor
test
sbb
cmp
push
mov
and
jbe
out
ss
cmp
mov
dec
xchg
jo
mov
adc
dec
jae
mov
inc
sub
sbb
push
sub
mov
lea
mov
sub
push
add
dec
inc
enter
add
xor
jns
sub
or
orl
jecxz
jbe
sbb
inc
cli
adc
popa
scas
nop
dec
or
nop
pop
in
push
sbb
add
rclb
inc
add
insl
je
pop
ljmp
pop
cld
push
ret
fimull
cmpl
les
add
jne
in
or
sbb
or
aad
mov
loop
or
scas
mov
mov
fcompl
push
and
jl
bound
jl
push
cmp
test
xor
sbb
lea
js
int3
push
sbb
insb
repnz
mov
push
js
inc
dec
pop
jne
test
jmp
adc
aaa
subb
outsl
or
jo
pusha
push
and
loop
add
mov
cli
adc
adc
and
pop
je
push
das
add
fcoms
push
and
xchg
push
fldl
dec
add
and
sbb
insb
bnd
mov
imull
in
sbb
in
sbb
mov
sub
sbb
rcrb
pop
inc
adc
sbb
xor
test
lock
sbbl
psubw
mov
and
adc
sub
mov
cs
dec
bound
mov
rcrl
mov
lock
scas
push
lahf
in
xor
adc
cmc
inc
dec
in
mov
xor
and
clc
rcrl
cmp
shrl
leave
dec
push
push
or
lea
test
mov
shlb
sub
inc
dec
cld
stos
sub
shlb
rclb
aaa
sti
aas
or
sbb
lea
jmp
push
push
lret
addl
testl
or
xor
cmp
shlb
test
fucomip
inc
push
add
dec
test
and
push
or
sub
mov
gs
dec
sahf
lea
les
sarb
or
stos
or
xor
mov
xchg
xor
inc
cli
jnp
add
xor
and
adc
or
mov
push
sbb
mov
and
adc
or
xorb
xchg
cmp
pop
ret
test
mov
dec
clc
inc
cmc
ret
pop
or
icebp
push
add
add
cmp
jnp
lret
push
mov
adc
inc
inc
jmp
push
xchg
ss
pop
sub
pop
dec
in
pusha
jg
push
js
pusha
popa
dec
inc
or
jns
inc
dec
jo
and
jne
ss
mov
push
push
call
sbb
sub
jne
mov
lock
in
push
test
outsb
mov
inc
test
and
xchg
sbb
clc
fcoms
fwait
rorl
sbb
pop
push
dec
push
repnz
mov
cmpb
int3
adc
add
and
int3
xor
insl
loopne
dec
add
add
das
cmc
sub
arpl
je
jge
mov
ss
in
mov
inc
int3
into
shrb
int3
dec
push
or
and
out
or
or
pusha
enter
jb
stos
pusha
pop
push
loopne
call
jecxz
adc
clc
push
pop
scas
repz
iretw
push
stos
cmpsb
call
xchg
add
out
cmc
lret
mov
cs
xchg
push
pop
rcl
inc
adc
mov
dec
insl
nopl
add
jmp
lret
mov
insl
sub
aad
inc
stos
jmp
pop
scas
push
jmp
rolb
cmpb
inc
outsb
push
push
dec
mov
in
daa
lods
lret
out
push
and
enter
push
gs
inc
int
and
adc
jle
xor
mov
idiv
jmp
add
icebp
push
adc
add
ret
push
js
adc
inc
adc
aaa
shlb
ds
xor
pop
jne
cmp
pop
test
pop
repz
mov
outsb
and
pop
add
sbb
clc
push
xor
or
lcall
icebp
cmpsb
cld
hlt
rorl
ret
enter
sub
insl
loopne
rclb
mov
add
or
pop
lods
dec
push
push
push
push
add
sbb
pop
pop
pop
jo
cmpsl
popf
dec
and
inc
popf
cli
sbb
add
push
je
fistpl
adc
cmp
jmp
push
jg
add
aad
lods
push
repz
cmp
sti
adc
add
sbb
mov
pop
pusha
dec
and
push
cmp
adc
out
sbb
pop
fs
or
sbb
adc
xor
idivl
inc
mov
xchg
jl
sbb
decl
leave
and
jmp
cmp
jne
xor
rolb
out
scas
je
push
clc
sub
cld
inc
mov
cmpsl
nop
pop
pop
sub
cmp
xchg
or
mul
xor
stc
add
sbb
decb
add
fstp
paddw
adc
insb
cmp
insb
std
inc
dec
mov
inc
sbb
psrlq
lock
icebp
and
sbb
adc
inc
or
popl
dec
xor
dec
push
add
or
sub
cmc
inc
mov
sub
aas
push
fs
lea
in
lcall
jo
ds
mov
adc
lea
and
cld
fildl
das
sub
icebp
push
fadds
flds
fcoms
push
mov
adc
sbb
sbb
clc
adc
xchg
in
sbb
lahf
add
xchg
pusha
inc
jmp
mov
push
inc
popl
rcrb
clc
or
dec
cmp
sbb
divb
xor
dec
lret
gs
fildl
jo
mov
ret
mov
push
insl
dec
lret
add
bound
pop
add
repnz
mov
repnz
and
push
push
lods
pop
sub
dec
mov
leave
out
pop
adc
fwait
scas
sub
insl
and
mov
inc
filds
xchg
dec
jne
push
pop
add
lea
and
pop
rolb
xor
xchg
xor
pop
inc
add
push
sub
ss
repz
or
push
xchg
shll
xor
mov
jno
inc
test
push
outsl
imul
xor
pop
repnz
and
mov
jo
ss
ss
testb
idivl
xchg
testb
or
mov
or
or
xchg
adcl
xor
jb
jbe
test
clc
repnz
push
inc
fsubl
and
nop
pop
dec
push
outsl
aad
popa
loopne
sti
mov
jne
mov
add
inc
lock
lea
jo
loopne
jbe
cmp
rolb
fwait
ja
push
dec
jmp
daa
mov
push
test
ss
fs
test
dec
jae
ret
add
jae
loop
jo
dec
add
loope
insl
xor
sbb
or
sub
fsubs
inc
sbb
xor
adc
movl
adc
mov
imul
dec
push
sub
inc
inc
std
addr16
pop
jno
imul
test
call
sub
sbb
hlt
inc
cmc
adc
ss
movsb
dec
mov
xlat
sub
test
fistl
sbb
and
mulb
ret
sbb
cmp
ss
stc
dec
sbb
movaps
bound
pop
and
sub
xchg
dec
sub
cmpsb
sbb
cmp
movsl
and
fcomps
adc
aad
aas
push
pusha
subl
mov
xchg
inc
push
lahf
mov
jmp
adc
add
sub
xchg
scas
lods
andl
rcl
inc
push
lret
xchg
push
push
fwait
mov
scas
loopne
cltd
cli
call
lods
in
repnz
mov
xchg
push
or
xor
xor
and
mov
aad
push
bound
or
push
aad
and
push
jns
add
inc
scas
cmp
xchg
add
daa
popf
cld
ret
mov
sub
stos
in
jb
fiaddl
repnz
sub
mov
mov
push
dec
jbe
gs
push
dec
cs
jl
sub
in
sub
push
scas
or
mov
xchg
xchg
xor
mov
add
add
andl
push
cwtl
inc
shlb
or
add
adc
hlt
orb
test
gs
dec
sub
mov
dec
mov
mov
fisttps
lcall
rcr
mov
xchg
push
xchg
add
add
sub
gs
push
push
jnp
sbbl
mov
icebp
insb
pop
lea
rolb
xor
nop
ss
and
adc
mov
dec
jae
mov
movsb
and
shrb
in
sbb
fisubl
leave
or
mov
shrb
cmp
fdivrs
lret
rcrb
push
adc
jo
mov
cwtl
cmpsb
dec
xchg
xchg
lock
popa
ret
sbb
cmp
add
push
push
jns
inc
lcall
or
movsb
int
arpl
cmp
mov
aas
push
pop
decb
push
orb
or
mov
mov
out
je
stos
or
cmp
and
xchg
mov
ss
and
pop
xor
sbb
movsb
push
sbb
pop
push
ss
aaa
and
loope
sbb
push
or
jno
mov
add
inc
mov
push
iret
mov
inc
or
push
and
cmp
add
jp
sub
sbb
and
adc
xor
fiadds
js
dec
xchg
in
and
dec
cwtl
bound
roll
and
add
movzwl
add
adc
popa
xor
sbb
pop
gs
inc
sub
sbb
sub
data16
or
ja
inc
rclb
andl
inc
fdivrs
sub
daa
jne
push
fiadds
xchg
adc
adc
in
inc
jo
sbb
ss
push
loopne
cmp
je
pop
adc
into
sub
add
or
push
inc
push
loope
mov
mov
add
adc
adc
or
or
xor
cmp
sahf
repnz
cltd
or
mov
gs
movsl
imul
outsl
or
out
push
gs
sub
push
xor
imul
cmp
dec
movb
hlt
mov
xchg
push
mov
sub
ja
loopne
into
sbb
in
cmpsb
fsts
into
loopne
xchg
or
ds
lcall
clc
mov
push
and
mov
adc
test
inc
mov
arpl
push
sub
clc
push
xchg
jno
outsl
cmp
mov
push
jbe
xchg
xor
pop
mov
adc
scas
xor
fs
push
sbb
pop
jae
xor
pop
pushf
pop
sarl
add
sbb
or
pop
jecxz
sti
adc
roll
les
pop
jae
mov
or
sub
daa
test
mov
mov
jae
jge
enter
adc
test
xor
enter
sbb
movsl
js
inc
lcall
loopne
pusha
sbb
dec
add
sbb
mov
je
add
push
scas
cmp
jo
push
arpl
push
popa
jno
adc
rcll
add
fdivs
mov
jl
es
xlat
jge
and
je
sub
scas
jmp
outsb
jns
das
icebp
push
lds
xchg
sbb
pop
imulb
and
mov
popl
andb
sbb
ds
and
lock
xchg
xor
dec
dec
sbb
in
call
fbld
sbb
dec
gs
and
or
pop
jb
and
lock
push
mov
hlt
inc
jae
sub
icebp
in
cs
adc
adc
rcrl
sbb
call
je
pop
pop
mov
jns
loopne
xchg
jbe
inc
jge
mov
add
push
push
es
xchg
adcl
cmp
add
jl
inc
push
ja
clc
movsl
cmp
rcrl
nop
pop
jns
and
push
cmp
cmp
jg
or
jne
push
lods
lcall
or
adcb
and
repz
addb
pusha
mov
or
lret
ret
mov
test
nop
mov
test
ja
mov
or
xchg
mov
push
mov
das
pop
lock
mov
jge
enter
inc
jns
bound
cmc
or
push
mov
xor
and
add
sub
sarb
mov
jmp
push
lds
in
jbe
mov
sbb
add
jmp
and
push
cmp
jmp
movsb
imul
aad
cmc
add
xchg
and
ret
inc
nop
out
or
mov
dec
call
das
and
sbb
or
dec
or
insb
push
mov
pop
xor
sti
add
or
lea
xor
sahf
out
orl
pop
js
sbb
dec
daa
stos
mov
pop
pusha
cmp
or
or
pop
push
push
popa
add
call
rorb
imul
les
pop
or
or
dec
sbb
les
mov
or
test
ret
cmpsb
or
pop
mov
add
push
adc
mov
jg
fnsave
fiaddl
lea
sub
xor
add
stos
add
sub
sub
adc
sub
lea
data16
jl
jmp
mov
jae
aaa
sub
sbb
pusha
sbb
or
fwait
les
orl
dec
repz
test
mov
lea
movsl
mov
adc
vprotb
cmp
xor
or
and
jnp
mov
pop
mov
xor
mov
shlb
jae
into
pop
and
lret
push
cmpsb
sbb
pop
lahf
mov
popa
fwait
sub
push
push
mov
cmpsl
mov
lret
std
or
test
dec
cmpsb
and
test
or
ss
fcoml
dec
xchg
stos
adc
aaa
and
arpl
push
cltd
bound
jb
push
xchg
or
imul
and
stc
push
das
fcomps
or
push
adc
loopne
mov
add
jg
push
adc
fcomps
ret
inc
xchg
test
sbb
push
adc
jne
addl
push
rclb
cmp
je
adc
pop
or
xor
mov
push
data16
xchg
in
cmp
push
mov
das
ficompl
add
sbb
movsl
jo
fldt
sub
or
fbstp
lock
jle
arpl
pop
push
push
jmp
xor
shlb
fs
sub
push
push
addl
push
fldenv
loop
sbbb
test
pop
insl
mov
push
and
mov
or
push
es
loope
in
and
shl
push
shlb
jo
dec
add
cmp
push
dec
cli
mov
insb
jb
loope
xchg
nop
ficoml
popa
add
or
cmp
mov
jecxz
loope
adc
push
into
xor
jno
mov
cmpsl
scas
mov
mov
test
inc
arpl
xchg
adc
std
adc
cmp
push
daa
outsb
jg
mov
add
inc
je
frstor
pop
sub
aas
mov
pop
xor
iret
push
addl
or
push
add
mov
xchg
inc
sub
daa
xchg
insb
add
test
push
leave
lods
mov
fldcw
xor
hlt
insb
add
or
and
xchg
jo
push
push
popa
push
and
ss
jo
out
fisttpl
inc
sub
and
inc
dec
xchg
mov
outsb
sbb
adc
fcom
lds
nop
add
adc
adcl
add
cmp
ja
push
lods
push
add
sbb
jg
xchg
xor
add
and
adc
fs
add
xchg
and
push
int3
ss
xchg
mov
mov
or
push
test
mov
push
xor
mov
lods
inc
cwtl
add
mov
sub
stos
pop
xor
sub
pop
sbbl
aad
in
add
out
and
cmp
sub
call
xchg
add
pop
adc
xchg
in
adc
test
inc
mov
fsts
sbb
fcoms
mov
leave
pop
adc
imul
mov
xchg
dec
and
jb
lahf
and
inc
in
mov
xorb
movl
rcrl
xchg
or
or
pop
insl
jmp
fwait
pop
roll
and
cmp
and
sub
pop
xor
cmp
cwtl
push
mov
inc
idivb
push
xchg
das
sarb
mov
testb
ljmp
and
pop
mov
xchg
mov
add
imul
adc
inc
xchg
mov
pop
cld
push
mov
inc
xor
or
jp
push
nop
scas
movsb
or
push
test
lea
ss
pop
daa
lcall
xchg
xchg
fs
push
sub
xchg
and
xor
fsubs
xchg
mov
mov
rcr
fcom
sbb
call
sbb
jecxz
cmp
cmp
jecxz
mov
ret
jg
faddl
jg
sbb
data16
fstps
push
jg
add
cmp
jl
push
cmp
push
cmp
jle
cmp
jge
jle
jp
push
cmp
cmp
inc
add
popl
decb
add
inc
jmp
mov
add
mov
mov
mov
or
jne
mull
jp
lahf
adc
mov
cltd
pop
idiv
pop
movsb
cs
lock
inc
dec
adc
cmp
and
push
mov
mov
pusha
and
inc
jnp
fs
or
push
dec
mov
cmp
sbb
inc
jmp
add
imul
push
fs
push
or
popa
hlt
popf
mov
lea
and
push
imul
out
repz
mov
shll
dec
test
add
cmp
repz
sub
mov
cmp
xor
adc
and
test
js
sbb
cmp
lea
pop
test
int
cmp
push
xchg
mov
sub
mov
rcll
mov
or
ror
pop
nop
dec
push
insl
iret
or
mov
dec
push
rcrl
add
mov
mulps
or
les
or
or
cltd
sarb
aam
loopne
sub
cmp
jle
and
or
mov
dec
add
xchg
aad
dec
cmpsl
pop
and
or
mov
stos
outsl
mov
xchg
mov
movsl
adc
mov
sub
inc
sbb
movsb
lods
fcomps
push
sub
nop
lret
fcoml
pop
push
inc
enter
sbb
push
and
fs
lcall
rcl
cwtl
dec
and
dec
and
push
and
je
stos
push
and
popa
ret
mov
in
hlt
xchg
fldt
mov
insb
jae
pushf
mov
push
push
xor
fadds
or
add
test
ret
cld
dec
mov
xor
sbb
inc
jecxz
xchg
sub
jo
mov
jnp
mov
mov
rclb
fs
xchg
cmp
mov
fwait
addb
and
outsb
stc
add
nop
rcr
cs
push
outsb
and
dec
cmpsb
loopne
jnp
sub
xorb
fstl
adcl
ljmp
test
imul
mov
into
sbb
cmc
push
jecxz
xchg
sbb
test
ds
xchg
fwait
cmpsb
dec
push
and
enter
push
and
pop
addb
nop
and
adc
and
adc
adc
mov
fs
adc
fstps
jo
mov
pop
and
nop
add
xchg
xchg
adc
mov
lods
lea
test
ret
push
rorl
aam
mov
xchg
in
insb
pop
mov
push
and
mov
dec
xor
in
sbb
lret
mov
dec
adc
loope
and
xor
clc
ds
xor
mov
enter
lods
aas
mov
xor
rorl
mov
cli
ja
inc
mov
xchg
out
imul
test
pop
int
int3
popa
stc
sbb
mov
inc
cs
mov
ja
iret
lea
fs
mov
xchg
out
test
push
sub
lock
cmp
dec
int3
add
mov
add
sbb
loopne
sbb
sbb
sysret
lcall
or
pop
pusha
mov
add
aaa
test
ret
mov
movsb
sub
adc
gs
or
push
pop
and
icebp
in
lea
cltd
jbe
and
add
adc
adc
mov
sub
xchg
test
add
push
xor
inc
and
push
rcrb
xor
ret
int3
inc
jge
xchg
inc
and
inc
xchg
or
xor
mov
jb
mov
and
std
jb
test
inc
cmp
sbb
flds
fldl
out
aam
push
inc
inc
adc
out
lock
test
arpl
or
xor
enter
imul
cmp
jne
fimull
adc
push
outsb
jns
pop
scas
lock
add
push
rcll
sbb
pushf
pop
subl
or
adc
fildl
in
inc
add
scas
icebp
dec
loopne
add
jp
jne
sub
in
push
inc
shll
pusha
leave
daa
fdivrs
add
inc
xor
sti
nop
lock
mov
mov
pop
xor
jae
jg
add
js
cmp
adc
lods
popa
push
sub
or
arpl
and
pop
pop
les
mov
subb
adc
add
or
xor
or
lea
ret
adc
ret
inc
xor
cli
iret
cmp
ffreep
jecxz
add
sub
insb
cmp
inc
add
inc
cmp
loopne
mov
push
cmp
push
jle
add
pop
mov
stc
or
mov
inc
inc
push
sub
imul
jbe
mov
xor
in
orb
or
out
or
add
adc
or
push
rorb
xchg
jmp
add
loopne
les
xor
xchg
pop
movl
xor
fldl
push
sbb
std
jbe
xchg
inc
movl
and
fnstsw
dec
decb
bound
adc
mov
pop
or
fistpll
mov
daa
pop
and
loope
fsubrp
xchg
or
fs
xchg
inc
xchg
or
ficoml
addl
mov
aad
sbb
imulb
fs
mov
xor
aam
subb
leave
rclb
call
loopne
pusha
adc
popf
xchg
shll
inc
jo
pop
mov
stc
jge
add
sbb
loope
insb
cmpb
or
filds
pop
xchg
or
mov
test
push
sbb
push
inc
hlt
divb
or
iret
xlat
add
jnp
xchg
pop
in
ret
ja
dec
push
mov
aaa
cltd
inc
mov
and
pop
push
push
mov
sbb
mov
andl
mov
push
jge
and
loopne
push
jle
mov
pop
mov
inc
js
dec
out
or
fiaddl
mov
fbstp
mov
lea
cmp
inc
inc
jg
jb
stos
xor
shld
add
ljmp
ja
jb
ja
lea
push
push
and
add
push
je
or
or
popa
or
push
mov
push
adc
push
push
arpl
mov
jle
or
cli
adc
cmp
jecxz
push
push
stos
mov
lods
push
add
pop
pop
push
adc
je
int
inc
enter
test
sbb
inc
or
outsl
adc
xor
dec
push
mov
push
or
jne
insl
adc
ja
push
adc
andps
imul
cmpb
adc
jb
dec
inc
cmpw
int
or
jne
and
and
cmp
push
xchg
dec
push
push
jl
fbld
mov
jb
popl
sti
dec
add
jg
stc
std
mov
or
adc
lret
inc
or
data16
push
push
jo
out
shrb
jmp
push
push
inc
stos
in
dec
aaa
or
enter
adc
add
inc
ds
dec
inc
xchg
rcll
lahf
add
xor
and
sbb
xchg
xchg
pop
push
outsb
adc
push
or
rorb
lods
in
lods
pop
incl
pusha
and
insl
add
lea
enter
insl
fcompl
mov
mov
pop
pop
xor
test
or
imul
xchg
push
gs
mov
aam
add
pop
dec
fmull
movsb
std
add
cmc
push
push
mov
pop
dec
dec
and
pop
das
inc
add
cmp
scas
inc
xchg
sti
push
mov
shll
js
test
push
je
aam
pop
inc
pushf
fs
mov
jl
shll
or
aam
je
mov
or
xchg
mov
daa
inc
nop
adc
xlat
sbbl
popf
cld
lahf
loope
les
stc
add
test
pop
mov
leave
cwtl
mov
gs
nop
add
push
or
xor
fisttpl
and
enter
and
ja
pusha
sbb
mov
sbb
ret
and
lahf
outsl
sub
jno
xor
sub
cmova
roll
out
xchg
and
push
cs
out
add
call
push
leave
or
sub
sub
test
ret
dec
sar
jmp
xor
cltd
mov
mov
pop
push
push
pop
push
cltd
or
xor
or
mov
aas
sbb
add
outsb
mov
sub
fadds
lea
mov
rcll
ret
outsb
out
dec
test
sub
mov
adc
inc
pusha
xor
test
push
xchg
dec
aam
aaa
cmp
adc
cmp
jo
dec
xor
loopne
les
pop
adc
or
push
inc
jmp
xorl
pop
or
xchg
jo
mov
ja
sub
jno
pusha
cltd
mov
and
mov
ret
in
push
cwtl
adc
mov
icebp
and
xor
jle
loopne
rclb
inc
jg
je
loopne
ret
je
sub
dec
ljmp
sbb
dec
jne
inc
andb
jne
mov
or
and
or
dec
xchg
scas
jl
jmp
push
push
and
jo
push
jmp
push
push
pop
jmp
in
rcr
cmp
shll
push
pop
mov
fdivrl
push
mov
pusha
pop
mov
popf
scas
por
aaa
push
push
scas
adc
xchg
inc
xchg
movsb
inc
inc
pop
cmp
and
fiadds
dec
jbe
sti
mov
inc
inc
ja
or
adc
fwait
mov
xchg
push
in
mov
sbbl
inc
jmp
or
scas
push
inc
sbbb
cmp
in
cmp
sub
or
pop
sbb
out
pusha
mov
pop
cmp
sub
dec
in
adc
jle
lods
into
push
dec
mov
or
adc
xor
outsb
fsubs
je
jnp
or
ret
leave
mov
push
aam
mov
push
cld
ss
adc
idivl
adc
fsub
loope
dec
jp
aas
lods
sub
mov
push
int3
imul
hlt
aas
push
cmp
dec
sbb
rorl
jg
dec
aas
sbb
lahf
mov
push
jp
push
imul
clc
push
add
repz
repz
xor
inc
iret
repz
dec
push
popa
insl
cltd
mov
lods
mov
lret
xlat
repz
cmc
ljmp
repz
cmp
repz
pop
imul
mov
push
test
negb
jnp
mov
jl
fwait
repnz
and
sub
int3
pop
xor
enter
adc
gs
add
popf
mov
das
or
sbb
andb
xor
adc
mov
ja
sub
cwtl
jmp
jno
add
movsl
sbb
cmp
bound
or
std
mov
out
jmp
jl
mov
mov
or
lock
dec
test
inc
cmpsb
mov
push
mov
lock
sti
mov
fcompl
sub
cmp
mov
nop
or
mov
fmull
dec
loope
mov
pop
xorl
stos
adc
inc
insb
push
sbb
out
add
enter
push
xchg
push
int3
ret
add
fdiv
lods
pushw
dec
test
cs
pop
or
icebp
and
adc
pop
mov
xchg
in
ss
dec
sti
sbb
rorb
cmp
adcl
add
add
dec
mov
clc
and
add
push
sub
jo
pop
and
mov
shrb
add
cmpsl
jg
jo
xor
or
rorb
rcr
adc
push
or
dec
js
push
pop
in
mov
jle
sarl
inc
gs
push
call
push
and
adc
sbb
mov
loopne
and
les
cwtl
adc
or
fistl
pop
and
adc
xchg
mov
decl
ret
mov
and
inc
add
iret
out
add
adc
mov
orl
adc
daa
fdivrl
test
pop
push
cmpsl
xorb
mov
mov
jl
lds
jno
cld
js
or
lret
add
adc
jo
push
cwtl
scas
pop
pop
mov
mov
test
adc
lock
int3
sbb
jecxz
sbb
dec
sbb
int3
orb
cmp
add
test
testb
fwait
je
mov
cmp
mov
loop
mov
sub
mov
enter
push
les
mov
icebp
push
ds
pop
sub
jo
cmp
xchg
mov
test
insb
js
mov
imul
sub
lods
push
or
je
inc
sub
mov
cs
jnp
das
push
push
cwtl
dec
pop
pop
sbb
xor
xor
das
mov
fnsave
sub
cs
sub
cmp
imul
xchg
pop
adc
inc
enter
jmp
das
and
sbb
jnp
inc
daa
mov
xchg
inc
xchg
lds
xor
and
mov
insb
xlat
imul
add
push
clc
call
int
roll
cmp
or
inc
mov
jbe
add
hlt
cmpb
mov
sbb
aaa
clc
inc
cld
mov
and
mov
cmp
sbb
aaa
xor
jae
and
xchg
jl
into
sub
xor
enter
inc
xor
push
movsb
and
and
aas
and
xor
fists
and
dec
lods
sub
xchg
inc
negb
int3
jmp
pop
mov
loopne
jle
inc
jecxz
fwait
scas
and
xor
mov
dec
inc
aas
lods
cli
ret
sbb
js
sbb
out
test
rcrl
aaa
and
fcoms
sbb
cltd
cwtl
and
mov
mov
rcll
rorb
mov
fmul
adc
and
add
enter
xchg
cmp
dec
mov
push
and
cmp
mov
idivb
xchg
sub
fwait
cmp
push
or
sub
ds
and
or
add
mov
cmp
or
nop
and
inc
ja
pop
jmp
or
adc
in
aaa
cmp
fwait
mov
aas
fwait
mov
movsl
mov
andl
in
cmp
pop
aaa
jnp
mov
sbb
sub
xchg
jg
cmpb
nop
cmp
imul
xchg
or
sub
sub
mov
movsb
adc
test
inc
mov
jno
ret
je
or
mov
pushaw
jmp
push
sub
testl
and
iret
inc
inc
and
adc
inc
push
dec
dec
repz
add
mov
dec
add
cmp
test
adc
sahf
pop
lods
cmpsl
int3
inc
pop
cltd
push
popf
je
aas
imul
jecxz
in
jecxz
orb
test
enter
sahf
test
pushf
mov
jecxz
mov
add
rcrb
jge
dec
pop
and
ret
cmp
sub
mov
add
in
add
add
fcomp
lea
scas
loopne
sub
pop
dec
mov
xchg
test
icebp
dec
rcl
mov
and
xor
shl
push
cwtl
pop
push
enter
mov
into
or
hlt
sub
xchg
out
pop
outsb
or
xor
dec
sahf
imul
sbbb
mov
or
in
push
cwtl
sahf
inc
sahf
dec
int3
paddusb
and
pop
dec
js
jne
adc
aaa
pop
cmpb
rorl
dec
push
sahf
mov
stos
ds
and
daa
lock
mov
pop
repz
push
jno
in
or
shrb
dec
jbe
lcall
mov
mov
lock
fdivs
xchg
es
stos
sbb
push
fsubl
movsb
sbb
push
int
les
mov
dec
enter
js
push
test
dec
dec
pop
pop
mov
rolb
test
cwtl
fsub
and
enter
test
enter
inc
sbb
addl
idivl
aam
sbb
pop
xchg
or
orl
sbb
adc
rcrb
push
fs
inc
and
fnstenv
push
js
mov
test
inc
or
mov
nop
sbb
pop
pop
mov
inc
dec
push
xorb
nop
out
and
jo
or
movsb
push
inc
lcall
mov
and
cmp
in
call
imul
push
sub
cmpsl
ss
sbb
je
test
inc
inc
data16
lock
inc
xchg
test
jno
sbb
daa
add
lock
loopne
push
cmp
cmp
pusha
nop
add
pop
rclb
cmp
push
xchg
add
imul
loopne
test
xchg
jb
jmp
dec
add
add
jae
mov
arpl
popa
and
xchg
pop
mov
jo
nop
xchg
pop
or
loopne
jle
jmp
pop
rclb
jecxz
inc
add
adc
add
pop
movsl
je
jmp
or
push
das
mov
imul
aam
test
cli
mov
pop
idivl
and
or
and
lahf
jge
adc
popa
dec
adc
arpl
and
jmp
adcl
or
adc
cld
xchg
push
pop
insb
std
xchg
lret
jo
and
dec
lods
mov
loopne
dec
push
mov
faddp
pop
pushl
add
mov
jmp
pop
dec
pop
inc
sbb
gs
enter
cltd
inc
mov
sbb
sub
push
pushf
gs
fcomp
in
ret
sbb
pop
movsb
mov
mov
jmp
sbbl
add
les
ret
and
ss
and
push
and
outsb
scas
pop
popf
push
and
xor
pushl
jnp
insl
and
mov
mov
scas
shl
daa
test
mov
sub
orb
and
and
sub
push
movsl
add
and
sbb
ret
add
add
adc
xchg
popl
dec
push
jbe
push
test
push
push
or
leave
aam
dec
shll
push
loopne
mov
add
push
push
sbb
xchg
daa
dec
andl
shll
mull
sbb
jo
xchg
and
adc
cmp
ret
sbb
inc
sbb
and
sbb
addl
adc
je
push
popa
push
stc
adc
xor
imul
out
xorb
xor
or
jo
inc
call
cltd
pop
orl
aaa
mov
pop
mov
adc
pop
inc
xchg
add
imul
bound
inc
push
loop
test
inc
rorl
shlb
or
add
add
pop
lret
fsubrs
add
cmp
adc
scas
cli
lock
cmp
inc
push
jae
pop
cmpsl
inc
dec
sub
xor
push
cmp
sub
add
add
jge
mov
imul
and
loopne
mov
add
or
rolb
xchg
xchg
addr16
scas
inc
jp
jecxz
test
cmp
sub
cmp
jbe
in
js
dec
and
inc
jmp
sub
jl
xchg
add
ja
sbb
aad
dec
imul
inc
pop
sahf
pop
sarl
sti
mov
sub
cmp
adc
sbb
sub
add
sbb
cmp
mov
sbb
cmp
cmp
pop
or
fsubrs
ljmp
and
push
bswap
sub
mov
ja
insb
jb
mov
jg
jo
mov
je
push
xorl
mov
mov
pop
fldcw
xor
pop
cmp
aas
adc
sub
push
adc
xlat
jbe
je
cmp
jne
jle
rclb
ret
xor
cmpb
cmovo
lods
inc
or
subl
jne
or
or
iret
jne
pop
adc
inc
es
xchg
push
enter
jae
inc
lods
fcmovnb
inc
xchg
nop
cmp
mov
and
pop
pop
test
rorl
push
push
shr
scas
mov
int3
or
test
loopne
outsl
cmp
test
push
mov
mov
jp
pop
cld
test
loopne
inc
add
jae
pop
mov
sbbb
add
adc
xor
push
push
add
dec
or
dec
fcomps
cmp
insb
mov
cmp
rcrb
rclb
sub
jne
push
mov
les
add
or
mov
sbb
xor
fimull
pop
pushl
subl
xor
mov
in
cmp
cmp
cmpsl
dec
add
movsl
addl
xchg
jp
sbb
mov
in
aam
test
shrl
imul
inc
push
mov
outsl
outsb
outsb
jmp
and
jg
je
cmp
push
loop
decl
inc
jmp
movzbl
movb
movsbl
shr
mov
jg
mov
and
mov
nop
inc
mov
add
sub
pop
xor
mov
mov
sub
mov
push
pusha
add
faddl
ret
jle
lahf
xchg
sub
test
subl
xchg
or
js
and
jno,pn
push
loope
into
sbb
stc
add
lods
adcb
sbb
sti
sub
outsb
mov
mov
push
xchg
ss
lock
push
xchg
inc
mov
mov
cmp
je
dec
and
add
or
push
iret
dec
push
test
mov
cmp
std
sub
jmp
idivl
mov
dec
lods
cwtl
out
testl
push
or
cmpsl
push
cmp
push
cmp
lods
xlat
adc
sub
adc
pop
fstl
inc
xor
loop
sbb
imul
outsl
xor
xchg
insl
mov
push
or
loop
dec
mov
mov
push
adcl
outsb
leave
cli
inc
rclb
xchg
dec
or
jle
add
pop
arpl
je
mov
adcb
and
sub
outsl
mov
lahf
orb
imul
xor
mov
add
pop
or
add
dec
shlb
jne
out
outsl
and
or
xchg
ret
pop
add
loopne
idivl
js
add
pop
dec
sub
dec
inc
dec
pop
inc
loop
add
push
scas
mov
jecxz
dec
pop
or
add
mov
sbb
sbb
ss
repz
push
mov
push
aam
add
mov
sti
or
jns
jle
popa
movsb
dec
and
xchg
mov
sub
sbb
nop
push
push
cs
popf
ret
pop
mov
or
mov
arpl
mov
das
in
or
add
dec
jl
or
fmull
ljmp
adc
mov
push
jmp
adc
or
test
and
test
xor
aam
adc
adc
movsb
or
adc
mov
xchg
jmp
add
jge
and
pop
push
fistps
mov
imul
pop
fists
and
adc
ss
jge
es
mov
jmp
adc
test
addr16
add
xor
push
add
or
adc
dec
in
cs
sbb
push
inc
sbb
add
push
int
fcoml
push
or
fbld
jnp
xchg
lea
inc
sub
mov
test
adc
call
add
pop
into
push
repnz
jns
repz
out
push
and
mov
adc
dec
imul
lret
iret
sub
cmp
sub
shrb
inc
push
and
push
or
scas
inc
jbe
and
add
add
cmp
sbb
and
jne
push
add
xor
jmp
cwtl
or
loopne
nop
push
shlb
fcoml
das
pop
pop
or
sub
jg
pop
andl
xchg
mov
lock
push
hlt
sub
cmp
mov
mov
sub
stos
lods
sub
pop
aad
inc
pop
xor
jmp
jns
dec
adc
je
sub
ret
xor
ret
je
aas
mov
iret
lea
dec
enter
les
inc
push
sub
test
cmp
xor
fwait
add
push
add
push
add
pop
out
xlat
shr
mov
xor
and
push
ret
sub
sub
cld
adc
in
adc
es
dec
hlt
mov
mov
push
repnz
xor
jne
je
inc
icebp
push
inc
das
mov
sarb
test
js
inc
div
test
mov
aad
push
xchg
lds
dec
mov
imul
iret
test
adc
add
adc
cmp
aaa
jecxz
sub
in
adcl
push
jnp
sub
or
push
push
enter
dec
or
fstpt
js
jle
add
pushl
ret
lea
cmp
mov
adc
in
in
pop
sti
rcr
pop
mov
popa
sub
add
les
int3
lea
dec
ficompl
dec
xchg
call
pop
cmp
shrl
sbb
xchg
out
mov
xor
bound
or
lods
xor
ret
fcomps
inc
das
je
jge
sahf
ljmp
test
dec
repz
jns
in
inc
xchg
mov
and
sahf
enter
in
cmp
test
xchg
dec
jne
es
insb
mov
insb
sbb
ret
xchg
mov
sbb
adc
subb
and
imul
push
xchg
mov
sub
sub
dec
or
jle
xor
cli
adc
insb
sbb
cmp
inc
fwait
je
mov
push
push
ljmp
fnsave
movl
mov
imul
add
test
mov
enter
cmp
dec
mov
or
and
pusha
and
test
inc
xchg
pop
fcomps
pop
push
fistl
mov
mov
sbb
push
repz
notb
sub
add
pop
dec
inc
sbb
test
and
data16
jl
xchg
pop
inc
loope
or
ret
andl
test
jo
inc
test
push
sahf
sbb
jbe
ret
add
push
fstpl
inc
inc
mov
stc
mov
gs
inc
sbb
inc
data16
ja
adc
adc
jne
daa
bnd
adc
sahf
lahf
or
jne
or
jne
or
add
loope
dec
sahf
rorb
enter
xor
pop
mov
mov
dec
inc
aad
or
dec
cmpsl
push
push
lea
movl
or
fisubs
pop
hlt
adc
fstl
mov
shrb
add
mov
fstpl
lea
adc
xchg
out
jne
pop
mov
frstor
imul
imul
jnp
sub
mov
add
lcall
sbb
ret
xor
mov
or
mov
pop
xchg
test
pop
lea
inc
sbb
out
movsb
cmp
aas
fdivs
outsb
mov
cmp
lea
fstl
dec
jmp
int
sub
fcom
loopne
shlb
sti
jle
lea
dec
in
adc
pop
xchg
mov
jl
ss
ss
pusha
xor
sti
lcall
pusha
cwtl
shll
xchg
xor
jg
push
inc
loopne
or
mov
cmp
cltd
shrl
insl
mov
add
imul
and
mov
lea
incl
adc
pusha
mov
xchg
test
jb
or
mov
fs
add
pushf
push
jne
or
mov
xor
mov
fs
sbb
ficoml
mov
xor
jno
xor
roll
dec
push
aad
lea
dec
sbb
xchg
out
outsl
pop
lock
ss
in
fisubs
add
mov
adc
call
or
into
aas
inc
movsl
cmp
int3
or
into
inc
subl
pop
mov
fs
nop
scas
mov
adc
fwait
cmc
inc
inc
mov
dec
enter
pop
addr16
xor
fwait
inc
or
adc
push
or
jge
fwait
add
or
mov
mov
ffree
push
loopne
dec
xchg
pop
and
push
cmpsb
mov
pushl
rcrb
or
sbb
dec
lea
cmp
test
gs
or
dec
ret
mov
insl
fwait
or
mov
jnp
fidivrl
add
push
les
cmp
test
push
push
negl
cmpsl
subl
bound
xchg
popa
xchg
adc
sub
mov
push
push
xchg
pusha
sbb
loopne
or
shl
imul
daa
pop
mov
jo
push
shlb
jecxz
mov
xor
pusha
sbb
jae
adc
xor
xor
mov
shlb
pop
pop
adc
enter
pop
adc
enter
adc
push
xor
inc
adc
imul
in
nop
arpl
inc
adc
gs
sub
fs
jb
xor
push
sbb
inc
es
sbb
loop
adcb
xor
add
and
xor
mull
int
mov
and
push
and
adc
shlb
pop
and
xchg
mov
xor
xorb
sub
xor
jp
mov
cmp
sbbb
scas
es
icebp
push
sbb
dec
dec
pop
and
jg
jae
in
dec
pop
shrb
imul
cld
xor
pop
shrl
sti
pusha
popf
cmc
movb
xorl
and
push
mov
or
arpl
mov
mov
jg
jno
cmpsl
pusha
mov
xor
cwtl
add
insb
dec
adc
vmaxps
inc
or
pop
in
mov
std
jle
dec
js
jg
je
push
mov
test
and
pop
lea
jp
les
ficompl
xchg
inc
sbb
fsubrl
loopne
sbb
add
inc
fmull
hlt
mov
movsb
mov
lock
jne
movsb
loop
cmp
push
stos
test
mov
xorb
pop
xchg
iret
test
cs
lock
sbb
adc
test
add
clc
and
pushf
jp
and
and
roll
outsb
popa
shlb
repnz
rolb
call
je
xchg
addr16
lret
test
or
xchg
int3
pop
in
call
dec
add
and
sub
mov
mov
mov
das
lods
lods
sub
and
mov
lea
jge
mov
in
mov
add
sbb
out
or
lock
inc
jmp
gs
pop
popa
pop
test
mov
je
add
or
aas
mov
inc
das
xor
mov
push
call
mov
and
movsb
xor
mov
and
pop
pcmpeqd
sbb
xchg
push
mov
mov
call
jno
add
fadd
mov
sub
je
add
dec
aam
add
shlb
syscall
and
syscall
adcl
sahf
inc
mov
cmpsl
or
xchg
aam
ret
mov
mov
and
jne
mov
ljmp
adc
push
lock
and
dec
inc
loop
or
shrb
adc
cmp
xchg
bound
or
and
call
cmp
sbb
in
dec
add
adc
ret
daa
fdivl
shrl
cmpsl
aaa
sub
popa
xchg
mov
inc
movsl
sbb
add
dec
les
cmpsb
icebp
out
xchg
sar
cmc
add
js
cmp
clc
cld
xchg
mov
xchg
mov
adc
or
xchg
test
sub
shlb
lods
dec
sbbb
ja
mov
add
push
leave
dec
pop
lock
orl
orb
rclb
rorb
nop
inc
jecxz
cwtl
push
gs
test
loop
sbb
stos
jbe
stos
loopne
jge
pop
sbb
call
jmp
add
je
mov
data16
call
or
push
xchg
add
in
xor
mov
lret
add
mov
sub
jge
jecxz
in
sahf
outsb
call
push
push
fisttps
add
cmp
push
fwait
or
or
ret
cwtl
inc
stc
cmpsl
int3
stos
cmovns
xchg
sahf
sbb
xlat
rcrb
xor
adc
mov
lea
jmp
and
inc
add
sbb
addr16
adc
movsl
cwtl
arpl
push
dec
xor
test
in
add
lea
movsb
or
inc
xlat
roll
push
sub
add
lods
adc
shlb
inc
mov
or
and
in
or
jle
jno
aas
idivb
add
aam
pop
lock
ret
xchg
xchg
adc
insb
aam
push
cmp
lcall
and
mov
leave
pushf
dec
ja
or
or
xor
cmp
je
add
jne
rolb
mov
sbb
xchg
ret
cli
mov
mov
inc
iret
xchg
mov
clc
cmp
ds
add
jnp
js
hlt
jae
movsbl
sbb
lcall
xor
lahf
mov
movsb
pop
imul
clc
sub
pop
jmp
enter
ret
incl
lcall
add
add
or
jecxz
or
add
inc
cmp
jl
ret
add
js
cltd
and
add
sar
add
dec
xchg
nop
jl
clc
xor
xor
ss
cmp
jecxz
ljmp
jne
enter
adc
or
jne
fs
sbb
pop
sahf
xor
ds
imul
sbb
cmpsl
push
dec
bound
cmp
inc
jbe
jo
shld
loopne
and
adc
lods
jmp
add
sbbl
sbb
mov
jno
push
push
incl
push
cmp
jl
lods
jle
sub
outsb
insb
aas
mov
mov
shlb
lock
js
inc
mov
repnz
add
imul
mov
rolb
sbb
xor
cli
and
dec
add
or
popl
pop
sbb
aam
and
mov
jmp
and
pop
bound
sbb
pop
inc
dec
adc
xchg
ficompl
mov
pop
mov
xor
nop
ss
push
xor
in
push
xor
xor
adc
or
leave
mov
xor
test
mov
and
mov
sbb
in
mov
and
push
ret
bound
adcb
leave
loopne
int3
push
jecxz
push
loopne
pop
pop
push
jmp
in
loopne
xchg
push
push
sbbb
push
cltd
mov
adc
mov
pop
outsb
pop
enter
pusha
push
dec
pop
add
leave
and
pop
jmp
push
add
add
leave
in
pop
fsubrl
adcb
scas
mov
push
add
push
add
xor
or
pusha
and
sarb
pop
dec
js
sub
pop
adc
pop
xchg
or
or
add
jns
push
push
adc
in
mov
out
and
emms
outsb
lea
js
mov
dec
sub
adc
repnz
inc
push
cwtl
lea
fmuls
adc
cmp
test
roll
daa
movsbl
adc
stos
jge
cmp
pop
les
add
xor
cltd
ret
pop
mov
and
cmp
push
sahf
push
cmp
addb
inc
xchg
out
push
movsl
push
mov
inc
aaa
push
popa
dec
shrb
push
and
shrb
loope
dec
ja
dec
push
hlt
in
lock
aad
cmp
es
jecxz
mov
rorb
int3
jge
and
add
hlt
rcl
cltd
or
out
inc
mov
mov
adc
data16
jmp
or
adc
xchg
pop
mov
and
imul
jno
xchg
mov
shrb
push
push
pop
aam
stos
rcrb
inc
mov
cmc
jo
push
sbb
shll
or
xchg
nop
call
daa
adc
cmp
push
call
push
cmp
ret
xchg
dec
scas
pop
mov
sbb
dec
fiaddl
cmp
int3
add
sbb
pop
xor
jg
test
cmp
pushf
sti
push
sbbl
mov
mov
sarb
shl
je
hlt
xorb
adc
pusha
mov
les
push
lods
mov
sbb
cmp
sbb
xor
push
inc
enter
xchg
jle
pop
and
and
arpl
xchg
pop
lahf
nop
jbe
cwtl
mov
aam
add
inc
jle
rclb
add
and
sub
movsl
aam
fadd
insl
cmp
imul
cmp
jl
cwtl
loopne
fdivrl
or
stos
mov
jge
sub
pop
lcall
test
cmp
daa
movsbl
shl
call
cmp
ss
jmp
adc
loopne
jmp
mov
out
test
pop
adcb
mov
test
mov
ss
sbb
lret
movb
loope
push
clc
adc
inc
mov
add
cmp
int
rcl
push
inc
mov
cmp
movsb
add
push
cs
roll
loope
inc
inc
inc
rol
inc
push
add
mov
outsl
enter
sbb
mov
mov
xchg
mov
jne
cld
push
inc
scas
sbb
sbb
cmp
xor
adc
dec
add
call
clc
dec
test
adc
loopne
adc
mov
subl
or
rorb
cli
xor
imul
cmp
imul
movsb
mov
jae
fwait
pushl
pusha
mov
jnp
cmpl
clc
pop
mov
add
add
cmp
rolb
push
cmp
das
stc
mov
pop
pop
pop
les
inc
cmp
xor
mov
mov
dec
mov
mov
jg
es
add
mov
add
movzbl
mov
roll
sbb
js
jl
dec
adc
clc
insb
clc
addl
rcl
jmp
iret
push
sti
pop
jae
icebp
or
orb
or
mov
pop
push
mov
fimuls
mov
nop
lds
insl
and
or
cld
aam
ljmp
leave
push
xor
mov
inc
call
jne
pop
or
jecxz
stos
mov
mov
adc
jb
adc
mov
stos
test
roll
push
mov
adc
or
into
push
mov
rsqrtps
xor
hlt
xlat
push
or
push
adc
test
add
pop
dec
in
test
lahf
adc
in
test
mov
cmpsb
les
cmp
sub
bound
fsubl
bound
mov
cmp
fldcw
and
ja
into
sub
cmp
push
scas
divb
mov
imul
sbb
and
xchg
cmp
or
loop
sub
xor
popf
cmc
test
or
pop
and
adc
add
push
cmp
mov
and
add
fmuls
into
ss
lcall
push
jnp
push
cmp
je
in
movsb
das
jl
mov
rcrb
mov
mov
xchg
cmp
mov
test
or
adc
call
fcomps
shll
lret
lea
cmp
jbe
cmp
test
mov
sbb
mov
rcll
xor
roll
cmp
pushf
test
insl
mov
dec
push
setp
sbb
mov
jg
or
add
sbb
test
add
fistl
ret
shl
push
fstl
pop
cli
push
jne
push
pop
popa
movlps
push
lahf
dec
cmp
movsl
jmp
cmpsb
leave
shlb
pop
xchg
movsb
pop
hlt
fisttps
mov
dec
pop
pop
ret
and
enter
popa
mov
sbb
mov
or
in
gs
cli
sub
xchg
jns
int
jns
mov
js
movl
pop
dec
pop
sar
lea
fldt
push
push
xchg
sarb
add
sub
add
mov
or
cmpsb
mov
icebp
adc
pop
in
mov
xor
icebp
cmp
and
inc
test
loope
mov
inc
fcomps
mov
add
in
ret
jb
mov
add
movsl
sub
mov
fsubrs
fldl
jmp
pop
adc
xchg
adc
lcall
sbb
xchg
mov
loope
or
loop
add
daa
push
sbb
push
and
and
mov
push
and
mov
inc
mov
int3
adc
mov
test
jmp
push
repz
inc
enter
cmp
add
xor
inc
or
or
bound
xor
xchg
int
mov
push
inc
cmp
jae
push
mov
je
xchg
rclb
mov
mov
popf
mov
add
enter
imul
ds
loopne
mov
dec
outsl
dec
sbb
mov
sbb
dec
cmpl
push
mov
shrb
stos
jle
add
shrb
scas
add
push
xchg
testl
xchg
rclb
add
stc
xor
xlat
adc
mov
in
sbb
lcall
sbb
push
je
mov
test
mov
mov
xlat
push
cmp
sub
push
or
int
xor
jmp
mov
xchg
ret
mov
jb
pop
inc
push
mov
addb
cmp
adc
movsl
inc
lods
fcoms
dec
fwait
movl
xchg
nop
out
aas
push
shlb
xchg
inc
jge
cmp
fdivr
loopne
mov
daa
outsl
pop
fdivl
rorb
stc
adc
inc
add
jo
cmc
leave
push
outsl
inc
aam
insb
or
sub
add
cmpsl
pop
cmpb
dec
sub
sbb
push
pop
je
loopne
nop
mov
ljmp
jg
add
xchg
fcomps
pop
mov
gs
push
mov
dec
xchg
xchg
or
or
xor
nop
and
lcall
popf
pop
cld
pop
je
dec
shlb
jo
or
jmp
adc
shr
icebp
gs
filds
loopne
cmpsl
jne
test
mov
jb
mov
jo
jmp
fcompl
pop
jmp
push
dec
mov
adc
sbb
mov
adc
lcall
push
push
push
rolb
pop
mov
add
fwait
movsl
jne
ljmp
test
cmp
lahf
imul
into
movsb
mov
ja
xor
pop
or
cmp
ja
jecxz
jbe
insb
hlt
sub
cmp
pop
push
jge
push
loopne
in
subl
add
cmp
loop
lret
loopne,pt
xor
loopne
jmp
fbld
push
xor
pop
sbb
push
jns
pop
clc
jne
mov
fisubs
mov
pop
gs
xchg
mov
xchg
pop
mov
leave
mov
adcb
sbb
lods
daa
mov
mov
cmpsl
call
jo
jg
pusha
mov
sbb
test
pop
push
push
call
cmp
sbb
fs
sub
sahf
jmp
adc
imul
pushf
pop
xchg
ret
dec
sbb
das
or
pop
pop
aad
les
add
jae
add
jmp
add
or
mov
dec
jbe
rorl
aaa
xchg
or
jecxz
pop
mov
je
movsl
mov
or
mov
adc
dec
cmp
pop
push
inc
jbe
adc
pop
sbb
push
mov
lods
cmp
push
inc
fs
scas
sti
xchg
pusha
out
xor
or
mov
sub
xor
inc
add
jo
xchg
jns
call
inc
notl
xor
shll
testl
jge
or
mov
repnz
insb
pop
jmp
in
enter
sub
sbb
adc
xor
sub
cmp
sbb
and
add
lea
inc
nop
scas
sub
mov
sahf
test
or
sbb
mov
jo
adc
pop
inc
sbb
or
ret
je
das
or
ds
mov
push
cs
or
scas
mov
mov
pop
sbb
mov
sub
mov
mov
push
subl
clc
push
sahf
add
lahf
xorb
push
movsl
jae
mov
or
nop
aaa
and
stos
and
dec
or
ss
or
orb
shrb
xchg
sbbb
lcall
lcall
dec
int3
mov
or
dec
fwait
test
push
rcrb
xchg
push
sub
outsb
ror
xchg
and
dec
jp
and
push
sub
sub
add
mov
iret
ss
fwait
sbb
adc
and
and
lock
les
adc
es
xchg
fsubp
jne
sbb
idivb
aam
fldl
nop
push
cs
and
pop
push
mov
pop
sbb
cmp
adc
les
jb
push
test
sub
push
dec
test
mov
insl
push
push
xor
aam
cmp
movsb
mov
loope
ret
in
ret
sbb
pop
lcall
mov
mov
test
insl
xchg
in
mov
or
movsb
add
adc
or
push
sarl
jg
gs
sub
jno,pn
mov
inc
lea
or
push
sbb
inc
add
arpl
pop
popa
andl
xorl
add
push
cmc
es
stc
pushl
add
jle
push
and
xlat
ss
add
jecxz
aas
in
call
pop
fsubrl
and
fdiv
mov
dec
jnp
add
sub
push
add
add
lret
ss
icebp
cmp
out
mov
cwtl
stos
add
adc
outsb
mov
lea
iret
je
dec
rcl
shl
sbb
pop
push
dec
mov
cs
xor
daa
rolb
loope
jo
movsl
addl
or
fcoml
push
push
sbb
inc
cmp
jb
cmp
out
imul
dec
sahf
popa
push
ret
push
push
pop
rcrl
mov
add
push
sbb
lea
loopne
insl
ret
stos
or
push
inc
adc
add
xchg
add
push
inc
mov
je
mov
outsb
jmp
aaa
lret
neg
scas
js
mov
cli
das
je
or
mov
cmp
pop
sahf
idiv
addr16
je
cmp
jne
mov
sbb
add
sti
dec
and
pop
dec
lea
idivb
pop
dec
xor
fbld
or
cmpsb
mov
sub
inc
adc
je
testl
lods
push
sbb
xorl
jbe
push
lea
loope
fdivr
aas
inc
cmp
je
sub
inc
jmp
inc
and
xchg
ds
pop
mov
in
pop
add
sub
mov
mov
loopne
cmpsb
repnz
je
aam
mov
add
jo
sahf
push
adc
into
inc
xor
mov
jge
lods
in
in
shrb
cmp
inc
xchg
cmp
add
mov
cmp
outsb
hlt
cmpb
into
push
push
pop
xchg
pop
cli
mov
push
or
hlt
cmp
jb
and
ja
js
sub
push
mov
sub
cmp
and
movsl
nop
xor
adc
xchg
pop
mov
cmp
or
subl
sahf
xchg
jmp
loopne
jne
jnp
stos
cmp
fadds
sbb
fisttpll
pusha
and
add
jae
insl
lock
loop
add
rcrb
fldcw
pop
shl
add
jmp
pushf
aas
insb
sti
and
jmp
enter
test
cmp
js
fs
jne
xor
and
lock
adc
rclb
dec
or
push
xchg
sti
cmp
dec
shlb
sbb
pop
or
scas
push
mov
add
cmp
mov
push
add
add
int3
push
xchg
add
stos
lret
int3
inc
jg
or
jge
outsb
outsb
outsb
xlat
jle
or
jle
es
sub
push
jle
jmp
or
jl
or
adc
out
movsb
mov
cwtl
inc
test
jbe
lea
ds
loopne
pop
jbe
push
hlt
pop
arpl
repz
jne
add
je,pn
test
jne
pop
mov
std
sub
jb
js
das
or
push
push
and
and
jae
movb
inc
popa
loope
es
repnz
aas
mov
mov
inc
rorb
repz
jno
mov
inc
and
push
push
adc
inc
cmp
fistps
mov
add
lods
or
inc
mov
push
lcall
dec
lock
push
or
dec
jbe
jl
in
das
sbb
lods
cli
sub
scas
push
xchg
mov
push
das
mov
mov
push
nop
xor
insb
fwait
dec
loopne
mov
js
xchg
cmc
out
xor
xor
push
jg
add
sahf
mov
push
push
push
imul
jbe
inc
movsl
add
xlat
fadds
mov
jg,pn
mov
mov
in
orl
lret
push
add
cmp
cmpsl
adc
or
push
xor
or
pop
shlb
int
jp
or
push
adc
push
mov
adc
and
adcb
and
cltd
cli
test
ljmp
add
mov
or
jge
sbb
or
ret
sbb
push
mov
mov
or
mov
andl
andl
out
cltd
aaa
jp
inc
sub
dec
push
aam
in
iret
cmp
cwtl
cs
ret
bsf
fsubrl
pop
push
movl
push
adc
dec
or
xor
shlb
push
lahf
jbe
or
add
icebp
push
add
bound
clc
jle
incb
push
mov
mov
rcl
xchg
fmul
add
pop
jne
jo
nop
pushf
add
cmp
pop
push
rorl
cmpl
aaa
pusha
xchg
sbbl
push
xorl
jle
pmulhw
inc
outsb
xor
sti
mov
xchg
jo
cmp
mov
sbb
cmpl
mov
cmp
pop
movlps
lods
cli
push
dec
lea
addb
jb
pop
sub
sub
pop
push
inc
jae
negl
fbld
jbe
sbb
dec
pusha
mov
ret
sahf
filds
sti
inc
inc
fwait
inc
ficoml
pop
ja
push
sbb
push
sub
cmp
jno
mov
lds
mov
push
movsl
pop
mov
mov
stos
pop
adc
lret
inc
jl
xchg
sbb
cmp
pop
je
test
dec
push
inc
sub
sbb
push
fs
pusha
add
dec
adc
addb
nop
add
push
add
mov
pop
xor
pop
xchg
sub
or
mov
sub
nop
testb
lea
sbb
jecxz
xor
and
xchg
addb
stc
loop
mov
loop
inc
and
lahf
mov
push
aaa
les
sub
or
pusha
cmp
add
add
pop
dec
add
in
les
xor
in
testl
mov
outsb
mov
adc
push
ret
or
shll
ficoms
mov
pusha
mov
pop
pop
jbe
test
daa
push
adcl
mov
mov
jge
dec
mov
test
jecxz
das
push
and
gs
xchg
inc
lods
or
cmp
js
add
or
das
pusha
pusha
pop
fwait
dec
cmp
sub
and
inc
mov
outsl
in
inc
push
push
popf
test
xchg
in
xchg
mov
and
cwtl
roll
inc
add
movsl
movsb
dec
cmpsb
pop
sti
popa
lea
or
pop
mov
xchg
add
frstor
and
xchg
lods
inc
push
fcomps
fs
add
xor
push
negb
test
and
jns
and
cmp
movb
aam
aam
or
int3
fstpl
mov
into
test
push
xchg
push
andb
add
insb
add
mov
xchg
in
push
fcomps
ret
scas
jmp
sets
loop
push
es
xchg
xor
mov
add
lret
mov
jne
mov
fnstsw
fcom
mov
xor
insl
jnp
das
movl
and
js
fsubs
mov
mov
inc
arpl
xchg
andl
push
add
inc
fs
xor
fcmovu
cmpsb
adc
adc
rolb
lods
mov
push
bound
and
out
jno
fstps
cmp
mov
jo
and
lock
mov
sbb
jne
sub
add
inc
push
push
cmp
mov
sbb
jp
add
aaa
sub
iret
sbb
push
stos
push
cmp
ds
test
dec
cmp
adc
push
adc
mov
pop
repnz
mov
fidivs
sub
or
sbb
jne
mov
jo
mov
icebp
cmpsl
lods
fwait
ss
ds
mov
loopne
fsubs
mov
dec
xlat
or
or
je
cmp
push
pop
jne
aam
insl
pusha
sub
cmpsl
jne
push
insb
scas
and
inc
pop
jne
pop
call
sbb
add
in
in
outsl
xlat
inc
xchg
xor
fld
jne
jmp
lret
sbb
pop
sbb
sub
in
sbb
call
ret
push
adc
add
test
addr16
jmp
jnp
pop
lea
fldl
add
je
pop
sub
subl
mov
add
je
sti
mov
mov
mov
and
div
jmp
pusha
fdivl
sbb
int
sub
push
test
xchg
call
mov
or
push
test
decl
repz
sub
decb
adc
cmpl
andb
mov
xchg
lock
mov
xchg
dec
jae
or
fs
mov
or
inc
out
cmpb
decb
or
push
mov
ret
push
inc
lods
or
add
lahf
pop
cmp
les
push
fcoms
push
mov
lcall
sbb
repz
movsl
aas
inc
sbb
arpl
add
pop
fstpl
mov
addl
aas
push
jno
jb
sbb
xlat
push
push
push
cs
lret
in
pop
pop
pop
pop
fdivl
pop
pusha
pusha
or
jbe
mov
loopne
cs
inc
or
js
sub
push
add
lock
push
push
leave
or
outsb
mov
inc
sub
sub
div
inc
add
dec
push
sub
sbb
jmp
rclb
in
add
rcll
lret
mov
int
and
push
add
mov
adc
push
sbb
push
repnz
fs
movl
stos
xchg
cltd
xchg
mov
sbb
clc
push
aaa
outsb
les
push
push
push
insb
or
ljmp
add
daa
mov
shll
leave
es
xchg
scas
sbb
ljmp
fisubrs
lock
inc
inc
mov
jecxz
testb
sub
pop
jmp
shr
mov
inc
push
aam
je
into
or
divl
mov
mov
pop
adc
xchg
and
add
and
fwait
test
fstpt
mov
in
add
cmc
popa
mov
push
mov
xor
subb
es
sti
fiaddl
testl
mov
movsl
push
jae
sub
dec
lock
mov
mov
leave
sar
shlb
test
adc
cmp
cmp
push
fildll
out
je
add
dec
cmp
in
and
push
mov
pushf
clc
fildll
je
mov
cmp
jne
ss
lcall
cmp
addl
adc
or
mov
adc
je
sbb
in
push
test
nop
mov
cmp
pop
inc
negl
je
push
aas
and
xchg
mov
add
pop
sbb
push
imul
push
xchg
icebp
jno
push
sbb
or
add
data16
push
mov
call
push
adc
ds
add
and
fiaddl
faddp
sbb
adc
lcall
in
mov
push
mov
shlb
push
jl
or
ret
mov
jbe
jo
mov
adc
sbb
sbb
mov
je
or
daa
lods
xchg
add
cmp
sub
js
scas
xor
cmpl
loopne
inc
sahf
add
or
sbb
inc
xchg
ljmp
xor
stos
js
push
jb
out
adc
pop
mov
xor
popa
ret
mov
jne
jo
sub
pushl
cmp
je
divb
push
sbb
sbb
jle
or
add
dec
in
data16
popf
add
test
add
jne
xor
inc
cmp
mov
lea
adc
inc
hlt
mov
lock
hlt
dec
mov
lock
mov
mov
dec
loope
shlb
inc
inc
mov
hlt
cmp
ljmp
lock
pop
enter
pop
jb
fs
push
adc
add
call
sub
insl
cmp
pop
mov
and
outsl
mov
and
add
inc
pop
push
adcb
stos
fdiv
push
popa
lea
test
mov
orl
iret
inc
mov
pop
and
jbe
call
jne
addr16
add
mov
push
rclb
hlt
pop
adc
test
pop
or
test
je
js
ret
mov
out
mov
js
adc
mov
inc
pusha
sub
mov
xchg
push
cmpb
bound
adcb
or
xor
lock
and
mov
movsl
movsw
mov
call
fcoml
add
or
dec
lods
push
xchg
sbb
lret
adc
fsub
mov
lcall
sbb
push
mov
loopne
adc
pop
mov
test
pusha
es
inc
je
or
add
adc
bound
adc
movsl
push
inc
adc
jnp
or
gs
jmp
sub
loop
sbb
or
loop
hlt
push
cmp
sbb
inc
add
dec
push
shl
jbe
xor
mov
in
adc
xor
adc
mov
inc
dec
add
jo
or
in
lds
pop
sbb
inc
pop
push
mov
aas
in
dec
mov
addl
mov
jns
rcrb
cmp
xor
call
cmp
push
jg
push
lds
in
dec
test
shr
mov
add
cmp
lcall
adc
lahf
lret
jnp
sub
inc
shlb
sbb
not
icebp
jae
sub
or
in
rolb
gs
call
and
rorl
lods
sub
sub
mov
push
test
sbb
shlb
loop
rcrl
inc
mov
push
rorl
ljmp
xchg
and
fs
popa
mov
cmc
daa
inc
jg
cmp
cmc
das
xchg
inc
cmp
jl
lcall
in
add
js
mov
fwait
cmpsb
and
push
push
jo
sbb
add
pop
das
push
js
lds
sbb
mov
push
repnz
js
cmp
dec
cmpb
ficompl
in
cmpl
stos
xchg
lds
sub
mov
insb
xor
lea
mov
add
sub
mov
jge
loopne
sahf
push
and
and
gs
rep
clc
lods
sbb
mov
add
lods
orb
sub
jmp
cld
dec
call
dec
clc
inc
push
pop
jge
or
incb
pop
pop
ljmp
test
pop
inc
ja
push
push
xor
ret
fimuls
cli
fisubrs
push
inc
add
out
mov
push
push
or
popf
adc
dec
jmp
je
int3
or
mov
or
jl
and
sbb
mov
and
push
sbb
or
out
sbb
cmp
add
sub
mov
xor
pop
xor
es
xor
inc
push
das
insl
into
inc
push
pushf
and
mov
inc
jo
push
shlb
inc
mov
pop
xlat
mov
or
adc
arpl
jae
sbb
popa
pop
leave
jmp
clc
pop
mov
cmp
jecxz
jl
fstps
or
fs
sub
icebp
mov
ja
xchg
add
inc
jo
mov
pop
jmp
fildll
fmuls
cmp
ds
sbb
fdivs
call
add
stos
add
and
les
dec
add
inc
pop
nop
push
add
push
ret
rol
push
loopne
mov
mov
fnsave
test
push
and
pop
ret
pushl
push
iret
and
movsb
mov
sub
testl
or
xor
jo
in
jge
and
xor
and
movsl
or
fsubl
push
xor
lea
movb
inc
inc
repnz
push
mov
mov
mov
or
xor
rcrl
xorl
dec
loopne
xchg
iret
mov
stos
or
cmp
xor
sbb
adc
sub
out
inc
jle
enter
jecxz
xchg
cmp
mov
in
movsl
sbb
scas
sub
test
lds
or
ret
sbb
rolb
mov
cld
dec
mov
ds
cmp
fsubrs
push
mov
sub
loop
push
das
mov
push
outsb
gs
lea
push
popa
xchg
addr16
add
xchg
xchg
add
cld
mov
push
repnz
push
leave
fdivl
dec
subl
push
xchg
test
or
sub
dec
adc
pop
stos
lcall
in
test
add
cmp
pusha
popa
adc
pop
mov
cmp
inc
fistps
aaa
jbe
push
and
xlat
lcall
add
push
or
test
inc
pop
inc
sbb
addr16
scas
adc
mov
jmp
pop
or
rcrl
sub
pop
mov
or
or
add
pop
dec
dec
xor
jl
add
push
adc
enter
dec
shll
cmp
and
xor
mov
push
add
pusha
cmc
jle
aam
inc
add
sahf
test
cmp
sbb
add
nop
out
mov
push
cmp
inc
xor
add
iret
sub
dec
jo
jns
xchg
push
sbb
inc
xchg
push
push
outsb
jnp
popa
fs
inc
mov
dec
mov
sub
jne
shll
xor
sar
rcll
cmpsl
mov
jmp
add
xchg
pop
lret
ret
or
loope
dec
inc
sub
ss
lcall
cli
xorl
mov
dec
loop
and
xlat
aam
jge
shlb
ss
mov
inc
or
and
push
mov
mov
or
stos
or
push
sub
test
inc
or
or
jge
pop
fs
add
imul
xor
notl
adc
sub
xchg
and
push
cld
mov
inc
push
and
lea
subl
xchg
adc
popl
shl
cmp
xchg
inc
push
or
and
popa
sbb
xchg
add
dec
sub
call
push
ficompl
imul
lods
mov
xor
cs
and
dec
shll
sub
and
aaa
psllq
inc
mov
mov
dec
mov
or
in
jns
adc
push
and
sub
adc
xor
dec
sbb
dec
add
mov
fsts
popa
xor
decl
ficompl
mov
sub
pop
ds
jb
loopne
sbb
cmp
or
test
dec
jmp
inc
or
and
dec
cmp
push
jbe
jnp
xor
sub
add
pop
outsb
in
push
sub
dec
aam
mov
and
nop
jmpw
pusha
adc
jne
pop
jge
inc
notl
iret
dec
in
push
push
gs
subl
cmp
adcl
mov
pop
and
push
sbb
dec
mov
fcomps
ja
sbb
mov
and
xor
jnp
push
jmp
push
push
jl
add
aad
jp
mov
pop
cltd
pop
out
repz
rorb
push
cmp
int3
loopne
xchg
cmpl
pop
aaa
test
add
xor
clc
fimull
mov
sbb
adc
or
push
mov
loope
push
mov
xchg
jnp
jg
adc
cmpl
jne
shl
mov
rolb
pusha
sub
and
addr16
pop
int3
mov
and
adc
pop
ss
inc
pushf
pop
insb
mov
or
mov
inc
lods
add
dec
sub
lods
or
add
and
int
mov
push
xor
mov
sbb
add
test
jmp
sbb
mov
mov
test
cmp
push
sub
inc
mov
lock
fnstsw
sub
inc
jmp
xor
sbb
popf
rcrb
je
cmp
sub
cmp
jne
pop
popa
sti
negl
add
je
push
sub
outsb
dec
push
and
clc
sahf
cltd
xchg
add
mov
sub
push
cmp
decl
and
and
cmp
jbe
adc
and
dec
mov
das
inc
jl
add
dec
cmp
add
sub
adc
inc
add
enter
push
xor
in
pusha
dec
mov
pusha
fcomip
push
pusha
sahf
pop
jbe,pn
fdivl
ret
inc
push
ss
nop
mov
mov
loopne,pn
pop
je
mov
jo
dec
sbb
jbe
mov
inc
inc
cltd
dec
or
cmp
orl
mov
inc
sbb
jne
cmp
push
fsubr
adc
cld
jo
mov
mov
dec
xor
bound
roll
adc
cs
or
dec
mov
sbb
push
or
mov
pop
lock
ltr
lods
mov
mov
jo
and
push
and
push
push
pop
sbb
add
ret
cmp
jmp
mov
mov
xor
cltd
mov
cltd
test
js
push
add
pop
and
lock
pop
ret
jo
xchg
movsb
cltd
cltd
push
or
jo
mov
push
repz
imul
inc
inc
mov
sahf
or
lds
imul
loope
cmp
loope
jnp
pop
cmc
jnp
or
mov
pop
pushf
pop
pusha
cmp
jmp
test
xor
mov
fdivrl
sbb
mov
lds
imul
and
jne
jge
popf
cmp
add
or
pop
push
jge
aas
add
and
sub
js
mov
push
mov
pop
or
sarl
xchg
leave
sub
cmp
rcrb
jbe
sub
add
mov
icebp
das
mov
push
pop
or
add
fstl
ljmp
sub
inc
push
sarb
dec
pop
std
add
or
out
fwait
pop
inc
dec
jae
push
gs
out
or
dec
pop
ljmp
js
mov
sti
mov
dec
stos
dec
repnz
fsts
pop
cmp
push
push
arpl
andb
fdiv
dec
xlat
lret
sbb
push
cmp
inc
xchg
mov
and
lods
mov
mov
xchg
rorb
sbb
ja
shlb
push
mov
xchg
test
lret
and
mov
or
xor
out
and
push
pop
movsb
mov
pop
mov
add
mov
push
sub
push
adc
xchg
pop
adc
insb
test
imul
loope
adcl
ret
nop
or
and
adc
fdivl
leave
and
pop
inc
shlb
movsl
pop
in
jmp
lea
pop
add
ror
xor
cmp
imulb
sar
pop
es
lods
cld
loope
push
pushl
push
ds
inc
pop
inc
fistps
sub
mov
sbb
inc
push
cli
fs
jecxz
jne
das
cld
insl
loop
fwait
xchg
inc
xchg
mov
idivl
add
xor
sahf
jne
les
pop
add
mov
dec
faddl
andb
push
inc
jge
mov
sbb
adc
andb
sahf
xor
xlat
arpl
ja
inc
add
pop
in
sbb
pop
popf
xchg
rolb
xchg
arpl
adc
add
and
adc
nop
adc
adc
xor
and
inc
es
adc
adc
setno
idivb
hlt
divps
push
push
add
and
stos
insb
scas
or
mov
pop
bound
adc
loopne
xor
loop
add
mov
mov
push
jb
pop
mov
sub
lret
or
mov
push
mov
daa
fcmovne
sti
inc
push
ljmp
jl
inc
and
lahf
cmp
das
jmp
cmp
jle
add
lods
sub
cld
cmp
bound
mov
adcl
sahf
enter
ss
mov
js
aad
mull
lea
in
mov
mov
xchg
movsb
stc
mov
bound
idivb
dec
std
shrb
push
arpl
loopne
and
lret
fs
dec
mov
mov
add
xor
add
daa
cmp
dec
imul
jne
ja
jle
sahf
sub
sbb
test
fisttpll
mov
inc
jg
addr16
dec
and
and
jp
dec
pushf
fmulp
sub
pusha
add
adc
mov
or
push
push
push
xor
xor
jmp
sahf
psubb
or
pop
mov
jge
iret
cmpl
out
lods
add
mov
and
mov
cmp
sbb
pushf
lcall
aaa
loope
ljmp
je
lea
cmpsb
test
push
test
inc
and
faddp
mov
xchg
adc
adc
mov
mov
pop
into
push
push
ss
lret
lock
xchg
mov
sub
orb
mov
fimull
hlt
xchg
movsl
adc
popf
push
push
or
out
orl
mov
and
adc
xor
jge
xor
cmp
into
or
popf
cmc
add
pop
add
ja
and
sarl
mov
pop
cmp
sub
loop
or
or
dec
push
insb
repz
push
rclb
loopne
push
out
fcomp
jnp
movsl
cs
push
or
adc
jnp
ret
ds
into
jmp
add
ficoml
in
adcl
mov
push
filds
cltd
push
pop
add
adc
fisubl
andb
pop
adc
pop
fwait
push
mov
mov
pop
fs
and
mul
sbb
popf
vpmaxsw
lret
inc
aaa
loope
and
sub
data16
mov
addl
xchg
jle
cmpsl
cmp
cmp
jne
clc
sub
test
lea
push
push
repz
call
movsb
sbb
add
sbb
xchg
or
inc
popf
inc
mov
mov
jmp
sub
adc
sbb
mov
movsb
jmp
test
inc
add
push
cmp
iret
and
or
dec
ret
pop
or
cmp
pop
scas
push
sbb
cmp
mov
pop
sbb
dec
sar
enter
mov
inc
jnp
cmpb
xorb
jb
add
cmp
pop
mov
test
je
push
push
mov
cmpl
shrl
mov
or
adc
jo
jb
push
sub
lock
add
push
in
or
and
rorl
mov
inc
push
into
or
das
sbb
lock
xor
adc
pop
push
cmp
mov
arpl
xor
adc
inc
or
das
test
ud1
mov
mov
inc
sub
mov
and
shll
scas
push
jecxz
push
xchg
repz
pusha
adc
push
std
cmp
xchg
adc
scas
repz
push
ja
das
xorl
inc
dec
pusha
mov
jne
xchg
imul
xchg
pop
mov
ror
ret
sbb
cmp
cmp
inc
add
lds
sub
adc
inc
bound
jno
dec
or
mov
pop
mov
dec
push
mov
fstpt
mov
jne
sbb
jmp
push
scas
repnz
stos
push
mov
adc
rcrb
cmp
int3
adc
and
lret
xor
add
cmpsb
mov
fcmovnu
test
pop
cmp
fwait
inc
out
daa
loope
or
mov
loope
leave
mov
pusha
mov
sub
inc
mov
jne
pop
ds
adc
sti
clc
push
dec
mov
mov
inc
lcall
out
adc
arpl
cmp
cmp
ret
movsb
push
mov
add
xchg
dec
xchg
xchg
push
rorl
pop
repnz
lcall
nop
sbb
in
std
cmp
push
mov
mov
adc
inc
add
stos
xchg
adc
sub
aad
xlat
loope
testl
and
pop
sub
lcall
add
mov
rolb
dec
xor
cwtl
push
jecxz
scas
inc
sub
and
aas
sbb
jo
adc
adc
sub
jbe
inc
cmp
hlt
movsb
or
testb
movsl
push
je
movl
sbb
cmp
xchg
ss
add
les
adc
in
jecxz
add
dec
jo
xor
jmp
dec
and
mov
rolb
or
cmpsl
sbbb
mov
or
mov
insl
ret
sub
dec
je
dec
inc
ficoms
inc
pop
jne
mov
pusha
jmp
lea
xchg
cmpsb
adc
adc
pop
and
fldenv
push
push
lea
mov
add
clc
aaa
jo
jae
lea
jmp
cmpl
sub
shll
movsb
aam
dec
fiaddl
cmc
cmp
cmc
stos
lock
out
je
scas
nop
pushf
jge
cld
jmp
sub
sbb
sub
push
dec
cli
mov
pop
test
pop
or
subb
jne
add
pop
outsb
xchg
jmp
hlt
imul
add
xchg
std
hlt
lcall
sbb
ja
inc
add
mov
popa
cli
ss
lds
out
inc
push
xchg
cltd
xchg
sub
mov
mov
test
and
mov
xor
xor
or
or
cmp
push
mov
mov
jbe
pop
cs
mov
das
adc
xchg
push
repnz
dec
adc
pushf
dec
cmp
testl
push
ret
add
or
sub
and
jecxz
push
rol
stos
add
sbb
mov
mov
shlb
push
push
push
sub
aad
sub
and
cmp
lahf
push
je
mov
inc
xchg
out
jg
jmp
cmp
xchg
or
sbbb
xlat
xchg
call
or
jbe
stc
xchg
pop
ds
lret
inc
outsb
inc
test
inc
add
sub
mov
add
sbb
add
push
push
mov
or
insl
nop
push
cli
adcb
pop
cmp
sbb
pop
imul
cmp
roll
jbe
adc
mov
mov
lods
xor
and
andb
pop
or
xchg
mov
inc
es
add
push
inc
ret
add
inc
adc
popf
nop
xchg
push
iret
mov
add
adc
jbe
push
pop
fs
adc
cs
push
daa
cmp
mov
mov
sar
push
jecxz
add
push
ret
ljmp
push
pop
xor
test
pop
popa
testb
adc
andb
or
sbb
inc
adc
std
jnp
cmp
bound
cmp
sbb
shlb
add
jmp
divb
or
je
test
xor
push
jns
pusha
clc
jne
mov
push
test
cmp
dec
or
cmp
shrl
cmp
cld
add
lock
stos
es
mov
sbb
xchg
sbb
xchg
mov
hlt
xor
push
leave
hlt
jns
or
lock
pop
pop
hlt
xor
add
cmp
call
sub
sbb
mov
clc
or
hlt
jne
push
js
lock
fistl
cld
loopne
fnstenv
loopne
push
push
mov
xor
loopne
push
cli
stc
repz
add
jnp
adc
out
jge
push
inc
push
cmp
pop
adc
mov
or
xchg
pop
arpl
lea
cmpsb
mov
pop
inc
lods
or
or
in
pusha
push
sub
mov
mov
push
hlt
neg
sbb
and
bnd
mov
mov
push
sub
push
adc
stos
les
xchg
pop
shlb
jns
push
fidivl
insb
insb
lret
xchg
cmp
pop
jns
les
cs
inc
sarb
sbb
lea
orb
outsb
in
or
mov
lds
movsl
adc
and
mov
outsl
cltd
hlt
pop
cmpl
jne
cmp
jbe
or
jne
push
cmp
mov
in
jnp
test
shrb
cmp
cmp
gs
mov
push
jmp
aad
or
sarl
rorl
xor
sarb
jecxz
xchg
adc
sbb
ret
lea
enter
cmp
adc
cld
fstpt
loopne
push
lret
push
mov
insb
sub
jl
cmp
add
cmpsb
add
adc
adc
cmp
iret
sbb
mov
pop
cmc
rorb
or
into
lods
js
popa
and
rorb
mov
clc
out
inc
jecxz
cmp
add
mov
imul
mov
pop
loope
ret
stc
mov
sub
mov
mov
sar
dec
sub
pop
pop
add
add
andl
push
enter
xlat
adc
pop
xor
add
aas
push
or
scas
cmp
adc
push
xor
ljmp
mov
aaa
inc
jg
xor
test
jl
jmp
je
adc
lods
mov
xchg
ret
gs
movsb
jp
out
jmp
loopne
xor
and
lcall
or
push
jecxz
xor
loopne
mov
mov
js
jmp
test
mov
lea
ret
and
adc
sbb
or
cmp
xchg
push
mov
jecxz
fisttpll
fisubl
push
jmp
jb
and
cmp
cmp
dec
cmp
test
addl
pusha
push
mov
push
test
push
shl
or
pusha
and
dec
jge
add
mov
cmp
in
mov
mov
jb
push
jae
fnstsw
js
or
pop
xchg
add
repnz
je
pop
mov
aas
or
add
cmp
jp
loopne
cmp
add
fildll
push
cmpsb
dec
mov
push
push
xlat
xor
mov
add
movsb
inc
mov
cmp
mov
pop
or
sbb
imulb
rorb
pusha
fisttps
fmuls
jp
cmp
add
cmp
and
popf
dec
mov
lcall
sbb
mov
mov
sarb
mov
sbb
jmp
push
or
dec
mov
push
loopne
or
out
call
adc
arpl
mov
lea
imull
js
test
pop
jecxz
pusha
pop
cmp
mov
jge
dec
test
cltd
aam
cmp
enter
packsswb
test
arpl
fdivl
push
es
or
xor
and
clc
inc
ret
add
pop
inc
jnp
mov
jp
and
push
je
xchg
pop
and
jg
jl
push
and
xor
lds
or
ret
adc
adcb
nop
lea
push
and
std
and
rcll
movsb
sbb
pop
add
pop
cmp
xorb
pop
push
and
adc
mov
adc
mov
xchg
je
mov
lods
adc
jp
cmc
sbb
mov
clc
xor
pop
adc
call
mov
and
out
push
aam
fnsave
sbb
add
push
fsubs
popf
sbb
fadd
or
xor
mov
test
xchg
jbe
add
ss
adc
xor
adcb
mov
jae
and
movsb
fucom
jle
cmp
push
jmp
sub
pushl
dec
in
sbb
or
pop
mov
and
mov
test
inc
ret
fisttps
xor
cmp
adc
loopne
or
xchg
rcrl
sbb
sti
jb
mov
int3
mov
sub
or
rolb
cli
fcomps
or
pop
jo
into
mov
test
sbb
jno
mov
pushf
xor
je
adc
push
xor
sub
cmp
mov
or
je
dec
adc
mov
jae
lea
pop
imul
ja
cmpb
jne
fidivl
in
out
or
lea
push
sbb
loop
push
filds
push
dec
xor
pop
sti
mov
cs
pop
mov
lea
jne
inc
sbb
pop
push
dec
or
pop
push
mov
je
and
lea
inc
push
mov
aam
xor
jae
shrb
jmp
push
inc
sub
dec
mov
xchg
add
mov
xchg
or
xchg
and
sbb
dec
insb
lsl
mov
xchg
or
popf
incb
pop
movsb
add
sub
cmpsb
pop
push
sbb
adc
mov
and
push
dec
lock
mov
je
mov
jo
xchg
sbb
adc
or
adc
fldl
testb
cli
adc
mov
das
dec
and
sub
dec
gs
inc
push
lods
dec
xchg
dec
lods
push
dec
jne
nop
sbb
mov
sysret
push
rorl
jge
inc
add
in
jle
movsl
sub
mov
mov
imul
adc
mov
ja
fisttps
cltd
dec
jo
imul
or
adc
add
add
xor
push
loop
stos
test
dec
lahf
and
inc
imul
xlat
mov
mov
adc
inc
je
lea
push
or
imul
add
adc
enter
pop
mov
xor
inc
and
dec
add
or
fcmovbe
addb
subb
fwait
xchg
adc
scas
lods
mov
inc
jmp
push
cmpxchg
cmc
lea
cmp
les
add
xchg
ds
std
incl
adcl
pop
rolb
xor
jb
or
ret
std
popl
nop
orb
out
cmp
xchg
dec
add
adc
bnd
mov
push
jbe
mov
cmp
cmpb
ret
push
imul
sti
jae
lea
push
sub
sbb
ljmp
daa
push
push
cmpsb
dec
stos
xchg
mov
dec
pop
ret
scas
insb
inc
mov
pop
or
mov
repnz
adc
loopne
push
jge
insb
les
dec
cmp
cmpsb
sti
or
cmpb
xor
fnstenv
inc
jmp
push
cmp
sub
mov
clc
dec
adc
inc
insl
push
lea
sub
and
push
xchg
push
or
cmp
mov
push
loopne
inc
lcall
cmp
aad
ret
sub
jmp
push
sti
inc
xchg
add
add
jmp
loope
out
insb
div
jmp
or
call
fstpl
cmc
dec
in
jl
jne
lea
push
jo
and
lret
push
push
mov
movsl
loope
mov
mov
mov
icebp
xchg
fwait
hlt
jb
or
js
test
lahf
sbb
cmp
sub
cmpl
sbb
adc
push
inc
cmp
push
cmc
fcompp
mov
xchg
or
out
jmp
push
inc
or
sub
pushf
cmp
pop
and
popl
add
push
adc
iret
pusha
cltd
push
cmp
out
or
mov
aad
mov
int
aas
lea
pop
test
inc
cmpsl
mov
cmp
jb
add
sbb
inc
movsb
cmpb
dec
push
sbb
xor
lgs
sub
mov
cmp
add
push
inc
or
add
in
adc
es
mov
cltd
and
or
mov
movsl
add
pop
inc
pop
cmc
sti
std
std
jno
inc
inc
and
push
inc
mov
mov
pop
add
inc
aad
mulb
cmp
rcrb
pop
push
imul
lods
mov
mov
add
test
or
adc
pop
subb
sbb
stos
jbe
outsl
test
pusha
jo
dec
outsl
add
rcrb
sub
mov
inc
insl
add
mov
mov
jge
or
xchg
push
cmp
adc
push
add
jmp
lret
xchg
shrb
xchg
pusha
xchg
add
push
shll
sahf
or
stos
out
add
loope
inc
pop
pop
imul
cmp
add
jecxz
push
imul
jge,pn
sahf
js
sbb
jbe
cmp
rcrb
ret
pop
sbb
daa
ss
cmpl
pop
mov
rorl
scas
adcl
imul
ret
daa
and
sub
jl
fs
shlb
inc
sbb
movsl
adc
enter
adc
jo
cmp
outsl
inc
ret
or
add
out
cmp
arpl
jo
movsl
aas
fcmovu
cmp
and
ret
add
mov
adc
mov
mov
cmpl
add
and
add
mov
mov
jecxz
in
mov
scas
add
call
rcrb
mov
adc
dec
inc
insl
inc
ret
test
pop
adc
dec
test
outsl
or
mov
dec
sub
add
test
test
mov
mov
xchg
and
test
ds
enter
push
pop
sub
xchg
test
xchg
mov
mov
push
mov
push
rcrb
dec
add
test
stos
mov
dec
dec
popf
fwait
mov
les
and
push
push
int
wbinvd
jo
jne
ds
add
inc
add
subl
add
push
int
or
scas
jle
jne
add
jne
push
dec
scas
or
sarb
inc
out
pop
pop
sbb
inc
lock
jae
adc
add
inc
adc
add
mov
nop
add
sti
inc
add
scas
mov
mov
mov
inc
ss
pop
and
pop
fisttpll
ret
inc
xor
fimuls
cmpl
pop
jo
jmp
adc
sub
or
push
out
mov
push
or
aas
dec
inc
or
dec
inc
or
inc
sbb
je
pusha
add
aam
test
clc
sbb
ret
push
mov
push
lea
ss
sbb
cmc
shrb
sbb
dec
adc
xchg
cmc
inc
out
pop
pop
push
push
testb
mov
sahf
jecxz
xor
adc
fcoml
push
mov
mov
push
adcl
mov
int
or
pushf
and
pop
fwait
jae
daa
jae
mov
dec
test
out
test
scas
push
push
mov
push
push
push
add
ror
call
test
add
dec
rcr
je
push
xchg
xor
push
je
xchg
push
sub
push
pop
push
mov
mov
xchg
jmp
and
xchg
push
cmpl
push
or
icebp
roll
std
dec
das
jmp
add
or
stos
fs
xor
sahf
jae
cmc
or
adc
js
fdivrl
loopne
lret
cld
push
out
adc
adc
adc
mov
lods
pop
sub
cwtl
loopne
loop
jmp
and
push
mov
or
loope
adc
jecxz
je
loopne
dec
clc
mov
jb
js
or
push
pop
adc
and
mov
inc
outsb
push
jbe
fadd
pop
xchg
rcrb
shlb
test
mov
or
sbb
push
les
add
dec
adc
and
pop
fstl
cld
mov
in
rorl
sbb
mov
sbb
add
rcrl
jnp
mov
add
add
mov
and
jp
xchg
sub
inc
add
sub
pop
or
fstl
mov
pop
push
mov
and
inc
loope
mov
fcompl
daa
movsb
xchg
xchg
mov
push
jb
jns
adc
push
repnz
push
sbb
xchg
lret
sbb
repz
xchg
test
mov
push
jmp
mov
adc
cld
js
ss
sti
mov
add
sti
xchg
add
xchg
dec
clc
xor
and
sar
repnz
loopne
aad
sub
sbb
cs
pop
pop
mov
push
xchg
mov
loop
mov
inc
lret
or
aam
cltd
push
push
daa
push
loopne
add
mov
or
scas
daa
jge
adc
lock
mov
es
rol
loopne
jne
jp
cmp
lods
es
adc
mov
pop
pop
jecxz
pop
push
and
jl,pt
subl
add
inc
addr16
sbb
gs
mov
scas
mov
push
push
mov
lods
mov
mov
aam
sub
int
mov
dec
push
jg
jo
sbb
or
inc
je
hlt
inc
sub
push
sub
push
movl
or
mov
into
mov
frstor
rolb
icebp
dec
and
sbbb
out
std
inc
outsl
sbb
push
repnz
mov
and
xor
test
rorl
dec
push
cmp
mov
sbb
inc
aas
sbbb
mov
int
cmp
pusha
daa
dec
push
xchg
mov
sub
fstps
in
mov
mov
out
push
loope
push
cli
rorl
sub
push
orl
hlt
aaa
pushf
shlb
push
insb
cmp
test
mov
adc
das
outsl
push
xor
call
jne
pop
sub
add
dec
and
jl
mov
xchg
test
imul
ss
sahf
mov
lea
adc
test
fadd
js
push
or
sub
dec
dec
jns
push
sarb
push
push
sub
lods
mov
imul
add
shlb
inc
add
jmp
and
test
hlt
add
push
mov
lock
mov
movsl
dec
in
xor
adc
or
je
pop
loopne
adc
and
push
mov
nop
jo
mov
setb
or
push
adc
sub
jle
loop
adc
and
js
je
dec
cld
xchg
out
cmpsb
inc
inc
jmp
or
or
sbb
add
icebp
adc
sbb
pop
enter
outsl
add
loopne
inc
adc
loopne
ss
dec
loop
inc
test
mov
loop
sbb
in
or
inc
js
and
inc
rclb
dec
and
inc
push
xor
test
pop
mov
in
aaa
mov
fimull
sbb
negb
xor
sbb
popa
les
push
dec
loopne
ret
rcrl
insb
cmp
loopne
pusha
pop
xchg
inc
in
mov
jmp
lahf
aam
movsl
aaa
inc
sbb
dec
mov
push
pop
inc
xor
dec
enter
inc
insl
jno
cwtl
push
xlat
pop
inc
adc
mov
add
adc
scas
pop
sti
popa
xchg
sbb
loop
mov
fisttpl
mov
pop
dec
mov
cmp
stc
movb
pop
sahf
out
xchg
jne
sti
adc
cld
andb
or
andl
push
fwait
jne,pt
outsb
add
std
sarb
add
jne
or
pop
xchg
jne
or
jne
and
movsl
pop
jns
xor
subl
jae
ljmp
xor
fists
push
js
pop
lahf
cmp
addl
sbbl
fiaddl
lret
pop
js
into
fcomps
stos
jl
fcoms
imul
push
cld
adc
popa
inc
add
in
dec
add
xchg
rcr
sbb
push
xchg
push
mov
inc
mov
and
sbb
jge
push
dec
xor
sarb
cmp
aad
sub
mov
sub
add
push
push
mov
repz
fsubrs
sub
lea
out
nop
cmpb
jp
or
sbb
cmp
push
sbb
cmpl
scas
sarl
mov
lcall
cmp
fbstp
popl
mov
jg
adc
clc
and
or
xchg
pop
mov
lds
pop
push
cmp
push
pop
clc
adc
jl
and
sub
insl
push
lret
js
fisubl
adc
jp
and
jnp
and
push
mov
fs
lock
ret
dec
aam
push
rorb
sub
and
imul
inc
mov
xor
rolb
push
jne
dec
scas
mov
cmpsb
cli
or
pop
sub
sbb
jne
int
movsl
jns
dec
push
jns
sahf
sub
or
sbb
cs
js
dec
insb
jne
data16
nop
test
cmp
scas
aaa
pop
pop
or
and
push
jmp
mov
sbb
ficomps
and
sbb
jg
shrb
je
popa
in
push
dec
cmp
pusha
or
jne
lcall
xchg
jl
sbb
jge
sbb
popf
data16
add
xchg
cmp
jp
xchg
or
jnp
loope
hlt
cli
push
push
cmp
push
cmp
std
xchg
fdivrl
jl
mov
aaa
daa
je
mov
or
mov
cmp
push
fidivs
fidivs
call
sbb
in
push
inc
call
data16
sbb
xor
and
sbb
mov
jns
outsl
add
movsl
test
mov
pop
xor
adc
lea
mov
adc
or
lea
ret
gs
loopne
pop
lret
outsb
add
std
mov
push
nop
or
xchg
fldcw
ljmp
stos
pop
cmp
cmpsb
jge
push
or
or
jecxz
out
leave
cmp
shl
dec
cmpsl
xor
add
inc
add
inc
dec
mov
sub
sbb
adc
mov
ret
xchg
loopne
imul
cli
nop
or
pop
jp
inc
sbb
enter
shrl
cmpsb
imul
test
inc
lcall
add
pusha
fs
insb
jo
js
mov
or
or
call
add
cs
cmpsb
cwtl
xor
or
dec
jnp
ret
dec
int3
jbe
in
orb
xor
xor
imul
sub
jo
add
cmc
mov
int
adc
and
mov
or
movb
sbb
add
rcl
pusha
xor
add
mov
inc
jl
js
and
xor
jo
xor
add
push
and
push
cmp
adc
mov
mov
adc
jmp
pop
sbb
rorb
sbb
dec
addb
mov
pop
sbb
adc
inc
in
call
jne
cmp
sbb
pop
jbe
addps
and
sub
xchg
add
xchg
adcl
mov
jne
mov
stos
dec
test
arpl
inc
nop
push
lea
mov
cli
fcomps
and
mov
jae
loopne
ds
in
jne
sbb
adc
push
xchg
lcall
push
xchg
lock
es
clc
xchg
lret
or
test
jl
sahf
sbbl
shlb
and
ds
in
push
mov
addl
push
inc
sub
mov
push
inc
cmp
test
cmp
out
pop
and
clc
jo
fs
stos
pop
push
shrl
je
and
enter
das
xorl
cmp
addl
jne
orl
jle
daa
inc
dec
adc
imul
lcall
test
mov
xchg
mov
push
rolb
dec
mov
push
jns
stc
fldl
leave
dec
ja
sar
lds
add
lods
cmp
sub
sub
sbb
mov
push
mov
les
mov
dec
negl
add
idiv
push
jne
mov
sub
mov
xchg
and
add
xchg
push
cmp
mov
xorb
xorl
inc
xchg
ja
fwait
mov
pop
adc
jo
cld
dec
xlat
or
and
dec
mov
add
push
add
ljmp
js
icebp
dec
ret
sbb
invd
xor
xchg
sbb
sbb
sub
and
inc
mov
push
push
inc
gs
or
stos
dec
push
fcmovb
dec
dec
popf
lock
mov
cmp
sbb
jo
cli
out
fidivrs
dec
cmp
adc
pop
add
in
ret
sbb
movsb
fsubl
nop
and
cmp
push
adc
dec
mov
or
pushf
ja
mov
rolb
or
and
jne
aas
into
xor
adc
outsb
mov
mov
inc
add
scas
sub
daa
cmp
repnz
ss
sub
push
jb
mov
add
dec
jb
sbb
lea
pusha
push
into
lds
bound
pushl
jp
fstl
adc
rorb
filds
lock
lock
inc
fdivp
xor
notl
jo
sbbb
sub
adc
sbb
je
mov
nop
gs
je
nop
xchg
inc
popw
fs
pusha
sbb
fs
insb
push
sbb
xor
cmp
mov
xchg
push
and
or
je
cmp
je
popf
add
mov
lds
mov
fsubl
lea
mov
push
push
hlt
sti
push
sub
inc
and
shrb
jmp
push
jne
inc
xor
movsl
gs
roll
andl
dec
inc
push
outsb
dec
adc
jnp
in
adcb
lock
xchg
xchg
cld
lock
lcall
and
stos
or
call
pop
in
adc
repz
add
push
lods
cwtl
sbb
clc
jg
cmp
movsl
movswl
in
push
mov
xor
cli
add
add
push
and
sar
xor
cmpsl
adc
lret
sub
cmpsl
push
adc
movsb
cmp
xor
inc
add
sahf
push
flds
and
pop
sub
mov
test
or
or
inc
loop
add
cwtl
xor
testb
and
jle
hlt
xor
cmp
jbe
add
push
adcb
mov
mov
and
in
insb
outsb
jno
adc
popa
cmpsb
adcl
push
mov
cs
add
jle
add
test
daa
je
push
in
mov
std
aas
jne
outsb
mov
lock
and
pop
sbbl
stos
or
sub
pushf
cwtl
fidivrs
or
sub
xchg
mov
je
sbb
add
cmp
push
cmp
outsl
and
dec
push
lea
sub
push
out
pop
xor
jns
rclb
push
or
imul
lock
pushf
pop
fcoms
and
cs
xor
fbld
ljmp
dec
popa
cmp
adc
lahf
xchg
cmc
dec
mov
sbb
arpl
movsl
arpl
xchg
imul
fsubs
fdivl
inc
outsb
cwtl
lock
movsb
add
lret
inc
adc
pop
add
cmpsl
pop
pusha
cs
mov
xor
dec
mov
xlat
dec
pop
cmp
fdivs
inc
clc
push
sbb
dec
cwtl
sub
in
outsl
std
xor
cmp
es
mov
pop
xchg
adc
stos
push
xchg
sbb
rolb
and
jne
and
and
push
fstl
cmp
mov
mov
or
sub
mov
loope
jmp
add
mov
pop
cmp
pushf
outsb
jmp
or
xchg
pushw
pop
push
adc
xor
xor
and
cmpb
mov
xor
push
cli
aam
or
sub
sub
sahf
add
mov
mov
push
adc
push
or
ja
adc
ja
fisttpl
lock
cmpl
pop
out
inc
lods
out
push
dec
test
aad
push
mov
cmpl
aaa
divl
pshufw
mov
and
subb
idivb
pop
jae
jecxz
call
xchg
xor
mov
inc
xor
dec
pusha
test
fdivl
xor
mov
movsl
add
into
les
jl
sbb
and
push
mov
xor
add
and
sbb
push
pop
add
xor
xor
cmc
outsb
leave
add
mov
scas
ret
xor
sbb
pusha
in
aaa
pop
sbb
add
fs
sbb
lcall
inc
fdivp
sub
repz
test
ficompl
mov
pop
and
test
and
roll
ja
and
divl
movsl
push
ss
and
cmpsl
pop
ljmp
lahf
lea
cmp
add
fld1
cmc
sub
sub
inc
or
xor
pop
dec
or
mov
xor
call
or
inc
iret
in
adc
dec
fstpt
adc
into
cmp
adc
and
outsb
dec
adc
adc
sub
mov
pop
and
in
inc
jg
adc
inc
into
test
int
sar
iret
sbb
push
adc
push
addr16
adc
je
in
cmp
adc
ljmp
or
std
push
sub
mov
push
das
je
shrb
pop
or
pop
pop
cmp
push
and
js
jmp
sub
arpl
push
xchg
pop
pop
scas
xor
or
scas
jno
rorb
push
imul
and
or
addb
aad
decb
shr
and
or
add
sahf
push
mov
jge
fs
fsubrp
push
xor
cs
sub
ljmp
sub
jbe
push
xor
push
or
or
push
lods
or
jbe
pop
xor
mov
xchg
mov
sub
pushf
adc
cmpsb
movsb
ror
or
jmp
mov
sbb
inc
in
mov
pop
add
sbb
xchg
add
add
dec
cwtl
xchg
sub
xor
dec
repz
and
push
inc
xor
xchg
or
pop
xor
sbb
nop
rcrb
adc
cmp
inc
push
jg
add
fwait
push
cs
xchg
cmp
and
nop
fstp
mov
dec
adc
mov
popl
dec
mov
push
push
push
mov
cmpsb
cltd
inc
push
inc
xor
lds
fildl
sar
jmp
ljmp
sub
test
inc
push
dec
pop
push
adc
pop
fadd
adc
outsb
call
push
add
jmp
xchg
test
lea
pop
push
inc
std
pusha
or
lods
stc
inc
mov
js
aas
call
scas
jmp
pushl
popa
adc
mov
pop
add
push
hlt
mov
add
inc
mov
dec
push
inc
adcb
shll
imul
pop
pop
sbb
negb
pop
sub
mov
mull
mov
jl
mov
popl
inc
faddp
and
js
or
inc
scas
mov
cwtl
scas
mov
outsb
inc
jae
cmp
fisubl
or
dec
xor
jge
pop
repnz
jo
push
dec
jne
dec
adc
xor
xor
cmp
das
and
daa
mov
nop
jo
or
lock
adc
sub
shll
xor
ror
and
xlat
inc
push
cmpsl
shl
mov
inc
and
dec
loopne
sbb
xchg
mov
pop
lock
rcrl
pop
push
sbb
pop
jo
pop
jmp
and
mov
loope
adc
adc
clc
mov
bound
lods
and
push
cwtl
dec
mov
mov
rolb
or
or
movsl
add
cmp
sub
push
cs
push
sbb
pop
lock
insb
jo
jne
mov
notb
pop
mov
sbb
jle
out
add
cmp
cmp
dec
ja
imul
ret
inc
sbb
mov
fdivl
cmp
dec
or
dec
jl
loope
xor
push
and
scas
mov
adc
rcrb
dec
mov
in
adc
mov
lods
push
push
leave
ds
test
pop
adc
xchg
cmc
lods
mov
mov
dec
fstl
sub
add
enter
mov
aas
mov
inc
repnz
add
add
push
pop
lods
in
push
popa
add
sarl
aaa
add
adcl
loopne
push
ret
lret
movsl
push
push
lock
loopne
add
outsb
inc
ds
or
and
and
movsb
cld
lock
push
xchg
dec
add
scas
mov
adc
je
sbb
or
or
ret
cli
add
mov
inc
mov
mov
test
mov
xchg
xor
jnp
or
mov
mov
pop
sbb
inc
mov
jns
sub
fcomip
fcoms
mov
add
pop
and
cmp
ret
or
mov
mov
jp
es
xlat
dec
fwait
sbb
or
push
pop
push
push
push
jg
mov
rolb
jge
mov
sbbb
mov
push
in
add
inc
popf
xchg
ljmp
ret
adc
and
push
arpl
add
or
sub
je
mov
push
xlat
iret
pop
mov
jecxz
push
int
pusha
addr16
or
lcall
imul
filds
and
push
mov
adcb
adc
rolb
lea
lcall
jmp
adc
aad
or
sbb
inc
js
xlat
sbb
cmpsl
and
test
push
adc
adc
cmp
pop
mov
add
xorl
add
or
outsb
movsl
or
jg
mov
sub
mov
je
in
clc
push
pop
add
or
sbb
jbe
arpl
dec
and
and
sub
bound
push
push
mov
dec
mov
outsl
push
or
jae
sbb
lock
fnstcw
pop
xchg
or
fadd
inc
mov
stc
dec
add
rolb
inc
in
or
andl
mov
dec
fcomi
lock
dec
cmpsl
mov
dec
insb
nop
inc
inc
lods
add
push
adc
lock
outsb
stos
add
mov
sbb
adc
lret
cmp
adc
sbb
fdivrs
fs
popf
add
and
jb
sub
pop
negl
loope
push
je
push
adc
jae
adc
enter
push
push
fs
add
mov
xchg
jecxz
inc
or
and
aas
mov
xor
std
sarb
mov
outsl
stos
out
cmpl
cli
push
cld
sbb
pop
push
add
push
outsb
pop
sbb
test
jne
aas
nop
push
inc
inc
insb
shr
inc
add
lret
sahf
rorl
push
loopne
adc
adc
out
sub
adc
ds
add
ljmp
insb
std
lahf
add
rcrb
pop
jp
aam
loop
dec
adc
leave
and
stc
and
mov
in
sub
mov
movsl
mov
addl
xlat
pop
jnp
sbb
push
arpl
pop
shl
jne
inc
inc
lock
lods
add
push
cmp
xchg
mov
add
add
mov
jmp
ja
add
xor
push
or
insb
push
push
sbb
xor
jno
push
sbb
mov
and
xlat
push
mov
addb
rclb
xor
add
xor
js
lea
jle
adc
or
cltd
dec
out
mov
mov
add
cmp
adc
xchg
cmp
xor
dec
test
pushl
sbb
mov
jg
pop
sub
aam
xor
sbb
inc
xchg
xor
je
mov
add
fldl
sbb
jno
mov
lock
adc
inc
or
pop
je
dec
int
jl
push
push
jnp
xorb
push
pop
mov
sub
jl
mov
sub
adc
or
add
inc
lds
pop
movb
addr16
and
sarl
stos
ret
jbe
es
inc
sahf
pop
push
mov
out
repz
cmp
or
jo
sbb
xor
xchg
or
adc
inc
jo
mov
jbe
push
and
dec
adc
aas
enter
pop
stos
push
inc
jb
nop
mov
or
and
cs
xchg
push
insb
call
cmp
push
mov
pusha
pop
inc
addr16
cld
sti
cmp
xchg
or
adc
dec
inc
aaa
test
inc
es
ret
in
lea
and
aad
fs
push
test
es
adc
push
push
and
jns
scas
adc
or
sbb
jae
jecxz
mov
jl
jmp
shlb
rorb
xchg
insl
in
dec
sub
inc
inc
lock
adc
xor
and
test
jbe
mov
les
pop
mov
in
jnp
into
sbb
cmc
pop
movsl
mov
mov
xchg
fs
stos
loopne
jmp
pop
testl
pop
je
and
sbb
dec
es
inc
jbe
repnz
call
or
dec
or
push
rolb
cwtl
push
and
pop
xchg
push
ret
adc
cwtl
cs
sbb
sbb
loop
mov
add
cmp
xchg
cltd
adc
push
daa
cs
inc
xchg
add
into
mov
push
out
add
pushf
mov
sets
add
or
lds
push
pop
dec
xchg
lock
pop
push
testl
pxor
jle
xor
or
mov
addr16
aas
imul
in
and
and
test
or
jno
xchg
subl
adc
jae
push
push
fsubrl
imul
sbb
sbbl
cltd
in
lods
jmp
pop
pop
push
push
dec
adc
push
or
dec
int
mulb
push
xor
and
clc
test
xchg
test
js
sbb
cmp
mov
push
mov
push
add
les
ljmp
shlb
loopne
or
mov
or
ret
xchg
scas
jbe
and
sub
sahf
add
notb
adc
dec
push
mov
cmp
adc
imul
mov
push
sbb
and
aad
adc
xor
inc
mov
mov
mov
xchg
stos
sti
adc
adc
insl
dec
jecxz
js
lock
cmpsb
or
adc
pop
das
les
ss
das
rcll
add
into
cmp
xor
xor
push
or
lea
loop
cmp
imul
xor
adc
pop
cld
push
and
testb
cmp
inc
shl
call
adc
test
mov
call
lcall
sbbb
inc
sub
leave
in
andl
pop
xor
nop
dec
roll
je
or
je
or
sub
cmp
mov
scas
cmp
rclb
or
jns
cmp
fiaddl
push
or
add
sbb
jne
sahf
mov
jnp
add
xor
negb
mov
pusha
push
adc
adc
push
xor
inc
push
jo
mov
cmp
sbb
aad
adc
loope
leave
js
es
dec
push
jbe
stos
call
clc
cmp
adc
push
xchg
movb
daa
mov
sahf
pop
lds
or
add
dec
push
adc
or
pop
pop
push
sti
xchg
jo
push
cmp
adc
mov
mov
in
xchg
es
cltd
and
daa
pcmpeqw
aas
lods
xchg
test
mov
pop
incl
sub
mov
push
nop
ret
outsb
inc
sbb
ret
je
sub
mov
pop
cmpsl
add
out
or
shlb
inc
jo
stos
mov
sbb
in
int
jmp
test
shll
lock
mov
adc
sub
fdivrs
ds
in
mov
stc
insl
inc
or
or
stc
ja
xlat
inc
or
push
and
push
fldenv
xor
cmp
loopne
adc
xor
mov
addr16
and
shrl
inc
inc
lds
xchg
loopne
inc
pop
popf
adc
cmp
mov
xor
add
xor
shlb
jg
repz
push
add
dec
pusha
add
xchg
push
dec
xchg
push
dec
push
orl
xor
or
call
add
nop
pop
and
jo
push
push
fists
xchg
xchg
pop
fildl
xchg
sub
andb
push
lcall
pop
roll
mull
xchg
inc
out
add
xor
mov
sub
jno
pusha
or
inc
dec
push
dec
jno
pop
add
enter
add
adc
mov
xchg
add
nop
inc
pop
add
mov
pop
inc
mov
pop
jb
fsubr
or
pop
std
and
xchg
adc
add
jo
pusha
loope
jge
mov
mov
cmp
pop
cmp
js
lods
mov
push
push
ds
add
sahf
push
mov
fsubrp
push
das
jno
inc
xor
int
fdivrl
pusha
push
ret
pop
cmc
fsubrs
mov
mov
adc
les
call
bound
pushf
or
and
test
jl
mov
mov
dec
push
sarl
loopne
sbb
roll
aam
cmp
dec
sbb
jb
sbb
inc
dec
jmp
push
adc
addl
inc
js
inc
sbb
mov
xor
lods
or
sbb
sbbl
das
jne
mov
decl
or
mov
jmp
cmp
rcrb
or
sub
fidivl
loope
dec
stos
inc
or
sbb
ret
dec
jl
dec
or
mov
xor
js
inc
sub
mov
inc
loope
pop
loopne
and
jb
retw
mov
nop
push
push
xor
pop
or
out
jl
in
or
fcoml
and
call
push
hlt
or
adc
adc
stos
inc
pop
out
loopne
pusha
mov
adc
push
jb
jns
and
dec
sub
outsl
adc
sub
in
push
je
daa
js
lret
xor
xchg
mov
rcrb
fs
out
xlat
sub
js
or
movsl
data16
test
and
shlb
push
cld
and
sub
add
pop
sbb
fisttpll
jp
mov
add
or
int
mov
inc
in
or
jne
lods
or
dec
shll
and
xor
or
xorb
test
jp
in
cmpsl
push
cmp
sbbb
fdivrs
push
jp
push
gs
pushf
enter
test
je
rcl
add
xchg
das
fadds
adc
add
jge
push
xchg
push
sub
sub
imulb
push
imul
xor
xor
and
xor
sbb
dec
dec
and
xor
and
adc
add
pop
dec
stos
lret
cmpsb
cwtl
inc
xchg
add
adc
cmp
clc
nop
cmp
cmp
sbb
jne
das
popa
mov
mov
push
add
and
mov
sbb
rcrb
add
or
or
pop
adc
or
jb
sbb
popa
pop
add
ret
test
sub
adc
inc
mov
lock
pop
jp
lods
test
xlat
sub
or
xchg
popa
sub
push
pop
pusha
daa
cmpsb
mov
cmpsl
xchg
pop
inc
or
xchg
enter
sahf
shrb
add
lock
ds
sub
push
pop
add
pop
sbb
or
cmovae
test
dec
call
push
movsl
ret
xor
sub
icebp
fisubs
mov
jnp
mov
into
add
das
add
cmpsl
xor
jle
add
cmp
jne
xor
adc
les
push
xor
call
or
xchg
jp
mov
push
dec
xchg
jne
test
dec
or
jp
or
mov
xchg
pop
cmpb
lock
fnstcw
sti
or
jl
sbb
call
or
das
push
sbb
jmp
or
pop
pushf
std
and
adc
les
mov
dec
adc
and
push
sbb
xor
fists
adc
push
rcrb
add
jbe
mov
aad
adc
je
add
cmpb
in
xor
xchg
adc
sub
pop
sub
pusha
popa
or
das
insb
and
divb
loope
dec
fdivs
sub
into
jle
jno
push
js
push
mov
add
jbe
or
or
mov
push
mov
push
adc
mov
daa
pusha
test
sbb
in
add
xchg
push
sub
mov
xor
pusha
add
push
das
popf
fsubrp
inc
enter
les
or
sub
testl
xor
inc
mov
xor
punpckhdq
fs
in
loop
int3
dec
pusha
or
sub
push
jns
scas
decl
dec
pushf
mov
icebp
lock
fnsave
in
cmp
shlb
lods
repz
lock
dec
pop
and
cmpsb
lock
mov
pop
push
sahf
adc
and
fcomp
dec
and
or
cmp
xor
add
sarb
cmp
push
fcompl
adc
add
iret
lea
inc
mov
mov
xor
add
sbb
popf
xchg
sarb
push
sbb
adc
push
adc
jo
sub
addl
add
sub
test
fdivrp
and
shll
imul
movsb
lahf
call
jmp
je
or
jbe
push
jecxz
add
xor
xchg
imul
sti
fadds
negl
fisubs
cld
or
sbb
insb
fists
push
adcb
sbb
add
ficomps
mov
rcrb
pop
inc
sub
cmp
add
sub
or
cmpb
mov
sar
push
data16
push
adc
add
loop
jp
subl
arpl
inc
cwtl
jo
sbbl
cmp
insl
sub
or
xchg
icebp
ss
in
sbb
xor
in
sub
jmp
cltd
push
in
orl
add
push
mov
mov
bound
add
push
les
dec
or
je
adc
test
push
adc
fists
imul
outsl
inc
sbb
sbb
sbb
flds
ljmp
xor
shrb
dec
xor
enter
sub
push
lock
adc
lea
fnsave
bound
xchg
data16
or
mov
or
push
adc
inc
and
xor
xor
adc
xor
imul
sbb
sbb
hlt
inc
rcrb
cmpl
add
fidivs
jne
mov
jb
ret
ror
ja
push
jns
inc
dec
fs
jle
fs
push
das
inc
ss
int3
addb
jae
sub
and
xchg
jl
mov
and
cli
fs
gs
outsb
test
addr16
cmpsl
jge
loop
sbb
int
push
mov
mov
js
dec
addl
clc
call
sti
inc
or
bound
add
adc
out
mov
push
cmp
push
adc
sbb
mov
jecxz
pop
ret
movsl
test
pop
dec
adc
sub
xor
lret
or
rcrb
cmpsl
cmp
aaa
fsubl
cltd
push
sbb
sub
movsl
sbb
xor
xor
add
or
mov
loope
sub
jg
add
push
fucomi
lock
push
loope
sbb
or
call
sub
jle
js
stos
inc
add
inc
bound
je
cltd
fdivl
xor
into
iret
in
das
xor
in
xchg
pop
xor
push
in
push
dec
pop
lcall
pop
mov
dec
pop
fstpt
testb
icebp
push
mov
rorb
mov
fnstsw
push
rcrl
jmp
stos
pop
aas
loopne
loopne
add
rol
xor
push
and
mov
push
stos
mov
enter
add
cmc
add
pop
aas
push
cmp
mov
std
ljmp
adc
sbb
rolb
addr16
add
sub
xor
popf
adc
sbb
inc
push
divl
int3
adc
std
xor
in
fs
jo
add
xlat
daa
insl
xchg
add
add
and
mov
xchg
ret
pop
gs
inc
shlb
xor
add
cmp
cmp
fcmovbe
movsl
lods
inc
dec
or
cmpsb
imul
add
mov
rol
pop
ret
inc
xchg
insl
push
cmpsl
dec
or
scas
mov
fst
in
call
cld
loopne
add
std
icebp
jo
ret
add
repnz
push
push
and
pop
addl
mov
cmp
movsb
add
adc
cmp
add
xorb
xchg
out
inc
and
xor
mov
or
cmp
or
pop
cmp
jne
mov
adc
lret
mov
cmpsl
push
add
inc
mov
sub
mov
push
popa
rolb
cmpsl
movsl
or
xchg
mov
popa
jo
jmp
jmp
imul
rcll
outsb
mov
push
or
insb
mov
rcrl
jl
or
xchg
inc
outsl
in
xchg
jbe
dec
or
push
and
or
jmp
push
fadds
imul
sub
jne
push
adc
xchg
imul
ror
psllq
sub
dec
enter
call
shlb
fcmovb
push
jo
push
or
xchg
or
xchg
mov
pop
faddl
add
ret
mov
adc
sbb
jge
adc
jo
add
decl
push
dec
push
push
mov
and
and
mov
push
xlat
nop
mov
sbb
adc
fadds
loop
push
enter
jb
lds
mov
mov
push
ja
xor
mov
insl
mov
rclb
imul
dec
sbb
adc
enter
imul
pop
mov
stos
sbb
lock
jge
xor
add
push
xor
pop
call
or
mov
mov
jmp
mov
cmp
jbe
shll
cmp
push
xor
cmpb
rcr
lahf
imul
push
shll
je
mov
add
andl
inc
lock
add
bound
add
jns
mov
sahf
xor
cmp
push
and
cmp
push
sbb
popf
add
sub
mov
xor
adc
into
aam
dec
stc
add
cmpsb
lds
sub
jo
add
mov
int
cmpsl
cmp
push
cmp
push
pop
pop
and
insl
sub
xchg
sbb
lods
add
dec
lock
gs
test
sub
cltd
rol
or
sub
sbb
jne
frstor
xchg
leave
cmpb
stos
adc
add
andl
sbb
sub
roll
mov
push
addb
jl
inc
ds
fwait
std
aaa
aas
ja
push
and
sbbb
lret
or
mov
add
xor
xchg
ret
push
not
cmp
and
sbb
setnp
or
gs
inc
add
into
shrb
add
xchg
ret
aam
jb
ret
dec
and
insl
pop
cmp
or
lcall
inc
and
movsl
in
outsl
pop
je
hlt
mov
and
sbb
test
xchg
ffree
xor
jo
xchg
cld
je
js
or
sub
pop
jb
pop
pop
jecxz
clc
mov
fsubl
sbb
orl
rol
outsb
call
insb
xchg
lahf
jle
rcl
out
or
lret
subl
push
rorb
xor
pop
sbb
push
mov
mov
sbb
jno
sbb
rorl
add
int3
mov
push
enter
nop
pusha
cmpsb
push
jb
inc
and
add
test
inc
shrb
hlt
mov
pop
enter
push
movsl
icebp
jo
adc
xor
leave
mov
rcl
loop
pop
lods
inc
sbb
xor
popl
and
cld
adc
lea
xchg
sbb
fadds
loopne
cmp
cmp
jne
mov
aaa
mov
mov
bswap
or
std
jbe
fisttps
lds
lods
sbb
dec
stos
xchg
push
dec
adc
sbb
xchg
dec
inc
fadds
sbb
push
fs
cld
and
or
push
sbb
or
imul
ss
adc
scas
out
ficomps
fs
mov
mov
popa
icebp
add
pop
adc
push
mov
fs
xchg
dec
shlb
jmp
add
dec
dec
faddl
test
add
sub
orl
push
push
adc
sbb
cld
push
les
push
call
jo
rcll
mov
js
mov
cmp
ret
sahf
aaa
xor
xchg
xchg
in
test
sbb
aam
mov
mov
pusha
lods
loopne
dec
outsl
jno
dec
das
lea
xchg
cmp
ss
push
sbb
add
cmp
or
push
hlt
pop
xor
popa
adc
mov
mov
subb
adc
mov
in
jp
and
aas
lods
daa
inc
mov
inc
pushl
add
xchg
xchg
sub
push
rcll
pop
xor
andps
pusha
mov
fildl
pop
test
mov
icebp
mov
scas
cwtl
jmp
mov
ficoml
cli
insb
add
mov
jecxz
popa
pop
nop
dec
roll
cmpsl
xor
mov
push
clc
call
adc
jge
sarb
imul
fcoml
sub
cld
sub
pop
insb
sub
insb
lock
pop
add
mov
and
jbe
sub
lea
loopne
dec
jbe
push
push
mov
jb
xor
sub
ret
das
or
xchg
imul
push
outsb
outsb
inc
xor
leave
nop
sbb
cmp
sahf
pusha
lds
mov
or
adc
ret
shlb
inc
lock
lods
xchg
mov
adcl
add
ret
sub
push
inc
push
addr16
in
sti
jl
test
rolb
scas
mov
mov
sub
mov
loop
push
ret
pop
cltd
pop
mov
sub
push
in
sub
jle
dec
add
jmp
pop
mov
adc
push
popa
jbe
mov
out
lock
es
dec
fmuls
xor
push
lds
dec
push
sbbb
addr16
sub
and
or
sbb
jg
or
lret
lret
lret
or
inc
xor
pop
jbe
lret
xor
cmp
or
mov
pop
pop
dec
pop
dec
lods
push
clc
fiaddl
pop
and
jecxz
ret
clts
add
jg
or
inc
add
loopne
cli
pop
insl
cmp
jae
mov
jecxz
int3
mov
arpl
dec
cwtl
add
or
or
mov
push
push
rcrb
jbe
inc
add
rcl
xchg
xlat
jg
scas
lahf
inc
pusha
mov
mov
jne
xchg
pop
movl
xlat
and
cmp
loopne
mov
pop
data16
iret
inc
adc
xchg
adc
dec
mov
or
ss
and
pop
test
ja
push
dec
adc
inc
add
dec
lods
or
pop
hlt
jo
loopne
gs
gs
xor
arpl
lea
push
es
addr16
movsb
jno
pop
sub
jl
jb
and
jae
lahf
dec
push
jl
cmp
push
pop
adc
mov
mov
xchg
movb
fstps
jecxz
hlt
out
xor
jle
dec
pop
add
lcall
movsl
xlat
outsb
and
in
xor
pop
repnz
jge
je
jge
mov
sub
or
fs
iret
xor
loop
push
mov
sub
rep
fimull
xor
or
add
jns
or
sbb
cmp
jae
daa
and
sbb
and
inc
sbb
loopne
adc
mov
fistpll
and
jne
push
push
inc
push
into
in
leave
and
cmpsb
xlat
push
and
push
mov
pop
cli
sbb
pop
loopne
adc
or
je
sub
pusha
dec
les
std
adc
adc
lea
aas
xchg
rcrl
inc
add
sbb
orb
adc
push
pop
fldenv
int
adc
lea
outsb
sub
push
cmpsl
mov
xchg
mov
or
xchg
and
fs
mov
inc
movsb
inc
scas
push
iret
test
mov
das
lcall
add
jnp
movsl
je
cld
pop
adc
push
push
push
or
mov
sbb
inc
ja
xchg
or
add
scas
push
push
lcallw
hlt
lock
clc
add
sub
add
xchg
push
push
xchg
pop
push
lret
nop
mov
mov
mov
adc
lcall
mov
imul
push
jns
arpl
sbb
push
cmpsl
fcomps
xlat
mov
adc
bound
push
lods
cmp
ret
pop
shll
daa
sbb
movb
cld
loopne
roll
addb
and
or
sbb
sub
dec
outsb
loopne
mov
sub
inc
andl
test
inc
sbb
sub
or
enter
add
adc
outsb
push
xchg
adc
inc
sbb
shll
or
adc
insb
jl
xlat
sub
pusha
popa
jno
dec
mov
clc
adc
or
sbb
adcb
call
enter
ja
xchg
andl
or
mov
icebp
push
pop
xchg
testb
sub
test
jle
jnp
movsl
add
sub
or
push
test
add
ret
cli
rorl
aas
xor
cmp
inc
pusha
je
flds
add
cs
sti
xorb
out
or
sbb
test
add
push
outsw
mov
les
sbb
rol
add
lds
jb
ret
mov
rcrb
js
call
iret
mov
int
jo
and
sub
or
mov
es
adc
es
in
imul
push
movsb
sub
or
cmp
jnp
ret
sub
leave
shrb
cmp
mov
xor
adc
mov
cmp
out
in
imul
sahf
shrl
dec
lea
into
clc
loopne
lods
add
ret
adc
push
and
loopne
pop
adc
push
dec
js
inc
mov
xorb
xchg
notb
pop
fists
je
push
mov
push
lret
jo
insb
and
and
xchg
and
xor
ret
mov
add
jle
mov
push
jbe
mov
add
xchg
xor
sbb
sub
mov
cmp
adc
insl
dec
xchg
adc
js
or
orb
rcrl
mov
stc
jne
sub
sbbl
outsb
pop
jp
cmp
mov
adc
jae
shrb
or
ret
sbb
jnp
dec
hlt
jae
pop
jae
xor
test
pop
loopne
ret
inc
cmp
and
icebp
pusha
push
push
adc
mov
sar
xor
cmpsl
adc
test
inc
push
push
rclb
inc
clc
sub
sub
stos
sbb
inc
push
shl
inc
cs
add
pop
dec
xchg
movsb
dec
jnp
mov
imul
sbb
sbb
das
jb
insb
rol
test
and
in
imul
xor
sbb
add
pop
pop
push
mov
iret
sub
jne
les
inc
cmp
int3
ret
js
lcall
jne
xchg
mov
rol
call
mov
inc
pop
scas
lret
or
aam
fstl
aas
mov
fmuls
pop
cmp
sahf
or
inc
jle
ret
subl
push
jmp
adc
daa
or
push
cmp
cmp
add
jnp
inc
push
jmp
add
enter
lahf
arpl
adc
pusha
dec
and
cmp
or
imul
movsl
arpl
fadds
jmp
mov
scas
jae
cmp
and
adc
add
jp
xchg
test
shlb
in
mov
or
add
dec
insb
mov
add
cmpsl
jne
in
sub
jne
cmp
and
or
cmp
test
add
cmpb
and
in
ljmp
inc
loope
mov
lods
mov
adc
xor
dec
mov
and
mov
dec
push
xchg
inc
aas
and
imul
and
and
and
pop
enter
in
add
adc
pop
enter
jg
sub
pop
enter
enter
jo
pushf
pop
enter
hlt
jae,pn
fsubs
aas
or
push
pop
aaa
mov
pop
in
inc
push
pop
mov
xor
scas
inc
push
adcb
xchg
xor
or
xor
mov
xchg
ds
mov
sbb
movsb
leave
jmp
cmp
cld
or
fdivs
or
pusha
adc
mov
aaa
xor
in
inc
pop
sbb
dec
sbb
or
insl
negl
sbb
mov
cmp
test
in
mov
pop
mov
mov
dec
into
inc
adc
jge
mov
sbb
mov
dec
jp
call
add
daa
mov
pop
pop
mov
test
mov
mov
ja
push
push
inc
sub
xor
in
jnp
int
rcrb
adcb
lds
add
sbb
ret
inc
mov
sarb
jns
fimuls
enter
imul
or
mov
mov
jo
fidivs
clc
xchg
test
mov
or
sub
stc
notb
call
pop
hlt
mov
push
cs
mov
hlt
push
sbb
sub
push
or
inc
or
arpl
mov
sbb
push
pop
cwtl
sbbb
std
push
fidivs
lock
and
jmp
jg
cmp
add
jne
pop
lock
cmp
ds
fcmovnu
sub
mov
mov
jecxz
push
mov
adc
mov
loopne
jae
sahf
and
cwtl
pop
clc
mov
push
push
lock
sbb
inc
jno
jg
pop
add
dec
clc
mov
addb
pop
push
mov
mov
sbb
dec
dec
sbb
fcoml
sbb
shl
fsubl
xor
aas
xchg
mov
push
add
fists
loopne
mov
pushf
jbe
or
pop
mov
mov
jmp
cmp
inc
je
push
cmpl
add
jl
add
push
push
xor
dec
xor
jb
xor
or
or
mov
cmp
add
int
mov
sbb
addl
pop
xchg
popa
fadd
and
cwtl
sub
sub
xchg
or
add
das
popa
jge
inc
or
inc
xchg
sub
sub
jne
inc
inc
xchg
mov
pop
mov
add
mov
xchg
scas
or
cmpsb
in
shll
jo
fwait
add
ret
inc
sub
cltd
rcrb
lea
mov
arpl
add
arpl
adc
dec
push
clc
lock
stc
add
sbb
jne
push
inc
add
and
jmp
xor
mov
icebp
sub
mov
sbb
mov
or
mov
cld
jne
and
mov
sarl
push
fcoms
or
aam
mov
sbb
in
lock
pop
mov
inc
stc
add
and
jno
mov
test
add
push
adc
inc
stos
cmp
aam
nop
js
das
and
dec
pop
jne
pop
cmp
xor
cwtl
cmpsb
sbb
out
pop
cli
aam
or
jmp
jl
jo
roll
jge
dec
push
xor
add
imul
inc
fistps
ret
cli
movsl
stos
mov
aam
add
fsubs
imul
sub
clc
jmp
mov
mov
loopne
mov
in
push
inc
inc
adc
push
jbe
or
add
scas
jb
or
sbb
jg
insl
push
cmp
jl
mov
adc
stos
or
jmp
cld
roll
stos
mov
ret
push
rclb
add
inc
add
fdivrl
mov
sbb
add
loopne
sub
push
push
test
inc
mov
pop
dec
or
adc
loopne
mov
aaa
dec
mov
mov
js
shlb
pop
and
daa
lock
fs
mov
adc
mov
test
sub
and
or
jae
mov
cmp
cli
push
call
test
pushf
lea
push
ja
push
rol
dec
sub
mov
jecxz
or
push
dec
sbbb
ds
divl
arpl
pop
inc
jb
push
mov
push
inc
inc
sbb
mov
mov
shlb
push
cmpb
jnp
xchg
mov
shrb
xchg
fcoms
mov
rclb
mov
loop
jmp
loope
repz
pusha
in
xchg
lods
rorb
sub
push
mov
sub
in
dec
xor
rorl
jmp
pop
lcall
mov
mov
or
lock
cmp
test
rorl
pop
mov
nop
push
in
or
xor
cld
push
pop
int
movsb
rol
loopne
movsb
leave
imul
je
pop
push
andb
movsb
aam
mov
mov
sbb
sbb
mov
or
es
test
jle
cwtl
or
mov
pop
xchg
push
and
lahf
or
insl
jl
and
inc
mov
fs
movsl
into
mov
incb
or
lret
push
mov
mov
iret
das
xor
int3
and
jo
mov
push
xor
pop
ja
daa
insl
sbb
mov
fmuls
out
mov
enter
sub
push
add
push
loope
sub
negl
cmpl
enter
fadd
or
arpl
or
add
push
arpl
mov
mov
cwtl
insl
sbb
mov
lods
into
cs
aas
icebp
push
or
xchg
sub
xchg
js
lock
mov
mov
push
mov
sti
push
push
inc
pop
xor
cmp
jbe
add
adc
inc
aam
push
scas
popl
sub
stos
add
subb
push
loop
test
stos
ds
xor
outsb
dec
push
inc
gs
jne
dec
jo
das
and
or
xchg
pop
xchg
loopne
push
adc
inc
stc
xchg
add
loopne
sub
arpl
push
in
sbb
sub
loopne
bound
rcll
push
and
aam
test
or
lds
push
push
or
dec
mov
xchg
aam
enter
or
add
push
mov
pop
xor
sub
test
or
jne
mov
cmc
or
outsb
sbb
mov
sbb
repz
add
js
mov
cmpsl
xor
push
mov
cwtl
fwait
mov
sub
push
cmpsb
adc
sahf
adc
push
mov
ret
jnp
daa
mov
pop
sbb
add
and
xor
mov
hlt
mov
mov
inc
sub
xchg
xchg
clc
inc
sbb
pop
add
or
popf
lods
and
cltd
add
enter
clc
rclb
push
push
or
cltd
and
inc
lock
add
mov
fimull
jle
imul
aas
add
dec
aam
adc
dec
inc
cmpsl
push
add
shll
jno
ds
sub
nop
mov
pop
call
and
push
mov
add
mov
fs
xchg
ss
es
ja
test
arpl
inc
iret
add
mov
adc
or
or
das
xor
and
pop
insb
mov
pop
adc
add
outsl
sbb
push
dec
incb
pop
xor
xchg
mov
sub
mov
or
fadd
add
out
mov
orb
mov
ja
imul
sub
cmp
dec
in
cmp
pop
movsl
les
inc
arpl
sbb
pop
or
or
sbb
mov
mov
outsb
jecxz
bound
les
jecxz
mov
lock
shlb
push
lcall
inc
cmp
fnsave
pop
lret
dec
push
lods
inc
pop
mov
mov
and
push
insb
enter
sub
aam
ret
fiaddl
mov
out
sbb
test
shr
or
pop
fsubrl
add
add
mov
pop
inc
rclb
inc
clc
push
lcall
or
push
mov
rcr
stc
add
cmpb
jg
je
sub
movsb
outsl
cmpl
insb
xchg
loopne
and
jp
xlat
adc
test
cs
lret
nop
xchg
cwtl
pushf
es
test
loope
adc
mov
mov
ja
push
sub
sub
xorb
aam
enter
movsb
aam
adc
jo
js
pop
repnz
and
aaa
sub
movsb
shrb
and
xchg
pop
fidivrl
xchg
inc
or
and
sbbb
imul
sbb
mov
movsb
icebp
fidivl
adc
xchg
lods
lea
ret
movsl
loope
pop
in
jmp
aaa
or
or
jne
push
out
jp
popa
or
lea
jp
sub
dec
mov
dec
mov
pusha
mov
hlt
enter
movsb
outsl
or
pop
mov
sarb
adc
dec
add
xchg
test
mov
jbe
adc
mov
jecxz
loope
repz
test
imulb
cmp
cltd
cmp
and
mov
add
enter
sti
and
sbb
test
or
into
cld
xchg
mov
and
movsl
roll
mov
jno
sub
jne
sbb
popf
bound
das
mov
xor
cmp
call
xchg
call
sub
mov
mov
jns
lods
mov
pop
sbb
popf
pop
dec
adc
push
push
movsb
lea
add
popa
and
inc
frstor
mov
xor
cmpsl
and
rcll
loop
xlat
mov
sbb
and
repz
mov
mov
jae
mov
rcrl
mov
ret
push
movsl
dec
cmovg
jmp
mov
jno
inc
pslld
xchg
jl
lock
scas
data16
push
sbb
xchg
daa
outsb
fs
stos
cmp
push
shrl
fmuls
stos
ret
aam
xchg
cmp
roll
popf
in
sbb
stos
es
cmp
cmc
push
inc
adc
push
bt
lret
or
daa
lock
out
add
jnp
cmc
inc
pop
mov
test
pop
and
subb
xor
loop
push
cld
dec
and
mov
incl
lret
fsts
sub
push
jl
enter
loop
mov
cmp
pop
stos
adc
cmpl
sub
test
out
fldenv
int3
sbb
add
jbe
jge
lea
inc
add
verr
maskmovq
idivl
add
out
push
data16
push
mov
push
and
jno
roll
add
mov
jns
test
in
and
xchg
pop
dec
insl
gs
movsb
inc
cmp
in
rolb
xlat
test
cmp
xchg
popf
xchg
push
xchg
js
pop
mov
mov
inc
clc
shld
loopne
aaa
mov
shl
cmp
mov
pop
mov
imul
mov
cmp
push
jno
pop
flds
xchg
lahf
xorb
inc
push
pusha
cmpsl
add
push
push
fsub
out
push
cmp
pop
add
shlb
imul
add
sbb
shll
pop
or
lock
cli
test
decb
push
pushf
mov
addr16
enter
mov
inc
subl
lock
xchg
jl
loopne
mov
xchg
pop
or
andl
dec
inc
cltd
xchg
nop
adc
jge
mov
inc
in
fcoms
popa
fwait
in
cmp
inc
hlt
or
pop
xchg
mov
add
inc
xor
sub
jle
insb
mov
cmp
push
xchg
test
push
int3
addr16
fstpl
stc
sub
adc
je
rclb
rol
jnp
jmp
adc
cli
xchg
bnd
insl
arpl
dec
cli
ret
jg
outsb
adc
cli
jbe
or
inc
sub
jge
push
inc
adc
jle
xchg
sbb
or
jp
test
lock
bound
jbe
sub
call
xor
inc
mov
push
add
je
int
es
jmp
or
jge
cmpsb
dec
cmp
jo
sub
xlat
pusha
andl
sbb
xor
and
jmp
inc
jo
add
jne
daa
cli
addr16
and
inc
lock
aam
shrb
inc
pusha
cmp
push
or
cmc
push
or
loope
pop
repnz
push
push
iret
pop
adc
adc
mov
stc
add
lret
jmp
pop
cmpsb
xchg
rcrb
aam
and
sbb
scas
stos
mov
cmpsl
mov
adc
add
sub
outsl
sbb
call
ret
pushf
in
xor
inc
mov
outsl
push
into
xchg
movsl
out
sbb
adc
sahf
push
push
rcrb
sub
movsl
adc
push
mov
add
shlb
imul
jecxz
in
push
push
dec
insb
ja
pop
xor
lret
lods
shl
mov
add
test
jns
loopne,pn
fisubrs
mov
nop
push
sbb
decl
pop
jl
iret
shrb
movsb
and
fs
or
and
lret
fwait
in
inc
xchg
jns
push
jle
add
in
pop
push
fadd
xor
fcomps
mov
inc
add
and
jl
in
or
out
jo
dec
aam
andl
fcoml
shlb
or
or
or
push
repnz
in
jae
imul
das
jmp
ror
dec
mulb
inc
push
adc
push
mov
cmp
divl
dec
stos
or
push
or
into
call
xchg
je
daa
adcb
das
jl
adcb
add
xchg
xor
movsb
and
shl
mov
xchg
stos
add
sub
mov
addr16
fnstcw
xchg
mov
xor
jmp
insl
sti
push
pop
push
and
pop
outsl
push
int
mov
test
adc
andb
add
in
add
mov
stos
movsb
lret
sbb
lock
mov
xchg
inc
lods
fdivrl
insb
mov
lods
inc
sub
aam
lock
sub
lret
sbb
inc
loopne
mov
sub
mov
or
test
ret
jbe
imul
push
cmpsl
fldt
pop
aas
mov
add
sbb
loopne
bound
pop
ret
inc
popa
shrl
loope
andb
or
push
in
hlt
push
into
or
xchg
cmp
fists
inc
sbb
and
push
inc
or
js
bound
add
add
dec
popa
enter
mov
inc
pop
jno
imul
mov
xor
xor
test
cmp
xchg
jb
and
out
int3
jne
frstor
shrb
or
jle
xchg
jns
sub
push
stos
xor
add
cmp
fdivrl
sbb
jp
sti
mov
xor
rolb
lcallw
loopne
addr16
and
es
sbb
sbb
inc
jmp
imul
dec
sbb
mov
jle
cmp
jno
insl
shll
and
inc
cmp
jnp
cs
test
pusha
shr
testl
xor
dec
push
pop
insl
lea
sarl
dec
xor
lock
mov
adc
add
test
push
fisttps
dec
push
and
jb
mov
xlat
not
sub
push
inc
test
lcall
xchg
outsb
pop
cmp
call
add
aaa
jmp
add
inc
adc
rcrb
fildl
adc
and
dec
loopne
inc
inc
and
jl
sbb
push
dec
mov
test
inc
inc
in
add
stos
sub
dec
in
push
pop
mov
mov
xor
mov
add
xchg
mov
inc
jne
push
mov
add
jo
push
mov
iret
and
dec
je
divl
imul
push
shl
pop
or
ja
adc
or
mov
mov
daa
jo
add
enter
adc
cmpsl
fcompl
and
incb
lret
push
pop
add
mov
lret
and
pop
fadds
movsl
sbb
ss
bound
cmp
xlat
and
pop
mov
pushf
jne
insb
nop
cmc
push
jo
mov
sbb
lods
call
jb
push
sbb
and
lea
xor
jl
xor
fld
sub
inc
and
or
mov
mull
add
jge
mov
lea
imul
mov
addr16
push
and
pop
test
add
fisubrl
or
mov
fldt
leave
stos
jl
add
xor
xchg
mov
lcall
mov
inc
mov
cs
pop
sub
sub
add
shrb
adc
dec
in
dec
cmp
sbb
jp
shlb
mov
flds
popf
mov
push
les
fs
int3
adc
js
movsb
stc
in
pop
push
sbb
ljmp
fldcw
or
sbb
add
es
sub
repz
pusha
int
sbb
sub
cmp
cmp
mov
dec
jg
sbb
push
push
mov
and
and
xor
xor
or
push
adc
add
mulb
add
xor
rclb
je
inc
movsb
pusha
mov
loopne
je
movsb
je
xlat
cmp
insl
mov
cli
mov
sbb
and
xchg
outsb
ljmp
pushf
mov
nop
or
mov
sbb
push
or
jp
mov
cmp
mov
adcl
lahf
imul
add
shl
push
xchg
jecxz
push
xlat
adc
add
out
adc
fsubr
lods
pop
clc
fxch
jl
fcomip
push
pop
mov
imul
push
test
sarl
adc
xor
xchg
imul
push
mov
dec
test
xchg
mov
xchg
adc
cmpb
les
movsl
adc
or
sub
jmp
dec
popa
add
lret
int3
mov
in
nop
or
pop
out
dec
adc
inc
fdivrs
stos
adc
add
xchg
cmp
jmp
rolb
pop
adc
add
imul
cmp
fdivrl
add
pop
mov
push
xor
lock
fisttps
movl
dec
push
push
xor
xor
jle
and
jg
mull
push
push
pop
negl
stos
mov
loopne
loop
testb
es
xor
mov
inc
and
test
gs
add
movsl
push
jbe
push
jo
je
push
das
sbb
ss
add
adc
push
orl
dec
sub
cltd
ret
pop
inc
test
test
add
xchg
sahf
aaa
lods
adc
xor
imul
nop
loopne
xchg
add
call
lcall
mov
dec
mov
mov
in
xchg
adc
push
dec
nop
mov
lods
sub
enter
clc
pop
pop
push
mov
sub
inc
les
pop
pop
pop
int3
jo
mov
mov
add
fistl
incl
lea
push
or
inc
push
ret
loopne
mov
push
fdivr
xchg
adc
scas
int
aad
mov
imul
add
in
les
adcb
xchg
mov
pop
mov
dec
shrb
fdivl
test
mov
inc
push
push
frstor
add
sbb
add
add
in
orl
popf
add
mov
js
mov
xchg
adc
mov
stos
xor
and
xchg
ds
add
dec
xchg
rorb
call
test
add
xor
roll
fisttpl
loopne
sbb
in
push
and
add
adc
test
xor
sub
outsl
cmp
or
jge
imul
test
jne
push
mov
insb
cmp
hlt
add
mov
loope
lods
ds
jmp
push
dec
mov
push
movsb
xor
push
outsb
sub
test
arpl
shll
ss
movsb
dec
push
cmpb
addb
add
mov
add
push
mov
mov
adcl
aaa
cmp
mov
and
fwait
inc
movsb
inc
pushf
insl
and
clc
cmc
lcall
push
mov
add
icebp
jo
adc
and
xchg
adc
clc
and
std
push
jecxz
aad
pop
adc
xor
sub
cmp
add
add
xchg
fsubl
in
dec
mov
rol
hlt
pop
pop
adcl
fsts
cmpsb
adc
ret
cmc
push
js
bound
lock
mov
dec
or
imul
adc
js
sbb
mov
cmp
push
jmp
jmp
sarl
push
mov
dec
adc
and
test
and
rclb
pop
hlt
fnsave
or
icebp
push
shll
fprem1
rcrb
sbb
jno
nop
cmc
lods
pop
xchg
popf
call
test
ret
mov
cmpl
dec
jo
mov
leave
jne
jge
bound
icebp
or
pusha
xchg
push
xchg
in
scas
test
in
inc
sbb
dec
inc
and
jo
mov
add
mov
testl
sbb
es
or
divl
jecxz
xchg
push
push
add
dec
test
repz
dec
or
test
int3
push
push
mov
cmp
rcl
pop
or
add
loopne
repz
cmpsb
out
ret
pushf
mov
push
push
mov
dec
movsl
test
fldl
push
lock
iret
lock
cmpsb
faddl
fstl
sub
ljmp
push
ja
dec
fldl
pop
fsubr
pop
fimuls
mov
in
roll
push
dec
pop
push
and
or
popf
stos
faddl
jge
les
mov
sub
adc
sahf
mov
mov
adc
or
sbb
das
ds
sti
add
fidivs
pop
inc
inc
fidivrs
mov
ret
pop
sub
sahf
loop
add
xchg
push
scas
shrl
sub
sub
adc
or
pop
mov
into
push
popa
ljmp
sbb
outsb
sbb
shrb
fldenv
cmpsb
cmpsb
test
cmpsb
movl
imul
jno
jbe
cmp
dec
mov
int3
dec
add
notb
mov
push
jp
or
jle
jne
pop
xchg
ret
in
sub
pop
add
pop
mov
add
mov
into
enter
jne
sbb
mov
cmp
jge
adc
push
fadds
into
dec
loope
lods
add
and
repz
sub
ud0
inc
add
mov
lea
cld
xchg
test
dec
imul
pop
dec
cwtl
ret
xchg
mov
mov
adc
pop
add
cmp
jb
adc
or
pop
pop
jg
imul
mov
mov
imul
inc
add
jb
add
push
sti
das
inc
loopne
dec
jns
mov
mov
adc
daa
call
pop
add
add
or
mov
mov
sub
lods
pop
push
icebp
mov
mov
jmp
jg
mov
je
dec
push
insl
or
in
jmp
xchg
add
pop
inc
dec
and
or
ret
cmp
pusha
and
outsl
mov
or
jne
bound
jge
mov
inc
ret
sub
gs
inc
add
sarb
pop
lods
xor
cld
ja
xchg
in
sub
inc
lea
cltd
inc
cmp
xchg
push
fldenv
das
aad
inc
mov
sbb
ss
andb
push
xor
jl
fs
add
jmp
mov
mov
loope
jbe
xor
or
push
push
mov
push
mov
inc
rol
bound
pop
or
jne
and
lret
xor
add
mov
cld
je
ja
out
and
mov
or
cmp
ret
rcll
ret
pop
sbb
inc
out
lds
imul
adc
ret
xor
add
adc
in
inc
or
in
add
or
orb
push
mov
xchg
adc
loopne
imul
loop
mov
sub
jno
sub
pop
push
imul
pushf
lods
sbb
mov
lret
clc
mov
pop
pop
roll
jp
test
lock
div
inc
or
xlat
bound
repz
rorb
sub
cmpsb
addb
xorl
xor
jns
push
inc
xlat
xchg
and
pop
xchg
fdiv
je
jp
inc
sub
mov
ret
ret
les
pop
mov
in
mov
sbb
push
in
and
mov
mov
inc
jae
into
xor
cmp
xchg
xor
repnz
jae
sub
jecxz
jg
and
xlat
push
mov
sub
push
in
xchg
rcl
popf
in
addl
cs
mov
das
or
test
mov
cmp
leave
ret
mov
add
lret
or
add
cwtl
aaa
sbb
dec
push
icebp
inc
add
ja
mov
xchg
inc
xor
lcall
fs
ds
add
pop
lods
pop
push
push
mov
mov
stos
inc
and
push
inc
in
fcompl
mov
adc
sbb
inc
adc
or
popl
add
inc
cmp
out
in
xor
pop
ret
pop
pushw
outsb
mov
dec
adc
pop
imul
push
add
inc
ror
hlt
test
inc
in
pusha
mov
push
push
jne
or
mov
dec
mov
adc
test
ss
jl
inc
mov
and
add
insb
pop
movsb
mov
sub
and
idivl
ja
add
and
adc
mov
adc
sub
pop
cmpl
inc
mov
sbb
mov
sub
mov
sub
subb
add
call
stos
xor
clc
sahf
mov
test
mov
cmp
fsubl
aad
sub
sub
adc
faddl
push
dec
mov
repnz
repz
and
and
jl
xchg
sub
rcll
adc
sbb
in
push
fildl
push
xchg
cmp
inc
xor
lods
adc
loopne
or
add
xor
popa
movsl
pop
jne
xchg
lret
out
cmp
iret
nop
in
mov
cmpsb
mov
cmpsb
sub
cmp
js
push
ds
xchg
xor
mov
ljmp
push
popa
jb
lret
xchg
sbb
xchg
arpl
xor
cmp
int
pusha
aaa
push
in
lock
and
add
push
cmp
xor
cmp
and
pop
shrb
or
or
cmp
lret
arpl
or
xchg
loop
cmpxchg
movsl
sarl
icebp
jnp
add
add
mov
imul
shl
lock
add
fisubs
inc
mov
call
mov
adc
lahf
loop
clc
and
loopne
imul
into
fimull
test
imul
add
les
cmp
loope
add
adc
test
or
add
jp
ret
pop
out
sub
jo
jbe
jp
cli
loopne
and
add
or
cmp
jne
lcall
subl
dec
push
xorb
aas
es
repnz
sub
xchg
lret
repnz
lcall
std
out
adc
int3
std
or
inc
add
push
jb
nop
mov
add
add
sbb
cmp
lds
pop
jo
loopne
clc
jl
test
xchg
cmpsb
and
sbb
imul
clc
subb
aam
leave
xchg
lsl
push
inc
dec
jns
fs
fwait
sbb
add
add
push
les
and
enter
les
jns,pn
add
loope
sbb
sbb
cmp
pop
pop
sbb
aaa
rcrb
push
jl
inc
xor
shl
pop
or
mov
or
xchg
repz
imul
push
mov
data16
pop
push
xchg
push
cmpsl
lea
push
sub
stc
cmc
bound
push
mov
jle
ret
dec
ficoms
inc
fsubrs
imul
mov
xor
testl
sub
sub
shll
lahf
jp
cmp
adc
pop
mov
sbb
push
add
push
hlt
jge
inc
sbb
jge
dec
nop
or
incl
add
adc
or
icebp
call
mov
lcall
mov
jo
pushf
pop
mov
in
subl
mov
fadd
mov
sbb
jecxz
std
xchg
or
mov
inc
mov
sub
iret
sbb
pop
and
into
in
xor
xor
sub
lods
push
mov
mov
xchg
adc
xor
fsubrl
pop
in
pop
in
add
ja
fld
ret
fdivrl
pop
xchg
into
sub
sbb
sbb
sbb
sarb
sub
add
cli
mov
adc
cmp
data16
icebp
dec
jbe
xor
jbe
nop
cwtl
or
sbb
leave
add
or
cs
jo
inc
ss
jbe
outsl
mov
dec
je
sub
js
add
add
loopne
sub
sbb
dec
push
mov
mov
movsl
sub
xor
hlt
adc
arpl
cmp
push
inc
adc
xor
mov
das
shll
push
out
lods
pop
push
dec
add
inc
xchg
inc
insl
aad
stos
jne
xor
mov
push
inc
lret
mov
xchg
sbbl
ret
sbb
pop
pop
or
jbe
fistpll
add
jg
insl
test
inc
jmp
mov
sub
inc
inc
cmp
cmp
add
sbb
mov
insl
adc
xchg
jle
mov
or
lods
push
pop
clc
addb
ret
loopne
jb
jo
add
fdivrs
loop
data16
out
xor
jmp
lock
cli
push
mov
xor
int
lea
add
clc
fidivrs
icebp
lret
sub
push
xor
add
cmp
add
or
jl
push
inc
inc
dec
add
push
ficompl
in
fs
sub
push
outsl
clc
stc
or
hlt
xchg
pop
sbb
jbe
adcl
cmp
adcl
pop
clc
scas
pop
pop
lea
ret
ret
jp
pusha
dec
daa
or
xor
mov
sub
mov
test
or
mov
ret
outsb
sbb
dec
add
xorb
fstps
stos
add
sti
dec
jecxz
aas
sbbb
addl
cmp
loopne
nop
adc
push
loop
or
cmp
push
icebp
or
test
or
loope
adc
pmulhuw
in
cli
std
inc
scas
rcrl
push
or
sub
xchg
xor
or
sbb
xor
push
sbb
fdivs
sahf
adc
or
sub
push
add
mov
mov
push
add
and
cmp
and
sbb
adc
jmp
in
push
push
or
mov
and
or
add
xchg
mov
or
mov
jne
inc
or
test
xchg
push
inc
ss
mov
mov
jle
and
dec
aaa
sbb
mov
mov
cmp
ja
inc
pop
adc
loopne
xchg
movsl
or
adc
inc
std
jle
push
imul
add
push
inc
or
iret
sub
add
pop
sub
jbe
test
fcoml
inc
mov
rcl
scas
or
add
jmp
xor
lret
adc
dec
adcl
add
jb
mov
pop
rolb
cmp
pop
cmp
outsb
bound
sahf
add
inc
xor
or
sub
or
and
pop
cmp
mov
pop
jl
xor
lret
into
mov
or
or
dec
cli
cwtl
cmp
pop
out
push
jns
dec
sub
dec
push
cmpb
punpckhbw
jl
shrl
pop
enterw
mov
sahf
lret
xor
push
daa
insb
ss
dec
mov
in
pop
je
push
mov
cmp
pop
out
or
jl
jmp
xchg
sub
add
push
xor
and
lahf
popa
push
leave
dec
mov
push
addr16
inc
and
pop
jne
jns
pop
sbb
push
sti
push
jmp
push
sbb
data16
je
nopl
insb
sub
dec
int
stos
xor
sub
push
jne
jl
les
or
push
jge
lret
xor
sub
ljmp
outsb
leave
shl
cs
addl
sub
aaa
xor
or
hlt
push
mov
add
sbb
fcoms
adc
stc
push
or
sbb
sbbb
lahf
and
nop
xor
out
je
lods
pop
mov
shlb
push
ss
dec
push
addb
adc
inc
cld
adc
inc
clc
sub
je
push
dec
enter
xchg
stos
or
push
clc
mov
and
cwtl
push
stos
aas
cmp
mov
bound
aad
lahf
jg
or
add
adc
and
addr16
push
lock
stc
push
imul
imul
push
mov
popl
out
jle
xor
and
adc
adc
sub
movsb
jecxz
xor
mov
bound
and
sbb
lahf
jmp
cmpl
mov
ror
push
std
scas
test
pop
insl
popa
out
mov
les
lds
insb
dec
sbb
lods
dec
inc
add
push
xor
inc
cmp
xor
mov
xor
or
cmp
mov
cmp
cmp
inc
loope
jle
data16
test
rcl
jne
pusha
mov
jmp
mull
fdivl
movsl
sti
inc
ja
mov
movsl
cmp
aas
xor
add
and
adc
adc
adc
or
rorb
fwait
dec
lea
fwait
mov
push
xorl
divb
jns
jmp
lret
add
jmp
sub
cmp
cmp
jne
push
jmp
aad
shrb
jnp
push
add
fwait
movsl
sub
jne
jp
insb
mov
test
gs
mov
mov
sbb
inc
and
adc
repnz
jb
and
adc
xor
rorb
lds
xor
mov
loopne
or
push
or
stos
ret
iret
lea
and
inc
sub
pop
test
sbbl
mov
sbb
xchg
mov
mov
loope
test
movsl
or
pusha
sub
add
in
dec
cmp
shlb
fiaddl
mov
mov
push
mov
mov
mov
jecxz
dec
insb
divb
jmp
jne
add
jne
pop
inc
fsubrl
push
mov
add
add
xor
adc
cmpsl
roll
cmc
scas
xchg
pop
sbb
push
sub
pop
inc
cmp
shlb
or
sbb
fs
imul
cmpsl
or
movsb
sbb
jmp
pop
jp
and
jecxz
sbb
popf
fwait
test
mov
add
ss
ljmp
push
dec
sub
and
sub
pop
mov
push
sbb
dec
add
std
insb
cmp
or
sbb
push
or
mov
popa
adcl
mov
imul
sti
rolb
xor
ljmp
xchg
sub
cmp
jo
mov
dec
or
sarl
sub
mov
js
mov
or
enter
xchg
popf
inc
test
ret
loopne
insb
in
pop
adcb
adc
pop
mov
xchg
and
add
adc
cmp
test
cmp
popl
ja
fs
enter
add
jns
sub
loope
aad
addr16
and
or
cltd
gs
or
bound
push
subb
fsubrs
push
add
xchg
lods
insb
mov
adc
jge
dec
add
popa
imul
push
or
and
dec
sub
ret
popa
nop
inc
orl
loopne
orl
jns
and
adc
sub
hlt
dec
or
jg
cmpl
add
rcrl
mov
pop
lock
shll
rcll
testl
movl
mov
popa
ret
cmpl
mov
gs
lahf
sub
sub
sub
fcmovnbe
and
xchg
enter
int
or
adc
sbb
in
shl
lods
push
loop
jmp
inc
lahf
mov
incl
movsl
jno
js
cmp
jl
push
push
push
push
add
imul
add
test
cmp
adc
sbb
jg
daa
or
divb
cli
lea
add
outsl
test
popa
add
pop
push
sub
dec
push
in
jmp
jbe
dec
test
loop
imul
dec
dec
mov
and
test
push
test
insl
jne
xchg
xor
mov
pusha
xchg
or
sub
or
jl
leave
call
ret
add
mov
inc
inc
iret
jne
cmp
xchg
mov
in
fadds
mov
push
pop
pushf
movsb
push
cltd
movsb
xor
and
sbb
bound
sub
sti
in
pop
and
add
orb
xor
movsl
dec
lods
dec
cld
cld
push
lods
adc
add
sar
push
sub
sahf
stos
dec
js
jp
ret
or
add
pcmpgtb
push
lea
jle
fcom
add
mov
sub
sub
lock
enter
and
or
inc
pop
cmp
xor
cmp
jecxz
push
nop
add
sub
hlt
dec
cld
in
sub
add
push
push
add
push
jl
adc
adc
js
jp,pn
sahf
hlt
adc
xchg
cmc
sbb
mov
add
test
xor
xchg
lea
inc
add
and
jb
sbb
push
lods
fs
push
adc
imul
add
mov
or
add
mov
push
xchg
mov
arpl
push
bound
aaa
xchg
or
mov
icebp
mov
hlt
test
xor
sub
inc
aaa
dec
in
mov
jne
pshufw
mov
and
jbe
mov
add
nop
imul
pop
mov
xor
test
in
fdiv
mov
and
nop
mov
test
dec
jecxz
dec
test
inc
lea
jmp
enter
sub
add
inc
cmp
mov
push
bnd
and
std
test
add
rclb
sub
mov
pop
dec
push
mov
lods
in
jne
sbb
pop
jl
and
mov
test
cmp
mov
or
sbb
add
testb
sbb
or
push
sub
add
aas
jo
cmp
xor
or
orb
jb
bound
push
inc
adc
xorl
in
adc
or
or
and
adc
or
out
es
dec
push
loopne
push
push
in
rorb
push
cli
ss
gs
enter
sbb
test
or
mov
std
daa
in
sub
call
imul
inc
cltd
sbbb
push
push
leave
test
femms
lsl
and
add
jae
add
sbb
add
mov
fdivrp
pushf
imul
or
pusha
or
adc
mov
sub
fnstcw
inc
ret
das
add
push
inc
shll
cmp
push
adc
test
mov
and
and
rolb
loope
jae
add
mov
inc
sbb
jecxz
addr16
pusha
pop
inc
xchg
mov
add
imul
or
cmp
add
sbb
inc
loop
cmpl
add
and
int3
test
pop
cli
cmp
adc
mov
inc
and
iret
dec
xchg
xorb
jo
sbb
mov
paddusb
mov
xor
es
adc
shlb
cmp
stos
cmp
rorb
and
adc
add
and
jbe
sbb
sub
push
jmp
in
push
fs
adc
test
dec
es
in
loopne
pop
and
lret
sub
lcall
cmc
fs
in
nop
pop
inc
jo
adc
lret
test
call
push
jl
fsubrs
test
mov
sbb
push
popa
aaa
adc
dec
sub
in
push
ret
and
and
out
push
imul
xor
inc
int
push
xor
push
std
out
pop
jle
imul
add
rclb
mov
ljmp
enter
out
xchg
out
popf
push
nop
dec
xchg
adc
mov
jnp
stos
inc
in
shll
add
mov
pop
push
pop
mov
pushf
iret
mov
xchg
movsb
and
adc
ret
adc
xchg
sahf
jb
or
or
or
or
add
cmp
sar
movsb
icebp
test
dec
adc
out
pushf
test
add
leave
add
sbb
sbb
sbb
hlt
orb
cmp
sarl
push
or
ja
imul
in
es
fiaddl
push
xor
or
hlt
or
fsts
mov
pop
push
shr
pop
addl
pop
ret
jle
push
fiaddl
or
test
out
mov
or
cwtl
sub
xchg
and
or
adc
lea
jmp
fs
mov
out
lods
or
cmp
xchg
xchg
push
movsl
xchg
jnp
ret
add
sbb
addb
add
or
test
stos
mov
push
inc
and
mov
lock
stos
ds
push
adc
jge
clc
add
nop
lods
lods
pop
lock
inc
test
outsl
rolb
sbb
or
mov
and
andb
mov
push
pushf
stos
mov
lods
add
loopne
jno
popf
notb
push
enter
shll
push
push
and
mov
cmp
mov
push
sahf
ss
movl
inc
add
movzwl
mov
dec
repz
ret
insl
add
jl
cmp
nop
dec
lret
jecxz
mov
mov
sbb
push
mov
aas
dec
adc
ja
cmp
mov
iret
mov
pop
sbb
aam
or
pop
sub
pop
adc
jge
lret
push
icebp
pop
testl
mov
xchg
rolb
movb
push
popf
hlt
or
sbb
add
xchg
xchg
add
rcl
enter
fs
inc
cmp
adc
mov
stos
mov
or
and
add
or
inc
or
pusha
iret
mov
cmp
ss
imul
movsb
loope
ret
or
or
shlb
mov
shr
mov
jge
or
xchg
test
das
mov
or
mov
adc
adc
push
scas
or
fstl
sbb
decl
in
fidivrs
movsbl
xchg
lahf
cmp
adc
divl
jbe
push
paddb
cmp
mov
or
arpl
in
nop
jp
inc
adc
or
ret
jo
aas
and
xor
pop
mov
push
xor
mov
ja
mov
mov
and
inc
add
xchg
and
scas
in
sub
or
fwait
jb
inc
xor
dec
sub
jge
mov
or
pop
cmp
adc
addb
dec
xor
incb
mov
mov
int3
add
jge
mov
cli
adc
cmp
imul
scas
add
add
pop
mov
mov
fs
ja
cmpsl
inc
int3
cli
inc
sub
and
data16
stc
or
dec
pop
std
add
imul
push
add
cmp
cmp
add
push
pop
fdivrl
cmp
or
or
jnp
or
jbe
fmull
jno
jmp
push
jmp
por
fcoml
jmp
adc
pop
adc
push
adc
dec
adc
dec
adc
aas
pop
jmp
sbb
xor
jmp
sbb
es
sbb
and
pop
pop
jmp
mov
jmp
and
andb
cmpsb
incb
and
pop
hlt
inc
maxps
xor
ret
in
and
adc
mov
push
jl
cmpl
push
mov
rcr
idivl
repz
lock
add
iret
repz
adc
push
repz
repz
sub
cmp
cmp
inc
dec
push
push
cmp
repz
pop
imul
js
pop
aas
sti
scas
fadds
add
and
or
or
push
movups
adc
adc
push
lock
sti
call
sbb
sbb
sbb
push
pop
and
and
aas
push
sub
scas
xchg
mov
dec
lret
incb
cmpsb
and
mov
fld
inc
dec
inc
sub
xchg
or
dec
aam
inc
addr16
adcb
js
loope
pushf
adc
jl
les
mov
cmpsb
std
add
jo
push
stos
rorb
out
js
mov
in
pop
add
dec
ja
cmp
xchg
push
cwtl
xor
adc
testb
mov
fisttps
in
test
test
and
inc
lea
js
cmp
push
adc
ret
call
xchg
and
lea
or
adc
push
pushf
ljmp
enter
outsl
jmp
or
fdivrl
out
js
lods
cmp
imul
inc
rolb
lcall
xor
inc
mov
mov
sbb
sahf
sub
xor
mov
push
sbbb
icebp
push
fsts
mov
add
pop
mov
push
test
cmp
sub
mov
or
adc
sbb
ljmp
push
and
dec
nop
inc
jge
mov
inc
mov
fidivrl
pop
and
sub
movsb
push
lods
jp
jo
sub
lea
add
dec
loop
testb
inc
sbb
mov
add
movl
add
sbb
arpl
cmp
jo
pusha
jbe
mov
add
pop
aam
sbb
in
cmp
popf
and
xchg
jge
mov
rorb
sti
push
and
jae
mov
sar
jg
mov
ja
lea
imul
cmp
ja
and
push
adc
lea
xor
stos
lcall
ss
sbb
lock
inc
dec
pop
inc
or
adc
xor
pop
dec
adc
or
mov
addb
cmp
or
push
lods
and
or
in
rol
es
gs
fmuls
out
or
movsb
mov
push
push
and
xor
xchg
pop
adc
adc
dec
shll
loope
out
push
adc
mov
add
push
lock
adc
inc
adc
push
pop
xor
xor
ja
mov
add
fstps
sbb
add
sbb
lock
mov
lret
out
push
xor
mov
adc
imul
cmp
sbb
cs
pop
cltd
and
cmovnp
loope
jns
mov
sub
mov
mov
inc
xor
and
xor
mov
das
push
sub
ret
mov
fwait
adc
push
push
inc
cmovs
inc
addb
jnp
inc
sbbb
xchg
gs
and
add
mov
aaa
push
fildl
jl,pn
pop
sbb
ret
and
fsubr
adc
mov
das
lock
cld
jo
cli
es
lea
cmp
ret
add
jg
and
or
js
mov
inc
push
xor
inc
or
pop
fsubrs
add
mov
mov
or
filds
imul
fimuls
sahf
cmp
push
test
js
jmp
and
test
xchg
cmpsb
jb
pusha
and
push
dec
daa
pushf
cwtl
push
hlt
fwait
cmp
jae
movzbl
mov
inc
xchg
bound
testl
sub
into
add
dec
jmp
mov
pop
xorl
inc
fs
push
inc
jecxz
addl
jl
loopne
and
add
mov
in
inc
mov
and
andb
aas
shrl
push
ret
lahf
xchg
ja
jmp
bound
scas
mov
push
mov
pusha
mov
fwait
xor
sbbb
es
dec
push
shlb
add
push
add
ret
push
mov
es
pop
ret
lcall
testb
stos
out
sub
lahf
xchg
push
push
sbb
mov
add
push
mov
pop
int
fs
in
sub
push
adc
xchg
pusha
jmp
xchg
sbb
or
cmp
jo
cmp
mov
sarl
add
cli
mov
jl
aad
inc
push
roll
fwait
xor
addl
push
rol
ret
enter
pop
or
cltd
sub
addr16
rolb
xchg
nop
shl
mov
insb
ljmp
pop
mov
add
andb
popa
pop
adc
push
sbb
shrl
test
dec
and
lds
in
jno
push
or
scas
das
icebp
mov
push
push
fsubrl
movl
les
adcb
iret
xchg
or
dec
push
jmp
int
jmp
int
xchg
and
loop
xchg
sbb
popl
orl
or
clc
imul
js
in
mov
xchg
push
je
jmp
push
inc
adc
pop
addr16
add
lock
daa
mov
adc
sbb
mov
add
pushf
enter
and
sbb
cmp
jo
mov
mov
sbb
inc
push
aaa
insb
sub
mov
scas
mov
or
inc
push
push
bound
or
into
adc
ret
rep
inc
mov
fistpl
cmp
pop
push
shlb
loopne
jo
xor
cmp
add
sub
mov
js
arpl
mov
movsb
mov
sbb
dec
jo
cmp
icebp
cwtl
mov
shlb
pop
pop
in
arpl
cmp
out
add
push
mov
ret
ffreep
mov
orb
ljmp
ficoms
in
pop
jns
inc
daa
dec
push
nop
pop
int
je
and
sbb
or
adc
hlt
std
dec
cmc
and
or
testb
inc
insb
nop
push
insl
push
inc
notb
mov
test
inc
adcl
fbstp
and
or
movsb
lock
cmpsb
sahf
imul
pop
inc
cmp
add
stc
int
cmp
sti
icebp
mov
or
xor
or
xor
pop
fmull
cmpsb
in
jge
aad
cmp
or
shlb
pop
inc
inc
aad
xor
sub
push
or
mov
jl
pop
pop
scas
icebp
adc
aaa
or
xor
dec
cmpsl
jno
add
dec
dec
adc
stc
sbb
lods
mov
loopne
shlb
fsts
fwait
jae
nop
and
nop
icebp
loope
cld
cmpl
push
sub
add
xchg
mov
xorl
pop
adc
inc
cwtl
shlb
and
pushf
sbb
bound
push
js
or
push
xchg
sbb
push
mov
test
bound
dec
cmp
pop
in
je
lea
ret
test
xchg
imul
outsl
daa
xor
fdivs
inc
push
jg
lock
push
xor
or
jmp
dec
sub
ljmp
xor
in
ret
inc
cld
mov
sub
adc
adc
mov
cmp
sbb
popa
shrb
pop
das
cmp
xchg
adc
push
out
fs
or
adc
inc
cmp
add
pop
out
cs
jnp
sub
jb
sbb
fdivl
adc
inc
mov
jno
inc
test
sub
das
call
sbb
inc
dec
mov
or
inc
dec
inc
ret
xor
ds
xchg
das
pop
and
adcl
and
adc
ds
lds
mov
xor
adc
sbb
and
adc
stos
mov
xchg
mov
pop
ret
into
sbb
push
xor
sub
outsl
fimull
insl
xor
mov
je
fdivr
adc
sti
sub
push
arpl
in
and
mov
adc
xor
sub
dec
cmp
jnp
and
mov
mov
push
out
push
imul
cmp
sbb
sub
sub
fwait
lds
cltd
and
jg
mov
xor
leave
inc
hlt
js
fsubrs
push
mov
and
popa
xor
inc
inc
jb
pop
sub
pusha
adc
cld
or
mov
nop
mov
lods
nop
dec
roll
pusha
les
and
or
rolb
inc
or
pop
hlt
push
dec
fwait
cmpsb
in
nop
out
loopne
and
and
sbb
andl
loopne
push
dec
adc
out
aaa
int
sbb
pop
add
pop
fistpl
leave
sbb
ret
and
xchg
push
pop
push
mov
sti
jne
push
and
add
pop
movsl
ja
jmp
inc
dec
mov
pop
or
add
xchg
adc
add
fiadds
fisttps
mov
or
jne
roll
arpl
daa
sub
inc
adc
imul
push
loop
sub
add
popa
adc
test
enter
ss
mov
xor
fmuls
sbb
int
cmp
jne
and
sub
mov
mov
outsb
dec
add
pusha
decl
inc
sbb
xor
hlt
clc
add
push
aaa
mov
aaa
inc
mov
or
adc
clc
sub
je
mov
pop
mov
dec
mov
dec
mov
xorl
sub
xor
orl
test
and
push
push
pop
div
jmp
pop
lea
lahf
and
inc
bound
stos
xor
rorb
mov
sub
inc
into
inc
stc
add
lock
fildll
mov
cmp
arpl
test
stos
or
xchg
cmpsb
pop
mov
repnz
xchg
enter
mov
pushf
and
sub
xchg
in
add
mov
sbb
je
or
add
cmpsb
pop
mov
ds
pusha
cmp
scas
mov
cmpsb
popa
cmpb
inc
mov
push
push
add
std
mov
mov
lea
daa
xchg
shrb
cmp
in
mov
mov
push
cmp
jge
mov
fiaddl
pop
mov
pop
lea
xor
ja
lods
sub
cld
loopne
add
cli
lret
lret
ss
adc
lock
clc
lock
or
add
cs
add
add
push
test
add
and
into
xor
xor
dec
je
jmp
jne
mov
and
dec
or
mov
shr
sbb
or
lret
ljmp
xor
pop
mov
jne
or
outsl
dec
push
mov
cld
xchg
sub
stc
addl
dec
je
push
add
out
loop
dec
adc
adc
repnz
test
add
jmp
sub
movsb
add
push
or
incb
test
je
cmp
in
mov
idivb
jne
adc
rolb
add
xor
add
nop
xorl
fildl
sub
popa
out
stos
sbb
or
lock
cltd
idiv
inc
inc
imul
les
jb
cmpsl
movsl
xorb
jp
pop
pop
outsl
and
mov
add
add
add
out
mov
stc
lods
jns
or
or
push
sbb
push
push
lock
cmp
jge
ljmp
jbe
inc
test
jmp
adc
shll
pop
faddp
adc
mov
push
aad
iret
or
int3
xor
repnz
out
sub
mov
cmp
or
jp
push
ds
jne
repnz
iret
add
dec
sub
fcos
or
cmp
je
cmp
pop
cmp
je
cmp
jne
inc
inc
add
jne
mov
sub
dec
or
xlat
fcoml
iret
test
arpl
add
mov
nop
cmp
arpl
jg
inc
cmp
jne
push
add
sub
arpl
mov
jne
mov
mov
jg
int
push
or
push
or
mov
movsl
dec
xor
outsb
fmuls
mov
push
jl
or
jg
sub
scas
push
mov
jmp
and
push
jmp
xchg
fwait
fwait
adc
mov
jg
aaa
push
and
incw
fld
out
dec
mov
sub
mov
and
and
mov
mov
outsl
adc
test
test
int3
inc
ret
dec
xchg
test
sbb
inc
rorl
icebp
popa
jecxz
mov
aas
popa
add
mov
subl
pop
subl
inc
cmp
sti
inc
jl
pusha
mov
jg
sub
xlat
pmaxsw
xor
jo
mov
roll
mov
cmp
icebp
lods
daa
lcall
xchg
push
inc
je
cmp
xchg
aaa
mov
mov
dec
mov
arpl
pop
das
js
mov
xchg
xor
xor
fsubs
inc
cmpb
cmp
mov
add
mov
cld
idivb
sahf
clc
push
mov
inc
out
jmp
xor
push
xchg
fldenv
jg
adc
xchg
dec
xchg
adc
clc
or
je
lods
jle
test
add
loopne
pop
ja
push
jns
jbe
cmp
dec
addb
xor
xor
cmp
je
cmp
je
add
add
adc
pop
fcmovb
push
and
mov
dec
dec
hlt
add
cmp
test
add
jne
mov
pop
loope
lea
or
pop
push
sub
cmc
pusha
ret
pop
push
roll
adc
je
and
mov
ret
or
pop
mov
cmp
jnp
adc
adcb
sub
lock
mov
jg,pt
sbb
test
xor
inc
dec
clc
mov
sub
andl
or
sbb
mov
roll
or
insb
sbb
bound
sbb
lods
xchg
inc
mov
mov
lock
sub
jge
jne
pop
pop
mov
repnz
push
sbb
pop
push
add
sub
orl
xor
push
enter
or
fiaddl
push
or
movsl
push
in
jg
test
or
rol
cmp
or
or
shlb
stc
imul
mov
addb
pop
lock
jmp
inc
rolb
mov
rorl
inc
je
sbb
pusha
adc
and
or
inc
and
and
pop
mov
jle
cmp
and
je
sbb
add
add
push
cwtl
add
cld
cmp
ret
aas
mov
movb
jg
jbe
push
sub
dec
inc
decl
adcb
fnstcw
or
loope
jmp
pop
dec
sbb
cmp
inc
data16
gs
add
push
cmp
test
sbb
pop
stc
cmp
and
jb
xchg
data16
cmp
jecxz
sbb
mov
push
lds
or
and
icebp
pusha
repnz
mov
mov
loopne
xchg
push
insb
sub
outsl
cwtl
sub
or
cli
es
movb
jbe
pusha
lea
nop
pop
dec
jbe
jmp
inc
test
jecxz
aas
push
cmpb
jne
popa
or
ficomps
negl
fsubl
dec
pushf
int
xor
inc
sub
and
clc
or
add
outsl
stos
xchg
cmp
adc
lret
imul
dec
cli
inc
sbb
mov
or
mov
in
dec
xchg
test
cmp
fdivrs
lea
push
movb
xor
stos
or
mov
dec
mov
adc
push
mov
push
xor
int3
or
rcrl
pop
repnz
or
shlb
sub
mov
call
ds
inc
insl
or
or
jnp
adc
mov
push
pop
mov
mov
dec
dec
test
inc
adc
xorb
mov
popf
push
mov
inc
inc
or
or
ss
and
aaa
jle
pop
xchg
pop
lock
ret
or
je,pt
mov
rclb
pop
fistpll
scas
sbbl
rcrb
outsb
pop
inc
les
arpl
inc
sbb
inc
sahf
fisttps
pop
or
push
imul
mov
lock
scas
push
mov
add
adc
add
jne
mov
dec
cmp
pop
ror
aad
push
loopne
loopne
jo
push
jnp
repz
fcomip
shl
mov
push
addr16
xchg
pop
xor
push
or
pop
xchg
mov
sti
and
xchg
sub
adc
push
cwtl
mov
inc
push
push
ja
je
rclb
mov
stc
fimull
or
and
add
add
sbb
or
sbb
jge
insl
fwait
ret
test
leave
inc
adc
push
push
lret
sahf
sbb
bound
std
push
or
xchg
lock
jp
jbe
lea
jg
mov
lcall
xor
jge
lods
out
jmp
push
dec
dec
arpl
pushl
je
ret
sbb
xchg
test
or
outsb
loopne
or
add
movsl
ss
xor
pop
ffree
jno
movl
pop
mov
adc
inc
adcl
push
mov
cwtl
pop
dec
jne
mov
and
inc
je
cmp
not
mov
dec
stos
jne
jbe
push
pop
fidivl
cwtl
cmovge
cltd
mov
cmp
inc
adc
dec
pop
inc
push
lahf
push
and
mov
pop
push
jge
ret
adc
sub
pop
test
adc
les
hlt
cmp
ret
adc
mov
push
push
add
orb
dec
and
push
sbb
nop
es
and
mov
adcb
jb
push
add
sbb
cltd
xor
sub
fstp
and
add
loopne
adc
sbb
add
add
das
fcomps
add
shll
jmp
popf
inc
inc
mov
or
daa
jne
xor
jne
cmc
add
push
int
mov
rolb
mov
orl
jmp
xor
aaa
and
or
in
jge
push
sbb
aam
rcl
adc
mov
je
mov
jne
cmc
inc
test
dec
pop
dec
sub
lods
xchg
sbb
sbb
cs
ds
rolb
dec
aaa
sbb
std
jnp
cmp
xor
sub
xchg
push
sahf
shr
stos
inc
sub
inc
vmovntpd
mov
mov
lret
mov
cmp
adc
and
jle
adc
jno
mov
mov
mov
push
out
cmp
or
movsb
shlb
and
mov
or
lds
movsb
or
mov
sbb
jno
and
sbb
adc
lock
dec
mov
adc
inc
cmpsl
push
push
lahf
addr16
or
push
lahf
xchg
sub
push
xchg
inc
and
cmpsl
xor
pop
push
js
mov
mov
gs
dec
mov
pop
in
movl
add
push
int
data16
ds
dec
andl
divb
pop
xchg
pusha
subl
pop
enter
jecxz
jo
out
loopne
or
push
push
cli
idivb
cmpsb
or
movsb
inc
mov
lock
mov
cmpb
pop
add
and
inc
shlb
sbb
shr
sbb
adc
xchg
pop
xor
loope,pt
rcrl
test
pop
push
mov
mov
add
xor
mov
and
add
loope
mov
xor
add
adc
inc
dec
iret
bound
adc
push
mov
add
imul
cmp
mov
add
ss
xor
and
andl
xchg
mov
shrl
mov
add
adc
push
enter
test
cmp
or
add
aaa
add
inc
div
mov
cmp
sbb
inc
mov
leave
sahf
add
push
mov
lahf
addb
mov
or
xchg
push
or
pop
addr16
mov
call
enter
mov
or
pop
jl
int
mov
adc
out
imul
push
xor
mov
fldt
or
lods
mov
push
pop
inc
cs
jmp
add
inc
xor
jmp
jg
loop
sub
mov
inc
pop
jb
iret
inc
and
sbb
xchg
sub
xor
jmp
adc
test
cltd
dec
hlt
insl
fldl2t
call
inc
call
push
inc
cmp
or
sbb
mov
push
out
mov
sbb
imul
pusha
sbb
in
inc
addl
ret
outsl
xor
or
sbb
pusha
cmp
pop
jb
loopne
or
push
or
xchg
jb
sbb
add
jl
and
add
bound
lods
cmpsb
adc
sbb
mov
and
xor
cmpb
add
lea
inc
sbb
adc
or
sbb
adc
outsb
add
or
test
xchg
xor
add
xchg
mov
add
mov
dec
ljmp
mov
movl
mov
movl
bound
sti
popf
sub
sub
add
int
cmc
dec
mov
cmp
adc
into
mov
sbb
adc
cmp
xor
inc
xor
jns
int
addr16
push
dec
sub
jmp
sub
jp
push
sbb
and
adc
mov
sub
xchg
or
pop
adc
testl
sbb
jae
jo
xor
ss
jecxz
idivl
mov
push
out
dec
orb
sub
add
add
sub
cltd
jnp
loopne
test
jl
test
test
insl
mov
mov
cmp
xchg
mov
push
jo
outsl
pop
push
jae
mov
xchg
lods
data16
lret
dec
xchg
loop
push
flds
pusha
dec
cwtl
xor
lock
ret
xchg
mov
cmp
push
lcall
lea
popa
daa
xor
and
in
in
dec
sbb
jle
xchg
cs
or
lods
inc
sub
ret
push
pop
adc
sbb
add
lcall
dec
mov
addps
adc
and
repnz
cmp
adc
jo
mov
js
and
mov
push
out
inc
cmc
stos
mov
sub
mov
mov
fcomps
adc
add
arpl
sub
fwait
jl
outsl
sbb
jl
jp
movl
cli
or
mov
add
or
push
ljmp
adc
pop
xor
pop
ds
in
xlat
outsl
push
je
scas
jae
cmp
pop
mov
jmp
aaa
out
sahf
andl
sub
je
adc
hlt
xorb
pmulhuw
push
jg
add
test
aam
pop
mov
shl
popa
loopne
imul
adcb
inc
dec
je
jp
add
jnp
divl
shrl
jo
mov
add
adc
xor
rorb
sbb
pop
lock
shr
add
leave
data16
mov
movsl
fs
dec
sbb
in
inc
add
dec
movb
loope
addr16
and
ss
push
scas
stos
pop
aaa
cltd
sahf
into
and
sub
nop
and
push
sbb
rclb
mov
movsl
sbb
xchg
addb
jo
shll
cmp
ja
scas
shlb
std
sub
je
push
or
cmp
ljmp
lea
je
xorb
pop
push
push
rcrl
icebp
es
pop
cmp
pop
aas
sbb
jne
test
dec
jo
add
or
lds
push
adc
sbb
lods
inc
push
lods
sarb
ret
jo
pop
sbb
into
addr16
pop
popa
xchg
cld
cs
js
mov
cmp
sahf
adc
in
pop
push
sbbb
sbb
add
loopne
cmp
insl
loopne
ds
rolb
fsubrl
ret
add
call
loop
insb
fistps
inc
mov
cwtl
mov
sub
scas
mov
fisttpl
sub
cltd
add
ret
dec
mov
jecxz
pop
pop
mov
cmp
cmp
push
rol
mov
sbb
cli
xchg
sbb
jbe
test
sbb
repz
add
mov
int3
adc
xor
je
and
jmp
aas
xor
adc
rclb
pop
push
mov
xchg
das
sub
push
divb
add
in
or
cmp
and
pusha
or
sub
aas
pop
ret
sub
adc
ljmpw
mov
cmpsb
sub
inc
xchg
xchg
rcll
andl
repz
xor
jp
ja
inc
jmp
dec
push
adc
push
les
in
push
rol
fimull
clc
decb
scas
and
test
inc
movmskps
xchg
mov
push
les
xor
fcmovbe
sbb
insb
jne
add
cld
sbb
outsl
repz
sub
sbb
fneni(8087
add
jne
pop
pop
inc
push
shll
xor
adc
bound
ret
mov
pop
test
mov
inc
adc
ds
mov
xorl
negl
sbb
mov
inc
mov
ret
sbb
push
mov
push
sub
and
jbe
add
push
jg
mov
sbb
rcr
push
jp
stos
mov
mov
xchg
adc
pusha
jbe
and
test
push
ja
and
jg
subb
dec
pop
cs
sbb
and
adc
inc
dec
push
adc
dec
xor
loopne
mov
add
mov
jne
or
sub
hlt
es
or
testl
hlt
or
or
inc
push
je
cmp
jbe
push
addr16
rclb
ret
call
loop
cwtl
lret
ret
push
shlb
icebp
lds
inc
and
cmp
sbb
lea
lock
pop
inc
mov
add
adc
test
pop
xor
inc
inc
push
lock
in
mov
mov
inc
test
pop
adc
pop
or
push
cmp
push
and
dec
jo
out
mov
js
cmp
nop
mov
mov
scas
xchg
imul
inc
jo
ljmp
and
sahf
pop
rcrl
push
push
add
mov
push
jo
push
adcb
es
add
sbb
cmp
aad
adcl
mov
cmp
es
sbb
fwait
ss
add
or
dec
shll
pop
lar
add
jne
push
mov
ljmp
enter
sub
lret
jne
push
sub
fcomi
fsts
cmp
jmp
outsl
sub
push
xor
pop
imull
add
or
inc
or
sub
push
xchg
roll
push
dec
shl
mov
inc
aam
or
xchg
gs
xor
or
sub
xorl
jle
in
cmp
sbb
pop
xchg
xchg
lds
or
or
mov
fsubl
andl
gs
mov
in
add
mov
mov
adc
xor
movsb
or
jne
or
pushf
sub
insb
stos
js
pop
fisubl
cmp
sbb
mov
sub
jo
sbb
mov
outsl
mov
or
fidivl
bound
push
sub
lret
ficoml
dec
das
inc
jle
dec
inc
and
fs
call
push
ror
and
push
xchg
pop
jmp
cmpl
pop
cwtl
jo
or
scas
pop
outsb
jg
andl
and
js
call
pushf
add
and
std
sti
mov
clc
jg
fs
test
pusha
jmp
movq
movaps
pop
fs
enter
shlb
jle
xor
jo
jb
add
lret
je
or
jge
repz
or
jg
cmc
mov
ss
dec
mov
xchg
ret
adc
jnp
mov
ja
jne
push
and
aam
ret
or
bound
clc
xchg
outsb
fisubrs
repnz
roll
lock
mov
add
pop
mov
addsd
int
add
sbb
cmpsl
mov
pop
xor
aas
sbb
or
sub
mov
popl
clc
ja
push
and
lret
and
test
es
jne
pop
xor
or
mov
inc
xchg
mov
jns
pop
cmp
lahf
add
in
inc
lret
mov
sbb
rclb
adc
sbb
loop
arpl
mov
pmaxsw
jns
sub
jne
mov
ret
inc
lock
cmp
jne
or
addr16
adc
inc
loop
insl
dec
push
mov
push
push
or
or
movb
ret
and
lcall
jmp
or
pop
leave
leave
sbb
in
sbbl
sbb
sbb
xlat
enter
test
cmp
mov
popf
movsl
fidivs
call
and
pop
testl
sub
je
scas
shrl
push
xchg
add
jne
orl
popa
int
scas
dec
cli
or
mov
push
pop
jnp
inc
sbb
push
movsl
hlt
add
add
pop
testb
and
pop
jo
add
push
xor
notb
mov
xchg
push
adc
inc
ret
jecxz
add
sub
sub
push
cmp
nop
push
add
push
call
mov
sub
rolb
cmp
xchg
or
mov
mov
sbb
bound
or
ret
and
push
jmp
pop
sub
xor
rcl
je
data16
orb
aas
data16
ret
cmpl
fnstenv
push
adc
pop
fldenv
xor
cmp
add
lods
sarb
je
jae
enter
aam
pop
push
pop
xor
inc
mov
adc
icebp
mov
pop
adc
int
shr
arpl
jo
sub
mov
mov
add
pusha
cs
mov
mov
xor
add
adc
inc
hlt
mov
sahf
lock
arpl
cmp
mov
fiaddl
add
pusha
and
xor
push
add
jnp
adc
xchg
mov
inc
fnstcw
jb
out
sbb
mov
adc
push
or
pop
add
or
mov
pop
std
incl
mov
cmp
jne
inc
cmpb
add
test
pop
loopne
dec
add
mov
inc
inc
and
fmul
les
or
mov
arpl
daa
mov
dec
sbb
ljmp
orl
fld
xor
jecxz
inc
inc
add
mov
xchg
pop
lahf
mov
outsl
cmp
or
jo
mov
mov
add
cmp
xor
sbbb
mov
cmp
add
es
or
or
lret
jne
dec
jmp
rcrl
sbb
push
xor
lret
jne
in
adc
push
lds
jg
push
loope
or
dec
cmpsb
loope,pn
xchg
sub
xor
pop
aas
mov
inc
lret
insl
adcb
sub
scas
add
jbe
lods
nop
xchg
adc
roll
outsb
movsl
jmp
imul
sahf
add
fdivr
or
or
aaa
loopne
or
and
adc
fidivs
sub
xorb
data16
fists
adc
push
mov
sub
sbb
sbb
sub
or
sbb
les
inc
adc
fsubrl
addr16
es
adcb
xor
ret
jge
das
pop
inc
xlat
add
ja
cmp
jp
and
cmp
xor
sbb
add
outsl
addb
ss
pop
pop
and
daa
inc
jne
shlb
and
pusha
inc
jb
inc
pop
xlat
jno
enter
adc
and
or
or
and
insb
rcl
cmp
cs
jecxz
outsb
mov
pop
xor
jb
and
sbb
or
cmp
sbbl
mov
minps
int3
ss
mov
dec
cltd
mov
orb
add
push
jbe
sub
mov
cmpsb
cmpsb
cli
aaa
pop
cmp
pushf
mov
cmp
mov
mov
sbb
lret
sub
mov
sbb
push
adc
or
jnp
lahf
xor
mov
sub
sbb
add
xchg
cltd
xor
pop
je
jne
inc
add
in
ds
adc
jns
pop
push
add
jb
arpl
xorb
xchg
lock
dec
loopne
bound
add
nop
add
mov
jnp
mov
mov
sbb
shr
fadds
jbe
push
or
mov
mov
adc
xchg
xorb
stc
lret
les
inc
sbb
xor
in
das
adc
mov
xor
lret
sbb
cwtl
fwait
std
xor
shlb
dec
inc
cs
in
and
mov
xchg
xlat
pop
push
inc
sub
les
and
add
xchg
xor
mov
addb
mov
sahf
cmp
jne
pop
scas
push
cs
mov
sarb
push
push
xchg
sub
jbe
or
jmp
xlat
test
mov
pop
in
sahf
pop
cmovns
stos
fcmovb
sbb
std
pop
ss
repz
aam
or
add
jg
push
jo
mov
add
mov
fisttpll
data16
push
push
sub
add
sub
mov
or
push
js
or
pop
mov
sub
mov
pop
adc
mov
gs
and
rcrl
sub
sbb
add
cmp
cli
push
test
adc
push
jle
push
negb
cmp
ja,pn
pop
jbe
lea
adc
insb
repnz
sbb
jp
ds
add
sbb
sbb
or
inc
jp
es
push
clc
jbe
add
mov
out
xor
cs
pop
cmp
or
jmp
and
mov
adc
add
jmp
test
jne
test
scas
adcb
cmp
xorl
lods
or
xor
sbb
divb
xor
pop
orl
cmpsb
inc
sbb
lret
mov
imull
mov
cld
pop
icebp
fnsave
loop
add
push
add
dec
inc
push
cltd
pop
sub
add
xor
shlb
cmp
push
and
jmp
adc
js
hlt
jl
rcrb
push
adc
insl
dec
add
roll
adc
dec
adc
mov
or
imul
push
rolb
mov
test
shl
ret
adc
sub
lcall
les
dec
sub
mov
push
add
out
addr16
out
ds
dec
repz
das
or
ret
rclb
push
fsts
dec
adc
cmp
sbb
rorb
sbb
mov
pop
jecxz
inc
add
sub
add
dec
jne
sub
out
cs
and
es
pop
add
jne
mov
pop
or
sahf
xchg
mov
push
inc
dec
pop
xor
push
add
cmp
lds
mov
lcall
leave
xchg
addr16
stos
add
insb
cmp
push
sarb
jae
fs
push
outsb
into
rclb
sti
outsl
aaa
mov
push
cmp
jne
mov
push
fdivrl
aaa
es
jne
pop
fmul
sar
adc
or
and
jb
mov
aas
scas
test
adc
jmp
std
fs
scas
loop
xor
cld
cld
jmp
fcmovnb
lcall
scas
adc
in
adc
adc
inc
inc
inc
dec
jl
andl
int
add
fdiv
mov
sub
sbb
mov
push
hlt
jnp
mov
dec
mov
fsubrl
cwtl
mov
shl
dec
and
sub
fisttps
fmull
mov
dec
outsl
and
mov
add
add
inc
jo
add
sub
add
adc
pushf
jbe
std
cmp
nop
or
dec
xchg
dec
dec
cmp
pop
adc
xchg
pop
pop
inc
imul
push
rol
sub
in
inc
sbb
pop
aam
xor
ficoml
and
iret
add
jg
add
adc
ja
lds
or
movb
jmp
inc
pop
sbb
xchg
fbld
mov
adc
add
cmp
jg
inc
or
hlt
add
mov
mov
test
or
pop
ret
call
push
push
pushf
cltd
mov
ret
mov
mov
push
mov
mov
add
dec
shrb
inc
mov
in
jmp
and
mov
test
add
fs
rol
iret
xorb
clc
pop
outsb
sub
enter
rcrb
inc
sub
cmp
in
and
into
xchg
push
or
cmp
pushf
or
dec
jnp
lea
mov
decl
adc
push
mov
jae
mov
xchg
aam
lods
push
inc
test
dec
in
mov
and
cmp
pop
mov
push
push
mov
rorb
shlb
xor
ret
je
add
jg
shll
popf
fmuls
lock
and
sub
add
in
cmp
inc
mov
mov
add
add
call
nop
xchg
sub
lock
sub
inc
sub
mov
ja
sbb
dec
jne
pop
inc
jae
arpl
inc
or
jmp
cmp
incb
mov
inc
je
sub
push
sub
stc
shll
or
add
jmp
or
mov
inc
inc
push
sahf
out
fildl
push
fisttps
scas
mov
pop
add
mov
inc
cmp
or
stc
jb
pop
jae
sub
cld
ds
popf
es
push
jl
add
pop
mov
lea
or
les
pop
add
in
mov
test
inc
mov
mov
add
out
sub
ss
push
sub
or
in
mov
adc
mov
mov
mov
divl
lret
add
sarb
xor
xor
xor
jo
and
sbb
push
dec
stos
in
or
out
dec
ret
jne
out
xor
out
inc
cld
add
and
aaa
adc
daa
test
je
jle
out
dec
and
faddl
aam
xchg
inc
ficomps
outsb
or
cld
test
sbb
add
push
xor
adc
xor
lret
and
jle
push
sub
add
jg
xchg
jne
sbbb
push
mov
dec
dec
add
jo
cmpl
inc
adc
cmp
jo
in
inc
notl
xor
inc
jmp
cmp
fstp
sbb
adc
jne
sub
jne
pusha
xor
repz
jmp
inc
adc
cmp
sbb
shrb
mov
cmp
je
cmp
and
mov
adc
pop
shl
int
dec
add
mov
jo
xchg
scas
rcll
xor
nop
incb
lret
mov
and
je
and
fs
sbb
adc
xchg
push
aad
sbb
mov
add
sbb
push
test
mov
or
and
push
lea
and
mov
and
push
mov
or
cld
std
mov
sbb
adc
adc
aad
sbb
pop
sbb
xor
jno
or
adc
ja
push
push
insb
or
add
jmp
stos
push
push
sbb
adc
xor
pop
pop
xor
jne
mov
sti
rcrl
push
lock
mov
inc
mov
dec
jne
test
add
xchg
cmp
add
push
adc
inc
arpl
inc
add
ret
xlat
es
enter
push
dec
dec
add
add
or
cmp
mov
das
fimuls
adc
xchg
movsl
imul
inc
push
jnp
mov
sbb
or
shr
fs
jne
push
xorl
mov
or
add
hlt
pop
push
lods
mov
sub
int
jo
adc
sub
icebp
lea
push
adc
or
lahf
and
jbe
mov
push
sub
loopne
cmp
dec
or
inc
cmp
xor
inc
scas
pop
adc
or
rorl
nop
push
inc
cld
sub
pushf
push
mov
add
daa
jne
or
add
jno
out
pop
pop
add
sbb
jbe
sub
or
test
pop
rorl
and
loope
add
jge
in
test
sbb
sub
dec
and
add
ja
or
lods
jmp
mov
ret
and
xorl
push
pop
mov
rolb
xor
add
mov
jo
pop
jo
stos
push
ret
pop
jp
data16
or
daa
inc
jb
hlt
sub
scas
nop
inc
push
inc
jecxz
inc
pop
test
cltd
sub
add
test
lret
jo
ret
testl
sub
mov
mov
inc
shlb
add
fiadds
xchg
push
insb
pop
pop
push
clc
rcrb
cmp
pop
fucomp
inc
pop
shll
sbb
sbb
rcll
sub
stos
add
push
push
clc
ljmp
sbb
lods
add
or
add
stos
nop
dec
jle
mov
les
pop
jp
in
ja
cmova
inc
mov
and
push
push
xchg
pusha
dec
jmp
sub
aam
out
jge
sbb
add
jbe
subb
in
inc
push
adc
jns
lea
dec
lods
mov
in
mov
or
sar
je
push
insb
push
add
xor
pop
addl
icebp
sti
inc
lret
cmp
pop
sub
mov
jbe
and
outsl
movsb
cltd
pop
idiv
decl
mov
or
stos
fdivl
in
stos
push
jne
mov
inc
xor
into
xor
adc
rcll
xor
sub
push
scas
sub
ficoml
dec
loopne
dec
or
add
and
inc
push
imul
mov
sbb
sbb
in
push
loop
mov
fsubr
and
mov
sub
dec
cmpsb
dec
push
in
sbb
sub
jle
adc
or
repnz
sahf
out
hlt
add
or
add
mov
aam
and
xchg
loopne
mov
sbb
rolb
mov
jge
call
stos
fcoms
lock
push
in
add
sbb
adc
or
add
addl
xor
cmc
jns
cmp
test
and
fs
inc
addb
jecxz
adc
out
mov
faddl
push
or
jo
clc
adc
cmpsl
pusha
pusha
loope
jg
ljmp
inc
je
inc
cmp
or
jo
mov
or
movsl
fimull
jbe
push
je
add
mov
dec
jne
push
pop
dec
jl
bound
gs
out
push
sbb
add
jmp
sub
push
jecxz
add
dec
push
imul
sbb
add
push
mov
push
lea
push
test
les
or
hlt
push
sbb
fisubl
pop
pop
js
rorb
push
push
addr16
clc
jbe
jne
mov
addr16
add
dec
roll
jne
xchg
dec
xor
test
das
dec
jnp
ret
adc
dec
mov
and
cmovp
lret
enter
pop
jns
pop
in
dec
push
or
mov
add
mov
rclb
sbb
mov
clc
iret
or
js
jbe
leave
ficoml
ja
out
pop
rorb
mov
jns
add
dec
dec
mov
dec
push
jmp
sub
inc
xor
dec
mov
jnp
dec
pop
sbbl
or
push
or
adcb
sub
mov
insb
mov
pop
xchg
addb
jnp
mov
jmp
cmp
jae
aad
add
mov
push
mov
or
sub
sub
rclb
dec
cmp
cs
inc
sub
mov
loop
and
jg
pop
lea
add
sub
dec
sbb
inc
les
sbb
imul
test
dec
ret
mov
add
xor
push
or
je
or
dec
cmp
mov
and
repz
mov
add
cmp
jle
sbb
push
sub
push
lcall
lea
bnd
add
xchg
and
dec
push
arpl
enter
jo
addr16
sbb
outsb
push
push
pop
int
add
sbb
or
outsb
pushl
pop
shl
sub
push
pop
add
push
pop
dec
jle
dec
movsl
decl
test
pop
sub
xchg
leave
xor
lret
sahf
cmp
push
and
pop
gs
add
iret
pop
pop
sti
fidivrl
into
cmp
lret
push
push
add
rcr
or
dec
jmp
inc
lods
movsl
out
push
sub
stos
sbb
adc
cli
insl
or
mov
rcrl
push
sub
jl
inc
inc
xchg
dec
or
mov
sbbl
add
inc
cmp
sti
cmp
adc
stc
xchg
clc
push
mov
stc
mov
sub
inc
fs
cmc
mov
notb
imul
add
lods
jmp
imul
inc
sub
pop
adc
std
xchg
jo
leave
dec
or
in
movsl
bound
cs
add
dec
lock
fucomip
fidivs
add
and
pop
imul
cltd
pop
inc
mov
call
cmpsl
xchg
or
jno
dec
loope
mov
adc
je
xor
mov
sti
jb
inc
inc
cmc
inc
insl
push
xor
cmp
push
push
push
int
push
mov
in
js
in
push
add
jecxz
js
aam
aad
nop
flds
push
jno
mov
aad
js
mov
lret
inc
dec
ja
pushf
insb
sbb
pop
in
loope
jne
outsb
enter
shl
xor
xchg
icebp
or
mov
xor
jge
orb
inc
inc
dec
push
js
jns
aaa
jb
push
sbb
sub
push
popa
rol
orl
push
je
inc
insb
sub
jmp
lea
cltd
xor
icebp
xor
hlt
mov
rolb
dec
push
mov
jl
jge
cli
loop
lods
insb
and
sbb
adc
aam
pop
lret
movsb
sbb
lods
into
dec
add
add
enter
lcall
addl
dec
cmp
in
call
dec
and
in
dec
add
or
pop
push
out
push
pop
push
pop
push
mov
cmc
or
xchg
testb
dec
shrl
int
add
stc
and
push
insb
sub
dec
cld
jmp
adcb
push
and
jecxz
in
and
mov
lea
push
out
jbe
pusha
ja,pn
or
mov
mov
ret
je
fdivrs
sub
cs
adc
hlt
push
lock
push
push
xor
popa
jmp
pop
mov
dec
push
jne
movsb
jb
outsl
or
cmp
arpl
rcl
repnz
jle
pop
push
sub
lock
push
sbbb
sub
clc
pop
or
std
cmp
loopne
rcll
adc
dec
je
mov
fmull
fisttpl
pop
push
repnz
inc
popa
jp
fmuls
fs
hlt
add
in
popa
pop
push
mov
push
xchg
push
xchg
add
cmp
fs
dec
lret
mov
xor
cmpsl
add
xchg
in
jge
push
aad
mov
aam
inc
push
sbb
dec
mov
push
xchg
adc
loopne
inc
daa
jmp
push
push
mov
adc
add
cmp
sub
mov
mov
push
pusha
mov
adc
add
fstpl
out
xchg
pop
jne
add
mov
jge
rcl
add
lods
or
rep
jmp
adc
pushf
mov
fld
jb
xchg
add
test
cmp
nop
nop
push
adc
rolb
push
add
ror
pop
shr
fcmovb
insb
mov
or
lods
adc
pop
mov
dec
sbb
push
dec
add
xchg
inc
xor
xchg
mov
repz
ja
fs
pop
push
push
dec
inc
sahf
push
cmp
xor
inc
mov
mov
call
call
out
sahf
out
hlt
clc
clc
cld
loopne
bound
call
xchg
jp
sbb
jmp
out
movsb
mov
loopne
nop
inc
pop
sti
and
or
roll
push
xchg
sub
lea
jl
cld
pop
and
lret
or
sbb
neg
fimuls
addr16
stc
sub
inc
pop
nop
xor
push
push
jl
int
in
fiaddl
jl
mov
imul
pop
push
jns
push
out
push
add
lods
dec
dec
addr16
mov
ret
gs
pushl
pop
push
fadds
loopne
lock
iret
repz
add
push
cmp
repz
adc
adc
repz
repz
or
add
dec
enter
or
cmpsb
and
aaa
push
add
pop
or
add
xlat
aad
sub
inc
aad
push
test
and
cmp
jno
or
and
fists
fmull
adc
int3
or
testb
jne
pop
jo
mov
jl
or
sar
xor
pop
lock
push
mov
add
mov
add
jg
sub
adc
pusha
lcall
loopne
in
lret
int3
ss
mov
and
mov
xor
sub
and
into
outsb
cmp
sub
or
fstps
cltd
mov
push
popw
pop
push
push
iret
or
inc
add
jp
sbb
push
push
and
or
in
mov
testb
movsl
ds
xchg
aam
adc
andb
rorb
dec
inc
sbb
or
mov
addl
lock
orb
sbb
add
js
jns
or
mov
fcomps
sti
pop
push
shrl
mov
daa
popa
and
pusha
cld
add
cltd
adc
insl
push
std
call
cmp
out
push
fmul
adc
sbb
add
arpl
sub
je
jge
push
lock
sub
call
cltd
xor
dec
cmp
inc
sub
rorb
mov
xchg
outsb
jp
pop
std
movb
jmp
jnp
cmp
std
add
inc
mov
adc
dec
push
sub
sahf
stos
movsl
rolb
clc
mov
subl
shll
lock
adc
push
es
adc
dec
pop
imul
cmp
add
sbb
imul
cmp
xchg
push
fnstcw
xchg
dec
add
cmp
xor
add
mov
or
testb
jmp
or
mov
or
fsincos
add
je
rep
mov
dec
ljmp
push
jns
in
and
mov
xchg
xchg
fnstsw
js
je
jo
xchg
xchg
fistps
cwtl
or
add
fs
popl
sbb
lods
test
add
mov
add
sahf
mov
mov
add
dec
jo
mov
shrb
dec
pushf
js
sarb
insb
jecxz
ret
jno
outsl
pushf
mov
fsubl
mov
adcb
fldenv
fisubrl
adc
js
cwtl
fidivl
mov
push
pop
lahf
cmp
xchg
lock
mov
aad
and
push
inc
sti
xchg
xchg
andl
testb
rcr
adc
sub
adc
xor
leave
arpl
xchg
xchg
xchg
iret
loopne
fcoml
cld
ss
xchg
sarb
or
mov
les
push
mov
les
add
sbb
shrl
aam
aaa
rcrb
push
adc
xorl
das
and
pop
in
xchg
clc
jno
jb
xor
adc
xor
es
in
insb
inc
fisubl
pop
mov
and
pushf
dec
mov
inc
shrb
push
lcall
push
add
out
add
push
add
gs
jo
pop
pusha
sahf
jb
test
pop
cmc
pop
mov
or
fwait
pusha
aaa
jmp
je
mov
xor
dec
push
insl
loop
fwait
shrb
pusha
call
inc
cltd
adc
push
sbb
push
inc
call
pop
xor
lret
xor
cltd
pop
test
push
shr
sbb
or
pop
divl
sub
xor
mov
sarb
mov
dec
adc
dec
ret
sub
sbb
and
insb
pop
repnz
loopne
dec
ljmp
sbb
mov
mov
insl
xchg
push
sbbb
sub
push
inc
fiaddl
fcoml
fsubl
and
or
push
sahf
into
fldl
scas
dec
xor
sbb
jmp
popa
leave
sbb
sbb
push
add
hlt
pop
jno
jecxz
dec
sahf
add
shlb
mov
cmp
cmp
dec
rolb
pusha
or
jmp
pusha
loope
jle
and
ret
insl
popf
dec
es
cmp
lcall
cmp
cmp
jne
push
cmp
sub
insb
fildl
iret
das
nop
xor
test
mov
or
sbb
addb
cmp
or
pop
cs
lret
shl
fdivrs
loope
cmp
add
ss
push
mov
pop
ss
or
insb
jne
rclb
out
rclb
xchg
loopne
stos
gs
mov
add
cmpl
xor
sti
rcrb
push
sbb
mov
movsbl
or
jo
mov
test
xor
jno
push
sar
pop
lods
movsb
add
in
ljmp
inc
test
lahf
call
cs
dec
mov
test
les
lret
dec
push
call
je
or
aam
test
in
fldpi
pop
or
add
cmp
fistps
dec
jecxz
add
in
sbb
sti
mov
adc
js
adc
call
insb
std
loopne
adc
push
imul
shrl
movsb
lea
ja
movsl
mov
adc
lods
add
in
sub
jae
adc
push
or
inc
insb
js
inc
insb
repnz
xor
ficoms
pop
pusha
sub
or
pop
and
push
ss
js
add
xchg
ss
fcmovnb
add
addb
inc
popf
xchg
xor
or
cmp
mov
sub
inc
imul
adc
dec
scas
dec
xchg
mov
ret
inc
mov
test
jmp
prefetcht2
push
bound
push
push
sbb
mov
pop
push
or
mov
and
mov
adc
inc
adcl
push
loope
sub
lock
pop
jmp
xchg
and
sbb
mov
mov
lock
aaa
xlat
aad
jne
das
mov
add
mov
and
and
inc
outsb
movsl
sarl
push
sub
in
add
mov
mov
cmp
jmp
pop
or
addr16
jmp
inc
inc
push
insl
cmp
cmp
mov
push
call
cmp
sub
push
shr
push
or
mov
mov
dec
add
cmpl
pushf
jo
or
fcoml
leave
or
sub
and
mov
adc
lahf
pmaxub
daa
push
and
pop
mov
inc
hlt
xor
dec
mov
lods
iret
add
push
mov
push
cs
stos
mov
xchg
fidivrl
lock
jns
push
sbb
inc
xlat
test
sub
outsb
jo
jmp
outsb
add
jmp
in
je
or
sub
cmpsb
and
xchg
loopne
jge
je
xor
ljmp
loope
xor
mov
enter
xchg
jl
movsb
shlb
imul
sub
push
sbb
or
test
neg
add
push
add
mov
jne
mov
addr16
mov
jmp
cmp
jle
icebp
sub
pop
popa
mov
cmp
adc
add
lahf
mov
sub
rcll
adc
or
andl
push
insb
push
addr16
test
pop
cmp
add
jmp
lods
loop
dec
sbb
xchg
sub
inc
sbb
in
cmp
and
xchg
adc
push
push
pusha
pusha
inc
xchg
inc
scas
data16
xchg
push
call
andb
aas
sub
inc
stos
es
popa
js
inc
dec
or
and
jae
pusha
cmp
or
mov
jo
inc
daa
add
or
mov
push
push
arpl
cs
mov
into
xor
adc
bound
je
in
adc
dec
adc
push
adc
inc
cld
jmp
or
outsb
or
add
es
sbb
shrb
pop
jl
jae
dec
add
aam
neg
sub
pop
fidivs
add
jnp
or
xchg
cmp
sbb
add
cmp
popf
jno
je
and
lea
loopne
das
sbb
mov
inc
orb
and
push
push
inc
cld
add
ret
mov
in
mulb
test
repnz
sahf
add
clc
bt
sub
sub
inc
scas
xchg
mov
ljmp
arpl
jnp
orb
shlb
sbb
inc
jmp
nop
mov
subb
dec
dec
or
aas
dec
pop
push
repnz
sar
ret
jae
sub
sbb
mov
inc
hlt
add
sub
movsb
repnz
adc
test
adc
test
jo
scas
sub
dec
cmp
ffreep
mov
jle
cmp
push
aas
dec
xor
pop
rolb
fmulp
mov
add
ret
mov
and
sbb
test
dec
push
leave
lds
add
adc
jle
inc
add
sub
pushf
jmp
push
push
sub
mov
xor
lret
jbe
rol
mov
daa
sub
pushf
jmp
pop
cmpsb
loopne
js
scas
fldenv
daa
sub
add
arpl
and
add
push
into
inc
nop
les
inc
movsl
daa
arpl
mov
pop
jmp
cmp
adc
add
loope
mov
movsl
icebp
ja
mov
aaa
addr16
notl
or
or
pop
adc
inc
add
jno
xor
stc
cmp
sub
mov
jle
xchg
xchg
pop
xor
xor
sbb
inc
or
push
xchg
jge
mov
aas
dec
mov
xchg
or
lahf
out
out
push
cld
div
push
in
in
aam
xchg
add
scas
sar
cmp
inc
pop
jle
enter
mov
or
andb
nop
rorb
hlt
push
sbb
aas
insb
add
mov
mov
or
sahf
jnp
js
orb
add
add
or
push
in
jg
jecxz
push
aas
push
mov
push
enter
cmpsb
mov
clc
movsl
cmp
push
adc
mov
mov
ret
push
shr
jo
pop
adc
int3
add
call
out
push
mov
pusha
std
es
icebp
mov
lret
and
pop
cmp
ret
gs
jl
sub
add
dec
mov
push
mov
nop
cs
add
shrl
mov
dec
test
in
ret
cmp
jl
fsub
push
inc
cli
add
and
fsub
adc
idivb
mov
cltd
int3
inc
int3
and
sti
jecxz
push
cs
xchg
mov
js
dec
dec
ljmp
insl
jb
into
js
movsb
and
xchg
mov
adc
loope
scas
sub
add
cmpb
sbb
add
pop
push
scas
or
jno
add
add
dec
fisubl
adcb
mov
adc
test
xchg
cmc
daa
mov
sub
int
shlb
dec
fs
shlb
aam
jo
das
push
jge
testb
add
mov
mov
sbb
pushl
insl
and
lahf
out
ss
xchg
test
jp
add
push
mov
stos
mov
stos
mov
cmp
adc
or
adc
daa
das
fucomi
out
loopne
loopne
loopne
ja
lret
loopne
jb
jecxz
cmpl
jp
ja
and
fisttpll
or
cmp
es
test
out
outsb
xor
stc
sub
sbb
pop
dec
jp
mov
fwait
movsb
xor
int3
rclb
subl
inc
popa
pop
and
xchg
jb
sbb
loopne
in
loope
add
cmpb
push
add
fwait
xor
iret
adc
outsb
inc
call
lahf
addl
add
leave
pop
sbb
imul
nop
jo
iret
mov
jo
rorl
sub
push
push
pop
bndstx
mov
subb
daa
push
aaa
in
or
mov
loop
add
sti
or
pop
push
outsl
cmpl
ret
mov
cli
in
cmp
sub
lea
into
inc
roll
add
cld
xchg
adc
mov
pop
ss
push
jne
pushl
xor
xchg
push
pusha
call
jmp
pop
push
add
inc
push
dec
mov
xor
mov
pop
psubb
mov
jl
inc
movsb
or
mov
inc
test
inc
sbb
push
dec
pushf
xchg
ret
xchg
shlb
cli
sti
lret
loope
shlb
lods
and
cmc
jo
bound
in
pop
push
sub
mov
push
add
mov
xchg
adc
add
lss
add
pop
fildl
and
lods
ja
sub
mov
inc
push
add
lcall
je
je
icebp
xchg
sub
pop
jl
and
int
jmp
hlt
or
insl
lds
pop
test
out
fidivl
push
sub
adc
xchg
rorl
imul
xchg
pop
insb
loop
loopne
xor
insb
push
mov
and
mov
lock
in
cmpsl
mov
in
push
leave
and
push
xlat
shrl
xor
sub
outsb
adc
scas
test
push
cmp
in
lcall
or
push
sbb
or
pop
testb
sbb
fprem
inc
xchg
push
cld
mov
or
sti
sbbb
cld
and
dec
xchg
xchg
push
test
and
call
add
jg
les
gs
adc
mov
add
push
cmp
cld
fisubl
insl
jo
jmp
cmp
add
outsb
xor
push
incl
add
push
int3
sub
and
loopne
mov
and
ds
xor
mov
dec
xor
rcl
sub
xchg
inc
enter
sbb
push
or
lcall
cmp
dec
add
fsubrp
adc
add
movsb
or
adc
xchg
push
xor
adc
add
lods
jp
xchg
push
clc
hlt
arpl
loope
cwtl
push
mov
rorl
shlb
out
adc
cmc
dec
adc
movzwl
stos
dec
shl
or
les
or
enter
pop
add
mov
aam
or
jbe
loopne
pop
ja
call
jb
xorl
xchg
imul
andb
and
pop
roll
xorb
adc
xchg
xchg
mov
sar
add
andl
sub
outsb
ret
xor
xor
ret
mov
test
clc
push
cltd
mov
or
pop
add
mov
pusha
xor
mov
mov
or
aaa
xchg
loopne
add
fcoml
leave
orl
outsl
dec
rclb
mov
mov
mov
rcr
cmp
add
jne
fisubrs
in
adc
and
xor
lcall
and
jno
cmp
lea
pop
inc
xor
cmp
dec
inc
into
leave
leave
leave
cmp
es
stc
lret
inc
test
add
inc
inc
or
adc
dec
or
pop
sbb
mov
rorl
jle
movsl
in
pop
int
xchg
rorb
cmp
add
xor
call
clc
adc
test
orl
test
faddp
push
mov
or
call
push
cs
int3
andb
or
dec
mov
inc
adc
mov
cmp
adc
cmp
leave
leave
mov
add
mov
iret
insl
and
xor
add
orl
js
sbb
push
in
addl
insb
push
add
mov
mov
adcb
dec
popl
pop
mov
pop
dec
addb
or
cs
and
mov
mov
shrl
mov
insb
adc
loopne
dec
imul
mov
sub
lods
enter
das
lahf
lret
jle
call
call
test
add
pushf
dec
and
or
in
lcall
dec
gs
add
and
xchg
dec
mov
pop
pushl
push
xchg
aam
enter
mov
add
or
and
or
pusha
or
adc
adc
sti
or
and
sbb
in
push
or
push
sbb
shlb
or
loopne
lods
jecxz
push
cmp
popf
pop
add
xchg
js
test
cwtl
dec
fadds
cmc
inc
push
add
in
sbb
repz
cmpsl
push
dec
cmpsb
repnz
mov
add
push
jae
add
sub
cmp
int3
inc
adc
rorl
jmp
mov
mov
les
iret
mov
shrb
sub
int3
xchg
ret
xchg
adc
mov
xchg
pop
rolb
rcl
push
rcll
das
jecxz
adc
xor
add
cmpsl
or
push
sbb
ret
push
fsubl
mov
popa
notl
adc
or
test
dec
add
or
bound
adc
es
or
jmp
mov
int3
ret
sbbl
mov
in
pop
sbb
cmp
jne
or
cmp
and
ljmp
jne
sub
push
lret
inc
adc
xchg
rclb
push
nop
sbb
roll
add
xchg
mov
sbb
add
add
scas
movsb
mov
mov
jnp
hlt
mov
movsb
je
adc
push
add
pop
or
and
adc
hlt
cwtl
push
jns
or
push
or
lock
nop
push
or
scas
inc
movsb
fstpt
imul
adc
je
test
mov
add
pop
sub
mov
mov
inc
in
sbb
filds
daa
or
push
sbb
cmp
cli
loopne
sarb
movl
ret
test
test
add
and
jle
mov
inc
popf
out
and
mov
add
sbb
inc
ja
sub
add
add
xor
inc
push
sub
test
jb,pn
or
cld
out
ja
ficoms
push
push
sub
out
add
pop
mov
sub
in
and
push
inc
outsb
push
dec
inc
inc
cld
mov
dec
and
incl
mov
int
push
orb
mov
lods
jmp
and
and
and
pop
mov
adc
mov
fs
pusha
leave
sub
in
jg
testl
lea
cmp
ja
mov
and
lea
cli
sbb
xchg
test
add
sbb
add
dec
sub
aaa
clc
mov
mov
jo
jg
dec
sarl
push
or
and
pop
shrl
test
cmp
xor
je
jmp
decb
into
mov
dec
mov
mov
push
insb
dec
iret
jle
mov
mov
shll
fdivrl
sbb
jo
jne
movl
cs
testb
inc
std
jne
shll
cld
add
inc
incl
jmp
lret
push
sbb
sbb
fwait
and
add
fwait
idivb
push
push
addl
jnp
icebp
mov
and
push
xor
incb
into
jb
adc
std
out
push
jmp
lock
add
push
lods
popf
push
into
dec
fwait
sbbb
adcl
inc
pusha
push
pop
jne
mov
jnp
jae
cmp
push
push
xchg
jbe
sub
addl
out
xor
je
jns
inc
push
leave
movsb
push
imul
lods
imul
loop
mov
loopne
mov
aaa
jmp
adc
dec
imul
mov
fs
subb
inc
cmp
pop
adc
movb
pop
xlat
adc
jo
inc
push
xor
jge
add
jb
mov
jmp
jp
push
cvttps2pi
insb
xchg
mov
add
jno
enter
loope
movsb
call
dec
jne
mov
lea
mov
inc
adc
idivb
adc
mov
or
inc
dec
jne
mov
stos
mov
jmp
pop
cltd
add
addr16
jnp
cmpsl
cmp
into
or
shlb
jg
adc
dec
subl
fwait
pushf
mov
dec
and
lar
jmp
cmp
imul
adc
and
xchg
xchg
aam
add
mov
xchg
add
jmp
adc
mov
pop
pop
and
mov
push
dec
push
push
nop
dec
sbbl
aam
xor
xlat
testb
insb
ljmp
add
adc
and
sub
push
or
inc
ss
push
clc
add
out
jl
popf
les
sub
jmp
xor
mov
dec
sbb
mov
je
jmp
push
pusha
sbb
sub
incl
insl
adc
cs
mov
and
aad
xor
cmp
fs
push
and
outsb
loopne
sbb
sarl
std
and
movsb
pushf
ljmp
xchg
ret
xor
xor
pop
into
movb
dec
push
sbb
mov
lea
bextr
and
lods
enter
add
cmpl
push
xor
ret
adc
or
add
adc
cmp
arpl
cmp
xor
pop
sub
and
test
cld
inc
call
jo
aam
imul
add
out
adc
dec
mov
mov
sub
inc
mov
imul
repnz
sbb
mov
movsb
rolb
sub
xchg
xchg
add
sub
and
or
cwtl
rorb
sub
cmp
add
out
das
ljmp
mov
or
movsb
xchg
imul
cld
mov
add
js
bound
jns
push
mov
cmc
cmp
mov
push
sub
cmp
mov
mov
lea
leave
daa
xor
pop
or
rorb
push
in
add
pop
adc
jle
sbb
or
insb
or
aas
adc
jbe
insb
jle
inc
cmp
in
mov
pop
push
dec
jb
loopne
cmp
and
cmp
sbb
pushf
arpl
in
xchg
jno
or
je
adcb
push
inc
out
sub
mov
fdivrl
push
scas
push
sub
cwtl
out
mov
push
xor
inc
movl
pusha
dec
loope
or
xchg
lods
lea
mov
or
xor
inc
push
loope
sahf
xchg
xchg
push
jl
or
jmp
shlb
shlb
sbb
mov
adc
jae
clts
pushf
dec
mov
or
in
nop
add
sbb
pop
dec
lcall
in
cmp
dec
sbb
push
push
push
nop
je
adc
inc
xchg
out
jnp
mov
or
xor
shr
pop
ficoms
xlat
decl
aaa
jmp
xor
jno
fcmovb
iret
mov
and
in
push
ss
xor
push
in
push
inc
inc
dec
xor
inc
pop
cmp
sbb
sbb
adc
jecxz
dec
lods
and
cmp
shll
sbbl
jp
adc
xchg
in
hlt
into
jp
nop
mov
stos
xor
jge
sbb
push
fsts
call
nop
aaa
and
mov
pusha
gs
mov
divl
mov
cmp
add
dec
rcrl
or
adc
mov
rcr
dec
sbb
add
sbb
test
push
mov
inc
rcl
xchg
or
and
in
mov
inc
pop
fistpl
push
pop
xor
pop
fistpll
xchg
arpl
mov
ffreep
jne
cmp
enter
xlat
xchg
sbb
nop
inc
loop
mov
pop
pop
stos
mov
cltd
ret
lea
jl
add
loopne
jmp
mov
sub
add
inc
jmp
aam
jmp
fcmovu
fnstsw
out
cmp
push
push
shlb
insb
xchg
xchg
lea
sub
outsb
and
add
sbb
or
ret
enter
pop
dec
shl
popf
pusha
dec
xor
ficomps
add
cld
sbb
je
mov
push
add
and
mov
mov
sub
and
not
and
or
mov
xchg
jecxz
dec
popa
jecxz
je
push
clc
testb
mov
mov
xorl
mov
mov
out
inc
xchg
into
data16
xor
fldt
test
cmpsl
lods
in
jge
mov
inc
inc
pop
add
je
mov
mov
push
or
test
push
faddp
arpl
fsubl
pop
add
test
or
in
dec
and
fldl
or
imul
nop
mov
jp
enter
sub
jno
xchg
pop
in
add
mov
mov
pusha
xchg
cli
mov
inc
sbb
and
sbb
mov
das
add
pop
pop
mov
je
dec
add
and
sbb
jle
add
adc
mov
sbb
test
push
push
ja
pop
rcrb
pop
xchg
xor
hlt
sbb
call
pop
fcompl
cli
xor
add
push
adc
cmpsl
xor
daa
test
and
adc
xchg
jmp
lcall
or
orb
mov
mov
test
cmc
fmull
subl
ret
fstl
mov
icebp
lds
hlt
xchg
jne
lea
scas
addb
inc
lock
nop
andl
mov
xchg
sahf
cmpsl
mov
cmp
repz
adc
iret
aam
push
imul
pop
imul
push
mov
das
xchg
mov
cld
out
in
push
or
cs
push
mov
mov
or
cltd
inc
repz
lods
fidivs
inc
sti
popf
cmp
insb
mov
mov
jnp
push
inc
mov
cmp
les
cltd
jmp
inc
faddl
imul
sti
ja
popa
push
jmp
test
shr
dec
lods
pop
fucompp
mov
inc
jp
xchg
and
ret
and
push
push
fs
mov
jb
or
pop
mov
nop
dec
sub
iret
imul
sub
pop
lcall
cmpl
call
or
or
xchg
inc
mov
and
push
adc
cmp
xchg
popf
sub
popf
fadds
jb
pop
call
jb
inc
movsl
mov
lods
std
or
xchg
pop
movsl
sub
jmp
mov
mov
sar
jmp
mov
mov
out
fwait
xor
sub
mov
in
lea
call
lock
idivb
cmp
fiaddl
movsl
leave
rorl
loopne
lahf
dec
jecxz
mov
ja
sbb
pop
cld
cmp
cmp
pusha
es
lret
mov
pop
mov
lods
or
addl
mov
mov
pop
sbb
lock
movsb
in
xchg
xchg
adc
pop
dec
dec
jne
xchg
fldpi
pop
or
add
in
inc
lret
subl
mov
sbbb
mov
pop
cld
fwait
aam
add
mov
lea
mov
mov
mov
mov
sbb
adc
lods
es
leave
call
std
pop
pushf
xor
int3
in
dec
je
or
inc
and
loope
je
and
dec
and
jne
inc
sub
adc
aad
pop
jle
and
hlt
ss
cmpb
mov
add
adc
and
cmp
inc
xor
inc
inc
xor
dec
push
imul
jmp
push
lcall
stc
push
pushf
leave
mov
andl
scas
xor
add
mov
in
pop
les
subb
or
incb
pop
arpl
fs
push
xchg
jbe
fwait
mov
push
clc
nop
cmp
jle
push
or
mov
sbbb
inc
aas
inc
mov
mov
aad
mov
ret
ret
dec
push
cmpsl
loopne
popf
mov
in
inc
icebp
cwtl
add
scas
cmp
sbb
shll
stc
mov
jecxz
sahf
test
test
sarb
sbb
xor
mov
inc
mov
dec
rcl
jns
daa
mov
stos
pop
and
add
xor
mov
cld
roll
add
mov
ret
fisubl
xor
enter
mov
inc
dec
jmp
cmpsb
sbb
or
add
pop
fcompl
mov
pop
pop
jo
add
push
add
inc
adc
add
sub
sbb
add
mov
addr16
sahf
xor
lcall
std
and
test
or
push
js
cmp
cmpl
adc
call
roll
inc
sbb
sbb
gs
add
jb
inc
fbstp
push
jne
adcb
popf
outsb
add
pop
mov
jle
mov
mov
andb
call
jl
lret
push
mov
or
mov
mov
mov
mov
sub
add
adc
out
mov
add
sbb
mov
sbb
pop
or
incl
lods
inc
push
cmpsl
inc
out
lock
outsb
adc
incl
shrl
test
mov
mov
inc
daa
add
scas
jns
sub
sub
jecxz
push
jecxz
nop
aad
jo
jne
lcall
jae
ret
sbb
std
inc
inc
inc
add
std
mov
or
inc
outsb
or
cld
adc
in
std
dec
std
aas
pop
or
jne
mov
xchg
mov
idiv
sub
jmp
pop
testl
pop
mov
sub
push
sub
sub
data16
mov
aas
dec
data16
or
pop
repnz
mov
xchg
testl
inc
push
cmc
mov
push
adc
cmp
aas
lds
sub
sbb
or
mov
int3
cmp
dec
loope
jmp
stc
and
mov
dec
mov
sbb
mov
fisttps
out
lcall
cmp
sub
add
pop
jmp
insb
daa
mov
fwait
cli
xor
fstpt
roll
pusha
sbb
mov
je
push
inc
cs
cmp
add
sub
xor
nop
sbb
jmp
push
sub
adc
cli
lcall
int
enter
lods
inc
mov
inc
add
dec
or
add
pop
adc
pop
add
and
adc
push
mov
mov
enter
lea
leave
clc
mov
lret
push
sub
pop
jnp
inc
cmp
jns
dec
mov
pop
stos
mov
xor
testb
and
fs
pusha
loopne
addr16
adc
orb
popa
mov
add
push
push
and
and
and
mov
mov
test
mov
sbb
arpl
cld
xor
insl
adc
pop
inc
mov
or
sahf
out
ret
js
pop
jo
pop
in
enter
fsts
mov
loope
xor
loope
adc
inc
out
mov
lea
in
pop
fsubrs
xor
add
pop
stos
movb
mov
push
scas
movsl
cmp
insl
push
and
scas
mov
out
test
mov
jecxz
out
jge
pop
push
jecxz
out
xlat
test
lret
mov
pop
and
jno
push
inc
out
inc
inc
inc
inc
stos
out
in
in
aad
pusha
inc
inc
int
inc
sub
aaa
add
mov
jbe
nop
test
inc
dec
in
jbe
icebp
ljmp
sbbl
ud0
lods
mov
inc
lods
mov
stos
test
xchg
dec
inc
es
cmpsl
inc
push
movsb
scas
cmp
sbb
cwtl
scas
xor
lods
push
sub
xchg
daa
daa
xchg
in
fsubrs
aam
xchg
cmc
and
and
lds
add
push
cld
scas
add
mov
sbbl
loope
scas
mov
in
lret
les
mov
sbb
sub
cmp
jnp
add
push
mov
jb
inc
dec
xchg
sbb
clc
leave
jne
out
push
jecxz
aam
push
out
sbb
xor
test
lods
sbb
enter
jecxz
fiaddl
rorb
and
adc
pop
mov
inc
add
sarl
push
push
mov
or
fldl
sbbb
cs
or
sub
inc
mov
inc
add
clc
xor
pop
cmp
sub
sub
mov
ret
inc
add
pop
mov
int3
test
daa
sub
mov
inc
or
pop
pop
mov
xchg
test
sub
add
inc
and
adc
scas
push
sbb
mov
jne
xor
cs
out
repz
jmp
dec
fisttpl
push
inc
cwtl
add
das
mov
icebp
mov
lea
arpl
xor
jb
decl
or
or
movsl
or
push
sbb
loopne
lock
xchg
testb
lock
cltd
cmp
ret
jne
pop
dec
es
mov
xor
push
test
out
mov
mov
sbb
jne
add
or
mov
mov
push
sbb
fadd
push
test
cld
jb
test
mov
add
or
je
jmp
sbb
out
fdivl
sub
ret
adc
std
sbb
es
sbb
and
push
push
mov
jl
push
stos
and
lock
mov
idivb
ljmp
pop
or
rolb
xchg
cltd
sbb
movsb
and
jle
fistps
sbb
and
mov
sbb
fstps
mov
shll
fucomip
stos
bound
xor
andb
mov
cmpsb
mov
push
and
test
jne
pop
adc
and
pop
test
and
add
nop
ret
push
test
pop
or
sbb
jae
mov
enter
testb
sbb
add
sub
mov
push
dec
or
ror
pop
inc
leave
and
sbb
add
add
or
jmp
loop
xor
shrb
mov
ds
cli
pop
xor
add
sub
pop
rcrl
xor
add
das
pop
jne
cmpl
lret
add
sbb
and
and
movl
add
xchg
movsb
cmp
lds
pop
and
movsl
cmc
sarb
dec
pop
push
jl
dec
xchg
rcll
lock
std
pop
popa
sbb
imul
add
xor
ret
mov
lahf
sbb
mov
test
cli
add
or
and
clc
push
es
mov
mov
add
push
test
xor
cmp
ljmp
stc
mov
fs
stc
fiaddl
cmp
xchg
inc
scas
outsb
cmp
xchg
push
push
mov
lea
in
and
imul
push
cmp
mov
mov
mov
sub
jmp
test
jo
rcll
pop
or
and
adc
mov
jo
jmp
or
and
xor
adc
mov
sbb
mov
xor
fsubl
adc
call
push
sub
sub
push
lar
sbb
mov
push
sub
and
sbb
mov
pop
pop
hlt
push
jmp
push
xchg
inc
push
xor
sub
adc
lods
inc
sahf
mov
push
adc
outsl
dec
or
js
call
gs
sahf
inc
cmp
dec
inc
push
sti
jne
js
out
outsb
lea
pop
hlt
add
mov
dec
and
mov
ret
pop
jne
xor
adc
aam
in
int3
push
mov
or
inc
cmp
or
adcl
inc
das
dec
and
push
stos
add
xlat
rcl
xor
adc
push
outsb
adc
pop
cld
mov
xchg
add
or
int3
icebp
cmp
enter
or
flds
jno
loopne
rorb
jae
xchg
repz
add
in
push
add
sub
fidivrl
movsl
adc
incl
fidivrs
add
inc
push
add
ds
je
cmp
stos
mov
push
dec
cs
or
js
and
xchg
or
cld
push
in
jmp
dec
popa
push
pop
movsl
test
fistpll
pop
xorl
aam
add
sbb
xor
fldpi
ret
andl
pop
std
cmp
adc
inc
cli
sub
shll
ds
mov
sbb
iret
push
sub
xor
clc
shll
pop
mov
mov
mov
dec
clc
andl
cmp
scas
daa
mov
add
pop
mov
xchg
xchg
loopne
pushf
pop
lret
and
dec
add
iret
andb
jae
lea
add
add
adc
push
dec
ret
das
push
daa
orl
fisubs
dec
pop
mov
mov
aam
adc
test
mov
loopne
pusha
pusha
fcmove
js
add
push
push
je
cltd
fdivr
lsl
push
push
sub
lea
push
fnstenv
or
push
popa
add
loop
out
mov
int3
dec
dec
inc
fisubs
inc
push
pop
push
int
rcrl
add
nop
test
pusha
shlb
dec
or
negl
mov
movw
mov
adc
movb
cmpsb
mov
dec
das
xchg
pop
dec
inc
ret
inc
or
jb
push
push
dec
inc
mov
inc
call
lret
sbb
add
lret
xor
fidivrs
push
push
cmp
fs
mov
or
add
scas
add
lret
fdivrl
mov
add
andb
push
xor
aas
cmp
or
roll
add
sub
shll
les
lds
adc
outsl
jmp
jb
cmp
jp
jmp
prefetch
or
or
or
lock
push
popa
cmp
pop
ret
add
addr16
add
jo
nop
mov
mov
mov
test
idiv
inc
jo
sbb
dec
lcall
jmp
test
push
orb
ret
in
jmp
mov
jmp
lea
push
cmp
insl
xchg
cmc
push
lahf
push
lcall
push
mov
jo
aaa
xor
pop
or
add
into
push
popl
push
mov
adc
push
sbb
add
iret
insl
add
jmp
nop
adc
imul
mov
push
pop
mov
push
jmp
jo
mov
mov
or
outsb
dec
cli
xor
lock
mov
test
or
shlb
push
pusha
ficompl
cld
xor
mov
sbb
ja
fsubs
sub
dec
lock
inc
imul
cmp
test
mov
test
push
roll
testb
lock
add
push
lret
add
dec
jecxz
push
and
sbb
mov
jae
cvtps2pi
pop
pop
ret
mov
inc
inc
mov
jb
mov
orb
xor
jge
sub
push
lock
jecxz
bnd
sub
int
dec
jbe
pop
enter
mov
push
cmp
add
fcoms
push
rorb
mov
in
shll
arpl
in
xchg
xchg
das
push
push
in
xchg
es
pop
stc
sbb
add
jnp
in
push
sbb
inc
adc
push
sub
xor
sarl
fbstp
jmp
mov
or
jl
orb
or
and
and
sbb
jns
iret
sub
stc
cs
sub
pop
xor
inc
pop
and
repz
mov
stos
sbb
je
test
fs
imul
xor
cmp
sbb
popf
or
ja
clc
and
add
addr16
or
push
daa
lock
data16
leave
push
adc
add
stc
push
roll
push
and
mov
xor
scas
lea
push
jmp
and
hlt
sbbl
or
mov
add
mov
mov
in
mov
call
add
push
test
xchg
and
adc
outsl
inc
pop
jecxz
out
cmpl
xchg
jne
outsl
or
lret
sbb
imul
add
jnp
add
sarl
mov
dec
cmp
push
daa
or
rcrb
dec
hlt
jge
inc
push
sbb
add
cmp
jne
xchg
lcall
xor
and
iret
xchg
ds
je
add
cmpsb
add
insb
test
mov
mov
loop
std
ret
divl
mov
ljmp
cmpsb
cmpsl
out
add
hlt
in
out
fcmovnbe
rol
loopne
xor
pusha
cmp
jnp
vfmaddpd
iret
test
fiaddl
imul
jg
sbb
rorl
js
add
xchg
jb
jns
dec
ja
ret
inc
mov
pop
mov
rolb
pop
sbb
in
cmp
clc
lock
fsubrs
adc
pusha
lods
and
or
push
cmp
dec
add
roll
and
out
or
push
js
lea
popf
cmp
iret
lock
imul
xor
shrb
fcomp
enter
fisttps
enter
add
jb
mov
pop
xchg
out
and
outsl
fadds
ret
sub
fsubrs
mov
rcl
mov
or
jg
test
adc
push
lock
mull
popf
jns
pop
lsl
jmp
push
pop
push
push
inc
rol
flds
shr
rcr
or
mov
repz
dec
mov
mov
out
jb
cmp
in
std
std
ja
jb
cmp
or
xor
and
lock
push
adc
or
fcmovbe
je
push
inc
lret
iret
pop
shlb
test
mov
sar
dec
sbb
and
adc
rcrl
adc
sbb
inc
adc
pop
negl
jne
xchg
lahf
inc
push
fldcw
stos
or
inc
in
add
movb
adc
hlt
xor
ljmp
dec
sti
mov
xor
add
inc
call
mov
push
cmp
cli
jb
or
out
inc
or
adc
outsl
or
or
lret
push
mov
mov
add
idivb
inc
mov
and
movsb
push
mov
xlat
mov
in
sbb
push
fcmove
mov
push
dec
loopne
push
sub
cmp
into
jmp
insl
or
and
push
push
sbb
daa
jle
insl
push
clc
mov
adc
jmp
dec
and
and
ret
mov
and
mov
or
add
adc
sbb
xor
rcll
or
sbb
jo
push
loope
add
shll
jmp
inc
adc
jmp
add
push
mov
add
sub
push
jmp
inc
cmp
or
je
xor
mov
mov
add
daa
fsts
mov
sarb
mov
or
dec
inc
decb
dec
or
sub
adc
test
lock
into
add
hlt
pop
and
mov
adc
clc
rcr
and
lock
clc
out
lock
push
fidivl
add
jmp
jno
dec
shl
pop
mov
outsb
iret
mov
pop
adc
scas
js
jnp
test
and
mov
lods
fmuls
jl
or
loope
or
lahf
ss
dec
iret
decl
mov
mov
lds
pop
mov
les
je
pop
rolb
lds
mov
mov
jg
pop
cs
jmp
mov
je
sub
mov
aaa
in
add
aas
mov
test
stos
imul
and
insl
add
inc
inc
loope
mov
cmpsb
or
dec
adc
cmp
stos
dec
xchg
adc
add
sub
sub
mov
adc
cmp
sub
push
fildl
sbb
inc
in
push
imul
fs
iret
pandn
rorb
or
pop
or
adc
outsl
push
dec
in
cmp
adc
and
cmp
sbb
and
mov
movsl
fisttpll
mov
adc
movsl
fsubrs
inc
leave
inc
nop
aam
lods
sub
nop
fsubs
flds
fidivl
lret
call
mov
movb
sub
pushf
enter
sbb
mov
rclb
mov
xor
xchg
mov
cmp
inc
jmp
cli
fadd
test
push
sarb
sarb
xchg
cmp
push
pop
nop
outsb
cmp
jge
aas
sbb
cmp
into
in
adc
lret
xor
je
add
jbe
rolb
cmp
mov
dec
call
adc
xor
push
adc
or
and
mov
jne
push
adc
and
ja
mov
lret
addb
push
stos
or
pop
sbb
jle
ljmp
jg
ljmp
mov
test
adc
push
and
ds
xor
iret
out
stc
jg
outsl
inc
or
jbe
jle
out
mov
jg
jg
jg
jo
mov
and
adc
mov
pop
dec
in
rclb
adc
sti
outsl
rorb
inc
out
js
sbb
mov
xor
dec
rclb
or
inc
inc
push
negl
ret
psubq
test
lret
ret
mov
or
pusha
das
shr
dec
movsl
and
pop
pop
lret
inc
adc
shl
mov
into
test
jns
pop
hlt
push
cmp
jge
mov
in
mov
dec
push
and
mov
and
inc
sbb
cmp
sub
in
and
pushf
imull
shr
push
pop
inc
mov
ret
shrb
jo
add
cli
and
shl
sbb
dec
jo
pop
clc
or
fnsave
jl
js
jnp
clc
jnp
into
pop
add
ror
cmpb
adc
pop
mov
mov
or
addb
xor
divb
add
rcll
mov
jb
sub
movsb
addb
mov
adc
pop
nop
cs
or
dec
pop
inc
push
shlb
gs
xchg
icebp
outsl
test
loope
andl
loopne
rcl
push
pop
ja
ja
leave
fs
or
pop
dec
lock
pop
push
mov
inc
adcb
pop
test
repnz
les
mov
and
cmp
jecxz
or
and
or
push
push
lcall
xor
mov
push
je
xchg
cli
sti
sub
adc
lea
lea
push
aad
or
adc
push
fdivrs
xchg
jl
pop
popa
mov
push
jle
jmp
fs
sub
in
aaa
das
ljmp
mov
pop
xor
jle
enter
cmp
push
aam
adc
adc
sbb
clc
sarl
mov
addr16
and
pushl
add
jno
push
pop
xor
ljmp
jp
xor
dec
sub
ljmp
push
inc
cmp
cmp
adc
push
push
mov
push
inc
insb
enter
adc
mov
or
inc
in
out
jecxz
jl
movsl
inc
mov
and
leave
jnp
shlb
jo
push
sbb
jne
iret
dec
je
test
sbb
shlb
sub
push
ret
adc
add
sub
sub
cmp
loop
add
add
popl
inc
push
adc
les
fcmovbe
scas
je
mov
bswap
andl
shrb
and
pop
pop
mov
pop
mov
mov
test
mov
ds
or
mov
in
push
cmp
mov
mov
outsb
test
and
mov
jmp
pop
loope
fs
lcall
sub
mov
add
clc
roll
and
cld
inc
shlb
das
xor
aas
xchg
adc
add
cmp
add
pop
sbb
addl
sahf
into
lods
push
ret
cmp
sahf
rolb
jge
pop
rclb
loopne
and
dec
adc
push
lea
dec
popa
inc
inc
add
inc
push
test
sarl
adc
fnstcw
push
clc
iret
addb
cmpsb
push
call
mov
xor
loope
fsubr
xor
mov
nop
inc
jmp
push
cli
popf
pushl
icebp
mov
jl
mov
fs
sub
xor
dec
or
add
xor
push
sub
xchg
or
jp
test
jmp
mov
push
push
nop
xor
adc
fcomps
movsb
mov
dec
shll
dec
and
jmp
xor
orl
push
or
add
pop
xor
xchg
inc
jmp
push
mov
cs
add
ja
out
movsl
mov
or
xor
cmpsb
mov
sub
xchg
push
cmp
pop
push
sub
clc
add
inc
fcoml
or
stos
jl
into
incb
rorb
adc
jmp
sbb
push
jo
jb
test
stos
popf
add
inc
push
dec
sahf
scas
dec
and
push
mov
mov
push
xor
fs
xor
pusha
clc
push
xchg
mov
or
bound
xchg
add
call
icebp
cmp
out
sarl
lock
jo
sub
jo
adc
sbb
mov
sub
add
mov
pop
jge
push
push
shrb
es
jbe
jnp
mov
fbstp
nop
add
jne
jb
lahf
jne
dec
jae
imul
sbb
or
cmp
and
sub
call
xchg
imul
bound
lahf
push
mov
cmp
add
lods
cwtl
int3
add
pop
dec
push
and
popf
push
xor
stc
sub
cmp
mov
lods
mov
cmpsb
mov
jmp
iret
inc
stos
mov
out
shl
pushl
mov
jge
inc
xor
inc
nop
mov
mov
cmp
div
das
and
add
testl
or
inc
jmp
push
or
mov
iret
cmovl
cmp
and
fwait
mov
test
lea
cmp
or
es
jecxz
push
push
data16
jmp
cmp
pop
xor
icebp
sub
dec
mov
dec
pop
add
add
sub
dec
or
add
popa
aad
push
or
es
rolb
dec
adc
outsl
lcall
xlat
test
cmp
fiadds
mov
inc
roll
jmp
mov
cmc
dec
call
xor
call
jne
loopne
adc
dec
cmp
add
fsubrp
lods
sarl
add
mov
ret
pop
mov
sbbl
roll
mov
jb
hlt
jge
mov
fdivrs
lea
enter
movsb
mov
mov
pop
add
xchg
inc
or
out
mov
and
and
or
mov
sbb
ljmp
adc
mov
mov
push
or
mov
mov
mov
std
xchg
or
and
pop
inc
testl
adc
xchg
push
sti
mov
push
lcall
and
adc
cmp
cld
and
sahf
cltd
adc
dec
xchg
pop
dec
mov
nop
ljmp
aam
test
sti
outsb
pop
fcoms
mov
les
movsb
lea
push
pusha
add
sub
or
bnd
pop
cld
xchg
fcoms
loope
ja
xchg
lock
incw
cmpl
insl
mov
negb
fstps
sti
jg
add
push
cmp
jle
rcrl
or
sub
aam
shll
shr
mov
add
or
shr
sub
or
push
clc
xchg
jne
sbbl
into
or
adc
ret
jns
mov
add
into
test
lods
das
xor
cmpsb
push
shrl
shl
shr
or
js
pop
sti
mov
sahf
dec
mov
jne
push
mov
mov
mov
push
test
lret
sub
jne
or
add
rcr
mov
cmc
fiaddl
mov
inc
and
ljmp
stos
lds
jmp
or
lods
mov
or
outsb
and
nop
jne
inc
pop
mov
mov
loope
xor
sub
jl
dec
int3
int3
jmp
popl
add
or
daa
mov
test
push
xor
insl
popa
lods
in
shlb
negl
add
push
mov
push
mov
icebp
push
les
mov
ficompl
push
lret
das
push
mov
pop
test
sbb
loopne
sbb
movups
ret
and
jo
mov
inc
mov
inc
in
xchg
add
sub
das
repz
jnp
loope
add
js
imul
jecxz
test
sub
push
xorl
rcll
pop
pop
or
testb
outsl
and
subb
add
addr16
movsl
movsb
mov
sub
jg
subb
dec
push
mov
out
cs
shll
rcrb
or
and
and
ret
cld
pop
in
sahf
ret
test
movsb
pop
mov
jne
out
jmp
out
fmuls
adc
adc
mov
push
addb
xchg
push
pushf
in
ret
add
push
repz
out
or
pop
push
addl
out
aam
xchg
fldl
imulb
es
lods
and
sub
cmp
mov
xchg
flds
jg
lea
adc
cs
fwait
mov
pushl
dec
adc
clc
shll
pxor
bound
adc
jne
and
pop
sub
loop
pusha
pop
je
jmp
push
add
inc
adc
and
cmp
inc
test
lea
aaa
mov
jo
testb
mov
lcall
push
xor
push
ret
xchg
add
sub
xchg
loopne
pop
dec
inc
mov
inc
inc
cli
pop
pop
ret
pop
pusha
lea
inc
sub
mov
push
mov
bound
add
cli
shr
add
and
dec
andl
rolb
mov
inc
insb
and
lods
cli
xor
pusha
mov
imul
add
xlat
jmp
outsl
cld
push
mov
sahf
cmp
push
adc
cmpsl
popa
jl
int
cli
ljmp
andb
shrl
leave
push
bound
pusha
cli
shl
mov
sbb
adc
push
sub
mov
pop
or
leave
xchg
mov
dec
pushf
mov
shrl
loope
sbb
nop
mov
jg
or
xchg
push
loopne
sbb
pushf
mov
jmp
test
pop
mov
ret
mov
mov
mov
sar
movsb
in
cmp
xor
jnp
push
test
jmp
xchg
mov
lea
dec
das
inc
add
leave
sar
add
dec
insl
cmpsb
mov
cvtps2pi
je
or
dec
adc
insb
xor
sbb
xchg
dec
cmp
xchg
push
aam
inc
rsm
repz
mov
mov
and
dec
pop
and
ret
cltd
insb
xor
dec
jb
je
stos
shr
push
inc
pushl
mov
js
cmc
imul
icebp
sub
push
push
mov
or
dec
xor
push
sub
xchg
ds
and
sbb
mov
add
mov
sahf
adc
or
fs
adc
adc
test
fbstp
adc
push
hlt
mov
andl
add
dec
data16
adc
out
in
nop
loope
lret
add
cld
cmp
fsubs
movsl
test
out
insb
pop
push
inc
scas
push
les
js,pt
inc
call
jmp
bound
inc
outsb
mov
push
dec
hlt
cmp
sbbb
dec
dec
cmp
pusha
enter
inc
mov
lea
sahf
mov
je
dec
or
jns
pop
add
fcmovbe
test
in
ja
mov
cwtl
mulb
loopne
mov
add
pusha
in
fiaddl
test
mov
jmp
cmpsl
jne
add
mov
sbb
enter
and
jne
xor
psrld
cmp
imul
repz
lahf
ficomps
push
sbb
jae
lar
sub
loopne
dec
je
ret
cltd
fs
pop
sbb
adc
adc
rcr
adc
jb
sarl
push
mov
inc
mov
sbb
dec
mov
dec
and
adc
mov
inc
iret
movl
push
test
cld
adc
insl
fwait
xlat
fs
xor
jae
mov
cmp
mov
cmp
jne
shufps
aad
les
adc
aad
mov
sub
xchg
and
inc
fisttpll
jne
mov
daa
ret
sub
add
insb
jmp
add
xor
sub
shll
jae
in
pop
jns
mov
adc
adc
into
jg
sbb
mov
loopne
sub
adc
test
sub
test
insb
and
pop
jb
push
imul
stos
fisubs
mov
movsl
sub
mov
mov
test
out
xchg
stc
cmp
nop
mov
mov
test
popf
test
shl
lods
lahf
mov
lock
xor
lods
popa
je
inc
xchg
push
es
in
sbb
mov
push
sbb
stos
mov
push
fsubrl
test
mov
push
jo
lret
jmp
inc
or
pop
mov
rcll
das
movl
mov
push
jae
adc
movsb
lods
cmp
push
bound
ja
lcall
mov
adc
sub
jne
lods
mov
adc
pop
or
sub
xchg
cwtl
inc
inc
imul
cmp
aas
and
adc
or
or
dec
les
jmp
inc
and
add
push
cmp
loope
data16
pop
test
gs
add
inc
cmp
and
add
cmp
addb
dec
or
lea
jmp
sbb
cwtl
test
adc
xor
mov
and
out
or
sub
mov
fisubrs
or
shlb
dec
js
add
adc
pop
xchg
dec
add
inc
lcall
mov
mov
jge
mov
pop
pushf
push
xchg
jp
xor
loop
add
inc
pop
mov
inc
and
jg
add
or
jns
or
dec
lcall
push
orb
jne
and
outsb
adc
pop
jmp
xor
lock
inc
add
cmp
dec
in
lock
mov
inc
mov
jmp
test
push
sub
push
cmp
pop
jl
stos
arpl
addr16
jmp
addl
js
pop
sbb
jmp
js
add
aaa
popa
add
cmp
pushl
sti
std
mov
jb
nop
pop
mov
enter
lea
and
sub
push
dec
and
adc
das
popa
and
cli
adc
push
or
pusha
dec
lods
push
jecxz
ret
lds
push
popa
and
push
dec
cli
push
dec
xchg
push
sbb
inc
jmp
xor
xor
jge
mov
adc
add
add
mov
push
stos
pop
mov
push
movsb
push
movsl
pop
jle
cmp
adc
gs
cmp
pop
and
fadds
data16
adc
add
call
cmp
mov
test
cltd
clc
inc
xorb
mov
mov
andb
mov
dec
les
icebp
mov
cmc
dec
adc
adcl
cmp
jl
sbb
cmp
push
out
jl
xchg
call
js
test
xchg
inc
cmpsl
sarb
pop
xchg
lea
or
push
hlt
push
dec
xor
push
jne
push
aas
out
out
mov
xor
pop
add
push
aas
sbb
push
push
rclb
xor
ficompl
inc
inc
mov
push
inc
bound
adc
insl
push
adc
shlb
test
sub
sbb
cvtdq2ps
sub
push
pcmpeqw
sbb
add
imul
jno
sub
sbb
add
mov
add
mov
adc
fdivs
pop
jns
paddusw
faddl
arpl
shrb
mov
cmp
jp
mov
push
and
imul
xor
xchg
adc
mov
stos
jb
imul
dec
or
pop
xor
int3
cmp
pushl
mov
faddp
aaa
aam
or
fdivrs
or
daa
rcrb
sub
int3
push
out
mov
popf
or
jne
push
clc
push
loopne
push
es
ljmp
inc
mov
enter
imul
lcall
fidivrl
jb
pcmpeqb
adc
dec
je
jnp
jle
jae
mov
jmp
mov
jb
jl
mov
rcll
aaa
adc
loopne
fnstsw
test
pop
lods
push
in
add
outsl
xchg
sahf
cld
sbb
mov
adc
test
dec
pusha
cmpsb
jge
insl
mov
sbb
mov
mov
divl
sbb
fcomps
mov
mov
jle
mov
fstl
bound
sub
ljmp
xor
cmp
cwtl
cmp
push
adc
push
add
sub
adc
push
adc
fs
pop
shl
orl
test
inc
and
sbb
cmpl
andb
cmpsl
dec
sbb
push
pop
and
ret
adc
es
dec
bound
dec
data16
or
cmp
sbb
cmp
add
stc
jb
push
flds
inc
or
inc
mov
subb
ljmp
cmpsb
push
loopne
ret
push
ja
or
clc
pushf
add
sbb
xor
ljmp
sub
push
xor
or
inc
and
rolb
outsb
sbb
xrelease
or
faddp
rep
or
cmc
je
arpl
push
cs
ror
lock
add
mov
inc
adc
nop
adc
jg
push
clc
inc
or
adc
jns
js
pop
cmp
add
dec
sbb
cli
fldl
xchg
push
push
pop
cmp
cmp
insb
xchg
push
sub
mov
fistpll
push
das
or
lcall
pop
xor
or
xor
sarb
push
adc
mov
sbb
push
dec
jp
mov
cld
add
mov
lods
mov
fdivrs
orl
and
sbb
cmp
mov
in
fimull
cwtl
xor
mov
cmp
lahf
daa
testl
cmp
or
fistpl
sub
add
fnsave
mov
loopne
add
jne
pop
push
sar
out
ror
or
xor
add
stos
mov
fldl
jle
pushf
jle
add
adc
je
stos
aam
int3
icebp
or
push
xor
jno
arpl
sbb
jns
and
sbb
fistpll
cld
dec
jg
cmp
call
jno
call
sbb
imul
sbb
pop
pcmpgtb
aaa
push
in
mov
and
adc
sbb
fld
adcl
xor
mov
and
jne
movsl
out
or
or
or
push
xor
arpl
rcrl
or
adc
mov
sbb
jb
jb
sub
xor
jo
jb
cmp
jbe
sbb
inc
inc
cmovs
in
in
push
push
pop
cmp
cmp
push
insb
jo
js
inc
or
jl
sbb
and
mov
test
xor
xor
pushf
mov
jns
mov
xchg
enter
xchg
dec
sarb
cltd
fs
in
cltd
fs
call
fs
dec
hlt
clc
cld
cmp
and
add
add
add
or
adc
sbb
xchg
dec
es
and
sub
es
xor
dec
cmpsb
pusha
xchg
cmp
gs
xchg
dec
cmp
push
dec
xor
and
pop
pusha
sbb
pop
pushl
add
faddl
add
add
je
movsb
cltd
or
mov
mov
xor
xchg
mov
shr
xchg
nop
and
jl
and
adc
sbb
sbb
and
xchg
push
xor
int
test
cli
lods
int
xor
inc
mov
mov
dec
xor
dec
mov
sarb
cmp
mov
pop
notl
mov
sub
rorl
push
ret
fildll
dec
xor
and
call
mov
inc
inc
movsb
dec
mov
cmp
or
jecxz
xchg
fsubl
add
cmovns
mov
xchg
push
add
in
xchg
je
push
test
and
sahf
popa
xchg
xchg
add
or
adcl
dec
and
dec
shlb
test
shll
dec
xor
adc
or
cmp
jmp
loopne
es
lret
and
movb
pop
lock
or
adc
test
inc
sbb
xor
or
or
or
sub
xchg
mov
clc
incb
jne
notb
sbb
lock
and
fisttps
je
add
jl
and
jecxz
mov
fucomi
sbb
add
or
popa
shl
or
test
jp
or
aaa
push
sbb
es
neg
negl
flds
and
pop
adc
pusha
mov
pusha
loope
pop
sub
xor
jmp
inc
jecxz
dec
in
adc
fnstsw
pusha
push
mull
pusha
fldl
cmp
sub
mov
inc
testb
repnz
pop
xor
sti
add
fists
test
fisttps
or
scas
ret
mov
sub
or
sub
push
scas
jmp
push
and
and
xor
dec
testl
mov
mov
pop
mov
mov
sbb
jmp
push
and
or
loope
adc
flds
fstps
jmp
and
fildl
test
push
ds
jae
in
inc
sub
ret
hlt
adc
orb
mov
adc
test
sbb
cmp
sti
adc
xor
andb
test
cmp
jno
ret
push
or
push
dec
aas
and
aaa
sbb
out
sbb
cwtl
jo
into
das
pop
stos
sub
addb
dec
jmp
sub
sub
jmp
sub
push
push
or
xchg
xorb
fldcw
add
add
adc
xor
scas
mov
add
or
mov
or
adc
jnp
pusha
bound
aaa
cld
add
fstpl
mov
call
cmp
les
lods
pop
repz
mov
inc
jle
inc
rcll
cli
repnz
mov
mov
add
dec
mov
icebp
xor
dec
cli
shrl
inc
mov
orl
insb
jo
inc
loopne
or
loop
pop
jmp
pop
push
push
enter
icebp
clc
or
add
cmp
loopne
cmpsb
and
adc
mov
add
int
push
pop
movsb
mov
mov
add
cwtl
xchg
add
outsl
and
pop
mov
je
or
adc
repnz
test
test
mov
push
rolb
arpl
insb
xchg
mov
pop
cmp
je
int3
sbb
outsb
or
pop
dec
shll
in
sbb
sbb
hlt
addl
cmp
pop
lods
pushf
sub
mov
pop
mov
and
stc
cmp
fstpl
add
in
fsubrp
fwait
jno
jnp
or
dec
inc
and
xchg
push
inc
push
stos
sbb
xchg
add
sub
xchg
xor
imul
jo
inc
sub
loope
cmp
iret
sbb
lock
ret
in
push
mov
sub
subl
add
pushl
or
xchg
subb
out
mov
jbe
push
das
adc
movsb
sbb
scas
icebp
inc
mov
imul
push
xchg
or
fnstsw
jl
test
mov
sub
pop
and
push
orl
jne
je
imul
xlat
cmpsl
addb
into
sbb
loope
and
cli
lea
add
mov
shufps
scas
stos
xchg
jbe
pop
lret
lock
pop
iret
les
mov
imul
decb
mov
insb
scas
fsubs
into
pop
sub
mov
in
andb
sbb
test
hlt
pusha
or
inc
sub
fld
fucomp
gs
add
out
fstpt
mov
test
cmpsl
push
dec
in
dec
pop
and
mov
sub
int
add
shll
push
or
shll
push
or
push
aad
cmpb
mov
push
push
mov
push
or
push
and
jo
es
sub
ret
dec
push
push
push
adc
pop
pop
push
sahf
xor
mov
jb
stc
mov
test
icebp
jge
movswl
sbb
loop
pop
and
mov
fldcw
or
mov
and
rorb
data16
testb
or
insl
or
push
mov
clc
movsl
fs
js
fldt
lock
fsubs
add
mov
inc
adc
rorl
enter
nop
call
mov
fldpi
xor
jno
pusha
mov
cmp
pushf
je
lret
dec
sbb
xorb
mov
xsaveopt
xchg
sub
mov
mov
or
andl
in
xchg
jb
out
jmp
and
jns
and
jl
loop
mov
add
pop
jnp
jo
test
jg
mov
cmp
loop
or
jne
jl
push
shlb
je
or
sbb
arpl
dec
mov
push
ja
dec
pop
mov
outsl
inc
test
and
add
ja
sarl
or
repz
xor
movsl
ret
adc
pop
ret
jo
jne
adc
push
movlps
mov
jne
je
mov
test
push
mov
repz
push
sti
jbe
rol
mov
lods
std
js
sub
xchg
or
or
stos
mov
add
loope
push
or
mov
add
loope
rcr
push
scas
mov
adc
inc
mov
xor
xlat
pop
es
or
push
test
mov
insl
dec
push
or
dec
add
nop
sub
jmp
aas
sub
clc
arpl
sub
loop
mov
pop
test
ja
push
jbe
jl
xchg
add
xchg
mov
arpl
lock
stos
jp
pop
pop
rcl
and
pop
xor
cmp
hlt
dec
out
mov
add
popa
pop
pop
mov
scas
adc
pushl
or
inc
lea
pop
mov
lret
scas
rolb
xor
loop
rcrb
push
inc
jmp
cmpl
mov
pop
repz
xchg
pop
pop
and
ss
out
mov
out
mov
inc
adc
iret
sbb
out
mov
mov
adc
or
or
cmp
xlat
add
sbb
dec
cmp
test
cmc
inc
push
int3
cwtl
aam
pop
insb
and
mov
adc
or
stos
jns
fsubrl
push
xchg
sarb
push
and
push
or
mov
mov
std
push
cmc
and
enter
cwtl
je
inc
mov
add
out
idivl
das
jp
mov
inc
add
aam
or
rclb
xor
cmp
add
pusha
mov
movsl
das
decb
mov
pop
push
loopne
mov
shl
add
jg
sub
sub
test
loopne
pop
popf
pop
mov
and
aam
rcll
out
push
or
or
fisubs
mov
es
jl
mov
shl
pop
pop
sub
loope
push
inc
sbb
mov
add
lahf
or
jns
mov
pop
dec
lea
push
xor
push
xchg
rcr
inc
lods
mov
out
test
mov
mov
dec
rol
sbbl
or
inc
rcrl
dec
xor
mov
add
mov
lods
fmuls
vpor
pop
push
push
jb
popl
push
incb
aam
mov
push
icebp
iret
dec
jns
cmp
and
shl
hlt
push
aas
mov
sub
lea
sub
mov
dec
lds
movsb
addr16
das
sbb
ljmp
mov
arpl
ds
xor
shll
or
popa
mov
cmp
jne
push
add
gs
into
add
xchg
inc
out
aaa
rcll
stos
iret
and
mov
and
cmp
mov
in
xchg
jge
pop
and
jecxz
add
shl
test
out
loop
loope
iret
or
fidivl
or
push
sbb
pop
cwtl
cmp
push
adc
cmpsb
push
clc
pop
push
push
lret
jne
and
dec
shll
or
push
cmpsb
mov
cmp
repnz
inc
inc
or
inc
inc
subb
inc
xchg
mov
jmp
or
andb
sbb
orb
push
fnstcw
inc
adc
imul
jne
je
mov
xchg
sbbb
xor
jne
cmp
add
xchg
js
add
push
cmc
cs
push
or
inc
mov
mov
rorl
mov
fistpl
repz
add
nop
jo
push
mov
fs
xchg
xchg
xchg
jg
pop
sti
adc
inc
cs
or
ss
xor
mov
stc
gs
or
out
mov
dec
cmpb
je
mov
add
sbb
sbb
add
or
mov
mov
roll
xchg
ss
jo
xchg
arpl
test
outsb
insl
inc
mov
into
in
xchg
push
mov
jmp
xor
mov
jno
xor
mov
aam
add
adc
add
jge
add
adc
gs
out
addr16
xor
mov
adc
in
fnstenv
xlat
movsb
lds
inc
mov
fdivs
or
add
or
jmp
inc
mov
pop
and
je
dec
rorb
loope
sbb
sub
test
add
mov
popf
mov
mov
repz
add
lea
scas
jle
pop
sub
inc
pushf
cld
mov
icebp
add
sbb
add
add
lods
rorb
cmp
fiadds
nop
push
pop
pop
jl
or
movsl
ss
ljmp
push
aam
add
pusha
inc
fidivs
mov
dec
jns
neg
movb
rorb
jl
cltd
push
test
pop
sub
imul
or
add
fisubs
ror
jne
push
shlb
gs
or
or
out
jo
sbbl
push
inc
ret
int3
cmp
pop
xor
add
lcall
and
adc
cmp
add
sbb
push
rolb
jmp
jmp
add
inc
sbb
xchg
jge
xchg
out
push
mov
sub
adc
adc
cwtl
push
push
adc
rcr
adc
xor
and
jne
jno
xlat
stos
sbb
sbb
or
aam
push
fcmovu
pop
repz
push
jmp
mov
jno
lds
or
and
push
fadd
xor
inc
push
insl
add
push
cmp
pop
jl
into
jge
aas
test
and
call
inc
add
xor
or
mov
add
add
jne
cli
and
mov
les
push
lret
je
xor
adc
xor
push
imul
mov
inc
lea
fcoml
pop
fmull
or
das
jecxz
add
int
inc
test
or
xor
repnz
test
enter
js
cmp
mov
push
lahf
pushf
pop
mov
js
sub
leave
xorb
shll
inc
push
xchg
and
cmp
enter
pop
adc
inc
popf
neg
sbb
mov
dec
testb
call
ret
inc
or
jne
cmp
add
bound
xor
xor
dec
xor
mov
add
adc
inc
xor
xor
mov
pmaxub
xor
or
mov
ja
or
xchg
hlt
nop
or
test
dec
rcl
add
mov
push
clc
lods
mov
xor
rol
fsubs
cld
in
dec
stos
sbb
xor
cmp
sub
cld
add
lods
clc
dec
or
shrd
sbb
jge
xchg
sbb
cmp
jge
inc
xlat
inc
sti
sbb
clc
cwtl
xor
xchg
faddl
pop
jg
clc
inc
and
xor
out
xchg
inc
add
cltd
cld
sub
jo
lea
jl
inc
mov
fs
call
dec
xor
add
sbb
or
ficompl
bound
or
jo
ljmp
and
sub
sbb
js
jg
jb
mov
sbb
or
mov
neg
mov
cmp
sarl
cld
lods
or
insb
mov
xor
xchg
sbb
xor
sarl
push
jg
mov
or
mov
cmp
scas
mov
or
or
mov
xchg
jp
add
xor
rcll
mov
es
xchg
and
in
xchg
fldcw
jecxz
add
push
loopne
test
adc
cmp
xchg
adc
dec
ljmp
movw
mov
ja
imul
xlat
roll
ss
jmp
pop
or
adcl
sahf
fwait
adc
jnp
xchg
js
jbe
xchg
inc
or
push
add
pop
or
lds
outsl
lea
flds
pop
xor
mov
inc
inc
add
insb
mov
das
push
repnz
sbb
js
je
aad
fld
inc
cmp
into
rolb
shrl
push
sbb
clc
cmp
mov
cmc
or
sbbb
xor
adc
jne
push
cmp
imul
inc
and
xchg
mov
popa
push
dec
sub
cmp
leave
xor
enter
imul
push
push
push
push
mov
pop
subb
js
jl
loopne
adc
push
or
xorl
push
add
popf
jmp
add
add
mov
ds
or
movsb
fstps
in
gs
or
pop
data16
pop
loopne
loopne
lods
adc
aaa
inc
popa
je
inc
je
dec
add
add
adc
xor
push
sub
sub
pop
sub
int
mov
sbb
push
mov
clc
sub
jae
adc
and
push
pop
sar
or
mov
sub
and
xor
inc
rolb
push
pop
cmp
cmpsl
shll
mov
inc
test
dec
or
cmc
mov
or
ss
movsb
pop
pusha
sbb
cmpb
jne
mov
cmp
psrld
pop
push
xchg
sarl
push
xor
hlt
mov
sbb
xchg
adc
inc
push
test
cmp
cmp
mull
cmp
je
cmp
negl
rcrb
inc
cmp
push
and
xchg
pop
loopne
sti
adc
add
push
push
jecxz
jmp
add
inc
mov
mov
mov
push
les
sarl
and
jg
mov
cld
push
rcrl
and
sub
data16
leave
mov
jl
cs
ret
push
push
push
push
dec
adc
pop
xchg
cli
mov
movl
cltd
pop
sub
fidivrs
fcmovne
and
jbe
test
mov
mov
movsl
xchg
jp
or
mov
pop
lock
ljmp
mov
aam
popa
insl
fwait
adc
mov
cmpl
mov
push
or
push
mov
mov
push
mov
or
mov
dec
sub
imul
pop
adc
js
loop
out
dec
lea
insb
sub
xor
jae
nop
outsb
xchg
pop
ret
add
nop
jb
subl
inc
in
pop
jne
sub
je
dec
je
dec
push
push
jmp
or
jmp
sbb
cltd
add
xor
orl
pop
adc
jmp
mov
sbb
shlb
pop
ret
xchg
adc
enter
sub
data16
int3
or
push
inc
aad
xchg
add
sbb
and
arpl
sbb
mov
xor
pop
push
sbb
and
adc
pop
adc
lcall
fidivl
dec
cmp
test
pusha
int3
or
cmpsb
mov
add
jns
in
mov
mov
add
add
sbb
movsl
adc
gs
into
sub
xor
andl
inc
lret
sub
jno
sbb
cmpl
xor
cmp
xor
mov
mov
lcall
add
add
testl
mov
std
pop
sub
mov
or
or
popf
or
dec
inc
adc
dec
or
shr
add
or
out
jg
scas
add
shr
or
mov
push
push
test
test
and
add
insl
xor
lock
xchg
cs
mov
add
movsl
pop
pop
or
jbe
jle
ja
add
jl
in
sbb
cmp
xchg
adc
or
dec
pop
jp
test
int3
addl
or
mov
and
inc
adc
test
bound
xor
lret
push
lret
clc
push
dec
lret
pusha
xorb
push
inc
jmp
push
pushf
stc
rolb
dec
pop
inc
movsl
out
mov
xor
nop
mov
inc
sub
and
cmpsb
and
ror
aam
xchg
dec
dec
es
mov
or
ficoms
nop
push
sbb
fdivs
adc
push
add
mov
in
xlat
shlb
test
dec
push
cmp
pusha
roll
xchg
mov
pop
inc
mov
shll
pop
inc
imul
sub
imul
fs
nop
test
dec
rolb
and
aas
add
sbb
mov
loop
fs
dec
rcrl
push
sbb
sbb
loope
mov
loop
lret
in
lea
repnz
nop
xor
ret
push
push
popa
lret
addl
inc
add
lret
push
sub
mov
test
dec
jo
popa
loope
or
int
push
xor
enter
sub
sbb
jne
add
lock
insl
cwtl
or
inc
and
adc
jo
or
push
andl
dec
push
dec
sbb
xchg
pusha
enter
hlt
add
add
xchg
lods
hlt
add
in
sarb
mov
xor
int3
pop
aad
arpl
dec
clc
or
push
outsl
inc
add
sub
sbb
cmp
clc
and
xor
stos
sbb
mov
test
clc
sbb
adc
rorb
xchg
repnz
mov
js
add
aam
sbb
add
pop
je
add
bound
ret
add
sbb
add
fdivrs
mov
mov
mov
filds
call
shl
add
xor
pop
call
and
jmp
mov
sbb
add
call
movsb
pop
ljmp
mov
cmp
nop
sub
add
loope
pop
mov
jmp
inc
cmp
jne
xor
jge
push
or
push
cmp
jle
and
data16
pop
sbb
or
shlb
pop
sbb
out
mov
leave
inc
xor
daa
push
push
inc
jmpw
leave
ss
adc
cmpb
jl
xor
insb
jmp
xor
inc
add
mov
fstl
pop
xchg
push
mov
push
int3
sahf
push
shr
xor
push
imul
ficoml
orb
rorb
jne
mov
adc
popa
outsl
ljmp
jmp
imul
dec
or
cmp
jne
mov
adc
out
jmp
dec
add
jo
jmp
mov
es
aas
ds
rorb
push
cltd
or
adc
adc
roll
leave
add
in
js
je
mov
iret
push
fs
adc
aad
pop
cltd
rcl
inc
les
sti
je
sub
enter
sbb
pop
mov
rolb
movsw
sti
lods
addb
or
pushf
push
inc
xor
inc
add
cmp
fstpl
call
and
or
pop
add
adc
mov
lds
rclb
or
adc
sub
inc
inc
fidivrs
fdiv
fiaddl
sbb
sbb
cltd
in
adc
sbb
and
int
xchg
sbb
xchg
adc
sbb
scas
mov
inc
and
fsts
xor
xchg
fcomi
sbb
stos
mov
sbb
and
add
dec
jns
ret
dec
fwait
dec
jne
pop
pop
pop
pop
insb
inc
int
int3
push
adc
push
rcl
ljmp
mov
call
hlt
xchg
xor
jmp
enter
push
test
je
pusha
cwtl
add
sub
add
rorl
sbb
les
addr16
insl
ffree
jnp
or
add
insl
fildll
jae
adc
adc
enter
inc
insb
enter
shrb
aad
and
into
jbe
push
lds
aas
cmpb
jp
hlt
adc
and
push
push
shlb
or
push
or
sub
testb
inc
push
outsb
and
sub
cmp
push
loopne
paddusb
add
jp
sbbl
mov
mov
xchg
add
out
loopne
xor
sub
cs
ljmp
cld
inc
ss
test
dec
xchg
or
hlt
ficoml
shlb
inc
jns
cmp
es
leave
jne
mov
add
pop
sbb
ljmp
pop
mov
jge
pop
enter
and
cmp
test
and
inc
test
xlat
jg
xchg
mov
inc
push
adc
icebp
pop
sbb
es
mov
je
adc
jg
dec
and
jb
cmp
ja
add
cmp
adc
cmp
jne
shll
leave
call
outsb
mov
sbb
mov
je
inc
mov
adc
iret
and
jb
lret
cs
rclb
mov
add
cmp
xchg
aam
sti
aas
scas
adc
push
pop
push
movb
jmp
or
test
dec
inc
sub
fstl
into
iret
cmp
push
adc
push
test
jp
mov
adc
push
push
pusha
movw
jb
add
pop
adc
pop
xchg
loop
ja
adc
pop
mov
dec
testb
ret
xor
mov
pop
push
add
lods
sti
mov
pop
mov
mov
or
xlat
jge
mov
push
and
fidivrl
xchg
or
push
cmpsb
adc
cld
into
push
add
push
add
cmp
mov
dec
lods
push
imul
call
sbb
jmp
inc
imul
lea
pop
loope
sar
lret
inc
scas
movswl
pop
neg
mov
insb
push
es
ljmp
cwtl
dec
adc
popf
and
js
cs
mov
cwtl
inc
sbbl
push
and
mov
push
data16
and
mov
jbe
push
and
test
jb
jl
xor
mov
mov
jle
repnz
xchg
pushf
mov
mov
in
mov
mov
mov
and
and
lea
inc
xor
fldcw
add
into
sahf
add
decb
xchg
add
jmp
stc
int3
sub
or
inc
call
in
ljmp
pop
aas
pop
or
cmp
sbb
inc
mov
jne
lea
rolb
lods
xor
mov
les
dec
or
clc
mov
xchg
or
push
or
xchg
add
lcall
xchg
mov
mov
cmp
imul
lods
shll
arpl
pusha
data16
xchg
fsubrs
xchg
mov
mov
mov
jmp
adc
repnz
and
mov
rol
lea
adcl
decl
popa
add
rolb
rol
nop
popf
loope
pop
or
and
rorb
lods
sti
sub
sbb
push
lret
rcrl
inc
mov
push
inc
mov
jle
int3
pop
pop
neg
shrl
loope
shr
or
mov
cltd
fcomps
dec
mov
cli
push
mov
lock
dec
and
sti
stc
repnz
jb
div
add
add
cmpsl
cli
div
fnstcw
sbb
push
mov
lcall
ret
call
add
pop
mov
cli
adc
and
sub
scas
mov
dec
jg
adc
mov
push
fidivl
aad
mov
fldenv
enter
jg
or
push
add
insb
dec
divb
dec
dec
rolb
lock
mov
dec
sbb
add
sub
inc
repnz
rcll
testl
sbb
loop
out
or
iret
mov
test
addps
jnp
adc
dec
in
aam
daa
adc
jne
push
or
rcrl
fldt
inc
shlb
fdivrs
aam
enter
int3
jbe
dec
sub
movsb
sub
sbb
rclb
add
rol
ljmp
dec
xor
fdivrl
add
push
lret
dec
in
and
fnstcw
adc
test
adc
mov
jns
loopne
sbb
add
inc
out
adc
adc
adc
jg
or
enter
adc
lock
mov
out
or
add
fs
inc
nop
mov
or
cmp
jne
jne
and
in
fsubs
jae
nop
sbb
lret
test
pusha
pusha
add
sbb
xor
pop
dec
sub
mov
pop
adc
sbb
movb
pop
clc
pushl
es
cmp
jle
push
sub
add
ss
sub
mov
and
or
pop
xchg
nop
movsb
adc
sbb
pop
cli
jb
mov
sahf
mov
push
cli
fcoms
xor
fiadds
cmp
imul
pop
mov
push
jmp
loopne
call
daa
mov
pusha
lea
push
and
stc
add
mov
mov
or
ficoms
out
add
je
fidivrl
add
cmp
cld
or
inc
into
or
test
dec
into
test
subb
clc
lock
jp
shl
add
enter
sahf
mov
mov
jae
add
sub
adc
adc
test
call
shl
xor
add
add
into
or
mov
inc
and
push
and
inc
inc
daa
or
jmp
dec
jg
fistl
ret
jmp
cmp
jge
sub
cmpb
sub
movb
dec
cmp
or
jle
add
dec
add
add
fadds
mov
hlt
ret
ficoms
xchg
in
jp
jne
dec
mov
pusha
add
out
jb
int
adc
cmp
in
mov
ret
and
add
lds
inc
mov
jo
ret
adc
add
xchg
cmpsb
rorb
add
add
add
popf
ret
test
mov
mov
stc
lret
mull
push
gs
or
push
push
mov
sarl
sub
or
push
rolb
pop
mov
dec
or
jne
or
xor
ficoms
pop
scas
je,pt
push
ret
cmp
ret
mov
lods
or
mov
or
fsubrs
xchg
xchg
xchg
adc
or
jae
pop
sbb
pop
mov
mov
inc
and
cmp
xor
into
push
inc
inc
sub
and
movlhps
sub
and
pop
pop
or
in
push
mov
ret
xor
push
prefetchw
inc
adc
subl
loopne
push
shlb
or
loopne
dec
jne
dec
movsl
test
add
add
xchg
rcrl
lret
testb
mov
push
je
lret
pop
or
or
push
pop
cmp
ja
insl
add
adc
xchg
neg
jne
and
mov
jo
ds
dec
jge
add
mov
out
and
push
or
inc
cmpsl
outsl
push
scas
popa
fcoms
xchg
nop
and
cmp
inc
es
test
sbb
push
mov
orl
inc
mov
sub
shlb
jecxz
pushf
mov
and
mov
add
movsb
jge
pop
repnz
test
adc
lcall
add
push
into
mov
mov
inc
and
sub
and
sbb
inc
in
in
jg
into
into
into
out
fnstsw
movl
push
lock
outsl
lock
nop
pop
sahf
pop
add
outsl
arpl
mov
or
sbb
adc
xchg
mov
xor
pop
xor
adc
lock
hlt
pushf
sbb
lahf
pop
xchg
out
addr16
cltd
adc
add
pop
pop
adc
movsb
and
adc
test
mov
pop
cmp
cltd
and
mov
js
pusha
inc
sub
jmp
mov
outsb
jb
cmp
push
adcl
xor
xchg
pop
mov
or
jge
adc
mov
stos
adc
xchg
lahf
mov
rorl
and
xor
jbe
or
clc
xchg
sbb
shr
scas
sub
mov
push
or
sub
push
sbb
inc
in
hlt
jne
or
jge
pop
add
add
je
cmpsl
sub
ret
jo,pn
add
mov
jle
dec
add
sbb
and
aas
sbb
push
fimuls
je
dec
sub
loope
fists
je
mov
call
inc
xchg
jb
hlt
mov
cmp
jb
cmp
jbe
addr16
mov
mov
push
xchg
sbb
xchg
loopne
les
les
lea
mov
loopne
or
loope
in
pusha
jmp
ret
cmp
aas
or
test
pop
push
test
cmp
adc
shl
mov
jb
adc
loopne
call
js
call
mov
mov
cmp
and
push
push
mov
cmp
xchg
jb
pusha
or
js
ror
inc
or
roll
test
pop
inc
popf
inc
popa
xorb
lds
rcll
add
and
dec
cmpsb
push
xor
lea
mov
ljmp
jne
push
test
fisubrl
sub
dec
inc
push
aaa
sbb
dec
mov
loopne
xlat
mov
ret
add
cmp
ret
pop
add
adc
fnstcw
add
popa
sar
xchg
pop
sbb
dec
popf
jmp
mov
aad
sahf
mov
xchg
and
inc
sub
jp
push
bound
stos
xchg
xchg
ret
jl
or
les
lds
out
or
push
loope
aaa
movsl
mov
pop
xchg
ret
mov
hlt
add
push
call
adc
push
ret
dec
mov
push
push
das
xchg
xchg
test
sbb
pushf
inc
push
push
dec
je
cmp
pop
xchg
inc
adc
push
mov
aam
mov
shll
mov
pusha
gs
sbb
mov
je
in
lret
insl
push
clc
cli
in
mov
lret
pop
jne
jg
xchg
arpl
paddusb
sub
inc
add
xchg
pop
enter
sub
addr16
sub
or
jbe
ljmp
sbb
gs
dec
mov
push
faddp
add
mov
jecxz
mov
loopne
jmp
dec
fs
and
mov
cwtl
ss
in
subl
push
js
outsl
ret
cmp
add
icebp
or
mov
out
dec
sbb
sbb
push
test
cli
mov
cmpsb
push
rcr
pushf
xor
push
cs
clc
xorl
and
sbb
dec
lock
cmp
sbb
jp
push
mov
je
jg
inc
adc
aam
les
loopne
and
stos
pop
cmp
jbe
cld
and
or
inc
pop
adc
xor
xchg
pop
or
or
dec
jmp
pop
fs
adc
and
xor
cmp
repnz
adc
and
aas
dec
xlat
cmp
loopne
jge
lea
add
in
pop
inc
popa
adc
rcr
sbb
push
pop
jbe
dec
loope
cmp
loop
sbb
mov
inc
mov
pop
xor
and
sbb
xor
add
inc
arpl
jmp
push
push
sub
cmp
dec
imul
jl
jl
push
mov
adc
and
outsb
ret
cwtl
sub
push
enter
and
inc
pop
fsubs
loope
in
jmp
sbbl
push
xor
fisubs
cltd
sub
push
loopne
add
es
push
push
add
vpsubb
push
push
sbb
lds
push
and
push
mov
clc
xchg
in
inc
cwtl
pop
sub
xchg
or
loope
movsl
sarl
inc
lock
mov
pop
imul
pop
dec
mov
jecxz
hlt
mov
add
data16
ret
mov
loopne
cltd
fldl
sahf
adc
push
mov
jo
dec
push
add
mov
mov
adc
movsb
icebp
push
add
push
push
push
sub
add
iret
iret
int3
jmp
rcl
dec
sbb
mov
push
lret
or
insl
cld
mov
loopne
dec
jmp
xchg
loopne
or
mov
sbb
cmp
dec
fildl
xchg
popa
rorb
fwait
ret
add
pop
cmp
fstpl
scas
cld
adc
inc
loop
dec
cwtl
mov
loopne
or
js
or
rclb
int
lods
dec
dec
or
into
inc
mov
dec
mov
xor
jns
adc
and
xchg
lahf
or
enter
adc
mov
sbb
add
mov
xchg
lock
rclb
cmp
push
sbb
in
add
popf
gs
and
dec
and
outsb
insl
clc
pop
sbb
sub
add
or
out
dec
stos
shlb
adcb
add
ja
adc
xlat
in
push
aam
add
cmp
add
fwait
mov
add
inc
test
movsl
xor
xor
dec
or
mov
std
xor
movl
pop
jo
jmp
push
mov
sbb
adc
adc
imul
xor
and
cmp
mov
daa
loope
int3
add
add
adc
pop
fidivrl
ja
les
rorl
sub
xchg
adc
cltd
cmpsl
nop
pop
imul
add
xchg
jge
cmp
mov
aas
or
movsl
jge
adc
mov
lcall
pop
or
xor
xorl
or
jo
roll
xlat
cwtl
pop
push
jle
jecxz
sbb
jno
inc
cmpsb
mov
out
jp
repnz
mov
dec
test
jg
adc
adc
lock
shr
lcall
xchg
icebp
xchg
rcl
mov
xchg
icebp
cmp
push
pop
addb
shlb
mov
call
pop
cmp
lock
fadds
in
sarl
dec
mov
aaa
ds
add
xor
pop
cmp
push
fldt
or
add
and
pop
add
dec
jb
lea
mov
sahf
orb
adc
push
push
movb
sub
testb
testb
repnz
fcmovnu
imul
sub
mov
inc
pop
sub
fcoml
inc
loopne
pop
cmp
cmp
sti
jns
mov
repz
pop
and
nop
xor
decl
cmpsl
aas
xchg
jg
mov
jg
jae
xor
imul
cmp
bound
mov
adc
sub
shrl
jp
cmp
adc
daa
add
hlt
jge
out
int
shr
sbb
xorl
test
jmp
testl
xchg
rcrl
mov
inc
mov
dec
xchg
cmp
lods
test
and
pop
inc
sbb
inc
lea
fimull
adc
jo
push
inc
xchg
or
and
push
push
sbb
test
or
xchg
rcrb
mov
mov
insb
sbb
leave
int
xor
xchg
sbb
fadd
xor
pop
sbb
mov
test
push
add
ret
lret
inc
ljmp
add
push
loop
es
push
push
shr
sbb
pushf
sbb
sbb
xor
adc
popf
popa
call
cltd
xor
push
add
fisttpl
mov
insb
outsl
inc
cli
pop
jg
push
add
fs
stos
push
pop
jl
testb
mov
pop
mov
adc
pop
add
or
adcb
enter
add
fyl2x
add
test
fiaddl
or
rcrb
sahf
stos
test
fs
jmp
scas
pop
xchg
mov
mov
rep
cmp
fdivs
jno
gs
das
inc
outsb
mov
push
test
nop
adc
inc
inc
data16
outsl
andb
sbb
and
ror
jle
dec
jle
sbb
cmp
jae
icebp
pop
jne
inc
mov
lret
cmp
jg
ja
loopne
push
dec
rcl
add
sbb
lock
pushf
les
push
adc
and
add
pop
xchg
lsl
mov
jmp
and
mov
outsb
fcomps
pop
mov
push
mov
adc
push
in
stc
inc
cmpl
iret
or
ror
push
pop
cmp
adc
mov
push
ja
lods
pop
fisttpl
or
pusha
cwtl
inc
icebp
mov
inc
aaa
in
dec
sbb
mov
xor
mov
adc
or
movsl
xor
and
mov
sub
mov
add
inc
or
dec
sbb
shlb
idivl
ja
dec
xor
repnz
loope
add
adc
mov
inc
inc
js
subb
dec
pop
mov
pop
je
mov
sbb
mov
insl
add
xchg
addb
mov
inc
mov
pushf
cmp
or
neg
arpl
popa
xchg
je
mov
rcrl
mov
jmp
outsl
sub
xor
sbb
lods
pop
xchg
mov
daa
inc
jp
xchg
imul
rol
add
sbb
xchg
ret
sti
adc
repnz
sar
out
fadds
or
adc
in
jno
or
leave
inc
iret
mov
je
dec
jne
push
and
loopne
add
fcoms
jmp
mov
cmp
add
cmp
fldl
inc
dec
fsubl
xchg
jmp
add
xor
cli
mov
push
icebp
dec
add
enter
loop
add
mov
arpl
mov
add
mov
in
ja
hlt
mov
mov
addr16
addb
inc
push
pop
add
xor
test
or
shll
and
inc
lahf
or
movsl
ret
in
xchg
lods
xorb
or
pop
jbe
inc
cmp
hlt
push
cli
push
jb
aas
js
loop
push
or
sbb
je
add
inc
scas
lods
xor
mov
add
add
xchg
push
nop
dec
cmp
push
cmpb
sub
add
and
callw
jnp
xor
cwtl
fcmovb
stos
mov
lret
arpl
insl
loope
pop
pop
sbb
loopne
mov
cmp
lret
jle
fwait
push
push
insb
jl
enter
sbb
cmp
ret
sarl
sub
out
nop
shlb
das
or
insl
gs
dec
adc
sbb
adc
xlat
add
ror
test
xchg
test
add
mov
pusha
push
sbb
push
mov
std
hlt
jne
faddl
notl
and
or
rorl
imul
mov
call
outsl
mov
pop
lock
jle
insl
test
add
mov
insb
ret
adc
jecxz
sbb
adc
sub
adc
or
ret
push
mov
push
and
popf
jg
dec
inc
in
add
das
push
cmp
or
and
pusha
pushf
xor
xor
push
push
xlat
das
inc
andl
dec
jnp
mov
sahf
xchg
es
cld
cltd
jle
out
je
shrl
lea
add
in
jl
mov
jbe
add
fmull
add
nop
ret
add
or
jg
adc
orl
jg
jmp
adc
push
xor
push
ss
and
and
add
dec
cmp
aam
push
jge
jb
insb
ret
bound
cmpsl
push
cmp
scas
gs
or
jg
lds
adc
jg
jae
scas
shll
sub
push
popa
and
jns
inc
bound
xchg
pop
scas
and
dec
js
mov
test
mov
stos
add
test
jbe
inc
lret
sbb
stos
push
stc
pop
sti
dec
mov
and
test
jne
xor
xchg
fiaddl
aas
jo,pn
pusha
mov
mov
adc
xlat
je
cmp
adc
cmp
jb
testb
mov
testb
dec
xor
adc
jne
or
ret
jge
push
rcr
add
push
sbbl
je
cmp
clc
cmp
jns
jb
cmp
jbe
clc
push
push
or
scas
sub
add
mov
xorl
xor
mov
dec
push
cmp
or
and
wbinvd
add
push
mov
and
dec
mov
outsb
sbb
je
fstpl
pop
push
es
test
dec
pushf
push
mov
sbb
pop
xchg
iret
mov
pop
jnp
sub
mov
mov
mov
in
push
ss
ret
or
add
add
fstl
hlt
adc
push
test
dec
test
sbb
in
push
movsb
mov
jns
add
add
inc
jo
jb
xor
jne
add
adc
add
add
and
mov
and
pop
xor
pop
enter
xchg
fldz
xlat
pusha
xor
dec
mov
push
sbb
inc
stos
out
and
pop
pop
inc
sub
cmp
mov
add
lcall
addb
push
pop
aas
je
pop
and
mov
rcr
fbld
pop
fdivs
insb
or
cmp
jmp
cwtl
ss
jl
or
xor
ss
rolb
ret
mov
pushf
jmp
cmp
fcomp
mull
jbe
cwtl
adc
ret
fstps
add
pop
sbb
push
in
or
mov
leave
mov
mov
push
or
fcomps
enter
xor
lea
mov
sarl
movsb
mov
adc
cmp
add
pop
insl
xorb
adc
and
xchg
lret
gs
adc
lcall
add
and
push
pop
int
pop
bnd
cmpl
xor
jae
enter
test
in
add
adc
daa
push
nop
cmp
inc
push
in
nop
mov
in
add
mov
sub
fsubs
cld
xchg
cld
push
cmp
jne
add
fistl
inc
in
js
loop
push
pop
test
push
rcrl
add
xlat
rcl
mov
dec
push
cmp
jnp
cmp
fcomps
jp
or
mov
and
shll
sarl
push
or
push
ret
das
push
sbb
popf
add
inc
icebp
jae
sbbl
orb
outsb
in
loopne
add
pushf
cmp
push
ffreep
or
lock
push
mov
sbb
addr16
jecxz
push
popf
xor
pop
inc
or
dec
mov
dec
lcall
fsubs
rolb
pop
mov
call
dec
push
ficoml
or
sti
mov
enter
sub
pop
xchg
arpl
dec
add
imul
dec
leave
mov
mov
cmp
in
cmp
jo
pop
sub
fmull
cmpb
dec
mov
cld
lcall
in
mov
enter
or
in
fdivrs
add
shr
xchg
mov
imul
push
roll
test
sbb
add
fstl
in
ss
in
ret
cmpsb
xchg
xchg
movsl
mov
inc
clc
lahf
cmp
out
push
jno
and
jl
pusha
fs
insb
jo
or
leave
js
add
adc
fsubr
nop
orl
sub
icebp
ret
fadds
lea
mov
fisubl
dec
shr
test
in
add
mov
arpl
mov
aas
sbb
sti
mov
movsl
clc
fisubs
lcall
cmpsb
jno
scas
xorl
enter
inc
mov
mov
adc
cmpsb
movsb
or
ret
sbb
mov
adc
mov
inc
mov
outsl
add
and
mov
lods
add
cltd
cmp
push
inc
aaa
rclb
adc
mov
xchg
cmp
in
add
or
push
and
jnp
loope
ds
push
insb
fsts
in
xchg
adc
cwtl
sbb
aaa
sbb
aam
in
pop
movsl
adc
sti
or
pop
cmpsl
fs
inc
dec
or
or
mov
or
xchg
arpl
inc
loop
lock
je
xchg
test
and
mov
or
adc
xchg
push
loop
loopne
and
jmp
in
inc
inc
push
mov
mov
ficoml
dec
or
in
xchg
inc
in
jae
jb
js
data16
sbb
sbb
adc
in
loopne
js
sbb
fsubrs
rolb
rcr
jne
pop
fwait
mov
shrb
cltd
enter
imul
in
rcl
in
pusha
xor
imulb
and
in
lock
adc
arpl
mov
sbb
rorb
or
pop
mov
out
aam
or
call
cmp
int3
xor
in
outsb
xor
loopne
jmp
jo
imul
lock
dec
xchg
sbb
push
ret
sbb
ficoml
push
add
aam
jmp
cld
out
add
bound
call
cmpsl
push
call
inc
shl
call
aad
call
jmp
add
add
fcoml
lret
mov
inc
inc
or
adc
xchg
xchg
dec
repnz
dec
pusha
and
xchg
lds
fsubl
filds
fwait
mov
adc
addr16
lods
or
in
les
and
push
sbb
js
popf
mov
or
movsb
ljmp
add
enter
loope
hlt
stos
and
xchg
imul
std
test
mov
mov
inc
negl
sub
push
push
insl
or
push
mov
mov
jmp
push
mov
loopne
sbb
cmp
fiaddl
fwait
dec
push
test
jecxz
movsb
pusha
mov
loope
in
or
cmp
dec
lret
sbb
adc
sbb
jo
fldcw
je
add
sub
in
add
enter
xor
jne
dec
loopne
fcoml
mov
repnz
in
cmp
push
sub
and
push
sbb
sbb
and
clc
test
mov
nop
sbb
add
and
mov
ja
push
in
shrl
out
or
or
sbb
or
or
or
in
add
aaa
sub
test
inc
repnz
cwtl
ret
sti
mov
sub
push
call
adc
cmp
xlat
and
out
xor
dec
cmpsl
cmp
jl
inc
inc
faddl
and
enter
ret
cmp
lock
and
sti
adc
lock
pop
add
movsl
aam
leave
mov
clc
gs
xchg
sbb
loop
or
xchg
enter
or
leave
and
push
aad
lock
and
adc
enter
adc
test
enter
adc
mov
xchg
test
fidivrl
mov
hlt
icebp
orb
xchg
sbb
or
xchg
add
addr16
stos
adc
xchg
mov
addr16
mov
mov
adc
cmp
sub
repz
repz
xor
jnp
sbb
ret
sbb
push
ret
movsl
jo
inc
inc
data16
insl
sbb
push
or
faddl
mov
shlb
repz
mov
add
xchg
inc
jo
dec
sub
push
insb
push
or
icebp
imul
pop
cmp
nop
hlt
movl
and
or
or
enter
adc
imul
je
cld
jo
stos
shlb
push
fs
pcmpeqb
mov
and
xchg
xchg
ret
jmp
add
add
inc
fcmovb
adc
bound
call
jb
fmuls
das
shrb
xchg
mov
nop
mov
leave
loopne
test
cltd
ss
xchg
mov
divb
or
pop
insb
insb
adc
xchg
sub
mov
dec
lds
jo
inc
test
mov
es
test
dec
xchg
pusha
push
call
inc
dec
xlat
push
inc
xchg
stos
cmp
testl
invd
das
or
loopne
cmp
sbb
add
cmp
shlb
movsb
cmc
mov
arpl
push
int
rcll
mov
pop
inc
or
xchg
xchg
inc
cmp
and
cltd
aas
or
stc
jg
fadd
jno
fistl
sbb
test
push
adc
cmp
fdivr
xor
mov
adc
cli
or
xor
lock
pop
pop
add
mov
mov
call
lods
mov
dec
loopne
push
and
sti
jns
outsl
rclb
xor
lods
enter
sti
inc
lds
cmp
ret
pop
add
mov
mov
leave
or
cmpsb
fucomi
mov
adc
jl
add
fmuls
nop
inc
scas
mov
fs
push
or
pusha
or
xor
cmpsl
mov
mov
adc
fisubl
xchg
icebp
cwtl
stc
mov
mov
lods
addb
xorb
imul
arpl
fldt
pop
push
push
lods
adc
gs
bound
mov
rorb
test
sbb
cmp
push
mull
les
xchg
ja
test
int3
pinsrw
in
mov
mov
or
inc
int3
dec
mov
add
rorb
pop
aam
insl
test
mov
mov
mov
cwtl
mov
mov
add
xor
imul
les
add
mov
push
mov
cmpl
add
xchg
cmp
sub
xchg
pusha
xlat
push
xlat
outsl
pop
inc
add
jge
pop
xlat
and
fsubrl
xor
push
push
mov
aam
fsub
and
enter
leave
in
aam
aam
dec
scas
mov
nop
xchg
lock
mov
and
xor
add
jecxz
mov
outsl
pop
ret
mov
leave
mov
arpl
lea
pop
fidivl
push
gs
imul
movsb
mov
xor
mov
add
aam
sub
scas
loopne
pop
dec
mov
jp
notb
in
leave
or
or
shl
jbe
cmpsl
pop
movsb
fwait
mov
nop
dec
es
xchg
nop
pushf
in
repnz
mov
xchg
cltd
fwait
sbb
cmp
in
jl
sub
inc
scas
jl
popa
ret
test
test
pop
cmp
pop
lods
gs
aaa
inc
mov
lds
xor
pop
cmp
bound
and
out
lock
movsb
fdivr
add
sub
movsl
pop
xchg
dec
inc
inc
enter
fnstcw
and
mov
push
imul
call
nop
dec
aam
adc
pusha
mov
xor
sub
pop
ret
inc
inc
lods
inc
pop
and
push
lret
mov
es
fistpl
leave
int3
jmp
push
fwait
pop
push
clc
fsubrs
inc
fwait
mov
adcl
sbb
pop
stos
and
stc
test
shlb
add
or
pusha
in
sbb
xchg
insl
stc
ds
mov
add
lods
nop
and
and
test
push
lea
or
inc
xchg
xchg
dec
insl
sbb
inc
adc
or
sub
push
sub
pop
adc
and
or
push
mov
rorl
inc
or
inc
repnz
pop
push
jo
in
fdivr
enter
notb
dec
insb
add
xchg
sub
dec
das
lods
or
inc
mov
xchg
or
inc
mov
sub
icebp
sar
cmp
and
jne
push
ljmp
add
fcomps
mov
aam
test
rcll
pop
inc
and
cmp
stc
lock
ret
nop
or
or
test
call
add
or
sub
push
std
mov
int3
jae
sti
or
xchg
sub
push
push
inc
cmp
xchg
test
and
xchg
mov
push
or
dec
xor
and
push
pop
mov
mov
inc
xchg
push
call
call
and
in
negl
addb
xchg
xor
dec
sbb
or
jb
leave
int3
decb
adc
adc
in
cltd
fmul
movsb
test
fistl
enter
fcoms
sub
add
jne
sti
pop
in
or
aad
in
movsb
fs
and
cmpsb
adc
adc
adc
or
xor
test
jo
enter
pop
inc
or
push
imul
or
aam
mov
mov
add
adc
int
lods
cwtl
jmp
orb
fcoms
int3
mov
pop
not
adc
jno
adc
adc
outsl
sti
xor
aaa
cmpsl
cs
lods
xchg
movsb
jns
testl
mov
or
aam
and
popa
enter
ret
mov
mov
inc
jmp
test
leave
adc
mov
xor
in
sbb
mov
pop
int
xchg
pop
bound
adc
ss
and
and
test
fs
in
test
mov
divl
or
push
adc
inc
leave
aam
test
fadds
jb
xchg
pushf
or
in
mov
mov
mov
jne
pcmpeqd
mov
test
xchg
movsl
push
jne
call
and
mov
and
push
push
mov
test
xchg
mov
xchg
jne
test
pop
gs
gs
dec
jno
inc
sbb
mov
dec
mov
leave
in
outsb
dec
int
das
mov
mov
lods
lods
test
popf
adc
lock
hlt
sbb
adc
sub
ret
aaa
push
pushf
adc
in
sub
lods
mov
fildll
jge
cwtl
mov
js
popf
fs
data16
xchg
stos
pushf
mov
xchg
rcrl
loopne
popa
mov
push
push
sbb
sbb
adc
lea
ljmp
sub
pop
jmp
dec
sbb
imul
shrb
or
cltd
sbb
or
mov
nop
xchg
test
adc
inc
jl
fs
dec
jl
xchg
into
and
subb
test
test
mov
inc
sbb
mov
arpl
mov
add
mov
and
stc
rolb
or
daa
jl
adc
jecxz
outsl
sub
ret
xor
std
mov
sub
shll
repnz
je
mov
gs
fs
lods
hlt
push
mov
sbb
scas
leave
mov
or
mov
cmpsb
push
cmp
push
sub
pop
test
je
add
jnp
movsl
mov
add
lods
call
mov
push
rol
flds
adc
fnsave
and
cld
lock
push
pop
movl
pushf
sub
cmp
add
jb
inc
or
mov
ret
and
rolb
sub
mov
add
cmp
xor
sbb
les
or
push
bound
adc
rcr
push
je
arpl
call
mov
test
fcoms
mov
fsubs
fwait
call
inc
insl
mov
cmp
in
test
fldcw
add
dec
pop
mov
movsl
adc
cmp
adc
or
cmp
outsb
bound
lea
dec
and
loopne
in
mov
pop
in
orb
gs
addl
jbe
inc
in
and
in
mov
xchg
jmp
pop
jns
adc
fs
push
insl
popa
insb
sbb
jbe
push
pusha
adc
leave
push
xor
and
sbb
xor
and
inc
cmp
add
xor
jb
rolb
pop
xchg
fdivr
lahf
xor
push
js
das
and
popa
cwtl
je
adc
or
sub
es
cltd
sbb
cwtl
mov
loope
enter
mov
jae
movsb
and
dec
and
mov
nop
and
in
and
mov
mov
sbb
jg
test
dec
fcoms
or
shll
inc
mov
cmpsb
enter
enter
or
dec
add
lock
and
and
ja
push
loope
nop
mov
mov
inc
pop
leave
add
gs
leave
inc
rolb
or
test
inc
rorb
enter
dec
push
fmull
inc
int3
sbb
pop
les
dec
jb
pop
ktestw
mov
daa
stos
imul
aaa
jnp
daa
icebp
and
jbe
pop
pop
adc
and
fs
inc
call
int3
jmp
mov
shrb
test
mov
aam
rcrb
mov
gs
enter
xchg
test
fdivs
ss
cmp
mov
jno
test
insb
out
mov
test
inc
iret
inc
push
aad
pop
loopne
and
fcoms
dec
push
ja
push
ljmp
adc
inc
or
adc
add
xchg
mov
inc
pusha
xorl
xchg
test
adc
mov
sub
mov
test
repnz
loope
dec
movsb
shrl
fcoms
inc
popl
jnp
mov
nop
das
adc
mov
add
in
out
aam
sti
mov
mov
fistpll
dec
jo
fdivs
stos
sub
cwtl
and
push
call
and
sub
daa
and
in
int
mov
or
xor
imul
mov
dec
push
nop
ror
adc
jno
xor
sbb
dec
ret
adc
jp
and
push
pop
ss
sub
fwait
js
in
jecxz
aam
mov
rolb
xor
cwtl
sbb
leave
xor
in
jns
and
gs
xchg
push
or
fwait
in
jns
in
aam
push
add
shl
sub
xchg
xor
push
adc
sbb
add
ja
or
adc
push
shll
adc
aad
xor
stc
sub
mov
and
fcmovnu
leave
xor
mov
fdivs
push
dec
xor
adc
jecxz
loopne
adc
xchg
add
xor
popa
or
lock
push
les
sub
xor
cs
mov
call
daa
sbb
loopne
leave
mov
pop
fsubr
fists
mov
fsubrl
adc
sub
sub
pushf
cmp
les
jb
xor
mov
loop
insl
push
gs
pusha
ficoml
lahf
xchg
xchg
lock
pop
and
mov
and
movl
xor
pop
sbb
sub
xchg
dec
mov
mov
sbb
dec
fistl
push
mov
fs
bound
dec
je
sub
jl
test
pushf
adc
mov
lea
nop
icebp
in
arpl
loop
cwtl
js
nop
inc
push
shrb
adc
xchg
mov
cs
jb
sbb
mov
dec
dec
outsb
das
mov
insl
xchg
xchg
cwtl
pop
nop
bswap
leave
leave
leave
leave
les
leave
movsb
pushf
xchg
mov
push
dec
outsb
push
unpckhps
mov
outsb
negl
dec
jb
adc
inc
cmp
adc
mov
pushf
mov
int
bound
in
pop
ja
add
xchg
icebp
insb
jns
andb
sbb
lds
xchg
sub
xchg
mov
mov
psubw
mov
icebp
inc
fcmovbe
hlt
jecxz
test
and
lods
testl
in
shrl
push
movsl
mov
shl
adc
push
loope
mov
xchg
fwait
mov
mov
je
pop
std
cmp
sub
ss
jge
inc
movsl
pop
xor
outsl
test
dec
nop
sbb
xor
jne
mov
mov
mov
inc
and
cs
jae
mov
enter
sub
jno
dec
inc
inc
and
cwtl
adc
mov
cmp
inc
mov
aam
lock
xor
enter
jb
test
nop
sbb
jo
pop
pushf
sti
xchg
dec
dec
push
cmp
sti
rolb
inc
es
sub
lods
push
loope
sub
xor
pusha
call
fcmovb
fnsave
adc
or
mov
sbb
inc
enter
fwait
xchg
test
cmpsb
mov
loope
negl
sub
ss
mov
in
sbb
jne
pop
out
mov
push
dec
pop
adc
shlb
xchg
mov
mov
sub
insb
sub
cltd
sub
rcrb
xor
sub
sbb
jns
cltd
mov
push
in
push
sub
adc
adc
pop
nop
and
mov
les
pop
inc
adc
push
xor
loope
jae
fcompl
add
and
or
call
pop
sub
outsl
loopne
push
loopne
dec
enter
dec
mov
cltd
test
or
ret
adc
jo
lahf
sub
loop
leave
rcl
push
sub
decl
shll
mov
add
nop
push
sub
sub
pop
arpl
insb
pusha
aaa
popa
jmp
sbb
les
mov
adc
shlb
inc
scas
insl
pop
xchg
xchg
inc
int3
stc
int3
mov
pop
subb
enter
pop
inc
test
jecxz
andb
adc
pop
pop
ret
pop
popf
cmc
mov
or
ror
out
nop
or
mov
movsb
out
xchg
add
movsb
enter
adc
add
pop
mov
pop
sbb
xor
sub
push
jbe
sbb
test
mov
nop
popa
mov
addr16
lods
mov
orb
add
adc
repz
cltd
jbe
or
insb
shrl
adc
hlt
bnd
pop
lcall
sbb
jl
dec
xor
movsb
into
test
xchg
in
enter
pop
lods
aas
or
sub
stos
push
pop
jo
jo
push
neg
pop
sbb
sarl
rclb
mov
ljmp
inc
cwtl
inc
push
cmp
adc
lahf
sbb
daa
movsb
lods
push
sub
mov
mov
sub
mov
fidivl
insl
jno
jbe
hlt
cltd
inc
inc
sub
cmp
xchg
inc
jg
insl
sub
push
pop
sbb
leave
fbld
adcb
and
add
fiaddl
push
cmp
adc
leave
mov
push
scas
cltd
add
orl
icebp
jns
xor
lds
clc
icebp
rolb
adc
sub
jae
sti
rcrb
cmp
push
orl
ljmp
dec
adc
jecxz
mov
or
add
sub
mov
mov
pop
adc
cwtl
jbe
test
sub
inc
add
inc
lret
inc
push
ds
push
aas
in
sub
arpl
outsl
cs
inc
mov
mov
fs
fsub
out
ljmp
js
in
lods
out
add
jmp
out
adc
sbb
mov
sub
pop
sub
out
xchg
sub
loope
add
adc
push
in
dec
sbb
shlb
cmp
xor
inc
lea
adc
push
jo
subl
push
xor
sbb
lock
sbb
negl
push
xchg
adc
notl
inc
dec
test
cli
shrb
fstl
cmp
jno
mov
call
pop
call
insl
inc
in
das
mov
imul
cmp
or
sub
lods
pcmpeqb
movb
sbb
push
negl
inc
add
nop
xchg
or
sub
push
bnd
adc
push
sub
jmp
and
inc
stos
xor
aam
xor
push
adc
mov
scas
sub
push
inc
xlat
push
mov
dec
loope
pusha
mov
mov
cmpsb
pop
xor
xor
mov
add
sub
inc
icebp
repnz
pop
or
push
dec
inc
xor
xor
mov
icebp
aas
ret
xor
cmp
mov
std
xorl
add
pop
mov
inc
push
dec
ffree
and
sub
fcoms
insl
sbb
call
rolb
or
incb
bound
insl
push
jp
adc
mov
xor
push
xchg
pop
xchg
mov
mov
enter
cwtl
cmp
jecxz
mov
sbb
test
and
cmp
std
inc
xchg
jno
inc
add
cmp
push
push
mov
and
movl
sbb
jo
jbe
xor
cmp
es
mov
inc
push
push
pushf
ja
and
out
mov
cwtl
cmp
mov
fstl
sub
adc
sbb
fcoms
movl
mov
mov
jl
add
sbb
and
ficoml
adc
cmp
orb
aaa
sbb
sbb
insl
ret
inc
add
push
pop
ja
push
ret
pop
lahf
push
dec
pop
cmp
xor
test
push
adc
or
nop
arpl
int3
test
mov
mov
fisubl
mov
or
dec
cltd
roll
or
or
push
xor
push
in
sbb
push
out
add
adc
push
pop
or
leave
std
and
mov
push
lods
cmp
and
idivl
lods
mov
scas
jge
mov
mov
xchg
mov
pushf
aam
jbe
in
sahf
xor
xchg
sbb
mov
subb
inc
sub
jmp
repnz
sub
jo
fsubl
dec
push
add
lods
loopne
xchg
aaa
mov
mov
sub
push
clc
in
out
jge
pusha
out
cld
adc
add
pop
mov
add
sbb
mov
and
sbb
push
and
mov
lods
jmp
lea
insb
hlt
push
scas
cmp
push
and
out
sbb
xchg
push
add
addl
std
popa
mov
mov
sub
fs
sbb
enter
fs
fidivrs
sbb
in
dec
cmp
or
xor
mov
and
loopne
jmp
test
lcall
lcall
or
mov
push
stos
jno
addl
adc
stos
sbb
test
add
sbb
sub
fistpl
ds
sarl
fdivl
dec
pusha
mov
jnp
out
mov
dec
sahf
out
fisubs
push
inc
pop
ja
mov
jne
jns
add
sti
imul
test
pop
push
cmp
lds
orb
push
sub
push
in
es
pop
cltd
sbb
inc
orb
jnp
mov
add
ljmp
adc
mov
rcll
xchg
adc
or
cmp
rclb
xor
dec
jns
mov
test
add
nop
add
into
pop
adc
test
sub
lcall
fisubs
and
xor
lcall
enter
push
pop
jbe
add
aas
rdpmc
add
pand
in
aad
incl
sub
push
cmp
roll
popa
and
insb
outsl
arpl
imul
mov
movsb
or
sub
popa
arpl
jne
fimull
push
cld
jb
outsb
je
gs
add
jbe
push
insl
sti
test
rolb
mov
outsl
jb
js
je
jb
gs
add
or
outsl
add
mov
add
add
add
jne
les
inc
out
out
out
mov
and
jb
dec
push
add
add
push
jbe
dec
add
aaa
or
out
es
add
inc
xor
add
sub
push
cli
inc
aas
push
pop
ja
lds
ss
dec
add
sub
scas
push
je
push
insl
xchg
je
je
and
jae
dec
fisttpl
ja
jge
fs
cmpsw
insl
push
push
ja
mov
bound
jns
out
cmp
imul
dec
jnp
ficoml
insb
jp
in
lock
dec
outsl
or
mov
in
repnz
lret
aas
jmp
out
outsl
jmp
jo
mov
cs
stos
insl
sub
or
scas
ja
out
fnstsw
cmp
jne
inc
push
data16
xchg
fisubs
sub
fs
insb
lcall
mov
out
jo
push
outsb
inc
arpl
scas
mov
inc
daa
dec
in
push
fbstp
ds
cmp
je
adc
out
lods
js
sbb
jo
arpl
fisttpl
insl
mov
scas
xor
filds
push
mov
jb
ret
fiaddl
cs
popl
daa
outsl
sub
or
das
mov
mov
nop
xchg
push
push
sbb
cmp
lahf
aaa
jg
dec
pop
pop
ja
iret
push
ss
adc
fbstp
jne
jbe
jb
jne
push
lods
cmpsb
jae
jbe
sub
and
pop
stos
icebp
jbe
push
rcrl
shrl
jno
mov
cmp
filds
jo
roll
push
lahf
outsl
aas
or
nop
cmp
lods
arpl
outsl
sbb
mov
adc
rolb
imul
jge
fs
imul
shll
dec
mov
popa
jnp
xor
sbbb
cmpsl
outsl
pop
sub
das
xchg
sbb
push
mov
add
pop
jnp
in
stos
pop
insl
lret
stos
nop
imul
adc
cmp
jae
ljmp
pop
inc
ja
nop
pop
jecxz
push
push
sub
xor
or
shlb
mov
dec
addr16
add
add
bound
push
inc
fdivp
repz
enter
orb
push
lcall
adc
sahf
out
fcoml
das
push
sbb
dec
repz
clc
jmp
mov
imul
ljmp
mov
and
out
into
jae
repz
jns
jp
push
cld
cmp
lcall
pusha
dec
push
jl
cmp
add
mov
mov
sub
sub
repz
mov
push
mov
ret
cmp
das
adc
cmp
imul
ja
ds
mov
jge
xor
shll
cmpsl
push
fwait
and
fiadds
cmp
push
xor
fdivrl
pop
add
jbe
outsb
and
add
das
das
and
popa
mov
scas
pop
mov
shlb
dec
ljmp
mov
cs
test
je
mov
cli
addr16
idivl
aas
xor
stc
dec
inc
mov
sbb
mov
clc
ds
pop
pop
popa
jnp
outsl
dec
and
inc
das
pop
insl
sbb
pop
imul
iret
insl
arpl
fdivrs
out
out
mov
shr
and
arpl
adc
pop
pop
jp
jae
andl
sub
pop
sti
dec
jne
dec
fbld
insl
pop
mov
sbb
mov
lahf
jg
lea
ret
insl
insl
cmp
add
cmp
and
jns
add
das
clc
lahf
neg
das
jns
push
dec
push
inc
inc
arpl
bound
mull
mov
dec
arpl
out
sbbl
inc
jo
sub
addr16
xor
insb
xchg
mov
inc
jo
imul
bound
inc
popa
outsb
adc
into
mov
xchg
out
jnp
jns
jg
addr16
popa
je
lods
std
int3
fnsave
xor
and
daa
mov
gs
sbb
dec
outsl
outsb
and
cmp
pushf
insl
jbe
mov
aas
add
out
dec
or
inc
arpl
mov
jae
jnp
dec
and
push
inc
push
popa
insb
jne
loope
mov
push
inc
ret
adc
decl
add
sub
sub
cs
xor
xor
xor
ss
sbb
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
aaa
sbbl
pop
pop
pop
mov
push
pusha
popa
bound
gs
imul
shl
outsl
jo
add
jbe
js
jp
jl
jle
dec
outsw
mov
lock
loopne
jnp
inc
xchg
pop
add
orb
aas
ds
sar
lret
jno
icebp
pusha
inc
mov
mov
ret
movsl
add
xorl
inc
ja
push
outsl
imul
jae
or
add
es
gs
xor
popa
js
jne
mov
addl
pop
adc
out
ret
ret
sbb
sub
je
adc
fsubrl
add
adc
add
add
add
add
xor
cmp
push
add
xor
xchg
mov
push
add
pop
mov
or
pusha
adc
js
or
cmp
mov
mov
add
sbb
addb
in
add
xchg
test
add
imul
pop
daa
push
cmpb
push
out
int3
sahf
and
sub
jb
int3
push
int3
mov
into
jo
add
nop
push
and
push
outsb
imul
adc
add
inc
sbb
xchg
pop
adc
xor
addl
daa
iret
sbb
jb
and
leave
and
xchg
mov
add
pop
dec
mov
iret
inc
scas
cmp
fsub
push
gs
add
lods
lods
push
stos
aad
enter
xlat
jmp
jp
push
sbb
cmp
pop
sbb
push
fistps
out
out
inc
sub
ss
js
dec
dec
inc
dec
inc
sbb
or
push
nop
fs
je
cs
jae
hlt
jbe
dec
dec
bound
je
outsb
data16
xorb
dec
out
je
xor
push
rclb
jo
pop
lea
jae
mov
outsl
js
push
xchg
fdecstp
in
push
and
insl
jo
jo
and
fidivrs
xchg
shlb
aaa
insb
les
dec
imul
mov
outsl
lods
insl
cmp
dec
inc
jb
jns
out
imul
notb
mov
insb
and
mov
outsb
in
and
addr16
sarb
pusha
fsubrl
push
jbe
cld
mov
jmp
or
jb
and
push
xchg
pusha
inc
jbe
push
push
lahf
fs
insl
or
inc
ss
lods
jp
pusha
xchg
push
popl
loopne
cs
jp
cmp
push
andb
xchg
daa
mov
dec
adc
orl
popa
push
outsb
mov
insb
pop
pop
push
push
jae
or
es
pop
cmp
call
pop
hlt
clc
addr16
xor
ja
das
outsb
gs
mov
sbb
add
mov
inc
mov
adc
push
push
push
dec
testl
pop
scas
cltd
pusha
dec
push
lods
cmp
push
fisttps
inc
ret
lea
ds
adc
jle
jb
mov
imul
mov
cwtl
push
inc
adc
mov
xor
clc
gs
sbb
mov
or
subl
ljmp
insb
scas
mov
mov
pop
loope
aaa
daa
xchg
mov
popw
fstpt
dec
jnp
cmp
cmp
ds
je
repz
and
sub
inc
jl
ret
es
addr16
jle
dec
mov
add
add
cmp
sub
pop
or
sbb
adcl
das
push
jb
aaa
cmp
pop
and
and
push
mov
mov
xchg
pop
pop
and
aad
outsb
stos
addr16
push
jbe
rcr
sbbl
adc
xor
gs
lock
pop
imul
xchg
test
sahf
inc
jae
mov
pop
sub
popa
sub
and
jl
out
sub
incb
push
sub
cmp
repz
clc
std
lock
repz
ffree
pop
dec
push
mov
out
sahf
repnz
push
pushf
cwtl
xchg
cmp
mov
iret
imul
push
je
movsb
jo
sahf
out
insb
push
push
jns
out
push
push
dec
dec
sahf
out
sahf
inc
inc
cmp
xor
jns
out
sub
adc
add
cmp
repz
mov
repz
push
sti
sahf
out
sahf
les
sahf
out
inc
xor
or
cli
repz
shr
shlb
ds
cmp
stc
int3
test
xor
push
xor
jg
push
add
cmp
jle
mov
es
add
add
sub
cmp
test
add
add
add
ja
stos
ljmp
dec
push
cmp
add
add
push
ja
shll
movl
add
sbb
or
push
sbb
fcomps
leave
inc
ret
insl
das
jle
add
fisttps
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
popf
sahf
lahf
mov
movsl
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
fdivr
fstp
fnstsw
loope
jecxz
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
xchg
inc
adc
and
or
adc
mov
decl
mov
popa
stos
rclb
ljmp
outsb
gs
popa
data16
pop
aas
out
pop
inc
shlb
xor
data16
push
insl
test
mov
aaa
dec
cmp
icebp
push
arpl
inc
push
sbb
aas
sbb
jmp
xor
mov
or
mul
aam
push
setl
sub
add
scas
add
inc
adc
push
insl
je
xor
and
inc
dec
cmovns
das
hlt
cmove
push
adc
sub
adc
or
std
out
adc
into
mov
mov
jnp
inc
loop
mov
stc
pop
jnp
ds
pop
adc
clc
lret
sbb
sti
idivb
jb
jge
arpl
cmp
jg
outsl
sti
pop
jno
in
fstl
mov
and
enter
cmp
dec
imul
lret
add
inc
lcall
or
push
test
sub
fwait
ss
outsl
ficomps
fcomps
int
jns
ds
xor
incb
int3
dec
dec
pushl
jns
dec
popf
pxor
xor
lret
aaa
push
div
inc
sub
dec
xchg
cmp
cmpsb
das
ljmp
adcb
adc
xchg
icebp
mov
cld
or
f2xm1
jmp
cmp
jle
inc
mov
xchg
push
pop
xchg
sub
pop
mov
pushl
ljmp
orb
mov
jge
jle
dec
add
scas
lods
dec
lock
xor
aas
mov
inc
dec
enter
repnz
cwtl
cmc
insl
jg
inc
sub
lret
es
mov
fcompp
add
adc
fldl
cmc
push
out
adc
int3
mov
int3
mov
or
daa
and
xor
inc
jmp
aas
sub
sub
mov
xchg
push
add
andl
fsub
sbb
xchg
dec
xchg
pop
and
sti
and
out
into
inc
cmp
outsb
addr16
es
repnz
jae
lret
cmp
and
or
sbb
mov
sub
loope
xlat
bound
jg
aas
fldt
je
aaa
pcmpeqw
sti
sub
rorl
ja
popa
daa
sub
cmp
add
je
jmp
jae
insb
add
push
sub
addr16
sub
jmp
xchg
lret
xchg
cmpsl
lock
fstpt
shll
inc
jb
add
or
pop
jae
xorl
push
stos
add
outsl
test
inc
imul
sbb
divl
jae
insl
div
outsb
js
mov
mov
mov
and
add
sub
jmp
addl
adc
out
fbstp
push
test
aaa
adc
jno
mov
shll
mov
inc
pop
rol
jnp
cmpsl
int3
push
lds
loopne
fdivs
inc
jecxz
or
out
sti
arpl
jns
out
mov
xchg
jg,pn
jg
imul
push
push
or
adc
jmp
add
arpl
mov
call
jno
inc
popa
xchg
iret
mov
push
pop
je
cmp
divl
cmp
pop
add
or
jecxz
mov
mov
inc
xchg
insl
repz
stos
test
jl
outsl
jmp
and
jp
ret
cmpsl
popa
adc
pop
dec
jp
add
mov
pop
adc
cmp
lcall
mov
stc
fwait
ja
push
jbe
fcoms
pop
inc
addr16
out
leave
imul
inc
pop
addr16
je
push
dec
pop
repz
aas
arpl
mov
pop
arpl
das
push
jae
dec
addr16
fcoms
repnz
loopne
xor
and
cmpsl
lea
insb
pop
lea
cmp
dec
sbb
jnp
stos
insl
pop
pop
pop
popl
push
hlt
fimuls
or
and
iret
pop
push
sbb
notl
and
mov
add
jo
add
inc
loope
fiaddl
jle
icebp
jecxz
or
pop
jb
inc
mov
push
loop
mov
mov
insb
push
arpl
incl
adc
loope
fs
and
jno
push
sub
into
inc
test
or
dec
loop
pop
sub
mov
out
sub
push
adc
aaa
inc
sbbl
jbe
pop
xor
outsb
adc
sub
test
sbb
push
cmpps
xor
inc
sub
mov
mov
mov
fistpl
xor
jne
add
dec
lock
dec
xor
push
cmpsl
lds
icebp
repz
notb
or
pop
mov
push
jne
cmp
dec
push
movl
jb
subl
push
sub
outsb
out
sub
sti
or
add
mov
push
lret
pop
orl
rcrl
mov
mov
jnp
pop
and
cmpsb
inc
jno
mov
jno
sarb
lds
outsl
outsl
lods
js
and
out
mov
mov
mov
and
pop
xchg
adc
cs
dec
jecxz
adc
mov
dec
xchg
shrb
xor
push
inc
fisttps
out
jo
arpl
roll
jl
insb
cmpsl
push
testl
sbb
fwait
sbb
out
add
push
mov
shll
mov
dec
sbb
cwtl
or
clc
adc
pop
je
pop
dec
test
jmp
insb
sub
pop
scas
inc
bound
imul
roll
out
jp
pusha
mov
xchg
inc
arpl
pop
popa
inc
cmpb
aas
xor
fiadds
sti
cs
or
inc
jl
sbbl
jl
psubq
mov
jl
imul
stos
and
and
addr16
bound
sbb
ja
push
mov
fs
cmp
and
out
jns
jae
sub
fisttpll
out
rcrl
push
imul
jecxz
shll
iret
out
mov
jp
jns
insl
inc
mov
mov
add
outsb
jo
iret
jnp
aaa
popa
pop
arpl
jp
jl
mov
push
outsl
subl
fisttps
jl,pn
outsl
lret
jl
mov
pop
bound
jns
inc
or
or
mov
sti
sarl
ds
inc
mov
daa
pop
ds
fs
mov
imul
icebp
movb
xchg
jl
inc
or
pushf
into
xor
sbb
jl
mov
daa
inc
xor
shl
outsl
pop
and
or
dec
mov
mov
outsl
pusha
roll
sbb
loopne
mov
jno
jmp
daa
ret
pop
jbe
daa
xlat
adc
cli
rcrb
dec
xor
pop
daa
jae
add
inc
out
aas
dec
push
jne
mov
das
mov
inc
lea
pop
fwait
pop
sbb
xchg
fbld
or
cmpsl
xor
lcall
push
fdivs
push
insb
sbb
dec
inc
add
shll
popa
inc
xchg
pop
aaa
pop
clc
test
das
scas
mov
imul
pop
mov
jg
ss
idivb
sbbb
add
dec
push
rcr
pop
cmp
mov
dec
lock
ss
sbb
add
pop
mov
xor
inc
pop
fwait
js
cmp
jg
ds
jmp
out
push
xchg
push
in
dec
lahf
out
mov
mov
and
js
sti
ss
push
es
ds
push
push
push
pop
mov
dec
sarb
push
sub
xchg
out
ds
imul
push
dec
pop
push
xchg
sub
push
out
mov
fnstsw
xchg
aas
pop
ss
ficoms
into
shlb
sahf
pop
jge
imul
xchg
push
push
int
fiaddl
ficomps
sti
mov
call
pop
push
xor
jns
jnp
mov
inc
push
inc
push
popa
out
sahf
out
xorl
push
test
mov
push
push
mov
aaa
dec
and
push
orl
test
push
jo
jns
icebp
dec
or
xchg
sbb
cmpl
dec
mov
arpl
insb
pop
les
stos
aas
mov
popa
lret
icebp
xchg
xchg
outsb
arpl
std
loopne
nop
push
gs
insl
pusha
push
popa
jne
or
dec
mov
push
dec
bound
xor
pop
sub
and
sub
bnd
das
jb
jb
out
sahf
testl
movsb
int3
iret
repz
cld
and
push
fwait
lahf
mov
iret
repz
aam
adc
out
mov
cmp
sahf
je
loop
bound
jne
into
outsb
pop
cmpb
jb
jno
je
or
ds
sahf
xchg
add
jb
dec
jb
and
lods
jge
and
inc
sbb
and
pop
insb
cmp
and
jae
imul
cld
mov
pop
adc
xor
push
nop
push
sahf
and
jne
je
ss
cmp
imul
mov
sti
mov
ja
imul
mov
jno
fsubs
inc
mov
add
adc
aas
pusha
sub
mov
xchg
mov
push
pop
fmull
push
daa
inc
sub
jge
out
dec
push
lahf
hlt
inc
daa
call
mov
aas
inc
add
inc
add
pop
rol
mov
in
rolb
push
in
add
cmp
aaa
cmp
add
xchg
pop
sub
or
out
jmp
pop
sub
scas
mov
jbe
mov
orw
fisubl
jg
or
dec
jecxz
out
push
add
or
xlat
and
jae
clc
mov
and
and
xchg
mov
popa
loop
rorl
push
addl
daa
jge
dec
mov
or
aas
ret
lret
xor
adc
or
dec
xchg
and
and
cmovns
test
orb
das
andb
add
and
fwait
mov
imul
push
pop
imul
push
clc
or
sbb
dec
pop
pop
dec
push
push
mov
sub
jne
mov
inc
cmp
addl
pop
mov
inc
movsl
push
movsb
pop
push
jnp
add
in
xchg
loopne
ja
add
sbb
cmpsl
jg
push
adc
dec
lods
xor
xchg
and
push
fadds
xchg
push
mov
and
cmp
iret
xchg
mov
mov
imul
stc
fmuls
mov
mov
fildl
pop
cs
aaa
clc
test
lock
bound
inc
arpl
movsb
add
jae
pop
cs
aas
adc
jb
fs
add
imulb
test
icebp
imul
or
addr16
cwtl
lea
js
scas
ret
out
outsl
js
sub
or
pop
arpl
push
sub
add
add
fidivs
cmp
rcl
push
xchg
dec
xchg
out
rolb
push
pop
fwait
push
sub
nop
xchg
mov
inc
mov
jg
out
lods
outsb
scas
cmp
inc
aas
cmp
pop
inc
push
mov
aas
aad
inc
sbb
add
enter
pop
inc
fstpt
push
sub
xchg
stos
fs
cmp
adc
outsb
rol
vmwrite
sub
movsl
or
push
dec
popf
jp
je
jns
push
dec
lods
inc
pop
scas
aaa
arpl
aam
dec
arpl
xor
nop
mov
dec
imul
mov
cmp
movsb
test
scas
push
push
mov
or
aad
pushf
xchg
jnp
sbb
dec
xor
sub
mov
jo
mov
push
les
and
add
cmpsl
sub
xchg
pop
shlb
ja
popf
sub
push
jbe
hlt
imul
sbb
add
jg
or
inc
repz
in
add
push
inc
push
scas
mov
mov
jmp
push
imul
aas
roll
shl
dec
scas
pop
pop
fcmovu
sub
pop
frstor
adc
or
push
lahf
mov
cmpsl
cmp
mov
cmp
das
ret
adc
jge
push
lret
jecxz
adcb
fistpl
push
mov
sub
mov
cmp
ret
dec
fistpl
arpl
mov
pop
push
popa
jo
inc
cs
loopne
xchg
xlat
push
pop
imul
cmp
cmp
or
adc
mov
shll
jmp
insb
mov
xchg
push
pop
inc
jbe
jne
xchg
push
imul
ja
inc
fildl
pop
fsubp
push
pop
xor
iret
pop
rorb
lock
fidivl
push
jb
setle
push
push
inc
adc
xor
cli
pusha
xlat
ja
mov
outsl
es
mov
pop
add
es
add
sub
jne
push
shl
and
lds
or
rorb
sti
add
sbb
popa
mov
jo
and
shll
sub
xchg
and
xor
cs
pop
roll
inc
mov
or
jne
arpl
fs
pop
cmp
imul
pop
test
movsb
fcomps
leave
inc
dec
pop
xor
cmp
adc
pop
enter
sub
sub
aaa
xor
push
xor
mov
mov
das
loopne
dec
jge
ret
arpl
push
push
push
xlat
sub
adc
inc
sub
cmpb
call
jae
scas
xchg
push
int3
lret
cs
pop
movsl
dec
cmp
cmp
fdivs
outsl
popa
xchg
add
mov
sbb
adc
mov
test
xlat
adc
and
mov
orl
loopne
sbb
divl
mov
cmp
mov
dec
stos
nop
cwtl
shl
div
test
imul
xchg
lock
das
aaa
stos
or
adc
sub
cmpsb
and
out
ja
dec
mov
xchg
pop
jnp
pop
sti
js
xchg
xor
sub
inc
cs
and
fdivrs
inc
cs
or
dec
inc
pop
pop
pusha
or
pop
push
or
fbstp
ret
push
mov
pop
minps
push
fisttps
jmp
lea
pop
testb
push
popa
fucomi
push
add
mov
mov
push
mov
gs
pop
aaa
imul
add
stos
fisubs
xor
or
jmp
outsl
iret
jp
addr16
outsl
jl
sbb
fildl
fcomps
arpl
xchg
popa
je
call
mov
mov
pop
cmp
bound
pop
dec
add
bound
scas
xchg
stc
or
cmp
xchg
add
cmp
cld
arpl
fcomi
pop
xlat
push
and
push
decl
dec
or
xrelease
mov
imul
xor
adcb
ret
repz
pop
inc
sbb
dec
xchg
xchg
fisttps
xchg
xchg
test
or
pop
bound
test
divl
push
jno
mov
xor
pop
pop
jno
dec
inc
mov
adc
xchg
arpl
mov
fldt
pop
rorl
lahf
fs
lods
imul
xchg
jl
xlat
aas
lods
push
imul
xchg
fistps
mov
sbb
dec
pop
adc
mov
scas
ja
or
push
adc
dec
dec
imul
divl
mov
jecxz
arpl
cmp
fsubl
adc
out
ljmp
rorl
mov
loop
loopne
push
das
mov
popa
into
dec
aas
shlb
push
dec
pop
or
outsl
mov
xor
out
and
lds
pop
pop
mov
mov
pusha
aam
or
or
bound
aas
das
xor
stos
adc
pop
cmp
rcl
ja
add
xlat
mov
lods
mov
or
pusha
mov
lods
add
arpl
aas
xor
mov
mov
cmp
xor
fs
icebp
sbb
outsb
sbb
lea
scas
xlat
pop
pop
mov
inc
ds
ja
shr
pop
out
aaa
adcb
mov
pop
pop
les
mov
jge
lea
push
mov
js
punpckldq
filds
sbb
inc
and
or
push
das
jb
mov
push
sarb
cs
int3
lods
inc
and
sub
cltd
dec
pop
fsubrl
in
in
stos
cwtl
jns
pop
and
stos
sub
add
pop
or
cmpsl
fs
push
repnz
cmpsb
jo
pop
and
stos
in
cltd
js
pop
and
test
sub
loopne
mov
in
push
jb
dec
xchg
inc
scas
xchg
test
inc
xor
mov
push
add
cltd
dec
pop
mov
pusha
push
leave
stos
in
mov
pop
and
stos
sub
xchg
dec
and
test
enter
scas
xchg
js
fcomps
mov
movsl
xchg
push
call
inc
inc
adc
loop
lret
mov
push
bound
dec
and
pop
mov
push
mov
mov
xor
pop
xor
cwtl
or
mov
xor
inc
inc
popaw
movsl
rcll
mov
or
inc
mov
addr16
inc
inc
cmovae
fmul
dec
lahf
xchg
push
dec
mov
inc
mov
and
lds
push
mov
adc
inc
and
xorl
dec
inc
mov
xor
dec
repz
dec
sbb
fistps
movsl
push
inc
dec
inc
fldt
push
call
adcl
inc
push
xor
mov
or
cvtps2pi
andl
fldt
xlat
cmp
inc
push
cmpsl
ret
or
mulb
addr16
lds
inc
outsl
mov
pop
jae
xor
addr16
xor
push
xchg
mov
scas
or
arpl
jg
mov
lahf
push
mov
push
out
fwait
add
inc
mov
inc
push
scas
mov
jp
inc
pop
ret
xchg
push
add
sbb
arpl
ljmp
bound
mov
out
aaa
fucomip
sub
aaa
lods
sbb
mov
orb
ss
mov
outsl
jecxz
test
add
daa
jecxz
pop
add
xchg
cmp
add
add
cmc
pushl
mov
jg
aaa
pop
addb
ja
bound
rcrl
pop
pop
iret
sub
call
dec
fadd
add
xlat
jno
sub
push
push
pop
xchg
cmpsb
nop
clc
outsl
jbe
inc
lahf
xor
xlat
ficomps
inc
fildl
imul
dec
adc
cmp
jbe
filds
movl
dec
or
arpl
aas
sbb
push
mov
jmp
mov
sub
xchg
sub
dec
mov
jae
dec
loopne
adc
add
shl
or
and
cmp
jmp
pop
dec
jne
addr16
je
insl
gs
mov
pop
bound
and
insl
je
sbb
xchg
fstl
xor
out
adc
jo
cmp
lahf
addr16
popa
adc
sbb
jecxz
fcoml
outsl
fwait
sarb
test
les
sti
sbb
js
popa
sti
pop
bound
in
mov
js
push
outsl
dec
js
es
fdivs
outsl
add
dec
mov
add
inc
mov
mov
and
movsb
adc
dec
adc
lahf
stos
andl
adc
cmp
mov
xor
mull
int3
push
rolb
stos
cld
stc
cmp
repz
es
rcl
cmpsl
jge
lods
incb
loopne
jl
sub
cmp
pop
mov
dec
mov
push
dec
pushf
lods
push
inc
xlat
aaa
adc
inc
mov
bound
push
loopne
mov
add
imul
imul
or
sbb
mov
call
or
pushl
dec
insl
inc
pop
push
or
mov
mov
push
or
fs
pop
sub
lcall
adc
addr16
xor
xor
cmp
adc
inc
dec
cmovno
mov
add
das
or
idivl
iret
adc
xor
add
sub
inc
or
mov
inc
ss
pop
dec
pop
add
xlat
je
es
or
mov
sbb
cs
dec
mov
out
in
mov
push
add
mov
test
xor
jo
rorl
stos
and
mov
in
sbb
movsl
das
adcl
xor
dec
mov
outsb
sub
push
bound
in
scas
xor
push
cs
cmp
push
sbb
pop
loopne
mov
js
imul
push
fnsave
insl
xchg
jnp
in
add
and
inc
xchg
cmp
jns
xor
jae
fs
mov
stos
push
je
xor
js
aam
jecxz
pop
jg
shlb
pop
sub
mov
or
add
js
xor
inc
cmp
or
es
pop
mov
dec
or
inc
push
mov
scas
fnstsw
ss
push
dec
mov
bound
sahf
ja
adc
xor
out
cmc
inc
xor
cs
lret
cs
outsb
jb
loop
out
ret
sarl
es
ja
retw
fsubrp
jp
pop
xor
and
xor
push
pop
jmp
arpl
jnp
loop
sub
arpl
fs
mov
jo
roll
imulb
or
adc
dec
daa
divb
out
imul
push
mov
cs
loopne
fldl
mov
pop
pop
into
fnstsw
mov
push
es
ss
outsb
pop
push
pandn
notl
daa
dec
jb
das
inc
pop
lods
loope
dec
es
das
add
and
jns
inc
pop
push
sysexit
mov
scas
jns
dec
cs
sahf
push
outsl
jecxz
cmp
push
push
neg
jnp
sub
push
insl
mov
fisubrs
mov
xor
push
jp,pt
jp
iret
jnp
add
ds
rcl
jp
dec
jg
dec
das
xor
loop
xchg
jp
pop
outsl
js
push
out
pop
outsl
dec
xor
push
xor
into
xor
mov
imul
add
push
dec
or
cmp
bndstx
adc
jmp
sbbb
pop
inc
mov
push
jne
orl
lahf
sbb
inc
dec
jnp
adc
jecxz
add
invd
adc
inc
dec
mov
push
inc
int
pop
fiadds
ja
les
hlt
pop
addl
ja
mov
xor
or
xor
xor
add
sbb
or
stos
enter
rdpmc
je
or
mov
inc
and
shll
imul
repz
inc
add
dec
pop
mov
add
sbb
sbb
mov
mov
sti
add
adc
addb
jmp
xor
dec
dec
ljmp
mov
inc
addr16
mov
inc
sti
jmp
add
inc
inc
or
ss
dec
outsb
mov
mov
mov
sbb
lods
addr16
pusha
es
fldt
mov
cmp
push
add
push
dec
inc
out
insb
outsl
popa
fs
outsl
inc
arpl
cld
call
fistpll
adcb
imul
ss
inc
add
mulb
rclb
pop
rclb
push
test
repz
js
lods
inc
sbb
aad
dec
out
jle
lods
dec
inc
or
lds
sub
scas
cmpsl
sub
add
addb
push
das
jge
mov
fs
addr16
pop
scas
mov
sbb
add
add
dec
push
imul
xchg
jae
outsb
out
loop
jmp
xor
sub
cmp
mov
repz
cs
out
sahf
out
add
fs
mov
pop
cmp
ja
pop
cmp
jne
jo
push
sbb
xor
je
push
out
pop
ja
xor
xor
push
mov
ds
incl
test
cwtl
das
pop
stos
pop
push
popa
pusha
adc
xor
rcrb
push
inc
outsl
jle
ss
mov
lods
add
xchg
cmpsl
add
push
sub
cmp
sti
pop
pcmpgtb
push
and
add
incl
pop
sub
dec
cmp
daa
xchg
adc
inc
sbb
add
xchg
cmpsl
jbe
addr16
adc
mov
mov
iret
mov
sub
mov
push
das
add
sbb
addb
add
push
ret
repz
sub
sub
rcrl
pop
outsb
mov
sub
inc
dec
and
inc
and
mov
adc
jne
and
mov
add
mov
pop
iret
mov
daa
cmp
nop
fdivs
je
adcb
pusha
outsb
jbe
arpl
dec
pop
outsl
rcll
repz
adc
sbb
jnp
lahf
xor
cmpl
repz
cltd
ss
dec
repz
xchg
add
pop
push
add
or
insb
aad
add
into
adc
jns
and
mov
insb
mov
inc
iret
xor
inc
mov
mov
fiadds
mov
popa
xchg
add
shrb
ret
sub
shrb
cmpsl
fldcw
pop
adc
insb
sbbl
pop
sbb
data16
dec
str
lea
fwait
add
inc
stc
das
incl
rolb
sahf
scas
add
das
xorl
add
cmpsl
sub
mov
and
aaa
sub
cmp
mov
mov
mov
xchg
je
shrl
divl
dec
cmp
outsb
out
inc
sarb
fdivrl
pusha
mov
addr16
or
flds
mov
das
xchg
fwait
pop
sub
imul
sbb
and
xchg
pop
xlat
push
adc
add
mov
and
add
clc
cmpsl
jge
arpl
mov
mov
das
insb
mov
aam
bound
push
inc
sbb
adc
movups
jmp
shlb
mov
mov
ljmp
ja
sbb
ljmp
mov
mov
mov
lods
pop
dec
jmp
push
push
mov
inc
push
insl
ss
adc
cli
mov
sub
mov
fnstcw
sub
mov
sbb
in
pop
enter
ds
pop
sbb
xor
mov
add
lahf
jo
fsubs
sbb
xchg
cmc
ljmp
dec
pop
dec
xchg
jecxz
dec
push
pop
imul
add
test
jg
pop
push
rcrb
shlb
cmp
loop
sbb
xlat
mov
and
fcoms
push
add
roll
inc
xlat
push
xchg
clc
xor
and
fsub
add
mov
xor
out
and
leave
and
sahf
add
hlt
addr16
in
mov
xor
les
pushf
cmp
mov
movsb
inc
jae
leave
jae
dec
test
iret
leave
dec
fs
outsl
addb
add
test
xchg
pusha
xor
lahf
mov
inc
mov
dec
jl
dec
xorl
hlt
cli
adc
arpl
aam
lret
arpl
loop
pop
pop
mov
pop
movsl
jne
pop
jmp
rol
xchg
jnp
cmp
out
jge
mov
sub
adc
fsubl
cmp
sbbl
mov
pop
inc
cmpsb
jp
mov
es
push
or
and
daa
inc
dec
movsl
and
mov
push
mov
add
bound
je
bound
imul
push
cmp
dec
stos
xor
pop
push
addl
test
or
pop
and
and
addl
cmpsl
xor
push
mov
movsl
iret
pop
dec
and
sbb
mov
je
add
and
pop
fcmovnb
pop
xor
push
gs
pop
mov
dec
cmpsl
mov
jno
pop
rol
test
jne
insb
mov
xor
add
push
aam
test
testb
inc
inc
and
or
xlat
out
push
inc
mull
ret
mov
gs
xor
jg
adc
mov
jne
ret
xchg
push
roll
push
mov
je
add
cmp
or
mov
jge
adc
push
push
sti
outsl
inc
loopne
rorb
xor
cwtl
xor
arpl
in
xchg
dec
ret
cs
pop
out
jl
jns
xor
clc
mov
sbb
test
std
mov
push
sub
inc
outsl
and
cmp
fwait
mov
pop
leave
dec
xchg
lea
jbe
cmp
sub
mov
and
push
mov
repz
push
je
or
push
add
outsb
repnz
pop
ret
pop
adc
sbb
ss
push
fs
jl
out
lcall
int
fildll
nop
js
push
stc
mov
mull
clc
fsubrl
out
paddb
sub
mull
pop
cmp
scas
mov
sub
daa
jns
and
divl
mov
test
insb
lahf
mov
add
test
je
js
sbb
lret
push
mov
lcall
xor
dec
repz
inc
popa
cmpb
pop
mov
insb
mov
sbb
push
ds
mov
fcmovbe
popa
jnp
sahf
push
xor
iret
shrl
add
inc
dec
dec
pop
xchg
outsl
fs
outsb
ja
push
push
dec
pop
xchg
push
mov
push
rolb
dec
pop
xor
mul
jecxz
testl
into
push
sarl
out
shlb
hlt
aaa
stc
dec
jns
pop
push
push
fbld
dec
xlat
or
cmp
negl
cs
push
icebp
mov
mov
pop
sub
mov
out
mov
pop
es
push
push
lds
out
mov
xchg
pop
dec
mov
pop
aas
mov
inc
mov
cmp
cmp
cmp
rcrl
lods
out
jns
out
cmp
pop
repnz
clc
mov
push
bound
aas
out
test
in
sarl
push
cmp
adc
jns
cmpsl
jge
imul
repz
repz
mov
lcall
mov
out
lcall
push
lahf
out
sahf
js
scas
lret
cmc
adc
iret
repz
push
orl
scas
and
jg
dec
sbb
scas
sub
adc
and
and
rcrb
push
mov
or
adc
mov
jg
pop
mov
scas
int
mov
leave
loop
and
push
pop
mov
add
idivb
adc
sar
mov
push
and
pop
sbb
enter
adc
iret
decl
xchg
inc
repnz
iret
pusha
or
cs
push
pop
insb
add
outsl
adc
ret
or
roll
outsb
cmpsl
rcrb
adc
movb
or
iret
mov
iret
ja
outsb
outsb
jp
xor
push
js
in
dec
inc
lods
enter
pop
insl
seto
jmp
cmp
xor
and
ja
mov
mov
arpl
mov
iret
imul
dec
lret
dec
jo
insl
in
addr16
jmp
cmpsl
push
dec
sub
outsl
je
push
popa
je
push
cmp
sub
sub
stos
jo
adc
in
loop
and
mov
jge
out
pop
push
ficoml
or
lea
xor
push
sbb
lea
and
mov
inc
inc
cli
mov
fsubrs
scas
nop
notb
lahf
pop
sub
push
test
mov
aaa
dec
sub
jnp
mov
adc
or
scas
rorb
add
mov
jno
jne
push
jo
inc
mov
adc
pusha
movsl
aas
inc
add
mov
xchg
leave
mov
fidivrl
xchg
push
sbb
out
popa
sbbb
sahf
jb
inc
mull
lea
xor
xchg
sbbb
inc
add
fstpt
shl
inc
addr16
push
arpl
dec
add
mov
add
pop
jmp
sysexit
jnp
add
insb
inc
aam
and
outsl
fsubs
gs
jno
das
fs
jo
xor
sub
sub
add
outsb
push
jnp
xchg
add
pop
sbb
pop
aaa
and
xor
inc
pop
clc
dec
and
jb
add
push
mov
xchg
pop
or
dec
add
add
fdivs
push
adc
sahf
xchg
dec
mov
push
or
mov
ret
bound
sbb
cmpsl
mov
addb
inc
jmp
xlat
outsl
xchg
scas
adc
inc
iret
das
popa
or
add
push
imul
jp
push
aaa
push
push
push
pop
fcoml
addr16
test
inc
xchg
inc
add
pop
push
ja
iret
fs
popa
and
daa
arpl
mov
es
pop
adc
psubq
push
das
popa
xchg
dec
fldt
add
lods
jecxz
jg
ja
and
arpl
jbe
ljmp
add
shlb
div
cmp
scas
outsl
lea
das
mov
jmp
fildl
pop
xchg
cs
das
testl
iret
out
popa
subl
mov
add
imul
fisttpl
pusha
push
xor
inc
ret
pop
addb
mov
adc
arpl
xchg
jmp
add
arpl
js
push
stos
push
add
jo
mov
mov
add
scas
mov
push
add
popl
xor
pop
dec
repnz
jg
mov
xor
sbb
lods
or
xlat
sub
push
in
cmp
mov
push
inc
stos
lret
in
push
pop
sbb
jae
ja
fisttps
push
daa
inc
cmp
jmp
pop
push
push
xor
mov
dec
add
insb
sbb
mov
sub
sbbl
aaa
sub
xchg
sbb
mov
sti
inc
push
jno,pn
sbbl
cs
or
lahf
inc
dec
mov
divl
or
push
cmpsl
call
add
cmpsl
push
lods
mov
lods
out
ret
pop
fildll
add
inc
xchg
pop
pop
inc
sbb
aaa
jns
jne
loop
pop
ja
pop
mov
in
sub
lret
adc
inc
push
push
and
stos
or
es
insl
jo
dec
daa
shr
je
xchg
pop
addr16
ds
jo
jae
daa
pop
jno
outsl
xor
push
mov
jae
push
adc
pop
pop
decl
test
jns
je
jne
loope
movsb
pusha
or
scas
xchg
sbb
mov
lahf
pop
dec
out
push
clc
bound
aaa
mov
xor
insl
mov
dec
pop
inc
fwait
add
adc
mov
and
imul
push
or
sbb
mov
xor
inc
sub
inc
or
repz
mov
ret
push
dec
divl
pop
pop
dec
adc
adc
push
or
sbb
iret
dec
push
mov
sbb
and
adc
mov
push
jmp
into
push
adc
mov
push
adc
test
pop
nop
or
inc
xor
add
pop
pop
mov
mov
rcrl
addr16
or
movlhps
adc
push
aam
jns
jb
add
xchg
cs
sbb
push
ret
mov
xchg
dec
xlat
jge
inc
or
inc
outsl
outsb
daa
adc
js
aaa
inc
insb
cwtl
pminsw
cmpsb
adc
ljmp
mov
out
aaa
push
and
arpl
add
scas
pop
aas
inc
push
call
inc
dec
push
xchg
add
add
andl
pop
jg
inc
sub
mov
fcmovb
jle
out
xorb
pop
add
add
push
add
fdivrl
adc
mov
and
pop
ficompl
xor
das
ds
das
xor
jle
in
cmpsb
stc
lods
add
pop
daa
daa
daa
push
and
pushw
push
inc
push
pop
inc
inc
inc
push
inc
pop
and
ds
add
out
dec
es
js
insb
cwtl
outsl
shr
outsb
sbb
push
and
fisubl
sbbb
les
add
sbb
packsswb
pop
gs
pusha
nop
loopne
out
ds
push
mov
lods
pop
push
sbb
adc
icebp
sbb
jle
dec
add
sbb
dec
aam
sbb
fsubrl
test
lods
mov
mov
aas
mov
dec
or
push
pop
mov
out
push
pop
pop
iret
mov
xchg
outsb
test
adc
negl
xchg
test
call
sahf
int
scas
hlt
mov
and
sbb
inc
verr
lea
lods
sbb
pop
sub
in
add
mov
iret
outsl
push
cmp
jbe
or
cmpsl
push
inc
mov
push
adc
gs
sbb
test
movsl
push
push
mov
lea
push
aad
mov
loopne
mov
push
pop
add
outsl
arpl
popa
add
outsl
pcmpeqb
and
bound
sbb
es
imul
outsb
insb
jns
adc
xchg
and
je
mov
popa
stos
inc
movsb
cmp
out
and
mov
sub
push
xor
ret
jo
loop
dec
inc
or
cltd
cltd
into
and
push
push
btc
outsl
fs
gs
jo
mov
fnsave
iret
inc
mov
test
outsl
insl
jne
adc
pop
mov
les
mov
mov
das
cmp
and
movb
bound
aaa
push
icebp
fld
inc
insb
jbe
clc
sbb
push
cs
imul
inc
xchg
aaa
sub
in
mov
outsl
jo
lods
mov
sahf
dec
sub
and
mov
ret
orb
inc
or
inc
pslld
out
out
shrl
cmc
inc
cmovo
jnp
jae
adc
cmpb
aas
nop
jo
inc
jbe
insl
maxps
loopne
and
scas
sti
dec
test
adc
mov
dec
lahf
cmpsb
push
mov
es
sbb
sbb
fcoml
fsubrs
in
push
hlt
daa
ds
pop
pusha
div
mov
dec
dec
sti
dec
and
daa
into
xor
inc
push
jne
jne
pop
das
inc
add
in
or
cmpsl
ja
lahf
pop
lods
mov
daa
mov
and
enter
adc
inc
xchg
mov
rep
test
xchg
daa
xchg
sahf
or
xchg
push
pusha
push
mov
push
fcompl
adc
dec
int3
scas
sarl
fisttps
inc
je
add
testb
push
jl
testb
push
jle
mov
mov
bound
or
jno
test
xor
inc
push
dec
add
out
lods
ss
repz
nop
cwtl
int3
mov
push
sbb
pop
adc
enter
iret
inc
lahf
fsub
push
adc
cs
xchg
enter
nop
imul
xchg
xchg
cmp
rep
sub
sbbl
cmp
jb
xchg
lods
pop
enter
enter
leave
jae
sar
mov
xchg
aas
add
clc
aaa
and
push
push
pop
and
mov
hlt
outsl
pop
imul
dec
xchg
lods
pushf
aas
add
pop
inc
aam
in
mov
leave
lock
add
pop
jl
xchg
xor
push
outsb
jnp
inc
push
nop
enter
enter
ja
les
pop
repnz
cmp
aas
fadds
adc
xchg
outsl
pop
mov
in
inc
scas
rol
ja
bound
sub
insl
shrl
push
inc
daa
loopne
addr16
int
dec
xor
je
testl
or
out
mov
sub
push
out
aaa
je
mov
pop
adc
mov
pop
addr16
jl
sahf
or
push
mov
addr16
mov
mov
xchg
mov
mov
daa
les
stc
pop
enter
cltd
les
das
in
in
adc
xor
jb
outsl
inc
inc
push
test
push
xchg
in
lods
dec
in
add
addr16
shrb
cmp
jnp
pop
int3
ds
mov
mov
cltd
out
dec
push
pop
or
sbb
dec
lods
enter
orb
cld
sahf
or
pop
rorb
imul
inc
shlb
bnd
hlt
pushf
lods
mov
hlt
pushf
jl
movsb
jns
mov
cld
or
nop
or
xchg
dec
lahf
in
jnp
repnz
push
pop
lahf
pop
pop
and
push
ja
in
nop
out
mov
jl
nop
out
sahf
test
in
cld
cs
mov
push
dec
jl
pushf
pop
cmp
push
pushf
sub
push
fbld
iret
mov
jg
cld
andb
nop
movsb
daa
cmpsb
cmpsl
cld
sarb
aam
int3
cmp
cmpsl
push
iret
test
cmpsl
aam
sub
fwait
nop
popf
cmp
dec
push
dec
cmpsl
cmpsl
jl
or
cmpsl
js
cmp
bnd
mov
pop
js
iret
jae
iret
movsb
shl
hlt
nop
in
cltd
nop
test
rcr
test
and
xor
dec
pop
and
sti
push
xor
cmpsl
fdivrl
dec
repz
cmpsl
adc
repz
fcoms
and
test
cmp
cltd
nop
iret
jae
lock
cmp
cs
int3
push
fiadds
stos
cmpsl
push
jg
nop
sub
daa
test
jae
push
mov
mov
aam
mov
call
nop
mov
lahf
call
ja
adc
fs
enter
test
test
lahf
fs
mov
enter
aam
ds
jb
mov
add
test
adc
sub
jo
jg
shl
inc
sahf
cwtl
pop
push
mov
pop
sahf
out
sahf
shrb
in
shrb
mov
mov
insl
xor
cmpsl
jg
and
insb
cmpsl
xor
mov
jmp
cmpsl
push
mov
test
mov
sahf
enter
lahf
test
loop
and
xchg
int
mov
inc
ds
mov
mov
pop
jo
aas
cmpsl
and
outsl
insl
jg
or
mov
mov
mov
mov
hlt
fwait
xchg
adc
sbb
add
fistl
sahf
push
pop
adc
pop
repnz
enter
mov
pop
pop
and
loopne
lahf
or
call
imul
mov
and
adc
stos
lahf
dec
inc
jbe
add
mov
pushf
add
sbb
push
mov
pop
push
inc
cmp
lods
lods
jg
push
test
lahf
push
mov
jb
mov
push
movsb
inc
nop
jnp
mov
jg
mov
lods
pop
addr16
lahf
mov
pop
ja
loopne
inc
and
cmpsb
push
loopne
and
add
aam
xchg
cs
mov
cmpsl
cmp
pop
add
das
and
xor
pushl
and
movsl
push
jmp
pusha
inc
int3
fcompl
pusha
inc
int3
loop
nop
iret
mov
sub
inc
test
inc
jo
xchg
mov
test
push
mov
jo
lahf
mov
repz
inc
lock
sbb
clc
in
iret
lock
mov
pop
pop
jg
xchg
pop
push
push
test
bound
push
push
jl
shll
push
mov
lea
jg
and
add
cmpb
scas
addb
test
lods
or
or
inc
mov
jl
jg
fcompl
mov
mov
inc
ja
sarb
add
lods
mov
shrb
sbb
jmp
test
stos
lahf
dec
sahf
sub
lahf
push
push
mov
jo
jns
in
push
jl
in
sahf
or
nop
or
xor
sahf
adc
lock
lods
pop
enter
pusha
aam
bound
ja
test
rcrb
enter
lahf
nop
xor
jne
repnz
pop
lods
lahf
out
cs
xor
fs
in
mov
inc
xchg
inc
stos
xchg
outsl
aas
js
dec
sahf
imul
add
sahf
mov
ror
mov
dec
lods
add
in
scas
sbb
into
adc
push
xchg
inc
repnz
call
cmp
push
pusha
enter
mov
outsl
aas
mov
or
or
ror
pop
adc
mov
scas
scas
scas
and
inc
incl
mov
push
push
pop
daa
aas
daa
nop
int
addr16
sub
mov
pushf
fcoml
fcmovb
es
call
scas
mov
mov
xlat
mov
inc
lcall
mov
or
mov
add
xchg
mov
cwtl
fimull
jl
pop
lods
pop
mov
outsl
pop
dec
sahf
imul
add
dec
aam
in
push
scas
data16
push
push
mov
insb
jae
dec
mov
fwait
cmp
dec
dec
push
push
daa
aas
movl
orb
fcomps
sahf
and
mov
inc
jb
push
jb
cmp
jb
push
xor
and
add
jbe
je
jle
pop
mov
cmp
xor
mov
roll
fidivrs
es
push
and
mov
out
mov
push
ds
mov
dec
xor
jns
push
push
mov
push
je
pop
cmp
push
out
and
enter
push
mov
es
or
xchg
insb
movsl
lock
repnz
inc
lds
and
dec
add
pop
dec
repz
add
in
aam
mov
xchg
mov
fidivs
mov
out
lds
addl
and
mov
ja
push
sbb
xor
mov
dec
outsl
xchg
push
xor
xchg
les
mov
push
rolb
rclb
mov
outsl
add
inc
insb
and
inc
mov
mov
xchg
popa
imul
add
cmp
and
lods
pushf
ljmp
mov
xor
mov
fsubrl
push
ljmp
jb
mov
inc
jb
xchg
in
fbstp
jp
sti
mov
test
dec
pop
push
movsb
mov
bound
lods
fsubs
out
inc
pop
leave
push
pushl
sub
dec
mov
xchg
scas
fs
mov
push
loopne
into
dec
xchg
iret
xchg
cmp
js
push
jmp
cmp
hlt
mov
mov
sbb
lock
sub
add
sbb
ja
stos
or
ja
push
xor
add
dec
scas
sub
repnz
mov
xor
outsl
add
and
add
push
shlb
or
add
and
add
push
cwtl
pop
or
insb
scas
add
les
add
pusha
js
sahf
cmpsl
or
or
sbb
push
call
inc
getsec
xchg
sub
xchg
add
outsl
test
call
pushf
daa
addr16
and
push
nop
es
push
mov
mov
mov
push
or
push
sbb
dec
mov
mov
js
addr16
aaa
leave
xor
inc
mov
push
rcrb
mov
dec
push
es
lahf
xchg
imull
jbe
sub
mov
outsl
bts
mov
push
outsl
jg
movsl
scas
sbb
xor
mov
notb
cmpsl
jge
jge
xor
scas
push
movsb
roll
repz
lock
cmp
pop
inc
jp
xchg
enter
dec
lds
pop
or
mov
mov
pop
or
sbb
push
nop
and
or
decl
idivb
ljmp
or
or
mov
adcb
mov
adc
in
mov
add
inc
outsl
push
repnz
fs
ss
shrb
lcall
jl
loopne
mov
mov
or
and
addr16
rcll
aaa
sbb
outsl
icebp
dec
xchg
add
lds
cmp
cmpsl
pusha
shlb
mov
lock
xchg
lods
pop
mov
mov
pop
in
mov
pusha
sarb
aas
jg
cmp
add
in
nop
push
fs
add
rorb
test
sub
ror
idivl
ret
add
mov
aaa
pop
jno
clc
or
sub
pop
cmp
pusha
ret
ss
dec
ret
xchg
sub
add
pop
repnz
xchg
push
aam
mov
and
pop
leave
mov
add
iret
daa
mov
and
ret
daa
or
je
push
add
aas
idivl
pop
cwtl
push
xchg
add
iret
repz
call
or
mov
lock
outsl
test
notb
add
popa
dec
scas
inc
or
lea
jg
and
mov
les
les
leave
mov
add
in
push
enter
xchg
es
xchg
sub
add
sub
xor
ss
dec
inc
and
lcall
js
push
xor
scas
add
push
sbb
insb
outsl
out
dec
xchg
popl
pop
or
lahf
addr16
test
dec
mov
or
push
xor
ret
out
push
jb
mov
daa
or
sub
pop
and
cmpsl
inc
shrb
addr16
jl
aas
pop
pusha
stos
addr16
pop
repnz
in
lods
xchg
daa
xchg
in
aaa
push
jl
aam
addr16
hlt
lods
xchg
dec
testl
push
inc
adc
xchg
inc
jmp
inc
and
pushl
rcll
aaa
dec
lds
inc
ret
enter
nop
rcl
pop
jb
pop
nop
shrb
and
xor
lahf
lea
pop
inc
lcall
jl
insl
fdiv
push
les
inc
call
clc
pop
insb
xchg
in
enter
mov
in
push
insl
or
pusha
xchg
es
dec
cmp
mov
push
fisttpll
bound
iret
jns
out
std
arpl
repz
out
or
jle
stc
cmp
mov
xor
out
sahf
jp
lret
data16
iret
repz
mov
adc
out
imul
out
jl
push
mov
imul
jns
inc
outsb
mov
imul
iret
repz
int
outsb
insb
xchg
cmp
out
mov
or
das
pop
stc
cmp
repz
jle
call
cmp
jnp
mov
out
lcall
jno
iret
repz
pop
jg
jb
xor
out
jp
leave
pop
jae
imul
std
and
jns
out
xchg
mov
stc
cmp
popa
test
push
jbe
jns
jge
fwait
in
ja
push
test
lret
dec
js
or
lahf
out
xlat
sbb
jns
iret
cmc
sub
js
iret
repz
rolb
jl
outsl
lods
jmp
dec
jge
stos
clc
data16
out
ss
jg
lret
jp
out
cmp
int
addl
stos
in
addb
out
lcall
lods
out
cmp
sub
jns
push
andl
xchg
iret
cmp
in
mov
repz
out
and
push
fnstcw
mov
mov
cmp
cmpsl
jmp
shl
jns
iret
cld
cmp
repz
sub
nop
dec
repz
ds
sbb
stc
cmp
pop
xchg
dec
out
xchg
ds
repz
dec
stos
testl
pop
xchg
loop
xchg
enter
jns
inc
xchg
jp
cwtl
push
cmp
out
mov
scas
jns
out
shll
ja
aad
cmp
repz
pushf
repz
cmpsl
push
xchg
popf
sahf
cmpsb
cmp
ror
dec
mov
iret
sarl
sahf
add
jns
ret
out
fwait
mov
repz
stc
or
cmpsl
stc
mov
xor
fldt
test
iret
sarl
lock
push
fdivr
lahf
out
sub
stos
sahf
out
xor
fdivrl
lods
mov
ds
sarl
imul
out
jg
idivl
scas
jbe
lcall
cmp
repz
mov
mov
xor
out
cli
aaa
mov
leave
idivl
out
mov
test
inc
mov
sahf
data16
repnz
out
in
sarl
jns
mov
mov
push
mov
sbb
cmp
mov
lcall
leave
lret
int3
data16
xor
mov
sarl
rcrl
fcmovnbe
fiaddl
sub
rorb
decb
sub
mov
nopl
into
push
mov
leave
sarb
movntq
andl
cmp
in
inc
xor
jmp
or
addr16
out
cmp
pop
xor
and
jl
inc
pop
mov
inc
repnz
es
rclb
inc
mov
imul
popf
sbb
mov
xchg
jg
inc
aas
iret
push
test
cmp
popf
xchg
cwtl
jg
gs
xchg
and
xchg
jmp
mov
aaa
mov
in
fisubl
mov
adc
dec
pop
aas
fstps
ficompl
ret
loopne
out
sbb
jmp
leave
mov
inc
clc
cmpsl
nop
adc
mov
mov
inc
scas
push
aas
in
inc
repnz
inc
es
pop
sub
daa
mov
or
aas
in
ljmp
popf
push
inc
pop
or
mov
daa
nopl
add
cmpsl
cmp
jle
push
daa
mov
push
pop
inc
pushf
popf
mov
rorl
adc
rorb
nop
push
push
push
pop
push
lahf
in
sub
cmp
inc
push
pop
push
sbb
leave
test
mov
jnp
sub
fistps
rolb
pop
ds
xacquire
scas
cs
push
pop
xlat
ds
hlt
push
aam
dec
aam
fldenv
jns
test
pop
pop
loopne
lcall
mov
or
mov
cwtl
cs
negl
shll
loop
add
sbbl
pop
in
mov
mov
mov
sbb
push
ja
xchg
outsl
dec
lods
aad
iret
ja
in
inc
jmp
repnz
sbb
mov
arpl
arpl
push
pop
arpl
rolb
in
jg
inc
push
roll
mov
xorl
fcomps
loopne
repnz
add
mov
int3
or
sub
mov
ja
mov
xlat
and
push
jo
and
inc
dec
je
enter
gs
xor
mov
and
jb
xchg
fdivs
out
sub
daa
dec
inc
xchg
and
dec
gs
bound
sub
leave
insl
gs
pop
loopne
sbbb
push
lahf
push
pop
jno
adcl
inc
int3
add
les
pop
rorb
adc
cmpsl
xchg
xchg
pushf
xor
flds
scas
out
dec
mov
add
aaa
add
fsubrs
in
push
xor
dec
and
adc
push
add
cmp
mov
push
add
jno
nop
into
test
sub
cmp
iret
vmwrite
mov
fiaddl
mov
rcll
andb
addr16
roll
addr16
or
fisttpl
mov
push
push
aad
mov
fisttpl
je
loope
ja
dec
xlat
out
cmpsb
call
pop
mov
iret
cmp
xchg
fdivrs
mov
xchg
je
push
test
inc
fsubrl
dec
jb
enter
push
in
mov
mov
cmp
push
push
add
arpl
pop
xchg
cmp
xchg
sahf
cmpsb
scas
out
dec
and
or
rorl
mov
cmpsl
loope
jmp
pop
dec
sahf
dec
js
imul
adc
imul
aaa
jb
inc
imul
out
out
push
outsb
mov
out
sahf
test
mov
or
daa
push
mov
mov
mov
cltd
loope
add
ja
adc
inc
repnz
fidivrs
push
jmp
mov
aaa
test
leave
mov
ficomps
in
inc
leave
in
scas
push
das
sbb
fistpll
mov
scas
push
xchg
and
push
push
push
cmp
push
push
imul
mov
fbld
inc
into
dec
ss
imul
mov
outsb
pop
imul
push
es
out
push
jns
loopne
push
daa
pop
rorb
out
cmpsl
imul
push
sbb
inc
pop
int3
mov
faddl
adc
loope
or
scas
mov
daa
and
cs
mov
cmp
add
dec
loop
adc
cmpsl
mov
insb
mov
arpl
filds
sub
mov
pop
nop
xlat
pusha
and
aas
mov
xchg
and
sbb
xchg
out
fadds
xor
cmp
sti
add
das
fisubrl
mov
and
pop
jns
and
adc
clc
mov
adc
aaa
cmc
addb
xchg
inc
push
jecxz
scas
popa
add
pop
xor
or
decl
outsb
xchg
in
loope
int3
out
xor
outsb
xchg
push
jb
jp
in
push
cltd
or
push
pop
ja
cmp
pushw
outsb
push
inc
repnz
sarb
push
add
fists
xchg
out
call
push
mov
sub
pusha
cmp
push
daa
dec
imull
fnstsw
push
pop
and
sub
adc
xor
out
pop
test
mov
fwait
dec
bound
loopne
cmpsb
xchg
pushf
pop
add
mov
out
jb
inc
roll
cmp
jmp
sub
pusha
out
pop
mov
leave
mov
test
iret
cwtl
scas
dec
leave
mov
out
repnz
adc
push
into
testl
dec
push
outsb
fstpl
fsubs
add
push
in
jns
add
inc
jb
sbb
stos
iret
daa
pop
enter
in
add
sub
daa
fldenv
call
fwait
jmp
jno
ret
lea
push
sbb
mov
call
dec
test
sbb
das
nop
pop
xchg
call
fwait
sub
dec
pop
sbb
out
push
push
bound
jns
or
push
add
out
xchg
ret
add
lock
sahf
add
jb
inc
repnz
aaa
or
push
or
popa
jb
add
in
jb
addr16
dec
leave
je
xchg
scas
inc
ljmp
add
pushf
dec
and
pushf
ljmp
ja
addl
inc
ljmp
mov
pop
and
testl
lea
inc
mov
rcll
das
mov
jmp
cmpsb
dec
je
je
in
and
mov
dec
sahf
xchg
out
addr16
pop
mov
scas
mov
mov
pushf
fstps
rclb
cld
leave
test
aaa
sub
fisubrl
jl
push
in
scas
stos
dec
sahf
pop
ja
lahf
mov
cs
mov
daa
dec
orps
mov
fistpll
and
jbe
xchg
out
ret
add
or
xlat
push
cmp
sbb
out
out
adc
repnz
incb
dec
dec
ja
inc
ja
mov
out
cmpsl
in
movsl
adc
cmpsl
sub
push
test
xchg
scas
xorb
jae
add
sbb
add
out
inc
jne
in
out
divb
xor
enter
push
js
test
iret
repz
push
push
and
js
mov
pop
mov
inc
inc
daa
arpl
repnz
mov
pop
inc
sbb
dec
pop
js
pushf
out
xchg
je
divl
fldl
mov
xlat
daa
scas
push
pop
mov
cmp
out
inc
repnz
xchg
hlt
decl
icebp
jb
cmpsb
call
push
add
add
jg
fcoml
repnz
jno
inc
ret
out
cmp
pop
shl
test
out
leave
dec
mov
loopne
movsb
lods
leave
jmp
lahf
leave
jns
sbb
lcall
unpckhps
mov
insl
pop
ja
jp
cwtl
popf
out
mov
jne
dec
sahf
xlat
addr16
add
adcb
daa
or
add
xchg
enter
rcrb
rep
adc
and
pushf
addr16
loopne
out
cmovge
repz
sub
push
xchg
and
mov
and
in
xlat
cmc
cpuid
jns
ja
ja
xor
mulb
jl
mov
aas
push
mov
mov
mov
xchg
jae
mov
push
pop
mov
xchg
fildl
ja
fmulp
xor
adc
js
call
das
sub
add
pop
cmc
addr16
pop
movsb
daa
fnstsw
xchg
mov
ja
ja
mov
outsb
pop
aaa
shlb
loopnew
call
out
lock
push
push
or
mov
jle
push
iret
ds
leave
repz
inc
add
add
jle
jle
pusha
testb
inc
cmpl
repz
cmp
lods
add
mov
push
into
fldcw
in
or
das
add
jg
or
jg
push
cmp
xchg
xor
cmp
leave
xor
loope
inc
push
jg
shlb
add
filds
mov
imul
fsubl
repnz
pop
testb
add
cmp
daa
sbbb
lock
fs
dec
add
clc
adc
sub
and
clc
lds
xchg
imul
cmp
lods
gs
cmp
xchg
and
mov
cmpl
aas
addb
xor
inc
pop
ss
xchg
add
mov
push
mov
mov
jae
jg
les
repnz
xor
movl
xor
jb
cli
cli
mov
lds
es
cli
lds
sbbl
aad
fldl
test
add
pushf
xchg
ja
pop
push
fucomi
int
lahf
cvtpi2ps
bound
iret
push
push
push
push
add
sti
jg
outsb
daa
daa
daa
lret
pop
loop
cmp
repz
add
xor
test
aaa
and
cmp
cmpl
sub
cmpb
mov
lcall
add
in
shlb
xchg
add
cmc
addl
cmpsb
loop
sbb
test
push
inc
test
dec
es
das
pop
std
addr16
or
sub
das
ja
insl
pop
int
ja
push
popf
xchg
or
daa
push
add
dec
into
lock
ud0
pop
test
mov
cmp
inc
ja
mov
ja
jnp
jnp
insl
mov
dec
jbe
into
inc
rorl
iret
rorl
push
dec
scas
loopne
iret
mov
cld
addr16
add
xchg
adc
jmp
adc
xchg
and
add
cmp
xor
or
cmp
dec
or
repz
or
or
repnz
jl
test
xchg
adc
adc
mov
orb
xlat
mov
inc
into
icebp
ja
xchg
stc
xchg
stc
adc
xchg
pop
xchg
add
inc
iret
dec
pminub
pop
mov
idivl
or
stc
call
and
push
pushf
pop
and
add
add
mov
ja
les
adc
sbb
daa
pop
sub
jmp
aas
cltd
mov
daa
inc
dec
mov
test
add
xorb
out
mov
setb
scas
popf
pushf
lcall
pop
repnz
or
fnstsw
push
cmovle
ret
aam
btc
push
or
insl
xchg
out
cltd
fmuls
outsb
pop
jo
into
pop
mov
pop
add
or
push
leave
cmp
popf
push
adc
cmp
into
mov
rorb
es
loopne
ja
in
xchg
or
scas
out
clc
daa
mov
es
sbb
fisttpll
sbb
outsl
es
add
jp
add
jae
repnz
in
cs
add
fucomi
in
je
jg
mov
call
decl
leave
xor
sbb
pop
enter
sarb
iret
jbe
jo
roll
fsubrp
pushl
int
mov
inc
inc
pop
dec
add
sbb
or
inc
mov
mov
push
pop
mov
out
push
push
add
jb
scas
mov
push
mov
ljmp
push
mov
aaa
or
enter
pop
xor
paddw
iret
repz
add
add
add
inc
push
push
pop
or
repz
or
icebp
or
lcall
enter
add
mov
insl
mov
imull
sub
add
inc
filds
ja
adc
add
daa
in
sbb
lea
lea
je
push
test
mov
push
xchg
fstl
lahf
pop
ljmp
cmpsb
movntq
out
add
fdivr
pop
mov
jo
iret
add
cmp
rorl
mov
jae
cmp
add
add
addr16
sbb
jbe
cmp
mov
iret
push
addr16
leave
in
pop
packsswb
add
mov
cmp
daa
pop
in
xchg
sahf
jo
ror
jmp
cmp
xlat
push
outsl
fistps
out
and
sahf
add
push
movsb
add
das
push
mov
dec
push
or
pop
in
data16
das
scas
into
dec
mov
mov
xchg
popl
mov
xor
inc
inc
mov
add
faddp
mov
sbb
and
add
pushl
daa
lods
push
daa
fcoml
push
mov
xlat
sub
nop
inc
and
adc
scas
xor
pushf
outsb
roll
inc
insb
adc
push
aas
sbb
adc
nop
cwtl
or
daa
into
dec
ja
pshufw
test
fwait
pop
mov
sbb
outsb
push
iret
or
es
stos
jp
nop
decl
out
adcb
add
xchg
aas
adc
mov
dec
decb
xchg
xchg
ja
mov
xchg
orl
in
out
das
int3
xchg
pop
aam
xor
pop
insb
mov
notl
xchg
and
or
xchg
and
sub
mov
push
popf
xchg
jb
out
das
lods
xchg
out
push
xlat
mov
int
mov
add
in
dec
or
leave
and
push
lods
cmp
push
jb
daa
cmp
xchg
pop
jb
jbe
jb
faddp
into
xchg
lahf
push
xchg
xchg
lahf
sub
dec
add
inc
xchg
jmp
movd
xchg
sub
xchg
das
mov
dec
mov
loopne
mov
pop
ltr
lret
lret
or
or
das
fnsave
mov
sub
leave
repz
cmovae
stos
add
lcall
add
pop
insl
push
mov
jp
scas
das
syscall
daa
daa
dec
add
mov
mov
das
xadd
mov
sahf
or
adc
and
add
cs
cmp
xchg
push
ret
fwait
daa
out
push
ja
mov
pop
push
lahf
cwtl
setae
jns
mov
mov
dec
push
je
or
in
mov
mov
jmp
decl
sahf
aaa
jb
addr16
xchg
es
add
cmpsb
test
jno
xchg
pop
inc
xor
jbe
xchg
xlat
fbstp
lods
ffreep
pop
icebp
in
push
add
fsts
sub
decb
cwtl
in
dec
sub
lods
add
adc
or
adc
cwtl
mov
setb
lcall
adc
stos
push
dec
mov
or
xchg
out
pop
aad
aaa
ret
mov
les
cltd
outsl
adc
fdivrl
push
aas
push
and
jg
and
jecxz
in
dec
rcpps
pop
pop
arpl
mov
cmpsl
xchg
sahf
pop
mov
cmp
leave
jo
sub
push
xlat
push
in
sub
cld
add
das
sub
push
add
lcall
lcall
jbe
mov
lcall
lods
test
outsl
xchg
outsl
xchg
fnsave
jb
lcall
mov
filds
daa
daa
pop
leave
cld
lock
add
invd
fwait
das
xor
sub
inc
pop
jb
fwait
decl
xchg
xchg
xchg
fcmovne
outsb
jbe
jle
ljmp
pop
mov
jbe
mov
mov
iret
leave
leave
sub
push
dec
ds
cmp
or
adc
mov
mov
fnstsw
aaa
aas
cmova
in
jns
xchg
jb
fcmove
in
jp
orb
mov
add
loopne
jmp
rorb
or
call
popf
pop
outsb
dec
add
movntq
test
out
popf
push
add
jnp
xchg
push
push
pop
fiadds
add
cmp
or
xlat
test
or
xchg
push
push
inc
sbb
in
orb
mov
incl
sbb
xor
daa
inc
sahf
dec
push
les
mov
enter
mov
daa
daa
daa
daa
scas
xchg
popf
pop
fsubl
sbb
mov
sahf
repnz
aas
std
sahf
or
adc
add
lahf
mov
aaa
js
push
lahf
outsb
lahf
popf
int3
fiadds
movd
leave
jae
setbe
test
daa
ret
lret
lahf
fldt
imul
icebp
jg
ud1
lds
mov
nopl
push
xor
out
sahf
xchg
dec
push
or
cmp
jns
insb
or
test
pushf
test
repnz
xlat
into
adc
dec
in
pop
push
clc
mov
test
rdpmc
dec
mov
lock
ja
in
addb
add
stos
mov
btc
mov
aam
fisubs
out
sbb
or
notl
mov
add
insl
fnstsw
ljmp
pop
lar
out
sahf
out
xor
cmp
ja
jns
inc
or
mulps
mov
jb
femms
xchg
mov
adc
mov
inc
mov
mov
mov
xchg
and
mov
mov
xchg
dec
iret
cmp
jg
mov
rsm
mov
jb
mov
ja
sar
lock
inc
outsl
das
test
cmp
xor
push
or
bswap
mov
pop
ret
add
cmp
fcompl
fistpll
in
scas
cld
push
iret
add
decl
lock
push
popa
test
daa
movsb
cltd
test
dec
movsb
cmpsl
out
pop
ja
daa
pop
push
add
out
lds
jp
pop
dec
dec
cs
nop
add
dec
lods
pop
mov
mov
cmp
mov
lock
bswap
das
push
outsl
push
sbb
dec
and
movsl
out
xchg
push
dec
inc
enter
xchg
dec
pop
push
aas
push
movsl
and
fisttps
ds
pop
sbb
movsl
cmp
ljmp
cmp
push
inc
xlat
push
cmc
and
xchg
xchg
inc
or
pop
xor
push
inc
or
mov
in
call
add
nop
xchg
and
push
jmp
negl
cmpsb
sub
cmpsb
and
into
in
pop
outsl
push
jne
xor
dec
js
cmpsb
xchg
push
add
iret
push
lods
mov
or
sahf
out
sahf
or
or
or
lahf
out
dec
out
or
jns
repz
movups
sbb
out
sahf
out
adc
adc
sahf
out
sahf
adc
adc
sahf
out
pop
sbb
rorb
out
sbb
jb
pop
push
adc
jb
adc
adc
jb
femms
or
jle
xor
mov
add
add
jnp
add
roll
jns
xor
pop
test
out
push
pushf
push
daa
fdiv
xchg
das
icebp
in
cmpsl
aas
push
test
shlb
push
test
xchg
or
daa
int
fstpl
and
sbb
daa
jo
sbb
cmp
test
test
push
xchg
je
jb
pop
jb
fcompl
mov
enter
daa
daa
fsub
test
call
xchg
and
test
push
in
test
das
test
pop
jb
out
popf
fstpt
andb
inc
dec
cmc
xchg
test
test
pop
pop
add
mov
repnz
mov
xchg
out
int3
pop
paddq
loopne
adc
test
and
push
popa
int3
pop
stos
jmp
mov
daa
push
ja
add
inc
repnz
js
pop
mov
stos
ja
es
in
jbe
xor
xchg
sub
das
xchg
stos
stos
stos
and
push
stos
iret
test
and
push
sub
stos
inc
jne
in
push
add
cmpsl
pop
jns
xchg
out
push
popa
popa
pop
imul
out
or
push
or
repz
mov
out
fistpl
clc
leave
leave
adc
mov
leave
int3
aam
dec
daa
add
testl
add
and
add
push
lods
ja
jo
cmp
lock
outsb
push
daa
inc
iret
xchg
xchg
or
lods
jno
add
jns
sahf
fistps
and
or
mov
int3
cmpsl
xchg
iret
enter
mov
sub
hlt
scas
or
sub
mov
dec
idiv
pop
lods
in
dec
pop
add
leave
out
decl
pop
sub
xchg
xchg
xchg
lods
push
lods
pusha
lods
ja
dec
dec
cs
fwait
mov
mov
jg
xchg
add
jb
addr16
jbe
subb
scas
adc
shlb
sub
mov
scas
lahf
emms
scas
jmp
mov
cs
addr16
out
xor
scas
adc
scas
aaa
pop
sub
fsubrs
add
mov
scas
mov
pop
pop
cmp
and
add
and
inc
divl
jo
cs
lahf
or
sbb
jb
sub
in
jb
cltd
xchg
rolb
dec
sub
push
and
jns
scas
nop
sub
mov
dec
ds
or
mov
xchg
sbb
pop
jno
xchg
ja
adc
out
and
enter
popf
cmp
push
mov
sbb
push
negl
in
or
jae
xor
add
daa
daa
iret
or
cs
das
xchg
xorb
arpl
scas
mov
add
ljmp
scas
outsl
daa
mov
ja
cmpsb
pop
mov
cmp
dec
ljmp
shrl
mov
push
add
jo
out
negl
syscall
test
mov
invd
adc
and
or
leave
addr16
inc
mov
seto
inc
jb
adc
das
inc
mov
mov
mov
and
add
das
jo
test
mov
fisubrl
push
in
lcall
je
push
in
and
jns
jp
add
pop
daa
dec
ficoms
call
or
sarl
and
cmp
push
es
mov
test
leave
xchg
mov
mov
xor
xchg
push
mov
pop
shld
js
bound
dec
mov
pop
test
fisubrl
dec
pop
pop
adc
ja
and
fimuls
syscall
mov
dec
repnz
int3
pop
xor
leave
leave
inc
insb
fs
mov
cwtl
in
mov
mov
mov
addr16
mov
repz
add
xchg
add
das
or
push
push
adc
daa
daa
daa
mov
pop
add
add
iret
repz
or
out
fwait
adc
adc
and
push
cmp
lret
sub
outsb
ja
cs
out
cld
add
stos
mov
movq
mov
sahf
xchg
out
rorb
or
addr16
push
ljmp
xchg
adc
sbb
cmp
ljmp
pop
repz
cwtl
das
mov
fstpl
fwait
pop
mov
loop
iret
mov
push
negb
vmread
dec
xorb
adc
pop
jb
enter
xchg
out
cmp
call
in
nopl
clc
loopne
pop
leave
jae
cmp
push
and
ja
jns
sbb
and
sub
push
sahf
xlat
dec
sahf
cmp
sub
sub
out
dec
sub
pop
out
sahf
out
pusha
sub
jns
jo
js
js
pop
pop
xor
xor
mov
dec
inc
pop
repnz
int3
xor
inc
fsubl
out
push
stos
push
into
or
push
decl
repnz
mov
mov
mov
inc
into
dec
adc
sbb
dec
sahf
fldz
push
xlat
adc
jb
mov
addr16
ss
jno
add
daa
adc
cmpsb
test
insl
pop
mov
pop
leave
repz
sysret
ret
js
mov
das
fimuls
pmaxsw
scas
sti
mov
es
cmp
repz
adc
iret
repz
adc
pop
adc
cmp
jo
jge
repz
xrelease
sbb
sbb
cmp
repz
rcrl
and
cmp
repz
fbld
jmp
and
and
push
sahf
out
sahf
and
and
sahf
out
sub
sub
sub
dec
sahf
out
sub
aas
pop
in
in
jbe
pop
addr16
lahf
ja
cmpb
mov
popf
and
and
sahf
out
rcrb
sahf
out
fcomps
loopne
sahf
out
sahf
call
adc
fiadds
mov
sbb
jno
or
push
leave
addr16
mov
sahf
out
outsb
outsl
pop
jge
add
jns
add
add
loop
push
movsl
mov
iret
repz
flds
or
lock
cli
mov
sbb
out
adc
adc
out
sahf
out
adc
adc
sahf
push
push
pop
popa
sbb
sahf
xchg
jo
push
sbb
sbb
out
sahf
cmpsb
push
mov
mov
jns
shrl
outsl
outsw
mov
in
hlt
scas
dec
pop
mov
iret
repz
sbb
pop
and
iret
sub
push
adc
jns
out
adc
pop
adc
enter
pusha
mov
cmp
repz
or
iret
repz
mov
nop
or
adc
cmp
repz
push
add
cmp
outsb
das
jmp
sbb
repz
fcmovne
xchg
push
sbb
inc
ljmp
jns
pop
in
mov
insb
adc
out
push
or
mov
fs
je
mov
push
mov
push
adc
daa
daa
iret
adc
scas
mov
int
cmp
enter
insb
push
loop
mov
push
and
jns
mov
xchg
inc
mov
mov
push
push
add
push
add
bound
jb
das
leave
leave
leave
leave
orb
leave
mov
xchg
xchg
fcmovne
ror
rcr
xchg
xchg
xchg
xchg
jecxz
repz
fmulp
leave
enter
adc
cs
xchg
out
es
and
mov
cmp
dec
inc
pushf
push
out
rorb
out
jbe
pop
mov
jns
mov
dec
aaa
jns
mov
or
in
in
daa
aam
push
fsub
dec
js
jns
in
push
adc
cld
sarl
jl
lahf
adc
xchg
out
sbb
sarl
add
jns
push
add
add
mov
inc
cmp
repz
mov
cmp
jbe
mov
paddusw
cmp
adc
xor
repnz
ret
pop
pop
push
sub
cmp
xor
cmp
iret
sbb
sbb
cmp
iret
jae
push
orb
cwtl
mov
dec
dec
outsb
pinsrw
in
dec
dec
dec
lock
push
ret
adc
pop
sub
out
pop
add
push
add
das
jb
scas
ret
push
add
jo
pop
js
ret
push
push
jle
ret
cmp
enter
mov
mov
daa
iret
or
daa
daa
daa
rcr
loop
lahf
out
repnz
mov
push
pop
push
adc
sbb
es
repz
sbb
and
sbb
enter
sbb
jo
out
cmpsb
xchg
inc
push
pop
movq
orl
aas
test
cs
nop
inc
imul
cmpsb
sbb
mov
sbb
int
pushf
es
fistpll
push
or
xchg
or
fucom
jns
jb
or
jbe
mov
jg
lahf
stos
mov
mov
rcrl
int3
adc
jns
in
paddb
dec
mov
sbb
iret
jg
sbb
leave
jmp
and
repz
pop
or
jg
mov
fsts
lahf
pop
mov
sahf
out
xchg
adc
sub
push
sub
sub
dec
sub
push
cs
das
insb
iret
repz
mov
xor
cmp
xor
xor
int
ss
aas
push
push
cmp
repnz
repz
outsb
cmp
test
mov
lcall
sahf
mov
mov
jbe
jns
loop
in
dec
clc
pop
and
enter
cmc
sub
push
dec
lret
out
jb
out
dec
push
inc
inc
dec
push
jo
js
inc
enter
mov
enter
insl
adc
jns
enter
cmp
mov
push
or
repnz
lret
or
cmp
in
repnz
xlat
repz
push
or
pop
leave
pop
leave
repz
and
adc
adc
leave
inc
push
pop
sbb
setle
in
jno
jle
sbb
dec
mov
mov
les
iret
leave
lcall
inc
lret
lret
push
xchg
es
add
dec
outsb
pop
lea
jns
leave
repz
add
add
cmp
xchg
out
mov
sahf
ja
lods
mov
jns
out
or
or
sahf
out
paddb
lret
movlps
push
sbb
repz
adc
pop
dec
sahf
ja
cmp
push
pop
sbb
out
in
sbb
push
sbb
popf
xchg
pop
bswap
mov
repz
lods
and
mov
ret
frstor
cs
jecxz
fsts
stc
add
pshufw
sahf
sbb
and
dec
ss
lahf
xor
insl
int3
cmp
dec
add
push
add
pause
cmpsl
push
mov
int3
pop
push
push
fucomi
jbe
mov
aas
ret
lahf
push
leave
out
rorb
or
inc
adc
int
decl
int
jmp
int
inc
int
dec
pop
sysret
or
out
or
int
test
xor
push
or
int
jbe
mov
pop
jns
mov
adc
mov
out
adc
adc
loopne
xchg
and
in
int
int
into
repz
mov
nopl
sbb
iret
repz
sbb
sbb
mov
daa
popa
into
insb
into
iret
ja
das
fnstsw
fwait
and
addb
lea
cwtl
mov
dec
jnp
add
fstps
and
daa
jo
or
or
es
lahf
or
pop
lar
in
js
into
push
add
into
jae
enter
iret
adc
repz
or
or
dec
cmp
repz
push
or
js
push
iret
femms
and
js
adc
cmp
xchg
inc
outsl
btc
push
shlb
popf
shrl
movntq
jno
push
stc
pop
iret
das
or
unpckhps
fstl
sbb
lock
dec
pop
mov
push
push
testl
cmp
dec
subl
push
pop
xchg
bswap
repz
sahf
or
xchg
out
fidivs
ror
outsb
mov
aas
xlat
pandn
adc
xchg
out
fsubrp
push
adc
adc
sarl
adc
and
sbb
iret
repz
push
push
pop
pop
in
repz
pusha
and
rcll
adc
roll
mov
enter
pop
mov
mov
repz
add
xchg
jae
jns
not
mov
sahf
pop
pop
or
bswap
repz
push
sub
iret
jae
cmp
dec
pop
adc
outsb
daa
outsl
das
jp
psllq
in
sbb
test
nop
iret
repz
sbb
lock
daa
mov
ror
jmp
add
and
pushf
cmpsl
pop
cmp
or
shrl
hlt
add
out
dec
push
sub
pop
xorl
dec
les
daa
adc
xlat
popf
out
pop
pop
sbbb
outsl
xchg
push
sbbb
das
frstor
pop
leave
out
sbb
aam
or
in
loope
cmovle
aam
xchg
jne
pop
push
dec
cmovne
xchg
aaa
inc
aam
dec
aam
iret
dec
mov
syscall
or
or
outsb
jns
test
cmpsb
pop
xchg
out
sahf
mov
mov
repz
push
jle
aad
dec
fidivrs
dec
push
sbb
cmp
in
insb
cs
sbb
orb
iret
mov
and
or
jbe
dec
adc
pop
pop
push
sub
xor
daa
push
xor
pushf
je
es
mov
das
mov
pop
movhps
sbbb
cwtl
push
mov
scas
push
sahf
call
cmp
decb
or
push
cmp
adc
pop
aas
scas
sub
mov
addr16
js
add
dec
mov
xlat
lahf
jns
xchg
out
das
cmp
inc
push
push
sahf
fucomi
in
pop
das
push
jne
xchg
out
jns
mov
iret
js
mov
das
scas
ud1
inc
sbb
and
dec
xlat
int
jbe
pslld
std
invd
fmuls
fsubrl
out
push
sbb
push
sub
ss
inc
leave
repz
pushf
dec
pop
push
fs
sahf
fldt
jp
test
repnz
xchg
aam
pop
nop
and
jbe
pmaddwd
iret
add
or
sub
jp
scas
jns
out
das
nop
cs
das
cmpsb
cmp
iret
cmp
xor
ja
shlb
push
xor
mov
dec
pop
fs
fstp
xlat
xchg
iret
sbb
pmaddwd
dec
inc
test
push
adcl
and
pop
jns,pn
mov
push
add
xchg
out
pop
sub
pop
xor
cmp
add
setns
insl
lods
push
das
bsf
into
sarl
fimull
fimull
movsb
or
in
negb
mulb
pop
fs
xchg
add
aaa
push
cmpsl
push
pushl
jbe
or
adc
leave
repz
adc
daa
rclb
mov
xchg
pop
add
mov
inc
add
push
xor
add
add
nop
add
aas
sub
push
dec
pop
stos
and
daa
inc
mov
pop
inc
adc
cmp
sub
push
xlat
movntq
cmpsl
add
add
jns
or
or
or
aaa
or
sbb
outsb
scas
adc
adc
outsb
das
and
jbe
popf
push
addr16
das
push
xorps
pop
imull
push
and
fcmovne
repz
push
pop
andb
fucomi
orl
xchg
pusha
loop
jns
sub
fldt
fbld
xor
mov
data16
clc
andl
fwait
orb
add
test
adc
xchg
and
mov
mov
sub
jne
addb
adc
jl
ja
dec
add
movsb
add
lret
sahf
cmpsb
fisttps
mov
cld
adc
inc
jle
test
shll
leave
in
cmp
and
mov
iret
mov
in
call
std
dec
jle
adc
push
ficompl
push
pop
fisubrl
inc
mov
xchg
xor
fcomp
loopne
jb
jle
nop
xor
out
scas
fisubl
in
push
je
repz
rep
push
repz
dec
inc
xor
and
iret
repz
adc
or
jns
iret
repz
cld
repz
hlt
idivb
out
call
pop
sahf
out
outsl
les
mov
xchg
jns
out
mov
aam
push
or
dec
mov
out
sahf
inc
cmp
sub
sbb
sahf
out
push
cld
repnz
fadd
out
sahf
out
mov
out
jns
cmpb
pop
pusha
pop
repz
repz
dec
inc
xor
mov
clc
icebp
mov
fmul
sbb
repz
movsb
nop
das
push
or
jnp
push
push
jl
push
push
inc
icebp
rorb
and
dec
hlt
pop
shlb
jg
sarb
mov
cmpsb
pop
add
notb
jmp
dec
aam
push
pop
pop
push
daa
aas
sbb
testb
data16
dec
orb
jge
les
cwtl
sub
xorb
sbb
icebp
call
push
mov
ret
mov
jp
push
test
add
inc
rolb
leave
adc
adc
or
add
and
addb
cmp
pop
mov
dec
outsb
add
sub
push
mov
push
pop
ror
iret
rclb
les
in
fildll
std
or
mov
pop
in
nop
bound
out
add
adc
xchg
or
or
adc
cmp
push
sbb
push
sbb
add
out
pop
jnp
or
cmp
sbb
lock
out
jns
aam
xor
stos
test
cs
cmc
iret
repz
dec
iret
push
or
adc
pop
and
mov
jns
adc
adc
or
add
push
jns
pop
push
and
and
jns
out
and
and
sahf
fmuls
pusha
fwait
or
clc
shr
pop
jo
orb
inc
pop
daa
sbb
cld
stc
sbb
cmp
cmp
pop
cmpsl
push
leave
out
sbb
push
pop
js
out
sahf
xchg
mov
repz
xor
push
dec
insl
add
push
pop
ja
cmp
repz
mov
bnd
adc
push
dec
insb
dec
stc
fsubs
cmpsb
aas
pop
mov
and
enter
inc
pushf
or
ds
push
ret
mov
adc
xchg
pslld
mov
leave
sbb
scas
mov
ret
inc
and
sahf
mov
sub
inc
rcrb
and
decl
jmp
inc
jno
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
mov
dec
pop
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
jmp
jl
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
ljmp
cli
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
gs
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
jg
pusha
cld
sahf
xchg
pop
lcall
loopne
push
movsl
mov
popa
rcl
std
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
mov
pop
add
add
les
fnstsw
mov
int
add
aas
jno
or
mov
aas
pop
fs
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
ljmp
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
dec
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
aas
fisubs
xchg
cmp
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
ljmp
jl
mov
das
lea
mov
inc
inc
aas
movsl
jmp
jg
sub
jge
ljmp
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
jecxz
shrb
inc
xchg
mov
pop
or
mov
ljmp
cmpsb
hlt
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
incl
adc
xor
push
scas
into
imul
faddp
jge
call
mov
lcall
xchg
cmp
push
andl
dec
dec
gs
std
orl
pop
ficomps
fst
in
loop
fmuls
decb
or
and
dec
inc
mov
lods
nop
mov
lock
push
inc
inc
je
inc
inc
push
dec
std
mov
pop
and
dec
dec
inc
push
dec
inc
aaa
xor
jg
cmp
or
insl
cmp
jbe
mov
dec
inc
jo
inc
popa
push
outsb
jbe
imul
gs
outsl
in
mov
bound
lock
imul
cmp
cmp
iret
xor
fcomps
inc
jbe
je
dec
push
inc
dec
push
add
inc
add
push
push
and
divb
jb
push
inc
inc
inc
imul
dec
inc
lock
jle
jb
gs
pop
inc
fmuls
adc
inc
arpl
adc
sub
mov
sub
subl
dec
pop
mov
inc
push
xchg
xchg
sub
sbb
dec
ljmp
sub
mov
ds
push
fs
or
sub
xchg
dec
popa
xor
jbe
adc
jae
pop
adc
sti
imul
xor
inc
jg
inc
jns
sub
or
dec
lahf
push
push
insl
int
sbb
push
push
cmp
popl
jb
jns
and
push
push
mov
in
inc
rolb
dec
push
dec
dec
lods
mov
pop
in
bound
jbe
mov
adc
dec
test
leave
push
mov
adc
and
int
cmpsb
dec
mov
push
push
popa
jne
arpl
outsl
rolb
dec
dec
pop
xlat
sbbb
push
inc
movl
add
inc
xchg
push
imull
js
cli
jo
mov
dec
sub
mov
dec
sbb
jmp
test
dec
testl
testl
push
imul
test
jb
mov
inc
xor
mov
das
add
or
push
xlat
push
clc
xor
push
dec
push
adc
jp
jg
mov
repnz
push
or
inc
arpl
push
push
cmpsl
or
sbb
ficomps
outsl
mov
sub
xchg
bound
inc
pop
xchg
add
movsb
xor
mov
push
and
data16
mov
test
cmpsl
outsl
lret
fs
outsl
ja
mov
or
ja
sbb
mov
ja
add
inc
arpl
test
adc
mov
nop
pop
push
stc
jl
sbb
ja
lret
push
add
stos
dec
scas
xlat
mov
push
dec
lahf
movsl
subb
dec
and
pusha
push
mov
leave
dec
push
pop
add
sub
pop
push
sub
adc
pop
aas
call
into
add
and
xor
push
push
out
inc
leave
inc
jmp
outsb
dec
fbld
push
in
cmpl
dec
push
mov
les
mov
insl
imul
jne
push
gs
add
sub
adc
imul
dec
outsl
addr16
shll
dec
push
and
pop
les
dec
push
jo
xor
mov
das
xlat
lea
sub
dec
jg
iret
repz
into
push
test
sahf
out
cmp
add
mov
mov
pushf
test
lea
leave
repz
add
pushf
leave
repz
ds
and
daa
lahf
xchg
xor
ja
popa
push
out
mov
inc
insl
pop
hlt
push
xor
xchg
fs
xor
fdivrl
jmp
rclb
decl
mov
sub
mov
sbb
dec
jno
repz
test
call
ficompl
jmp
mov
hlt
movl
imul
std
in
leave
mov
lcall
fldcw
arpl
or
pop
adc
in
pusha
aad
jno
mov
jmp
add
aam
dec
std
test
movsl
cli
test
xor
leave
mov
lods
jecxz
ljmp
jne
filds
or
shrl
cmp
ficoms
push
xlat
enter
mov
push
mov
and
mov
cltd
xchg
mov
mov
or
or
pushl
pop
or
adc
stos
sbb
data16
incl
jbe
jno
add
aad
mov
mov
movsl
in
lahf
xor
mov
sar
leave
pop
js
stc
shrb
push
loope
decl
insl
or
pop
arpl
hlt
push
imul
insb
sbb
xor
dec
add
in
call
add
shl
adcb
cmc
fnstenv
adc
mov
mov
lcall
ficoml
gs
aam
pop
popa
mov
into
pop
cmp
mov
loop
mov
dec
xlat
xchg
fadd
shll
jmp
outsb
xor
mov
jmp
sarb
add
in
add
pop
dec
or
cmp
add
daa
adc
decl
mov
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
shlb
pop
cmp
mov
cmp
lods
insb
mov
in
mov
mov
pushl
je
inc
aad
scas
ja
popf
adc
push
fdivl
or
test
fs
ds
add
ljmp
test
push
or
push
in
decl
xchg
daa
scas
pop
lcall
shlb
add
inc
push
imul
xorb
sbb
jg
push
imul
aam
loopne
rorl
int3
dec
frstor
fistpll
mov
incl
mov
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
scas
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
out
mov
jns
imul
andl
shrb
ss
push
xchg
ja
int3
add
mov
mov
es
lds
or
sub
mov
cmpsl
call
ret
shlb
mov
ficomps
ret
es
pushf
mov
insl
add
ss
jmp
pushl
std
test
jb
push
mov
dec
mov
loop
sub
or
mov
call
mov
fdivrl
fisttpl
aam
roll
clc
mov
push
int
mov
sbbl
mov
ja
mov
out
cli
jo
ud0
cmp
pop
or
pop
std
incl
adc
sahf
gs
clc
sar
imul
push
js
or
push
incl
add
popa
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
decl
filds
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
call
mov
add
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
dec
popa
les
push
movsb
lcall
push
sub
mov
or
sbb
shlb
sub
xchg
into
push
mov
jmp
inc
popl
mov
ja
imul
je
push
insb
imul
aas
les
push
jns
arpl
arpl
fsubrs
push
ja
push
inc
insl
in
inc
mov
jns
inc
jne
outsl
ss
test
xchg
adc
lcall
outsl
cltd
sbb
jo
push
not
or
cmovns
rcr
mov
bound
dec
or
inc
inc
xor
dec
inc
js
push
dec
adcl
inc
jno
idiv
push
xor
pop
inc
cmp
pop
bound
xor
aaa
cmp
popa
arpl
cmp
arpl
xor
xor
bound
ficoml
movsb
popa
push
inc
jbe
pop
pop
inc
shlb
fs
mov
push
cmp
inc
or
inc
mov
int3
dec
pop
mov
and
mov
sub
sub
aam
movsb
mov
mov
ss
jbe
arpl
into
pop
or
inc
aas
ss
cmc
or
mov
mov
inc
mov
sbb
push
sub
sbb
or
adc
cli
xor
insb
popa
jns
push
adc
insb
or
mov
andl
add
aas
inc
add
mov
push
lret
push
in
and
jg
mov
stos
insl
and
jae
popf
int
xor
inc
aas
stos
ljmp
aaa
sbb
fs
sbb
addl
stos
xor
inc
inc
inc
add
rcrb
lods
sbb
aad
dec
add
mov
dec
lea
xchg
sbb
mov
gs
insl
mov
jb
insl
popa
mov
push
lods
pop
xor
xor
push
mov
adc
xor
outsl
insb
jno
push
jns
in
mov
inc
cmp
pop
rorl
pop
sbbl
add
lods
mov
outsl
add
lods
dec
pop
mov
aad
popa
lcall
jo
pushl
pop
je
pop
insl
xlat
mov
inc
sbb
roll
xor
inc
jb
addr16
xchg
add
icebp
dec
popa
jo
addb
lahf
add
outsl
outsl
test
add
push
or
les
push
jno
stos
mov
push
dec
xor
nop
test
mov
add
xor
push
push
int
adc
sarl
jo
push
push
adc
jns
inc
mov
mov
or
movb
and
mov
pop
insb
jle
adc
bound
loope
add
arpl
push
shll
addr16
xorl
xor
xor
ret
and
out
mov
cmpsb
xor
ret
sbbb
testl
loop
lods
ss
mov
mov
scas
js
dec
shlb
hlt
push
inc
cmp
testb
and
mov
aam
sub
or
test
adc
in
add
aaa
cmpb
aaa
loop
sub
enter
test
daa
movsb
add
push
aas
pop
inc
or
and
mov
push
add
inc
add
adc
rcrb
push
negb
les
nop
sub
and
mov
or
pop
mov
int
mov
lcall
add
adc
popa
insl
test
dec
add
outsb
outsl
je
jb
test
jg
or
inc
dec
push
and
jno,pn
push
or
cmpsb
dec
shrd
popa
incl
lea
repnz
mov
mov
mov
ud0
jmp
repnz
in
push
pusha
ljmp
lret
xchg
iret
ss
cli
push
cld
push
imul
lahf
xchg
es
add
add
mov
loopne
add
or
or
pop
mov
mov
daa
aam
cmp
add
pop
add
mulb
add
pop
mov
add
sbb
add
mov
xor
xor
push
test
mov
mov
cs
jns
sub
push
loop
adc
inc
or
push
add
add
test
add
enter
dec
add
les
lods
add
sbb
dec
and
jb
cmp
xchg
add
lret
mov
dec
mov
in
inc
in
dec
or
rcrb
jb
push
xlat
out
cmp
jb
add
ret
xor
add
aaa
sbb
mov
or
add
hlt
mov
hlt
inc
jmp
mov
jp
pusha
jecxz
cmp
mov
lea
push
lods
mov
inc
sbb
push
and
lea
jecxz
or
mov
cmpsb
lods
xor
and
push
scas
fnstenv
ret
aam
push
fidivl
or
test
les
dec
fucomi
gs
add
fld
ja
jne
jmp
mov
inc
sahf
ja
jp
and
call
cltd
xor
jmp
or
ljmp
jnp
icebp
fistl
mov
jns
sub
or
cmpsl
frstor
jb
mov
pusha
adc
xor
push
movsb
or
xor
movsl
xchg
clc
dec
pop
out
cmp
jo
xor
outsl
out
out
mov
mov
sbb
push
movzbl
or
xchg
fadds
fidivl
test
leave
imul
mov
cmpsb
int3
cmp
jbe
mov
pop
mov
add
aad
push
sub
pop
mov
xor
mov
dec
fistpl
sub
stos
daa
jecxz
in
push
mov
aaa
andb
push
pop
ret
cmp
xor
mov
mov
adc
call
add
test
adc
cmp
push
sub
pushf
and
aad
or
mov
es
jne
push
inc
imul
add
out
movsl
repz
les
mov
inc
dec
jmp
bound
inc
or
in
inc
dec
and
mov
mov
xchg
testb
push
inc
adc
or
xchg
mov
loopne
shrb
mov
movsl
icebp
ret
mov
hlt
cld
add
inc
sbb
xchg
pop
rclb
fs
enter
out
adc
push
push
mov
push
or
mov
leave
push
xchg
jno
pop
mov
cmp
pop
add
ja
loopne
jo
or
push
xchg
mov
adc
icebp
cmpsl
and
lock
test
je
fiaddl
lods
push
clc
jp
dec
pop
push
jno
or
ret
jmp
mov
fs
pop
cltd
test
pop
cmp
sahf
lea
inc
sub
mulb
or
sbb
add
jno
lret
addb
pop
dec
mov
push
aam
je
inc
test
jb
jbe
movb
dec
adc
add
push
mov
or
aam
lea
cs
or
lds
mov
cmp
adcl
or
jge
rcrl
pop
andb
add
jbe
cmpsl
je
rcr
dec
rcll
in
add
dec
sarl
and
or
insb
loop
rclb
add
push
add
repnz
pop
push
push
cmp
xlat
hlt
or
mov
movsl
mulb
mov
hlt
xor
inc
fs
jne
jge
in
mov
adc
push
mov
fs
insb
push
aas
adc
xchg
sbb
jb
push
sub
dec
and
sub
adc
push
je
imul
and
cmpsl
insl
push
push
insb
fdiv
sub
inc
mov
xor
or
stc
adc
pop
aam
add
push
out
mov
xor
push
sbb
or
js
pop
or
rolb
inc
leave
mov
scas
dec
loop
popa
or
stc
jp
cmc
sarb
push
testl
mov
mov
je
or
inc
or
xchg
pop
mov
jl
fisubs
push
gs
xchg
sbb
test
push
pop
pop
inc
ja
mov
rolb
mov
roll
xchg
ja
push
jnp
int
pusha
imul
jl
subl
mov
call
xchg
and
push
cmp
in
add
xchg
and
repz
add
cmp
sti
nop
add
cmp
fs
cmpsb
push
inc
push
adc
xchg
pop
popa
sub
enter
push
push
sbb
mov
jo
mov
push
push
jge
mov
pop
push
call
aam
or
call
insb
in
push
pop
jne
xchg
lea
xor
mov
or
rclb
dec
cld
nop
imul
sbb
fmull
jmp
cs
push
out
mov
lock
add
pop
pop
sub
inc
in
dec
adc
call
shrb
pop
insb
mov
lods
or
iret
mov
mov
xchg
xchg
sti
mov
enter
sbb
jl
jl
dec
call
in
or
push
inc
push
push
mov
repz
or
or
mul
push
dec
sub
in
push
movsb
mov
sbb
sbb
mov
iret
sub
mov
xchg
fnstsw
in
shl
or
popf
jle
hlt
ficoml
jmp
inc
push
xor
sets
mov
repnz
sub
loope
lea
ffree
std
es
ret
sub
or
in
daa
outsl
mov
push
jecxz
and
jnp
inc
movzbl
imul
mull
xchg
call
sbbb
popf
mov
sub
pop
lods
jge
lds
and
push
pop
lahf
mov
pusha
stos
mov
movsl
gs
push
or
xchg
je
ljmp
bound
std
add
add
hlt
push
jbe
and
sub
push
jns
adc
mov
loop
jo
popa
sbb
mov
jne
push
pop
ss
adc
xchg
mov
aam
push
jecxz
movsb
and
pop
mov
xor
mov
xchg
sbb
push
sbb
sbb
add
xlat
fsubr
adc
xor
add
into
cltd
sbb
or
ficoml
dec
fdiv
lret
loop
sbb
rorl
pop
ja
pop
pop
pusha
push
int3
call
push
pushf
adc
mov
cs
sub
pop
pop
mov
or
mov
out
fnsave
andb
adcl
stc
and
push
fstl
out
cmp
push
jb
call
push
idivl
pop
test
xchg
xlat
rolb
addr16
cmp
shl
mov
ja
les
push
adc
jno
pop
cmp
cmpsb
lea
dec
insb
and
call
push
lods
mov
rcrb
add
stos
fildl
or
xor
in
push
cmp
xchg
add
out
xor
repnz
lret
fwait
test
cmp
sahf
call
xor
ss
andb
ret
add
push
cmp
mov
jecxz
pop
mov
jb
jmp
arpl
enter
sub
call
or
mov
lea
mov
insl
mov
cmpsl
mov
add
mov
dec
and
or
and
jle
push
adc
pop
mov
pop
dec
jb
cwtl
pop
lea
and
jecxz
add
mov
rep
std
fcoms
mov
movsb
adc
fcmovnb
pushf
lods
push
mov
adc
jbe
xchg
cmpsb
je
ss
fisttpll
aas
mov
or
sub
leave
dec
mov
cmpsl
fadds
rep
sbb
sbb
jo
push
aad
shlb
pop
scas
js
push
sbb
inc
mov
or
pop
fs
outsl
push
jb
add
or
je
ljmp
xchg
stos
add
lret
push
pusha
pop
xchg
lea
cltd
out
out
je
cmpb
adc
cmp
scas
sbb
addl
sahf
pop
fildl
insb
or
adc
popa
arpl
add
pop
xchg
ret
cltd
xor
sub
push
iret
movsl
or
in
lea
sbb
and
into
cmpsb
mov
fiaddl
mov
divb
leave
push
mov
cmc
xor
adc
pop
xor
inc
sbb
and
aas
js
mov
inc
cmp
mov
std
xlat
je
fisubrs
ficoms
or
push
adc
push
mov
xchg
insb
or
and
scas
dec
adc
adc
push
pop
sbb
scas
xchg
sbb
adc
add
add
call
sbb
jmp
cmc
jbe
xor
pop
dec
pushl
add
adcl
loopne
mov
dec
in
outsl
imul
pop
or
pop
adc
outsb
adc
inc
ficomps
jg
scas
sub
push
stc
divl
cmp
jl
mov
int3
in
sbb
xchg
mov
loopne
ds
enter
and
mov
jno
sbb
dec
lds
jbe
insb
loope
mov
push
leave
outsb
mov
es
xchg
sbb
or
push
push
fsub
adc
or
mov
cmp
mov
ja
clc
sbbl
push
mov
mov
pop
and
sbb
mov
je
in
in
in
cmp
mov
cmpl
jge
fcomps
fwait
lea
adc
popa
mov
imul
es
int
push
mov
mulb
pop
aam
fcmovb
dec
out
sub
scas
sbb
jne
mov
jne
aad
cmpb
push
cmp
std
fidivrs
cmp
xor
sbb
push
aam
popf
punpcklbw
xor
insl
dec
int3
mov
xor
loopne
adc
jmp
lcall
inc
test
jne
sbb
inc
enter
cmc
inc
xchg
data16
push
cmp
shr
mov
mov
pop
mov
in
enter
lods
lods
dec
xlat
test
push
mov
jecxz
repz
loope
test
mov
lea
jb
push
int
fstps
inc
add
dec
adc
or
dec
cmp
int3
nop
lock
adc
sbb
rclb
jl
clc
pop
xchg
mov
fdivrs
jne
cld
jb
add
sbb
sbb
adc
adc
in
jne
jo
dec
jmp
or
push
enter
inc
pushf
sbb
fstpl
mov
or
gs
ljmp
push
add
test
out
enter
add
jl
in
push
jl
cld
mov
call
mov
mov
add
or
dec
ss
inc
and
gs
xor
addr16
xchg
popa
inc
dec
pop
jg
ja
and
je
or
or
je
mov
into
test
lock
or
outsb
push
or
inc
push
outsb
sub
andl
inc
fs
ss
add
call
mov
adc
xor
fbld
ljmp
xlat
lcall
pusha
popf
rorl
stc
cltd
insb
cld
adc
test
push
and
or
gs
sub
mov
add
push
rcrb
les
jns
aam
stos
hlt
lods
jbe
mov
repnz
jne
xor
adcb
push
shlb
outsb
orb
into
jae
inc
adc
mov
addr16
jmp
cmp
negb
cld
cmp
push
loopne
ja
jge
loopne
push
mov
mov
int
xchg
push
inc
rcl
fmuls
add
jns
and
rcll
dec
sbb
dec
inc
inc
xor
frstor
jbe
add
pushl
lods
fnstsw
leave
jnp
mov
ss
stos
std
std
cmp
jmp
movhps
rcll
cld
cmp
cli
adc
inc
bndldx
ret
rorl
xor
sbb
mov
loopne
or
push
push
mov
sub
testb
xchg
xchg
lret
adc
mov
in
mov
jo
cld
sub
add
ss
dec
incb
push
jle
lock
adc
add
xor
es
sbb
outsl
aaa
dec
sbb
scas
outsb
mov
jne
add
pop
mov
in
add
mov
and
or
aaa
and
fldl
imul
push
sarb
dec
sbb
fcoms
jae
subl
push
pop
sbb
loopne
jmp
mov
add
orb
jmp
insl
test
fcmovnb
push
xor
mov
adc
or
shll
loopne
aam
rorl
dec
adc
push
jo
daa
fdivr
add
pop
xchg
adc
cmp
scas
pop
cmp
push
or
mov
hlt
popf
mov
adc
mov
test
cmp
inc
jecxz
fwait
xor
pushf
enter
call
pushf
cmpsl
pop
ds
mov
sub
inc
jbe
pop
dec
mov
dec
or
dec
gs
adc
push
imul
push
or
enter
gs
fsubs
jne
xor
adc
std
jmp
and
xor
pop
call
inc
jmp
in
in
pop
and
or
jle
or
xor
mov
push
mov
pop
adc
rcrb
sarb
and
mov
lahf
push
shll
inc
cmpsb
movsl
ret
adc
cmp
sbb
pop
sub
outsb
mov
ds
hlt
sub
sub
adc
push
call
in
test
dec
lcall
or
call
mov
cmp
pop
lret
mov
enter
sbb
cmp
jl
shlb
jne
mov
jmp
or
fs
movsb
cmp
or
lcall
push
or
rcrb
add
shrl
rcl
or
mov
push
push
adcl
mov
mov
addb
outsb
mov
call
out
pop
test
dec
xchg
ljmp
sbb
push
call
pop
jo
out
mov
shrl
ljmp
outsl
loopne
mov
test
mov
sbb
mov
push
icebp
mov
mov
mov
jle
push
adc
mov
lea
sub
xchg
outsl
mov
das
stos
push
fucomip
cmp
shrl
je
cmp
jbe
cwtl
or
andl
add
or
nop
mov
push
and
std
pop
jbe
sub
push
das
jne
or
push
loope
jnp
sbb
push
in
jo
daa
dec
xchg
aaa
lock
or
pushf
cli
adc
sbb
shlb
jae
add
loop
sbb
dec
test
inc
jmp
pusha
mov
sbb
into
or
add
lcall
mov
scas
jb
clc
mov
data16
inc
test
mov
or
push
cld
jbe
nop
imulb
pop
fwait
jmp
push
mov
test
mov
sahf
mov
clc
sbb
lods
add
lock
pop
mov
into
jecxz
cmp
call
or
cmpsl
inc
adc
adc
movsl
pop
add
and
gs
loopne
sti
push
push
dec
inc
cmpsb
je
out
fldenv
lea
mov
test
jp
xchg
cmp
dec
movsl
loop
cmpsl
jl
roll
push
and
insb
and
pop
sbbb
movsl
mov
push
push
xchg
xchg
aam
xor
pusha
sbb
and
push
or
push
push
push
cmpsb
aam
in
pop
aaa
aad
pushf
inc
cmp
cwtl
popa
sar
jecxz
fsubrl
call
test
fsubs
faddl
push
mov
fcom
jae
js
pop
scas
dec
je
out
xchg
jae
js
push
push
stos
shlb
cmp
dec
add
or
orb
lods
in
adc
xor
or
addr16
mov
jns
dec
shrl
pop
sub
add
or
mov
jmp
rcll
add
push
xchg
inc
xchg
jmp
je
add
mov
mov
push
add
or
int3
dec
push
hlt
into
push
fsts
jo
adc
jne
sub
out
and
cmp
repz
push
mov
orl
pop
mov
sub
dec
or
test
add
sub
daa
imul
dec
push
dec
push
insb
push
loop
mov
push
push
imul
pop
mov
rcrb
call
mov
jmp
push
imul
pop
addr16
insb
lods
icebp
jmp
sbb
push
mov
push
dec
cld
jne
into
xor
loope
inc
addr16
ss
movsb
pusha
push
cmp
jne
push
and
sbb
and
or
je
int3
jecxz
xchg
andl
mov
jns
lds
mov
jmp
nop
or
sbb
xor
add
sbbl
sarl
icebp
call
pop
mov
mov
inc
call
cld
push
aaa
mov
push
andps
lods
xchg
push
mov
int
xchg
add
movsb
xor
mov
sbb
ljmp
mov
push
push
stos
ret
negb
sti
sbb
sbb
dec
xor
mov
jmp
jmp
mov
pop
xorb
movsb
inc
or
ss
je
pop
push
adc
movl
add
outsl
mov
ja
ret
dec
ss
fdivrl
std
jmp
inc
out
xchg
jne
add
push
call
insb
out
and
in
movsb
jmp
js
in
jb
sbb
test
fnstenv
mov
mov
adcl
xchg
pop
add
cmp
clc
xor
xor
icebp
mov
inc
push
pop
adc
add
cmp
cld
inc
bound
call
mov
pusha
jo
push
fiaddl
push
add
or
mov
sub
fdivl
or
mov
cwtl
or
popa
mov
or
cmp
test
test
adc
shr
push
inc
loopne
fs
pushf
adc
mov
mov
inc
mov
movsb
dec
andl
cmp
jg
push
dec
lea
pusha
mov
or
call
lret
xor
push
icebp
mov
add
adc
and
scas
clc
dec
insb
nop
push
decl
or
inc
inc
dec
jne
push
adc
cmc
movzbl
add
je
mov
movsb
nop
mov
ret
and
rcl
jge
popa
lea
incl
nop
sbb
rcl
sub
ss
lods
fstpt
shr
mov
adc
cli
sub
push
push
test
xor
or
add
mov
and
ja
shlb
and
mov
rolb
jae
inc
pop
rorb
push
inc
addb
inc
ss
and
iret
and
xor
ljmp
gs
sbb
add
pop
jmp
dec
nop
adc
inc
call
xchg
daa
inc
das
dec
andb
lock
call
pop
outsb
imul
outsb
les
dec
push
jp
dec
dec
push
and
inc
sub
icebp
test
clc
cmp
mov
ss
sub
mov
sub
imul
enter
lods
mov
add
lock
enter
mov
inc
inc
ss
adc
mov
xorl
js
nop
jge
cwtl
or
out
xchg
inc
push
push
add
enter
popa
addb
pop
inc
and
das
mov
cmpl
out
xor
or
jge
dec
xor
pushf
mov
dec
sbb
add
jge
sub
ficoms
pop
orl
pop
outsb
sub
cmp
and
xchg
xor
adc
mov
sbb
cmc
and
adc
cli
cmpsl
lds
or
pop
popa
pusha
cmpsb
nop
dec
andl
cmpsl
lahf
rorl
cli
or
arpl
sbb
or
jp
jle
in
inc
cmp
call
cmp
out
call
call
mov
push
cli
js
dec
aam
inc
adc
mov
iret
call
and
pop
dec
adc
mov
adc
fucomi
fildl
sarb
fdivrl
cmp
or
and
add
idivl
pop
psubsb
add
call
mov
scas
pop
jmp
pop
test
cld
xchg
pushl
cmp
xorl
mov
xchg
add
mov
test
loop
pushf
xchg
inc
popf
cmp
xor
loopne
xor
jecxz
pop
push
into
cmp
xor
fnstenv
adc
sbb
lds
shrb
fists
xchg
clc
mov
and
push
mov
cmpb
jne
xchg
sbb
aad
inc
div
cmp
or
es
pusha
add
ss
repz
mov
pusha
lock
test
cmp
movsb
jne
sbb
fiadds
adc
dec
incb
idivb
push
push
es
cmpsb
add
loopne
outsb
cwtl
movsl
push
and
push
push
fs
into
dec
mov
cmp
shll
mov
sbb
cmp
es
or
shufps
or
testb
dec
ja
iret
dec
push
loope
dec
cld
add
or
in
ficomps
loope
es
cltd
xor
sub
push
fwait
xchg
int3
inc
pop
push
mov
js
sbb
js
cmp
add
xchg
sbb
dec
cmp
push
imull
push
cmpsb
sbb
inc
adc
dec
mov
and
roll
jo
mov
adc
shl
enter
push
xchg
pop
dec
sub
shr
aad
xchg
cmp
movsl
adc
mov
sbb
mov
push
mov
test
push
push
push
sub
xchg
pop
shrb
and
pop
loope
subb
pop
rcrl
cmp
mov
and
nop
fnstenv
and
inc
xor
das
roll
push
roll
mov
sub
ss
adcb
pop
nop
popf
roll
lret
into
imull
pop
lods
lret
call
nop
sbb
movl
or
mov
inc
dec
xchg
cmp
cs
pusha
nop
push
in
nop
insl
inc
out
je
mov
or
mov
dec
mov
xchg
xor
sub
cmp
repz
adc
add
mov
pop
orl
jmp
push
push
fwait
rol
out
mov
pushf
daa
mov
lock
popf
divl
daa
pop
nop
add
and
dec
mov
pop
outsb
add
inc
insl
inc
mov
repz
push
mov
ror
mov
fisttps
mov
add
insl
inc
out
push
adc
inc
bound
inc
int3
add
push
rolb
or
adc
inc
push
lahf
daa
ljmp
adc
rolb
inc
inc
pop
mov
dec
or
insb
and
jo
cltd
adc
dec
pushf
fildl
cld
std
push
pop
jmp
cmp
je
mov
add
sub
push
scas
repz
lahf
ret
lea
adc
add
pop
add
or
add
add
add
inc
mov
lret
std
jo
cmp
je
xchg
add
pop
leave
sbb
test
xchg
sbb
push
push
push
gs
pop
inc
or
dec
fisubs
sbb
and
cld
add
lock
fisttpll
or
mov
jns
or
xchg
or
sbb
or
scas
in
push
int
add
adc
pop
adc
adc
sahf
lret
stos
cmp
or
popa
in
adc
adc
pop
lcall
xchg
adc
push
inc
scas
adcl
in
push
push
inc
xchg
or
sbb
pop
and
pop
leave
mov
sbb
jb
iret
pop
mov
mov
sbb
mov
sbb
sbb
sahf
ja
je
push
sbb
xor
xor
sbb
iret
push
push
inc
negb
pop
and
aas
inc
jne
add
add
sub
mov
add
movl
dec
mov
pop
xchg
and
lods
pop
lcall
xchg
push
in
push
in
imul
add
sub
rcl
ret
sub
xlat
in
in
out
sahf
sub
mov
add
call
pop
repnz
call
mov
jmp
iret
enter
push
cs
jb
jmp
jmp
inc
lcall
xchg
ja
mov
xchg
aad
in
cmp
scas
in
mov
mov
or
je
ss
jae
lock
dec
and
inc
icebp
cmp
das
addr16
call
repz
das
nop
repz
std
hlt
hlt
lret
stos
cmp
hlt
xchg
std
iret
enter
cmc
cmp
xor
mov
sbb
and
add
cmp
push
sar
aas
stc
stc
and
cli
cli
pop
enter
sti
sti
fisubs
aaa
xchg
cld
cld
cld
je
cld
push
push
repnz
nop
shlb
mov
xor
sbb
in
cld
xor
dec
ret
push
dec
call
jb
lahf
sbb
mov
push
jg
repnz
fwait
or
jecxz
lret
stos
pusha
nop
jecxz
xchg
xor
mov
addl
rorl
out
sbb
scas
call
cltd
sti
cltd
and
adc
or
jae
jmp
xchg
daa
and
test
in
cltd
or
adc
push
jmp
xorl
repnz
lock
cmp
cli
or
aas
repz
add
push
mov
inc
jb
stc
dec
push
cmp
imul
mov
xchg
clc
repnz
cltd
jb
push
stc
test
xor
sti
and
movsb
sti
sti
xchg
or
push
lret
sub
cld
jmp
mov
cmp
push
filds
inc
mov
clc
mov
xorl
repnz
jecxz
inc
clc
inc
mov
inc
and
xor
add
or
stos
lret
stos
xchg
fdiv
out
rcll
testl
mov
xchg
push
jmp
sub
nop
mov
rclb
or
mov
mov
repnz
loope
notb
pop
or
ss
repnz
inc
repz
and
test
sub
or
xchg
adc
out
notb
mov
xchg
mov
dec
loope
cmp
xchg
clc
cmp
pusha
sbb
push
inc
test
repnz
cmc
cli
hlt
xorb
mov
xlat
inc
pushw
out
sub
data16
test
push
stos
mov
adc
push
dec
xchg
mov
loope
loope
pop
pop
and
loop
pop
xchg
hlt
mov
lret
hlt
in
mov
repz
and
aam
mov
xor
adc
and
test
mov
mov
cs
or
and
test
mov
mov
cmpsl
repnz
or
icebp
in
pop
xchg
icebp
icebp
das
xchg
pop
and
push
adc
bnd
popa
leave
pop
repnz
xchg
cmpsb
cmc
cmc
mov
icebp
mov
lock
pop
dec
push
cwtl
icebp
or
jne
stc
sbb
dec
icebp
xor
add
push
je
adc
or
out
lock
mov
imul
jmp
in
sbb
sarl
push
sub
ffreep
push
inc
scas
xchg
movb
aaa
inc
cmp
xor
add
aad
pop
mov
lods
or
mov
mov
add
jne
in
mov
lods
stc
xor
jmp
xchg
aam
adc
dec
add
ss
xorl
scas
imul
pop
add
dec
push
nop
push
jns
ds
imul
dec
push
aaa
or
push
lahf
repz
adcl
stc
xor
cli
push
jecxz
repz
iret
repz
mov
sbb
mov
push
aad
in
xchg
gs
dec
sarb
rep
or
mov
xor
and
mov
xchg
xor
imul
jns
inc
cmp
and
nop
sbb
adc
ficompl
pop
pop
mov
mov
cmp
xchg
or
leave
inc
or
xchg
lods
jle
sbb
jg
push
xor
adc
sbb
push
shll
pop
inc
push
or
mov
mov
ficoms
mov
add
sub
arpl
ss
icebp
sahf
or
rorb
inc
mov
lea
daa
sub
push
sbb
ret
adc
aam
or
ror
pop
inc
inc
sbb
add
inc
addl
push
push
and
xchg
es
adc
sarb
xor
jo
lret
adc
jmp
adc
insb
dec
xchg
movb
in
mov
in
roll
in
adc
popf
adc
inc
xor
adc
das
pop
xor
adc
fldl
stos
adc
sub
push
or
adc
ret
lret
hlt
psubsw
xchg
hlt
cmp
sub
xchg
je
int
jb
pop
add
and
mov
jbe
gs
adc
inc
add
movsb
andl
push
inc
add
aaa
or
add
xor
dec
lds
roll
pusha
mov
rorl
mov
adc
imul
cltd
sbb
inc
adc
orb
xor
nop
pop
xchg
fsts
mov
rcrb
pop
test
inc
adc
push
xchg
mov
cmp
xor
add
lods
clc
sbb
push
inc
add
or
mov
ret
pop
mov
pop
adc
xor
test
or
jg
addr16
or
je
fldcw
loop
mov
adc
sub
sti
iret
add
sbb
les
adc
cmp
add
add
sbb
sbb
sbb
pop
cs
sbbl
lds
int
nop
dec
rcll
jmp
fnsave
or
or
jb
inc
cmp
adc
and
inc
fstpl
je
or
push
lret
or
into
xor
inc
and
cmp
pusha
pop
xor
inc
cmp
lds
xor
or
test
pop
es
sbb
and
nop
cmp
rorb
dec
cmp
inc
cmp
dec
dec
dec
xor
and
sbb
dec
dec
sysenter
cld
and
push
sbb
mov
sbb
push
or
add
cmp
xor
mov
mov
cmp
hlt
lcall
adc
add
cmp
dec
shll
lcall
sbb
movsl
aam
push
mov
pop
inc
inc
ja
fs
adc
lds
cmp
push
stc
in
cmp
rcrl
jp
aam
cmp
dec
les
mov
sbb
xor
cmp
push
mov
inc
inc
data16
cmp
push
sbb
roll
adc
cmp
sub
shr
mov
and
xor
popa
jmp
popf
cmc
push
dec
movsl
lret
loope
and
jl
imul
je
and
rclb
cmp
xor
aam
xor
nop
in
cmp
dec
repnz
inc
cmp
lock
inc
out
gs
xchg
or
cmp
movsl
inc
sbb
xor
push
xor
sub
cmc
data16
loope
inc
ja
or
jnp
inc
cmp
dec
int
testb
push
bound
jl
out
push
cmp
ret
dec
sbb
aas
test
mov
xchg
movsl
sub
mov
or
mov
inc
mov
and
es
loopne
add
cmp
adc
and
cmp
prefetchnta
lsl
pop
inc
andb
aaa
sub
push
daa
dec
mov
inc
add
wrmsr
and
movsb
adc
cmove
nop
sahf
xor
mov
mov
dec
ja
xchg
and
and
je
xchg
cwtl
cs
ss
mov
inc
ret
or
mov
loop
xchg
andb
push
adc
xor
sub
imulb
push
sbb
and
shll
push
loopne
sub
xor
push
test
and
adc
dec
sub
or
mov
dec
sub
sub
lret
sbb
js
je
loopne
inc
push
sar
mov
aad
sbb
lahf
call
jge
sub
xchg
sub
sub
lods
aam
xchg
push
xor
sbb
divl
and
mov
mov
mov
adc
fwait
push
je
shr
je
sub
pop
std
je
aam
sbb
pop
sub
cltd
rclb
mov
lret
test
mov
sub
shl
fs
sub
or
mov
sub
xor
or
imul
mov
inc
leave
push
jno
nop
loopne
test
add
jo
sub
outsb
dec
call
cmp
test
mov
out
mov
icebp
movsl
test
mov
mov
inc
pop
es
sub
sub
adc
shrb
nop
add
xor
mov
rclb
int
sub
and
stos
mov
mov
push
dec
adc
dec
sbb
jb
nop
add
sub
sub
gs
push
cmp
sub
adc
cld
jge
sarb
mov
call
loopne
mov
jo
shlb
sub
in
aaa
out
imul
nop
mov
sbb
cltd
sub
pop
movsl
test
popa
addr16
sub
ds
lds
outsb
pop
sub
jmp
rcl
cmpl
cltd
sub
lds
dec
pusha
and
loopne
and
xchg
mov
or
shrb
sub
rclb
je
nop
aam
popa
int3
pusha
sbb
cs
into
shll
and
fiaddl
inc
sbb
rorb
adc
gs
bound
ffreep
sub
and
fstl
jecxz
adc
pop
sbb
sub
sub
push
aam
xchg
gs
sub
sub
test
imul
adc
pop
sbb
push
loopne
sub
inc
test
call
and
or
jo
rolb
scas
add
int3
sbb
lock
arpl
addr16
cmpsl
inc
insb
or
dec
stos
pop
or
or
adc
sub
jl
aad
fucom
pop
mov
mov
xor
or
sub
cmpsl
aad
cmp
fsubrl
push
or
das
adc
call
sub
popf
push
orl
cltd
nop
sub
nop
add
jle
jmp
fisubrl
add
sti
lret
mov
je
lods
out
mov
pop
sub
jbe
scas
inc
xchg
sub
addb
add
cmp
jmp
and
pop
and
shrb
mov
sub
ret
imul
jp
cli
xchg
push
pop
out
dec
push
inc
sbb
call
mov
sub
fisubrl
xchg
or
sub
stos
and
sbb
gs
sub
mov
jg
jae
adc
mov
orl
dec
sub
inc
inc
inc
xchg
xor
cmp
inc
inc
inc
js
push
inc
inc
inc
inc
pop
dec
dec
pop
cmp
dec
and
cltd
nop
sub
das
rcll
call
adc
xchg
or
enter
sub
rolb
cmp
mov
jle
sub
pushf
and
mov
pop
xchg
icebp
leave
jmp
dec
insb
ja
xor
imul
and
xchg
xor
dec
xor
movsl
daa
icebp
mov
repz
push
pushf
stos
mov
in
pop
xchg
and
punpcklwd
movsb
or
lcall
cwtl
ficoml
dec
pop
ret
sub
outsb
cmovno
bt
sbb
jl
enter
jbe
jb
or
lods
ret
mov
adc
mov
dec
add
popf
test
ljmp
ja
or
add
addr16
mov
dec
inc
scas
add
pop
adc
push
loope
test
rolb
js
fwait
jb
xchg
add
add
roll
mov
sti
add
les
sbb
cwtl
xchg
push
add
mov
add
mov
pop
js
in
jo
pushf
or
mov
lcall
pop
repnz
and
push
mov
repnz
push
sub
movsb
push
orb
mov
add
js
rcrb
push
test
jae
inc
push
pop
shlb
cmp
nop
dec
cmp
es
pop
insb
cmp
arpl
adc
loop
push
jae
mov
rcll
cwtl
jnp
dec
dec
xchg
inc
pop
dec
inc
mov
mov
leave
push
mov
movsb
xor
out
or
call
pop
mov
rolb
jl
loopne
or
in
cli
stc
imul
popa
jg
dec
ret
sub
outsl
sbb
popa
test
mov
popa
sub
leave
xchg
xchg
mov
xchg
popa
add
mov
fwait
roll
das
push
loopne
inc
pop
hlt
out
or
scas
inc
inc
pop
enter
cmpsl
loope
jl
inc
stc
push
js
add
notb
and
int
jbe
lcall
stos
xchg
fbld
dec
or
sub
inc
inc
cmp
ret
jmp
psubsb
adc
xchg
and
jbe
fimuls
call
push
cmpsl
pop
jmp
nop
into
addr16
and
inc
mov
out
adcb
push
cwtl
dec
notl
pop
push
shll
or
sub
push
inc
xchg
ret
adc
and
cmp
pop
or
sub
push
or
push
mov
sbb
popa
out
fildl
rcrb
pop
inc
sub
adc
pop
push
add
adc
pop
mov
fnstcw
mov
jo
or
and
add
or
push
xor
cld
push
or
xor
loopne
add
and
add
jmp
push
mov
imul
pop
clc
cs
call
ja
add
scas
xchg
pushf
xlat
add
call
pop
jo
mov
imul
inc
xchg
inc
push
int3
push
or
push
xorl
mov
sbb
push
xor
lea
in
xchg
inc
or
and
insb
inc
call
nop
jnp
aaa
xchg
push
in
lea
adc
nop
fs
sbb
sbb
xchg
sbb
inc
or
mov
xchg
sub
cmpsl
cmp
xchg
das
push
test
les
xchg
push
mov
pop
adc
cmpsl
adc
sbb
loop
xchg
push
jo
call
mov
add
xchg
mov
call
movsb
mov
cli
add
incl
jl
je
sbb
ret
call
xchg
and
dec
sbb
cmp
push
aas
orl
rolb
push
cmp
add
or
jo
mov
cmp
adcl
pusha
repz
dec
addl
movsb
test
pop
push
insl
in
mov
jns
push
cmp
xor
push
fcompl
sub
repz
sub
adc
push
pusha
arpl
shrb
xor
roll
out
es
or
sub
das
mov
inc
and
sahf
and
fwait
add
repnz
push
cld
mov
nop
inc
and
push
add
jmp
incl
jb
xchg
outsb
mov
inc
mov
xor
push
inc
call
setl
inc
mov
mov
in
ss
call
add
fsubl
xor
cmp
call
or
push
sub
ljmp
lcall
add
cmp
inc
jmp
dec
jmp
adcl
jp
fimuls
inc
fiaddl
sbb
inc
adc
inc
jmp
inc
inc
inc
pop
je
pop
xorb
shl
rcrl
push
and
inc
pop
mov
push
or
mov
shr
adc
and
add
push
mov
xorb
inc
xchg
push
add
je
rcrl
pop
and
cmp
leave
or
push
mov
jbe
fcmovne
call
xor
inc
jmp
fidivs
add
adc
push
push
cli
enter
insl
jecxz
and
cwtl
jae
jp
dec
out
sbb
cmp
adc
loopne
cmp
mov
add
loop
pusha
popa
push
mov
dec
andl
mov
add
movsb
jno
mov
and
adc
xlat
push
adc
lock
cmp
mov
jb
cmp
mov
mov
sub
jmp
push
push
or
inc
jecxz
pusha
xor
repz
aam
stc
daa
adc
aas
in
ja
cmp
stos
add
push
xor
adc
push
add
ret
push
cld
js
add
push
rolb
rcl
cmp
repnz
int
add
fiaddl
hlt
dec
lods
mov
cmc
inc
adc
sub
or
jb
jp
das
mov
mov
sbb
popf
adcb
fsubrs
dec
aaa
sbb
daa
xchg
xor
push
mov
xor
inc
and
pop
pop
sbb
test
jb
stos
loope
add
mov
and
ret
add
loope
mov
mov
loope
ds
in
jge
xchg
sub
sarb
mov
add
push
xor
into
rcll
dec
lock
orb
psraw
add
lret
adc
std
dec
enter
les
mov
xor
sarb
sub
lret
inc
ret
nop
std
or
adc
mov
xor
and
mov
scas
stos
or
fs
push
push
sbb
fists
mov
push
in
or
xlat
sbb
mov
mov
and
ret
nop
sbb
pop
xor
cmp
arpl
rorl
mov
lods
dec
call
lods
ret
rclb
rcrb
arpl
push
es
in
jmp
je
ss
addr16
xor
push
int3
xor
shll
and
out
sarb
or
loopne
adc
or
shll
repz
pop
push
mov
mov
xor
push
in
xorb
es
dec
gs
shl
mov
es
pop
and
inc
mov
sbb
cmp
mov
nop
rcrb
mov
loop
shr
add
or
sbb
lcall
sbb
pop
btr
and
mov
nop
xor
popa
xor
rorb
sbb
or
mov
adc
add
push
jns
cmpsb
sbbb
push
ret
bound
xor
or
xor
xorl
push
fbstp
inc
neg
xchg
fbld
ljmp
or
mov
xchg
xor
ret
xor
and
cmpsb
push
and
xor
or
push
nop
or
mov
arpl
xor
and
or
push
rorb
pop
sbb
sbb
pop
push
push
leave
or
xchg
push
cltd
rolb
mov
xor
mov
push
jne
xor
nop
push
jle
rclb
insl
jb
or
xor
push
lahf
ss
mov
out
jmp
push
xchg
sbb
pushf
xchg
data16
push
push
push
sahf
add
cmp
and
cmpsl
pusha
xchg
sub
dec
hlt
sbb
mov
cmp
adc
push
dec
call
inc
aaa
add
xchg
out
addl
bound
js
or
push
xchg
mov
xlat
js
inc
sahf
out
mov
push
je
push
mov
outsl
bound
out
fsubrs
adc
insb
inc
out
sar
inc
pop
add
push
sbb
push
xor
mov
push
out
add
shrb
push
out
enter
cmp
pop
push
cwtl
out
sub
call
cmp
test
push
xor
jo
add
sbb
or
cmpsl
add
sbb
fstps
cmpsl
es
xor
adc
add
es
inc
adc
or
and
mov
mov
sub
scas
into
xchg
fs
popf
fstl
pop
xchg
popf
pushf
es
sub
pop
xor
stos
mov
out
xchg
xchg
movsb
xchg
lods
popf
bound
xchg
popf
jl
ss
inc
dec
mov
pop
sbb
or
shll
jno
push
repnz
push
test
outsb
or
and
mov
in
scas
bound
movl
jmp
clc
add
packuswb
out
arpl
loopne
add
testl
subl
movsl
jmp
lock
es
aam
pop
call
add
xchg
pop
fisttps
mov
pop
sarb
test
sub
push
inc
sub
mov
add
add
daa
popa
addl
sub
test
test
jp
mov
test
stos
cmp
pop
nop
dec
testb
mov
inc
test
addr16
lret
xchg
jb
mov
test
dec
push
push
movsb
and
call
pusha
add
add
rcll
adc
test
push
je
test
sbb
test
mov
sbb
test
or
xchg
lds
push
pusha
test
xor
add
test
adc
aaa
pop
or
call
lcall
inc
mov
sub
inc
test
inc
adc
test
lcall
int3
mov
add
je
mov
push
xor
ds
test
mov
test
test
pop
test
fcomi
cmp
adc
nop
xchg
jp
adc
pop
cs
test
xor
adc
mov
movsb
xor
and
add
test
test
inc
negb
and
inc
or
and
test
or
repnz
add
rolb
cmp
pop
adc
inc
pusha
inc
test
pop
rol
push
test
push
xor
orl
push
pusha
test
orl
and
or
or
mov
test
mov
fwait
jmp
test
jg
cmpsl
or
rolb
and
add
push
popf
sbb
pushf
or
call
jo
mov
jo
inc
dec
sub
lds
adc
lret
aam
orb
lret
in
add
cmp
or
out
out
or
or
inc
pusha
test
add
sbb
sub
mov
and
and
test
pusha
test
sbb
push
mov
adc
daa
dec
lret
add
test
add
jb
test
push
mov
mov
aaa
pusha
fbstp
adc
insl
pop
mov
insl
pop
push
fbstp
call
sbb
scas
addl
sbb
or
or
sbb
bound
fisttps
je
or
js
jecxz
sbb
pop
and
cmp
dec
dec
sub
adcl
add
sbb
inc
idiv
cmp
fbld
mov
xor
fbstp
pop
fbld
arpl
nop
shlb
popf
fnstcw
fisttps
or
xchg
in
inc
add
pop
pop
pushf
addl
fucomi
mov
inc
push
adc
mov
and
sbb
dec
cs
and
jp
aas
cmp
fwait
push
outsb
xchg
push
push
push
flds
add
and
cmp
cs
add
xchg
lsl
hlt
dec
push
xchg
add
loopne
push
cmp
inc
arpl
and
shlb
mov
fs
cmp
mov
xor
or
cmc
mov
divl
fs
push
sub
inc
and
jp
cmp
push
cmp
mov
incl
dec
inc
cmp
sbb
inc
cmp
and
cmp
sub
loopne,pt
inc
mov
or
push
mov
cmp
call
roll
neg
and
and
add
cld
andl
sbbb
xchg
push
pop
enter
sti
jae
and
pusha
sti
push
and
add
sbbb
das
jle
add
nop
sti
push
mov
add
pusha
sti
mov
rcrb
inc
inc
add
add
xchg
or
repnz
push
sbb
je
sti
movups
pusha
enter
jl
nop
sbb
sub
orb
sti
xor
lea
sbb
sub
push
mov
or
xchg
notl
daa
add
shlb
adc
fcomps
pop
je
mov
imul
push
repnz
popa
pop
in
mov
add
dec
cmp
add
pop
arpl
test
or
mov
inc
in
insb
inc
neg
arpl
or
xor
jnp
enter
push
mov
loopne
mov
add
pop
rcl
arpl
sub
push
arpl
arpl
ret
push
and
sub
adc
test
loopne
mov
pushf
mov
push
bound
call
cmp
pop
nop
dec
insb
arpl
arpl
les
fs
arpl
mov
rorb
push
xchg
popa
punpckldq
push
cmpb
pop
ret
or
repz
xchg
stos
sub
adcb
fsubs
mov
fsubs
cmp
mov
arpl
mov
dec
aam
scas
popa
stc
jb
call
xor
movsbl
das
shlb
call
mov
and
adc
call
repnz
das
xor
clc
lret
xor
lock
call
cmp
loopne
call
test
call
mov
lret
call
push
call
in
xchg
popf
pop
call
fs
stc
push
jne
call
or
das
js
pop
jl
push
sub
mov
test
xor
nop
sbb
test
mov
out
movsb
in
fldcw
fists
ret
movsl
jb
pop
les
ror
mov
xchg
jb
pop
mov
jle
sub
push
test
inc
pop
sub
xor
lret
test
lods
pop
sahf
xchg
adc
add
cs
test
or
loope
xchg
dec
ja
adc
in
mov
and
dec
stos
and
sub
mov
jle
push
cs
xor
cmp
orl
pop
inc
push
inc
frstor
xchg
dec
inc
dec
cmp
xor
movsl
jb
cs
adc
sub
add
nop
add
dec
push
std
push
pop
push
rclb
insb
jb
mov
and
or
inc
lret
dec
xor
cwtl
sahf
mov
pushf
and
mov
mov
lcallw
and
adc
cmp
dec
inc
sbb
sbb
push
and
xchg
xchg
mov
mov
sbb
imul
xchg
data16
movsb
inc
test
dec
lcall
imul
mov
imul
or
push
dec
inc
daa
lods
push
or
pop
sbb
xor
or
shlb
xchg
je
adc
out
add
mov
pop
add
leave
or
dec
push
ss
pop
pop
mov
inc
mov
fstps
push
test
mov
dec
lea
xchg
mov
mov
adc
fnstcw
mov
dec
xchg
adcb
and
xchg
xor
sub
lods
mov
arpl
xorl
nop
xor
rclb
mov
imul
mov
mov
mov
pop
sbb
testb
xchg
das
inc
movsl
xchg
inc
inc
push
movsb
inc
shlb
call
add
pop
mulps
xchg
jp
ret
push
xchg
pop
iret
mov
push
je
fnsave
dec
sbb
xorl
loope
mov
loope
mov
mov
or
and
mov
cmp
mov
xor
inc
or
sbbl
dec
cmp
mov
mov
mov
push
nop
push
scas
je
push
or
push
and
add
inc
or
nop
push
ss
and
dec
add
and
xor
pushf
loope
and
and
adc
or
sub
test
add
or
push
loop
movsb
sbb
fs
or
repnz
xor
sbb
push
ret
dec
jo
xlat
int
aaa
outsb
jg
push
stos
pop
mov
push
arpl
lods
mov
outsb
aam
mov
frstor
call
inc
cmp
cmp
jg
xorl
rorl
pop
pop
jg
out
bound
cmp
cli
adc
pop
jg
lds
aad
jecxz
push
in
sub
rclb
mov
push
loop
jg
dec
mov
aad
add
es
aad
xchg
mov
sub
or
test
lods
pushf
leave
or
and
dec
scas
sub
cmpsl
push
aad
add
out
mov
xchg
aad
ljmp
ficoml
fsubrs
aam
dec
push
mov
xchg
mov
push
and
xor
adc
sub
xor
aad
sub
add
sub
ficoml
subb
xor
out
push
mov
cs
add
or
call
pop
xchg
add
aad
mov
ret
jns
aam
mov
xor
xchg
and
cmp
aad
push
movntq
mov
mov
xchg
xchg
aad
paddsw
aad
jb
loope,pt
stc
sbb
fwait
shlb
dec
popa
and
sbb
or
or
rorl
push
and
ljmp
call
je
cmp
add
aad
je
adc
bound
xor
dec
inc
arpl
inc
cmp
test
js
jmp
dec
inc
cmp
leave
lods
mov
pop
add
shll
sub
inc
addl
nop
inc
add
push
mov
cwtl
js
inc
add
ja
inc
add
dec
add
pop
inc
nop
shll
adc
cwtl
jmp
adc
add
shlb
insb
arpl
fsubs
and
fcoms
jecxz
nop
or
pop
inc
pusha
arpl
rcrl
xor
test
push
lods
loopne
mov
xor
stos
push
movsb
push
mov
mov
or
aam
hlt
sub
repz
test
leave
and
or
push
rcll
rorb
int
mov
jge
sbb
mov
xor
and
stos
mov
inc
out
pop
add
jnp
dec
test
shlb
cmp
and
jecxz
xor
inc
or
dec
inc
or
shlb
mov
xor
les
rolb
mov
add
ret
mov
inc
aaa
inc
sub
js
aaa
jl
popa
pop
push
test
dec
mov
movsl
loopne
xor
adc
mov
or
mov
mov
mov
aaa
push
adc
xor
adc
aaa
xor
jbe
enter
mov
xor
les
aam
mov
add
dec
adc
imul
mov
pop
scas
inc
js
aaa
stc
push
outsl
add
sbb
add
mov
mov
adc
mov
popa
mov
int
out
mov
iret
dec
adc
rolb
push
iret
xor
orb
or
mov
adc
and
inc
sarb
and
and
out
push
into
mov
cmp
mov
call
out
or
xor
or
xchg
xor
rolb
sub
out
and
mov
into
jle
pop
xchg
xor
loopne
mov
jp
cwtl
incb
test
hlt
jo
out
dec
and
sbb
gs
or
mov
dec
xor
das
xor
out
shrb
insl
inc
sub
adc
xchg
ret
sub
sub
adc
pushf
loop
out
jp
push
or
pop
scas
push
addb
mov
sbb
pop
sahf
cmp
pop
mov
add
pop
dec
push
pop
fwait
rolb
xchg
adc
sub
dec
sbb
mov
nop
mov
inc
andl
pop
shll
mov
out
push
pop
and
dec
xchg
adc
mov
pop
adc
pushf
inc
in
mov
cmpsl
inc
adc
mov
mov
or
call
outsb
sub
adc
shrb
ljmp
jg
push
mov
pop
cmp
and
push
rclb
repz
movsb
xchg
dec
mull
or
push
add
pop
imul
dec
xor
fst
cmp
push
xor
mov
mov
pop
and
or
faddl
lods
mov
mov
fs
mov
or
pop
leave
push
fsubl
repz
sub
xchg
repz
and
repz
addl
and
xor
repz
inc
xchg
repz
xchg
cmp
repz
sahf
psrad
test
add
dec
sbb
and
fstl
lcall
jmp
hlt
inc
ret
mov
cmp
jg
jae
nop
mov
scas
or
test
sbb
arpl
sub
or
mov
je
push
call
aas
cs
mov
jecxz
aad
cmp
scas
pop
stos
sub
adc
ficoml
stos
and
mov
and
push
cmpsl
insb
movsl
hlt
adc
or
cld
sbb
stos
or
cmp
test
pushf
fistl
rcrb
dec
and
dec
or
call
push
ljmp
addl
jb
test
push
or
sub
movsb
arpl
fwait
repz
sub
sahf
adc
push
adc
divb
repnz
xlat
fwait
push
jnp
cltd
imul
xchg
or
dec
mov
bound
jb
adc
xchg
fwait
mov
enter
adc
jb
inc
dec
jae
insl
adc
push
cmpb
test
xor
jnp
push
sbb
pop
cmp
lock
or
and
jnp
mov
in
xchg
adc
adc
popf
pusha
xlat
ret
pop
inc
push
sub
icebp
in
push
lret
nop
stos
pop
or
mov
pop
mov
xchg
mov
xchg
sbb
pop
movsb
repz
mov
lret
inc
mov
push
pop
add
repz
add
or
push
or
mov
int
mov
mov
dec
mov
cmp
cltd
inc
mov
gs
mov
cltd
outsb
nop
add
mov
mov
pop
jmp
dec
pop
jl
orl
jmp
es
or
or
or
mov
adc
fwait
dec
sub
out
and
add
iret
repz
or
sbb
ret
cmp
repz
jbe
push
imul
or
sbb
sahf
out
push
mov
pushf
pop
push
lods
idivl
repz
mov
inc
jge
repz
push
nop
movsb
push
out
sahf
cmpsl
push
xchg
jl
push
inc
jns
negl
push
push
sahf
out
sbb
repnz
iret
repz
fmulp
mov
ja
jnp
ret
into
sbb
incb
add
sarl
es
loop
sbb
iret
aam
mov
out
ds
sbb
pushf
scas
xor
out
lret
or
and
cmp
repz
pop
data16
repz
test
jnp
repz
in
decb
ss
or
iret
inc
push
shr
xor
mov
push
sahf
mov
daa
rcr
negl
clc
adc
sub
cmp
aaa
iret
repz
push
push
cmp
adc
repz
push
jbe
int
ljmp
jle
cwtl
cmpsl
insl
xorb
das
out
iret
dec
test
dec
jecxz
adc
xchg
adc
idivb
jbe
push
scas
test
into
movsb
jo
out
loope
fwait
and
add
mov
or
aam
jne
pop
mov
dec
sub
sub
dec
and
or
dec
push
dec
ja
jb
lret
mov
les
pusha
outsl
push
push
ja
xchg
sub
out
dec
cmp
es
mov
pop
leave
aad
xor
xor
insb
xchg
or
mov
ss
xor
add
fsubp
addb
sbb
mov
inc
adc
push
xor
jnp
les
push
jl
push
dec
cmp
cmpsl
or
inc
aaa
sub
das
cmp
mov
int
imul
and
jo
loope
dec
lods
and
inc
stos
pusha
xor
mov
sub
push
jnp
xlat
push
push
pcmpeqd
cmp
imul
jecxz
test
sub
arpl
stos
outsl
mulb
daa
add
push
mov
jg
cmp
mov
jg
les
mov
je
pop
aad
push
dec
arpl
push
dec
push
push
push
inc
push
inc
pop
inc
outsl
outsl
and
and
pop
inc
adc
lods
or
idivb
cli
xor
xor
jae
pop
xchg
ficomps
outsl
jae
pop
test
jae
inc
jne
outsb
je
jae
push
es
pop
inc
js
add
lret
fcmovnu
ss
inc
xor
sub
sub
sub
jg
sti
incl
xor
xor
xor
jge
xor
xor
inc
std
mov
inc
stos
xor
ss
xor
cmp
fdivl
cmp
xor
pusha
fs
mov
inc
mov
hlt
cmpsl
inc
add
sbb
sbb
jne
test
gs
cmp
xor
push
xor
or
in
jg
inc
push
and
inc
aaa
adc
xor
inc
or
pop
dec
out
jl
adc
pop
push
arpl
xor
inc
push
inc
push
dec
and
cmp
ss
pushf
xor
inc
pusha
mov
or
and
dec
dec
outsl
ret
mov
jo
jb
fmull
ds
push
push
dec
subl
adc
mov
dec
sub
inc
push
add
out
inc
out
push
sub
out
cmp
jmp
negb
lods
sahf
add
movntq
and
hlt
jne
and
addr16
xchg
add
push
mov
jg
and
jl
inc
and
outsl
xor
imul
and
inc
je
push
push
push
mov
mov
inc
cmp
jbe
in
rolb
inc
cmp
sbb
xchg
test
insl
or
push
outsl
xor
and
xchg
pop
pop
cmp
mov
sbb
arpl
insb
mov
xchg
and
inc
fidivs
ret
or
cmp
fwait
pop
and
xor
or
pop
add
or
cmp
loope
jnp
inc
pop
rolb
js
xor
jo
inc
mov
jg
jp
fisubl
inc
mov
pusha
push
and
je
ds
inc
jnp
inc
std
addl
imul
dec
mov
js
daa
rcrl
add
dec
fs
ret
lcall
cmp
ss
popa
fs
jo
dec
js
ret
add
add
int3
mov
dec
movsb
push
cmp
dec
jae
outsl
mov
pop
arpl
inc
cs
push
push
push
add
xchg
pop
xor
ja
dec
sub
shlb
xchg
mov
sub
popa
imul
add
lods
cwtl
add
fdivl
rol
add
inc
bound
xchg
inc
adc
rcrb
mov
js
repnz
rclb
add
push
lahf
adc
or
or
inc
dec
adc
add
out
pushf
add
sbb
push
sub
xor
mov
inc
rcrl
inc
or
ror
out
or
mov
add
sahf
out
push
orb
or
add
jae
rcll
mov
das
push
adc
iret
jae
add
adc
push
sbb
sahf
cmpsl
stc
cmp
enter
sbb
sarl
sbb
push
das
push
mov
nop
cld
and
cli
imul
imul
iret
pushf
out
sahf
push
cld
fdivr
mov
out
inc
push
or
aam
xor
mov
aad
mov
mov
push
or
ds
scas
inc
lds
imul
mov
jno
aaa
ds
cmp
or
jbe
es
ret
iret
add
adc
out
lcall
fcomps
mov
push
insb
xor
iret
repz
nop
mov
mov
repz
push
jns
pop
mov
dec
repz
out
inc
inc
cmp
xor
repz
xor
and
sbb
iret
repz
adc
or
jns
iret
repz
cld
or
hlt
out
sahf
out
enter
jns
movsb
nop
jo
xor
cmp
sarl
int3
mov
insb
repz
repz
sub
adc
out
sahf
out
push
fcom
les
js
sub
aam
cmp
repz
xchg
jo
sbb
add
call
cwtl
pop
dec
les
iret
inc
adc
adc
pop
push
shrb
and
or
lret
mov
mov
inc
xchg
inc
xor
out
mov
scas
sub
adc
add
adc
push
inc
dec
cmp
cwtl
js
or
notb
inc
mov
pop
stos
lods
xchg
and
ja
and
rsqrtps
push
sub
jo
sbb
test
cmpsb
mov
sub
cli
out
pop
adc
and
and
sbb
jno
lea
push
ja
mov
push
jmp
add
es
repz
and
add
or
jno
fisubrl
data16
xchg
jae
test
add
jbe
jae
jg
cmpsb
aaa
js
shrb
mov
fadd
lcall
shrb
inc
mov
dec
ret
jns
xor
push
adc
cmp
adc
and
add
movl
xorb
mov
cmp
pop
jne
lret
jbe
rcrb
add
push
je
cmp
imul
mov
movsl
dec
ds
imul
pop
jb
pop
push
or
loope
xor
jo,pn
bound
pusha
cmp
into
mov
push
push
push
insb
stos
add
mov
jns
outsl
jl
add
mov
jg
pop
sbb
lds
loopne
xchg
sbb
out
adc
push
mov
sbb
add
push
ret
mov
insb
pop
sarb
jg
inc
pop
enter
cmp
mov
fs
cmp
ret
pop
enter
xchg
outsl
aas
int3
data16
sub
sarl
jbe
adc
int3
pop
and
xlat
jns
mov
rcr
popf
insl
cmpsl
nop
cmp
ss
lcall
popf
setl
lret
les
jl
inc
cmp
popf
shll
push
cmp
mov
sbb
test
test
or
mov
mov
and
mov
enter
mov
outsl
cmove
cmp
iret
fcmovnbe
sbb
aas
jbe
in
imul
insb
adc
mov
out
loopne
dec
mov
fisubs
in
cmp
lock
enter
cmpsl
jno
dec
mov
and
in
fldt
adc
inc
pop
add
cmp
mov
xor
imul
loope
mov
add
xor
lcall
scas
pop
push
and
gs
dec
dec
add
push
push
push
mov
push
outsl
ja
xor
jle
xchg
and
add
sub
mov
push
add
push
out
fsubs
add
adc
add
popf
pop
fiaddl
repnz
outsb
inc
xchg
out
dec
jmp
push
fucomip
lea
and
in
mov
adc
bound
es
push
and
xor
jb
mov
fucomi
inc
add
insl
jo
dec
pop
lcall
add
mov
sbb
mov
cli
add
jae
nop
addb
push
jae
push
adc
and
push
adc
or
mov
inc
mov
mov
popa
lret
out
adc
cmp
or
jecxz
inc
sbb
into
imul
loopne
lds
shll
add
mov
dec
pop
popa
push
fdivl
dec
pop
das
dec
sub
dec
or
cmp
xlat
jle
push
jo
jb
jns
push
ficoml
movsb
sbb
roll
push
push
mov
cmpsl
xor
push
sbb
xchg
sbb
outsb
sbb
rcrb
into
ja
inc
popa
jge
test
popf
inc
and
pusha
inc
xchg
xor
inc
fimull
into
out
push
inc
imul
push
or
das
xor
push
fs
add
cmp
inc
push
mov
inc
add
fistpll
add
gs
syscall
lods
add
subb
shlb
lret
xchg
jecxz
lea
sbb
jne
ret
nop
pop
test
sub
fs
xor
sbb
xor
and
jecxz
xor
ret
inc
cs
cmp
mov
fidivrl
lea
das
and
push
call
pop
adc
dec
and
je
outsb
xor
ret
insl
add
and
rcrl
add
sarl
sbb
inc
xchg
outsl
mov
aad
lods
js
scas
inc
add
stc
add
adc
lcall
pop
mov
push
xor
dec
dec
pop
addr16
and
arpl
mov
mov
lds
mov
lret
inc
push
outsl
gs
sub
dec
xchg
add
roll
push
loopne
add
mov
add
das
add
out
add
lock
mov
add
mov
rolb
insl
imul
out
add
xchg
popa
outsl
adcb
arpl
inc
jmp
enter
pop
ja
ja
js
aaa
dec
inc
dec
lret
dec
imul
inc
cmc
fs
rorl
out
inc
or
lret
adc
enter
cmpsb
add
xchg
in
and
sub
jo
inc
sbb
add
add
dec
jecxz
push
inc
pop
mov
mov
sub
scas
adc
dec
pusha
push
jo
push
int3
or
jno
cmp
inc
test
add
scas
mov
jae
into
pop
roll
in
xchg
adc
or
xchg
dec
and
nop
imul
add
iret
pop
sub
int
xchg
into
push
insl
push
out
outsl
inc
cmpsl
add
vpsubsw
push
mov
imul
mov
push
and
jns
pop
adc
jns
cld
inc
jae
lods
pop
loope
adc
add
je
cmp
testb
outsl
xor
or
pop
add
inc
mov
or
lods
pop
sarb
bound
sbb
push
dec
jle
sub
inc
xor
out
pusha
imul
cmc
out
fbld
pop
ficomps
sub
add
push
std
add
popa
rcrb
ja
cli
fiaddl
push
jecxz
inc
dec
add
xor
add
pop
xor
mov
push
cwtl
ret
filds
pop
push
jbe
jge
insb
push
sbbb
push
vmwrite
popf
cs
fucom
icebp
pop
and
add
jns
loope
xor
test
add
mov
sub
pop
add
or
add
icebp
in
aam
inc
cmp
inc
xor
sti
pop
add
insb
jns
xor
xchg
fs
pusha
shll
and
movsl
adc
ja
pop
mov
inc
or
and
sub
mov
mov
sub
enter
mov
adc
sub
inc
out
sbb
push
adc
repz
or
clc
out
lock
enter
cmp
repz
lods
test
pop
sahf
out
sahf
mov
mov
out
test
push
repz
pop
push
inc
cmp
out
cmp
and
sbb
cld
in
pop
mov
call
push
loopne
fcom
enter
iret
repz
cwtl
mov
cmp
repz
cmp
sub
out
cmp
sbb
or
cld
in
sahf
out
sahf
hlt
in
in
int3
mov
lods
mov
mov
js
jnp
out
push
inc
sub
and
add
stc
cmp
loopne
push
inc
mov
mov
cwtl
adc
vandnps
add
negl
repnz
push
mov
negb
add
push
hlt
out
sbbb
pop
shl
scas
push
repnz
xorb
xchg
add
push
aaa
adc
fisubs
psubsb
pop
pop
sub
and
add
or
push
frstor
dec
pop
jg
rolb
negb
dec
pop
mov
addb
cmpsl
mov
lds
add
inc
inc
push
mov
scas
das
inc
pop
cmpsl
pushl
inc
inc
xchg
iret
jae
inc
mov
addl
sub
cmpb
dec
sahf
add
mov
push
add
out
jo
add
in
cmp
cs
sub
push
mov
outsb
push
xchg
and
push
pop
cmpsl
jbe
cmp
insl
xor
aaa
sub
jbe,pn
and
or
sbb
loop
xchg
lahf
xor
xor
ds
je
in
add
js
xor
jae
pop
xor
gs
push
imul
imul
adc
js
and
fmull
or
pop
mov
adc
or
adc
jne
fadds
movups
mov
popa
insb
into
pop
mov
pusha
push
jns
adc
sti
ss
push
mov
push
sbb
ds
inc
add
inc
pop
pop
adc
fistps
and
aam
add
xor
xor
pushl
sbb
bound
loopne
sbb
das
xor
xorb
xor
xor
xor
xor
xor
xor
movsb
pushl
shlb
adc
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pushl
test
enter
ljmp
ss
es
dec
aaa
push
mov
aaa
iret
aaa
call
aaa
adc
dec
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
data16
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
lea
clc
ffreep
sarb
aas
push
lock
idivl
or
push
add
adc
and
dec
xor
xor
outsb
xor
popf
xor
xor
incl
inc
xor
push
xor
xor
xor
xor
decl
jae
xor
out
xor
xor
xor
xor
xor
xor
decl
push
fidivl
scas
xor
shlb
jecxz
call
mov
mov
ss
ss
ss
lods
pop
cld
pushl
push
aaa
sbb
jno
mov
aaa
loopne
add
or
ljmp
xor
inc
cmp
loopne
jmp
cmp
cmp
ud0
cmp
cmp
push
cmp
jl
cmpl
mov
cmp
push
adc
cmp
insb
cmp
cmp
cmp
cmp
pop
cmp
imul
cmp
cmp
fbld
sahf
test
jo
test
mov
or
adc
xor
inc
aas
popa
aas
cmpl
aas
mov
les
into
aas
out
jmp
repz
jmp
andl
xor
pushl
fdivs
fnsave
ljmp
xor
xor
xor
xor
xor
pop
xor
outsl
clc
pushl
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
lcall
pop
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
bound
push
sub
ss
clc
loop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
fcomip
cmp
cmp
xchg
aas
inc
aas
pop
aas
ja
pusha
mov
or
pop
push
or
cmp
aas
clc
lcall
arpl
push
xor
xor
xor
xor
xor
xor
xor
call
cmp
cmpsb
push
xor
xor
lcall
out
xor
xor
xor
xor
test
mov
mov
nop
xor
cli
pop
cld
xor
xor
xor
scas
clc
xor
cmp
jmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
das
mov
cmp
jp
cmp
cmp
std
cmp
cmp
sub
xchg
adc
sbb
push
das
cmp
ds
fidivrl
jmp
jg
movd
and
cmp
ss
ss
xchg
cmp
cmp
cmp
iret
cmp
mov
cmp
cmp
cmp
lcall
cmp
cmp
cmp
cmp
cmp
cmp
adc
dec
aas
push
mov
cli
js
cmpb
aas
sarl
aas
in
out
out
jo
loop
call
movsb
xor
add
jmp
incl
jg
mov
scas
xor
xor
xor
loop
xor
xor
xor
push
xor
mov
xor
xor
scas
std
xor
cmpsb
push
xorb
ss
add
or
aaa
and
fnstsw
cmp
aaa
push
aaa
pop
aaa
imul
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
outsl
cmp
xor
pusha
cmp
mov
cmp
cmp
sbb
push
cmp
inc
cmp
dec
cmp
popa
cmp
xchg
sbb
cmp
push
stos
cmp
cmp
call
fstpt
loopne
in
jmp
out
cmp
bnd
mov
cmp
cmp
cmp
adc
inc
cmp
push
cmp
call
pop
cmp
jb
js
cmpl
mov
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmc
cmp
cmp
cmp
sbb
cmp
dec
cmp
cld
cmp
jae
mov
cltd
cmp
jp
jg
cwtl
ds
jg
ds
jecxz,pt
out
ds
das
aas
cmp
je
jge
mov
movsl
aas
stos
aas
mov
mov
aas
or
push
xor
insl
aas
sbb
push
sahf
xchg
les
ja
xor
jp
xor
xor
xor
xor
xor
decl
mov
xor
xor
xor
xor
xor
xor
filds
jl
cmpsl
xor
xor
scas
jno
xchg
xor
mov
scas
xor
cmpsb
pushl
xor
xor
xlat
xlat
pushl
xorb
aaa
fwait
sahf
cmpsb
mov
inc
cmp
bound
scas
cmp
pushf
mov
sub
cmp
cmp
mov
mov
data16
dec
cmp
cmp
cmp
lds
cmp
scas
call
jle
push
or
xor
cmp
bound
pushw
sar
push
outsb
aaa
jb
jbe
xchg
ja
js
jge
cmp
xchg
inc
cmp
cmp
cmp
cmp
cmp
jle
mov
call
adc
sbb
ds
xor
xchg
aas
or
ljmp
xor
mov
ja
xor
xor
xor
xor
jl
fdivp
sbb
cltd
aaa
mov
ret
aaa
jmp
repnz
lcall
dec
or
cmp
pop
cmp
jge
mov
cmp
call
cmp
jbe
xchg
cmp
cmp
cmp
mov
and
cmp
cmp
fdivrs
push
aas
jne
mov
cmc
call
popf
or
mov
fwait
xor
xor
rclb
dec
or
repnz
aas
xor
hlt
or
pop
xor
fsub
adc
es
lcall
std
ss
ss
outsb
notb
ss
in
and
cmp
ljmp
cmp
mov
cvtpi2ps
sbb
cmp
pop
cmc
add
mov
cmp
jne
test
mov
ret
call
dec
cmp
push
cmp
pusha
data16
aam
fnstsw
jecxz
imul
cmp
cmp
cmp
cmp
pop
sarb
inc
cmp
incl
addl
and
push
cmpb
ds
ds
ds
ret
idivl
add
sbb
addr16
loope
push
pop
add
add
ffreep
xchg
xor
xor
pop
xor
xor
cmp
or
xor
xor
call
xor
xor
xor
mov
xor
push
lcall
add
xor
ds
dec
aaa
pop
aaa
js
mov
stos
cli
fidivl
out
in
aaa
cli
aaa
ljmp
cmp
cmp
mov
cmp
fstpt
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
clc
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
lcall
and
pusha
aas
cmpb
aas
fdivrl
loop
out
out
pop
rclb
adc
jne
adc
xor
pusha
dec
jg
xor
xor
jg
xchg
xor
xor
xor
jne
inc
cld
xor
xor
ljmp
inc
rcrb
xor
xor
sub
sub
nop
cmp
lcall
test
enter
sarb
aam
in
ljmp
push
out
xor
aaa
test
das
and
cmp
inc
xor
xor
or
lcall
inc
clc
lcall
mov
mov
mov
xor
xor
mov
int3
xor
cmp
sub
sub
xor
decl
push
sarb
inc
cmp
cmp
cmp
or
pop
xor
add
js
jl
cmpb
cmp
inc
add
jl
cs
rcr
cmp
mov
cmp
cmp
mov
in
call
dec
cld
pop
lods
ds
cmp
pop
stos
sbb
and
add
cmp
sub
sub
xor
cmp
inc
cmp
pop
xchg
dec
cmp
pop
cmp
cmp
insb
ja
cmp
je
jl
cmpb
push
mov
nop
mov
cwtl
mov
sub
xor
ljmp
aas
inc
mov
push
aas
push
aas
xchg
aas
cwtl
aas
lods
aas
mov
rolb
aas
fdivrs
loopne
clc
jbe
pop
clc
cmpsl
fists
xor
xchg
xor
cld
pushl
sbb
and
inc
xor
xor
cwtl
xor
xor
xor
xor
ret
cmpsb
cmp
sbb
fadds
add
xor
pusha
xor
pusha
cmpsb
and
fimuls
xor
jg
dec
ss
sahf
int3
shlb
aam
fdivs
fdivl
loopne
clc
jmp
lock
ss
ss
add
add
or
or
adc
adc
mov
sbb
and
and
sub
sub
xor
cmp
cmp
inc
aaa
call
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
jl
cmp
inc
clc
xorb
aaa
mov
nop
aaa
xchg
aaa
cwtl
into
mov
loopne
aaa
test
mov
mov
mov
aaa
bound
enter
shlb
aam
fdivs
fcompl
in
pop
sub
inc
out
aaa
hlt
xor
aaa
hlt
add
or
mov
adc
sbb
cmp
into
ret
fdivrl
call
das
ret
cmp
pop
sahf
jl
cwtl
cmp
cmp
loopne
lcall
cmp
cmp
cmp
cmp
push
cmp
jne
jl
test
mov
mov
jmp
mov
mov
mov
cmp
and
mov
add
and
sub
mov
sti
popa
jmp
pop
xor
rolb
sbb
mov
jl
mov
shlb
push
push
dec
xorl
push
adc
cmp
mov
push
pusha
mov
jb
daa
sub
movsb
sub
xchg
cmpsb
inc
ss
adc
mov
rorb
scas
xchg
add
into
lods
inc
sbb
push
add
stos
xor
iret
sarb
and
rorl
push
push
iret
sub
add
or
in
les
push
add
fmulp
pop
cmpsl
sub
dec
jns
dec
push
rcrb
orb
in
iret
mov
xorb
xchg
push
add
iret
jmp
pop
pop
sahf
mov
xchg
inc
jge
cmpxchg
or
js
rolb
inc
aaa
outsl
fsubl
in
cmpsb
fs
add
or
arpl
fwait
inc
xchg
xchg
sub
pop
mov
loopne
fwait
ret
lock
lock
call
or
or
xor
sarb
popa
lret
mov
push
dec
call
call
int3
lock
fdivrs
pop
popa
ljmp
or
ss
mov
adc
ja
dec
scas
les
inc
stc
jbe
xor
and
call
shl
mov
popa
lret
mov
mov
shrl
pop
call
jne
pop
sub
xor
or
cmpsb
push
mov
push
add
jmp
pop
rol
loopne
test
jmp
mov
cmp
into
lret
adc
sub
xor
push
or
jno
pop
pop
add
adc
lea
cmpsb
cli
dec
or
xor
fistpll
add
inc
cli
dec
sbb
cmpsb
jno
sti
mov
out
mov
cmp
es
push
sarl
sti
xor
add
xor
or
sti
and
cmpb
ds
adc
popa
inc
imul
fiadds
cmpsb
jno
sti
xchg
inc
sti
adc
inc
popf
divb
push
or
outsl
and
inc
dec
mov
outsl
mov
inc
sbb
shrl
sub
sbb
outsl
inc
popa
jecxz
aad
dec
jecxz
sub
aam
adc
jecxz
lea
inc
loope
rcl
xchg
or
push
sarb
les
in
movsb
xor
mov
mov
bound
mov
mov
sbb
movsb
xor
push
sti
ds
push
imul
or
add
movsb
mov
pop
aad
sarl
xor
jo
aad
aad
insb
movsb
popa
mov
aam
adc
testl
aam
push
lock
mov
dec
arpl
aad
sub
sbb
push
jbe
fwait
sbb
aas
and
out
frstor
aad
xchg
test
xor
fldl
inc
sbb
dec
aam
or
sarb
mov
adc
adc
aad
ja
out
aad
adc
sub
xor
xor
add
lret
test
mov
lcall
push
xor
sub
and
inc
lock
sbb
daa
loopne
xchg
sbb
ret
loopne
pop
add
sub
cs
loope
aas
pop
mov
call
es
mov
cli
push
ret
cmp
cmp
sbb
outsl
mov
scas
mov
jo
pop
jno
ret
popa
loope
push
inc
sahf
pop
hlt
jb
mov
addb
sbb
sbb
pop
cli
sbb
or
xchg
out
pop
push
push
mov
mov
push
mov
mov
push
fldl
fdivl
xor
pop
ret
mov
dec
clc
push
sbb
sbb
shlb
xor
pop
rclb
mov
pop
or
jg
mov
mov
popf
rcl
inc
cmpl
inc
cmp
lea
cmc
ret
add
cs
jmp
outsb
mov
aad
hlt
adc
mov
inc
or
cmp
loopne
inc
mov
jo,pn
xor
out
pushf
xor
rorb
adc
sbb
inc
gs
push
rcl
sbb
xchg
arpl
jo
inc
mov
mov
xor
ljmp
add
aad
xchg
mov
sbb
aad
mov
scas
aad
adcb
and
push
mov
sbb
jbe
xor
adc
outsb
sbb
dec
aas
add
pop
ss
mov
inc
pop
pushf
or
stos
push
mov
xchg
or
cwtl
jbe
sbb
stos
sbb
jge
jo
aas
adc
xor
aad
popa
mov
insb
aas
jmp
aas
dec
push
pop
push
aad
test
les
aad
inc
pop
bound
mov
xor
aad
push
mov
dec
dec
aad
or
mov
fldl
dec
call
sbb
orb
aas
push
xor
xchg
out
sbb
xor
call
push
sbb
frstor
aas
enter
xor
sbb
pop
aas
insb
xor
les
pop
pusha
push
mov
insb
sub
xor
xchg
pusha
pop
mov
push
je
jo
inc
or
fnsave
jo
mov
fwait
cmp
add
add
loop
je
or
cld
aas
xchg
out
lea
sbb
mov
adc
jl
xor
ret
aas
sub
leave
push
ds
rcrb
cmpb
sub
orl
sub
aas
je
aas
lret
pop
cld
hlt
jb
mov
jne
mov
cltd
mov
xor
mov
cmp
adc
mov
into
shr
sub
pop
cmp
leave
repnz
ds
push
add
adc
bound
pop
sbb
into
call
mov
jno
jle
aam
cmp
frstor
call
add
cmp
popf
aas
sub
pop
fldcw
push
or
std
and
inc
rcrb
inc
bound
nopl
jo
and
sbb
and
bound
xchg
inc
scas
sub
outsb
and
arpl
add
dec
arpl
test
pop
imul
lods
adc
push
and
lock
xor
xor
push
sub
pop
xor
pop
call
ja
cmp
push
adc
inc
lahf
inc
or
in
adc
sub
xchg
mov
jns
arpl
ja
mov
icebp
int3
ja
jmp
adc
loop
gs
pop
add
xchg
xor
test
mov
jmp
adc
movsb
insb
cmp
push
push
jg
jmp
jmp
cmp
cwtl
mov
call
inc
mov
or
repz
push
sub
inc
sub
daa
jns
xchg
sbb
add
test
test
adc
xor
xor
jp
push
popf
lock
jb
push
js
dec
lock
push
adc
add
lret
add
aaa
mov
andl
out
andb
jae
pushl
inc
sub
push
cmpsl
jmp
frstor
outsb
xor
std
es
xor
lods
fwait
xor
aaa
xor
jecxz
pop
dec
push
mov
call
inc
sbb
xor
push
mov
out
push
aaa
xor
xchg
adc
lods
dec
xor
or
in
adc
jmp
aaa
or
mov
outsb
push
xor
push
out
xor
sysenter
pop
jne
popf
mov
xor
je
xor
test
daa
xor
stos
in
out
cmpsl
sar
mov
or
xor
push
and
cltd
cld
imul
mov
sub
or
mov
rorl
testl
adc
inc
clc
add
ja
ret
mov
push
push
mov
movsl
sub
mov
adc
jno
push
jb
mov
in
lods
inc
sbb
lock
mov
inc
sub
or
or
cmc
push
std
jmp
or
jmp
inc
inc
jge
and
insl
lahf
mov
sub
dec
stos
rclb
ljmp
adc
dec
orb
inc
lret
sub
mov
and
mov
nop
or
dec
jg
sub
dec
inc
add
pop
sub
add
dec
xor
xchg
jl
dec
jmp
adc
mov
jmp
push
testb
repz
jp
pop
push
add
inc
xchg
or
xchg
repz
mov
adcb
nop
clc
mov
add
push
or
mov
mov
xchg
cmc
mov
xchg
adc
inc
ret
xchg
sbb
sbb
popa
clc
jg
subb
sub
fwait
cmp
xchg
shl
arpl
mov
ja
js
lock
std
mov
or
add
or
add
lods
cwtl
xor
jns
cmpsl
lret
incl
and
call
mov
sbb
imul
xor
mov
xchg
shrl
or
mov
js
dec
adc
cmpsl
cltd
jmp
inc
nop
nop
xor
in
pop
jl
pusha
push
imul
push
mov
mov
daa
pop
pop
or
xlat
shr
push
xorb
adc
or
add
shrl
push
add
rcrl
sahf
cmp
add
cs
fwait
cli
adc
add
cli
dec
push
repnz
cli
push
cli
adc
nop
daa
daa
dec
sar
ds
add
leave
stos
xchg
stc
fdivl
or
or
and
pop
stc
test
lock
nop
imul
hlt
push
lock
push
call
sbb
aas
inc
adc
xlat
cwtl
sar
aas
movsb
fs
dec
frstor
sub
xchg
sub
add
mov
or
xchg
aas
fwait
dec
push
xchg
or
mov
nop
mov
xchg
mov
mov
mov
bound
les
cmp
rclb
mov
add
and
xchg
xchg
dec
mov
fidivrs
xchg
push
mov
je
xchg
or
sar
enter
ja
cmp
dec
aaa
lret
dec
push
mov
ja
pushf
mov
nop
pusha
cmp
notl
test
lods
mov
pop
xchg
add
adc
sahf
imull
mov
or
push
adc
gs
out
and
xor
add
xchg
pop
or
mov
push
sub
cmp
enter
and
pusha
mov
or
inc
icebp
sub
icebp
test
inc
and
testb
pop
adc
stc
inc
adc
rorb
in
fsts
je
mov
outsl
mov
sbb
aam
mov
mov
aam
push
lcall
xchg
mov
pop
and
cmpsb
dec
daa
sub
test
sbb
or
add
jp
and
inc
jmp
icebp
or
cld
mov
cmp
xchg
rolb
call
cmp
test
xor
jne
ficompl
in
xchg
movb
faddl
bound
rcl
sub
xchg
sub
sub
or
sbbl
jae
adc
ss
mov
pushf
sub
iret
addr16
ss
cmpsl
out
jecxz
pop
fstl
sti
pop
rorb
enter
pop
mov
add
fsubrs
idiv
fs
mov
loope
mov
pop
insb
push
sub
push
mov
add
pop
jns
test
mov
sarb
pop
dec
xor
add
pop
add
jns
sbb
mov
mov
adc
inc
pcmpgtw
add
movsl
shrl
mov
cmp
push
add
inc
lods
cmpsb
adc
cmp
xchg
orb
mov
idivb
push
inc
jmp
add
add
cltd
xchg
add
outsb
stos
jb
movups
sbb
outsb
unpcklps
xchg
or
add
movsb
nop
test
push
sub
leave
mov
push
add
pusha
add
push
mov
add
or
fsts
add
dec
into
popa
and
lahf
add
xchg
pushf
push
test
inc
inc
jmp
je
pop
xchg
push
mov
mov
cmp
push
dec
seto
sub
cwtl
mov
cmp
test
jno
icebp
sbb
or
aam
sub
push
call
adc
ljmp
mov
fsubl
mov
inc
ss
inc
addr16
sub
sub
xchg
push
add
adc
inc
lahf
and
lahf
out
and
adc
outsl
or
xchg
push
call
and
call
sbb
add
nop
dec
push
sbb
add
pop
add
les
and
imul
mov
sbb
lcall
xor
jb
out
rcrb
adc
call
jne
lret
dec
push
push
ds
rolb
jno
sub
lret
push
into
stos
les
sub
lret
mov
dec
sbb
lret
fcompl
repnz
out
out
inc
call
cmp
or
push
inc
or
jmp
ret
loopne
sbb
pop
fcomps
cmpsl
mov
xor
sbbb
pop
enter
sbb
inc
cld
loopne
mov
ja
lret
rcrb
nop
out
lods
adc
pop
mov
or
mov
in
and
push
jne
lock
or
push
xor
fildl
pop
pop
pop
jno
imul
pop
pop
pop
push
push
jmp
jmp
jmp
jmp
pop
pop
pop
xor
sub
and
sbb
lret
inc
pop
pop
adc
or
ljmp
out
ljmp
lret
lret
xlat
ljmp
lret
lret
lret
lret
mov
scas
ljmp
lret
lret
xchg
ljmp
sbb
and
outsb
ljmp
nop
orl
ljmp
sub
and
push
ljmp
add
cmc
inc
push
jb
jmp
and
jns
aam
jmp
sbb
mov
movsl
jmp
push
jb
jmp
in
pop
cmp
arpl
pop
jmp
dec
jmp
jns
inc
push
sub
and
adc
sbb
and
or
std
call
nop
and
fsubr
shr
pop
cmp
inc
call
sbbl
movsl
call
push
jb
call
fnsave
outsb
call
push
push
in
mov
pop
sbb
sbb
sub
sarl
test
dec
fiaddl
call
or
jb
mov
xor
fisttpll
out
fsubl
fistl
out
xchg
mov
mov
jb
mov
daa
int
bound
push
and
mov
enter
sub
loopne
xor
daa
int
in
inc
call
mul
inc
in
in
jns
xor
lock
dec
adc
out
add
push
xor
js
cltd
cmc
add
xchg
xchg
push
addb
cltd
shlb
addb
xchg
xchg
cwtl
pop
or
sbbb
cltd
add
add
sahf
repnz
mov
cltd
mov
rcrl
xchg
push
cmp
dec
mov
adc
cmp
dec
adc
dec
pop
xor
add
cwtl
insl
hlt
mov
adc
popa
punpckhdq
mov
inc
mov
add
rolb
and
dec
xchg
or
test
sbb
xchg
dec
mov
adc
jg
ret
jno
jg
bound
mov
aas
ret
mov
add
add
fldcw
jle
jg
jnp
iret
repz
testb
push
cmp
cmp
repz
xchg
mov
iret
repz
loop
push
jge
out
sahf
out
pop
jo
cwtl
sahf
out
sahf
movsb
mov
lret
out
fidivrs
divb
push
ds
push
jle
mov
fsub
cmp
out
in
clc
add
and
cmp
repz
dec
pop
push
test
mov
push
jl
cld
adc
ja
push
push
dec
scas
shl
js
jbe
add
or
sbb
mov
les
inc
push
stos
mov
or
out
ds
cmp
loopne
or
adc
das
adc
testl
shlb
out
pop
or
mov
xor
push
push
das
push
pop
sahf
out
sub
dec
and
and
popa
sahf
out
sahf
js
jns
jp
fs
out
cld
mov
insb
and
adc
push
push
or
or
daa
add
out
stos
cmp
iret
pop
add
push
inc
push
push
and
mov
lods
outsl
and
ljmp
inc
sub
sub
dec
leave
mov
loopne
push
inc
cmp
out
inc
adc
cmp
jae
das
and
rcrb
pushf
pop
jae
and
outsl
jne
arpl
inc
push
push
daa
les
push
pop
push
push
push
fwait
gs
push
loopne
dec
dec
adc
inc
mov
les
addb
pop
enter
adc
xor
xor
nop
xchg
sbb
dec
mull
add
mov
bound
data16
mov
pop
cld
sub
lahf
sub
fimull
jg
cmp
xchg
cmp
int3
out
inc
js
or
data16
mov
mov
cmpsb
mov
adc
add
sub
add
sub
add
arpl
insb
sub
and
adc
push
push
fisttps
aam
push
and
sbbb
aam
imul
pop
lcall
xor
je
sbb
mov
and
orb
pop
adc
push
xor
cmp
and
dec
sbbb
xor
add
mov
test
insl
popa
out
or
add
popa
rcrb
shrl
or
shrl
pop
mov
push
or
push
andl
or
and
add
inc
pop
mov
add
sbb
subb
sbbb
fbld
add
roll
or
add
test
imul
push
cmpsl
push
add
push
int3
push
mov
pop
inc
pop
xlat
out
les
ja
scas
jo
or
dec
repz
or
cld
outsl
clc
lock
repz
loopne
enter
iret
repz
lods
test
pop
sahf
out
sahf
mov
mov
out
mov
out
in
pop
push
push
dec
cmp
repz
xor
sbb
adc
ret
ret
hlt
outsb
call
fnstsw
push
fadds
ror
shl
sahf
out
mov
nop
sbbb
dec
xor
and
sahf
out
sbb
or
cld
insl
sahf
out
fmulp
push
in
in
aam
mov
movsb
cwtl
insl
pop
mov
or
sahf
out
jo
dec
cmp
sbb
out
cmp
add
insb
push
add
and
ret
pop
sbb
and
outsb
aas
jno
mov
icebp
popf
ja
nop
test
mov
stos
or
cs
push
mov
cmpsb
fiaddl
faddl
mov
jg
sub
fldl
movsb
pop
test
aam
push
dec
sbb
mov
in
cmpsb
pop
leave
sub
pop
and
add
jp
sbb
or
cld
decl
xor
data16
jle
test
xchg
or
or
adc
inc
mov
inc
xor
mov
int3
xor
xor
xor
xor
cli
repz
xor
xor
adc
decl
xor
xor
xor
xor
xor
xor
inc
rclb
sub
pushl
pop
xor
jno
jbe
xchg
mov
xchg
into
lods
outsb
or
jg
test
negb
xor
xor
mov
xor
xor
rol
pushl
cli
xor
or
xor
xor
xor
clc
mov
xor
xor
xor
xor
xor
add
add
adc
push
push
cmp
ss
mov
or
sbb
or
aaa
imul
aaa
in
push
pop
sahf
cmp
cmp
movsb
lock
loop
cmp
cmp
loopne
cmpsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lock
cmp
and
push
arpl
pusha
loope
call
ds
sarl
hlt
ds
sbb
and
sub
lcall
aas
pop
aas
imul
ja
aas
pushf
aas
cmpsb
les
or
aas
shlb
test
rorb
out
mov
xor
xor
xorb
jl
test
xor
push
clc
pop
lcall
xor
push
jl
test
sub
jo
xorl
mov
aas
dec
popf
xor
xor
out
xor
xor
cmp
mov
mov
jbe
push
pop
push
push
push
push
mov
xchg
outsb
mov
into
test
xor
or
enter
lret
xor
xor
cld
push
xor
sub
xor
cmp
inc
sbb
sbb
xorb
ss
ss
loope
add
or
cmp
ljmp
sbb
pop
aaa
jle
mov
cmp
inc
inc
or
push
xor
popa
cmp
cli
mov
cmp
add
cmp
aaa
push
push
or
mov
cmp
push
cmp
ja
push
or
lock
outsb
mov
cmp
decl
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sar
sub
push
cmp
cld
jg
test
data16
jge
lods
sarl
les
repnz
clc
aas
ret
nop
jle
xor
xor
ss
inc
es
jg
test
cmp
xor
push
clc
or
sar
xor
or
jbe
xor
xorl
jl
push
pusha
jle
int3
adc
sbb
jg
pushf
xor
xor
xor
xor
xor
and
pop
pop
clc
stc
xor
xor
dec
test
clc
data16
push
xor
stos
xor
cwtl
inc
and
ss
dec
or
pop
pop
push
ss
xor
clc
jge
cmpsl
fnstcw
inc
push
loope
imull
cmp
push
movsb
cmp
cmp
jne
scas
loopne
or
call
cmp
clc
pop
cmp
cmpl
cmp
cld
cmp
push
push
jbe
mov
adc
clc
in
sbb
sub
mov
nop
outsb
add
jno
nop
xor
cmp
xor
pop
xor
js
xchg
xor
xor
lock
jmp
add
sub
cmp
and
xor
ljmp
data16
mov
pop
ss
loope
ss
loop
aaa
test
adc
fldl
mov
xchg
jecxz
lock
push
mov
cmp
dec
dec
and
mov
dec
cmp
cmp
cmp
cmp
and
jle
ds
aas
int3
aas
push
cs
and
xor
adc
push
xor
dec
out
mov
xor
cmp
cmp
adc
sbb
xor
pop
sub
lock
or
aaa
push
dec
push
cmp
inc
and
mov
sub
jo
fs
popa
xchg
mov
test
or
dec
cmp
lcall
mov
cmp
push
popa
and
and
hlt
jnp,pn
cld
incb
or
or
adc
sub
sub
mov
xor
cmp
inc
pop
test
clc
xchg
dec
push
push
xor
pop
notb
or
xor
lcall
inc
stos
inc
xorb
xor
xor
mov
mov
dec
mov
mov
ret
outsl
jecxz
xor
xor
adc
xor
xor
xor
cwtl
subb
xchg
push
or
adc
sbb
xor
and
sub
xor
xor
add
outsl
add
xor
xor
xor
xor
xor
pop
push
pop
pop
mov
pusha
ljmp
pushl
xor
xor
xor
xor
xor
xor
xor
xor
mov
push
adc
fs
dec
popa
jne
xor
test
sbb
sub
popa
call
dec
inc
dec
stos
aad
in
lret
fcmovnu
mov
add
add
or
pop
jp
incl
push
or
or
or
or
or
adc
adc
push
adc
imulb
adc
or
pop
sbb
adc
adc
mov
jbe
adc
add
data16
or
aas
mov
inc
add
or
xchg
add
add
adc
ffreep
data16
add
les
ficoms
mov
roll
push
jb
push
or
cmp
add
add
push
adc
pop
and
or
pushl
adcl
shl
and
bound
js
nop
nop
add
or
inc
or
and
mov
test
mov
inc
sub
jecxz
adcb
movl
test
add
lahf
xchg
and
scas
pushf
into
add
out
scas
adc
sarb
adc
push
adc
pop
popa
jle
loopne
jno
and
adc
mov
or
xor
adc
shrl
mov
add
or
mov
pusha
and
add
js
or
shlb
or
incl
sbb
cli
and
mov
inc
jnp
test
jge
ficompl
cmpsl
xor
mov
pushl
lahf
mov
movsl
jecxz
cli
pop
mov
lods
sbb
push
stc
or
xchg
jg
or
insb
sub
addr16
out
or
ljmp
push
push
xchg
add
repnz
inc
lock
scas
jle
fcmovnu
clc
cmp
mov
outsl
xchg
aad
add
sbb
int3
lcall
mov
push
pop
push
mov
pop
pop
mov
popl
movb
xchg
sbb
scas
adc
pushl
scas
xchg
test
aam
and
sbb
sarl
and
rcr
incl
fwait
movsb
jmp
push
lret
push
out
in
and
ss
repz
cmpsb
pop
outsl
in
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
push
out
outsl
loope
lcall
mov
pop
cwtl
int
arpl
push
out
or
sbb
push
sahf
pop
clc
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sarl
xor
hlt
and
xchg
jmp
lock
outsl
xchg
add
ljmp
fidivl
mov
or
push
mov
sub
pop
mov
jl
rorl
shll
pop
jg
hlt
push
fcmovnu
add
stc
loope
mov
sar
andl
aas
icebp
testb
mov
inc
imul
scas
fadds
in
sub
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
decl
sbb
jb
adc
push
lock
lods
jp
testb
sbb
into
fcomps
sbb
sbbl
into
andl
aas
loopne
cli
adc
outsl
decb
xchg
in
add
inc
adc
loope
fisttpll
mov
fsubp
icebp
aas
std
cli
push
push
push
idivl
cmp
ljmp
jle
inc
scas
inc
mov
jg
je,pn
sub
jg
imul
stc
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
cmp
sti
ds
decl
push
scas
cmpsb
orb
mov
imul
stos
or
js,pn
jmp
xchg
pop
clc
pop
hlt
lret
push
shll
movsb
add
lea
jg
gs
std
aas
pop
incl
shrl
addr16
adc
ret
das
pop
pop
pop
shlb
insl
pusha
fucom
out
sarb
sbbl
jno
or
sarb
ljmp
push
cli
mov
mov
inc
arpl
stos
mov
and
insl
incl
sbb
push
scas
loop
jge
push
shrl
mov
push
mov
adc
and
repnz
push
fcomps
xchg
jo
and
out
test
jae
push
iret
sti
cmp
ficoms
call
cmpsl
sahf
imul
fcmovnu
rorl
insb
stos
arpl
add
cld
call
pushl
js
cmp
scas
lods
hlt
cmp
fistl
mov
adc
push
movsb
xchg
or
mov
cmp
add
ret
fcmovu
ds
cmpsl
scas
popa
in
pop
ljmp
dec
xchg
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outsb
mov
sbb
jecxz
inc
adc
test
dec
jb
adc
xchg
and
push
push
jo
pusha
imul
add
mov
call
imul
daa
xchg
mov
cwtl
pop
xchg
ftst
jbe
xchg
and
jmp
add
jae
shrb
shlb
out
aas
stc
add
out
gs
jno
mov
call
adc
pop
cld
addl
adc
and
ds
cmp
fmull
enter
jecxz
scas
jg
jg
sub
in
pop
mov
sub
mov
dec
incb
outsb
mov
aas
mov
or
cld
inc
or
in
pop
cmpsb
push
pop
jg
add
jg
mov
outsb
jg
aad
test
mov
mov
iret
cmp
jg
push
jbe
push
sbb
stos
icebp
pop
incb
jno
insl
lcall
sub
push
inc
jecxz
sbb
sarl
adc
fdiv
cs
clc
xorl
inc
cmp
push
or
test
loopne
add
mov
fsubrl
pop
pusha
inc
fcomi
push
and
clc
lcall
adc
xchg
pushf
mov
repnz
and
mov
adc
jnp
add
loope
aas
push
rcrl
rcr
addr16
incl
pop
inc
jb
fistpl
adc
call
jno
pop
pushl
repz
inc
sti
arpl
daa
std
or
sbb
mov
inc
aas
cld
jmp
sbb
or
imul
xor
dec
xor
fsubr
fistps
mov
jg
jg
stos
pop
sahf
incl
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
sbb
jmp
inc
and
mov
in
stc
mov
lahf
outsl
int3
push
sbb
or
cmp
mov
sti
jle
xchg
popa
out
out
outsl
xchg
inc
test
in
jge
popa
push
or
cmp
jbe
outsb
hlt
sti
fsubs
shl
dec
jp,pn
insb
add
call
xchg
aad
loop
lahf
mov
or
out
lcall
fisttpl
shl
cld
mov
adc
stos
pop
jg
pop
shrb
rcl
lcall
jg
adc
xor
pop
rcr
dec
mov
gs
pushf
lea
aad
sti
jp
jnp
jecxz
adc
inc
lds
push
pop
adc
ljmp
fisttpll
dec
int
sbb
inc
pop
xor
rorb
and
add
cmpsl
push
sti
iret
mov
lock
inc
cmpsl
enter
mov
into
test
xchg
movsb
insb
or
jg
es
xchg
fidivrs
clc
mov
xor
test
aas
repz
sbb
lock
in
jmp
lock
add
out
sbb
aaa
clc
push
std
mov
sbb
test
jg
lds
dec
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
jg
mov
loopne
test
out
rolb
pop
or
or
fildl
mov
lods
movsb
or
bnd
aas
fiaddl
pushf
imul
jl
outsl
das
or
jno
lret
pop
in
jg
aad
cmp
jmp
mov
pop
lock
popf
jmp
hlt
dec
mov
xlat
inc
incl
mov
jg
mov
sub
addr16
std
pop
mov
sbb
cld
daa
jp
std
adc
cltd
or
mov
ret
cld
stos
jle
nop
cmp
das
incb
lock
pop
pop
div
cld
testl
mov
stc
lahf
loope
jae
jmp
add
mov
sar
mov
add
out
icebp
mov
loope
mov
fdiv
mov
sti
mov
fbstp
jb
adc
das
cmpsb
pop
mov
jge
out
xorb
int
call
xor
decb
mov
mov
mov
and
call
imul
and
mov
cmp
int
add
push
pop
aaa
std
js
dec
enter
inc
sbb
mov
mov
aas
icebp
ret
xor
or
ror
sbb
aaa
inc
pop
lds
ficoms
shrb
mov
pop
push
inc
mov
loope
mov
lahf
jp
dec
cmp
xchg
add
xlat
rcrl
in
xor
cmp
cmp
repz
js
pop
gs
and
sarl
xor
loop
pop
out
jg
jno
ret
cmp
xchg
inc
arpl
out
aas
xor
push
dec
jge
pop
clc
xchg
cmpsb
ljmp
ds
inc
mov
pushl
in
sbb
xchg
imul
add
stos
test
outsl
jmp
std
mov
daa
jmp
faddl
add
inc
push
jae
push
pop
mov
pop
add
push
imul
pop
stc
push
dec
out
fstpt
mov
enter
xchg
and
add
fsts
xchg
jl
jo
or
add
push
sti
pop
inc
add
or
push
nop
mov
cltd
push
and
mov
jl
jge
or
mov
imull
inc
dec
push
cmp
out
ud0
incl
enter
mov
xchg
outsl
jecxz
mov
xchg
vmovdqa
aam
xor
out
inc
cmp
jno
jge
mov
cli
push
fldt
jecxz
movsl
push
ds
cs
or
ds
incl
mov
out
adc
lret
fldt
push
inc
jl
dec
jns
call
out
sbb
and
adc
repz
mov
xchg
xchg
add
sbb
pop
push
pushf
cmc
adc
push
sti
hlt
js
adcl
sbb
mov
movsb
ret
es
xlat
sub
jae
jmp
inc
and
in
out
addb
pop
aad
xlat
sbb
sub
out
loop
xor
stos
or
cs
xchg
aaa
fldl
xchg
aad
or
pop
sub
addl
xchg
xor
push
sub
pushl
push
sahf
xchg
test
sub
add
jae
arpl
divl
rcrl
lods
lock
test
jle
mov
dec
incl
mov
out
movsb
movsl
mov
sbb
push
hlt
cs
or
mov
idiv
sti
xor
jo
or
lcall
lret
into
jp
jmp
dec
xor
jmp
es
scas
adc
cmp
mov
les
xchg
mov
jno
jmp
push
cmp
cs
ret
pop
lods
loopne
nop
neg
push
shll
test
outsl
xchg
pushl
dec
fsubrp
sub
cld
mov
inc
add
fimuls
callw
jmp
ds
in
test
jnp
ret
jns
lahf
call
inc
mov
imul
dec
pusha
xor
sar
pushl
lcall
push
inc
aad
loop
jl
mov
cmp
xchg
and
dec
push
leave
in
xor
pop
xor
inc
jge
hlt
mov
decb
loope
pop
jne
jb
dec
jo
push
lahf
pop
es
xchg
xchg
jmp
cmp
mov
cmp
xchg
jmp
stos
cmpsl
mov
pusha
sbb
dec
hlt
loop
das
es
and
mov
and
addb
subb
xor
cmp
push
imul
addr16
push
je
ljmp
rolb
loop
cmovne
jae
sub
mov
cmpsb
sub
movsl
stos
jae
xchg
inc
decl
or
dec
test
pop
sub
aam
bnd
push
ljmp
decl
cltd
fnstsw
dec
call
ret
lods
test
scas
daa
and
test
mov
jg
mov
mov
das
ret
push
mov
xchg
sub
jne
cli
sub
adc
sbb
dec
cmpsl
xchg
loope
sub
inc
jno
pop
inc
adc
aaa
mov
jmp
and
fnsave
lods
in
push
xchg
sub
pop
in
jecxz
sbb
aaa
jl
cli
imul
ret
lret
nop
jge
mov
shll
inc
lds
mov
out
add
xchg
outsl
enter
dec
or
fcomip
cltd
aas
into
int3
loopne
or
mov
test
popa
sub
mov
push
jle
xchg
jmp
iret
iret
fadd
ret
subl
data16
test
repnz
fdivrs
in
push
movsl
adc
xor
loope
das
iret
les
mov
clc
mov
adc
sub
xchg
cltd
cwtl
lcall
xor
mov
std
test
stos
loope
movsb
push
cld
xchg
and
inc
ljmp
mov
cmp
fstpl
sub
inc
dec
ljmp
mov
cli
loopne
xor
pusha
ljmp
jnp
add
sbb
movsl
jns
push
cmp
pop
dec
push
push
in
sbb
aas
clc
decl
xchg
inc
leave
aad
scas
push
adc
xchg
mov
adc
aam
and
add
cmp
sub
sbb
cmp
inc
shrb
dec
jbe
incl
xchg
mov
les
inc
aaa
stos
rcrb
cmpl
push
scas
sub
adc
inc
jp
jle
hlt
ret
xor
enter
incl
std
arpl
lahf
int
ljmp
addl
fwait
push
xor
mov
mov
push
push
jecxz
movsl
scas
xchg
add
in
ds
push
fisubs
dec
mov
and
lcall
add
and
repz
adcl
ret
mov
sbb
out
out
adc
les
push
jbe
fcoml
jmp
dec
cmp
mov
mov
dec
cmpsl
arpl
es
cwtl
add
mov
pusha
arpl
pop
es
ljmp
cmpsl
sti
loop
add
imul
pop
arpl
xchg
push
and
cmp
mov
lret
jb
push
scas
pusha
lea
lcall
clc
insl
cwtl
imul
cmp
lock
or
jmp
cmp
cli
aad
xchg
and
arpl
cwtl
int
fidivrs
xchg
cmpsl
cmpb
rorl
call
les
adc
daa
test
add
and
mov
fsin
idivl
mov
push
inc
gs
daa
mov
decl
or
into
pushf
rcr
pop
cwtl
dec
xor
sub
add
out
sbb
push
or
call
insb
ja
imul
pop
xlat
bnd
popf
out
mov
xchg
scas
mov
cmp
jmp
add
ficomps
mov
and
add
xchg
test
or
lcall
cmpl
enter
xchg
jns
or
popf
mov
adc
adc
fidivrl
mov
or
stc
arpl
dec
incl
xor
pop
fcomps
xchg
sub
fisubs
inc
in
add
fadds
cld
lcall
insb
lea
dec
popf
sti
xchg
push
sub
test
jg
into
stc
jns
das
push
lcall
inc
and
fidivs
aas
out
xor
push
aad
sbb
jmp
adc
cmp
stos
adc
dec
mov
push
out
xchg
rcl
imul
jle
aaa
out
adcb
mov
push
imul
das
jp
adc
test
out
xor
lcall
jmp
cmp
mov
pusha
into
pop
mov
and
popf
clc
int
lcall
push
cmc
mov
adc
leave
mov
loop
and
movsb
cmc
rcr
aam
out
or
mov
or
xchg
pop
inc
and
ret
jmp
stos
mov
or
popa
inc
jg
jmp
jl
and
scas
sti
jmp
cmpsl
aaa
inc
xchg
cmpsl
mov
xor
cmp
movsb
xor
pop
stos
sbb
out
data16
adc
jmp
xor
or
xor
loopne
lret
insl
add
fldenv
mov
mov
jbe
jne
loope
mov
mov
fiaddl
adc
and
add
sub
sub
pop
aas
inc
ljmp
mov
cmp
fists
sub
push
jb
sbb
pop
pop
sub
or
push
rolb
push
mov
imul
test
sbb
or
jg
jmp
lcall
mov
adc
nop
out
adc
cld
sbb
inc
xchg
inc
dec
jl
mov
iret
shrb
cmp
adcb
xor
fisttps
adc
xchg
fldl
fidivrl
inc
fidivl
sub
int
out
inc
pop
aas
and
out
dec
xchg
call
pushf
inc
lock
lret
aaa
imul
xor
scas
xorb
adc
je
add
xlat
jmp
xlat
mov
popa
fucom
pusha
movsb
je
mov
dec
pmaddwd
jg
jmp
or
insl
das
testb
jo
fistpll
push
shlb
icebp
std
mov
inc
ljmp
ds
movsb
ret
movsb
pop
xchg
add
ret
mov
out
cwtl
es
lea
jnp
push
dec
call
bound
dec
lods
mov
or
or
loop
push
or
pushl
cmp
loopne
cmp
jg
xchg
add
inc
inc
xlat
repz
jmp
ja
sahf
pop
xor
jae
and
xchg
jne
jb
scas
fs
mov
jmp
xchg
out
sar
lcall
jne
lahf
daa
cmp
add
rorl
or
insb
cmpb
popf
les
test
push
sub
loop
jp
das
movlhps
sub
adc
lods
jne
dec
add
mov
inc
push
inc
aam
ret
rorb
in
inc
into
stos
test
inc
inc
cli
add
add
and
push
or
les
cld
xor
inc
minps
sahf
fldt
jge
nop
sarl
gs
movsl
mov
dec
aam
in
cmp
inc
int3
fs
pop
fs
adcl
cmp
call
leave
pop
jge
xorl
fsts
loop
das
jo
xor
daa
xor
sub
mov
cmpb
loopne
out
mov
adc
cltd
test
mov
pop
push
mov
or
call
ret
gs
jnp
scas
inc
call
ficomps
xchg
es
mov
cwtl
sbb
pop
push
lock
incl
mov
xchg
mov
and
iret
and
repnz
dec
cmp
out
clc
mov
mov
xchg
push
or
outsb
adc
aad
sbb
insb
repnz
jg
pushl
jle
test
pop
enter
ror
add
mov
clc
push
push
lods
cmp
lret
pop
or
outsb
xor
ljmp
mov
add
les
xlat
fisttpl
popw
dec
fstl
lcall
movsl
incl
mov
into
pop
jae
mov
dec
inc
dec
jnp
and
sub
jno
fst
or
decl
inc
fcoml
cmp
mov
in
push
call
data16
lock
push
jmp
cmpsl
test
xlat
int
pop
mov
fsubr
pop
icebp
aaa
pop
ljmp
test
mov
nop
push
xchg
mov
hlt
sar
ljmp
mov
clc
or
sarl
or
cmp
mov
scas
push
lods
jg
xor
stos
jg
ljmp
xchg
cmc
jp
mov
std
mov
das
add
leave
pop
xchg
je
je
pop
mov
incl
ret
mov
test
ljmp
jp
jge
fnsave
mov
sub
push
loop
push
push
fcompl
push
orb
lcall
mov
in
repz
sbb
lods
fld
outsb
movsb
std
call
orb
jne
fwait
sbb
mov
jge
gs
std
mov
aaa
cmp
decl
clc
jo
stos
sub
fistpl
icebp
push
mov
idiv
xor
imul
cmp
lea
xor
push
add
loope
movsb
sub
xchg
popa
xor
test
lcall
fcomp
lret
xor
test
mov
cwtl
cmp
push
aaa
data16
test
cmp
jp
xor
cmpsb
push
inc
xchg
repnz
lcall
cmpsl
and
jbe
scas
outsl
loope
fstl
cld
push
push
mov
clc
pushl
sbb
aas
sbb
imul
lret
push
inc
push
and
cmp
outsl
inc
int3
pop
repz
fbld
jne
aam
nop
add
scas
dec
dec
sub
fisubrs
cmp
mov
adc
xchg
mov
pop
sbb
and
cmp
sub
xor
ffree
cwtl
sub
in
inc
adc
fistpll
mov
ljmp
mov
iret
scas
sub
das
push
andl
cmc
inc
imulb
lds
dec
xor
lea
mov
outsl
add
insl
mov
push
inc
les
and
ficoms
mov
test
mov
pop
adc
mov
movsl
in
jl
incl
icebp
insl
std
repnz
mov
jmp
leave
repnz
mov
jecxz
decl
pushl
scas
fisttps
dec
jecxz
into
sbb
fmuls
lea
xchg
mov
jmp
ret
xor
adc
dec
je
jb
cmpsl
mov
scas
and
inc
test
decl
lock
xchg
xlat
popa
test
scas
cmpsl
aas
lcall
and
pushl
decl
mov
les
jle
push
push
inc
pop
cmp
enter
pop
cmpsb
jae
jg
jg
jmp
push
pop
inc
out
and
dec
add
movsb
pop
mov
pushl
pop
pop
xor
in
sub
jecxz
dec
stc
mov
fistps
and
js
jecxz
mov
cmc
mov
in
xchg
insl
push
out
fsubr
pop
mov
leave
ja
call
ljmp
js
dec
pavgw
fidivs
arpl
push
das
in
push
sbb
or
sbb
or
jp
add
out
fucom
mov
scas
mov
call
jp
xchg
stos
sub
push
push
cld
lcall
adc
int3
cs
fnstsw
xchg
xchg
dec
ret
out
je
mov
rolb
divl
jl
call
loopne
push
imul
adc
xor
mov
lea
cmp
inc
adc
jmp
or
or
jno
bound
je
std
test
pop
pop
add
stos
stos
cli
jge
ljmp
mov
push
insb
in
xchg
mov
push
data16
pop
pop
adc
test
mov
std
sarl
sbb
adc
loopne
sub
sub
jg
add
cmpsb
out
rcll
jp
xchg
js
xchg
outsb
pop
sub
sbb
sbb
fldcw
loopne
jecxz
decl
sti
jno
jle
xchg
cmpsl
mov
int
xchg
dec
xchg
pop
in
lods
inc
in
rcrl
mov
push
push
shrb
xchg
insb
nop
imul
insl
push
cmp
mov
ljmp
xchg
scas
fidivl
call
fs
mov
pop
fists
cld
push
pushl
es
dec
push
inc
and
hlt
icebp
iret
mov
xchg
push
sub
shlb
push
popa
adc
out
fcomip
pop
cld
sub
adc
lods
push
mov
cltd
js
je
stc
pop
cmpsb
adc
ljmp
jne
pop
jnp
arpl
sbb
jb
push
aad
dec
mov
inc
xor
inc
inc
adc
fadd
pop
cmp
outsb
mov
push
lds
inc
inc
adc
into
sbb
call
iret
mov
push
mov
pop
psubw
push
mov
sti
mov
cmp
inc
mov
xor
jae
cmp
call
sub
movsb
add
imul
das
cltd
lret
push
add
imul
imul
int3
call
std
sbb
adcl
mov
add
jb
sbb
test
incl
add
adc
enter
aad
xor
in
mov
leave
jge
jbe
ficoms
push
cmp
sbb
push
cmpl
lods
fnstsw
mov
and
lods
incl
push
xchg
fdiv
push
push
mov
or
adc
xchg
sbb
jle
xchg
jmp
inc
push
lret
or
out
dec
sbb
pop
push
and
popa
lods
add
dec
imul
xor
xor
add
push
xchg
loopne
imul
popl
icebp
fisttpll
inc
sub
jmp
pop
rcll
ja
sub
ja
sbb
jmp
xor
adc
rclb
jg
sti
mov
adc
xor
dec
repz
call
mov
push
inc
pop
mov
or
arpl
scas
jmp
pop
cmc
pushl
es
repz
jo
push
adc
add
adc
ret
movsl
push
mov
pushf
and
cmp
lahf
insb
jp
cltd
push
lock
lea
cmpsb
shlb
pushl
aas
dec
mov
jmp
repz
out
adc
pop
xchg
je
cwtl
sbbb
popa
lret
in
pop
roll
sbbl
xor
dec
mov
mov
push
push
movsb
and
mov
ficomps
scas
leave
lcall
mov
fistpll
dec
pop
hlt
sbbb
lods
sub
xor
loopnew
cmp
mov
add
call
shr
ret
imulb
insl
pop
sub
xor
out
pop
xchg
jecxz
push
insl
xor
pushl
pop
mov
or
in
xor
inc
leave
push
mov
mov
push
sub
data16
lcall
cld
push
xchg
pop
lcall
pop
push
mov
jb
push
lret
cmp
cmp
fwait
pop
sub
add
add
xchg
out
jmp
inc
and
xchg
std
jmp
out
ret
push
loopne
out
daa
std
je
imul
ds
inc
in
nop
xchg
jno
dec
sbb
dec
inc
jmp
or
out
gs
aas
pop
nop
cmpsb
cmpsb
int
nop
fists
cmp
push
arpl
call
cmp
cmpsl
pop
add
pop
push
mov
add
pop
popfw
mov
cltd
stos
mov
cmp
aas
push
fdivrl
arpl
xchg
adc
lcall
mov
rol
in
mov
mov
cmp
jl,pn
movsb
pop
insl
dec
mov
ljmp
xor
cmp
push
xorb
wbinvd
push
sbb
int
xorl
fcmovnbe
sar
jmp
into
hlt
xchg
jecxz
lock
sbb
shrl
cmp
xor
xchg
test
in
cmp
fs
out
jle
cmp
sub
dec
fmul
repnz
shl
jmp
mov
into
popf
je
or
mov
sub
daa
add
fildl
cmp
xchg
mov
popf
or
ljmp
add
mov
pop
cltd
loop
jge
out
and
mov
scas
push
ret
inc
mov
out
cmp
and
jno
dec
push
xor
decl
mov
dec
shlb
add
sub
mov
imul
ljmp
lcall
jge
pop
push
xchg
jns
ja
fstl
ret
cmp
and
movsb
jmp
out
xchg
aas
in
add
fbstp
jno
xor
test
arpl
imul
mov
ljmp
jns
adc
xchg
jmp
mov
push
pop
cmp
pop
jecxz
dec
jp
jl
in
xchg
push
lods
jne
dec
data16
sub
loop
fs
pusha
shll
jl
push
mov
jmp
push
and
mov
xor
aas
mov
ret
xor
or
insb
and
push
push
incl
in
nop
lds
or
lds
add
pop
cmp
repnz
inc
xchg
scas
add
lods
in
test
cmp
ret
dec
cmp
push
pop
clc
js
xor
inc
xor
pop
and
cmp
decl
xchg
icebp
cmpsb
xchg
nop
cwtl
ret
xchg
push
cmp
cwtl
inc
pushf
xchg
insl
loop
clc
inc
mov
pop
hlt
xchg
popf
xor
push
or
repnz
orb
lcall
push
adc
push
mov
in
mov
adc
sub
loopne
lock
incl
icebp
cmp
fmull
pop
adc
movsb
jmp
add
cs
cli
adc
push
adc
rorb
ljmp
xor
lds
outsb
rcrl
adc
xor
mov
jle
push
ds
aaa
std
mov
push
ss
les
or
mov
jnp
inc
in
mov
push
lock
mov
sbb
or
stos
jge
dec
inc
jo
repnz
mov
ljmp
jecxz
pop
add
fidivrs
in
iret
inc
add
jmp
mov
call
mov
sbb
rcrb
sub
test
inc
xor
sbb
out
insb
fdivr
decl
adc
sbb
sbb
popf
pop
movsl
adc
mov
sub
pushl
or
imull
sbb
icebp
mov
inc
push
xchg
mov
jae
pop
shl
sbb
decl
cmp
sahf
push
jp
add
mov
imul
int3
into
xlat
pop
lea
addr16
inc
sbb
or
test
fwait
lock
mov
aad
ja
cmp
jg
ja
enter
sub
in
fcompl
shrb
sbb
mov
cmp
out
inc
pusha
lcall
jle
loop
push
push
xchg
call
push
ficoms
mov
pop
jg
shll
je
push
fwait
xchg
mov
push
push
and
pop
adc
cmpsb
mov
fisttpl
out
ja
and
pop
testl
outsb
pusha
outsb
add
out
nop
lea
aad
sub
mov
ljmp
aaa
pushf
in
jae
push
pop
sbb
ljmp
lret
push
cli
dec
idiv
jecxz
out
cli
ficoml
jmp
or
cmp
enter
lods
aam
fnstsw
enter
sbb
decl
scas
push
loope
insl
xor
imulb
fstpt
jl
decl
mov
lret
dec
push
xlat
test
mov
sub
ss
inc
and
push
mov
loop
pushl
std
jmp
adc
cld
mov
mov
sahf
imul
inc
daa
repz
mov
pop
jp
lcall
sarl
xchg
jno
sub
decl
je
cmpsb
repnz
mov
call
gs
outsl
pusha
out
lods
stos
cmp
cli
mov
or
push
inc
cwtl
mov
add
cmp
fbstp
aad
ja
xlat
push
jns
jae
leave
shl
adc
push
incb
scas
lcall
push
mov
xor
sub
and
sti
aaa
lcall
add
pop
pop
mov
inc
xchg
les
scas
mov
decl
xchg
or
push
dec
or
push
stos
addr16
movsb
fwait
mov
rolb
lret
xchg
call
std
jg
pop
or
and
jbe
add
in
add
jge
nop
sarl
arpl
xchg
add
cmpsl
mov
sub
sub
mov
int
jbe
cmp
sbb
addr16
push
xchg
dec
ljmp
aam
ret
jp
out
test
nop
test
and
dec
cmp
decl
aas
xor
sahf
sub
sub
xchg
popa
insl
push
jmp
xchg
jmp
mov
call
inc
test
sbb
xchg
jae
sbb
mov
pop
iret
sbb
xor
lret
movaps
incl
insb
lock
xchg
adc
cwtl
dec
xchg
fisubrl
fidivl
lea
or
mov
fcomip
movsb
out
scas
lock
sub
pop
or
pop
aad
push
push
push
cwtl
xor
stc
ds
loope
mov
jle
cmc
pop
ljmp
adc
jb
rcr
shrl
icebp
dec
sub
ljmp
arpl
data16
fists
mov
lock
in
ljmp
mov
call
out
mull
fisttpl
or
je
inc
ret
sti
mov
xchg
outsl
mov
scas
and
fs
xlat
leave
rcrb
and
pinsrw
int
xchg
adc
jmp
in
les
test
cmp
mov
out
nop
and
xor
inc
push
jb
pop
push
push
incl
int
mov
jg
sub
pop
stc
lds
adc
push
push
movsb
mov
outsl
pushl
jge
ret
jmp
imul
sub
add
fs
or
in
sub
lcall
sahf
inc
sbb
add
and
ljmp
jns
sub
jge
and
pushl
dec
mov
pushl
xchg
mov
lods
inc
xchg
adc
cmp
sahf
mov
jecxz
add
lret
sbb
push
aam
adc
xor
or
mov
ffree
out
pushl
flds
jb
icebp
mov
pop
mov
arpl
mov
adc
inc
notb
imul
fdiv
fdivl
mov
scas
adc
and
add
ljmp
inc
ljmp
pop
pushf
cmp
xchg
mov
das
lahf
jl
xchg
jmp
sbb
aad
lret
iret
jo
in
lds
aam
aas
mov
jg
pushf
cli
jp
push
out
push
cld
call
or
pop
or
and
adc
push
mov
loope
sbb
jb
sbb
sub
lcall
in
xchg
mov
jmp
test
rorl
mov
jnp
sbb
mov
mov
aas
lcall
adcb
cmp
ss
mov
mov
add
sbb
in
dec
shrl
addl
cmp
imul
jl
loope
lcall
fimuls
mov
into
addl
call
or
cltd
sub
lcall
xchg
sub
ds
out
dec
push
aas
addr16
in
mov
mov
rorb
sub
add
test
cmp
sbb
fistl
cld
pop
sub
pop
aad
in
adc
inc
icebp
mov
dec
jb
or
call
in
dec
aaa
shll
cmp
or
xlat
aam
push
fs
stos
sbb
ret
jge
xchg
int3
mov
xchg
xchg
xchg
stc
or
ffree
outsl
jp
xchg
cwtl
js
popf
jne
jns
dec
push
cs
mov
cmc
hlt
mov
fwait
mov
cs
mov
lods
jecxz,pt
fisubl
mov
pop
stos
push
sbb
fisubrs
sarb
inc
pop
and
insb
mov
sbb
sti
pop
pushf
loop
push
mull
mov
jnp
jg
jmp
insl
cs
loopne
ja
inc
pop
pop
inc
mov
jl
jecxz
sahf
jbe
cs
sub
pushl
rep
adc
in
cmpsl
add
addr16
sbb
or
xchg
cmp
jbe
jmp
pop
lods
pop
adc
push
sbbl
sbb
test
rcrl
mov
mov
incl
js
out
xchg
rclb
movsb
pushf
dec
push
and
loop
pop
push
dec
mov
mov
mov
imul
jmp
cmc
int3
loope
push
sbb
mov
pop
ja
nop
mov
outsb
cmp
test
idiv
ljmp
push
imul
shll
es
mov
xchg
loope
xor
sahf
sbb
out
mov
fidivrl
xor
xchg
lea
decl
outsl
push
inc
inc
and
rorb
scas
int
shrd
shll
adc
fucomi
scas
movsb
xor
inc
fidivs
imulb
cli
sbb
cmp
movsb
imul
inc
sbb
pushl
mov
adc
cli
cmpsb
adc
repz
je
add
jae
divl
fisttps
inc
sahf
dec
in
cmpsb
adc
stc
lea
aam
cmc
filds
ds
cmp
pop
mov
mov
cmp
sub
xchg
or
add
mov
scas
pop
je
sbb
jge
fcomip
pushl
adc
fcoms
xor
mov
push
push
sub
jg
rcl
lock
movsb
mov
das
scas
ja
xchg
std
repz
mov
insb
and
mov
scas
lahf
pop
ja
dec
sbbl
test
pop
cld
push
loop
call
sbb
xchg
dec
jl
test
jbe
mov
fnstsw
lcall
or
pusha
xor
fs
sub
in
mov
movsb
lcall
ret
xor
push
out
mov
and
aam
enter
cltd
mov
inc
add
jo
out
dec
mov
incl
es
xchg
dec
int3
cmp
fisubs
fcmovnb
fldt
or
cmp
push
or
mov
nop
movsb
inc
lahf
sbb
cmp
push
ret
loopne
test
push
call
and
mov
les
push
push
xchg
fbstp
out
repz
cmpsb
adc
lcall
sub
and
imul
pop
stc
adc
push
gs
aad
das
cmpsb
ljmp
cmp
dec
xor
repnz
mov
or
call
scas
movsl
cmc
xchg
pop
xor
mov
mov
mov
add
sub
or
add
sub
sub
inc
inc
ds
jg
out
sub
test
jg
or
movsb
nop
js
rorl
insb
jae
mov
pop
pushl
or
dec
fldcw
sti
lock
cltd
adc
or
cltd
ret
ret
cmp
or
mov
fs
call
popl
cltd
xchg
enter
test
stos
mov
xchg
cmp
stos
dec
std
jae
fsub
pushf
in
push
aaa
sarb
ret
addb
jne
arpl
ret
pop
cmp
into
sub
xchg
test
xor
inc
push
sbb
in
pop
pushf
jecxz
gs
cli
insl
jno
xor
in
decl
jo
mov
aaa
cmc
cmc
cmp
jmp
push
mov
imul
inc
loope
or
dec
leave
add
xchg
adc
cmc
testb
mov
jne
mov
or
ljmp
cmp
mov
push
fstpl
arpl
jmp
call
sahf
mov
xchg
lds
pop
ret
mov
add
xor
jne
lahf
jmp
adc
jl
imul
mov
mov
xor
es
xchg
push
pop
xchg
pop
sub
or
in
clc
and
adc
insb
xchg
push
or
dec
das
xor
add
inc
lcall
inc
out
in
into
jo
and
scas
imul
push
push
push
jl
sub
jp
jmp
dec
jp
hlt
sbb
push
sbb
push
gs
dec
mov
mov
movb
outsb
arpl
xchg
push
test
pop
dec
jbe
das
decl
mov
adc
inc
mov
sub
mov
dec
out
add
push
sbb
lret
in
pop
xchg
call
add
ja
test
lcall
lods
xor
mov
pop
ljmp
decl
sub
push
add
sbbl
cmpsb
cmp
outsl
and
cmpsl
pop
decl
pop
cmpsb
int
test
mov
mov
mov
xor
cmp
icebp
fbld
xchg
inc
or
rol
sub
bound
in
js
push
test
mul
pop
and
xchg
jge
push
cli
lcall
add
add
loop
test
jecxz
or
mov
es
incl
lods
into
pop
out
lds
push
adc
pop
xor
mov
out
mov
sete
fbld
subb
dec
test
jge
pushf
jmp
test
xchg
mov
mov
xchg
idiv
incl
mov
jnp
aas
adc
outsl
rcll
cmp
xor
and
cld
lahf
sub
jp
pop
jnp
sbb
xchg
add
dec
sbb
js
or
jne
sbb
incl
inc
mov
data16
mov
inc
sti
mov
push
pop
outsb
lods
mov
ljmp
clc
pop
push
mov
test
lea
loop
sub
aam
add
mov
cmpl
pop
mov
faddl
icebp
add
mov
pop
repz
and
js
pop
and
cmpsb
fisttps
mov
repnz
scas
jns
adcb
pop
dec
pop
call
daa
add
dec
repnz
sub
lds
aaa
xchg
rclb
cmpsb
fisubs
mov
cmp
std
popa
fdivrp
dec
xchg
into
clc
push
fcmove
andb
mov
push
pop
jns
dec
loopne
dec
test
inc
sahf
lret
dec
aas
stos
cmp
int3
sub
das
aam
pop
cltd
mov
sbb
dec
cmpsl
jle
cmpsb
lock
xorb
push
lret
push
add
mov
mov
les
jp
sahf
xchg
sbb
ljmp
cmp
push
jb
icebp
push
cmp
out
clc
mov
xchg
aaa
mov
mov
in
jmp
sub
mov
adc
lahf
cltd
mov
stos
cmp
int3
mov
movlps
gs
and
aam
ljmp
sub
test
jle
js
adc
bound
cmp
sbb
test
repz
xchg
call
test
xor
xchg
and
mov
daa
ja
mov
jno
out
pop
fistpl
jg
lcall
mov
lahf
jns
ljmp
or
or
shlb
fcos
jns
adc
pop
push
repz
movsb
test
pusha
pop
int3
xor
std
and
sbb
fwait
xchg
push
mov
jns
stos
repz
pop
sbb
jnp
cltd
mov
push
lds
rcl
ljmp
ljmp
ja
sbb
not
mov
pop
dec
neg
testb
mov
pop
inc
xchg
mov
jbe
js
xchg
es
es
lcall
dec
mov
push
scas
add
fwait
mov
call
inc
mov
dec
into
sbb
inc
mov
repnz
cmc
test
add
sub
rol
mov
mov
ficoms
cmp
sbbb
cltd
add
std
mov
pushl
jg
mov
mov
jecxz
cmpsb
ficoml
adc
and
shrl
jl
sbb
notl
imul
and
add
fcomip
iret
pushf
jl
or
add
enter
imul
lcall
test
fdivr
push
adc
and
cwtl
add
jge
adc
outsl
mov
cmpsb
fwait
shl
lahf
xchg
jbe
cmp
jp
repnz
js
and
mov
les
pop
iret
cmpsb
xchg
and
fisttps
movsw
punpcklwd
and
ror
ss
test
fsub
fldt
or
divb
ficoms
dec
mov
push
cmp
jnp
ljmp
mov
mov
sbb
inc
jnp
mov
iret
popa
mov
dec
ds
inc
dec
jne
daa
fcoms
xchg
nop
cwtl
sub
ret
outsb
fisubrs
add
jmp
lahf
cmp
lret
jp
pop
jno
int3
push
push
repz
inc
fbld
lods
mov
into
xor
mov
inc
or
std
das
out
mov
jl
or
test
idivb
insb
push
xor
pop
stc
and
pop
cli
jg
dec
pushf
inc
push
sub
ja
and
xlat
add
jg
jmp
pop
int
pop
aaa
and
scas
mov
push
or
incl
push
pushf
push
mov
jl
or
repnz
add
popl
sti
sbb
lcall
push
pop
cld
adc
pop
loope
add
push
jnp
jp
icebp
adc
sub
and
mov
decb
bound
inc
jl
movsl
add
mov
pop
xchg
and
adc
ljmp
mov
cwtl
pop
cld
ja
mov
adc
mov
lods
push
jecxz
xor
clc
pushl
dec
and
outsl
push
fiadds
cmp
cmp
insb
xchg
stos
adc
sbb
jle
push
incl
mov
lcall
fs
jnp
int3
stc
pushf
pushf
fiaddl
testb
mov
mov
dec
pop
push
jmp
mov
sub
mov
mov
push
pop
push
aam
rcll
sbb
notl
lods
sti
mov
mov
jge
aad
neg
inc
pop
push
adc
fwait
int
push
out
fiaddl
idiv
mov
xor
or
data16
call
push
pop
jmp
stc
icebp
jmp
leave
pop
gs
decl
test
inc
stos
stc
cs
xorb
ret
inc
add
arpl
test
or
iret
push
loope
rorl
cwtl
dec
nop
mov
mov
mov
sbb
cmp
xor
shr
int3
fmuls
sub
sarb
push
in
fsubrp
aam
lcall
jae
and
sahf
scas
xchg
mov
mov
icebp
sub
pop
cltd
sbb
pop
iret
adc
sti
jmp
sub
dec
in
mov
inc
stos
mov
paddb
push
mov
in
pushl
ljmp
mov
fistpl
outsl
scas
sub
sub
mov
aad
pop
push
dec
pusha
xchg
shrl
or
xchg
jg
mov
and
pop
push
mov
popf
ds
pop
inc
int
inc
adc
ljmp
jbe
test
fstl
sbb
jp
mov
stc
xor
incl
adc
or
lea
movsl
dec
mov
push
in
sar
mov
scas
pop
dec
dec
stos
xchg
cmpsl
arpl
sub
xchg
lods
mov
mov
or
pop
std
jmp
enter
inc
or
lret
sub
je
cmp
mov
pushl
dec
in
fidivrs
sub
mov
clc
push
push
lock
pusha
movsl
or
cli
ljmp
out
cmp
mov
cmp
ljmp
mov
inc
cmp
dec
outsb
mov
push
arpl
ror
stc
push
mov
pusha
scas
mov
mov
mov
icebp
or
movsb
sbb
push
clc
in
pop
jns
xor
jl
xor
mov
outsb
inc
pop
out
pop
decl
mov
lods
scas
xchg
js
xchg
pop
dec
push
fisubl
cld
insb
lcall
sub
iret
mov
popf
jno
cmpl
stos
hlt
insb
and
test
outsb
jmp
fbstp
jg
and
mov
cmpl
mov
lea
mov
mov
rclb
add
test
sti
leave
mov
sar
pushl
sbb
jne
push
aam
xor
xchg
jno
fwait
or
xchg
mov
cmpps
pushl
icebp
int
je
add
loop
test
aad
jle
and
test
rorb
and
cltd
pop
jnp
lods
xor
decl
xor
dec
cmp
mov
in
inc
bswap
nop
jbe
and
cli
lcall
fcmove
ss
adc
jle
xchg
mov
mov
cltd
mov
roll
or
mov
jmp
inc
adc
add
add
pushl
jmp
mov
loopne
push
shll
daa
pop
cmp
das
call
clc
mov
enter
adc
in
add
sbb
and
ljmp
and
mov
add
jecxz
pop
stos
incl
fcoms
inc
pushf
std
jbe
fdivrp
and
mov
jb
xchg
sub
mov
std
mov
fsubrs
sbb
div
pop
addr16
mov
jmp
mov
repz
push
rcl
scas
aam
movsb
dec
ljmp
adc
and
dec
movsb
ljmp
inc
ss
dec
stos
push
sbb
jmp
fcomps
out
push
shl
xchg
loope
cmp
das
ror
fadds
mov
das
push
shlb
xchg
ja
test
sarl
in
mov
in
stc
and
inc
out
rcl
mov
mov
cmp
push
adc
pop
xor
decl
push
and
jp
or
fistps
cld
decl
and
sbb
fwait
inc
xchg
xlat
mov
popf
movsl
adc
adc
lock
cltd
dec
in
cmp
out
inc
sbb
popa
jg
popa
sub
push
aaa
inc
inc
add
add
xlat
lock
loop
mov
es
adc
inc
lods
inc
cld
jg
movl
pushf
cmp
push
orl
cmp
inc
xlat
sbb
pusha
stc
nop
ss
and
in
scas
roll
ljmp
in
js
inc
and
mov
lock
movsl
fisubl
aaa
mov
call
aam
sub
xchg
adc
sbb
mov
cld
popf
dec
stos
jg
mov
imul
push
mov
ja
icebp
inc
into
les
mov
loopne
subb
ficoms
mov
dec
andl
sbb
sbb
or
dec
shll
aaa
mov
adc
push
in
push
call
pop
mov
inc
aam
xor
mov
clc
mov
iret
xchg
sar
ljmp
xor
js
sbb
enter
lret
fistl
jb
scas
pop
add
movsl
das
cmpl
call
les
es
repz
lea
push
ljmp
int3
mov
sbb
mov
fadd
lahf
aad
loope
rcll
test
inc
jg
jecxz
jle
fsubl
lds
insb
mov
rcll
popf
xlat
mov
jae
mov
movsl
aad
lret
loopne
jp
cmp
push
loopne
mov
jg
jg
xchg
xchg
frstor
jae
sahf
notb
jmp
insl
mov
dec
pop
sub
push
xchg
mov
sub
sub
fsubrs
repz
jb
sbb
repz
popl
mov
jno
sbb
or
and
push
mov
call
fbld
sub
pop
loope
into
and
ss
xchg
mov
jae
es
fdivr
mov
test
add
mov
pop
pushf
lret
imul
pushf
jae
insl
mov
and
pushf
inc
test
sbb
pusha
ret
bound
adc
push
fadds
ljmp
outsb
shrb
mov
push
inc
fbld
adc
roll
lock
mov
sahf
les
cmp
testl
ljmp
sub
fsub
cmp
cld
mov
jp
ss
repz
pop
or
pop
movsl
push
cld
pushl
dec
push
pop
and
xor
gs
mov
call
mov
xchg
cwtl
inc
fs
ret
cli
inc
incl
imul
incl
pop
stos
push
lcall
xor
sub
dec
je
lcall
dec
std
mov
sub
xor
div
int
sub
cmp
xor
lret
jmp
loop
cmp
jo
jnp
rcrl
and
xor
out
int3
push
in
imul
int3
incl
ja
enter
mov
inc
push
jle
adc
jns
and
dec
outsb
mov
decl
or
mov
or
cmc
push
test
int3
xchg
cmp
lods
push
mov
insl
shrb
lcall
fisttpll
push
mov
pop
mov
xchg
jb
jnp
xchg
mov
inc
jnp
out
xor
add
aas
movsb
jp
data16
loopne,pn
xchg
out
sbb
inc
xor
call
cwtl
sub
mov
mov
mov
leave
test
adc
out
mov
jle
daa
and
lcall
cmp
idivb
ss
nop
jl
in
sub
loope
call
or
lock
outsl
subl
or
mov
mov
push
lahf
or
ljmp
fs
xor
xchg
inc
or
inc
out
lds
lea
pushl
lock
ficoms
pop
iret
push
je
nop
adc
pusha
pop
jbe
movsl
std
pushl
fcompl
rcll
add
iret
out
scas
ret
xor
popf
lds
jmp
pop
or
cmp
push
fdivl
dec
icebp
mov
decl
push
loop
sub
bound
cmpsb
add
aaa
fstps
or
fwait
cld
jg
ljmp
cli
out
lahf
or
mov
ficomps
mov
rolb
pop
and
lock
push
sbb
cmp
mov
mov
rcrl
popa
scas
push
or
push
cltd
int3
mov
test
call
xor
or
adc
xor
xor
adc
xchg
leave
gs
decl
adc
sbb
pushf
mov
outsl
mov
in
cmp
sub
ja
loopne
xchg
sub
lcall
out
mov
jge
xchg
roll
cmc
int3
dec
cmp
inc
cld
xor
les
call
je
cmp
rcll
in
push
movb
lcall
in
adc
push
jbe
sub
gs
addr16
movsl
add
ficoms
mov
rorb
cwtl
imul
xchg
mov
sbb
out
xchg
lock
lock
pop
jae
jmp
jnp
dec
pop
fists
sbb
test
shll
js
lahf
popa
repnz
xchg
and
mov
movsl
inc
dec
scas
xchg
clc
cmpb
arpl
xlat
cmp
or
pop
bound
loope
mov
push
push
imul
jg
pop
in
shrl
mov
mov
hlt
aad
sub
mov
movsl
xchg
dec
cld
dec
loope
jmp
xor
sarl
lcall
and
push
ds
inc
xchg
adc
aaa
push
data16
lods
aaa
and
mov
mov
pushl
pop
pushf
xor
data16
pop
mov
cmpsl
jmp
dec
pushf
clc
js
lcall
adc
data16
ljmp
lret
jb
aad
push
sub
dec
les
rorb
mul
lahf
and
mov
jo
jnp
sub
dec
shrl
xchg
hlt
fildl
outsb
aaa
mov
pop
pop
xorl
mov
movsb
pushl
xor
add
sti
jl
dec
rolb
test
or
push
cmp
pop
cmp
nop
call
mov
jae
bound
push
cltd
xor
xchg
push
xor
mov
fcos
incl
cmp
lret
push
push
sbb
js
pop
call
pushf
mov
stc
cmp
shr
inc
repnz
mov
jno
mov
fxch
pop
jmp
lds
ud0
incl
sbb
outsl
stc
es
mov
adc
mov
jmp
insb
xor
ljmp
mov
fdivs
pop
inc
lret
push
jg
or
push
into
and
leave
sahf
add
mov
scas
cmp
jge
imul
mull
movsl
pop
dec
int3
movsb
incl
or
mov
and
jmp
sub
jnp
xor
jg
cmp
add
arpl
in
mov
fwait
and
add
testb
jb
arpl
lret
in
mov
in
dec
cmp
fisubl
fucompp
and
sbb
sub
in
addr16
ljmp
test
jnp
scas
ljmp
xor
loopne
rolb
sti
dec
pop
std
jnp
pop
jbe
mov
gs
add
fldenv
dec
test
xchg
inc
or
sbb
push
sarb
dec
xor
jnp
adc
cmc
pop
sub
sahf
aaa
pop
pop
test
adc
scas
mov
mov
call
dec
loopne
in
cmpsb
inc
adc
loopne
pop
idiv
call
shlb
aaa
xchg
out
xchg
aas
mov
inc
movb
pop
lock
jecxz
ret
lret
arpl
push
sub
mov
repnz
cld
out
mov
cmc
dec
xchg
cwtl
push
dec
push
push
jecxz
sbbb
mov
dec
and
xchg
ljmp
sbb
fisubrl
fists
fistpll
lcall
es
dec
sbb
inc
js
outsl
dec
movsb
pop
add
out
repnz
or
or
xchg
cmp
in
call
stos
fs
pop
jno
clc
mov
push
xchg
test
pop
fxtract
adc
cmc
adc
xchg
lcall
xchg
fisttpl
cmp
mov
aam
into
fsubl
or
mov
rclb
xchg
mov
xchg
imul
jge
sbb
mov
sti
mov
lock
in
sahf
add
xchg
cmp
jg
lea
ljmp
mov
rolb
or
inc
pop
adc
fdivs
cltd
sahf
fsubp
ljmp
lcall
mov
xor
push
outsl
bound
jbe
pop
repnz
sbb
jns
jne
aaa
leave
cli
jno
repz
xor
aam
out
shlb
cmp
mov
inc
lret
pop
into
pop
sub
xor
cmp
into
and
push
scas
data16
call
enter
popf
in
and
and
pop
fstpt
je
cmc
inc
icebp
les
decl
sbb
clc
aaa
mov
add
xchg
aad
clc
xchg
divb
aam
test
cmp
inc
nop
ficoms
addr16
aad
sbb
sub
test
es
test
jg
call
stc
aaa
lds
test
mov
pusha
clc
out
cmp
fldenv
fidivrl
push
jl
jae
mov
mov
jp
mov
fsubrs
test
and
loopne
push
test
jmp
jo
sbb
jns
push
pop
ret
ds
int
mov
mov
arpl
and
fbld
movsb
std
repnz
jmp
lahf
jp
push
fbld
cmp
mov
nop
jne
mov
in
cmp
sbb
pushl
sbb
loope
outsl
pop
inc
jmp
sbb
add
jno
inc
pushl
push
ja
cmp
pusha
and
ss
subl
outsb
mov
inc
add
lock
add
cld
icebp
pop
mov
daa
stos
div
cmp
xchg
in
out
dec
lea
ljmp
rorb
sbbl
ror
out
scas
je
push
sub
jmp
pushl
mov
push
push
mov
fimull
push
jnp
xor
inc
incb
data16
mov
cmpsb
bnd
cmp
xchg
adc
insl
xor
push
pushl
xchg
sbb
cmp
mov
mov
sbb
out
cli
pushl
cld
fbld
xchg
jo
stos
repz
fcmovnu
popf
mov
xchg
aaa
jnp
sar
and
incl
or
in
movsl
xor
insb
test
mov
cmpsb
dec
fwait
call
or
pusha
add
inc
adc
flds
ret
data16
in
lret
mov
push
aam
js
cli
xchg
cmp
addl
lret
mov
cmp
test
and
push
xor
movsl
dec
fstl
incb
xor
xchg
sub
add
in
sbb
ljmp
or
cmp
pushf
rolb
repz
mov
inc
test
push
test
adc
out
nop
lcall
test
fcom
iret
inc
ret
fcomip
mov
pop
ds
shlb
aaa
nop
jo
lret
addb
cmpsl
out
pushl
cmp
and
lret
ss
sub
mov
fnstsw
sbb
lcall
mov
pop
dec
loopne
dec
add
aaa
push
lahf
loop
shll
aam
mov
sbb
ljmp
adc
je
add
fiadds
ja
lcall
aas
arpl
iret
xchg
scas
shlb
fstps
jg
pop
aaa
rorl
aas
dec
dec
cmp
out
xchg
pop
dec
mov
xchg
xor
scas
jbe
rclb
nop
mov
mov
adc
push
sub
maskmovq
negl
xor
dec
js
loopne
xchg
adc
or
mov
xchg
bound
pop
decl
rclb
icebp
popf
dec
mov
in
pushl
test
xchg
xchg
pop
xlat
insb
iret
sub
xchg
subl
xchg
lret
push
mov
cmp
les
inc
mov
pop
mov
pop
xchg
fidivrs
xchg
stc
add
adcl
stos
aas
test
xor
push
push
jnp
xor
dec
loop
ljmp
sub
testl
jmp
jno
inc
mov
out
stos
lds
shrl
ja
sub
inc
int3
add
ss
sti
arpl
jmp
out
mov
pop
in
movsl
sub
outsl
inc
sbb
dec
sub
jne
call
cmp
outsb
imul
mov
pop
test
xchg
arpl
mov
add
xor
ds
xlat
call
stc
jo
jne
icebp
sbb
orb
pop
add
int3
pop
lcall
sub
lea
mov
aaa
aad
add
loope
stos
inc
stos
repz
mov
dec
inc
clc
loopne
incl
mov
mov
rolb
sub
cmp
mov
iret
cwtl
loope
adc
cmp
ficomps
aas
or
lahf
data16
sarl
roll
push
adc
push
jg
jg
mov
call
inc
jmp
mov
push
jmp
push
xchg
leave
xchg
ljmp
cli
hlt
pop
adc
cmpsl
mov
and
leave
out
add
xor
insl
inc
insb
xchg
xor
jmp
insb
movl
cltd
dec
or
mov
dec
pop
pop
mov
jecxz
lcall
add
cwtl
add
mov
add
push
lcall
lds
incl
xlat
shrb
sahf
adc
in
stos
ljmp
clc
out
inc
push
incb
inc
ja
push
mov
cltd
dec
aas
testl
decl
dec
cwtl
jo
movsl
xchg
subb
data16
cmp
in
xorl
or
sbb
mov
ljmp
mov
and
sbb
filds
mov
xor
jbe
pop
adc
je
mov
ljmp
mov
iret
sar
call
xchg
and
cmpsb
mov
pop
xor
xor
push
pop
dec
adc
pop
mov
push
inc
ret
and
movsb
xor
mov
add
mov
fisttpl
stos
dec
jmp
bound
xchg
sbb
jge
xor
mov
repz
fsubrl
dec
inc
insb
sub
cwtl
rcll
jne,pn
adc
mov
pop
in
push
pushf
add
incl
jnp
mov
mov
rorl
push
nop
mov
test
add
loop
out
sbb
pop
inc
std
ljmp
and
aam
xchg
cmp
xchg
add
pop
mov
adc
in
xor
pop
in
sub
in
add
inc
lret
pushf
sti
out
shl
push
scas
call
ljmp
sbb
int3
inc
push
pop
dec
int
or
repz
outsb
loop
sti
xchg
inc
sti
cld
call
cwtl
stos
arpl
xor
cmp
hlt
pop
cmp
mov
push
adc
and
sbb
addb
inc
or
outsl
int3
sbb
pop
test
xor
decl
pop
mov
fs
push
mul
pop
jmp
jb
lods
outsb
test
fwait
shll
inc
xor
lcall
cwtl
in
aaa
pop
mov
dec
and
cmp
clc
adc
fsubrs
lock
jnp
lods
xchg
out
clc
sub
dec
adc
cmp
jae
push
outsb
in
bound
or
pop
call
ss
in
cltd
daa
jnp
and
movsl
es
and
dec
xchg
cltd
scas
lahf
das
and
jl
mov
jl
push
xchg
push
mov
lahf
js
pop
xor
imul
sbb
and
incl
test
and
xchg
xchg
and
sarl
pushf
cwtl
lcall
incl
dec
jg
mov
xchg
dec
mov
in
cmp
jmp
sub
xchg
or
aaa
sbb
lcall
jl
ficoms
into
push
xchg
incl
cld
orb
rorl
fimuls
sbb
pminub
inc
ds
ljmp
mov
mov
repz
cltd
lret
and
cmp
leave
or
jg
push
stos
add
sub
divl
inc
das
xchg
leave
rorb
jns
jb
cmp
sbb
jmp
rcrb
pusha
ret
jno
fisttpll
push
sub
adc
jl
in
loop
mov
xlat
es
sbb
mov
push
mov
call
ret
add
sbb
xchg
jge
lret
sarl
jbe
mov
rcrl
jmp
add
repnz
lret
cmp
rcll
and
cltd
lds
dec
add
rclb
push
fdiv
rcrl
sbb
call
rcrb
push
xor
sbb
dec
icebp
fwait
sti
cltd
cmp
repz
xlat
mov
decl
jmp
sbb
leave
add
enter
jmp
sbb
pop
popa
out
clc
repnz
dec
cld
mov
aam
push
mov
scas
scas
fdivl
mov
dec
insb
leave
lock
incl
mov
aaa
mov
inc
repnz
or
stos
loopne
scas
decl
bound
xchg
jecxz
sbbb
pushl
sub
sub
pop
push
out
cwtl
jb
ljmp
call
iret
out
xorb
inc
pop
sbb
cmc
mov
push
icebp
test
cmpsb
lahf
out
incl
mov
dec
inc
xchg
in
ret
inc
mov
pxor
lret
or
jmp
mov
or
inc
push
adcb
loope
rorl
pop
mov
xchg
pushl
sub
into
fnsave
jns
scas
push
mov
pop
sub
hlt
hlt
adc
jg
mov
and
mov
cmp
js
sbb
lods
rorl
sahf
sub
adc
xchg
add
sub
jmp
xchg
cli
or
loope
cmp
ret
movsb
gs
test
jg
dec
movsb
or
ret
mov
ret
mov
sti
test
lods
sub
jb
mov
jb
dec
pop
sub
adc
lcall
pop
int
dec
xchg
leave
out
fsubrs
jl
lds
aam
jle
inc
inc
jnp
incl
data16
inc
mov
push
mov
cmp
jnp
shll
decl
mov
and
cmp
adc
shl
sub
xchg
jb
xor
repz
jmp
add
and
xchg
ja
mov
mov
bound
xor
lret
imul
pushl
rcrb
out
adc
cs
xchg
jne
daa
jns
idiv
ljmp
loopne
sbb
div
cmp
sbb
ret
sub
mov
pushl
insb
pusha
and
sbb
pop
xchg
rclb
in
lret
rcl
scas
vpsrad
xchg
pop
adcb
lret
loopne
adc
jl
dec
or
jns
sub
enter
lock
jbe
and
xchg
fistl
jecxz
jecxz
insl
enter
sub
icebp
in
popa
fnstenv
mov
jmp
decl
js
xchg
ret
jb
ljmp
int3
cmpsb
mov
mov
sarb
repz
shll
fwait
jmp
xor
push
xor
cmp
popf
and
lcall
ja
sub
push
xchg
pop
xor
xor
insl
das
push
sub
iret
gs
ljmp
cmp
xchg
jmp
sbb
sub
xchg
cltd
incl
inc
lcall
mov
fldt
fistpll
cld
lcall
loope
ljmp
or
push
js
rorl
dec
lods
out
jae
call
lods
pushf
sub
scas
insl
dec
scas
std
jmp
or
sbb
push
mov
add
sbb
xchg
gs
push
lods
push
das
adc
pushl
out
adc
and
lods
lahf
mov
idiv
incb
mov
jp
aad
sbb
jns
inc
fisttps
lcall
test
fcomip
mov
outsl
mov
iret
xchg
xchg
and
sti
cs
into
js
sub
incl
outsl
ds
dec
insl
icebp
add
inc
insb
xchg
mov
notb
outsb
mov
pop
mov
add
outsl
pusha
lcall
testb
pop
xchg
push
bound
sub
xorl
call
add
jbe
mov
loopne
incl
repnz
mov
loopne
mov
popf
pop
push
fdivr
pop
push
das
sbb
lcall
xchg
push
scas
stc
xor
in
pop
lock
fidivl
or
daa
pop
add
repnz
fcomp
mov
cmp
imul
mov
stos
push
and
sub
inc
sub
add
mov
sub
int3
pop
sbb
lods
push
dec
cmp
pop
cmc
dec
xchg
sbb
xor
push
mov
mov
out
aad
addr16
add
nop
add
iret
test
xor
ds
lcall
das
nop
gs
pushl
hlt
cmp
mov
inc
ljmp
ret
lods
jo
mov
popa
call
xor
in
mov
mov
xor
seta
add
lea
adc
inc
and
insl
insb
ljmp
add
mov
fcom
mov
stos
mov
pop
sbb
and
sar
lcall
inc
pop
xchg
cmp
pop
mov
xor
fmuls
ljmp
ficoml
cmpsb
push
and
mov
lds
sbb
add
decl
dec
fdivl
fcomi
ds
arpl
in
cmp
cmp
inc
mov
bound
cli
cmp
mov
and
add
out
cli
enter
rolb
and
popa
sbbl
push
hlt
ljmp
xchg
jb
mov
push
jae
clc
push
add
lret
push
jle
push
cmp
fisttps
ret
gs
pushf
cmpsl
aad
mov
data16
push
ss
mov
adc
mov
jns
add
push
xchg
out
imul
ja
imul
dec
scas
cmpsl
mov
xor
inc
cltd
cli
dec
or
add
xchg
dec
fwait
insb
in
dec
pushf
adc
cmp
and
decl
incl
outsb
xor
push
sub
popf
mov
mov
xchg
cs
push
mov
mov
jbe
lcall
nop
fidivrl
mov
push
adc
je
or
jecxz
push
lock
call
cmp
nop
xchg
sahf
int
xchg
out
lret
sahf
push
or
cmp
aaa
mov
fbld
adc
push
push
imul
mov
mov
pushl
cmpsb
xchg
cs
inc
mov
mov
cmpsl
pop
test
xchg
les
dec
push
out
sub
lds
mov
xchg
gs
sbb
call
mov
out
test
pop
sub
push
jg
cmp
xchg
sub
sub
pop
std
cmpsb
pop
mov
gs
sub
andb
push
sub
into
jecxz
and
ja
sbb
sbb
je
mull
movl
out
dec
in
sub
pop
inc
dec
or
icebp
fbld
dec
mov
adc
sub
sti
cmp
lcall
mov
fcomip
jmp
add
adc
popf
in
sbb
push
cmp
jne
jl
loope
cmp
ljmp
shlb
fildl
sub
pop
fsubrl
push
jmp
inc
inc
in
or
adc
jl
push
cmpsb
mov
subl
push
cmp
xchg
lods
cmc
into
xchg
cli
mov
add
fs
cld
pcmpeqd
jno
pushl
aad
jae
fstps
xorb
lods
sub
adc
hlt
ret
shlb
mov
push
in
sbb
pop
outsl
push
stos
and
push
fcomip
ds
fldpi
out
dec
xchg
outsb
add
rcrb
dec
dec
inc
xchg
push
cmp
push
andl
cmp
lods
dec
sbb
cwtl
adc
jo
das
imul
inc
out
lcall
ljmp
adcb
aam
test
dec
andl
or
fcomps
ljmp
ljmp
jp
int3
shl
sbb
inc
or
mov
cmp
mov
lret
dec
pop
call
fnstsw
pop
dec
push
lods
mov
stos
or
in
cltd
jb
xchg
mov
stos
mov
or
mov
add
add
add
mov
data16
cmc
stos
movsb
or
xchg
push
jne
bswap
incl
jbe
imul
adc
nop
jge
mov
daa
or
mov
lcall
push
fistl
sub
dec
xor
mov
mov
enter
ljmp
lret
xor
stc
sbb
aad
sub
adc
scas
inc
lret
mov
movsb
or
int3
jmp
imul
iret
mov
xchg
dec
je
and
in
adc
vmulsd
jnp
fcomip
mov
mov
ljmp
jo
dec
sar
and
fsubs
pop
scas
sbb
ds
ljmp
rcrl
adc
jl
jbe
push
mov
rcrl
cmp
mov
fbstp
ror
or
add
or
jge
jg
dec
std
adc
lcall
data16
pushl
and
jp
pop
filds
inc
jecxz
shr
cs
das
bound
push
push
fidivl
lcall
and
lods
add
es
fs
ss
scas
rol
jae
ljmp
cmp
ljmp
out
aad
jno
cmpsl
push
shrl
push
jmp
icebp
xchg
xor
out
das
mov
mov
jmp
pop
and
lea
pop
insb
xor
mov
imul
bound
pushl
push
je
divb
adc
mov
decb
inc
xor
push
sub
mov
decl
lahf
shr
mov
jmp
stc
sarl
out
mov
inc
fistps
lock
inc
mov
scas
clc
ljmp
mov
xor
fwait
adc
cmp
testb
inc
shrl
or
rcl
jp
testl
cmpsb
mov
orb
lcall
rolb
nop
jae
jo
mul
xchg
mulb
aam
test
pop
and
mov
jmp
push
rcrb
in
cmp
sbb
imul
inc
mov
mov
mov
or
call
adc
scas
push
call
loope
cmp
repz
sidtl
jmp
icebp
push
dec
outsl
call
in
lret
movsl
ds
add
jns
sub
mov
cmp
in
lret
or
push
jp
pushf
icebp
data16
loopne
jge
movsb
push
pop
mov
test
pushl
les
popf
xchg
mov
fidivrs
movsl
inc
leave
mov
cld
icebp
pushl
addr16
jge
jb
popf
sub
bound
push
adc
push
sar
xor
and
icebp
jg
mov
stc
lahf
pop
inc
outsb
cwtl
push
data16
jo
fsubs
shl
lcall
xchg
mov
ljmp
pop
cld
cld
cmp
adc
test
stos
lock
inc
add
dec
push
pop
int3
add
clc
in
jne
outsl
pop
aaa
aaa
push
ds
or
mov
dec
sub
add
xchg
xchg
mulb
jne
push
push
add
mov
fnstcw
test
adc
jnp
addr16
mov
pop
xchg
push
jno
jns
in
outsl
mov
out
getsec
sbb
incl
mov
sarb
jnp
ret
decl
xor
mov
pop
fsubrs
xorb
and
mov
jg
in
insl
pop
jecxz
dec
pop
pop
adc
pop
fs
push
push
arpl
scas
test
or
incl
lahf
hlt
cmp
adc
stos
dec
fildl
mov
cwtl
cmp
push
mov
scas
ss
xchg
cmp
imul
push
lea
pop
push
stos
xor
and
icebp
pop
cmc
decl
push
outsl
dec
mov
jl
pusha
inc
add
xor
jo
loopne
lcall
cltd
icebp
js
idivl
mov
sar
jl
addr16
call
xchg
jg
jp
or
aaa
std
pushl
mov
ds
mov
addb
dec
mov
ljmp
mov
bound
mov
lods
test
loope
push
aaa
jns
pushf
cmpsl
cmp
sar
mov
adc
and
dec
xor
sub
dec
mov
adc
call
addl
pop
dec
shrb
scas
dec
mov
sarl
icebp
pop
push
insl
jp
inc
out
loopne
lea
adc
mov
dec
cmp
lea
adc
cmp
loop
cmp
dec
and
sbb
js
mov
test
lret
rcrb
or
lods
mov
inc
mulb
cmp
sbb
cmp
das
xor
jl
xor
mov
cwtl
arpl
mov
pop
jmp
xchg
decl
jno
pop
inc
jmp
lcall
sub
inc
aas
and
movsb
dec
pusha
push
arpl
add
mov
addr16
fadds
push
das
jbe
insb
ror
xchg
cmp
into
data16
and
fimull
or
fisubrs
push
pop
daa
mov
dec
or
mov
push
call
jmp
mov
jno
incl
cli
push
add
adcb
inc
cmp
pop
loopne
ljmp
into
sbb
insb
lcall
adc
cwtl
sbb
push
xchg
sbb
aaa
cmp
jmp
gs
mov
mov
jns
in
bound
jb
sahf
xchg
mov
popf
add
es
leave
sub
add
insb
push
sub
push
scas
mov
decl
sub
inc
call
push
jo
jg
inc
lret
insl
dec
movsb
or
lock
incl
mov
test
ja
cltd
add
icebp
and
pop
outsl
decl
pushl
push
out
divl
cmp
sarl
scas
icebp
push
push
je
jns
mov
dec
jmp
sarb
sbb
jno
mov
fnsave
add
cli
mov
out
pop
jae
cld
incl
fsubl
aam
ds
lock
pop
adc
std
call
pop
ds
inc
cltd
mov
mov
fidivs
cmp
pop
mov
loopne
mov
lcall
dec
das
in
adc
loopne
ffreep
sbbl
rolb
dec
push
xchg
das
decl
in
stos
pop
iret
jno
add
loopne
lock
inc
inc
mov
dec
out
mov
jle
jns
fucomip
std
ret
stos
mov
mov
fnsave
test
out
dec
xchg
pop
hlt
div
push
add
daa
sbb
push
xchg
adc
outsb
jge
lcall
decl
jb
cwtl
sub
pop
add
enter
pop
or
xor
js
je
dec
push
in
fisttps
in
mov
stos
bnd
or
mov
mov
push
js
lock
push
std
pushl
rcl
jnp
xchg
inc
inc
jp
pop
jno
jo
popf
insl
sbb
add
jmp
xor
or
sbb
out
int3
aad
fcmovb
rep
add
movsb
cltd
test
cwtl
fidivrl
jo
inc
test
lcall
dec
inc
cmp
pop
cmc
push
jge
pop
nop
mov
push
fistpll
fdivr
call
mov
bound
sbb
enter
fldenv
pushl
into
mov
mov
pop
adc
or
mov
cwtl
mov
gs
or
jmp
int3
shrb
push
insb
mov
pop
ret
loop
dec
cwtl
xor
rol
test
fdivr
add
icebp
jge
aam
inc
adc
pop
nop
mov
or
jg
pop
sub
out
out
xchg
mov
inc
pop
out
inc
mov
insl
fcomip
hlt
sbb
rorb
lea
xor
cwtl
out
add
add
push
dec
sub
ljmp
or
fdivrs
rcr
sub
jp
rolb
pop
inc
push
inc
xor
dec
es
inc
andl
mov
and
dec
mov
cmpsb
cmpsl
pop
dec
push
daa
mov
pushl
jns
jne
frstor
repz
mov
sub
xchg
jae
sbb
inc
adc
pushf
mov
mov
aaa
ds
jnp
aad
or
loopne
pop
ljmp
jmp
lea
popa
inc
cld
fmull
sbb
push
add
cld
add
in
decl
mov
mov
bnd
sub
and
pop
lret
dec
out
lds
lcall
xchg
cmpsb
lret
cmp
in
incl
loope
cmp
add
ja
call
imul
movsb
mov
push
ljmp
call
inc
push
int
testl
jle
jg
sub
mov
fucomip
rcrl
dec
flds
inc
in
call
lcall
jmp
mov
sub
sub
sbb
or
mov
xor
decl
or
push
pop
sub
cmp
cmpsb
imul
push
adc
ds
add
sbb
lcall
mov
jle
dec
arpl
pop
repz
jle
push
dec
mov
loop
outsb
out
out
jl
in
jb
mov
jg
mov
sub
cwtl
xor
aas
cmp
fnstenv
shr
mov
das
clc
push
lahf
sbb
and
in
rcrl
rcrl
mov
scas
imul
xchg
cwtl
loop
push
cmp
push
or
decl
call
sbb
sbb
jo
stos
hlt
add
fiadds
cmpsb
jge
sbb
call
xchg
fcoml
iret
adc
aad
push
jl
or
xchg
lret
fldpi
pop
aad
int3
scas
jnp
lahf
sbb
jae
jg
mov
popf
xlat
pop
pusha
addr16
add
lods
cld
mov
jbe
nop
jo
inc
rcrl
incl
mov
or
mov
jp
popa
xor
push
xchg
dec
lahf
xchg
and
push
leave
jp
in
loopne
pop
fwait
jg
cmc
mov
sbb
jne
adc
rorb
insb
mov
adc
mov
jb
push
imul
push
dec
popa
pop
push
or
call
jmp
mov
in
inc
adc
adcl
mov
fwait
aam
and
adc
cmp
mov
lods
adc
lret
inc
add
daa
push
mov
xor
andb
cmp
aam
cmp
imul
and
fcoms
mov
push
lahf
in
inc
dec
mov
ljmp
iret
addl
rcrl
in
rclb
or
decl
inc
in
psubq
push
fcomp
xor
dec
cs
or
test
mov
fsubp
cmp
inc
mov
in
push
or
xlat
pop
dec
jmp
lcall
mov
inc
push
sbb
inc
or
mov
cmp
shll
loopne
mov
and
fildll
push
and
sbb
mulb
push
in
out
test
in
pop
adc
sbb
push
sub
xor
sarb
sub
ja
jmp
popf
ljmp
lcall
xchg
sti
dec
mov
in
pushw
aaa
lahf
fwait
and
inc
jle
mov
cmp
adc
ja
cmp
jmp
andps
pop
js
ljmp
pop
pop
or
dec
outsb
pop
sahf
mov
mov
ljmp
add
pushl
bound
lret
lret
xchg
mov
scas
imul
lret
and
or
aad
mov
jbe
and
lcall
add
mov
mov
out
repz
cld
into
imul
aas
push
js
sub
or
sbb
or
sub
out
and
out
xor
mov
lcall
into
xor
in
jp
fisttps
les
fcompp
mov
pop
adc
push
das
and
dec
jbe
decl
mov
or
test
and
sbb
jg
mov
in
adc
or
nop
call
out
jb
xor
jae
ret
jns
jne
push
or
xor
sub
inc
mov
cmp
test
lea
es
sarl
mov
shll
push
mov
enter
call
aaa
pop
shrb
mov
cmp
sub
mov
and
int
mov
rorb
rcrb
movsl
movsb
scas
call
jbe
inc
mov
or
ljmp
cs
cli
xchg
sbb
outsb
pushf
cmp
jbe
call
cld
decl
bound
dec
pop
cli
or
dec
insl
iret
jns
push
and
sbb
xor
pop
dec
ret
ficoml
sti
sbb
dec
push
pop
xchg
cmp
shl
lahf
testb
pop
dec
test
enter
jge
sbb
pop
jnp
les
mov
jo
iret
repnz
mov
push
aad
and
mov
fwait
clc
pop
and
fdivr
jg
xor
sub
sub
push
xchg
xor
dec
daa
xchg
stos
xor
shll
jbe
clc
lret
clc
dec
aam
jle
fists
inc
jne
stos
enter
cmp
adc
loopne
push
adc
stc
subb
and
insl
leave
dec
mov
mov
push
xor
cmp
les
in
scas
mov
je
push
divl
and
adc
add
mov
nop
push
jmp
and
inc
insb
cmpb
pop
or
jle
arpl
out
int3
jl
cmc
and
or
mov
push
adc
mov
cmpsl
incl
push
nop
sbb
mov
imul
movsb
hlt
push
insl
test
data16
ljmp
bound
push
int3
cmpsl
sbb
insl
xchg
dec
ja
mov
sub
jecxz
insl
dec
or
and
hlt
jmp
pop
cmp
dec
outsl
jl
aad
scas
push
lods
rorb
sahf
and
std
std
stos
ljmp
push
adc
and
subb
pushl
mov
sub
negb
push
test
jle
mov
or
jns
sbb
mov
pop
test
and
fisttpl
xor
leave
shll
xchg
add
scas
cmp
pop
shlb
out
jbe
outsl
jp
xor
and
adc
lea
jbe
push
jecxz
jns
pop
push
inc
ret
and
test
fsubs
mov
cmp
std
rclb
ljmp
sbb
and
push
mov
int3
mov
dec
mov
xchg
popf
xchg
rol
stos
mov
cld
ljmp
adcb
sub
push
repz
mov
lcall
push
in
cltd
jle
jno
in
out
cmp
sbb
mov
int3
rolb
pop
and
xchg
push
shl
fldcw
loope
hlt
aaa
or
xor
cmp
daa
cmp
into
mov
inc
fwait
mov
add
outsl
sbb
decl
in
or
mov
xor
sbb
mov
je
lahf
jmp
stos
mov
psrlq
and
ds
cmp
lahf
push
dec
inc
lods
insb
cld
xchg
fwait
sar
call
lods
xchg
add
ret
and
je
icebp
push
flds
cmc
or
gs
nop
fwait
xlat
call
mov
mov
mov
pop
enter
mov
push
pop
sbb
inc
movb
xor
pushl
sbb
push
mov
and
call
stc
dec
repz
dec
bnd
mov
fistpl
js
mov
pop
mov
mov
addb
adc
subl
call
cmp
lret
xor
mov
cli
sbb
aas
aas
pop
sarl
in
sub
sub
incl
or
adc
inc
iret
mov
mov
ss
scas
mov
sub
push
jmp
pushf
out
outsl
rcl
add
sub
idivl
lcall
fisubs
inc
xchg
mov
jb
mov
xor
jl
lahf
outsb
and
lcall
vmovhpd
mov
and
inc
cwtl
test
xchg
fprem
gs
xchg
mov
call
fcoml
mov
decl
mov
jmp
xchg
sbb
stos
mov
xorb
cmp
iret
and
jb
mov
adc
movsl
addps
fdivs
or
push
mov
ljmp
pushf
and
das
adc
lret
pop
inc
xor
dec
cmpsl
xchg
push
ficoml
ljmp
sar
mov
add
push
pop
inc
mov
cld
incl
ret
in
push
jnp
fnstcw
mov
jbe
mov
cmp
call
xchg
dec
stc
or
pop
fsub
adc
push
mov
add
cmp
icebp
inc
sbb
gs
int
ljmp
call
or
jg
popf
jo
pop
xchg
pushf
xchg
jnp
outsl
iret
push
push
lock
xchg
lds
test
and
fisttps
mov
in
lea
movsb
lahf
jns
adc
push
out
stc
fwait
lcall
inc
scas
insb
jg
fidivrs
jge
aam
pop
jge
nop
pop
outsb
inc
int
mov
inc
dec
xor
jnp
push
ret
std
repz
add
mov
pop
cmp
push
xchg
stos
sti
pop
fcomps
mov
push
cmp
jbe
loopne
decl
fimull
out
sti
sbb
dec
ljmp
sbb
insl
jmp
jl
decl
cmpb
repz
dec
cmpl
fistpll
incl
dec
xchg
jp
ljmp
cmp
aas
fs
mov
mov
pushl
xchg
movsl
jb
outsl
pop
mov
xor
adc
lods
xor
mov
fbld
fists
clc
fidivs
push
cmpl
test
inc
loope
or
call
clc
cmpsl
movsb
dec
add
sub
cmp
sub
mov
mov
add
fidivl
dec
ret
mov
imul
imul
sbbb
or
aam
cs
push
int3
jno
ja
sahf
or
push
scas
xor
push
mov
pop
ds
pushf
add
sahf
jmp
fldenv
arpl
mov
mov
inc
aas
xor
aam
push
sbb
arpl
call
xor
or
mov
sub
sub
rcrb
cli
bound
pop
cmc
xchg
ljmp
mov
bound
ljmp
loope
sbb
dec
pusha
mov
mov
cwtl
lret
push
test
sti
popa
adc
fstpl
mov
sahf
jge
add
cmpsb
dec
jmp
mov
push
imul
inc
orb
mov
adc
mov
loop
inc
mov
ss
outsl
mov
inc
jns
aad
lock
push
call
fcmovb
pop
mov
notl
cmp
push
pop
pop
sub
jnp
dec
mov
stc
add
scas
fbstp
sub
test
scas
jp
shlb
adc
shll
push
adc
fbstp
movsl
or
test
jae
test
jns
mov
popa
je
arpl
scas
dec
jmp
xor
pushf
ljmp
xor
lret
test
pop
stos
out
sub
enter
dec
mov
lods
cmc
arpl
jecxz
out
dec
cmpsb
lcall
sbb
or
push
shlb
jae
daa
std
shr
add
xorl
adc
fprem
jns
mov
push
clc
inc
es
push
cwtl
dec
imul
mov
jecxz
pushl
fidivrs
cmpsl
dec
cwtl
and
fbld
cmpsb
pop
notb
fwait
xor
mov
pushl
dec
fistps
mov
dec
cmp
xchg
xor
aaa
mov
out
pop
or
add
ficoml
or
ds
lcall
pop
jp
jae
popl
je
sub
ds
pushl
cmpsl
fstps
insl
push
ficomps
push
fimuls
sub
gs
mov
leave
push
xchg
call
push
rolb
ret
lahf
out
mov
xlat
leave
xchg
filds
scas
mov
mov
cld
incl
push
popf
negl
arpl
or
mov
mov
icebp
aaa
cld
decl
xor
lock
lock
sub
push
pop
xlat
dec
fimull
or
arpl
shlb
xor
bound
sbb
mov
xchg
repz
in
fcomip
xor
sub
je
xorb
jne
inc
addr16
incl
xchg
popf
loopne
gs
inc
out
ja
fisttpll
pop
pop
insl
and
xor
add
cmp
test
lods
pop
adcb
jg
outsl
push
xor
outsb
fwait
inc
cmp
inc
push
jno
cmpsb
lahf
sub
pop
jmp
push
mov
xchg
data16
sbb
sub
xchg
mov
cmpsb
pushl
add
outsl
xchg
jnp
mov
push
push
repz
push
mov
mov
lds
pop
test
rclb
mov
out
cmp
ds
ljmp
add
ds
pop
out
lock
xor
mov
pushl
fwait
hlt
pop
xchg
inc
mov
xchg
sti
ss
or
decl
test
pop
sub
repnz
sub
or
insb
test
decl
adc
xchg
mov
popf
sub
pushf
jge
fbstp
idivb
inc
mov
jmp
js
adc
aam
mov
lcall
fwait
cwtl
jge
pop
pusha
pop
dec
lds
jecxz
dec
and
or
mov
js
out
call
mov
jo
stos
cmp
xlat
inc
insb
push
cmp
ret
sub
mov
imul
cmpsb
popf
xchg
movsb
jb
mov
pop
fdivrl
mov
rol
ljmp
faddl
icebp
xchg
fwait
and
push
ljmp
adc
addr16
pop
inc
sub
mov
leave
call
bound
xor
loopne
imul
adcl
pop
mov
fldl
mov
repnz
pushl
or
and
aad
lret
nop
adc
xor
fbld
cmp
pop
sub
mov
fucomi
push
rcll
scas
cmp
shl
cmc
fcompl
lcall
cwtl
jbe
push
mov
cld
add
and
mov
mov
push
insb
out
jge
fiadds
mov
decl
inc
repz
cmp
cmp
nop
or
adc
stos
incl
and
popl
test
cmp
inc
loop
lret
and
jne
mov
push
outsl
insb
mov
or
iret
cmp
jb
jo
bound
movsb
pop
dec
pop
movsb
bound
pop
dec
out
aam
mov
sti
das
rcl
push
in
push
fs
stc
push
push
jecxz
jb
lcall
jmp
das
insb
shl
dec
lods
bound
mov
aaa
sti
xor
decl
lock
pop
cltd
or
lods
cmp
pop
jno
push
in
push
adc
pop
push
out
int
lock
pop
cmpl
dec
mulb
push
mov
xchg
stc
popa
mov
sbb
mov
fs
sub
fdivs
out
adc
imul
rol
sar
call
jae
sbb
sti
pop
fdivrl
sbb
fcmove
lret
lret
dec
mov
test
push
xor
loopne
test
push
and
stos
test
inc
adc
decl
ds
and
jb
push
jns
dec
add
sbb
in
test
aam
inc
sub
xor
mov
leave
mov
jo
xchg
clc
in
inc
mov
and
insb
ret
cmp
pop
push
dec
ljmp
gs
fdivrp
int
mov
xchg
sbb
jns
gs
ljmp
xchg
imulb
adc
xchg
fldl
jge
and
jle
lahf
xchg
pop
dec
pop
lret
dec
in
loope
pushl
lock
jecxz
movsb
das
les
test
jno
sbb
cmp
adc
and
in
jb
in
xor
xor
out
adc
or
arpl
addr16
cs
cld
push
call
movsb
sbb
cmp
push
dec
sbb
inc
dec
in
mov
push
std
inc
pop
mov
retw
inc
in
sub
sbb
repz
ljmp
outsl
inc
push
inc
filds
push
jns
or
xchg
mov
add
mov
mov
jp
inc
sti
enter
aaa
sub
data16
lcall
push
xlat
into
inc
cmpsb
pop
sub
sub
mov
or
jp
push
test
icebp
call
pop
addb
repz
sbb
mov
mov
jns
mov
data16
je
push
cmp
jl
shll
loop
jmp
mov
jmp
ret
cld
jnp
and
call
push
adc
loopne
xor
bound
in
mov
int3
or
fstps
lcall
or
cmpsb
jge
add
ja
addr16
shr
notb
xchg
fst
lahf
imul
decl
xor
xchg
xor
stos
mov
pop
mov
movsl
leave
pop
mov
jne
scas
ljmp
call
or
jnp
vunpcklps
mov
daa
xor
sub
bound
sbb
imul
jae
inc
aad
push
shll
ja
push
sub
jg
jge
pop
imull
dec
addr16
or
sub
jg
sar
sbb
lds
xor
push
mov
repz
mov
decl
and
cwtl
movsl
aaa
dec
push
popa
shr
dec
out
mov
addr16
lret
xor
sar
inc
push
mov
mov
pop
jg
call
pop
fsubrl
xor
mov
push
aad
add
pop
stos
ljmp
call
outsb
jmp
movsl
dec
fs
lods
adc
sub
das
lock
cmp
jmp
shll
mov
cli
push
adc
xchg
push
cs
xchg
out
loopne
cli
lods
jg
xor
or
sub
adc
mov
fistl
jbe
call
mov
pop
adc
cmc
outsl
je
jg
inc
jno
int3
push
xor
adcl
jle
lcall
enter
sub
lret
xchg
loop
pop
lahf
ds
cmc
lcall
add
xchg
mov
fidivl
inc
lret
mov
lea
ret
insb
xchg
mov
jmp
aam
jmp
or
jge
mov
and
hlt
out
sub
or
sar
xchg
mov
ljmp
ds
jg
notl
fs
mov
dec
fisttpl
lock
mov
jp
xchg
and
xchg
incl
jns
je
push
aas
adc
pop
insl
cmp
hlt
cmc
dec
stos
mull
insl
leave
push
fmull
adc
inc
mov
arpl
outsl
pusha
mov
ljmp
dec
mov
insl
bound
sub
lret
ds
mov
jle
lcall
repnz
outsl
arpl
add
or
jnp
ja
sbb
mov
push
or
mov
mov
sub
aas
or
pushl
movsb
scas
or
fldenv
push
or
mov
cmp
int3
loope
jmp
icebp
mull
xchg
mov
ss
mov
scas
pop
adc
xor
mov
decl
push
stos
mov
xor
adc
frstor
cmpsl
lret
cltd
mov
mov
and
sbb
cmpsl
cmp
incl
in
sti
mov
add
mov
in
mov
stos
rcrl
ret
lock
das
popa
xchg
fldl
imul
dec
cmc
ret
jg
mov
lods
dec
jne
xor
jo
cli
idiv
stos
scas
push
shl
dec
xor
lcall
ret
insl
mov
mov
mov
test
jl
stc
add
dec
test
jg
xor
xor
inc
cmp
movsb
scas
shrb
ret
push
daa
loope
push
leave
aad
rcrl
out
xchg
adc
lods
fbld
loopne
mov
adc
inc
and
lcall
mov
cmp
pop
fbld
pop
jecxz
hlt
pop
or
and
sub
std
fidivs
mov
clc
aam
cmpsl
stc
pusha
test
movsb
jg
shl
pop
cmpb
pushl
movsb
mov
push
or
sub
bnd
or
xor
aas
scas
andl
lea
sbb
add
outsb
or
shlb
pushf
push
sahf
out
jae
jg
fbld
push
scas
repz
and
pop
cli
das
xor
cs
pop
aam
inc
mov
mov
cmpsl
pop
cmp
adc
les
adc
mov
xchg
cmpsb
lcall
or
dec
xchg
sysenter
jge
sub
xor
jg
call
inc
je
bound
setg
cmp
jmp
fmul
in
inc
pop
stc
ja
add
xor
and
lcall
cmpsl
lock
ret
xchg
jg
jle
xchg
push
outsb
fidivrs
lds
pushf
in
push
or
jns
mov
push
inc
loope
lahf
jl
add
push
and
sarb
aaa
pop
push
jne
mov
repnz
pop
cld
jmp
movsb
stos
sar
dec
cli
imul
pop
shlb
jne
loopne
loope
mov
clc
addr16
and
andl
xchg
decl
or
cltd
inc
adc
inc
push
iret
inc
int3
pop
mov
pop
fbld
or
jecxz
incl
and
mov
outsl
repnz
pop
sti
sahf
pop
push
nop
push
jge
add
jmp
inc
rcr
mov
jno
push
movsb
into
or
leave
push
ds
subb
out
aas
adc
pushl
xchg
cmc
pop
sbb
shrb
adc
les
ja
pop
push
pop
or
push
sub
pop
std
jmp
xchg
mov
pop
call
leave
adc
js
jne
cmp
xchg
and
call
mov
loop
sub
call
xor
adcb
andb
lds
jns
xor
sbb
scas
fcom
insl
mov
inc
xor
push
jns
dec
test
xchg
inc
and
scas
or
push
jo
in
aam
fcomip
mov
in
jl
and
jp
mov
pop
test
repz
fdivrp
push
adc
push
push
or
xchg
xchg
xchg
add
fisttpll
adc
lahf
jecxz
fidivrs
pop
adc
popf
xor
ret
xchg
sbb
push
popa
add
decl
lea
jbe
add
push
mov
insl
out
out
nopl
decl
aas
cmc
and
mov
addr16
repz
and
inc
adc
push
push
inc
adc
inc
daa
inc
fsubrl
lret
inc
jno
mov
ja
cvtpi2ps
dec
jb
or
mov
and
cli
fldt
pop
dec
mov
pop
mov
inc
cmp
push
shl
mov
push
idiv
mov
xor
push
lahf
es
insb
pop
loopne
inc
jae
and
pop
in
cmp
push
jae
pop
jo
sub
cltd
sbb
and
lods
jg
fists
outsb
xchg
cmp
adc
add
lret
sub
xor
dec
shlb
cld
ljmp
xchg
mov
sahf
jb
push
popa
jno
aam
adc
push
inc
sti
pop
pop
push
nop
in
fdivl
call
std
xor
xchg
sbb
adc
into
xchg
sbbb
ljmp
dec
das
or
outsl
mov
cmpsb
mov
rol
int3
cltd
in
test
popa
add
add
jno
jge
out
xlat
mov
pop
ss
in
adc
sar
sub
ja
cmp
dec
insl
stos
jbe
dec
or
pop
mov
add
adc
lock
adc
pop
push
stos
push
call
pop
decl
je
sub
loopne,pt
push
incl
jne
dec
jecxz
jb
je
cmp
addr16
cmp
scas
or
int
pop
insl
sub
jmp
sbb
bound
repz
sbb
daa
adc
jge
in
pop
push
mov
inc
pop
push
ds
faddl
pop
jbe
jp
shll
jmp
mov
test
add
popf
add
outsl
sub
xchg
aaa
aaa
inc
sbb
sti
xchg
or
push
pop
jo
lea
jmp
dec
cld
iret
mov
out
orw
subl
loop
xor
push
pop
cs
mov
rcrl
shlb
pushl
sbb
xlat
arpl
cli
jmp
or
jge
sub
mov
call
cld
pushl
call
xchg
les
sbb
stc
femms
stc
push
lds
xchg
adc
push
pop
outsl
dec
jne
xor
mov
ret
xor
std
or
push
xchg
lcall
rorl
adc
pop
decb
inc
popf
ljmp
loope
insl
icebp
xor
cmc
std
xchg
mov
daa
inc
fs
inc
aas
cld
pushl
enter
imul
add
dec
loop
ljmp
jne
dec
subl
mov
lods
xchg
dec
sbb
addb
xchg
mov
decl
sti
dec
or
dec
add
test
ljmp
push
push
jae
das
clc
jmp
icebp
or
addl
pop
cmpb
sub
cltd
jo
in
faddl
movsl
shr
js
es
lret
out
ss
icebp
lahf
xchg
dec
or
pop
aad
call
cld
pop
push
or
add
shlb
add
mov
shl
std
ljmp
pop
pop
ja
stc
sbb
lea
cmp
out
decl
inc
mov
push
cmp
mov
call
mov
pop
sbb
fld
fdiv
sub
incl
movb
mov
aas
nop
cmpsb
pop
mov
sub
icebp
add
and
mov
hlt
aas
out
xor
scas
pop
rorb
push
scas
xchg
mov
push
adc
ljmp
clc
int
dec
fs
xchg
ror
shll
xor
pop
or
jne
fs
dec
addb
call
adc
mov
std
imul
imul
lret
push
add
xor
add
xchg
rcrb
jmp
jmp
jl
sbb
xchg
xor
sub
imul
scas
inc
push
xchg
jp
mov
ljmp
arpl
xor
icebp
mov
pop
das
incl
inc
cmp
xchg
cwtl
ds
adc
fwait
cmp
out
mov
mov
jmp
cld
xchg
pop
rcl
ret
pop
ds
mov
sub
mov
sub
sbb
call
and
cld
out
cmp
loope
rorb
xchg
mov
mov
mov
ljmp
les
loopne
sub
fs
mov
and
je
push
shr
sub
addb
stos
jmp
mov
lahf
mov
scas
inc
lods
movsl
cwtl
sbb
sbb
dec
sub
jg
push
pop
lods
enter
imulb
or
pop
lods
xor
jecxz
leave
dec
ret
xor
pushf
test
xor
adc
int
push
push
adc
and
jge
pop
outsw
test
scas
pushl
in
loopne
int3
add
push
sub
push
les
test
dec
push
or
xchg
cmp
xor
dec
out
pop
je
cmp
jae
cmp
cmpl
fidivl
pop
mov
stc
jnp
add
jl
cmp
dec
lea
jp
or
outsb
je
lcall
push
stos
mov
push
pop
jne
fwait
js
stc
bound
popa
in
adc
inc
jnp
and
pop
std
fldcw
addr16
fwait
in
or
test
rcrl
ljmp
out
dec
sub
pushf
lret
into
xchg
movsl
mov
push
enter
call
jmp
aaa
jle
fcmovnu
in
fs
mov
sbb
mov
fwait
popf
mov
rolb
sub
jnp
sbb
xlat
insl
fsub
pushf
insb
enter
mov
push
jmp
iret
push
push
rorb
lods
pop
mov
jg
push
cmp
sub
inc
xor
dec
and
mov
add
pop
das
cmp
fucomip
dec
int
inc
lcall
pop
int
les
out
aas
dec
and
and
ret
lcall
or
jg
xchg
out
nop
sti
mov
add
call
into
push
and
dec
rorl
xchg
jae
pop
or
xchg
push
in
sbb
cld
dec
js
ljmp
icebp
mov
pop
lods
lods
fwait
imul
addb
jns
xor
aam
ret
outsl
pushf
icebp
xchg
jmp
xchg
add
aam
repz
sub
adc
adc
sub
xchg
push
mov
lahf
push
inc
je
sbb
fldl
int
out
push
and
mov
adc
ss
out
ret
call
lods
jns
or
mov
scas
stos
mov
call
movsb
mov
mov
add
lock
xchg
test
mov
clc
jl
and
pop
adc
mov
cmp
ljmp
jp
aad
aam
cmpsl
mov
and
mov
shrb
push
and
fcomip
lock
mov
enter
jle
mov
mov
inc
insb
jnp
nop
push
sbb
dec
rcrl
shrb
cs
cltd
add
mov
dec
sti
and
aas
sub
xchg
outsl
ja
aaa
xor
ss
push
pop
mov
adc
mov
xor
mov
mov
les
mov
sub
popf
mov
sub
cmp
insb
nop
ljmp
inc
out
repz
fxch
push
outsl
cmp
fwait
xor
mov
push
mov
addr16
jmp
and
int
add
or
sub
insb
or
loopne
je
mov
jle
loopne
incl
decl
xchg
andl
xchg
pop
mov
sbb
mov
jmp
loop
fcos
push
adcl
mov
mov
jne
in
icebp
cmp
push
xchg
and
cmp
rcll
faddl
decb
rcrb
fdivl
ljmp
push
pop
sbb
push
mov
ljmp
cwtl
insl
in
add
sub
icebp
fldt
mov
jl
xor
movsl
loop
pop
lcall
cltd
movsl
aam
mov
pop
iret
jp
lret
rcrb
pop
jg
push
jmp
pushl
pop
cltd
shl
movsl
mov
cmc
enter
pop
dec
sub
mov
lcall
pop
pop
lea
mov
jle
jge
das
popf
lock
inc
outsl
cmp
jne
idivb
mov
in
jp
sahf
sahf
cli
xchg
push
push
xor
mov
xchg
add
incl
push
ret
pop
mov
xchg
jae
aaa
popf
insl
xchg
and
pop
sbb
lcall
decl
outsl
repz
or
loopne
adc
js
push
xchg
jp
pop
mov
xorb
ror
cmp
inc
add
adc
sbb
sahf
mov
or
ljmp
mov
and
popf
lds
enter
sub
pop
mov
sar
mov
mov
dec
push
fistpl
je
ret
lcall
iret
push
dec
pop
xor
fldl
fcomip
incl
cmp
iret
sbb
push
fadds
sbb
mov
mov
or
push
cmpsl
arpl
pop
insb
sub
in
mov
lods
incl
mov
mov
push
inc
in
jb
xor
push
jbe
cs
ljmp
enter
add
xor
leave
or
lahf
jns
sahf
mov
scas
scas
incl
popa
cmp
jge
jo
ja
xchg
mov
add
incl
pop
pop
addr16
sbb
adc
adcl
fisubs
ffreep
push
jecxz
hlt
in
ljmp
arpl
cmpsb
push
test
call
pop
pop
dec
adc
lcall
bound
js
adc
insl
or
mov
enter
mov
sbbl
fbld
jp
fisubs
mov
ucomiss
pushf
leave
xor
mov
incl
aad
jge
loope
dec
cmp
sbb
cmp
mov
aas
je
mov
lcall
mov
ljmp
jge
mov
clc
cmp
adc
cmp
xchg
pushl
xchg
notl
inc
push
sbb
loopne
lret
scas
repnz
mov
push
pushl
out
mov
cmp
je
xchg
dec
cmpsb
mov
cs
push
xlat
ss
sub
test
mov
dec
addb
push
xor
sbb
dec
fistpll
rolb
incl
shrl
gs
or
jle
out
mul
xor
icebp
sbb
cld
lahf
jmp
pop
jb
into
sub
sbb
ja
je
cmp
cmp
test
and
loopne
jne
xor
loop
add
inc
sub
js
lods
cmp
incl
sub
jo
xorb
sbb
hlt
push
pop
cmp
and
and
pushl
sub
pop
mov
adc
mov
daa
sbb
cmp
incl
or
lds
fidivs
adc
jbe
jne
pop
stc
icebp
fwait
cli
xor
incl
pop
jb
into
sbb
mov
lods
add
mov
out
jae
lcall
xchg
lcall
or
cmp
mov
ja
or
cs
mov
flds
lret
jg
pusha
pop
adc
add
mov
jmp
out
fwait
ljmp
and
es
and
lods
cmp
aas
xchg
imul
fisubrl
jne
add
push
dec
dec
and
adc
cmp
xor
pop
xchg
sbb
fwait
imul
xorb
xchg
cmpsb
dec
es
insb
jp
iret
in
cmp
xchg
fs
cmc
je
in
test
repz
push
xchg
lcall
cmpsl
test
hlt
sub
call
ficoml
jmp
xor
push
shrl
and
lcall
scas
xor
scas
fsubrl
inc
mov
add
out
dec
testl
lcall
test
push
cmp
cltd
sahf
jnp
add
dec
ret
lods
xor
cmp
pop
ljmp
mov
fstl
pop
and
push
fs
xor
jne
xor
roll
and
sub
cwtl
idiv
decl
adc
into
pop
enter
xchg
ljmp
psubusw
call
hlt
jmp
pop
sahf
dec
push
and
loope
fwait
lret
rorl
mov
out
insl
and
jg
mov
push
xchg
xor
push
jbe
sti
sarb
lea
into
outsl
cmp
hlt
aad
sar
fcomp
stc
js
mov
xor
imul
test
fisttps
dec
xchg
push
cmp
ret
incl
xchg
ljmp
rclb
push
mov
decl
lock
cmp
ja
outsb
pop
pop
cmp
push
popf
jb
lods
sti
loop
mov
sub
mov
data16
ja
add
cmc
fimull
add
or
jns
insl
inc
decl
xor
mov
xor
outsb
or
sarl
addl
sub
jmp
adc
lea
fistpl
mov
movsl
pop
mov
jg
pusha
jecxz
jg
incl
jmp
jns
aam
mov
ljmp
mov
repnz
cmpsb
inc
sbbl
das
clc
jg
pop
scas
sbb
insb
pop
and
fisubl
cltd
out
adc
lods
jb
ljmp
lahf
pop
es
adc
inc
xorl
out
and
loope
cmp
call
repnz
pop
mov
adc
pop
cmp
jb
mov
mov
lahf
cmp
fcomip
dec
and
loope
or
stos
push
sbb
ja
jo
xchg
xchg
xchg
dec
data16
insl
sub
pop
stos
stos
scas
cmpsb
add
and
add
push
decl
outsl
push
lock
int
xchg
push
xchg
push
push
sbb
rcr
mov
cwtl
cltd
pop
pushl
inc
test
icebp
mov
dec
jns
and
inc
scas
nop
and
arpl
clc
rcrl
pushl
jge
sbb
inc
adc
dec
push
in
inc
mov
xchg
fmull
jge
mov
decl
dec
lret
int3
push
sbb
adc
movsl
inc
rclb
aad
enter
push
pop
and
mov
lret
shll
out
xchg
pushf
int3
test
fbstp
cmc
enter
fmuls
add
mov
test
cltd
and
lahf
in
add
ss
cmp
inc
scas
jecxz
fscale
loop
out
xor
push
sub
ret
std
addr16
inc
pop
into
dec
xchg
lcall
xchg
movb
loope
cli
pop
xchg
je
mov
cltd
xchg
push
lods
in
adc
pop
lcall
cld
movsl
cmp
inc
push
pusha
mov
decl
ret
xor
rolb
xor
jbe,pt
jae
mov
call
rorb
pusha
subps
scas
pop
lods
data16
push
sahf
inc
sub
incl
push
enter
rolb
aad
dec
popa
mov
xchg
sbb
nop
push
add
sti
es
mov
sub
int
test
pusha
add
imulb
pop
jmp
pop
fcomi
ljmp
push
shrb
je
insl
ret
cli
dec
in
insb
iret
shlb
dec
or
fnstsw
pusha
ljmp
dec
ret
and
mov
cltd
inc
sti
push
sbb
into
call
std
jmp
xchg
stc
scas
sbbl
inc
pop
sbb
and
push
cmpl
fidivl
fwait
and
inc
andl
idivb
lcall
xchg
iret
outsb
outsb
test
mulb
mov
sub
sbb
les
xchg
mov
fcomip
out
cmp
shl
in
dec
js
test
mov
sub
test
dec
add
inc
xor
decb
sub
xor
or
jnp
xlat
mov
push
insl
into
mov
inc
es
jp
repnz
shrl
insl
or
ljmp
xor
inc
ret
sub
jp
int
imul
clc
cmpl
fs
jmp
push
add
stc
jge
adc
jg
xchg
and
sbb
mov
push
in
fsubs
test
inc
imul
xor
xchg
sub
enter
lcall
inc
pop
sub
orb
xchg
rol
sbbb
xchg
mov
xchg
push
movb
std
sub
jg
add
dec
shl
sbb
aaa
add
sub
jo
ret
inc
jae
imul
repnz
sub
dec
xchg
insb
cwtl
jmp
sbb
jb
lds
insl
or
pop
dec
int
call
cld
cmpsl
xchg
xor
out
test
lods
sub
in
sub
mov
sub
call
jmp
aad
loope
std
enter
aaa
mov
lods
pop
cs
sub
test
inc
mov
into
stos
sar
sub
or
pop
aad
add
lods
roll
jle
int
inc
add
clc
push
push
scas
je
lret
xor
add
mov
add
faddl
adc
dec
mov
sahf
dec
jp
aaa
jg
ffreep
jo
jno
mov
imul
jno
add
xor
or
xchg
mov
add
add
and
sar
jg
jge
stos
jno
mov
in
rcll
add
sub
mov
dec
icebp
ljmp
xor
fs
push
jno
add
pushl
pop
mov
mov
ljmp
iret
jl
fidivrl
push
dec
out
push
jne
ja
out
pop
jno,pn
mov
std
jmp
addr16
scas
out
subb
xchg
inc
inc
lret
push
inc
fs
adc
outsb
loop
call
jbe
add
arpl
push
notb
push
mov
inc
jo
and
ds
bound
adc
cmp
push
xchg
inc
movsl
fwait
mov
mov
adc
push
aas
mov
and
add
ds
fstps
shrl
lock
pop
sbb
jg
call
inc
pop
or
bound
call
pop
loopne
push
jg
decl
loope,pt
pop
pop
inc
xchg
ss
mov
data16
inc
push
xor
dec
sbb
call
mov
sar
add
lahf
rcrb
jle
mov
cmp
mov
or
hlt
cmp
movsb
decl
add
or
xchg
add
mov
inc
dec
sub
into
out
stos
int3
dec
push
mov
cmpl
pop
loop
mov
jnp
jb
fwait
push
fdivr
call
pushf
ret
mov
and
adc
jbe
in
fsubrs
movsb
mov
incb
decl
jg
dec
outsl
fs
and
imul
cmpb
incl
mov
lcall
jbe
mul
loop
and
add
sub
adc
scas
incl
jns
mov
sub
lods
mov
xchg
ret
add
jg
pop
jae
mov
pop
cmc
mov
stc
pusha
push
fadd
xchg
dec
inc
sarb
ret
and
mov
jge
xchg
pop
adc
stos
shlb
mov
iret
ret
or
lock
nop
call
inc
pop
xchg
dec
sub
mov
ds
mov
inc
sbb
mov
or
aam
xlat
decl
repz
or
jb
pop
adc
bound
add
call
loopne
xchg
push
rorb
adc
clc
aas
cwtl
mov
mov
into
mov
push
test
and
popa
sbb
push
or
fimuls
mov
addr16
or
ljmp
imul
sbb
jb
pop
loop
sahf
lds
push
cwtl
lock
mov
mov
and
lcall
and
adc
ljmp
repz
les
push
enter
push
lods
mov
push
lock
add
decl
jge
aaa
aas
pop
cmc
push
shl
shl
xor
jg
mov
sarl
fs
addr16
jecxz
inc
sub
xchg
xchg
out
sbb
xchg
out
add
icebp
cs
lods
lds
xchg
jle
mov
xchg
sbb
jno
adc
or
or
sarb
dec
mov
test
outsl
xor
fs
call
loopne
sub
scas
loopne
cld
mov
bound
jl
pop
push
sub
inc
xor
call
loop
inc
pusha
mov
icebp
inc
xlat
ret
cmp
mov
in
fxch
mov
decl
lock
daa
ja
test
dec
xor
cli
cmc
add
push
mov
xor
in
push
push
fbstp
std
dec
in
jge
sub
sar
lcall
out
adc
addl
dec
aas
into
lock
mov
adc
lea
sub
xchg
mov
cmp
mov
jb
std
xchg
inc
mov
in
scas
xchg
sbb
call
loop
mov
ds
pop
push
dec
dec
dec
repnz
inc
inc
out
fcmovnu
mov
lcall
xor
data16
mov
xchg
mov
ljmp
lock
hlt
movsb
ss
inc
ds
and
shr
test
and
mov
fldl2e
mov
dec
ljmp
mov
mov
mov
add
divb
push
int3
sub
loop
push
add
inc
and
cmp
mov
adc
jae
mov
jg
pushl
dec
mov
push
jecxz
add
hlt
cmpsl
ret
and
call
es
xor
repnz
es
sbb
enter
mov
je
incl
jg
xor
jecxz
call
push
lret
xlat
flds
and
decl
cmp
imul
xlat
repnz
xchg
sbb
fwait
call
in
fadds
sub
inc
sbb
adc
pushf
dec
out
loopne
dec
mov
jnp
lcall
pushl
mov
enter
xchg
iret
paddsw
cli
lds
jno
mov
call
jns
in
mov
inc
ror
scas
xorb
loop
pop
das
jmp
sub
mov
ljmp
jmp
pop
ret
xor
push
mov
gs
cmp
pop
fisubl
cmp
loope
sub
setle
rcrb
hlt
popf
idiv
dec
jns
mov
das
clc
scas
add
fsubrl
mov
push
cli
mov
mov
in
jg
add
mov
es
out
sbb
jp,pn
mov
xchg
fs
or
mov
adc
sub
mov
in
and
cmp
lcall
fcompl
fs
lret
cmpsl
xchg
sub
mov
xchg
jb
lock
cli
dec
xor
out
inc
xor
in
hlt
loop
mov
test
clc
pushf
outsl
xchg
xor
and
inc
adc
dec
xor
mov
xor
mov
call
imulb
test
jmp
xorl
xchg
aas
dec
push
movsb
sbb
ffree
aad
push
or
movsb
roll
sub
mov
shl
push
sbb
scas
jl
and
test
jnp
add
addl
lcall
data16
lods
push
xchg
fs
jbe
pop
stc
inc
jo
mov
test
aas
cmp
sti
shr
jmp
push
adc
out
cmpsl
loopne
or
or
loope
sbb
stc
mov
mov
stc
jg
pop
aas
test
arpl
inc
xchg
cli
in
or
push
push
adc
mov
dec
lock
subb
sahf
or
sarl
loopne
cmpb
mov
decl
and
sbb
cltd
or
push
fwait
js
add
pop
mov
cmp
mov
fcmovnb
call
xor
adc
ss
jo
sub
fsubrl
jp
cmp
dec
pop
push
mov
adc
sbbl
repnz
jb
rcrb
push
pop
dec
call
in
fcoms
nop
ljmp
and
inc
hlt
adcb
js
out
inc
mov
into
push
aam
push
loop
lock
sahf
adc
pop
jbe
add
adc
xor
jle
aam
jo
jo
mov
xor
dec
xorl
dec
int3
dec
lret
cmp
ret
incl
jne
inc
add
mov
xor
pop
xor
add
lret
jg
out
out
dec
adcl
dec
rorl
dec
test
out
rcrl
sbb
mov
das
sar
pop
mov
dec
pop
adc
jg
aad
mov
out
xor
jecxz
int
pop
loopne
incl
sub
dec
xor
std
push
ret
jmp
aad
add
fsubs
push
cmpsl
or
fiadds
push
out
push
inc
imul
xorb
mov
test
mov
inc
sbb
fs
xor
fists
mov
jo
jno
outsl
xchg
mov
repnz
inc
pushl
and
and
daa
xchg
xor
jo
mov
shrl
frstor
jmp
adc
cwtl
and
outsb
scas
adc
pop
sahf
loopne
xor
pushl
mov
sbb
es
and
das
sbb
adc
mov
addr16
xchg
adc
add
out
icebp
je
mov
icebp
aas
loope
mov
inc
call
into
nop
jmp
cwtl
or
xchg
mov
push
outsl
add
push
jl
lods
sub
xchg
mov
and
mov
sbb
lret
mov
cmpsl
xchg
pushf
mov
clc
push
aam
lods
jns
in
stc
sub
xor
in
nop
or
aam
les
lcall
pushf
cmp
fidivs
xchg
ror
or
cwtl
fstl
fisttps
loopne
pushl
push
push
sbb
pop
daa
movsl
pop
jg
movsb
ret
fists
test
mov
ds
movsb
test
clc
sub
cmp
or
lret
inc
loop
jmp
addb
and
sub
jl
mov
std
scas
mov
lcall
ljmp
scas
stos
std
nop
cmc
test
sub
xchg
and
xchg
mov
shll
xchg
out
mov
jnp
clc
jle
inc
loopne
and
mov
pop
xchg
fcmovb
cmp
or
and
mov
pop
mov
pop
dec
push
xor
notb
jmp
push
push
fnstenv
adc
sub
pop
aaa
push
inc
or
aad
loopne
mov
ja
pushf
iret
cmp
jno
mov
adc
cmc
ljmp
aas
mov
andl
ficoms
mov
xchg
add
es
lock
push
test
cs
pop
jg
aam
out
xchg
adc
or
inc
push
dec
dec
pushl
scas
xorl
imul
cmp
dec
pop
dec
mov
movsb
xor
inc
push
int
xorl
sbb
or
aad
rcll
fildll
lahf
into
mov
jbe
enter
decl
pop
out
jae
mov
cmpsl
xchg
jae
ss
cmp
movsl
leave
adc
adc
clc
push
mov
lcall
mov
xchg
imul
orb
idivb
cld
jecxz
mov
sbbb
rol
inc
dec
or
loope
in
out
sbb
mov
mov
sahf
jo
xlat
jns
js
sub
fscale
jg
cli
sarb
add
loope
addr16
scas
fst
pop
sub
pop
pop
mov
adc
inc
mov
adc
stos
daa
sbb
mov
and
rcll
xor
sahf
js
fs
shlb
mov
repz
clc
push
imul
test
jmp
call
lock
pushl
push
je
mov
sbb
repnz
pusha
gs
cmp
leave
jp
mov
jg
mov
dec
sub
pop
add
movsl
fmul
cmp
jmp
cs
fistpl
in
in
mov
sub
movsl
int3
mov
xor
fstpl
or
sbb
lret
push
adc
pop
xor
ljmp
or
or
mov
lcall
hlt
rorl
pop
push
pushf
add
je
sub
jmp
icebp
fsubl
in
shlb
lcall
adcl
mov
lods
dec
inc
cli
call
outsb
imul
mov
pusha
sub
call
mov
fnstsw
pop
mov
jmp
fsubp
or
out
jp
popl
dec
xchg
icebp
test
mov
cs
push
into
out
dec
inc
inc
cmpsl
mov
fbld
add
sub
adc
jl
sahf
jl
loope
pop
mul
insb
ljmp
ss
lahf
das
je
sbb
bound
rclb
push
pusha
jge
lock
incl
adc
cmp
push
cmc
mov
xor
push
jo
lea
mov
incl
rcl
mov
insb
push
nop
pop
mov
incl
jge
mov
push
sbb
sahf
adc
xor
mov
lcall
dec
cmp
mov
dec
jbe
mov
outsb
xlat
lods
shr
ret
add
pop
fcos
lcall
xchg
arpl
mov
xor
in
out
dec
mov
lahf
mov
into
xor
dec
jo
imul
pop
add
out
mov
mov
pushf
out
add
add
jl
andl
cmp
fisubrl
pushf
mov
loope
fisubrs
sbb
fisttpll
je
pushl
insl
add
scas
add
mov
out
pop
push
mov
inc
lds
mov
popf
and
sbb
jbe
cmp
adc
inc
pop
out
fnsave
dec
orb
in
lcall
jl
mov
stc
jecxz
push
xchg
ja
adc
add
sub
lcall
adc
frstor
mov
push
pop
push
xchg
sub
or
push
lods
outsl
aam
call
rcrl
sbb
xchg
sub
xchg
repz
sub
mov
fidivrs
pop
ljmp
test
inc
insb
sub
mov
lds
mov
iret
jb
dec
push
add
scas
es
je
cwtl
mov
lock
jp
pop
mov
mov
xor
sbb
movsb
iret
xor
xchg
pop
test
cmc
inc
in
aas
aaa
nop
push
andb
xor
push
xchg
incl
mov
push
cmp
sarb
mov
or
mov
inc
cmpsl
sbb
cmp
mov
hlt
call
cmp
aas
test
sbb
jnp
in
jo
dec
xchg
cmp
mov
stos
test
xchg
sub
lods
dec
loop
xchg
push
adc
rolb
lcall
iret
rol
push
xor
imul
ljmp
inc
lds
dec
xor
push
cli
mov
nop
in
bnd
adc
loope
adc
test
push
add
int
xor
add
loopne
jg
ret
scas
jae
out
out
mov
jp
dec
or
cli
dec
loope
xchg
or
js
das
pop
lahf
repnz
sub
jl
mov
mov
les
ljmp
lea
jg
sub
jne
andl
or
add
pop
inc
jb
adcl
call
loopne
ds
adc
jbe
adc
pop
js
pop
sub
sub
mov
mov
shrb
mov
mov
hlt
imul
movsb
loop
out
fmul
jno
lea
into
mov
scas
xchg
idiv
xchg
dec
cmc
mov
cli
ljmp
sarb
jno
dec
mov
fiaddl
inc
aaa
shr
out
mov
xchg
mov
std
mov
push
je
addr16
and
xor
incl
pop
hlt
pusha
pop
or
outsb
fcompl
xchg
push
sbb
cmpsl
ds
sbb
adc
test
mov
xor
dec
adc
sub
jg
ljmp
jmp
in
aaa
pop
ja
adc
jo
push
stc
pop
push
mov
jecxz
call
adc
xchg
push
scas
push
dec
xchg
sbb
mov
add
and
addr16
popf
fimuls
repnz
test
adc
lods
int3
test
nop
mov
push
mov
mov
lcall
mov
jb
shl
in
inc
fwait
daa
loop
pop
arpl
rcl
sbb
mov
inc
shl
out
aam
stos
scas
flds
mov
mov
hlt
popa
fnstenv
cmp
call
or
dec
hlt
add
call
inc
ss
lahf
or
mov
stos
lcall
std
cmp
mov
cmp
mov
bound
mov
decl
out
inc
outsb
jae
fsubrp
and
push
pop
cmpl
push
test
lcall
adc
out
mov
xor
jmp
cwtl
and
int
test
mov
ljmp
or
stc
mov
sub
add
dec
jno
mov
mov
lcall
mov
mov
push
adc
mov
in
mov
cmp
gs
or
pushl
insb
ret
lods
fs
sbb
sub
push
shll
xchg
push
test
ret
scas
jmp
inc
dec
sar
pop
lret
push
iret
xor
mov
enter
pushl
and
xchg
cmc
sub
xchg
and
rorl
stc
idiv
adc
mov
adc
out
jmp
xchg
mov
lock
lods
add
insl
insl
or
sahf
and
dec
xchg
call
fdivr
daa
and
rcrl
lcall
mov
mov
out
jae
adc
pushl
rcr
scas
xchg
adc
dec
fnstcw
pop
lods
fsubs
movsb
sarl
jbe
out
scas
clc
incl
ja
and
mov
mov
sbb
mov
sub
incl
mov
ret
lock
lret
xchg
shlb
mov
pop
loop
push
sub
inc
icebp
xchg
dec
sub
dec
sub
dec
xor
mov
mov
add
or
ficoms
pop
pop
add
daa
idiv
decl
cmp
jl
out
cmp
adc
jnp
jmp
shl
test
mov
stc
cld
cmp
jo
or
in
mov
jb
mov
ret
add
push
int
jne
stc
adc
imulb
inc
cmp
sbb
or
scas
jmp
push
mov
mov
sub
pop
jmp
lcall
loopne
jae
popa
cmp
into
out
mov
cmp
sbb
call
incl
icebp
fsubr
dec
and
or
dec
xchg
cmp
arpl
icebp
add
push
jo
scas
or
lcall
lods
movaps
xor
movsb
push
sbb
call
push
and
xchg
fstl
mov
fiadds
xchg
ficomps
mov
inc
bound
loop
orb
fdivrp
push
lcall
xor
jne
in
cmc
nop
repz
in
stc
das
dec
xchg
adc
jmp
xor
daa
push
push
mov
push
xchg
stos
jecxz
add
movsl
lods
addr16
loope
fldenv
jo
incl
mov
loope
cmp
sub
push
je
and
nop
loop
test
push
jo
sub
ljmp
sbb
mov
add
jmp
lahf
lcall
pop
pop
add
movsl
push
mov
mov
aam
popa
pusha
leave
xlat
movsb
in
sbb
leave
xchg
cmc
jmp
sub
fbld
xchg
cli
mov
adc
cli
decl
mov
inc
cmp
jmp
xor
jnp
jo
cli
ljmp
sub
sub
push
xchg
push
or
lret
in
insb
xchg
cld
cmp
sbb
mov
stos
jmp
lret
test
das
aad
lock
jno
loopne
std
push
into
inc
incl
movsl
jmp
push
push
lret
divb
xor
jmp
stos
add
aad
mov
fstps
lcall
xchg
mov
es
mov
rolb
fsubrl
cmp
mov
xor
fnstsw
cmp
jmp
data16
hlt
adc
mov
xor
or
mov
cwtl
dec
stc
pop
and
mov
fcoml
cld
incl
add
xchg
dec
jne
jo
or
add
fidivrs
adc
add
sub
into
add
das
or
mov
movb
pop
mov
or
fwait
mov
dec
loope
inc
push
imul
pop
or
mov
out
ljmp
mov
shl
int3
shll
cmp
je
rcrl
cmp
fwait
movb
call
inc
sbb
add
dec
test
jb
sbb
jnp
call
xchg
jae
out
add
pushl
or
clc
inc
call
ret
das
jnp
add
adc
fsub
lcall
js,pt
jecxz
div
in
cli
fwait
sbbb
jmp
imul
mov
popf
and
std
fsubp
lds
decb
mov
mov
cmp
cmp
push
test
mov
jmp
insl
outsl
lcall
jne
xchg
dec
mov
rcr
ja
out
sbb
cmp
lcall
adc
or
in
push
sbbb
xor
mov
lds
lds
scas
xor
ljmp
push
dec
push
pop
inc
push
mov
jecxz
add
add
xchg
jmp
and
sbb
xor
jge
pop
outsl
dec
sub
pop
repnz
sub
xchg
movsl
mov
lea
jno
xor
lcall
lea
cmc
test
testl
mov
aas
inc
mov
xlat
ret
push
mov
xor
and
and
in
dec
dec
and
mov
clc
mov
mov
inc
fdivs
mov
jb
push
xchg
das
ret
pop
std
pushl
cwtl
mov
fiaddl
mov
pop
adc
mov
mov
mov
call
loopne
add
dec
fistpl
xchg
or
in
rol
inc
fdiv
add
outsl
cli
incl
mov
cmp
xor
imul
fsubrl
push
jno
das
sar
shll
pop
xchg
stos
push
push
int3
adc
dec
aad
mov
mov
dec
pop
sbb
jb
lret
testb
movsb
cld
sahf
jno
mov
sub
jg
jl
mov
pop
out
jle
sbb
addr16
or
xor
xlat
pop
gs
sub
lret
and
stos
out
iret
sub
xor
mov
divb
lock
cmc
outsb
pop
adc
shll
call
aas
cld
fcmovu
lds
rclb
pop
mov
xchg
outsb
fimuls
insl
cli
test
call
xchg
lds
jo
inc
push
jecxz
cwtl
test
jae
enter
js
cmp
cmp
test
repz
dec
xor
xchg
or
jae
decl
xchg
fwait
push
push
jecxz
sub
insb
push
mov
aaa
leave
mov
pop
cmp
mov
push
sarl
xchg
scas
cmp
insl
jbe
cmp
inc
pop
push
outsb
ja
incl
sti
shlb
jae
pop
mov
test
dec
fwait
pusha
stos
sar
dec
push
or
decl
dec
xor
lcall
dec
push
inc
mov
xor
jecxz
mov
push
and
dec
mov
repnz
in
test
push
daa
xor
cmp
rclb
pushw
pop
add
cmp
out
sbb
fsubrl
pushl
sbb
xchg
sbbl
out
mov
outsl
dec
adc
add
insl
pop
cmc
pushl
xchg
aam
sbb
orb
test
or
fists
adc
xchg
lret
std
imul
inc
mov
pop
sbb
push
xchg
or
scas
push
xchg
mov
push
jge
inc
cwtl
ja
mov
jnp
loope
je
popf
rclb
adc
push
iret
or
pop
and
lahf
mov
pop
xchg
adc
out
call
mov
loop
ret
into
push
in
ret
ljmp
cli
pop
in
adc
and
mov
pushl
outsb
sub
mov
pop
mov
cmp
push
fildll
cmp
jmp
jp
pushl
dec
ret
mov
cmp
add
add
aad
jl
outsl
fsubl
jo
icebp
pop
cmp
lcall
and
sub
in
fcompl
in
sahf
jbe
js
movsb
pushf
movsl
pushf
sub
add
shlb
jmp
mov
sahf
mov
inc
pop
cld
or
cmp
ja
sub
psubd
jnp
cmp
cmpsl
cltd
in
xchg
push
xchg
data16
aad
mov
movsb
push
ljmp
imul
mov
jmp
in
push
fstpt
insb
pushf
in
in
mov
in
mov
bound
push
icebp
add
pop
dec
xor
jbe
incl
mov
and
js
out
jg
imulb
xchg
inc
and
xor
loopne
loope
jmp
inc
fcoms
jne
mov
cwtl
shlb
xchg
add
and
in
dec
repz
loopne
mov
cmp
jmp
popa
loopne
fwait
popf
jp
adc
out
jns
adc
rcrl
call
in
mov
shll
jl
ret
es
movsl
and
sbbl
lcall
dec
mov
aam
cld
cmp
test
popa
xor
ret
jns
shl
orl
cmp
pop
push
movsb
divb
andb
nop
repnz
sarl
out
in
sti
ror
dec
or
push
mov
popa
cmpsb
outsl
pop
sub
fs
jp
or
out
xor
jg
push
mov
pop
or
adc
jb
or
mov
mov
ljmp
mov
mov
in
test
ja
outsl
ror
add
gs
fwait
addr16
sub
push
clc
push
jg
mov
inc
pop
mov
mov
das
mov
jmp
scas
mov
cmpsb
popa
and
lcall
or
div
cmpsl
arpl
test
dec
jmp
ds
mov
aam
fcoml
hlt
jle
les
jecxz
sbb
mov
sub
or
and
adc
repnz
mov
jg
push
movsb
push
cmp
cltd
jnp
bts
aam
dec
mov
test
fmull
or
mov
pushl
icebp
pop
mov
clc
fcomip
sar
or
or
sub
push
pop
pop
sub
pop
push
xchg
fisttpll
jbe
cwtl
data16
and
xor
push
push
sbb
cwtl
jb
pushf
jg
ljmp
into
insl
push
inc
jg
cmpsb
aad
ret
or
sub
xchg
loop
pop
rcll
fisttpl
jno
jo
call
or
push
lods
dec
setno
pushl
jbe
es
mov
outsb
sub
xor
ror
sub
mov
out
clc
adc
cmp
push
adc
xor
push
jge
push
repnz
push
decl
sbb
movb
adc
test
push
loope
adc
or
mov
jg
jmp
dec
xor
mov
daa
fists
push
dec
inc
icebp
mov
pusha
into
or
dec
sub
call
lret
fisubs
cmpsb
mov
push
sbb
dec
fnsave
aad
lcall
imul
addb
aaa
fldl
xchg
mov
xchg
lcall
test
outsb
cmpsl
fldt
dec
pop
fldt
daa
inc
addr16
aas
outsb
inc
test
movsb
leave
incl
push
icebp
stos
cli
movsb
xchg
filds
ret
leave
sbb
and
decl
adc
into
lock
xor
ret
push
jb
aam
sbb
movsb
aaa
std
pushl
pushf
in
int3
lahf
jle
stos
push
sahf
sahf
pop
lds
test
shll
jecxz
fcomip
aaa
xchg
imul
sub
mov
movsb
or
fcomip
incl
and
or
jl
pop
andl
cmp
lahf
jns
incl
lds
out
inc
push
out
adc
adc
and
ret
decl
arpl
ficompl
xor
xchg
dec
push
jne
xlat
pop
fists
call
icebp
push
jge
xchg
push
aad
aas
mov
icebp
arpl
xor
stc
mov
pusha
mov
inc
cmp
insb
outsl
iret
pushl
adc
or
inc
and
lods
mov
pop
in
mov
inc
inc
push
nop
scas
lea
and
fsubr
adc
mov
sti
out
ds
call
cmp
jbe
mov
mov
dec
jle
sbb
pop
or
int3
mov
jne
pushl
addb
cli
mov
lahf
ja
pop
lds
sub
add
add
xchg
loop
outsl
mov
push
mov
push
andb
cli
pop
xchg
jns
ljmp
lods
pop
decb
inc
into
jge
ljmp
jge
xor
jle
mov
bound
cltd
xor
pushf
lahf
jg
test
add
icebp
xor
fcomip
dec
test
mov
bound
outsl
outsl
enter
xchg
cmp
and
clc
lea
push
stc
cmpb
cmp
and
pop
daa
xlat
je
mov
xor
push
fs
sbb
popa
mov
and
mov
mov
dec
sbb
or
adc
incl
mov
jmp
sti
inc
xchg
stos
lcall
popf
push
sbb
xor
movsb
pop
in
push
xlat
call
ljmp
jge
add
mov
push
repz
xor
jmp
pusha
leave
daa
in
inc
dec
scas
mov
xchg
pop
jl
dec
mov
inc
syscall
cmp
push
std
lahf
dec
mov
cmp
xor
lods
test
iret
out
add
jbe
or
xchg
mov
jns
test
dec
add
es
jg
push
rcl
add
xor
jno
lahf
lret
inc
adc
add
int3
roll
in
cltd
ds
jmp
adcl
and
mov
imul
aaa
gs
xchg
add
jmp
sbb
call
dec
gs
add
mov
std
ja
enter
jbe
jns
jae
or
sar
add
push
ret
sbb
jle
stc
xchg
cmp
xor
stos
decl
xchg
or
inc
call
lea
idivb
stc
stc
dec
in
mov
xchg
shrl
pop
pop
and
mov
ljmp
in
call
enter
daa
or
lock
fsubl
ficoms
mov
pop
hlt
ljmp
inc
out
stos
mov
pop
movsb
jecxz
sub
cmp
add
bound
ss
mov
inc
lds
lea
mov
inc
add
or
clc
xchg
pushf
fs
incl
cmp
add
inc
mov
gs
out
adc
cmpsb
imul
push
rorl
mov
out
es
rcl
hlt
push
cmp
pop
cli
mov
jnp
adc
jg
es
dec
inc
hlt
jbe
sbbl
mov
cmc
ret
cmp
adc
test
dec
test
and
xor
repz
mov
ss
call
xchg
sahf
xchg
rclb
push
jb
sbb
mov
dec
or
add
das
cmp
lock
inc
xchg
adc
aad
les
adc
push
lcall
lret
sbb
inc
dec
out
in
icebp
imul
in
lcall
sbb
lahf
and
test
cmc
out
mov
ljmp
jae
sub
fcoms
incl
adc
cwtl
jp
and
sub
pop
inc
mov
stos
imul
ljmp
decl
arpl
xor
jp
adc
cmpsl
test
add
or
jbe
push
leave
addr16
rcr
decl
idivb
inc
movsb
jno
sarl
xlat
or
ss
add
out
mov
call
std
in
jmp
sbb
lret
rol
mov
das
push
stos
xlat
fdivrp
imul
ds
mov
xchg
sub
sahf
or
push
lcall
pop
jge
loopne
push
push
in
mov
insb
sbb
sti
xlat
sub
pop
mov
jg
dec
or
mov
insl
adc
mull
sub
inc
not
dec
xor
test
jmp
inc
xor
aam
and
jbe
inc
cmc
jle
shll
rclb
out
scas
cmpl
fisttpll
insl
cmpsb
xchg
cmp
bound
mov
or
push
or
xor
dec
ljmp
clc
ficomps
scas
pop
adc
in
aam
imul
or
out
push
dec
insl
sub
or
jo
fwait
aas
sbb
mov
aad
arpl
out
pop
pop
leave
jl
mov
and
jle
out
lods
jle
push
push
xchg
lcall
sub
test
sbb
add
fmull
dec
push
clc
push
xlat
and
std
mov
and
bswap
xor
xchg
ljmp
std
mov
fwait
xor
in
push
les
rolb
lcall
jge
cmp
pop
mov
test
adc
sub
fcmovnbe
fmull
aam
push
dec
and
stos
call
xchg
outsl
jno
out
js
icebp
je
and
outsl
sbbl
push
jae
push
pushf
mov
mov
les
mov
sbb
lcall
js
out
test
lods
loop
sub
pop
loopne,pn
push
jbe
pushl
mov
or
stc
adc
dec
lcall
jo
cmpsl
test
adc
xorl
or
ljmp
mov
dec
push
xcrypt-ecb
cmpsl
or
cltd
or
xchg
mov
lods
lea
jle
clc
lcall
mov
mov
mov
movsl
xor
jmp
ds
or
hlt
outsl
sbb
in
pop
lock
in
xchg
lea
test
jns
int3
or
int
mov
sub
fbstp
aaa
int3
sti
idivb
pop
fisubrl
int
call
loop
mov
mov
and
iret
add
push
and
xchg
xchg
jmp
xchg
mov
test
sbb
loope
aas
sub
inc
nop
mov
jg
xchg
and
scas
mov
mov
mov
dec
xchg
jmp
test
mov
add
clc
and
mov
mov
icebp
jmp
sbb
cmpsl
icebp
lods
outsl
add
repz
fnstcw
lcall
and
daa
dec
adc
mov
xchg
in
xlat
pushl
ficomps
inc
push
and
xchg
sbb
fnstcw
add
jg
lcall
mov
cmp
push
lea
fwait
or
out
es
ljmp
mov
adc
add
mov
xor
mov
lds
dec
mov
xchg
jb
pop
push
imul
add
fs
scas
mov
les
inc
es
or
clc
cmp
or
cmp
iret
mov
push
pop
jg
and
cwtl
ds
xchg
cmp
ljmp
lret
sbb
fistps
rcrb
mov
aaa
cmp
and
dec
sbb
jb
mov
jne
jo
xchg
xor
call
outsl
adc
push
clc
xor
xor
xor
push
sbb
call
dec
mov
mov
push
test
push
std
jmp
sbbl
aaa
pop
movsl
jns
mov
mov
hlt
cmp
cmpb
fwait
les
outsl
xchg
cmp
add
mov
mov
jp
mov
daa
cmpb
dec
in
xchg
lods
push
mov
ljmp
xor
movsb
mov
lock
icebp
and
cmpsl
xchg
ret
stos
and
sti
outsl
adc
out
mov
inc
adc
mov
xor
std
xchg
cwtl
jg
pop
xchg
ljmp
adc
ja
sahf
out
andb
jb
mov
negl
into
fstl
test
xchg
clc
imul
sbb
test
sbb
push
or
mov
loopne
xor
mov
loopne
ret
sub
mov
xorb
adc
decb
jae
lds
les
sub
lea
repnz
fs
mov
pop
cwtl
pop
inc
sahf
or
lfs
xchg
jo
lahf
push
pop
ljmp
jl
shlb
cmpsb
add
push
pop
dec
out
inc
sub
shr
jle
cli
sbb
decl
cs
aas
mov
push
adc
jg
adc
and
pusha
test
loope
lcall
xor
xchg
jge
int
subl
xchg
or
jno
mov
push
xor
shll
pop
xchg
mov
mov
outsl
mov
xchg
lock
and
xchg
fisttpl
dec
fsincos
jbe
jne
sbb
adc
insb
out
dec
mov
pushl
add
mov
daa
mov
int3
push
idivl
xchg
mov
push
mov
decl
adc
jae
add
sbb
cld
movsl
mov
jbe
lea
cltd
dec
cmp
jbe
and
ja
les
ljmp
lock
jmp
out
jle
or
mov
pop
aaa
fdivrp
outsb
add
cltd
cmp
scas
adc
dec
pop
fisttpll
jns
enter
sub
xchg
jmp
adc
lds
xchg
rcrb
loop
inc
cmp
popa
push
mov
jmp
mov
data16
in
mov
dec
sbbl
mov
call
pushl
js
xchg
xchg
xchg
push
xor
pop
daa
hlt
inc
mov
or
call
out
xchg
mov
and
sbb
sbb
shll
call
es
in
pop
inc
xlat
push
jp
sbb
add
scas
out
call
cmpsl
cmp
add
push
cmp
ljmp
push
cmpsl
shlb
lock
sbb
mov
leave
inc
sub
push
cmp
and
inc
dec
xchg
mov
aas
outsl
cmp
fiadds
negb
inc
scas
es
cli
insl
adc
dec
sar
jg
sub
add
xor
icebp
sub
mov
sub
pop
lock
cwtl
cli
in
add
jp
jl
hlt
ljmp
mov
mov
mov
test
std
mov
jl
cmpsb
or
jmp
inc
dec
adc
pushf
and
add
cmpsl
data16
std
pushl
push
in
inc
mov
sbb
int3
inc
fdivp
adc
mov
jg
push
data16
jl
mov
xchg
mov
sbb
add
pop
imul
adc
dec
ljmp
lcall
ja
loop
xor
cs
xor
aad
fs
mov
decl
xchg
js
jno
nop
into
push
shrb
daa
clc
pop
mov
lcall
mov
addr16
test
int
pushf
xchg
mov
in
icebp
mov
lock
ret
lcall
pop
sbb
lods
push
pop
jmp
lods
into
mov
jg
cld
adc
and
out
shr
ljmp
iret
repz
and
in
stos
shll
incl
orl
out
push
adc
repz
stos
fwait
aas
and
inc
adc
out
clc
incl
int3
aad
push
js
pop
bound
movsl
mov
mov
pusha
xchg
jae
decl
scas
std
xchg
sarb
push
mov
scas
pop
inc
scas
mov
push
popf
inc
cmpsb
xchg
ds
repnz
dec
pop
mov
mov
fcoml
push
shr
ret
scas
mov
jmp
out
std
or
into
mov
das
testl
idiv
or
sub
incl
dec
mov
mov
sub
aad
int
pop
sbb
insb
push
mov
fstpl
mov
push
decl
das
push
and
mov
sahf
xchg
out
arpl
or
push
test
adc
jle
loop
int
or
sbb
push
sarl
scas
jbe
jno
rcrb
orl
jmp
scas
into
sti
pusha
outsb
js
and
xchg
jmp
cmc
decb
sbb
mov
jmp
hlt
jg
lea
dec
jnp
and
sbb
call
mov
aad
dec
stc
pop
clc
sbb
or
push
sub
js
xchg
jle
pop
lcall
rcrb
js
ss
jecxz
adc
lds
mov
push
mov
jg
push
mov
ljmp
inc
aaa
or
add
and
decl
sub
data16
dec
andb
cld
test
sub
xchg
add
xlat
rcr
scas
cli
xchg
sbb
addr16
outsb
daa
sahf
in
mov
cld
jmp
and
mov
loope,pt
sub
in
pop
pop
pusha
jmp
movsl
arpl
out
repz
and
add
sub
lock
sbb
adcb
call
mov
in
dec
imulb
nop
or
dec
dec
in
mov
lds
test
adc
ret
call
pop
pop
sbbl
sbbb
pop
addr16
insb
and
stos
inc
cmc
xorl
pushf
outsl
decl
rolb
xchg
push
stos
xchg
add
popa
or
inc
mov
jns
int3
sub
xorb
jmp
cmp
xchg
ljmp
pushf
inc
lahf
or
or
shrl
sbb
inc
sahf
inc
mov
rcl
xorb
data16
dec
cmc
dec
and
jl
mov
out
in
jp
mov
xor
mov
xor
loop
inc
pop
lret
sub
repnz
mov
movsl
hlt
adc
shrl
dec
fcomip
incl
ret
inc
mov
sub
xor
sarl
jp,pn
fcomip
lcall
fisttpl
adc
frstor
aas
lret
ds
jmp
xlat
jno
test
push
sbb
ret
mov
call
jg
jne
mov
pop
lock
jae
mov
fwait
push
jecxz
rcr
arpl
cmp
aaa
enter
loope
shlb
mov
cmp
in
or
inc
jno
hlt
cmp
jmp
xor
mov
test
push
mov
jnp
hlt
ljmp
jbe
jns
in
out
sub
xor
push
or
dec
in
test
push
pop
adc
scas
jmp
mov
gs
ror
bound
mov
push
fwait
repnz
mov
jmp
dec
enter
xor
mov
stos
fstl
xchg
les
addl
loopne
add
ret
call
in
inc
push
in
in
xorb
decl
jbe
scas
push
xlat
ljmp
jns
xor
pop
cwtl
ret
or
popf
mov
xchg
inc
mov
mov
jg
cmp
lods
pop
mov
jno
je
inc
mov
ja
fbld
icebp
stos
cmpsl
imul
xchg
jl
push
mov
lcall
out
jae
and
aam
cmp
iret
jae
or
inc
mov
mov
sub
xchg
lods
mov
hlt
adc
jnp
outsb
int
xor
add
push
divb
inc
nop
lcall
mov
incl
out
or
sub
jnp
insl
push
sub
incl
fldt
rcr
jecxz
inc
push
and
sbb
int
sub
out
incl
xor
imul
pusha
mov
lcall
mov
pop
xor
decl
add
leave
stc
inc
add
adc
insl
sbb
jo
scas
and
inc
mov
push
lea
aam
xor
xor
repnz
xchg
sub
inc
lds
in
push
push
dec
pushf
inc
js
mov
dec
pop
sub
cmpsl
fndisi(8087
jle
sbb
loop
jmp
push
enter
pushf
out
dec
sarb
adc
repz
jbe
cmp
and
lahf
outsb
lahf
decl
sbb
pop
jae
das
sahf
js
jg
shrl
mov
in
mov
call
push
jne
cmp
xor
cltd
jbe
or
outsb
mov
cmpsb
mov
and
and
push
cmp
sbb
mov
je
fwait
call
mov
addr16
enter
nop
or
xorb
jg
add
fmuls
xor
xlat
decl
cmpsb
push
push
and
inc
mov
test
pop
xor
jmp
sbb
xchg
pop
mov
jne
scas
push
insl
stos
ss
into
mov
lcall
scas
nop
fwait
test
push
adc
xchg
jbe
shlb
sbb
pop
in
sbb
push
mov
push
or
nop
pop
repnz
std
sub
pop
outsb
xchg
jnp
mov
in
and
mov
flds
sub
mov
andl
pop
rorb
bound
mov
fldcw
jbe
enter
pushl
or
push
fimuls
lds
push
shl
lret
add
adc
jo
add
jg
in
mov
dec
cmp
cmp
and
push
fwait
pop
push
dec
mov
std
pop
sbb
mov
push
and
clc
xlat
inc
jl
mov
or
dec
cmp
ret
pop
sbb
xchg
stos
mov
fidivl
lcall
loop
mov
clc
shrl
andb
cltd
pushf
data16
add
out
fwait
xorps
std
jmp
gs
cmp
and
cltd
nop
into
and
and
pop
jae
addl
jg
sub
jne
popf
sbb
js
lret
inc
lods
or
ss
sbb
out
add
jg
push
out
mov
repz
lods
cli
les
adc
push
mov
lahf
jnp
dec
fsubl
and
loope
adc
jo
push
shll
sti
lcall
sbbl
inc
fdivl
pop
fsubrs
push
or
sbb
je
add
incl
lods
mov
adc
mov
dec
test
pop
xchg
imul
jmp
in
add
cmp
and
add
jecxz
push
stc
das
and
es
incl
and
mov
movsl
xchg
fcompl
aas
fnstenv
leave
push
cmp
dec
and
adc
bound
in
idiv
call
cltd
in
imul
push
out
mov
jp
aaa
jns
mov
cs
sbb
into
aaa
cmp
or
ret
outsl
cli
mov
loopne
test
sti
pop
or
aas
fists
push
push
lcall
imul
pop
imul
mov
jns
bound
cmc
fucom
mov
and
idiv
ljmp
cli
je
mov
cmp
lret
dec
cmp
mov
jb
pushl
scas
add
rcrl
pop
or
xor
push
add
je
pop
pop
jge
jg
lods
clc
add
xchg
dec
pop
cwtl
lods
xor
jmp
jg
lods
xor
movsl
insl
mov
fcoml
js
add
scas
push
enter
jmp
fmul
or
push
nop
jne
xor
fucomp
sub
dec
stos
pop
inc
rcrb
or
test
insl
and
sub
push
shrb
mov
clc
lcall
lahf
in
out
fcomps
push
and
push
jae
cmp
lcall
xchg
lds
xor
mov
sbb
inc
cmc
rcrb
jmp
popa
hlt
or
cld
popa
movaps
inc
sbb
sbb
rolb
enter
incl
in
pushf
aad
cwtl
testl
mov
fiadds
pop
ret
mov
subb
inc
cmpsl
stos
outsb
aad
iret
test
int
decl
sbb
dec
aaa
push
shll
fadd
xor
push
shlb
dec
push
aad
ljmp
in
aam
adc
cwtl
fdivrl
shll
dec
loop
andb
lods
fcompl
xchg
dec
mov
int3
daa
add
sub
inc
ret
test
xchg
push
push
dec
inc
das
pop
xchg
pop
mov
rcrb
lock
ljmp
sbb
jbe
cmp
out
cli
aas
ret
call
jg
sbb
in
mov
mov
push
push
gs
mov
cs
cvtpi2ps
repnz
adc
cmp
lods
jmp
scas
popf
fmul
dec
or
movsl
jp
dec
lret
xor
push
js
push
and
mov
call
sub
out
mov
rclb
shrl
and
rclb
in
ljmp
mov
and
mov
ret
adcl
sub
filds
movsl
push
mov
jecxz
sbb
aaa
in
lahf
jmp
std
adc
jmp
sbb
lret
ss
mov
push
in
xchg
ljmp
sbbl
popa
imul
out
fisubl
lods
mov
cmp
popa
leave
andb
inc
jb
movsl
jmp
clc
and
lea
sti
aaa
cmpsb
lods
push
bound
inc
and
and
dec
inc
pushl
mov
xor
ds
jp
inc
sub
lea
xor
sahf
aad
inc
mov
into
mov
incl
xchg
mov
out
add
lods
jnp
divl
add
ret
icebp
pushl
and
and
in
lock
loope
lock
xlat
rcrl
rolb
test
incl
xchg
jl
stos
sbb
ret
mov
mov
push
mov
sub
jmp
mov
decl
fidivrl
add
inc
dec
mov
vmread
jns
outsb
xchg
gs
decl
pop
dec
ds
clc
les
sti
mov
in
bound
pop
or
incl
dec
imul
sti
and
sub
ret
sub
scas
cli
out
adc
xchg
xor
faddl
dec
jmp
hlt
es
sub
out
add
sti
enter
in
ds
lcall
aam
test
inc
cwtl
pop
mov
ss
das
and
lds
dec
adc
push
xchg
push
sbb
ds
idivb
fwait
ljmp
xor
dec
ja
daa
pop
push
dec
jmp
sbb
outsb
shrl
or
push
jmp
cmpb
jo
ss
dec
sbb
loopne
daa
mov
fs
mov
fnstcw
negl
cwtl
insl
shl
sahf
dec
mov
shlb
ljmp
pushl
sar
stos
test
jno
jg
or
insl
push
push
sub
cmpsb
xchg
inc
std
aam
dec
inc
push
sbb
test
xor
adc
sub
adc
xorb
cmp
xchg
loop
iret
xlat
add
adc
test
cld
ljmp
cs
pushf
mov
inc
push
ljmp
push
push
add
xor
jg
dec
mov
ffreep
mov
int
cmp
lods
ret
push
xor
test
xchg
aaa
cld
inc
loopne
pop
push
or
cmp
dec
gs
mov
mov
dec
imul
stos
inc
gs
ret
cltd
cmpsl
add
push
xor
mov
cmpsl
adc
jge
xchg
inc
mov
adc
lock
xchg
and
pop
inc
aad
pushl
in
in
int
sahf
ja
inc
rcr
stc
sub
loop
sub
pop
in
daa
mov
fstpt
xor
adc
orl
ficoml
mov
cmp
call
shll
xchg
out
pop
push
add
cmp
daa
shrb
aaa
fimuls
jb
add
sub
lcall
decl
rcl
fs
fs
sub
or
or
lock
lcall
push
mov
pop
adc
xchg
aam
call
into
and
test
lret
inc
lock
outsl
xor
jbe
mov
in
out
sbbb
adc
rolb
mov
inc
inc
inc
sub
fistps
jle
cli
icebp
mov
cmpsb
out
push
push
sub
cld
adc
xor
incl
mov
outsl
xchg
aad
push
sub
lea
call
clc
adc
add
mov
ja
shlb
movl
adc
push
jl
aaa
popf
movsl
add
pushf
pushl
int
lea
shl
sbb
or
fists
mov
sbb
push
fndisi(8087
enter
std
stos
mov
pop
xor
cmp
push
mov
sub
mov
enter
lcall
out
cmp
or
mov
xlat
or
and
lcall
cmp
in
aam
cmpsl
loop
jnp
jp
xchg
jne
addr16
das
xchg
xor
lahf
lret
push
pushl
adc
sub
sbb
cmp
push
pop
cmpsb
jns
mov
out
call
add
pop
dec
xchg
mov
mov
xor
scas
sti
push
push
mov
lods
rclb
add
popf
mov
out
lcall
subb
jns
adc
pop
or
jmp
bts
pushf
nop
out
mov
push
inc
push
addl
dec
loopne
loop
lret
das
mov
jnp
mov
dec
dec
push
sti
std
sub
cmp
mov
or
and
or
pushl
repnz
sti
adc
incb
cmp
mov
jg
pop
mov
stos
mov
and
cmp
sbb
int
outsl
and
outsl
cmpsb
sbbl
pop
sub
cmp
jmp
cld
in
aas
push
in
mov
pop
sub
push
mov
mov
stos
dec
sbb
clc
fbstp
repnz
std
rolb
push
jge
out
xor
int3
or
fildl
inc
xchg
decl
dec
sbb
jbe
rcrl
pop
cmp
sti
cs
lods
mov
mov
or
push
cs
decl
lret
cmp
jmp
shl
add
unpcklps
call
mov
xor
pop
xchg
ljmp
mov
and
and
sub
fsubr
iret
les
sub
cmp
mov
repz
roll
add
mov
andl
rorl
scas
lret
leave
movsb
inc
aaa
int
aaa
icebp
test
pop
loope
imul
shlb
sbb
sar
mov
adc
mov
mov
jg
pop
mov
jno
pushl
mov
adc
lock
decb
in
rcrb
pop
add
cli
ljmp
or
cwtl
cltd
and
mov
hlt
sbb
scas
xchg
sub
sub
pop
stc
incl
lahf
fdivl
arpl
and
clc
add
xchg
ret
loop
into
adc
and
pushl
mov
push
xchg
and
and
cltd
out
rorl
test
mov
xchg
add
jo
sbbb
mov
cli
add
imul
mov
sbb
lcall
jle
fistps
int
jne
rcl
scas
xchg
pop
ljmp
adc
lods
or
out
and
or
aam
mov
mov
mov
aad
mov
dec
int3
cmpsb
div
pop
out
inc
cmpsl
es
lcall
and
out
jne
jnp
in
add
out
sbb
push
xor
fidivs
sub
ljmp
ja
adc
xchg
adc
decl
push
push
mov
incl
push
jmp
cmp
std
mov
pop
jae
gs
sahf
loop
hlt
pop
call
sub
dec
aad
insb
adc
push
or
mov
out
inc
lods
dec
sbbb
mov
iret
sub
clc
scas
out
loope
outsb
int
mov
dec
ret
insb
fadds
pushl
cli
mov
int
mov
xchg
testb
test
call
cmp
fnstcw
lds
mov
es
call
pushf
cmp
lcallw
xchg
mov
jae
mov
push
aam
push
adcb
sub
adc
cld
incl
mov
shlb
ret
xor
xchg
scas
stos
nop
cld
pop
push
int3
xor
cmp
jae
adc
pop
cmp
sub
les
pushf
and
bound
call
mov
jg
mov
xor
fcoms
mov
outsl
and
dec
mov
jno
push
les
jle
and
mov
mov
outsl
add
test
lock
decl
in
sub
fwait
xor
sub
inc
pop
ja
sbb
mov
js
or
xchg
mov
ret
jge
roll
pop
mov
mov
xor
int3
mov
call
adc
mov
mov
jmp
mov
adc
std
out
lahf
mov
imul
push
insb
decl
mov
xor
test
cmp
push
or
nop
negl
push
popf
insl
push
aam
push
inc
xchg
je
jns
adc
adc
xor
decl
xchg
shll
push
mov
or
pusha
cmp
jo
push
xchg
dec
mov
inc
jb
aas
xchg
icebp
mov
cmp
fstps
roll
add
fdivrl
xorl
jmp
add
sub
cltd
fsts
aam
aad
loop
pop
int
jl
cmp
lret
icebp
xor
xchg
lock
jmp
shr
add
mov
out
adc
sub
mov
jns
push
mov
fsubs
je
pop
xor
adc
xchg
xlat
xor
cli
call
fdivp
in
or
ds
lods
or
xchg
adc
lcall
dec
insl
xchg
fwait
mov
outsb
stc
adc
outsb
pop
in
add
mov
pusha
dec
scas
jns
imul
stos
imul
xor
add
incl
adc
jne
mov
or
jne
jmp
add
fsubrl
aaa
mov
or
mov
out
push
imul
xor
sub
imul
cmp
arpl
mov
xchg
shl
jnp
lahf
je
pop
fs
movsb
std
jg
frstor
xchg
mov
sub
xchg
sub
cld
mov
iret
stos
push
fdivr
call
in
fisttpll
test
stos
push
sbb
repnz
adc
sub
sbb
sar
ljmp
test
sbb
outsl
ljmp
ja
test
adc
or
lret
push
push
xacquire
cmp
mov
inc
rclb
pop
dec
dec
jl
int3
jnp
add
or
add
call
xchg
jg
xchg
out
mov
inc
insl
and
mov
mov
scas
in
roll
push
sbb
rcr
jp
dec
lret
sarl
mov
inc
push
inc
fwait
sub
mov
lods
lcall
cltd
jle
jo
mov
jbe
lret
ret
push
mov
mov
in
outsl
clc
jmp
clc
jo
in
sub
cmpsl
stc
and
inc
test
push
lods
mov
aaa
jmp
mov
scas
test
js
inc
fdivr
repnz
or
add
int3
xchg
xchg
popa
into
cmpsl
ljmp
ret
fsubl
pusha
or
or
stos
sub
mov
scas
pop
pop
in
andb
incl
ret
aam
sbb
ds
ret
xchg
jo
movsl
out
adc
mov
inc
push
sbb
add
mov
arpl
xor
in
int
lahf
fs
jl
into
mov
ret
push
daa
cld
outsl
inc
enter
call
jg
mov
jle
sahf
cmpsl
xlat
xor
scas
mov
cltd
mov
sub
mov
xchg
aaa
lcall
mov
pop
dec
fdivr
mull
sbb
imul
push
inc
mov
repnz
cmp
mov
dec
push
sbb
in
std
cmpsb
lods
cld
icebp
scas
nop
dec
leave
push
sbbb
cltd
push
popa
cmp
lcall
lcall
jecxz
cmp
sbb
pop
dec
push
push
ret
pop
divl
pop
lcall
lea
mov
or
push
cmpsb
and
pop
mov
xchg
sub
stc
mov
fisttps
mov
mov
cld
fisubl
incl
cwtl
popa
sbb
xor
lret
mov
mov
cmp
ljmp
xchg
mov
bound
addr16
sbb
cmp
stc
cmp
pop
pushl
std
jle
int
ds
sub
mov
pushl
aaa
mov
sbb
lcall
mov
aam
or
or
out
xchg
sbb
lock
add
mov
dec
mov
and
dec
jecxz
lret
lahf
and
jae
fcomip
repz
xchg
mov
jb
and
xchg
ss
jne
leave
rcr
inc
scas
pop
ljmp
sub
inc
inc
xchg
loopne
cmp
testl
jg
test
xchg
mov
sub
adc
out
imul
in
inc
xor
mov
les
movsb
std
jb
ret
std
loope
mov
decl
rcrb
rcrl
dec
int
add
test
gs
push
mov
cltd
je
mov
mov
sub
fabs
jl
mov
incl
shll
test
mov
fldcw
and
mov
cmp
inc
add
incl
scas
push
leave
mov
and
xor
lcall
mov
int
scas
scas
cmc
jo
push
pop
xchg
loop
sti
mov
rcrl
call
cmp
or
xor
cmpsl
insb
or
nop
popf
cs
push
outsb
mov
and
movsl
inc
scas
out
mov
movnti
push
jb
pop
sbb
jns
fcomip
mov
fisubrl
out
adc
lds
jae
and
adc
out
shll
int3
nop
nop
ret
clc
call
insl
mov
pop
mov
nop
mov
mov
loope
fcomps
xor
fcomip
out
adc
out
pop
cmp
pop
aaa
push
out
stos
fidivl
pushl
pop
test
mov
in
jnp
and
cmp
mov
jmp
icebp
lds
js
ljmp
inc
addr16
incl
lcall
sbb
popf
sarb
je
and
add
jmp
jmp
imul
push
add
lret
pop
fcomip
lcall
insb
imul
gs
out
imul
mov
sbb
fcomip
mov
mov
push
gs
lret
popa
movsl
cld
adc
pop
mov
and
jmp
inc
roll
ret
adc
stos
xchg
ja
std
jmp
cs
shlb
movsb
fisubl
inc
and
js
lods
sbb
scas
scas
xlat
add
sbb
push
sbb
repz
add
adc
adcl
cld
or
push
adcb
push
int
test
fwait
jae
push
jmp
cmp
sub
sti
dec
mov
lock
call
repnz
lahf
std
repnz
fsqrt
mov
cmp
mov
decl
pop
mov
sub
inc
mov
cmp
mov
dec
push
pop
shll
cld
das
in
shrb
sti
out
mov
cmp
jecxz
mov
dec
out
aad
decl
aaa
out
jno
mov
or
dec
sub
je
test
leave
in
sar
add
add
jmp
lahf
mov
out
dec
mov
sbb
loopne
das
mov
cmc
jge
stos
lcall
cmc
insl
xchg
xchg
inc
mov
cmp
xchg
push
push
xor
scas
cmp
jmp
mov
mov
mov
in
adc
jb
leave
push
xor
shll
cmp
clc
scas
inc
addl
popa
inc
aad
std
leave
jg
jno
lcall
inc
stos
xor
mov
movsb
mov
push
add
fcoms
xchg
mulb
addb
jnp
sahf
or
add
incl
iret
mov
add
ja
jo
mov
test
incl
clc
pop
fcoms
add
lret
push
pop
pop
dec
orb
and
lahf
push
test
sub
adc
push
sub
popa
jle
jnp
inc
add
nop
cmp
mov
scas
xchg
cmpsl
adc
in
bound
jnp
xchg
movsl
push
daa
add
flds
mov
add
es
sbb
negl
inc
scas
push
mov
and
stos
push
and
push
test
and
mov
imul
push
inc
pop
pop
add
repz
incl
mov
pop
sbb
add
mov
push
add
push
ds
les
push
adc
out
fs
mov
insb
or
lret
imul
mov
push
sub
lret
js
outsb
into
mov
jbe
fldcw
fisttpl
fdivs
mov
stos
pop
stos
mov
jbe
jb
ss
add
jo
sbb
push
mov
push
shll
add
outsl
push
shll
fidivrl
insl
sub
push
push
ret
je
pop
shlb
out
jge
fisttps
add
fwait
inc
xchg
in
movsb
push
add
loopne
fdivs
push
jae
shlb
mov
xor
push
push
add
jne
cmpsl
testb
jb
ret
add
mov
lods
pop
add
push
pop
dec
add
jo
popf
shll
add
inc
jge
pop
ja
pop
aaa
add
push
push
shlb
jge
mov
lret
stos
aas
add
ja
mov
push
xlat
jne
add
ja
push
pusha
fildl
xlat
ja
js
push
clc
in
cmpsb
jge
fidivrl
push
jp
jp
inc
push
fidivrl
lods
fsubrs
sarl
ja
fldl
adcb
jmp
ljmp
fnsave
sub
xchg
shlb
xor
xchg
push
setbe
xor
dec
fisttpl
push
lcall
cltd
cmp
cmp
pushf
cmp
popf
or
popf
aas
push
sahf
inc
push
lahf
inc
lahf
mov
fisubl
push
jecxz
push
imulb
movl
repz
out
push
hlt
clc
stc
cmp
repz
sti
cld
std
mov
ret
jo
add
mov
jae
add
cltd
int3
data16
popa
push
add
pop
xor
add
pop
add
add
scas
inc
push
push
mov
mov
std
fisttpll
nop
add
add
or
add
mov
add
add
pop
or
mov
and
test
test
or
imul
push
sbb
adc
int
push
pop
adc
lods
in
out
lods
add
pop
stos
femms
lods
lods
pop
fcmovnu
mov
push
scas
add
scas
mov
lods
pop
pop
adc
add
and
lods
adc
sbb
outsb
pop
scas
sbb
scas
scas
scas
cmp
jns
scas
sbb
mov
mov
sarl
mov
pop
push
add
adc
mov
popa
add
test
add
and
mov
mov
push
dec
inc
rcrl
mov
mov
pushf
sub
push
and
mov
mov
or
pop
sub
mov
push
leave
pop
or
mov
jg
and
mov
lods
push
pop
sub
es
inc
and
pop
aas
cmp
int
and
cmp
pop
roll
pop
aaa
cmpsb
add
insb
sti
incl
mov
pop
xor
pop
or
or
std
int3
in
push
add
pop
pop
xor
mov
mov
das
push
cs
xor
add
xor
das
pop
push
push
xor
jmp
cs
dec
inc
das
inc
inc
xor
adc
push
xor
push
push
sbb
popa
jbe
cmp
jl
jge
jno
lcall
pushw
dec
dec
cmpb
jo
mov
inc
xorl
lock
cld
jmp
xchg
xchg
xchg
popf
pushf
fwait
lcall
mov
xchg
mov
inc
xchg
push
add
jle
je
insl
xchg
lret
bound
js
imul
cmp
je
sub
sbb
push
jo
add
lsl
inc
insb
imul
dec
sub
aas
outsl
out
sti
mov
jb
mulps
add
push
mov
movsb
dec
and
cmpsb
push
mov
xor
xor
ja
mov
ja
jb
cs
xor
mov
pop
and
push
mov
mov
fstp
jle
and
push
mov
xchg
shr
rcrl
pop
push
inc
mov
cmp
movsl
push
into
inc
add
add
xchg
jp
mov
push
popf
inc
mov
aaa
add
xchg
jno
lret
iret
mov
lahf
push
bound
mov
mov
inc
sar
iret
cmp
sahf
mov
insb
add
dec
inc
outsb
add
xchg
xchg
pop
push
test
insb
ljmp
cmpsb
dec
push
dec
push
movsb
jae
add
jb
shll
or
push
mov
push
rorb
add
lcall
jge
insl
outsb
mov
dec
push
sub
sub
push
add
popf
imul
stos
push
add
and
std
and
es
js
mov
data16
rcl
mov
insb
pop
outsb
push
outsl
rolb
push
ds
jno
add
jge
push
jg
shll
fisttpll
lock
jmp
mov
add
xchg
adc
jle
mulb
add
test
mov
iret
sahf
mov
jb
call
xchg
in
push
jle
or
jecxz
or
fiadds
fnstcw
aad
push
divb
lcall
add
adcb
adcl
jge
sbb
sbb
sbbl
test
test
fildl
ss
mov
push
xchg
nop
and
shlw
xchg
in
xchg
lock
sub
sub
orl
outsb
out
xchg
das
push
insl
mov
cltd
xor
cwtl
push
cmc
sahf
xor
lcall
fwait
cmpsb
pop
cmp
fidivrl
lea
push
addb
pop
cmpsb
scas
jo
sahf
mov
pop
jbe
stos
into
shll
push
jl
push
lgs
int
mov
mov
sarb
push
rcr
rcl
mov
hlt
andb
ret
data16
add
addr16
push
dec
out
je
and
or
pusha
add
mov
mov
femms
or
or
fstpt
sbb
es
push
adc
push
add
add
adc
adc
ds
add
scas
mov
mov
xor
ds
xchg
push
mov
xor
sbb
mov
push
add
add
and
loopne
imul
cmpl
and
lods
scas
add
lcall
jns
nop
cmp
cmp
or
mov
pusha
adc
inc
jbe
orl
inc
inc
jle
cmp
scas
xor
dec
mov
mov
aas
adc
ds
xor
dec
inc
test
fiaddl
cmp
mov
ds
add
adc
ds
mov
ds
lods
stos
test
cmpsl
cmpsl
cmpsb
cmpsl
idiv
cld
add
test
mov
sahf
ds
imul
xor
sub
sub
sub
sub
in
pushl
add
dec
and
inc
mov
push
push
push
push
push
imul
ljmp
push
push
pop
push
push
push
imul
das
pop
imul
cwtl
xchg
pusha
xchg
nop
cltd
mov
mov
nop
test
insl
popf
mov
je
xchg
jns
jle
addl
rcll
hlt
jo
outsb
pushf
sti
lds
aaa
inc
enter
push
addb
pop
pop
mov
add
add
or
jmp
push
add
cmc
repz
dec
mov
subb
xor
filds
mov
xchg
pop
cmp
test
add
mov
add
mov
push
dec
ljmp
mov
repnz
mov
xor
into
gs
jecxz
pushf
push
fcmovu
incb
loopne
popf
add
ret
push
in
lcall
or
mov
fs
dec
lret
sbb
cmpb
xchg
negb
clc
in
sti
out
cwtl
add
cmpsb
mov
test
scas
xchg
js
in
and
out
imul
nop
loopne
sub
sub
xchg
push
insl
fistpl
nop
sub
xchg
xor
xchg
mov
outsb
lcall
leave
jbe
out
insl
mov
negl
fcmove
fst
es
push
lret
adc
ss
push
std
into
incb
negl
xchg
add
test
jg
jle
jge
add
xor
inc
xor
add
aas
bnd
dec
dec
dec
dec
dec
add
pop
add
push
dec
or
push
stc
add
cmp
adc
dec
or
add
pop
in
fstpl
adc
add
or
pop
pop
cmovg
pop
imul
inc
push
dec
sbb
inc
adc
mov
aas
inc
inc
inc
adc
sbb
dec
add
dec
adc
dec
inc
loope
ds
cmp
cmp
daa
and
sub
pop
push
mov
and
add
dec
ss
xor
cs
xor
sub
sub
pop
push
test
mov
addb
mov
mov
pushw
mov
mov
mov
mov
xor
in
inc
add
outsb
mov
push
ds
addl
mov
pop
sbb
and
addb
mov
cmpsl
jne
inc
jo
jbe
call
or
mov
add
push
es
sub
outsb
cmovbe
shll
test
adc
es
cmp
lcall
in
cltd
fadds
in
lock
sbb
mov
xorps
inc
sub
jg
push
pop
aaa
add
orb
pop
test
cwtl
test
cwtl
pop
lahf
xchg
aam
mov
aad
out
cli
mov
or
cli
fists
inc
and
inc
pop
jg
jns
and
cli
orl
sbbl
sti
and
mov
jg
das
sti
mov
in
and
jle
sub
dec
sti
jg
add
mov
xchg
jg
addb
pop
mov
sbb
sbb
cld
nop
push
sbbb
rolb
jg
fadds
std
ja
jg
and
add
xor
jg
xchg
xor
dec
adcl
nop
xchg
incb
or
pusha
xchg
xor
decl
and
add
arpl
or
inc
or
or
jg
mov
pop
and
jg
add
jg
enter
sbb
loope
sbb
jbe
test
push
jg
adc
lea
and
adcl
flds
add
sbb
lods
jle
lret
les
mov
addr16
add
jle
mov
mov
xorl
add
inc
xor
or
data16
inc
loopne
push
jg
adcb
addb
incl
inc
pusha
addb
and
inc
ss
pop
xchg
or
inc
dec
jg
or
mov
mov
mov
ljmp
fisubrs
imul
daa
aas
aaa
pop
pop
outsb
mov
add
pop
jle
js
shll
add
orb
mov
jle
jle
jmp
xor
test
push
dec
xchg
push
out
mov
add
mov
mov
comiss
daa
push
arpl
pop
fldt
pop
push
mov
arpl
out
jp
test
mov
jp
adc
lcall
mov
ljmp
dec
dec
test
test
inc
test
push
lcall
dec
xchg
or
push
ja
out
ds
jne
push
push
jne
pop
push
insl
adc
jbe
out
push
jnp
push
jp
test
decb
js
dec
jbe
outsb
fidivrs
pop
add
mov
je
mov
es
test
and
push
outsb
incl
jle
nop
popf
adc
dec
incl
ss
inc
int
ljmp
cmp
int3
ja
xchg
and
adc
mov
or
xchg
and
ss
push
push
mov
jbe
or
out
mov
fldt
xchg
inc
push
test
pushf
ds
cmp
cwtd
mov
xchg
xor
xchg
shll
sub
sub
nop
daa
ss
jns
call
dec
xor
fs
aaa
outsb
decl
mov
inc
push
jg
pop
fnsave
xor
add
aam
inc
sahf
inc
xchg
test
push
jbe
imul
push
push
xchg
push
xchg
inc
push
mov
inc
pop
mov
divb
mov
add
mov
lods
add
xor
and
testl
pop
pusha
outsl
test
push
adc
xchg
insl
and
cmp
les
pop
or
nop
aas
sahf
xlat
insl
mov
push
orl
lea
repz
push
popf
push
imul
inc
and
cmp
lock
cmp
out
jne
cmp
icebp
add
xor
in
add
mov
inc
sbb
dec
incl
sbb
pop
inc
and
mov
push
mov
fildl
and
hlt
ficoms
sbb
xor
dec
cli
push
idiv
xchg
add
adc
mov
add
mov
incb
add
pop
mov
pop
lcall
or
mov
ds
sub
inc
int3
push
das
pop
cld
decl
push
shlb
in
push
inc
iret
js
pop
daa
std
out
or
xchg
btc
or
lcall
or
jo
sub
mov
lds
decl
mov
incl
les
outsb
ljmp
jmp
test
push
call
inc
xor
xor
sub
inc
inc
ret
sbb
or
jmp
sbb
push
xor
xor
scas
jmp
mov
or
mov
nop
mov
mov
inc
xchg
or
mov
xor
push
iret
jle
adc
aad
cltd
mov
inc
loope
adc
test
dec
push
push
incb
dec
add
adcb
pusha
adc
aaa
incl
mov
movsb
xor
mov
lcall
xchg
or
sub
cmp
add
sti
push
std
pushl
adc
push
add
pop
and
or
cld
pop
and
mov
and
in
call
jg
fldl
cli
idiv
loop
sub
rorl
decl
decl
dec
and
pop
lret
mov
leave
fcmovbe
pop
pop
inc
cmovs
outsl
push
pop
aaa
mov
push
push
push
shll
icebp
push
mov
roll
dec
jnp
mov
sahf
ret
incl
pushl
fisttpl
ljmp
lahf
inc
leave
jnp
push
inc
inc
pop
es
mov
mov
cmp
movsb
dec
push
stos
push
popf
inc
cmpsb
dec
dec
dec
push
dec
out
inc
cs
dec
mov
out
add
and
out
ss
push
rcl
outsb
int
shrb
es
push
jb
xchg
xchg
add
das
push
iret
insl
cmpsb
xchg
and
outsl
movsb
es
je
imul
cltd
notb
push
call
push
and
in
xor
sahf
decl
pop
add
pop
int
repnz
decl
mov
cmpsb
popfw
cmp
aas
decl
adc
push
cwtl
xor
lcall
xor
mov
lcall
xchg
in
insl
xchg
es
xchg
xchg
jmp
decl
xchg
lcall
inc
test
ds
loope
data16
dec
cli
aaa
sub
aad
or
faddl
mov
push
push
jnp
jp
or
jl
sub
cmpsb
jns
jns
jl
push
jge
in
pop
cwtl
insl
jg
es
jbe
adc
fidivrl
push
in
out
dec
push
dec
repnz
repnz
jae
pop
fidivrl
push
xchg
out
mov
jnp
jge
hlt
in
add
int3
outsb
sub
sub
sub
adc
or
pop
add
add
lahf
mov
jns
push
adc
adc
repnz
push
addb
jnp
lahf
dec
es
addl
lcall
pop
jg
and
xchg
out
push
sub
iret
inc
int
inc
out
mov
cli
call
repz
clc
push
idiv
sbb
out
ret
push
jb
sub
jg
mov
icebp
dec
outsb
popa
xchg
je
cld
daa
add
inc
sub
jg
mov
icebp
stc
mov
je
daa
jg
mov
and
loope
xchg
xchg
das
aas
inc
cld
jp
es
xchg
ds
addb
cmpb
push
lea
jmp
mov
xchg
fnstsw
dec
in
sarb
imul
push
xor
jg
jge
idiv
dec
push
dec
adc
fcoml
pop
fsub
pop
push
inc
push
sub
jle
mov
hlt
out
arpl
fidivrl
arpl
clc
jbe
rcrb
sbb
push
pop
push
pop
sbb
push
pop
or
scas
call
dec
mov
clc
jge
into
lcall
push
jns
jg
push
mov
push
mov
jmp
xchg
jmp
mov
push
xchg
xor
test
loop
adc
xchg
jb
jg
xchg
jmp
mov
lret
jg
out
mov
or
test
push
push
fmuls
notb
or
push
xor
cmovno
add
fimull
jp
repz
add
or
aam
hlt
lret
push
or
push
stos
xchg
and
lahf
sbb
xchg
and
adc
push
xor
fwait
call
out
movsl
subl
push
rolb
mov
pop
push
sbb
movsb
std
out
or
push
fcmovnu
dec
lcall
sbb
add
adc
inc
aad
jmp
add
add
mov
add
test
cwtl
loope
or
or
inc
mov
out
adc
shl
inc
push
lock
mov
dec
mov
and
imul
popa
push
int3
adc
dec
add
rcrl
sbb
inc
adc
ja
jae
and
inc
mov
adc
pop
and
divb
push
inc
dec
add
add
or
ficoml
mov
inc
jmp
lahf
jo
das
stos
inc
adc
std
sbb
mov
add
imul
jb
xor
testl
pop
inc
add
addb
movsl
add
fidivrs
mov
adc
pusha
cmpb
int
enter
push
repz
insb
xor
cmpsl
inc
add
lea
outsl
popw
shl
lods
mov
jae
fadds
daa
in
popf
in
jne
ret
popa
shlb
out
mov
inc
xchg
sub
jb
jno
sbb
mov
add
or
inc
sub
inc
xchg
add
pop
add
mov
or
add
xchg
aad
rcrb
pop
pop
movsl
pop
mov
add
pop
inc
sbb
and
fbstp
bound
test
pop
lcall
lahf
push
orb
rcll
jno
outsl
shrb
ss
cmpl
xor
dec
push
outsl
loop
mov
push
pop
cs
mov
lods
sbb
fwait
ljmp
pop
pop
mov
imul
inc
imul
sbbl
inc
xor
lock
push
addr16
lods
ficompl
test
les
stc
inc
mov
inc
sbb
bound
add
inc
mov
lea
arpl
inc
or
push
sbb
arpl
xchg
mov
fcoms
fdivrs
jle
sti
popf
push
leave
pop
and
loopne
mov
aad
cmp
xchg
sbb
and
add
divb
pusha
sbb
mov
jo
je
push
dec
in
and
mov
xchg
sbb
orl
mov
push
mov
xchg
cmp
or
inc
sub
or
add
imul
addl
pop
push
push
fwait
popa
pop
adcl
dec
cltd
dec
and
sub
inc
cmp
xor
adc
or
pop
and
and
cmc
jbe
cmp
sti
pop
lods
push
and
xchg
and
xchg
jge
add
jae
inc
mov
pop
jbe
mov
mov
mov
popf
add
inc
sbb
cltd
fsubrs
and
in
xor
and
mov
adc
jo
jae
xor
inc
inc
mov
xchg
mov
lods
sbb
push
lods
pop
test
push
out
cmp
leave
sub
sbb
adc
sbb
test
pop
inc
incl
ret
sbb
inc
and
popa
adc
jmp
adc
push
inc
jl
mov
gs
xor
add
fxch
js
sub
mov
shlb
loopne
clc
inc
arpl
dec
or
push
es
sub
adc
inc
add
xchg
ret
sub
imul
dec
push
aad
xchg
adc
jo
xor
les
shrb
dec
scas
and
xchg
insl
adc
mov
imul
mov
dec
cltd
pop
jnp
xorb
enter
and
negb
xchg
inc
sbb
sarb
sbb
push
ds
inc
dec
inc
shll
test
rcpps
mov
mov
sub
adc
inc
jno
add
jge
inc
dec
inc
imul
pop
mov
ja
jbe
inc
dec
insb
sahf
daa
adc
imul
fs
push
outsl
jo
sub
cmpsb
adc
fwait
pop
and
outsb
push
mov
dec
out
mov
dec
and
les
jae
outsb
push
dec
ret
sub
outsb
sarl
push
push
es
rcl
push
sbb
fstps
les
std
std
divb
mov
inc
outsl
sub
xor
mov
testl
inc
mov
sbb
ficompl
pop
pop
and
mov
or
push
mov
outsb
dec
add
les
or
stc
jo
dec
xor
int3
shlb
pop
add
add
sbb
mov
xor
lcall
inc
lcall
push
adc
imul
push
shrl
es
cmp
sub
inc
filds
mov
xchg
add
int
or
and
pop
xchg
and
in
xchg
cwtl
mov
mov
fsubs
daa
shll
subb
jo
cmpsl
pusha
insl
fsubs
imul
sbb
pusha
cwtl
data16
add
cmp
les
mov
cmp
add
in
push
inc
enter
dec
xorl
dec
mov
add
xor
jo
inc
pop
xor
lret
jge
jo
cmp
adc
test
das
inc
ss
scas
hlt
mov
dec
out
gs
add
out
insl
adc
and
je
int3
fidivs
in
sbb
jge
dec
mov
outsl
test
pushf
xor
xor
pop
adc
imul
mov
sub
jle
outsl
mov
inc
xor
mov
pop
jo
inc
lock
sub
mov
xchg
xor
in
mov
pop
xlat
or
or
jbe
shlb
xor
ss
mov
lea
mov
adc
and
sbb
call
adc
mov
push
cmpsl
inc
ret
lods
sbb
pop
mov
test
sbb
adc
sub
add
mov
mov
jge
outsb
aad
insl
dec
inc
push
fisubl
sub
inc
push
jo
test
loope
jo
cld
addr16
sub
test
pop
push
arpl
add
adc
outsl
cwtl
jb
inc
addr16
xor
mov
nop
fs
mov
js
jns
sbb
stos
sbb
cwtl
dec
and
inc
cmp
push
mov
movl
mov
daa
outsb
pop
mov
shll
movsb
sub
and
inc
sub
lds
mov
bound
jbe
orb
xchg
mov
push
and
mov
xchg
jb
push
inc
sbb
add
sub
insl
xchg
sbb
sbb
pop
push
or
arpl
xor
pop
xor
jbe
mov
out
inc
test
sub
cmpsl
dec
dec
ja
imul
shll
add
aaa
or
movsb
pop
sub
sub
dec
add
out
rcl
sub
movsl
dec
scas
add
adc
arpl
gs
dec
xchg
lds
into
add
inc
adc
cmovne
cmp
es
pusha
outsb
push
add
inc
cltd
xchg
or
xorb
add
jmp
mov
rcll
adc
nop
add
inc
add
add
lods
int
add
push
add
popl
testl
dec
push
arpl
add
bound
out
or
out
test
bound
enter
pop
gs
push
or
lcall
pop
and
adc
jg
arpl
add
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
lock
add
enter
add
